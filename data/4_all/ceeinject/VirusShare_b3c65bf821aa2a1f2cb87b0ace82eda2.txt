call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
sub
sbb
or
jb
sbb
cmp
or
inc
lods
out
fmull
fmull
insb
sbb
or
jl
insb
sub
sbb
imul
in
lods
fcompl
insb
sbb
or
jl
insb
sub
sbb
or
cld
lods
iret
out
mov
lock
stc
mov
sbb
movd
cmp
insb
ret
xlat
pop
mov
jle
jbe
push
xchg
xchg
cld
fsts
mov
jl
jl
ss
push
xchg
mov
adc
and
flds
lods
stc
neg
and
ffree
insb
cmpsl
lods
aam
test
and
mov
in
arpl
out
pop
inc
gs
mov
icebp
sub
sbb
sub
adc
in
mov
sbb
dec
fsubr
into
mov
mov
xor
mov
ret
pop
dec
dec
or
add
mov
add
mov
ret
and
in
inc
test
cmpsl
mov
cld
call
shrb
jae
jl
insb
sbb
or
jl
insb
sub
sbb
or
cld
lods
in
pushf
fmull
fcompl
adc
adc
pop
cmp
js
mov
mov
cwtl
out
cwtl
jmp
dec
adc
das
cmp
imul
sahf
fnstsw
mov
fcoms
dec
aas
jne
or
sub
sbb
or
cld
lods
in
pushf
fmull
fcompl
insb
sbb
or
jl
insb
sub
sbb
or
cld
lods
in
pushf
fmull
fcompl
inc
cmpsl
xor
mov
dec
push
call
push
scas
ficomps
jne
pop
sbb
xchg
stos
aam
dec
mov
dec
loopne
inc
das
in
and
in
lds
sbb
push
push
into
dec
pushf
pusha
outsl
pusha
sbb
hlt
mov
sbbl
jge
out
xor
clc
pop
xchg
negb
into
or
dec
pusha
cmp
rorl
cmpsb
or
mov
add
insl
es
lcall
out
call
adc
stos
movsb
dec
repz
sbb
jne
scas
cmp
js
nop
scas
ja
push
jae
out
jmp
push
addr16
add
add
nopl
jnp
aaa
push
aas
push
jns
xlat
jbe
popa
push
shr
sbb
and
js
inc
add
aas
dec
pop
or
xor
xchg
pop
vmaxps
mov
cmp
or
cmp
ds
mov
dec
scas
aad
je
push
pushf
cmp
insl
and
dec
mov
push
mov
jle
push
int3
insb
xor
push
inc
lods
jne
sub
jmp
xchg
stos
pop
or
aaa
dec
mov
mov
fiadds
push
fdivrp
gs
mov
xor
cmpsb
push
add
cmp
clc
movsl
inc
movsl
adc
cmp
mov
bound
popa
xor
js
repnz
lret
cmp
sub
nop
fwait
push
sub
mov
sbb
sarl
mov
add
push
pusha
xchg
insl
mov
fwait
subb
shrb
ret
xchg
icebp
movsl
mov
xchg
pop
adc
loopne
mov
popa
and
adc
bound
jmp
cmp
jmp
mov
and
in
shll
aam
sbb
sbb
lret
aad
arpl
mov
stos
shll
enter
xor
ljmp
repz
cmpsb
push
iret
and
cmpxchg
adc
xchg
jnp
lds
mov
leave
test
inc
into
into
pop
and
or
xor
ror
pushf
sbb
fidivl
inc
rcr
fsubrp
js
stc
outsl
or
mov
mov
rcll
jo
aad
scas
in
add
mov
int3
dec
fwait
sti
and
loop
stc
dec
sub
icebp
adc
ja
add
stos
mov
test
int3
adc
std
add
mov
lock
mov
dec
lret
shlb
push
or
ja
in
adc
mov
test
popf
pop
sub
pop
cs
mov
loop
xor
aad
xorl
les
lcall
mov
aas
mov
adc
cwtl
rclb
dec
mov
lods
jae
cld
pushf
jbe
pop
xchg
adc
pop
or
add
jb
dec
push
data16
pop
mov
mov
sub
inc
mov
jmp
sub
stc
xchg
inc
mov
or
imul
mov
mov
inc
ljmp
push
inc
loopne
cmp
add
dec
push
adc
insb
iret
js
adcb
cmp
sub
or
adc
stos
or
and
add
inc
popa
nop
xor
or
fsubrp
xor
test
sub
leave
imul
test
gs
push
xchg
fiaddl
push
test
hlt
mov
sub
xor
fldl
and
jl
cmpsl
hlt
lret
into
dec
inc
pop
push
jns
icebp
inc
scas
and
lret
and
outsb
das
or
dec
or
xchg
pop
or
lret
push
out
rolb
push
shl
inc
cmp
pop
orb
add
lahf
xor
mov
ret
cmpsb
scas
lcall
ret
sbbb
cli
lcall
aam
cmp
xor
ss
nop
lods
es
std
dec
ret
cmpb
adc
sub
fs
xchg
dec
mov
mov
clc
inc
aad
push
call
inc
loopne
xor
sbb
mov
push
mov
lods
jmp
cmpsl
adc
or
mov
ret
pop
pop
inc
dec
cmp
fwait
push
jg
xor
arpl
sar
andl
or
xor
jle
or
and
rcrb
insl
add
push
jmp
int
addr16
in
stos
test
movsb
cld
lea
push
daa
mov
add
aad
jb
lahf
mov
fiaddl
in
fcoms
mov
loop
bound
int3
mov
push
fsts
pop
lret
xchg
pushf
cwtl
fs
js
std
sub
adc
adc
repz
ret
sub
ljmp
xor
or
and
push
cs
sub
mov
jae
pop
test
movhps
shr
sbb
jne
xchg
mov
ljmp
arpl
iret
mov
shll
sahf
and
mov
adc
jp
inc
out
sbbl
xchg
jno
imul
mov
xchg
xor
push
xchg
dec
xchg
pop
inc
pop
add
or
sbb
push
mov
inc
push
pop
push
and
imul
and
pop
cmp
xchg
pop
inc
and
mov
lret
ljmp
pop
xchg
sub
and
pop
inc
ja
int
call
stos
das
jnp
sbb
push
cmp
and
adc
daa
or
mov
aam
cli
lcall
movsb
mov
sub
and
and
jns
js
inc
cmp
repz
inc
cltd
cmc
mov
std
mov
nop
jecxz
inc
cmp
imul
sub
int3
xchg
cmp
pop
or
loopne
movsb
sbb
shll
push
scas
cmp
jecxz
add
and
shl
call
mov
fadd
xchg
es
arpl
sbb
rclb
call
mov
lock
mov
add
xor
adc
push
or
or
push
int
mov
inc
ds
imul
cmpsb
push
les
cmp
pop
mov
ds
or
fcompl
xor
push
gs
jg
mov
stc
dec
hlt
xor
jb
dec
cmpsl
cwtl
shlb
sbb
sbb
mov
fisubrs
pusha
cmpsl
jno
push
and
pop
imul
sahf
mov
pop
mov
xchg
push
push
neg
imul
cmp
mov
outsl
push
mov
pop
sbbl
std
out
inc
cli
adc
dec
xor
mov
inc
in
mov
xor
test
mov
stos
loopne
xchg
and
data16
sbb
xorb
std
popa
add
mov
enter
bnd
fs
in
scas
jg
clc
lods
lret
in
int
xchg
pop
lret
pop
fidivrl
fwait
jecxz,pt
fcomip
int
mulb
test
jl
loop
adc
test
imul
movsl
mov
and
or
xchg
pop
add
dec
push
jne
leave
shll
nop
filds
adc
inc
xorl
lret
sar
dec
adc
pop
xor
jno
pop
pop
imul
scas
sbb
xor
and
sahf
outsl
pop
aad
fisttps
push
insb
push
xor
ljmp
aad
fsub
pop
or
cmp
mov
loopne
es
add
lcall
bswap
xchg
es
repnz
add
push
lahf
cmp
movl
insb
dec
push
adc
add
out
lock
or
adc
neg
dec
dec
and
jg
adc
data16
pop
add
or
gs
ds
jmp
fs
ss
shlb
cli
aas
pop
sub
mov
out
in
cmc
sbb
pop
mov
add
mov
frstor
mov
mov
xor
movsb
dec
pop
fwait
or
dec
push
movsl
andb
hlt
repz
cmp
jne
test
jmp
je
xchg
push
test
dec
xor
fwait
adc
mov
dec
xor
cmp
movsb
push
adc
daa
popa
loope
ljmp
push
shr
test
xchg
adc
movsl
movsl
jne
iret
sbb
pop
lcall
mov
pushf
mov
dec
popa
test
inc
mov
stos
push
mov
mov
daa
pushl
mov
mov
stos
push
lret
xor
mov
mov
flds
xor
mov
jl
pop
dec
mov
dec
cld
dec
imul
in
jne
aaa
je
scas
test
imul
daa
mov
sahf
or
xchg
jb
cwtl
in
inc
dec
dec
ret
pop
xor
ljmp
push
dec
mov
cs
lahf
in
ror
xorl
xor
loop
fld
jne
adc
popa
enter
arpl
pop
fiaddl
stos
nop
dec
out
lds
sti
or
sbb
or
jae
inc
shlb
xor
jmp
stos
mov
sbb
cmp
lcall
adc
jae
mov
or
mov
adcb
out
incb
dec
sbb
adc
lds
adc
in
add
jb
push
add
xchg
jl
call
mov
adc
xor
das
test
mov
cmpsl
or
dec
inc
adc
mov
push
add
nop
bound
gs
mov
lds
dec
mov
jns
cmpsb
xlat
xchg
cmc
pop
xchg
push
lods
cmpl
scas
jo
cmpsb
jecxz
push
inc
sub
repz
mov
out
jg
imul
pop
inc
fwait
rcrl
adc
xor
leave
mov
int
pop
cltd
mov
adc
cwtl
lret
mov
jns
and
stc
mov
push
mov
mov
mov
fcomps
and
inc
push
sahf
mov
pop
mov
adc
sbb
inc
jae
iret
mov
imul
mov
test
data16
adc
das
pop
clts
lock
lret
out
popa
mov
mov
cmp
insl
cmpl
lock
adc
or
xor
or
push
add
movsl
daa
out
sub
push
pop
push
nop
pop
xchg
movsl
adc
or
push
imul
add
cmpsl
xchg
fsubr
xchg
or
lcall
mov
inc
pop
xlat
orl
fistps
call
lods
or
lods
and
jnp
stc
stc
cmpsl
push
jge
sub
mov
je
add
jl
cltd
inc
or
and
mov
call
dec
adc
dec
int
sbb
pop
cmc
mov
xor
mov
or
pop
scas
cmp
dec
cli
adc
sbb
mov
in
mov
mov
cmp
jo
mov
in
pop
mov
pop
xchg
clc
jle
jae
mov
repz
sub
loope
movb
dec
push
repnz
cmp
insl
in
in
push
pop
xor
popf
enter
inc
cmpb
jno
adc
mov
sub
dec
xchg
cmc
cmpsl
cli
orl
mov
jle
and
movsb
adc
je
inc
or
sti
ljmp
dec
jp
pop
push
xchg
jp
inc
adc
sub
xchg
jae
or
mov
ja
inc
cmp
or
outsl
and
dec
out
sub
add
cmpsl
mov
jg
push
mov
imul
mov
dec
aas
fimuls
nop
jbe
fiadds
jns
push
data16
xchg
int
or
pop
mov
jle
fcompl
popf
or
iret
fidivl
repz
add
mov
mov
cmp
lods
sub
push
cli
mov
sub
pop
push
jmp
inc
or
inc
out
xlat
and
sti
add
rcll
jae
fwait
adc
insl
in
dec
jne
mov
jo
cltd
xchg
rorl
jle
std
mov
repnz
xor
jecxz
inc
pop
mov
pushf
xchg
test
into
outsl
popa
das
rorb
mov
push
hlt
jmp
aad
sarb
mov
lahf
hlt
movsl
dec
mov
fistl
es
pop
mov
int
pop
add
push
cmp
mov
or
jg
inc
out
and
push
adc
js
cwtl
cmp
fwait
imul
add
and
jl
mov
seto
pop
lds
pop
sub
popa
or
mov
xlat
pop
ja
mov
scas
movsl
out
repz
mov
daa
inc
sub
and
lds
add
mov
imul
cwtl
dec
sbb
arpl
iret
test
adc
sbb
jle
ret
and
scas
xor
and
xor
adc
sbb
int3
sub
jmp
aad
clc
cltd
jmp
sub
mov
push
dec
cld
out
test
jns
leave
into
mulb
xor
fsubl
xchg
adc
repnz
aaa
test
sub
es
or
sahf
or
stos
leave
aad
adc
push
in
scas
fwait
add
iret
jp
mov
imul
dec
mul
dec
dec
push
sbb
in
shll
fsts
jne
mov
mov
subl
cmp
xchg
xor
mov
scas
test
je
sbb
jg
in
adc
leave
jae
sti
fldl
nop
iret
sarl
test
mov
dec
cmp
das
pop
cmp
and
stos
xor
sub
lcall
sbb
das
or
enter
sbb
lods
in
cmc
jl
mov
sbb
int
jbe
xor
jae
or
aaa
pop
dec
ja
in
filds
in
xor
push
jp
jno
aam
pop
aaa
jns
aas
jp
int3
xchg
clc
push
aas
aam
lret
mov
int
sbb
clc
add
cs
es
int3
fdiv
inc
xchg
sti
test
popf
gs
and
sbb
jns
jne
or
shrl
push
ret
sbb
cmp
scas
push
aas
shl
arpl
pop
jae
shlb
pop
jg
sbb
inc
scas
xorl
cltd
sbb
cmpsl
pushf
inc
mov
clc
ret
mov
lods
enter
xor
mov
push
in
lock
mov
cmc
pop
or
mov
insl
mov
pop
pop
and
outsb
js
insb
scas
inc
fstl
add
push
jne
adc
test
pop
push
subb
fstps
add
or
das
jbe
xor
nop
or
xchg
lods
cmpsl
pushf
xlat
push
push
sbb
dec
outsb
stc
add
xor
aas
ret
lcall
out
ret
movb
lods
data16
mov
clc
test
sub
xor
jne
jecxz
sbb
lret
insl
scas
into
mov
pusha
inc
add
xor
xchg
lods
cmp
adc
push
pop
mov
or
dec
push
fsts
addb
sarl
shlb
sub
fsubrl
gs
xchg
cmp
sbb
jnp
push
fsubs
add
std
dec
jo
pop
sub
cmpsb
sub
mov
stos
out
test
xchg
js
movsl
shrl
jo
rcr
xor
ljmp
xchg
sub
mov
inc
jp
mov
sbb
loopne
data16
divl
push
sbb
inc
pop
cltd
xor
or
mov
push
lods
sbb
int3
push
push
sti
mov
or
sbb
and
pop
aam
pop
scas
cmp
imul
js
dec
mov
cmpl
dec
push
arpl
cli
jg
rcrb
mov
push
jp
jecxz
dec
push
stos
adc
out
imul
insb
mov
sbb
leave
sbb
mov
xor
inc
and
adc
cli
jmp
xor
sahf
pop
adc
mov
push
es
stos
push
lea
js
and
hlt
jg
testl
out
sbb
lds
lret
pop
popf
mov
mov
inc
inc
mov
sub
das
adc
push
subl
ds
sbb
bts
repnz
mov
gs
push
into
sbb
insl
std
imul
into
lods
daa
out
int3
dec
xlat
push
inc
les
dec
ret
xor
sub
repnz
mov
push
test
sahf
mov
repnz
ljmp
arpl
or
lods
dec
orb
ss
sub
mov
lods
sub
pushl
fs
ss
sub
xchg
fs
popa
or
push
rcl
outsb
stos
push
jne
rcrl
jnp
ljmp
lods
jne
scas
sub
xchg
ret
mov
jmp
mov
in
sub
loop
iret
fiaddl
and
ja
in
pusha
pop
in
push
xor
cmp
fnstcw
dec
dec
fdiv
nop
in
inc
stos
cltd
outsb
pop
out
leave
pop
dec
add
sub
call
fbld
cmc
mov
cmp
pop
dec
jbe
mov
mov
arpl
xchg
push
sub
mov
lahf
insb
lcall
fidivs
insl
ret
mov
mov
mov
pushl
shlb
jmp
sub
pop
pop
dec
sub
popf
out
je
insb
popa
xor
fucom
test
cmpsb
dec
xchg
lret
cmp
mov
repnz
add
inc
inc
or
ror
dec
cmp
rcl
sahf
divl
notl
movsb
and
sub
pop
call
stos
rcll
sub
fs
repz
mov
iret
js
pop
test
ficompl
push
repz
les
push
or
mul
xchg
dec
mov
out
adc
mov
movsl
lcall
repz
mov
cmp
fnstcw
or
xor
sub
mov
ss
subl
push
push
ret
pop
nop
jns
cltd
xor
xor
into
add
push
insb
lods
mov
pusha
xchg
lcall
xor
inc
in
mov
lods
or
pop
sti
leave
sbb
xchg
adc
fsts
jle,pn
jae
cwtl
mov
cmc
cli
imul
jl
adc
or
int
sub
mov
xor
or
pop
imul
inc
push
fcomps
hlt
jmp
test
or
and
popa
stos
mov
mov
outsl
xchg
pop
loope
lcall
addb
xchg
lcall
sub
seto
repz
int3
test
fstpl
aaa
pop
fsubl
faddp
push
sub
push
adc
adc
mov
insl
and
push
mov
sub
fdivl
rorl
mov
dec
pushf
pop
mov
aam
mov
into
add
subl
pop
jb
mov
ss
shlb
jnp
xchg
push
xchg
xchg
repnz
jmp
cmpsl
and
lds
push
bound
out
data16
mov
push
aas
insl
inc
imul
adc
sbbl
out
movsl
mov
sbb
enter
sbb
pop
rorb
inc
add
xor
add
inc
les
lods
push
xor
add
xchg
ljmp
mov
out
int3
loopne
ja
sub
sub
xor
sub
test
imull
mov
movsl
repz
test
pop
or
xor
repnz
jle
lahf
lods
pusha
je
and
rorl
fnstcw
and
sti
arpl
fsubs
dec
imul
in
pusha
shl
mov
fmul
pop
mov
ret
fidivrl
push
pop
mov
push
ljmp
mov
mov
aaa
mov
js
pop
int
jae
pusha
test
mov
dec
lret
inc
mov
cmpsl
shlb
sbb
jmp
jno
ret
xchg
test
or
lret
dec
mov
jmp
xchg
jo
mov
jne
loop
cwtl
sbb
add
and
or
cmpsl
rolb
mov
xor
int3
sbb
xor
in
sub
sbb
clc
and
cmp
call
xor
arpl
lods
inc
cmp
ficompl
cmc
scas
push
sub
cmp
inc
or
js
or
jp
arpl
repz
lea
mov
jnp
or
cld
sbb
in
add
out
ss
ret
fsubr
adc
push
ret
sbb
sar
mov
or
int3
je
push
jge
clc
fs
lds
push
push
es
cmp
dec
mov
push
sub
inc
inc
sbb
cmc
push
mov
sub
dec
jno
sbb
cli
inc
jnp
mov
push
ss
aaa
test
js
xchg
addr16
jno
ficomps
mov
imul
sub
jmp
in
ss
enter
scas
pop
mov
or
rclb
repz
stc
or
xchg
jns
xchg
gs
imul
adcb
cmc
insb
les
jl
insb
sub
sbb
or
cld
lods
in
pushf
fmull
fcompl
insb
sbb
or
jl
insb
sub
sbb
or
cld
lods
in
pushf
fmull
fcompl
insb
sbb
or
jl
insb
sub
sbb
or
cld
lods
in
pushf
fmull
fcompl
insb
sbb
or
jl
insb
sub
sbb
int3
mov
fmull
and
jae
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
ret
dec
sarl
push
sbb
js
sbb
add
xchg
inc
sub
arpl
jae
add
xor
ret
dec
rcll
jecxz
repz
sub
fwait
arpl
jae
add
xor
ret
mov
repz
push
and
sub
xchg
adc
ja
inc
divb
xor
push
cmpsl
jp
add
push
inc
or
mov
stc
push
movsl
arpl
filds
lret
mov
lret
mov
cli
repnz
or
jnp
insb
mov
cmpsl
mov
jg
push
jb
ret
cwtl
mov
syscall
unpcklps
aam
sbb
movsb
sbb
mov
ljmp
fcoml
rcrb
orb
lds
jecxz
jo
inc
jle
adc
gs
mov
das
pop
xor
subb
in
push
dec
push
cli
lahf
scas
inc
mov
and
sub
xchg
xchg
dec
jecxz
lds
ss
addr16
jae
cld
mov
ret
sbb
jp
push
incb
mov
mov
jae
add
jne
scas
cmp
push
movsl
adc
dec
sub
fisubrl
cltd
cmp
outsb
in
shll
das
cltd
or
or
int3
jg
mov
xor
in
rcll
pop
ss
cmpsl
sbb
or
fiaddl
push
cli
arpl
jae
add
xor
dec
sarl
push
sbb
sub
cli
arpl
jae
add
xor
in
mov
inc
loop
push
hlt
mov
mov
cmp
pop
sub
or
pop
xlat
out
xor
leave
mov
sub
cmp
dec
ss
mov
or
pushf
pop
aas
lods
push
cmp
movsl
pop
cmp
xlat
scas
jae
xchg
test
leave
sub
mov
xchg
loopne
push
pushf
xchg
push
and
ljmp
daa
psllq
sbb
rorl
inc
dec
dec
mov
jns
in
xchg
mov
movsb
push
insl
sbb
popf
cmpsl
sbb
cli
xchg
cmp
adc
push
dec
xor
dec
fdivrl
sub
sbb
jbe
stos
xchg
inc
mov
in
mov
icebp
mov
xchg
test
cmp
lea
or
sahf
adc
or
fiaddl
sbb
popa
icebp
dec
jmp
fcmovb
pop
push
jp
cmp
push
inc
xor
lcall
mov
loopne
jp
jmp
sbb
mov
cli
movsbl
cmpl
add
lods
add
test
pop
jl
xchg
and
jp
push
inc
pushf
decb
or
cltd
insl
in
push
inc
adc
out
nop
and
cwtl
push
and
mov
cli
pop
fisttpll
pop
fwait
pop
out
and
push
add
ret
or
xlat
mov
mov
es
aas
rcrl
ret
shrb
je
lahf
xor
mov
or
mov
mov
cmp
fstps
xlat
popf
inc
push
adc
push
mov
mov
pop
adc
xchg
xor
pop
popf
and
xor
ss
mov
cld
sbb
pop
repnz
mov
es
or
shl
test
add
and
add
xchg
jnp
int
dec
out
fsts
pop
hlt
xchg
insb
sbb
test
decb
push
add
xor
dec
sbb
xor
pop
add
inc
mov
pop
dec
aas
and
xchg
nop
mov
movsl
or
mov
ret
cmp
out
js
mov
lahf
minps
mov
add
jae
sbb
into
iret
ret
cmp
cmp
or
lods
cs
cs
cmpsb
lret
cmp
jecxz
nop
fstps
mov
popf
shrl
pop
sti
sub
call
cmp
mov
fsts
inc
out
jmp
sti
stos
push
out
and
mov
addr16
fwait
sti
or
add
cli
lds
ret
push
pop
shrl
mov
inc
shll
push
or
mov
inc
mov
les
jg
jg
jno
aas
out
cwtl
cmp
push
mov
shlb
lret
inc
repz
push
loope
pop
push
fnstsw
subb
das
popf
inc
cli
je
roll
sbb
sub
push
xor
dec
inc
ret
div
xchg
mov
rcrb
or
pop
shll
and
stos
cld
cmp
aad
cmp
scas
in
and
jb
sar
inc
mov
cmp
nop
inc
movl
jge
loopne
sub
cmc
out
add
adcb
xchg
inc
icebp
add
xor
pop
xchg
addl
add
int
cld
pop
push
repnz
jmp
and
cmpsl
shr
lea
mov
test
stos
sub
fisubrl
lcall
shr
aad
nop
push
sbb
mov
scas
pop
and
test
pop
nop
imul
sahf
fdivs
ja
lock
in
mov
shlb
popa
insb
add
push
mov
mov
add
pop
dec
into
insl
xor
mov
shrl
mov
cmp
add
pop
push
int
cmp
vpor
jns
data16
adc
lds
add
push
shrb
mov
sub
dec
and
xlat
and
fistpll
inc
fwait
adc
push
stos
ljmp
outsb
fdivrs
stos
lcall
and
adc
lahf
inc
hlt
dec
shll
aad
xorl
pop
pop
jmp
loop
ss
mov
xor
in
jae
ja
mov
mov
leave
cmp
xorl
mov
mov
cmp
sub
ret
ja
xor
cmp
mov
jg
loopne
bound
xchg
and
jo
in
ljmp
add
movsb
xchg
mov
or
idivb
je
cmp
push
mov
or
inc
out
inc
lea
cmp
aas
and
mov
outsb
mov
pop
push
outsl
lods
js
or
gs
and
out
add
fstps
xchg
aas
aam
sub
rorb
test
xor
test
xchg
or
adcl
jno
mov
jb
cmpsl
adc
pop
nop
testl
cmp
call
in
jb
cltd
cwtl
daa
sti
pop
inc
inc
cltd
xor
lret
rol
rorl
jg
jbe
iret
mov
mov
rorb
adc
cmp
jmp
lea
mov
shl
mov
lds
stos
scas
pusha
dec
push
xchg
xor
xchg
cmpb
inc
push
sub
push
adc
dec
aaa
stos
and
jl
lods
loopne
call
pop
aam
push
inc
xchg
cmp
mov
push
inc
mov
movsb
cmp
orl
and
inc
decl
scas
cmp
testb
mov
mov
adc
fiaddl
mov
add
sub
or
cltd
jnp
aas
cmpsl
pop
imul
das
cmpsl
out
dec
jbe
cwtl
mov
lret
sub
or
lea
add
xchg
ffree
ds
xor
xor
shrl
out
hlt
cmp
sbb
sti
sahf
inc
xlat
lock
out
sub
push
jmp
fnstsw
cwtl
xor
cmp
add
into
adc
jns
scas
xchg
adc
mov
lret
jecxz
fs
dec
stos
sbb
inc
roll
jg
pusha
outsb
xchg
mov
lds
pop
repz
sbb
adc
add
xchg
call
cmp
cld
sti
bound
cmpsb
mov
sub
jnp
sbb
pusha
mov
mov
in
das
lods
daa
sahf
mov
push
push
xor
jg
popf
dec
xchg
es
outsl
out
in
sti
cmp
dec
sub
movl
nop
fwait
call
cmpsl
insb
cmpsb
sarl
xor
jecxz
fcomp
inc
out
xlat
mov
ds
mov
fisttpl
pusha
push
les
and
imul
push
insl
sti
mov
cmp
and
cmp
insl
xchg
fistpll
pop
jle
addl
das
lahf
mov
popf
jae
cmp
lcall
test
ljmp
or
or
enter
clc
pop
movsl
outsl
push
xchg
jne
loopne
fidivs
sarl
add
fwait
mov
xchg
inc
mov
cmpsl
push
lods
cwtl
fwait
pop
lahf
dec
sub
adc
and
pushf
outsl
jl
aam
push
xchg
sub
shlb
shrb
data16
push
lods
shll
loopne
frstor
mov
decl
aad
jecxz
movsb
in
push
in
test
mov
push
jnp
inc
mov
add
sbb
or
cmp
push
mov
pop
dec
test
pop
and
add
push
es
loopne
sahf
test
sub
adc
pop
mov
loopne
clc
pop
push
jl
sbb
xchg
sub
cwtl
dec
mov
pop
stos
ss
or
mov
stos
pmullw
inc
jge
nop
sub
pushf
les
pop
loop
add
movsb
cmp
cmp
dec
gs
int3
cs
rcr
sbb
outsb
in
addr16
mov
sub
pop
cmp
dec
test
and
dec
inc
outsb
dec
insb
scas
or
xlat
jbe
push
adc
test
xchg
adc
mov
rcl
xchg
pop
fistl
clc
mov
mov
lret
out
or
call
out
lret
sahf
mov
mov
mov
popf
mov
dec
sbb
lahf
cmp
push
js
aad
bound
xlat
leave
pop
cmp
xor
rclb
pop
and
mov
jno
sub
outsb
mov
rcl
inc
pusha
mov
das
not
int
mov
test
mov
pop
cmc
adc
xchg
add
mov
lahf
arpl
loop
fiadds
adcb
or
aas
adc
xchg
lret
sahf
jae
mov
insl
clc
outsb
rorb
std
ds
mov
pushf
popf
mov
push
movsl
stos
cs
cmp
repnz
fsts
or
and
mov
shll
sbb
addr16
pop
sbb
jmp
test
pusha
adc
mov
jae
scas
int3
sbb
mov
dec
fidivl
insb
xchg
shl
push
rol
and
nop
cs
in
lret
inc
hlt
stos
scas
shll
enter
loope
insb
pop
cmc
or
or
dec
clc
mov
orb
leave
jo
sbb
js
sub
ret
lahf
out
cmp
jnp
push
xor
xchg
xchg
adc
in
mov
loop
and
sub
mov
outsl
test
movsb
iret
mov
jno
jne
xlat
lods
sarb
imul
sbb
gs
xchg
leave
outsb
adc
mov
add
call
mov
ds
cwtl
ds
int
sti
in
stc
adcb
push
xor
mov
sub
por
lds
inc
push
and
cmpsl
sub
aam
cli
lock
jecxz
adc
jns
sbb
mov
in
and
dec
jecxz
adc
jecxz
push
mov
lcall
adc
movsb
cmpsl
jmp
xchg
outsb
mov
repnz
clc
xchg
out
imul
inc
jg
adc
mov
shrb
adc
bound
jbe
insl
mov
jne
add
xlat
aas
pop
dec
sbb
mov
or
or
cltd
xor
xor
test
and
ret
or
cmpsl
in
shr
fisttpll
jecxz
jmp
or
mov
psubb
clc
push
xchg
push
inc
out
pop
jo
mull
push
push
cs
push
sub
scas
cld
into
dec
dec
mov
xchg
add
mov
dec
push
test
pop
pop
jbe
imul
mov
pop
std
xchg
add
enter
push
dec
adc
adc
dec
lret
push
sub
cld
fcmovnb
jne
mov
inc
pop
lret
dec
int
aam
cltd
pop
imull
clc
in
repz
andl
mov
mov
jbe
push
mov
xor
adc
mov
adc
out
std
fildl
push
jmp
pop
and
les
cmc
shrb
inc
outsb
push
nop
arpl
pusha
int
shll
jl
xchg
sbb
add
mov
push
pop
insb
pushf
sub
sub
lock
mov
pop
xor
shlb
std
dec
mov
testl
popl
cmp
js
or
mov
mov
add
adc
fsts
insl
mov
jb
and
out
imul
mov
add
xchg
dec
cld
pop
mov
ds
sarl
call
rcrb
push
mov
out
add
aaa
pop
mov
rolb
mov
jl
pop
div
negl
int
loopne
jge
pop
clc
scas
jge
fwait
je
add
lock
movsl
outsl
mov
stc
push
add
je
scas
out
je
sbb
fbld
ret
sbb
jbe
sbb
and
jecxz
or
mov
push
lret
inc
xor
shrb
dec
adc
pop
xchg
stos
mov
shrl
xchg
shlb
punpcklwd
mov
jne
jmp
xor
stos
frstor
leave
push
not
cmp
inc
int
sub
sub
push
jl
push
vpmadcswd
pop
std
outsl
cmpsl
jns
lods
push
jae
or
push
sahf
ds
icebp
imull
jecxz
lods
xchg
add
ss
lcall
sbb
fldenv
in
dec
in
xor
xor
notb
sub
call
push
cld
or
popf
sub
ret
fadds
xor
jecxz
lret
push
jae
rcr
inc
pop
out
ret
jno
movsl
inc
dec
test
adc
push
movsl
inc
loopne
test
mov
sbb
cmp
dec
adcl
out
pop
mov
aaa
cli
inc
test
mov
add
ficompl
cmp
jl
xor
scas
pop
xor
pop
fisubrs
frstor
jae
adc
adc
fsubs
push
or
inc
xchg
lods
call
leave
rcl
lods
or
adcb
pop
or
mov
cwtl
fsubp
fcmovnbe
jge
call
js
add
aam
shll
xor
lcall
push
xchg
pop
jo
adc
bnd
pop
sub
fstpl
out
test
xor
mov
stc
gs
cmp
fnstsw
mov
adc
xor
adc
and
out
or
or
jmp
repz
mov
pop
mov
xorb
cwtl
movsb
in
test
idivl
sub
cld
loope
call
jp
lock
ret
sbb
addr16
movsb
test
outsl
sahf
call
pop
mov
push
sahf
sbbb
xchg
sbb
rcrb
pop
insl
divl
adc
xlat
out
jns
decl
jmp
cmp
mov
out
mov
xor
mov
push
addr16
or
mov
push
test
fisttpll
jmp
stos
in
cmp
cld
in
push
das
shlb
mov
out
jnp
clc
daa
pop
add
sub
mov
outsl
push
call
mov
ljmp
inc
sbb
test
or
xor
sub
add
xor
sbbl
and
xchg
ret
notl
add
rolb
popa
mov
fsubr
daa
scas
iret
xlat
push
push
and
jge
xchg
icebp
nop
mov
pop
ss
in
sahf
mov
jb
lret
push
and
leave
lea
ja
insl
imul
jle
xchg
jmp
into
cmp
pop
js
add
jae
push
pop
mov
decl
add
cld
cwtl
vphaddubw
jg
cld
insb
in
test
insl
cmp
js
jbe
pop
sbb
inc
push
loope
lods
imul
adc
adc
das
iret
sarl
mov
push
mov
mov
mov
mov
jge
call
sbb
fnstenv
mov
jmp
lret
and
ljmp
push
jl
jae
mov
jnp
in
test
rcrl
push
mov
push
adc
hlt
mov
or
push
jo
pop
mov
add
sbb
out
dec
cmpl
xchg
fimuls
xchg
pop
push
outsb
fcmovne
sbb
shlb
add
and
jge
mov
test
daa
sbb
mov
inc
pushf
je
jno
mov
cmove
xchg
adc
or
xor
push
push
stc
lods
repnz
inc
push
adc
negb
fnstenv
sbb
inc
mov
fsubp
jmp
push
int3
jmp
ret
push
int
inc
rorl
or
shlb
test
leave
jl
and
lods
push
lock
pushf
push
inc
stos
inc
rorb
cmp
xchg
mov
mov
add
xchg
push
xchg
adc
enter
es
pop
dec
cmp
cltd
cmp
sbb
sub
mov
xchg
jg
mov
jb
std
fwait
sub
xchg
daa
cmp
shr
fwait
cmp
std
cmc
pop
mov
cli
test
aaa
mov
inc
nop
in
ret
imul
jae
test
repz
rolb
hlt
or
cmp
push
in
es
sti
cmp
out
pusha
jne
push
jne
repnz
mov
test
lds
push
pop
pop
push
ss
mov
cmp
sbb
mov
lods
rcrb
sub
sub
not
fsts
pcmpgtw
cmc
cli
call
stc
mov
xchg
movsl
lock
mov
lcall
mov
pop
sbb
lods
dec
fbstp
mov
les
pop
dec
push
or
ret
mov
in
jns
in
fmulp
fld
adcb
jl
jl
jbe
jmp
out
pop
pop
mov
arpl
decl
sahf
cs
push
jo
sar
fisubrl
mov
add
fs
sbb
pop
daa
mov
dec
lahf
add
mov
adc
xchg
aaa
mov
pop
xchg
es
lods
mov
rol
and
stos
xchg
fs
push
fwait
dec
push
and
add
xchg
xchg
pop
sub
adc
mov
ja
mov
jle
xchg
dec
adc
mov
dec
mov
inc
loopne
stc
push
mov
mov
or
inc
movsb
lahf
insb
sub
mov
jge
xchg
insl
xchg
nop
cmpsl
jp
jle
sbb
sub
dec
fisubl
add
mov
adc
mov
xor
sti
jle
rcll
mov
stos
lret
sub
outsl
stos
jecxz
ss
push
das
nop
insb
xchg
or
int
outsb
add
inc
hlt
cwtl
js
fisubrl
fs
jae
imul
jnp
sbb
jo
lock
hlt
cmpsb
test
mov
lcall
fsubl
dec
inc
sahf
test
push
jbe
xchg
mov
mov
repz
add
xsave
arpl
ret
fnsave
iret
mov
push
add
subl
cmpl
mov
pop
mov
stc
cmp
cmp
push
pop
lds
xor
pop
lret
mov
aaa
fsubrl
mov
imul
add
dec
add
dec
gs
xchg
mov
or
int3
arpl
adc
mov
pop
int3
push
sbb
hlt
xchg
sub
xlat
inc
in
xor
sbb
xorl
and
leave
cmpsb
adc
decb
and
dec
insl
lock
mov
test
lahf
adc
xor
add
faddp
jbe
sub
pop
arpl
scas
jl
out
lcall
sbb
js
push
add
insl
jecxz
outsb
adc
mov
imul
inc
filds
sbb
movsb
mov
sbb
inc
adc
adc
movsb
pop
dec
mov
cmp
and
sbbb
loop
or
aad
jnp
mov
or
or
sub
or
cmp
jecxz
nop
clc
dec
enter
loope
add
jp
iret
mov
sbb
sbb
ljmp
cs
dec
sahf
dec
lahf
popa
inc
and
cltd
in
mov
cmpsb
outsb
dec
inc
jl
cmpsl
arpl
push
cld
add
push
lret
scas
or
jns
insb
mov
pushf
pop
push
sbb
nop
popa
cmp
idivb
add
mov
xor
push
sbb
ret
xchg
push
cmp
loope
jo
sbb
pop
mov
fnstsw
repnz
push
xor
dec
les
bound
nop
fmuls
movsl
or
cmp
sub
push
fsubp
push
mov
and
xor
outsl
xchg
mov
adc
out
mov
das
cmp
movsb
insl
lret
push
test
adc
adc
sti
popl
push
aam
push
arpl
or
arpl
fwait
or
mov
pop
lret
je
pusha
shl
push
orl
ja
movsb
adc
push
adc
push
jno
cmp
jb
cmp
jmp
insl
xor
adc
pop
in
repnz
pop
bnd
mov
fcoms
loop
xor
mov
xchg
aam
andl
pop
lahf
insb
or
push
stos
xchg
pxor
rolb
mov
push
gs
cmp
inc
mov
jg
sub
xchg
shlb
es
mov
shlb
mov
xor
xor
fsubrs
mov
movsl
add
into
std
sub
addr16
test
ret
lea
push
or
or
and
cmp
xor
mov
test
ds
inc
xchg
das
neg
pop
dec
sahf
pop
jns
sti
jns
aad
jo
shlb
and
popa
pop
cli
jg
outsl
and
mov
mov
popf
out
test
xchg
lret
pop
inc
popf
jnp
lret
sub
imulb
and
cmp
jo
mov
jne
cwtl
mov
fsubs
xchg
fbld
push
inc
and
orl
add
aas
mov
mov
ljmp
movsl
sbb
or
xchg
dec
push
mov
loope
push
ss
call
push
sarl
orl
cmp
lret
arpl
jae
add
xor
dec
sarl
push
sbb
sub
cli
arpl
jae
add
xor
jp
sbb
push
mov
ljmp
arpl
jae
add
xor
push
shll
jecxz
negl
sbbl
cmp
stos
dec
fidivrl
add
mov
in
inc
fcoml
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fadd
xchg
mov
out
mov
mov
inc
adc
data16
push
adc
xchg
xchg
xchg
out
test
rclb
or
ss
data16
push
push
push
bound
fwait
mov
mov
xchg
xchg
cli
cmpsb
in
add
sbb
add
insl
inc
pop
jns
push
sbb
repnz
xchg
mov
mov
cmpsl
lret
jne
jl
mov
fsubr
pop
jmp
fdivp
shrl
adcb
or
mov
in
test
jae
cli
mov
setle
adc
mov
roll
out
pop
add
int
mov
fnstenv
push
inc
sub
mul
xchg
xchg
or
repnz
ss
jp
and
add
and
fwait
mov
sti
arpl
or
mov
xor
aaa
cltd
xor
out
sub
cmpb
jg
pop
sbb
rcr
push
std
xor
push
fnsave
ja
adc
xorb
aaa
inc
xchg
mov
xchg
xchg
loop
jmp
sbb
push
cmp
jbe
push
dec
push
bound
imul
not
lahf
cmpsb
ljmp
jbe
adc
push
push
pop
xor
addr16
and
ja
xchg
aam
out
test
shll
and
inc
sbb
and
inc
jb
jmp
mov
xchg
mov
cmpsb
repnz
inc
adc
data16
push
push
push
bound
jb
add
mov
xchg
xchg
loop
repnz
inc
adc
data16
push
push
push
bound
jb
add
lahf
sti
push
fidivl
pop
fsubrs
or
incl
adc
fists
int
sub
inc
fwait
adc
dec
enter
cli
mov
decb
outsl
shlb
jo
stos
adc
lahf
xchg
nop
sub
fnsave
arpl
aad
push
or
es
xchg
xchg
mov
cwtl
jle
in
sahf
sahf
in
lea
jnp
mov
scas
jp
mov
fadds
mov
shlb
mov
and
addr16
rclb
les
repz
bound
scas
insb
test
xchg
int
cmp
sbb
lds
and
push
leave
jns
outsb
icebp
xor
pushf
adcb
and
xor
pop
xchg
mov
push
fs
add
adc
inc
pushf
cmp
add
pop
cmp
daa
add
inc
in
mov
sbb
mov
daa
push
pop
mov
and
fs
push
inc
loopne
leave
inc
jge
fcmovu
dec
push
pop
cmp
push
mov
into
rcr
mov
int
cmp
ror
xchg
push
pusha
fldl
pop
sub
hlt
dec
push
mov
push
je
fiadds
mov
mov
and
lahf
movsl
mov
push
mov
iret
push
mov
xor
cmp
dec
sbb
stc
into
push
pushf
jbe
out
sarl
stos
mov
xchg
jno
mov
es
aas
shlb
push
add
jae
inc
lods
mov
ret
xchg
aas
push
jb
cmp
xchg
je
xchg
loopne
pop
rolb
ficompl
inc
cs
fisttpl
cltd
leave
mov
lods
pop
adc
adc
xor
hlt
lahf
jle
push
data16
je
xor
push
mov
jge
mov
push
and
out
cli
pop
add
outsb
arpl
add
mov
sbb
jmp
inc
cs
dec
stc
add
mov
mov
aam
mov
mov
rep
add
loop
in
pop
adc
lds
adc
fdivrl
shlb
jb
ja
mov
shlb
add
sub
sbb
jmp
adc
or
add
enter
loop
pop
pop
imull
dec
cwtl
outsb
mov
lret
lock
inc
jle
cmpsb
outsl
stos
lods
xor
leave
movsb
or
xor
loope
outsl
and
and
cs
cmp
inc
pop
in
and
insb
sub
fdivs
dec
stos
and
repnz
cld
cwtl
int
push
stos
mov
pop
pop
mov
add
mov
call
pop
mov
xor
adc
pop
sbb
test
lods
or
sbb
and
ljmp
cmp
pop
imul
sub
leave
adc
mov
fsubs
sub
in
xor
mov
lahf
ss
gs
les
imul
sbb
dec
dec
jae
push
add
fdivp
xor
jb
add
fidivrl
add
mov
testb
pop
shrb
and
in
aas
mov
sub
xchg
push
loope
dec
es
das
and
out
pop
inc
lods
aad
loop
fisubs
test
cmpsl
or
data16
cli
add
xchg
mov
jns
add
jae
jbe
rcl
pop
stc
inc
pop
pushf
push
inc
jl
clc
jge
popa
pop
inc
loopne
inc
cmp
sub
mov
clc
xchg
sbb
and
std
lahf
jg
sbb
cmpsb
fdivp
inc
test
pop
xor
pop
mov
pop
inc
dec
add
cmp
push
pop
sub
or
scas
sbb
das
ja
mov
dec
jmp
enter
add
add
dec
rcr
dec
aam
xor
sub
mov
mov
jmp
movsl
sbb
push
xor
rclb
aas
dec
popf
mov
mov
and
rcrb
out
icebp
in
pop
imul
or
xor
out
lahf
and
sub
or
popf
rcr
sub
pop
in
out
cmpsl
jbe
xchg
frstor
adc
ss
and
fidivrl
loop
fcomps
lcall
sbb
xchg
in
sbb
sahf
dec
loop
inc
jns
int
mov
out
imul
fildll
popf
sbb
out
clc
pop
cmpsb
xchg
jnp
sbb
icebp
les
inc
sub
popa
shlb
pop
sahf
rcrb
ret
push
inc
aad
addr16
leave
mov
cld
push
mov
sahf
inc
shll
data16
icebp
test
js
mov
and
jo
cmpsb
mov
or
mov
aad
jl
lods
pushf
push
pusha
fucomp
adc
xlat
movsb
testl
iret
mov
mov
lret
xchg
cmp
lock
loope
inc
negl
xor
sub
or
cmp
cs
inc
sub
pop
adc
pop
inc
and
leave
pushf
pop
ds
lds
arpl
repnz
cli
sub
fdivrs
les
nop
ljmp
jle
test
fwait
ds
rcrl
dec
jo,pt
mov
pop
stos
push
jno
test
dec
lahf
adc
jbe
pop
sbb
in
sti
and
das
push
inc
inc
sub
fcompl
dec
repz
jbe
arpl
add
jns
inc
jnp
inc
inc
and
cmp
addr16
xor
imul
cli
jmp
dec
pop
xchg
adc
xchg
in
std
shl
xchg
cltd
test
jecxz
xchg
cltd
sbb
in
mov
mov
push
arpl
ljmp
push
push
and
jo
cmpsb
sub
fcmovbe
xchg
sbb
cmp
lcall
adc
push
mov
pop
pop
in
sub
fsts
jl
loope
xchg
jo
push
lock
fimull
mov
xchg
mov
cld
repnz
jg
xchg
loope
iret
lock
pusha
fdiv
mov
add
js
jg
or
xor
jo
cmp
notl
ret
mov
pop
mov
orb
clc
or
in
inc
jo
sub
push
lods
pop
mov
pop
int3
int3
inc
cmp
insb
int
imul
xor
sti
push
cmpsl
repz
sub
mov
into
inc
mov
xor
sbb
test
test
popa
mov
cwtl
leave
repz
pop
pop
fcomps
xor
sub
nop
ficoms
aam
es
cmp
int
and
jae
or
xchg
jle
xor
fwait
mov
pusha
cmpsb
mov
xchg
mov
push
ljmp
leave
mov
ljmp
lret
out
loope
pusha
cs
mov
jecxz
scas
fdivp
aad
sbb
in
leave
mov
arpl
dec
or
or
ret
imul
fistpl
iret
push
jne
or
adc
fs
sub
push
push
mov
xchg
xor
pop
daa
or
orb
or
mov
popa
out
mov
mov
add
aad
lahf
enter
adc
mov
jo
jl
jmp
rorl
addr16
sti
jno
xor
repnz
fs
rolb
xor
cmovne
das
add
xor
inc
mov
and
pop
xlat
pop
clc
lcall
xchg
mov
cltd
inc
xchg
xor
push
js
lret
aam
pop
ljmp
and
cli
push
inc
and
or
xchg
xor
scas
mov
icebp
jmp
push
popa
sub
mov
ficoms
jb
jo
loope
jo
sbb
pop
adc
enter
enter
and
sbb
iret
mov
mov
mov
out
inc
nop
je
and
or
loope
jecxz
test
jmp
dec
inc
dec
sti
int3
leave
iret
popa
repz
test
jno
insl
pop
mov
xchg
xor
xlat
dec
mov
sbb
or
mov
adc
lods
add
dec
hlt
jg
mov
sub
mov
dec
dec
sub
movsl
outsb
in
clc
jp
xlat
mov
sarb
hlt
mov
xchg
out
cld
or
lds
xor
cmpl
not
pop
rcr
dec
outsl
xorl
and
popa
jl
repz
adc
adc
and
aad
js
dec
cmp
dec
and
cmp
inc
jecxz
pushf
push
push
cltd
xchg
push
dec
aaa
ja
loopne
push
shlb
imul
pop
and
dec
jno
call
jl
sub
mov
scas
lds
lods
outsb
daa
lods
movsl
pushf
ret
push
and
dec
mov
sub
mov
repz
nop
pop
inc
cmpsl
fildl
in
cld
jg
sbb
imul
stos
mov
rolb
incb
insb
sahf
jecxz
icebp
mov
fstl
inc
lea
jnp
xchg
adc
test
pop
adc
das
xor
gs
push
ret
into
push
and
mov
xor
inc
push
xchg
lods
popf
jne
adc
jg
mov
adc
mov
loope
cld
inc
test
mov
inc
push
stc
jbe
sbb
cmp
fcmovb
xchg
test
mov
pop
xchg
sub
xchg
jo
push
stc
and
sbb
push
xchg
sub
cmp
loopne
push
pop
test
rcr
dec
out
or
jmp
dec
sahf
stc
mov
popf
and
mov
std
hlt
jb
mov
pop
int
jl
loop
mov
cmpsb
fcomp
test
sub
mov
and
cmc
pop
cwtl
xchg
sub
pushf
mov
mov
lret
push
mov
and
sti
pop
dec
adc
pop
sub
lret
lahf
scas
movsl
cmp
aad
lret
imul
movsb
fbstp
das
repz
lds
jne
arpl
mov
js
dec
sbb
push
scas
lods
out
jnp
sti
sbb
fdivs
push
hlt
pop
fcmovbe
and
and
mov
pop
ljmp
out
lock
mov
or
nop
stos
pop
std
push
and
sub
mov
mov
insl
cld
lret
lock
aad
imul
push
popf
or
push
pop
mov
in
mov
frstor
push
pop
insb
sti
inc
cli
lock
add
dec
popa
sbbb
sub
dec
pop
push
mov
or
nop
jae
or
add
hlt
loop
mov
jbe
js
inc
loopne
push
pop
popf
adc
bound
mov
push
cmp
xor
std
rclb
sbbb
push
int
loope,pn
jns
cmpl
aas
jge
xchg
out
cmp
pop
mov
or
cmpsb
push
adc
cmp
mov
mov
fs
mov
pop
jne
mov
fcmovu
mov
xchg
pop
pusha
jmp
cmc
mov
mov
inc
inc
mov
mov
scas
dec
add
je
jl
sub
shl
adc
test
inc
mov
mov
jo
fcomps
ljmp
packssdw
jnp
push
push
add
add
imul
lea
out
xchg
add
xor
pop
inc
jb
xchg
sub
sub
mov
jle
xor
sbb
adc
insl
stc
mov
xor
pushf
cmp
fdivrs
inc
add
xor
movsl
cmp
fidivrs
adc
int
pusha
sub
movsb
jmp
xchg
jb
mov
loop
mov
mov
repz
sahf
ja
ret
aad
jecxz
cli
mov
sub
adc
sub
repz
inc
fildl
push
mov
sbb
add
xchg
jns
and
sti
mov
out
mov
orl
and
jmp
jne
xor
push
and
jmp
das
cmpb
jmp
mov
fs
xor
xchg
cmp
pop
fdiv
add
into
mov
insb
or
push
add
push
mulb
mov
shrb
jmp
daa
fmuls
mov
data16
sbb
sub
sahf
mov
in
mov
stos
testl
pop
push
jge
mov
mov
popf
mov
sbb
jno
mov
and
cmpl
popa
add
mov
leave
add
push
fiaddl
cwtl
lahf
jle
dec
adc
mov
ljmp
jnp
fistpl
insb
dec
adc
in
mov
cltd
enter
iret
add
addr16
fsubrs
xor
adc
mov
cmp
xlat
lcall
push
cmp
pushf
loope
fwait
in
je
inc
imul
ret
imul
aad
nop
mov
pop
mov
fisttpl
shl
or
xchg
ja
mov
mov
cmpsl
cld
cmpsl
pop
adc
lods
arpl
test
adc
addl
leave
call
out
xor
insb
mov
in
std
dec
arpl
loope
pop
mov
rcrl
mov
cmp
dec
fidivs
mov
cld
mov
mov
pop
repnz
jmp
repz
xchg
push
cmpsb
lahf
out
jge
push
jbe
rcl
sbbb
call
push
lods
sbb
xchg
inc
data16
push
push
fs
fisttpll
add
adcb
cmp
out
sbb
mov
or
sbb
and
xlat
push
pop
in
mov
mov
dec
xchg
aas
rorl
push
roll
dec
outsb
pop
jne
leave
data16
cmp
insb
mov
stos
popf
lcall
lods
bound
lea
cmp
cmp
fstl
popa
and
jb
in
sarb
jmp
mov
dec
or
loop
jo
jae
push
mov
push
sub
sbb
movsl
or
leave
loop
mov
mov
insl
outsl
loopne
shrl
inc
pop
inc
jbe
xorl
insb
push
loop
jp
push
xchg
push
mov
mov
lcall
xchg
out
inc
movsb
ja
nop
dec
std
repnz
dec
lldt
push
cmp
sahf
lea
add
mov
and
push
mov
adc
mov
aaa
adc
inc
ficoms
mov
add
xchg
mov
jge
pop
cli
rclb
xchg
lods
clc
mov
jg
popf
loopne
in
aas
clc
pop
fs
mov
repnz
dec
mov
fmull
xor
in
je
imul
pop
ja
and
xchg
rclb
gs
xorb
inc
insb
rolb
add
std
mov
je
xor
mov
and
pop
mov
xchg
sbb
dec
es
test
mov
test
and
lds
les
fsubs
int3
xlat
fsubrp
sub
out
std
dec
les
push
add
jle
nop
pop
sub
fs
jo
fwait
push
lret
lock
cli
ret
mov
mov
mov
enter
dec
out
je
lds
fstpl
adc
lods
out
lret
mov
clc
add
mov
jge
inc
xchg
sub
pushf
xor
mov
mov
cmp
or
and
ret
daa
cmp
lret
add
inc
sbbb
out
das
add
pop
pop
pushf
sbb
jle
into
in
xor
int3
mov
cmpsl
xor
or
adc
mov
stc
lahf
pop
push
jl
fisubs
pop
mov
out
cmp
ret
negl
imul
or
loop
fisttpll
push
imul
pop
lea
mov
mov
loope
mov
mov
pop
aam
xor
int
xchg
loope
lea
push
fwait
or
fldt
ss
sbb
lods
jl
test
xor
cmp
rorl
pop
and
cmpsb
test
mov
push
fmul
pop
pop
nop
orl
or
imul
sarl
imul
lds
and
inc
pop
adc
repnz
inc
divb
lods
mov
cwtl
repnz
lock
aad
adc
jo
add
xchg
imul
xor
movsb
add
lahf
inc
stos
ja
ja
insl
or
xchg
loopne
mov
inc
mov
test
out
sbb
lret
jge
or
sub
sarb
out
lods
iret
add
out
add
xchg
lea
xchg
sahf
filds
cmp
mov
fbld
pop
ret
mov
xor
sar
adc
adc
nop
mov
pop
popf
cli
add
repz
xlat
ds
fadds
les
sub
mov
cmpsl
shl
sbb
cmp
in
jae
outsb
pop
cwtl
inc
movsl
xor
mov
jb
mov
xor
add
dec
xor
and
adc
dec
pop
push
cmp
movsb
mov
inc
push
mov
xchg
xor
pop
and
and
or
xor
add
sarl
push
mov
pop
inc
mov
mov
sti
icebp
sbb
loop
hlt
adc
pop
jo
xchg
sub
cmpsb
mov
pop
cli
cmpsb
dec
xchg
and
push
clc
inc
cmp
sub
jb
push
loop
mov
jmp
pop
push
cmp
jnp
jne
js
mov
xchg
push
push
movsl
outsb
fwait
mov
ljmp
jbe
cli
out
adc
sub
test
jle
mov
rcrb
movsl
sbb
push
ret
sbb
les
pop
inc
pop
push
in
cmc
roll
cli
jmp
pop
imul
push
lcall
xlat
into
adc
fdivrp
mov
cmp
jne
sub
cmp
pop
push
or
sbb
mov
sbb
jl
push
lods
xor
pop
mov
notb
js
sbb
das
jne
mov
xlat
cmp
jp
cmpsb
jmp
pop
mov
stos
push
clc
addr16
pop
mov
lock
lock
push
movsl
rclb
mov
cmp
xchg
insl
std
dec
mov
xor
insl
mov
es
aad
ss
or
movsl
ljmp
dec
add
gs
and
jle
pop
ljmp
lds
lock
mov
xchg
ja
js
sbb
mov
pushf
sarb
cmc
inc
adc
mov
filds
xor
out
xor
scas
aam
jae
dec
jae
push
sti
insl
in
mov
pop
xchg
pop
fiadds
in
arpl
xchg
mov
fld
adc
ffree
dec
fmull
and
in
cmp
scas
jp
pop
test
adc
fs
and
dec
push
jb
in
inc
add
loopne
ljmp
enter
aad
xchg
inc
xchg
ss
test
aaa
xor
mov
add
loope
cli
xchg
mov
ror
rorb
insb
cmp
mov
fcomps
add
cmp
push
pusha
push
mov
push
test
add
mov
push
pminub
adc
aad
js
mov
cli
cmpsb
pop
je
sub
jnp
xor
mov
arpl
xchg
push
or
dec
aad
fmull
xchg
jl
and
bound
jo
mov
icebp
cld
cld
push
pop
cltd
fwait
dec
ds
xor
test
sarl
pop
repz
ret
mov
fidivs
aad
std
pop
push
cmp
dec
or
cs
push
mov
rcr
xchg
lret
imul
sub
rcrl
xor
and
mov
mov
cs
mov
stc
sbb
add
pusha
cmpsl
or
xor
dec
mov
lods
adc
in
push
jp
adc
test
les
mov
xor
adc
xchg
rcrb
int3
shll
loopne
cmp
dec
adc
icebp
in
aaa
repnz
or
jle
and
xchg
shlb
dec
dec
xchg
or
jmp
std
fcompl
icebp
idivl
insb
mov
or
pop
xlat
mov
into
sub
into
aas
jp
push
jp
insb
mov
enter
push
unpckhps
cmpsl
mov
pop
subb
xchg
xor
cli
jg
pushf
in
adc
add
hlt
inc
lock
mov
int
or
cmpsl
xor
sbb
je
in
mov
add
jecxz
stos
lret
cmp
adc
or
div
ja
pop
mov
cmpsb
gs
pop
mov
clc
pushf
add
pop
push
sub
jecxz
pop
cltd
ss
addr16
jo
nop
aam
mov
int3
pop
sbb
add
rcrb
mov
mov
in
xchg
dec
sub
inc
shlb
jge
cld
jbe
loopne
arpl
cli
mov
sub
jno
call
pusha
lea
push
mov
ret
xchg
loop
repnz
inc
adc
data16
push
push
push
bound
jb
add
mov
xchg
xchg
loop
repnz
inc
adc
data16
push
push
push
bound
jb
add
push
mov
xchg
push
loop
repnz
adc
data16
push
push
push
bound
inc
ss
cmpsb
xchg
out
test
rclb
std
inc
in
cld
mov
add
xor
add
adc
inc
inc
sbb
pop
push
sti
movsb
ljmp
in
hlt
mov
mov
jp
push
pop
add
adc
sub
or
ljmp
xchg
aam
cmp
push
or
add
jecxz
leave
mov
movsl
lds
adc
lahf
imul
adc
push
adcb
inc
cmp
jne
mov
call
lahf
into
lahf
fdivrl
ret
pop
es
xor
ljmp
cltd
test
xchg
mov
pop
or
stc
xor
mov
loop
inc
adc
cmp
xor
add
and
inc
sub
hlt
jmp
out
fs
or
dec
mov
xlat
sti
stos
hlt
lds
push
adc
push
cli
sub
fcmovnb
cmp
les
aam
add
ffreep
pop
sub
add
xchg
lcall
cmp
and
dec
push
sub
pop
adc
mov
rorl
add
mov
inc
sysenter
aas
add
dec
sbb
or
cli
int
int3
test
mov
cmpsl
call
pop
or
pop
sub
and
mov
lock
mov
test
mov
gs
push
ss
or
je
inc
or
ljmp
in
hlt
lcall
xor
add
adc
sub
or
ljmp
in
hlt
lcall
mov
and
dec
adc
clc
iret
mov
ss
xlat
cwtl
inc
sahf
fst
jmp
cwtl
xchg
pop
ja
std
ret
jno
jo
in
aas
xor
js
mov
push
cmpsl
int
sub
stc
out
shrl
dec
sub
pop
inc
bound
out
jno
stos
into
sahf
ret
dec
xchg
in
push
xor
enter
or
xchg
movsl
addb
xor
fs
inc
ds
or
stc
cmpsl
pushl
movsl
sub
cltd
in
mov
test
stc
mov
call
mov
mov
repnz
pop
in
or
clc
cmp
pushf
and
add
inc
or
mov
fcoml
ja
pop
jmp
popa
mov
out
or
call
data16
ds
aaa
pop
or
mov
loopne
adc
ficomps
sarl
and
fisttpl
and
outsl
pop
push
jne
mov
test
mov
xchg
jl
je
call
lret
inc
test
or
push
pop
rorb
std
pop
ss
fdivs
xlat
cwtl
test
mov
sub
imul
out
stos
es
out
push
jmp
sub
or
fadds
lods
adc
lods
loopne
inc
and
stos
pop
mov
cmp
ret
mov
mov
mov
aam
or
test
test
into
mov
mov
adc
lahf
and
xor
jns
sti
clc
cs
sar
lret
inc
sbb
stos
dec
test
xorl
xchg
mov
cmp
push
xchg
and
push
aaa
cmp
mov
dec
lret
push
cmpsl
jo
or
lds
out
call
push
stc
ss
fisubrs
dec
movsl
cmp
mov
shrl
mov
mov
popf
or
daa
ljmp
push
add
fldenv
in
adc
lods
xchg
mov
sub
aad
repnz
aam
je
pushf
mov
xor
ficoms
in
lcall
push
pop
mov
aam
arpl
mov
pop
add
insl
repnz
test
bnd
ret
loope
pop
and
mov
fildll
and
adc
add
in
mov
pusha
inc
sbb
sahf
mov
xchg
xchg
enter
gs
add
fcmovnbe
popa
cld
jne
rorb
ficoml
iret
loop
lea
xlat
cmpsb
pop
jmp
mov
rol
inc
clc
cmp
jnp
mov
or
and
cli
ret
iret
mov
ficoms
dec
jmp
outsb
aam
mov
les
enter
or
xchg
mov
jo
dec
lahf
jmp
jl
dec
dec
sbb
std
xor
aam
sbb
cmp
mov
pop
push
jne
std
dec
notb
pop
inc
mov
mov
fs
cmpsl
jg
mov
jno
aas
xor
rorl
sub
mov
jns
pusha
xchg
hlt
adc
lahf
rol
jno
ja
in
pop
sbb
add
mov
add
and
arpl
mov
dec
xorl
mov
xchg
pop
jnp,pt
subb
or
imul
or
in
aaa
fiadds
or
dec
shufps
out
lcall
or
adc
dec
or
mov
inc
rcl
and
push
fstpl
sub
inc
and
test
int3
jb
pop
shlb
inc
jb
push
outsl
or
sbb
lahf
sub
cmp
adc
fadd
insb
aaa
xchg
or
push
sub
in
jns
jno
cmp
push
imul
cmp
pushf
addb
mov
enter
dec
xchg
sahf
or
jmp
das
or
scas
repz
pop
in
divb
mov
lcall
stc
pusha
inc
arpl
test
adcl
ss
cmp
mov
mov
pusha
push
popa
or
sti
ljmp
dec
loopne
out
add
xchg
push
mov
sbb
aad
push
fcomps
rcll
test
mov
mov
in
cmc
je
pop
dec
inc
test
jno
jne
mov
dec
sbb
and
lahf
call
les
test
js
jle
dec
stos
cmp
fs
cmc
mov
sbb
ret
add
movsb
int3
mov
sahf
push
dec
popf
adc
inc
das
jae
adc
mov
int
hlt
sub
pop
xchg
mov
pop
sub
jge
cmp
sbbb
loope
push
clc
or
sbb
mov
std
or
jb
cs
mov
dec
lods
cmp
outsl
je
test
xchg
arpl
inc
sub
jns
push
pop
and
mov
jae
or
inc
or
xor
and
loope
pop
lcall
fs
lea
arpl
push
push
icebp
fs
inc
add
movsl
cltd
cmp
xchg
iret
ljmp
sub
int3
pop
xlat
mov
inc
aad
mov
mov
int3
cli
stc
xchg
fwait
clc
lret
fisttpll
shl
mov
inc
lcall
jl
sub
or
xchg
outsl
test
inc
push
ds
sti
out
xlat
dec
mov
out
xchg
inc
push
rorb
punpcklbw
popa
jge
insl
adc
mov
sub
sbb
lea
dec
mov
mov
insl
aas
sub
divb
ret
loopne
jmp
test
dec
push
mov
and
push
nop
scas
fidivl
pop
filds
xor
cmpsb
loop
dec
pop
xchg
dec
xchg
divb
xchg
es
mov
sarl
inc
cmp
mov
lahf
mov
pop
int
jp
push
xchg
xor
fimuls
inc
and
xchg
xchg
mov
jg
in
loopne
shlb
int3
fnsave
subl
iret
sbb
shl
mov
push
cmpsb
cld
mov
inc
into
in
jne
scas
test
pop
inc
out
fnstcw
rorb
push
pop
dec
ror
push
shrl
arpl
push
add
movsb
clc
lock
add
adc
in
js
xor
ret
fyl2xp1
push
push
aad
fwait
stc
lea
leave
pop
dec
or
lock
jnp
xchg
mov
aam
pop
and
jle
test
mov
insb
bound
or
and
xchg
jae
push
dec
subb
pusha
inc
lds
add
inc
je
aam
int3
sbb
pop
mov
int
mov
push
ljmp
call
pop
loopne
adc
mov
sbb
pushf
gs
repnz
mov
testb
dec
sarl
out
xchg
out
pop
fsub
jns
cmp
aas
jecxz
dec
sti
mov
insl
mov
jno
cld
push
pop
xor
dec
movq
popa
fmull
pop
add
inc
mov
xchg
cmp
out
sub
jl
ret
insb
jl
cmc
iret
sub
fbld
pop
cmp
cmp
int3
js
push
or
loopne
mov
out
xor
mov
orl
imul
sar
int
adc
adc
lret
push
inc
shlb
push
xchg
imul
dec
mov
add
ja
adc
std
adc
and
and
jg
outsb
add
call
mov
test
cmp
push
xchg
subb
mov
sub
in
dec
icebp
add
lock
mov
xlat
and
and
inc
sub
add
sub
test
sbb
cmp
es
pushf
add
inc
popf
movsl
popf
fdivl
cmp
sbb
fidivrs
insb
test
and
subb
js
lcall
xchg
push
fs
test
inc
in
faddl
mov
mul
jg
pop
sarl
test
mov
cld
mov
jle
popa
sbb
mull
xor
mov
sbb
loope
sub
ret
jb
or
mov
adc
or
fs
lods
pushf
dec
and
rcrl
cmp
and
cmpsl
aam
loop
or
mov
in
and
pop
xchg
pop
decb
call
pop
xchg
or
jae
popf
in
xchg
push
bound
add
bound
enter
repz
inc
rolb
cmp
push
mov
aad
stos
lea
jle
repz
roll
lret
cmp
push
lds
and
xchg
ucomiss
inc
out
jno
add
insb
pop
sub
daa
shr
jb
subl
shl
lds
sahf
adc
pushf
cmp
sbb
jnp
jecxz
mov
jbe
mov
jg
jmp
lcall
fcompl
sbb
dec
popf
or
inc
mov
pop
xor
xchg
les
scas
sbb
cmp
dec
nop
fnstenv
scas
dec
je
std
dec
pusha
test
aaa
jne
xor
mov
sbb
lret
and
jbe
push
ss
dec
inc
int
lock
mov
in
test
arpl
and
push
xor
adc
inc
pop
jg
push
movsl
sub
mov
fwait
sbb
cmp
sti
xchg
in
cltd
movsb
push
mov
adc
adc
lahf
push
jns
jno
int
push
cltd
jnp
xor
jl
ljmp
pop
sub
shll
repnz
push
ss
cmp
cmp
movsl
div
adc
xor
dec
out
mov
gs
add
mov
jne
push
lret
inc
pop
inc
pop
pushf
or
rcrl
les
add
pop
and
es
mov
out
or
fs
sahf
xor
popl
or
inc
xor
and
mov
sti
enter
shrb
in
xor
dec
loopne
or
mov
jb
loopne
loop
orb
jbe
jb
scas
les
outsb
in
mov
cmpb
add
sbb
jne
mov
ja
jp
rorb
mov
jg
les
xchg
in
enter
lods
repnz
fcoms
movsl
adc
test
in
lea
pop
loop
dec
adc
aas
out
rorb
xor
mov
sub
inc
inc
and
push
dec
out
adc
sub
rclb
jo
daa
sahf
mov
mov
insb
sub
mov
mov
sub
jb
cs
mov
jb
inc
aas
cmpl
lahf
inc
xchg
jns
cmp
jge
scas
scas
inc
popa
inc
andb
sub
out
xor
dec
xor
int3
jbe
add
arpl
mov
xlat
mov
add
and
insb
out
cmp
icebp
adc
cltd
inc
scas
mov
fcoml
aaa
inc
adc
jl
fnstcw
enter
loop
cld
arpl
add
das
sarl
mov
dec
fimull
in
cmpsb
das
xor
sti
or
fdivl
addr16
fcmovnb
add
das
adc
push
xchg
stc
decb
dec
jmp
pop
push
pop
shrb
cltd
push
sti
jno
inc
jle
mov
lahf
out
lods
and
ret
filds
data16
and
or
js
dec
and
sbb
adc
outsb
clc
pop
jb
push
or
inc
ret
ja
out
mov
popf
push
and
inc
ret
push
out
es
jl
ror
lods
push
pop
lret
cli
xor
mov
xor
dec
sbb
fsubl
or
pop
or
enter
add
and
lods
imul
outsl
out
mov
push
decb
sub
xchg
jg
push
xchg
pop
aas
incb
inc
lret
shl
inc
sarb
lretw
xor
sub
pop
jnp
xchg
shl
stc
fistps
aad
dec
mov
push
dec
jno
sbb
mov
mov
xchg
mov
lcall
pushf
mov
outsb
push
push
or
sub
nop
push
js,pt
xchg
xchg
mov
addr16
xchg
cmp
push
mov
xchg
cmc
mov
or
sbbl
cwtl
mov
add
scas
sub
sbb
or
or
repnz
inc
push
daa
xchg
enter
cmpsb
shl
fimull
push
dec
test
dec
or
in
clc
adc
dec
hlt
xchg
das
std
mov
sbb
mov
pop
loope
or
or
mov
scas
hlt
xorl
aad
stos
test
lea
inc
js
cmp
stos
xor
pop
dec
hlt
inc
flds
bound
rcrb
insb
pop
cli
mov
jge
and
jmp
xlat
pushf
mov
lahf
call
xchg
into
sub
and
sub
xchg
cmp
cmp
inc
lods
stos
stos
imul
leave
jns
sahf
and
xchg
xor
cmp
dec
roll
lcall
cmp
dec
add
mov
cmp
adc
pop
mov
pop
dec
inc
je
cld
push
jno
int
jne
test
push
rorb
jmp
fbstp
pop
or
and
sub
subb
adc
sub
inc
fmull
cmp
call
insl
in
lods
sub
jo
xor
rcll
arpl
ds
pop
outsb
mov
mov
xchg
pusha
cvtdq2ps
outsl
mov
sbb
jmp
addr16
std
cmp
jle
adc
imul
mov
fldcw
leave
pop
fnstsw
jmp
sub
dec
fadds
xlat
insb
ss
xor
cli
mov
out
jne
out
imul
pop
sbb
popf
sub
dec
rorb
pop
jb
xor
test
and
repnz
push
dec
addr16
mov
and
int
cmpsb
mov
and
cld
and
mov
sbb
mov
jmp
nop
dec
mov
push
pop
aas
cmp
and
js
sbbb
mov
adc
push
data16
cmp
das
mov
inc
das
inc
lret
icebp
insb
es
inc
fcomps
aam
xor
scas
or
fildll
mov
pop
ds
pop
mov
dec
mov
insb
push
xchg
or
push
in
dec
adc
sarb
popf
fwait
sub
dec
imulb
and
out
mov
imul
andps
testb
cmp
and
pushf
push
mulb
arpl
xchg
sub
jnp
cmpsl
cmp
arpl
lret
xchg
sub
jge
adc
or
sbb
lcall
enter
sub
xor
sub
fsubs
adc
mov
jo
inc
in
insl
clc
mov
and
jb
xchg
jno
in
fiadds
jo
pop
imul
sbb
push
dec
dec
bound
rorb
mov
mov
js
mov
rcl
iret
xchg
xchg
inc
loope
lock
push
in
mov
data16
dec
hlt
outsb
stos
cmpsb
int
jmp
ret
dec
inc
mov
je
out
in
inc
subb
sub
inc
xchg
stos
ja
pop
mov
scas
icebp
fs
fldt
jnp
lret
out
inc
mov
aam
in
rol
adc
add
and
inc
lods
test
cld
or
or
popa
and
fstl
mov
daa
xor
in
repz
mov
leave
test
mov
xor
jle
inc
jecxz,pn
mov
jmp
out
pusha
inc
nop
mov
stos
rep
adc
icebp
push
nop
and
inc
ret
in
push
mov
xor
push
fadd
in
mov
pusha
jmp
sub
xchg
jg
mov
mov
adc
dec
and
call
sbb
cmp
mov
rcll
jbe
cmp
jnp
sub
adc
iret
xchg
and
cltd
scas
sub
sub
sarl
dec
jae
in
mov
xchg
icebp
push
xchg
inc
mov
mov
mov
or
xor
mov
dec
mov
in
fsub
sbb
test
push
loope
lahf
mov
and
inc
inc
adc
xor
lret
jle
mov
dec
sub
jne
lahf
test
pusha
push
cld
jmp
out
sahf
sbb
sbb
loopne
fidivl
mov
xchg
aaa
adcl
or
push
ss
hlt
xchg
and
out
sahf
dec
dec
lret
in
frstor
cs
jae
add
jbe
push
pusha
push
xchg
push
and
xor
xor
aam
lahf
insb
test
or
fstps
xor
pop
cmp
call
fdiv
cmp
stos
cltd
imul
mov
xlat
sahf
push
das
or
dec
push
int3
int
xchg
jp
sub
rorl
sub
int
pop
mov
jo
movsb
xor
movsl
popf
xchg
push
dec
xor
jecxz
psubw
gs
insb
into
cmp
fneni(8087
int
insb
je
cmpsb
and
push
cmp
ficoms
sub
or
pop
mov
inc
sbb
fstpl
push
imul
and
inc
mov
mov
pop
xor
or
sub
inc
dec
outsl
mov
cmc
xchg
inc
cmpsb
arpl
xor
or
push
xor
pop
jl
sbb
push
imul
mov
mov
xlat
mov
and
test
cltd
out
mov
sbb
ljmp
test
sbbl
pop
dec
xchg
and
push
sub
sti
adc
lock
into
gs
pop
add
test
xchg
ss
ret
loope
mov
lcall
sti
xlat
mov
sarb
mov
popl
add
loopne
int
dec
dec
jle
mov
shrb
outsb
sbbl
xchg
lock
mov
es
sti
adc
push
loope
mov
in
mov
adc
lods
in
xlat
mov
adc
xor
loop
movsb
test
add
inc
sub
fistpl
dec
jne
jb
scas
push
aam
mov
jno
pop
pop
xor
loop
daa
push
fdivl
xor
ljmp
enter
pop
test
push
out
mov
roll
xor
push
idivb
dec
cmpsb
lods
fcompl
sub
mov
mov
pop
push
xchg
out
std
mov
cli
jnp
push
or
or
jecxz
mov
sub
inc
mov
pop
cld
pop
pop
sti
mov
flds
cmp
shrb
test
pop
int3
xchg
xor
xchg
dec
adc
jecxz
mov
sub
in
cli
and
jns
int
xchg
xorb
std
dec
mov
loop
dec
lret
mov
or
aam
cmpsl
shl
xchg
fwait
lea
or
inc
cs
addr16
pop
rorl
jns
sub
cmpsb
inc
inc
xchg
mov
adc
xlat
adc
and
popl
loop
shlb
enter
xchg
shrb
mov
cli
adc
mov
call
jne
test
arpl
jp
sub
js
in
call
lahf
add
mov
andl
xor
aas
shlb
movsb
fimull
jns
mov
call
lret
pop
in
ja
jle
bound
dec
aam
lcall
ljmp
inc
stc
push
pop
imul
push
push
cmp
repnz
mov
pop
sahf
sub
inc
pop
lcall
sbb
and
mov
fstpl
pop
ss
lods
fbld
mov
pop
xchg
jg
rclb
jae
loop
sbb
stos
gs
pop
out
inc
mov
stos
insb
sbb
lods
jo
mov
mov
inc
or
push
and
fistpll
jge
pop
or
pop
dec
leave
mov
cmp
inc
call
pop
shl
mov
mov
pop
cld
movsb
mov
mov
dec
sbbl
fisubs
pop
pop
ficoms
cltd
sbb
ljmp
leave
ljmp
shrb
push
inc
sbb
mov
jo
fildll
scas
lret
inc
das
ret
mov
mov
push
decl
mov
imul
mov
push
pop
mov
add
adc
adc
lret
jno
aad
cld
popf
js
sbb
xchg
into
pop
mov
pop
add
shlb
push
mov
clc
lods
adcl
or
add
or
adc
jp
shlb
jns
icebp
imul
push
fcmovu
jp
jmp
mov
ret
pop
xor
cmp
incb
lret
push
sbb
stc
xorb
push
jno
push
mov
arpl
mov
jnp
push
shlb
pop
mov
push
xchg
jnp
mov
outsb
add
dec
push
pop
jg
jns
scas
mov
mov
cli
mov
push
jno
xor
jmp
adc
sub
or
ljmp
in
hlt
lcall
xor
add
adc
sub
or
ljmp
in
hlt
lcall
xor
add
adc
sub
or
ljmp
in
hlt
lcall
xor
add
adc
sub
mov
adc
jecxz
insb
and
cmp
pop
xchg
dec
cmpl
adc
lcall
cld
daa
in
xor
lods
arpl
cmpl
sbb
or
cmp
sub
fcompl
int3
add
xor
and
lods
arpl
lcall
or
cmp
sub
fcoml
out
and
pushl
incl
lds
fildll
les
sbb
xlat
adc
dec
divb
jmp
adc
jmp
mov
mov
cmpl
xor
or
sbb
in
inc
std
add
fmul
xor
mov
andb
test
mov
in
pop
imul
aas
jae
es
int
jl
dec
imul
shl
shll
sub
sub
inc
std
sbb
outsl
mov
inc
mov
jae
push
leave
jl
dec
xchg
xlat
jecxz
sub
sar
mov
out
cld
jno
addr16
lods
out
insb
mov
inc
dec
xchg
sub
pop
xchg
repnz
fwait
jnp
imul
fbld
lahf
test
stos
insb
mov
cmp
sub
fcoml
int3
sbb
sub
cmp
lods
bound
xchg
das
icebp
cmp
sub
jns
arpl
lods
jl
add
ss
fstps
cvtpi2ps
cmp
pop
shrb
jns
imul
adcl
inc
aad
pop
cmp
or
pop
loopne
ret
cmp
sub
fcoml
int3
add
xor
and
lods
arpl
cmpl
sbb
or
cmp
sub
fcoml
int3
add
xor
and
lods
arpl
nop
loope
adc
insb
cmp
pop
inc
sub
addb
shrl
xchg
lcall
testl
sub
or
sbb
sbb
mov
or
fsubl
aaa
pop
pop
pop
test
jnp
push
xlat
xchg
stc
orb
icebp
adc
movsl
pop
xchg
mov
pop
std
push
mov
mov
cmpsl
xor
add
test
jmp
lea
adc
and
jge
in
dec
lods
out
jp
pop
test
faddl
cld
rcll
test
test
xchg
cmc
jmp
push
loop
shrb
pop
rcl
pop
jo
xchg
mov
mov
ret
lods
cmpsb
adc
xchg
shrl
out
pop
loopne
test
sub
mov
outsl
shll
jge
adc
ret
jecxz,pt
adc
xor
rol
clc
xchg
into
push
pop
cmp
mov
pop
sbb
lods
push
mov
or
jmp
or
movsl
and
test
int3
dec
int
jle
sbb
inc
add
test
daa
sbb
jmp
jbe
add
fdivrl
cmp
dec
jb
sbb
fisttps
sbbl
subl
aad
mov
and
fs
xor
in
and
rcrb
mov
ficomps
and
lds
jnp
popf
jns
and
adc
shlb
and
mov
in
fcoml
aaa
cld
lock
int3
xor
jno
jg
pop
xor
adcb
lock
pop
aam
movsb
out
mov
or
inc
xor
repz
icebp
mov
xor
xor
test
test
gs
in
fnstcw
pop
adc
mov
shr
insb
psubusb
sbb
mov
aaa
dec
cmpsl
fnsetpm(287
loop
jl
icebp
push
mov
dec
inc
jmp
insl
mov
xor
xor
test
rcll
movups
arpl
mov
sbb
adc
add
jno
mov
push
popa
jle
pop
iret
repz
cmc
jnp
in
mov
jo
fisttps
and
mov
mov
fcompl
adc
out
cmp
sub
jl
mov
push
sub
lcall
mov
mov
push
pop
scas
scas
jl
imul
sub
adcl
int3
fmul
daa
lds
rclb
fidivrl
cmp
cmp
xor
movsb
jnp
and
or
pushf
fldenv
data16
insb
ret
add
adc
xchg
sub
add
mov
insl
jbe
aas
push
fistpl
xor
xchg
test
dec
dec
mov
ss
out
mov
popf
mov
lds
cmp
mov
cli
jl
fidivrl
mov
inc
inc
cmp
add
inc
mov
andl
add
mov
shrb
push
push
fninit
and
mov
shrb
loope
scas
sub
push
popf
ljmp
outsl
lret
jne
loope
inc
push
mov
lods
addr16
lods
fsubr
or
mov
shrl
or
sbbb
mov
xchg
push
gs
pop
jge
mov
mov
stos
push
sub
sub
and
jmp
xchg
mov
push
jae
jge
add
push
or
and
pop
out
out
push
fisttps
pushf
mov
mov
rcrl
js
pop
loope
out
ss
dec
jb
sti
fcoml
inc
lcall
jge
das
in
add
cmp
adc
sti
xchg
lods
popf
cmp
cmp
dec
ja
add
sub
inc
imulb
out
subl
ficoms
into
push
fwait
jns
jmp
loop
sub
lods
push
js
lods
jmp
cmp
ja
and
mov
dec
cmc
inc
mov
shrb
fcmovu
and
bound
loopne
and
rcl
outsb
fcmovnbe
aad
nop
repz
add
cmc
mov
xor
push
cld
popf
loopne
pushf
scas
sub
hlt
lods
sbb
mov
in
xor
adc
lods
xor
lds
xor
std
notb
mov
dec
mov
sub
sub
sbb
cs
adcl
out
mov
ror
adc
mov
jns
mov
dec
out
adc
cmpsl
jbe
and
mov
pop
dec
sbb
pop
andb
daa
lods
adc
in
cmp
fstpl
push
fisubl
pushf
pop
push
or
dec
in
daa
rcrl
mov
cmc
lods
xor
imul
jno
inc
push
pop
repz
nop
out
inc
push
js
lret
inc
or
xchg
mov
push
aam
shlb
decl
in
sub
mov
xor
inc
mov
outsl
xchg
daa
incl
cmp
sbb
mov
push
fldcw
cmpsl
sbbb
loope
sti
stos
in
loop
mov
xchg
adc
loop
outsb
jmp
jbe
fcomps
and
sbb
orb
cmp
push
daa
adc
je
adcl
dec
test
xchg
pusha
fsts
cmp
daa
out
test
mov
mov
xor
out
movsl
fnsave
push
fistpl
hlt
xorl
xchg
loopne
mov
sbb
pop
mov
dec
imul
loop
lods
in
bound
mull
in
sbb
cmp
pushf
sbb
ss
enter
push
in
push
xchg
inc
mov
imul
jb
out
loop
push
les
in
stc
mov
push
xchg
jb
sbb
aad
inc
sub
aas
mov
shrb
mov
dec
sbb
sahf
sbb
sub
fsubs
push
fcompl
jp
dec
cltd
clc
mov
jg
dec
push
daa
xchg
and
pushf
addr16
dec
inc
das
xchg
mov
lods
jl
sub
imul
fcmovb
push
ljmp
lcall
xor
mov
ret
mov
imul
sti
test
dec
or
addr16
cmp
dec
jmp
sub
mov
mov
pop
repnz
xor
cmp
sbb
repz
js
imul
ret
mov
cmc
mov
enter
insl
mov
and
inc
lret
jae
imul
jnp
push
sti
movsl
and
int
sbb
fadd
adc
aam
fdivr
sbb
outsl
cmc
xor
sub
sub
sar
cmp
cmp
push
cmc
movsl
addr16
sbb
xchg
rorl
sahf
mov
jecxz
lods
pop
xor
test
push
mov
es
pop
xor
inc
or
or
adc
call
pop
ds
pop
rcrb
aam
mov
mull
inc
add
cmp
or
hlt
stc
lods
pop
inc
pop
jle
or
in
cltd
movsl
cmp
mov
or
pushf
push
outsb
in
mov
cmp
insl
sub
mov
push
mov
int3
mov
pop
js
test
inc
xchg
insl
xchg
cmp
xor
mov
ret
pushf
push
insb
dec
addr16
add
xchg
cmpsb
pop
sbb
add
popa
or
or
adc
sahf
sub
addr16
loop
fs
fiadds
int
mov
xchg
fcmovnb
movsl
jae
mov
enter
or
sbb
pop
test
cld
aas
addr16
ror
bound
lods
fyl2xp1
adc
or
idivl
mov
mov
xchg
xchg
pop
jecxz
subb
push
out
pop
es
jns
sub
testb
push
push
shll
mov
mov
dec
leave
mov
addl
es
xchg
sbb
pop
dec
into
daa
into
xchg
lds
fcom
call
add
jns
push
cmp
filds
adc
xlat
bound
jmp
jge
imul
stos
and
mov
jl
mov
mov
jbe
loope
inc
cmp
mov
mov
test
pop
adc
popa
mov
lds
add
dec
add
aaa
xchg
sub
andb
and
sub
sub
xchg
or
pop
push
dec
jmp
mov
push
sti
movsl
and
xchg
xchg
and
push
mov
mov
jmp
xor
insb
pusha
scas
inc
inc
hlt
sub
push
fldl
testb
notb
cmp
fidivl
jecxz
test
xor
out
mov
add
sbbl
int
or
or
pop
jle
movsl
mov
ds
cmp
insb
je
or
cmpsb
mov
push
shrl
mov
jecxz
sbb
out
or
add
lret
call
ds
mov
dec
adc
test
pop
jae
aaa
call
nop
cmp
cmpsl
dec
popf
mov
rcr
mov
mov
out
jecxz
sub
and
mov
test
outsl
hlt
sub
les
adc
movsl
push
push
das
lcall
int
sarb
xor
push
es
add
test
addb
lea
orl
testl
dec
lds
fistps
lds
enter
sbb
adc
fsubl
push
mov
test
test
mov
jp
mov
mov
dec
mov
xchg
das
into
les
push
into
es
fidivl
adc
xor
adc
add
leave
jl
fidivrs
mov
jns
test
xchg
or
jge
lds
inc
ds
cmpsb
cmp
lcall
inc
test
sub
and
mov
jae
pop
ss
adc
sub
sbb
sbb
jp
cs
js
mov
decl
mov
jae
shrl
dec
les
fdivrl
xchg
sbb
inc
cmp
mov
jg
cmpsl
add
test
mov
loop
sbb
aam
push
shll
xorb
mov
push
daa
or
arpl
es
rol
pop
icebp
mov
push
pusha
shll
mov
icebp
push
inc
fwait
stos
fstpl
mov
ja
movntq
mov
faddl
jge
jl
shll
pusha
pop
cmp
out
insb
pop
pop
popf
stc
clc
jnp
add
push
outsl
outsl
std
pop
je
push
pushf
sub
test
mov
bound
add
mov
cld
pop
mov
mov
nop
stos
dec
lcall
xchg
sub
dec
loop
addr16
add
pop
dec
push
ja
ds
loopne
mov
mov
dec
es
ds
fwait
push
inc
jmp
xchg
jnp
rcrl
xlat
pushf
push
push
pop
pop
icebp
iret
imul
cmp
mov
gs
dec
insb
fimull
cmp
add
orl
push
cwtl
pop
daa
xchg
loope
not
popa
lret
lods
pop
sbb
imul
or
outsl
xchg
dec
fsts
fistpll
frstor
dec
jb
mov
jmp
or
loopne
mov
xor
mov
xor
out
inc
dec
out
iret
sub
cmc
data16
aad
gs
out
inc
push
add
xchg
data16
mov
pop
aaa
mov
das
cs
xchg
sbb
lret
repnz
sahf
std
iret
pop
jle
pop
pusha
push
xorl
les
and
sar
lret
pop
add
cmp
push
in
je
sbb
int
dec
jns
sub
cmc
push
mov
add
xchg
shll
add
mov
shlb
std
cli
inc
mov
in
mov
sahf
add
mov
or
addr16
outsb
sbb
sbb
mov
out
push
ljmp
lret
inc
adc
aas
lds
push
mov
pop
ss
pop
push
scas
add
cmp
mov
je
cwtl
push
out
jp
sub
faddl
pop
fs
mov
push
and
popa
cmpsl
test
and
push
inc
dec
cld
cmpb
enter
mov
sbb
adc
enter
test
cmova
dec
ljmp
mov
mov
stc
test
cwtl
push
jns
and
repz
gs
jge
rcrb
mov
dec
xor
xor
pop
adc
aaa
subb
mov
shll
aam
add
sub
arpl
mov
cmp
sub
add
or
test
dec
mov
cs
stos
hlt
or
fisubrl
sbb
xlat
in
xchg
cmp
arpl
addr16
sbb
jp
jmp
jl
out
in
add
ja
loop
and
mov
sbb
pop
push
and
movsb
cmp
mov
lds
out
loopne
mov
repz
pop
add
orb
insl
aas
sub
push
xchg
sbb
or
mov
adc
xor
mov
sbb
cwtl
shll
xchg
dec
inc
pop
adc
arpl
push
and
jg
and
or
inc
sub
movsb
cmp
lret
aas
jnp
ljmp
jmp
adc
and
mov
addr16
daa
pop
pop
scas
mov
mov
inc
xor
in
cmp
mov
dec
scas
adc
outsb
in
pop
pop
sbb
pusha
shll
fstps
and
bound
int
notb
fldenv
mov
pop
xchg
mov
int
mov
aam
sub
sti
orb
mov
mov
fcoms
jl
daa
jg
and
sub
lods
inc
inc
adc
movsl
es
nop
fnsave
dec
cmpsl
into
fwait
jp
or
mov
movsl
ljmp
pop
dec
push
ret
xchg
fcoms
mov
cmp
xlat
push
les
aaa
dec
js
in
and
xchg
loope
insl
mov
push
sub
sti
in
dec
imul
lods
xchg
jl
jae
sub
lea
daa
adc
cmp
dec
mov
sub
add
call
rcrb
mov
add
mov
mov
adc
stc
ficomps
scas
xor
test
fwait
iret
insl
mov
aas
pop
inc
int
xchg
sub
push
inc
stc
and
das
push
arpl
jne
inc
push
mov
dec
fildl
or
xchg
pop
adc
daa
inc
gs
add
mov
insl
out
das
adc
mov
or
les
jns
daa
hlt
in
gs
gs
push
popa
loopne
repz
mov
icebp
sbbb
cmp
adc
std
jb
xchg
add
popf
xchg
dec
dec
sub
stc
ja
ss
sub
sub
and
lcall
inc
pushf
cmp
xchg
mov
pop
inc
and
js
xor
movb
push
add
cld
shll
mov
push
jmp
insb
xlat
lock
sub
adc
scas
imull
jae
dec
mov
popf
mov
test
inc
cld
fmull
inc
rolb
cmp
add
and
mov
mov
xchg
and
push
inc
lret
dec
jne
jecxz
push
fidivrs
mov
mov
inc
stos
out
sub
xlat
fnsave
in
dec
push
ffreep
fcmove
pop
and
adc
aad
scas
aad
fsubl
das
xchg
pop
mov
sahf
fisttps
call
or
mov
mov
jecxz
fwait
jg
sbb
push
cltd
push
out
daa
cwtl
mov
loope
push
mov
in
rorl
addl
adc
jnp
ficoms
pop
in
sbb
sahf
dec
sahf
or
xor
mov
sbb
or
push
jle
sub
mov
aad
ds
ret
jae
dec
les
adc
sarl
inc
adc
ja
xchg
or
int3
xchg
mov
cld
push
inc
pop
mov
das
bswap
cli
dec
mov
push
push
mov
movsb
dec
pop
in
push
in
fwait
iret
sub
jg
mov
xchg
mov
fxch
out
push
icebp
add
fpatan
pop
mov
jl
sub
cmp
or
divw
sbb
mov
cmp
test
cmp
into
sbb
gs
add
mov
sbb
or
pop
xor
jo
or
mov
aam
mov
adc
cmpsb
xchg
push
popf
cmpsl
jns
in
jbe
xchg
notl
mov
movsb
adc
ljmp
lea
xor
sub
inc
test
testb
mov
dec
add
jns
les
lcall
mov
sbb
call
xor
mov
jge
mov
sub
adc
arpl
push
imul
or
outsb
cltd
and
cmp
data16
xchg
jg
adc
sbbl
add
jle
xor
ljmp
xchg
inc
sub
into
cmc
fmul
repnz
sub
je
xchg
fsts
jecxz
cmp
nop
mov
sbb
repz
mov
insl
into
hlt
xchg
sub
sarl
insb
jns
pop
not
push
pop
dec
fwait
mov
lock
xchg
icebp
add
loop
fidivs
iret
mov
jmp
sub
xor
sbb
dec
jae
out
loop
clc
jp
mov
xchg
loope
mov
or
fdivl
adc
sbb
cmp
xchg
clc
xor
jge
sahf
in
rcrb
adc
js
cs
ret
mov
stos
pop
fisubrs
fwait
dec
aam
dec
sqrtps
mov
pop
add
mov
ret
xchg
xor
movsl
mov
test
ss
ds
mov
mov
and
jmp
cmc
lcall
in
iret
sub
mov
scas
mov
mov
insb
sub
inc
arpl
into
push
xor
repz
lods
imul
fs
mov
jne
cmp
call
rolb
sahf
mov
fsubr
inc
lds
cmp
pop
xchg
xchg
es
fldenv
mov
mov
dec
cltd
rcl
sbb
pusha
stos
adc
push
sbb
stos
sub
xchg
imul
gs
ja
loop
mov
jg
inc
jg
lret
mov
aas
mov
and
inc
test
jo
fildl
push
stc
lret
dec
lcall
adc
dec
mov
insl
xor
cltd
sbb
insb
push
call
add
imul
xchg
imul
iret
mull
jnp
mov
push
in
cmp
mov
pop
fadds
xor
dec
jg
mov
fadds
aad
pop
popf
mov
data16
in
mov
sub
inc
add
sbb
in
inc
mov
adc
fsts
cmp
xchg
cmp
mov
mov
sub
ret
movsb
les
push
nop
shlb
add
into
pusha
inc
or
push
xor
jns
adc
add
fnstcw
out
hlt
xchg
xor
sub
xchg
cld
add
or
lock
in
movsl
fs
mov
data16
insl
pop
or
sub
cmp
sub
movsb
leave
stos
xor
push
mov
pop
cs
adc
or
or
popa
das
push
and
ret
test
lahf
mov
stos
xor
ja
stos
inc
push
dec
shlb
cmpsb
inc
lods
fldl
cmpsb
fwait
cld
jle
jecxz
ljmp
pop
adc
pop
adc
lcall
mov
lock
sub
out
cmovb
adc
dec
mov
adc
jmp
lock
pushf
jno
fwait
mov
fnstenv
dec
mov
stc
testb
out
pushf
cmc
lods
shrb
mov
mov
mov
push
pop
outsl
insb
shrb
add
cmp
roll
push
dec
mov
pop
xor
stos
mov
ret
pop
pop
insl
or
push
imul
mov
hlt
or
push
rorl
add
sub
dec
aam
mov
test
dec
fildl
aam
loopne
out
xor
cmp
insb
out
cmc
add
push
mov
in
aaa
inc
jge
adc
or
fwait
test
inc
lret
lahf
xchg
adc
shlb
cmpsb
rolb
cmpsb
data16
loopne
repz
nop
ror
fbstp
icebp
bound
ret
test
scas
clc
das
js
clc
ja
adc
stos
maskmovq
idivl
xchg
lock
push
shrl
out
stc
adc
inc
leave
mov
fucomp
incb
adc
inc
xor
or
adc
xlat
in
aaa
adc
cs
xchg
cmp
pusha
mov
pop
clc
dec
ljmp
mov
dec
mov
mov
ds
push
mov
test
or
xchg
mov
mov
push
or
inc
test
mov
xchg
les
sbb
pop
jle
stc
inc
xchg
adc
es
pushl
or
pop
and
pop
es
enter
jns
ja
add
jb
fstps
add
std
mov
cld
int
inc
mov
mov
cmp
sub
fcoml
int3
add
xor
and
lods
arpl
cmpl
sbb
or
cmp
sub
fcoml
int3
add
xor
and
lods
arpl
cmpl
sbb
or
jecxz
adc
add
xor
daa
pushf
push
mov
ja
addr16
xchg
dec
xchg
mov
mov
adc
test
jmp
add
inc
or
sbb
mov
adc
test
cli
pop
lret
mov
test
xchg
or
jp
push
pop
aam
and
xor
add
adc
fs
je
inc
ficoml
cmp
and
hlt
push
pop
aam
and
xor
add
adc
fs
je
inc
ficoml
cmp
imul
fwait
cmp
jnp
push
jecxz
bnd
lods
out
dec
push
lods
inc
pop
or
aas
mov
xchg
rcl
adc
pop
jmp
fwait
cli
je
mov
dec
xor
jnp
imul
cmc
mov
je
cmp
add
popa
mov
repnz
sub
lahf
movsb
insb
loopne
test
pop
mov
mov
repnz
xor
outsb
mov
fldl
popa
jmp
mov
xor
lds
aad
sahf
ljmp
loope
fcmovne
aam
in
jmp
cmp
mov
ljmp
jmp
push
pop
aad
fnstcw
lret
daa
mov
and
rclb
sub
loop
pop
mov
jns
sbbl
stos
add
adc
fs
je
inc
ficoml
cmp
in
hlt
push
pop
aam
gs
jge
fs
push
andl
push
sahf
movsb
inc
shrl
test
jle
cmp
xcrypt-cfb
cmpsl
and
iret
popa
js
fs
xor
shll
xchg
outsl
in
lcall
xor
imul
out
sub
je
inc
ficoml
cmp
in
hlt
push
pop
aam
and
xor
add
adc
fs
je
inc
ficoml
cmp
in
hlt
push
pop
aam
and
adc
cltd
ja
dec
lcall
mov
roll
outsl
pusha
movsb
test
adc
fbld
repnz
mov
jnp
int3
push
popf
ror
std
jl
fwait
mov
dec
fs
adc
aas
decb
mov
push
xor
sub
add
in
sbb
pop
ja
ljmp
xchg
inc
cltd
call
adc
bnd
add
add
cmp
inc
push
lret
repz
jae
ficomps
xchg
or
nop
jg
cs
movsb
fbstp
icebp
or
xor
mov
fcompl
mov
cmp
shr
push
cwtl
mov
orb
push
mov
jae
mov
mov
mov
sub
adc
jmp
xchg
pop
mov
cmp
cmp
dec
add
loopne
out
outsb
mov
test
jg
add
mov
test
cmpsb
movb
sahf
jle
or
and
cmc
jle
push
andb
fwait
and
loope
jle
adc
popf
gs
ret
add
pop
xchg
inc
shlb
idivl
or
mov
add
shrl
ret
mull
lret
mov
lret
add
inc
in
sbb
outsb
into
repz
out
lods
mov
mov
loop
scas
mov
sahf
and
rclb
cmpsb
or
fsubs
jl
loope
xchg
jl
les
inc
mov
mov
das
test
inc
sbb
xchg
mov
ss
shlb
lea
inc
pop
mov
lock
push
pop
xchg
aam
mov
stos
jg
push
xchg
out
loope
mov
pop
les
xchg
mov
fs
std
cld
jle
leave
nop
lahf
and
out
dec
mov
sub
push
scas
inc
push
stos
inc
stos
xchg
aaa
int3
loop
jnp
fcmovu
fisttpl
push
and
xor
in
rolb
inc
lods
arpl
cmp
cltd
out
mov
mov
push
arpl
ljmp
push
cld
daa
aaa
dec
mov
nop
imul
xchg
loop
sub
inc
repnz
and
iret
xchg
mov
sbb
cld
dec
out
and
movsb
pop
je
mov
mov
jns
insl
mov
dec
jp
lds
int
sbb
add
mov
je
popa
scas
cmp
pop
or
sub
subl
dec
inc
add
repz
dec
adc
daa
xchg
repnz
imulb
push
mov
imul
aaa
jb
xchg
push
shrl
mov
pop
and
and
inc
xchg
mov
and
jge
jbe
mov
dec
add
sbb
les
insb
clc
outsl
mov
sbb
je
mov
mov
dec
rclb
sbb
inc
das
cmp
loop
ds
push
daa
hlt
mov
and
pop
mov
data16
sbb
xor
aam
dec
push
xchg
cmp
or
call
std
fs
divl
mov
mov
fs
test
test
out
mov
pop
lahf
pop
pop
hlt
xchg
mov
pop
test
lds
lret
daa
push
and
sbb
pop
adc
push
sbb
aas
xchg
and
add
mov
pop
icebp
push
pmulhuw
pop
push
into
imul
ret
cli
out
push
mov
push
pushw
pusha
jmp
pop
mov
mov
xchg
out
push
cmp
mov
cltd
inc
in
daa
ja
jb
aaa
inc
rcrb
xlat
or
bound
push
add
lea
scas
js
in
lds
xor
ds
notl
mov
loope
imul
in
fcmovnb
push
iret
idivb
cwtl
movb
shr
or
push
lock
dec
or
into
insb
pop
lods
add
arpl
cwtl
fcomps
jnp
ret
hlt
sbb
xchg
xchg
sahf
movsb
inc
js
sub
mov
aad
orl
push
cmpsl
mov
int3
daa
fiadds
stc
or
jle
inc
aaa
lods
jns
mov
push
or
sub
cs
repz
enter
or
stos
cmpl
ja
sub
push
movups
fwait
pop
ss
dec
push
stc
push
test
cwtl
xchg
adc
lret
or
cmp
xchg
aas
aaa
in
or
mov
jo
popa
imul
repz
xorl
lahf
aas
jae
arpl
repz
pop
leave
add
mov
sbb
and
xlat
inc
lahf
aas
leave
mov
ret
xor
inc
jo
push
mov
mov
xor
xchg
sbb
nop
cld
pusha
push
icebp
mov
push
sub
or
fcoml
loope
mov
mov
inc
in
xor
cmp
cltd
scas
fbld
pop
ret
loop
adc
mov
mov
add
sbb
shll
jns
push
pop
pop
dec
cmp
es
and
or
rolb
das
scas
in
rcrl
xor
add
and
or
aas
scas
lret
and
jmp
fildll
cwtl
cmp
jb
add
or
push
lcall
repnz
push
xchg
adc
fcmovnu
and
pushf
xor
cld
sahf
pop
sbb
sbb
lods
xchg
lock
add
mov
outsb
sub
aad
dec
sarb
int3
dec
arpl
enter
and
xchg
mov
adc
inc
in
jns
xchg
cmp
xor
jmp
pop
ljmp
je
xor
jle
pop
loope
push
iret
shrb
sbb
jl
pop
adc
in
sbb
jp
cmp
test
mov
loope
lods
orb
and
pushf
sbb
xchg
xchg
popf
clc
jle
es
or
jbe
xor
jns
test
pop
cmc
loop
nop
iret
mov
adcb
scas
scas
pop
or
sbb
fidivrl
dec
jmp
pop
insb
push
adc
sub
subl
sbb
inc
xor
push
cmpsb
and
jo
push
scas
jle
add
xor
std
sub
cwtl
xor
push
pop
fiadds
das
xor
push
fsub
test
pop
lock
cltd
repnz
clc
andl
xchg
fcompl
sbbb
fucomi
rclb
and
xchg
mov
xchg
push
xchg
neg
pop
repz
push
addr16
push
xor
mov
pop
outsb
cmpsb
adc
je
pop
adc
outsl
les
out
sahf
rorb
into
push
sbb
inc
mov
je
jge
ret
repnz
ss
out
in
mov
call
and
ficoms
cmp
cmpsb
push
mov
adcb
push
leave
pop
int3
cmp
ljmp
ret
fisttpll
jmp
sbb
sbb
adc
mov
leave
cs
jne
pop
cli
adc
loopne
xchg
cmc
add
bound
stc
dec
insl
aam
js
sti
jge
shlb
inc
ljmp
dec
rorb
stos
sbb
out
lds
sbb
outsl
jnp
fnstenv
adc
mov
popa
and
adc
rcrb
inc
cmc
xor
ds
stos
and
inc
clc
out
test
add
aad
push
jae
decb
loopne
shlb
scas
bound
mov
int
xchg
aad
sbb
inc
adc
pop
inc
shlb
mov
scas
out
add
aad
and
inc
jp
mov
mov
icebp
mov
push
mov
push
imul
enter
push
les
jns
je
addps
and
cltd
jno,pt
sub
ljmp
pusha
xchg
nop
mov
add
and
add
popf
shl
js
leave
and
mov
adc
xchg
sbb
outsb
movsl
xor
in
push
add
dec
sbb
js
and
int3
pushf
mov
inc
sbb
imul
push
add
mov
pop
sahf
xor
lahf
lock
aaa
cmp
lahf
dec
lods
es
and
cld
adc
push
popf
jmp
cwtl
ret
pop
psrld
sbb
pop
adc
inc
dec
fistpll
push
adc
lret
fs
push
jnp
add
roll
ja
jl
mov
loopne
jno
ret
addr16
insb
mov
xor
jbe
gs
mov
mov
add
mov
imul
les
jl
stos
test
and
sbb
loop
sub
ljmp
out
dec
push
mov
int
pop
mov
inc
fnsave
push
test
pop
adc
cmc
repz
test
imul
sbb
std
cmp
mov
add
js
arpl
nop
and
arpl
sahf
mov
bound
inc
cmp
cmpb
fs
mov
adc
add
popa
ret
pop
adc
rol
mov
insb
sar
and
jmp
insl
mov
dec
sub
push
xor
iret
xchg
cmpsb
and
fisttpl
dec
popf
mov
push
jne
sbb
jbe
in
pop
xchg
stc
jge
stos
js
sahf
mov
pop
mov
add
in
cld
jmp
stos
sbbb
cld
nop
pushf
icebp
adc
in
sti
stc
mov
insl
xchg
out
aaa
adc
aaa
xor
jns
xchg
int
mov
pop
leave
fstl
pop
dec
icebp
in
sub
pop
mov
and
push
adc
sahf
roll
scas
leavew
dec
fdivrs
inc
ret
mov
addr16
cltd
das
add
inc
es
jl
out
data16
icebp
std
bound
xchg
push
fsubr
lods
pop
jmp
insb
stos
stc
pop
sahf
mov
push
push
pop
cmp
addr16
sti
call
out
mov
sahf
pop
and
push
sub
cmp
popa
loopne
or
cwtl
mov
mov
dec
popf
cld
shl
rorl
cmp
ds
je
mov
arpl
jae
in
sahf
jnp
aad
stc
js
loopne
fs
rsm
cwtl
adc
mov
pop
lret
adc
or
in
scas
sub
jae
ljmp
push
pop
filds
popa
outsl
fstl
popa
push
jo
adc
push
test
clc
or
push
in
or
aas
cmc
addb
jp
inc
mov
inc
xor
sahf
jb
movsb
stc
lock
test
es
xchg
aam
and
out
cmc
cld
push
xchg
inc
jecxz
sti
imulw
out
iret
loop
cmp
xlat
pop
sub
subl
in
sub
test
inc
xchg
jecxz
and
add
out
pop
rolb
cmp
mov
inc
xchg
aam
and
push
in
sub
sub
push
push
sbb
push
dec
cli
jae
mov
in
cmpsb
inc
inc
jae
or
and
cs
jle
loopne
loopne
push
arpl
or
cld
pop
adc
je
sub
loopne
fs
outsb
adc
stc
cmpsb
inc
enter
mov
nop
sahf
lret
ljmp
ljmp
or
arpl
xchg
mov
sti
sbb
add
lcall
xchg
lahf
or
loope
jge
outsl
and
movsb
inc
stos
dec
cmp
push
adc
arpl
mov
and
adc
mov
sar
repnz
pusha
adc
sub
or
adc
push
pop
add
push
pop
fisubl
rcrl
cwtl
pop
xchg
jnp
mov
push
outsb
pop
push
push
ds
sbb
loop
cmp
movsb
jns
fdivs
cmp
outsb
pop
mov
pop
das
faddp
repz
addr16
mov
ja
and
jbe
stc
sub
pop
scas
adc
ret
mov
sahf
outsb
ret
pop
inc
xlat
cltd
ret
cltd
inc
daa
aad
mov
scas
lret
clc
iret
cmp
clc
call
lea
ret
push
out
sub
icebp
mov
sti
sub
xor
inc
jb
into
imul
test
decb
push
es
pop
addb
xor
cmp
shrb
sub
mov
popf
or
xchg
add
out
and
or
sbb
jp
jg
movsl
mov
push
cltd
push
cmc
mov
xor
outsl
aam
mov
xlat
xor
xor
repz
daa
adc
inc
mov
adc
neg
test
and
ja
xchg
xor
push
sub
in
sub
cs
jl
outsb
cltd
call
pop
add
mov
mov
push
into
aaa
insl
leave
inc
jns
test
scas
lods
out
inc
and
mov
xlat
pop
fadd
xchg
adc
scas
push
test
stos
pushf
xlat
stc
push
pusha
dec
adc
xchg
dec
jns
or
add
mov
in
test
dec
imul
outsl
or
sub
push
dec
push
sub
lods
insl
data16
fldl
insl
je
dec
data16
loopne
push
call
icebp
xchg
mov
or
inc
lds
cltd
outsb
fwait
sub
push
cmp
in
cwtl
jmp
pop
repnz
push
aad
and
lret
lods
and
push
ficoml
inc
rcrl
sub
mov
je
gs
push
inc
pop
pop
pop
jmp
fldl
cmp
or
dec
cmp
loop
inc
dec
sub
xor
int3
push
cmp
sti
lret
stc
pop
stc
imul
repnz
andl
jp
pop
jg
das
and
or
pop
and
adc
kmovb
adc
mov
jbe
mov
in
inc
call
data16
mov
loope
xchg
mov
mov
mov
add
add
sub
inc
push
cli
in
gs
fildl
mov
push
dec
push
cli
add
or
jo
lret
dec
dec
into
xchg
push
scas
mov
cmp
xchg
jb
add
jge
xor
sbb
stos
add
lods
xchg
call
push
int3
pop
xchg
imul
call
or
cmp
push
dec
inc
cld
pop
ret
push
rcrl
cmp
jb
mov
or
stos
cs
sarb
ljmp
mov
bnd
pop
stos
jnp
cmp
cltd
jno
push
ja
enter
push
ljmp
push
insb
jb
mov
inc
xor
mov
mov
jo
sub
sbb
outsb
dec
bound
aam
cld
mov
sbbl
psubsw
in
lods
lds
dec
mov
add
mov
jl
jo
adc
jb
jbe
push
scas
es
sub
cli
movsb
add
mov
jae
pop
or
jnp
int
cmp
es
fmul
push
or
aad
es
jg
out
cmp
enter
in
stos
jp
out
out
push
push
mov
fisubl
push
fwait
cmc
jmp
pop
mov
xor
jno
test
sub
ja
mov
in
fmul
clc
ds
adc
sbb
into
sub
adc
sbb
xlat
stc
scas
fwait
pop
or
adc
inc
xlat
pop
or
mov
xchg
push
in
in
adc
loop
in
lret
inc
inc
jg
fs
xlat
mov
cs
lcall
movsb
sub
out
cmp
pop
push
push
lahf
in
aaa
dec
imul
sbb
test
sarl
or
xchg
push
cs
adc
xorb
imul
push
add
pushl
es
pop
pop
js
sub
repz
push
jp
pop
fisubrs
xor
out
popa
popa
inc
faddl
jbe
loop
xlat
out
mov
fldcw
insl
push
cmp
mov
push
into
inc
enter
call
sub
stc
xor
pop
out
lret
mov
xor
jb
pop
insb
sbb
adc
mov
sti
add
adc
loope
jg
jbe
ljmp
imul
enter
jl
push
inc
xchg
xchg
jns
ss
push
jg
mov
inc
or
xchg
push
and
scas
aad
dec
lea
cmc
jno
mov
and
cltd
out
mov
mov
test
sub
cs
and
sbb
push
cli
sbb
cwtl
push
sbbl
aam
fsub
loop
sub
mov
clc
dec
popl
or
push
imul
add
add
int3
sub
xor
add
gs
xor
bound
sbb
arpl
and
cmp
in
and
out
insl
lock
shrb
sbb
orl
jbe
pusha
shr
fldcw
xor
out
cmp
ljmpw
imul
mov
sti
out
pop
divb
out
mov
arpl
or
movsl
mov
test
es
xchg
mov
push
jb
fistps
dec
popf
call
add
sbb
in
cmp
adc
or
pop
stc
call
xor
inc
xchg
aas
xchg
inc
adc
push
push
xchg
arpl
dec
pop
pusha
pop
nop
scas
mov
add
mov
lods
hlt
add
cmp
push
push
stos
mov
dec
fnstsw
insb
push
fisubl
pop
out
cmpsb
mov
mov
push
fcomps
xchg
xor
cs
les
inc
push
js
imul
cwtl
lret
call
popa
fld
adc
mov
mov
mov
aad
add
out
in
dec
in
sub
jne
and
inc
sub
fbstp
shrl
or
mov
push
fs
or
outsl
jmp
push
in
mov
mov
dec
pop
fcmovnu
repnz
mov
icebp
jmp
dec
data16
sbb
in
pushf
jp
sub
gs
call
cs
shll
mov
gs
dec
jp
mov
mov
xor
xchg
lahf
add
mov
jecxz
dec
jne
inc
fiadds
loop
rolb
sbb
jmp
fdivl
int3
lahf
push
lret
dec
out
mov
mov
xchg
std
outsl
ja
data16
pop
pop
rorl
mov
pop
mov
leave
jno
lcall
cmc
xor
imul
sub
data16
test
pop
call
cltd
sbb
mov
mov
imul
lds
lahf
shl
rorb
es
std
cmp
mov
cmp
cmpsb
ljmp
cwtl
xchg
mov
inc
adc
push
js
pop
in
aas
pop
xorl
dec
add
push
jne
cmp
inc
push
sub
jp
mov
mov
adc
mov
mov
mov
add
xchg
fmuls
xchg
jae
cmp
xor
pop
jle
mov
sub
imul
mov
pop
fs
xor
pop
and
jae
mov
int3
dec
es
adc
jb
jne
cmpsl
cmp
sub
insb
notb
xor
out
xchg
sbb
sub
mov
mov
inc
in
int
push
js
add
les
cmovg
sub
jns
rcl
sbbl
sbb
inc
movsl
sub
or
pop
bound
sub
push
inc
sbb
pushf
insl
out
addb
and
je
test
mov
jno
sub
xchg
pop
rorl
cmp
das
fldcw
jmp
pop
adc
push
push
fcoms
xor
hlt
fdivs
rcrl
scas
movsb
pop
dec
lcall
cmp
pusha
pop
or
adc
out
cli
imulb
cld
sbb
mov
out
mov
sahf
add
ret
ss
mov
ret
shrb
mov
outsb
clc
sub
and
lret
jg
xchg
pop
inc
movsb
inc
mov
push
mov
aas
sbb
gs
fwait
sub
fdivr
cmpsb
bound
push
cmp
iret
mov
sub
mov
lret
and
adc
lock
sub
loop
cltd
mov
adc
repz
test
cmp
push
mov
aam
push
push
in
xchg
popf
fnsave
xlat
aaa
and
push
push
arpl
hlt
dec
scas
clc
push
sbb
outsb
mov
cmpsl
sahf
and
mov
inc
pop
lock
shrl
adc
xor
stos
lcall
arpl
lds
fwait
jne
add
dec
inc
mov
push
daa
pushf
xor
mov
pop
jecxz,pn
add
and
xchg
test
orb
cmpl
aad
dec
mov
sbb
cld
dec
mov
xchg
std
jl
push
add
and
xchg
jno
clc
inc
dec
inc
add
cwtl
adc
xlat
adc
push
cmc
mov
pushf
xchg
sub
pop
dec
pop
push
mov
mov
push
add
stos
mov
cmp
fsts
pop
sub
shll
sub
xchg
mov
pusha
sbb
ret
mov
sahf
cmp
ds
loopne
adc
pop
popf
or
sbb
rcr
pop
inc
sbb
xor
push
gs
push
push
jge
cld
jge
sbb
or
mov
add
add
outsb
mov
popa
mov
push
jns
idivb
pop
cmp
pop
cmp
ret
jge
arpl
xor
mov
fldt
sbb
sahf
adcb
dec
mov
cmp
sbb
int
cmp
jne,pt
cltd
pusha
mov
inc
leave
add
dec
stos
add
cli
je
inc
ficoml
cmp
in
hlt
push
pop
aam
and
xor
add
adc
fs
je
inc
ficoml
cmp
in
hlt
push
pop
aam
and
mov
test
je
inc
fcmovbe
lret
mov
test
xchg
or
jp
push
pop
aam
and
xor
add
adc
fs
je
inc
ficoml
cmp
xchg
repnz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
fcmovnb
xor
add
xchg
sub
push
push
movsb
inc
mov
test
adc
add
and
and
shlb
xor
add
adc
fs
inc
mov
xchg
adc
hlt
xor
xor
lods
loop
xchg
pop
orb
mov
xlat
adc
pop
out
mov
popf
adc
ret
jno
inc
sbb
decl
xchg
mov
cmpsl
inc
push
jge
xor
push
sbb
mov
pop
mov
mov
add
push
daa
cmpl
aaa
cmp
ficompl
and
cmpl
aaa
or
xlat
fists
adc
and
popf
sbb
les
in
and
adc
lods
xchg
fs
sbb
mov
test
jae
mov
in
or
sub
xchg
xor
xchg
jp
mov
mov
mov
movsb
and
xchg
inc
mov
cmc
mov
sub
ret
adc
dec
testl
xchg
faddl
jnp
mov
add
xor
and
and
repnz
xchg
xorb
aam
and
jb
fcoml
enter
les
mov
sahf
inc
lods
cmp
adc
sbb
sub
lock
sbb
mov
pop
test
lea
jne
gs
xor
or
inc
mov
fidivrl
add
das
loop
loope
repz
mov
mov
movsb
jb
jae
push
ret
add
push
push
movsb
inc
mov
test
adc
add
xor
and
shlb
xor
add
adc
xorb
push
push
movsb
inc
mov
test
adc
add
xor
and
shlb
jecxz
cmpsl
mov
loope
mov
sbb
inc
fs
icebp
loop
adc
xchg
ja
and
lret
cltd
iret
jmp
push
sub
test
jge
xchg
into
add
dec
jp
lods
gs
jge
enter
insb
jae
adc
test
insl
dec
arpl
cltd
fstpt
mov
and
shrl
lods
or
cmp
jnp
imul
inc
mov
fbstp
sbb
jno
test
mov
mov
test
pop
jns
mov
frstor
mov
sub
push
cmpsb
push
xor
mov
push
fidivrl
pop
mov
push
sbb
xlat
ja
dec
arpl
fbld
pop
lcall
add
mov
fistpl
loopne
repnz
jecxz
and
add
or
push
in
dec
jno
in
mov
xlat
jne
pop
inc
addl
mov
mov
add
pop
mov
mov
pop
xchg
movsl
xor
pop
lods
outsl
xchg
std
jmp
loope
inc
lretw
mov
out
stos
lods
pop
jmp
jb
xor
mov
sbb
loope
fwait
pop
xchg
or
dec
sub
add
sub
div
dec
adc
pop
stos
sbb
dec
dec
dec
call
rcrb
mov
jne
mov
cmpsb
xchg
inc
sub
sub
repz
pop
mov
mov
das
pop
mov
mov
aaa
mov
xor
icebp
imul
cmp
adc
lahf
fs
sbb
mov
mov
scas
mov
push
popa
add
addr16
insl
cmp
fistpll
in
dec
sub
push
mov
or
xchg
mov
jle
push
scas
dec
pop
outsb
sub
mov
mov
xchg
repnz
ljmp
pusha
or
outsb
mov
mov
cs
dec
mov
scas
and
xorb
out
adc
addl
in
in
cs
outsl
jle
xchg
jmp
in
jbe
mov
mov
cmc
pop
mov
jnp
cmc
sub
adc
cmc
popf
sbb
xchg
shll
jecxz
lahf
add
or
cmpsl
push
dec
aam
mov
sahf
out
ja
pop
mov
imul
into
add
arpl
jge
push
lret
mov
cs
aaa
cmp
push
adc
cmp
out
std
aaa
enter
bound
movsl
data16
out
lods
fs
jnp
dec
lods
push
mov
imul
lea
imul
dec
and
mov
mov
xor
out
mov
pop
leave
test
insb
and
xchg
xchg
test
int
sahf
mov
repz
mov
clc
sarl
cmp
jnp
mov
int3
push
lds
adc
jp
outsb
jl
pushf
loope
iret
xchg
pop
out
pop
mov
cmc
lahf
or
jl
push
sbb
xor
xchg
pop
jnp
sbb
lea
adc
xchg
mov
mov
cld
lods
pop
das
repz
adc
push
adc
mov
loope
mov
test
adc
jmp
ret
sub
aas
pop
sub
dec
addl
cmp
aas
in
in
push
mov
jne
push
pop
push
sub
into
jo
aaa
hlt
push
in
jp
push
xchg
loopne
xor
inc
and
sarl
movsb
dec
fwait
lds
stos
inc
pop
je
pop
aaa
jge
adc
mov
jnp
add
outsb
nop
in
test
mov
dec
sub
into
push
and
mov
push
mov
out
imul
outsl
nop
adc
mov
sub
push
shlb
loope
mov
jle
jle
push
xor
test
enter
xor
or
ret
cmp
xchg
es
sub
mov
adc
sti
dec
mov
aad
sbb
idivb
cmp
cld
rcrl
push
push
jp
and
lods
nop
jge
jmp
data16
aas
sbb
scas
sub
pop
cmp
cltd
dec
fwait
cwtl
mov
mov
insl
or
mov
push
mov
pop
cld
jbe
jne
add
insb
mov
adcb
sub
rcrl
bnd
mov
out
sbb
dec
dec
inc
loop
ja
and
mov
lret
ss
push
push
sbb
or
arpl
pop
movsb
out
mov
leave
mov
mov
lds
or
gs
xlat
xor
dec
cld
rol
push
or
stos
sub
popf
pop
lods
jno
push
mov
mov
call
outsb
aam
xor
aad
add
hlt
push
cmc
push
lea
addr16
addr16
outsb
add
fwait
jl
xor
jp
stos
cmp
jecxz
jp
sbb
push
popl
mov
fists
push
lods
cmp
loopne
jae
lds
mov
sbb
sub
mov
inc
sub
pop
or
or
mov
xor
lods
pusha
dec
xor
stc
inc
add
inc
stos
repz
in
scas
aad
mov
sub
cltd
sub
dec
dec
mov
pushf
xchg
push
fisubrl
repz
pushf
insl
pushf
push
push
mov
xchg
insb
popf
aad
xor
dec
stos
lret
cltd
mov
jne
push
mov
fsubp
adc
cvtdq2ps
cli
lods
mov
dec
lods
mov
fisubrl
push
add
cmpsl
sub
adc
mov
sub
push
jecxz
jbe
adc
add
cli
test
xor
lods
mov
sub
ret
shlb
inc
rcr
cli
lock
shlb
jmp
stc
mov
pop
sarl
xor
push
adc
push
mov
cld
out
dec
push
fadd
rcrb
call
adc
ss
in
aad
out
add
mov
mov
dec
adc
dec
roll
js
sbb
out
popf
popa
pop
sub
pusha
mov
lods
fiadds
or
movl
loopne
lds
sub
cs
mov
sbb
ds
or
sub
in
jl
push
ret
icebp
fs
add
mov
pop
mov
clc
jg
lods
push
mov
jb
xchg
push
adc
sub
add
add
iret
movsl
mov
mov
adc
arpl
push
dec
fwait
nop
dec
popa
jp
xchg
or
cld
and
enter
je
sub
dec
mov
cli
pop
clc
and
cmpsl
cmp
cmp
je
mov
sar
push
fsubr
out
movb
mov
in
mov
dec
xlat
je
jp
dec
mov
loopne
sar
lods
dec
xorl
test
test
push
push
dec
pop
mov
cmpsb
and
pop
ja
jo
test
adc
rol
pushf
mov
xor
insl
jp
add
mov
cmp
sub
pop
call
dec
inc
out
jbe
pop
jp
xchg
jmp
mov
sbb
sub
out
and
icebp
shr
push
sub
cmp
fs
or
popa
sub
push
adc
fdivr
push
xchg
das
mov
xor
sbb
xor
push
movsl
repnz
lods
xchg
cmp
pop
dec
das
mov
ss
push
dec
repnz
popa
std
xchg
scas
mov
mov
xchg
cs
xchg
into
jne
aam
mov
test
adc
pop
sbb
inc
js
mov
in
pop
adc
inc
js
push
andb
sub
sub
add
sti
dec
or
xor
stos
inc
xchg
inc
sbb
mov
xlat
mov
subb
cmp
push
sbb
fs
in
and
mov
in
pop
xor
data16
xor
push
cmp
ret
sbb
scas
in
daa
lods
decl
add
xchg
aad
leave
sahf
sbb
jmp
inc
sub
sbb
mov
sbb
cwtl
aas
sbb
mov
imul
adc
lret
pop
iret
arpl
daa
pop
movl
push
rcll
in
pop
outsl
test
xlat
sub
test
ret
cwtl
gs
stc
jp
add
mov
adcb
pop
in
enter
mov
adc
es
add
inc
fidivrl
jecxz
jb
jnp
sahf
mov
cltd
jle
mov
inc
or
rcll
test
int
int3
xchg
sbbl
and
lods
dec
or
sar
clc
out
pop
mov
jns
sbb
inc
fnstcw
ljmp
ljmp
and
mov
push
fwait
push
mov
nop
mov
lahf
lahf
out
xor
das
mov
jmp
aas
lcall
sbb
call
jge
xchg
dec
out
mov
sbb
xchg
adc
fsubp
and
or
mov
pop
dec
push
repnz
add
mov
or
add
movsl
frstor
inc
clc
push
xor
cmp
aaa
xor
pop
cmpsl
add
ds
or
xor
fs
pusha
stos
inc
jno
adc
sbb
mov
jae
xor
xor
and
push
mov
push
inc
mov
movsl
sub
mov
add
sbb
lcall
mov
xchg
leave
pop
and
jo
fwait
incl
inc
dec
fcomip
ds
loope
mov
int
cli
jmp
hlt
test
pop
push
or
scas
fisubrs
cmp
mov
popw
mov
add
xor
jle
jns
iret
jmp
pop
leave
je
push
jbe
stos
pop
mov
mov
into
push
test
push
sub
jmp
push
outsb
xchg
jmp
or
sub
sti
jb
lods
jno
stc
in
mov
adc
jbe
jns
push
aaa
sub
push
inc
jae
pop
test
into
in
movsb
pop
jg
push
jne
push
xchg
insl
ljmp
ja
dec
xchg
test
sarl
scas
les
and
ror
pop
cmp
outsl
xchg
fsubrl
ror
adc
cmp
pop
lods
imul
insb
scas
cli
dec
loopne
mov
mov
loopne
iret
xchg
mov
mov
xor
rep
scas
idivl
movsl
adc
mov
in
jle
in
imul
gs
mov
mov
repz
jne
sbb
fcomps
scas
pusha
xchg
sbb
add
mov
mov
ljmp
icebp
jo
or
push
ud2
sbb
mov
insb
gs
mov
fidivs
roll
xchg
mov
repz
xchg
cmp
outsb
lret
scas
dec
or
mov
jle
or
dec
fstpt
cld
jg
or
in
out
sub
push
fmuls
sub
push
cmpsl
push
fwait
outsl
jb
xor
iret
pushf
shrb
jl
cmc
jecxz
fcmovbe
leave
scas
repz
cmpsl
dec
movsl
or
sahf
mov
xchg
clc
mov
shl
ret
inc
mov
fidivl
ss
adc
pop
test
lea
mov
out
sub
pop
aam
outsl
sbb
into
rcr
ja
call
sub
xchg
in
test
and
cmp
out
jmp
mov
rclb
mov
inc
insb
push
mov
sub
mov
dec
cmp
pop
dec
pop
nop
jg
pop
sub
imul
sub
fidivrl
mov
lock
xchg
push
mov
jne
mov
cmp
ja
and
rorb
push
mov
dec
lock
lahf
sbb
nop
push
lea
mov
push
jecxz
xchg
daa
subb
sbb
jb
in
sti
int3
fdivr
fnstenv
xlat
dec
gs
bound
mov
jo
dec
inc
xor
jne
icebp
mov
ret
and
fstp
out
mov
mov
and
adc
sahf
or
aas
push
loop
out
cmp
sub
or
lahf
js
mov
pusha
test
out
sbb
mov
pushf
push
cld
rclb
push
mov
xor
push
jo
dec
mov
pop
push
mov
dec
loop
cwtl
xor
inc
aam
pop
clc
push
sbb
jmp
ja
popf
je
and
xor
int3
fucomi
scas
mov
add
xchg
jbe
push
or
pop
and
xchg
mov
xor
cmp
ds
push
lret
out
sub
push
movsb
push
xlat
scas
or
mov
sub
xor
sbb
lcall
jno
out
mov
xor
nop
icebp
addr16
ss
sbb
lret
dec
shrb
das
jmp
mov
bound
jns
push
mov
cmp
mov
imul
jae
pop
xor
xchg
out
xchg
jmp
jl
jbe
mov
popf
dec
adc
repz
adc
loopne
sub
pop
in
cmp
test
jg
push
sbb
nop
es
mov
inc
push
mov
cwtl
lock
jnp
or
sbb
push
adc
leave
xor
add
sub
mov
mulb
repz
mov
cld
insl
cmp
lods
mov
lods
mov
lock
sbb
subb
jg
insl
xchg
lock
ficompl
adc
je
pop
jge
mov
mov
daa
cltd
lods
xchg
add
fwait
push
cmp
repz
inc
xchg
ja
cmp
ja
xchg
add
mov
sbb
adc
adcl
add
mov
lret
pop
jb
hlt
mov
pop
and
movsl
jne
mov
lods
push
scas
in
and
in
fcoms
aam
scas
call
sbb
mov
test
int
sub
or
lcall
and
loope
stos
pop
insb
mov
push
pop
sub
dec
fidivl
cli
loop
sbb
fwait
push
shlb
loop
sub
test
dec
and
sub
insl
xor
fs
sbb
mov
push
dec
imul
or
popa
push
punpcklbw
push
xor
imul
push
jp
cmpsl
adc
and
jge
cmp
pop
pop
ret
daa
sub
push
loope
push
js
aad
lods
jno
push
scas
sbb
add
faddl
mov
cmpsb
sub
lahf
jg,pt
mov
testb
out
dec
divl
orb
mov
mov
pop
jle
std
les
mov
jb
insb
test
mov
mov
sub
fidivrl
loop
xchg
loopne
push
nop
dec
je
or
fistl
sarl
or
sub
data16
jl
fwait
add
or
test
shll
or
push
popa
adc
jmp
mov
inc
js
jmpw
and
fisttps
roll
loopne
xchg
xchg
mov
push
enter
out
or
cmc
jge
inc
incl
add
addr16
push
call
cmp
inc
push
and
lods
ficompl
mov
shl
push
ret
out
inc
rolb
or
cmpsl
mov
dec
xchg
insb
xor
outsl
loope
xchg
xchg
nop
dec
mov
mov
or
pop
inc
aad
jecxz
jecxz
stc
cli
cs
jg
add
sub
add
loopne
sahf
aaa
xchg
fdiv
bound
sbb
pop
stos
movsl
loopne
pop
pop
push
or
add
sub
arpl
rcll
movsl
cmc
and
pop
cmc
or
push
sbb
push
mov
scas
jge
push
jnp
out
cmp
sbb
pop
arpl
js
and
and
mov
cmpl
sbb
pop
push
mov
jo
gs
adc
mov
sub
ja
mov
or
repz
jge
popa
push
mov
jo
inc
mov
xor
ja
call
xchg
add
mov
and
clc
sub
and
add
daa
jl
inc
inc
pop
xorb
dec
arpl
ljmp
adc
push
mov
fldenv
comiss
int
sbbb
scas
xchg
push
mov
and
sub
and
out
inc
add
sbb
clc
and
movsb
repz
test
sub
dec
mov
mov
sub
clc
enter
jnp
test
xchg
sbb
iret
mov
movsl
push
out
mov
adc
leave
fisubrl
mov
mov
cmpsb
jg
movsw
jae
shll
sbb
enter
pop
xor
jg
fidivrs
ja
jge
pop
push
mov
xor
pop
inc
pop
clc
push
cmpsb
xchg
xor
pusha
lods
fmull
lcall
sbb
test
xor
mov
jg
xchg
sbb
and
xorb
add
xor
dec
and
sbb
add
xor
adc
add
dec
dec
ljmp
jno
adc
cmpsb
pop
add
mov
inc
mov
cli
loop
dec
pushf
out
ret
out
jno
cmpsb
lds
adcb
cmpsb
loop
imul
sbb
push
add
in
add
nop
ss
leave
lahf
lea
dec
lods
jno
hlt
cmp
shl
repnz
dec
push
mov
int3
rcr
test
cmp
mov
jmp
or
fisttpl
arpl
push
mov
push
call
mov
push
aam
les
mov
loop
stc
jno
cmpsb
test
jae
push
arpl
outsb
pusha
fisttpll
pop
sub
xchg
adcl
xor
rorb
push
ret
movsl
lcall
jle
cmp
mov
outsb
push
clc
or
in
sub
stc
pop
test
in
push
out
xor
jecxz
out
add
sbb
std
std
inc
sbbl
popa
lea
xchg
pusha
xor
pop
imul
shlb
cmpsb
pop
push
int3
aas
repz
aad
dec
imul
shr
ds
iret
test
xchg
adc
lock
jle
pop
fstpl
pop
outsb
mov
jae
sar
fstps
xor
or
dec
les
sbb
and
jo
push
push
mov
add
mov
inc
xorb
jp
sbb
bound
das
ljmp
add
mov
dec
xchg
and
xchg
xor
xchg
sub
mov
mov
fsubs
adc
sbb
cli
insl
fidivs
insl
pop
sbb
mov
cmp
nopl
mov
test
pushf
cmp
mov
test
nop
repnz
mov
popa
ret
mov
int3
jbe
cmp
insl
add
fwait
add
ss
jmp
adc
and
add
pushl
push
out
mov
in
pop
and
out
iret
xchg
add
fidivrs
cltd
lahf
in
xchg
cli
inc
outsl
cld
sahf
fdivrl
push
cwtl
inc
mov
psraw
sbb
es
add
std
std
xor
xchg
sbb
adc
lods
xor
int3
stos
jne
loop
mov
push
imul
enter
pop
mov
test
or
mov
sahf
bnd
inc
ret
ret
mov
lods
bound
mov
mov
outsb
fdivs
lds
int3
sub
mov
rcl
push
cmp
neg
or
int
cmp
pop
push
dec
push
das
pop
mov
pop
mov
push
nop
sti
mov
mov
adc
fs
aaa
popa
inc
xor
inc
sub
add
ljmp
jb
pop
jg
dec
imul
xor
mov
adc
stos
jo
lds
sub
mov
xchg
adc
enter
mov
sti
imul
shll
or
xchg
mov
repnz
in
sbb
inc
imul
mov
sbb
insb
test
push
add
jae
sarb
test
sub
adc
cmp
xchg
mov
push
xlat
sub
push
and
icebp
xor
mov
movl
mov
adc
rorl
jbe
in
inc
mov
mov
repz
enter
mov
mov
ret
enter
pop
shll
daa
fdivr
js
sti
dec
and
dec
or
frstor
add
mov
outsl
or
xor
aad
xchg
inc
jle
add
out
jns
cmpsb
dec
lahf
out
ds
cs
frstor
int3
jns
int
scas
inc
imul
mov
int
and
or
loope
mov
rcrl
stos
push
filds
and
out
hlt
stc
xchg
emms
jp
add
in
sarl
jmp
in
movsb
test
jle
rcrl
pop
mov
or
inc
pop
int3
ret
divl
sbb
mov
lods
ret
adc
lds
aaa
lods
mov
cmp
mov
jo
push
push
add
jle
cs
mov
leave
xor
push
xorb
push
push
movsb
inc
mov
test
adc
add
xor
and
shlb
xor
add
adc
xorb
push
push
movsb
inc
mov
test
adc
add
xor
and
shlb
jl
jl
adc
fs
inc
mov
mov
test
adc
add
xor
and
shll
xor
add
adc
mov
mov
push
fadds
or
cmp
sub
jno
popa
xchg
xor
pusha
int3
adc
add
js
push
insb
cmp
enter
call
add
rorl
push
stc
push
cmpl
testl
mov
rorb
push
adc
and
push
nop
or
dec
ret
pop
lds
and
clc
mov
pop
dec
ja,pt
jecxz
ret
dec
dec
lea
sbb
aam
lahf
add
popa
sahf
enter
xchg
into
sub
fsubrl
mov
xchg
xorl
cmp
sbb
sub
adc
stc
clc
int3
rcll
xchg
xchg
pop
out
test
gs
popf
push
mov
test
popa
cltd
add
stos
lods
dec
push
sbb
push
test
or
dec
xlat
fstpl
xor
sahf
and
add
lock
cwtl
repnz
jmp
or
scas
enter
dec
mov
pop
jo
cmp
xorb
popf
stc
or
jge
cmp
jmp
enter
test
adc
add
rcr
imul
test
mov
or
stos
inc
leave
cmp
or
dec
lds
fcoms
inc
pop
mov
inc
jmp
adc
or
fisubrs
dec
aam
shrb
sbb
mov
mov
rorl
js
push
cmpl
push
enter
call
add
rorl
js
push
cmpl
push
or
push
or
aam
out
fcomps
stc
mov
mov
cmp
fwait
inc
std
flds
mov
mov
cmp
dec
lcall
lds
push
sbb
inc
inc
mov
jmp
loope
in
cwtl
jne
mov
lods
pop
aas
insl
faddl
push
jae
cltd
add
stos
adc
push
scas
jne
adc
cmp
or
lods
jle
xor
inc
pop
mov
insl
lret
nop
shl
pop
std
lods
cltd
xor
rcrb
insb
xchg
fwait
jae
mov
or
mulb
jbe
mov
jle
push
fwait
dec
dec
mov
out
jo
xchg
cmp
les
inc
lods
inc
cmc
cld
and
jle
imulb
jecxz
fnstcw
and
xchg
dec
adc
clc
popf
pop
rcrb
xchg
jbe
jno
test
iret
stc
fs
ret
xor
mov
and
test
test
cmp
fcomps
cld
int
lret
push
test
sub
adc
adc
add
int3
mov
test
cmp
icebp
scas
out
lds
pusha
mov
sbb
lahf
add
faddp
cli
scas
dec
andl
popf
imul
xchg
outsl
clc
add
xchg
inc
fmuls
adc
je
aam
xor
movsb
insb
movl
mov
outsb
mov
pushf
imul
dec
adc
aam
popa
dec
inc
insw
mov
sub
out
jmp
xorl
push
jo
cmp
jns
add
and
xchg
sbb
cmp
mov
faddp
xor
in
pop
dec
mov
int3
or
jo
and
add
test
push
leave
sub
shll
movsl
test
into
cmpb
lods
or
or
sub
cmp
adc
cmpsl
fdivs
stos
jge
aad
sahf
and
cmpl
aam
call
dec
push
inc
jo
call
cmp
push
pop
pop
mov
cmp
inc
adc
out
loop
cmpsb
div
dec
mov
add
jmp
sub
and
std
xchg
mov
mov
xor
add
shrl
outsl
dec
ret
addr16
push
call
mov
mov
sbb
jne
jno
movsl
push
fisttps
jno
stos
leave
sbb
repz
jmp
dec
ret
lahf
jbe
or
cmp
adc
in
fxam
in
or
andb
call
sbb
addr16
jae
leave
mul
mov
fistpll
out
rcrl
jg
lcall
push
cld
xor
jg
dec
cmpsl
pop
pop
jo
push
in
ja
lret
and
xchg
cld
xchg
jae
and
dec
int3
mov
xor
int3
adc
or
lret
js
fs
xlat
inc
push
jg
ja
lods
add
add
lcall
sbb
call
cmp
or
arpl
mov
push
mov
push
sub
imul
cmp
pushf
shrl
out
test
push
cmp
add
cli
xchg
cmp
cs
and
or
push
jg
pop
sub
jne
clc
xlat
pop
inc
xor
push
movl
movsl
cmovae
cmp
and
in
les
mov
cmpsl
fimull
movsl
mov
jno
out
test
test
mov
mov
mov
inc
roll
pop
dec
and
insb
ret
jno
aad
insl
lods
mov
push
lods
lret
faddp
xchg
scas
je
mov
mov
push
cmc
out
cmp
insb
or
cmp
testb
es
xchg
sub
push
and
movsl
cmpsl
pop
out
cwtl
jo
push
in
lret
adc
fwait
stos
cmpsb
or
imul
cmp
int3
mov
lods
pusha
gs
mov
ss
mov
stos
cmp
inc
push
lds
sbb
cs
mov
mov
pop
jmp
pop
int
lods
jb
fs
lret
rolb
call
in
push
sub
cmc
loopne
pusha
es
xchg
subb
lahf
mov
cmp
dec
and
andb
out
jg
pop
sub
fimull
cld
jmp
mov
adc
and
mov
insb
in
icebp
adc
pop
faddl
mov
and
arpl
jnp
lds
mov
movsl
int
pop
jecxz
iret
pop
fadds
nop
jecxz
aaa
pop
inc
fsubrp
push
inc
add
mov
insb
rorl
in
jae
popa
in
push
or
movsb
scas
inc
xor
mov
push
fsin
cmpsb
lods
cmp
add
and
mov
cmpsb
mov
stos
sbb
jo
jle
push
jecxz
loope
icebp
clc
ljmp
inc
xor
lds
cmp
out
rorb
push
or
sub
loopne
mov
rcrb
xor
pusha
push
mov
adc
in
or
adc
mov
gs
rcrl
into
pop
mov
cmp
ljmp
movsl
cmpsl
jae
repnz
hlt
imul
fs
jne
sti
jno
shlb
mov
mov
adc
or
cmp
xor
loop
lret
popf
and
out
cmp
es
movsb
xchg
movsl
push
sub
ss
subb
dec
out
xchg
mov
aas
xchg
mov
add
xchg
sti
jo
push
push
push
ljmp
sub
and
sub
imul
data16
sbb
call
andb
lret
lods
adc
daa
stos
push
jmp
sub
mov
cli
cwtl
push
int
jg
fwait
mov
xor
mov
and
push
daa
ja
mov
push
sub
sbb
repz
addr16
cmp
xor
out
mov
pop
test
int3
pushf
aad
das
movsb
js
movsl
or
clc
insb
and
test
in
sti
mov
push
inc
add
ror
leave
mov
sbb
jl
popa
fidivrl
jecxz
int
push
or
cld
lods
jae
mov
xchg
sub
dec
sahf
imul
and
inc
xlat
les
pop
pop
in
add
int
sbb
stc
roll
pop
jg
push
push
mov
loope
int3
push
fcmovb
lock
adc
dec
jne
aam
jg
faddl
or
sub
mov
pop
testb
or
imul
fcomp
add
push
jge
outsb
jecxz
inc
and
loopne
add
push
xor
pop
shll
pop
adc
mov
adc
or
insb
pop
xchg
xlat
in
and
push
fildl
mov
sbbl
cmpsl
gs
mov
sti
pop
sbb
sbb
adc
jg
in
dec
aad
lret
rorb
lock
in
outsb
push
mov
fistps
add
subl
jp
push
scas
cmp
mov
push
xor
push
and
loopne
addr16
inc
cmp
inc
pushl
repnz
sub
iret
jb
addr16
jae
sub
adc
mov
cltd
pop
pusha
popa
xor
shll
test
pop
pop
adc
sub
add
ds
pop
sub
cmp
xchg
lret
scas
mov
xor
xor
icebp
int3
ret
outsl
pop
add
sbb
xor
stc
popf
ret
repz
add
pop
popf
add
les
pop
gs
jle
sbb
scas
adc
loopne
cmc
inc
in
mov
cwtl
xchg
mov
cmp
adc
push
shl
cs
add
leave
dec
mov
pop
rorl
stc
dec
sahf
ds
cmpsl
inc
sti
adc
inc
or
mov
leave
jle
lret
cmpsb
add
mov
je
mov
mov
pop
inc
pop
mov
pop
dec
inc
push
mov
sub
jp
cmp
mov
das
clc
or
jo
adc
mov
or
fstl
push
add
ds
jns
insl
fidivl
nop
push
fidivrl
loope
mov
mov
push
jg
shr
mov
ret
dec
popa
mov
push
xchg
dec
pop
and
adc
pop
adc
ja
div
cmpl
inc
lret
inc
xchg
movsl
in
cmp
sub
call
loop,pn
dec
imul
mov
clc
push
and
arpl
in
xchg
mov
aad
test
sub
out
js
add
mov
mov
push
mov
int
cmpsl
sub
jg
aam
jne
xor
loop
rcll
ret
loopne
adc
and
push
jb
cmpsb
jno
pop
adcl
in
ja
sub
loopne
push
jo
sub
pop
inc
lea
int
cmp
xor
push
leave
stc
mov
add
mov
mov
jp
fimull
mov
faddl
cmp
jne
aas
jae
cmp
mov
lods
pop
arpl
notb
xor
xor
cmpsb
fcmovnbe
sbb
and
xchg
outsl
les
ss
cmp
cmpsl
out
arpl
sub
lret
divb
add
sbb
cmp
push
enter
fistpll
xor
into
orl
fdivs
mov
lock
lea
daa
test
js,pt
fucom
mov
push
lret
jge
pop
push
out
xor
pop
adc
sub
pop
mov
cmp
add
test
jno
ja
inc
fsubrl
sub
mov
dec
lea
xchg
outsl
add
call
sub
lods
cmp
jp
scas
mov
and
sbb
jle
and
sbbl
sub
mov
repnz
cmp
stos
or
hlt
sbb
or
jno
cmp
movsb
data16
loop
dec
adc
xlat
adc
fxch
sub
inc
sub
cmp
dec
or
ja
jnp
call
push
and
outsb
mov
xor
inc
idivl
aam
jecxz
test
and
xchg
aam
or
or
jmp
jmp
push
cmp
cmp
ret
gs
mov
jecxz
or
insb
icebp
push
mov
jo
xchg
enter
pop
int
int3
add
xlat
push
push
mov
outsb
pop
mov
sub
test
and
and
mov
add
mov
stos
in
xchg
push
das
inc
rorl
sub
jbe
sbb
inc
jecxz
xor
add
mov
fisttps
test
and
fwait
push
test
movsb
adc
bound
xchg
sahf
mov
mov
inc
add
xor
aam
in
pusha
mov
shlb
cli
pop
sub
cs
lock
aam
xchg
mov
rolb
stos
sti
jmp
inc
xor
insb
movsb
fsubl
inc
jae
cmp
shl
ret
movsl
mov
insb
pop
jo
xchg
out
mov
pop
call
add
icebp
fwait
cwtd
xchg
jp
push
lock
xor
add
dec
pop
and
sbb
inc
repz
push
fimuls
mov
leave
rcll
push
cli
pop
inc
aad
test
arpl
scas
jne
xor
xor
jmp
jg
pushf
test
mov
xchg
das
mov
cmp
pop
je
rcrl
gs
mov
sbb
mov
fisubl
jge
clc
xor
jbe
pop
shlb
icebp
lret
ja
out
xor
insb
mov
mov
mov
xor
out
es
cmp
andl
pop
mov
lahf
inc
das
lcall
mov
jb
xchg
cmp
cmp
sbb
jae
mov
mov
lock
movsb
pusha
sbb
mov
or
mov
adc
lcall
dec
out
jns
push
push
push
and
cmpl
jecxz
xchg
dec
cmpsb
sahf
push
mov
and
fiadds
fsubrl
stos
fisttpll
jae
cs
sub
test
shll
cmc
cmp
movsb
loope
pop
sbb
fwait
test
add
movsl
out
mov
je
pusha
subb
js
aas
or
xchg
ret
lods
push
insb
sub
xor
jl
xchg
inc
or
sub
mov
cmpsl
push
or
inc
mov
inc
jge
xchg
arpl
push
cmp
sub
scas
cmp
mov
mov
add
mov
mov
cltd
mov
pop
cmp
dec
mov
pop
adc
mov
js,pn
fidivrs
cmpsb
notb
lcall
lret
add
mov
push
lcall
bound
xchg
imul
or
sbb
push
stos
frstor
aaa
loope
dec
scas
ja
pusha
pop
or
test
in
fdivrs
out
or
sub
test
push
popf
sub
in
add
out
inc
and
or
jmp
xor
mov
int3
pop
inc
movsb
loopne
jecxz
pushf
mov
fadds
iret
inc
outsb
outsl
cwtl
mov
adc
cmp
add
xor
es
call
scas
lea
sbb
adc
push
clc
push
jmp
mov
pop
adc
scas
imul
inc
sub
insl
and
fdivrl
add
inc
pop
adc
cli
test
out
xlat
dec
fnstcw
inc
xchg
es
mov
les
jo
sub
movsl
cmpsb
ds
cmp
out
pop
cmp
or
das
sbb
in
lret
or
sti
push
xchg
xor
sub
sbb
mov
jns
out
and
rol
dec
mov
xchg
adc
dec
shr
outsb
push
stos
frstor
push
pop
test
add
popf
jge
jge
xchg
xchg
cld
cli
mov
adc
fldl
and
adc
mov
push
and
xchg
lods
or
std
xor
daa
mov
jp
cltd
call
sbb
les
icebp
adc
dec
add
adc
mulb
jno
push
mov
sbb
ficompl
inc
test
and
or
out
scas
lods
outsl
sub
xchg
pop
fwait
mov
orb
jns
xchg
mov
imul
aam
insl
xor
dec
enter
xchg
cld
cmp
inc
enter
cli
negb
jecxz
jne
mov
popf
bound
int
and
mov
xchg
nop
or
scas
mov
sbb
jmp
push
gs
push
test
inc
scas
addl
das
movq
sti
sub
sub
push
icebp
push
les
mov
cmc
call
or
stos
cmpsl
sbb
int3
mov
hlt
cmp
mov
inc
pop
cmp
arpl
test
iret
ljmp
push
mov
aad
sbb
sbb
xchg
push
stos
lret
xor
inc
pusha
enter
add
cmpsb
std
xchg
pop
fs
mov
jbe
sahf
pop
jp
gs
lock
aam
mov
mov
or
xchg
or
xor
test
insl
fmulp
icebp
cld
push
mov
jo
inc
std
aad
das
push
out
dec
in
add
scas
push
test
push
xchg
iret
mov
or
pop
mov
push
push
aas
nop
push
push
jmp
add
adc
aad
add
addr16
add
jg
mov
test
mov
in
push
cmp
add
ss
add
jb
or
xlat
ret
call
mov
into
and
dec
or
lea
add
callw
adc
add
mov
jp
jmp
xchg
or
mov
mov
mov
lock
jno
hlt
in
mov
std
xchg
jns
push
xor
leave
add
lods
aas
ljmp
rcr
fstpt
inc
sub
cmp
notl
xchg
lods
out
roll
jp
lret
sub
and
and
das
dec
mov
jmp
sbb
lret
cmp
adc
int3
lea
out
cmp
inc
add
pop
cmp
pop
fcoml
arpl
popa
loope
add
inc
imul
or
pop
inc
push
mov
or
iret
adc
mov
loopne
xlat
fistpll
std
int3
jo
cs
jno
jbe
maskmovq
fwait
cmp
or
int3
ljmpw
js
jg
jg
test
dec
push
movsb
stos
incb
notb
imul
scas
xchg
in
jle
add
imul
cmpsl
daa
test
loop
enter
addr16
push
lcall
mov
push
dec
std
enter
orb
pusha
push
push
into
fs
enter
cli
xor
sub
sbb
inc
movsb
les
in
sbb
pop
jg
or
test
xchg
mov
jns
mov
xor
mov
lods
inc
pop
sbb
dec
hlt
adc
push
addl
imull
add
xchg
dec
addr16
inc
xchg
lcall
or
cmpsb
fdivrl
cmp
dec
dec
cmp
dec
das
xchg
mov
and
mov
mov
mov
cmp
subb
dec
int3
bound
cmpsb
out
sti
fwait
gs
mov
mov
out
cmp
sub
pop
cmc
les
fdivs
call
popa
fiaddl
jecxz
lret
add
cmp
or
dec
or
add
imull
scas
imul
mov
fistl
call
test
sti
rorl
nop
xchg
shlb
xchg
jl
jmp
cltd
pop
movsb
adc
push
lret
stc
les
xchg
fstl
or
push
ljmp
in
add
in
jmp
jne
mov
in
fmuls
int3
xchg
in
sub
call
lea
test
sbb
inc
dec
jns
jp
repz
jbe
lods
jae
adc
mov
mov
popf
loopne
shrl
xlat
rorl
sti
hlt
fstpl
dec
enter
lock
jp
int
inc
cmp
adc
pop
jns
mov
push
movsl
out
jmp
and
mov
shll
fdiv
ljmp
movsl
je
scas
test
inc
push
xchg
sbb
repz
cmp
dec
mov
pop
out
xchg
xor
jecxz
into
inc
adc
jo
clc
mov
pop
sahf
ljmp
cld
sub
xchg
adc
add
in
cmpsb
in
outsl
mov
lcall
mov
jg
xchg
in
adc
pushf
add
xor
sub
add
sbb
jl
insb
ret
adc
flds
addb
mov
loopne
push
std
insb
pop
test
insb
add
mov
push
dec
jb
jns
add
mov
jo
test
mov
les
push
in
push
jnp
psraw
mov
add
das
inc
shlb
cmp
inc
pop
popa
mov
iret
sbb
inc
push
dec
sti
sahf
and
lock
sub
or
lods
in
adc
jne
sbb
test
fiadds
out
inc
scas
xchg
lods
mov
xor
cwtl
pushf
bound
sbb
jae
add
cmp
push
mov
roll
add
mov
test
jecxz
jae
shrb
fstpl
cmpl
inc
jo
push
clc
cld
stos
inc
sub
cs
lea
cmp
stos
mov
or
cld
imul
sub
dec
inc
nop
sbb
and
in
cmp
xor
sbb
add
movsb
cltd
popa
xor
cmp
cmc
pop
xchg
mov
push
cmc
mov
jo
pop
fs
mov
rcl
fsts
enter
sbb
leave
mov
mov
jl
mov
or
fildl
add
ss
fsubl
sub
fnstsw
pop
filds
dec
xchg
push
jle
xchg
movsl
xor
push
jmp
loop
inc
or
mov
aad
jp
hlt
or
xor
cmpsl
paddusb
dec
pop
and
xchg
jne
jnp
je
loope
push
scas
add
xchg
cmpsl
das
mov
lods
and
push
jns
fs
xor
fwait
xchg
ret
repz
and
jo
scas
cmpsl
inc
lock
imul
ret
fwait
mov
push
lock
jg
mov
pop
shll
xchg
mov
leave
repz
mov
scas
xchg
sub
sub
push
js
jg
xor
bound
iret
pop
iret
ja
movsb
mov
push
sbb
lock
je
mov
inc
jmp
movb
dec
subl
aas
inc
push
sub
mov
lcall
push
das
lods
adc
test
fisttpl
and
cltd
xor
fwait
xlat
lahf
adc
out
inc
imul
cltd
cltd
mov
jmp
lods
loopne
loopne
ret
and
xchg
mov
dec
jbe
in
dec
imul
add
mov
mov
dec
fstps
mov
arpl
mov
hlt
popa
cwtl
adc
and
dec
sarl
loope
xchg
or
fcoms
inc
clc
jno
popa
cwtl
adc
and
dec
sarl
loope
xchg
or
fcoms
dec
call
adc
pop
rorb
jno
insb
call
cmp
sbb
mov
movsl
jo
shlb
adc
loope
cs
shl
push
stc
leave
xlat
fsts
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fadds
pop
and
jbe
sub
int
or
pop
add
add
push
or
add
data16
add
add
add
loopne
cmpsl
add
add
xchg
add
add
pop
add
add
add
lea
pop
add
add
adc
xchg
add
add
add
add
add
cmpsb
add
add
add
cmp
sahf
add
add
add
add
add
add
fwait
add
add
sub
sahf
add
add
add
test
movsb
add
imul
cmp
add
add
add
add
add
sbb
sbb
cltd
add
add
add
add
or
push
add
add
add
jge
in
add
add
push
add
add
push
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
data16
jl
dec
add
dec
add
addb
add
loopne
inc
add
add
mov
xchg
cmp
cltd
add
cmp
fwait
add
add
add
add
add
int3
add
add
arpl
add
add
add
popf
add
add
add
add
and
add
pop
add
add
add
or
sahf
add
add
mov
data16
push
add
add
add
inc
add
add
or
pop
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
xor
pop
add
add
bound
push
add
add
pop
add
add
add
add
push
add
add
fadds
test
add
add
pop
add
add
push
sahf
add
add
mov
add
add
add
add
loop
sbb
lods
add
push
add
push
add
add
add
add
add
add
popf
add
cmp
cltd
add
outsb
add
add
push
add
add
add
lea
or
and
pop
add
add
add
add
add
add
addl
add
add
inc
add
add
add
add
sbb
push
add
fadds
pop
add
ret
add
jge
pop
add
add
add
add
sahf
add
int
addb
add
add
add
add
add
pushf
add
xchg
add
add
data16
add
add
add
add
js
into
add
add
add
add
add
add
add
sbb
lea
pop
add
add
add
add
popl
xchg
add
jge
dec
add
add
sbb
sbb
addb
add
add
mov
add
add
add
mov
jb
xchg
add
add
add
add
add
pop
add
add
add
add
add
sbb
sbb
jo
push
add
add
add
jl
pop
add
add
add
add
add
sbb
call
add
add
cmpsl
add
add
add
add
add
push
xlat
popa
pop
shrb
adc
fadd
jge
jg
jns
lock
insb
mov
pop
je
fsubrl
insb
push
clc
divb
hlt
call
mov
pop
mov
jp
jo
inc
adc
sub
inc
pop
jns
fwait
mov
jae
rclb
mov
dec
popa
push
std
xor
xor
dec
push
add
mov
testb
lret
or
dec
jecxz
lahf
movsb
ffreep
mov
cmpsl
inc
das
add
in
jne
push
lahf
pushf
iret
xor
xchg
xor
mov
sbb
pusha
cmc
insb
lock
or
jmp
mov
aam
movsb
fisttps
add
jno
iret
addl
outsl
test
add
mov
loope
sub
shll
xlat
mov
in
scas
nop
addl
pop
jo
xor
es
mov
inc
cli
push
lret
aas
jbe
scas
or
jg
cmpsl
pop
xchg
mov
cltd
addr16
lret
xchg
pop
push
jno
pop
shlb
pop
inc
or
jbe
cmp
cmpsb
xchg
out
inc
test
cmp
add
cltd
stos
sti
negl
mov
loope
movsl
or
mov
roll
or
pop
test
inc
pop
scas
mov
xor
cmp
cmp
notw
sub
call
pop
pop
push
push
xchg
fisttps
dec
mov
lahf
repnz
push
cmp
jg
popf
push
dec
cmp
int3
faddp
push
adc
cmp
stos
sub
arpl
push
pop
rorb
xor
pop
sahf
push
popa
pop
les
pop
shlb
std
dec
adc
dec
adcl
in
cmpb
je
pop
out
adc
dec
lods
push
jge
push
mov
mov
int3
mov
add
mov
sub
and
add
into
out
xor
xor
xchg
xor
jp
and
stc
jl
adc
xchg
cs
and
inc
xor
inc
inc
push
jno
ljmp
fidivrl
mov
sbb
add
loopne
int
or
cs
insl
es
dec
pop
xor
pop
xor
stc
out
and
jl
ja
std
inc
iret
cmpsl
scas
js
xchg
adc
popf
cmc
cmp
cmp
inc
cld
cmp
cmpsl
jns
mov
fisubrs
xor
adc
mov
scas
cmp
daa
loope
inc
mov
imul
insb
pushf
mov
fistpll
and
mov
fcmovnu
cmp
sahf
mov
mov
jbe
sub
out
fcomi
movsl
std
aas
rcrl
in
push
jl
arpl
orl
jp
dec
add
sti
lcall
cmpsl
test
pop
pop
push
mov
aad
and
fadds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
