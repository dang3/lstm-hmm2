fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
dec
xor
and
adc
add
int3
insl
or
pop
inc
int
frstor
hlt
popf
imul
pop
and
adc
add
je
je
push
cmp
movsb
cltd
xchg
std
test
aam
les
pop
cmp
or
dec
cmp
xchg
mov
shrl
push
jno
arpl
sbb
stos
movd
jmp
push
or
outsl
and
std
mov
cwtl
sbb
cltd
xchg
es
lret
mov
pusha
les
jb
mov
mov
dec
movsl
daa
cmc
pop
push
decl
push
rcrl
int
mov
adc
xchg
jnp
push
adc
enter
or
fistpl
jmp
push
or
and
int
int
pusha
imul
jae
cmc
popa
lods
sub
fildl
jmp
jo
mov
adc
cmp
fisttpll
pop
std
insb
je
add
lahf
hlt
dec
xchg
push
sub
popf
mov
fadd
rclb
adc
fdivl
jnp
fcompl
adc
pop
xor
or
sbb
pop
int
fnstsw
in
popf
cld
lods
into
mov
push
or
popa
popa
jbe
add
mov
fldenv
xchg
hlt
out
mov
das
dec
cmp
je
sub
rcr
lods
icebp
mov
in
mov
mov
xor
and
jo
inc
or
push
cmp
movsb
in
xchg
std
test
aam
les
pop
and
adc
add
je
fs
mov
movsb
in
xchg
std
test
aam
les
clc
aaa
xchg
pop
push
xlat
pushl
pop
movsb
sub
scas
roll
and
and
fistps
fcompl
aad
and
inc
pop
jmp
inc
lret
idivl
and
test
xchg
stos
cmp
out
mov
loop
cmpsl
scas
cmpsl
push
out
push
adc
push
sub
add
iret
pop
arpl
test
dec
cld
fcomps
in
movsl
repz
pop
imull
push
nop
cld
data16
pop
dec
add
jecxz
fisttpl
rcl
push
push
lods
mov
add
rorl
jb
stos
fs
in
mov
jnp
xor
hlt
mov
lods
mov
inc
pushf
aas
or
pop
mov
in
add
loop
data16
jp
je
lret
dec
aaa
mov
rorb
dec
jmp
jne
out
inc
or
xchg
bound
mov
add
mov
jmp
sub
sbb
dec
jb
ljmp
mov
pop
cmp
rcll
push
xor
pop
push
fcmovbe
push
cwtl
jge
adc
jbe
test
and
mov
sub
sub
push
pop
inc
xor
insb
loope
xchg
mov
pop
into
jp
popf
inc
pop
lods
mov
fnsave
push
mov
clc
mov
fs
enter
dec
ss
hlt
cs
imul
fnsave
enter
scas
mov
pop
aam
pop
xor
mov
xchg
xlat
sti
jmp
das
sbb
and
dec
and
pop
adc
mov
ljmp
mov
mov
stos
mov
mov
add
popa
popf
push
out
das
je
addr16
outsl
pop
cwtl
arpl
and
add
jmp
ret
jae
xchg
scas
sahf
adc
cmp
bound
add
stc
and
in
push
push
pop
adc
push
cmp
adc
mov
insb
daa
inc
das
push
lcall
mov
sub
in
sbb
test
fisttpl
inc
popl
lods
mov
clc
aaa
repnz
jmp
lcall
rcr
dec
xchg
stos
dec
arpl
xor
in
push
int
lret
dec
sbb
pop
jp
loopne
mov
ss
add
addr16
sub
dec
cmc
xchg
cmp
cmp
cmpb
hlt
in
jnp
aas
adc
xor
aad
pop
mov
jl
inc
xchg
sbb
iret
ljmp
movsl
lds
cmc
daa
or
dec
fdivp
stos
adc
and
sbb
mov
lahf
jnp
push
into
cwtl
int
test
out
dec
das
mov
add
mov
push
outsb
pop
leave
leave
enter
add
jae
shll
stos
dec
xchg
in
es
mov
push
mov
je
js
addl
cmp
push
cmp
mov
xlat
adc
mov
sub
mov
fidivs
ret
and
int3
lret
ret
mov
out
jge
ret
into
cmpsb
loope
in
mov
inc
dec
icebp
dec
and
jecxz
pusha
popf
subl
lret
stc
and
aaa
push
mov
xchg
mov
mov
in
mov
rclb
mov
int3
or
cmp
xchg
mov
stos
push
jnp
sbb
ret
pop
hlt
pop
add
push
adc
sub
xor
mov
aas
inc
cwtl
xchg
fidivl
lods
dec
fwait
and
mov
mov
enter
jne
lods
bound
lods
pop
scas
mov
pushf
push
fwait
mov
lahf
out
adcl
push
insl
addr16
std
inc
das
cli
fs
dec
ljmp
arpl
pusha
push
fs
mov
push
dec
pop
rol
push
movsb
mov
add
gs
fwait
mov
jbe
and
add
cli
pop
push
cmc
aas
jo
jecxz
nop
in
and
push
cmp
mov
push
ret
mov
pusha
out
leave
adc
dec
rorl
ljmp
enter
inc
or
cmp
and
fisubl
jbe
cmp
and
pop
fcompl
jp
lcall
in
adc
popa
outsb
or
pop
fstpt
xor
xor
test
jne
repz
insl
arpl
fwait
clc
in
sbb
shrb
sbb
ljmp
cmc
sbb
flds
cmp
ds
mov
push
pop
inc
in
mov
addb
pop
cwtl
xchg
pop
sub
nop
push
prefetch
push
sti
imul
in
jnp
aas
jno
daa
cltd
mov
call
xor
pop
movsl
daa
into
dec
xchg
xor
push
je
sbb
pop
out
pop
cmp
fst
out
cwtl
imul
ss
mov
push
push
cli
mov
movsb
inc
out
push
pop
sub
pop
mov
bound
add
cmp
cmp
sahf
xor
aam
dec
icebp
js
aam
ljmp
xor
sub
mov
fldl2e
and
pushf
in
jmp
and
lock
rcrl
and
add
in
dec
push
test
test
fwait
cmp
sbb
pop
hlt
adc
mov
lods
or
cs
das
out
and
xlat
mov
cmpsl
jne
cmp
cmp
sti
dec
or
imul
mov
sub
aad
or
test
push
jp
repz
sbb
popf
sub
loop
sarb
adc
minps
and
xor
dec
jo
cmpsb
inc
pop
in
fcomps
in
inc
dec
push
test
jg
or
or
sbb
push
lahf
jo
xchg
push
shlb
pop
pop
out
sub
fcom
push
and
rclb
int3
filds
mov
mov
mov
call
mov
in
loope
test
mov
fisubs
sbb
scas
sub
push
xchg
xor
das
add
and
sbb
pop
sbb
outsl
in
loope
dec
pop
ja
push
popf
int3
shl
insl
xor
fsubr
das
int3
add
sub
out
dec
xor
push
out
es
mov
popa
das
ds
scas
out
mov
add
in
cwtl
cld
cwtl
inc
sbb
jns
in
mov
mov
lret
mov
ljmp
inc
adc
xchg
jo
cmpsb
inc
in
mov
jge
mov
adc
xor
inc
sti
sub
cmp
xor
test
add
cmp
loopne
xor
cli
iret
mov
mov
fists
or
jl
ret
paddd
stc
adc
and
mulb
fdivrp
mov
xchg
inc
xor
shr
push
repnz
xchg
cmp
cltd
cmpsb
fwait
loope
es
cmc
cmpsb
mov
xchg
jno
adc
orl
push
or
adc
fucomp
cltd
xchg
jnp
out
je
add
xor
xchg
in
fwait
daa
out
jns
clc
fadd
mov
xor
push
out
shlb
andl
xor
scas
mov
or
xor
dec
into
aad
inc
stc
sbbl
orb
fmulp
shrl
es
adc
push
mov
pop
lods
mov
out
fsub
mov
jp
pop
lret
loope
outsb
lock
out
or
outsl
and
inc
cmp
xchg
pop
adc
jge
xchg
mov
das
idivb
aad
pop
mov
int3
shlb
into
mov
call
jno
insb
pop
adc
push
and
jecxz
mov
or
cmp
jp
and
adc
inc
inc
lea
incl
mov
mov
adc
insl
mov
cltd
add
fwait
sbb
mov
das
cmp
aas
lods
and
in
cmp
rorl
dec
test
sti
stc
fisubs
ljmp
dec
and
mov
mov
out
xchg
push
xlat
jae
dec
or
movsl
pusha
sbb
jns
xchg
jmp
mov
pop
aas
fisttpll
sub
jp
in
movsl
fldenv
xor
ror
mov
nop
dec
cltd
pop
mov
push
testl
mov
jge
xchg
xchg
add
mov
stos
cmp
sahf
pop
aas
shrl
push
push
xor
insl
push
aad
mov
jmp
fs
jno
jne
lahf
fsubrl
jp
pushf
pop
leave
xchg
outsl
xchg
roll
in
fisubrs
std
pusha
enter
imul
mov
clc
mov
or
out
xor
and
enter
movsl
cs
mov
idiv
lods
scas
xlat
mov
pop
ja
inc
and
shlb
lds
loope
jnp
pop
push
aas
lods
mov
adc
hlt
std
mov
call
or
shl
lahf
mov
out
dec
shl
nop
or
push
inc
fadds
pop
int
shll
daa
adcl
jns
jecxz
loope
add
and
jge
mov
je
mov
cmc
adc
loope
popa
repnz
stos
aas
bound
pop
mov
frstor
xchg
mov
outsb
mov
shrl
pusha
xchg
addr16
dec
ss
cmp
sbb
adc
test
pushf
push
push
lahf
mov
test
lcall
add
sbb
aas
dec
xlat
shrl
aas
dec
and
imul
icebp
sub
xor
adc
sbb
pop
ljmp
push
ljmp
notb
mov
out
pusha
xor
daa
jecxz
mov
cmp
and
jno
inc
ljmp
inc
xchg
pop
push
popa
and
mov
jecxz
cmp
xor
mov
sub
jae
in
xchg
negl
pop
nop
iret
mov
fimull
sahf
fs
in
fstpl
sub
iret
aad
aad
pop
loope
sbb
lock
in
outsl
jb
dec
scas
cmpsb
insb
fs
mov
mov
xchg
mov
inc
fiaddl
popl
mov
cmp
add
fs
mov
inc
sub
adc
loop
shll
and
out
cmp
inc
push
xchg
outsb
fisubrl
lret
sub
stos
cwtl
jne
sbb
xor
lods
shll
shlb
jns
mov
out
dec
add
jae
inc
fiaddl
cmp
imul
and
jns
xchg
pop
jmp
out
xor
imul
cmp
nop
cmp
mov
cmp
pop
and
fst
lock
loopne
enter
pop
and
repz
lock
iret
jo
pop
add
outsw
pusha
dec
es
jne
cmpsl
and
lods
ljmp
mov
test
sbb
xchg
lahf
adc
mov
jbe
ja
int
mov
mov
cmp
in
push
dec
jecxz
sbb
int
inc
and
pusha
add
pushf
push
dec
xchg
aaa
xchg
sbb
jno
sbb
in
movsl
ret
shlb
rolb
jb
jl
icebp
or
fwait
cmp
mov
stos
out
leave
es
aad
push
push
cmp
jns
jne
stos
test
insb
mov
int3
xor
cmc
addl
mov
mov
clc
stos
arpl
mov
push
mov
sub
xor
cmp
mov
dec
pop
lahf
je
int3
add
insw
xchg
jg
and
xchg
std
scas
test
mov
lcall
mov
adc
fstpl
cmc
mov
jnp
in
mov
or
sbb
and
cmpsl
divb
pop
and
and
jnp
hlt
cmp
push
push
cmp
ds
faddp
and
clc
or
add
ret
pop
mov
mov
in
inc
jmp
fcompl
lea
jae
fstl
pop
sub
inc
dec
jbe
dec
jge
in
in
out
lahf
sub
test
adc
or
ror
sub
push
in
jge
or
mov
cmp
and
lret
sbb
aam
out
cs
xor
shlb
lds
mov
lods
push
or
or
lds
lret
in
add
cli
insw
xchg
mov
fbstp
mov
adc
outsb
daa
fbld
and
push
leave
arpl
adc
arpl
cmp
push
aam
lahf
push
mov
xor
pop
out
lods
ret
dec
inc
mov
mov
bound
repz
mov
push
cmp
dec
sti
scas
stos
pop
sub
xor
int
add
jnp
jp
mov
push
mov
cmpsl
inc
imul
push
cmc
imul
dec
notl
js
mov
xor
and
movnti
push
mov
aaa
movsb
mov
test
xor
lods
imul
mov
cmpsb
jno
inc
mov
in
jnp
pop
adc
xor
fcoms
xor
repnz
shlb
aaa
mov
aad
jmp
fisubs
jnp
or
ret
xchg
lcall
lcall
lea
xor
ret
loopne
jo
int
cli
loope
cltd
jno
push
clc
xchg
aaa
jb
imul
ret
mov
xchg
or
add
or
jns
mov
mov
add
and
cmp
sub
add
xchg
je
test
into
fadds
outsb
shrb
loope
sbb
inc
cmp
scas
adc
xor
out
sub
xchg
pusha
pop
cmpsb
sbb
insl
jge
mov
lock
or
jnp
nop
gs
in
push
add
stos
jns
cmp
pushf
xor
andb
pop
ficoml
divl
xchg
dec
cld
jbe
cld
mov
repnz
fldcw
inc
fsubr
mov
or
mov
pop
lods
repnz
in
scas
push
xlat
sub
mov
ljmp
or
lds
cmp
repz
sub
sub
xor
mov
sub
lods
push
movsl
insl
mov
xlat
aas
adc
jbe
sub
pop
push
cmp
sub
dec
inc
add
push
sub
pop
ds
sub
icebp
out
inc
sub
clc
test
je
cli
les
mov
cmp
sub
jge
je
sbb
es
or
rep
xchg
mov
xor
mov
out
test
je
jae
jmp
lahf
loopne
jl
mov
mov
addb
pusha
push
xlat
sbb
sub
sub
sbb
and
cmpsl
js
clc
lcall
jae
stos
fadds
inc
and
lea
dec
xor
les
or
push
sbb
jp
orb
movups
int
inc
adc
cmpsb
mov
sbb
jecxz
ja
loopne
gs
sub
scas
loopne
fdivrp
push
adc
enter
in
repnz
insb
mov
pop
es
filds
hlt
sti
mov
mov
push
or
shl
and
inc
jmp
fsts
outsb
clc
outsb
inc
sbb
daa
add
xchg
dec
je
inc
add
sbb
add
jnp
lret
push
sar
daa
xor
mov
popa
push
daa
cli
inc
or
mov
xchg
pop
scas
push
push
mov
mov
xchg
std
cmp
iret
scas
iret
mov
lds
out
xchg
xlat
push
pop
sub
outsl
cmp
sub
jg
pusha
pop
xchg
inc
sbb
jp
movsl
push
into
je
jns
pop
cmp
iret
popa
mov
xor
cwtl
ja
mov
movsl
mov
dec
gs
lods
sub
pop
ljmp
pop
jb
test
gs
jno
push
pop
clc
sbb
xchg
addb
scas
mov
js
xchg
cmp
push
test
inc
test
in
sbb
stos
xchg
repnz
shrb
push
iret
push
icebp
mov
sub
jne
sbb
xor
outsl
leave
sahf
pusha
xchg
xchg
and
adc
push
ficoms
xchg
push
sbb
xchg
sub
sub
pop
jmp
sbb
inc
push
lahf
or
fstps
mov
jl
inc
stos
pop
andl
mov
les
cwtl
dec
pop
mov
or
pushl
adc
xor
fwait
push
frstor
lret
dec
pop
das
mov
mov
push
mov
push
jns
loop
pop
add
stos
sub
test
xor
outsb
dec
out
pushf
xor
adc
mov
dec
test
sub
fbstp
subb
mov
inc
and
sub
mov
popa
in
cli
sub
popa
call
pop
int
sub
dec
into
push
int
and
push
jp
lret
jns
mov
mov
jg
push
or
inc
push
push
dec
ss
shlb
sti
xor
arpl
lods
les
sbb
outsb
scas
iret
bound
sub
fstl
cwtl
jo
outsl
mov
punpckhbw
add
loop
and
add
cwtl
pop
cltd
inc
aad
pop
shll
js
movsb
mov
or
shll
out
cld
gs
cmp
cmp
dec
mov
ljmp
movsl
push
cmpsb
enter
arpl
hlt
movsb
call
pop
out
shlb
xor
outsl
in
lahf
inc
pop
dec
add
pop
in
out
cmp
arpl
mov
and
pop
cmp
imul
repnz
loopne
in
int3
jl
mov
inc
cs
bound
push
lock
inc
mov
mov
inc
imul
dec
rolb
imul
stos
ficompl
mov
stos
test
comiss
fucomip
aas
test
adc
jne
sub
subl
or
pop
mov
movsb
daa
notl
pop
fidivrs
sbb
mov
aaa
jb
sbb
xchg
sub
je
ret
xor
stos
dec
push
jecxz
movsl
xor
lods
fstpt
push
sub
aam
xor
inc
out
pop
jae
add
pop
mov
rep
mov
aam
movsb
lret
loop
fcmovnu
push
stos
mov
fwait
mov
arpl
xchg
lcall
jno
lret
jo
mov
outsl
inc
in
ljmp
or
imul
bound
inc
add
or
adc
ss
divb
mov
xchg
insl
enter
cli
orb
testl
fcomps
outsl
cmpsl
xchg
push
xchg
xchg
push
test
lods
xchg
push
out
ret
mov
push
adc
pop
in
xor
or
std
dec
mov
and
xchg
fistps
cltd
mov
push
cmp
rclb
mov
mov
mov
sarb
jns
ss
mov
das
mov
int3
daa
mov
fstps
push
je
pop
loop
movsb
dec
xchg
inc
or
dec
ljmp
jmp
mov
sbb
stc
sbb
sbb
in
and
dec
xor
add
xchg
in
mov
fadd
fld
add
movsl
add
sub
test
adc
pop
std
aas
scas
ret
adc
inc
icebp
pushf
jle
movl
movsl
pop
scas
fcmovnbe
repnz
cli
imul
mov
fcomps
shrb
dec
xor
xor
or
call
and
fdivp
mov
jne
inc
mov
call
ds
xor
sbb
inc
adc
add
lock
push
fsubrl
mov
add
pop
pop
jg
cmp
mov
add
sahf
mov
add
xchg
add
jb
lcall
hlt
rcll
aas
fnsave
daa
mov
cmp
les
faddp
jge
bound
xor
cmpsl
fdivr
inc
add
out
rcrl
lahf
xor
mov
arpl
sub
test
jbe
addr16
push
jns,pt
inc
add
jle
mov
fucomip
mov
pop
jae
imul
rorl
mov
or
aam
shlb
push
jl
sarl
imul
and
addb
sbb
dec
xchg
clc
dec
mov
dec
or
repz
mov
enter
xor
adc
test
lds
mov
or
stc
xor
test
adc
loop
loopne
sub
sahf
lret
les
xchg
dec
lcall
or
mov
repz
out
movsl
shlb
lret
mov
les
call
adc
add
je
fs
mov
movsb
in
xchg
std
test
aam
les
pop
and
adc
add
je
fs
mov
movsb
in
xchg
std
test
aam
les
pop
and
adc
add
je
fs
mov
movsb
in
xchg
std
orb
mov
and
jge
or
push
cmp
push
inc
xchg
std
repz
jl
fwait
push
stos
inc
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
or
xor
int3
adc
sbb
movsl
inc
mov
shlb
and
add
add
shlb
mov
aad
xchg
bound
push
mov
in
cmc
add
jmp
loop
lret
push
stos
sbb
cwtl
test
aam
in
mov
xchg
inc
repnz
dec
into
pop
adc
or
inc
mov
xchg
jmp
push
fsts
pop
or
mov
pop
dec
sbb
or
repnz
inc
inc
mov
ja
adc
push
or
mov
int
and
adc
dec
outsb
mov
cmp
pop
and
in
stos
add
insl
loop
shlb
inc
xchg
stos
bound
jge
and
popf
mov
dec
mov
lock
or
lret
fisubrl
pop
and
cmp
bound
mov
ss
aad
mov
cmp
std
adc
or
mov
jae
jbe
inc
mov
inc
popa
aad
mov
repnz
fadds
adc
ja
pop
jp
dec
stos
pop
movsl
sub
xor
ja
arpl
popa
rcrl
sub
and
jbe
adc
in
aam
cmc
pop
aam
lods
pop
mov
outsl
add
mov
xor
or
push
out
mov
flds
mov
mov
nop
jle
addr16
xchg
je
add
push
mov
test
bound
xor
and
adc
add
shlb
mov
test
bound
xor
and
adc
add
repz
or
adc
in
or
dec
inc
or
xchg
mov
ljmp
in
jo
fisttpll
add
fsubrs
sub
add
sub
xor
inc
fists
dec
testb
xor
or
or
jg
adc
inc
test
dec
outsl
in
mov
pop
add
lods
pop
scas
and
jp
mov
inc
inc
sub
leave
sbb
rorb
cwtl
pushf
xchg
push
jg
pop
fs
xchg
in
adc
or
popa
or
stos
dec
aas
inc
ljmp
shll
out
mov
cltd
xchg
aaa
xlat
jnp
push
mov
adc
mov
test
mov
nop
mov
fdivrs
push
lahf
mov
sbb
mov
arpl
ljmp
push
or
stc
dec
mov
pop
dec
in
ds
mov
fstl
ja
into
mov
jmp
test
jg
repnz
cmp
sbb
scas
clc
mov
xchg
sub
out
icebp
mov
jmp
push
fisubrs
fldl
xchg
mov
pop
pop
pop
mov
jmp
xchg
add
push
push
inc
xor
lcall
mov
push
mov
xor
hlt
inc
dec
or
inc
push
ss
aam
addb
push
enter
pop
push
and
rorl
addb
rol
notb
into
jle
ficoms
repz
cltd
xor
or
and
popf
mov
mov
pop
dec
rcrl
xor
aas
sub
or
call
mov
sbb
sbb
popf
push
add
push
call
jb
cmp
stos
cmpsb
sub
add
xchg
repz
add
or
iret
adc
sub
sbb
or
aas
rcl
jo
ljmp
jmp
and
adc
sti
loop
test
xchg
adc
movsb
mov
sbb
rcrl
sbbl
cmp
push
aad
inc
fdivs
sub
inc
mov
adc
movsl
scas
fsubs
rorl
cli
mov
outsb
push
lods
jl
movl
insl
jbe
icebp
jecxz
ret
rcr
dec
and
aas
fisttpl
ret
imul
hlt
cmc
fildl
das
mov
jno
mov
mov
mov
stc
adc
add
wbinvd
inc
pop
sub
shlb
int3
sbb
mov
xchg
outsb
xor
mov
in
sbb
push
mov
imul
add
imul
sbb
add
jl
pushf
xor
push
push
aad
fiadds
jo
mov
mov
stos
cwtl
int
pop
shr
dec
sub
idivb
mov
sbb
ret
add
push
std
jo
mov
ret
lock
dec
test
add
add
out
mov
icebp
jmp
push
outsb
xchg
mov
pusha
iret
or
inc
xor
rorl
jp
dec
xchg
nop
cltd
lret
cmpl
xchg
pop
xchg
mov
out
xchg
pop
movsb
sbb
and
fldl
sbb
cmpsb
push
pop
je
icebp
pop
cwtl
data16
add
pop
sub
stos
shlb
lods
outsb
rcrb
cmpsb
scas
mov
mov
lds
adc
mov
sti
insl
push
fsubl
mov
push
xchg
stos
jg
jnp
pop
pop
pop
mov
aas
sahf
int
jg
jo
dec
adc
or
push
adc
sti
inc
or
cmp
and
dec
arpl
sub
data16
adc
imul
xchg
fistpll
sarb
mov
scas
sbb
pop
xor
sbb
in
xchg
or
addl
xor
stc
cli
mov
adc
mov
jg
inc
test
add
repnz
adc
ss
loop
xchg
mov
sbb
jg
or
xor
movsl
loop
and
sub
lcall
js
sub
push
lret
jbe
pop
enter
jge
jecxz
adcl
into
clc
jecxz
loop
pop
sbbl
inc
xchg
pop
popf
gs
sbb
push
mov
aaa
dec
xor
out
clc
xlat
scas
add
inc
mov
ljmp
mov
frstor
inc
hlt
sub
dec
test
mov
add
xor
cmp
add
vpcmpeqw
add
and
pop
pminub
mov
dec
cmpsb
cmpsb
jl
lea
pop
addb
bnd
iret
stos
test
ljmp
mov
test
stc
js
mov
mov
lock
cmp
inc
lods
mov
mov
mov
testl
outsb
push
in
or
in
mov
dec
jg
inc
imul
cmp
adc
icebp
cmp
dec
cmc
add
adc
inc
ret
or
int3
sbb
loop
rolb
xchg
ror
mov
popf
sbb
xor
fmuls
cmp
xor
ljmp
outsl
mov
mov
xor
outsb
sbb
jne
mov
out
fimuls
dec
jl
mov
scas
stc
jmp
jl
mov
fsubrs
mov
in
pop
jmp
lock
jle
cld
cltd
adc
dec
jecxz
inc
gs
jbe
or
subb
pop
mov
inc
loope
ficoml
mov
imul
xor
loopne,pn
push
fxtract
es
jmp
ljmp
push
ss
andb
lods
or
mov
lea
loope
test
aam
hlt
push
push
jmp
sub
aad
jb
test
sbbb
pusha
sub
mov
jle
xlat
das
mov
in
popf
or
xor
aas
inc
pop
fstpt
push
popf
jo
sbbl
or
sti
out
test
incl
lret
mov
mov
push
ret
sbb
xchg
popf
movntq
mov
mov
xor
and
mov
fdivrl
inc
fiaddl
or
repnz
mov
lcall
mov
mov
mov
pushf
inc
push
xor
sarl
sbb
add
lods
ret
push
subb
add
sti
rcl
je
cmc
sub
push
pop
pop
mov
cmpb
in
or
shrb
cli
hlt
fisttps
pop
inc
loopne
and
pop
ja
mov
and
adc
jns
mov
dec
sahf
sub
ds
cs
mov
scas
mov
mov
and
mov
or
data16
ficoms
cmp
xlat
dec
xchg
fcomp
repz
cmp
dec
ljmp
clc
sub
in
push
mov
cltd
ss
mov
or
xorb
mov
jecxz
pop
into
inc
jge
mov
sahf
cmpsl
xchg
and
jmp
test
les
cld
jb
mov
jne
enter
push
in
fucomp
mull
jbe
popf
bound
test
or
cs
cmpsl
dec
sti
movsb
sub
in
imul
cmpsb
leave
and
add
pop
fcmovnb
data16
fcmovnbe
sub
or
sbb
inc
xchg
or
fstp
jno
xlat
outsb
pmaxub
and
outsl
fsts
mov
ljmp
sub
xchg
xchg
xor
inc
sbb
inc
icebp
jg
pop
mov
sti
dec
fcoms
pop
mov
sbb
xchg
xor
adc
std
orl
jg
push
stos
mov
or
adc
cmp
add
mov
push
in
adc
faddl
or
adc
fstps
sbb
mov
movsb
jns
lret
sti
mov
fistps
fs
jecxz
or
push
scas
sbb
filds
adc
jns
lock
inc
pop
sbb
add
popa
jbe
and
repnz
flds
dec
mov
enter
les
test
fldenv
cmc
popa
sub
or
test
gs
pop
jl
pop
jae
call
in
aas
pop
jae
pop
sbb
outsl
and
mov
cmp
shr
cmp
test
inc
bound
sarl
pop
fistpl
push
sti
out
clc
mov
xchg
mov
pop
inc
jp
in
add
or
sub
sbb
inc
mov
cmpsl
cmp
out
pushf
cmp
lahf
push
jmp
int3
jae
stos
stos
dec
data16
cmpb
fdivrl
repz
sub
repnz
pop
loopne
cmp
and
sahf
imul
fdivrp
cmpsl
xchg
mov
mov
xor
out
scas
loopne
pop
addr16
pop
daa
loope
or
stos
cs
xchg
mov
cs
xor
jge
sbb
push
daa
fdivrl
outsl
cwtl
in
icebp
mov
outsb
push
pop
rolb
mov
cmp
lods
add
jbe
sbb
jecxz
out
test
sub
push
arpl
inc
gs
daa
mov
cmc
xchg
les
sbb
add
add
pop
xlat
loope
adc
sub
nop
test
mov
and
xchg
cmp
xor
insl
out
dec
xor
pusha
sbbl
or
enter
add
xchg
mov
test
add
inc
cmp
fisubrl
lods
rorb
sub
dec
add
fldt
dec
popa
das
pop
shlb
loope
loopne
ret
mov
pop
test
mov
xchg
mov
cmp
mov
fmuls
dec
in
cmpsl
fstpl
mov
std
push
jp
ret
icebp
push
call
popa
or
dec
add
pop
out
shll
jmp
mov
cmpsb
std
jp
mov
pop
add
mov
insb
icebp
add
sarb
dec
sub
add
pusha
pop
subl
pop
add
jb
pop
dec
movsb
jb
mov
push
inc
std
fsubs
jle
test
push
scas
sahf
fsubl
andl
inc
mov
shlb
xchg
pushf
cmp
sbb
and
lret
pop
sarb
push
int
scas
or
fistpll
bt
sub
rcr
push
adc
push
xchg
or
cld
sarb
and
inc
fwait
dec
int3
ret
popa
xchg
test
cmc
jbe
sbb
xor
popf
cmp
movsb
dec
xor
sbb
js
mov
push
ret
imul
pushf
es
notl
mov
mov
cmp
faddl
cmp
mov
and
test
push
adc
fs
add
jnp
xchg
mov
movsl
push
jecxz
shrl
mov
scas
xchg
xchg
leave
test
push
dec
fistps
pop
push
fists
fstp
push
mov
push
in
and
pop
ret
movsb
mov
ds
mov
fisubrs
cmpsl
stos
jnp
lods
push
sbb
sub
jmp
fs
lcall
pop
les
xor
sbb
pop
pop
jg
dec
add
fstp
pop
pop
es
cli
shl
or
adc
cmpl
icebp
clc
in
ja
jecxz
iret
mov
mov
and
fimull
inc
mov
xchg
pop
adc
pop
fidivrs
call
out
jle
fs
pop
xor
mov
ds
adc
scas
xchg
outsl
in
jbe
movsl
or
test
mov
mov
push
invd
scas
pusha
xchg
push
mov
push
icebp
xor
xor
aas
inc
dec
push
push
ljmp
ret
mov
or
sbb
fwait
mov
adc
dec
rcll
shrl
or
pop
or
cmpsb
gs
movb
push
stos
outsl
push
push
and
jecxz
je
xchg
push
cmp
cwtl
lods
inc
scas
loope
inc
loop
sbb
xchg
cmc
lahf
jns
jl
cld
ret
mov
sbb
push
int3
insl
cmpsl
mov
icebp
pop
scas
in
adc
push
cmp
fidivrs
or
xor
fdivl
adc
push
and
inc
fldenv
sub
icebp
pop
push
mov
xchg
adc
loop
cmp
sbb
decl
mov
cmp
js
cli
mov
daa
scas
or
icebp
pusha
outsb
and
jle
mov
push
inc
add
data16
test
pop
mov
gs
and
flds
pop
rcll
push
ret
stos
xor
push
xchg
push
lret
and
push
pop
add
subb
cmp
dec
sbb
mov
daa
dec
add
pop
pop
adc
stc
mov
or
jb
into
mov
cmp
mov
lods
cld
neg
adc
push
mov
push
cmp
scas
push
push
adc
adc
lret
push
inc
xchg
loopne
add
mov
popf
out
dec
fdivl
jl
sbbb
adc
mov
pop
jb
out
mov
insl
add
leave
cmp
xor
lcall
orl
jno
nop
fisubrl
enter
popf
xchg
cmpsb
push
cltd
fwait
out
xchg
and
or
push
cld
xchg
cmpl
ror
jae
push
imul
lahf
inc
sahf
loop
into
push
xchg
and
lea
loop
xor
cmp
jle
mov
xor
fcomps
fsubrl
pop
jge
lcall
mov
sub
mov
cltd
inc
dec
lcall
jb
jmp
jnp
pushf
inc
xor
lds
cmpb
bound
adc
and
into
jl
pop
ljmp
dec
mov
cmc
cmp
in
cmp
xchg
jl
std
enter
add
aad
sub
popf
test
test
push
pop
sub
ret
test
addr16
sbb
jmp
fidivl
jle
and
fiadds
movsl
int
loopne
and
jnp
test
shl
lret
faddl
sbb
mov
fld
dec
mov
xor
mov
movsl
pop
xchg
push
mov
push
ljmp
movsl
icebp
fs
bound
xchg
fcmovnbe
imul
popa
xor
ror
xchg
insl
push
xchg
push
mov
gs
hlt
cmp
push
pop
addr16
arpl
push
sbb
out
pop
bound
sahf
orb
inc
ror
mov
jge
sub
mov
pop
push
mov
mov
das
into
push
and
loope
mov
pop
sub
inc
pop
pop
das
scas
push
jae
push
orb
testb
xor
pop
mov
ret
sti
je
cmp
je
push
mov
dec
ja
and
fdivrl
bnd
dec
push
jl
adc
push
inc
ret
mov
das
cld
ffreep
jbe
lret
push
scas
and
sub
addl
pop
inc
mov
std
and
test
cld
data16
push
cs
pop
adc
adc
mov
arpl
scas
and
out
mov
enter
sbb
xchg
add
adc
cmp
das
daa
fs
lret
dec
xor
fstpt
loope
in
sub
les
cmp
and
ficomps
sbb
sbbb
cmpsb
jno
sub
into
mov
inc
cmp
pop
shlb
adc
and
cmp
ljmp
jmp
jb
dec
adcl
jecxz
pop
je
jp
push
cmpsb
jnp
dec
jnp
lahf
cs
lods
push
xor
dec
popa
dec
cli
inc
lret
mov
jo
fimuls
mov
dec
out
stos
pop
mov
mov
pop
mov
cmp
les
sub
cmp
jns
aad
jb
inc
stos
int
ss
mov
xchg
icebp
dec
push
or
and
push
jne
cltd
push
xor
xor
outsb
push
iret
dec
mov
mov
sub
shlb
jo
std
fisubrl
std
cmp
sarb
outsl
and
xchg
xor
jmp
mov
dec
xlat
cmp
pop
ret
and
test
cwtl
or
nop
adc
lods
movsl
stos
out
testb
mov
fnstenv
jl
lds
das
cli
ja
scas
xlat
je
or
xchg
push
lcall
push
or
mov
rcll
aas
hlt
in
cmp
xchg
outsl
and
xor
mov
pop
iret
or
xor
jnp
xchg
call
movsl
sbbb
sbb
cmpsb
cmpsl
stos
and
xchg
jno
in
pop
dec
test
test
test
sbb
add
inc
cmp
loope,pn
xor
push
ret
push
and
pop
sub
rolb
add
decl
dec
das
jns
popf
ja
idivb
test
mov
cmp
scas
repz
push
mov
in
dec
and
dec
or
iret
cmp
inc
and
fbstp
es
sbb
xchg
cmpsb
adc
in
addr16
stc
inc
icebp
push
xor
rolb
adc
orl
out
pop
test
push
inc
rorb
mull
sub
mov
xor
xchg
lahf
add
js
mov
int
push
lret
sub
sbb
call
scas
push
ljmp
das
cmp
inc
cmp
pop
pop
mov
jae
pop
cs
pushf
mov
into
nop
jbe
cmpsl
and
repz
jl
xor
xchg
mov
les
popf
pop
or
fwait
inc
or
xor
in
es
xchg
ja
imul
popa
sbb
xchg
std
inc
and
xchg
out
lret
addr16
mov
dec
lea
jg
dec
and
cmp
pop
add
jecxz
in
add
jbe
lret
fldz
and
mov
add
pop
shrl
pop
mov
adc
lods
inc
sahf
mov
ret
cli
aaa
out
or
dec
int3
xchg
lods
in
push
xor
sub
push
rol
xor
loop
rolb
pop
lock
cmp
or
and
pop
mov
clc
arpl
test
jae,pt
xlat
push
jne
jg
daa
jmp
push
adcb
cli
movsl
push
fstl
lods
pop
ljmp
or
ret
les
stos
in
xor
mov
hlt
adc
jns
pop
add
mov
jnp
cmp
xor
push
lret
sub
fwait
hlt
fldcw
jb
lods
cmpsb
cmp
mov
jb
sahf
or
cld
xlat
in
loopne
loop
loope
test
jne
mov
pop
lods
jne
mov
das
call
xchg
pop
dec
ficomps
xorl
aaa
mov
mov
jmp
sbb
dec
and
notb
aaa
cmp
or
mov
push
stos
xchg
mov
decl
shr
adc
ss
mov
and
sub
stos
std
sarl
push
sarl
movsl
push
add
je
rcr
jnp
mov
lahf
ficoms
sub
lea
hlt
inc
pop
leave
cmp
ljmp
xchg
adc
cwtl
arpl
outsl
sbb
mov
add
jg
pop
sbb
roll
inc
es
mov
xor
es
sbb
idivl
roll
xor
xchg
sbb
cmp
sbb
adc
push
mov
pop
dec
jne
mov
sbb
dec
jnp
or
jnp
out
jp
or
jne
cmpb
adc
je
or
adc
xchg
lret
lock
bound
scas
fcomp
dec
ret
jmp
xor
lods
or
imul
insl
jbe
pop
jge
test
add
enter
test
push
movl
push
pop
mov
pop
sti
lret
xchg
xor
xchg
scas
xor
cs
in
ret
adc
test
mov
mov
sti
into
inc
pusha
push
mov
repnz
cmp
dec
lods
sub
insl
xor
ds
jne
shll
repz
cmp
jp
int
into
cmp
jl
out
jae
stos
in
insl
push
push
stos
and
pop
push
test
sti
inc
cmp
sub
mov
scas
sbb
cwtl
adcb
mov
inc
and
fcmove
pop
scas
test
jmp
sub
jbe
or
sbb
and
shrl
hlt
dec
adc
add
rcll
mov
js
imul
ss
jl
divb
xchg
jo
cmp
push
push
pop
repnz
lock
xchg
pop
mov
dec
fimuls
cmp
out
xchg
push
mov
jle
lock
push
insb
jle
ljmp
mov
stos
mov
in
cmpb
jg
fistpll
cmpsl
lods
push
inc
fidivrl
add
lcall
fwait
js
js
mov
scas
ja
mov
mov
mov
and
ret
js
cli
loopne
out
xor
loopne
inc
cmp
push
mov
test
bound
xor
and
adc
add
shlb
mov
test
bound
xor
and
adc
add
shlb
mov
xorl
inc
lds
int3
and
adc
add
rcrb
mov
test
enter
xor
sbb
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
call
push
fadds
jge
inc
cli
xor
loope
rcrl
sub
sbb
enter
test
mov
jns
icebp
js
dec
rcll
sub
or
icebp
jno
popa
rclb
inc
mov
mov
add
pop
ret
and
push
decl
addl
scas
inc
sti
adc
mov
adc
mov
rcrb
sub
imul
les
sbb
push
mov
cmpsb
movsl
js
sub
xchg
out
pop
jno
insb
cmp
sahf
inc
imul
mov
aas
cmpsl
xchg
aad
sub
cmp
xor
inc
add
push
push
xchg
mov
jmp
push
jns
jge
cmpsl
and
mov
pop
sbbl
xor
cmp
push
mov
push
lods
dec
cs
shl
cmp
add
sbb
popl
add
mov
inc
xchg
loopne
mov
sub
aam
mov
repnz
loope
enter
mov
adc
loope
roll
xor
sbb
test
and
push
fimuls
push
cwtl
push
push
mov
mov
repnz
les
jne
xchg
add
xor
inc
les
insl
mov
sub
sbb
jl
lea
mov
loopne
mov
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
js
dec
rcrl
sub
sbb
ja
stos
add
fcmove
mov
cmp
xchg
inc
movsb
shrl
and
jbe
dec
cmp
je
std
sub
or
je
addr16
inc
push
mov
insl
xchg
push
sbb
mov
hlt
xor
sbb
pop
mov
sbbb
inc
rcrl
sbb
jge
les
cmp
or
push
test
sti
pop
push
cmc
dec
pop
jmp
mov
inc
fsqrt
sub
jbe
add
ja
orb
cmp
and
pop
pop
movsb
lcall
mov
sti
and
dec
xor
into
sbb
movsb
add
xchg
and
push
out
xor
xor
iret
lret
xchg
and
movsl
sysret
sbb
ret
popa
cld
out
in
or
movsl
outsb
ljmp
push
pop
loope
inc
aam
jns
and
dec
jne
sbb
std
push
cmp
les
js
mov
pop
pop
sti
inc
cmc
or
mov
add
push
in
stc
mov
mov
sub
sub
mov
shlb
in
adc
push
into
mov
ja
pop
pop
fidivl
pop
mov
pop
push
mov
mov
lret
mov
xor
adc
inc
enter
fwait
movsl
inc
cmp
push
dec
je
aaa
mov
mov
clc
sub
mov
cld
lods
pop
outsb
sub
push
addr16
xchg
pop
ds
shrl
int
adc
daa
xor
movsl
xor
iret
repz
sti
shlb
je
testl
ds
dec
and
nop
or
ficompl
xchg
je
leave
mov
out
dec
movsb
xor
lcall
lret
xor
mov
mov
or
insl
xor
stos
dec
push
cmpsb
call
jae
push
ljmp
push
and
and
mov
mov
adc
or
add
mov
and
dec
clc
push
xchg
jle
pop
xor
fmul
ljmp
xchg
push
int
icebp
movsl
pop
inc
jae
aaa
pop
das
loop
ljmp
or
popa
out
jns
sbb
and
and
or
sub
daa
stos
mov
or
das
adc
test
lcall
and
mov
cmp
imul
mov
jmp
je
lods
xorb
or
insl
jno
aaa
add
imul
pop
jecxz
loope
adc
mov
mull
xchg
out
cmpsb
pop
jo
fisttpl
add
add
test
repnz
xchg
cltd
inc
jmp
rcll
data16
int
adc
sbb
dec
repz
mov
and
adc
frstor
lock
rcrl
xchg
or
sub
clc
mov
xlat
loope
add
xchg
add
xor
sub
push
stc
push
inc
inc
mov
mov
hlt
idivl
ds
jmp
ficoms
push
sub
jo
inc
xor
jnp
rcr
scas
aas
test
test
lods
xor
and
in
sbb
daa
popa
imul
or
mov
push
mov
xchg
add
jo
loop
jae
lock
fisubrl
and
js
inc
in
in
xor
sbb
push
out
fdivp
mov
and
or
pop
mov
pop
loope,pn
in
xchg
jl
cli
or
mov
arpl
push
dec
dec
jp
dec
mov
mov
mov
jle
imul
pop
xor
or
pop
sbb
pop
jle
sub
jne,pt
fldenv
cs
outsl
or
push
adc
fldl
adc
push
popf
mov
lea
ret
xorb
subl
iret
xor
adc
fiaddl
pop
jno
cmp
push
shll
sub
fs
scas
dec
testb
out
mov
mov
inc
push
fbstp
loop
cli
and
sahf
jne
jp
add
lahf
jae
jle
repnz
xchg
std
mov
xchg
ljmp
or
and
cmp
dec
pop
dec
sub
push
int
add
push
mov
addr16
ret
loop
ret
add
push
xchg
mov
aaa
pop
bound
lods
xchg
cmp
ficoms
insl
xrelease
mov
lret
inc
lret
mov
xor
aam
pop
and
xor
jl
ss
mov
mov
pop
inc
mov
ja
pop
dec
jg
lods
negl
loop
xor
inc
xor
dec
push
push
mov
scas
dec
or
cmp
cld
fdivrs
das
iret
mov
nop
jb
mov
test
int3
pop
popa
out
mov
test
sbb
sub
sub
cmpsl
sbb
cmp
and
pop
sub
fldenv
repnz
cmc
push
sahf
lock
jp
mov
jb
lods
push
repz
sub
imul
sub
xchg
mov
inc
addr16
testb
mov
adc
cmp
mov
lock
pop
xor
sub
repnz
dec
sbb
inc
push
mov
xor
nop
jb
push
insl
adcl
int
repnz
xor
imul
call
outsl
jg
jbe
pop
popl
adc
in
sti
add
mov
int
out
loopne
jno
inc
pop
orb
add
xchg
out
incb
lods
sbb
xchg
inc
add
sub
std
scas
iret
dec
lret
imul
leave
fldt
test
xchg
sub
jmp
xor
int
pop
sbb
or
icebp
scas
aas
test
lds
cld
xchg
inc
pusha
imul
jp
add
xchg
dec
mov
mov
push
cmp
dec
mov
push
test
xchg
jnp
and
adc
pushf
xorb
in
pop
sti
lock
and
sub
xor
movsl
icebp
pusha
adcl
cmp
pop
movsl
leave
mov
mov
mov
jmp
push
bound
outsb
je
in
inc
mov
mov
ret
jecxz
mov
xchg
cmp
shrb
push
outsb
mov
pop
push
arpl
insl
insb
add
imul
mov
sub
fildll
aad
subl
faddl
mov
mov
sti
xor
outsb
mov
or
enter
xchg
jno
ficoml
sub
testl
stos
scas
out
xchg
adc
in
leave
ds
mov
imul
add
mov
aas
push
fwait
mov
je
adc
cmp
or
scas
pop
push
sub
mov
dec
xor
mov
mov
ja
pusha
xchg
cmp
mull
out
push
adc
mov
ja
scas
sbb
scas
es
inc
dec
les
sub
rcll
imul
sbb
inc
out
mov
das
mov
adc
es
add
shll
decb
hlt
mov
sub
pop
aam
add
and
movsb
cmc
push
pop
or
push
int
sar
orl
mov
fldl
mov
xor
divb
and
jmp
pop
stos
xchg
dec
vdivss
inc
stc
mov
xchg
movsb
out
mov
and
test
loope
jp
test
lock
adc
inc
inc
shrl
jp
cltd
call
cli
setbe
mov
popf
nop
pop
das
popf
jno
mov
and
cmc
cmc
lds
and
mov
fdivs
sti
mov
cmp
jae
dec
mov
nop
jge
mov
mov
ja
mov
out
mov
cmp
mov
xchg
adc
sbb
cld
add
and
adc
hlt
dec
and
cld
pop
mov
movsl
xchg
dec
add
cmp
fistpll
push
adc
inc
in
mov
andw
mov
mov
movl
xchg
mov
jno
jb
bound
lock
int3
add
lret
pop
cmpsl
arpl
mov
jo
mov
mov
xor
xlat
mov
inc
mov
in
leave
daa
xchg
jg
cmc
mov
and
hlt
cmpsb
adc
jb
ja
mov
jo
rcll
cmp
adc
rorl
jecxz
pop
out
xlat
test
mov
jge
mov
rcrl
push
gs
inc
mov
pop
inc
fisubs
in
xchg
into
jns
sbb
or
das
sub
xchg
imul
mov
xor
andb
pop
iret
js
pop
out
popf
dec
sbb
dec
cltd
pop
mov
loop
xor
repnz
outsl
or
sti
shlb
mov
pop
scas
and
xchg
insl
movsl
xor
pop
push
ret
ljmp
jne
push
or
aas
pop
or
dec
lods
push
pop
in
add
push
or
mov
fst
mov
std
xchg
sub
push
int
mov
add
popa
mov
sbb
std
std
std
dec
adc
push
add
xchg
gs
clc
xor
mov
lock
jle
in
popa
repnz
popa
outsl
insb
mov
pop
push
adc
je
mov
mov
stc
ja
in
out
jae
icebp
fidivl
cmp
fidivs
mov
mov
movsl
movsb
pop
jns
dec
imul
inc
test
pop
xchg
adc
mov
sub
jb
mov
mov
mov
lret
aas
imul
mov
jmp
push
imul
es
mov
ss
cwtl
in
movd
sahf
cmp
movsb
movsb
icebp
dec
mov
fidivl
and
movsl
pop
lret
out
jne
hlt
and
popf
xlat
xlat
stos
in
andl
sbb
idivb
jle
enter
jge
loop
std
out
xchg
cltd
decb
insl
cmp
mov
add
cmp
je
movsl
push
push
push
push
push
inc
push
clc
pop
pop
adc
mov
call
xchg
mov
int3
jno
and
clc
fcmovb
outsb
insl
xor
mov
mov
pop
aam
push
jae
push
push
mov
push
and
insb
shrl
cmpsb
mov
pushf
leave
cmpb
jecxz
jp
xor
add
xor
push
mov
cs
movsb
dec
xchg
test
and
inc
and
orl
mov
bound
fbstp
adc
repz
fisubrs
int3
sbb
pop
scas
ss
cld
xor
mov
loopne
int3
or
dec
or
jle
jge
sub
push
push
jecxz
imulb
pop
sub
add
mov
into
or
cltd
dec
pop
push
mov
xchg
stos
and
addr16
push
adc
sahf
xchg
mov
push
in
pusha
arpl
inc
mov
es
sbb
xchg
mov
pusha
push
std
sub
mov
out
aas
in
jle
mov
in
fwait
loop
and
int3
cltd
loop
fcompl
cmc
push
stos
xor
ret
cltd
mov
mov
jp
inc
mov
rcll
aas
push
nop
xor
lods
in
lds
in
insb
les
adc
iret
lret
mov
out
xchg
daa
inc
mov
xchg
les
mov
cmp
int3
push
cs
mov
dec
adc
cmc
lea
fdivp
xor
cltd
cmc
xchg
inc
les
cmovle
sti
lcall
fcoms
stos
ret
sub
pop
lods
mov
data16
cwtl
inc
mov
mov
aas
mov
shll
or
mov
nop
mov
xchg
cmp
cmc
or
push
stc
mov
sarb
aas
mov
pushf
jmp
push
ss
das
inc
in
jbe
imul
ret
cmpsb
cmp
xchg
stc
push
lods
mov
fldcw
jo
cwtl
rolb
rcl
add
sar
outsb
inc
fistl
loopne
mov
xor
pop
cmc
xor
pop
sbb
mov
hlt
adc
and
loop
add
hlt
mov
xchg
pop
pop
gs
rcr
mov
and
lcall
aas
mov
jmp
rcrl
or
xchg
mov
cmpsb
in
rcrl
push
jb
sbb
jle
jp
lock
push
rolb
sub
pop
fs
test
mov
fwait
push
cli
xchg
sbb
add
pusha
mov
outsl
loope
jne
mov
xor
aaa
sub
js
push
mov
repz
push
movsl
stos
adc
arpl
xor
lea
and
dec
iret
pushf
ss
imul
jmp
push
sbb
cmpsl
jg
xlat
push
decb
mov
mov
cli
mov
jge
insl
popf
out
flds
ret
cltd
notl
mov
jo
xlat
insl
or
push
in
mov
sbb
jg
pop
push
lret
or
push
mov
dec
lock
push
adc
inc
or
jo
jle
out
out
aam
andb
fdivs
outsl
add
jb
inc
jmp
cwtl
cmp
mov
xchg
adc
inc
mov
and
sbb
mov
jnp
ja
roll
mov
xor
mov
addb
pop
fwait
cmp
or
out
mov
mov
or
adc
int
adc
aaa
sbb
jbe
sti
mov
fbstp
scas
mov
xchg
popa
inc
cs
push
inc
lahf
rol
mov
and
pop
sub
dec
push
lea
sub
and
sub
sbb
inc
mov
add
sbb
mov
call
jno
rcrb
mov
out
rorb
xchg
jb
enter
mov
out
xchg
filds
sub
xor
dec
scas
pop
pop
je
or
repnz
fists
xchg
lcall
scas
push
or
rep
lods
or
sub
cmp
add
or
scas
cld
mov
pusha
mov
jle
mov
xor
mov
xlat
mov
adc
add
mov
outsb
jmp
dec
ror
lahf
xchg
cmp
push
jg
xor
call
pop
cmpsb
push
sub
pop
adc
mov
cmp
mov
call
fsubl
mov
jg
mov
inc
sbbl
pop
cli
hlt
add
push
jno
outsl
and
mov
ja
es
jp
sub
es
cmp
dec
out
gs
add
dec
hlt
add
ljmp
icebp
enter
mov
das
lock
fisubs
fs
aam
pop
loopne
sar
stos
push
xor
faddl
sub
lods
mov
sub
ja
push
inc
mov
push
or
inc
mov
add
and
mov
and
pop
or
mov
fwait
call
cmp
sahf
out
mov
mov
adc
mov
inc
mov
fildll
sub
xchg
xorb
outsl
xchg
fbstp
cld
sub
test
xchg
mov
sub
sub
cs
mov
mov
mov
pop
xchg
loop
push
sub
pop
rcll
mov
loopne
dec
mov
arpl
lods
cmp
xor
jg
push
divb
imul
push
push
stc
jl
dec
lret
aad
inc
imul
ss
sbb
and
jne
rcr
bound
mov
sub
and
imul
pushf
dec
stos
mov
iret
repz
call
aad
js
mov
pop
jbe
sub
xor
rcrl
push
jge
cmpsl
jg
push
aas
sub
cmp
jl
fwait
jecxz
jge
xchg
inc
sub
add
out
mov
std
nop
mov
loopne
xchg
nop
cmc
in
mov
clc
xchg
ret
sub
jle
ja
xor
enter
out
sub
adc
les
push
and
xor
lods
jecxz
gs
sahf
loope
sbb
mov
xlat
repnz
pusha
cwtl
in
fs
mov
mov
pop
cmp
aad
icebp
mov
xlat
leave
xor
clc
aaa
or
adc
addr16
sar
mov
jl
out
mov
sti
mov
out
xchg
ljmp
pop
testl
sub
lcall
mov
ret
out
push
sub
jmp
adc
stos
jnp,pn
aam
sbb
push
sbb
mov
and
xlat
rclb
jl
stos
sbb
dec
pop
xchg
rorl
jno
leave
inc
xor
cmp
dec
out
aad
arpl
xchg
popa
ljmp
mov
hlt
loopne
ss
into
mov
les
icebp
push
xchg
cmp
decl
add
push
inc
jmp
push
iret
int
insl
sub
imul
mov
shrb
inc
sbb
sbb
sub
or
dec
jmp
inc
les
adc
inc
movd
jbe
loop
inc
and
dec
leave
mov
ror
xchg
xor
mov
es
cmpsl
sub
xchg
mov
add
scas
iret
arpl
xor
push
or
push
out
ljmp
fucomip
mov
enter
test
mov
mov
or
pushf
and
sub
aaa
mov
mov
mov
mov
test
jb
popf
mov
inc
rorb
negb
inc
sti
add
stos
mov
bound
int
pop
sbbb
lods
jecxz
out
ja
push
jne
in
loope
xchg
lods
lock
jo
mov
mov
out
xor
or
out
loopne
xchg
jnp
out
push
or
adc
cmp
inc
lret
push
sub
divl
push
mov
aas
push
pusha
rclb
ret
sbb
sbb
push
rorb
lock
pop
push
test
stc
sbb
xchg
lds
sbb
outsb
or
sbb
add
sbb
mov
and
push
popf
mov
mov
or
cmp
mov
cmp
lret
fmull
js
in
idivl
xchg
inc
decl
pop
into
shll
cs
ficompl
add
sub
inc
or
repnz
aas
mov
mov
xor
add
or
cmc
dec
clc
xor
dec
cli
adc
out
cltd
jb
mov
push
jb
icebp
subl
mov
mov
inc
cmp
mov
or
pop
pop
sub
dec
imul
in
nop
repnz
test
cwtl
ret
jg
test
call
pop
push
jl
aas
aam
lods
imul
pop
mov
sahf
sub
sarl
inc
test
imul
lods
hlt
pop
mov
ret
aaa
pop
je
inc
add
mov
je
inc
js
xchg
push
outsl
les
int
pop
pop
imul
pop
call
popf
test
arpl
and
scas
mov
jp
sbb
dec
repz
add
pop
push
jmp
shll
std
aam
sub
cmp
fs
jne
fwait
out
in
shll
dec
test
in
xchg
push
add
jp
xchg
jbe
les
mov
sub
jl
out
mov
cltd
or
enter
jbe
jp
xor
adc
scas
movsl
pushf
push
push
or
pop
inc
add
xchg
pop
xchg
adc
xor
pop
sbb
dec
insb
jne
cld
jg
fimull
or
mov
ret
in
inc
stos
xor
paddq
sub
loope
imul
icebp
test
or
jb
push
xlat
in
jp
jb
adc
hlt
and
jp
subl
jmp
sbb
and
dec
insb
pop
mov
outsl
add
int3
addb
pop
cwtl
and
pop
inc
and
in
cmp
adc
or
jae
dec
cmpsb
mov
jmp
adc
notb
or
aad
push
test
fisubl
push
mov
inc
push
and
fstpt
lahf
mov
and
pop
and
xor
jae
out
mov
xchg
pop
mov
ficoml
add
aad
addr16
xchg
adc
je
adc
push
in
push
push
in
or
insl
xor
aad
into
xchg
sbb
xchg
es
pop
popf
or
add
ror
inc
xchg
adc
jo
mov
iret
jge
shrb
mov
or
vcvttps2dq
fdivrl
arpl
jns
in
aas
mov
mov
pop
call
ret
adc
iret
mov
out
loopne
mov
pop
gs
mov
fdivrl
xchg
pop
dec
sarl
xchg
hlt
mov
imul
lock
repnz
lcall
enter
imul
mov
sbb
fs
inc
test
mov
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
js
dec
rcrl
sub
sbb
leave
push
fadds
xor
add
rcrl
pop
cmp
jle
add
fidivs
arpl
xor
inc
xchg
push
outsb
inc
jg
dec
xchg
pop
mov
les
cmp
loope
icebp
out
add
adc
and
xor
popa
sahf
pop
outsb
cmpl
out
out
rorl
loope
icebp
out
cmpsl
xlat
into
mov
mov
inc
outsb
sbbl
cs
push
mov
xchg
jo
mov
lcall
dec
xor
mov
or
pop
push
jnp
pop
push
sbb
xchg
push
and
push
push
mov
mov
pop
mov
mov
xchg
mov
leave
js
shll
shrb
subb
dec
mov
inc
sub
out
add
adc
stos
popa
or
sti
jno
pop
xor
rcl
jle
lea
sub
fsubl
into
divl
push
or
mov
and
stos
rol
mov
jl
incb
out
or
push
dec
mov
cmp
mov
mov
jbe
jle
mov
dec
or
xor
push
fidivs
scas
inc
mov
jecxz
cmpl
cs
ds
push
stc
push
ret
scas
add
pop
scas
in
cmp
adc
outsb
ret
dec
add
shrb
xchg
mov
mov
push
stos
push
mov
scas
adc
add
or
inc
or
das
in
repz
subl
test
mov
icebp
mov
or
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
inc
push
pop
icebp
fists
mov
dec
sbb
dec
jmp
xor
stos
daa
dec
push
mov
pop
cs
fwait
mov
mov
ret
cwtl
pop
sub
jmp
and
add
sarb
rorl
mov
jecxz
test
jl
test
jg
sub
movnti
notl
pop
xor
jmp
aam
sar
mov
pop
push
xor
jb
imul
shrd
insl
lock
fs
gs
mov
lret
mov
divl
into
jno
sub
outsl
iret
and
xor
mov
fldenv
dec
push
xchg
jnp
out
pushf
adc
cwtl
addr16
mov
hlt
lret
aam
loop
test
mov
push
fwait
cwtl
push
lcall
sub
stos
mov
int
cmp
mov
push
dec
insb
insb
lcall
mov
lahf
rorb
incb
dec
mov
lret
int
pop
dec
dec
movsl
jne
mov
cltd
push
repnz
addl
lret
or
sbb
xchg
addr16
out
push
cld
js
sub
jns
and
inc
cltd
pop
ja
mov
cmp
push
shl
cld
das
icebp
out
aas
add
xor
push
enter
gs
dec
and
inc
xor
xor
sti
and
push
mov
jmp
std
mov
or
outsb
adc
div
adc
outsl
gs
pushl
rcll
std
div
dec
push
fiadds
add
sbbl
cmp
enter
cmp
sahf
cmc
in
shlb
scas
neg
dec
push
js
or
push
rorb
dec
xchg
jno
scas
mov
lahf
in
jne
aam
loope
test
mov
idivl
dec
inc
leave
sub
push
cs
out
aas
mov
lock
mov
sti
sbb
test
shrd
ds
dec
xchg
adc
stos
rcll
inc
gs
js
jecxz
pushf
cmp
mov
into
or
aad
pop
sbb
push
jecxz
cmp
xchg
and
push
sub
fstps
shll
and
sub
push
xor
negb
rorb
cmpsl
notb
push
iret
mov
adc
xor
mov
into
scas
sar
out
lahf
in
dec
push
push
push
or
xchg
push
sti
test
sub
cld
xchg
fldl
cwtl
cld
sub
inc
sub
es
cwtl
jecxz
test
lds
stos
aaa
xor
xchg
pop
push
push
je
notl
mov
sbb
aas
cmp
inc
iret
xchg
pop
xchg
adc
dec
cmp
ret
pusha
mov
sub
sbb
out
mov
aad
and
aam
sub
mov
fwait
pop
mov
popf
pop
in
pushf
divb
shrb
sub
pop
es
std
inc
xchg
mov
cltd
gs
push
aaa
in
add
adc
icebp
lcall
and
out
iret
out
les
into
cmp
xor
xchg
fisttps
cmp
inc
andb
ljmp
fisttpl
fwait
cltd
cmp
add
xchg
pop
xchg
test
and
mov
mov
in
xor
stc
out
clc
jmp
sbb
push
fdivl
ror
sti
mov
sbb
stos
into
and
sub
sbb
push
inc
fdivrl
fsts
mov
push
cli
into
jae
ret
pop
pop
outsl
inc
xor
sbb
aaa
cld
and
add
pop
dec
frstor
into
rcl
sbb
rcr
dec
inc
insb
cmp
or
cwtl
xlat
or
int
test
mov
mov
cmp
cmp
out
addr16
lock
adc
je
push
xchg
insb
sti
lods
mov
or
outsb
fstps
mov
adc
repnz
rolb
cmp
enter
pop
cmp
add
lahf
test
or
and
or
inc
data16
mov
jmp
ds
andb
fisubrl
hlt
aad
xor
sub
or
jmp
xchg
call
mov
aad
int3
clc
mov
pop
sub
inc
jno
jae
pushf
test
xor
loopne
gs
inc
insb
lcall
jae
fxtract
cld
pop
out
popa
movsl
xchg
jb
nop
add
dec
je
mov
xor
test
in
repnz
push
sahf
repz
mov
xor
inc
push
outsb
inc
shl
testb
and
push
mov
cmp
adc
stos
aad
cmpb
dec
in
cmp
js
stos
push
orl
or
push
xchg
inc
mov
adc
hlt
and
mov
ficoms
inc
lock
pop
sbb
repz
pop
and
sbbl
jp
lods
iret
xchg
pop
xchg
fldenv
mov
subl
mov
xchg
mov
imul
ds
sbbb
adc
jl
jb
mov
ret
nop
cmp
push
outsl
in
sub
pushf
pop
inc
lret
xor
sub
xchg
xchg
pop
mov
mov
jge
popa
push
fadd
cltd
daa
fsubrs
lods
rorl
dec
push
mov
sub
scas
xchg
cmp
or
sar
push
mov
mov
push
insb
in
cmp
fwait
mov
sahf
js
mov
cmp
jle
xchg
ljmp
sbb
push
xchg
dec
jno
mov
lahf
push
pusha
sbb
or
cmc
dec
enter
adc
adc
lock
jbe,pn
popf
mov
aam
flds
mov
addr16
xor
sbb
rcll
xor
insb
pop
jnp
sbb
jg
in
mov
cs
mov
cmp
stc
mov
push
outsb
clc
into
pop
inc
cmp
mov
std
aas
repnz
mov
addr16
mov
cld
cmpsl
mov
sub
gs
push
test
sub
or
lea
je
mov
jae
xchg
cli
cld
jge
das
mov
out
push
out
aam
mov
jo
sbb
call
dec
dec
and
sbb
sti
and
dec
mov
in
out
mov
das
fldt
dec
pop
clc
jl
pop
and
adcl
pusha
hlt
sub
xchg
push
movsb
cwtl
cltd
xchg
or
sbb
cmpsl
mov
jg
shlb
sbb
push
cmpl
divl
call
xchg
lods
sub
and
xor
sub
leave
pop
ss
outsl
cmp
cmp
sub
gs
xchg
jo
lods
cmc
mov
jno
jns
pop
pusha
mov
push
adc
and
ret
adc
push
fimuls
xchg
dec
inc
enter
mov
mov
movsl
cmc
pop
test
decl
data16
dec
cmp
sub
mov
dec
sbb
nop
and
xor
mov
lds
cld
clc
add
imul
pop
or
leave
das
mov
mov
jmp
push
mov
insl
cmpsb
ret
enter
outsb
inc
jl
cli
pushf
outsb
push
in
mov
and
xchg
loopne
jbe
movsb
mov
pop
inc
push
adcl
add
mov
inc
rolb
test
mov
pop
loop
lret
sub
out
xchg
and
jbe
jns
adc
xchg
mov
adc
ljmp
lret
icebp
add
lahf
fcomps
lret
pushf
shl
scas
dec
testl
imul
mov
jmp
adc
jl
sub
cli
sti
in
jns
test
push
cs
inc
addr16
cltd
into
xchg
in
cmp
out
sub
sbb
dec
pop
outsl
leave
xor
rorb
sbb
mov
dec
sbb
in
sub
push
fisttpll
stc
sub
in
mov
xchg
mov
xchg
jno
xchg
out
daa
jle
sub
shr
lock
dec
jne
xchg
lods
jp
mov
push
fbld
sub
fisttpll
mov
arpl
dec
fwait
sbb
sbb
ficompl
xor
xorl
pop
loop
mov
sub
jo
pop
pop
js
fldenv
imul
inc
sub
cmpsl
lea
aaa
imul
inc
es
leave
sbb
push
inc
cwtl
sub
jg
adc
jecxz
and
push
stc
cmp
notb
cld
jp
in
out
into
mov
inc
test
lret
cmp
cmp
cmc
rorb
jge
pusha
mov
jg
out
enter
lahf
sarl
cmp
ret
inc
lea
push
lahf
mov
or
mov
pop
jg
into
fildl
pop
movsl
xchg
cld
leave
dec
cmp
xor
shl
and
movsl
dec
stos
xchg
mov
jo
jle
lods
mov
inc
mov
lods
pusha
mov
out
enter
cli
sub
mov
or
jae
dec
aas
mov
lods
in
mov
or
std
inc
sub
mov
jmp
fcoml
out
xor
sub
push
jo
jmp
adc
daa
and
dec
and
xchg
jge
hlt
adcb
clc
inc
fdivrl
daa
cmp
cmc
cmp
xor
dec
jae
mov
mov
cli
dec
lods
dec
pop
inc
stc
std
shrb
dec
fnstsw
and
cltd
mov
bts
mov
xchg
jno
push
sbb
adc
inc
cmp
out
and
mov
rclb
ficoms
mov
cmp
mov
xchg
lods
clc
push
fcomps
pop
das
dec
mov
push
out
lret
insb
stos
mov
popf
xchg
xchg
and
pop
mov
xor
scas
mov
call
xor
repz
xor
add
insb
jp
out
mov
sub
es
jmp
mov
push
fcoms
add
xor
dec
jnp
repz
jp
add
inc
jmp
or
inc
icebp
or
jns
jecxz
jl
test
testb
inc
lods
mov
mov
adc
out
loop
lret
fsubrs
pushf
push
xor
sbb
pop
or
popa
loop
and
ss
adc
sub
je
or
push
jle
add
xchg
in
aaa
cmp
sub
in
aam
out
add
pusha
mov
cli
push
jno
fmull
jb
fwait
jp
dec
and
dec
in
adc
insb
pusha
aam
ret
push
adc
repnz
es
cmpsl
loop
ds
out
lea
and
mov
inc
pop
fdivrl
dec
jno
push
in
fdivrs
icebp
fs
mov
cmp
ds
pushf
push
lret
push
xchg
mov
pop
std
aas
mov
ret
add
ficoms
mov
enter
aas
mov
incl
mov
cwtl
out
adc
cmp
je
jno
ljmp
fwait
xor
mov
sti
push
aam
xchg
or
js
shl
les
jl
sbb
mov
aam
outsl
mov
or
xor
xchg
loope
inc
adc
adc
xchg
lods
add
add
push
dec
mov
cwtl
xlat
mov
and
fs
out
push
movsb
add
cmpsb
aaa
orb
mov
testb
jnp
push
das
and
icebp
push
and
loope
sarb
out
mov
enter
cmp
add
shll
sbb
shll
shrl
cltd
xor
jae
dec
mov
scas
repz
cmpsb
and
sub
xor
cmpsl
push
loop
ret
sbb
mov
mov
les
and
pop
or
and
leave
or
hlt
mov
ds
movsb
dec
sbb
dec
and
add
xchg
sbb
dec
aam
insl
pop
inc
cmp
leave
add
push
jns
pop
mov
movsl
scas
jnp
ds
shrl
out
dec
mov
outsl
mov
xlat
sarl
mov
or
mov
andb
mov
dec
in
push
add
into
push
shr
out
sbb
test
jmp
sbb
sub
roll
sbb
sub
ds
ds
cwtl
idivl
shl
lret
push
rclb
imul
in
xor
cmp
insb
mov
add
xchg
mov
cli
daa
add
jecxz
rorl
sub
pusha
ret
mov
stc
pop
mov
sbb
repnz
jp
cltd
cmp
lret
pushf
mov
daa
lret
sub
pop
les
sti
arpl
or
ret
mov
pop
daa
xchg
nop
push
lods
and
aaa
call
mov
mov
shrl
sub
loope
inc
dec
jno
ret
add
jns
mov
adc
dec
add
and
jg
dec
and
loope
mov
add
or
push
leave
push
ljmp
lcall
adc
rorl
enter
in
rcll
test
inc
fsubp
mov
push
and
mov
add
test
xchg
cmp
push
arpl
je
pop
in
dec
jo
sbb
inc
mov
mov
and
lock
cmp
dec
int3
pop
xchg
jecxz
repz
scas
sti
repnz
js
jne
mov
aam
jo
imul
push
out
mov
test
xchg
fbstp
pop
inc
vmptrst
adc
repnz
dec
shr
sarb
jo
les
out
stos
std
iret
push
vpsubq
mov
pusha
mov
repz
fwait
jmp
enter
mov
jno
pop
out
mov
nop
or
mov
out
fildll
bound
sbb
push
ffreep
lahf
test
mov
lods
or
rol
dec
adc
sbb
sti
and
mov
das
inc
stos
cmp
and
dec
leave
xchg
sub
movsb
int3
fxch
test
cmc
dec
pushf
movsb
inc
clc
add
jne
cli
hlt
fiadds
repnz
sub
mov
inc
mov
jne
mov
push
dec
les
xchg
pusha
xchg
fwait
mov
outsl
addr16
pop
loopne
dec
sub
outsl
imul
and
insb
dec
adc
mov
and
pop
mov
mov
dec
les
fcoms
push
insb
xchg
out
loop
xchg
xlat
cld
pop
jl
dec
lock
scas
js
mov
in
mov
push
imul
pop
outsb
int
xorb
or
jle
fwait
mov
adc
cmpsl
ficoml
sbbl
mov
xchg
and
adc
arpl
fdivl
cmp
popa
mov
in
pusha
and
xor
roll
int3
sbb
pusha
lods
inc
mov
inc
stc
outsb
push
out
jp
lds
mov
jmp
out
int3
ss
xchg
int
cmp
les
loope
stos
in
or
int3
mov
mov
mov
cld
js
mov
push
adc
aas
movsb
adcl
cmp
sub
fwait
xchg
push
iret
out
sbb
pop
in
jno
inc
xor
sbb
andb
lds
icebp
xchg
sbb
orl
jo
ficomps
fnsave
push
push
jecxz
test
sub
add
int3
repz
dec
out
clc
xor
fimull
out
cmp
xlat
mov
cmp
sub
jb
pop
loop
cmp
sbb
xor
out
and
push
and
test
sbb
lods
push
out
jno
push
jp
mov
pop
lcall
jns
js
jle,pn
xor
sbb
pop
cmp
ret
push
mov
jae
jo
cld
cmp
inc
sub
pop
icebp
push
aam
jg
into
orl
mov
push
lret
push
mov
mov
dec
mov
call
enter
test
dec
dec
cmp
add
jnp
movsb
mov
loopne
sbb
sbb
sbb
test
jmp
push
jp
std
cmp
mov
xchg
es
out
xor
jg
outsl
or
sub
nop
pusha
lods
add
push
stos
adc
aad
mov
inc
in
adc
sub
cmpsb
ss
hlt
test
push
mov
jmp
int
add
and
jle
jecxz
cmpsb
xchg
mov
sti
das
mov
lods
test
je
mov
lods
mov
fwait
inc
jae
add
sbb
fildll
dec
push
or
push
out
shlb
lret
inc
xchg
mov
enter
add
mov
jb
repz
stos
sub
clc
mov
insl
mov
mov
std
fnsave
int3
adc
daa
pop
xchg
inc
ds
ljmp
xchg
xchg
movsl
dec
add
ljmp
sub
enter
mov
jecxz
fiaddl
lea
call
test
cmp
idivl
jmp
jmp
xchg
mov
inc
insb
mov
mov
lcall
popa
call
ljmp
xor
mov
sti
pop
cmp
push
add
xchg
sbb
and
cltd
andl
mov
and
ficoml
cmp
xchg
idivl
mov
outsl
mov
icebp
lea
add
ja
jecxz
out
daa
mov
jne
inc
hlt
pop
mov
pshufw
xor
scas
inc
sbb
lds
mov
push
insl
arpl
jb
test
rcrl
dec
mov
pop
push
inc
roll
or
pop
hlt
mov
je
mov
mov
lods
data16
int
pop
jnp
and
fmul
stos
or
lret
in
mov
fimull
fiaddl
bnd
in
imul
popa
loop
jno
test
ret
rclb
cmpsb
outsb
and
xor
jp
push
push
jo
movl
mov
lock
push
test
repnz
pop
xchg
lahf
iret
adcb
outsb
sbb
xchg
xor
xchg
ljmp
sbb
cmp
jae
xor
sbb
nop
test
mov
dec
outsl
outsb
or
xchg
jae
jb
daa
sub
cmp
clc
imul
mov
push
stos
popa
ret
stos
mov
inc
jp
lods
mov
aam
jb
ret
mov
add
in
push
adc
mov
in
jle
out
push
inc
stos
pop
cmp
andb
and
xor
filds
fwait
dec
sub
mov
dec
stos
movsl
std
negl
sbb
rcr
push
movsl
pop
addr16
iret
xor
and
cmp
cltd
sub
and
loope
sub
std
int3
jns
inc
pop
outsb
mov
les
jno
dec
inc
mov
adc
push
iret
pop
pushf
jmp
stc
lods
sti
adc
jns
enter
popf
test
mov
sahf
xor
fwait
sbb
mov
mov
in
ss
mov
inc
mov
mov
xchg
dec
add
lds
lea
scas
mov
stos
stos
xor
cltd
mov
mov
pusha
pop
into
cmp
mov
jb
test
push
dec
dec
push
lcall
push
lahf
sbb
insb
and
pusha
push
rclb
repz
pop
dec
pop
stos
sbb
divl
mov
adc
mov
dec
mov
jmp
rorl
mov
insb
out
inc
clc
test
ret
in
cmc
data16
roll
jl
notb
ds
mov
iret
sub
insb
inc
jae
and
inc
push
pop
sbb
pop
daa
loopne
outsl
pop
jnp
dec
and
or
pop
je
sbb
pop
ss
stos
or
ret
add
idiv
mov
mov
icebp
call
insb
daa
repnz
mov
xchg
or
cwtl
inc
or
pop
std
mov
pop
sbb
shll
cmpsl
std
imul
addr16
adc
andb
jge
jno
stc
cmpsb
adc
js
stc
or
mov
daa
pop
lock
jb
cld
jg
mov
into
xlat
xor
sbb
lahf
push
idivl
xchg
xchg
test
int3
aam
inc
mov
mov
pop
cmpsl
push
dec
imul
jb
push
mov
enter
aas
mov
add
xchg
cmp
je
insb
ficoml
sbb
push
mov
mov
mov
xlat
xchg
test
add
arpl
aad
mov
lcall
popa
sbb
cs
xchg
xchg
repnz
jb
jecxz
out
jge
sub
sahf
xchg
xor
orl
xchg
mov
or
jmp
xchg
jo
in
sbb
mov
roll
sbb
jne
jle
sbb
fisubl
leave
divb
and
fisubrs
add
addr16
or
mov
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
fidivs
mov
jno
cmpb
mov
rorl
call
cmc
into
scas
inc
mov
mov
jle
cmp
mov
dec
test
mov
lahf
repz
jecxz
mov
lock
push
cmovae
jno
inc
aas
adc
pop
xor
jg
pop
lahf
ret
scas
jecxz
xchg
iret
adcl
mov
aas
pop
das
mov
pop
xor
and
sbb
sti
mov
stos
add
pop
jo
dec
cmp
dec
ss
sbb
mov
fimull
push
xor
daa
test
mov
jg
mov
sarb
sub
roll
mov
cmc
repz
and
push
lcall
das
scas
dec
push
pushf
fildll
repnz
mov
lcall
and
dec
mov
lcall
inc
pop
cltd
scas
in
add
adc
xchg
mov
adc
add
sub
sbb
ret
xchg
dec
push
mov
xor
xchg
cmp
jmp
lcall
mov
aas
mov
jle
xorb
ret
and
or
mov
lods
bsf
shlb
rorl
mov
adc
hlt
mov
iret
cltd
fbstp
mov
imul
ja
arpl
cmpsl
xor
adc
in
xchg
mov
into
lcall
or
sub
inc
push
ror
ret
ficoms
mov
out
push
push
dec
ss
push
pop
jbe
jo
inc
push
and
fyl2x
fcoms
stos
sbb
out
mov
pop
jae
arpl
adc
pop
xor
jg
pop
lahf
repz
jecxz
xchg
iret
sbb
out
mov
pop
jae
arpl
adc
pop
xor
jg
popl
dec
stos
or
xchg
mov
mov
mov
iret
xor
dec
push
xchg
scas
sub
mov
adc
int
inc
jb
mov
popf
notl
rol
bound
jg
dec
xchg
mov
or
add
adc
sub
repz
loopne
out
mov
push
and
pop
mov
and
adc
xchg
hlt
gs
mov
mov
loope
nop
enter
add
adc
shlb
xor
sub
adc
add
shr
loop
inc
cmpsl
and
dec
pop
nop
mov
xchg
fldt
popf
cmp
cmpsl
push
add
xchg
outsb
daa
xchg
shrl
xor
addr16
inc
loope
add
sbb
or
xchg
dec
pop
popf
out
pushl
add
ret
loopne
push
inc
lret
cmp
div
dec
sub
enter
push
mov
sub
cmp
push
daa
xor
ret
sbb
sub
pop
iret
cmp
das
pop
out
xor
jecxz
dec
scas
cs
ljmp
push
subl
les
xor
add
aam
icebp
xchg
inc
out
scas
ja
aam
repz
push
mov
dec
int3
push
jne
lret
inc
scas
movsl
outsb
inc
push
lock
cli
insb
fs
inc
call
adc
jne
inc
scas
mov
push
test
mov
test
mov
sub
dec
jnp
repz
and
jmp
xchg
jne
push
mov
ss
cmp
test
and
scas
ja
or
push
push
and
popa
xor
mov
adc
sti
add
roll
js
fistpll
dec
int
jnp
jo
mov
or
stos
xlat
xchg
inc
mov
jbe
push
out
mov
add
pop
cli
dec
adc
scas
xor
imul
nop
das
ss
mov
scas
shll
sub
ret
mov
push
ss
push
lret
lea
add
lock
call
jg
and
push
shl
or
jb
and
ljmp
sub
outsb
sbb
sbbl
pop
or
xchg
cmp
xor
mov
mov
cltd
or
jmp
fistps
mov
cmp
ja
nop
in
test
mov
jnp
xchg
mov
mov
pushl
push
sbb
and
pop
pop
sbb
dec
add
iret
and
sub
cli
pop
mov
out
pop
pushf
or
pusha
push
cld
mov
dec
out
addb
insb
loop
xchg
xchg
movsl
pop
push
mov
inc
and
and
into
sbb
or
xlat
pop
test
mov
add
movl
lret
or
ss
mov
push
cmp
fsub
pop
leave
and
out
not
sub
hlt
sahf
in
or
js
xor
int
push
mov
mov
imul
andb
dec
sub
push
cmp
cmp
aad
xchg
pop
dec
cltd
mov
or
hlt
mov
in
add
in
loop
sbb
call
sti
pop
mov
xchg
loop
mov
int
xchg
std
cltd
cli
push
loop
mov
sub
subb
rcll
dec
dec
repz
in
dec
xor
dec
fadds
mov
push
dec
sub
add
push
aaa
adcb
push
scas
repnz
xchg
sarl
pop
xchg
pushf
fisttpl
lcall
pop
cmpsl
addl
ljmp
int
jno
cmpsl
sub
test
bound
pop
cs
loop
xchg
in
cltd
dec
inc
jno
sbb
nop
jnp
add
sbb
mov
xchg
adc
jno
jne
mov
add
xor
aas
cltd
xchg
jno
push
out
add
mov
lcall
sti
movsl
xchg
and
inc
or
ljmp
popf
addl
pop
pop
inc
in
xchg
push
pop
pop
inc
mov
out
int
stc
dec
scas
jbe
insb
push
and
outsl
shlb
push
popf
push
add
stc
or
sbb
lods
push
push
sarl
pushf
mov
orb
or
mov
and
stos
call
add
scas
lea
stos
outsl
shl
lret
andb
jo
in
outsl
pop
subl
int3
xchg
sbb
sbb
jg
adcb
adc
xchg
lods
jle
stos
lea
dec
adc
mov
les
inc
stos
mov
jb
negb
add
adc
inc
mov
clc
or
jmp
xchg
insb
pop
nop
pop
fldt
dec
mov
mov
dec
add
cmpsl
jo
rclb
add
inc
jne
inc
les
push
stc
call
xor
mov
adc
xor
inc
jge
loop
fs
and
xor
xchg
into
xchg
cmp
loopne
bound
push
lods
adc
movsb
mov
xor
dec
inc
insb
icebp
jns
bswap
cmc
dec
jg
adc
or
cmp
lds
nop
and
mov
dec
and
sar
xorl
or
ror
inc
xchg
jmp
enter
pushf
inc
xchg
and
mov
out
cmpsl
xor
imul
imull
inc
push
mov
pusha
jbe
aaa
and
ja
mov
enter
das
fbstp
jle
xchg
sbb
cmp
into
inc
in
sbb
movsb
pop
pop
jbe
lret
jecxz
mov
leave
sbbl
lock
adc
cs
repz
loop
push
icebp
jae
andb
jge
or
sbb
fsubr
sbb
insl
pop
mov
cmp
cmp
inc
jne
jbe
repz
nop
mov
scas
jb
add
ret
pop
es
loop
xchg
jle
or
dec
or
push
pop
in
inc
out
or
stc
inc
inc
dec
test
jne
std
mov
add
in
add
xchg
add
fs
pushf
push
repz
cmpb
test
xlat
repnz
or
ja
in
loope
sbb
lahf
cwtl
cmpsl
in
mov
mov
sub
or
hlt
dec
xor
ret
push
movsb
inc
pop
adc
sbb
dec
rorl
mov
clc
clc
hlt
sub
les
aaa
sub
into
leave
das
jnp
addl
push
sbb
jo
mov
xor
xchg
mov
cmpsb
outsl
adc
sbb
xchg
jns
movsb
cmp
addr16
lods
and
mov
js
cmp
out
jnp
xchg
and
ficoms
push
cmc
dec
xchg
lret
insl
jp
ficoml
sbb
inc
sub
add
cs
xchg
cmc
fdivl
cli
dec
adc
call
lahf
inc
add
add
js
adc
add
into
loopne
or
or
push
imul
inc
jecxz
mov
pop
or
add
inc
lahf
scas
out
xchg
insl
movsl
fmull
lods
or
lds
xchg
outsl
mov
xchg
or
add
cmp
test
aam
cmpsl
sbb
xchg
add
dec
jb
pop
mov
sub
sub
mov
push
dec
test
subl
mov
lods
test
in
push
aaa
inc
stc
cmc
and
mov
inc
mov
insl
jmp
sub
fisubs
push
es
adc
mov
shlb
lret
sub
adc
mov
out
stos
or
mov
fcmovu
xchg
fists
fiaddl
inc
fwait
xor
filds
mov
and
cmp
dec
adc
test
xchg
ds
and
xchg
lods
jo
mov
sbb
jb
notl
movsl
clc
cltd
test
mov
dec
jno
push
adc
sbb
push
jae
and
enter
dec
and
fbstp
rcrb
shlb
jge
push
div
ficoms
iret
stc
add
cmp
xor
addb
pushf
leave
and
jecxz
fstl
lds
loopne
test
mov
std
push
mov
out
or
out
xor
jnp
jle
jnp
ror
dec
xlat
inc
dec
int
xor
test
daa
inc
or
xchg
mov
mov
jnp
sahf
xor
into
outsl
leave
or
je
push
outsl
arpl
sbb
js
lret
cmp
ja
cmpl
roll
lahf
and
xchg
cmp
sub
adcl
subb
push
je
mov
xchg
xor
jl
negb
ja
jle
outsl
nop
sbb
in
stos
in
in
test
push
or
or
dec
ret
mov
inc
iret
sub
hlt
mov
inc
mov
pop
mov
aaa
sub
mov
imul
loope
jb
inc
out
lret
das
bound
nop
cmp
sbb
mov
in
jg
sub
jge
stc
or
lahf
fmul
sarb
cs
lods
and
or
cmpsb
loop
xor
and
lret
pop
or
mov
enter
in
mov
cmp
test
ljmp
clc
xchg
popf
jbe
push
ja
lods
imul
cld
ja
popa
stos
jp
push
out
adc
std
xchg
add
dec
jge
pop
negb
inc
aaa
test
push
sub
daa
das
and
xor
jecxz
dec
cmp
jae
sahf
add
out
in
lds
imul
push
sub
jp
pushf
out
ljmp
mov
iret
push
push
stos
pop
negl
push
mov
nop
cmp
dec
loope
push
stos
iret
mov
call
iret
jbe
mov
mov
adc
cmpsb
mov
insb
cwtl
cltd
jne
decl
dec
rcll
fcmovnu
mov
das
mov
sub
jb
test
jp
es
nop
dec
insb
pop
loop
add
xlat
push
lods
stos
sbb
dec
sbb
mov
push
dec
adc
mov
ret
dec
or
es
icebp
aaa
dec
lds
mov
mov
pop
inc
mul
pop
push
pop
xor
jno
in
jl
mov
data16
or
dec
pusha
add
adc
jb
or
jnp
add
in
lret
pusha
xor
xchg
pop
lcall
push
dec
test
or
lods
sub
into
xor
aad
int3
and
add
push
mov
add
mov
jmp
addr16
sub
dec
inc
push
xchg
lods
popa
insb
push
mov
jbe
shlb
pushf
je
sahf
mov
xlat
bt
incl
outsl
lock
roll
sub
pushf
sbb
xor
fmuls
arpl
mov
mov
jbe
sti
cmp
fsub
mov
fimull
aam
mov
les
cmpb
or
push
outsb
ficoml
cmpsl
mul
scas
imul
or
test
and
les
sarb
dec
jae
aam
mov
add
and
push
sti
jns
inc
ss
out
cmovnp
mov
cs
dec
mov
or
sarl
push
pop
stos
pop
call
mov
adc
lods
cwtl
sahf
mov
out
clc
cmpsb
mov
out
adc
cmc
dec
pop
dec
jb
pop
dec
xchg
shlb
xor
jp
cwtl
push
cld
mov
xchg
pop
pop
cwtl
cmp
inc
test
mov
int3
leave
fwait
das
out
in
push
push
lret
add
pushf
or
lods
and
xor
adc
out
and
cld
add
adc
stos
mov
ljmp
push
and
jno
cmp
iret
cmpsl
jmp
push
in
mov
fisttps
cwtl
jl
icebp
ficoml
sub
sbb
je
dec
jp
test
lds
jge
xchg
xlat
outsb
imul
pop
loope
push
rorl
sub
inc
and
int3
hlt
mov
mov
sub
or
sbb
mov
cmp
adcl
dec
sub
cwtl
shrl
aam
out
push
pushf
push
aad
daa
insl
cmp
loop
into
addr16
or
neg
sub
push
sti
or
cmp
pushf
adc
leave
add
push
cld
jbe
popa
inc
jmp
lods
add
call
xor
cld
dec
aad
xchg
sub
add
mov
pushf
cmp
sbb
fldcw
sbbb
dec
add
clc
nop
rcll
sub
orl
std
loope
cli
clc
inc
mov
cltd
jp
loop
push
pop
dec
movsl
daa
mov
mov
add
jg
or
xor
jp
jbe
call
or
sbb
in
xor
xor
mov
call
mov
pop
out
lcall
xchg
dec
fcmove
icebp
shll
cltd
mov
push
mov
push
jle
rcll
xor
mov
pop
les
inc
sbb
pushf
jne
cmp
ds
call
add
xor
in
mov
cli
jae
data16
std
insb
add
subb
test
xor
xor
stc
sub
fldenv
loopne
inc
js
orb
or
nop
inc
inc
mov
adc
aad
sub
std
lods
cmp
jbe
lods
dec
or
scas
in
jae
cmp
xor
mov
mov
xchg
cs
cmp
mov
pop
pop
aam
cmp
and
mov
and
stc
mov
adc
pop
mov
xlat
pop
jle
dec
outsb
fists
and
add
cmp
and
leave
in
scas
add
aas
lret
shll
adc
hlt
jne
add
xchg
mov
or
pop
shrl
push
push
loopne
jne
xchg
and
dec
cmpl
pop
addr16
cwtl
xor
clc
dec
adcl
xchg
das
sbb
inc
sti
mov
xchg
mov
scas
jmp
jbe
jge
arpl
leave
outsl
mov
sahf
lods
push
cltd
and
sub
in
fisubrl
xchg
and
sub
popf
mov
jb
mov
pop
icebp
add
push
gs
cmp
enter
pop
xor
dec
pop
cmpsl
ja
imul
call
adc
sbb
test
mov
imul
pop
xor
cmp
mov
ret
jns
mov
lods
cmp
or
push
cmp
fcomi
shll
stos
cmc
jmp
dec
pop
pop
pop
fcmovnb
jg
xor
lds
in
pop
fcompl
adc
frstor
pop
push
sub
test
sbb
xchg
push
xor
mov
int
and
xor
iret
sbbb
sbbl
adc
inc
mov
pop
fisubl
sub
inc
xor
xorl
xchg
stc
int3
dec
into
mov
ret
sbb
test
outsb
pop
inc
cmp
or
cmp
sbb
rorl
ss
pop
adc
xor
xlat
push
dec
mov
lock
push
or
int
loopne
sahf
cltd
jmp
pop
je
sub
aam
aas
fsubrl
xchg
ss
xchg
stos
outsl
push
jp
js
cwtl
mov
adc
lock
pop
lds
leave
arpl
fcmovb
sub
sub
jo
push
push
maxps
cmp
ljmp
add
movsb
ja
hlt
popa
xor
shrb
xor
cltd
call
add
pop
imul
pop
inc
mov
jg
push
lahf
ret
inc
inc
imulb
sub
push
leave
mov
and
and
xchg
push
xlat
mov
xchg
cld
leave
cmp
pop
pushf
mov
sub
shlb
cmpsl
mov
popa
and
xchg
outsl
lds
pop
jmp
adc
push
call
cmp
inc
sbb
or
mov
adc
outsb
push
xchg
cltd
inc
dec
in
out
shll
mov
xor
push
add
hlt
lret
ljmp
jns
jnp
ficompl
gs
jbe
les
sbb
cmp
mov
lea
rcll
loope
jo
dec
popa
mov
pop
pop
pop
cmp
mov
lods
rclb
ja
out
sub
fisubl
pop
fs
bound
cmp
leave
mov
adc
mov
xchg
dec
mov
jmp
and
push
int
push
add
inc
mov
bound
jp
insb
and
jnp
imul
mov
mov
or
insb
inc
std
and
pop
push
pushf
jg
push
xor
js
xchg
inc
mov
into
pop
and
adc
ficoms
rolb
decl
sub
or
fmul
jl
ds
mov
or
psrlw
outsb
stos
ja
pop
ss
push
mov
xchg
cld
ror
divl
push
test
cld
push
xchg
mov
add
iret
lret
mov
cld
jle
and
mov
xchg
les
fdivrl
xlat
dec
or
in
push
std
pop
push
pusha
push
push
out
test
dec
mov
test
jp
push
jno
inc
push
inc
sbb
lea
mov
lcall
add
sub
arpl
mov
sbb
shll
push
gs
lds
push
es
in
pop
nop
inc
cmp
jno
jg
int3
sbb
icebp
dec
pop
fwait
sarb
nop
in
xor
jmp
sti
movsb
push
jbe
fsubs
sarb
xor
shlb
xchg
jb
cld
popa
mov
jmp
rcl
mov
or
lea
push
and
scas
std
mov
lahf
mov
outsl
lret
mov
cmp
test
adc
mov
pop
fimull
ret
xchg
mov
jg
loop
jne
pop
adcl
or
add
dec
push
inc
shll
xor
aam
mov
cld
aam
inc
ljmp
add
sbb
out
test
mov
mov
xor
cmp
dec
cmp
leave
nop
pop
cwtl
testb
inc
dec
mov
or
out
mov
enter
push
jp
fdivl
mov
bound
cmp
cltd
dec
jmp
stos
or
mov
mov
xchg
add
jl
adc
inc
or
mulb
ja
gs
btr
cmp
mov
lods
sub
dec
out
clc
xor
pop
xor
add
les
mov
add
addr16
test
movl
in
call
adc
push
sbb
sbb
or
cmc
mov
inc
imul
push
add
add
sub
sub
dec
or
arpl
roll
pop
fbstp
mov
add
shlb
pop
add
pop
cli
push
add
in
jae
xor
in
adc
push
or
and
je
ds
mov
mov
out
push
js
mov
scas
das
mov
jmp
in
repz
ret
stc
mov
gs
dec
arpl
mov
notl
push
divb
jl
dec
mov
mov
add
xor
cmp
push
xchg
add
cs
push
xchg
test
push
jbe
into
cmc
jno
popf
cwtl
xorb
jne
xchg
bound
ret
sahf
cmovl
adc
std
je
int3
pop
cmp
insb
mov
mov
mov
pop
call
jae
dec
imul
enter
fyl2x
nop
xchg
jecxz
mov
push
hlt
leave
imul
cmp
pusha
out
mov
mov
cwtl
push
enter
mov
int
fdivrs
mov
and
shll
dec
dec
out
mov
shrl
sub
outsb
xchg
popa
pop
loop
push
lock
jb
and
mov
adc
and
ja
outsb
sub
in
pushf
mov
sub
rcrb
mov
lea
mov
rcr
jae
xchg
mov
lcall
adc
fwait
jbe
dec
shrl
push
loop
mov
sti
mov
pop
aaa
push
sbb
leave
jp
cwtl
cld
ret
and
mov
and
mov
or
repz
pop
out
pop
dec
pop
cmc
stos
push
aas
loop
and
sahf
mov
rcrb
aas
lock
sub
adc
fisttps
jne
jp
loopne
push
rolb
mov
sub
mov
rolb
xor
insb
pop
adc
mulb
mov
or
cwtl
out
mov
xorl
fisubrl
repz
pop
cmp
mov
int
adc
xchg
cmp
xchg
xor
sbb
inc
or
mov
out
mov
lods
sbb
imul
loop
sub
pusha
jl
sbb
mov
jmp
and
js
popf
inc
call
sub
lds
movaps
pop
cmp
and
lahf
insb
inc
xchg
cwtl
rclb
pop
add
loopne
lahf
jns
jecxz
xchg
iret
sbb
out
mov
pop
jae
arpl
adc
pop
xor
jg
pop
lahf
repz
jecxz
xchg
iret
sbb
out
mov
pop
jae
arpl
adc
pop
xor
jg
pop
xlat
repz
jecxz
xchg
iret
xorl
mov
pop
ja
arpl
adc
pop
xor
jg
negl
xchg
iret
sbb
outsl
and
lods
lock
dec
fs
mov
dec
lds
insl
in
cmc
or
notb
mov
inc
cmp
jne
add
lods
xor
add
jge
or
movsl
cmp
push
mov
jne
add
mov
aad
in
cmc
adc
cmp
or
push
out
jno
inc
loope
and
adc
or
push
mull
out
add
add
cld
mov
hlt
clc
or
jge
push
test
test
je
lods
and
sbb
sbb
imul
mov
popf
add
xorl
in
loope
test
in
jbe
inc
imul
mov
sub
loopne
icebp
test
jecxz
add
in
cltd
mov
push
push
and
gs
shrb
dec
hlt
xchg
shrb
xor
mov
or
cli
into
loope
xor
aad
in
cmc
jmp
movsl
fwait
mov
inc
inc
push
fwait
gs
lds
mov
push
sbb
jae
pop
sarb
mov
cwtl
sbb
push
fcoms
test
lahf
pop
in
mov
fmul
push
cmp
xor
jp
push
cld
pop
and
sbbl
cmp
push
in
gs
jne
add
mov
aad
in
cmc
or
movsl
cmp
push
in
gs
jne
add
mov
shrb
cmc
addl
lret
movsb
pop
cs
mov
xor
sub
je
sbb
insb
cs
inc
sarb
rorl
ljmp
loope
lods
addb
adc
jmp
fisttps
cwtl
dec
xchg
add
sub
jnp
sbb
ret
je
ret
push
icebp
fadds
sarl
sub
xchg
mov
xchg
orb
jb
leave
inc
lods
mov
xor
aad
lods
xchg
mov
divl
idivb
mov
lock
xchg
push
sbb
xchg
xchg
loop
sti
out
stos
mov
jle
pop
lret
jmp
out
shrl
jg
push
int3
lods
mov
lods
xchg
push
fbstp
sub
pop
scas
icebp
or
cld
bound
mov
js
sub
je
or
xchg
cmp
pushf
aaa
jo
outsb
out
fisttps
push
cmp
add
or
nop
xchg
push
cmp
or
jae
push
and
xchg
addb
mov
fwait
push
aad
mov
and
mov
mov
in
sarl
je
int3
mov
jl
ss
xlat
push
cmp
jmp
and
and
fsub
jg
ret
jg
hlt
into
cmc
push
sub
sbb
and
cmp
fnstenv
mov
inc
loope
data16
test
or
ss
test
into
lahf
sbb
pusha
push
jle
test
test
clc
mov
out
aaa
mov
add
jecxz
iret
aad
push
pop
in
sub
cmpsl
and
adc
or
call
xchg
inc
ja
in
push
divb
pop
shrb
add
pop
iret
stos
xor
cmpb
xor
fsin
leave
insl
sbb
and
bound
xchg
inc
daa
cmc
lods
jne
adc
mov
mov
adc
and
push
aad
stos
adc
jmp
in
inc
mov
movsl
out
mov
jno
mov
mov
pop
sbb
cmp
fdivp
push
jp
pop
inc
test
jmp
jge
std
cmc
leave
add
imul
loope
dec
repz
sbb
add
fnstsw
rol
aas
fmull
inc
push
jle
jno
pop
stos
int
mov
aaa
imul
cmpsl
pusha
test
xchg
adc
mov
sbb
ljmp
stos
sub
lods
cmpsl
xlat
push
jno
sub
dec
test
mov
adc
mov
icebp
fsubrl
mulb
cmp
cli
mov
cmp
dec
mov
leave
mov
cmc
rorb
pop
dec
mov
push
inc
sub
std
inc
cmp
fisttpl
xor
outsl
das
and
ret
add
mov
test
cs
mov
pop
clc
insl
xor
scas
or
pushf
mov
in
ja
xor
scas
ret
subl
hlt
loope
inc
push
loope
jnp
imul
or
es
dec
cmp
dec
repz
dec
push
dec
add
sahf
in
outsl
movsb
xlat
and
ret
jge
add
cs
ret
jne
loope
sbb
ss
and
push
ljmp
push
aas
out
mov
adc
mov
outsb
cmp
pop
push
xor
adc
jb
adc
outsl
xor
inc
or
imul
pop
out
jmp
push
xor
sub
aaa
mov
cmp
cmp
mov
xchg
sub
ret
dec
aad
pop
lea
jle
sub
push
jecxz
jne
cli
nop
jge
inc
xor
xchg
add
pop
js
ret
imul
adcb
cmpsb
loopne
test
push
in
push
movl
dec
push
and
jo
add
addr16
jo
push
addr16
loopne
test
xchg
push
imul
push
jb
dec
add
pop
or
fcomip
mov
js
xor
jg
lret
ret
lret
jno
mov
repz
movsb
add
jecxz
xchg
movsl
fidivl
imul
loopne
inc
xchg
mov
add
aam
mov
ss
xchg
stc
xchg
push
pop
fcomps
mov
mov
jns
cmp
leave
shll
cwtl
jbe
push
jo
lret
inc
lea
jno
imul
stos
mov
das
pop
rcl
in
iret
fnstsw
mov
mov
jecxz
ss
adc
leave
fsubrs
pushf
pop
test
push
jb
addr16
xlat
out
divb
in
sub
int
es
aam
dec
sbb
in
ss
pusha
and
pop
fiadds
jge
mov
xor
and
xchg
pop
outsl
dec
pushf
ja
scas
push
jecxz
stc
jne
mulb
mov
and
push
cmp
cmpsl
jge
enter
sbb
adc
filds
pop
mov
sub
je
cmpsl
cmp
dec
repnz
bound
popa
sti
mov
mov
dec
je
add
filds
sub
pop
sbb
mov
dec
dec
fisubs
das
subb
stos
jb
cwtl
push
cmp
aam
in
das
clc
pop
lret
inc
andl
pop
lret
or
cs
inc
stc
repz
sub
fcompl
fsubs
sbb
int
dec
mov
popa
jo
dec
dec
sub
loope
inc
inc
in
push
xchg
inc
dec
xchg
cmp
idiv
in
mov
arpl
inc
mov
test
inc
mov
fcomip
cwtl
xor
dec
adc
cld
add
sti
mov
sub
jae
pop
fildl
insl
lret
fldenv
cwtl
sbb
nop
and
and
jns
mov
or
pop
cmpb
add
clc
lea
push
adcl
pop
sub
clc
xchg
mov
xlat
inc
push
imul
add
hlt
and
xor
rcrb
adc
lret
sbb
pop
movsl
test
push
cmp
out
cmp
mov
jnp
cli
clc
add
fldenv
mov
decl
js
outsl
xor
leave
xor
dec
lods
into
pop
cmp
mov
xabort
pop
fs
pop
xor
dec
adc
stos
arpl
jae
sbb
fidivrl
sub
or
movsb
fucom
clc
gs
stc
jg
js
jge
jmp
fisubs
aam
lock
ficoms
xchg
stc
repz
mov
loop
adc
cli
nop
pop
sahf
into
jo
lea
in
pop
lods
push
pop
adc
push
insb
orl
jbe
ret
cmp
pop
xor
stc
lods
in
pop
out
adc
outsb
orb
pop
fstp
daa
jno
dec
inc
jg
sub
nop
ja
mov
clc
std
jl
outsb
call
jge
jbe
cmc
mov
scas
std
xor
inc
cmpsb
dec
mov
mov
jno
jno
mov
cmp
div
outsl
add
jbe
inc
mov
mov
pop
pop
mov
adc
scas
dec
mov
js
mov
fdivrl
sbb
scas
in
clc
or
loop
test
mov
mov
cmpsb
cwtl
or
adc
mov
mov
jnp
sub
in
adcb
dec
test
and
sbb
call
repz
fs
dec
cmp
cld
inc
xor
leave
jmp
add
aaa
pusha
js
pop
cmp
negb
sbb
ret
insb
mul
pop
mov
das
lea
leave
lds
sbb
cmpsb
aad
das
repz
pop
sbbl
jns
fcmovbe
repz
inc
imul
faddp
shrb
movsb
call
test
out
xor
cmp
or
add
es
push
mov
pop
mov
push
jnp
xor
test
stc
mov
mov
loopne
mov
adc
int3
adc
jmp
mov
sbb
lods
shlb
scas
imul
adc
jno
jo
loop
or
mov
int
lea
ljmp
fisttps
push
popa
dec
adc
jbe
insb
push
ss
int
xor
xor
enter
inc
xor
dec
dec
mov
xor
add
test
ds
mov
enter
mov
repnz
fs
iret
negb
jl
dec
sbb
inc
sahf
push
insl
js
cli
shl
ja
push
ljmp
jo
inc
inc
ja
out
pop
mov
pushf
ret
mulb
rclb
mov
push
test
cli
into
push
mov
mov
and
or
arpl
xor
pop
jbe
mov
out
js
in
jno
loopne
pop
cmpsb
dec
cmp
gs
repnz
fnstsw
jbe
mov
cwtl
mov
orb
dec
lock
add
jbe
sahf
jmp
mov
sub
addr16
jg
dec
and
add
jmp
imul
pop
pushf
dec
mov
sbb
hlt
dec
push
lret
dec
shr
mov
sub
stos
es
sub
and
in
push
mov
inc
mov
sub
dec
ret
stos
push
mul
add
mov
sub
lods
mov
jno
sub
rclb
inc
pop
scas
and
sti
sub
cmp
enter
insl
movsl
or
cmp
dec
cmpsl
inc
or
sbb
dec
mov
lods
push
imul
jl
sub
mov
sub
and
out
dec
add
mov
cltd
add
repz
xchg
adc
outsl
movsl
push
mov
and
testb
jg
push
mov
mov
pushf
in
dec
into
mov
xor
popf
movl
jl
cld
std
mov
negl
aad
lds
hlt
adc
jmp
test
data16
push
xor
pop
xchg
call
add
add
cmc
and
push
lds
fldl
sbb
mov
xchg
aas
roll
xor
imulb
loop
or
out
hlt
sahf
jno
loop
jnp
daa
sub
dec
push
pop
jb
mov
subb
mov
inc
push
fidivl
inc
aad
repnz
ljmp
jo
daa
hlt
fists
inc
pusha
lret
stc
xor
add
jge
jge
jne
mov
lret
enter
sarl
nop
mov
pop
lret
sbb
daa
add
call
sub
or
outsb
imul
cmp
les
adc
cmpsl
push
ss
xchg
mov
or
fs
decb
lcall
enter
rorl
repnz
je
outsl
insb
inc
out
stc
cmpb
adc
cld
icebp
fsub
lock
jbe
ljmp
enter
add
fcomi
test
enter
xchg
xor
sub
dec
xor
jl
scas
and
mov
push
or
dec
jbe
jnp
and
adc
add
sbb
jns
fmul
dec
mov
mov
pusha
stc
fxch
push
xor
mov
adc
out
repnz
jecxz
pop
lea
int3
in
pop
pop
mov
sbb
mov
cld
dec
and
pop
into
mov
lds
in
cli
mov
cmp
sub
mov
sub
shrb
adc
sbb
sahf
nop
test
mov
inc
jne
addr16
xchg
push
xor
iret
jae
xchg
sbb
roll
lods
in
out
faddl
mov
adc
cld
add
mov
push
jb
and
mov
pop
sti
rcr
and
repnz
mov
mov
cmpsl
adc
insb
outsb
mov
push
jno
lea
add
cmc
cmp
pusha
imul
es
jae
aad
jmp
mov
outsb
loope
stos
mov
mov
sub
sbb
je
and
pop
and
and
cmp
arpl
fmull
clc
fwait
out
std
add
mov
jmp
stos
xchg
sbb
sbb
movsb
add
or
dec
nop
cmp
sbb
cs
push
inc
loopne
jmp
push
int3
cld
pop
push
pop
in
push
mov
hlt
pop
mov
addr16
add
loope
push
stos
and
lock
daa
das
outsl
mov
in
push
xor
loopne
mov
in
xor
xchg
jp
inc
inc
aas
fwait
mov
sub
push
mov
dec
cltd
js
xchg
int3
inc
or
rcrb
push
dec
out
xor
cmpsl
aad
dec
mov
mov
lds
add
insl
push
scas
add
imul
std
xchg
dec
and
pop
cmp
icebp
sub
shrl
push
and
lret
pop
lret
sub
pop
js
das
in
xor
and
std
xor
dec
jb
lcall
into
enter
scas
mov
mov
shlb
push
lock
cmp
mov
mov
mov
xor
fsub
inc
bnd
cwtl
push
jl
mov
xor
and
sbb
sub
sti
test
fstps
movsb
jo
push
bnd
mov
inc
pop
cltd
and
pop
inc
pop
jno
int3
dec
xchg
aam
push
mov
rcrb
sbb
pop
inc
or
loope
ss
adc
enter
adc
and
shlb
push
in
stc
test
lcall
je
jne
push
mov
cmp
mov
pop
or
jecxz
adc
sar
xchg
push
mov
or
lods
aad
data16
mov
fwait
pop
xchg
add
aad
or
mov
in
je
mov
sbbb
nop
push
xchg
lahf
ja
pop
iret
push
fistpl
sbb
or
fcmovu
pop
ret
pop
fs
int3
or
sub
std
popa
dec
dec
movsl
in
icebp
outsb
jmp
and
xchg
pushf
add
jg
adc
pop
jo
loope
or
add
cmp
in
js
aad
ljmp
add
test
es
add
adcb
cli
pcmpgtb
add
ret
sub
pushf
and
ljmp
out
and
mov
push
bound
xchg
or
dec
xor
xlat
leave
add
fistpl
fistps
test
mov
call
js
aaa
mov
in
mov
in
pop
or
dec
xor
rcll
xor
push
sub
xchg
test
pop
pop
lock
movsl
dec
repnz
movsl
dec
loopne
cmp
movsb
bound
dec
call
lret
sbb
xchg
lds
pop
push
mov
stc
push
inc
pop
and
js
mov
push
es
fs
mov
xchg
imull
push
pop
sub
xchg
mov
popa
out
cli
jle
and
inc
incb
push
add
jns
jmp
or
dec
xor
xor
or
gs
scas
test
xchg
push
mov
shlb
pop
mov
pop
inc
pusha
lcall
les
mov
jecxz
and
or
fidivs
outsb
dec
jns
call
mov
dec
and
mov
xchg
cmp
mov
and
cmp
fwait
mov
and
or
mov
inc
sub
push
xchg
insl
aas
outsb
repnz
imul
cmp
stos
daa
jge
cwtl
jae
test
pop
xor
or
orb
popa
dec
jp
and
dec
mov
push
ja
xchg
not
fs
notl
inc
cli
push
pop
shrl
fisubl
add
pop
or
adc
int
subl
lcall
popf
jecxz
xchg
add
lcall
push
jg
idiv
dec
jne
call
arpl
fmul
mov
jne
lea
cmp
sahf
inc
mov
mov
ljmp
cmp
mov
push
fadds
dec
mov
daa
add
mov
fnstcw
in
call
mov
in
lahf
mov
lret
jns
stc
sub
out
sti
adc
push
xorb
add
shr
fcmovu
dec
insl
faddl
repz
xor
aad
loope
cltd
xor
pop
fisubrl
scas
rorl
aas
and
jns
cwtl
aaa
cmp
stos
sbb
add
pop
mov
pop
xchg
mov
mov
cs
pop
pop
mov
scas
stos
cmp
inc
cmpl
fmull
mov
int
xchg
push
sti
pop
imul
xlat
dec
cmpsb
sub
test
jge
in
lds
push
loop
int3
stc
and
std
jae
hlt
mov
cwtl
mov
cmp
or
loopne
or
cmpsb
sub
addr16
loopne
xor
fsubrl
ljmp
addr16
les
cmp
pop
ljmp
mov
inc
pop
adc
xor
in
xchg
hlt
add
aas
dec
lea
add
dec
fwait
es
test
nop
pop
nop
push
incl
movsl
push
lods
aad
mov
repz
arpl
in
mov
pop
adc
and
nop
mov
fs
pop
adc
lcall
jg
jp
mov
adc
testb
push
in
inc
mov
add
insl
in
jmp
lret
xor
and
out
jo
ss
mov
frstor
push
lret
mov
ja
jo
and
mov
iret
inc
push
lods
mov
insl
pop
pop
in
jp,pt
cmp
add
imul
mov
arpl
test
test
ret
in
lahf
in
pop
pop
push
fwait
adc
mov
mov
mov
lds
andb
pop
lcall
pop
lods
aaa
lods
pop
fmuls
leavew
or
mov
ja
cmp
sbb
lahf
movsl
loopne
push
or
or
xor
leave
sbb
into
mov
imul
xlat
mov
adc
cmp
mov
rorb
mov
and
shrl
lds
cmp
add
xchg
push
sub
gs
mov
dec
imul
jnp
jge
jae
leave
dec
mov
lods
cmp
pop
imul
mov
jns
sbb
pop
bound
xchg
hlt
out
outsb
loop
les
movsl
cmp
sti
add
popf
in
sti
mov
jbe
jno
lcall
lods
fildll
into
and
aad
mov
pop
jae
xor
jmp
cltd
push
inc
leave
lret
push
nop
add
test
dec
push
imul
aas
sbb
out
pop
jle
sbb
or
clc
icebp
ret
or
mov
jne
and
testb
or
mov
ret
jge
call
repz
sub
das
ficoml
fmull
sbb
xchg
push
cmp
add
out
scas
or
push
lret
pop
imul
sete
push
pcmpeqd
repz
addr16
test
ret
stos
and
pop
or
or
xchg
clc
shl
push
xchg
push
mov
jecxz
and
xchg
xor
sub
cmp
xor
cmpsl
xor
dec
movsl
loop
jl
out
dec
jp
stos
add
cltd
xorl
mov
fnstcw
fcomps
jae
sti
sbb
cmp
je
mov
mov
out
orl
jb
mov
sbb
ret
rcrb
xor
adc
loopne
test
and
push
adc
pop
fildl
pop
mov
xchg
xchg
in
fsubl
fmull
sbb
inc
insl
pusha
popa
imul
out
sbb
fsubs
mov
add
mov
cltd
in
and
jo
mull
push
ljmp
push
lds
sbbl
cmpsb
add
lret
adc
test
pop
cmp
insl
rcll
out
xchg
mov
xchg
mov
ljmp
xor
shrl
sahf
or
jl
or
push
movsl
out
test
inc
inc
jnp
aaa
xor
dec
daa
xchg
pusha
dec
xchg
lahf
leave
jno
xlat
fwait
pop
lods
inc
je,pn
call
xchg
cltd
loope
icebp
jno
ss
adc
test
leave
jp
jmp
xor
jmp
add
and
add
adc
stos
lret
fdivl
push
add
inc
loopne
sub
outsb
sub
jae
push
add
push
xchg
jl
pop
cmp
ret
sbb
lcall
xor
fsubrl
loope
sarb
aam
add
lock
repz
jecxz
lret
mov
fnstsw
call
ret
mov
sbb
cld
and
sti
and
and
or
dec
fs
notl
and
push
int3
stos
sbb
out
aaa
fisttps
xlat
out
aas
xlat
jle
push
push
jp
out
in
dec
xchg
mov
adc
outsb
sub
dec
inc
jnp
rcl
or
mov
add
shrl
cli
xor
mov
aad
sub
cltd
and
fyl2xp1
insb
dec
dec
daa
dec
adc
sti
lcall
out
sbb
lods
and
mov
sbb
cmp
mov
push
dec
mov
jbe
pop
cmpb
mov
insb
shlb
or
dec
dec
pop
push
mov
push
sahf
mov
jb
push
xchg
sub
fmulp
push
clc
and
loop
pop
and
push
jp
std
std
int
pop
inc
ss
testl
xchg
cmp
aam
ss
pop
adc
pop
mov
aad
in
cmc
or
movsl
cmp
push
in
gs
jne
add
mov
aad
in
cmc
or
movsl
cmp
push
in
gs
jne
add
mov
aad
in
hlt
popf
test
mov
inc
fstl
std
jne
add
adc
pop
lds
aad
in
icebp
or
and
and
inc
gs
add
lea
lret
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
xlat
push
out
mull
mov
data16
mov
mov
ja
pop
xlat
pop
daa
out
out
push
xlat
push
out
mull
xchg
inc
cmpsl
jbe
add
push
xchg
ja
pop
mov
daa
divb
out
push
xlat
push
out
mull
xchg
inc
cmpsl
jbe
inc
xchg
je
pop
rcll
enter
lcall
mov
out
sahf
inc
mov
shrb
adc
jo
mov
mov
or
sub
sub
sbb
xchg
lret
pop
pop
in
sti
xchg
jns
dec
mov
jno
data16
push
mov
loope
sbb
insl
lods
call
xchg
repnz
push
sub
fwait
lock
lock
push
push
xchg
jo
and
pop
filds
push
stc
leave
or
js
mov
pop
daa
cmp
inc
imul
push
test
push
sti
dec
das
adc
mov
lods
sbb
add
sbb
xchg
loopne
xor
push
out
mull
xchg
inc
cmpsl
jbe
inc
xchg
push
xchg
ja
pop
pop
daa
divb
mov
mov
adc
xor
adc
adc
out
lahf
adc
xor
andl
mov
inc
loop
faddl
loop
repnz
xor
shll
lock
push
dec
xchg
pop
mov
push
xlat
push
mov
fs
inc
cmpsl
jbe
inc
xchg
push
xchg
ja
pop
pop
daa
divb
out
push
xlat
push
out
mull
xchg
inc
cmpsl
jbe
inc
xchg
push
xchg
ja
pop
pop
daa
divb
out
push
mov
jp
mov
push
mov
sub
pop
les
jno
mov
lods
sbb
or
sub
dec
pop
push
imul
pop
das
cmp
imul
mov
imul
sub
jp
mov
push
mov
in
inc
xchg
out
jns
out
icebp
data16
push
outsl
mov
fcom
int3
and
jge
dec
popf
out
dec
mov
ja
bound
rcll
mov
into
rolb
mov
leave
repz
je
ljmp
clc
lods
stos
inc
arpl
rcrb
outsb
cwtl
lahf
aad
mov
ja
xor
jns
xchg
and
dec
inc
cmp
dec
in
jne
sahf
or
shlb
cli
pop
es
out
push
push
into
and
fsqrt
pop
in
lret
hlt
and
cmp
loopne
mov
push
fildl
push
cli
std
push
popf
sbb
scas
xchg
push
out
ret
pusha
and
pop
cmp
ret
fbld
movsb
sbb
int3
nop
adc
stc
je
lret
aad
mov
loope
inc
aad
fildl
lahf
dec
xor
mov
jmp
aaa
jb
xchg
test
mov
cmpsl
jo
aad
push
adc
lock
add
mov
add
mov
dec
fcomp
sbb
pop
aam
jns
mov
mov
mov
xorb
xor
dec
push
imul
and
pop
shll
push
rorl
pop
and
dec
lods
daa
std
mov
and
shrl
nop
inc
int3
inc
ss
test
adc
pop
cs
scas
cmp
dec
push
push
cmpsl
rcll
push
push
mov
int3
sarl
pushf
repnz
loopne
sbb
leave
inc
nop
mov
test
je
scas
lods
stc
rolb
je
popa
aas
fwait
xchg
outsl
mov
sbb
ret
lcall
stc
lret
xchg
stc
mov
fidivs
mov
in
stos
xchg
jne
lcall
clc
cltd
cmp
scas
add
mov
stos
cwtl
cltd
cltd
sub
adc
mov
ljmp
pop
daa
lds
mov
ss
in
daa
arpl
jo
mov
sbb
sbb
inc
mov
or
sbb
scas
push
cmc
aad
bound
ret
test
mov
mov
adc
lds
loop
mov
insl
or
shrb
popf
or
mulb
bnd
stc
rcrb
sub
in
lret
data16
repz
xor
mov
lds
jge
or
mov
or
push
clc
lcall
dec
test
test
fwait
add
lea
sub
dec
int
push
into
cmc
aad
mov
mov
xchg
dec
fsubrs
insl
xlat
stos
bound
push
test
push
andb
add
jno
lret
dec
cmpsl
scas
pop
cmc
aad
jg
movsl
pusha
jmp
xorl
sbb
xor
sbb
inc
pop
jmp
or
push
push
icebp
lcall
xchg
and
sbb
push
cmp
imul
data16
push
mov
xchg
xlat
shl
inc
jg
pop
jp
dec
rcr
ds
push
mov
mov
int
inc
insl
push
jle
sti
and
int3
fwait
call
mov
into
fbstp
scas
cmp
add
lods
pop
cltd
and
iret
inc
leave
add
imul
imul
jl
adc
dec
mov
xchg
insl
add
mov
add
xlat
push
or
outsb
sub
cmp
sbb
mov
pop
aad
aad
adc
add
cmp
and
add
or
mov
jae
enter
pop
lret
pusha
fcmovnb
jnp
hlt
cmpsb
sub
inc
ret
pop
nop
sub
das
sub
mov
cmp
cmp
inc
int
dec
test
mov
in
pop
adc
aad
push
inc
mov
mov
shl
mov
dec
mov
pop
push
ja
or
je
stos
sub
shlb
xchg
outsb
outsl
sbb
or
cli
cmp
pop
rorb
lds
add
sub
sbb
adc
cmp
cmp
dec
in
lret
lcall
or
insb
push
jnp
lods
jmp
bound
pop
je
stos
inc
rcrl
mov
loope
push
cmc
aam
cmp
lret
bound
loopne
push
fnstcw
andl
xchg
scas
mov
push
outsb
stc
rolb
mov
xor
les
hlt
dec
mov
sbb
push
cmp
and
jg
and
xchg
pop
xchg
jge
push
dec
push
pop
jae
xor
stos
and
cli
test
std
scas
sub
scas
jge
je
mov
xor
in
test
adc
cmc
rdmsr
cmp
add
jl
mov
lds
aam
rcrb
or
std
stc
sbb
ret
and
repz
cmpsl
sub
sub
idivb
rcr
and
test
and
inc
pop
pop
shrb
iret
pop
mov
cmp
cmp
sbb
sub
mov
std
dec
movsl
cltd
movsb
pop
mull
add
sahf
jnp
inc
cmp
jg
arpl
jnp
and
imul
or
icebp
mov
sbbl
or
add
jmp
jbe
jmp
or
sub
stc
rclb
test
adc
lahf
jle
popa
loope
push
loopne
scas
and
movsl
insl
fs
inc
and
or
mov
das
jbe
call
cmp
scas
xor
push
dec
sub
addr16
ljmp
fcoms
mov
int3
enter
jg
cli
or
daa
pop
sbb
mov
enter
push
jae
xchg
mov
ja
push
or
jno
daa
pop
outsl
in
aaa
aaa
sti
or
inc
jmp
xor
mov
push
frstor
adc
out
out
sub
repnz
cmp
cltd
and
cmp
hlt
loopne
sub
fisttpl
popf
dec
jge
xor
or
add
lret
scas
out
xor
pop
xor
push
div
lods
movsb
jb
jle
jae
test
into
cmp
mov
cmp
cmp
lock
and
xor
xor
pop
push
or
push
jg
ja
int3
xorl
sti
ficoml
add
scas
xchg
repnz
out
movsb
adc
aam
std
lea
pop
repnz
mov
iret
xor
jp
popf
adc
push
jb
adc
icebp
fs
sbb
mov
punpcklbw
pop
or
nop
mov
movsl
cmp
imul
xor
push
stc
pop
push
shrb
lods
pushf
pop
fmuls
hlt
inc
adc
or
inc
stos
and
jno
cmp
push
jb
mov
shlb
dec
ret
jno
sti
pop
sti
int
mov
hlt
jg
dec
jb
jnp
push
scas
cwtl
jge
jne
clc
pop
and
stos
outsl
insb
lcall
jp
cs
fsubrs
inc
mov
mov
jnp
mov
lds
xlat
pop
mov
sbb
repnz
pop
inc
push
cmpsb
leave
jnp
movsl
jecxz
add
push
xchg
mov
fldl
aas
dec
inc
push
dec
je
mov
rep
sub
jge
pop
mov
out
jecxz
fcmove
jnp
jae
xchg
data16
insl
mov
mov
pop
xchg
push
jb
xor
repnz
scas
shl
and
lock
shll
jae
faddl
mov
jno
nop
cmp
int
mov
sbb
dec
stos
rclb
sbb
sub
mov
pop
stos
adc
ss
or
and
push
add
iret
jp
lret
into
fucomip
cwtl
cmp
xchg
sub
lods
int3
lahf
jbe
divl
pop
popa
adc
add
repz
dec
xor
mov
sub
cmp
or
cwtl
mov
dec
inc
insb
push
push
cmpb
outsb
aam
pushf
inc
mov
ret
iret
cmp
cs
adc
push
stos
sub
jge
mov
adc
push
pop
xlat
testl
mov
in
arpl
push
xchg
les
in
ficomps
sub
mov
outsb
inc
test
enter
xchg
mov
ret
cmp
xchg
movsl
inc
push
imul
mov
sbb
das
xor
in
dec
and
lods
fwait
pop
mov
or
mov
dec
dec
stc
push
insl
pusha
cld
cwtl
repnz
pusha
mov
and
cmp
push
sub
xor
outsb
pop
lret
dec
imul
and
testl
movsl
xchg
ss
scas
or
adc
lcall
cmc
inc
pop
and
fstl
pop
aas
hlt
mov
cmpsl
inc
jae
inc
push
je
pop
xchg
aam
lret
jecxz
inc
or
test
jnp,pn
iret
mov
adc
xchg
orl
cmp
repnz
add
scas
adc
xchg
je
pusha
mov
loopne
pusha
jb
aam
fbld
out
xor
js
pop
loopne
lods
icebp
and
jg
pop
dec
pop
jecxz
sbb
sub
cmp
out
pop
fcomps
xchg
and
sub
dec
scas
inc
insl
fadds
popf
shrb
inc
pop
ljmp
clc
addr16
cmp
data16
add
pop
clc
lret
popf
dec
jmp
andb
dec
xor
add
aas
dec
popf
test
mov
or
data16
mov
push
sub
jo
insl
jl
mov
or
into
aas
mov
shlb
jle
mov
jne
out
fdivr
pop
test
repnz
loope
sbb
ror
push
adc
in
fisubs
movsl
sub
scas
std
xor
xor
and
test
ljmp
sub
mov
mov
cmp
inc
jns
fwait
insl
or
adc
dec
mov
test
mov
ficoml
xchg
push
mov
fcmovnu
hlt
adc
loopne
movsl
es
addr16
inc
lcall
mov
shlb
add
lods
movsl
bound
lahf
push
pop
push
ds
jge
push
jae
or
movsb
and
jp
or
dec
dec
repz
clc
adc
push
cmp
inc
jmp
pushf
cmpsl
pop
push
jle
out
insb
xor
aad
cmpsl
mov
xor
add
js
clc
aam
paddq
mov
push
fs
mov
jns
pushf
lock
sbb
mov
mov
dec
xor
call
lret
adc
pushf
lret
push
and
mov
inc
pusha
pop
mov
lds
test
cmp
and
fmulp
push
mov
fstpt
cwtl
and
xchg
push
jmp
pusha
loop
testl
repnz
push
mov
xor
hlt
mov
pop
cld
test
dec
popf
cmpsb
aaa
lret
hlt
adc
cmp
pop
xchg
and
jp
aad
gs
cmp
or
xchg
lahf
stc
subb
and
mov
pop
orb
pop
shll
mov
hlt
lock
loop
out
nop
pop
push
or
call
movsl
iret
pop
out
jo
sbb
or
out
in
fsts
lea
mov
sub
std
inc
dec
mov
xchg
arpl
push
push
mov
leave
mov
pop
inc
arpl
aad
pop
pop
mov
sbb
lret
or
ja
repnz
push
sub
cmp
std
and
or
scas
sbb
inc
lcall
jl
xor
rcrl
xor
outsb
pop
add
dec
push
dec
or
and
mov
or
fdiv
in
jae
jge
ficoms
sbbl
pop
pushf
outsb
mov
xchg
idivl
mov
ss
jmp
lret
cmc
rol
add
inc
lret
js
imul
idivb
mov
push
fdivl
mov
inc
cmc
icebp
sbb
in
xor
sub
imul
aam
cmpsb
ret
push
orl
sub
adc
pop
stos
inc
decl
out
fs
fucom
and
mov
mov
pop
push
pop
adc
enter
sub
cs
sti
xlat
out
adc
iret
mov
popa
jb
sub
gs
add
std
roll
xchg
loop
mov
lea
dec
decl
mov
jo
stc
test
out
push
mov
fs
repnz
sbb
int
pop
and
mov
xchg
loop
dec
fnsave
jne
loope
mov
push
lcall
daa
mov
mov
mov
arpl
dec
xchg
mov
xchg
lods
imull
fstl
jp
rclb
lock
data16
rclb
or
push
rcrb
adc
enter
mov
adc
mov
xor
cmpsl
ja
out
sbb
ret
push
mov
int
push
lds
xchg
push
sub
aad
fucom
fnstenv
out
out
jge
mov
test
ret
mov
jmp
sub
jp
ja
dec
mov
ss
mov
cmp
sarb
jbe
scas
push
shl
mov
ja
notl
xchg
jle
xor
mov
fwait
add
imul
cvtps2pd
scas
push
and
mov
and
xchg
xor
lret
fwait
iret
jl
adc
lods
outsl
shrb
lret
xor
loop
outsl
dec
cmp
xlat
mov
push
xor
aad
xor
aaa
add
dec
jne
vorpd
xchg
jg
xor
adc
jl
push
jae
mov
aaa
adc
xor
mov
imul
mov
lret
push
mov
add
gs
jno
daa
sub
mov
fildl
jp
leave
cmpsb
sbb
outsb
xchg
test
sub
cmpsb
jno
inc
jle
cmp
mov
sbb
jmp
jp
mov
inc
pop
xor
and
add
leave
ficomps
cmp
mov
xchg
ja
sbb
fcmovnb
fsubrs
mov
mov
add
popa
je
insb
cmp
stc
mov
cmp
mov
sub
testb
pop
ljmp
add
pop
pop
arpl
ret
push
cmc
xor
sub
das
inc
faddl
fdiv
pop
scas
pop
jbe
jae
push
mov
dec
cmp
pop
repz
enter
lock
xchg
mov
push
push
dec
repnz
enter
in
ret
inc
adc
gs
inc
add
pop
cltd
stos
dec
loope
jecxz
in
jne
pushl
and
pop
xor
cmp
push
xor
adc
pop
push
lods
in
pop
inc
mov
cwtl
jle
inc
xchg
icebp
int3
sbb
jne
inc
ds
divl
push
mov
cmpsb
das
xor
jno
test
cmpsl
xor
pop
push
popf
xchg
data16
jo
add
sub
mov
jp
enter
or
sbb
xor
test
jae
mov
mov
jecxz
lods
inc
push
add
test
ss
mov
in
cmpsb
or
push
ret
pop
pop
and
xchg
cmp
cmp
push
sub
aam
aad
push
adc
bound
dec
repz
xchg
add
cmpb
jl
pop
cmp
push
inc
jg
push
xchg
shlb
test
inc
jnp
stos
not
xor
sbb
jmp
add
cmp
pop
sarl
sbb
in
sub
adc
test
sub
fadds
dec
xor
lods
pop
movsb
sbb
and
pop
xor
pop
pop
mov
icebp
sbb
xchg
stos
lock
push
nop
inc
out
scas
sbb
lcall
ffree
add
xor
and
sub
push
sbb
mov
bsr
movsb
mov
movsl
sbb
add
dec
rorl
push
inc
out
mov
mov
enter
lret
sbb
imul
sarb
imul
mov
loop
jae
aad
ror
loop
sbb
lds
mov
jae
and
xorl
xor
jge
mov
ljmp
in
and
add
into
xchg
loop
movsb
ret
cltd
arpl
mov
xchg
mov
out
sbbb
and
xlat
pushf
mov
mov
xchg
xchg
je
stos
pop
outsl
xor
xchg
mov
cmpsl
dec
cli
inc
cld
test
dec
outsb
adc
out
movsl
dec
mov
ds
sub
xchg
pop
in
stos
test
lds
aaa
sub
push
xchg
mov
out
xchg
push
arpl
in
movb
cmpsb
repnz
out
hlt
add
mov
push
dec
xchg
mov
das
xor
fstl
inc
sbb
popf
or
dec
push
xchg
call
xchg
fwait
loopne
cmp
iret
pop
rolb
mov
je
jmp
or
dec
leave
cwtl
scas
shrb
movsb
jnp
push
and
loopne
sbb
rorl
xorb
lods
mov
imul
and
inc
insb
jno
cli
cmp
jg
mov
sti
clc
mov
dec
lds
inc
sbb
xlat
jecxz
gs
je
or
xchg
bound
push
fwait
mov
jns
clc
in
mov
lods
xlat
sti
cli
mov
sbb
daa
movsb
cmp
sbb
loop
imul
out
fs
mov
push
nop
and
out
pop
add
enter
xor
and
fstps
stos
pop
jmp
cltd
in
push
pop
cwtl
cwtl
pop
and
dec
test
pop
stc
sub
pop
rcr
test
sahf
loope
insb
pop
lods
rclb
dec
aad
out
insl
enter
insl
ficomps
jmp
mov
xor
jge
jne
shl
and
in
adc
pop
sbb
adc
lods
lcall
inc
lret
loop
mov
jae
jmp
daa
sarb
cmp
add
mov
fwait
mov
inc
mov
loop
rcr
int
inc
in
popf
dec
fstl
jmp
cwtl
jl
xchg
pop
addr16
arpl
insl
xchg
clc
pop
in
jl
pop
cmp
pop
aad
movsl
pop
lcall
mov
cmc
and
shlb
js
fwait
rcrl
iret
jp
mov
cmp
les
out
in
and
mov
loope
pop
xor
inc
and
lea
lea
mul
mov
push
cmpsl
popa
xor
push
ja
je
repz
popa
repz
cmp
cwtl
mov
les
and
sub
movl
std
loope,pn
in
cld
xchg
dec
cmpsl
movsb
mov
rorl
roll
xchg
das
adc
call
sahf
sti
fildl
icebp
in
aad
and
inc
repnz
jp
test
jp
jae
fnstcw
xor
inc
addr16
lock
sub
bound
daa
mov
lods
aaa
ss
in
sbb
sub
and
shlb
mov
mov
pop
iret
stos
jp
inc
rorl
cli
aad
xchg
xchg
fistl
sub
shlb
fsubl
ret
xchg
jmp
icebp
push
push
add
scas
add
dec
loop
loop
icebp
sahf
adc
cmp
xchg
stos
push
cmp
ret
pushf
jb
cwtl
jo
cmc
sbb
int3
mov
pop
jge
mov
xor
aas
xor
ja
jae
cwtl
mov
shl
or
jns
xchg
mov
lods
leave
in
mov
mov
xchg
movsl
add
cs
mov
mov
xor
fdivs
lods
int
xor
cld
xor
jl
inc
push
mov
scas
je
pop
push
arpl
mov
mov
adc
pop
jo
call
sti
rorb
mov
mov
hlt
or
mov
leave
loop
pop
adc
rclb
xchg
push
jne
out
jb
loopne
sar
and
xchg
fwait
push
leave
inc
xchg
test
mov
jno
in
adc
in
and
jae
loopne
les
push
pop
ret
ret
or
aad
fs
xchg
lret
shrl
hlt
add
insb
fwait
pop
lock
ret
std
mov
fs
loopne
jae
das
add
movsb
jns
xchg
inc
jns
or
mov
int
adc
dec
cmp
enter
sbb
stos
loop
aad
ds
sahf
rcl
xor
add
inc
pushf
enter
lock
push
enter
mov
test
int
sbb
inc
mov
push
repz
enter
shll
std
dec
mov
pusha
sbbl
outsb
jle
out
sub
ffreep
xorl
sub
lock
inc
cmpsb
push
jno
xchg
enter
mov
push
xor
adc
jl
dec
xlat
imul
mov
in
enter
mul
repnz
pop
mov
pop
jo
inc
mov
scas
adc
in
andl
fdivs
mull
xchg
inc
cmpsl
jbe
inc
xchg
push
xchg
ja
pop
pop
daa
divb
out
push
xlat
push
out
mull
xchg
inc
cmpsl
jbe
inc
xchg
push
xchg
ja
pop
pop
daa
divb
out
push
xlat
push
out
mull
xchg
inc
cmpsl
jbe
inc
xchg
push
xchg
jbe
pop
pop
divb
out
push
xlat
push
out
mull
xchg
inc
daa
jbe
cmpsb
mov
mov
shll
lahf
cmp
or
sbb
add
pop
and
subl
cmp
stc
sub
fsubs
test
mov
mov
jns
imul
cmp
push
sbb
jb
sub
mov
ret
cltd
mov
imul
cmp
push
sbb
jb
sub
xchg
mov
xchg
mov
or
imul
test
mov
mov
ljmp
add
add
sub
in
sub
or
cmp
lods
xchg
fs
mov
insl
andb
ds
mov
mov
push
aad
pop
cmp
and
jg
insl
bound
dec
pop
ret
imul
mov
out
movsl
xor
inc
add
jmp
pop
and
pop
test
sub
test
xchg
in
or
and
ja
icebp
xchg
jle
lds
rol
cs
jbe
adcl
pop
iret
xchg
push
idivl
xchg
lods
mov
mov
xlat
test
repz
pop
and
cmp
push
sbb
jb
sub
fldenv
test
fwait
or
dec
pop
pop
jp
dec
push
pop
sub
and
lret
int
in
hlt
loopne
mov
add
adc
or
sbb
test
mov
mov
xchg
mov
cmp
push
js
sub
bound
jb
sub
fldenv
test
bnd
imul
cmp
push
sbb
jb
sub
fldenv
test
bnd
insb
pop
aam
sbb
mov
out
imul
pop
cmp
xchg
xchg
lods
cmp
mov
fildl
out
push
or
inc
adc
xor
sub
or
negl
inc
stos
sti
and
pop
inc
and
in
inc
fiaddl
leave
loopne
pushf
loope
xor
aad
mov
in
sbbl
dec
icebp
shrl
inc
adc
inc
mov
fs
in
sub
jg
addr16
lock
inc
cltd
or
cmpsb
sub
sbb
add
mov
xchg
push
cmp
int3
or
test
or
lret
call
shlb
test
lret
cmp
flds
sbb
and
xlat
cs
cmp
jge
mov
popl
or
call
add
push
addr16
sbb
mov
clc
lock
aaa
and
popa
sarb
cmpb
sbb
cmpl
jb
add
leave
clc
mov
cmp
lea
jnp
adcb
adc
sbb
test
sbb
jnp
filds
sub
mov
mov
push
dec
outsl
mov
test
inc
xchg
xor
dec
stos
ret
cmp
insb
ljmp
push
lret
rcll
xchg
inc
and
call
inc
mov
mov
pop
dec
cli
adc
sbb
popa
jl
adc
dec
xchg
stos
mov
xor
lahf
and
mov
fists
rcll
movsl
pop
sahf
jmp
xchg
or
push
jne
inc
pop
js
int3
test
cmp
shr
jp
sub
inc
xor
add
ret
or
insb
mov
add
dec
shl
or
xchg
xchg
xor
scas
addr16
add
and
adc
movb
inc
std
cmpsl
int
dec
mov
xchg
or
cwtl
dec
int3
pushf
ss
push
addr16
xchg
cmp
arpl
addr16
add
pop
adc
mov
dec
inc
cmp
icebp
inc
int
pop
fcmovnb
outsb
mov
push
xchg
lock
pop
mov
mov
pop
add
int
subb
jp
dec
push
mov
mov
adc
cltd
test
lock
sbb
and
nop
pop
xor
mov
xchg
push
scas
push
ljmp
repnz
pop
mov
cld
push
mov
loop
imul
addb
cmpsb
pop
ss
stos
dec
xor
xor
or
sbbb
pop
cmp
sbb
fcmovne
cmp
nop
xchg
fnop
push
dec
cmp
sbb
cwtl
andl
out
pop
mov
stos
xchg
inc
loope
push
addr16
cld
clc
cwtl
dec
xor
cs
jp
jnp
incl
push
pop
lods
nop
pop
cmpsl
pop
outsb
test
mov
inc
ret
mov
xchg
mov
mov
ljmp
sbb
leave
fcoms
xlat
js
xor
inc
movl
jge
inc
jno
cmp
and
jl
ret
das
shl
jb
inc
mov
lds
add
cs
lea
or
cmpsb
ljmp
aas
jne
inc
dec
stos
and
movsl
xchg
pop
test
jo
mov
and
stos
xor
inc
xor
rorb
adc
lods
inc
sbb
imul
mov
fldt
adc
push
mov
mov
push
lods
xor
dec
lds
push
add
std
popa
jmp
lods
insl
bswap
mov
cmpsb
leave
scas
dec
nop
pop
enter
xor
sarb
jnp
sub
and
pop
xor
and
dec
pop
test
stos
nop
jmp
scas
repz
adc
popa
lds
out
leave
and
fsubs
stos
jg
testl
dec
push
mov
sub
lds
idivb
lods
sbb
outsl
sbb
nop
fcmovbe
and
push
jle
in
mov
dec
dec
push
add
fdivs
rcl
xor
push
dec
pop
imul
and
push
ds
pusha
cmpsl
adc
xchg
add
cmp
mov
mov
jnp
stos
aas
lea
sti
leave
jmp
movsb
testb
cmp
inc
mov
cmpsl
roll
lahf
adc
in
sbb
sub
stos
push
jo
lods
jle
lret
dec
mov
adc
scas
mov
lret
or
dec
ss
insb
les
pusha
pop
xor
ljmp
xor
dec
pop
pop
mov
aam
shrb
push
lea
int3
lea
xor
aaa
jge
mov
ja
cld
in
sahf
inc
cwtl
add
jo
or
cmpsb
xchg
or
out
in
dec
push
cmp
jge
push
cmpsb
push
test
movsb
push
mov
push
call
jb
pop
mov
fisttpl
sub
push
hlt
insb
cld
mov
push
subb
in
cmp
cld
ja
mov
or
bound
dec
cmpl
pop
push
aam
add
cmp
ror
daa
repnz
shlb
scas
and
aad
pop
mov
les
outsl
inc
sub
mov
lsl
cmc
cmp
sbb
rol
dec
inc
ret
insb
sbb
xor
inc
stos
leave
out
out
ror
pop
cmp
mov
scas
lea
in
sbb
test
sti
mov
sbb
mulb
pop
add
ljmp
fwait
sub
push
pop
mov
pop
pop
jecxz
mov
cmpsl
push
out
xor
lcall
loope
push
lods
adcb
xchg
xchg
into
mov
mov
xor
into
fstps
and
out
rcr
push
in
lret
pop
das
push
jle
jecxz
insl
mov
packuswb
jbe
mov
shll
jno
jecxz
sub
mov
lahf
and
xlat
cmp
ljmp
jns
cli
ss
out
fldcw
and
mov
mov
vpacksswb
dec
ds
jne
cli
cli
pop
xor
jnp
outsl
repz
push
out
xor
jne
sbbb
xor
push
inc
pop
lret
fistl
sub
add
repnz
add
out
out
sbb
out
test
push
popa
jp
nop
add
cmp
je,pn
xchg
and
pop
fsubr
orb
iret
mov
mov
cmp
xlat
nop
test
rol
xchg
arpl
jno
or
xchg
fldenv
rorb
mov
popf
mov
adc
push
lret
fcomps
fcompl
shlb
jae
xor
cmc
mov
ss
mov
pop
add
into
pop
lds
test
and
shrl
hlt
out
es
inc
scas
xor
pop
mov
mov
arpl
adc
adcb
mov
lods
sbb
lds
mov
test
xor
sbb
fsubs
mov
jne
dec
mov
orb
jge
sbb
pop
sbb
icebp
test
mov
push
loope
cmpsl
jp
push
cmp
loopne
pop
add
outsl
les
xor
pop
jmp
cli
stos
out
push
and
stos
js
lahf
dec
sub
adc
loop
in
cmovnp
mov
push
mov
cmc
push
int3
pushf
loop
sbb
push
out
mov
pop
lea
mov
push
xchg
sub
aas
mov
mov
mov
mov
scas
mov
push
cmc
inc
ret
cmp
jp
mov
pop
addl
add
bnd
and
jle
rorl
lret
sti
inc
push
lret
andb
jmp
jmp
ds
sahf
popa
cmpl
hlt
outsb
and
pop
cltd
pop
es
movsl
inc
pop
movsb
rolb
mov
xchg
sbb
or
xchg
sub
rol
lds
cmc
dec
jg
inc
adc
mov
insb
sarl
mov
sahf
outsb
xchg
movsb
dec
push
inc
sub
int
mov
lock
or
mov
pop
mov
loope
shr
sub
jbe
mov
mov
fmull
ljmp
leave
fsubrs
shrl
out
cmp
iret
and
add
pop
das
inc
out
insb
stos
or
jo
addr16
je
dec
mov
adc
imul
cmp
xchg
sbb
and
push
ret
sub
adc
ljmp
adc
cltd
ss
mov
jb
adc
shll
fwait
cmp
sbb
in
add
arpl
mov
adc
addl
push
imul
test
jle
sub
adc
pop
insl
jb
test
les
push
push
movsl
sub
jno
andb
scas
mov
mov
sahf
les
pop
in
inc
data16
sub
loope
mov
xchg
jbe
lods
lds
outsb
push
stos
cltd
xchg
dec
loopne
mov
or
add
push
aaa
jge
fwait
out
repnz
sahf
inc
dec
insl
sti
cmc
popf
pop
push
pop
test
mov
mov
xlat
sti
mov
xor
fcompl
sti
cs
pop
fidivrs
cmc
mov
xchg
push
xor
cmp
jmp
sbb
and
repz
xchg
dec
adc
jecxz
jmp
and
pop
lods
adc
push
lods
add
mov
and
dec
mov
lods
sbb
les
sub
ror
inc
xor
lret
ja
jg
std
hlt
scas
and
sti
in
into
inc
dec
stos
xor
and
pop
cmp
movsl
insl
mov
cmpl
addr16
cmp
cmp
and
out
mov
dec
sbb
xchg
jae
and
scas
test
jl
sbb
jmp
imul
pusha
xchg
xor
ret
cmpsb
add
inc
mov
ja
and
push
or
daa
daa
decb
loopne
pop
dec
cmp
xchg
jne
mov
test
add
and
nop
insb
add
scas
xchg
xor
mov
inc
sbb
aaa
arpl
fnsave
notl
and
cmpb
test
sbb
cmp
and
and
xor
mov
sbb
rol
mov
mov
and
fwait
pop
cmpsb
push
test
add
and
mov
call
int
cmp
mov
xchg
sub
and
xchg
sub
in
sbb
iret
or
pop
add
shrl
mov
adc
sbb
roll
or
ss
into
leave
es
sub
ds
pop
adc
leave
loopne
fidivl
add
hlt
jg
shl
out
rcll
mov
mov
dec
cmpsl
push
lret
push
lds
std
sbb
push
push
cmpsl
cmp
sbb
pushf
xor
out
stos
lea
fiaddl
add
sub
js
stc
mov
sub
jecxz
sub
repz
xchg
inc
fs
mov
cmp
repz
dec
mov
add
jae
inc
dec
iret
outsl
xchg
dec
inc
ja
out
andl
sti
push
iret
das
fldl
adc
pop
sbb
push
add
addr16
cwtl
test
jl
in
inc
push
pop
imul
push
incl
mov
outsb
ss
cmovo
mov
cwtl
inc
adc
insb
jae
ljmp
pop
xchg
jb
jns
jg
xor
insl
fs
das
ret
loopne
pop
lods
ljmp
or
loop
shr
sub
mov
or
add
jns
cmp
mov
nop
rcll
push
fidivs
dec
or
jbe
icebp
push
outsl
pop
ss
cmp
push
adc
sahf
push
mov
push
mov
sub
lods
mov
stc
push
pop
cmp
mov
insl
mov
pop
lock
adc
outsb
popf
out
icebp
xor
add
ret
test
inc
repz
lock
shlb
daa
incl
icebp
loopne
and
stos
in
xchg
adc
in
pusha
je
outsb
adc
adc
rol
sub
lock
pushl
pop
jp
mov
xor
cmp
gs
in
sti
push
or
cmc
les
xchg
bound
dec
cs
xchg
je
gs
jg
add
add
pop
mov
lret
insb
inc
and
mov
dec
or
pop
jns
arpl
fdivs
addl
pop
cmp
adc
jo
icebp
jmp
cmp
and
mov
inc
roll
push
and
sbb
mov
shl
cld
out
leave
clc
and
jp
hlt
pop
lcall
push
dec
mull
cmpsb
dec
aam
stos
sub
mov
daa
in
popa
mov
movsl
xchg
jl
xlat
scas
popa
adc
push
fistps
sub
sub
adc
or
ljmp
pop
push
mov
push
shll
or
pop
cltd
mov
dec
ds
icebp
jecxz
push
and
sbb
mov
adc
jnp
xchg
cld
mov
scas
shl
into
mov
mov
adc
call
pop
into
cmp
push
or
xor
xchg
mov
cmp
jns
push
dec
daa
std
cmp
cmp
gs
mov
adc
inc
ss
sbb
mov
jecxz
mov
and
sti
and
ss
adc
arpl
push
xor
fldenv
leave
pop
push
repz
mov
cld
cwtl
rcrb
inc
std
shlb
xchg
sbb
in
aas
xchg
push
adc
xchg
xor
pushf
scas
andb
lods
cltd
lock
xchg
jmp
pop
int3
adc
pop
lock
movb
imul
xor
hlt
cli
inc
sbb
enter
pop
or
push
and
xor
out
loope
cmp
lahf
adc
aad
inc
lds
or
inc
mov
and
js
adc
jge
orl
loope
addl
push
loope
jle
pop
xlat
shlb
imul
mov
dec
scas
pop
hlt
jno
rcrl
out
jb
and
xchg
adc
icebp
add
pop
loop
cs
sub
scas
ret
jmp
xchg
pop
mov
in
pop
aaa
shrl
add
push
pop
ret
pop
pop
fbld
xorl
jne
mov
mov
cmpsb
fptan
dec
adc
stc
aad
hlt
jne
cmp
in
jmp
jbe
xchg
and
mov
arpl
adc
out
jnp
cmp
pusha
arpl
pop
or
mov
insb
xorb
in
clc
aas
sub
dec
outsb
lock
mov
adc
mov
and
dec
push
scas
lea
je
add
mov
mov
xlat
leave
loop
jge
sbb
or
sub
inc
es
jl
in
jmp
ja
mov
adc
or
add
jmp
inc
dec
inc
jne
lods
push
jp
adc
fidivl
ret
pushf
add
addr16
mov
mov
in
outsl
adc
sbb
data16
scas
mov
inc
jmp
into
xor
pop
xlat
movsl
and
dec
mov
mov
mov
inc
adcl
mov
iret
jge
cs
dec
aam
dec
add
bound
sti
into
add
loopne
xchg
and
cli
scas
adcl
arpl
mov
mov
sbb
cmpsb
hlt
test
pop
mov
cmp
daa
fildll
hlt
scas
sti
in
lret
mov
mov
test
mov
mov
pop
jl
push
sub
fdivs
mov
leave
xlat
mov
loope
xor
or
mov
mov
mov
loop
sub
jmp
jnp
mov
into
pop
les
mov
ja
mov
int3
dec
inc
hlt
les
test
outsl
add
adc
mov
ret
jl
or
outsb
stos
mov
bndldx
pop
push
cmp
push
popf
aad
dec
stos
ja
xchg
push
clc
mov
stos
imul
cmp
into
or
pop
pop
lock
addr16
and
xchg
dec
xchg
stos
addr16
imul
daa
pop
cmc
mov
mov
push
push
add
inc
or
fsubl
outsb
mov
lods
in
cmp
mov
pop
add
cmp
xor
orl
das
xchg
test
in
addr16
push
cmc
jg
jb
sub
or
mov
add
cmp
pop
push
testb
into
mov
push
repnz
push
push
xor
mov
pop
mov
sbb
orl
mov
jle
push
xlat
xchg
sbb
and
or
or
enter
pop
inc
mov
pop
mov
pop
flds
pusha
cmpsl
stos
adc
movsl
leave
pop
jl
ret
scas
and
mov
mov
xchg
test
jecxz
cmp
or
lahf
jo
insl
addr16
mov
or
sbb
mov
rol
lods
ljmpw
addb
inc
repz
mov
sub
jne
sbb
adc
fimull
mov
sbb
mov
inc
aas
enter
ds
dec
mov
and
or
mov
xor
xor
push
shl
shll
fmulp
test
sub
sub
adc
cmpb
pop
xor
sbb
shr
imul
mov
imul
dec
cmc
shll
into
in
loop
xchg
or
movsw
lods
jmp
add
in
mov
jl
mov
notl
lods
cmp
fadds
jnp
dec
rolb
jns
or
fwait
mov
pop
mov
inc
lods
shlb
stos
shrl
movsl
call
test
pop
out
pop
repnz
outsb
out
jp,pn
add
cmp
add
inc
ret
sbb
bound
loopne
fadds
dec
iret
xor
cs
test
ja
cmpl
scas
add
insb
xor
mov
idiv
inc
test
lds
cmp
in
mov
push
adc
ja
dec
ljmp
mov
cmp
lahf
jae
sub
ds
ja
jle
fwait
sub
mov
push
ret
add
add
aas
cli
decl
jnp
pushf
es
mov
mov
gs
dec
jno
push
or
sbb
push
jp
shr
rcrl
imul
movsb
cmp
or
push
or
insl
rcrl
inc
xor
insl
mov
test
xchg
sahf
sub
xor
bound
or
dec
add
pop
js
lods
push
jo
enter
fistpll
inc
lock
into
xlat
cmc
jmp
mov
gs
add
and
adc
dec
pop
popf
nop
aas
jge
push
ja
xchg
pop
sti
imul
and
scas
adc
in
clc
xor
orl
push
aad
jge
jg
ret
mov
dec
iret
cmp
imul
insb
ss
jbe
movsl
pushf
or
cmpsl
bound
inc
aam
pop
add
sbb
adc
lds
dec
in
popa
ds
cwtl
adc
popa
lret
add
hlt
add
jnp
into
pop
add
sub
fisttpll
push
add
mov
fs
cmp
adc
or
out
ret
and
xchg
inc
inc
shl
mov
pcmpgtd
pop
sub
rcrl
add
dec
add
scas
icebp
xor
adc
xor
lret
cmp
mov
scas
jns
fadds
xchg
jae
andb
call
ret
cmp
push
push
sbb
pop
inc
ror
fwait
jae
or
scas
in
push
fxam
lds
jns
fimull
jae
mov
psubd
xor
mov
or
out
lahf
int3
fwait
int
xchg
fwait
das
out
repz
dec
jno
pop
shll
push
popf
push
xchg
ljmp
xor
jmp
adc
fsubrs
std
sub
inc
push
lahf
ss
xchg
jl
rcrb
sbbl
push
jb
mov
adc
mov
jl
and
jo
and
bound
xor
arpl
in
in
fs
jge
sub
lahf
inc
pop
insb
pusha
arpl
adc
fnsave
arpl
xlat
lds
popa
xor
xor
scas
dec
movsl
fs
mov
test
aas
mul
inc
cmp
pop
fbld
xlat
stos
mov
xchg
iret
insl
aaa
inc
push
sahf
xchg
mov
insb
mov
sahf
pop
push
pop
push
les
adc
rorb
mov
lods
rol
std
jnp
fldt
pop
mov
daa
cltd
adc
stos
fs
cld
xchg
xor
bound
sub
inc
mov
adc
out
in
pop
addr16
lret
adc
sub
push
lods
pop
scas
push
mov
mov
mov
stos
dec
jg
push
xlat
outsb
fisttpll
adc
dec
xor
inc
sub
bound
jb
sub
fldenv
test
bnd
imul
cmp
push
sbb
jb
sub
fldenv
test
bnd
imul
sbb
jb
add
xchg
fldenv
test
bnd
push
xor
inc
sub
bound
jb
sub
jae
leave
and
add
in
shr
cmp
lret
or
push
add
add
add
add
add
aaa
add
add
add
add
inc
add
add
mov
add
add
push
add
add
push
add
add
add
sldt
xlat
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
insb
add
add
add
jbe
jle
icebp
add
mov
fiaddl
add
add
add
add
add
add
add
popa
add
add
and
add
add
add
imul
adc
jl
add
add
add
add
adc
add
add
add
mov
int3
add
add
add
or
jnp
add
add
add
lods
add
add
add
add
add
add
cmp
add
add
pop
add
flds
or
pop
add
and
jnp
pop
add
popa
add
out
jl
push
add
add
add
adc
add
xchg
add
add
lahf
add
jl
dec
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
test
xor
jnp
jnp
push
js
popa
add
add
add
pop
add
js
incb
ret
add
add
push
add
add
add
jnp
loope
rolb
add
add
add
dec
add
add
add
add
add
add
mov
jno
dec
add
insb
add
mov
add
pop
add
add
add
ret
add
add
mov
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
fiaddl
mov
jnp
pop
add
add
jnp
inc
add
push
add
add
add
xchg
add
add
add
add
add
add
add
out
ret
add
jnp
inc
add
add
jmp
inc
add
add
add
add
incb
sahf
add
add
add
add
jnp
int3
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
mov
add
add
pop
add
add
add
add
add
add
add
int3
add
add
cmp
dec
add
add
add
sbb
add
aad
and
in
add
add
add
add
add
add
add
add
test
xor
or
leave
add
add
jnp
loope
fildl
dec
add
add
sbb
fiaddl
and
jmp
pop
add
jnp
sbb
fildl
sbb
xlat
add
inc
add
add
add
add
add
add
xor
add
add
add
out
mov
add
add
add
add
xchg
into
mov
addr16
cli
mov
xchg
push
mov
outsl
lea
fisubl
negl
jns
sub
xor
sub
or
xor
scas
xchg
jl
lods
insb
out
gs
xchg
xor
inc
cmpl
xchg
std
jae
xchg
or
push
out
add
xor
jle
int
xor
push
pop
insl
lock
cmpsl
popa
cmp
sbb
wbinvd
sarb
mov
lret
mov
pop
mov
dec
lcall
add
add
fbstp
imul
pop
xchg
fildll
das
or
fistpll
hlt
js
dec
push
jns
rclb
imul
or
adcb
adc
insb
mov
cmc
mov
sub
sub
pop
sub
mov
adc
sbbl
mov
gs
int3
adc
add
loop
or
add
pop
add
cmpsb
push
sub
mov
into
lahf
inc
insl
sub
jmp
incb
fdivp
test
mov
xor
inc
xchg
mov
add
add
lret
fiaddl
ja
inc
ret
sub
ficoms
lahf
daa
sub
cmpsl
add
sbb
subl
add
dec
jge
sbb
inc
in
inc
pushf
imul
js
adc
hlt
jns
imul
adc
sbb
mov
js
xchg
jnp
xor
xchg
je
xor
and
xchg
inc
clc
cmpsb
pop
adc
pop
sub
mov
dec
push
xchg
jge
mov
in
mov
outsb
cmp
adc
fs
sub
insl
adc
lea
xor
and
pop
push
mov
je
pop
fidivrs
cs
in
push
sub
out
and
int
nop
rclb
jge
mov
out
out
bound
mov
and
inc
cmc
xchg
inc
xchg
or
push
in
aaa
adc
int
shrl
xchg
xlat
movsl
test
pop
push
out
adc
dec
leave
aam
dec
popa
mov
sub
jb
mov
lds
cmp
push
cmc
mov
dec
xchg
bound
jp
or
sbb
jg
test
mov
and
imul
jo
imul
xor
test
pop
and
mov
jp
stc
clc
dec
imul
mov
mov
jbe
icebp
fisttpl
pop
shrl
jl
xchg
push
jmp
in
or
xchg
test
xchg
into
mov
xchg
xchg
out
sbb
inc
addl
add
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
