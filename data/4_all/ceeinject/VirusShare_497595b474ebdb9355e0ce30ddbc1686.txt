call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fs
aam
les
push
into
test
idivb
loopne
je
cmpsl
push
addb
and
hlt
ss
aad
les
mov
movsb
jbe
push
test
je
cmpsb
xor
test
adc
add
hlt
das
in
aam
les
mov
movsb
jle
dec
test
test
mov
imul
jae
popa
aas
mov
mov
cmc
insb
addr16
xchg
adc
insl
inc
sub
lods
mov
push
stos
xchg
push
test
fwait
pop
or
xchg
fstpt
jno
in
cs
pop
gs
sbb
cmpsb
add
mov
pop
xchg
inc
xorl
in
hlt
jmp
mov
and
push
imul
or
shll
mov
adc
adc
outsb
inc
aas
addr16
dec
notb
leave
in
pop
out
inc
mov
ret
insb
push
inc
push
mov
mov
and
jns
fisubs
adc
and
ss
les
mov
movsb
xchg
push
test
mov
mov
xor
and
adc
add
xorb
push
mov
je
pop
sarl
loope
sbb
cmpsb
cmp
push
stos
stos
pop
cmpsl
dec
mov
jbe
sub
or
sub
and
mov
mov
ss
jb
inc
cmc
inc
movsb
xchg
push
test
mov
cmpsb
push
xchg
inc
xchg
and
adc
add
hlt
ss
aam
les
mov
movsb
xchg
push
test
mov
cmpsb
push
xchg
inc
xchg
and
adc
add
hlt
ss
pop
xchg
xchg
add
std
scas
clc
out
jo
arpl
cmp
shll
fwait
mov
jb
lds
sbb
adc
movb
mov
ret
cmp
and
xchg
mov
fstl
pop
loopne
xlat
lahf
xchg
and
cmpsl
fnstsw
cmpsb
sti
cmp
loopne
and
and
int
fdivrl
or
jl
test
push
lods
outsl
enter
push
pop
inc
sub
loope
push
cmpsl
sub
push
les
xor
fldt
hlt
mull
test
stos
sti
push
push
mov
das
add
add
lret
jbe
adc
scas
push
xchg
popf
outsb
jg
inc
in
fistpll
adc
push
lret
insb
xor
lahf
mov
mov
jnp
jo
jnp
popa
inc
jbe
sahf
mov
add
dec
fcmovb
sbb
and
adc
mov
mov
mov
nop
inc
stos
xchg
in
push
jns
dec
inc
jne
mov
icebp
mov
adc
xor
orl
aaa
daa
xor
loopne
or
out
shll
jno
popa
fiadds
jbe
push
jge
xor
outsb
mov
or
adc
aaa
repnz
mov
lds
cmp
imul
aaa
in
cli
mov
pop
or
add
push
cmpsl
data16
rclb
sahf
movsl
test
popa
cs
bound
lret
inc
or
cmc
jbe
mov
xchg
lock
fwait
icebp
movswl
or
dec
sub
mov
movsl
stc
popa
cmpsl
test
pop
cmpsb
cwtl
das
cltd
xchg
mov
xor
mov
rcrb
pop
adc
xchg
pinsrw
lahf
cmp
les
lock
std
ds
mov
adc
push
call
mov
push
data16
mov
add
loop
jp
fistps
cmp
adcl
enter
dec
sbb
js
shrl
mov
in
call
mov
and
adc
add
std
xor
out
std
ja
leave
adc
adc
call
jae
adc
mov
and
push
and
add
loop
jo
add
enter
enter
clc
adc
push
int
ret
out
adc
subb
push
dec
sub
push
push
push
jbe
shr
push
xor
mov
adc
mov
pop
push
pop
or
mov
inc
sarl
loope
push
pop
popa
xor
inc
inc
insl
insl
inc
into
aad
xchg
or
mov
mov
outsl
out
sbb
xchg
add
ja
lea
push
or
cli
cmpsl
fstl
cltd
pop
xchg
sub
mov
pop
rcrb
jle
icebp
jle
mov
ret
dec
daa
inc
arpl
bound
data16
insb
rcrb
outsb
xor
xchg
push
xor
test
fucompp
lock
and
mov
xor
add
les
jge
movsl
jge
pop
xchg
xchg
adc
sahf
cmp
js
nop
and
popf
sti
movsb
sub
iret
lcall
push
xor
pop
testb
movsl
pop
push
sub
cmpsb
add
jnp
jne
dec
sub
in
pop
and
pop
xor
test
ror
repz
cmpsb
sahf
jmp
jl
cmp
and
arpl
xchg
dec
in
cltd
bnd
repnz
repnz
aad
popa
das
inc
adc
andb
add
stc
stc
movsl
sbb
xchg
mov
push
mov
fldcw
or
xchg
sahf
iret
sbb
xor
dec
loop
dec
or
cmpl
incb
adc
pop
mov
inc
mov
pusha
pop
and
xor
adc
lcall
js
enter
sub
fdivl
hlt
add
push
into
or
call
mov
inc
hlt
sub
jge
push
pop
mov
out
or
in
fbld
and
jb
sbb
lret
and
or
xchg
test
jmp
sbb
pop
test
fsubp
inc
icebp
jo
cmp
in
cmp
sub
mov
mov
xlat
scas
xchg
out
inc
dec
ja
xchg
cmpsl
and
popa
jne
mov
orb
mov
xchg
inc
shr
or
sbb
mov
ja
xor
out
xchg
std
sub
aaa
jp
cmp
loop
repz
testb
rcrl
ds
jne
dec
imul
test
stc
push
jno
pushf
sbb
mov
test
jbe
mov
pop
sbb
test
fwait
or
dec
dec
xchg
xor
mov
lret
insl
inc
push
or
jl
icebp
adc
add
jp
inc
sar
or
aam
mov
and
push
add
cmc
adc
push
jmp
mov
xchg
call
pop
jae
pop
jle
fldl
add
iret
test
mov
subl
in
mov
popf
shll
movsl
jb
cli
stos
lret
xorl
sbb
addb
stos
dec
ds
and
mov
mov
shlb
jp
movl
sbb
lock
push
push
loop
sbb
xchg
arpl
and
push
jg
fstpt
dec
or
sti
xlat
jne
rcrb
enter
jo
mov
and
and
pop
inc
cmp
imul
repz
xlat
or
jo
sub
or
bound
scas
enter
dec
stc
lods
cmpsb
xlat
inc
mov
shlb
std
dec
int
adc
sti
aas
arpl
out
ljmp
mov
or
cmp
fwait
ljmp
shll
cmp
dec
sahf
shl
cli
mov
push
fwait
adc
les
cwtl
inc
adc
inc
mov
hlt
push
sti
mov
dec
pop
nop
adc
xchg
ficoml
orb
scas
sarb
push
mov
or
mov
sti
pop
lahf
pop
imul
add
scas
enter
mov
into
lods
popa
outsl
pop
push
jle
mov
in
or
mov
and
mov
mov
xchg
xor
add
mov
dec
mov
xchg
xchg
loope
pop
dec
cltd
push
add
or
xchg
jecxz
cmp
xor
dec
mov
inc
or
sbb
adcb
cmp
xchg
test
sbb
inc
jae
dec
xor
mov
mov
mov
xchg
jns
pop
ja
inc
inc
sub
cmp
repnz
and
testl
test
roll
sarb
pop
movsl
aaa
push
addb
fstpl
xchg
adc
lcall
cltd
lods
daa
dec
aas
add
dec
popf
xchg
ffree
mov
std
pop
out
jl
dec
icebp
xorl
roll
sti
mov
arpl
fsub
xor
jnp
or
loop
lds
shl
or
adc
cmp
imul
lret
hlt
mov
mov
mov
in
jl
mov
shlb
in
fdivrp
stos
push
gs
mov
loope
jl
pushl
hlt
fisubrs
mov
mov
pop
int3
lods
movsb
iret
ret
aam
imul
sbb
push
cmp
scas
movsb
inc
pushf
sub
out
push
sub
enter
into
js
js
mov
pushf
mov
clc
sub
and
addl
sbb
sbb
push
xchg
incl
ja
mov
cwtl
xchg
add
aaa
mov
popf
cmc
nop
cld
pop
dec
leave
add
popf
adc
je
out
pusha
push
sub
cmp
sub
jo
add
fwait
lahf
cmp
xchg
and
pop
std
enter
test
es
jns
hlt
jg
push
loopne
aas
mov
inc
add
inc
aam
cltd
or
xchg
imul
fdivrl
adc
ret
rcrl
inc
mov
xor
push
pop
aam
sub
mov
cmc
or
popf
inc
mov
sbb
xor
leave
mov
aaa
adc
les
push
xchg
adcb
je
push
mov
in
jb
cltd
dec
push
sbb
leave
enter
lcall
mov
mov
rclb
xor
stos
into
lods
cmp
lea
cmp
sbb
fsubl
std
mov
stos
inc
sub
ds
push
mov
filds
out
mov
jno
mov
aam
pop
push
pop
inc
shlb
js
xor
cltd
jbe
rclb
cmpsb
mov
scas
orb
xchg
jae
add
sti
hlt
stos
imul
inc
cli
dec
xor
jg
cwtl
xor
mov
pop
mov
out
shl
ficoml
cld
sbb
mov
ret
xor
adc
add
sti
dec
inc
cmp
andl
adc
dec
jp
and
mov
cld
or
scas
pop
lret
sbb
mov
stos
jno
loop
in
xchg
sbb
pushf
sub
rol
inc
outsl
nop
xchg
mov
je
sbb
lods
xchg
push
repnz
push
pushf
pop
add
cmpsl
xchg
insb
cmpsb
inc
lds
add
sub
xchg
cmp
repnz
stos
stos
and
jge
pop
mov
and
mov
rorb
movsb
add
jmp
dec
mov
inc
jb
jno
aaa
inc
and
js
mov
cld
add
xchg
ficoml
pop
mov
push
adc
stos
jmp
xchg
pop
pop
bound
jae
test
aas
dec
or
cltd
int3
and
push
cmp
cld
fneni(8087
out
cmpl
lahf
cmp
das
inc
sub
xor
divl
jns
imul
add
push
jb
and
sbb
inc
push
cmp
xchg
mov
mov
test
test
imul
dec
cmp
add
outsl
adc
and
push
in
jo
das
lret
out
pop
and
shll
xlat
lret
xor
dec
pop
add
pop
clc
sti
sbb
jl
test
lock
and
int
fldenv
movsl
dec
je
inc
and
pop
xor
lahf
pop
aas
xchg
mov
push
shr
and
roll
sub
dec
imul
mov
xchg
lret
pcmpeqb
popf
pop
rorl
jmp
fbstp
mov
inc
ds
sub
mov
cmp
xchg
aas
lahf
arpl
sti
movsb
sti
dec
mov
sbb
lcall
dec
dec
loopne
mov
lock
sbb
dec
xor
push
lock
xor
in
sub
pop
sbbb
fimull
pop
movsl
or
cmp
jbe
outsl
mulb
pop
adc
sub
sub
insl
sbb
repz
and
nop
adc
ljmpw
mov
mov
adc
cmpsb
mov
xchg
mov
jg
push
sbb
and
add
cmp
push
iret
rorb
pop
sti
mov
add
pop
pop
dec
fst
dec
lds
mov
pop
lcall
mov
mov
inc
lock
cmpsl
jmp
movsb
idivl
mulb
dec
sbb
scas
clc
sub
mov
cmp
outsl
fwait
out
mov
or
insb
xor
leave
lock
repnz
rclb
aaa
adc
xchg
push
cmp
xor
jbe
mov
and
mov
fs
add
out
mov
fisttps
scas
xor
cmpl
sub
mov
jne
push
stos
cmpsl
push
ds
repnz
sub
aad
fisubs
sbb
loope
loop
mov
hlt
jns
imul
arpl
xchg
cwtl
aaa
repnz
or
mov
movsb
sti
arpl
adcb
cmp
cld
adc
mov
pop
test
push
cltd
sbb
push
cmp
xlat
clc
or
incl
pop
pop
ret
push
ja
jmp
and
nop
dec
add
stos
lods
adc
jns
jb
pop
push
enter
sbb
roll
add
adc
push
mov
scas
stc
jecxz
dec
int3
popa
popf
bound
sbb
jle
and
lds
cmp
scas
test
addr16
fdivrl
popa
pop
scas
jbe
in
insb
pusha
mov
and
sarl
xor
popa
mov
in
js
pop
in
cmp
fcoml
cmp
pop
std
pop
jmp
jg
in
out
xchg
adc
ljmp
mov
sub
adc
test
sub
push
xchg
jae
push
iret
out
mov
loopne
aas
je
xchg
lret
in
jno
mov
push
xchg
js
sub
loope
or
adc
mov
adc
cmp
mov
jmp
jp
sub
les
jmp
xor
mov
popa
xchg
mov
shlb
out
std
and
jp
xchg
and
jge
sbb
mov
pop
cmp
cmp
sti
dec
inc
insb
sub
das
cmp
adc
scas
cmpsb
mov
into
in
les
jnp
and
mov
jne
mov
in
cmp
mov
jecxz
inc
pop
in
xchg
mov
and
or
xor
sbb
xor
int3
aas
cmp
jnp
inc
fcoms
xchg
js
jp
xchg
out
lret
cmp
mov
and
xlat
jno
xchg
add
js
jbe
rcrb
jo
int3
sub
pop
and
push
dec
jne
push
lcall
inc
and
loopne
sub
push
rorl
sbb
jae
fsubrp
cmp
cltd
adc
push
dec
flds
mov
jnp
adc
das
cld
inc
out
or
inc
dec
out
addr16
pusha
pop
and
sti
jg
xchg
add
push
jnp
cmp
jl
pusha
push
jmp
mov
fsts
mov
aad
push
nop
test
pop
push
leave
mov
adc
fsub
test
mov
mov
ds
stc
in
sub
pusha
sub
sbb
out
or
ret
pusha
call
xchg
cmp
scas
adc
movsl
js
xchg
push
mov
fstpl
imul
outsb
adc
shrl
sahf
les
ffreep
ljmp
mov
fstpl
shl
movsb
test
ljmp
hlt
imul
std
xchg
in
sbb
jae
jmp
push
jb
or
in
in
sbb
mov
icebp
bswap
orl
mov
sbbl
cmp
adc
and
adc
dec
stc
arpl
int3
sahf
xchg
mov
pop
mov
sbbl
test
popf
rcr
cmc
shlb
iret
mov
jo
loopne
shll
test
jno
mov
loopne
orb
and
push
cwtl
xor
and
sub
jb
sub
push
xor
sbb
icebp
adc
stos
pop
sbb
inc
xor
ja
notl
mov
sbb
add
sti
inc
in
jecxz
adc
cld
leave
scas
push
jae
aam
mov
aaa
test
orb
mov
mov
push
fstpt
xor
pushf
imul
addl
test
imul
mov
movsb
jle
sbb
sahf
popa
and
bound
inc
xlat
adc
xchg
mov
sub
cmpsb
sub
cwtl
xchg
lret
mov
inc
sbb
aaa
mov
xor
push
arpl
dec
enter
sbb
ret
lahf
loope
or
in
jnp
popa
hlt
jb
js
cwtl
leave
lds
je
sub
jo
pop
jmp
cmpsb
js
das
push
shlb
sbb
push
out
push
adc
xor
imul
and
shll
adc
jecxz
jmp
pop
lcall
mov
scas
push
rcrl
pop
mov
data16
outsb
cld
mov
sub
insb
dec
bound
lret
loop
insb
xchg
neg
sbb
xor
aaa
push
mov
in
jge
insl
lock
test
sub
pop
gs
mov
repnz
push
sarl
ret
repnz
jle
adc
test
popf
adc
out
stos
inc
mov
fisubrl
xorl
mulb
mov
repnz
xor
mov
sbb
mov
dec
jnp
mov
mov
lcall
inc
mov
lods
mov
lret
mov
adcb
xor
jge
xlat
iret
mov
aaa
cld
ret
stc
mov
inc
or
lods
push
jns
pusha
pop
lret
dec
mov
xchg
daa
dec
cmpsl
xchg
sub
adc
in
sbb
ror
or
fldl2t
sbb
mov
loope
enter
jp
fstpl
ja
mov
pop
sbb
dec
negl
in
das
fmulp
or
ljmp
lret
stos
sbb
or
pop
into
fadd
mov
addl
ljmp
outsl
fwait
cmp
push
mov
aaa
adc
pop
jnp
push
push
adc
adc
ret
out
lock
adc
inc
pop
std
enter
fimuls
daa
push
jnp
mov
pop
mov
scas
fnstenv
stc
inc
lock
cltd
mov
insl
adc
hlt
push
out
js
or
mov
jp
aam
outsl
inc
lcall
xor
sub
dec
rorl
outsb
mov
data16
mov
ljmp
adcl
and
push
jmp
push
dec
mov
dec
push
and
push
adc
pop
test
imul
movsl
or
inc
les
aad
lcall
js
jl
loope
fwait
inc
add
std
xchg
mov
mov
cmc
mov
push
outsb
inc
dec
mov
mov
lcall
sbb
push
aad
scas
les
sub
jns
aad
cmp
fbld
mov
xor
fcoml
pop
push
and
shll
in
fsubs
push
movsb
mov
lcall
les
pop
or
adc
into
mov
dec
cwtl
mov
pop
inc
pop
out
iret
xchg
mov
ficoml
sub
pop
daa
ljmp
sti
lock
adc
test
mov
test
sbb
cmp
mov
rcr
pop
fwait
aam
icebp
popf
push
jecxz
push
pop
jmp
aaa
mov
repnz
cmp
pop
std
add
or
fcmovnb
cmp
rolb
mov
ret
fs
mov
jle
jb
mov
cld
add
and
aad
into
push
sbb
ja
pop
mov
dec
scas
hlt
sbb
jnp
repz
dec
push
jmp
test
adcb
sar
out
repnz
mov
shll
sbb
push
push
mov
mov
incl
pop
mov
sbb
adc
dec
clc
jmp
pop
mov
mov
adc
addl
leave
pop
ret
fldenv
pop
aam
dec
xlat
cmp
push
pop
pop
addb
cmpsb
xor
nop
mov
movsb
inc
pushf
jo
mov
pop
cmp
sub
jl
add
mov
xor
fdivl
adc
out
outsb
pop
mov
sbb
inc
xlat
fcmovnu
loope
mov
mov
push
push
jp
arpl
enter
or
lock
adc
mov
adc
loop
cmp
jle
jle
xor
sbb
mov
leave
testl
cwtl
cmove
loope
mov
sbb
cli
mov
lahf
lock
xor
js
adc
ss
add
dec
pop
mov
scas
pusha
push
in
popf
imul
push
stc
jecxz
pusha
lods
gs
adc
sbb
arpl
out
in
xor
out
iret
fadds
mov
gs
adc
jecxz
int3
test
andb
js
pop
in
pop
add
lods
jp
orl
jl
cmp
sbb
dec
cmp
movsl
in
int3
push
repnz
test
lahf
add
push
dec
ret
jmp
mov
stc
pop
mov
rcrb
outsb
mov
or
loop
outsl
jecxz
jb
xor
dec
mov
fwait
sbbl
push
clc
cmpsb
shr
add
xchg
js
cwtl
inc
test
adc
pop
int
cmp
dec
mov
pop
push
jge
lahf
push
outsb
jmp
iret
lahf
sti
lahf
lock
push
je
jne
push
add
and
mov
out
mov
mov
xor
jne
jnp
xlat
int3
fmulp
sbb
mov
jne,pn
push
xchg
inc
nop
sbb
inc
lahf
sbb
imul
or
ljmp
inc
xor
push
mov
push
dec
lods
addr16
loopne
pop
jns
notb
les
mov
movsb
xchg
push
test
mov
cmpsb
push
xchg
inc
xchg
and
adc
add
hlt
ss
aam
les
mov
movsb
xchg
push
test
mov
cmpsb
push
xchg
inc
xchg
and
adc
add
hlt
ss
aam
les
mov
movsb
xchg
push
test
mov
cmpsb
push
xchg
inc
xorb
out
rolb
and
adc
push
mov
movsb
xchg
push
test
xchg
inc
icebp
inc
jle
cltd
jmp
sti
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
ds
shll
jno
or
push
in
mov
inc
rcll
popa
icebp
jno
add
xor
push
shll
jno
add
xor
roll
loope
icebp
jno
outsb
nop
adc
push
push
shll
jno
add
xor
xchg
ds
add
push
fdivs
xor
xchg
sbb
mov
cli
jmp
mov
sbb
dec
scas
rcrb
adc
loope
repz
pop
add
or
popa
add
mov
or
cmp
push
rol
test
jg
aam
in
je
andb
adc
loope
and
jbe
mov
sub
dec
xor
push
roll
xchg
out
pop
leave
cmp
aam
cmp
mov
je
movsl
xor
flds
cmpsb
jp
rcll
adc
mov
jge
test
lret
sub
lcall
inc
xchg
cmp
sahf
fwait
imul
mov
add
and
jno
add
xor
rol
xchg
loope
icebp
cmp
and
shll
mov
jle
dec
enter
pop
mov
xchg
adc
shlb
pusha
rcll
and
aam
out
pop
mov
mov
mov
pushf
add
push
jbe
hlt
pop
enter
es
push
xchg
daa
mov
xchg
inc
in
xchg
and
rcll
popa
icebp
jno
add
xor
push
shll
jno
add
xor
loope
icebp
jno
add
xor
xor
cld
inc
push
fst
sbb
mov
ljmp
cmp
pop
pushf
fldt
mov
sbb
xchg
sub
addb
adc
and
xlat
cwtl
push
arpl
xor
lds
jmp
jnp
sti
notb
aaa
mov
in
xchg
jb
out
cmp
mov
leave
fcmovne
fdivrp
int3
sub
inc
aam
ljmp
xchg
or
sahf
in
jb
iret
pop
cmp
xchg
or
push
clc
sub
aas
sbb
or
push
push
repnz
mov
sbb
pop
fwait
push
push
sti
out
pop
test
push
adc
rclb
fidivrl
shr
xchg
jg
es
lahf
test
mov
jmp
outsb
sbb
inc
adc
inc
out
mov
sub
mov
cmp
adc
cmp
je
clc
push
cwtl
mov
mov
std
xor
dec
cwtl
cltd
movsl
xor
mov
inc
popf
cmp
and
pop
and
aad
pop
jae
sti
push
lods
and
mov
std
movsb
faddl
popf
push
sbbb
hlt
adc
jno
mov
cmp
and
mov
sub
adc
sbb
mov
push
xchg
push
fndisi(8087
leave
test
das
sti
jmp
inc
add
roll
cs
fists
fcomps
mov
push
sbb
pop
push
push
negb
in
es
ja
dec
in
jns
xchg
sub
and
mov
dec
mov
jl
sub
adc
outsl
mov
add
add
adc
mov
fiadds
mov
popa
jne
cmpsl
cld
xor
xchg
loop
hlt
xor
ja
cmp
jl
adc
and
jl
sbb
popf
gs
in
push
fsub
mov
lcall
mov
and
cmp
call
sub
cmp
nop
sbb
mov
enter
and
push
hlt
leave
pop
push
inc
icebp
sub
arpl
mov
or
dec
lods
mov
push
cmp
adc
leave
hlt
mov
shr
ss
fldt
sahf
fbstp
pop
push
and
fldenv
cs
push
adc
sbb
adcb
je
mov
xchg
mov
push
icebp
jno
xor
shll
xchg
and
sub
push
pop
fs
pop
xchg
xlat
cmc
xorb
push
mov
pop
mov
movsb
jno
pop
test
test
mov
fldl
mov
fidivrl
cmp
cmp
jl
dec
jmp
and
loop
call
icebp
push
fcoml
notb
les
xchg
and
sbb
or
push
xor
pop
cmpsb
push
fld
insl
xchg
jno
push
iret
es
inc
push
and
es
mov
mov
push
pop
cmc
test
dec
mov
out
ljmp
jbe
loope
dec
jb
das
jmp
stc
mov
gs
lods
and
dec
mov
bnd
push
and
in
aaa
jecxz
fs
inc
imul
fs
dec
roll
es
push
das
hlt
fwait
leave
leave
cmp
mov
test
jmp
mov
xchg
sub
rcrl
out
movsl
inc
lret
out
dec
ret
ret
icebp
psubd
jg
pop
jmp
xchg
push
pop
popf
push
fcoms
inc
dec
xchg
pop
call
inc
pushf
popf
mov
dec
clc
sub
in
loopne
aam
les
jmp
add
enter
mov
cmp
stos
and
pop
xchg
cmp
sub
aaa
push
in
mov
add
mov
cmpsb
mov
nop
addr16
mov
jo
inc
dec
inc
lcall
cwtl
adc
adc
test
ljmp
pop
mov
sbb
mov
push
push
mov
push
mov
call
or
gs
sti
push
or
jne
sahf
ret
xchg
loop
sub
test
lock
loope
cld
out
stc
lock
pop
sbb
lea
fdivrs
js
fstpl
out
orl
mov
mov
shr
outsb
inc
lods
rcr
in
mov
gs
mov
jne
out
pushf
pop
pop
shlb
mov
sti
ret
and
test
rclb
pushf
jbe
jmp
pusha
sub
mov
shll
push
inc
pop
jbe
pop
mov
in
scas
mov
mov
cmp
xor
mov
jecxz,pn
push
es
ficomps
xchg
ds
sub
adc
jmp
gs
mov
push
add
in
test
jb
ret
dec
or
ja
xchg
gs
enterw
inc
xor
jno
test
shll
dec
repnz
cltd
mov
mov
mov
sahf
scas
lock
icebp
mov
jg
add
xchg
push
nop
cli
mov
adc
pop
cmp
jl
pop
push
sbb
outsl
inc
out
pop
xor
and
in
push
sub
jecxz
push
int3
popa
mov
sbb
xchg
xchg
lds
add
cltd
xor
xchg
xchg
jnp
aad
fcomip
pop
jb
push
ret
out
mov
mov
inc
push
xlat
and
bound
pop
test
mov
les
fdivp
push
sahf
ljmp
dec
or
mov
ret
test
sbb
and
daa
hlt
jbe
data16
ret
mov
xor
jbe
ljmp
in
pop
ljmp
sub
mov
in
mov
dec
addr16
jecxz
push
or
mov
repz
xchg
sbb
lock
out
fwait
push
inc
arpl
mov
sbb
jb
dec
cmpsb
je
mov
jne
movq
and
stc
out
aad
sbb
dec
movsb
jmp
int
sahf
and
lcall
data16
jl
fdivrl
xchg
push
leave
dec
out
sbb
dec
jae
rclb
insl
stc
fstpt
xchg
adcb
insl
dec
add
cltd
cld
dec
xchg
je
fisttps
repnz
in
sahf
sbb
loop
mov
mov
jo
mov
mov
push
sub
and
adc
movsb
std
sbb
inc
add
dec
insl
mov
lods
ret
fs
scas
movsb
aas
pop
in
add
and
adc
add
nopl
xchg
adc
pop
cmp
jp
adc
mov
imul
pop
ret
sub
loopne
into
loopne
cwtl
pop
fdivl
ud1
inc
pop
mulb
adc
inc
jp
js
fistl
popl
jmp
push
pop
aad
out
jge
cmp
add
xchg
call
lods
inc
push
push
rol
inc
insb
sbb
imul
mov
ret
xorb
arpl
push
in
ficoms
lcall
cwtl
mov
aad
mov
mov
imul
mov
stos
jne
das
mulb
inc
in
add
data16
sub
mov
test
aad
div
cld
add
bound
or
iret
and
inc
jbe
inc
jg
mov
mov
cli
in
jp
mov
pushf
xchg
cmp
sbb
sti
adc
mov
shlb
sub
fisubrs
out
jne
add
popf
daa
adc
jmp
jmp
imul
inc
mov
adc
inc
ljmp
mov
dec
cmp
mov
push
test
pop
or
ficomps
test
cld
cmp
or
mov
jbe
push
xchg
data16
popa
fwait
popa
sub
in
sbb
sbbl
push
cmpsb
in
pushf
jmp
xchg
add
adc
das
dec
test
loopne
ja
sub
pop
pop
jg
sti
aas
adc
xchg
sbb
adc
jo
push
mov
mov
sbb
inc
or
xchg
test
fisttps
hlt
ss
cli
loop
out
dec
inc
aaa
xchg
jl
pushf
loop
and
push
jae
aas
sbb
adc
cmp
lret
xor
pop
repz
push
fiaddl
inc
mov
pop
push
fprem1
xor
dec
mov
fcoms
and
jp
lea
notl
pushf
enter
add
jge
cmp
insl
or
std
fcoms
cmpsb
aaa
push
movsl
jle
add
sub
loopne
xchg
ss
sub
sub
fldcw
ret
push
js
decl
xor
rcrb
cmp
es
pop
add
imul
jmp
or
inc
movsl
imul
cli
mov
orl
orb
int
push
and
lods
mov
into
fincstp
mov
mov
dec
adc
fildl
adc
inc
sub
xchg
sub
jno
js
lret
sbb
das
and
mov
cmpsb
pcmpeqb
aas
out
push
movsl
cltd
and
or
shll
sbb
jns
jp
outsl
or
loope
test
sbb
pushf
and
mov
and
cmpsl
loope
jae
sub
loop
pop
in
sbb
add
sbb
or
pop
pushf
test
je
jl
rdtsc
inc
mov
push
pusha
mov
mov
addr16
inc
lahf
sbb
fisubl
mov
sbb
xor
add
aam
idiv
outsl
and
test
jno
nop
mov
lds
dec
cmpb
xor
dec
mov
stc
mov
mov
fs
cld
adc
sub
enter
jmp
xchg
inc
mov
cmp
push
jle
daa
or
adc
imul
jbe
or
int
xchg
fildl
adc
inc
inc
inc
int
ret
aad
lcall
fcoml
ss
lea
mov
out
pop
in
xchg
jg
sbb
jno
inc
inc
cli
test
mov
mov
addr16
mov
cmp
inc
in
adc
int3
jmp
cmpsb
out
icebp
sbb
cmpsl
arpl
cmp
lea
dec
push
mov
jbe
add
sti
inc
icebp
sbb
in
inc
imul
and
enter
lea
mov
jb
pushf
mov
inc
iret
xchg
push
mov
nop
in
fcomi
gs
sbb
dec
or
jns
push
shll
test
cltd
adc
test
or
xchg
andb
and
lret
pop
pusha
std
pop
xchg
push
mov
test
push
sbb
mov
iret
xor
insl
pushf
sahf
dec
mov
pop
jge
jns
cmp
mov
bound
xor
clc
movsl
shl
icebp
loopne
pop
cmpsb
mov
mov
pusha
lods
lods
in
test
xchg
jg
sbb
jp
outsl
lea
pop
push
xchg
rcrl
push
test
pushf
mov
cmpl
mov
nop
pop
sahf
sbb
sbb
fsubr
or
lods
iret
das
dec
test
in
std
sbbb
mov
test
push
test
ffreep
jb
iret
into
inc
push
out
imul
sbb
mov
xchg
dec
outsl
lds
out
push
ret
cmc
mov
je
pop
and
cs
jbe
push
ret
addb
fwait
sub
jnp
dec
push
sub
cmpl
in
in
push
decb
aas
repnz
ret
mov
cld
stos
sub
jne
call
js
inc
ret
xchg
push
or
mov
sbb
and
push
pusha
lds
jb
loopne
mov
add
sub
shlb
aad
pushf
sub
dec
cmp
in
adc
lret
shll
lea
int3
lret
adc
hlt
adc
or
inc
mov
push
pop
xchg
out
aaa
lahf
ljmp
jmp
cli
push
stos
dec
ret
pop
jmp
add
addr16
bound
flds
iret
xchg
adc
leave
mov
mov
inc
in
pop
mov
cmpsb
inc
jl
mov
xchg
sbb
sbb
scas
pop
aad
inc
fstpt
or
jnp
jl
sub
fadds
xchg
and
stos
adc
sbb
mov
adc
jne
loop
push
int3
aaa
sub
fldl
jb
jno
mov
test
and
lret
pop
outsl
inc
dec
outsb
jge
inc
xor
rcl
mov
mov
cvtpi2ps
adc
addl
outsb
jae
insl
pop
js
call
shll
push
mov
dec
fdivrl
jecxz
and
cltd
data16
cmpl
repz
scas
icebp
leave
mov
sbb
cmp
fisubrl
adc
sbb
int3
subb
adc
les
pmaddwd
push
add
jns
sub
mov
adc
xchg
xchg
aas
leave
js
pop
xlat
mov
pop
cltd
in
sub
mov
pop
ds
push
sub
imul
in
and
data16
mov
frstor
ffreep
movsl
and
cmp
cmpsl
sbbl
ficompl
lcall
mov
push
pop
mov
cltd
xchg
insl
jle
inc
jo
fsubrl
icebp
inc
enter
es
adc
push
push
cmp
or
adc
pop
sbb
xor
add
jmp
xchg
fisubrl
rcrb
or
mov
pop
out
cmpsl
stos
pop
mov
or
out
inc
ret
push
in
mov
and
sub
push
dec
mov
out
push
lds
inc
and
lcall
or
mov
jmp
xchg
movsb
push
aaa
mov
dec
aad
into
and
cmp
mov
lret
add
ja
std
int
int3
dec
test
inc
nop
je
int3
lods
aad
xchg
sub
xchg
out
je
pusha
pop
or
sbb
xor
inc
jno
cld
stos
je
test
lods
pop
add
fcoms
inc
jne
push
xchg
or
loope
in
and
addr16
mov
push
push
sbb
and
jl
jp
frstor
mov
ret
mov
add
mov
mov
mov
push
mov
mov
lahf
jo
stc
imull
rclb
lret
push
mov
sub
roll
ss
test
pushf
fstpl
or
sub
pop
adc
adc
jno
sbb
inc
mov
xor
imul
out
add
pusha
out
arpl
jbe
inc
add
roll
psllq
dec
inc
mov
in
sub
inc
cli
ret
cmpsl
ficoml
aad
leave
sbb
inc
ss
popf
and
mov
enter
imul
repnz
into
mov
lods
nop
shll
imul
cmpsb
pop
jg
mov
jne
inc
pop
inc
mov
sbb
inc
inc
mov
cmpsb
addr16
push
shl
insb
rcr
lcall
and
lea
aaa
aaa
cmp
sub
sbb
adc
les
cwtl
mov
adc
repz
in
jg
pop
sbb
jo
in
sub
aad
pushf
ja
shl
in
out
cmp
and
subb
jg
sub
roll
add
lahf
arpl
pop
xchg
xchg
push
mov
pop
aam
or
pop
aam
add
scas
jecxz
and
scas
in
loopne
adc
pop
xchg
jno
xchg
ret
adc
imul
insl
je
pop
push
xchg
test
xor
ret
fdivs
test
mov
xor
aas
xchg
mov
inc
adc
sbb
pop
xchg
data16
sbb
fs
cmc
pop
aaa
inc
xchg
sub
adc
add
push
lods
mov
shlb
and
push
pop
adc
sar
push
sarl
sahf
mov
aaa
das
mov
mov
add
sbb
insb
or
insl
int
jmp
je
nop
fwait
test
push
cmp
xchg
dec
in
aam
cmc
adc
shlb
pop
insb
cld
stos
sti
stc
push
es
loopne
roll
jl
mov
pop
pop
pushf
sbbb
mov
out
outsb
out
mov
jb
popf
and
rolb
mov
mov
out
mov
out
dec
in
mov
cmp
inc
dec
dec
loopne
inc
popf
or
gs
out
imul
and
aam
repz
pop
test
bound
sbb
cmc
lahf
sub
push
push
push
pop
stos
fistpl
pop
push
fcoml
imul
inc
stc
fcomip
add
mov
shll
push
lds
mov
stos
mov
repnz
lods
addr16
fisubl
in
dec
mov
test
jp
ror
pop
popl
cld
jg
xor
subl
clc
adc
and
add
lahf
fistps
dec
decb
es
xchg
xor
jb
loop
push
push
cmp
repnz
cli
hlt
jecxz
adc
adc
push
out
jbe
push
pop
movsl
mov
mov
rol
test
and
mov
std
aam
pop
cltd
push
addb
insl
bound
sbb
mov
pop
inc
push
test
out
cmp
dec
mov
mov
cmpsb
cmp
push
mov
pushf
jae
and
fsubp
stos
jne
adc
jl
loopne
cs
mov
cmpsb
out
icebp
or
sub
adc
inc
mov
mov
push
ljmp
or
scas
in
xchg
xchg
mov
outsb
cli
inc
sti
rorl
cs
mov
shrd
jne
test
push
inc
lahf
cmpsl
ret
pop
sub
xor
mov
inc
xor
xchg
incb
xchg
inc
sahf
push
out
add
and
xor
or
fwait
mov
add
mov
sbb
filds
jo
pop
cli
xchg
mov
and
dec
pop
inc
jle
loop
addr16
cmp
xorb
push
sbb
ja
mov
vmovaps
jne
jle
cld
xchg
add
mov
add
enter
xchg
mov
mov
loopne
in
test
rcl
xchg
pop
cmp
dec
out
ret
out
mov
fs
imul
repz
mov
cld
les
sbb
push
in
int
js
insl
sub
mov
xchg
pop
sti
jge
pop
scas
fldl
jno
cltd
and
movsl
pop
sti
idivl
cmp
jb
popf
mov
inc
mov
pop
imulb
std
fdivrs
faddl
pop
jne
jp
xlat
mov
in
ss
into
cmp
scas
cmp
sti
push
cmp
push
mov
in
std
xchg
sbb
in
rcrb
dec
jae
xchg
add
test
cli
out
shl
fnstenv
cmp
cmp
adc
scas
add
fmull
add
ret
ljmp
inc
and
xchg
loopne
int3
pop
xor
xor
hlt
or
xlat
pop
push
mov
sbb
xchg
lret
repz
je
rcl
dec
iret
cmc
adc
fildl
lahf
push
cmpsb
cmpsb
pop
rclb
mov
mov
pop
xor
pop
cmp
inc
xchg
inc
scas
cmp
pop
loope
pop
pop
jnp
mov
gs
sub
cwtl
cmp
adc
pop
cltd
cmpsb
cmpsb
xchg
filds
add
ret
mov
sahf
cmpl
rep
or
arpl
fdivrs
xor
sub
movsl
jae
inc
pop
inc
cli
pop
in
les
sub
iret
mov
popf
ret
push
and
add
mov
cmp
xor
xchg
cmpsb
mov
mov
mov
dec
hlt
data16
mov
xor
push
into
jnp
xchg
mov
into
push
cmp
xchg
pop
mov
stc
addl
inc
sbb
fadds
aas
outsl
pop
ret
cmp
leave
push
lret
dec
xor
cwtl
data16
jne
pusha
push
mov
jo
xor
dec
ror
add
xlat
cmpsb
dec
shrb
mov
js
mov
dec
or
in
in
lahf
push
cmpsl
ja
mov
jmp
sub
popf
pusha
cmp
xor
cmc
cmp
sti
mov
data16
sub
js
push
imul
decl
test
xlat
xor
mov
inc
push
fisttpl
mov
ret
ljmp
dec
rcr
mov
js
or
jecxz
or
jp
jmp
inc
jle
mov
dec
ds
pop
jmp
cltd
mov
lock
adc
stc
cmpb
adc
sub
fwait
in
aad
mov
xor
cmc
fucomip
jbe
pop
mov
mov
cmc
push
adc
sbb
aad
pop
jne
in
xor
push
xor
aad
and
div
stos
push
xor
ja
loop
mov
xlat
push
mov
pop
inc
xchg
and
lcall
lcall
stos
pop
xchg
clc
pop
pushf
mov
cs
sub
mov
aad
rcrl
jno
add
xor
loope
icebp
jno
add
xor
push
shll
jno
add
xor
loope
icebp
jno
add
xor
push
cltd
popa
cltd
jno
add
xor
loope
lock
add
xor
push
shll
jno
add
mov
ds
icebp
push
testb
into
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
push
add
ja
dec
add
pop
aaa
mov
out
mul
xchg
xchg
shlb
push
add
ja
pop
jo
inc
daa
push
dec
mov
out
mull
jmp
xchg
shlb
push
add
ja
pop
jo
inc
daa
push
aaa
mov
xchg
nop
xchg
loopne
lahf
shlb
push
push
add
jl
test
lods
test
shll
or
push
movsb
ret
xchg
sub
call
pop
cmp
repnz
pop
jo
mov
mov
sub
outsl
xchg
pop
xchg
pop
xchg
cmpsl
pop
out
inc
cmp
or
add
bound
mov
lea
and
xor
dec
adc
inc
movsb
gs
lds
leave
sub
arpl
pop
pop
xchg
mov
xor
pop
loopne
out
cli
cmp
adc
fwait
add
aam
xchg
nop
cmpsl
rorl
ret
ret
ja
aaa
mov
das
push
jb
inc
test
mov
les
inc
xor
adc
pop
jo
inc
daa
push
aaa
mov
out
mul
xchg
xchg
shlb
push
imul
jle
popa
push
arpl
sub
loope
lock
and
add
imul
lds
xchg
loope
sahf
xchg
lods
icebp
movsl
fadds
xor
outsl
adc
jo
inc
daa
push
aaa
mov
out
mul
xchg
xchg
shlb
push
add
ja
pop
jo
inc
daa
push
aaa
mov
out
mul
xchg
xchg
shlb
aas
popf
mov
mov
jae
clc
stos
test
jne
orl
adcl
imul
dec
stc
jbe
ljmp
jae
push
jo
add
in
mov
xlat
repz
xchg
es
and
dec
sub
movsl
jecxz
repz
pushf
mov
ja
adc
insb
cmp
jle
aam
adc
push
xor
mov
pop
mov
cmp
xchg
out
inc
push
xchg
pop
cmpsl
call
push
push
mov
out
mov
insl
jecxz
js
adc
pop
into
je
sbb
test
iret
out
lea
xor
add
int3
je
add
mov
jo
sahf
xor
flds
jmp
mov
jbe
scas
push
push
inc
dec
pop
ret
lret
test
scas
xchg
push
imul
xorb
hlt
cmpsb
xchg
lds
adc
sub
fs
cmp
and
xlat
es
push
addl
jmp
std
sub
cmc
add
inc
sbb
add
ja
or
arpl
mov
xchg
dec
nop
mov
popa
push
inc
sbb
add
inc
orb
cmpsb
mov
mov
or
pop
jns
pop
dec
mov
lret
pop
pop
bound
sub
mov
out
cs
das
sub
push
insl
in
lcall
pop
push
insb
sub
jno
push
pop
das
add
add
test
jae
inc
xchg
adc
popa
movsl
dec
add
sbb
mov
mov
fwait
sub
jns
sti
je
loope
xor
aaa
pop
cwtl
ret
int
cmp
mov
dec
mov
mov
mov
test
mov
rdpmc
cmp
push
cmp
jno
and
sub
dec
jb
mov
lods
ljmp
sub
test
mov
ds
es
push
cmp
inc
arpl
call
icebp
fcompl
mull
xchg
xor
xorl
insl
or
mov
and
cmp
or
ret
pop
rcrb
mov
sub
int3
mov
jecxz
mov
sbb
sti
ret
int
jbe
loopne
repz
insl
arpl
hlt
test
call
cli
arpl
or
sub
sti
adc
lret
mov
push
mov
cmp
and
push
mov
je
repz
test
in
inc
cmpsb
pop
rolb
mov
xchg
xor
sti
sbb
cltd
lret
es
cmpsb
gs
popa
sub
mov
inc
outsl
xor
fwait
adc
testb
pop
pop
cmp
mov
jecxz
or
dec
jno
in
mov
push
push
fidivl
inc
or
xor
fidivrl
fwait
sbb
jecxz
stos
xor
mov
scas
imul
aas
lods
fimuls
push
fsubrl
je
sub
in
aas
lods
inc
leave
ss
scas
dec
stc
jp
jmp
pusha
negb
pop
test
adc
adc
jp
pop
adc
mov
sub
and
and
jbe
pop
jns
sub
pop
ljmp
adc
sub
sbb
jo
jno
dec
out
sub
sub
xor
push
mov
cltd
and
test
pop
jge
scas
outsl
fldt
mov
cmp
arpl
cmp
inc
and
push
into
daa
adc
xor
fisttps
testb
les
pop
mov
mov
js
arpl
mov
pop
ret
fwait
add
scas
and
cmp
pop
and
adc
mov
call
out
inc
pusha
inc
xchg
sbb
mov
and
fwait
aam
ljmp
ret
mov
sub
mov
out
es
mov
scas
jo
jns
jb
lock
gs
jae
test
iret
or
dec
bound
mov
jne
xor
sbb
in
fdivs
jnp
xorb
fs
push
jmp
cld
add
les
push
pop
test
cmp
roll
lds
enter
mov
ds
aas
rcll
sub
sbb
push
pop
sar
arpl
push
mov
sbb
pop
adc
arpl
inc
cmp
dec
jo
cli
jl
pop
dec
push
call
sub
scas
stos
and
fistps
mov
in
mov
icebp
ror
ss
int
mov
pop
xor
sbb
sbb
out
push
out
pop
ret
pusha
pop
fcoml
pop
fstpl
dec
ret
sbb
pop
mov
pop
pop
mov
or
add
insb
inc
adc
out
leave
shl
xchg
int
and
fnstcw
or
or
xchg
sbb
fidivl
dec
xchg
inc
arpl
cmp
xor
outsl
addl
sbb
lahf
pop
mov
add
cmpsl
stos
and
dec
inc
mov
pop
pop
xor
clc
out
loop
xchg
imul
mov
pop
cmp
lret
in
test
xor
mov
inc
sub
jp
in
outsb
mov
addr16
hlt
and
aas
lds
lods
pushf
sub
mov
jae
push
aaa
jno
add
pop
jge
addr16
and
add
or
je
push
in
out
jg
aas
cmpsb
ja
mov
call
shrl
ret
cmp
push
sbbl
xchg
push
adc
adc
push
inc
jb
mov
loope
adc
call
fidivl
push
subl
cs
movsb
or
dec
scas
loopne
pushf
lcall
loopne
repnz
lahf
and
ret
repz
add
movsl
daa
cmp
shlb
fwait
and
into
scas
out
std
mov
mov
daa
lret
mov
sub
call
ret
or
idivl
cmp
xlat
es
mov
cmp
orl
mov
jge
cltd
mov
sbb
stc
push
inc
jns
mov
dec
pushf
insb
push
sub
stos
and
daa
outsb
sahf
out
pop
and
inc
xchg
xorb
insl
push
mov
hlt
adc
sbb
mov
push
inc
pop
jnp
ja
ljmp
pop
test
pop
cmp
sub
fmuls
out
loop
push
jns
sbb
pop
test
aam
xchg
cmp
mov
jb
lea
stc
mov
pop
mov
insb
out
sarl
loop
loop
sbb
test
add
cmp
push
inc
mov
dec
ljmp
ret
adc
and
bound
popf
mov
neg
test
rclb
sbb
je
xchg
movsb
cmp
cmpsb
sbb
mov
sbb
cmp
in
je
jnp
scas
or
fadds
sbb
jno
jg
jmp
adc
scas
in
cvtdq2ps
in
mov
pusha
into
stc
jno
aam
mov
insb
aas
popf
fdivs
pop
cmp
daa
or
dec
adc
movsb
call
xor
sbb
push
movsb
adc
jno
stc
push
jecxz
jae
sub
mov
enter
in
je
xchg
in
fistpl
rorb
int3
sbb
into
adc
push
sub
sub
fbstp
mov
in
in
or
inc
or
out
xlat
inc
push
fsubrs
cmp
rcrl
pop
inc
call
lret
sub
lods
mov
xlat
push
dec
btr
push
imull
cmp
sub
xchg
dec
adc
pop
jno
cmc
lods
shll
popf
cwtl
bound
lea
mov
fs
stos
sbb
add
lds
mov
mov
nop
mov
scas
outsb
into
jl
test
mov
xchg
push
lods
hlt
inc
and
fs
adc
xchg
push
xchg
and
xchg
and
out
mov
jbe
insl
mov
cmpsl
test
shll
movsl
lahf
lcall
pop
and
and
adc
fisubl
clc
movsl
push
rclb
mov
test
sahf
sub
jne
xor
jo
icebp
cltd
pop
jp
mov
xchg
outsb
out
dec
icebp
addb
ret
mov
dec
mov
add
pop
cmp
adc
ja
adc
aam
lock
sti
aaa
dec
jle
pop
popf
lcall
pop
inc
push
mov
in
lock
mov
jbe
aam
inc
add
loope
cmp
popa
mov
decb
cwtl
hlt
fstpt
popf
sub
pusha
sub
cli
xchg
fimull
mov
adc
clc
outsb
mov
push
cmpsl
fdivl
fnsave
xor
cmp
push
repnz
mov
rolb
fdivl
xchg
sub
aaa
mov
aas
push
jne
push
setb
jns
push
push
pop
inc
pushf
sub
nop
lods
aad
out
imul
xchg
sub
lret
out
ret
sti
in
scas
mov
sub
add
out
ret
aam
imul
lods
pushl
cmp
xchg
xchg
xchg
dec
and
jnp
lea
pop
dec
mov
cld
rep
push
insb
dec
movsl
add
in
lods
inc
pusha
mov
jl
rol
mov
out
mov
mov
mov
inc
mov
add
mov
enter
aas
dec
add
inc
lret
insb
cmc
mov
sbb
and
sub
addb
mov
or
dec
cmp
xchg
fidivrs
adc
xor
pushl
leave
add
stos
sbb
xchg
push
push
mov
push
mov
psllw
xor
jg
xchg
xor
mov
sub
fisubs
cmp
scas
mov
call
mov
arpl
dec
xchg
mov
inc
and
xlat
or
sbb
mov
inc
xor
fists
pop
add
jg
sub
inc
jns
lret
std
mov
enter
cli
mov
arpl
mov
mov
adc
mov
lea
sub
pop
bound
repnz
xchg
gs
mov
or
or
add
adc
mov
jmp
das
rorl
push
inc
repz
repz
les
andb
popa
jo
aaa
xchg
mov
outsl
sahf
out
imul
mov
mov
cmc
sub
imul
lahf
pop
sub
negb
in
or
fdivr
adc
push
subl
lcall
jbe
cmp
insb
out
movsb
gs
aad
mov
mov
dec
mov
aas
mov
pop
mov
rclb
iret
fnstenv
or
mov
rorb
sbb
icebp
and
clc
fldl
aam
fs
inc
push
push
cmc
pop
roll
fistpll
mov
pop
movl
cmpsl
cs
push
insb
dec
popw
or
ret
aam
xchg
jg
jmp
mov
aaa
adc
push
mov
jne
lods
push
inc
xor
icebp
call
cmp
pusha
lret
in
cmpsl
mov
xlat
fisttpl
jns
mov
jnp
cld
in
adc
adc
das
sbb
or
das
lock
push
gs
xchg
or
xchg
pop
je
test
pop
push
mov
std
gs
movsb
push
ficoms
xchg
hlt
out
mov
leave
loopne
xchg
ja
pushf
fsubrs
push
lcall
jno
cmp
cld
sahf
mov
and
shrb
push
jl
mov
addr16
xchg
mov
mulb
xchg
xchg
popf
xchg
xor
adc
clc
cwtl
mov
push
stc
loop
jae
or
rolb
imul
je
fwait
adc
insl
xlat
test
fcoml
sub
mov
fs
mov
sbb
jmp
pop
rclb
lahf
push
dec
pop
or
out
movsb
iret
or
pop
push
cmp
imul
shl
out
lcall
mov
sbb
push
outsl
push
std
and
mov
fwait
mov
xor
popf
outsb
sub
cmp
inc
sub
and
jnp
push
addr16
cmpsl
mov
cmp
gs
and
je
push
es
stos
mov
and
sbb
mov
xchg
add
ret
movsb
jmp
xlat
in
add
pop
inc
and
movsl
into
mov
dec
or
or
and
push
imul
mov
adc
test
and
fsubl
pop
aam
int
xor
lcall
dec
lahf
int3
fcmove
repz
lret
inc
ror
jne
and
lock
ret
fisubl
cmp
jno
imul
out
cwtl
dec
xchg
push
fisubs
fs
sub
jp
clc
in
xchg
pop
xor
insl
adc
pop
dec
dec
cmp
sub
cltd
push
fwait
sbb
fsubrs
ss
or
mov
mov
out
cmp
psadbw
ret
dec
xchg
xlat
xor
pop
fdivrl
movsb
rclb
movsl
les
sbb
imul
leave
mov
dec
ret
data16
xlat
xor
pop
cmp
or
fsubrl
sarl
jg
push
mov
push
sbb
in
and
cmp
imulb
pop
sub
fwait
in
subb
faddl
dec
test
xchg
push
push
mov
mov
jp
mov
repz
cmp
jb
enter
les
pop
je
sbb
js
aam
or
push
mov
mov
addr16
push
test
push
filds
add
mov
mov
mov
cld
sbb
outsl
pop
and
push
xor
clc
xchg
cmp
in
sbb
and
in
mov
xchg
xchg
mov
pop
insl
lcall
fidivrl
lods
fcmovnb
jp
movsl
jne
inc
es
cmp
js
jl
push
add
test
icebp
adc
imul
cltd
mov
lea
pushf
dec
push
test
push
cmp
out
ss
sbb
jl
shll
stc
sbb
mov
out
sahf
sbb
arpl
push
or
pop
arpl
push
add
jge
cmpsl
out
das
inc
add
fisubl
ret
mov
jb
xor
pop
data16
jge
in
or
xchg
mov
push
mov
fnstsw
test
add
lcall
xchg
iret
dec
add
mov
cs
fsubr
sbb
std
scas
imul
test
sti
or
out
int
ret
mov
jo
mov
subb
inc
dec
mov
cmp
push
xor
lods
add
and
hlt
ds
in
aaa
xchg
ret
daa
shlb
push
push
sbb
cmp
shrl
add
std
push
dec
int3
mov
jecxz
mov
lret
pop
dec
aad
sbb
mov
ffreep
ror
into
sub
lods
loop
mov
xor
cmpsl
or
xchg
stos
and
in
mov
lret
and
sar
lahf
mov
xchg
cmp
jmp
xchg
je
push
mov
testl
sbb
stos
xchg
lcall
mov
fldl
adc
pop
xchg
cmp
aad
pop
fcoml
mov
call
adcb
pop
daa
sub
sbbb
add
sub
cmp
cmp
cli
pop
cmp
inc
fnsetpm(287
sbb
jmp
fmuls
xchg
imull
pop
cld
xchg
or
jnp
mov
rol
add
jbe
add
subl
loope
test
sahf
sub
cld
dec
pop
lret
push
ds
out
cmc
xor
int3
push
xchg
fstpl
cltd
push
loop
clc
mov
adc
and
mov
dec
jg
cli
ret
test
lahf
push
dec
popf
dec
mov
sbb
insb
xchg
push
mov
cmc
popa
inc
mov
aas
stc
mull
mov
add
ret
nop
cmpsl
mov
jg
ss
outsb
out
aam
lods
mov
cwtl
popf
mov
mov
leave
out
jnp
inc
add
loopne
or
add
popf
push
daa
mov
out
cmp
test
test
shll
aas
mov
arpl
xchg
sub
fcomps
les
addl
dec
xor
pusha
push
repz
xor
test
and
xchg
xor
sub
fwait
sahf
andb
or
bnd
fsubl
cmpb
leave
test
xchg
aad
dec
leave
hlt
or
mov
xor
pusha
aas
sub
mov
fisttps
mov
mov
in
call
les
xlat
adc
fisubs
dec
clc
loop
repz
jle
lcall
sub
shlb
std
nop
xchg
sarl
ret
fwait
pop
mov
mov
push
lcall
je
insb
addl
mov
lahf
jmp
enter
and
addl
arpl
and
jmp
popl
xacquire
inc
fsubrs
mov
cwtl
sbb
or
inc
and
pop
adc
shll
or
and
and
cmp
pop
cmp
mov
or
popf
adc
pop
lds
sahf
cmpsb
hlt
xchg
dec
jl
aam
out
in
jbe
sub
pop
jp
scas
fbstp
push
xchg
clc
inc
adc
push
sbbl
fldenv
testb
mov
mov
lds
cltd
fstpt
xor
xor
fcomps
cmpsb
xchg
rol
xchg
sbb
xchg
sub
mov
jg
xor
pop
and
jg
movsl
paddb
push
outsl
outsl
push
mov
pop
dec
lods
xor
and
stc
inc
or
dec
test
xor
xchg
or
add
pop
push
popa
adc
add
mov
xchg
pop
in
xchg
ja
mov
cmc
movsb
cmp
lock
inc
jle
mov
fnstsw
pushf
xchg
test
not
pop
inc
outsl
fs
mov
test
stc
inc
dec
xor
imul
bound
sbb
push
xchg
lret
inc
xchg
push
cmpsb
dec
loop
and
testb
fidivl
jle
adc
out
push
push
movsb
mov
sbb
jge
mov
cmp
int
pop
dec
dec
sub
mov
inc
lret
les
adc
push
pop
into
pop
push
popa
jecxz
and
pop
push
int
aas
xor
gs
push
ror
fbld
lods
mov
enter
scas
test
mov
push
adc
mov
std
sbb
jb
repz
call
shll
push
dec
or
cltd
clc
xor
in
dec
push
stos
cmc
stos
add
or
lret
jg
divb
rcrb
arpl
cmp
pop
int3
pushf
shrl
movsb
inc
fsubrs
fs
pop
push
std
outsb
fabs
push
and
ret
loop
mov
push
sub
xor
test
cmpsl
ret
movsb
leave
negl
in
adc
mov
add
pop
xchg
adc
in
sub
pop
mov
lea
or
test
pop
push
out
pop
rorb
outsl
xorb
add
sbb
movsl
popl
xlat
icebp
mov
data16
jg
sub
dec
fldl
cmp
lahf
dec
xchg
and
pop
add
out
and
mov
repnz
int3
ja
out
xchg
xor
inc
sub
inc
xchg
leave
inc
cmp
cmpsl
frstor
jmp
lret
push
xchg
mov
sbb
nop
jmp
outsl
sub
aaa
or
scas
lahf
test
cmpsl
mov
fcompl
fsubp
dec
sbb
adc
outsb
jnp
nop
testl
xor
imul
icebp
test
jnp
scas
xchg
cmp
lods
negl
xor
mov
int3
lret
mov
pop
push
shlb
cs
into
clc
xor
xchg
inc
pop
fbstp
fstl
mov
mov
xor
xchg
mov
int
fwait
sub
sub
aam
lret
imulb
int
mov
or
iret
push
mov
test
and
ss
push
jmp
inc
iret
jae
mov
inc
cmovbe
cwtl
arpl
mov
or
mov
jae
dec
lds
pop
cmp
testb
add
adc
movsl
push
fldz
adc
push
or
cld
jno
into
mov
dec
mov
push
lret
mov
xor
fiaddl
jo
and
xchg
sub
or
xchg
mov
and
icebp
add
cltd
je
repz
fwait
mov
repnz
cmpsl
dec
or
mov
lods
mov
mov
cmp
je
fdivl
out
inc
test
fcoml
in
or
adc
lahf
test
pop
jae
adc
mov
xchg
push
adc
cmp
add
mov
loope
mov
xchg
repnz
ds
xchg
mov
mov
mov
add
sbb
sub
mov
jp
add
fld
jg
pop
push
mov
roll
roll
ja
push
add
ja
pop
jo
inc
daa
push
aaa
mov
out
mul
xchg
xchg
shlb
push
add
ja
pop
jo
inc
daa
push
aaa
mov
out
mul
xchg
xchg
shlb
push
andb
loopne
jo
inc
daa
shlb
mov
out
mul
xchg
xchg
shlb
push
add
ja
pop
jo
inc
daa
push
aaa
mov
out
adcb
mov
lea
mov
in
jno
int
sbb
pop
insl
or
fstps
lea
int
cmp
cmp
insl
dec
pop
jge
insl
add
mov
int
std
int
pop
and
push
jne
push
sub
sbb
insl
rcrl
in
stc
sbb
or
out
jp
push
pop
inc
cmp
insl
xchg
pop
testb
xchg
push
int
lods
or
and
inc
in
mov
icebp
sub
popf
xor
pop
jge
xchg
inc
mov
pop
call
mov
imul
repz
or
jle
xorb
lds
fsubr
frstor
adc
mov
cltd
ret
repz
orl
add
push
add
xor
inc
mov
sbb
xchg
insl
or
sbb
jne
mov
add
and
clc
push
xchg
cmp
sub
pop
push
sti
lea
fstl
in
sti
sbb
cmp
dec
outsl
jge
sub
lock
sti
cmc
jmp
mov
mov
jno
fs
push
xor
ljmp
or
fmul
out
mov
mov
sub
jg
sbb
xor
and
or
ror
sar
leave
fcompp
scas
mov
int
std
int
cmp
cmp
insl
dec
pop
jge
insl
mov
mov
in
int
std
int
cmp
cmp
insl
dec
pop
jge
insl
mov
dec
dec
jl
sbb
xchg
push
add
leave
jle
es
mov
test
mov
gs
mov
jns
pop
les
cld
sahf
inc
aam
cmp
adc
and
jg
mov
xor
aad
iret
cmp
add
in
fcoms
pop
cld
imul
inc
mov
and
icebp
fsubrs
dec
scas
xlat
iret
cltd
outsb
ja
mov
xor
fdivs
sahf
scas
inc
ja
imul
push
andb
cmp
gs
push
fdiv
add
out
cli
pop
sbb
mov
rcrb
add
xlat
and
jmp
sarl
lret
push
fdivp
mov
and
jmp
mov
repz
cmp
mov
push
clc
sub
lcall
inc
and
inc
rcrl
sti
push
dec
mov
cld
outsb
arpl
std
pop
add
jg
fistpl
idivl
loopne
ds
ret
jl
xchg
sub
and
out
xchg
add
addb
sub
xor
sub
pop
sbb
and
test
aaa
xchg
xchg
inc
in
push
mov
jnp
aaa
insl
jns,pn
out
add
inc
adc
aas
out
pusha
ja
pop
out
and
add
and
outsl
std
xchg
icebp
mov
nop
in
test
das
repz
pop
pop
dec
sbb
int
cmp
je
insl
cmp
add
xchg
test
ds
adc
pop
adc
xchg
adc
addl
mov
outsb
sbb
outsb
jo
sti
hlt
sub
or
mov
mov
lods
ljmp
mov
xor
xor
decl
inc
sbb
xor
std
inc
cmpsb
pop
cltd
sub
sbbl
std
mov
sbb
xlat
lret
inc
or
pslld
or
mov
nop
sbb
inc
aas
insl
rorl
mov
outsl
clc
stc
sub
repz
xorb
gs
jo
jg
and
pop
xor
ljmp
and
inc
aas
sub
sbb
adc
adcb
sbb
das
test
mov
push
mov
sbb
fcomp
sub
andl
push
fs
pop
insb
push
pop
mov
add
sbb
add
adc
loope
imul
adc
rcll
xor
jne
push
jno
push
les
cltd
pop
bound
imul
mov
in
lods
rclb
adc
nop
lcall
ds
xor
es
test
test
jp
jb
movsl
rcrb
xchg
dec
cmc
cmp
pop
imul
in
mov
ret
aaa
inc
pop
sarl
xor
pop
dec
ljmp
inc
in
into
lods
pop
in
jbe
mov
out
out
adc
scas
xchg
sarb
or
rcll
in
dec
mov
adc
in
arpl
or
fs
or
mov
inc
mov
and
sbb
or
int3
test
bound
adc
mov
sbb
xor
mov
leave
jne
test
popf
sbb
sti
xchg
mov
lock
adc
push
xchg
add
rcrl
cmp
movsb
pop
xorl
pop
ret
xchg
dec
xchg
subb
js
out
popf
hlt
repnz
leave
daa
mov
sbb
pop
adc
mov
sahf
ds
dec
mov
ljmp
mov
dec
mov
jnp
ficompl
lds
sbb
ret
cld
ficoms
push
das
ss
ret
in
jae
fcmove
push
jno
mov
jge
out
mov
pusha
push
mov
stos
jg
pop
stos
les
jl
or
pop
ljmp
aam
test
mov
or
incb
mov
jbe
addr16
mov
mov
sub
xor
rol
pop
pop
push
jno
in
add
shlb
bound
mov
pop
mov
jmp
dec
pop
test
xor
lock
mov
xchg
orb
jne
mov
jmp
subb
sti
xchg
out
dec
pop
push
frstor
lds
inc
sbb
mov
stos
inc
imul
sub
psadbw
popa
loope
sbb
cmp
and
test
jg
test
outsl
stos
movsb
mov
push
inc
and
inc
inc
sbb
stos
dec
add
rorb
mov
dec
ljmp
call
arpl
push
inc
and
in
and
movsl
sar
pop
call
jmp
jmp
cld
pop
popa
ja
jbe
out
leave
std
shll
aam
ja
subl
mov
pop
sbb
sbb
and
inc
jo
loop
pop
push
pop
dec
fcmovnbe
or
lret
rcl
pushf
sub
pop
push
clc
mov
movsl
xor
xchg
inc
xlat
fdivr
daa
push
cli
js
stos
xor
cmp
mov
cmp
or
sub
idiv
and
rep
into
jl
mov
or
mov
idivl
adc
scas
in
sbb
push
rol
ljmp
cmp
je
leave
xchg
stos
sti
mov
jp
or
cmp
jne
push
into
push
in
lret
jbe,pn
scas
cli
cmp
leave
popa
sub
cmp
mov
mov
and
lds
dec
jnp
adc
push
jle
addr16
xor
mov
cmp
andl
sahf
lret
xlat
sahf
xchg
push
lahf
pop
aas
add
loopne
mov
sub
sbb
inc
bound
push
xchg
movntps
push
push
lret
jo
and
call
cmp
subl
test
and
jmp
add
adc
sbb
pusha
push
fsubp
inc
arpl
mov
cmp
fstpt
call
mulb
sub
lahf
dec
cmpsb
psubw
lea
test
popf
fcoms
mov
cwtl
dec
pop
push
ret
mov
mov
add
aas
sti
mov
inc
xor
inc
mov
lods
mov
add
push
mov
mov
mov
scas
inc
pop
pop
loopne
pop
inc
and
xchg
in
cmc
mov
mov
jge
dec
or
dec
push
push
xor
mov
js
xor
sti
out
mov
or
mov
jecxz
cltd
mov
adc
push
pushf
dec
fdivs
and
xorl
lock
dec
inc
jb
sbb
cmp
jbe
cmp
inc
and
int3
fidivrs
pop
movsb
add
jno
sbb
sbb
cld
loop
add
mov
mov
iret
push
hlt
inc
inc
xor
and
fisubs
add
jp
lds
dec
xchg
push
and
jne
mov
rcl
imul
pop
pop
mov
xchg
ret
hlt
mov
into
push
pop
int
popa
xchg
push
add
stos
ret
shlb
xor
icebp
pop
xchg
cli
sub
mov
pop
lcall
leave
int
mov
popf
push
jne
rorb
cmp
imulb
mov
pop
add
icebp
inc
repnz
sbb
lret
popf
stos
cmpsb
mov
int
jae
jmp
inc
out
mov
fmull
push
sub
and
rorb
in
out
nop
leave
add
dec
das
sbb
rorl
loope,pt
xor
bnd
das
addl
pop
imul
pop
push
ss
pop
and
xchg
int3
push
dec
stos
in
xor
addr16
hlt
fldl
ficompl
cli
mov
inc
lcall
shr
lret
add
mov
and
scas
jno
mov
lret
nop
adc
hlt
mov
lret
std
loope
aaa
in
std
loop
icebp
add
sbb
test
icebp
repnz
fnsave
ret
pop
mov
sbb
and
movsb
popa
add
push
ret
sbb
lcall
fisubrl
cmpb
xchg
je
or
push
fisubrl
aad
sbb
sbb
insl
scas
les
lret
xlat
fsubrs
xchg
out
in
jg
fstps
addr16
mov
cmp
ret
fildl
lods
inc
imul
mov
lock
jg
mov
gs
loopne
stos
enter
outsb
imul
rolb
lahf
pushf
imul
sahf
pop
push
add
movsb
clc
mov
int
add
xlat
xchg
cmp
std
es
mov
cmp
jmp
push
sbb
ljmp
fdivr
fs
jbe
cmc
icebp
stos
in
add
hlt
cmpsl
push
cwtl
sbb
mov
xchg
cmp
mov
xchg
pop
jp
pop
jmp
sarb
call
pop
inc
test
sar
and
cli
imul
pushf
and
cmp
mov
cmp
scas
lahf
fstps
orl
out
addr16
gs
mov
hlt
pop
inc
and
adcb
je
into
test
mov
pop
das
dec
inc
ror
in
xchg
xchg
aam
pop
sbb
fisttpll
mov
arpl
jge
jp
mov
ja
out
loop
add
nop
push
dec
or
scas
push
std
outsb
inc
xchg
leave
in
wbinvd
sti
loopne
inc
and
sahf
pop
repz
int
mov
or
jo
shr
mov
in
inc
sbb
clc
or
outsb
jb
loope
xor
inc
mov
mov
mov
add
fnop
cmpl
add
in
testb
or
sarb
pop
jbe
int
fstp
sub
in
ds
fstpt
xor
andl
pop
cld
sbb
jmp
jmp
lea
add
or
repnz
xchg
cli
std
call
jmp
jp
sub
mov
bound
jg
call
dec
test
adc
lahf
jecxz
xchg
dec
lods
adc
or
lret
pushl
add
lcall
into
sbb
and
setns
hlt
cwtl
mov
imul
xor
pop
faddl
lds
ret
and
je
mov
add
shl
daa
mov
orl
jae
test
pminsw
enter
jnp
mov
stos
gs
test
jae
mov
cmc
hlt
aam
xchg
arpl
or
out
test
ljmp
frstor
pop
fistps
loope
dec
pop
das
inc
or
mov
mov
xor
dec
js
mov
dec
hlt
xchg
fdivs
scas
adc
dec
pop
cwtl
mov
push
or
cmp
scas
jae
sbb
push
mov
movsb
push
or
push
mov
sub
bound
adc
lock
fwait
add
pop
test
or
lret
push
push
mov
stos
ljmp
add
mov
pop
add
jno
and
sbb
cmp
xchg
movl
leave
pop
ds
cs
add
xchg
lock
shl
xlat
jg
mov
adc
inc
cmpsb
add
cmpb
xchg
mov
movsl
aaa
jne
inc
push
or
push
jno
pop
in
test
rolb
mov
xlat
inc
push
jecxz
adc
sub
fsubp
jge
repnz
enter
push
xchg
pop
mov
mov
cs
int
vcvtsi2ss
and
icebp
movsb
push
sub
and
inc
jb
push
iret
or
mov
mov
mov
out
or
fistpll
scas
iret
pop
lds
push
mov
and
lods
adc
sub
mov
push
out
pop
mov
mov
push
mov
das
mov
adcb
lock
ljmp
xchg
loopne
inc
fmull
push
inc
dec
dec
pop
into
mov
in
xor
loope
out
enter
cmp
notb
push
lahf
stos
sub
or
mov
lcall
test
adc
adc
stos
dec
hlt
xchg
pop
or
or
xchg
jl
andl
adc
ja
mov
lods
adc
pop
pop
pop
sub
mov
test
fsqrt
call
filds
out
test
push
les
sub
cmpsl
mov
into
adc
popa
and
push
pop
and
jne
xor
push
lret
pushf
adc
sub
push
fdivl
jne
test
stos
icebp
ret
mov
mov
xchg
aas
mov
clc
test
xchg
pop
or
fwait
mov
aad
shll
ret
js
or
mov
ss
jo
leave
imull
mov
mov
les
fsin
xorl
xchg
lret
scas
std
shr
icebp
loop
test
inc
or
or
xchg
pushf
cmpsl
lahf
inc
mov
insb
cltd
fwait
jmp
mov
orb
loopne
dec
or
inc
outsb
mov
dec
xchg
cli
inc
adc
cli
ret
loopne
cmp
cltd
shlb
icebp
mov
mov
loopne
aad
scas
mov
insb
movb
sbb
cmp
adcl
mov
adc
js
cmp
fdivl
pop
sbb
in
out
insb
ja
sub
int3
stos
testb
mov
fnstenv
aaa
fcompp
ret
xorb
mov
lcall
bound
xchg
dec
pop
cmpsb
push
xorb
push
imul
mov
repz
add
push
xlat
dec
and
out
jbe
or
lock
add
xchg
andl
xchg
pop
adcl
ret
addr16
test
mov
aas
jle
pop
clc
int
mov
hlt
std
ret
cwtl
xchg
in
es
lods
in
or
push
cwtl
mov
xor
lock
lock
jmp
cld
sub
mov
lcall
lock
push
outsb
stc
pop
pop
pop
adc
cmp
adc
cmp
jno
fsubp
int
cmpsb
pushf
fldcw
sbb
or
and
mov
pop
lods
shrb
add
mov
pop
imulb
popa
inc
sub
push
cmp
mov
pop
cltd
lods
pop
sbb
out
fs
cs
inc
mov
push
addl
dec
fisttps
ss
jnp
fisttps
cmp
sbb
or
dec
loop
add
testl
fwait
mov
dec
mov
in
movsl
mov
xchg
sahf
aam
inc
mov
or
fyl2x
dec
push
adc
shlb
sub
sti
adc
mov
mov
lds
hlt
xchg
loopne
push
xor
and
and
inc
lea
shll
sti
cwtl
fimull
xlat
test
xor
ret
mov
int
mov
sub
jle
jmp
in
add
dec
mov
cmp
sub
mull
xchg
nop
lret
lcall
ss
faddl
cwtl
jb
pop
push
add
inc
inc
mov
inc
into
pushf
mov
sub
pop
sbb
sbb
lret
rclb
cmp
aas
xchg
and
cmp
mov
movzbl
xchg
sub
sub
dec
sti
or
cmp
cmpsl
xchg
rolb
jp
jbe
push
or
jo
sti
lret
adc
or
in
add
lss
loope
mov
jbe
cwtl
cmp
or
jb
mov
push
cmp
jmp
or
xor
add
negb
sbb
orl
sti
sub
pop
adc
dec
es
das
les
dec
lods
test
mov
imul
push
in
ds
push
loopne
insb
arpl
dec
xor
xor
adc
sbb
push
push
jge
push
out
add
adc
sub
aaa
dec
sbb
fwait
or
mov
push
rcl
repz
cmc
jne
lret
leave
sbb
ljmp
loope
inc
sub
mov
out
imul
jg
mov
pop
push
inc
outsb
mov
pop
orb
lea
and
push
and
mov
adc
push
adc
push
into
push
mov
sub
insl
xor
aam
sub
cmp
push
into
test
mov
cmp
movsb
iret
jo
xlat
push
sbb
push
xchg
ds
jp
sub
xchg
and
loopne
lcall
fistpl
scas
sub
daa
mul
test
cs
andl
mov
movsb
adc
std
or
xorl
jp
and
pop
shrl
jle
sti
pop
xor
and
das
loope
jbe
imul
outsb
sub
lods
shll
out
shll
out
enter
or
movsb
cmpsb
in
movsl
dec
or
ss
cmpsb
xor
popf
xor
push
push
pop
and
js
fldt
cmp
test
nop
inc
mov
push
es
xor
dec
cltd
cmp
bound
int
jb
mov
pop
and
push
cwtl
ret
inc
fsubs
cld
pop
pop
nop
cmp
dec
cmc
fisubl
lea
mov
fmull
cmp
mov
std
jns
push
in
pop
mov
sbb
add
outsl
pushf
mov
je
inc
pop
test
lahf
sar
xor
sarb
xor
and
jnp
mov
xor
push
adc
xor
jno
pop
push
sub
xchg
push
cmpsl
popf
adc
sbb
jb
mov
cli
add
pop
gs
xchg
fisttps
mov
dec
insb
rcrl
mov
mov
mov
out
cwtl
loope
or
aaa
aas
push
and
pop
mov
sub
rolb
push
pop
lods
or
aaa
pushf
pop
mov
pop
shr
cs
xchg
or
into
cmp
sbb
popa
mov
mov
and
lret
or
jg
pop
xchg
clc
mov
fyl2x
inc
andb
mov
leave
or
fdiv
icebp
mov
dec
sub
mov
and
xor
pop
and
xorl
mov
les
movsl
mov
push
mov
in
iret
xchg
cltd
outsb
popl
call
push
adc
mov
dec
dec
or
cmp
insl
lret
sbb
rolb
mov
jo
imul
sub
sbb
xchg
inc
mov
dec
int3
mov
push
fnstcw
inc
pop
hlt
mov
add
jbe
push
outsl
mov
jmp
cmp
loope
shrl
push
fstl
lcall
movsl
sub
lock
jl
dec
sub
shl
addr16
int
sub
lods
loope
lds
xchg
int3
jns
xchg
push
rolb
adc
ficoms
xchg
repz
mov
dec
lcall
scas
and
outsb
repnz
push
out
iret
pop
dec
in
jae
xchg
pusha
rcrl
insb
outsl
jg
push
pop
pop
cmp
sbbb
imul
shlb
shrb
add
mov
nop
sbb
in
push
loopne
aas
int
inc
movsl
stos
jmp
es
cmp
mov
icebp
daa
jns
pop
ret
jl
sub
loop
or
icebp
cmpsb
sar
lds
mov
repnz
shll
and
scas
sub
mov
jae
xor
cmp
in
rorl
xchg
or
mov
ds
sbb
jb
pop
ffreep
push
jecxz
adc
jae
test
xor
fwait
pop
jmp
sub
jo
sub
clc
imul
push
push
push
jne
pop
jmp
lret
adcl
mov
pop
xor
dec
push
lss
dec
and
pop
mov
or
subb
mov
pusha
sub
loope
dec
fwait
cmp
cmp
mov
add
lds
scas
pop
dec
test
in
subl
int
dec
add
sub
insb
jle
cltd
daa
outsb
cmp
pop
iret
shll
push
mov
push
xchg
icebp
xlat
imul
leave
inc
jp
sub
movsl
jg
lea
cmp
inc
or
add
add
stos
je
mov
ja
add
stos
inc
pop
sbb
test
mov
add
mov
sbb
xor
pop
mov
jmp
daa
push
sahf
iret
aad
je
xor
or
das
scas
inc
fstps
mov
filds
and
sub
mov
fists
icebp
cmc
shll
xor
adc
and
mov
pop
cmp
aad
outsl
add
mov
mov
add
jl
xchg
or
imul
inc
in
push
hlt
or
dec
and
lcall
and
pop
aad
push
ud2
mull
xor
clc
stos
leave
push
lret
add
push
xchg
pop
xchg
xchg
outsb
sbb
mov
adc
mov
mov
or
aad
xchg
cmp
inc
lock
fidivrl
int
std
int
cmp
cmp
insl
dec
pop
jge
insl
mov
mov
in
int
std
int
cmp
cmp
insl
dec
pop
jge
insl
mov
mov
in
int
cld
or
or
cmp
jge
pop
jge
insl
test
mov
std
dec
fnstsw
adc
cmp
in
mov
icebp
out
rol
roll
leave
into
in
mov
push
push
inc
inc
xor
push
adc
add
icebp
out
rol
shll
xchg
push
push
dec
inc
xor
and
push
push
add
icebp
jmp
into
rcr
shrl
xchg
or
dec
dec
dec
arpl
lahf
icebp
mov
in
cmpsb
inc
push
dec
inc
test
out
popf
imul
mulb
stos
into
sbb
ret
ja
sbb
mov
ds
xor
shl
dec
sahf
stos
push
mov
int
inc
stc
push
or
subb
roll
and
mov
push
out
push
mov
in
bound
sbb
cmpsl
mov
std
stos
addr16
leave
pop
ficomps
adc
pop
push
es
mov
mov
test
jbe
mov
or
out
push
mov
addr16
push
xchg
mov
cmp
movsb
sub
in
popa
mov
popa
sub
inc
jae
jne
push
add
jmp
rol
shll
lahf
subl
pop
inc
xor
and
push
push
mov
mov
mov
jbe
or
ss
inc
push
adc
cltd
icebp
xchg
mov
stc
cmpsb
lds
or
adc
xor
cs
dec
dec
pusha
je
push
xchg
mov
scas
movsb
mov
mov
jbe
popaw
push
push
inc
inc
xor
and
adc
add
icebp
out
rol
shll
xchg
push
push
inc
inc
xor
and
adc
add
icebp
leave
test
arpl
sbb
push
xchg
es
mov
ret
pop
addr16
cmpsl
fmuls
insl
popa
mov
subb
in
insl
mov
fwait
addl
mov
sti
push
filds
les
sbb
popf
andb
test
pop
outsb
sbb
cmpsb
add
sbb
in
push
roll
jg
mov
cld
cmp
test
mov
push
cli
outsl
lods
aaa
test
add
or
test
cmpb
aas
jle
notl
mov
push
lds
dec
jmp
add
mov
pop
jbe
pop
lcall
into
andb
inc
or
pop
lock
mov
pop
scas
adc
mov
add
loope
push
mov
popf
mov
mov
iret
out
push
push
stc
cmpsb
and
xchg
clc
pop
pop
pop
pop
mov
leave
pop
mov
lcall
adc
les
push
xchg
ja
rcrl
mov
lds
dec
popf
in
les
inc
stos
leave
rolb
enter
bound
aaa
add
and
xor
jbe
into
sbb
sub
cmp
jmp
dec
xlat
bnd
or
lcall
out
lcall
inc
shrb
mov
xchg
add
or
push
das
xor
push
mov
sbbb
sahf
sub
ss
cmp
jno
fwait
xchg
cmpsb
les
pop
mov
add
idivb
outsl
push
cmc
dec
aam
xor
push
imul
cmp
stos
std
jo
inc
add
inc
push
mov
ja
test
stos
lods
push
ds
jno
data16
mov
push
lds
fnsave
lock
cmp
push
push
iret
adc
cmpsb
push
dec
iret
xchg
sbb
sub
ljmp
inc
roll
clc
jmp
xorl
jmp
icebp
add
enter
aas
pop
js
adc
fstps
dec
dec
xor
dec
mov
jg
jo
adc
jnp
pop
pop
test
clc
or
cmp
mov
inc
movsl
mov
xchg
sub
cmc
push
ret
mov
outsl
cmp
inc
cmp
add
and
aaa
push
cvtdq2ps
addb
stc
sub
es
jg
or
push
inc
and
mov
xchg
and
das
push
pop
out
bound
push
mov
lods
jne
hlt
pop
movsb
push
mov
pop
and
inc
pusha
push
mov
jg
inc
adc
psubusw
loope
jle
and
adc
fidivs
mov
push
push
aad
rcrl
push
fwait
sub
in
repz
pop
nop
mov
push
sub
inc
je
aad
add
addr16
jb
das
popf
add
imul
fcomps
lahf
or
shl
lock
push
mov
lods
rcll
shl
ds
lret
lret
dec
push
cmpsb
mov
out
fs
in
push
jno
dec
es
jne
push
fwait
popf
xchg
xchg
insb
stos
cmp
mov
adc
or
sub
xchg
in
scas
test
jnp
inc
not
idiv
sub
jno
cld
ret
pushf
xor
rcrb
addr16
cmp
cmp
push
or
sbbb
mov
das
jmp
sbb
xchg
test
dec
pop
mov
mov
mov
scas
test
dec
xor
out
insb
out
aas
jmp
movsl
cmp
xor
dec
lahf
and
and
mov
pop
orb
inc
dec
add
sub
xchg
jge
vphaddbd
sti
add
fldl
xor
cmp
mov
add
andb
mov
mulb
adc
test
in
xchg
pop
lods
cmp
or
mov
push
sub
sub
test
mov
imul
dec
stos
sub
cld
push
xlat
loopne
xchg
cmpsl
mov
aam
adc
sbb
pop
into
stos
cli
mov
and
test
sub
out
testb
pop
and
cmc
and
pop
data16
fstpt
cmpsl
adc
pop
int3
jp
jmp
sbbl
add
inc
loopne
int3
enter
je
outsb
fistl
loope
adc
push
pop
test
sbb
icebp
push
rolb
fnclex
push
into
sub
repz
cwtl
ljmp
roll
jp
test
mov
push
orb
sbb
movntps
std
clc
repz
cmp
dec
and
cmpsl
pushf
jae
mov
cmp
cltd
repnz
pushf
xor
ret
xchg
daa
mull
sub
roll
cmp
hlt
loop
and
sti
xchg
lock
and
inc
nop
pop
push
lcall
clc
jb
clc
rcl
pop
lea
in
call
adc
cltd
aam
mov
mov
sbbb
sub
jbe
mov
hlt
push
loop
mov
pop
fsubrs
sub
call
fsubrs
xchg
ds
lret
adc
xor
lcall
jbe
inc
into
cmp
insb
in
push
cmp
mov
leave
xchg
test
insb
lcall
xchg
fsts
adc
cmc
popl
xchg
or
leave
adc
rcl
mov
ret
in
pop
mov
jle
jle
pop
cld
rolb
pusha
imulb
or
rcl
cmpsb
ja
mov
and
xchg
cmp
out
int3
stc
cli
push
cltd
cmpsb
adc
or
xchg
pop
sub
lea
je
fisttpl
ja
cmpsl
xchg
inc
xchg
pushf
clc
jae
lock
push
dec
mov
in
mov
add
es
setne
imul
arpl
sub
ds
leave
fnstenv
xchg
add
push
xchg
inc
aam
fisttpll
icebp
mov
xchg
das
cmp
adc
imul
pop
pop
adc
or
test
popa
mov
fwait
sbb
xor
daa
cmp
pop
out
cltd
xchg
and
sarb
adc
dec
lods
incl
int
jmp
mov
fldt
mov
inc
dec
cmp
xor
test
fwait
mov
int
loopne
inc
dec
jecxz
dec
sub
sub
aaa
arpl
sub
and
dec
mov
int3
add
aas
stos
loope
out
inc
lods
insb
outsl
dec
ret
out
jg
dec
leave
or
int
inc
ficomps
fbld
mov
stc
out
sub
sub
adc
mov
lret
data16
js
lods
out
insb
push
mov
clc
nop
xlat
or
push
aaa
imul
jl
sub
jl
adcb
inc
xchg
jle
jo
jp
and
imulb
mov
ret
clc
imul
add
jp
out
and
cmp
sub
int3
jnp
sarb
add
cs
addr16
mov
int3
sbb
push
adc
mulps
push
sbb
stos
xor
roll
mov
or
pop
add
jg
arpl
mov
hlt
pushf
fstl
aad
xchg
jo
faddl
mov
arpl
into
cltd
push
lds
or
sub
sahf
and
adc
insl
mov
gs
jmp
and
test
in
clc
mov
int3
pop
mov
xchg
int3
mov
ja
repnz
dec
fsubrl
mulb
inc
out
xchg
addr16
gs
inc
xchg
aas
aad
xchg
stos
xor
inc
hlt
mov
jmp
outsl
mov
add
adc
lcall
inc
loop
in
sub
std
cmp
xchg
test
out
lahf
inc
xor
stos
and
js
adc
mov
pop
sub
dec
mov
jmp
pushf
in
pop
stos
adc
xchg
arpl
lods
lret
mov
outsb
cwtl
cmp
inc
adc
loop
loope
jne
cmp
call
push
xor
xor
iret
mov
pop
dec
sbb
mov
movsl
stos
inc
jo
add
cli
outsl
sbb
mov
push
movsb
sahf
outsb
jmp
mov
push
pop
dec
dec
jno
jns
repnz
movsl
rcrb
mov
jge
dec
jge
cltd
xchg
dec
and
rclb
mov
push
out
in
push
pusha
mov
sbb
inc
loopne
loop
aad
mov
and
mov
mov
scas
in
xchg
icebp
mov
pop
aad
stc
aad
outsl
pop
sub
jns
lock
inc
movsl
xor
adc
pop
pop
out
sub
mov
jle
repnz
aas
fsubrs
call
hlt
fimull
jno
and
enter
fsubl
jae
adc
outsl
enter
je
xchg
sbb
inc
push
pop
dec
jb
dec
lret
lods
mov
adc
push
loopne
and
popf
popf
cmp
inc
xchg
and
pop
lods
ljmp
jnp
cld
aad
fldl
icebp
negb
xor
outsb
adc
push
inc
ficomps
push
in
sub
iret
out
cmp
mov
imul
mov
xchg
jae
add
pop
xchg
dec
int3
outsb
out
jge
mov
mov
bound
xchg
jle
mov
jg
dec
xchg
movsb
jle
xchg
dec
jbe
or
mov
out
out
insb
stc
stos
and
cltd
xor
or
xor
inc
dec
add
mov
js
inc
jle
mov
pop
xchg
enter
in
mov
adc
push
jmp
sbb
mov
xor
add
jae
call
cmpsb
or
test
es
int3
mul
push
lahf
lret
scas
xor
dec
adcl
sub
sbb
mov
xchg
iret
gs
enter
scas
mov
call
subb
sbb
add
push
sbb
mov
jecxz
imul
add
pop
fisttps
fucomi
icebp
pusha
mov
ljmp
outsl
iret
fisubrl
cmp
cltd
adc
popa
or
pop
pop
rol
imul
ljmp
push
iret
out
cmpsb
lret
push
mov
scas
cmp
mov
mov
fmuls
sub
call
test
xchg
dec
dec
scas
push
test
loopne
push
bound
rcrl
cmp
push
push
or
sub
fbstp
std
lahf
mov
dec
in
jmp
loopne
dec
sbb
pop
xchg
dec
cmpsl
daa
arpl
repnz
jno
stos
es
add
out
repz
inc
add
lahf
add
pop
push
mov
adc
fsubr
pop
lods
scas
inc
push
orl
mov
in
mov
mov
popf
enter
xor
leave
mov
push
jg
lret
mov
decl
ret
in
lret
jne
xor
inc
lods
dec
cli
mov
in
xchg
movsb
sbb
push
lcall
pusha
fbld
mov
xchg
dec
into
dec
cmp
cmp
imulb
jle
into
sbb
lret
sub
jmp
cmp
leave
xor
jge
cmp
jmp
bound
xchg
sub
aad
and
sub
ja
lods
neg
lock
lcall
in
mov
mov
xchg
scas
in
aad
stc
stc
adc
movsl
aam
pop
mov
xchg
push
cmp
addl
pop
xchg
jne
cmc
ja
into
fwait
in
sar
sub
mov
and
outsb
fwait
std
dec
jo
outsl
inc
push
xchg
lahf
gs
les
pop
cvtps2pi
pusha
sbb
js
push
pop
arpl
and
loopne
rorb
rcrl
cs
fisubrs
movsb
cmp
mov
add
je
jge
jmp
cmp
pushf
push
xlat
testl
test
cmpsb
pop
mov
outsl
sub
lahf
cmpsl
dec
or
pusha
cltd
test
pop
stos
ret
push
sbb
sub
xor
rcr
insb
int
test
clc
aad
mov
add
add
cmp
sbb
inc
pop
sti
imul
mov
fists
mov
xchg
xor
stc
imulb
add
stos
jmp
ror
in
xchg
adc
xlat
jne
movsb
xor
mov
or
pushf
jo
adc
cltd
and
and
and
ljmp
sbb
dec
cmp
cmp
jge
je
mov
mov
cmp
mov
mov
mulb
add
add
rclb
stc
xor
daa
push
push
call
mov
or
je
sbb
ja
mov
je
xchg
insb
xchg
shll
sub
fldenv
pop
das
or
arpl
add
jbe
mov
int
pop
cwtl
testb
cwtd
push
jge
arpl
les
divb
jno
dec
arpl
push
test
and
sbb
xchg
insl
mov
push
mov
ret
mov
jg
xchg
mov
fistps
dec
jmp
divl
jl
inc
sbb
bnd
jecxz
mov
in
mov
out
jb
sub
xor
clc
push
cwtl
push
sub
adc
jle
pop
sub
pop
jae
ja
cmp
inc
sbb
mov
fwait
or
ret
sub
inc
pushf
dec
add
and
out
mov
add
pop
jl
dec
incb
movsb
add
fwait
inc
daa
andb
or
cmp
leave
and
in
mov
aas
add
ljmp
or
lods
inc
mov
xchg
dec
xchg
aam
cmc
fmuls
addr16
fisttps
stc
inc
xor
push
push
mov
out
or
cmp
jmp
fidivs
movsb
mov
push
mov
stos
imul
mov
mov
fs
daa
je
iret
rclb
mov
push
lds
int3
push
or
movsl
or
push
or
sub
mov
addl
aad
fistps
adc
dec
or
sahf
push
push
cmp
push
jmp
aaa
push
leave
insb
mov
faddl
or
ss
lahf
add
les
pop
xor
test
mov
call
cmc
pushf
jle
stos
inc
xchg
mov
pop
add
sub
sbb
mov
mov
dec
jne
jns
daa
add
jp
fmull
jle
ficoms
testl
nop
js
jecxz
or
mov
jg
jecxz
lods
push
stos
mov
inc
or
xchg
jmp
cmpsb
mov
aam
pop
cmpsl
insb
add
clc
repnz
popa
pop
insb
sbb
lea
insl
rorb
mov
xchg
mov
out
out
dec
sbb
lea
out
and
popf
pop
lcall
lret
xchg
add
into
sbb
dec
je,pt
dec
imul
iret
mov
add
out
jb
test
fmull
push
loope
mov
push
inc
push
loope
xchg
roll
inc
jle
push
pop
sub
sbb
jne
mov
add
jmp
jmp
add
sbb
and
popa
neg
jb
repnz
dec
jg
sar
movsb
in
xor
cmp
and
lahf
data16
and
popa
xor
pusha
pop
out
gs
popa
push
out
dec
add
imul
and
or
shrb
mov
jecxz
push
fimull
cmp
push
mov
pop
aad
push
push
js
arpl
dec
neg
push
adc
mov
test
lea
and
fistps
xchg
xor
xchg
gs
int
mov
jle
repz
fcmovbe
nop
xor
mov
and
mov
pushf
testl
cmp
mov
lods
andb
fnsave
stos
test
inc
leave
scas
jne
aam
push
push
hlt
xlat
mov
and
xor
mov
push
jne
mov
sbb
mov
imul
stos
cmpsb
mov
push
cmp
cmp
leave
daa
cmpsb
mov
cld
dec
xchg
xor
jo
or
int
sbb
dec
xlat
arpl
adc
in
lds
rcrb
cltd
test
push
arpl
pop
push
jo
es
inc
mov
mov
pop
in
cmpsb
lcall
das
xchg
cwtl
mov
jnp
push
pop
add
ret
jg
mov
sarb
testl
dec
dec
sbb
adc
in
je
insb
jb
addr16
dec
out
or
daa
mov
lcall
cmp
enter
xor
nop
inc
cmpl
loope
sub
mov
pop
cmp
mov
movsb
mov
movsb
clc
adc
sbb
pop
push
pusha
stos
mov
stos
ds
push
cli
inc
sub
inc
popf
arpl
in
xchg
or
cmp
lcall
mov
cltd
and
push
fidivl
stc
push
divl
mov
aas
add
arpl
jge
sbb
mov
idivl
cmp
mov
stc
jns
mov
dec
mov
leave
pop
mov
es
mov
bnd
xor
lods
mov
gs
lret
sbbb
jg
sub
xchg
push
std
push
out
add
nop
sbb
cwtl
test
scas
xor
pop
stc
sub
cmp
dec
jecxz
into
outsl
pop
xchg
push
cmc
test
int3
inc
jmp
jmp
addr16
mov
popf
dec
jmp
popa
repnz
inc
pop
leave
clc
pxor
aam
fdiv
cmp
daa
adc
or
jb
push
shl
mov
or
pop
pop
lret
push
mov
movsb
sbb
xor
jae
ja
sahf
push
or
in
inc
dec
in
mov
mov
xor
adc
cmp
cmpsl
fcoml
adcl
leave
or
push
in
repnz
test
rorl
cmp
jge
mov
hlt
mov
push
aaa
ss
push
mov
lods
into
ss
and
in
js
cmpsb
xor
add
pusha
inc
subl
test
push
mov
mov
pop
push
cmpsl
adc
jb
sub
sahf
in
mov
aas
lahf
push
xor
ljmp
inc
sbb
fnstsw
mov
test
repz
inc
pop
sub
dec
arpl
jmp
daa
in
shll
scas
adc
in
mov
icebp
fsubl
and
pushf
jb
scas
xor
in
mov
in
xor
cmp
addr16
insb
cmp
and
imul
xor
cmpsl
stc
dec
divl
pop
xorb
mov
fs
jo
pop
xor
push
jno
stc
addr16
fst
inc
push
or
jno
xchg
mov
cmpsb
adc
xchg
je
adc
cwtl
lahf
cmp
arpl
cmp
dec
mov
cmp
sub
xor
xchg
xor
mov
int3
roll
and
and
mov
aaa
or
test
jl
repz
push
mov
cmp
pusha
dec
mov
xchg
adc
sub
rclb
repnz
mov
push
sbb
sbb
jb
cmp
adc
pop
loopne
std
or
nop
mov
lcall
cmc
aaa
push
in
inc
mov
cmp
inc
pop
mov
xchg
jg
ret
addr16
mov
icebp
push
sbbl
xlat
mov
subl
lea
popf
test
lea
pop
jb
sub
inc
mov
xor
sbb
call
scas
xor
xor
mov
pop
cmp
cld
cmpsl
sahf
fldcw
scas
jmp
dec
movsl
xchg
push
push
sub
pop
fbld
xchg
adc
je
mov
push
lock
cmp
cmp
or
inc
popa
es
adc
dec
aaa
dec
daa
jl
mov
mov
cmp
jle
and
or
pop
in
in
icebp
test
jle
mov
in
pop
jbe
mov
and
jnp
fsubs
and
imul
xchg
lret
movsl
into
popf
push
outsl
aad
test
jnp
dec
adc
stc
cmp
pop
or
movsb
dec
cltd
push
inc
and
jb
add
push
inc
pop
adc
and
sub
notb
lcall
jg
fadds
adc
lret
imul
lock
fisttpl
mov
loopne
or
dec
aaa
xor
int
inc
out
dec
subl
aaa
lret
pop
push
cmp
in
inc
sbb
cmpsl
jg
shll
inc
sub
mov
jp
mov
rcll
movl
push
stos
repz
dec
lods
mov
inc
icebp
dec
jmp
mov
push
repnz
out
xor
cmp
adcb
dec
and
pop
jb
imul
jb
mov
jae
pop
ss
cld
imul
ljmp
std
shll
pop
jmp
sbb
jae
mov
mov
mov
mov
mov
jbe
popaw
push
push
inc
inc
xor
and
adc
add
icebp
out
rol
shll
xchg
push
push
inc
inc
xor
and
adc
add
icebp
out
push
mov
mov
and
icebp
popaw
push
push
inc
inc
xor
and
adc
div
in
xlat
rol
shll
orl
mov
stc
and
xor
add
adc
insb
pop
add
adc
mov
cmpb
lret
shr
and
xor
add
adc
bound
dec
inc
jnp
push
mov
mov
repnz
ret
jmp
sbb
or
cmp
sub
jb
inc
jnp
imul
mov
xchg
mov
xor
push
jb
leave
js
outsb
pusha
sbb
dec
loopne
loopne
push
loop
dec
add
das
test
push
lahf
cmpsb
dec
dec
test
rep
loope
mov
sbb
inc
sub
fimull
mov
in
cmp
arpl
mov
mov
jnp
cmpsl
jbe
daa
addr16
xor
je
xchg
jge
pop
bound
jae
mov
jge
cs
lcall
fildl
push
sarb
inc
sub
mov
dec
sahf
xchg
inc
sbb
and
or
lcall
loop
fmuls
fmulp
repz
ret
adc
sbb
or
cmp
sub
jb
inc
jnp
imul
xchg
stos
loop
repnz
ret
lods
sbb
addr16
push
sbb
aas
daa
push
adc
jecxz
mov
loope
fildl
mov
addr16
jae
dec
and
push
push
inc
sub
inc
mov
ret
stc
xchg
sarb
imul
bound
dec
inc
jnp
imul
xchg
stos
loop
repnz
ret
jmp
sbb
or
cmp
sub
jb
inc
jnp
imul
xchg
stos
loop
repnz
ret
jmp
sbb
in
mov
sub
lret
mov
xchg
adc
sarb
mov
or
jp
adc
cmp
xchg
or
scas
add
add
int3
dec
cmpsb
adc
mov
pop
stos
pop
pop
xor
or
std
je
pop
gs
mov
mov
jbe
or
push
adc
pop
mov
cltd
bnd
xchg
push
movntq
out
ja
or
shlb
sbb
dec
stos
mov
pop
jns
xlat
adc
add
fs
andl
decl
jae
fmuls
add
xchg
test
adc
push
data16
scas
inc
push
je
dec
push
mov
pop
ret
cltd
cli
push
ds
sbb
push
nop
pop
fstl
out
xchg
lret
xchg
sbb
incl
test
mov
out
lea
sahf
mov
mov
lahf
fidivrs
inc
xor
movsl
sbb
insl
into
mov
cmp
pop
icebp
enter
mov
xor
mov
sahf
fdecstp
xchg
dec
push
aas
xor
and
xlat
pop
aad
loopne
in
xor
xor
xor
and
push
push
andb
pop
and
sbb
xchg
pop
cmp
mov
cmp
fiadds
loopne
pop
int
mov
dec
cltd
orb
loop
sub
mov
aad
mov
rcl
adc
push
lods
nop
fcompl
lods
aad
loopne
push
scas
fnstenv
adc
jbe
scas
shlb
adc
and
lock
int
jge
sarb
fnstenv
mov
inc
call
xchg
pop
mov
stos
gs
push
jge
out
or
pop
mov
inc
or
sub
add
addr16
xor
stc
cmp
xchg
gs
mov
cmp
popa
mov
jp
cmp
mov
bswap
mov
andb
out
je
cmp
adc
and
imul
ljmp
test
mov
xchg
sub
xor
cmp
jp
mov
cmovnp
rolb
dec
and
dec
mov
pop
pop
sub
call
outsb
sub
sbb
adc
aad
ret
mov
push
rcl
and
pop
scas
arpl
fstps
sub
jo
pop
mov
cmp
popf
or
gs
mov
ds
outsb
outsl
in
fstps
idivl
push
mov
pop
and
mov
mov
sahf
int
or
aaa
lret
cmp
inc
dec
mov
lea
adc
mov
push
jae
jnp
sub
add
pop
sbb
mov
mov
pop
in
mov
out
sbb
pushf
mov
jp
aam
subb
xchg
ret
dec
cmpsb
notl
into
or
dec
jl
add
repz
mov
cmp
addl
icebp
add
mov
lods
add
sub
mov
mov
ljmp
mov
popf
mov
pop
fidivl
sbb
pop
mov
push
xchg
daa
hlt
xchg
bound
test
fcoml
push
je
mov
jbe
cmp
je
or
push
pop
in
xchg
mov
aam
and
mov
ja
loope
iret
inc
lahf
shl
repz
and
jae
movsl
sub
rcl
insl
roll
push
dec
dec
push
push
clc
adc
ljmp
adc
cmc
jp
addr16
mov
mov
in
jle
out
xor
lcall
stos
pop
jb
dec
scas
cmpl
xchg
mov
pop
call
push
mov
ja
jns
cmc
outsb
call
push
fs
das
and
js
mov
inc
mov
mov
pop
sub
test
out
mov
addr16
mov
ss
jb
and
aam
je
popf
jns
jg
repnz
fs
cmp
pop
outsb
inc
fisttps
jmp
fs
sub
lret
popa
fadds
ds
inc
mov
jb
or
jb
cmp
mov
sbb
jno
pop
clc
into
pusha
xchg
enter
xchg
adc
clts
dec
push
fsincos
xor
imul
lea
dec
cmpsl
es
mov
sbb
adc
inc
and
mov
das
pop
dec
daa
jp
push
xchg
pushf
in
stc
lock
aam
dec
xchg
les
adcb
jo
or
cmp
cwtl
push
mov
scas
repz
mov
push
ret
scas
dec
xchg
add
into
das
push
pop
test
movsb
lds
les
pop
and
dec
mov
aad
push
push
cmp
sub
push
xchg
sbb
cli
gs
inc
pop
xlat
jnp
push
push
dec
xchg
fidivrl
clc
mov
mov
sub
ss
adcb
sbb
fnstsw
xorb
pop
cmc
xchg
aas
test
mov
xor
xor
and
das
push
or
cmpsl
sub
inc
cmova
xchg
adc
dec
or
lahf
xor
xchg
loop
outsb
mov
int3
test
cmpsb
xchg
lcall
iret
arpl
jle
push
mov
jb
pop
ds
push
pushl
ljmp
out
jnp
add
lahf
ret
fmuls
push
sbb
inc
mov
shlb
in
xchg
sub
loopw
loope
fdivrs
xor
das
adc
and
sbb
add
mov
push
js
fmulp
add
mov
add
inc
stos
pop
jno
fdivs
push
repz
xchg
popf
fs
stos
and
mov
xstore-rng
cmpsl
add
in
ljmp
in
pavgw
push
iret
test
testl
daa
adc
mov
sbb
fsubs
sub
repnz
push
addr16
lea
and
xor
lcall
sbb
insl
rol
dec
pop
stc
jecxz
inc
jbe
adc
inc
cwtl
cmp
mov
scas
mov
xchg
icebp
sbb
pushf
inc
cmpsb
push
mov
lcall
imul
jecxz
sahf
int
pop
ret
jnp
dec
adc
push
vunpcklps
rcrl
xchg
xchg
cld
fs
or
jge
mov
popf
mov
push
in
jl
xchg
add
test
pop
and
out
push
rolb
mov
jae
insb
add
pop
jbe
xor
rcrb
icebp
jg
repz
lahf
xchg
mov
das
push
call
xchg
or
mul
lea
ss
popa
and
jae
imul
loope
negl
in
aam
stc
insb
xor
sub
ret
les
jo
ja
loope
cmp
dec
dec
aaa
movsl
jnp
out
mov
sbb
mov
mov
fisubs
cmp
cmpl
sbbl
adc
movsl
les
xor
outsb
fcmovbe
aad
xor
push
in
stos
sub
hlt
loop
mov
adc
sbb
push
out
pusha
xchg
test
inc
fsubrs
add
neg
loopne
aam
mov
and
leave
shl
enter
add
jae
fimuls
movsl
test
fldcw
cmp
repz
leave
inc
cltd
cwtl
add
pop
cmp
call
in
stc
rcl
scas
jo
fcmovbe
mov
jb
lret
cltd
and
push
pop
push
mov
sub
push
cli
into
add
and
cld
dec
loope
clc
pop
movl
sti
shll
mov
icebp
jge
xor
xchg
adc
into
or
cmp
pop
insb
or
mov
jb
or
mov
clc
inc
insl
insl
dec
mov
xchg
adc
jnp
push
adc
ret
hlt
mov
test
adc
sti
adc
shrl
rclb
popa
adc
xchg
ret
jge
lcall
push
incb
cli
pop
xlat
hlt
ja
push
mov
sbb
xor
loop
jle
test
sub
inc
xchg
push
xchg
inc
gs
int
cmc
sahf
add
jecxz
fsts
sub
mov
shll
xor
sbb
call
mov
jne
gs
hlt
imulb
jo
lods
movsb
xor
nop
in
push
jge
lock
mov
adcb
cmc
addr16
sub
cli
or
int3
jg
xor
dec
push
int
ret
gs
mov
ficompl
ljmp
scas
mov
orb
aam
in
push
ds
call
adc
les
sub
push
cmpsb
addb
fsubl
enter
not
lret
rolb
daa
sub
into
jmp
loopne
in
mov
add
mov
outsl
rcr
popa
repnz
int
add
loopne
adc
xor
xor
cmpsl
and
arpl
inc
nop
stos
jnp
xlat
xorl
aaa
inc
movsb
mov
popa
cmpsl
sbb
loop
stos
dec
mov
mov
arpl
call
cmp
or
fisttps
mov
mov
push
clc
fidivl
dec
xor
jecxz
jnp
out
add
aas
mov
jae
mov
dec
lods
aad
and
mov
mov
imul
mov
cmp
inc
sub
call
mov
inc
mov
sub
sbb
call
and
mov
and
sub
arpl
psubusb
les
mov
adc
aad
and
fdivl
imul
push
sbb
sarl
dec
mov
iret
icebp
movsl
lods
sub
nop
icebp
or
mov
std
ret
clc
pop
xor
outsl
fisubrl
inc
inc
or
xchg
pop
out
cmc
scas
mov
xchg
sbb
xor
test
sub
pop
movsl
push
dec
sub
jp
and
cmpsb
movsl
stos
ljmp
shl
dec
popf
or
or
bound
sbb
dec
mov
daa
in
or
in
imul
pop
mov
pop
jmp
fsubs
inc
out
ds
faddp
add
aam
cld
push
lds
inc
pop
and
push
and
cld
pop
test
mov
and
les
pushf
jae
push
cli
and
arpl
jecxz
out
cmc
fbstp
xchg
mov
out
fiaddl
leave
imul
fdivs
push
mov
mov
xchg
mov
cld
cmpsb
cmp
cmpsl
dec
mov
repz
mov
je
mov
les
outsb
pop
shll
fnstsw
lea
divl
mov
out
clc
out
push
decb
sub
mov
xchg
lcall
jae
idiv
fildl
cmp
mov
push
stc
stos
jp
mov
sub
or
aad
mov
sub
clc
pop
mov
call
bound
lcall
in
push
loopne
push
in
jnp
bound
repnz
sti
pop
in
jns
mov
cmp
faddl
lods
jge
or
mov
mov
dec
clc
cmpsb
dec
lods
outsb
scas
jecxz
or
push
jecxz
stc
dec
and
push
shr
pop
jno
aad
dec
ss
les
jnp
mov
clc
sbb
int3
jp
pop
stc
sub
or
out
ja
push
ret
sbb
cmp
mov
xchg
pop
cmp
xchg
xlat
jns
push
pusha
sbb
dec
mov
xchg
and
out
mov
dec
pusha
das
lods
sbb
lcall
xchg
jp
cmc
mov
push
daa
test
inc
dec
addr16
lock
lds
sarb
or
mov
movsl
int
cwtl
mov
jle
popf
jne
jae
movsl
xor
gs
pop
pop
jbe
ret
aad
sbb
or
es
test
mov
dec
js
test
adc
xor
jns
bnd
jle
data16
mov
ds
rorb
mulb
jl
cwtl
inc
out
popf
fnstenv
mov
mov
mov
push
adc
in
sub
mov
aam
pop
push
pop
cmp
test
or
add
mov
mov
push
pop
push
jo
cmp
fisttps
xchg
sarl
in
out
pop
dec
add
fcmovnb
push
icebp
inc
aaa
movsl
sbb
sub
int
je
and
pop
ja
adc
nop
popa
cmpsl
push
cmp
xchg
jmp
sbb
add
jle
into
mov
mov
repnz
stos
and
inc
fldcw
inc
add
andl
pop
jmp
jnp
pusha
mov
sbb
and
int3
jle
lock
in
xchg
fnstsw
mov
fs
dec
cmp
popf
xchg
push
cmpsl
daa
pop
stos
rcrl
pusha
mov
mov
int
mov
adc
or
sub
push
mov
shll
fbstp
xor
adc
loope
outsb
outsl
mov
jmp
stos
mov
push
ja
push
and
addr16
aad
jns
dec
dec
movsb
es
and
add
cmpsb
test
xor
loope
mov
insl
push
ja
sub
xor
cmp
dec
and
pop
ds
xor
and
dec
xorb
ja
gs
popa
sub
leave
inc
dec
sub
pusha
and
iret
jb
add
cmpsl
mov
mov
mov
stc
outsl
inc
fisttps
jae
call
mov
iret
xor
mov
xchg
cs
xor
mov
es
cmp
cli
mov
hlt
cltd
out
add
jl
push
sbb
pop
gs
outsb
and
adc
pop
sbb
cmpsl
popf
adc
rcll
imul
aad
mov
sub
mov
lcall
popa
mov
outsb
sbb
subb
nop
movsl
push
push
test
aas
sbb
xor
fisttpl
dec
mov
rcr
mov
movsl
xchg
xchg
lods
add
aad
les
gs
push
push
mov
mov
sub
push
lret
enter
call
fucomi
ja
pmuludq
mov
popf
jg
aaa
sub
pop
in
iret
jmp
hlt
sbb
loop
pavgw
sbb
adc
movsl
movsl
or
out
cli
jecxz
sbb
mov
mov
sbb
fwait
das
jbe
mov
xchg
sbb
hlt
add
das
jg
aam
push
pop
xor
pushw
js
mov
pop
cmpsb
in
call
inc
pop
or
test
inc
adc
int
and
repz
ja,pt
push
push
add
insb
bound
xorb
ficompl
data16
pop
sbb
sbb
jp
push
and
sub
jnp
repz
adc
xor
or
repnz
dec
cmp
inc
ret
jp
jge
cmp
movl
cmpsl
cmp
add
daa
and
aas
jne
aas
test
in
push
add
ds
mov
mov
rclb
stos
int3
inc
jl
add
sbb
push
lods
pop
dec
xchg
pop
xor
mov
push
inc
test
pop
xchg
xor
stos
cmp
xor
or
mov
jns
divl
jno
jecxz
mov
icebp
insb
mov
and
xchg
jl
fcmove
gs
or
inc
adc
pop
mov
mov
push
pop
lahf
cld
mov
mov
and
cli
aad
das
add
fnstsw
stc
out
sub
sahf
lods
inc
mov
lds
paddd
sbb
rcrl
inc
gs
std
setl
mov
jb
pop
dec
lods
sub
fidivs
jp
not
xchg
lahf
sub
jb
cld
sub
mov
cmp
pop
aam
loop
test
mov
mov
bound
xchg
push
pop
insl
add
fists
push
stc
dec
add
inc
notb
lcall
mov
lcall
fisttps
mov
xchg
aam
lret
out
dec
jmp
jmp
movsb
sarw
fnstcw
inc
test
xor
inc
aam
shlb
ja
mov
xchg
dec
out
cmp
inc
xchg
jnp
lret
add
test
icebp
cmp
stc
dec
push
inc
repz
dec
arpl
test
fstpt
and
ljmp
aam
mov
cltd
mov
int3
mov
nop
push
sub
ss
cmc
out
xlat
xor
cli
and
cld
notb
das
and
inc
pop
push
xchg
aad
xor
inc
cmp
lods
xor
sbbl
lods
mov
aad
or
fnstcw
jecxz
gs
cmpsl
sbb
lods
add
mov
mov
cltd
add
cmpsl
loope
dec
push
jle
aas
push
pop
add
push
adc
arpl
ror
and
cs
in
fwait
adc
mov
jl
sub
loop
scas
fs
lds
xchg
mov
roll
sub
sbb
sub
add
or
test
and
movsl
pusha
pop
inc
test
mov
in
push
inc
mov
xor
cmc
imulb
dec
aas
push
in
js
ffree
push
cwtl
xor
or
test
idivl
or
pop
movsl
push
sub
pushf
mov
dec
lock
fimull
scas
jae
lret
sub
pop
repnz
inc
iret
push
loop
fwait
adc
push
jns
xor
daa
pusha
jl
rorl
mov
enter
sbb
and
cld
mov
addl
stc
cs
sti
imul
in
sbb
mov
test
imul
jle
inc
sub
sbb
xchg
mov
test
lcall
push
loope
lea
cmc
add
cmp
add
inc
sahf
or
imul
in
add
rolb
out
je
loopne
insb
mov
jg
pop
adc
sub
pusha
mov
int3
jecxz
add
push
jmp
sub
call
aam
push
aas
sbb
mov
fldt
sbb
ficompl
jne
add
pop
dec
pushl
fstpt
mov
add
insb
inc
add
aas
rcrb
mov
pop
jmp
imul
mov
xchg
sub
out
pop
or
stc
lcall
fstpl
jnp
fistl
jmp
xchg
jecxz
out
sub
pop
xchg
aas
and
xchg
je
fists
mov
test
rcrl
movsl
std
push
int3
adc
pop
pop
pop
fs
or
pop
mov
sar
cwtl
sub
addr16
push
xchg
pop
push
cmpsb
add
cld
mov
scas
xchg
rolb
xchg
dec
in
inc
into
call
mov
lock
cltd
insl
pop
mov
ret
cltd
or
lret
mov
mov
dec
std
aas
repz
aaa
out
jno
call
mov
push
ljmp
cmovne
ret
in
mov
and
inc
xchg
rclb
pushf
pop
out
and
in
dec
rolb
xchg
mov
movsb
inc
adc
xchg
shrl
mov
inc
mov
fstl
or
or
jp
pop
gs
dec
jp
rclb
scas
jl
sbb
data16
cmp
sub
dec
fadds
push
xchg
pop
std
call
push
in
sbb
inc
out
mov
push
cmpsb
mov
lock
xchg
rorl
pop
inc
mov
mov
cltd
mov
sbb
mov
lahf
repnz
push
mov
dec
loope
mov
ja
mov
repz
jae
outsb
scas
out
xchg
cmp
out
jl
jg
repnz
in
mov
mov
xchg
repnz
cmpsb
fld
push
stos
aam
cmp
adc
rcrl
push
jae
imul
dec
mov
inc
test
pop
ret
xchg
loop
mov
aas
xor
xchg
jnp
push
sbb
leave
aaa
int3
ljmp
or
or
dec
in
inc
xchg
mov
cmp
sub
add
xor
or
dec
xchg
aam
mov
out
call
std
mov
dec
mov
xor
mov
push
fiadds
pop
dec
inc
pop
dec
stc
insl
mov
insl
jbe
in
in
jae
or
pop
in
add
dec
adc
int3
repnz
xchg
roll
jecxz
shrb
test
fwait
not
and
push
inc
push
punpcklwd
push
arpl
pop
into
inc
gs
push
xor
pcmpgtd
fldl2e
push
arpl
ffree
dec
jmp
adc
stos
mov
mov
stos
pop
es
or
and
imul
sub
das
sub
negl
mov
mov
movsl
int3
ficoms
jae
orb
cmp
push
dec
and
xchg
test
sub
pop
add
cmp
cld
imul
push
jns
pop
shr
mov
ret
pop
adc
cmp
cmp
cmp
and
testb
insb
pop
or
xor
out
mov
inc
inc
pmulhuw
mov
xchg
mov
xchg
loop
mov
jge
imul
or
das
jae
xchg
pusha
cld
xchg
repz
or
cmp
sub
jb
inc
jnp
imul
xchg
stos
loop
repnz
ret
jmp
sbb
or
cmp
sub
jb
inc
jnp
imul
xchg
stos
loop
repnz
ret
jmp
sbb
or
cmp
sub
jb
inc
jnp
imul
xchg
stos
loop
repnz
ret
jmp
sbb
or
cmp
sub
jb
inc
jnp
stos
mov
mov
jp
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
jns
dec
fcomps
ss
dec
sub
jbe
lods
js
fs
dec
stc
dec
test
or
call
sub
sbb
lods
js
dec
test
sbb
call
xor
push
xchg
jmp
sub
hlt
inc
cli
dec
lock
clc
jns
add
push
lds
push
loopne
adc
add
add
fst
inc
adc
in
push
imul
push
stc
adc
add
clc
push
xorb
aam
adc
sbb
add
cmp
jmp
push
test
in
int
sub
sub
out
or
fcom
clc
or
sub
loope
sbb
sub
mov
imul
leave
xchg
jo
mov
xchg
adc
sub
push
sbb
or
fcompl
mov
testl
xorb
push
jns
jl
dec
fcomps
imul
test
enter
mov
add
roll
push
mov
mov
insb
sbb
cmp
or
je
popf
adc
adc
push
fnstsw
sbb
imul
push
lcall
stc
or
lret
je
insl
add
pop
mov
or
stc
push
test
sbb
call
sub
sbb
leave
pop
cmp
or
mov
fildl
test
pusha
out
mov
aaa
shr
inc
adc
xor
repnz
jg
pop
out
outsl
in
adc
and
pop
int3
test
jg
mov
mov
cmc
dec
mov
cmp
mov
add
sub
fisubrl
mov
fldenv
inc
clc
dec
sbb
fidivs
pop
cmp
in
xchg
loopne
sub
mov
cmp
sahf
rorl
xor
cmp
hlt
inc
sbb
xor
push
les
mov
adc
stos
cmpsl
inc
jno
adc
ret
sbb
rolb
cmc
xchg
notb
cmp
sbb
clc
cli
fmul
jp
in
jl
xchg
das
add
cmp
xor
push
jbe
and
inc
bnd
inc
lea
adc
addl
hlt
loope
mov
add
lahf
or
mov
sbb
addb
sub
or
adc
xor
sbb
add
pop
add
in
add
outsl
inc
pop
dec
fucom
int3
mov
negb
arpl
sub
and
jne
enter
enter
cmp
cmp
cmpsb
roll
scas
jbe
aad
push
leave
pop
jg
std
lds
fsubrl
and
inc
mov
jno
mov
and
mov
cmc
insl
shlb
xchg
out
pop
sahf
pop
pop
and
imul
adc
inc
dec
scas
push
mov
jmp
hlt
fisttpl
aaa
pop
adc
adc
inc
inc
scas
sub
add
push
loop
inc
push
pop
pop
mov
push
ret
cmp
dec
rcl
or
frstor
fwait
aam
std
or
xor
mov
dec
fcompl
out
pop
lea
push
mov
push
mov
sub
dec
fstl
inc
inc
or
add
int3
aad
jns
mov
xchg
cmp
dec
xchg
int3
lods
stos
das
out
adc
and
rorb
add
adc
jg
mull
mov
sbb
jo
pop
data16
add
ds
inc
dec
and
dec
ss
lret
cs
push
inc
and
mov
lret
lock
jecxz
movsb
je
cs
xchg
lret
push
pushf
outsb
imul
flds
jp
xor
push
xor
in
pop
sbb
or
push
and
in
in
dec
loop
dec
es
mov
movsl
loopne
inc
lahf
cmp
in
lahf
jl
out
or
sbb
jge
dec
pop
fistpll
mov
add
and
loope
imul
aad
jp
xchg
cld
inc
arpl
into
xchg
mov
out
xchg
adc
popa
icebp
outsl
ja
xchg
arpl
xchg
dec
mov
out
and
data16
push
ss
in
jge
mov
loop
inc
out
pop
invd
movsl
subl
sub
pushfw
ficompl
adc
loopne
xor
lock
and
sbb
out
loope
xchg
es
mov
xchg
movsl
cmpsl
in
shr
cs
and
pop
cmp
ds
mov
adc
fstl
jecxz
or
cmp
and
push
lods
jecxz
or
jns
xor
mov
sbb
sahf
push
loope
pop
leave
jl
iret
test
adc
in
jg
sbb
pop
mov
addb
lret
dec
and
sub
inc
sub
adc
call
sar
test
sti
subl
pop
les
es
lahf
dec
call
dec
stos
ficoml
and
ljmp
inc
test
clc
pop
fstps
mov
xor
sbb
and
std
mov
enter
or
pop
sub
shrb
xlat
faddl
pop
lcall
adc
or
test
adc
in
std
or
cmp
mov
push
lahf
std
adc
mov
push
push
mov
stos
cmp
lock
ljmp
jecxz
adc
jle
shrb
xor
xchg
jae
loope
push
and
mov
fldl
dec
inc
xchg
rcrl
add
sub
xchg
pop
add
push
mov
inc
fcompl
inc
cvtps2pd
mov
and
lods
outsl
arpl
jmp
cwtl
cwtl
add
add
or
mov
lcall
lcall
cmp
xchg
adc
aas
jns
ret
jp
daa
aaa
lcall
iret
loop
push
mov
sbb
shrl
fwait
stos
adc
loope
push
xor
jl
or
push
push
jns
sub
ret
mov
test
pop
dec
jae
push
and
in
mov
enter
iret
insb
sub
repz
stos
adc
shll
and
pop
jnp
jo
mov
stos
daa
jmp
fwait
or
lcall
mov
mov
cmp
and
jae
jg
cmc
addr16
loope
xchg
pop
inc
call
ljmp
mov
adc
imul
jge
data16
mov
jns
inc
mov
ds
push
mov
mov
loopne
jae
outsl
jae
in
dec
xor
or
test
adc
push
incb
sub
mov
pop
decl
ficomps
cmp
pop
clc
push
jge
into
mov
mov
out
sbb
mov
fsubl
hlt
std
jl
xchg
std
rorb
push
inc
frstor
push
mov
pop
je
clc
bound
bnd
stos
xchg
xchg
cwtl
push
fadds
push
test
lock
push
shrb
movsb
out
pop
pop
jg
or
fisubs
mov
mov
mov
add
mov
xchg
mov
mov
ror
sti
test
push
aad
push
negl
mov
push
jne
push
outsl
test
and
call
xor
cmp
cmp
jge
push
xor
js
ror
mov
or
cmpsb
pop
sub
sbb
or
fwait
loopne
incl
pushf
rol
mov
repnz
nop
xor
icebp
rcll
sbbl
jno
mov
inc
pop
arpl
int3
shll
sbb
xor
iret
ficoms
imulb
and
test
push
xchg
in
rcrb
test
shlb
inc
iret
jne
mov
pop
mov
pop
xchg
pop
sbb
xor
push
pusha
in
ret
cld
call
push
sub
push
cmp
cltd
mov
xor
inc
lret
cwtl
sbb
mov
out
pop
rolb
arpl
and
pop
xchg
mov
scas
dec
mov
jl
fstl
andl
shll
dec
rcpps
mov
dec
mov
add
xor
pop
or
push
rorb
mov
in
xorb
arpl
jae
ja
mov
xchg
adc
out
jg
aam
push
push
xor
outsl
test
cmp
add
jge
scas
cmp
cmp
subl
popa
pop
or
adc
xchg
adcl
inc
aaa
addb
lods
mov
mov
push
lret
push
xor
sub
das
sbb
add
mov
insl
pop
pop
test
fmull
xchg
dec
pop
sbb
andl
dec
mov
cmc
push
mov
repnz
gs
addr16
mov
xor
dec
popa
mov
inc
push
shrl
imul
sti
mov
movsb
add
adc
cltd
push
fwait
pop
mov
js
pop
outsl
pop
cltd
mov
xor
mov
dec
adc
jl
push
fistps
popa
cmp
sbb
sarb
fldl
mov
popa
stos
inc
pop
xchg
mov
nop
and
xor
add
mov
gs
cmpsb
jecxz
push
jae
leave
lcall
imul
pop
sub
shll
movsl
gs
adc
pop
pushf
jo
iret
or
out
addr16
push
imul
roll
je
xchg
pop
jne
pop
dec
cmc
sahf
sbb
inc
xchg
push
pop
cmp
insl
inc
mov
notl
xchg
inc
and
jge
jae
dec
ja
loop
bound
shl
jecxz
mov
nop
push
cwtl
mov
dec
pusha
rcrb
adc
inc
add
filds
sub
call
arpl
xor
dec
loope
or
ss
mov
mov
inc
scas
sub
pushf
stos
les
dec
push
mov
mov
gs
loop
fiaddl
loop
add
fs
out
call
mov
add
and
mov
daa
push
add
addr16
lock
dec
mov
push
mov
add
xchg
pop
hlt
clc
push
inc
sub
inc
mov
cmp
icebp
mov
outsl
mov
sbb
fimull
popa
sbb
mov
xchg
imul
loope
fldt
xchg
mov
jbe
test
mov
xor
rcrl
mov
ja
and
mov
popa
or
inc
cmp
adc
rolb
add
jne
sub
mov
lods
pop
jae
loop
pop
shrb
lret
jne
cli
xor
pop
adc
lret
lods
je
or
xchg
call
push
and
or
fwait
bound
mov
inc
or
stc
xchg
jno
and
sahf
cmpsb
inc
aas
sub
and
rolb
aad
jns
push
jl
dec
sbb
roll
mov
pop
xor
mov
push
movsb
or
push
test
jne
jmp
jmp
orb
inc
ror
cmp
dec
xor
cmp
add
dec
ja
pop
cmp
dec
adc
cmp
in
pop
cmp
or
xchg
dec
ds
fwait
adc
add
or
cmc
or
mov
aas
mov
jbe
or
lea
push
push
andl
jecxz
addr16
jl
ror
push
inc
imul
inc
sahf
loope
ret
je
and
push
cmpsb
in
sub
outsl
mov
cld
insb
jo
fbld
ret
imul
sbb
xor
hlt
jae
pop
andl
ret
ja
jle
insb
xor
cmp
inc
mov
inc
dec
cmpsl
jg
cmpsb
xchg
jp
test
shl
xlat
push
rorb
inc
insl
repnz
sub
xchg
ja
or
xchg
xor
pushl
dec
jns
dec
jp
mov
mov
movb
mov
push
mov
sub
xchg
mov
es
jp
mov
dec
arpl
push
inc
loope
mov
clc
movsb
je
out
xor
out
xor
loopne
and
test
mov
sahf
push
or
jns
mov
push
cmpl
repnz
in
movsl
sub
daa
fldcw
negl
xor
push
jecxz
mov
in
ljmp
push
jmp
cmc
cs
ret
jno
and
shlb
dec
and
imul
shl
mov
add
push
loop
jge
mov
inc
pop
xor
push
ss
andb
imul
jmp
adcl
mov
movsl
outsb
sub
shl
in
push
push
and
xchg
in
loop
xchg
ds
out
or
adc
and
lock
popf
cs
lahf
stc
cwtl
or
inc
adc
sbbl
dec
sahf
lock
inc
mov
xlat
xchg
mov
xor
imul
cmp
movsl
jno
fistps
adc
imul
sub
xor
fbld
ja
dec
xor
pop
clc
jp
mov
sbb
cmpsl
insb
aad
mov
cwtl
leave
loop
loopne
cmpsb
in
sbb
sbb
push
data16
bound
inc
cmp
pop
inc
xor
mov
jbe
dec
and
xchg
lcall
add
insb
cmp
dec
cwtl
aam
inc
cmp
jnp
loop
aas
imul
mull
jbe
sub
shrl
iret
jo
ret
cmp
inc
pop
movsb
loop
xor
icebp
or
push
pop
hlt
std
in
gs
mov
es
repnz
add
mov
loope
neg
sbb
mov
mov
jb
push
and
fsubrl
inc
jae
push
dec
outsl
dec
jnp
daa
popf
inc
outsb
mov
jo
shlb
push
sub
inc
cs
testb
aas
xlat
push
dec
cwtl
cltd
aaa
rorb
add
push
pop
jmp
jg
into
and
ficomps
mov
scas
sub
mov
fdiv
add
or
shrl
pop
and
in
and
and
in
xor
xchg
push
xchg
lock
pop
rorb
popf
jns
mov
std
mov
lcall
push
sbb
xchg
adc
cs
xchg
inc
push
imul
xor
aad
rol
push
int
sub
int
fwait
inc
outsl
into
and
movsb
test
adc
sbb
mov
mov
lods
push
jae
mov
or
mov
sub
xchg
adc
add
aas
mov
lea
xchg
or
or
out
lods
jae
or
pop
push
test
out
cmp
cmpl
movsl
cmc
xchg
in
nop
xchg
lock
icebp
jl
cmp
pusha
ja
inc
xor
jge,pt
adc
push
cs
xor
cmp
cmpl
cld
scas
frstor
push
jmp
daa
xlat
inc
inc
fldl
xor
push
in
call
gs
adc
sbb
pop
mov
or
pop
ja
iret
and
pop
andb
dec
fs
pop
add
aaa
cmp
sbb
inc
xchg
data16
mov
sbb
sub
mov
cmpsb
insl
sbb
lret
mov
add
movsb
xchg
fstpt
mov
sbb
inc
push
mov
push
hlt
stc
mov
insb
aad
mov
out
cli
xor
and
insb
cmc
pop
and
cmp
xor
mov
hlt
xor
inc
int3
out
aaa
sub
add
and
push
loopw
rcrl
jecxz
movsb
adc
and
mov
nop
dec
and
iret
stc
std
jne
call
adc
test
int
xchg
dec
mov
orl
inc
in
cs
aam
insl
push
aad
push
fs
cwtl
insb
stos
mov
xchg
test
ljmp
dec
adc
out
sbb
pop
dec
clc
sub
xor
jmp
xchg
xchg
push
mov
sti
lret
ss
mov
push
mov
loop
aad
mov
xchg
rolb
add
aaa
shlb
dec
scas
ficomps
mov
pushf
test
jns
mov
xor
xchg
ljmp
ficomps
jl
data16
call
push
hlt
jae
pop
dec
imul
sbb
dec
fldcw
adc
js
into
lock
fmull
ja
scas
outsl
leave
jnp
scas
jp
inc
and
mov
xchg
cmp
or
xchg
cmpl
add
mov
out
or
movsb
fsubrs
mov
aaa
das
idivl
sar
cmpsl
add
xchg
sub
and
shrb
mov
cld
ljmp
sub
cltd
and
jno
push
or
pop
xchg
mov
lahf
sbb
into
xchg
movsb
ja
sub
lods
xchg
test
add
call
sbb
cwtl
mov
inc
xchg
int3
addb
sub
push
rcrl
push
or
mov
nop
roll
loop
into
pop
imul
mov
dec
jb
cmp
jnp
push
mov
fbstp
mov
and
add
mov
cmpsb
movsb
sub
pop
scas
sub
dec
pop
jge
xchg
push
sub
aaa
push
pop
rcrl
ret
pop
add
ja
shll
bound
push
inc
repz
jg
pushl
jo
addr16
mov
enter
push
hlt
jmp
pusha
in
in
idiv
iret
push
jbe
cmp
xor
cmp
add
lahf
mov
pop
fdiv
repz
jge
xchg
loop
shl
xchg
lea
pushl
adcl
add
icebp
cmp
ror
adc
inc
fld
sub
dec
lahf
lcall
test
jnp
mov
add
add
or
les
or
jge
in
add
push
ss
ss
push
cmpsb
je
or
sbb
scas
movsb
lahf
xchg
adc
leave
pusha
jl
sbb
cwtl
cmc
xor
or
inc
cmpl
xchg
clc
adc
test
cli
in
inc
dec
adc
leave
sbb
mov
pusha
sahf
cmp
sbb
movsb
call
data16
sbb
fidivl
jae
stos
adc
dec
and
cmp
stos
add
ds
loop
fldenv
mov
rorb
add
push
adc
cmp
inc
push
mov
testl
adc
fsubp
ja
aaa
push
xchg
inc
cwtl
dec
or
sub
adc
sbb
lret
call
das
icebp
in
cmc
loopne
sbb
add
popf
mov
xchg
and
jle
xchg
out
loop
popf
push
cmpsb
jl
mov
fsubl
nop
mov
loop
sub
sub
loope
pop
sbb
bnd
inc
mov
andl
data16
sub
int
test
movsl
jmp
test
pop
in
jle
aam
mov
dec
dec
jmp
jb
xor
lret
xchg
imul
mov
mov
fimuls
push
ja
pusha
js,pt
lods
pusha
xchg
push
sbb
leave
fildl
imul
fbstp
adcl
push
sub
mov
mov
repnz
pop
mov
mov
cmp
gs
fdivl
outsb
aaa
cltd
cmp
add
aas
jns
mov
aaa
pop
and
xor
mov
aas
adc
dec
cmp
out
lock
ja
sbb
enter
add
enter
clc
or
jmp
add
ret
pop
fidivs
movsl
mov
xchg
xchg
inc
add
push
or
sub
faddp
jns
dec
sbb
roll
add
jo
push
or
mov
adc
pop
decb
stos
inc
jge
inc
daa
xchg
arpl
xchg
sbb
test
add
dec
mov
sub
imul
lahf
jmp
fs
mov
mov
inc
and
xchg
pop
mov
aam
inc
mov
clc
dec
cmpsb
mov
pop
or
adc
push
inc
or
test
jmp
stos
data16
sahf
lret
xor
insb
pop
popf
inc
mov
lea
adcb
outsb
dec
mov
xor
shlb
jbe
or
clc
cmpsl
dec
and
dec
bound
or
and
popf
test
aad
fnstcw
or
sbb
jno
jb
jge
int3
cmc
mov
dec
rcll
out
adc
roll
inc
sub
addb
sarb
jns
sbb
in
cmpsl
sub
and
das
mov
rclb
xor
jmp
je
negl
mov
pop
cmp
mov
repnz
cmp
pop
lcall
enter
mov
jmp
pop
js
and
cs
mov
sbb
xchg
mov
shll
push
test
pop
sbb
lret
sbb
cmp
sbb
stos
adcl
insb
inc
sub
ret
test
enter
or
xor
sub
jne
sub
std
flds
jle
mov
pusha
pop
pop
push
push
je
out
mov
mov
scas
add
push
pusha
cs
pusha
cwtl
adc
roll
add
and
add
dec
sarb
std
lret
out
imul
inc
jns
in
iret
xor
mov
pop
mov
stos
mov
out
mov
push
adc
rorb
out
fcmovu
xchg
jle
out
xlat
bound
pop
test
sbb
mov
xchg
or
pop
stos
into
add
push
add
mov
and
push
lods
insl
rol
push
cli
rcrl
or
shl
pop
or
mov
and
xchg
lods
or
repz
mov
aaa
mov
lods
imul
popf
gs
loop
jno
sbb
dec
aaa
sbb
push
les
lock
adc
in
pop
push
add
push
push
mov
xor
or
or
in
push
aad
cmp
jo
xor
add
add
add
idivb
and
js
imul
iret
inc
jne
ljmp
roll
jmp
jge
mov
out
mov
pop
fmull
cmp
mov
les
lahf
inc
daa
sahf
ljmp
js
jbe
adc
daa
cmc
insl
pop
dec
sub
aam
in
pop
setno
xor
and
jle
dec
lds
test
pop
enter
test
cwtl
sbb
leave
pop
cmp
or
jns
dec
fcomps
sub
sbb
leave
pop
cmp
or
jns
dec
fcomps
sub
sbb
int
cmp
or
dec
call
sub
cltd
mov
js
ret
fnstcw
fidivs
divw
adc
ss
inc
add
addr16
call
cmpl
mov
jo
push
add
jae
arpl
push
or
mov
mov
mov
rorl
in
mov
sub
lock
mov
cmpb
hlt
test
mov
dec
bound
aas
data16
insl
lcall
jmp
xlat
roll
arpl
in
out
mov
loopne
addr16
data16
call
jl
adc
sarl
pop
add
jp
dec
enter
pop
lcall
pop
mov
xchg
ss
add
add
xor
and
xlat
push
sbb
mov
xorb
ja
std
in
fisubs
inc
stos
bound
mov
daa
jae
jae
cltd
test
enter
std
int3
push
shll
and
inc
add
adc
flds
jmp
fnstsw
cwtl
test
pop
addr16
cmp
arpl
push
mov
or
mov
cwtl
lret
in
icebp
or
push
dec
sbb
outsl
push
pop
push
or
imul
ss
mov
cmpsl
iret
stos
js
loopne
pop
pusha
subl
dec
xor
jo
shrb
mov
mov
leave
mov
inc
pop
ret
sub
outsl
jge
sub
push
or
mov
mov
mov
rorl
and
dec
add
jae
arpl
push
or
mov
mov
mov
rorl
jne
outsb
pop
in
je
inc
push
cli
insb
jl
cld
pop
fcos
add
pop
sub
cmp
mov
cs
jne
adc
xlat
xchg
sub
inc
cmp
pushfw
pop
and
out
sbb
mov
xchg
jge
adc
xor
sub
xchg
jp
lcall
call
add
jno
sbb
xlat
sti
and
scas
mov
push
in
inc
jb
xchg
lds
pop
cmpl
or
icebp
mov
lret
jmp
mov
adc
mov
mov
fiaddl
outsb
and
fmul
insl
lret
push
call
xchg
push
ficompl
aad
sbb
scas
jp
mov
mov
scas
sbb
push
mov
aas
loope
out
scas
xor
mov
out
add
sbb
and
rolb
stos
cmp
data16
std
sahf
fldln2
add
out
repnz
inc
loopne
push
inc
and
ret
mov
test
sub
sub
hlt
popa
fcmovb
out
test
daa
pop
lea
cmp
mov
jae
push
cltd
fcompl
daa
dec
jmp
inc
shr
dec
in
call
in
add
lods
xchg
mov
dec
ja
mull
fisttpll
jae
scas
jp
xor
ficomps
xchg
jecxz
sbb
dec
popa
ss
sahf
sahf
cmp
sbb
xchg
js
cmp
mov
sti
dec
push
dec
sarl
push
xor
int3
xorl
mov
jbe
sbb
inc
jb
sub
sbb
mov
push
push
pusha
sbb
xchg
aad
and
aaa
in
xor
imul
out
scas
int3
bound
mov
jbe
sub
push
cmp
mov
ret
frstor
add
testl
xchg
ss
sbb
int3
dec
jecxz
and
jb
loope
je
cmpsb
int3
sub
adc
cmpsl
jle
sbb
pushf
test
loopne
outsb
inc
aad
xchg
pop
xor
or
sbb
pushf
pop
xlat
and
mov
mov
leave
push
ficomps
insb
enter
push
jl
add
pop
imull
mov
mov
popf
adc
inc
xchg
mov
and
mov
movsb
ljmp
pop
push
int3
mov
mov
inc
lods
movd
hlt
addr16
jp
repnz
mov
pop
push
pop
ds
out
arpl
and
enter
pop
shll
roll
pop
mov
inc
pop
fistpll
mov
gs
mov
lcall
repnz
loopne
inc
mov
xor
and
in
push
fisubs
fwait
mov
and
imul
cmpsb
sub
mov
shll
mov
inc
mov
rcrb
sti
fwait
cmp
jl
pop
test
xchg
push
stos
addr16
or
mov
sub
clc
sti
in
push
add
cmp
test
cmpsb
push
mov
pushf
jmp
mov
ljmp
loop
mov
push
mov
addb
jmp
shl
add
jl
test
das
in
int
and
into
ja
fs
jb
push
push
data16
std
fidivrs
iret
xor
enter
and
xchg
mov
pop
test
pop
mov
adc
mov
xchg
mov
sbb
dec
pop
and
sbb
mov
imul
stc
pop
jno
mov
jns
pop
fs
xchg
dec
int
mov
fisubl
jg
frndint
jbe
mov
jg
stos
or
fcoml
or
dec
mov
mov
je
xor
add
and
pop
insl
out
movsl
repnz
or
hlt
rcrb
pop
sbb
mov
inc
cld
cmp
jl
popf
rolb
inc
lods
or
jne
bound
loopne
das
lcall
mov
push
cwtl
pop
jecxz
js
fdiv
add
pop
stos
lock
xchg
ret
mov
jne
addr16
add
adc
stc
jno
ss
push
test
or
insb
aam
shrl
mov
testl
mov
popa
xor
popa
int
lret
push
mov
sbb
rcrl
mov
mov
cmpsl
push
fcoms
mov
in
bound
pusha
lock
fwait
cmp
xchg
ret
decb
cmpsl
outsl
inc
fnstenv
and
push
movsl
cs
jle
inc
test
sbb
push
ja
xchg
icebp
leave
jo
and
movb
adc
sbb
mov
push
mov
cmp
mov
enter
push
lret
push
xor
test
iret
jne
mov
lahf
popf
ljmp
aad
nop
jae
mov
into
scas
pop
xchg
fistl
dec
xchg
popa
test
mov
add
jne
popa
inc
cs
lock
xor
dec
dec
stos
insb
out
dec
mov
lds
lcall
into
push
popa
or
mov
insl
fisubl
cmpsb
dec
sarb
sbb
push
repnz
cli
inc
popf
dec
jge
clc
pop
cltd
fwait
iret
sub
xor
cld
push
mov
stos
xor
neg
xor
mov
int3
mov
mov
ja
in
pop
fwait
push
cmp
mov
fdivs
pop
outsb
cmp
cmpsb
dec
pop
test
leave
pop
in
fmuls
std
add
fldl
or
imul
pop
add
push
jg
mov
add
and
int
pop
fildl
jmp
mov
jg
mov
inc
xor
popa
sub
dec
insb
adc
aam
jecxz
repz
lahf
hlt
pop
sub
xchg
sbb
jns
push
or
mov
mov
fs
fs
mov
stos
rcl
jg
cltd
inc
push
jne
jg
jne
sbbb
jo
leave
out
into
rcrb
push
add
cwtl
sub
into
sarb
mov
sub
inc
or
les
mov
hlt
or
inc
rcll
enter
bound
pop
fidivs
or
imul
sbb
push
mov
movsl
inc
rcrl
sbb
sbb
mov
cmp
idivb
out
push
pop
pop
mov
inc
cmp
je
sub
xor
or
mov
test
ss
adc
bound
mov
incl
outsb
addr16
inc
sub
repnz
add
sbb
dec
sbb
lods
movsl
mov
dec
cmp
loopne
dec
imul
lea
inc
std
mov
arpl
and
outsb
push
shl
cmc
xchg
repnz
push
rclb
popa
xchg
btc
popf
jp
fsubrl
adc
xor
test
iret
mov
rcrl
mov
cmp
repz
jnp
lods
test
mov
xchg
outsb
pushl
add
adc
mov
pop
mov
movsl
test
bound
stos
jp
adc
push
add
inc
push
pop
sbb
pop
jno
data16
test
inc
scas
or
out
jne
insb
jle
out
ds
das
fwait
fs
lds
pusha
xor
ror
outsl
cmp
lret
mov
icebp
dec
mov
sub
and
das
ss
clc
jl
repz
loop
je
int3
pop
push
aam
mov
lret
adc
lock
lods
jle
sarl
imul
sbb
aas
inc
notb
shlb
cld
dec
cmp
jne
out
into
cmp
sbb
int
les
icebp
mov
jp
push
ja
rclb
jne
add
xchg
sti
fidivl
loop
dec
imul
jge
test
or
icebp
or
jl
mov
xor
dec
and
jmp
mov
and
sti
call
sbb
ja
or
int
popa
sbb
and
mov
hlt
sbb
add
ret
aaa
xorb
xor
pop
lret
or
xchg
mov
stos
adc
xchg
dec
lea
pop
test
sub
lods
shll
fistpll
xchg
rclb
sub
in
insl
aam
js
arpl
xchg
out
ljmp
imul
dec
out
inc
scas
mov
arpl
or
sbb
call
xchg
add
lea
and
add
add
push
aas
lahf
push
aam
mov
and
cmp
sbb
loope
aaa
cs
bound
mov
ret
call
lret
int3
jne
xor
lods
pop
lea
movl
cmpsb
outsl
stos
sar
adc
pop
pop
lret
scas
jmp
bound
into
les
stos
xlat
cmp
mov
adc
sub
mov
inc
test
outsl
jns
push
sbbl
lock
pop
lds
mov
pop
aam
mov
mov
sub
mov
das
int
imul
es
ljmp
inc
hlt
xor
xor
out
xchg
sbb
cmp
addr16
mov
nop
mov
or
addr16
cli
out
jns
popf
not
cmp
into
jnp
jmp
jp
mov
aam
mov
mov
aaa
loop
loope
popa
test
repnz
inc
jb
sbb
repnz
push
pop
cmp
jne
fnstcw
in
popa
jb
lds
pop
shll
xor
cmp
push
pop
push
repnz
jns
addr16
lcall
and
mov
xchg
adc
jbe
sbbb
insl
mov
in
jnp
mov
addb
jo
push
xor
mov
or
push
dec
scas
dec
push
fwait
push
sub
int
rolb
ret
xor
or
addss
inc
inc
and
or
cmc
or
pop
jp
ljmp
jne
or
jo
adc
mov
adc
in
xchg
add
dec
int3
jecxz
add
shrl
sub
in
pop
push
mov
mov
jo
and
loopne
xchg
inc
mov
sti
adc
mov
mov
arpl
cmpsl
cmp
icebp
fimuls
and
mov
scas
lret
jnp
es
jbe
leave
cli
dec
ja
shrl
mov
push
ljmp
jo
inc
jbe
jge
sub
mov
in
negb
aad
dec
xor
jo
lahf
pop
push
in
cmp
data16
cmp
and
in
cwtl
mov
push
xchg
movsb
add
mov
add
stos
xchg
cltd
inc
mov
push
mov
xlat
push
pop
out
sbb
je
in
in
in
mov
cli
push
mov
out
adc
clc
cli
sub
jle
js
test
add
int3
xchg
outsb
lret
pop
mov
cmp
je
push
mov
adc
sub
push
cli
arpl
out
sbb
test
inc
adc
sub
clc
and
xor
xor
shl
pop
negl
ret
jmp
aas
jno
es
xlat
adc
push
pop
imul
scas
pop
dec
or
cmc
call
ljmp
ja
aas
push
mov
call
in
pusha
int3
cmpsb
xchg
mov
sub
fsubs
xor
cmpb
ficomps
xlat
insl
adc
sbbb
dec
fnstsw
test
dec
mov
cmp
xchg
mov
jmp
ja
jmp
sbbb
sub
imul
ret
cmp
add
repnz
sub
jle
add
fincstp
xor
lahf
test
pop
xchg
xchg
outsb
clc
data16
lds
mov
in
jo
ja
lahf
orl
push
mov
jg
sbb
stos
ret
fisubrs
in
jne
jp
inc
fnsave
lods
hlt
insb
out
jns
es
lea
sub
inc
cmp
adc
lods
imul
inc
cmp
es
pop
enter
pop
mov
outsl
mov
push
insl
daa
or
imul
adc
push
ss
andb
rorl
sub
fnstenv
fidivrs
push
in
sti
lds
and
cmovge
jle
cmovl
hlt
add
push
pop
std
xchg
inc
push
jns
iret
push
insl
fstpl
pushf
push
push
std
sub
add
xchg
je
cltd
fildll
inc
sub
cltd
mov
cmpsb
cmpsb
and
pcmpeqw
pusha
jb
cs
sub
sbb
sbb
xchg
int3
lods
aas
adc
cmc
cmp
mov
cmp
sub
inc
cmpb
mov
mov
sub
mov
in
outsl
div
mov
mov
pushf
mov
push
mov
add
dec
filds
mov
pop
ret
sbb
es
push
pop
gs
pop
push
shlb
sar
leave
fiadds
fsubrl
mov
dec
scas
xchg
lods
cmp
ret
jmp
or
in
lcall
add
test
arpl
xor
sub
mov
jmp
cmpl
xorb
cmpsl
xchg
ljmp
sbb
pop
lret
sti
in
dec
arpl
out
pop
mov
mov
mov
loopne
mov
add
lock
or
fdivrl
sbb
xchg
lahf
lret
insb
bound
jns
sbb
mov
gs
or
dec
rcll
push
call
aas
mov
jb
mov
mov
bound
mov
stos
jno
dec
adc
mov
aas
test
out
push
mov
and
out
xor
jp
aad
jmp
aas
cltd
sti
mov
push
or
sbb
shl
jb
cmp
int
popa
sub
repz
aas
push
push
push
mov
push
hlt
push
or
out
mov
push
mov
push
aam
cld
std
cli
xor
dec
adc
les
cmc
js
popa
mov
rorb
loope
cmp
mov
xor
ret
ljmp
jno
xchg
mov
jmp
lahf
insl
mov
addr16
jae
into
mov
or
adc
fadds
ficoml
fwait
mov
lret
ja
test
movsl
mov
cmp
adc
jg
imul
in
shll
cmp
das
pop
cmp
add
mov
nop
les
sarl
push
push
add
or
sub
arpl
cmpsl
add
push
mov
bound
out
and
sub
rcl
bnd
inc
imul
mov
out
movswl
andb
in
add
adc
xor
aam
cmp
mov
leave
orl
inc
mov
in
ljmp
pop
mov
jne
and
xchg
push
push
stc
dec
loopne
pop
and
mov
int3
andl
mov
adc
cmpsl
mov
cltd
daa
inc
aad
pop
nop
in
cmp
xchg
pop
lds
rcrl
or
std
pop
mov
adc
jns
dec
lods
pop
in
test
sub
das
mov
shlb
incb
stos
or
jns
and
aaa
xor
adc
xlat
lret
adc
lea
sbb
pop
mov
das
inc
adc
mov
sti
and
mov
leave
test
and
inc
fdiv
and
push
jae
cmp
in
cwtl
dec
cmpsl
repnz
push
fsub
pop
mov
pop
movsb
out
les
push
clc
inc
hlt
mov
loopne
add
imul
mov
pop
add
test
jg
ds
pop
push
lret
aaa
jbe
sub
add
and
jg
push
mov
stos
hlt
pop
loopne
lahf
test
lahf
sub
lret
movsb
out
xor
mov
sarl
shll
sar
in
and
dec
add
mov
mov
es
incb
mov
imul
or
adc
iret
test
js
mov
lahf
inc
jns
or
add
adc
or
xlat
daa
jp
push
mov
aas
hlt
cwtl
enter
inc
lret
mov
sbb
push
inc
mov
test
xchg
jnp
imul
sbb
int3
pop
jp
mov
xchg
scas
in
imul
and
ffreep
lods
mov
jge
cmp
enter
fisttpl
lcall
pusha
push
and
cmpsb
in
mov
lods
mov
fwait
in
xor
test
pop
test
faddp
adc
mov
std
cmp
xlat
in
sti
xchg
pop
addr16
or
fbstp
cmp
dec
push
cmp
bound
out
jmp
in
ljmp
sbb
mov
andb
movsb
repnz
enter
mov
cwtl
jmp
fs
mov
xor
mov
fsubr
lcall
sbb
test
mov
mov
mov
push
call
arpl
inc
cmp
mov
out
mov
pop
xchg
fimull
jp
data16
in
out
cs
push
adc
in
or
push
sbb
pop
leave
xor
pusha
adcl
mov
push
icebp
fidivs
test
stos
mov
xchg
xchg
push
jcxz
js
mov
repnz
and
adcb
in
add
fisubrl
imul
jge
cmp
dec
fistpll
movsb
or
push
push
cmc
add
sahf
psubsb
push
sub
rclb
add
mov
cmp
test
test
sub
adc
loopne
dec
mov
in
mov
mov
mov
jo
sahf
ret
xlat
push
fiadds
sti
cli
sbb
inc
and
fimull
add
mov
push
inc
insb
loopne
sahf
lods
inc
lret
xchg
loopne
orb
dec
add
aas
std
dec
cmp
mov
arpl
das
and
clc
shll
aad
push
ret
shrb
pop
adc
pop
mov
shlb
jo
movsl
es
fldenv
lcall
pop
jle
lret
jl
adc
jmp
rol
mov
sbb
gs
aaa
ret
or
out
scas
sahf
mov
outsl
mov
add
lret
and
je
push
adc
pop
and
adc
ja
out
fcmovne
fwait
imulb
iret
pop
and
mov
jmp
sbb
loop
aad
xchg
pop
outsb
mov
sub
inc
adc
sti
iret
push
addr16
xlat
les
test
xlat
je
test
hlt
or
jbe
leave
in
int
jbe
push
push
loop
pop
jmp
dec
aaa
adcb
adc
mov
and
fisttpl
push
mov
or
pop
pop
xchg
or
movsl
insb
cs
sbb
xor
mov
lods
iret
sub
sub
es
adc
inc
cmp
lea
cltd
aad
movl
push
adc
ja
jno
rclb
mov
cmp
std
mov
test
adc
addl
mov
adc
mov
xchg
ret
push
sbb
loope
jae
adcb
jb
push
insb
push
mov
loopne
mov
add
in
xor
pop
mov
adc
mov
mov
inc
movsb
sub
sbb
shl
cmp
jge
call
dec
cld
fstpt
xlat
mov
sbb
lahf
adc
push
popa
test
rclb
mov
adc
sub
lcall
adc
aaa
xor
cmp
dec
mov
mov
xor
adc
test
in
mov
and
sahf
pop
lcall
shll
xchg
int3
out
popf
mov
test
les
cld
sub
adc
mov
loopne
jo
outsl
arpl
aaa
adc
xchg
mov
outsb
cmp
xchg
sarb
xchg
mov
lods
movsb
repz
dec
leave
mov
lret
inc
push
test
movsb
ror
mov
shrl
cmp
and
push
popf
ljmp
mov
cwtl
jae
clc
sti
inc
shll
inc
jp
imul
jo
xchg
lds
xor
loop
jns
nop
sbb
add
iret
jcxz
es
sub
rcll
int
jbe
es
push
sbb
xor
in
enter
mov
pushf
cmp
or
sub
mov
and
cmp
adc
sbb
mov
popf
jb
pop
daa
adc
and
or
ret
push
aad
cmp
adcb
mov
dec
or
inc
mov
xchg
jge
test
popa
pop
pop
xchg
xchg
push
xchg
orb
sbb
dec
push
fs
repz
mov
insb
mov
add
pop
lods
push
movsl
lret
ja
popa
fcomi
adc
jne
movsb
inc
mov
test
lret
repnz
inc
mov
xchg
pop
lret
mov
jp
adc
negb
mov
lahf
stos
push
xor
outsb
das
mov
mov
dec
cmp
movsl
pop
or
fcmovnb
das
xor
xor
jecxz
mov
cltd
mov
stc
inc
sbbb
data16
enter
mov
fidivrl
not
icebp
mov
inc
idivl
addr16
sarl
add
add
push
sub
cmp
mov
mov
sbbl
adc
xlat
push
push
jmp
push
add
jae
arpl
push
or
mov
mov
mov
rorl
and
dec
add
jae
arpl
push
or
mov
mov
mov
rorl
sub
cmp
or
push
or
mov
cmpsl
rcll
mov
pushf
fidivrl
shl
pusha
inc
cmp
arpl
rorl
or
enter
and
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
js
mulb
mov
aas
adc
xchg
decb
pop
add
add
add
or
push
add
pop
add
and
filds
out
outsb
add
sub
add
out
jne
inc
add
jle
insb
add
add
add
or
inc
add
add
add
add
add
add
jo
and
add
add
add
add
add
add
pusha
add
add
add
add
aaa
add
adc
adc
add
add
add
push
add
add
add
mov
mov
mov
aaa
add
add
sahf
add
add
add
mov
jecxz
push
add
int3
add
add
add
add
out
add
add
add
add
mov
add
add
add
add
out
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
and
insb
add
movsb
add
add
add
add
add
add
add
add
sahf
add
mov
add
add
add
add
add
add
add
jo
stos
add
repz
add
add
add
push
repz
add
addl
aad
movsb
add
add
add
adc
add
add
add
add
pop
add
add
and
jge
mov
add
add
add
add
addb
add
add
add
add
add
add
add
jl
pop
add
mov
mov
adc
mov
add
add
inc
add
add
jo
sub
add
add
adc
in
add
arpl
int3
add
add
add
add
add
add
mov
push
add
add
pop
add
add
add
add
sbb
adc
mov
verr
jge
and
out
cli
add
add
add
addl
addl
imul
and
mov
add
add
jge
lea
or
leave
add
add
add
push
add
int3
add
add
dec
add
add
add
add
add
ret
add
movsl
add
add
int3
add
add
jg
inc
add
dec
add
sub
jo
xchg
add
inc
add
add
lret
add
jne
dec
add
add
add
rolb
add
add
and
add
add
add
add
and
add
cmp
data16
jne
dec
push
imul
ret
add
add
add
or
dec
add
fiaddl
lea
imul
int3
add
jns
roll
jge
imul
loopne
int3
add
add
popa
add
add
add
add
add
add
add
add
add
add
int3
add
filds
out
ret
add
add
add
add
add
add
int3
add
add
out
add
add
add
data16
add
dec
add
add
flds
jnp
or
int3
add
add
add
add
add
push
add
add
movsl
add
add
add
xchg
lret
gs
int3
hlt
clc
js
pop
pop
cwtl
shll
xor
inc
xchg
icebp
cmpsl
lahf
mov
push
lcall
ret
dec
dec
xchg
fwait
enter
imul
ja
lahf
and
rcl
bound
sbb
out
outsb
mov
cmp
mov
fs
mov
push
jmp
in
adc
xchg
mov
adc
push
repnz
test
bound
xor
sub
bound
cwtl
mov
lret
orb
mov
ret
add
sub
mov
push
add
loopne
mov
sbb
jno
je
push
aam
push
leave
outsl
jp
jle
jae
xor
out
orb
mov
jne
jae
inc
and
cld
jmp
xchg
mov
add
xlat
pop
scas
xacquire
leave
insl
data16
addb
fwait
aaa
sub
cmp
pop
mov
int
and
mov
outsb
into
sbb
push
outsb
outsl
lret
jp
test
in
not
sbb
inc
cmpsb
xchg
pop
bound
mov
pop
mov
jl
movsl
sarb
cmp
in
add
test
fldl
in
pop
inc
sub
inc
sahf
nop
fwait
add
pop
push
adc
xchg
and
add
lock
fwait
sub
sbb
or
pop
xor
adc
and
lds
je
orb
jge
dec
or
lods
rcr
mov
in
popf
mov
mov
jp
mov
sti
adc
jns
repnz
add
jns
out
stc
jne
lods
or
mov
dec
scas
mov
or
xchg
adc
xchg
or
cmp
add
lea
fbld
add
fadd
xchg
sub
push
xchg
loop
sub
test
xor
icebp
pop
enter
mov
xor
loope
test
in
movsb
push
cmp
and
add
adc
enter
aam
stc
mov
jmp
test
jl
jmp
mov
cs
dec
mov
mov
out
sti
jmp
push
popf
and
and
jge
jmp
xchg
and
daa
pop
pop
fcomps
std
jp
xchg
shll
int
iret
cmp
in
test
add
mov
pop
ret
ret
jne
xor
out
aad
push
movsb
dec
aaa
add
popf
adc
out
cmp
push
cbtw
or
nop
cld
shl
les
out
rolb
push
in
mov
add
inc
fmul
inc
sahf
sub
jecxz
movsb
divb
and
ljmp
movsl
cmpsl
xchg
jne
cld
ja
dec
inc
leave
mov
push
insl
push
jb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
