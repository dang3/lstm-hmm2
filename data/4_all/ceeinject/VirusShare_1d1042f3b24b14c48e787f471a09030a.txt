adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
clc
and
adc
add
cmp
inc
sub
xchg
js
sub
js
or
sbb
pushl
clc
and
adc
add
push
cwtl
daa
bound
lcall
rcrb
ret
loope
rclb
rolb
jb
bound
mov
andl
jne
jnp
jno
cwtl
jle
push
test
addr16
lea
xor
leave
pop
jnp
xchg
add
jne
enter
outsl
bound
js
push
enter
pop
mov
push
xchg
xchg
loop
mov
gs
loop
rcrb
out
mov
subl
cmpsl
jge
or
fisttps
cmp
push
push
lea
bound
cwtl
mov
dec
push
add
lods
loop
add
icebp
ret
pop
fstl
stc
js
cwtl
add
mov
insl
pop
addb
loopne
or
xor
lods
push
or
fdivs
cmpsb
mov
pop
jge
jecxz
mov
rcrb
cmp
enter
mov
push
addl
xchg
inc
xorb
and
or
add
push
mov
push
mov
cmc
ss
js
cmp
ss
xchg
mov
clc
dec
lods
pop
fisubl
xor
daa
in
js
or
xchg
dec
je
mov
xchg
xorl
jp
inc
mov
inc
push
xchg
pop
subb
cmp
or
sbb
call
adc
add
push
cwtl
inc
push
xchg
pop
subb
cmp
or
sbb
call
jge
lds
add
or
and
xchg
pop
imul
decl
cmp
ljmp
les
adc
incb
ja
daa
fldl
sbb
lahf
adc
pop
xchg
inc
mov
cld
inc
popf
addr16
xchg
int
lock
push
test
icebp
pop
mov
mov
lods
pop
xor
movsl
adc
flds
cmp
jo
mov
rcrl
mov
inc
fcoms
lcall
sti
iret
test
enter
std
mov
adc
sarb
je
sub
push
out
dec
scas
loopne
and
in
or
sub
mov
inc
sbb
insl
mov
mov
inc
sub
lret
sbb
mov
mov
jle
aas
das
jb
sub
test
mov
icebp
mov
shll
jbe
out
mov
xchg
inc
es
js
mov
and
dec
in
push
outsb
adc
lds
push
faddl
cwtl
sub
xlat
lret
cli
cmp
dec
out
rcl
pop
outsb
popf
cmp
push
and
mov
mov
pop
pop
mov
imul
adc
mov
dec
pop
dec
push
push
jns
and
adc
sub
pop
idivl
into
push
arpl
inc
loopne
cwtl
sub
icebp
orl
jnp
push
scas
xor
in
lods
cltd
int
jp
jbe
std
xchg
out
loop
xchg
out
insl
cmp
shr
mov
inc
mov
add
sbb
cld
addr16
daa
mov
push
rol
ja
hlt
mov
incb
inc
add
pop
xor
sar
adc
fpatan
daa
adc
inc
mov
lret
ficoml
popf
dec
nop
fdivs
or
daa
inc
adc
iret
psrld
arpl
or
xchg
push
cmp
lea
pop
mov
into
in
jecxz
testb
sbb
fisttpl
and
sti
lods
xor
leave
adc
pop
int
paddusw
adc
xchg
fsubs
push
adc
fdivl
inc
into
mov
loop
cmp
jl
adcl
lods
add
pop
fidivrs
add
ja
sbb
and
ret
shll
out
jp
cmp
push
or
cmpl
cwtl
stc
int3
shr
ret
push
fisttpll
push
in
cmc
dec
ds
cmc
sbb
jne,pn
mov
jne
inc
sub
das
fisubrl
and
cld
sub
pop
roll
jnp
adc
divl
inc
fistl
pop
jge
loopne
insl
int3
out
pop
ret
dec
and
add
icebp
inc
xor
jae
data16
and
test
push
int3
mov
dec
xchg
movsl
ljmp
hlt
xchg
pop
add
push
adc
scas
fwait
and
out
mov
insb
xchg
out
test
mov
mov
jae
ds
fstl
clc
insl
rcl
and
sbb
sar
sarb
cmpsl
out
repz
push
and
shll
hlt
into
mov
cmpsl
dec
xchg
loop
mov
movsb
dec
and
rcr
jp
sub
stc
sub
and
ficompl
std
cld
adc
jb
inc
mov
stc
push
mov
pop
pushf
mov
seta
dec
rclb
fwait
inc
pop
push
push
mov
outsb
mov
rcr
icebp
mov
sarl
or
popa
cmpsb
mov
mov
cmp
icebp
jnp
in
xor
mulb
and
jg
cwtl
rdtsc
jb
into
cmp
nop
xchg
imull
jo
push
jge
and
mov
add
jl
cmc
mov
int
inc
pop
hlt
inc
push
xor
add
sub
fsub
add
jl
int
jns
mov
xchg
add
push
movsl
into
inc
xor
add
cld
jo
insl
sbb
test
and
mov
fsubrl
in
push
stc
xchg
call
dec
and
mov
icebp
xor
push
cld
xchg
stos
out
sub
push
lods
or
mov
mov
inc
movsl
push
cmp
ss
jbe
fwait
jp
or
xor
lcall
data16
add
jo
mov
inc
ja
js
jae
cmp
fwait
mov
jne
sub
insb
sbb
sub
push
add
test
xor
cmp
arpl
jnp
cmpsl
in
lds
repnz
je
jbe
mov
enter
xchg
or
sbb
in
dec
enter
test
adc
lea
je
les
mov
jl
test
jns
fwait
push
mov
addr16
inc
out
repnz
adc
sbb
or
ja
das
lahf
lods
push
add
or
pop
mov
jmp
mov
push
ljmp
pop
push
mov
sub
cmp
pop
or
sub
sbb
lea
lret
pop
and
mov
xchg
sbb
cld
ss
jmp
lea
inc
ss
lahf
stc
imul
dec
cli
mov
popf
test
dec
mov
mov
or
xlat
test
jl
jno
enter
pop
mul
imul
xchg
pop
jg
add
and
push
je
lahf
sahf
mov
xlat
pop
rolb
aas
cmp
mov
pand
mov
lcall
mov
int
fmuls
in
clc
aas
adc
jbe
jb
ja
repnz
mov
xchg
mov
dec
fucomp
mov
ds
mov
cmp
cmpsb
add
mov
mov
pop
xor
cmp
jb
fistpll
in
data16
fs
arpl
mov
jmp
push
add
cmc
ja
push
xchg
inc
pop
xor
adc
jae
mov
mov
aas
lea
lahf
into
inc
hlt
mov
shlb
add
cwtl
pop
mov
cmpsl
mov
clc
mov
push
loop
lea
mov
cs
lea
loopne
ret
sub
xor
sub
push
pop
lds
cs
xchg
push
jne
and
cmp
mov
mov
out
pop
std
jge
jno
pop
cmpsb
inc
push
jae
dec
mov
add
bound
stc
push
subb
imul
xor
rolb
inc
mov
hlt
mov
inc
insl
xchg
push
fimull
cmp
test
adcb
enter
insb
cmc
mov
sub
push
and
xlat
xor
ror
jno
xor
out
mov
insb
adc
xchg
mov
les
jns
scas
rol
das
dec
repnz
les
aad
fildl
subl
fidivs
xchg
lds
pusha
popa
jl
push
pop
sbb
loop
xchg
sbb
pop
aam
shl
cmpsb
bound
std
sti
mov
sbb
stc
mov
pop
mov
pop
leave
mov
add
mov
aaa
lahf
js
fmull
push
les
pop
sub
cmpsl
lods
cli
jne
divb
rcrb
loopne
cmp
enter
insb
push
stc
fs
add
sbb
pop
scas
jne
fwait
dec
xchg
jno
cmp
add
mov
xor
xchg
cli
jecxz
sub
cmp
xchg
xor
imul
das
mov
fcoms
inc
in
mov
sbbl
jle
mov
incb
scas
or
ja
pushf
out
call
inc
pop
jp
out
jge
arpl
and
movsb
insl
aad
pop
add
adc
sub
out
pop
loop
sbb
das
mov
into
xchg
or
lcall
push
cmp
aam
int3
xor
lea
lgs
ja
arpl
ds
cwtl
rcrb
sti
stos
mov
dec
jno
sbb
mov
cmp
jno,pn
and
push
mov
into
cmp
dec
xchg
inc
cmp
icebp
mov
stos
bound
xchg
sub
std
adc
in
push
stos
mov
jl
xchg
xlat
cmp
cld
test
stc
ja
xchg
pop
fimuls
push
inc
fs
cmp
stc
lahf
enter
jle
xor
loopne
cltd
inc
push
jmp
sub
aad
xchg
or
cmpsb
lds
xchg
jnp
sbb
xchg
mov
mov
test
fimull
dec
loopne
bound
pusha
pop
in
es
lea
and
mov
sub
lods
or
hlt
outsl
push
scas
push
das
lret
adc
pop
pusha
les
xlat
jb
mov
jle
adc
mov
arpl
fbstp
mov
sub
sub
xchg
jmp
sub
pop
data16
and
lods
pusha
xor
imul
je
inc
xchg
lea
ss
test
pop
addb
xor
adc
dec
pop
sti
insl
push
or
stos
leave
mov
add
mov
cli
sbb
push
lds
shll
xchg
ljmp
pop
xchg
push
sub
jmp
outsl
sarb
jp
xchg
icebp
cmpsb
imul
dec
mov
sbb
ss
ljmp
out
ret
mov
dec
std
mov
push
xchg
cmp
adc
arpl
lods
lods
shlb
ret
les
sbbb
push
mov
fwait
jnp
dec
sbb
popa
dec
mov
sbb
mov
loope
pop
icebp
outsb
roll
cs
add
dec
jmp
repnz
jnp
lock
mov
inc
notb
xchg
and
into
mov
xor
jno
mov
js
cmp
movsb
test
mov
pop
xchg
jp
jnp
inc
sub
das
mov
or
push
testb
jne
xchg
jl
sub
aas
sti
lahf
or
mov
in
jne
sub
sbb
xor
jbe
sahf
pop
stos
lret
and
es
lods
jge
add
mov
and
pop
and
fnsave
sbb
mov
repz
lret
insb
push
inc
pushf
cmp
cmpsb
sub
xor
dec
ds
js
jo
pusha
incb
cltd
dec
mov
popa
outsl
addl
data16
cmp
or
cli
dec
fmull
jnp
fwait
mov
lods
pop
movsb
test
fs
pop
dec
pop
out
insb
ret
call
lahf
inc
pop
inc
push
dec
xchg
in
push
xor
dec
cmp
pushf
mov
inc
pusha
dec
and
mov
push
jno
add
xorl
pop
int3
sub
and
lods
adc
call
add
inc
dec
lret
shr
xor
inc
push
imull
jno
test
lahf
fs
call
jecxz
les
or
jp
xor
sahf
dec
pop
movsl
in
pop
sub
pop
add
insb
add
push
outsb
xor
jno
xchg
lods
stos
and
add
pop
xchg
lcall
add
insb
inc
divb
dec
mov
fstpt
stc
dec
arpl
mov
mov
mov
pop
add
xchg
jmp
loopne
mull
je
scas
test
pop
xor
mov
xlat
cmpsl
leave
in
dec
je
jo
loope
mov
mov
jae
cmovo
or
imul
cmp
shl
jge
push
iret
mov
push
and
nop
pop
into
sub
lods
ja
std
loopne
cmp
js
add
pop
mov
jmp
mov
xchg
mov
pushf
jae
push
dec
xchg
push
mov
lds
stos
cltd
sub
scas
decb
push
mov
cwtl
sti
xor
sub
shll
cltd
addb
lods
xchg
jg
xor
das
sbb
inc
xchg
mov
mov
and
jge
stos
xor
push
addr16
add
out
popf
adc
cs
mov
sub
mov
mov
les
lret
fisttps
test
xor
fildl
imul
inc
cwtl
rorl
mov
jg
insl
test
jl
dec
cli
dec
add
push
cmp
sub
push
in
and
jmp
push
xor
int
or
stc
jb
and
frstor
push
lea
mov
pop
pop
inc
cltd
pop
pushf
push
icebp
mov
mov
repz
mov
ja
pusha
inc
loopne
shlb
insl
inc
ror
push
push
loope
sbb
std
sbb
stos
call
or
dec
fcoms
aaa
das
sbb
mov
pop
cmpsl
pusha
pop
cld
adc
add
imul
jmp
outsb
mov
mov
idiv
repnz
push
sub
enter
pop
sub
cmp
test
rdtsc
popa
lock
rcrb
hlt
mov
sbb
dec
xchg
test
sub
lcall
or
insl
pop
and
inc
mov
cmp
inc
cmp
jno
js
test
clc
int3
sbb
lock
es
or
sarb
fs
cmp
dec
pop
divb
imul
xchg
int
in
mov
and
pushl
jno
ljmp
fidivl
cmp
fucompp
push
or
dec
lea
mov
dec
leave
sub
cmp
pop
xchg
jmp
sti
scas
lods
mov
adc
jbe
sbb
insl
nop
or
xchg
dec
int
xor
sarl
sti
mov
sub
aas
leave
sbb
xchg
stos
lret
jle
pop
jne
xchg
stos
dec
or
mov
jae
push
mov
mov
push
imul
out
stos
test
inc
and
daa
ds
data16
clc
jmp
inc
nop
iret
push
cld
loope
stos
pop
cmpsl
loopne
stos
cmpsb
outsb
js
adc
and
and
test
push
scas
iret
fcoms
ror
bound
std
stos
leave
cmc
sub
leave
adc
push
int
or
pop
and
xchg
negl
and
movsl
outsl
repnz
push
adc
lahf
rol
xor
cmpsb
lods
dec
sub
pop
sbb
jle
test
xchg
call
cmpsl
cmp
mov
daa
popa
mov
pop
adc
inc
insb
lods
adc
fldenv
fyl2x
pop
fdivs
movsb
xchg
sbb
ja
sbb
push
jo
xchg
jmp
pop
outsb
adc
sub
iret
inc
mov
mov
stc
jl
out
mov
jb
sbb
scas
pop
stos
xchg
xor
iret
arpl
add
add
mov
aaa
xor
lcall
movsl
push
xchg
mov
pop
je
mov
inc
jge
bound
call
mov
sbb
ret
fucom
sub
sbb
jne
fidivrl
sbb
pop
stos
add
add
fadds
into
mov
adc
mov
jge
mov
roll
xchg
fsubrs
outsb
pop
or
rcl
shl
jmp
xor
lock
pusha
mov
mov
jb
adc
jae
adc
push
insl
rorb
xchg
stc
cmp
xor
mov
jecxz
push
je
aad
cmp
lcall
mov
inc
sub
push
mov
add
mov
imul
jl
mov
xchg
idiv
adc
mov
jge
and
inc
cmp
jno
mov
std
jle
dec
fimull
xor
cmp
mov
pop
test
das
mov
jmp
movsl
cmc
inc
loope
test
sub
sub
addr16
fnstcw
xor
aaa
enter
pop
adc
mov
pop
jbe
push
mov
adc
adc
and
lcall
dec
out
mov
pop
adc
add
imull
cltd
sahf
lods
lret
int3
mov
jecxz
mov
inc
adc
dec
addr16
sbb
fmuls
fidivs
mov
std
popa
sbb
lock
stos
leave
lcall
xchg
gs
jp
aad
test
pop
aaa
mov
mov
mov
and
dec
inc
mov
cmp
sub
movsb
call
mov
pop
dec
cmpsl
out
stos
roll
pushf
ljmp
out
shll
arpl
jae
dec
arpl
outsb
popf
push
cmpsl
and
jae
xor
sti
insl
sbb
imul
scas
and
es
arpl
cmp
in
sbb
mov
repz
cli
idiv
insb
jno
shr
out
push
shl
inc
sbb
adc
cli
push
aas
pop
outsl
repnz
clc
xchg
jns
out
fucomip
jo
ljmp
scas
int
and
fildll
repnz
mov
sbb
mov
cmp
enter
lret
mov
adc
lret
movsl
add
mov
scas
inc
loopne
cmpb
dec
daa
stc
fdivrl
insl
outsb
push
aam
icebp
cmp
sbb
pop
ja
and
orb
push
mov
dec
adc
fs
jle
mov
cmpb
xchg
add
sub
sbbl
shl
fwait
mov
lock
test
and
pop
in
fsubl
into
nop
mov
xor
div
jb
cmp
adc
shll
push
sbb
add
sub
mov
icebp
push
cs
out
enter
add
push
or
mov
lcall
add
imul
les
cld
scas
mov
cmc
push
sbb
mov
push
or
repz
in
rclb
nop
je
jge
nop
subl
scas
in
xorl
mov
es
ljmp
and
call
mov
iret
mov
pop
jge
hlt
outsl
scas
mov
and
aam
nop
nop
outsl
xchg
shll
mov
xchg
jnp
sbb
add
push
bound
pop
loop
mov
or
ljmp
or
xor
stos
fisttpll
lods
lret
loopne
loop
inc
mov
mov
cmp
dec
mov
ds
shl
mov
cwtl
adc
out
cltd
and
cld
ds
sub
incl
mov
icebp
push
mov
pop
xor
lcall
jp
rclb
sub
push
or
mov
pusha
jge
mov
push
icebp
fbld
mov
lods
popa
xchg
mov
cld
mov
cmp
cwtl
mov
cmp
mov
mov
dec
les
push
ds
insl
sbb
or
neg
stos
xchg
rol
inc
loope
sub
das
es
inc
jb
adc
inc
movsb
or
jno
push
es
insb
mov
jge
lds
fwait
xorb
stos
sub
mov
mov
pop
sub
lea
inc
jp
cltd
jae
sbb
push
adc
xor
cli
jns
mov
out
outsb
mov
stos
push
inc
mov
cmp
dec
pushf
xlat
in
ret
ret
xchg
lods
insb
adc
fsubrs
xlat
shlb
lods
mov
and
inc
insl
or
dec
movsl
and
outsl
lods
inc
add
dec
jbe
adc
pusha
push
adc
sbb
mov
sub
iret
jne
repz
pushl
dec
push
pop
stos
push
shll
xchg
imul
sbb
sub
add
nop
dec
cmp
popf
push
cli
cmpl
adc
add
cltd
push
mov
clc
fcomip
dec
repz
dec
pop
in
shrl
mov
inc
out
fwait
push
xor
add
cmp
andb
adc
stos
sub
cmp
mov
int
pushf
and
or
adc
sub
out
rolb
xlat
aas
mov
xchg
stos
jne
xor
insl
popa
shl
shlb
lahf
lods
mov
push
xlat
popa
jp
push
xorl
push
lds
jnp
pop
mov
mov
cld
das
pop
lods
inc
mov
ss
add
out
pop
insb
popf
pop
inc
cmp
xchg
xchg
repz
lret
inc
cmp
shl
repnz
or
xor
pop
icebp
leave
fidivs
pop
xor
jne
ljmp
mov
xor
mov
addr16
mov
outsb
push
xchg
or
test
dec
fdivrs
mov
mov
shr
mulb
add
mov
daa
jo
out
into
jns
out
cli
xchg
mov
or
jb
stos
mov
push
inc
insb
lods
jmp
add
out
popf
mov
out
or
rsm
xchg
mov
cmp
xchg
inc
cli
and
movsb
clc
adc
mov
test
or
enter
sbb
stc
push
add
adcl
xor
clc
mov
cmpsb
hlt
sub
bound
add
shlb
pop
into
jns
sbb
xor
xchg
add
inc
sub
pushf
cmp
adc
in
iret
xor
xchg
sbb
jno
call
stc
pop
cmpsl
push
dec
enter
lea
iret
cmp
adc
pop
xchg
cwtl
push
adc
push
stc
scas
test
pop
cmc
inc
lock
jp
jl
movsb
cmp
push
cs
lods
mov
aas
mov
or
dec
icebp
fs
pop
xor
ror
cmp
ret
push
popf
jg
add
andb
scas
push
enter
fadds
test
mov
inc
push
xchg
pop
subb
cmp
or
sbb
call
adc
add
push
cwtl
inc
push
xchg
pop
subb
cmp
or
sbb
call
adc
add
push
cwtl
inc
push
xchg
pop
subb
cmp
or
sub
fdivl
int3
and
adc
add
push
sbb
loop
pop
cmc
pop
jp
sbb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
call
loope
icebp
cmpb
cld
jp
insb
mov
je
push
fnstenv
popa
mov
and
rcrl
dec
icebp
cmp
or
clc
dec
call
jno
jae
adc
fsubrs
pop
stc
dec
jmp
sbb
call
add
dec
shll
out
or
sbb
jecxz
cmp
fwait
jmp
xlat
gs
jb
stc
cmp
iret
fiadds
dec
sub
call
daa
bound
mov
inc
mov
push
dec
nop
shll
std
pop
imul
xchg
xchg
jge
clc
inc
mov
mov
movsb
push
je
lahf
push
mov
clc
aad
xor
mov
and
pop
cmp
andb
inc
xchg
or
pop
test
inc
and
sbb
popf
scas
mov
rolb
jb
mov
ds
jnp
or
xor
mov
cmp
sub
aaa
daa
push
icebp
cmp
or
fdivrs
push
cwtl
cmp
mov
jnp
dec
lock
int
aam
cs
push
mov
lods
adc
fs
cmc
dec
cld
pop
daa
test
mov
pop
orl
xor
lods
jae
jno
adc
inc
xchg
inc
push
roll
test
jns
sub
clc
inc
call
jno
add
xor
push
icebp
cmp
or
fsubs
jno
add
xor
insl
ret
sbb
dec
or
punpckhdq
scas
out
fdivs
popf
aas
repnz
pushf
lock
nop
xor
dec
sbb
fwait
jmp
test
xchg
loop
rcll
jmp
cmc
fcompl
int
mov
dec
mov
test
xchg
sub
dec
add
cwtl
orl
xchg
add
mov
jl
sbb
andl
mov
xchg
push
inc
in
cwtl
add
in
rcl
neg
enter
or
icebp
decl
sbb
cmp
dec
insl
cs
in
out
cmp
sbb
es
or
imul
sub
orb
std
and
scas
pop
cmp
mov
lahf
test
lret
aas
inc
in
mov
stos
dec
and
xor
sub
loope
pop
adc
mov
pop
pop
mov
insb
mov
imul
insb
fstl
dec
jmp
adc
push
adc
push
mov
int
fidivrl
das
fcomip
cs
mov
int3
bound
mov
mov
xchg
sub
test
push
xchg
sbb
aad
pop
dec
sub
lcall
fld
imul
divl
out
scas
hlt
shll
cmp
stc
mov
mov
cmp
jns
xlat
adc
adc
fidivrl
pop
das
icebp
test
iret
or
xor
cmp
adc
dec
gs
xorb
cmp
dec
sub
lods
mov
cltd
mov
sub
dec
sti
outsb
fdivrs
cld
fldenv
ficomps
or
insb
pop
dec
pop
push
cld
popa
adc
xchg
cld
xor
shrb
popa
xor
lods
sbb
shl
jge
imul
dec
js
mov
pop
push
adc
mov
jp
and
lea
fnstcw
es
rorl
dec
and
jmp
sub
scas
pop
ret
cmc
pop
decb
xchg
push
jne
mov
xchg
shll
xchg
nop
mov
lods
test
cmpsb
cmpb
lret
adc
stos
mov
outsb
mov
leave
inc
shll
inc
xlat
dec
icebp
cltd
lock
cmp
pop
cmp
clc
mov
pop
dec
sub
push
sub
push
stos
mov
popf
dec
fsubrs
lds
lret
pop
add
push
xchg
inc
cmpsb
jle
xchg
scas
adc
mov
movsb
scas
pop
mov
or
dec
pop
call
scas
mov
clc
push
cmp
add
mov
xchg
shll
jb
cmp
loope
ret
xchg
jne
or
inc
out
or
push
out
xor
les
js
mov
fstl
add
in
and
add
orl
pushf
dec
scas
ljmp
sbb
inc
inc
and
xor
in
popa
sub
sbb
inc
push
jle
push
ret
and
mov
sbb
pop
into
jne
xchg
test
or
in
pop
icebp
inc
mov
sbb
daa
push
sub
or
ja
in
in
out
adc
arpl
xorb
outsl
push
mov
ficompl
jno
xchg
xor
out
adc
dec
mov
mov
adc
sarb
popa
pushf
xchg
add
ja
rcrl
shlb
push
sub
aas
jae
add
std
sub
enter
popf
pop
dec
cwtl
mov
push
inc
in
or
cmp
and
fcoms
clc
cld
fdiv
les
int3
lcall
imul
popf
out
adc
mov
push
push
mov
data16
mov
call
fstpl
push
push
dec
test
adc
cmp
jmp
sub
jbe
sti
mov
inc
popf
testb
jle
rcrl
icebp
push
push
or
int3
inc
sarb
push
push
lret
pop
xchg
rcll
jae
cld
pop
inc
lods
mov
xor
xchg
les
or
cmp
aad
xor
cmp
mov
pop
push
inc
scas
nop
jp
je
cmpsb
pop
jg
and
ds
push
out
push
popa
es
and
test
scas
jge
cmovno
jg
sub
out
xchg
outsb
popf
pop
mov
in
mov
mov
dec
pop
push
cltd
subb
mov
pop
cmc
mov
jg
dec
mov
dec
cli
dec
fldl2t
xchg
push
pushf
dec
xor
and
mov
pop
daa
push
rcll
or
mov
mov
cmp
pusha
jg
cmc
xor
rolb
or
cs
aas
cmp
xchg
sbb
add
xor
mov
test
add
flds
inc
mov
mov
mov
add
test
dec
pop
mov
in
jmp
dec
test
mov
push
inc
mov
pop
jae
into
cld
outsl
push
xor
loope
mov
call
lods
or
sbb
cmpsb
inc
jns
mov
dec
mov
roll
out
daa
push
enter
movsl
pop
rcrl
adc
jg
dec
faddl
test
push
pop
out
aam
dec
pop
call
test
outsl
repz
add
cld
inc
push
dec
mov
fs
cmp
repnz
into
cwtl
es
mov
enter
movsl
mov
inc
mov
jge
xadd
push
mov
xchg
aaa
push
jne
jle
add
popl
leave
nop
js
sbb
scas
mov
mov
cmpsb
cld
sub
or
data16
ret
sbb
scas
and
andl
invd
push
add
stos
cmpsl
pop
and
jae
into
mov
lds
test
mov
fs
shlb
add
xchg
loope
sbb
aam
outsl
and
cli
sub
mov
fs
bound
inc
push
dec
lcall
adc
lahf
cmc
and
mull
xchg
pop
pop
pop
jl
fdivrl
push
aad
shl
adc
imul
lahf
arpl
call
lcall
mov
pop
xchg
push
push
pop
and
xchg
jne
stc
int
mov
adc
call
pop
and
push
add
push
push
jecxz
jae
push
subb
fisttps
scas
push
cmp
push
lods
xchg
adc
rol
sbb
mov
lahf
in
lret
in
pop
sbb
or
call
add
xchg
es
arpl
push
push
sbb
jbe
jo
xor
xlat
gs
xchg
imul
test
stc
cmp
aas
dec
nop
fdivrl
mov
mov
iret
sub
pop
rcl
cmp
dec
icebp
inc
pop
xchg
dec
pusha
jo
ss
mov
scas
jge
mov
or
pop
stos
mov
lock
cmp
test
inc
jle
jle
dec
mov
pop
loope
sar
xor
xchg
push
popa
outsl
pop
test
insl
jp
not
mov
sbb
xchg
sbb
inc
mov
std
push
shlb
notl
lods
xor
mov
mov
arpl
and
mov
and
push
jecxz
xchg
outsb
movsl
clc
in
mov
fcomps
mov
xchg
adc
lods
jmp
aad
mov
loope
sbb
dec
xor
push
pop
cmp
pop
and
push
xchg
aaa
jmp
cltd
in
push
add
sub
cmpsb
nop
or
stc
jmp
dec
mov
push
shll
lds
leave
aas
rolb
pop
inc
outsl
addr16
pop
ret
lea
or
xchg
cs
ss
loop
or
push
and
sarl
push
insb
sub
stos
push
fnstenv
pop
cmpb
fwait
push
cmp
sub
push
lahf
out
adc
clc
push
fwait
jno
lods
xchg
mov
jno
pop
mov
out
adc
iret
in
mov
adc
std
test
cmpsl
xchg
insb
jmp
add
fidivrl
int3
into
outsl
outsb
jge
shrb
push
add
shll
icebp
sbb
cmp
mov
mov
pop
push
mov
sbb
adc
jp
lahf
inc
lahf
push
sub
iret
jb
movsb
push
fcmovu
push
xchg
cltd
cmp
mov
js
xchg
xchg
imul
test
adc
fisttpl
es
lods
cmpsb
std
and
mov
jmp
mov
call
inc
ljmp
jl
inc
cld
mov
sub
xor
push
imul
xor
test
cmpsb
rorl
cmp
mov
pusha
push
out
push
jb
mov
lods
bound
xorl
inc
inc
hlt
jp
fs
sbb
mov
pop
movsl
mov
push
xchg
popf
xchg
xchg
into
je
sbb
pop
jo
mov
jmp
scas
lret
cmp
and
sbb
out
push
stos
test
xor
mov
fidivs
out
movsb
test
inc
sbbl
pop
inc
out
mov
pop
loope
and
outsb
xor
lods
outsb
inc
lods
test
mov
gs
out
arpl
insl
out
xorb
mov
sbb
scas
dec
leave
jae
enter
lahf
nop
mov
pop
or
addr16
icebp
dec
dec
add
cmpsb
dec
mov
mov
test
mov
fbstp
std
outsl
inc
ja
jno
push
pop
xchg
and
cld
ret
xor
daa
ja
dec
mov
test
stc
add
scas
pusha
inc
outsb
rcrl
add
add
int
bound
and
incl
dec
push
xchg
data16
or
ror
pushf
xchg
inc
pop
push
mov
sbb
loope
paddw
xorb
loop
sub
xchg
jg
xchg
adc
fistpl
sti
mov
insb
lea
repnz
scas
sahf
adc
mov
arpl
add
and
addr16
test
cmpsl
psubsb
movsb
movb
and
fxch
xor
test
rclb
clc
sbb
add
fwait
and
xor
xor
es
sti
or
jne
or
loope
cmp
test
pusha
push
lock
lretw
push
mov
es
add
gs
cltd
pop
jb
insb
lock
jno
clc
jb
mov
test
cli
insl
ffreep
int3
adc
sub
mov
ja
pop
std
testl
adc
subb
adc
in
ds
das
inc
movsl
push
cmp
out
inc
mov
rcl
stos
fwait
insb
stos
repz
ljmp
mov
or
pop
faddl
inc
mov
xchg
xor
aas
mov
test
cmp
in
xchg
xchg
popa
lods
mov
sbb
mov
lcall
jg
incl
stos
cmp
adc
outsl
imul
push
sti
in
jmp
dec
out
xchg
mov
push
push
xchg
add
cmp
jbe
pop
inc
jl
cmpsb
lahf
mov
sub
in
push
cltd
out
xchg
es
js
pop
add
bound
lods
in
jbe
mov
fbstp
jbe
jg
test
inc
insl
int3
mov
in
add
rorb
cwtl
fwait
hlt
push
sahf
int3
gs
mov
pop
adc
push
pop
pop
out
imul
adc
adc
pop
lahf
clc
lret
ljmp
std
or
push
push
xchg
shll
sbb
sbb
icebp
and
lret
jo
stc
sbb
fnstsw
mov
add
adc
adc
imul
fsubr
shll
lods
leave
mov
inc
nop
mov
sub
fsts
mov
mov
idivl
xchg
dec
push
inc
out
dec
les
lret
movsb
jae
enter
sbb
out
cmp
test
loopne
mov
repz
adc
fs
lods
jl
rolb
sbb
mov
mov
sti
fcoms
sub
mov
hlt
jl
bound
inc
neg
mov
enter
int
sub
shlb
daa
bound
mov
cmc
mov
push
bound
scas
or
cmp
mov
test
push
and
inc
cmp
lods
mov
andb
cmc
loope
stc
movsl
push
rolb
mov
call
jmp
fs
in
pop
mov
lret
jo
xchg
addl
jle
movsl
pop
sub
cwtl
imul
int3
pop
and
and
cmpsb
cmpsl
mov
mov
jge
mov
icebp
lcall
sub
mov
test
in
fldcw
pop
cwtl
sbb
pop
push
jp
arpl
das
jmp
and
orb
push
jns
dec
xor
mov
lcall
in
stos
adcb
cs
add
adc
jne
sub
jg
push
icebp
mov
ljmp
lods
ljmp
sbbl
nop
jg
mov
mov
fmul
mov
lret
mull
inc
mov
ss
push
dec
mov
sub
fstpl
inc
stos
sub
cltd
popf
sarb
movsl
clc
fimuls
cmp
mov
mov
fcmovbe
sub
jecxz
push
fimull
inc
repnz
push
por
lea
inc
push
js
jle
mov
repz
std
sbb
push
in
into
dec
mov
jb
add
frstor
imul
mov
lock
mov
mov
andb
in
orb
inc
jmp
mov
loopne
hlt
add
xlat
mov
xor
lods
lcall
ret
int3
int
add
dec
or
in
test
fsubrs
push
jecxz
push
add
les
push
add
sub
movb
lods
dec
pusha
mov
adcb
into
xchg
leave
jne
mov
or
xor
outsb
leave
adc
fcompl
and
into
xchg
scas
out
adc
mov
sub
sub
and
stc
dec
stc
mov
movsb
stos
lret
repnz
push
cmp
das
fisubrl
arpl
cmp
int
outsb
gs
cmpsl
pop
loopne
xlat
xlat
mov
es
jne
ret
test
cmpb
sub
cld
pop
call
mov
rolb
push
dec
scas
cld
push
mov
mov
sbb
or
add
loop
add
fucomi
js
bound
pop
jmp
mov
in
dec
cmpsb
insb
xor
stos
jg
inc
pop
jns
scas
movsl
xor
std
mov
mov
inc
cmpsl
mov
hlt
xor
xchg
out
add
xor
jle
cmp
out
jge
cmp
xor
lcall
dec
pushf
jle
sub
mov
repnz
clc
mov
sbb
ret
ljmp
inc
and
xor
lcall
adc
imul
sbb
nop
push
mov
les
mov
stos
cmp
adc
imul
fidivl
pop
pop
rorb
sbb
fsubrs
sbb
lods
ficoml
mov
mov
shl
cmpsb
push
addl
mov
icebp
pushf
fucomi
cli
lock
insb
adc
mov
rorl
imul
rorb
cwtl
mov
xchg
fists
xchg
loopne
xchg
insb
out
ret
lods
sbb
dec
mov
lcall
and
repnz
jne
lods
pop
jp
cmp
and
mov
ss
jns
cli
mov
xor
dec
icebp
push
ret
and
pop
pop
rolb
fs
ret
pop
in
and
xchg
icebp
insl
icebp
sub
pusha
cmp
repz
jmp
push
incl
cs
test
jl
push
sbb
inc
movsb
stos
pop
ja
rorl
push
int3
mov
cli
push
in
mov
cmpsl
aaa
lret
stos
sbb
bound
outsl
jmp
lcall
xchg
push
in
leave
jecxz
hlt
loopne
mov
iret
xor
dec
mov
cmpsl
jmp
push
js
xchg
push
and
pusha
xchg
aaa
stc
xchg
fnstcw
dec
mov
test
add
das
add
mov
mov
scas
stc
pop
cmc
mov
push
jbe
cli
push
and
in
push
mov
shl
xor
test
cmc
and
add
xchg
sub
dec
add
hlt
mov
mov
sbb
pop
into
dec
pop
sbb
inc
sbb
inc
mov
jmp
pusha
sbb
pusha
setge
or
xchg
push
push
fmuls
inc
stos
jae
or
mov
stos
ja
inc
mov
push
ljmp
jae
addr16
push
mov
sub
negb
jb
dec
add
cmp
jb
sti
test
adc
imul
push
add
push
aaa
and
dec
icebp
ds
aad
imul
nop
pop
cmp
mov
outsl
push
shl
insb
mov
jge
leave
out
sub
mov
addr16
xorl
pop
in
lcall
cmpsb
orl
pop
fadds
fwait
sbbb
xor
fistps
lahf
mov
sarb
sub
mov
xorl
mov
mov
cmp
dec
and
cld
cs
sub
scas
push
cmp
rcrl
aam
pop
push
daa
cmp
int
divl
out
mov
cmp
sub
je
sub
orb
adc
mull
mov
push
inc
ror
mov
ret
mov
movzbl
lret
inc
mov
push
or
and
inc
repz
xlat
xchg
xor
orl
cmp
cltd
or
daa
sti
shll
sub
stos
test
xor
cmpsl
call
pop
pop
in
insl
fstpt
imul
call
psllq
out
add
sbb
mov
aam
or
clc
lahf
cmp
dec
in
dec
pop
add
lahf
repnz
xchg
push
jo
and
orl
mov
push
scas
dec
int
push
ljmp
and
push
xchg
imul
pop
push
push
vcvtpd2psx
test
dec
lock
inc
sub
loopne
lcall
sbb
or
stos
cmpsl
int3
lds
xor
clc
sbb
adc
push
pop
sbbb
loope
cmp
push
movsb
int3
add
jb
fimull
inc
icebp
and
push
or
lret
inc
ret
jecxz
or
dec
sbb
adc
pop
mov
bound
cmp
out
pop
fcomps
lahf
mov
jle
xchg
mov
out
mov
int
mov
dec
andl
inc
adc
push
fiadds
add
in
jbe
fidivrs
cs
xor
jp
outsl
jne
xlat
xchg
jo
ficoms
adc
lods
pop
mov
loope
sub
inc
xchg
imull
xchg
sbb
stc
xchg
push
fistpll
mov
cld
scas
inc
mov
sub
pop
aaa
inc
ss
call
lret
dec
in
push
arpl
xchg
aas
insl
pop
xor
cltd
cs
inc
adc
call
mov
aas
push
push
jge
sar
arpl
jg
dec
jle
fmull
aas
bnd
ds
mov
jmp
mov
mov
jecxz
shl
stc
ljmp
xchg
jecxz
fidivl
out
pop
outsl
cmp
mov
push
adcb
fsubrs
push
sub
stos
testb
inc
popf
or
pop
and
in
jp
push
loop
inc
push
lret
fst
mov
adc
cmp
js
rol
cs
shlb
insb
xor
repnz
cmc
or
mov
dec
cwtl
std
push
mov
mov
lods
out
ss
std
fadd
cmp
fisubs
sahf
push
dec
mov
subb
inc
stc
add
xor
gs
into
mov
mov
jnp
xchg
idivl
mov
lret
movsl
adc
in
push
xlat
or
cmc
pop
xchg
js
rclb
xchg
icebp
push
in
and
pop
dec
xchg
pusha
pusha
or
sub
xchg
cmpl
sahf
jle
out
pushf
push
add
sub
sbbb
pop
cmp
fdivs
mov
cli
sbb
orl
popa
int
pop
xchg
jp
pop
jl
cmp
cli
clc
int3
int3
popf
and
push
sbb
sub
lods
dec
mov
sub
aam
ret
or
js
out
repnz
scas
push
mov
loopne
jae
sbbl
cmp
imul
loope
call
xchg
scas
jb
movsb
dec
loop
pop
push
out
rorl
push
mov
dec
sbb
cmpsb
inc
fnstenv
mov
mov
mov
sahf
pop
xchg
pop
mov
xchg
dec
or
and
fisubrl
les
in
loop
fldenv
jg
lods
mov
dec
jl
jle
fistpll
outsb
cmp
cmp
mov
jle
icebp
pop
adc
scas
xchg
push
shrl
sub
clc
inc
call
jno
add
xor
push
icebp
cmp
or
fsubs
jno
add
xor
push
icebp
cmp
or
fsubs
jne
add
xor
pop
in
icebp
cmp
or
inc
call
push
iret
mov
outsb
addr16
ja
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsb
imul
jecxz
dec
cmpsl
pusha
mov
out
push
incl
into
fbld
scas
push
mov
data16
xchg
jle
dec
mov
cmpsb
cs
ds
push
negb
xchg
out
push
es
fisubs
outsb
cmp
data16
add
xchg
pop
movsb
cs
out
leave
frstor
imul
das
sti
add
xor
xor
out
mov
add
adc
pop
ljmpw
xor
xchg
adc
mov
cmp
mov
movsb
adc
jnp
xor
ss
push
mov
jmp
xchg
jbe
dec
lods
sub
test
insl
out
fwait
stos
or
push
stos
jbe
inc
jmp
sahf
jbe
push
jle
and
pop
push
or
sub
arpl
jnp
xor
mov
push
push
mov
xchg
sbbl
ja
orl
test
dec
icebp
mov
inc
fisubs
cltd
xchg
push
cmpl
in
xchg
int3
inc
xorl
outsb
xor
idivb
push
xor
mov
xor
cs
ds
push
sub
data16
nop
inc
into
fisubrs
jp
mov
das
les
xchg
cmc
aaa
mov
mov
sbb
out
push
fwait
inc
into
inc
cmpsb
dec
scas
cmp
pop
or
sbb
sub
xor
jbe
dec
mov
push
fiadds
push
rorb
loop
jmp
or
jle
and
xor
bound
push
out
push
incb
into
fisubs
scas
push
mov
data16
xchg
jle
dec
mov
cmpsb
cs
ds
push
negb
out
push
incb
into
fisubs
scas
push
mov
data16
xchg
pop
push
rcll
cmp
in
jmp
dec
jnp
lock
adcl
insb
in
or
andl
cli
je
and
stos
mov
cmovne
pop
and
sub
sbb
mov
cli
mov
js
mov
subl
inc
mov
fcmovnb
enter
xor
mov
mov
xchg
jne
popa
hlt
jg
inc
das
arpl
dec
or
loope
fistps
jg
fsubrs
cmp
sahf
das
xor
add
repz
lcall
inc
jl
shr
test
xchg
outsb
xlat
imul
into
int
add
push
cmp
mov
cmp
or
xor
loop
jp
es
jo
pop
mov
repnz
mov
in
sbb
mov
xor
mov
mov
fsts
adc
pusha
push
jge
movsl
adc
test
push
inc
lods
inc
aam
loopne
mov
mov
push
mov
pop
fmuls
dec
jmp
mov
negl
shlb
stos
sub
inc
icebp
cmc
or
out
lds
out
xor
hlt
je
fildll
jge
mov
stc
or
repz
xchg
out
mov
xor
sahf
lahf
mov
nop
aad
into
lret
push
mov
cmp
sbb
out
out
pusha
out
cmp
adc
int
push
mov
xor
cmp
gs
in
sti
sbb
pop
inc
insl
pop
push
sub
push
jmp
mull
and
wbinvd
fs
test
and
adc
daa
je
fs
jb
adc
rcrl
sub
adc
shll
lret
or
fidivs
and
xchg
imul
push
in
and
rclb
cmpsb
mov
inc
sbb
ret
inc
jns
dec
pushw
into
or
jno
pop
mov
pusha
sarb
sahf
mov
call
mulb
cmp
xchg
push
cmp
into
xchg
push
and
or
xchg
mov
shlb
or
arpl
mov
xlat
pop
jno
loop
stos
fisttpll
jecxz
dec
inc
outsb
popf
pop
mov
scas
add
rol
jl
and
lret
push
jnp
mov
lea
mov
bound
stc
push
jne
mov
and
call
shl
push
mov
scas
push
in
ficompl
xchg
pop
je
dec
push
pop
repnz
lret
in
cmp
mov
mov
or
adc
mov
cmp
pop
adc
cmp
bound
scas
data16
adc
mov
mov
lcall
movl
popa
jno
push
mov
mov
adc
js
lahf
movsb
cmpsl
pop
into
sub
int
scas
inc
aaa
mov
in
cmp
or
mov
pop
es
sahf
jae
sbb
lret
cmp
push
ljmp
pop
pop
adc
das
or
aas
mov
dec
sbb
repnz
and
add
pop
scas
jae
shrb
insb
call
cmp
je
add
mov
aaa
pop
or
add
inc
and
jbe
rcr
push
pop
popf
stc
bound
shr
pop
jne
hlt
arpl
jp
or
push
push
and
inc
jl
clc
pop
jg
faddl
icebp
hlt
in
cmp
data16
jg
clc
aad
jge
orb
and
cmp
cmp
hlt
xchg
loopne
pop
popa
jno
add
jl
push
mov
out
jno
into
sti
mov
lret
leave
pop
add
cli
and
sarb
popa
clc
mov
sarb
xchg
test
test
jg
sbb
push
jecxz
mov
dec
xor
and
mov
or
cmp
into
jl
sbb
rcrl
jno
call
cld
cmp
cmp
inc
in
pusha
repz
xchg
add
sbb
mov
cli
or
or
push
mov
daa
aad
mov
popa
mov
test
mov
pop
adc
xor
sbb
mov
sahf
lock
jno
insl
mov
dec
mov
add
jg
mov
jbe
imul
jae
mov
mov
out
shll
pop
mov
xchg
out
mov
pushf
cmpsb
or
sbb
xor
inc
loope
ds
mov
scas
gs
mov
xchg
addr16
insb
xor
outsb
scas
add
xor
xor
push
lock
or
inc
xchg
lock
test
aaa
pop
inc
add
mov
fst
in
adc
dec
pop
arpl
mov
scas
aaa
xor
mov
lret
bound
loope
ljmp
mov
fildll
inc
dec
push
jbe
inc
lcall
push
xor
mov
cltd
loopne
in
or
lock
aaa
icebp
adc
inc
or
insl
dec
jg
or
sbb
sub
inc
add
icebp
pop
adc
mov
and
pusha
faddl
mov
fnsave
mov
sub
test
push
jle
add
test
into
scas
sub
scas
rorb
pusha
adc
nop
mov
mov
fldl2t
pop
dec
in
xchg
jmp
mov
call
iret
adc
mov
lds
scas
dec
add
push
js
xor
mov
mov
fcoml
iret
mov
inc
icebp
push
outsb
mov
sub
pop
leave
shrb
imul
stc
fisttpll
push
shl
push
mov
movsb
int3
insb
stc
cmp
loopne
fcoml
aam
cld
fsubrl
jg
fstpt
arpl
lds
mov
loopne
ror
les
pop
adc
jmp
jo
or
cmpsb
pop
outsb
inc
mov
or
mov
mov
add
insl
inc
dec
js
inc
insl
lock
out
jae
loop
orb
gs
xor
ret
mov
scas
cmpsl
out
in
mov
xor
xor
push
inc
jmp
xor
or
daa
aas
rorl
push
sbb
pop
mov
lea
xor
ret
out
jns
or
inc
mov
cmp
mov
aaa
inc
or
push
aaa
pop
decl
xchg
sbb
and
mov
dec
pop
mov
inc
push
or
mov
sbbl
cli
and
mov
lcall
jo
xor
gs
test
mov
in
or
setg
test
mov
aaa
mov
jno
inc
push
pop
xchg
int3
stos
fsub
lods
dec
popf
cmp
inc
imul
and
fwait
testl
or
xor
mov
jl
ljmp
mov
pop
xchg
push
cmp
jne
jne
xchg
imul
sbb
out
and
sub
imul
in
push
popa
jecxz
mov
pushf
ret
aam
or
int3
imul
movsb
push
jge
test
mov
pusha
pusha
rolb
fs
cwtl
mov
inc
jne
das
leave
mov
and
adc
and
inc
mov
and
cmp
sbb
pop
out
sub
stos
mov
push
push
sub
fists
ss
adc
sub
nop
add
aad
imul
scas
xchg
inc
data16
das
fcoml
call
sti
fdivr
xchg
imul
jne
mov
dec
aad
pop
subb
mull
push
sub
roll
jne
addb
push
push
in
mov
push
jl
xor
jnp
fisubs
xchg
idivb
das
cltd
in
leave
push
shlb
push
fsts
fnsave
ret
mov
lahf
mov
add
shll
push
test
jecxz
or
iret
jecxz
mov
sub
fsubs
fnclex
hlt
or
bound
out
add
sub
mov
shrl
clc
xchg
je
loopne
xor
pop
pushf
push
or
test
xchg
test
arpl
js
mov
mov
sub
scas
pop
dec
jne
hlt
push
jle
stos
imul
loopne
ss
and
ret
push
data16
push
push
add
fidivrl
xor
bound
jne
xor
jp
mov
mov
xor
xchg
sbb
sub
lods
lcall
popf
cli
jns
sbb
mov
lret
pop
inc
repnz
adc
lock
decl
adc
cltd
int3
test
jge
jae
loop
fcomi
push
mov
repz
out
mov
jg
in
fcmovne
inc
push
cli
popf
movsb
jae
sub
cmp
push
daa
int3
mov
sbb
dec
xchg
pop
jge
or
dec
and
sbb
or
xchg
xor
outsl
inc
lods
loope
in
mov
push
lahf
sahf
test
jmp
outsb
xchg
aaa
ds
or
iret
mov
jl
and
insl
aad
mov
nop
js
mov
test
stc
je
arpl
fidivrs
data16
jo
fidivrl
sarb
pop
lods
inc
mov
mov
xchg
push
and
pop
jle
mov
shlb
cmc
outsl
int3
stc
push
pop
lds
mov
cmpsl
jmp
testl
outsb
xchg
mov
mov
pop
cmp
loopne
repz
test
rorb
xorb
mov
push
nop
sub
iret
mov
pop
jmp
mov
pop
mov
add
cld
jnp
test
ret
daa
push
lods
pop
out
fs
mov
movsl
lock
xchg
outsl
lea
add
mov
lods
pop
fstpl
xchg
pushf
fldcw
gs
mov
mov
icebp
xor
mov
and
sub
scas
sub
repnz
adc
push
add
and
outsb
test
xchg
push
xchg
mov
cmp
aad
push
and
jns
out
fs
stos
or
outsb
call
sub
cmpl
dec
cmc
lods
int3
addr16
iret
push
fildll
sti
mov
mov
in
adc
aad
and
loopne
lret
fsubl
jge
dec
and
movsl
push
jo
cmpsb
sti
mov
cmp
mov
pop
sub
in
mov
mov
in
mov
bound
mov
add
repnz
iret
cmp
lea
into
mov
insb
imul
out
aas
xchg
or
sbb
dec
lcall
xor
js
rclb
mov
xchg
mov
idivl
sub
adc
addr16
ss
sahf
lret
adc
or
mov
mov
sbb
roll
cmpsl
ljmp
iret
jl
add
out
or
cwtl
mov
dec
pop
inc
pop
mov
mov
jecxz
nop
pop
js
pop
add
cmpsl
loopne
mov
sub
clc
fs
pop
outsb
inc
dec
lcall
roll
pop
inc
das
jnp
iret
loop
pusha
pop
lea
sub
loop
add
loopne
insb
pop
add
and
insl
aas
xlat
filds
fsubr
adc
sub
movsb
adc
lcall
mov
pop
xor
xor
mov
fdivrl
loopne
push
out
aas
call
fistl
push
std
or
sub
int
loope
ror
jmp
mov
fs
mov
dec
loop
push
ljmp
and
adc
cmp
jo
mov
dec
fmull
push
out
pop
ret
mov
imul
scas
fs
subb
or
inc
aad
mov
in
imul
mov
and
fisubrl
and
inc
sbb
lret
xchg
insl
test
inc
jg
dec
or
sbb
scas
rolb
cltd
jo
add
dec
clc
jne
imul
enter
sbb
ret
sbb
repnz
jecxz
ret
fbstp
cmp
adc
mov
lock
sbb
mov
or
scas
outsb
ja
fcoms
or
mov
sahf
aas
lds
push
xchg
ret
mov
jp
out
sbb
or
out
pop
test
fcomi
sub
ret
cld
and
repz
out
mov
xchg
push
lods
rcrb
ret
fcmovbe
xchg
int3
call
mov
pop
sbbb
add
mov
pop
jge
insb
out
int3
scas
hlt
imul
xlat
cli
fimuls
mov
test
sbbb
mov
ljmp
stos
sbb
lds
movsb
popa
add
imulb
xchg
cmp
sub
mov
xchg
push
xchg
jo
push
pop
push
insl
stos
cmc
or
cs
gs
dec
gs
sub
insb
mov
not
push
add
jnp
test
inc
xor
jl
fwait
adc
popf
scas
push
mov
push
std
rcr
mov
sbb
rolb
data16
aad
or
jbe
rcl
push
add
js
fmuls
push
nop
shll
pop
push
popa
sub
loop
pop
shr
xor
fsincos
jae
xchg
sarb
pushf
or
cmp
std
bound
aaa
add
je
xchg
and
fiadds
mov
jno
iret
add
and
aas
dec
les
mov
mov
inc
adc
sbbb
loope
int3
int3
sbb
adc
jmp
push
divl
jbe
lret
mov
cltd
loope
xchg
sbb
cmp
aam
test
mov
jecxz
jb
push
loopne
stos
aad
fstp
addr16
imul
inc
sbb
lret
mov
repnz
mov
xchg
daa
xor
jmp
rol
repz
sub
nop
dec
pushf
or
flds
sub
out
dec
lahf
and
sub
dec
mov
imul
mov
dec
adc
sub
dec
sahf
shll
jge
pop
pop
daa
iret
sub
outsl
not
sub
push
stos
sub
mov
fs
cltd
pop
cwtl
out
mov
inc
mov
inc
das
adc
fwait
adc
stos
ds
inc
lods
es
in
aam
loopne
das
movsl
push
fiadds
test
mov
aad
in
sbb
mov
sub
inc
fxch
or
inc
pop
xchg
shll
or
xchg
stc
mov
add
mov
xchg
cmc
imulb
shl
jl
mov
ljmp
icebp
leave
mov
cld
dec
xlat
xor
sbb
mov
dec
xor
shrl
stc
cmp
rcl
push
mov
mov
xlat
jg
mov
arpl
iret
lock
xchg
enter
xchg
push
loopne
mov
test
in
dec
cltd
imul
lret
dec
sbb
jecxz
inc
xchg
push
lcall
int3
cmp
adc
jnp
push
mov
data16
ja
cwtl
pop
ret
ja
fnstenv
sub
jle
adc
push
pop
aas
popf
movsb
rcrl
ret
rorl
fmuls
mov
xchg
inc
jbe
lods
inc
xchg
fs
pop
push
push
scas
pop
loope
xchg
or
mov
pop
sub
jne
xor
mov
dec
cmc
dec
cld
loop
loope
aam
and
xchg
mov
or
lahf
pop
add
lods
jno
sub
xlat
jbe
pop
dec
fwait
adc
sbb
xchg
cmp
es
dec
pusha
jo
sahf
push
or
cmp
pop
push
mov
sti
call
neg
fistl
dec
loope
add
sahf
inc
jecxz
shlb
in
sub
adc
push
dec
aad
out
adc
pop
mov
and
lock
mov
fsubrl
mov
in
sub
bound
neg
out
aad
out
push
dec
in
bound
push
shrl
cmp
push
rorb
mov
out
mov
and
pop
mov
cltd
mov
into
mov
inc
sub
sbb
imul
cs
and
lret
xor
int3
je
push
cmp
call
mov
mov
sbb
sbbb
movsb
and
sahf
je
nop
sbb
cli
test
bound
mov
fildl
dec
and
loope
stc
mov
jecxz
sbb
ret
pop
or
gs
pop
push
lea
mov
xor
sub
shrb
sti
mov
fucom
sti
shlb
add
inc
addr16
fdivr
insb
lcall
sbb
fnsave
jmp
add
push
ret
or
or
add
cmpsb
mov
cs
mov
les
lods
mov
fwait
xor
shrl
call
jns
imul
pop
mov
dec
xor
mov
xchg
comiss
scas
les
cmc
ljmp
out
sbb
cmp
jg
add
push
pusha
mov
nop
scas
mov
cmpsb
test
mov
pop
jo
fidivrs
iret
sbb
icebp
imul
negb
pop
in
jnp
jl
faddl
jle
mov
in
sti
lds
imul
imul
adc
orb
stc
scas
shr
inc
cmp
mov
imul
push
cmc
call
pop
stos
aad
shrb
hlt
jecxz
loope
jge
sub
test
cmpsl
pushf
popa
and
jle
rolb
les
mov
lret
or
test
cmp
xchg
pop
dec
add
mov
adc
adc
add
sub
add
rolb
outsl
mov
popa
mov
mov
adc
fsubrl
sbb
sahf
push
pop
ss
leave
aas
sub
stos
scas
mov
dec
xchg
adc
cmp
repnz
pop
outsl
jg
push
jmp
inc
imul
jns
adc
lds
xchg
xchg
fsubs
inc
insb
and
jnp
loope
push
sub
addr16
add
inc
stos
imul
bound
push
jb
out
loop
insl
jns
mov
add
push
stos
loop
and
out
jnp
sub
cld
mov
xor
or
les
or
ss
pop
or
jns
mov
sahf
js
sub
add
aaa
inc
push
jbe
xor
loopne
imul
inc
fbstp
cmp
mov
cmp
fwait
into
mov
pop
pop
add
int
cmp
mov
aam
ret
xor
add
shlw
mov
aad
pop
insl
lods
dec
pushf
mov
lahf
sub
int3
lock
sub
lock
ficoms
or
in
enter
lret
sub
loopne
and
pop
xchg
push
scas
sahf
jle
imul
rolb
scas
inc
fisubrs
add
aaa
les
aas
mov
daa
xor
rcrb
xlat
imul
nop
inc
cmp
xbegin
sti
sahf
fcomip
mov
movsl
test
sbb
in
jo
inc
xor
lods
sub
jle
popa
and
scas
inc
or
jmp
out
or
mov
std
jmp
add
ror
add
ret
lods
add
add
jg
xlat
and
or
out
data16
mov
test
and
popf
add
cmc
mov
bound
xchg
mov
lretw
lret
adc
insl
xor
leave
jnp
and
adc
mov
ss
pmulhuw
add
int3
test
adc
icebp
pop
adc
aad
in
pop
mov
jg
push
es
mov
out
xor
lahf
mov
testb
insl
loope
les
jle
std
in
pop
dec
in
idiv
cwtl
scas
sbb
movsl
adc
jl
shll
in
clc
xorl
sbb
mov
das
cmp
sbb
fwait
outsl
add
test
stos
das
or
rorl
pop
out
outsl
je
sti
fadds
sub
movsb
fiaddl
push
push
pop
aaa
jl
add
mov
movsl
in
bswap
or
add
stos
mov
adc
dec
leave
mov
ds
in
imul
jg
or
mov
mov
push
sub
hlt
stos
jp
cmp
jae
sub
sbb
cltd
mov
xchg
insb
jb
outsl
cmp
popf
nop
fisttpll
flds
std
cmp
lds
push
fisubrl
xchg
ja
pop
xchg
jb
sub
std
ret
mov
addb
nop
or
sahf
fidivrs
aad
push
fsubp
insl
adc
sub
aam
dec
out
push
lods
jle
cli
pushf
adc
ljmp
jge
pop
aad
push
subb
int3
test
and
xchg
sbb
in
sbb
xor
pop
xchg
daa
jae
push
out
pop
pop
jns
shl
push
sahf
dec
loopne
xchg
or
mov
xor
mov
les
sub
sbb
shll
lcall
mov
aad
lock
mov
clc
or
add
push
pop
movsb
leave
mov
andl
inc
xor
adc
dec
ficompl
cs
ds
push
negb
out
push
incb
into
fisubs
scas
push
mov
data16
xchg
jle
dec
mov
cmpsb
cs
ds
push
negb
out
push
incb
into
fisubs
scas
push
mov
data16
xchg
dec
into
into
pop
cmpsb
scas
outsb
push
negb
push
into
fisubs
scas
push
mov
data16
xchg
jle
dec
mov
cmpsl
cs
ds
push
jbe
out
jmp
ficoms
fmulp
mov
add
adc
and
xor
dec
jnp
and
xor
nop
xchg
fcmovbe
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
cwtl
nop
mov
lcall
loopne
lock
xor
inc
inc
push
push
pusha
bound
cmpb
ror
sahf
stos
test
mov
scas
lods
sahf
ljmp
inc
mov
jmp
mov
push
xor
imulb
mov
mov
dec
aad
mov
mov
lock
jbe
mov
stos
aas
pop
lds
clc
in
call
or
dec
sbb
pop
cli
dec
pop
push
fisubrl
pusha
lret
test
ljmp
mov
inc
jp
mov
lret
sub
mov
cmp
fs
lds
lret
pop
mov
sub
nop
pop
insb
mov
mov
inc
add
in
call
shl
mov
inc
sti
out
fwait
cli
sahf
pop
scas
cmc
mov
loopne
cwtl
cli
pop
sbb
sbb
inc
pop
push
dec
pusha
arpl
addb
mov
ret
loopne
lock
jns
inc
cmp
sub
sbb
repz
bnd
out
fadd
movsl
mov
cltd
movsb
cli
movsb
xchg
bound
jo
push
das
push
sub
pusha
push
jo
in
xchg
jmp
into
cmc
jmp
xchg
xchg
lock
outsl
dec
pop
xor
ss
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
lock
adc
lcall
sub
out
inc
push
test
pop
adc
cmc
dec
mov
xchg
or
in
lods
cmp
and
xor
and
sbb
cmp
mov
gs
fcomps
push
and
cwtl
das
mov
mov
add
sbb
mov
inc
test
scas
test
ljmp
insl
popf
xchg
lea
inc
xor
cmp
outsl
pop
push
loope
or
dec
push
sub
adc
mov
push
jl
loop
and
cmc
cmp
cwtl
or
cmp
insb
xor
aaa
mov
push
push
out
aad
jp
cmp
movsl
dec
push
sub
out
pusha
or
dec
pop
or
test
rorb
imul
fstpl
mov
movsb
pop
add
adc
inc
xlat
adc
mov
add
mov
jg
xchg
xchg
pop
push
jb
aad
lods
xchg
xchg
xchg
je
pushw
push
adc
js
jne
loope
clc
cmp
stos
jecxz
out
pop
push
jle
pop
nop
push
ss
sbb
aaa
mov
pop
and
stos
and
xor
mov
and
inc
int3
inc
mov
lods
lahf
lods
aaa
mov
in
scas
movsl
mov
adc
jmp
lock
ljmp
xor
popf
test
jnp
add
cs
cmp
aas
jle
and
jp
cmpsb
dec
cmp
inc
repz
js
add
pop
fiadds
cmp
bound
mov
mov
lcall
mov
jmp
xorl
adc
out
pop
cmp
adc
pop
push
fstl
icebp
mov
movsb
lret
sub
into
cmp
and
mov
inc
loop
sbb
or
rcrb
fmul
or
mov
pop
mov
sbb
xor
int3
sub
mov
add
lcall
addb
lahf
lea
and
mov
adc
call
pop
in
aam
xor
jb
cmc
xchg
cmp
pop
lock
or
mov
shl
push
mov
loopne
sbb
or
add
mov
pop
popf
lahf
inc
add
testb
imul
out
popf
popa
or
icebp
movsl
lea
push
lods
add
mov
addr16
jg
inc
mov
xchg
ret
jne
dec
movsl
pop
mov
scas
int
pop
pop
rcll
insl
or
or
pop
test
and
cwtl
pop
inc
push
jnp
lahf
inc
filds
lods
sub
inc
cmpsb
push
ss
insl
push
fbstp
inc
jg
or
repnz
or
sti
pop
mov
stos
dec
xor
jo
jno
lcall
mov
and
lods
fwait
lock
cmpsb
movsb
mov
push
push
cmc
sub
popa
loop
sbb
rorb
mov
movsb
insl
daa
adc
mov
repz
aaa
or
aaa
push
and
jne
pop
mov
sti
sbbb
jns
notb
pop
jl
add
cmp
rolb
mov
jne
sub
dec
jecxz
scas
pop
xor
fildll
inc
lret
pop
cmpsl
arpl
add
shll
orl
inc
or
lea
pusha
fisttps
ss
lret
cmp
aad
fidivs
nop
sbb
mov
cmc
cld
xor
fistl
sub
xorl
mul
scas
inc
popf
push
cmp
push
jle
mov
inc
cmp
mov
cmp
stos
adc
and
int3
js
sarb
sub
pop
fadd
and
mov
dec
ret
xchg
lcall
popf
data16
dec
xchg
out
roll
pop
outsb
mov
add
int3
mov
inc
repnz
mov
ds
inc
cmp
test
scas
addr16
or
and
rcll
cmp
add
rcll
loope
fdivs
mov
insl
inc
jb
mov
repnz
mov
mov
mov
ss
outsb
xor
and
mov
aad
or
push
rclb
sbb
pusha
loopne
sbb
add
mov
cmpsl
fimull
jnp
test
mov
cmp
incl
pop
or
fucomp
fistpl
ss
mov
cwtl
push
add
jne
out
xchg
imul
jp
lret
or
rcrb
mov
test
add
push
dec
and
pop
inc
inc
scas
int3
inc
cmp
xlat
lea
in
shlb
loop
push
mov
icebp
mov
scas
jns
pop
jmp
jg
inc
mov
mov
enter
ds
outsb
xor
and
bound
sub
lods
push
add
or
cltd
cmp
xor
and
adc
sahf
adc
adc
dec
mov
sub
lock
dec
or
incb
xorb
jnp
inc
data16
inc
sbb
mov
ljmp
inc
jmp
cltd
leave
xchg
push
jmp
jmp
sbb
mov
inc
and
mov
dec
adc
jbe
test
add
mov
daa
mov
and
pop
jne
xchg
add
add
jbe
mov
or
xchg
call
mov
jmp
mov
adc
dec
jmp
lods
and
or
push
outsl
xchg
cmp
shlb
dec
in
sbb
cmpsb
movsl
dec
mov
out
mov
xchg
pop
in
push
iret
push
sub
gs
push
mov
xchg
outsl
mull
int3
adc
cld
or
and
dec
mov
adc
dec
cwtl
push
lods
dec
hlt
loopne
pushf
mov
nop
adc
sbb
je
sbb
stos
xchg
dec
pop
cmp
loop
psrad
and
repnz
pop
or
popf
push
stos
pop
enter
pop
pop
dec
out
xchg
push
pop
stos
xchg
add
aam
mov
sbb
in
mov
je
outsl
mov
add
jno
jl
mov
rorl
movsb
mov
test
xor
psllq
iret
inc
subl
stos
test
mov
movsl
outsl
xchg
test
nop
lahf
ret
cs
jp
jl
sbb
sub
lods
fstp
mov
aam
enter
cmp
add
mov
cwtl
push
add
shr
fsts
mov
jge
dec
clc
pop
ret
adc
test
add
or
fs
in
loope
inc
and
add
pop
mov
fcompl
cs
daa
lods
cli
mov
jp
and
sub
inc
sbb
cld
hlt
push
aad
pusha
int
shr
dec
scas
mov
bound
or
jnp
sti
mov
xor
cltd
xchg
xchg
push
sub
dec
test
outsb
adc
inc
xor
fstpl
jnp
and
jns
sbb
mov
jl
daa
scas
sbb
mov
fwait
cmp
shll
loop
inc
pop
mov
push
scas
ret
icebp
cmc
outsl
sub
mov
mov
fnstenv
sbb
repz
icebp
iret
int3
push
rolb
sti
test
mov
mov
imul
mov
es
les
jge
cmp
in
inc
call
out
jns
sub
mov
inc
test
out
and
or
orl
inc
jl
into
sub
test
sub
push
pushf
add
ds
das
sahf
aad
or
notb
repnz
fimuls
repnz
jp
andl
sbb
mov
movsl
mov
js
cmp
inc
jmp
imul
xor
lock
repz
shll
mov
sub
aam
insb
jp
leave
bound
das
insb
test
cmpb
mov
movsb
or
cmp
dec
mov
pop
stos
jle
sub
lds
and
pusha
dec
mov
mov
out
mov
sub
and
dec
hlt
stos
cmp
cmp
cmp
push
inc
lret
mov
movsb
xlat
shlb
outsb
repz
mov
adc
pop
in
or
cwtd
or
addr16
pusha
cli
out
icebp
mov
push
pushf
jnp
cmp
cmp
xchg
jbe
sbb
movsl
lcall
or
and
or
lret
mov
pop
and
shrl
popf
gs
repz
ret
sbb
dec
push
rclb
sub
lock
pandn
inc
and
xor
jmp
pop
int3
sbb
mov
test
icebp
mov
dec
jmp
jno
imul
bound
xchg
hlt
jg
adc
insl
mov
jo
and
or
lcall
adc
mov
sub
fisttps
popa
and
mov
in
cmc
mov
stos
inc
mov
shr
sbb
cmp
and
shlb
mov
rorb
cwtl
and
test
mov
movsl
popa
jns
in
xchg
xchg
popa
inc
jmp
repnz
sahf
cmp
jl
pop
rorl
lret
pop
test
test
sbb
xchg
sub
loopne
orl
sbb
xor
jecxz
dec
fs
lret
sub
sbb
into
fsubs
cmp
aad
or
cmpsl
aas
jne
inc
daa
sbb
jl
and
iret
leave
push
in
sub
loope
repnz
mov
push
aad
sub
dec
mov
jmp
out
das
jecxz
lcall
cltd
mov
cmpsb
xor
and
mov
jo
sub
mov
mov
test
cli
xchg
push
xchg
repnz
loopne
inc
enter
popf
cmp
xchg
cmc
test
fdivrl
clc
push
rcll
cltd
push
or
daa
push
jnp
scas
std
push
fs
loop
mov
arpl
sbb
and
cmpb
mov
mull
aam
inc
add
int
push
or
lock
xor
mov
adc
pop
pop
adc
push
pop
mov
inc
jae
shl
and
jg
dec
test
outsl
or
mov
pop
xor
andb
pop
test
mov
pop
add
sub
add
dec
xchg
cltd
xchg
mov
xor
cmp
arpl
in
push
loop
xchg
data16
out
push
adcb
dec
mov
inc
add
mov
mov
int
or
jae
enter
cwtl
sub
sti
mov
lods
pop
arpl
mov
cmpsl
fs
dec
mov
frstor
std
mov
sub
mov
scas
cmp
or
mull
xorl
in
push
idivb
xchg
or
push
icebp
cmp
loope
inc
jmp
cmpsb
pop
xor
and
pop
movsb
or
bound
cmpsl
adc
int
inc
or
test
aaa
icebp
call
jecxz
push
dec
lock
das
sbb
jbe
scas
pop
or
jb
js
jns
es
mov
mov
hlt
data16
cs
jbe
jg
push
inc
sub
sbb
dec
dec
cs
aam
ss
sub
call
xchg
hlt
sbb
and
in
inc
sarl
fidivrs
outsb
push
test
psubsw
sub
dec
fldenv
mov
into
lds
int3
or
movsb
imul
lret
rep
adc
inc
je
jl
xchg
or
jecxz
aas
fiaddl
add
bound
outsb
mov
jmp
movsl
pushf
add
imull
xchg
xchg
cmpb
sti
vmread
fnstcw
dec
clc
sub
scas
sbb
or
stos
sbb
int
pop
sbb
shrl
loope
inc
sub
sbb
dec
call
xchg
loop
rcrl
call
push
pop
ret
loop
mov
jmp
adc
pop
pop
add
movsb
jne
mov
and
fsub
inc
jae
push
cmp
int3
fucom
xchg
in
sub
movsb
bound
dec
jns
lea
inc
lahf
jl
or
jl
inc
mov
xchg
shl
push
nop
inc
jno
mov
mov
xlat
pop
cld
psubsb
cmp
mov
inc
xchg
adc
cmp
dec
and
loop
jo
mov
mov
push
roll
loopne,pn
shrl
ret
or
mov
push
cmpsb
aad
lods
je
js
push
add
push
pop
pop
lcall
push
xchg
mov
lahf
clc
cltd
dec
jne
push
push
lahf
mov
je
scas
dec
jl
orb
lret
adc
cmpsl
mov
lods
lcall
xchg
add
jbe
push
xchg
pop
pop
icebp
sub
push
fnstsw
out
lcall
insb
scas
and
push
mov
jge
mov
insl
arpl
mov
xchg
dec
or
cld
jge
sti
jns
testl
dec
adc
movsb
inc
popf
scas
imul
shlb
add
sti
loopne
cmp
out
jns
je
pop
aam
adc
dec
roll
push
leave
leave
lods
pop
xor
cmp
jno
std
mov
cmp
fistps
add
sti
std
jecxz
jae
and
mov
sbb
or
dec
imul
lret
pushf
ja
xlat
cmp
lcall
dec
dec
sbb
pop
aaa
push
push
scas
jp
sbb
es
std
jns
pusha
inc
aas
int3
ret
test
repnz
adc
and
jnp
and
insl
jle
xchg
inc
in
repnz
mov
pop
and
jmp
sbb
fpatan
mov
les
lahf
push
jmp
out
popa
xchg
stos
lcall
adc
jl
ja
mov
mov
mov
push
in
mov
mov
fstp
rclb
jl
int3
mov
in
jmp
mov
nop
andb
and
adc
hlt
mov
xchg
dec
stos
pop
adc
push
xchg
mov
adc
cmpl
pop
out
pop
adc
inc
sahf
lds
int
cmpl
mov
pop
xchg
shlb
mov
add
mov
adc
and
fs
ret
insb
mov
xor
iret
lods
imul
cmp
mov
sub
test
dec
sbb
rcll
xchg
and
sbb
aad
inc
sbb
lret
jbe
and
dec
fistps
mov
mov
and
inc
aad
cmp
pop
cwtl
xchg
aas
lea
fnsave
fiaddl
and
faddp
mov
xchg
push
leave
je
aas
dec
sub
jl
push
mov
jmp
xchg
jns
mov
ficompl
push
xor
pusha
in
pop
aas
mov
mov
inc
test
pop
xor
push
jle
inc
xor
les
jae
sub
adc
hlt
test
cmp
dec
outsl
out
cld
jle
sbb
icebp
lcall
and
fs
loopne
jp
xchg
and
mov
adc
popa
in
cmpsl
push
xchg
nop
pop
dec
jecxz
xor
insl
sbb
in
out
fwait
adc
and
fld
sub
in
out
or
loopne
neg
sub
leave
rcl
add
jno
sbb
add
imul
cmp
xchg
and
add
movsb
sub
sub
shlb
pop
push
mov
inc
cmp
out
mov
mov
imul
data16
xlat
test
gs
pop
leave
int3
std
leave
rclb
in
sbb
pusha
push
and
sbb
or
out
iret
lods
repz
mov
dec
cmp
popf
or
pop
shr
jg
pop
xchg
jbe
or
adc
in
or
or
negb
aad
in
hlt
xchg
lock
mov
jno
scas
mov
shr
pop
jmp
in
mov
insb
icebp
pop
jo
das
fistpll
lods
pop
push
mov
cld
shll
fdivl
add
xor
push
outsb
pusha
int
mov
into
or
mov
rorl
clc
in
shll
xchg
dec
push
dec
jo
leave
xlat
popf
mov
sub
std
daa
pop
jmp
clc
dec
jbe
sbb
push
add
imul
pop
dec
sahf
or
shlb
call
shl
lahf
cmp
out
inc
fs
int
mov
jg
or
mov
jno
out
inc
push
sbb
pop
fucom
aam
cmp
cltd
dec
xabort
gs
and
sub
or
mov
cli
sub
es
testl
mov
aaa
and
or
pop
mov
lock
or
mov
sbb
jecxz
inc
pop
lret
jp
lahf
mov
mov
std
cld
ss
repz
ljmp
into
stos
es
cmp
adc
cwtl
std
in
mov
and
shlb
xchg
call
stos
mov
test
insl
pop
push
cmpsb
inc
pushf
push
ja
dec
ja
shll
out
push
idiv
and
popa
xchg
ljmp
mov
push
cmpl
xlat
jo
sarl
pop
cmc
jecxz
mov
mov
fwait
mov
push
outsb
cmp
inc
test
xlat
jg
lock
push
in
xor
sti
shr
loop
xchg
mov
pop
leave
mov
push
push
dec
push
or
dec
jo
inc
lret
out
and
cmp
or
jg
xor
cltd
orl
mov
fldcw
lcall
iret
gs
imul
mov
xor
mov
mov
dec
xor
mov
cmpsl
inc
dec
fs
xchg
clc
mov
arpl
in
sarb
orl
sub
dec
shrl
push
dec
add
mov
stos
cwtl
or
xor
jecxz
divb
lods
in
cmpsl
dec
mov
mov
mov
test
mov
push
jmp
jmp
jo
fistpl
mov
pop
and
pop
push
cmpsb
push
push
push
pusha
outsl
movsb
and
fists
and
dec
loopne
lahf
iret
cmp
or
xor
setbe
or
xchg
stc
jo
cmp
push
xor
pop
mov
flds
enter
mull
mov
test
inc
push
sbb
dec
mov
aaa
xchg
xchg
in
dec
out
xchg
jne
fstps
arpl
mov
fisttps
enter
movsl
repz
rolb
inc
out
rorl
add
sbb
out
sub
sbb
push
inc
pop
jo
xchg
inc
repz
xchg
out
adc
mov
jno
xorb
lods
fstp
fstps
add
aaa
xor
popf
pop
push
outsl
shll
adc
inc
pop
xor
repnz
pop
inc
mov
xchg
fisubrl
in
adc
sbb
bound
lods
or
outsl
pop
leave
gs
cld
jle
lods
sar
push
in
ficoml
mov
js
add
and
ret
cmp
mov
lds
je
xor
adc
push
dec
mov
daa
mov
adc
lods
shrd
in
xchg
mov
mov
jnp
jbe
cs
fildll
movl
ficoml
jns
fcomps
movsb
sti
cmp
pusha
mov
add
dec
jl
mov
mov
pop
into
test
nop
inc
orl
push
scas
push
cmc
aaa
inc
sub
inc
mov
xor
mov
loopne
test
add
adc
add
int
cld
in
xor
pop
rorb
mov
xchg
push
rolb
jecxz
fistpll
in
jae
mov
aas
sbbb
add
adc
jb
pop
xchg
push
je
inc
hlt
mov
scas
fwait
and
inc
xor
mov
mov
nop
jg
pop
mov
mov
int3
cmp
int
mov
jge
cmpsb
dec
jle
fldcw
dec
add
mov
push
sbb
add
mov
pop
pop
clc
or
sbb
sub
push
adc
xchg
nop
push
cli
insl
mov
and
mov
or
mov
mov
bound
jge
mov
arpl
xchg
hlt
imul
stc
sub
inc
cwtl
movsl
add
mov
hlt
shrb
sub
cmp
ja
es
sub
mov
inc
cs
pop
mov
movl
sbb
jb
inc
sub
enter
lock
out
ret
in
xor
or
test
out
dec
mov
xor
mov
lahf
push
mov
dec
jmp
cmp
mov
ror
mov
pop
cltd
push
nop
rcr
mov
cs
cs
xchg
into
imul
in
outsb
sbb
xor
hlt
sar
dec
lret
push
and
sahf
fldcw
shl
test
sbb
inc
jecxz
lds
nop
fisttpl
hlt
mov
xor
xlat
into
lea
xchg
cmp
mov
fcoml
hlt
dec
popf
std
xchg
pop
xor
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
mov
pop
xor
mov
cmpsb
ja
pop
xchg
testb
mulb
jae
arpl
mov
jbe
data16
push
xlat
shlb
cmpsb
aaa
cli
pop
xchg
mulb
ja
inc
jns
cmpsl
es
popl
xchg
ss
notw
inc
xlat
push
adcl
push
xchg
enter
push
cmpsl
add
in
mov
xchg
add
ljmp
push
in
xchg
jno
adc
jl
aas
data16
push
cmp
pop
and
hlt
push
jae
call
pop
mov
push
dec
xchg
js
mov
cmp
dec
dec
jecxz
jecxz
nop
out
mov
or
cmpsb
cmpsl
add
and
sahf
adc
push
into
aaa
jae
push
or
inc
sub
es
xchg
js
xchg
mov
data16
cmp
dec
icebp
stos
lret
sbb
or
pop
xchg
push
test
xor
scas
xchg
dec
pop
dec
fdivrs
enter
or
je
add
push
repnz
sti
xor
mov
xchg
jae
pop
adc
ja
inc
pusha
mov
stos
fldt
filds
fbld
aam
loop
jnp
ret
mov
in
jae
arpl
add
or
sti
popa
ret
jno
je
jnp
xor
xchg
fs
je
push
aad
cmpsl
push
or
aas
mov
lret
imul
movsl
sub
ja
inc
push
cmpsl
es
xchg
xchg
jbe
notw
inc
xlat
mov
cmpsb
aaa
xchg
pop
xchg
mulb
ja
inc
push
cmpsl
es
xchg
xchg
jbe
notw
inc
xlat
mov
add
jp
stc
cmp
push
jle
out
fs
mov
fs
and
dec
push
lcall
std
adc
repz
insl
sbb
cmp
test
jns
fisubrs
out
mov
repz
cmovns
or
shll
mov
cli
je
push
dec
inc
inc
mov
jne
call
ljmp
xchg
mov
adc
push
jle
dec
lret
ja
push
das
fstps
push
fidivl
xchg
xor
mov
dec
scas
mov
xchg
push
es
leave
bswap
movsb
mov
sarb
icebp
addr16
mov
out
out
jp
pop
jmp
and
sbb
mov
sbb
dec
sub
and
mull
int
cmpsb
dec
jecxz
dec
test
xacquire
sub
inc
cmp
fildll
xlat
shrl
test
dec
mov
inc
shrb
fs
push
popa
jg
push
mov
push
aam
aaa
adc
arpl
loopne
xor
in
lock
adc
testb
out
imul
jecxz
jb
fsubrl
fwait
or
insb
mov
jne,pt
or
push
push
add
ds
ficoms
add
aam
xchg
pusha
push
in
lret
ja
add
pushf
xor
loopne
xlat
scas
ss
sbb
sahf
clc
ret
jecxz
clc
xor
das
js
out
add
xor
add
xchg
dec
and
dec
ja
icebp
test
pop
scas
mov
mov
out
sbb
adc
fildll
push
popf
movsb
enter
xchg
clc
enter
dec
ds
lahf
imul
mov
adc
push
cmp
adc
jae
jg
fnsave
std
test
mov
cmp
or
sbb
js
js
cmp
hlt
pop
push
sub
jb
cli
dec
sub
mov
std
adc
les
loopne
pop
int
push
adc
pop
pusha
shrl
and
lea
mov
inc
loop
sbb
mov
imul
sub
xor
popl
mov
adc
mov
xchg
cmp
add
repnz
leave
scas
mov
stc
mov
insl
cmp
add
xchg
fistpll
mov
xchg
in
mov
mov
mov
add
inc
xchg
push
dec
pop
jne
jmp
inc
and
mov
jns
jp
addr16
arpl
lahf
js
mov
sbb
aam
xchg
pop
mov
lahf
lea
dec
xchg
mov
mov
imul
out
nop
push
mov
push
call
add
stos
addr16
xchg
jns
xor
pusha
or
mov
sub
xor
imul
xchg
push
jmp
add
mov
inc
notl
xchg
push
adc
jnp
push
mov
movsb
xor
loope
mov
jb
dec
stc
xor
fldenv
iret
pop
cld
xor
pop
inc
xorl
jge
test
xchg
aaa
inc
sbb
jp
dec
fisttpl
mov
dec
push
mov
mov
cmp
push
icebp
and
insl
lret
aaa
or
addr16
enter
xor
mov
sub
jmp
rorl
bnd
es
sbb
pop
leave
sub
insb
call
xchg
pop
ds
pop
add
icebp
adc
test
dec
sbb
sub
in
inc
clc
mov
xlat
mov
std
loopne
jo
pop
sbb
mov
cmp
ret
push
sarb
xor
lret
jnp
adc
int
pop
xchg
xchg
loop
cmp
es
dec
adc
lods
mov
sbb
or
mov
out
stos
divb
push
jne
sub
roll
cmpsl
outsl
jg
jl
xchg
aas
stos
pop
push
sub
sbbl
cmpsl
push
xor
xchg
push
iret
fmul
call
push
cmp
mov
cmp
icebp
and
inc
fs
and
mov
mov
scas
and
and
mov
xlat
push
ss
rcll
jge
and
cmp
sbb
push
in
pusha
rorl
out
pop
in
in
add
test
dec
jns
ds
icebp
addr16
mov
mov
stc
les
push
pop
aad
sub
int3
sub
dec
mov
adc
dec
and
pop
cli
or
push
lock
loope
xchg
fistps
lret
fs
add
sub
mov
add
mov
stos
fisttpl
xor
pop
and
push
je
ror
pop
in
add
insb
repnz
movsb
imul
in
dec
or
les
mov
fsubrl
add
clc
adc
pop
sbb
rcrl
xchg
jp
mov
push
and
mov
movsl
or
fnstenv
aas
push
xor
out
xorl
test
repz
mov
lahf
lock
xor
int3
xchg
xchg
mov
xor
hlt
push
pop
aaa
mov
int
pop
mov
repnz
js
add
pop
dec
xor
mov
inc
das
fnstenv
mov
cmp
test
push
jp
ror
fmull
mov
sbb
jbe
mov
dec
fs
outsb
mov
pop
ljmp
xchg
js
cmp
cli
negl
mov
cmpsl
sarl
mov
mov
mov
and
add
sbb
or
leave
push
dec
lret
lods
jle
mov
sbb
mov
rolb
lock
es
push
cmp
arpl
ljmp
stc
sbb
leave
pop
insb
jo
mov
mov
outsb
or
push
outsl
xchg
ja
roll
and
insb
aam
insl
mov
xor
adcb
mov
js,pt
or
loop
scas
adc
jno
fisubl
mov
push
mov
inc
pop
icebp
mov
popf
add
adc
xchg
mov
jno
xchg
add
add
inc
sub
jno
inc
popf
inc
sbb
in
add
xor
dec
cmp
push
xor
repz
adc
cmp
and
jb
mov
push
dec
pop
mov
and
call
fimuls
mov
imul
dec
cltd
arpl
xchg
adc
mov
jae
es
mov
imul
mov
mov
cld
into
ds
lea
or
inc
outsl
fstp
leave
lcall
jbe
out
std
lods
sub
ss
lret
push
add
into
lock
mov
cmpb
mov
push
cmpsl
xchg
in
cli
sub
mov
pop
dec
adc
fisubrs
mov
and
popf
push
in
add
into
inc
mov
pop
sbb
into
fiaddl
sbb
or
lods
jmp
test
fcoml
insb
lea
insl
pop
aam
add
stc
dec
in
adc
ds
and
mov
fwait
jo
xchg
pushf
jno
shlb
dec
or
sbb
fldcw
aaa
xchg
cmp
pop
fstps
hlt
or
jbe
push
cmp
mov
jl
push
sbb
jns
push
adc
xchg
insl
or
mov
icebp
sbb
popa
xchg
scas
xchg
jl
adc
mov
jmp
push
mov
or
daa
jl
jnp
xchg
mov
jnp
rcll
cltd
invd
push
loope
daa
popa
outsb
or
jne
push
out
sub
neg
scas
and
aaa
mov
pusha
xchg
sbb
outsl
vminpd
std
or
in
xchg
fcomip
scas
addr16
int
subl
pop
cli
pop
cmp
push
ljmp
in
lods
roll
xor
es
adc
lds
mov
push
dec
rcl
dec
lahf
and
mov
mov
pop
mov
push
mov
popf
xchg
fdiv
ret
hlt
out
imul
pusha
jae
xchg
sub
mov
std
jnp
xor
sub
jo
call
add
inc
cmpb
mov
shrl
bound
jle
ret
test
leave
push
ja
adc
iret
iret
fdiv
mov
xchg
dec
lods
rcr
pop
mov
inc
aam
adc
mov
xchg
rclb
bound
push
shr
push
pop
int
and
test
mov
mov
pushf
in
and
test
pop
cmp
pushf
push
out
push
pop
jae
dec
dec
daa
inc
pop
sbb
sub
mov
adc
add
dec
fldcw
sub
adc
xor
push
jecxz
loop
inc
mov
mov
push
mov
inc
or
push
pop
movsl
ret
addl
fcoms
xor
fsubrl
rcl
sbb
inc
jo
and
dec
or
pop
stc
imul
jecxz
xchg
push
xor
sub
ret
int3
pop
into
cmp
mov
sti
jno
push
fcompl
vmovapd
inc
dec
cmp
sub
jp
mov
std
in
int
ds
fimuls
cwtl
jb
xorb
fisubrs
mov
mov
push
adc
mov
outsb
cs
adc
jl
shl
sahf
sbb
jmp
out
mov
cmc
ljmp
mov
int3
or
int3
fstpl
cmp
cmpsl
jecxz
dec
daa
mov
pop
jo
add
icebp
fimull
mov
xchg
sarb
imul
xchg
rcrb
movsb
popa
arpl
pop
add
mov
addb
out
mov
outsl
inc
enter
repnz
xchg
mov
and
addl
sub
rorb
cmp
add
dec
cmpsl
dec
inc
insl
arpl
or
sarl
outsl
clts
cmp
xchg
nop
push
dec
jmp
stos
fidivrs
jge
xchg
popf
xchg
xorb
repnz
inc
adc
ret
jle
sbb
ret
pusha
test
outsb
push
insl
xchg
lret
out
xor
fnstcw
push
popa
int
shlb
sti
jbe
imul
xor
adc
cli
and
lcall
push
nop
hlt
out
mov
xchg
sarl
or
sti
xchg
lcall
lds
jnp
cmp
mov
cmp
in
dec
cmc
imul
addr16
mov
or
jmp
add
adc
and
pusha
push
add
in
movb
sub
lods
cmp
test
out
pusha
push
shll
cmpsb
fs
and
and
out
or
cmovp
jge
gs
aam
jbe
sub
sbb
dec
jne
sub
inc
shll
or
push
jnp
or
xchg
cli
ss
jp
mov
fs
xor
out
xchg
pop
or
dec
adc
ds
pop
cmp
les
lds
cs
bound
mov
cmc
fwait
pop
push
mov
sub
ret
ficoml
push
out
xor
jne
decl
cmp
dec
je
ljmp
negb
add
cmp
hlt
ss
xor
loopne
inc
divl
sub
popa
rcll
imul
test
orl
pop
aad
mov
jg
inc
jbe
xor
gs
addr16
fs
sahf
mov
sbb
cmp
ja
jl
xor
in
jns
push
aam
mov
fwait
jge
dec
lcall
enter
pushf
hlt
jl
inc
lock
ds
rcl
inc
dec
mov
jns
dec
pop
push
pop
dec
dec
scas
call
into
dec
dec
push
addr16
jno
mov
aam
xchg
les
sbb
sti
xor
mov
lret
inc
out
icebp
nop
xchg
pop
or
jbe
popf
mov
xlat
loope
push
xor
movsl
int3
xchg
ret
sbb
arpl
rcl
sti
outsb
int3
dec
adcl
arpl
push
jnp
pop
xor
cltd
jae
or
mov
sbb
and
add
hlt
rcl
pop
jl
cs
or
hlt
inc
sbb
adc
pop
mov
pop
cmp
push
lret
mov
cld
out
ja
sub
mov
repz
enter
xor
inc
adc
fbld
testb
inc
loope
es
daa
inc
inc
in
jp
push
jmp
and
inc
jmp
icebp
and
fld
pop
ret
cmpsl
in
lods
loope
push
or
sbb
sti
ds
cmp
add
test
pop
push
xchg
add
xor
in
pop
mov
jmp
cmp
sub
shll
sbb
cmpsb
cmp
fsubrs
pop
call
fs
pop
xchg
fsubrp
imul
adc
mul
xchg
jae
jg
xor
js
add
lret
cmpsl
dec
adc
in
pop
outsl
or
insb
sbb
jae
lods
push
movsl
push
fwait
lods
jnp
loop
aaa
popf
jns
std
testb
stos
shll
sbb
ret
aam
xchg
pushf
add
sarl
push
xor
icebp
add
inc
cmp
xor
es
mov
jmp
out
dec
push
mov
leave
popf
cld
cltd
stc
repz
add
mov
pop
ret
or
inc
dec
sub
or
out
mov
jbe
mov
shlb
jb
and
pop
movsl
cmc
dec
ret
or
mov
dec
sbb
lcall
das
jb
push
test
test
outsb
sub
addr16
mov
cld
and
sbb
push
insl
cmpsl
decl
iret
mov
inc
inc
mov
icebp
pop
aaa
iret
xchg
dec
jnp
xor
and
sbb
mov
arpl
mov
in
mov
rcl
cli
in
mov
call
mov
xchg
fldcw
cmp
sbb
sbb
pushw
aaa
mov
fistpl
sub
pop
xchg
push
shlb
lahf
sahf
push
sbb
jno
push
mov
inc
pop
mov
cltd
ss
and
js
clc
sub
sub
lcall
pop
add
insl
push
sbb
pushf
add
xor
jl
pop
jmp
loopne
ljmp
pop
jbe
or
push
scas
jno
pop
outsl
mov
sbb
mov
arpl
ret
jnp
pop
cmp
jne
sbb
dec
sub
and
mov
ss
xchg
aam
xchg
jno
adc
mov
icebp
push
icebp
movl
mov
fucomip
add
loope
jp
cld
push
jge
mov
cmp
rolb
inc
or
cmp
and
stos
cmp
dec
xor
sbb
or
mov
jb
imul
out
dec
ss
inc
add
loopne
imul
test
inc
and
inc
cld
in
stos
cmp
test
sub
lods
xor
jle
fsubp
shll
push
jmp
pop
mov
mov
jo
xchg
xor
in
lret
arpl
into
in
mov
daa
adc
inc
pop
sbb
dec
and
add
daa
jl
gs
dec
in
cmc
scas
xchg
inc
mov
xor
jge
iret
popa
ret
push
push
insl
sub
lds
in
rcr
pcmpgtw
push
sbb
mov
cmp
mov
ret
add
js
loope
daa
mov
mov
stos
in
das
xchg
push
lret
das
movsb
pop
out
lcall
xchg
jno
push
mov
mov
jns
loope
imul
pop
shrb
cmp
jmp
mov
sub
lgs
nop
mov
push
not
test
shll
cli
push
loop
out
mov
out
add
arpl
adc
mov
mov
repz
and
enter
jno
adc
fcomps
and
mov
arpl
arpl
loopne
cwtl
daa
mov
subb
or
xchg
mov
mov
mov
popf
inc
scas
outsl
aam
test
add
hlt
popa
xor
adc
lcall
jae
cmpsb
imul
mov
dec
push
cld
int
or
scas
sub
cmc
adc
mov
jb
push
pop
add
dec
jp
jnp
lods
adc
and
mov
stos
sub
adc
mov
ss
and
mov
shrb
xchg
jg
mov
add
xor
loop
inc
outsb
fdivrs
hlt
cmpsl
nop
nop
pop
mov
iret
jns
cmp
or
jb
push
idivb
or
in
call
push
inc
js
ret
pop
jne
push
cli
test
and
mov
push
dec
push
std
mov
ret
loope
lret
dec
mov
lock
shr
push
jl
xchg
xchg
stos
adc
ret
cwtl
xor
cmp
push
push
and
mov
popa
mov
jo
pushf
jo
and
in
mov
or
outsb
add
out
outsb
jns
test
and
bound
push
sbb
aad
inc
mov
sahf
push
xchg
iret
je
mov
lock
in
hlt
outsb
aas
pop
mov
fistl
mov
xchg
mov
push
xchg
stos
idivl
out
imul
inc
pushf
iret
mov
rcrl
inc
aas
cmp
cmp
mov
push
shlb
xchg
add
mov
bound
mov
or
dec
repnz
inc
and
test
inc
mov
fldl
mov
sub
inc
fistl
adc
lods
mov
and
int
inc
push
xchg
or
aaa
jp
add
rolb
cmpsb
ret
hlt
push
add
push
sub
decb
out
in
test
push
or
aaa
jo
outsb
cmp
xchg
nop
push
rcr
lea
insb
cmp
ret
psubusb
into
popf
divb
repnz
mov
push
lods
xchg
mov
adc
idivl
lods
add
xchg
dec
xor
sub
or
cld
aas
xchg
fwait
inc
sub
mov
lahf
sti
rorb
insb
xor
pop
and
cmp
xchg
jno
movsl
cs
jno
adc
adc
add
dec
hlt
jecxz
bound
push
push
and
xchg
sub
popf
inc
pop
pop
popl
push
into
fs
cmpsb
sbb
sub
dec
or
fsubr
fbld
adc
mov
les
pause
loop
sbb
add
add
sub
cmpsl
push
pop
ja
or
fs
dec
mov
pop
gs
dec
js
mov
dec
fildll
mov
xchg
jge
xor
push
inc
imulb
pushf
cmp
cmp
dec
call
aaa
cld
test
adc
xchg
out
jmp
sbb
pop
lods
adc
mov
in
lods
dec
sub
clc
add
jp
lock
loope
cmp
sbb
jmp
or
inc
jo
inc
jg
push
popf
int
inc
movb
std
mov
stc
int3
sbb
dec
fs
and
scas
in
dec
xchg
enter
cmpsb
xchg
cs
popa
insb
ja
pop
icebp
das
add
mov
mov
cmpsb
dec
inc
insb
loopne
or
push
and
dec
pop
inc
ret
push
repnz
out
fs
and
mov
cmc
orl
iret
push
int
inc
sbbb
repnz
xchg
jbe
inc
arpl
adc
icebp
sub
sahf
and
fldt
jge
mulb
cld
fidivrs
or
xchg
cli
shrb
sahf
jb
call
aas
or
xor
ficoms
popa
and
test
sub
mov
cmp
pop
jge
in
cmp
dec
add
cmp
and
int3
nop
test
mov
adc
mov
xor
xchg
xchg
jp
rorl
test
mov
jne
lea
add
movsb
jbe
pop
lea
fidivrs
sbb
and
mov
or
cwtl
push
push
inc
push
test
and
dec
mov
lds
dec
mov
and
adc
loopne
mov
add
mov
fldpi
pushf
add
and
callw
inc
push
mov
outsb
sbb
lret
test
pushf
xchg
mov
add
orb
ret
mov
xor
cmp
lret
cmpsl
dec
movsb
je
dec
add
dec
into
out
jnp
inc
popa
shrb
inc
and
or
jge
cs
jno
fcmove
in
inc
or
or
and
popa
pop
js
mov
imul
sbbl
fiaddl
add
inc
push
ret
and
adc
cmp
jae
adc
inc
jno
cltd
jp
mov
int
add
ret
add
sub
xchg
xchg
jbe
hlt
sbb
or
xchg
push
aaa
roll
xchg
mulb
ja
inc
push
cmpsl
es
xchg
xchg
jbe
notw
inc
xlat
mov
cmpsb
aaa
xchg
pop
xchg
mulb
ja
inc
push
cmpsl
es
xchg
xchg
jbe
notw
inc
xlat
mov
xchg
cmp
pop
xchg
data16
inc
push
push
cmpsb
es
xchg
sahf
jbe
jbe
push
into
scas
xor
jecxz
push
mulb
ja
movl
mov
lahf
out
scas
push
adc
add
xor
and
sbb
inc
push
sub
les
aam
les
adc
add
xor
and
push
push
inc
ss
sbb
xchg
movb
xchg
mov
cmpsb
in
adc
add
xor
and
push
push
inc
ss
fs
xchg
in
xchg
add
xor
cmc
lcall
jbe
sbb
lods
out
push
ja
icebp
cld
jge
fcompl
xchg
or
mov
mov
mov
lret
outsb
push
dec
jnp
mov
xchg
test
pop
das
and
aam
cld
xchg
push
in
arpl
xchg
rorl
push
push
popa
and
idiv
inc
outsl
push
es
sbb
xchg
dec
sub
push
repz
test
lret
inc
xlat
imul
jnp
insl
mov
dec
hlt
cmpsb
sbb
mov
fs
jl
and
dec
mov
jno
movsb
icebp
xchg
adc
add
xor
and
push
push
inc
ss
fs
xchg
movb
xchg
mov
cmpsb
lea
adc
and
xor
pop
xor
test
xchg
mov
and
popa
adc
cmp
jae
arpl
movsb
fbld
shll
int3
mov
push
inc
dec
xor
inc
push
jp
inc
ss
fs
xchg
movb
xchg
mov
cmpsb
in
adc
add
xor
and
push
push
inc
ss
fs
xchg
movb
xchg
mov
cmpsb
in
adc
insb
jmp
sbb
and
stos
data16
mov
mov
test
cld
repnz
pushf
cli
ss
jnp
sbb
push
and
fidivl
jmp
mov
push
nop
std
pop
pop
lret
sbb
push
xchg
stos
aas
out
mov
mov
cmp
mov
jb
test
mov
lret
imul
popa
mov
add
insb
cmp
fnstcw
sub
inc
sub
out
xchg
imulb
lret
jp
ret
add
mov
add
cmp
or
stos
inc
pop
pop
jne
xchg
fwait
push
pop
sub
jo
sbb
imul
jns
cmp
or
lret
mov
inc
scas
mov
out
imul
sub
adc
jo
ljmp
movsl
stc
test
lahf
paddsb
outsl
cld
bound
in
sbb
lcall
mov
sub
enter
insb
adc
aas
jle
inc
out
sbb
mov
aas
xor
repz
cmpsl
xchg
lods
subl
and
out
lock
lock
and
adc
and
icebp
outsb
mov
mov
sub
cmc
add
pushf
push
cmpsb
push
fdiv
adc
lods
xor
test
mov
push
pop
sub
adc
fstpt
lcall
mov
push
push
std
cmp
inc
or
xchg
xchg
loop
add
das
movsb
lret
sti
dec
and
daa
es
push
inc
sahf
lcall
sbb
xlat
and
dec
out
mov
imul
pop
cmpl
mov
lods
mov
push
pop
mov
cmpl
mov
or
jae
dec
adc
pop
inc
lahf
int3
addr16
pop
mov
outsb
pop
cwtl
jle
jnp
dec
jp
hlt
xor
aad
ja
std
aad
test
in
fdivrs
pop
sub
cwtl
sbb
sub
jg
fstpl
sbb
sahf
fwait
pop
movsl
je
fsubrs
jmp
fstpl
push
sbb
pop
lea
xchg
mov
and
into
mov
dec
fadd
fildl
dec
aad
ja
into
push
mov
shll
jo
mov
outsb
lcall
rolb
mov
lret
or
out
jno
lea
push
rorl
lcall
insb
xor
xor
fldl
pop
or
cwtl
or
fdiv
fistpl
loope
xchg
xor
int3
mov
jb
jmp
add
dec
mov
push
cmp
pop
clc
popa
decb
scas
xchg
inc
mov
loopne
clc
sub
inc
fcoml
in
test
adc
in
lds
jo
leave
movsl
mov
dec
cmpsl
xor
adc
cmp
xor
xchg
pop
or
movsl
cmp
cmp
sub
jno
xchg
dec
lods
cmp
push
dec
test
jae
mov
imul
mov
data16
pusha
mov
jnp
dec
enter
rcrb
push
add
or
or
aas
loop
stc
jecxz
xchg
mov
sub
out
dec
inc
or
push
jle
adc
cmpsb
inc
leave
mov
or
lret
mov
mov
pop
sahf
cmp
cmp
xchg
jg
inc
sbb
mov
je
dec
in
int3
pop
mov
xchg
push
jb
daa
ror
xchg
jbe
aam
cmpsl
mov
cmpsb
adc
mov
and
sahf
nop
divl
or
jmp
pop
ds
subl
sbb
pop
lods
xchg
mov
popf
and
mov
insl
popa
jle
inc
cmp
sbb
pop
dec
dec
pop
mov
sbb
add
sub
into
repnz
lock
cld
push
mov
or
data16
mov
push
sub
in
popa
out
xchg
addb
scas
jbe
nop
es
jae
enter
clc
shrl
sahf
fcmovb
ret
push
test
mov
xchg
iret
pop
in
movsl
repz
cwtl
mov
adc
lods
lcall
mov
dec
pop
aam
pop
push
data16
sbb
dec
loopne
inc
pop
mov
and
cmpsb
aas
and
ss
jge
aaa
cmp
mov
out
mov
push
push
lret
pop
push
std
cmp
push
stos
mov
pushf
fcomps
jg
in
mov
xchg
add
ds
add
lret
jbe
pop
mov
cld
xchg
push
push
push
call
mov
shlb
shll
stos
mov
xlat
mov
rcrb
mov
mov
psllw
test
mov
push
jl
bound
fnstenv
imul
sub
out
pop
lock
sbb
in
sbb
in
gs
data16
iret
es
lahf
pop
mov
sbb
mov
scas
adc
mov
pop
test
sbb
xor
nop
cli
mov
dec
add
lea
or
test
mov
mov
and
stos
popf
cld
std
cld
scas
sbb
test
pushf
cmpsl
cmpsb
mov
and
ret
popf
xor
aaa
mov
das
push
xchg
lods
sbb
sub
rolb
icebp
dec
dec
pop
mov
jae
push
pop
push
dec
push
jns
xor
dec
lret
pop
les
outsb
sbb
sarl
xchg
andb
movzbl
pop
add
push
outsl
jmp
hlt
inc
and
sub
push
sub
xchg
inc
mov
daa
inc
stc
push
jnp
xor
mov
sarl
hlt
jle
insb
sbb
sub
mov
inc
dec
add
dec
shll
and
pop
jbe
jecxz
jle
cmp
jnp
xor
fadds
add
aad
cmp
lods
mov
out
in
call
push
jg
inc
mov
btcl
mov
int
sbb
inc
out
mov
xorl
divl
out
fldln2
out
fiadds
lea
hlt
add
js
adcl
lock
fwait
pop
xor
pop
stc
rcrb
adc
push
or
test
imul
cmp
cmpsb
push
or
dec
cmp
cmpsb
dec
xor
inc
xchg
push
push
xchg
pushf
lret
mov
adc
pop
ficoml
fdivrp
pop
pop
test
rorb
jmp
adc
insl
and
flds
pusha
out
push
loop
jl
and
pop
cmp
decb
hlt
or
rcll
xchg
pop
xchg
and
fildl
adcb
sub
push
mov
mov
jo
les
std
fsubrs
jne
data16
leave
pop
insl
pop
adc
pop
aas
enter
and
fldt
jo
out
jmp
dec
inc
sub
inc
xchg
inc
jge
or
inc
and
popa
addr16
shlb
dec
ljmp
mov
incb
imull
mov
std
repnz
push
sub
out
dec
arpl
scas
sahf
rcll
pop
add
inc
dec
shll
mov
pusha
pop
push
or
cmpsl
rcl
cs
dec
sbb
mov
adc
punpcklwd
push
std
fidivrl
cmp
pop
xchg
fiadds
or
in
jge
and
inc
in
popf
mov
std
mov
sub
cmp
les
xor
push
aad
imul
mov
add
mov
push
jp
push
fmulp
sub
inc
ja
cmp
out
andb
sarb
push
js
loop
movsb
aad
mov
into
lods
mov
lcall
xorl
mov
xchg
push
sahf
cmc
das
adc
bts
push
cmp
inc
fistpll
shl
rolb
rclb
pop
mov
sub
xor
mov
pop
dec
adcb
inc
and
icebp
and
add
mov
fdivrl
xor
and
push
cmpsb
jnp
sub
pop
dec
lock
enter
pop
mov
inc
in
xor
add
loopne
mov
movsb
pop
xchg
mov
das
mov
sahf
sub
xchg
in
divl
xor
add
jno
xor
les
stc
dec
xchg
lods
iret
mull
mov
sub
jae
xor
dec
jmp
je
cmp
lret
cmpsl
or
daa
out
fstps
into
pop
pushf
inc
and
loopne
mov
icebp
mov
stos
push
movsl
cmpsl
xchg
iret
iret
adc
jg
rcrl
push
lcall
push
jge
mov
gs
add
mov
bound
adc
pop
leave
push
pushf
aas
adc
push
cmp
and
ret
and
repz
mov
mov
in
push
cld
icebp
mov
fcomip
sbb
dec
pop
pop
cld
dec
stc
and
mov
add
mov
pop
xor
sub
and
push
test
outsb
mov
mov
je
mov
jns
leave
sub
and
mov
subb
pop
mov
shll
test
mov
loop
xchg
sub
sub
push
adc
pop
pop
loopne
dec
leave
sub
stc
insb
and
mov
pusha
outsb
scas
gs
divl
inc
mov
add
int3
jae
cmpsb
push
inc
es
scas
jbe
or
fildll
addl
cwtl
inc
sti
movsl
jg
movsl
shrb
inc
mov
imul
aam
scas
adc
cmpsb
sbb
xor
lcall
int3
cmc
movsb
out
rcrl
mov
sbbb
adc
test
lods
push
insl
out
ljmp
test
test
cwtl
inc
test
jmp
aas
pushf
bnd
sbb
fdivl
pop
shlb
sub
adc
jl
inc
mov
shll
ret
mov
and
inc
cwtl
mov
rorb
stos
and
mov
inc
cmc
int
es
rol
addb
push
pop
push
insb
mov
jmp
test
jae
ja
out
add
arpl
dec
lret
and
mov
pop
adc
movsb
jecxz
inc
lret
les
mov
push
ss
cmp
xor
fdivrs
push
mov
adc
and
fdivrs
pop
cmpsl
sub
pusha
dec
insb
and
in
clc
fldt
aam
jecxz
movsl
xchg
cwtl
adc
arpl
lret
jle
fistps
dec
clc
or
rcrb
das
cwtl
xor
ja
and
xchg
sahf
dec
mov
pop
jmp
mov
mov
movsb
cwtl
jbe
adc
xchg
cmpl
jp
outsl
fiaddl
pusha
outsl
xchg
subb
fldl
out
dec
add
jns
xchg
mov
push
xchg
insb
push
push
mov
xchg
cmpsl
sbb
add
out
push
pushw
xchg
or
jns
mov
test
mov
mov
fcoml
push
adc
push
mov
mov
jne
mov
pop
pop
mov
fnstenv
fists
test
adc
adc
notl
lods
or
inc
shrl
test
ficomps
sbb
es
icebp
mov
xchg
cmp
and
sbb
inc
dec
in
cs
xchg
jg
or
pop
sarl
repnz
adc
test
xchg
push
pop
xchg
sub
pushf
nop
das
inc
mov
test
leave
push
push
movsb
scas
dec
push
add
leave
xor
inc
out
inc
mov
or
das
mov
mov
push
testl
repz
arpl
xchg
cwtl
xchg
roll
xor
clc
fcom
push
add
mov
nop
inc
subb
xor
push
xchg
xor
in
mov
push
sub
jbe
and
jmp
or
push
push
xchg
xor
mov
outsl
addr16
adc
xlat
mov
and
cmp
push
jo
scas
pop
repnz
lods
insb
test
hlt
and
mull
mov
inc
inc
jecxz
arpl
insl
adc
es
dec
sahf
cld
or
mov
inc
dec
push
push
cwtl
orl
aas
add
cltd
and
sbb
sub
sub
jo
loopne
aas
add
mov
inc
mov
test
ljmp
mov
aam
pop
or
addr16
stos
movb
insb
dec
or
xor
cmp
std
inc
jne
adc
mov
in
push
push
sahf
mov
and
aaa
fwait
in
cmp
jb
gs
in
mov
adc
jle
aad
mov
ret
movsb
sti
fs
hlt
daa
mov
add
jmp
lcall
std
add
mov
adc
inc
add
cmp
in
rcl
dec
test
scas
mov
push
in
xor
pushf
adc
xchg
ja
push
add
jo
movsb
imul
xchg
das
and
jb
idiv
dec
dec
sbb
lcall
mov
sbb
push
cmpsb
insb
or
jo
aam
leave
push
fstpl
flds
into
pop
sub
adc
cmp
sbb
jne
or
lcall
repnz
cmp
shl
mov
pop
pop
sub
shr
popa
arpl
movsl
pop
je
cs
pushf
cmp
shll
jo
aad
adc
loope
inc
xlat
in
fxch
adc
bound
jg
nop
icebp
inc
addb
and
stos
xchg
nop
push
mov
and
cmp
jg
mov
andl
or
out
mov
call
inc
scas
lods
fldcw
xor
out
lcall
insb
xor
push
adc
pop
xchg
inc
mov
xchg
imul
pop
sub
jmp
in
mov
dec
adc
push
outsb
pop
jnp
inc
inc
xor
fcoml
dec
lret
push
movsl
hlt
cmp
fwait
aam
test
aad
sti
cmp
popa
icebp
lds
shl
imul
pop
xchg
xchg
or
or
xor
aaa
xor
add
test
xor
lock
into
add
mov
mov
aam
dec
xor
pop
pop
mov
scas
ja
add
cmpb
xchg
fldt
mov
xchg
jmp
cld
and
ja
fidivrs
rorl
mov
inc
leave
shlb
out
aam
inc
xor
xchg
sbb
push
add
pop
xchg
jecxz
movsb
xor
popf
fsubrs
movsb
mov
mov
pushf
cli
adc
fcomps
jle
shll
pop
ds
loope
adc
push
mov
mov
out
add
imul
scas
aad
dec
rclb
outsb
mov
scas
cmp
jge
dec
in
aam
lret
pop
les
popf
and
push
insl
lods
popa
ljmp
sub
dec
test
dec
cwtl
xchg
pop
repnz
adc
and
shlb
ret
and
test
outsl
adc
jecxz
cs
ljmp
jae
mov
fwait
bound
xor
aam
outsb
pusha
mov
orb
shrl
in
mov
mov
sbb
pop
rorb
pop
add
data16
jl
insl
sub
mov
cltd
scas
and
mov
cld
in
aaa
pop
xchg
icebp
insb
pop
mov
add
stos
lret
mov
sti
je
iret
cmpb
mov
call
scas
addr16
pop
fwait
ljmp
ds
cmp
addb
cmp
push
enter
jno
fiadds
mov
es
out
in
andb
aad
scas
setp
into
mov
loop
jno
in
and
movsl
or
xlat
push
and
scas
fnsave
arpl
imul
fisubs
rorl
std
cli
push
insl
cmpsb
arpl
je
xchg
js
and
cli
or
scas
mov
sbb
lods
jns
cmp
sbb
push
pop
mov
es
out
mov
cli
cmpsl
js
mov
mov
scas
pusha
int3
ret
or
adc
sbb
test
dec
and
insb
xchg
loopne
dec
adc
loope
cmp
loope,pt
and
sub
out
adc
and
and
pop
fwait
mov
sub
lret
mov
xor
roll
fldl
xor
lcall
inc
jmp
inc
xchg
pusha
and
popa
sbb
stc
adc
and
enter
stos
adc
and
mov
stc
dec
stos
je
sbb
sbb
sub
je
ja
xlat
sub
test
push
nop
dec
xor
lret
pop
mov
cmp
xchg
fwait
int3
hlt
mov
or
add
add
shll
mov
jmp
push
ret
cld
dec
and
jne
inc
sub
int3
push
mov
popf
sarl
stos
adc
fs
js
push
jg
call
lret
inc
in
sub
sbb
or
ja
push
mov
repz
push
stos
lea
mov
aam
mov
lock
sbb
jns
out
fwait
dec
and
imul
sbb
or
cmp
push
popa
xchg
movsb
or
ror
mov
notl
jecxz
addr16
push
dec
fisttps
ja,pt
shr
jno
dec
aad
in
lahf
push
mov
jne
sarb
hlt
cmp
mov
inc
addr16
inc
lods
cmpsb
je
lock
mov
gs
xor
xchg
pop
rclb
or
sbb
jp
inc
arpl
inc
mov
in
fwait
shrl
je
inc
ljmp
or
hlt
cmc
jae
bound
lods
loop
ds
cmpsl
mov
pop
or
dec
add
dec
cmpsl
and
stc
out
cmp
pop
push
mov
mov
xchg
add
test
cmp
andl
insl
cmp
sbb
daa
xor
imul
xchg
stos
mov
and
fildl
out
xor
gs
aas
sti
rorb
ficompl
mov
in
loope
test
shlb
test
cmpsb
or
push
pop
sbb
and
cmp
loop
enter
hlt
xlat
inc
mov
out
inc
dec
daa
add
test
pop
mov
popf
stc
mov
jmp
pop
sbb
imul
insl
fistpll
jb
incl
addb
sub
xchg
jb
add
sub
rorb
int
mov
ret
cmp
mov
lock
pop
lahf
xchg
fs
leave
fisubrl
cltd
xor
adc
jp
push
leave
adcb
scas
dec
mov
push
xchg
add
jg
sbb
mov
sbb
sbb
inc
rcr
call
mov
shll
test
mov
arpl
or
xor
mov
mov
loope
xchg
lods
add
imul
mov
adc
xchg
test
cmpsl
int3
lcall
cmpsb
xchg
iret
push
out
cwtl
or
aad
push
js
lret
xor
cmp
fs
cmp
daa
fcomps
sub
dec
es
out
arpl
ja
loope
stos
movsl
mov
loop
add
aas
mov
xor
mov
mov
adc
stc
sahf
sbb
inc
push
pop
xor
xor
sub
or
mov
out
mov
mov
cmpsl
sbb
hlt
arpl
sub
ret
or
jae
pop
sbb
adc
sbb
add
fs
lock
mov
sti
ljmp
pop
mov
movsl
and
cmp
xor
push
fcomps
cld
mov
lret
mov
sub
cmc
test
negb
lret
aas
adc
loop
std
iret
imul
repz
adc
jo
sbb
scas
and
lret
and
pop
jmp
adc
and
mov
push
mov
adc
leave
jns
stc
mov
clc
push
mov
rorb
push
test
pop
fwait
adc
fs
shl
test
adc
scas
pop
gs
movsl
cmp
push
mov
and
stos
xchg
cmpsl
dec
adc
popf
gs
rcll
sub
sbb
repz
xchg
mov
dec
dec
enter
imull
sub
or
xchg
mov
ljmp
loop
inc
stos
sub
call
aas
lods
dec
cmc
and
mov
jne
shll
inc
pop
dec
mov
push
out
imull
mov
cmovle
scas
icebp
leave
jmp
pop
sbb
mov
jl
imul
mov
adc
ficompl
loopne
jp
inc
jle
sbbb
outsb
sahf
cltd
inc
add
in
ss
cwtl
ja
cmp
lock
sar
fstp
das
pop
cwtl
dec
jp
sbb
or
or
push
mov
jle
popf
fcompl
rcrl
sub
mov
repz
aam
nop
lahf
xor
leave
divl
scas
jl
arpl
je
das
fisttps
jb
cld
bound
test
sub
mov
in
movsb
insb
push
and
jae
out
dec
aaa
mov
ss
icebp
sub
dec
stos
push
xor
xlat
jo
mov
sbb
out
loope
movsl
xor
add
xor
and
push
push
inc
ss
fs
xchg
movb
xchg
mov
cmpsb
in
adc
add
xor
and
push
push
inc
ss
fs
xchg
movb
xchg
mov
cmpsb
in
adc
add
xor
and
push
pop
inc
ss
xlat
xchg
movb
xchg
mov
cmpsb
in
adc
add
xor
and
push
push
inc
mov
cmpsb
sub
shl
pop
push
cmp
pop
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
push
jo
inc
iret
push
mov
pop
jmp
loop
das
loopne
lock
rorb
mov
seto
pusha
out
jo
inc
iret
push
mov
add
nop
jno
dec
sarb
mov
seto
inc
or
and
xor
dec
add
cmp
fildll
jl
mov
das
mov
rcrl
jle
clc
push
xchg
les
addr16
pop
mov
push
repz
scas
out
mov
or
or
pop
mov
rolb
fbstp
fsubp
jmp
mov
aas
sbb
mov
shlb
sbb
mov
xor
cmp
dec
aas
mov
mov
sub
sbb
and
imul
sub
fistl
aas
cmpsl
mov
mov
dec
dec
jg
sbb
and
push
xor
mov
xchg
dec
sarl
xchg
pop
xchg
int3
pusha
out
jo
inc
mov
xor
loopne
lock
push
rcrb
xor
lea
cltd
jo
sub
xor
test
test
xchg
push
roll
orb
pusha
addr16
inc
add
push
cld
adc
test
mov
dec
fldt
dec
rorb
mov
lahf
add
lock
rorb
mov
seto
pusha
out
jo
inc
iret
push
mov
add
lock
rorb
mov
seto
pusha
sub
ja
nop
pop
repz
rorb
faddp
xchg
sbb
push
pop
loop
mov
repz
sub
lds
push
imul
mov
outsb
fs
ljmp
test
sbb
out
xorb
xor
sub
ds
das
in
mov
inc
cmpsb
mov
out
sub
xchg
add
ret
repnz
into
inc
sbb
jl
sub
pop
imul
jno
inc
negl
push
mov
sub
aaa
fnsave
push
repz
jle
hlt
adc
pop
ficoml
sub
rep
or
clc
mov
cs
rcl
sarl
xor
add
mov
xchg
gs
les
les
imull
push
adc
sarl
in
inc
fstpl
xchg
push
sbb
roll
pop
jl
xchg
je
adc
adc
repz
aam
daa
test
mov
ljmp
or
xchg
pop
xchg
insl
test
test
enter
movsb
lods
out
mov
test
rcl
int
jg
add
andl
adc
daa
loope
loope
add
fdivs
jns
inc
jo
sub
aas
mov
inc
pushf
daa
cli
adc
stos
das
sahf
lods
je
or
aaa
fidivs
inc
adc
dec
in
pop
test
leave
inc
fsubrl
mov
xor
out
xor
call
jo
clc
cli
iret
cmp
fcmovbe
aad
mov
shrl
xchg
adc
insb
or
jle
dec
aad
in
shll
xor
test
inc
pop
cltd
inc
adc
add
mov
fiaddl
fsubs
mov
fbld
sbb
cmp
jnp
mov
lcall
imul
enter
inc
dec
popa
mov
lea
into
hlt
cltd
pop
int
xor
mov
sarl
test
push
ret
stos
je
js
imul
or
int
lea
jecxz
or
icebp
push
add
aad
push
pushf
and
push
call
hlt
and
inc
jp
aad
arpl
lret
mov
addr16
mov
lea
subb
mov
fistpll
lcall
add
dec
jg
aad
inc
fcmovnbe
or
xchg
out
lods
push
aaa
mov
adc
and
cmp
sbb
mov
ret
mov
adc
xor
inc
pop
daa
pushf
add
mov
sahf
push
or
inc
push
stos
std
iret
inc
cmp
mov
dec
mov
and
mov
test
pop
imul
mov
mov
into
pushf
xchg
or
xchg
inc
push
adc
cld
or
cli
fisubs
jge
icebp
cmp
sub
push
pop
xorb
or
mov
sub
in
pusha
jo
mov
test
fstpt
and
sub
push
jle
push
pop
iret
loop
fcompl
xor
stc
fsubr
sub
push
mov
mov
outsb
jns
and
add
fbstp
xchg
mov
sub
jecxz
out
mov
mov
or
insb
aaa
inc
test
dec
and
push
mov
std
xchg
dec
xor
fisttps
sbb
or
pusha
in
repnz
icebp
cmp
sbb
leave
icebp
pop
add
and
fildl
rclb
pushf
mov
cltd
pop
orb
mov
or
iret
dec
orb
xchg
icebp
out
pop
sub
mov
outsl
mov
xchg
shrl
lahf
insl
pop
frstor
adc
imul
shl
add
lods
ret
pop
dec
bound
imul
fbld
adcb
std
loopne
outsb
cmp
test
pop
xor
pop
ret
test
or
popa
mov
sbb
dec
aaa
mov
jge
fadd
adc
cmp
scas
mov
pop
fwait
jns
pop
nop
sarl
popa
jae
lret
dec
and
push
push
ljmp
jo
bound
insl
cmp
xchg
dec
addr16
mov
mov
sti
in
or
and
aaa
cmp
pop
lahf
pop
xlat
mov
cmpsb
insl
pop
inc
das
orb
xchg
shrb
shll
ljmp
and
lods
adc
xchg
sub
outsb
mov
dec
loopne
or
add
mov
sahf
enter
mov
mov
rolb
lret
and
cwtl
gs
cltd
pusha
mov
jnp
mov
add
ja
invd
add
ficompl
mov
in
dec
fsubrl
in
xchg
jmp
pop
xor
and
ret
js
mov
or
inc
into
mov
mov
arpl
movsb
jnp
adc
lds
lods
sbb
mov
dec
dec
mov
test
and
ret
push
movsb
and
inc
cmpsl
nop
and
cltd
dec
sbbl
cwtl
mov
adc
jo
imul
mov
pop
or
lock
add
pop
cs
iret
mov
pop
data16
push
jp
mov
fisttpl
mov
cmp
jge
mov
jbe
inc
pop
fucom
loopne
cmp
fldenv
icebp
sbb
mov
and
sahf
inc
jbe
add
fisttps
sub
lock
mov
inc
sahf
test
adc
popa
adc
test
xchg
lcall
rorl
idiv
pop
pop
inc
mov
adc
into
or
mov
std
mov
movsl
jb
mov
pop
fildl
xorl
in
xchg
iret
fidivl
dec
jmp
mov
mov
sarb
iret
or
jecxz
mov
and
sub
test
and
or
in
push
shlb
push
jbe
ljmp
or
bound
mov
sbb
push
jae
shlb
arpl
or
mov
fmull
imul
push
out
stos
pop
add
and
mull
dec
cld
in
imul
xchg
fwait
cld
cltd
adc
jge
jns
ds
jl
push
nop
movsl
lods
fistpll
icebp
xchg
lahf
jo
sub
jecxz
pop
or
pop
push
test
repnz
add
mov
mov
adc
sbb
repnz
mov
lods
mov
xchg
dec
sbb
xor
dec
xor
aad
iret
dec
out
push
pop
popf
aam
pop
out
loop
ljmp
cmp
test
xchg
nop
mov
ja
mov
pusha
aaa
mov
addl
jbe
jb
pop
popf
jno
and
sbb
inc
outsb
adc
cmp
popa
and
push
push
cmc
fsubrs
jne
stos
ret
dec
pop
fmul
sbbl
int3
xchg
or
mov
and
cmp
or
adc
cmc
inc
push
scas
pcmpeqd
dec
jo
cli
push
sub
sbb
sbb
fs
fstps
push
adc
xlat
push
repz
pop
imul
jns
clc
repnz
inc
cmc
mov
out
dec
jbe
sar
je
mov
pop
sarl
pushf
push
or
and
push
lods
adc
sub
jg
inc
sbb
mov
inc
out
pop
nop
adc
mov
loopne
subb
insb
adc
add
sub
imul
rclb
int
pop
addr16
aas
dec
jle
aam
fs
mov
inc
adc
mov
iret
adc
xchg
mov
mov
nop
cmp
test
in
outsb
dec
mov
add
sbb
push
cmp
dec
out
xor
cmc
jmp
test
cli
jmp
adc
lods
roll
inc
push
stos
sbb
lahf
lcall
xor
outsl
mov
andb
addl
mov
movb
gs
leave
pop
inc
inc
mov
mov
push
adc
sub
pop
mov
or
mov
sub
loope
add
jnp
cmp
and
pop
das
mov
fcmovne
adc
arpl
inc
cltd
sbbb
into
test
push
or
xor
adc
mov
aad
or
fcmovne
xor
mov
and
mov
xlat
cmc
sub
dec
mov
jl
push
xchg
negb
xchg
hlt
cmp
in
subb
inc
int
insb
gs
ffreep
pop
jl
mov
out
das
sbb
repz
movsl
pusha
stos
sub
or
dec
mov
xchg
lods
orb
add
jp
inc
insl
movsl
mov
xchg
cmp
or
fwait
repnz
jp
shrb
pop
ret
xor
xchg
jae
adc
je
push
repnz
imul
or
add
push
adc
jno
test
fildl
clc
movsb
orl
fcmovnu
outsl
xor
push
mov
inc
mov
xor
push
dec
push
inc
fisttps
les
jle
dec
mov
lods
dec
and
xor
push
add
inc
int
or
mov
adc
jmp
cmp
pop
adc
or
inc
stc
add
mov
mov
aas
sbb
lret
shrb
popa
lds
and
enter
pop
or
sbb
insb
bound
mov
mov
filds
xlat
out
pop
ja
scas
push
or
cmc
shrl
inc
aas
andl
or
stos
or
inc
sub
push
pop
fs
aam
jmp
test
in
cmp
push
ret
mov
push
fsts
ja
mov
stc
call
mov
mov
popa
das
pop
shll
in
mov
push
mov
inc
xor
in
dec
lret
pusha
dec
into
leave
mov
arpl
ja
sahf
fld
aas
rolb
mov
mov
pushf
xor
mov
mov
pop
cmp
adc
lods
mov
jmp
bound
fwait
cmpsb
data16
jmp
adc
mov
mov
mov
lret
push
mov
jb
push
cmp
jle
xchg
cs
pop
dec
lea
xor
nop
or
dec
sbb
xchg
testb
sti
ret
std
nop
inc
cmp
and
mov
ds
jae
mov
lahf
xchg
sbb
fidivs
fisubs
out
clc
fdivrl
rclb
adc
rcrl
in
mov
stos
fmull
push
rcrl
movsl
aad
jbe
test
pushf
test
sbb
add
lds
xlat
imul
mov
call
jp
and
test
test
and
orl
test
jns
xlat
adc
das
testl
lcall
adc
mov
pop
or
dec
jmp
js
aas
imul
pop
pop
addr16
rclb
aad
call
ficomps
add
jnp
pop
mov
sub
xor
push
cs
push
mov
movsl
jae
adc
test
enter
and
inc
sti
sbb
and
xchg
movsb
inc
sbb
shrb
jge
fs
xor
aas
sub
sub
sbb
xchg
pop
lahf
push
mov
sbb
cmp
dec
leave
addr16
mov
mov
negl
xchg
mov
std
fcompl
adc
lret
xorb
scas
xchg
cmpsb
cwtl
jle,pt
and
loope
jp
sbb
mov
cmp
add
pop
cmpsl
je
mov
ret
sbb
repz
addl
push
push
imulb
xor
cmp
ljmp
mov
sub
add
pop
mov
cmp
adc
sub
loope
pop
adc
dec
das
cmp
mov
jb
adc
fisubl
mov
shrb
ret
or
dec
es
fdivrl
lock
fldenv
sub
fstps
adc
xchg
enter
jo
out
xchg
int
dec
adc
inc
in
mov
xchg
dec
cmp
stc
imul
cmp
and
mov
xsaves
mov
rorl
or
and
int3
mov
aad
out
test
repnz
push
sub
mov
int3
adc
mov
mov
push
sbb
movsl
mov
mov
fs
push
aad
shr
fimull
inc
inc
ljmp
mov
fadds
or
xor
sbb
adc
lret
popf
mov
out
inc
pushf
push
lret
int3
jb
bound
aaa
fdivrl
in
mov
cmpsb
fprem
xor
inc
sbb
out
jmp
pop
movsl
out
call
inc
xchg
and
loop
pop
add
insl
sbb
movsb
icebp
jecxz
and
jae
cmp
dec
hlt
stos
or
mov
enter
rolb
jl
popa
cs
mov
aas
mov
stos
ds
or
and
outsl
test
insb
das
je
out
lahf
out
xchg
repnz
jb
pop
xor
adc
scas
ss
mov
test
shll
and
inc
adc
cwtl
cmp
adc
adc
mov
jae
cltd
aad
stos
cmp
fcmovu
xor
pop
pop
pop
sbb
aas
lcall
or
mov
dec
int
mov
and
in
or
sub
push
andb
ljmp
jno
out
pop
loope
iret
shr
lods
out
inc
push
jne
inc
pop
pushl
mov
addr16
jbe
iret
dec
mov
jo
lods
adc
xchg
and
lcall
insb
inc
es
mov
jo
xor
xchg
rorb
js
or
movsl
dec
and
jns
pop
xor
dec
ret
fs
imul
rcrb
test
inc
mov
cmpsb
xchg
push
icebp
and
popa
outsl
lret
add
or
and
pop
sbb
aad
or
icebp
jns
out
ficoml
xchg
inc
inc
outsb
pop
or
sub
xchg
pop
pop
mov
mov
fiaddl
je
and
data16
test
loope
dec
lds
mov
loopne
mov
scas
pop
out
stos
pop
dec
add
sahf
mov
out
movsl
mov
sbb
inc
test
pop
mov
in
int3
test
shll
stos
enter
in
int
enter
cmc
and
mov
and
repz
sub
sahf
mov
push
sbb
sbb
and
in
clc
cmc
pushl
aad
shlb
push
jns
inc
pop
push
jle
xlat
rcl
ret
mov
push
out
pop
mov
ljmp
pop
stc
aas
add
adc
sbb
or
push
sub
inc
inc
cwtl
pop
cmp
mov
dec
arpl
dec
adc
inc
cwtl
inc
in
adc
or
into
jb
pusha
mov
or
stc
inc
and
pop
call
fisttpll
push
mov
jecxz
mov
push
std
cmp
add
outsl
or
das
pop
lods
dec
lret
imul
int3
inc
arpl
adc
pop
push
mov
cmpl
xchg
push
cmp
outsl
out
jo
movsb
popa
loope
push
movl
movsb
loope
andb
or
mov
push
jno
sub
aas
push
and
iret
cltd
popf
mov
movsb
outsl
mov
leave
jns
adc
mov
cmc
sub
ds
jb
adc
pop
cmpb
sub
insl
xlat
enter
add
sub
jbe
mov
inc
in
add
repnz
pop
adc
push
push
decb
mov
aas
sbbb
daa
rolb
or
movsb
lock
out
shr
mov
cmpsb
inc
test
mov
stc
and
push
mov
mov
pop
pushf
sarb
inc
or
cmp
xor
or
jo
xorb
fwait
jbe
mov
or
xlat
xchg
xor
hlt
cmp
adc
xchg
fs
fs
ss
les
cmp
mov
loopne
sahf
cmpsb
dec
lods
jmp
aad
negl
mov
push
loopne
adc
loopne
arpl
inc
lea
pop
gs
outsl
inc
rorl
pop
push
and
dec
sbb
insl
sub
xor
je
mov
inc
mov
lcall
std
cmp
inc
sub
mov
nop
cmpsl
sub
sub
xor
pop
pop
mov
cltd
xor
scas
pop
and
xchg
dec
repz
daa
cmp
enter
xor
cmp
rcll
int3
xchg
push
ficomps
mov
inc
jmp
aaa
test
cmc
out
f2xm1
xchg
inc
gs
aad
xor
popa
jae
and
test
or
sub
in
shl
xchg
arpl
xchg
in
xchg
lods
setnp
sub
out
xor
push
outsb
outsb
out
scas
mov
stos
xor
pop
pop
sub
add
call
mov
pushfw
cmc
mov
into
pushf
sub
sub
scas
xlat
and
pop
in
xchg
push
inc
pop
ror
or
dec
adc
inc
cmpl
loope
insb
lods
and
cmp
sbb
inc
lods
lea
in
push
and
push
cmpsb
daa
in
push
popf
mov
nop
dec
iret
mov
movsb
jb
xor
sub
shrl
inc
inc
scas
popa
jmp
lock
je
sub
pop
xchg
loopne
jbe
mov
rcl
outsl
xor
je
and
cmp
sbb
mov
jg
mov
inc
mov
movl
nop
popa
xchg
das
iret
adc
imul
add
add
cmp
inc
jb
mov
mov
mov
ret
aas
mov
leave
es
dec
mov
ljmp
jp
sti
jmp
sbb
dec
push
push
ljmp
into
int3
or
fwait
mov
sub
lock
lods
mov
ret
pop
fwait
adc
outsl
add
fisttpll
mov
fiadds
add
sbbl
dec
mov
mov
cmpsb
push
lods
mov
cwtl
add
xchg
cmp
iret
aad
xor
lods
in
dec
inc
loope
jle
sti
cwtl
and
enter
mov
fidivrs
pop
aaa
in
cmp
dec
stos
int
sub
lock
sti
in
pop
jmp
jo
sahf
daa
jg
fimull
out
test
xchg
das
xor
inc
push
and
add
mov
stos
outsl
push
mov
mov
in
sub
lods
pop
out
pusha
insb
pop
dec
jne
push
fstpt
sahf
and
int
call
jbe
or
jg
fidivl
jo
bound
fdivs
movsl
push
out
mov
jmp
mov
loope
stc
mov
pop
sbb
add
gs
sar
xchg
fadd
dec
dec
mov
loope
sbb
sub
push
out
sbb
aas
enter
adc
movsl
mov
inc
das
hlt
adc
sub
shrb
fldenv
and
icebp
rol
cwtl
cmpsl
dec
adc
inc
and
mov
pop
jns
cmp
jb
in
dec
mov
inc
shll
mov
lods
sbb
cmp
insl
enter
cmc
fidivrl
nop
jge
outsl
out
add
popf
mov
testb
pop
jecxz
xor
lret
ret
push
xchg
jl
mov
inc
mov
std
inc
pop
mov
call
popa
mov
in
sbb
sbb
cld
sub
lcall
cmpsl
pop
mov
test
dec
ss
ds
push
mov
rcrb
pop
push
fcmovnu
dec
pop
les
xchg
sbb
add
push
shrl
bound
sahf
inc
dec
sti
pop
stos
and
in
sti
stc
mov
inc
mov
repnz
inc
adc
adc
sub
dec
sub
jecxz
out
es
cmp
dec
sub
clc
jecxz
pop
sbb
push
je
dec
pop
inc
shll
dec
outsb
stos
daa
sbb
cmp
test
xor
xchg
adc
cwtl
sti
das
in
cmp
pop
dec
sub
scas
xor
adc
push
jmp
shll
lahf
xchg
jle
popa
outsl
sub
cmp
jae
lods
inc
mov
gs
jbe
jmp
dec
inc
fadds
scas
dec
fdivrl
outsb
mov
int3
pop
pop
cmpsb
fidivrs
adc
jb
push
lds
das
cmpl
cltd
mov
mov
addl
sub
fstpl
lods
pushf
sbb
pushf
or
stos
inc
sbb
sahf
mov
enter
mov
mov
enter
pop
pushf
push
cwtl
pop
jmp
mov
lods
sahf
or
lret
imul
lds
fsubs
shlb
orb
outsl
pop
insb
clc
jl
mov
stos
mov
xor
cmp
cmp
movl
xor
loopne
lock
rorb
mov
seto
pusha
out
jo
inc
iret
push
mov
add
lock
rorb
mov
seto
pusha
in
lock
ror
mov
add
lock
rorb
mov
aas
nop
out
ret
jo
inc
out
mov
add
adc
nop
pop
cmc
rorb
sub
outsl
aas
cmpsb
das
mov
xchg
xchg
lret
mov
cwtl
sub
es
ss
push
push
jmp
ss
inc
iret
push
aas
cmpsb
das
mov
xchg
xchg
jg
outsl
negb
dec
scas
es
ss
push
adcl
filds
push
cmpsb
ss
xchg
xchg
data16
testb
cmpsb
sbb
pushl
adc
cmpsb
inc
ret
jns
sub
outsl
aaa
sahf
lds
arpl
push
xlat
inc
mull
scas
pop
int
lahf
mov
xchg
mov
push
push
outsl
or
lret
cmp
jno
scas
cmpsb
std
filds
stos
shlb
cli
mov
rorl
cmpsl
add
jmp
inc
fistpll
aas
mov
xchg
addb
dec
xchg
jo
add
iret
ja
cmp
imul
mov
aaa
sahf
cli
jg
pop
scas
out
xor
inc
filds
xlat
and
dec
pop
xchg
jecxz
sub
inc
push
inc
fldenv
daa
loop
fists
mov
push
iret
push
mulb
setbe
jg
pop
push
cmpsb
es
xchg
xchg
push
out
divl
inc
iret
adc
dec
gs
jnp
or
or
mov
push
mov
lods
les
cld
jo
jg
adc
sbb
cld
arpl
pop
lahf
push
into
jp
or
pop
testb
repnz
mov
pop
dec
mov
push
push
jmp
jbe
inc
iret
push
aas
cmpsb
das
mov
xchg
xchg
jg
outsl
negb
dec
mov
push
push
jmp
jbe
inc
iret
push
aas
cmpsb
add
adc
or
test
aas
out
push
mov
andl
sub
or
or
ja
sbb
pushl
std
jae
mov
mov
inc
imul
inc
dec
repnz
scas
sbb
addl
pop
pavgb
imul
mov
add
sahf
incb
ja
inc
jg
ja
xchg
mov
data16
sbb
imul
or
hlt
push
lret
jae
cmp
pop
imul
xchg
push
loop
sub
orb
dec
out
pop
sbb
mov
aam
mov
adc
cwtl
cld
ss
cmpsb
shrb
pop
shrl
mov
dec
jno
jne
adc
dec
mov
fildll
cmp
sbb
lods
push
add
xor
add
cltd
sbb
into
and
mov
bound
mov
and
fiaddl
inc
inc
orb
leave
cli
or
mov
and
mov
jecxz
and
cwtl
xchg
fisubrs
ljmp
mov
mov
add
shrb
mov
fwait
mov
int
mov
inc
lods
insb
xchg
pop
pop
fwait
adc
and
daa
cmp
les
sub
sbb
and
push
sbb
test
inc
repz
data16
xchg
in
or
clc
mov
inc
adc
int3
fdivl
icebp
cmp
sub
push
dec
push
sub
inc
add
sbb
pop
jl
pop
mov
jp
and
push
mov
test
popa
cmp
cmp
adc
push
mov
cmp
add
rcll
mov
sbb
fstpl
pop
outsl
mov
nop
pop
and
enter
in
inc
sub
daa
mov
cmp
test
jge
outsb
stc
cli
mov
mov
add
movsb
jle
push
pop
jecxz
inc
ret
js
lods
sbb
xor
cmp
sub
notl
out
push
ljmp
add
dec
jae
sub
jb
xchg
in
mov
xor
out
jae
mov
jle
aad
mov
in
icebp
cmpsb
sub
fidivl
adc
aad
fstp
leave
cmp
add
jl
jo
add
push
jle
imul
aam
out
stc
roll
call
adc
xchg
stos
aam
sub
cmp
sub
clc
js
xor
push
sbb
mull
inc
movsl
or
push
xchg
mov
jge
rol
divl
mov
imul
fadds
enter
pusha
sub
mov
mov
je
fdivl
loopne
pushf
out
inc
bound
mov
pop
out
ljmp
ficompl
mov
in
loop
mov
movsb
dec
pop
add
adc
cld
or
cmp
xor
rorl
das
mov
pop
insb
divl
stos
push
ljmp
cmp
hlt
jecxz
repz
ret
add
xchg
pop
and
adc
sub
and
mov
mov
ljmp
pop
fwait
out
sbb
xchg
inc
pop
jle
adc
adc
sub
xchg
and
repnz
imul
jae
addb
ficomps
cmpb
cmp
cmp
pop
push
movsl
adc
in
daa
out
mov
fstpt
out
sbb
pop
pop
pop
jne
adc
dec
fwait
es
and
fiadds
mov
push
pop
outsb
lcall
stos
mov
mov
adc
pop
out
xor
add
xchg
sub
dec
shr
orl
inc
add
in
insb
sub
repnz
inc
cmp
mov
addb
loop
jmp
mov
or
xchg
and
add
push
dec
repz
sub
xchg
jecxz
mov
push
mov
out
sbb
lea
outsl
fidivs
ja
dec
mov
mov
mov
aas
jecxz
and
xchg
divb
inc
mov
jmp
test
or
addr16
push
push
pop
sub
adc
mov
in
xor
ret
clc
addl
inc
pop
lods
bound
cmc
sub
cld
mov
insl
movsb
bound
dec
scas
daa
mov
lcall
inc
adc
push
dec
outsl
es
scas
lret
jecxz
leave
lds
jecxz
daa
adc
aas
xchg
sbb
nop
test
inc
jecxz
mov
jl
in
jp
fwait
or
push
mov
pushf
sbb
or
add
cmp
les
jnp
pop
cli
mov
outsb
movsl
xor
add
shrl
scas
xor
adc
rclb
sub
mov
imulb
stos
sub
jge
popa
cmc
and
nop
push
add
pop
in
loope
pop
sub
rcrb
or
popf
pusha
jb
enter
je
xor
sbb
xlat
dec
and
mov
mov
add
nop
xchg
xchg
sbb
add
mov
shl
test
xor
shl
mov
pop
mov
lret
clc
into
sub
out
cmpb
xchg
jmp
jo
rolb
call
loop
pop
inc
inc
mov
and
xor
or
mov
mov
sbb
sub
shl
popf
test
cs
adc
mov
ljmp
adc
mov
ss
loopne
xor
push
data16
ret
adc
and
xchg
adc
cwtl
loope
test
push
insb
cs
inc
pop
xor
cmp
xor
mov
lods
jbe
or
mov
push
jl
dec
xchg
mov
rorb
andb
repnz
jg
and
sub
mov
bound
pop
shrl
adc
and
sbb
mov
loope
and
xchg
sbb
mov
out
fsubs
jns
lcall
shll
sub
xchg
or
sbb
ret
out
mov
xchg
pop
test
ret
or
mov
jmp
imul
rcll
pop
mov
dec
mov
jno
orl
test
rep
pop
dec
in
fs
inc
jge
shll
xchg
mov
pop
lea
gs
into
sub
mov
test
push
and
adc
outsb
push
mov
leave
and
cld
cld
dec
jmp
enter
leave
fwait
mov
or
inc
enter
fmulp
addl
pop
ljmp
daa
data16
pop
jecxz
sti
or
outsb
cmp
mov
outsb
or
pop
pop
shll
aad
lds
inc
bswap
push
inc
mov
add
xchg
dec
leave
push
jl
pop
je
in
fidivrs
je
cmp
imul
cmpl
fldcw
imul
push
outsl
popa
pop
negl
jecxz
lret
push
xor
std
test
outsb
cli
ret
loopne
les
fldl2t
jge
push
imul
insb
out
in
sub
jae
fidivrs
push
out
xchg
sbb
push
push
cmp
mov
and
jg
sub
push
mov
pop
pusha
sbb
outsl
movsl
shrb
and
paddsw
roll
push
mov
pop
loop
push
push
and
ja
push
sbb
loop
loope
outsb
es
iret
jecxz
sub
insl
mov
pop
inc
push
sti
and
jns
test
in
dec
dec
repnz
mov
adc
add
sub
inc
mov
jae
xchg
orb
gs
jmp
jl
mov
stos
pop
lds
stc
cmp
push
jmp
mov
cwtl
ss
xchg
shll
bnd
scas
fstl
test
jge
sub
mov
pop
sub
flds
push
adc
ja
dec
xchg
add
xor
fisttpl
and
icebp
insb
bound
mov
sub
shr
outsl
in
inc
xchg
daa
mov
inc
into
in
pop
mov
clc
fnstsw
ss
sbb
nop
and
sbb
les
stc
shrb
es
shr
push
jb
ss
and
daa
dec
mov
cltd
dec
in
pusha
xlat
jl
loope
xor
lock
mov
xchg
pop
and
push
jb
iret
inc
outsl
xchg
mov
xchg
out
leave
into
xchg
inc
mov
push
pop
adc
pop
xorb
jecxz
fldt
cmp
cmpsl
repnz
and
mov
push
imul
outsb
xchg
stc
ret
mov
mov
lock
xchg
popa
lret
call
sub
lret
xor
andw
das
mov
mov
push
jo
adc
call
mov
stos
enter
loope
adc
stos
mov
mov
lret
and
mov
sbbb
test
outsb
pop
lock
lods
out
dec
and
adc
push
and
cmp
xor
nop
sub
les
ljmp
scas
push
xor
dec
mov
jle
addl
out
push
push
and
xchg
jnp
outsl
stos
adc
mov
push
scas
cmp
and
sub
mov
fisttpll
fmul
arpl
pushf
jl
cmp
xor
scas
push
add
and
add
inc
aas
lds
mov
lock
sub
insb
mov
fwait
dec
sbb
stc
aas
sbb
sub
stc
or
mov
fidivrl
sahf
sbbl
sbb
flds
push
xchg
jnp
shrb
pop
jge
ljmp
call
xor
imul
pop
testb
or
bound
xor
sarl
cmpsb
push
jg
jnp
add
cltd
testl
repz
mov
movsl
cmp
daa
and
pop
dec
inc
jae
bound
lds
mov
iret
mov
sbb
and
fs
push
ret
xor
mov
mov
sub
or
adc
push
mov
mov
mov
cmp
lods
shrb
pop
push
repnz
rolb
ficoms
or
cmp
add
in
lea
lods
in
aaa
stc
idivl
orb
dec
outsb
add
add
push
pop
jns
mull
cwtl
nop
push
push
rolb
fbld
aam
fisttps
sahf
mov
lcall
test
mov
or
xor
fcompl
mov
fwait
sti
lds
mov
iret
les
push
jne
lcall
jge
fwait
pop
out
sub
insl
jns
mov
push
xchg
aam
pushf
sbbb
call
inc
dec
ror
mov
sub
push
pop
adc
add
mov
cmp
aaa
lret
mov
scas
sbb
dec
fistps
xor
xchg
scas
sti
jmp
loopne
or
adc
notb
decb
fldlg2
es
sub
adc
or
push
push
or
outsl
scas
setae
xor
xchg
or
out
popf
and
xchg
dec
js
in
int3
insb
jg
mov
push
psubw
fldt
sbb
jp
add
adcl
dec
mov
clc
jae
jne
lea
shrb
cs
in
lea
mov
pop
daa
lcall
pop
cltd
sahf
sub
aad
pop
mov
mov
pop
fwait
or
inc
daa
sbb
paddb
ficompl
orl
stc
mov
inc
mov
inc
mov
xor
orb
test
mov
add
cmpsb
lret
das
lds
cmp
inc
xor
add
int3
push
inc
cmc
fistps
adc
push
out
xor
add
loop
lret
mov
mov
les
or
insl
inc
cmp
test
lahf
xchg
jp
pop
inc
mov
mov
mov
in
jo
gs
cmpsl
jp
jg
mov
lret
scas
pop
sahf
sbb
das
movsb
jno
add
xor
mov
popf
xor
add
xor
push
jbe
fadd
repz
mov
dec
adc
int
lahf
je
xor
add
cltd
pop
xchg
mov
push
and
inc
xor
sti
sbb
ds
xor
mov
jbe
aas
fdivp
mov
test
mov
dec
filds
adc
jge
dec
push
mov
mov
daa
sub
xor
push
daa
out
in
clc
ja
addl
jo
xchg
mov
cmpb
xor
stc
icebp
xchg
decl
push
clc
leave
and
mov
dec
ret
adc
adcb
dec
in
xchg
in
jo
rcl
pop
cmp
push
cld
cmp
aaa
rcr
into
jb
sbb
repnz
mov
pop
in
int
insb
lcall
shrb
dec
iret
xchg
testb
fldl
fldenv
push
cmpl
xor
sbb
sarl
shr
call
xor
out
add
xor
sti
sub
ret
inc
xor
cmp
xchg
inc
out
add
pop
inc
cwtl
repnz
sub
inc
ds
push
repz
icebp
cwtl
and
dec
mov
mov
pop
and
sub
hlt
xchg
enter
mov
bound
jbe
inc
fs
jae
es
test
mov
push
push
push
int
adc
push
daa
stos
dec
lret
jns
rcll
aad
add
pop
arpl
mov
scas
test
jno
cmp
jno
inc
or
test
in
mov
xchg
mov
jb
or
test
cwtl
push
pop
ja
lea
lock
shrb
popa
mov
loop
push
or
mov
mov
pop
int3
addr16
mov
insl
xchg
jns
popf
testl
pop
mov
addl
or
das
in
icebp
pop
cmpb
push
jg
fsts
inc
popa
ss
mov
int
mov
add
pushl
lods
movsb
dec
iret
mov
mov
addr16
or
sbb
data16
fnstenv
push
ds
xor
push
xchg
xchg
push
andb
and
shll
repz
pop
mov
cmp
cltd
or
mov
in
xchg
cmpsl
paddd
enter
shlb
inc
dec
or
ljmp
pusha
out
andl
outsb
sbb
divb
std
repnz
pop
ja
mov
loopne
mov
arpl
call
cmp
fs
sub
arpl
pop
pusha
or
cld
and
lret
dec
rcr
stc
and
addr16
sti
andb
xor
adc
loope
inc
mov
int3
lahf
test
in
enter
adc
aaa
sub
mov
sub
jae
sbb
aas
pop
mov
xchg
sti
shrb
add
lds
adc
nop
adc
test
jns
and
pop
and
iret
imul
mov
jne
mov
stc
pop
inc
mov
fxch
cltd
cld
repz
xor
fsubs
insb
cmpsb
andb
scas
shll
loopne
aaa
sub
mov
adc
xor
or
sub
mov
addl
or
aaa
test
in
xor
clc
adc
adc
push
dec
push
lcall
jmpw
in
mov
pop
jg
test
add
rcrb
rclb
push
cld
push
lods
jne
fsub
mov
pop
jne
sub
in
ljmp
pop
fiaddl
xchg
out
xchg
insb
scas
push
addr16
shlb
cld
dec
ljmp
lods
mov
pop
daa
dec
nop
pop
lea
cmpl
movsb
dec
xor
dec
jg
mov
pop
test
in
xchg
mov
sub
jg
mov
loope
fwait
outsb
cmp
sbb
call
adc
mov
xchg
sub
jmp
add
xor
cmc
out
mov
xor
push
add
test
mov
jp
or
stos
adc
fcmovnb
js
in
fistps
mov
xor
xor
repz
clc
cmpsb
ljmp
mov
push
and
mov
and
cmp
mov
inc
xchg
repnz
push
cltd
cmp
pop
popf
insb
lea
mov
push
inc
sub
xchg
pushf
cli
decl
or
adc
and
out
hlt
jp
pop
fdivrs
fidivs
in
lods
xchg
rolb
cmp
bnd
xor
push
loop
xlat
and
mov
popf
cmp
push
pop
push
in
sub
jp
aas
insb
mov
in
mov
sub
cli
jnp
repz
add
pop
pop
jb
or
fdivs
loope
ja
mov
mov
call
and
sub
inc
lds
cmp
je
pusha
inc
pop
insb
cmp
mov
xlat
push
pop
jge
sub
fs
cs
sti
out
xor
mov
dec
in
lock
mov
fld
mov
xor
pushf
pop
pop
and
mov
jl
mov
test
lcall
xchg
jmp
dec
mov
xlat
outsl
imul
jb
xorl
mov
xchg
sbb
adc
sbb
mov
or
clc
enter
lahf
xchg
loop
jg
daa
fistpll
xchg
dec
lret
or
cltd
outsl
sbb
scas
mov
out
jmp
sbbb
push
repnz
add
sbb
dec
and
fsubrp
leave
push
addl
lret
push
adcl
adc
test
shlb
movsl
pop
push
movsl
mov
sub
mov
xor
xchg
xchg
dec
lea
out
ljmp
adc
std
xchg
lea
out
negb
cltd
jge
xchg
mov
loope
nop
jle
lahf
jl
or
xor
aad
xchg
nop
repz
xor
arpl
inc
pop
xchg
xorb
xchg
in
mov
mov
out
dec
jg
push
dec
int
sub
out
jg
mov
jmp
icebp
or
fxch
pop
or
sahf
in
add
aaa
xorl
fmul
sub
mov
adc
lcall
sbb
das
mov
mov
adc
aaa
lahf
add
cld
cli
sbb
and
and
stc
jb
jbe
test
push
pop
lahf
adc
jge
in
or
test
call
add
cmp
xor
fld1
aam
mov
lret
pop
movsb
mov
addr16
xchg
sub
cmpsl
ss
fildl
fldt
mov
jge
iret
xor
sub
add
in
dec
rcrb
loopne
test
std
fcomps
jle
inc
cmp
movsl
xor
fistl
push
iret
std
sub
clc
or
sbb
or
cmp
push
das
imul
stc
push
ja
inc
cwtl
imul
enter
sbb
ficompl
fisubrs
clc
adc
gs
sub
mov
pop
or
test
sar
cltd
mov
push
mov
add
add
daa
fs
mov
xor
movsb
pop
sahf
fidivs
pop
pop
ret
push
repnz
mov
stc
fdivrs
sbbl
push
xchg
int3
adc
mov
dec
rorb
cmpsl
das
notb
jle
cmp
mov
pusha
in
push
shlb
or
mov
adc
imul
mov
cmc
test
cmpl
pop
mov
cmp
sub
sub
fidivrl
mov
ja
jp
xor
imul
loope
mov
std
fs
sbb
sbb
lcall
dec
sub
mov
loop
adc
inc
mov
fs
ljmpw
stos
and
popa
fwait
rorl
es
aas
xchg
mov
push
and
hlt
imul
lea
and
fstp
dec
fstpl
mov
in
flds
cmp
cmp
repz
jle
cmpsb
push
in
lret
ret
cmpsl
mov
pop
lods
roll
sbb
es
add
enter
loopne
imul
jmp
xchg
mov
inc
cmp
push
push
je
mov
adc
int
dec
out
repnz
xchg
je
mov
xor
lahf
imul
gs
inc
cmovae
mov
movsl
push
outsl
outsb
rcr
xor
shr
adc
ret
jb
cs
mov
cs
xchg
jno
nop
insl
lds
sbb
jp
cld
lret
inc
in
push
cmc
mov
pushf
cld
cmp
push
shr
pop
or
ret
scas
stos
test
lock
or
sub
fadd
lock
adc
xchg
mov
dec
xchg
dec
xchg
jg
pop
arpl
push
sti
jno
icebp
adc
stos
cmp
imulb
sarb
insl
mov
add
add
test
mov
lahf
ljmp
hlt
sbb
lods
xor
add
pop
out
aam
out
lods
je
nop
popf
sbb
add
push
icebp
mov
push
add
pop
push
aad
jg
shll
iret
movsl
mov
xor
fsub
xchg
setbe
outsl
negb
dec
mov
push
push
jmp
jbe
inc
iret
push
aas
cmpsb
das
mov
xchg
xchg
jg
outsl
negb
dec
mov
push
push
jmp
jbe
inc
iret
push
aas
mov
seta
outsl
negb
dec
mov
push
push
jmp
jbe
inc
int
aas
cmpsb
sub
xchg
jge
outsl
jbe
inc
iret
sub
push
pushf
xor
out
mov
mov
jp
mov
push
imul
pop
test
pop
add
add
or
add
add
pop
inc
add
jl
cmp
sub
mov
rolb
popa
add
add
add
add
add
add
mov
add
popa
add
push
inc
add
add
add
add
add
add
cmp
adc
add
mov
lea
fiadds
add
add
add
roll
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
mov
popf
add
leave
add
mov
add
imul
add
add
add
add
sti
add
add
add
add
mov
add
add
or
outsb
add
loop
mov
add
xchg
add
add
xchg
add
sti
add
add
leave
add
add
add
add
add
add
add
add
cmp
xchg
add
popl
xchg
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
sbb
add
add
add
push
add
add
add
add
lahf
add
add
add
add
mov
mov
add
add
lods
add
add
add
xchg
add
add
add
add
pop
add
add
add
xchg
add
leave
add
add
add
add
jb
js
xor
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
pop
stc
add
add
add
add
add
add
add
add
test
push
lea
sub
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
push
add
add
daa
add
add
add
in
add
xchg
add
add
add
add
sub
leave
add
add
add
sbb
sbb
aaa
add
sub
lcall
add
add
add
add
jle
rolb
les
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
mov
addr16
add
add
push
add
add
add
sahf
add
scas
add
add
add
add
cmp
test
add
add
loop
pop
add
xchg
add
add
add
addl
add
das
add
add
add
add
leave
add
add
nop
add
add
add
add
imul
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
out
ljmp
jae
xchg
and
xchg
pusha
and
xor
test
sbb
push
dec
push
iret
enter
lcall
and
jge
adc
adc
xor
aaa
mov
mov
pop
outsl
sub
shll
sub
or
test
dec
adc
push
test
jo
dec
es
cmp
loope
sbb
add
shl
mov
sahf
mov
ret
loope
mov
pop
sbb
cli
into
ljmp
repz
testb
lds
in
sbb
mov
dec
daa
mov
test
fstl
test
mov
cltd
scas
lret
xor
std
std
jb
mov
xor
nop
jp
mov
nop
sub
cmp
and
je
inc
adc
push
in
cmp
fcoml
out
jecxz
sub
lds
push
popf
push
lods
dec
and
push
or
sub
mov
or
dec
jl
mov
mov
hlt
sbb
shlb
out
scas
mov
push
into
cld
fsubrl
jns
or
pop
test
movsl
fldcw
add
mov
push
sbb
cmpsl
insl
aaa
cs
enter
jae
shrb
imul
sbb
scas
xchg
mov
pop
shr
pop
jae
mov
pop
pusha
iret
movsl
xor
lea
repnz
push
nop
jl
jecxz
jb
in
pop
push
mov
js
jmp
les
adcb
sub
ficomps
dec
sbb
les
xor
and
test
call
dec
or
mov
int
sub
jno
call
adc
cmp
outsb
daa
stos
xor
cmpsb
in
mov
dec
cs
and
push
or
ret
push
xor
sub
jmp
inc
dec
cmpsl
pop
xor
imul
sbb
sub
inc
std
fmul
mov
popf
sub
inc
pop
push
pop
sbb
ja
in
mov
popf
jmp
mov
cld
aaa
leave
pop
mov
scas
ja
or
jmp
adc
das
dec
fabs
test
setl
ficoms
das
xchg
lea
movsb
ret
xchg
fildll
in
mov
int
sub
ljmp
cmc
jns
inc
push
in
pusha
movsb
jl
push
mov
mov
mov
add
rolb
shrb
lret
sahf
cli
out
mov
mov
mov
rcrb
leave
mov
negl
movsl
and
ljmp
jno
fwait
adc
jge
addl
mull
and
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
