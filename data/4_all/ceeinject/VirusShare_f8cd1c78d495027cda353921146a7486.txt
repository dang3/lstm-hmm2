call
ret
pop
outsl
jo
imul
mov
pushl
pushl
mov
call
call
leave
ret
inc
imul
jne
arpl
add
in
add
mov
push
call
test
je
mov
push
push
mov
call
test
je
mov
xor
lea
push
pushl
mov
call
test
je
mov
push
pushl
mov
call
test
je
mov
jmp
movl
mov
mov
push
push
push
call
test
je
push
push
call
test
je
lea
sub
mov
mov
mov
cld
rep
mov
mov
mov
push
mov
mov
add
push
mov
rol
pop
push
mov
rol
pop
add
add
cmp
jb
mov
loop
pop
mov
lods
xor
stos
test
je
pusha
push
call
popa
loop
pushl
pushl
mov
call
add
leave
ret
push
mov
push
mov
call
push
mov
add
mov
add
push
push
pushl
push
call
test
je
mov
cld
push
mov
mov
mov
xor
rep
pop
push
xor
mov
add
mov
add
mov
add
pushl
push
push
call
nop
add
loop
pop
pushl
call
pushl
call
mov
add
call
leave
ret
dec
outsl
popa
fs
gs
jne
arpl
push
mov
pusha
mov
mov
mov
cld
rep
popa
leave
ret
imul
gs
xor
cs
insb
add
in
add
pusha
mov
add
mov
add
sub
mov
addl
mov
push
call
test
je
mov
add
push
mov
call
test
je
mov
mov
add
mov
mov
mov
test
je
add
add
push
pushl
mov
call
test
je
mov
mov
addl
jmp
popa
leave
ret
push
imul
insb
insb
outsl
arpl
push
mov
pusha
mov
mov
lods
test
jne
loop
mov
jmp
movl
popa
leave
ret
push
mov
pusha
mov
add
add
mov
sub
lea
mov
xor
test
je
add
cmpl
je
mov
mov
sub
add
movzwl
test
je
and
add
add
sub
add
sub
jecxz
jmp
movl
popa
leave
ret
push
mov
add
push
popl
lea
push
call
push
push
lea
push
push
call
test
je
push
push
push
lea
push
call
test
je
cmp
je
lea
push
call
lea
push
cmpl
jne
call
test
je
mov
call
jmp
leave
ret
xor
pusha
push
call
test
je
push
push
call
mov
popa
ret
jne
gs
xor
fs
insb
add
jo
je
push
popa
addr16
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
cmp
add
lcall
xor
xor
xor
xor
xor
xor
xor
and
fidivs
jmp
aaa
xorb
aaa
mov
xchg
aaa
cwtl
aaa
sahf
aaa
movsb
aaa
stos
aaa
mov
mov
push
pop
pop
stos
dec
rep
ret
push
call
mov
push
jmp
add
lea
cmp
jae
dec
xchg
push
xor
push
movzbl
imul
sub
sub
lea
cmpb
jae
xor
pop
pop
xor
jne
sub
add
pushl
pop
add
add
mov
add
mov
shl
shr
pushl
add
mov
pop
jmp
push
jmp
jne
push
call
mov
call
mov
sub
jb
mov
test
js
mov
jmp
call
lea
mov
xchg
push
mov
push
push
call
call
decb
jne
lea
inc
inc
pop
push
call
popl
movl
lea
push
mov
subb
push
jmp
pop
pop
mov
add
pop
pop
pop
ret
sub
dec
mov
inc
imul
xor
inc
jmp
popl
xchg
popl
call
ret
push
call
push
mov
test
js
sub
nop
dec
push
mov
mov
mov
push
push
call
mov
push
push
push
push
call
add
pop
pop
call
call
jmp
push
call
call
cmp
jne
setge
dec
call
push
call
pushl
call
pop
jmp
call
call
cmp
je
push
rdtsc
pop
ret
dec
je
inc
xor
movsbl
lea
call
lea
push
push
mov
jmp
cmpl
ja
lea
pusha
sub
call
dec
dec
jne
mov
stc
inc
pushl
pop
sub
jae
sbb
jno
dec
dec
cmc
pushl
add
addw
jmp
out
add
mov
pop
fimull
cld
xorl
arpl
mov
das
loop
or
push
xlat
mov
inc
adc
sbb
mov
cli
mov
int
xchg
cmpsl
std
mov
adc
jnp
sub
je
lods
jecxz
sbb
lds
add
mov
push
pusha
ret
jnp
push
mulb
xchg
movsb
mov
roll
cli
clc
cmp
adc
pop
jp
cwtl
mov
sub
aad
popa
mov
fwait
incl
popa
push
out
pusha
jl
loopne
mov
or
aam
negl
fwait
cmc
jmp
es
ss
fildll
xchg
inc
pop
cmpsl
cltd
pop
xor
in
adc
push
inc
aas
jae
test
and
out
das
jo
and
repnz
rorl
lock
mov
xchg
adc
repnz
lcall
cltd
lcall
mov
push
pop
add
jne
inc
rorb
aam
fiaddl
leave
xlat
adc
aas
cli
or
or
jns
repz
hlt
xor
cmp
jmp
call
dec
push
test
pop
cwtl
pop
cmpsl
pop
adc
movsb
push
rol
ss
int3
je
mov
cmpb
or
outsb
ret
xlat
lods
push
shlb
pop
movsb
xchg
xor
and
adc
mov
pop
cmpsl
fimuls
fcmovu
xchg
inc
arpl
adc
mov
mov
inc
lea
xchg
cmp
rolb
sbb
jno
rcl
test
inc
mov
push
and
test
fwait
dec
or
fprem1
pop
mov
mov
rolb
inc
xor
mov
push
cmp
enter
mov
sbb
sarl
and
das
jmp
push
adc
dec
testl
pop
push
lahf
and
mov
pop
fwait
mov
in
mov
xchg
xor
mov
lock
test
inc
adc
es
lret
ss
inc
lods
mov
and
ret
sub
add
pushf
jo
cltd
or
xchg
xchg
push
inc
sub
and
cltd
test
jne
test
sarl
popf
andb
mov
lcall
popa
or
fistpl
inc
fisubl
sahf
cmc
and
test
andb
in
mov
pop
sar
lahf
ds
jb
sbb
sub
mov
adc
imul
add
bound
fcompl
icebp
sbb
pop
jecxz
imul
mov
leave
test
jae
mov
shll
or
loop
bound
sub
jge
adc
inc
mov
jle
inc
fcompl
and
int3
mov
mov
cs
sub
aam
das
into
ret
mov
or
jp
in
mov
mov
scas
jno
orl
cmp
in
jmp
jmp
mov
out
test
jb
mov
jecxz
push
mov
es
scas
or
jnp
and
xchg
fldt
xchg
inc
fsqrt
sub
xchg
add
and
loopne
ja
pop
les
mov
ljmp
xor
pop
or
mov
xor
in
stc
and
out
jle
mov
or
in
and
or
mov
ret
rcr
cmp
push
or
mov
lods
jnp
pop
dec
jbe
xor
cmc
adc
inc
aad
push
xchg
add
pop
lret
inc
shll
movntq
mov
pusha
sbb
mov
mov
xchg
aam
sub
shlb
test
mov
jecxz
mov
pop
lret
mov
ret
jne
out
stos
sub
jecxz
push
xor
shr
imul
lods
repnz
inc
inc
sbb
ret
ret
mov
int
sbb
xchg
mulps
inc
xor
inc
jl
lret
dec
ret
xchg
xor
mov
xchg
mov
push
inc
fwait
cli
xor
pop
gs
in
fcomps
lahf
push
mov
mov
mov
decl
lock
mov
sbb
xchg
lods
xor
jno
inc
jbe
mov
inc
fisttpll
jb
clc
and
icebp
faddl
shl
in
int
lea
mov
test
insb
cmp
mov
and
dec
or
loope
decb
xor
and
mov
out
aam
testl
lods
pop
or
dec
fnstenv
inc
loope
dec
dec
cmp
stos
dec
add
testl
mull
das
jg
rcrb
pushf
or
xchg
in
sbb
dec
cld
add
aaa
inc
mov
lcall
inc
xchg
scas
lahf
fwait
xchg
lods
mov
mov
fs
stos
xchg
cmp
xchg
iret
push
loope
mov
dec
pop
call
cmp
sbb
cmp
sub
loope
xchg
jns
sub
xor
adc
mov
push
push
add
mov
popf
pusha
mov
aam
push
push
jo
mov
push
test
mov
pop
cmp
and
adc
xor
jmp
jecxz
lret
adc
js
lds
sar
ss
dec
andb
ret
cwtl
inc
xor
fstpl
ret
sti
mov
jae
loop
bnd
ja
add
dec
add
in
fstps
out
cmpb
cmp
loopne
pop
addr16
dec
push
push
pop
sahf
push
xor
shll
mov
jb
cld
or
mov
mov
iret
jbe
aam
mov
shlb
pop
jle
sbb
pop
lret
mov
jp
and
xchg
test
aas
dec
adc
sub
mov
mov
adc
int
lods
push
sub
outsb
mov
or
mulb
lods
jnp
xor
or
dec
add
or
pop
xor
mov
push
testb
and
movsl
adc
and
inc
cmc
in
repnz
push
insb
fcompl
out
int3
mov
xchg
inc
and
lret
nop
sbb
xlat
xor
cmp
adc
or
out
push
iret
and
int
sub
or
jbe
pop
cltd
mov
cmp
mov
mov
and
addr16
rolb
jmp
movsb
jg
cmp
jecxz
out
inc
ja
mov
jae
jecxz
ljmp
dec
adc
popf
xor
rorb
js
push
cmc
cmpsb
in
xlat
push
sti
xor
xor
xlat
test
dec
jp
popf
lret
mov
lahf
xorb
int3
inc
cmp
and
lea
jno
xchg
sbb
dec
addr16
ret
xlat
and
mov
hlt
in
xor
and
test
subl
popa
aam
sub
mov
or
pop
cwtl
popf
cmp
xor
xchg
or
pop
icebp
inc
das
ret
hlt
mov
and
add
mov
mov
mov
and
mov
pop
test
sub
arpl
test
fbstp
dec
jae
cmpl
and
ds
push
sbb
xchg
inc
pop
imul
mov
sub
cs
sub
xchg
or
scas
pop
data16
int3
jae
mov
jmp
mov
sub
mov
cld
daa
popl
in
shrb
xchg
movsl
out
xchg
xchg
cmpl
or
leave
xchg
xor
lret
push
inc
dec
pop
roll
lret
insb
mov
mov
adc
sti
jns
xor
cmp
add
movsb
cmp
sahf
mov
mov
in
xor
int3
and
test
push
pop
jno
pop
lods
icebp
pop
pop
imul
push
and
sbb
push
cltd
or
sbb
mov
lahf
outsl
cmc
mov
push
push
xlat
sub
mov
insb
lods
mov
mov
push
cmp
pop
aad
movsl
in
mov
cmp
fs
pop
xor
ficoms
sbb
hlt
leave
mov
aad
mov
divb
xor
in
lock
jo
adc
push
pop
xor
aam
dec
sbb
pop
pop
and
sub
jno
lods
mov
lahf
inc
mov
inc
dec
lods
dec
mov
cmpsb
in
mov
jp
cmp
xchg
sub
push
cwtl
or
fcmove
test
push
mov
lcall
imul
or
xchg
les
mov
mov
pop
pushl
inc
inc
sbb
insl
adc
push
mov
sbb
scas
aas
imul
out
pusha
scas
aam
push
cmp
nop
xorb
jge
ficoml
pushf
adc
lret
test
cmp
add
lret
out
mov
xor
sbb
shrl
push
je
pop
ljmp
xchg
bound
dec
dec
mov
int
mov
dec
sub
mov
sahf
xchg
imul
xchg
inc
mov
enter
xor
into
pop
enter
stos
imul
mov
inc
dec
push
pusha
cmpsb
sub
or
push
sbb
pop
sub
ds
jnp
out
aam
dec
test
mov
outsb
icebp
jnp
das
jnp
mov
adc
lds
push
or
rolb
sti
fisttpl
mov
sub
or
mov
adc
outsl
push
push
rcrl
add
cmp
fisttpl
lds
mov
xchg
sbb
dec
fcomps
dec
clc
push
cmp
and
add
sbb
xchg
xor
dec
mov
jmp
sahf
pop
ss
cmp
out
cmc
ficompl
dec
cmpl
mov
push
in
enter
or
sub
lods
ss
fmulp
mov
sbb
sti
jg
std
sbb
add
ret
imul
mov
xchg
es
mov
into
xorl
aam
add
sahf
push
inc
pop
mov
pop
cltd
iret
or
dec
jp
adc
inc
fsubs
and
das
add
and
cmpl
adc
adc
andb
pop
outsb
std
out
les
inc
jae
mov
pxor
mov
loopne
leave
fwait
icebp
aaa
jnp
xchg
cwtl
jge
or
sahf
jnp
fsts
testl
jnp
sbb
daa
mov
xor
flds
shl
ret
test
scas
lds
adc
mov
inc
pusha
jnp
inc
xor
js
gs
xor
jo
cmpl
mov
idivl
cmp
xchg
push
lea
add
fmul
mov
scas
insl
push
sub
dec
pop
mov
es
daa
or
push
scas
sub
mov
add
repz
xchg
daa
jns
jl
mov
mov
cmpsb
cmp
pop
add
ret
addb
test
mov
movsl
mov
xor
push
xor
push
out
sbb
mov
aam
lods
lods
adc
cmpsb
inc
sbb
test
push
aaa
xlat
aaa
mov
arpl
dec
cs
or
mov
inc
mov
fwait
outsl
je
into
mov
icebp
cmp
shll
push
and
or
insb
imul
xor
fbld
cmp
js
into
scas
std
push
mov
jns
inc
cmpps
repnz
daa
mov
or
adc
pop
xor
fs
mov
dec
jp
mov
inc
imull
fwait
xchg
shll
dec
aam
movl
stos
in
pop
pop
scas
or
fsubs
adc
mov
icebp
test
cltd
dec
cmp
lret
dec
flds
int3
sub
push
jb
lret
adc
mov
pop
aaa
push
add
xchg
lahf
movsb
lahf
les
arpl
add
cmc
mov
sar
push
fndisi(8087
xor
test
int
cmp
scas
adc
jb
xchg
xacquire
repnz
xchg
and
lret
es
add
pop
addr16
xor
sub
add
mov
shlb
arpl
jne
jne
fiaddl
sub
pop
cld
push
repnz
cmp
push
add
je
iret
gs
ds
and
jae
adc
cs
pop
xchg
sub
cli
out
inc
dec
cmp
out
push
jnp
push
aad
movsb
sbb
inc
mov
lcall
aaa
insl
out
mov
in
inc
mov
dec
push
jl
inc
les
sub
fadds
out
imul
pop
xor
into
sahf
imul
sbb
roll
lds
dec
lcall
inc
sub
jg
pushf
xchg
out
cli
jecxz
movzbl
stos
add
aad
sub
movsb
or
notl
sub
push
push
dec
mov
mov
mov
test
push
int
sahf
jle
pop
loopne
fwait
and
adc
xor
sbb
test
int
jnp
sub
fiadds
push
dec
fsubs
iret
pusha
add
das
xchg
mov
xchg
ds
imul
mov
decl
mov
mov
mov
push
cli
cmpsb
sti
mul
outsl
imul
push
std
pop
stc
xchg
jnp
and
rclb
ret
lea
fsubl
insl
imul
mov
call
push
mov
loop
mov
mov
jns
in
xchg
mov
cmpsb
nop
jmp
and
imul
idivl
ja
or
repz
fsts
jp
imul
mov
enter
and
cli
and
cwtl
into
aam
les
or
fadd
xchg
adc
and
std
fisttpl
inc
shl
enter
pop
ret
xchg
icebp
andps
sbb
ret
ret
popa
test
nop
jne
push
jmp
mov
xor
movsb
dec
add
cmp
mov
lods
cmpsb
pop
inc
sbb
fists
scas
xchg
hlt
test
cmp
lret
jl
inc
call
js
cmp
push
xchg
mov
xor
sub
stos
cltd
pop
aaa
in
adc
xor
sbb
mov
mov
xor
fs
arpl
mov
adc
cmpsb
scas
xchg
into
jb
hlt
jno
sarb
lods
mov
jmp
mov
jae
cmp
pop
cmp
push
pop
dec
mov
in
je
lods
jecxz
loop
cltd
and
and
fnsave
adc
xchg
mov
cmpsb
daa
adc
out
mov
punpckhbw
jp
aaa
testb
adc
dec
aaa
add
or
jo
dec
mov
mov
sub
pop
ret
ficompl
sbb
jo
xchg
sub
pop
lret
inc
xlat
xlat
imul
in
scas
pop
mov
fwait
into
fisttpl
ja
fnstsw
pushf
in
sbb
push
push
xchg
addb
xlat
mov
push
lret
clc
rclb
test
xor
icebp
add
ljmp
pop
or
repz
push
mov
and
jle
mov
push
bound
cmp
mov
mov
clc
pop
mov
shlb
cmp
repz
push
mov
jecxz
xchg
xchg
pop
out
jae
jle
xchg
scas
dec
sbb
pushf
and
rcrb
fisttpll
mov
jo
cld
add
mov
inc
movsl
addr16
cwtl
xchg
sti
mov
adc
hlt
mov
sub
cli
sub
pusha
inc
out
xlat
ljmp
aaa
test
stc
and
dec
lock
shl
xlat
dec
pop
adc
mov
xlat
aas
add
and
mov
push
inc
repz
ljmp
cs
jmp
dec
push
add
xchg
mov
pop
aaa
movb
cmp
std
xchg
mov
or
jno
aad
add
xchg
data16
and
cltd
orl
fiaddl
and
inc
orb
dec
xor
ret
mov
pusha
movsb
pop
jmp
and
movsl
mov
loop
dec
push
test
adcl
mov
adc
fstl
inc
call
pop
lret
es
int3
test
and
pop
fimull
and
test
xlat
xchg
dec
loope
inc
sub
jge
adc
nop
sbb
into
test
and
cmp
jnp
push
and
jns
mov
repnz
dec
in
pop
out
popf
inc
push
lods
ja
mov
loop
aam
jnp
rcll
insb
lcall
or
mov
les
and
ss
and
ja
cld
dec
aad
add
mov
jno
sbb
mov
mov
test
gs
scas
sub
cmp
out
stc
repz
push
out
mov
lock
aaa
add
movsb
out
ds
and
ret
jle
mov
fildl
sbb
push
sahf
jl
sarb
neg
fstpl
add
fbld
mov
xorb
sub
mov
popf
and
mov
push
idiv
xor
mov
movsb
call
jb
pop
int
rcr
notl
nop
xchg
mov
jbe
inc
push
adc
ret
jb
xchg
bound
out
sti
out
lods
mov
xchg
rorb
aam
inc
out
fwait
pop
jno
jns
dec
inc
je
inc
ret
pop
push
in
pop
mov
fidivrs
fidivrs
jecxz
outsl
mov
mov
and
sbb
sub
jmp
inc
mov
and
out
andl
bound
in
hlt
jbe
insb
jmp
sbb
cltd
lods
test
mov
push
pushf
daa
sbb
sbbb
sbbb
mov
pop
fisubl
cltd
xchg
aaa
sbb
pop
lret
dec
repnz
dec
sub
mov
test
dec
mov
fwait
add
sbb
jnp
pop
push
cmpsl
mov
je
ljmp
insl
and
xchg
lret
fildll
outsl
dec
xchg
adc
add
test
jo
mov
mov
pop
jmp
iret
sahf
jae
lds
adc
je
mov
orb
icebp
iret
je
dec
xor
aaa
xchg
jo
xchg
mov
je
gs
jp
jne
aas
cmpsl
sub
pop
jmp
iret
sub
arpl
jp
les
mov
inc
call
xorl
lods
cmpsb
jb
add
fdivp
cmp
cmp
daa
add
sub
fsubrs
xlat
out
mov
loopne
dec
je
xor
mov
das
cli
ret
cmp
mov
mov
and
test
mov
call
fwait
mov
pushf
sti
iret
pop
pop
mov
push
add
mov
jg
sar
call
jne
popa
dec
and
push
or
nop
shlb
push
cwtl
xchg
rcll
push
and
std
mov
xchg
mov
mov
mov
outsl
xlat
xchg
add
xchg
test
stos
jno
dec
cmp
mov
mov
test
push
cmc
sbb
xchg
dec
jecxz
sahf
test
stc
repnz
out
aad
je
stc
sub
push
les
pop
iret
inc
xor
fdivs
jg
jmp
pop
data16
cli
sub
movsb
jne
es
mov
stc
pop
mov
xlat
enter
jno
mov
xchg
cmp
jns
es
inc
dec
push
fmull
mov
inc
lahf
ret
das
ds
and
in
sub
mov
fstl
sbb
or
daa
pop
and
dec
xchg
cwtl
mov
dec
movsb
ljmp
jp
jns
adc
mov
addr16
fistps
mov
lahf
cmp
jg
push
xor
and
cmp
imul
jb
xor
or
xchg
lds
sti
add
jg
push
jg
fists
jge
jp
xchg
iret
aad
ret
ljmp
lock
icebp
test
jg
nop
xchg
gs
add
push
sahf
jno
in
inc
out
add
mov
in
cwtl
mov
test
adc
inc
es
mov
push
xchg
sbb
jg
jns
mov
outsl
pop
dec
xchg
xchg
ret
cmp
cmpsl
int3
dec
push
dec
fsubl
pop
stc
bound
out
out
es
push
mov
jb
pop
mov
clc
pop
lcall
push
insb
inc
test
in
mov
ficoml
inc
in
outsl
enter
dec
repz
sub
pusha
dec
shl
mov
xorb
add
or
or
out
push
cmp
push
mov
jb
dec
rcll
mov
mov
sbb
pop
push
or
jle
mov
stos
scas
ljmp
push
frstor
sub
outsl
pop
adc
out
popa
jmp
cmp
lods
fidivrl
insl
xor
jne
pop
pusha
lods
mov
popa
cmpsb
rolb
push
push
scas
mov
or
cld
cwtl
xchg
fwait
inc
jmp
or
enter
mov
xor
andps
out
ja
push
psubusw
mov
enter
decl
enter
fwait
or
mov
push
out
in
push
daa
inc
mov
hlt
cmpsb
fisubrl
inc
repz
push
outsb
mov
cmp
je
mov
xchg
into
out
pop
sub
and
add
sub
sub
jmp
icebp
pop
aam
cltd
xor
adc
mov
pmaxub
lcall
cld
add
mov
push
icebp
mov
icebp
pop
les
jmp
fldl
ds
sahf
sbbl
outsb
and
outsl
imul
icebp
fidivrl
ret
aam
out
sub
int
jbe
mov
adc
push
mov
or
call
in
adc
clc
mov
xchg
or
mov
mov
into
jae
xor
lret
repz
jae
and
push
mov
inc
cmp
push
adc
xchg
cli
adc
pop
jo
xchg
cmp
stos
mov
jbe
lret
sub
push
gs
jle
test
ret
push
xor
movsl
ds
push
xor
add
les
stc
insb
shl
push
mov
out
pop
sbb
mov
push
shl
insb
cmp
sub
jge
xchg
mov
pop
dec
daa
xorb
jns
xor
data16
popa
inc
aam
decl
and
stc
jno
sub
fdivr
or
inc
out
fs
mov
sti
mov
ret
jo
divb
aaa
add
cmpsl
adc
scas
add
cmp
leave
or
add
fmuls
mov
es
push
jl
lahf
sub
cli
rol
out
xchg
ja
std
fsub
xchg
adc
call
lods
jae
inc
jmp
xchg
push
mov
ror
imul
add
sub
or
mov
pop
mov
jl
and
and
push
aad
pop
mov
in
inc
mov
push
lods
das
je
push
pop
dec
mov
and
pusha
pop
and
andb
jle
cmp
sbb
dec
xchg
movsb
cmp
push
mov
cwtl
nop
adc
out
mov
loop
shlb
fwait
inc
mov
imul
jne
push
adc
jne
daa
jl
fadd
aaa
cmpsl
outsl
mov
adc
mov
out
lods
dec
pop
xor
inc
jmp
aad
add
in
adc
js
popa
xchg
mov
hlt
jmp
enter
jbe
adc
call
cmpsb
shr
mov
sub
mov
aad
cmp
pushf
out
sub
fstpl
stos
adc
adc
rcrl
ret
lds
lret
dec
popf
call
cmp
fadds
push
dec
outsl
loop
cld
sub
add
sahf
push
pushf
dec
add
jmp
add
sbb
xor
push
popf
pop
jl
test
lods
mov
xor
rorl
icebp
out
ret
out
jmp
jno
not
inc
movsb
adc
aam
movzbl
jl
sbb
jns
dec
jg
aaa
sub
cmp
mov
cwtl
test
jbe
mov
outsl
cs
in
mov
dec
and
sbb
test
cmpsl
mov
fwait
nop
ret
push
fs
and
adc
inc
mov
and
sti
ja
je
ret
stos
or
add
lahf
repz
jno
and
cmp
add
dec
stc
mov
pop
inc
leave
movsb
mov
stc
inc
and
cmpsb
and
sbb
hlt
dec
sbb
ljmp
fisttps
inc
jae
sarb
mov
test
mov
sbb
loop
int3
sbb
ja
lret
stos
pusha
aas
pop
or
jno
sti
ficoml
push
shr
xchg
sub
xor
in
imul
mov
add
sub
call
insb
in
sub
pop
aas
jp
cmpsb
pop
xor
mov
inc
pop
pop
cmpsl
ja
jle
jnp
sahf
push
pop
dec
inc
or
cli
push
call
ja
stos
mov
pop
mov
jl
cmpsb
addl
sbb
mov
sub
cmp
lock
es
imul
inc
nop
clc
xor
int3
dec
add
sbb
das
pop
mov
ds
test
out
push
mov
fidivl
jp
in
popf
jmp
pop
sub
adc
mov
mov
out
mov
int3
mov
jl
mov
cmp
lret
leave
dec
leave
test
das
add
lret
stos
test
inc
push
insl
cmp
inc
sbb
jmp
pop
ret
mov
lods
sub
xor
adc
lods
fidivl
test
dec
rorb
ds
adc
imulb
and
sahf
mov
dec
cmc
inc
in
pop
cmp
in
les
sbb
sub
lods
fcompl
lods
out
jl
add
out
inc
mov
cli
fs
repz
popf
js
stos
mov
push
lret
outsb
xor
aad
and
shrb
jle
xor
inc
ret
ja
mov
push
notb
cltd
aam
xchg
lea
mov
scas
pxor
add
outsl
adc
popa
mov
dec
add
frstor
mov
mov
fistpll
in
jecxz
js
xor
lahf
mov
jns
test
jle
add
jnp
sti
das
roll
inc
jbe
shrl
or
sbb
adc
inc
aad
bound
add
insl
mov
outsl
sbbl
movsb
lods
imul
fsub
ss
mull
xor
shrb
mov
pop
jp
xor
les
jl
pushl
shll
add
incb
mov
sub
pop
mov
dec
fmuls
je
inc
enter
push
dec
leave
adc
shlb
cmpsl
out
in
inc
fs
aad
fldenv
jns
push
mov
aam
xor
and
lds
xor
adc
or
add
orb
push
cltd
call
cmpsb
pop
sti
call
or
out
xor
push
stos
out
repnz
ss
loop
jb
mov
lret
aaa
stos
div
je
stos
ss
ds
adc
push
les
pop
mov
push
xor
imul
add
fsubs
cld
xchg
jecxz
jb
js
add
cmc
xchg
daa
ss
sbb
inc
adc
sbb
xorl
xor
push
pusha
dec
sub
sub
mov
xor
jnp
call
jmp
xchg
push
push
adc
and
add
inc
jb
pushf
cs
test
push
popa
pop
in
jnp
xchg
sbb
and
inc
je
xchg
int3
jg
mov
cltd
fistps
movsb
icebp
push
xchg
out
pop
clc
loopne
cld
sti
sbb
cmp
dec
mov
mov
push
or
pop
popa
clc
sbb
adc
xchg
cmpsb
xchg
imul
or
dec
outsb
dec
cmp
mov
or
leave
pop
dec
mov
cli
mov
and
outsb
mov
outsb
push
fmuls
dec
ss
mov
fbstp
sub
js
mov
jne
mov
add
and
xor
jg
or
xchg
xor
sub
lea
mov
movsl
js
in
sbb
xchg
pop
push
fwait
and
or
movsb
decb
incb
pusha
pop
mov
call
scas
sti
pusha
sbb
lock
bound
aas
ror
ss
jae
push
popf
mov
rcrl
loop
jae
loop
sti
inc
jbe
lahf
aaa
xlat
pop
mov
jns
rorl
jge
jp
fistpll
arpl
sbbb
or
aad
xor
push
jl
dec
ja
imul
inc
pop
add
add
xor
pushf
loopne
add
or
sbb
mov
insb
xchg
dec
pop
test
jb
ret
inc
and
mov
add
bound
and
mov
hlt
mov
dec
or
loope
xchg
es
mov
int
cmpsb
pusha
sub
ret
xor
jle
jno
jne
inc
push
fwait
xor
loop
ds
add
fsub
mov
jo
jns
clc
dec
mov
sbb
mov
pop
roll
enter
jle
pop
dec
fwait
inc
in
adc
add
dec
divl
xchg
jbe
clc
cwtl
lock
icebp
mov
xchg
sbb
cmp
or
pop
adc
fsts
and
push
sbbl
jno
stc
and
pop
ficomps
scas
sub
stc
or
cmp
and
loop
sbb
xor
adc
or
mov
xor
and
cmp
fimuls
jl
pop
fstl
outsl
xchg
cmpsb
popf
repnz
dec
lcall
stos
fimull
jle
pop
aam
ljmp
arpl
add
and
jb
pop
test
inc
bound
add
repz
push
test
push
iret
rolb
jbe
out
int3
into
aas
cmp
in
xchg
icebp
sub
and
mov
loopne
rcl
in
out
xor
iret
xchg
stos
xchg
mov
iret
push
xor
call
jle
cmpsb
pop
pop
scas
add
dec
cmp
sub
cmp
fstp
fsts
insb
adc
andb
insb
ret
aas
add
sti
out
sarl
add
mov
xchg
mov
insb
pop
ljmp
stos
xor
setg
mov
push
inc
nop
jecxz
push
loopne
xor
pop
push
iret
or
adc
jmp
addb
inc
mov
add
sub
jle
jbe
outsb
test
mov
icebp
inc
mov
mov
fidivrs
inc
xchg
xor
in
push
xor
jb
mov
aad
outsb
mov
jb
xchg
je
nop
push
xor
out
mov
pop
dec
xchg
push
iret
cmp
mov
in
out
lods
push
sub
fnstenv
enter
in
mov
jl
mov
mov
mov
lcall
aaa
aad
and
and
jp
push
dec
pusha
xchg
xor
stc
movb
loopne
imul
fisttps
mov
pop
and
dec
mov
xor
mov
pop
mov
loope
dec
je
in
into
inc
adc
and
inc
sbb
pop
hlt
pop
jnp
push
pop
cli
sti
mov
lcall
ret
xor
inc
sahf
mov
sbb
xchg
xor
mov
sbb
bnd
push
sti
push
push
rcrl
andb
shll
pop
call
jp
mov
gs
sbb
dec
jnp
out
push
or
stos
scas
call
cltd
cs
repz
push
insl
or
jae
pop
out
xchg
add
pop
imul
push
xor
xchg
jns
mov
dec
popf
cld
jnp
and
mov
jmp
xor
data16
loope
sbb
mov
add
pop
jb
inc
add
jno
mov
jg
insl
sub
ds
fldt
in
icebp
gs
mov
cmpsl
lret
and
push
and
dec
daa
sbb
xchg
shr
push
xor
loop
sbb
mov
int3
loopne
call
sti
mov
test
test
or
cmp
cmc
mov
pop
test
mov
stos
loop
xchg
in
jl
dec
bound
xchg
testb
stos
jge
or
add
imul
mov
mov
xor
insb
repnz
das
cmpsb
and
fcompl
cmp
out
xor
popf
out
daa
xchg
dec
inc
inc
pushf
inc
jmp
mov
push
add
aas
dec
das
xlat
inc
into
xor
insb
sbb
imul
enter
adc
nop
clc
lds
cmpsb
out
std
mov
and
xlat
stos
arpl
inc
cmp
mov
fiadds
pushf
mov
in
movsb
pop
push
gs
in
out
pop
push
fs
xchg
aad
cmc
sbbl
add
push
es
bound
clc
or
dec
outsl
mov
sbb
adc
inc
jnp
sub
popa
jne
int3
bnd
rcrb
cli
pusha
mov
enter
ja
pop
mov
mov
sub
aad
adc
and
inc
fs
mov
es
cmpsl
push
push
and
into
or
rorb
xchg
sub
xchg
xor
cmpsl
push
or
sub
inc
inc
mov
cmp
test
pop
sahf
mov
push
jne
lds
mov
push
sbb
push
mov
xchg
xchg
add
pop
push
test
lock
push
imul
pop
decb
aad
adc
fnstenv
inc
out
cwtl
pop
mov
into
enter
inc
rcl
gs
shll
xchg
aad
enter
push
xor
mov
jge
add
mov
cmpsb
shll
ss
xor
ret
fcomi
test
mov
adc
aaa
loope
cmp
jb
add
movsl
popa
mov
insb
xchg
add
outsb
push
popa
jl
cmc
faddp
lret
mov
gs
push
or
xor
xor
fcmovne
arpl
pop
jmp
jae
aaa
cld
mov
enter
mov
sbb
push
cmc
cmc
sbb
and
dec
out
js
cmp
out
movsb
mov
pop
inc
inc
aam
push
or
cwtl
inc
ret
xchg
and
push
inc
mov
push
dec
xlat
pop
jmp
pop
and
lret
jge
xchg
fsubl
mov
test
loopne
shrl
inc
mov
icebp
mov
mov
dec
add
mov
push
js
fwait
shrb
test
arpl
inc
cmp
out
mov
arpl
jnp
xchg
out
jne
js
fcoml
adc
or
push
sbb
bound
and
rcll
dec
stc
xchg
pop
cmp
iret
repz
mov
stos
rorl
xchg
xchg
fdiv
stc
sub
cmp
xchg
push
jnp
loopne
push
int3
push
jle
stos
add
fcoml
outsb
push
test
pop
cltd
add
not
rorl
nop
jne
popl
pusha
test
sti
sbb
mov
data16
dec
pop
out
add
sbb
call
add
mov
sahf
dec
inc
stos
cld
add
add
ljmp
xchg
les
or
lret
movsl
xor
cmpsb
std
in
jns
rcr
dec
cmp
ja
out
fldt
mov
sbb
sbb
aad
out
jno
dec
jmp
aad
mov
lcall
out
repz
in
sahf
xor
push
test
stos
lods
das
pop
cmc
fbld
mov
in
cmp
xor
push
push
mov
dec
pop
sbb
lods
mov
out
pop
push
jnp
rclb
movsb
and
fisubrl
push
xchg
pop
divl
rol
mov
xor
inc
lret
aaa
cmp
and
mov
ss
cltd
lret
imul
xor
add
push
lods
or
or
ret
fsubrs
mov
fidivl
and
dec
mov
loopne
iret
and
sbb
jnp
cld
jmp
cwtl
or
jmp
fimuls
and
lods
pusha
popa
xor
cs
nop
hlt
jne
gs
insb
xchg
scas
cmp
daa
pop
xlat
sub
push
gs
ret
xchg
or
push
or
inc
in
das
adc
imul
mov
cmp
int3
push
jo
xor
fdivl
pop
mov
jae
testl
test
xor
ret
imul
shlb
mov
stos
xchg
push
xchg
sub
push
nop
sbb
ljmp
int3
inc
test
or
pop
add
mov
sbbl
in
jecxz
xchg
or
ss
inc
xlat
push
dec
mov
dec
loope
cs
aam
jmp
add
jle
jne
cmp
nop
or
xor
jmp
ljmp
lahf
loopne
dec
dec
mov
out
sub
cmpsl
nop
loopne
sti
lods
jle
sahf
rorl
sti
dec
adc
mov
outsl
rcrb
jne
sbb
cmpsb
push
jp
mov
sbb
popa
or
je
in
fcomp
aaa
insb
mov
adc
test
outsl
imul
push
test
add
loope
aas
sub
or
xchg
sub
pusha
and
dec
stc
enter
dec
insl
pushf
xor
mov
and
jg
adc
mov
int3
insb
or
cltd
ja
mov
mov
call
test
mov
or
loopne
dec
push
je
test
divb
out
dec
and
leave
lds
test
jns
sbb
shl
data16
pop
mov
out
lods
mov
int3
ret
pop
negl
aad
pushf
mov
add
cmp
cmp
or
xor
mov
xlat
into
xchg
leave
sbb
sub
cmp
lods
push
aas
jo
and
cwtl
call
jmp
leave
push
dec
cmpsl
sbb
cltd
pop
jecxz
aas
test
jo
bound
mov
int
and
jl
rorl
cmp
jg
mov
push
aaa
loopne
adc
rorl
sbb
scas
xchg
sahf
mov
inc
xor
jae
lret
jae
cmp
ds
loope
aas
add
loopne
xor
mov
ss
dec
mov
mov
jae
xchg
fld
shl
jecxz
arpl
mov
nop
sub
push
sub
jge
push
popa
ficompl
inc
or
mov
mov
ret
mov
clc
sbb
or
mov
adc
xor
inc
add
clc
hlt
stc
mov
icebp
mov
mov
out
or
xor
add
movl
test
xchg
adc
leave
xlat
fistpll
mov
aad
mov
mov
out
fld
pop
pop
sbb
sarl
je
push
stos
mov
addl
cmp
in
or
inc
push
lds
stc
loopne
aad
add
and
mov
cmpsl
ss
lods
push
mov
add
lds
sbb
mov
sbb
xor
test
mov
xlat
pop
out
mov
es
fwait
jge
dec
sub
adcb
fs
div
mov
mov
popa
dec
inc
lock
push
insb
push
andb
sbb
insl
adc
in
sbb
inc
repz
or
dec
sub
add
mov
xchg
add
lcall
mov
pusha
push
ljmp
mov
mov
xchg
adc
out
out
sbb
cld
leave
pop
pop
stos
sbb
into
dec
jb
sbb
xchg
add
je
inc
xchg
inc
shlb
adc
jbe
bound
loopne
mov
sub
xor
scas
mov
xorb
xchg
js
or
adc
xor
and
in
cmpsl
mov
test
add
mov
imulb
mov
bound
sar
ljmp
add
add
push
mov
mov
jbe
icebp
adc
mov
fidivl
test
aas
lds
je
stos
xchg
adc
call
stos
aad
popa
test
in
mov
std
adc
out
xchg
xchg
nop
push
dec
cmc
pop
mov
sbb
adc
jb
adc
adc
inc
sti
sbb
adc
or
pop
mov
out
mov
xchg
cmp
int
mov
pop
das
addr16
pop
lods
mov
push
loop
xlat
scas
adc
movl
inc
jle
dec
push
addr16
or
das
jl
pop
cs
lds
xchg
xorl
ss
in
push
mov
insb
lcall
stc
sbbl
aad
mov
shl
push
lret
or
push
cli
add
or
adc
jle
xorl
and
popf
imul
mov
ret
stc
in
sarl
daa
push
dec
mov
and
sbb
sbb
inc
cmc
xor
out
sahf
leave
adc
adc
aaa
sub
or
iret
mov
rcl
cli
fldt
into
cwtl
push
outsb
cmp
sbb
pop
sbb
int
insl
push
out
shlb
mov
mov
mov
rorb
outsb
arpl
mov
lods
nop
cmpsl
into
ljmp
sub
jns
dec
test
testl
inc
imul
and
test
mov
in
mov
enter
xchg
jno
mov
fidivrl
xchg
add
gs
cmp
dec
push
sub
sub
inc
gs
adc
xlat
repnz
hlt
lcall
mov
loop
mov
cs
mov
loope
jo
js
popf
add
mov
fcos
cmc
mov
adc
insl
dec
pop
inc
jecxz
sbb
jg
and
jmp
sti
sub
sarb
sbb
daa
mov
jno
inc
orl
add
out
xor
int
mov
jo
push
sbbb
stos
jbe
add
dec
push
push
pop
mov
mulb
dec
bound
and
add
pop
dec
test
ret
or
in
mov
xor
aam
loope
test
sbb
fldt
std
call
loop
mov
jne
add
in
insb
pop
pop
and
mov
pop
fistl
cmc
je
dec
mov
in
mov
push
sbb
and
cmpl
push
ret
or
leave
jecxz
dec
inc
sbb
loopne
sbb
inc
jge
inc
push
mov
dec
lret
pop
nop
jmp
pop
bound
shrl
cmpsl
xchg
dec
add
fildll
and
cmp
out
add
in
add
test
mov
inc
test
rclb
mov
sbb
mov
mov
add
inc
mov
stc
inc
popa
subb
and
stc
xor
mov
xchg
sbb
xchg
cltd
mov
dec
mov
jmp
and
mov
minps
jns
sbb
mov
pop
lret
ja
mov
mov
addr16
mov
rcrb
retw
adc
or
adc
gs
fs
inc
imul
dec
sarb
cli
out
mov
mov
pusha
dec
jle
icebp
jae
push
iret
leave
xchg
and
push
rorl
xchg
mov
in
push
pop
aam
cmpl
aaa
push
cmc
call
jno
cld
sub
pop
push
outsl
sti
aad
in
cmp
pop
xor
out
xchg
fisubs
push
in
iret
dec
popf
test
add
mov
mov
int
stos
or
fistpl
jmp
mov
in
aaa
xchg
in
call
mov
lea
hlt
inc
lret
or
xchg
out
stos
adc
add
cmpsl
sub
xorb
out
loop
xchg
sahf
aad
mov
push
rolb
dec
imul
xor
dec
push
out
out
add
sbb
jbe
sahf
test
out
outsb
comiss
ljmp
movsl
mov
xor
pop
mov
sub
jle
mov
pop
fldl
repnz
lock
xor
movsb
scas
mov
or
outsb
mov
dec
ljmp
sbb
sbb
pop
lcall
mov
fimull
mov
pusha
cmp
ja
aam
xor
push
shlb
outsl
lret
dec
loopne
add
repnz
int3
or
sub
dec
pop
sbb
push
add
mov
stc
out
gs
sub
mov
fsubrs
and
rorl
int3
std
jle
cmp
daa
or
xchg
dec
cli
mov
ret
xor
insb
push
xor
scas
mov
hlt
and
inc
pop
sbb
inc
sbb
scas
sub
cmpsl
or
aaa
xchg
leave
push
mov
dec
test
add
dec
stc
popf
int3
cs
dec
btr
ds
shrl
adc
or
push
adcl
jno
test
sbb
and
popa
jmp
dec
std
ljmp
fsubs
getsec
std
xor
stc
stos
stc
pop
jno
hlt
idivb
sbb
push
pop
daa
out
cmp
lea
cmp
add
std
fcoml
cmpsb
push
fcoml
daa
inc
pop
cs
aad
cmp
and
xor
jnp
add
mov
jb
mov
sti
cmp
mov
sbb
mov
pmulhuw
or
jb
cltd
sbb
loop
ljmp
jge
std
inc
hlt
sub
jmp
leave
ret
in
xchg
sbb
mov
cltd
cmc
ja
sub
pop
mov
leave
cli
sbb
sub
aaa
aad
int
sub
adc
in
movsb
mov
mov
into
test
std
push
rcl
fiaddl
dec
jo
adc
cwtl
les
pop
lds
int3
popa
sbb
xchg
test
iret
daa
pop
inc
stc
sarb
lods
and
sub
icebp
and
xor
cltd
xchg
mov
xchg
cs
in
xchg
outsl
push
mov
and
mov
mov
or
stos
fdivr
and
mov
outsl
lahf
daa
insb
xchg
imul
and
iret
inc
addr16
push
std
cmp
mov
and
inc
xchg
fsubrl
clc
mov
daa
pop
outsl
shll
ffree
int3
stos
pusha
out
lods
xchg
insl
cltd
jp
sbb
pusha
pop
push
cs
rolb
cld
aam
mov
jecxz
inc
or
es
inc
dec
hlt
out
daa
bnd
gs
jle
push
ss
sbb
cmp
push
call
pusha
mov
mov
fs
sub
push
fwait
dec
sub
cwtl
loopne
push
xlat
rclb
mov
mov
dec
adc
fidivs
sbb
fstpl
inc
std
cmp
dec
push
fnstcw
pop
sbb
ljmp
pop
leave
pushf
adc
roll
push
cltd
mov
mov
out
xchg
sub
test
add
test
gs
out
mov
in
flds
pop
out
or
js
movsb
imul
in
inc
jge
outsb
mov
jns
mov
jp
ss
pop
adcb
jl
arpl
pop
mov
loope
cmpsl
sub
xchg
xor
jnp
pop
rcrb
xor
jmp
jne
and
daa
mov
adcb
insl
ret
call
sub
mov
adc
cmp
dec
mov
xor
je
mov
fmul
xor
jae
mov
popf
sbbb
mov
inc
dec
inc
test
jo
aam
das
push
dec
fsqrt
aad
imul
mov
aaa
adc
or
cwtl
ja
enter
adc
ret
addb
mov
sub
cwtl
mov
cmp
push
lock
fs
rorl
inc
cmp
shrb
push
pminub
cmp
jmp
aad
mov
push
fdivs
xchg
pop
adc
rolb
hlt
fisubrl
out
popf
add
dec
push
and
dec
push
cmp
rcr
push
sub
push
or
pop
ds
lods
test
and
lcall
xor
nop
movb
mov
in
adc
mov
lods
dec
mov
mov
rol
inc
mov
sub
or
xchg
popa
insl
lods
xor
outsl
dec
dec
mov
mov
pop
cmp
aaa
fs
inc
jo
call
cmp
imul
mov
stos
orb
out
add
fdivl
lods
inc
ret
xchg
outsl
mov
shrb
stos
pop
dec
add
out
lret
jecxz
mov
sub
cwtl
push
push
test
cmpsb
addr16
xor
jnp
push
addb
nop
adc
inc
or
test
sbb
cld
rcll
imul
mov
push
aaa
call
stos
mov
pop
push
mov
sbb
and
mov
out
mov
push
pop
aad
popa
add
pop
sbb
jge
aas
pop
cli
inc
dec
adc
inc
in
sbb
mov
jbe
mov
mov
testl
movsb
mov
xor
pop
pop
or
sbb
cmp
mov
cmp
cmp
push
ret
pop
dec
lds
adc
mov
andl
rorb
pop
enter
cltd
test
mov
sbb
inc
jp
xchg
and
add
sbb
mov
popf
insb
in
hlt
jnp
push
and
and
fs
loopne
cltd
outsl
xchg
cli
loopne
enter
insb
in
insb
out
mov
xor
movsl
mov
sar
jp
lret
mov
push
add
xor
pop
leave
mov
leave
adc
or
xor
inc
jae
scas
push
push
add
in
and
movb
shrl
fsts
icebp
push
xchg
mov
and
jae
xor
fs
test
loopne
xchg
sbbb
mov
cmc
mov
add
js
pop
mov
mov
mov
out
insb
test
and
std
pop
lcall
mov
fiadds
xorl
push
testb
out
pop
add
aas
mov
mov
subb
das
flds
aad
pushf
mov
in
stos
xchg
sub
jnp
leave
inc
clc
pop
cwtl
xor
sbb
add
fsubrl
pop
test
fcmovu
push
movsl
fiadds
pop
scas
scas
pushl
push
and
mov
sbb
jnp
xchg
and
les
pop
add
push
or
fwait
mov
xor
decb
call
sbb
jne
aad
stc
lods
push
cmp
in
mov
mov
add
cwtl
sbb
ret
and
ljmp
in
orb
ror
int
popa
dec
inc
in
repz
sbb
test
push
outsb
iret
adc
mov
pop
aam
adc
call
mov
mov
sub
or
ds
add
pop
push
scas
xor
push
inc
dec
sub
notl
test
or
and
lods
scas
xlat
add
sub
mov
dec
out
mov
outsl
iret
gs
rcll
stc
xchg
xlat
xlat
sbb
jno
sub
test
pop
dec
and
mov
add
cmp
aam
xor
daa
xchg
inc
cld
lcall
mov
sub
loop
pop
int3
sete
push
push
cmp
sub
aaa
adc
hlt
movsb
daa
in
lahf
dec
mov
insb
xchg
pop
xchg
test
sbb
je
xchg
scas
xchg
xor
jbe
sub
loopne
pop
jno
xchg
scas
sub
mov
test
cmpsl
mov
jg
sub
push
call
jl
mov
sub
insb
dec
arpl
mov
inc
es
jge
imul
dec
mov
xchg
adc
sbb
dec
sbb
jmp
xor
fisubrl
xorl
push
sbb
testl
mov
idivb
sbb
push
std
mov
mov
roll
push
dec
movsl
mov
out
and
enter
popf
aas
xchg
jmp
lret
xor
cmpsb
mov
popa
jb
inc
std
out
sbb
push
daa
cwtl
jmp
push
push
xor
cmp
mov
subb
repnz
pop
test
insl
imul
call
pop
outsb
cmp
in
fcmovbe
call
leave
stos
insb
mov
or
stos
push
jmp
fs
les
xor
int3
repz
xor
shrl
inc
ds
xor
sahf
repz
inc
lret
lods
or
loop
adc
repz
pop
stos
pop
or
fwait
mov
jl
adc
rcrb
mov
jle
icebp
es
lahf
mov
xchg
add
adc
pop
pop
test
test
sbb
push
push
dec
xchg
jle
dec
fucomip
pop
sbb
xchg
add
aam
cmc
push
jmp
jns
fidivs
xor
ss
hlt
outsb
push
xchg
sarl
mov
push
mov
popa
cmp
sbb
aam
ljmp
xor
mov
aam
aam
insb
in
inc
addr16
ret
sbb
hlt
sub
push
sbb
xlat
jno
clc
mov
mov
hlt
mov
xchg
inc
push
out
cld
pop
icebp
in
sti
adc
test
mov
clc
mov
add
cmp
adc
mov
or
lret
mov
dec
sub
notl
scas
mov
cs
cld
and
pop
xchg
int
cmp
pop
mov
aam
repz
roll
sub
sub
and
fcmovb
xchg
pop
push
or
negb
lods
push
fstpl
lret
lahf
sub
sub
shlb
aas
pop
adc
cltd
mov
jge
push
jmp
add
mov
push
lcall
je
stos
pop
pop
orb
out
popf
mov
or
and
loopne
add
cmp
mov
pop
sbb
outsl
xor
mov
sub
in
roll
andl
add
das
sub
jo
ror
gs
inc
popa
repnz
loop
xchg
push
bound
popa
in
sub
popf
in
nop
and
outsl
dec
sub
sbb
lret
jno
fwait
cwtl
imul
mov
pop
mov
int3
divb
cltd
add
cmp
xchg
test
xor
jmp
rolb
aas
xchg
in
xchg
stos
xlat
mov
das
inc
and
pop
adc
xchg
int3
xor
call
xchg
adc
mov
mov
cmp
push
mov
insb
jno
mov
or
loopne
lahf
mov
push
xor
clc
mov
cmc
push
mov
std
dec
inc
mov
popf
ds
jno
dec
out
mov
sbb
ss
arpl
loope
insb
dec
or
out
rolb
jo
mov
sbb
pop
mov
lret
lea
test
xchg
jle
mull
push
xchg
adc
jl
movsl
insb
xchg
into
loope
pop
scas
int3
fstl
mov
je
fstps
dec
or
mov
fchs
addr16
add
dec
cli
jg
dec
subl
sbb
xchg
movsb
sbb
sub
mov
jno
push
dec
mov
cltd
mov
ljmp
mov
stos
xchg
add
sbb
adc
test
pop
std
fiadds
mov
rcll
push
js
xor
std
pop
ja
call
jb
mov
in
outsl
fnstenv
mov
movl
fmull
flds
not
sbb
sub
or
xor
or
outsb
sub
shlb
cli
mov
movsl
pop
enter
mov
jg
or
or
xchg
xor
arpl
sbb
cmp
das
test
adcl
or
dec
enter
jle
testl
mov
ljmp
iret
lahf
cmp
jbe
lcall
les
test
push
mov
cli
pop
xchg
gs
test
das
rcrl
rol
dec
in
out
hlt
add
sbb
adc
imul
andb
in
out
imul
cmp
shlb
inc
jno
and
aad
push
inc
mov
xor
hlt
fcoms
test
lods
jnp
jo
push
mov
cs
lods
push
xchg
outsl
sbb
cli
jns
test
mov
push
mov
push
data16
jl
dec
push
int3
push
stc
stos
cmpsl
aad
jo
cmp
add
sti
negl
leave
fmull
add
cltd
loop
xchg
imul
rorl
popa
in
std
or
jnp
mov
mov
or
movsl
cmp
dec
push
inc
sbb
out
test
cmp
ss
outsl
mov
inc
xchg
pop
pop
mov
jae
ret
sbb
xchg
mov
sarl
out
orl
imul
fmuls
scas
outsl
in
rolb
inc
add
stc
movsb
xchg
mov
loope
mov
jl
scas
xchg
test
pop
scas
and
mov
dec
iret
adc
pop
lock
add
jg
pop
je
daa
push
outsl
or
xor
push
jge
adc
push
xchg
cmp
jbe
in
push
mov
icebp
mov
nop
push
adc
popa
mov
or
scas
push
push
lcall
repnz
jb
lahf
mov
sbb
push
rolb
mov
ds
jecxz
xor
jb
mul
mov
push
pop
sahf
dec
hlt
mov
enter
xchg
push
xchg
jnp
ja
dec
test
mov
shlb
and
hlt
and
mov
imul
sahf
nop
shl
inc
xchg
arpl
xlat
xor
add
jg
push
fldcw
xchg
je
scas
frstor
jns
pushf
jg
cmp
cmp
add
fcompl
mov
pop
mov
or
popa
fidivs
cmp
xor
movsl
mov
jl
dec
aam
push
jnp
psraw
sbb
out
or
nop
div
faddl
in
pop
cmp
ja
sub
inc
mov
cltd
pop
push
inc
inc
dec
repnz
jae
xor
cmpsl
pop
xor
sub
daa
inc
sbb
ret
mov
les
fwait
popf
mov
fiadds
add
jg
test
cwtl
fadd
imul
xchg
sbb
xchg
pop
push
pop
das
lods
rcll
mov
repz
push
mov
xchg
jge
mov
or
lret
fnsave
cs
jns
insl
xor
mov
addr16
dec
pop
jns
add
fwait
sub
leave
mov
out
aaa
iret
pop
jp
notb
das
dec
dec
loopne
adc
jnp
mov
add
cmp
das
push
clc
cmpsb
loopne
in
clts
pop
mov
movl
ret
push
lret
outsl
in
sahf
pop
aaa
or
dec
push
jle
movb
in
push
mov
add
jecxz
test
add
or
sbb
idivl
push
loope
outsb
hlt
imul
bnd
or
push
loope
mov
popa
mov
fnstenv
test
iret
cld
mov
pop
jle
cld
xchg
repnz
aad
sbb
adc
mov
mov
jbe
shll
mov
jecxz
cld
roll
in
xorb
fistl
lahf
sub
in
enter
mov
mov
xor
hlt
adc
aas
add
fsts
fwait
loope
push
pop
mov
dec
rcr
or
cmpsl
xchg
push
pop
pop
cmp
mov
iret
fcomps
imul
push
and
stos
cs
xor
lret
pop
clc
js
dec
mov
jbe
and
outsb
add
clc
mov
mov
cli
clc
loopne
scas
cld
js
mov
jle
jnp
xchg
push
xlat
mov
loop
xchg
int3
xchg
dec
jo
xchg
adc
imul
cld
nop
jp
scas
sub
stos
add
mov
stc
push
mov
int
fwait
test
pusha
inc
jg
pop
xor
mov
push
xor
jnp
mov
xor
push
hlt
xorb
xor
in
outsb
imul
jmp
mov
mov
inc
cmp
cmp
addr16
or
sub
mov
xor
inc
repz
movsl
dec
rorl
sub
roll
jbe
mov
call
sbbb
ja
mov
dec
jno
lahf
pop
inc
add
mov
and
popf
mov
mov
gs
or
push
sbb
cmp
add
dec
push
in
shrl
fsubrl
cmp
pop
inc
cs
push
and
outsb
and
push
je
xor
mov
lods
loope
sarl
fwait
push
jg
pop
pushf
pop
sbb
jbe
push
mulb
dec
dec
cmp
pop
je
cltd
mov
pop
adc
adc
ss
pop
movsb
lods
mov
jl
fimuls
movsl
enter
lea
jbe
call
imul
ja
mov
mov
xor
imul
jae
leave
lock
add
fsubr
fs
enter
mov
push
mov
pop
inc
lahf
cmc
push
mov
flds
jb
iret
test
mov
inc
aaa
insb
inc
mov
push
mov
lods
ljmp
and
xchg
call
mov
inc
movsl
insb
pusha
bound
imul
mov
cwtl
into
push
mov
sti
push
ljmp
push
or
sub
cltd
enter
mov
mov
in
stos
xchg
shlb
mov
lods
pop
pop
outsb
lods
adcl
scas
mov
jbe
test
lcall
loope
dec
stc
stc
pop
dec
mov
stos
les
xlat
mov
gs
ljmp
mov
rolb
loope
push
xor
xor
xchg
cmp
jnp
in
push
adc
xchg
xor
or
test
jge
out
orb
xchg
iret
sahf
xor
insl
pusha
popa
xchg
mov
xchg
imul
mov
pop
push
cmova
xchg
or
mov
add
push
cmp
push
insb
fmuls
inc
stos
adc
test
push
push
xor
cmp
mov
movsl
sub
iret
aam
mov
xor
inc
and
in
jbe
test
popfw
cmp
loop
cmp
push
mov
and
jnp
fs
sbb
ja
lods
clc
or
jle
or
push
sub
stos
mov
fsts
dec
int3
sub
xchg
call
testl
iret
fists
in
jle
add
xor
add
mov
js
xor
pop
pop
dec
sbb
mov
or
js
or
sbb
sbb
sub
repnz
es
jmp
enter
bound
cltd
pop
cmpsb
mov
push
push
dec
loopne
jecxz
loop
jno
cmp
jo
aam
loope
mov
lret
orb
int
adc
dec
ficomps
push
fwait
cmc
je
pop
sbb
pusha
insl
push
jmp
push
sbb
lods
fmull
and
vcmpps
add
xchg
into
dec
in
dec
lods
dec
das
movsb
add
std
insb
dec
and
movsl
adc
xor
jge
pop
and
mov
seta
aad
dec
daa
mov
lock
test
dec
mov
std
inc
pushf
imull
ficomps
cmpl
in
ffree
roll
lcall
add
pop
lcall
add
adc
pop
cmc
jp
jb
mov
ljmp
imul
inc
jbe
push
aas
imul
cmc
imul
out
dec
jle
jl
fsubl
jo
xchg
push
dec
lea
mov
ljmp
cmp
insb
push
push
dec
mov
inc
adc
mov
and
xor
mov
xorb
mov
sbb
push
mov
dec
push
out
popf
ror
ss
push
xchg
push
aad
fcomip
cld
push
pop
jne
lods
inc
push
adcb
pop
les
jp
addr16
mov
enter
call
insl
lock
dec
popa
lock
and
test
lcall
adc
dec
movsb
push
ja
leave
jae
jecxz
imul
rcrl
lea
out
cld
test
fidivl
subb
adc
mov
ret
repz
xchg
dec
pop
mov
mov
loopne
je
ljmp
lods
adc
lds
es
stos
xchg
lods
xor
fldcw
xchg
jle
aam
sbb
jl
out
int3
repz
mov
shll
lea
repz
xor
inc
xchg
push
adc
mov
sbb
dec
pushf
popf
scas
xchg
loop
ds
fcomip
sub
pusha
ds
mov
leave
into
xchg
out
enter
stc
cltd
je
jae
addr16
fcoml
cli
push
scas
pop
xchg
test
lods
jb
mov
xor
jb
ret
fdiv
stos
pop
push
enter
push
mov
jmp
adc
sub
jns
test
test
xor
sbb
push
xchg
lret
stos
cld
sub
ud0
and
mov
or
push
cmc
faddl
mov
push
add
sar
mov
xchg
sub
cs
insb
fistpl
cltd
fstl
pop
movsl
xchg
mov
jecxz
int
cmp
mov
xchg
inc
dec
jle
fisttps
xchg
cmp
ret
popf
aaa
add
ds
fistps
sub
aad
sti
and
push
lods
jge
ss
mov
ret
adc
push
rcll
jge
lret
sbb
addr16
pop
inc
shrl
adc
fisubrs
testb
mov
scas
cmpl
les
jecxz
mov
loop
dec
add
and
imul
mov
pop
scas
inc
sahf
outsb
mov
add
in
out
lret
popa
fidivs
push
cld
fsubp
add
and
xor
xor
xor
lahf
push
lret
xchg
add
adc
sbb
dec
add
shlb
test
mov
add
div
jnp
lods
imul
sti
xchg
iret
testl
or
scas
notb
jge
mov
popa
sbb
cwtl
in
movsl
sub
ret
xlat
shlb
inc
daa
and
je
and
popa
push
sub
add
mov
sbb
mov
fstpt
pushf
mov
sahf
fbstp
xor
jle
dec
push
data16
xchg
out
pusha
insb
lods
mov
and
ret
mov
or
cmp
fstpt
sub
sbb
xor
pop
cmp
adc
xchg
mov
inc
cmpsb
dec
pusha
inc
fcomps
rcrb
cli
xchg
das
dec
dec
cmpsb
dec
or
and
dec
mov
mov
sub
xchg
sahf
pop
flds
inc
jnp
pop
sti
and
xchg
mov
mov
adc
pop
lock
mov
push
and
push
fsts
cmp
clc
push
push
mov
cmc
aam
push
mov
andl
cltd
xchg
lcall
enter
imulb
cmp
rcl
shl
pop
mov
push
cld
cmp
out
movsl
adc
rol
ljmp
aas
jo
daa
sbb
cmp
dec
ss
and
outsl
mov
lock
xor
sub
push
mov
or
sub
jbe
jg
add
push
inc
bound
cwtl
mov
fmulp
inc
int3
cmpl
call
pushf
rol
in
shlb
jns
imulb
in
mov
mov
add
xchg
jg
sub
sub
notb
mov
jecxz
dec
sbbl
lods
lahf
inc
int
ret
mov
popa
mov
stos
mov
aam
adc
push
mov
loop
jb
int
inc
adc
repnz
xorl
jne
lods
jl
sub
imul
fists
push
flds
loopne
sub
xchg
test
xchg
fildll
out
push
lahf
pop
icebp
mov
inc
icebp
mov
and
push
adc
push
jae
push
stc
mov
dec
sub
addr16
xchg
rorb
push
inc
rclb
pusha
pushf
mov
jo
rcrb
jne
imul
popa
adc
or
jmp
xchg
leave
sub
lds
aas
mov
and
mov
and
bound
pop
mov
cmp
repz
cmp
das
sub
addr16
dec
std
and
into
adc
dec
sbb
jo
or
cwtl
push
mov
cmp
cmp
adc
push
jns
cmpsb
dec
dec
mov
bound
sbb
adc
or
xor
and
dec
test
cmp
mov
ror
push
pop
jmp
mov
movsb
sbb
push
sbb
imul
xor
push
lret
stc
into
push
xor
shll
test
test
ja
movsl
fdivr
dec
cmc
lret
roll
shrl
dec
in
lds
xor
loop
mov
pop
jno
push
sahf
movsl
push
jno
jbe
test
subl
inc
mov
cwtl
adc
jno
adc
sub
sbb
add
cmp
cmp
mov
hlt
mov
daa
or
and
mov
sub
pop
inc
cmp
jp
gs
cmp
sub
inc
fucom
ret
mov
push
or
jo
cs
out
dec
sbbl
pop
xchg
and
add
mov
cmpb
inc
sbb
stc
mov
mov
mov
sub
sbb
ret
gs
icebp
and
stos
rclb
mov
leave
xor
push
or
adc
fistps
popf
and
xchg
mov
inc
lock
cmc
lret
loop
sub
mov
dec
outsb
mov
inc
cmp
cmpsl
sbb
dec
dec
scas
add
xorb
stc
mov
or
aaa
sbb
sbb
mov
loope
cli
out
or
pop
adc
add
lods
imul
popf
mov
pushf
push
xor
test
sub
or
push
lea
mov
sbb
or
jnp
mov
sub
outsl
push
lahf
xorl
fisubs
iret
pop
pop
insl
mov
pop
bound
mov
pop
es
pop
int3
sub
xchg
in
int
sub
and
add
pop
adc
popf
rolb
aad
lds
into
insb
scas
add
push
loope
insb
push
aas
mov
xchg
popa
jg
decb
movsl
mov
push
jnp
xor
push
push
adc
xchg
int
add
movsl
xor
ljmp
jl
push
out
test
or
pop
inc
stos
push
dec
pop
mov
fldcw
inc
sbb
sbb
adc
pop
std
shll
imul
mov
sbb
inc
orl
inc
inc
popf
xchg
hlt
ss
xor
add
arpl
jno
ja
and
arpl
inc
mov
lock
xchg
int3
push
and
pop
xchg
add
xor
ljmp
lcall
push
push
sub
dec
movsl
adc
dec
aas
dec
jmp
push
pop
loope
lea
push
imull
cwtl
mov
pushf
mov
cmpsl
cmp
cmpsl
add
out
cli
xor
or
cmc
ja
xor
dec
inc
aam
dec
imul
cmpsb
lret
push
cmp
fs
mov
movsl
into
gs
pop
pop
nop
mov
fsubr
cmp
into
pop
scas
sub
jmp
jle
testl
leave
out
into
mul
dec
mov
xor
add
sub
adc
stos
cmc
add
mov
stos
pop
inc
cmc
sahf
adc
cmpsl
cmpsb
xchg
imul
mov
out
or
int
icebp
or
xchg
xor
rclb
mov
inc
sahf
jp
fwait
repz
scas
xlat
xchg
add
push
and
fcoml
jle
inc
outsb
jb
out
sub
pop
mov
imul
sbb
add
xor
jne
es
mov
cs
pop
mov
xchg
movsl
ljmp
jno
xchg
xchg
sub
xchg
or
push
add
push
stos
lds
jno
adc
rcll
dec
idivl
add
cmp
mov
xchg
sbb
xor
add
cmpsl
push
enter
insl
fwait
std
pop
mov
dec
aas
enter
outsl
icebp
xor
and
into
dec
jge
cmp
dec
mov
fsubrl
inc
xchg
pop
adc
cmc
xchg
movsb
insb
cmc
and
sub
ja
lret
in
add
pop
cli
mov
and
jecxz
push
mov
xchg
mov
inc
push
push
xor
rclb
lcall
pop
jge
push
ret
jbe
cmp
jecxz
push
gs
mov
cmp
jp
pusha
pop
popl
inc
lahf
pop
jecxz
pop
es
pushf
jb
mov
sub
ret
cmp
imul
push
sub
mov
bound
mov
pop
out
xchg
es
repnz
pusha
dec
add
bound
in
push
pop
clc
test
pop
sub
xor
push
pop
arpl
pop
jp
loop
lret
cltd
dec
lretw
ret
cmp
out
mov
sbb
ja
lds
ret
lret
jp
mov
int
adc
push
daa
sbb
arpl
lahf
or
jl
fld
add
xor
enter
mov
outsb
fdivs
pop
cwtl
daa
push
cwtl
insb
xor
iret
xor
dec
mov
push
pop
xchg
test
jbe
into
loope
push
pop
pop
add
clc
pop
mov
cmp
rorl
add
daa
bound
pop
or
and
mov
mov
lahf
addr16
adc
or
pusha
cmpsl
movl
cmpsl
inc
jbe
inc
outsl
pop
cltd
inc
jno
pop
lock
sarl
insl
cli
inc
jae
repnz
call
push
stos
jle
test
stc
nop
rcrb
fimuls
lea
jg
fidivl
ja
ficompl
lock
jecxz
pushf
das
stos
push
jb
dec
rolb
ret
xor
mov
inc
hlt
dec
xchg
stos
hlt
inc
hlt
and
out
insl
or
jmp
dec
cmp
jae
out
pop
pop
jne
out
adc
addr16
mov
push
mov
iret
fwait
push
fcomps
movsb
jmp
out
push
and
dec
sbb
push
or
mov
mov
divb
cwtl
lds
push
les
sbb
jge
jbe
xchg
jae
test
inc
out
mov
test
pop
mov
popa
stos
push
push
clc
mov
mov
scas
cltd
push
nop
xor
or
adc
add
fs
shrb
adc
cmp
leave
pushf
xor
addr16
adc
mov
cltd
data16
ret
xchg
cmp
adc
fcos
std
clc
mov
jge
dec
repz
jae
push
xor
pop
jl
fidivrs
inc
mov
sub
xor
in
and
dec
popa
int3
cmp
sbb
pop
test
jo
dec
xorl
cmpsl
push
lds
jge
punpckhdq
jp
jmp
mov
jmp
sub
add
not
popf
enter
or
sbb
push
mov
and
mov
jge
pop
cmp
add
pop
cltd
mov
out
mov
mov
cmp
fmull
add
cmp
and
fisttps
pop
iret
movsl
iret
or
pusha
dec
add
out
mov
fists
nop
rclb
inc
mov
mov
test
adc
mov
lret
sub
and
sbbl
jg
fists
push
inc
das
add
mov
aas
add
xchg
sbb
or
pop
insb
faddl
rcl
int3
cmpsl
popa
push
sarl
fstps
test
dec
test
sbb
dec
jne
jb
adc
mov
shrl
into
mov
jbe
jl
inc
mov
adc
dec
add
mov
or
sbb
lret
sbb
sbb
clc
adc
and
sbb
imul
jo
cld
ljmp
push
daa
pop
sbb
ljmp
ja
or
xor
add
mov
enter
loope
scas
mov
loopne
leave
cmpsl
or
imul
push
sbb
jmp
int
cld
cmpsl
sbb
mov
call
sub
ss
xchg
mov
hlt
or
cltd
int3
xor
pop
sbb
jne
in
mov
xchg
shl
adc
jnp
aas
jge
sub
idivb
adc
sti
lcall
inc
outsl
xor
push
mov
xchg
rclb
pop
mov
adc
xor
adc
decb
fcompl
mov
push
or
push
cmp
dec
in
fsubp
dec
mov
out
gs
test
sbb
mov
pop
sbb
aam
iret
jbe
jp
out
ja
dec
jns
adc
cld
test
sbb
leave
adc
bnd
repz
mov
inc
jae
xchg
test
jno
mov
mov
stos
stos
mov
sbb
rcl
pop
xchg
or
rcr
sahf
insl
popa
mov
sti
mov
inc
sbbl
loop
mov
push
insl
mov
push
mov
cmp
pop
mov
and
add
jmp
movsb
lds
std
xor
mov
jno
jae
iret
in
nop
and
movsl
movsl
idivb
jb
jle
pop
test
out
pop
adc
mov
push
jl
ja
push
in
or
dec
lret
and
in
jae
add
insw
repz
lock
adcl
inc
cmp
pusha
dec
push
aaa
inc
pop
push
cmp
dec
orb
cli
adc
enter
mov
rcll
cs
push
test
frstor
gs
inc
xchg
mov
aam
cmp
mov
mov
adc
inc
stos
mov
sbb
sub
sbb
jns
add
push
dec
in
jge
add
dec
mov
fstps
mov
out
mov
sti
mov
jmp
mov
fstpl
bound
ror
inc
and
in
incl
sbb
subb
mov
pushf
mov
ja
mov
push
push
jns
js
mov
lcall
or
mov
mov
adc
jg
mov
rorb
outsb
xchg
test
rolb
and
xor
cli
sbb
xor
and
lcall
push
outsb
mov
pop
outsb
pop
cwtl
loop
test
inc
pop
push
in
push
mov
fiadds
sub
mov
inc
sbb
lahf
nop
pop
imul
adc
rorb
and
arpl
dec
movsl
cld
aam
push
push
lods
jnp
inc
pop
jbe
shl
test
fmuls
xor
jne
gs
std
inc
rcrb
fsubl
inc
xor
int3
push
fsubrp
loopne
adc
mov
cmp
sbb
sbb
adc
mov
cmpsl
lahf
in
je
mov
pop
ret
cmpl
dec
enter
mov
sbb
cmpsb
adc
inc
push
mov
sbb
ret
popl
repnz
add
push
cmp
push
mov
dec
popa
movsb
lret
cli
inc
pop
pop
jo
mov
loope
outsl
test
out
fistl
jg
add
add
pusha
sbb
ljmp
xlat
fsqrt
rorb
pop
xorb
test
jle
dec
sub
jae
hlt
inc
fsubrs
sbb
imul
jle
jge
mov
inc
adcl
js
test
aaa
aas
xor
jno
or
xchg
xor
mov
daa
ljmp
dec
xor
mov
pushf
movsb
cmp
std
mov
mov
sub
scas
scas
pushf
ds
inc
sbb
adc
xlat
sarb
aas
sub
xor
jnp
and
ret
adc
cmp
fldl
xchg
sbb
rol
push
push
pop
mov
js
stos
bound
pop
mov
sbb
pop
movsl
jmp
adc
xor
cmc
push
sub
mov
dec
cmp
mov
loop
cmp
stos
mov
pop
jmp
pushf
pop
adc
cmp
xchg
dec
into
addb
and
int3
push
pusha
push
cmp
sbb
adc
or
jmp
xchg
push
xchg
in
adc
add
mov
les
mov
aad
add
cmpb
loopne
sahf
test
inc
pop
aas
inc
outsl
mov
out
sbb
xchg
pop
fwait
icebp
rcr
inc
xor
jae
jo
cmc
dec
cmpsb
mov
lods
fcoml
cmc
ror
inc
pop
in
xchg
roll
fdivr
push
cmpsb
add
lcall
push
insb
cmp
add
std
inc
jne
jp
and
insl
adc
stc
testl
fs
xchg
cmpsl
cld
sub
or
and
adc
arpl
lock
cli
rorb
jg
sbb
lods
in
fisubs
ret
fucomi
or
jecxz
int
xor
add
sahf
push
and
stos
xor
mov
pop
iret
mov
fucomi
shrb
insl
and
cs
out
fcmovb
ret
push
sar
add
ljmp
mov
cmp
shrl
mov
cmp
dec
sub
popf
push
add
cmp
mov
jnp
jmp
out
imul
loopne
mov
fstpl
inc
shrl
pop
cltd
shlb
push
sbb
ret
lds
pop
xchg
inc
sahf
mov
jmp
cmp
jmp
xor
aas
dec
shll
ret
cmp
pop
jns
cld
xor
dec
out
popf
insb
pop
fsub
mov
inc
xlat
jp
and
cltd
push
sahf
adc
test
mov
or
inc
test
adcb
inc
mov
call
inc
lcall
sbb
add
cmc
inc
ss
inc
leave
mov
sub
jg
ds
mov
cli
inc
ret
int
dec
push
sub
shlb
xor
mov
ret
mov
cmpsb
in
aaa
mov
cmp
idivb
sarl
inc
insl
mov
pop
pusha
fstps
orl
cwtl
or
fistl
ret
jnp
adc
jb
push
jno
inc
cli
rcl
fsubs
lret
inc
pusha
rorb
iret
cmpb
adc
mov
xor
pop
mov
jmp
sbb
outsl
jle
incl
out
inc
sbb
xchg
shll
pop
int
cmp
pop
xor
xchg
push
pop
add
inc
cmp
adc
fsub
stos
flds
xlat
cld
adc
mov
movb
stos
in
sbb
jbe
and
fwait
out
rclb
inc
lahf
shlb
in
aas
mov
mov
shrl
push
pop
pop
pusha
mov
clc
and
xchg
pop
iret
dec
mov
mov
jle
imul
rorb
adc
push
adc
mov
repz
cmp
push
xor
rcll
mov
dec
iret
in
cmp
rolb
popf
push
push
testl
push
mov
jl
popf
int3
sbb
push
aaa
leave
call
in
addl
insb
aaa
mov
fstl
jge
mov
loopne
rcll
add
jg
sahf
push
push
lcall
das
out
dec
pop
lcall
push
cmp
sbb
add
leave
and
scas
das
mov
mov
dec
add
fcomps
popl
pop
xchg
mov
xchg
ret
repz
lods
or
negl
pop
cmp
add
jno
sbb
jg
mov
in
inc
out
clc
sub
daa
jnp
cmp
cmc
mov
addl
xchg
mov
and
lock
pop
cltd
mov
mov
dec
rorl
hlt
fwait
repz
loop
inc
cmp
mov
fmull
inc
lods
jno
jno
ss
cwtl
test
or
jle
xchg
out
jg
xchg
mov
push
sub
mov
and
xchg
push
aad
scas
cmp
lock
mov
into
xchg
push
mov
lret
xor
aaa
jg
ror
subl
aam
mov
mov
imul
shl
xlat
rcr
fs
pusha
imul
sub
or
jecxz
jp
mov
push
jne
fsub
inc
dec
push
mov
in
data16
inc
mov
mov
bound
mov
sti
call
iret
mov
jge
fldcw
sbb
cmpsl
sub
movsl
enter
int
mov
leave
pop
and
jnp
dec
adc
mov
and
or
adc
cltd
and
sbb
orl
xor
push
aad
xor
pop
mov
jecxz
dec
sbb
jae
inc
add
xlat
cs
push
out
pop
dec
shrl
mov
pop
cwtl
push
add
and
lea
orl
pop
dec
jge
cmp
mov
pusha
imull
jae
ljmp
dec
scas
das
pop
xlat
or
xchg
sub
xchg
mov
lods
xchg
cli
and
insb
aas
mov
add
or
adc
dec
and
pop
add
cmpsb
pop
stc
sub
lret
adc
out
sarb
sbb
daa
jge
insb
mov
ret
fs
pop
out
sbb
push
push
lret
in
push
xchg
pop
addl
call
or
push
mov
xchg
fsubl
enter
sbb
cs
mov
inc
sbb
loopne
jg
mov
xor
std
fists
in
or
sub
dec
add
lahf
je
aaa
repnz
jae
out
outsb
fsub
or
cmp
jno
movsl
popa
dec
cmp
inc
in
jmp
jne
xor
adc
jae
lret
dec
inc
add
pop
mov
mov
popf
subb
sbb
inc
sahf
popa
or
dec
std
rol
bound
bound
jbe
cmc
jmp
mov
xor
cld
je
xor
cmp
out
xor
ds
fs
jne
xchg
ljmp
movsl
loop
test
cmpsl
loopne
test
dec
fucomi
and
das
gs
xchg
popa
mov
jle
fwait
inc
into
ss
adc
mov
adcb
cmp
mov
sahf
repz
loop
lods
push
xchg
fldt
sub
adc
test
inc
fcmovne
ljmp
jne
xlat
shl
mov
mov
lea
xor
fsin
xchg
xor
jae
mov
add
in
xchg
sub
decb
dec
fldcw
sbb
and
sbbl
mov
movsb
sahf
pop
imul
mov
jns
ja
and
popf
mov
xchg
pop
loopne
dec
sub
or
ret
clc
enter
dec
cltd
push
jns
add
push
mov
and
mov
sub
sbb
or
mov
fiaddl
dec
out
repz
adc
jno
subb
lock
inc
bound
popa
fisttpll
jecxz
les
adc
mov
mov
cmp
add
cli
ja
bound
xchg
roll
cmp
dec
es
add
jge
js
push
and
mov
pop
jo
lea
push
pushf
pop
stos
xor
mov
test
out
and
loope
adc
cmp
mov
inc
loop
int
add
fnsave
ja
rep
fistpll
dec
fs
pop
dec
lcall
dec
dec
dec
je
ljmp
or
bound
inc
push
aas
push
lock
dec
add
push
fiaddl
mov
cmc
scas
leave
addr16
mov
mov
mov
add
ja
or
mov
movd
loopne
mov
or
push
xchg
adc
and
sbb
mov
inc
pop
mov
sbb
lock
test
lahf
cs
ret
lea
int3
pop
je
add
mov
push
rclb
movsl
adc
inc
mov
arpl
push
outsl
and
ja
imul
test
or
xor
out
mov
clc
pop
hlt
dec
rclb
xlat
sti
es
mov
mov
movsl
jo
mov
fwait
jle
mov
lret
aam
movsl
inc
std
mov
sub
inc
cli
dec
dec
xchg
icebp
call
xchg
adc
sbb
jg
insb
les
lret
push
enter
push
pmuludq
loope
cmp
js
aaa
push
rcrb
outsl
leave
ss
pop
xlat
add
shrl
xchg
push
aaa
test
jae
xor
and
jns
jno
test
or
adc
xchg
push
xchg
lret
mov
cwtl
add
pop
pop
xchg
jbe
add
add
ja
xchg
sub
dec
xchg
cmp
jbe
ret
mov
lea
pushl
addl
pop
jmp
jmp
cmp
dec
or
pushl
pop
add
pop
mov
mov
inc
jmp
cmpl
jle
xchg
not
sub
jbe
sets
nop
sub
lea
sbb
idiv
sub
sub
sbb
push
imul
sbb
pop
lea
pushl
add
pop
ret
dec
xchg
decl
ljmp
lea
push
add
call
sub
ret
push
call
incl
call
push
call
call
jmp
