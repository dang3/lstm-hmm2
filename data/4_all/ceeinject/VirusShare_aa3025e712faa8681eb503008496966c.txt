call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lret
pop
ljmp
xor
push
mov
dec
mov
jp
or
sbb
out
cmp
lret
pop
ljmp
dec
stos
outsl
mov
lahf
push
je
or
cmp
rcll
ret
push
repnz
loop
xchg
push
addb
mov
mov
or
insl
nop
mov
dec
mov
xchg
nop
int3
push
mov
mov
repnz
xchg
and
outsl
mov
nop
das
or
jae
xchg
incl
sub
lds
xor
sbb
pusha
dec
les
je
pop
jp
sbb
or
data16
cmp
and
fisubrs
fwait
dec
push
sbb
popa
pop
push
test
cmc
repz
adc
out
lcall
dec
jne
subb
addr16
pop
dec
jae
pusha
imul
repnz
iret
aad
sub
lock
xlat
add
cli
pop
outsb
mov
mov
xlat
cmc
pop
push
sub
out
aas
sub
cmp
add
ret
pminsw
cli
aas
popf
dec
mov
outsl
mov
xchg
arpl
xor
cmp
cmpsb
movswl
dec
mov
dec
cld
ds
mov
lahf
sbb
jg
pop
adcb
mov
pop
mov
dec
lcall
sti
aas
cli
push
cmp
pop
mov
scas
movzbl
xchg
jp
jl
pop
stos
outsl
mov
lahf
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
pop
stos
outsl
mov
lahf
push
jp
or
sbb
sub
cmp
lret
or
test
cmp
test
jg
imul
arpl
ds
sbb
mov
stos
mov
cmpsb
adc
inc
imul
daa
jp
in
xchg
sti
daa
sub
lret
ficoms
xchg
mov
xor
push
fs
jl
sbb
scas
adc
lea
dec
mov
add
cmpl
scas
popf
pop
pop
xor
mov
inc
jb
enter
sahf
push
je
xor
cmp
daa
aad
cmp
mov
xchg
xorl
pusha
into
add
mov
and
pusha
sbb
adc
adc
in
repz
cmp
jne
leave
pop
jl
jae
fwait
jbe
lock
dec
icebp
cmp
iret
gs
jmp
mov
xlat
add
lds
mov
jns
jp
push
outsl
inc
xor
popa
cmc
int3
addr16
lods
fisubrl
push
or
or
stos
roll
sbb
cmp
cld
cltd
adc
and
cwtl
aad
fists
mov
xchg
ret
dec
nop
cltd
lds
jge
shlb
sbb
popa
xor
adc
sarl
lods
in
add
subb
inc
or
jae
jae
pop
or
call
xor
xchg
sahf
inc
test
or
enter
dec
mov
and
adc
adcl
jo
out
jbe
loope
xchg
sbb
sub
adc
divl
loop
leave
leave
and
mov
or
mov
and
cltd
or
std
dec
icebp
or
add
je
inc
gs
push
enter
xor
jae
jno
clc
mov
or
mov
adc
pop
or
das
pusha
mov
pop
das
jle
pop
mov
pusha
addb
jb
jns
mov
roll
dec
add
and
rorb
enter
lock
xchg
mov
xchg
xchg
push
insl
insb
test
and
in
xchg
dec
fstps
scas
mul
fstpt
and
mov
dec
movsb
jge
stos
mov
insl
outsb
out
fwait
lods
and
add
pop
aas
insl
mov
inc
sbb
pop
mov
dec
push
cmpsl
jns
mov
mov
push
ret
adc
jle
std
xchg
aam
jmp
xor
testl
test
mov
pop
xor
dec
outsb
dec
icebp
imul
shlb
sub
sbb
jo
xor
xor
pop
add
inc
jb
xchg
mov
add
or
dec
scas
sbb
stc
gs
sahf
lret
inc
sti
lock
leave
push
js
and
jle
andl
pushf
popf
aam
test
mov
das
sbb
mov
sbb
movsl
sub
pop
rclb
push
lret
out
xor
dec
repz
mov
andb
fnsave
lock
jnp
fdivr
movb
ds
add
pop
xorb
out
divb
neg
push
pusha
addr16
lcall
fcoml
cmp
mov
dec
loop
mov
mov
sbb
nop
xchg
outsb
xchg
insl
test
lds
popa
mov
adc
pop
xlat
jle
orl
jge
stc
popa
cwtl
sbb
push
test
sub
aad
push
pop
out
test
test
fisttpll
add
aad
and
inc
cmp
sub
fdivs
add
dec
lods
imul
cmp
pop
adc
ficoml
mov
dec
arpl
push
ljmp
shlb
popa
fsub
loopne
mov
ret
int
sbb
cs
xorl
leave
cltd
lods
fwait
loopne
popf
sub
jbe
xlat
inc
or
jae
mov
in
pusha
cli
call
and
push
into
pop
sub
xor
sti
adc
push
loopne
xchg
mov
add
dec
out
popf
mov
cmc
sahf
jae
jns
dec
cli
enter
mov
cmp
xor
hlt
mov
mov
call
inc
icebp
jb
aas
pop
iret
sahf
push
fdivrl
lret
mov
lods
stos
into
pop
adcl
stc
repz
mov
xchg
mov
push
cwtl
mov
ficoml
push
xchg
sub
lock
push
push
add
cmp
dec
cs
stos
fcoms
js
or
frstor
jb
cmp
mov
inc
xchg
mov
mov
es
mov
in
push
add
sbb
sti
push
adc
push
xor
jno
rorb
popa
xor
clc
or
test
mov
jp
jns
inc
es
test
lret
xor
daa
jmp
outsb
push
inc
sahf
jno
ljmp
repz
jae
or
enter
sbb
mov
pop
pushf
fidivl
shll
adc
mov
icebp
das
sub
mov
add
or
add
ja
sarl
push
jb
sub
dec
int3
in
push
mov
bound
subl
rcr
sbb
xchg
sbb
push
jo
add
sbb
cwtl
loope
push
mov
inc
cmp
mov
mov
or
mov
jns
and
mov
push
xchg
cmp
int
in
pop
push
ret
in
lcall
jno
xor
mov
mov
xchg
jbe
xor
jne
adc
fidivs
add
sub
lock
mov
push
inc
dec
mov
dec
inc
mov
inc
mov
sti
call
fisubrs
jae
inc
fstps
jg
jg
mov
lret
outsb
sbb
clc
xor
outsb
push
inc
imul
test
in
call
dec
mull
mov
in
adc
out
rolb
ljmp
push
popf
mov
inc
adc
sbb
aad
add
inc
xlat
add
outsb
mov
movsb
inc
push
adc
sub
push
jns
call
pop
pop
xor
mov
ja
lea
push
ljmp
xor
inc
and
pop
jb
xchg
pop
rolb
out
cmpsl
mov
lock
push
stos
sarb
fucomi
out
lret
push
fstp
es
movsb
lahf
add
push
movsl
jmp
sub
inc
mov
mov
pop
clc
test
pop
inc
cmp
mov
sti
inc
sub
popf
mov
das
movsl
ja
fcmove
sbb
sbb
sub
adc
sub
mov
mov
jg
shll
cmp
fmul
sbbb
mov
fldcw
mov
cs
stos
adc
ret
into
mov
xor
mov
or
addr16
and
das
xchg
jns
psubusb
cmp
sbb
jg
int3
popw
xor
cmp
cld
test
and
out
or
mov
in
imul
and
sbb
xchg
icebp
or
into
dec
addr16
pop
push
test
mov
push
stos
adcl
inc
push
jne
aaa
ja
shlb
cwtl
in
bound
adc
xchg
sbb
mov
std
inc
inc
push
out
std
sub
shll
jne
outsl
test
and
jg
xchg
insl
test
mov
ss
out
mov
fiadds
cmc
mov
jbe
sub
lcall
in
push
xor
dec
hlt
ds
callw
push
cwtl
xlat
sub
mov
fnstsw
xor
leave
int3
adc
mov
into
mov
fsubrs
nop
mov
rcrl
mov
shlb
or
jne
pop
test
dec
lock
popf
sti
icebp
sbbl
pusha
dec
inc
enter
sub
test
fcoms
ret
cmp
sub
rcrb
push
mov
and
xor
adc
dec
js
dec
push
xchg
inc
mov
jno
sbb
xchg
sub
xorl
popa
lods
stos
sahf
sbb
push
sbb
jge
lahf
lods
sub
pusha
and
icebp
add
stc
xor
test
cwtl
mov
sbb
xchg
cwtl
xchg
dec
lods
sub
mov
incl
mov
loop
pop
fwait
pop
dec
xchg
mov
leave
xchg
out
mov
sbb
mov
sub
sub
test
push
push
mov
sbbb
in
dec
mov
aam
sti
cld
jae
out
repz
mov
jge
jge
lret
mov
jmp
aad
or
and
mov
rorb
dec
popa
mov
call
loopne
test
out
call
adc
ficoml
mov
in
movsb
popa
push
stos
out
jns
sub
les
adcb
xchg
push
push
or
xor
movsl
and
je
fs
mov
enter
mov
cmp
pop
mov
sbb
int3
iret
sti
je
inc
arpl
test
and
nop
push
int3
pop
pusha
outsl
dec
lcall
das
ds
sub
imul
mov
push
das
jbe
mov
mov
xchg
shrb
std
mov
bnd
ret
push
xor
repz
aaa
sub
addl
mov
jmp
xor
pop
push
jge
bnd
test
cmpsl
mov
rcrb
icebp
fdivrp
cmp
jno
mov
sub
adc
mov
test
sbb
xchg
add
add
xor
mov
xchg
or
insl
mov
cmp
cli
or
test
ss
mov
mulb
jns
repnz
loope
stos
jne
jo
mov
cmpsl
dec
in
sbb
mov
nop
nop
mov
push
jp
dec
mov
imul
mov
pop
add
test
inc
jg
xor
inc
mov
sti
or
mov
xchg
and
ffree
outsb
xor
sbbl
int
pop
dec
scas
xorb
inc
and
out
push
mov
sahf
repz
mov
inc
fwait
sbb
or
mov
mov
mov
add
lcall
sub
shrl
push
stc
dec
imul
mov
aaa
cld
jnp
cmp
imul
mov
shr
cs
mov
popf
ret
pop
inc
xchg
cmp
pop
pop
pushf
hlt
aas
push
mov
push
loopne
addr16
mov
es
mov
aad
and
sub
pop
leave
xor
mov
push
pop
pop
ror
sub
adc
push
arpl
sbb
jmp
lcall
push
sub
lods
adc
cmp
sbb
negl
and
mov
xorl
loop
inc
fists
clc
mov
leave
pop
gs
push
xchg
xchg
fistpl
les
icebp
popa
xchg
stos
arpl
and
mov
or
mov
cmp
cli
cmp
mov
stos
jno
pop
scas
fstpl
int
inc
mov
popa
inc
adc
lods
mov
leave
je
push
cmpb
push
fdivrl
bound
aas
dec
pop
jne
arpl
test
jle
mov
loope
cld
mov
cmp
or
idivb
mov
shl
cld
jecxz
add
mov
push
adcl
xchg
lcall
bound
lret
nop
jns
and
loope
jb
push
mov
xor
loop
popf
stos
dec
mov
xlat
shrl
gs
adc
push
push
stos
dec
mov
push
pop
cs
stos
cmpsb
inc
adc
fldenv
mov
jge
cmpsb
push
in
push
lock
dec
scas
jle
in
sbb
mov
push
popa
mov
insb
pop
and
xchg
add
gs
pop
dec
cmp
out
stos
movsb
xor
cmp
bound
mov
cmp
xchg
rcll
jle
fs
cmp
bound
push
jno
shll
dec
rep
xlat
inc
xor
andl
fdivr
mov
jne
outsl
imul
loop
jnp
pop
cmp
insl
arpl
jle
or
add
push
push
sbb
lret
add
push
cmp
aas
sub
fisttps
jno
dec
push
jb
xchg
jbe
repz
push
dec
cmp
add
push
mov
loop
out
pop
nop
fstps
jmp
cltd
sbb
inc
ror
adc
mov
xor
stos
ret
jns
sub
ljmp
jno
inc
lock
out
das
xor
in
js
clc
sbb
xchg
push
fs
sub
into
fimuls
scas
mov
adc
lea
mov
jmp
push
dec
mov
andl
mov
addl
pop
xor
sub
scas
dec
pusha
sub
cltd
dec
mov
adc
stos
in
inc
enter
fs
fldenv
mov
jge
ja
std
sti
lea
lahf
inc
xchg
loop
shll
dec
out
dec
aas
dec
lock
mov
add
out
push
scas
jbe
mov
pusha
or
ret
or
mov
and
mov
mov
ret
and
testl
mov
orl
fbstp
mov
sbb
imul
je
mov
xor
stos
loope
ficoml
or
pop
jnp
popf
stos
scas
lock
and
add
out
sbb
xor
popf
rolb
jp
sub
pop
fidivs
jbe
sbb
sub
jle
push
add
mov
push
inc
sbb
leave
cmp
sahf
adc
or
adc
js
mov
insb
hlt
inc
and
cs
outsl
decb
dec
out
jmp
mov
stc
mov
cwtl
out
into
ret
mov
lock
mov
js
pop
jbe
mov
dec
test
jmp
dec
cmp
cmp
sbb
mov
lods
insb
andb
loopne
jno
mov
ret
dec
call
xchg
movsl
push
and
xor
loope
dec
cmc
cld
adc
bnd
insl
fcompl
shrl
pop
or
lock
mov
xchg
filds
notb
imul
push
cld
and
ds
movsl
test
js
lret
add
or
arpl
xchg
jnp
xor
mov
bound
or
mov
bound
clc
mov
xor
gs
push
adc
sti
sub
jns
mov
hlt
mov
dec
into
pop
xchg
sbb
mov
or
xor
loopne
stos
cmp
shrl
out
aas
fwait
adc
out
mov
add
in
jb
jmp
mov
dec
pusha
and
mov
xchg
xor
sbb
adc
pop
and
lcall
out
ficomps
loope
jge
or
fmull
add
mov
fistl
dec
xor
bswap
andb
xor
add
call
mov
pop
push
iret
int
outsb
loop
cmp
cmp
in
inc
out
outsl
pop
outsb
lock
dec
ror
call
mov
jle
mov
cs
adc
imul
or
fdiv
adc
lea
shlb
mov
xor
fadds
xor
call
xchg
ficoms
test
add
adc
pop
push
out
jecxz
repnz
push
mov
mov
jmp
add
test
outsb
or
jb
pop
adc
pusha
scas
data16
int
lret
lock
mov
imul
in
dec
adc
jbe
push
and
aad
inc
push
jl
int3
mov
cmp
daa
dec
mov
push
sub
scas
inc
lcall
jecxz
gs
and
lods
add
cmp
aas
mov
sub
xchg
movsb
addr16
test
xor
aas
adc
push
cwtl
xchg
rcl
insl
adc
gs
xor
cltd
adc
cli
add
adc
enter
jae
push
mov
nop
mov
icebp
jg
pop
jns
cwtl
xor
int3
data16
push
adc
xor
inc
or
inc
insl
movsb
xor
mov
mov
dec
pushf
cmp
out
in
mov
push
adc
lds
adc
pop
or
push
push
dec
repnz
sbb
iret
xor
sbb
jecxz
ret
lea
imul
jne
pop
push
push
ljmp
in
aam
repnz
ds
inc
outsl
pop
mov
push
js
mov
test
pusha
push
jno
jp
jle
inc
mov
int
out
pop
fsubl
stc
inc
mov
add
mov
jle
cld
sub
push
jl
and
xlat
mov
lock
dec
cmp
dec
dec
cmp
mov
pop
andl
test
push
mov
js
adc
and
jb,pn
fs
fwait
adc
fsub
repnz
mov
pop
jns
dec
loop
addr16
je
out
stos
testb
es
push
shrl
pop
mov
ljmp
pushl
into
mov
adc
inc
cmp
cmp
lret
or
aaa
hlt
sarb
lea
xchg
rcrb
sbb
dec
int
jge
adc
loope
add
repz
lea
pop
pop
push
sub
fs
int
dec
in
or
mov
aad
loope
mov
cli
pushf
dec
jbe
mov
iret
popf
mov
adc
dec
sbb
ret
mov
lret
out
sar
test
sub
cltd
out
dec
and
ret
jnp,pt
or
or
test
sbb
ret
xchg
outsb
inc
std
aam
jmp
push
les
sub
and
adc
into
insl
imul
mov
rcrb
xchg
or
out
jp
push
nop
add
notl
mov
push
pop
in
out
inc
dec
aam
addr16
lret
mov
adc
lret
sti
jo
or
pop
call
mov
xor
cmpl
xchg
arpl
sbb
push
movsl
mov
test
aaa
das
stos
insb
push
push
js
adc
pop
pop
and
sti
in
jmp
movl
int
iret
imul
jmp
enter
dec
cmpb
xlat
sbbb
int3
sbb
xchg
fistpll
xor
sarl
inc
popa
std
mov
inc
mov
nop
repz
xchg
mov
cwtl
add
or
xor
and
arpl
and
fisttpl
mov
mov
push
repz
fisttpll
movsb
inc
insb
xchg
out
frstor
mov
ja
sbb
push
int3
imul
stos
sar
mov
jge
adc
stos
add
xorl
pushf
push
aaa
inc
sub
sti
rolb
mov
push
inc
and
mov
fsubrl
xchg
jno
xchg
push
ja
adc
shll
aaa
sbb
repz
mov
cmp
inc
add
lsl
push
dec
fisubs
push
outsl
add
or
pop
sahf
int
inc
inc
xor
sbb
sub
js
dec
sbb
mov
fbstp
enter
mov
mov
lds
cli
in
out
outsb
mov
fs
stc
jb
push
pop
mov
cwtl
insb
mov
inc
mov
movsb
push
es
inc
icebp
lcall
mov
repz
pop
cli
xlat
ss
fs
mov
pop
sbb
jb
testl
dec
sub
imul
lcall
add
popa
sub
pop
lret
ds
andl
pop
jno
or
outsb
jno
jle
aad
aam
jle
mov
leave
lret
mov
inc
mov
sarb
push
insl
jle
insb
pop
ljmp
sbb
mov
mov
or
aad
cmp
dec
in
movsl
add
clc
add
mov
test
lahf
movsb
lcall
aas
xor
sub
fwait
movsb
adc
loop
mov
in
js
push
xchg
rclb
cmp
pop
pop
jae
das
adc
jnp
xlat
stc
xchg
mov
test
cld
mov
fisubs
insl
cltd
mov
adc
imulb
loope
aas
and
jno
and
out
or
sub
lahf
inc
or
mov
or
insl
pop
sbb
clc
int3
mov
mov
fwait
jl
pusha
shl
push
cs
xchg
movsl
mov
xor
or
or
clc
sbb
push
add
inc
xlat
outsl
push
jl
imul
ret
cs
xchg
mov
outsl
and
push
movsb
sbb
inc
in
ret
ss
adc
sub
xor
xlat
add
mov
sub
cmp
mov
pop
xchg
fcomps
sub
test
imul
xchg
mov
xchg
ret
lea
cmp
arpl
add
stos
dec
fs
push
xchg
call
fisubrl
sbb
lahf
mov
xchg
mov
cs
sbb
jle
stc
cmpsb
mov
hlt
mov
int
pusha
dec
clc
jbe
dec
jge
pop
and
inc
push
jmp
dec
lret
mov
loopne
cli
aas
mov
pop
stos
outsl
mov
lahf
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
pop
stos
outsl
mov
lahf
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
pop
stos
outsl
mov
lahf
push
jp
or
sbb
sub
cmp
lret
sbb
sub
aas
mov
pop
sub
mov
shrb
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
mov
not
movb
sub
cmp
dec
jbe
jecxz
push
imul
xchg
mov
out
stc
or
sbb
push
cmp
or
imul
mov
cmpsb
cmp
mov
insl
sahf
cmp
inc
jb
push
and
sub
cmp
mov
stc
test
xor
add
dec
test
jbe,pn
mov
or
pop
in
insl
pop
jge
gs
es
cmp
out
pop
sbb
xchg
fisubrs
lods
pop
lds
imul
fdivl
jnp
aaa
loope
lret
lret
sbb
cmp
cmp
pop
ja
cmpsb
mov
mov
push
xchg
neg
out
pop
stc
cmp
in
sbb
jmp
pop
cltd
push
push
xchg
pop
mov
and
xor
ret
jb
sub
lcall
pop
lcall
add
test
inc
jg
xorl
push
mov
sbb
pop
les
mov
shlb
mov
out
pop
iret
andl
push
or
add
pop
push
jns
loopne
jmp
shr
lcall
or
push
dec
jle
inc
cmp
aaa
adc
les
fdiv
mov
mov
dec
push
sub
imul
xor
push
in
cmc
cmc
enter
lcall
or
sbb
sub
cmp
dec
jbe
imul
mov
cmpsb
test
neg
out
stc
or
sbb
sub
cmp
dec
jbe
imul
mov
out
imul
push
cmp
pop
xchg
ljmp
test
lea
mov
xlat
mov
push
sti
dec
add
cmc
testl
jecxz
daa
dec
cmpl
and
cmp
les
rorl
test
inc
mov
pop
sub
adc
mov
adc
jle
pushf
jmp
fmulp
mov
lahf
or
cli
push
sahf
and
stc
mov
imul
pop
in
push
jnp
into
sahf
xor
jnp
pop
or
mov
xchg
test
fiaddl
or
iret
inc
jbe
out
and
sbb
sub
pop
fadds
outsb
jg
ret
icebp
sub
xchg
jne
test
fnstsw
or
pop
movsl
cmp
stc
cwtl
lods
ror
rolb
int
xor
pusha
aad
or
shrb
inc
and
orl
mov
or
or
sub
pop
hlt
das
sahf
pop
mov
popa
imul
add
inc
addr16
push
sub
inc
mov
popf
sbb
inc
dec
push
sbbl
dec
adc
push
mov
inc
pusha
inc
add
cmp
out
test
outsl
mov
jns
push
data16
insl
push
and
lock
dec
mov
mov
pop
push
test
or
xor
fs
dec
pop
add
push
push
cmp
mov
les
xor
negl
mov
mov
in
iret
xlat
cld
adc
rcrl
add
pushf
sbb
ret
cmpsl
std
and
mov
js
mov
xor
pop
mov
daa
dec
cmp
pop
fnstsw
mov
mov
mov
lcall
mov
or
or
fisubl
pushf
jp
lods
push
repnz
jne
arpl
mov
or
mov
push
lods
cs
push
fsub
jp
adc
cmp
jecxz
addl
xor
adc
repnz
pop
pushf
pop
ljmp
xchg
ficompl
pop
fucomip
outsl
ja
add
in
push
push
or
sar
fistl
mov
dec
sub
rcl
sub
mov
sbb
popf
mov
mov
divl
insb
call
inc
out
pop
push
mov
popa
movsb
shrb
inc
movsl
mov
in
and
fstp
out
push
mov
adc
int3
les
out
xchg
jb
data16
scas
cmp
mov
rcrb
add
mov
or
aad
fcoml
mov
scas
dec
rdtsc
clc
jl
xchg
xchg
mov
push
shlb
mov
pop
pop
ja
and
jae
sbb
ljmp
adc
idivb
ss
mov
in
sbb
pop
jns
dec
jnp
cmp
inc
mov
jge
lret
ja
jp
jcxz
or
movsb
jmp
ja
xchg
lods
dec
inc
mov
dec
and
cmp
xlat
lret
adc
mov
mov
xor
rol
mov
test
lcall
add
push
sbb
jle
outsl
pop
push
push
test
mov
sub
mov
cmc
push
jl
cmpsl
cmp
xor
or
stc
mov
pop
jne
fistpl
int
insb
in
ret
pop
repnz
inc
mov
fsubp
xchg
mov
in
hlt
cwtl
jns
push
add
adc
inc
mov
mov
xchg
in
adc
pop
insb
pusha
outsb
add
cmpb
mov
movsl
push
out
mov
in
xchg
jmp
jo
leave
pop
cmpsb
sub
sub
test
jl
sarl
je
xor
mov
adc
sbb
shl
in
faddl
mov
lcall
sub
xor
pusha
adc
mov
out
and
scas
jo
movsl
and
popf
xor
adc
and
inc
divl
dec
xor
data16
daa
scas
push
jg
jge
xor
dec
dec
lret
lret
stos
push
xchg
add
jecxz
popf
out
mov
das
ror
sbb
mov
das
xchg
xor
sub
fcmovnbe
xchg
adc
inc
addb
incl
outsl
mov
out
mov
sarl
fwait
icebp
mov
sbb
and
and
imul
pop
not
repz
lcall
adc
push
jne
push
push
xchg
xchg
mov
fstl
stos
fnstsw
shll
mov
inc
iret
dec
hlt
dec
add
jno
jno
lods
hlt
lock
dec
jnp
mov
or
mov
in
cmp
fs
push
jbe
ficomps
lcall
or
lods
mov
dec
cmp
jne
push
sub
test
add
pop
push
cmp
add
cld
sub
ret
mov
test
and
loope
jnp
xchg
pop
cld
jp
dec
fcmovbe
clc
mov
or
pop
out
pop
dec
adc
fs
sahf
mov
dec
xor
scas
aas
pop
pushf
cmpsl
push
addr16
jmp
lea
mov
fwait
les
arpl
lds
sub
stc
loope
int
and
sbb
or
or
jecxz
mov
in
push
out
test
jle
mov
leave
les
xor
ror
imul
fstpt
test
inc
ror
mov
scas
jecxz
adc
xchg
jae
mov
in
jp
mov
arpl
cli
std
cmpsb
stos
loop
int
lock
jmp
ss
sbb
or
in
bound
mov
jae
pop
xlat
jbe
xchg
fdivl
mov
sub
fwait
jbe
pop
lea
pop
fwait
aad
jbe
xor
cmp
addb
sub
gs
movsl
lcall
test
outsl
dec
add
jmp
jecxz
fs
xchg
outsl
sub
cmpsb
and
or
sub
push
sub
imul
insl
push
mov
enter
mov
fstpl
adc
or
lret
je
or
iret
and
pop
pop
sbb
mov
fisubs
pop
sub
pusha
push
or
sti
push
repnz
mov
cmp
jl
inc
mov
jno
mov
push
fistps
adc
inc
cli
subb
in
stos
pop
cltd
mov
push
idivb
jne
sbb
sbb
xor
lods
or
outsl
cmp
cmpsl
and
repz
dec
in
xchg
and
xor
sbb
xchg
and
lret
inc
sub
cli
xchg
jno
data16
je
test
sbb
lea
lock
push
push
inc
mov
lea
ss
cmp
sahf
sbb
shl
es
lods
jne
jg
push
add
cmp
xchg
jle
test
mov
adc
push
leave
je
pushf
cmpsl
icebp
xor
push
ud0
pop
outsl
xchg
ljmp
gs
es
icebp
lds
cmp
adc
inc
jno
call
xor
in
push
iret
push
cmpsl
push
mov
ja
shll
shr
inc
xchg
push
jecxz
scas
dec
rorl
mov
lods
cmp
add
test
clc
into
sbb
mov
imull
icebp
hlt
mov
and
xchg
scas
call
mov
mov
int3
sar
testl
test
daa
sbb
sub
pushf
fiadds
adc
jmp
out
mov
mov
data16
fsubrs
jbe
inc
push
sub
imul
cli
push
add
mov
push
push
data16
adc
jge
fsubl
imul
les
call
add
fimull
pop
shrb
push
cmpsb
sub
and
jl
or
iret
push
mov
stc
mul
sub
insb
cmp
int
xor
add
mov
sahf
push
fwait
aad
adc
push
cli
mov
jle
jg
cmpsl
ficoml
inc
cld
pop
clc
fs
or
scas
mov
clc
jg
sbb
xor
ljmp
pop
data16
into
fisubs
sub
inc
aad
adc
pop
aad
sarl
pop
jecxz
add
cld
jno
in
sbb
push
addr16
and
ljmp
adc
hlt
mov
les
jmp
in
pop
int
add
lea
cmp
sbb
xlat
bound
fmul
jge
push
lret
pop
sbb
jl
movsb
jb
jno
outsb
sbb
dec
cmp
ds
in
inc
ret
dec
leave
enter
dec
mov
outsl
mov
mov
mov
push
lcall
sbb
mov
int
iret
nop
test
pop
mov
fdivl
jmp
jp
push
push
adc
nop
movsb
fidivrl
pop
stos
push
enter
push
xchg
cmp
sub
cwtl
push
push
cmp
pop
das
push
push
repnz
nop
add
lahf
adc
lcall
std
dec
cmp
cmpsb
popa
lods
fs
add
in
cmp
or
push
fdivrl
sub
or
js
pushf
xchg
sbb
cmpsl
scas
imulb
xor
aaa
cld
pop
add
jno
or
lret
cli
fisubrs
xlat
outsb
pop
dec
movb
xor
sub
clc
das
inc
sti
lcall
and
or
popl
pushf
mov
cmp
ja
or
enter
xchg
subl
xorl
ja
cld
pop
mov
aad
movsb
sub
leave
fsubrl
jae
mov
lret
cli
fldt
pop
insl
ud0
test
shl
xor
dec
aad
jne
xlat
push
jge
imul
fcompl
fldenv
hlt
std
push
mov
je
add
popa
push
mov
jae
cld
divb
aam
cmpsl
xchg
popf
insb
in
stos
popf
pop
cld
or
test
fldpi
cmpsl
mov
push
mov
jnp
das
jbe
jne
push
fbld
aaa
adc
sbb
mov
cmp
xor
or
mov
add
jo
repz
push
push
xor
mov
repz
mov
jl
data16
push
das
push
sub
movsl
mov
push
sbb
hlt
inc
adc
and
test
in
rorl
jne
stc
fsubrl
icebp
pop
enter
rorl
repz
jb
mulb
jns
cmp
je
pop
dec
int3
adc
cltd
aaa
lock
or
xor
pop
fiaddl
cld
sub
shl
jnp
mov
enter
fs
or
sbb
adc
add
mov
imul
jl
in
dec
repz
push
adc
lret
or
cmp
push
mov
and
cld
mov
sbb
jge
or
daa
in
in
loope
jno
push
or
cltd
movsb
lret
in
bound
and
jmp
sbb
pop
cmp
repnz
xor
pushf
cltd
push
pop
mov
jle
sub
jg
cmp
xchg
xor
subb
mov
xor
dec
inc
enter
cmpsb
out
mov
or
jbe
rcrb
xor
mov
mov
dec
mov
adc
stc
cs
inc
cmpsl
mov
rcr
push
and
fs
repnz
mov
push
and
xchg
lds
cmp
outsb
adc
jge
loope
and
arpl
or
lds
cmpb
xchg
cltd
push
ljmp
mov
sbb
xor
jmp
xchg
daa
test
cmp
dec
sbb
call
testb
mov
xor
mov
pop
push
sbb
dec
lods
mov
ss
or
and
pop
and
je
cmp
fdivs
push
es
into
push
lcall
inc
cmp
or
imul
lahf
push
sub
mov
or
dec
mov
mov
adc
mov
sbb
mov
push
in
and
mov
inc
cmp
jb
imul
mov
jnp
fiaddl
std
mov
inc
int3
mov
and
iret
in
and
mov
and
fistpl
scas
loop
pop
push
icebp
xchg
rclb
clc
les
lods
sub
arpl
test
push
mov
lods
adc
sbb
inc
sbb
in
fimull
std
cmc
sub
sub
xlat
out
sbb
push
fmuls
mov
xchg
sbb
push
dec
ss
xchg
mov
aad
push
in
xlat
outsb
ja
or
xchg
push
ja
test
jnp
inc
dec
jge
pop
add
inc
inc
push
adc
rolb
arpl
incl
jl
es
fcmovnbe
outsb
aad
sbb
inc
xchg
mov
pusha
enter
hlt
adc
mov
aaa
out
push
ret
mov
sbb
popa
divb
cld
sub
int3
jmp
cmp
std
adc
rorl
push
ret
jecxz
jle
gs
mov
imul
test
push
sub
jb
aad
iret
cmp
pop
mov
mov
jl
sub
sub
out
aam
dec
push
pop
cmp
jb
push
call
adc
out
xchg
in
stos
inc
andb
aaa
xor
pop
dec
int
sub
in
insb
data16
xor
push
mov
daa
enter
xchg
imul
insb
and
sbb
fidivrl
test
fsubs
fmuls
in
imul
xchg
fstp
xor
sahf
jl
repz
pop
lods
add
adc
shr
sbb
pushf
xor
pop
arpl
inc
hlt
repz
jns
iret
mov
ljmp
add
daa
mov
fisubs
inc
xlat
mov
mov
push
xchg
xchg
shll
aas
rcl
xchg
les
bound
mov
jmp
sbb
push
cmp
aas
xchg
cmp
jp
roll
lret
sub
fwait
sub
jnp
push
sti
cli
dec
push
sbb
mov
into
mov
ljmp
cmp
jecxz
int
cmp
xor
adcb
sbb
and
or
jle
or
cmp
sub
into
cmpb
xor
inc
inc
ss
xlat
xor
popf
in
jg
xchg
mov
adc
dec
sbb
add
xchg
xchg
pop
cmp
cwtl
cmpsb
jge
xchg
sbb
cwtl
loopne
test
aas
adc
ds
mov
pop
popf
dec
mov
cltd
subl
cmp
sbb
incb
mov
stos
mov
idivl
pop
js
mov
mov
aaa
repz
jns
ret
fisubs
stos
mov
sar
aad
mov
mov
rorb
xchg
mov
mov
or
inc
js
into
jg
pop
pop
jmp
cltd
popf
ja
imul
mov
mov
mov
addr16
add
or
mov
mov
sti
sub
int3
jns
push
inc
jns
adc
testl
movsb
jns
push
push
fwait
scas
or
pop
ret
insb
or
shl
aas
lds
movsl
test
jmp
mov
sbb
xor
push
xchg
dec
push
pop
je
cmp
je
in
push
sub
jge
repz
xlat
lods
ja
ja
in
jae
push
push
jp
xchg
mov
inc
imul
outsb
xchg
pop
add
leave
jle
cmpsl
mov
lret
push
test
lds
sbb
rolb
sub
cmc
or
mov
xchg
add
xchg
aaa
mov
mov
mov
imul
les
dec
xchg
mov
aaa
jmp
adc
neg
mov
xchg
pushf
mov
adc
or
pop
xchg
push
pop
mov
shl
mov
fmull
into
sub
aam
in
ljmp
stc
mov
stc
fs
fldt
les
dec
mov
repnz
sahf
ret
jmp
enter
pop
hlt
xchg
les
fsubs
clc
adc
or
cmpsb
and
jge
insl
inc
movsl
or
int
into
in
fs
pop
xchg
jnp
pop
xchg
fsts
pop
jae
and
orb
out
fildl
ja
ss
cli
adcb
mov
or
mov
sbb
mov
xorb
mov
lahf
loope
pop
mov
out
sub
je
fisubrl
jecxz
pop
sub
jns
mov
sub
ds
jg
shr
sbb
repnz
xchg
and
insl
jnp
pushf
sbb
and
lahf
cmp
ja
jnp
mov
pop
ljmp
push
into
imul
cmp
lahf
jae
loope
ret
cmp
ret
dec
mov
lahf
push
xor
mov
jae
dec
in
mov
xchg
jns
cld
sti
push
into
test
mov
orl
jge
push
repnz
pop
mov
push
mov
ja
jge
adc
xchg
push
hlt
inc
push
xor
sbb
cmp
daa
pushf
mov
add
lret
xchg
lcall
sub
in
pop
or
out
push
imul
dec
push
mov
mov
data16
int3
in
cmp
stos
sti
or
jbe
popa
imul
xor
sarb
mov
scas
into
adc
fldcw
std
sub
je
pop
stos
adc
mov
inc
sbb
js
push
je
insb
pop
sbbl
cmp
mov
jle
jnp
ss
pop
mov
or
cmpsb
nop
pop
cltd
popa
shr
push
insl
sub
fbstp
pop
sbb
mov
ds
xor
and
pop
dec
arpl
dec
dec
pushf
pusha
shrl
pop
and
add
hlt
in
pop
loop
mov
fidivl
ss
movsb
aad
xchg
add
movsb
testl
lds
imul
xchg
jnp
mov
pop
call
sbb
je
inc
ljmp
imul
jl
xorb
insb
test
add
ficoms
inc
test
fnsave
lock
repz
ret
imul
fldl
push
xor
jmp
mov
xchg
sub
push
push
xor
int3
idivl
xchg
enter
mov
push
and
std
xchg
inc
mov
xor
popf
cli
xor
stos
rcl
inc
inc
xchg
aam
imul
sets
mov
fmull
mov
jge
fmulp
adc
jge
in
and
mov
shrb
or
pop
lods
push
cmpsb
bound
jnp
test
xor
jecxz
stos
jle
mov
push
sbb
and
call
xchg
push
scas
mov
xchg
mov
insb
add
mov
pop
dec
lds
or
rcll
xchg
mov
add
lahf
dec
sbb
neg
cs
mov
lods
out
push
mov
das
jmp
fisubs
jno
push
jo
mov
fistps
pop
fnstenv
push
mov
cli
lock
mov
inc
inc
shrl
or
jg
or
mov
fwait
rcrl
rolb
xchg
insb
addl
dec
ja
cli
sbb
mov
lret
enter
add
push
xchg
lcall
fnstcw
pop
cli
and
test
xchg
orl
fucomi
pop
das
ret
inc
jge
sub
sbbb
and
pop
xor
fs
vxorps
mov
fidivs
dec
gs
mov
addr16
sub
push
mov
cmp
subb
jmp
out
scas
subb
fcomps
push
inc
in
fisttpl
inc
mov
add
enter
lcall
aas
mov
jno
cli
ret
xchg
add
inc
mov
and
cmpsb
popa
jmp
mov
push
or
cmc
test
xchg
pop
push
xor
fidivrs
div
cwtl
or
stos
adc
out
mov
in
ja
rcll
inc
test
stos
push
mov
shrl
repnz
add
mov
ds
sbb
data16
ret
adc
mov
shrb
ss
mov
xchg
fcmovne
mov
clc
fiaddl
or
ret
push
ljmp
mov
push
mov
ljmp
or
aaa
loopne
pop
shl
inc
or
in
out
sbb
xchg
sub
push
cmpb
pop
test
pop
ret
fwait
es
cli
and
jo
cltd
out
cmpsb
xor
push
insb
inc
popf
pop
cltd
xor
mov
jge
iret
sbb
xchg
push
inc
shll
leave
neg
out
stc
or
sbb
sub
cmp
dec
jbe
imul
mov
cmpsb
test
neg
out
stc
or
sbb
sub
cmp
dec
jbe
imul
mov
es
push
mov
jmpw
or
cmp
dec
jbe
imul
mov
cmpsb
repz
cltd
xchg
test
jmp
ss
adcl
jno
rcrl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
popa
test
inc
pop
push
lret
push
dec
je
sbb
loop
repz
mov
sbbl
push
dec
and
xor
loope
icebp
lret
ror
mov
ficoml
push
repnz
dec
and
xor
add
adc
loope
rorb
mov
out
clc
mov
das
cmp
cs
lcall
sbb
mov
cmp
imul
mov
add
std
pop
stc
dec
pop
fistpll
mov
mov
rolb
jnp
outsl
sub
fs
jecxz
lret
mov
in
rcll
inc
mov
pop
xchg
lcall
push
repnz
cmp
inc
pop
loope
cmc
adc
cs
mov
sbb
xor
add
lods
iret
ficomps
adc
adc
cli
dec
sbb
xor
pop
mov
scas
jo
jge
test
cmpsb
cli
mov
xor
loop
inc
lcall
inc
ficoms
and
xor
add
adc
ror
andb
xchg
in
sub
push
sbb
fs
dec
pop
inc
outsb
jae
outsl
xchg
mov
xchg
mov
in
loope
pop
aas
add
outsl
inc
push
jp
inc
je
xchg
lahf
xchg
mov
push
ljmp
push
sub
sub
fs
xor
add
adc
loope
icebp
ljmp
mov
sbbl
push
dec
and
xor
add
adc
loope
icebp
ljmp
mov
sbbl
cs
mov
mov
cmp
cmp
mov
mov
dec
in
bswap
gs
pop
adc
call
iret
je
adc
lods
movsl
mov
pop
lods
push
lock
shr
xchg
inc
dec
lods
ret
dec
and
divb
ret
in
sub
cmpsl
mov
outsl
fadds
scas
outsl
adc
sub
pop
addr16
bound
xor
dec
mov
out
inc
inc
dec
daa
cmp
imul
inc
add
pop
test
mov
js
nop
push
pushf
cld
xlat
mov
sub
rcl
xorb
rorb
mov
xchg
mov
pop
or
movsb
loopne
pop
adc
js
cmp
lds
stos
add
xchg
nop
jnp
nop
testb
mov
les
add
push
mov
push
xchg
cwtl
adc
jnp
popl
pop
nop
xrelease
mov
dec
dec
ret
xchg
jb
stos
imul
int3
jno
inc
cmp
outsb
sub
jb
fsub
mov
pop
jne
fmull
push
sub
mov
aam
xchg
mov
xor
sarl
decl
jge
mov
ss
or
mov
not
fildl
fs
cmpsl
call
insl
push
inc
and
mov
fnstcw
into
ficompl
fidivl
cmpsb
icebp
jb
or
and
mov
testl
adcb
mov
mov
ljmp
orl
sbb
adc
pop
cmp
scas
shrb
jp
mov
mov
xor
push
fisubrs
xor
aaa
mov
pusha
cmp
and
add
sub
inc
xchg
mov
dec
sbb
push
mov
rcrl
jle
jl
fstl
mov
fidivl
mov
add
fcomip
pop
xlat
sti
jmp
dec
cmp
mov
pop
inc
xlat
movsl
sbb
cmp
pop
clc
mov
pusha
pop
les
out
mov
fstpt
enter
xchg
pusha
ds
jmp
xchg
or
stos
in
rol
dec
mov
shl
xlat
cmp
mov
or
das
push
scas
int
dec
rcr
std
imul
cmpl
das
stos
jns
sub
stc
mov
cmp
mov
and
xor
icebp
mov
stos
sub
inc
sbb
xorb
pushf
push
dec
mov
jge
cmp
pop
inc
add
stos
jp
lret
cmpsb
push
cmovne
out
ds
or
add
loop
adc
or
inc
mov
popf
mov
mov
mulps
pop
mov
scas
addl
test
cmp
testl
stos
xor
xchg
pop
push
rcrb
inc
das
std
sub
fnstenv
insl
test
jne
jg
and
jo
adc
rolb
xor
repz
push
adc
lret
int3
cmp
ds
jo
test
push
jae
pop
push
clc
jbe
mov
out
leave
sbb
shr
inc
bound
sub
adc
lock
scas
pop
shlb
shlb
addr16
data16
jmp
mov
js
adc
xor
pop
adcb
shl
mov
popa
add
call
mov
jg
pop
push
pusha
insb
aas
cltd
pop
scas
fisubrl
aas
outsl
mov
mov
inc
xlat
jge
lods
push
cmp
stc
jmp
in
stos
adc
cmp
shlb
mov
sbb
xchg
pop
inc
imul
dec
jnp
and
inc
pop
mov
test
fcmovu
sub
push
or
push
push
shl
loope
in
pop
or
pop
fadd
mov
push
ror
popa
and
xchg
dec
push
lahf
xchg
scas
jb
or
popl
es
xchg
push
mov
mov
inc
sub
xlat
cmpsb
xchg
in
mov
scas
cs
bound
mov
mov
pop
jecxz
xor
jle
jle
sub
aaa
mov
jp
in
sti
xlat
fs
rorl
insb
cmp
imul
nop
pmulhw
jne
xlat
maxps
rcll
cwtl
pop
dec
mov
popa
sarb
jmp
adc
test
mov
cmp
and
xchg
xchg
jnp
mov
cmp
sub
mov
shll
sub
pop
mov
subb
fstps
lcall
sub
and
inc
insb
push
cs
mov
or
sbb
outsl
in
shl
aas
divb
or
out
inc
sbb
push
addr16
dec
mov
dec
pop
hlt
dec
cwtl
cmpsb
lret
aaa
hlt
movsb
mov
ret
mov
mov
hlt
push
es
and
sbb
loop
jge
movsl
xchg
push
xchg
and
jno
xchg
mov
push
dec
popa
ret
mov
add
testb
pusha
add
out
lret
inc
mov
scas
aam
ret
fcomip
test
fisttpl
in
push
icebp
dec
sti
or
mov
loop
push
jnp
or
xor
mov
adc
adc
cmp
lods
ja
and
and
push
jmp
call
lock
and
push
inc
sbb
push
insl
mov
aas
popa
lret
lret
add
enter
pop
and
rorb
xor
cmp
loopne
cmp
repz
adc
sbb
add
pop
cmc
xor
add
mov
test
dec
testb
fwait
cmp
out
and
cmp
pop
or
inc
scas
ljmp
rcl
sbb
mov
into
test
pop
adc
push
xchg
fwait
pop
les
aam
sub
cs
ud1
dec
xchg
test
daa
push
mov
rorb
dec
ds
scas
dec
sub
out
jl
xor
push
cli
jnp
xchg
je
mov
adc
dec
lds
pop
gs
xor
jne
xlat
nop
push
rcl
fstpl
sub
and
leave
sbb
fldcw
enter
cmp
lods
cmpl
aam
and
stc
pop
jmp
push
or
cmp
mov
push
sub
cmp
pop
push
aad
mov
pop
shl
xchg
adc
in
sti
sti
cmpsb
ljmp
jecxz
dec
fsubs
cwtl
jo
dec
add
es
mov
inc
rorb
mov
dec
jo,pt
xor
in
les
js
fwait
loopne
jl
dec
push
pushf
lods
loope
and
or
jne
subb
mov
cmp
fmuls
enter
push
push
and
lcall
sarl
push
popf
dec
sbb
jg
insl
insl
pop
icebp
mov
or
leave
in
ja
add
ret
cmp
sbb
or
pop
daa
mov
push
inc
mov
pop
in
sub
mov
das
lret
clc
or
jge
jecxz
push
dec
aaa
sarl
aam
jnp
dec
xchg
push
and
push
jmp
popa
jns
mov
add
sub
mov
xchg
repnz
sbb
and
xor
lret
bound
and
push
decb
jl
inc
daa
mov
out
sbb
clc
inc
les
pop
jns
addr16
je
cmp
xchg
cmp
adc
ret
sub
out
dec
mov
les
std
inc
add
push
push
in
xor
mov
sbb
push
push
scas
addr16
ljmp
stc
addb
cmp
and
cbtw
pop
sbb
stos
mov
in
lret
and
mov
cld
rcr
sub
addr16
lahf
subb
fisubrs
loop
jnp
mov
in
push
sarl
sub
and
push
testb
sahf
fsubrl
push
sahf
adc
pop
fbstp
jl,pn
push
adc
lods
lods
add
das
int3
jp
jmp
ret
imul
icebp
add
mov
xchg
arpl
xor
sub
jbe
and
fimull
pop
orl
adc
mov
xor
nop
sbb
xor
cmp
sub
xchg
test
cmp
xchg
repnz
xlat
cmp
and
mov
or
rcrl
add
adc
test
cmp
dec
cmpsb
xchg
xchg
or
mov
cltd
outsl
and
roll
add
stc
push
sbb
imul
xor
mov
xor
inc
jle
les
js
xlat
mov
pop
pop
aas
lret
lcall
add
add
xor
fidivs
lret
ret
add
loop
fistl
pop
lea
sbb
xadd
mov
pushf
inc
mov
js
mov
dec
jno
xchg
and
loope
ret
ljmp
lea
cmp
mov
or
rolb
test
sub
jb
mov
outsl
je
fs
sarl
adc
sti
push
stc
iret
ficomps
jae
enter
in
mov
addr16
aaa
adc
jg
inc
pusha
sub
mov
pop
inc
push
adc
mov
scas
fiadds
jns
fsubs
cli
sub
fistpll
outsb
in
mov
mov
cmp
inc
js
loopne
imul
clc
sub
xchg
in
dec
jnp
dec
sti
or
xor
aas
scas
add
push
out
dec
dec
jnp
daa
fwait
out
cli
mov
inc
sar
pop
cmp
sub
mov
cmp
adc
sbb
out
dec
stos
add
jae
popa
repz
sbb
inc
mov
cmp
push
popf
lock
lea
cmc
addl
dec
test
or
and
dec
fdiv
add
cmp
fstpt
jl
cmpsb
and
nop
adc
rolb
jno
fcomi
pop
test
mov
cmp
cmp
jo
stos
or
mov
pop
outsl
add
sbb
out
xor
cmpsb
aas
lret
scas
inc
mov
sbb
cmp
sub
mov
sub
les
dec
cli
repnz
imul
addr16
sti
push
inc
push
cmp
in
dec
mov
mov
das
imul
loopne
ret
inc
xchg
lods
pop
stos
cmp
dec
hlt
pop
outsl
dec
xor
sub
aad
xchg
mov
xor
cmc
sub
test
aaa
push
push
mov
shrb
mov
in
xchg
push
xor
cmp
push
rorb
and
lret
mov
rcrb
jo
mov
lret
cli
pop
data16
mov
test
xor
jg
loope
jb
push
pop
mov
mov
inc
cld
xchg
je
es
and
pop
inc
lret
in
jo
cmp
dec
xchg
cmp
cmp
xchg
lcall
lock
pop
scas
shrb
mov
push
cmp
adc
inc
sub
iret
js
arpl
and
dec
and
movsb
lods
push
xchg
add
mov
insl
sarl
stc
and
jns
xchg
sbb
fs
aam
imul
inc
pop
cltd
int
adc
jo
insb
push
xor
stc
pop
loope
sahf
jb
and
sub
inc
fwait
and
in
cli
xchg
adc
fists
stos
or
test
push
lret
jns
lahf
pop
sbb
fwait
cmp
mov
aam
popl
xadd
push
in
call
repnz
xchg
pop
mov
sbb
aaa
movsb
int3
ret
std
cld
imul
pop
arpl
cmp
sbb
pop
xor
and
push
pop
ret
bound
sub
adc
mov
xor
movsb
lds
mov
jg
or
mov
sti
scas
dec
dec
xchg
pushf
mov
sti
mov
xchg
std
testl
jne
cmpl
cli
sbb
xchg
addr16
mov
xchg
scas
jg
push
fdivrl
shll
sub
dec
or
xchg
or
dec
aam
xchg
or
insb
incl
push
int3
mov
mov
pushf
jge
fldl
jmp
or
pop
sub
fmul
cwtl
xchg
and
stc
idiv
ss
popa
faddl
cmp
outsb
das
int3
mov
sbb
add
pushf
or
inc
stos
sbbl
pop
adc
mov
xlat
repnz
and
scas
jo
fwait
jecxz
je
dec
mov
xchg
fwait
scas
aam
mov
inc
cli
and
lcall
push
pop
mov
xor
sub
int3
dec
cmc
ja
mov
adc
mov
out
popw
add
fldcw
sub
test
cmpsb
push
fisttps
cmp
stos
pop
cmpb
icebp
popf
cli
xchg
rclb
pusha
jmp
push
add
sub
mull
sub
sbb
pop
addr16
addl
push
dec
jbe
xchg
aam
mov
lea
xor
int3
lret
int
or
push
lret
jmp
inc
loopne
sti
pop
icebp
jg
pusha
add
add
idiv
fmuls
dec
cmp
in
pop
push
mov
ds
cmp
jge
mov
cmpsb
inc
xchg
inc
xchg
mov
out
fdivp
and
push
ss
mov
cld
imul
aaa
stos
xor
push
lret
out
int3
pop
and
fcos
int3
dec
lods
outsb
outsb
sbbb
push
lea
push
and
out
negb
cld
hlt
iret
ja
xchg
lahf
mov
pop
lret
mov
cmc
jae
mov
add
mov
mov
xchg
imul
jmp
xor
jno
push
inc
jmp
sbb
mov
or
mov
push
sbb
shrb
sarb
jns
arpl
sbb
lods
js
dec
sub
mov
icebp
mov
paddb
sub
out
pop
xchg
add
sbb
jnp
xchg
popf
dec
pop
mov
cmp
push
or
je
mov
push
scas
sub
sub
and
dec
pop
outsb
mov
les
adc
sub
orb
pop
imul
sahf
mov
jle
imul
fiaddl
add
pop
and
xchg
adc
clc
sbb
inc
jge
dec
ror
setns
xchg
pop
mov
push
subl
mov
add
mov
sbb
mov
mov
pop
push
in
lret
cmpsb
xchg
jne
inc
pop
dec
inc
mov
mov
pop
call
adc
add
cmp
sbb
cli
and
sbb
and
xor
in
sti
repnz
adc
lods
mov
jp
sbb
out
mov
xchg
clc
out
xchg
scas
adc
sub
push
inc
pop
fsubl
sarb
jnp
mov
ret
mov
xor
push
insl
mov
test
mov
fidivl
nop
loopne
fnstcw
mov
cmp
add
lods
test
jge
mov
cmpsl
test
movsb
fldt
addr16
insl
insb
pop
cs
jne
sub
or
and
in
jno
mov
jmp
pusha
repnz
fwait
mov
pop
and
fisttps
mov
add
lcall
xchg
ret
psubw
mov
sbb
ret
gs
lods
cmp
add
dec
les
pop
out
adc
jp
cld
push
add
iret
xor
aad
dec
sarl
sub
aas
outsb
jle
jecxz
hlt
add
lds
fnstenv
push
into
or
clc
and
dec
ss
cmc
sbb
mov
mov
dec
fisubrs
adc
lods
popa
cmp
out
sbb
int
mov
ret
sti
dec
shll
lret
and
pop
cmpsl
xchg
xor
jbe
div
les
in
jbe
arpl
jo
outsb
insb
dec
paddsb
mov
repz
decb
jo
in
add
shll
lret
xor
inc
in
int
es
fimull
out
add
xchg
mov
sub
add
loopne
movsl
test
mov
push
fs
adc
pusha
cmp
divb
nop
cmp
outsl
adc
mov
pop
in
jbe
xor
adc
jne
cmp
xor
jne
pushf
aas
sub
fldt
xchg
movsb
pop
rol
or
push
cmc
push
ficompl
in
push
add
xorb
test
add
out
push
mov
fiaddl
fldt
sbb
outsl
dec
stc
loop
jp
mov
in
sarb
int
into
scas
sbb
push
mov
imul
mov
mov
das
add
fcoml
lods
fwait
cs
out
test
or
loope
ss
insl
out
ja
out
dec
cmp
loopne
cmpsl
sahf
or
and
jae
add
and
nop
mov
jmp
in
mov
cmp
js
cmp
out
mov
movsb
mov
sbb
adc
sbb
call
mov
or
jecxz
rclb
mov
pusha
gs
pushf
idivl
pop
test
push
push
ret
insb
adc
addr16
pop
fnstcw
jbe
lret
adc
add
imull
and
adc
or
bound
test
nop
out
jns
pop
mov
mov
push
cmp
cltd
loope
divb
pop
mov
mov
mov
sub
sbb
jnp
adc
xorl
push
and
cld
xchg
xor
aad
mov
je
add
sub
pop
add
and
lahf
inc
fwait
es
test
shl
mov
cmp
insb
dec
orl
jl
pop
test
leave
incb
in
call
int
cmp
cmpsl
xor
in
sbb
push
jle
push
faddp
mov
dec
xchg
sahf
mov
stos
loop
sti
sbb
enter
sub
push
jmp
fwait
in
inc
jg
cmpsl
fisttpl
mov
jp
dec
inc
push
add
jne
dec
insl
hlt
sub
dec
xlat
xchg
pop
or
pop
aaa
push
pop
adc
mov
jnp
jb
push
js
fidivrl
pusha
mov
xor
dec
or
xchg
mov
add
xchg
add
jmp
aad
lods
mov
and
xor
ret
cld
rorl
lcall
ret
or
leave
mov
mov
inc
push
outsl
scas
xor
jnp
xor
jecxz
imul
gs
loope
or
add
in
mov
call
jae
cmc
and
jbe
ja
sub
or
and
into
push
jle
test
dec
aaa
sarb
cld
fstpl
lahf
mov
inc
popa
mov
sbb
pop
shlb
fiadds
lahf
jns
verr
lahf
adc
mov
xorl
cmp
out
xor
cmp
sub
mov
and
dec
pop
jecxz,pt
jbe
daa
lods
repz
and
mov
fnstenv
popf
push
mov
jp
jmp
xchg
inc
mov
inc
cld
inc
popl
adc
jp
cwtl
pop
les
adc
repz
push
lods
dec
es
jl
pop
mov
mov
push
pusha
and
push
cmp
loopne
bound
lret
out
shll
xor
and
std
test
dec
mov
inc
rcrb
inc
add
lea
add
bound
mov
dec
mov
jl
es
jmp
sbb
int
xchg
inc
push
andb
inc
xor
inc
sub
jns
jb
fnsave
push
xchg
push
movsb
jecxz
out
and
loop
cltd
movsl
push
gs
popa
lahf
mov
inc
mov
push
xor
gs
adc
xor
and
loop
jg
mov
out
aas
mov
and
jne
inc
mov
cwtl
or
orb
mov
inc
and
lods
xchg
fdivrp
rolb
inc
enter
cs
or
jae
mov
dec
rolb
fmull
cwtl
push
xchg
sub
and
push
lcall
test
add
cltd
icebp
cmpsb
shl
xchg
inc
push
xchg
addr16
lea
xor
stos
ret
lret
mov
test
sub
add
loope
push
mov
sahf
adc
or
lods
mov
pusha
mov
lret
mov
leave
push
mov
dec
inc
in
push
inc
addr16
mov
repz
dec
ret
mov
xor
xchg
pop
add
rorl
or
sub
xchg
jbe
sar
xor
cmpsl
fildl
sub
rcll
push
adc
into
push
cmp
dec
dec
aam
mov
dec
and
add
and
jp
adc
cmp
mov
push
pop
sub
mov
scas
mov
xchg
lods
xchg
jle
push
dec
and
xor
add
adc
loope
icebp
ljmp
mov
sbbl
push
dec
and
xor
add
adc
loope
icebp
ljmp
mov
sbbl
push
dec
and
xor
loopne
icebp
ljmp
mov
cmpb
push
pop
push
dec
and
xor
sbbl
sarl
jns
imul
mov
mov
xor
inc
loopne
pop
lods
add
push
in
inc
fnsave
pusha
cmp
mov
mov
pop
lock
cwtl
mov
xor
inc
fnsave
pusha
cmp
mov
mov
pop
lock
loopne
adc
inc
std
add
pop
test
mov
leave
sbb
lock
push
jnp
imul
bound
stc
dec
pop
mov
sti
leave
aas
jne
cmpsb
or
repnz
mov
fs
bound
in
mov
nop
and
cmpsb
neg
sbb
add
mov
inc
stc
lea
inc
nop
inc
mov
aad
movsb
ja
or
rcr
dec
push
xor
sub
arpl
mov
ret
sar
loopne
sub
ficomps
sti
dec
sbb
lock
add
inc
lea
sahf
rclb
loopne
rcrl
movsl
ljmp
xor
cwtl
jo
jne
nop
sub
mov
pop
lock
loopne
adc
and
push
in
inc
fnsave
or
shll
jge
pop
test
mov
push
cmc
push
cld
adc
and
pop
cmc
dec
in
aad
mov
and
pop
cld
jns
arpl
inc
mov
mov
enter
lds
insl
rcrb
loopne
adc
and
push
in
inc
fnsave
pusha
cmp
mov
mov
pop
lock
loopne
adc
and
push
in
inc
fnsave
pusha
cmp
pop
and
movsb
outsl
das
mov
mov
fwait
sahf
jo
inc
jns
pushf
ret
imul
xchg
add
shll
pop
mov
sarb
rolb
int3
or
jecxz
xor
bound
in
stos
lods
xchg
clc
inc
mov
nop
inc
inc
inc
mov
fcomps
hlt
mov
mov
inc
sbb
sub
test
sub
hlt
cmpsl
ret
cmpsb
pop
mov
inc
in
mov
and
xor
mov
push
cmp
jle
hlt
push
push
icebp
lock
and
cs
sub
aas
insl
sbb
test
jno
and
mov
stos
jecxz
or
sub
cmp
add
cmp
scas
inc
cmp
push
sub
loop
mov
in
aas
sbb
lret
bound
test
and
test
or
jo
and
test
aas
dec
pop
popa
clc
mov
clc
or
mov
sti
push
rclb
adc
in
mov
mov
shll
push
mov
das
dec
or
pop
sub
ljmp
shll
pushf
pop
mull
imul
lret
push
push
outsb
adc
jecxz
mov
popf
or
sbb
movsl
shl
push
in
ljmp
dec
add
dec
lods
popa
les
add
pop
nop
scas
sbb
das
scas
rcrb
mov
jle
mov
mov
insl
or
adc
mov
pop
repnz
repnz
leave
add
mov
inc
imul
sahf
xchg
out
add
inc
mov
cmc
add
cmp
sbb
ds
aas
aam
jmp
adc
cmpsb
push
and
gs
sbb
push
mov
or
mov
hlt
loopne
fdivl
pushf
out
outsb
scas
addl
jbe
xchg
inc
into
mov
rcll
push
dec
adc
stos
bound
mov
sbb
or
jg
and
fiadds
mul
inc
jnp
mov
cmpsb
dec
jl
add
fcoms
inc
mov
movsl
mov
out
pop
jbe
fisttpl
aas
fs
xchg
lock
mov
lahf
insb
cwtl
pop
negl
enter
sbb
lods
pop
test
mov
hlt
push
out
loopne
xchg
jmp
shlb
mov
stc
inc
inc
sarb
jecxz
sub
cli
repz
ret
adc
xor
lock
fidivl
xchg
add
in
and
movsl
sub
jb
jne
mov
adc
push
jle
lret
xlat
ja
adc
out
insb
repz
or
mov
js
dec
cmp
mov
push
push
pop
hlt
xchg
push
push
pop
pop
mov
pushf
andl
shrl
jb
movsl
cmp
div
push
popa
jle
loope
pop
sbb
sub
sbb
sbb
gs
ret
sbb
sbb
xchg
and
or
and
clc
imul
sbb
js
push
jmp
ret
mov
movsb
or
mov
pusha
popa
daa
mov
inc
inc
lea
push
push
push
jbe
arpl
mov
cmc
mov
jl
mov
mulb
lods
inc
roll
push
movsl
into
add
push
sti
sub
adc
jle
jp
inc
fnstenv
push
or
add
push
std
mov
int
loop
aas
adc
xchg
or
mov
push
inc
sbbl
mov
pop
mov
stos
addb
xor
fbld
rcr
xbegin
lods
into
arpl
dec
enter
mov
cmp
mov
add
js
xchg
pop
and
and
outsb
cld
cmpsb
sbb
ss
xor
and
testb
test
dec
clc
inc
mov
jns
xor
pop
cmpsb
in
xchg
sub
into
roll
or
inc
push
mov
xchg
xchg
mov
dec
iret
lock
cmp
je
inc
shlb
mov
ljmp
out
push
adcb
dec
cmp
mov
pusha
jo
inc
xchg
pop
lret
push
mov
mov
cmp
sub
push
leave
js
xchg
or
push
stos
pop
or
adc
inc
mov
mov
dec
ja
mov
dec
pop
repz
or
jne
dec
sub
jecxz
mov
xchg
addr16
ret
popf
rorb
sbb
js
loope
dec
pop
cmp
mov
xorl
mov
inc
or
orl
push
out
mov
sbbl
jg
popa
sbb
dec
insl
or
aas
and
gs
ret
push
out
dec
fwait
nop
aaa
pushf
jp
negb
mov
pop
ja,pn
clc
cmp
cmove
xlat
add
mov
inc
test
test
inc
mov
cmpb
subb
inc
lahf
jbe
test
mov
dec
pop
adc
out
adc
cmc
push
jg
xchg
cld
xor
xchg
dec
mov
mov
dec
rclb
cmp
cmp
lock
xchg
or
in
sub
lcall
and
je
or
out
rcl
adc
sbb
mov
pop
test
aaa
lret
insb
inc
fdivl
outsl
popa
push
push
jecxz
jge
pop
gs
imul
fs
sbb
aam
or
cli
stc
push
lcall
push
mov
in
cmp
mov
pushw
add
lods
jecxz
decb
fisttpll
xchg
cmp
repz
sub
rol
dec
call
mov
add
adc
mov
in
pop
jge
das
and
lock
mov
lcall
or
pusha
in
xchg
add
adc
dec
and
or
pop
test
mov
jnp
das
pop
jnp
pushf
out
inc
je
sbb
xor
sbb
clc
sbb
mov
add
push
or
inc
insb
pop
movsl
jb
js
shl
mov
mov
iret
pop
jmp
sub
aam
repz
or
fadd
iret
mov
sbb
xor
fidivl
dec
stos
or
fnstenv
mov
test
mov
lods
mov
loope
out
push
mov
jmp
rolb
sbb
fisttpl
pop
out
dec
dec
jb
stc
sahf
daa
jl
pop
xchg
push
in
dec
cmp
sbb
adc
std
roll
mov
adc
fldl
jnp
jnp
enter
sbbl
xor
cld
arpl
sub
or
cli
insl
ljmp
xlat
xchg
filds
sub
add
xor
mov
andb
sub
xchg
mov
int
dec
adc
xchg
and
xor
pusha
into
sahf
inc
test
aam
inc
jmp
dec
inc
pop
xchg
xor
sbb
outsb
adc
mov
mov
pop
jbe
add
push
in
mov
xchg
inc
jge
add
dec
sahf
add
jmp
pop
push
xchg
inc
jb
mov
fldl
mov
jmp
xor
and
nop
loopne
test
pop
mov
add
sub
mov
xor
fldcw
mull
and
cltd
mov
pop
in
adc
sub
hlt
inc
xchg
sti
cli
pop
out
jae
pop
and
adc
jb
sbb
xchg
mov
mov
xchg
shr
xor
mov
push
test
orl
js
fcompl
fdivs
je
insb
push
shl
adc
mov
in
scas
jno
and
shlb
jo
cmpsb
xchg
movsb
xchg
mov
dec
jo
ds
pop
or
or
mov
test
dec
xchg
dec
test
int3
cli
push
scas
push
test
ljmp
push
repnz
cmpl
dec
push
aaa
sub
inc
push
loope
jle
int3
test
mov
imul
stos
add
mov
and
jne
cwtl
adc
or
add
dec
or
lock
popa
ror
sub
mov
mov
pop
mov
sbbl
jle
jns
dec
rcl
mov
inc
jmp
sbb
es
loop
faddp
popl
mov
and
mov
negl
sub
test
sbb
and
fisubs
rclb
mov
fs
pop
enter
jbe
dec
int3
jo
je
nop
jo
mov
add
xor
mov
sarl
ret
ljmp
rorl
add
adc
fstps
mov
adc
das
call
pop
sbb
and
je
adc
xchg
lcall
rclb
sub
xchg
fs
inc
stos
das
xor
bound
sub
mov
mov
mov
dec
pop
and
xchg
adc
mov
jl,pt
icebp
scas
sub
bound
test
cs
faddp
shll
pop
mov
into
call
dec
pop
test
and
sbb
es
dec
or
cltd
mov
cmp
and
movsl
loopne
sti
mov
push
pop
movsbl
movsl
fcomps
fnsave
push
insb
dec
inc
insb
mov
sbb
pop
movsb
imul
push
xor
fstp
xchg
or
std
xchg
in
xor
stos
repnz
cmpsl
mov
pop
dec
jle
aad
pusha
jbe
jg
mov
xor
movsl
push
int
xlat
xchg
insb
jno
lods
ds
xor
inc
scas
adc
jmp
clc
pop
in
test
in
cld
push
rorb
fdivrp
pop
data16
jo
int3
fs
rol
push
inc
sub
mov
mov
or
jg
imul
es
mov
mov
jnp
out
clc
and
dec
ret
push
fistps
mov
fstpl
jp
xchg
dec
pmulhuw
push
icebp
and
sub
out
dec
test
and
inc
mov
xchg
aaa
aaa
lock
lret
mov
mull
xor
jnp
inc
into
out
test
fimull
les
adc
les
add
loop
or
dec
jno
sbb
push
sbb
cmp
hlt
hlt
movsl
test
int3
fnstcw
gs
xor
data16
rclb
mov
in
test
fadds
fmuls
and
ret
or
adc
icebp
cmpb
or
adc
test
pusha
xchg
outsb
xchg
and
iret
data16
and
ja
fs
lea
stc
sub
fbstp
popa
mov
scas
sbb
addb
push
push
and
bound
ret
enter
inc
mov
mov
dec
adcl
push
int
sbb
mov
inc
icebp
fwait
xchg
or
mov
inc
or
adc
mov
or
push
rcrb
stos
fcoms
mov
add
lds
adc
adc
movsb
addr16
cmpsl
sub
loop
jnp
adc
xor
movsb
inc
popf
and
jmp
push
push
arpl
xor
mov
pop
cmc
cmpsl
dec
cmp
pop
jne
in
and
and
in
mov
int3
cld
adc
inc
push
in
loop
jge
inc
pop
fs
fld
popf
sbb
add
adc
fstl
loope
sar
or
jns
sub
test
mov
add
ds
icebp
fs
push
mov
pushf
int3
leave
pop
mov
sahf
jne
xor
adcb
imul
in
push
dec
rcrb
push
jle
dec
icebp
sub
adc
xorb
or
fwait
sbb
fstps
mov
ret
inc
jne
pop
cld
jle
movsb
jb
mov
movsl
mov
xlat
out
cmpsl
rol
mull
cwtl
stos
inc
jl
xchg
mov
push
dec
adc
push
cmpsl
jne
dec
cmc
sub
mov
mov
xchg
outsb
adc
movsl
sub
and
stos
jge
dec
adc
mov
lcall
mov
out
and
addr16
push
test
mov
cmpsb
in
stos
mov
aam
mov
pop
or
loop
mov
int
adc
loop
sbb
mov
cmp
mov
out
cmp
fisubrs
push
mov
dec
sbb
sbb
adc
and
push
setnp
sub
mov
cld
adc
data16
fadds
push
push
aaa
das
jmp
add
or
pop
or
jmp
jecxz
jbe
out
mov
push
adc
sub
mov
pop
xchg
and
mov
js
aam
inc
sbb
push
je
scas
or
mov
xchg
scas
xchg
enter
ss
or
imul
pusha
out
and
push
cmpsl
push
call
bound
cltd
mov
jg
out
mov
mov
lock
mov
int3
into
scas
or
es
sub
dec
fsubp
lcall
out
sub
push
cld
or
xchg
sahf
imul
lea
fs
outsl
es
push
sub
and
hlt
movsb
push
jb
loopne
xchg
pusha
popa
lret
push
sub
or
outsb
jae
pop
aas
shll
mov
cs
stos
aas
pop
lret
adc
push
xchg
inc
pop
xchg
xchg
loop
jecxz
in
adcb
js
sub
cltd
xorb
mov
jmp
jbe
push
dec
mov
cmpsb
lods
lcall
jo
push
pushf
imul
and
jnp
insl
loop
mov
cli
decl
adc
scas
lahf
adc
daa
pop
add
adc
jl
pop
add
call
push
dec
adc
jge
adc
sub
repnz
pop
jns
inc
dec
inc
mov
fimull
dec
fnsave
in
incl
and
xor
xchg
cli
decl
cwtl
dec
cmpsb
iret
loope
push
insl
jbe
xorl
push
sbb
jb
test
dec
xlat
call
out
mov
jnp
jbe
pop
pop
repz
mov
push
lcall
enter
popa
fiadds
inc
cmpsb
fisubs
sub
inc
les
jecxz
xchg
or
sub
addr16
pusha
push
and
push
fldt
cld
jp
xor
ret
push
sub
mov
jmp
scas
pop
outsl
mov
xlat
imul
push
out
fs
andb
mov
idivl
adc
pop
scas
mov
or
orb
jecxz
fdivs
jge
jb
inc
fwait
mov
js
sub
int3
arpl
cli
push
clc
pop
std
and
mov
mov
and
test
cmp
push
mov
cmc
sub
arpl
int
cmp
inc
and
xor
pop
in
pop
sub
mov
push
mov
lods
mov
pop
sbb
sub
add
ss
mov
push
adc
or
idivb
arpl
popf
xchg
push
mov
push
jae
dec
js
imul
pushf
fistpl
movsb
xor
mov
add
data16
js
andb
hlt
push
push
push
repz
int3
mov
repnz
js
loop
pop
lods
daa
and
aaa
and
imul
pushf
in
imull
arpl
and
sbb
aas
fcmovnb
and
frstor
jl
xsha256
cmpsb
push
pusha
xchg
xchg
jne
xchg
bound
xor
les
or
pop
sar
bound
push
and
fs
lds
sti
addl
sub
pop
roll
fidivrl
mov
pop
jae
cld
pop
insl
adcl
mov
aam
mov
xchg
xor
sbb
int
pop
orb
out
xor
nop
xlat
lock
out
leave
sub
cltd
push
add
movups
add
cmc
mov
xor
add
mov
xchg
xor
sbb
decb
sbb
xchg
enter
fadd
xor
add
pop
orl
test
enter
pop
stos
cmpsl
mov
sub
pop
lods
pop
insb
mov
mov
and
roll
xor
test
jnp
movsb
not
xchg
pop
mov
fimull
jbe
adc
push
jne
pop
push
ljmp
and
jno
data16
sbb
mov
lock
insb
and
add
xor
dec
je
insl
add
leave
imul
popa
push
or
sub
pop
outsl
aam
pusha
pop
mov
loop
adc
dec
dec
clc
or
cld
test
and
mov
mov
cwtl
xchg
dec
mov
mov
mov
int
jne
std
cmpsl
into
aam
outsb
push
insb
xor
sub
popa
xchg
out
cwtl
push
stos
ss
nop
xlat
nop
andb
xchg
stos
idiv
lret
mov
push
pusha
stos
push
xchg
enter
rcl
pop
outsl
in
loop
in
das
ss
xlat
fisttpll
jno
ds
insb
fsubr
adc
adc
push
scas
or
rclb
out
pusha
cltd
xchg
pop
mov
mov
sub
and
push
mov
mov
xorl
test
verw
jo
or
test
inc
pop
notl
push
inc
repnz
push
inc
mov
loope
push
or
notl
and
data16
pop
aam
sbb
insl
xchg
lcall
dec
loopne
mov
jne
sub
rep
popf
cltd
out
ret
jae
inc
and
pop
pop
dec
or
sub
jp
jge
arpl
out
iret
push
pop
mov
xchg
stc
cs
inc
push
xor
test
xchg
add
in
and
fsubs
xor
repz
dec
movb
test
mov
push
jecxz
das
inc
rclb
addr16
lret
fdivl
add
jnp
mov
inc
lea
test
outsl
push
dec
outsb
into
fwait
rcr
dec
sub
sub
mov
or
adc
mov
jne
pop
aaa
mov
sub
movsb
jb
cmpsb
test
and
mov
sahf
jo
mov
sub
imul
ret
jae
xchg
jo
jae
lret
dec
les
dec
sub
aaa
pop
push
mov
jmp
je
fisubs
test
mov
and
dec
inc
rorl
cmp
cmp
sub
or
rorb
xchg
in
xor
jne
push
roll
mov
flds
xchg
fiaddl
fadd
adc
mull
adc
mov
inc
int3
imul
dec
popf
and
adc
ffreep
mov
gs
sub
addr16
add
aad
adc
nop
mov
mov
xchg
int3
mov
int
es
jne
daa
inc
movsl
mov
and
dec
or
dec
mov
ss
sbb
out
mov
insb
sbb
outsb
shlb
xchg
xchg
jo
adc
mov
adc
rcrb
add
xlat
lret
adc
inc
ret
int
push
lock
fcomp
jns
fdivr
lret
jecxz
imul
test
into
pop
sbb
push
push
scas
cs
cmp
imul
insb
or
sbb
adc
movsb
or
and
push
mov
insl
js
jae
pop
mov
dec
inc
insl
or
lods
cmc
dec
cmovne
insb
add
xchg
ja
loope
xor
shll
dec
mov
sub
jae
loopne
mov
pop
aas
hlt
das
sub
sub
jnp
in
aas
cmp
fistl
mov
es
std
jae
adc
lods
mov
loope
cs
cwtl
arpl
cmp
xchg
aas
push
add
leave
xor
xchg
adc
dec
push
loop
sar
test
xchg
leave
or
mov
out
inc
cwtl
into
rsqrtps
jns
das
cmp
pop
pop
clc
call
les
push
adc
or
sub
dec
sbb
in
pop
pop
xor
dec
add
sbbb
pop
add
mov
lods
rorb
into
push
and
mov
fildl
in
movsb
loop
xchg
movsl
mov
insb
and
sub
bound
test
and
ss
dec
ja
sti
sub
sub
aaa
daa
aaa
xor
lahf
mov
xor
xlat
bound
or
insl
inc
mov
cmp
lret
enter
stos
jns
xlat
repz
shl
std
xchg
xor
and
fnstsw
imul
lret
push
pop
fucomip
push
sbb
shll
dec
and
jle
nop
dec
out
loope
mov
sbb
cli
inc
xor
gs
out
std
out
sbb
mov
adc
push
iret
push
jp
adc
cmp
subb
movsl
add
push
shlb
cmp
sarl
into
pop
or
sbb
xchg
pop
push
inc
outsb
ret
xor
sbb
mov
dec
pop
and
mov
cmp
pop
test
aaa
loop
pop
cmp
addr16
mov
jmp
or
mov
xchg
xchg
jp
subb
xlat
pop
fwait
xchg
lock
sub
xchg
inc
ja
js
sub
test
jmp
mov
mov
xor
mov
pop
lock
loopne
adc
and
push
in
inc
fnsave
pusha
cmp
mov
mov
pop
lock
loopne
adc
and
push
in
inc
fnsave
pusha
cmp
mov
mov
pop
lock
mov
xor
inc
fnsave
pusha
cmp
mov
mov
pop
lock
loopne
adc
push
fcomps
lahf
adc
add
sbb
or
pop
xor
push
adc
dec
xchg
mov
mov
in
repz
jecxz
adc
sub
sbb
or
jl
insb
jae
arpl
subl
ret
cmp
fsub
int3
adc
and
jae
arpl
pop
adcl
mov
int3
pop
cmp
inc
inc
push
inc
mov
ret
push
aaa
pop
daa
jnp
lock
rcl
jle
mov
insl
xchg
scas
lock
xchg
js
xchg
les
lods
inc
mov
mov
mov
jmp
mov
or
sub
insb
dec
and
or
dec
in
xchg
and
int3
push
insb
add
pop
push
lods
lea
mov
in
xchg
push
jl,pt
jae
scas
stos
adc
push
loope
in
add
int
jecxz
in
call
or
dec
xorl
lods
mov
xchg
shll
divb
in
xor
int3
je
ret
stos
inc
orb
mov
out
out
scas
ret
and
cmp
or
push
push
jl
insb
jae
arpl
movsb
xorl
ret
sti
repz
test
pop
push
push
sbb
or
push
xor
and
aad
aam
leave
iret
jecxz
xchg
stos
mov
adc
arpl
adc
cmp
test
int
call
xchg
addl
addr16
pop
jge
jns
adc
jae
arpl
subl
ret
in
repz
int3
adc
sub
sbb
or
jl
insb
jae
arpl
subl
ret
in
repz
int3
adc
stos
mov
out
or
loopne
movsb
cli
sub
and
icebp
sbbb
lds
icebp
jp
jae
sti
jb
loopne
jns
hlt
mov
and
cltd
ds
pop
inc
rcr
cld
jg
mov
test
scas
addr16
inc
jnp
movsl
pop
dec
or
adc
cmc
outsl
lcall
outsb
cmp
ss
clc
mov
bound
cli
cmp
sub
dec
imul
std
shll
adc
aad
ljmp
cmp
push
popf
sub
adc
test
mov
pushf
mov
je
rcr
test
std
ror
jo
ret
inc
add
jbe
pop
bsf
mov
pop
test
ja
add
jb
add
push
jbe
dec
mov
add
ja
push
or
cmp
scas
cmp
dec
mov
push
sbb
jo
in
test
xchg
leave
cli
adc
clc
mov
out
shll
mul
aam
enter
ljmp
es
cld
dec
scas
sbb
mov
fisubrl
mov
clc
xchg
xchg
iret
mov
jno
add
add
adc
xchg
nop
sbb
loop
dec
push
fimuls
push
inc
or
movsb
mov
into
loope
das
pop
cli
jo
fstl
lret
sahf
jo
sbb
or
stc
lret
sarl
inc
and
popa
mov
lcall
mov
pop
cmp
stc
or
lods
jns
push
xchg
xchg
sbb
dec
int3
push
imul
pop
xchg
dec
mov
xor
shll
lock
lock
rorl
dec
push
push
arpl
lcall
push
repz
jns
out
push
daa
mov
xchg
cmpsb
stos
xchg
mov
inc
xlat
stos
xlat
or
mov
or
jns
das
stos
imul
enter
lods
jno
out
dec
outsb
mov
mov
fisubrl
dec
movsb
xlat
pusha
cwtl
adc
movsb
xor
jno
push
xchg
stos
decb
cmpsl
mov
shlb
or
ss
dec
mov
loop
pop
or
pop
test
mov
xchg
ret
xchg
stos
inc
inc
lret
js
sub
fcmovu
out
and
mov
dec
movsl
bnd
sbb
xchg
or
inc
push
insl
negb
decl
mov
push
pushf
mov
fsubrs
push
mov
imul
push
jl
cwtl
cmc
mov
cmp
mov
je
lock
call
adc
jno
outsb
ljmp
and
add
xor
pop
outsb
push
xchg
inc
sbb
aaa
aas
clc
lods
add
push
add
sbb
dec
lods
sbb
outsl
std
movb
iret
rclb
jle
pusha
inc
loopne
icebp
scas
jno
scas
xor
and
fldenv
or
xchg
jg
lods
cmp
mov
mov
mov
mov
cmpsl
push
clc
cld
es
mov
out
lahf
pop
xor
in
push
test
xchg
prefetch
xlat
cmpsb
mov
xchg
inc
nopl
jo
les
shlb
push
aad
xor
sar
pop
iret
mov
repz
mov
sti
sub
inc
inc
cmp
mov
push
cmpsl
xor
push
rclb
pusha
cmp
xor
sub
sbb
mov
adc
mov
xor
ljmp
dec
loopne
ret
mov
fsubrs
cmp
sbb
xlat
aaa
iret
sub
dec
test
ds
fldt
mov
or
fs
scas
insl
add
divb
popa
ds
mov
sbb
divl
cmpsb
out
rcr
mov
ret
cmp
sbb
mov
iret
pop
mov
sub
pop
ljmp
scas
mov
test
imul
test
roll
adc
hlt
sbb
cwtl
mov
mov
mov
in
and
mov
xchg
inc
repz
xchg
add
or
cmp
pop
gs
cld
add
sbb
lods
rorl
fcoml
mov
js
mov
pop
fisttps
mov
push
neg
xor
test
negl
and
inc
xchg
add
cmc
mov
xchg
ds
stc
pop
jmp
insl
icebp
negb
xchg
sub
mov
push
mov
xor
fdivrs
lret
sbb
xchg
ljmp
sub
mov
sbb
test
mov
popa
cmp
add
adc
dec
test
into
fcomps
add
add
xor
push
xor
lock
in
mov
out
and
dec
mov
ficoml
lahf
xchg
lcall
les
ja
push
dec
bound
shlb
ja
cmp
sub
ljmp
xor
pushf
cmp
ss
fldcw
andb
cmp
das
push
and
testb
push
int3
in
hlt
and
leave
in
push
sub
divl
in
iret
xor
je
or
mov
into
cli
popa
mov
sbb
test
rclb
mov
jo
dec
inc
stos
add
test
clc
xchg
in
pop
fwait
loopne
sub
jge
rclb
mov
mov
push
movsl
push
test
mov
pop
push
push
sub
jb
push
out
pop
andl
push
push
jae
push
bound
cmp
fildll
int
jle
cltd
cmp
hlt
pop
mov
mov
mov
int3
fwait
and
setle
outsl
test
inc
jno
clc
fiadds
imul
adc
fsubr
outsl
or
fsubrs
jo
sbb
and
sub
mov
jecxz
jae
mov
sbb
lock
daa
and
add
cmpl
inc
cmp
sti
cmp
popf
xchg
dec
pop
inc
sti
xlat
icebp
call
sub
test
and
insl
dec
and
adc
jge
push
test
jnp
mov
lods
aaa
pop
push
xchg
js
jnp
xor
testl
cmp
sbb
mov
std
bound
test
rorb
out
jecxz
xlat
and
rcrl
icebp
fsubs
push
clc
push
push
ret
or
outsb
outsl
add
daa
sub
push
shl
and
stc
in
add
mov
lahf
adc
mov
inc
jbe
lods
ja
add
jno
icebp
div
loop
ret
aaa
jb
pop
lret
sub
leave
std
inc
dec
rep
push
mov
roll
aaa
call
xchg
ja
and
out
cmc
stos
aam
jns
cmc
stc
mov
pop
xchg
ss
mov
mov
jb
in
test
pop
pushw
rorl
ljmp
mov
xchg
push
mov
in
jecxz
imul
push
adc
into
fldl
mov
incb
sbbl
mov
sub
jno
pop
mov
call
lret
xchg
sub
stos
stos
add
loop
js
callw
add
je
dec
push
jns
dec
lcall
std
movsl
icebp
dec
dec
loop
rep
gs
push
out
mov
stc
add
inc
fisttps
dec
mov
fisttps
dec
and
repz
sub
ljmp
push
addr16
xor
dec
dec
xor
cmp
out
mov
repnz
arpl
cmp
adcb
out
mov
lcall
xor
inc
sbb
or
xor
mov
sub
orl
push
mul
dec
out
lret
xchg
je
divl
push
xor
das
adc
xor
jns
xchg
mov
mov
rorl
or
or
aas
stos
mov
rcrb
ficomps
pop
out
dec
cmpsb
incl
mov
jmp
hlt
xor
and
cs
das
dec
int3
hlt
lods
sub
cmp
cli
inc
insl
and
into
cmp
jnp
imul
test
or
ficomps
stc
and
mov
push
cli
push
cmpl
adc
les
das
jp
sbb
rclb
pop
rclb
inc
out
arpl
lods
push
leave
mov
cld
dec
mov
adcl
or
dec
jecxz
jbe
mov
les
lock
testb
mov
push
mov
dec
mov
daa
push
inc
pop
lods
xor
push
or
and
jno
bnd
mov
test
inc
mov
test
lds
shr
cmp
aaa
adc
gs
fwait
xchg
dec
aam
xor
sbb
cmovbe
dec
fisttps
popf
enter
mov
gs
bound
movhps
les
dec
dec
notl
outsl
dec
cmp
mov
dec
sarb
aas
and
popf
rcrl
in
jb
fs
repnz
cld
jg
jno
pop
pop
inc
adc
push
insl
out
mov
call
inc
lret
pop
es
xchg
fisubrs
push
jecxz
aaa
mov
jb
dec
sahf
mov
xor
or
sub
add
push
lock
cli
jge
mov
imulb
ja
mov
dec
push
sbb
xor
push
imul
nop
rclb
sbb
jle
das
test
xor
test
sub
dec
scas
inc
cmp
lret
int3
xchg
mov
lock
jb
jne
in
xchg
imul
mov
and
shr
out
push
pushf
dec
insl
cmp
pop
outsl
enter
xchg
ret
test
mov
in
and
mov
in
cwtl
adc
movsb
insl
push
lret
cwtl
dec
push
stc
xor
sar
lock
add
sarl
mov
test
ds
rcll
inc
mov
roll
mov
xor
lea
negb
jae
mov
fdivrl
push
mov
mov
sub
mov
cltd
adc
popa
call
lret
sub
adc
jbe
xchg
jo
ror
push
push
dec
pop
xor
jmp
aaa
mov
data16
iret
xchg
decl
xor
loopne
aas
mov
mov
add
sub
push
call
xchg
and
xor
outsl
mov
imul
mov
mov
push
mov
loope
rolb
std
shlb
xchg
nop
push
mov
or
pusha
out
mov
cmp
mov
ret
jge
inc
nop
push
push
and
push
xor
ljmp
add
ja
adc
xchg
insl
loope
jb
jne
pusha
mov
sarb
xchg
icebp
outsb
adc
std
jl
mov
inc
push
ss
jbe
xor
fnstcw
push
or
pop
inc
pop
lcall
es
add
enter
push
sub
ds
ja
out
mov
insb
jb
or
or
ret
xor
inc
and
cmp
fnstcw
xchg
lcall
xchg
clc
jg
je
and
faddp
xor
imul
loopne
or
lcall
out
or
dec
push
mov
nop
sbb
movsl
shl
popf
imul
sbb
idivb
cmp
xchg
inc
pop
add
int3
pop
mov
mov
and
inc
mov
into
test
in
outsl
lea
inc
xor
pushf
mov
or
imul
jb
jge
popf
test
and
inc
sbb
jne
repz
fwait
pop
pop
in
pslld
jb
nop
lret
cmp
dec
and
or
arpl
xchg
int
lods
loop
pop
loop
lret
inc
sub
rep
pop
cmpsl
lahf
inc
fstpl
xchg
cwtl
mov
mov
cmp
loope
cmp
jmp
jns
inc
cwtl
jl
pushl
je
daa
xchg
jp
fcomps
movsb
jge
int
push
adc
mov
aad
enter
xchg
lods
scas
xchg
add
pop
jle
sbb
fcoml
mov
jne
jb
add
pop
dec
jecxz
js
cltd
sub
pop
jnp
mov
les
cmp
ret
xorb
xchg
lock
dec
stos
scas
jae
pop
sbb
cmp
call
test
mov
fdivs
mov
ficoml
frstor
adc
js
leave
push
xor
pop
push
or
jmp
dec
mov
enter
inc
jno
insl
out
scas
pusha
mov
cmp
push
add
cld
ljmp
cmp
lods
jnp
ret
cmc
rcr
insl
int3
jae
mov
xor
fs
mov
dec
mov
push
ja
sarl
cs
imul
jae
popa
push
dec
roll
or
jl
pop
loop
maxps
inc
mov
out
imul
add
mov
sarl
push
out
dec
shr
pushf
negb
xor
adc
aas
mov
sti
fucom
or
sbb
jl
adc
sub
lahf
jp
cli
subb
insl
jle
test
imul
mov
movsl
sbb
sbb
loopne
inc
cmpsb
mov
cmpsb
adcb
shlb
or
push
lods
subb
adc
cs
sub
enter
lods
clc
imul
xchg
ret
repnz
jmp
faddl
fwait
jns
js
aam
mov
int3
fwait
sbb
fcompl
out
cmc
xor
xor
or
sub
cmp
jle
jne,pn
iret
or
ljmp
rorl
push
jns
sbb
out
frstor
xor
cwtl
xorl
stos
fsubrs
addl
or
into
scas
repz
sub
cltd
mov
andl
cmp
dec
je
jae
mov
cltd
sbb
and
movsl
mov
dec
cmpsl
or
jb
cltd
pushf
or
imul
mov
pop
lret
xor
and
pop
xor
sub
pop
andl
cmp
jp
pop
loope
add
lods
ss
test
insb
mov
aad
repnz
inc
mov
push
call
je
xchg
mov
sbb
sbb
adc
lret
cmp
mov
fmulp
and
mov
lock
or
dec
jo
cmp
stos
lods
pop
sbb
imul
inc
adc
mov
xchg
mov
mov
ja
lods
inc
sbb
inc
insl
jne
xchg
and
sbb
jp
dec
mov
mov
pushf
add
ret
jb
stos
xor
mov
pop
repnz
nop
adc
jns
or
icebp
push
cltd
cmp
loopne,pt
lret
mov
movsl
pop
jae
into
aas
ljmp
and
mov
aad
dec
mov
sub
and
sbb
pusha
icebp
jl
cld
jo
nop
push
imul
andl
push
add
imul
ret
fs
xor
lods
stos
mov
push
ret
cmpsb
sub
mov
push
movsb
jmp
arpl
loop
mov
xchg
outsb
jns
pop
ljmp
or
ljmp
jne
push
mov
ss
mov
lock
cmpsb
jmp
adc
pushf
rcll
cmp
or
xchg
inc
or
inc
add
pop
inc
or
imul
jecxz
mov
xchg
insl
out
ja
push
in
push
push
jl
enter
div
mov
inc
inc
sub
std
push
and
aam
sbb
pop
add
xchg
adc
jo
es
test
xchg
cmp
mov
or
bound
popa
jl
sbb
lahf
inc
ret
dec
push
in
cli
pop
aad
inc
push
dec
or
les
imul
mov
adc
js
dec
aas
fimull
stc
in
and
inc
repnz
xor
pminub
mov
cmp
or
in
lock
and
clc
ss
ffreep
out
adc
data16
adc
je
add
and
and
enter
sub
andb
dec
inc
xor
sub
imulb
adc
out
push
xchg
xor
std
iret
adc
pcmpeqw
mov
mov
xchg
dec
mov
and
xchg
adc
cmpsb
rorl
arpl
outsl
push
mov
fimuls
xchg
faddl
mov
aad
xchg
dec
fmul
pop
roll
sub
jo
pop
xchg
test
cmp
or
push
je
xchg
push
add
and
push
pop
push
dec
xor
loop
mov
lret
jnp
rol
inc
fxam
jae
mov
jp
call
pop
out
mov
xchg
rol
xor
mov
out
sbb
popf
cltd
mov
mov
xchg
xor
sub
cmpsb
lods
sbbl
ljmp
sahf
jne
ficoms
ret
fisttpll
ret
jle
addr16
int
gs
add
ret
test
xor
fwait
outsb
and
test
xchg
test
add
xor
mov
push
inc
pushf
mov
xor
inc
cmp
xor
xchg
or
inc
shll
jbe
loopne
aaa
push
shl
add
push
je
es
jne
mov
iret
mov
push
inc
arpl
cmp
pop
loop
into
mov
nop
mov
or
scas
mov
dec
pop
jg
push
xchg
push
mov
mov
dec
imul
pop
mov
nop
push
outsb
adc
rclb
cmc
adc
jno
rcrl
in
icebp
popf
jo
push
ret
mov
mov
test
add
jmp
loopne
and
lods
ret
cmp
rcll
xor
inc
mov
and
and
inc
and
sub
movb
dec
shrb
push
outsl
pop
cltd
int3
sub
test
push
xor
cmp
pop
adc
mov
mov
jae
leave
cmpsl
add
cmpsb
xor
adc
inc
pusha
pop
xor
push
pop
pushf
into
ja
bound
gs
dec
inc
add
in
xchg
sub
cmp
movsl
lret
pop
sbb
andl
lret
seto
fildl
aad
xchg
xor
push
testl
sub
mov
dec
lock
xor
popf
rorl
push
sub
pop
and
lcall
xchg
test
ret
mov
dec
or
in
push
mov
cs
lock
cmpsb
data16
cmp
stc
fmull
xor
jmp
push
std
inc
jmp
cmpsb
pushf
popa
repnz
inc
or
scas
es
or
mov
gs
repz
sbb
dec
xchg
fs
lcall
jg
jg
and
jmp
or
hlt
push
fstl
push
or
pushf
push
jbe
cmpsl
or
pop
push
xchg
mov
pop
into
dec
add
cwtl
outsb
call
sti
jno
xchg
push
mov
leave
js,pn
xorl
mov
cmp
jp
dec
cmp
pop
push
xlat
jl
mov
pop
jae
je
mov
mull
dec
mov
leave
pop
inc
push
arpl
dec
cld
arpl
cmc
jae
dec
andb
and
loopne
dec
leave
sti
sub
jmp
std
icebp
mov
jle
mov
mov
ja
sub
jg
lret
pushf
ficompl
jge
pop
jmp
hlt
out
sub
push
or
je
es
xchg
mov
add
in
xor
in
ret
fnstcw
out
jmp
in
and
or
push
jb
mov
mov
fwait
call
lds
mov
jae
sub
cmpsb
sbb
adc
adc
test
popa
mov
out
into
flds
jns
push
daa
les
lcall
inc
and
jmp
cmpsl
mov
jbe
pusha
dec
call
lods
cli
and
mov
or
jbe
inc
add
push
test
aaa
mov
fwait
icebp
dec
popa
xor
gs
cmp
add
enter
jle
stos
icebp
addl
jl
sub
fcom
nop
pushf
repz
lods
push
cld
sub
jns
lcall
sarl
sub
inc
and
cld
and
iret
repz
jae
jb
adc
cmp
cli
push
shll
aaa
push
dec
mov
push
loope
ds
test
dec
sahf
jae
jns
dec
mov
push
icebp
pop
pusha
repz
sahf
jno
outsl
cmp
in
or
mov
pop
pop
arpl
sar
cli
cltd
out
jg
movsl
add
aad
jecxz
int
scas
mov
shll
pop
lea
sbb
inc
xor
jge
xor
jp
test
aam
push
add
out
push
and
pushf
mov
daa
inc
adc
hlt
mov
cmp
xchg
pop
mov
fsubrl
sub
repz
jl
insb
jae
arpl
subl
ret
in
repz
int3
adc
sub
sbb
or
jl
insb
jae
arpl
subl
ret
in
repz
int3
adc
sub
sbb
or
jl
insb
jae
arpl
subl
ret
in
repz
int3
adc
sub
sbb
or
jl
insb
jae
arpl
addl
pushf
mov
adc
sbb
inc
imul
inc
sub
sbb
push
cltd
icebp
test
stos
fnstcw
add
jnp
dec
cmp
sub
imul
cltd
sti
xchg
mov
mov
shrl
jnp
dec
lcall
sub
cmp
sbbl
iret
scas
fdivs
sahf
out
mov
dec
daa
cmp
insl
sbb
ret
aam
or
mov
nop
xor
lods
je
pop
add
and
mov
cmp
or
xor
into
dec
mov
je
pop
jnp
mov
shll
sbb
jmp
cli
push
int
and
push
push
xchg
push
cmpsb
push
dec
out
outsb
push
pop
insb
or
push
pop
lret
or
fistpl
incb
fwait
mov
stc
push
mov
fcmovbe
sub
adc
out
push
xor
fstpt
clc
fldcw
mov
sbb
cmc
pushf
push
les
in
addl
and
mov
jmp
jnp
dec
push
pop
dec
sub
sbb
or
jno
cmpsl
fldt
mov
add
push
sbb
insb
sub
jp
sbb
fsub
stc
cwtl
fsubrs
popf
stc
mov
pop
outsb
add
cmp
push
or
int3
lods
aad
mov
out
mov
sub
js
or
pop
cmp
jns
mov
cltd
sti
test
stos
fnstcw
or
jnp
dec
cmp
sub
imul
cltd
sti
test
stos
fnstcw
or
push
andl
mov
lret
in
mov
dec
rolb
or
dec
xchg
jg
jae
jb
pushf
mov
in
pop
mov
jbe
es
out
mov
and
push
sub
pop
les
mov
mov
jmp
cs
popa
mov
dec
ja
pop
jmp
or
movsb
lods
lea
or
sbb
mov
cmp
ljmp
push
mov
and
push
iret
gs
push
adc
mov
mov
xchg
stc
jo
inc
lods
ja
addr16
jae
loope
fildl
movsl
push
dec
aam
repnz
lahf
xchg
jno
xchg
fisubrl
movsb
cmp
lock
adc
jns
sbb
mov
push
mov
shlb
int3
orl
jge
nop
cmp
jbe
out
mov
cli
imul
mov
push
aas
loope
inc
cmpsb
int3
xchg
xlat
add
mov
gs
and
mov
out
iret
and
inc
inc
xor
loope
fnstsw
pop
fidivl
push
jne
push
cmp
mov
stc
inc
xor
ss
mov
fwait
pop
lret
or
sbb
inc
jge
and
leave
into
mov
xor
inc
popa
mul
push
xor
dec
fadd
cwtl
clc
in
mov
push
sti
adc
add
sbb
and
lods
lods
mov
jle
jbe
sub
hlt
or
test
call
shrb
cltd
push
imul
cld
pop
push
addr16
stc
xchg
sbb
jnp
adc
sbb
pop
fnsave
test
and
test
sbb
push
jg
or
insl
test
push
jb
repz
frstor
scas
mov
cmp
outsl
cmpsb
mov
gs
cltd
in
inc
or
xchg
adc
add
mulb
cwtl
cmpsb
push
loope
js
and
mov
insb
and
inc
aaa
pop
jg
or
sub
jp
mov
adc
dec
add
dec
mov
add
jb
cmpsb
adc
jno
mov
dec
clc
jne
cwtl
xchg
mov
popf
lds
pop
aas
insl
mov
and
popf
out
enter
xor
or
push
sbb
aam
out
je
sbb
call
sub
pop
insl
hlt
pop
xchg
mov
cmpsb
ljmp
push
push
and
push
sahf
sbb
cmp
sbb
jecxz
clc
xor
mov
fisubl
aas
stos
das
andl
adc
inc
aam
inc
jb
in
nop
inc
mov
add
shlb
xor
sub
call
jmp
push
je
jmp
lcall
mov
lock
ss
inc
push
ljmp
xchg
jecxz
mov
mov
push
pushf
clc
or
inc
dec
adc
ljmp
mov
popf
ret
cltd
cmp
imul
mov
mov
imul
das
mov
push
mov
mov
inc
push
outsl
cmp
sub
call
js
jecxz
ds
mov
xor
loopne
int3
mov
or
jne
ljmp
std
pop
loop
mov
test
adc
mov
fsubl
pop
loope
xchg
fimull
out
add
adc
and
push
adc
xchg
arpl
fwait
jb
sub
daa
fnstsw
push
inc
fs
sarl
and
popa
fdivl
ret
mov
mov
std
outsb
mov
cmc
jp
fcomp
mov
in
sub
xor
or
push
aaa
jecxz
scas
sbb
jge
or
jae
sahf
sbb
mov
mov
pop
loope
std
scas
mov
pop
cmp
dec
insl
sbb
jl
clc
mov
push
pop
loopne
inc
lock
or
xchg
push
pop
push
mov
jecxz
mov
xchg
add
adc
xchg
arpl
sub
lock
gs
xor
mov
push
xor
mov
notb
cld
outsl
adc
xchg
mov
test
lret
push
lods
mov
and
sbb
mov
bnd
push
mov
sub
loopne
xchg
and
imul
jnp
call
arpl
cmc
fs
mov
sti
jae
pop
les
js
xchg
mov
sbb
notl
jg
push
popa
ja
ret
mov
cmpsl
test
pop
inc
call
mov
mov
mov
inc
or
xor
popf
inc
pop
xor
pushf
xlat
push
push
gs
aam
mov
mov
inc
inc
add
jae
iret
pop
rep
fnsave
jge
das
int3
mov
bound
mov
mov
test
adc
push
jno
adc
pop
sbb
xchg
mov
jne
push
ja
lea
and
add
adc
fwait
leave
mov
jmp
inc
es
sbb
fistpll
mov
popf
and
push
adc
leave
pop
imul
loopne
in
inc
dec
shll
dec
negb
push
outsl
rcrb
mov
push
xlat
into
push
insl
addr16
push
sarl
ror
and
cmp
pop
pop
aam
inc
ss
push
add
popf
push
mov
mov
mov
repz
ja
jecxz
push
lock
push
lea
add
jnp
insl
rcrb
mov
jno
lods
ss
jge
push
xlat
lods
sbb
sti
fnstcw
cwtl
dec
and
pusha
mov
mov
filds
aad
inc
call
inc
sub
sti
out
xor
lods
or
subl
aam
and
push
pop
push
fldcw
shr
push
out
lods
fcmovnbe
dec
sub
mov
rclb
test
push
xchg
xlat
cmp
and
jb
scas
push
repz
xor
call
icebp
test
hlt
ds
jl
xor
xchg
lahf
rolb
push
cmc
dec
jg
ljmp
pusha
pop
outsl
inc
xlat
inc
mov
inc
js
push
cmp
lods
add
inc
mov
xchg
divb
movsl
out
xor
cmp
mov
xor
xchg
test
negl
or
rcrb
scas
xlat
aas
loopne
ljmp
xchg
adc
mov
mov
repz
cmp
cs
or
les
xorl
jg
sti
outsl
push
cwtl
addr16
ds
cmp
loope
cmp
mov
push
mov
push
daa
addb
xor
or
mov
movsb
pop
inc
addr16
inc
fbld
int3
jmp
in
xchg
shll
adc
data16
je
lahf
mov
push
sub
fwait
adc
push
dec
xacquire
push
aaa
mov
out
xchg
mov
sbb
test
jnp
and
and
jmp
mov
loope
mov
lods
loopne
call
fcom
xchg
lahf
subb
push
dec
mov
lcall
jp
ds
push
repnz
lahf
enter
adc
int
cmp
xor
mov
out
pop
fbstp
in
out
jge,pt
ret
std
sti
gs
out
xchg
scas
sahf
loop
out
cmp
fs
add
mov
xor
hlt
scas
fsts
scas
adc
rclb
fistpl
push
mov
int
sub
scas
and
add
jne
lds
xchg
push
je
roll
ds
lods
inc
pop
dec
sub
mov
inc
iret
fstp
dec
mov
cmc
rcrb
clc
mov
and
dec
add
and
mov
and
jns
lcall
cs
sahf
or
and
ds
pushf
ret
leave
cmp
mov
adc
std
xor
das
dec
stc
imul
xor
movsb
sub
insl
jb
fwait
adc
push
inc
rorl
adcb
cmp
cmp
dec
pop
inc
dec
push
push
cmpsb
not
negb
cwtl
loope
sbb
data16
in
clc
mov
into
js
aad
cmp
sub
mov
cmpsl
lret
fwait
repz
lods
sub
loopne
xor
xchg
mov
mov
out
fbld
lret
mov
or
xor
sarl
inc
loopne
mov
mov
pusha
std
pop
fsubrs
jg
loopne
mov
je
repz
pop
mov
dec
mov
jg
mov
fdivp
pop
popf
invd
inc
mov
andl
mov
inc
push
inc
pushf
fldl2e
or
sbb
lea
and
push
call
mov
pop
xlat
sub
or
cmpsl
dec
mov
mov
movsl
mov
mov
addr16
stc
mov
lret
mull
subl
addr16
pop
cmp
fsubr
les
aam
es
xor
cmp
lahf
cld
loop
adc
dec
xor
aam
add
sub
rdpmc
mov
xor
cwtl
and
jl
imulb
nop
mov
leave
test
cmp
cmp
dec
jb
push
mov
jl
push
lods
dec
xor
mov
xchg
mov
ja
in
inc
xor
mov
mov
mov
adc
mov
or
pop
lret
jg
lods
lock
inc
aas
mov
xor
mov
cld
xor
daa
or
jp
rcll
stc
adc
jno
pop
bound
adc
shll
clc
mov
es
inc
lret
shll
push
mov
in
setne
lahf
lods
ja
sub
out
jecxz
in
outsb
or
jle
inc
iret
mov
push
inc
mov
loope
call
sbb
pop
mov
into
icebp
adc
insl
sub
jp
xchg
out
lret
push
inc
mov
ds
mov
add
and
call
fmull
lahf
xchg
xor
or
shrb
movsb
fcmove
mov
push
gs
jge
jae
aaa
cmp
cmp
repz
mov
sub
outsb
or
das
jne
lea
or
inc
or
jecxz
add
sahf
cltd
loopne
gs
loop
je
mov
mov
sarb
dec
test
orb
les
xchg
outsl
aam
addr16
dec
test
mov
call
imul
loop
dec
fsubp
pop
ret
jo
lds
or
mov
push
outsl
add
fs
and
fs
sbb
push
cld
pop
mov
insl
or
cmp
inc
or
jae
out
sub
cltd
enter
sub
mov
jo
nop
mov
dec
mov
lock
mov
lahf
inc
rorl
test
call
cwtl
mov
dec
sbb
dec
popl
daa
repnz
inc
cmp
scas
int
mov
and
dec
or
sub
movsl
ss
lret
repnz
adc
push
lock
cmp
test
xor
loop
push
test
add
and
test
js
in
lock
out
in
pop
clc
push
dec
cmp
jle
xor
add
mov
subb
push
insl
lret
ret
mov
fsubrp
test
rcl
fcoms
in
push
sarb
add
ret
jle
test
loopne
int3
mov
adc
push
xor
lret
das
sub
inc
cmpsl
jae
inc
add
repnz
pop
mov
bound
mov
das
or
rcrl
mov
jl
mov
mov
test
mov
cmpsl
arpl
jne
inc
lahf
pusha
dec
add
sub
je
adc
dec
push
mov
decl
outsb
fnstcw
bound
int3
std
pusha
gs
jge
ficomps
mov
add
push
add
pop
or
push
test
aam
aad
and
stc
lahf
loopne
das
pushf
mov
outsl
loopne
cmp
and
add
sub
outsl
cltd
imul
mov
dec
adc
lea
mov
aas
hlt
cmp
rcll
shlb
in
vmovaps
popa
push
das
jl
bound
in
call
in
xchg
add
fs
mov
push
dec
mov
loope
push
mov
adc
out
xchg
mov
pop
testl
push
ja
sub
movsw
push
add
mov
in
dec
sbb
cmp
ja
or
or
aas
pop
cmpb
cmp
xchg
cld
jae
add
cs
neg
ficompl
jp
jns
fidivrl
push
mov
sbb
les
sbb
mov
lcall
test
into
in
mov
jl
scas
push
cs
and
xchg
mov
or
aaa
or
dec
mov
setae
xor
and
push
cmp
iret
push
mov
mov
inc
and
and
add
jae
dec
xchg
mov
mov
popa
jmp
int3
fs
mov
lods
scas
inc
and
ds
add
icebp
pop
adc
icebp
outsw
jae
fistps
int3
in
fdivrs
cltd
adc
jl
pop
jle
inc
and
dec
add
bnd
fisttpll
cs
pop
mov
fscale
mov
enter
inc
pop
test
sub
and
mov
sahf
adc
sbb
add
inc
fs
test
jnp
inc
pop
leave
cwtl
push
pusha
jb
and
inc
jbe
sub
out
fldl
ret
sub
jnp
loope
jnp
ret
mov
jl
fisubrl
cs
in
fs
cltd
icebp
add
jl
adc
inc
and
pop
scas
jle
dec
jmp
fisubrs
inc
push
sti
inc
mov
gs
shll
dec
and
bound
mov
xchg
pop
cmc
jae
push
dec
dec
and
fldl
add
cli
enter
mov
adc
or
aaa
fs
mov
popf
es
mov
mov
or
or
pop
ds
aaa
test
cmp
mov
divl
push
insl
xchg
mov
mov
xchg
sbb
enter
dec
lret
roll
and
or
ss
ficoml
adc
hlt
mov
mov
adc
pop
jb
and
dec
sti
cmpsl
ret
sbb
lahf
aam
mov
push
mov
sarb
nop
mov
pop
mov
cli
xchg
pop
and
dec
mov
negl
std
xor
or
je,pt
xchg
jg
and
or
int3
stc
or
stos
inc
push
sarb
clc
push
nop
fbstp
mov
cmp
cwtl
bound
push
outsl
mov
sub
xchg
sub
in
jle
mov
ljmp
push
ljmp
out
xor
ljmp
aad
out
pop
pop
pop
mov
dec
ret
push
fucom
xchg
clc
das
insl
arpl
or
mov
adc
jl
incl
mov
pop
push
xchg
pop
les
sub
lret
mulb
xor
ja
call
scas
iret
add
aaa
inc
es
mov
xchg
inc
mov
notb
jae
into
add
ret
mov
icebp
adc
pushf
cmp
sub
mov
mov
xor
jg
imul
push
into
repnz
aaa
inc
into
pop
dec
mov
jb
push
add
call
shll
cmp
dec
sbb
imull
test
repz
xchg
aad
pusha
scas
ja
or
inc
sti
sub
movl
cs
inc
bound
dec
xlat
push
les
cmp
sbb
pushf
push
mov
into
xchg
inc
addl
pushl
movsb
mov
sub
mov
push
cld
test
cld
enter
outsb
cmp
xor
jl
cltd
xor
dec
js
jno
imul
test
int
add
mov
faddl
fisubl
and
in
dec
ret
or
imul
lods
fwait
xchg
cs
movsl
out
lret
cmp
pop
and
pop
add
mov
jne
push
or
pop
mov
sbbl
lret
mov
xlat
imul
std
outsl
rclb
rolb
das
fwait
and
and
mov
popf
imul
dec
jl
dec
icebp
lea
lods
push
int3
fcmovnbe
aas
push
cld
adc
jo
or
iret
xchg
fstl
inc
and
imul
pop
and
mov
adc
push
fistpll
jne
cmp
shlb
mov
lret
xchg
pop
hlt
clc
lods
daa
dec
dec
adc
xor
jecxz
pop
idivl
lret
cmp
cmpl
xchg
iret
roll
sbb
cmp
mov
mov
pop
loopne
fsubs
sti
out
push
fdivl
in
shrl
push
jno
fmull
jb
jp
push
lea
out
aam
push
xor
int
clc
adc
into
icebp
icebp
sub
into
xchg
xchg
iret
cmc
fdivs
in
pop
sti
ljmp
cwtl
out
xlat
in
xor
xor
stc
ja
out
lds
jmp
cmp
repnz
jo
mov
pop
add
add
scas
jp
mov
sahf
and
popf
imull
pop
and
cmp
xor
arpl
sti
std
out
mov
mov
jl
mov
fistps
xlat
xchg
mov
es
pop
fidivrl
int
data16
lock
psubsb
cmc
insb
ffree
cmpsb
adc
push
jbe
lods
test
add
int
jl
out
and
popa
stos
ret
pop
bnd
push
inc
mov
jge
ss
jns
ds
dec
sti
in
test
clc
fidivrs
sbb
adc
sub
fsts
mov
and
xor
sbbb
mov
xor
and
cld
sub
xchg
clc
ret
and
les
push
xor
or
aaa
rolb
mov
jb
mov
aaa
dec
inc
cmp
jle
rcl
add
cmpsl
orb
stc
lcall
out
and
cld
xchg
scas
cmc
roll
ljmp
lds
mov
cmpsb
mov
mov
cmp
sbb
enter
int3
mov
loopne
fmuls
mov
inc
lret
mov
mov
mov
and
add
add
outsl
sbb
push
sub
ja
sub
incb
push
sahf
xor
cmovb
inc
out
stos
push
test
fs
fldt
mov
scas
repnz
or
sbb
mov
inc
ret
xchg
fdivrp
sub
lahf
out
fadd
clc
ficoms
mov
in
repnz
mov
mov
sub
and
imul
repnz
lcall
xchg
jge
cmc
in
roll
jl
push
mov
cmp
or
loop
imul
insl
mov
xchg
add
dec
aas
inc
push
and
xchg
out
pushf
stos
mov
in
pop
cmp
cmpl
arpl
in
mov
rclb
jae
leave
mov
sub
clc
les
stos
lret
and
sbb
loop
insb
inc
push
pushf
push
out
xchg
out
xor
and
lret
out
dec
stc
mov
in
mov
xchg
mov
ret
push
push
in
stos
fsubl
test
sbb
cmp
shrl
outsl
js
dec
sub
dec
xchg
ja
cltd
ret
rcl
pop
sbb
inc
inc
pushf
loopne
jmp
jbe
add
sti
jno
mov
jb
adc
jp
push
ljmp
dec
dec
testb
add
or
pop
push
add
dec
or
push
or
test
cmpsl
and
push
lea
clc
push
push
sbb
outsl
xchg
xor
popa
pop
mov
pop
mov
and
dec
mov
cli
mov
test
shll
js
or
or
xchg
fs
add
cwtl
add
dec
mov
sub
outsl
fwait
sbb
xorl
mov
outsb
sub
adc
scas
sti
add
mov
cmp
or
popf
lock
mov
test
int
xchg
in
mov
movl
movsl
add
fidivrl
mov
mov
cwtl
in
cmp
ljmp
xor
scas
out
add
cmp
adc
xor
xchg
xlat
fs
mov
push
jnp
into
push
xor
xor
leave
jecxz
cmp
loop
xor
mov
in
or
ljmp
adc
pusha
test
pop
incb
pop
sub
mul
jnp
incb
cmc
xor
jae
push
je
test
adc
add
or
pop
push
test
inc
or
push
imul
cs
or
les
repz
jmp
jnp
dec
and
cmp
jns
mov
cltd
sti
test
stos
fnstcw
or
jnp
dec
cmp
sub
imul
cltd
sti
test
stos
fnstcw
or
jnp
dec
cmp
sub
imul
cltd
sti
mov
stos
sarb
imul
dec
sub
imul
push
add
mov
inc
push
je
fs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
test
xchg
cmp
cmp
fldl
mov
clc
gs
xchg
or
dec
aad
in
cmc
xchg
add
push
fadds
push
clc
gs
xchg
and
push
aad
in
cmc
cwtl
cmp
xor
mov
xorl
roll
add
arpl
jo
jno
inc
bound
out
sbb
cmp
cmp
mov
jne
and
lahf
ficoms
or
push
ljmp
loop
je
lds
call
inc
lea
lcall
fsubs
lds
ss
mov
push
fwait
add
clc
sbb
imul
mov
push
inc
ja
lods
fldcw
adc
adc
ja
movsl
shl
ret
cwtl
cs
jo
cli
ja
inc
and
mov
fadds
aas
mov
lds
js
jno
addl
rclb
gs
xor
insl
inc
pop
jecxz
repz
and
test
imul
sub
out
adc
les
fistps
sub
sub
es
adc
sub
jns
jae
pop
mov
adc
sbb
cmp
pop
shrl
shll
dec
aad
in
cmc
cwtl
add
test
fadds
push
clc
gs
xchg
cmp
dec
aad
in
cmc
cwtl
add
test
fadds
push
clc
gs
andb
fs
fs
mov
mov
jle
jae
imul
xchg
inc
sub
dec
fstpl
outsb
fildl
cmp
stc
xchg
jae
addr16
push
xor
inc
fdiv
mov
loope
rol
inc
test
nop
xor
cld
sbb
lahf
pop
mov
bound
out
scas
pop
cmp
push
pop
sbb
enter
in
inc
ja
mov
sarl
dec
cmpsl
cmpsl
push
inc
pop
xor
jb
popa
lahf
xor
cmp
out
push
fdivrs
xchg
sub
in
xor
insb
pop
subl
cmp
ljmp
jl
sbb
mov
inc
push
inc
or
dec
scas
dec
xchg
aas
scas
movsl
sbb
fistps
jmp
fsubs
cmp
out
push
movsl
mov
dec
inc
push
sub
dec
jle
hlt
cld
xor
inc
sbb
popf
xchg
cmp
jg
gs
out
or
xchg
cmp
fdivp
fwait
jmp
xlat
inc
jmp
mov
cmp
xchg
fidivrl
inc
push
cli
insl
lret
sahf
fcomps
insl
cs
stos
jb
stc
lock
outsb
push
imul
test
mov
or
cmp
mov
lret
add
sub
xchg
dec
xchg
add
pop
xor
mov
mov
int
xchg
mov
les
add
out
mov
enter
pop
dec
es
mov
popf
and
js
jecxz
loopne
pop
lahf
movb
push
mov
arpl
pushf
arpl
push
xor
push
aam
idivl
xchg
mov
popa
or
repz
xor
scas
inc
sub
cmp
pop
sti
sarb
cmp
sbb
fwait
xchg
mov
stos
dec
or
out
out
mov
mov
in
fwait
and
sbb
jnp
jp
fisubrs
or
jno
jae
xor
loopne
jnp
dec
inc
enter
sbb
xchg
xchg
data16
inc
fldcw
int
and
pop
xor
in
sub
add
loopne
sahf
in
lret
xor
add
call
shlb
sbb
push
xchg
ds
scas
lea
push
in
fisttpl
inc
mov
outsb
rcll
jmp
lods
cmp
mov
mov
push
push
ffreep
or
push
sub
or
subl
xchg
in
bound
push
repz
mov
cmp
cli
push
mov
xor
rcr
mov
dec
adc
sbbl
jle
insl
lods
jmp
outsb
sahf
cmpb
ljmp
mov
mov
gs
adc
into
sbb
ss
mov
sti
imul
add
or
cmpsl
mov
pop
sbb
jg
ret
jns
insb
aam
mov
fwait
mov
mov
lahf
dec
into
push
repz
test
sub
test
movsl
fadd
sarb
xor
nop
out
mov
xchg
or
in
mov
mov
iret
adc
es
mov
lahf
cltd
rorl
cmp
ja
jmp
xchg
dec
fisttpll
jno
cli
cmpsb
dec
ret
and
jge
pop
push
mov
test
add
xchg
test
popf
add
js
aad
int
int
mov
mov
rcrl
push
scas
icebp
dec
mov
dec
rcr
je
xchg
push
test
dec
mov
and
inc
jbe
xor
mov
dec
es
and
test
stc
lret
or
dec
jecxz
addr16
pop
mov
cmpsl
push
rcrb
enter
push
pop
lcall
jns
fdiv
or
inc
lods
in
sbb
cltd
adc
cs
das
push
fs
test
xchg
or
jle
mul
and
sbb
fsubr
cmpb
jo
jge
pop
mov
aaa
xchg
out
xor
mov
mov
mov
enter
dec
jecxz
pop
add
out
les
xchg
mov
out
fs
and
loop
ret
je
stos
mov
not
lret
lds
xor
sarb
dec
stos
inc
lcall
xchg
sub
pusha
ds
call
loop
imulb
enter
push
imul
gs
dec
lret
test
lcall
lcall
in
jnp
inc
dec
loop
pop
fdiv
push
pop
mov
ja
in
stos
and
lds
arpl
les
cmpsb
adc
pop
pop
cs
hlt
ss
mov
jae
arpl
push
in
jmp
xchg
pusha
cmp
test
push
loop
jne
or
add
dec
fnstcw
jnp
cmc
imul
aaa
add
adc
pusha
dec
pop
pop
jo
pop
mov
adc
xor
mov
lds
cmpsl
data16
push
dec
jp
jns
mov
filds
das
addr16
es
adc
dec
lock
inc
mov
iret
cmp
inc
imul
in
and
jmp
adc
adc
arpl
ret
in
mov
outsl
bound
push
jge
fcmovbe
adc
mov
outsb
and
out
mov
fsubrl
std
and
mov
movsl
dec
pop
test
mov
mov
les
cmc
dec
xchg
mov
fmuls
adc
mov
shll
cmp
ret
scas
sbb
scas
sti
das
jns
dec
jg
ficomps
jo
sti
mov
into
int3
aaa
in
mov
test
xchg
outsb
aaa
or
pusha
cld
xlat
inc
xchg
lahf
lret
adc
icebp
fsubrs
ljmp
mov
popa
cmp
jno
lret
sub
inc
push
jmp
mov
andb
push
ret
push
sbbl
cmpsb
pop
ds
fcompl
out
inc
faddl
cwtl
mov
jbe
in
test
push
aaa
jmp
xor
add
cld
cmp
shll
orl
push
ljmp
sub
imull
out
dec
andl
push
sub
std
sub
xlat
insl
mov
es
inc
add
fwait
mov
cltd
ds
pop
orb
mov
mov
fs
pop
jne
subb
dec
aam
lret
sbb
fs
mov
sbb
or
fstpl
sub
add
xor
out
call
and
jns
hlt
adc
pushf
sub
adc
pop
clc
scas
out
push
mov
cmc
sbb
add
jns
and
shll
and
mov
jle
jecxz
shlb
loopne
inc
cmp
rol
fwait
shrl
jno
test
dec
in
call
jge
cs
in
ljmp
push
lock
mov
popa
movsb
inc
movl
mov
aaa
cld
bound
fcomps
cmpsb
js
add
mov
cmp
jp
imul
stos
dec
mov
inc
pop
rorb
mov
sub
movsb
and
adc
mov
sub
ja
xor
push
loopne
inc
out
aam
js
dec
les
into
mov
insb
ror
out
jecxz
mov
outsl
stos
enter
rcl
fcmovu
out
cmp
insl
iret
cmp
mov
dec
inc
call
lret
or
push
adc
in
gs
je
int3
out
stos
mov
ret
dec
xlat
rorl
aad
dec
xor
pop
ds
shll
rol
xchg
sbb
pop
xor
sub
movb
rcrb
xchg
push
ret
push
and
inc
push
lret
xor
sub
mov
jns
add
pop
sahf
dec
mov
jg
shrb
repz
and
dec
fidivrs
lock
inc
fldt
pop
push
jmp
cltd
ret
nop
push
cmp
fisubrl
in
mov
insl
adc
ss
and
js
lock
loopne
jmp
int3
cmp
cmp
arpl
sub
mov
or
sbb
xlat
xchg
in
jg
hlt
mov
push
scas
inc
dec
jns
cmpb
fdivrl
xchg
dec
outsb
mov
cmp
mov
loop
aaa
pushf
adc
adc
sub
dec
mov
mov
pop
xor
and
mov
shrb
int
push
mov
stc
enter
xchg
or
outsb
fcom
cmp
imul
cmp
stc
pop
or
cmp
sub
push
pop
add
mov
add
jno
mov
hlt
cmpsl
mov
sbb
xor
stc
lahf
xacquire
roll
sub
cli
call
or
xor
push
fldl2e
popf
push
gs
mov
test
mov
ret
mov
pop
sbb
addl
stos
jmp
adc
divb
repz
fistpll
std
lahf
or
add
adc
xor
push
adc
jp
iret
ret
ret
insl
lahf
lods
and
jge
pop
sbb
lds
gs
aad
xchg
pop
ljmp
je
xor
mov
scas
out
std
shrl
outsb
mov
dec
push
mov
push
mov
pop
mov
inc
or
imul
pop
sbbb
lret
mov
mov
icebp
mov
arpl
push
ljmp
and
imul
pop
add
shrb
mov
cmp
roll
nop
sahf
jmp
xchg
leave
in
int3
jg
sbb
add
daa
push
rolb
es
or
dec
xor
out
mov
aas
pop
jnp
sub
int
jae
xchg
xor
nop
or
arpl
mov
jecxz
sahf
hlt
xchg
das
inc
les
jl
mov
andl
sbb
das
test
pop
push
or
cmp
pop
and
rorw
push
xor
jecxz
jle
iret
xor
and
or
dec
fnop
lretw
jmp
jnp
sbb
stos
cmpl
mov
sbb
stos
mov
add
test
imul
loop
mov
enter
roll
and
jnp
sub
enter
in
lods
enter
or
jle
or
mov
fdivs
sub
adc
push
mov
jp
xor
hlt
sbb
inc
lock
jno
shll
test
icebp
xor
js
jle
sbb
inc
shll
loope
outsb
insb
das
mov
sub
in
jb
popf
add
out
push
pushf
stc
int
pusha
pop
cmpsl
push
jge
ds
cmpsb
fsubl
mov
jge
inc
addr16
fimuls
lahf
push
adc
xchg
dec
push
mov
inc
sub
jne
dec
mov
inc
dec
hlt
loopne
mov
ljmp
jmp
sarl
add
sbb
and
xor
cli
inc
pop
lcall
shll
mov
leave
std
cmp
sub
sti
loop
ficompl
or
cs
sub
fdivl
adc
mov
loopne
mov
xchg
inc
mov
idiv
sub
push
mov
gs
int
add
das
out
xchg
mov
dec
or
add
and
pop
sahf
mov
xchg
shlb
xor
sbb
loope
adc
out
in
dec
sti
push
es
rclb
and
sub
mov
fidivl
push
enter
pop
jnp
imul
mov
lahf
iret
movsb
pushf
sbb
sub
mov
sub
sub
jo
push
aaa
imul
out
mov
loope
mov
sub
imul
sbb
pop
call
sbb
xor
fisubrl
and
fadd
outsl
cmp
gs
jle
push
sbb
mov
lret
pushf
or
mov
out
pop
and
popl
testb
jnp
push
es
js
cli
mov
add
mov
xchg
loop
lahf
jmp
or
rclb
pop
sbb
add
add
movl
and
push
aad
mov
movsb
testl
cmp
add
sub
cmpb
lcall
lret
je
icebp
pusha
push
js
inc
pop
or
das
pop
pop
pop
js
jnp
pop
sti
adc
shlb
inc
imul
jae
add
leave
loop
aam
pop
jg
cmp
out
bound
and
cs
jp
lock
mov
add
les
fldcw
cmp
push
cmp
add
shl
and
add
stos
jb
pop
stos
rcll
daa
or
mov
lods
inc
cltd
es
lock
jae
jl
jg
test
orb
fmuls
out
loopne
aas
out
dec
sbbl
mov
adc
ret
aaa
ret
inc
jne
inc
dec
adc
inc
xchg
popa
das
and
mov
aas
lock
nop
sbb
arpl
jge
stc
fs
add
mov
sahf
dec
sti
add
ljmp
mov
cmp
adc
aam
insl
adc
push
stc
jns
pop
cmp
inc
addr16
sahf
xor
mov
push
dec
sbb
and
mov
or
sbb
mov
and
mov
push
inc
or
jge
lds
inc
dec
fxtract
fdivl
cmpsl
scas
aad
shrb
lods
push
outsl
push
inc
daa
xchg
xchg
cmp
fistpll
pushf
or
pop
mov
test
outsb
daa
xlat
cwtl
push
je
xor
pop
mov
add
xchg
mov
dec
ss
mov
add
or
mov
gs
sub
add
scas
pop
mov
int
call
push
aam
in
sub
sbb
xchg
lahf
inc
adc
dec
gs
mov
jb
pop
sub
stc
xor
setbe
mov
dec
xchg
xchg
and
sarl
in
inc
adc
pop
jle
movsb
icebp
pop
leave
inc
mov
xor
xchg
sbb
xor
test
lock
pusha
movsb
push
xchg
sarl
jo
mov
jg
adc
lea
in
cmpsl
fsubrs
sub
cmpsl
gs
xor
or
pop
pushf
ds
jecxz
mov
sbb
jmp
lahf
je
adc
jp
fcompl
enter
and
pop
sub
pushf
pop
das
dec
mov
cmp
lret
xchg
jns
cltd
or
lcall
lahf
mov
fistpl
sub
dec
sbb
cld
jno
gs
sti
sub
aaa
imul
add
dec
mov
xor
lret
in
dec
pop
adc
mov
clc
mov
mov
push
mov
and
mov
or
insl
bound
mov
mov
mov
adc
pop
sbb
out
iret
inc
in
test
and
and
clc
fs
loope
fnstsw
cmpsl
stc
pop
xchg
and
negb
aam
inc
sarb
dec
or
and
mov
fcoml
cmp
push
or
inc
les
adc
outsb
rorl
test
bswap
into
push
add
stos
testb
pushf
mov
out
dec
icebp
fwait
mov
sarb
lea
icebp
and
loopne
or
jbe
ret
mov
ficoml
imul
in
cmpsb
out
sbb
mov
jb
aas
xchg
cmpsl
subl
or
aad
repz
inc
xchg
pushf
arpl
jnp
mov
cmpsb
lahf
xchg
pop
mov
hlt
mov
int3
sahf
dec
inc
sub
mov
push
push
enter
pop
push
mov
aaa
jl
mov
aas
iret
sahf
sarb
les
std
rol
mov
lcall
das
into
int
and
mov
adc
and
std
sarb
xor
xor
shll
jns
aaa
dec
btc
mov
sub
ffreep
pushf
fistl
dec
xor
sub
pop
adc
push
push
dec
gs
and
notl
arpl
cmpl
mov
jbe
sbb
popa
sbbl
imul
push
out
mov
sub
dec
jmp
mov
add
fwait
loope
bound
push
insb
jbe
and
ljmp
dec
pop
popf
add
icebp
jp
insb
sarl
stc
jbe
repnz
or
xchg
mov
popa
jg
pop
and
pop
fistpl
fidivrs
hlt
mov
pop
mov
and
movsb
fninit
cmc
jmp
mov
sti
mov
push
sub
mov
stos
jb
push
add
stc
adc
push
testl
div
add
push
arpl
scas
arpl
in
mov
testl
jp
cmpsb
in
xchg
iret
dec
push
dec
ss
or
mov
cmpsb
add
cmp
sbb
push
sub
adc
push
adcb
popf
mov
icebp
mov
pop
je
inc
mov
pop
xorb
sub
rcrl
aas
imul
movl
jb
ret
sbb
xchg
out
xchg
adc
ficompl
loopne
std
mov
lcall
mov
ljmp
dec
mov
aam
fwait
jns
jecxz
sub
pusha
push
aaa
int3
leave
or
loope
mov
mov
and
dec
insl
adcb
xor
xchg
xchg
cld
sbb
leave
loop
sub
ljmp
vdivps
cmpsl
arpl
int3
btc
inc
mov
jg
outsb
loope
fnstenv
andl
hlt
push
push
push
mov
ja
or
mov
mov
outsb
jne
xchg
push
fildll
jg
and
push
sub
popf
addb
jl
int
enter
mov
inc
pop
or
jmp
xchg
subb
jbe
cmp
jecxz
std
sub
movsl
pop
aas
imul
test
addb
imul
jbe
or
mov
adc
pop
mov
sbb
insl
inc
pop
nop
ret
out
sub
add
inc
aam
scas
sahf
repnz
scas
mov
in
jns
jbe,pt
xchg
mov
cmp
aam
xchg
jnp
xlat
popf
mov
jge
jle
shll
xor
jl
sub
in
sub
push
das
loope
ds
pop
imull
sti
lds
cmpsb
sub
xor
or
adc
mov
into
sbb
jne
rclb
das
fildll
cmp
outsb
dec
jecxz
std
rclb
pop
adc
jo
int3
ret
mov
pop
mov
ds
jp
repz
adc
outsl
pop
sbb
or
movsl
push
jmp
aas
cltd
cmp
and
xchg
pop
ficoml
sbb
mov
or
and
fistl
or
adc
jecxz
sar
sbb
fiadds
sub
push
dec
sbb
pop
and
jb
mov
dec
addb
insb
rcll
cmpsb
movsl
push
fildll
arpl
sub
loopne
fisubrl
mov
fsubrs
add
mov
cmpb
push
push
in
dec
filds
iret
push
mov
repz
addps
fiadds
adc
ficoml
xacquire
repz
or
xor
mov
dec
pop
popa
xlat
scas
pop
adc
ds
pop
push
cmpsb
pop
push
ljmp
fimuls
mov
pop
sbb
push
inc
jecxz
mov
cmp
sti
or
addr16
enter
or
add
loop
sti
sub
xor
fbstp
addr16
cmp
ret
out
add
outsl
andl
mov
xor
es
js
in
loopne
rcr
popf
test
dec
sub
inc
test
lds
cmpsb
mov
int3
movsb
mov
insl
ret
mov
jecxz
in
test
sahf
in
lea
cltd
push
jle
je
loop
sarl
adc
btr
jmp
mov
inc
fstpt
in
xchg
movsl
stos
xor
dec
fdivr
dec
cld
shr
dec
cld
pop
push
sub
iret
sbb
mov
stos
into
imul
in
pushf
mov
inc
das
push
movsl
cltd
sub
imul
xor
insl
xor
ja
mov
and
shr
jae
nop
cmp
sub
bound
add
test
rcrb
bound
imul
bound
add
sbb
jo
add
cmpsb
xchg
lds
roll
icebp
cmp
movsb
push
pop
pushf
call
sti
mov
mov
mov
push
into
ficompl
sub
mov
and
jns
out
int
imul
adc
mov
das
ja
movsl
dec
repnz
sub
js
push
adc
fadds
push
clc
gs
xchg
cmp
dec
aad
in
cmc
cwtl
add
test
fadds
push
clc
gs
xchg
cmp
dec
aad
in
cmc
cwtl
add
test
fadds
clc
fnstenv
test
pop
lds
clc
gs
mov
scas
int
stos
pop
lcall
shr
sar
stos
cmp
jno
popa
push
push
pop
inc
jnp
push
and
add
add
icebp
lret
loope
shr
sar
mov
xchg
jno
popa
pop
xor
jnp
and
add
icebp
insl
loope
shll
lea
mov
popa
js
or
push
pop
dec
jge
pop
outsb
pop
orl
andl
shlb
sub
nop
cmp
aam
jo
enter
lahf
addb
scas
adc
push
hlt
inc
add
sahf
cmpsl
or
inc
sbb
loopne
fidivs
sub
pop
hlt
loopne
dec
xor
push
test
incl
lret
loope
icebp
out
sub
stos
jno
xorl
push
xchg
test
xchg
add
or
sbb
aam
pop
mov
addl
mov
bound
push
xchg
js
mov
xor
and
sahf
inc
sub
imul
sbb
adc
and
movl
sti
rcrl
mov
sub
popa
repz
imul
adc
add
test
movsl
mov
xchg
not
fsubp
cld
sbb
shrl
ds
and
je
pop
jne
scas
lea
xchg
aam
ret
and
or
sub
and
jp
push
sbb
push
dec
xchg
loope
lock
mov
mov
push
imul
or
sbb
sub
cmp
lret
loope
shr
sar
mov
mov
push
imul
or
sbb
sub
cmp
lret
in
pop
xchg
xchg
adc
jecxz
jne
data16
and
cli
sbb
xor
jbe
movsl
pop
xchg
inc
xor
adc
and
mov
add
lcall
outsl
es
pop
add
sbb
or
bound
jne
lea
in
sarl
or
fists
out
cmp
in
rorb
cli
or
gs
mov
add
out
add
xor
mov
add
cld
fdivrp
xchg
stc
scas
rorb
dec
mov
stos
or
outsb
std
and
add
sbb
mov
push
ljmp
cs
inc
xchg
mov
sbb
inc
mov
sub
mov
sub
dec
jb
add
aam
jmp
xor
and
and
sbb
dec
adc
fadds
add
enter
xchg
cmp
xor
pop
mov
das
pop
fucomp
test
fnstenv
hlt
adc
dec
scas
shr
fisubrl
jb
icebp
sub
push
arpl
stos
jnp
notl
ds
dec
xchg
mov
fcmovnb
stos
outsb
and
rorb
inc
imul
das
clc
mov
xorb
imul
cmp
mov
mov
in
sbb
dec
ljmp
xor
jnp
scas
jmp
xchg
xor
in
or
je
loope
aam
outsl
hlt
pop
push
push
or
test
mov
xchg
adc
cmpsb
xor
mov
movb
shr
out
push
dec
mov
lahf
sub
or
push
in
mov
sub
push
xchg
cwtl
add
fbld
addr16
frstor
sbb
cmp
fistpll
shl
shll
and
in
xchg
xchg
adc
mov
inc
or
and
js
icebp
lods
in
mov
rorl
or
test
dec
push
repnz
fldl
data16
xor
addr16
insl
xchg
sbb
in
movhps
ljmp
int3
mov
aas
fwait
adc
xor
mov
fldenv
adc
xchg
paddsw
mov
sbb
sti
aas
movb
xor
push
mov
mov
dec
cmpsb
push
lods
nop
popa
mov
int
add
adcl
mov
in
mov
scas
pop
ret
sbb
in
cmc
cmpsl
jns
inc
lods
filds
ficoms
cmpsb
xchg
lret
pop
adc
iret
arpl
in
sbb
mov
pop
fiadds
dec
xor
divl
or
and
pop
rcrb
jbe
sub
addl
fidivrs
out
xchg
sbb
push
push
out
sbb
mov
xor
cld
xor
pop
roll
ljmp
add
jecxz
push
sub
adc
lods
mov
pop
test
add
or
adc
aad
aaa
pop
lcall
push
imul
and
das
js
loope
dec
xchg
sub
sub
dec
lret
mov
xchg
jne
nop
adc
ret
push
iret
ja
ja
adc
jmp
and
rcrl
sti
xlat
xchg
xor
insl
inc
inc
cmpsl
or
jno
pop
adc
mov
movsb
popf
mov
call
ss
sub
mov
add
jb
push
jno
pop
mov
test
mov
ret
lods
addr16
xor
jnp
inc
dec
sbbb
pop
xchg
repnz
jecxz
dec
lods
jno
test
mov
loop
test
jo
dec
pop
pop
scas
stos
lcall
cmp
mov
dec
cmc
mov
jb
sti
rcll
xor
out
mov
sub
mov
jb
lds
adc
sub
jl
cmpsb
dec
in
pop
movsb
inc
rcrb
push
dec
sbb
mov
mov
cld
cmpsl
sbb
or
or
push
in
mov
stos
cltd
dec
pop
sub
loopne
push
cltd
dec
inc
mov
and
add
xchg
push
es
pop
lock
outsb
adc
les
lock
pop
in
sbb
loope
adc
fwait
or
xchg
mov
das
rcll
and
in
insb
outsb
mov
xlat
push
je
push
fcoml
xorb
sti
popf
popa
out
push
mov
shrl
xchg
sub
cld
inc
xchg
mov
jecxz
and
jmp
js
add
mov
lea
leave
push
mov
aaa
out
add
enter
adc
push
popa
bound
pop
inc
xchg
aas
bound
cmp
push
mov
aad
fists
fstps
dec
or
lds
mov
and
cmova
cmp
cli
jae
dec
dec
out
ss
push
popa
adc
mov
xor
mov
cmp
icebp
inc
test
xchg
fisttpl
pop
mov
scas
testl
or
push
add
jne
inc
or
scas
stc
test
sbbb
imul
repz
orl
es
loop
aam
dec
pop
jnp
nop
inc
xchg
jnp
cmp
nop
clc
ret
jno
lods
add
icebp
inc
mov
mov
mov
test
sbb
cwtl
test
xchg
scas
test
call
lock
add
mov
dec
push
or
mov
lea
cmpl
adc
adc
jecxz
pop
and
inc
lahf
add
adc
mov
sub
adc
xor
or
in
pop
sbb
cmp
mov
xor
ret
jno
les
shrl
clc
mov
mov
ficompl
push
mov
scas
movsb
mov
nop
mov
es
in
cs
jmp
cli
cmp
mov
rcrl
adc
mov
push
inc
daa
call
inc
mov
sub
sub
xchg
cmp
test
fisttps
subb
mov
jmp
add
cltd
inc
xor
or
fbld
add
push
out
addl
negb
test
sbb
push
lret
adc
js
ret
sub
pop
mov
fidivs
mov
gs
xorl
xor
push
sbb
lahf
sbb
popf
cmp
in
fisttpll
arpl
cwtl
dec
push
mov
popf
xor
ret
push
fmull
xor
movsl
mov
xchg
cwtl
mov
pop
je
push
mov
sbb
imull
push
loope
cmp
out
push
jno
jns
gs
mov
in
dec
or
bndstx
sbb
and
xor
pop
out
aad
mov
cltd
nop
and
test
push
fucomip
mov
mov
adc
sbbb
out
jo
and
outsl
or
stc
test
xor
repnz
xchg
cmpsl
mov
inc
inc
inc
adc
out
adc
icebp
mov
cmp
xchg
lods
dec
mov
xchg
jge
addr16
loopne
cltd
scas
roll
add
sarl
xor
pop
xlat
repz
shll
sbb
push
mov
insb
leave
dec
cld
movaps
inc
add
test
jnp
jo
push
and
push
jno
aaa
lock
stc
pusha
in
mov
adc
mov
lods
jnp
imul
shll
fwait
inc
repnz
fwait
jl
lods
test
pop
ss
popa
hlt
js
jnp
flds
cwtl
out
cmc
out
repnz
testb
push
cwtl
outsb
in
inc
mov
mov
adc
rep
hlt
and
jns
repz
push
js
mov
lea
lods
or
pop
pusha
shll
push
and
mov
insb
sub
leave
jecxz
mov
or
jae
les
or
out
xchg
push
add
and
in
es
in
dec
dec
in
icebp
push
xchg
xor
cmp
mov
xchg
fistpl
cmp
xchg
fidivrs
pop
inc
mov
xorb
lods
and
xor
inc
cmp
sahf
adc
mov
mov
lcall
push
and
jp
mov
testb
insb
icebp
clc
or
mov
clc
add
insb
rclb
push
adc
cmc
jg
std
pop
pop
imul
dec
loopne
std
mov
sbb
cltd
jns
sbb
filds
outsb
test
inc
push
push
mov
sub
out
adc
stc
lea
inc
test
shl
jmp
imul
add
in
cwtl
cmp
mov
cwtl
out
inc
daa
jno
sub
cltd
xor
mov
mov
fldcw
leave
stos
insl
pop
std
and
mov
add
add
in
sub
lods
cli
sub
dec
stc
pop
xor
outsb
add
movsl
ja
cmpsb
int3
data16
pop
mov
into
add
inc
adc
cmp
jge
popa
sub
jno
add
sbb
push
aaa
cmpsb
stc
mov
add
or
sub
mov
les
adc
fadds
add
mov
jb
adc
imul
es
inc
xchg
xor
add
sarb
lcall
popa
mov
mov
mov
cld
dec
int3
mov
fnstenv
dec
imul
or
or
dec
inc
jle
ja
loopne
push
sub
xor
mov
sbb
test
aad
cmpsl
mov
hlt
or
mov
addb
cmp
or
adc
test
hlt
cmp
loopne
into
push
ret
inc
pop
fdivrp
mov
push
pushf
sti
popa
jae
pop
jp
xchg
mov
mov
push
scas
inc
sbb
test
mov
fldt
aad
lcall
push
in
hlt
mov
es
enter
daa
jne
xor
mov
xchg
out
cs
movsl
jmp
xchg
mov
int
int
mov
or
cmpsl
out
jmp
ljmp
lock
inc
xor
leave
adc
xchg
neg
lds
icebp
mov
test
ret
dec
add
mov
lea
xor
movb
ret
das
mov
arpl
sti
movsl
movsb
mov
ds
mov
inc
js
dec
jecxz
pop
or
insb
jmp
adc
fadd
in
cmpb
dec
add
mov
dec
ret
add
pop
mov
out
sahf
cmp
xor
arpl
lahf
ret
sub
icebp
aad
sarb
scas
shrl
and
push
jb
dec
or
stos
fimull
jo
aam
stos
xlat
std
cmpsb
lods
xlat
sbb
bound
mov
imul
inc
pop
dec
out
insl
add
sub
mov
adc
adc
xor
inc
mov
xchg
enter
pop
pop
test
mov
cmp
aaa
inc
pop
xor
adc
pop
nop
int3
mov
in
sbb
push
dec
mov
pushf
mov
mov
add
xor
dec
jbe
add
clc
dec
iret
movsl
adc
scas
xor
cmp
ljmp
nop
sub
stc
aam
mov
das
ss
in
dec
sub
insl
testl
adc
stos
loop
ja
or
xchg
inc
out
mov
insb
add
and
mov
sbb
rclb
aaa
cmp
insb
add
xor
push
dec
and
movsl
or
pop
mov
push
in
add
psubq
out
mov
jb
xchg
aad
scas
loop
sub
std
mov
test
subb
fs
mov
add
es
xor
aas
mov
in
push
je
and
xchg
imul
dec
rcrb
cmpsl
xchg
mov
dec
adc
sbb
xorl
cwtl
or
jg
push
cmp
int3
ja
out
aaa
lea
shlb
push
sbb
mov
or
lods
cmovg
ds
cmc
add
stos
jns
adc
adc
xor
enter
mov
jo
pop
leave
in
jbe
pop
inc
insb
cmpsl
sti
leave
xchg
and
and
lcall
gs
int
insl
jg
sub
mov
adc
lahf
add
jnp
or
xor
add
and
jbe
sahf
add
add
cmp
subb
out
xor
lds
scas
inc
test
push
xchg
sbb
addr16
xchg
lret
test
and
jecxz
aaa
dec
daa
inc
add
int
in
cmp
mov
mov
add
je
jo
inc
imul
push
xchg
dec
sub
std
xor
rol
pop
pop
mov
push
and
xchg
push
xor
lret
sub
sarb
add
aaa
cltd
test
iret
sbb
imul
push
inc
ret
jp
xchg
jne
adc
or
sub
lahf
dec
mov
enter
rorl
fcmovnb
jle
xchg
and
outsl
ret
std
xchg
xlat
push
andb
jmp
sbb
popa
mov
mov
jecxz
pop
lahf
add
jbe
inc
popf
and
mov
mov
pusha
call
jmp
int3
fcoml
cmp
add
addr16
daa
mulb
addr16
dec
sub
push
jne
fstpl
push
push
push
pop
aam
fdivs
sahf
and
or
xchg
js
push
cmp
xor
or
cltd
add
mov
jns
mov
loope
push
adc
pusha
negl
roll
mov
aam
in
inc
sub
scas
leave
icebp
jae
push
fldt
das
daa
arpl
and
pop
in
ret
mov
mulb
inc
and
sbb
add
stc
out
cmpsl
and
mov
sti
dec
test
pushf
pop
or
inc
das
or
pop
shlb
addr16
bound
mov
jge
add
mov
inc
mov
subl
xchg
pop
sub
cmp
push
push
js
push
pop
cmp
int3
mov
pop
icebp
cli
aaa
insb
shrb
aaa
ret
inc
inc
jns
fwait
or
hlt
push
push
sub
push
sub
rolb
in
jo
arpl
fsubrs
addl
stos
add
add
push
ret
rcrl
sbb
out
jg
addl
inc
mov
jnp
mov
test
mov
stc
inc
push
adc
rep
stos
je
addr16
sub
dec
sub
mov
push
or
xchg
jnp
cmc
pop
or
xor
int3
pop
push
jge
lea
jle
outsl
in
xchg
mov
stos
sub
xor
loopne
jo
sbb
repz
ret
xor
mov
add
fstpl
mov
jmp
mov
mov
fwait
aam
lret
xchg
adcl
movsl
xchg
sub
xchg
stos
bound
int
bound
add
push
aaa
sarb
js
inc
xchg
std
push
enter
sbb
push
mov
sub
les
std
loop
pop
dec
or
orb
mov
icebp
and
fcompl
scas
data16
pop
mov
lahf
out
mov
or
repnz
pop
pop
push
ds
adc
fsubs
or
jo
andl
pop
ja
jp
ds
insl
les
stos
repz
adc
mov
fdivr
dec
fwait
xchg
or
shrb
or
mov
je
cltd
mov
imul
ds
outsb
add
pop
insl
push
lods
jno
daa
arpl
js
sub
into
push
and
adc
bound
ljmp
mov
out
xchg
rolb
aad
jg
shll
imul
and
or
or
outsl
dec
sbb
aaa
xor
push
jnp
jno
and
mov
sar
mov
scas
add
add
jbe
or
fwait
jmp
orb
cltd
cltd
les
sahf
repnz
pop
mov
inc
mov
pop
mov
popa
jecxz
call
pop
pop
and
out
add
adc
daa
nop
in
aas
xchg
lods
repz
xchg
xlat
nop
jno
iret
adc
sub
jp
out
lods
xchg
sahf
sub
cmp
mov
push
mov
rcrb
ss
xor
pop
arpl
push
adc
mov
xchg
inc
mov
cltd
cmp
aad
data16
cmc
adc
outsb
or
xchg
leave
inc
aam
xchg
sahf
xor
shrl
xchg
jb
test
mov
out
inc
cmp
int
xlat
out
jnp
add
pop
orb
mov
mov
xor
punpcklwd
add
leave
test
test
push
jns
clc
outsb
inc
mov
add
mov
pop
inc
mov
xlat
iret
mov
movsl
cwtl
stos
mov
and
out
out
fsubrl
adc
movsb
dec
xchg
lock
popa
jl
mov
inc
or
sarl
test
adc
pop
jl
lods
out
cli
ret
xor
xchg
je
mov
mov
mov
push
mov
lea
mov
add
push
mov
xor
jg
cltd
and
aam
mov
dec
lods
call
adc
sbb
or
jl
and
fsubs
jno
push
pop
xor
xlat
out
mov
sahf
and
adc
pop
lock
and
mov
fcos
xchg
aaa
push
imul
ljmp
push
xor
call
ds
xor
xor
outsb
nop
dec
loopne
adc
sbb
mov
cmp
sbb
into
dec
lcall
xchg
cld
push
jae
sti
pop
pushf
cmp
stc
inc
rcrb
jae
pop
cmpb
ljmp
adc
xor
push
fwait
pop
jle
mov
ret
mov
sahf
xor
aam
pop
cmp
ret
shll
fisubrs
ja
push
repz
lods
pop
shlb
ss
sub
adc
outsb
mov
pop
xor
pop
mov
lret
pop
dec
jle
outsl
or
arpl
xchg
test
mov
jne
outsb
je
sbb
mov
fidivs
jecxz
pop
and
into
stos
scas
stc
push
in
pop
sbb
sbb
in
jecxz
inc
sbb
add
mov
pop
insb
test
daa
cmp
imul
xchg
cmp
mov
lcall
dec
inc
cmpsb
insb
aaa
sbb
mov
aaa
mov
xchg
out
lret
test
ljmp
aad
jbe
mov
pop
mov
out
popf
lcall
add
or
iret
std
push
sub
push
push
into
ljmp
out
or
or
loopne
pop
and
dec
and
xchg
scas
inc
mov
xchg
ret
popl
jbe
ffreep
xchg
movsl
loopne
push
push
mov
dec
push
int
jg
dec
sbb
sbb
enter
xchg
js
movsb
xor
popf
mov
add
and
decl
rol
mov
push
lock
cld
cli
aaa
jns
and
pop
mov
ja
stos
aam
jp
add
push
push
loope
nop
add
xor
out
lea
sub
mov
jnp
ret
arpl
in
xchg
cmp
test
int
add
add
xor
gs
imul
sbb
xor
mov
xchg
call
inc
loope
pop
jo
call
pop
loop
add
insl
mov
cmp
sahf
pop
xchg
stos
sub
dec
or
jbe
imul
mov
mov
mov
shrb
addr16
dec
insb
inc
jp
and
aam
dec
lahf
shl
dec
jmp
dec
loope
aad
inc
movb
ret
fs
xor
jmp
mov
in
inc
jecxz
lods
jle
adc
sarl
xchg
hlt
inc
pop
outsb
pusha
adc
sub
nop
in
xlat
cmpsl
jmp
xchg
testl
sbb
sub
cmp
mov
push
rcrb
inc
adc
pop
mov
pushf
mov
out
iret
test
loope
inc
jno
push
add
jmp
std
push
test
test
repz
push
gs
sahf
push
test
jmp
pop
cmp
xchg
dec
xchg
insb
cwtl
adc
insb
and
or
or
jmp
jne
mov
and
or
mov
push
push
jp
out
mov
jo
test
and
std
add
int
pop
sub
jae
add
push
mov
cli
jmp
dec
push
not
lods
aaa
enter
push
divl
add
xchg
loop
fcompl
xor
stos
mov
and
icebp
stos
adc
outsl
fdivrp
les
and
xchg
es
imul
or
sbb
iret
xchg
arpl
scas
or
js
push
inc
in
das
pusha
adc
in
or
xor
xchg
cmpb
jo
jge
ror
mov
jp
cmpsb
cmpl
mov
mov
mov
push
imul
or
sbb
sub
cmp
lret
loope
shr
sar
mov
mov
push
imul
or
sbb
sub
cmp
iret
loope
shl
sar
mov
mov
push
imul
mov
adc
add
lock
loopne
rorb
sarl
sub
icebp
sti
imul
jae
arpl
push
incb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
repz
push
popa
fwait
jbe
mov
add
add
add
add
add
cwtl
add
ljmp
add
dec
add
add
sti
add
add
xchg
add
mov
sti
add
add
add
imul
add
add
add
xor
push
outsl
add
add
inc
add
int
mov
xchg
add
add
add
add
add
add
test
jae
xor
jo
sahf
add
add
adc
jge
imul
jbe
and
or
sbb
add
mov
and
xchg
add
add
sub
lea
pop
add
add
add
add
inc
add
add
add
jge
and
pop
add
daa
add
xlat
add
add
add
add
add
pop
add
jp
xchg
add
in
lods
add
stc
add
add
int
pop
add
cmp
and
in
loop
loop
mov
add
add
add
add
add
sahf
add
jb
ret
add
add
add
add
add
add
add
pop
add
add
test
popa
add
aaa
add
add
add
cmp
loop
stc
add
add
les
imul
add
pop
add
add
add
add
adc
add
add
add
add
jge
das
add
add
stc
add
popl
add
add
mov
add
add
add
add
add
add
add
faddl
into
add
add
add
add
pop
add
add
add
add
add
cmp
add
add
add
add
add
add
add
xlat
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
xchg
add
add
push
add
add
push
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
in
add
add
add
loope
movl
loop
mov
dec
add
add
pop
add
and
lea
ljmp
add
add
sbb
in
add
add
add
loop
xchg
add
add
add
add
xchg
add
add
add
add
add
testl
mov
add
jo
fwait
add
popa
add
add
add
add
add
add
lea
daa
add
les
addl
adc
outsl
add
add
add
add
add
push
add
add
add
jp
jnp
pop
add
add
incl
add
add
add
incl
and
add
add
add
add
add
add
add
call
add
add
xor
jns
dec
add
add
add
jae
inc
add
add
add
pop
add
add
add
outsl
add
dec
add
add
add
add
add
add
add
add
flds
mov
insl
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
lea
adc
in
add
add
add
nop
gs
ljmp
cmp
mov
pop
pop
lods
out
inc
inc
push
jnp
cmp
out
mov
dec
bound
dec
mov
cmp
xchg
stos
cld
or
mov
mov
cwtl
and
outsb
xor
stos
lods
add
mov
push
xchg
dec
shlb
mov
sti
ret
stc
imul
mov
jmp
push
sarl
mov
movl
sbb
bound
xchg
mov
lcall
gs
lods
sahf
imul
int
and
mov
add
outsb
jmp
test
sbb
jecxz
mov
jnp
pop
xor
xor
and
adc
loope
push
testb
fisubrs
stc
jb
cld
jecxz
mov
jle
mov
inc
mov
xor
call
addr16
xlat
xor
mov
popa
mov
imull
stc
inc
shll
adc
pop
push
or
and
jne
mov
cmp
jnp
mov
cmp
mov
xchg
cmp
roll
clc
inc
cmp
mov
pop
dec
lock
gs
adc
xor
pop
sbb
data16
jns
stos
add
cld
imul
insl
jb
ja
sti
sub
xchg
nop
and
ja
dec
inc
in
mov
dec
cmp
cmp
sbbl
add
add
push
rclb
dec
pop
cmp
jbe
pop
jae
mov
jae
imul
and
popa
lea
xor
out
into
pop
mov
enter
pop
sub
inc
stos
adc
notl
scas
es
adc
add
repnz
sarl
adc
jb
loop
mov
loope
loope
lret
imul
rcrb
mov
jns
pop
fcoms
das
and
pop
push
sbb
gs
nop
mov
sahf
fimull
mov
jbe
mov
push
fimull
pop
shll
ret
push
fcmovb
leave
in
push
mov
es
arpl
stos
add
fbld
pmulhw
jbe
les
inc
hlt
push
sbb
addr16
negb
add
adc
stc
or
jb
ljmp
push
jo
ret
scas
in
mov
mulb
push
sahf
in
test
jle
jp
sub
dec
cmpxchg
sub
mov
scas
out
inc
push
lahf
mov
cmpsl
cmp
int
addr16
mov
mov
aam
sbb
cmp
fwait
cltd
arpl
pop
mov
add
mov
jmp
psubsw
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
