in
mov
in
mov
movl
mov
inc
add
add
ret
int3
add
mov
or
add
test
add
push
lea
popa
sbb
add
les
test
adc
inc
fcmovu
cmp
add
test
mov
std
push
jns
mov
ret
lret
xchg
mov
setns
test
in
popa
adc
lock
test
pushf
xor
dec
push
ljmp
call
push
lea
push
insb
inc
test
jbe
shrb
mov
mov
xchg
lea
mov
push
xcrypt-ofb
cmpsl
insl
idiv
push
push
shlb
call
scas
mov
dec
push
inc
cld
push
push
dec
aaa
xorb
push
push
sbb
sub
les
mov
jge
je
jo
jl
pushf
mov
jns
je
enter
icebp
loope
pop
xorb
dec
jmp
cmp
mov
push
je,pn
push
aaa
push
jo
xchg
lea
repz
dec
cld
push
push
mov
push
out
push
lea
movsbl
push
cmpsl
rolb
fst
outsb
imulb
sub
es
inc
cs
fiadds
dec
insb
fcomps
insb
insb
les
stos
and
lods
xchg
push
ja
ret
popf
rcrl
call
add
mov
and
mov
insb
lods
insb
pop
daa
das
push
add
js
fs
in
push
test
imul
sub
nop
adc
add
xchg
rcrb
jl
pusha
xorb
addr16
mov
mov
pop
pop
dec
mov
aas
lea
mov
mov
cli
cwtl
cli
mov
mov
jne
dec
push
mov
in
mov
inc
dec
rcrb
lods
int3
push
insl
std
jbe
xchg
imul
stos
pusha
push
lea
fcomps
lcall
cmp
mov
fsubrs
push
fcoml
popf
clc
sbb
mov
or
or
or
mov
sub
mov
and
mov
push
pushf
add
mov
add
cli
insb
and
xchg
movd
jno
insb
sub
lods
je
jo
add
mov
nop
aad
jg
leave
xchg
jae
cmpsl
rorl
mov
mov
and
xor
inc
insb
lock
mov
fisubrl
cvtdq2ps
into
lock
add
adc
or
scas
jae
test
aad
mov
ret
out
dec
add
sbbb
std
cmp
add
mov
aad
cmpsl
rep
test
lea
mov
jle
rolb
cmp
lea
inc
xchg
pop
jmp
cld
mov
jmp
loope
sub
mov
movl
std
adc
jl
out
mov
mov
ret
cs
mov
nop
xchg
sub
test
clc
and
sub
mov
add
mov
push
fidivs
sub
xor
and
mov
xchg
xchg
nop
lea
fdivl
fcoms
repnz
mov
fdivr
dec
push
mov
adc
sub
imul
andl
sbb
add
clc
fcoml
add
lea
or
add
pop
sbb
pusha
or
cmpsl
xchg
push
test
test
ret
aas
rcrb
cmp
jne
cmc
adc
push
rcrl
cwtl
fcoml
add
pop
mov
pushl
add
jge
imul
push
sub
mov
test
stos
notl
push
push
sbb
and
pop
xor
lea
xchg
xchg
aas
sbb
or
push
sub
push
mov
int
sub
mov
mov
in
shll
jmp
aaa
add
dec
xchg
fdivs
sbb
and
inc
ds
es
inc
int3
lods
aam
movsb
push
enter
pop
pop
add
mov
pop
js
inc
das
push
pop
in
iret
dec
and
popa
mov
push
hlt
aas
loop
inc
mov
nopl
lea
out
mov
mov
mov
xchg
lret
lea
shrl
cmc
mov
jae
push
pop
add
jb
push
mov
add
lret
xchg
jo
mov
mov
jp
jbe
cmpsb
aas
ja
bound
cld
in
sub
les
icebp
cmp
xchg
orb
push
push
push
movsb
shrb
aaa
movsl
jnp
cmp
jns
sub
lods
lds
push
push
dec
push
xor
or
jg
sbb
cld
filds
fldenv
add
call
cmp
imul
mov
push
xchg
pushf
lret
xor
ja
pop
add
adc
fisubrl
je
push
cmp
push
stos
int3
or
pop
push
jno
pop
movsb
pop
popl
gs
jle
jmp
fs
movzwl
mov
ret
sub
cli
pop
sub
push
roll
cmp
cmc
gs
jl
jno
test
lock
and
cmpsl
xor
xchg
push
mov
jle
xor
adc
fs
scas
xchg
iret
ss
lods
jmp
xchg
sbb
add
dec
std
js
scas
pop
inc
mov
push
cli
pop
lods
add
mov
dec
adc
mov
push
mov
push
or
pop
inc
movsb
ljmp
rcrb
pop
jp
fiadds
cltd
mov
push
cwtl
xchg
test
jne
mov
ret
lods
sub
fidivrs
pop
mov
sub
fsubl
push
pop
mov
ja
or
push
ljmp
jmp
test
inc
test
inc
or
pushf
std
aam
jo
push
outsb
add
xchg
inc
fmull
faddp
mov
loope
xorl
mov
push
jecxz
ss
inc
shlb
cmp
add
lea
cmp
clc
cltd
popa
adc
cmp
btc
subps
dec
je
movsl
sbb
mov
sbb
or
or
sbb
xchg
dec
lret
das
xchg
scas
insb
shl
nop
mov
adc
cmpsl
or
push
daa
enter
push
add
fcoml
bound
jns
xchg
push
loopne
jl
jge
add
imul
sbb
lods
lds
popf
cmpsl
mov
xchg
fcomps
pop
lds
push
xlat
sub
sub
add
pop
sub
sarb
dec
xchg
pop
xor
mov
fwait
in
jmp
adc
inc
sbb
int3
lret
jno
or
fbld
or
pop
sub
call
pop
fmuls
daa
dec
daa
xchg
test
push
cmp
daa
push
pop
pop
jno
mov
icebp
fisttpll
sbb
cltd
push
mov
add
fistpll
mov
push
lea
pop
lds
enter
pusha
enter
xchg
fsubrs
add
xchg
imul
mov
push
push
push
and
aas
sbb
ret
cmp
adc
jle
add
hlt
mov
xchg
ljmp
and
mov
push
push
mov
scas
mov
flds
cmp
or
inc
inc
dec
mov
cltd
push
add
inc
jo
sub
lcall
fs
push
mov
in
pop
js
add
sbb
jns
inc
lods
or
push
shl
enter
push
leave
or
lods
fldcw
dec
lds
sub
lret
scas
jbe
mov
cmpsl
daa
cmpsb
insb
es
jb
out
in
or
je
xchg
bound
sub
cmp
dec
dec
arpl
scas
pop
sahf
mov
xchg
push
push
lret
inc
stos
dec
inc
mov
cmp
rclb
aam
lret
sbb
fiaddl
pop
je
pop
movsb
mov
push
push
pop
cmp
test
add
fisubl
outsb
inc
in
dec
scas
sbb
inc
cmpsl
and
push
mov
jne
inc
jns
cmp
push
mov
aad
jne,pn
xor
xchg
and
call
inc
gs
push
jmp
push
inc
insl
aam
js
or
pop
cmp
inc
mov
scas
dec
sub
dec
fnstcw
pop
lea
jae
movsb
jmp
jo
jo
cmpsl
lea
adc
xor
xor
or
mov
pop
ss
or
shrb
inc
push
aas
push
cs
xchg
xchg
xor
test
mov
push
popa
and
sub
mov
std
jae
ret
mov
lahf
sarl
and
aaa
xchg
lahf
and
mov
inc
stos
es
jnp
xlat
arpl
push
rol
add
adc
push
xchg
jge
sub
pop
test
shrb
mov
stos
mov
xor
sbb
dec
fisttps
lcall
jb
sbb
outsb
xor
or
sub
aas
jns
sahf
jmp
sbb
mov
rcll
mov
loope
int3
sub
sbb
lds
fistps
xchg
stc
mov
fs
mov
pushl
push
faddl
or
push
loop
iret
or
outsb
mov
or
mov
shrb
ret
outsl
sbb
xor
pusha
or
pop
sbb
jmp
push
and
jo
mov
push
rcrl
pop
cs
shl
mov
les
mov
ret
sbb
rclb
xchg
shr
fisttps
sbb
pop
pop
pop
and
adc
sarb
inc
sub
les
push
and
dec
mov
imul
inc
mov
mov
cmp
std
nop
inc
mov
xchg
push
xor
xlat
fs
cmp
outsb
leave
and
es
cmp
jo
mov
in
push
int3
mov
out
js
xor
xchg
add
or
or
call
int3
push
mov
jg
mov
jg
in
mov
or
js
pop
push
xor
push
jo
xor
lahf
jmp
lea
cmp
and
fisubrl
shlb
or
add
jmp
loopne
pop
aas
pop
hlt
leave
and
push
cmp
adc
jo
enter
mov
mov
push
repnz
mov
mov
xchg
jmp
fcmovnbe
add
stos
je
push
jmp
cmp
cltd
and
mov
xor
mov
aas
adc
jne
xorb
pop
inc
test
mov
or
mov
mov
fisubl
xchg
sub
rcrb
es
movzbl
sbb
jnp
or
mov
jae
ds
test
lea
pop
lea
dec
push
lods
cmp
or
sub
fldl
std
cld
push
sahf
mov
jo
pop
dec
cmp
sbb
mov
or
mov
loope
dec
cs
ja
jne
shll
cmp
dec
cld
push
cmp
mov
enter
js
out
jge
add
je
mov
inc
sub
outsl
push
cld
movzwl
cmp
movsl
insl
lcall
add
in
jg
or
push
cmp
push
lock
cmpl
sar
mov
adcb
lea
movsb
clc
pusha
sbb
in
jg
push
mov
push
push
mov
inc
cmpsb
orb
and
les
insb
movzwl
mov
decb
cmp
jge
sub
sub
rorb
sbb
and
sti
insb
cmc
outsb
dec
add
es
in
pop
jmp
shr
mov
lock
or
cmpl
sbb
add
add
cmpsb
roll
call
call
or
mov
in
jb
hlt
cltd
cmp
add
add
cmpl
pop
push
adc
xor
imul
roll
adc
fsubr
or
ss
and
sub
cwtl
jmp
jae
or
pop
push
les
les
fsubrl
in
in
jge
sub
imul
xchg
mov
jo
or
andl
push
xor
hlt
test
add
jne
fs
push
es
mov
mov
cmpl
and
xor
cmpsb
sbb
or
shl
out
cs
dec
jo
jmp
mov
jae
mov
call
int
inc
add
rcll
add
int3
lahf
adc
data16
shr
cmp
dec
clc
mov
rolb
mov
sar
xchg
or
inc
add
lods
xor
push
adc
jle
cmp
or
insl
push
hlt
and
aaa
ret
adc
and
adc
push
push
lock
popf
inc
cmp
icebp
not
adc
add
shll
shr
pop
fistpll
jbe
inc
add
aam
sbb
jmp
ret
jmp
or
add
sub
mov
fsubs
xchg
xrelease
adc
xchg
aad
or
call
push
scas
loopne
add
cmp
sbb
repz
data16
lods
dec
test
cld
je
test
aad
inc
sbb
addb
scas
and
sub
jmp
cld
push
xor
aas
sub
hlt
pop
push
cmp
out
in
lcall
sbb
je
mov
cmp
syscall
jo
aam
cld
pop
or
jbe
sub
inc
sbb
push
lock
adc
adc
or
out
pushl
cmp
jne
cmpb
mov
mov
pop
sub
sub
dec
add
andl
mov
call
int3
rcr
or
xor
fdivr
cmp
out
mov
scas
in
clc
sbb
mov
pop
test
loope
cs
xor
sarl
call
in
cwtl
rolb
aaa
fs
jb
in
int3
adc
insb
cli
mov
adc
dec
and
inc
das
test
cwtl
adc
bound
mov
aad
sbb
dec
pop
pop
lea
or
test
mov
adc
dec
xchg
ficoms
lea
pusha
test
mov
test
mov
aaa
xor
testb
xchg
ret
enter
cmpsl
jo
xor
pop
shr
enter
lock
into
std
dec
pushf
mov
xchg
inc
dec
xchg
cwtl
mov
test
mov
push
lcall
insb
addl
inc
mov
or
je
adc
dec
mov
rcll
mov
and
mov
and
je
cwtl
sub
addb
test
jmp
mov
call
movsl
outsb
int3
in
test
mov
and
pop
shlb
add
push
sub
push
inc
jo
or
popa
pop
add
int
sub
mov
mov
arpl
jbe
sub
sbb
xchg
js
or
jb
and
mov
jle
stc
add
outsb
dec
or
clc
int
lret
insb
addl
push
movsb
inc
jle
cmpsl
lock
add
adc
std
jae
or
sbb
mov
cmpsl
mov
or
or
xor
pop
test
push
call
sub
xchg
jns
scas
pop
or
or
jo
xchg
leave
bound
je
inc
mov
repz
jo,pn
xlat
loopne
inc
cmc
sub
and
xchg
es
popa
or
or
cmp
add
mov
sar
cld
fldl
jmp
lea
inc
imul
cltd
inc
xor
jmp
aas
aad
push
inc
ljmp
and
orl
pop
ret
and
pushf
aad
xlat
arpl
xchg
pop
andb
iret
and
shlb
popl
das
inc
and
inc
fistps
dec
mov
add
add
cmpl
mov
pop
sbb
pop
nop
push
cmp
add
mov
sbb
add
adc
setne
leave
xlat
add
mov
mov
xor
mov
imul
rolb
adc
adc
mov
lea
mov
les
jg
rol
jecxz
add
mov
xor
mov
push
add
out
xor
push
mov
rcrb
push
test
lcall
mov
pop
daa
cs
add
js
mov
add
push
dec
cmpl
jb
lret
mov
jge
add
das
pop
adc
push
hlt
mov
mov
cld
mov
roll
dec
pushf
jae
repz
sbb
cld
das
shll
dec
add
inc
sbb
fadds
add
mov
js
and
lock
sub
add
in
in
dec
or
push
out
mov
or
jp
xor
push
mov
mov
test
pushf
je
movsb
mov
cmp
dec
mov
ret
mov
and
push
jne
fiadds
lds
aam
sub
cmp
flds
inc
repnz
fs
cmp
jae
xor
je
push
add
aas
add
jno
cmp
push
adc
cmp
rolb
stos
cs
lret
adc
lock
out
mov
sub
pop
loop
enter
inc
lret
lret
adc
cmpsl
mov
rol
ror
imul
mov
insb
mov
or
scas
lods
les
fmull
mov
lods
lods
add
lcall
pop
cmpl
test
xor
test
nop
dec
test
movsb
push
es
jne
enter
mov
cmp
sbb
jns
mov
sbb
pop
shll
mov
in
or
mov
fldcw
push
sbb
popf
dec
jae
mov
fisubl
or
loop
fcoms
push
mov
xor
jo
out
push
cs
adc
lods
mov
push
jo
test
or
ret
sub
outsb
aad
outsl
int
in
scas
pop
sbb
sub
adc
sbb
loope
cltd
arpl
mov
xchg
or
xchg
or
je
daa
sbb
mov
mov
fisubl
xor
mov
fs
out
test
test
int
jb
test
mov
push
test
fistps
cmp
add
adc
cmp
fs
js
sbb
or
shll
in
out
push
mov
and
lret
fsub
fdivrl
sub
fdivs
or
dec
dec
sti
js
adc
lock
mov
lret
mov
sub
repnz
mov
in
cs
sbb
jmp
sbb
in
pop
xor
mov
jmp
clc
add
sbb
xchg
xchg
push
and
iret
cmp
push
push
cld
add
and
add
cld
sub
scas
xchg
mov
add
jae
push
loopne
lock
jmp
or
mov
xor
cs
lret
ffree
xor
aam
xorl
push
movsb
jae
sub
adc
jne
call
repnz
loopne
xchg
push
mov
movsb
insl
add
or
rcrb
shl
icebp
add
nop
out
jg
enter
lcall
jo
cmp
lret
rclb
dec
push
adc
push
enter
arpl
aas
xor
ret
je
xchg
enter
leave
add
les
xor
ror
movswl
xor
jmp
sbb
shll
les
iret
and
enter
enter
enter
lcall
mov
add
add
mov
test
sbb
out
loopne
rorb
adc
out
adcb
out
jle
inc
cltd
in
jl
or
loop
popf
out
hlt
and
or
sub
xchg
mov
jae
mov
mov
mov
in
mov
sub
dec
lahf
sbb
sbb
jmp
fcomp
pop
fmuls
xchg
js
or
leave
movsl
cli
in
fdivl
fwait
into
mov
test
inc
repz
sub
enter
fadds
or
popf
dec
push
add
jo
dec
lret
testb
in
jne
out
test
adc
sub
mov
cltd
movl
sub
push
rolb
test
cmp
inc
test
movsb
das
or
mov
sbb
jecxz
push
outsb
test
pop
push
test
shl
mov
adc
je
add
in
push
add
mov
pop
test
sbb
xchg
fldenv
test
jo
xlat
data16
rorl
outsb
or
addl
je
mov
add
inc
lcall
sub
ficomps
xchg
cld
hlt
cld
hlt
es
jo
mov
cmc
ja
sub
jmp
add
insb
add
das
test
orb
rolb
push
test
sbb
pop
inc
add
test
incl
jne
clc
add
pusha
push
rorb
cs
sahf
fsts
mov
enter
and
dec
mov
int3
xor
in
mov
ds
lock
fldl
or
add
je
mov
int
mov
pop
add
insl
aaa
mov
add
lret
mov
js
int
hlt
pop
loop
add
movsb
jp
clc
add
jecxz
nop
imul
fs
addl
lods
push
xor
and
push
scas
and
sub
mov
dec
data16
fs
push
pusha
xor
inc
sub
pop
mov
test
or
mov
adc
lret
adc
or
inc
fiaddl
fsts
dec
dec
inc
push
cmp
push
pop
pusha
rorb
pop
jmp
testb
or
cmp
jb
sbb
adc
adc
test
xlat
pusha
lods
into
cmp
add
push
jb
pop
mov
jmp
add
jle
inc
decb
dec
jae
in
pop
sub
ljmp
or
pop
movsb
fwait
cmpsb
cli
call
rcrl
jo
jle
pop
pop
jge
addb
mov
or
xor
and
jmp
ret
add
movsl
rcl
lea
fnstenv
lods
test
jle
repnz
subb
nop
cmp
rolb
fistpll
sub
sub
and
cmp
test
adc
nop
adc
sbb
sbb
jb
outsl
filds
jl
xor
xchg
hlt
pushf
mov
dec
mov
or
mov
dec
imul
sbbb
and
push
cld
pop
xlat
mov
dec
push
push
xor
or
or
and
iret
jl
popf
jb
or
add
add
jno
addr16
xor
adc
int3
xor
inc
lea
jge
cmp
add
adc
in
scas
mov
leave
sub
mov
adc
add
jbe
fsubs
or
jp
adc
and
add
add
push
lds
lea
pop
cmpsl
push
cmp
inc
psraw
cmp
cmpl
stc
sbb
xor
or
pop
push
movsb
or
inc
cmpsb
addl
addr16
cmp
xor
push
nop
xchg
xor
mov
jno
out
push
adc
add
ja
dec
jecxz
jbe
popf
or
cmc
roll
push
dec
sahf
cmc
dec
adc
insb
jnp
daa
jns
sub
ss
add
or
push
jb
jo
pop
jmp
lock
add
push
lret
cs
adc
sbb
xchg
call
jne
or
dec
push
or
js
ret
mov
cmpsb
and
inc
and
cltd
and
movsl
or
popa
and
or
xor
or
or
pop
iret
jno
mov
pop
xor
imul
imul
push
pop
pop
pusha
mov
jb
dec
popf
movsb
xor
loope
mov
aam
pop
aas
mov
shlb
enter
insb
std
adc
out
jb
nop
jbe
xor
pop
movsb
inc
or
push
ret
bound
outsl
push
dec
sub
inc
addb
pop
ja
sbb
mov
pop
push
notl
daa
add
mov
js
andps
ret
lahf
js
lds
xchg
lea
mov
jp
lods
insl
popf
repz
cmp
xor
and
mov
popf
jae
jo
andb
dec
addb
shlb
mov
decl
or
cmp
adc
nop
cmp
push
lahf
jp
or
or
dec
cmp
cwtl
repz
mov
mov
pushf
mov
or
jnp
mov
mov
push
cmpl
and
roll
je
ds
add
sbb
je
push
xor
outsl
movb
jmp
jo
push
add
in
insb
rol
push
sub
sub
stos
push
outsb
or
xchg
insb
cmp
mov
jns
inc
test
into
data16
insb
sbb
mov
fisttps
xlat
jl
pop
push
sub
or
loop
cmpl
ds
push
inc
sbb
or
add
mov
inc
mov
and
dec
jno
jno
or
mov
ljmp
cmp
fwait
push
sub
aam
jecxz
fprem1
hlt
xor
inc
push
jp
std
mov
or
mov
and
adc
push
cmp
adc
mov
xlat
xchg
leave
jl
sarb
push
mov
leave
jno
clc
addr16
or
mov
adcl
sub
dec
in
hlt
push
push
mov
cmpl
dec
mov
insb
sbb
pop
dec
dec
mov
mov
dec
sbb
inc
mov
lcall
orb
mov
add
adc
movsb
in
or
int3
test
ret
mov
add
dec
test
loope
fisttpl
adc
out
add
xchg
outsb
test
stmxcsr
fsubl
aad
pop
rorb
jno
sbb
sub
jb
pusha
add
je
sub
test
push
incl
pushf
std
insb
mov
decl
add
pop
ret
ljmp
pop
or
adc
mov
call
enter
shrb
dec
inc
add
push
add
xor
or
add
mov
and
mov
add
enter
push
push
bound
adc
cmp
mov
out
pop
xor
or
xor
clc
xor
cmp
aas
jmp
mov
in
pop
rcll
sbb
inc
stc
xchg
or
mov
testl
outsl
push
mov
lahf
mov
fsubrl
adc
pop
mov
imul
imull
sbb
cmp
fcoml
push
xor
xchg
dec
or
test
and
pop
pop
mov
sub
jo
pop
jnp
clc
mov
dec
cmp
sti
sub
outsb
fisttpl
mov
jne
cwtl
sar
xchg
inc
stos
loopne
add
aam
xlat
xchg
push
movsb
std
cmp
loop
or
std
aam
pusha
inc
mov
or
movsl
push
xor
ja
xchg
xchg
mov
mov
loope
push
js
movsl
roll
add
ss
mov
mov
dec
mov
mov
adc
jg
add
lods
fidivrl
pop
or
add
lcall
movsb
push
jl
mov
pop
add
and
mov
movsb
add
js
lods
or
loopne
popa
and
xlat
xorb
test
movsl
jmp
and
orl
xor
test
fsub
cmp
or
orl
pop
movsb
jno
sub
jge
rorl
add
cmpb
mov
lret
pushf
mov
mov
ret
or
outsb
push
jne
jmp
jmp
negl
adc
movsb
jecxz
inc
ss
jb
mov
xlat
jmp
sarl
jb
fisttpl
push
pop
sahf
xchg
loope
pop
mov
dec
adc
jge
rolb
pop
or
adc
aaa
lret
dec
mov
or
pop
xchg
dec
fstp
adc
sub
sub
and
mov
sbb
or
hlt
mov
mov
dec
xchg
iret
out
xor
fwait
jl
clc
aad
outsb
jmp
inc
cld
pop
push
addl
je
loopne
dec
xor
decb
nop
imul
frndint
xchg
or
mov
cld
lds
cmp
xchg
mov
test
dec
aas
adcl
and
stos
icebp
adc
ja
xchg
pop
sbb
test
or
adc
inc
outsl
je
imul
xchg
add
pop
call
adc
insb
or
call
rdpmc
xchg
inc
je
add
js
xadd
ret
and
lods
lcall
stc
add
add
push
lcall
push
ret
sub
pusha
add
push
in
mov
jl
sarl
lea
test
in
clc
fwait
or
push
sbb
inc
jb
pop
loope
or
cmp
pop
sub
aas
in
pop
lcall
es
cld
pop
add
push
cs
cld
ja
pusha
js
dec
mov
pop
cwtl
or
pop
add
or
pop
cltd
cmp
mov
stos
inc
xlat
lret
or
cmp
and
cltd
aas
inc
sub
or
cltd
xchg
movsl
inc
test
and
repnz
jl
push
and
iret
push
mov
lea
mov
pop
test
sahf
das
lcall
cld
clc
daa
and
adc
insl
mov
push
mov
dec
sub
xchg
adc
clc
in
mov
add
jmp
push
andl
pushf
inc
cmpsl
mov
dec
cmp
outsb
popl
xor
pop
loope
mov
jl
and
add
xor
sbb
inc
inc
pop
je
jg
push
cltd
fsubs
mov
and
cmp
add
test
cwtl
xlat
test
xor
test
fs
mov
shll
mov
cmp
test
test
cld
insb
insb
lret
push
or
hlt
cld
roll
mov
cmp
xchg
pop
push
sbb
push
push
rclb
push
mov
test
xchg
dec
add
xor
insb
out
outsl
push
notb
rcl
out
es
pop
outsl
out
sti
xchg
test
mov
hlt
popf
mov
pop
xlat
rorl
push
push
and
and
insb
lea
js
cmpsb
lcall
and
add
sti
sub
push
mov
and
clc
orb
and
push
or
out
pusha
cmp
xorb
push
orb
push
push
mov
jp
addl
jl
push
sub
xchg
aam
add
sub
test
xor
rcrl
ds
dec
and
push
pop
and
mov
pop
lea
dec
roll
push
fnsetpm(287
mov
fists
xor
lea
push
lds
and
es
sbb
sub
lcall
push
push
mov
and
mov
push
pop
out
call
out
adc
bound
mov
mov
push
xor
pushf
cltd
cwtl
sbb
lea
sbb
xchg
ret
rorb
scas
add
jle
xchg
xchg
enter
lods
inc
lock
sub
jns
add
sahf
inc
cmpsl
subb
jnp
or
movsb
aas
movsl
or
pop
adc
add
pop
xor
pop
jmp
nop
bound
xor
xor
adc
clc
js
adc
shl
and
shlb
lock
sub
and
pop
leave
inc
pusha
out
adc
jnp
xchg
pop
loope
movsb
fbstp
test
pop
insl
fs
push
push
mov
sub
pop
jno
ss
adc
scas
dec
adc
inc
aad
or
cltd
push
test
inc
jb
cli
aas
movsb
repnz
push
jo
sbb
mov
inc
es
out
mov
jmp
inc
adc
cmpl
push
mov
or
test
in
nop
mov
mov
cmc
sahf
xor
xchg
push
jb
jo
push
je
fadds
mov
ja
add
ret
pop
popf
sub
xchg
fldcw
ret
and
clc
dec
adc
std
mov
aad
jo
pop
sbb
js
and
sbb
mov
sbb
push
push
outsl
push
rcl
sbb
pop
into
nop
or
test
or
or
test
jne
lds
je
stos
mov
sub
add
pop
adc
jo
scas
sbb
sahf
add
shlb
mov
inc
pusha
and
mov
add
adc
sbb
imul
jne
imul
inc
xor
xchg
jne
inc
sub
cmp
jb
insl
add
xor
cmp
and
jno
jo
push
push
shl
jl
popf
out
loop
xorl
sub
add
outsl
xchg
mov
push
ret
add
out
sub
outsb
sub
js
push
inc
pusha
push
call
mov
test
sarl
fwait
add
add
sbb
mov
popf
jne
xchg
clc
push
sahf
out
cmp
pop
fisubrs
out
frstor
pop
lods
jo
aad
cltd
jb
int
in
loop
cwtl
addr16
popa
xor
dec
mov
or
sbb
ret
xor
add
pop
fmull
mov
es
add
mov
dec
cmp
sbb
mov
mov
mov
in
cmp
pop
cmp
aaa
bound
popf
in
aaa
in
mov
adc
pop
mov
jne
pavgw
mov
mov
pop
movsb
pop
rolb
sub
sbb
sbb
add
xchg
add
sub
or
fisubs
insb
inc
adc
mov
sbb
jmp
pop
scas
jo
xchg
outsl
mov
sbb
lods
xlat
testl
inc
sub
xor
leave
mov
roll
daa
lea
iret
xchg
iret
xchg
push
inc
sbb
pusha
pop
aaa
fwait
mov
test
dec
fadds
daa
inc
push
pop
test
mov
rcl
icebp
test
mov
lea
inc
or
mov
and
addb
add
dec
mov
push
push
sbbb
mov
mov
adc
stos
pop
rolb
std
jne
add
jno
xchg
mov
xchg
mov
popf
mov
mov
lret
jecxz
pop
pop
insl
and
cmp
sub
pop
push
push
pop
jb
je
stos
add
jns
jmp
stc
jb
cli
adc
cli
adc
in
jnp
loope
push
jns
std
sti
mov
iret
sub
dec
mov
pusha
add
mov
adc
add
pop
movsb
nop
lret
dec
mov
sarl
adc
lods
iret
inc
test
je
or
xchg
cmpl
mov
and
cmpsl
loope
sub
in
or
lods
test
addr16
inc
xchg
pusha
adc
xchg
pop
jg
push
ja
jl
pfrsqit1
add
dec
insb
or
and
dec
fidivrl
insb
jns
fcmovbe
pop
push
dec
movsb
mov
inc
lods
sub
jecxz
or
jo
cwtl
sbb
mov
and
xor
mov
and
adc
nop
call
mov
adc
jb
fbstp
mov
xor
es
lds
or
sub
pop
xor
fisttps
sub
jmp
in
mov
cmp
mov
nop
mov
jmp
or
movsb
sub
jnp
mov
push
or
repnz
pop
inc
out
out
aaa
sbb
inc
cld
cmp
test
inc
lock
and
outsl
nop
fdivrl
lcall
out
loopne
fbstp
add
je
jmp
or
shll
dec
or
movsb
in
imul
daa
subb
jnp
or
sahf
fwait
xchg
inc
mov
out
jo
or
mov
or
or
add
shll
imul
addr16
add
adc
cwtl
hlt
mov
cmp
clc
and
stos
outsl
lods
fistl
loope
or
addr16
pop
out
or
sahf
popa
jmp
mov
adc
mov
cmpsb
push
mov
push
xchg
je
add
mov
pushf
add
add
or
js
or
mov
call
mov
jnp
cwtl
sub
mov
or
sub
inc
pop
add
lea
cmpsb
lret
add
add
sub
repz
fucom
xchg
dec
mov
add
xchg
fstps
mov
add
push
push
mov
adcl
pusha
aam
add
loopne
sbb
mov
pusha
and
test
mov
pop
sub
cmc
shlb
or
adc
imul
jne
inc
pop
adc
push
sub
adc
adc
sub
loopne
jl
sub
adc
loopne
ljmp
push
dec
add
sub
in
iret
adc
adc
dec
shll
fdivr
call
dec
sub
cmc
loopne
xchg
jmp
xor
and
mov
pop
pusha
pop
pushf
sub
dec
addr16
lods
loope
adc
jl
femms
fbstp
pop
sub
popf
or
andb
pusha
in
je
fisttps
subl
shlb
push
ret
jg
jmp
push
nop
dec
in
xor
add
xchg
xchg
jg
lock
out
leave
add
or
dec
sbb
mov
sub
stos
pop
fsubrs
add
pop
jl
jo
cmp
mov
pusha
out
lods
cmc
xor
pop
jb
call
xchg
popf
inc
mov
stc
data16
js
push
lahf
flds
pop
adcb
adcb
cwtl
add
add
push
gs
shlb
pop
push
int3
xchg
cmpsb
shrb
push
fs
sub
push
inc
xor
loopne
adc
or
or
pcmpgtd
xor
call
add
out
fprem1
int3
stc
mov
mov
cmpsl
inc
inc
mov
inc
xchg
adc
ljmp
pop
nop
scas
or
mov
push
jl
mov
or
and
jo
je
loopne
push
adc
adc
je
push
and
mov
jbe
jbe,pt
sub
fwait
sbb
pop
js
mov
jno
dec
pop
mov
aas
xor
add
mov
jo
clc
and
rcl
je
xor
shll
insl
loopne
cmp
mov
push
movsb
mov
add
pushf
or
adc
stos
cltd
shlb
shll
pop
cmp
mov
ficompl
shrb
add
lds
rcl
into
enter
fistpll
dec
pop
and
loopne
rcl
loopne
out
adc
sbb
xor
pop
sub
inc
inc
fidivrl
movsl
sbb
loope
insl
cmp
mov
sbb
pop
shrl
pop
xor
xlat
mov
std
or
adc
lahf
loope
xchg
or
or
ret
add
adc
movsl
push
hlt
push
sub
dec
nop
int3
int3
sti
pop
or
shr
xlat
cmp
sbb
scas
popa
add
pop
lea
and
cmp
sub
neg
mov
push
mov
scas
ret
adc
mov
fsubs
and
mov
shl
setge
mov
outsb
loopne
imul
sub
enter
pop
xchg
adc
jne
rcrl
xor
or
arpl
arpl
jmp
and
jmp
into
add
loope
nop
pop
mov
jl
sub
dec
xchg
push
unpcklps
push
and
xchg
ljmp
idiv
push
adc
decl
push
js
lods
mov
xchg
add
jns
idiv
add
add
push
pop
or
adc
or
add
or
rclb
add
adc
push
mov
cli
jbe
je
mov
push
push
lcall
xor
stos
jl
idivb
pushl
loope
add
fucomip
mov
nop
mov
and
stc
jns
sbb
cmp
xor
lahf
adc
or
add
dec
cs
and
jns
mov
mov
frstor
push
jb
or
inc
stos
xor
push
xor
cld
xor
test
cld
cwtl
fisubl
adc
add
les
cmp
dec
push
cmpsl
push
shrb
mov
push
jne
rorl
clc
xchg
lock
sbb
cli
fidivrs
fiadds
mov
pop
pop
popa
rorb
data16
in
pop
jbe
mov
adc
scas
rcll
and
fwait
into
lds
push
fiaddl
add
cmp
repnz
push
add
cmpl
add
arpl
inc
movb
xchg
inc
pop
xchg
test
pop
add
sbb
or
jl
and
sub
xor
add
xor
ja
or
cwtl
sahf
xor
ljmp
stc
mov
adc
push
repnz
xor
jl
mov
xor
xor
xchg
je
je
mov
div
push
sbb
sub
and
insb
stos
xchg
out
sbb
xor
stc
add
dec
es
test
iret
cmp
stos
push
xchg
adc
and
add
insl
fcomps
mov
mov
repz
sahf
jbe
adc
inc
or
adc
cmpl
dec
pop
xchg
dec
ficompl
cmpsb
cltd
cmpsl
or
jl
add
cmp
push
sbb
mov
xor
stos
adc
and
inc
mov
inc
mov
pop
loopne,pn
push
and
push
jbe
pop
cs
nop
cmp
pop
push
in
bound
addb
popf
arpl
jmp
cs
lods
sbb
mov
jnp
sub
cwtl
xor
setl
push
das
adc
mov
push
or
jge
das
cmp
shll
cmp
push
cwtl
mov
subl
pop
cmp
mov
loop
jne
jmp
adc
js
inc
or
sub
xor
aam
pushf
or
je
shr
jmp
mov
push
adc
xor
fsubr
cwtl
jns
jmp
fisttpll
pop
ror
es
clc
xchg
int3
and
adc
add
push
movlps
xor
jne
enter
or
push
or
popa
ret
push
loop
cmp
bound
icebp
sub
stc
add
cmpsl
inc
je
int3
into
test
and
cmp
sahf
cmpsb
sbb
pop
imul
ret
add
pop
or
lret
jp
ret
inc
test
int3
push
andb
pop
xchg
or
cli
adc
inc
je
mov
das
or
push
mov
inc
arpl
xor
mov
dec
xchg
popf
shll
jbe
loope
dec
ja
add
fstps
leave
push
mov
or
xor
cld
fnsave
ret
jmp
xor
mov
add
and
popl
in
dec
mov
or
in
add
shll
pop
adc
xchg
rcrb
or
inc
sbb
dec
adc
mov
add
push
sub
js
decb
setp
popf
incb
pop
add
add
pop
add
into
add
mov
lock
pop
popa
in
mov
sub
and
rcll
rorb
jne
fadds
dec
clc
add
dec
cmp
lods
in
pop
cmp
clc
jmp
xor
outsl
cs
orl
sub
mov
fists
pop
xchg
add
push
add
jmp
les
pop
mov
push
stc
pop
add
sub
add
mov
sub
push
push
mov
cmp
stc
jbe
adc
jb
psubusb
sub
adc
push
fsubrl
mov
xchg
sbb
add
out
rorb
cmp
stos
lds
sbb
sahf
xorb
adc
in
xchg
adc
aaa
adc
push
mov
lcall
pop
push
insb
popa
add
mov
add
arpl
push
das
lahf
rolb
sub
scas
lock
and
or
lea
stc
mov
hlt
stc
je
mov
hlt
and
jg
lock
mov
jmp
mov
aas
cmp
xor
mov
dec
je
mov
mov
sbbl
jp
adc
repnz
sub
scas
mov
sub
cmp
pop
jne
mov
call
aam
adc
add
cld
dec
test
loope
inc
scas
push
les
mov
das
and
push
in
pop
add
icebp
inc
arpl
icebp
xchg
push
sbb
jle
daa
and
cmp
aas
and
aaa
push
lock
inc
hlt
push
push
imul
push
popa
pop
gs
testb
and
hlt
rorl
jmp
and
adc
sbb
stos
mov
cld
ret
add
push
pop
movb
jmp
push
icebp
add
and
push
addl
add
inc
in
add
les
xchg
add
pop
mov
cli
icebp
popf
inc
sub
lcall
jae
sarl
and
inc
cmp
and
xor
jle
or
or
lods
add
add
xchg
add
or
lcall
movsl
inc
or
jge
inc
mov
pop
jbe
loopne
inc
mov
xchg
push
clc
pop
addr16
icebp
outsb
sub
lea
hlt
pop
push
pop
loopne
add
call
adcl
sbb
pusha
xchg
pusha
rorl
adcb
je
orb
dec
inc
fistpll
or
hlt
pushf
add
nop
dec
insb
pop
or
es
mov
pop
and
inc
or
or
push
loopne
sarl
int
xchg
jne
pop
mov
fcompl
mov
fs
icebp
adc
icebp
in
andl
and
pop
jl
xchg
lods
inc
add
das
adcl
add
pop
sbb
push
push
push
in
lea
sbb
xor
lock
push
pop
fcoms
pusha
das
or
dec
call
add
push
mov
loopne
cld
rol
mov
push
mov
adc
cmp
push
sbb
push
scas
in
pop
inc
push
xlat
divb
or
adc
popa
mov
test
hlt
cmp
jne
scas
mov
mov
movsb
push
js
add
mov
push
loopne
push
pushf
mov
scas
movsb
ds
std
push
adcb
adc
rorl
inc
scas
mov
into
in
or
lods
test
les
mov
addr16
cmpsb
xor
jmp
xchg
leave
sti
and
or
mov
cs
pushf
xor
or
shrb
pop
sub
or
jl
cltd
nop
push
bound
out
or
mov
xor
dec
das
loope
or
enter
je
adc
or
sbb
jo
mov
mov
push
fmuls
out
cmp
or
fwait
push
inc
push
pushf
mov
call
and
bnd
add
add
cmp
jnp
and
sbb
cmp
mov
sbb
push
push
mov
xchg
pushf
pop
repnz
or
sub
and
test
mov
cmp
adc
dec
mov
repz
test
mov
push
xor
rorb
add
push
xchg
add
push
add
js
adc
dec
xchg
or
mov
sbb
clc
or
outsb
add
mov
pop
mov
stos
xor
faddl
or
arpl
inc
add
popf
mov
out
mov
pop
push
adc
and
hlt
push
mov
orb
and
jecxz
push
inc
in
jmp
in
sbb
inc
sub
mov
push
adc
pop
js
cmpsb
repnz
cmp
out
in
push
mov
dec
test
or
mov
adcl
xor
inc
insl
push
sub
dec
dec
outsb
and
add
pop
sbb
mov
fildl
and
ss
mov
adc
adc
push
push
mov
pushf
into
xchg
hlt
sar
add
sahf
or
ret
jg
sbb
hlt
xor
inc
imul
cmpsl
imul
or
std
dec
adc
push
loope
add
lea
shl
sbb
pop
jle
hlt
out
loope
inc
ret
mov
pop
jp
sbb
das
push
pop
pop
clc
ret
sti
lds
xchg
pop
mov
outsb
and
add
sub
add
pushf
mov
mov
add
sub
xor
sbb
jne
in
cs
icebp
pop
add
es
adc
mov
add
inc
loopne
xor
or
mov
setne
fidivrs
sub
out
and
mov
sbb
cmp
sub
jbe
adc
aaa
push
test
in
push
jbe
adc
mov
adc
dec
jl
add
mov
inc
xchg
sti
adc
dec
or
adc
in
loopne
imul
addr16
addl
fdivrl
fsub
jecxz
shl
fs
pushf
cmp
leave
mov
fadd
jb
dec
into
add
pushf
cmp
lret
movsl
xor
pop
or
add
int
push
mov
and
push
ss
and
cmp
shlb
mov
mov
jmp
inc
xor
shl
push
icebp
adc
daa
dec
dec
jnp
add
inc
xlat
push
loopne
xchg
xchg
inc
add
inc
lods
movups
xchg
aaa
dec
loope
xchg
xchg
push
in
mov
loopne
fsub
add
pop
jne
out
cmp
push
bound
inc
jb
arpl
sbb
nop
mov
roll
or
or
orb
aas
enter
add
and
ficoms
movsb
add
mov
test
adc
shr
lock
das
test
sarl
mov
movsl
sbb
pop
lret
mov
cmpl
and
adc
sbb
leave
cmp
jnp
insl
or
out
sub
stos
pop
aam
sbb
lea
rcrb
in
lret
add
and
daa
mov
rcrb
loopne,pt
ds
dec
sbb
jmp
mov
sub
das
and
mov
or
test
cmp
inc
adc
mov
mov
ret
test
or
jbe
lods
es
dec
mov
into
jbe,pt
fmull
out
mov
inc
negl
adc
ljmp
test
test
add
adc
shr
and
imul
adc
test
push
sahf
popa
int3
int
jmp
jbe
pop
dec
hlt
jge
enter
cli
mov
add
scas
jno
in
add
push
movsb
xchg
add
insb
lds
jmp
pop
out
sbbb
in
cs
repnz
cmp
dec
jge
insb
nop
or
insb
insb
push
and
jmp
sub
jae
out
jne
push
xlat
inc
test
adc
neg
mov
dec
or
pop
dec
or
mov
shl
push
or
push
pop
cmpsb
cmp
out
fsub
adc
dec
shrb
and
xchg
dec
in
inc
sbb
push
pushf
rolb
sbb
xlat
inc
cmp
je
mov
in
ljmp
repz
cmc
push
inc
jmp
cwtl
and
fdivs
loopne
inc
out
stos
or
push
cmp
add
adc
xchg
mov
fcoms
dec
xchg
jne
scas
mov
xor
lods
ss
fsubr
jbe
mov
sbb
shl
inc
cmp
push
adc
xchg
loopne
cmp
jmp
mov
sub
fsubs
mov
push
or
imul
rcll
aam
mov
ret
dec
sbb
fcomps
or
sbb
xor
cmp
dec
mov
or
mov
pop
adc
xor
mov
fcoms
jb
mov
rorl
jne
daa
dec
jne
dec
jne
or
pop
adc
mov
ret
xor
pop
jo
ret
adc
sub
inc
loopne
sbb
ds
jl
mov
sbb
std
jb
mov
testl
push
mov
loopne
jne
stc
jae
cmpsb
adc
test
jb
inc
add
add
sub
imul
add
lods
aas
lret
xor
add
outsb
adc
cmp
push
pop
add
adc
subl
out
fcomps
repz
pop
inc
adc
pop
aad
pop
sub
pop
fldcw
shrb
mov
div
or
arpl
shll
inc
mov
add
dec
sbb
lcall
sub
and
xorl
sub
sti
fadds
fnsave
cmp
mov
mov
mov
jmp
pusha
insb
pop
sbb
jo
sub
lret
std
and
out
je,pn
or
add
int
cmp
cmp
repnz
shl
jmp
jmp
daa
lock
ja
dec
push
add
xor
ja
push
hlt
jmp
pop
pop
or
xor
xor
jo
fwait
jp
sbb
dec
mov
cmp
push
in
mov
aad
and
loop
movb
je
adc
jmp
cmpsl
cs
push
test
dec
push
add
and
push
ds
stos
daa
or
push
stos
test
mov
adc
ret
call
push
pop
lea
push
xor
push
lea
in
mov
add
addb
sub
dec
ja
fbstp
icebp
cli
shl
lret
insl
add
dec
movsl
cwtl
inc
js
add
sbb
ja
inc
pop
mov
push
adc
int3
adcb
jmp
mov
push
or
iret
dec
mov
lods
sbb
or
push
push
sub
push
inc
adc
push
push
int3
mov
adc
loopne
repnz
or
add
inc
repnz
adc
pop
and
inc
bnd
sbb
das
sbb
gs
cs
sbb
or
sub
cmp
mov
enter
aam
nop
lret
dec
clc
push
shr
xor
icebp
adc
jnp
fdivs
xor
inc
pop
cmpsb
mov
sub
arpl
push
xor
xchg
mov
xor
mov
sub
xchg
stos
or
in
sbb
dec
xor
nop
int3
mov
in
mov
loopne
or
subl
cmp
xor
pop
dec
xchg
inc
sub
insb
push
imul
cmp
cmp
test
push
mov
push
mov
mov
and
test
loopne
hlt
dec
jl
adc
movsb
or
mov
mov
or
test
stc
xchg
insb
movsb
xor
adc
lods
add
pushf
mov
fists
int3
xor
enter
in
push
scas
cld
xor
and
mov
xor
mov
xor
mov
xor
jge
movsb
sbb
and
cmp
jns
orb
mulb
aad
js
cs
mov
test
rorb
xor
sarb
adc
stc
sub
clc
and
dec
xor
into
enter
nop
pop
imul
out
mov
divb
mov
pop
xchg
leave
test
das
mov
outsl
enter
fldl
xor
adc
int3
pop
or
leave
cltd
dec
pop
pusha
hlt
push
scas
adc
les
ja
push
pop
sbb
and
sbb
pop
shl
cmp
inc
jg
push
lock
or
xor
mov
xchg
add
xchg
movsb
out
adc
stos
pop
call
or
pop
mov
cmpsb
cmp
or
push
scas
or
rorl
insb
sbb
xor
fs
adc
arpl
mov
call
lock
lahf
xor
mov
sti
cld
shl
push
mov
gs
ret
mov
jbe
and
or
lock
ds
ret
lock
shlb
lock
mov
fmuls
push
cmp
jl
outsb
dec
hlt
cmp
add
or
mov
jmp
lcall
movsb
loopne
jne
pop
jle
adc
into
sbb
mov
adc
pop
mov
mov
arpl
call
das
mov
inc
rorb
aad
loop
loopne
mov
test
jg
cmp
imul
imul
mov
jmp
sti
clc
push
fisubrl
shrl
mov
js
and
into
add
jns
loopne,pt
inc
pop
xor
pop
sarl
sbb
decb
pop
bound
xor
mov
decb
decl
call
xchg
sbb
movl
mov
pop
or
mov
jo
ret
xchg
xor
movsb
pop
sbb
mov
lock
sbb
cmp
sub
or
lret
mov
mov
or
dec
dec
popf
add
jne
fistpl
jmp
cmc
cld
sahf
inc
add
add
dec
mov
or
sahf
xor
adc
push
sub
loopne
inc
jb
loop
jne
cmp
dec
sub
sbb
jmp
dec
and
sub
mov
sub
sahf
rcl
mov
mov
xor
jne
mov
sub
sahf
mov
push
adcl
mov
data16
dec
punpckhbw
or
add
ret
cmp
clc
inc
mov
jmp
cltd
lea
roll
jg
and
icebp
push
push
pop
jge
sti
push
pop
adc
add
pop
jne,pn
pop
adc
cmp
and
rolb
cmovbe
fcom
shlb
jns
hlt
jge
dec
dec
pusha
dec
hlt
push
decl
fcmovnb
fisubl
je
pop
xor
jbe
and
dec
sbb
hlt
dec
fucomp
push
lea
fwait
shrl
cs
or
sub
inc
lahf
and
hlt
or
pop
in
jmp
cld
lret
jmp
xchg
adc
cld
push
stos
sub
push
adc
and
pop
mov
int3
xor
mov
push
mov
sbb
or
loope
xorb
pop
jg
cmp
loopne
add
pusha
push
jbe
add
add
add
ja
jge
addl
addr16
subb
dec
mov
lods
xlat
inc
add
out
lea
push
stc
ds
out
xchg
inc
add
sub
loopne
jg
mov
mov
mov
add
aad
pusha
jp
push
push
jmp
push
inc
sarl
sbb
call
test
xor
test
insl
sub
and
cld
mov
xor
shl
cmp
and
pop
pop
pusha
pop
push
ljmp
mov
adc
adc
sbb
inc
or
pop
cmpsl
ret
sub
movsl
pop
mov
sub
mov
pusha
mov
jmp
push
repnz
test
adc
shl
pushf
or
int3
movsl
dec
mov
dec
aad
push
shlb
hlt
dec
loopne
lret
pop
sahf
adc
faddl
pop
fs
cmpl
int3
push
push
xchg
push
push
pop
ror
mov
cmp
or
rolb
stos
jnp
hlt
adc
cmp
and
add
int3
lds
daa
rol
cltd
movsb
pop
sbb
int3
mov
cmpxchg
adc
les
lock
xor
addl
xor
lock
jl
inc
mov
push
dec
inc
dec
lods
xchg
mov
sbb
and
in
imul
adc
data16
push
mov
xchg
enter
mov
sub
mov
int3
inc
aas
movsl
mov
stc
mov
add
pusha
add
jo
push
xchg
inc
pop
hlt
addr16
mov
add
add
nop
mov
pop
pop
je
adc
push
and
dec
add
xor
adc
inc
pop
and
inc
or
cmpsl
mov
rorb
popf
cmp
mov
pop
pop
clc
add
adc
or
ljmp
and
popf
push
pop
sbb
cs
add
sahf
xchg
push
pop
or
test
ret
inc
or
pop
mov
or
xchg
and
mov
loop
pop
adc
push
lcall
push
push
and
and
movsl
repnz
adc
loopne
xchg
iret
loopne
dec
pop
dec
jg
leave
mov
pop
cs
dec
dec
push
push
pop
cmp
xor
mov
outsb
lods
sub
mov
cltd
pop
add
jo
into
sub
or
mov
movsl
mov
repnz
and
jo
lods
jge
jnp
arpl
int3
add
shrb
dec
dec
stos
xchg
mov
lcall
push
pop
mov
mov
cli
pop
inc
sbb
out
add
mov
xor
movl
std
arpl
and
inc
or
cwtl
inc
loopne
pop
inc
test
dec
gs
pop
cmp
cmp
add
mov
sub
lahf
sarb
push
lea
sub
cmpsb
mov
xchg
test
mov
pop
sbb
jmp
mov
add
jg
arpl
out
push
or
pop
ret
mov
loopne
dec
fistpll
lcall
add
xor
jo
cmpsb
ss
aaa
clc
mov
dec
stos
ret
outsl
add
inc
cmp
mov
sbbb
jb
and
stc
hlt
sub
nop
add
mov
adc
cmp
push
pop
enter
jmp
dec
repz
orb
sbb
cld
or
push
test
sbb
out
mov
inc
pusha
test
fst
imul
push
stc
or
loop
loope
lock
push
int3
pop
add
cs
movsb
movsb
lret
jo
adc
ffree
sub
out
mov
stos
ja
loopne
test
jne
int3
mov
shlb
wbinvd
push
popl
dec
mov
test
push
mov
mov
mov
push
dec
jns
cld
sbbl
js
aam
jno
sbb
mov
and
movsl
mov
push
or
std
fdivr
push
rcll
repnz
cmp
adc
push
pop
sbb
xor
add
flds
or
clc
jmp
add
jmp
sar
mov
push
shll
pop
test
jne
scas
mov
enter
jl
pop
test
cli
push
les
in
cmp
sub
dec
aaa
sbb
scas
jae
sub
push
cwtl
stos
vpsubw
add
mov
add
push
cs
call
shll
mov
or
hlt
add
jo
pop
dec
dec
or
add
push
xchg
push
stos
pop
sbb
int
push
push
pop
jnp
push
hlt
lea
mov
lea
nop
out
dec
sub
push
sub
and
es
sahf
mov
dec
data16
daa
lods
inc
ret
vpackuswb
cmp
imulb
arpl
cmp
dec
xor
loopne
call
push
xor
cmp
es
movsb
mov
push
xchg
cld
leave
pop
xor
xlat
insl
mov
mov
repnz
adc
jecxz
iret
lcall
in
lahf
xor
xchg
and
dec
dec
xor
cmp
stc
dec
cmpsl
push
inc
loopne
inc
jo
push
sub
lea
push
sub
jecxz
or
dec
xor
add
cmp
sub
adc
enter
and
mov
ret
popf
test
push
mov
test
cmp
aas
int3
pop
xchg
sbb
sbb
dec
sbb
outsl
mov
xor
push
inc
lds
sub
and
pop
xor
and
ret
leave
in
dec
test
jl
aam
stos
ja
add
jl
push
adc
loopne
ror
movl
jl
outsl
loope
pop
jne
inc
pop
inc
adc
push
jmp
pop
pushf
in
inc
scas
push
imul
push
jns
in
sbb
pusha
sbb
xchg
adc
xor
je
xor
jg
imul
mov
shlb
je
es
add
or
fidivrl
test
idivl
in
push
adc
or
sar
sbb
xchg
adc
es
adc
sub
shll
sub
mov
push
dec
push
addr16
mov
pop
push
andb
push
clc
mov
sub
mov
sar
stos
je
mov
adc
clc
sub
adc
lock
jecxz
push
pop
outsl
jae
push
pop
push
lds
jecxz
in
sub
ficoml
jo
pop
mov
add
xor
sbb
decl
jnp
das
fstpt
or
and
lods
repnz
mov
push
outsl
js
sub
test
hlt
aam
fs
cmp
push
mov
mov
mov
loope
xchg
inc
std
sub
mov
push
enter
xorl
adc
cmpsb
or
or
push
add
or
sub
push
jp
sar
push
lods
lea
push
xor
or
or
push
sub
xchg
mov
or
stos
stos
or
lock
lret
pusha
lock
adc
and
jo
decb
movsl
dec
jp
adc
mov
mov
jg
pop
add
jl
mov
add
shl
jmp
into
pushf
mov
adc
dec
cmp
sub
jne
push
fisttpll
push
loope
or
jne
dec
adc
rorb
push
pop
add
inc
stos
add
push
and
scas
or
add
test
adc
inc
xor
xchg
add
lret
add
push
add
mov
sarb
aas
dec
inc
xor
push
call
aaa
sti
add
sub
jno
insl
mov
jp
mov
movsl
mov
push
imul
add
idiv
outsl
stos
sbb
pop
popf
es
js
lods
ror
enter
mov
xor
lret
leave
je
je
jo
or
imul
push
mov
adc
hlt
push
push
mov
insb
stos
mov
push
add
mov
cmp
mov
outsl
test
sbb
mov
call
jne
jge
push
mov
fadds
mov
dec
mov
test
loopne
cwtl
sub
cmovl
cmp
or
and
mov
dec
cwtl
pusha
je
pushf
shl
xor
cmpsl
fs
sbb
daa
push
jle
pop
or
and
movsl
pmulhw
fcoml
push
push
sarb
in
sub
clc
jle
and
adc
pop
mov
mov
cmp
rcll
mov
sarb
mov
daa
dec
jo
lods
lods
lret
fldt
xchg
jl
pop
jge
mov
cmpsb
and
pop
sbb
mov
test
test
into
cmc
adcb
sbbl
jp
jo
or
cltd
idivl
orb
out
sbb
lret
es
shll
dec
jmp
cli
scas
adc
mov
addb
inc
loope
vmwrite
in
xchg
ret
call
jae
lock
pop
xor
mov
test
and
pusha
movzbl
pop
jg
pop
lock
lret
jge
push
mov
pop
push
ja
mov
lods
andl
jecxz
push
aad
in
data16
or
push
jp
sbb
mov
dec
mov
mov
hlt
mov
pop
mov
xor
add
dec
movsl
add
mov
inc
lock
movsb
inc
cwtl
push
cs
mov
lods
cltd
movsb
mov
mov
jle
cs
jge
clc
sub
decb
pop
jmp
add
add
sbb
rcrl
aam
fcomp
dec
cmc
mov
xchg
cmp
inc
stos
les
jne
add
jbe
ja
sbb
add
leave
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
int3
lods
in
pop
sbb
mov
arpl
enter
sub
add
inc
in
dec
jns
or
in
ds
popa
jmp
cli
inc
mov
imul
or
int
pop
shrb
in
xchg
test
call
xlat
add
and
pusha
shrl
scas
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
mov
mov
insl
sti
mov
push
cmpl
or
fwait
ja
je
mov
push
xor
out
ficoml
sbb
add
sbb
adc
pop
jg
and
mov
imul
shlb
ds
roll
dec
xchg
jmp
push
xor
push
xchg
dec
shlb
lahf
loope
push
add
dec
rol
push
and
outsl
mov
adc
push
xchg
add
push
or
inc
and
jbe
jl
adcb
and
push
leave
inc
jno
add
xchg
cmpb
aas
pop
or
add
xchg
jne
sbb
les
rclb
sub
or
loopne
mov
mov
cmp
loop
loop
int3
clc
imul
pop
notb
pop
call
adc
xchg
inc
lds
lret
add
push
inc
xchg
lea
cs
jmp
lret
xorl
sub
sbb
das
sbb
and
add
sarb
shlb
adc
push
mov
je
sbb
xor
cmp
fadds
dec
sbb
add
insb
jnp
jge
push
stos
lea
push
mov
jns
lea
sbb
xchg
std
aam
sbb
add
rcl
add
arpl
mov
adc
jne
xor
sub
repz
pop
adc
mov
mov
xor
int3
inc
das
shll
in
mov
movsl
adc
inc
or
cmp
std
and
or
lds
cltd
fdivrs
fidivl
lods
pop
and
enter
or
cli
loopne
addb
inc
dec
dec
xor
mov
adcb
add
pop
jo
or
fdivrl
rcrl
mov
or
jne
cli
or
and
fmul
push
dec
cmp
mov
adc
rolb
test
push
xor
push
inc
fimull
dec
mov
int
stos
pusha
out
int
mov
fisubl
arpl
jno
jmp
fnstsw
push
sbb
pop
fwait
loop
or
dec
dec
in
sub
pop
out
and
loop
nop
call
push
nop
mov
dec
sbb
push
add
lods
mov
test
jmp
lahf
or
cmpsb
nop
mov
add
and
mov
and
test
xchg
jbe
or
loopne
jmp
rolb
jge
leave
dec
add
inc
or
inc
jnp
jne
sbb
push
inc
add
mov
mov
xchg
popa
ficoms
ss
xchg
cld
push
popf
or
loopne
sub
dec
and
test
or
test
add
aas
sbbl
push
ss
inc
xlat
shrb
or
sahf
mov
bound
cmp
aas
test
adc
in
or
movsb
out
hlt
push
dec
jge
dec
inc
subl
sti
add
shlb
xor
mov
mov
sub
xchg
push
dec
hlt
adc
and
pop
add
mov
iret
lods
sbb
lcall
jb
cmp
sbb
push
dec
pop
ret
xor
sub
pusha
adc
cmpl
mov
mov
xchg
push
xchg
push
or
rclb
or
call
pusha
mov
mov
subb
clc
jg
mov
and
cld
nop
lea
dec
fiaddl
mov
cmp
repz
mov
pop
cmp
push
cli
cs
mov
jl
mov
loopne
hlt
hlt
xchg
mov
stc
cmp
jne
push
movsb
lcall
jmp
movsl
rclb
mov
jmp
je
jp
hlt
test
and
stos
bswap
test
pop
adc
lahf
out
orb
js
imul
add
xchg
lahf
mov
inc
shl
je
adc
and
inc
fsubrl
mov
fmul
test
pop
inc
jge
cld
push
or
mov
or
inc
loopne
dec
jmp
dec
loop
inc
ud0
lock
sbb
push
cmp
xchg
pop
ficomps
jbe
push
ret
in
add
cmpb
push
xor
xor
mov
std
out
pop
adc
incb
stc
sub
lea
bound
push
push
mov
inc
dec
jne
test
pop
jne
dec
mov
and
mov
sub
mov
push
fcompl
push
mov
mov
adc
js
push
out
clc
sbb
jne
dec
sbb
xor
push
push
movsl
call
jne
cmpsb
mov
dec
call
scas
jnp
out
push
pushl
mov
xor
je
mov
in
fld
es
jge
sbb
sti
inc
mov
aam
dec
lea
cmp
sbb
inc
jmp
push
xor
push
divb
leave
cld
popf
sar
xor
cmp
fs
jge
xor
pop
dec
stc
inc
leave
ret
or
jg
daa
or
mov
push
push
mov
jne
cmp
hlt
and
dec
jle
pop
enter
mov
push
sub
mov
rcll
or
mov
jne
movl
mov
push
push
mov
pop
sbb
mov
adc
movsb
loopne
rcll
scas
shlb
push
shlb
dec
and
into
aam
xor
inc
and
test
or
inc
jno
lods
pop
std
or
xor
fldenv
or
rorl
push
mov
cmpsl
data16
cmp
loopne
rorl
lret
or
mov
or
mov
rcrb
add
push
les
mov
not
and
mov
and
clc
push
jb
mov
pop
xchg
mov
cmovge
add
add
add
add
cmc
jl
mov
addl
mov
mov
arpl
loopne
leave
loop
pop
xchg
push
jno
push
fs
mov
maskmovq
testl
jne
add
jb,pt
push
pop
or
mov
xor
pusha
lock
movsl
fld
inc
add
pop
cld
mov
fs
loop
add
mov
mov
push
add
add
shlb
adcl
push
inc
inc
mov
mov
rol
into
sbb
jbe
jbe
leave
dec
dec
cli
jns
adc
inc
add
addl
clc
jo
add
inc
inc
div
das
xor
jno
fadds
push
js
add
mov
xchg
xor
and
sbb
leave
sub
fadds
andl
imul
push
push
mov
xchg
ds
out
jle
mov
sahf
enter
addb
int3
push
rcr
adc
sub
jnp
addb
xor
add
xchg
enter
in
push
sub
adc
mov
add
inc
pusha
lcall
test
out
pop
sahf
std
data16
movl
leave
inc
jmp
jmp
jle
xchg
gs
imul
fcmovnu
or
add
out
sbb
mov
jnp
and
cs
pop
bound
sbb
push
jo
mov
fidivrl
jnp
inc
les
mov
jmp
cmp
add
pop
dec
movsb
dec
and
adc
lock
adc
dec
add
add
cmp
aaa
pusha
push
adc
call
push
jmp
mov
sbb
ja
cmp
adc
addl
jno
push
je,pt
fistpl
inc
add
mov
lcall
or
mov
inc
inc
xchg
iret
jle
test
dec
test
jg
adc
dec
add
shll
mov
push
add
icebp
mov
in
push
pop
icebp
cmp
push
pop
xor
mov
sbb
ljmp
call
into
cmpsb
xor
inc
mov
jmp
sub
call
pop
pop
xchg
test
in
sub
in
sub
pop
inc
xor
push
imul
inc
testl
mov
cld
stos
enter
cld
lret
jnp
movsb
adc
or
jle
js
je
xlat
pushl
je,pn
push
push
lea
xor
xor
xor
xor
xor
jae
jle
rcrb
mov
lret
jnp
in
lods
cmp
jo
push
sbb
xor
mov
popl
or
test
and
xor
ljmp
aad
orl
movsl
out
fsubrs
stos
pop
sub
inc
adcl
sbb
push
sbb
test
and
filds
or
dec
inc
lea
rep
jno
push
ds
or
add
pop
shll
pop
lret
add
jne
push
cmp
cli
push
clc
fstp
add
jl
rclb
pop
fiaddl
adc
arpl
rolb
mov
roll
stc
fnstsw
aaa
sbb
rorb
adc
neg
pop
sbb
icebp
sbb
pop
inc
call
mov
xor
mov
cmp
jbe
clc
jb
in
movsb
pop
rcrl
push
pop
and
and
dec
call
pop
adc
sti
adc
clc
push
cmp
jae
test
cmp
jb
ja
xchg
and
push
aam
enter
jae
aad
mov
jb
loopne
add
xor
push
ss
in
push
in
out
adc
and
mov
mov
mov
mov
or
scas
adc
nop
scas
imul
int3
xchg
dec
add
movl
dec
inc
add
add
or
mov
repz
mov
jp
cmp
jecxz
in
and
call
cmp
in
lock
hlt
clc
dec
mov
mov
push
insb
fistpll
clc
fnstcw
jmp
out
clc
or
and
mov
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
or
or
cld
out
jo
neg
adc
and
and
xchg
daa
stc
sub
sub
test
rcr
xchg
frstor
add
out
add
or
cs
mov
loop
addr16
add
outsl
bound
ljmp
jns
out
push
xor
inc
dec
push
sahf
out
icebp
pushl
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
orb
push
cwtl
lods
dec
push
xchg
mov
aaa
push
add
add
outsl
pop
in
je
sub
push
push
push
enter
jge
adc
push
push
stos
adc
lret
gs
sbb
push
pop
mov
pop
cli
fdivl
push
add
jecxz
jmp
adc
stos
lcall
jge
pop
adc
push
and
cmpsl
mov
jae
popf
popa
mov
jb
jmp
scas
pop
pop
ficompl
push
sub
push
stc
je
icebp
jo
out
sub
push
adc
pop
or
mov
andl
movl
push
pop
fstpt
addb
jo
call
test
sbb
lock
pop
stos
inc
add
mov
pusha
notl
pushl
push
xor
andl
inc
add
lods
push
out
loopne
inc
dec
lcall
inc
mov
jle
add
lds
inc
fiadds
in
fimull
inc
hlt
daa
clc
inc
push
jns
pop
sbb
pushl
testl
xchg
or
scas
jns
or
je
pushl
sbb
push
inc
push
cmp
mov
xor
push
push
xchg
test
int3
push
cs
or
cmpsl
cmp
mov
mov
or
ficoms
cmp
sbb
out
testb
aaa
mov
cld
int3
sbb
pop
jo
out
xchg
enter
xchg
jae
pop
push
jp
es
jl
inc
hlt
push
das
jl
pop
int3
leave
stos
add
jg
icebp
popa
push
or
decl
adc
mov
les
cmp
mov
push
inc
inc
inc
inc
jmp
and
or
shrl
cmp
xchg
or
xchg
call
add
addr16
pop
mov
inc
inc
sbbb
rcrb
sti
sbb
adc
mov
or
shr
rep
adc
data16
xchg
insl
movb
arpl
mov
scas
dec
insb
mov
or
dec
add
push
cmp
adc
push
jle
mov
out
jo
pop
dec
sub
mov
mov
cmpsb
mov
mov
cmp
adc
aas
or
cmpsl
pop
pop
lock
mov
testb
adc
sub
enter
mov
add
outsl
sub
and
popa
xor
jbe
push
cmp
add
jae
jecxz
shl
mov
inc
and
jp
and
imul
mov
in
add
jno
bound
sub
and
push
mov
add
ss
push
push
andb
pusha
xor
lods
sbb
and
mov
adc
push
sbb
and
add
or
sbb
and
mov
adc
xchg
mov
sub
jae
data16
jge
xchg
hlt
cld
cmp
jne
je
fdivl
push
add
ds
push
push
push
movl
sti
add
inc
inc
imul
outsl
push
fidivrs
fimuls
jg
jl
cmp
jb
cmp
jl
jg
sub
pop
les
xchg
jbe
and
clc
and
punpcklbw
xor
pop
or
xor
sbb
sbb
push
cld
out
lods
xorl
xor
add
mov
loop
fcomps
sbb
push
mov
mov
std
lahf
push
bound
test
outsb
mov
test
push
xor
popf
jge
cmpsl
sbb
pop
sub
sbb
lock
push
lock
imul
inc
and
mov
cmpl
xor
dec
xor
andl
ret
jnp
aaa
fists
clc
sub
mov
sbb
xchg
jmp
sub
mov
fs
js
push
push
jbe
aaa
repz
pop
mov
add
add
push
adc
aaa
fs
add
add
sub
fisubl
fwait
cmp
sub
sbb
xchg
or
or
or
push
xchg
fnstenv
jg
mov
sub
leave
jbe
jl
sahf
push
cltd
pop
idiv
add
and
dec
or
push
sbb
sbb
lods
dec
int3
int3
iret
out
cmc
jl
out
lea
dec
loopne
xorb
shrl
mov
pop
decl
or
adc
mov
test
sahf
lock
sbb
lea
stos
adc
data16
xlat
jg
pop
not
pop
and
enter
icebp
mov
mov
jg
sbb
push
add
push
adc
push
js
mov
cmp
push
jg
cmp
stos
add
dec
push
cmp
add
add
cmp
mov
in
out
cmp
sbb
aaa
roll
pop
push
adc
divb
fs
sar
mov
mov
or
cmp
adc
cmpl
lcall
mov
sbb
mov
adc
leave
cmp
call
in
cld
pop
mov
jne
jb
push
mov
mov
push
notl
and
imul
jge
push
fsubs
shlb
clc
scas
xchg
dec
inc
adc
jl
lret
inc
pop
or
aas
loopne
adc
cmp
lcall
cmpsl
inc
addl
ljmp
push
shr
push
adc
cmp
pop
cmp
jmp
int3
xchg
push
jle
and
cmpsl
mov
mov
bound
xchg
fcmovnbe
test
fildll
push
mov
shr
adc
jae
sub
and
jmp
dec
mov
out
add
aas
and
add
ret
jmp
in
daa
call
jle
or
jmp
shr
lea
fcoms
adc
and
pop
test
pusha
jo
mov
fimuls
rorb
in
outsb
cmp
cli
sub
aas
test
xor
test
int3
roll
jg
mov
sub
ficoml
push
cwtl
into
sub
shrl
jbe
jg
pop
shlb
jmp
neg
enter
divl
lock
push
pop
add
loope
enter
pop
dec
and
or
sbb
clc
or
add
pushf
loope
pop
pop
data16
mov
fldl
add
sbb
insl
push
loopne
fisubrl
gs
popf
mov
and
push
pushf
pop
loope
sub
popf
pushf
pop
sub
je
push
popf
sbb
mov
mov
clc
cmp
data16
pop
testl
add
push
pusha
cli
cmp
in
pop
or
in
sbb
mov
ficoml
mov
jle
sub
test
sti
or
movl
lea
fdivrp
aas
add
dec
imul
jg
inc
lea
cmpb
in
sub
sub
loope
push
imul
jl
testb
inc
testb
je
inc
jnp
sti
mov
or
test
or
jl
psrlq
inc
loopne
sbb
clc
jae
loopne
sub
out
jnp
pop
pop
push
and
sbb
pop
or
push
sbbb
cmpl
sbbl
out
lods
mov
pop
cmp
je
fcomps
fbld
jl
shl
dec
or
mov
fs
outsl
sub
sahf
add
mov
sbb
push
jg
pushl
loope
sbb
aad
mov
sti
stos
add
or
xchg
das
inc
fisttpll
jmp
sahf
dec
push
in
rclb
inc
les
push
mov
js
jne
rcll
mov
sbb
and
and
pop
in
jne
inc
sbb
xor
mov
rcrl
dec
dec
or
push
fildll
cmp
test
sbb
cmpsb
pusha
shll
sbb
fnstenv
mov
out
push
mov
mov
or
int3
out
mov
or
fcmovnu
loope
push
jl
dec
or
pop
in
mov
add
add
repz
cmp
or
jg
mov
push
outsl
aas
mov
lock
push
push
arpl
pushf
sbb
pop
push
fstpt
out
and
addr16
push
clc
jno
mov
adc
sbb
sti
dec
movsl
icebp
std
mov
push
pop
jg
jmp
nop
add
inc
xchg
pop
mov
cmp
jl
pop
pop
mov
leave
lock
ret
rorl
xchg
leave
xchg
or
popf
adc
fneni(8087
or
adcb
or
and
sbb
scas
sbb
repz
int3
les
fdivr
shlb
xorb
pop
jmp
pop
inc
fmul
mov
mov
rorb
aaa
jp
cmp
aaa
inc
mov
sbb
push
call
inc
cltd
push
jbe
sub
clc
jmp
and
or
mov
cmpl
adc
decb
loopne
cmp
jae
or
stos
mov
je
mov
jle
fmuls
cmp
dec
shlb
nop
fsincos
repz
in
nop
in
sbb
adc
add
adc
lock
sub
pop
in
or
sarl
stos
ds
cmpl
pop
jge
cld
adc
test
cmp
mov
mov
pop
ret
mov
add
inc
push
std
sbb
je
hlt
xor
daa
adc
mov
test
cmp
adc
dec
imul
mov
mov
das
sbb
cmp
xor
inc
out
pushl
xchg
jno
shll
cmp
and
flds
cmp
cmp
std
outsb
push
cmp
add
jge
dec
scas
mov
je
addr16
aam
push
push
adcl
inc
clc
jg
add
test
out
ja
mov
pushf
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
imul
pop
pusha
mov
orb
int3
add
and
dec
mov
push
dec
popa
jecxz
add
dec
jo
cld
mov
shll
pusha
rclb
ljmp
pop
adc
adc
jg
cmp
or
leave
push
dec
je
dec
add
shlb
hlt
add
jno
pop
loopne
fcoms
jmp
xor
or
cmp
jmp
adcl
add
sub
cmp
add
inc
mov
movsl
pushl
adc
arpl
push
icebp
enter
adc
inc
cs
test
flds
arpl
mov
pop
sub
xorb
xchg
jns
popa
jle
sbb
mov
mov
filds
mov
cmp
je
pop
cmc
or
push
lods
and
push
add
out
push
cmpsl
rolb
mov
mov
rorb
ja
push
adc
jg
xor
inc
cmp
jae
push
cmp
jl
sbb
inc
sahf
jp
adc
mov
xorb
pop
inc
jne
lea
testb
jne
clc
push
mov
stc
scas
inc
lock
into
add
push
xchg
mov
mov
jb
pop
pop
pop
pop
stos
push
or
cld
nop
sbb
add
je
cmp
in
xor
or
lods
fisubl
push
push
enter
icebp
cmp
int3
cmpb
mov
cmc
scas
xchg
pusha
sbb
push
cmp
je
or
dec
incl
sbb
fisubl
pop
cmc
lods
mov
hlt
xchg
mov
je
pop
jne
stos
push
xchg
xlat
mov
inc
xlat
jns
jne
jmp
pop
pop
out
and
in
rcll
fld
andl
push
mov
pop
ss
sbb
dec
cmpb
jle
add
call
add
cld
cmp
cs
inc
add
sub
inc
rolb
or
pop
lods
xchg
dec
aam
cli
sti
push
in
mov
mov
push
mov
jle
add
xchg
dec
loopne
clc
mov
arpl
inc
push
lock
mov
jae
loopne
push
mov
jg
dec
movsl
jno
sahf
ljmp
pop
insb
aam
pop
cmpsb
xlat
mov
insb
sbb
pusha
jbe
add
test
sbb
dec
mov
data16
add
dec
jg
adc
orl
call
lret
pop
hlt
and
mov
cmpsb
add
mov
or
shlb
xor
fadds
sbb
orl
decl
scas
addr16
loopne
pop
and
sbbb
pop
inc
xchg
or
adc
mov
out
and
xchg
bound
sub
and
sbb
push
dec
or
mov
pop
adc
sbbl
es
lret
jp
add
mov
push
mov
and
xor
mov
aaa
lock
or
adc
ss
mov
mov
jg
adc
xlat
je
cmp
adc
cmp
jb
jmp
stc
or
inc
and
xchg
insb
testb
int3
xchg
mov
inc
sub
dec
dec
sarl
jmp
inc
aas
cmp
faddp
sbbl
clc
out
clc
cmp
cmpl
sub
pop
adc
daa
mov
push
or
mov
movzbl
push
out
sbb
imul
shr
jmp
das
xor
js
push
sub
add
adc
pop
imul
js
inc
mov
mov
je
push
cmp
shlb
xchg
adc
daa
mov
and
adc
mov
loope
cmp
push
mov
loopne
shlb
in
push
lds
testl
and
leave
cld
in
cs
fisubrs
dec
mov
out
call
push
jne
and
add
shlb
mov
dec
jnp
push
push
and
orl
jns
mov
orl
dec
jle
pusha
lret
test
mov
jl
hlt
inc
pop
call
mov
cwtl
and
xchg
mov
sti
lret
outsb
out
test
push
cld
push
jo
xchg
cmp
add
lock
or
clc
je
in
outsl
or
pop
pop
lret
inc
or
lock
cld
mov
ret
insb
cmp
lods
pop
arpl
les
cmp
mov
adc
push
jns
mov
clc
dec
stos
inc
ret
dec
mov
adc
sub
dec
daa
and
or
push
push
movsb
and
mov
sbb
das
dec
cmc
orl
mov
jmp
push
subb
cmpsl
xor
push
fildll
icebp
dec
add
jns
sub
cmp
ret
add
in
or
inc
and
push
cltd
sbb
sbb
xorl
inc
inc
dec
sub
sub
pop
cmp
mov
test
push
or
cmp
repz
adc
or
pop
lock
push
sub
cmp
nop
pop
test
mov
cmp
sbb
mov
addl
mov
sub
sbb
sbb
outsl
mov
adc
adc
mov
sbb
pop
sub
stos
and
cmpsl
dec
mov
push
mov
and
popf
ds
mov
movl
dec
ja
xchg
and
xor
out
mov
adcl
and
out
sub
dec
sub
inc
mov
andl
fnstcw
cli
mov
aaa
xor
push
sbb
sub
xchg
call
fsubp
ja
movups
push
jne
sub
mov
aas
dec
adc
add
in
lret
xchg
rorb
sub
cwtl
push
mov
sbb
push
push
mov
sub
jo
or
jmp
bound
jl
rclb
dec
mov
pop
jmp
jne
mov
nop
push
inc
pop
pop
pop
leave
mov
jg
and
mov
jo
push
push
xor
jecxz
adc
insb
pushf
aas
push
insb
and
mov
sub
lock
pop
sub
push
testl
lods
je
pop
jno
in
stos
cld
xor
dec
push
mov
cltd
jle
mov
push
push
and
nop
js
popa
sub
mov
mov
adc
pop
adcb
push
sub
test
push
inc
les
add
idiv
jmp
jbe
or
test
jl
sub
push
cmp
lea
mov
mov
push
push
dec
cmp
mov
pop
and
push
pop
sub
shll
mov
loopne
xchg
and
push
pop
cmpl
pop
int3
push
or
push
or
push
or
jle
push
mov
adc
inc
sub
incl
imul
out
and
shlb
push
cmpl
ffree
stos
cmc
das
add
or
lea
push
testl
sub
icebp
jb
mov
xchg
push
or
shll
jb
xor
add
lret
pop
testl
fsubrp
or
mov
lret
iret
and
sub
or
sarb
push
or
jl
sbb
inc
pop
mov
sbbb
sbb
pop
sub
and
lret
pop
test
leave
push
inc
test
pushf
push
add
cmp
xor
cld
mov
testb
rclb
test
je
stos
mov
inc
inc
mov
mov
add
add
cmp
jb
cmp
jb
cmp
jle
jge
cmp
mov
xor
push
shlb
int
cmp
jae
inc
mov
mov
rol
jbe
test
sub
mov
rcr
loopne
xor
lea
sub
push
lods
xchg
lcall
and
lea
or
cmc
cmp
fmuls
pop
add
sbb
fstpt
dec
cld
mul
push
sbb
shrd
loopne
imulb
xlat
push
mov
mov
mov
popf
out
xchg
mov
mov
mov
subl
add
cmp
je
pop
sbb
popf
aaa
lea
jl
sub
mov
bnd
push
inc
jge
pop
xor
inc
mov
mov
cmpsl
das
jecxz
jg
fwait
cmp
lret
mov
mov
inc
call
cmp
jle
push
adc
rclb
mov
xor
fisttpll
add
jl
fwait
push
pusha
push
rclb
sahf
push
dec
loope
add
add
add
inc
mov
xor
aad
inc
aam
cmp
mov
push
imul
xor
ds
jmp
mov
mov
cmp
sbb
leave
mov
push
inc
mov
test
jle
or
call
int3
std
sbb
cmp
je
dec
sub
jg
cmpb
clc
inc
int3
sub
jg
mov
mov
les
and
pop
lea
mov
push
adc
sub
testb
jne
scas
outsb
ret
xchg
jp
push
adc
pop
lock
les
cmp
or
rorb
xor
les
push
dec
les
mov
or
adc
sub
daa
les
push
dec
add
pushl
xor
jb
push
jnp
cmp
leave
shr
lds
rcrb
call
ret
loopne
jl
sub
xchg
cs
cmp
and
xor
mov
add
sub
add
inc
add
push
xchg
push
js
movsl
icebp
dec
stos
nop
sbb
shl
into
ret
xchg
je
mov
mov
pop
imul
add
fnsave
mov
sbb
mov
je
dec
mov
adc
adc
push
outsl
movdqa
push
dec
adc
push
and
cltd
sbb
pop
xor
dec
push
clc
jl
fwait
pop
outsl
inc
or
jbe
jle
jg
cmpsl
sbb
outsl
ja
jo
mov
mov
loopne
loop
jo
sbb
hlt
mov
dec
inc
arpl
stos
shlb
pop
aam
sti
sub
and
or
add
sbb
xlat
jne
test
push
jg,pt
jl
mov
icebp
push
push
pop
pop
ret
call
test
sbb
xor
mov
push
in
add
sub
lock
in
lock
rep
stos
mov
iret
jne
and
adc
adc
add
jp
in
aad
sub
push
push
ret
jmp
faddl
insl
and
movsl
mov
and
sbb
icebp
mov
shll
lret
adc
sub
inc
outsb
mov
push
jne
sub
sub
jbe
int3
or
pop
xchg
lcall
push
or
scas
push
push
dec
pop
or
push
inc
mov
pop
bound
in
or
js
add
push
add
movsl
je
push
push
sti
dec
das
inc
cwtl
ret
dec
inc
add
and
cmc
xor
cmpsl
sbb
loopne
fcompl
pop
pop
xchg
fcomps
int3
jns
stc
std
data16
popf
enter
std
jns
movsl
shrb
int
lea
adc
dec
add
sarl
enter
insl
ja
aaa
dec
cld
adc
cmp
push
ljmp
and
enter
dec
xor
adc
js
xchg
dec
or
fildl
add
push
adc
cwtl
or
sub
dec
pop
dec
mov
daa
sbb
sarb
jmp
jge
or
mov
mov
call
xor
stc
sub
jb
lea
push
adc
push
pop
out
in
cmp
push
add
push
mov
shrl
ss
mov
ret
repnz
je
pop
in
inc
repnz
add
sub
aas
push
js
les
or
xor
pop
pop
push
aaa
icebp
push
mov
mov
sahf
out
fisttpl
push
sarb
out
cwtl
pop
scas
andl
cld
push
or
sbb
pop
enter
sub
sub
cmp
in
into
sub
nop
xchg
push
mov
mov
mov
sahf
imull
mov
or
push
inc
dec
jno
out
push
pop
fs
sbb
aaa
pop
inc
nop
aaa
jno
testl
pop
and
add
mov
and
push
cmp
or
xchg
push
pusha
ja
push
adc
push
adc
mov
sbb
fimull
cmp
push
int3
out
inc
dec
jne
jo
sub
push
jo
push
shll
push
ljmp
je
ja
xor
push
pop
into
pop
scas
sbb
push
test
popa
adc
pop
cmp
ja
cmp
lods
inc
aam
xchg
bound
or
popa
andl
in
es
add
push
jmp
and
push
paddb
sbb
pop
mov
loopne
mov
add
mov
sbb
xlat
mov
xchg
cs
rorb
dec
and
mov
je
pop
adc
and
jmp
push
dec
daa
mov
xor
out
icebp
inc
lea
mov
rolb
and
add
xchg
pop
or
jle
rolb
mov
jb
add
add
jb
test
mov
add
add
push
dec
mov
lea
lret
sub
ret
adc
add
sub
in
test
unpcklps
fcoml
cmp
adcl
add
mov
push
pop
fwait
dec
push
adc
jae
mov
inc
lea
jb
cld
sbbb
sti
ret
jae
iret
lea
sub
adc
out
push
sti
add
xor
sub
in
loop,pn
rcrl
mov
add
xor
xchg
pop
pusha
xchg
mov
add
and
jnp
mov
lods
dec
and
pop
pop
ret
andl
xor
insl
aam
inc
mov
xchg
mov
pop
or
dec
cld
add
pop
push
push
shrb
pop
dec
pop
sahf
xor
cs
les
dec
packssdw
lods
xorb
popa
orb
xchg
cmp
xor
cmp
rol
adc
mov
shrb
sub
sub
mov
lods
xor
mov
dec
test
pushf
or
push
cmp
sti
sbb
adc
addb
lret
jg
push
movzwl
icebp
sub
jmp
adc
inc
insb
es
or
push
cmc
insl
aaa
mov
push
call
dec
sbb
mov
xchg
jge
sub
xchg
jne
lahf
pop
ds
mov
or
pop
stos
jl
mov
clc
js
or
or
adc
std
into
adc
adc
jno
pop
cmp
jne
mov
add
pop
fcmovnu
pop
in
sub
pop
cmp
ja
insl
mov
or
ja
adc
add
call
cmp
jae
insb
or
jb
push
jae
push
clc
jbe
add
add
sub
test
jne
sbb
pop
test
pop
xchg
adc
movsl
cs
sub
orl
sub
aam
add
sbb
clc
mov
or
das
push
push
jbe
or
cmpsb
add
and
jnp
mov
push
mov
add
push
mov
push
rcr
loop
jb
ljmp
xchg
call
pop
dec
xor
ret
mov
cmpb
jmp
sbb
pop
dec
sub
push
mov
mov
add
pop
or
inc
dec
mov
add
or
or
xor
data16
dec
jbe
push
mov
fwait
test
jle
add
or
loope
or
lea
stos
add
inc
adc
sub
mov
out
mov
dec
jne
lea
daa
or
jns
dec
call
je
mov
adc
cmpb
jo
mov
push
mov
mov
fildll
out
push
movb
xor
lea
add
enter
out
add
lea
mov
add
jnp
lods
inc
fdivrs
jbe
fdivr
ficoml
pop
cmp
mov
mov
lcall
std
push
cmp
jo
scas
arpl
imul
and
mov
test
mov
mov
sbb
lods
jmp
and
je
and
push
in
push
nop
mov
pop
getsec
clc
adc
aad
jmp
mov
push
ret
mov
push
hlt
out
out
mov
cmp
test
pop
rcrb
push
roll
mov
push
and
and
jmp
or
fwait
lret
cmp
jb
push
rolb
xchg
aaa
xor
clc
mov
sbb
or
bound
and
andl
cmp
mov
cltd
jnp
cs
push
mov
mov
mov
rclb
inc
jmp
add
test
and
cmp
push
cmp
lock
push
into
jne
movl
cmp
push
popa
push
outsb
fwait
insb
jmp
inc
std
jne
rol
leave
mov
fldt
mov
mov
jmp
ja
clc
call
loope
loopne
sub
mov
stos
aam
dec
or
mov
cmp
push
mov
fadds
das
and
adc
mov
mov
xor
or
inc
fs
push
jmp
je
push
daa
in
add
out
push
and
xor
bound
orl
rcrb
inc
in
inc
jae
cmp
jbe
movsb
js
movsb
iret
push
jne
push
roll
leave
jae
inc
pop
push
pop
lods
ror
dec
rclb
cld
mov
xor
lea
in
leave
mov
push
into
sub
and
mov
cmp
out
cmpb
cmp
jbe
les
inc
cmpb
shrl
or
loopne
xorb
sbb
movl
shrb
mov
adc
mov
inc
jle
out
jmp
xor
inc
dec
jne
mov
inc
and
and
or
cmpsb
mov
add
shll
jle
fcmovnu
jp
xor
mov
push
jle
or
jne
fisubrl
and
icebp
lret
gs
jnp
test
xor
movb
cmpsl
adc
mov
xchg
fdiv
dec
loopne
adc
ret
pop
mov
mov
cmp
or
and
dec
loop
sub
aas
or
mov
rep
andl
add
or
test
push
cmp
cmp
faddl
enter
inc
adc
push
jo
aam
mov
int3
cmp
mov
insb
ljmp
pop
add
and
das
mov
mov
mov
push
rolb
jge
enter
frstor
lret
int3
sub
jmp
xor
add
mov
mov
add
out
add
ret
ss
pop
sbb
arpl
xchg
push
pop
ja
jno
es
sub
and
bound
sti
imul
sub
loope
shll
leave
lods
data16
and
lods
subb
adcl
pop
movsl
pop
sbb
push
std
cmp
mov
inc
mov
pop
cmp
jne
ja
movsb
sbb
mov
adc
roll
jb
into
int3
mov
lahf
jno
push
hlt
mov
movsb
rolb
sub
inc
xchg
int3
lret
sub
fidivl
cwtl
sarb
ja
lea
push
mov
push
cwtl
mov
jne
gs
jg
lods
mov
out
jle
or
push
cmpl
sahf
inc
adc
pop
sbb
cmp
pop
xchg
adc
subl
jecxz
push
dec
sbb
or
ret
in
xchg
mov
frstor
add
mov
lea
mov
mov
aaa
cmpl
mov
ret
movaps
idivl
sbb
or
cmp
mov
xor
pop
mov
xor
cmp
je
push
mov
adc
loope
sub
sbb
jns
mov
cmpl
pop
in
inc
or
xchg
hlt
jbe
outsb
mov
shl
ret
adc
dec
jle
sub
xor
loope
lea
mov
fsubr
lods
xlat
jmp
jmp
add
xchg
sbb
push
lock
gs
sar
jge
adc
or
test
xchg
or
mov
rolb
xor
leave
xor
xchg
cltd
push
test
and
cmpsb
imul
push
add
sbb
cltd
ss
jp
or
movsb
inc
jecxz
pop
dec
rcrb
fcoml
fsubrs
or
mov
push
mov
cmpsl
sbb
decl
jo
out
lock
push
mov
cmp
je
cmp
sbb
mov
push
push
xchg
cwtl
ret
loop
xor
aas
sbb
pop
mov
adcb
cmp
xor
das
inc
aas
add
insb
jae
dec
jmp
test
and
or
js
xor
xchg
or
in
mov
cmp
frstor
push
adc
add
sub
in
sbb
sub
movsb
js
jmp
and
push
push
jo
cmpb
pushl
push
push
aas
rolb
cmp
cmp
jne
insl
idivb
mov
jmp
adc
outsl
jo
lret
push
fisubl
adc
pushf
or
push
dec
push
imul
fadd
fdivrs
inc
xchg
dec
xchg
cmpsb
mov
jne
sbb
or
imul
lods
cmpb
jb
mov
add
mov
push
pop
imul
lcall
je
cmp
jl
cmp
jg
inc
jmp
xor
les
adc
jne
imul
add
push
pop
inc
jo
and
sbb
mov
test
enter
mov
pop
cmp
and
ja
pop
adc
sub
jle
push
dec
movsl
std
mov
jne
xor
fmull
notl
stos
sbb
insl
adc
ds
cs
std
and
mov
enter
or
push
cltd
insl
filds
loope
idiv
inc
pop
lea
mov
dec
and
mov
mov
pop
idiv
je
pop
sub
lea
mov
scas
and
ljmp
lea
lea
cltd
es
sbb
mov
imul
leave
sub
lea
dec
scas
xor
js
sub
add
sbb
lea
push
stc
jmp
add
loop
pop
in
sbb
pop
sbb
jo
adcb
iret
pusha
cmp
jle
sub
jmp
icebp
xchg
subl
sbb
mov
fbld
pop
add
imul
dec
and
and
inc
shr
leave
call
add
xor
push
jmp
popf
dec
pop
sbb
pushf
jb
sub
inc
or
add
dec
jns
orl
decl
sbb
sbb
jl
sub
incl
mov
in
push
lock
hlt
out
xchg
aam
push
add
invd
mov
popa
lock
les
adc
fnstcw
cmp
sbb
xor
add
imull
test
sbb
rsm
data16
jne
and
xchg
pop
push
push
push
push
mov
cltd
das
inc
stos
pop
push
xchg
xchg
xchg
dec
clc
mov
push
dec
pop
push
push
xlat
dec
mov
sbb
fwait
cmp
cmp
sahf
pop
push
pop
mov
push
dec
addr16
or
jge
push
pop
mov
pop
jae
mov
add
pop
rcll
push
jnp
fcmovnu
sarl
rclb
stos
sbb
icebp
dec
mov
enter
add
push
cmp
jl
cmp
jg
push
jle
jge
fldt
adc
and
repnz
push
aad
data16
imul
dec
cmc
inc
add
pop
jmp
jne
popa
jns
add
add
dec
sbb
data16
loop
int3
adc
mov
jecxz
mov
int3
and
popf
es
sub
and
push
sub
or
pop
pop
push
xor
loopne
and
xor
shlb
pop
es
ss
bound
and
push
cmp
gs
orl
gs
mov
inc
je
mov
loopne
mov
cli
add
jg
jl
inc
push
repnz
jp
shlb
jmp
dec
jg
pop
or
xor
es
xchg
ja
push
push
push
push
push
stos
push
lock
add
lea
xor
lea
sub
addl
jbe
lret
sub
adc
add
push
lea
lods
sub
push
sbb
sbb
push
mov
inc
and
and
and
xchg
add
xor
scas
cmp
mov
jb
repnz
sbb
ret
loop
mov
inc
mov
sub
add
fcmovnu
daa
inc
add
outsl
jmp
ss
push
adc
leave
or
ja
sub
jb
adc
fadds
stc
ret
cltd
xor
int3
outsl
imul
mov
orb
cmp
jge
ss
sbb
jl
mov
incb
dec
adc
add
test
or
xor
xor
push
xor
cltd
cld
test
cmp
out
and
push
mov
or
icebp
jmp
push
push
in
push
dec
inc
inc
xor
scas
push
and
sub
out
add
sbb
fldt
adc
mov
add
or
pop
nop
mov
sti
or
xor
jge
push
push
push
add
mov
sarb
loopne
fdiv
fiaddl
repnz
mov
sbb
sbb
and
sbb
sbb
xor
add
icebp
pop
inc
out
dec
ja
push
shr
inc
push
xor
jmp
fstps
xor
shr
rcr
or
lods
lock
sti
std
sti
in
xor
cmp
or
cmp
add
loopne
mov
out
dec
pop
fsub
sbb
push
ret
push
push
bound
and
add
fcompl
sbb
sbb
pop
mov
outsl
scas
push
or
ret
jns
jmp
popa
cmp
mov
popa
enter
loope
out
adc
adc
push
jbe
sub
mov
push
or
lcall
pop
outsb
and
add
ret
sbb
mov
mov
mov
nop
out
sub
inc
rcll
pop
inc
ret
in
mov
rcr
mov
leave
repz
dec
dec
push
adc
dec
lret
cmp
dec
andb
adc
repnz
and
dec
add
xchg
ret
insb
add
xchg
mov
sub
ds
lret
or
into
cmc
pusha
xchg
lock
jmp
movsl
inc
aas
aam
neg
pop
mov
sub
inc
inc
in
xor
rorb
fisttpll
mov
cld
mov
fldenv
cmp
inc
sti
sbbl
cmp
or
cmpsb
lods
sbb
push
jl
pusha
jb
cmc
lea
cmp
pop
bound
or
test
inc
rorl
in
inc
loope
inc
mov
mov
mov
push
add
pop
shll
movsb
pop
pop
or
cmp
inc
push
out
sbb
sub
add
cld
mov
pop
sub
add
or
scas
or
loope
xchg
mov
sub
sbb
aaa
enter
cmp
adc
lds
inc
adc
call
shlb
add
jne
dec
stos
in
sub
mov
out
add
cmp
jb
addr16
imull
mov
je
sbb
ss
jp
test
push
call
test
sbb
cmp
cmpsb
cmpsb
faddl
ret
mov
lahf
push
sti
leave
mov
and
and
cmp
sub
lds
sub
add
dec
in
dec
add
js
or
or
ret
pop
sbb
pop
mov
or
fbld
insl
sub
push
lods
sbb
or
cli
push
jecxz
sub
and
movsl
or
fistpl
clc
lcall
jg
cs
sbb
sub
inc
sbb
or
xorl
ffree
inc
cmp
outsl
add
cmp
sub
jo
cmp
dec
shlb
sbb
sti
cmpsb
jecxz
cmp
adc
mov
mov
clc
push
mov
pop
mov
adc
in
add
shll
into
mov
aaa
xchg
cmpl
inc
cmp
cmp
xchg
cs
push
mov
cmp
enter
inc
and
add
mov
or
jb
push
push
inc
or
xor
sub
dec
and
dec
sti
push
addb
add
inc
jl
xor
xor
lar
je
cmp
pop
loope
push
inc
out
lea
adc
mov
mov
add
pop
imul
jne
push
xchg
leave
sti
dec
sarb
orl
movsl
push
cmp
mov
imul
push
sbb
out
imul
lcall
jae
push
add
fs
add
mov
fisubl
jl
mov
sub
ss
insb
and
fsubrp
and
callw
adc
scas
add
pusha
test
das
or
in
add
cmp
jge
imul
mov
jle
cmp
xor
sbb
pop
sbb
inc
xchg
mov
or
rorb
dec
mov
sbbl
pop
or
cmp
xchg
push
push
mov
lea
in
and
mov
mov
add
fs
rcrl
adc
sbb
pop
leave
push
sbb
pusha
mov
lods
bound
sbbl
scas
mov
insl
xor
ja
popa
fildl
cmp
fidivl
leave
adc
xchg
rolb
aam
mov
outsl
mov
rcll
push
push
orl
lods
xor
popf
in
loopne
sbb
inc
movsb
cmp
push
data16
jbe
sbb
js
ljmp
fnstenv
shl
dec
adcl
popa
scas
jmp
adc
pop
je
into
push
pop
rcrl
sbb
iret
jnp
cld
adc
movl
lahf
pop
mov
adc
daa
jo
dec
add
ret
pop
dec
ret
dec
decl
mov
mov
push
out
mov
adc
sbb
add
orl
mov
aam
cmpl
pusha
xor
and
or
cmp
pop
cld
or
mov
aaa
insb
jb
push
sahf
ret
push
inc
mov
roll
loop
push
inc
incl
mov
rcr
mov
cmp
je
or
jne
xchg
add
inc
lds
sbb
mov
jmp
lcall
dec
jmp
xor
inc
or
xorb
xchg
inc
addl
inc
inc
pop
push
and
sub
xchg
mov
sarb
cmpb
or
data16
lock
push
mov
xchg
jmp
pop
loopne
rcl
pop
sbb
icebp
xchg
xchg
arpl
inc
or
je
shr
sahf
loop
movsbl
pop
and
or
or
mov
out
cwtl
into
inc
add
xor
cmp
mov
pop
add
adc
add
sub
into
push
add
aad
pop
add
pop
roll
cmp
clc
int
dec
push
mov
mov
mov
mov
sbb
add
dec
repnz
rcll
jge
addb
stos
cmp
movsb
aas
jae
aam
pushl
sar
inc
dec
shl
lea
cmp
jb
loope
add
adc
out
adc
add
push
push
orl
push
popl
add
or
xor
pop
add
cmp
cs
pop
data16
cmp
and
cmpsl
test
sub
js
cmp
jmp
adc
nop
push
or
rorb
jne
in
decl
repz
inc
mov
cmp
je
inc
inc
or
jne
add
fdiv
fisubl
ljmp
push
sar
inc
push
push
adc
and
lock
xor
dec
sarb
ss
fldl
dec
sbbb
orb
cmp
andl
pop
ret
jmp
cmp
and
inc
addb
fs
adc
es
insl
movsb
or
lods
fcompp
or
sub
out
int
pmaxsw
sbb
bound
je
outsb
dec
jno
pushf
inc
xor
lds
mov
adc
pushf
mov
push
adc
dec
pop
clc
psrad
mov
or
sub
es
or
or
fwait
or
push
and
cmp
ret
rolb
outsl
add
popf
lea
or
shlb
mov
add
mov
mov
inc
or
add
jb
aas
xor
jbe
rcrb
repnz
and
lea
loopne
mov
push
cmp
daa
outsb
xchg
lock
cmp
jb
mov
cmp
jmp
adc
add
xchg
and
fimull
je
mov
faddl
add
call
and
cmp
add
out
add
mov
mov
push
add
insl
cmp
outsb
push
or
inc
adcl
jl
mov
repz
push
loopne
or
push
orb
jmp
xchg
orl
push
push
ret
dec
xchg
or
mov
lcall
and
inc
in
push
aaa
xor
ds
mov
add
jmp
lret
adc
sub
mov
or
dec
movl
jl
shrl
loope
pop
notb
mov
repz
mov
or
jae
mov
mov
sahf
jb
testb
dec
sbb
xor
push
daa
cmp
enter
popa
gs
push
sahf
les
loop
outsb
inc
mov
and
inc
lahf
testb
lcall
or
inc
pop
cld
sub
cmpsb
jge
xchg
cmp
ret
xchg
pop
sbb
mov
rol
xor
addb
inc
adc
and
shlb
sbb
gs
or
mov
jmp
push
jl
pop
lods
mov
sbb
lea
mov
sbb
cmpb
mov
adc
dec
xchg
mov
add
xlat
dec
jmp
int3
push
outsb
lret
imul
jg
add
lahf
fs
mov
cmp
cmp
jmp
into
arpl
popf
shrb
cmp
rorb
push
sbb
push
adcl
sbb
outsb
push
sahf
sub
pop
or
or
enter
add
lahf
pop
dec
or
lock
cmovle
cmp
xorb
pop
adc
add
dec
and
lods
cmp
outsl
adc
push
push
mov
mov
add
or
shlb
jp
pusha
push
fnsave
aaa
push
sub
lcall
fisttpll
inc
pop
dec
lock
mov
xor
and
lds
add
jmp
test
adc
adc
lock
fadds
div
push
rcrl
add
fadd
mov
or
and
adc
xchg
lahf
loopne
mov
or
add
or
or
cmp
cmp
test
mov
mov
mov
add
inc
ret
cmp
and
arpl
or
and
push
scas
or
jb
sub
sbb
jo
cmc
rcll
shrl
imul
and
xchg
add
popf
mov
pop
lea
sub
aas
xchg
mov
push
sub
mov
and
es
xlat
into
sub
hlt
jmp
push
stos
sbb
imul
mov
pusha
je
mov
dec
pop
xor
cmpsb
inc
jl
clc
mov
push
call
arpl
pushl
out
sbb
or
cmp
jl
lock
mov
jle
and
cmp
icebp
xchg
negb
mov
shll
and
ficoms
cmpl
fmuls
mov
jmp
scas
pop
scas
add
pop
inc
movsb
fcoml
mov
or
add
sub
pusha
out
add
xchg
pop
aam
push
imul
arpl
mov
mov
cmp
aaa
sbb
sbb
loope
mov
xchg
inc
jmp
push
loope
push
imul
xor
adc
push
imul
in
in
mov
jmp
inc
loopne
mov
or
add
lea
mov
dec
in
xor
mov
lods
push
call
and
add
lods
aam
fwait
lods
daa
cmp
push
int3
adc
sub
cmp
push
lret
pop
sbb
int3
add
mov
ret
xchg
jo
imul
push
nop
sub
je
add
jb
rcll
adc
jns
icebp
mov
leave
mov
test
push
cmp
aaa
enter
or
or
push
adc
enter
lret
add
and
add
orb
in
fnsave
push
xor
lea
nop
repz
cmp
adc
mov
push
adc
add
mov
pop
cmp
subb
and
inc
cmp
rol
xor
clc
jne
xor
mov
arpl
test
rcr
shlb
adc
jno
push
movsb
xchg
cmc
or
test
jbe
and
fisubrl
or
fld
jb
inc
orl
cld
shrb
jb
in
test
lahf
mov
or
inc
and
cmp
push
jmp
sub
scas
push
xor
cmp
and
call
cmp
adc
and
xchg
mov
dec
test
mov
dec
adc
adc
push
push
push
push
push
push
addl
mov
xor
xor
rcr
mov
xchg
cli
aam
xchg
cs
lea
or
xchg
shlb
inc
jg
mov
sbb
cmp
pushf
rolb
negl
pushl
jo
push
call
stc
mov
addb
movsb
xor
sub
sub
and
mov
adcb
push
rcrl
ljmp
daa
add
cmp
xor
out
dec
loope
pop
aas
fiaddl
push
bswap
insb
and
and
push
or
dec
jle
xor
lds
leave
adc
adc
loopne
lret
or
sbb
loope
call
jmp
movsl
sub
inc
adc
sbb
sub
cld
loope
adc
shr
mov
imul
inc
pop
neg
ret
push
dec
or
rorl
jg
dec
shll
push
lea
mov
pushl
cld
rclb
mov
test
jne
sar
dec
jmp
aas
mov
mov
cmp
dec
or
mov
je
clc
aaa
cld
lret
lea
shll
pop
mov
dec
cmp
pop
mov
lea
xor
inc
cmp
pop
add
push
imul
mov
pop
and
movsb
decb
push
or
jle
shr
pop
clc
and
pop
hlt
in
cmpsb
setae
inc
and
sti
add
mov
incb
fidivs
mov
mov
imul
xor
and
cmp
je
inc
jno
mov
cmp
shr
testl
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
pusha
dec
pop
pop
lret
dec
xor
and
iret
ret
les
fidivs
sti
push
pop
pop
lock
mov
push
pusha
fidivs
or
adc
jo
popa
pusha
mov
mov
inc
mov
mov
lock
push
push
or
or
mov
dec
or
jmp
dec
adc
iret
push
lods
dec
push
mov
movb
push
orl
int
lock
cli
shlb
dec
orb
gs
add
das
sub
xor
aas
gs
jne
outsl
mov
push
or
movsb
mov
addr16
add
decb
adc
inc
fwait
cli
std
dec
cmp
add
and
mov
gs
out
and
dec
pop
int
push
ljmp
sub
js
in
push
lea
leave
or
jns
pushf
and
jnp
les
dec
aaa
jp
or
mov
xor
xchg
xchg
mov
adc
imul
lock
rclb
out
sbb
push
outsl
push
or
xor
lea
js
add
mulb
push
lods
sbb
push
scas
add
adc
cli
sub
sbb
pushf
jmp
orl
xchg
jne
lea
incl
and
and
adc
adc
or
push
xchg
je
movb
inc
inc
lret
xchg
stc
mov
imul
inc
ret
sti
clc
pop
mov
add
inc
dec
jne
cltd
cmpsl
mov
adc
push
pop
xchg
push
negb
adc
push
mov
add
or
ja
mov
or
sub
shr
inc
orl
orl
in
lea
push
out
inc
inc
cld
lock
mov
movl
cmc
cmpb
add
add
adc
aam
sub
dec
rcll
inc
fs
inc
popf
pop
mov
mov
mov
lock
push
mov
scas
decb
jne
or
lds
not
and
and
add
sub
adc
repz
jne
xlat
sub
inc
lcall
and
or
dec
cmp
clc
cs
jnp
mov
and
jbe
mov
test
cmp
jp
pop
xchg
add
cmp
hlt
sar
push
mov
add
stc
int3
push
pop
inc
pop
push
lcall
sub
rolb
es
fiaddl
add
cmp
nop
xchg
fimuls
dec
or
push
sbb
into
add
add
push
mov
pusha
push
ficompl
cmpsb
incl
mov
movb
paddusw
lea
jbe
data16
jle
mov
dec
pop
pop
push
pop
xor
push
jns
pop
lcall
or
iret
js
mov
jmp
aaa
js
test
sub
push
add
insb
xor
and
add
and
clc
jl
cmpsb
inc
or
sahf
jge
sub
pusha
push
cld
loop
xor
push
sar
dec
jp
or
pop
idiv
inc
cwtl
rorb
sbb
xor
ss
jo
cmp
dec
je
lret
sbb
push
mov
xchg
fbstp
pop
mov
fnstenv
dec
ficoms
add
mov
loope
lea
mov
mov
sbb
xorb
inc
and
mov
push
lods
pop
sbb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
insl
sub
mov
add
inc
sarl
cs
insb
and
add
lods
pop
and
inc
cmp
jecxz
add
inc
into
call
out
subl
jmp
in
push
imulb
dec
or
push
fildl
and
or
mov
or
fdivs
push
jne
mov
jg
jne
jmp
in
in
data16
lock
aaa
jnp
sahf
outsb
arpl
adc
fsubs
mov
mov
push
sub
pop
or
dec
leave
lcall
out
je
inc
mov
mov
adc
daa
pop
cmp
mov
mov
dec
pop
iret
mov
xor
cmp
push
add
test
pop
push
repz
mov
and
jne
mov
outsl
shrb
and
leave
inc
test
inc
cmp
jno
push
pushf
mov
sub
icebp
sbb
fdivrl
push
test
inc
dec
mov
add
xchg
dec
push
adc
das
js
dec
dec
cmp
into
in
and
mov
filds
decb
jne
dec
repnz
int3
or
dec
mov
mov
or
and
push
clc
into
xor
inc
imul
xor
push
xor
pop
lock
das
pop
xor
dec
adc
xor
cmp
inc
or
cli
jmp
out
or
dec
mov
or
inc
or
lcall
mov
out
or
sub
mov
jmp
lock
scas
and
lcall
push
lea
adc
cmp
lock
add
hlt
xlat
mov
inc
add
es
add
pop
shrb
fists
inc
or
jge
sbbl
cmp
push
pusha
ret
push
inc
loopne
dec
nop
rcl
jae
jl
shl
or
in
xor
jo
repz
xchg
jo
push
mov
das
add
cmp
imul
notl
je
jae
mov
cmp
mov
dec
sbb
sub
sbb
cmp
shll
adcl
push
pop
adcb
setns
ds
sub
pop
lock
dec
jb
mov
leave
mov
fiaddl
mov
sub
cmp
loopne
push
imul
sti
add
gs
inc
fisubl
pop
xor
ret
sub
lret
cmpsl
adc
pop
jns
jb
cmc
shlb
sahf
push
popf
popa
das
fstl
sub
ds
xchg
pop
lds
xor
lret
lods
loopne
sub
xor
lods
in
jbe
add
repz
dec
aas
mov
push
test
jne
push
dec
loope
test
stos
adc
pushf
mov
leave
adc
add
daa
bound
ss
sbb
adc
lcall
mov
xor
stos
ret
loopne
daa
bound
jmp
cmp
and
outsl
xor
adc
or
cmp
jns
push
les
dec
movsb
adc
fistl
or
sub
or
out
roll
fxch
pop
jns
mov
xchg
sub
cmp
push
jmp
or
push
mov
mov
cmp
push
xor
sar
or
int3
and
mov
inc
jmp
pop
movl
pop
test
dec
cmp
pop
inc
cmp
jne
andl
dec
cmp
sbb
out
pop
je
sbb
test
movsb
packsswb
rorl
add
push
lcall
mov
xor
jp
sbb
je
sub
add
xorb
lahf
mulb
jmp
push
push
pop
adc
ja
div
mov
aas
or
pop
pop
add
mov
cmpsb
sbb
daa
add
push
test
push
cmp
ret
sarl
pop
rcr
add
hlt
mov
ds
xor
repz
pop
jecxz
daa
test
sub
js
fs
filds
inc
or
je
xchg
sbb
pushf
lods
and
dec
adc
mov
jb
push
cltd
pusha
jle
jge
cmp
add
dec
push
hlt
cmp
je
movl
sbb
sbb
add
inc
xchg
cmp
and
jne
movb
adc
and
mov
sbb
div
pop
cmp
or
jbe
sahf
inc
arpl
cmp
or
sbb
inc
push
int3
push
js
pop
or
in
fdivr
mov
cmp
fstpt
shlb
insb
adc
loopne
push
outsl
push
mov
out
xchg
sub
push
gs
jns
ret
testb
mov
enter
sti
je
movl
xbegin
sub
push
fsubs
sbb
dec
in
lds
hlt
jecxz
jmp
push
push
mov
inc
and
pop
les
in
sub
push
insb
mov
neg
sbb
and
xchg
xor
mov
lock
adc
call
add
cmp
sbb
mov
into
cli
lea
push
adcl
adc
lar
mov
sarb
jmp
push
push
shll
aad
int3
cmp
movsb
ljmp
push
int3
jl
push
test
xor
stc
ljmp
add
add
dec
sahf
call
dec
jb
dec
and
or
stos
lods
lahf
subl
jg
pop
push
sub
inc
mov
aas
push
cwtl
ret
push
mov
stos
jae
fidivrs
or
xchg
lcall
add
lret
jmp
or
sbb
mov
mov
cmp
scas
push
cmp
inc
inc
add
pop
or
mov
and
and
cmp
push
jno
inc
lcall
inc
mull
sbb
adc
and
push
or
adc
ss
and
and
sub
xchg
xchg
xchg
xor
cmp
mov
cmp
cmp
push
dec
dec
cmp
pop
pusha
fs
dec
dec
dec
push
inc
dec
dec
js
leave
and
pop
aad
adc
mov
dec
xor
leave
cwtl
pushf
mov
and
mov
test
xor
sub
jo
inc
aaa
fwait
lods
xorl
jl
push
mov
or
movsb
dec
dec
sub
and
adc
lcall
movsb
pusha
sbb
cmp
inc
rolb
or
mov
push
sqrtps
insb
pop
in
cmp
adc
add
js
inc
ret
fistps
cmp
je
sar
loop
dec
jne
out
mov
mov
addl
sbb
xchg
push
das
insb
mov
mov
or
or
and
and
icebp
push
push
daa
les
push
xchg
lock
stc
xor
mov
push
movsb
push
mov
int
adcl
ja
pusha
aad
mov
lods
pop
sahf
push
jmp
adc
mov
hlt
adc
jp
add
inc
test
jmp
sbb
or
dec
outsb
out
jns
mov
fimuls
mov
jg
push
mov
pop
cmp
cwtl
or
jmp
cmpl
icebp
or
lea
out
add
icebp
sbb
jo
mov
pusha
dec
outsl
sbb
hlt
movsl
pusha
cmp
xchg
jne
jp
mov
adc
ret
je
xchg
adc
movsl
cltd
cli
dec
cmp
sbb
cmpb
jne
sbb
jp
cmp
cmp
mov
xchg
rcll
jg
incb
lea
jmp
scas
lea
xor
sub
add
add
add
fdivr
sub
imul
clc
add
or
or
notb
push
add
jo
testb
rolb
fwait
mov
out
dec
or
xchg
loopne
dec
add
xchg
prefetch
lcall
call
dec
je
mov
add
shll
movb
lret
loopne
rolb
push
mov
inc
mov
ja
mov
mov
fistpll
jmp
xchg
sub
je
or
je
dec
je
sub
movsb
sbb
mov
cmp
push
mov
rclb
lock
pusha
dec
adcl
addb
sbb
jne
and
in
rolb
scas
add
arpl
mov
dec
outsl
or
inc
pusha
jne,pn
sbb
inc
fs
sbb
add
cmp
fcoml
in
sbb
add
cmp
jge
or
push
pop
mov
fsubr
push
insb
rorb
mov
fs
push
dec
sub
insb
int3
inc
lock
sbb
mov
mov
add
or
and
push
inc
sbb
xchg
adc
adc
and
push
stc
stos
sbb
jmp
add
pop
sbbl
pop
test
xor
sbb
movl
imulb
jp
xchg
mov
nop
xchg
add
sub
ret
sarl
nop
push
adc
push
add
int3
mov
mov
leave
gs
cs
sbb
test
jge
mov
add
das
and
arpl
cmp
and
scas
push
cltd
inc
push
daa
stos
aam
mov
fstpl
xchg
ss
movsl
adc
or
add
das
and
sub
div
jne
orl
and
mov
jle
add
fldenv
mov
int3
cmp
mov
aas
imul
das
adc
adc
jne
shrl
into
jl
lcall
or
adc
cld
jmp
or
mov
xchg
js
push
imulb
ds
sbb
adc
pop
xor
sbb
out
xchg
jle
mov
iret
enter
cmp
mov
jo
or
outsl
dec
dec
pop
cmp
add
std
pop
mov
std
addr16
jbe
push
pop
les
in
test
sub
nop
ss
or
fs
mov
push
adc
sbb
into
fisubrl
or
cld
ja
sbb
int
dec
pop
push
imul
dec
out
cmp
push
imul
mov
push
aad
xor
and
push
pop
fcmovu
cli
mov
out
xor
adc
mov
push
adc
and
outsl
hlt
add
int3
icebp
pop
cwtl
std
jl
dec
push
rorb
mov
hlt
push
adc
sti
sub
or
push
jl
mov
shr
xchg
or
pop
adc
jne
cmp
out
dec
and
sbb
loope
int
adcl
cmp
sbb
cld
dec
jo
mov
ret
mov
pushf
jnp
jae
add
es
subl
hlt
pop
adc
or
cmpsl
and
loopne
jne
outsb
cltd
adc
jb
insb
sbb
jl
jne
or
and
fwait
add
sbb
ljmp
mov
push
mov
lds
push
sub
mov
shlb
cmp
es
jmp
ja
dec
rol
push
je
push
jmp
adc
enter
repnz
cmp
mov
jbe
out
lds
in
xchg
dec
jle
adc
add
jl
fnsave
cmp
jbe
jne
sub
xchg
pop
mov
or
aam
test
pop
sbb
mov
je
out
pop
fwait
mov
and
jae
sub
xchg
xor
mull
test
cmp
cmp
push
fwait
push
add
push
push
mov
inc
cli
pusha
sbb
mov
or
cltd
pushl
mov
lea
inc
sbb
push
dec
cmpsb
mov
sbb
hlt
push
jnp
dec
int3
jo
add
cs
cmp
or
aam
sbb
xorb
testl
adcl
call
inc
or
mov
jle
cmp
ss
je
sub
cmpsl
je
popa
jge
addr16
ret
adc
in
fld
in
mov
je
lea
into
in
jne
fmuls
jg
mov
sbb
adc
inc
ljmp
pop
fcmove
add
inc
add
dec
pop
je
push
pushf
mov
or
push
sub
pop
jb
mov
xchg
loopne
test
or
or
or
mov
dec
fstpl
push
mov
addr16
inc
loope
fisttps
sub
subl
leave
or
cmp
mov
out
sub
dec
mov
add
orl
jecxz
pop
pop
outsb
out
or
scas
loop
adc
aad
mov
push
add
ds
xorl
fstp
inc
das
cmp
ja
lret
mov
adc
jge
pusha
adc
clc
bound
sbb
pop
xchg
add
repnz
js
sbb
lock
dec
fcmovb
lods
dec
lock
hlt
sub
xchg
or
sub
sbb
lock
adc
push
xor
in
jb
orl
shrb
mov
inc
loopne
addr16
leave
aas
add
js
cmp
jecxz
lret
lods
push
mov
cmpsb
mov
lock
jle
cmpl
sbb
ss
pop
pusha
push
jl
inc
or
xchg
aas
xor
aas
lock
and
sbb
cmp
out
adcb
sub
sub
insb
rcrb
dec
ret
test
sti
cmp
adc
cmp
sub
add
mov
cmp
je
cmp
sub
sub
adc
or
adc
outsb
rcrl
add
add
lds
sbb
fists
lret
or
test
sahf
movsbl
sub
jmp
imul
mov
xor
cmp
cs
call
or
and
adc
sbb
add
enter
cmp
jbe
pop
movsb
or
sbb
add
mov
subb
push
mov
addb
incl
mov
mov
fdivs
sbb
xor
dec
rcll
push
sbb
aam
sbb
je
insl
jp
mov
mov
cmp
jns
lcall
mov
shlb
jae
jmp
push
or
push
fildl
add
mul
inc
adcl
out
pop
push
adc
jae
mov
xor
dec
lret
jns
iret
and
movsl
test
push
adc
js
gs
push
push
dec
inc
or
aam
push
test
cld
and
loope
push
mov
dec
cwtl
pop
and
jb
dec
subb
jp
or
je
mov
cmpsl
xchg
adc
mov
sahf
and
inc
jmp
push
xlat
rcrb
or
or
push
test
iret
sbb
sub
mov
push
mov
imul
xor
adc
push
mov
jo
call
pop
mov
cmpsb
and
xchg
push
dec
add
dec
jnp
vmovaps
cmpsb
mov
pop
lcall
ljmp
dec
jg
cwtl
sti
adc
or
fmull
incb
je
imul
pop
sub
sub
cmpb
mov
loop
adc
add
inc
add
notb
sbb
popa
call
outsl
pop
pop
mov
mov
rorb
in
pusha
or
inc
pushf
lock
outsb
push
fists
or
je
jge
pop
mov
ds
mov
mov
into
es
add
push
je
mov
aas
out
inc
dec
cmp
jb
cmp
ja
add
cmp
adc
cmp
xchg
rolb
les
test
stos
cltd
adc
fidivrl
or
leave
icebp
out
adc
inc
add
ret
add
jne
loope
lcall
popa
dec
sarl
clc
stc
and
pop
cmc
push
in
int
add
addr16
rolb
or
mov
push
in
sub
pop
dec
cmpb
inc
cmp
dec
outsb
inc
xorl
sub
dec
dec
or
ficoml
pop
mov
cmp
xorl
push
push
dec
call
mov
jo
add
sub
call
adc
push
jl
movsl
outsl
and
xchg
cmp
jle
or
push
daa
mov
sub
adc
xlat
jge
lds
mov
add
stc
stc
add
push
cmp
push
popf
icebp
js
enter
jle
xchg
dec
sbb
mov
xlat
jne
cmp
cltd
fcom
sbb
dec
insl
add
inc
add
jmp
adcl
or
push
sub
pushl
push
ds
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
add
mov
mov
jmp
pop
sbb
adc
imulb
out
fwait
xlat
and
or
xchg
jns
jmp
xor
and
push
push
or
bound
in
decl
bound
mov
stc
and
inc
pop
repz
add
movl
test
and
jbe
adc
icebp
add
popf
test
in
pop
mov
lds
and
jbe
cmpl
dec
jle
aad
pushl
rcrb
push
push
mov
jne,pt
and
sbb
fldenv
loopne
push
loopne
pop
or
xchg
xor
in
fnstsw
sbb
sbb
mov
lret
outsl
popl
fcoml
daa
fsubr
mov
dec
cmp
dec
xchg
inc
movsb
lret
sbb
clc
incl
jge
push
inc
lea
nop
and
flds
inc
or
adc
leave
or
and
dec
or
push
mov
or
adc
enter
push
push
roll
push
cmpl
adc
push
push
push
jne
aas
push
mov
cs
dec
lods
or
test
imul
sbb
xlat
aaa
lods
xchg
fisubrs
pop
mov
add
push
fsts
or
popa
sub
fsubrs
shrl
pushf
jmp
fsts
xor
mov
adc
and
inc
ljmp
inc
cmpl
notl
add
cmp
adc
sbb
sub
push
xor
lahf
pop
xchg
sub
sub
jo
dec
adc
pop
or
xchg
fcompl
loopne
outsb
jle
lret
xchg
in
and
push
sbb
sarb
push
inc
pop
sbbl
adc
mov
ja
add
adc
mov
pusha
jns
cmp
xchg
je
shl
xchg
cli
pusha
popa
incb
jle
loop
test
sbb
xor
fadd
pushl
lock
cs
cmpl
jb
lea
mov
aam
ss
int3
das
pushf
inc
cmp
rol
in
aam
test
mov
mov
ficoml
fsubs
fistpll
mov
push
jmp
dec
cmc
mov
loop
jge
fisttps
je
sbb
or
pop
sub
js
mov
pop
movsl
and
mov
mov
pop
pop
add
sbb
inc
push
add
pop
int3
adc
clc
fcompl
push
push
imul
xchg
icebp
add
sub
add
cmp
inc
in
mov
inc
and
and
push
les
stos
xor
inc
xor
and
push
mov
cmpsb
sub
orl
pop
cmp
xchg
mov
movsl
cmp
xorb
cmc
outsl
and
push
popa
sbb
subb
adc
adc
lret
or
in
dec
sub
mov
cmp
cmp
xchg
mov
or
shl
inc
add
pushl
sbb
mov
cmp
je
movzwl
es
loope
or
in
pop
loopne
jne
dec
jmp
and
cmp
or
fnstsw
or
data16
push
aas
push
aam
in
in
pop
push
jmp
or
test
fmuls
lea
pop
ret
xchg
or
imul
push
jle
xor
scas
es
iret
push
gs
and
push
sub
mov
adc
mov
mov
dec
xor
lret
mulb
adcl
jmp
jo
jge
loopne
and
or
adcb
out
jne
pusha
or
clc
add
ss
cmp
je
cmp
out
sarb
and
faddl
aam
xchg
pop
jl
ficomps
or
pushf
pop
ja
rcrl
jb
push
pop
mov
clc
nop
ret
sbb
and
mov
or
xor
xor
movl
and
cmp
or
data16
jb
jp
push
rcrb
aaa
push
mov
pop
or
adc
or
pop
xor
les
xchg
and
std
inc
xchg
xchg
ret
ret
mov
int3
jne
jmp
push
xor
push
cmp
cmp
outsl
pop
and
mov
rcl
inc
ret
or
push
lock
push
mov
pop
push
insb
int
mov
add
cmp
lock
inc
sub
xorl
sbb
push
pop
adc
mov
or
sbb
mov
cltd
cmp
rolb
xor
in
cmp
mov
mov
hlt
adc
xor
mov
mov
scas
in
es
adc
push
jmp
adc
push
sti
mov
cmpb
mov
xor
dec
in
push
fistl
inc
inc
mov
in
and
push
jae
lods
test
jnp
cmp
into
movl
sub
out
pop
add
pusha
aaa
fistpl
repnz
movsl
cs
dec
cmp
dec
inc
repz
aas
bound
and
insb
outsl
arpl
imul
imul
incl
jb
dec
imul
pop
inc
insl
outsb
js
push
inc
jne
push
pop
jns
push
stc
decl
outsb
jno
jp
dec
push
push
jne
dec
gs
jae
push
push
jno
outsl
jns
jp
inc
push
cld
mov
fs
dec
push
push
pop
js
data16
pop
inc
push
dec
ljmp
call
jp
dec
dec
inc
dec
gs
push
insb
inc
imul
js
dec
push
in
fisttpl
push
outsl
push
insl
jae
push
dec
inc
inc
inc
dec
dec
dec
dec
push
outsb
sbb
push
call
inc
gs
popa
outsb
imul
jb
dec
inc
addr16
dec
push
pop
push
mov
or
dec
dec
push
popa
data16
push
jno
push
bound
dec
push
jae
js
push
jns
dec
loopne
mov
inc
inc
jp
pop
jbe
push
pop
gs
dec
bound
dec
dec
push
lcall
mov
push
bound
inc
inc
dec
push
jbe
inc
popa
jo
inc
jne
insb
gs
dec
lock
inc
pop
imul
jbe
inc
outsl
dec
fs
inc
je
push
pop
fcomps
inc
outsl
gs
dec
push
je
inc
jno
jae
jno
fs
bound
push
push
das
test
jno
dec
jns
outsb
popa
dec
mov
jne
cld
fcomip
inc
fs
arpl
push
je
ja
dec
je
insw
push
push
loop
outsl
ret
outsl
decl
in
push
inc
dec
push
push
jb
inc
scas
dec
jae
outsl
dec
cmp
incl
jnp
je
jbe
mov
push
push
dec
jae
fs
dec
dec
pop
lock
dec
pop
pop
jne
dec
arpl
fs
bound
addr16
pop
mov
js
fs
push
inc
dec
jbe
mov
inc
outsl
inc
jo
inc
push
push
sti
in
pop
cld
bound
pop
dec
dec
push
inc
inc
js
dec
insb
fmull
pop
ja
inc
mov
popa
pop
jno
push
bound
inc
jp
dec
jne
push
dec
push
movsb
insl
dec
fs
dec
dec
push
jo
push
push
inc
sbb
inc
js
push
ja
jl
pusha
clc
gs
ja
into
xchg
dec
mov
lock
xor
push
push
mov
xor
inc
add
jb
bound
xor
dec
add
adc
adc
sbb
add
outsl
jne
movsl
negb
push
sbb
popa
jns
and
pop
orb
lahf
sub
sti
lahf
gs
push
inc
outsl
fs
push
jns,pn
neg
or
push
push
push
xor
aaa
mov
fsubrs
out
jae
xchg
insb
mov
arpl
inc
and
loop
mov
loope
mov
insl
xor
das
jne
aad
push
and
push
insl
jg
mov
push
inc
add
stos
loope
outsl
inc
imul
push
cmova
and
imul
popf
es
das
daa
fildl
fstpt
inc
dec
repnz
sub
jbe
jb
gs
and
lock
daa
outsb
je
shrb
push
mov
pop
inc
mov
stos
and
data16
push
sub
dec
inc
aas
jge
outsl
add
jb
jne
insb
inc
int3
inc
js
or
outsb
gs
xor
adc
inc
fsubrp
add
add
jnp
xchg
mov
jmp
sub
pop
dec
push
add
fiadds
push
dec
inc
pop
jnp
inc
mov
incl
cmp
inc
ss
sub
cmp
aaa
aaa
sub
xor
inc
aaa
inc
jge
dec
out
jb
and
mov
push
mov
add
dec
add
add
lds
push
ljmp
pop
test
stos
inc
mov
shrb
outsl
ja
and
gs
in
outsl
rcrl
sub
mov
roll
and
push
aad
test
and
push
dec
or
out
sbbb
add
add
add
lahf
fadds
inc
insb
jae
test
pop
repnz
cmp
pop
inc
aam
xchg
mov
filds
or
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
cs
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
push
adc
pop
pop
pop
pop
insl
clc
pop
cld
pop
pop
pusha
popa
bound
addr16
imul
jno
aam
aas
jl
jbe
js
jp
jl
jle
add
add
add
dec
mov
add
cmp
orl
fadds
in
addb
and
add
add
fcmovb
adc
add
ja
je
or
add
sbb
add
or
test
pop
shr
jg
push
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
lock
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
loope
add
shlb
mov
xchg
nop
bound
add
call
aas
jecxz
pushl
dec
outsl
outsb
push
jne
push
gs
push
push
popa
out
popa
outsb
dec
mov
inc
bound
jb
jo
or
dec
add
inc
jne
push
gs
arpl
cmp
icebp
je
outsl
jbe
xchg
jb
js
je
fwait
sub
jae
insl
add
xor
mov
out
jb
add
add
push
jb
outsb
je
insl
and
pop
sbb
jb
or
jg
ja
push
push
and
inc
add
inc
mov
and
xor
adc
and
jo
hlt
inc
insb
imul
sub
ljmp
je
gs
jo
and
insb
outsl
es
push
pop
mov
mull
mov
xor
stos
popa
cmpsb
push
insb
jns
or
xorb
fldt
popa
arpl
sbb
pop
mov
pop
xor
and
insl
push
xchg
dec
lock
pop
aas
xor
and
jne
dec
mov
mov
jo
rolb
les
out
fisttpl
xor
add
fs
xchg
and
jbe
mov
mov
sbb
jp
push
push
jl
ficomps
fs
or
addr16
mulb
jns
je
and
push
loopne
test
ds
gs
popf
jb
je
outsl
mov
sbb
jp
push
daa
sub
dec
imul
insb
jb
cmp
add
sbb
dec
popa
sbb
mov
loopne
ret
mov
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
mov
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
mov
sbb
add
add
imul
nop
ss
fs
jo
cli
jbe
inc
and
mov
xchg
push
mov
sbb
das
mov
inc
lock
sarl
dec
je
in
outsl
jo
xlat
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
push
inc
aaa
xchg
mov
ljmp
das
pop
mov
outsb
popa
pop
or
push
jmp
rclb
push
leave
nop
xor
sub
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
js
pusha
jo
sub
push
mov
rorb
fsubrs
push
sub
lret
inc
sub
pop
in
jne
jo
jmp
add
jp
movsb
cmp
sub
inc
jne
jno
dec
arpl
out
gs
dec
and
fmuls
arpl
in
pop
and
pop
sbb
in
lea
mov
nop
xchg
xchg
mov
push
js
xor
jbe
dec
lock
scas
dec
bound
mov
rcrl
sub
inc
insb
movsb
and
fisubrl
adc
arpl
inc
xor
imul
ds
in
push
cmp
pop
mov
mov
push
jns
mov
cs
pop
xchg
push
mov
cmp
lcall
jbe
mov
push
push
jno
sub
jnp
jbe
inc
jbe
push
push
lahf
stos
shl
fs
and
xor
mov
fadds
cmp
rorl
and
and
xchg
dec
sbb
cmp
pop
inc
xchg
pop
pop
in
or
mov
push
push
jae
cmp
and
pop
cmp
call
gs
addr16
subl
push
mov
mov
data16
inc
loopne
or
out
das
push
push
push
push
dec
testl
dec
mov
pop
mov
push
outsb
pusha
cmp
fildll
dec
jge
jg
int
adc
adc
imul
cwtl
push
inc
adc
xchg
lods
sbb
jg
xchg
or
cmp
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
cmpsl
stc
sahf
mov
jle
sub
sub
cltd
jnp
fs
push
cmp
add
add
xchg
addr16
add
sub
sub
sub
into
sub
push
mov
add
push
cmp
shrl
scas
push
test
ret
fs
jb
cltd
push
xor
ss
data16
dec
push
cld
and
sbb
xor
push
out
adc
inc
jo
sub
out
jl
out
sub
hlt
mov
sahf
out
push
loopne
enter
stc
mov
nop
stos
stos
mov
repz
test
push
cmpb
dec
jl,pt
js
je
insb
repz
repz
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
and
cmp
repz
adc
out
cmp
or
add
cld
mov
clc
hlt
lock
call
jns
aam
shlb
jl
cmp
repz
sbb
mov
cmp
repz
xor
add
repz
push
les
cmp
fs
in
mov
out
movsb
sbbb
ja
ds
dec
cmp
cmp
dec
pop
add
fs
dec
and
jns
fbstp
das
das
adc
push
dec
push
inc
or
mov
pop
dec
mov
je
hlt
jne
iret
mov
push
outsb
or
xor
push
push
fucomp
push
push
not
xchg
iret
cmp
cmpsl
xchg
popl
xlat
and
ja
inc
popa
mov
and
ss
daa
mov
jb
rclb
jmp
out
mov
dec
inc
ja
and
aas
add
pop
push
mov
push
pop
mov
push
cmpsb
jb
cmp
fcmovnb
ss
outsl
aad
ds
inc
arpl
push
sub
daa
mov
gs
lea
sbb
push
inc
push
ljmp
insb
loopne
inc
xchg
push
repnz
mov
adc
lds
mov
xor
pusha
gs
jb
insl
jb
add
test
push
jle
das
add
inc
add
out
or
push
shr
adc
popa
repz
xor
int3
ret
outsl
js
mov
push
add
and
aas
bnd
outsl
inc
add
dec
add
mov
and
cmpsl
ja
les
das
fs
push
pop
fadds
mov
dec
xchg
iret
mov
mov
out
cwtl
test
lock
imul
mov
in
and
mov
xchg
hlt
inc
pop
xchg
imul
pop
enter
inc
hlt
adc
sub
fists
sub
dec
add
ja
xor
mov
mov
ja
mov
push
outsb
testl
xchg
push
jns
int
xchg
adcb
popa
sub
sahf
out
sbbb
lahf
in
lcall
and
mov
cwtl
shr
and
add
xor
dec
aas
jmp
dec
scas
add
pop
mov
and
aas
cmpsl
push
xor
pop
push
jbe
jnp
jg
in
xchg
lahf
out
pusha
shrl
add
aaa
daa
inc
pop
ror
push
or
and
enter
xor
inc
jns
das
ficoml
dec
inc
iret
cmpsb
dec
out
jae
add
sub
lods
add
add
add
ret
outsb
outsl
pushf
inc
daa
mov
xchg
jl
orb
enter
sub
mov
xor
repnz
or
or
adcb
nop
dec
scas
sub
fbstp
lods
dec
mov
es
lahf
or
mov
decb
xchg
ja
pop
out
or
dec
aam
in
lcall
shr
fwait
in
xchg
movzwl
jns
orl
and
xor
pusha
jbe
push
cmp
mov
push
inc
fs
rorb
xchg
je
daa
test
inc
push
cmpb
jg
out
shll
fdivrp
push
iret
adc
scas
or
adc
add
in
ja
sbb
mov
xchg
pushf
cwtl
cmp
jb
outsb
pmaxsw
inc
pop
std
fadds
cmp
mov
sbb
jne
mov
lds
leave
insb
pop
jb
mov
and
cmp
dec
adc
and
js
jg
mov
inc
subl
or
int3
inc
adc
adc
cmpl
mov
movsl
jg,pt
pop
inc
pop
xor
daa
lcall
nop
dec
mov
push
jne
loopne
stos
pop
aas
dec
pusha
es
pop
pop
pop
pusha
xor
rol
testb
jg
jge
daa
fimull
cmp
addb
push
sub
xchg
inc
pop
xor
jl
aaa
in
jge
add
mov
inc
fiaddl
es
cwtl
aaa
scas
sub
pop
adc
into
xchg
dec
enter
repnz
enter
lcall
adc
pop
nop
and
sub
adc
sub
mov
lahf
inc
jo
je
sub
out
mov
decl
es
jno
dec
jb
push
push
jne
dec
dec
ja
push
mov
jmp
jne
jne
jbe
push
outsl
gs
imul
push
jo
gs
outsb
pop
jmp
dec
inc
push
hlt
push
dec
dec
imul
dec
lds
pop
shll
dec
and
add
arpl
lcall
push
pop
pop
add
sub
cmp
je
xor
cmp
inc
adc
dec
or
or
push
and
dec
js
mov
dec
dec
push
adc
adc
into
in
jae
enter
int3
test
lock
decl
rcrl
fxch
and
cmp
inc
push
stc
aaa
lahf
out
outsb
arpl
xor
addr16
fs
dec
test
pushf
movsb
stc
pop
scas
imul
jns
addr16
inc
mov
gs
push
je
push
jbe
jns
dec
ja
ja
imul
ja
aam
loopne
js
ret
dec
push
jp
outsb
jbe
jp
push
lcall
dec
jb
dec
inc
jno
lret
popa
jne
dec
imul
popa
dec
inc
ja
jbe
std
pushl
push
jae
bound
mov
imul
inc
inc
jbe
outsb
pop
inc
jae
shlb
adc
xor
insb
jno
dec
jns
adcb
jno
xor
push
jo
gs
jo
iret
aaa
adcl
cmp
cmp
jno
dec
popa
gs
sahf
xchg
out
addr16
js
push
inc
in
add
sbb
mov
xor
adc
mov
ret
xchg
out
inc
jne
dec
popl
and
inc
jb
cmc
sbb
xor
inc
and
cmp
loop
dec
dec
imul
cmp
jge
std
pop
fwait
jns
pop
sub
cmp
sub
sub
mov
and
and
and
sar
or
add
push
sub
push
adc
add
pop
shlb
decl
dec
and
cmp
inc
xchg
mov
mov
sbbl
incl
jno
inc
xchg
jb
ret
sarb
aaa
lcall
insb
cwtl
testb
pushl
pop
repz
mov
pop
scas
insb
nop
fists
jo
xlat
xchg
or
stc
daa
dec
lahf
out
xchg
dec
jne
imul
lahf
mov
insl
outsl
outsl
dec
dec
je
out
dec
insl
inc
jmp
aas
fwait
jno
jno
inc
arpl
stc
xchg
xor
cmpsb
shlb
xchg
sbb
js
or
inc
pop
inc
int
das
lods
jg
jg
cmpsb
gs
test
xchg
cld
repz
pop
data16
jb
repnz
cmp
out
pop
inc
jae
jle
stc
fmul
imul
or
or
icebp
pop
push
xor
jnp
sysexit
xor
cmc
dec
push
or
push
loopne
dec
bound
dec
adc
add
and
sahf
call
das
rolb
sub
int
ret
sbb
dec
mov
inc
imul
mov
out
sbb
push
cmp
ss
stc
xor
pop
sahf
int
inc
gs
dec
jmp
fwait
add
and
push
add
out
or
pop
pop
lcall
dec
inc
or
rclb
xor
sti
mov
add
inc
jbe
dec
push
mov
test
cmp
mov
or
jp
and
nop
push
cli
decl
jns
into
addb
pop
mov
push
xchg
lea
subl
cmp
ljmp
inc
lret
pop
sbb
xchg
push
ja
aas
pushl
add
cs
dec
ret
iret
sub
idiv
or
lret
cmp
dec
lea
daa
pop
xchg
cmp
out
push
cld
out
ds
xor
inc
bound
scas
loop
loop
aas
add
push
pop
add
dec
mov
sbb
mov
fwait
jno
movsb
cmpsl
cmpsl
repz
mov
push
inc
or
pop
inc
mov
or
add
imul
out
mov
pop
aad
jle
adc
jg
mov
bound
mov
lds
in
cmp
pushl
icebp
add
pop
pop
sti
ss
dec
sbb
xor
add
out
adc
fldcw
sbb
or
out
or
dec
cmp
dec
scas
ret
dec
shll
stc
dec
inc
add
push
adc
xchg
jns
popf
scas
mov
mov
add
cld
stc
into
inc
push
clc
adc
xor
xor
aas
xchg
dec
pop
push
mov
add
fcomip
iret
xchg
sub
lcall
dec
push
dec
int
ljmp
addr16
adc
aas
cmpsb
fs
lcall
loopne
out
fldcw
push
out
xor
repz
dec
sbb
daa
add
and
xor
push
in
add
add
in
cmp
jl
jge
fistpl
pop
add
int
push
sub
fldcw
jne
or
inc
loope
pop
and
fwait
and
subb
insb
fistps
push
out
mov
sbb
inc
cltd
mov
ljmp
lcall
and
or
ja
cmp
or
lds
mov
movsb
ljmp
jmp
mov
enter
in
ds
cmp
jne
repz
jmp
pop
shufps
lret
adc
fisubl
jp
out
jg
sahf
ret
jle
xchg
fnstcw
imul
ss
xchg
cmp
inc
pop
stc
stc
or
fmull
inc
lcall
movl
or
call
je
mov
mov
test
xor
rcrl
xchg
mov
inc
outsl
lds
dec
lds
sub
pop
dec
bound
call
cmp
cmpsb
test
scas
push
and
push
fstpl
ljmp
or
pop
fiaddl
cld
and
sbb
movsb
js
mov
insl
push
incl
push
in
aas
and
mov
mov
pop
xchg
lcall
and
call
arpl
xchg
cmp
dec
testl
dec
pusha
push
out
ljmp
mov
cmp
loope
insb
cmp
add
lods
jbe
mov
inc
push
or
inc
mov
out
mov
jno
push
cmp
call
orb
jno
push
out
push
adc
sub
push
in
sub
mov
jmp
xor
jno
lods
xchg
dec
or
cmp
push
scas
lahf
imul
mov
popf
ja
in
xorl
jmp
enter
iret
adc
add
incl
dec
jno
jnp
std
inc
dec
pop
loop
dec
loop
xchg
cmp
faddl
imul
imul
or
dec
insl
sbb
bound
mov
mov
clc
jo
or
incl
mov
rorl
lcall
enter
ret
and
inc
push
lea
scas
sbbb
incl
popa
insl
and
xchg
xchg
inc
jp
mov
push
inc
les
inc
filds
pop
push
or
sti
cmp
lret
sti
or
sbb
mov
sbbl
xchg
cmpsl
mov
aas
incl
push
pop
leave
daa
lds
sbb
push
mov
cld
frndint
test
incb
cli
jge
out
add
fildl
fmul
stc
jle
cmp
repnz
fistpll
imul
jl
sub
fsubs
je
sub
out
jg
stc
loope
movsb
sarl
push
cmpsb
dec
xchg
nop
mov
test
arpl
mov
adc
xor
pop
je
testl
xchg
mov
insl
jge
mov
push
out
inc
ret
mov
stc
sub
xor
decl
jp
push
xchg
push
sbb
sbb
aaa
loop
out
mov
pusha
push
and
call
jle
testb
pop
test
fidivs
das
add
clc
movsl
fdivrp
jg
lods
sahf
dec
stc
and
lret
or
mov
pop
jne
rclb
lcall
mov
mov
test
ss
cli
cmp
je
mov
adc
fdivl
adc
sbb
lret
inc
add
mov
jmp
or
nop
dec
test
call
lcall
or
fimull
mov
xchg
call
cli
xor
push
dec
jle
cmpsb
pop
push
gs
inc
adc
cwtl
pop
dec
push
rolb
out
jmp
mov
or
fsubs
bound
inc
dec
push
cld
pushl
out
decb
insl
fistpl
je
imul
mov
mov
stc
pop
push
dec
adc
cmp
fists
mov
outsl
test
lahf
cli
jg
clc
sub
bound
int
arpl
pop
adc
jg
popa
scas
push
imul
out
dec
cli
adc
gs
dec
sbb
xchg
push
mov
movaps
mov
mov
mov
mov
adc
lods
adc
mov
out
cwtl
lcall
jge
add
inc
or
cmp
push
or
jmp
sbb
ss
jge
cmp
sub
sbb
xchg
pop
inc
aas
mov
out
insl
dec
adc
and
sbb
fistl
xchg
loope
pop
mov
clc
cmp
cmp
and
pop
and
push
stos
lret
push
ficoml
pop
xor
fcomip
adc
mov
cwtl
mov
stc
mov
adc
mov
jg
imul
add
shlb
pop
add
pop
and
xor
add
lcall
cmp
xchg
add
inc
mov
mov
push
adc
sbb
pushl
cmp
adc
andb
mov
push
les
insb
mov
dec
pop
sbb
pop
push
mov
outsl
pushl
mov
inc
stos
mov
lds
jbe
sub
stos
add
xor
js
popf
mov
lahf
fistpll
in
rcrb
jmp
test
jne
shrb
fadds
mov
pusha
sbbl
testl
repz
jmp
pcmpgtw
pop
jbe
addl
cmp
adc
push
mov
sub
push
jnp
fildll
pusha
fsubrp
inc
dec
push
lock
call
sub
add
push
scas
sbb
icebp
jmp
outsl
lcall
mov
in
inc
pop
cmp
inc
push
xchg
jg
or
dec
fsubs
mov
jns
fdivs
fcmovnu
cmpsb
jno
sti
or
adc
sub
mov
push
jmp
dec
mov
pusha
dec
dec
pop
loopne
pushl
mov
arpl
stos
fs
mov
mov
push
shll
push
lock
lcall
sahf
pop
dec
outsl
dec
jmp
out
dec
mov
mov
flds
mov
push
out
adc
add
mov
jg
sar
je
loop
outsb
js
frstor
outsb
sbb
mov
call
loopne
jb
ds
sbb
ret
push
pop
push
push
out
mov
ja
loop
push
cld
push
sub
mov
rclb
aad
jle
cwtl
jecxz
inc
push
xor
add
scas
out
add
adc
push
cld
stc
cmp
movsb
inc
sub
out
daa
mov
cmp
xor
or
addb
push
jg
jl
test
pop
cwtl
dec
cmovp
incl
data16
jb
inc
insl
adc
cs
out
cmpsb
pop
dec
and
cld
int
mov
inc
inc
outsl
jge
xor
pop
mov
sahf
xor
pop
mov
mov
cmp
enter
jmp
daa
jno
adc
adc
cs
mov
fldl
subb
xor
ret
cmp
jno
shll
icebp
aas
aaa
sub
cmc
xchg
push
lods
push
mov
cmpsb
add
rclb
stos
es
mov
jecxz
jmp
ja
ds
scas
adc
push
fs
pop
jns
jg
push
int
imul
dec
sbb
mov
add
mov
fimull
rorb
pop
movsb
inc
push
pop
outsl
lock
bound
cmp
sbb
out
stos
cmp
incl
jne
pop
repz
mov
sbb
jle,pn
sbb
dec
enter
inc
inc
ds
adc
adc
mov
lods
mov
lcall
sbbl
sbb
pushf
and
into
cmp
das
outsl
out
add
xor
clc
jg
mov
lret
mov
pop
insb
aas
pushl
repnz
xchg
ja
xchg
arpl
xor
cld
adc
movsl
inc
adc
fidivl
ljmp
adc
fsubrl
jmp
imul
push
jns
dec
cmp
jmp
add
in
xorl
cmp
adcl
dec
jb
adc
mov
movsl
lods
rolb
call
loopne
dec
push
aas
lock
jl
es
inc
xor
std
jb
dec
imul
pushl
in
push
gs
outsb
inc
adc
mov
cmp
incl
jge
ds
push
push
outsb
mov
or
xchg
add
jnp
inc
ljmp
shl
jl
lret
jg
and
mov
rclb
jno
jg
lock
int
jge
dec
pop
les
repz
or
sar
xchg
adc
mov
dec
dec
data16
jg
cmp
jbe
fs
popa
cmp
fwait
fs
jne
and
lret
and
and
negb
lods
and
jg
ljmp
out
cmp
jne
out
outsl
xor
cmp
dec
cli
jmp
pop
sbb
and
add
jae
out
enter
cmp
cld
jmp
sbbb
orb
jb
and
xchg
mov
gs
xchg
jae
mov
push
add
inc
or
xorb
fsubs
outsl
mov
pop
adc
jne
scas
hlt
jl
jo
mov
pushl
push
mov
pop
xchg
inc
inc
int
inc
xor
push
jge
jns
aam
add
or
mov
incl
dec
and
test
notb
fadd
inc
cmc
cld
ljmp
scas
sbb
sub
aas
xlat
inc
xchg
inc
pop
jmp
sarb
mov
insb
int
bound
pop
lret
mov
inc
cmp
imul
jbe
dec
in
fcomip
lcall
pop
add
inc
sbb
mov
ljmp
imul
mov
dec
inc
push
lea
pop
cmc
daa
mov
jne
into
adc
es
push
xor
push
repnz
out
cli
push
sti
push
stc
pop
cmp
cli
adc
sbb
imulb
call
ret
dec
repz
fs
pop
inc
dec
and
push
cmc
mov
jmp
dec
insb
mov
je
dec
jp
insb
ds
jg
daa
mov
int3
xorb
push
inc
outsl
gs
mov
cltd
mov
dec
aas
outsb
mov
push
push
pop
movsb
add
push
jne
jb
pop
jl
xor
add
xchg
pop
push
inc
divb
fdivr
aaa
ret
out
jmp
dec
inc
add
and
arpl
push
push
adc
lcall
lock
inc
ds
or
xchg
cltd
mov
jge
push
dec
jo
scas
arpl
outsb
ja
arpl
dec
jg
testb
cmp
orl
jns
ss
push
stos
dec
jle
pop
mov
inc
outsb
aas
rorb
jo,pn
push
jl
sub
ds
xor
hlt
decl
arpl
inc
out
jno
pop
push
fistpl
ljmp
xor
xor
add
inc
dec
sub
add
aas
pop
insb
decl
lock
repnz
arpl
bound
gs
mov
aaa
ljmp
testb
dec
jo
sahf
adc
sbb
push
push
cs
movsl
or
loop,pt
push
out
push
xor
mov
xchg
add
mov
inc
dec
decb
add
dec
sub
and
dec
jmp
jg
decl
push
insl
repnz
pusha
xlat
int
sub
jp
and
sub
divl
stos
jo
negl
push
and
inc
sbb
lcall
cltd
and
popa
stc
xchg
dec
add
repz
mov
dec
push
mov
pop
fisubl
jno
add
sub
cmpsb
mov
dec
dec
ret
mov
aad
es
dec
mov
mov
pop
addr16
mov
pusha
dec
jae
ljmp
add
dec
pop
push
imul
jo
add
ljmp
jle
call
ss
jp
in
push
pop
add
dec
loope
push
mov
inc
or
jg
cmp
pop
push
jae
mov
into
mov
hlt
jge
dec
lcall
pop
inc
lds
repz
dec
jnp
popf
or
hlt
jb
push
jg
iret
js
mov
dec
jbe
mov
push
inc
inc
push
adc
xor
pop
add
push
adc
in
cmp
jo
cli
xor
jmp
sbb
pop
pop
mov
xor
or
adc
fdivrl
push
insl
xchg
fstpl
imul
dec
xchg
inc
mov
xchg
pop
pop
push
sbb
jg
pop
std
orl
pop
out
push
xor
inc
out
fwait
jmp
dec
pop
push
mov
repz
test
imul
mov
xchg
mov
add
dec
jmp
fldl
sahf
xchg
sub
orl
pop
inc
dec
xor
jg
jmp
sbb
add
cmp
inc
into
mov
shll
push
popa
push
sbb
mov
shl
popl
decl
push
mov
push
add
pop
test
adc
scas
scas
movsb
ljmp
push
sahf
ja
add
dec
jge
pop
pop
sub
adc
push
dec
and
cs
dec
loope
dec
mov
rep
add
mov
pusha
outsl
inc
sahf
scas
add
stc
ljmp
dec
cmp
sbb
sub
mov
lret
loopne
rclb
mov
sub
cmpsl
sbb
lret
mov
std
or
js
arpl
jae
dec
addl
mov
sti
subb
jns
jns
mov
jl
push
xor
or
sbb
in
leave
add
jns
or
mov
sbb
fidivrl
inc
pusha
addr16
adc
pop
jno
pop
lock
pop
arpl
arpl
test
subb
decl
mov
xchg
jp
lret
adc
data16
dec
push
rolb
scas
dec
in
jb
enter
aas
loop
inc
sub
sbb
jg
call
cwtl
mov
add
loope
int
mov
cmp
fldenv
outsl
pop
call
roll
inc
inc
push
clc
decl
out
push
sbbl
jno
push
mov
lcall
or
adc
or
cmp
outsl
lcall
scas
insl
in
fs
inc
test
and
push
sahf
adc
out
in
out
call
idivl
jb
iret
lods
push
fndisi(8087
push
or
pop
inc
or
jne
sysret
and
in
sub
incl
cltd
xor
dec
fnsave
pop
sbb
aas
adc
pusha
xor
ds
sbb
jmp
mov
test
rol
dec
adc
sub
push
out
xor
decl
cmc
insb
cmp
dec
xor
ds
mov
push
loopne
repz
test
pusha
cmp
in
test
push
popf
clc
lcall
jnp
ds
or
mov
xor
cltd
xchg
into
add
inc
add
mov
ja
imul
or
lcall
hlt
imul
ffree
gs
ljmp
dec
xor
jg
or
rclb
cmp
add
out
mov
add
sbb
cld
or
inc
outsl
lock
push
push
xor
sahf
aaa
incl
dec
mull
or
arpl
add
fists
pop
cmp
push
sbb
dec
cmp
sub
mov
clc
cmp
scas
scas
mov
or
and
sub
sub
outsb
test
dec
push
adc
test
insl
and
imul
adc
inc
sbb
arpl
dec
inc
dec
add
pop
jg
incl
push
fldt
jb
pop
cmpsb
pushf
nop
add
sar
loope
xchg
and
xor
push
in
push
jg
mov
sahf
addb
jbe
cmp
lds
test
mov
cmp
out
andb
cmp
dec
incl
dec
stos
mov
test
pop
bound
call
xor
or
cmovno
mov
xchg
cmp
inc
inc
mov
mov
push
pusha
add
sbb
add
lcall
jbe
mov
push
dec
sub
and
stos
incl
xor
xchg
dec
jns
pushf
cmpsb
jmp
ja
sub
push
loopne
dec
jns
mov
jns
sub
fsubrs
inc
loopne
in
xchg
add
cmp
stos
loopne
test
out
shll
jmp
int
addr16
ds
imul
push
xor
mov
cmpsb
mov
mov
mov
jnp
dec
push
mov
pop
test
test
sub
les
pop
dec
scas
sub
mov
test
push
push
enter
cmp
and
and
xor
push
gs
sbb
call
sti
xor
in
cs
cmpsb
xchg
mov
pop
inc
mov
jns
mov
cld
insl
fisubl
and
sub
repz
jb
fsts
fcomip
jmp
mov
dec
gs
xchg
sahf
scas
mov
loopne
mov
jmp
test
incl
lcall
jge
mov
bound
mov
jns
xor
out
cli
jmp
out
aaa
dec
mov
lea
mov
jo
sbb
jecxz
dec
jge
mov
xchg
mov
lcall
sbb
mov
int
out
push
pop
ret
add
ret
inc
aas
loop
incb
fimuls
dec
call
mov
ljmp
add
inc
rcll
sbb
and
cld
add
pop
push
ja
incb
insb
gs
mov
fs
es
jmp
mov
xor
xchg
ret
cmp
rorl
and
aam
adc
jg,pt
call
rclb
jno
fisubl
jno
add
loope
pusha
push
sub
add
incl
and
lods
shll
sub
xor
push
ret
hlt
dec
pushl
or
dec
cmc
xchg
or
mov
sahf
cmp
cltd
xor
sbb
decl
aaa
inc
push
cmp
sub
jl
outsb
cmp
int
jle
nop
inc
lods
in
ljmp
pop
in
mov
mov
xlat
inc
cli
fs
xor
mov
cmp
ljmp
clc
bound
adc
add
adc
adc
iret
mov
or
xor
mov
adc
aas
cmc
xor
fidivl
jne
out
inc
outsl
mov
fidivrl
cmpsb
lock
add
out
pusha
xchg
push
dec
pop
sti
mov
push
pop
stc
push
jne
and
push
push
mov
cmp
sarl
imul
subb
lcall
ret
xor
sub
push
std
pushl
push
test
mov
mov
fisubrl
pusha
adc
cmp
mov
fidivs
mov
orl
inc
xor
mov
out
dec
cmpsb
sub
pop
xor
outsb
pop
dec
repz
jb
cmpb
incl
lahf
xor
stos
orl
dec
jle
xor
mov
fwait
jmp
imul
push
and
jl
mov
decl
push
or
fwait
rolb
fstl
imul
xchg
xchg
or
int
jne
rorb
push
cmpsb
ljmp
rcrb
and
pop
xchg
movsb
jecxz
je
sbb
aaa
std
cmp
inc
sbb
mov
test
mov
jle
and
mov
cmc
aaa
jl
cs
jl
in
mov
mov
lahf
cmp
dec
ds
and
push
jnp
jl
adc
shrl
clc
push
inc
ret
pop
data16
lea
push
in
insl
cltd
and
data16
add
mov
in
subl
pop
fdivr
mov
dec
aam
decl
rclb
push
insb
lret
lcall
insl
push
cli
and
test
jmp
fidivs
cmc
cmpsb
mov
and
pop
int
decl
add
mov
lcall
lea
fcomip
incl
push
std
scas
sbb
lods
dec
jne
sub
mov
mov
or
insl
dec
jecxz
outsl
std
sbb
adc
mov
outsb
test
out
scas
sbb
mov
add
mov
sar
inc
repnz
repz
je
sbb
enter
imul
mov
add
lods
je
das
fcomps
arpl
mov
jmp
lcall
out
add
enter
popa
lods
sbb
cltd
stc
insb
jns
and
mov
fadds
jo
push
enter
aaa
cld
jmp
mov
imul
push
dec
jmp
sbb
push
pop
mov
pop
add
in
lods
jp
lahf
push
sub
insl
aad
inc
push
pop
mov
adcb
lods
adc
inc
cmp
mov
ljmp
rorb
sbb
pop
les
imul
lcall
in
outsl
dec
jno
jno
sub
inc
orb
adc
lock
ret
jg
testl
stos
pop
clc
or
imul
push
shll
in
loopne
push
into
sub
lret
push
out
imul
jg
sahf
inc
ljmp
sbb
bound
jge
fists
cli
movsb
mov
xchg
xchg
repz
ficoml
jno
ljmp
dec
out
mov
pop
outsl
sub
pop
jle
sub
mov
outsl
mov
mov
lcall
mov
dec
clc
dec
inc
xor
lahf
jmp
outsb
and
adc
push
pop
mov
sub
cld
bound
or
insb
stos
jnp
outsb
push
out
test
dec
inc
inc
orl
jb
pushl
loope
incb
inc
out
or
inc
in
stos
adc
sub
ja
leave
sub
xor
lahf
pop
add
lret
mov
xor
imul
adc
fisubrs
push
arpl
jl
inc
pop
inc
jp
sbb
fs
arpl
fmull
jbe
sbbb
jmp
dec
pop
xchg
xor
jecxz
push
jbe
lahf
outsb
test
out
clc
or
incl
repz
dec
ds
push
out
lcall
cs
loope
push
insb
gs
into
xchg
adc
rolb
jnp
push
dec
int3
sbb
cwtl
mov
xchg
adc
test
xchg
fldt
jne
cmp
xchg
dec
jne
lcall
jge
scas
imul
scas
data16
mov
imulb
sbb
ljmp
push
cld
packssdw
das
outsb
push
int
dec
jbe
mov
imul
mov
push
pusha
sarl
js
in
jle
dec
jbe
adc
test
mov
orl
sbb
test
ja
clc
and
adc
fistps
sahf
jbe
call
sub
call
jnp
dec
loopne
mov
test
dec
fidivl
pop
mov
mov
mov
ud0
pushl
mov
pusha
in
pusha
popf
and
repz
mov
and
add
out
fwait
daa
jl
pop
cmpl
lods
fnstenv
inc
shrl
add
jp
mov
xchg
fwait
es
cwtl
add
mov
mov
shl
dec
lds
push
xchg
xor
in
dec
rolb
ljmp
pop
testb
les
push
xor
xor
and
cmp
decl
push
push
mov
sub
dec
fsubrs
cmp
mov
dec
cltd
and
in
adc
jecxz
incl
xor
push
dec
nop
pop
inc
pop
cmp
mov
push
push
lea
aas
xor
cmp
std
test
adc
adc
in
insb
jmp
clc
gs
movsb
ds
leave
mov
sbb
frstor
ja
out
ss
nop
push
icebp
jg
lcall
push
xor
lahf
pop
add
cmp
jg
sarl
or
fisttps
cmp
je
jmp
notb
test
push
shlb
pop
push
bswap
mov
dec
out
cmp
jg
cmp
das
jno
stos
jb
outsl
iret
inc
movsl
pop
rorl
les
push
jg
je
mov
mov
out
push
sbb
sub
test
insl
enter
mov
std
cmp
cmp
mov
les
stc
movd
inc
jmp
pushl
or
stos
das
or
xchg
mov
and
mov
or
jp
je
and
ss
pop
js
pushl
icebp
lods
ret
xchg
sbb
sti
sbb
jmp
inc
sub
mov
rcr
jmp
movsb
je
sub
out
xchg
pop
or
sbb
cmpl
jg
inc
mov
pop
mov
lahf
jbe
fisttpll
push
outsb
or
lea
mov
xor
in
jbe
sub
gs
imul
cmp
lods
movsb
test
das
sbbl
pop
or
movsb
btr
inc
icebp
imul
dec
pop
and
add
or
adc
aas
test
adc
add
mov
jno
push
pop
push
inc
leave
inc
cld
pushl
imul
xor
sub
fistpl
mov
or
mov
ja
jb
ljmp
lds
jo
movsl
lret
fwait
aaa
jns
sub
arpl
lock
mov
jne
jae
cltd
push
mov
xor
fs
or
mov
jno
lcall
cli
pop
icebp
xor
adc
cmp
mov
mov
pop
adc
mov
xchg
and
fstpl
ds
jo
add
lcall
push
mov
adc
and
mov
scas
sarb
jecxz
ljmp
pusha
loope
hlt
mov
xchg
test
inc
into
mov
outsb
in
adc
cld
shlb
mov
jg
push
mov
mov
lcall
mov
sub
xor
xchg
push
scas
sub
jbe
adc
cs
popf
xchg
mov
stc
lcall
add
and
sub
pop
cmp
mov
gs
pop
mov
movsb
incb
lahf
dec
rclb
andl
out
mov
hlt
call
and
insb
lcall
stc
pop
pop
jp
out
scas
or
ds
pushf
cmp
in
negl
pop
popa
add
lcall
aam
stc
sbb
sub
lock
mov
ret
xchg
push
testb
dec
or
cmp
daa
call
ljmp
ds
dec
mov
lds
shlb
insl
loop
inc
xor
sbb
ljmp
scas
mov
pop
dec
out
ds
sub
sub
sbb
lcall
fisubrs
lds
or
pop
pop
cmp
shll
add
push
jae
std
inc
and
scas
xor
cmp
incl
inc
cmp
mov
push
mov
push
jp
cmpl
es
jb
mov
incl
popf
inc
xchg
pop
push
jmp
lcall
dec
and
sbb
jecxz
mov
lods
xchg
cli
jne
inc
adc
xorl
xor
and
data16
dec
jne
stc
and
mov
pop
cmp
add
jno
and
sbb
dec
lcall
mov
cmp
adc
sub
add
cmovnp
ret
cld
addr16
xchg
ds
jg
dec
les
je
jmp
pop
loopne
and
jns
ret
decl
pop
int3
and
mov
shll
push
imul
cmp
cld
inc
push
gs
je
arpl
es
js
icebp
pusha
bnd
jle
push
jl
push
xchg
lcall
shll
mov
pop
jo
push
test
cmp
push
jb
ficompl
xorb
xchg
mov
push
add
mov
jo
mov
adc
adc
fcomip
dec
adc
stos
gs
stos
add
jno
pusha
add
dec
jg
daa
inc
push
loope
inc
inc
sbb
pop
aam
jne
add
mov
push
outsl
filds
pop
out
inc
inc
pop
js
inc
aas
inc
dec
lcall
pushl
xor
xchg
mov
inc
cmp
pop
jb
sbb
test
sbb
or
fs
int
cwtl
cmp
bound
mov
pusha
inc
popa
sti
test
cmp
dec
add
inc
add
or
movsl
push
pop
xor
xlat
fisubrl
sub
aaa
mov
popf
jecxz
xor
ret
aaa
xorl
lods
adc
jmp
int
les
fnsave
das
push
jnp
stos
sub
dec
mov
push
pop
dec
gs
outsb
ret
loop
imul
jb
les
ja
incl
push
jb
call
pop
int
push
jmp
push
jp
dec
int3
push
inc
jne
test
inc
ljmp
ret
or
inc
rorl
clc
out
mov
xchg
pop
mov
fwait
shrl
pop
jae
test
mov
inc
ljmp
outsl
adc
notb
inc
pop
cmp
decb
fdivrs
gs
rcrb
jno
and
jecxz,pt
outsl
cmp
dec
mov
mov
js
fs
mov
imul
mov
popa
popf
mov
dec
in
cld
iret
inc
sahf
and
inc
sub
cmp
fldt
xchg
mov
or
imul
sahf
cmp
mov
aad
jb
inc
mov
out
bound
rolb
decl
frstor
rcrl
jne
jp
call
lock
sub
loope
jo
jb
jbe
and
jp
xor
push
mov
dec
mov
jno
cmp
in
mov
outsl
loope
jo
mov
lods
cltd
push
cmpsb
adc
lcall
sub
xchg
push
dec
lea
movsl
xchg
mov
push
imul
lahf
incl
test
punpcklwd
imul
psadbw
dec
lahf
incl
add
fldt
cs
out
fistpll
pushf
dec
jne
cld
flds
popl
in
loop
int3
dec
xor
jp
pop
or
rolb
data16
roll
in
dec
iret
inc
in
outsb
mov
dec
inc
inc
int3
sbb
push
in
cmp
pop
and
cmp
ret
mov
clc
lcall
fnstenv
pop
dec
aas
inc
loop
inc
pop
scas
insl
pop
imul
loopne
cmp
popa
in
scas
or
std
es
cli
add
xchg
lret
rcrb
ljmp
push
loope
xor
inc
je,pn
sahf
cmpsb
stos
fsubr
dec
sub
mov
add
aaa
push
dec
clc
xchg
shrb
insl
mov
jo
jp
or
test
decb
fdiv
into
pushf
js
std
push
bound
stos
sub
or
movsl
push
pop
push
push
pop
jae
test
jne
repz
imul
or
decl
xor
or
xchg
movsl
mov
aam
pop
adc
add
cmpsb
sbb
clc
aas
int
int
mov
xor
aaa
ret
jne
fcom
cld
aas
pushl
push
fs
xchg
cmp
dec
push
pop
xchg
inc
int3
arpl
jmp
mov
outsl
cli
and
jmp
push
pop
sti
cmp
scas
loope
repz
push
pop
orw
and
mov
arpl
xchg
mov
das
les
jle
lea
mov
aas
push
popa
dec
xchg
scas
jecxz
hlt
lcall
mov
cli
inc
mov
mov
pusha
sar
lock
aas
push
inc
sbb
push
adc
call
dec
movsb
jne
jae
out
or
sub
jnp
push
test
into
push
push
pop
cmc
push
inc
sbb
pop
jno
xor
dec
jp
lahf
fwait
inc
lea
out
in
jne
sub
jne
sub
xor
scas
call
mov
es
and
shrl
lret
ljmp
or
pop
cmp
jae
jge
aaa
aam
pop
out
jne
add
out
out
rcrl
inc
dec
xor
adc
test
push
icebp
out
add
outsl
and
ret
pop
dec
pop
inc
push
lds
aas
rorl
out
adc
mov
and
or
das
rcr
lock
pop
cmp
fcomps
mov
dec
popa
sub
mov
decl
fwait
cmp
cmp
sub
xchg
mov
sahf
xchg
cltd
fdivl
inc
inc
push
xchg
scas
lods
ja
jo
pushf
push
adc
call
dec
jmp
dec
loop
scas
mov
ds
sbb
pusha
push
and
in
and
inc
xchg
push
jle
lock
push
scas
or
dec
clc
out
das
pop
test
outsl
xchg
push
jmp
stos
std
mov
mov
dec
stos
mov
test
stos
add
dec
push
dec
jmp
aad
jmp
and
or
andl
out
cmp
inc
lods
lret
inc
pusha
mov
cld
ljmp
mov
adc
test
pusha
imul
arpl
insl
pop
out
mov
decl
mov
or
push
imul
jmp
push
mov
les
push
pop
push
mov
call
fildl
mov
sbb
xor
mov
adc
mov
xor
mov
add
push
inc
in
std
pop
into
xchg
ljmp
dec
addr16
or
nop
out
xchg
lea
fcoms
std
jg
add
jecxz
cmpsb
pop
mov
and
mov
push
imul
mov
mov
pop
xor
das
outsl
loopne
arpl
lods
out
add
dec
jae
dec
pushf
cmp
dec
in
or
mov
inc
les
sub
pop
pop
repz
stc
insl
lcall
or
out
sahf
sub
shrl
pop
fistl
addr16
pop
cwtl
inc
mov
les
xorb
xchg
or
inc
mov
cmpxchg
out
pop
ljmp
insl
leave
scas
icebp
popa
or
adc
icebp
sbb
xchg
mov
cld
dec
addr16
mov
ljmp
inc
fidivs
xor
sub
dec
pop
test
fmull
pop
push
xor
dec
and
jmp
test
dec
push
mov
leave
pop
mov
mov
test
xchg
int3
mov
and
xor
jge
pop
xor
das
test
clc
call
in
pop
mov
and
push
push
repnz
pushf
push
cmp
lods
push
fstpl
push
das
mov
sbb
pusha
sahf
cmp
mov
cmp
pushf
jl
cmc
cli
pop
or
sub
gs
imull
cmp
xchg
lret
pop
xchg
mov
or
push
mov
jb
mov
mov
outsl
pushl
nop
cmp
les
movsl
mov
jne
mov
dec
int3
scas
mov
ja
pop
pop
icebp
and
das
outsb
dec
or
push
outsl
insl
ljmp
push
out
dec
or
movsl
lcall
lcall
inc
in
adc
and
dec
shlb
test
or
jmp
and
fnstenv
mov
ds
pusha
repz
adc
aas
mov
mov
lea
adc
xchg
dec
mov
mov
mov
cld
pop
lock
je
decb
fs
dec
repz
call
cmp
outsl
and
mov
mov
add
pop
mov
jg
shlb
push
pushl
jb
mulb
dec
mov
pop
add
imul
test
movsl
pushl
add
xchg
mov
fdivrs
cld
pop
inc
call
ficoms
xor
xor
add
or
ss
add
lcall
sbb
mov
aaa
xchg
push
popa
jmp
jg
dec
out
or
stos
out
mov
mov
fwait
pop
cmpsl
mov
ljmp
lds
mov
cwtl
or
mov
adc
push
clc
ss
xchg
packsswb
mov
pop
or
shll
jbe
pop
mov
subl
sub
shll
sbb
cmpsl
out
stos
mov
mov
adc
popa
es
les
test
mov
lds
mov
xor
cmp
cmp
sbb
mov
stc
adc
cltd
scas
jns
jno
pop
inc
push
inc
mov
mov
lcall
adc
jns
adc
mov
xchg
or
push
dec
aad
push
pushl
dec
xor
mov
xor
in
loope
outsl
jle
fstpl
inc
out
pusha
jecxz
push
decl
cmpsb
sub
push
test
aaa
inc
outsb
cmp
orl
mov
xchg
cld
or
xchg
sub
mov
mov
scas
clc
and
adc
xor
pushl
mov
sbb
rolb
out
jmp
sbb
mov
cmp
das
or
jle
rcrl
repz
adc
adc
stc
sub
sbb
push
fidivrs
sbb
cli
test
int3
xor
scas
cmp
xor
pusha
mov
jge
mov
push
dec
popa
scas
inc
adc
rep
xor
fs
inc
xorb
dec
in
cmpsb
cmp
fwait
lods
pop
psubb
sti
push
outsb
xchg
cwtl
jns
test
lcall
jg
cwtl
or
ficoml
jae
pop
repnz
xchg
mov
dec
jb
fidivl
push
pop
push
sub
adc
lret
test
push
cs
aas
in
ljmp
sti
ss
dec
jge
mov
adc
sub
or
outsb
loopne
insb
outsb
mov
out
add
outsb
mov
push
popl
adc
ss
xor
jg
mov
push
pusha
lea
insl
gs
addl
push
mov
push
push
mov
std
jo
jns
push
in
push
jb
xor
outsb
sar
out
icebp
mov
cmp
cmp
jg
cmp
mov
call
clc
das
outsb
cmp
pop
adc
push
and
adc
cmp
inc
jnp
and
or
ss
rol
push
jo
cs
fsts
jmp
sbb
les
popa
fwait
cmp
and
clc
cmp
dec
stc
jmp
loope
push
je
or
pop
add
shrb
test
aas
add
rorb
or
pop
jo
inc
push
in
or
mov
push
stos
nop
ss
test
mov
push
sbb
sub
dec
sbb
shrb
lea
cmpsl
test
leave
xor
pop
xchg
dec
jl
iret
aas
xor
push
fbstp
jbe
loopne
jle
fs
iret
push
sub
cltd
sahf
or
lahf
pop
test
xorl
lahf
aas
and
in
aaa
cmp
or
icebp
fsubl
rorl
decl
mov
inc
les
shlb
fldenv
mov
or
inc
enter
rep
mov
ds
ljmp
fildl
push
sti
pop
push
fists
pop
stc
jae
lcall
mov
std
cmp
imul
inc
push
bnd
mov
push
mov
jae
aaa
sub
push
call
call
add
movsl
xor
pop
xchg
mov
fistpl
imul
mov
test
mov
sbb
imulb
mov
jg
push
js
stos
ret
stos
sbb
test
pop
bound
cwtl
add
sub
outsl
jg
mov
sahf
mov
int
push
pop
roll
and
cmp
jmp
orb
dec
daa
dec
jbe
xchg
mov
inc
out
push
insb
sbb
in
clc
jg
pop
adc
pop
loop
and
jbe
ja
xor
lcall
add
sub
je
and
pop
repnz
jg
icebp
fs
push
outsb
mov
cld
lcall
jo
cmp
mov
cltd
fs
out
sbb
dec
fnstenv
lret
or
push
mov
jl
daa
pusha
out
incb
dec
mov
insb
call
std
in
dec
std
pop
into
sub
dec
int
dec
inc
lea
out
out
dec
dec
xchg
js
jnp
call
test
dec
xor
aaa
out
clc
fldt
adc
insb
xchg
jo
lcall
data16
adc
jmp
jns
mov
jne
pop
icebp
adc
jmp
outsl
jmp
and
arpl
and
sub
pop
jne
movsl
xor
sub
dec
ud0
jmp
mov
ljmp
mov
dec
mov
leave
jnp
jle
test
jae
lea
scas
push
dec
rorb
add
dec
push
int
sbb
mov
cmpsb
sbb
lret
lds
lahf
dec
mov
sbb
out
xor
cmp
decl
or
fbstp
inc
fisubl
mov
jae
mov
jb
or
pop
jp
dec
sub
adc
fs
and
dec
shrb
sub
or
sbb
mov
xchg
decl
jle
push
int3
mov
dec
es
out
loop,pn
lcall
int3
sub
sbb
mov
iret
shr
mov
jae
push
ret
imul
out
arpl
insl
push
lods
push
inc
out
mov
dec
lock
in
dec
cmp
repz
ja
add
sub
dec
sbb
nop
js
pop
pushl
cld
or
dec
clc
push
dec
lods
mov
push
push
int
test
add
arpl
mov
shll
pusha
lcall
fiadds
dec
jmp
dec
jno
push
fwait
xor
fildll
out
adc
test
cld
jg
push
push
inc
jl
imul
cld
cmp
xchg
dec
ror
sub
or
pop
cmp
cmpsb
rcll
pop
pushl
fs
mov
cmp
in
imul
sub
dec
rclb
mov
cmp
jl
and
and
dec
fisubs
push
insb
je
xchg
je
mov
daa
pop
cmp
push
out
xor
dec
mov
inc
out
lcall
mov
jg
out
aas
pop
int3
punpcklbw
jbe
sbb
xchg
jl
xchg
ret
add
ja
pushl
flds
inc
dec
outsl
cltd
popa
std
subb
loope
dec
fbstp
push
xor
adc
ljmp
pusha
lcall
mov
lcall
adc
std
fidivrl
jle
test
arpl
pop
insl
clc
adc
popa
dec
xchg
je
ja
inc
test
out
and
xor
sub
test
and
pop
les
sahf
cmp
xor
xor
fcomip
rolb
ss
mov
gs
mov
sbb
mov
mov
add
xor
ja
xor
add
or
inc
dec
out
insb
pop
inc
nop
jecxz
sahf
jge
cmpsb
decl
inc
loop
loopne
pop
inc
iret
xchg
cmp
in
pop
les
gs
jb
cs
out
push
mov
call
dec
jg
sbb
insb
stc
sahf
or
cli
cmp
pop
dec
mov
and
hlt
sbb
bound
fcoms
jle
mov
add
fldcw
es
sub
test
lea
inc
fadds
cld
lcall
pop
push
mov
xchg
inc
in
xorb
jmp
xchg
mov
test
push
jns
sub
scas
push
push
mov
cmpsb
pop
out
adc
cmp
in
inc
cmp
mov
fistl
mov
lahf
incl
sbb
or
repnz
out
push
inc
int3
dec
out
cmp
pop
call
mov
shlb
push
dec
xchg
in
pop
imul
pop
in
aas
jge
pop
jno
dec
mov
jne
or
sub
mov
mov
clc
nop
mov
adc
repnz
fnstsw
sar
ljmp
out
jg
inc
inc
lea
and
mov
jne
clc
mov
cmp
rclb
mov
arpl
popl
xor
push
sbb
pop
jl
rcrl
cmp
jmp
sbb
cld
xor
push
mov
inc
lds
push
sbb
adc
xor
je
cwtl
push
xchg
ds
dec
lds
push
adc
mov
dec
std
push
into
aas
jp
les
inc
sahf
push
jecxz
ja
xchg
xchg
popf
mov
xor
dec
es
fxrstor
adc
insb
pop
lea
call
cli
aas
adc
sub
dec
xor
mov
mov
jecxz
dec
or
fcoms
cld
push
pop
stos
ds
adc
add
ja
inc
or
decl
lock
push
dec
lcall
insl
ja
ds
inc
out
push
aaa
inc
decl
cmp
test
or
push
js
cmp
jmp
int
push
inc
in
dec
dec
popf
loopne
inc
adc
call
ljmp
pushl
pop
out
pop
pop
ficoml
pushf
mov
outsl
jnp
imul
data16
jmp
sbb
sbb
sub
insb
cmp
or
insl
test
xor
cs
in
add
pusha
mov
pop
into
jg
sub
mov
arpl
dec
subb
jle
push
mov
das
push
dec
int3
adc
adc
shll
mov
lock
jmp
xor
jae
cmp
or
and
dec
cli
push
je
pop
clc
jg
sahf
sub
sub
inc
cs
push
pop
dec
pop
loop
jg
xor
fdivs
mov
lcall
jl
sub
pop
ljmp
mov
repz
inc
les
xor
jne
add
mov
pusha
jp
addb
mov
sbb
xchg
nop
iret
insb
clc
sub
dec
mov
inc
pop
fstpt
jns
loope
add
lcall
test
mov
mov
xchg
mov
ja
pushf
lds
repnz
add
mov
ret
out
lcall
orb
mov
xor
cmp
adc
or
or
ss
adc
hlt
out
adc
sub
xor
dec
int
push
fildll
dec
fs
popa
icebp
and
fisttpl
insb
jmp
out
sbb
fstps
pop
cmp
jp,pt
adc
fistps
dec
loopne
dec
jge
mov
lcall
mov
arpl
addb
mov
je
xchg
test
cli
sub
enter
iret
scas
xor
push
aam
ja
orl
addr16
out
jne
mov
mov
and
shlb
cmp
xchg
lods
incb
xchg
jmp
mov
shll
rorb
bound
push
dec
fildll
cs
xchg
sub
jno
aaa
fs
les
insl
push
decl
adc
loopne
dec
cmp
bound
data16
stos
cmc
outsl
es
xchg
roll
fimull
dec
test
jg
jge
push
and
outsb
shlb
insb
push
sbb
imul
cmp
das
add
push
jno
mov
push
rcrl
ljmp
inc
push
mov
pop
cmp
aas
inc
fstpt
sbb
loop
inc
inc
inc
movl
or
pushf
jg
jmp
dec
pop
mov
or
jae
jbe
mov
or
inc
push
rcrl
out
cmp
sahf
dec
mov
sub
or
and
add
out
cli
jns
xor
lods
sahf
add
push
xor
jge
sub
cmp
xor
jg
fildl
and
xor
add
add
inc
fidivrl
pop
push
sub
add
sub
push
fists
jmp
pushf
push
push
dec
repz
pop
push
cmp
cmp
int3
sbb
inc
jae
inc
call
into
add
stc
jae
es
gs
sub
sbb
jbe
movsl
nop
jns
dec
fisttpl
mov
sahf
outsb
cmp
xchg
scas
xchg
out
adc
add
adc
decl
out
adc
xor
out
jns
add
sub
add
inc
hlt
imul
cmp
jbe
mov
and
mov
mov
pop
add
sub
adc
adc
call
adc
iret
sub
push
xor
xchg
push
sub
movsl
cmp
dec
ljmp
inc
movsl
cltd
pop
out
scas
nop
in
add
push
std
jg
mov
aaa
push
and
and
or
fistl
jge
add
filds
aas
cld
aaa
sub
push
xchg
pop
imul
outsb
and
ss
fs
cmp
and
or
jae
scas
pop
add
sbb
hlt
xor
cmp
cwtl
adc
lcall
fs
jo
cmpsl
xchg
inc
inc
insb
lds
popa
or
into
jg
inc
lahf
cmp
sbb
cli
sub
enter
add
or
add
daa
dec
mov
add
xor
ljmp
sbb
imul
mov
fmull
sbb
fistpll
shlb
push
push
sub
push
das
orb
aaa
xlat
pushf
pop
sub
add
sbb
jl
movsb
adc
mov
inc
fbld
outsl
filds
std
orb
jg
sbb
push
pop
inc
mov
ds
or
and
std
or
sbb
mov
int
push
cmp
xor
je
push
out
push
movsl
push
fs
add
fwait
xchg
jp
fs
jg
xor
pop
mov
mov
out
pop
pop
out
stos
insb
sbb
add
mov
add
subb
mov
decl
jg
fstl
lods
push
push
fcoms
push
add
mov
call
jne
out
icebp
add
or
ss
xor
jg
das
int3
sahf
jne
mov
popa
lahf
sub
insl
jae
push
icebp
inc
lcall
jg
xchg
leave
mov
aam
mov
ret
sub
jns,pn
stos
inc
jo
jg
dec
jbe
pop
mov
insb
pop
jne
push
hlt
clc
mov
dec
shll
mov
pop
clc
jmp
mov
lcall
mov
andb
in
adc
mov
lods
jo
xchg
arpl
xchg
cwtl
scas
lods
push
push
scas
inc
jno
stos
push
push
dec
mov
mov
out
clc
mov
sahf
adc
pushf
cmpsb
xchg
mov
lcall
sbbb
mov
scas
cmpsl
mov
mov
je
mov
ljmp
mov
add
xchg
out
dec
push
aaa
and
mov
lods
popa
lods
lods
int
out
cli
call
mov
push
xchg
mov
pop
push
sbb
and
ljmp
add
pop
in
jo
scas
mov
pop
pusha
adc
stos
decl
pop
je
scas
jp
dec
dec
add
pushf
popa
jno
push
jns
sub
pop
xchg
mov
cmc
repnz
outsl
pop
push
inc
fcoml
xchg
mov
cmpsb
jg
jg
frstor
fs
pop
pop
fmull
and
out
jmp
outsb
push
sbb
sub
add
add
cmp
fsubrs
repnz
jg
xchg
in
jp
and
and
das
and
cmp
scas
ljmp
jg
std
dec
push
pop
lret
andb
mov
xor
xchg
sar
popf
inc
dec
bound
mov
xor
mov
leave
and
ljmp
cmp
std
fbld
pop
sub
sub
repz
ja
ljmp
and
ret
mov
pop
imul
pop
into
repz
je
imul
in
jbe
push
dec
ljmp
call
xchg
push
mov
dec
dec
dec
push
jle
repnz
xchg
pushl
je
sbb
insl
addr16
mov
sahf
mov
or
and
pop
mov
mov
push
rclb
jb
mov
xchg
out
dec
add
mov
cmc
out
or
lahf
xchg
xchg
mov
scas
pushf
mov
decl
xchg
outsl
ss
ja
mov
mov
mov
cmpsl
popf
insl
cmp
dec
mov
jb
jns
dec
repnz
cmpsl
icebp
mov
mov
mov
popf
ret
push
push
outsb
jbe
lea
pop
ljmp
stos
test
xchg
and
adc
das
push
ljmp
mov
or
adc
outsl
in
xor
add
pushl
push
and
popa
data16
cmp
movsb
outsl
jle
dec
push
cmc
mov
cld
sbb
popa
fsubrl
call
rclb
jge
xchg
fs
std
ljmp
xchg
shll
sub
stos
call
or
jns
shll
sub
aas
cld
pop
pop
add
mov
popf
imull
jb
pop
push
add
add
push
dec
xor
mov
add
scas
outsb
call
addr16
lds
and
jp
test
jg
popa
push
out
ss
dec
mov
es
ljmp
sarb
cmp
jecxz
push
sbb
sub
cmp
lcall
aas
dec
adc
es
pop
pop
fcompl
add
pop
or
mov
inc
out
and
and
call
dec
iret
divps
fidivl
inc
test
and
push
jmp
scas
cmp
aas
xor
repz
es
mov
jl
add
xor
loopne
pop
stc
lods
sub
rorl
aas
aaa
sbb
sub
push
inc
mov
std
xor
iret
ljmp
sbb
push
mov
push
jno
pop
mov
decl
mov
xchg
jno
mov
jns
test
icebp
jg
pop
xchg
jp
sub
loop
push
xchg
mov
dec
push
fstpl
jl
mov
popl
pop
add
or
xlat
or
inc
xchg
jb
call
incl
jnp
push
push
icebp
or
pop
pop
cli
ds
loope
dec
cli
add
sub
or
jmp
popa
xchg
mov
lock
pop
xchg
outsl
out
push
inc
test
repz
xchg
sbb
xor
repz
push
outsb
repnz
rclb
cmp
sub
sub
pushf
push
mov
fs
cmp
cmp
addl
mov
or
sbb
sbb
add
push
dec
mov
ds
dec
out
jmp
out
aam
loopne
decb
push
dec
jecxz
bound
sarb
xchg
jmp
add
mov
push
rolb
cmc
jg
xchg
mov
or
loopne
pop
jne
dec
fidivrs
xchg
push
lods
sbb
cmp
xor
adc
mov
and
je
sub
xchg
imul
ljmp
push
mov
dec
stos
dec
gs
sbb
ret
pop
adc
lock
xchg
test
sbb
xor
mov
call
or
inc
clc
inc
lret
push
loope
jge
mov
add
push
lods
and
dec
lret
ds
fsts
pop
hlt
scas
shlb
dec
rcll
pop
push
sbb
inc
push
pop
ds
or
pop
push
mov
jp
in
push
jmp
incl
xor
ljmp
inc
or
scas
ret
lcall
dec
jg
and
loop
bound
daa
sbb
push
mov
movsl
incl
mov
jne
bnd
push
les
push
sub
sbb
jg
call
pop
out
mov
adc
pmuludq
jle
cmp
test
mov
incb
push
shrl
aam
insb
dec
sbb
leave
xor
mov
xchg
lock
xchg
xchg
out
scas
adc
ljmp
stos
scas
stos
xor
sub
hlt
cmpsb
xchg
out
add
ljmp
xor
fwait
adc
push
rol
jmp
int
dec
shrl
pop
cmp
cmpsl
lret
add
insb
lret
pop
out
int
push
je
xchg
inc
fmul
data16
pushf
xor
jae
lcall
jnp
cmp
xor
gs
ljmp
lret
cmp
mov
stc
and
xchg
pop
pop
push
scas
int
int
or
in
popa
test
decl
add
and
js
inc
xor
adc
aas
dec
call
and
decl
std
imul
imul
add
movsl
cs
sti
mov
jmp
pop
mull
sbb
outsb
mov
gs
push
andb
sahf
shrb
in
dec
push
es
dec
push
xor
sub
es
das
rcr
and
fldt
push
add
fisubs
pop
out
push
jbe
fldl
loopne
jmp
mov
pop
imul
jno
loope
jbe
nop
ret
sbb
lcall
jge
andl
mov
mov
ja
fistpll
or
xchg
scas
repnz
pop
aam
loop
rol
dec
xor
add
rcrl
push
aas
jle
enter
into
cli
dec
out
iret
cmp
in
sub
xor
inc
inc
jb
inc
shll
fimull
push
decl
push
ja
data16
ffree
inc
cmc
rcll
dec
repnz
imul
imul
les
daa
loopne
pop
out
push
ret
addr16
loope
push
imul
sarb
repz
adc
push
je
pop
cld
int3
dec
shll
mov
insl
jge
aas
daa
xorl
aam
incb
mov
out
movsb
out
stc
outsl
push
cmpsb
adc
clc
ljmp
call
add
xor
test
ret
fimull
je
push
loopne
jno
fimull
add
lock
call
enter
sar
iret
xchg
or
bound
jno
push
cs
outsl
cli
aam
in
ss
adc
jle
incl
mov
dec
int
inc
lcall
popf
shrl
fistpll
jae
cmp
int3
jbe
loopne
insl
ja
lcall
pop
fimuls
loope
scas
movsb
xor
mov
out
les
jne
test
pusha
adc
ja
imul
in
lret
pop
rcll
sbb
insb
enter
add
mov
enter
xor
repnz
xlat
mov
movsl
mov
insb
jmp
or
xchg
fcmovne
push
fdivrl
add
aaa
mov
jle
aaa
push
insl
adc
les
imul
arpl
enter
outsl
aam
push
call
cmc
arpl
int
int3
notl
pushl
inc
push
pop
add
adc
gs
and
add
jno
in
out
fwait
jmp
push
outsl
icebp
xor
xchg
jge
or
dec
loopne
std
inc
fcmovu
je
jnp
jb
cmp
out
pusha
scas
fmul
push
and
stos
push
into
push
sbb
xchg
cli
adc
jg
call
popa
jmp
clc
fmull
test
push
lds
into
adc
loope
push
out
jo
scas
ret
dec
rorl
push
bound
and
push
inc
popa
sbb
mov
popa
sahf
cld
adc
inc
lock
sub
in
xchg
sbb
nop
jecxz
out
pop
fdivrp
mov
lock
sbb
shrb
je
in
push
fsubrl
mov
arpl
loopne
inc
rol
popa
add
lahf
jg
shl
fstp
or
sub
fs
je
aam
mov
out
pop
push
adc
or
xor
and
data16
mov
es
adc
cmp
adc
sub
xor
xchg
hlt
call
and
dec
aaa
cmp
call
sub
ljmp
ljmp
pop
xor
ljmp
dec
cmp
shrb
sbb
fcomip
das
sahf
push
insl
mov
andl
push
or
repnz
xchg
test
lcall
xlat
mov
pop
insb
out
cmpl
push
jg
sar
test
xchg
lret
stos
push
pusha
insl
push
sub
mov
ds
fildl
adc
cmp
jp
or
sub
sub
jmp
jge
and
dec
or
jae
cmpsl
mov
nop
imul
sub
incl
dec
inc
sbb
mov
aas
out
out
jbe
in
cmpsb
lcall
push
scas
and
test
ret
ss
push
jge
fucomip
pop
cmpsb
adc
jl
and
loopne
jno
repz
ljmp
lret
or
sub
lea
sub
pop
cli
int
jp
xorb
or
pop
or
inc
scas
inc
std
mov
lcall
jecxz
sbbl
insb
in
push
jmp
scas
aas
popa
add
or
scas
mov
xchg
mov
lret
es
jbe
mov
int3
mov
in
pusha
push
pop
enter
mov
xor
out
cmpsb
mov
dec
cs
dec
sub
js
and
pop
sbb
push
pop
add
sub
cs
inc
mov
xor
mov
decl
pop
lret
push
leave
xor
ficompl
push
aam
insb
push
int3
jae
outsb
loop
ljmp
loope
bound
push
dec
inc
aad
push
cmp
andl
pushl
add
insl
jmp
or
movb
jge
jo
sbb
int
js
cmp
sarb
pop
add
cmpsb
inc
adc
arpl
nop
jae
add
stos
loop
cmpsl
or
call
call
incl
adc
pop
pushf
cmpsb
js
sub
enter
push
jp
rorl
inc
nop
aaa
loop
xor
jle
bound
pop
in
lds
sar
pushl
jne
mov
jg
pop
pop
jb
mov
adc
cmp
xchg
push
jne
iret
popf
jg
icebp
or
dec
outsl
js
jp
pop
loope
dec
or
add
hlt
daa
stc
xor
cmp
repz
jmp
push
jns
cmp
inc
xchg
adc
jg
into
push
lds
dec
ds
sbb
fdiv
mov
das
xchg
ret
mov
jg
in
ljmp
incb
mov
testl
icebp
int3
fstl
jle
les
lea
dec
out
push
pushl
add
and
sbb
and
test
sub
sub
icebp
pushl
imul
rorl
jae
xor
sbb
add
cmp
cltd
or
int
iret
adc
fsubr
dec
jmp
jecxz
ds
or
fsubrl
sub
movsl
pop
ds
out
cmpsb
notrack
push
aad
xor
jb
pushl
sahf
int3
xchg
into
das
push
sub
jle
xor
pop
xor
push
push
jae
rorl
dec
xchg
out
jo
ds
sub
or
jg
push
pop
mov
das
lcall
decl
mov
orb
sub
push
push
in
jb
ja
stc
jg
and
jmp
daa
inc
mull
sub
push
int
lds
aas
jnp
jns
push
inc
shll
jmp
decl
dec
ja
popf
add
dec
jo
mov
pop
inc
lcall
mov
sub
loope
push
inc
sbb
pop
call
ljmp
xor
out
sbb
xchg
fdivrl
les
add
pop
shlb
ja
pop
jns
adc
pop
lock
punpckhdq
dec
into
sub
dec
push
idiv
pushl
les
dec
inc
rcrl
cmp
mov
push
pop
ja
stos
pusha
add
xlat
int3
and
inc
sarl
add
outsl
or
dec
inc
decl
jp
stos
pop
dec
popa
insl
aas
sub
pushl
mov
mov
jae
sbb
adc
jge
xchg
sub
into
xchg
sbb
dec
pop
out
jge
mov
pop
xchg
arpl
or
les
jnp
ret
push
repz
xor
popf
add
pop
imul
mov
sub
cld
xor
loope
loop
sub
cmpsb
add
ret
ficompl
adc
xchg
outsb
aas
loop
jne
loopne
outsb
dec
lret
mov
pop
pop
loope
jg
ficoms
and
aas
lcall
fcompl
outsl
out
jno
imul
pop
sahf
es
das
adc
cmp
fwait
fwait
or
movsb
adc
cmpsl
out
push
ljmp
add
xorps
int3
cmp
std
test
cmpsb
ss
call
mov
jbe
popa
dec
decl
lods
xor
loop
gs
leave
jg
jmp
xchg
pop
cmp
mov
mov
cli
lods
cmp
mov
das
sar
cli
movsl
out
sbb
cmp
inc
gs
call
push
jecxz
and
call
push
push
sub
push
mov
out
jg
cs
imul
jnp
xor
xchg
pop
mov
or
ffreep
cltd
orl
xchg
rorl
pop
push
sbbl
cld
jmp
dec
shlb
cld
sbb
mov
mov
xor
pop
subl
jne
test
jno
xor
lcall
hlt
cwtl
xchg
lcall
xor
xor
test
cmp
shlb
je
pop
popa
sar
call
jno
mov
mov
adc
add
int3
pop
and
lahf
sub
incl
mov
push
dec
fldt
mov
push
cmp
fnsave
mov
ljmp
xor
sahf
shll
jns
out
jg
push
into
push
sbb
pusha
push
inc
sub
loope
xor
push
ljmp
call
das
add
test
mov
insl
xchg
sbb
mov
sahf
jmp
inc
xlat
scas
ds
repnz
sbb
stos
lret
lods
or
movsb
fidivl
lcall
lea
imul
dec
ds
cmc
test
fwait
movsl
out
fists
inc
cmc
and
dec
xor
rcll
dec
pop
xchg
incl
test
stos
aas
pop
out
inc
push
dec
rorb
lcall
dec
fmull
push
stos
into
das
sar
jo
xchg
out
imul
pop
scas
addr16
ljmp
cltd
cmp
push
bound
movsl
xorl
mov
iret
popl
or
jmp
fwait
js
dec
repnz
sbb
rclb
fnsave
cmpsb
sbb
fisttps
ss
dec
std
mov
push
pop
cltd
jnp
sbb
adc
bound
push
push
add
adc
xchg
cmpsb
xor
jl
cmp
out
je
stc
ss
pop
loop
gs
outsb
sub
and
mov
sub
call
and
gs
push
andl
adc
jge
repz
add
jne
popf
fsubrp
inc
fcoms
data16
mov
xchg
xor
lcall
push
shlb
sahf
push
fisttps
adc
mov
stc
sbb
cltd
mov
mov
cwtl
fidivs
fwait
scas
je
dec
dec
std
mov
pop
ret
pop
cld
clc
js
imul
jo
push
push
sub
xchg
outsb
ljmp
pop
aas
xor
mov
xchg
lods
bound
push
fbstp
rclb
insb
dec
sbb
push
xor
lret
in
outsb
loope
out
adc
push
pop
mov
xchg
pop
inc
jg
decl
fs
adc
call
jmp
scas
loop
repnz
fldt
bound
pop
dec
jae
pop
xchg
int
cli
into
or
pusha
int3
stos
add
add
adc
pop
xor
ds
enter
jg
lods
mov
and
sarb
mov
pop
push
push
add
lock
pop
lcall
fisttpl
adc
scas
and
add
sbb
aas
cmp
adc
fsubrs
outsl
sbb
mov
xchg
sub
aas
andb
inc
pop
push
pop
repz
and
pop
ds
cmpsb
fwait
gs
jp
add
fildll
ljmp
dec
push
in
test
and
jmp
adc
add
adc
or
out
mov
xor
and
pop
mov
pop
xchg
sbb
push
jl
mov
out
dec
rcrb
in
cmp
outsl
push
fbld
pop
mov
scas
fdivrl
cmpsb
inc
lret
aam
scas
push
mov
mov
imul
adc
imul
dec
stos
mov
stos
out
nop
xor
ja
ret
sub
call
loopne
mov
fsts
jmp
adc
or
ret
rclb
ljmp
jle
or
cmp
jmp
dec
and
loop
jno
gs
adc
cmp
push
sub
jo
fdivr
push
imul
xchg
pop
pop
repnz
fistpl
jge
mov
call
jle
mov
dec
adc
inc
loope
std
lcall
push
ljmp
add
mov
int
outsb
jmp
mov
popf
and
push
repz
ljmp
out
xor
out
loopne
dec
dec
mov
inc
pop
leave
xor
stos
jmp
or
out
sahf
dec
sub
movsl
mov
mov
xchg
sub
incl
push
insl
shll
mov
mov
fwait
cmpsb
mov
cmpsb
fisubrs
cmp
in
decl
in
or
mov
fidivs
sbb
lock
mov
enter
push
mov
fbld
inc
int
dec
data16
iret
sub
push
push
lret
push
gs
sti
and
pusha
imul
jecxz
in
dec
std
inc
enter
jle
scas
fmull
std
test
sbb
pushl
les
jle
xor
mov
popf
outsb
lea
mov
mov
out
adc
jns
sub
cmp
mov
sub
es
lcall
xchg
adc
push
nop
cli
and
xchg
mov
test
dec
jecxz
xor
sbb
add
push
pop
pop
cmpsl
das
nop
sarl
dec
mov
inc
outsb
lock
cmp
jg
push
cmp
inc
out
jb
and
inc
call
cmp
push
jo
dec
xchg
cmc
aaa
ja
incl
inc
sub
aad
jl
or
inc
aas
mov
in
daa
inc
jno
repz
or
enterw
jp
rcll
jo
ljmp
mov
sbb
addr16
add
ja
in
inc
lahf
popf
iret
nop
cld
call
push
scas
push
int
adc
fwait
push
rcrb
pop
push
xor
cs
xor
cli
lcall
push
adcb
push
jp
imul
adc
mov
clc
pop
bound
push
lods
popl
outsl
lock
lcall
sti
pushf
jne
fistpl
jge
nop
xchg
sbb
sub
pop
pop
jae
jmp
jp
xchg
fimuls
lea
push
jne
pop
jne
adc
pop
loopne
mov
scas
in
mov
pop
jle
stc
jns
mov
add
out
mov
scas
aas
enter
ja
movl
xor
sbb
adc
inc
xor
aas
cmovs
and
lea
and
dec
inc
dec
int3
ljmp
mov
inc
or
addr16
ret
jbe
inc
ds
decl
lcall
cmp
ss
jmp
lods
sbb
ret
je
daa
jno
pop
into
inc
jg
push
cli
test
inc
push
lds
push
gs
inc
sti
es
incb
cltd
cmp
pop
sbb
outsb
jb
push
pop
ss
xor
int
call
pop
std
decl
in
nop
cmp
mov
adc
xor
jp
push
mov
jb
lock
xchg
mov
jns
push
sahf
push
cld
pop
or
cltd
je
jns
add
lock
mov
xchg
add
push
and
cli
mov
clc
insb
punpckhdq
enter
sti
adc
pushf
mov
dec
jg
das
out
jl
sub
orb
scas
mov
inc
les
gs
mov
xchg
mov
push
ret
inc
push
std
jp
ljmp
movb
cmpsb
cwtl
jg
imul
xlat
cmp
out
xchg
les
jle
lret
dec
repz
pop
fdiv
jle
dec
cmp
adc
lock
jo
dec
lcall
outsl
outsb
inc
push
pusha
shr
xor
jmp
in
insl
jns
inc
fstl
inc
movsl
hlt
sub
test
push
mov
jo
and
fwait
mov
xchg
push
jge
sub
repnz
int
out
clc
pop
push
lock
subb
mov
dec
rorl
add
fdivs
jno
jnp
clc
jg
in
lcall
xchg
mov
cmp
push
add
pop
xchg
in
add
imul
dec
jle
inc
lcall
shlb
lea
leave
ljmp
sbb
and
cld
frndint
mov
aad
inc
scas
inc
stos
icebp
sub
aaa
ljmp
shrb
test
out
and
jle
in
mov
int
sarb
fcomp
push
mov
push
mov
mov
push
inc
movsl
push
lods
mov
shrl
sub
int
push
and
dec
inc
mov
mov
lock
shll
lcall
jno
sti
or
mov
jb
out
dec
xchg
rclb
rclb
push
dec
andl
jg
pop
iret
mov
and
adc
lods
xchg
pushl
sub
jg
jge
adc
and
sti
sahf
enter
cmp
jle
dec
sar
scas
cld
scas
js
add
push
or
pop
icebp
cmpl
push
pop
and
out
cld
lcall
sbb
mov
pop
jbe
or
js
pop
lea
pop
add
inc
push
in
jno
sub
xchg
arpl
jl
add
xchg
mov
sub
mov
xor
decb
lock
cmp
and
loopne
pop
lock
pop
fists
cltd
iret
cmp
cmp
dec
insb
out
mov
mov
lcall
and
jg
adc
inc
jmp
lds
inc
sub
xchg
dec
xchg
clc
mov
inc
daa
fwait
or
aas
add
call
push
in
or
scas
xchg
adc
dec
mov
decl
insl
jle
xchg
divl
dec
fstpt
enter
out
fisubrs
xchg
fs
lds
mov
insl
stc
jg
inc
sbb
aas
mov
stc
aaa
dec
stos
mov
enter
lds
inc
and
inc
mov
cmp
cmpsl
ljmp
dec
inc
jae
stos
insb
loope
cli
or
inc
leave
push
int3
pop
add
or
inc
lods
adc
dec
mov
in
rcrl
roll
incb
aaa
decl
fidivrs
dec
out
push
shrl
inc
aad
iret
xchg
adc
out
mov
cld
or
pushl
fidivs
sub
lea
sti
aas
push
push
test
pushl
aam
movw
stc
or
and
xor
daa
pushf
popa
andb
jns
test
mov
mov
inc
jbe
pop
mov
jmp
pop
sbb
push
mov
out
lea
decl
push
adc
sbbb
mov
inc
jb
jle
mov
or
mov
add
and
xchg
je
mov
jge
sub
loop
sbb
repnz
stos
push
inc
push
add
es
mov
jg
cmp
jns
xchg
into
dec
push
aaa
stc
adc
pop
add
in
jg
pop
dec
sub
movsl
mov
cmp
std
jmp
dec
add
adc
adc
push
jne
xchg
inc
mov
cmp
cld
inc
mov
ljmp
or
ret
insl
cmp
add
jg
leave
cld
das
push
pop
or
xchg
pop
mov
fcomps
cli
cmp
lock
pushl
stc
mov
je
fnstenv
repnz
mov
push
into
mov
jg
and
mov
push
bound
les
push
in
scas
add
push
stos
loopne
sahf
mov
mov
scas
repz
sub
cmp
aaa
or
dec
outsb
stc
xchg
and
test
dec
mov
mov
fisubrs
incl
sbb
xchg
jl
int3
mov
clc
pushf
and
cmp
pushf
enter
mov
pop
in
sbb
call
add
cltd
or
insb
outsl
cmpsb
mov
add
xchg
push
sub
lds
outsl
clc
decl
mov
push
lods
add
sub
stos
jl
dec
int3
add
mov
add
lcall
fdivs
je
stos
outsl
sahf
fildl
cmp
adc
mov
aad
fistps
add
rorb
leave
imul
jle
pop
into
add
xchg
mov
insb
movsb
aam
push
out
mov
xor
call
add
xchg
mov
scas
cmpsb
stos
scas
dec
xchg
lock
jl
mov
ret
mov
enter
mov
clc
mov
incl
aam
orb
pop
xor
scas
cmpsb
add
xchg
insl
dec
or
ljmp
mov
dec
xor
jns
or
or
cwtl
insl
sahf
or
jmp
jbe
mov
scas
lods
cmpsl
xchg
mov
mov
jecxz
pop
push
dec
pushf
push
incl
mov
adc
jns
xchg
jne
dec
add
in
add
or
dec
incl
mov
adc
sbb
imul
inc
std
das
clc
ret
jge,pn
xchg
add
dec
scas
clc
jmp
push
fs
inc
sub
arpl
jl
push
stos
int
pop
sub
pop
jg
jmp
lds
adc
scas
int
and
cmpsb
repz
push
jno
incl
cld
push
test
sub
test
dec
inc
inc
cs
adc
jp
pop
cmp
add
jge
push
inc
out
jne
scas
orb
cmpsb
js
jp
dec
adc
outsl
jmp
adc
pop
rcrb
es
or
mov
sar
inc
data16
sub
scas
daa
cltd
dec
mov
clc
jmp
jae
xor
mov
pop
lds
push
inc
dec
mov
inc
aaa
call
sahf
add
imul
inc
inc
sbbl
shll
cwtl
push
test
sbb
incl
lds
mov
xchg
addb
jmp
dec
sarb
dec
repnz
inc
mov
inc
push
orb
ljmp
pop
xchg
fildll
mov
xchg
xchg
cmpsb
dec
pushf
jmp
outsl
hlt
xchg
lock
jmp
lcall
outsl
push
mov
inc
inc
xchg
sbb
xchg
and
xor
adc
adc
sub
sbb
pop
mov
add
dec
xchg
dec
pop
test
out
clc
xor
inc
adc
cmpsb
mov
sahf
das
jl
xor
test
mov
cli
sbb
add
test
add
mov
filds
ffree
cmp
sbb
adc
insb
dec
lea
lcall
push
add
push
inc
add
orl
push
call
fistl
test
mov
xor
movsl
loop
incl
arpl
sbbb
sti
test
pushf
bound
sbb
pushl
adc
test
lcallw
ss
movsb
cmp
std
bound
cmp
jne
cmc
in
pusha
dec
inc
sarb
inc
inc
sti
mov
in
mov
ds
cmp
nop
popa
fwait
movsb
mov
js
in
lahf
and
jno
icebp
pushf
sbb
mov
fdivr
fisttps
rcll
jno
out
push
inc
jp
lods
cld
jmp
lds
repnz
push
pop
fnstenv
or
or
add
sahf
scas
push
inc
cmp
ret
aaa
push
or
mov
stos
mov
movb
std
ljmp
test
xchg
pushf
xchg
xchg
loop
xchg
xchg
lcall
mov
add
loope
test
fnstenv
loopne
popf
mov
lcall
popf
mov
mov
mov
mov
cmpsl
daa
dec
fcomps
std
mov
ret
into
xchg
mov
sub
or
ret
jae
mov
imul
in
xchg
mov
lods
mov
sti
sub
shl
mov
test
pushl
dec
popl
cs
ljmp
clc
outsl
rolb
inc
popa
sbb
xchg
jno
ret
call
fs
test
cmp
inc
jge
mov
add
xor
cmp
cld
es
jno
jg
cmc
xchg
test
add
jp
push
lea
and
lock
mov
pop
fstl
dec
nop
mov
fucomip
xchg
cmp
mov
pop
dec
inc
dec
pop
sbb
xlat
lahf
scas
xchg
jne
and
sbb
adc
lea
test
lahf
loopne
pop
adc
inc
mov
jbe
jecxz
pushl
pop
xor
out
xor
call
lret
jge
aaa
or
add
add
ljmp
xor
dec
pop
mov
jo
cli
dec
cltd
mov
mov
movl
and
mov
imul
imul
shlb
mov
add
daa
mov
std
call
mov
sbb
dec
insb
cmp
mov
push
lea
sub
movsb
jo
imul
sbb
scas
inc
je
inc
test
sub
pushl
dec
mov
cs
push
push
xchg
push
cltd
sub
jo
leave
clc
inc
pusha
push
fwait
or
sar
fildll
nop
adc
repz
mov
aam
jne
aad
add
sar
pushl
lret
lods
adc
jp
jg
push
jne
leave
movsl
cmp
mov
aam
jae
xchg
sub
mov
push
outsb
jo
mov
scas
cmp
or
pop
fs
or
mov
push
inc
icebp
gs
push
dec
cmpsb
xorl
push
mov
incl
dec
mov
xchg
imul
cmp
lods
mov
dec
data16
sbb
dec
outsb
cmp
mov
aaa
xor
inc
incl
and
jnp
xchg
pop
pop
scas
insb
xor
adc
add
fwait
hlt
gs
add
js
mov
mov
push
imul
mov
sbb
lea
pushl
push
ds
inc
inc
push
cmp
add
adc
insl
sbb
xchg
je
test
pop
jg
adc
or
inc
push
mov
sti
cs
shlb
fdivrp
jg
jb
jp
jmp
lcall
lahf
inc
add
sarb
je
adc
decl
pop
xchg
xchg
sub
ljmp
and
add
loop
orl
sar
fcomip
fwait
outsb
add
es
das
test
pop
sbb
mov
aas
cmp
fwait
and
dec
pop
mov
sarl
inc
inc
lret
inc
cmp
mov
cmp
bound
adc
mov
sub
call
pop
jmp
push
rorl
xchg
mov
int3
fwait
mov
call
jbe
rsm
lret
inc
adc
mov
adc
xor
cmpsb
fidivrl
pop
fbstp
lods
out
dec
lods
mov
lods
stc
mov
clc
popf
sti
or
pop
dec
lods
sub
cmp
mov
pop
rorl
out
xor
mov
adc
iret
mov
fisttps
out
jno
push
call
pop
in
loopne
jb
in
push
imulb
call
call
data16
dec
pop
and
dec
mov
jmp
pop
aaa
idivb
decl
jbe
jbe
je
out
jmp
push
pop
pminub
jbe
je
into
push
cmpsb
jg
inc
iret
xor
in
push
js
jno,pn
mov
popa
fidivrs
imul
push
ja
loopne
pushl
pop
insl
imul
imul
js
push
out
jp
outsl
je
cltd
incl
add
test
cs
or
mov
popf
out
out
orl
jge
enter
inc
jg
subl
and
jnp
idiv
fildll
fs
sahf
adc
fs
call
bound
dec
or
pop
cmpsl
add
adc
pop
insb
mov
jbe
xchg
sar
addb
jb
mov
stos
es
xchg
cld
adc
test
mov
ljmp
icebp
pushf
dec
push
cmpsb
ret
enter
pop
add
sub
mov
pop
or
ljmp
sahf
popl
sub
movsb
jle
imul
xor
outsb
imull
mov
lcall
mov
jmp
mov
sti
mov
out
stos
xor
xchg
call
pop
sbb
clc
pop
mov
mov
mov
cmpsb
lock
ss
cwtl
sbb
incl
inc
cmp
jp
mov
sbb
fs
orl
inc
decl
test
testl
dec
pusha
pop
xor
sbb
ljmp
ljmp
push
sbb
inc
jnp
jnp
repz
dec
push
lock
jg
push
ja
ljmp
sar
jae
and
dec
jnp,pt
outsb
xchg
arpl
mov
cli
fcomip
jmp
repnz
addr16
cmp
pop
pop
cmp
pop
popf
insb
add
out
xchg
xchg
lahf
cmp
mov
out
jnp
stos
fs
icebp
out
inc
aad
push
outsb
cmpl
jo
cmpb
dec
inc
fstpt
xchg
xchg
gs
push
popa
mov
add
clc
dec
sub
insl
inc
inc
mov
sahf
lock
mov
imul
lret
mov
imul
movsb
inc
jg
push
lods
test
xchg
sbb
jg
lds
fdivrs
lcall
mov
pusha
repz
xor
mov
pop
movsb
pop
mov
fs
stos
pushfw
inc
mov
popa
sub
mov
in
dec
jmp
sbb
add
jmp
inc
sbbb
xchg
test
nop
cmp
ljmp
cli
sti
mov
mov
sub
pop
push
or
fistpll
jle
aam
dec
dec
jb
and
sub
jne
dec
push
sahf
jno
pop
and
test
outsl
push
push
lahf
add
mov
ljmp
dec
dec
or
out
flds
mov
dec
jno
ja
popa
shrl
or
inc
addr16
test
lea
ds
inc
jle
jle
out
mov
aaa
push
sub
and
pushl
fstpl
jecxz
out
and
cmp
loope
cmp
mov
xor
mov
inc
dec
inc
stc
or
test
in
incl
sub
lods
mov
inc
mov
mov
inc
pushl
mov
jecxz
sbb
xchg
call
inc
mov
xorl
pusha
and
ret
push
xor
xchg
adc
jl
jns
sbb
add
sub
data16
insb
xor
dec
sub
out
and
fs
fbstp
jne
in
fldcw
pop
add
push
cmp
mov
incl
lret
arpl
add
fidivs
mov
std
or
dec
or
rcll
push
out
inc
or
mov
mov
xchg
mov
ja
loope
sub
inc
int3
or
sbb
pop
lock
gs
xor
pop
out
pop
loop
mov
sbb
add
sahf
mov
jmp
enter
jp
imul
sbb
cmp
xor
ljmp
pop
stc
jmp
sti
xchg
movsl
movsb
fsts
jbe
mov
or
es
adc
sbb
ljmp
pop
fildll
cmpsb
nop
scas
lret
push
cmpl
mov
insb
and
insb
add
insl
cmp
into
and
add
mov
in
imul
push
mov
xchg
mov
ja
repnz
pop
xor
adc
ljmp
xchg
aad
insb
clc
or
jp
cli
decl
add
inc
daa
xor
or
mov
test
dec
and
push
lea
add
decl
arpl
cmpl
xor
sbb
adc
and
sahf
stos
mov
jne
rorl
mov
mov
popa
adc
ljmp
push
jns
enter
lods
test
scas
lea
push
ljmp
iret
add
cmp
and
sbb
inc
in
push
gs
addr16
cmp
std
out
add
cmp
lds
imul
xor
push
sub
jae
pop
sar
ljmp
out
sub
dec
fdivrl
lock
or
inc
sbb
insl
adc
sub
xchg
loope
jae
test
xor
jo
js
std
ja
loop
cmc
fwait
xchg
sbb
outsb
lock
jmp
ljmp
into
adc
dec
iret
cmp
pop
pop
loopne
fiadds
cld
jg
into
out
mov
cmp
cmp
cmp
mov
imul
mov
push
fs
fbld
cmpsb
enter
jp
iret
xor
jmp
jbe
fwait
data16
popa
mov
jg
hlt
test
jp
and
imul
scas
jg
cmovae
jae
mov
call
xchg
inc
out
pop
and
mov
inc
adc
dec
pop
outsb
push
loopne
pop
shll
push
pop
rcl
stos
call
outsl
inc
ret
mov
inc
push
jle
push
jp
or
inc
adc
jg
loop
insl
xchg
les
lds
jp
cmp
xor
dec
scas
sub
lahf
les
push
outsb
pop
lcall
mov
cwtl
rorb
clc
jl
ss
call
imul
sbb
gs
dec
lods
fiaddl
jae
xchg
mov
cmp
incl
decb
addl
into
pushf
dec
imul
jl
push
lret
movsb
pusha
cli
lcall
dec
push
pop
ret
jo
out
lcall
outsl
dec
push
std
cmpsb
push
push
xor
xor
js
add
jno
loopne
jmp
inc
xchg
pop
mov
jae
mov
daa
test
call
dec
pop
cld
ljmp
push
inc
mov
fsts
push
lods
add
lods
test
sarb
push
inc
gs
jmp
leave
lock
dec
add
jne
pusha
cli
dec
insl
jle
xchg
push
dec
sbb
jmp
push
jp
cltd
gs
inc
inc
ss
jge
cmp
imul
insb
adc
and
jns
adc
sbb
mov
pop
mov
mov
shll
gs
inc
lcall
or
out
call
sbb
mov
sub
ret
shrb
jmp
jno
dec
mov
jb
xchg
and
mov
lods
clc
mov
mov
jnp
dec
leave
dec
xor
jbe
ds
pushl
popf
ds
pop
inc
jmp
dec
out
inc
sbb
sbb
test
xchg
pop
cli
pushl
std
jne
dec
or
out
pop
xchg
jo
call
das
popa
roll
ja
lea
fs
iret
dec
push
mov
add
scas
inc
test
incl
jae
imull
mov
jle
mov
ljmp
add
inc
lea
xchg
mov
clc
cmp
cld
and
mov
dec
insb
imul
arpl
mov
outsl
xchg
orb
jne
xor
sub
cmp
sar
into
pop
insb
cli
sub
xor
cmp
push
xor
dec
mov
mov
in
test
insl
jmp
js
dec
ret
mov
incl
dec
out
xor
adc
in
cmpsb
into
mov
fbstp
push
xor
adc
incl
inc
loopne
pop
dec
icebp
mov
orl
insb
dec
gs
aam
jmp
dec
and
push
call
in
xchg
daa
dec
mov
cld
dec
lock
pop
int
xchg
jg
andb
mov
fs
dec
bound
jbe
pop
out
call
inc
fldcw
mov
stc
sbb
push
sub
adc
decl
call
pop
or
mov
ljmp
inc
and
call
lcall
int
mov
sahf
test
loope
aaa
je
and
and
jb
pop
repnz
incl
out
pop
push
sbb
fildll
jge
add
mov
or
mov
jbe
fisttps
adc
insb
push
fstps
imul
sub
sti
pop
mov
push
xchg
in
adc
adc
jmp
or
iret
xor
add
push
rorb
jecxz
insb
push
sub
and
lret
or
dec
loop
decl
in
xchg
jbe
dec
cmc
das
push
gs
ds
jmp
cltd
lods
lret
inc
pop
ljmp
imul
jne
add
ficoml
aam
mov
das
data16
push
cmc
call
add
out
iret
xchg
fcomip
incl
sahf
rorl
mov
pop
loopne
jo
sub
dec
leave
add
adc
loopne
push
mov
jnp
push
nop
mov
pop
jle
in
dec
dec
in
addr16
and
add
or
xchg
enter
pushl
mov
sub
or
ljmp
jo
dec
xor
add
pop
sub
sbb
pop
pmaxsw
inc
cmp
cs
das
fistl
jge
daa
arpl
aaa
fcompl
icebp
rolb
aas
dec
fidivrl
dec
popf
lahf
jb
leave
sub
daa
test
mov
mov
lods
mov
call
add
call
push
dec
lds
out
cs
out
outsl
clc
cmp
mov
inc
faddl
inc
cli
sbb
pop
fs
xchg
cli
push
mov
decl
into
mov
cmp
cmp
frstor
mov
gs
arpl
pop
in
call
inc
lret
sbb
add
bound
pusha
cmp
fistl
inc
lods
mov
repnz
jno
inc
call
ss
jae
jbe
fwait
dec
ret
test
pop
popa
or
dec
ss
and
cltd
movsb
inc
push
sub
inc
in
xchg
lret
cli
mov
nop
stos
int3
add
mov
in
fdivrp
mov
mov
push
int
sbbl
or
push
fists
jge
nopl
add
jb
jmp
sub
sbb
addr16
inc
inc
jb
mov
shrl
mov
pusha
or
out
xchg
pop
sbb
cmp
sahf
cmpsb
stos
lock
mov
mov
scas
xchg
shlb
lahf
fcomps
popf
ret
dec
dec
inc
cli
cmp
mov
push
dec
cmp
push
lret
shll
mov
lea
decl
rcrl
push
jle
imul
dec
lret
xor
dec
mov
sti
xchg
adc
dec
mov
call
cli
adcb
pop
push
out
sub
jb
adc
mov
push
hlt
add
lcall
fnstsw
mov
inc
outsb
xlat
jg
js
ljmp
cwtl
jb
and
test
lahf
mov
fcoms
jg
shrl
fwait
inc
push
jae
sub
sbb
ja
pop
dec
ret
lcall
push
cmpsb
push
loop
clc
and
adc
int3
ret
pop
incb
push
add
aaa
loop
inc
mov
xchg
push
ret
jle
sbb
sbb
sbb
nop
and
fs
mov
sti
mov
inc
jae
fmull
push
push
insl
clc
sbb
dec
mov
mov
arpl
aad
xchg
pushl
mov
mov
dec
cs
aam
sub
out
add
sar
ds
cli
push
inc
xor
icebp
movsb
xchg
sub
push
inc
lods
imul
outsl
cmp
es
sbb
int
addr16
sbb
out
decl
test
xor
mov
loope
test
incl
in
in
mov
xor
add
sbb
mov
cmp
xchg
in
in
mov
lret
cmp
inc
inc
mov
rorb
test
fiaddl
ret
sub
jp
or
cli
jmp
sub
outsb
stc
add
or
jge
pop
inc
enter
cmovp
int3
lcall
cs
sbb
xor
fldenv
addr16
cmovo
xor
push
inc
add
inc
and
and
cmp
sub
and
sarb
jb
add
pop
mov
sub
cmp
mov
ljmp
cmpsb
sbbb
decl
clc
xor
dec
jae
pop
shll
out
fsubp
mov
call
clc
int
popf
out
and
incl
jnp
sbb
aam
inc
cli
inc
jecxz
inc
lea
fidivs
jg
add
mov
cli
and
test
sub
or
dec
ljmp
mov
inc
pop
pop
lds
pop
insb
popf
dec
inc
jnp
out
inc
pop
insl
inc
push
pop
inc
clc
and
xor
lahf
mov
pop
add
adc
push
jno
add
dec
jne
mov
sbb
call
mov
pushf
add
sub
jecxz
call
popf
cwtl
xchg
out
sub
iret
decl
and
ja
pop
push
sub
out
orl
jg
pop
fstps
mov
dec
aaa
sti
sbb
lock
sti
arpl
and
outsl
fidivrs
jg
pushf
mov
jns
and
mov
fbld
xorl
inc
jl
clc
outsl
clc
dec
adc
popf
sub
pop
mov
hlt
inc
out
adc
lods
cld
and
cmp
mov
jg
andb
sub
addr16
cs
sbb
repnz
cli
jmp
adc
fstl
xchg
adc
xor
add
or
decl
xchg
sbb
xor
xchg
mov
jl
andb
sub
ljmp
cmp
gs
xchg
cmp
mov
fldt
cltd
or
cwtl
xor
mov
cmpsb
jle
lods
rorl
cld
push
dec
sub
js
push
pop
sbb
and
push
push
jno
xchg
data16
lcall
pop
pop
clc
and
sbb
sub
inc
fists
jg
adcl
inc
cmp
pop
xorl
dec
mov
loop
insl
sti
and
push
lret
mov
push
dec
scas
jg
dec
addl
mov
int
push
imul
mov
call
cltd
mov
lcall
dec
and
add
xchg
mov
stos
inc
jge
repz
xchg
jmp
mov
lds
push
xchg
add
dec
lcall
mov
push
cld
mov
jmp
pop
and
movsl
stos
test
mov
imul
xor
je
xchg
icebp
xchg
inc
dec
leave
dec
daa
daa
imul
inc
mov
fwait
xor
jnp
jmp
cmpsl
mov
adc
add
mov
in
or
decl
adcl
dec
mov
cmp
cmp
in
add
decl
movsb
adc
mov
fs
das
test
cmpsb
mov
push
mov
sbbl
sbb
jmp
decl
in
xchg
dec
aad
adc
sti
imul
inc
jno
push
xchg
jl
jl
mov
call
pop
add
jle
add
cmpsb
add
add
out
mov
mov
adc
mov
push
fst
jmp
xor
cmpl
push
movsb
cmp
sub
xchg
shll
dec
pop
mov
add
inc
outsb
jle
add
incl
pop
cmp
jo
xchg
inc
add
xchg
mov
pop
cs
xchg
xor
push
pusha
mov
xor
cmpsl
incl
cmpb
mov
mov
pop
orl
xchg
test
pop
scas
ss
mov
add
mov
inc
outsb
mov
loope
loop
outsl
out
xchg
imul
or
movsl
outsb
insl
cld
jl
fdivrp
shrb
std
jno
out
repnz
pushf
stos
inc
movsl
shlb
jb
or
fidivrs
xchg
leave
test
jmp
hlt
mov
lea
ja
mov
pushl
cs
or
insl
addb
dec
inc
dec
mov
lret
out
je
xchg
out
cli
pop
mov
rcrb
add
test
out
sbb
shll
push
mov
in
or
out
add
mov
sahf
jg
push
pop
ret
push
jo
dec
sbb
push
fs
dec
and
test
mov
incl
std
pusha
int
outsl
repnz
cltd
mov
inc
data16
subb
mov
cwtl
push
xchg
incl
in
lret
push
aad
jns
mov
scas
enter
add
push
call
mov
add
shll
mov
cmpsl
cmp
mov
xor
xchg
pop
lret
out
inc
dec
int
mov
dec
jmp
adc
fs
dec
insb
fdiv
jp
sub
aaa
outsl
pop
adc
negl
cmpsb
sahf
outsl
call
mov
jnp
jb
test
sbb
mov
arpl
jns
lcall
loopne
shlb
mov
add
test
mov
loopne
lret
push
jns
push
clc
pusha
aam
push
sarl
jbe
aam
cmc
outsb
push
adc
insb
jne
int
pusha
inc
pushf
shrb
dec
jmp
outsl
cli
sub
filds
insl
lea
xor
mov
test
out
mov
adc
mov
jne
inc
jno
cmp
mov
fs
je
push
dec
test
push
in
push
out
inc
out
test
pop
xlat
jmp
cli
jmp
jg
jne
fimuls
sti
mov
nop
push
mov
dec
out
jb
dec
xchg
inc
and
stos
lret
out
inc
shrb
cmp
leave
arpl
std
pop
jbe
icebp
pop
pop
call
lret
sahf
jmp
jp
or
fisttps
cmp
dec
cmpsl
fimuls
out
std
xor
cmp
add
mov
fldcw
loop
loope
mov
int3
and
cltd
in
in
ret
das
ljmp
incl
stos
dec
fdivl
pop
les
dec
ljmp
decl
push
jb
hlt
dec
inc
clc
xor
sub
mov
inc
bnd
xor
pop
mov
dec
cmp
call
dec
fldt
das
sub
into
inc
ja
xor
es
mov
sub
or
cltd
stc
fistpll
pop
inc
xlat
push
mov
insb
mov
dec
out
mov
pop
inc
sbb
dec
lahf
lods
push
hlt
div
jae
sti
mov
lcall
adc
push
pop
in
push
out
out
addr16
cmp
dec
notb
data16
addr16
xchg
dec
cld
jecxz
arpl
repz
sbb
lcall
jae
jp
push
popa
shrl
jp
stos
fldl
imul
dec
mov
ljmp
xchg
aad
cmpsb
addr16
pop
push
loope
insl
in
jns
cwtl
movb
out
daa
push
lods
scas
imul
dec
sti
stos
dec
aam
inc
lock
addr16
mov
dec
ret
stc
les
ffree
and
and
ja
add
daa
outsl
test
or
das
sar
pop
inc
icebp
cltd
dec
rcrl
ds
mov
lock
popa
jbe
and
add
pop
idivb
sub
ljmp
rol
pusha
aad
dec
inc
int3
jb
ret
jecxz
pop
jmp
or
jne
xor
dec
pop
iret
add
fbstp
out
ljmp
jne
or
jl
or
cltd
outsl
clc
in
fiadds
loope
or
jo
outsb
ret
cmp
ljmp
mov
out
rcl
je
int3
mov
jecxz
jb
hlt
cld
lcall
mov
xor
cmp
or
int3
xor
sbb
or
cs
sarb
cmp
std
push
dec
inc
adc
test
loope
jmp
insl
out
push
int
gs
das
dec
fists
push
es
push
dec
fistpll
lds
inc
out
sub
out
arpl
mov
je
icebp
ljmp
xor
push
xchg
addr16
push
add
push
iret
pop
into
outsb
push
jle
jg
sub
xchg
xchg
cmp
sbb
jge
cmc
mov
scas
mov
cmp
nop
mov
add
mov
imul
out
jb
ret
std
sbb
dec
lods
inc
or
dec
push
nop
mov
dec
popf
push
inc
stc
jg
out
pop
fucomi
iret
dec
pusha
cmp
push
cltd
clc
push
cltd
out
fdivrs
decl
ss
lea
test
mov
pushl
in
out
dec
inc
imull
push
push
mov
ja
je
aaa
imul
rorl
or
sub
sahf
sbb
sar
inc
leave
pop
and
jg
insl
jecxz
mov
cwtl
push
stc
movsb
dec
aad
jge
les
enter
ljmp
add
inc
jp
out
inc
daa
out
xor
or
insb
ss
icebp
cmp
adc
or
mov
out
into
scas
test
jns
lcall
shl
scas
popf
jecxz
icebp
pop
lock
mov
jecxz
pusha
shrb
mov
out
cli
and
xor
lock
cmp
jmp
sbb
push
rolb
jae
and
or
adc
mov
sbb
mov
inc
lret
add
ss
cs
ljmp
cmc
fnstsw
mov
xor
movsl
icebp
call
push
push
xchg
lods
insl
int
dec
lds
ljmp
push
lret
outsl
std
pusha
push
push
lods
cmpl
jno
cmovno
add
int3
mov
push
pop
xchg
add
fistps
fldenv
js
sti
push
dec
ds
dec
loopne
in
inc
and
dec
inc
sar
out
out
pshufw
call
fiaddl
lds
xor
mov
jb
pop
shll
stc
adc
or
add
cld
jae
xchg
in
outsb
js
mov
mov
std
fcomip
dec
mov
aaa
stos
mov
std
les
std
stc
sub
xchg
int
dec
orb
pop
insb
out
imul
cmpb
ljmp
pushf
inc
sub
mov
lods
cmpsb
jno
imul
ret
push
cwtl
rorl
xchg
in
out
ss
int
cmp
sti
test
std
cmp
rep
roll
fcoms
jno
repz
repz
pusha
push
dec
imul
popa
dec
jb
inc
loop
incl
mov
addr16
inc
out
js
mov
icebp
arpl
ljmp
cmp
out
ss
int3
ss
adc
push
in
sbb
ljmp
jo
push
lea
adc
in
or
ss
icebp
es
or
mov
jg
ret
fnstenv
pop
out
arpl
adc
sub
adc
cmp
pop
test
pushl
out
lods
mov
fildl
pop
mov
das
push
jmp
cmp
pop
jmp
in
dec
jno
out
mov
mov
jl
gs
dec
or
sbb
xor
xchg
sahf
xchg
xor
js
mov
btcl
mov
pushf
xor
sarb
or
stos
pop
movsb
sbb
mov
mov
lock
out
insw
dec
pop
bound
cmp
jbe
push
dec
mov
ljmp
lods
push
mov
dec
push
cld
lcall
jne
mov
dec
push
lea
fwait
ljmp
test
lods
out
cmp
test
adc
in
push
inc
bound
xchg
loop
jo
das
fiaddl
add
popf
cmpsb
inc
sahf
push
hlt
in
push
shrl
cmc
outsb
gs
push
or
imul
daa
aad
stos
ja
adc
frstor
or
jg
xchg
add
lcall
jp
push
sti
shl
mov
push
mov
or
das
cmp
repnz
dec
cltd
xor
jne
add
lcall
pop
sub
lcall
js
mov
ret
out
push
mov
push
push
imul
sbb
xor
cld
icebp
outsb
mov
sbb
mov
ficomps
pop
loope
mov
lret
fmull
out
xlat
cltd
cmp
xchg
ja
daa
and
cli
loope
fwait
incl
insl
stos
outsb
daa
mov
enter
fadds
pushl
dec
dec
mov
mov
enter
cld
cs
pop
addl
pop
cwtl
scas
xchg
mov
mov
mov
test
movsb
mov
outsb
outsl
or
int
cmp
mov
jp
mov
push
test
or
out
sub
jne
jg
sahf
jmp
mov
and
loop
imul
push
ljmp
sub
test
jp
sub
pop
lea
gs
dec
pcmpgtb
mov
scas
mov
lret
pushl
sahf
cmp
xor
xor
or
pop
add
dec
sub
jno
mov
enter
movsl
nop
out
fstpl
mov
inc
sbb
mov
jmp
iret
mov
xchg
clc
out
fcomi
test
jo
test
test
ret
lea
test
mov
inc
addr16
in
xchg
dec
mov
cli
mov
or
pop
sbb
dec
mov
cmpsl
in
jb
mov
call
cli
jmp
out
scas
or
das
cmpsb
out
fwait
add
mov
rcrb
lret
scas
data16
scas
lcall
enter
out
jno
and
inc
jmp
pop
sub
and
pop
leave
scas
push
push
leave
rolb
stos
cmp
nop
mov
int3
test
icebp
jmp
xor
mov
insb
inc
sahf
repz
push
jge
pop
out
pop
les
xchg
testb
pop
or
sar
push
cmpsl
cmp
mov
sbb
and
out
into
cmpsl
dec
push
cmp
mov
test
das
dec
and
mov
fbld
and
jo
lds
dec
push
test
xor
shlb
xchg
cmp
add
lcall
adc
dec
test
pop
enter
sbb
call
adc
nop
pop
cwtl
fs
pop
bound
jb
sbb
sahf
adc
ljmp
mov
mov
inc
incb
iret
push
mov
pop
and
xor
inc
push
insb
mov
pop
add
mov
xchg
and
insb
mov
xor
mov
xchg
mov
cmp
dec
loop
mov
inc
jg
lock
jp
insl
inc
test
movsl
xor
call
mov
mov
pop
orl
les
mov
incl
clc
cmp
xor
pusha
push
clc
cmp
add
popa
fucomip
repnz
cmpsb
incb
inc
pop
mov
popa
fcmovnbe
lods
sahf
loop
lahf
mov
out
fcmovnb
jle
js
push
outsb
cmpsb
dec
clc
ret
sarb
xchg
jnp
int
ret
dec
in
xchg
jb
mov
ds
xor
mov
pushf
mov
das
dec
jmp
and
mov
loopne
and
pop
call
add
outsl
cmp
lcall
push
mov
inc
ret
jns
mov
test
rcr
mov
mov
sahf
mov
xchg
xchg
xchg
lea
adc
jg
add
lahf
aas
std
jb
imul
lods
pop
mov
mov
cli
pop
ds
popa
aam
sbb
insl
dec
int3
test
jg
imul
sub
add
ljmp
mov
push
negb
ret
inc
adc
ljmp
movsb
and
cmp
icebp
xchg
lcall
bound
ljmp
popl
adcl
pop
mov
add
mov
or
xchg
adc
xchg
lcall
jge,pt
movsb
cs
ds
cmp
jl
push
lods
cmp
aaa
xor
inc
inc
mov
sbb
fidivrl
inc
cmpb
push
mov
in
jl
inc
int3
mov
jo
mov
inc
call
jg
cmp
insl
jbe
sbb
dec
sbb
lret
loopne
sahf
push
push
cmp
xchg
pop
mov
bound
cmp
and
adc
call
test
adcl
lods
ds
pushl
push
je
adc
adc
lcall
aas
imul
imul
pop
sub
shlb
into
out
inc
pop
cmc
in
and
aas
xor
jmp
data16
rclb
push
pop
les
inc
lcall
sub
xor
mov
mov
fs
imul
cmp
adc
jmp
sbb
mov
add
shrb
incl
cmp
mov
mov
pop
lock
mov
jle
jnp
mov
rcrl
cmp
push
je
test
aam
sub
pop
fsubl
jg
loop
call
xor
pop
adc
mov
ljmp
add
xchg
sbb
stos
roll
sbb
add
call
fmuls
xor
sbb
push
data16
and
mov
insl
scas
sbb
jg
push
mov
mov
repz
sub
sbb
adc
ds
loopne
push
daa
dec
cltd
aas
inc
scas
sbb
inc
stos
mov
lods
loop
pop
pushl
xchg
cmpsb
push
adc
or
rorb
cwtl
mov
xor
cmpsl
ds
mov
jbe
push
jae
pusha
decb
and
cmp
sub
gs
jp
jge
addb
daa
dec
cmp
insb
mov
fcomip
mov
aad
jno
and
test
fs
jg
test
fs
xor
push
sbb
and
icebp
stos
inc
loope
bound
dec
adc
xor
adc
lods
pop
cmp
xor
mov
pushf
lcall
dec
push
sub
nop
cmp
xor
mov
shrd
xchg
push
aam
arpl
jmp
sub
mov
sub
jl
push
gs
jl
dec
sbb
imul
sahf
test
xorb
mov
in
je
loopne
sub
ss
pop
and
jno
ret
push
adc
ljmp
ret
dec
mov
xor
adc
incl
ds
and
jle
sbb
test
cmp
outsb
out
xor
push
cld
adc
in
ss
scas
subb
push
mov
mov
lds
shlb
stc
jle
or
cmp
lcall
test
cmpsb
or
stos
pop
aaa
mov
or
aaa
sub
xchg
or
pushl
fcomip
adc
fwait
push
mov
ret
push
and
or
xchg
pop
dec
std
sbb
lea
les
jne
ljmp
shr
popw
inc
xor
in
arpl
fidivrs
jnp
loope
mov
jne
filds
lret
cs
lret
pushf
lods
pushf
sub
jbe
ljmp
cli
incl
frstor
mov
push
fmul
sub
push
add
mov
int
mov
mov
lcall
imul
and
jns
hlt
inc
push
out
dec
adc
imul
out
dec
stc
mov
stos
cli
adc
mov
mov
les
mov
cmp
lds
jl
xchg
push
jns
test
cli
push
rolb
les
enter
repz
add
push
ret
in
lcall
outsb
pop
lcall
xor
loope
cmp
add
cmp
int3
add
mov
je
decl
hlt
mov
adc
pop
dec
ds
test
push
lret
iret
or
mov
lret
lret
mov
fiadds
es
sub
lods
push
lods
sub
add
cmp
iret
lcall
data16
insb
in
ret
std
pusha
lret
mov
mov
scas
movsb
lret
xchg
repnz
push
jb
aam
mov
and
sar
jmp
out
cmp
xchg
jnp
or
pop
and
jmp
pop
in
mov
pop
cwtl
add
sbb
fwait
push
sahf
ljmp
mov
lea
scas
jp
adc
push
mov
mov
cld
jmp
inc
mov
inc
jae
and
imul
mov
ss
cmpsb
pushl
lods
enter
into
xchg
bound
mov
or
dec
mov
mov
mov
cmpsl
sub
ds
lea
jg
lock
mov
in
out
lcall
push
lock
mov
mov
mov
loope
add
out
mov
adc
popf
mov
add
mov
rorl
xchg
mov
scas
mov
and
or
in
xchg
lea
gs
inc
pushf
fdivr
cmpsb
call
jge
mov
push
je
out
jnp
nop
jne
js
popf
call
aad
cmp
mov
pop
rorb
icebp
pop
hlt
adc
mov
lock
inc
jnp
fildll
add
cld
adc
rcr
pop
out
ds
rcl
cmpsb
xchg
shlb
call
lret
add
adc
loope
pop
and
lcall
dec
sbb
shrb
mov
in
push
xchg
xchg
mov
lods
or
cs
shlb
add
loopne
xchg
fcmovnb
sub
dec
out
adc
mov
aaa
mov
mov
ljmp
cltd
sbb
mov
add
xor
data16
mov
xchg
add
mov
decl
push
div
xor
faddp
arpl
dec
call
nop
and
lods
mov
popl
add
test
inc
jp
fwait
sbb
sti
cmc
or
in
adc
adc
or
xchg
xorb
out
sub
bound
fists
push
fsubs
lea
push
mov
test
sub
rorl
imul
decl
cli
out
mov
stc
or
pushl
mov
fwait
sahf
iret
stos
cmp
pop
test
jno
inc
int
imul
push
into
inc
cld
jg
out
decb
shll
pop
in
add
xor
aas
mov
call
add
cmp
shr
dec
push
stos
mov
outsl
push
lods
pop
push
gs
stos
icebp
mov
imul
push
xchg
test
cmp
movsl
or
call
push
ss
fs
fwait
add
ja
nop
jle
or
es
push
jmp
out
rcll
out
rolb
pop
add
mov
ljmp
jmp
push
xchg
call
xlat
inc
inc
cmp
xorl
mov
lcall
mov
sbb
dec
or
out
decl
ret
cmp
mov
mov
cltd
into
in
es
lods
mov
jo
icebp
jmp
pop
cli
das
insb
lds
rcll
pop
mov
incl
cltd
xor
sbb
popf
cmp
arpl
loopne
lea
xchg
iret
xchg
je
mov
sahf
ds
pushl
or
clc
and
and
mov
or
notb
pop
dec
jle
ds
jne
xchg
in
xchg
cli
or
scas
jl
ret
loope
add
jg
add
scas
pop
jno
xorb
xchg
xchg
mov
xchg
mov
push
es
lock
test
mov
mov
int3
sub
pop
lcall
rcrl
jbe
fs
push
loop
jae
pop
testb
ret
scas
adc
dec
ljmp
and
ficomps
adc
xchg
or
ljmp
sarb
in
cmc
mov
hlt
stos
jno
hlt
lahf
push
in
pop
imul
pop
pushl
aam
scas
xlat
and
or
gs
lods
jb
decb
sahf
xor
ja
lahf
incl
pop
insl
ret
arpl
popf
mov
out
sbb
jmp
loop
loope
sahf
sti
mov
mov
repnz
imul
ljmp
pushf
mov
test
jb
aas
arpl
push
jg
je
mov
xlat
add
inc
xor
jl
pusha
shrl
cmpsl
out
push
repz
cmpsl
mov
lcall
mov
sbb
aaa
mov
adc
lret
mov
cmp
jecxz
leave
loopne
fdivr
cmpsb
or
mov
sarl
dec
mov
lock
decl
cld
xchg
xor
in
mov
in
inc
xor
addr16
lret
test
aaa
out
xchg
jp
push
mov
xlat
jecxz
ffreep
scas
test
decl
scas
popf
xchg
cltd
ds
push
and
sub
into
sahf
std
fmull
mov
pop
lock
inc
popf
test
loope
push
sarb
or
adc
lock
es
mov
js
xorb
cmp
dec
pop
mov
std
call
inc
mov
mov
xchg
xor
loope
fiadds
lcall
stc
cwtl
call
mov
add
jle
push
scas
mov
and
xor
and
out
clc
mov
cltd
push
xchg
sahf
mov
es
xchg
stos
fcoms
test
push
inc
outsl
cmp
mov
push
mov
fbstp
jne
push
decl
or
sahf
bt
cli
pushl
push
loop
mov
jns
xchg
ds
sbb
push
fbld
ljmp
iret
xchg
cli
adc
mov
push
cld
push
add
xchg
stos
sub
add
mov
cs
pop
fwait
mov
ficoms
subl
scas
fists
cli
call
out
dec
and
gs
push
sub
cmpsl
xchg
mov
call
and
sahf
cmp
dec
push
inc
dec
inc
push
mov
fwait
mov
mov
sbb
ret
scas
decl
xor
cmp
addr16
push
dec
push
jne
inc
lds
addr16
jmp
xor
scas
test
subb
lock
cmp
imul
lcall
mov
mov
lods
arpl
pop
xchg
jle
push
mov
adc
xchg
stc
fwait
test
adc
test
je
clc
jg
add
in
mov
test
mov
mov
adc
cmp
leave
add
mov
dec
mov
adc
ljmp
imulb
mov
pop
in
mov
jns
test
xor
jg
out
loopne
inc
inc
jb
imul
rsm
jge
lds
jmp
mov
ret
or
push
dec
call
bound
decl
ds
js
add
mov
aaa
insl
out
and
aas
and
scas
xchg
fcomip
call
aaa
int
adc
jns
push
or
inc
test
loopne
cmp
dec
cli
call
jge
pop
jns
mov
cmp
xchg
inc
dec
mov
pop
fwait
cltd
mov
dec
out
cltd
insb
dec
push
rclb
mov
popa
out
movsb
xor
fwait
pop
pop
dec
imul
ljmp
loop
jle
mov
push
aad
inc
pop
pusha
xchg
push
jge
jmp
sub
aas
imul
mov
dec
arpl
seto
incl
call
jp
rclb
les
insl
cwtl
fs
pushf
cmp
stos
mov
roll
cmp
push
mov
jno
stos
sbb
push
int3
scas
fildll
cmp
push
test
sbb
mov
jg
int3
dec
sahf
push
sarl
xchg
jle
ljmp
ja
mov
cmpsb
aas
jmp
sbbb
fsubrs
fisubrl
daa
cwtl
inc
sbb
jae
shlb
adc
ljmp
repz
lahf
pop
cs
popf
or
sbb
nop
sbb
push
jb
lock
push
pop
mov
and
or
pop
popl
aam
outsb
sti
adc
cmpsl
pop
lods
cmpsl
dec
add
sub
sub
pusha
nop
clc
ljmp
cmp
outsb
mov
sub
adc
or
jns
adc
xor
out
test
popf
inc
xchg
sar
push
xchg
and
sub
adcl
decl
pop
mov
and
cmp
enter
mov
or
cltd
aaa
ljmp
aas
inc
cwtl
inc
xchg
xchg
mov
lods
and
scas
pop
fwait
mov
xchg
adc
pop
fadds
std
jl
xchg
jecxz
pushf
out
xchg
mov
mov
add
pop
dec
push
outsb
pop
push
orb
mov
adc
lcall
ja
push
dec
inc
mov
mov
cmpsb
mov
cmp
xchg
test
cmp
popa
sti
cmp
jecxz
jg
decb
dec
sub
mov
push
jb
xor
pop
call
daa
popf
cmp
ret
pop
sbb
lods
daa
jns
inc
cmp
test
xchg
and
lods
pushf
sahf
mov
cld
xorl
scas
shrl
call
jmp
mov
and
adc
je
cwtl
loope
fwait
mov
aad
sbb
incl
sub
xor
mov
xor
xor
lret
lods
sbb
xchg
cld
lock
add
and
mov
insl
sbb
sub
jg
addb
mov
adc
xor
jno
sub
xchg
mov
cmpsb
mov
leave
add
hlt
mov
adc
js
test
jnp
mov
cmp
test
add
test
mov
ja
add
sub
xchg
lcall
xor
fsubrl
std
xorl
dec
std
fcomip
out
push
popf
sahf
and
inc
ja
jle
movsl
hlt
test
rorb
ds
scas
sbb
stos
mov
iret
xor
scas
mov
xor
sahf
aaa
pop
pop
mov
movl
inc
jg
add
push
push
dec
adc
imul
or
out
mov
mov
mov
mov
push
mov
mov
push
test
pop
dec
xor
mov
pop
sub
imul
call
pushf
cmp
or
outsl
mov
cmpsb
sbb
jp
mov
call
pushf
sbb
sbb
jns
xor
pop
cmc
lcall
jp
clc
incl
lds
xor
jno
jg
in
inc
and
rcrb
add
dec
into
jb
add
sbb
pop
mov
and
rep
sbb
or
psubq
or
lret
enter
push
lea
decl
lock
ficomps
ds
sub
dec
pop
daa
ja
inc
xor
ja
push
arpl
jbe
lcall
and
lea
fisttpl
stc
ja
testl
jg
in
testl
mov
jno
int
add
inc
call
xchg
push
loope
outsl
push
push
cwtl
fs
lret
mov
fwait
lcall
sahf
jns
jns
add
lret
movsb
inc
ret
and
fwait
decb
push
push
testb
jae
loope
aam
mov
mov
pop
adc
shl
jmp
loop
gs
mov
dec
aaa
pop
inc
outsb
jle
es
add
incl
repnz
arpl
or
add
cwtl
fldcw
xchg
inc
push
dec
dec
je
cmpsl
mov
test
push
or
cs
add
outsl
test
inc
mov
fwait
or
xor
jle
dec
xchg
pop
or
lods
icebp
mov
jno
adc
push
xchg
fimuls
mov
jns
sub
in
dec
jne
xor
or
push
aaa
pop
cmpsb
fisubl
sbb
jo
mov
ds
mov
repnz
les
mov
lock
sbb
pop
xchg
imul
xchg
gs
in
or
ljmp
xor
jo
push
xchg
leave
and
ljmp
and
push
inc
jo
scas
sub
mov
push
mov
jns
sarl
jl
je
xor
out
sbb
or
pop
mov
jmp
cmp
lods
add
jo
xor
xchg
jbe
mov
in
enter
jmp
dec
pop
dec
inc
mov
and
mulb
stos
test
pushl
test
dec
pusha
mov
xor
test
fidivrs
aad
push
scas
enter
add
incl
dec
mul
push
pop
push
iret
ljmp
dec
sub
aas
xchg
out
pusha
imul
push
std
mov
das
inc
aas
and
xchg
mov
push
lret
mov
outsb
mov
orl
outsb
xchg
subl
mov
roll
lcall
aaa
pop
push
push
adc
mov
mov
sub
or
xchg
clc
fwait
mov
loopne
jnp
data16
daa
out
mov
out
lock
scas
xchg
ss
mov
pop
popf
xor
xchg
pop
cmc
xchg
add
xor
test
xor
jmp
mov
mov
sbb
sbb
jmp
int3
dec
je
cmp
in
cmc
pop
add
popa
adc
and
inc
jns
je
xor
lcall
sti
inc
aaa
movsb
sbb
and
das
mov
push
push
mov
jbe
dec
push
lea
movsb
test
ljmp
or
pop
arpl
leave
clc
and
mov
insl
sbb
or
cmp
scas
popf
jbe
fcomps
mov
popa
cmpsb
lods
mov
inc
fidivs
dec
lcall
outsb
int3
adc
push
jl
call
lea
decl
add
and
mov
out
sahf
push
cmp
xchg
ret
dec
fildl
pop
sub
in
outsl
adc
mov
lret
movsl
or
pushl
adc
xchg
pop
cltd
xlat
or
sub
xchg
push
jbe
lahf
or
push
sbb
ja
push
cmovns
sub
dec
mul
les
rcrb
call
push
loopne
cli
cmp
vmread
imul
sahf
add
popa
loope
mov
jl
and
lcall
sub
mov
sub
lea
xchg
adc
test
mov
mov
add
jmp
jne
je
lret
jb
jbe
pusha
cmpsb
sub
sub
inc
loopne
outsl
cmp
and
push
jp
push
call
pop
jecxz
in
pop
lock
ficomps
inc
jg
das
inc
add
and
stos
stc
adc
inc
dec
or
push
outsb
push
movsl
cmp
xor
mov
rorl
orb
cmp
fwait
pop
call
dec
out
add
inc
enter
add
inc
imul
imul
push
cld
fwait
out
out
sub
scas
test
dec
push
gs
dec
decl
and
movl
sbb
adc
mov
mov
call
jno
or
fidivrl
aas
push
sahf
pop
jle
outsb
faddl
inc
shlb
mov
sbb
call
adc
pushf
aad
dec
pop
push
stos
push
sbb
dec
lea
or
add
ja
out
sahf
jecxz
nop
mov
mov
xchg
xchg
cmpsl
hlt
cmp
rcrb
adc
adc
push
insl
cltd
cmpsb
scas
mov
add
scas
push
inc
loopne
mov
xchg
inc
mov
incl
sahf
adc
and
repz
test
and
fmull
test
mov
add
pop
xchg
stc
and
mov
insb
popa
xchg
add
bound
mov
scas
repnz
mov
pop
int3
jne
xchg
mov
inc
clc
ljmp
mov
xor
dec
or
mov
pop
pushl
jns
js
pop
scas
mov
adc
and
pop
push
andb
out
mov
subl
imul
add
xor
jle
xchg
popf
jg
sub
pushl
and
cmp
and
cltd
lods
mov
pop
jl
or
cltd
mov
pop
pop
fs
popf
lahf
cmpsb
lcall
pop
xchg
lods
mov
mov
pop
out
mov
sbb
packssdw
mov
sub
jns
pop
pop
dec
outsl
nop
push
std
push
xchg
fs
push
call
cmp
decl
add
push
lods
pop
xchg
push
inc
jp
ljmp
or
out
mov
roll
dec
pop
outsl
sub
icebp
mov
mov
or
jge
jne
les
outsl
or
jns
int
pop
test
cmpsb
dec
out
pop
fs
dec
leave
mov
les
lods
xor
cld
jg
sub
scas
clc
xchg
add
scas
adc
jle
out
jne,pt
call
popf
adc
jmp
push
dec
jae
imul
inc
inc
ja
push
pop
cmpsb
inc
cld
jmp
mov
dec
dec
push
inc
pop
shrb
mov
call
sbb
mov
gs
jne
cmp
jp
aad
inc
jecxz
lcall
test
pop
push
mov
mov
or
fldl
incb
xchg
pop
arpl
mov
sbbb
push
mov
lcall
fisubrs
cmp
cli
mov
sti
popf
add
loop
addr16
pop
or
push
inc
or
in
ja
xchg
insl
xor
mov
pushl
adc
neg
pusha
push
sub
xchg
mov
sbb
xchg
pushf
cmpsl
xchg
std
incl
movsl
sti
mov
mov
lds
mov
inc
mov
ret
and
xor
mov
repz
clc
sbb
js
lods
push
jge
inc
movb
dec
mov
leave
mov
pop
sbb
mov
in
call
std
scas
xor
push
movb
cmpb
sub
mov
mov
cmp
mov
sbb
hlt
jb
adc
hlt
js
movsl
in
jle
lret
add
decl
pop
cmpsl
fs
lcall
pusha
and
inc
push
lods
out
aam
mov
push
hlt
inc
jb
inc
sub
ja
loopne
jb
lea
push
imul
in
sbb
jbe
inc
add
jp
lods
push
out
sub
js
dec
inc
xchg
fldl
fwait
mov
mov
jae
mov
push
dec
lcall
jae
imul
pop
ret
dec
fdivrs
inc
sarl
or
mov
lret
ja
int
and
out
ret
mov
mov
in
call
push
lcall
push
arpl
imul
jmp
xchg
stc
add
out
fsubs
jl
cmp
mov
jg
add
add
lcall
loope
lahf
cmp
mov
inc
dec
pop
mov
fisttps
arpl
sar
incl
xchg
mov
out
dec
js
xchg
cmp
sbb
and
in
sub
in
test
dec
clc
jg
adc
repnz
jae
in
jecxz
jns
mov
aaa
pop
sbb
aam
ja
in
clc
loopne
jne
sub
and
lods
mov
ds
inc
mov
cmpsb
dec
dec
arpl
dec
popf
cmpsb
movsb
out
adc
xchg
lods
mov
xchg
sub
pop
hlt
pushl
addr16
cmpsl
xchg
mov
stos
mov
mov
inc
cmp
mov
mov
incl
jnp
mov
fwait
mov
xchg
es
xlat
movsb
incl
inc
xchg
iret
mov
mov
fwait
and
add
xchg
les
and
sbbb
pop
cmp
incl
xchg
sbb
sbb
mov
xor
sbb
call
mov
mov
stos
push
fldcw
dec
push
adc
or
pop
mov
jp
cli
adc
push
incl
push
pop
test
mov
add
or
ljmp
mov
out
push
scas
fs
imul
pop
lret
push
sar
add
loopne
insl
dec
xchg
or
push
loop
xchg
ljmp
sbb
or
mov
push
pop
mov
add
ss
fildl
clc
pushl
int
gs
dec
push
push
scas
add
dec
rorb
sub
stos
and
xchg
pop
mov
ret
mov
jo
sub
pop
push
fisttpl
incl
jbe
mov
xorl
test
pop
or
inc
cmpsl
leave
sbbl
pop
and
dec
out
out
lds
push
in
aaa
jl
call
jp
std
outsb
jo
push
scas
rclb
pop
jns
pusha
fidivs
out
push
jns
cli
add
xchg
xor
push
inc
jmp
das
dec
popa
stc
xchg
push
loope
insl
cmpsb
insl
lcall
test
pop
jbe
jmp
clc
jns
jl
dec
or
and
jno
xchg
add
push
ret
inc
fldt
and
jnp
jl
dec
cmp
js
jmp
mov
stos
xchg
xchg
push
idiv
sbb
pushl
pop
out
lds
jne
stc
jbe
inc
in
pop
pop
pop
cmp
enter
inc
xor
data16
inc
stos
pop
stos
scas
stos
xor
cmp
or
or
jmp
jecxz
addr16
movsb
andb
ret
dec
rcll
stos
lcall
lock
icebp
jmp
add
xchg
or
lods
mov
mov
mov
and
out
mov
mov
sbb
mov
ret
cmc
out
add
dec
push
mov
mov
push
dec
adc
ljmp
mov
adc
and
and
dec
jne
fstpl
jne
sbbb
sar
incl
dec
xor
pushf
or
jg
add
mov
xchg
mov
xor
pusha
sbb
sbb
and
inc
fildll
insb
xchg
pop
enter
imul
mov
js
xchg
ds
je
test
out
pop
loopne
into
push
sbb
leave
dec
in
nop
sbb
stc
lock
fldl
sarb
dec
cmp
pop
ds
inc
xor
fbld
into
arpl
cmpsb
cs
imul
pop
mov
mov
mov
jg
decl
lret
fcoms
das
fistpll
daa
scas
xlat
dec
lret
jne
jle
ds
das
clc
call
pop
ja
das
loope
fadds
pusha
push
inc
mov
scas
xor
lods
fwait
mov
sbb
pop
jo
push
cs
ljmp
inc
dec
cli
push
repnz
add
mov
sti
mov
rcll
arpl
bound
push
mov
pop
adc
lock
nop
lcall
out
insb
and
pusha
adc
xor
pushl
cmp
push
push
sbb
push
mov
flds
pop
ja
and
or
jmp
mov
jle
mov
cmc
lcall
sar
mov
loop
leave
inc
push
inc
mov
sub
push
fbld
push
mov
add
mov
jge
fs
mov
ljmp
ljmp
inc
insb
lds
adc
and
and
push
lahf
ljmp
fstpl
addb
je
sbb
or
add
call
das
cli
lcall
push
jb
dec
or
adc
or
mov
sahf
aas
dec
std
lcall
pusha
icebp
outsb
push
clc
xor
jo
std
xchg
and
nop
pop
aas
jns
adc
jmp
jno
sub
outsl
out
sub
fs
imul
jge
or
popf
aaa
jbe
xor
decl
push
sbb
mov
adc
int
add
mov
xchg
push
lret
outsb
repnz
jbe
orb
jb
cmp
data16
cmpl
mov
outsb
ret
mov
inc
push
dec
cld
pushl
sbb
iret
sub
push
in
stos
imul
lcall
push
add
add
lods
outsl
add
stc
push
mov
and
incl
clc
dec
dec
push
mov
dec
mov
in
into
or
lcall
mov
jo
inc
or
cmp
push
ds
pop
inc
loopne
sub
je,pn
or
jae
cmp
push
gs
dec
mov
call
enter
adc
in
frstor
pop
mov
dec
in
dec
daa
xchg
outsb
loopne
clc
add
arpl
movsl
dec
xor
xor
adcl
insl
and
stos
jle
mov
jne
push
jae
icebp
and
insl
or
jle
fildll
dec
sub
loope
and
dec
lcall
rorl
dec
adc
sbb
outsl
imul
arpl
inc
popf
xchg
push
and
mov
dec
jno
cmp
inc
jg
jno
out
dec
lret
lcall
arpl
out
clc
ljmp
pop
push
std
and
dec
imul
clc
pop
pop
aaa
mov
cmp
cmp
pop
subl
cmpb
cmpsb
xchg
cmp
int
xchg
add
icebp
fwait
lea
pop
mov
jl
movsb
and
and
push
inc
in
cld
jmp
and
aad
scas
mov
cmpsb
pop
push
push
into
sbb
push
sarb
addr16
push
adc
ljmp
daa
sbb
mov
mov
lret
les
or
lock
in
addr16
sub
push
xchg
add
ret
ljmp
loopne
cltd
push
xchg
pop
imul
mov
jno
push
imul
cmovle
lock
jl
je
loope
insb
enter
std
test
mov
ss
std
mov
mov
lea
jle
mov
popa
xor
mov
dec
add
ljmp
add
and
add
call
call
mov
push
pushf
int
mov
sbb
and
add
pushf
mov
mov
and
mov
mov
mov
push
out
mov
xor
push
dec
repnz
xorl
mov
cmp
mov
push
icebp
je
xchg
jb
cmc
or
addb
cmpsb
push
addr16
xchg
xor
mov
xchg
pop
scas
or
xorb
push
dec
mov
call
pop
cmpsl
add
lcall
mov
aam
dec
and
clc
jg
out
iret
stos
sub
or
sbb
push
hlt
inc
rcrb
ljmp
and
mov
loop
loopne
pop
addr16
ret
jne
adc
ficoms
jne
lds
push
jno
or
sbb
jmp
push
mov
jno
test
xchg
jge
mov
mov
cs
xor
xor
out
mov
aam
jmp
je
adc
in
mov
loop
imul
sbb
nop
sbb
push
sti
call
add
lods
cmp
dec
arpl
dec
out
test
mov
cmpsb
cmp
add
or
jg
cmp
hlt
test
ja
stos
xchg
icebp
stos
out
add
decl
pop
rorl
add
pop
call
ret
scas
loopne
pop
and
add
fidivrl
mov
iret
rcl
bound
xchg
push
sbb
mov
sub
pushl
mov
in
push
sub
daa
insb
inc
jo
jnp
mov
jg
or
shrb
test
sbb
or
out
je
lcall
std
xor
xor
cmpsb
adc
dec
push
scas
sbb
adc
sar
ljmp
add
and
dec
stos
adc
pop
push
repnz
aad
mov
insb
pop
push
fstl
sub
mov
loope
jno
and
test
pushl
adc
dec
inc
orl
sahf
xor
rolb
mov
lds
or
mov
mov
sub
mov
adc
pop
inc
and
mov
stc
and
adc
into
xor
cmp
ljmp
xchg
arpl
inc
sbb
adc
sub
scas
test
or
mov
mov
shll
mov
mov
mov
pop
mov
jns
mov
lods
add
scas
sbb
stos
sarb
push
gs
jg
hlt
cmp
pop
jne
xchg
xchg
gs
out
je
cwtl
mov
incl
clc
jns
push
orb
imul
dec
shll
call
xorl
scas
add
andl
jo
stos
mov
inc
inc
mov
jno
mov
out
mov
lcall
in
ds
push
pop
jmp
cmc
jle
pop
pop
movsb
xor
or
push
insb
adc
mov
adc
and
inc
scas
inc
loopne
or
fdivl
xchg
xchg
pop
fidivrs
lcall
stc
sbb
jl
gs
jb
movsb
imul
jmp
cmpsb
rcll
data16
xchg
pop
dec
sub
mov
jns
add
outsb
xorb
xchg
lcall
lods
pushl
loopne
add
cmp
cmp
and
jge
lret
push
push
xchg
out
push
push
pop
xor
fucomi
cmp
mov
test
mov
ficoms
loopne
icebp
cmp
test
pop
sbb
xchg
jns
aad
lret
jp
ljmp
ljmp
sbb
lret
dec
push
inc
push
cmpsl
cmpl
jmp
scas
out
jbe
decl
add
pop
out
push
push
hlt
jo
push
je
jbe
pushf
mov
mov
jmp
sub
pop
sbb
cmpb
pushl
js
icebp
xchg
arpl
add
dec
outsl
arpl
pop
inc
in
pop
leave
cmpsb
aas
imul
sbb
push
jp
mov
push
mov
mov
scas
imul
or
ljmp
call
popf
js
lea
out
lods
dec
adc
xchg
xchg
dec
push
mov
jne
clc
dec
cli
jb
push
and
lods
xor
lcall
pop
aad
sbb
mov
xor
adc
test
fwait
insb
je
and
cld
call
and
lea
imul
pop
jnp
adc
sbb
cmpsl
push
ret
int
push
in
incl
ds
mov
add
mov
mov
cld
ljmp
pop
dec
dec
and
arpl
mov
jle
dec
push
sub
fstpt
cs
test
mov
idivb
iret
test
sub
adc
cmp
mov
shlb
jb
mov
decl
mov
push
xor
cmpsl
lea
inc
mov
cmp
xchg
inc
pop
and
imul
loope
imul
jmp
insb
and
mov
outsb
mov
scas
xchg
add
mov
push
aaa
xor
rcll
std
cld
call
pop
add
add
sbb
xor
lock
das
lods
push
test
aas
call
fdivl
push
jo
fcompl
inc
les
lret
dec
push
dec
les
inc
enter
lcall
imul
push
data16
xor
mov
pop
fildl
leave
cmp
shll
cld
das
movsb
xor
xorl
jp
xorb
outsl
mull
incl
dec
or
mov
and
lcall
sub
sub
mov
jbe
pushl
or
call
sub
or
inc
cwtl
mov
jecxz
xchg
decb
call
push
jge
or
es
popf
outsl
mov
mov
mov
fdivs
pop
inc
iret
push
or
mov
pop
fnsave
sub
add
pop
cli
and
cwtl
dec
mov
dec
dec
adc
xor
fiaddl
jns
aaa
inc
pushl
fs
mov
scas
out
out
and
pop
jmp
adc
es
ficomps
mov
mov
dec
and
dec
cs
lret
adc
ss
jmp
call
cmp
inc
sbb
sahf
adc
mov
out
lock
js
cltd
pop
rorb
das
mov
or
cmp
rcrl
ljmp
outsb
popa
xchg
jl
or
xchg
leave
gs
subb
lock
pop
sbb
in
cwtl
xor
lahf
push
out
mov
lcall
enter
andl
inc
sub
inc
mov
ret
jmp
ret
xchg
xor
sub
push
mov
insl
rcrl
xchg
mov
xor
add
adc
cltd
push
push
cmpsl
lahf
stos
decl
cli
mov
xchg
or
lock
incl
sub
cs
fistl
xor
int
lahf
call
mov
in
fmuls
scas
lods
xor
aas
js
adc
ret
outsb
ds
xchg
cmp
pusha
dec
inc
sbb
inc
das
xor
gs
arpl
pop
roll
mov
push
mov
fisubrl
mov
es
stos
mov
add
mov
jmp
ss
repz
js
lahf
jns
jp
cltd
jns
xchg
roll
nop
or
int
lcall
adc
pop
inc
push
adc
or
and
push
pushl
gs
mov
stos
popf
pop
enter
or
adc
adc
decl
add
cmp
add
jl
sub
dec
sbb
cs
push
add
bound
adc
in
jle
xor
mov
jg
pop
decb
cs
or
test
leave
decl
xchg
cld
sahf
punpckhwd
daa
jg
mov
es
jb
and
nop
aaa
and
add
dec
out
in
mov
fwait
cmp
and
scas
lcall
mov
repz
ret
bound
mov
stos
inc
sarb
ja
decl
sbb
adc
xor
push
dec
lcall
or
sbb
push
lcall
xor
fidivrl
ret
mov
imul
xor
mov
popf
imul
push
shlb
mov
fistps
jb
popa
fs
push
inc
jbe
xchg
nop
sbb
popa
mov
aas
cld
sbb
cmpsb
repz
mov
mov
mov
sbb
ljmp
push
out
cwtl
es
pop
cld
ljmp
mov
fbstp
out
movsl
jle
outsw
push
sub
insb
dec
xchg
add
stos
imul
aam
jg
add
mov
pop
fiadds
add
sub
fcoms
mov
adc
xchg
pop
decl
test
jg
or
mov
test
in
dec
insb
pusha
gs
test
mov
out
add
les
lcall
lcall
xchg
inc
aad
aaa
arpl
insl
pop
inc
and
es
push
pusha
mov
xor
adc
je
pop
ss
and
xor
pop
push
or
sbb
add
add
or
sub
cs
sub
ds
push
sub
sbb
pop
sbb
add
stos
add
xor
adc
iret
in
mov
adc
push
or
cld
and
lahf
sub
outsb
in
sbb
push
cltd
adc
call
dec
jo
insb
test
mov
pop
mov
idivl
lea
dec
stos
lret
xchg
jg
mov
xchg
fstps
clc
inc
into
mov
fs
dec
cmp
inc
xchg
cmp
cmp
adc
dec
clc
cmp
adc
dec
dec
and
push
les
ljmp
ret
or
incb
add
jecxz
addl
rorb
mov
cmpsb
lods
rorb
pop
mov
sahf
cmpsb
loop
and
sbb
sbb
fstpl
filds
and
adc
popa
in
jb
push
jg
pop
pop
sbb
mov
xchg
inc
mov
mov
ja
pushl
dec
out
xchg
fnstsw
into
cmp
mov
flds
jg
decl
jae
popfw
push
jnp,pt
pop
mov
lretw
adc
sub
mov
out
sar
push
sbb
in
xchg
out
mov
sub
fcomip
jge
add
fsubrl
enter
xchg
mov
gs
xor
or
ljmp
popa
sbb
test
pop
xchg
adc
sar
lcall
das
daa
js
sub
fisttpll
xor
push
push
xchg
jg
es
jbe
cmp
cmp
data16
das
push
out
js
adc
lret
and
cltd
and
ljmp
ds
pop
mov
adc
popa
fwait
das
mov
add
sub
jb
in
jae
or
fidivrs
xchg
pop
push
mov
pop
sbb
cmp
jmp
cmp
sub
jo
mov
and
sub
daa
or
pop
adc
xchg
ret
cmp
sbb
mov
fsubrl
cmc
incl
cld
mov
and
mov
xor
mov
mov
fbstp
sbb
rclb
cmp
scas
enter
ds
add
pushl
and
cwtl
sub
fcompl
add
pop
lock
jle
pop
cltd
jmp
pop
add
dec
scas
cld
decl
movsl
and
nop
lock
push
mov
lock
or
mov
pop
cmpsl
adc
decb
pop
add
mov
and
xchg
lret
cmp
adc
mov
call
mov
dec
xchg
ret
and
decl
push
push
sbb
cmp
sbb
push
and
xor
add
jmp
mov
adc
adc
sub
add
or
jg
pusha
ljmp
mov
adc
add
dec
dec
and
hlt
daa
sub
nop
sbb
nop
or
mov
jae
jmp
and
sub
mov
lret
sub
pop
dec
dec
dec
mov
lcall
jbe
sub
mov
add
stos
fdivl
outsl
push
xor
pop
sbb
mov
sbb
jmp
call
and
ljmp
sahf
int3
sbb
inc
test
nopl
add
aaa
std
mov
xor
insb
test
aas
dec
mov
jg
out
lcall
jbe
lods
aad
push
xor
sahf
rorl
jg
lcall
push
mov
xchg
xor
leave
stos
and
xchg
xor
sbb
pushl
popf
rcrb
mov
xor
pop
inc
je
xchg
ret
sub
aas
sqrtps
lcall
or
js
cld
sub
push
or
ljmp
shrl
or
stos
sub
leave
repz
fdivp
mov
push
xchg
add
cwtl
mov
push
push
ret
or
jecxz
jae
cmp
jb
adc
jg
aas
movsl
adc
push
inc
inc
pushf
out
rcrl
xor
popl
movsl
adc
or
rolb
lret
cmp
cmp
js
adc
out
cmp
leave
jmp
pop
adc
push
mov
ja
lcall
cmp
push
dec
popf
out
sbb
es
jg
mov
xor
push
pop
push
arpl
lock
and
adc
add
mov
fisttps
loope
icebp
leave
into
adc
push
sub
ret
mov
shlb
outsb
decl
hlt
mov
leave
outsb
adc
jge
ss
orl
or
or
ljmp
sbb
les
add
inc
outsl
inc
pushf
ret
aaa
std
outsl
adc
sub
dec
xchg
adc
mov
pop
mov
jae
mov
loop
mov
push
push
out
lods
aaa
xlat
add
jo
scas
incl
sbb
fcmove
arpl
cmpsb
cld
call
scas
cmp
mov
clc
aas
leave
movsl
jle
out
hlt
lcall
or
xor
test
test
xor
pop
mov
push
fiadds
dec
scas
xchg
mov
mov
out
ja
clc
jg
je
cmc
xlat
mov
xchg
shr
sbb
icebp
call
sti
rcr
sbb
mov
bound
jge
mov
ret
ficomps
pop
lea
lcall
sahf
sub
cwtl
cmpsb
mov
inc
mov
jo
sbb
decl
push
mov
stos
add
pushl
xrelease
dec
ljmp
or
jg
outsb
adc
mov
xchg
sbb
popf
pusha
hlt
popf
mov
insb
lock
filds
pop
sub
lcall
movsl
xchg
and
mov
ljmp
decl
xchg
cmpsb
cltd
out
lcall
add
mov
scas
xchg
sbb
scas
mov
loop
adc
fwait
sub
test
mov
scas
out
stc
fwait
sar
aaa
push
or
mov
xchg
xlat
cs
shrb
mov
sti
push
mov
es
or
repz
fwait
cmpl
dec
out
xlat
add
push
clc
loop
add
outsb
test
xchg
lock
loope
add
nop
xor
test
mov
adc
mov
push
loopne
ds
ret
pushl
bound
ds
jle
add
lcall
mov
ljmp
pop
int
and
sbb
sbb
jns,pn
rorl
nop
push
dec
sbb
or
xchg
outsb
or
test
adc
jg
lock
cmp
push
rcrl
dec
mov
mov
lcall
aam
jle
push
popf
cld
mov
xchg
icebp
test
jae
add
dec
out
clc
lcall
push
xor
inc
int3
pop
jge
adc
das
pop
test
adc
into
outsb
lret
push
fdivr
outsl
clc
pushl
inc
inc
xorl
insl
xor
jecxz
or
das
push
imul
gs
xor
scas
call
push
ja
imul
inc
ficomps
lcall
and
xor
dec
mov
stc
and
ljmp
pop
insl
and
add
mov
outsl
mov
dec
and
and
mov
and
xor
mov
out
pop
test
popf
add
jae
in
daa
inc
aas
and
mov
filds
std
cmp
and
push
lods
adc
adc
pop
pop
mov
push
or
es
loope
dec
cmovs
xor
mov
shrl
mov
mov
leave
mov
mov
stos
mov
in
stos
cmpsl
sbb
out
mov
push
mov
cmp
push
dec
adc
insb
adc
add
pop
popa
jo
fisttps
add
jg
call
sbb
pushl
jg
mov
or
fs
sub
sub
ljmp
pop
mov
xor
pop
jl
sbb
icebp
sahf
mov
fcomp
sub
lcall
out
clc
mov
cmp
pusha
push
pop
call
push
in
push
jno
xchg
mov
test
decl
mov
imul
stc
push
in
loope
push
xor
ja
gs
or
fists
cld
lock
push
push
xorb
sbb
dec
out
xchg
inc
lret
mov
cwtl
sub
mov
test
push
rorb
cld
jno
inc
std
lcall
shrl
xorl
sbb
loopne
out
xchg
add
push
sub
push
dec
in
sbb
lcall
or
adc
mov
scas
out
xor
cld
out
or
and
or
dec
ds
cmp
cs
mov
icebp
pushl
popf
fwait
lret
out
mov
les
inc
into
xchg
cmp
arpl
js
loopne
inc
jmp
aaa
inc
pop
cmpsb
aam
scas
ljmp
lds
cmp
and
ljmp
incl
arpl
scas
hlt
clc
xchg
mov
enter
dec
and
add
sti
aaa
jbe
jge
hlt
pop
inc
cs
dec
cmp
roll
decl
jge
mov
or
sub
cmp
inc
pop
mov
and
mov
das
adc
xor
nop
cli
cmpsb
cmp
stc
mov
add
cli
fdivp
call
icebp
daa
xchg
dec
or
inc
jbe
inc
xor
cli
pop
mov
outsl
xor
mov
inc
imul
and
loop
out
clc
clc
pushl
add
sub
dec
mov
lods
scas
xchg
xor
das
lods
dec
xchg
clc
filds
xor
mov
ret
jle
or
inc
fdivrp
ret
aaa
xchg
xor
test
and
fcomip
sub
mov
cs
hlt
or
aam
inc
add
add
pushl
push
and
and
ds
sub
adc
jbe
sahf
mov
adc
xor
decl
js
cmp
std
and
push
ret
fadds
ja
xchg
clc
lcall
push
pop
adc
pop
lcall
dec
add
loop
fidivs
jge
sbb
std
xor
push
inc
xor
bound
push
or
ljmp
ss
push
xor
nop
out
push
aaa
and
cmp
push
mov
dec
jg
incl
mov
inc
mov
sub
sbb
hlt
and
aas
inc
cmp
int3
aas
xor
and
js
jg
push
pop
into
adc
sbb
insl
gs
add
push
sub
xor
adc
sub
and
incl
add
and
add
leave
adc
push
jl
pop
add
xor
call
leave
scas
xor
pop
push
cmpsb
cmpps
dec
call
aas
push
out
outsb
mov
adc
adc
add
and
push
jmp
jno
jl
hlt
sub
sub
es
mov
push
xor
push
int3
cmpsb
jo
mov
call
inc
push
mov
jecxz
add
sahf
xchg
xor
jmp
mov
movsb
or
jb
jns
pop
lds
lea
inc
in
stos
jmp
call
jo
cwtl
jl
cmp
das
es
adc
int3
insl
iret
jge
cmpsl
push
lcall
rcrl
dec
inc
mov
cmc
sarb
jecxz
arpl
jg
loop
dec
insb
mov
pop
fidivrl
add
loope
sub
decl
cltd
repz
dec
pop
scas
cs
test
test
sarb
hlt
adc
popf
xor
xchg
jnp
decl
adc
push
sbbl
xor
jecxz
jmp
push
sbb
cs
test
mov
fcomip
pop
or
or
mov
out
setae
int3
sbb
mov
incl
ds
lcall
lea
fcomps
jo
bound
cmp
incl
inc
stos
cs
and
les
xchg
repz
mov
sbb
in
cmp
call
lds
fnsave
data16
jbe
push
out
add
pop
cmp
jns
add
push
jne
cmp
aas
mov
adc
adc
pop
jmp
fs
inc
outsl
dec
push
scas
es
dec
scas
or
out
pop
inc
shl
fidivs
adc
jg
decl
sbb
stc
xor
in
mov
loopne
mov
out
fwait
movsl
mov
insb
pushf
dec
mov
mov
lcall
jle
dec
push
scas
insb
enter
push
jne
lods
jl
sbb
les
in
push
mov
ret
sub
or
jo
rolb
add
add
incl
je
inc
dec
gs
and
in
scas
addr16
pop
jne
push
int
dec
lock
dec
inc
outsb
xchg
scas
imul
cmpb
pushl
sbbb
inc
jl
push
imul
nop
mov
lahf
push
inc
lcall
pop
adcb
xor
imul
ss
sub
movd
inc
call
push
ja
push
dec
push
push
adc
dec
sbb
call
in
mov
rcll
dec
sti
sbb
xchg
xor
xchg
ffree
mov
push
sbb
or
sbb
push
inc
ljmp
sbb
jp
dec
out
xchg
lods
inc
in
jmp
push
jp
push
lods
xor
sbb
adc
int3
ss
pop
or
ds
outsl
jno
fwait
sub
ds
loopne
sub
je
mov
int
mov
cli
cs
mov
push
lcall
mov
in
out
iret
adc
and
lcall
sti
xor
fmull
xor
cs
cmp
pushl
ds
adc
in
sub
out
push
mov
push
test
hlt
mov
xchg
lcall
or
jmp
sub
push
ljmp
dec
je
and
and
out
pop
js
xchg
xor
fsubl
cs
or
cs
insb
push
jno
add
xchg
stos
mov
pop
cli
outsb
clc
out
rcl
jns
adc
stos
roll
sbb
ffreep
lcall
and
rcll
cli
lcall
push
xchg
add
adc
gs
je
jmp
mulb
into
mov
mov
loop
ds
inc
loope
inc
scas
dec
stos
sbb
adc
aad
jle
mov
cltd
cmc
clc
mov
lds
xchg
cmp
sub
jg
jo
call
call
jg
loop
xlat
mov
lock
xchg
pop
adc
push
outsb
icebp
adc
jle
pushl
jle
mov
adc
xchg
xchg
out
ss
sbb
pop
aad
adc
pop
sbb
jg
xchg
clc
lcall
sbb
mov
pop
add
dec
ret
ds
test
pushf
ds
jp
cmc
mov
jecxz
clc
sbb
sahf
add
dec
pop
xchg
out
xchg
test
mov
call
sbb
push
xchg
pop
inc
orb
jmp
cmpsl
adc
push
rorb
sub
dec
jo
cmpsb
fdivrp
push
jg
int3
pop
push
movsl
ja
shll
jle
scas
lcall
sub
loopne
lahf
mov
decb
dec
je
push
jbe
sbb
decl
mov
ds
mov
outsl
clc
mov
dec
out
pop
pusha
shrl
push
call
inc
cmp
mov
pop
call
cmpsb
push
outsb
cmp
add
movsl
mov
dec
outsb
dec
push
mov
jge
popa
jp
outsb
addr16
xchg
les
ds
test
sbb
fstpt
mov
jl
xlat
add
nop
in
mov
shrb
lods
iret
adc
xor
in
fs
pop
and
dec
push
out
shll
data16
call
insb
push
incl
in
pop
and
sbb
call
movb
jb
in
dec
inc
es
jg
push
pop
mov
loopne
imul
js
cli
xor
and
hlt
fisttps
mov
add
dec
cltd
shlb
push
jle
movsl
inc
lret
pop
dec
jle
test
out
mov
ljmp
cmpb
mov
popl
lcall
lea
clc
addr16
add
sub
mov
cltd
mov
pop
xor
lock
xor
addr16
out
push
stos
cmp
pop
loopne
test
loopne
sbb
leave
lock
push
decl
lock
outsb
jno
mov
clc
aam
cwtl
mov
cmp
fdivp
movsl
xchg
xchg
sub
mov
mov
or
ljmp
mov
daa
xlat
ret
nop
mov
xchg
push
adc
dec
sub
insl
call
icebp
add
xchg
inc
cmc
ljmp
sbbl
add
shlb
scas
sahf
inc
pushf
xchg
ja
scas
add
cmp
jmp
dec
loope
dec
xchg
cltd
mov
leave
jo
inc
sahf
movsb
pop
lahf
shrl
fs
hlt
decl
pop
mov
in
mov
hlt
ljmp
sar
gs
lcall
cmpsl
orb
mov
sub
push
into
mov
adc
ljmp
dec
call
lcall
int
lock
push
orb
ja
jnp
and
cli
mov
inc
mov
bound
lcall
xchg
xor
movsb
mov
daa
loope
bound
je
mov
int
js
ljmp
rolb
insb
xlat
sbb
inc
sbb
cmp
pop
pushf
pop
xor
loopne
xchg
mov
lds
cmp
add
test
sub
cmpxchg
pop
lock
jae
pusha
and
mov
sub
pop
jbe
sbb
push
mov
dec
aam
js
inc
jl
push
cmpsb
mov
into
jmp
fwait
push
sar
call
iret
sub
ret
jg
mov
xchg
ds
jge
cs
ljmp
loope
xchg
test
lods
dec
cmpsb
fsubp
sbb
loope
mov
fwait
sbb
sub
xchg
rolb
js
dec
outsb
pop
out
mov
jg
jl
inc
jae
push
pushl
insl
and
cmp
enter
pop
aas
test
cltd
adc
addr16
pop
addr16
dec
fcomip
inc
or
mov
repnz
test
les
jmp
fs
xchg
sti
cs
mov
pusha
jne
pop
jno
mov
push
cld
lcall
mov
and
sbb
cmp
and
imul
mov
fnstsw
fsubs
and
add
dec
xor
or
dec
scas
arpl
mov
mov
jg
scas
push
mov
out
cmp
pop
mov
inc
jp
sub
inc
sahf
out
mov
push
mov
jg
scas
xor
out
xchg
cwtl
stos
inc
dec
imul
ja
clc
out
push
flds
push
xor
fisttpl
cmp
xchg
les
movsl
sar
imul
mov
lock
mov
push
mov
push
push
xor
movsl
pop
fstl
rcll
incl
loopne
imul
or
ret
dec
pop
fstpl
out
fsubrl
ret
sbbb
jle
pop
popf
popa
les
sub
fidivrs
clc
and
cmpsl
xchg
ljmp
outsb
daa
adcb
mov
mov
mov
scas
insl
les
push
repnz
jns
lods
mov
pushl
xchg
push
pop
imul
adc
pushf
cmp
ret
push
sbb
call
stos
scas
aas
adc
imul
add
push
scas
jmp
mov
pop
push
jmp
pop
adc
jns
adc
ficoml
gs
jmp
pop
xor
adc
outsb
mov
lods
cwtl
out
jmp
cli
sbb
imul
push
mov
stos
push
push
std
outsb
pop
adc
push
aam
testb
jmp
push
xor
mov
add
jae
xchg
mov
jmp
push
shlb
pop
scas
fnstsw
lods
xchg
jge
mov
ds
out
int
loopne
add
pop
popa
inc
push
cs
mov
cmp
ljmp
sahf
data16
xchg
xor
cltd
mov
dec
test
enter
sub
xchg
mov
mov
xor
add
lcall
roll
pop
daa
pusha
pop
lret
xor
outsb
fistpl
pop
push
cltd
adc
xchg
jg
xor
popa
leave
call
cmp
mov
add
iret
es
xchg
mov
scas
pop
out
mov
incl
adc
scas
outsl
pop
repz
dec
sti
aaa
add
xchg
inc
arpl
jmp
xor
ds
cmp
inc
mov
fwait
clc
and
out
lahf
outsb
cwtl
je
mov
push
pop
lock
aam
xchg
scas
cli
add
push
int
imul
inc
inc
pop
out
xor
je
pop
push
andb
inc
lcall
pop
push
das
lds
mov
add
dec
pop
cmp
mov
cmp
and
ja
clc
mov
jle
dec
jbe
cmpsb
mov
push
inc
jecxz
adc
jle
out
push
inc
dec
into
leave
inc
dec
push
daa
mov
scas
insb
decb
dec
sbb
fs
into
xchg
jle
pop
scas
jo
insb
push
cli
ljmp
ss
roll
mov
sbb
rep
mov
dec
movsl
pusha
add
cld
in
incl
test
js
inc
gs
ss
adc
mov
mov
mov
fs
scas
xchg
add
icebp
call
loopne
add
ds
enter
push
push
or
adc
mov
bound
push
arpl
fistps
cmp
daa
pop
bound
jns
mov
jne
fsubp
pushf
mov
inc
sub
decl
lock
mov
movsb
sbb
cmpsb
nop
cli
movsl
outsb
fiadds
inc
jl
jg
adc
push
mov
add
sbb
mov
mov
out
lcall
xor
push
mov
nop
add
jo
jle
and
push
xor
pusha
loope
icebp
pop
mov
js
add
push
push
push
ds
lcall
and
jno
jno
lcall
push
jb
sub
sbb
lcall
imul
sbb
dec
aad
sahf
or
xor
inc
xor
xor
sahf
hlt
xchg
insl
loope
decl
dec
add
inc
stos
mov
pushf
pop
dec
ret
jnp
lahf
rcll
mov
andb
int3
cmc
decl
dec
push
xor
pop
cs
in
pop
or
dec
scas
cmp
es
sahf
out
faddl
dec
in
push
jge
das
loope
adc
adc
sub
push
add
aas
push
mov
scas
or
int3
lcall
jb
loopne
aam
loope
fistpl
out
dec
mov
imul
push
push
in
pop
jns
aad
xchg
mov
mov
jo
mov
cmp
test
jg
jmp
jns
outsb
jo
push
lret
ret
fstpt
push
ds
add
das
decl
dec
loopne
dec
inc
sbb
call
xchg
adc
test
xchg
ret
jecxz
jmp
js
xor
jb
gs
add
mov
push
cmp
cltd
cmpsl
dec
jno
addl
mov
cmp
ret
addl
pop
pop
mov
ficomps
add
mov
push
and
and
es
cmpsl
std
mov
add
out
mov
xchg
or
push
rorl
push
test
add
ss
ret
sub
je
xorb
push
sti
data16
scas
xor
xor
lds
push
fisttpl
ljmp
or
scas
cmp
mov
test
imul
in
cmp
test
aaa
pushl
mov
mov
data16
loope
add
push
decl
cltd
lret
dec
mov
jl
cmp
sbb
cmc
cmpsb
xchg
xchg
xchg
push
and
cld
call
jbe
lea
push
cld
sub
rorl
decl
test
bound
aam
sbb
out
cs
dec
aad
adc
mov
movsl
and
jge
adc
sbb
dec
add
mov
and
adc
xchg
mov
fstpl
incl
out
mov
fstl
loope
ljmp
inc
dec
mov
icebp
pop
cmpb
pop
push
cmpsb
inc
test
lcall
arpl
lea
adc
aaa
scas
adc
lcall
sarb
pop
pop
adc
push
dec
js
sub
sbb
ret
lds
inc
cld
jmp
cltd
ja
and
inc
iret
or
lods
pop
loope
mov
or
mov
dec
jle
scas
push
loope
xor
and
ret
or
mov
nop
insw
dec
add
push
jle
ljmp
pushl
loope
pop
inc
inc
mov
in
aam
test
sub
push
sarb
jns
and
repnz
jmp
mov
xchg
daa
fadds
mov
ja
push
pop
fwait
pop
mov
cli
adc
dec
lods
and
test
mov
cli
nop
xchg
mov
sub
or
lret
rol
jmp
or
out
xchg
mov
mov
xchg
lock
das
and
fcoml
pop
dec
loop
dec
push
bswap
sub
cmp
mov
and
ret
dec
mov
add
dec
cmp
mov
arpl
xchg
fwait
adc
loopne
ja
aam
aad
stos
push
dec
lea
adc
adc
ljmp
or
sbb
xor
mov
test
push
or
lcall
out
or
xor
and
out
ss
cs
movb
push
jne
inc
call
mov
and
fcmovnbe
add
gs
mov
mov
sbb
incl
push
out
mov
pop
nop
push
out
add
mov
dec
xor
pushf
dec
in
cmp
outsl
stc
push
inc
lahf
xchg
push
sbb
mov
jle
jl
lcall
insb
cld
adc
fsubs
sahf
push
pop
enter
ljmp
add
xor
aas
repnz
pusha
sahf
jno
dec
jb
mov
dec
ret
outsb
ja
fstpl
mov
xlat
add
push
xchg
pop
add
jmp
sbb
cmp
lods
xor
inc
js
loope
or
js
jle
inc
insb
jae
fisttps
dec
scas
add
jbe,pt
pop
test
rolb
mov
adc
add
push
cmp
jne
sub
jmp
ljmp
push
cmp
mov
jg
cs
pop
add
lcall
mov
ja
jno
call
scas
inc
cs
add
pop
stc
and
dec
xchg
pushf
enter
incl
xor
inc
mov
mov
push
jbe
mov
cltd
xor
adc
cld
incl
les
xchg
add
ljmp
mov
mov
stos
cltd
xchg
mov
cmp
jecxz
and
sahf
add
stos
imul
jbe
inc
dec
imul
jecxz
fs
dec
jo
jge
mov
cmp
pop
and
jno
and
mov
pop
dec
pop
pop
adc
dec
adcl
push
stc
lock
inc
std
mov
fwait
inc
andb
push
pop
and
jl
cmc
fisttps
inc
adc
les
pop
incl
pushl
xor
fcoms
pop
loop
push
sarl
mov
mov
pop
mov
cli
js
mov
dec
mov
xchg
sahf
mov
inc
jg
mov
movsl
or
and
fisttpl
mov
jmp
jge
pop
ljmp
dec
adc
call
or
jp
xchg
aas
js
lea
jp
inc
test
jae
out
and
bound
mov
cmp
imul
les
js
outsl
mov
push
mov
jb
mov
cmpsl
nop
imul
cmp
fs
sub
lock
mov
push
pop
add
mov
jg
sub
jae
icebp
jnp
movsl
xor
incl
ja
push
jns
cmpsl
int
adc
sahf
add
ds
out
pop
dec
out
stc
mov
int
ja
orb
and
insb
xchg
sar
call
in
push
cli
dec
out
mov
fsts
adc
pop
data16
push
cmpsl
cltd
mov
add
xchg
push
repz
in
jl
pop
and
jle
cmp
in
add
inc
shll
push
test
jge
sbb
test
mov
addr16
imull
fcomip
jg
cmp
sub
dec
pop
mov
mov
out
xchg
shlw
in
sbb
cli
in
imul
push
dec
test
std
incl
addl
outsb
fcoml
push
adc
je
ljmp
mov
sub
sbb
xchg
dec
std
fisttps
add
mov
inc
push
bound
push
scas
adc
fbld
mov
das
pop
call
inc
insb
push
cmpsl
sbb
ljmp
xchg
ljmp
dec
mov
popf
dec
jmp
jecxz
sub
push
fwait
mov
je
dec
cmc
mov
clc
pop
pop
ds
scas
lahf
inc
jae
aam
xchg
sub
pop
cs
xchg
fimuls
ret
mov
jg
jns
rcll
ret
lds
out
sahf
pop
aad
push
ret
dec
lcall
jmp
in
jns
fmull
in
insb
xor
pop
adc
add
and
cmc
sbb
jle
scas
js
cli
fbld
sub
push
cmp
int3
xchg
inc
mov
xor
daa
adc
and
mov
incl
cld
pop
daa
adc
xor
mov
test
call
jg
icebp
int
pop
cmpsb
cmp
sbb
xor
jne
mov
shll
sahf
adc
pop
data16
xchg
jne
cmc
decl
pop
push
femms
push
stc
sbb
int3
mov
outsl
clc
pop
adc
test
push
imul
dec
or
sub
ljmp
jp
dec
in
jnp
jne
arpl
jmp
out
add
pop
inc
xor
dec
sub
decl
lock
je
add
pop
dec
fnstcw
sbb
jl
ret
stos
pop
jmp
lret
mov
xchg
dec
out
ja
push
inc
fbld
lock
or
pushl
sbb
xchg
aam
jp
xchg
aam
dec
xchg
loopne
lock
inc
jmp
mov
out
bound
jg
hlt
scas
pusha
out
jg
push
or
in
cmc
mov
push
jnp
shrb
xchg
mov
pop
inc
add
incl
lods
ret
es
mov
mov
addr16
cmpsl
jmp
dec
js
les
dec
jns
insb
sbb
jg
outsl
faddl
inc
lds
add
push
jle
jecxz
inc
iret
lods
loopne
jno
mov
rclb
gs
fstl
jae
mov
dec
pusha
fsubl
lcall
fcoml
out
mov
shrl
push
std
or
orb
mov
or
mov
in
aam
push
stos
shll
rorb
cmp
fcomip
jbe
mov
les
xchg
sti
xor
lods
ja
lcall
jg
mov
and
cmp
jecxz
addr16
rclb
dec
loope
jg
pop
test
xchg
aam
jmp
dec
test
mov
cmp
mov
imul
pop
addr16
push
fisubrs
xchg
cmpsb
push
cld
jnp
add
ds
or
mov
leave
xchg
inc
in
mov
adc
movsb
decl
rcrb
push
jg
aaa
inc
imul
lock
incl
movsl
sub
imul
mov
jge
ret
les
mov
ss
cmp
inc
outsb
jl
ss
xchg
push
pop
test
mov
leave
adc
sarl
push
jne
dec
sarl
insb
popa
fbstp
push
jne
test
lcall
movsb
aam
dec
fwait
adc
dec
lcall
aam
cld
in
push
dec
mov
xor
lcall
out
fsubs
xchg
cmp
inc
jge
adc
pop
stc
cmp
xchg
cmp
lcall
mov
xchg
xchg
out
sbb
int3
mov
rcll
call
and
add
and
in
jno
fadds
jnp
cmpsb
xor
mov
test
pushl
pop
nop
out
sahf
into
sahf
imul
aaa
pusha
jl
add
and
mull
xor
test
les
jle
sub
fidivs
jns
xchg
cmp
stos
mov
fsubrl
call
out
mov
mov
xlat
or
fdivl
jge
movsl
pushl
pop
push
test
mov
push
jge
ljmp
fbstp
dec
jp
cmp
cmp
pushl
das
arpl
sbb
cld
and
movsb
cmp
sahf
gs
leave
xor
fnstsw
mov
incl
fcomps
inc
outsb
xchg
cmp
pop
mov
inc
data16
sub
sbb
std
mov
sub
int3
xorb
and
pop
pusha
and
ljmp
dec
mov
xchg
mov
clc
cmp
pop
cld
cmp
pushl
sub
loop
push
pop
xchg
adc
xchg
out
inc
cli
mov
or
nop
cli
xchg
mov
mov
inc
push
out
enter
cmp
incl
jg
inc
inc
mov
negl
adc
mov
dec
xchg
pushf
inc
call
inc
ficoms
push
pop
int3
cmp
xchg
xor
cmc
add
test
sbb
fstpt
cltd
dec
dec
fcomip
fistpl
bound
sbb
insb
pusha
sub
jp
loope
push
icebp
nop
leave
mov
shl
xchg
mov
pop
jg
sbb
add
cwtl
jg
test
call
pop
dec
lods
cld
lcall
jecxz
jnp
loope
ss
sbb
cmp
dec
ds
inc
pushl
dec
inc
mov
pusha
jnp
std
mov
enter
jae
jecxz
icebp
xorl
push
dec
decl
addr16
ds
arpl
fistps
jle
ljmp
sarl
fcomip
pop
dec
les
ret
pop
bound
xchg
aam
push
lcall
arpl
insl
decl
aaa
insl
pusha
cmpsb
pop
pusha
call
into
es
ljmp
std
mov
loopne
adc
mov
jne
data16
testl
or
icebp
mov
popa
jo
arpl
scas
dec
inc
ret
mov
stos
dec
jg
ljmp
sbb
pop
pop
repz
out
push
mov
pop
repz
out
xchg
stos
jmp
inc
mov
add
xchg
inc
jg
shll
push
push
xchg
in
cmpsl
xor
repz
sahf
lahf
cmp
pop
mov
xchg
xlat
pop
sub
sbb
dec
icebp
mov
add
test
mov
xchg
ds
cmpsb
inc
push
mov
ficompl
sbbl
insl
jbe
sarb
js
cld
mov
test
pop
mov
mov
mov
jge
and
xchg
loopne
outsb
icebp
stos
out
xchg
out
mov
ret
mov
repz
pushl
mov
jg
mov
or
fldenv
divl
jge
ret
ljmp
scas
dec
int3
and
jb
dec
imul
out
sbb
pushl
and
lock
mov
and
or
icebp
incl
xor
arpl
in
movsb
inc
decb
fidivrs
imul
mov
add
jmp
subb
test
and
out
mov
and
xchg
clc
pop
cld
out
mov
mov
test
fildl
mov
mov
inc
ja
incl
ds
in
jns
in
mov
pop
popf
mov
pop
ret
and
inc
ljmp
push
lret
cmp
mov
inc
sahf
int3
mov
jmp
push
decl
mov
push
subb
arpl
lahf
popa
clc
sub
push
mov
lcall
mov
push
push
les
pop
sahf
js
sbb
fcomip
lcall
mov
mov
pop
push
cwtl
enter
push
add
into
xchg
int
popa
in
fs
mov
call
ljmp
ss
rcrb
dec
stos
cmp
scas
push
fwait
loope
ja
shlb
jbe
mov
scas
mov
cmpsl
or
mov
jg
jg
mov
add
stc
xchg
fs
test
cmpl
cmp
pop
rcrb
dec
sbbb
inc
lcall
xor
loop
int3
xchg
inc
jmp
jg
scas
dec
fnstcw
xchg
inc
lock
push
pop
mov
mov
jno,pn
xchg
sbbb
xchg
push
mov
xchg
fwait
dec
jle
jge
sbb
fs
incl
add
fmull
mov
pop
int3
xor
jmp
int3
test
mov
and
xchg
push
jne
out
sarl
fwait
mov
fbld
jecxz
lods
insl
or
ret
jecxz
mov
sbb
mov
rorl
sahf
ficompl
pop
test
mov
cmp
call
dec
test
js
mov
xchg
sbb
mov
movsb
ja
mov
adc
xchg
ds
ss
clc
fwait
ret
stos
jecxz
loopne
push
jmp
pop
xlat
push
sub
pushf
jp
sbb
jmp
xchg
xchg
xchg
hlt
ds
mov
inc
mov
iret
cwtl
fwait
test
xor
das
clc
cmp
data16
insl
mov
dec
mov
mov
int
ljmp
xor
movb
inc
in
cmp
inc
mov
mov
sbb
das
sar
mov
mov
adc
jp
pop
inc
inc
mov
cld
or
cld
jbe,pt
xchg
pop
jbe
mov
push
cld
outsl
or
ja
hlt
nop
xchg
in
bound
xor
jmp
or
push
sub
jne
mov
fnstcw
xchg
jge
cmp
mov
sahf
mov
shlb
mov
mov
add
and
mov
pop
mov
dec
or
sahf
cmp
dec
adc
cmp
push
enter
in
mov
fidivs
movsb
push
cmpsl
sbb
push
sbb
inc
cli
mov
pop
jae
repnz
mov
jmp
ret
mov
push
sbb
aaa
pop
jg
test
or
fs
decl
cli
xchg
movsb
insl
ret
sub
loopne
orl
cmp
push
and
in
int
jg
xlat
cmp
jmp
repz
ss
push
fdivr
mov
js
mov
mov
cli
xor
mov
and
jmp
add
jb
jmp
inc
into
xchg
and
subl
fbld
ja
jmp
test
pushf
add
icebp
cld
cwtl
inc
in
mov
mov
cltd
popa
out
xchg
lret
sahf
mov
pushl
add
mov
gs
sbb
xchg
int3
mov
jmp
loopne
int
ja
icebp
lods
mov
jl
pop
test
es
jp
shlb
shll
movsb
out
mov
mov
popa
filds
jecxz
xchg
mov
aas
loop
shrl
pop
lcall
jle
xchg
stos
clc
decl
and
pop
iret
cmp
push
lret
fidivs
ljmp
pop
les
push
stos
xchg
nop
jle
xor
insl
lock
mov
cs
test
sbb
lcall
xchg
push
outsb
cli
push
lock
loope
andl
inc
mov
fdivp
and
ljmp
pop
lods
cmpsl
jne
pop
mov
jle
xor
arpl
mov
ret
fdivp
mov
cmp
out
xchg
dec
bound
pop
inc
loopne
nop
stos
jle
xchg
jne
popf
add
pop
out
hlt
out
and
mov
jns
dec
lods
hlt
xor
jg
in
out
xchg
into
or
popfw
cmc
lods
dec
repz
jmp
cmp
mov
shrl
mov
bound
out
cmpb
or
ljmp
enter
inc
jecxz
outsb
mov
aaa
dec
in
xchg
arpl
iret
popf
push
test
es
xchg
mov
bound
fsubp
or
mov
adc
cmpsb
and
sbb
addl
fbld
lds
cmpsb
fnsave
insl
cli
cmp
clc
add
popa
mov
mov
fmuls
xchg
cmc
cwtl
dec
lock
xchg
lcall
pushf
stos
jnp
cwtl
lret
fwait
dec
ljmp
mov
imul
and
bound
push
fwait
insl
cld
mov
mov
movsb
mov
lods
and
ljmp
or
xchg
cmp
jbe
test
sbbl
les
lret
push
arpl
mov
stos
mov
pop
icebp
push
cwtl
pop
lcall
out
std
lods
imul
mov
test
push
test
ljmp
add
jns
sarb
jge
loope
repnz
testb
mov
sbb
inc
lahf
and
cmpsl
xlat
mov
mov
rcrl
clc
jg
into
pop
mov
and
movsb
inc
iret
push
lcall
pop
popf
hlt
cmpsl
pop
std
scas
incl
pop
mov
mov
in
mov
dec
or
shlb
pop
push
lahf
push
jecxz
cmp
popf
int
push
cmc
cmpsl
subl
push
movsb
jp
cmp
gs
fistps
icebp
jmp
std
cmpsl
rcrb
clc
sbb
sti
pusha
sarl
inc
cwtl
inc
dec
mov
fdivs
mov
ret
xchg
dec
neg
cmpsl
mov
pop
out
xchg
pop
rorb
movsb
inc
pushf
or
bound
sahf
mov
xchg
rcrb
sar
mov
mov
sbb
mov
jle
mov
mov
fcomps
popf
insb
mov
in
arpl
test
mov
imulb
cwtl
xchg
xchg
jnp
xor
jl
pop
mov
jg
iret
mov
adc
cld
fstpt
inc
mov
mov
dec
pushf
lcall
cmpsl
imul
pop
lcall
mov
loopne
stos
xchg
xchg
rolb
in
mov
mov
incl
imul
mov
popf
dec
cmc
xor
inc
in
cmp
ret
gs
xchg
lock
and
inc
test
inc
mov
cwtl
into
xor
sbb
pop
cld
fistpll
mov
pop
mov
cld
cmp
sahf
fs
sbb
mov
sub
out
jg
lcall
jl
or
ljmp
lahf
jnp
adc
pop
pushf
call
les
push
mov
xchg
cld
out
push
mov
daa
mov
inc
cwtl
add
mov
or
mov
call
pop
repz
dec
mov
sbb
les
shlb
test
jg
mov
xchg
mov
sahf
outsl
and
mov
mov
xchg
pop
lret
mov
cli
ljmp
and
jns
xor
xchg
lret
xchg
stos
leave
xor
int
ljmp
test
fdivr
lcall
lcall
mov
dec
xchg
inc
fnstenv
enter
inc
in
adc
mov
and
jne
ret
iret
mov
add
cli
cmpsb
call
aam
orb
cmp
aas
xchg
dec
mov
mov
lock
fwait
xor
mov
jae
cmpsb
fdivl
cld
shlb
shrb
int3
dec
mov
lcall
cmp
mov
inc
jp
negb
and
clc
lahf
shl
jmp
mov
mov
inc
sti
add
je
mov
lahf
fs
mov
cmp
mov
jno
fdivrl
pop
clc
mov
jae
mov
outsb
rorb
cmpsb
incl
ret
out
adc
inc
aam
mov
mov
cmp
mov
lret
pop
push
mov
adc
outsl
mov
out
sbb
pop
and
in
popa
in
test
jp
nop
lds
xchg
mov
rcrb
jecxz
inc
ljmp
xchg
hlt
lock
mov
xor
sbbl
hlt
jnp
movsl
mov
aaa
jg
pop
fisttpll
ret
ss
fadds
lods
ljmp
hlt
outsl
fs
rolb
fwait
mov
jge
in
pop
ret
jmp
jns
outsb
jo
stc
mov
mov
or
or
insl
push
lcall
pushl
xor
out
out
xchg
test
mov
ljmp
pop
add
pop
mov
pop
test
mov
fisttpl
fistpl
rcr
mov
mov
sbb
movsb
xor
lret
mov
fmull
aam
arpl
jmp
mov
dec
cld
push
push
pusha
or
pop
mov
mov
je
mov
jl
mov
std
ja
add
pop
sbb
and
sahf
xchg
xor
hlt
pushl
repz
dec
mov
adc
out
aad
jg
and
movsl
xchg
pop
call
stos
or
cmp
push
popf
ret
adcb
loopne
jge
out
in
nop
pop
hlt
call
add
mov
push
inc
mov
xchg
loopne
inc
fwait
shll
pop
ja
scas
mov
mov
or
mov
lock
xchg
clc
add
sbb
mov
aam
pop
scas
cmp
jl
mov
jno
decb
push
jle
test
sbb
lds
cli
clc
xchg
sahf
scas
push
fwait
inc
cld
sub
fwait
aas
pushl
fnstsw
mov
outsb
xchg
aaa
jg
cmpsl
mov
std
mov
mov
cmp
aas
pushl
pusha
mov
mov
clc
cmp
out
cld
idiv
mov
cmpsb
mov
add
jp
mov
sbb
nop
inc
std
push
mov
cli
out
cli
inc
jle
or
in
mov
cmc
dec
mov
mov
mov
dec
xor
jno
es
push
sahf
ljmp
jmp
fwait
les
mov
lcall
sub
dec
inc
mov
push
mov
mov
mov
sbb
mov
call
dec
dec
sub
ret
cmp
mov
inc
loopne
xorb
movl
adc
sahf
cwtl
mov
xchg
jo
incl
jge
xchg
scas
ja
movsb
std
and
fidivrs
pop
cmc
decl
mov
icebp
cmp
sahf
xor
lcall
mov
lcall
inc
cmc
xor
mov
sarl
mov
cmpsl
lds
iret
pop
mov
mov
pop
lods
pusha
inc
jg
mov
push
int
inc
aam
in
xor
filds
jg
lock
mov
and
stc
cmpsb
push
mull
nop
dec
ja
call
into
xchg
inc
rcll
iret
mov
inc
mov
push
call
arpl
cmc
inc
lds
in
out
sbbb
mov
decl
sub
dec
lahf
aas
jge
popf
aam
insb
int3
mov
adc
clc
xor
imul
mov
mov
cli
sbb
dec
test
pop
stos
iret
cmpsl
dec
ljmp
cltd
cmp
pop
call
out
mov
fisubl
pop
aaa
gs
mov
cmpsl
decl
and
mov
jmp
movsb
fisttpll
cmpsb
mov
jmp
inc
mov
les
jns
ret
mov
sbb
loop
fistps
js
cmp
inc
movsb
cmp
mov
jg
loope
lock
jg
movsb
dec
loopne
xchg
xchg
xchg
fcoms
pop
test
push
push
mov
cmpsl
inc
mov
les
hlt
out
mov
movsl
loope
cmpsb
repnz
pop
cmpsl
jbe
nop
mov
fbld
movl
sbbl
lods
jmp
inc
jg
ja
bnd
lods
xor
mov
mov
sbb
mov
jle
clc
and
gs
ljmp
into
test
rclb
ljmp
push
inc
insl
icebp
xor
jg
push
jnp
add
lods
popa
out
fcoml
addr16
fwait
cld
xchg
addr16
rclb
fdivs
push
jne
add
mov
dec
call
add
test
mov
lock
scas
sbb
out
mov
ret
push
into
pop
imul
mov
lods
inc
repnz
cld
sar
ret
cs
mov
or
adc
out
sub
inc
fs
cmp
repnz
movb
dec
and
decb
lock
cmp
dec
jge
mov
push
ds
incl
aam
sbb
cli
or
insl
mov
aad
in
inc
fidivrs
jge
rcll
inc
lods
sbb
pushl
inc
or
sbb
in
andl
mov
jno
dec
mov
push
test
cld
ljmp
jns
nop
jo
cmp
dec
pusha
pop
mov
mov
jmp
mov
jg
dec
push
lea
outsl
jne
lods
push
jae
fwait
popa
push
mov
mov
lods
jae
mov
jno
jnp
inc
jge
xchg
dec
inc
or
jmp
cwtl
push
js
mov
rolb
arpl
and
mov
lcall
ljmp
popf
fstpt
cmp
out
mov
and
mov
incl
mov
push
cmp
push
int3
mov
jl
lcall
pop
adc
bound
aaa
hlt
lcall
inc
arpl
mov
dec
jbe
mov
popa
jmp
dec
jl
xchg
cmpsb
mov
mov
iret
scas
jg
mov
lahf
pusha
adc
pop
jecxz
out
adc
or
shll
loop
lcall
dec
cmp
cmp
in
mov
jne
dec
cmpl
pop
es
inc
mov
lods
inc
out
mov
addl
sub
js
dec
push
jb
inc
push
arpl
lcall
movsl
sahf
dec
popa
cmpsl
jg
orl
mov
xor
fbld
bound
jecxz
lret
or
jo
pop
sbb
fists
enter
add
jge
movsl
xor
stos
aad
xchg
scas
jle
mov
push
mov
lock
outsl
popa
fidivrl
fwait
pop
mov
push
adc
adc
jb
inc
loope
jp
adc
cmp
inc
fists
cmp
xor
cmpsl
aad
inc
insb
pop
out
xchg
mov
inc
jp
stos
or
pop
cmp
lds
scas
xor
push
adc
push
sub
push
test
js
xor
and
stos
add
adc
sbb
jo
inc
loopne
mov
int
dec
test
inc
xor
lcall
ret
cmp
pop
cmp
rcrb
push
mov
xor
test
lahf
fwait
inc
xchg
cmp
shrb
aaa
hlt
sub
jns
cmp
inc
popf
xor
push
incl
loope
xchg
inc
add
sub
test
outsl
pop
inc
lahf
aas
icebp
js
push
in
je
popf
add
mov
out
sbb
popf
dec
and
out
sub
jl
sbb
call
iret
test
aam
add
test
or
lods
shlb
jmp
and
push
imul
and
arpl
mov
jp
sub
sbb
ljmp
setnp
stos
mov
mov
or
sub
fadds
xchg
inc
testl
mov
je
or
dec
stc
js
mov
sbb
pop
mov
add
incl
mov
cmpsb
jle
xor
lahf
test
dec
scas
adcb
jg
loopne
pop
add
xor
xor
push
lcall
sti
gs
mov
jb
shll
xchg
fwait
xor
shll
xchg
sub
icebp
mov
ljmp
dec
inc
aas
mov
lods
dec
das
mov
mov
inc
pop
cwtl
idiv
xchg
mov
incl
inc
in
pop
mov
je
bound
pusha
ljmp
sbb
sbb
and
in
mov
clc
aaa
push
clc
movsb
add
pop
orl
orb
push
sti
sub
out
mov
push
shrl
ds
iret
push
shll
pop
or
incl
test
mov
mov
stos
pop
pop
jle
hlt
incl
cmpsb
pop
lods
push
imul
mov
call
mov
and
xor
incl
pushl
xor
sub
cmp
fmull
jmp
jmp
out
xchg
pushf
ret
jae
cltd
mov
jle
cmp
xor
scas
xchg
stos
push
arpl
jmp
mov
xchg
adc
sub
push
mov
dec
fsubrl
mov
xchg
sub
and
jmp
jno
mov
and
xchg
lea
mov
clc
ljmp
jecxz
jb
cmc
test
call
inc
mov
and
push
aaa
lahf
ja
jbe
push
xchg
cs
loop
xchg
push
xchg
sti
or
adc
je
mov
push
lods
xchg
xor
mov
add
out
mov
decl
dec
dec
jbe
push
jae
push
mov
scas
push
mov
pop
dec
out
sbb
lods
or
mov
call
out
mov
jg
fcomi
push
or
sarb
fisubrl
jbe
fbstp
fs
jmp
scas
in
mov
add
xchg
xchg
cli
aaa
into
daa
or
and
mov
leave
scas
sahf
fisubrl
cs
sarb
jecxz
sahf
cs
jae
sbb
pop
mov
push
cmp
ljmp
add
or
mov
daa
xor
loop
jbe
fisubs
sarb
shrb
out
stos
lods
cmpsb
and
ljmp
repz
mov
cmpsl
std
mov
sahf
cmpsl
out
test
jmp
dec
push
andl
jne
repz
inc
mov
lret
cs
mov
int
subb
pop
test
pushl
cld
movsl
xchg
push
test
xor
movsb
cmpsb
scas
jb
push
stos
ss
clc
mov
xchg
cltd
into
sub
and
incl
pop
scas
fwait
or
repnz
fwait
mov
imul
or
or
sahf
mov
lock
jo
cli
push
stc
decl
push
mov
adc
mov
test
in
inc
pushf
sahf
test
fisttpl
xchg
pushl
std
mov
mov
and
pop
jbe
movsl
push
cmp
sub
repz
and
sbb
pop
cmp
cmp
mov
jecxz
cmpsb
in
lods
jle
xor
sahf
fwait
push
dec
arpl
push
daa
dec
or
daa
push
inc
call
mov
fcomip
sbb
lea
insb
gs
pop
les
mov
sub
popa
shl
fsubs
dec
mov
fbstp
or
push
cmp
jmp
loopne
insl
popf
decb
jno
fnstcw
lea
xor
pop
fidivs
imul
mov
js
lods
data16
outsb
inc
mov
les
sti
in
push
dec
int3
jge
inc
loope
out
sahf
pop
mov
rclb
xor
ret
incl
mov
sub
mov
lock
xchg
or
out
inc
cmc
cs
imul
clc
js
xchg
test
outsb
push
aad
jmp
std
push
mov
mov
add
cmp
stc
push
mov
add
cmovnp
lahf
and
in
setle
push
sarl
das
jne
loope
out
pop
lods
stos
test
pusha
inc
cltd
add
jg
jecxz
decl
test
xor
lret
mov
dec
jle
mov
outsl
push
mov
pop
ror
scas
mov
ds
xchg
test
test
pop
out
ds
cltd
xchg
out
call
das
push
pop
adc
sbb
iret
sub
in
subb
bound
sahf
cltd
cmp
repz
repz
leave
sbb
jo
jbe
rorl
incl
fimull
xchg
sbb
loopne
stos
jno,pt
pop
cwtl
decb
xchg
in
push
jns
insl
outsb
outsb
loop
xchg
int3
lock
jle
inc
xorb
jo
ljmp
jge
mov
inc
lret
test
push
decb
xchg
mov
adc
push
popa
lret
xchg
jle
inc
out
add
mov
add
push
mov
dec
adc
pop
movsl
scas
add
mov
addr16
out
rorl
pushf
dec
pop
fnstsw
sarl
jp
out
fcoml
mov
decl
dec
pop
jno
push
xchg
add
mov
rorl
mov
push
adc
loope
movsb
call
dec
dec
or
jae
dec
and
popf
stos
lea
out
das
mov
rolb
enter
rorl
clc
pushl
rorl
lcall
sub
mov
jo
dec
push
popa
test
or
push
int
test
jg
loopne
aam
mov
sahf
repnz
pop
jge
ds
cmpsb
mov
mov
mov
inc
out
pop
mov
push
das
push
decl
insl
jb
dec
into
or
lahf
addr16
mov
dec
mov
mov
push
in
outsb
leave
pop
xchg
xchg
mov
dec
loop
sbb
sahf
ret
out
test
and
in
call
push
inc
inc
jno
cwtl
jbe
filds
outsb
ljmp
enter
inc
inc
fadd
jmp
dec
scas
scas
mov
xchg
vpsrlq
jg
jp
leave
push
mov
mov
cmp
add
clc
call
cmc
adc
jo
sbb
ds
inc
arpl
leave
pop
mov
dec
inc
insb
cmp
icebp
lcall
dec
mov
pop
lods
mov
adc
xor
pop
aam
nop
cmp
jb
jo
jp
sub
popl
or
roll
mov
push
lock
call
out
dec
inc
inc
stc
repz
cwtl
cmpsb
fs
mov
fwait
mov
adc
arpl
sub
jnp
fbstp
loop
xchg
scas
jno
std
cmpsb
xchg
pushl
or
notb
dec
push
mov
stc
rorb
stos
xchg
mov
int3
push
xchg
mov
mov
mov
push
push
out
adc
out
push
mov
pusha
sub
xor
ljmp
adc
icebp
push
pop
inc
add
jle
adc
out
out
jae
testb
inc
add
arpl
adc
aam
mov
mov
fcomi
xchg
fadd
decl
lock
add
lock
stos
xchg
xchg
and
mul
add
scas
mov
pop
aad
jmp
inc
dec
xchg
pop
adc
jg
mov
sti
shrl
aaa
add
lcall
mov
xchg
jg
add
sti
filds
and
fiadds
dec
mov
jne
rcll
rcrb
push
add
jl
adc
lock
xchg
test
mov
popaw
fists
add
xlat
or
push
es
push
out
xchg
cmc
jne
cli
adc
stos
aaa
ficoml
pop
cmp
lock
cld
icebp
mov
in
sahf
push
dec
pop
jecxz
inc
test
int
xchg
mov
lock
incl
pushl
push
sbb
dec
push
in
sbbl
into
or
mov
jge
lock
mov
mov
cmp
mov
rol
mov
mov
rcl
fistps
inc
stos
xchg
mov
scas
ss
xchg
mov
negb
mov
cld
inc
popf
jae
lea
push
inc
call
hlt
inc
mov
mov
incl
lret
push
out
lret
sub
mov
lock
iret
pop
test
call
ljmp
jg
repnz
ds
push
and
push
mov
lock
mov
ss
mov
outsb
mov
xchg
jg
dec
movsl
adc
xchg
mov
sti
loopne
mov
mov
mov
scas
popa
sahf
jle
enter
mov
rcll
xchg
stos
jne
sub
cmc
mov
mov
cmovg
js
ss
mov
pop
mov
mov
and
lock
mov
push
mov
xchg
pop
icebp
imul
dec
mov
adc
lret
lcall
mov
jbe
cltd
lahf
push
incb
mov
out
jle
incl
cld
ja
roll
fists
fsubl
inc
mov
call
sbb
jne
add
rolb
and
jg
jnp
mov
and
ss
xchg
lcall
add
test
es
addr16
mov
lock
fildll
xor
fistpl
pop
and
popf
clc
ds
cli
jb
ret
and
pop
sbb
mov
cmp
scas
push
or
cli
nop
inc
mov
rcll
ret
lds
in
test
xchg
fistps
xor
cmpsl
mov
out
xchg
pushl
inc
imul
mov
loopne
xor
test
stos
mov
and
cmpb
sbb
pop
pop
pop
inc
addl
scas
cmpsb
fcoml
sub
hlt
stos
or
mov
adc
pop
push
incl
mov
add
push
gs
inc
and
add
inc
daa
bound
test
decb
pop
jmp
dec
roll
dec
cmpsb
xor
inc
mov
inc
lret
cmp
jge
or
das
push
cwtl
clc
mov
insb
int3
daa
jo
jecxz
xor
in
or
fwait
lods
add
rolb
mov
inc
mov
incl
jmp
popl
insb
popa
xchg
and
repnz
xchg
mov
inc
std
jmp
test
push
mov
xchg
inc
scas
andb
lret
fistpll
int
dec
push
aad
cmp
mov
imul
cmp
sbb
dec
mov
inc
xorb
add
ret
jg
outsb
and
dec
test
aaa
jge
xchg
movups
rorb
mov
dec
add
add
popa
cmc
mov
mov
enter
push
idiv
pushl
pop
setp
lock
stos
pop
jl
pusha
in
aaa
inc
arpl
pusha
push
repnz
jno
pushl
push
lods
ret
mov
sub
test
sbb
mov
movsb
pushf
popa
fmull
in
push
ljmp
inc
mov
jg
icebp
dec
scas
xor
ja
pop
out
push
mov
test
adc
xor
out
iret
jnp
inc
loop
mov
insl
aaa
push
jns
dec
fs
jo
fs
or
mov
jmp
inc
shll
dec
outsl
xchg
sub
nop
decl
lock
fistl
outsb
mulb
and
add
outsb
cwtl
inc
jmp
jmp
cmpsb
jp
sarl
aaa
lods
in
add
mov
inc
and
and
pop
clc
pushl
roll
pusha
iret
and
mov
and
inc
add
pop
out
xchg
mov
sbb
adc
clc
xchg
cmp
xchg
ljmp
mov
pop
js
ss
jno
mov
inc
sbb
or
jg
ljmp
scas
xchg
outsb
out
jnp
mov
pop
movsb
fimull
add
adc
mov
fmuls
cld
xor
xlat
mov
addpd
adc
or
adc
or
add
xor
pop
ds
adc
cltd
and
dec
pop
push
jo
jl
add
sahf
cmp
and
cmp
ljmp
movsl
sbb
lods
mov
mov
mov
push
je
sbb
jo
filds
xchg
addr16
scas
dec
mov
in
sahf
mov
clc
insb
out
dec
xor
enter
cli
decl
jb
push
jge
inc
inc
gs
cwtl
sub
xor
in
mov
sub
cmp
scas
out
pop
dec
incl
mov
repnz
outsb
test
insl
out
jmp
icebp
xchg
inc
cltd
adc
push
mov
das
mov
xchg
push
adc
xor
aas
adc
decl
lods
adc
push
clc
scas
test
xchg
add
and
mov
xchg
mov
jmp
jle
flds
jno
sahf
jg
lock
pop
add
adc
push
mov
push
sbb
bsr
ljmp
test
shlb
pop
fwait
pop
loopne
repz
fidivs
and
add
loope
sub
setno
insb
mov
adc
ja
pushl
es
add
adc
sbb
dec
xor
jp
adc
sbb
jecxz
fiadds
addr16
scas
add
jne
cmp
pop
mov
in
inc
mov
out
mov
loop
mov
lea
das
dec
and
pop
sbb
push
frstor
gs
xchg
or
push
int
idiv
inc
jle
nop
sbb
push
sub
jmp
add
mov
shrb
clc
cwtl
repz
pop
jnp
push
add
cs
mov
inc
loopne
xchg
mov
insl
mov
fwait
cli
lds
imul
xchg
or
inc
lcall
cmp
test
dec
mov
mov
mov
mov
inc
mov
sbb
daa
movsb
popf
scas
in
mov
fsubrs
out
pop
fwait
out
ret
mov
outsl
scas
inc
cmc
arpl
push
fsts
leave
sbb
dec
jecxz
out
add
movsl
xchg
cli
cwtl
add
sbbb
stos
xchg
nop
into
stos
pop
and
dec
outsb
sbb
jo
dec
mov
sbb
sbb
out
inc
jge
sahf
sahf
cli
lods
iret
push
inc
cld
out
clc
dec
mov
int3
mov
jno
cmpsb
int3
mov
or
dec
mov
lcall
sub
jno
cmp
std
adc
lahf
lea
xchg
data16
decl
jecxz
mov
mov
test
pop
adc
daa
inc
sbb
ljmp
push
pop
adc
inc
sub
adc
arpl
jo
inc
inc
fwait
mov
mov
mov
lcall
ret
lods
adc
insl
cmp
add
data16
arpl
pushl
inc
filds
jp
addr16
cltd
test
inc
into
lcall
ficoms
int
mov
push
xchg
ja
roll
addl
add
and
idivb
mov
cmp
adc
or
cmpsb
ret
sahf
call
addr16
std
xchg
ss
fidivl
pop
pop
and
push
inc
ret
mov
sub
repnz
icebp
jne
jecxz
or
cmp
jl
das
nop
lcall
out
inc
call
add
pop
rorl
out
add
jmp
stc
sub
push
ret
add
loop
pop
sahf
cmp
out
test
icebp
push
sbb
movsl
jecxz
mov
lcall
mov
out
clc
idivb
ficomps
dec
mov
ror
cmpsl
cmp
mov
lods
mov
xchg
incl
xchg
mov
aaa
incb
sbb
sbb
sbb
in
mov
xchg
dec
fistps
loope
xchg
aad
or
mov
add
sbb
mov
pushf
mov
fists
insl
push
call
mov
cmp
mov
incl
mov
inc
dec
icebp
in
outsl
fs
cmpsb
push
in
mov
aam
mov
sbb
popf
mov
lcall
jno
mov
xchg
imul
jmp
dec
out
mov
jmp
cld
or
xchg
pop
imull
repz
rcrl
dec
mov
mov
stos
mov
fadd
xchg
and
mov
rclb
jo
xor
mov
decl
mov
arpl
jmp
out
fwait
dec
imulb
sbb
icebp
test
ljmp
inc
jecxz
mov
decl
idivl
mov
je
push
fwait
jbe
lods
xchg
mov
push
lds
inc
sub
add
call
imul
lret
daa
jl
inc
dec
mov
mov
shl
xchg
mov
clc
fadd
mov
ret
cmpsb
xchg
fbld
lahf
cltd
pop
shll
cmc
mov
add
call
insb
inc
shrl
ret
adc
push
add
or
int3
mov
pushw
sar
push
ret
mov
rcll
clc
outsl
aam
imul
push
push
add
out
loop
xor
jge
dec
fsubrl
mov
bound
scas
pop
adc
test
mov
int
stc
push
xchg
stc
repz
aad
and
icebp
mov
shlb
rcrl
pop
ljmp
outsb
rorl
dec
outsb
into
movsb
lret
mov
icebp
lcall
xchg
lcall
mov
mov
push
rclb
add
fcmove
mov
jle
lds
inc
lock
mov
mov
mov
call
das
mov
pop
out
ficoms
outsl
out
clc
mov
sahf
mov
sbb
xor
push
or
dec
mov
sahf
loope
and
or
xchg
mov
add
or
push
pop
pop
js
xor
aam
mov
dec
popf
xchg
out
inc
pop
dec
inc
ret
clc
movsl
lods
xchg
mov
add
mov
pop
inc
bound
loopne
nop
test
inc
dec
data16
fsubr
das
je
xor
clc
decl
and
in
cwtl
mov
gs
sti
jmp
mov
pop
jne,pt
lahf
call
inc
in
xor
inc
and
out
adc
test
pushl
adc
repnz
push
pop
inc
dec
or
loopne
dec
bound
inc
lret
outsl
jno
xor
cmp
int
inc
jb
pop
repnz
jo
pop
jp
shlb
repz
out
add
sbb
lea
pushl
rclb
sahf
test
test
in
cmpsb
sahf
lods
mov
xor
test
lock
rorb
je
mov
sti
push
daa
shrl
sahf
aad
outsl
fisubl
fsubl
mov
sar
ret
cmp
mov
dec
gs
repnz
test
into
pusha
ljmp
push
mov
inc
call
cs
cwtl
sbb
jl
and
cmp
in
imul
test
push
rcr
mov
jle
add
push
xchg
mov
inc
mov
and
fcomi
mov
dec
arpl
loop
fwait
iret
clc
scas
out
push
clc
aaa
mov
cmpsb
xchg
dec
mov
mov
call
jae
std
out
mov
jbe
push
sar
push
pop
test
scas
mov
inc
jl
jge
push
ds
leave
mov
add
mov
cmpl
scas
mov
pop
cld
decl
sahf
xlat
mov
arpl
rclb
aaa
into
and
xchg
dec
es
dec
push
jp
xchg
decb
xchg
clc
out
cmpb
divl
fwait
movsl
inc
dec
mov
mov
mov
pop
in
mov
and
or
insb
enter
add
inc
not
jg
out
nop
fdivp
sahf
imul
jg
into
repnz
and
iret
sbb
inc
push
fldt
lea
cmpsl
mov
sbb
jo
ficomps
push
nop
int3
ljmp
mov
sub
mov
mov
and
mov
out
ffreep
xchg
loopne
xorl
jbe
inc
in
dec
fsub
mov
mov
je
add
test
dec
fwait
roll
into
outsb
jp
push
jl
js
fcomps
outsb
jmp
hlt
sub
lahf
les
dec
mov
daa
or
mov
inc
inc
jmp
shll
push
cmp
inc
aas
cmp
xchg
push
fldl
lock
mov
movsb
push
inc
outsl
inc
loopne
inc
add
or
fidivs
outsb
mov
mov
jne
popa
mov
sbb
jmp
lock
inc
in
int
fildll
push
insl
jno
loope
push
clc
ret
in
mov
in
lcall
and
cmpsb
outsb
jno
das
call
fdiv
mov
or
aam
cmpsb
ljmp
cld
call
std
nop
cwtl
cmc
cmpsb
mov
xor
frstor
rolb
inc
sti
fistps
dec
out
mov
mov
ds
into
jmp
mov
sahf
xor
mov
outsb
ffree
mov
mov
int
outsb
fwait
int
fwait
ret
es
loop
cltd
mov
idiv
nop
adc
mov
adc
mov
mov
push
fisubs
shl
mov
push
clc
loop
lahf
xchg
lea
ds
out
cmp
lds
xchg
add
pshufw
mov
mov
dec
les
or
int
xchg
int
out
clc
push
fyl2xp1
lods
sahf
sti
mov
mov
scas
clc
insb
mov
or
mov
in
ljmp
jg
les
xchg
fwait
mov
in
mov
in
mov
int
fdivrp
aad
test
cmp
mov
xchg
out
sbb
mov
jge
test
mov
add
xor
rcrl
shl
mov
icebp
jg
and
pusha
mov
jecxz
mov
push
adc
cld
movsl
incl
clc
lcall
ja
mov
pusha
enter
cmp
pop
movsb
mov
fwait
aas
std
das
cli
jg
mov
sbb
adc
sbb
movsb
out
gs
popa
sbb
clc
enter
test
mov
loopne
mov
inc
iret
mov
nop
stos
mov
sbb
stc
mov
fcoms
mov
aaa
dec
js
jle
cmc
std
dec
jg
xchg
loope
frstor
mov
mov
nop
popa
scas
insl
ret
or
rcl
in
je
or
sar
lock
xchg
lcall
xchg
int3
mov
fisubs
hlt
test
sbbl
pusha
loopne
mov
cltd
int3
xchg
jle
xchg
push
adc
cs
jg
xchg
xor
out
or
adc
aas
mov
test
push
pop
mov
loop
mov
xchg
cmp
push
roll
int3
mov
jnp
mov
mov
mov
das
mov
cwtl
mov
test
sti
scas
lock
sarb
xor
jp
inc
mov
mov
repz
jno
push
sti
loopne
test
outsl
push
je
roll
int3
jle
inc
movsl
mov
mov
xchg
gs
and
cmpb
loopne
mov
lcall
loop
xor
arpl
test
mov
lret
sub
mov
lods
xchg
out
mov
mov
ljmp
dec
mov
dec
frndint
dec
in
push
movsb
ffreep
push
xchg
data16
fsub
hlt
push
sahf
ljmp
mov
imul
out
ja
stos
int
push
loopne
cld
pop
es
sahf
rorl
xorb
incl
or
es
sbb
movups
stos
xchg
xchg
mov
cld
decl
jns
insb
popf
push
inc
in
mov
out
pushf
mov
out
test
outsl
jp
sbb
inc
lcall
inc
push
xchg
cmp
cmp
aam
lods
scas
into
loop
fwait
or
jno,pn
ljmp
adc
in
ret
dec
push
push
pop
or
mov
fdivr
lcall
lret
scas
mov
outsb
leave
push
sbb
hlt
lods
xchg
add
xchg
iret
lock
sar
mov
cltd
popa
rolb
test
jns
faddp
jg
ds
jns
or
cmpsb
fstps
dec
fcomp
movb
fsubs
ljmp
andb
xchg
loope
jle
mov
ja
sbb
lods
mov
mov
repz
jp
cmp
ljmp
ret
jmp
enter
ret
xchg
add
aaa
das
out
fsts
rclb
cs
dec
in
mov
into
aaa
and
incl
cmp
aad
mov
fucomi
mov
test
pop
sahf
mov
popf
mov
sub
out
out
push
sub
stc
mov
mov
lods
adc
cld
add
test
divl
dec
rolb
dec
cmp
into
test
sbb
imul
decl
push
push
sbb
mov
mov
pop
inc
xchg
xchg
xchg
je
push
xchg
mov
lods
stc
sbb
leave
call
iret
cmpl
movsl
sahf
ret
jnp
mov
adcl
mov
or
sub
incl
jne
inc
ficompl
mov
test
mov
mov
xchg
ljmp
cmp
xlat
roll
ss
test
jmp
or
adc
movsl
pop
pop
dec
jno
data16
adc
incl
insb
dec
push
jp
imul
outsb
jne
inc
imul
js
pop
mov
pop
pushl
jmp
ja
and
xchg
or
mov
dec
test
xor
mov
lods
jne
es
xor
mov
out
addr16
decl
dec
aaa
pop
int
out
js
mov
addr16
ljmp
sahf
packuswb
xchg
cs
jb
jle
jl
sbb
test
or
adc
sub
je
outsb
add
pusha
and
push
or
hlt
cmp
jl
mov
loopne
outsl
out
out
sbb
xor
pop
xchg
pop
je
xor
and
lcall
cs
pop
push
xchg
adc
clts
inc
lcall
jns
shll
call
mov
xchg
and
dec
inc
mov
ja
xchg
jno
pop
push
cs
lcall
mov
cmp
outsb
mov
add
add
mov
mov
mov
xchg
das
fs
ja
push
insl
mov
cmp
test
add
mov
shrd
add
dec
mov
scas
adc
adc
decl
sbb
add
negb
dec
insb
popa
push
jne
jg
out
out
bound
js
not
outsb
jns
adc
sub
xchg
bswap
fisubrs
cld
xor
sahf
shrl
clc
call
lods
dec
dec
push
add
adc
lea
aaa
mov
inc
dec
ficoms
cwtl
pop
cmp
cli
cld
ljmp
mov
test
arpl
setp
jbe
sbb
mov
mov
incb
ds
adc
lods
push
pop
sub
sbb
pop
mov
aas
in
jge
xchg
insl
in
xchg
mov
and
push
test
dec
inc
xor
call
add
pop
mov
mov
pop
mov
loop
and
mov
loope
int
and
adc
mov
adc
mov
inc
filds
iret
adc
cltd
cmp
lds
lret
cmp
out
aam
add
scas
push
fs
push
sbb
ds
outsl
cli
jg
jmp
inc
add
sbb
out
add
scas
dec
lock
mov
fildll
push
cmpsl
fs
cmp
cltd
push
cmc
aaa
in
ret
aam
pop
leave
mov
cs
out
push
add
cmp
int
nop
jnp
testb
fwait
add
icebp
pop
cmc
lcall
decb
ror
dec
test
xor
cmp
lea
push
mov
mov
sub
pop
mov
js
mov
mov
jae
pushf
popa
outsl
mov
push
fdivrs
out
cmpb
fwait
stos
xor
cmpsb
push
mov
int
out
push
jg
mov
xchg
cltd
pop
or
pop
jg
aaa
stos
mov
andb
test
pop
jl
inc
bound
jg
mov
mov
aam
arpl
sub
mov
cs
mov
jae
sub
mov
popa
mov
in
xorl
or
movb
mov
adc
fidivs
mov
lcall
sbb
lahf
push
jp,pn
ss
pop
jle
and
sahf
ret
out
data16
call
mov
or
ficompl
ljmp
cmpsb
nop
xchg
xchg
sarb
cli
cmp
mov
cwtl
rolb
pop
in
dec
dec
out
in
push
cld
decl
pop
inc
pop
and
mov
mov
into
mov
gs
cmp
imul
sbb
mov
mov
dec
adc
nop
bound
sbb
lock
mov
add
push
dec
push
xor
mov
pusha
insb
jo
pop
inc
addb
and
xor
sti
ss
or
cld
or
ljmp
add
std
mov
pop
sbb
adc
mov
inc
pusha
movsb
cmp
jnp
sbb
popf
and
cs
call
xchg
scas
adc
insb
gs
jo
jb
in
bound
mov
jg
clc
sub
add
dec
int
fldcw
out
jmp
sbb
mov
inc
scas
jb
insb
cmp
outsl
ds
scas
push
je
inc
mov
add
sbb
xchg
xchg
dec
xchg
push
sahf
fucomip
sbb
js
sub
pop
xchg
outsl
push
pop
imull
push
pop
mov
push
jp
sar
inc
rcrb
adc
inc
loop
lcall
dec
lcall
push
or
orb
aad
lcall
mov
pop
hlt
ljmp
cmp
xchg
jmp
jl
dec
out
mov
dec
sarb
fldenv
mov
test
and
and
lret
ds
push
and
adc
ret
push
in
insb
sbb
jo
push
test
push
ret
aas
xchg
sub
xor
adc
repz
jle
rol
mov
loope
jmp
jg
mov
xor
and
cmp
nop
aaa
lods
insb
ret
xor
mov
cli
test
popa
movsb
inc
cs
mov
aaa
add
inc
cmp
pop
mull
xchg
outsb
sbb
clc
pop
or
imul
mov
js
insb
out
mov
ret
mov
xor
arpl
adc
mov
cmp
and
scas
out
mov
cmp
ret
std
mov
in
or
shrl
add
rcrb
inc
mov
cmp
fmull
call
loope
cmp
test
push
push
daa
lock
and
adc
ret
rclb
mov
mov
icebp
ds
mov
cmp
xchg
scas
jg
jae
in
jmp
push
pop
test
jle
mov
sahf
xor
out
cs
movsl
push
add
jns
rcrb
mov
imul
inc
aam
pop
xchg
sub
cmc
jnp
or
stos
cli
lahf
adc
scas
in
mov
sbb
mov
pop
dec
icebp
cmp
sub
push
pop
jne
shll
mov
mov
repnz
imul
add
xchg
mov
sbb
jg
dec
dec
mov
insb
arpl
sub
cmp
adc
nop
mov
int3
mov
sbb
pop
cmc
mov
mov
es
das
jns
clc
aas
cmp
and
mov
xor
or
daa
outsl
cmp
jae
mov
aaa
inc
clc
call
pop
add
pop
cmovge
sbb
sahf
cmovne
andb
call
mov
cmp
inc
imul
push
pop
ljmp
fisubs
test
cmpsb
dec
popa
sub
ljmp
push
decl
std
pushl
xchg
aas
lcall
push
sbb
mov
cltd
pop
mov
ljmp
xchg
mov
imul
or
pop
push
and
adc
stos
dec
push
out
mov
es
jle
dec
mov
add
mov
or
sub
ret
cltd
lods
cmp
jl
daa
push
nop
add
cs
mov
mov
mov
sub
push
add
lcall
cwtl
mov
mov
ljmp
jnp
inc
inc
in
imul
mov
outsb
jne
pop
jo
dec
inc
icebp
fwait
mov
pop
jb
jg
outsb
pop
je
arpl
ficoms
mov
push
jg
fimuls
sbb
jge
hlt
test
gs
fdivp
pushl
in
xor
inc
test
ret
push
ret
pushl
dec
cli
punpckhwd
stos
nop
cmp
mov
add
push
inc
pand
jbe
cmpsb
mov
inc
clc
xchg
add
into
add
jg
lahf
sahf
pop
or
mov
test
sbb
add
jp
sub
call
pop
push
outsl
arpl
cmp
lcall
ja
das
mov
arpl
fwait
lea
sahf
pop
sbb
fildll
decl
lret
jge
lahf
sahf
jne
sub
cmp
xor
add
push
jmp
adcl
or
jo
jbe
insl
stc
and
je
xchg
cmp
mov
cltd
int3
mov
lods
mov
push
mov
movsb
jg
add
xlat
or
test
pop
cmp
lcall
lcall
pop
adc
pushf
popf
jmp
mov
sbb
adc
movq
mov
cmp
xchg
add
cmp
fwait
push
mov
dec
mov
push
cli
stos
imul
aam
call
jle
jnp
jle
pop
call
jno
je
cmc
lcall
aaa
sub
adc
in
and
dec
mov
add
fwait
dec
cld
lcall
outsb
and
das
imul
out
and
inc
jno
pop
mov
jecxz
dec
outsb
xorl
imul
push
mov
jg
cmp
je
out
xchg
addr16
out
add
scas
mov
adc
cmpsb
push
test
rcrb
push
out
inc
pop
ret
gs
mov
xor
xor
es
dec
push
daa
test
call
andb
pop
out
or
sub
lcall
pop
push
incb
jbe
int
dec
int3
jl,pt
mov
arpl
pushl
push
pop
adc
pop
and
insl
jmp
ds
jp
or
inc
je
jge
insb
ret
es
outsb
cmpsl
sbb
sbb
xchg
push
jmp
decb
xor
jbe
movsl
add
jg
mov
mov
jl
pop
jmp
dec
jl
popa
fsubrs
outsl
movl
add
mov
xacquire
fs
jmp
shll
push
out
xor
sub
and
push
xor
pop
cmc
xor
addb
daa
mov
jl
mov
jp
sub
xchg
mov
or
mov
insb
loop
jle
mov
dec
mov
stos
jnp
sub
dec
sub
push
cmpsl
popa
dec
push
push
jmp
mov
and
inc
push
stos
sti
push
test
add
fwait
je
xor
dec
add
or
pop
loopne
lea
xor
lea
and
cmp
jb
pop
and
imul
push
pop
call
lock
mov
add
inc
dec
jno
cs
jg
scas
adc
push
lcall
jp
push
pop
sbb
jo
adc
xor
pushl
mov
dec
xor
jmp
shll
pop
imul
jae
loopne
pop
cli
or
pop
rcl
dec
cli
stos
imul
push
out
stos
inc
ds
and
push
and
data16
cli
mov
insb
sbb
cmp
icebp
mov
cmp
fistpl
mov
mov
xchg
jne
popa
lret
xor
decl
aas
or
andl
mov
aaa
js
or
insb
hlt
decl
fcoms
enter
cmp
dec
pushf
mov
cs
and
push
test
inc
lods
dec
fbld
sahf
mov
sbb
es
.byte
.byte
in
mov
in
mov
movl
mov
inc
add
add
ret
int3
add
mov
or
add
test
add
push
lea
popa
sbb
add
les
test
adc
inc
fcmovu
cmp
add
test
mov
std
push
jns
mov
ret
lret
xchg
mov
setns
test
in
popa
adc
lock
test
pushf
xor
dec
push
ljmp
call
push
lea
push
insb
inc
test
jbe
shrb
mov
mov
xchg
lea
mov
push
xcrypt-ofb
cmpsl
insl
idiv
push
push
shlb
call
scas
mov
dec
push
inc
cld
push
push
dec
aaa
xorb
push
push
sbb
sub
les
mov
jge
je
jo
jl
pushf
mov
jns
je
enter
icebp
loope
pop
xorb
dec
jmp
cmp
mov
push
je,pn
push
aaa
push
jo
xchg
lea
repz
dec
cld
push
push
mov
push
out
push
lea
movsbl
push
cmpsl
rolb
fst
outsb
imulb
sub
es
inc
cs
fiadds
dec
insb
fcomps
insb
insb
les
stos
and
lods
xchg
push
ja
ret
popf
rcrl
call
add
mov
and
mov
insb
lods
insb
pop
daa
das
push
add
js
fs
in
push
test
imul
sub
nop
adc
add
xchg
rcrb
jl
pusha
xorb
addr16
mov
mov
pop
pop
dec
mov
aas
lea
mov
mov
cli
cwtl
cli
mov
mov
jne
dec
push
mov
in
mov
inc
dec
rcrb
lods
int3
push
insl
std
jbe
xchg
imul
stos
pusha
push
lea
fcomps
lcall
cmp
mov
fsubrs
push
fcoml
popf
clc
sbb
mov
or
or
or
mov
sub
mov
and
mov
push
pushf
add
mov
add
cli
insb
and
xchg
movd
jno
insb
sub
lods
je
jo
add
mov
nop
aad
jg
leave
xchg
jae
cmpsl
rorl
mov
mov
and
xor
inc
insb
lock
mov
fisubrl
cvtdq2ps
into
lock
add
adc
or
scas
jae
test
aad
mov
ret
out
dec
add
sbbb
std
cmp
add
mov
aad
cmpsl
rep
test
lea
mov
jle
rolb
cmp
lea
inc
xchg
pop
jmp
cld
mov
jmp
loope
sub
mov
movl
std
adc
jl
out
mov
mov
ret
cs
mov
nop
xchg
sub
test
clc
and
sub
mov
add
mov
push
fidivs
sub
xor
and
mov
xchg
xchg
nop
lea
fdivl
fcoms
repnz
mov
fdivr
dec
push
mov
adc
sub
imul
andl
sbb
add
clc
fcoml
add
lea
or
add
pop
sbb
pusha
or
cmpsl
xchg
push
test
test
ret
aas
rcrb
cmp
jne
cmc
adc
push
rcrl
cwtl
fcoml
add
pop
mov
pushl
add
jge
imul
push
sub
mov
test
stos
notl
push
push
sbb
and
pop
xor
lea
xchg
xchg
aas
sbb
or
push
sub
push
mov
int
sub
mov
mov
in
shll
jmp
aaa
add
dec
xchg
fdivs
sbb
and
inc
ds
es
inc
int3
lods
aam
movsb
push
enter
pop
pop
add
mov
pop
js
inc
das
push
pop
in
iret
dec
and
popa
mov
push
hlt
aas
loop
inc
mov
nopl
lea
out
mov
mov
mov
xchg
lret
lea
shrl
cmc
mov
jae
push
pop
add
jb
push
mov
add
lret
xchg
jo
mov
mov
jp
jbe
cmpsb
aas
ja
bound
cld
in
sub
les
icebp
cmp
xchg
orb
push
push
push
movsb
shrb
aaa
movsl
jnp
cmp
jns
sub
lods
lds
push
push
dec
push
xor
or
jg
sbb
cld
filds
fldenv
add
call
cmp
imul
mov
push
xchg
pushf
lret
xor
ja
pop
add
adc
fisubrl
je
push
cmp
push
stos
int3
or
pop
push
jno
pop
movsb
pop
popl
gs
jle
jmp
fs
movzwl
mov
ret
sub
cli
pop
sub
push
roll
cmp
cmc
gs
jl
jno
test
lock
and
cmpsl
xor
xchg
push
mov
jle
xor
adc
fs
scas
xchg
iret
ss
lods
jmp
xchg
sbb
add
dec
std
js
scas
pop
inc
mov
push
cli
pop
lods
add
mov
dec
adc
mov
push
mov
push
or
pop
inc
movsb
ljmp
rcrb
pop
jp
fiadds
cltd
mov
push
cwtl
xchg
test
jne
mov
ret
lods
sub
fidivrs
pop
mov
sub
fsubl
push
pop
mov
ja
or
push
ljmp
jmp
test
inc
test
inc
or
pushf
std
aam
jo
push
outsb
add
xchg
inc
fmull
faddp
mov
loope
xorl
mov
push
jecxz
ss
inc
shlb
cmp
add
lea
cmp
clc
cltd
popa
adc
cmp
btc
subps
dec
je
movsl
sbb
mov
sbb
or
or
sbb
xchg
dec
lret
das
xchg
scas
insb
shl
nop
mov
adc
cmpsl
or
push
daa
enter
push
add
fcoml
bound
jns
xchg
push
loopne
jl
jge
add
imul
sbb
lods
lds
popf
cmpsl
mov
xchg
fcomps
pop
lds
push
xlat
sub
sub
add
pop
sub
sarb
dec
xchg
pop
xor
mov
fwait
in
jmp
adc
inc
sbb
int3
lret
jno
or
fbld
or
pop
sub
call
pop
fmuls
daa
dec
daa
xchg
test
push
cmp
daa
push
pop
pop
jno
mov
icebp
fisttpll
sbb
cltd
push
mov
add
fistpll
mov
push
lea
pop
lds
enter
pusha
enter
xchg
fsubrs
add
xchg
imul
mov
push
push
push
and
aas
sbb
ret
cmp
adc
jle
add
hlt
mov
xchg
ljmp
and
mov
push
push
mov
scas
mov
flds
cmp
or
inc
inc
dec
mov
cltd
push
add
inc
jo
sub
lcall
fs
push
mov
in
pop
js
add
sbb
jns
inc
lods
or
push
shl
enter
push
leave
or
lods
fldcw
dec
lds
sub
lret
scas
jbe
mov
cmpsl
daa
cmpsb
insb
es
jb
out
in
or
je
xchg
bound
sub
cmp
dec
dec
arpl
scas
pop
sahf
mov
xchg
push
push
lret
inc
stos
dec
inc
mov
cmp
rclb
aam
lret
sbb
fiaddl
pop
je
pop
movsb
mov
push
push
pop
cmp
test
add
fisubl
outsb
inc
in
dec
scas
sbb
inc
cmpsl
and
push
mov
jne
inc
jns
cmp
push
mov
aad
jne,pn
xor
xchg
and
call
inc
gs
push
jmp
push
inc
insl
aam
js
or
pop
cmp
inc
mov
scas
dec
sub
dec
fnstcw
pop
lea
jae
movsb
jmp
jo
jo
cmpsl
lea
adc
xor
xor
or
mov
pop
ss
or
shrb
inc
push
aas
push
cs
xchg
xchg
xor
test
mov
push
popa
and
sub
mov
std
jae
ret
mov
lahf
sarl
and
aaa
xchg
lahf
and
mov
inc
stos
es
jnp
xlat
arpl
push
rol
add
adc
push
xchg
jge
sub
pop
test
shrb
mov
stos
mov
xor
sbb
dec
fisttps
lcall
jb
sbb
outsb
xor
or
sub
aas
jns
sahf
jmp
sbb
mov
rcll
mov
loope
int3
sub
sbb
lds
fistps
xchg
stc
mov
fs
mov
pushl
push
faddl
or
push
loop
iret
or
outsb
mov
or
mov
shrb
ret
outsl
sbb
xor
pusha
or
pop
sbb
jmp
push
and
jo
mov
push
rcrl
pop
cs
shl
mov
les
mov
ret
sbb
rclb
xchg
shr
fisttps
sbb
pop
pop
pop
and
adc
sarb
inc
sub
les
push
and
dec
mov
imul
inc
mov
mov
cmp
std
nop
inc
mov
xchg
push
xor
xlat
fs
cmp
outsb
leave
and
es
cmp
jo
mov
in
push
int3
mov
out
js
xor
xchg
add
or
or
call
int3
push
mov
jg
mov
jg
in
mov
or
js
pop
push
xor
push
jo
xor
lahf
jmp
lea
cmp
and
fisubrl
shlb
or
add
jmp
loopne
pop
aas
pop
hlt
leave
and
push
cmp
adc
jo
enter
mov
mov
push
repnz
mov
mov
xchg
jmp
fcmovnbe
add
stos
je
push
jmp
cmp
cltd
and
mov
xor
mov
aas
adc
jne
xorb
pop
inc
test
mov
or
mov
mov
fisubl
xchg
sub
rcrb
es
movzbl
sbb
jnp
or
mov
jae
ds
test
lea
pop
lea
dec
push
lods
cmp
or
sub
fldl
std
cld
push
sahf
mov
jo
pop
dec
cmp
sbb
mov
or
mov
loope
dec
cs
ja
jne
shll
cmp
dec
cld
push
cmp
mov
enter
js
out
jge
add
je
mov
inc
sub
outsl
push
cld
movzwl
cmp
movsl
insl
lcall
add
in
jg
or
push
cmp
push
lock
cmpl
sar
mov
adcb
lea
movsb
clc
pusha
sbb
in
jg
push
mov
push
push
mov
inc
cmpsb
orb
and
les
insb
movzwl
mov
decb
cmp
jge
sub
sub
rorb
sbb
and
sti
insb
cmc
outsb
dec
add
es
in
pop
jmp
shr
mov
lock
or
cmpl
sbb
add
add
cmpsb
roll
call
call
or
mov
in
jb
hlt
cltd
cmp
add
add
cmpl
pop
push
adc
xor
imul
roll
adc
fsubr
or
ss
and
sub
cwtl
jmp
jae
or
pop
push
les
les
fsubrl
in
in
jge
sub
imul
xchg
mov
jo
or
andl
push
xor
hlt
test
add
jne
fs
push
es
mov
mov
cmpl
and
xor
cmpsb
sbb
or
shl
out
cs
dec
jo
jmp
mov
jae
mov
call
int
inc
add
rcll
add
int3
lahf
adc
data16
shr
cmp
dec
clc
mov
rolb
mov
sar
xchg
or
inc
add
lods
xor
push
adc
jle
cmp
or
insl
push
hlt
and
aaa
ret
adc
and
adc
push
push
lock
popf
inc
cmp
icebp
not
adc
add
shll
shr
pop
fistpll
jbe
inc
add
aam
sbb
jmp
ret
jmp
or
add
sub
mov
fsubs
xchg
xrelease
adc
xchg
aad
or
call
push
scas
loopne
add
cmp
sbb
repz
data16
lods
dec
test
cld
je
test
aad
inc
sbb
addb
scas
and
sub
jmp
cld
push
xor
aas
sub
hlt
pop
push
cmp
out
in
lcall
sbb
je
mov
cmp
syscall
jo
aam
cld
pop
or
jbe
sub
inc
sbb
push
lock
adc
adc
or
out
pushl
cmp
jne
cmpb
mov
mov
pop
sub
sub
dec
add
andl
mov
call
int3
rcr
or
xor
fdivr
cmp
out
mov
scas
in
clc
sbb
mov
pop
test
loope
cs
xor
sarl
call
in
cwtl
rolb
aaa
fs
jb
in
int3
adc
insb
cli
mov
adc
dec
and
inc
das
test
cwtl
adc
bound
mov
aad
sbb
dec
pop
pop
lea
or
test
mov
adc
dec
xchg
ficoms
lea
pusha
test
mov
test
mov
aaa
xor
testb
xchg
ret
enter
cmpsl
jo
xor
pop
shr
enter
lock
into
std
dec
pushf
mov
xchg
inc
dec
xchg
cwtl
mov
test
mov
push
lcall
insb
addl
inc
mov
or
je
adc
dec
mov
rcll
mov
and
mov
and
je
cwtl
sub
addb
test
jmp
mov
call
movsl
outsb
int3
in
test
mov
and
pop
shlb
add
push
sub
push
inc
jo
or
popa
pop
add
int
sub
mov
mov
arpl
jbe
sub
sbb
xchg
js
or
jb
and
mov
jle
stc
add
outsb
dec
or
clc
int
lret
insb
addl
push
movsb
inc
jle
cmpsl
lock
add
adc
std
jae
or
sbb
mov
cmpsl
mov
or
or
xor
pop
test
push
call
sub
xchg
jns
scas
pop
or
or
jo
xchg
leave
bound
je
inc
mov
repz
jo,pn
xlat
loopne
inc
cmc
sub
and
xchg
es
popa
or
or
cmp
add
mov
sar
cld
fldl
jmp
lea
inc
imul
cltd
inc
xor
jmp
aas
aad
push
inc
ljmp
and
orl
pop
ret
and
pushf
aad
xlat
arpl
xchg
pop
andb
iret
and
shlb
popl
das
inc
and
inc
fistps
dec
mov
add
add
cmpl
mov
pop
sbb
pop
nop
push
cmp
add
mov
sbb
add
adc
setne
leave
xlat
add
mov
mov
xor
mov
imul
rolb
adc
adc
mov
lea
mov
les
jg
rol
jecxz
add
mov
xor
mov
push
add
out
xor
push
mov
rcrb
push
test
lcall
mov
pop
daa
cs
add
js
mov
add
push
dec
cmpl
jb
lret
mov
jge
add
das
pop
adc
push
hlt
mov
mov
cld
mov
roll
dec
pushf
jae
repz
sbb
cld
das
shll
dec
add
inc
sbb
fadds
add
mov
js
and
lock
sub
add
in
in
dec
or
push
out
mov
or
jp
xor
push
mov
mov
test
pushf
je
movsb
mov
cmp
dec
mov
ret
mov
and
push
jne
fiadds
lds
aam
sub
cmp
flds
inc
repnz
fs
cmp
jae
xor
je
push
add
aas
add
jno
cmp
push
adc
cmp
rolb
stos
cs
lret
adc
lock
out
mov
sub
pop
loop
enter
inc
lret
lret
adc
cmpsl
mov
rol
ror
imul
mov
insb
mov
or
scas
lods
les
fmull
mov
lods
lods
add
lcall
pop
cmpl
test
xor
test
nop
dec
test
movsb
push
es
jne
enter
mov
cmp
sbb
jns
mov
sbb
pop
shll
mov
in
or
mov
fldcw
push
sbb
popf
dec
jae
mov
fisubl
or
loop
fcoms
push
mov
xor
jo
out
push
cs
adc
lods
mov
push
jo
test
or
ret
sub
outsb
aad
outsl
int
in
scas
pop
sbb
sub
adc
sbb
loope
cltd
arpl
mov
xchg
or
xchg
or
je
daa
sbb
mov
mov
fisubl
xor
mov
fs
out
test
test
int
jb
test
mov
push
test
fistps
cmp
add
adc
cmp
fs
js
sbb
or
shll
in
out
push
mov
and
lret
fsub
fdivrl
sub
fdivs
or
dec
dec
sti
js
adc
lock
mov
lret
mov
sub
repnz
mov
in
cs
sbb
jmp
sbb
in
pop
xor
mov
jmp
clc
add
sbb
xchg
xchg
push
and
iret
cmp
push
push
cld
add
and
add
cld
sub
scas
xchg
mov
add
jae
push
loopne
lock
jmp
or
mov
xor
cs
lret
ffree
xor
aam
xorl
push
movsb
jae
sub
adc
jne
call
repnz
loopne
xchg
push
mov
movsb
insl
add
or
rcrb
shl
icebp
add
nop
out
jg
enter
lcall
jo
cmp
lret
rclb
dec
push
adc
push
enter
arpl
aas
xor
ret
je
xchg
enter
leave
add
les
xor
ror
movswl
xor
jmp
sbb
shll
les
iret
and
enter
enter
enter
lcall
mov
add
add
mov
test
sbb
out
loopne
rorb
adc
out
adcb
out
jle
inc
cltd
in
jl
or
loop
popf
out
hlt
and
or
sub
xchg
mov
jae
mov
mov
mov
in
mov
sub
dec
lahf
sbb
sbb
jmp
fcomp
pop
fmuls
xchg
js
or
leave
movsl
cli
in
fdivl
fwait
into
mov
test
inc
repz
sub
enter
fadds
or
popf
dec
push
add
jo
dec
lret
testb
in
jne
out
test
adc
sub
mov
cltd
movl
sub
push
rolb
test
cmp
inc
test
movsb
das
or
mov
sbb
jecxz
push
outsb
test
pop
push
test
shl
mov
adc
je
add
in
push
add
mov
pop
test
sbb
xchg
fldenv
test
jo
xlat
data16
rorl
outsb
or
addl
je
mov
add
inc
lcall
sub
ficomps
xchg
cld
hlt
cld
hlt
es
jo
mov
cmc
ja
sub
jmp
add
insb
add
das
test
orb
rolb
push
test
sbb
pop
inc
add
test
incl
jne
clc
add
pusha
push
rorb
cs
sahf
fsts
mov
enter
and
dec
mov
int3
xor
in
mov
ds
lock
fldl
or
add
je
mov
int
mov
pop
add
insl
aaa
mov
add
lret
mov
js
int
hlt
pop
loop
add
movsb
jp
clc
add
jecxz
nop
imul
fs
addl
lods
push
xor
and
push
scas
and
sub
mov
dec
data16
fs
push
pusha
xor
inc
sub
pop
mov
test
or
mov
adc
lret
adc
or
inc
fiaddl
fsts
dec
dec
inc
push
cmp
push
pop
pusha
rorb
pop
jmp
testb
or
cmp
jb
sbb
adc
adc
test
xlat
pusha
lods
into
cmp
add
push
jb
pop
mov
jmp
add
jle
inc
decb
dec
jae
in
pop
sub
ljmp
or
pop
movsb
fwait
cmpsb
cli
call
rcrl
jo
jle
pop
pop
jge
addb
mov
or
xor
and
jmp
ret
add
movsl
rcl
lea
fnstenv
lods
test
jle
repnz
subb
nop
cmp
rolb
fistpll
sub
sub
and
cmp
test
adc
nop
adc
sbb
sbb
jb
outsl
filds
jl
xor
xchg
hlt
pushf
mov
dec
mov
or
mov
dec
imul
sbbb
and
push
cld
pop
xlat
mov
dec
push
push
xor
or
or
and
iret
jl
popf
jb
or
add
add
jno
addr16
xor
adc
int3
xor
inc
lea
jge
cmp
add
adc
in
scas
mov
leave
sub
mov
adc
add
jbe
fsubs
or
jp
adc
and
add
add
push
lds
lea
pop
cmpsl
push
cmp
inc
psraw
cmp
cmpl
stc
sbb
xor
or
pop
push
movsb
or
inc
cmpsb
addl
addr16
cmp
xor
push
nop
xchg
xor
mov
jno
out
push
adc
add
ja
dec
jecxz
jbe
popf
or
cmc
roll
push
dec
sahf
cmc
dec
adc
insb
jnp
daa
jns
sub
ss
add
or
push
jb
jo
pop
jmp
lock
add
push
lret
cs
adc
sbb
xchg
call
jne
or
dec
push
or
js
ret
mov
cmpsb
and
inc
and
cltd
and
movsl
or
popa
and
or
xor
or
or
pop
iret
jno
mov
pop
xor
imul
imul
push
pop
pop
pusha
mov
jb
dec
popf
movsb
xor
loope
mov
aam
pop
aas
mov
shlb
enter
insb
std
adc
out
jb
nop
jbe
xor
pop
movsb
inc
or
push
ret
bound
outsl
push
dec
sub
inc
addb
pop
ja
sbb
mov
pop
push
notl
daa
add
mov
js
andps
ret
lahf
js
lds
xchg
lea
mov
jp
lods
insl
popf
repz
cmp
xor
and
mov
popf
jae
jo
andb
dec
addb
shlb
mov
decl
or
cmp
adc
nop
cmp
push
lahf
jp
or
or
dec
cmp
cwtl
repz
mov
mov
pushf
mov
or
jnp
mov
mov
push
cmpl
and
roll
je
ds
add
sbb
je
push
xor
outsl
movb
jmp
jo
push
add
in
insb
rol
push
sub
sub
stos
push
outsb
or
xchg
insb
cmp
mov
jns
inc
test
into
data16
insb
sbb
mov
fisttps
xlat
jl
pop
push
sub
or
loop
cmpl
ds
push
inc
sbb
or
add
mov
inc
mov
and
dec
jno
jno
or
mov
ljmp
cmp
fwait
push
sub
aam
jecxz
fprem1
hlt
xor
inc
push
jp
std
mov
or
mov
and
adc
push
cmp
adc
mov
xlat
xchg
leave
jl
sarb
push
mov
leave
jno
clc
addr16
or
mov
adcl
sub
dec
in
hlt
push
push
mov
cmpl
dec
mov
insb
sbb
pop
dec
dec
mov
mov
dec
sbb
inc
mov
lcall
orb
mov
add
adc
movsb
in
or
int3
test
ret
mov
add
dec
test
loope
fisttpl
adc
out
add
xchg
outsb
test
stmxcsr
fsubl
aad
pop
rorb
jno
sbb
sub
jb
pusha
add
je
sub
test
push
incl
pushf
std
insb
mov
decl
add
pop
ret
ljmp
pop
or
adc
mov
call
enter
shrb
dec
inc
add
push
add
xor
or
add
mov
and
mov
add
enter
push
push
bound
adc
cmp
mov
out
pop
xor
or
xor
clc
xor
cmp
aas
jmp
mov
in
pop
rcll
sbb
inc
stc
xchg
or
mov
testl
outsl
push
mov
lahf
mov
fsubrl
adc
pop
mov
imul
imull
sbb
cmp
fcoml
push
xor
xchg
dec
or
test
and
pop
pop
mov
sub
jo
pop
jnp
clc
mov
dec
cmp
sti
sub
outsb
fisttpl
mov
jne
cwtl
sar
xchg
inc
stos
loopne
add
aam
xlat
xchg
push
movsb
std
cmp
loop
or
std
aam
pusha
inc
mov
or
movsl
push
xor
ja
xchg
xchg
mov
mov
loope
push
js
movsl
roll
add
ss
mov
mov
dec
mov
mov
adc
jg
add
lods
fidivrl
pop
or
add
lcall
movsb
push
jl
mov
pop
add
and
mov
movsb
add
js
lods
or
loopne
popa
and
xlat
xorb
test
movsl
jmp
and
orl
xor
test
fsub
cmp
or
orl
pop
movsb
jno
sub
jge
rorl
add
cmpb
mov
lret
pushf
mov
mov
ret
or
outsb
push
jne
jmp
jmp
negl
adc
movsb
jecxz
inc
ss
jb
mov
xlat
jmp
sarl
jb
fisttpl
push
pop
sahf
xchg
loope
pop
mov
dec
adc
jge
rolb
pop
or
adc
aaa
lret
dec
mov
or
pop
xchg
dec
fstp
adc
sub
sub
and
mov
sbb
or
hlt
mov
mov
dec
xchg
iret
out
xor
fwait
jl
clc
aad
outsb
jmp
inc
cld
pop
push
addl
je
loopne
dec
xor
decb
nop
imul
frndint
xchg
or
mov
cld
lds
cmp
xchg
mov
test
dec
aas
adcl
and
stos
icebp
adc
ja
xchg
pop
sbb
test
or
adc
inc
outsl
je
imul
xchg
add
pop
call
adc
insb
or
call
rdpmc
xchg
inc
je
add
js
xadd
ret
and
lods
lcall
stc
add
add
push
lcall
push
ret
sub
pusha
add
push
in
mov
jl
sarl
lea
test
in
clc
fwait
or
push
sbb
inc
jb
pop
loope
or
cmp
pop
sub
aas
in
pop
lcall
es
cld
pop
add
push
cs
cld
ja
pusha
js
dec
mov
pop
cwtl
or
pop
add
or
pop
cltd
cmp
mov
stos
inc
xlat
lret
or
cmp
and
cltd
aas
inc
sub
or
cltd
xchg
movsl
inc
test
and
repnz
jl
push
and
iret
push
mov
lea
mov
pop
test
sahf
das
lcall
cld
clc
daa
and
adc
insl
mov
push
mov
dec
sub
xchg
adc
clc
in
mov
add
jmp
push
andl
pushf
inc
cmpsl
mov
dec
cmp
outsb
popl
xor
pop
loope
mov
jl
and
add
xor
sbb
inc
inc
pop
je
jg
push
cltd
fsubs
mov
and
cmp
add
test
cwtl
xlat
test
xor
test
fs
mov
shll
mov
cmp
test
test
cld
insb
insb
lret
push
or
hlt
cld
roll
mov
cmp
xchg
pop
push
sbb
push
push
rclb
push
mov
test
xchg
dec
add
xor
insb
out
outsl
push
notb
rcl
out
es
pop
outsl
out
sti
xchg
test
mov
hlt
popf
mov
pop
xlat
rorl
push
push
and
and
insb
lea
js
cmpsb
lcall
and
add
sti
sub
push
mov
and
clc
orb
and
push
or
out
pusha
cmp
xorb
push
orb
push
push
mov
jp
addl
jl
push
sub
xchg
aam
add
sub
test
xor
rcrl
ds
dec
and
push
pop
and
mov
pop
lea
dec
roll
push
fnsetpm(287
mov
fists
xor
lea
push
lds
and
es
sbb
sub
lcall
push
push
mov
and
mov
push
pop
out
call
out
adc
bound
mov
mov
push
xor
pushf
cltd
cwtl
sbb
lea
sbb
xchg
ret
rorb
scas
add
jle
xchg
xchg
enter
lods
inc
lock
sub
jns
add
sahf
inc
cmpsl
subb
jnp
or
movsb
aas
movsl
or
pop
adc
add
pop
xor
pop
jmp
nop
bound
xor
xor
adc
clc
js
adc
shl
and
shlb
lock
sub
and
pop
leave
inc
pusha
out
adc
jnp
xchg
pop
loope
movsb
fbstp
test
pop
insl
fs
push
push
mov
sub
pop
jno
ss
adc
scas
dec
adc
inc
aad
or
cltd
push
test
inc
jb
cli
aas
movsb
repnz
push
jo
sbb
mov
inc
es
out
mov
jmp
inc
adc
cmpl
push
mov
or
test
in
nop
mov
mov
cmc
sahf
xor
xchg
push
jb
jo
push
je
fadds
mov
ja
add
ret
pop
popf
sub
xchg
fldcw
ret
and
clc
dec
adc
std
mov
aad
jo
pop
sbb
js
and
sbb
mov
sbb
push
push
outsl
push
rcl
sbb
pop
into
nop
or
test
or
or
test
jne
lds
je
stos
mov
sub
add
pop
adc
jo
scas
sbb
sahf
add
shlb
mov
inc
pusha
and
mov
add
adc
sbb
imul
jne
imul
inc
xor
xchg
jne
inc
sub
cmp
jb
insl
add
xor
cmp
and
jno
jo
push
push
shl
jl
popf
out
loop
xorl
sub
add
outsl
xchg
mov
push
ret
add
out
sub
outsb
sub
js
push
inc
pusha
push
call
mov
test
sarl
fwait
add
add
sbb
mov
popf
jne
xchg
clc
push
sahf
out
cmp
pop
fisubrs
out
frstor
pop
lods
jo
aad
cltd
jb
int
in
loop
cwtl
addr16
popa
xor
dec
mov
or
sbb
ret
xor
add
pop
fmull
mov
es
add
mov
dec
cmp
sbb
mov
mov
mov
in
cmp
pop
cmp
aaa
bound
popf
in
aaa
in
mov
adc
pop
mov
jne
pavgw
mov
mov
pop
movsb
pop
rolb
sub
sbb
sbb
add
xchg
add
sub
or
fisubs
insb
inc
adc
mov
sbb
jmp
pop
scas
jo
xchg
outsl
mov
sbb
lods
xlat
testl
inc
sub
xor
leave
mov
roll
daa
lea
iret
xchg
iret
xchg
push
inc
sbb
pusha
pop
aaa
fwait
mov
test
dec
fadds
daa
inc
push
pop
test
mov
rcl
icebp
test
mov
lea
inc
or
mov
and
addb
add
dec
mov
push
push
sbbb
mov
mov
adc
stos
pop
rolb
std
jne
add
jno
xchg
mov
xchg
mov
popf
mov
mov
lret
jecxz
pop
pop
insl
and
cmp
sub
pop
push
push
pop
jb
je
stos
add
jns
jmp
stc
jb
cli
adc
cli
adc
in
jnp
loope
push
jns
std
sti
mov
iret
sub
dec
mov
pusha
add
mov
adc
add
pop
movsb
nop
lret
dec
mov
sarl
adc
lods
iret
inc
test
je
or
xchg
cmpl
mov
and
cmpsl
loope
sub
in
or
lods
test
addr16
inc
xchg
pusha
adc
xchg
pop
jg
push
ja
jl
pfrsqit1
add
dec
insb
or
and
dec
fidivrl
insb
jns
fcmovbe
pop
push
dec
movsb
mov
inc
lods
sub
jecxz
or
jo
cwtl
sbb
mov
and
xor
mov
and
adc
nop
call
mov
adc
jb
fbstp
mov
xor
es
lds
or
sub
pop
xor
fisttps
sub
jmp
in
mov
cmp
mov
nop
mov
jmp
or
movsb
sub
jnp
mov
push
or
repnz
pop
inc
out
out
aaa
sbb
inc
cld
cmp
test
inc
lock
and
outsl
nop
fdivrl
lcall
out
loopne
fbstp
add
je
jmp
or
shll
dec
or
movsb
in
imul
daa
subb
jnp
or
sahf
fwait
xchg
inc
mov
out
jo
or
mov
or
or
add
shll
imul
addr16
add
adc
cwtl
hlt
mov
cmp
clc
and
stos
outsl
lods
fistl
loope
or
addr16
pop
out
or
sahf
popa
jmp
mov
adc
mov
cmpsb
push
mov
push
xchg
je
add
mov
pushf
add
add
or
js
or
mov
call
mov
jnp
cwtl
sub
mov
or
sub
inc
pop
add
lea
cmpsb
lret
add
add
sub
repz
fucom
xchg
dec
mov
add
xchg
fstps
mov
add
push
push
mov
adcl
pusha
aam
add
loopne
sbb
mov
pusha
and
test
mov
pop
sub
cmc
shlb
or
adc
imul
jne
inc
pop
adc
push
sub
adc
adc
sub
loopne
jl
sub
adc
loopne
ljmp
push
dec
add
sub
in
iret
adc
adc
dec
shll
fdivr
call
dec
sub
cmc
loopne
xchg
jmp
xor
and
mov
pop
pusha
pop
pushf
sub
dec
addr16
lods
loope
adc
jl
femms
fbstp
pop
sub
popf
or
andb
pusha
in
je
fisttps
subl
shlb
push
ret
jg
jmp
push
nop
dec
in
xor
add
xchg
xchg
jg
lock
out
leave
add
or
dec
sbb
mov
sub
stos
pop
fsubrs
add
pop
jl
jo
cmp
mov
pusha
out
lods
cmc
xor
pop
jb
call
xchg
popf
inc
mov
stc
data16
js
push
lahf
flds
pop
adcb
adcb
cwtl
add
add
push
gs
shlb
pop
push
int3
xchg
cmpsb
shrb
push
fs
sub
push
inc
xor
loopne
adc
or
or
pcmpgtd
xor
call
add
out
fprem1
int3
stc
mov
mov
cmpsl
inc
inc
mov
inc
xchg
adc
ljmp
pop
nop
scas
or
mov
push
jl
mov
or
and
jo
je
loopne
push
adc
adc
je
push
and
mov
jbe
jbe,pt
sub
fwait
sbb
pop
js
mov
jno
dec
pop
mov
aas
xor
add
mov
jo
clc
and
rcl
je
xor
shll
insl
loopne
cmp
mov
push
movsb
mov
add
pushf
or
adc
stos
cltd
shlb
shll
pop
cmp
mov
ficompl
shrb
add
lds
rcl
into
enter
fistpll
dec
pop
and
loopne
rcl
loopne
out
adc
sbb
xor
pop
sub
inc
inc
fidivrl
movsl
sbb
loope
insl
cmp
mov
sbb
pop
shrl
pop
xor
xlat
mov
std
or
adc
lahf
loope
xchg
or
or
ret
add
adc
movsl
push
hlt
push
sub
dec
nop
int3
int3
sti
pop
or
shr
xlat
cmp
sbb
scas
popa
add
pop
lea
and
cmp
sub
neg
mov
push
mov
scas
ret
adc
mov
fsubs
and
mov
shl
setge
mov
outsb
loopne
imul
sub
enter
pop
xchg
adc
jne
rcrl
xor
or
arpl
arpl
jmp
and
jmp
into
add
loope
nop
pop
mov
jl
sub
dec
xchg
push
unpcklps
push
and
xchg
ljmp
idiv
push
adc
decl
push
js
lods
mov
xchg
add
jns
idiv
add
add
push
pop
or
adc
or
add
or
rclb
add
adc
push
mov
cli
jbe
je
mov
push
push
lcall
xor
stos
jl
idivb
pushl
loope
add
fucomip
mov
nop
mov
and
stc
jns
sbb
cmp
xor
lahf
adc
or
add
dec
cs
and
jns
mov
mov
frstor
push
jb
or
inc
stos
xor
push
xor
cld
xor
test
cld
cwtl
fisubl
adc
add
les
cmp
dec
push
cmpsl
push
shrb
mov
push
jne
rorl
clc
xchg
lock
sbb
cli
fidivrs
fiadds
mov
pop
pop
popa
rorb
data16
in
pop
jbe
mov
adc
scas
rcll
and
fwait
into
lds
push
fiaddl
add
cmp
repnz
push
add
cmpl
add
arpl
inc
movb
xchg
inc
pop
xchg
test
pop
add
sbb
or
jl
and
sub
xor
add
xor
ja
or
cwtl
sahf
xor
ljmp
stc
mov
adc
push
repnz
xor
jl
mov
xor
xor
xchg
je
je
mov
div
push
sbb
sub
and
insb
stos
xchg
out
sbb
xor
stc
add
dec
es
test
iret
cmp
stos
push
xchg
adc
and
add
insl
fcomps
mov
mov
repz
sahf
jbe
adc
inc
or
adc
cmpl
dec
pop
xchg
dec
ficompl
cmpsb
cltd
cmpsl
or
jl
add
cmp
push
sbb
mov
xor
stos
adc
and
inc
mov
inc
mov
pop
loopne,pn
push
and
push
jbe
pop
cs
nop
cmp
pop
push
in
bound
addb
popf
arpl
jmp
cs
lods
sbb
mov
jnp
sub
cwtl
xor
setl
push
das
adc
mov
push
or
jge
das
cmp
shll
cmp
push
cwtl
mov
subl
pop
cmp
mov
loop
jne
jmp
adc
js
inc
or
sub
xor
aam
pushf
or
je
shr
jmp
mov
push
adc
xor
fsubr
cwtl
jns
jmp
fisttpll
pop
ror
es
clc
xchg
int3
and
adc
add
push
movlps
xor
jne
enter
or
push
or
popa
ret
push
loop
cmp
bound
icebp
sub
stc
add
cmpsl
inc
je
int3
into
test
and
cmp
sahf
cmpsb
sbb
pop
imul
ret
add
pop
or
lret
jp
ret
inc
test
int3
push
andb
pop
xchg
or
cli
adc
inc
je
mov
das
or
push
mov
inc
arpl
xor
mov
dec
xchg
popf
shll
jbe
loope
dec
ja
add
fstps
leave
push
mov
or
xor
cld
fnsave
ret
jmp
xor
mov
add
and
popl
in
dec
mov
or
in
add
shll
pop
adc
xchg
rcrb
or
inc
sbb
dec
adc
mov
add
push
sub
js
decb
setp
popf
incb
pop
add
add
pop
add
into
add
mov
lock
pop
popa
in
mov
sub
and
rcll
rorb
jne
fadds
dec
clc
add
dec
cmp
lods
in
pop
cmp
clc
jmp
xor
outsl
cs
orl
sub
mov
fists
pop
xchg
add
push
add
jmp
les
pop
mov
push
stc
pop
add
sub
add
mov
sub
push
push
mov
cmp
stc
jbe
adc
jb
psubusb
sub
adc
push
fsubrl
mov
xchg
sbb
add
out
rorb
cmp
stos
lds
sbb
sahf
xorb
adc
in
xchg
adc
aaa
adc
push
mov
lcall
pop
push
insb
popa
add
mov
add
arpl
push
das
lahf
rolb
sub
scas
lock
and
or
lea
stc
mov
hlt
stc
je
mov
hlt
and
jg
lock
mov
jmp
mov
aas
cmp
xor
mov
dec
je
mov
mov
sbbl
jp
adc
repnz
sub
scas
mov
sub
cmp
pop
jne
mov
call
aam
adc
add
cld
dec
test
loope
inc
scas
push
les
mov
das
and
push
in
pop
add
icebp
inc
arpl
icebp
xchg
push
sbb
jle
daa
and
cmp
aas
and
aaa
push
lock
inc
hlt
push
push
imul
push
popa
pop
gs
testb
and
hlt
rorl
jmp
and
adc
sbb
stos
mov
cld
ret
add
push
pop
movb
jmp
push
icebp
add
and
push
addl
add
inc
in
add
les
xchg
add
pop
mov
cli
icebp
popf
inc
sub
lcall
jae
sarl
and
inc
cmp
and
xor
jle
or
or
lods
add
add
xchg
add
or
lcall
movsl
inc
or
jge
inc
mov
pop
jbe
loopne
inc
mov
xchg
push
clc
pop
addr16
icebp
outsb
sub
lea
hlt
pop
push
pop
loopne
add
call
adcl
sbb
pusha
xchg
pusha
rorl
adcb
je
orb
dec
inc
fistpll
or
hlt
pushf
add
nop
dec
insb
pop
or
es
mov
pop
and
inc
or
or
push
loopne
sarl
int
xchg
jne
pop
mov
fcompl
mov
fs
icebp
adc
icebp
in
andl
and
pop
jl
xchg
lods
inc
add
das
adcl
add
pop
sbb
push
push
push
in
lea
sbb
xor
lock
push
pop
fcoms
pusha
das
or
dec
call
add
push
mov
loopne
cld
rol
mov
push
mov
adc
cmp
push
sbb
push
scas
in
pop
inc
push
xlat
divb
or
adc
popa
mov
test
hlt
cmp
jne
scas
mov
mov
movsb
push
js
add
mov
push
loopne
push
pushf
mov
scas
movsb
ds
std
push
adcb
adc
rorl
inc
scas
mov
into
in
or
lods
test
les
mov
addr16
cmpsb
xor
jmp
xchg
leave
sti
and
or
mov
cs
pushf
xor
or
shrb
pop
sub
or
jl
cltd
nop
push
bound
out
or
mov
xor
dec
das
loope
or
enter
je
adc
or
sbb
jo
mov
mov
push
fmuls
out
cmp
or
fwait
push
inc
push
pushf
mov
call
and
bnd
add
add
cmp
jnp
and
sbb
cmp
mov
sbb
push
push
mov
xchg
pushf
pop
repnz
or
sub
and
test
mov
cmp
adc
dec
mov
repz
test
mov
push
xor
rorb
add
push
xchg
add
push
add
js
adc
dec
xchg
or
mov
sbb
clc
or
outsb
add
mov
pop
mov
stos
xor
faddl
or
arpl
inc
add
popf
mov
out
mov
pop
push
adc
and
hlt
push
mov
orb
and
jecxz
push
inc
in
jmp
in
sbb
inc
sub
mov
push
adc
pop
js
cmpsb
repnz
cmp
out
in
push
mov
dec
test
or
mov
adcl
xor
inc
insl
push
sub
dec
dec
outsb
and
add
pop
sbb
mov
fildl
and
ss
mov
adc
adc
push
push
mov
pushf
into
xchg
hlt
sar
add
sahf
or
ret
jg
sbb
hlt
xor
inc
imul
cmpsl
imul
or
std
dec
adc
push
loope
add
lea
shl
sbb
pop
jle
hlt
out
loope
inc
ret
mov
pop
jp
sbb
das
push
pop
pop
clc
ret
sti
lds
xchg
pop
mov
outsb
and
add
sub
add
pushf
mov
mov
add
sub
xor
sbb
jne
in
cs
icebp
pop
add
es
adc
mov
add
inc
loopne
xor
or
mov
setne
fidivrs
sub
out
and
mov
sbb
cmp
sub
jbe
adc
aaa
push
test
in
push
jbe
adc
mov
adc
dec
jl
add
mov
inc
xchg
sti
adc
dec
or
adc
in
loopne
imul
addr16
addl
fdivrl
fsub
jecxz
shl
fs
pushf
cmp
leave
mov
fadd
jb
dec
into
add
pushf
cmp
lret
movsl
xor
pop
or
add
int
push
mov
and
push
ss
and
cmp
shlb
mov
mov
jmp
inc
xor
shl
push
icebp
adc
daa
dec
dec
jnp
add
inc
xlat
push
loopne
xchg
xchg
inc
add
inc
lods
movups
xchg
aaa
dec
loope
xchg
xchg
push
in
mov
loopne
fsub
add
pop
jne
out
cmp
push
bound
inc
jb
arpl
sbb
nop
mov
roll
or
or
orb
aas
enter
add
and
ficoms
movsb
add
mov
test
adc
shr
lock
das
test
sarl
mov
movsl
sbb
pop
lret
mov
cmpl
and
adc
sbb
leave
cmp
jnp
insl
or
out
sub
stos
pop
aam
sbb
lea
rcrb
in
lret
add
and
daa
mov
rcrb
loopne,pt
ds
dec
sbb
jmp
mov
sub
das
and
mov
or
test
cmp
inc
adc
mov
mov
ret
test
or
jbe
lods
es
dec
mov
into
jbe,pt
fmull
out
mov
inc
negl
adc
ljmp
test
test
add
adc
shr
and
imul
adc
test
push
sahf
popa
int3
int
jmp
jbe
pop
dec
hlt
jge
enter
cli
mov
add
scas
jno
in
add
push
movsb
xchg
add
insb
lds
jmp
pop
out
sbbb
in
cs
repnz
cmp
dec
jge
insb
nop
or
insb
insb
push
and
jmp
sub
jae
out
jne
push
xlat
inc
test
adc
neg
mov
dec
or
pop
dec
or
mov
shl
push
or
push
pop
cmpsb
cmp
out
fsub
adc
dec
shrb
and
xchg
dec
in
inc
sbb
push
pushf
rolb
sbb
xlat
inc
cmp
je
mov
in
ljmp
repz
cmc
push
inc
jmp
cwtl
and
fdivs
loopne
inc
out
stos
or
push
cmp
add
adc
xchg
mov
fcoms
dec
xchg
jne
scas
mov
xor
lods
ss
fsubr
jbe
mov
sbb
shl
inc
cmp
push
adc
xchg
loopne
cmp
jmp
mov
sub
fsubs
mov
push
or
imul
rcll
aam
mov
ret
dec
sbb
fcomps
or
sbb
xor
cmp
dec
mov
or
mov
pop
adc
xor
mov
fcoms
jb
mov
rorl
jne
daa
dec
jne
dec
jne
or
pop
adc
mov
ret
xor
pop
jo
ret
adc
sub
inc
loopne
sbb
ds
jl
mov
sbb
std
jb
mov
testl
push
mov
loopne
jne
stc
jae
cmpsb
adc
test
jb
inc
add
add
sub
imul
add
lods
aas
lret
xor
add
outsb
adc
cmp
push
pop
add
adc
subl
out
fcomps
repz
pop
inc
adc
pop
aad
pop
sub
pop
fldcw
shrb
mov
div
or
arpl
shll
inc
mov
add
dec
sbb
lcall
sub
and
xorl
sub
sti
fadds
fnsave
cmp
mov
mov
mov
jmp
pusha
insb
pop
sbb
jo
sub
lret
std
and
out
je,pn
or
add
int
cmp
cmp
repnz
shl
jmp
jmp
daa
lock
ja
dec
push
add
xor
ja
push
hlt
jmp
pop
pop
or
xor
xor
jo
fwait
jp
sbb
dec
mov
cmp
push
in
mov
aad
and
loop
movb
je
adc
jmp
cmpsl
cs
push
test
dec
push
add
and
push
ds
stos
daa
or
push
stos
test
mov
adc
ret
call
push
pop
lea
push
xor
push
lea
in
mov
add
addb
sub
dec
ja
fbstp
icebp
cli
shl
lret
insl
add
dec
movsl
cwtl
inc
js
add
sbb
ja
inc
pop
mov
push
adc
int3
adcb
jmp
mov
push
or
iret
dec
mov
lods
sbb
or
push
push
sub
push
inc
adc
push
push
int3
mov
adc
loopne
repnz
or
add
inc
repnz
adc
pop
and
inc
bnd
sbb
das
sbb
gs
cs
sbb
or
sub
cmp
mov
enter
aam
nop
lret
dec
clc
push
shr
xor
icebp
adc
jnp
fdivs
xor
inc
pop
cmpsb
mov
sub
arpl
push
xor
xchg
mov
xor
mov
sub
xchg
stos
or
in
sbb
dec
xor
nop
int3
mov
in
mov
loopne
or
subl
cmp
xor
pop
dec
xchg
inc
sub
insb
push
imul
cmp
cmp
test
push
mov
push
mov
mov
and
test
loopne
hlt
dec
jl
adc
movsb
or
mov
mov
or
test
stc
xchg
insb
movsb
xor
adc
lods
add
pushf
mov
fists
int3
xor
enter
in
push
scas
cld
xor
and
mov
xor
mov
xor
mov
xor
jge
movsb
sbb
and
cmp
jns
orb
mulb
aad
js
cs
mov
test
rorb
xor
sarb
adc
stc
sub
clc
and
dec
xor
into
enter
nop
pop
imul
out
mov
divb
mov
pop
xchg
leave
test
das
mov
outsl
enter
fldl
xor
adc
int3
pop
or
leave
cltd
dec
pop
pusha
hlt
push
scas
adc
les
ja
push
pop
sbb
and
sbb
pop
shl
cmp
inc
jg
push
lock
or
xor
mov
xchg
add
xchg
movsb
out
adc
stos
pop
call
or
pop
mov
cmpsb
cmp
or
push
scas
or
rorl
insb
sbb
xor
fs
adc
arpl
mov
call
lock
lahf
xor
mov
sti
cld
shl
push
mov
gs
ret
mov
jbe
and
or
lock
ds
ret
lock
shlb
lock
mov
fmuls
push
cmp
jl
outsb
dec
hlt
cmp
add
or
mov
jmp
lcall
movsb
loopne
jne
pop
jle
adc
into
sbb
mov
adc
pop
mov
mov
arpl
call
das
mov
inc
rorb
aad
loop
loopne
mov
test
jg
cmp
imul
imul
mov
jmp
sti
clc
push
fisubrl
shrl
mov
js
and
into
add
jns
loopne,pt
inc
pop
xor
pop
sarl
sbb
decb
pop
bound
xor
mov
decb
decl
call
xchg
sbb
movl
mov
pop
or
mov
jo
ret
xchg
xor
movsb
pop
sbb
mov
lock
sbb
cmp
sub
or
lret
mov
mov
or
dec
dec
popf
add
jne
fistpl
jmp
cmc
cld
sahf
inc
add
add
dec
mov
or
sahf
xor
adc
push
sub
loopne
inc
jb
loop
jne
cmp
dec
sub
sbb
jmp
dec
and
sub
mov
sub
sahf
rcl
mov
mov
xor
jne
mov
sub
sahf
mov
push
adcl
mov
data16
dec
punpckhbw
or
add
ret
cmp
clc
inc
mov
jmp
cltd
lea
roll
jg
and
icebp
push
push
pop
jge
sti
push
pop
adc
add
pop
jne,pn
pop
adc
cmp
and
rolb
cmovbe
fcom
shlb
jns
hlt
jge
dec
dec
pusha
dec
hlt
push
decl
fcmovnb
fisubl
je
pop
xor
jbe
and
dec
sbb
hlt
dec
fucomp
push
lea
fwait
shrl
cs
or
sub
inc
lahf
and
hlt
or
pop
in
jmp
cld
lret
jmp
xchg
adc
cld
push
stos
sub
push
adc
and
pop
mov
int3
xor
mov
push
mov
sbb
or
loope
xorb
pop
jg
cmp
loopne
add
pusha
push
jbe
add
add
add
ja
jge
addl
addr16
subb
dec
mov
lods
xlat
inc
add
out
lea
push
stc
ds
out
xchg
inc
add
sub
loopne
jg
mov
mov
mov
add
aad
pusha
jp
push
push
jmp
push
inc
sarl
sbb
call
test
xor
test
insl
sub
and
cld
mov
xor
shl
cmp
and
pop
pop
pusha
pop
push
ljmp
mov
adc
adc
sbb
inc
or
pop
cmpsl
ret
sub
movsl
pop
mov
sub
mov
pusha
mov
jmp
push
repnz
test
adc
shl
pushf
or
int3
movsl
dec
mov
dec
aad
push
shlb
hlt
dec
loopne
lret
pop
sahf
adc
faddl
pop
fs
cmpl
int3
push
push
xchg
push
push
pop
ror
mov
cmp
or
rolb
stos
jnp
hlt
adc
cmp
and
add
int3
lds
daa
rol
cltd
movsb
pop
sbb
int3
mov
cmpxchg
adc
les
lock
xor
addl
xor
lock
jl
inc
mov
push
dec
inc
dec
lods
xchg
mov
sbb
and
in
imul
adc
data16
push
mov
xchg
enter
mov
sub
mov
int3
inc
aas
movsl
mov
stc
mov
add
pusha
add
jo
push
xchg
inc
pop
hlt
addr16
mov
add
add
nop
mov
pop
pop
je
adc
push
and
dec
add
xor
adc
inc
pop
and
inc
or
cmpsl
mov
rorb
popf
cmp
mov
pop
pop
clc
add
adc
or
ljmp
and
popf
push
pop
sbb
cs
add
sahf
xchg
push
pop
or
test
ret
inc
or
pop
mov
or
xchg
and
mov
loop
pop
adc
push
lcall
push
push
and
and
movsl
repnz
adc
loopne
xchg
iret
loopne
dec
pop
dec
jg
leave
mov
pop
cs
dec
dec
push
push
pop
cmp
xor
mov
outsb
lods
sub
mov
cltd
pop
add
jo
into
sub
or
mov
movsl
mov
repnz
and
jo
lods
jge
jnp
arpl
int3
add
shrb
dec
dec
stos
xchg
mov
lcall
push
pop
mov
mov
cli
pop
inc
sbb
out
add
mov
xor
movl
std
arpl
and
inc
or
cwtl
inc
loopne
pop
inc
test
dec
gs
pop
cmp
cmp
add
mov
sub
lahf
sarb
push
lea
sub
cmpsb
mov
xchg
test
mov
pop
sbb
jmp
mov
add
jg
arpl
out
push
or
pop
ret
mov
loopne
dec
fistpll
lcall
add
xor
jo
cmpsb
ss
aaa
clc
mov
dec
stos
ret
outsl
add
inc
cmp
mov
sbbb
jb
and
stc
hlt
sub
nop
add
mov
adc
cmp
push
pop
enter
jmp
dec
repz
orb
sbb
cld
or
push
test
sbb
out
mov
inc
pusha
test
fst
imul
push
stc
or
loop
loope
lock
push
int3
pop
add
cs
movsb
movsb
lret
jo
adc
ffree
sub
out
mov
stos
ja
loopne
test
jne
int3
mov
shlb
wbinvd
push
popl
dec
mov
test
push
mov
mov
mov
push
dec
jns
cld
sbbl
js
aam
jno
sbb
mov
and
movsl
mov
push
or
std
fdivr
push
rcll
repnz
cmp
adc
push
pop
sbb
xor
add
flds
or
clc
jmp
add
jmp
sar
mov
push
shll
pop
test
jne
scas
mov
enter
jl
pop
test
cli
push
les
in
cmp
sub
dec
aaa
sbb
scas
jae
sub
push
cwtl
stos
vpsubw
add
mov
add
push
cs
call
shll
mov
or
hlt
add
jo
pop
dec
dec
or
add
push
xchg
push
stos
pop
sbb
int
push
push
pop
jnp
push
hlt
lea
mov
lea
nop
out
dec
sub
push
sub
and
es
sahf
mov
dec
data16
daa
lods
inc
ret
vpackuswb
cmp
imulb
arpl
cmp
dec
xor
loopne
call
push
xor
cmp
es
movsb
mov
push
xchg
cld
leave
pop
xor
xlat
insl
mov
mov
repnz
adc
jecxz
iret
lcall
in
lahf
xor
xchg
and
dec
dec
xor
cmp
stc
dec
cmpsl
push
inc
loopne
inc
jo
push
sub
lea
push
sub
jecxz
or
dec
xor
add
cmp
sub
adc
enter
and
mov
ret
popf
test
push
mov
test
cmp
aas
int3
pop
xchg
sbb
sbb
dec
sbb
outsl
mov
xor
push
inc
lds
sub
and
pop
xor
and
ret
leave
in
dec
test
jl
aam
stos
ja
add
jl
push
adc
loopne
ror
movl
jl
outsl
loope
pop
jne
inc
pop
inc
adc
push
jmp
pop
pushf
in
inc
scas
push
imul
push
jns
in
sbb
pusha
sbb
xchg
adc
xor
je
xor
jg
imul
mov
shlb
je
es
add
or
fidivrl
test
idivl
in
push
adc
or
sar
sbb
xchg
adc
es
adc
sub
shll
sub
mov
push
dec
push
addr16
mov
pop
push
andb
push
clc
mov
sub
mov
sar
stos
je
mov
adc
clc
sub
adc
lock
jecxz
push
pop
outsl
jae
push
pop
push
lds
jecxz
in
sub
ficoml
jo
pop
mov
add
xor
sbb
decl
jnp
das
fstpt
or
and
lods
repnz
mov
push
outsl
js
sub
test
hlt
aam
fs
cmp
push
mov
mov
mov
loope
xchg
inc
std
sub
mov
push
enter
xorl
adc
cmpsb
or
or
push
add
or
sub
push
jp
sar
push
lods
lea
push
xor
or
or
push
sub
xchg
mov
or
stos
stos
or
lock
lret
pusha
lock
adc
and
jo
decb
movsl
dec
jp
adc
mov
mov
jg
pop
add
jl
mov
add
shl
jmp
into
pushf
mov
adc
dec
cmp
sub
jne
push
fisttpll
push
loope
or
jne
dec
adc
rorb
push
pop
add
inc
stos
add
push
and
scas
or
add
test
adc
inc
xor
xchg
add
lret
add
push
add
mov
sarb
aas
dec
inc
xor
push
call
aaa
sti
add
sub
jno
insl
mov
jp
mov
movsl
mov
push
imul
add
idiv
outsl
stos
sbb
pop
popf
es
js
lods
ror
enter
mov
xor
lret
leave
je
je
jo
or
imul
push
mov
adc
hlt
push
push
mov
insb
stos
mov
push
add
mov
cmp
mov
outsl
test
sbb
mov
call
jne
jge
push
mov
fadds
mov
dec
mov
test
loopne
cwtl
sub
cmovl
cmp
or
and
mov
dec
cwtl
pusha
je
pushf
shl
xor
cmpsl
fs
sbb
daa
push
jle
pop
or
and
movsl
pmulhw
fcoml
push
push
sarb
in
sub
clc
jle
and
adc
pop
mov
mov
cmp
rcll
mov
sarb
mov
daa
dec
jo
lods
lods
lret
fldt
xchg
jl
pop
jge
mov
cmpsb
and
pop
sbb
mov
test
test
into
cmc
adcb
sbbl
jp
jo
or
cltd
idivl
orb
out
sbb
lret
es
shll
dec
jmp
cli
scas
adc
mov
addb
inc
loope
vmwrite
in
xchg
ret
call
jae
lock
pop
xor
mov
test
and
pusha
movzbl
pop
jg
pop
lock
lret
jge
push
mov
pop
push
ja
mov
lods
andl
jecxz
push
aad
in
data16
or
push
jp
sbb
mov
dec
mov
mov
hlt
mov
pop
mov
xor
add
dec
movsl
add
mov
inc
lock
movsb
inc
cwtl
push
cs
mov
lods
cltd
movsb
mov
mov
jle
cs
jge
clc
sub
decb
pop
jmp
add
add
sbb
rcrl
aam
fcomp
dec
cmc
mov
xchg
cmp
inc
stos
les
jne
add
jbe
ja
sbb
add
leave
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
int3
lods
in
pop
sbb
mov
arpl
enter
sub
add
inc
in
dec
jns
or
in
ds
popa
jmp
cli
inc
mov
imul
or
int
pop
shrb
in
xchg
test
call
xlat
add
and
pusha
shrl
scas
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
mov
mov
insl
sti
mov
push
cmpl
or
fwait
ja
je
mov
push
xor
out
ficoml
sbb
add
sbb
adc
pop
jg
and
mov
imul
shlb
ds
roll
dec
xchg
jmp
push
xor
push
xchg
dec
shlb
lahf
loope
push
add
dec
rol
push
and
outsl
mov
adc
push
xchg
add
push
or
inc
and
jbe
jl
adcb
and
push
leave
inc
jno
add
xchg
cmpb
aas
pop
or
add
xchg
jne
sbb
les
rclb
sub
or
loopne
mov
mov
cmp
loop
loop
int3
clc
imul
pop
notb
pop
call
adc
xchg
inc
lds
lret
add
push
inc
xchg
lea
cs
jmp
lret
xorl
sub
sbb
das
sbb
and
add
sarb
shlb
adc
push
mov
je
sbb
xor
cmp
fadds
dec
sbb
add
insb
jnp
jge
push
stos
lea
push
mov
jns
lea
sbb
xchg
std
aam
sbb
add
rcl
add
arpl
mov
adc
jne
xor
sub
repz
pop
adc
mov
mov
xor
int3
inc
das
shll
in
mov
movsl
adc
inc
or
cmp
std
and
or
lds
cltd
fdivrs
fidivl
lods
pop
and
enter
or
cli
loopne
addb
inc
dec
dec
xor
mov
adcb
add
pop
jo
or
fdivrl
rcrl
mov
or
jne
cli
or
and
fmul
push
dec
cmp
mov
adc
rolb
test
push
xor
push
inc
fimull
dec
mov
int
stos
pusha
out
int
mov
fisubl
arpl
jno
jmp
fnstsw
push
sbb
pop
fwait
loop
or
dec
dec
in
sub
pop
out
and
loop
nop
call
push
nop
mov
dec
sbb
push
add
lods
mov
test
jmp
lahf
or
cmpsb
nop
mov
add
and
mov
and
test
xchg
jbe
or
loopne
jmp
rolb
jge
leave
dec
add
inc
or
inc
jnp
jne
sbb
push
inc
add
mov
mov
xchg
popa
ficoms
ss
xchg
cld
push
popf
or
loopne
sub
dec
and
test
or
test
add
aas
sbbl
push
ss
inc
xlat
shrb
or
sahf
mov
bound
cmp
aas
test
adc
in
or
movsb
out
hlt
push
dec
jge
dec
inc
subl
sti
add
shlb
xor
mov
mov
sub
xchg
push
dec
hlt
adc
and
pop
add
mov
iret
lods
sbb
lcall
jb
cmp
sbb
push
dec
pop
ret
xor
sub
pusha
adc
cmpl
mov
mov
xchg
push
xchg
push
or
rclb
or
call
pusha
mov
mov
subb
clc
jg
mov
and
cld
nop
lea
dec
fiaddl
mov
cmp
repz
mov
pop
cmp
push
cli
cs
mov
jl
mov
loopne
hlt
hlt
xchg
mov
stc
cmp
jne
push
movsb
lcall
jmp
movsl
rclb
mov
jmp
je
jp
hlt
test
and
stos
bswap
test
pop
adc
lahf
out
orb
js
imul
add
xchg
lahf
mov
inc
shl
je
adc
and
inc
fsubrl
mov
fmul
test
pop
inc
jge
cld
push
or
mov
or
inc
loopne
dec
jmp
dec
loop
inc
ud0
lock
sbb
push
cmp
xchg
pop
ficomps
jbe
push
ret
in
add
cmpb
push
xor
xor
mov
std
out
pop
adc
incb
stc
sub
lea
bound
push
push
mov
inc
dec
jne
test
pop
jne
dec
mov
and
mov
sub
mov
push
fcompl
push
mov
mov
adc
js
push
out
clc
sbb
jne
dec
sbb
xor
push
push
movsl
call
jne
cmpsb
mov
dec
call
scas
jnp
out
push
pushl
mov
xor
je
mov
in
fld
es
jge
sbb
sti
inc
mov
aam
dec
lea
cmp
sbb
inc
jmp
push
xor
push
divb
leave
cld
popf
sar
xor
cmp
fs
jge
xor
pop
dec
stc
inc
leave
ret
or
jg
daa
or
mov
push
push
mov
jne
cmp
hlt
and
dec
jle
pop
enter
mov
push
sub
mov
rcll
or
mov
jne
movl
mov
push
push
mov
pop
sbb
mov
adc
movsb
loopne
rcll
scas
shlb
push
shlb
dec
and
into
aam
xor
inc
and
test
or
inc
jno
lods
pop
std
or
xor
fldenv
or
rorl
push
mov
cmpsl
data16
cmp
loopne
rorl
lret
or
mov
or
mov
rcrb
add
push
les
mov
not
and
mov
and
clc
push
jb
mov
pop
xchg
mov
cmovge
add
add
add
add
cmc
jl
mov
addl
mov
mov
arpl
loopne
leave
loop
pop
xchg
push
jno
push
fs
mov
maskmovq
testl
jne
add
jb,pt
push
pop
or
mov
xor
pusha
lock
movsl
fld
inc
add
pop
cld
mov
fs
loop
add
mov
mov
push
add
add
shlb
adcl
push
inc
inc
mov
mov
rol
into
sbb
jbe
jbe
leave
dec
dec
cli
jns
adc
inc
add
addl
clc
jo
add
inc
inc
div
das
xor
jno
fadds
push
js
add
mov
xchg
xor
and
sbb
leave
sub
fadds
andl
imul
push
push
mov
xchg
ds
out
jle
mov
sahf
enter
addb
int3
push
rcr
adc
sub
jnp
addb
xor
add
xchg
enter
in
push
sub
adc
mov
add
inc
pusha
lcall
test
out
pop
sahf
std
data16
movl
leave
inc
jmp
jmp
jle
xchg
gs
imul
fcmovnu
or
add
out
sbb
mov
jnp
and
cs
pop
bound
sbb
push
jo
mov
fidivrl
jnp
inc
les
mov
jmp
cmp
add
pop
dec
movsb
dec
and
adc
lock
adc
dec
add
add
cmp
aaa
pusha
push
adc
call
push
jmp
mov
sbb
ja
cmp
adc
addl
jno
push
je,pt
fistpl
inc
add
mov
lcall
or
mov
inc
inc
xchg
iret
jle
test
dec
test
jg
adc
dec
add
shll
mov
push
add
icebp
mov
in
push
pop
icebp
cmp
push
pop
xor
mov
sbb
ljmp
call
into
cmpsb
xor
inc
mov
jmp
sub
call
pop
pop
xchg
test
in
sub
in
sub
pop
inc
xor
push
imul
inc
testl
mov
cld
stos
enter
cld
lret
jnp
movsb
adc
or
jle
js
je
xlat
pushl
je,pn
push
push
lea
xor
xor
xor
xor
xor
jae
jle
rcrb
mov
lret
jnp
in
lods
cmp
jo
push
sbb
xor
mov
popl
or
test
and
xor
ljmp
aad
orl
movsl
out
fsubrs
stos
pop
sub
inc
adcl
sbb
push
sbb
test
and
filds
or
dec
inc
lea
rep
jno
push
ds
or
add
pop
shll
pop
lret
add
jne
push
cmp
cli
push
clc
fstp
add
jl
rclb
pop
fiaddl
adc
arpl
rolb
mov
roll
stc
fnstsw
aaa
sbb
rorb
adc
neg
pop
sbb
icebp
sbb
pop
inc
call
mov
xor
mov
cmp
jbe
clc
jb
in
movsb
pop
rcrl
push
pop
and
and
dec
call
pop
adc
sti
adc
clc
push
cmp
jae
test
cmp
jb
ja
xchg
and
push
aam
enter
jae
aad
mov
jb
loopne
add
xor
push
ss
in
push
in
out
adc
and
mov
mov
mov
mov
or
scas
adc
nop
scas
imul
int3
xchg
dec
add
movl
dec
inc
add
add
or
mov
repz
mov
jp
cmp
jecxz
in
and
call
cmp
in
lock
hlt
clc
dec
mov
mov
push
insb
fistpll
clc
fnstcw
jmp
out
clc
or
and
mov
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
or
or
cld
out
jo
neg
adc
and
and
xchg
daa
stc
sub
sub
test
rcr
xchg
frstor
add
out
add
or
cs
mov
loop
addr16
add
outsl
bound
ljmp
jns
out
push
xor
inc
dec
push
sahf
out
icebp
pushl
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
orb
push
cwtl
lods
dec
push
xchg
mov
aaa
push
add
add
outsl
pop
in
je
sub
push
push
push
enter
jge
adc
push
push
stos
adc
lret
gs
sbb
push
pop
mov
pop
cli
fdivl
push
add
jecxz
jmp
adc
stos
lcall
jge
pop
adc
push
and
cmpsl
mov
jae
popf
popa
mov
jb
jmp
scas
pop
pop
ficompl
push
sub
push
stc
je
icebp
jo
out
sub
push
adc
pop
or
mov
andl
movl
push
pop
fstpt
addb
jo
call
test
sbb
lock
pop
stos
inc
add
mov
pusha
notl
pushl
push
xor
andl
inc
add
lods
push
out
loopne
inc
dec
lcall
inc
mov
jle
add
lds
inc
fiadds
in
fimull
inc
hlt
daa
clc
inc
push
jns
pop
sbb
pushl
testl
xchg
or
scas
jns
or
je
pushl
sbb
push
inc
push
cmp
mov
xor
push
push
xchg
test
int3
push
cs
or
cmpsl
cmp
mov
mov
or
ficoms
cmp
sbb
out
testb
aaa
mov
cld
int3
sbb
pop
jo
out
xchg
enter
xchg
jae
pop
push
jp
es
jl
inc
hlt
push
das
jl
pop
int3
leave
stos
add
jg
icebp
popa
push
or
decl
adc
mov
les
cmp
mov
push
inc
inc
inc
inc
jmp
and
or
shrl
cmp
xchg
or
xchg
call
add
addr16
pop
mov
inc
inc
sbbb
rcrb
sti
sbb
adc
mov
or
shr
rep
adc
data16
xchg
insl
movb
arpl
mov
scas
dec
insb
mov
or
dec
add
push
cmp
adc
push
jle
mov
out
jo
pop
dec
sub
mov
mov
cmpsb
mov
mov
cmp
adc
aas
or
cmpsl
pop
pop
lock
mov
testb
adc
sub
enter
mov
add
outsl
sub
and
popa
xor
jbe
push
cmp
add
jae
jecxz
shl
mov
inc
and
jp
and
imul
mov
in
add
jno
bound
sub
and
push
mov
add
ss
push
push
andb
pusha
xor
lods
sbb
and
mov
adc
push
sbb
and
add
or
sbb
and
mov
adc
xchg
mov
sub
jae
data16
jge
xchg
hlt
cld
cmp
jne
je
fdivl
push
add
ds
push
push
push
movl
sti
add
inc
inc
imul
outsl
push
fidivrs
fimuls
jg
jl
cmp
jb
cmp
jl
jg
sub
pop
les
xchg
jbe
and
clc
and
punpcklbw
xor
pop
or
xor
sbb
sbb
push
cld
out
lods
xorl
xor
add
mov
loop
fcomps
sbb
push
mov
mov
std
lahf
push
bound
test
outsb
mov
test
push
xor
popf
jge
cmpsl
sbb
pop
sub
sbb
lock
push
lock
imul
inc
and
mov
cmpl
xor
dec
xor
andl
ret
jnp
aaa
fists
clc
sub
mov
sbb
xchg
jmp
sub
mov
fs
js
push
push
jbe
aaa
repz
pop
mov
add
add
push
adc
aaa
fs
add
add
sub
fisubl
fwait
cmp
sub
sbb
xchg
or
or
or
push
xchg
fnstenv
jg
mov
sub
leave
jbe
jl
sahf
push
cltd
pop
idiv
add
and
dec
or
push
sbb
sbb
lods
dec
int3
int3
iret
out
cmc
jl
out
lea
dec
loopne
xorb
shrl
mov
pop
decl
or
adc
mov
test
sahf
lock
sbb
lea
stos
adc
data16
xlat
jg
pop
not
pop
and
enter
icebp
mov
mov
jg
sbb
push
add
push
adc
push
js
mov
cmp
push
jg
cmp
stos
add
dec
push
cmp
add
add
cmp
mov
in
out
cmp
sbb
aaa
roll
pop
push
adc
divb
fs
sar
mov
mov
or
cmp
adc
cmpl
lcall
mov
sbb
mov
adc
leave
cmp
call
in
cld
pop
mov
jne
jb
push
mov
mov
push
notl
and
imul
jge
push
fsubs
shlb
clc
scas
xchg
dec
inc
adc
jl
lret
inc
pop
or
aas
loopne
adc
cmp
lcall
cmpsl
inc
addl
ljmp
push
shr
push
adc
cmp
pop
cmp
jmp
int3
xchg
push
jle
and
cmpsl
mov
mov
bound
xchg
fcmovnbe
test
fildll
push
mov
shr
adc
jae
sub
and
jmp
dec
mov
out
add
aas
and
add
ret
jmp
in
daa
call
jle
or
jmp
shr
lea
fcoms
adc
and
pop
test
pusha
jo
mov
fimuls
rorb
in
outsb
cmp
cli
sub
aas
test
xor
test
int3
roll
jg
mov
sub
ficoml
push
cwtl
into
sub
shrl
jbe
jg
pop
shlb
jmp
neg
enter
divl
lock
push
pop
add
loope
enter
pop
dec
and
or
sbb
clc
or
add
pushf
loope
pop
pop
data16
mov
fldl
add
sbb
insl
push
loopne
fisubrl
gs
popf
mov
and
push
pushf
pop
loope
sub
popf
pushf
pop
sub
je
push
popf
sbb
mov
mov
clc
cmp
data16
pop
testl
add
push
pusha
cli
cmp
in
pop
or
in
sbb
mov
ficoml
mov
jle
sub
test
sti
or
movl
lea
fdivrp
aas
add
dec
imul
jg
inc
lea
cmpb
in
sub
sub
loope
push
imul
jl
testb
inc
testb
je
inc
jnp
sti
mov
or
test
or
jl
psrlq
inc
loopne
sbb
clc
jae
loopne
sub
out
jnp
pop
pop
push
and
sbb
pop
or
push
sbbb
cmpl
sbbl
out
lods
mov
pop
cmp
je
fcomps
fbld
jl
shl
dec
or
mov
fs
outsl
sub
sahf
add
mov
sbb
push
jg
pushl
loope
sbb
aad
mov
sti
stos
add
or
xchg
das
inc
fisttpll
jmp
sahf
dec
push
in
rclb
inc
les
push
mov
js
jne
rcll
mov
sbb
and
and
pop
in
jne
inc
sbb
xor
mov
rcrl
dec
dec
or
push
fildll
cmp
test
sbb
cmpsb
pusha
shll
sbb
fnstenv
mov
out
push
mov
mov
or
int3
out
mov
or
fcmovnu
loope
push
jl
dec
or
pop
in
mov
add
add
repz
cmp
or
jg
mov
push
outsl
aas
mov
lock
push
push
arpl
pushf
sbb
pop
push
fstpt
out
and
addr16
push
clc
jno
mov
adc
sbb
sti
dec
movsl
icebp
std
mov
push
pop
jg
jmp
nop
add
inc
xchg
pop
mov
cmp
jl
pop
pop
mov
leave
lock
ret
rorl
xchg
leave
xchg
or
popf
adc
fneni(8087
or
adcb
or
and
sbb
scas
sbb
repz
int3
les
fdivr
shlb
xorb
pop
jmp
pop
inc
fmul
mov
mov
rorb
aaa
jp
cmp
aaa
inc
mov
sbb
push
call
inc
cltd
push
jbe
sub
clc
jmp
and
or
mov
cmpl
adc
decb
loopne
cmp
jae
or
stos
mov
je
mov
jle
fmuls
cmp
dec
shlb
nop
fsincos
repz
in
nop
in
sbb
adc
add
adc
lock
sub
pop
in
or
sarl
stos
ds
cmpl
pop
jge
cld
adc
test
cmp
mov
mov
pop
ret
mov
add
inc
push
std
sbb
je
hlt
xor
daa
adc
mov
test
cmp
adc
dec
imul
mov
mov
das
sbb
cmp
xor
inc
out
pushl
xchg
jno
shll
cmp
and
flds
cmp
cmp
std
outsb
push
cmp
add
jge
dec
scas
mov
je
addr16
aam
push
push
adcl
inc
clc
jg
add
test
out
ja
mov
pushf
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
imul
pop
pusha
mov
orb
int3
add
and
dec
mov
push
dec
popa
jecxz
add
dec
jo
cld
mov
shll
pusha
rclb
ljmp
pop
adc
adc
jg
cmp
or
leave
push
dec
je
dec
add
shlb
hlt
add
jno
pop
loopne
fcoms
jmp
xor
or
cmp
jmp
adcl
add
sub
cmp
add
inc
mov
movsl
pushl
adc
arpl
push
icebp
enter
adc
inc
cs
test
flds
arpl
mov
pop
sub
xorb
xchg
jns
popa
jle
sbb
mov
mov
filds
mov
cmp
je
pop
cmc
or
push
lods
and
push
add
out
push
cmpsl
rolb
mov
mov
rorb
ja
push
adc
jg
xor
inc
cmp
jae
push
cmp
jl
sbb
inc
sahf
jp
adc
mov
xorb
pop
inc
jne
lea
testb
jne
clc
push
mov
stc
scas
inc
lock
into
add
push
xchg
mov
mov
jb
pop
pop
pop
pop
stos
push
or
cld
nop
sbb
add
je
cmp
in
xor
or
lods
fisubl
push
push
enter
icebp
cmp
int3
cmpb
mov
cmc
scas
xchg
pusha
sbb
push
cmp
je
or
dec
incl
sbb
fisubl
pop
cmc
lods
mov
hlt
xchg
mov
je
pop
jne
stos
push
xchg
xlat
mov
inc
xlat
jns
jne
jmp
pop
pop
out
and
in
rcll
fld
andl
push
mov
pop
ss
sbb
dec
cmpb
jle
add
call
add
cld
cmp
cs
inc
add
sub
inc
rolb
or
pop
lods
xchg
dec
aam
cli
sti
push
in
mov
mov
push
mov
jle
add
xchg
dec
loopne
clc
mov
arpl
inc
push
lock
mov
jae
loopne
push
mov
jg
dec
movsl
jno
sahf
ljmp
pop
insb
aam
pop
cmpsb
xlat
mov
insb
sbb
pusha
jbe
add
test
sbb
dec
mov
data16
add
dec
jg
adc
orl
call
lret
pop
hlt
and
mov
cmpsb
add
mov
or
shlb
xor
fadds
sbb
orl
decl
scas
addr16
loopne
pop
and
sbbb
pop
inc
xchg
or
adc
mov
out
and
xchg
bound
sub
and
sbb
push
dec
or
mov
pop
adc
sbbl
es
lret
jp
add
mov
push
mov
and
xor
mov
aaa
lock
or
adc
ss
mov
mov
jg
adc
xlat
je
cmp
adc
cmp
jb
jmp
stc
or
inc
and
xchg
insb
testb
int3
xchg
mov
inc
sub
dec
dec
sarl
jmp
inc
aas
cmp
faddp
sbbl
clc
out
clc
cmp
cmpl
sub
pop
adc
daa
mov
push
or
mov
movzbl
push
out
sbb
imul
shr
jmp
das
xor
js
push
sub
add
adc
pop
imul
js
inc
mov
mov
je
push
cmp
shlb
xchg
adc
daa
mov
and
adc
mov
loope
cmp
push
mov
loopne
shlb
in
push
lds
testl
and
leave
cld
in
cs
fisubrs
dec
mov
out
call
push
jne
and
add
shlb
mov
dec
jnp
push
push
and
orl
jns
mov
orl
dec
jle
pusha
lret
test
mov
jl
hlt
inc
pop
call
mov
cwtl
and
xchg
mov
sti
lret
outsb
out
test
push
cld
push
jo
xchg
cmp
add
lock
or
clc
je
in
outsl
or
pop
pop
lret
inc
or
lock
cld
mov
ret
insb
cmp
lods
pop
arpl
les
cmp
mov
adc
push
jns
mov
clc
dec
stos
inc
ret
dec
mov
adc
sub
dec
daa
and
or
push
push
movsb
and
mov
sbb
das
dec
cmc
orl
mov
jmp
push
subb
cmpsl
xor
push
fildll
icebp
dec
add
jns
sub
cmp
ret
add
in
or
inc
and
push
cltd
sbb
sbb
xorl
inc
inc
dec
sub
sub
pop
cmp
mov
test
push
or
cmp
repz
adc
or
pop
lock
push
sub
cmp
nop
pop
test
mov
cmp
sbb
mov
addl
mov
sub
sbb
sbb
outsl
mov
adc
adc
mov
sbb
pop
sub
stos
and
cmpsl
dec
mov
push
mov
and
popf
ds
mov
movl
dec
ja
xchg
and
xor
out
mov
adcl
and
out
sub
dec
sub
inc
mov
andl
fnstcw
cli
mov
aaa
xor
push
sbb
sub
xchg
call
fsubp
ja
movups
push
jne
sub
mov
aas
dec
adc
add
in
lret
xchg
rorb
sub
cwtl
push
mov
sbb
push
push
mov
sub
jo
or
jmp
bound
jl
rclb
dec
mov
pop
jmp
jne
mov
nop
push
inc
pop
pop
pop
leave
mov
jg
and
mov
jo
push
push
xor
jecxz
adc
insb
pushf
aas
push
insb
and
mov
sub
lock
pop
sub
push
testl
lods
je
pop
jno
in
stos
cld
xor
dec
push
mov
cltd
jle
mov
push
push
and
nop
js
popa
sub
mov
mov
adc
pop
adcb
push
sub
test
push
inc
les
add
idiv
jmp
jbe
or
test
jl
sub
push
cmp
lea
mov
mov
push
push
dec
cmp
mov
pop
and
push
pop
sub
shll
mov
loopne
xchg
and
push
pop
cmpl
pop
int3
push
or
push
or
push
or
jle
push
mov
adc
inc
sub
incl
imul
out
and
shlb
push
cmpl
ffree
stos
cmc
das
add
or
lea
push
testl
sub
icebp
jb
mov
xchg
push
or
shll
jb
xor
add
lret
pop
testl
fsubrp
or
mov
lret
iret
and
sub
or
sarb
push
or
jl
sbb
inc
pop
mov
sbbb
sbb
pop
sub
and
lret
pop
test
leave
push
inc
test
pushf
push
add
cmp
xor
cld
mov
testb
rclb
test
je
stos
mov
inc
inc
mov
mov
add
add
cmp
jb
cmp
jb
cmp
jle
jge
cmp
mov
xor
push
shlb
int
cmp
jae
inc
mov
mov
rol
jbe
test
sub
mov
rcr
loopne
xor
lea
sub
push
lods
xchg
lcall
and
lea
or
cmc
cmp
fmuls
pop
add
sbb
fstpt
dec
cld
mul
push
sbb
shrd
loopne
imulb
xlat
push
mov
mov
mov
popf
out
xchg
mov
mov
mov
subl
add
cmp
je
pop
sbb
popf
aaa
lea
jl
sub
mov
bnd
push
inc
jge
pop
xor
inc
mov
mov
cmpsl
das
jecxz
jg
fwait
cmp
lret
mov
mov
inc
call
cmp
jle
push
adc
rclb
mov
xor
fisttpll
add
jl
fwait
push
pusha
push
rclb
sahf
push
dec
loope
add
add
add
inc
mov
xor
aad
inc
aam
cmp
mov
push
imul
xor
ds
jmp
mov
mov
cmp
sbb
leave
mov
push
inc
mov
test
jle
or
call
int3
std
sbb
cmp
je
dec
sub
jg
cmpb
clc
inc
int3
sub
jg
mov
mov
les
and
pop
lea
mov
push
adc
sub
testb
jne
scas
outsb
ret
xchg
jp
push
adc
pop
lock
les
cmp
or
rorb
xor
les
push
dec
les
mov
or
adc
sub
daa
les
push
dec
add
pushl
xor
jb
push
jnp
cmp
leave
shr
lds
rcrb
call
ret
loopne
jl
sub
xchg
cs
cmp
and
xor
mov
add
sub
add
inc
add
push
xchg
push
js
movsl
icebp
dec
stos
nop
sbb
shl
into
ret
xchg
je
mov
mov
pop
imul
add
fnsave
mov
sbb
mov
je
dec
mov
adc
adc
push
outsl
movdqa
push
dec
adc
push
and
cltd
sbb
pop
xor
dec
push
clc
jl
fwait
pop
outsl
inc
or
jbe
jle
jg
cmpsl
sbb
outsl
ja
jo
mov
mov
loopne
loop
jo
sbb
hlt
mov
dec
inc
arpl
stos
shlb
pop
aam
sti
sub
and
or
add
sbb
xlat
jne
test
push
jg,pt
jl
mov
icebp
push
push
pop
pop
ret
call
test
sbb
xor
mov
push
in
add
sub
lock
in
lock
rep
stos
mov
iret
jne
and
adc
adc
add
jp
in
aad
sub
push
push
ret
jmp
faddl
insl
and
movsl
mov
and
sbb
icebp
mov
shll
lret
adc
sub
inc
outsb
mov
push
jne
sub
sub
jbe
int3
or
pop
xchg
lcall
push
or
scas
push
push
dec
pop
or
push
inc
mov
pop
bound
in
or
js
add
push
add
movsl
je
push
push
sti
dec
das
inc
cwtl
ret
dec
inc
add
and
cmc
xor
cmpsl
sbb
loopne
fcompl
pop
pop
xchg
fcomps
int3
jns
stc
std
data16
popf
enter
std
jns
movsl
shrb
int
lea
adc
dec
add
sarl
enter
insl
ja
aaa
dec
cld
adc
cmp
push
ljmp
and
enter
dec
xor
adc
js
xchg
dec
or
fildl
add
push
adc
cwtl
or
sub
dec
pop
dec
mov
daa
sbb
sarb
jmp
jge
or
mov
mov
call
xor
stc
sub
jb
lea
push
adc
push
pop
out
in
cmp
push
add
push
mov
shrl
ss
mov
ret
repnz
je
pop
in
inc
repnz
add
sub
aas
push
js
les
or
xor
pop
pop
push
aaa
icebp
push
mov
mov
sahf
out
fisttpl
push
sarb
out
cwtl
pop
scas
andl
cld
push
or
sbb
pop
enter
sub
sub
cmp
in
into
sub
nop
xchg
push
mov
mov
mov
sahf
imull
mov
or
push
inc
dec
jno
out
push
pop
fs
sbb
aaa
pop
inc
nop
aaa
jno
testl
pop
and
add
mov
and
push
cmp
or
xchg
push
pusha
ja
push
adc
push
adc
mov
sbb
fimull
cmp
push
int3
out
inc
dec
jne
jo
sub
push
jo
push
shll
push
ljmp
je
ja
xor
push
pop
into
pop
scas
sbb
push
test
popa
adc
pop
cmp
ja
cmp
lods
inc
aam
xchg
bound
or
popa
andl
in
es
add
push
jmp
and
push
paddb
sbb
pop
mov
loopne
mov
add
mov
sbb
xlat
mov
xchg
cs
rorb
dec
and
mov
je
pop
adc
and
jmp
push
dec
daa
mov
xor
out
icebp
inc
lea
mov
rolb
and
add
xchg
pop
or
jle
rolb
mov
jb
add
add
jb
test
mov
add
add
push
dec
mov
lea
lret
sub
ret
adc
add
sub
in
test
unpcklps
fcoml
cmp
adcl
add
mov
push
pop
fwait
dec
push
adc
jae
mov
inc
lea
jb
cld
sbbb
sti
ret
jae
iret
lea
sub
adc
out
push
sti
add
xor
sub
in
loop,pn
rcrl
mov
add
xor
xchg
pop
pusha
xchg
mov
add
and
jnp
mov
lods
dec
and
pop
pop
ret
andl
xor
insl
aam
inc
mov
xchg
mov
pop
or
dec
cld
add
pop
push
push
shrb
pop
dec
pop
sahf
xor
cs
les
dec
packssdw
lods
xorb
popa
orb
xchg
cmp
xor
cmp
rol
adc
mov
shrb
sub
sub
mov
lods
xor
mov
dec
test
pushf
or
push
cmp
sti
sbb
adc
addb
lret
jg
push
movzwl
icebp
sub
jmp
adc
inc
insb
es
or
push
cmc
insl
aaa
mov
push
call
dec
sbb
mov
xchg
jge
sub
xchg
jne
lahf
pop
ds
mov
or
pop
stos
jl
mov
clc
js
or
or
adc
std
into
adc
adc
jno
pop
cmp
jne
mov
add
pop
fcmovnu
pop
in
sub
pop
cmp
ja
insl
mov
or
ja
adc
add
call
cmp
jae
insb
or
jb
push
jae
push
clc
jbe
add
add
sub
test
jne
sbb
pop
test
pop
xchg
adc
movsl
cs
sub
orl
sub
aam
add
sbb
clc
mov
or
das
push
push
jbe
or
cmpsb
add
and
jnp
mov
push
mov
add
push
mov
push
rcr
loop
jb
ljmp
xchg
call
pop
dec
xor
ret
mov
cmpb
jmp
sbb
pop
dec
sub
push
mov
mov
add
pop
or
inc
dec
mov
add
or
or
xor
data16
dec
jbe
push
mov
fwait
test
jle
add
or
loope
or
lea
stos
add
inc
adc
sub
mov
out
mov
dec
jne
lea
daa
or
jns
dec
call
je
mov
adc
cmpb
jo
mov
push
mov
mov
fildll
out
push
movb
xor
lea
add
enter
out
add
lea
mov
add
jnp
lods
inc
fdivrs
jbe
fdivr
ficoml
pop
cmp
mov
mov
lcall
std
push
cmp
jo
scas
arpl
imul
and
mov
test
mov
mov
sbb
lods
jmp
and
je
and
push
in
push
nop
mov
pop
getsec
clc
adc
aad
jmp
mov
push
ret
mov
push
hlt
out
out
mov
cmp
test
pop
rcrb
push
roll
mov
push
and
and
jmp
or
fwait
lret
cmp
jb
push
rolb
xchg
aaa
xor
clc
mov
sbb
or
bound
and
andl
cmp
mov
cltd
jnp
cs
push
mov
mov
mov
rclb
inc
jmp
add
test
and
cmp
push
cmp
lock
push
into
jne
movl
cmp
push
popa
push
outsb
fwait
insb
jmp
inc
std
jne
rol
leave
mov
fldt
mov
mov
jmp
ja
clc
call
loope
loopne
sub
mov
stos
aam
dec
or
mov
cmp
push
mov
fadds
das
and
adc
mov
mov
xor
or
inc
fs
push
jmp
je
push
daa
in
add
out
push
and
xor
bound
orl
rcrb
inc
in
inc
jae
cmp
jbe
movsb
js
movsb
iret
push
jne
push
roll
leave
jae
inc
pop
push
pop
lods
ror
dec
rclb
cld
mov
xor
lea
in
leave
mov
push
into
sub
and
mov
cmp
out
cmpb
cmp
jbe
les
inc
cmpb
shrl
or
loopne
xorb
sbb
movl
shrb
mov
adc
mov
inc
jle
out
jmp
xor
inc
dec
jne
mov
inc
and
and
or
cmpsb
mov
add
shll
jle
fcmovnu
jp
xor
mov
push
jle
or
jne
fisubrl
and
icebp
lret
gs
jnp
test
xor
movb
cmpsl
adc
mov
xchg
fdiv
dec
loopne
adc
ret
pop
mov
mov
cmp
or
and
dec
loop
sub
aas
or
mov
rep
andl
add
or
test
push
cmp
cmp
faddl
enter
inc
adc
push
jo
aam
mov
int3
cmp
mov
insb
ljmp
pop
add
and
das
mov
mov
mov
push
rolb
jge
enter
frstor
lret
int3
sub
jmp
xor
add
mov
mov
add
out
add
ret
ss
pop
sbb
arpl
xchg
push
pop
ja
jno
es
sub
and
bound
sti
imul
sub
loope
shll
leave
lods
data16
and
lods
subb
adcl
pop
movsl
pop
sbb
push
std
cmp
mov
inc
mov
pop
cmp
jne
ja
movsb
sbb
mov
adc
roll
jb
into
int3
mov
lahf
jno
push
hlt
mov
movsb
rolb
sub
inc
xchg
int3
lret
sub
fidivl
cwtl
sarb
ja
lea
push
mov
push
cwtl
mov
jne
gs
jg
lods
mov
out
jle
or
push
cmpl
sahf
inc
adc
pop
sbb
cmp
pop
xchg
adc
subl
jecxz
push
dec
sbb
or
ret
in
xchg
mov
frstor
add
mov
lea
mov
mov
aaa
cmpl
mov
ret
movaps
idivl
sbb
or
cmp
mov
xor
pop
mov
xor
cmp
je
push
mov
adc
loope
sub
sbb
jns
mov
cmpl
pop
in
inc
or
xchg
hlt
jbe
outsb
mov
shl
ret
adc
dec
jle
sub
xor
loope
lea
mov
fsubr
lods
xlat
jmp
jmp
add
xchg
sbb
push
lock
gs
sar
jge
adc
or
test
xchg
or
mov
rolb
xor
leave
xor
xchg
cltd
push
test
and
cmpsb
imul
push
add
sbb
cltd
ss
jp
or
movsb
inc
jecxz
pop
dec
rcrb
fcoml
fsubrs
or
mov
push
mov
cmpsl
sbb
decl
jo
out
lock
push
mov
cmp
je
cmp
sbb
mov
push
push
xchg
cwtl
ret
loop
xor
aas
sbb
pop
mov
adcb
cmp
xor
das
inc
aas
add
insb
jae
dec
jmp
test
and
or
js
xor
xchg
or
in
mov
cmp
frstor
push
adc
add
sub
in
sbb
sub
movsb
js
jmp
and
push
push
jo
cmpb
pushl
push
push
aas
rolb
cmp
cmp
jne
insl
idivb
mov
jmp
adc
outsl
jo
lret
push
fisubl
adc
pushf
or
push
dec
push
imul
fadd
fdivrs
inc
xchg
dec
xchg
cmpsb
mov
jne
sbb
or
imul
lods
cmpb
jb
mov
add
mov
push
pop
imul
lcall
je
cmp
jl
cmp
jg
inc
jmp
xor
les
adc
jne
imul
add
push
pop
inc
jo
and
sbb
mov
test
enter
mov
pop
cmp
and
ja
pop
adc
sub
jle
push
dec
movsl
std
mov
jne
xor
fmull
notl
stos
sbb
insl
adc
ds
cs
std
and
mov
enter
or
push
cltd
insl
filds
loope
idiv
inc
pop
lea
mov
dec
and
mov
mov
pop
idiv
je
pop
sub
lea
mov
scas
and
ljmp
lea
lea
cltd
es
sbb
mov
imul
leave
sub
lea
dec
scas
xor
js
sub
add
sbb
lea
push
stc
jmp
add
loop
pop
in
sbb
pop
sbb
jo
adcb
iret
pusha
cmp
jle
sub
jmp
icebp
xchg
subl
sbb
mov
fbld
pop
add
imul
dec
and
and
inc
shr
leave
call
add
xor
push
jmp
popf
dec
pop
sbb
pushf
jb
sub
inc
or
add
dec
jns
orl
decl
sbb
sbb
jl
sub
incl
mov
in
push
lock
hlt
out
xchg
aam
push
add
invd
mov
popa
lock
les
adc
fnstcw
cmp
sbb
xor
add
imull
test
sbb
rsm
data16
jne
and
xchg
pop
push
push
push
push
mov
cltd
das
inc
stos
pop
push
xchg
xchg
xchg
dec
clc
mov
push
dec
pop
push
push
xlat
dec
mov
sbb
fwait
cmp
cmp
sahf
pop
push
pop
mov
push
dec
addr16
or
jge
push
pop
mov
pop
jae
mov
add
pop
rcll
push
jnp
fcmovnu
sarl
rclb
stos
sbb
icebp
dec
mov
enter
add
push
cmp
jl
cmp
jg
push
jle
jge
fldt
adc
and
repnz
push
aad
data16
imul
dec
cmc
inc
add
pop
jmp
jne
popa
jns
add
add
dec
sbb
data16
loop
int3
adc
mov
jecxz
mov
int3
and
popf
es
sub
and
push
sub
or
pop
pop
push
xor
loopne
and
xor
shlb
pop
es
ss
bound
and
push
cmp
gs
orl
gs
mov
inc
je
mov
loopne
mov
cli
add
jg
jl
inc
push
repnz
jp
shlb
jmp
dec
jg
pop
or
xor
es
xchg
ja
push
push
push
push
push
stos
push
lock
add
lea
xor
lea
sub
addl
jbe
lret
sub
adc
add
push
lea
lods
sub
push
sbb
sbb
push
mov
inc
and
and
and
xchg
add
xor
scas
cmp
mov
jb
repnz
sbb
ret
loop
mov
inc
mov
sub
add
fcmovnu
daa
inc
add
outsl
jmp
ss
push
adc
leave
or
ja
sub
jb
adc
fadds
stc
ret
cltd
xor
int3
outsl
imul
mov
orb
cmp
jge
ss
sbb
jl
mov
incb
dec
adc
add
test
or
xor
xor
push
xor
cltd
cld
test
cmp
out
and
push
mov
or
icebp
jmp
push
push
in
push
dec
inc
inc
xor
scas
push
and
sub
out
add
sbb
fldt
adc
mov
add
or
pop
nop
mov
sti
or
xor
jge
push
push
push
add
mov
sarb
loopne
fdiv
fiaddl
repnz
mov
sbb
sbb
and
sbb
sbb
xor
add
icebp
pop
inc
out
dec
ja
push
shr
inc
push
xor
jmp
fstps
xor
shr
rcr
or
lods
lock
sti
std
sti
in
xor
cmp
or
cmp
add
loopne
mov
out
dec
pop
fsub
sbb
push
ret
push
push
bound
and
add
fcompl
sbb
sbb
pop
mov
outsl
scas
push
or
ret
jns
jmp
popa
cmp
mov
popa
enter
loope
out
adc
adc
push
jbe
sub
mov
push
or
lcall
pop
outsb
and
add
ret
sbb
mov
mov
mov
nop
out
sub
inc
rcll
pop
inc
ret
in
mov
rcr
mov
leave
repz
dec
dec
push
adc
dec
lret
cmp
dec
andb
adc
repnz
and
dec
add
xchg
ret
insb
add
xchg
mov
sub
ds
lret
or
into
cmc
pusha
xchg
lock
jmp
movsl
inc
aas
aam
neg
pop
mov
sub
inc
inc
in
xor
rorb
fisttpll
mov
cld
mov
fldenv
cmp
inc
sti
sbbl
cmp
or
cmpsb
lods
sbb
push
jl
pusha
jb
cmc
lea
cmp
pop
bound
or
test
inc
rorl
in
inc
loope
inc
mov
mov
mov
push
add
pop
shll
movsb
pop
pop
or
cmp
inc
push
out
sbb
sub
add
cld
mov
pop
sub
add
or
scas
or
loope
xchg
mov
sub
sbb
aaa
enter
cmp
adc
lds
inc
adc
call
shlb
add
jne
dec
stos
in
sub
mov
out
add
cmp
jb
addr16
imull
mov
je
sbb
ss
jp
test
push
call
test
sbb
cmp
cmpsb
cmpsb
faddl
ret
mov
lahf
push
sti
leave
mov
and
and
cmp
sub
lds
sub
add
dec
in
dec
add
js
or
or
ret
pop
sbb
pop
mov
or
fbld
insl
sub
push
lods
sbb
or
cli
push
jecxz
sub
and
movsl
or
fistpl
clc
lcall
jg
cs
sbb
sub
inc
sbb
or
xorl
ffree
inc
cmp
outsl
add
cmp
sub
jo
cmp
dec
shlb
sbb
sti
cmpsb
jecxz
cmp
adc
mov
mov
clc
push
mov
pop
mov
adc
in
add
shll
into
mov
aaa
xchg
cmpl
inc
cmp
cmp
xchg
cs
push
mov
cmp
enter
inc
and
add
mov
or
jb
push
push
inc
or
xor
sub
dec
and
dec
sti
push
addb
add
inc
jl
xor
xor
lar
je
cmp
pop
loope
push
inc
out
lea
adc
mov
mov
add
pop
imul
jne
push
xchg
leave
sti
dec
sarb
orl
movsl
push
cmp
mov
imul
push
sbb
out
imul
lcall
jae
push
add
fs
add
mov
fisubl
jl
mov
sub
ss
insb
and
fsubrp
and
callw
adc
scas
add
pusha
test
das
or
in
add
cmp
jge
imul
mov
jle
cmp
xor
sbb
pop
sbb
inc
xchg
mov
or
rorb
dec
mov
sbbl
pop
or
cmp
xchg
push
push
mov
lea
in
and
mov
mov
add
fs
rcrl
adc
sbb
pop
leave
push
sbb
pusha
mov
lods
bound
sbbl
scas
mov
insl
xor
ja
popa
fildl
cmp
fidivl
leave
adc
xchg
rolb
aam
mov
outsl
mov
rcll
push
push
orl
lods
xor
popf
in
loopne
sbb
inc
movsb
cmp
push
data16
jbe
sbb
js
ljmp
fnstenv
shl
dec
adcl
popa
scas
jmp
adc
pop
je
into
push
pop
rcrl
sbb
iret
jnp
cld
adc
movl
lahf
pop
mov
adc
daa
jo
dec
add
ret
pop
dec
ret
dec
decl
mov
mov
push
out
mov
adc
sbb
add
orl
mov
aam
cmpl
pusha
xor
and
or
cmp
pop
cld
or
mov
aaa
insb
jb
push
sahf
ret
push
inc
mov
roll
loop
push
inc
incl
mov
rcr
mov
cmp
je
or
jne
xchg
add
inc
lds
sbb
mov
jmp
lcall
dec
jmp
xor
inc
or
xorb
xchg
inc
addl
inc
inc
pop
push
and
sub
xchg
mov
sarb
cmpb
or
data16
lock
push
mov
xchg
jmp
pop
loopne
rcl
pop
sbb
icebp
xchg
xchg
arpl
inc
or
je
shr
sahf
loop
movsbl
pop
and
or
or
mov
out
cwtl
into
inc
add
xor
cmp
mov
pop
add
adc
add
sub
into
push
add
aad
pop
add
pop
roll
cmp
clc
int
dec
push
mov
mov
mov
mov
sbb
add
dec
repnz
rcll
jge
addb
stos
cmp
movsb
aas
jae
aam
pushl
sar
inc
dec
shl
lea
cmp
jb
loope
add
adc
out
adc
add
push
push
orl
push
popl
add
or
xor
pop
add
cmp
cs
pop
data16
cmp
and
cmpsl
test
sub
js
cmp
jmp
adc
nop
push
or
rorb
jne
in
decl
repz
inc
mov
cmp
je
inc
inc
or
jne
add
fdiv
fisubl
ljmp
push
sar
inc
push
push
adc
and
lock
xor
dec
sarb
ss
fldl
dec
sbbb
orb
cmp
andl
pop
ret
jmp
cmp
and
inc
addb
fs
adc
es
insl
movsb
or
lods
fcompp
or
sub
out
int
pmaxsw
sbb
bound
je
outsb
dec
jno
pushf
inc
xor
lds
mov
adc
pushf
mov
push
adc
dec
pop
clc
psrad
mov
or
sub
es
or
or
fwait
or
push
and
cmp
ret
rolb
outsl
add
popf
lea
or
shlb
mov
add
mov
mov
inc
or
add
jb
aas
xor
jbe
rcrb
repnz
and
lea
loopne
mov
push
cmp
daa
outsb
xchg
lock
cmp
jb
mov
cmp
jmp
adc
add
xchg
and
fimull
je
mov
faddl
add
call
and
cmp
add
out
add
mov
mov
push
add
insl
cmp
outsb
push
or
inc
adcl
jl
mov
repz
push
loopne
or
push
orb
jmp
xchg
orl
push
push
ret
dec
xchg
or
mov
lcall
and
inc
in
push
aaa
xor
ds
mov
add
jmp
lret
adc
sub
mov
or
dec
movl
jl
shrl
loope
pop
notb
mov
repz
mov
or
jae
mov
mov
sahf
jb
testb
dec
sbb
xor
push
daa
cmp
enter
popa
gs
push
sahf
les
loop
outsb
inc
mov
and
inc
lahf
testb
lcall
or
inc
pop
cld
sub
cmpsb
jge
xchg
cmp
ret
xchg
pop
sbb
mov
rol
xor
addb
inc
adc
and
shlb
sbb
gs
or
mov
jmp
push
jl
pop
lods
mov
sbb
lea
mov
sbb
cmpb
mov
adc
dec
xchg
mov
add
xlat
dec
jmp
int3
push
outsb
lret
imul
jg
add
lahf
fs
mov
cmp
cmp
jmp
into
arpl
popf
shrb
cmp
rorb
push
sbb
push
adcl
sbb
outsb
push
sahf
sub
pop
or
or
enter
add
lahf
pop
dec
or
lock
cmovle
cmp
xorb
pop
adc
add
dec
and
lods
cmp
outsl
adc
push
push
mov
mov
add
or
shlb
jp
pusha
push
fnsave
aaa
push
sub
lcall
fisttpll
inc
pop
dec
lock
mov
xor
and
lds
add
jmp
test
adc
adc
lock
fadds
div
push
rcrl
add
fadd
mov
or
and
adc
xchg
lahf
loopne
mov
or
add
or
or
cmp
cmp
test
mov
mov
mov
add
inc
ret
cmp
and
arpl
or
and
push
scas
or
jb
sub
sbb
jo
cmc
rcll
shrl
imul
and
xchg
add
popf
mov
pop
lea
sub
aas
xchg
mov
push
sub
mov
and
es
xlat
into
sub
hlt
jmp
push
stos
sbb
imul
mov
pusha
je
mov
dec
pop
xor
cmpsb
inc
jl
clc
mov
push
call
arpl
pushl
out
sbb
or
cmp
jl
lock
mov
jle
and
cmp
icebp
xchg
negb
mov
shll
and
ficoms
cmpl
fmuls
mov
jmp
scas
pop
scas
add
pop
inc
movsb
fcoml
mov
or
add
sub
pusha
out
add
xchg
pop
aam
push
imul
arpl
mov
mov
cmp
aaa
sbb
sbb
loope
mov
xchg
inc
jmp
push
loope
push
imul
xor
adc
push
imul
in
in
mov
jmp
inc
loopne
mov
or
add
lea
mov
dec
in
xor
mov
lods
push
call
and
add
lods
aam
fwait
lods
daa
cmp
push
int3
adc
sub
cmp
push
lret
pop
sbb
int3
add
mov
ret
xchg
jo
imul
push
nop
sub
je
add
jb
rcll
adc
jns
icebp
mov
leave
mov
test
push
cmp
aaa
enter
or
or
push
adc
enter
lret
add
and
add
orb
in
fnsave
push
xor
lea
nop
repz
cmp
adc
mov
push
adc
add
mov
pop
cmp
subb
and
inc
cmp
rol
xor
clc
jne
xor
mov
arpl
test
rcr
shlb
adc
jno
push
movsb
xchg
cmc
or
test
jbe
and
fisubrl
or
fld
jb
inc
orl
cld
shrb
jb
in
test
lahf
mov
or
inc
and
cmp
push
jmp
sub
scas
push
xor
cmp
and
call
cmp
adc
and
xchg
mov
dec
test
mov
dec
adc
adc
push
push
push
push
push
push
addl
mov
xor
xor
rcr
mov
xchg
cli
aam
xchg
cs
lea
or
xchg
shlb
inc
jg
mov
sbb
cmp
pushf
rolb
negl
pushl
jo
push
call
stc
mov
addb
movsb
xor
sub
sub
and
mov
adcb
push
rcrl
ljmp
daa
add
cmp
xor
out
dec
loope
pop
aas
fiaddl
push
bswap
insb
and
and
push
or
dec
jle
xor
lds
leave
adc
adc
loopne
lret
or
sbb
loope
call
jmp
movsl
sub
inc
adc
sbb
sub
cld
loope
adc
shr
mov
imul
inc
pop
neg
ret
push
dec
or
rorl
jg
dec
shll
push
lea
mov
pushl
cld
rclb
mov
test
jne
sar
dec
jmp
aas
mov
mov
cmp
dec
or
mov
je
clc
aaa
cld
lret
lea
shll
pop
mov
dec
cmp
pop
mov
lea
xor
inc
cmp
pop
add
push
imul
mov
pop
and
movsb
decb
push
or
jle
shr
pop
clc
and
pop
hlt
in
cmpsb
setae
inc
and
sti
add
mov
incb
fidivs
mov
mov
imul
xor
and
cmp
je
inc
jno
mov
cmp
shr
testl
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
pusha
dec
pop
pop
lret
dec
xor
and
iret
ret
les
fidivs
sti
push
pop
pop
lock
mov
push
pusha
fidivs
or
adc
jo
popa
pusha
mov
mov
inc
mov
mov
lock
push
push
or
or
mov
dec
or
jmp
dec
adc
iret
push
lods
dec
push
mov
movb
push
orl
int
lock
cli
shlb
dec
orb
gs
add
das
sub
xor
aas
gs
jne
outsl
mov
push
or
movsb
mov
addr16
add
decb
adc
inc
fwait
cli
std
dec
cmp
add
and
mov
gs
out
and
dec
pop
int
push
ljmp
sub
js
in
push
lea
leave
or
jns
pushf
and
jnp
les
dec
aaa
jp
or
mov
xor
xchg
xchg
mov
adc
imul
lock
rclb
out
sbb
push
outsl
push
or
xor
lea
js
add
mulb
push
lods
sbb
push
scas
add
adc
cli
sub
sbb
pushf
jmp
orl
xchg
jne
lea
incl
and
and
adc
adc
or
push
xchg
je
movb
inc
inc
lret
xchg
stc
mov
imul
inc
ret
sti
clc
pop
mov
add
inc
dec
jne
cltd
cmpsl
mov
adc
push
pop
xchg
push
negb
adc
push
mov
add
or
ja
mov
or
sub
shr
inc
orl
orl
in
lea
push
out
inc
inc
cld
lock
mov
movl
cmc
cmpb
add
add
adc
aam
sub
dec
rcll
inc
fs
inc
popf
pop
mov
mov
mov
lock
push
mov
scas
decb
jne
or
lds
not
and
and
add
sub
adc
repz
jne
xlat
sub
inc
lcall
and
or
dec
cmp
clc
cs
jnp
mov
and
jbe
mov
test
cmp
jp
pop
xchg
add
cmp
hlt
sar
push
mov
add
stc
int3
push
pop
inc
pop
push
lcall
sub
rolb
es
fiaddl
add
cmp
nop
xchg
fimuls
dec
or
push
sbb
into
add
add
push
mov
pusha
push
ficompl
cmpsb
incl
mov
movb
paddusw
lea
jbe
data16
jle
mov
dec
pop
pop
push
pop
xor
push
jns
pop
lcall
or
iret
js
mov
jmp
aaa
js
test
sub
push
add
insb
xor
and
add
and
clc
jl
cmpsb
inc
or
sahf
jge
sub
pusha
push
cld
loop
xor
push
sar
dec
jp
or
pop
idiv
inc
cwtl
rorb
sbb
xor
ss
jo
cmp
dec
je
lret
sbb
push
mov
xchg
fbstp
pop
mov
fnstenv
dec
ficoms
add
mov
loope
lea
mov
mov
sbb
xorb
inc
and
mov
push
lods
pop
sbb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
insl
sub
mov
add
inc
sarl
cs
insb
and
add
lods
pop
and
inc
cmp
jecxz
add
inc
into
call
out
subl
jmp
in
push
imulb
dec
or
push
fildl
and
or
mov
or
fdivs
push
jne
mov
jg
jne
jmp
in
in
data16
lock
aaa
jnp
sahf
outsb
arpl
adc
fsubs
mov
mov
push
sub
pop
or
dec
leave
lcall
out
je
inc
mov
mov
adc
daa
pop
cmp
mov
mov
dec
pop
iret
mov
xor
cmp
push
add
test
pop
push
repz
mov
and
jne
mov
outsl
shrb
and
leave
inc
test
inc
cmp
jno
push
pushf
mov
sub
icebp
sbb
fdivrl
push
test
inc
dec
mov
add
xchg
dec
push
adc
das
js
dec
dec
cmp
into
in
and
mov
filds
decb
jne
dec
repnz
int3
or
dec
mov
mov
or
and
push
clc
into
xor
inc
imul
xor
push
xor
pop
lock
das
pop
xor
dec
adc
xor
cmp
inc
or
cli
jmp
out
or
dec
mov
or
inc
or
lcall
mov
out
or
sub
mov
jmp
lock
scas
and
lcall
push
lea
adc
cmp
lock
add
hlt
xlat
mov
inc
add
es
add
pop
shrb
fists
inc
or
jge
sbbl
cmp
push
pusha
ret
push
inc
loopne
dec
nop
rcl
jae
jl
shl
or
in
xor
jo
repz
xchg
jo
push
mov
das
add
cmp
imul
notl
je
jae
mov
cmp
mov
dec
sbb
sub
sbb
cmp
shll
adcl
push
pop
adcb
setns
ds
sub
pop
lock
dec
jb
mov
leave
mov
fiaddl
mov
sub
cmp
loopne
push
imul
sti
add
gs
inc
fisubl
pop
xor
ret
sub
lret
cmpsl
adc
pop
jns
jb
cmc
shlb
sahf
push
popf
popa
das
fstl
sub
ds
xchg
pop
lds
xor
lret
lods
loopne
sub
xor
lods
in
jbe
add
repz
dec
aas
mov
push
test
jne
push
dec
loope
test
stos
adc
pushf
mov
leave
adc
add
daa
bound
ss
sbb
adc
lcall
mov
xor
stos
ret
loopne
daa
bound
jmp
cmp
and
outsl
xor
adc
or
cmp
jns
push
les
dec
movsb
adc
fistl
or
sub
or
out
roll
fxch
pop
jns
mov
xchg
sub
cmp
push
jmp
or
push
mov
mov
cmp
push
xor
sar
or
int3
and
mov
inc
jmp
pop
movl
pop
test
dec
cmp
pop
inc
cmp
jne
andl
dec
cmp
sbb
out
pop
je
sbb
test
movsb
packsswb
rorl
add
push
lcall
mov
xor
jp
sbb
je
sub
add
xorb
lahf
mulb
jmp
push
push
pop
adc
ja
div
mov
aas
or
pop
pop
add
mov
cmpsb
sbb
daa
add
push
test
push
cmp
ret
sarl
pop
rcr
add
hlt
mov
ds
xor
repz
pop
jecxz
daa
test
sub
js
fs
filds
inc
or
je
xchg
sbb
pushf
lods
and
dec
adc
mov
jb
push
cltd
pusha
jle
jge
cmp
add
dec
push
hlt
cmp
je
movl
sbb
sbb
add
inc
xchg
cmp
and
jne
movb
adc
and
mov
sbb
div
pop
cmp
or
jbe
sahf
inc
arpl
cmp
or
sbb
inc
push
int3
push
js
pop
or
in
fdivr
mov
cmp
fstpt
shlb
insb
adc
loopne
push
outsl
push
mov
out
xchg
sub
push
gs
jns
ret
testb
mov
enter
sti
je
movl
xbegin
sub
push
fsubs
sbb
dec
in
lds
hlt
jecxz
jmp
push
push
mov
inc
and
pop
les
in
sub
push
insb
mov
neg
sbb
and
xchg
xor
mov
lock
adc
call
add
cmp
sbb
mov
into
cli
lea
push
adcl
adc
lar
mov
sarb
jmp
push
push
shll
aad
int3
cmp
movsb
ljmp
push
int3
jl
push
test
xor
stc
ljmp
add
add
dec
sahf
call
dec
jb
dec
and
or
stos
lods
lahf
subl
jg
pop
push
sub
inc
mov
aas
push
cwtl
ret
push
mov
stos
jae
fidivrs
or
xchg
lcall
add
lret
jmp
or
sbb
mov
mov
cmp
scas
push
cmp
inc
inc
add
pop
or
mov
and
and
cmp
push
jno
inc
lcall
inc
mull
sbb
adc
and
push
or
adc
ss
and
and
sub
xchg
xchg
xchg
xor
cmp
mov
cmp
cmp
push
dec
dec
cmp
pop
pusha
fs
dec
dec
dec
push
inc
dec
dec
js
leave
and
pop
aad
adc
mov
dec
xor
leave
cwtl
pushf
mov
and
mov
test
xor
sub
jo
inc
aaa
fwait
lods
xorl
jl
push
mov
or
movsb
dec
dec
sub
and
adc
lcall
movsb
pusha
sbb
cmp
inc
rolb
or
mov
push
sqrtps
insb
pop
in
cmp
adc
add
js
inc
ret
fistps
cmp
je
sar
loop
dec
jne
out
mov
mov
addl
sbb
xchg
push
das
insb
mov
mov
or
or
and
and
icebp
push
push
daa
les
push
xchg
lock
stc
xor
mov
push
movsb
push
mov
int
adcl
ja
pusha
aad
mov
lods
pop
sahf
push
jmp
adc
mov
hlt
adc
jp
add
inc
test
jmp
sbb
or
dec
outsb
out
jns
mov
fimuls
mov
jg
push
mov
pop
cmp
cwtl
or
jmp
cmpl
icebp
or
lea
out
add
icebp
sbb
jo
mov
pusha
dec
outsl
sbb
hlt
movsl
pusha
cmp
xchg
jne
jp
mov
adc
ret
je
xchg
adc
movsl
cltd
cli
dec
cmp
sbb
cmpb
jne
sbb
jp
cmp
cmp
mov
xchg
rcll
jg
incb
lea
jmp
scas
lea
xor
sub
add
add
add
fdivr
sub
imul
clc
add
or
or
notb
push
add
jo
testb
rolb
fwait
mov
out
dec
or
xchg
loopne
dec
add
xchg
prefetch
lcall
call
dec
je
mov
add
shll
movb
lret
loopne
rolb
push
mov
inc
mov
ja
mov
mov
fistpll
jmp
xchg
sub
je
or
je
dec
je
sub
movsb
sbb
mov
cmp
push
mov
rclb
lock
pusha
dec
adcl
addb
sbb
jne
and
in
rolb
scas
add
arpl
mov
dec
outsl
or
inc
pusha
jne,pn
sbb
inc
fs
sbb
add
cmp
fcoml
in
sbb
add
cmp
jge
or
push
pop
mov
fsubr
push
insb
rorb
mov
fs
push
dec
sub
insb
int3
inc
lock
sbb
mov
mov
add
or
and
push
inc
sbb
xchg
adc
adc
and
push
stc
stos
sbb
jmp
add
pop
sbbl
pop
test
xor
sbb
movl
imulb
jp
xchg
mov
nop
xchg
add
sub
ret
sarl
nop
push
adc
push
add
int3
mov
mov
leave
gs
cs
sbb
test
jge
mov
add
das
and
arpl
cmp
and
scas
push
cltd
inc
push
daa
stos
aam
mov
fstpl
xchg
ss
movsl
adc
or
add
das
and
sub
div
jne
orl
and
mov
jle
add
fldenv
mov
int3
cmp
mov
aas
imul
das
adc
adc
jne
shrl
into
jl
lcall
or
adc
cld
jmp
or
mov
xchg
js
push
imulb
ds
sbb
adc
pop
xor
sbb
out
xchg
jle
mov
iret
enter
cmp
mov
jo
or
outsl
dec
dec
pop
cmp
add
std
pop
mov
std
addr16
jbe
push
pop
les
in
test
sub
nop
ss
or
fs
mov
push
adc
sbb
into
fisubrl
or
cld
ja
sbb
int
dec
pop
push
imul
dec
out
cmp
push
imul
mov
push
aad
xor
and
push
pop
fcmovu
cli
mov
out
xor
adc
mov
push
adc
and
outsl
hlt
add
int3
icebp
pop
cwtl
std
jl
dec
push
rorb
mov
hlt
push
adc
sti
sub
or
push
jl
mov
shr
xchg
or
pop
adc
jne
cmp
out
dec
and
sbb
loope
int
adcl
cmp
sbb
cld
dec
jo
mov
ret
mov
pushf
jnp
jae
add
es
subl
hlt
pop
adc
or
cmpsl
and
loopne
jne
outsb
cltd
adc
jb
insb
sbb
jl
jne
or
and
fwait
add
sbb
ljmp
mov
push
mov
lds
push
sub
mov
shlb
cmp
es
jmp
ja
dec
rol
push
je
push
jmp
adc
enter
repnz
cmp
mov
jbe
out
lds
in
xchg
dec
jle
adc
add
jl
fnsave
cmp
jbe
jne
sub
xchg
pop
mov
or
aam
test
pop
sbb
mov
je
out
pop
fwait
mov
and
jae
sub
xchg
xor
mull
test
cmp
cmp
push
fwait
push
add
push
push
mov
inc
cli
pusha
sbb
mov
or
cltd
pushl
mov
lea
inc
sbb
push
dec
cmpsb
mov
sbb
hlt
push
jnp
dec
int3
jo
add
cs
cmp
or
aam
sbb
xorb
testl
adcl
call
inc
or
mov
jle
cmp
ss
je
sub
cmpsl
je
popa
jge
addr16
ret
adc
in
fld
in
mov
je
lea
into
in
jne
fmuls
jg
mov
sbb
adc
inc
ljmp
pop
fcmove
add
inc
add
dec
pop
je
push
pushf
mov
or
push
sub
pop
jb
mov
xchg
loopne
test
or
or
or
mov
dec
fstpl
push
mov
addr16
inc
loope
fisttps
sub
subl
leave
or
cmp
mov
out
sub
dec
mov
add
orl
jecxz
pop
pop
outsb
out
or
scas
loop
adc
aad
mov
push
add
ds
xorl
fstp
inc
das
cmp
ja
lret
mov
adc
jge
pusha
adc
clc
bound
sbb
pop
xchg
add
repnz
js
sbb
lock
dec
fcmovb
lods
dec
lock
hlt
sub
xchg
or
sub
sbb
lock
adc
push
xor
in
jb
orl
shrb
mov
inc
loopne
addr16
leave
aas
add
js
cmp
jecxz
lret
lods
push
mov
cmpsb
mov
lock
jle
cmpl
sbb
ss
pop
pusha
push
jl
inc
or
xchg
aas
xor
aas
lock
and
sbb
cmp
out
adcb
sub
sub
insb
rcrb
dec
ret
test
sti
cmp
adc
cmp
sub
add
mov
cmp
je
cmp
sub
sub
adc
or
adc
outsb
rcrl
add
add
lds
sbb
fists
lret
or
test
sahf
movsbl
sub
jmp
imul
mov
xor
cmp
cs
call
or
and
adc
sbb
add
enter
cmp
jbe
pop
movsb
or
sbb
add
mov
subb
push
mov
addb
incl
mov
mov
fdivs
sbb
xor
dec
rcll
push
sbb
aam
sbb
je
insl
jp
mov
mov
cmp
jns
lcall
mov
shlb
jae
jmp
push
or
push
fildl
add
mul
inc
adcl
out
pop
push
adc
jae
mov
xor
dec
lret
jns
iret
and
movsl
test
push
adc
js
gs
push
push
dec
inc
or
aam
push
test
cld
and
loope
push
mov
dec
cwtl
pop
and
jb
dec
subb
jp
or
je
mov
cmpsl
xchg
adc
mov
sahf
and
inc
jmp
push
xlat
rcrb
or
or
push
test
iret
sbb
sub
mov
push
mov
imul
xor
adc
push
mov
jo
call
pop
mov
cmpsb
and
xchg
push
dec
add
dec
jnp
vmovaps
cmpsb
mov
pop
lcall
ljmp
dec
jg
cwtl
sti
adc
or
fmull
incb
je
imul
pop
sub
sub
cmpb
mov
loop
adc
add
inc
add
notb
sbb
popa
call
outsl
pop
pop
mov
mov
rorb
in
pusha
or
inc
pushf
lock
outsb
push
fists
or
je
jge
pop
mov
ds
mov
mov
into
es
add
push
je
mov
aas
out
inc
dec
cmp
jb
cmp
ja
add
cmp
adc
cmp
xchg
rolb
les
test
stos
cltd
adc
fidivrl
or
leave
icebp
out
adc
inc
add
ret
add
jne
loope
lcall
popa
dec
sarl
clc
stc
and
pop
cmc
push
in
int
add
addr16
rolb
or
mov
push
in
sub
pop
dec
cmpb
inc
cmp
dec
outsb
inc
xorl
sub
dec
dec
or
ficoml
pop
mov
cmp
xorl
push
push
dec
call
mov
jo
add
sub
call
adc
push
jl
movsl
outsl
and
xchg
cmp
jle
or
push
daa
mov
sub
adc
xlat
jge
lds
mov
add
stc
stc
add
push
cmp
push
popf
icebp
js
enter
jle
xchg
dec
sbb
mov
xlat
jne
cmp
cltd
fcom
sbb
dec
insl
add
inc
add
jmp
adcl
or
push
sub
pushl
push
ds
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
add
mov
mov
jmp
pop
sbb
adc
imulb
out
fwait
xlat
and
or
xchg
jns
jmp
xor
and
push
push
or
bound
in
decl
bound
mov
stc
and
inc
pop
repz
add
movl
test
and
jbe
adc
icebp
add
popf
test
in
pop
mov
lds
and
jbe
cmpl
dec
jle
aad
pushl
rcrb
push
push
mov
jne,pt
and
sbb
fldenv
loopne
push
loopne
pop
or
xchg
xor
in
fnstsw
sbb
sbb
mov
lret
outsl
popl
fcoml
daa
fsubr
mov
dec
cmp
dec
xchg
inc
movsb
lret
sbb
clc
incl
jge
push
inc
lea
nop
and
flds
inc
or
adc
leave
or
and
dec
or
push
mov
or
adc
enter
push
push
roll
push
cmpl
adc
push
push
push
jne
aas
push
mov
cs
dec
lods
or
test
imul
sbb
xlat
aaa
lods
xchg
fisubrs
pop
mov
add
push
fsts
or
popa
sub
fsubrs
shrl
pushf
jmp
fsts
xor
mov
adc
and
inc
ljmp
inc
cmpl
notl
add
cmp
adc
sbb
sub
push
xor
lahf
pop
xchg
sub
sub
jo
dec
adc
pop
or
xchg
fcompl
loopne
outsb
jle
lret
xchg
in
and
push
sbb
sarb
push
inc
pop
sbbl
adc
mov
ja
add
adc
mov
pusha
jns
cmp
xchg
je
shl
xchg
cli
pusha
popa
incb
jle
loop
test
sbb
xor
fadd
pushl
lock
cs
cmpl
jb
lea
mov
aam
ss
int3
das
pushf
inc
cmp
rol
in
aam
test
mov
mov
ficoml
fsubs
fistpll
mov
push
jmp
dec
cmc
mov
loop
jge
fisttps
je
sbb
or
pop
sub
js
mov
pop
movsl
and
mov
mov
pop
pop
add
sbb
inc
push
add
pop
int3
adc
clc
fcompl
push
push
imul
xchg
icebp
add
sub
add
cmp
inc
in
mov
inc
and
and
push
les
stos
xor
inc
xor
and
push
mov
cmpsb
sub
orl
pop
cmp
xchg
mov
movsl
cmp
xorb
cmc
outsl
and
push
popa
sbb
subb
adc
adc
lret
or
in
dec
sub
mov
cmp
cmp
xchg
mov
or
shl
inc
add
pushl
sbb
mov
cmp
je
movzwl
es
loope
or
in
pop
loopne
jne
dec
jmp
and
cmp
or
fnstsw
or
data16
push
aas
push
aam
in
in
pop
push
jmp
or
test
fmuls
lea
pop
ret
xchg
or
imul
push
jle
xor
scas
es
iret
push
gs
and
push
sub
mov
adc
mov
mov
dec
xor
lret
mulb
adcl
jmp
jo
jge
loopne
and
or
adcb
out
jne
pusha
or
clc
add
ss
cmp
je
cmp
out
sarb
and
faddl
aam
xchg
pop
jl
ficomps
or
pushf
pop
ja
rcrl
jb
push
pop
mov
clc
nop
ret
sbb
and
mov
or
xor
xor
movl
and
cmp
or
data16
jb
jp
push
rcrb
aaa
push
mov
pop
or
adc
or
pop
xor
les
xchg
and
std
inc
xchg
xchg
ret
ret
mov
int3
jne
jmp
push
xor
push
cmp
cmp
outsl
pop
and
mov
rcl
inc
ret
or
push
lock
push
mov
pop
push
insb
int
mov
add
cmp
lock
inc
sub
xorl
sbb
push
pop
adc
mov
or
sbb
mov
cltd
cmp
rolb
xor
in
cmp
mov
mov
hlt
adc
xor
mov
mov
scas
in
es
adc
push
jmp
adc
push
sti
mov
cmpb
mov
xor
dec
in
push
fistl
inc
inc
mov
in
and
push
jae
lods
test
jnp
cmp
into
movl
sub
out
pop
add
pusha
aaa
fistpl
repnz
movsl
cs
dec
cmp
dec
inc
repz
aas
bound
and
insb
outsl
arpl
imul
imul
incl
jb
dec
imul
pop
inc
insl
outsb
js
push
inc
jne
push
pop
jns
push
stc
decl
outsb
jno
jp
dec
push
push
jne
dec
gs
jae
push
push
jno
outsl
jns
jp
inc
push
cld
mov
fs
dec
push
push
pop
js
data16
pop
inc
push
dec
ljmp
call
jp
dec
dec
inc
dec
gs
push
insb
inc
imul
js
dec
push
in
fisttpl
push
outsl
push
insl
jae
push
dec
inc
inc
inc
dec
dec
dec
dec
push
outsb
sbb
push
call
inc
gs
popa
outsb
imul
jb
dec
inc
addr16
dec
push
pop
push
mov
or
dec
dec
push
popa
data16
push
jno
push
bound
dec
push
jae
js
push
jns
dec
loopne
mov
inc
inc
jp
pop
jbe
push
pop
gs
dec
bound
dec
dec
push
lcall
mov
push
bound
inc
inc
dec
push
jbe
inc
popa
jo
inc
jne
insb
gs
dec
lock
inc
pop
imul
jbe
inc
outsl
dec
fs
inc
je
push
pop
fcomps
inc
outsl
gs
dec
push
je
inc
jno
jae
jno
fs
bound
push
push
das
test
jno
dec
jns
outsb
popa
dec
mov
jne
cld
fcomip
inc
fs
arpl
push
je
ja
dec
je
insw
push
push
loop
outsl
ret
outsl
decl
in
push
inc
dec
push
push
jb
inc
scas
dec
jae
outsl
dec
cmp
incl
jnp
je
jbe
mov
push
push
dec
jae
fs
dec
dec
pop
lock
dec
pop
pop
jne
dec
arpl
fs
bound
addr16
pop
mov
js
fs
push
inc
dec
jbe
mov
inc
outsl
inc
jo
inc
push
push
sti
in
pop
cld
bound
pop
dec
dec
push
inc
inc
js
dec
insb
fmull
pop
ja
inc
mov
popa
pop
jno
push
bound
inc
jp
dec
jne
push
dec
push
movsb
insl
dec
fs
dec
dec
push
jo
push
push
inc
sbb
inc
js
push
ja
jl
pusha
clc
gs
ja
into
xchg
dec
mov
lock
xor
push
push
mov
xor
inc
add
jb
bound
xor
dec
add
adc
adc
sbb
add
outsl
jne
movsl
negb
push
sbb
popa
jns
and
pop
orb
lahf
sub
sti
lahf
gs
push
inc
outsl
fs
push
jns,pn
neg
or
push
push
push
xor
aaa
mov
fsubrs
out
jae
xchg
insb
mov
arpl
inc
and
loop
mov
loope
mov
insl
xor
das
jne
aad
push
and
push
insl
jg
mov
push
inc
add
stos
loope
outsl
inc
imul
push
cmova
and
imul
popf
es
das
daa
fildl
fstpt
inc
dec
repnz
sub
jbe
jb
gs
and
lock
daa
outsb
je
shrb
push
mov
pop
inc
mov
stos
and
data16
push
sub
dec
inc
aas
jge
outsl
add
jb
jne
insb
inc
int3
inc
js
or
outsb
gs
xor
adc
inc
fsubrp
add
add
jnp
xchg
mov
jmp
sub
pop
dec
push
add
fiadds
push
dec
inc
pop
jnp
inc
mov
incl
cmp
inc
ss
sub
cmp
aaa
aaa
sub
xor
inc
aaa
inc
jge
dec
out
jb
and
mov
push
mov
add
dec
add
add
lds
push
ljmp
pop
test
stos
inc
mov
shrb
outsl
ja
and
gs
in
outsl
rcrl
sub
mov
roll
and
push
aad
test
and
push
dec
or
out
sbbb
add
add
add
lahf
fadds
inc
insb
jae
test
pop
repnz
cmp
pop
inc
aam
xchg
mov
filds
or
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
cs
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
push
adc
pop
pop
pop
pop
insl
clc
pop
cld
pop
pop
pusha
popa
bound
addr16
imul
jno
aam
aas
jl
jbe
js
jp
jl
jle
add
add
add
dec
mov
add
cmp
orl
fadds
in
addb
and
add
add
fcmovb
adc
add
ja
je
or
add
sbb
add
or
test
pop
shr
jg
push
addb
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
lock
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
loope
add
shlb
mov
xchg
nop
bound
add
call
aas
jecxz
pushl
dec
outsl
outsb
push
jne
push
gs
push
push
popa
out
popa
outsb
dec
mov
inc
bound
jb
jo
or
dec
add
inc
jne
push
gs
arpl
cmp
icebp
je
outsl
jbe
xchg
jb
js
je
fwait
sub
jae
insl
add
xor
mov
out
jb
add
add
push
jb
outsb
je
insl
and
pop
sbb
jb
or
jg
ja
push
push
and
inc
add
inc
mov
and
xor
adc
and
jo
hlt
inc
insb
imul
sub
ljmp
je
gs
jo
and
insb
outsl
es
push
pop
mov
mull
mov
xor
stos
popa
cmpsb
push
insb
jns
or
xorb
fldt
popa
arpl
sbb
pop
mov
pop
xor
and
insl
push
xchg
dec
lock
pop
aas
xor
and
jne
dec
mov
mov
jo
rolb
les
out
fisttpl
xor
add
fs
xchg
and
jbe
mov
mov
sbb
jp
push
push
jl
ficomps
fs
or
addr16
mulb
jns
je
and
push
loopne
test
ds
gs
popf
jb
je
outsl
mov
sbb
jp
push
daa
sub
dec
imul
insb
jb
cmp
add
sbb
dec
popa
sbb
mov
loopne
ret
mov
imul
out
xor
int3
or
inc
inc
inc
push
pop
add
pusha
mov
xor
mov
mull
xor
fadd
push
push
fistps
push
or
pop
aaa
xor
ss
shll
mov
sbb
add
add
imul
nop
ss
fs
jo
cli
jbe
inc
and
mov
xchg
push
mov
sbb
das
mov
inc
lock
sarl
dec
je
in
outsl
jo
xlat
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
push
inc
aaa
xchg
mov
ljmp
das
pop
mov
outsb
popa
pop
or
push
jmp
rclb
push
leave
nop
xor
sub
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
js
pusha
jo
sub
push
mov
rorb
fsubrs
push
sub
lret
inc
sub
pop
in
jne
jo
jmp
add
jp
movsb
cmp
sub
inc
jne
jno
dec
arpl
out
gs
dec
and
fmuls
arpl
in
pop
and
pop
sbb
in
lea
mov
nop
xchg
xchg
mov
push
js
xor
jbe
dec
lock
scas
dec
bound
mov
rcrl
sub
inc
insb
movsb
and
fisubrl
adc
arpl
inc
xor
imul
ds
in
push
cmp
pop
mov
mov
push
jns
mov
cs
pop
xchg
push
mov
cmp
lcall
jbe
mov
push
push
jno
sub
jnp
jbe
inc
jbe
push
push
lahf
stos
shl
fs
and
xor
mov
fadds
cmp
rorl
and
and
xchg
dec
sbb
cmp
pop
inc
xchg
pop
pop
in
or
mov
push
push
jae
cmp
and
pop
cmp
call
gs
addr16
subl
push
mov
mov
data16
inc
loopne
or
out
das
push
push
push
push
dec
testl
dec
mov
pop
mov
push
outsb
pusha
cmp
fildll
dec
jge
jg
int
adc
adc
imul
cwtl
push
inc
adc
xchg
lods
sbb
jg
xchg
or
cmp
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
cmpsl
stc
sahf
mov
jle
sub
sub
cltd
jnp
fs
push
cmp
add
add
xchg
addr16
add
sub
sub
sub
into
sub
push
mov
add
push
cmp
shrl
scas
push
test
ret
fs
jb
cltd
push
xor
ss
data16
dec
push
cld
and
sbb
xor
push
out
adc
inc
jo
sub
out
jl
out
sub
hlt
mov
sahf
out
push
loopne
enter
stc
mov
nop
stos
stos
mov
repz
test
push
cmpb
dec
jl,pt
js
je
insb
repz
repz
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
and
cmp
repz
adc
out
cmp
or
add
cld
mov
clc
hlt
lock
call
jns
aam
shlb
jl
cmp
repz
sbb
mov
cmp
repz
xor
add
repz
push
les
cmp
fs
in
mov
out
movsb
sbbb
ja
ds
dec
cmp
cmp
dec
pop
add
fs
dec
and
jns
fbstp
das
das
adc
push
dec
push
inc
or
mov
pop
dec
mov
je
hlt
jne
iret
mov
push
outsb
or
xor
push
push
fucomp
push
push
not
xchg
iret
cmp
cmpsl
xchg
popl
xlat
and
ja
inc
popa
mov
and
ss
daa
mov
jb
rclb
jmp
out
mov
dec
inc
ja
and
aas
add
pop
push
mov
push
pop
mov
push
cmpsb
jb
cmp
fcmovnb
ss
outsl
aad
ds
inc
arpl
push
sub
daa
mov
gs
lea
sbb
push
inc
push
ljmp
insb
loopne
inc
xchg
push
repnz
mov
adc
lds
mov
xor
pusha
gs
jb
insl
jb
add
test
push
jle
das
add
inc
add
out
or
push
shr
adc
popa
repz
xor
int3
ret
outsl
js
mov
push
add
and
aas
bnd
outsl
inc
add
dec
add
mov
and
cmpsl
ja
les
das
fs
push
pop
fadds
mov
dec
xchg
iret
mov
mov
out
cwtl
test
lock
imul
mov
in
and
mov
xchg
hlt
inc
pop
xchg
imul
pop
enter
inc
hlt
adc
sub
fists
sub
dec
add
ja
xor
mov
mov
ja
mov
push
outsb
testl
xchg
push
jns
int
xchg
adcb
popa
sub
sahf
out
sbbb
lahf
in
lcall
and
mov
cwtl
shr
and
add
xor
dec
aas
jmp
dec
scas
add
pop
mov
and
aas
cmpsl
push
xor
pop
push
jbe
jnp
jg
in
xchg
lahf
out
pusha
shrl
add
aaa
daa
inc
pop
ror
push
or
and
enter
xor
inc
jns
das
ficoml
dec
inc
iret
cmpsb
dec
out
jae
add
sub
lods
add
add
add
ret
outsb
outsl
pushf
inc
daa
mov
xchg
jl
orb
enter
sub
mov
xor
repnz
or
or
adcb
nop
dec
scas
sub
fbstp
lods
dec
mov
es
lahf
or
mov
decb
xchg
ja
pop
out
or
dec
aam
in
lcall
shr
fwait
in
xchg
movzwl
jns
orl
and
xor
pusha
jbe
push
cmp
mov
push
inc
fs
rorb
xchg
je
daa
test
inc
push
cmpb
jg
out
shll
fdivrp
push
iret
adc
scas
or
adc
add
in
ja
sbb
mov
xchg
pushf
cwtl
cmp
jb
outsb
pmaxsw
inc
pop
std
fadds
cmp
mov
sbb
jne
mov
lds
leave
insb
pop
jb
mov
and
cmp
dec
adc
and
js
jg
mov
inc
subl
or
int3
inc
adc
adc
cmpl
mov
movsl
jg,pt
pop
inc
pop
xor
daa
lcall
nop
dec
mov
push
jne
loopne
stos
pop
aas
dec
pusha
es
pop
pop
pop
pusha
xor
rol
testb
jg
jge
daa
fimull
cmp
addb
push
sub
xchg
inc
pop
xor
jl
aaa
in
jge
add
mov
inc
fiaddl
es
cwtl
aaa
scas
sub
pop
adc
into
xchg
dec
enter
repnz
enter
lcall
adc
pop
nop
and
sub
adc
sub
mov
lahf
inc
jo
je
sub
out
mov
decl
es
jno
dec
jb
push
push
jne
dec
dec
ja
push
mov
jmp
jne
jne
jbe
push
outsl
gs
imul
push
jo
gs
outsb
pop
jmp
dec
inc
push
hlt
push
dec
dec
imul
dec
lds
pop
shll
dec
and
add
arpl
lcall
push
pop
pop
add
sub
cmp
je
xor
cmp
inc
adc
dec
or
or
push
and
dec
js
mov
dec
dec
push
adc
adc
into
in
jae
enter
int3
test
lock
decl
rcrl
fxch
and
cmp
inc
push
stc
aaa
lahf
out
outsb
arpl
xor
addr16
fs
dec
test
pushf
movsb
stc
pop
scas
imul
jns
addr16
inc
mov
gs
push
je
push
jbe
jns
dec
ja
ja
imul
ja
aam
loopne
js
ret
dec
push
jp
outsb
jbe
jp
push
lcall
dec
jb
dec
inc
jno
lret
popa
jne
dec
imul
popa
dec
inc
ja
jbe
std
pushl
push
jae
bound
mov
imul
inc
inc
jbe
outsb
pop
inc
jae
shlb
adc
xor
insb
jno
dec
jns
adcb
jno
xor
push
jo
gs
jo
iret
aaa
adcl
cmp
cmp
jno
dec
popa
gs
sahf
xchg
out
addr16
js
push
inc
in
add
sbb
mov
xor
adc
mov
ret
xchg
out
inc
jne
dec
popl
and
inc
jb
cmc
sbb
xor
inc
and
cmp
loop
dec
dec
imul
cmp
jge
std
pop
fwait
jns
pop
sub
cmp
sub
sub
mov
and
and
and
sar
or
add
push
sub
push
adc
add
pop
shlb
decl
dec
and
cmp
inc
xchg
mov
mov
sbbl
incl
jno
inc
xchg
jb
ret
sarb
aaa
lcall
insb
cwtl
testb
pushl
pop
repz
mov
pop
scas
insb
nop
fists
jo
xlat
xchg
or
stc
daa
dec
lahf
out
xchg
dec
jne
imul
lahf
mov
insl
outsl
outsl
dec
dec
je
out
dec
insl
inc
jmp
aas
fwait
jno
jno
inc
arpl
stc
xchg
xor
cmpsb
shlb
xchg
sbb
js
or
inc
pop
inc
int
das
lods
jg
jg
cmpsb
gs
test
xchg
cld
repz
pop
data16
jb
repnz
cmp
out
pop
inc
jae
jle
stc
fmul
imul
or
or
icebp
pop
push
xor
jnp
sysexit
xor
cmc
dec
push
or
push
loopne
dec
bound
dec
adc
add
and
sahf
call
das
rolb
sub
int
ret
sbb
dec
mov
inc
imul
mov
out
sbb
push
cmp
ss
stc
xor
pop
sahf
int
inc
gs
dec
jmp
fwait
add
and
push
add
out
or
pop
pop
lcall
dec
inc
or
rclb
xor
sti
mov
add
inc
jbe
dec
push
mov
test
cmp
mov
or
jp
and
nop
push
cli
decl
jns
into
addb
pop
mov
push
xchg
lea
subl
cmp
ljmp
inc
lret
pop
sbb
xchg
push
ja
aas
pushl
add
cs
dec
ret
iret
sub
idiv
or
lret
cmp
dec
lea
daa
pop
xchg
cmp
out
push
cld
out
ds
xor
inc
bound
scas
loop
loop
aas
add
push
pop
add
dec
mov
sbb
mov
fwait
jno
movsb
cmpsl
cmpsl
repz
mov
push
inc
or
pop
inc
mov
or
add
imul
out
mov
pop
aad
jle
adc
jg
mov
bound
mov
lds
in
cmp
pushl
icebp
add
pop
pop
sti
ss
dec
sbb
xor
add
out
adc
fldcw
sbb
or
out
or
dec
cmp
dec
scas
ret
dec
shll
stc
dec
inc
add
push
adc
xchg
jns
popf
scas
mov
mov
add
cld
stc
into
inc
push
clc
adc
xor
xor
aas
xchg
dec
pop
push
mov
add
fcomip
iret
xchg
sub
lcall
dec
push
dec
int
ljmp
addr16
adc
aas
cmpsb
fs
lcall
loopne
out
fldcw
push
out
xor
repz
dec
sbb
daa
add
and
xor
push
in
add
add
in
cmp
jl
jge
fistpl
pop
add
int
push
sub
fldcw
jne
or
inc
loope
pop
and
fwait
and
subb
insb
fistps
push
out
mov
sbb
inc
cltd
mov
ljmp
lcall
and
or
ja
cmp
or
lds
mov
movsb
ljmp
jmp
mov
enter
in
ds
cmp
jne
repz
jmp
pop
shufps
lret
adc
fisubl
jp
out
jg
sahf
ret
jle
xchg
fnstcw
imul
ss
xchg
cmp
inc
pop
stc
stc
or
fmull
inc
lcall
movl
or
call
je
mov
mov
test
xor
rcrl
xchg
mov
inc
outsl
lds
dec
lds
sub
pop
dec
bound
call
cmp
cmpsb
test
scas
push
and
push
fstpl
ljmp
or
pop
fiaddl
cld
and
sbb
movsb
js
mov
insl
push
incl
push
in
aas
and
mov
mov
pop
xchg
lcall
and
call
arpl
xchg
cmp
dec
testl
dec
pusha
push
out
ljmp
mov
cmp
loope
insb
cmp
add
lods
jbe
mov
inc
push
or
inc
mov
out
mov
jno
push
cmp
call
orb
jno
push
out
push
adc
sub
push
in
sub
mov
jmp
xor
jno
lods
xchg
dec
or
cmp
push
scas
lahf
imul
mov
popf
ja
in
xorl
jmp
enter
iret
adc
add
incl
dec
jno
jnp
std
inc
dec
pop
loop
dec
loop
xchg
cmp
faddl
imul
imul
or
dec
insl
sbb
bound
mov
mov
clc
jo
or
incl
mov
rorl
lcall
enter
ret
and
inc
push
lea
scas
sbbb
incl
popa
insl
and
xchg
xchg
inc
jp
mov
push
inc
les
inc
filds
pop
push
or
sti
cmp
lret
sti
or
sbb
mov
sbbl
xchg
cmpsl
mov
aas
incl
push
pop
leave
daa
lds
sbb
push
mov
cld
frndint
test
incb
cli
jge
out
add
fildl
fmul
stc
jle
cmp
repnz
fistpll
imul
jl
sub
fsubs
je
sub
out
jg
stc
loope
movsb
sarl
push
cmpsb
dec
xchg
nop
mov
test
arpl
mov
adc
xor
pop
je
testl
xchg
mov
insl
jge
mov
push
out
inc
ret
mov
stc
sub
xor
decl
jp
push
xchg
push
sbb
sbb
aaa
loop
out
mov
pusha
push
and
call
jle
testb
pop
test
fidivs
das
add
clc
movsl
fdivrp
jg
lods
sahf
dec
stc
and
lret
or
mov
pop
jne
rclb
lcall
mov
mov
test
ss
cli
cmp
je
mov
adc
fdivl
adc
sbb
lret
inc
add
mov
jmp
or
nop
dec
test
call
lcall
or
fimull
mov
xchg
call
cli
xor
push
dec
jle
cmpsb
pop
push
gs
inc
adc
cwtl
pop
dec
push
rolb
out
jmp
mov
or
fsubs
bound
inc
dec
push
cld
pushl
out
decb
insl
fistpl
je
imul
mov
mov
stc
pop
push
dec
adc
cmp
fists
mov
outsl
test
lahf
cli
jg
clc
sub
bound
int
arpl
pop
adc
jg
popa
scas
push
imul
out
dec
cli
adc
gs
dec
sbb
xchg
push
mov
movaps
mov
mov
mov
mov
adc
lods
adc
mov
out
cwtl
lcall
jge
add
inc
or
cmp
push
or
jmp
sbb
ss
jge
cmp
sub
sbb
xchg
pop
inc
aas
mov
out
insl
dec
adc
and
sbb
fistl
xchg
loope
pop
mov
clc
cmp
cmp
and
pop
and
push
stos
lret
push
ficoml
pop
xor
fcomip
adc
mov
cwtl
mov
stc
mov
adc
mov
jg
imul
add
shlb
pop
add
pop
and
xor
add
lcall
cmp
xchg
add
inc
mov
mov
push
adc
sbb
pushl
cmp
adc
andb
mov
push
les
insb
mov
dec
pop
sbb
pop
push
mov
outsl
pushl
mov
inc
stos
mov
lds
jbe
sub
stos
add
xor
js
popf
mov
lahf
fistpll
in
rcrb
jmp
test
jne
shrb
fadds
mov
pusha
sbbl
testl
repz
jmp
pcmpgtw
pop
jbe
addl
cmp
adc
push
mov
sub
push
jnp
fildll
pusha
fsubrp
inc
dec
push
lock
call
sub
add
push
scas
sbb
icebp
jmp
outsl
lcall
mov
in
inc
pop
cmp
inc
push
xchg
jg
or
dec
fsubs
mov
jns
fdivs
fcmovnu
cmpsb
jno
sti
or
adc
sub
mov
push
jmp
dec
mov
pusha
dec
dec
pop
loopne
pushl
mov
arpl
stos
fs
mov
mov
push
shll
push
lock
lcall
sahf
pop
dec
outsl
dec
jmp
out
dec
mov
mov
flds
mov
push
out
adc
add
mov
jg
sar
je
loop
outsb
js
frstor
outsb
sbb
mov
call
loopne
jb
ds
sbb
ret
push
pop
push
push
out
mov
ja
loop
push
cld
push
sub
mov
rclb
aad
jle
cwtl
jecxz
inc
push
xor
add
scas
out
add
adc
push
cld
stc
cmp
movsb
inc
sub
out
daa
mov
cmp
xor
or
addb
push
jg
jl
test
pop
cwtl
dec
cmovp
incl
data16
jb
inc
insl
adc
cs
out
cmpsb
pop
dec
and
cld
int
mov
inc
inc
outsl
jge
xor
pop
mov
sahf
xor
pop
mov
mov
cmp
enter
jmp
daa
jno
adc
adc
cs
mov
fldl
subb
xor
ret
cmp
jno
shll
icebp
aas
aaa
sub
cmc
xchg
push
lods
push
mov
cmpsb
add
rclb
stos
es
mov
jecxz
jmp
ja
ds
scas
adc
push
fs
pop
jns
jg
push
int
imul
dec
sbb
mov
add
mov
fimull
rorb
pop
movsb
inc
push
pop
outsl
lock
bound
cmp
sbb
out
stos
cmp
incl
jne
pop
repz
mov
sbb
jle,pn
sbb
dec
enter
inc
inc
ds
adc
adc
mov
lods
mov
lcall
sbbl
sbb
pushf
and
into
cmp
das
outsl
out
add
xor
clc
jg
mov
lret
mov
pop
insb
aas
pushl
repnz
xchg
ja
xchg
arpl
xor
cld
adc
movsl
inc
adc
fidivl
ljmp
adc
fsubrl
jmp
imul
push
jns
dec
cmp
jmp
add
in
xorl
cmp
adcl
dec
jb
adc
mov
movsl
lods
rolb
call
loopne
dec
push
aas
lock
jl
es
inc
xor
std
jb
dec
imul
pushl
in
push
gs
outsb
inc
adc
mov
cmp
incl
jge
ds
push
push
outsb
mov
or
xchg
add
jnp
inc
ljmp
shl
jl
lret
jg
and
mov
rclb
jno
jg
lock
int
jge
dec
pop
les
repz
or
sar
xchg
adc
mov
dec
dec
data16
jg
cmp
jbe
fs
popa
cmp
fwait
fs
jne
and
lret
and
and
negb
lods
and
jg
ljmp
out
cmp
jne
out
outsl
xor
cmp
dec
cli
jmp
pop
sbb
and
add
jae
out
enter
cmp
cld
jmp
sbbb
orb
jb
and
xchg
mov
gs
xchg
jae
mov
push
add
inc
or
xorb
fsubs
outsl
mov
pop
adc
jne
scas
hlt
jl
jo
mov
pushl
push
mov
pop
xchg
inc
inc
int
inc
xor
push
jge
jns
aam
add
or
mov
incl
dec
and
test
notb
fadd
inc
cmc
cld
ljmp
scas
sbb
sub
aas
xlat
inc
xchg
inc
pop
jmp
sarb
mov
insb
int
bound
pop
lret
mov
inc
cmp
imul
jbe
dec
in
fcomip
lcall
pop
add
inc
sbb
mov
ljmp
imul
mov
dec
inc
push
lea
pop
cmc
daa
mov
jne
into
adc
es
push
xor
push
repnz
out
cli
push
sti
push
stc
pop
cmp
cli
adc
sbb
imulb
call
ret
dec
repz
fs
pop
inc
dec
and
push
cmc
mov
jmp
dec
insb
mov
je
dec
jp
insb
ds
jg
daa
mov
int3
xorb
push
inc
outsl
gs
mov
cltd
mov
dec
aas
outsb
mov
push
push
pop
movsb
add
push
jne
jb
pop
jl
xor
add
xchg
pop
push
inc
divb
fdivr
aaa
ret
out
jmp
dec
inc
add
and
arpl
push
push
adc
lcall
lock
inc
ds
or
xchg
cltd
mov
jge
push
dec
jo
scas
arpl
outsb
ja
arpl
dec
jg
testb
cmp
orl
jns
ss
push
stos
dec
jle
pop
mov
inc
outsb
aas
rorb
jo,pn
push
jl
sub
ds
xor
hlt
decl
arpl
inc
out
jno
pop
push
fistpl
ljmp
xor
xor
add
inc
dec
sub
add
aas
pop
insb
decl
lock
repnz
arpl
bound
gs
mov
aaa
ljmp
testb
dec
jo
sahf
adc
sbb
push
push
cs
movsl
or
loop,pt
push
out
push
xor
mov
xchg
add
mov
inc
dec
decb
add
dec
sub
and
dec
jmp
jg
decl
push
insl
repnz
pusha
xlat
int
sub
jp
and
sub
divl
stos
jo
negl
push
and
inc
sbb
lcall
cltd
and
popa
stc
xchg
dec
add
repz
mov
dec
push
mov
pop
fisubl
jno
add
sub
cmpsb
mov
dec
dec
ret
mov
aad
es
dec
mov
mov
pop
addr16
mov
pusha
dec
jae
ljmp
add
dec
pop
push
imul
jo
add
ljmp
jle
call
ss
jp
in
push
pop
add
dec
loope
push
mov
inc
or
jg
cmp
pop
push
jae
mov
into
mov
hlt
jge
dec
lcall
pop
inc
lds
repz
dec
jnp
popf
or
hlt
jb
push
jg
iret
js
mov
dec
jbe
mov
push
inc
inc
push
adc
xor
pop
add
push
adc
in
cmp
jo
cli
xor
jmp
sbb
pop
pop
mov
xor
or
adc
fdivrl
push
insl
xchg
fstpl
imul
dec
xchg
inc
mov
xchg
pop
pop
push
sbb
jg
pop
std
orl
pop
out
push
xor
inc
out
fwait
jmp
dec
pop
push
mov
repz
test
imul
mov
xchg
mov
add
dec
jmp
fldl
sahf
xchg
sub
orl
pop
inc
dec
xor
jg
jmp
sbb
add
cmp
inc
into
mov
shll
push
popa
push
sbb
mov
shl
popl
decl
push
mov
push
add
pop
test
adc
scas
scas
movsb
ljmp
push
sahf
ja
add
dec
jge
pop
pop
sub
adc
push
dec
and
cs
dec
loope
dec
mov
rep
add
mov
pusha
outsl
inc
sahf
scas
add
stc
ljmp
dec
cmp
sbb
sub
mov
lret
loopne
rclb
mov
sub
cmpsl
sbb
lret
mov
std
or
js
arpl
jae
dec
addl
mov
sti
subb
jns
jns
mov
jl
push
xor
or
sbb
in
leave
add
jns
or
mov
sbb
fidivrl
inc
pusha
addr16
adc
pop
jno
pop
lock
pop
arpl
arpl
test
subb
decl
mov
xchg
jp
lret
adc
data16
dec
push
rolb
scas
dec
in
jb
enter
aas
loop
inc
sub
sbb
jg
call
cwtl
mov
add
loope
int
mov
cmp
fldenv
outsl
pop
call
roll
inc
inc
push
clc
decl
out
push
sbbl
jno
push
mov
lcall
or
adc
or
cmp
outsl
lcall
scas
insl
in
fs
inc
test
and
push
sahf
adc
out
in
out
call
idivl
jb
iret
lods
push
fndisi(8087
push
or
pop
inc
or
jne
sysret
and
in
sub
incl
cltd
xor
dec
fnsave
pop
sbb
aas
adc
pusha
xor
ds
sbb
jmp
mov
test
rol
dec
adc
sub
push
out
xor
decl
cmc
insb
cmp
dec
xor
ds
mov
push
loopne
repz
test
pusha
cmp
in
test
push
popf
clc
lcall
jnp
ds
or
mov
xor
cltd
xchg
into
add
inc
add
mov
ja
imul
or
lcall
hlt
imul
ffree
gs
ljmp
dec
xor
jg
or
rclb
cmp
add
out
mov
add
sbb
cld
or
inc
outsl
lock
push
push
xor
sahf
aaa
incl
dec
mull
or
arpl
add
fists
pop
cmp
push
sbb
dec
cmp
sub
mov
clc
cmp
scas
scas
mov
or
and
sub
sub
outsb
test
dec
push
adc
test
insl
and
imul
adc
inc
sbb
arpl
dec
inc
dec
add
pop
jg
incl
push
fldt
jb
pop
cmpsb
pushf
nop
add
sar
loope
xchg
and
xor
push
in
push
jg
mov
sahf
addb
jbe
cmp
lds
test
mov
cmp
out
andb
cmp
dec
incl
dec
stos
mov
test
pop
bound
call
xor
or
cmovno
mov
xchg
cmp
inc
inc
mov
mov
push
pusha
add
sbb
add
lcall
jbe
mov
push
dec
sub
and
stos
incl
xor
xchg
dec
jns
pushf
cmpsb
jmp
ja
sub
push
loopne
dec
jns
mov
jns
sub
fsubrs
inc
loopne
in
xchg
add
cmp
stos
loopne
test
out
shll
jmp
int
addr16
ds
imul
push
xor
mov
cmpsb
mov
mov
mov
jnp
dec
push
mov
pop
test
test
sub
les
pop
dec
scas
sub
mov
test
push
push
enter
cmp
and
and
xor
push
gs
sbb
call
sti
xor
in
cs
cmpsb
xchg
mov
pop
inc
mov
jns
mov
cld
insl
fisubl
and
sub
repz
jb
fsts
fcomip
jmp
mov
dec
gs
xchg
sahf
scas
mov
loopne
mov
jmp
test
incl
lcall
jge
mov
bound
mov
jns
xor
out
cli
jmp
out
aaa
dec
mov
lea
mov
jo
sbb
jecxz
dec
jge
mov
xchg
mov
lcall
sbb
mov
int
out
push
pop
ret
add
ret
inc
aas
loop
incb
fimuls
dec
call
mov
ljmp
add
inc
rcll
sbb
and
cld
add
pop
push
ja
incb
insb
gs
mov
fs
es
jmp
mov
xor
xchg
ret
cmp
rorl
and
aam
adc
jg,pt
call
rclb
jno
fisubl
jno
add
loope
pusha
push
sub
add
incl
and
lods
shll
sub
xor
push
ret
hlt
dec
pushl
or
dec
cmc
xchg
or
mov
sahf
cmp
cltd
xor
sbb
decl
aaa
inc
push
cmp
sub
jl
outsb
cmp
int
jle
nop
inc
lods
in
ljmp
pop
in
mov
mov
xlat
inc
cli
fs
xor
mov
cmp
ljmp
clc
bound
adc
add
adc
adc
iret
mov
or
xor
mov
adc
aas
cmc
xor
fidivl
jne
out
inc
outsl
mov
fidivrl
cmpsb
lock
add
out
pusha
xchg
push
dec
pop
sti
mov
push
pop
stc
push
jne
and
push
push
mov
cmp
sarl
imul
subb
lcall
ret
xor
sub
push
std
pushl
push
test
mov
mov
fisubrl
pusha
adc
cmp
mov
fidivs
mov
orl
inc
xor
mov
out
dec
cmpsb
sub
pop
xor
outsb
pop
dec
repz
jb
cmpb
incl
lahf
xor
stos
orl
dec
jle
xor
mov
fwait
jmp
imul
push
and
jl
mov
decl
push
or
fwait
rolb
fstl
imul
xchg
xchg
or
int
jne
rorb
push
cmpsb
ljmp
rcrb
and
pop
xchg
movsb
jecxz
je
sbb
aaa
std
cmp
inc
sbb
mov
test
mov
jle
and
mov
cmc
aaa
jl
cs
jl
in
mov
mov
lahf
cmp
dec
ds
and
push
jnp
jl
adc
shrl
clc
push
inc
ret
pop
data16
lea
push
in
insl
cltd
and
data16
add
mov
in
subl
pop
fdivr
mov
dec
aam
decl
rclb
push
insb
lret
lcall
insl
push
cli
and
test
jmp
fidivs
cmc
cmpsb
mov
and
pop
int
decl
add
mov
lcall
lea
fcomip
incl
push
std
scas
sbb
lods
dec
jne
sub
mov
mov
or
insl
dec
jecxz
outsl
std
sbb
adc
mov
outsb
test
out
scas
sbb
mov
add
mov
sar
inc
repnz
repz
je
sbb
enter
imul
mov
add
lods
je
das
fcomps
arpl
mov
jmp
lcall
out
add
enter
popa
lods
sbb
cltd
stc
insb
jns
and
mov
fadds
jo
push
enter
aaa
cld
jmp
mov
imul
push
dec
jmp
sbb
push
pop
mov
pop
add
in
lods
jp
lahf
push
sub
insl
aad
inc
push
pop
mov
adcb
lods
adc
inc
cmp
mov
ljmp
rorb
sbb
pop
les
imul
lcall
in
outsl
dec
jno
jno
sub
inc
orb
adc
lock
ret
jg
testl
stos
pop
clc
or
imul
push
shll
in
loopne
push
into
sub
lret
push
out
imul
jg
sahf
inc
ljmp
sbb
bound
jge
fists
cli
movsb
mov
xchg
xchg
repz
ficoml
jno
ljmp
dec
out
mov
pop
outsl
sub
pop
jle
sub
mov
outsl
mov
mov
lcall
mov
dec
clc
dec
inc
xor
lahf
jmp
outsb
and
adc
push
pop
mov
sub
cld
bound
or
insb
stos
jnp
outsb
push
out
test
dec
inc
inc
orl
jb
pushl
loope
incb
inc
out
or
inc
in
stos
adc
sub
ja
leave
sub
xor
lahf
pop
add
lret
mov
xor
imul
adc
fisubrs
push
arpl
jl
inc
pop
inc
jp
sbb
fs
arpl
fmull
jbe
sbbb
jmp
dec
pop
xchg
xor
jecxz
push
jbe
lahf
outsb
test
out
clc
or
incl
repz
dec
ds
push
out
lcall
cs
loope
push
insb
gs
into
xchg
adc
rolb
jnp
push
dec
int3
sbb
cwtl
mov
xchg
adc
test
xchg
fldt
jne
cmp
xchg
dec
jne
lcall
jge
scas
imul
scas
data16
mov
imulb
sbb
ljmp
push
cld
packssdw
das
outsb
push
int
dec
jbe
mov
imul
mov
push
pusha
sarl
js
in
jle
dec
jbe
adc
test
mov
orl
sbb
test
ja
clc
and
adc
fistps
sahf
jbe
call
sub
call
jnp
dec
loopne
mov
test
dec
fidivl
pop
mov
mov
mov
ud0
pushl
mov
pusha
in
pusha
popf
and
repz
mov
and
add
out
fwait
daa
jl
pop
cmpl
lods
fnstenv
inc
shrl
add
jp
mov
xchg
fwait
es
cwtl
add
mov
mov
shl
dec
lds
push
xchg
xor
in
dec
rolb
ljmp
pop
testb
les
push
xor
xor
and
cmp
decl
push
push
mov
sub
dec
fsubrs
cmp
mov
dec
cltd
and
in
adc
jecxz
incl
xor
push
dec
nop
pop
inc
pop
cmp
mov
push
push
lea
aas
xor
cmp
std
test
adc
adc
in
insb
jmp
clc
gs
movsb
ds
leave
mov
sbb
frstor
ja
out
ss
nop
push
icebp
jg
lcall
push
xor
lahf
pop
add
cmp
jg
sarl
or
fisttps
cmp
je
jmp
notb
test
push
shlb
pop
push
bswap
mov
dec
out
cmp
jg
cmp
das
jno
stos
jb
outsl
iret
inc
movsl
pop
rorl
les
push
jg
je
mov
mov
out
push
sbb
sub
test
insl
enter
mov
std
cmp
cmp
mov
les
stc
movd
inc
jmp
pushl
or
stos
das
or
xchg
mov
and
mov
or
jp
je
and
ss
pop
js
pushl
icebp
lods
ret
xchg
sbb
sti
sbb
jmp
inc
sub
mov
rcr
jmp
movsb
je
sub
out
xchg
pop
or
sbb
cmpl
jg
inc
mov
pop
mov
lahf
jbe
fisttpll
push
outsb
or
lea
mov
xor
in
jbe
sub
gs
imul
cmp
lods
movsb
test
das
sbbl
pop
or
movsb
btr
inc
icebp
imul
dec
pop
and
add
or
adc
aas
test
adc
add
mov
jno
push
pop
push
inc
leave
inc
cld
pushl
imul
xor
sub
fistpl
mov
or
mov
ja
jb
ljmp
lds
jo
movsl
lret
fwait
aaa
jns
sub
arpl
lock
mov
jne
jae
cltd
push
mov
xor
fs
or
mov
jno
lcall
cli
pop
icebp
xor
adc
cmp
mov
mov
pop
adc
mov
xchg
and
fstpl
ds
jo
add
lcall
push
mov
adc
and
mov
scas
sarb
jecxz
ljmp
pusha
loope
hlt
mov
xchg
test
inc
into
mov
outsb
in
adc
cld
shlb
mov
jg
push
mov
mov
lcall
mov
sub
xor
xchg
push
scas
sub
jbe
adc
cs
popf
xchg
mov
stc
lcall
add
and
sub
pop
cmp
mov
gs
pop
mov
movsb
incb
lahf
dec
rclb
andl
out
mov
hlt
call
and
insb
lcall
stc
pop
pop
jp
out
scas
or
ds
pushf
cmp
in
negl
pop
popa
add
lcall
aam
stc
sbb
sub
lock
mov
ret
xchg
push
testb
dec
or
cmp
daa
call
ljmp
ds
dec
mov
lds
shlb
insl
loop
inc
xor
sbb
ljmp
scas
mov
pop
dec
out
ds
sub
sub
sbb
lcall
fisubrs
lds
or
pop
pop
cmp
shll
add
push
jae
std
inc
and
scas
xor
cmp
incl
inc
cmp
mov
push
mov
push
jp
cmpl
es
jb
mov
incl
popf
inc
xchg
pop
push
jmp
lcall
dec
and
sbb
jecxz
mov
lods
xchg
cli
jne
inc
adc
xorl
xor
and
data16
dec
jne
stc
and
mov
pop
cmp
add
jno
and
sbb
dec
lcall
mov
cmp
adc
sub
add
cmovnp
ret
cld
addr16
xchg
ds
jg
dec
les
je
jmp
pop
loopne
and
jns
ret
decl
pop
int3
and
mov
shll
push
imul
cmp
cld
inc
push
gs
je
arpl
es
js
icebp
pusha
bnd
jle
push
jl
push
xchg
lcall
shll
mov
pop
jo
push
test
cmp
push
jb
ficompl
xorb
xchg
mov
push
add
mov
jo
mov
adc
adc
fcomip
dec
adc
stos
gs
stos
add
jno
pusha
add
dec
jg
daa
inc
push
loope
inc
inc
sbb
pop
aam
jne
add
mov
push
outsl
filds
pop
out
inc
inc
pop
js
inc
aas
inc
dec
lcall
pushl
xor
xchg
mov
inc
cmp
pop
jb
sbb
test
sbb
or
fs
int
cwtl
cmp
bound
mov
pusha
inc
popa
sti
test
cmp
dec
add
inc
add
or
movsl
push
pop
xor
xlat
fisubrl
sub
aaa
mov
popf
jecxz
xor
ret
aaa
xorl
lods
adc
jmp
int
les
fnsave
das
push
jnp
stos
sub
dec
mov
push
pop
dec
gs
outsb
ret
loop
imul
jb
les
ja
incl
push
jb
call
pop
int
push
jmp
push
jp
dec
int3
push
inc
jne
test
inc
ljmp
ret
or
inc
rorl
clc
out
mov
xchg
pop
mov
fwait
shrl
pop
jae
test
mov
inc
ljmp
outsl
adc
notb
inc
pop
cmp
decb
fdivrs
gs
rcrb
jno
and
jecxz,pt
outsl
cmp
dec
mov
mov
js
fs
mov
imul
mov
popa
popf
mov
dec
in
cld
iret
inc
sahf
and
inc
sub
cmp
fldt
xchg
mov
or
imul
sahf
cmp
mov
aad
jb
inc
mov
out
bound
rolb
decl
frstor
rcrl
jne
jp
call
lock
sub
loope
jo
jb
jbe
and
jp
xor
push
mov
dec
mov
jno
cmp
in
mov
outsl
loope
jo
mov
lods
cltd
push
cmpsb
adc
lcall
sub
xchg
push
dec
lea
movsl
xchg
mov
push
imul
lahf
incl
test
punpcklwd
imul
psadbw
dec
lahf
incl
add
fldt
cs
out
fistpll
pushf
dec
jne
cld
flds
popl
in
loop
int3
dec
xor
jp
pop
or
rolb
data16
roll
in
dec
iret
inc
in
outsb
mov
dec
inc
inc
int3
sbb
push
in
cmp
pop
and
cmp
ret
mov
clc
lcall
fnstenv
pop
dec
aas
inc
loop
inc
pop
scas
insl
pop
imul
loopne
cmp
popa
in
scas
or
std
es
cli
add
xchg
lret
rcrb
ljmp
push
loope
xor
inc
je,pn
sahf
cmpsb
stos
fsubr
dec
sub
mov
add
aaa
push
dec
clc
xchg
shrb
insl
mov
jo
jp
or
test
decb
fdiv
into
pushf
js
std
push
bound
stos
sub
or
movsl
push
pop
push
push
pop
jae
test
jne
repz
imul
or
decl
xor
or
xchg
movsl
mov
aam
pop
adc
add
cmpsb
sbb
clc
aas
int
int
mov
xor
aaa
ret
jne
fcom
cld
aas
pushl
push
fs
xchg
cmp
dec
push
pop
xchg
inc
int3
arpl
jmp
mov
outsl
cli
and
jmp
push
pop
sti
cmp
scas
loope
repz
push
pop
orw
and
mov
arpl
xchg
mov
das
les
jle
lea
mov
aas
push
popa
dec
xchg
scas
jecxz
hlt
lcall
mov
cli
inc
mov
mov
pusha
sar
lock
aas
push
inc
sbb
push
adc
call
dec
movsb
jne
jae
out
or
sub
jnp
push
test
into
push
push
pop
cmc
push
inc
sbb
pop
jno
xor
dec
jp
lahf
fwait
inc
lea
out
in
jne
sub
jne
sub
xor
scas
call
mov
es
and
shrl
lret
ljmp
or
pop
cmp
jae
jge
aaa
aam
pop
out
jne
add
out
out
rcrl
inc
dec
xor
adc
test
push
icebp
out
add
outsl
and
ret
pop
dec
pop
inc
push
lds
aas
rorl
out
adc
mov
and
or
das
rcr
lock
pop
cmp
fcomps
mov
dec
popa
sub
mov
decl
fwait
cmp
cmp
sub
xchg
mov
sahf
xchg
cltd
fdivl
inc
inc
push
xchg
scas
lods
ja
jo
pushf
push
adc
call
dec
jmp
dec
loop
scas
mov
ds
sbb
pusha
push
and
in
and
inc
xchg
push
jle
lock
push
scas
or
dec
clc
out
das
pop
test
outsl
xchg
push
jmp
stos
std
mov
mov
dec
stos
mov
test
stos
add
dec
push
dec
jmp
aad
jmp
and
or
andl
out
cmp
inc
lods
lret
inc
pusha
mov
cld
ljmp
mov
adc
test
pusha
imul
arpl
insl
pop
out
mov
decl
mov
or
push
imul
jmp
push
mov
les
push
pop
push
mov
call
fildl
mov
sbb
xor
mov
adc
mov
xor
mov
add
push
inc
in
std
pop
into
xchg
ljmp
dec
addr16
or
nop
out
xchg
lea
fcoms
std
jg
add
jecxz
cmpsb
pop
mov
and
mov
push
imul
mov
mov
pop
xor
das
outsl
loopne
arpl
lods
out
add
dec
jae
dec
pushf
cmp
dec
in
or
mov
inc
les
sub
pop
pop
repz
stc
insl
lcall
or
out
sahf
sub
shrl
pop
fistl
addr16
pop
cwtl
inc
mov
les
xorb
xchg
or
inc
mov
cmpxchg
out
pop
ljmp
insl
leave
scas
icebp
popa
or
adc
icebp
sbb
xchg
mov
cld
dec
addr16
mov
ljmp
inc
fidivs
xor
sub
dec
pop
test
fmull
pop
push
xor
dec
and
jmp
test
dec
push
mov
leave
pop
mov
mov
test
xchg
int3
mov
and
xor
jge
pop
xor
das
test
clc
call
in
pop
mov
and
push
push
repnz
pushf
push
cmp
lods
push
fstpl
push
das
mov
sbb
pusha
sahf
cmp
mov
cmp
pushf
jl
cmc
cli
pop
or
sub
gs
imull
cmp
xchg
lret
pop
xchg
mov
or
push
mov
jb
mov
mov
outsl
pushl
nop
cmp
les
movsl
mov
jne
mov
dec
int3
scas
mov
ja
pop
pop
icebp
and
das
outsb
dec
or
push
outsl
insl
ljmp
push
out
dec
or
movsl
lcall
lcall
inc
in
adc
and
dec
shlb
test
or
jmp
and
fnstenv
mov
ds
pusha
repz
adc
aas
mov
mov
lea
adc
xchg
dec
mov
mov
mov
cld
pop
lock
je
decb
fs
dec
repz
call
cmp
outsl
and
mov
mov
add
pop
mov
jg
shlb
push
pushl
jb
mulb
dec
mov
pop
add
imul
test
movsl
pushl
add
xchg
mov
fdivrs
cld
pop
inc
call
ficoms
xor
xor
add
or
ss
add
lcall
sbb
mov
aaa
xchg
push
popa
jmp
jg
dec
out
or
stos
out
mov
mov
fwait
pop
cmpsl
mov
ljmp
lds
mov
cwtl
or
mov
adc
push
clc
ss
xchg
packsswb
mov
pop
or
shll
jbe
pop
mov
subl
sub
shll
sbb
cmpsl
out
stos
mov
mov
adc
popa
es
les
test
mov
lds
mov
xor
cmp
cmp
sbb
mov
stc
adc
cltd
scas
jns
jno
pop
inc
push
inc
mov
mov
lcall
adc
jns
adc
mov
xchg
or
push
dec
aad
push
pushl
dec
xor
mov
xor
in
loope
outsl
jle
fstpl
inc
out
pusha
jecxz
push
decl
cmpsb
sub
push
test
aaa
inc
outsb
cmp
orl
mov
xchg
cld
or
xchg
sub
mov
mov
scas
clc
and
adc
xor
pushl
mov
sbb
rolb
out
jmp
sbb
mov
cmp
das
or
jle
rcrl
repz
adc
adc
stc
sub
sbb
push
fidivrs
sbb
cli
test
int3
xor
scas
cmp
xor
pusha
mov
jge
mov
push
dec
popa
scas
inc
adc
rep
xor
fs
inc
xorb
dec
in
cmpsb
cmp
fwait
lods
pop
psubb
sti
push
outsb
xchg
cwtl
jns
test
lcall
jg
cwtl
or
ficoml
jae
pop
repnz
xchg
mov
dec
jb
fidivl
push
pop
push
sub
adc
lret
test
push
cs
aas
in
ljmp
sti
ss
dec
jge
mov
adc
sub
or
outsb
loopne
insb
outsb
mov
out
add
outsb
mov
push
popl
adc
ss
xor
jg
mov
push
pusha
lea
insl
gs
addl
push
mov
push
push
mov
std
jo
jns
push
in
push
jb
xor
outsb
sar
out
icebp
mov
cmp
cmp
jg
cmp
mov
call
clc
das
outsb
cmp
pop
adc
push
and
adc
cmp
inc
jnp
and
or
ss
rol
push
jo
cs
fsts
jmp
sbb
les
popa
fwait
cmp
and
clc
cmp
dec
stc
jmp
loope
push
je
or
pop
add
shrb
test
aas
add
rorb
or
pop
jo
inc
push
in
or
mov
push
stos
nop
ss
test
mov
push
sbb
sub
dec
sbb
shrb
lea
cmpsl
test
leave
xor
pop
xchg
dec
jl
iret
aas
xor
push
fbstp
jbe
loopne
jle
fs
iret
push
sub
cltd
sahf
or
lahf
pop
test
xorl
lahf
aas
and
in
aaa
cmp
or
icebp
fsubl
rorl
decl
mov
inc
les
shlb
fldenv
mov
or
inc
enter
rep
mov
ds
ljmp
fildl
push
sti
pop
push
fists
pop
stc
jae
lcall
mov
std
cmp
imul
inc
push
bnd
mov
push
mov
jae
aaa
sub
push
call
call
add
movsl
xor
pop
xchg
mov
fistpl
imul
mov
test
mov
sbb
imulb
mov
jg
push
js
stos
ret
stos
sbb
test
pop
bound
cwtl
add
sub
outsl
jg
mov
sahf
mov
int
push
pop
roll
and
cmp
jmp
orb
dec
daa
dec
jbe
xchg
mov
inc
out
push
insb
sbb
in
clc
jg
pop
adc
pop
loop
and
jbe
ja
xor
lcall
add
sub
je
and
pop
repnz
jg
icebp
fs
push
outsb
mov
cld
lcall
jo
cmp
mov
cltd
fs
out
sbb
dec
fnstenv
lret
or
push
mov
jl
daa
pusha
out
incb
dec
mov
insb
call
std
in
dec
std
pop
into
sub
dec
int
dec
inc
lea
out
out
dec
dec
xchg
js
jnp
call
test
dec
xor
aaa
out
clc
fldt
adc
insb
xchg
jo
lcall
data16
adc
jmp
jns
mov
jne
pop
icebp
adc
jmp
outsl
jmp
and
arpl
and
sub
pop
jne
movsl
xor
sub
dec
ud0
jmp
mov
ljmp
mov
dec
mov
leave
jnp
jle
test
jae
lea
scas
push
dec
rorb
add
dec
push
int
sbb
mov
cmpsb
sbb
lret
lds
lahf
dec
mov
sbb
out
xor
cmp
decl
or
fbstp
inc
fisubl
mov
jae
mov
jb
or
pop
jp
dec
sub
adc
fs
and
dec
shrb
sub
or
sbb
mov
xchg
decl
jle
push
int3
mov
dec
es
out
loop,pn
lcall
int3
sub
sbb
mov
iret
shr
mov
jae
push
ret
imul
out
arpl
insl
push
lods
push
inc
out
mov
dec
lock
in
dec
cmp
repz
ja
add
sub
dec
sbb
nop
js
pop
pushl
cld
or
dec
clc
push
dec
lods
mov
push
push
int
test
add
arpl
mov
shll
pusha
lcall
fiadds
dec
jmp
dec
jno
push
fwait
xor
fildll
out
adc
test
cld
jg
push
push
inc
jl
imul
cld
cmp
xchg
dec
ror
sub
or
pop
cmp
cmpsb
rcll
pop
pushl
fs
mov
cmp
in
imul
sub
dec
rclb
mov
cmp
jl
and
and
dec
fisubs
push
insb
je
xchg
je
mov
daa
pop
cmp
push
out
xor
dec
mov
inc
out
lcall
mov
jg
out
aas
pop
int3
punpcklbw
jbe
sbb
xchg
jl
xchg
ret
add
ja
pushl
flds
inc
dec
outsl
cltd
popa
std
subb
loope
dec
fbstp
push
xor
adc
ljmp
pusha
lcall
mov
lcall
adc
std
fidivrl
jle
test
arpl
pop
insl
clc
adc
popa
dec
xchg
je
ja
inc
test
out
and
xor
sub
test
and
pop
les
sahf
cmp
xor
xor
fcomip
rolb
ss
mov
gs
mov
sbb
mov
mov
add
xor
ja
xor
add
or
inc
dec
out
insb
pop
inc
nop
jecxz
sahf
jge
cmpsb
decl
inc
loop
loopne
pop
inc
iret
xchg
cmp
in
pop
les
gs
jb
cs
out
push
mov
call
dec
jg
sbb
insb
stc
sahf
or
cli
cmp
pop
dec
mov
and
hlt
sbb
bound
fcoms
jle
mov
add
fldcw
es
sub
test
lea
inc
fadds
cld
lcall
pop
push
mov
xchg
inc
in
xorb
jmp
xchg
mov
test
push
jns
sub
scas
push
push
mov
cmpsb
pop
out
adc
cmp
in
inc
cmp
mov
fistl
mov
lahf
incl
sbb
or
repnz
out
push
inc
int3
dec
out
cmp
pop
call
mov
shlb
push
dec
xchg
in
pop
imul
pop
in
aas
jge
pop
jno
dec
mov
jne
or
sub
mov
mov
clc
nop
mov
adc
repnz
fnstsw
sar
ljmp
out
jg
inc
inc
lea
and
mov
jne
clc
mov
cmp
rclb
mov
arpl
popl
xor
push
sbb
pop
jl
rcrl
cmp
jmp
sbb
cld
xor
push
mov
inc
lds
push
sbb
adc
xor
je
cwtl
push
xchg
ds
dec
lds
push
adc
mov
dec
std
push
into
aas
jp
les
inc
sahf
push
jecxz
ja
xchg
xchg
popf
mov
xor
dec
es
fxrstor
adc
insb
pop
lea
call
cli
aas
adc
sub
dec
xor
mov
mov
jecxz
dec
or
fcoms
cld
push
pop
stos
ds
adc
add
ja
inc
or
decl
lock
push
dec
lcall
insl
ja
ds
inc
out
push
aaa
inc
decl
cmp
test
or
push
js
cmp
jmp
int
push
inc
in
dec
dec
popf
loopne
inc
adc
call
ljmp
pushl
pop
out
pop
pop
ficoml
pushf
mov
outsl
jnp
imul
data16
jmp
sbb
sbb
sub
insb
cmp
or
insl
test
xor
cs
in
add
pusha
mov
pop
into
jg
sub
mov
arpl
dec
subb
jle
push
mov
das
push
dec
int3
adc
adc
shll
mov
lock
jmp
xor
jae
cmp
or
and
dec
cli
push
je
pop
clc
jg
sahf
sub
sub
inc
cs
push
pop
dec
pop
loop
jg
xor
fdivs
mov
lcall
jl
sub
pop
ljmp
mov
repz
inc
les
xor
jne
add
mov
pusha
jp
addb
mov
sbb
xchg
nop
iret
insb
clc
sub
dec
mov
inc
pop
fstpt
jns
loope
add
lcall
test
mov
mov
xchg
mov
ja
pushf
lds
repnz
add
mov
ret
out
lcall
orb
mov
xor
cmp
adc
or
or
ss
adc
hlt
out
adc
sub
xor
dec
int
push
fildll
dec
fs
popa
icebp
and
fisttpl
insb
jmp
out
sbb
fstps
pop
cmp
jp,pt
adc
fistps
dec
loopne
dec
jge
mov
lcall
mov
arpl
addb
mov
je
xchg
test
cli
sub
enter
iret
scas
xor
push
aam
ja
orl
addr16
out
jne
mov
mov
and
shlb
cmp
xchg
lods
incb
xchg
jmp
mov
shll
rorb
bound
push
dec
fildll
cs
xchg
sub
jno
aaa
fs
les
insl
push
decl
adc
loopne
dec
cmp
bound
data16
stos
cmc
outsl
es
xchg
roll
fimull
dec
test
jg
jge
push
and
outsb
shlb
insb
push
sbb
imul
cmp
das
add
push
jno
mov
push
rcrl
ljmp
inc
push
mov
pop
cmp
aas
inc
fstpt
sbb
loop
inc
inc
inc
movl
or
pushf
jg
jmp
dec
pop
mov
or
jae
jbe
mov
or
inc
push
rcrl
out
cmp
sahf
dec
mov
sub
or
and
add
out
cli
jns
xor
lods
sahf
add
push
xor
jge
sub
cmp
xor
jg
fildl
and
xor
add
add
inc
fidivrl
pop
push
sub
add
sub
push
fists
jmp
pushf
push
push
dec
repz
pop
push
cmp
cmp
int3
sbb
inc
jae
inc
call
into
add
stc
jae
es
gs
sub
sbb
jbe
movsl
nop
jns
dec
fisttpl
mov
sahf
outsb
cmp
xchg
scas
xchg
out
adc
add
adc
decl
out
adc
xor
out
jns
add
sub
add
inc
hlt
imul
cmp
jbe
mov
and
mov
mov
pop
add
sub
adc
adc
call
adc
iret
sub
push
xor
xchg
push
sub
movsl
cmp
dec
ljmp
inc
movsl
cltd
pop
out
scas
nop
in
add
push
std
jg
mov
aaa
push
and
and
or
fistl
jge
add
filds
aas
cld
aaa
sub
push
xchg
pop
imul
outsb
and
ss
fs
cmp
and
or
jae
scas
pop
add
sbb
hlt
xor
cmp
cwtl
adc
lcall
fs
jo
cmpsl
xchg
inc
inc
insb
lds
popa
or
into
jg
inc
lahf
cmp
sbb
cli
sub
enter
add
or
add
daa
dec
mov
add
xor
ljmp
sbb
imul
mov
fmull
sbb
fistpll
shlb
push
push
sub
push
das
orb
aaa
xlat
pushf
pop
sub
add
sbb
jl
movsb
adc
mov
inc
fbld
outsl
filds
std
orb
jg
sbb
push
pop
inc
mov
ds
or
and
std
or
sbb
mov
int
push
cmp
xor
je
push
out
push
movsl
push
fs
add
fwait
xchg
jp
fs
jg
xor
pop
mov
mov
out
pop
pop
out
stos
insb
sbb
add
mov
add
subb
mov
decl
jg
fstl
lods
push
push
fcoms
push
add
mov
call
jne
out
icebp
add
or
ss
xor
jg
das
int3
sahf
jne
mov
popa
lahf
sub
insl
jae
push
icebp
inc
lcall
jg
xchg
leave
mov
aam
mov
ret
sub
jns,pn
stos
inc
jo
jg
dec
jbe
pop
mov
insb
pop
jne
push
hlt
clc
mov
dec
shll
mov
pop
clc
jmp
mov
lcall
mov
andb
in
adc
mov
lods
jo
xchg
arpl
xchg
cwtl
scas
lods
push
push
scas
inc
jno
stos
push
push
dec
mov
mov
out
clc
mov
sahf
adc
pushf
cmpsb
xchg
mov
lcall
sbbb
mov
scas
cmpsl
mov
mov
je
mov
ljmp
mov
add
xchg
out
dec
push
aaa
and
mov
lods
popa
lods
lods
int
out
cli
call
mov
push
xchg
mov
pop
push
sbb
and
ljmp
add
pop
in
jo
scas
mov
pop
pusha
adc
stos
decl
pop
je
scas
jp
dec
dec
add
pushf
popa
jno
push
jns
sub
pop
xchg
mov
cmc
repnz
outsl
pop
push
inc
fcoml
xchg
mov
cmpsb
jg
jg
frstor
fs
pop
pop
fmull
and
out
jmp
outsb
push
sbb
sub
add
add
cmp
fsubrs
repnz
jg
xchg
in
jp
and
and
das
and
cmp
scas
ljmp
jg
std
dec
push
pop
lret
andb
mov
xor
xchg
sar
popf
inc
dec
bound
mov
xor
mov
leave
and
ljmp
cmp
std
fbld
pop
sub
sub
repz
ja
ljmp
and
ret
mov
pop
imul
pop
into
repz
je
imul
in
jbe
push
dec
ljmp
call
xchg
push
mov
dec
dec
dec
push
jle
repnz
xchg
pushl
je
sbb
insl
addr16
mov
sahf
mov
or
and
pop
mov
mov
push
rclb
jb
mov
xchg
out
dec
add
mov
cmc
out
or
lahf
xchg
xchg
mov
scas
pushf
mov
decl
xchg
outsl
ss
ja
mov
mov
mov
cmpsl
popf
insl
cmp
dec
mov
jb
jns
dec
repnz
cmpsl
icebp
mov
mov
mov
popf
ret
push
push
outsb
jbe
lea
pop
ljmp
stos
test
xchg
and
adc
das
push
ljmp
mov
or
adc
outsl
in
xor
add
pushl
push
and
popa
data16
cmp
movsb
outsl
jle
dec
push
cmc
mov
cld
sbb
popa
fsubrl
call
rclb
jge
xchg
fs
std
ljmp
xchg
shll
sub
stos
call
or
jns
shll
sub
aas
cld
pop
pop
add
mov
popf
imull
jb
pop
push
add
add
push
dec
xor
mov
add
scas
outsb
call
addr16
lds
and
jp
test
jg
popa
push
out
ss
dec
mov
es
ljmp
sarb
cmp
jecxz
push
sbb
sub
cmp
lcall
aas
dec
adc
es
pop
pop
fcompl
add
pop
or
mov
inc
out
and
and
call
dec
iret
divps
fidivl
inc
test
and
push
jmp
scas
cmp
aas
xor
repz
es
mov
jl
add
xor
loopne
pop
stc
lods
sub
rorl
aas
aaa
sbb
sub
push
inc
mov
std
xor
iret
ljmp
sbb
push
mov
push
jno
pop
mov
decl
mov
xchg
jno
mov
jns
test
icebp
jg
pop
xchg
jp
sub
loop
push
xchg
mov
dec
push
fstpl
jl
mov
popl
pop
add
or
xlat
or
inc
xchg
jb
call
incl
jnp
push
push
icebp
or
pop
pop
cli
ds
loope
dec
cli
add
sub
or
jmp
popa
xchg
mov
lock
pop
xchg
outsl
out
push
inc
test
repz
xchg
sbb
xor
repz
push
outsb
repnz
rclb
cmp
sub
sub
pushf
push
mov
fs
cmp
cmp
addl
mov
or
sbb
sbb
add
push
dec
mov
ds
dec
out
jmp
out
aam
loopne
decb
push
dec
jecxz
bound
sarb
xchg
jmp
add
mov
push
rolb
cmc
jg
xchg
mov
or
loopne
pop
jne
dec
fidivrs
xchg
push
lods
sbb
cmp
xor
adc
mov
and
je
sub
xchg
imul
ljmp
push
mov
dec
stos
dec
gs
sbb
ret
pop
adc
lock
xchg
test
sbb
xor
mov
call
or
inc
clc
inc
lret
push
loope
jge
mov
add
push
lods
and
dec
lret
ds
fsts
pop
hlt
scas
shlb
dec
rcll
pop
push
sbb
inc
push
pop
ds
or
pop
push
mov
jp
in
push
jmp
incl
xor
ljmp
inc
or
scas
ret
lcall
dec
jg
and
loop
bound
daa
sbb
push
mov
movsl
incl
mov
jne
bnd
push
les
push
sub
sbb
jg
call
pop
out
mov
adc
pmuludq
jle
cmp
test
mov
incb
push
shrl
aam
insb
dec
sbb
leave
xor
mov
xchg
lock
xchg
xchg
out
scas
adc
ljmp
stos
scas
stos
xor
sub
hlt
cmpsb
xchg
out
add
ljmp
xor
fwait
adc
push
rol
jmp
int
dec
shrl
pop
cmp
cmpsl
lret
add
insb
lret
pop
out
int
push
je
xchg
inc
fmul
data16
pushf
xor
jae
lcall
jnp
cmp
xor
gs
ljmp
lret
cmp
mov
stc
and
xchg
pop
pop
push
scas
int
int
or
in
popa
test
decl
add
and
js
inc
xor
adc
aas
dec
call
and
decl
std
imul
imul
add
movsl
cs
sti
mov
jmp
pop
mull
sbb
outsb
mov
gs
push
andb
sahf
shrb
in
dec
push
es
dec
push
xor
sub
es
das
rcr
and
fldt
push
add
fisubs
pop
out
push
jbe
fldl
loopne
jmp
mov
pop
imul
jno
loope
jbe
nop
ret
sbb
lcall
jge
andl
mov
mov
ja
fistpll
or
xchg
scas
repnz
pop
aam
loop
rol
dec
xor
add
rcrl
push
aas
jle
enter
into
cli
dec
out
iret
cmp
in
sub
xor
inc
inc
jb
inc
shll
fimull
push
decl
push
ja
data16
ffree
inc
cmc
rcll
dec
repnz
imul
imul
les
daa
loopne
pop
out
push
ret
addr16
loope
push
imul
sarb
repz
adc
push
je
pop
cld
int3
dec
shll
mov
insl
jge
aas
daa
xorl
aam
incb
mov
out
movsb
out
stc
outsl
push
cmpsb
adc
clc
ljmp
call
add
xor
test
ret
fimull
je
push
loopne
jno
fimull
add
lock
call
enter
sar
iret
xchg
or
bound
jno
push
cs
outsl
cli
aam
in
ss
adc
jle
incl
mov
dec
int
inc
lcall
popf
shrl
fistpll
jae
cmp
int3
jbe
loopne
insl
ja
lcall
pop
fimuls
loope
scas
movsb
xor
mov
out
les
jne
test
pusha
adc
ja
imul
in
lret
pop
rcll
sbb
insb
enter
add
mov
enter
xor
repnz
xlat
mov
movsl
mov
insb
jmp
or
xchg
fcmovne
push
fdivrl
add
aaa
mov
jle
aaa
push
insl
adc
les
imul
arpl
enter
outsl
aam
push
call
cmc
arpl
int
int3
notl
pushl
inc
push
pop
add
adc
gs
and
add
jno
in
out
fwait
jmp
push
outsl
icebp
xor
xchg
jge
or
dec
loopne
std
inc
fcmovu
je
jnp
jb
cmp
out
pusha
scas
fmul
push
and
stos
push
into
push
sbb
xchg
cli
adc
jg
call
popa
jmp
clc
fmull
test
push
lds
into
adc
loope
push
out
jo
scas
ret
dec
rorl
push
bound
and
push
inc
popa
sbb
mov
popa
sahf
cld
adc
inc
lock
sub
in
xchg
sbb
nop
jecxz
out
pop
fdivrp
mov
lock
sbb
shrb
je
in
push
fsubrl
mov
arpl
loopne
inc
rol
popa
add
lahf
jg
shl
fstp
or
sub
fs
je
aam
mov
out
pop
push
adc
or
xor
and
data16
mov
es
adc
cmp
adc
sub
xor
xchg
hlt
call
and
dec
aaa
cmp
call
sub
ljmp
ljmp
pop
xor
ljmp
dec
cmp
shrb
sbb
fcomip
das
sahf
push
insl
mov
andl
push
or
repnz
xchg
test
lcall
xlat
mov
pop
insb
out
cmpl
push
jg
sar
test
xchg
lret
stos
push
pusha
insl
push
sub
mov
ds
fildl
adc
cmp
jp
or
sub
sub
jmp
jge
and
dec
or
jae
cmpsl
mov
nop
imul
sub
incl
dec
inc
sbb
mov
aas
out
out
jbe
in
cmpsb
lcall
push
scas
and
test
ret
ss
push
jge
fucomip
pop
cmpsb
adc
jl
and
loopne
jno
repz
ljmp
lret
or
sub
lea
sub
pop
cli
int
jp
xorb
or
pop
or
inc
scas
inc
std
mov
lcall
jecxz
sbbl
insb
in
push
jmp
scas
aas
popa
add
or
scas
mov
xchg
mov
lret
es
jbe
mov
int3
mov
in
pusha
push
pop
enter
mov
xor
out
cmpsb
mov
dec
cs
dec
sub
js
and
pop
sbb
push
pop
add
sub
cs
inc
mov
xor
mov
decl
pop
lret
push
leave
xor
ficompl
push
aam
insb
push
int3
jae
outsb
loop
ljmp
loope
bound
push
dec
inc
aad
push
cmp
andl
pushl
add
insl
jmp
or
movb
jge
jo
sbb
int
js
cmp
sarb
pop
add
cmpsb
inc
adc
arpl
nop
jae
add
stos
loop
cmpsl
or
call
call
incl
adc
pop
pushf
cmpsb
js
sub
enter
push
jp
rorl
inc
nop
aaa
loop
xor
jle
bound
pop
in
lds
sar
pushl
jne
mov
jg
pop
pop
jb
mov
adc
cmp
xchg
push
jne
iret
popf
jg
icebp
or
dec
outsl
js
jp
pop
loope
dec
or
add
hlt
daa
stc
xor
cmp
repz
jmp
push
jns
cmp
inc
xchg
adc
jg
into
push
lds
dec
ds
sbb
fdiv
mov
das
xchg
ret
mov
jg
in
ljmp
incb
mov
testl
icebp
int3
fstl
jle
les
lea
dec
out
push
pushl
add
and
sbb
and
test
sub
sub
icebp
pushl
imul
rorl
jae
xor
sbb
add
cmp
cltd
or
int
iret
adc
fsubr
dec
jmp
jecxz
ds
or
fsubrl
sub
movsl
pop
ds
out
cmpsb
notrack
push
aad
xor
jb
pushl
sahf
int3
xchg
into
das
push
sub
jle
xor
pop
xor
push
push
jae
rorl
dec
xchg
out
jo
ds
sub
or
jg
push
pop
mov
das
lcall
decl
mov
orb
sub
push
push
in
jb
ja
stc
jg
and
jmp
daa
inc
mull
sub
push
int
lds
aas
jnp
jns
push
inc
shll
jmp
decl
dec
ja
popf
add
dec
jo
mov
pop
inc
lcall
mov
sub
loope
push
inc
sbb
pop
call
ljmp
xor
out
sbb
xchg
fdivrl
les
add
pop
shlb
ja
pop
jns
adc
pop
lock
punpckhdq
dec
into
sub
dec
push
idiv
pushl
les
dec
inc
rcrl
cmp
mov
push
pop
ja
stos
pusha
add
xlat
int3
and
inc
sarl
add
outsl
or
dec
inc
decl
jp
stos
pop
dec
popa
insl
aas
sub
pushl
mov
mov
jae
sbb
adc
jge
xchg
sub
into
xchg
sbb
dec
pop
out
jge
mov
pop
xchg
arpl
or
les
jnp
ret
push
repz
xor
popf
add
pop
imul
mov
sub
cld
xor
loope
loop
sub
cmpsb
add
ret
ficompl
adc
xchg
outsb
aas
loop
jne
loopne
outsb
dec
lret
mov
pop
pop
loope
jg
ficoms
and
aas
lcall
fcompl
outsl
out
jno
imul
pop
sahf
es
das
adc
cmp
fwait
fwait
or
movsb
adc
cmpsl
out
push
ljmp
add
xorps
int3
cmp
std
test
cmpsb
ss
call
mov
jbe
popa
dec
decl
lods
xor
loop
gs
leave
jg
jmp
xchg
pop
cmp
mov
mov
cli
lods
cmp
mov
das
sar
cli
movsl
out
sbb
cmp
inc
gs
call
push
jecxz
and
call
push
push
sub
push
mov
out
jg
cs
imul
jnp
xor
xchg
pop
mov
or
ffreep
cltd
orl
xchg
rorl
pop
push
sbbl
cld
jmp
dec
shlb
cld
sbb
mov
mov
xor
pop
subl
jne
test
jno
xor
lcall
hlt
cwtl
xchg
lcall
xor
xor
test
cmp
shlb
je
pop
popa
sar
call
jno
mov
mov
adc
add
int3
pop
and
lahf
sub
incl
mov
push
dec
fldt
mov
push
cmp
fnsave
mov
ljmp
xor
sahf
shll
jns
out
jg
push
into
push
sbb
pusha
push
inc
sub
loope
xor
push
ljmp
call
das
add
test
mov
insl
xchg
sbb
mov
sahf
jmp
inc
xlat
scas
ds
repnz
sbb
stos
lret
lods
or
movsb
fidivl
lcall
lea
imul
dec
ds
cmc
test
fwait
movsl
out
fists
inc
cmc
and
dec
xor
rcll
dec
pop
xchg
incl
test
stos
aas
pop
out
inc
push
dec
rorb
lcall
dec
fmull
push
stos
into
das
sar
jo
xchg
out
imul
pop
scas
addr16
ljmp
cltd
cmp
push
bound
movsl
xorl
mov
iret
popl
or
jmp
fwait
js
dec
repnz
sbb
rclb
fnsave
cmpsb
sbb
fisttps
ss
dec
std
mov
push
pop
cltd
jnp
sbb
adc
bound
push
push
add
adc
xchg
cmpsb
xor
jl
cmp
out
je
stc
ss
pop
loop
gs
outsb
sub
and
mov
sub
call
and
gs
push
andl
adc
jge
repz
add
jne
popf
fsubrp
inc
fcoms
data16
mov
xchg
xor
lcall
push
shlb
sahf
push
fisttps
adc
mov
stc
sbb
cltd
mov
mov
cwtl
fidivs
fwait
scas
je
dec
dec
std
mov
pop
ret
pop
cld
clc
js
imul
jo
push
push
sub
xchg
outsb
ljmp
pop
aas
xor
mov
xchg
lods
bound
push
fbstp
rclb
insb
dec
sbb
push
xor
lret
in
outsb
loope
out
adc
push
pop
mov
xchg
pop
inc
jg
decl
fs
adc
call
jmp
scas
loop
repnz
fldt
bound
pop
dec
jae
pop
xchg
int
cli
into
or
pusha
int3
stos
add
add
adc
pop
xor
ds
enter
jg
lods
mov
and
sarb
mov
pop
push
push
add
lock
pop
lcall
fisttpl
adc
scas
and
add
sbb
aas
cmp
adc
fsubrs
outsl
sbb
mov
xchg
sub
aas
andb
inc
pop
push
pop
repz
and
pop
ds
cmpsb
fwait
gs
jp
add
fildll
ljmp
dec
push
in
test
and
jmp
adc
add
adc
or
out
mov
xor
and
pop
mov
pop
xchg
sbb
push
jl
mov
out
dec
rcrb
in
cmp
outsl
push
fbld
pop
mov
scas
fdivrl
cmpsb
inc
lret
aam
scas
push
mov
mov
imul
adc
imul
dec
stos
mov
stos
out
nop
xor
ja
ret
sub
call
loopne
mov
fsts
jmp
adc
or
ret
rclb
ljmp
jle
or
cmp
jmp
dec
and
loop
jno
gs
adc
cmp
push
sub
jo
fdivr
push
imul
xchg
pop
pop
repnz
fistpl
jge
mov
call
jle
mov
dec
adc
inc
loope
std
lcall
push
ljmp
add
mov
int
outsb
jmp
mov
popf
and
push
repz
ljmp
out
xor
out
loopne
dec
dec
mov
inc
pop
leave
xor
stos
jmp
or
out
sahf
dec
sub
movsl
mov
mov
xchg
sub
incl
push
insl
shll
mov
mov
fwait
cmpsb
mov
cmpsb
fisubrs
cmp
in
decl
in
or
mov
fidivs
sbb
lock
mov
enter
push
mov
fbld
inc
int
dec
data16
iret
sub
push
push
lret
push
gs
sti
and
pusha
imul
jecxz
in
dec
std
inc
enter
jle
scas
fmull
std
test
sbb
pushl
les
jle
xor
mov
popf
outsb
lea
mov
mov
out
adc
jns
sub
cmp
mov
sub
es
lcall
xchg
adc
push
nop
cli
and
xchg
mov
test
dec
jecxz
xor
sbb
add
push
pop
pop
cmpsl
das
nop
sarl
dec
mov
inc
outsb
lock
cmp
jg
push
cmp
inc
out
jb
and
inc
call
cmp
push
jo
dec
xchg
cmc
aaa
ja
incl
inc
sub
aad
jl
or
inc
aas
mov
in
daa
inc
jno
repz
or
enterw
jp
rcll
jo
ljmp
mov
sbb
addr16
add
ja
in
inc
lahf
popf
iret
nop
cld
call
push
scas
push
int
adc
fwait
push
rcrb
pop
push
xor
cs
xor
cli
lcall
push
adcb
push
jp
imul
adc
mov
clc
pop
bound
push
lods
popl
outsl
lock
lcall
sti
pushf
jne
fistpl
jge
nop
xchg
sbb
sub
pop
pop
jae
jmp
jp
xchg
fimuls
lea
push
jne
pop
jne
adc
pop
loopne
mov
scas
in
mov
pop
jle
stc
jns
mov
add
out
mov
scas
aas
enter
ja
movl
xor
sbb
adc
inc
xor
aas
cmovs
and
lea
and
dec
inc
dec
int3
ljmp
mov
inc
or
addr16
ret
jbe
inc
ds
decl
lcall
cmp
ss
jmp
lods
sbb
ret
je
daa
jno
pop
into
inc
jg
push
cli
test
inc
push
lds
push
gs
inc
sti
es
incb
cltd
cmp
pop
sbb
outsb
jb
push
pop
ss
xor
int
call
pop
std
decl
in
nop
cmp
mov
adc
xor
jp
push
mov
jb
lock
xchg
mov
jns
push
sahf
push
cld
pop
or
cltd
je
jns
add
lock
mov
xchg
add
push
and
cli
mov
clc
insb
punpckhdq
enter
sti
adc
pushf
mov
dec
jg
das
out
jl
sub
orb
scas
mov
inc
les
gs
mov
xchg
mov
push
ret
inc
push
std
jp
ljmp
movb
cmpsb
cwtl
jg
imul
xlat
cmp
out
xchg
les
jle
lret
dec
repz
pop
fdiv
jle
dec
cmp
adc
lock
jo
dec
lcall
outsl
outsb
inc
push
pusha
shr
xor
jmp
in
insl
jns
inc
fstl
inc
movsl
hlt
sub
test
push
mov
jo
and
fwait
mov
xchg
push
jge
sub
repnz
int
out
clc
pop
push
lock
subb
mov
dec
rorl
add
fdivs
jno
jnp
clc
jg
in
lcall
xchg
mov
cmp
push
add
pop
xchg
in
add
imul
dec
jle
inc
lcall
shlb
lea
leave
ljmp
sbb
and
cld
frndint
mov
aad
inc
scas
inc
stos
icebp
sub
aaa
ljmp
shrb
test
out
and
jle
in
mov
int
sarb
fcomp
push
mov
push
mov
mov
push
inc
movsl
push
lods
mov
shrl
sub
int
push
and
dec
inc
mov
mov
lock
shll
lcall
jno
sti
or
mov
jb
out
dec
xchg
rclb
rclb
push
dec
andl
jg
pop
iret
mov
and
adc
lods
xchg
pushl
sub
jg
jge
adc
and
sti
sahf
enter
cmp
jle
dec
sar
scas
cld
scas
js
add
push
or
pop
icebp
cmpl
push
pop
and
out
cld
lcall
sbb
mov
pop
jbe
or
js
pop
lea
pop
add
inc
push
in
jno
sub
xchg
arpl
jl
add
xchg
mov
sub
mov
xor
decb
lock
cmp
and
loopne
pop
lock
pop
fists
cltd
iret
cmp
cmp
dec
insb
out
mov
mov
lcall
and
jg
adc
inc
jmp
lds
inc
sub
xchg
dec
xchg
clc
mov
inc
daa
fwait
or
aas
add
call
push
in
or
scas
xchg
adc
dec
mov
decl
insl
jle
xchg
divl
dec
fstpt
enter
out
fisubrs
xchg
fs
lds
mov
insl
stc
jg
inc
sbb
aas
mov
stc
aaa
dec
stos
mov
enter
lds
inc
and
inc
mov
cmp
cmpsl
ljmp
dec
inc
jae
stos
insb
loope
cli
or
inc
leave
push
int3
pop
add
or
inc
lods
adc
dec
mov
in
rcrl
roll
incb
aaa
decl
fidivrs
dec
out
push
shrl
inc
aad
iret
xchg
adc
out
mov
cld
or
pushl
fidivs
sub
lea
sti
aas
push
push
test
pushl
aam
movw
stc
or
and
xor
daa
pushf
popa
andb
jns
test
mov
mov
inc
jbe
pop
mov
jmp
pop
sbb
push
mov
out
lea
decl
push
adc
sbbb
mov
inc
jb
jle
mov
or
mov
add
and
xchg
je
mov
jge
sub
loop
sbb
repnz
stos
push
inc
push
add
es
mov
jg
cmp
jns
xchg
into
dec
push
aaa
stc
adc
pop
add
in
jg
pop
dec
sub
movsl
mov
cmp
std
jmp
dec
add
adc
adc
push
jne
xchg
inc
mov
cmp
cld
inc
mov
ljmp
or
ret
insl
cmp
add
jg
leave
cld
das
push
pop
or
xchg
pop
mov
fcomps
cli
cmp
lock
pushl
stc
mov
je
fnstenv
repnz
mov
push
into
mov
jg
and
mov
push
bound
les
push
in
scas
add
push
stos
loopne
sahf
mov
mov
scas
repz
sub
cmp
aaa
or
dec
outsb
stc
xchg
and
test
dec
mov
mov
fisubrs
incl
sbb
xchg
jl
int3
mov
clc
pushf
and
cmp
pushf
enter
mov
pop
in
sbb
call
add
cltd
or
insb
outsl
cmpsb
mov
add
xchg
push
sub
lds
outsl
clc
decl
mov
push
lods
add
sub
stos
jl
dec
int3
add
mov
add
lcall
fdivs
je
stos
outsl
sahf
fildl
cmp
adc
mov
aad
fistps
add
rorb
leave
imul
jle
pop
into
add
xchg
mov
insb
movsb
aam
push
out
mov
xor
call
add
xchg
mov
scas
cmpsb
stos
scas
dec
xchg
lock
jl
mov
ret
mov
enter
mov
clc
mov
incl
aam
orb
pop
xor
scas
cmpsb
add
xchg
insl
dec
or
ljmp
mov
dec
xor
jns
or
or
cwtl
insl
sahf
or
jmp
jbe
mov
scas
lods
cmpsl
xchg
mov
mov
jecxz
pop
push
dec
pushf
push
incl
mov
adc
jns
xchg
jne
dec
add
in
add
or
dec
incl
mov
adc
sbb
imul
inc
std
das
clc
ret
jge,pn
xchg
add
dec
scas
clc
jmp
push
fs
inc
sub
arpl
jl
push
stos
int
pop
sub
pop
jg
jmp
lds
adc
scas
int
and
cmpsb
repz
push
jno
incl
cld
push
test
sub
test
dec
inc
inc
cs
adc
jp
pop
cmp
add
jge
push
inc
out
jne
scas
orb
cmpsb
js
jp
dec
adc
outsl
jmp
adc
pop
rcrb
es
or
mov
sar
inc
data16
sub
scas
daa
cltd
dec
mov
clc
jmp
jae
xor
mov
pop
lds
push
inc
dec
mov
inc
aaa
call
sahf
add
imul
inc
inc
sbbl
shll
cwtl
push
test
sbb
incl
lds
mov
xchg
addb
jmp
dec
sarb
dec
repnz
inc
mov
inc
push
orb
ljmp
pop
xchg
fildll
mov
xchg
xchg
cmpsb
dec
pushf
jmp
outsl
hlt
xchg
lock
jmp
lcall
outsl
push
mov
inc
inc
xchg
sbb
xchg
and
xor
adc
adc
sub
sbb
pop
mov
add
dec
xchg
dec
pop
test
out
clc
xor
inc
adc
cmpsb
mov
sahf
das
jl
xor
test
mov
cli
sbb
add
test
add
mov
filds
ffree
cmp
sbb
adc
insb
dec
lea
lcall
push
add
push
inc
add
orl
push
call
fistl
test
mov
xor
movsl
loop
incl
arpl
sbbb
sti
test
pushf
bound
sbb
pushl
adc
test
lcallw
ss
movsb
cmp
std
bound
cmp
jne
cmc
in
pusha
dec
inc
sarb
inc
inc
sti
mov
in
mov
ds
cmp
nop
popa
fwait
movsb
mov
js
in
lahf
and
jno
icebp
pushf
sbb
mov
fdivr
fisttps
rcll
jno
out
push
inc
jp
lods
cld
jmp
lds
repnz
push
pop
fnstenv
or
or
add
sahf
scas
push
inc
cmp
ret
aaa
push
or
mov
stos
mov
movb
std
ljmp
test
xchg
pushf
xchg
xchg
loop
xchg
xchg
lcall
mov
add
loope
test
fnstenv
loopne
popf
mov
lcall
popf
mov
mov
mov
mov
cmpsl
daa
dec
fcomps
std
mov
ret
into
xchg
mov
sub
or
ret
jae
mov
imul
in
xchg
mov
lods
mov
sti
sub
shl
mov
test
pushl
dec
popl
cs
ljmp
clc
outsl
rolb
inc
popa
sbb
xchg
jno
ret
call
fs
test
cmp
inc
jge
mov
add
xor
cmp
cld
es
jno
jg
cmc
xchg
test
add
jp
push
lea
and
lock
mov
pop
fstl
dec
nop
mov
fucomip
xchg
cmp
mov
pop
dec
inc
dec
pop
sbb
xlat
lahf
scas
xchg
jne
and
sbb
adc
lea
test
lahf
loopne
pop
adc
inc
mov
jbe
jecxz
pushl
pop
xor
out
xor
call
lret
jge
aaa
or
add
add
ljmp
xor
dec
pop
mov
jo
cli
dec
cltd
mov
mov
movl
and
mov
imul
imul
shlb
mov
add
daa
mov
std
call
mov
sbb
dec
insb
cmp
mov
push
lea
sub
movsb
jo
imul
sbb
scas
inc
je
inc
test
sub
pushl
dec
mov
cs
push
push
xchg
push
cltd
sub
jo
leave
clc
inc
pusha
push
fwait
or
sar
fildll
nop
adc
repz
mov
aam
jne
aad
add
sar
pushl
lret
lods
adc
jp
jg
push
jne
leave
movsl
cmp
mov
aam
jae
xchg
sub
mov
push
outsb
jo
mov
scas
cmp
or
pop
fs
or
mov
push
inc
icebp
gs
push
dec
cmpsb
xorl
push
mov
incl
dec
mov
xchg
imul
cmp
lods
mov
dec
data16
sbb
dec
outsb
cmp
mov
aaa
xor
inc
incl
and
jnp
xchg
pop
pop
scas
insb
xor
adc
add
fwait
hlt
gs
add
js
mov
mov
push
imul
mov
sbb
lea
pushl
push
ds
inc
inc
push
cmp
add
adc
insl
sbb
xchg
je
test
pop
jg
adc
or
inc
push
mov
sti
cs
shlb
fdivrp
jg
jb
jp
jmp
lcall
lahf
inc
add
sarb
je
adc
decl
pop
xchg
xchg
sub
ljmp
and
add
loop
orl
sar
fcomip
fwait
outsb
add
es
das
test
pop
sbb
mov
aas
cmp
fwait
and
dec
pop
mov
sarl
inc
inc
lret
inc
cmp
mov
cmp
bound
adc
mov
sub
call
pop
jmp
push
rorl
xchg
mov
int3
fwait
mov
call
jbe
rsm
lret
inc
adc
mov
adc
xor
cmpsb
fidivrl
pop
fbstp
lods
out
dec
lods
mov
lods
stc
mov
clc
popf
sti
or
pop
dec
lods
sub
cmp
mov
pop
rorl
out
xor
mov
adc
iret
mov
fisttps
out
jno
push
call
pop
in
loopne
jb
in
push
imulb
call
call
data16
dec
pop
and
dec
mov
jmp
pop
aaa
idivb
decl
jbe
jbe
je
out
jmp
push
pop
pminub
jbe
je
into
push
cmpsb
jg
inc
iret
xor
in
push
js
jno,pn
mov
popa
fidivrs
imul
push
ja
loopne
pushl
pop
insl
imul
imul
js
push
out
jp
outsl
je
cltd
incl
add
test
cs
or
mov
popf
out
out
orl
jge
enter
inc
jg
subl
and
jnp
idiv
fildll
fs
sahf
adc
fs
call
bound
dec
or
pop
cmpsl
add
adc
pop
insb
mov
jbe
xchg
sar
addb
jb
mov
stos
es
xchg
cld
adc
test
mov
ljmp
icebp
pushf
dec
push
cmpsb
ret
enter
pop
add
sub
mov
pop
or
ljmp
sahf
popl
sub
movsb
jle
imul
xor
outsb
imull
mov
lcall
mov
jmp
mov
sti
mov
out
stos
xor
xchg
call
pop
sbb
clc
pop
mov
mov
mov
cmpsb
lock
ss
cwtl
sbb
incl
inc
cmp
jp
mov
sbb
fs
orl
inc
decl
test
testl
dec
pusha
pop
xor
sbb
ljmp
ljmp
push
sbb
inc
jnp
jnp
repz
dec
push
lock
jg
push
ja
ljmp
sar
jae
and
dec
jnp,pt
outsb
xchg
arpl
mov
cli
fcomip
jmp
repnz
addr16
cmp
pop
pop
cmp
pop
popf
insb
add
out
xchg
xchg
lahf
cmp
mov
out
jnp
stos
fs
icebp
out
inc
aad
push
outsb
cmpl
jo
cmpb
dec
inc
fstpt
xchg
xchg
gs
push
popa
mov
add
clc
dec
sub
insl
inc
inc
mov
sahf
lock
mov
imul
lret
mov
imul
movsb
inc
jg
push
lods
test
xchg
sbb
jg
lds
fdivrs
lcall
mov
pusha
repz
xor
mov
pop
movsb
pop
mov
fs
stos
pushfw
inc
mov
popa
sub
mov
in
dec
jmp
sbb
add
jmp
inc
sbbb
xchg
test
nop
cmp
ljmp
cli
sti
mov
mov
sub
pop
push
or
fistpll
jle
aam
dec
dec
jb
and
sub
jne
dec
push
sahf
jno
pop
and
test
outsl
push
push
lahf
add
mov
ljmp
dec
dec
or
out
flds
mov
dec
jno
ja
popa
shrl
or
inc
addr16
test
lea
ds
inc
jle
jle
out
mov
aaa
push
sub
and
pushl
fstpl
jecxz
out
and
cmp
loope
cmp
mov
xor
mov
inc
dec
inc
stc
or
test
in
incl
sub
lods
mov
inc
mov
mov
inc
pushl
mov
jecxz
sbb
xchg
call
inc
mov
xorl
pusha
and
ret
push
xor
xchg
adc
jl
jns
sbb
add
sub
data16
insb
xor
dec
sub
out
and
fs
fbstp
jne
in
fldcw
pop
add
push
cmp
mov
incl
lret
arpl
add
fidivs
mov
std
or
dec
or
rcll
push
out
inc
or
mov
mov
xchg
mov
ja
loope
sub
inc
int3
or
sbb
pop
lock
gs
xor
pop
out
pop
loop
mov
sbb
add
sahf
mov
jmp
enter
jp
imul
sbb
cmp
xor
ljmp
pop
stc
jmp
sti
xchg
movsl
movsb
fsts
jbe
mov
or
es
adc
sbb
ljmp
pop
fildll
cmpsb
nop
scas
lret
push
cmpl
mov
insb
and
insb
add
insl
cmp
into
and
add
mov
in
imul
push
mov
xchg
mov
ja
repnz
pop
xor
adc
ljmp
xchg
aad
insb
clc
or
jp
cli
decl
add
inc
daa
xor
or
mov
test
dec
and
push
lea
add
decl
arpl
cmpl
xor
sbb
adc
and
sahf
stos
mov
jne
rorl
mov
mov
popa
adc
ljmp
push
jns
enter
lods
test
scas
lea
push
ljmp
iret
add
cmp
and
sbb
inc
in
push
gs
addr16
cmp
std
out
add
cmp
lds
imul
xor
push
sub
jae
pop
sar
ljmp
out
sub
dec
fdivrl
lock
or
inc
sbb
insl
adc
sub
xchg
loope
jae
test
xor
jo
js
std
ja
loop
cmc
fwait
xchg
sbb
outsb
lock
jmp
ljmp
into
adc
dec
iret
cmp
pop
pop
loopne
fiadds
cld
jg
into
out
mov
cmp
cmp
cmp
mov
imul
mov
push
fs
fbld
cmpsb
enter
jp
iret
xor
jmp
jbe
fwait
data16
popa
mov
jg
hlt
test
jp
and
imul
scas
jg
cmovae
jae
mov
call
xchg
inc
out
pop
and
mov
inc
adc
dec
pop
outsb
push
loopne
pop
shll
push
pop
rcl
stos
call
outsl
inc
ret
mov
inc
push
jle
push
jp
or
inc
adc
jg
loop
insl
xchg
les
lds
jp
cmp
xor
dec
scas
sub
lahf
les
push
outsb
pop
lcall
mov
cwtl
rorb
clc
jl
ss
call
imul
sbb
gs
dec
lods
fiaddl
jae
xchg
mov
cmp
incl
decb
addl
into
pushf
dec
imul
jl
push
lret
movsb
pusha
cli
lcall
dec
push
pop
ret
jo
out
lcall
outsl
dec
push
std
cmpsb
push
push
xor
xor
js
add
jno
loopne
jmp
inc
xchg
pop
mov
jae
mov
daa
test
call
dec
pop
cld
ljmp
push
inc
mov
fsts
push
lods
add
lods
test
sarb
push
inc
gs
jmp
leave
lock
dec
add
jne
pusha
cli
dec
insl
jle
xchg
push
dec
sbb
jmp
push
jp
cltd
gs
inc
inc
ss
jge
cmp
imul
insb
adc
and
jns
adc
sbb
mov
pop
mov
mov
shll
gs
inc
lcall
or
out
call
sbb
mov
sub
ret
shrb
jmp
jno
dec
mov
jb
xchg
and
mov
lods
clc
mov
mov
jnp
dec
leave
dec
xor
jbe
ds
pushl
popf
ds
pop
inc
jmp
dec
out
inc
sbb
sbb
test
xchg
pop
cli
pushl
std
jne
dec
or
out
pop
xchg
jo
call
das
popa
roll
ja
lea
fs
iret
dec
push
mov
add
scas
inc
test
incl
jae
imull
mov
jle
mov
ljmp
add
inc
lea
xchg
mov
clc
cmp
cld
and
mov
dec
insb
imul
arpl
mov
outsl
xchg
orb
jne
xor
sub
cmp
sar
into
pop
insb
cli
sub
xor
cmp
push
xor
dec
mov
mov
in
test
insl
jmp
js
dec
ret
mov
incl
dec
out
xor
adc
in
cmpsb
into
mov
fbstp
push
xor
adc
incl
inc
loopne
pop
dec
icebp
mov
orl
insb
dec
gs
aam
jmp
dec
and
push
call
in
xchg
daa
dec
mov
cld
dec
lock
pop
int
xchg
jg
andb
mov
fs
dec
bound
jbe
pop
out
call
inc
fldcw
mov
stc
sbb
push
sub
adc
decl
call
pop
or
mov
ljmp
inc
and
call
lcall
int
mov
sahf
test
loope
aaa
je
and
and
jb
pop
repnz
incl
out
pop
push
sbb
fildll
jge
add
mov
or
mov
jbe
fisttps
adc
insb
push
fstps
imul
sub
sti
pop
mov
push
xchg
in
adc
adc
jmp
or
iret
xor
add
push
rorb
jecxz
insb
push
sub
and
lret
or
dec
loop
decl
in
xchg
jbe
dec
cmc
das
push
gs
ds
jmp
cltd
lods
lret
inc
pop
ljmp
imul
jne
add
ficoml
aam
mov
das
data16
push
cmc
call
add
out
iret
xchg
fcomip
incl
sahf
rorl
mov
pop
loopne
jo
sub
dec
leave
add
adc
loopne
push
mov
jnp
push
nop
mov
pop
jle
in
dec
dec
in
addr16
and
add
or
xchg
enter
pushl
mov
sub
or
ljmp
jo
dec
xor
add
pop
sub
sbb
pop
pmaxsw
inc
cmp
cs
das
fistl
jge
daa
arpl
aaa
fcompl
icebp
rolb
aas
dec
fidivrl
dec
popf
lahf
jb
leave
sub
daa
test
mov
mov
lods
mov
call
add
call
push
dec
lds
out
cs
out
outsl
clc
cmp
mov
inc
faddl
inc
cli
sbb
pop
fs
xchg
cli
push
mov
decl
into
mov
cmp
cmp
frstor
mov
gs
arpl
pop
in
call
inc
lret
sbb
add
bound
pusha
cmp
fistl
inc
lods
mov
repnz
jno
inc
call
ss
jae
jbe
fwait
dec
ret
test
pop
popa
or
dec
ss
and
cltd
movsb
inc
push
sub
inc
in
xchg
lret
cli
mov
nop
stos
int3
add
mov
in
fdivrp
mov
mov
push
int
sbbl
or
push
fists
jge
nopl
add
jb
jmp
sub
sbb
addr16
inc
inc
jb
mov
shrl
mov
pusha
or
out
xchg
pop
sbb
cmp
sahf
cmpsb
stos
lock
mov
mov
scas
xchg
shlb
lahf
fcomps
popf
ret
dec
dec
inc
cli
cmp
mov
push
dec
cmp
push
lret
shll
mov
lea
decl
rcrl
push
jle
imul
dec
lret
xor
dec
mov
sti
xchg
adc
dec
mov
call
cli
adcb
pop
push
out
sub
jb
adc
mov
push
hlt
add
lcall
fnstsw
mov
inc
outsb
xlat
jg
js
ljmp
cwtl
jb
and
test
lahf
mov
fcoms
jg
shrl
fwait
inc
push
jae
sub
sbb
ja
pop
dec
ret
lcall
push
cmpsb
push
loop
clc
and
adc
int3
ret
pop
incb
push
add
aaa
loop
inc
mov
xchg
push
ret
jle
sbb
sbb
sbb
nop
and
fs
mov
sti
mov
inc
jae
fmull
push
push
insl
clc
sbb
dec
mov
mov
arpl
aad
xchg
pushl
mov
mov
dec
cs
aam
sub
out
add
sar
ds
cli
push
inc
xor
icebp
movsb
xchg
sub
push
inc
lods
imul
outsl
cmp
es
sbb
int
addr16
sbb
out
decl
test
xor
mov
loope
test
incl
in
in
mov
xor
add
sbb
mov
cmp
xchg
in
in
mov
lret
cmp
inc
inc
mov
rorb
test
fiaddl
ret
sub
jp
or
cli
jmp
sub
outsb
stc
add
or
jge
pop
inc
enter
cmovp
int3
lcall
cs
sbb
xor
fldenv
addr16
cmovo
xor
push
inc
add
inc
and
and
cmp
sub
and
sarb
jb
add
pop
mov
sub
cmp
mov
ljmp
cmpsb
sbbb
decl
clc
xor
dec
jae
pop
shll
out
fsubp
mov
call
clc
int
popf
out
and
incl
jnp
sbb
aam
inc
cli
inc
jecxz
inc
lea
fidivs
jg
add
mov
cli
and
test
sub
or
dec
ljmp
mov
inc
pop
pop
lds
pop
insb
popf
dec
inc
jnp
out
inc
pop
insl
inc
push
pop
inc
clc
and
xor
lahf
mov
pop
add
adc
push
jno
add
dec
jne
mov
sbb
call
mov
pushf
add
sub
jecxz
call
popf
cwtl
xchg
out
sub
iret
decl
and
ja
pop
push
sub
out
orl
jg
pop
fstps
mov
dec
aaa
sti
sbb
lock
sti
arpl
and
outsl
fidivrs
jg
pushf
mov
jns
and
mov
fbld
xorl
inc
jl
clc
outsl
clc
dec
adc
popf
sub
pop
mov
hlt
inc
out
adc
lods
cld
and
cmp
mov
jg
andb
sub
addr16
cs
sbb
repnz
cli
jmp
adc
fstl
xchg
adc
xor
add
or
decl
xchg
sbb
xor
xchg
mov
jl
andb
sub
ljmp
cmp
gs
xchg
cmp
mov
fldt
cltd
or
cwtl
xor
mov
cmpsb
jle
lods
rorl
cld
push
dec
sub
js
push
pop
sbb
and
push
push
jno
xchg
data16
lcall
pop
pop
clc
and
sbb
sub
inc
fists
jg
adcl
inc
cmp
pop
xorl
dec
mov
loop
insl
sti
and
push
lret
mov
push
dec
scas
jg
dec
addl
mov
int
push
imul
mov
call
cltd
mov
lcall
dec
and
add
xchg
mov
stos
inc
jge
repz
xchg
jmp
mov
lds
push
xchg
add
dec
lcall
mov
push
cld
mov
jmp
pop
and
movsl
stos
test
mov
imul
xor
je
xchg
icebp
xchg
inc
dec
leave
dec
daa
daa
imul
inc
mov
fwait
xor
jnp
jmp
cmpsl
mov
adc
add
mov
in
or
decl
adcl
dec
mov
cmp
cmp
in
add
decl
movsb
adc
mov
fs
das
test
cmpsb
mov
push
mov
sbbl
sbb
jmp
decl
in
xchg
dec
aad
adc
sti
imul
inc
jno
push
xchg
jl
jl
mov
call
pop
add
jle
add
cmpsb
add
add
out
mov
mov
adc
mov
push
fst
jmp
xor
cmpl
push
movsb
cmp
sub
xchg
shll
dec
pop
mov
add
inc
outsb
jle
add
incl
pop
cmp
jo
xchg
inc
add
xchg
mov
pop
cs
xchg
xor
push
pusha
mov
xor
cmpsl
incl
cmpb
mov
mov
pop
orl
xchg
test
pop
scas
ss
mov
add
mov
inc
outsb
mov
loope
loop
outsl
out
xchg
imul
or
movsl
outsb
insl
cld
jl
fdivrp
shrb
std
jno
out
repnz
pushf
stos
inc
movsl
shlb
jb
or
fidivrs
xchg
leave
test
jmp
hlt
mov
lea
ja
mov
pushl
cs
or
insl
addb
dec
inc
dec
mov
lret
out
je
xchg
out
cli
pop
mov
rcrb
add
test
out
sbb
shll
push
mov
in
or
out
add
mov
sahf
jg
push
pop
ret
push
jo
dec
sbb
push
fs
dec
and
test
mov
incl
std
pusha
int
outsl
repnz
cltd
mov
inc
data16
subb
mov
cwtl
push
xchg
incl
in
lret
push
aad
jns
mov
scas
enter
add
push
call
mov
add
shll
mov
cmpsl
cmp
mov
xor
xchg
pop
lret
out
inc
dec
int
mov
dec
jmp
adc
fs
dec
insb
fdiv
jp
sub
aaa
outsl
pop
adc
negl
cmpsb
sahf
outsl
call
mov
jnp
jb
test
sbb
mov
arpl
jns
lcall
loopne
shlb
mov
add
test
mov
loopne
lret
push
jns
push
clc
pusha
aam
push
sarl
jbe
aam
cmc
outsb
push
adc
insb
jne
int
pusha
inc
pushf
shrb
dec
jmp
outsl
cli
sub
filds
insl
lea
xor
mov
test
out
mov
adc
mov
jne
inc
jno
cmp
mov
fs
je
push
dec
test
push
in
push
out
inc
out
test
pop
xlat
jmp
cli
jmp
jg
jne
fimuls
sti
mov
nop
push
mov
dec
out
jb
dec
xchg
inc
and
stos
lret
out
inc
shrb
cmp
leave
arpl
std
pop
jbe
icebp
pop
pop
call
lret
sahf
jmp
jp
or
fisttps
cmp
dec
cmpsl
fimuls
out
std
xor
cmp
add
mov
fldcw
loop
loope
mov
int3
and
cltd
in
in
ret
das
ljmp
incl
stos
dec
fdivl
pop
les
dec
ljmp
decl
push
jb
hlt
dec
inc
clc
xor
sub
mov
inc
bnd
xor
pop
mov
dec
cmp
call
dec
fldt
das
sub
into
inc
ja
xor
es
mov
sub
or
cltd
stc
fistpll
pop
inc
xlat
push
mov
insb
mov
dec
out
mov
pop
inc
sbb
dec
lahf
lods
push
hlt
div
jae
sti
mov
lcall
adc
push
pop
in
push
out
out
addr16
cmp
dec
notb
data16
addr16
xchg
dec
cld
jecxz
arpl
repz
sbb
lcall
jae
jp
push
popa
shrl
jp
stos
fldl
imul
dec
mov
ljmp
xchg
aad
cmpsb
addr16
pop
push
loope
insl
in
jns
cwtl
movb
out
daa
push
lods
scas
imul
dec
sti
stos
dec
aam
inc
lock
addr16
mov
dec
ret
stc
les
ffree
and
and
ja
add
daa
outsl
test
or
das
sar
pop
inc
icebp
cltd
dec
rcrl
ds
mov
lock
popa
jbe
and
add
pop
idivb
sub
ljmp
rol
pusha
aad
dec
inc
int3
jb
ret
jecxz
pop
jmp
or
jne
xor
dec
pop
iret
add
fbstp
out
ljmp
jne
or
jl
or
cltd
outsl
clc
in
fiadds
loope
or
jo
outsb
ret
cmp
ljmp
mov
out
rcl
je
int3
mov
jecxz
jb
hlt
cld
lcall
mov
xor
cmp
or
int3
xor
sbb
or
cs
sarb
cmp
std
push
dec
inc
adc
test
loope
jmp
insl
out
push
int
gs
das
dec
fists
push
es
push
dec
fistpll
lds
inc
out
sub
out
arpl
mov
je
icebp
ljmp
xor
push
xchg
addr16
push
add
push
iret
pop
into
outsb
push
jle
jg
sub
xchg
xchg
cmp
sbb
jge
cmc
mov
scas
mov
cmp
nop
mov
add
mov
imul
out
jb
ret
std
sbb
dec
lods
inc
or
dec
push
nop
mov
dec
popf
push
inc
stc
jg
out
pop
fucomi
iret
dec
pusha
cmp
push
cltd
clc
push
cltd
out
fdivrs
decl
ss
lea
test
mov
pushl
in
out
dec
inc
imull
push
push
mov
ja
je
aaa
imul
rorl
or
sub
sahf
sbb
sar
inc
leave
pop
and
jg
insl
jecxz
mov
cwtl
push
stc
movsb
dec
aad
jge
les
enter
ljmp
add
inc
jp
out
inc
daa
out
xor
or
insb
ss
icebp
cmp
adc
or
mov
out
into
scas
test
jns
lcall
shl
scas
popf
jecxz
icebp
pop
lock
mov
jecxz
pusha
shrb
mov
out
cli
and
xor
lock
cmp
jmp
sbb
push
rolb
jae
and
or
adc
mov
sbb
mov
inc
lret
add
ss
cs
ljmp
cmc
fnstsw
mov
xor
movsl
icebp
call
push
push
xchg
lods
insl
int
dec
lds
ljmp
push
lret
outsl
std
pusha
push
push
lods
cmpl
jno
cmovno
add
int3
mov
push
pop
xchg
add
fistps
fldenv
js
sti
push
dec
ds
dec
loopne
in
inc
and
dec
inc
sar
out
out
pshufw
call
fiaddl
lds
xor
mov
jb
pop
shll
stc
adc
or
add
cld
jae
xchg
in
outsb
js
mov
mov
std
fcomip
dec
mov
aaa
stos
mov
std
les
std
stc
sub
xchg
int
dec
orb
pop
insb
out
imul
cmpb
ljmp
pushf
inc
sub
mov
lods
cmpsb
jno
imul
ret
push
cwtl
rorl
xchg
in
out
ss
int
cmp
sti
test
std
cmp
rep
roll
fcoms
jno
repz
repz
pusha
push
dec
imul
popa
dec
jb
inc
loop
incl
mov
addr16
inc
out
js
mov
icebp
arpl
ljmp
cmp
out
ss
int3
ss
adc
push
in
sbb
ljmp
jo
push
lea
adc
in
or
ss
icebp
es
or
mov
jg
ret
fnstenv
pop
out
arpl
adc
sub
adc
cmp
pop
test
pushl
out
lods
mov
fildl
pop
mov
das
push
jmp
cmp
pop
jmp
in
dec
jno
out
mov
mov
jl
gs
dec
or
sbb
xor
xchg
sahf
xchg
xor
js
mov
btcl
mov
pushf
xor
sarb
or
stos
pop
movsb
sbb
mov
mov
lock
out
insw
dec
pop
bound
cmp
jbe
push
dec
mov
ljmp
lods
push
mov
dec
push
cld
lcall
jne
mov
dec
push
lea
fwait
ljmp
test
lods
out
cmp
test
adc
in
push
inc
bound
xchg
loop
jo
das
fiaddl
add
popf
cmpsb
inc
sahf
push
hlt
in
push
shrl
cmc
outsb
gs
push
or
imul
daa
aad
stos
ja
adc
frstor
or
jg
xchg
add
lcall
jp
push
sti
shl
mov
push
mov
or
das
cmp
repnz
dec
cltd
xor
jne
add
lcall
pop
sub
lcall
js
mov
ret
out
push
mov
push
push
imul
sbb
xor
cld
icebp
outsb
mov
sbb
mov
ficomps
pop
loope
mov
lret
fmull
out
xlat
cltd
cmp
xchg
ja
daa
and
cli
loope
fwait
incl
insl
stos
outsb
daa
mov
enter
fadds
pushl
dec
dec
mov
mov
enter
cld
cs
pop
addl
pop
cwtl
scas
xchg
mov
mov
mov
test
movsb
mov
outsb
outsl
or
int
cmp
mov
jp
mov
push
test
or
out
sub
jne
jg
sahf
jmp
mov
and
loop
imul
push
ljmp
sub
test
jp
sub
pop
lea
gs
dec
pcmpgtb
mov
scas
mov
lret
pushl
sahf
cmp
xor
xor
or
pop
add
dec
sub
jno
mov
enter
movsl
nop
out
fstpl
mov
inc
sbb
mov
jmp
iret
mov
xchg
clc
out
fcomi
test
jo
test
test
ret
lea
test
mov
inc
addr16
in
xchg
dec
mov
cli
mov
or
pop
sbb
dec
mov
cmpsl
in
jb
mov
call
cli
jmp
out
scas
or
das
cmpsb
out
fwait
add
mov
rcrb
lret
scas
data16
scas
lcall
enter
out
jno
and
inc
jmp
pop
sub
and
pop
leave
scas
push
push
leave
rolb
stos
cmp
nop
mov
int3
test
icebp
jmp
xor
mov
insb
inc
sahf
repz
push
jge
pop
out
pop
les
xchg
testb
pop
or
sar
push
cmpsl
cmp
mov
sbb
and
out
into
cmpsl
dec
push
cmp
mov
test
das
dec
and
mov
fbld
and
jo
lds
dec
push
test
xor
shlb
xchg
cmp
add
lcall
adc
dec
test
pop
enter
sbb
call
adc
nop
pop
cwtl
fs
pop
bound
jb
sbb
sahf
adc
ljmp
mov
mov
inc
incb
iret
push
mov
pop
and
xor
inc
push
insb
mov
pop
add
mov
xchg
and
insb
mov
xor
mov
xchg
mov
cmp
dec
loop
mov
inc
jg
lock
jp
insl
inc
test
movsl
xor
call
mov
mov
pop
orl
les
mov
incl
clc
cmp
xor
pusha
push
clc
cmp
add
popa
fucomip
repnz
cmpsb
incb
inc
pop
mov
popa
fcmovnbe
lods
sahf
loop
lahf
mov
out
fcmovnb
jle
js
push
outsb
cmpsb
dec
clc
ret
sarb
xchg
jnp
int
ret
dec
in
xchg
jb
mov
ds
xor
mov
pushf
mov
das
dec
jmp
and
mov
loopne
and
pop
call
add
outsl
cmp
lcall
push
mov
inc
ret
jns
mov
test
rcr
mov
mov
sahf
mov
xchg
xchg
xchg
lea
adc
jg
add
lahf
aas
std
jb
imul
lods
pop
mov
mov
cli
pop
ds
popa
aam
sbb
insl
dec
int3
test
jg
imul
sub
add
ljmp
mov
push
negb
ret
inc
adc
ljmp
movsb
and
cmp
icebp
xchg
lcall
bound
ljmp
popl
adcl
pop
mov
add
mov
or
xchg
adc
xchg
lcall
jge,pt
movsb
cs
ds
cmp
jl
push
lods
cmp
aaa
xor
inc
inc
mov
sbb
fidivrl
inc
cmpb
push
mov
in
jl
inc
int3
mov
jo
mov
inc
call
jg
cmp
insl
jbe
sbb
dec
sbb
lret
loopne
sahf
push
push
cmp
xchg
pop
mov
bound
cmp
and
adc
call
test
adcl
lods
ds
pushl
push
je
adc
adc
lcall
aas
imul
imul
pop
sub
shlb
into
out
inc
pop
cmc
in
and
aas
xor
jmp
data16
rclb
push
pop
les
inc
lcall
sub
xor
mov
mov
fs
imul
cmp
adc
jmp
sbb
mov
add
shrb
incl
cmp
mov
mov
pop
lock
mov
jle
jnp
mov
rcrl
cmp
push
je
test
aam
sub
pop
fsubl
jg
loop
call
xor
pop
adc
mov
ljmp
add
xchg
sbb
stos
roll
sbb
add
call
fmuls
xor
sbb
push
data16
and
mov
insl
scas
sbb
jg
push
mov
mov
repz
sub
sbb
adc
ds
loopne
push
daa
dec
cltd
aas
inc
scas
sbb
inc
stos
mov
lods
loop
pop
pushl
xchg
cmpsb
push
adc
or
rorb
cwtl
mov
xor
cmpsl
ds
mov
jbe
push
jae
pusha
decb
and
cmp
sub
gs
jp
jge
addb
daa
dec
cmp
insb
mov
fcomip
mov
aad
jno
and
test
fs
jg
test
fs
xor
push
sbb
and
icebp
stos
inc
loope
bound
dec
adc
xor
adc
lods
pop
cmp
xor
mov
pushf
lcall
dec
push
sub
nop
cmp
xor
mov
shrd
xchg
push
aam
arpl
jmp
sub
mov
sub
jl
push
gs
jl
dec
sbb
imul
sahf
test
xorb
mov
in
je
loopne
sub
ss
pop
and
jno
ret
push
adc
ljmp
ret
dec
mov
xor
adc
incl
ds
and
jle
sbb
test
cmp
outsb
out
xor
push
cld
adc
in
ss
scas
subb
push
mov
mov
lds
shlb
stc
jle
or
cmp
lcall
test
cmpsb
or
stos
pop
aaa
mov
or
aaa
sub
xchg
or
pushl
fcomip
adc
fwait
push
mov
ret
push
and
or
xchg
pop
dec
std
sbb
lea
les
jne
ljmp
shr
popw
inc
xor
in
arpl
fidivrs
jnp
loope
mov
jne
filds
lret
cs
lret
pushf
lods
pushf
sub
jbe
ljmp
cli
incl
frstor
mov
push
fmul
sub
push
add
mov
int
mov
mov
lcall
imul
and
jns
hlt
inc
push
out
dec
adc
imul
out
dec
stc
mov
stos
cli
adc
mov
mov
les
mov
cmp
lds
jl
xchg
push
jns
test
cli
push
rolb
les
enter
repz
add
push
ret
in
lcall
outsb
pop
lcall
xor
loope
cmp
add
cmp
int3
add
mov
je
decl
hlt
mov
adc
pop
dec
ds
test
push
lret
iret
or
mov
lret
lret
mov
fiadds
es
sub
lods
push
lods
sub
add
cmp
iret
lcall
data16
insb
in
ret
std
pusha
lret
mov
mov
scas
movsb
lret
xchg
repnz
push
jb
aam
mov
and
sar
jmp
out
cmp
xchg
jnp
or
pop
and
jmp
pop
in
mov
pop
cwtl
add
sbb
fwait
push
sahf
ljmp
mov
lea
scas
jp
adc
push
mov
mov
cld
jmp
inc
mov
inc
jae
and
imul
mov
ss
cmpsb
pushl
lods
enter
into
xchg
bound
mov
or
dec
mov
mov
mov
cmpsl
sub
ds
lea
jg
lock
mov
in
out
lcall
push
lock
mov
mov
mov
loope
add
out
mov
adc
popf
mov
add
mov
rorl
xchg
mov
scas
mov
and
or
in
xchg
lea
gs
inc
pushf
fdivr
cmpsb
call
jge
mov
push
je
out
jnp
nop
jne
js
popf
call
aad
cmp
mov
pop
rorb
icebp
pop
hlt
adc
mov
lock
inc
jnp
fildll
add
cld
adc
rcr
pop
out
ds
rcl
cmpsb
xchg
shlb
call
lret
add
adc
loope
pop
and
lcall
dec
sbb
shrb
mov
in
push
xchg
xchg
mov
lods
or
cs
shlb
add
loopne
xchg
fcmovnb
sub
dec
out
adc
mov
aaa
mov
mov
ljmp
cltd
sbb
mov
add
xor
data16
mov
xchg
add
mov
decl
push
div
xor
faddp
arpl
dec
call
nop
and
lods
mov
popl
add
test
inc
jp
fwait
sbb
sti
cmc
or
in
adc
adc
or
xchg
xorb
out
sub
bound
fists
push
fsubs
lea
push
mov
test
sub
rorl
imul
decl
cli
out
mov
stc
or
pushl
mov
fwait
sahf
iret
stos
cmp
pop
test
jno
inc
int
imul
push
into
inc
cld
jg
out
decb
shll
pop
in
add
xor
aas
mov
call
add
cmp
shr
dec
push
stos
mov
outsl
push
lods
pop
push
gs
stos
icebp
mov
imul
push
xchg
test
cmp
movsl
or
call
push
ss
fs
fwait
add
ja
nop
jle
or
es
push
jmp
out
rcll
out
rolb
pop
add
mov
ljmp
jmp
push
xchg
call
xlat
inc
inc
cmp
xorl
mov
lcall
mov
sbb
dec
or
out
decl
ret
cmp
mov
mov
cltd
into
in
es
lods
mov
jo
icebp
jmp
pop
cli
das
insb
lds
rcll
pop
mov
incl
cltd
xor
sbb
popf
cmp
arpl
loopne
lea
xchg
iret
xchg
je
mov
sahf
ds
pushl
or
clc
and
and
mov
or
notb
pop
dec
jle
ds
jne
xchg
in
xchg
cli
or
scas
jl
ret
loope
add
jg
add
scas
pop
jno
xorb
xchg
xchg
mov
xchg
mov
push
es
lock
test
mov
mov
int3
sub
pop
lcall
rcrl
jbe
fs
push
loop
jae
pop
testb
ret
scas
adc
dec
ljmp
and
ficomps
adc
xchg
or
ljmp
sarb
in
cmc
mov
hlt
stos
jno
hlt
lahf
push
in
pop
imul
pop
pushl
aam
scas
xlat
and
or
gs
lods
jb
decb
sahf
xor
ja
lahf
incl
pop
insl
ret
arpl
popf
mov
out
sbb
jmp
loop
loope
sahf
sti
mov
mov
repnz
imul
ljmp
pushf
mov
test
jb
aas
arpl
push
jg
je
mov
xlat
add
inc
xor
jl
pusha
shrl
cmpsl
out
push
repz
cmpsl
mov
lcall
mov
sbb
aaa
mov
adc
lret
mov
cmp
jecxz
leave
loopne
fdivr
cmpsb
or
mov
sarl
dec
mov
lock
decl
cld
xchg
xor
in
mov
in
inc
xor
addr16
lret
test
aaa
out
xchg
jp
push
mov
xlat
jecxz
ffreep
scas
test
decl
scas
popf
xchg
cltd
ds
push
and
sub
into
sahf
std
fmull
mov
pop
lock
inc
popf
test
loope
push
sarb
or
adc
lock
es
mov
js
xorb
cmp
dec
pop
mov
std
call
inc
mov
mov
xchg
xor
loope
fiadds
lcall
stc
cwtl
call
mov
add
jle
push
scas
mov
and
xor
and
out
clc
mov
cltd
push
xchg
sahf
mov
es
xchg
stos
fcoms
test
push
inc
outsl
cmp
mov
push
mov
fbstp
jne
push
decl
or
sahf
bt
cli
pushl
push
loop
mov
jns
xchg
ds
sbb
push
fbld
ljmp
iret
xchg
cli
adc
mov
push
cld
push
add
xchg
stos
sub
add
mov
cs
pop
fwait
mov
ficoms
subl
scas
fists
cli
call
out
dec
and
gs
push
sub
cmpsl
xchg
mov
call
and
sahf
cmp
dec
push
inc
dec
inc
push
mov
fwait
mov
mov
sbb
ret
scas
decl
xor
cmp
addr16
push
dec
push
jne
inc
lds
addr16
jmp
xor
scas
test
subb
lock
cmp
imul
lcall
mov
mov
lods
arpl
pop
xchg
jle
push
mov
adc
xchg
stc
fwait
test
adc
test
je
clc
jg
add
in
mov
test
mov
mov
adc
cmp
leave
add
mov
dec
mov
adc
ljmp
imulb
mov
pop
in
mov
jns
test
xor
jg
out
loopne
inc
inc
jb
imul
rsm
jge
lds
jmp
mov
ret
or
push
dec
call
bound
decl
ds
js
add
mov
aaa
insl
out
and
aas
and
scas
xchg
fcomip
call
aaa
int
adc
jns
push
or
inc
test
loopne
cmp
dec
cli
call
jge
pop
jns
mov
cmp
xchg
inc
dec
mov
pop
fwait
cltd
mov
dec
out
cltd
insb
dec
push
rclb
mov
popa
out
movsb
xor
fwait
pop
pop
dec
imul
ljmp
loop
jle
mov
push
aad
inc
pop
pusha
xchg
push
jge
jmp
sub
aas
imul
mov
dec
arpl
seto
incl
call
jp
rclb
les
insl
cwtl
fs
pushf
cmp
stos
mov
roll
cmp
push
mov
jno
stos
sbb
push
int3
scas
fildll
cmp
push
test
sbb
mov
jg
int3
dec
sahf
push
sarl
xchg
jle
ljmp
ja
mov
cmpsb
aas
jmp
sbbb
fsubrs
fisubrl
daa
cwtl
inc
sbb
jae
shlb
adc
ljmp
repz
lahf
pop
cs
popf
or
sbb
nop
sbb
push
jb
lock
push
pop
mov
and
or
pop
popl
aam
outsb
sti
adc
cmpsl
pop
lods
cmpsl
dec
add
sub
sub
pusha
nop
clc
ljmp
cmp
outsb
mov
sub
adc
or
jns
adc
xor
out
test
popf
inc
xchg
sar
push
xchg
and
sub
adcl
decl
pop
mov
and
cmp
enter
mov
or
cltd
aaa
ljmp
aas
inc
cwtl
inc
xchg
xchg
mov
lods
and
scas
pop
fwait
mov
xchg
adc
pop
fadds
std
jl
xchg
jecxz
pushf
out
xchg
mov
mov
add
pop
dec
push
outsb
pop
push
orb
mov
adc
lcall
ja
push
dec
inc
mov
mov
cmpsb
mov
cmp
xchg
test
cmp
popa
sti
cmp
jecxz
jg
decb
dec
sub
mov
push
jb
xor
pop
call
daa
popf
cmp
ret
pop
sbb
lods
daa
jns
inc
cmp
test
xchg
and
lods
pushf
sahf
mov
cld
xorl
scas
shrl
call
jmp
mov
and
adc
je
cwtl
loope
fwait
mov
aad
sbb
incl
sub
xor
mov
xor
xor
lret
lods
sbb
xchg
cld
lock
add
and
mov
insl
sbb
sub
jg
addb
mov
adc
xor
jno
sub
xchg
mov
cmpsb
mov
leave
add
hlt
mov
adc
js
test
jnp
mov
cmp
test
add
test
mov
ja
add
sub
xchg
lcall
xor
fsubrl
std
xorl
dec
std
fcomip
out
push
popf
sahf
and
inc
ja
jle
movsl
hlt
test
rorb
ds
scas
sbb
stos
mov
iret
xor
scas
mov
xor
sahf
aaa
pop
pop
mov
movl
inc
jg
add
push
push
dec
adc
imul
or
out
mov
mov
mov
mov
push
mov
mov
push
test
pop
dec
xor
mov
pop
sub
imul
call
pushf
cmp
or
outsl
mov
cmpsb
sbb
jp
mov
call
pushf
sbb
sbb
jns
xor
pop
cmc
lcall
jp
clc
incl
lds
xor
jno
jg
in
inc
and
rcrb
add
dec
into
jb
add
sbb
pop
mov
and
rep
sbb
or
psubq
or
lret
enter
push
lea
decl
lock
ficomps
ds
sub
dec
pop
daa
ja
inc
xor
ja
push
arpl
jbe
lcall
and
lea
fisttpl
stc
ja
testl
jg
in
testl
mov
jno
int
add
inc
call
xchg
push
loope
outsl
push
push
cwtl
fs
lret
mov
fwait
lcall
sahf
jns
jns
add
lret
movsb
inc
ret
and
fwait
decb
push
push
testb
jae
loope
aam
mov
mov
pop
adc
shl
jmp
loop
gs
mov
dec
aaa
pop
inc
outsb
jle
es
add
incl
repnz
arpl
or
add
cwtl
fldcw
xchg
inc
push
dec
dec
je
cmpsl
mov
test
push
or
cs
add
outsl
test
inc
mov
fwait
or
xor
jle
dec
xchg
pop
or
lods
icebp
mov
jno
adc
push
xchg
fimuls
mov
jns
sub
in
dec
jne
xor
or
push
aaa
pop
cmpsb
fisubl
sbb
jo
mov
ds
mov
repnz
les
mov
lock
sbb
pop
xchg
imul
xchg
gs
in
or
ljmp
xor
jo
push
xchg
leave
and
ljmp
and
push
inc
jo
scas
sub
mov
push
mov
jns
sarl
jl
je
xor
out
sbb
or
pop
mov
jmp
cmp
lods
add
jo
xor
xchg
jbe
mov
in
enter
jmp
dec
pop
dec
inc
mov
and
mulb
stos
test
pushl
test
dec
pusha
mov
xor
test
fidivrs
aad
push
scas
enter
add
incl
dec
mul
push
pop
push
iret
ljmp
dec
sub
aas
xchg
out
pusha
imul
push
std
mov
das
inc
aas
and
xchg
mov
push
lret
mov
outsb
mov
orl
outsb
xchg
subl
mov
roll
lcall
aaa
pop
push
push
adc
mov
mov
sub
or
xchg
clc
fwait
mov
loopne
jnp
data16
daa
out
mov
out
lock
scas
xchg
ss
mov
pop
popf
xor
xchg
pop
cmc
xchg
add
xor
test
xor
jmp
mov
mov
sbb
sbb
jmp
int3
dec
je
cmp
in
cmc
pop
add
popa
adc
and
inc
jns
je
xor
lcall
sti
inc
aaa
movsb
sbb
and
das
mov
push
push
mov
jbe
dec
push
lea
movsb
test
ljmp
or
pop
arpl
leave
clc
and
mov
insl
sbb
or
cmp
scas
popf
jbe
fcomps
mov
popa
cmpsb
lods
mov
inc
fidivs
dec
lcall
outsb
int3
adc
push
jl
call
lea
decl
add
and
mov
out
sahf
push
cmp
xchg
ret
dec
fildl
pop
sub
in
outsl
adc
mov
lret
movsl
or
pushl
adc
xchg
pop
cltd
xlat
or
sub
xchg
push
jbe
lahf
or
push
sbb
ja
push
cmovns
sub
dec
mul
les
rcrb
call
push
loopne
cli
cmp
vmread
imul
sahf
add
popa
loope
mov
jl
and
lcall
sub
mov
sub
lea
xchg
adc
test
mov
mov
add
jmp
jne
je
lret
jb
jbe
pusha
cmpsb
sub
sub
inc
loopne
outsl
cmp
and
push
jp
push
call
pop
jecxz
in
pop
lock
ficomps
inc
jg
das
inc
add
and
stos
stc
adc
inc
dec
or
push
outsb
push
movsl
cmp
xor
mov
rorl
orb
cmp
fwait
pop
call
dec
out
add
inc
enter
add
inc
imul
imul
push
cld
fwait
out
out
sub
scas
test
dec
push
gs
dec
decl
and
movl
sbb
adc
mov
mov
call
jno
or
fidivrl
aas
push
sahf
pop
jle
outsb
faddl
inc
shlb
mov
sbb
call
adc
pushf
aad
dec
pop
push
stos
push
sbb
dec
lea
or
add
ja
out
sahf
jecxz
nop
mov
mov
xchg
xchg
cmpsl
hlt
cmp
rcrb
adc
adc
push
insl
cltd
cmpsb
scas
mov
add
scas
push
inc
loopne
mov
xchg
inc
mov
incl
sahf
adc
and
repz
test
and
fmull
test
mov
add
pop
xchg
stc
and
mov
insb
popa
xchg
add
bound
mov
scas
repnz
mov
pop
int3
jne
xchg
mov
inc
clc
ljmp
mov
xor
dec
or
mov
pop
pushl
jns
js
pop
scas
mov
adc
and
pop
push
andb
out
mov
subl
imul
add
xor
jle
xchg
popf
jg
sub
pushl
and
cmp
and
cltd
lods
mov
pop
jl
or
cltd
mov
pop
pop
fs
popf
lahf
cmpsb
lcall
pop
xchg
lods
mov
mov
pop
out
mov
sbb
packssdw
mov
sub
jns
pop
pop
dec
outsl
nop
push
std
push
xchg
fs
push
call
cmp
decl
add
push
lods
pop
xchg
push
inc
jp
ljmp
or
out
mov
roll
dec
pop
outsl
sub
icebp
mov
mov
or
jge
jne
les
outsl
or
jns
int
pop
test
cmpsb
dec
out
pop
fs
dec
leave
mov
les
lods
xor
cld
jg
sub
scas
clc
xchg
add
scas
adc
jle
out
jne,pt
call
popf
adc
jmp
push
dec
jae
imul
inc
inc
ja
push
pop
cmpsb
inc
cld
jmp
mov
dec
dec
push
inc
pop
shrb
mov
call
sbb
mov
gs
jne
cmp
jp
aad
inc
jecxz
lcall
test
pop
push
mov
mov
or
fldl
incb
xchg
pop
arpl
mov
sbbb
push
mov
lcall
fisubrs
cmp
cli
mov
sti
popf
add
loop
addr16
pop
or
push
inc
or
in
ja
xchg
insl
xor
mov
pushl
adc
neg
pusha
push
sub
xchg
mov
sbb
xchg
pushf
cmpsl
xchg
std
incl
movsl
sti
mov
mov
lds
mov
inc
mov
ret
and
xor
mov
repz
clc
sbb
js
lods
push
jge
inc
movb
dec
mov
leave
mov
pop
sbb
mov
in
call
std
scas
xor
push
movb
cmpb
sub
mov
mov
cmp
mov
sbb
hlt
jb
adc
hlt
js
movsl
in
jle
lret
add
decl
pop
cmpsl
fs
lcall
pusha
and
inc
push
lods
out
aam
mov
push
hlt
inc
jb
inc
sub
ja
loopne
jb
lea
push
imul
in
sbb
jbe
inc
add
jp
lods
push
out
sub
js
dec
inc
xchg
fldl
fwait
mov
mov
jae
mov
push
dec
lcall
jae
imul
pop
ret
dec
fdivrs
inc
sarl
or
mov
lret
ja
int
and
out
ret
mov
mov
in
call
push
lcall
push
arpl
imul
jmp
xchg
stc
add
out
fsubs
jl
cmp
mov
jg
add
add
lcall
loope
lahf
cmp
mov
inc
dec
pop
mov
fisttps
arpl
sar
incl
xchg
mov
out
dec
js
xchg
cmp
sbb
and
in
sub
in
test
dec
clc
jg
adc
repnz
jae
in
jecxz
jns
mov
aaa
pop
sbb
aam
ja
in
clc
loopne
jne
sub
and
lods
mov
ds
inc
mov
cmpsb
dec
dec
arpl
dec
popf
cmpsb
movsb
out
adc
xchg
lods
mov
xchg
sub
pop
hlt
pushl
addr16
cmpsl
xchg
mov
stos
mov
mov
inc
cmp
mov
mov
incl
jnp
mov
fwait
mov
xchg
es
xlat
movsb
incl
inc
xchg
iret
mov
mov
fwait
and
add
xchg
les
and
sbbb
pop
cmp
incl
xchg
sbb
sbb
mov
xor
sbb
call
mov
mov
stos
push
fldcw
dec
push
adc
or
pop
mov
jp
cli
adc
push
incl
push
pop
test
mov
add
or
ljmp
mov
out
push
scas
fs
imul
pop
lret
push
sar
add
loopne
insl
dec
xchg
or
push
loop
xchg
ljmp
sbb
or
mov
push
pop
mov
add
ss
fildl
clc
pushl
int
gs
dec
push
push
scas
add
dec
rorb
sub
stos
and
xchg
pop
mov
ret
mov
jo
sub
pop
push
fisttpl
incl
jbe
mov
xorl
test
pop
or
inc
cmpsl
leave
sbbl
pop
and
dec
out
out
lds
push
in
aaa
jl
call
jp
std
outsb
jo
push
scas
rclb
pop
jns
pusha
fidivs
out
push
jns
cli
add
xchg
xor
push
inc
jmp
das
dec
popa
stc
xchg
push
loope
insl
cmpsb
insl
lcall
test
pop
jbe
jmp
clc
jns
jl
dec
or
and
jno
xchg
add
push
ret
inc
fldt
and
jnp
jl
dec
cmp
js
jmp
mov
stos
xchg
xchg
push
idiv
sbb
pushl
pop
out
lds
jne
stc
jbe
inc
in
pop
pop
pop
cmp
enter
inc
xor
data16
inc
stos
pop
stos
scas
stos
xor
cmp
or
or
jmp
jecxz
addr16
movsb
andb
ret
dec
rcll
stos
lcall
lock
icebp
jmp
add
xchg
or
lods
mov
mov
mov
and
out
mov
mov
sbb
mov
ret
cmc
out
add
dec
push
mov
mov
push
dec
adc
ljmp
mov
adc
and
and
dec
jne
fstpl
jne
sbbb
sar
incl
dec
xor
pushf
or
jg
add
mov
xchg
mov
xor
pusha
sbb
sbb
and
inc
fildll
insb
xchg
pop
enter
imul
mov
js
xchg
ds
je
test
out
pop
loopne
into
push
sbb
leave
dec
in
nop
sbb
stc
lock
fldl
sarb
dec
cmp
pop
ds
inc
xor
fbld
into
arpl
cmpsb
cs
imul
pop
mov
mov
mov
jg
decl
lret
fcoms
das
fistpll
daa
scas
xlat
dec
lret
jne
jle
ds
das
clc
call
pop
ja
das
loope
fadds
pusha
push
inc
mov
scas
xor
lods
fwait
mov
sbb
pop
jo
push
cs
ljmp
inc
dec
cli
push
repnz
add
mov
sti
mov
rcll
arpl
bound
push
mov
pop
adc
lock
nop
lcall
out
insb
and
pusha
adc
xor
pushl
cmp
push
push
sbb
push
mov
flds
pop
ja
and
or
jmp
mov
jle
mov
cmc
lcall
sar
mov
loop
leave
inc
push
inc
mov
sub
push
fbld
push
mov
add
mov
jge
fs
mov
ljmp
ljmp
inc
insb
lds
adc
and
and
push
lahf
ljmp
fstpl
addb
je
sbb
or
add
call
das
cli
lcall
push
jb
dec
or
adc
or
mov
sahf
aas
dec
std
lcall
pusha
icebp
outsb
push
clc
xor
jo
std
xchg
and
nop
pop
aas
jns
adc
jmp
jno
sub
outsl
out
sub
fs
imul
jge
or
popf
aaa
jbe
xor
decl
push
sbb
mov
adc
int
add
mov
xchg
push
lret
outsb
repnz
jbe
orb
jb
cmp
data16
cmpl
mov
outsb
ret
mov
inc
push
dec
cld
pushl
sbb
iret
sub
push
in
stos
imul
lcall
push
add
add
lods
outsl
add
stc
push
mov
and
incl
clc
dec
dec
push
mov
dec
mov
in
into
or
lcall
mov
jo
inc
or
cmp
push
ds
pop
inc
loopne
sub
je,pn
or
jae
cmp
push
gs
dec
mov
call
enter
adc
in
frstor
pop
mov
dec
in
dec
daa
xchg
outsb
loopne
clc
add
arpl
movsl
dec
xor
xor
adcl
insl
and
stos
jle
mov
jne
push
jae
icebp
and
insl
or
jle
fildll
dec
sub
loope
and
dec
lcall
rorl
dec
adc
sbb
outsl
imul
arpl
inc
popf
xchg
push
and
mov
dec
jno
cmp
inc
jg
jno
out
dec
lret
lcall
arpl
out
clc
ljmp
pop
push
std
and
dec
imul
clc
pop
pop
aaa
mov
cmp
cmp
pop
subl
cmpb
cmpsb
xchg
cmp
int
xchg
add
icebp
fwait
lea
pop
mov
jl
movsb
and
and
push
inc
in
cld
jmp
and
aad
scas
mov
cmpsb
pop
push
push
into
sbb
push
sarb
addr16
push
adc
ljmp
daa
sbb
mov
mov
lret
les
or
lock
in
addr16
sub
push
xchg
add
ret
ljmp
loopne
cltd
push
xchg
pop
imul
mov
jno
push
imul
cmovle
lock
jl
je
loope
insb
enter
std
test
mov
ss
std
mov
mov
lea
jle
mov
popa
xor
mov
dec
add
ljmp
add
and
add
call
call
mov
push
pushf
int
mov
sbb
and
add
pushf
mov
mov
and
mov
mov
mov
push
out
mov
xor
push
dec
repnz
xorl
mov
cmp
mov
push
icebp
je
xchg
jb
cmc
or
addb
cmpsb
push
addr16
xchg
xor
mov
xchg
pop
scas
or
xorb
push
dec
mov
call
pop
cmpsl
add
lcall
mov
aam
dec
and
clc
jg
out
iret
stos
sub
or
sbb
push
hlt
inc
rcrb
ljmp
and
mov
loop
loopne
pop
addr16
ret
jne
adc
ficoms
jne
lds
push
jno
or
sbb
jmp
push
mov
jno
test
xchg
jge
mov
mov
cs
xor
xor
out
mov
aam
jmp
je
adc
in
mov
loop
imul
sbb
nop
sbb
push
sti
call
add
lods
cmp
dec
arpl
dec
out
test
mov
cmpsb
cmp
add
or
jg
cmp
hlt
test
ja
stos
xchg
icebp
stos
out
add
decl
pop
rorl
add
pop
call
ret
scas
loopne
pop
and
add
fidivrl
mov
iret
rcl
bound
xchg
push
sbb
mov
sub
pushl
mov
in
push
sub
daa
insb
inc
jo
jnp
mov
jg
or
shrb
test
sbb
or
out
je
lcall
std
xor
xor
cmpsb
adc
dec
push
scas
sbb
adc
sar
ljmp
add
and
dec
stos
adc
pop
push
repnz
aad
mov
insb
pop
push
fstl
sub
mov
loope
jno
and
test
pushl
adc
dec
inc
orl
sahf
xor
rolb
mov
lds
or
mov
mov
sub
mov
adc
pop
inc
and
mov
stc
and
adc
into
xor
cmp
ljmp
xchg
arpl
inc
sbb
adc
sub
scas
test
or
mov
mov
shll
mov
mov
mov
pop
mov
jns
mov
lods
add
scas
sbb
stos
sarb
push
gs
jg
hlt
cmp
pop
jne
xchg
xchg
gs
out
je
cwtl
mov
incl
clc
jns
push
orb
imul
dec
shll
call
xorl
scas
add
andl
jo
stos
mov
inc
inc
mov
jno
mov
out
mov
lcall
in
ds
push
pop
jmp
cmc
jle
pop
pop
movsb
xor
or
push
insb
adc
mov
adc
and
inc
scas
inc
loopne
or
fdivl
xchg
xchg
pop
fidivrs
lcall
stc
sbb
jl
gs
jb
movsb
imul
jmp
cmpsb
rcll
data16
xchg
pop
dec
sub
mov
jns
add
outsb
xorb
xchg
lcall
lods
pushl
loopne
add
cmp
cmp
and
jge
lret
push
push
xchg
out
push
push
pop
xor
fucomi
cmp
mov
test
mov
ficoms
loopne
icebp
cmp
test
pop
sbb
xchg
jns
aad
lret
jp
ljmp
ljmp
sbb
lret
dec
push
inc
push
cmpsl
cmpl
jmp
scas
out
jbe
decl
add
pop
out
push
push
hlt
jo
push
je
jbe
pushf
mov
mov
jmp
sub
pop
sbb
cmpb
pushl
js
icebp
xchg
arpl
add
dec
outsl
arpl
pop
inc
in
pop
leave
cmpsb
aas
imul
sbb
push
jp
mov
push
mov
mov
scas
imul
or
ljmp
call
popf
js
lea
out
lods
dec
adc
xchg
xchg
dec
push
mov
jne
clc
dec
cli
jb
push
and
lods
xor
lcall
pop
aad
sbb
mov
xor
adc
test
fwait
insb
je
and
cld
call
and
lea
imul
pop
jnp
adc
sbb
cmpsl
push
ret
int
push
in
incl
ds
mov
add
mov
mov
cld
ljmp
pop
dec
dec
and
arpl
mov
jle
dec
push
sub
fstpt
cs
test
mov
idivb
iret
test
sub
adc
cmp
mov
shlb
jb
mov
decl
mov
push
xor
cmpsl
lea
inc
mov
cmp
xchg
inc
pop
and
imul
loope
imul
jmp
insb
and
mov
outsb
mov
scas
xchg
add
mov
push
aaa
xor
rcll
std
cld
call
pop
add
add
sbb
xor
lock
das
lods
push
test
aas
call
fdivl
push
jo
fcompl
inc
les
lret
dec
push
dec
les
inc
enter
lcall
imul
push
data16
xor
mov
pop
fildl
leave
cmp
shll
cld
das
movsb
xor
xorl
jp
xorb
outsl
mull
incl
dec
or
mov
and
lcall
sub
sub
mov
jbe
pushl
or
call
sub
or
inc
cwtl
mov
jecxz
xchg
decb
call
push
jge
or
es
popf
outsl
mov
mov
mov
fdivs
pop
inc
iret
push
or
mov
pop
fnsave
sub
add
pop
cli
and
cwtl
dec
mov
dec
dec
adc
xor
fiaddl
jns
aaa
inc
pushl
fs
mov
scas
out
out
and
pop
jmp
adc
es
ficomps
mov
mov
dec
and
dec
cs
lret
adc
ss
jmp
call
cmp
inc
sbb
sahf
adc
mov
out
lock
js
cltd
pop
rorb
das
mov
or
cmp
rcrl
ljmp
outsb
popa
xchg
jl
or
xchg
leave
gs
subb
lock
pop
sbb
in
cwtl
xor
lahf
push
out
mov
lcall
enter
andl
inc
sub
inc
mov
ret
jmp
ret
xchg
xor
sub
push
mov
insl
rcrl
xchg
mov
xor
add
adc
cltd
push
push
cmpsl
lahf
stos
decl
cli
mov
xchg
or
lock
incl
sub
cs
fistl
xor
int
lahf
call
mov
in
fmuls
scas
lods
xor
aas
js
adc
ret
outsb
ds
xchg
cmp
pusha
dec
inc
sbb
inc
das
xor
gs
arpl
pop
roll
mov
push
mov
fisubrl
mov
es
stos
mov
add
mov
jmp
ss
repz
js
lahf
jns
jp
cltd
jns
xchg
roll
nop
or
int
lcall
adc
pop
inc
push
adc
or
and
push
pushl
gs
mov
stos
popf
pop
enter
or
adc
adc
decl
add
cmp
add
jl
sub
dec
sbb
cs
push
add
bound
adc
in
jle
xor
mov
jg
pop
decb
cs
or
test
leave
decl
xchg
cld
sahf
punpckhwd
daa
jg
mov
es
jb
and
nop
aaa
and
add
dec
out
in
mov
fwait
cmp
and
scas
lcall
mov
repz
ret
bound
mov
stos
inc
sarb
ja
decl
sbb
adc
xor
push
dec
lcall
or
sbb
push
lcall
xor
fidivrl
ret
mov
imul
xor
mov
popf
imul
push
shlb
mov
fistps
jb
popa
fs
push
inc
jbe
xchg
nop
sbb
popa
mov
aas
cld
sbb
cmpsb
repz
mov
mov
mov
sbb
ljmp
push
out
cwtl
es
pop
cld
ljmp
mov
fbstp
out
movsl
jle
outsw
push
sub
insb
dec
xchg
add
stos
imul
aam
jg
add
mov
pop
fiadds
add
sub
fcoms
mov
adc
xchg
pop
decl
test
jg
or
mov
test
in
dec
insb
pusha
gs
test
mov
out
add
les
lcall
lcall
xchg
inc
aad
aaa
arpl
insl
pop
inc
and
es
push
pusha
mov
xor
adc
je
pop
ss
and
xor
pop
push
or
sbb
add
add
or
sub
cs
sub
ds
push
sub
sbb
pop
sbb
add
stos
add
xor
adc
iret
in
mov
adc
push
or
cld
and
lahf
sub
outsb
in
sbb
push
cltd
adc
call
dec
jo
insb
test
mov
pop
mov
idivl
lea
dec
stos
lret
xchg
jg
mov
xchg
fstps
clc
inc
into
mov
fs
dec
cmp
inc
xchg
cmp
cmp
adc
dec
clc
cmp
adc
dec
dec
and
push
les
ljmp
ret
or
incb
add
jecxz
addl
rorb
mov
cmpsb
lods
rorb
pop
mov
sahf
cmpsb
loop
and
sbb
sbb
fstpl
filds
and
adc
popa
in
jb
push
jg
pop
pop
sbb
mov
xchg
inc
mov
mov
ja
pushl
dec
out
xchg
fnstsw
into
cmp
mov
flds
jg
decl
jae
popfw
push
jnp,pt
pop
mov
lretw
adc
sub
mov
out
sar
push
sbb
in
xchg
out
mov
sub
fcomip
jge
add
fsubrl
enter
xchg
mov
gs
xor
or
ljmp
popa
sbb
test
pop
xchg
adc
sar
lcall
das
daa
js
sub
fisttpll
xor
push
push
xchg
jg
es
jbe
cmp
cmp
data16
das
push
out
js
adc
lret
and
cltd
and
ljmp
ds
pop
mov
adc
popa
fwait
das
mov
add
sub
jb
in
jae
or
fidivrs
xchg
pop
push
mov
pop
sbb
cmp
jmp
cmp
sub
jo
mov
and
sub
daa
or
pop
adc
xchg
ret
cmp
sbb
mov
fsubrl
cmc
incl
cld
mov
and
mov
xor
mov
mov
fbstp
sbb
rclb
cmp
scas
enter
ds
add
pushl
and
cwtl
sub
fcompl
add
pop
lock
jle
pop
cltd
jmp
pop
add
dec
scas
cld
decl
movsl
and
nop
lock
push
mov
lock
or
mov
pop
cmpsl
adc
decb
pop
add
mov
and
xchg
lret
cmp
adc
mov
call
mov
dec
xchg
ret
and
decl
push
push
sbb
cmp
sbb
push
and
xor
add
jmp
mov
adc
adc
sub
add
or
jg
pusha
ljmp
mov
adc
add
dec
dec
and
hlt
daa
sub
nop
sbb
nop
or
mov
jae
jmp
and
sub
mov
lret
sub
pop
dec
dec
dec
mov
lcall
jbe
sub
mov
add
stos
fdivl
outsl
push
xor
pop
sbb
mov
sbb
jmp
call
and
ljmp
sahf
int3
sbb
inc
test
nopl
add
aaa
std
mov
xor
insb
test
aas
dec
mov
jg
out
lcall
jbe
lods
aad
push
xor
sahf
rorl
jg
lcall
push
mov
xchg
xor
leave
stos
and
xchg
xor
sbb
pushl
popf
rcrb
mov
xor
pop
inc
je
xchg
ret
sub
aas
sqrtps
lcall
or
js
cld
sub
push
or
ljmp
shrl
or
stos
sub
leave
repz
fdivp
mov
push
xchg
add
cwtl
mov
push
push
ret
or
jecxz
jae
cmp
jb
adc
jg
aas
movsl
adc
push
inc
inc
pushf
out
rcrl
xor
popl
movsl
adc
or
rolb
lret
cmp
cmp
js
adc
out
cmp
leave
jmp
pop
adc
push
mov
ja
lcall
cmp
push
dec
popf
out
sbb
es
jg
mov
xor
push
pop
push
arpl
lock
and
adc
add
mov
fisttps
loope
icebp
leave
into
adc
push
sub
ret
mov
shlb
outsb
decl
hlt
mov
leave
outsb
adc
jge
ss
orl
or
or
ljmp
sbb
les
add
inc
outsl
inc
pushf
ret
aaa
std
outsl
adc
sub
dec
xchg
adc
mov
pop
mov
jae
mov
loop
mov
push
push
out
lods
aaa
xlat
add
jo
scas
incl
sbb
fcmove
arpl
cmpsb
cld
call
scas
cmp
mov
clc
aas
leave
movsl
jle
out
hlt
lcall
or
xor
test
test
xor
pop
mov
push
fiadds
dec
scas
xchg
mov
mov
out
ja
clc
jg
je
cmc
xlat
mov
xchg
shr
sbb
icebp
call
sti
rcr
sbb
mov
bound
jge
mov
ret
ficomps
pop
lea
lcall
sahf
sub
cwtl
cmpsb
mov
inc
mov
jo
sbb
decl
push
mov
stos
add
pushl
xrelease
dec
ljmp
or
jg
outsb
adc
mov
xchg
sbb
popf
pusha
hlt
popf
mov
insb
lock
filds
pop
sub
lcall
movsl
xchg
and
mov
ljmp
decl
xchg
cmpsb
cltd
out
lcall
add
mov
scas
xchg
sbb
scas
mov
loop
adc
fwait
sub
test
mov
scas
out
stc
fwait
sar
aaa
push
or
mov
xchg
xlat
cs
shrb
mov
sti
push
mov
es
or
repz
fwait
cmpl
dec
out
xlat
add
push
clc
loop
add
outsb
test
xchg
lock
loope
add
nop
xor
test
mov
adc
mov
push
loopne
ds
ret
pushl
bound
ds
jle
add
lcall
mov
ljmp
pop
int
and
sbb
sbb
jns,pn
rorl
nop
push
dec
sbb
or
xchg
outsb
or
test
adc
jg
lock
cmp
push
rcrl
dec
mov
mov
lcall
aam
jle
push
popf
cld
mov
xchg
icebp
test
jae
add
dec
out
clc
lcall
push
xor
inc
int3
pop
jge
adc
das
pop
test
adc
into
outsb
lret
push
fdivr
outsl
clc
pushl
inc
inc
xorl
insl
xor
jecxz
or
das
push
imul
gs
xor
scas
call
push
ja
imul
inc
ficomps
lcall
and
xor
dec
mov
stc
and
ljmp
pop
insl
and
add
mov
outsl
mov
dec
and
and
mov
and
xor
mov
out
pop
test
popf
add
jae
in
daa
inc
aas
and
mov
filds
std
cmp
and
push
lods
adc
adc
pop
pop
mov
push
or
es
loope
dec
cmovs
xor
mov
shrl
mov
mov
leave
mov
mov
stos
mov
in
stos
cmpsl
sbb
out
mov
push
mov
cmp
push
dec
adc
insb
adc
add
pop
popa
jo
fisttps
add
jg
call
sbb
pushl
jg
mov
or
fs
sub
sub
ljmp
pop
mov
xor
pop
jl
sbb
icebp
sahf
mov
fcomp
sub
lcall
out
clc
mov
cmp
pusha
push
pop
call
push
in
push
jno
xchg
mov
test
decl
mov
imul
stc
push
in
loope
push
xor
ja
gs
or
fists
cld
lock
push
push
xorb
sbb
dec
out
xchg
inc
lret
mov
cwtl
sub
mov
test
push
rorb
cld
jno
inc
std
lcall
shrl
xorl
sbb
loopne
out
xchg
add
push
sub
push
dec
in
sbb
lcall
or
adc
mov
scas
out
xor
cld
out
or
and
or
dec
ds
cmp
cs
mov
icebp
pushl
popf
fwait
lret
out
mov
les
inc
into
xchg
cmp
arpl
js
loopne
inc
jmp
aaa
inc
pop
cmpsb
aam
scas
ljmp
lds
cmp
and
ljmp
incl
arpl
scas
hlt
clc
xchg
mov
enter
dec
and
add
sti
aaa
jbe
jge
hlt
pop
inc
cs
dec
cmp
roll
decl
jge
mov
or
sub
cmp
inc
pop
mov
and
mov
das
adc
xor
nop
cli
cmpsb
cmp
stc
mov
add
cli
fdivp
call
icebp
daa
xchg
dec
or
inc
jbe
inc
xor
cli
pop
mov
outsl
xor
mov
inc
imul
and
loop
out
clc
clc
pushl
add
sub
dec
mov
lods
scas
xchg
xor
das
lods
dec
xchg
clc
filds
xor
mov
ret
jle
or
inc
fdivrp
ret
aaa
xchg
xor
test
and
fcomip
sub
mov
cs
hlt
or
aam
inc
add
add
pushl
push
and
and
ds
sub
adc
jbe
sahf
mov
adc
xor
decl
js
cmp
std
and
push
ret
fadds
ja
xchg
clc
lcall
push
pop
adc
pop
lcall
dec
add
loop
fidivs
jge
sbb
std
xor
push
inc
xor
bound
push
or
ljmp
ss
push
xor
nop
out
push
aaa
and
cmp
push
mov
dec
jg
incl
mov
inc
mov
sub
sbb
hlt
and
aas
inc
cmp
int3
aas
xor
and
js
jg
push
pop
into
adc
sbb
insl
gs
add
push
sub
xor
adc
sub
and
incl
add
and
add
leave
adc
push
jl
pop
add
xor
call
leave
scas
xor
pop
push
cmpsb
cmpps
dec
call
aas
push
out
outsb
mov
adc
adc
add
and
push
jmp
jno
jl
hlt
sub
sub
es
mov
push
xor
push
int3
cmpsb
jo
mov
call
inc
push
mov
jecxz
add
sahf
xchg
xor
jmp
mov
movsb
or
jb
jns
pop
lds
lea
inc
in
stos
jmp
call
jo
cwtl
jl
cmp
das
es
adc
int3
insl
iret
jge
cmpsl
push
lcall
rcrl
dec
inc
mov
cmc
sarb
jecxz
arpl
jg
loop
dec
insb
mov
pop
fidivrl
add
loope
sub
decl
cltd
repz
dec
pop
scas
cs
test
test
sarb
hlt
adc
popf
xor
xchg
jnp
decl
adc
push
sbbl
xor
jecxz
jmp
push
sbb
cs
test
mov
fcomip
pop
or
or
mov
out
setae
int3
sbb
mov
incl
ds
lcall
lea
fcomps
jo
bound
cmp
incl
inc
stos
cs
and
les
xchg
repz
mov
sbb
in
cmp
call
lds
fnsave
data16
jbe
push
out
add
pop
cmp
jns
add
push
jne
cmp
aas
mov
adc
adc
pop
jmp
fs
inc
outsl
dec
push
scas
es
dec
scas
or
out
pop
inc
shl
fidivs
adc
jg
decl
sbb
stc
xor
in
mov
loopne
mov
out
fwait
movsl
mov
insb
pushf
dec
mov
mov
lcall
jle
dec
push
scas
insb
enter
push
jne
lods
jl
sbb
les
in
push
mov
ret
sub
or
jo
rolb
add
add
incl
je
inc
dec
gs
and
in
scas
addr16
pop
jne
push
int
dec
lock
dec
inc
outsb
xchg
scas
imul
cmpb
pushl
sbbb
inc
jl
push
imul
nop
mov
lahf
push
inc
lcall
pop
adcb
xor
imul
ss
sub
movd
inc
call
push
ja
push
dec
push
push
adc
dec
sbb
call
in
mov
rcll
dec
sti
sbb
xchg
xor
xchg
ffree
mov
push
sbb
or
sbb
push
inc
ljmp
sbb
jp
dec
out
xchg
lods
inc
in
jmp
push
jp
push
lods
xor
sbb
adc
int3
ss
pop
or
ds
outsl
jno
fwait
sub
ds
loopne
sub
je
mov
int
mov
cli
cs
mov
push
lcall
mov
in
out
iret
adc
and
lcall
sti
xor
fmull
xor
cs
cmp
pushl
ds
adc
in
sub
out
push
mov
push
test
hlt
mov
xchg
lcall
or
jmp
sub
push
ljmp
dec
je
and
and
out
pop
js
xchg
xor
fsubl
cs
or
cs
insb
push
jno
add
xchg
stos
mov
pop
cli
outsb
clc
out
rcl
jns
adc
stos
roll
sbb
ffreep
lcall
and
rcll
cli
lcall
push
xchg
add
adc
gs
je
jmp
mulb
into
mov
mov
loop
ds
inc
loope
inc
scas
dec
stos
sbb
adc
aad
jle
mov
cltd
cmc
clc
mov
lds
xchg
cmp
sub
jg
jo
call
call
jg
loop
xlat
mov
lock
xchg
pop
adc
push
outsb
icebp
adc
jle
pushl
jle
mov
adc
xchg
xchg
out
ss
sbb
pop
aad
adc
pop
sbb
jg
xchg
clc
lcall
sbb
mov
pop
add
dec
ret
ds
test
pushf
ds
jp
cmc
mov
jecxz
clc
sbb
sahf
add
dec
pop
xchg
out
xchg
test
mov
call
sbb
push
xchg
pop
inc
orb
jmp
cmpsl
adc
push
rorb
sub
dec
jo
cmpsb
fdivrp
push
jg
int3
pop
push
movsl
ja
shll
jle
scas
lcall
sub
loopne
lahf
mov
decb
dec
je
push
jbe
sbb
decl
mov
ds
mov
outsl
clc
mov
dec
out
pop
pusha
shrl
push
call
inc
cmp
mov
pop
call
cmpsb
push
outsb
cmp
add
movsl
mov
dec
outsb
dec
push
mov
jge
popa
jp
outsb
addr16
xchg
les
ds
test
sbb
fstpt
mov
jl
xlat
add
nop
in
mov
shrb
lods
iret
adc
xor
in
fs
pop
and
dec
push
out
shll
data16
call
insb
push
incl
in
pop
and
sbb
call
movb
jb
in
dec
inc
es
jg
push
pop
mov
loopne
imul
js
cli
xor
and
hlt
fisttps
mov
add
dec
cltd
shlb
push
jle
movsl
inc
lret
pop
dec
jle
test
out
mov
ljmp
cmpb
mov
popl
lcall
lea
clc
addr16
add
sub
mov
cltd
mov
pop
xor
lock
xor
addr16
out
push
stos
cmp
pop
loopne
test
loopne
sbb
leave
lock
push
decl
lock
outsb
jno
mov
clc
aam
cwtl
mov
cmp
fdivp
movsl
xchg
xchg
sub
mov
mov
or
ljmp
mov
daa
xlat
ret
nop
mov
xchg
push
adc
dec
sub
insl
call
icebp
add
xchg
inc
cmc
ljmp
sbbl
add
shlb
scas
sahf
inc
pushf
xchg
ja
scas
add
cmp
jmp
dec
loope
dec
xchg
cltd
mov
leave
jo
inc
sahf
movsb
pop
lahf
shrl
fs
hlt
decl
pop
mov
in
mov
hlt
ljmp
sar
gs
lcall
cmpsl
orb
mov
sub
push
into
mov
adc
ljmp
dec
call
lcall
int
lock
push
orb
ja
jnp
and
cli
mov
inc
mov
bound
lcall
xchg
xor
movsb
mov
daa
loope
bound
je
mov
int
js
ljmp
rolb
insb
xlat
sbb
inc
sbb
cmp
pop
pushf
pop
xor
loopne
xchg
mov
lds
cmp
add
test
sub
cmpxchg
pop
lock
jae
pusha
and
mov
sub
pop
jbe
sbb
push
mov
dec
aam
js
inc
jl
push
cmpsb
mov
into
jmp
fwait
push
sar
call
iret
sub
ret
jg
mov
xchg
ds
jge
cs
ljmp
loope
xchg
test
lods
dec
cmpsb
fsubp
sbb
loope
mov
fwait
sbb
sub
xchg
rolb
js
dec
outsb
pop
out
mov
jg
jl
inc
jae
push
pushl
insl
and
cmp
enter
pop
aas
test
cltd
adc
addr16
pop
addr16
dec
fcomip
inc
or
mov
repnz
test
les
jmp
fs
xchg
sti
cs
mov
pusha
jne
pop
jno
mov
push
cld
lcall
mov
and
sbb
cmp
and
imul
mov
fnstsw
fsubs
and
add
dec
xor
or
dec
scas
arpl
mov
mov
jg
scas
push
mov
out
cmp
pop
mov
inc
jp
sub
inc
sahf
out
mov
push
mov
jg
scas
xor
out
xchg
cwtl
stos
inc
dec
imul
ja
clc
out
push
flds
push
xor
fisttpl
cmp
xchg
les
movsl
sar
imul
mov
lock
mov
push
mov
push
push
xor
movsl
pop
fstl
rcll
incl
loopne
imul
or
ret
dec
pop
fstpl
out
fsubrl
ret
sbbb
jle
pop
popf
popa
les
sub
fidivrs
clc
and
cmpsl
xchg
ljmp
outsb
daa
adcb
mov
mov
mov
scas
insl
les
push
repnz
jns
lods
mov
pushl
xchg
push
pop
imul
adc
pushf
cmp
ret
push
sbb
call
stos
scas
aas
adc
imul
add
push
scas
jmp
mov
pop
push
jmp
pop
adc
jns
adc
ficoml
gs
jmp
pop
xor
adc
outsb
mov
lods
cwtl
out
jmp
cli
sbb
imul
push
mov
stos
push
push
std
outsb
pop
adc
push
aam
testb
jmp
push
xor
mov
add
jae
xchg
mov
jmp
push
shlb
pop
scas
fnstsw
lods
xchg
jge
mov
ds
out
int
loopne
add
pop
popa
inc
push
cs
mov
cmp
ljmp
sahf
data16
xchg
xor
cltd
mov
dec
test
enter
sub
xchg
mov
mov
xor
add
lcall
roll
pop
daa
pusha
pop
lret
xor
outsb
fistpl
pop
push
cltd
adc
xchg
jg
xor
popa
leave
call
cmp
mov
add
iret
es
xchg
mov
scas
pop
out
mov
incl
adc
scas
outsl
pop
repz
dec
sti
aaa
add
xchg
inc
arpl
jmp
xor
ds
cmp
inc
mov
fwait
clc
and
out
lahf
outsb
cwtl
je
mov
push
pop
lock
aam
xchg
scas
cli
add
push
int
imul
inc
inc
pop
out
xor
je
pop
push
andb
inc
lcall
pop
push
das
lds
mov
add
dec
pop
cmp
mov
cmp
and
ja
clc
mov
jle
dec
jbe
cmpsb
mov
push
inc
jecxz
adc
jle
out
push
inc
dec
into
leave
inc
dec
push
daa
mov
scas
insb
decb
dec
sbb
fs
into
xchg
jle
pop
scas
jo
insb
push
cli
ljmp
ss
roll
mov
sbb
rep
mov
dec
movsl
pusha
add
cld
in
incl
test
js
inc
gs
ss
adc
mov
mov
mov
fs
scas
xchg
add
icebp
call
loopne
add
ds
enter
push
push
or
adc
mov
bound
push
arpl
fistps
cmp
daa
pop
bound
jns
mov
jne
fsubp
pushf
mov
inc
sub
decl
lock
mov
movsb
sbb
cmpsb
nop
cli
movsl
outsb
fiadds
inc
jl
jg
adc
push
mov
add
sbb
mov
mov
out
lcall
xor
push
mov
nop
add
jo
jle
and
push
xor
pusha
loope
icebp
pop
mov
js
add
push
push
push
ds
lcall
and
jno
jno
lcall
push
jb
sub
sbb
lcall
imul
sbb
dec
aad
sahf
or
xor
inc
xor
xor
sahf
hlt
xchg
insl
loope
decl
dec
add
inc
stos
mov
pushf
pop
dec
ret
jnp
lahf
rcll
mov
andb
int3
cmc
decl
dec
push
xor
pop
cs
in
pop
or
dec
scas
cmp
es
sahf
out
faddl
dec
in
push
jge
das
loope
adc
adc
sub
push
add
aas
push
mov
scas
or
int3
lcall
jb
loopne
aam
loope
fistpl
out
dec
mov
imul
push
push
in
pop
jns
aad
xchg
mov
mov
jo
mov
cmp
test
jg
jmp
jns
outsb
jo
push
lret
ret
fstpt
push
ds
add
das
decl
dec
loopne
dec
inc
sbb
call
xchg
adc
test
xchg
ret
jecxz
jmp
js
xor
jb
gs
add
mov
push
cmp
cltd
cmpsl
dec
jno
addl
mov
cmp
ret
addl
pop
pop
mov
ficomps
add
mov
push
and
and
es
cmpsl
std
mov
add
out
mov
xchg
or
push
rorl
push
test
add
ss
ret
sub
je
xorb
push
sti
data16
scas
xor
xor
lds
push
fisttpl
ljmp
or
scas
cmp
mov
test
imul
in
cmp
test
aaa
pushl
mov
mov
data16
loope
add
push
decl
cltd
lret
dec
mov
jl
cmp
sbb
cmc
cmpsb
xchg
xchg
xchg
push
and
cld
call
jbe
lea
push
cld
sub
rorl
decl
test
bound
aam
sbb
out
cs
dec
aad
adc
mov
movsl
and
jge
adc
sbb
dec
add
mov
and
adc
xchg
mov
fstpl
incl
out
mov
fstl
loope
ljmp
inc
dec
mov
icebp
pop
cmpb
pop
push
cmpsb
inc
test
lcall
arpl
lea
adc
aaa
scas
adc
lcall
sarb
pop
pop
adc
push
dec
js
sub
sbb
ret
lds
inc
cld
jmp
cltd
ja
and
inc
iret
or
lods
pop
loope
mov
or
mov
dec
jle
scas
push
loope
xor
and
ret
or
mov
nop
insw
dec
add
push
jle
ljmp
pushl
loope
pop
inc
inc
mov
in
aam
test
sub
push
sarb
jns
and
repnz
jmp
mov
xchg
daa
fadds
mov
ja
push
pop
fwait
pop
mov
cli
adc
dec
lods
and
test
mov
cli
nop
xchg
mov
sub
or
lret
rol
jmp
or
out
xchg
mov
mov
xchg
lock
das
and
fcoml
pop
dec
loop
dec
push
bswap
sub
cmp
mov
and
ret
dec
mov
add
dec
cmp
mov
arpl
xchg
fwait
adc
loopne
ja
aam
aad
stos
push
dec
lea
adc
adc
ljmp
or
sbb
xor
mov
test
push
or
lcall
out
or
xor
and
out
ss
cs
movb
push
jne
inc
call
mov
and
fcmovnbe
add
gs
mov
mov
sbb
incl
push
out
mov
pop
nop
push
out
add
mov
dec
xor
pushf
dec
in
cmp
outsl
stc
push
inc
lahf
xchg
push
sbb
mov
jle
jl
lcall
insb
cld
adc
fsubs
sahf
push
pop
enter
ljmp
add
xor
aas
repnz
pusha
sahf
jno
dec
jb
mov
dec
ret
outsb
ja
fstpl
mov
xlat
add
push
xchg
pop
add
jmp
sbb
cmp
lods
xor
inc
js
loope
or
js
jle
inc
insb
jae
fisttps
dec
scas
add
jbe,pt
pop
test
rolb
mov
adc
add
push
cmp
jne
sub
jmp
ljmp
push
cmp
mov
jg
cs
pop
add
lcall
mov
ja
jno
call
scas
inc
cs
add
pop
stc
and
dec
xchg
pushf
enter
incl
xor
inc
mov
mov
push
jbe
mov
cltd
xor
adc
cld
incl
les
xchg
add
ljmp
mov
mov
stos
cltd
xchg
mov
cmp
jecxz
and
sahf
add
stos
imul
jbe
inc
dec
imul
jecxz
fs
dec
jo
jge
mov
cmp
pop
and
jno
and
mov
pop
dec
pop
pop
adc
dec
adcl
push
stc
lock
inc
std
mov
fwait
inc
andb
push
pop
and
jl
cmc
fisttps
inc
adc
les
pop
incl
pushl
xor
fcoms
pop
loop
push
sarl
mov
mov
pop
mov
cli
js
mov
dec
mov
xchg
sahf
mov
inc
jg
mov
movsl
or
and
fisttpl
mov
jmp
jge
pop
ljmp
dec
adc
call
or
jp
xchg
aas
js
lea
jp
inc
test
jae
out
and
bound
mov
cmp
imul
les
js
outsl
mov
push
mov
jb
mov
cmpsl
nop
imul
cmp
fs
sub
lock
mov
push
pop
add
mov
jg
sub
jae
icebp
jnp
movsl
xor
incl
ja
push
jns
cmpsl
int
adc
sahf
add
ds
out
pop
dec
out
stc
mov
int
ja
orb
and
insb
xchg
sar
call
in
push
cli
dec
out
mov
fsts
adc
pop
data16
push
cmpsl
cltd
mov
add
xchg
push
repz
in
jl
pop
and
jle
cmp
in
add
inc
shll
push
test
jge
sbb
test
mov
addr16
imull
fcomip
jg
cmp
sub
dec
pop
mov
mov
out
xchg
shlw
in
sbb
cli
in
imul
push
dec
test
std
incl
addl
outsb
fcoml
push
adc
je
ljmp
mov
sub
sbb
xchg
dec
std
fisttps
add
mov
inc
push
bound
push
scas
adc
fbld
mov
das
pop
call
inc
insb
push
cmpsl
sbb
ljmp
xchg
ljmp
dec
mov
popf
dec
jmp
jecxz
sub
push
fwait
mov
je
dec
cmc
mov
clc
pop
pop
ds
scas
lahf
inc
jae
aam
xchg
sub
pop
cs
xchg
fimuls
ret
mov
jg
jns
rcll
ret
lds
out
sahf
pop
aad
push
ret
dec
lcall
jmp
in
jns
fmull
in
insb
xor
pop
adc
add
and
cmc
sbb
jle
scas
js
cli
fbld
sub
push
cmp
int3
xchg
inc
mov
xor
daa
adc
and
mov
incl
cld
pop
daa
adc
xor
mov
test
call
jg
icebp
int
pop
cmpsb
cmp
sbb
xor
jne
mov
shll
sahf
adc
pop
data16
xchg
jne
cmc
decl
pop
push
femms
push
stc
sbb
int3
mov
outsl
clc
pop
adc
test
push
imul
dec
or
sub
ljmp
jp
dec
in
jnp
jne
arpl
jmp
out
add
pop
inc
xor
dec
sub
decl
lock
je
add
pop
dec
fnstcw
sbb
jl
ret
stos
pop
jmp
lret
mov
xchg
dec
out
ja
push
inc
fbld
lock
or
pushl
sbb
xchg
aam
jp
xchg
aam
dec
xchg
loopne
lock
inc
jmp
mov
out
bound
jg
hlt
scas
pusha
out
jg
push
or
in
cmc
mov
push
jnp
shrb
xchg
mov
pop
inc
add
incl
lods
ret
es
mov
mov
addr16
cmpsl
jmp
dec
js
les
dec
jns
insb
sbb
jg
outsl
faddl
inc
lds
add
push
jle
jecxz
inc
iret
lods
loopne
jno
mov
rclb
gs
fstl
jae
mov
dec
pusha
fsubl
lcall
fcoml
out
mov
shrl
push
std
or
orb
mov
or
mov
in
aam
push
stos
shll
rorb
cmp
fcomip
jbe
mov
les
xchg
sti
xor
lods
ja
lcall
jg
mov
and
cmp
jecxz
addr16
rclb
dec
loope
jg
pop
test
xchg
aam
jmp
dec
test
mov
cmp
mov
imul
pop
addr16
push
fisubrs
xchg
cmpsb
push
cld
jnp
add
ds
or
mov
leave
xchg
inc
in
mov
adc
movsb
decl
rcrb
push
jg
aaa
inc
imul
lock
incl
movsl
sub
imul
mov
jge
ret
les
mov
ss
cmp
inc
outsb
jl
ss
xchg
push
pop
test
mov
leave
adc
sarl
push
jne
dec
sarl
insb
popa
fbstp
push
jne
test
lcall
movsb
aam
dec
fwait
adc
dec
lcall
aam
cld
in
push
dec
mov
xor
lcall
out
fsubs
xchg
cmp
inc
jge
adc
pop
stc
cmp
xchg
cmp
lcall
mov
xchg
xchg
out
sbb
int3
mov
rcll
call
and
add
and
in
jno
fadds
jnp
cmpsb
xor
mov
test
pushl
pop
nop
out
sahf
into
sahf
imul
aaa
pusha
jl
add
and
mull
xor
test
les
jle
sub
fidivs
jns
xchg
cmp
stos
mov
fsubrl
call
out
mov
mov
xlat
or
fdivl
jge
movsl
pushl
pop
push
test
mov
push
jge
ljmp
fbstp
dec
jp
cmp
cmp
pushl
das
arpl
sbb
cld
and
movsb
cmp
sahf
gs
leave
xor
fnstsw
mov
incl
fcomps
inc
outsb
xchg
cmp
pop
mov
inc
data16
sub
sbb
std
mov
sub
int3
xorb
and
pop
pusha
and
ljmp
dec
mov
xchg
mov
clc
cmp
pop
cld
cmp
pushl
sub
loop
push
pop
xchg
adc
xchg
out
inc
cli
mov
or
nop
cli
xchg
mov
mov
inc
push
out
enter
cmp
incl
jg
inc
inc
mov
negl
adc
mov
dec
xchg
pushf
inc
call
inc
ficoms
push
pop
int3
cmp
xchg
xor
cmc
add
test
sbb
fstpt
cltd
dec
dec
fcomip
fistpl
bound
sbb
insb
pusha
sub
jp
loope
push
icebp
nop
leave
mov
shl
xchg
mov
pop
jg
sbb
add
cwtl
jg
test
call
pop
dec
lods
cld
lcall
jecxz
jnp
loope
ss
sbb
cmp
dec
ds
inc
pushl
dec
inc
mov
pusha
jnp
std
mov
enter
jae
jecxz
icebp
xorl
push
dec
decl
addr16
ds
arpl
fistps
jle
ljmp
sarl
fcomip
pop
dec
les
ret
pop
bound
xchg
aam
push
lcall
arpl
insl
decl
aaa
insl
pusha
cmpsb
pop
pusha
call
into
es
ljmp
std
mov
loopne
adc
mov
jne
data16
testl
or
icebp
mov
popa
jo
arpl
scas
dec
inc
ret
mov
stos
dec
jg
ljmp
sbb
pop
pop
repz
out
push
mov
pop
repz
out
xchg
stos
jmp
inc
mov
add
xchg
inc
jg
shll
push
push
xchg
in
cmpsl
xor
repz
sahf
lahf
cmp
pop
mov
xchg
xlat
pop
sub
sbb
dec
icebp
mov
add
test
mov
xchg
ds
cmpsb
inc
push
mov
ficompl
sbbl
insl
jbe
sarb
js
cld
mov
test
pop
mov
mov
mov
jge
and
xchg
loopne
outsb
icebp
stos
out
xchg
out
mov
ret
mov
repz
pushl
mov
jg
mov
or
fldenv
divl
jge
ret
ljmp
scas
dec
int3
and
jb
dec
imul
out
sbb
pushl
and
lock
mov
and
or
icebp
incl
xor
arpl
in
movsb
inc
decb
fidivrs
imul
mov
add
jmp
subb
test
and
out
mov
and
xchg
clc
pop
cld
out
mov
mov
test
fildl
mov
mov
inc
ja
incl
ds
in
jns
in
mov
pop
popf
mov
pop
ret
and
inc
ljmp
push
lret
cmp
mov
inc
sahf
int3
mov
jmp
push
decl
mov
push
subb
arpl
lahf
popa
clc
sub
push
mov
lcall
mov
push
push
les
pop
sahf
js
sbb
fcomip
lcall
mov
mov
pop
push
cwtl
enter
push
add
into
xchg
int
popa
in
fs
mov
call
ljmp
ss
rcrb
dec
stos
cmp
scas
push
fwait
loope
ja
shlb
jbe
mov
scas
mov
cmpsl
or
mov
jg
jg
mov
add
stc
xchg
fs
test
cmpl
cmp
pop
rcrb
dec
sbbb
inc
lcall
xor
loop
int3
xchg
inc
jmp
jg
scas
dec
fnstcw
xchg
inc
lock
push
pop
mov
mov
jno,pn
xchg
sbbb
xchg
push
mov
xchg
fwait
dec
jle
jge
sbb
fs
incl
add
fmull
mov
pop
int3
xor
jmp
int3
test
mov
and
xchg
push
jne
out
sarl
fwait
mov
fbld
jecxz
lods
insl
or
ret
jecxz
mov
sbb
mov
rorl
sahf
ficompl
pop
test
mov
cmp
call
dec
test
js
mov
xchg
sbb
mov
movsb
ja
mov
adc
xchg
ds
ss
clc
fwait
ret
stos
jecxz
loopne
push
jmp
pop
xlat
push
sub
pushf
jp
sbb
jmp
xchg
xchg
xchg
hlt
ds
mov
inc
mov
iret
cwtl
fwait
test
xor
das
clc
cmp
data16
insl
mov
dec
mov
mov
int
ljmp
xor
movb
inc
in
cmp
inc
mov
mov
sbb
das
sar
mov
mov
adc
jp
pop
inc
inc
mov
cld
or
cld
jbe,pt
xchg
pop
jbe
mov
push
cld
outsl
or
ja
hlt
nop
xchg
in
bound
xor
jmp
or
push
sub
jne
mov
fnstcw
xchg
jge
cmp
mov
sahf
mov
shlb
mov
mov
add
and
mov
pop
mov
dec
or
sahf
cmp
dec
adc
cmp
push
enter
in
mov
fidivs
movsb
push
cmpsl
sbb
push
sbb
inc
cli
mov
pop
jae
repnz
mov
jmp
ret
mov
push
sbb
aaa
pop
jg
test
or
fs
decl
cli
xchg
movsb
insl
ret
sub
loopne
orl
cmp
push
and
in
int
jg
xlat
cmp
jmp
repz
ss
push
fdivr
mov
js
mov
mov
cli
xor
mov
and
jmp
add
jb
jmp
inc
into
xchg
and
subl
fbld
ja
jmp
test
pushf
add
icebp
cld
cwtl
inc
in
mov
mov
cltd
popa
out
xchg
lret
sahf
mov
pushl
add
mov
gs
sbb
xchg
int3
mov
jmp
loopne
int
ja
icebp
lods
mov
jl
pop
test
es
jp
shlb
shll
movsb
out
mov
mov
popa
filds
jecxz
xchg
mov
aas
loop
shrl
pop
lcall
jle
xchg
stos
clc
decl
and
pop
iret
cmp
push
lret
fidivs
ljmp
pop
les
push
stos
xchg
nop
jle
xor
insl
lock
mov
cs
test
sbb
lcall
xchg
push
outsb
cli
push
lock
loope
andl
inc
mov
fdivp
and
ljmp
pop
lods
cmpsl
jne
pop
mov
jle
xor
arpl
mov
ret
fdivp
mov
cmp
out
xchg
dec
bound
pop
inc
loopne
nop
stos
jle
xchg
jne
popf
add
pop
out
hlt
out
and
mov
jns
dec
lods
hlt
xor
jg
in
out
xchg
into
or
popfw
cmc
lods
dec
repz
jmp
cmp
mov
shrl
mov
bound
out
cmpb
or
ljmp
enter
inc
jecxz
outsb
mov
aaa
dec
in
xchg
arpl
iret
popf
push
test
es
xchg
mov
bound
fsubp
or
mov
adc
cmpsb
and
sbb
addl
fbld
lds
cmpsb
fnsave
insl
cli
cmp
clc
add
popa
mov
mov
fmuls
xchg
cmc
cwtl
dec
lock
xchg
lcall
pushf
stos
jnp
cwtl
lret
fwait
dec
ljmp
mov
imul
and
bound
push
fwait
insl
cld
mov
mov
movsb
mov
lods
and
ljmp
or
xchg
cmp
jbe
test
sbbl
les
lret
push
arpl
mov
stos
mov
pop
icebp
push
cwtl
pop
lcall
out
std
lods
imul
mov
test
push
test
ljmp
add
jns
sarb
jge
loope
repnz
testb
mov
sbb
inc
lahf
and
cmpsl
xlat
mov
mov
rcrl
clc
jg
into
pop
mov
and
movsb
inc
iret
push
lcall
pop
popf
hlt
cmpsl
pop
std
scas
incl
pop
mov
mov
in
mov
dec
or
shlb
pop
push
lahf
push
jecxz
cmp
popf
int
push
cmc
cmpsl
subl
push
movsb
jp
cmp
gs
fistps
icebp
jmp
std
cmpsl
rcrb
clc
sbb
sti
pusha
sarl
inc
cwtl
inc
dec
mov
fdivs
mov
ret
xchg
dec
neg
cmpsl
mov
pop
out
xchg
pop
rorb
movsb
inc
pushf
or
bound
sahf
mov
xchg
rcrb
sar
mov
mov
sbb
mov
jle
mov
mov
fcomps
popf
insb
mov
in
arpl
test
mov
imulb
cwtl
xchg
xchg
jnp
xor
jl
pop
mov
jg
iret
mov
adc
cld
fstpt
inc
mov
mov
dec
pushf
lcall
cmpsl
imul
pop
lcall
mov
loopne
stos
xchg
xchg
rolb
in
mov
mov
incl
imul
mov
popf
dec
cmc
xor
inc
in
cmp
ret
gs
xchg
lock
and
inc
test
inc
mov
cwtl
into
xor
sbb
pop
cld
fistpll
mov
pop
mov
cld
cmp
sahf
fs
sbb
mov
sub
out
jg
lcall
jl
or
ljmp
lahf
jnp
adc
pop
pushf
call
les
push
mov
xchg
cld
out
push
mov
daa
mov
inc
cwtl
add
mov
or
mov
call
pop
repz
dec
mov
sbb
les
shlb
test
jg
mov
xchg
mov
sahf
outsl
and
mov
mov
xchg
pop
lret
mov
cli
ljmp
and
jns
xor
xchg
lret
xchg
stos
leave
xor
int
ljmp
test
fdivr
lcall
lcall
mov
dec
xchg
inc
fnstenv
enter
inc
in
adc
mov
and
jne
ret
iret
mov
add
cli
cmpsb
call
aam
orb
cmp
aas
xchg
dec
mov
mov
lock
fwait
xor
mov
jae
cmpsb
fdivl
cld
shlb
shrb
int3
dec
mov
lcall
cmp
mov
inc
jp
negb
and
clc
lahf
shl
jmp
mov
mov
inc
sti
add
je
mov
lahf
fs
mov
cmp
mov
jno
fdivrl
pop
clc
mov
jae
mov
outsb
rorb
cmpsb
incl
ret
out
adc
inc
aam
mov
mov
cmp
mov
lret
pop
push
mov
adc
outsl
mov
out
sbb
pop
and
in
popa
in
test
jp
nop
lds
xchg
mov
rcrb
jecxz
inc
ljmp
xchg
hlt
lock
mov
xor
sbbl
hlt
jnp
movsl
mov
aaa
jg
pop
fisttpll
ret
ss
fadds
lods
ljmp
hlt
outsl
fs
rolb
fwait
mov
jge
in
pop
ret
jmp
jns
outsb
jo
stc
mov
mov
or
or
insl
push
lcall
pushl
xor
out
out
xchg
test
mov
ljmp
pop
add
pop
mov
pop
test
mov
fisttpl
fistpl
rcr
mov
mov
sbb
movsb
xor
lret
mov
fmull
aam
arpl
jmp
mov
dec
cld
push
push
pusha
or
pop
mov
mov
je
mov
jl
mov
std
ja
add
pop
sbb
and
sahf
xchg
xor
hlt
pushl
repz
dec
mov
adc
out
aad
jg
and
movsl
xchg
pop
call
stos
or
cmp
push
popf
ret
adcb
loopne
jge
out
in
nop
pop
hlt
call
add
mov
push
inc
mov
xchg
loopne
inc
fwait
shll
pop
ja
scas
mov
mov
or
mov
lock
xchg
clc
add
sbb
mov
aam
pop
scas
cmp
jl
mov
jno
decb
push
jle
test
sbb
lds
cli
clc
xchg
sahf
scas
push
fwait
inc
cld
sub
fwait
aas
pushl
fnstsw
mov
outsb
xchg
aaa
jg
cmpsl
mov
std
mov
mov
cmp
aas
pushl
pusha
mov
mov
clc
cmp
out
cld
idiv
mov
cmpsb
mov
add
jp
mov
sbb
nop
inc
std
push
mov
cli
out
cli
inc
jle
or
in
mov
cmc
dec
mov
mov
mov
dec
xor
jno
es
push
sahf
ljmp
jmp
fwait
les
mov
lcall
sub
dec
inc
mov
push
mov
mov
mov
sbb
mov
call
dec
dec
sub
ret
cmp
mov
inc
loopne
xorb
movl
adc
sahf
cwtl
mov
xchg
jo
incl
jge
xchg
scas
ja
movsb
std
and
fidivrs
pop
cmc
decl
mov
icebp
cmp
sahf
xor
lcall
mov
lcall
inc
cmc
xor
mov
sarl
mov
cmpsl
lds
iret
pop
mov
mov
pop
lods
pusha
inc
jg
mov
push
int
inc
aam
in
xor
filds
jg
lock
mov
and
stc
cmpsb
push
mull
nop
dec
ja
call
into
xchg
inc
rcll
iret
mov
inc
mov
push
call
arpl
cmc
inc
lds
in
out
sbbb
mov
decl
sub
dec
lahf
aas
jge
popf
aam
insb
int3
mov
adc
clc
xor
imul
mov
mov
cli
sbb
dec
test
pop
stos
iret
cmpsl
dec
ljmp
cltd
cmp
pop
call
out
mov
fisubl
pop
aaa
gs
mov
cmpsl
decl
and
mov
jmp
movsb
fisttpll
cmpsb
mov
jmp
inc
mov
les
jns
ret
mov
sbb
loop
fistps
js
cmp
inc
movsb
cmp
mov
jg
loope
lock
jg
movsb
dec
loopne
xchg
xchg
xchg
fcoms
pop
test
push
push
mov
cmpsl
inc
mov
les
hlt
out
mov
movsl
loope
cmpsb
repnz
pop
cmpsl
jbe
nop
mov
fbld
movl
sbbl
lods
jmp
inc
jg
ja
bnd
lods
xor
mov
mov
sbb
mov
jle
clc
and
gs
ljmp
into
test
rclb
ljmp
push
inc
insl
icebp
xor
jg
push
jnp
add
lods
popa
out
fcoml
addr16
fwait
cld
xchg
addr16
rclb
fdivs
push
jne
add
mov
dec
call
add
test
mov
lock
scas
sbb
out
mov
ret
push
into
pop
imul
mov
lods
inc
repnz
cld
sar
ret
cs
mov
or
adc
out
sub
inc
fs
cmp
repnz
movb
dec
and
decb
lock
cmp
dec
jge
mov
push
ds
incl
aam
sbb
cli
or
insl
mov
aad
in
inc
fidivrs
jge
rcll
inc
lods
sbb
pushl
inc
or
sbb
in
andl
mov
jno
dec
mov
push
test
cld
ljmp
jns
nop
jo
cmp
dec
pusha
pop
mov
mov
jmp
mov
jg
dec
push
lea
outsl
jne
lods
push
jae
fwait
popa
push
mov
mov
lods
jae
mov
jno
jnp
inc
jge
xchg
dec
inc
or
jmp
cwtl
push
js
mov
rolb
arpl
and
mov
lcall
ljmp
popf
fstpt
cmp
out
mov
and
mov
incl
mov
push
cmp
push
int3
mov
jl
lcall
pop
adc
bound
aaa
hlt
lcall
inc
arpl
mov
dec
jbe
mov
popa
jmp
dec
jl
xchg
cmpsb
mov
mov
iret
scas
jg
mov
lahf
pusha
adc
pop
jecxz
out
adc
or
shll
loop
lcall
dec
cmp
cmp
in
mov
jne
dec
cmpl
pop
es
inc
mov
lods
inc
out
mov
addl
sub
js
dec
push
jb
inc
push
arpl
lcall
movsl
sahf
dec
popa
cmpsl
jg
orl
mov
xor
fbld
bound
jecxz
lret
or
jo
pop
sbb
fists
enter
add
jge
movsl
xor
stos
aad
xchg
scas
jle
mov
push
mov
lock
outsl
popa
fidivrl
fwait
pop
mov
push
adc
adc
jb
inc
loope
jp
adc
cmp
inc
fists
cmp
xor
cmpsl
aad
inc
insb
pop
out
xchg
mov
inc
jp
stos
or
pop
cmp
lds
scas
xor
push
adc
push
sub
push
test
js
xor
and
stos
add
adc
sbb
jo
inc
loopne
mov
int
dec
test
inc
xor
lcall
ret
cmp
pop
cmp
rcrb
push
mov
xor
test
lahf
fwait
inc
xchg
cmp
shrb
aaa
hlt
sub
jns
cmp
inc
popf
xor
push
incl
loope
xchg
inc
add
sub
test
outsl
pop
inc
lahf
aas
icebp
js
push
in
je
popf
add
mov
out
sbb
popf
dec
and
out
sub
jl
sbb
call
iret
test
aam
add
test
or
lods
shlb
jmp
and
push
imul
and
arpl
mov
jp
sub
sbb
ljmp
setnp
stos
mov
mov
or
sub
fadds
xchg
inc
testl
mov
je
or
dec
stc
js
mov
sbb
pop
mov
add
incl
mov
cmpsb
jle
xor
lahf
test
dec
scas
adcb
jg
loopne
pop
add
xor
xor
push
lcall
sti
gs
mov
jb
shll
xchg
fwait
xor
shll
xchg
sub
icebp
mov
ljmp
dec
inc
aas
mov
lods
dec
das
mov
mov
inc
pop
cwtl
idiv
xchg
mov
incl
inc
in
pop
mov
je
bound
pusha
ljmp
sbb
sbb
and
in
mov
clc
aaa
push
clc
movsb
add
pop
orl
orb
push
sti
sub
out
mov
push
shrl
ds
iret
push
shll
pop
or
incl
test
mov
mov
stos
pop
pop
jle
hlt
incl
cmpsb
pop
lods
push
imul
mov
call
mov
and
xor
incl
pushl
xor
sub
cmp
fmull
jmp
jmp
out
xchg
pushf
ret
jae
cltd
mov
jle
cmp
xor
scas
xchg
stos
push
arpl
jmp
mov
xchg
adc
sub
push
mov
dec
fsubrl
mov
xchg
sub
and
jmp
jno
mov
and
xchg
lea
mov
clc
ljmp
jecxz
jb
cmc
test
call
inc
mov
and
push
aaa
lahf
ja
jbe
push
xchg
cs
loop
xchg
push
xchg
sti
or
adc
je
mov
push
lods
xchg
xor
mov
add
out
mov
decl
dec
dec
jbe
push
jae
push
mov
scas
push
mov
pop
dec
out
sbb
lods
or
mov
call
out
mov
jg
fcomi
push
or
sarb
fisubrl
jbe
fbstp
fs
jmp
scas
in
mov
add
xchg
xchg
cli
aaa
into
daa
or
and
mov
leave
scas
sahf
fisubrl
cs
sarb
jecxz
sahf
cs
jae
sbb
pop
mov
push
cmp
ljmp
add
or
mov
daa
xor
loop
jbe
fisubs
sarb
shrb
out
stos
lods
cmpsb
and
ljmp
repz
mov
cmpsl
std
mov
sahf
cmpsl
out
test
jmp
dec
push
andl
jne
repz
inc
mov
lret
cs
mov
int
subb
pop
test
pushl
cld
movsl
xchg
push
test
xor
movsb
cmpsb
scas
jb
push
stos
ss
clc
mov
xchg
cltd
into
sub
and
incl
pop
scas
fwait
or
repnz
fwait
mov
imul
or
or
sahf
mov
lock
jo
cli
push
stc
decl
push
mov
adc
mov
test
in
inc
pushf
sahf
test
fisttpl
xchg
pushl
std
mov
mov
and
pop
jbe
movsl
push
cmp
sub
repz
and
sbb
pop
cmp
cmp
mov
jecxz
cmpsb
in
lods
jle
xor
sahf
fwait
push
dec
arpl
push
daa
dec
or
daa
push
inc
call
mov
fcomip
sbb
lea
insb
gs
pop
les
mov
sub
popa
shl
fsubs
dec
mov
fbstp
or
push
cmp
jmp
loopne
insl
popf
decb
jno
fnstcw
lea
xor
pop
fidivs
imul
mov
js
lods
data16
outsb
inc
mov
les
sti
in
push
dec
int3
jge
inc
loope
out
sahf
pop
mov
rclb
xor
ret
incl
mov
sub
mov
lock
xchg
or
out
inc
cmc
cs
imul
clc
js
xchg
test
outsb
push
aad
jmp
std
push
mov
mov
add
cmp
stc
push
mov
add
cmovnp
lahf
and
in
setle
push
sarl
das
jne
loope
out
pop
lods
stos
test
pusha
inc
cltd
add
jg
jecxz
decl
test
xor
lret
mov
dec
jle
mov
outsl
push
mov
pop
ror
scas
mov
ds
xchg
test
test
pop
out
ds
cltd
xchg
out
call
das
push
pop
adc
sbb
iret
sub
in
subb
bound
sahf
cltd
cmp
repz
repz
leave
sbb
jo
jbe
rorl
incl
fimull
xchg
sbb
loopne
stos
jno,pt
pop
cwtl
decb
xchg
in
push
jns
insl
outsb
outsb
loop
xchg
int3
lock
jle
inc
xorb
jo
ljmp
jge
mov
inc
lret
test
push
decb
xchg
mov
adc
push
popa
lret
xchg
jle
inc
out
add
mov
add
push
mov
dec
adc
pop
movsl
scas
add
mov
addr16
out
rorl
pushf
dec
pop
fnstsw
sarl
jp
out
fcoml
mov
decl
dec
pop
jno
push
xchg
add
mov
rorl
mov
push
adc
loope
movsb
call
dec
dec
or
jae
dec
and
popf
stos
lea
out
das
mov
rolb
enter
rorl
clc
pushl
rorl
lcall
sub
mov
jo
dec
push
popa
test
or
push
int
test
jg
loopne
aam
mov
sahf
repnz
pop
jge
ds
cmpsb
mov
mov
mov
inc
out
pop
mov
push
das
push
decl
insl
jb
dec
into
or
lahf
addr16
mov
dec
mov
mov
push
in
outsb
leave
pop
xchg
xchg
mov
dec
loop
sbb
sahf
ret
out
test
and
in
call
push
inc
inc
jno
cwtl
jbe
filds
outsb
ljmp
enter
inc
inc
fadd
jmp
dec
scas
scas
mov
xchg
vpsrlq
jg
jp
leave
push
mov
mov
cmp
add
clc
call
cmc
adc
jo
sbb
ds
inc
arpl
leave
pop
mov
dec
inc
insb
cmp
icebp
lcall
dec
mov
pop
lods
mov
adc
xor
pop
aam
nop
cmp
jb
jo
jp
sub
popl
or
roll
mov
push
lock
call
out
dec
inc
inc
stc
repz
cwtl
cmpsb
fs
mov
fwait
mov
adc
arpl
sub
jnp
fbstp
loop
xchg
scas
jno
std
cmpsb
xchg
pushl
or
notb
dec
push
mov
stc
rorb
stos
xchg
mov
int3
push
xchg
mov
mov
mov
push
push
out
adc
out
push
mov
pusha
sub
xor
ljmp
adc
icebp
push
pop
inc
add
jle
adc
out
out
jae
testb
inc
add
arpl
adc
aam
mov
mov
fcomi
xchg
fadd
decl
lock
add
lock
stos
xchg
xchg
and
mul
add
scas
mov
pop
aad
jmp
inc
dec
xchg
pop
adc
jg
mov
sti
shrl
aaa
add
lcall
mov
xchg
jg
add
sti
filds
and
fiadds
dec
mov
jne
rcll
rcrb
push
add
jl
adc
lock
xchg
test
mov
popaw
fists
add
xlat
or
push
es
push
out
xchg
cmc
jne
cli
adc
stos
aaa
ficoml
pop
cmp
lock
cld
icebp
mov
in
sahf
push
dec
pop
jecxz
inc
test
int
xchg
mov
lock
incl
pushl
push
sbb
dec
push
in
sbbl
into
or
mov
jge
lock
mov
mov
cmp
mov
rol
mov
mov
rcl
fistps
inc
stos
xchg
mov
scas
ss
xchg
mov
negb
mov
cld
inc
popf
jae
lea
push
inc
call
hlt
inc
mov
mov
incl
lret
push
out
lret
sub
mov
lock
iret
pop
test
call
ljmp
jg
repnz
ds
push
and
push
mov
lock
mov
ss
mov
outsb
mov
xchg
jg
dec
movsl
adc
xchg
mov
sti
loopne
mov
mov
mov
scas
popa
sahf
jle
enter
mov
rcll
xchg
stos
jne
sub
cmc
mov
mov
cmovg
js
ss
mov
pop
mov
mov
and
lock
mov
push
mov
xchg
pop
icebp
imul
dec
mov
adc
lret
lcall
mov
jbe
cltd
lahf
push
incb
mov
out
jle
incl
cld
ja
roll
fists
fsubl
inc
mov
call
sbb
jne
add
rolb
and
jg
jnp
mov
and
ss
xchg
lcall
add
test
es
addr16
mov
lock
fildll
xor
fistpl
pop
and
popf
clc
ds
cli
jb
ret
and
pop
sbb
mov
cmp
scas
push
or
cli
nop
inc
mov
rcll
ret
lds
in
test
xchg
fistps
xor
cmpsl
mov
out
xchg
pushl
inc
imul
mov
loopne
xor
test
stos
mov
and
cmpb
sbb
pop
pop
pop
inc
addl
scas
cmpsb
fcoml
sub
hlt
stos
or
mov
adc
pop
push
incl
mov
add
push
gs
inc
and
add
inc
daa
bound
test
decb
pop
jmp
dec
roll
dec
cmpsb
xor
inc
mov
inc
lret
cmp
jge
or
das
push
cwtl
clc
mov
insb
int3
daa
jo
jecxz
xor
in
or
fwait
lods
add
rolb
mov
inc
mov
incl
jmp
popl
insb
popa
xchg
and
repnz
xchg
mov
inc
std
jmp
test
push
mov
xchg
inc
scas
andb
lret
fistpll
int
dec
push
aad
cmp
mov
imul
cmp
sbb
dec
mov
inc
xorb
add
ret
jg
outsb
and
dec
test
aaa
jge
xchg
movups
rorb
mov
dec
add
add
popa
cmc
mov
mov
enter
push
idiv
pushl
pop
setp
lock
stos
pop
jl
pusha
in
aaa
inc
arpl
pusha
push
repnz
jno
pushl
push
lods
ret
mov
sub
test
sbb
mov
movsb
pushf
popa
fmull
in
push
ljmp
inc
mov
jg
icebp
dec
scas
xor
ja
pop
out
push
mov
test
adc
xor
out
iret
jnp
inc
loop
mov
insl
aaa
push
jns
dec
fs
jo
fs
or
mov
jmp
inc
shll
dec
outsl
xchg
sub
nop
decl
lock
fistl
outsb
mulb
and
add
outsb
cwtl
inc
jmp
jmp
cmpsb
jp
sarl
aaa
lods
in
add
mov
inc
and
and
pop
clc
pushl
roll
pusha
iret
and
mov
and
inc
add
pop
out
xchg
mov
sbb
adc
clc
xchg
cmp
xchg
ljmp
mov
pop
js
ss
jno
mov
inc
sbb
or
jg
ljmp
scas
xchg
outsb
out
jnp
mov
pop
movsb
fimull
add
adc
mov
fmuls
cld
xor
xlat
mov
addpd
adc
or
adc
or
add
xor
pop
ds
adc
cltd
and
dec
pop
push
jo
jl
add
sahf
cmp
and
cmp
ljmp
movsl
sbb
lods
mov
mov
mov
push
je
sbb
jo
filds
xchg
addr16
scas
dec
mov
in
sahf
mov
clc
insb
out
dec
xor
enter
cli
decl
jb
push
jge
inc
inc
gs
cwtl
sub
xor
in
mov
sub
cmp
scas
out
pop
dec
incl
mov
repnz
outsb
test
insl
out
jmp
icebp
xchg
inc
cltd
adc
push
mov
das
mov
xchg
push
adc
xor
aas
adc
decl
lods
adc
push
clc
scas
test
xchg
add
and
mov
xchg
mov
jmp
jle
flds
jno
sahf
jg
lock
pop
add
adc
push
mov
push
sbb
bsr
ljmp
test
shlb
pop
fwait
pop
loopne
repz
fidivs
and
add
loope
sub
setno
insb
mov
adc
ja
pushl
es
add
adc
sbb
dec
xor
jp
adc
sbb
jecxz
fiadds
addr16
scas
add
jne
cmp
pop
mov
in
inc
mov
out
mov
loop
mov
lea
das
dec
and
pop
sbb
push
frstor
gs
xchg
or
push
int
idiv
inc
jle
nop
sbb
push
sub
jmp
add
mov
shrb
clc
cwtl
repz
pop
jnp
push
add
cs
mov
inc
loopne
xchg
mov
insl
mov
fwait
cli
lds
imul
xchg
or
inc
lcall
cmp
test
dec
mov
mov
mov
mov
inc
mov
sbb
daa
movsb
popf
scas
in
mov
fsubrs
out
pop
fwait
out
ret
mov
outsl
scas
inc
cmc
arpl
push
fsts
leave
sbb
dec
jecxz
out
add
movsl
xchg
cli
cwtl
add
sbbb
stos
xchg
nop
into
stos
pop
and
dec
outsb
sbb
jo
dec
mov
sbb
sbb
out
inc
jge
sahf
sahf
cli
lods
iret
push
inc
cld
out
clc
dec
mov
int3
mov
jno
cmpsb
int3
mov
or
dec
mov
lcall
sub
jno
cmp
std
adc
lahf
lea
xchg
data16
decl
jecxz
mov
mov
test
pop
adc
daa
inc
sbb
ljmp
push
pop
adc
inc
sub
adc
arpl
jo
inc
inc
fwait
mov
mov
mov
lcall
ret
lods
adc
insl
cmp
add
data16
arpl
pushl
inc
filds
jp
addr16
cltd
test
inc
into
lcall
ficoms
int
mov
push
xchg
ja
roll
addl
add
and
idivb
mov
cmp
adc
or
cmpsb
ret
sahf
call
addr16
std
xchg
ss
fidivl
pop
pop
and
push
inc
ret
mov
sub
repnz
icebp
jne
jecxz
or
cmp
jl
das
nop
lcall
out
inc
call
add
pop
rorl
out
add
jmp
stc
sub
push
ret
add
loop
pop
sahf
cmp
out
test
icebp
push
sbb
movsl
jecxz
mov
lcall
mov
out
clc
idivb
ficomps
dec
mov
ror
cmpsl
cmp
mov
lods
mov
xchg
incl
xchg
mov
aaa
incb
sbb
sbb
sbb
in
mov
xchg
dec
fistps
loope
xchg
aad
or
mov
add
sbb
mov
pushf
mov
fists
insl
push
call
mov
cmp
mov
incl
mov
inc
dec
icebp
in
outsl
fs
cmpsb
push
in
mov
aam
mov
sbb
popf
mov
lcall
jno
mov
xchg
imul
jmp
dec
out
mov
jmp
cld
or
xchg
pop
imull
repz
rcrl
dec
mov
mov
stos
mov
fadd
xchg
and
mov
rclb
jo
xor
mov
decl
mov
arpl
jmp
out
fwait
dec
imulb
sbb
icebp
test
ljmp
inc
jecxz
mov
decl
idivl
mov
je
push
fwait
jbe
lods
xchg
mov
push
lds
inc
sub
add
call
imul
lret
daa
jl
inc
dec
mov
mov
shl
xchg
mov
clc
fadd
mov
ret
cmpsb
xchg
fbld
lahf
cltd
pop
shll
cmc
mov
add
call
insb
inc
shrl
ret
adc
push
add
or
int3
mov
pushw
sar
push
ret
mov
rcll
clc
outsl
aam
imul
push
push
add
out
loop
xor
jge
dec
fsubrl
mov
bound
scas
pop
adc
test
mov
int
stc
push
xchg
stc
repz
aad
and
icebp
mov
shlb
rcrl
pop
ljmp
outsb
rorl
dec
outsb
into
movsb
lret
mov
icebp
lcall
xchg
lcall
mov
mov
push
rclb
add
fcmove
mov
jle
lds
inc
lock
mov
mov
mov
call
das
mov
pop
out
ficoms
outsl
out
clc
mov
sahf
mov
sbb
xor
push
or
dec
mov
sahf
loope
and
or
xchg
mov
add
or
push
pop
pop
js
xor
aam
mov
dec
popf
xchg
out
inc
pop
dec
inc
ret
clc
movsl
lods
xchg
mov
add
mov
pop
inc
bound
loopne
nop
test
inc
dec
data16
fsubr
das
je
xor
clc
decl
and
in
cwtl
mov
gs
sti
jmp
mov
pop
jne,pt
lahf
call
inc
in
xor
inc
and
out
adc
test
pushl
adc
repnz
push
pop
inc
dec
or
loopne
dec
bound
inc
lret
outsl
jno
xor
cmp
int
inc
jb
pop
repnz
jo
pop
jp
shlb
repz
out
add
sbb
lea
pushl
rclb
sahf
test
test
in
cmpsb
sahf
lods
mov
xor
test
lock
rorb
je
mov
sti
push
daa
shrl
sahf
aad
outsl
fisubl
fsubl
mov
sar
ret
cmp
mov
dec
gs
repnz
test
into
pusha
ljmp
push
mov
inc
call
cs
cwtl
sbb
jl
and
cmp
in
imul
test
push
rcr
mov
jle
add
push
xchg
mov
inc
mov
and
fcomi
mov
dec
arpl
loop
fwait
iret
clc
scas
out
push
clc
aaa
mov
cmpsb
xchg
dec
mov
mov
call
jae
std
out
mov
jbe
push
sar
push
pop
test
scas
mov
inc
jl
jge
push
ds
leave
mov
add
mov
cmpl
scas
mov
pop
cld
decl
sahf
xlat
mov
arpl
rclb
aaa
into
and
xchg
dec
es
dec
push
jp
xchg
decb
xchg
clc
out
cmpb
divl
fwait
movsl
inc
dec
mov
mov
mov
pop
in
mov
and
or
insb
enter
add
inc
not
jg
out
nop
fdivp
sahf
imul
jg
into
repnz
and
iret
sbb
inc
push
fldt
lea
cmpsl
mov
sbb
jo
ficomps
push
nop
int3
ljmp
mov
sub
mov
mov
and
mov
out
ffreep
xchg
loopne
xorl
jbe
inc
in
dec
fsub
mov
mov
je
add
test
dec
fwait
roll
into
outsb
jp
push
jl
js
fcomps
outsb
jmp
hlt
sub
lahf
les
dec
mov
daa
or
mov
inc
inc
jmp
shll
push
cmp
inc
aas
cmp
xchg
push
fldl
lock
mov
movsb
push
inc
outsl
inc
loopne
inc
add
or
fidivs
outsb
mov
mov
jne
popa
mov
sbb
jmp
lock
inc
in
int
fildll
push
insl
jno
loope
push
clc
ret
in
mov
in
lcall
and
cmpsb
outsb
jno
das
call
fdiv
mov
or
aam
cmpsb
ljmp
cld
call
std
nop
cwtl
cmc
cmpsb
mov
xor
frstor
rolb
inc
sti
fistps
dec
out
mov
mov
ds
into
jmp
mov
sahf
xor
mov
outsb
ffree
mov
mov
int
outsb
fwait
int
fwait
ret
es
loop
cltd
mov
idiv
nop
adc
mov
adc
mov
mov
push
fisubs
shl
mov
push
clc
loop
lahf
xchg
lea
ds
out
cmp
lds
xchg
add
pshufw
mov
mov
dec
les
or
int
xchg
int
out
clc
push
fyl2xp1
lods
sahf
sti
mov
mov
scas
clc
insb
mov
or
mov
in
ljmp
jg
les
xchg
fwait
mov
in
mov
in
mov
int
fdivrp
aad
test
cmp
mov
xchg
out
sbb
mov
jge
test
mov
add
xor
rcrl
shl
mov
icebp
jg
and
pusha
mov
jecxz
mov
push
adc
cld
movsl
incl
clc
lcall
ja
mov
pusha
enter
cmp
pop
movsb
mov
fwait
aas
std
das
cli
jg
mov
sbb
adc
sbb
movsb
out
gs
popa
sbb
clc
enter
test
mov
loopne
mov
inc
iret
mov
nop
stos
mov
sbb
stc
mov
fcoms
mov
aaa
dec
js
jle
cmc
std
dec
jg
xchg
loope
frstor
mov
mov
nop
popa
scas
insl
ret
or
rcl
in
je
or
sar
lock
xchg
lcall
xchg
int3
mov
fisubs
hlt
test
sbbl
pusha
loopne
mov
cltd
int3
xchg
jle
xchg
push
adc
cs
jg
xchg
xor
out
or
adc
aas
mov
test
push
pop
mov
loop
mov
xchg
cmp
push
roll
int3
mov
jnp
mov
mov
mov
das
mov
cwtl
mov
test
sti
scas
lock
sarb
xor
jp
inc
mov
mov
repz
jno
push
sti
loopne
test
outsl
push
je
roll
int3
jle
inc
movsl
mov
mov
xchg
gs
and
cmpb
loopne
mov
lcall
loop
xor
arpl
test
mov
lret
sub
mov
lods
xchg
out
mov
mov
ljmp
dec
mov
dec
frndint
dec
in
push
movsb
ffreep
push
xchg
data16
fsub
hlt
push
sahf
ljmp
mov
imul
out
ja
stos
int
push
loopne
cld
pop
es
sahf
rorl
xorb
incl
or
es
sbb
movups
stos
xchg
xchg
mov
cld
decl
jns
insb
popf
push
inc
in
mov
out
pushf
mov
out
test
outsl
jp
sbb
inc
lcall
inc
push
xchg
cmp
cmp
aam
lods
scas
into
loop
fwait
or
jno,pn
ljmp
adc
in
ret
dec
push
push
pop
or
mov
fdivr
lcall
lret
scas
mov
outsb
leave
push
sbb
hlt
lods
xchg
add
xchg
iret
lock
sar
mov
cltd
popa
rolb
test
jns
faddp
jg
ds
jns
or
cmpsb
fstps
dec
fcomp
movb
fsubs
ljmp
andb
xchg
loope
jle
mov
ja
sbb
lods
mov
mov
repz
jp
cmp
ljmp
ret
jmp
enter
ret
xchg
add
aaa
das
out
fsts
rclb
cs
dec
in
mov
into
aaa
and
incl
cmp
aad
mov
fucomi
mov
test
pop
sahf
mov
popf
mov
sub
out
out
push
sub
stc
mov
mov
lods
adc
cld
add
test
divl
dec
rolb
dec
cmp
into
test
sbb
imul
decl
push
push
sbb
mov
mov
pop
inc
xchg
xchg
xchg
je
push
xchg
mov
lods
stc
sbb
leave
call
iret
cmpl
movsl
sahf
ret
jnp
mov
adcl
mov
or
sub
incl
jne
inc
ficompl
mov
test
mov
mov
xchg
ljmp
cmp
xlat
roll
ss
test
jmp
or
adc
movsl
pop
pop
dec
jno
data16
adc
incl
insb
dec
push
jp
imul
outsb
jne
inc
imul
js
pop
mov
pop
pushl
jmp
ja
and
xchg
or
mov
dec
test
xor
mov
lods
jne
es
xor
mov
out
addr16
decl
dec
aaa
pop
int
out
js
mov
addr16
ljmp
sahf
packuswb
xchg
cs
jb
jle
jl
sbb
test
or
adc
sub
je
outsb
add
pusha
and
push
or
hlt
cmp
jl
mov
loopne
outsl
out
out
sbb
xor
pop
xchg
pop
je
xor
and
lcall
cs
pop
push
xchg
adc
clts
inc
lcall
jns
shll
call
mov
xchg
and
dec
inc
mov
ja
xchg
jno
pop
push
cs
lcall
mov
cmp
outsb
mov
add
add
mov
mov
mov
xchg
das
fs
ja
push
insl
mov
cmp
test
add
mov
shrd
add
dec
mov
scas
adc
adc
decl
sbb
add
negb
dec
insb
popa
push
jne
jg
out
out
bound
js
not
outsb
jns
adc
sub
xchg
bswap
fisubrs
cld
xor
sahf
shrl
clc
call
lods
dec
dec
push
add
adc
lea
aaa
mov
inc
dec
ficoms
cwtl
pop
cmp
cli
cld
ljmp
mov
test
arpl
setp
jbe
sbb
mov
mov
incb
ds
adc
lods
push
pop
sub
sbb
pop
mov
aas
in
jge
xchg
insl
in
xchg
mov
and
push
test
dec
inc
xor
call
add
pop
mov
mov
pop
mov
loop
and
mov
loope
int
and
adc
mov
adc
mov
inc
filds
iret
adc
cltd
cmp
lds
lret
cmp
out
aam
add
scas
push
fs
push
sbb
ds
outsl
cli
jg
jmp
inc
add
sbb
out
add
scas
dec
lock
mov
fildll
push
cmpsl
fs
cmp
cltd
push
cmc
aaa
in
ret
aam
pop
leave
mov
cs
out
push
add
cmp
int
nop
jnp
testb
fwait
add
icebp
pop
cmc
lcall
decb
ror
dec
test
xor
cmp
lea
push
mov
mov
sub
pop
mov
js
mov
mov
jae
pushf
popa
outsl
mov
push
fdivrs
out
cmpb
fwait
stos
xor
cmpsb
push
mov
int
out
push
jg
mov
xchg
cltd
pop
or
pop
jg
aaa
stos
mov
andb
test
pop
jl
inc
bound
jg
mov
mov
aam
arpl
sub
mov
cs
mov
jae
sub
mov
popa
mov
in
xorl
or
movb
mov
adc
fidivs
mov
lcall
sbb
lahf
push
jp,pn
ss
pop
jle
and
sahf
ret
out
data16
call
mov
or
ficompl
ljmp
cmpsb
nop
xchg
xchg
sarb
cli
cmp
mov
cwtl
rolb
pop
in
dec
dec
out
in
push
cld
decl
pop
inc
pop
and
mov
mov
into
mov
gs
cmp
imul
sbb
mov
mov
dec
adc
nop
bound
sbb
lock
mov
add
push
dec
push
xor
mov
pusha
insb
jo
pop
inc
addb
and
xor
sti
ss
or
cld
or
ljmp
add
std
mov
pop
sbb
adc
mov
inc
pusha
movsb
cmp
jnp
sbb
popf
and
cs
call
xchg
scas
adc
insb
gs
jo
jb
in
bound
mov
jg
clc
sub
add
dec
int
fldcw
out
jmp
sbb
mov
inc
scas
jb
insb
cmp
outsl
ds
scas
push
je
inc
mov
add
sbb
xchg
xchg
dec
xchg
push
sahf
fucomip
sbb
js
sub
pop
xchg
outsl
push
pop
imull
push
pop
mov
push
jp
sar
inc
rcrb
adc
inc
loop
lcall
dec
lcall
push
or
orb
aad
lcall
mov
pop
hlt
ljmp
cmp
xchg
jmp
jl
dec
out
mov
dec
sarb
fldenv
mov
test
and
and
lret
ds
push
and
adc
ret
push
in
insb
sbb
jo
push
test
push
ret
aas
xchg
sub
xor
adc
repz
jle
rol
mov
loope
jmp
jg
mov
xor
and
cmp
nop
aaa
lods
insb
ret
xor
mov
cli
test
popa
movsb
inc
cs
mov
aaa
add
inc
cmp
pop
mull
xchg
outsb
sbb
clc
pop
or
imul
mov
js
insb
out
mov
ret
mov
xor
arpl
adc
mov
cmp
and
scas
out
mov
cmp
ret
std
mov
in
or
shrl
add
rcrb
inc
mov
cmp
fmull
call
loope
cmp
test
push
push
daa
lock
and
adc
ret
rclb
mov
mov
icebp
ds
mov
cmp
xchg
scas
jg
jae
in
jmp
push
pop
test
jle
mov
sahf
xor
out
cs
movsl
push
add
jns
rcrb
mov
imul
inc
aam
pop
xchg
sub
cmc
jnp
or
stos
cli
lahf
adc
scas
in
mov
sbb
mov
pop
dec
icebp
cmp
sub
push
pop
jne
shll
mov
mov
repnz
imul
add
xchg
mov
sbb
jg
dec
dec
mov
insb
arpl
sub
cmp
adc
nop
mov
int3
mov
sbb
pop
cmc
mov
mov
es
das
jns
clc
aas
cmp
and
mov
xor
or
daa
outsl
cmp
jae
mov
aaa
inc
clc
call
pop
add
pop
cmovge
sbb
sahf
cmovne
andb
call
mov
cmp
inc
imul
push
pop
ljmp
fisubs
test
cmpsb
dec
popa
sub
ljmp
push
decl
std
pushl
xchg
aas
lcall
push
sbb
mov
cltd
pop
mov
ljmp
xchg
mov
imul
or
pop
push
and
adc
stos
dec
push
out
mov
es
jle
dec
mov
add
mov
or
sub
ret
cltd
lods
cmp
jl
daa
push
nop
add
cs
mov
mov
mov
sub
push
add
lcall
cwtl
mov
mov
ljmp
jnp
inc
inc
in
imul
mov
outsb
jne
pop
jo
dec
inc
icebp
fwait
mov
pop
jb
jg
outsb
pop
je
arpl
ficoms
mov
push
jg
fimuls
sbb
jge
hlt
test
gs
fdivp
pushl
in
xor
inc
test
ret
push
ret
pushl
dec
cli
punpckhwd
stos
nop
cmp
mov
add
push
inc
pand
jbe
cmpsb
mov
inc
clc
xchg
add
into
add
jg
lahf
sahf
pop
or
mov
test
sbb
add
jp
sub
call
pop
push
outsl
arpl
cmp
lcall
ja
das
mov
arpl
fwait
lea
sahf
pop
sbb
fildll
decl
lret
jge
lahf
sahf
jne
sub
cmp
xor
add
push
jmp
adcl
or
jo
jbe
insl
stc
and
je
xchg
cmp
mov
cltd
int3
mov
lods
mov
push
mov
movsb
jg
add
xlat
or
test
pop
cmp
lcall
lcall
pop
adc
pushf
popf
jmp
mov
sbb
adc
movq
mov
cmp
xchg
add
cmp
fwait
push
mov
dec
mov
push
cli
stos
imul
aam
call
jle
jnp
jle
pop
call
jno
je
cmc
lcall
aaa
sub
adc
in
and
dec
mov
add
fwait
dec
cld
lcall
outsb
and
das
imul
out
and
inc
jno
pop
mov
jecxz
dec
outsb
xorl
imul
push
mov
jg
cmp
je
out
xchg
addr16
out
add
scas
mov
adc
cmpsb
push
test
rcrb
push
out
inc
pop
ret
gs
mov
xor
xor
es
dec
push
daa
test
call
andb
pop
out
or
sub
lcall
pop
push
incb
jbe
int
dec
int3
jl,pt
mov
arpl
pushl
push
pop
adc
pop
and
insl
jmp
ds
jp
or
inc
je
jge
insb
ret
es
outsb
cmpsl
sbb
sbb
xchg
push
jmp
decb
xor
jbe
movsl
add
jg
mov
mov
jl
pop
jmp
dec
jl
popa
fsubrs
outsl
movl
add
mov
xacquire
fs
jmp
shll
push
out
xor
sub
and
push
xor
pop
cmc
xor
addb
daa
mov
jl
mov
jp
sub
xchg
mov
or
mov
insb
loop
jle
mov
dec
mov
stos
jnp
sub
dec
sub
push
cmpsl
popa
dec
push
push
jmp
mov
and
inc
push
stos
sti
push
test
add
fwait
je
xor
dec
add
or
pop
loopne
lea
xor
lea
and
cmp
jb
pop
and
imul
push
pop
call
lock
mov
add
inc
dec
jno
cs
jg
scas
adc
push
lcall
jp
push
pop
sbb
jo
adc
xor
pushl
mov
dec
xor
jmp
shll
pop
imul
jae
loopne
pop
cli
or
pop
rcl
dec
cli
stos
imul
push
out
stos
inc
ds
and
push
and
data16
cli
mov
insb
sbb
cmp
icebp
mov
cmp
fistpl
mov
mov
xchg
jne
popa
lret
xor
decl
aas
or
andl
mov
aaa
js
or
insb
hlt
decl
fcoms
enter
cmp
dec
pushf
mov
cs
and
push
test
inc
lods
dec
fbld
sahf
mov
sbb
fdivl
push
or
mov
or
mov
add
scas
pop
jle
xor
push
xchg
cmpsl
adc
pop
push
cmc
pop
push
and
xor
decl
lcall
cld
or
test
shrb
outsb
decb
push
cmp
rclb
mov
leave
into
stos
xor
adc
and
das
sahf
mov
dec
nop
adc
mov
mov
pop
add
mov
lcall
pop
insl
icebp
jg
or
jl
jnp
push
iret
orl
outsl
mov
mulb
dec
sub
loopne
pop
cmpsb
cmp
call
mov
push
xor
fwait
push
nop
pop
add
jl
sub
stos
lcall
sti
inc
jl
lods
sbb
jo
pop
aas
popa
xor
xchg
add
mov
pop
mov
mov
and
sbb
popa
iret
in
arpl
adc
mov
adc
jg
mov
adc
xchg
ret
sbb
incl
outsl
rorb
sbb
or
push
sub
fmuls
mov
mov
sbb
aas
xchg
ds
cmp
mov
cld
bound
arpl
push
mov
add
xchg
sbb
mov
inc
hlt
fwait
decb
outsb
loopne
xchg
dec
lods
xor
pusha
and
mov
adc
ror
add
inc
mov
lock
mov
jae
pushf
cmpsl
fcmove
adc
sahf
mov
es
loopne
jl
push
jae
addr16
call
push
clc
mov
sbb
incl
xchg
push
add
push
addr16
jg
lea
scas
mov
mov
xchg
cmp
and
xchg
add
add
addr16
mov
dec
je
mov
cltd
xor
fwait
test
fwait
out
test
push
ret
add
lcall
cmpsl
mov
inc
jae
lahf
loope
jg
test
xorb
mov
movsb
push
out
scas
aaa
xchg
imul
adc
push
jne
push
imul
or
insb
scas
sub
mov
cmp
cmp
outsl
mov
pop
sub
push
and
push
xor
xchg
movb
mov
lcall
das
and
sbb
test
popf
gs
push
push
mov
lods
hlt
test
cld
pushl
dec
std
and
and
jno
cmp
mov
bound
call
lcall
ljmp
in
and
adc
lahf
adc
fcomip
clc
and
adc
shll
push
out
loope
decl
pop
ret
ja
pop
leave
or
adc
xchg
push
fildll
jne
mov
mov
adc
mov
imulb
xacquire
fmuls
lcall
dec
xor
xchg
or
mov
sbb
mov
lock
out
test
cmp
sbb
xor
leave
sbb
scas
add
pop
xchg
scas
adc
push
popa
insl
mov
jb
ret
subb
cltd
sub
cmp
dec
push
or
mov
pop
pop
mov
mov
icebp
cmp
lods
loope
sbb
jne
inc
adc
cs
cwtl
mov
popf
mov
cli
pop
bound
jle
sti
inc
into
aaa
orb
cmpsl
sub
lcall
dec
sahf
mov
out
mov
inc
push
loope
push
add
dec
cltd
lock
aam
xor
push
push
cmp
and
xor
inc
outsb
popa
dec
jge
pop
pop
sbb
jns
jno
mov
lods
and
ds
call
std
mov
lea
xchg
mov
je
lea
sub
xchg
incb
jns
mov
dec
or
sub
push
push
push
sub
sub
add
jmp
mov
mov
sbbb
xchg
jo
ds
sbb
jno
or
decl
popa
mov
sbb
aas
scas
add
jg
test
and
jnp
xchg
out
test
out
clc
or
push
xor
jp
xlat
or
cmp
lea
incl
sub
dec
add
popa
or
aaa
std
sbb
lret
add
xchg
mov
mov
outsb
mov
mov
xchg
icebp
or
or
cmpsl
mov
mov
into
mov
and
pop
sbb
cmc
or
sti
test
adc
jbe
xchg
imul
jns
fidivs
sub
add
loope
xchg
rorb
pop
sub
aad
stc
sub
call
clc
and
fwait
es
out
daa
dec
clc
sbbb
fistpl
incl
push
push
insl
outsb
sti
mov
mov
sub
outsl
dec
xchg
cmp
mov
gs
sub
jmp
mov
mov
mov
dec
pop
inc
jp
push
dec
and
jnp
int3
ljmp
loopne
pop
stos
test
es
push
sbb
mov
in
sub
outsb
ljmp
mov
sbb
ja
mov
mov
gs
cmp
mov
add
or
xchg
aad
lcall
xor
lcall
jg
cmpsb
or
cmpsb
mov
dec
or
sbb
add
in
lea
sahf
in
js
mov
fst
mov
into
sbb
jns,pn
imul
and
pop
or
inc
lea
mov
xor
xor
pop
dec
push
jns
ret
mov
jb
mov
lret
dec
test
sub
pop
xor
insb
arpl
or
imul
lea
xchg
jg
mov
inc
loop
and
push
int3
stos
data16
pushl
stos
and
cmp
iret
and
or
and
or
fimuls
cmp
pop
out
dec
sti
pop
and
push
bound
sbb
cmpsl
mov
inc
mov
xlat
sub
and
push
mov
xor
call
imul
cmp
mov
pusha
scas
nop
mov
and
clc
sbb
lahf
jmp
fs
add
inc
jge
test
or
das
inc
clc
stos
icebp
sub
and
push
xchg
add
shr
mov
aas
inc
ret
movsl
dec
js
add
sub
shlb
mov
andl
icebp
cmpsl
popa
rolb
mov
dec
scas
les
mov
mov
add
out
and
daa
pushf
shlb
adc
adc
iret
push
mov
xor
fisttps
mov
ret
sub
fstpt
shlb
and
sbb
mov
decl
popa
cld
stc
jbe
cmc
inc
jg
sbb
daa
orb
loop
test
mov
adc
lods
jle
les
jb
xor
adc
movsl
add
xchg
add
fwait
das
cltd
test
and
mov
sub
cwtl
mov
sbb
fidivrs
push
inc
imul
call
push
dec
adc
xchg
mov
cli
popf
push
mov
cmpsb
mov
pop
push
xor
cltd
add
lock
nop
fidivrs
xchg
outsl
ss
or
jge
add
xchg
cld
shll
ficomps
push
sub
jp
sbb
jnp
add
sahf
sbb
lock
xchg
sub
out
mov
fidivs
int3
sbb
pop
xor
xchg
mov
cwtl
and
clc
test
xor
adc
pop
inc
out
push
dec
js
mov
jo
sbb
stos
pop
xchg
sbb
xchg
fsts
hlt
mov
jnp
hlt
sahf
pop
lds
push
cld
ljmp
decl
pop
daa
xor
or
lods
cmp
xchg
pop
mov
cmp
xor
xor
xchg
mov
subl
cmpsb
pushf
daa
jno
or
mov
mov
xor
or
pop
mov
jae
mov
cmp
inc
aas
pop
mov
mov
sub
pop
les
arpl
cmp
xchg
mov
push
nop
decl
loop
imul
subb
push
sahf
mov
bound
insb
inc
insl
mov
push
push
out
insb
pop
jnp
push
mov
jne
and
sbb
mov
clc
lcall
mov
int3
jb
fisttpll
dec
inc
mov
cmpsb
mov
test
loop
push
sbb
mov
jae
cmpb
std
jg
das
fisubrs
sbb
fwait
out
pop
insb
jmp
mov
test
mov
ja
jg
inc
mov
je
shlb
jne
jle
xchg
lods
push
movsb
mov
rcll
inc
loopne
jmp
mov
mov
and
sub
lcall
add
aas
add
adc
aas
stc
arpl
movsl
outsl
enter
inc
mov
test
or
add
pushl
test
stos
jbe
mov
jb
loope
bound
mov
std
mov
arpl
inc
or
incl
dec
cmove
push
sbb
gs
push
cld
pop
arpl
mov
or
cmp
dec
in
mov
cmpsb
cwtl
lcall
call
xor
xchg
add
jmp
hlt
call
adc
and
fisubrs
xchg
test
jle
in
aaa
inc
cmp
and
pop
sbb
pop
mov
pop
mov
dec
leave
imul
jb
test
jmp
sbb
pop
divps
out
das
xchg
xchg
fs
decb
hlt
cmpsb
and
incl
adc
out
imul
mov
in
popf
inc
push
ljmp
add
popa
jo
aaa
and
and
sub
cmp
out
adc
and
in
jae
mov
fs
pop
xchg
xchg
push
inc
push
jmp
add
lcall
data16
inc
popa
and
push
xor
xor
scas
js
cmc
gs
adc
pop
inc
out
jl
cmpsb
js
jmp
xchg
add
sbb
cmp
mov
and
pop
dec
call
aas
in
imul
xor
repz
fwait
mov
cmpsb
jns
addr16
incl
jle
sub
cmp
jb
pop
xchg
and
lcall
popa
push
inc
pop
cmp
pop
jnp
lods
sbb
inc
mov
xchg
pop
sbb
mov
add
pop
aas
cld
mov
adc
jbe
push
cmpsb
ds
daa
jge
inc
and
push
ja
movsl
and
and
fimull
cwtl
jg
adc
and
fs
jmp
iret
push
mov
rcr
push
ret
pushl
push
outsb
add
imul
or
push
lods
pop
dec
adc
ljmp
or
sub
xchg
push
popf
fdivp
mov
and
pop
adc
sub
loope
ficomps
push
sub
cmp
add
jmp
lods
ja
ja
in
add
mov
sahf
mov
jg
dec
pop
push
or
ret
test
cltd
mov
std
outsl
scas
pusha
test
ss
fldt
cmpsb
cmp
insb
mov
dec
xchg
pop
scas
add
aas
sbb
sarb
clc
into
fwait
in
jg
push
test
js
loopne
fwait
mov
pushl
xor
sbb
push
mov
xchg
push
incl
dec
mov
paddusw
inc
int
insb
addr16
inc
outsb
insl
shrl
mov
push
or
andl
das
xchg
and
fwait
push
scas
cmpsb
or
aad
popf
adc
push
rcrl
jo
loope
jnp
sub
sbb
cmp
mov
inc
je
inc
jb
cmpsb
hlt
pop
pusha
enter
int3
and
lcall
push
loope
mov
dec
mov
in
scas
cmp
cmp
pop
push
je
cmc
test
pop
aad
jl
sub
js
lds
faddp
pop
sbbl
push
bound
pop
push
pop
clc
lods
ljmp
inc
clc
mov
mov
mov
jno
or
call
cmpb
stc
scas
sbb
mov
insb
roll
popa
in
lret
inc
and
shlb
arpl
sbb
mov
push
sbb
sbb
push
cmpsb
cmpsb
nop
and
xchg
ljmp
in
mov
jl
adc
pop
rcrb
mov
add
or
jmp
out
movsl
mov
int3
cmovbe
sub
popa
fsubrs
loopne
adc
mov
scas
and
addb
clc
add
fwait
pop
outsb
sbb
push
dec
fisubl
mov
scas
xor
and
incl
decb
das
addr16
push
pop
lcall
pop
sub
cmpsl
rclb
xchg
mov
ja
mov
xchg
aas
cmp
test
lcall
out
and
out
enter
adc
push
pop
push
sti
sbb
loope
pop
mov
jns
cld
negb
aas
push
inc
pop
std
push
push
jl
cs
cmpl
push
call
adc
and
in
into
cmp
xor
and
ret
ret
pop
int
loope
popa
mov
out
fs
xor
imul
ds
scas
cli
fcmovnb
outsb
out
push
jp
daa
mov
and
ljmp
mov
adc
test
push
sbb
jp
sub
cmpsb
fs
call
fidivrs
enter
and
les
rorl
shlb
pusha
pusha
add
test
sbbb
jg
pop
sti
daa
push
lcall
and
lcall
sub
pop
fs
sahf
or
push
xchg
pop
xchg
clc
and
loop
jg,pn
dec
lret
adc
mov
inc
rcrb
jne
adc
pop
adc
call
jbe
test
bound
push
add
push
xor
incl
mov
out
nop
gs
adc
jg
dec
fidivs
test
pop
and
fwait
jnp
pop
dec
xor
jecxz
jg
jo
sub
xor
lcall
pop
mov
leave
cli
sub
decl
jle
push
jns
xor
js
ljmp
add
scas
jp
push
in
lods
dec
ljmp
push
fmull
out
stos
pusha
jecxz
and
mov
ja
sub
ja
int
lods
jbe
stos
addr16
fidivl
dec
ds
add
or
incl
test
jbe
sub
mov
popa
push
arpl
rcll
jns
inc
lods
or
mov
filds
pop
sbb
pop
cmp
sub
inc
cmp
mov
dec
push
into
mov
out
mov
sbb
mov
bound
sbb
push
call
cmp
adc
repz
jg
mov
cmp
dec
xacquire
inc
add
pop
lret
cltd
mov
pushl
js
adc
dec
sahf
ja
mov
mov
mov
mov
ja
inc
adc
scas
ss
dec
jns
adc
fidivrs
pushl
dec
ds
sub
les
inc
push
fisubrl
inc
aam
jb
aas
data16
xor
mov
or
sbb
push
scas
loopne
popf
cli
jno
sahf
ret
sarb
push
sub
and
add
les
cmp
cmp
inc
adc
xchg
pop
out
aam
cs
adc
inc
mov
push
adc
or
adc
mov
outsl
sbb
aam
insl
mov
ljmp
loop
and
sbb
daa
lahf
int3
sub
decl
or
leave
or
cli
sbb
xchg
jns
adc
scas
fbstp
sbb
sbb
mov
push
add
cs
into
cmp
mov
push
jmp
mov
dec
pop
xchg
xor
dec
jle
or
out
pop
and
arpl
lods
mov
call
out
out
cmpl
xchg
dec
jno
lods
loop
mov
sbb
pusha
cli
mov
outsl
xor
nop
rcr
mov
decl
daa
imul
cmp
cmp
mov
lret
movsb
mov
filds
xchg
sahf
in
rcrb
rclb
ret
adc
rcrl
mov
mov
xchg
out
pop
shr
push
adc
ja
and
jmp
mov
mov
jecxz
ds
in
and
mov
jo
add
testb
out
dec
imul
repz
ljmp
test
add
lock
lods
cmpsb
xchg
in
mov
mov
and
pushf
mov
aam
lods
add
jle
inc
jecxz
jnp
ds
in
fbld
add
out
jge
push
push
ror
mov
jns
or
mov
and
aad
ret
xor
push
jp
jecxz
into
int
test
mov
fwait
push
xchg
add
fildl
lods
pop
cmp
in
aad
push
lahf
sub
lds
cmp
fs
insl
mov
mov
mov
fstps
rorb
rolb
pop
loopne
pushl
push
jmp
add
test
inc
push
je
push
loope
ljmp
out
pop
mov
dec
pop
push
dec
adc
jo
xchg
bound
insb
loope
push
push
xor
and
and
mov
imul
adc
std
ret
clc
dec
xor
or
or
ds
mov
push
gs
popa
clc
repz
das
dec
jl
push
add
mov
in
or
fs
out
or
xor
mov
jecxz
and
fs
dec
push
mov
lcall
mov
outsb
or
mov
bound
icebp
mov
ret
rcll
add
mov
sbb
mov
icebp
loop
incl
pusha
das
jg
sbbl
pop
mov
scas
cli
or
js
je
movsl
mov
ljmp
dec
add
pop
test
es
out
add
cwtl
subl
pop
into
cmc
jae
insb
pop
pop
push
sub
jecxz
insl
ficoml
fs
inc
in
daa
vminss
cli
mov
movsb
cmp
add
testb
pushl
mov
mov
mov
mov
aaa
fimull
jnp
add
dec
mov
inc
idiv
lcall
int3
cmp
mov
loop
sbb
in
push
subb
push
leave
clc
sbb
out
jle
pop
jp
pop
les
xor
xchg
adc
cmpsl
xor
and
ja
cli
jle
insl
je
push
inc
xchg
inc
insb
jle
dec
dec
pushl
push
add
imul
sahf
out
push
scas
inc
fisttps
pop
aad
jb,pt
inc
out
cli
adc
push
mov
jbe
gs
jg
fs
sub
adc
cltd
add
mov
rorl
orb
jp
test
decl
mov
jnp
and
add
sub
incl
inc
imul
mov
mov
scas
sbb
pop
lock
mov
jae
lea
and
jg
mov
inc
test
xchg
push
pop
test
out
test
ja
daa
int
or
add
inc
lcall
jle
xchg
mov
push
add
ljmp
inc
cli
imul
push
test
xor
cmp
leave
outsb
popa
mov
mov
sti
nop
popf
out
pop
cmp
mov
popa
mov
push
cli
push
inc
add
xor
std
sbb
jb
movsl
pop
or
cli
pop
jbe
and
out
push
test
add
mov
mov
jge
and
or
subb
pop
and
out
es
in
push
call
mov
ss
mov
rcrw
mov
add
decl
sahf
test
sbb
outsb
jno
inc
je
add
sbb
mov
ret
push
push
dec
ds
jns
dec
lds
out
pop
jg
test
inc
loopne
sbb
mov
aad
in
stos
add
in
mov
push
movsl
ja
push
out
adc
add
loopne
mov
or
lret
int
lret
xchg
ljmp
sarb
cwtl
adc
rorl
xor
cmp
jno
cld
out
pop
out
lcall
jb
pop
decb
inc
cld
call
sbb
mov
mov
test
scas
scas
outsl
pop
fcomip
fisttps
lret
sbb
sub
and
add
mov
cmp
lcall
and
sbb
mov
data16
mov
mov
negl
jmp
rcrb
into
in
mov
jle
ds
ljmp
lock
push
xchg
outsb
fstpl
cmpsl
pop
cmpsl
mov
popf
shll
pop
rorb
dec
or
cld
sbb
loopne
dec
es
mov
jns
lods
xchg
call
dec
jmp
or
daa
rorb
inc
lcall
or
cmp
fdiv
or
sbb
inc
in
sbb
jnp
sarb
mov
mov
push
jmp
imul
add
stos
xor
inc
jl
cmp
lods
sbb
call
dec
mov
outsb
lret
mov
mov
ds
clc
or
mov
mov
pop
cmp
pop
sbb
mov
or
add
adc
push
dec
inc
mov
push
imul
sarl
push
dec
pop
stc
push
inc
les
into
inc
jbe
clc
dec
test
sbb
mov
inc
push
mov
popa
clc
lcall
and
ret
and
pushl
nop
scas
sbb
call
cmp
rorb
sbb
adc
lcall
cmc
xor
and
sahf
les
sub
inc
das
and
incl
movsb
clc
mov
mov
mov
mov
xchg
mov
mov
push
stc
test
mov
mov
pop
inc
cmp
dec
iret
adc
in
or
adc
mov
add
incl
push
mov
mov
xchg
movsl
jne
lds
data16
add
jg
sub
mov
and
scas
push
lods
es
pop
and
and
cmp
cmp
xchg
pop
mov
cmp
mov
adc
popa
fists
rorb
add
xchg
test
mov
pushl
adc
jae
push
or
xchg
sbb
mov
in
or
cs
aas
in
and
cmp
aas
imul
pop
aas
lock
pushf
lcall
mov
push
pusha
cmpsl
mov
popf
scas
jmp
jl
lea
cmp
iret
push
dec
jl
or
add
popf
imul
add
and
out
dec
sbbl
out
jb
test
pushl
test
mov
cli
gs
dec
ja
mov
sbb
movsb
pop
cli
jg
in
test
push
mov
ja
pop
or
mov
sahf
fbstp
insb
aam
adc
pop
inc
in
push
popa
shrb
popf
mov
sbb
sbb
jmp
pop
cmpsl
jne
xchg
mov
sbb
dec
sub
adc
and
int
mov
add
mov
or
test
cmp
test
enter
push
xor
incl
and
mov
sub
dec
jg,pn
mov
xor
pop
fisttps
mov
mov
ss
imul
inc
xchg
xor
scas
xchg
cltd
mov
jg
fisubs
xor
pop
leave
aaa
popf
in
cmp
cmp
inc
cld
jmp
out
lea
iret
add
push
sahf
add
xor
and
ljmp
lea
adc
xor
jmp
push
lahf
out
cmp
insb
in
popf
fs
repz
jmp
cmp
or
cltd
scas
cli
stos
xor
lods
cmp
or
pop
mov
std
jmp
xchg
add
out
data16
ror
mov
inc
rorb
cmp
inc
push
jns
jb
inc
jmp
fwait
mov
dec
fildll
sub
or
andl
push
dec
jne
xchg
sbb
pusha
decb
scas
mov
andb
dec
out
lods
scas
dec
enter
mov
jno
mov
or
dec
push
or
mov
mov
push
pop
or
cmp
mov
adc
pop
repnz
scas
pop
jne
cmp
push
xchg
cmp
inc
fsubrs
mov
push
test
imul
fiadds
mov
loopne
inc
scas
or
mov
outsb
sahf
inc
jge
psubsb
pusha
push
pop
pop
daa
daa
xor
incl
std
popf
test
aam
push
xorl
pusha
les
mov
lcall
inc
les
xor
pop
loop
cmpsb
sub
outsl
fstpt
bound
dec
xchg
sbb
lcall
andl
mov
test
jno
cs
xchg
scas
lahf
or
js
aas
mov
xor
xchg
xchg
mov
pop
fwait
test
and
cmp
call
add
out
sbb
dec
cmp
mov
inc
mov
mov
outsb
subb
imul
imul
mov
add
and
cmp
decl
cmp
rclb
outsb
scas
scas
cltd
fwait
mov
daa
je
jae
xor
mov
mov
xchg
mov
daa
shlb
mov
pushf
mov
out
mov
cmpsl
pop
movsb
jb
incl
loope
mov
cltd
inc
scas
mov
dec
insl
in
push
push
jo
dec
fistpl
outsl
and
dec
outsl
jae
jle
mov
add
adc
das
mov
call
cmp
mov
add
lea
push
inc
and
xchg
and
movsl
sbb
clc
xor
xchg
xor
mov
dec
sar
and
mov
adc
ds
jg
cwtl
test
lcall
outsb
jle
push
xor
sub
inc
push
nop
or
je
test
jg
decl
xor
mov
and
push
jl
jle
call
sub
cli
fistl
push
jle
jp
lahf
jb
push
lcall
in
pop
sahf
adc
xorb
loope
and
test
xchg
outsl
mov
outsl
add
in
dec
cmp
mov
inc
daa
dec
dec
inc
or
jns
movsl
inc
mov
in
js
lods
jne
xor
scas
push
adc
mov
inc
sbb
lahf
jle
ds
mov
mov
mov
sbb
push
cltd
mov
ljmp
sub
inc
scas
aas
fnstcw
inc
out
out
adcb
outsb
cmp
scas
fnstenv
decl
fisubrs
les
and
cli
jnp
mov
mov
decl
fldl
jo
lods
movsl
push
xor
cltd
and
cmp
lcall
push
xchg
subl
cwtl
mov
pusha
push
push
mov
int
mov
xchg
dec
ret
cmp
xchg
scas
mov
mov
into
popa
push
push
fidivrs
mov
sub
ljmp
je
push
cmp
stos
dec
mov
mov
dec
or
ds
push
pop
fistpll
cmpb
push
lcall
pop
icebp
ljmp
add
jp
es
out
cli
call
stc
jle
mov
mov
cltd
jmp
pusha
ret
pop
out
lcall
sbb
jp
xchg
icebp
push
test
movsl
xchg
test
adc
cmpsb
mov
xchg
nop
push
aas
or
mov
xor
mov
leave
incb
scas
bound
out
pop
jb
mov
iret
jecxz
dec
jl
nop
cmp
mov
les
lds
das
dec
rcrb
sar
push
adc
add
mov
pop
pushf
push
cs
mov
je
outsl
jecxz
add
dec
sbb
cmp
call
clc
out
inc
inc
gs
loopne
outsl
int
jno,pt
loopne
add
push
push
cltd
clc
jmp
mov
and
outsl
xchg
pusha
and
xor
cmp
imull
cli
imul
in
cmp
je
jg
cs
nop
aas
mov
and
sub
xor
and
ljmp
mov
imul
test
mov
adc
cwtl
pop
lods
imul
fs
mov
sar
jg
out
sahf
aas
mov
je
mov
js
or
rcll
hlt
and
std
mov
inc
mov
push
dec
xchg
test
test
fwait
mov
mov
cmpsb
fiadds
stos
pushl
sbb
out
shl
inc
jno
inc
dec
jne
int
stos
pusha
sti
call
sbb
add
mov
push
push
das
xchg
lds
and
mov
out
clc
jg
pushf
or
adc
mov
lea
push
dec
and
jg
out
fistpl
pop
stos
sub
rcrb
aaa
dec
scas
sub
jne
dec
rorb
incl
push
mov
ret
pop
loopne
jae
xchg
test
pusha
cmc
sbbl
jmp
test
aad
loop
aad
dec
mov
cwtl
pop
dec
dec
scas
in
das
int3
movsl
lds
out
jl
outsl
and
movsb
push
les
ja
outsl
add
push
lcall
bswap
xorl
cmc
lcall
out
dec
mov
ljmp
shr
pop
imul
mov
loop
sub
push
loope
dec
jne
aam
adc
cmp
xor
fildll
popl
mov
mov
rolb
inc
cld
aaa
jne
push
pusha
mov
out
jmp
mov
sbb
fildll
add
stc
sub
add
and
cmp
out
inc
data16
ds
stos
mov
pop
loopne
mov
sub
icebp
insl
pop
mov
xchg
sbb
cmpsl
add
scas
in
mov
push
fisttpl
popa
mov
and
test
sar
mov
mov
arpl
jne
pop
arpl
push
push
sahf
dec
or
ljmp
inc
cli
pop
xchg
lea
mov
cmp
pop
stos
mov
fistl
xchg
jl
test
dec
in
xor
or
popa
mov
pusha
dec
and
jge
ret
xchg
sub
xor
dec
xchg
mov
imul
out
jnp
cmp
decl
jecxz
pop
lods
jle
je
lods
and
mov
push
out
pusha
popa
fildll
ljmp
bound
or
seto
mov
inc
pop
hlt
cmp
es
out
push
dec
stos
sbbb
mov
adc
sbb
push
into
les
inc
xchg
cs
xor
js
subl
add
mov
scas
adc
xchg
es
dec
inc
add
scas
add
fildll
mov
push
sub
fisttpl
ljmp
test
ss
mov
mov
test
xchg
sarb
lods
and
aas
ljmp
cli
pop
push
lcall
and
mov
jmp
ja
sbb
fsubrs
outsl
call
sub
cmp
cld
iret
pushf
push
jl
cmpsl
push
fiaddl
jmp
in
pop
mov
jb
daa
ja
mov
jbe
sub
mov
fisttps
and
je
loopne
ret
inc
cmp
cmp
ret
cmp
mov
decl
pushf
dec
cmp
dec
add
or
fisttps
xchg
sbb
sbb
loopne
mov
lcall
leave
dec
add
push
cs
call
sub
insl
out
and
xchg
xor
push
cmp
sub
mov
je
or
push
ljmp
inc
and
dec
mov
popf
add
popf
mov
jmp
mov
jb
xchg
inc
fisubl
lods
cmp
jg
add
lea
dec
dec
sbbb
mov
insl
enter
xchg
xchg
cltd
les
data16
int3
dec
and
lcall
fwait
pop
jmp
mov
pop
dec
filds
add
dec
push
fsubrs
int
dec
jno
and
outsl
cli
ljmp
xor
push
inc
jmp
jp
daa
jle
into
outsb
jge
fldl
dec
in
jmp
dec
insb
pop
push
inc
pop
pop
dec
xor
adc
jmp
jnp
cmp
cmp
out
cmp
lods
fistpll
mov
push
jbe
xchg
test
into
sub
nop
pop
mov
mov
adc
push
push
inc
mov
cmpsb
mov
lea
inc
jb
filds
mov
xor
shrl
sbbl
mov
sahf
mov
hlt
xor
mov
mov
ljmp
shrb
out
xchg
cmpsl
imul
ljmp
pop
push
incl
mov
std
xchg
adc
addl
pop
jbe
dec
or
jmp
scas
lahf
mov
mov
nop
mov
ljmp
pushf
stos
mov
push
push
fs
incl
or
inc
clc
lea
mov
xchg
mov
xchg
xchg
xchg
call
test
pop
stos
jo
xchg
sti
mov
scas
scas
sbb
movsl
and
decl
imul
xor
fwait
xor
jle
shrb
sub
cmp
or
push
mov
cmp
inc
jnp
mov
inc
dec
lods
outsb
js
cmp
inc
mov
jle
pusha
dec
clc
pop
push
dec
adc
insl
xchg
xchg
mov
xor
jmp
popf
xor
pop
insb
dec
or
mov
xchg
mov
cld
outsb
jmp
mov
repnz
fdivs
movsl
jge
ljmp
mov
lcall
mov
das
popf
mov
wbinvd
idivb
mov
sub
sub
ret
jg
mov
leave
scas
nop
mov
fisttpll
push
mov
push
mov
xchg
cmpsl
adc
xlat
lods
in
js
jg
test
fadds
push
js
orb
popf
mov
call
lods
dec
ljmp
popf
inc
dec
stos
jns
mov
dec
mov
sbb
pushl
dec
insb
in
push
icebp
sbb
fidivrl
add
dec
ljmp
iret
hlt
stos
lea
inc
imul
xor
adc
jg
add
stos
xchg
add
mov
inc
fimuls
nop
cmp
mov
jmp
aaa
push
dec
xchg
inc
adc
test
fisubrl
dec
push
mov
les
mov
pop
in
cmp
mov
stos
fisubrs
pop
sub
cmpsb
mov
arpl
je
imul
adcb
dec
inc
bound
mov
dec
jb
adcb
mov
arpl
repz
inc
push
les
mov
cmp
into
sub
inc
and
lcall
or
loope
test
outsb
stos
xor
pop
cmpsl
sahf
ds
sbb
lcall
xor
mov
mull
arpl
sbb
ds
push
sub
inc
test
or
mov
mov
jl
repz
aas
and
aas
outsl
iret
xchg
pop
cld
adc
add
outsb
aas
filds
or
loope
data16
or
or
ljmp
movsb
js
add
rorb
movsl
cmpsb
out
sub
sbb
jg
cli
sbb
cs
push
pop
clc
cmp
or
lea
xchg
pop
js
xchg
mov
xchg
cs
and
adc
mov
fistpll
pop
int3
and
add
and
mov
pop
push
or
aaa
mov
xor
iret
cmpsl
pop
xor
cs
cli
ljmp
bound
push
lea
pop
mov
cmc
shr
push
push
inc
fimuls
or
mov
adc
loop
sub
jge
lock
mov
daa
dec
push
mov
push
push
popl
jno
push
dec
aaa
js
cmp
lea
jg
dec
dec
push
outsb
outsb
xor
lods
out
call
mov
imul
jno
arpl
aas
pop
lds
nop
sub
data16
out
or
xor
pop
imul
std
or
mov
mov
adc
adc
test
or
ret
das
movsb
cld
fcomip
pop
rolb
cmp
icebp
adc
sahf
repz
dec
xlat
xor
cli
aaa
dec
roll
test
xor
xor
pop
sub
ret
aas
lahf
pop
xchg
sub
mov
fimuls
clc
sub
std
xor
ret
push
decl
sahf
rorb
bound
push
ljmp
inc
xor
rclb
adc
fcomps
sarl
lahf
and
lea
adc
xlat
subb
and
std
or
or
aad
jp
sub
inc
decb
inc
fldt
imul
xchg
jmp
es
push
dec
orb
push
pop
push
mov
lods
sbb
push
sqrtps
xor
loop
inc
sahf
cmp
stc
jp,pn
xor
xor
inc
xchg
xor
lcall
push
ljmp
pop
outsl
mov
pop
movsb
xchg
jmp
pop
sub
push
push
pop
sub
js
push
leave
xor
fisttps
scas
adc
mov
in
mov
icebp
es
or
fisubrl
jns
sbb
pop
cld
ljmp
mov
cmpl
add
les
jnp
push
inc
into
je
and
icebp
decl
mov
push
int3
add
pavgw
adc
xchg
js
stos
cli
sahf
inc
or
cmp
insl
jmp
test
push
dec
int
inc
in
inc
push
adc
incl
or
cmp
popa
jno
aaa
ja
out
cwtl
cmpsb
les
and
loope
adc
imul
cmp
decl
repnz
repz
sahf
jb
cmpsl
mov
int
cld
push
rclb
in
popf
insb
add
outsb
fucomip
arpl
imul
incl
and
xchg
or
cmp
in
ds
mov
stc
incl
pop
das
bound
fldt
insl
jns,pt
mov
cmp
stc
jmp
lcall
cwtl
and
into
fidivrs
out
rclb
ds
iret
mov
sub
es
xor
xchg
xchg
cli
sbb
mov
sbb
mov
ret
xchg
sub
mov
jmp
xchg
int3
add
mov
pop
xchg
sti
xor
xchg
or
and
sub
mov
loopne
in
cmp
mov
outsb
jmp
cmp
decb
sbbb
mov
add
xchg
mov
push
adc
movl
dec
mov
lcall
cmpsl
lock
or
scas
movlhps
cmp
fnstenv
xor
adc
rclb
jo
adc
cltd
ret
in
dec
fsubl
pop
shl
adc
mov
insl
loop
push
mov
cmp
aas
incl
sbb
adc
adc
pop
clc
pushl
sub
xchg
or
lds
ficoms
in
call
or
jl
xchg
jne
int3
mov
cs
push
inc
push
xorl
mov
outsl
lcall
sahf
mov
out
mov
out
mov
popa
mov
lods
xchg
popf
lods
stc
inc
loope
jge
ficomps
add
ljmp
call
sbb
fiadds
outsb
ljmp
dec
pop
insb
repz
dec
and
in
jo,pt
andb
repz
and
fwait
dec
cmp
adc
les
test
ds
pop
dec
or
mov
ljmp
filds
jbe
push
dec
aaa
mov
mov
gs
adc
out
xchg
outsl
out
packsswb
dec
int
dec
cmp
add
es
test
sbb
icebp
scas
cwtl
xchg
mov
pop
inc
mov
lds
sar
out
dec
cmp
mov
pop
sar
fwait
pop
jl
mov
jmp
xor
cmp
sub
icebp
notl
inc
loope
or
fldt
pushl
fdivl
ds
loopne
lods
mov
cmp
xchg
sbbl
cmpsb
push
sbb
out
mov
call
addr16
jno
xchg
mov
stos
test
or
cwtl
pop
fildll
mov
cwtl
mov
add
jno
imul
sub
into
xor
data16
jnp
movsb
xor
das
ss
add
es
mov
xchg
mov
loope
xchg
mov
ret
dec
sub
add
mov
jg
into
jb
push
ds
mov
cmpsb
mov
nop
xchg
jnp
pop
fstps
clc
xor
cmp
das
fs
ds
shr
sbb
pop
cmp
or
mov
or
pop
inc
adc
ljmp
xchg
imul
mov
push
bnd
fs
inc
sar
push
jp
pop
or
add
push
mov
decl
mov
out
movsl
cmpsl
fs
mov
cwtl
push
jns
push
mov
rorl
aaa
or
sbb
or
fcmovb
mov
dec
ds
loop
xchg
mov
mov
pop
xchg
mov
cmp
lea
xchg
cltd
mov
pop
push
js
shlb
das
loope
test
popf
mov
jge
gs
aad
jmp
mov
cmp
repnz
loopne
jge
jp
in
push
cld
out
mov
fisubs
test
leave
and
mov
xchg
scas
mov
lock
test
jg
cmpsb
cmpsb
xchg
insl
in
jno
orl
pop
out
arpl
or
ljmp
push
repz
insb
ljmp
mov
push
rolb
loop
pop
add
cltd
cmp
push
jbe
mov
mov
jmp
loopnew
xor
cmc
mov
xorb
mov
scas
or
push
cmpsb
sub
cmp
push
psubq
mov
sti
ret
ljmp
inc
mov
stos
cmpsb
mov
in
int3
dec
rcrb
push
cmpsl
mov
mov
into
sub
or
sub
cmp
cmp
gs
jg
cmp
clc
icebp
out
mov
mov
mov
call
mov
enter
out
adc
ljmp
pushl
lods
mov
lret
daa
andl
mov
or
adc
jae
xchg
xchg
ror
cmp
orb
or
in
loop
ljmp
xor
ficoms
decl
ja
icebp
sbb
out
outsb
int3
add
shr
xor
clc
cmp
push
or
xchg
cmp
jns
cmpsb
push
mov
jno
adc
lds
lea
pop
into
or
lock
mov
movsl
and
jecxz
inc
mov
xchg
adc
sbb
cmp
aad
inc
subb
dec
stc
sub
add
push
punpckhwd
inc
pop
mov
mov
xor
cmpsb
sub
pop
sbb
dec
xchg
cli
xor
pop
sub
inc
adc
in
mov
jg
add
dec
rclb
mov
clc
sub
xchg
daa
push
ficomps
jg
xor
xchg
lcall
rcll
ret
mov
call
mov
insb
scas
pop
test
sar
mov
repnz
jmp
in
into
out
push
stos
or
incl
out
push
outsb
sbb
push
dec
push
push
lret
push
dec
jo
push
sbb
jno
lock
and
cmc
push
sub
gs
leave
pop
test
add
xchg
stc
mov
pop
dec
incl
js
mov
mov
dec
cmp
test
inc
mov
mov
xchg
rorb
fisubl
push
mov
das
clc
and
jno
addr16
imul
jnp
movsl
jg
hlt
pushf
cmp
mov
lret
push
insb
shr
jg
mov
int
push
insl
out
dec
in
pop
mov
rcrb
jl
xchg
jge,pt
loope
lock
out
sahf
es
jg
fiadds
xor
aad
push
jae
and
xchg
jbe
lods
fnstsw
push
rorl
out
insb
push
pop
mov
or
imul
push
int3
or
push
jno
jle
es
add
adc
aaa
cwtl
clc
cmc
mov
leave
lock
sbb
sbb
das
xchg
je
in
xchg
xor
xchg
push
push
pop
cli
add
fcomip
pcmpgtw
ret
loopne
or
pop
dec
pop
adc
xchg
insb
or
jecxz
ljmp
push
and
popf
push
push
pop
jns
xor
stos
add
sbb
adc
out
and
leave
lods
inc
add
sbb
xchg
bound
sub
pop
dec
std
movhps
mov
scas
pushf
je
pop
cwtl
lahf
pop
inc
push
push
lcall
cmp
add
int
sahf
jo
sbb
mov
ljmp
addr16
outsl
outsb
push
ja
out
push
out
mov
fbld
decb
stos
xchg
pop
xchg
lods
mov
stos
add
jmp
scas
push
mov
mov
cmpsl
mov
jle
stos
stos
and
adc
loopne,pt
inc
xchg
repnz
push
das
sar
clc
sub
pushf
pop
repnz
push
jbe
add
mov
pop
xchg
push
sbb
xor
subl
jmp
scas
or
pop
push
add
mov
stos
mov
sub
mov
dec
enter
mov
insb
mov
mov
loopne
adc
cmp
mov
jle
pop
xchg
lods
add
call
outsb
cmpb
or
or
fnsave
movsl
mov
fisubrl
or
mov
jae
xor
test
shlb
inc
dec
mov
jg
cmc
jmp
push
daa
mov
xchg
mov
mov
pop
fbld
ret
andl
sbb
xchg
add
hlt
cmp
cmovbe
pusha
adc
lea
xchg
scas
sbb
and
lods
jl
out
adc
add
fisttps
sbb
mov
sbb
jmp
fiadds
subl
inc
in
ds
int
sahf
into
into
sahf
jmp
loopne
and
lcall
mov
jbe
fcomip
jp
push
aas
add
pop
xchg
cmp
push
sub
jg
pushl
mov
out
push
aad
pusha
hlt
lahf
pop
les
jl
add
mov
xor
call
call
and
sbbl
lds
mov
push
or
jl
and
pushl
push
adc
es
cli
cmp
mov
outsb
addr16
ja
sub
and
sbb
fdiv
lcall
data16
rorb
dec
dec
pop
addr16
outsb
pushf
ljmp
cmp
add
rorb
popf
jae
and
fiadds
xchg
pushl
hlt
in
test
push
aam
push
or
les
call
or
xor
xchg
sub
decl
or
mov
in
xchg
xchg
std
cmp
pop
add
sahf
xor
out
cmp
push
and
dec
loopne
cmp
mov
push
imul
data16
jg
push
pop
inc
push
mov
inc
fs
dec
notb
pop
pop
inc
jl
dec
jle
scas
jg
push
enter
ja
mov
cmpsb
cmc
not
pushl
loopne
dec
bound
add
mov
stc
push
jmp
dec
lods
std
add
test
sub
inc
mov
aaa
mov
xor
mov
xchg
cmp
incl
outsb
out
jnp
scas
aas
pop
outsb
push
jmp
gs
push
jp
mov
pop
bound
jbe
loope
xchg
test
inc
ficompl
stc
jle
or
movsb
test
lock
les
cld
icebp
pop
adc
adcb
std
jmp
push
jno
dec
int3
or
and
push
ds
js
jbe
addl
dec
sub
outsb
call
jne
cmp
sahf
cmp
push
jns
sbb
jmp
out
mov
and
xchg
inc
pop
sar
inc
cld
and
sahf
add
push
cmp
push
push
push
mov
ret
loop
xchg
popa
sub
pop
mov
mov
adc
jle
out
jae
jle
xchg
scas
or
sub
inc
ret
add
push
out
sti
or
and
out
imul
test
fstps
or
cmp
imul
mov
insl
sub
sti
cs
arpl
and
ljmp
pop
in
popa
xor
push
repz
mov
mov
mov
xlat
mov
filds
mov
sbb
pushl
push
xchg
es
in
cwtl
jle
cs
arpl
call
inc
ret
xchg
cmp
sbb
lahf
jg
js
lgs
inc
out
je
jecxz
pop
mov
das
nop
lock
xchg
push
pop
mov
mov
adc
sbb
and
xor
dec
bound
xchg
push
repnz
pop
dec
pushw
push
pop
imul
add
aam
dec
sbb
test
cmp
into
sbb
enter
pop
push
aam
dec
icebp
outsl
xor
stc
adc
mov
es
mov
loope
cwtl
clc
ljmp
xchg
iret
push
push
sar
decl
pop
pusha
fwait
adc
popa
mov
inc
movsl
mov
cmp
jmp
dec
std
mov
pop
sahf
call
mov
jns
loopne
jecxz
fbld
xor
sbb
dec
inc
pusha
lret
dec
mov
fisttps
dec
pop
push
ss
lcall
test
inc
mov
daa
fwait
xchg
add
sub
mov
cmp
daa
dec
sub
out
fisubrs
inc
test
mov
sbb
sub
jg
mov
hlt
cmpb
mov
call
xchg
jne
in
xor
mov
cltd
pop
scas
fadds
mov
out
repz
xor
push
cld
ljmp
add
cmp
mov
pop
inc
ficoml
push
jo
mov
xor
movsb
js
iret
and
arpl
push
mov
push
insb
pop
int3
inc
mov
into
mov
out
sarb
clc
int
push
in
adc
gs
push
or
mov
fs
mov
imul
xor
xor
jg
loop
cld
ljmp
into
add
add
inc
push
hlt
cmp
add
add
insl
add
inc
out
xor
into
mov
push
pop
fistps
push
and
popa
pop
scas
mov
mov
and
pop
lcall
jo
outsl
adc
mov
push
stos
xor
mov
pushf
fwait
xchg
movsb
ljmp
mov
cmp
or
mov
dec
aaa
pop
outsb
shll
incb
out
rolb
and
js
push
mov
jmp
sub
decb
std
pop
loope
rorb
xchg
sub
push
mov
or
mov
jl
sbb
adc
sbb
adc
ljmp
jo
mov
iret
notb
icebp
mov
pop
jb
imul
push
push
scas
xchg
xor
clc
mov
jbe
adc
jle
push
stos
test
dec
jno
lods
xchg
fs
lods
pusha
cmpb
lock
pushl
dec
popf
movsb
push
js
cmp
mov
dec
inc
gs
xchg
je
lods
arpl
lods
pop
xchg
arpl
sar
push
inc
push
dec
mov
cs
fs
and
ljmp
movsl
xchg
pop
imul
iret
stos
int
inc
and
mov
and
ljmp
pop
cmp
icebp
xchg
adc
dec
push
pushf
fdivl
mov
mov
xchg
or
mov
add
das
mov
sti
in
icebp
push
cld
xor
out
push
fsubrl
repnz
flds
mov
call
adc
xlat
mov
nop
sbb
aas
fwait
iret
and
gs
mov
negl
mov
arpl
vfrczpd
mov
jle
push
push
jae
loop
outsb
dec
int3
jle
cmpsl
sbb
int
lret
nop
jmp
sub
mov
lds
xchg
sub
std
dec
jmp
xchg
or
mov
ds
jl
iret
jge
js
sbb
sub
into
dec
idivb
mov
pop
jg
xor
jg
scas
lea
call
mov
xchg
mov
mov
or
addl
cmpsb
cmpsl
cs
jno
cmp
jbe
xor
pushl
out
cmp
call
shll
pop
std
xor
sub
mov
pop
outsb
sub
pop
int3
or
int
into
push
mov
out
add
pop
pop
pushf
enter
sarl
push
xor
jg
clc
adc
sbb
jle
movsl
add
lods
lea
or
pop
push
fs
sbb
lea
xor
adc
mov
lcall
test
pop
scas
xchg
mov
xchg
sbb
mov
xchg
mov
push
ret
int
pop
dec
jmp
mov
je
jne
aas
dec
idivb
ljmp
adc
add
lret
dec
cmpb
mov
cmpb
stos
dec
aaa
inc
iret
or
stos
mov
push
sahf
jl
inc
pop
mov
outsb
out
paddb
cmp
jo
mov
cmpsl
push
jbe
and
ja
cmpsb
xchg
and
icebp
rcrl
jns
dec
cli
sar
pushl
inc
push
scas
dec
ds
jl
mov
pusha
dec
xlat
mov
fistps
cld
aad
fdivl
jbe
je
mov
jb
cli
in
lcall
and
ds
inc
xor
add
imul
sbb
mov
dec
imul
pushl
sti
mov
dec
ja
jmp
pusha
out
adcb
push
jl
shll
cld
arpl
daa
addb
mov
nop
sbb
or
pushl
sbb
xchg
scas
mov
push
ss
mov
cli
adc
and
jg
and
xor
mov
xorb
pusha
testb
mov
out
mov
fs
mov
push
push
sbb
mov
das
xor
pop
int
push
mov
push
dec
adc
push
jbe
pop
lcall
jle
dec
cmc
add
pop
sbb
jmp
loopne
insl
and
add
xor
push
lods
adc
movsb
scas
inc
lret
push
jns
enter
pop
outsl
or
push
shrb
and
syscall
add
sbbl
push
mov
jg
data16
mov
push
lods
mov
cmpsb
scas
adc
push
sub
decl
jno
mov
jg
adc
enter
mov
lahf
mov
popl
sbb
pop
fwait
jb
inc
icebp
mov
incl
fmuls
mov
and
ds
push
xchg
insb
int3
mov
xorb
push
ljmp
mov
xchg
cmp
dec
xchg
stos
int3
sub
popa
mov
xchg
js
mov
clc
mov
or
or
fmuls
jb,pt
sbb
pop
fwait
push
fs
pop
mov
movsl
incl
ljmp
movsl
adc
mov
adc
xchg
sub
push
xchg
decb
mov
xorb
xchg
jg
push
jns
dec
lret
cmp
mov
jl
mov
push
cmp
cmp
cmp
jp
incl
pop
ret
dec
and
out
sub
ret
mov
inc
adc
fisubl
jp
mov
js
adc
inc
lods
loopne
dec
pushf
mov
push
int3
out
arpl
or
xchg
inc
push
bound
clc
inc
cld
xchg
dec
pushf
jns
aam
ret
jmp
pop
fdivrp
and
xchg
lods
cmp
inc
scas
cltd
push
inc
cld
out
push
cmp
add
push
ds
jns
mov
call
scas
insl
loope
cltd
jae
jbe
gs
decl
stc
sbb
nop
cwtl
fisubs
inc
in
push
push
aas
push
xorb
lahf
jg
xor
ljmp
call
or
xchg
test
pop
fwait
pop
insb
mov
sbb
in
or
mov
fnstcw
incl
fwait
push
clc
jl
add
lock
insb
dec
dec
call
out
jp
dec
adcb
xchg
push
sub
inc
jg
int3
cltd
jl
scas
xchg
mov
incl
sti
imul
inc
add
scas
mov
mov
movsb
or
out
sar
mov
mov
mov
jb
inc
out
mov
push
cs
movsb
and
in
mov
xchg
lcall
push
icebp
xor
aas
pop
xor
pusha
mov
les
test
sti
clc
call
movb
lds
insl
in
hlt
movsl
pop
pushl
out
inc
int
mov
pop
dec
stos
dec
out
pop
mov
cmp
inc
pop
push
sar
jg
xor
stc
cmp
jbe
xchg
lds
stc
cmp
lea
movsl
mov
pop
jp
xor
push
repnz
pop
mov
push
shll
pusha
dec
dec
mov
cmp
sar
inc
mov
nop
lods
jno
scas
adc
xor
out
or
into
sub
sub
push
xor
and
push
decl
sbb
sub
jbe
sahf
out
mov
decl
fildl
pop
mov
and
dec
in
xchg
or
inc
dec
jno
mov
push
dec
pop
gs
mov
out
cmpl
push
sbb
pushl
pop
data16
scas
sbb
pop
add
sub
adc
jns
add
fidivl
dec
popf
lcall
pop
inc
icebp
xchg
cmpsl
movsb
insb
test
jle
add
mov
incl
sahf
outsl
push
xchg
and
insl
sahf
sub
jbe,pt
cmpsl
push
push
mov
mov
push
inc
sub
lods
push
adcl
scas
fcomps
pop
add
call
pop
or
push
jecxz
adc
cmp
decb
mov
cmp
sbb
insl
in
xor
outsl
int
and
fwait
mov
push
iret
jne
add
out
outsl
xchg
das
sub
dec
call
testb
incl
popa
daa
aaa
cmpsb
enter
jle
les
and
pop
lcall
pusha
jp
cmp
incl
add
addr16
add
add
mov
cmpsb
push
fisubs
sbb
std
call
xor
cwtl
fsubl
mov
cltd
mov
test
outsl
fwait
call
add
popa
sbb
inc
pop
xchg
sbb
adc
inc
mov
in
test
inc
ljmp
ljmp
in
call
ss
outsl
pop
cmp
dec
mov
xchg
loop
push
arpl
mov
xchg
popa
test
xor
inc
inc
mov
jl
mov
pop
lret
push
fwait
adc
mov
jg
jmp
mov
bound
or
mov
add
mov
out
rcrb
cli
adc
fimuls
dec
out
ljmp
xchg
sbb
scas
ficoml
pop
insl
ss
xor
push
jbe
js,pn
sbbl
jbe
scas
pop
push
into
xchg
pop
mov
iret
jg
or
xor
inc
nop
push
daa
or
or
fists
bound
add
mov
pushl
insb
or
out
mov
fisttpl
fwait
xor
mov
pop
data16
add
jg
orl
mov
adc
sbb
cld
sbb
push
mov
mov
stos
lcall
imul
iret
sbb
jge
filds
inc
enter
in
mov
cmc
jmp
cmp
mov
dec
xchg
or
jg
outsl
scas
pop
pop
aas
push
jmp
jg
daa
mov
popa
repz
cld
push
sarb
push
jb
decl
hlt
ds
push
das
inc
in
xchg
inc
push
ja
xor
std
sub
xor
in
jns
push
jae
pop
std
cmp
sahf
loopne
jmp
pop
sahf
push
inc
outsl
dec
push
xchg
push
mov
jl
call
ds
fimull
jl
mov
mov
out
orl
imul
out
stos
bound
lcall
jbe
test
push
inc
in
sbb
mov
dec
jge
clc
adc
xor
sbb
pop
pop
cwtl
mov
push
dec
lods
pop
out
ss
ljmp
mov
mov
dec
cmp
inc
lock
push
lret
pushf
loop
jecxz
jmp
insl
lds
test
dec
sahf
push
clc
cmpsb
nop
sbb
test
pop
test
mov
popf
cmp
test
mov
xor
inc
sbbb
mov
aas
and
or
aas
fsubs
cli
xchg
mov
pushl
add
push
adc
mov
or
mov
pop
test
fwait
cmp
dec
inc
lcall
idivb
xor
pop
mov
dec
mov
add
xchg
adc
jg
mov
mov
pop
mov
outsb
xchg
add
sbb
cmp
das
incl
xchg
outsl
scas
movq
mov
mov
pop
adc
or
mov
dec
mov
insl
lods
sbb
scas
or
daa
mov
and
jno
dec
xor
cmp
pusha
jne
and
and
jg
mov
pop
fistps
push
dec
push
xor
stos
add
pusha
leave
xchg
insl
push
mov
mov
xchg
jge
bound
xorb
mov
popf
mov
cwtl
sbb
ljmp
les
mov
jbe
or
mov
es
clc
ljmp
arpl
dec
lret
push
mov
jo
sqrtps
scas
mov
fwait
sarb
ss
out
mov
push
sbb
jb,pt
cltd
cmc
in
xor
incl
movsb
gs
mov
shll
pushl
add
jl
push
inc
jo
lods
dec
sti
xchg
mov
lea
out
sbb
add
mov
in
pop
imul
into
add
xor
pop
mov
mov
decb
xor
daa
ss
and
xor
jp
fnstcw
fistl
inc
jns,pn
xor
push
sub
rclb
adc
mov
dec
xchg
dec
es
popa
xor
mov
push
add
sahf
or
push
sub
jbe
decl
lock
cwtl
shl
mov
or
cltd
maxps
sub
in
xchg
clc
jmp
push
sbb
aas
inc
pop
xchg
sbb
sub
or
xchg
sbb
pop
aam
popf
jecxz
outsl
out
adc
aam
pushf
lea
push
insb
dec
loope
shrb
fidivrs
cmp
outsb
outsb
incl
mov
jle
xchg
dec
xor
sub
int
sbb
cltd
cmp
out
dec
and
xor
add
daa
lea
subb
and
pop
pop
adc
jg
ret
in
adc
mov
in
cwtl
adc
dec
decl
into
push
xor
cli
push
jnp
js
lock
jl
pop
dec
movsb
dec
pop
into
inc
cmp
jno
sub
das
stos
js
lods
pushf
loop
mov
mov
push
in
push
or
je
or
xchg
idivb
inc
fbld
mov
imul
int3
arpl
dec
ljmp
or
in
sub
jae
pop
lods
jg
loopne
adc
hlt
dec
jno
jle
push
popl
or
je
ds
pop
and
add
cli
jmp
je
pop
push
mov
add
and
stos
mov
pushl
jp
push
pop
aaa
adc
ljmp
out
push
es
call
push
inc
inc
lds
xchg
enter
es
les
cld
mov
push
add
pop
icebp
mov
ret
inc
dec
mov
imul
mov
add
js
dec
popa
xchg
pop
sbb
call
and
or
cmp
push
imul
test
ljmp
mov
mov
jg
cmpsb
imul
xchg
pop
and
add
std
test
jg
sub
or
mov
out
push
addr16
pushl
into
jne
sbb
sarb
cmp
scas
and
cli
push
cli
daa
sub
call
das
roll
js
out
pop
sub
or
push
and
loope
fwait
and
rcll
mov
movl
enter
sub
mov
test
adc
inc
ljmp
and
loopne
push
cs
add
ss
pop
mov
jae
push
mov
jmp
and
enter
xor
inc
sbb
lods
pop
clc
daa
add
mov
sbb
add
mov
aaa
or
push
dec
test
pop
aaa
adc
cmp
push
inc
adc
push
fs
sbb
jg
movsl
jns
push
gs
bound
into
cmp
mov
mov
lcall
lret
jno
cmp
push
pop
mov
arpl
lcall
mov
int3
stos
stc
adc
jns
mov
and
daa
sub
fiaddl
jp
subl
jg
cli
pop
pop
ja
adc
andb
xchg
pop
stos
sub
mov
dec
jb
sahf
lock
dec
or
lahf
scas
push
xchg
jbe
push
pusha
cs
daa
inc
dec
push
bound
decl
push
push
adc
inc
add
push
push
pop
push
ja
incl
cs
mov
lahf
mov
mov
cld
mov
mov
add
lock
jmp
xchg
cmpsl
mov
mov
sub
out
nop
sub
pop
jmp
push
inc
jge
sahf
lcall
mov
sbb
call
movsl
jg
nop
ljmp
out
cli
and
and
xchg
mov
add
rcrl
jl
ficompl
pop
cmp
ja
outsb
ss
jb
stos
mov
mov
loopne
call
pushl
sti
mov
cmpsb
inc
loop
inc
xor
and
jg
inc
std
pop
orl
xlat
je
je
mov
popf
lock
pop
inc
loopne
mov
dec
aad
jns
fistl
push
pop
lods
out
jle
sbb
cmp
into
push
jmp
dec
in
test
lea
add
push
mov
nop
or
es
decl
jne
push
xor
mov
inc
and
nop
dec
sub
inc
je
pop
jo
ret
in
and
lds
xchg
sar
jmp
leave
add
lret
push
xchg
lds
lods
loopne
bnd
imul
stc
cmp
mov
aad
pop
inc
xchg
mov
push
cld
in
or
out
incl
les
add
xchg
imul
pushl
mov
mov
xchg
jb
add
jb
jecxz
mov
fimull
sbb
mov
lcall
xchg
std
lcall
loop,pt
inc
or
adcb
pop
mov
xchg
adc
nop
out
jl
fstpt
pop
lods
jle
addr16
sbb
icebp
jecxz
call
xchg
gs
in
xchg
inc
notl
push
std
adc
dec
addl
xor
dec
mov
out
pop
in
dec
icebp
outsl
mov
fsub
cli
sbb
mov
filds
sub
xor
jbe
rcrl
xchg
popa
mov
in
add
jp
inc
sub
sbb
push
les
dec
inc
sbbl
inc
cltd
into
sub
jmp
sbb
dec
dec
gs
jp
mov
add
shll
xor
jo
test
cld
xchg
lods
mov
dec
inc
inc
int
pop
dec
pop
sarl
lea
xor
push
cmpsb
xchg
sarb
clc
incl
outsb
dec
or
cmpsb
mov
xor
mov
mov
inc
enter
out
xor
fistpll
decl
dec
cld
and
jb
and
dec
xchg
cmp
call
cli
cmpsb
or
dec
push
pop
jmp
scas
fwait
push
cmc
or
les
ljmp
dec
pop
jns
les
dec
in
repnz
mov
insb
mov
jmp
jb
ljmp
pushf
pop
dec
sbb
test
sub
scas
test
jg
sub
xchg
flds
cltd
roll
cmc
scas
movsb
cld
call
hlt
add
cltd
mov
xchg
adc
cmp
movsl
mov
and
popf
push
mov
pushf
decl
push
pop
jne
les
pop
push
imul
into
sbb
nop
shll
jb
push
lcall
sar
or
mov
dec
mov
jae
or
incl
in
icebp
xchg
iret
jl
pop
push
jp
jle
aas
dec
in
dec
and
test
sub
sub
fwait
out
xchg
mov
addr16
stc
xor
sub
aas
imul
sub
fmull
lret
adc
ja
jmp
insb
jb
cld
test
gs
inc
lcall
ss
adc
mov
mov
loopne
or
mov
into
pop
add
lretw
add
call
mov
arpl
mov
cltd
flds
out
clc
jmp
mov
jge
cmp
rclb
outsb
ret
xor
mov
jae
ds
jnp
popa
lds
pushl
iret
mov
push
shll
mov
das
inc
clc
lcall
out
push
insb
and
pop
fstpl
dec
jne
jmp
mov
cltd
loop
adc
mov
out
mov
lret
pop
mov
pop
cld
or
stos
ret
pop
adc
add
fwait
cs
ja
pop
insb
lds
pop
bound
jg
mov
adc
test
sbb
popf
frstor
cltd
inc
call
loopne
out
aas
fwait
mov
mov
dec
sarb
movsl
and
push
cwtl
mov
add
decl
inc
mov
jmp
out
mov
mov
and
adc
sbb
out
and
imul
push
fs
pop
xchg
cli
jle
adc
inc
inc
push
sub
dec
cmp
in
in
lret
mov
mov
mov
mov
popa
dec
out
lcall
or
dec
or
sub
insl
shlb
mov
inc
mov
and
test
push
lret
lahf
aaa
mov
scas
cli
sahf
mov
out
data16
pop
cltd
clc
movsl
int
cld
mov
xchg
cmpsb
xorb
lcall
add
mov
cmp
xor
cmp
pop
stc
and
ljmp
shll
icebp
mov
mov
mov
sub
pop
inc
arpl
jns
pop
popf
mov
test
lea
test
leave
jle
insb
push
jg
movsb
scas
decl
enter
sbb
jl
pusha
xlat
mov
jmp
sub
loopne
cmp
mov
stc
lcall
push
loop
inc
fiaddl
jmp
sahf
xchg
out
ja
sbb
in
dec
pop
les
xchg
stos
notb
clc
push
push
lds
dec
push
sti
sub
fcomip
adc
mov
dec
pop
stos
inc
test
ret
mov
scas
jne
mov
mov
loop
dec
lds
imul
mov
push
decl
sahf
xor
sbb
cmp
cli
jg
in
std
dec
push
add
xor
fdivs
jo
mov
popa
int
xchg
insl
push
decl
shrl
adc
adc
or
mov
cli
jge,pn
pushaw
mov
daa
popf
mov
fs
rcr
icebp
inc
jb
jle
mov
fistps
scas
mov
lods
outsl
in
adc
mov
cmp
mov
sub
in
xor
hlt
ljmp
test
gs
dec
into
cmp
loop
mov
mov
test
xchg
xchg
in
in
mov
inc
inc
lahf
cli
sbb
jb
xor
inc
jae
pop
movsl
cmp
loop
jbe
mov
and
cs
mov
pop
out
dec
iret
xor
dec
mov
push
sub
push
xchg
mov
out
sub
ja
and
cld
mov
lods
lock
movb
cmp
mov
ljmp
call
stos
inc
xchg
out
sub
pop
repz
fwait
add
sahf
int3
xchg
push
push
js
cmp
test
fcmovne
movsb
push
out
pop
xchg
jmp
fs
inc
inc
or
ret
adc
ja
hlt
fbstp
pop
mov
jae
icebp
iret
sbb
xchg
adc
or
lods
jmp
mov
xor
adc
call
data16
movntq
jb
dec
and
lahf
mov
jo
jg
sbb
insb
lock
mov
mov
test
inc
xchg
test
adc
mov
ljmp
ret
adc
mov
inc
call
bswap
mov
mov
pop
in
inc
jge
loopne
clc
lcall
dec
enter
scas
jns
xchg
xchg
push
dec
inc
gs
pusha
lcall
scas
scas
stos
add
insl
das
mov
cmpb
adc
int
inc
iret
sar
mov
jb
xchg
mov
lcall
sub
mov
dec
dec
xor
std
push
stos
inc
cmpsb
inc
dec
clc
popf
dec
cmpsl
mov
call
sbb
mov
inc
push
mov
mov
sbb
nop
sti
push
shlb
mov
dec
hlt
filds
jno
add
fs
add
jo
movsb
aas
filds
aam
call
inc
mov
add
mov
scas
or
mov
or
in
mov
andb
jmp
push
aaa
cld
das
incl
mov
dec
push
idiv
andl
std
and
scas
mov
lods
jnp
leave
sub
call
sti
nop
xchg
idivl
push
int3
adc
loopne
test
push
mov
xchg
xchg
or
mov
dec
mov
dec
pop
jl
test
xchg
ret
jle
sbb
jmp
bound
xchg
and
je
jg
pushl
inc
out
pusha
rcrb
frstor
rolb
repnz
mov
inc
mov
les
pop
je
fists
jno
je
fcomi
jg
mov
jle
ret
sub
lds
cmp
scas
adc
lds
bound
imul
sar
aad
mov
roll
lahf
jbe
and
mov
mov
and
lea
out
xchg
sti
inc
loope
lods
into
ds
cmp
mov
pop
adc
mov
pop
fiaddl
imul
addl
mov
or
jb
ss
clc
sub
and
ljmp
test
push
sbb
jp
in
jge
pop
inc
inc
ret
jne
push
test
push
call
decl
loopne
mov
mov
mov
mov
xchg
jb
dec
ret
cmp
aaa
incl
iret
lods
stos
psrlq
cltd
push
jmp
stos
mov
movsb
mov
inc
pop
and
mov
rolb
pop
shrb
in
out
sahf
jp
mov
jle
sub
jl
fimuls
xor
or
stc
or
mov
out
xchg
push
push
scas
sub
mov
iret
aaa
sar
jmp
cld
movsb
popa
cmp
scas
jno
mov
rsqrtps
inc
pop
frstor
jle
mov
sbb
cs
test
xchg
pop
in
dec
mov
shrl
jmp
daa
adc
and
jl
jl,pt
aas
or
inc
cli
arpl
sbb
push
enter
icebp
je
and
cli
mov
pop
pop
jg
jecxz
clc
push
scas
add
sbb
cli
psrad
push
jge
lcall
repz
out
mov
or
adc
loope
loopne
add
std
add
fcoml
in
rcrl
push
xor
ja
arpl
test
aas
adc
js
aad
xor
mov
pop
sub
jle
pop
lds
out
inc
push
push
dec
and
jl
dec
pop
inc
adc
dec
sub
je
rcrl
jmp
mov
xor
fwait
loope
mov
call
test
insl
sub
mov
fidivs
clc
dec
jg
push
sub
nop
inc
fmull
and
add
dec
iret
jg
test
jle
sub
jb
xorb
insb
in
dec
fwait
sar
jmp
sub
imul
clc
mov
cmp
iret
mov
and
insb
out
pop
add
pop
push
jne
inc
sbb
fisttpll
pop
push
lcall
call
sbb
ficompl
push
cmp
jle
imul
call
cmp
sbb
jle
xor
scas
shlb
jno
cld
pop
xchg
test
cmp
aam
repz
es
jno
addr16
or
call
jge
adc
cmpsl
push
sbb
subb
pop
pop
int3
dec
ljmp
std
pop
add
sub
push
xchg
push
cmc
into
dec
push
pop
mov
sbb
hlt
pop
add
ds
push
fs
out
cmp
and
pop
cmp
pop
je
mov
xchg
or
or
inc
cmp
ficoml
or
mov
mov
or
add
xor
add
pop
cmpsb
mov
in
arpl
mov
cld
shll
xchg
adc
lcall
js
inc
idivl
jg
push
or
mov
stc
cmp
mov
add
clc
sbb
lods
call
jmp
sub
es
add
push
repnz
fwait
lds
fisttps
scas
xchg
mov
arpl
mov
sahf
jb
pop
cmp
pop
xchg
pop
push
jb
sbb
sbb
pushf
pusha
int3
pushf
inc
add
loope
mov
popa
push
adc
scas
in
cwtl
jge
add
xchg
adc
pop
dec
ljmp
aam
movsl
fidivrl
std
dec
sti
pop
in
ljmp
mov
push
jmp
mov
adc
loope
shl
fnstenv
sar
mov
cs
in
xchg
pop
gs
jg
push
adc
mov
addl
ds
sbb
mov
enter
insb
dec
sbb
push
and
mov
call
mov
jb
in
xchg
jl
inc
gs
add
cmp
shll
fwait
cmp
mov
mov
add
lcall
add
mov
xchg
cmp
or
dec
mov
pop
sbb
adc
mov
push
and
xor
jg
fs
decl
push
jae
cmp
ficomps
push
je
negl
inc
cmc
lcall
push
pop
ljmp
cwtl
dec
jmp
push
cmp
mov
jns
jnp
xor
int
push
dec
push
outsb
push
dec
gs
adc
fmuls
mov
enter
outsl
xchg
fs
into
pop
mov
xor
jo
mov
aad
mov
dec
fwait
dec
rcl
jb
inc
pop
mov
icebp
lahf
icebp
dec
shll
outsl
xor
cli
mov
repnz
mov
sarb
packuswb
fisttps
int3
add
adc
jmp
adc
sahf
pop
cltd
dec
cmpsl
imul
sbb
decl
loope
cmc
pop
out
mov
rolb
ljmp
test
loope
jo
push
int3
mov
ja
pop
push
lcall
pop
jmp
inc
jb
pop
mov
inc
push
mov
and
jg
xchg
mov
xchg
into
mov
jg
cmp
subl
jg
add
adc
mov
bound
pop
lds
mov
cmp
push
sbb
jg,pt
inc
jmp
cmp
push
adc
clc
push
mov
xor
push
sub
loopne
enter
mov
add
cli
scas
cli
lcall
es
scas
xor
jecxz
push
mov
ss
js
clc
bswap
mov
push
aad
fdivs
int
stc
xchg
sub
in
push
insl
test
pop
pop
test
sti
jno
adc
dec
repz
pushl
mov
inc
sub
data16
loop
repnz
lret
lret
push
mov
cmc
mov
decl
fucom
mov
outsb
insl
xor
xchg
gs
sbb
aas
mov
out
setb
js
adcl
dec
aam
ja
lret
cltd
mov
add
fsubs
mov
into
xchg
xacquire
daa
int3
outsb
sbb
mov
lret
add
lcall
xchg
dec
popf
xchg
or
xor
fldenv
lcall
cmpsl
add
mov
inc
push
sar
call
jp
mov
xchg
pop
call
mov
ljmp
insb
sti
outsl
in
dec
jecxz
sub
decl
or
imul
repz
cmp
sub
fcos
jmp
outsb
sti
aaa
mov
mov
jne
sub
scas
es
lds
aaa
mov
pushl
lods
xor
test
aas
cmp
mov
push
push
pop
mov
addr16
ds
pop
idiv
xor
and
pop
add
popl
push
fsubs
mov
in
xchg
inc
add
cli
sub
incb
stos
clc
sub
les
test
push
arpl
push
scas
loope
push
das
ss
je
dec
mov
inc
cmc
and
rorb
popf
fisubrl
les
dec
fadd
push
lahf
outsb
shll
filds
fidivl
movsb
mov
inc
cwtl
pop
mov
lock
inc
scas
into
mov
pop
inc
enter
scas
scas
xlat
jl
mov
icebp
dec
dec
test
add
arpl
incl
xchg
inc
mov
iret
jle
loopne
flds
stc
incl
ljmp
rclb
out
insl
mov
sbb
pushl
jo
imul
pop
pusha
push
mov
jb
dec
push
gs
adc
cmp
mov
sbb
mov
inc
jge
or
add
dec
sub
repnz
outsb
bound
pop
jbe
add
sub
hlt
sbb
lock
call
and
scas
jne
stc
mov
lret
decl
out
mov
xchg
mov
mov
movzbl
mov
lahf
mov
or
mov
dec
mov
nop
or
mov
lea
fsubrl
lock
fnstsw
ret
adcl
inc
push
std
and
in
and
aaa
faddl
sub
int
cmp
jg
inc
movsb
pop
in
scas
stos
dec
jg
jne
clc
imul
jnp
push
inc
inc
mov
pop
pop
jb
std
filds
and
mov
dec
dec
ss
mov
cli
cmp
jo
pop
sub
push
into
data16
ja
lock
mov
dec
jmp
mov
filds
dec
or
and
xchg
pop
mov
lods
ss
lods
jg
call
mov
inc
ja
jp
dec
inc
or
movsl
jle
dec
add
add
ret
dec
mov
test
push
comiss
cltd
outsb
gs
cmp
jnp
mov
outsb
es
and
ljmp
pop
cwtl
fiadds
and
rorb
dec
test
xchg
and
decb
xchg
call
cwtl
and
lcall
les
add
dec
lcall
xor
lea
inc
repnz
in
mov
aad
inc
jne
mov
pandn
ret
adc
sbb
mov
loope
pop
insb
dec
sbb
push
lcall
repnz
xor
sub
into
mov
jne
jns
or
pop
icebp
mov
mov
dec
xchg
mov
loopne
out
and
mov
or
fildl
inc
inc
sub
add
iret
xchg
std
adc
in
cmp
jg
lock
xor
loop
stc
int3
and
push
sahf
pop
xchg
mov
in
pop
mov
jp
decl
add
stc
mov
jo
movsb
inc
nop
out
jae
jge
mov
test
pop
xchg
dec
out
lcall
ret
dec
cmpsl
pop
fcmovu
push
push
dec
insb
or
jne
fsts
call
out
repz
dec
jae
push
mov
popa
push
lock
fdivl
mov
sbb
pop
jo
xchg
jle
xor
outsl
les
cmp
test
pop
fsubrs
lods
sbb
dec
js
je
cmp
xor
fildll
jecxz
das
pusha
jle
sbb
es
mov
outsl
and
jge
shrb
clc
jecxz
mov
mov
ljmp
dec
icebp
mull
or
ficoml
sub
out
or
pop
outsb
repnz
jle
push
jmp
incl
repnz
inc
jg
or
cmp
lahf
add
mov
sub
mov
or
or
inc
inc
sub
dec
sbb
ljmp
or
xor
ljmp
lods
cmp
scas
shlb
mov
dec
lods
das
mov
sbb
xor
ret
jecxz
out
aaa
xchg
adcb
int3
mov
jne
hlt
jg
mov
test
dec
outsb
mov
cmpsb
fucomi
and
pop
aad
sti
jmp
xchg
or
iret
stos
xchg
mov
add
fimull
dec
stos
xchg
lcall
add
in
mov
xor
cmp
sahf
jg
enter
mov
mov
repz
mov
sub
pop
je
leave
xor
ret
mov
dec
cmp
add
call
in
ret
mov
lretw
mov
out
insb
push
pop
pusha
imulb
add
fwait
mov
sbb
push
xchg
mov
icebp
adc
push
pop
xor
call
lahf
and
or
and
xchg
scas
lcall
stos
ss
sub
sub
pop
cli
jg
jne
repnz
imul
cwtl
adc
jmp
scas
push
fldcw
cmp
movsl
out
ret
lds
loopne
cld
or
or
jmp
decl
movsl
fwait
addb
jae
jb
mov
fiadds
dec
ljmp
sub
pop
cltd
loope
fsubrs
xchg
fisubl
xchg
into
and
clc
and
jmp
test
lcall
ljmp
jecxz
inc
fcomps
sarl
scas
pop
push
cmpsl
fs
jne
psubsw
add
insl
jns
ret
outsl
or
xor
mov
or
add
mov
jb
and
cmp
sub
jl
fcomip
sub
test
and
in
lock
lods
sbb
fwait
inc
push
inc
test
sahf
dec
add
out
push
insb
add
or
lret
out
mov
ljmp
dec
push
mov
push
mov
and
cmp
call
test
or
popa
popw
push
test
pop
xchg
sub
mov
or
cmp
aas
mov
dec
call
int3
jmp
mov
pushl
push
loop
popa
xchg
or
lret
mov
mov
or
sub
incl
rcrb
ficomps
add
outsb
jge
add
ret
js
jge
sub
mov
push
stc
lcall
out
je
sbb
insl
out
fiaddl
xor
shll
sbb
mov
cmp
lret
imul
xor
aam
sub
shll
adcb
ljmp
mov
scas
stc
adc
dec
imul
pushf
cltd
sbb
scas
pop
mov
mov
fbstp
add
mov
adc
push
mov
and
mov
sahf
sub
sub
sahf
mov
cmp
and
pop
and
test
mov
mov
mov
mov
sub
aam
sti
cmp
loope
push
push
lret
pop
aam
in
loope
mov
and
das
sahf
rep
dec
jo
imulb
decl
dec
repz
mov
jae
pop
xchg
fs
mov
xchg
push
rclb
call
cld
pop
or
mov
scas
outsl
push
xchg
add
mov
test
mov
ss
dec
or
add
jbe
sub
jecxz
mov
dec
sti
movsb
in
mov
into
mov
hlt
loopne
jno
mov
clc
daa
mov
mov
in
mov
mov
lcall
addb
jmp
mov
cmp
push
stos
and
int3
lods
push
fimull
cltd
push
scas
pushf
sub
fstl
out
out
movl
pop
adc
pop
mov
lods
sahf
mov
idivb
dec
dec
mov
xchg
cs
push
test
xchg
sti
sub
push
das
pushl
mov
into
mov
xor
cmp
fstpl
mov
cmpsb
lahf
push
imul
lcall
cli
lods
xchg
lret
adc
fidivs
mov
decl
jb
fbstp
nop
mov
mov
mov
les
stos
push
faddl
adc
scas
lahf
repz
movsl
lds
xchg
aas
mov
incl
jnp
std
sub
mov
inc
lods
sub
adc
fistps
decl
mov
xor
sbb
mov
sti
ds
jg
out
cmp
fimuls
movsl
loop
mov
cmpsb
mov
xchg
mov
push
in
lcall
mov
mov
popf
scas
xchg
push
push
xchg
jle
fistpl
subl
jle
and
mov
call
cltd
adc
outsb
mov
stos
add
adcl
fadds
imul
xor
cmp
cmp
push
mov
rcll
xor
in
push
inc
xchg
cmp
lcall
mov
push
jnp
inc
popf
les
loope
mov
add
int
fwait
ljmp
mov
mov
pop
lods
or
lret
sbb
imul
jg
and
out
adc
push
adc
xor
pushl
int3
jo
adc
mov
or
sbb
dec
and
sub
inc
test
scas
iret
mov
in
cmp
mov
dec
dec
gs
or
loop
lea
sbb
sbb
jmp
jmp
or
xchg
pop
xchg
fisttpl
xchg
pop
subb
pop
aam
jmp
push
jmp
push
sbb
mov
ja
fldt
inc
call
popa
xchg
jne
xorl
popf
std
lcall
mov
cmp
cmpsb
scas
jns
mov
mov
sbb
inc
mov
push
ja
pop
add
mov
mov
jo
mov
outsl
jp
jp
mov
outsb
jb
inc
cmp
xchg
push
xor
dec
pop
mov
cmp
inc
pusha
dec
insl
test
inc
inc
jg
cmc
cmpsb
dec
andb
push
inc
dec
push
dec
pushl
jg
xchg
push
imul
dec
dec
xchg
mov
push
sbb
push
jne
xchg
jp
add
xchg
mov
pusha
bnd
xchg
adc
adc
cmc
inc
cmpsl
fwait
pop
sbb
outsb
xchg
scas
scas
lahf
and
decl
inc
push
gs
xchg
jae
push
outsl
test
jns
push
je
pop
push
jo
ljmp
jb
adc
movsl
movl
pop
imul
bound
sbb
jo
int
lcall
push
mov
imul
cmc
lea
or
adc
into
mov
out
lahf
call
cmp
mov
jnp
inc
icebp
add
outsl
pop
repz
call
loop
add
dec
adc
cmp
xchg
sub
sub
push
movsl
stos
push
jbe
pop
ss
mov
call
pusha
iret
pushf
pop
adcl
outsb
mov
cli
stos
js
test
insl
repz
inc
mov
pushl
dec
aad
pop
js
data16
xchg
enter
push
inc
insb
insl
stos
rorl
jg
gs
gs
insb
xor
inc
js
cmp
test
jp
mov
insl
jno
push
mov
inc
les
sbb
xchg
push
ja
inc
adc
movsb
pop
adc
fwait
out
fs
orb
movsb
pop
pop
push
xor
enter
dec
out
xor
dec
lods
clc
push
push
stos
mov
jns
jg
jecxz
pop
inc
mov
std
les
mov
mov
jmp
and
mov
xchg
inc
cmpsl
mov
arpl
inc
cs
adc
xchg
jb
inc
std
jmp
mov
sbb
xorb
cs
andl
push
pop
jne
outsb
mov
sbb
mov
clc
dec
scas
and
insb
xchg
push
cmp
jno
push
inc
push
mov
test
and
outsb
jle
rcr
outsl
les
lock
dec
std
dec
aam
insb
jb
or
pop
int
add
fisttps
push
push
lock
outsl
jns
jp
test
mov
inc
into
scas
jae
push
fisttps
andb
insb
jb
sub
cmp
ret
out
sti
mov
jg
dec
in
mov
call
mov
cs
sub
push
outsb
xor
mov
or
cmp
adcl
push
add
stos
dec
enter
push
xor
inc
call
lahf
pop
push
pusha
dec
out
lcall
dec
push
xchg
push
push
addr16
push
jb
mov
xor
add
mov
or
js
jo
sahf
mov
movsb
fs
mov
int
push
das
icebp
jne
jno
clc
mov
push
pop
xchg
or
adc
cmp
sahf
cmpsb
push
call
pushf
dec
insl
cltd
insl
negl
les
cwtl
sarl
mov
popf
arpl
insb
decb
fdivs
addr16
into
incb
mov
cli
cmp
inc
clc
fisttps
lea
cmp
movsb
test
in
adc
mov
arpl
ljmp
mov
pop
sbb
mov
jle
jle
adc
out
imul
add
fmuls
decl
pop
int
insl
scas
sbb
inc
imul
sub
inc
jno
lahf
mov
inc
jo
outsl
andl
inc
outsl
jae
xchg
addr16
or
dec
out
test
adc
out
and
jg
scas
outsb
dec
lods
dec
repz
pop
movsb
push
fcomps
call
scas
ret
lods
jg
pop
push
jne
xchg
outsb
fs
bound
ja
cmpl
iret
dec
loope
jmp
mov
shlb
sbb
mov
mov
filds
jle
es
xor
dec
sbb
into
sub
jg
scas
pusha
out
adc
sbb
lret
xlat
into
std
lahf
test
stc
dec
jno
incl
enter
mov
mov
popf
std
sbb
cli
test
adc
jmp
inc
insb
jno
lea
or
popf
fdivrl
clc
pusha
shrb
adc
mov
mov
and
or
mov
jb
adc
pusha
inc
cmpsl
xor
in
nop
jno
inc
jl
xor
cmp
orl
gs
pop
daa
stc
cmp
enter
sub
fnstsw
pop
mov
push
bound
add
sub
mov
decl
dec
clc
and
hlt
and
xchg
test
ljmp
or
push
filds
jp
jge
loop
insl
inc
mov
hlt
incl
cmp
push
dec
push
inc
loope
xchg
push
push
dec
pop
mov
xchg
insl
fstpt
dec
rcrb
xorb
pop
insl
cmc
and
jbe
xor
mov
call
xchg
xor
sub
rcrb
adc
dec
rcl
lds
pop
dec
inc
dec
shrb
decl
pop
stc
and
dec
loop
mov
jge
test
jmp
or
in
imul
jb
outsb
cmp
ret
push
inc
cli
pop
out
ds
mov
lcall
movsl
mov
in
cmc
jle
dec
test
clc
lcall
push
repnz
inc
cmpsb
out
push
repz
add
sub
add
ret
adc
es
dec
cwtl
sbb
mov
pop
lcall
mov
mov
fidivrs
cmp
push
js
mov
call
addr16
jl
sub
or
pop
mov
out
clc
push
ja
push
js
dec
dec
cmpsb
ds
arpl
cmp
mov
and
mov
add
decl
es
fsubl
inc
test
movsl
mov
inc
out
push
roll
sbb
or
xchg
xchg
aas
mov
mov
add
mov
mov
lods
pop
hlt
aaa
sbb
jmp
arpl
icebp
scas
jmp
sbbl
incl
mov
cmpsb
rclb
movsb
jno
movsb
rcl
fisttps
test
add
inc
add
xchg
mov
in
inc
fidivl
pusha
mov
sbb
dec
insl
mov
iret
lea
ret
call
xor
xchg
scas
mov
pop
pop
in
addr16
sub
lcall
and
add
iret
mov
xorl
decl
jecxz
pop
int3
add
repnz
jne
stos
dec
repz
movsl
lret
and
mov
call
movl
test
cli
cmpsb
imul
incl
les
dec
iret
pop
mov
mov
test
push
mov
fcmovb
xchg
cmpsl
inc
add
imul
adc
lahf
cltd
rcr
jo
mov
decl
mov
lret
test
aad
mov
cs
xchg
pop
add
mov
mov
pushf
lret
mov
dec
lahf
add
push
out
add
xchg
dec
mov
testl
in
movsb
xchg
lds
inc
in
cmc
ljmp
ud0
cs
mull
mov
lret
add
in
cwtl
ret
mov
lcall
mov
pop
lcall
insb
andb
sarb
mov
out
xor
dec
movsl
jno
cmpsl
nop
repnz
xchg
jns
test
les
call
cmp
or
push
loope
cltd
sti
inc
dec
fmuls
jge
xchg
cmpsl
mov
fs
mov
xchg
mov
stos
inc
out
adc
xor
mov
call
cwtl
insb
std
jp
into
call
add
cmc
scas
inc
or
out
fldl
sub
scas
shlb
dec
mov
dec
mov
adc
mov
xchg
popf
lods
push
add
inc
push
and
mov
lahf
sar
sub
popa
loop
jns
sbb
xchg
lock
jmp
into
xor
adc
mov
pop
or
or
dec
outsb
enter
cs
mov
add
and
mov
cmpb
and
mov
pop
leave
add
xor
incl
sbb
pop
mov
repnz
dec
arpl
aaa
xchg
lds
mov
clc
lcall
nop
test
int
xchg
fs
mov
mov
sar
cmovl
mov
call
outsb
std
movsl
enter
xchg
scas
sub
popf
dec
pop
test
fcompl
rcrb
jecxz
or
dec
cmpsb
call
sbb
pop
sub
rorl
jle
in
cmp
push
fwait
out
mov
lcall
add
int3
jne
incl
fdivrl
mov
mov
mov
sub
out
shrl
fimuls
icebp
jg
mov
mov
xchg
push
jns
xor
mov
and
les
cwtl
mov
movsb
lock
xchg
or
movsl
outsb
inc
loopne
scas
add
adc
jmp
in
cli
ljmp
or
mov
lahf
mov
jns
out
push
pop
inc
into
stc
ficoml
test
mov
adc
call
fbld
fdivrl
mov
or
out
sbb
xor
stos
pusha
xor
mov
imul
jg
icebp
fbstp
add
loopne
mov
xor
mov
jg
movsb
jbe
mov
xlat
test
jne
lods
adc
xchg
test
pop
sbb
sahf
jecxz
mov
mov
adc
shr
incl
xchg
jne
add
mov
jae
add
mov
mov
jmp
fidivl
addb
mov
incl
or
shll
xor
int3
aas
fcomps
add
aaa
stos
aam
lcall
lcall
jbe
dec
push
mov
mov
sub
cli
ds
dec
out
add
pop
sahf
mov
ljmp
mov
push
mov
ljmp
ret
sub
rcrb
out
fwait
mov
add
sub
dec
cmpb
movsl
add
clc
lahf
mov
mov
movsb
mov
cmpb
xchg
notl
out
js
loope
mov
mov
jecxz
test
rcrb
dec
insl
jmp
aas
stc
cld
sbb
mov
mov
xchg
mov
jne
imul
cltd
out
add
bound
fdivs
movsb
pop
jns
add
dec
fwait
mov
push
out
int3
fs
stc
ljmp
cmc
test
je
mov
enter
dec
addb
rcrl
jmp
add
popf
mov
into
and
mov
cs
pop
mov
cli
cmp
inc
mov
mov
and
mov
movsl
dec
inc
lods
in
pop
lock
mov
repz
out
push
pop
mull
cwtl
fstpl
movsl
bound
stos
mov
hlt
and
fisttps
and
xor
cmpsl
mov
in
in
mov
clc
ficomps
mov
scas
mov
into
lds
scas
pop
jle
jmp
mov
pop
stos
insl
repnz
lahf
jno
sbb
pusha
dec
sub
mov
mov
pop
sbb
lock
pop
mov
lcall
outsl
pop
xor
xchg
pop
test
jg
pop
push
fwait
mov
fwait
test
sbb
push
xor
sahf
fnstenv
bound
add
jmp
incl
mov
mov
xor
shlb
call
jmp
xlat
xchg
mov
cmpl
pop
push
imul
pop
clc
cmp
scas
lahf
nop
xor
cld
ja
mov
loope
movsl
pop
add
aas
clc
xor
subl
decl
pop
je
in
scas
pop
or
in
jg
push
pop
mov
or
add
loopne
lret
xchg
sti
cmp
xchg
dec
aad
mov
and
add
mov
mov
fwait
cli
add
dec
lea
rolb
imul
mov
std
shll
sbb
xchg
clc
pop
lods
mov
nop
xchg
loopne
outsb
arpl
or
jbe
sbbb
fs
cld
inc
cld
ud0
cld
lcall
cltd
jo
ljmp
clc
sbb
sbb
and
pusha
dec
divl
push
std
add
or
lcall
movsb
ljmp
fwait
and
lods
mov
inc
mov
decl
inc
std
xor
adc
out
xchg
into
xor
pop
lea
repnz
xchg
mov
hlt
test
add
dec
cmc
and
gs
fdivl
mov
adc
fstp
sbb
outsb
incl
out
mov
mov
leave
lods
insb
fdivp
fmuls
sahf
cltd
jae
mov
in
stos
test
mov
jbe
add
scas
arpl
insb
ret
imul
push
dec
mov
repz
out
push
lods
mov
incl
fidivl
sahf
stos
cld
lea
scas
xchg
decb
mov
jecxz
cli
into
mov
loop
ds
mov
jmp
clc
sti
ret
out
cltd
cmpsb
ds
les
into
pop
mov
ret
or
loope
cwtl
scas
mov
jecxz
cli
pop
std
mov
cld
mov
sbb
in
aad
test
aam
mov
in
lcall
nop
cld
clc
call
clc
popf
mov
movsl
shll
mov
mov
call
xor
and
sub
roll
sbb
cli
pop
insb
cli
ret
movsl
xchg
out
fadd
cmp
inc
fdivr
iret
lods
inc
xor
dec
sti
fisttpl
sahf
iret
xchg
rorl
pushf
mov
add
das
mov
gs
inc
ljmp
add
ja
dec
movsl
inc
rorb
lcall
mov
stos
mov
ja
sub
adc
push
in
cli
in
mov
jl
mov
mov
add
lea
test
dec
push
lret
dec
sub
mov
add
lods
jecxz
fcom
xchg
push
int3
lds
popf
in
push
inc
ljmp
shlb
ja
jnp
stc
loope
lea
in
movsl
pop
orb
out
adc
es
fwait
push
inc
fsubrp
je
ret
pushl
jmp
jno
imul
gs
aad
fstl
lock
mov
mov
push
data16
xchg
dec
mov
decl
add
push
fs
test
outsb
sahf
test
jnp
outsl
ljmp
jg
dec
inc
mov
inc
xchg
fistps
sbb
push
jno
mov
incl
leave
mov
std
stos
gs
lods
push
push
lods
pushf
pop
mov
xchg
pop
inc
dec
stos
jno
jbe
push
stos
jnp
add
test
xor
outsl
clc
pushl
rcrb
jae
mov
lret
insl
mov
inc
dec
mov
das
clc
incl
insb
push
je
je
outsl
xorl
push
or
jae
ljmp
movsb
pop
and
fs
aad
dec
shrb
insl
push
mov
xchg
dec
push
pushl
jns
dec
sahf
imul
jnp
pop
xchg
dec
push
xor
push
dec
cli
stos
dec
lea
mov
jl
inc
inc
mov
xchg
push
inc
jns
insl
gs
jno
cmpsb
pushl
movsl
pop
imul
lcall
lcall
inc
je
subb
fs
stc
andb
xchg
bound
mov
cltd
fwait
jno
nop
repz
dec
lcall
inc
cwtl
dec
pusha
sub
adc
mov
lea
les
lds
js
arpl
ficoml
das
jmp
jbe
out
push
fucomip
jp
mov
jg
call
push
pop
adc
inc
jge
outsl
push
pop
mov
test
sbb
mov
sub
ljmp
xor
inc
pusha
or
and
push
push
cld
mov
or
xor
adc
aaa
mov
mov
loope
push
pop
fbstp
add
jne
xchg
sbb
mov
aam
pusha
inc
sbb
push
pop
nop
cli
arpl
lds
jne
push
sub
add
cmp
and
xor
cmp
fistps
or
and
or
aas
dec
sbb
cmp
xor
daa
sbb
outsl
and
aas
adc
sub
xor
and
or
mov
xlat
pop
incl
repz
inc
imul
jb
dec
test
jne
js
push
cmpsb
inc
out
sbb
jp
test
inc
addr16
dec
inc
mov
push
jge
jno
add
jns
dec
dec
inc
inc
insb
imul
gs
pop
push
pop
inc
pop
push
jg
fadds
je
imul
push
sub
ljmp
arpl
gs
popa
popa
jge
inc
data16
and
push
lcall
mov
divb
pop
or
add
and
adc
sbb
sbb
ds
lcall
xor
sbb
aaa
or
push
add
adc
xor
pop
pop
pop
cmp
add
sub
and
push
sub
pop
xor
inc
mov
push
xor
xchg
imul
ret
jg
adc
add
or
cmp
adc
sub
dec
or
adc
lcall
push
or
aaa
push
adc
push
add
or
ds
in
ljmp
sbb
or
and
adc
imul
daa
add
jg
xor
rclb
sbb
or
jns
leave
jg
cmp
cmpl
push
je
aas
outsb
insb
and
dec
push
inc
and
xchg
ss
inc
dec
lahf
outsb
insb
je
clc
mov
outsb
arpl
inc
inc
inc
pop
dec
and
or
push
outsl
popa
xor
jecxz
push
adc
sbb
bound
jbe
sbb
jg
cli
pop
dec
jno
pop
scas
push
or
add
add
add
or
sahf
je
aas
pop
hlt
jg
jns
sub
ja
sahf
sbb
add
sbb
and
adc
out
xchg
subl
jno
inc
xor
inc
ss
add
mov
mov
add
fs
mov
dec
mov
int
out
lods
dec
stc
mov
int3
dec
add
aad
or
shlb
jmp
cld
enter
dec
xchg
pop
clc
dec
push
mov
cld
outsb
jo
pop
icebp
enter
or
arpl
cmp
fisubrs
clc
jmp
jp
sbb
inc
xor
xor
clc
jg
mov
add
or
dec
or
sbb
add
dec
or
pop
or
or
sub
and
and
pop
pushl
out
cmp
pop
push
jle
outsl
or
popa
adc
ds
cmp
and
or
ss
dec
and
inc
pop
or
sbb
cmp
pop
decl
call
xor
and
add
sub
inc
or
sub
xor
and
push
sbb
push
aas
lock
aam
add
add
adc
sbb
adc
add
pop
sbb
add
cmp
xchg
dec
cmp
and
mov
or
inc
and
or
jae
mov
add
adc
jns
jge
pop
aas
inc
mov
addr16
pop
cld
xor
pop
std
ljmp
pop
dec
push
push
add
cmp
and
decl
and
add
or
aaa
sub
dec
or
push
push
sub
aas
sub
mov
nop
dec
jmp
cs
or
push
cs
adc
sbb
sub
dec
sti
outsl
push
sbb
sbb
and
cmp
add
js
pop
fcomip
jg
jb
push
push
inc
es
add
mov
and
mov
aaa
jns
sub
and
cmp
test
cmp
sbb
inc
adc
add
adc
jecxz
loope
dec
inc
bound
das
jp
adc
cmp
xor
fwait
or
cmpb
push
pop
adc
sub
xor
cli
adc
sbb
fs
dec
and
daa
add
and
cmp
pop
je
mov
cmp
pop
inc
addr16
jbe
inc
add
cmpsb
mov
rorb
sbb
sub
pop
add
push
adc
js
add
add
xor
dec
decl
or
jl
ja
jl
cmpb
fistpll
pop
push
sbb
cmp
jae
or
cmp
sub
cld
mov
adc
push
adc
and
adc
outsl
clc
mov
ss
xor
sbb
xor
popa
xor
adc
dec
daa
sbb
and
sbb
cmpsb
sub
lcall
or
inc
pusha
pop
arpl
push
sbb
cld
pop
loopne
cmp
aas
push
cmp
sub
ljmp
sbb
js
dec
js
outsb
aaa
or
sub
mov
push
cmp
sub
pop
add
adc
pop
push
cs
inc
bound
fs
adc
add
sub
adc
sub
insb
sub
sbb
sbb
das
aaa
pop
jle
shrl
aam
sub
cs
in
clc
incl
jle
inc
push
inc
push
inc
jb
push
cmp
add
pop
pop
mov
add
sub
xor
das
add
outsl
fimuls
daa
sbb
add
or
add
add
push
pop
bound
push
dec
jp
sbb
add
add
xchg
add
push
xor
into
pop
pop
out
aaa
jg
lock
cld
js
inc
pop
pop
jns
adc
sbb
sbb
aas
add
dec
imul
or
and
and
sbb
filds
pop
movsb
and
aas
adc
inc
jns
jne
bound
sub
or
ljmp
add
add
cmp
sub
and
das
insl
xor
sbb
or
js
cmp
dec
out
push
jb
data16
adc
out
adc
add
and
cmp
and
pop
imul
decl
and
push
pop
jg
js
add
adc
es
push
xor
and
add
cmp
add
push
insl
sub
sbb
clc
mov
adc
dec
out
push
jno
inc
sar
fwait
out
push
arpl
mov
push
sub
sbb
cmp
jg
pop
and
pop
push
daa
and
sub
add
addr16
inc
xor
push
inc
dec
or
loopne
and
or
mov
push
pop
xor
dec
pop
add
sbb
rcr
aam
and
add
sbb
pusha
incl
sbb
pop
or
jbe
jno
or
aas
or
jae
cmp
push
imul
fdivp
inc
jmp
or
push
xor
cmp
pop
add
lahf
xor
add
dec
cmp
xor
inc
adc
pop
daa
cmp
lock
push
cmp
pop
sbb
push
xor
xchg
cmc
or
jp
imul
add
lcall
sub
popa
adc
add
add
bound
xchg
sub
and
sub
popa
inc
gs
jge
push
pop
je
push
or
push
push
and
cld
push
adc
or
cmpsb
arpl
sub
aas
xor
jne
add
mov
ljmp
pop
pop
jl
imul
daa
push
xor
sub
push
sbb
cmp
mov
or
cs
mov
in
push
data16
sub
and
or
hlt
pop
pusha
clc
dec
xor
sbb
push
xor
pop
pop
sbb
out
sub
add
addr16
je
inc
movl
add
xor
cmp
adc
clc
push
and
sarb
cmp
push
push
ds
dec
jae
pop
sbbb
daa
sub
mov
add
cmp
sub
adc
insb
data16
push
fidivs
xor
or
out
js
ret
cs
or
loop
sub
jle
and
ds
daa
push
outsb
adc
pop
pop
mov
sub
popa
xor
das
xor
or
sbb
adc
shl
push
inc
push
inc
adc
pushl
in
cmp
add
das
adc
daa
sub
push
mov
pop
inc
and
adc
sub
insl
sub
inc
xor
ds
lock
cmp
daa
adc
daa
sbb
jo
xchg
cmp
sbb
mov
ds
sbb
push
push
sub
aaa
xor
dec
cmp
add
addr16
add
adc
add
pop
add
xor
push
es
aas
sbb
decl
lcall
and
cmp
adc
or
pop
sbb
es
and
sbb
sub
sub
and
sbb
mov
bndstx
das
or
jbe
adc
sub
hlt
les
cmp
pop
push
jns
cmp
push
pop
pop
xchg
add
sub
sub
xor
int
add
add
cmp
dec
dec
adc
sub
hlt
or
or
cs
pusha
jo
add
adc
std
fists
sub
cmp
sbb
pop
or
dec
or
xor
add
xor
das
xor
jne
pop
push
sub
dec
push
and
sub
add
add
inc
add
cmp
add
arpl
pusha
cs
cmp
inc
adc
sub
inc
inc
sub
xor
ljmp
adc
xor
cmp
mov
or
or
inc
cmp
or
ljmp
test
adc
xor
add
and
pop
push
add
out
xor
loop
mov
push
adc
and
and
dec
sarb
dec
fbstp
cmp
dec
femms
sbb
out
adc
adc
push
mov
add
add
xor
xor
pop
icebp
pushl
push
or
sub
sub
pop
inc
xor
loopne
cmp
outsb
sbb
aas
popa
sub
and
xor
stos
push
and
xor
sbb
dec
dec
sbb
mov
xor
add
xor
add
hlt
decl
xor
push
sbb
adc
add
xor
sar
lret
dec
xor
and
aaa
pop
and
or
push
mov
pabsd
mov
dec
push
adc
rorb
sub
pop
push
cmp
cmp
mov
sbb
cmp
insl
mov
sbb
inc
and
jp
and
push
and
or
fisubs
adc
sbb
add
mov
xor
cmp
cmp
add
push
adc
and
mov
outsb
push
sub
push
sbb
jbe
or
mov
sub
add
cmp
and
sbb
cmp
adc
test
sub
add
cmp
je
imul
add
pop
hlt
add
add
xor
cmp
cmp
das
icebp
fisttps
adc
push
daa
cmp
adc
ljmp
sub
add
cmp
sahf
stos
or
sbb
or
mov
xor
xor
push
sbb
cmp
aaa
push
add
dec
xchg
and
adc
std
aas
sub
sub
sub
nopl
mov
jmp
jmp
push
dec
or
jb
add
aaa
ds
xor
and
aas
and
pop
mov
cmp
push
sarl
jle
adc
xor
mov
xor
ds
cmp
and
lock
add
xor
adc
shl
xor
ss
sbb
daa
std
stos
shlb
add
or
cmp
add
xor
dec
imul
xor
sub
aam
dec
ja
stc
aas
push
xor
sbb
adc
and
adc
sub
shrl
ret
pop
xor
ret
out
aaa
xor
cmp
pop
sahf
xor
jno
jle
das
rcrb
dec
insb
dec
pop
ja
dec
dec
sbb
jbe
jns
push
stos
or
stos
sahf
push
push
jo
mov
xor
sahf
jle
pop
data16
or
cmp
jg
inc
addr16
gs
pop
pop
push
insb
js
test
inc
inc
dec
imul
dec
test
jl
gs
push
call
dec
popa
inc
mov
lds
bound
ljmp
in
pop
mov
js
dec
gs
popa
inc
cld
mov
bound
dec
push
push
adc
cmovge
pop
pop
push
pop
or
outsl
cli
stos
sahf
sub
das
gs
or
add
sbb
sbb
add
inc
pop
inc
ds
or
in
cli
out
mov
or
cmp
jbe
sbb
es
loop
ss
insl
sbb
or
inc
adc
mov
sub
mov
sbb
subl
add
ljmp
and
dec
jecxz
jnp
lds
jo
jo
push
dec
inc
push
call
popf
out
pop
xchg
push
popa
mov
cli
inc
jp
shll
mov
js
push
inc
lods
sar
lcall
nop
ficomps
xchg
in
dec
loop
dec
jge
loope
push
cmc
loope
pop
push
ret
inc
jo
xlat
xchg
incl
out
arpl
shrb
fadds
xlat
ret
fucomi
inc
pop
fdivr
lcall
inc
out
je
int
dec
jno
push
lret
pop
cmp
jae
fbld
cmp
pop
inc
sbb
fs
xor
in
insl
inc
adc
call
xor
dec
inc
sub
jns
add
imul
jnp
adc
data16
lret
push
pop
mov
test
push
jns
fidivs
int
push
je
dec
pusha
jp
push
call
out
jne
out
pusha
jns
pop
jns
out
pop
push
push
test
loope
fs
decl
outsb
pop
fs
addr16
leave
aam
inc
or
inc
popa
sub
jno
push
lret
pop
fisttpll
inc
mov
fcoml
out
in
insb
jle
out
push
sbb
push
dec
sub
dec
sub
insb
fcoms
dec
into
jne
gs
int
mov
loopne
ret
cmpsb
stc
scas
ret
mov
insb
ss
or
pop
fsubrs
data16
shl
shl
or
push
rolb
orl
js
jp
push
je
inc
jne
push
add
dec
dec
fwait
lcall
test
push
imul
add
dec
bound
outsl
adc
push
fwait
mov
push
insl
jbe
arpl
dec
cmp
jo
dec
push
and
fcompl
sub
fisttpl
lock
push
inc
bound
inc
ja
fistps
dec
push
js
clc
enter
loop
call
ljmp
dec
or
push
loop
lods
adc
decl
into
push
flds
gs
dec
jecxz
dec
push
push
imul
je
bound
inc
dec
jo
jbe
inc
pusha
jo
das
mov
dec
insl
mov
jo
pop
imul
mov
jg
je
les
int3
insl
shrl
push
pop
call
inc
fidivs
fs
adc
inc
bound
push
pushf
push
std
ffree
or
lods
dec
push
inc
ja
inc
pop
fldl
jne
clc
aaa
dec
push
push
inc
bound
push
push
insb
incl
mulb
inc
outsb
push
dec
jns
pop
jle
inc
pop
fcompl
push
dec
imul
outsb
push
push
pop
arpl
fisubs
out
dec
inc
dec
push
mov
lcall
call
push
push
dec
je
fiadds
js
push
dec
adc
je
jbe
pop
push
insb
pop
insl
jle
incb
dec
lds
popa
aad
ret
dec
into
js
dec
rorl
push
outsl
js
fs
fildll
ret
dec
int
lret
dec
shrl
push
imul
push
loopne
inc
fs
pusha
int3
fs
add
inc
jae
dec
lcall
pop
dec
push
pop
push
imul
dec
push
pusha
jbe
jl
popa
addr16
cmp
push
pop
push
icebp
jo
jbe
js
dec
movb
pop
ja
push
mov
jle
pop
inc
dec
gs
dec
pusha
dec
push
dec
dec
push
push
mov
inc
inc
inc
dec
pop
ja
inc
insb
inc
gs
jl
inc
dec
sbb
inc
dec
jp
inc
in
jb
sbbb
jbe
mov
dec
idiv
cmpsb
push
arpl
insl
imul
jno
inc
push
rcrb
or
outsb
pop
dec
sbb
or
jl
push
pop
or
fdivrs
jne
arpl
dec
outsl
sbbl
dec
jl
loopne
andb
insb
outsl
dec
jnp
dec
dec
inc
lods
loope
dec
fsubs
dec
inc
incl
cmpsb
jb
imul
inc
dec
push
std
sbb
pop
dec
dec
push
outsl
insb
dec
insb
push
dec
inc
ficompl
add
dec
push
pop
push
push
or
mov
or
es
fs
jae
push
jb
xchg
sub
jp
jns
dec
inc
inc
js
decl
pop
iret
shr
jmp
repz
dec
enter
inc
out
xlat
cmc
in
shr
shl
dec
aad
out
lret
jmp
inc
call
hlt
out
not
fdiv
xchg
mov
xorl
test
mov
xchg
pushf
jg
fildll
xchg
mov
xchg
mov
mov
mov
stos
mov
mov
inc
dec
push
jb
inc
data16
jg
decl
arpl
push
pop
jbe
jl
inc
inc
inc
popa
inc
jge
inc
pop
jne
push
jns
inc
mov
dec
inc
mov
cmp
mov
jg
inc
jg
imul
push
or
adc
and
sbb
and
sub
and
cmp
and
sbb
adc
push
ds
or
push
cs
add
inc
or
pushl
aas
and
es
adc
and
sub
fsubp
xlat
in
sti
inc
fdivrp
cld
idiv
in
out
out
aad
fsubr
cli
vpaddsb
jmp
ljmp
cli
ret
fucomi
loop
hlt
lock
push
iret
sar
sar
mov
scas
cmpsb
xchg
decl
nop
mov
mov
nop
mov
scas
xchg
xchg
decl
mov
addl
mov
xchg
test
in
lock
xchg
jmp
faddp
jmp
lock
fcmovne
stc
cld
jmp
loopne
fxtract
idiv
pop
cld
das
push
ror
icebp
aam
out
shr
add
ret
lret
cmp
loope
neg
enter
jmp
mov
lahf
test
mov
jl
test
popf
fwait
xchg
popf
mov
mov
xchg
stos
cltd
cmpsl
lods
mov
movsb
xchg
addb
sbbl
mov
mov
lods
xchg
xchg
test
inc
pusha
dec
data16
outsl
pop
and
push
inc
inc
push
push
pusha
gs
push
jno
stos
ljmp
push
jnp
jns
push
push
cmpsb
mov
pop
dec
jg
pop
inc
jns
inc
inc
inc
insl
inc
push
jbe
jle
out
sar
lcall
aaa
or
and
add
and
adc
ljmp
cmp
adc
ss
sub
and
add
cs
ds
xor
loopne
cmp
pop
sub
or
in
outsl
inc
neg
out
enter
out
out
in
rol
icebp
shl
shl
jmp
add
stc
fdivr
pop
hlt
jmp
rcl
repz
fdivr
iret
push
ret
ror
jecxz
rol
out
shr
sbb
fbstp
xlat
enter
scas
mov
mov
fwait
xchg
popf
andl
mov
mov
mov
lods
mov
mov
lea
ljmp
cltd
mov
mov
sub
push
add
ljmp
clc
mov
xor
daa
cmp
or
inc
jbe
cmp
mov
cmp
xor
adc
cs
and
gs
push
jmp
cld
push
das
sub
pop
add
ds
xor
sub
push
add
push
push
iret
lcall
push
or
sub
add
or
jo
add
sub
out
cmp
or
and
add
add
sub
adc
ss
push
adc
sbb
sbb
push
add
push
sub
dec
and
sbb
sub
pushl
sub
sbb
insl
add
sbb
adc
jno
add
or
lahf
call
or
and
cmp
and
push
pop
sub
adc
aaa
jmp
push
sub
xor
xor
add
cmp
mov
push
adc
or
or
push
push
or
cs
xor
daa
add
insl
mov
inc
add
das
dec
cmp
insb
xor
push
push
fcomip
pop
sbbl
sbb
or
sub
sub
or
dec
xor
mov
cmp
xor
gs
filds
mov
and
add
outsl
or
cmp
push
sub
adc
xor
ret
incb
or
push
push
and
add
ja
push
pop
cmp
sbb
sub
sub
dec
pop
add
pop
or
cmp
daa
cmp
ss
dec
mov
add
inc
xor
arpl
ds
pushf
push
add
and
call
rcrb
jle
xor
add
sbb
das
and
and
lock
incl
or
sub
adc
jno
add
test
mov
fistpll
pop
xor
cmp
or
xor
sbb
cld
decl
daa
sbb
and
sbb
or
adc
aas
xor
sbb
xor
sbb
ds
push
sbb
and
inc
jle
xor
xor
xor
sbb
adc
cmpsb
das
addb
incl
pop
cmp
das
das
pop
adc
add
outsb
cmp
and
cmp
pop
sbb
cmp
test
adc
xchg
das
aas
and
push
add
sbb
adc
lds
dec
cmp
aas
cs
xor
and
js
sub
xor
sbb
sbb
mov
jg
adc
adc
dec
push
adc
push
adc
nop
xor
pop
aaa
dec
sub
cmpsb
xchg
rcrb
cmp
or
mov
jo
or
inc
fisubrs
push
aas
dec
call
inc
or
push
cs
sub
gs
push
loopne
lcall
movaps
add
add
add
inc
and
add
add
jg
pop
outsb
pop
adc
pop
sbb
sbb
data16
sub
and
push
add
in
sbb
and
and
add
or
sbb
adc
das
push
or
notb
lds
jno
pop
sbb
adc
inc
or
add
out
sbb
sub
sub
or
pop
xor
and
fwait
aas
push
push
cmp
and
adc
inc
and
and
jmp
pushf
add
lock
aaa
dec
xor
das
add
sbb
add
cmp
sahf
push
push
sbb
mov
jge
aas
or
xor
pop
xor
jmp
fidivs
add
adc
sub
add
lcall
and
add
add
push
cld
sub
jnp
sbb
xor
cmp
pop
sub
add
or
stos
das
dec
push
add
outsb
aaa
xor
add
or
pop
xor
gs
and
add
push
xor
sbb
add
cmp
add
bound
inc
adc
sarl
push
or
adc
and
and
scas
fidivl
or
push
and
and
adc
pop
lods
xchg
imul
and
adc
cmp
and
and
push
or
stos
aad
pop
xor
or
and
xor
clc
lcall
adc
adc
ud2
and
dec
add
add
sbb
gs
cld
cmp
daa
mov
insl
push
add
and
lahf
cmp
push
sbb
jg
pop
insb
pop
fadds
push
inc
and
cld
stos
push
rcrb
sub
rolb
cmp
adc
xor
adc
sysexit
scas
or
loopne
cld
sub
sbb
adc
push
and
jns
inc
roll
dec
pop
lock
push
add
inc
aaa
or
sub
pop
sbb
push
mov
ds
clc
fbstp
cmovl
pop
arpl
sub
sbb
lock
sbb
bound
movups
rsm
cmpsb
jnp
jp
or
and
adc
loop
outsb
or
adc
cmp
sbb
push
push
add
sbb
aaa
adc
and
mov
call
and
push
pop
push
sbb
ret
fcomip
and
or
sub
aaa
push
sbb
aas
sub
sub
dec
or
clc
or
cmp
mov
aas
xor
adc
xor
daa
jae
pop
or
xchg
clc
fwait
inc
insl
adc
sub
sub
push
clc
ja
std
xor
add
add
or
or
add
ds
mov
out
bound
xor
pop
pop
xor
cmp
nop
push
add
add
cmp
sub
and
scas
cld
xchg
xchg
fistl
daa
loopne
xchg
icebp
push
jns
and
inc
push
jg
inc
mov
leave
push
inc
shl
jne
add
lcall
xor
repnz
jns
mov
data16
dec
lock
fs
scas
mov
shlb
and
inc
cs
add
jno
jg
das
mov
inc
ret
and
or
outsb
inc
cmc
push
push
cmp
lcall
pop
pop
in
imul
shll
adc
ja
lcall
xchg
repnz
popa
sbb
cmp
jmp
jp
xor
cmp
sub
pop
jbe
cmp
inc
xchg
icebp
push
and
jp
insl
lock
or
sahf
jmp
and
incl
pop
add
jp
cmp
insl
sbb
push
pop
push
or
dec
adc
dec
pop
push
cmp
push
and
ljmp
shlb
popa
pop
xlat
push
or
sub
pushl
or
xor
pop
out
push
lcall
sub
and
pop
rorb
or
adc
loopne
incl
bound
xor
ja
les
add
dec
inc
adc
push
ret
aam
dec
sub
gs
dec
and
daa
inc
fisubrl
repz
or
jo
lret
xor
inc
sub
adc
jle
iret
sub
sbb
dec
push
iret
adc
and
repnz
cmp
insl
aaa
mov
push
cmp
xor
jno
iret
das
aaa
add
xchg
iret
or
adc
int
adc
outsb
aam
xor
aas
cld
repz
out
sub
shlb
add
leave
sbb
dec
cld
repz
add
cmp
popa
cs
repz
push
push
aas
daa
or
jne
aas
pop
insl
cltd
fidivrl
aaa
dec
mov
jae
aam
insl
lahf
stc
int
mov
mov
adc
or
sar
out
mov
xchg
cli
or
ljmp
jle
fisttps
or
popa
ret
add
leave
cmp
ret
int
or
cmp
sbb
gs
int
aas
fwait
int
sub
cmp
pop
int
daa
inc
xor
add
cmp
testb
daa
dec
sub
mov
cmp
sub
insl
imul
cld
out
add
xor
inc
shll
or
enter
lods
mov
enter
add
cltd
lret
movlps
xchg
icebp
clc
scas
cli
aaa
and
adc
pop
jb
xchg
push
dec
pusha
pop
push
jns
inc
or
aaa
inc
cld
dec
inc
push
repnz
fistps
sbb
popa
xor
xor
or
sbb
sub
or
es
aas
push
iret
lock
in
into
insl
outsb
pop
jns
leave
enter
fs
sub
cs
int
jge
dec
addr16
jns
and
out
bound
push
and
dec
inc
inc
jae
outsl
jle
push
call
aam
rol
push
add
or
and
cmp
pop
push
inc
xchg
pop
push
add
or
daa
xor
rdtsc
add
cld
decl
and
add
add
add
push
cld
pop
in
cli
adc
adc
add
daa
aas
pop
jp,pn
scas
inc
jle
lcall
add
call
cmp
mov
sar
pop
loopne
and
mov
sbb
sbb
add
adc
insl
mov
cmc
mov
dec
or
adc
cmp
and
rdpmc
and
outsl
aam
push
adc
pop
push
add
and
sub
xor
sub
add
and
hlt
cmp
notl
out
cli
sub
cmp
xor
pop
and
or
aaa
mov
das
add
ja
jno
xchg
add
adcb
inc
sahf
mov
cld
out
scas
cs
jge
or
xchg
push
and
sub
inc
outsl
js
fwait
mov
or
shrl
enter
sub
cmpsb
jmp
or
aaa
push
cmp
cmp
dec
adc
jecxz
je
jle,pn
or
adc
inc
dec
push
mov
or
sub
inc
add
dec
add
cmp
mov
push
xor
push
dec
and
sbb
and
push
add
out
pop
sbbb
add
push
push
sbb
lock
sub
fdiv
divb
adc
xor
xor
xchg
das
pop
mov
or
jae
fs
or
pop
sbb
adc
jbe
inc
fidivs
add
push
mov
ret
lcall
and
adc
adc
or
push
dec
pop
xor
addr16
jg
xor
adc
pop
sbb
add
sbb
sbb
adc
and
adc
adc
add
aas
sbb
or
popa
add
icebp
sub
imul
cmp
sub
ficoms
add
ja
push
mov
and
or
jb
aas
sbb
xor
sub
push
cmp
jo
dec
pop
es
adc
cmp
or
or
dec
dec
push
sub
and
push
jle
cmp
shrb
and
popa
inc
or
or
lcall
or
ss
jecxz
push
xor
add
add
xor
pop
cmp
push
sbb
dec
and
cmp
xor
jle
popa
pop
and
inc
je
add
dec
xor
sbb
bound
pop
outsb
sbb
sbb
dec
and
pop
jae
sbb
dec
shll
sub
inc
push
jo
cmp
push
add
push
adc
add
fdivs
push
xor
pop
cmp
aaa
aad
dec
xor
sti
mov
jno
cmp
incl
push
push
pop
popf
test
cli
imul
jns
pop
jo
jp
dec
or
hlt
pop
mov
mov
push
inc
fcomps
jbe
inc
push
imul
xchg
jge
push
pop
push
inc
push
jl
jno
sbb
sahf
ja
inc
arpl
inc
jge
push
push
pop
incl
pop
jl
dec
pop
shrb
inc
cmp
jno
dec
imul
ja
jne
dec
gs
inc
pusha
data16
dec
jbe
inc
pop
add
dec
ret
test
jno
insb
inc
ja
clc
and
arpl
test
pusha
leave
mov
js,pt
jb
les
pop
loop
dec
jne
pop
push
jns
fs
ljmp
test
inc
mov
ss
imul
outsb
push
aad
insb
jne
pop
jo
out
pop
or
scas
bound
mov
inc
fs
stos
incl
pop
popa
and
hlt
cmp
fstpt
jb
cmp
jmp
push
je
or
enter
inc
cmp
leave
sbb
sbb
addr16
arpl
in
stc
incl
loopne
out
sahf
insb
cmp
jno
call
sub
loope
nop
imul
cli
dec
adc
adc
int
orl
adc
in
cmpsb
dec
pop
hlt
mov
adc
ret
or
xor
push
xor
or
cmp
ss
cmp
mov
sub
sbb
sbb
outsb
pop
dec
lret
jbe
aas
gs
ja
cmp
or
sub
push
fmuls
add
loope
mov
subb
xchg
jg
mov
push
push
cmp
mov
inc
cmp
lahf
lock
or
push
cmp
sbb
add
sbb
ljmp
and
add
adc
das
add
or
ss
cld
das
stc
setge
jnp
mov
jno
into
test
add
insl
xrelease
cmpl
add
mov
adc
cwtl
dec
inc
ds
in
mov
inc
pop
addr16
push
pop
aas
pushl
mov
inc
pop
imul
push
mov
mov
xchg
mov
scas
or
dec
xchg
mov
inc
addr16
incl
jl
jnp
pop
lock
test
sbb
je
fidivrs
xor
mov
pop
mov
and
xor
jae
cmpsb
fs
out
sahf
lret
jb
mov
jae
into
add
dec
fwait
daa
mov
sub
cmpsl
out
jg
jo
loop
push
popa
mov
jmp
mov
mov
jno
inc
out
add
dec
fistpll
and
pop
mov
and
jp
cltd
dec
pop
jo
insb
inc
xchg
jp
fs
mov
xchg
sahf
sahf
icebp
xchg
dec
jne
add
xchg
or
push
repz
xor
lahf
xchg
push
pop
adc
jne
push
test
aaa
pop
dec
les
cmp
repnz
mov
jb
fs
fimuls
pop
dec
and
mov
adc
inc
popa
iret
out
and
loope
dec
mov
jle
xchg
add
out
sbb
push
ds
dec
and
cmp
pusha
subb
iret
push
pop
cmpsl
fimuls
iret
repz
aaa
dec
or
imul
push
xchg
cltd
mov
nop
xchg
xchg
xor
lahf
push
and
dec
push
jno
mov
popa
jae
sub
inc
leave
mov
adc
jb
lahf
dec
frstor
cs
sbb
push
stc
bswap
jae
mov
test
lock
aas
sahf
roll
cltd
ds
test
inc
cld
sbb
addl
imul
shrb
inc
popa
inc
dec
mov
mov
inc
rcr
jno
dec
js
adc
pop
stc
pop
repnz
adc
outsl
jb
imul
cmp
push
dec
add
add
mov
dec
dec
clc
shr
push
iret
out
sub
inc
jge
outsl
dec
in
lahf
xchg
insb
outsl
inc
push
cwtl
je
xchg
in
clc
jo
dec
ret
fimuls
addb
mov
mov
xor
push
ret
data16
xchg
mov
test
push
int3
data16
test
subb
jae
data16
repz
push
movsl
xchg
mov
or
jo
mov
push
movsb
push
inc
jp
pop
mov
push
dec
dec
sahf
imul
inc
push
das
lock
lods
mov
ja
jno
insb
ljmp
pop
push
xor
inc
clc
jg
adc
pop
mov
repz
loopne
mov
outsl
push
pop
dec
leave
jg
mov
mov
push
out
imul
xor
call
jnp
inc
jae
xchg
or
decb
addb
addr16
dec
repz
mov
adc
cmpsl
out
inc
dec
sahf
dec
mov
cmpsl
push
lahf
push
out
js
inc
fs
pop
pop
fsubs
xor
xor
jp
outsb
mov
add
data16
lahf
and
fdivr
stos
jg
sahf
xor
xchg
shlb
aas
clc
inc
inc
push
adc
cltd
out
add
int3
cmpsl
adc
dec
scas
pop
loop
out
out
mov
jbe
mov
mov
mov
ja
dec
push
aas
lahf
push
sbb
dec
dec
out
out
push
xchg
lahf
lahf
pop
je
orl
imul
jp
stc
outsl
mov
push
stos
fisubs
orb
dec
push
jns
sbb
dec
and
cmp
roll
aas
dec
jno
adc
pop
inc
sahf
sbb
inc
pop
xchg
imul
jb
sub
iret
outsb
fwait
lahf
cmp
add
iret
insl
lahf
cmpsb
adc
inc
or
shlb
hlt
sbb
rorb
popa
ret
mov
sbb
aad
dec
add
jg
ljmp
mov
or
and
push
aam
jo
add
inc
dec
mov
rolb
out
push
and
inc
dec
jl
lcall
decl
or
insb
push
je
inc
out
jo
loop
gs
fs
lret
xchg
clc
dec
pop
mov
pop
push
inc
lds
loopne
dec
movb
insl
call
push
into
decl
cmp
ja
imull
sub
clc
dec
push
push
into
jae
sub
push
adc
sbb
cmp
rcll
je
inc
repnz
inc
jl
js
mov
jmp
push
inc
stos
fsubrs
inc
fnstenv
daa
fcompl
and
pusha
dec
aam
insb
or
or
inc
pop
movsl
movsb
cmp
lea
dec
pop
dec
xchg
popf
and
xchg
aas
mov
scas
cs
cmp
push
cmp
lret
xchg
mov
out
lahf
cmpsb
dec
or
sarl
jo
dec
lahf
sbb
test
pop
stc
cmpsl
dec
shr
push
mov
cltd
mov
negl
inc
push
mov
es
mov
ljmp
mov
shl
pop
sbb
cli
iret
mov
cmpsl
lahf
movsb
hlt
push
pop
fdivrs
push
ficomps
push
inc
push
mov
jl
mov
fldcw
ja
jno
lock
scas
test
daa
mov
jo
call
inc
fdivs
mov
mov
out
and
lahf
lahf
into
jo
scas
cld
in
mov
movsl
jbe
jp
adc
sub
daa
sbb
pop
dec
mov
nop
push
jmp
out
lds
je
jb
dec
cvtps2pd
xchg
xchg
push
jmp
rclb
leave
dec
inc
dec
stos
addl
dec
testb
hlt
push
jns
dec
xchg
aas
dec
xorb
jo
sbb
sub
das
mov
sbb
dec
fidivrs
lahf
adc
inc
push
mov
cltd
mov
dec
push
dec
enter
mov
repnz
repnz
or
push
jle
jl
mov
jae
in
dec
xor
icebp
mov
jne
fmuls
es
pop
aas
fwait
sahf
daa
daa
sbb
ja
lahf
xchg
ja
inc
sbbb
dec
xchg
andb
xchg
mov
aas
xchg
cmp
popa
and
mov
mov
inc
add
push
jno
dec
jge
les
out
insl
pop
dec
pushf
rcrl
repnz
jg
dec
sti
dec
inc
push
je
outsb
push
outsb
lock
jnp
cld
aas
xorps
lods
pop
into
dec
pusha
je
cli
pop
pusha
aad
enter
pushf
pop
decl
ret
and
bound
fs
in
ret
pop
data16
jb
sti
das
jl
dec
xchg
cld
das
out
dec
inc
pop
popa
and
jno
push
addr16
sub
cs
xor
dec
sbb
fnsave
lret
sub
fwait
inc
pop
jne
gs
push
clc
sar
iret
mov
in
adc
add
dec
outsb
notb
addr16
cmpsl
sbb
loop
dec
jnp
jns
in
scas
jg
stos
inc
cli
je
popf
out
fwait
dec
gs
outsl
sub
das
xchg
jg
mov
sahf
jb
pop
jns
mov
push
push
cltd
inc
fs
pop
mov
jmp
adc
mov
mov
loope
dec
xor
insb
jle
fidivrs
xchg
or
add
jno
lahf
and
cmp
adc
dec
push
pop
mov
sub
jl
mov
mov
inc
jle
repz
dec
push
out
inc
sahf
fidivrl
dec
adcb
aas
out
fisubrl
xor
dec
mov
dec
jne
fwait
xchg
or
xor
and
jo
pop
xor
lods
aas
movsb
xor
lea
dec
pop
movsb
push
inc
hlt
mov
bound
jle
addr16
cmp
pop
daa
jle
ja
pop
iret
push
das
jl
jbe
sub
mov
popf
out
dec
mov
daa
bound
lahf
mov
xchg
insl
inc
jge
xchg
xchg
loop
call
pop
call
dec
jno
lcall
fs
push
loop
aas
cmp
jae
jle
jmp
dec
jg
sub
repz
cli
out
je
outsl
and
jne
mov
lahf
dec
dec
ss
imul
cmp
pusha
inc
pop
popa
pop
rolb
push
popf
fimuls
scas
and
or
jg
cmp
xchg
push
push
push
je
inc
jnp
out
mov
lods
out
insl
fidivrl
dec
pop
test
in
inc
gs
xlat
xor
out
push
andb
pushf
dec
bswap
repnz
loopne
iret
aas
call
jne
out
pop
inc
shr
dec
pop
push
ret
mov
fidivs
fstpt
dec
dec
mov
out
push
mov
cld
iret
stos
scas
aas
outsl
mov
cmpsw
leave
pop
mov
outsl
addr16
fwait
dec
jne
dec
ret
jo
add
sub
fs
mov
stc
pop
mov
fucomip
ja
cld
push
gs
mov
icebp
cmpsb
imul
dec
je
jge
inc
cwtl
sbb
ret
lret
push
pop
dec
mov
das
outsb
aas
imul
xor
jle
or
and
inc
pop
push
push
insb
lcall
imul
outsb
notb
dec
mov
fwait
dec
dec
pop
xchg
fs
aas
repz
cmp
jo
xchg
ret
cli
jns
ja
stc
push
inc
lea
call
or
dec
pop
cmpsb
std
push
pop
je
cld
xchg
jno
add
in
sarb
dec
jne
test
stos
jns
sub
outsl
xor
out
jnp
sar
dec
sub
xor
push
idivb
dec
imul
inc
or
pop
jp
pop
lahf
dec
ja
fwait
and
lcall
mov
inc
xor
lahf
arpl
push
sbb
gs
push
das
inc
sarb
cmpsb
jg
pop
inc
dec
dec
testb
nop
rclb
xchg
pop
dec
inc
stos
cmc
sbb
sahf
inc
popa
les
dec
cmc
xchg
push
pop
enter
je
mov
cmc
leave
addr16
pop
jns
jmp
mov
add
or
jle
jl
lret
xchg
cld
push
cmp
dec
imul
jle
and
test
loopne
jle
js
repnz
or
lret
mov
aam
fists
and
dec
inc
daa
xchg
iret
inc
les
loope
mov
sahf
clc
imull
add
jnp
sahf
lods
jns
pop
ds
scas
arpl
lahf
pushl
adc
push
jmp
leave
dec
ljmp
push
dec
jl
fisubs
dec
addr16
xchg
popl
insl
mov
cmc
bound
shll
decb
mov
pop
cld
jae
outsb
insb
lds
mov
insb
jle
jmp
scas
adc
dec
add
pop
sahf
adc
iret
push
ds
lock
xchg
into
sarl
int
mov
pop
xor
jne
shrl
scas
loopne
xor
push
push
adc
cltd
inc
stos
xchg
fs
loope
dec
ret
xchg
mov
pop
inc
outsl
dec
xor
mov
sbb
jbe
icebp
pusha
push
lahf
inc
dec
insl
scas
stc
sarl
cltd
nop
push
jb
push
insb
loop,pt
ljmp
js
or
out
rorl
js
cmp
stos
push
popa
or
add
nop
dec
imul
in
or
out
dec
daa
push
push
das
inc
into
mov
imul
cs
xchg
test
lahf
jmp
pop
mov
sub
pop
inc
pusha
sbb
out
imul
sbb
test
cmpsb
add
and
out
xchg
out
xor
pop
push
jbe
aaa
lods
lahf
das
popf
jmp
out
cmc
scas
pop
cmc
mov
sbb
arpl
add
lahf
sbb
repz
jg
push
dec
jge
out
dec
inc
add
cltd
jecxz
cmpsl
lahf
insb
int3
test
push
jns
stos
lcall
jg
and
dec
iret
es
cmpsl
pop
push
aas
or
addr16
out
inc
xchg
mov
test
inc
dec
fdivrs
sub
out
push
adc
add
lcall
inc
aam
pop
inc
dec
aad
pop
jle
fs
cmpsl
push
push
inc
scas
mov
xchg
sahf
loopne
lahf
popf
in
dec
int3
cmpsl
pop
mov
fldt
std
push
add
pop
cs
jbe
repz
mov
inc
dec
out
push
pop
ds
push
xchg
outsb
pop
faddl
outsl
sahf
pop
stc
repz
fistpl
xchg
aad
jle
xchg
test
push
aad
aad
or
jno
ds
dec
mov
rol
lahf
jmp
inc
jnp
fstpt
cltd
insl
inc
and
pop
fistps
scas
out
test
mov
push
icebp
inc
push
add
mov
inc
in
lahf
outsl
mov
fwait
jg
cmpb
mov
sti
incb
pop
fists
jp
decl
jo
test
dec
sub
jo
cmp
arpl
and
js
divb
mov
pop
data16
xchg
add
call
in
jo
lods
fwait
inc
dec
movsl
stos
inc
cmp
filds
imul
dec
jnp
inc
dec
ret
dec
shrb
insb
push
sbb
je
ret
xorl
cmpsb
dec
cld
movsl
jae
cmp
pushl
cmpsb
pop
mov
lods
fs
inc
mov
pop
pushf
insl
push
cmp
call
xor
dec
push
add
dec
out
jnp
notl
jae
test
push
dec
xchg
dec
gs
push
imul
inc
inc
outsb
mov
inc
and
ljmp
scas
insl
gs
pushf
or
pusha
dec
loop
push
leave
mov
jg
test
dec
insl
scas
mov
addr16
dec
popf
bound
xchg
cmp
subl
dec
cmp
push
lods
xchg
xchg
cmpsb
mov
enter
jg
fnstenv
pusha
xchg
gs
push
dec
das
mov
out
xor
xchg
out
gs
mov
lcall
cmpsl
jno
mov
jnp
lahf
xchg
dec
mov
sbb
add
xchg
mov
inc
push
outsb
test
push
mov
xchg
imul
cmpsb
lcall
or
or
sub
add
out
cmp
cmovs
add
xchg
bound
daa
sbb
and
dec
mov
adc
add
sub
or
add
sbb
xor
pop
or
adc
xor
aaa
aaa
xor
sbb
es
sbb
adc
pop
or
es
imul
or
and
jg
lods
imul
aaa
and
or
add
pop
xor
aas
adc
pop
lock
adc
aaa
adc
push
pop
sbb
push
or
cs
cmp
xor
add
and
inc
or
jg
push
push
adc
das
pop
add
add
adc
sub
ljmp
cmp
imul
pop
sbb
sub
sub
out
outsl
sub
aaa
and
gs
jl
adc
add
xor
xor
xchg
sbb
dec
in
insb
xor
pop
ret
ss
sub
adc
aas
aas
or
dec
push
adc
idiv
das
cmp
cs
pop
and
xor
and
jg
jo
jp
xor
and
lar
xor
push
push
and
sbb
mov
dec
xchg
inc
xor
sbb
pop
pop
xor
xor
and
gs
pop
or
and
lcall
xor
and
sub
adc
cmp
aaa
adc
sub
sbb
aas
xor
sub
add
and
and
sub
clc
xor
out
mov
outsl
ds
adc
sti
outsl
cmpsb
push
and
sbb
pop
add
jae
push
or
xor
xor
push
xor
or
cmp
pop
push
xchg
loop,pn
daa
inc
cmp
sub
cmp
std
fistpll
mov
add
add
pop
adc
sub
call
cmp
pop
js
cmp
cmp
adc
sbb
and
daa
or
cmp
sub
or
or
aad
add
add
add
or
jne
pusha
pop
ljmp
mov
sub
das
and
and
add
aaa
cld
cmp
sbb
or
add
cmp
fbld
pop
andb
daa
add
daa
ss
add
sub
push
adc
ds
jbe
cmp
or
inc
dec
je
sbb
dec
sbb
dec
cmp
add
push
or
or
inc
popa
data16
xor
inc
xor
or
or
ret
jbe,pt
jg
inc
sub
aas
or
adc
or
sahf
jnp
jmp
adc
cmp
xor
sbb
and
add
jb
mov
xor
es
cmp
popa
inc
sub
dec
and
cmp
adc
add
cld
sbb
sbb
pop
aaa
xor
and
sbb
pusha
aas
fcompl
xor
mov
fwait
outsl
aaa
xor
add
pop
sbb
mov
adc
cmp
cmp
push
adc
pushl
sub
or
cmp
das
daa
add
and
mov
sbb
dec
call
sub
aam
add
pop
mov
ss
cli
dec
sbb
and
xor
cmp
idiv
lock
add
or
loopne
das
adc
pop
sbb
popa
clc
xor
and
mov
and
cmp
pop
or
push
pop
sbb
icebp
jmp
pop
sbb
sbb
cmp
aaa
or
mov
add
es
lods
jge
xor
sbb
pop
data16
or
pop
or
jo
ja
and
xor
loope
adc
dec
adc
sub
ss
cs
sub
pop
pop
sbb
lcall
decl
sbb
sbb
sub
cmp
dec
in
sub
pop
sbb
push
pop
les
out
cmp
xor
and
push
into
xor
ds
adc
sub
pop
and
hlt
push
aas
sbb
push
pop
cli
or
pusha
push
and
push
jmp
pop
dec
xor
adc
sub
sub
sub
dec
push
daa
and
aaa
cld
mov
inc
push
sub
stos
pop
nopl
or
daa
push
add
hlt
lcall
xor
sub
sub
and
dec
push
push
cmp
dec
xchg
add
data16
sbb
add
add
or
cmp
add
cmp
daa
adc
dec
push
test
cmp
in
mov
sub
pop
jns
push
add
sbb
fcomip
and
adc
sub
cmp
pop
inc
aaa
add
nop
pop
xor
xor
orb
clc
sub
mov
add
mov
pop
es
and
jb
je
jmp
adc
aas
or
sub
or
invd
and
pushf
pop
cmp
fcmovbe
sub
loopne
jp,pn
sbbl
push
jp
push
test
and
fcomip
mov
push
icebp
imul
out
or
repz
sbb
sub
sbb
push
cltd
sbb
sub
sar
adc
push
jne
testb
sbb
lcall
push
add
and
movsl
push
aaa
sbb
add
daa
xor
jmp
and
sub
cmp
inc
push
fcoms
loopne
sub
pushf
add
or
jb
xor
lcall
adc
sbb
sbb
shlb
push
js
cmp
scas
inc
popa
test
aam
or
push
aad
and
dec
and
cmp
xor
adc
jns
inc
mov
sub
cmp
pop
pusha
push
sub
adc
xor
xor
and
push
out
jecxz
icebp
es
and
fsubl
mov
mov
jo
push
and
pmulhuw
mov
mov
call
mov
dec
insl
scas
xchg
andl
mov
outsl
add
or
dec
nop
push
push
sub
mov
bound
inc
push
sub
jo
fisubs
jne
jmp
outsl
jl
and
sbb
sbb
or
sub
clts
je
call
scas
outsl
lahf
fs
outsb
fs
sarl
hlt
addr16
popa
repz
popa
ljmp
pushl
inc
int3
outsl
push
inc
in
ja
je
inc
outsl
jle
xor
das
es
mov
lret
out
nopl
int3
push
imul
js
adc
mov
push
into
push
dec
push
dec
shll
inc
pop
popa
cmpsb
cltd
push
outsb
js
inc
insl
jns
dec
inc
stc
cmpsb
imul
dec
shll
dec
pop
stos
aaa
dec
je
dec
jb
push
jle
pusha
or
push
daa
mov
pusha
sahf
outsb
jle
jne
add
dec
add
cmpsb
inc
dec
inc
cmp
pop
add
lcall
outsb
add
jge
jl
xor
shll
cmp
inc
sarl
jge
push
jecxz
dec
ja
push
dec
hlt
cmp
leave
repz
push
fninit
arpl
repz
repz
push
mov
iret
mov
push
jg
fs
cmpsb
subl
arpl
inc
es
dec
imul
push
xchg
push
movsbl
aas
push
inc
or
sbb
stc
inc
xor
jg
test
das
scas
loopne
inc
mov
inc
push
rorb
mov
movsb
pop
mov
ret
lar
pop
sbbb
loope
cmp
js
push
mov
scas
mov
fnstenv
mull
sub
jbe
fisubl
gs
dec
lcall
mov
or
pop
xor
inc
pop
and
jge
ds
iret
gs
jbe
stc
out
out
push
push
jmp
call
lahf
jg
dec
jne
dec
fdivs
mov
dec
pusha
inc
lahf
jg
stc
movsl
fsubrs
lock
pusha
jbe
loope
pop
jbe
in
jg
stc
out
pop
jge
ret
pop
xchg
iret
addr16
dec
rol
inc
popa
stc
out
outsl
push
ret
inc
jb
adc
push
inc
jb
out
jle
xor
xlat
push
dec
pop
mov
jg
push
dec
inc
sub
adc
movsl
xchg
jno
fwait
lret
pop
cwtl
in
xchg
xchg
dec
aaa
fwait
dec
test
sahf
hlt
jnp
movsl
hlt
inc
pop
sarb
lcall
repz
arpl
int
jge
xlat
sahf
cmp
pop
arpl
pop
inc
push
aam
lret
mov
dec
jno
sarl
sarl
sti
jae
lret
dec
iret
jmp
adc
fs
and
dec
jne
icebp
push
inc
jmp
inc
sbb
enter
lret
jns
or
jle
xchg
dec
adc
dec
inc
sbb
in
push
pop
pop
idivb
int
jle
push
jns
lret
dec
fadds
push
std
pop
int3
push
cmp
mov
movsb
icebp
hlt
pop
jns
lock
lret
sahf
pop
inc
jmp
add
sub
jne
jle
push
ljmp
adc
pop
xchg
inc
jl
jnp
pop
pop
push
push
mov
fs
push
dec
ss
insb
lock
in
add
jo
sbb
fsubl
push
movsb
outsl
jmp
push
mov
ss
push
ds
adc
adc
sub
push
add
cmp
add
sbb
push
or
incl
and
daa
and
push
adc
ss
sub
ret
jo
push
dec
inc
je
mov
push
gs
inc
dec
imul
pop
jl
popa
jno
inc
jno
inc
imul
dec
pop
inc
xchg
lret
push
mov
push
add
cmpsb
jo
inc
push
maxps
femms
pop
push
mov
cmp
or
je
mov
push
add
add
adc
adc
xor
das
test
sub
sub
xor
sbb
cmp
in
cmp
aas
and
push
push
clc
xor
xor
sub
push
or
push
lcall
insb
push
xor
dec
iret
das
das
out
repz
clc
shl
sti
mov
or
xor
xchg
cli
popa
inc
inc
test
xchg
shll
mov
mov
imulb
and
mov
cmp
dec
xchg
mov
push
movsb
xlat
sub
outsb
xchg
icebp
xchg
rcll
out
push
sti
stos
pop
xor
lea
jge
xor
ret
pop
cltd
jne
das
subb
scas
repz
aas
lret
stos
popf
xchg
mov
inc
jae
adc
xchg
int3
jne
pop
cmp
ja
inc
fs
dec
inc
lcall
lret
adc
mov
jg
mov
jg
sbb
or
push
jb
pop
dec
inc
push
pop
jns
sub
cmp
mov
ljmp
pusha
and
dec
inc
and
dec
push
pop
pop
popa
das
xlat
cmp
jb
aad
lahf
cmc
cmp
test
mov
and
lahf
jecxz
dec
sub
cmp
jnp
or
fimuls
dec
pop
aam
jno
imul
push
jo
jno
inc
jns
out
ss
lea
ja
inc
data16
jo
cmp
lahf
iret
pop
out
arpl
adc
repz
hlt
stc
mov
or
mov
jns
sub
mov
leave
and
or
sub
out
pop
scas
dec
jge
into
fst
jg
jg
and
sbb
add
push
or
cld
xor
cmp
test
mov
dec
clc
dec
test
inc
push
xor
xor
xor
pop
add
sbb
aaa
xor
pushl
imul
xor
add
ret
xor
sub
xchg
out
jnp
pop
jg
hlt
dec
pop
adc
lods
pop
and
daa
stc
and
ja
sbb
push
xor
outsl
shlb
pop
mov
cmp
or
or
jp
arpl
jae
jae
inc
lcall
jle
push
jns
jns
inc
add
or
sub
sub
and
adc
and
mov
push
sub
sbb
or
cmp
pop
lock
cmp
jbe
xor
sub
and
ss
sbb
cmp
and
add
dec
jecxz
and
dec
enter
push
fistps
xor
adc
add
or
add
sbb
xor
popa
dec
dec
inc
sub
sub
add
and
xor
push
sbb
sbb
xor
adc
add
sub
xor
inc
ja
add
pop
cmp
push
nop/reserved
or
or
and
xor
lahf
mov
ds
or
xor
sbb
inc
jbe
add
addr16
xor
sbb
push
push
pop
cmp
cs
jp
filds
les
jne
cmp
jmp
cmp
xor
sbb
adc
add
int3
dec
bound
sbb
sbb
ud2
out
and
clc
pop
xor
add
jle
add
mov
ljmp
popa
outsb
sbb
push
sub
xor
sub
or
sub
add
or
xor
daa
push
bound
xor
sub
jnp
sbb
sub
sub
aaa
xor
pop
or
and
adc
push
push
push
sub
adc
aaa
ss
add
ss
add
add
xor
and
pop
xchg
cs
and
and
or
xor
add
jg
jmp
sbb
xor
mov
and
push
push
lcall
sbb
xor
sbb
daa
js
mov
push
add
cmp
xor
cmp
sub
cmc
loop
dec
pop
lahf
push
insl
jp
mov
cmp
sbb
cs
mov
sbb
or
and
sub
cmp
cmp
xchg
xchg
xor
insl
jp
sbb
sub
sub
or
and
aaa
and
sub
sub
xor
inc
xor
push
adc
jo
cmp
sub
adc
fmuls
inc
dec
or
dec
push
sbb
adc
adc
mov
ficoml
cmp
push
cld
sub
xor
add
fdivr
pop
mov
or
cmp
sbb
add
outsb
dec
jbe
in
je
jo
shrb
adc
aaa
xor
mov
mov
popa
xchg
lds
pop
pop
jno
cmp
fmuls
xor
sub
xchg
aam
outsb
jmp
add
movsb
add
add
adc
mov
sbb
mov
lahf
push
and
cld
jne
jmp
lahf
sbb
wbinvd
or
sbb
sub
gs
repz
adc
shrl
dec
push
imul
jb,pn
ja
cmpsb
jmp
cs
inc
nop
pop
stc
xchg
sbb
imul
add
jns
push
sub
adc
daa
push
xchg
push
xor
shr
adc
aaa
jg
pushl
out
nop
fstpl
andl
inc
mov
adc
rcll
mov
test
ljmp
enter
repz
fnstenv
les
mov
stc
pop
mov
jmp
out
imull
xchg
subb
xchg
les
xor
ljmp
dec
leave
lcall
lret
sti
mov
les
mov
jmp
xchg
popa
dec
ljmp
loopne
xchg
mov
jmp
test
and
xchg
sub
ret
test
and
pop
pop
pop
push
lock
jmp
mov
add
sahf
xlat
lret
popa
loopne
lahf
ss
mov
pop
mov
pop
rol
xor
add
push
inc
xchg
loope
jns
xchg
dec
sbb
pop
loopne
incl
cli
fisttpll
mov
and
lcall
xchg
dec
mov
lcall
cmpsb
rolb
dec
jnp
mov
popl
in
jg,pt
mov
or
ljmp
mov
out
sub
and
test
cmp
iret
cwtl
jne
out
xchg
jno
xor
or
andl
es
jne
jmp
add
shrb
push
sbb
mov
not
out
jne
push
jmp
pop
hlt
jg
fcoml
mov
jo
push
xchg
aam
push
pop
adc
js
in
pushl
pop
fstl
fldt
push
sahf
or
dec
push
into
mov
inc
mov
xor
out
mov
mov
pop
dec
test
cltd
call
imul
outsb
push
inc
pushl
mov
enter
outsl
test
sub
aad
lods
in
dec
pop
mov
adc
inc
in
xor
push
mov
sub
xor
ror
shlb
ret
out
out
pop
mov
jmp
rcrl
and
xor
jg
inc
push
mov
ds
mov
jmp
movsb
mov
cli
decl
clc
sub
lock
and
pop
icebp
call
aad
jg
addr16
fstpt
cmc
mov
out
jae
mov
shrl
ds
nop
push
aam
iret
faddl
mov
push
inc
aaa
push
dec
ficoms
loope
jns
push
je
jp
inc
xchg
xchg
lock
dec
jbe
lea
orl
push
jb
dec
sub
push
inc
adc
filds
ds
adc
pop
sbb
outsl
ss
add
daa
pop
ja
daa
push
sub
pushl
add
add
pop
pop
xor
or
pop
inc
push
push
test
mov
and
jg
pop
dec
inc
inc
pop
fs
dec
and
or
sbb
add
add
and
sbb
filds
loopne
and
js
sbb
or
push
or
and
inc
or
lock
pop
or
addr16
jne
inc
push
push
jns
sub
das
xor
cmp
inc
pushl
xchg
ret
jle
inc
pop
and
aaa
push
adc
ds
and
and
or
sysret
dec
dec
pushl
das
cmp
or
lcall
and
xor
sub
push
cmp
sub
sbb
pop
add
cs
jnp
and
cmp
es
xor
dec
push
add
or
add
push
pop
imul
pop
or
and
xor
sub
sbb
or
add
sub
jb
outsl
jbe
decb
jbe
imul
sbb
fbstp
sub
push
push
inc
insl
inc
pusha
add
sbb
pop
ud0
imul
or
add
mov
gs
jae
sbb
and
or
sbb
cmp
or
pop
testb
sbb
or
sub
xor
sbb
and
cmp
es
xor
mov
or
or
push
and
clc
mov
aas
cmp
aas
and
push
add
sub
sbb
lcall
add
jg
push
pop
cs
jmp
jle
jnp
push
call
pop
adc
icebp
jp
dec
adc
inc
inc
pop
cmp
inc
std
pop
mov
jge
jne
pop
decl
adc
jne,pt
push
out
fldcw
insb
pop
sti
push
test
mov
incl
cs
aaa
jns
call
lcall
test
pop
jnp
insl
pop
xor
push
jbe
jmp
push
dec
in
fwait
aaa
jmp
arpl
or
mov
push
push
imul
cmp
incl
push
leave
jg
pop
sub
jbe
push
jno
jne
inc
xchg
sub
lcall
jl
push
mov
inc
inc
push
jp
pop
xchg
jo
jne
dec
or
sub
jno
dec
push
push
or
mov
push
fists
or
decl
push
jmp
mov
movsb
inc
nop
push
inc
push
pop
inc
push
call
inc
fsts
pushl
pop
imul
ja
arpl
pusha
mov
inc
mov
outsl
pop
imul
inc
inc
jnp
adc
in
jnp
inc
cli
push
jg
bound
jmp
je
dec
jge
xchg
inc
pop
pop
jp
pusha
jle
jb
addr16
ja
mov
jae
dec
push
inc
dec
cmp
test
cld
jns
dec
cmp
jp
inc
int
mov
jg
pop
test
jno
jnp
push
fdivrl
push
mov
push
insl
sub
pop
test
pop
notl
aaa
cld
pushl
jp
dec
fidivrl
gs
insb
inc
push
fcoml
pop
mov
aaa
std
shl
lahf
imul
dec
jno
imul
ret
lcall
outsl
cmpsb
jp
pop
icebp
jo
jae
ljmp
cs
ret
in
push
xchg
jb
jbe
inc
inc
inc
inc
jbe
inc
sub
jp
push
int
fildl
jg
mov
cmp
jg
fcoml
inc
aad
jmp
inc
mov
mov
push
pop
push
pop
ret
pop
imul
sar
dec
lret
push
testb
xchg
push
xor
inc
jge
jg
push
lock
decl
dec
jns
push
jb
js
dec
dec
frstor
push
push
cld
pushl
push
je
push
sub
pop
push
push
dec
loope
jne
jbe
jo
dec
push
push
insb
pop
push
test
ja
jo
aaa
push
sbb
mov
ja
push
cs
cmp
shll
push
push
test
dec
inc
ds
cltd
dec
pop
bound
dec
sbb
jns
inc
lea
pop
hlt
mov
les
je
jl
push
out
jecxz
xlat
stos
gs
push
xchg
pushl
pop
cltd
jnp
jae
pop
jo
imul
addr16
jg
and
sbb
jns
push
adc
data16
push
mov
push
push
inc
push
inc
mov
std
sbb
jle
jo
inc
aas
inc
clc
and
notl
sarb
jg
push
std
jge
pop
scas
inc
sahf
ja
push
mov
inc
adc
aas
jo
inc
or
jl
push
popa
mov
jge
inc
cmp
pop
cmc
jle
jnp
inc
mov
jns
js
inc
push
push
mov
insb
push
pop
push
or
ja
inc
aaa
imul
testl
dec
inc
gs
mov
notb
push
pop
mov
jb
jl
dec
inc
movsl
decl
and
ja
push
cmp
imul
je
shlb
jbe
int3
push
jno
outsb
incl
into
gs
pop
jb
dec
data16
or
js
addr16
dec
mov
jno
xchg
jge
push
sub
jae
jp
jle
push
dec
pop
popa
pop
pop
jge
dec
jo
or
decl
jl
inc
leave
pop
rcrb
hlt
pop
pop
out
sahf
jo
js
push
inc
jnp
incb
push
int3
ficoms
ret
push
fsts
fistpll
push
repnz
fnstcw
xchg
inc
inc
jne
outsb
or
bound
xor
push
adc
jg
das
cli
int3
dec
fsubl
xchg
push
rolb
insl
sbb
dec
fiaddl
jne
jnp
call
std
fimull
dec
subb
jl
dec
jbe
jne
pop
gs
push
pop
dec
inc
jge
rcll
pop
ret
jle
dec
dec
lahf
jge
or
fcomip
mov
dec
xor
and
jae
dec
xlat
dec
xchg
jg
je
jne
dec
mov
lods
mov
push
push
incb
push
dec
je
inc
sti
push
ss
xlat
dec
es
cmovl
push
pop
sbb
outsb
jne
push
outsl
or
leave
pop
dec
add
lcall
jne
jnp
dec
stos
data16
push
push
pusha
arpl
pushw
inc
sarl
js
jle
inc
mov
lea
push
lcall
pop
mull
jl
inc
push
jge
vpdpbusd
dec
daa
jnp
ja
arpl
and
insb
out
xor
jge
je
jo
lcall
cmp
jne
dec
xchg
pushl
std
push
insl
push
gs
bound
js
jo
pop
lret
push
int3
imul
leave
outsl
cli
in
stos
xchg
pop
mov
push
insl
je
jg
dec
insl
jl
addr16
mov
and
outsl
cmp
pop
xor
pop
repz
into
push
leave
cli
vsubps
or
shlb
inc
clc
pop
or
xchg
stos
dec
pop
jo,pt
je
call
ficoms
adc
jle
pop
jl
insb
jne
fidivs
jbe
stos
mov
or
in
push
into
jns
inc
incl
js
jge
inc
cmpsb
inc
xchg
xchg
inc
scas
pop
mov
mov
mov
jge
dec
jp
pop
push
jns
cmp
inc
cmp
incl
inc
sbb
aaa
pop
inc
enter
scas
pop
cmpsb
js
ja
inc
xlat
push
jg
jmp
pop
movsl
inc
cmpb
cmp
push
cld
bound
cmp
shl
cmp
mov
repnz
lcall
dec
outsb
nop
inc
mov
test
push
push
sbb
jle
push
jae
jg
lcall
push
push
arpl
dec
cmp
dec
push
loopne
scas
lcall
jae
jg
mov
jbe
push
pop
insl
cmp
imul
inc
pop
gs
add
jge
dec
dec
jg
jge
adc
je
insb
xchg
xchg
leave
adc
pushl
pop
push
inc
out
in
cmc
pop
mov
lods
imul
cmpb
jb
jl
dec
push
sarb
cs
push
jl
push
jge
loopne
pop
filds
jne
push
xchg
jb
jbe
inc
push
inc
mov
loopne
addr16
inc
cli
jne
jp
push
mov
pop
jle
or
hlt
jp
jg
ljmp
incl
pop
inc
pop
push
pop
jp
pusha
pop
sub
dec
or
mov
inc
ja
jae
pop
loopne
incl
and
data16
push
cwtl
ja
pop
ja
gs
inc
movd
fs
pop
sbb
jns
push
fldcw
pop
rep
mov
jne
out
aam
xchg
jo
jno
ja
dec
fsts
xchg
inc
push
adc
cmc
inc
fildl
mulb
fcoml
inc
adc
jg
scas
loopne
cltd
pop
mov
outsb
js
jl
push
aam
rcll
test
decl
pop
jae
dec
push
push
clc
push
out
dec
loopne
mov
mov
jo
sub
imul
pop
repnz
cmpsb
push
mov
xchg
jb
jg
int
lret
inc
ret
popa
push
pop
adc
jnp
push
mov
fs
std
sbb
fistl
inc
fsubrs
inc
stos
inc
mov
ja
incl
inc
popa
addr16
ficoms
fsts
mov
fidivrl
pop
jle
ja
push
loopne
loop
inc
pop
jo
sbb
decl
push
jno
jle
push
lods
jle
inc
sbb
xchg
sub
mov
mov
pop
je
jne
dec
das
push
cmc
push
xchg
gs
daa
jae
inc
sbb
je
aaa
stos
cmc
addl
xorl
mov
fisttpll
mov
pop
js
push
push
push
fcompl
inc
jg
sub
je
jnp
push
gs
jp
dec
jp
mov
pop
jg
inc
pop
cmp
bound
pop
and
aas
inc
pushl
jp
gs
dec
and
inc
shll
fisubrl
pop
lock
cmpb
mov
xor
mov
pushl
dec
cmp
fwait
inc
pusha
push
test
push
mov
mov
jbe
pop
nop
jo
push
mov
clc
mov
pop
outsb
imul
cmp
jb
push
pop
icebp
outsl
js,pn
pusha
les
push
cli
cmp
dec
mov
cltd
push
movsb
xchg
hlt
mov
dec
inc
ss
or
jno
inc
nop
inc
mov
inc
outsb
push
out
adcl
call
pop
es
push
enter
dec
es
sahf
jns
dec
and
cmp
aaa
imul
pop
sbb
inc
xor
or
add
ljmp
clc
inc
nop
pop
xchg
pop
mov
pop
jl
ljmp
push
das
inc
lret
inc
mov
sub
jge
xor
pop
scas
inc
cmpsl
push
movsb
je
lcall
incb
jl
jb
fisubrl
or
inc
stc
js
pop
fwait
gs
push
js
xchg
lcall
jle
jge
jnp
inc
xchg
pop
sub
push
clc
push
cld
ljmp
jbe
dec
pop
jae
insb
aad
enter
jmp
pusha
xchg
push
xchg
push
xchg
dec
data16
and
push
dec
push
sbb
fldl
je
jb
dec
jl
adc
dec
mov
je
js
jo
pop
hlt
jo
push
mov
pushl
pop
lcall
dec
fs
xor
mov
imul
jl
fs
pop
cmpsb
push
mov
mov
dec
pop
arpl
push
iret
push
sar
ljmp
sbb
inc
mov
dec
inc
dec
bound
js
pop
xor
clc
cmp
jne
pop
shll
dec
fstpt
pop
cltd
jp
jge
dec
sbb
jg
dec
int3
fcomip
scas
mov
pop
xchg
jae
dec
movsl
xor
jne
jno
dec
movsb
dec
mov
shlb
push
idivb
jle
dec
lods
bound
inc
in
ficoml
push
xchg
bound
inc
out
mov
insl
std
lcall
jg
jno
inc
mov
pop
cld
inc
je
push
pop
push
fs
mov
je
jo
jae
jne
dec
repnz
pop
pop
push
outsb
jb
sub
and
je
fbld
add
pop
jb
insl
and
xor
or
xor
sbb
push
xor
jmp
jae
ja
pop
adc
push
repz
inc
divl
je
dec
xchg
jbe
rcrb
inc
dec
add
push
fidivrs
xchg
pusha
outsb
sub
fcoms
jns
je
xor
dec
push
ret
pop
int
xchg
jae
inc
data16
push
bound
data16
push
std
fcomip
iret
in
pop
mov
dec
jbe
dec
push
xor
shll
mov
ret
dec
mov
lcall
push
inc
clc
pop
cmc
das
cmp
jns
push
cmp
loopne
enter
addr16
add
push
adc
sar
jb
pop
push
jne
dec
mov
sbb
cs
pop
cmp
jne
jge
jl
inc
call
jg
push
pop
inc
js
dec
dec
fbld
fwait
pushf
push
jg
xor
push
or
push
push
inc
daa
addr16
pop
or
cmp
sti
jo
inc
and
jle
mov
jle
sub
call
popa
lods
push
nop
fs
mov
lcall
sbb
or
pusha
dec
push
int3
push
fldcw
jae
dec
or
jo
sar
imul
pop
rorl
cmp
jg
cs
jle
jp
push
ficomps
pop
aam
cmovp
jge
jnp
inc
sbbl
pop
aas
dec
or
add
jl
je
pop
sub
outsl
sbb
imul
pop
pop
sbb
xor
ja
pushl
lock
pop
sbb
andb
xor
test
pop
pop
inc
sub
jmp
insb
ljmp
cmp
inc
lods
ja
js
dec
and
outsl
cmpl
pop
pop
out
jae
jno
pop
aaa
jae
push
cmp
clc
or
pop
sahf
jge
sub
push
fwait
jg
mov
push
jg
jle
jns
lahf
inc
dec
inc
add
jle
inc
insb
pop
push
decl
sub
jl
dec
out
std
push
leave
inc
jmp
rolb
push
lock
inc
sarl
adc
or
add
jnp
jne
inc
aam
icebp
cld
pop
repz
stos
jg
pop
movsl
bound
inc
test
js
decl
inc
dec
pop
insl
push
and
pop
or
sub
inc
sbb
sub
and
ficoml
decl
jge
push
bnd
incb
ljmp
test
js
dec
or
jns
inc
xor
pop
adc
loopne
jg
mov
pop
cmp
jne
jge
ss
outsl
clc
jg
out
data16
aad
fcoml
pop
notl
loop
out
jno
lcall
incl
jb
imul
jns
sahf
pop
test
jnp
push
mov
push
roll
pushl
addl
lods
dec
xchg
jge
jle
nop
clc
jg
inc
sbb
push
jl
dec
jle
jge
push
gs
pop
pop
inc
inc
jne
or
ljmp
or
inc
and
jbe
jns
push
xor
or
cld
ss
and
jge
pop
inc
aad
in
jle
pop
std
ja
push
pop
fisubrl
pop
stc
pop
jmp
ret
dec
xchg
push
repz
lret
inc
int3
inc
push
inc
bound
ljmp
dec
push
push
inc
pop
add
xor
arpl
pop
or
mov
ret
push
les
inc
leave
jl
jns
jp
jl
inc
cltd
pop
mov
stos
or
jmp
pop
pop
cwtl
data16
pushf
inc
push
dec
inc
push
sbb
mov
push
pop
push
pop
jg,pt
jbe
jg
jnp
push
sub
pop
stc
jns
lcall
fimull
jle
js
inc
cmp
pop
mov
mov
mov
je
jl
push
mov
ljmp
jp
insl
pusha
gs
pusha
push
pop
pop
push
push
or
js
ljmp
pushl
inc
jo,pn
imul
and
jnp
arpl
outsb
push
in
jns
push
dec
aam
jge
inc
call
inc
push
popa
push
inc
pop
inc
jge
inc
jns
ja
inc
popa
inc
jae
sbb
push
adc
and
js
decl
js
pop
daa
inc
cmp
push
adc
jno
inc
ss
or
jno
jle
xor
lcall
push
sub
inc
in
ficomps
jg
jp
lds
jae
js
jns
inc
repnz
loop
repz
roll
pop
fidivrl
dec
push
ja
incl
mov
inc
lods
inc
mov
push
scas
inc
sahf
data16
incl
push
pop
jbe
pop
jo
pop
jae
inc
inc
outsb
popa
fs
dec
inc
inc
jns
pop
pop
fs
ljmp
mov
insl
jnp
jle
jge
jnp
inc
or
push
and
pop
mulps
iret
js
decl
jle
outsb
pusha
ds
cld
dec
lds
ja
scas
jbe
jg
pushl
jb
pop
push
push
dec
push
push
jno
inc
jno
adc
dec
and
cmp
sbb
push
repz
jo
das
adc
icebp
jl
je
bnd
outsl
mov
xchg
mov
mov
scas
pop
jns
push
inc
dec
cld
incl
push
add
jae
imul
fistps
incl
and
outsb
leave
pop
cltd
pop
mov
dec
mov
inc
outsb
jbe
js
dec
inc
dec
jg
imul
pop
xor
aaa
je
ja
pop
and
push
jecxz
jmp
js
mov
testb
lods
jg
dec
cmpb
pop
lods
jae
dec
sbb
push
push
pop
jo
ljmp
dec
aaa
dec
cmp
jb
jae
dec
rclb
push
jmp
fstl
push
stos
jae
inc
mov
lods
pop
fwait
dec
out
clc
call
pop
push
pop
push
dec
push
insl
fs
insl
pop
dec
sbb
jl
push
or
mov
mov
outsb
loopne
lret
dec
ret
jae
push
mov
mov
dec
push
jb
ja
aaa
adc
imul
push
xor
push
or
lcall
push
in
enter
ljmp
jno
fs
push
lcall
pop
jno
adc
or
and
std
pop
out
sbb
jbe
dec
loopne
clc
mov
fisubrs
push
dec
xchg
dec
aam
jge
pop
ljmp
pushl
arpl
adc
pop
jmp
pop
std
jnp
jo
inc
scas
jae
push
cmc
arpl
sub
arpl
sahf
push
ret
mov
push
inc
arpl
inc
adc
into
jle
jo
inc
xchg
inc
cmpsl
addr16
jne
push
sub
incl
jnp
js
push
std
jp
pop
stos
inc
xchg
jo
push
push
jbe
jb
inc
adc
jno
inc
push
jb
jge
dec
push
cld
jge
inc
movsl
js
pop
mov
mov
inc
outsl
inc
pop
jae
js
jns
inc
bound
pop
jmp
pop
push
jns
dec
out
call
inc
movsb
sahf
scas
mov
inc
push
addr16
inc
or
add
jp
incl
outsb
loope
enter
fstpt
pop
test
popa
test
jno
adc
jg
jnp
imul
push
and
outsb
das
ja
dec
scas
sub
inc
ljmp
dec
popf
jnp
ja
bound
pop
push
jbe
pop
jle
ja
jae
pop
or
jno
inc
lds
pushl
jo
dec
movsb
push
mov
push
dec
je
aaa
push
push
jae
jg
ja
ja
mov
shrl
popf
push
push
dec
pop
bound
adc
jg
scas
sub
fildll
outsb
aam
lods
push
push
mov
pop
inc
inc
inc
ljmp
pop
adc
dec
daa
imul
inc
stos
jno
jg
dec
lods
dec
mov
pop
jl
pop
push
pop
outsl
call
std
pushl
jno
pop
and
push
testl
jp
dec
dec
dec
inc
jp
dec
ljmp
jns
jbe
pop
aam
in
dec
leave
jae
push
sahf
ja
jb
dec
jae
jne
inc
jno
jo
dec
push
push
clc
out
xor
xor
push
lock
fidivl
inc
xchg
outsl
fidivrl
ds
inc
push
jmp
inc
xor
ss
pop
hlt
jp
je
inc
xchg
imul
pop
test
push
dec
addr16
inc
inc
jge
js
xor
gs
cmp
pushl
adc
pop
sbb
jle
inc
lock
mov
push
jo
pop
inc
push
dec
mov
pop
pop
pop
jp
dec
ja
jle
ss
adc
cmp
mov
dec
adc
inc
or
int3
push
inc
int3
pop
jmp
jp
jbe
jle
push
stos
mov
mov
push
push
pop
inc
pop
dec
call
pop
loope
lret
inc
shlb
insl
jecxz
in
popa
aam
mov
push
nop
jg
push
mov
jmp
push
push
push
bound
pusha
outsl
inc
pop
inc
jns
pop
js
jbe
inc
sbb
popa
adc
xor
add
out
ret
cs
inc
sbb
push
xor
jb
inc
inc
in
jno
jmp
jge
push
enter
lds
pop
cli
jl
jns
inc
fbstp
jo
jnp
jp
mov
addb
sbbb
mov
pop
mov
pushfw
push
mov
and
dec
push
pop
negb
dec
lret
push
xchg
insl
test
jl
push
lods
ja
fists
jp
dec
lods
insb
outsb
cmovp
jno
push
fldcw
pushf
imul
push
dec
outsb
pop
jl
inc
cmp
push
scas
gs
jg
inc
pop
inc
dec
mov
rorb
push
mov
popf
jno
jge
imul
pop
pop
pop
add
xor
les
pop
sub
push
inc
out
pop
dec
and
dec
jns
or
push
pushl
pop
fstps
jae
dec
repnz
add
xor
add
sbb
jbe
adc
jmp
cmp
adc
inc
sbb
imul
ds
es
inc
aas
addl
jbe
inc
scas
sbbl
stc
jmp
adc
loope
push
sti
in
aas
sub
movsb
cmp
repnz
and
enter
mov
call
decl
add
aas
test
add
fisttpll
loop
into
das
push
fcmovnb
adc
out
mov
aaa
jmp
jmp
adc
in
out
scas
in
lret
in
or
cld
enter
stos
xor
jmp
out
or
repz
lds
and
adc
cs
in
sub
clc
decl
xor
daa
arpl
test
add
cmpsl
imul
dec
mov
aam
in
adc
jno
xchg
pop
daa
and
sub
bound
jae
dec
ret
cld
jns
decl
push
pusha
je
scas
and
popa
jno
push
pop
push
repnz
mov
push
push
insl
cmp
push
cmp
add
imul
jno
outsl
inc
jle
dec
jns
push
xor
push
inc
andl
inc
xor
lret
inc
shlb
enter
testb
dec
inc
test
sti
dec
decl
insl
xor
sbb
pusha
or
clc
incl
dec
sub
pop
fistl
scas
data16
call
loopne
aaa
movsb
test
inc
fldl
cmp
cltd
cs
negb
scas
mov
or
decl
insb
movsb
sub
xor
jo
mov
sbb
adc
sbbb
lock
mov
and
lahf
cmp
mov
in
aaa
orl
call
sub
lcall
mov
arpl
inc
xor
fadds
lret
sti
clc
pop
add
cli
imul
mov
pop
push
jbe
lret
cmp
sub
add
aas
dec
icebp
popw
jnp
mov
xchg
in
outsb
and
lcall
sti
adc
xchg
sbb
shll
jge
dec
adc
inc
iret
push
es
mov
jg
call
aaa
xor
xor
popw
xor
sbb
jle
pop
and
pusha
jg
add
and
add
cmp
jle
push
or
cmp
outsl
inc
cmp
pop
inc
sbb
adc
xor
xchg
stos
pop
mov
xor
push
or
sbb
inc
mov
pop
mov
or
mov
inc
test
jecxz
or
or
ljmp
cmp
std
xchg
xor
cmp
adc
mov
inc
ret
jne
aam
inc
rolb
pushl
and
xor
mov
xor
mov
jbe
xor
mov
push
cmp
sub
js
xor
ljmp
mov
out
adc
mov
inc
pop
mov
and
push
cmp
dec
dec
dec
sbb
jg
pop
jb
js
jp
orb
repz
lcall
stos
paddusb
stos
inc
adc
cmp
jo
imul
out
add
push
jg
decl
movsl
mov
and
jl
and
mov
out
push
ljmp
fsubrs
gs
add
dec
ds
jns
dec
push
mov
dec
cmp
inc
imul
pop
popa
xchg
cmp
ljmp
imulb
push
jle
cmpsb
bound
jbe
cmp
mov
mov
jae
dec
cs
stc
inc
xchg
popf
lods
insl
loop
leave
cwtl
sub
mov
dec
add
cmp
js
push
adc
js
and
or
jl
dec
outsb
std
sbb
cmp
lcall
stos
adc
dec
or
jle
pusha
ds
fadds
jge
jl
dec
fwait
xchg
incl
jbe
imul
jns
xchg
incl
or
mov
xor
or
pop
adc
jg
pushl
adc
dec
cmp
incl
add
adc
fidivrs
push
ret
lcall
adc
int3
test
mov
or
test
fstps
cmp
jl
pushl
sbb
mov
outsb
nop
vcvtsi2sd
addr16
cmp
jnp
ljmp
arpl
loope
lods
lock
call
jle
in
rol
xlat
pop
jb
call
ljmp
lea
jecxz
idivb
arpl
cmpsb
shll
mov
loopne
out
mov
mov
xchg
lret
lods
decl
mov
jmp
cli
js
in
shll
and
xchg
decl
popa
push
sbb
adc
pop
daa
jno
add
mov
sbb
int3
inc
and
mov
fs
sub
in
add
insl
lea
pop
aam
clc
call
sbb
das
xor
xor
aaa
or
fwait
jne
xor
sbb
out
popa
ds
fistl
mov
cs
clc
lcall
adc
jge
dec
pop
push
jb,pn
lea
push
mov
adc
cld
pushl
lods
repz
sahf
cmp
fdivl
iret
mov
test
icebp
xchg
mov
inc
or
icebp
call
xchg
lcall
pop
mov
in
mov
mov
ljmp
cmp
cmp
push
push
les
test
flds
cld
mov
jge
or
test
xchg
adc
punpckldq
out
push
sub
les
push
aaa
lret
lcall
lock
dec
cmp
cwtl
add
imul
and
jbe
jle
dec
xor
test
loope
and
fcomip
jmp
add
mov
cmp
xchg
or
out
cwtl
enter
adc
fcmovbe
data16
sbb
jb
and
pushl
mov
xor
mov
xor
jle
hlt
test
fwait
and
jg
lcall
cltd
daa
dec
idivl
fcomps
sub
mov
sbbl
frstor
and
loope
enter
mov
mov
jg
jg
add
jecxz
inc
rcrb
sahf
es
jl
mov
and
mov
lcall
sbbb
cmpl
mov
lret
out
decl
out
and
or
push
js
out
mov
fstl
add
mov
pop
or
mov
iret
int3
idivl
cwtl
mov
popa
sbb
xchg
xor
push
cmp
lcall
add
and
and
lock
add
sbb
mov
imull
push
and
dec
push
xor
mov
ficomps
lahf
xor
sbb
jmp
jmp
mov
mov
mov
stos
in
decl
mov
sbb
sub
jg
lods
test
cmp
call
test
shlb
daa
icebp
sbb
sub
dec
add
pop
and
cmp
sbb
jno
add
and
sbb
pop
or
ds
mov
sbb
fnstenv
push
int
dec
daa
jecxz
cltd
push
and
in
cli
incl
mull
hlt
das
lret
pop
dec
and
lret
pushl
lods
add
jl
testl
cli
ljmp
dec
pop
shll
js
js
mov
sbb
rorb
out
add
and
xlat
pop
daa
sbb
and
inc
ljmp
mov
lcall
xor
pop
adc
and
cmpsb
movsb
jle
pop
add
mov
add
jl
jmp
xchg
gs
xchg
mov
scas
ljmp
inc
or
mov
out
push
rcrb
das
clc
leave
lock
xor
scas
xorl
mov
lcall
cmc
jbe
rcrb
jne
lock
add
imul
sbb
lods
mov
push
adc
and
test
sbb
orb
fiaddl
lahf
out
mov
cmp
lcall
pop
xor
xchg
in
loope
sub
mov
nop
add
sbb
incl
hlt
dec
xor
mov
push
xchg
xchg
xchg
mov
daa
dec
xor
fnstsw
xor
push
jl
mov
or
call
sahf
pop
clc
xor
pop
sbb
lea
ljmp
into
mov
outsb
lret
adc
add
les
xlat
fisttps
push
test
and
xor
adc
mov
jmp
jg
daa
das
or
jae
xor
sub
mov
dec
inc
xchg
cmp
xor
jmp
daa
xchg
sbb
push
pop
or
js
subl
pushw
rcll
jmp
xor
inc
nop
mov
pop
dec
jle
dec
and
and
ret
mov
iret
aas
sbb
stos
mov
int3
ljmp
sbb
call
jmp
pop
push
push
call
pop
out
adc
lds
insb
xchg
mov
das
movsl
rcrl
sti
jmp
rolb
adc
sbb
inc
pushf
and
jbe
jb
call
dec
dec
adc
inc
jl
xor
push
dec
xchg
cltd
mov
mov
mov
ja
outsb
mov
cltd
pop
mov
stos
mov
or
dec
push
add
iret
cmp
outsl
add
loopne
sti
xchg
cmp
mov
sub
inc
outsl
clc
mov
and
sbb
cwtl
mov
mov
jg
fs
jne
mov
cs
sbb
push
lcall
xor
cli
dec
cs
decl
dec
out
push
adc
sub
cmp
sub
xor
xchg
cmpsb
jg
cltd
jbe
outsb
int
test
out
mov
or
ljmp
adc
lcall
mov
fisttps
cwtl
push
mov
cs
das
rolb
xchg
cmp
imul
and
in
lret
jg
sahf
sub
in
xor
mov
xchg
out
sub
ljmp
sbb
cmp
incl
pop
push
jb
or
sbb
add
aad
loop
add
in
bound
loope
or
or
cli
pop
cld
filds
shrl
xor
xor
pop
sbb
in
ljmp
xor
outsl
ds
jo
jno
pop
test
jp
and
dec
js
push
add
and
dec
cwtl
orb
xor
add
cmp
sub
jmp
js
or
push
test
jg
incl
adc
adc
pop
das
add
jmp
out
lahf
lahf
insb
xchg
into
or
rorb
jp
push
jecxz
incl
subb
or
push
jg
xchg
inc
jle
mov
add
inc
and
push
push
movsl
ret
pop
or
ljmp
add
pop
and
aam
sub
dec
sub
adc
in
mov
adc
andl
jbe
divl
cli
incl
xor
and
xor
leave
orl
inc
mov
mov
sbbl
xor
jg
icebp
jg
icebp
fisubrs
mov
inc
outsl
ljmp
push
cmp
cmpsb
sbb
les
lea
push
adc
mov
push
loope,pt
jg
cli
lcall
jecxz
dec
clc
ja
or
sub
out
push
test
push
adc
mov
jmp
js
insl
test
sub
or
add
xchg
pop
add
cltd
pop
loope
aas
lock
cmp
sub
jb
out
push
cmp
mov
mov
icebp
lcall
push
frstor
stos
and
xor
xchg
addl
mov
dec
cmp
sbb
in
daa
movsb
add
ss
test
call
dec
cs
xchg
pop
les
ficomps
ss
mov
addr16
adc
cld
jmp
sbb
or
sbb
sub
inc
out
jnp
in
mov
pop
add
aaa
add
jle
mov
sub
decl
fxch
mov
sbb
in
sar
out
xor
nop
push
incl
mov
adc
enter
mov
call
iret
sbbl
rorb
ret
mull
daa
mov
enter
stos
loop
and
ss
mov
sahf
cmp
fs
imul
jmp
push
inc
cltd
idivb
sub
add
add
test
ljmp
in
mov
cmpb
adc
adc
call
arpl
jne
loope
push
jno
pop
rcrl
cmpb
push
in
and
fists
stc
xor
decl
pop
rolb
adc
imul
cmp
repz
push
adc
pop
jge
mov
push
xchg
add
sub
shl
int
scas
dec
bound
cmp
cmc
mulb
imul
and
loopne
rcr
fbstp
or
jle
inc
push
jmp
lcall
stos
fisttps
jnp
pop
jmp
push
mov
pop
mov
jg
or
sahf
ds
and
aaa
or
test
sbb
pusha
adc
pop
testl
std
push
lods
jb
pop
in
mov
inc
sub
sbb
inc
filds
xor
ds
jae
stos
mov
sahf
sub
out
or
jmp
and
stc
rorb
or
xchg
mov
test
cmp
pushf
fwait
stc
jmp
or
es
lods
clc
clc
out
dec
jno,pn
dec
jo
and
or
jae
mov
icebp
pop
and
xchg
push
push
lcall
push
lock
mov
jecxz
xor
lods
mov
icebp
fsubl
push
nop
paddusb
test
mov
es
fwait
mov
pop
fimuls
mov
shrb
lahf
mov
pushl
daa
mov
outsl
sub
adc
cmp
sbb
cltd
and
test
popa
adc
xchg
pop
adc
inc
lcall
shr
cmc
or
jbe
jnp
lea
cmp
cmp
ljmp
inc
sbb
addr16
and
aam
adc
cltd
adc
mov
lods
mov
incl
aas
hlt
push
sbb
sub
add
mov
push
ljmp
mov
cmpsl
sti
daa
lock
adc
daa
enter
mov
test
popf
in
push
aaa
andb
pop
lock
imul
cmp
lahf
adc
sbb
and
aas
mov
mov
adc
adc
sub
ljmp
mov
push
adc
jo
inc
lock
ds
movsl
mov
jne
mov
jnp
push
xchg
sub
in
fwait
and
outsl
or
sbb
nop
ficompl
lods
jge
incl
push
iret
adc
push
add
push
xchg
in
mov
insb
addb
push
add
jg
and
mov
aad
cmp
or
or
dec
fwait
push
inc
add
xchg
out
pop
xchg
decl
sahf
push
push
rclb
sbb
fadds
pop
adc
out
adc
cmp
ljmp
clc
mov
jbe
xor
lods
ficomps
mov
fildll
xchg
or
sti
and
mov
sub
pushl
movsb
aaa
dec
cmpl
add
and
call
sbb
aaa
adcb
push
call
cmp
mov
adc
repz
push
movsb
and
ds
test
test
incl
rorl
xchg
stos
mov
aas
add
lea
sbb
push
ljmp
aaa
outsl
cmp
sti
dec
and
add
sub
adc
decl
pop
aam
ja
into
pop
loope
test
xor
dec
push
mov
cs
sub
stos
adc
jbe
jbe
inc
pop
decl
sbb
pop
das
pop
mov
xchg
push
adc
jb
inc
mov
xor
push
es
jg
idivb
sbb
cli
jbe
inc
mov
jae
sbb
cmp
jmp
lock
cmpsb
adc
mov
adcb
mov
push
lcall
ss
inc
add
xor
mov
adc
ss
fs
incl
cld
in
out
cmp
int
pop
or
add
mov
pop
sbb
push
es
sub
popa
fstpl
je
hlt
ljmp
xchg
popa
ds
mov
cld
outsl
cli
pop
pushf
rclb
fiaddl
add
adc
sub
xchg
cmp
out
add
mov
dec
addr16
mov
ds
xchg
decl
nop
and
pushf
push
push
lods
and
jo
jecxz
xorl
adc
cmp
sub
and
cwtl
jae
mov
mov
mov
cmp
fdivrs
lret
mov
stos
and
dec
rorb
movsb
xchg
cmpl
cmp
fidivrl
xor
lock
sti
decl
and
call
or
and
push
jg
sbb
rorl
movsb
rcrl
mov
mov
dec
not
call
loopne
arpl
repnz
in
mov
sbb
mov
dec
dec
scas
dec
and
adc
add
inc
cmp
dec
daa
xor
test
jp,pt
aad
test
fdivrs
pushf
inc
fbstp
jae
sysenter
xor
insb
sub
jg
in
jl
rcrb
fs
decl
inc
lcall
into
imul
and
cmpsl
mov
or
iret
cltd
repnz
adc
add
gs
or
out
dec
inc
xchg
test
out
push
stc
sub
adc
ljmp
hlt
in
ret
sbb
ret
lods
mov
movl
and
or
push
dec
inc
cs
pushl
aas
xchg
mov
aaa
pop
fcomps
xchg
ds
sub
aad
mov
and
push
imul
fists
cs
aad
push
jp
pop
sbb
xorb
xchg
fbld
lret
fcomip
call
lret
clc
loopne
loope
out
ror
call
pop
jp
out
incl
bound
cs
dec
add
jl
call
xor
mov
rclb
xchg
jae,pt
int3
les
out
call
pop
fs
daa
movb
bound
scas
inc
xchg
out
push
pushl
dec
mov
or
sahf
jns
notl
cmp
sub
clc
sbb
adc
cmc
test
fwait
lock
call
das
mov
out
dec
pop
incb
and
jbe
sbb
out
clc
push
jo
in
or
adc
in
into
and
adc
jl
inc
pop
shl
sti
sub
mov
mov
test
jg
dec
inc
sbb
scas
mov
call
pop
dec
and
and
lahf
ss
fcoms
xchg
nop
lahf
dec
movsl
xlat
ds
cli
aaa
call
into
sbb
sbb
jo
in
jg
adc
cmp
orl
push
loop
lds
mov
cmp
lcall
adc
dec
sub
lds
fisttpll
sarl
cmpsl
orb
mov
cs
mov
and
jl
cmp
push
loope
push
jg
xchg
adc
jbe
sbb
into
mov
ss
mov
decl
sti
jae
lahf
jecxz
xor
mov
cmp
jo
int
xor
mov
sti
add
mov
or
loopne
lods
mov
xchg
inc
adc
pushf
std
xor
mov
mov
lcall
fcompl
push
daa
sbb
les
sub
in
cld
jmp
mov
or
cmpsl
orl
sbb
inc
imul
aas
loopne
push
repz
or
daa
mov
movsb
daa
jnp
call
loopne
jg
sub
xor
sbb
imul
jno
fmull
or
mov
mov
pop
push
lret
mov
jg
popf
and
outsl
ss
cmp
stos
cwtl
imul
sub
mov
adc
mov
fwait
stos
cs
scas
stos
test
push
clc
fidivrl
jmp
pop
jns
dec
lret
xlat
and
cmpsb
test
push
arpl
fbld
or
lret
push
and
cmp
lea
lock
int
incl
cmpsb
xor
mov
cs
ljmp
test
mov
sbb
dec
xor
mov
sbb
arpl
jge
call
fidivl
mov
sub
in
in
pop
add
inc
int
sub
push
daa
je
cwtl
test
adcl
pushl
push
push
mov
xor
fwait
lcall
iret
nop
sub
mov
sbb
mov
xor
das
push
xchg
loopne
pop
xchg
adc
add
xor
dec
in
push
dec
fdivr
sbb
pop
xor
xor
jl
jle
lcall
pop
std
mov
mov
std
fsubrl
dec
sbb
pop
pop
inc
decl
outsl
and
lea
imul
and
mov
or
lret
xor
sub
decl
adc
adc
fstp
sbb
and
push
inc
andb
mov
push
ja
pop
dec
fistps
sub
ss
or
sub
pop
inc
mov
or
and
xchg
nop
insb
push
pop
mov
incl
clc
xchg
push
sbb
jns
sub
decl
xlat
cwtl
popf
xchg
fsubl
in
jecxz
xchg
cmpsb
mov
cmp
shr
adc
pop
sbb
sbb
cmp
in
cmp
fwait
aaa
pop
cmp
fidivrl
or
ds
lcall
xlat
and
les
js
cltd
aaa
sbb
out
xor
xchg
hlt
or
xor
jl
std
jg
xor
mov
enter
and
stos
lcall
es
sbb
adc
xor
dec
sbb
lcall
sbb
lock
bound
stos
aad
fists
jl
or
mov
add
cmpb
inc
add
adc
es
sbb
add
pop
pop
or
sub
xchg
or
adc
cmp
push
mov
fistpl
pop
push
cmp
push
outsl
lock
aas
xchg
add
push
sub
dec
add
xchg
pusha
lods
mov
sub
repz
adc
cltd
fwait
mov
lret
sbb
jge
ljmp
ficoml
fbld
cld
loopne
mov
imul
cli
push
fimuls
xchg
fists
aas
inc
jbe
lds
xor
inc
leave
inc
clc
icebp
rorb
add
call
pop
loopne
dec
or
aas
mov
lds
cmpsl
nop
movsl
jecxz
jmp
add
jb
stos
sub
and
cmc
push
ss
notl
in
fsub
mov
push
movsb
mov
fiaddl
push
ds
cmp
and
inc
adc
testb
nop
xchg
xor
mov
lods
pop
and
xorb
mov
ss
fs
aas
subl
incl
sbb
pop
ds
add
fistl
lcall
adc
lahf
rolb
and
cwtl
jnp
fwait
hlt
call
lods
and
sub
bound
cmp
cmp
outsl
call
jecxz
adc
dec
push
nop
push
adc
movsl
adc
xchg
xchg
enter
add
dec
in
cmpsb
adc
sbb
cmpb
pop
cli
test
call
lcall
jb
push
cs
addb
cli
addr16
lcall
sbb
push
ret
popf
xchg
xchg
jg
cmp
push
lcall
stos
clc
and
fimuls
jnp
adc
ljmp
cmpb
push
test
aaa
dec
xchg
mov
test
mov
and
push
lds
adc
mov
mov
imul
or
sbb
pop
push
adc
jmp
mov
testl
pop
and
stos
scas
inc
push
jmp
cmp
lret
ja
ret
adc
jne
aam
xorl
incl
or
mov
cmpsb
cmp
mov
adc
add
and
cltd
mov
or
lcall
or
icebp
jo
xchg
cmp
add
fdivp
pop
lock
mov
andl
das
adc
add
out
imul
dec
daa
es
int
stos
nop
push
push
add
and
jns
std
mov
push
pop
inc
push
movsl
ret
aaa
ljmp
push
call
pusha
lods
cmp
jge
push
out
jmp
adc
inc
push
push
sub
jg
push
pop
jg
jl
xchg
call
ss
push
aaa
mov
dec
in
loopne
or
ljmp
jmp
push
aaa
xor
push
sub
jg
pushl
mov
loopne
aas
pushf
add
adc
leave
add
dec
mov
loope
adc
mov
inc
push
dec
push
sti
inc
sbb
lock
jg
adc
mov
sub
notl
js
push
inc
mov
mov
inc
and
or
jmp
push
mov
add
test
mov
jl
insb
sub
or
add
loop
xchg
cmp
cld
lcall
push
push
fldt
push
cltd
stos
lods
sbb
push
pop
jae
push
ret
jl
lock
jns
push
dec
lock
adc
mov
cwtl
add
sub
fwait
cmc
ja
out
jb
sbb
dec
cs
xor
pushl
cltd
jb
add
popa
fnstcw
adc
or
push
add
loopne
xor
jle
inc
dec
bound
imul
movsl
ja
divl
pop
sbb
lahf
ds
scas
adc
aad
dec
adc
addr16
les
aas
adcb
sti
sub
mov
std
mov
dec
mov
es
std
cmp
mov
xchg
pop
enter
push
pushl
or
inc
and
push
sbb
pop
push
cmp
arpl
xor
xor
pushl
pop
push
push
jnp
js
xor
les
sub
pop
pop
sbbl
pop
sbb
sbb
jnp
cs
or
pushl
cld
pushl
fidivl
xchg
call
adc
sbb
push
std
call
movsl
push
and
xor
mov
ret
pop
das
cmp
test
insb
or
scas
push
xchg
pop
mov
sbb
adc
adc
push
or
call
pop
push
and
adc
or
xor
jae
fsubl
cld
jmp
push
push
dec
jge
and
xchg
push
jle
sub
mov
stos
sub
sbbb
push
jb
adc
dec
shl
std
pop
mov
out
cmp
cmp
sub
dec
inc
jg
add
push
cmp
leave
push
inc
dec
cmp
decl
mov
leave
adc
cmp
cltd
adc
cwtl
push
dec
cmp
adc
aam
cli
xchg
push
dec
and
cmp
cmpsl
outsl
xor
mov
push
jb
cmp
fyl2x
decl
sbb
xor
pushl
add
idivb
push
inc
or
adc
pop
sahf
cmp
add
cmp
inc
adc
pop
add
icebp
sahf
mov
das
jnp
icebp
ss
decl
jg
les
cmc
dec
inc
sub
imul
pop
push
pop
incl
data16
push
insb
xor
and
pop
push
mov
jl
add
insb
add
dec
adc
loope
insb
negl
pushl
mov
cmp
pop
das
add
xchg
lods
sub
cli
cmp
add
mov
adc
in
js
pop
mov
lods
in
jae
inc
jae
movsb
pop
ss
lcall
sbb
push
imul
lods
in
cs
dec
add
push
fwait
sub
xor
fwait
das
ret
jo
pop
lods
and
sahf
es
xor
inc
adc
in
out
rcl
int3
inc
mov
std
decl
repz
xor
add
fwait
incl
cmp
jp
sbb
cmp
add
ret
rcll
adc
shrl
out
push
outsb
pusha
push
insb
rclb
sub
jmp
sbb
xlat
sub
ljmp
dec
stos
adc
in
cmp
repz
cmp
into
lretw
js
decb
mov
and
adc
xor
vlddqu
or
das
cld
sub
fbld
dec
or
jns
mov
pop
ss
call
lcall
hlt
push
insl
xchg
lds
scas
jp
jo
cmp
push
aas
jae
jmp
popf
fadds
xchg
movsb
sub
bound
fmull
cmp
push
jo
adc
cmp
dec
mov
in
fimull
cmp
xor
pushl
jge
fimuls
in
xchg
push
pop
test
inc
jecxz
sub
xchg
cmc
adc
pop
out
sbb
test
adc
dec
imul
and
inc
imul
leave
cmp
cwtl
les
push
cmp
sub
and
pop
jnp
pop
lahf
outsb
xor
fsubrp
xor
cmpb
pop
jg
push
adc
fwait
movsl
sbb
lcall
sbb
xor
xor
sbb
add
mov
int3
jmp
or
inc
lret
daa
and
cmp
mov
mov
mov
pop
adc
dec
lcall
cs
sbb
cmp
cld
decl
push
imul
adc
adc
add
inc
fs
sub
mov
cmp
jg
cmpsl
lret
adc
cmpsb
or
inc
outsb
lcall
rcrb
cmp
push
and
cwtl
jl
or
loop
test
add
xor
sbb
pop
lcall
cld
mov
mov
push
icebp
outsl
fisttps
add
cmp
mov
pop
fcmovb
decl
xchg
add
pushl
incl
insl
lret
cmc
stc
adcb
rclb
and
scas
in
cmc
sahf
subl
daa
jl
sbb
xchg
mov
mov
ud0
jg
lcall
mov
cltd
push
sub
mov
mov
call
pop
icebp
stos
arpl
fbstp
push
mov
xchg
adc
sbb
stos
loope
mov
repnz
aad
jmp
shrb
sub
loopne
sub
std
imul
popf
mov
inc
cmp
xchg
jne
mov
sbb
cmpsl
imull
jmp
cmpsl
imulb
adc
dec
push
pop
mov
mov
push
out
outsb
movsl
movsl
dec
sbb
pop
xor
jge
mov
mov
leave
call
mov
decl
arpl
jle
out
mov
in
nop
xchg
mov
movsb
pop
insl
dec
and
and
pushl
addr16
dec
or
cmpl
in
insl
sub
cmc
lcall
cmp
mov
inc
incb
cltd
mov
xchg
adc
jg
jg
sbb
pop
jle
out
adc
push
addr16
add
addb
lds
mov
sub
xor
adcl
mov
mov
mov
mov
pop
xlat
mov
cli
lcall
jg
and
mov
xchg
stc
add
xabort
mov
mov
jo
clc
push
ljmp
mov
out
pop
cwtl
and
out
lahf
add
xchg
mov
pusha
jmp
lock
dec
cmp
jne
and
jmp
popf
mov
xchg
xchg
pop
loope
mov
es
push
nopl
mov
pop
sbb
dec
mov
sbb
mov
jmp
aaa
pop
lret
pop
pop
or
loopne
shll
xlat
and
mov
adc
adc
and
xchg
rcpps
inc
adc
fisttps
aas
sub
pop
in
inc
xor
sub
pop
pop
mov
decl
ljmp
gs
negl
std
in
add
jo
jmp
adc
inc
jmp
push
hlt
inc
cmpsb
push
mov
xchg
fidivl
lcall
cmp
dec
add
sub
cwtl
cmp
xor
pushl
lcall
mov
xchg
mov
adc
inc
mov
adc
aaa
add
add
jg,pt
mov
push
push
gs
add
dec
jmp
adc
repz
mov
movsl
add
dec
xor
rclb
daa
fisttpll
and
cmp
adc
push
mov
movq
ror
outsl
cmp
xor
pop
add
dec
loopne
ljmp
xor
jbe
sti
cli
push
test
call
movsl
mov
add
aaa
stos
ljmp
ja
adc
and
int
filds
jl
addl
adc
mov
mov
sbbb
inc
pop
mov
rcll
sub
xchg
fmull
dec
and
sti
aas
sbb
fisttps
lcall
and
mov
jp
cmp
and
add
mov
insb
lcall
stos
mov
adc
add
sahf
mov
pop
sarl
xchg
cs
incl
das
mov
outsb
jne
lahf
mov
mov
pop
add
into
xor
jo
pop
ffreep
push
loopne
pop
test
pop
outsb
test
pop
jb
xchg
int
pop
and
mov
cmpsb
mov
gs
adc
lods
jb
ja
lcall
cmpsb
inc
pushf
xorb
push
stc
scas
sbb
lcall
aas
dec
push
call
jecxz
ss
xchg
xor
cs
push
aas
in
fwait
icebp
lcall
gs
xor
test
xchg
xor
xor
dec
clc
outsl
add
mov
stc
cmp
sub
cmpsb
decl
stc
lahf
nop
sub
and
jg
mov
cmpsl
loopne
dec
aad
add
xor
fcoms
add
es
push
xor
add
pushl
loopne
sarl
adc
adc
jmp
add
mov
adc
push
andl
lar
or
add
adc
popf
xor
ljmp
stc
xor
and
movsb
shll
xor
add
bound
clc
outsb
adc
lahf
negl
rorl
ds
adc
mov
notl
adcl
and
jl
pop
jno
movsl
jnp
xchg
xor
into
mov
pop
fsubs
jmp
leave
mov
sarl
bound
xor
decl
jno
scas
je
lods
popa
pusha
sub
in
std
pop
test
aas
fcoml
popa
orb
test
or
sbb
scas
pop
loopne
ret
adc
xchg
jg
or
push
cmp
jle
iret
enter
lcall
sti
mov
mov
and
add
cmp
in
ja
pop
dec
cmp
and
push
pop
mov
loope
sbb
xor
adc
push
xchg
push
popa
ljmp
sbb
cmp
nop
jmp
pop
jo
sub
js
ret
push
mov
fiaddl
jbe
lcall
lcall
dec
fdivrp
sbb
adc
roll
cmp
mov
pop
loope
or
fnstsw
nop
lret
cs
cld
push
push
mov
cmp
sbb
dec
clc
fisttps
addr16
insl
ds
int
adc
jle
dec
inc
pop
jle
mov
push
sysret
mov
mov
push
sbb
xchg
aad
mov
jo
mov
idivl
or
mov
sbb
xor
mov
and
cmp
inc
jne
insb
xor
sub
test
adc
sbb
cwtl
outsb
cmp
and
sub
in
pop
aam
test
xchg
cmp
dec
jno
adc
fwait
jg
lcall
inc
or
js
ds
pop
add
adc
test
std
pushl
rol
mov
cmp
and
cmp
mov
int
push
test
sub
aas
xchg
and
add
imul
xchg
push
hlt
mov
in
cmc
and
sbb
inc
pop
adc
ss
clc
das
xor
cmp
pop
add
movsl
adc
loop
outsl
movsb
pop
push
or
das
add
in
mov
and
sbb
adc
jge
negb
or
sbbb
arpl
lret
aad
clc
fistpll
imul
adc
mov
push
mov
aam
mov
pop
rol
pop
cwtl
ljmp
sub
or
adc
filds
stos
xor
push
or
cmp
psubb
int3
sub
mov
adc
sub
in
test
icebp
std
lcall
xorb
ss
call
imul
and
jge
push
sub
mov
mov
add
aaa
jecxz
cmp
leave
pop
imull
or
cmp
ss
pop
inc
push
imul
pushl
add
rorb
xor
addr16
push
lcall
ror
dec
es
cld
xorl
cs
xor
ja
call
push
jbe
push
mov
or
inc
cmpsb
xchg
dec
mov
js
pop
dec
xchg
bound
jg
lock
xchg
mov
jbe
add
and
push
mov
mov
lock
or
testb
pop
movsb
jp
dec
xchg
jmp
cld
add
push
mov
adc
cmc
jecxz
sub
sbb
cmp
push
shrl
pop
add
push
out
aad
call
mov
xor
sbb
cmovne
push
aaa
cmp
pushl
subb
or
std
jp
jb
sbbb
ret
dec
cmp
adc
ja
or
movsb
ss
xchg
jl
mov
fists
clc
add
push
or
xor
xor
pushl
sbb
mov
push
fbstp
ja
mov
sub
pop
rorl
jl
xchg
ja
incl
dec
mov
push
xor
adc
aaa
cld
pushl
pop
xor
pop
cmp
mov
decl
int
popf
push
jno
mov
jp
ja
jg
dec
loope
fcmovu
aam
jnp
sbb
adc
stc
outsl
testb
mov
popa
and
repz
lock
in
sub
push
and
push
adc
push
outsb
je
dec
pop
dec
adc
fbld
jns
leave
jle
in
out
out
pop
push
push
movsl
dec
cld
mov
jo
sbb
push
mov
pop
clc
cld
fdivrs
add
inc
mov
xchg
pop
cli
ja
xor
fwait
mov
sbb
ss
dec
adc
movsb
cmp
scas
je
loopne
incl
out
and
mov
stos
add
fstl
cmp
jle
inc
or
dec
lock
mov
das
add
push
push
xor
cmc
inc
test
rcr
jg
cmp
inc
xor
sbb
xor
adc
insb
xorl
pop
mov
sbb
add
ret
es
mov
cmc
and
lret
bound
jbe
push
in
mov
ljmp
adc
push
pop
loope
lock
scas
adc
jo
lock
mov
and
imul
jg
pop
or
xor
mov
addl
jl
call
js
and
push
out
in
cmc
mov
fcomip
dec
and
cmpsb
push
sub
mov
or
iret
add
jae
and
push
adc
dec
xchg
cmp
je
in
push
push
or
in
shr
aam
incl
je
add
dec
cs
push
jp
jnp
inc
das
jle
decl
pusha
push
daa
ss
inc
inc
lcall
pop
mov
ret
sti
sbb
cmp
xor
arpl
icebp
lcall
hlt
movsb
adc
out
pop
sub
mov
inc
xor
pop
bound
aaa
push
mov
pop
stc
jg
outsl
adc
adc
mov
mov
jmp
push
push
test
data16
lahf
sub
cmp
mov
cmpsl
jne
test
pop
dec
add
testl
ljmp
jbe
movsl
adc
ja
jmp
xchg
daa
add
mov
push
lds
ss
adc
pop
ds
push
and
xchg
loopne
out
add
les
xchg
daa
mov
in
and
mov
push
mov
push
ret
aas
mov
lret
adc
sahf
mov
pop
jle
cmc
mov
push
sub
sub
xchg
aas
cmpsb
and
mov
mov
sub
mov
mov
pop
pop
adcl
mov
test
ja
das
sbb
mov
pushl
mov
cli
outsb
mov
fistpl
call
sub
mov
addl
ljmp
cmp
dec
adc
cltd
mov
push
clc
jg
inc
sbb
cmpsb
push
add
xor
ret
and
stos
dec
sub
or
cmp
jle
sub
jae
dec
movsl
mov
outsb
int
add
mov
cltd
lea
or
pusha
in
aaa
sbb
daa
jne
push
sub
xchg
cmp
mov
mov
cltd
daa
adc
mulb
aad
adc
mov
pop
cmp
pop
cld
out
ret
push
fisttps
jne
in
iret
push
cmp
pushf
and
mov
std
and
sub
pop
fcom
xor
jp
lcall
xchg
lcall
and
jg
adc
loopne
push
adc
imul
clc
mov
xor
mov
jns
mov
jg
xor
cmpsb
sbb
xlat
mov
das
xchg
xor
mov
icebp
cwtl
scas
out
jg
ficomps
iret
sub
addr16
inc
mov
sbb
pushf
enter
pop
cmc
outsl
clc
mov
movsb
mov
add
cli
adc
inc
stos
loope
sub
jb
and
push
icebp
adc
ss
inc
xchg
sub
sbb
and
or
xchg
decl
jnp
xchg
push
add
mov
sbb
jge
add
sbb
jl
incl
or
mov
lea
daa
mov
mov
push
and
fsts
incb
adc
xchg
push
idivb
rcll
lcall
repnz
lea
push
mov
mov
mov
add
mov
jmp
scas
enter
data16
jmp
add
loop
cmp
aas
sarl
adc
mov
mov
out
cmp
xor
shlb
jle
mov
adc
mov
push
in
sub
testl
cmc
pushl
mov
cmp
sbb
mov
bound
int
std
mov
add
imul
dec
ds
adc
incl
and
and
xor
or
cmp
mov
xchg
icebp
dec
loope
cltd
lods
xchg
rcrb
and
fucom
std
sarl
inc
into
imull
sbb
incl
mov
pop
cli
lock
cmp
xor
xchg
hlt
or
fists
cmpsl
cmpsl
aas
pop
mov
xor
adc
dec
loope
mov
cli
mov
cmp
stos
pop
sbb
add
fistpll
inc
test
jo
jg
in
xor
sbb
sahf
out
adc
or
cli
aas
push
outsb
add
pop
mov
ljmp
add
sbb
push
sub
mov
shl
adc
adc
stc
add
lret
dec
jmp
adc
not
cwtl
sub
cmp
rcrl
adc
push
jmp
sub
mov
out
inc
lret
or
sbb
int3
movsl
cmp
mov
or
sbb
add
js
into
or
and
xchg
sti
out
adc
mov
dec
sub
sub
inc
sub
sub
ficompl
ret
icebp
mov
xor
bndstx
lret
incl
push
out
dec
int
sub
mov
andb
cmp
testl
rorb
sbb
fdivr
mov
popf
xorl
std
jbe
call
xor
fiadds
pop
mov
in
enter
imull
add
mov
adc
xor
mov
test
xor
popa
leave
xchg
adc
jg
cmpl
mov
mov
orb
xor
add
or
cmp
in
das
or
mov
fstpt
adc
or
and
pop
aas
decb
popa
lret
sbb
sbb
push
xchg
test
lret
or
aaa
jo
jmp
cmp
adc
inc
in
xchg
pop
adc
jg
mov
mov
fdivrs
ljmp
sbb
sti
outsl
cmp
xor
andl
inc
or
cmp
pop
fistl
sub
repnz
xchg
xchg
pop
add
add
cwtl
rorb
mov
hlt
add
cmp
mov
leave
cmp
lods
mov
decl
jbe
inc
mov
cmp
pop
mov
cltd
xor
pop
or
and
sbb
test
cmp
add
lcall
sub
pop
cmpsl
rorl
sub
adc
out
data16
and
in
mov
incb
jb
movq
lcall
repnz
jecxz
imul
int3
sub
sub
sub
mov
cmp
ds
insl
mov
test
push
and
pop
xchg
out
xor
mov
fstps
into
jle
add
xor
jle
push
or
rcrb
iret
pushl
or
daa
cmp
cmp
cmp
lahf
jecxz
repnz
dec
ficompl
mov
outsb
idiv
rorl
add
cld
adc
pushl
out
cmp
mov
and
mov
push
pusha
test
cmp
pop
lock
adc
push
add
dec
or
add
xor
jnp
cli
or
sub
out
xor
sub
xor
pop
sub
cltd
add
fmul
nop
pop
pop
aas
fsubrs
or
and
add
out
xchg
lahf
insb
int
out
rcrb
cmp
add
icebp
inc
and
jnp
ds
xor
ret
out
out
sub
cmp
call
fdivl
addl
pop
jg
mov
and
push
push
nopl
popf
jbe
cmp
dec
jne
or
xor
mov
lea
xor
std
inc
icebp
sub
cld
add
or
xor
clc
aaa
jmp
sahf
or
in
aad
and
xor
add
lcall
imul
sub
aaa
std
or
insb
fnstcw
nop
gs
stos
clc
pushl
or
jge
cmpl
repnz
push
mov
adc
xchg
xchg
mov
repnz
adc
inc
inc
test
mov
xor
sub
pop
test
mov
or
call
xchg
mov
jle
mov
mov
mov
adc
add
ds
xchg
mov
sbb
dec
push
sub
cld
jmp
inc
jae
cmp
mov
cmp
js
cld
lcall
mov
insb
dec
add
pop
lock
pop
inc
cmpl
cmpsl
andl
jno
sub
pop
cltd
mov
push
xchg
add
mov
aaa
std
cmp
and
cmpb
cmp
cmp
push
loope
lcall
scas
aam
dec
sbb
sub
addb
out
jns
pop
pop
mov
sub
mov
daa
das
xor
jbe
call
jne
fcmove
cmp
and
sbb
jecxz
push
pop
lahf
decl
cld
ja
les
out
push
cmpsb
xchg
xor
adc
das
cmp
adc
cmp
dec
mov
pop
sti
adc
aaa
in
mov
mov
adc
stc
lods
adc
inc
pop
popa
lods
scas
xchg
mov
add
movsl
in
cld
ljmp
cmpl
imul
out
xchg
cmp
mov
rolb
divb
mov
fildll
sbb
fadd
leave
into
rcrb
jmp
or
sub
xor
fidivrs
orb
mov
pusha
clc
jecxz
sub
call
test
and
push
cmp
addr16
aaa
xor
fcomip
ja
rclb
xor
test
into
sub
xchg
mov
cmp
and
icebp
and
mov
xor
loop
mov
int
mov
push
in
mov
popf
adc
push
push
stos
cmp
sbb
push
sub
pop
ljmp
cmpsb
add
int
stos
jl
xor
push
inc
adc
push
add
rorl
cmp
icebp
mov
jge
push
lods
paddsw
adc
es
icebp
jg
stos
ja
cmp
test
mov
push
test
clc
mov
sub
fldt
out
mov
push
mov
sbb
push
mov
test
cmp
mov
mov
sub
out
clc
add
inc
pop
cmp
xchg
and
fwait
or
lea
and
movsl
adcl
pop
ja
into
xor
adc
in
push
push
push
cmpsl
xchg
test
hlt
jg
filds
mov
xor
ljmp
ret
mov
ds
jg
rorb
adc
mov
adc
or
add
and
aas
call
insb
mov
outsl
and
mov
push
adc
push
fdivrp
mov
fdiv
in
adc
push
inc
sbb
adc
sbb
stc
mov
adcb
lods
mov
and
adc
cmpsb
cmp
add
mov
pushf
lcall
ljmp
arpl
jb
dec
and
or
add
cmp
lcall
test
pop
push
movsb
xor
stos
sbb
push
sahf
mov
sub
mov
adc
popf
cmp
daa
movsl
inc
fstpt
push
xchg
sub
xor
jmp
lcall
mov
test
daa
cs
clc
fwait
push
mov
ljmp
mov
mov
pop
push
in
cs
addr16
adc
or
mov
cmp
cmpsl
adc
mov
push
stos
add
pushf
xchg
mov
fisttps
mov
int3
jnp
sub
xchg
mov
xchg
mov
sbb
add
lods
movsl
or
push
int
jle
cmc
xor
mov
mov
int
xchg
dec
mov
lcall
push
lea
cld
cmp
push
popf
or
mov
cmp
cmp
arpl
adc
sbb
fcomip
pop
xchg
cmp
push
sti
pop
mov
jne
cld
add
setae
jge
cmp
and
cmp
sbb
xchg
push
mov
jg
adc
and
outsb
dec
mov
xacquire
sub
adc
adc
clc
hlt
mov
jbe
or
stos
jge
jno
add
out
stos
add
add
add
popf
sub
adc
pop
test
clc
decl
mov
test
cmp
and
xchg
mov
xor
lcall
stos
pop
sub
and
arpl
ffree
pushf
enter
push
aas
add
filds
stos
mov
scas
adc
ja
fisttps
sbb
pop
and
divb
lcall
ljmp
cltd
add
adc
or
mov
sbb
mov
sbb
out
cmp
mov
mov
mov
pop
ds
add
adcl
orl
dec
mov
test
xor
and
mov
add
add
cs
add
cmpsl
cmp
jbe
push
jmp
out
lcall
xor
xor
add
bound
loop
push
push
cmp
int
lcall
mov
cs
cmp
xchg
inc
add
push
mov
xor
inc
and
mov
mov
inc
loopne
pushl
jnp
cmp
syscall
mov
xchg
inc
push
jg
and
pop
mov
pop
dec
cmp
lar
icebp
jnp
inc
or
push
cmp
mov
or
insb
ss
imul
movsl
addr16
sbb
dec
ljmp
subb
ret
test
gs
out
and
sub
in
push
stos
mov
loop
call
jle
jg
pop
jo
sbb
cmp
mov
popf
sbb
and
push
outsl
cmpsb
fisubl
xchg
testl
loop
adc
into
xchg
adc
xor
mov
mov
or
fsubs
push
popa
lock
dec
push
inc
cwtl
pushl
cld
mov
sbb
mov
in
xor
push
rcr
cld
jl
mov
test
cld
xchg
daa
pop
imul
push
sbb
xchg
or
mov
rcrl
push
into
lods
lea
aas
jnp
cmp
cwtl
dec
fldcw
ljmp
pusha
mov
inc
sahf
sub
ljmp
pop
or
insl
and
adc
into
xor
dec
data16
ljmp
sub
imul
pusha
xchg
or
pop
jo
ljmp
loop
pop
dec
mov
fistpll
fiaddl
call
adc
call
ja
sub
mov
push
decl
daa
ret
loopne
mov
mov
testl
cld
jl
inc
jae
cltd
xchg
mov
scas
cmp
xchg
add
pusha
mov
jl
imul
mov
outsl
or
adc
test
jle
decl
jo
insl
sub
cs
outsb
sub
mov
das
clc
lock
sub
aam
cmp
jl
add
and
ljmp
dec
mov
inc
sbb
imul
mov
dec
adc
add
dec
mov
jbe
xchg
cmp
bound
call
xchg
aas
lret
pop
pop
std
ret
call
int
or
ljmp
dec
or
jmp
adc
fwait
sub
xor
cmc
ret
inc
xchg
cltd
jns
movsb
sbb
dec
cmp
pusha
cmpsl
ss
jg
je
xchg
sahf
ljmp
pop
xchg
push
decl
divl
xchg
or
and
cltd
jecxz
and
jmp
incl
add
pushf
fisubl
ret
or
mov
ljmp
mov
sbb
sub
test
add
mov
enter
xor
cld
ljmp
add
repnz
pop
out
mov
adc
or
or
test
jg
dec
add
push
cwtl
nop
sub
and
sub
adc
cmp
incl
mov
add
stos
mulb
dec
xor
xor
sbb
out
adc
and
movsb
fisttps
push
add
jmp
or
test
lds
mov
cmp
out
aam
adc
fcomip
incl
cs
adc
mov
repnz
mov
sub
add
jg
lcall
hlt
jmp
xadd
pop
js
xchg
add
and
push
jge
add
lcall
icebp
push
sub
xchg
call
loop
jb
ljmp
lcall
xor
mov
scas
add
xor
fisubl
inc
mov
aaa
movsb
xor
fdivr
push
ljmp
lea
inc
cltd
push
nop
mov
stos
fstp
jle
push
fisubl
out
xchg
xor
lcall
in
pop
inc
or
popl
adc
roll
sbb
outsl
call
and
cmp
data16
sub
cltd
push
inc
xchg
xor
xor
pmullw
xorl
int
and
lret
dec
test
aas
std
mov
mov
insb
jne
cmp
or
jb
jmp
inc
xchg
push
sub
or
or
mov
mov
and
adc
in
subl
xchg
out
or
decl
adc
das
inc
cmp
mov
mov
cmp
push
xor
mov
pop
mov
push
add
fidivs
cld
xlat
incl
mov
clc
jge
add
mov
dec
jo
sub
clc
incl
popf
mov
dec
lea
aaa
xor
es
add
add
sub
test
xchg
orl
outsl
cli
incl
movsl
aaa
push
xlat
mov
add
mov
ret
cmp
xor
mov
test
cmp
sub
add
jg
or
pushf
add
xchg
inc
cmpsl
sbb
cld
das
das
aam
stos
pop
mov
flds
fwait
or
repnz
or
out
mov
xchg
lods
lahf
stos
or
inc
dec
mov
ljmp
jmp
xchg
les
sub
inc
mov
test
and
add
pushl
decl
add
xor
cltd
push
fcompl
jg
mov
mov
xchg
xor
cmpsl
adc
cmp
std
xchg
call
mov
stos
add
in
outsl
mov
xchg
das
inc
mov
push
push
mov
in
push
mov
push
mov
mov
jmp
imul
jg
pop
jg
mov
xorb
sbb
xor
sub
cmp
shrl
loop
decl
mov
push
pushf
dec
mov
movsl
test
adc
into
push
mov
or
or
xor
dec
addr16
mov
incl
nop
lods
xchg
mov
nop
xchg
or
add
mov
push
js
mov
dec
jne
push
lahf
es
push
xor
or
scas
cli
out
shlb
repnz
repnz
sbbl
subb
out
push
fwait
addr16
cs
or
incl
add
cmp
decl
adc
sub
aas
setnp
negb
sbbb
push
mov
mov
cmp
cmpsb
shll
sub
jge
pop
test
xchg
out
cmp
mov
daa
jns
sti
jecxz
xor
in
outsl
mov
sar
fwait
sub
push
mov
nop
inc
loope
mov
iret
or
push
mov
lcall
pop
cmp
insb
movsl
sbb
mov
cli
fidivl
mov
mov
sbb
in
push
dec
into
sub
clc
decl
mov
cmp
sbb
insb
xchg
fsubrl
mov
cmp
push
rcll
andb
adcb
add
push
sbb
outsl
js
pop
orb
in
addb
xor
mov
push
push
in
sarb
xor
jg
xor
xchg
decb
xlat
sub
call
fwait
mov
pop
cmpsb
fs
cmp
xor
notb
add
adc
mov
jae
mov
rcrb
div
add
push
jl
repnz
add
jle
add
sbb
fnstenv
jge
pushl
cltd
mov
cmp
push
andl
jl
ljmp
std
jle
sub
fcmovnb
insb
or
mov
inc
xchg
sub
push
or
incl
mov
push
sub
ret
mov
outsb
jg
fcomip
mov
sbb
es
xchg
or
aam
inc
mov
jg
adc
lods
xor
and
lock
xor
ljmp
mov
cmp
adc
out
test
mov
sbb
mov
test
out
xchg
sub
jb
cs
inc
and
jl
lods
inc
xor
jmp
xor
rclb
and
loope
jnp
out
xchg
sbb
jno
call
outsb
xor
int
jg
xchg
pop
aaa
fnstsw
xchg
jle
mov
mov
add
cmp
cmc
dec
cwtl
add
das
and
mov
xchg
rcr
mov
push
mov
jnp
enter
fistps
mov
paddusb
insb
mov
pop
jl
std
xchg
add
xchg
push
sbb
dec
and
int3
dec
lods
pop
sub
ljmp
icebp
lds
or
xor
pop
lock
lcall
in
aas
cltd
xor
push
mov
mov
or
das
call
mov
mov
mov
mov
cmpsl
cmp
or
cmp
shrb
add
and
xchg
decl
idivb
adc
mov
mov
mov
push
add
cmc
inc
inc
cmp
mov
cmp
pushl
or
xchg
xor
cmp
shld
sub
out
lcall
mov
inc
inc
scas
imul
jp,pn
std
adc
aaa
out
mov
orl
adc
inc
int
adc
xchg
imul
stos
inc
bound
adc
cmovbe
pop
mov
fdiv
ss
adc
sbb
decl
fwait
sbb
push
cmp
sub
or
jbe
jg
mov
or
mov
cmpb
sub
push
pop
test
ret
push
test
or
incl
xor
cmpsl
or
add
sub
ljmp
stos
add
fwait
jecxz
fwait
or
dec
mov
mov
sbb
aad
lods
pop
push
cmpsb
pop
cmpb
xchg
aas
xchg
sbb
cmp
repz
lock
testb
in
stos
xchg
cmp
adc
jg
out
fcomps
sub
xor
add
xor
cltd
xchg
xor
lock
mov
push
sbb
mov
lods
and
adc
inc
outsl
add
filds
jp
and
add
pop
inc
fwait
aas
xchg
cs
push
les
mov
push
mov
lock
cmp
inc
loop
add
int
cmpsb
gs
test
imul
mov
cmp
std
mov
push
scas
test
push
sub
and
out
cli
ljmp
add
sub
pop
mov
mov
sbb
jae
adc
push
inc
mov
call
mov
mov
adc
pop
mov
fistpl
and
cmc
inc
xchg
in
mov
mov
dec
mov
mov
stc
sbb
push
pop
movsl
shll
adc
incl
fdivs
cmp
add
stos
add
mov
subl
dec
inc
fadds
mov
out
lods
mov
mov
das
lea
mov
imul
xchg
push
dec
jp
or
xchg
mov
push
mov
or
aaa
push
and
mov
mov
push
test
xor
adc
add
mov
xchg
jle
inc
ss
and
cmp
std
mov
xchg
decl
lcall
inc
ret
sub
mov
push
or
jg
sbb
decl
mov
cmp
cmp
add
jbe
add
add
mov
sti
adc
cltd
cmp
jmp
jbe
rcrl
push
gs
push
push
mov
or
xchg
nop
add
inc
add
in
arpl
jns
adc
xchg
sbb
mov
jl
or
mov
mov
and
and
cmp
lcall
lcall
pop
mov
mov
mov
lahf
cmp
inc
xchg
ret
ljmp
cltd
lea
test
mov
jg
rcr
stos
push
fcoml
fstpt
jecxz
imul
rcr
in
scas
fs
xor
test
jg
jg
push
je
xor
imul
mov
inc
xchg
and
call
imulb
mov
lods
lcall
in
inc
add
cli
mov
mov
inc
jno
mov
xchg
cwtl
or
adc
pop
xchg
push
fwait
incl
jae
or
clc
xor
mov
jne
iret
xchg
cmp
sub
outsl
aaa
cltd
cmp
inc
mov
or
or
clc
adc
inc
push
sbb
call
adc
dec
dec
adc
and
and
mov
mov
sbb
mov
call
fwait
sub
stc
sub
dec
mov
in
sbbb
cmc
jl
in
push
mov
je
mov
js
and
jg
xchg
add
popa
mov
and
and
push
rcrb
and
in
push
mov
push
push
mov
or
jge
mov
fisttps
fdivrl
mov
mov
add
jg
lcall
cwtl
adcl
loop
mov
ficompl
mov
xor
push
call
jg
adc
xchg
mov
inc
orl
mov
or
cmpsl
imul
outsl
cmp
cld
pushl
inc
pop
fcmovnu
xor
xchg
dec
xorl
mov
mov
mov
stos
cltd
imul
mov
ss
inc
call
sbb
mov
xchg
test
filds
pushf
cmp
insl
test
mov
sub
dec
mov
add
inc
test
add
in
in
inc
xor
push
fwait
mov
sbb
lods
das
xchg
cs
lcall
frstor
and
cmp
daa
das
dec
mov
cmp
sub
cmc
outsl
sar
add
ds
idivl
andb
or
push
inc
scas
stos
or
lcall
mov
sbb
jbe
loop
test
cld
lcall
add
push
mov
push
subl
test
xor
mov
std
cmpsb
mov
push
mov
out
aaa
scas
test
pop
mov
mov
cmpsl
mov
lods
xchg
and
sub
popf
decl
pop
sub
jb
inc
test
xchg
mov
cli
mov
mov
stos
pop
adc
in
pop
push
cld
fadds
lods
fwait
xchg
sar
mov
mov
orb
xor
hlt
int3
adc
sub
or
cmpsb
add
mov
seto
in
sbb
fadds
mov
test
lea
loopne
xchg
aas
aaa
pushl
divb
sbb
mov
xor
jmp
dec
fwait
sbbl
push
mov
xor
add
icebp
call
xchg
add
sahf
and
push
stos
daa
cs
mov
in
and
inc
xchg
test
push
outsl
sti
daa
push
loopne
pusha
mov
mov
in
orl
sahf
pop
sub
aas
dec
test
or
je
fstpl
mov
and
add
xchg
rclb
das
cli
cmc
and
fsubs
xchg
pop
adc
popf
jbe
xor
lcall
xchg
add
and
mov
jg
jg
cs
out
xchg
cmp
lods
stos
sub
adc
add
mov
mov
push
test
adc
sbb
insl
xchg
sbb
jmp
mov
mov
xchg
mov
fisttps
loopne
mov
icebp
mov
push
dec
xchg
jmp
or
notb
dec
outsl
mov
lods
cs
or
xor
rcrl
adcl
push
xchg
add
and
dec
bound
cli
ljmp
jbe
repnz
inc
scas
mov
push
jnp
clc
add
sub
fwait
ja
mov
mov
int3
mov
cmpw
jg
jb,pt
ljmp
add
cmovo
fstl
insb
cs
repnz
and
jmp
sbb
cmpsl
or
xchg
xor
stos
sahf
cltd
adc
pop
mov
pop
and
jecxz
push
ret
mov
add
cmp
lock
add
fcoml
xlat
push
cmp
leave
ss
ja
jl
and
push
mov
push
push
xchg
sahf
ljmp
stos
roll
cld
cltd
and
jg
sub
adc
dec
mov
pop
scas
xor
cli
sub
nop
xchg
and
loope
es
lcall
int
mov
cmp
xor
cmpsb
lcall
or
pusha
scas
rorb
hlt
sub
dec
xor
mov
in
sbb
fisttps
adc
cld
ljmp
push
jecxz
scas
mov
jno
out
mov
jmp
sbb
push
mov
sbb
and
add
lret
dec
adc
decl
shlb
mov
test
out
mov
inc
stos
add
jmp
adc
add
mov
sbb
jg
outsl
cli
lods
mov
popa
push
or
aas
fwait
cmp
mov
bnd
ljmp
sar
push
pop
mov
call
mov
xchg
push
pop
xchg
and
add
addr16
add
ret
jg
xor
pop
jns
movsb
and
xor
loop
pop
inc
mov
fldl
push
mov
incl
sub
jnp
adc
loop
lcall
adc
jmp
incl
and
adc
lock
mov
pop
xchg
xor
mov
push
and
pushl
insb
cli
ds
and
adc
lcall
xchg
add
fwait
test
int3
push
jb
and
pop
cld
xchg
mov
add
loopne
push
cmpsl
sub
mov
mov
sub
add
xchg
xchg
aad
mov
and
enter
push
stos
test
jne
and
pop
lods
sub
cli
incl
mov
adc
xor
pop
insb
cmp
ljmp
or
mov
pop
das
pushf
xor
jnp
lcall
cmp
mov
mov
or
cs
sbb
add
mov
xor
or
outsl
adc
test
mov
adc
mov
gs
jl
mov
push
mov
adc
or
or
xchg
shl
and
decl
mov
or
mov
add
push
cmp
add
test
cmp
call
incl
cmp
mov
adc
fsubrp
sbb
mov
and
cmpsl
clc
frstor
pop
pmullw
sbb
and
cmpsl
lods
ja
pop
lcall
xor
subl
xor
incl
fcomps
pop
loop
popf
and
les
adc
cmp
xchg
sub
enter
call
add
mov
mov
xchg
xor
cmp
and
out
scas
push
cltd
pop
or
mov
mov
jmp
cmp
loope
push
out
inc
push
xor
mov
daa
and
ja
jle
mov
adc
mov
or
addr16
adc
cltd
fwait
pop
pop
cltd
add
cmc
xchg
andb
rol
int3
sbb
push
lea
push
mov
mov
rcrl
stos
push
clc
or
inc
mov
mov
mov
mov
cmp
aaa
mov
clc
cli
add
mov
sbb
cmp
sub
in
push
incl
cwtl
push
push
or
pop
jne
lret
cmpsb
lcall
aaa
inc
mov
xchg
cs
stos
add
xor
jae
call
jecxz
sub
push
sbb
push
in
mov
sbb
cltd
pop
movsb
adc
aaa
add
mov
test
push
mov
test
sbbb
push
repnz
adc
or
sub
xchg
dec
mov
jmp
aam
in
adc
mov
xchg
sub
ret
dec
xchg
clc
lds
dec
xchg
pop
aaa
dec
cmp
mov
lods
aas
mov
or
jg
in
or
add
ret
lock
cwtl
sub
mov
dec
in
adc
sbb
dec
cmpsb
push
data16
mov
sbbb
lea
jbe
test
cmpsl
and
or
push
std
lahf
cmpsb
jno
fildl
stos
mov
cmpsl
dec
mov
loope
cld
and
pop
js
stos
mov
jo
pop
push
xlat
mov
jne
aaa
ljmp
cmc
call
test
xchg
jl
mov
sbb
insl
adc
mov
jnp
cmpsl
inc
push
andl
cmp
mov
bound
push
je
out
jle
call
mov
mov
test
adc
mov
cmp
fdivl
add
into
sbb
ja
aaa
push
cmpsb
popf
sbb
rcrb
xor
jbe
mov
nop
add
sbb
push
icebp
mov
mov
movsl
ds
mov
decb
mov
xor
and
adc
mov
push
decl
mov
ds
fdivs
subl
sbb
nop
icebp
decl
pop
lock
ljmp
icebp
orl
mov
stos
mov
loopne
sub
clc
fcomip
mov
cmp
mov
lods
fisttps
cld
lock
bnd
mov
pushl
xchg
sbb
pop
ss
insb
dec
or
cwtl
cmovl
or
cmpsl
xor
movsl
cmp
sbb
jle
stos
shl
sub
add
cmp
jae
and
decl
mov
cmp
test
mov
loope
push
clc
pop
sub
imul
pop
xchg
and
shlb
adc
rclb
add
ljmp
loopne
sub
add
or
insb
xchg
sbb
sbb
add
mov
lret
fdiv
inc
or
push
push
push
mov
push
xchg
mov
jmp
xchg
xor
sbb
jno
shl
aas
jnp
push
sbb
lock
mov
and
ljmp
test
pop
mov
xor
jb
sbb
adc
push
in
jl
and
mov
cmpsl
imul
mov
mov
push
dec
repnz
das
rolb
xchg
mov
pop
int
pushl
int
mov
mov
push
gs
je
out
cltd
sub
sub
cmc
lock
stos
cmp
and
sahf
in
mov
add
sub
inc
jae
adcb
add
jl
jge
mov
jle
ja
aam
cltd
pop
movsb
mov
mov
dec
xchg
inc
sub
popf
cmp
mov
mov
add
adc
stos
dec
es
mov
sbb
xor
repz
mov
push
inc
cmpsl
xchg
or
test
mov
xor
test
jnp
pop
adc
xlat
gs
jl
pop
sub
jne
jg
push
pop
or
xchg
cmp
insl
mov
inc
xchg
push
mov
fnstenv
inc
jg
call
lock
xchg
and
xchg
movsl
xor
xor
and
std
aas
pop
cmp
mov
add
add
or
and
jmp
xor
int3
inc
mov
sbb
and
rorl
adc
cwtl
stos
add
popf
data16
out
lcall
dec
mov
or
push
pop
mov
jbe
pop
dec
sbb
xchg
les
daa
pop
cmpsb
int3
xor
jg
js
test
mov
sti
sub
leave
decb
adc
xchg
lcall
mov
push
mov
mov
cmp
sbb
jg
add
sbb
ljmp
push
xchg
nop
mov
cmp
pop
out
pop
mov
mov
xchg
xor
mov
ror
fdivl
push
push
mov
mov
mov
sahf
je
sbb
xor
sti
jecxz
jmp
inc
stos
sbb
loope
dec
mov
int
cmp
movsl
and
mov
sarb
adc
jmp
lock
subb
ficomps
lahf
lods
jecxz
inc
or
imul
insl
mov
cmpl
incl
and
int3
cmp
movsb
sbb
xchg
mov
stos
push
mov
jg
and
sbb
jg
lcall
shll
repnz
movsl
add
mov
pop
movsb
mov
mov
sbb
mov
jle
cwtl
mov
add
push
push
sbb
clc
decl
mov
fistl
fwait
and
ljmp
mov
mov
xchg
fldl
movsl
jb
mov
lcall
push
jns
mov
fwait
add
adc
jecxz
incl
push
mov
add
push
add
and
imul
jge
mov
sbb
push
mov
sbb
cmp
inc
stc
mov
push
xchg
and
jnp
sub
mov
imul
cmp
add
push
mov
jge
adc
repnz
in
jbe
push
insb
fwait
mov
sbbb
cltd
push
push
mov
cmp
xchg
jg
add
mov
xchg
popa
mov
test
sub
lock
sbb
mov
pop
and
lret
mov
dec
inc
sbb
mov
cld
mov
xchg
xchg
xchg
mov
push
mov
cmp
and
outsb
sub
lods
lcall
mov
outsb
inc
mov
push
mov
cmp
xchg
inc
xorl
cld
ss
aas
in
sti
xorl
mov
daa
idivb
incl
mov
push
andl
mov
add
pop
xchg
add
ss
mov
mov
rclb
packuswb
mov
repnz
lcall
scas
mov
mov
xchg
and
decl
push
les
cli
lds
and
les
pushf
adc
sub
idivb
and
filds
cld
call
cwtl
or
scas
add
roll
popa
das
int3
jne
or
stos
pop
mov
mov
cmp
pushf
inc
push
test
jg
aas
cmp
data16
mov
xchg
or
mov
imul
decl
daa
pop
out
jp
xor
xchg
mov
lcall
jp
mov
xchg
ds
xchg
adc
adc
incl
and
inc
mov
popa
push
sbb
decl
mov
cmpb
jno
rorb
pusha
or
iret
stos
insb
mov
idivb
dec
ja
cmp
lcall
sbb
rcrb
jbe
sub
push
xchg
or
call
lock
mov
repz
and
push
cwtl
adc
movsb
jo
xor
outsl
fwait
int3
sbb
or
cmp
push
scas
sub
repz
movsl
ss
lods
sbb
fwait
lcall
inc
scas
sbb
mov
imul
xor
aas
sub
dec
inc
mov
push
lods
sub
fstpl
adcb
pop
mov
js
push
xchg
sub
imulb
ljmp
bound
ret
mov
es
mov
xchg
sbb
das
out
imul
pop
mov
mov
loopne
push
xacquire
nop
cmp
jmp
jmp
sbb
fs
or
stc
sub
int3
jp
sub
adc
push
lea
xchg
jns
lcall
test
jb
stos
push
test
add
out
or
cltd
adc
decl
orb
pop
mov
mov
outsl
jp
add
jbe
add
xor
cmpsl
and
mov
add
leave
in
xor
jle
mov
outsb
xor
out
outsl
or
jg
jne
movsl
or
decl
add
add
clc
stos
xor
xor
mov
sbb
incl
mov
dec
aad
mov
mov
push
fcoml
or
lcall
fs
test
pop
inc
jl
or
sub
jmp
mov
pop
mov
adc
scas
cmpsb
sbb
mov
mov
jnp
mov
xchg
add
mov
in
das
ljmp
mov
sbbl
mov
xchg
cmp
pop
push
jbe
or
and
bnd
jb
test
sbb
cmc
aam
xchg
sbbl
cmp
ljmp
adc
mov
nop
add
cmp
outsb
mov
into
mov
fbld
cld
lea
jbe
ficoml
adc
mov
and
mov
jo
add
aaa
cmp
push
inc
xchg
add
sar
decl
add
adc
scas
xor
dec
stos
scas
mov
aas
mov
push
cmc
fldcw
dec
pop
dec
std
out
daa
dec
rorb
push
iret
jnp
mov
scas
xchg
sbbb
push
sbbl
and
xor
jmp
push
cmpsl
sbb
dec
daa
add
pop
mov
test
sbb
shr
jmp
jo
add
notl
jo
cmc
stc
push
xchg
mov
mov
mov
clc
sub
mov
jg
lcall
xor
outsb
mov
insl
xchg
sub
add
pop
movsl
and
sbb
cmc
imul
scas
mov
addb
mov
or
push
and
out
adc
xchg
adc
and
mov
lret
xor
movsl
daa
mov
cld
sub
cmpsb
ljmp
sub
movsb
mov
dec
stos
mov
sbb
push
adc
filds
jg
adc
add
sub
add
test
mov
sub
fistpl
movsb
adc
fwait
jle
mov
mov
and
bnd
ret
mov
mov
jg
hlt
jno
sub
insb
fstpt
xor
sub
cmp
adc
sbb
sbb
mov
lock
imul
mov
bound
push
cmp
mov
xor
pop
cld
ds
scas
xor
jno
incl
imul
and
pop
mov
mov
mov
push
int
and
sbb
loope
dec
lcall
std
out
or
movsb
bound
fs
xor
adc
mov
sbb
lea
sub
cltd
sub
mov
xchg
gs
cmp
aaa
out
mov
lahf
cmp
daa
popa
sub
pushl
adc
icebp
mov
sub
lock
pushf
cmpsb
loope
and
add
outsb
adc
movsl
push
cmp
add
mov
popf
lds
sub
sub
cld
inc
sbb
or
pop
xchg
xchg
ja
out
xchg
sbb
mov
mov
push
movsb
in
push
sbb
mov
aaa
stos
aas
push
loope
inc
sti
jae
cmpsb
xor
sub
pop
mov
adc
or
int
decb
and
jnp
cmpsl
stos
das
je
mov
and
sub
stos
add
jb
mov
adc
jne
sub
add
cld
xlat
pushl
jle
icebp
or
popa
mov
or
jb
in
pop
dec
lcall
mov
test
test
cmp
jg
jne
add
aas
dec
mov
push
cmpb
movsl
xchg
jl
adc
pushf
pop
or
xor
incl
sub
cmpsl
cmpl
pushf
add
sbb
cmp
sbb
vpsubb
push
popf
add
or
test
movsl
pop
lea
adcl
sbb
ret
mov
icebp
test
push
mov
and
mov
xchg
push
pop
mov
sbb
sbb
scas
adc
aas
xor
pop
xchg
stos
loopne
addl
les
mov
push
jnp
cmp
push
popf
mov
dec
popf
add
pop
mov
mov
movsb
jne
aaa
mov
rcrl
movsl
decl
shll
ljmp
shlb
adc
aad
push
sti
fwait
scas
mov
imul
pop
and
cmpsl
xchg
cs
outsb
stos
pop
mov
and
jg
jo
aas
bound
dec
pusha
mov
stos
xor
notl
push
add
clc
lahf
mov
pop
popf
subl
sbb
insb
mov
push
sbb
xor
xchg
pop
jle
mov
jg
shl
mov
decl
inc
cmpsb
mov
repnz
mov
pop
loope
imul
sub
dec
inc
mov
xchg
mov
mov
mov
push
stc
and
xor
or
xchg
sbbl
xchg
cld
inc
cmp
stos
shlb
or
mov
mov
into
orb
pop
fsubrl
adc
add
or
jmp
jle
andb
mov
fnstenv
xchg
and
jge
xchg
cs
ret
pop
mov
addb
arpl
testb
fcomip
incl
mov
jp
mov
repnz
xchg
or
push
stos
ljmp
jp
xlat
cmp
pushl
inc
mov
mov
pop
test
jnp
frstor
sahf
cmp
push
add
sar
cli
add
sbb
mov
jle
cmpsl
mov
add
add
sbb
add
cmp
xor
cli
insl
mov
mov
sub
ss
pushl
adc
mov
adc
sub
mov
sbb
ja
mov
shll
or
sbb
outsb
push
jl
rorb
mov
add
xor
sbb
nop
xor
lcall
mov
jecxz
mov
cmpsl
cmp
cltd
dec
dec
scas
shr
lea
mov
sahf
lahf
mov
jmp
repnz
jbe
rolb
sub
out
mov
mov
pop
sub
clc
xchg
cmp
ljmp
iret
mov
hlt
aam
inc
jmp
je
int
cs
testb
pmaxsw
lods
mov
sbb
mov
sbb
or
jmp
and
push
push
mov
mov
and
add
jecxz
push
inc
push
push
scas
lock
call
or
repnz
jae
adc
dec
jne
cmp
mov
pushl
xchg
and
inc
ret
jmp
inc
add
rcl
sbb
xor
ret
and
xor
in
mov
imul
add
push
cmpb
lret
ret
adc
lcall
lock
pop
shlb
imull
sbb
int3
lods
dec
bound
and
xchg
out
xor
decl
fwait
adc
mov
push
adc
jne
push
dec
ret
xor
fstp
stos
cltd
mov
xor
out
mov
adc
or
xor
pop
outsl
jecxz
aad
shrb
xor
push
mov
xchg
adc
call
incl
mulb
and
popa
push
cs
lods
or
inc
fs
push
add
hlt
push
cmc
lret
add
mov
in
insl
jo
sbb
std
call
loop
xor
jg
xor
jns
adc
fcomps
push
or
push
pop
dec
xor
lcall
call
arpl
xor
lret
test
test
sbb
inc
inc
xor
add
hlt
sbb
adc
fucom
out
add
test
stc
das
inc
jl
stc
cld
or
jg
or
xchg
cli
push
inc
add
cld
push
mov
cmp
xchg
sub
adc
add
pop
lcall
inc
pop
sbb
adc
mov
sub
ljmp
push
aam
or
les
ds
rcrl
out
pop
dec
push
aas
adc
pop
lcall
mov
aas
adc
mov
mov
test
incb
push
imul
cmpsl
adc
dec
xor
decl
addb
lock
jge
xor
or
ds
ja
mov
test
sbb
jg
jbe
push
pushl
out
dec
dec
mov
and
test
jnp
xor
xorl
mov
or
loope
adc
pop
rcrb
pop
shrb
stc
addb
xor
push
and
int3
leave
adc
decl
loope
pop
or
hlt
cmp
dec
push
mov
dec
inc
in
add
in
cli
sub
ss
movsl
xor
call
daa
lock
adc
cli
xor
lcall
movsb
sbb
mov
and
inc
fsts
inc
inc
push
pop
cmp
enter
out
icebp
ret
cli
sub
pushl
sti
and
adc
cmp
mov
mov
mov
cmp
inc
insb
cmp
aaa
ljmp
imul
test
call
std
decl
inc
dec
sbb
daa
mov
repnz
add
xchg
cmp
sbb
dec
add
mov
aaa
fwait
sub
xchg
or
pop
mov
jmp
aaa
mov
ja
pop
pop
fs
cmp
adc
push
mov
sbb
xchg
ficoml
lea
cmp
sub
incl
push
dec
mov
dec
testb
adc
test
cli
and
or
or
fsubrp
add
push
dec
rorb
xchg
outsb
fistpll
fwait
mov
out
xor
enter
mov
or
loop
or
push
fdiv
cli
lcall
fcomi
cmp
adc
or
pop
outsb
sbb
lods
aas
orb
pop
fildll
movsl
cwtl
mov
lds
jmp
push
push
sti
ljmp
in
pop
pop
xor
or
cmp
fldt
mov
lahf
cmp
add
movsb
mov
dec
pushf
cmp
std
aaa
mov
lods
or
hlt
dec
jno
push
adc
adc
push
in
loop
scas
add
pop
cmp
movsl
jno
mov
ljmp
dec
inc
dec
cmp
leave
and
inc
push
lcall
sub
addr16
push
fwait
push
push
inc
mov
call
or
push
shlb
adc
cmp
loope
xlat
and
mov
sti
aad
dec
dec
or
or
pop
inc
imul
pop
in
add
out
xchg
cmc
decl
movsb
mov
mov
stos
cwtl
gs
jno
icebp
sbb
filds
inc
jecxz
cmp
pop
jae
addr16
or
adc
dec
pushf
pop
mov
jns
cmc
decl
add
mov
adc
jb
fldenv
and
and
push
dec
shrl
mov
mov
xor
adc
add
add
mov
mov
push
xor
cmp
jecxz
push
jns
and
mov
sub
mov
mov
jg
inc
mov
sbb
loope
adc
jmp
f2xm1
push
inc
pop
pop
daa
push
rolb
push
push
decl
cld
jg
mov
cmpb
add
push
jns
xchg
xchg
push
adc
mov
push
imul
adc
pop
repz
pop
push
add
adc
jbe
stos
jmp
jmp
xor
cmp
movsl
movsb
mov
xchg
add
lcall
pushl
pop
xor
in
sbb
data16
aad
ja
add
xor
push
mov
das
clc
fwait
sub
dec
xor
jne
bound
adc
push
test
cmpsl
call
push
stos
sub
mov
add
je
mov
dec
and
addr16
aaa
and
adc
push
aas
nop
das
cwtl
imul
cmp
mov
xchg
jl
or
mov
sub
fmull
pop
sbb
xor
cmp
sbb
dec
xor
xadd
aad
cli
incl
pushl
cmp
out
in
sbb
adc
loopne,pn
lcall
sub
ja
fsubrs
xor
jg
sub
sbb
adc
into
or
pop
in
and
jl
loopne
sbb
sar
ljmp
mov
cmp
leave
push
inc
cmp
mov
aaa
inc
stos
loopne
inc
call
inc
push
xchg
mov
push
push
jb
push
mov
mov
sahf
mov
jg
mov
dec
adc
adc
xor
iret
mov
add
jle
adc
pop
jmp
sbb
mov
or
pop
jg
push
movsl
xor
jle
adc
daa
inc
pop
push
or
jo
push
es
lcall
and
push
aad
xorl
and
adc
pop
jnp
incl
push
cmp
xchg
mov
lods
mov
ja
pop
push
lcall
adc
jb
outsl
cli
pop
push
push
mov
sub
rcrb
jmp
pop
push
push
adc
push
sub
fwait
jmp
sub
lcall
lea
push
push
repnz
mov
or
int3
lcall
add
and
or
stos
mov
xchg
addb
jecxz
sbb
jg
cltd
mov
pushl
xchg
div
inc
push
jmp
fadds
ds
add
les
pushl
push
aas
gs
and
mov
adc
dec
add
xchg
sahf
fcmovbe
andb
mov
shl
jnp
jg
incl
fdivr
jne
adc
adc
movsl
sbbl
jmp
cmp
jae
mov
stos
mov
sbb
pushl
mov
xchg
and
fldt
push
inc
ja
cmp
ja
out
add
dec
addr16
and
cltd
cmpsl
mov
andb
test
incl
rcrl
repz
mov
rolb
push
fistps
and
sbb
movsb
adc
shlb
es
jp
loop
rcll
jge
iret
js
adc
aad
sub
mov
aaa
loope
stc
push
sbb
adc
push
adc
test
lods
add
fbstp
and
push
aaa
add
bound
outsl
pop
jmp
or
fbld
pusha
jb
push
mov
repnz
pop
push
xor
pop
imul
mov
icebp
in
scas
add
add
sbb
rorb
pop
and
xchg
add
push
xchg
add
mov
enter
scas
insb
idiv
jmp
nop
mov
pop
pcmpgtw
aam
sub
out
lret
adc
cmpsb
ljmp
imul
lcall
add
into
ljmp
and
push
lahf
int
sub
and
or
mov
add
test
incl
loope
jns
xchg
mov
out
mov
aam
incl
inc
ret
lds
movsl
adc
and
xchg
icebp
inc
sub
inc
sub
jg
push
ss
imul
sbb
mov
mov
fdiv
flds
xor
ds
cs
jmp
shll
sbb
sbb
pop
adc
mov
add
lret
or
xchg
lret
jg
jmp
movb
sbb
jg
add
aaa
repz
add
adc
xor
mov
jo
push
cmp
sbb
add
stos
test
mov
clc
nop
nop
test
sbb
push
cmc
hlt
popa
adc
mov
adcb
or
repz
adc
lock
into
add
xchg
fmull
sub
decl
dec
or
test
scas
add
pushl
shrl
mov
stos
popf
movsl
dec
icebp
out
filds
mov
mov
nop
mov
out
push
push
ja
jmp
jle
sbb
movq
sbb
aad
pop
xchg
xor
in
cmc
stos
and
loopne
xchg
daa
int3
ficompl
mov
cmp
dec
jl
loopne
mov
cli
in
cmp
or
lret
sbb
mov
and
aas
xchg
add
mov
cltd
or
or
inc
cmp
sbb
jge
xor
cli
and
test
repnz
add
fbld
repz
jb
lahf
mov
dec
xor
mov
and
ficoml
filds
jae
jecxz
adc
das
shll
mov
cmp
inc
ljmp
prefetcht2
jge
push
adc
imul
sub
mov
dec
or
jg
cmp
add
aas
sarl
daa
pop
fwait
cmp
xlat
inc
add
push
inc
fsubrl
aaa
sub
sti
mov
cli
cmp
std
mov
dec
pop
or
incl
pop
fadds
jmp
push
fcoms
nop
mov
push
mov
enter
or
sahf
and
hlt
lcall
test
lds
jns
xor
cmp
adc
add
pop
xor
and
jo
mov
loop
mulb
clc
test
cld
aaa
fld
popa
push
add
or
adc
pushl
cld
stc
ficoml
and
or
std
arpl
sub
xchg
call
adc
test
test
pushl
fcmove
sub
imul
movsb
or
mov
movsb
adc
mov
pop
mov
call
fsubs
sbb
lods
les
cwtl
sbb
push
cmpsl
js
or
jmp
add
jns
cmp
dec
aam
je
movsb
mov
mov
lcall
sub
sub
aas
cmp
test
test
mov
sahf
fwait
and
jno
push
js
in
push
sub
clc
jmp
out
sub
sub
out
mov
sarl
idivl
pushl
adc
jl
sub
xchg
push
inc
aas
and
pop
or
scas
add
jae
jle
andb
pop
cmp
cmpsb
scas
mov
jne
and
push
push
or
add
movl
cmp
lods
decl
cld
and
stos
cmp
or
sub
push
cmpsb
in
les
jl
xor
push
push
es
add
int3
lods
mov
adc
jb
je
adc
adcb
and
fcoml
xchg
mov
jl
and
and
clc
inc
bound
and
mov
dec
jp
cltd
mov
cli
lds
out
add
decl
sub
cmp
cmp
loope
add
jb
mov
cmc
ja
loope
sbb
jo
mov
clc
decl
pushl
xor
sbb
push
data16
cs
push
cwtl
jg
cld
pushl
pop
jl
sbb
push
cmp
jae
add
and
pushl
or
das
mov
ud0
lcall
and
cli
push
negl
movsl
xor
stos
lahf
in
decb
mov
adc
pop
sbb
xor
xchg
ljmp
iret
adc
aaa
and
test
ret
cli
cmc
dec
popa
fstl
nop
and
pushf
jg
sbb
sbb
lcall
or
cmp
aaa
cld
lcall
outsl
lds
bound
mov
and
push
jecxz
call
mov
orb
nop
xchg
loope
push
fwait
xchg
mov
ljmp
xchg
ja
cmp
ss
outsl
xchg
add
enter
repz
aaa
js,pn
fwait
and
push
outsb
cmp
clc
in
cmp
fstps
mov
icebp
inc
sub
sahf
dec
sbb
inc
mov
jle
jp
decl
push
sub
out
pop
add
inc
sti
sbb
mov
aam
xor
jae
decl
mov
cs
cmp
mov
call
call
out
mov
adc
sbb
add
fabs
add
sti
jnp
cli
call
cs
jle
test
xchg
add
cltd
cli
jmp
xor
scas
or
pushf
jns
movb
movsb
mov
inc
and
ss
jl
push
sbb
or
mov
sbb
jns
sub
jmp
xor
sbb
xchg
movsl
cmp
fcoms
mov
push
mov
cld
ret
nop
sub
mov
repnz
xchg
xchg
sbb
lock
pusha
sbb
leave
clc
out
clc
push
pop
adc
lods
mov
mov
add
add
add
pop
xchg
or
jle
scas
xor
scas
sbb
repnz
xchg
insl
cltd
cwtl
dec
sbb
xchg
call
lret
sub
adc
fdivr
dec
sti
mov
push
xor
pop
ds
add
or
or
jbe
decl
mov
push
flds
adc
decl
push
lock
sub
das
lcall
jnp
out
std
adc
stos
mov
xchg
incl
cmp
inc
shll
fcom
jle
or
cmp
shl
mov
sub
jecxz
fs
stos
cmp
cmp
jp
inc
add
xor
add
cwtl
aaa
stc
jnp
pop
xchg
xchg
sar
call
sahf
push
enter
adc
push
push
lahf
cmp
inc
in
push
aaa
xor
pop
pusha
insb
push
mov
popa
jg
cmp
lock
loop
test
mov
dec
std
jg
addr16
push
inc
xchg
mov
xchg
pop
sub
sti
push
sbb
inc
add
cmp
jae
add
repz
push
sarb
stos
push
in
jle
pop
test
jle
imul
sub
sbb
mov
jmp
mov
scas
add
addb
mov
stos
mov
fcomip
and
mov
push
dec
std
inc
sbbb
sub
sbb
cmp
enter
mov
sbb
jmp
bound
and
hlt
jnp
push
cmpsb
or
cmpsb
mov
or
std
dec
push
adc
andl
std
out
fwait
adc
jmp
cmp
mov
sbb
clc
aaa
loope
call
sbb
sub
ss
loopne
pusha
jb
and
cld
and
sub
adc
imul
and
cli
jle
aaa
cld
incl
sbb
cs
mov
pushl
xlat
cmp
xchg
sbb
jmp
out
ljmp
leave
rorb
push
divb
movl
jbe
push
add
inc
xchg
mov
xor
call
gs
aad
lcall
in
sbb
stc
xor
cmp
mov
sar
push
outsl
cmp
lret
das
pop
adc
push
inc
bound
rcll
call
inc
dec
sub
xchg
jne
and
movsl
or
mov
imul
std
aam
cmp
lcall
jno
and
add
push
mov
mov
dec
inc
sbb
hlt
ficompl
ret
es
incl
in
stc
push
cs
movsb
sub
jg
ljmp
nop
or
push
adc
and
pop
pop
push
dec
jg
daa
dec
int
call
add
adc
mov
cmp
in
out
pop
in
clc
jae
push
cltd
lcall
inc
add
icebp
mov
pop
negb
push
adc
jl
jnp
mov
cmp
cmp
in
sti
dec
jne
and
cmp
xchg
add
and
sub
jg
imul
inc
xor
fcomip
call
ret
ljmp
pop
push
pop
push
ljmp
push
std
jg
aaa
aam
pop
sub
in
mov
ds
push
push
xchg
scas
mov
mov
xor
lock
jle
push
insl
pop
bound
mov
cmpsl
into
cli
and
lea
orl
lcall
sbb
push
adc
and
out
pop
or
lock
mov
into
fisttps
popa
jbe
lock
mov
mov
cwtl
adc
sbb
jmp
mov
rorl
ss
popf
sbb
fwait
inc
aas
cmpsb
xor
xor
lea
push
add
and
sbb
and
lcall
and
fs
or
xor
fcomip
add
add
ljmp
cmp
fstps
pop
fidivs
mov
and
push
or
aaa
adc
pop
inc
or
sbb
out
sub
jmp
imul
movb
jp
or
pop
sub
push
aas
bound
or
inc
imul
inc
ret
movsb
les
mov
cmpsl
adc
mov
cmp
sub
mov
iret
pop
pushf
dec
xor
jmp
jecxz
or
push
fbstp
sbb
xorb
mov
incl
ret
and
push
es
adc
push
call
jo
popf
adc
jns
cli
push
ds
fcomip
rcrl
add
adc
jl
pop
pop
xchg
push
aad
inc
lret
lcall
std
out
pop
dec
push
xor
iret
cmp
inc
fnstenv
icebp
ret
push
adc
xor
push
cmp
lret
dec
stos
rcll
adc
inc
push
inc
movb
pushf
sub
lret
sbb
jle
cmp
or
dec
into
jns
cs
push
sbb
pusha
xor
push
jg
jmp
adc
test
dec
jecxz
jnp
dec
repnz
or
lcall
or
cmpsl
in
pop
sbb
xor
sbb
icebp
jnp
jno
pop
fmuls
sbb
pop
andb
mov
push
shll
pop
jge
call
mov
add
jecxz
inc
add
mov
in
sub
ret
cmp
push
sbb
cmp
cmpsb
or
mov
fbstp
les
and
sub
iret
xchg
and
push
repnz
push
xlat
adc
out
les
add
pop
sub
xchg
mov
xchg
test
adc
cld
call
mov
iret
insl
and
test
fsubs
int
or
jae
mov
in
cltd
aaa
movsb
and
jg
cmc
inc
mulb
ljmp
incl
into
sbb
jmp
sbb
cld
add
mov
mov
in
daa
and
decl
xchg
or
sbb
and
add
out
in
scas
sub
xchg
add
das
push
gs
loopne
pop
cltd
bound
out
testb
sub
push
jmp
mov
adc
mov
jge
call
push
jns
sub
sbb
cmpsb
pop
stos
movsb
out
scas
mov
mov
out
andl
sbb
shrl
mov
loop
repz
imul
scas
flds
xor
xchg
fisubrl
jb
sbb
inc
test
or
sub
cs
mov
loopne
rorl
adc
pushl
xor
stc
pop
sub
je
xor
add
or
fwait
cmp
push
add
loope
push
mov
and
push
aas
xchg
arpl
or
push
push
movsl
sub
shll
in
ljmp
fbld
sbb
or
push
call
loopne
add
daa
leave
rcl
sbb
aam
jmp
cmp
cmp
push
and
xchg
adc
pusha
imul
xchg
jmp
sarb
cltd
add
arpl
sbb
incl
shlb
fprem
mov
shlb
sahf
mov
adc
or
cld
ljmp
mov
rolb
cmp
or
jno
add
jg
ud0
dec
dec
bound
pusha
adc
pop
ret
aas
add
mov
fadds
adcl
ret
sbb
push
lcall
dec
lcall
je
sbb
pop
sbb
push
mov
pushl
scas
aas
add
sub
sub
rolb
imul
inc
sbb
std
sbb
imul
subb
lcall
sbbl
adc
jl
adc
dec
adc
cmp
add
ss
jg
loopne
push
inc
sbb
add
sbb
hlt
adc
decl
cmp
and
push
rorb
shll
and
lahf
cmpsl
lret
lods
push
popf
xor
mov
std
outsl
cli
call
push
xlat
and
outsb
add
push
or
daa
jno
fisubs
aam
cmp
xor
or
sbb
stos
push
mov
and
insb
lcall
shrl
aam
lods
sbb
imul
stc
jno
lcall
or
sub
dec
pop
rcr
adc
mov
mov
and
aas
sbb
push
daa
and
dec
mov
filds
inc
decb
lods
sub
mov
dec
in
gs
dec
mov
ljmp
in
cwtl
pop
jl
xchg
cmp
or
cwtl
push
mov
int
and
loop
mov
pushl
cmp
out
jl
xor
cs
decl
cmp
and
mov
jmp
push
rorb
mov
in
rorl
push
jmp
and
cmp
cmpsl
mov
repnz
xor
mov
add
push
shll
int3
ret
sub
adc
or
xchg
cmp
std
pop
sti
das
sbb
mov
xlat
cmp
in
cmp
lcall
jmp
scas
adc
lock
sbb
xchg
sbb
clc
pushf
mov
rol
and
cmpl
iret
and
adc
inc
dec
out
lahf
ds
push
decl
and
fwait
sbb
rol
or
incl
sbb
cmpsl
or
stos
xchg
xchg
jne
adcl
les
sbb
ds
cltd
clc
mov
cmp
push
mov
jg
jmp
and
movsl
sbb
stos
mov
push
pushl
loop
jbe
and
xor
add
mov
mov
scas
je
sarl
add
lea
sub
and
mov
cmp
adc
fldcw
mov
clc
mov
gs
xchg
outsb
inc
test
fidivs
pop
cmp
cmpsb
fisubrs
mov
mov
inc
sbb
xor
inc
sub
and
xchg
icebp
call
cltd
or
clc
lods
pop
dec
mov
jbe
add
jmp
stos
and
xchg
xchg
push
xchg
cmpsl
and
js
shrl
xchg
stc
out
sbb
mov
dec
mov
mov
push
cmp
xor
andl
ds
sar
ljmp
add
inc
adc
faddl
sub
push
dec
sub
xchg
subl
inc
push
cmc
lcall
outsb
ljmp
aas
jge
add
test
sub
push
arpl
ljmp
outsl
loopne
sbb
cmp
fisttpl
test
add
or
jecxz
cwtl
shrl
cli
mov
and
enter
mov
xor
xchg
lock
inc
stos
sub
call
add
xchg
aaa
xchg
add
jle
outsb
push
movb
call
cmc
lahf
mov
sbb
ja
pop
sbb
xor
cli
call
sbb
and
jbe
or
add
push
lahf
fdivp
ljmp
sahf
jmp
inc
jne
mov
nop
or
ret
ljmp
cmpsb
cli
test
jns
xchg
aaa
cs
sbb
or
lea
add
jle
out
cli
imul
movsb
push
inc
mov
ds
pop
stc
push
sbb
cli
sbb
test
test
jb
insb
mov
decb
fsubl
pop
and
jge
cli
jg
pop
out
inc
or
addr16
jp
fcmovne
cltd
or
jns
xchg
xor
mov
pop
pop
call
stos
push
shl
cmp
sbb
dec
incl
mov
adc
stos
xchg
sub
cmpsb
stos
bnd
insb
add
scas
jp
add
nop
pushf
pop
or
inc
repnz
sahf
jae
test
nop
mov
push
sahf
adcl
pop
add
sub
mov
fiadds
cltd
dec
sarb
outsl
fsubrl
xchg
adc
lahf
cmp
subl
mov
lea
xchg
pop
push
and
or
adc
ja
clc
pushl
add
gs
sbb
arpl
cld
data16
xchg
sbb
cmp
bound
dec
inc
std
data16
stos
pop
mov
pop
push
dec
dec
or
or
mov
and
call
cli
and
stos
icebp
mov
mov
outsl
push
pop
fs
popf
js
dec
lahf
xor
sub
pushf
xor
add
rclb
inc
dec
mov
sbb
push
je
or
jle
cltd
dec
cmp
and
xchg
std
daa
adc
pop
lods
mov
cmc
das
call
pop
inc
xor
adc
sar
mov
and
xor
mov
mov
xor
dec
inc
xor
sub
mov
aas
inc
loop
das
and
aaa
addb
mov
jno
pop
sbb
popl
ljmp
jbe
xor
xor
movsl
mov
inc
sbb
mov
and
aaa
test
cmpl
jle
cmp
pop
push
in
fildll
sbb
pop
push
push
push
loope
jg
hlt
xchg
insb
movsl
mov
inc
lods
outsl
jp
sub
adcl
mov
mov
inc
mov
jmp
lods
push
das
nop
lock
out
out
push
data16
fildll
jg
sbb
aas
add
and
sbb
sub
cmp
mov
add
out
and
adc
lods
cmpsb
adc
mov
push
add
ret
hlt
mov
or
pop
jg
in
cld
aas
sbb
pop
fsubl
jb
pop
mov
iret
movsl
pushl
cmp
mov
adc
popf
xor
divl
popf
inc
repz
mov
lret
leave
mov
push
xor
lahf
jb
movsb
add
rcrb
lcall
popa
imul
mov
xchg
or
sub
or
sbb
fwait
and
ds
ja
test
adc
pop
decl
xchg
push
inc
cmp
lods
aas
sub
imul
mov
fdivs
hlt
pop
add
xor
or
ljmp
lock
cmp
xor
arpl
sbb
scas
clc
cmpsb
cwtl
mov
popf
scas
movsl
ds
hlt
fwait
jg
sbb
and
sahf
cld
jns
adc
aam
arpl
rclb
sub
clc
push
aam
push
or
outsb
sbb
mov
mov
xchg
movsl
lods
adc
push
pop
adc
jg
push
insb
scas
rcll
jbe
mov
push
push
pop
mov
xchg
xchg
jmp
cmp
xor
dec
add
adc
mov
push
pop
lcall
adc
and
add
push
jg
mov
jmp
daa
xchg
pop
sbb
sbbl
and
push
xchg
sbb
outsl
jb
test
nop
or
adc
decb
pushw
or
xchg
test
lcall
aam
stos
jl
mov
jl
sub
lock
mov
mov
mov
mov
mov
cmp
pop
cmpsl
push
rcrb
outsb
bound
lods
and
aas
decl
sbb
sbb
adc
aaa
add
dec
and
cmp
rcrl
pop
dec
xor
decb
mov
lock
mov
sbb
jbe
mov
cmp
inc
mov
mov
sub
and
jle
in
pushl
or
sbb
jecxz
cmp
inc
jge
sub
sbb
or
mov
inc
cmp
aaa
push
cltd
and
ljmp
ds
sbb
std
inc
push
pop
adc
add
aas
lret
sub
or
mov
ljmp
jae
sbb
add
push
sub
sbb
xor
cltd
adcb
test
lret
mov
mov
sarb
sub
dec
sub
mov
inc
add
push
loope
push
xor
mov
ss
sbb
dec
mov
aas
inc
mov
cli
jg
pop
test
leave
or
sub
push
ret
and
das
bnd
insl
fmull
push
ljmp
or
jnp
sbb
sub
cwtl
sbb
or
js
push
mov
lcall
loopne
xor
cmpsb
xor
lock
mov
out
bound
and
jge
xchg
mov
sub
or
mov
mov
dec
lock
cmp
ds
fs
push
mov
mov
lcall
dec
push
outsb
int
add
add
addr16
sbb
fsubl
push
pop
cli
cmp
imul
sbb
outsl
sarb
sbb
lds
js
adc
pop
jo
sti
movb
ficompl
ss
jns
cli
cmp
decl
jecxz
and
add
popf
sub
xchg
sbb
add
out
add
pop
adcb
pushf
and
movhps
stc
cmp
push
and
add
scas
and
aaa
xchg
lods
and
movsl
adc
decl
or
push
imul
call
pop
dec
daa
jne
add
pusha
aam
xor
mov
test
pop
mov
push
and
and
sbb
or
aas
clc
cmp
jmp
push
add
shr
cmp
add
sub
movb
pop
adc
push
aas
push
lcall
sbb
repz
adc
dec
push
sub
daa
xor
loope
mov
push
das
pop
inc
enter
push
es
decl
xor
add
adc
xchg
sbb
pusha
xlat
pop
cwtl
mov
push
lock
mov
dec
fs
pop
sbb
mov
call
add
inc
imul
pop
mov
test
dec
add
pop
subb
adc
mov
mov
jmp
dec
incb
cmp
mov
cmp
cmp
sub
mov
cld
imul
fsts
mov
std
jae
rcll
adc
pop
cld
push
push
add
jmp
push
sbb
mov
sbb
loope
je
jp
and
add
mov
cwtl
rcr
push
loopne
and
mul
daa
bound
cmpsb
mov
adc
jb
add
or
push
push
fs
out
out
xor
call
gs
sbb
adcb
and
sub
lret
fwait
sbb
or
pop
cmp
ljmp
xor
adc
jl
sbb
push
fcoml
bound
dec
fs
cs
xchg
sub
jne
inc
and
sub
daa
sbb
jo
add
adc
pushl
sbb
jmp
adc
xchg
and
movsb
imul
gs
jmp
sahf
pop
jp
int
decl
int3
sbb
inc
xor
sbb
cmp
icebp
xchg
sub
loope
out
clc
out
dec
jle
clc
xor
fiaddl
sbb
mov
jg
jecxz
inc
cmp
stos
or
xor
dec
jge
jle
pop
mov
sbb
ret
push
add
hlt
fcomip
jg
cs
aam
adc
stc
and
or
lret
adc
sub
dec
add
mov
push
jge
cmp
lods
push
out
or
decl
cmp
jnp
push
popa
cmp
pop
mov
mov
mov
cmpb
cmp
cwtl
insl
fistps
ljmp
push
mov
push
sub
mov
sbb
sbb
cld
pop
add
push
mov
rolb
das
js
cmp
jecxz
jmp
push
in
fnstcw
dec
or
daa
mov
adc
pushl
or
push
les
pop
jae
repz
add
mov
push
inc
or
adc
xor
dec
rcrb
jbe
xlat
jo
lods
jg
jb
pop
pop
sub
jmp
and
test
jnp
sub
sbb
sbb
push
popf
mov
inc
add
inc
cs
arpl
das
xchg
mov
sub
xor
outsl
stc
dec
popa
lret
das
mov
cmc
fstpt
adc
push
cli
lcall
add
and
sub
jg
cmp
dec
sbb
clc
mov
push
jne
pop
daa
daa
cwtl
fimull
pop
hlt
pop
pop
xor
and
or
adc
sub
decl
testb
inc
int3
sbb
enter
sub
add
sbb
jnp
jmp
push
sbb
ret
lods
sbb
into
cmp
or
mov
pushl
adc
and
adc
inc
sub
adc
or
daa
cmp
add
cmp
jbe
mov
jae
or
jp
and
in
sbb
sub
sti
push
cld
ja
xor
push
call
jnp
cmp
push
cltd
or
jge
jg
xor
cmp
daa
stos
pop
or
repz
insb
cmp
jmp
push
sub
mov
and
call
jg
cmp
fsqrt
test
sub
push
cmp
or
mov
nop
imul
movsb
dec
es
inc
scas
or
out
or
adc
bound
dec
push
add
add
mov
cmp
push
lock
mov
aad
rorb
out
xor
mov
add
and
aaa
adc
rcl
mov
lret
sub
imul
pop
add
add
lock
dec
orb
mov
mov
ds
and
call
add
sub
je
xor
les
decl
and
rcl
jnp
sbb
cmp
cld
or
sbb
sbb
cmp
or
mov
popa
push
aas
in
sub
or
xor
imul
dec
or
jg
add
and
pushl
mov
das
sbb
push
xorl
dec
shrl
call
dec
es
in
das
pop
lea
mov
add
sub
cmp
and
je
lcall
and
xchg
jg
filds
pop
outsl
jo
int
pop
push
es
sub
pushl
ss
push
cmp
push
jp
ljmp
cld
and
adc
cmp
test
and
das
ja
xchg
lret
add
or
and
mov
adc
xchg
xor
mov
push
sub
sub
imul
jnp
dec
sub
cmp
sub
popa
sbb
add
out
mov
cmpsb
addr16
mov
or
sbb
lcall
jo
mov
mov
pop
outsl
cmp
pop
and
mov
lcall
lret
sub
pop
xor
cs
pop
adc
adc
sub
call
jo
mov
ja
mov
xchg
adc
push
jae
pop
jns
aam
ss
lret
cmp
push
sti
enter
sbbb
add
js
ret
mov
add
inc
push
jle
clc
or
xchg
mov
push
push
lods
cli
pushl
sub
sub
fists
push
cmp
push
add
jle
xchg
ljmp
xchg
incb
adc
xor
add
lret
adc
dec
jl
je
inc
push
or
incl
sub
sub
jbe
sub
xor
dec
adc
sub
ret
and
push
add
lcall
push
adc
mov
adc
aaa
ds
cmc
fists
sub
jecxz
jo
push
adc
jp
adc
sbb
mov
jmp
les
add
movsl
out
add
jno
movsb
repnz
pop
stos
or
push
jnp
jbe
in
pop
jecxz
fwait
cmp
jl
dec
xor
cmp
push
loope
sbb
sub
mov
pusha
jbe
pushl
sbb
xor
insb
inc
or
cmc
sbb
sub
aaa
rol
movsb
adc
sar
call
push
sub
pop
push
test
ja
mov
or
jnp
push
xor
mov
cli
add
fwait
or
ja,pn
dec
inc
or
and
adc
cmp
ffree
lcall
mov
mov
adc
ret
push
add
dec
inc
cmp
std
lcall
std
push
rol
and
ss
sub
push
pop
aas
inc
out
xchg
pop
popa
xor
cld
test
imul
jns
mov
jb
push
push
aaa
sti
and
les
ret
es
into
into
push
xlat
dec
push
imul
lcall
popf
imul
jne
push
xor
mov
sub
pop
cwtl
inc
ljmp
or
cmpsl
sbb
mov
mov
ret
inc
adc
cmp
jg
mov
sbb
rcrb
jle
push
and
adc
ret
sbb
cmc
pop
mov
clc
pushl
mov
pop
sub
pop
xor
ds
cmp
lret
add
mov
adc
pop
cmp
xlat
pop
insb
loopne
mov
push
or
and
in
sub
repz
adc
test
sbb
and
fimull
cwtl
lock
and
jp
test
cli
jl
cmpsb
movsb
mov
push
enter
and
push
pop
sbb
cld
pushl
mov
pusha
push
push
enter
or
inc
fmull
lods
sbb
in
xor
or
sahf
xchg
cmp
dec
aas
mov
add
sbb
aas
stos
xor
inc
inc
sub
es
pushl
and
xor
jmp
and
ds
jecxz
mov
incl
pop
pushf
xor
jnp
pop
fistps
clc
add
mov
ljmp
decl
push
bound
and
incl
adc
andl
ss
movsb
sar
inc
add
push
add
scas
xor
fimuls
icebp
xor
cmp
lcall
dec
cmp
daa
jne
es
or
cltd
jl
rorb
cld
pop
cmp
fs
push
stc
and
pop
pop
jb
add
aaa
add
inc
push
sbb
jmp
jnp
cmp
and
push
mov
sbb
in
sub
pop
dec
or
inc
add
inc
mov
hlt
dec
loope
test
or
out
mov
mov
add
cmp
icebp
lds
pop
and
mov
sbb
ljmp
mov
or
xchg
pop
and
pushf
pop
pop
es
push
std
mov
cs
sub
pushl
rcll
push
sub
cmp
in
add
sbb
or
add
call
jo
xchg
add
pop
fildl
testl
fwait
scas
lock
rorl
rcrb
out
sbb
fcmovb
add
mov
jg
and
push
sbb
add
mul
lcall
roll
int3
and
inc
std
bound
mov
in
push
inc
lods
mov
sbb
aaa
sbb
adc
data16
mov
push
shrl
and
jns
enter
sub
push
out
icebp
sbb
adc
aas
sbb
iret
inc
push
sub
mov
hlt
xor
scas
es
pusha
lds
in
jne
jo
or
mov
jg
mov
push
pop
push
sahf
rol
outsl
add
pop
icebp
xchg
inc
repz
jle
adc
jp
incl
pop
adc
push
xor
add
xorb
dec
std
shll
lcall
sub
xor
aas
inc
push
push
add
cmpb
movsl
mov
sbb
cmp
lds
pop
pushl
lods
mov
shll
sbb
fwait
pop
xor
cmp
in
rolb
aas
push
idiv
rorb
xor
call
decl
sub
jno
inc
adc
push
ljmp
fdivs
mov
sub
scas
and
adc
dec
xor
sub
pusha
scas
sbbb
stos
inc
add
data16
jg
call
xchg
mov
popa
rorl
ficoms
jnp
inc
loope
cmp
js
dec
hlt
out
push
pop
testl
clc
fwait
test
ja
jecxz
jge
sub
mov
rcr
adc
xchg
pop
mov
test
loope
xchg
pop
inc
pop
push
inc
add
pop
rcrl
cwtl
pop
sub
pushf
xor
push
pop
inc
int
or
fistpl
ljmp
cmp
add
mov
fsubp
push
mov
jg
add
cmp
js
pop
icebp
pop
mov
xor
push
out
nop
jbe
pop
dec
imulb
pop
cmp
outsl
cmp
cmpsl
aad
mov
adc
popw
sarb
dec
inc
adc
das
stos
clc
imul
repnz
pop
int
pop
adc
lods
sbb
or
jmp
inc
push
clc
inc
cmpsb
fildll
sub
or
or
push
or
repnz
jg
add
sub
in
jbe,pn
or
movl
ds
loop
add
xchg
out
mov
sub
vpsrad
dec
incl
subb
sub
add
aam
cld
ljmp
mov
add
push
cmp
repz
fldenv
cwtl
cld
and
push
stos
cli
or
in
cmp
js
jl
mov
xor
xor
mov
mov
out
or
sbb
inc
sbb
push
ds
das
mov
add
data16
adc
and
inc
mov
sbb
pop
lret
or
jp
pop
and
inc
loop
pop
jl
ret
insb
sbb
test
sub
fs
mov
outsl
inc
adc
mov
sbb
aas
jge
mov
pop
xor
lock
or
pop
in
aas
push
inc
adc
jmp
push
shlb
xor
xor
icebp
mov
ds
mov
push
push
cld
and
inc
pop
push
incb
jg
test
push
dec
push
lahf
and
pop
imul
cli
mov
mov
fwait
sbb
add
adc
and
mov
cltd
sbb
push
pop
das
pop
mov
repnz
pop
or
dec
jecxz
push
sbb
mov
bound
incl
out
imul
inc
push
add
lock
jp
or
pop
inc
pop
cmp
sar
xor
pop
pop
aas
test
stos
push
pop
xor
jae
test
std
in
fwait
mov
call
out
nop
pop
into
inc
cltd
addr16
cmp
jbe
aaa
cld
nop
fwait
or
push
xor
inc
cs
fsubs
loope
sub
cmp
sbb
dec
cmp
dec
out
aam
ret
test
rclb
adc
inc
paddd
xchg
inc
in
sar
aam
adc
push
jle
clc
das
rcrb
clc
imul
out
xchg
dec
cmp
mov
pop
inc
das
pop
dec
loopne
and
imul
inc
shrb
jnp
mov
push
inc
cld
lcall
int
sbb
mov
mov
shl
outsl
les
out
test
call
xchg
scas
das
cmpsl
jl
mov
stos
dec
push
add
das
jmp
incl
pop
shrl
cmp
inc
push
or
fisubrs
outsb
sbb
add
or
popf
pusha
adc
mov
pop
imul
pop
mov
jno
or
jno
sub
movsb
jg
lock
repz
sbb
xor
or
mov
cmp
outsb
adc
inc
xchg
cmp
fs
push
mov
push
push
jmp
adc
orb
cli
ss
sbb
fisttps
xlat
push
pop
add
filds
orb
and
cmpsl
sbb
sbb
sub
pop
sbb
mov
outsl
sarb
ret
imul
mov
and
jecxz
push
inc
pushl
sbb
xor
and
ds
shll
subl
sbb
cmp
mov
jle
xchg
jmp
sbb
rol
jo
cmp
in
and
mov
xor
adc
mov
iret
or
mov
hlt
fisttps
jge
inc
adc
push
mov
icebp
movsb
inc
cmp
ljmp
rol
push
stos
arpl
mov
xor
or
cmp
call
outsl
aaa
xchg
jle
mov
jg
or
fisubl
add
dec
jmp
cmp
add
dec
push
incb
mov
ss
cmp
mov
or
jne
jge
xor
or
jmp
pop
es
cs
xlat
sbb
das
hlt
data16
lcall
sbb
aas
andl
sub
push
stc
sub
cmp
sbb
xor
inc
mov
insl
test
ficoml
call
test
insb
roll
mov
xor
stos
inc
dec
dec
rclb
pop
cld
aam
mov
cmpsl
jle
push
popf
out
clc
add
and
push
fdivr
aam
add
repz
sbb
ljmp
mov
dec
mov
shl
inc
or
test
mov
or
aas
jae
outsb
imul
inc
mov
decl
lock
adc
insl
jp
mov
mov
push
movl
push
cmp
or
dec
inc
pushl
push
sub
and
aas
cmp
sub
mov
ja
daa
cmp
inc
inc
icebp
sti
adc
lea
mov
cmp
push
jg
add
push
pop
adc
test
ret
push
inc
xor
mov
sti
orb
scas
add
shll
mov
fs
inc
xor
jmp
sub
sub
mov
cmp
das
popf
aas
mov
add
push
cmp
stc
imul
fisttpll
add
pop
call
add
inc
divb
dec
pop
xchg
lock
or
dec
daa
jae
hlt
push
jne
dec
shrl
xor
jmp
or
out
cmp
iret
pop
inc
stos
std
sub
push
mov
repz
jecxz
cli
cmp
mov
cli
shll
add
xchg
sub
adc
xchg
daa
jo
inc
arpl
inc
jno
filds
test
jg
jbe
dec
cmp
sbb
jle
jmp
xor
xor
shrb
lea
push
call
pop
inc
loop
sbb
mov
inc
jno
xchg
cmp
ja
xchg
cli
decl
stos
test
ljmp
ljmp
addl
lock
jmp
lcall
out
mov
cmp
add
insw
jg
adcl
daa
clc
jmp
cmp
ljmp
arpl
imul
mov
dec
das
xor
test
cltd
stos
mov
out
dec
push
pop
std
pusha
fmull
pop
add
cwtl
pop
fisttpll
js
pop
addr16
sub
jmp
aaa
rcl
mov
or
cs
jbe
sub
or
mov
loope
sub
jb
pop
sub
test
mov
pushl
or
adc
push
repnz
jg
test
lea
pop
mov
filds
cld
add
push
popa
push
adc
out
andb
sub
sbb
decl
xor
std
imul
pop
js
mov
xchg
push
les
sbb
cmp
scas
ja
cli
cmp
xchg
add
jp
sub
sub
cli
pop
fmuls
ja
fisttps
push
pop
mov
jp
jno
test
ret
sub
xor
negb
mov
sub
enter
loop
pop
inc
add
and
scas
pop
cmp
xor
jg
movb
dec
lods
mov
pop
cmpsl
cmp
push
jge
outsb
shlb
cmp
inc
lcall
mov
into
push
pop
sbb
mov
mov
jmp
ljmp
push
add
add
imul
das
insl
arpl
adc
pop
inc
jecxz
cmc
mov
enter
dec
sub
clc
outsb
cmp
dec
push
faddl
call
pop
out
sbb
sbb
xchg
pop
push
xor
cmp
xchg
pop
xor
mov
outsb
xor
in
jge
addb
push
cmp
lahf
outsl
jle
pop
xor
addr16
pushf
daa
adc
gs
shll
cmp
imul
pop
jno
jge
cmp
sbb
fisttpll
cwtl
sbb
dec
xor
loop
es
mov
nop
out
cmp
outsl
jg
jg
sbb
and
sub
dec
roll
inc
cli
pushl
xchg
arpl
mov
rclb
repnz
pop
inc
out
jnp
push
movsb
add
aaa
scas
mov
cmp
mov
add
cmp
sarl
mov
xor
clc
push
inc
jmp
pushl
inc
pushf
insl
sub
sti
mov
inc
addb
stos
jns
scas
sbb
mov
cli
sbb
dec
jg
lret
dec
iret
push
and
scas
mov
cmp
lock
dec
outsl
clc
add
or
jae
and
sub
fwait
adc
roll
filds
shlb
lahf
sub
mov
jp
mov
and
and
cmpsl
sbb
lods
mov
cld
outsl
clc
jle
or
daa
or
scas
sbb
cmp
add
in
push
jg
in
test
je
dec
or
mov
ret
inc
inc
loop
jg
lock
jbe
test
xor
fists
sub
loope
jbe
mov
icebp
fisttps
or
sbb
pusha
ja
cmpsb
mov
ret
jg
std
pop
cmp
xchg
dec
xchg
fsts
jnp
mov
insb
es
push
push
push
lods
stos
fsts
xor
inc
rcl
jge
call
sarb
sub
or
lret
loope
aad
jnp
sub
ljmp
pushl
ret
jne
add
je
push
sub
jl
jg
mov
lds
xchg
add
inc
sarb
xor
jle
bound
lahf
xor
push
mov
ss
xorb
pop
addr16
push
test
jae
xor
mov
sbb
lcall
imul
push
aam
adc
xchg
and
lock
sti
outsb
dec
jle
and
push
inc
pop
dec
mov
rorb
push
mov
stos
lods
add
and
lcall
iret
xor
loop
stos
jbe
lock
loop
negl
jne
test
and
mov
cmpsb
mov
test
out
lds
mov
mov
push
mov
data16
push
jg
and
movsl
mov
pop
ret
mov
inc
mov
mov
lods
fnstenv
dec
xchg
cmpsb
nop
jnp
popf
pop
sbb
jbe
cmp
outsb
shrl
scas
or
sub
push
inc
mov
jo
sti
fmull
lds
jg
xor
scas
push
adc
cwtl
adc
arpl
mov
aaa
or
test
pop
mov
jb
pop
dec
inc
mov
and
sub
enter
xor
and
add
stos
inc
xor
popa
sub
loopne
add
dec
sub
clc
adc
leave
dec
pop
adc
xchg
inc
sar
push
loope
pop
adc
jl,pn
out
and
jbe
dec
push
jnp
add
orl
hlt
pop
sub
and
addr16
and
jg
in
jecxz
js
out
jae
add
lcall
jg
push
add
push
movsl
sbb
add
pop
pop
jge
push
cli
sub
int
inc
aaa
inc
xor
test
pop
test
orb
rcrb
popa
aam
mov
cwtl
add
inc
arpl
push
mov
jbe
pushf
or
sbb
cld
xor
fs
jno
clc
pushl
in
cmpb
xor
adc
add
mov
jb,pn
or
mov
pop
inc
pop
xor
sahf
push
mov
xor
pop
in
push
or
jg
icebp
dec
sbb
dec
and
add
das
ret
fwait
mov
cvtps2pd
pop
jmp
test
mov
filds
negb
arpl
movb
sbb
mov
mov
push
minps
sbb
lock
ss
pop
dec
lret
inc
xchg
xor
jno
daa
xchg
outsb
cld
pop
mov
inc
lret
cs
jbe
pop
lods
adc
adc
std
in
test
mov
out
jbe
dec
cmp
xchg
aas
addr16
aas
or
jg
sub
sbb
xchg
loope
idiv
jg
subb
fldcw
jns
mov
push
ja
jecxz
fadds
add
mov
popf
les
push
pop
clc
jmp
call
aaa
out
pop
inc
int
adc
mov
movsb
xor
and
push
sub
enter
add
push
pushl
add
xor
stos
push
push
xor
push
fld
aaa
std
push
mov
push
test
adc
cmp
jo
cmp
call
lcall
mov
jl
adc
test
push
mov
jg
add
mov
mov
pop
sbb
dec
in
mov
inc
xlat
xor
rol
mov
xchg
or
cmp
pushl
push
cmp
pop
jl
or
jb
loope
push
lods
andb
nop
dec
xor
sahf
add
cltd
movsb
dec
xchg
xchg
incl
movsl
ret
xor
pop
and
inc
sub
pop
cmp
jg
inc
dec
adc
dec
aas
popf
ja
xor
cmp
cmp
xor
sbb
xchg
incb
sub
adc
aad
pushf
cmp
inc
sub
cmpsb
add
sub
repnz
inc
aas
add
mov
or
mov
cmp
ljmp
xor
push
cmp
mov
mov
adc
xchg
cli
add
xchg
les
push
cmp
lcall
mov
pop
inc
mov
adc
cmp
filds
je
dec
push
mov
aad
repnz
or
and
add
mov
js
es
ja
or
sarb
push
clc
popa
cmp
dec
or
in
cmp
dec
adc
ret
pop
jne
sbb
decl
sbb
add
in
xchg
and
push
inc
sbb
repz
pop
or
dec
repz
cmc
ljmp
xchg
push
adc
sbb
cmp
jns
cli
and
gs
adc
push
sub
popa
shll
fiadds
incl
clc
cld
dec
and
xor
cltd
int
cwtl
push
insl
scas
pop
lret
inc
and
fldl
jae
and
sub
loopne
adc
pop
jge
xchg
pusha
decl
in
cmp
mov
rol
sub
sar
push
incl
pop
pop
sub
pop
sbb
in
adc
add
imul
dec
mov
hlt
es
push
ja
jg
movsl
push
pop
outsl
and
jne
std
xchg
stos
gs
test
in
xchg
out
or
cmp
add
decl
dec
dec
sbb
in
add
sub
adc
cmp
fnstsw
popf
cs
xchg
or
lahf
sarb
mov
pop
inc
ds
jae
and
lock
loopne
jbe
sahf
add
jle
sub
and
xor
mov
jg
xorb
das
or
std
lcall
cmp
xchg
sub
sub
pushf
jns
mov
push
std
add
add
lcall
sbb
xor
js
cs
loope
jns
cmp
or
or
mov
aas
push
les
cmp
jp
dec
fbstp
sbb
dec
jle
pushl
cmp
or
cmp
pop
mov
xchg
xor
push
pop
daa
cmp
adc
cmpb
pop
and
aam
es
lret
cmp
rcll
jo
xchg
sub
mov
jmp
fwait
adc
adc
dec
ljmp
and
loopne
xchg
push
mov
or
inc
out
les
dec
setg
lcall
mov
and
add
adc
mov
cltd
add
rorb
cmp
mov
push
inc
mov
outsl
cli
test
lahf
adc
or
dec
and
cltd
sbb
pop
pop
in
jo
xchg
add
mov
sbb
add
dec
loopne
pushf
mov
cmp
adc
cmp
dec
push
dec
mov
aaa
sbb
push
or
xchg
cs
popa
ret
pop
xchg
test
imul
jb
xchg
xor
or
cmp
inc
sbb
dec
es
mov
scas
xchg
lret
orb
pop
jge
inc
jg
test
xchg
xor
iret
push
rclb
test
gs
and
add
aaa
push
enter
push
fildll
fisttps
or
and
sbb
push
adc
push
outsl
les
cmp
mov
lret
xchg
ljmp
jns
xor
jbe
pop
cmc
jg
and
add
test
imul
mov
aas
mov
mov
cmp
pop
ss
mov
jp
push
cmp
add
inc
es
lods
divl
dec
jge
insl
popl
dec
test
js,pn
ret
add
or
rolb
cltd
mov
loope
mov
and
or
jmp
or
add
push
xchg
and
fisttpll
outsb
cmp
add
mov
sar
filds
ret
dec
mov
test
xor
cmpsb
pusha
cmp
cmp
dec
jg
nop
and
or
mov
add
call
sbb
jp
mov
es
push
mov
loope
mov
adc
das
lds
dec
mov
call
das
or
jne
cmp
mov
push
mov
xchg
sub
xchg
and
jg
xor
inc
adc
js
dec
les
lahf
adc
incl
adc
js
cmp
xchg
pop
or
add
scas
push
clc
aas
xchg
jo
and
icebp
push
jbe
push
repnz
push
sbb
push
jecxz
push
add
sub
push
add
gs
jmp
int3
jge
das
das
sbb
inc
jns
lcall
loop
dec
clc
call
roll
or
mov
mov
and
ljmp
je
je
outsb
push
fsubrs
pusha
inc
xor
es
hlt
pop
mov
je
outsb
push
pop
jnp
rorb
mov
cmp
mov
inc
fists
int3
xor
int3
insb
js
mov
fisubrl
xor
dec
fmul
int
jle
jl
jo
mov
dec
pop
add
leave
decl
int
js
cmp
push
or
add
pop
or
sbb
loop
jmp
testl
inc
xchg
cmpsb
add
das
adc
push
and
sub
cli
add
ja
or
out
sbbl
xor
inc
pop
add
sub
decl
popf
inc
jle
push
mov
pop
sub
push
shlb
add
iret
pop
sub
daa
cmp
add
stos
dec
call
push
add
orl
pop
movsb
loope
dec
lods
cmp
negl
das
xchg
push
push
push
dec
pop
cmp
mov
scas
das
fldcw
add
fimuls
incl
inc
ds
mov
lock
xlat
xchg
sbb
pop
sbb
push
adc
das
jp
sbb
shll
jo
and
mov
daa
inc
repnz
sub
mov
movsl
outsb
stos
push
out
clc
sarl
mov
das
mov
jp
push
and
mov
inc
clc
lock
es
mov
les
lcall
xchg
nop
sub
gs
sbb
or
mov
xor
add
and
sbb
xchg
dec
test
cmp
cmp
inc
sbb
pop
addb
and
mov
ds
dec
cs
test
adc
pop
mov
cmp
loop
xchg
adc
aas
or
addr16
xor
ljmp
sbb
and
adc
sub
jo
shl
xor
pop
mov
pop
adc
out
test
call
pop
inc
xchg
sub
loop
jb
flds
sbb
sbb
pop
outsb
xor
add
stos
push
and
and
mov
and
inc
fldl
inc
jo
cmp
loop
mov
push
iret
and
cmpsl
cmp
sbb
mov
push
orb
les
mov
andb
dec
fadds
cld
sbb
and
add
inc
ja
sub
xchg
ss
inc
adc
jb
pop
cmp
fildl
add
or
loope
out
data16
sbb
pop
jge
push
or
lret
xchg
inc
inc
dec
mov
gs
cmp
push
mov
repz
movsb
sub
call
sbbl
and
outsl
xchg
push
inc
mov
push
adc
jp
jg
pop
mov
cmp
shll
sub
cs
jnp
aad
pop
test
mov
mov
adc
inc
es
arpl
xchg
scas
mov
push
pop
xor
pushf
push
sarb
add
and
jg
inc
imul
push
jg
add
testl
das
cmpb
fs
pop
imull
es
add
gs
jg
pop
jne
pop
cmp
push
or
outsb
jnp
and
andb
adc
fwait
cmc
sbb
sbb
inc
push
mov
aas
add
add
and
pop
and
or
test
stos
cli
mov
push
xor
std
and
add
cs
je
lahf
and
add
inc
mov
sbb
dec
gs
cs
out
sarl
jnp
push
insl
mov
adc
shl
ss
add
sbb
mov
push
dec
cld
sub
mov
cwtl
imul
and
call
push
push
inc
fistpl
lret
jo
push
ss
decl
push
sub
aaa
jno
adc
inc
adc
cs
mov
outsb
daa
mov
dec
and
mov
xchg
or
push
shll
mov
sub
mov
bound
push
pop
fistps
mov
ret
add
inc
incl
fldl
xor
imul
jle
and
fldenv
push
and
sbb
cmp
and
adc
inc
sbb
sub
jmp
inc
mov
or
int
loopne
bound
pop
es
jge
push
cmp
mov
aaa
mov
sbb
scas
or
daa
mov
pop
xor
pop
call
insb
mov
dec
xor
mov
mov
mov
mov
cmp
pop
push
daa
cs
adc
pop
mov
roll
out
cmpsb
jo
out
sub
scas
and
mov
add
pop
stc
sbb
pop
inc
clc
jmp
add
icebp
add
fucom
fsubl
aas
xchg
adc
pop
insb
adc
insl
shr
sbb
xchg
pushl
cli
xor
dec
mov
dec
mulps
sub
jbe
call
lock
pop
sbb
add
aas
jg
push
dec
negb
and
pop
outsl
mov
xor
out
pop
dec
adc
xor
and
push
and
cmp
ljmp
sbb
push
push
xor
dec
sahf
xchg
pop
adc
adc
lock
sub
insl
or
mov
and
lcall
mov
add
test
push
popf
sub
cmp
clc
add
adc
scas
test
decl
jle
test
adc
loop
and
push
aam
das
cmp
dec
and
pop
loope
or
dec
mov
xor
sbb
decl
push
adc
mov
push
nop
lock
xor
cld
out
and
popf
dec
mov
sub
sti
or
dec
mov
add
jl
inc
and
mov
pushl
cmp
xor
addr16
cwtl
adc
and
push
mov
sub
sub
lods
add
sub
add
cmp
mov
cmp
xchg
or
mov
sub
ja
movsl
mov
mov
xchg
mov
cmp
push
lcall
das
dec
cs
adc
or
rol
push
push
pop
mov
add
out
push
push
xor
cmp
mov
ret
mov
out
mov
cmpb
sbb
iret
mov
push
cwtl
sub
jns
mov
sub
jmp
or
stos
push
aaa
cmp
repnz
stos
sub
pushl
xor
lods
in
or
adc
or
xchg
xor
scas
cmp
push
xchg
aas
inc
sti
add
xor
jp
adc
mov
sbb
cmp
push
mov
out
out
xor
out
js
insl
roll
out
or
add
sbbb
xor
fistps
or
in
or
cmp
dec
fiaddl
mov
push
xchg
cmp
or
pop
pushl
aas
stos
in
jge
mov
stos
lea
sub
or
cli
inc
push
pop
fs
mov
mov
xchg
sub
movsb
pop
xchg
sahf
mov
pop
ljmp
ret
cmp
dec
call
push
adc
dec
lret
sub
push
call
incl
stos
or
sarb
xchg
xchg
jg
and
ret
icebp
mov
scas
sub
xor
mov
test
scas
mov
add
cmp
push
mov
and
in
sbb
pop
inc
sbb
les
add
aaa
aas
ss
ret
xchg
int
mov
cltd
push
and
call
mov
shrl
mov
test
xor
lock
fadd
or
cld
lock
popa
rorl
cmp
xchg
mov
xor
cltd
dec
add
or
xchg
pop
mov
or
decl
adc
fsubl
fs
das
add
add
decb
mov
ds
ret
scas
jp
jmp
pop
sub
fsin
std
adc
test
pop
lock
ret
xor
cmp
add
jae
movsb
pushl
sub
mov
lea
outsl
and
call
xor
call
jp
js
icebp
mov
xor
xor
lret
push
ret
mov
xchg
xor
insb
jno
or
pop
incl
jecxz
sub
mov
push
pop
push
cs
sub
mov
xchg
adc
sti
and
xor
or
dec
pop
pusha
mov
cmp
and
mov
into
xlat
jne
in
add
icebp
int
dec
adc
adc
test
aas
jl
xor
in
push
test
xor
jb
pop
mov
adc
or
adc
mov
adc
pop
enter
stos
adc
sbb
inc
jno
std
iret
sub
js
lahf
test
sbb
and
adc
pop
out
push
decl
shll
lret
sarl
sub
mov
mov
dec
push
dec
xor
and
scas
push
push
pop
js
mov
inc
fistps
lock
adc
fiadds
push
adc
dec
and
sub
xchg
mov
mov
or
adc
jb
push
mov
sub
test
dec
aaa
pop
clc
adc
pop
mov
mov
mov
test
mov
cmc
pushl
xor
or
cmp
push
xchg
js
dec
sub
outsl
cmp
pusha
cld
cmp
cmp
pop
xchg
pop
decl
sbb
and
push
call
pop
sub
in
sub
sub
ss
jmp
cmpsl
ds
es
movsb
pop
orl
ds
mov
mov
fimull
cmpl
sbb
ret
lret
loopne
add
das
mov
ret
mov
sar
jge
cmp
cli
pop
enter
call
adc
jno
mov
push
pop
xchg
jo
cli
out
inc
mov
jmp
xor
sub
cmp
mov
je
mov
loop
add
cmpsb
add
mov
aam
into
xor
incl
dec
stc
add
shl
or
inc
lods
shrl
pop
cwtl
mov
cmp
aam
sub
push
enter
inc
lods
nop
fidivrs
shll
ljmp
rcrb
ret
iret
xor
jno
and
lcall
jmp
adc
jecxz
fdivrs
push
adc
push
cmp
filds
inc
mov
mov
sbbb
add
mov
sar
decl
pop
mov
jp
lret
cld
fbld
sbb
in
jno
test
repnz
ret
jg
xchg
mov
mov
pop
inc
mov
mov
sbb
in
mov
mov
daa
mov
inc
hlt
dec
pop
cwtl
dec
sbb
xor
sbb
jp
gs
stos
sarl
pushf
es
sbb
xchg
popf
bound
lcall
sub
outsb
cmpsb
inc
pop
andl
incl
neg
xlat
sub
mov
arpl
add
adc
mov
lea
jle
decl
fwait
mov
aam
jmp
jg
ljmp
sub
xchg
out
clc
ljmp
inc
shl
notb
or
lock
lcall
jnp
rolb
jg
in
adc
inc
xrelease
ja
push
icebp
pushl
loop
insl
into
andl
inc
inc
hlt
subb
out
push
mov
inc
and
loope
push
xor
xor
mov
mov
cwtl
mov
fists
sahf
ljmp
std
push
xchg
sub
int
jge
mov
sbb
pop
lods
jbe
les
adc
mov
add
lock
lods
sub
jl
lock
sbb
jg
sbb
lock
or
sbb
test
jnp
pusha
clc
decl
mov
stos
or
or
movsl
pushf
jle
icebp
jg
add
mov
clc
out
cmp
push
pop
mov
and
push
aas
inc
decl
mov
jecxz
mov
mov
sbb
aas
frstor
xlat
mov
fsubl
mov
sbb
jl
sbb
repz
decl
mov
cmp
scas
xchg
daa
popa
cld
mov
add
mov
cmp
ljmp
mov
hlt
or
outsb
mov
and
jge
pop
cwtl
add
mov
lcall
and
jne
pop
or
push
outsb
xchg
nop
pop
mov
push
std
xchg
pop
sbb
xchg
jp
loope
adc
mov
adc
mov
cli
jg
push
sti
xchg
sbb
leave
stos
and
pop
dec
repz
insb
pop
arpl
add
ret
push
or
ret
sbb
in
inc
pop
or
pop
jg
jge
out
jle
mov
sbb
push
adc
clc
pinsrw
adc
mov
scas
jo
mov
aas
orb
or
out
and
cmp
lods
mov
adc
or
bound
cs
mov
and
push
jl
jae
out
xchg
jo
or
outsl
mov
push
pop
dec
hlt
decl
push
sub
or
in
mov
inc
xchg
decb
and
out
pop
int3
xor
cmp
mov
mov
cmp
xlat
rorl
andb
cmp
sbbb
fmuls
and
ljmp
loopne
insb
mov
imul
or
mov
loope
add
fisubrl
or
and
and
adc
cmp
xchg
mov
or
xchg
vunpcklps
cli
in
jmp
xor
out
aas
cmp
xor
fwait
in
sbb
push
clc
push
dec
iret
mov
mov
xor
push
scas
fisubs
lcall
mov
add
pop
insb
into
xor
pop
cltd
popa
fdivp
sbb
xor
and
jecxz
decl
add
jb
les
jnp
xor
xor
flds
imul
xorl
and
or
les
jae
out
mulb
sbb
ret
push
lret
sub
ja
sub
pop
js
add
addr16
clc
sub
dec
das
js
ficomps
and
jbe
inc
adc
and
push
test
jg
mov
sbb
and
loopne
mov
ret
push
iret
insb
dec
sub
fwait
adc
loope
fwait
inc
push
push
or
jmp
push
insb
stc
xor
incb
or
push
adc
je
add
xor
jg
lds
xchg
cltd
aad
mov
xchg
pop
or
es
leave
sbb
fidivrl
xlat
push
and
js
add
ss
mov
mov
add
mov
pop
cli
das
aas
or
inc
scas
pushf
push
sub
lahf
daa
stos
fadd
lcall
cmp
stc
and
mov
add
dec
fwait
push
dec
mov
mov
scas
mov
sbb
push
inc
sbb
and
lods
test
or
jg
mov
jg
aaa
add
rorb
or
adc
mov
in
jae
xor
or
xor
add
out
push
push
adc
in
jns
sbb
mov
adc
jmp
test
push
mov
adc
add
movsb
aam
jno
test
dec
cld
pop
push
dec
and
fwait
bound
adc
fwait
fwait
adc
xlat
ds
shlb
call
pop
or
rorb
data16
mov
inc
adc
dec
aam
mov
push
clc
lcall
mov
int3
imul
loop
add
and
mov
insl
adc
insb
adc
cmpsb
sti
jecxz
insl
add
cli
dec
test
push
lock
inc
xchg
mov
lods
cmp
or
fildl
loopne
add
xchg
push
cwtl
adc
and
pop
adc
jecxz
std
inc
cmp
das
or
sbb
sub
mov
cmp
shrl
fiaddl
sbb
cli
cmc
push
jbe
cmc
nop
cmpsl
inc
cli
inc
loopne
dec
sbb
mov
pop
xchg
mov
mov
outsl
add
and
jno
es
xchg
pop
adc
fwait
jle
inc
sbb
push
sub
push
jo
jne
mov
inc
mov
push
mov
add
pop
xchg
pop
push
insl
js
add
ljmp
cmpsl
clc
and
in
or
jg
daa
push
fnstcw
adc
outsl
jecxz
inc
imul
sbb
inc
mov
aaa
sbb
mov
js
sbb
mov
or
mov
mov
dec
sub
aad
sub
adc
or
bound
std
call
dec
mov
or
jecxz
add
add
cmp
fs
clc
fildll
sbb
or
xor
daa
xchg
loopne
cld
call
adc
pop
sub
adc
add
add
inc
or
sbb
dec
push
xor
mov
into
clc
pop
pop
cs
cmp
aad
and
mov
sar
ja
xlat
sbb
pop
cld
or
fs
push
sub
pop
aaa
call
fdivrs
cmp
ljmp
sub
pop
out
and
addr16
insb
or
mov
or
add
fdivs
or
ja
jp
dec
jmp
insb
sub
mov
and
and
inc
adc
sub
pop
add
and
decl
inc
or
arpl
push
inc
sbb
test
aas
dec
cmp
incl
insl
mov
or
sbb
push
cmpsl
push
adc
and
mov
jge
rcll
nop
aas
mov
lea
out
test
mov
bndldx
int
decl
sbb
test
sub
outsl
mov
add
subl
lods
cmp
pop
sub
xor
adc
mov
popa
das
inc
pop
adc
push
adc
out
and
cmp
out
push
fbstp
sahf
cltd
mov
fsubrl
sbb
pop
icebp
cmc
xor
push
mov
insl
mov
jb
dec
ret
into
jne
jnp
mov
sub
dec
je
cltd
mov
and
ljmp
or
scas
pop
and
sub
js
call
cld
les
cmp
mov
cmp
push
mov
push
xchg
aas
push
pushf
in
aaa
std
mov
testb
fdivl
iret
pop
dec
mov
jno
icebp
jmp
adc
sub
std
popa
aaa
ja
cmp
add
scas
or
nop
mov
and
sub
lcall
out
cmpsb
outsb
xlat
cmp
adc
jp
sbb
xor
adc
cld
pop
and
or
aas
add
aam
mov
lcall
xor
xor
jae
xor
sub
add
and
hlt
insl
mov
mov
or
decl
jbe
push
lret
incb
pop
push
push
xor
pop
orl
or
mov
js
and
frstor
dec
jnp,pn
xchg
imul
sbb
sti
sbb
movsb
fdivrl
les
aaa
push
inc
lret
push
adc
test
pop
sbb
adc
loop
test
mov
jns
scas
insb
sub
gs
lret
pop
arpl
or
xor
xchg
fcomp
inc
jb
inc
cmp
sub
out
mov
xchg
insb
cmpsl
jle
cmp
pop
inc
sbb
mov
xor
insb
or
cs
insb
inc
rclb
jg
push
data16
insb
sbb
sub
xchg
adc
fldl
negb
ret
in
sub
repz
decb
sub
or
inc
dec
dec
push
mov
loop
fld
scas
aad
cmp
andl
outsb
push
sbb
push
xor
push
add
pop
add
pop
fs
dec
and
cmp
pop
out
mov
cmp
add
ret
ja
int
sbb
xchg
aaa
add
call
inc
adc
xor
fstp
cmp
push
adc
push
shll
outsl
push
cwtl
jp
scas
stc
add
and
xor
cmp
nop
adc
jnp
push
sahf
sbb
out
pop
adc
fcomip
push
cwtl
inc
jle
dec
push
jo
jl
and
mov
loop
push
or
pop
jp
or
mov
jo
xor
add
pushl
inc
adc
add
jnp
push
push
mov
sti
clc
imul
push
or
movsb
inc
sbb
cli
and
jae
outsb
loope
push
lods
arpl
jns
sbb
mov
mov
gs
pop
xor
or
adc
or
int
cmp
adc
pusha
movsb
pop
push
add
clc
lret
pusha
pop
sbb
bound
sub
sub
xchg
cmpsl
out
jbe
gs
mov
mov
add
cmpsb
add
dec
xor
and
inc
daa
push
cmp
add
dec
test
and
mov
subb
or
xchg
mov
inc
add
pop
inc
cmp
push
gs
outsl
dec
push
scas
mov
mov
xchg
xchg
leave
clc
out
test
mov
bound
dec
sub
pushl
xchg
cwtl
dec
pop
lret
inc
dec
xor
push
loopne
daa
jecxz
add
mov
mov
adc
mov
cmp
push
pop
mov
cmp
pop
dec
jne
clc
push
ficompl
sbb
mov
cld
xorb
push
inc
or
add
imul
add
adc
cmp
stos
movsb
icebp
dec
data16
xor
adc
pop
clc
movsb
mov
dec
xor
cmp
xchg
mov
add
test
and
icebp
jg
xor
jl
sarl
mov
test
pop
lcall
jmp
das
cmp
ljmp
push
mov
pop
adc
cld
hlt
lock
cmp
gs
add
dec
xchg
andb
ja
incl
inc
in
xor
sub
lds
mov
movsb
push
wbinvd
inc
adc
xchg
cmpb
mov
sbb
jbe
filds
mov
addr16
and
in
or
fnstenv
test
pop
cmp
ljmp
fdivs
sahf
xchg
push
xor
pop
jge
fistps
lret
loop
subl
into
pop
sbb
cltd
sub
mov
lds
mov
cmp
decl
sbb
xchg
nop
sbb
sbb
fs
sbb
mov
sbb
incl
push
xor
xor
fsubl
mov
pushf
or
cs
adc
adc
pop
sub
or
pop
adc
cmp
pop
inc
add
mov
mov
cwtl
jmp
xlat
popa
lea
inc
mov
mov
scas
jl
xchg
dec
sar
inc
stos
pop
lret
ds
sbb
add
xor
imul
pop
clc
cs
jne
lahf
mov
outsl
les
mov
sbb
and
cltd
insb
mov
scas
push
inc
aad
ffree
fildll
xchg
daa
outsb
in
rcrb
mov
lcall
pop
mov
sbb
scas
adc
adc
fildll
cmpsl
xchg
jmp
xchg
push
push
pop
int3
ret
into
add
pop
incl
cltd
aad
jp
push
fsubs
test
cs
fsts
jl
jnp
fimull
jle
xor
aas
and
es
or
mov
dec
xchg
ret
inc
and
sahf
daa
test
rcr
or
sub
and
outsl
adc
sarl
fcmovb
movsb
mov
mov
push
mov
pop
and
adc
xchg
sbb
add
mov
mov
cmpsl
leave
cli
add
aaa
or
mov
pop
xor
lods
add
pop
inc
addl
or
cli
or
or
cmp
lret
loopne
or
push
lock
inc
pop
ljmp
sar
lahf
insl
test
hlt
and
ljmp
enter
cmpsb
call
push
ja
jns
nop
mov
jb
ljmp
loopne
fs
ret
mov
dec
sbb
mov
add
filds
xor
repnz
inc
cmp
imul
cmp
mov
sub
scas
int
inc
adc
fbstp
ljmp
xlat
pop
push
clc
sbb
or
fst
mov
cmpsb
jecxz
inc
xchg
jg
sar
out
push
pop
adc
stc
shlb
jae
loope
mov
lea
pop
pop
imul
inc
lahf
out
sbb
sbb
cs
and
repnz
jb
xchg
push
or
dec
sub
into
and
jmp
loop
inc
push
pop
xchg
shll
xchg
or
and
xor
jg
int
jge
bound
sub
sub
inc
outsl
push
call
mov
xor
adc
jbe
addr16
call
fprem1
adc
aad
adc
push
inc
ret
fwait
add
in
jg
clc
inc
xor
fists
sub
xchg
lcall
dec
rcrl
je
pop
and
mov
jno
fsubs
adc
or
lcall
xor
fisubrs
call
adc
or
lcall
cwtl
sbb
or
cmp
fisubl
sub
inc
mov
sbb
jg
adc
jp
add
xor
mov
mov
jne
pop
pop
inc
fcomip
fwait
push
or
xor
cld
add
add
aad
sbb
out
or
push
push
or
push
push
data16
hlt
jge
ret
lea
mov
add
fbld
imulb
pop
inc
addr16
xor
or
rcr
add
inc
push
inc
ds
xor
or
incl
mov
pop
loope
or
test
in
jbe
pop
mov
inc
aad
pop
mov
rorb
push
pushf
add
lock
call
lods
frndint
cmp
push
incl
add
and
mov
sub
clc
out
add
stc
clc
and
push
dec
mov
sbb
cmp
push
std
aaa
ficomps
and
sbb
sbb
add
stos
clc
sbb
mov
ljmp
rcrb
add
les
adc
dec
sub
cld
aad
add
test
push
lods
ja
fcmovu
sbb
sbb
push
and
pop
inc
push
adc
fnstsw
mov
push
pushf
push
pop
inc
sub
out
add
cmc
shlb
sbb
pop
xor
pop
in
lock
add
adc
cmc
std
adcb
jo
xor
add
jnp
out
mov
cld
mov
mov
adc
rcr
jmp
cld
jmp
popf
daa
jle
repz
sub
loop
sbb
in
cmp
repz
loop
fmuls
lcall
iret
or
add
cmpsl
int3
loope
adc
sub
filds
add
xlat
in
push
aaa
hlt
in
sbb
sub
cld
fildll
cld
loopne
pop
std
in
addl
out
mov
scas
inc
daa
sbb
rorl
sbb
out
sbb
data16
jge
sub
loopne
adc
mov
push
arpl
shrl
cmp
clc
push
mov
adc
ja
pop
xchg
call
mov
add
jp
out
jp
mov
hlt
jno
push
cmp
push
and
sbb
fildll
mov
inc
cltd
dec
sar
adc
xchg
jle
lock
sti
sbb
frstor
cmpsl
and
push
dec
sub
push
inc
and
nop
aam
xchg
jg
lock
dec
out
sbb
outsb
cs
add
decl
cwtl
paddusb
mov
enter
ss
mov
push
xchg
sahf
dec
out
lahf
in
xor
inc
fisubs
mov
cmp
cltd
push
push
sar
mov
add
adc
and
and
or
push
in
push
and
shll
pop
mov
lret
xor
mov
insb
jbe
xchg
aaa
xchg
xchg
push
push
xchg
adc
pcmpeqd
or
mov
sub
pop
push
xlat
dec
stos
or
sub
ret
incl
add
repz
xchg
jo
lret
add
scas
mov
scas
push
ja
fstpl
lea
jmp
ret
lret
and
lcall
inc
add
or
lcall
pop
push
pushl
lahf
inc
fdivp
ds
mov
inc
xor
ljmp
and
inc
fiaddl
inc
testb
push
fwait
mov
sub
shl
cmpl
jmp
cwtl
clc
push
jecxz
inc
add
xor
mov
add
cmp
jbe
xchg
icebp
das
loopne
push
cmc
pop
cmp
adc
sbb
imul
lcall
and
bound
cs
mov
pop
inc
push
adc
push
push
dec
pop
xor
push
mov
outsb
loop
arpl
mov
movsl
mov
mov
jno
cmp
push
data16
es
cmpl
add
push
fsts
mov
mov
cmp
and
jecxz
adc
sub
inc
add
cmp
sub
mov
aad
fbld
lss
inc
and
fisttpl
jae
std
pushl
xor
jae
ror
sti
mov
inc
pop
mov
lock
lock
inc
inc
test
sbb
cmp
sub
sbb
mov
and
xlat
cli
pop
jb
clc
lock
gs
push
dec
ret
push
xor
xchg
in
cmp
ja
jnp
jp
aaa
imul
xor
into
push
mov
dec
loop
cmpl
sub
movsb
or
xor
ficomps
out
push
fildll
xor
and
xor
push
outsb
pop
insb
push
iret
mov
mov
inc
out
popa
jne
clc
pop
cli
dec
inc
xchg
xchg
xchg
sub
mov
lret
or
or
pop
faddl
sbb
xchg
std
mov
scas
xchg
lods
aaa
add
pusha
ja
jg
out
daa
or
dec
push
lds
sarb
inc
push
mov
shlb
mov
dec
mov
or
data16
jmp
push
push
mov
xor
pop
and
lcall
rorb
es
sar
add
sbb
imul
sbb
jnp
pop
lds
mov
jae
cmp
aaa
das
jo
xor
movaps
or
pusha
pop
xor
fnstsw
out
or
xchg
fcoms
jg
lcall
test
add
pop
cmp
xor
gs
cmp
cmp
out
xor
outsb
push
mov
mov
xchg
mov
js
pop
mov
mov
sbb
packuswb
ja
ret
insl
test
sbb
fldcw
outsl
and
mov
scas
cli
stos
sbb
or
aas
loop
cmp
sar
ljmp
rorl
cs
enter
cs
in
mov
call
aad
pushl
add
cmp
ret
and
push
fildll
cltd
clc
pop
add
mov
sub
data16
fisttps
sub
jmp
sub
dec
ror
add
mov
lcall
jne
into
pushf
push
mov
cld
aaa
xchg
cmpsb
push
xchg
xor
cmpsl
mov
outsl
dec
mov
mov
sbb
mov
out
sbb
dec
inc
pop
fadd
leave
clc
add
cs
pop
scas
rcr
mov
cmp
pop
fs
cmp
xchg
ljmp
daa
mov
imul
fidivl
ljmp
dec
enter
cmp
xor
push
mov
add
pop
imul
les
push
dec
movsl
jg
mov
mov
cltd
adc
or
cmpl
loop
inc
in
insb
push
aas
addr16
es
push
lret
stos
test
add
pop
or
pop
fdivl
sub
sub
bound
and
popa
mov
jae
pop
jle
mov
sbb
pop
mov
pop
sarl
je
push
ja
imul
sub
push
pop
gs
aaa
cmpl
data16
and
iret
xor
push
sub
cld
pop
mov
xchg
sahf
nop
mov
es
cmpsl
pop
cmpsb
pop
jle
xor
incl
or
nop
clc
nop
in
mov
sbb
mov
push
dec
das
aaa
inc
loop
or
jbe
test
aam
in
mov
out
cwtl
rcll
into
mov
xor
push
cld
filds
imul
xor
inc
lcall
out
repz
xor
lea
push
fildll
sub
fbld
sarb
or
push
push
in
jno
fsubrl
jg
and
push
in
push
jl
fdivrl
jne
cs
repnz
mov
lods
add
push
pushl
aaa
andl
cmpsb
aaa
insl
mov
xchg
les
out
push
int3
dec
mov
xor
ljmp
sbb
sbb
xchg
mov
inc
jle
push
inc
adc
dec
adc
pushl
cs
in
mov
fucom
xchg
push
mov
pop
gs
cmp
pop
jge
std
mov
add
jno
mov
pushw
push
push
test
pop
out
push
lcall
jle
in
mov
push
pushl
inc
or
stos
test
aad
ja
inc
xor
cmp
ds
fcomip
lock
das
sar
mov
mov
mov
xor
das
inc
je
je
mov
mov
mov
xchg
or
xchg
fnstenv
xchg
add
xor
push
es
mov
clc
fistps
xchg
pop
arpl
adc
push
jle
mov
push
cmp
ja
mov
call
lock
or
movsb
scas
cmp
mov
lea
cmp
push
inc
loopne
and
aaa
pop
and
xchg
pushw
lcall
mov
adc
add
mov
cs
test
mov
stos
add
cmpsb
aam
cs
neg
mov
adc
cmp
in
test
test
jle
xchg
out
lea
push
push
xchg
jl
and
filds
movsl
xor
xchg
aas
adc
pushl
pop
cmp
add
call
and
insl
pop
negl
loope
insb
lret
mov
sub
ffreep
roll
fisttps
add
scas
mov
cmpsl
jno
mov
jecxz
dec
inc
push
stc
lcall
xor
mov
scas
sbb
ds
sbb
add
jo
push
cmpsl
xorl
stc
repnz
insb
std
aam
lcall
leave
les
mov
jle
cs
clc
jg
lock
dec
mov
clc
aas
sbb
mov
add
mov
jl
jmp
mov
call
sbb
nop
stos
orl
sarl
aaa
pop
loopne
push
imul
mov
sub
and
jmp
jae
push
pop
add
push
cmpsl
stc
aas
test
cmpb
loop
adc
lcall
mov
insl
mov
lahf
push
icebp
xor
sub
cmpsb
adc
inc
xchg
pop
sub
out
push
mov
in
adc
cmc
loop
pop
clc
add
mov
inc
sahf
pop
mov
sarb
sub
mov
xchg
icebp
mov
sbb
jbe
adcb
pop
loopne
xchg
jb
and
nop
clc
sbb
cmp
xchg
sti
and
clc
push
loope
int
adc
jg
push
cmp
ss
nop
sbb
cmc
mov
out
or
sub
pop
arpl
sbb
loop
fisttps
push
sub
sub
cs
rcr
or
hlt
in
sub
daa
sbb
mov
cmp
cmp
or
sub
mov
vcvtss2si
cmp
sub
ss
nop
cmp
fnstcw
ljmp
leave
pop
bound
mov
push
out
test
adc
insl
scas
ret
add
imul
add
loopne
scas
add
out
daa
and
mov
pop
dec
jl
lods
rcll
cmp
hlt
incl
inc
xor
pushl
sub
dec
jg
sub
and
outsl
mov
sub
shl
adc
rcr
or
jl
aaa
or
xor
movsb
xor
loope
jmp
dec
outsl
lods
in
idiv
cmp
fwait
movsl
mov
push
mov
xor
icebp
lret
adc
mov
push
add
es
sbb
mov
int
sbb
and
and
jg
test
mov
pop
imul
loop
out
adc
cmp
jp
icebp
xadd
push
push
sbb
loop
jo
incl
and
loopne
add
and
aas
sub
jle
loop
add
pop
ret
lret
sbb
and
popa
push
ja
adc
adc
movsl
xorb
cli
mov
jg
cmp
movsl
enter
push
pop
or
and
sbb
mov
repz
outsb
shll
rol
pop
clc
add
xchg
popf
or
insb
addr16
fildll
or
sub
int
pop
insl
jge
call
sbb
aaa
add
jno
sbb
and
sbb
sub
push
cltd
jg
pop
push
pop
adc
lcall
std
fwait
negb
outsb
daa
xor
sbbb
loop
xchg
popf
mov
dec
mov
sbb
andl
repz
popf
call
pusha
jb
mov
mov
addr16
dec
scas
mov
clc
lahf
ja
andl
in
ja
mov
push
adc
insb
pop
pop
out
xchg
inc
push
or
inc
pop
test
mov
fisubrs
sbb
push
sarl
and
jb
cmp
cmpsl
sbb
call
int
jmp
sbb
jo
pop
add
xchg
sub
adc
add
or
cmc
ljmp
and
testl
orb
aas
and
dec
adc
aad
femms
faddp
mulb
adc
mov
aaa
icebp
pop
sub
jno
sub
pushl
inc
call
cmp
mov
add
sbb
dec
dec
addb
dec
loop
jecxz
std
adc
jno
sbb
cmp
mov
cmp
incl
or
push
dec
mov
mov
idivl
test
sar
cmp
push
nop
mov
mov
fwait
inc
pop
mov
call
pushf
out
xchg
xchg
adc
sahf
cmp
mov
std
movsl
mov
fdivrl
xchg
mov
lcall
gs
pop
jge
xchg
out
pop
inc
adc
or
js
jle
sub
data16
mov
or
lds
pusha
xor
cmp
js
dec
push
ja
and
mov
popl
add
adc
xchg
out
pop
rorl
dec
jb
cmp
psraw
cmc
add
mov
and
jbe
xor
int
gs
popa
and
test
ds
mov
push
push
in
enter
dec
mov
cmp
sbb
xor
push
or
stc
mov
pop
pushf
xor
cmp
jnp
clc
mov
cmp
movsl
pop
and
ljmp
clc
jmp
dec
or
sbb
pop
fcmovnu
xor
jl
aaa
cwtl
scas
rsqrtps
bndstx
ret
sbb
jl
clc
push
leave
divb
and
xor
inc
xchg
sbb
add
mov
ja
dec
adc
outsb
xchg
or
or
cld
in
add
cld
fsubrs
adc
jae
sahf
mov
adc
js
jo
mov
lods
sub
hlt
shlb
stos
inc
adc
insl
pop
loopne
imul
cmpl
loopne
ds
bound
add
filds
mov
push
sahf
mov
pop
push
mov
xor
orb
xchg
mov
xchg
push
push
aaa
mov
mov
and
add
call
and
sbb
jb
int
mov
jbe
jmp
inc
test
add
lret
sbb
push
sub
pop
bound
cli
add
fs
fisubrs
jg
or
repz
not
pushf
jbe
lock
icebp
incl
adc
sub
jg
xor
adc
clc
push
xlat
jg
and
sbb
and
push
push
mov
and
rol
or
divps
xchg
add
mov
xchg
inc
insb
sahf
add
mov
pop
add
jle
pop
and
int3
mov
push
adcb
jbe
or
in
cmp
cltd
daa
aaa
push
inc
lcall
add
cmpsl
scas
mov
add
xchg
mov
jg
sub
xor
xor
pop
add
cwtl
mov
pushl
pop
aaa
fisttpll
xchg
and
sbb
cmp
adc
adc
movsb
jle
pusha
nop
adc
cmp
push
push
lret
cltd
scas
lods
dec
inc
es
and
mov
out
pop
fcomip
mov
outsb
repnz
out
ret
adc
mov
sti
pop
arpl
int3
pop
sub
dec
decl
in
push
cmp
imul
sub
ljmp
pop
jno
adc
stc
add
cmp
sub
push
in
aam
shl
mov
cmp
sarb
push
aam
pop
inc
push
sbb
lea
pop
inc
push
sub
test
push
loop
loope
rol
add
cmpsb
adc
out
ja
clc
pushl
fsubrl
orb
mov
add
test
jno
push
sbb
ja
incb
inc
push
stc
fstpt
jno
int
test
dec
pop
orb
xchg
push
call
and
mov
lods
fisttps
push
adc
fs
or
nop
cli
jg
lods
mov
adc
pop
mov
ljmp
fwait
sbb
cmpb
mov
fdivrs
xchg
mov
add
sbb
mov
xor
push
mov
pop
js
xchg
jp
xor
cmp
popa
cli
sub
mov
mov
sub
sar
das
enter
cmp
jo
test
movups
pop
xchg
xor
clc
mov
fwait
std
adcb
sub
or
inc
cmp
xchg
xchg
je
pop
stos
pop
loope
pusha
ja
ds
mov
push
inc
mov
jle
sbb
xor
lcall
inc
cmp
jg
add
and
imul
or
pop
add
mov
pop
jg
jle
and
popa
les
adc
mov
int
mov
push
pop
pusha
cmpsb
aaa
fs
fcomip
jmp
jno
lret
test
mov
mov
bound
or
mov
push
pop
sub
ret
cmp
sbb
cli
jae
lock
pop
push
push
cmpsl
mov
aad
mov
sub
rorb
pop
fscale
daa
aad
pop
dec
in
pop
ret
adc
imulb
and
or
pand
jbe
cmp
mov
push
push
cltd
int3
cmp
push
sbb
inc
mov
or
imul
cwtl
cli
push
loopne
jbe
es
sbb
cmp
bound
pop
in
and
adc
lret
data16
inc
xchg
jmp
inc
fisubl
dec
xchg
scas
orb
adc
clc
ljmp
int
negb
inc
gs
sbb
mov
movsb
inc
repnz
inc
imul
out
or
scas
push
imul
addr16
lock
mov
int3
aaa
lods
mov
add
testb
sub
movsl
jg
add
mov
or
aas
inc
pushl
sbb
inc
pop
sbb
jecxz
push
add
xchg
and
fldl
pop
aaa
inc
mov
das
hlt
cld
jg
push
cmp
xchg
add
cmp
loop
das
xor
pop
push
sub
rcrb
outsb
push
add
cs
adc
incl
adc
mov
test
sbb
lods
out
and
sbb
and
mov
sub
in
gs
inc
adc
popa
ss
and
push
push
inc
movsl
dec
sbbl
fwait
mov
add
jg
cwtl
leave
mov
sub
fisubs
lcall
lcall
ds
movb
jl
mov
pop
test
inc
mov
jg
and
sbb
inc
popf
push
sub
test
cmpsb
in
nop
fstpt
cmpsl
add
sub
inc
aam
cld
mov
mov
roll
mov
inc
pop
outsb
push
sbb
mov
xchg
out
mov
lods
ljmp
adc
imul
sbb
mov
mov
lea
dec
mov
in
add
lcall
cli
xor
dec
add
adc
mov
daa
movb
addr16
and
pushl
add
add
stc
adc
sub
sbb
ret
adc
push
sbb
in
adc
pusha
js
inc
xor
mov
sbb
lcall
inc
gs
aam
incl
outsb
push
imul
outsb
ret
push
inc
lds
dec
lcall
pop
stos
add
push
movsl
mov
int
out
outsb
xchg
ljmp
pop
jle
cmp
cmp
lcall
inc
xchg
xor
movsb
call
out
stos
xchg
jnp
mov
xor
fnstenv
decl
call
out
test
jb
in
ds
mov
xor
testl
add
cmp
or
add
cld
stos
cmpsb
nop
cmp
push
pop
bound
mov
jle
jae
das
test
mov
cmp
bound
shlb
jmp
es
push
jg
imul
call
or
add
xor
adc
mov
loopne
xor
pushf
cld
lcall
xchg
loop
push
in
in
or
in
add
add
cmpl
aaa
or
mov
or
inc
ljmp
decl
push
and
adc
ss
push
dec
push
adc
std
aaa
jbe
subb
test
lret
jge
mov
mov
push
mov
xor
mov
and
jge
jle
incl
xchg
push
cmp
xchg
xor
outsl
call
or
icebp
add
addl
test
std
cmpsl
add
push
lea
mov
add
inc
subl
lcall
dec
mov
cmp
xchg
jbe
xchg
push
fs
pushl
daa
cmc
adc
dec
daa
and
adc
sbbb
mov
loopne
cwtl
std
jg
sbb
fwait
pop
das
jnp
sbb
and
loop
fnstsw
lcall
cwtl
jb
cmpsl
mov
sub
push
dec
mov
push
cmp
cltd
cmpsb
sub
jnp
cltd
sbb
adc
xor
mov
icebp
inc
jno
mov
xor
xchg
or
xchg
sar
leave
push
imul
xchg
pop
movsl
inc
pop
mov
push
jle
std
push
ret
xchg
mov
jb
dec
rclb
outsb
fmull
xchg
into
push
pusha
das
js
or
hlt
sub
scas
popa
ja
mov
les
sahf
dec
je
aam
xor
mov
jnp
cltd
mov
mov
xor
cld
pop
push
call
mov
add
test
or
dec
scas
ljmp
inc
xor
je
dec
jp
test
call
jb
cli
add
pop
lahf
outsb
leave
mov
lea
fs
jnp
adc
cmpb
adc
gs
adc
push
cmpsl
clc
sub
ret
push
and
add
push
add
outsl
rclb
sub
ret
fistpll
pushf
fmuls
ret
lcall
pop
xor
add
inc
ret
add
dec
loop
cmc
cmp
sbb
dec
inc
adc
imul
out
jne
lcall
test
or
mov
cld
sbb
add
and
push
add
insl
xor
xor
rcrb
xchg
cld
aaa
adc
addr16
adc
bound
mov
sub
jb
outsl
sbb
pushl
out
out
test
sub
loope
imul
ficoms
sub
sbb
lock
pop
add
pop
out
cwtl
subb
incb
fbstp
and
sub
mov
mov
jns
pop
int
jae
rcl
sbb
gs
icebp
call
das
sbb
outsl
lea
insb
push
or
inc
jmp
es
sub
rorl
jecxz
sub
adc
movsb
out
sub
sbb
into
push
inc
inc
lcall
rcll
cmp
push
jae
insl
popa
rcrl
sub
push
cmp
pop
push
inc
inc
lea
push
push
incl
push
imul
push
and
jae
jmp
call
xor
ja
pop
adc
mov
jmp
jmp
pop
pop
daa
sarb
mov
push
xlat
or
pop
pop
daa
push
jg
scas
ds
inc
js
sbb
ffree
push
xchg
jg
pop
push
push
ds
int
cmp
aad
pop
mov
push
inc
cmpsl
cs
add
mov
gs
dec
mov
cmc
mov
inc
inc
or
sbb
adc
adc
lock
icebp
fwait
dec
popa
jl
push
lret
mov
stos
cwtl
mov
jbe
scas
mov
lret
sahf
dec
imul
inc
pop
sarb
or
xor
cmp
xor
sub
cli
enter
sub
loop
jp
xchg
dec
mov
in
sub
mov
insb
jmp
cmpl
pop
add
gs
sbb
or
pop
push
push
cmc
pop
jmp
add
lret
sub
aad
push
lods
leave
push
mov
mov
fcom
xor
cmpsb
rcr
inc
jl
jae
fcompl
inc
cwtl
imul
mov
mov
inc
jnp
adcl
ffreep
call
or
add
pop
sub
dec
bound
pop
ret
mov
sbbb
push
mov
in
sbb
daa
or
and
jg
or
out
push
or
insb
adc
dec
push
pop
add
inc
loop
orps
movsb
mov
push
push
adc
xchg
jb
add
ffreep
push
or
sbb
pop
outsb
push
leave
add
sbb
xor
pop
mov
xchg
xchg
test
push
pop
loop
add
xchg
in
xor
add
decl
or
cmp
pusha
sarb
and
fwait
lcall
push
push
push
bnd
jg
push
xorb
mov
add
jg
fnstcw
dec
cli
sbb
jmp
mov
or
or
push
fcomip
arpl
or
loop
clc
add
clc
jmp
add
inc
test
sub
pop
or
scas
sbbb
inc
lret
mov
sbb
add
dec
jbe
pop
xchg
js
je
xor
pop
or
pmovmskb
push
je
repz
outsl
pop
adc
pop
xchg
pop
fwait
push
gs
loope
mov
pop
icebp
mov
push
jecxz
adc
mov
mov
or
lea
adc
cmp
decl
dec
xor
inc
jle
mov
jg,pn
lock
or
jg
xchg
xchg
test
push
add
jg
xor
and
cmpsb
push
or
xor
mov
pop
xchg
mov
dec
es
mov
and
sub
lods
pushf
and
outsl
dec
jb
decl
hlt
or
mov
mov
mov
sarb
out
sub
jg
hlt
add
test
test
mov
push
push
pop
jb
jb
pop
std
jg
addb
jle
aaa
and
rolb
push
pop
out
dec
cmp
fildll
je
inc
xorb
dec
and
test
das
cmp
clc
decl
loop
test
or
sub
cld
pushl
bound
adc
insl
adc
cltd
lcall
decl
lods
and
push
sub
push
xor
dec
and
jne
mov
jge
cmpsl
movsb
adc
and
dec
push
dec
sbb
stos
fs
call
stos
jg
pop
lahf
repnz
aaa
inc
pop
rcll
cmp
ret
fidivl
mov
decl
mov
jmp
sbb
push
imul
push
push
decb
lods
sub
cmp
push
add
pop
add
and
out
adc
out
insb
push
clc
or
inc
movsb
pop
pushf
push
sbb
or
xchg
jo
inc
adc
ficoml
cmp
repz
sbb
lret
mov
cmpsb
xchg
int
das
pusha
pop
adc
jg
cmc
ljmp
jl
push
sub
add
test
lods
mov
jbe
stos
jle
or
jbe
mov
fmuls
nop
mov
dec
sbb
push
sub
sub
jg
inc
and
mov
fwait
push
ret
mov
mov
pop
cmp
mov
clc
or
das
cmp
movl
dec
stos
incl
std
and
ds
cmp
push
push
jnp
sbb
loopne
lea
sbb
fisttps
ljmp
mov
aaa
enter
mov
lahf
leave
inc
ljmp
push
jmp
rcr
adc
stos
adc
sahf
icebp
sahf
scas
sub
mov
pop
cmp
xor
jno
movl
mov
gs
data16
add
add
xchg
cmp
rorb
sub
pop
jne
sub
cmp
sub
or
or
les
push
dec
clc
out
out
jmp
sahf
fsts
cli
lret
imul
push
push
ja
idivb
inc
scas
fcoms
ja
bound
out
movsl
mov
sbb
push
test
sub
sub
and
add
imul
cmp
mov
nop
shll
pop
mov
decl
loopne
add
sbb
nop
pop
inc
aaa
icebp
out
xor
or
scas
jecxz
push
sbb
les
aaa
jo
mov
sbbl
xor
int
lds
mov
jl
and
push
filds
stc
mov
aam
mov
cmp
xor
inc
lret
iret
cltd
pop
in
icebp
and
hlt
decl
or
loop
mov
in
lret
nop
cli
jg
rclb
sub
test
ljmp
push
es
mov
adc
test
adc
and
outsl
es
mov
inc
xchg
rorb
sub
stos
push
aas
test
test
or
aas
sbb
add
ljmp
fs
xor
imul
mov
cld
and
mov
cmp
ss
adc
fisttpll
aas
mov
sahf
stos
imul
mov
push
inc
sti
sbb
xchg
push
out
xchg
pushl
pop
sbb
mov
arpl
sbb
xor
cmp
stc
xor
lcall
mov
xchg
inc
or
scas
add
das
mov
jle,pn
dec
js
mov
push
mov
pop
fisubrs
add
push
out
push
xchg
repnz
dec
push
daa
and
enter
or
push
and
and
push
sarb
sahf
sbb
or
or
dec
data16
cmp
sbb
xor
pop
and
cmc
mov
and
push
sub
or
pop
and
aas
jno
sarb
push
sub
cmp
pop
push
xor
sbb
pusha
xchg
pop
dec
test
dec
pop
add
icebp
pop
xor
pop
xchg
add
mov
or
or
add
dec
jmp
push
cmp
cmp
repz
pop
mov
jno
or
and
dec
jae
lea
jo
rclb
mov
lods
stc
push
fwait
lret
insl
in
mov
sub
jg
cld
jg
sub
jle
cmp
mov
ret
adc
sbb
outsb
or
js
loop
mov
cli
inc
or
and
test
push
addl
or
add
pop
icebp
xor
jl
aam
movsb
movsb
notb
mov
jne
daa
sub
push
xor
or
mov
sub
xor
fwait
icebp
push
test
adc
imul
mov
pop
insl
mov
inc
inc
mov
dec
inc
call
rcrb
cmp
sbb
adc
dec
cmp
sub
xor
pop
test
sbb
add
sbb
sub
pop
xchg
sub
jb
mov
lahf
test
mov
jmp
or
das
das
mov
xor
xor
sub
jnp
outsl
and
mov
and
xor
push
dec
loopne
popw
lahf
std
sbb
xor
add
pop
push
push
enter
mov
xchg
xor
push
aas
popa
gs
or
movsb
cmp
fcomp
dec
sub
shrl
ret
ss
les
mov
mov
lods
mov
add
fiaddl
aas
scas
and
loopne
and
lahf
adc
adc
lahf
inc
xor
push
test
shlb
scas
dec
mov
je
cmc
rclb
or
sbb
xor
idivl
jnp
enter
add
ss
inc
sub
pop
push
clc
jmp
add
jle
sub
fsubl
and
ffree
lea
scas
stos
jle
xchg
mov
lods
pop
push
xchg
mov
dec
not
add
mov
das
mov
push
lcall
daa
and
inc
pop
or
mov
push
push
aaa
push
ret
mov
fistps
andl
add
pop
and
xlat
ljmp
cmpsb
mov
es
and
test
rcll
std
push
sbbb
xor
add
adc
popa
mov
inc
and
imul
imul
mov
test
jns
fs
shlb
sbbb
cmp
jmp
mov
jg
cmp
adc
mov
arpl
cmp
movsb
sbb
pop
decl
aas
sub
xlat
aam
mov
adc
imulb
jne
cmp
jg
jae
cmpsl
out
mov
lea
dec
jecxz
push
gs
test
cmp
cmp
jae
fwait
cmp
cmp
jg
ja
xchg
aam
cmp
add
pusha
adc
int
cmp
sub
jb
lea
push
loope
xchg
add
les
fs
inc
push
push
pop
daa
cmp
mov
jg
outsl
sbb
and
outsb
mov
inc
js
mov
jnp
jbe
icebp
int
mov
aas
push
scas
sub
dec
add
mov
fs
aaa
push
cmpsb
xor
adc
cwtl
lcall
mov
cmp
jne
into
push
pop
out
xchg
cwtl
sub
scas
test
jb
jo
jle
cli
ds
cmp
fs
dec
cmpb
push
divb
jmp
add
xchg
mov
bound
dec
mov
inc
fsts
ljmp
cmpsb
data16
dec
or
ja
cmpsb
lret
mov
in
pop
sbb
push
pop
in
xchg
ds
add
test
jae
dec
popf
jg
mov
fistl
and
fcomip
dec
push
push
test
add
incb
or
fiaddl
clc
scas
add
ret
and
jnp
ret
rorb
push
pop
loop
inc
call
pop
std
movsb
mov
ljmp
xlat
mov
or
sub
pop
add
push
fwait
xchg
aaa
add
inc
pop
add
cmp
lret
jns
cmp
fadds
fnstcw
adc
ffreep
clc
repnz
shrb
mov
adc
push
js
sbb
cmc
int
pop
sbb
mov
sbb
andb
push
int
movsb
out
pop
push
roll
add
lcall
adc
xorl
jbe
pop
subb
idivl
pop
pop
pop
inc
clc
xchg
push
or
loope
jnp
inc
ds
xor
in
mov
add
lock
adc
in
add
or
push
inc
clc
sub
cli
and
sbb
adc
adc
lahf
in
sti
and
push
pop
fmull
or
add
loopne
ret
jb
sbb
pop
pop
adc
sbb
mov
test
mov
jle
addl
stos
or
mov
std
add
mov
test
sub
cmp
xchg
add
mov
adc
sub
push
aas
ret
adc
push
pshufw
mov
cmc
inc
cmpsb
push
mov
jl
test
pop
inc
jg
sbbl
push
mov
pop
or
push
fprem
les
jnp
mov
jg
push
add
and
insb
pop
add
out
push
jle,pt
pop
cmp
cmp
pop
pop
pop
fwait
test
mov
or
add
out
daa
aas
je
jp
mov
cli
adc
ss
cwtl
mov
inc
call
or
cmp
fildll
clc
add
sub
adc
dec
das
adc
and
les
mov
bound
and
push
dec
inc
test
gs
cmpl
rcr
js
addr16
jo
jo
mov
mov
in
clc
out
fisttpll
ret
fdivrp
mov
inc
pop
mov
and
fdivp
xor
insb
dec
incl
lret
xchg
inc
jg
jnp,pt
je
add
popf
les
inc
adc
lods
pushl
ficoms
ds
imul
or
shll
inc
cld
pop
out
push
pop
dec
and
and
push
sub
sbb
outsb
add
adc
inc
add
mov
jecxz
jno
pushl
mov
fistpl
and
sub
mov
sbb
repnz
fcomip
lea
testb
pop
pop
xchg
cmp
cmp
sub
jg
mov
outsb
push
push
sar
add
call
sub
insb
or
add
sub
aas
or
push
pop
sbb
add
pop
scas
xchg
lock
ljmp
cmp
jns
incl
mov
mov
and
push
adc
cmp
dec
movsl
dec
lds
sbb
inc
mov
adc
mov
fiaddl
sti
sbb
mov
sub
inc
sbb
nop
rcrb
cmpsl
and
mov
cmpsb
or
mov
lods
adc
adc
test
adc
xlat
lret
xor
jne
sub
popa
fnstcw
and
or
or
push
test
mov
sbb
add
clc
ja
or
cli
add
xor
mov
sbb
pop
in
pop
and
imul
lcall
sub
gs
adc
and
fs
adcb
xchg
inc
xchg
outsb
pop
in
test
add
movsb
mov
or
shrb
dec
ja
mov
adc
mov
dec
adc
ljmp
sbb
mov
add
mov
movsb
sub
filds
xchg
cli
dec
sbb
jp
xchg
sbbb
roll
sar
inc
xor
push
aaa
or
xchg
push
add
pop
fldl
and
ss
dec
push
lret
cmpsb
jle
jle
xchg
push
adc
and
fs
lret
mov
test
out
les
es
jmp
cmpsb
mov
cmpsl
sbb
mov
push
into
jg
sub
ret
cmp
and
sahf
js
stos
popf
xchg
push
or
push
push
push
call
cld
jmp
mov
js
adc
outsb
mov
scas
adc
clc
cmpsl
leave
lea
or
adc
dec
das
cmp
cmp
push
pop
sbb
mov
xchg
ds
mov
je
mov
sub
xchg
call
sar
addl
sbb
mov
mov
in
sbb
mov
adcb
loopne
xchg
je
and
incl
dec
icebp
adc
push
lods
and
xor
out
adc
fwait
add
adc
sub
fidivrl
and
cld
nop
imul
sbb
movsl
movsb
mov
scas
or
cmp
push
pop
sarb
sub
or
mov
aaa
add
loope
add
inc
mov
cmp
add
xchg
lds
push
jns
jnp
push
call
sub
je
adc
xor
hlt
pop
shlb
cltd
sahf
jbe
mov
adc
or
mov
push
and
and
sub
ljmp
mov
aad
jno
jo
inc
push
mov
or
inc
pop
push
mov
lds
add
jge
adc
lods
dec
or
and
jmp
loop,pn
add
outsl
mov
jmp
dec
pop
sub
sub
mov
lock
fcoml
sbb
mov
test
sub
orl
dec
and
lret
rcr
or
cmp
fimuls
addl
das
test
mov
cmpsb
jo
add
xlat
adc
add
sar
lret
movsl
bound
das
add
or
testl
push
cmp
xlat
decl
aam
cmpsb
mov
inc
mov
jg
mov
sbb
jmp
in
cs
incl
adc
pop
jno
pop
lods
mov
push
pop
sahf
pop
pop
jnp
and
adc
dec
cmp
or
sbb
xchg
lcall
scas
jbe
dec
push
inc
popa
cld
add
jnp
out
nop
pop
sarb
mov
insl
mov
adc
scas
jbe
cld
in
sbb
mov
sub
cmpsl
out
movsl
push
mov
inc
mov
insl
pusha
jmp
lret
xchg
out
inc
push
pop
xor
adc
sub
jle
incb
xchg
push
pop
mov
pop
sbb
aad
cs
stos
xchg
pop
adc
push
push
sbb
push
pop
adc
jns
mov
nop
insb
adc
leave
decl
test
aas
or
decl
std
cmp
cld
dec
insb
aaa
push
pushf
add
testb
ljmp
xor
mov
pop
push
js
cs
and
add
ss
ljmp
mov
fcomip
mov
addr16
scas
push
imul
push
ljmp
scas
pop
sbb
cmp
cmp
test
call
inc
out
sub
cmp
sub
sbb
les
ds
test
popf
pop
adc
mov
mov
aam
sbb
lahf
and
mov
adc
frstor
xor
pop
cmpsb
adc
xchg
mov
ret
jne
inc
mov
dec
push
pushf
xor
dec
xor
and
loope
icebp
cmp
mov
xor
push
fildll
cmp
add
or
test
fistps
sub
jg
push
add
loope
cmp
cmp
xor
movb
jg
std
mov
jg
stos
icebp
in
in
xor
lahf
aaa
lcall
dec
repnz
xor
push
sub
mov
orl
pop
mov
fdivr
mov
push
xchg
cmp
xchg
sbb
mov
dec
fstpl
ljmp
add
movb
xchg
sar
out
jmp
popf
or
cld
push
push
cmp
or
xchg
fcmovbe
out
loope
in
xorb
sub
push
ljmp
lds
cmp
inc
xor
mov
daa
dec
pop
push
or
jbe
jl
lock
mov
add
push
cmp
mov
je
and
leave
push
out
aas
adc
popa
jbe
add
in
jno
dec
mov
sbb
andl
clc
cmp
sbb
xor
push
mov
mov
test
add
sarl
add
push
and
cmp
ljmp
jae
or
mov
popa
xor
cmpl
lcall
flds
push
adc
cmp
lea
jg
jns
dec
jle
add
jmp
mov
cmp
sbb
call
imul
cmc
jmp
add
loope
mov
and
sub
inc
decl
push
int
shl
cmp
mov
push
xor
cmp
adc
dec
cmp
lock
pop
or
inc
or
or
addr16
push
sbb
inc
incl
cmp
and
add
dec
jo
adc
mov
call
or
cld
sub
pop
sahf
sub
jl
lcall
loopne
loopne
mov
push
inc
cs
dec
and
jno
mov
fs
lds
push
xor
sub
stos
and
add
push
cli
jae
adc
in
cmp
fidivrl
mov
xor
std
cs
data16
dec
sub
xchg
jg
mov
imul
icebp
aas
aas
mov
and
fdiv
call
add
push
and
into
add
mov
fbld
cmp
ss
sbb
jns
sub
sbb
dec
lcall
js
pop
or
sbb
mov
mov
push
add
and
orl
sbb
push
xor
sub
inc
pushf
push
std
out
cli
sub
js
push
mov
sbb
mov
push
pop
les
sub
ljmp
add
jle
add
cmp
sub
mov
inc
mov
ret
aas
or
stos
jl
xchg
or
inc
loopne
popa
and
pop
int
daa
lock
imul
in
cmp
mov
es
decl
mov
dec
les
outsl
das
inc
push
pop
xor
test
repz
lcall
dec
cli
mov
fabs
mov
cmp
clc
xor
mov
mov
cmpsb
xchg
minps
ja
cmp
mov
lods
jae
sbb
inc
sarb
adc
pop
jno
lea
lock
cwtl
xchg
and
and
shll
outsb
mov
aaa
push
call
and
xor
in
fcmovb
cs
gs
adc
jae
cld
out
xor
int3
rcll
punpckhwd
repnz
sub
xor
ret
adc
imul
and
cld
sbb
jmp
jmp
mov
sbb
sarb
fidivs
test
cmp
mov
ljmp
mov
loopne
pop
cs
xor
fldl
sub
cwtl
jo
stc
fs
adc
jp
xor
roll
xchg
ss
push
outsb
ret
sbb
dec
loope
inc
push
xor
mov
mov
mov
rorl
lods
inc
imul
fildll
pop
pop
sub
jnp
mov
pop
inc
test
jo
mov
push
jl
adc
scas
pop
scas
js
test
and
mov
outsl
jmp
std
xchg
xor
xor
ret
jb
push
inc
pop
lock
mov
cld
bound
push
and
ljmp
ret
and
mov
mov
add
iret
push
test
adc
push
push
into
int
inc
cld
push
mov
ss
flds
test
aaa
aas
mov
mov
and
and
and
and
daa
mov
cmp
movsl
lods
mov
out
xchg
in
js
push
dec
cwtl
mov
sub
jb
pop
jae
adc
and
mov
xchg
fistps
or
int3
pop
aaa
push
ljmp
xor
sbb
jmp
mov
and
xor
mov
loopne
jmp
and
adc
pop
sti
das
xor
idiv
sbb
xchg
mov
cmp
fcomip
ja
xchg
push
push
rorl
jg
loopne
mov
sbb
aas
fdivl
addb
cmp
lret
xchg
jne
cmp
sbb
icebp
fbld
adc
or
cmp
mov
push
jl
cltd
adc
and
mov
xor
and
and
nop
div
shl
pusha
cs
dec
les
jo
xor
stos
or
sbb
or
std
jb
adc
xor
fwait
loope
adc
or
cmp
pop
xchg
mov
push
jp
add
pop
jp
decl
hlt
mov
dec
pop
pop
out
cmc
push
lds
push
std
aas
cld
cmp
popa
ficoml
imulb
in
and
or
add
pushl
push
xor
das
jge
sub
push
adc
test
orl
sub
cld
insb
inc
pop
mov
jmp
push
sub
std
fcmovbe
iret
lcall
push
outsl
sbb
xchg
scas
sbb
push
sub
cmp
dec
jae
pushl
fst
mov
out
pop
dec
pop
in
fidivl
inc
gs
pop
outsb
add
cmp
and
jg
test
mov
cmp
sub
xchg
xchg
loopne
nop
push
fstl
cld
fsubrl
add
xchg
outsb
adc
in
ret
cmc
sbb
ret
pop
dec
xor
xchg
scas
dec
jb
pop
dec
mov
push
cmp
push
fwait
add
ljmp
subb
adc
add
cmp
mov
clc
jmp
mov
in
sub
push
or
adc
js
loopne
jle
cmp
insb
loope
mov
cmp
arpl
call
or
fdivrs
sub
mov
jmp
out
addb
shl
leave
xchg
and
sti
jmp
xor
js
mov
pop
pop
insl
push
movsb
hlt
mov
inc
pop
daa
aaa
sub
cwtl
movsl
in
mov
inc
aam
lods
decl
inc
rolb
pop
xor
fcmovu
or
leave
ja
push
adc
inc
mov
cmp
cmp
xor
ficoml
out
subl
loop
xor
push
incl
add
xchg
ret
sub
rol
mov
test
xchg
sbb
cmp
jle
lea
cmp
pushl
sub
or
push
imul
popa
dec
sbb
dec
je
mov
jno
cmp
lds
jno
pusha
outsb
daa
xor
cld
test
out
mov
loopne
mov
sbb
or
aad
mov
xor
sti
sti
adc
lcall
xor
pop
jg
add
loopne
sub
loopne
rclb
pushf
push
pop
mov
dec
std
adc
pusha
insl
lret
sbb
and
adc
xchg
decb
ljmp
cmpsl
dec
jl
mov
inc
mov
rclb
mov
pusha
add
jns
xlat
lahf
filds
sub
orb
adc
pop
jae
filds
cmp
lcall
pushf
aas
movsb
xor
scas
jle
jge
scas
add
mov
mov
fs
pop
cmp
movsb
loopne
cmp
or
adc
push
jg
mov
out
dec
dec
push
mov
sahf
xchg
sbb
cmpsb
decb
push
ds
pop
push
push
sub
mov
sub
mov
mov
shrb
rorb
lcall
lods
xor
jmp
jecxz
movsb
sbbb
fildl
xchg
nop
hlt
or
and
dec
sbb
cld
flds
pop
jmp
jbe
test
push
fisttps
or
jp
mov
es
or
or
mov
arpl
mov
jae
xchg
stos
jno
clc
int
add
test
ja
jl
ja
jg
jmp
mov
sub
and
imulb
dec
sbb
in
adc
fisubs
bound
mov
xchg
lea
mov
mov
inc
push
jecxz
pop
out
es
xrelease
clc
daa
cmp
popf
mov
and
pop
sub
fdivr
push
loope
notl
or
pop
cmp
xor
jb
aaa
cmp
test
mov
xchg
ficoml
adc
mov
and
fnstcw
test
fldcw
jmp
test
add
mov
sub
stos
decl
ljmp
add
xchg
ja
sti
pop
sub
mov
and
ret
dec
mov
push
arpl
mov
shlb
sar
call
sbb
jle
imul
adc
mov
xchg
lock
sar
incl
cltd
loop
popa
or
sub
inc
mov
pop
xor
and
decb
pop
mov
rcr
pushf
mov
clc
cmc
gs
icebp
sbb
lret
mov
mov
icebp
enter
lods
je
xlat
push
std
fwait
mov
jecxz
sub
out
popa
mov
mov
es
fbld
fdivrs
aas
xlat
aad
in
fcoml
mov
int
shl
in
enter
imul
sbb
into
xchg
das
push
cmp
push
lock
daa
push
cmc
fcoml
pushl
jmp
repz
fistpll
pop
fwait
pop
and
jmp
fistps
mov
mov
fwait
ljmp
outsb
xchg
je
int
ljmp
insl
xchg
ss
lret
int
jbe
fwait
add
cmpsb
ffreep
sbb
mov
or
fistps
les
jl
push
stc
add
out
cmp
and
jg
dec
sti
shrb
xchg
icebp
lret
leave
jmp
push
add
icebp
stos
jo
xor
or
mov
pusha
inc
aas
dec
in
jg
and
std
sub
notb
orb
pop
push
push
ror
call
lret
xchg
and
js
paddsw
jg
fistps
lret
xor
jb
lds
jnp
mov
lret
and
ljmp
add
push
fstl
and
lods
in
pop
lret
ljmp
hlt
sti
cmp
addr16
xchg
aad
mov
loopne
adc
mov
mov
lock
cld
adc
movsl
mov
xchg
call
idiv
cmpsb
ljmp
cmpsl
je
int
hlt
add
jp
mov
decb
call
mov
dec
pushf
rol
jmp
pop
mov
aad
jo
shlb
inc
lahf
sbb
inc
in
jae
xchg
adc
imul
popa
out
enter
sarb
fld
cld
incl
pop
sbb
push
fdivp
inc
in
mov
jle
and
mov
stc
out
sub
jg
push
shlb
jmp
and
cmp
cld
jmp
cmp
adc
and
rcrl
sti
xchg
xor
push
or
lcall
dec
pop
cmpsl
in
out
push
mov
cmp
jbe
fsubs
repz
adc
sahf
jge
sub
sti
shlb
push
push
jae
or
add
lods
pop
add
mov
mov
decl
std
sti
adc
into
inc
fstp
cmpsb
sub
scas
inc
lahf
lcall
mov
jmp
leave
jo
stos
fmulp
cld
pop
mov
sub
ret
repnz
sbb
imull
pushl
xor
push
add
inc
cmp
or
or
push
jge
fwait
mov
fbld
loopne
or
addr16
mov
sar
mov
jle
push
daa
or
mov
leave
cwtl
in
ljmp
sbb
mov
xchg
cmp
repnz
pop
out
pop
pop
aam
ljmp
fdivl
sahf
push
cmpsl
xor
fnsave
xchg
xor
movsb
add
scas
cs
push
mov
imulb
adcl
adcb
cmp
jl,pt
sbb
scas
cmp
push
fcomps
xchg
imul
lcall
pop
pop
cs
or
cmp
popf
testb
jg
cmp
sbb
xor
add
lds
sub
cmp
arpl
push
mov
dec
repnz
aas
push
dec
mov
div
fcompl
cmp
mov
pushf
or
sbb
js
xor
inc
and
xchg
test
ljmp
cmp
stos
fldenv
adc
decl
inc
fistpll
mov
dec
pop
cmp
test
mov
fcoms
xchg
aaa
dec
sbb
add
mov
fadd
pusha
negb
xchg
icebp
jmp
sbb
dec
add
pop
mov
add
scas
or
jg
mov
les
jle
xor
dec
shrb
imulb
cltd
mov
sar
aaa
jp
cltd
les
push
jb
add
stos
pop
imul
sbb
add
sbb
push
in
fucom
lea
xorb
ret
pop
cmc
jmp
dec
sbb
sub
cs
adc
insb
jmp
mov
arpl
fcmovnb
mov
jg
test
pushl
rep
or
jmp
imul
jno
decl
cld
cmp
call
test
cmpsb
les
aaa
push
push
out
loopne
or
push
xchg
mov
pop
repz
push
cs
cmp
mov
call
hlt
cmp
stc
inc
in
in
sub
lcall
add
test
jge
and
jg
xchg
pop
in
push
iret
call
scas
outsl
mov
movd
loopne
cmp
clc
jnp
xchg
adc
mov
cmp
or
incl
enter
push
pop
out
bswap
cli
jge
loope
xor
xchg
add
shl
jnp
mov
popf
call
lcall
or
mov
int
push
xor
mov
inc
sub
adc
push
xchg
enter
lcall
sarl
lret
fcompl
xchg
ficoml
hlt
cmp
into
xor
jb
pop
mov
cli
push
or
insl
push
or
icebp
fldt
lock
out
cmp
sub
push
in
push
inc
es
js
and
sti
sub
mov
daa
push
cltd
out
getsec
sub
xor
jbe
add
aad
loop
xchg
inc
push
nop
ljmp
add
lods
lods
dec
inc
hlt
lcall
fildl
lahf
cld
sbb
cld
loop
shrl
inc
push
sbb
inc
mov
xchg
ss
aaa
sub
clc
inc
or
cld
int
xor
or
xor
cmp
or
icebp
or
jge
or
lret
add
call
sbb
cmp
pop
mov
pop
rcrb
sub
or
fisttps
data16
divb
movsb
imul
and
push
je
inc
xchg
cmp
in
mov
jmp
mov
test
cmp
pop
icebp
xchg
outsb
ret
gs
aas
sahf
jp
lock
sub
adc
sbb
decl
outsl
in
popf
xor
test
cmp
pop
fsub
enter
lods
lods
fbstp
mov
jns
cmp
ljmp
and
inc
sbb
xlat
inc
mov
mov
mov
cld
out
shlb
gs
cwtl
inc
test
sub
mov
add
inc
loope
jmp
arpl
sarl
std
testl
in
pop
mov
fcoms
jmp
push
mov
mov
icebp
jg
sbb
mov
ret
dec
fldenv
xor
or
lcall
and
xchg
sub
jbe
outsl
std
jecxz
in
loop
sub
push
incl
adc
xchg
loopne
jge
rcl
icebp
inc
xor
add
daa
imul
pop
hlt
out
ret
sahf
xor
ret
push
xor
sarb
lcall
fcom
push
jmp
lcall
or
fbstp
icebp
mov
pop
xchg
sbb
add
cmp
in
pushw
sub
pushl
push
push
inc
mov
pop
push
xor
sbb
add
add
ja
lcall
sub
or
adc
xchg
ss
pusha
pushf
add
subl
xor
mov
mov
dec
shlb
fucomi
push
sbb
and
push
repnz
shr
jp
and
stos
popa
mov
data16
loopne
repnz
or
movsb
ja
add
movsl
hlt
mov
mov
mov
das
push
xchg
and
cmp
rol
fcmovne
inc
ljmp
imul
lds
scas
out
out
mov
bound
push
mov
cmpsb
sahf
sub
pop
add
fistpl
imul
pop
fdiv
push
call
sbb
lret
dec
mov
sbb
xchg
xor
enter
cmpl
and
rorl
inc
jl
sti
out
addr16
pop
scas
cmp
pop
sub
sbb
mov
pop
std
xlat
cmpl
movswl
lcall
shl
jl
pushf
das
jo
ja
cmc
push
out
subb
std
pushl
mov
fmulp
pop
cmp
jbe,pn
outsl
repz
cli
mov
aaa
push
test
xor
ljmp
jne
cmpsl
sbb
mov
mov
es
jg
mov
pop
incl
jo
shl
adc
in
out
in
xor
aad
scas
pop
push
fmulp
cmp
cs
test
jbe
in
or
cli
xchg
add
pushl
adc
shrl
icebp
in
sub
shlb
fisttps
and
fcmovu
lret
in
shr
sar
pushf
icebp
repnz
pop
mov
xchg
sub
mov
or
cmp
pop
mov
lret
ror
popa
loope
je
loope
or
mov
icebp
dec
cs
lcall
xchg
loopne
jle
adc
int
data16
jmp
ja
sub
test
cmp
into
push
roll
ret
clc
std
mov
out
cmp
and
mov
add
lcall
dec
dec
push
adc
mov
cmc
roll
pop
adc
push
in
add
fldcw
test
in
pop
xor
hlt
jg
outsl
repnz
sbb
push
push
fucom
mul
pop
and
decl
push
sub
testl
pop
iret
push
loope
jno
inc
int
cmpsb
xchg
icebp
adc
incl
btr
outsb
sbb
and
adc
fidivl
add
mov
sub
push
sbb
je
clc
cmpsb
sbb
inc
adc
adc
inc
mov
mov
fadd
outsb
sti
xchg
fsubrs
xor
pop
adc
lcall
adc
call
idivb
cli
xor
fimull
bound
cmp
jmp
xor
dec
cmp
and
ret
fisttps
sub
sbb
scas
xchg
push
cwtl
or
lret
or
cmpb
jmp
jmp
es
sbb
clc
das
into
fidivs
shll
lahf
mov
aas
sbbl
sub
mov
pop
push
push
out
cwtl
ljmp
fcmovb
jbe
mov
add
lea
int3
pusha
ret
leave
mov
fwait
out
imul
clc
inc
das
lcall
in
push
out
or
or
out
movsb
and
ret
idivb
mov
dec
lods
ret
sub
or
lcall
dec
ljmp
ss
gs
in
das
mov
or
out
icebp
incl
mov
mov
int3
and
loop
pop
jmp
cmc
aas
pop
push
out
sar
jp
testw
pop
mov
mov
xchg
shll
scas
jg
fsin
xchg
loope
dec
dec
ret
ss
or
jl
add
xor
out
pop
std
ljmp
movsb
sub
mov
repz
push
lea
jg
ss
andl
dec
fisubrs
jmp
notb
aam
add
lock
jmp
outsb
mov
out
loop
sub
ffree
lock
mov
push
cs
sub
cmc
aad
lcall
daa
dec
stc
cld
lcall
cltd
rcll
jmp
popa
add
cmp
cmp
pusha
xchg
insl
jo
adc
lcall
bound
js
incl
lret
jle
jge
lds
repnz
out
sub
mov
notb
mov
dec
subl
das
jns
mov
fs
or
jg
movsl
push
push
sub
push
loope
pop
xlat
mov
std
das
cmpsb
or
sub
ret
adc
cli
mov
jns
in
cs
cli
cmpsl
inc
xchg
inc
aad
dec
cmp
out
push
mov
movsb
ljmp
push
mov
jmp
popf
into
popf
stc
loopne
inc
sbb
enter
dec
push
imul
jns
jg
add
loopne
aas
test
cmpsl
dec
mov
out
push
or
mov
enter
fldenv
pop
mov
or
fcmovu
cmp
pushl
into
psubq
add
sub
push
testb
lods
andb
mov
andl
xchg
subl
filds
aam
out
push
jecxz
sbb
push
cld
jg
lock
mov
aaa
adc
hlt
movsb
add
js
leave
je
ror
mov
adc
pushl
and
stos
xchg
rorb
mov
daa
xchg
sub
lds
fstp
and
lret
vmovdqu64
outsb
std
add
js
aaa
dec
in
fldl
out
pop
pushf
jg
orl
aaa
out
insb
mov
dec
clc
aam
pop
sbb
fmul
push
cld
fdivl
dec
mov
push
add
jmp
imul
ret
lock
sbb
lock
rcrl
cltd
filds
push
pop
int3
cli
repnz
mov
fsubr
jb
in
aaa
jg
mov
movsl
inc
pushf
xor
shll
mov
inc
pop
lds
cmpsb
lock
xchg
inc
rorw
ret
sub
xchg
mov
pop
xchg
push
leave
lock
icebp
lods
sub
das
adc
inc
orl
call
inc
cmp
or
lcall
out
div
mov
jnp
sub
cli
fcoml
scas
add
mov
enter
lcall
pop
lcall
inc
or
fsubrs
push
add
in
add
xchg
pshufw
jmp
scas
data16
out
hlt
enter
and
push
pop
push
sarb
ret
jg
cmpsb
call
mov
sti
mov
add
add
in
cmp
incl
flds
scas
sahf
idiv
xor
ljmp
fbld
rcl
mov
jns
movb
sub
mov
add
pusha
cli
mov
outsb
nop
ljmp
and
xchg
dec
or
outsl
xor
add
cmp
ja
ret
cmp
popa
jg
adcb
jns
cwtl
xchg
cmp
pushl
fimuls
mov
and
inc
nop
in
sbb
clc
sbb
jmp
fidivrl
shlb
mov
jg
dec
inc
ret
incl
cmp
cli
xlat
cmc
popa
cli
fbld
and
adc
add
int
mov
cmp
repnz
imul
loope
xor
fstpt
jne
sbb
daa
in
jmp
mov
push
std
ja
btc
fistpl
psubd
dec
adc
icebp
jb
rol
jmp
fwait
ss
xor
mov
inc
loop
call
dec
in
dec
hlt
loopne
or
outsl
sar
xchg
in
push
sbb
fwait
sbb
adc
scas
and
or
dec
and
incb
pop
loop
lock
jg
movsl
sub
pushf
lods
nop
jecxz
xor
mov
pop
sar
dec
or
cmp
xor
pop
cmp
fisubrl
enter
fbld
fisttpll
mov
dec
ljmp
int
or
lock
pop
loop
inc
lret
fsubs
xchg
std
mov
je
pushf
jmp
push
jb
jno
lret
xor
shll
cmpsb
xchg
jg
push
pop
xor
inc
add
sub
xor
jmp
or
and
cmp
fidivs
mov
cmp
adc
out
and
lcall
lcall
aad
daa
adc
push
ds
dec
cmp
fwait
int
sub
andb
push
mov
dec
mov
lock
stos
and
push
jae
daa
fdivrl
jg
daa
pop
push
int3
repnz
adc
dec
mov
inc
icebp
inc
pop
xchg
test
cwtl
lds
cmp
sbb
int
jg
jle
sub
pop
js
sub
std
arpl
testl
or
in
push
adc
inc
ret
cli
out
add
adcl
sbbl
aam
std
or
push
fcoms
hlt
inc
dec
les
fisubs
pop
out
ss
stos
out
mov
or
or
and
js
xchg
arpl
out
cmp
popf
xchg
mov
mov
mov
xchg
sarl
mov
xchg
pushl
or
adc
mov
adc
jae
xor
adc
shll
out
lcall
mov
mov
adcb
push
cmp
imul
add
sub
test
xor
add
mov
sub
mov
xchg
clc
scas
mov
mov
and
ljmp
cli
dec
loopne
lea
inc
mov
loop
inc
xchg
mov
gs
mov
ljmp
das
mov
in
ficoml
fsubrs
push
dec
pop
fstps
cmpsb
inc
or
out
and
cmp
lret
clc
adcl
cmp
leave
push
shrl
aas
std
jg
into
repz
mov
ljmp
cmp
shr
adc
arpl
repnz
and
mov
mov
scas
add
adc
rorb
xchg
sub
test
and
dec
cli
out
add
or
jae
ljmp
mov
add
loop
mov
cmp
cmp
iret
cld
call
xor
push
sub
xchg
pop
gs
jle
out
clc
or
add
jle
cmp
fwait
sub
cmc
sub
cmp
and
outsl
and
cs
into
inc
push
mov
fisubl
adc
jb
jle
jae
fimuls
mov
lcall
sub
loope
in
cmpsl
and
stos
mov
jmp
jg
jle
call
enter
and
movl
mov
stc
stc
inc
stc
xchg
fsts
mov
hlt
enter
hlt
cmp
popa
or
adc
mov
std
insl
fsubrl
enter
movl
lcall
inc
outsl
and
add
repz
sub
cltd
or
cmp
cmp
cmp
and
scas
clc
adc
xor
xchg
in
adc
adc
mov
ljmp
faddp
jp
and
stos
cmp
leave
mov
and
lcall
lcall
push
mov
xchg
cld
lret
shl
xorb
imul
mov
fimull
outsl
nop
sahf
stos
cld
adc
pop
fwait
gs
pushl
add
rcll
scas
mov
mov
sub
test
lods
xor
or
call
add
or
mov
dec
cld
jae
test
jmp
xor
add
adc
push
dec
fistpll
div
cmpsl
cmp
enter
add
cmpsl
jae
push
adc
dec
outsl
cmpsb
lret
out
and
insb
cmp
and
call
xchg
rclb
rolb
xchg
lods
mov
dec
dec
out
dec
cli
mov
into
dec
test
mov
and
icebp
push
lods
inc
stc
adc
out
mov
addr16
xchg
adc
jecxz
repnz
aaa
addr16
lahf
arpl
stos
or
and
sahf
inc
cld
sub
xor
pop
cli
nop
cmp
xor
es
jne
push
or
leave
sbb
inc
shlb
icebp
cmp
test
sbb
in
mov
mov
push
enter
mov
cwtl
daa
sbb
lea
and
cli
jg
cmpsb
dec
std
nop
mov
sub
xorl
insl
sti
mov
jg
fcoml
jge
cmp
jecxz
or
ja
mov
dec
in
mov
add
xor
xchg
sub
xchg
mov
mov
xchg
mov
lcall
out
out
in
push
add
mov
setle
cli
or
jae
or
and
arpl
rolb
outsl
movups
mov
loopne
add
cmc
xchg
add
and
pop
mov
cs
sahf
sbb
inc
shll
mov
xor
leave
pop
lea
mov
ja
push
scas
test
pop
xchg
cmp
lods
repz
jmp
xor
cmp
xor
mov
aaa
mov
adc
bound
sbb
fnstsw
outsb
nop
jp
jmp
mov
cmp
cli
adc
fs
fxam
inc
lods
or
xchg
jg
call
lcall
shlb
add
mov
incl
inc
mov
xchg
cmp
pusha
inc
mov
pushl
jle
stos
icebp
out
mov
das
popl
xlat
mov
pop
nop
sub
or
lock
std
int3
xchg
mov
inc
mov
mov
subb
leave
insb
cwtl
scas
pop
jmp
sub
jp
add
jo
mov
fsubs
inc
sub
loope
lods
mov
xor
hlt
sar
fcmovnu
into
or
inc
add
loop
pop
xchg
pop
cmp
jg
stc
lock
and
test
insb
push
fdivr
stc
imul
icebp
mov
push
adc
fmul
imul
inc
push
mov
jmp
hlt
dec
jns
lods
out
pop
mov
inc
and
aad
pop
xchg
add
or
mov
cmp
sbb
fsubs
lock
mov
and
ret
mov
add
push
aas
ljmp
adc
dec
sbb
int3
inc
data16
decl
outsl
in
push
mov
pop
fsubl
cmc
inc
and
in
imul
test
icebp
adcb
adc
mov
mov
mov
divb
int
adc
ljmp
fwait
adc
int3
dec
icebp
jne
cmp
clc
xchg
xor
mov
pushl
mov
adc
xor
push
add
cli
rcrl
adc
pop
jo
lret
icebp
incl
rcrl
add
imul
jg
dec
cmpsl
mov
imul
mov
add
pop
cmc
std
imul
pop
jne
cmp
mov
push
out
and
call
add
fstl
rcr
jo
push
jge
fisubrl
push
call
cmp
jmp
mov
ss
mov
dec
sub
std
out
push
lea
xor
shrb
cmc
lea
xchg
dec
inc
hlt
sbb
dec
add
scas
adc
and
jmp
incl
int3
repz
jb
sub
jae
in
test
inc
sub
repz
mov
ds
fs
jmp
push
cld
call
mov
jmp
add
jbe
cmp
aam
incl
cmp
fildl
in
das
imulb
ja
popl
mov
faddl
pop
push
adc
fnop
push
xor
inc
mov
mov
stos
sub
cmp
push
add
shr
inc
nop
movsl
call
mov
call
lock
and
push
outsl
es
js
push
pusha
ret
cmpsb
aas
enter
ret
decl
rcr
in
jbe
xor
dec
movsb
cmp
xor
sub
aaa
inc
aas
stos
mov
lcall
pop
add
mov
or
and
xchg
jb
lea
lahf
add
xchg
sub
cmc
fsts
scas
shl
ret
es
pop
fs
adc
insl
xchg
and
in
sbb
std
pushl
push
xor
mov
cmp
push
fsub
xor
sahf
es
cwtl
mov
mov
dec
xchg
cmp
jp
ret
lahf
es
mov
push
fstpt
sar
decl
jle
sti
adc
cwtl
xchg
jae
cmpsb
cmp
cmp
adc
cmp
adc
jno
andb
stos
es
fisttps
cld
jg
scas
or
xor
sbb
inc
lret
push
idivl
xor
jp
and
xor
arpl
and
adc
jp
sbb
add
inc
or
sbb
xchg
pushl
cmp
cmp
lds
add
daa
out
cmp
ss
push
ljmp
aam
or
adc
push
push
fs
ljmp
push
inc
aam
icebp
and
pop
mov
push
ret
daa
rcr
cltd
cmpsb
sbb
lcall
and
jno
fiadds
movsl
jne
jne
inc
or
movsl
sbbb
sub
push
push
decl
push
addr16
adc
jno
repz
das
push
test
aaa
cld
add
popa
mov
ret
ljmp
in
add
jb
cmpsb
pop
sub
ja
in
loope
add
xchg
inc
and
hlt
sbb
and
pop
cwtl
rcr
adc
push
push
add
pop
sub
sub
aam
mov
pop
push
sub
out
lods
lods
lods
or
sub
out
mov
lods
es
loopne
scas
and
in
js
mov
pop
pop
pop
stc
mov
test
xor
decl
mov
shll
pop
cmp
out
jbe
xor
stos
test
push
cld
mov
filds
aaa
repz
movsl
iret
jbe
fcmovnu
test
adc
nop
clc
xor
mov
mov
mov
fs
push
lods
and
hlt
data16
icebp
dec
cmp
xor
arpl
hlt
push
jb
jl
neg
pushf
insl
or
aas
xor
push
sbb
bound
cli
jg
and
scas
sbb
test
stc
mulb
and
ljmp
jecxz
test
cmp
outsb
adc
adc
or
push
data16
push
std
decl
scas
adc
adc
cmc
inc
cmp
pushf
outsb
add
xchg
mov
and
mov
ficomps
pusha
adc
cmp
or
dec
andl
or
mov
loopne
pop
jle
sbb
pop
xchg
rorb
jp
inc
push
pushf
jg
fdivp
mov
push
rol
mov
ljmp
adc
rcr
out
aas
pop
xchg
push
or
xor
add
cmp
mov
jge
push
or
cmp
addr16
lahf
sub
push
dec
add
into
push
pop
mov
push
cltd
imul
mov
pop
push
popa
addb
jg
cmpsb
sbb
movsb
jge
cmp
xor
pop
xor
bound
test
stc
mov
pusha
cli
and
shlb
xchg
aad
cs
je
mov
and
addr16
jne
inc
cli
pop
ds
xor
and
outsl
mov
cmp
sbb
pop
mov
cmp
inc
incl
je
out
add
mov
lahf
fildll
xchg
rcrb
push
mov
mov
ds
sbb
and
xor
ficoms
aas
push
fwait
jnp
pushf
adc
pop
mulb
sbb
jne
cmp
push
pop
mov
pop
mov
lcall
jnp
xchg
stc
sub
push
add
push
adc
ret
ja
xor
imul
add
insb
add
push
int
mov
mov
xchg
pop
sahf
jg
test
fnsave
push
pushf
fs
adc
or
js
arpl
adc
jo
jnp
outsb
dec
pop
add
push
in
clc
cs
sbb
sub
sbb
cmp
pop
lcall
mov
xor
push
cmc
daa
cmp
test
aas
pop
test
lds
or
cli
mov
ljmp
xchg
adc
sub
mov
ljmp
js
dec
xor
lds
and
dec
mov
xlat
push
hlt
dec
in
sar
jg
and
call
jmp
cli
mov
lds
popf
or
push
icebp
push
inc
adc
mov
push
cs
mov
add
push
stc
add
stos
test
xor
add
decb
cmp
or
add
push
faddl
lock
call
jge
daa
in
cmp
mov
scas
push
addl
and
add
mov
call
xor
lods
push
inc
clc
testl
dec
pop
add
mov
ss
xchg
orb
movntps
dec
sbb
and
or
inc
imul
push
outsb
nop
andl
test
fisttpll
popa
cmp
adc
test
outsl
mov
or
pop
and
push
adc
mov
dec
and
or
incl
push
xchg
jmp
and
cld
sbb
lods
test
mov
or
inc
sbb
sub
subb
incl
call
xchg
mov
scas
add
and
subb
sbb
xor
dec
ret
mov
lods
cmp
repz
jp
cs
fmuls
out
or
nop
lock
fistpll
cmpb
jg
daa
xchg
jmp
adc
outsb
add
push
jecxz
sbb
xchg
stos
mov
std
mov
je
adc
mov
ret
sbbl
jg
movsb
ja
ds
test
pop
cmp
pushl
xchg
movsb
mov
xor
sbb
cld
sub
push
test
fimuls
xor
pop
lss
ds
xchg
out
movsb
pop
cwtl
ficomps
addl
cmpsl
dec
and
adc
add
xor
mov
ljmp
push
dec
aas
add
pop
cmp
sub
fists
das
or
sbb
push
cmp
popf
insb
sbb
std
pop
icebp
cmp
arpl
stc
xor
nop
mov
mov
loope
jne
dec
jns
and
movsl
bound
cmp
pandn
mov
or
movsb
mov
cmp
mov
popa
xor
sbb
add
mov
jns
lods
mov
mov
mov
xchg
sub
fcomip
sub
inc
jno
lea
fwait
lcall
inc
aad
repz
dec
jmp
or
lods
add
test
lret
ljmp
cld
push
dec
pop
or
fidivrl
xlat
lock
rcrb
sub
push
cli
fiadds
or
and
jno
notb
jl
jecxz
cli
xlat
call
dec
lock
outsb
inc
mov
push
and
add
scas
jle
or
push
ret
decb
cltd
adc
arpl
sbbb
fldt
adc
xchg
hlt
pushf
pop
xor
repnz
scas
decl
test
add
push
push
or
sub
sti
cld
sub
in
mov
cmp
xor
cmp
pop
fmuls
or
pop
inc
inc
mov
mov
jle
mov
xor
scas
jb
scas
sub
sbb
cmp
ret
scas
mov
aam
clc
xor
mov
mov
mov
sub
dec
pop
sub
push
adc
sbb
cmpsb
lret
jmp
shll
addl
mov
pop
aas
out
mov
inc
dec
add
outsl
mov
jmp
push
out
movsb
hlt
fidivs
aas
xlat
cmp
mov
or
popf
pushf
pop
add
cmp
pusha
popa
sub
data16
push
bound
iret
lea
ljmp
cmp
or
push
mov
jg
inc
inc
mov
xchg
xchg
adc
and
inc
xchg
jmp
inc
mov
cs
ret
jne
sub
movsb
push
dec
mov
out
xchg
in
xchg
fidivrl
add
sub
pop
push
movsb
stc
test
adc
jb
insl
xor
outsb
test
fistl
and
mov
jp
xor
mov
inc
add
cmc
lahf
jns
loopne
mov
add
xchg
sbb
xorl
sub
xchg
cld
adc
mov
pop
sub
test
mov
sub
std
jo
mov
and
sbb
jge
aaa
lcall
test
data16
pop
pop
xchg
fcomip
mov
inc
adc
xor
add
movsb
sub
add
or
cs
repz
clc
ret
test
add
xchg
pushl
push
inc
adc
and
pop
dec
adc
scas
xor
rclb
rolb
adc
cmp
xchg
mov
xor
xchg
xchg
and
fildl
ss
dec
fs
nop
fwait
inc
mov
decl
dec
sub
xor
xor
cmc
adc
adc
insl
sbb
xor
add
lods
imul
lods
inc
adc
jns
pop
in
sub
mov
xor
push
sub
lods
bound
xor
jbe
add
pushl
sub
rcll
sub
dec
sbb
adc
in
pop
pushf
push
cli
aas
and
push
mov
mov
sub
add
sbb
or
hlt
pop
pop
stc
ss
test
fldl
push
fidivl
cmp
cwtl
loop
outsl
push
dec
out
inc
pop
push
inc
mov
sbb
inc
and
add
fldcw
cmp
int
cs
push
fucomi
fwait
push
mov
cmp
lahf
xchg
ljmp
int3
ljmp
cmp
das
hlt
sbb
jecxz
outsb
adc
icebp
mov
fstps
aaa
or
dec
pop
push
push
pop
push
and
cmc
incl
daa
cs
push
and
add
sbb
pop
call
imul
outsl
pop
push
lds
push
call
sub
cmpb
xor
mov
and
pushf
stos
sbb
testb
or
push
es
aad
dec
cmp
xchg
or
mov
cli
and
add
incb
sbb
lods
mov
cld
cmp
jne
sub
jae
popf
lock
ljmp
and
jle
sub
fcmovbe
adc
outsl
bound
cmp
popf
mov
pop
dec
loope
outsl
add
mov
dec
or
push
mov
fcomip
mov
cmp
xchg
push
push
cmp
cmp
inc
and
scas
or
dec
and
decl
mov
out
cwtl
aaa
sbb
sbb
mov
jmp
in
jb
out
ss
xchg
sub
or
mov
sbb
jbe
pop
adc
sbb
ret
sbb
mov
aaa
mov
incl
adc
mov
mov
adc
mov
clc
fistpl
enter
push
fsubs
daa
pop
dec
or
pushl
out
mov
loope
daa
pop
jb
cmp
stos
cli
xor
mov
pushl
and
mov
sti
addr16
mov
cmp
leave
sbbl
hlt
cmp
pop
dec
xlat
xor
xor
stc
mov
or
inc
and
fdiv
lret
out
mov
incl
shl
mov
and
jmp
adc
mov
loopne
push
xchg
lds
xor
lock
mov
call
dec
xchg
or
ljmp
jne
aam
adc
rcrl
stc
ljmp
add
movsb
hlt
add
sbb
popf
andb
mov
xchg
movsb
cli
or
shrl
mov
push
or
jmp
aaa
cmp
add
fldenv
sub
daa
inc
cmp
mov
fstl
sub
push
cmp
pop
or
xor
out
bound
sub
sbb
xchg
or
mov
adc
jg
test
xchg
mov
xor
lea
std
mov
cmp
pop
cltd
dec
test
jp
mov
xor
loopne
out
cwtl
add
sahf
das
push
cli
push
scas
clc
pushl
decb
mov
dec
dec
popf
xchg
add
or
mov
pcmpeqw
pop
or
imul
adc
bound
test
xor
or
pop
fistps
mov
xchg
and
dec
rorl
xor
out
add
bound
mov
push
inc
sti
ja
incl
xchg
xor
not
xchg
jbe
movsl
data16
ljmp
adc
lret
popf
push
mov
and
ss
call
and
jl
jne
push
push
adc
jle
sbbb
mov
push
xchg
sarl
out
xchg
mov
cmpsb
mov
lea
mov
pop
daa
xor
cmp
pop
sbb
xor
mov
jae
mov
and
je
je
adc
lret
call
rcrb
mov
jecxz
add
adc
aaa
aas
or
outsb
jl
aam
sbb
cmp
cltd
push
cs
test
cld
push
dec
and
push
pop
test
cmpl
cmpsb
pop
xorl
fwait
push
mov
aas
mulb
repnz
arpl
jmp
in
mov
inc
and
xchg
fwait
sbb
pushf
mov
cmp
dec
fs
lcall
add
sbbl
subl
fidivl
incl
or
or
adc
fisttps
ja
stc
cmp
test
sbb
cmpsb
and
xchg
scas
pop
out
clc
jmp
push
add
aaa
pop
sbb
mov
mov
jbe
adc
push
hlt
fsubrl
dec
imul
add
aas
orl
lret
mov
clc
pop
std
pop
data16
hlt
mov
cmp
insb
adc
jb
cs
out
push
rcrb
lds
jp
and
movsb
adc
ja
out
inc
and
rorb
xor
lahf
xchg
or
xchg
adc
mov
sub
cmp
movsl
mov
add
movb
mov
sti
orb
dec
push
xlat
or
mov
dec
mov
aas
loope
and
add
pop
xor
fsts
lcall
adc
adc
sahf
jmp
icebp
and
xchg
cmp
cmc
push
xlat
ljmp
mov
sub
xchg
sahf
xor
mov
jnp
aas
cmp
lods
or
push
xlat
inc
adc
pop
ret
mov
pop
dec
sbb
xor
faddl
adcb
mov
or
scas
lcall
sub
aas
faddl
repz
sub
sub
adc
jg
mov
xor
push
sbb
jmp
sbb
hlt
cmpsb
ljmp
int3
adc
or
in
cmp
std
lcall
adc
subl
adc
loopne
roll
ljmp
mov
cmp
sbb
out
or
sub
shrb
sbb
fisubs
sbb
and
mov
or
add
sbb
jmp
jno
push
sub
call
sbb
or
out
mov
dec
or
jp
roll
cmp
mov
cs
pop
lock
cmc
sub
lea
psllq
adc
dec
adc
add
cld
scas
and
xchg
mov
idivl
or
es
es
lret
cmpl
mov
frstor
adc
xorb
mov
lds
mov
dec
loopne
loopne
adc
loopne
xor
sub
std
fcomip
pop
mov
xchg
adc
out
xor
mov
sub
lods
xor
push
rcll
sbb
aaa
pop
fcom
mov
push
testl
mov
and
xchg
shll
test
xor
lcall
sbb
sbb
mov
rolb
aaa
xchg
shrb
mov
adc
mov
or
incl
fistps
mov
add
movsb
shll
xchg
repnz
scas
idivb
jg
inc
sub
lret
or
stc
cmpb
pop
stos
cli
outsl
adc
sbb
or
jmp
or
cld
clc
ja
fcoms
xor
das
dec
ret
loop
scas
ss
pusha
adc
inc
fnstcw
outsl
shrb
andb
sahf
movsl
sbb
jg
stc
mov
fmuls
scas
jo
movsb
sbb
cmp
aam
out
xchg
xor
mov
add
add
jg
aad
cli
inc
push
cwtl
mov
jmp
scas
jg
movsl
sub
sbb
or
mov
mov
fwait
jmp
add
adc
jmp
and
sbb
cmp
mov
pop
out
cmp
je
icebp
xchg
aaa
std
mov
sub
sbb
or
mov
ljmp
aas
repnz
add
dec
add
mov
lret
cwtl
aad
fdivr
aas
std
and
sub
jp
fbstp
or
adc
inc
out
repnz
cli
nop/reserved
dec
addl
or
pop
mov
jle,pn
test
xchg
mov
or
adc
cmp
mov
adc
movsl
lret
jmp
fs
and
insb
clc
incl
add
adc
add
es
pushl
pop
cmp
or
lods
adc
and
xchg
in
call
loope
push
or
xor
int3
add
add
and
popa
add
add
cwtl
cmpb
loope
fiaddl
subb
fdivrs
rcrl
or
jge
in
or
out
mov
jb
cmp
test
and
rcrb
push
test
std
mov
adc
add
sbb
lock
movsl
and
and
int
sahf
hlt
jne
insl
jmp
pop
lock
not
hlt
dec
aaa
call
rorb
stos
pushl
pop
fdivrl
sbb
mov
fbld
fidivrl
icebp
mov
mov
push
lret
pop
and
orb
mov
lret
xor
ret
idiv
cs
ljmp
mov
xor
cli
adc
push
ljmp
cmp
adc
loopne
pushf
xor
pop
cltd
pop
pop
fwait
mov
rcrl
push
inc
jmp
jne
add
lods
nop
cld
or
mov
mov
jecxz
ficoms
pop
dec
sbb
xchg
inc
ja
decl
or
cmp
xchg
mov
cmp
sub
cmp
mov
ret
lcall
ja
adc
and
dec
push
jecxz
push
or
mov
cmp
repnz
inc
lds
mov
and
xor
mov
lock
add
loop
aas
inc
xchg
arpl
aaa
cmpl
or
and
bound
push
outsl
aam
clc
adc
imul
add
fisubs
adc
lret
out
mov
sbb
sub
inc
test
xchg
hlt
hlt
xchg
adc
xor
push
push
mov
sbb
rcrl
push
add
shrl
xchg
add
pop
and
xor
dec
ds
ds
cmp
outsl
sbb
cmpsl
cmp
lods
cltd
xchg
outsl
das
adc
mov
sbb
xchg
push
cmp
sbb
es
out
les
push
sub
or
jae
and
sarb
lcall
in
in
push
add
jns
dec
add
and
sub
stos
mov
cli
inc
ljmp
sub
stos
xor
daa
aad
bnd
ljmp
inc
rorb
andl
jle
loopne
and
push
adc
leave
xchg
leave
adc
cli
and
or
mov
or
clc
jg
in
into
movsl
dec
sti
pop
sub
cs
fs
and
mov
cmp
incl
cmpsl
pop
adc
leave
sti
dec
sbb
cmpsb
cmp
cs
leave
iret
hlt
add
add
mov
lock
iret
xor
rcll
pop
lods
mov
fs
lock
fs
roll
add
sahf
fsubl
es
sub
sub
cwtl
jl
shll
jbe
sub
out
or
cld
pop
cld
lret
sub
pop
mov
inc
xor
lock
lea
les
ficoms
ds
xchg
in
adc
out
testb
or
daa
hlt
aad
push
loop
xchg
out
lods
push
in
setnp
dec
lea
pop
flds
popa
pop
popf
mov
loopne
cs
test
push
add
call
xlat
cmp
push
shll
pop
sub
dec
aaa
fisttps
xchg
ficompl
test
jle
sbb
inc
ja
call
push
push
mov
push
add
pusha
xchg
and
or
dec
xor
add
lods
outsl
add
cmp
cmp
fisttps
mov
cmp
xor
mov
mov
ss
test
pop
or
stc
xor
mov
adc
adc
pushl
adc
xor
pop
mov
cmp
cmp
mov
xor
adc
stos
fwait
or
outsb
std
imul
dec
sub
xor
mov
fiadds
xchg
mov
imul
jmp
dec
repz
lods
lods
dec
push
lea
or
fwait
pop
mov
test
into
sub
call
fs
or
sub
movsl
cmp
inc
mov
pushl
jg
sahf
sahf
push
cmp
dec
dec
sbb
movsl
xor
cmp
inc
pop
loopne
pop
and
pushf
icebp
out
nop
lods
or
lcall
or
fdivrl
mov
jle
cmpsb
xchg
jg
pop
and
xchg
das
cltd
ss
pop
into
or
addr16
daa
sub
adc
xor
inc
dec
sub
and
inc
dec
movsb
add
aam
stc
dec
mov
inc
or
dec
popf
pop
dec
cs
pushf
in
mov
sahf
or
xchg
lcall
outsl
rorb
movsb
insb
fistps
jmp
add
and
cmpsl
lods
jbe
add
lret
add
xchg
call
adc
ret
adc
lret
push
adc
add
sub
repnz
inc
cmpsl
add
jae
xchg
test
pop
xor
mov
in
std
andl
cmpb
and
incl
cmpsb
lea
xor
add
mov
mov
sbb
push
les
lock
ja
faddl
stos
jae
dec
mov
lea
shl
ja,pt
int3
or
jg
pushl
sub
repz
cwtl
cli
and
adc
repz
in
clc
xchg
cs
mull
call
jmp
mul
pop
icebp
cmp
ljmp
adc
mov
fwait
cmp
xchg
aaa
test
lods
cmp
push
pop
shll
xor
dec
add
out
xchg
xchg
mov
jecxz
lret
out
xchg
cmp
cmp
cmp
cmp
mov
mov
shrl
decl
mov
in
add
ret
ds
ss
fsts
sbb
mov
das
adc
mov
and
adc
pop
repz
lods
sub
aas
loopne
lods
add
out
fs
test
jecxz
sbb
jg
push
mov
sbb
out
aam
xchg
lcall
cli
mov
sub
mov
adc
stc
or
push
cwtl
loopne
sbb
add
movsb
pop
xchg
popf
push
test
push
mov
aam
popa
sbb
sar
decl
icebp
stos
lods
dec
sub
or
std
scas
dec
aad
jnp
mov
mov
cmp
es
ret
push
push
mov
sbb
and
adc
mov
inc
adc
push
sbb
push
icebp
imul
ss
ja
jl
or
mov
xor
fnstenv
loopne
lcall
and
scas
pop
cmp
ljmp
or
sbb
or
or
dec
add
add
mov
sbb
xchg
movsl
xor
test
and
mov
push
ss
jae
mov
lods
stos
mov
shrb
add
out
adc
mov
mov
push
pop
or
cmpsb
adc
movb
lret
es
dec
cmp
das
loopne
sbb
jecxz
sub
cmpps
jb
nop
or
mov
lahf
adc
mov
mov
loope
movswl
jmp
or
mov
jne
cs
cli
and
inc
sti
push
popa
call
repnz
mov
add
les
sbb
ljmp
fidivrs
sub
sbb
and
mov
sub
mov
aaa
push
mov
test
add
cmp
or
fwait
cmp
push
movsl
pushl
and
out
cmp
adc
xor
or
cmp
jnp
fbld
std
mov
mov
lcall
std
push
jl
mov
add
sbb
cmovp
pop
xor
mov
xchg
mov
idivb
mov
testb
fcompl
inc
filds
sub
adc
dec
out
icebp
into
sub
fcoml
js
aas
push
cmpsb
jg
cmp
gs
enter
adc
xlat
ljmp
rcll
outsb
add
and
fucomip
es
dec
adc
cmp
lock
and
sbb
pop
aam
aad
jl
sbb
dec
ficompl
mov
jmp
xchg
inc
cmp
test
sub
lea
and
lcall
push
nop
xor
add
scas
mov
add
insb
and
adcb
mov
xor
lret
movsb
test
std
call
lods
adc
fisubrl
int
cmp
pop
sub
sti
jl
push
nop
in
aaa
in
or
add
adc
jge
push
call
decb
out
decl
subl
xchg
mov
dec
mov
hlt
filds
cld
mov
movsl
push
cmp
cmpsb
ds
cltd
add
aaa
loop
xchg
push
sbb
xchg
or
call
sbb
es
xor
adc
test
out
dec
fwait
in
les
jb
popw
xchg
sbb
mov
mov
adc
cli
frstor
mov
dec
aaa
lcall
add
stos
push
add
xchg
sahf
add
adc
jg
xor
in
sti
sbb
push
jns
jnp
cli
out
or
in
or
mov
fbld
sar
add
add
cmp
cmp
cli
scas
push
das
mov
jb
or
adc
add
rorl
xor
fdivrp
movb
insb
pop
adc
lods
decl
das
fsubl
pop
clc
push
jns
data16
pushl
sub
jmp
adc
sbb
mov
ljmp
or
gs
insb
cmp
in
mov
ret
call
cmpsb
les
cmpsl
add
xchg
adc
pushf
adc
mov
push
mov
decb
dec
sahf
adc
clc
imul
dec
jecxz
movsb
lea
ret
loope
outsb
jnp
add
dec
cmp
cs
jmp
mov
daa
mov
ret
and
mov
fsubrs
loope
leave
nop
decb
adcl
ljmp
fdivrp
addr16
in
fninit
dec
cmp
pop
fxch
ljmp
cmp
pop
pushl
jmp
test
xor
push
ja
jecxz
and
pop
and
icebp
adc
cwtl
mov
jno
mov
xor
insb
out
in
in
mov
xchg
fdivr
ljmp
adc
sbbl
loope,pn
stos
sbb
adc
xor
test
dec
cld
popf
int
xchg
dec
dec
daa
push
mov
mov
cmp
xchg
scas
lret
les
lret
sti
call
mov
pop
test
test
push
rorb
adc
ljmp
inc
push
ret
or
xor
xchg
or
fcoms
aaa
cld
cmp
or
sbb
clc
xor
cmp
loop
inc
add
adc
push
cld
fisubrl
in
loope
and
imul
fwait
and
dec
cmpsl
and
adc
cmc
clc
imul
push
cs
dec
inc
dec
add
or
cmp
cmp
add
push
jl
jae
sbb
fisubl
mov
movsl
inc
test
or
inc
sub
mov
mov
lret
xor
ljmp
sub
jp
nop
and
sahf
inc
mov
pusha
ja
jg
mov
sub
in
fdivr
or
out
rcl
push
inc
mov
mov
sbb
sbb
add
pop
and
nop
sbb
jmp
push
ljmp
jo
insl
loope
add
and
jmp
fisttps
int3
or
pop
jns
and
mov
lret
add
add
cld
jmp
dec
adc
pusha
scas
outsl
into
mov
rcr
es
ror
sub
decl
in
mov
clc
sti
or
mov
push
in
jg
fimull
mov
xchg
pop
and
sbb
mov
sbb
cmp
fnsave
add
pop
in
lcall
std
fwait
inc
or
add
jl
test
lcall
inc
movl
div
push
cmp
fsts
cmp
fists
clc
inc
sti
cmp
loope
xor
pop
leave
bound
outsb
nop
push
xor
adc
pop
xchg
insb
pop
mov
dec
or
inc
inc
sbb
xor
push
fists
pop
sbb
pop
and
repnz
shlb
and
stos
mov
loop
jge
pop
insl
into
clc
out
int
call
sbb
inc
fimuls
lret
out
andl
ud2
addb
pop
mov
pop
xorb
xlat
mov
and
incl
mov
jbe
sub
push
idivb
fwait
xchg
jmp
lcall
subb
xchg
lcall
aas
sub
les
scas
nop
movsb
jmp
xchg
nop
cmp
sub
test
cmp
pusha
mov
xor
fldcw
jmp
in
jmp
test
mov
leave
fisttps
fcmove
xlat
inc
hlt
int
mov
pop
xchg
lea
jg
sarl
repnz
loopne
xor
mov
lods
stos
jg
mov
jbe
fdivs
mov
fsubr
mov
fsubp
mov
mov
clc
mov
clc
insb
xchg
aam
fbstp
negl
xor
je
mov
push
std
lcall
jecxz
mov
dec
inc
xchg
popf
mov
pop
push
mov
mov
movsb
test
stos
mov
push
cmc
cs
sub
ljmp
pop
out
pop
xchg
xlat
popf
cmpsb
add
xor
sbbb
cmp
and
icebp
jmp
insb
lret
jns
imul
outsb
and
jg
into
in
sub
bound
std
roll
mov
pop
push
fisttpll
pop
cmpsb
pushf
cld
fstl
jg
pusha
push
push
and
or
mov
mov
jne
notl
andl
mov
lret
adc
inc
je
out
orb
xor
inc
xchg
mov
pop
jg
push
adc
lea
pushl
add
mov
or
bound
xchg
push
shll
pop
xchg
add
lods
ds
cmc
repz
mov
or
imul
sar
ljmp
das
mov
xchg
pop
xor
into
std
outsl
out
das
or
push
mov
call
ret
loop
adc
out
stc
outsb
shl
sbb
sbb
testl
adc
ss
icebp
ljmp
and
and
out
call
outsl
ret
sbb
loop
jnp
fildll
ljmp
mov
dec
std
call
in
jns
sahf
sub
fwait
inc
adc
mov
nop
push
xor
flds
or
cld
jg
cmp
stos
pop
into
xor
cli
lcall
test
pop
in
bound
shld
aas
aas
cli
daa
icebp
insl
jl
sarl
add
sbb
adc
daa
push
je
or
stos
and
pop
dec
push
inc
or
pushaw
push
sub
call
dec
sbb
cmp
adc
fs
daa
mov
roll
imul
push
jp
inc
js
push
fnstcw
mov
adc
push
xchg
mov
push
imul
sar
jg
or
fbld
aas
rclb
sbb
mov
dec
scas
adc
push
icebp
incl
cs
jmp
mov
mov
aas
lea
popf
mov
ljmp
jmp
mov
xchg
and
or
movsb
hlt
pushl
ret
int3
les
cld
cld
les
xor
and
dec
movsl
add
or
and
sahf
mov
frstor
jmp
cmp
mov
and
rcrb
mov
jbe
and
fnstcw
shlb
sub
aam
les
push
hlt
sub
je
shlb
rorb
jb
jp
mov
push
pop
or
xor
jo
mov
clc
fildll
jo
or
cmp
movsb
cs
rcrl
int
mov
jmp
mov
pop
mov
pop
push
out
adc
push
rcl
push
fwait
mov
or
mov
xchg
and
add
sbb
fnstsw
out
les
add
aaa
mov
call
sbb
and
xchg
jbe
dec
cmp
ja,pn
nop
das
inc
lods
fadd
cmpsb
xor
frstor
add
test
cltd
pop
pop
xorl
mov
mov
adc
aam
sahf
sahf
and
mov
fistl
xchg
mov
divl
add
cmp
inc
push
push
sahf
sub
sar
pop
clc
and
repnz
ficoml
push
sar
incl
into
cs
lcall
or
in
ret
test
inc
lcall
lock
xor
or
stos
and
mov
daa
push
setge
ljmp
test
fs
stos
imul
or
hlt
daa
mov
jge
mov
jle
scas
lods
movsb
adc
mov
mov
nop
icebp
aas
aas
repz
movl
sbb
push
cmp
sbb
iret
mov
fwait
mov
inc
fildl
push
cmpb
lret
jg
add
jns
xor
dec
xchg
jg
mov
add
push
inc
mov
jno
mov
fistpl
pop
cmc
movl
adc
es
or
and
aaa
scas
push
hlt
push
mov
pop
cmp
cmpsl
out
loopne
decl
add
mov
fmull
xchg
sar
fildll
lahf
add
xchg
loope
repz
mov
pop
cmp
subb
les
pop
shll
hlt
dec
aam
cli
add
push
xchg
mov
mov
cld
fisttps
fst
inc
sub
loop
add
aaa
int
out
jecxz
pop
decl
mov
in
nop
insb
clc
mov
xchg
xchg
dec
icebp
adc
inc
clc
dec
pop
test
movsl
outsl
addb
stc
imul
mov
cmpsl
addr16
call
loopne
and
not
mov
scas
outsb
adc
movsl
incl
pop
jno
sub
leave
aad
divb
mov
adc
lods
in
movsb
mov
test
pop
mov
or
roll
mulb
lods
cmpsl
pop
push
hlt
cmp
incl
or
enter
bound
cmpb
rcrl
mov
stc
out
andl
icebp
loope
jmp
xchg
adc
sbb
cmp
fucom
push
sub
mov
or
inc
shl
mov
fcmovbe
loopne
push
das
sti
pop
sti
subl
repz
sub
lret
in
out
ror
ljmp
mov
mov
xor
adc
jmp
mov
xchg
icebp
sti
push
popf
outsb
xor
outsl
cmpsb
hlt
outsl
jp
xchg
and
pushf
and
dec
xchg
push
decl
pushl
mov
pop
rcr
adc
sahf
jno
cmpb
mov
dec
jg
ja
xchg
clc
jp
add
push
test
rorl
or
mov
rorb
sub
pop
adc
push
mov
add
sbb
or
sbbb
outsl
lods
add
jno
cmp
movsb
mov
hlt
incl
daa
es
pop
and
cltd
sub
pop
xor
out
cli
das
lcall
clc
leave
es
lock
adc
xchg
sub
mov
mov
hlt
add
rcrb
decl
test
push
insb
stc
icebp
jns
out
je
out
ror
dec
sbb
pop
or
out
adc
aaa
into
sub
outsb
fistl
roll
mov
in
xor
and
jp
lock
cmpb
aaa
in
xchg
push
hlt
pop
repnz
cmp
clc
dec
lcall
cmp
cmp
mov
sti
cmp
mov
cmp
lret
dec
xor
sbb
rorb
aaa
cmc
add
adc
pop
mov
loop
push
cli
lcall
inc
adc
cmpl
push
in
cmpl
sbb
stos
pop
mov
cmp
clc
inc
mov
xchg
in
lcall
cltd
call
lcall
adc
fldln2
mov
movsb
mov
mov
pushl
sbb
pop
outsb
push
sbb
lea
dec
loop
lcall
jmp
push
sbb
inc
add
out
testl
movsb
andl
dec
dec
jg
dec
mov
cmpsb
push
leave
sbb
in
cmp
xchg
lcall
lret
push
sub
mov
mov
xchg
ret
repnz
into
xor
cmp
int3
mov
mov
dec
pop
andb
in
xchg
and
add
mov
stc
fcomi
scas
repz
clc
dec
adc
xchg
pop
adc
ss
cld
fs
sbb
sub
js
xor
shll
cmpsb
push
mov
lock
stos
aaa
mov
jne
push
cmp
lahf
je
jae
cmpsb
sub
jg
inc
adc
in
mov
sub
cltd
je
mov
mov
jge
mov
mov
stos
cmpsl
push
imul
or
mov
inc
push
pushl
xchg
movsl
xchg
sub
data16
fmull
gs
sbb
push
jo
ljmp
cmp
inc
cmp
outsb
jge
clc
xlat
fidivs
scas
int3
dec
ljmp
adc
nop
xchg
adc
mov
shrl
dec
pop
cmc
call
test
sbb
sub
mov
cmp
stos
cmp
cmp
sbb
sbb
dec
daa
lock
out
decl
pop
or
jge
or
and
or
xchg
mov
ljmp
mov
push
or
jecxz
mov
mov
add
jg
push
sbb
div
shll
push
enter
adc
ret
add
mov
ss
push
mov
imul
sbb
pushl
outsb
and
orl
mov
pushl
andl
lock
adc
icebp
sub
sar
sarb
pop
jmp
or
das
testl
decl
cltd
and
ja
rol
stos
and
test
subb
cld
or
pop
adc
outsb
sahf
mov
jmp
sbb
dec
loopne
pushl
inc
jb
sbb
pop
ret
movsb
or
test
xchg
es
inc
bound
dec
enter
sbb
ret
jle
xchg
mov
mov
inc
jmp
xor
cmpsb
decl
shl
rcll
xor
mov
cmp
adc
sbb
sar
sub
mov
ja
sbbb
jle
dec
es
cmp
decl
das
psubb
mov
pop
sbb
sbb
popf
orb
mov
outsl
nop
lcall
push
in
adc
or
movsb
and
jg
ljmp
mov
imul
mov
push
aam
and
cmpl
pushw
push
push
mov
hlt
negb
sub
or
inc
xor
jp
shr
adc
icebp
leave
or
sbb
out
pop
cmp
incl
mov
loope
sbb
testl
xchg
cmpsb
add
fdivr
and
daa
mov
xchg
sbb
sarb
ljmp
stos
dec
and
sub
lods
cmp
add
data16
mov
notb
cwtl
clc
ljmp
mov
cwtl
or
adc
jae
adc
mov
lea
mov
lret
fs
loop
ja
push
mov
das
sbb
leave
push
jne
or
lcall
xlat
sti
lcall
add
jo
xchg
test
ss
add
push
sbb
incl
fnsave
inc
cmp
jb
icebp
into
sar
ja
in
loop
jle
push
or
add
aaa
sbb
mov
incl
lds
fdiv
cli
out
stc
pop
sbb
inc
mov
dec
xchg
sbb
mov
loopne
push
jle
ljmp
mov
cwtl
add
push
pop
movaps
cmovnp
pop
mov
mov
xchg
mov
push
push
xor
jg
inc
jo
and
and
inc
inc
testb
nop
xchg
js,pn
cmp
mov
cs
ret
ret
adc
add
sub
dec
cld
outsl
adc
fs
shll
cs
jb
aam
adc
incl
adc
stc
sub
jae
cs
dec
add
les
dec
cld
in
pop
or
into
mov
fs
sti
std
jno
sbb
and
into
std
das
adcb
mov
pop
or
sub
or
add
jle
cmp
add
and
hlt
fwait
es
xor
test
sub
mov
cld
ljmp
aad
push
pop
cmp
adcb
mov
test
xchg
fldenv
fistpl
hlt
push
and
xorb
push
in
push
xor
push
xor
ss
adc
push
ret
sti
sub
mov
jbe
out
lret
add
insl
pop
jle
fdivs
add
mov
push
out
xor
pop
divl
jmp
imul
xchg
lahf
fcompl
bound
in
mov
fs
jnp
add
mov
ljmp
movsb
jg
xor
cs
outsl
push
mov
pushl
ret
ljmp
cld
in
jae
pop
icebp
push
bnd
cld
loop
fcmovu
in
popa
push
pop
xchg
add
jmp
mov
pop
sub
imul
or
sbb
cmp
mov
fdivrs
sub
sarb
xor
add
popf
inc
jg
xchg
adc
add
pushf
or
mov
or
outsl
or
movsl
sub
lahf
push
ror
stc
test
fisttpll
sbb
mov
jg
or
pop
cli
cmpb
andb
mov
sahf
and
mov
mov
add
es
adc
mov
ljmp
aam
out
and
mov
aaa
mov
repz
adc
shlb
inc
adc
xchg
iret
add
call
repnz
fsubrs
xchg
mov
jmp
or
outsb
ret
fbld
outsl
push
std
imul
cmpb
sbb
mov
repnz
lcall
inc
dec
push
cmp
imul
cmp
cmpsl
adc
pushl
in
leave
inc
cmp
xor
push
mov
jno
ret
outsb
inc
and
pop
in
subl
aam
xor
in
fbstp
xor
andl
sti
sub
or
ljmp
ljmp
adcl
adc
xor
gs
cltd
xchg
call
loopne
add
outsl
cld
jmp
bound
xor
ljmp
xlat
ljmp
sahf
xchg
clc
dec
adc
sub
lahf
lfs
aad
shld
outsb
cs
jg
lods
flds
ds
inc
das
pop
inc
jae
xor
jnp
call
sar
adc
repz
sbb
fldl
mov
fdivr
sbb
adc
movb
ret
fnstenv
test
mov
nop
andb
jp
inc
dec
rorb
inc
ret
push
xchg
aaa
inc
call
std
jmp
inc
ljmp
mov
dec
xorb
lcall
cmpsl
or
mov
imul
gs
xchg
adc
les
lcall
dec
ss
mov
sub
ret
add
loope
fisubl
mov
cs
mov
push
cmp
xor
lret
xor
adc
ds
cwtl
pop
loope
sub
pop
or
xorb
xor
lods
daa
or
filds
push
add
packuswb
jle
cs
add
jno
inc
adc
aaa
sub
jo
orl
xchg
pop
push
call
xchg
sti
leave
in
adc
lldt
out
inc
adc
or
clc
ljmp
push
das
mov
int
cmp
xchg
and
adc
inc
inc
cmp
or
adc
in
outsl
cmp
add
aas
cmpsb
loope
jg
mov
pop
push
jne
out
sub
push
scas
add
sbb
gs
add
pop
push
push
fists
ja
cli
jmp
int
jl
xchg
cmp
cs
cmp
pushl
dec
test
nop
jae
daa
jge
fwait
call
aas
and
lahf
fs
jle
mov
xor
or
sub
mov
in
add
xchg
sub
sbb
lret
das
add
fsubrl
fsubrs
nop
pop
lahf
push
inc
fsubr
bound
sahf
xor
rep
stos
sub
clc
dec
mov
pop
mov
gs
loope
mov
test
dec
decl
mov
ret
imul
mov
gs
ja
jb
insb
dec
fcomip
lcall
xor
lods
mov
jbe,pt
mov
and
push
cld
push
pop
sbb
incl
sub
xchg
les
decl
clc
fadds
jne
pop
push
popl
int3
movsb
aaa
fs
add
xchg
mov
sub
sar
fbld
mov
and
push
cmpsl
and
xor
stos
int
adc
pushl
fidivrs
mov
int
test
and
pop
fistps
add
add
dec
dec
mov
ds
ljmp
mov
push
xor
cmp
add
jge
cld
loope
clc
pop
rclb
sub
xchg
push
movsl
sbb
call
int
inc
xor
inc
testl
mov
fists
pop
push
call
pushf
cmp
decl
mov
movsb
inc
sbb
sbbb
mov
ret
stc
xchg
mov
stos
add
pusha
ljmp
stos
sub
inc
cmpsb
sbb
shrb
out
incl
and
xchg
cmp
mov
xchg
das
les
cmp
jne
mov
stos
ret
push
adc
ljmp
adc
inc
test
jg
lock
cmp
add
cltd
inc
push
mov
lock
sbb
scas
mov
sti
loop
call
inc
xchg
push
call
xchg
jmp
or
test
aaa
lret
fcomps
xor
dec
adc
adc
mov
addl
and
lock
push
ds
fistps
pop
sub
xor
int3
push
ret
mov
icebp
aam
sbb
mov
loope
pop
adc
jg
dec
dec
addl
inc
repnz
aaa
push
mov
push
cmp
mov
test
or
mov
cmp
mov
repz
mov
xlat
and
mov
ja
js
cmc
cmp
or
and
adc
dec
push
shrb
xchg
popa
mov
and
mov
mov
jg
loope
or
into
scas
jne
mov
loopne
cmp
cmp
negl
sub
pusha
sbb
aas
mov
push
sub
add
add
sbb
inc
clc
cmp
sub
and
hlt
cmp
cmp
idivl
mulb
stc
shrb
sub
aaa
push
add
or
lds
inc
dec
sub
mov
adc
es
dec
cli
inc
dec
cli
mov
mov
mov
push
aam
dec
scas
mov
test
repnz
jp
hlt
mov
pop
in
fisubs
gs
pushl
and
fs
and
xor
fisubrl
push
cmpsb
xchg
pop
cld
in
ds
xor
inc
clc
jmp
adc
push
shll
pop
sbb
jp
jnp
rorl
pop
cmp
incl
inc
dec
sbb
sbb
loope
xor
pop
pushl
adc
and
sbb
jae,pt
mov
fadd
inc
xor
xor
cmp
mov
inc
cmpsl
adc
mov
ds
movsl
jnp
xor
aam
push
cmpsl
inc
dec
dec
ss
orl
jg
sub
les
add
or
cmp
push
scas
pop
push
sub
jo
mov
dec
imul
cmpsb
imul
and
std
pop
xchg
stos
xchg
pop
adc
es
pushf
pop
roll
add
adc
lcall
cmp
int3
jbe
pushf
scas
call
pop
fsubr
adc
xor
push
cmp
pop
mov
mov
sub
test
and
jmp
dec
cs
push
pusha
sbb
mov
xor
clc
int
xchg
aam
adc
and
cmp
push
icebp
addr16
mov
xor
lea
or
add
jl
shlb
pop
incl
inc
dec
cmp
decl
test
sub
and
pop
lods
ljmp
add
mov
push
sub
adc
ss
xor
outsl
fimull
jbe
cmp
add
push
push
mov
pop
push
jp
push
mov
cmp
lret
lahf
aaa
push
sub
notl
push
jae
sbb
das
cmpsb
mov
jg
sub
mov
stos
ret
fcmovu
pop
ljmp
js
js
or
mov
xchg
stos
adc
ret
out
xchg
cli
mov
incl
mov
add
dec
jle
loop
pop
adc
fwait
ja
das
ds
add
mov
out
fdivp
incl
ljmp
inc
out
xorb
loope
lret
aas
cld
scas
or
xorb
and
add
mov
inc
pop
xchg
mov
inc
pop
xor
push
enter
cmp
pop
or
das
pushf
mov
shll
or
mov
push
fdivl
or
stos
popf
xor
or
cld
pop
pop
inc
mov
mov
jnp
mov
sub
add
les
sub
pop
imul
insl
sbb
add
jg
call
or
xor
sbbb
jb
push
push
add
sbb
mov
daa
lds
fsub
add
data16
lock
in
pop
and
push
in
or
jg
test
inc
and
push
lahf
cwtl
mov
inc
push
sbb
add
or
mov
adc
cld
xor
incl
mov
sbb
in
add
adc
popf
je
rclb
movsl
mov
mov
adc
pop
sbb
iret
or
stos
jae
enter
pop
sub
insl
inc
cmp
addb
mov
out
add
sbb
cwtl
dec
sti
push
pop
leave
sbb
std
clc
mov
shll
je
push
aas
jle
jmp
aam
je
cld
lcall
jbe
push
loop
or
xchg
xor
ret
test
xchg
xor
ss
mov
jnp
jp
xchg
inc
shrb
add
push
hlt
aaa
or
cmp
in
cli
test
pop
lcall
xor
js
stc
mov
addb
lock
xchg
push
lock
sbb
std
fistps
adc
xor
out
mov
ljmp
rclb
ljmp
mov
sbb
jg
mov
fsubrl
push
in
and
popf
xchg
jmp
push
sarb
rdtsc
gs
incl
lcall
in
aas
pop
jae
fs
xchg
int
mov
in
aaa
inc
clc
movsl
shrb
xchg
in
repnz
cli
mov
pushf
pop
fs
jp
sbbb
mov
or
push
jb
xchg
or
mov
mov
stos
outsl
in
jp
fsubrs
loopne
xchg
fdivp
out
mov
xor
popf
xchg
dec
cmpsl
inc
jge
stos
lods
out
adc
push
shlb
dec
jp
hlt
int
mov
es
sub
and
gs
in
push
je
ja
mov
push
push
and
and
push
aaa
dec
mov
adc
or
incl
pop
cmp
push
cmp
or
and
push
nop
cltd
xor
aam
jb
inc
or
jns
and
jb
sbb
repnz
aas
decl
shl
fisubrs
cmp
sahf
test
icebp
dec
incb
mov
cmp
and
cmc
mov
sbb
ljmp
mov
push
jge
push
sub
add
or
notb
in
push
lcall
push
aam
or
or
jge
xlat
test
fsubs
mov
decl
adc
cmc
inc
dec
pop
out
stos
xor
cmp
das
jmp
jo
jo
out
cmp
add
sub
adcl
fiaddl
sbb
lcall
mov
sub
bswap
repz
cs
iret
and
rcr
cwtl
mov
ljmp
adc
popf
lahf
popf
out
pop
std
mov
or
xchg
mov
out
cmp
sbb
mov
aaa
sbb
push
mov
xor
lahf
mov
stc
push
push
pop
xchg
add
cmp
mov
mov
mov
or
mov
sub
jg
dec
test
jmp
sub
lsl
jmp
cmp
out
adc
fwait
jo
das
fwait
jbe
jne
push
push
add
mov
sub
out
out
hlt
jo
ret
lahf
jmp
xchg
push
scas
push
lahf
push
and
push
jg
cmc
mov
mov
add
fldcw
sbb
bnd
jb
ljmp
cli
mov
sti
cmpsb
orb
cmp
loop
jmp
loopne
js,pt
cmpsl
dec
or
mov
jnp
ffreep
sbb
pusha
stos
jmp
add
movb
clc
adc
or
popa
lcall
xor
xchg
push
bound
icebp
add
pop
mov
dec
push
jp
cmp
mov
incl
xchg
xchg
inc
and
cs
loopne
xchg
into
loope
insb
sti
add
jmp
and
mov
adc
push
pushf
sbb
sbb
les
or
stc
subl
loope,pt
or
lock
cmp
pop
push
pushf
mov
jge
insl
jecxz
sub
push
int
fs
out
ss
pushf
sub
aad
xor
mov
jmp
adc
cld
jl
mov
sahf
push
mov
cltd
pop
cmpl
mov
dec
sub
incl
mov
lea
push
cmp
lods
fsubrs
mov
fwait
xor
subl
cmp
in
cmpb
cmpb
bound
into
jge
adc
ljmp
xchg
sbb
mov
and
or
and
push
push
jle
out
idivb
ds
mov
mov
dec
pop
repnz
push
movsb
into
mov
sar
cmp
mov
add
adc
add
push
push
movsl
xor
ret
loope
out
xchg
aad
sbb
sbb
sub
adc
std
pop
pop
lret
jns
pop
mov
dec
rcrb
sbb
push
pop
les
jle
cmp
loope
fwait
mov
call
and
add
mov
aaa
std
dec
jp
xchg
fnstsw
cmp
push
xchg
or
or
and
aaa
adc
push
je
iret
shrb
ja
fsts
loopne
inc
jp
dec
mov
sbb
jg
nop
xor
inc
sbb
mov
sub
bound
iret
mov
fists
lock
iret
fildll
or
add
ljmp
pop
mov
das
jmp
rcrb
lret
mov
imul
mov
xor
test
in
xchg
adc
outsl
jecxz
cmp
and
cmp
jle
mov
ljmp
adc
mov
repz
xor
dec
or
jg
mov
jl
lds
cmp
es
sbb
pop
pop
mul
stos
or
int
jge
and
mov
lods
mov
loope
mov
fwait
aas
push
fstpt
sub
xor
dec
cmpsb
incb
int3
test
and
cmc
sub
je
sar
lcall
add
cmp
and
cmp
adc
add
cmp
dec
mov
xchg
mov
popf
mov
cmp
sbb
push
insl
push
cmc
or
and
push
cmc
testb
ja
pop
push
mov
decl
ss
dec
divb
push
jne
cmp
icebp
ljmp
fistpl
sbb
cmp
xor
xchg
mov
mov
mov
adc
pop
and
lcall
lock
sub
pop
cmp
sarb
testl
std
xor
push
and
mov
repnz
cmpsl
mov
xchg
into
sub
push
dec
ret
jo,pt
fwait
mov
dec
sbb
mov
mov
imul
enter
fwait
pop
sub
xor
xchg
aam
mov
lret
cmp
dec
pop
adc
mov
cmp
xor
cmp
xchg
pop
push
sub
aas
jo
test
call
pop
loopne
out
orb
pop
sahf
ljmp
xchg
jbe
lods
scas
and
mov
lea
cmp
fisttps
cmpsl
enter
jns
dec
adc
aas
xchg
in
test
loope
push
sbbl
icebp
xchg
or
mov
das
pop
adc
in
add
mov
xchg
add
pop
shrb
xchg
pop
ds
mov
and
dec
mov
into
and
inc
sahf
lret
aas
lods
test
dec
sbb
stc
ljmp
push
pop
or
test
sbb
mov
xchg
fwait
cmc
ljmp
and
jle
arpl
dec
cmc
nop
imul
jge
out
incl
outsb
loop
or
sbbl
es
xchg
sahf
dec
cmp
outsl
mov
push
mov
js
cmc
int
adc
movsl
dec
adc
adc
out
es
xor
mov
daa
scas
dec
xor
js
ljmp
cltd
in
incl
sahf
mov
data16
mov
imul
mov
sub
xor
imul
or
push
shlb
lea
inc
pushf
into
jbe
fdiv
sbb
orps
sub
pop
imul
rorb
push
lock
sbb
xor
fnstcw
push
cwtl
jl
inc
jnp
adc
push
xor
pop
int
test
jle
repz
mov
es
dec
cld
jne
dec
add
fisttpll
sub
cmp
lcall
fmuls
sub
sbb
hlt
push
adc
sti
clc
nop
shlb
jg
loope
xchg
xor
xor
arpl
ds
cwtl
repnz
mov
jg
dec
bound
ljmp
rcrl
xchg
xchg
das
mov
push
and
in
mov
push
cmp
in
and
push
mov
pushl
cmpsb
ss
out
push
cltd
push
mov
rclb
or
sub
std
mov
or
pop
add
out
scas
sbb
pushl
shll
push
pop
pop
cmp
nop
pushl
cwtl
add
mov
add
adc
imulb
pop
push
or
pop
cld
ljmp
aam
fld
push
xchg
fsubrs
sahf
xchg
cmp
cmp
cltd
js
adc
jge
jle
lahf
scas
mov
mov
push
jecxz
nop
mov
or
jge,pn
stos
or
lret
ret
xor
fs
mov
cmpsb
push
dec
lret
cmp
sbb
imul
aam
dec
sbb
out
sbb
out
ret
rcl
nop
std
incl
ficompl
out
adc
and
jl
lcall
sub
pop
fdiv
fists
push
and
jb
movsb
mov
inc
adc
mov
stos
mov
fbld
out
movsl
ljmp
notl
cmp
xchg
xchg
call
or
cmp
xor
push
xchg
out
in
js
push
std
jle
cmp
out
add
out
cmpsb
lock
adc
pop
fsts
jnp
pop
and
add
xchg
push
ret
mov
mov
cmp
cli
je
xchg
adc
dec
mov
cmp
push
aam
jp
inc
sahf
paddq
xor
inc
adc
lcall
fs
sub
sbb
cmp
cmpsb
cli
mov
clc
aaa
or
jbe
add
jp
push
loope
loop
pop
hlt
pushl
push
sub
insb
fsubp
loop
pop
dec
and
aaa
insl
jg
test
inc
inc
bound
jmp
sbb
insl
aam
inc
fists
clc
adc
cs
loope
jle
ja
or
mov
clc
das
mov
pop
clc
aaa
or
pusha
stc
ffree
les
inc
or
push
or
sub
stos
adc
xor
outsb
add
stc
lcall
ljmp
and
ror
add
xor
fistps
clc
bound
jecxz
mov
cmp
mov
pop
adc
push
incl
add
stc
cmp
imul
into
lock
sub
pextrw
lods
pushl
jp
in
xor
jns
pop
outsl
sub
jae
in
sbb
push
ret
push
inc
lcall
sbb
pushf
xor
popf
mov
pop
adc
mov
and
xchg
sbb
mov
sbb
cmp
or
mov
xchg
lahf
mov
mov
or
and
sbb
ret
outsl
inc
push
int
adc
and
sbb
sub
flds
fdivrp
lcall
std
flds
xor
daa
mov
sbb
adc
sbb
or
add
or
mov
out
cmp
xchg
add
popf
clc
das
clc
fistpll
ljmp
int3
xor
sub
jmp
pop
ret
mov
cmp
inc
sbb
cmp
aas
push
sub
cli
and
scas
sub
mov
pushl
pop
xor
mov
sarb
inc
push
xor
std
mov
test
xor
adc
adc
jg
add
andl
iret
enter
add
sti
das
das
pop
and
call
std
testl
data16
hlt
fwait
sbb
mov
add
sbb
insb
std
pop
xor
dec
dec
aas
or
pop
mov
lret
xor
das
or
jae
sub
sub
jns
lock
lret
mov
lds
xchg
and
cmp
ds
testb
sarb
pop
sub
pop
mov
sahf
sub
cmp
popa
loope
mov
sub
fbstp
out
std
sbb
inc
rcll
test
pop
or
inc
or
sbb
jl
sahf
mov
dec
fmull
dec
lret
das
andb
jle
pop
test
loopne
sahf
les
cmp
mov
idivb
cli
inc
add
in
cld
frstor
add
stos
dec
jns
or
js
icebp
sub
mov
pop
aaa
out
bound
jbe
mov
push
mov
ret
dec
pop
mov
ret
xor
dec
cmp
sbb
ja
imul
xor
bound
mov
or
sub
add
mov
arpl
mov
aam
pop
loop
or
in
lds
stos
push
shlb
pop
mov
loopne
push
push
push
or
outsb
or
adc
and
dec
push
pop
dec
adc
inc
ss
and
clc
fisttps
mov
lds
popa
pop
push
aaa
into
sub
sbb
sub
sub
pop
dec
xor
push
adc
mov
fidivrs
addr16
std
jg
lock
mov
data16
mov
inc
xor
adc
jle
test
dec
adc
repz
jns
adc
or
push
aaa
jp
aad
out
and
sbb
arpl
or
mov
fisttpll
mov
imul
add
mov
or
cmp
sbb
loopne
sbb
mov
pusha
mov
ret
pop
jg
cmp
leave
xor
xor
push
outsb
adc
mov
repz
jae
mov
std
push
ret
jg
push
adc
scas
int
push
mov
test
fsub
icebp
or
pop
add
cmp
into
sbb
ja
mov
cmp
lahf
ds
adc
aaa
pop
clc
fldl
js
test
test
icebp
xchg
jne
cltd
mov
push
push
sbb
mov
in
mov
dec
dec
inc
add
inc
movsl
lock
dec
pop
cld
adc
xchg
insb
push
add
and
pop
fsubl
xlat
aas
mov
js
adc
lcall
mov
sbb
xor
or
test
adc
loopne
mov
jb
add
call
sub
icebp
shlb
or
and
sbb
fdiv
mov
lret
cmp
xor
push
jbe
push
mov
fwait
dec
mov
sub
fwait
sbb
sub
cmpsb
add
jg
cmpsl
test
std
daa
arpl
add
add
out
push
xchg
sarb
mov
jmp
hlt
fildll
adc
mov
nop
and
ret
sbb
in
jp
scas
xor
cmpsb
loopne
data16
push
dec
pop
sahf
sub
xor
xor
mov
lea
sti
scas
outsl
adc
aas
mov
shll
es
shrl
js
les
and
ds
loope
or
addr16
pop
shrl
sub
and
add
stos
imul
sbb
pop
mov
in
shrb
aaa
pushl
sub
sub
dec
and
lret
inc
mov
mov
das
xchg
or
sbb
mov
enter
fsub
imul
pop
rcrb
adc
or
jp
fwait
cld
pop
ud0
inc
add
in
add
out
cmp
dec
xchg
push
sbb
into
sbb
mov
mov
cmp
lcall
add
les
out
sbb
scas
jno
lods
fs
daa
mov
cmpsl
adc
mov
lahf
push
cmp
sbb
xchg
cmc
push
cld
or
cmp
xor
rcrb
decb
sub
jmp
inc
sbb
jecxz
pop
cwtl
mov
cmp
adc
inc
cld
jnp
xor
xor
jb
cmp
add
adc
jnp
notl
adc
adc
outsb
pop
jle
dec
rcrl
lock
mov
push
or
imul
mov
xchg
pop
scas
out
out
xor
sub
jno
sub
ds
cltd
mov
rcl
lods
loope
repnz
lahf
pminub
aam
sbb
push
rol
sbb
cmp
lock
push
ss
or
incl
inc
int3
xchg
les
or
into
add
ds
pop
insb
add
pop
mov
jo
pop
cmpsl
test
or
insb
ljmp
clc
sbb
jge
xor
ror
adc
push
mov
mov
pop
and
jle
rcll
fidivrs
lods
lret
pushf
sub
and
jp
push
and
insb
jle
andb
adc
push
popa
rcrl
jle
cli
mov
cmp
mov
dec
fadd
stc
add
fs
dec
sub
out
xor
push
outsl
cli
lock
add
cmc
cmp
inc
add
es
adcl
negb
pop
add
dec
cmp
pop
cld
jg
mov
pop
sbb
fs
add
lcall
xchg
and
jle
jg
shrb
sub
sbb
loopne
and
mov
iret
adc
imull
sbb
loopne
ja
aaa
jbe
push
xchg
pop
sub
outsl
and
inc
or
cli
jno
lods
or
loopne
sbb
dec
adcl
outsl
stc
add
outsl
jb
mov
push
mov
mov
mov
push
push
clc
sbb
ror
dec
call
mov
mov
adc
pusha
sub
xor
ret
das
insb
fistpll
ret
jmp
dec
mov
mov
inc
cmp
faddl
mov
aas
fisttps
movsl
in
adc
aas
aaa
call
and
mov
pop
add
jmp
mov
and
and
es
xor
mov
jae
cs
pop
fists
adc
test
rol
mov
jmp
ljmp
sub
pusha
or
jns
sub
sub
adc
call
lcall
inc
mov
loopne
scas
jns
pop
testb
bound
add
test
or
adc
sub
cmp
push
xor
inc
mov
imul
sbbb
xchg
insl
fs
movsl
repnz
cli
lcall
ljmp
mov
fists
xor
inc
xchg
fneni(8087
push
loope
clc
mov
inc
call
sbb
es
push
ret
mov
dec
push
ret
ljmp
cmpsl
stc
ret
insl
mov
inc
test
outsb
pop
lret
push
cmp
ja
fdivrp
xchg
mov
testb
insb
ror
mov
xchg
out
push
aaa
or
ljmp
leave
or
sbb
aam
jb
jle
pusha
adc
aad
loop
incb
hlt
push
or
sub
jg
dec
std
data16
push
and
jb
imul
push
in
inc
mov
and
outsb
push
hlt
aas
ja
clc
jae
or
push
mov
push
stos
sub
insl
add
data16
ret
lret
pop
push
push
jg
mov
das
jl
call
mov
adc
cmc
addr16
xor
push
pop
dec
mov
shufps
pop
das
mov
push
push
mov
rcrb
fs
jecxz
xor
sti
add
pushl
sbb
inc
mov
push
or
stc
and
lcall
jo
jecxz
cmp
inc
pushf
adc
popa
pop
test
movsb
aaa
sub
sub
mov
test
sbb
adc
mov
nop
push
xchg
pop
call
push
repnz
lret
adc
pop
daa
add
mov
aam
dec
pop
adc
in
dec
pusha
shrl
dec
cld
inc
mov
pop
or
pusha
pusha
adc
loope
sub
loopne
cmp
xchg
jle
pop
repnz
or
jb
push
js
mov
insb
xchg
mov
cli
cmp
sbb
ret
mov
cld
out
cld
inc
sti
shl
jp
mov
aad
hlt
dec
adc
call
rolb
jo
ret
dec
push
outsl
sbb
ja
adc
cmc
es
sbb
inc
adc
pop
filds
dec
decb
sub
ret
sti
clc
out
incl
cmp
push
or
or
loope
aad
inc
add
push
xchg
lods
and
mov
add
inc
mov
shll
jne
cmp
sbb
cmp
or
data16
push
xor
call
push
sub
xor
xchg
add
stc
sbb
icebp
cmp
xchg
shl
sar
mov
push
and
mov
cmp
popa
std
add
dec
add
push
sbb
sub
pop
fcoml
add
and
or
repnz
add
enter
mov
in
outsb
loop
xchg
or
dec
cld
das
in
or
es
das
jb
decl
stos
mov
or
jb
cmp
mov
ljmp
push
es
les
cmp
in
rolb
pop
dec
push
test
aaa
push
fdivs
fsts
xor
fwait
aad
adc
das
das
jmp
hlt
negb
rorb
cltd
ds
fucom
inc
scas
inc
sub
push
sub
icebp
aas
mov
faddp
ljmp
pop
adc
repz
lcall
add
push
cmp
adc
xchg
aaa
xchg
lcall
ds
and
es
sbb
jmp
cmp
out
std
fsubl
ss
add
dec
ja
push
dec
or
push
lret
xor
xor
mov
xchg
xchg
jle
andl
inc
push
addl
jl
cmpb
xchg
pop
aaa
xor
jbe
mov
mov
loop
or
mov
cld
ljmp
insb
xor
sub
cmp
incb
push
jge
dec
push
jne
bound
add
movsb
jo
das
cmpsb
cmp
cmpsl
or
mov
stc
scas
add
stc
out
mov
xlat
sbb
mov
xor
mov
jnp
pushf
mov
mov
push
or
loopne
shll
pop
insb
xor
mov
xor
cmp
mov
lret
mov
mov
ret
xlat
in
cmp
cmp
push
add
lret
pop
dec
std
movsb
add
icebp
xor
std
inc
aaa
cmp
in
scas
add
icebp
mov
add
inc
sarb
out
decl
or
lock
cmpsb
xchg
fisubl
test
sub
mov
test
mov
scas
jg
lock
scas
add
cmc
cltd
pop
cmp
jp
xorl
sarb
lods
push
hlt
clc
and
cmc
dec
add
pop
pop
pop
loopne
jmp
popf
pop
fcomip
xchg
adc
ds
lods
mov
adc
inc
adc
inc
adc
sbb
outsb
cmp
xchg
cmpsb
lahf
gs
data16
push
pop
lret
pushf
orl
cmp
lahf
pop
cmp
inc
cli
jg
push
imul
scas
xorb
cld
cld
popf
mov
mov
adc
test
xchg
push
pop
push
fsubrl
in
or
test
test
fildll
add
dec
scas
mov
shlb
sar
scas
adc
adc
cli
fcomps
push
add
inc
mov
jae
insb
jnp
lcall
jbe
movsb
mov
loop
arpl
sbb
stos
mov
jmp
mov
in
dec
push
cmp
adc
add
rclb
push
xor
rcrb
fiaddl
and
out
xor
decl
mov
adc
pop
daa
sub
cld
fisttps
loopne
cmp
push
sbb
pop
adc
pushl
mov
or
or
lret
dec
cmp
push
fdiv
add
enter
adc
stos
ljmp
daa
pop
fisubl
jg
in
jle
cmc
aas
fwait
out
in
pop
xor
decl
sbb
out
jbe
arpl
cmp
cmp
add
jge
shrb
adc
sbb
cmp
icebp
aaa
add
pushl
adcl
fmull
insl
push
pop
jge
or
incl
flds
push
xor
mov
jle
add
lcall
rcrl
lods
int3
out
bound
mov
iret
inc
stos
or
jmp
int
mov
loopne
dec
and
stos
sub
jmp
fcompl
jo
or
in
adc
sti
pop
add
scas
repz
stos
das
xor
or
or
insl
xor
mov
add
call
scas
popf
add
jle
lahf
cmp
push
incl
scas
in
maxps
out
mov
mov
fbstp
outsl
test
decl
cmpsb
mov
or
fstpt
sbb
fildll
dec
fisttps
sub
dec
fbld
dec
cmp
stos
push
aad
incl
mov
cmc
dec
mov
cmp
cli
decl
movsb
jecxz
jnp
xor
inc
cld
out
das
int3
pushf
cmp
nop
cld
lcall
rclb
jmp
repz
lret
add
cld
mov
add
mov
testb
lcall
shll
mov
pop
mov
out
jb
fcomps
mov
pop
call
lcall
xor
mov
mov
sbb
cmp
cltd
adc
roll
mov
xor
sbb
dec
adc
pop
in
lret
insb
std
leave
insl
mov
pop
xor
stos
or
in
mov
into
shlb
sarb
sti
xchg
test
xchg
jle
xor
cmpsb
pushf
mov
jo
or
paddusb
fistps
aad
cmp
out
add
outsl
sub
rcrb
or
jg
sbb
loopne
loop
mov
ret
jle
nop
and
in
xchg
ja
adc
pushf
dec
out
xlat
in
xchg
dec
ds
inc
das
cmp
mov
into
dec
pop
aas
lds
dec
mov
xor
lods
add
adc
mov
push
sbb
cmp
jg
movsl
popf
sub
cmp
mov
mov
mov
outsb
add
int
xchg
sub
fnstcw
cmp
pop
stc
xchg
mov
adc
cmpsl
xchg
adc
inc
decl
fwait
or
loope
fisttpll
fildl
std
pushf
imul
scas
movsb
enter
mov
push
flds
xor
call
and
jl
or
push
lock
mov
jecxz
push
add
lcall
jg
icebp
stc
dec
xor
out
test
jmp
rorl
add
jnp
push
pop
int
call
lds
inc
mov
xchg
ljmp
inc
and
aas
inc
lods
xchg
daa
add
sub
in
jmp
sub
fsub
xchg
cltd
out
aaa
mov
xchg
mov
adc
cmp
lcall
stos
or
fldcw
xchg
jl
icebp
sbb
xchg
out
out
mov
out
push
push
dec
incl
add
pop
mov
sub
idiv
decl
aad
and
rolb
lea
sub
sbb
cmp
or
sbb
cmp
subl
stos
add
incl
std
xchg
popa
or
and
data16
js
enter
cs
add
mov
adc
aas
std
rcrb
ljmp
ret
les
mov
pop
or
loopne
add
push
jb
mul
loopne
push
cli
addr16
lods
add
stos
mov
decl
pop
lcall
cmpl
jbe
mov
cltd
mov
push
add
negb
fistl
mov
pop
xchg
in
mov
fnsave
sub
jmp
clc
adc
push
sahf
rolb
adc
pop
sbb
sarb
nop
jmp
jmp
cwtl
sub
inc
rcll
sti
pop
cmp
xor
sbb
shrl
mov
scas
hlt
imul
cwtl
fsts
mov
sub
jmp
scas
out
ljmp
and
sarb
xor
jg
call
loopne
mov
movsl
ljmp
stos
mov
call
hlt
fmuls
or
mov
cld
pushf
out
lods
cmpsb
jl
lods
xchg
dec
xchg
scas
cmp
rcrl
mov
dec
xchg
push
rcr
add
aam
bnd
sub
nop
lcall
in
push
scas
push
scas
daa
dec
test
push
es
mov
fsubrs
incl
es
adc
add
sub
pop
sbb
mov
add
orb
or
cli
es
push
add
add
movsb
push
not
dec
dec
jmp
dec
loopne
filds
dec
push
adc
xor
push
push
pop
stos
push
cmpsb
and
mov
fisttpll
pop
adc
ljmp
pushl
in
mov
xchg
daa
divl
ja
cmp
inc
mov
stc
mov
cmp
sar
xor
rcrb
sbb
popf
xor
add
or
loopne
xchg
repnz
inc
mov
decl
pop
dec
mov
push
loop
popa
dec
inc
movsb
and
jge
stos
outsl
mov
cli
mov
add
rep
data16
cmp
cmc
addr16
mov
sbb
dec
mov
loope
ljmp
sbb
ficomps
pop
xor
or
clc
dec
popa
shll
lock
and
data16
xorb
dec
insb
xchg
out
fildll
shl
bound
mov
push
lock
sbb
sbb
xchg
les
sub
mov
outsl
cmpsb
shrb
add
cmp
sbb
cmc
pop
testb
dec
mov
pop
ret
ljmp
xor
push
sub
imul
add
in
or
adcb
jne
enter
jle
int
pop
je
jmp
mov
adc
lcall
pushf
pop
bound
data16
or
incl
xchg
lock
add
cmp
je
jmp
push
jmp
fwait
ret
in
mov
xor
in
mov
cld
decl
scas
jae
xchg
shl
outsl
in
sbb
inc
jg
add
daa
sbb
mov
dec
add
fisubl
cld
adc
pushf
test
adc
imul
outsl
jmp
mov
fdivs
and
cltd
rorb
sbb
out
push
sar
popl
cmc
pop
mov
mov
jnp
ffree
lds
aad
mov
mov
scas
add
outsb
cmpsl
xchg
mov
hlt
cli
mov
fmul
test
aam
addr16
mov
js
mov
fwait
icebp
call
add
cmp
shlb
ljmp
inc
add
outsl
add
enter
push
mov
jbe
sub
ljmp
mov
subl
jp
xor
notl
adc
add
xor
dec
aad
adc
or
jg
adc
ljmp
mov
cwtl
cmpsl
in
and
adc
adc
inc
in
xchg
sbb
call
cmpb
push
xor
add
aas
out
add
xchg
mov
push
aas
test
and
lcall
sub
xchg
inc
add
decl
cltd
mov
cltd
int3
pop
cmp
jg
jecxz
xor
ss
sub
xor
xchg
adc
add
lds
and
or
add
ss
dec
xor
mul
jg
pop
cmp
mov
mov
cmp
cmp
push
incl
cwtl
pop
incl
pop
dec
sbb
rcr
xor
ret
and
outsl
dec
xor
or
cmc
push
xchg
or
xchg
test
mov
mov
movsl
xchg
cmpsl
adc
add
mov
add
loopne
jns
jnp
fwait
mov
inc
fidivrl
push
push
pushl
sbb
add
insb
es
inc
push
mov
fbld
jg
aaa
loope
and
inc
xchg
pushl
fisubrl
mov
sbb
arpl
aaa
jbe
pop
les
cmp
imul
popa
loope
adc
xchg
dec
pop
sbb
jg
mov
mov
lahf
das
dec
in
icebp
push
push
sub
sbbb
sbb
xor
xchg
adc
add
dec
mov
call
cli
jbe
sbb
cmp
add
cmp
pop
mov
cmp
xor
pop
add
cs
jl
sub
push
jmp
jns
out
mov
push
cwtl
ds
adc
dec
mov
popl
subb
cli
cmp
mov
mov
xor
dec
and
xlat
push
jno
push
jns
shll
add
push
push
add
ret
push
and
push
dec
jae
fucomp
mov
jg
and
stos
sub
sbb
mov
and
xchg
cmp
mov
mov
mov
mov
cmp
pop
aaa
sbb
sbb
sub
jo
cmpb
loop
adc
dec
push
push
enter
test
mov
movsb
mov
xor
out
and
xor
xchg
jbe
pushl
and
jb
mov
push
lret
lods
mov
sbb
pushl
push
jg
fsubl
add
mov
lret
aaa
mov
mov
mov
mov
mov
push
in
scas
jo
xchg
mov
sub
decl
or
mov
cmc
push
xor
aas
xchg
sub
shr
fiaddl
mov
lret
mov
sbbl
inc
inc
arpl
rcrl
cmp
idivl
pop
xchg
jb
leave
daa
mov
ljmp
sbb
dec
and
push
adc
mov
cld
jge
adc
ljmp
mov
popf
inc
mov
hlt
or
cld
lcall
fisubl
sahf
pop
dec
lds
add
decl
dec
add
je
ret
add
add
dec
cmp
jecxz
or
push
pop
cwtl
pop
lret
loopne
inc
shlb
mov
xor
xchg
xchg
mov
into
cs
aad
cli
mov
add
adc
push
inc
scas
push
lods
dec
mov
jae
les
mov
jo
mov
adc
mov
cmp
insb
pop
ljmp
cmc
mov
ljmp
hlt
and
cmp
mov
decl
test
popf
adc
add
cmpsb
mov
scas
mov
add
pushl
lcall
clc
mov
pop
test
or
adc
dec
jmp
add
pop
pop
sbb
out
stos
cmpsl
lea
gs
les
cmc
lahf
or
jmp
das
lods
cmpl
inc
loope
cmp
stos
add
xchg
in
and
testb
and
fs
out
ss
add
lahf
mov
cmp
aam
pop
adc
cmp
mov
add
sbb
cmp
mov
lcall
lods
add
mov
add
mov
insb
rorl
inc
ret
push
xchg
adc
adc
cmp
fsts
cmp
xor
inc
movsb
mov
out
push
ljmp
mov
nop
mov
xchg
mov
pop
xchg
fs
xchg
es
hlt
bound
xchg
ja
and
test
dec
pop
mov
add
jle
adc
sbb
dec
cli
mov
sbb
mov
mov
arpl
call
adc
adc
leave
fisttps
test
xchg
fnsave
and
aad
push
into
pusha
inc
inc
xor
decl
mov
jg
pop
jle
xchg
idivb
enter
jg
fbstp
lods
daa
cmp
xor
ret
test
ljmp
call
jmp
pop
mov
cld
fistps
es
lcall
cmpsl
fldt
cmp
add
adc
cs
jmp
mov
int
mov
mov
xchg
sub
xchg
stos
and
push
cli
sub
jecxz
adc
repnz
push
xlat
ja
fisubs
pushl
adc
aad
add
mov
mov
or
loopne
xbegin
call
divb
clc
pop
push
pop
jmp
std
jecxz
cld
in
pushl
jge
sbb
or
rcrb
and
decl
sub
lods
data16
pop
xor
pop
xor
pop
add
xchg
cmp
add
icebp
pop
add
sar
mov
mov
xchg
mov
mov
icebp
cmc
dec
add
dec
cmp
push
pop
mov
outsb
xor
mov
ret
movsb
mov
aas
inc
xlat
push
and
vphsubbw
aad
mov
mov
divl
mov
dec
push
add
mov
mov
inc
ljmp
dec
jecxz
movsl
mov
shll
inc
sub
sbb
sbb
enter
dec
xor
outsl
and
sbb
fsubs
lret
jecxz
test
fildll
xchg
inc
cmc
sub
xchg
call
mov
adc
push
sar
int
loopne
adc
jle
pop
pop
cmp
push
pushl
dec
pop
push
ljmp
rcll
jno
add
call
mov
fmull
xchg
sahf
add
es
out
sub
mov
pop
mov
sub
cmc
sbb
fwait
fwait
aas
push
sub
add
fcmovb
cld
ljmp
fadds
jecxz
test
mov
inc
xchg
sub
mov
cli
cmp
movsl
sub
mov
cli
addb
cs
cmp
call
clc
and
adc
and
das
jmp
cs
cmp
call
sbb
cmp
shlb
and
sbb
pop
push
and
jl
cs
push
sbb
mov
and
sbb
bound
loope
test
xor
sub
cmp
jl
or
clc
ret
movsb
sub
adc
add
xor
cmp
push
pop
dec
hlt
push
call
dec
mov
xchg
mov
xchg
ja
ss
or
xchg
mov
mov
jg
jmp
xchg
dec
scas
sbb
mov
xchg
lods
aaa
dec
sub
icebp
ljmp
rcll
xchg
mov
xchg
mov
lcall
fdivrl
ljmp
fsub
mov
dec
push
add
outsb
fisubs
aas
cmp
xor
clc
mov
jnp
push
push
and
test
std
leave
dec
scas
inc
scas
add
jmp
push
popf
pop
lods
inc
shlb
xor
adc
adc
push
cld
movaps
mov
mov
mov
and
adc
fs
scas
inc
dec
mov
ljmp
or
inc
loop
push
insb
cli
test
xchg
aaa
cld
jmp
sub
dec
into
push
dec
das
xor
jmp
cmp
in
mov
lcall
mov
fcompl
dec
pop
in
int
fwait
adc
pop
aad
ret
pop
cmp
ljmp
mov
fprem
add
push
outsb
fnstenv
push
jg
std
inc
push
pop
dec
lret
test
rcll
add
push
ret
icebp
xor
ljmp
shll
add
xor
ss
insb
pushf
cmp
sti
inc
push
sbb
and
cmp
add
xor
cmc
gs
adc
addr16
jmp
inc
jns
imul
lcall
fmul
sarb
push
rorb
sbb
jl
push
test
incl
mov
inc
and
push
mov
mov
lock
inc
testl
or
add
mov
icebp
pushf
mov
aas
repnz
cld
cs
je
sbb
ja
mov
sub
popa
movsb
cli
fildll
or
sarb
stos
pop
hlt
fistps
mov
in
out
xchg
jg
sub
sbb
in
movsb
push
sar
in
inc
sbb
add
loope
jecxz
mov
pop
fucomp
sub
pusha
sub
outsb
sbb
popl
or
sar
mov
add
jp
jg
call
jle
sub
loop
jbe
sub
ret
jecxz
pop
and
hlt
push
cmp
bound
pushl
sub
data16
xlat
push
push
aam
xor
sarl
inc
fldl
in
adc
movsb
test
call
dec
inc
sbb
test
cmp
jp
cld
push
fwait
mov
jns
xlat
inc
loopne
dec
std
sbb
xor
gs
and
mov
cld
pop
or
pop
xor
sbb
cmp
push
add
scas
mov
push
sub
sbb
fwait
enter
push
and
sub
adcl
fxch
add
das
sub
jg
hlt
push
dec
ljmp
lock
adc
mov
inc
mov
ljmp
mov
adc
fdivp
jp
xchg
xchg
mov
into
and
push
test
idiv
subb
hlt
fucomp
cli
divb
cwtl
loopne
add
call
cmp
xor
cld
or
shl
lcall
mulb
xchg
lock
push
mov
mov
pushl
sub
sbb
pop
shl
sub
sub
aaa
aaa
test
mov
cli
lea
imul
mov
mov
cs
ljmp
sub
and
pop
les
add
xlat
add
lcall
ret
xor
jg
fwait
repz
hlt
incl
mov
sbb
ljmp
decl
cs
xor
cmc
les
or
ds
inc
mov
mov
imul
mov
push
xor
mov
test
lcall
mov
sub
and
and
add
sbb
xchg
mov
mov
popa
mov
incl
adc
mov
fisubrl
in
repnz
cmp
push
cli
imul
call
loope
movsb
cmc
pusha
lret
and
push
mov
out
add
jmp
enter
mov
dec
icebp
cwtl
adc
repnz
mov
cmc
enter
push
incl
daa
rolb
mov
or
fsubl
in
aaa
sbb
xchg
incl
sub
add
jne
or
loop
nop
ljmp
stos
mov
lods
add
cli
jmp
aad
adc
std
loopne
nop
ja
push
mov
les
lds
and
pop
out
pop
and
xchg
cmpsl
mov
sub
push
clc
ja
clc
xor
mov
lock
dec
pushf
dec
mov
sti
mov
imul
cltd
push
sub
les
jmp
shrl
mov
fimull
addl
in
add
icebp
add
pushl
rcl
inc
xor
adc
pop
xor
mov
addb
push
dec
cmp
sysenter
add
loope
sbb
fldl
pop
mov
jbe
cmp
adc
dec
xor
in
cs
mov
ret
cwtl
bound
and
sbb
adc
fmul
push
stc
add
ljmp
pop
push
lcall
jns
pushf
mov
movsb
movsl
or
mov
add
jmp
push
popf
mov
sbb
call
jecxz
add
push
dec
test
fnstcw
lcall
fsub
add
jecxz
add
mov
cmpsb
mov
outsb
cmp
mov
ljmp
mov
sub
or
xor
into
call
incb
cmp
out
sbb
add
cs
push
sub
lcall
pop
addr16
es
fldt
lock
scas
aaa
cwtl
das
adc
add
mov
movsl
or
jo
loop
mov
test
or
pop
push
cli
fimuls
pusha
pop
pop
pop
dec
sbb
xchg
mov
and
push
pop
cli
cli
mov
clc
cmp
lcall
das
and
dec
jmp
push
add
cmp
mov
inc
dec
cmp
jle
fxch
outsl
aam
xchg
es
fmul
cmp
or
mov
into
push
mov
and
jmp
mov
pop
jle
sub
loop
shlb
shrl
mov
push
sbb
jecxz
js
lcall
add
sbb
aam
push
mov
cltd
pop
mov
pop
bound
mov
xor
sbb
adc
ds
rclb
imul
in
dec
sahf
out
incl
and
mov
out
jecxz
cmpsl
testb
jg
call
aas
adc
mov
out
lret
mov
mov
cli
add
pop
or
sub
inc
js
jmp
mov
pop
call
and
xchg
out
sbb
rorl
jae
sbb
fmull
or
cmc
icebp
clc
xchg
test
cmp
sub
mov
inc
cmp
test
rorl
addl
test
mov
fildl
add
shll
cmpsb
cmp
test
mov
sbb
cmp
cmp
rcll
xchg
and
scas
mov
and
mov
cli
shll
inc
std
pop
inc
into
lea
cmp
xchg
hlt
inc
mov
loope
pop
popf
es
loopne
ljmp
testb
xchg
stc
loopne
out
sub
lcall
dec
push
xor
sbb
mov
mov
ffreep
bound
inc
push
pop
add
jo
enter
loopne,pn
mov
fidivl
xor
jl
add
call
pop
xor
icebp
test
dec
add
and
and
adc
jae
testl
and
or
lock
repz
mov
mov
dec
out
call
out
push
sub
rorl
cmp
adc
xor
xchg
inc
pushf
jl
mov
mov
mov
movsb
int
das
xor
cmp
cmpb
pop
mov
and
pop
jae
pop
sbb
sub
loopne
xchg
aas
icebp
scas
das
int3
adc
mov
out
xor
paddw
clc
dec
std
enter
frstor
fprem
scas
in
add
lret
sahf
adc
xlat
ss
push
adc
jmp
adc
and
or
mov
adc
cltd
cmpsl
jb
mov
push
icebp
in
mov
push
jae
adc
fdivl
out
test
leave
es
fs
sti
mov
aad
js
pop
push
cmp
dec
mov
filds
aam
xlat
xlat
add
test
outsl
push
data16
xchg
and
fnstcw
jp
jp
dec
jl
cltd
sub
add
das
and
xor
pop
jns
xor
add
mov
imul
push
and
jg
ljmp
fs
lcall
push
mov
mov
in
and
sub
ficomps
ficompl
push
dec
inc
enter
loop
pop
sahf
add
repnz
mov
add
mov
inc
ss
cmp
loopne
ret
popf
xchg
xchg
mov
decl
pop
sahf
sub
and
mov
jge
ljmp
push
jmp
pushl
addr16
les
inc
fadds
pushl
pop
aam
push
xor
mov
sbb
jmp
add
lods
ffreep
inc
push
cmp
jg
pop
jmp
jp
inc
pop
and
and
mov
push
sub
cwtl
test
mov
fcomip
inc
inc
in
ret
sub
xor
mov
jmp
test
xchg
cmp
std
cmp
scas
jle
in
popf
pop
xor
xchg
ds
sbb
mov
stos
cmp
andl
movsl
and
sub
cs
iret
adc
sub
fdivr
add
jg
lods
add
pop
lcall
cmp
xchg
loop
aam
ljmp
cmp
out
xchg
les
shr
subl
push
sub
inc
add
sti
mov
int3
mov
cmp
mov
aaa
dec
insb
cld
je
fcmovnb
push
and
inc
iret
icebp
lea
jecxz
inc
and
fwait
ljmp
clc
and
sub
mov
sahf
dec
lods
mov
js
adc
dec
call
sti
mov
dec
test
mov
lret
xor
inc
mov
xor
and
fildll
xor
sahf
mov
or
jg
fldl
dec
adc
mov
xlat
fistps
xlat
ljmp
xor
lahf
test
cld
incl
inc
dec
imul
jge
adc
stos
xor
and
sbb
cld
jle
sbb
push
jecxz
icebp
mov
cltd
dec
pop
enter
rcll
dec
lret
jle
adc
pop
in
mov
loope
pop
mov
mov
sbb
mov
sti
ljmp
das
bound
xchg
jmp
mov
mov
inc
push
mov
cld
sub
xchg
inc
or
sbb
cmc
push
aas
enter
add
inc
jns
jae
and
ja
mov
lcall
push
aad
test
cld
adc
daa
lds
xchg
fidivs
add
sub
xchg
inc
fimull
pop
jb
ficoml
xchg
imul
loop
inc
aaa
xor
pop
dec
dec
in
cmp
push
jne
add
sbb
mov
or
mov
incl
in
loope
sub
repnz
out
or
inc
pusha
out
jo
leave
mov
repnz
dec
pop
pop
stos
cs
ja
loope
sub
push
jmp
lret
fsubs
sbb
addr16
xor
adc
incl
fdivrl
sbb
inc
adc
fcmove
sahf
shl
sbb
inc
out
mov
or
add
out
xor
inc
or
repz
adc
outsl
jle
cld
inc
lods
icebp
bound
sti
movsb
lock
call
and
jg
push
outsb
push
sbb
sahf
dec
repz
imul
mov
xchg
inc
aam
add
hlt
inc
mov
jle
adc
incl
sub
andb
sub
lea
cs
insl
push
mov
pushl
outsb
stos
pop
jb
add
jge
dec
ret
daa
ret
inc
in
int
ljmp
inc
sar
dec
push
pop
jecxz
imul
stc
push
xor
xlat
sti
loopne
imul
ljmp
xchg
sahf
sub
push
pop
sub
arpl
testl
outsb
or
sbb
les
fs
push
rcr
pop
es
lock
rorl
test
add
outsl
test
sbb
jle
sbbb
clc
lcall
inc
outsb
adc
or
push
sub
lcall
push
bswap
aad
push
add
mov
inc
lods
aad
daa
hlt
cmp
or
pushl
shrl
jb
nop
adc
psubsb
mov
dec
fwait
mov
or
leave
test
decb
loopne
xor
leave
insl
pop
sub
out
push
mov
push
jne
push
push
add
cmpsb
mov
test
scas
xor
sub
or
dec
sbb
subb
xorb
aaa
add
andl
sub
sbbb
jo
mov
cmp
repnz
push
add
cmp
jbe
loop
dec
add
lock
sbb
ret
stos
mov
mov
dec
add
es
pushf
mov
xchg
mov
push
cmc
mov
inc
loop
call
jg
lods
inc
sub
aas
call
cld
mov
mov
sub
adc
jb
jae
or
sbb
add
cmp
les
aaa
and
push
loop
decl
pop
out
sbb
inc
mov
hlt
repz
nop
push
bound
jle
xchg
xor
insl
aam
jg
dec
push
adcb
loope
xor
pop
xor
aad
nop
pop
sarb
sbb
pop
jecxz
fyl2x
outsb
add
mov
mov
adc
push
mov
lahf
sbb
out
inc
sbb
mov
fucom
add
mov
fcomip
fnstcw
mov
inc
popf
pop
xchg
add
or
js
add
fisttpll
mov
or
xchg
push
mov
adc
pop
es
fbstp
xor
jl
push
negb
xor
scas
jbe
dec
xor
pop
call
add
repz
stos
aas
xor
pop
xor
xor
or
iret
adc
loop
in
cmpsl
leave
xor
jp
lcall
rolb
out
pop
rep
inc
xor
jnp
ljmp
add
outsl
sub
fidivs
add
sbb
nop
cmc
jg
jle
scas
sbb
loop
shl
push
notb
xchg
push
push
repnz
mov
mov
push
add
pop
outsb
aaa
mov
jge
inc
lahf
and
sbb
ds
lahf
cs
push
adc
ljmp
lods
imul
inc
dec
cmp
push
adc
push
sub
popl
js
cmp
inc
mov
or
adc
sbb
xchg
sub
sub
sub
std
fwait
jmp
cmp
mov
or
les
ds
rorb
out
mov
dec
mov
xor
cmp
adc
pop
adc
lea
add
lea
clc
and
sbb
ljmp
and
clc
xlat
lods
dec
cs
stos
jae
iret
out
mov
ljmp
pop
popf
xor
outsb
sub
jmp
xchg
test
dec
jmp
test
mov
cmc
cltd
lret
pushf
sbb
and
lock
fimuls
js
push
sub
inc
xor
andb
dec
ja
add
aam
ss
ret
cmp
cli
fwait
cmc
xor
insb
das
test
mov
xor
mov
lahf
xor
jo
push
jecxz
add
dec
leave
subb
es
xchg
imul
mov
xor
aad
jb
and
xor
mov
pop
lcall
push
lret
xchg
sub
int
cmc
lcall
js
push
leave
clc
aad
mov
mov
data16
call
sub
jl
sub
hlt
insb
pop
je
cld
mov
in
or
in
sarl
sub
pop
cmp
jns
clc
jg
sahf
adc
cmp
jle
adc
sub
fadd
xchg
and
jecxz
mov
lcall
adc
aaa
sub
mov
clc
ja
ljmp
dec
jne
push
push
es
sub
xchg
cmp
dec
xor
jl
or
jns
jns
sbb
popa
cmp
dec
std
fstl
push
add
or
filds
pushl
ss
movsb
add
cmp
cmp
ret
cmp
fldl
mov
or
sbb
or
lahf
adc
cs
mov
or
ret
lods
adc
mov
and
ss
call
inc
add
adc
loope
das
sub
inc
inc
sbb
pop
mov
ret
pop
in
push
shrb
sbb
fistpll
pop
push
add
pushf
call
mov
daa
add
pop
rcll
shr
cmp
push
inc
scas
jecxz
dec
xor
out
add
push
mov
mov
fdivr
pusha
jae
stc
loop,pn
dec
pop
lods
or
insb
movaps
pop
ret
xor
inc
sbb
and
and
push
fs
cmp
rcl
sar
push
xlat
shrl
push
ret
inc
fucomip
dec
adc
jae
sbb
nop
sub
out
inc
add
xor
jg
movsb
and
add
and
stc
scas
ret
sbb
lods
fistl
mul
adc
dec
xor
adc
daa
sbb
mov
sub
sub
push
push
dec
jle
arpl
hlt
sub
inc
mov
call
fcmovb
stc
int3
xor
cld
shrl
lods
cmc
sbb
int
or
inc
add
dec
fstpl
mov
mov
repz
add
mov
push
adc
mov
add
inc
cmpsl
push
push
insb
mov
add
push
loope
shl
jb
adc
or
pop
push
push
clc
adcb
sub
inc
push
ds
mov
pop
lcall
out
and
int3
adcb
jb
loopne
lock
insl
clc
xchg
and
test
and
out
adc
pop
cmp
out
cmp
mov
sbb
xchg
orl
call
inc
sub
sahf
arpl
jmp
aam
sbb
pushl
or
xor
sub
xchg
les
jl
cmp
xchg
pop
movsl
mov
adc
lock
adc
jne
daa
xor
fnstsw
cmp
sbb
mov
call
add
or
dec
lock
mulw
adc
sti
ljmp
bound
sahf
maxps
shrb
pop
add
sub
mov
outsb
xchg
lcall
mov
push
adc
cmp
int3
fbld
fldl
insb
push
cmc
repnz
cs
push
call
cmpsl
xor
cmp
ja
cmpb
or
addr16
jg
add
aam
sbb
xor
xor
xchg
aam
push
cld
push
and
popa
and
xchg
ljmp
arpl
add
in
decl
and
lock
jmp
pop
pop
xchg
sbb
sbb
mov
dec
xchg
or
adc
or
stos
jne
mov
lcall
dec
test
out
push
pop
xchg
add
push
lods
fcompl
int
xor
rol
jmp
dec
xor
add
push
cltd
das
pop
ret
adc
dec
enter
cli
xlat
testb
xchg
dec
mov
cmc
or
lcall
gs
daa
xor
add
mov
loopne
out
xchg
pop
or
add
inc
shrl
inc
sub
push
jmp
imul
jg
or
push
rorb
or
add
daa
push
pop
mov
jns
lret
packuswb
sbb
mov
decb
jp
cld
dec
xor
jle
xchg
cmc
fildll
imul
add
push
sbb
je
aad
xor
shll
sub
pushf
imul
out
jg
mov
mov
outsl
sbb
int3
and
nop
mov
jge
ja
pushf
sti
test
lds
in
pop
pop
rorb
and
mov
push
clc
xlat
mov
scas
jg
test
pop
int
mov
popf
xor
push
cmpsb
xor
mov
adc
dec
mov
in
lret
jl
and
mov
dec
cld
lcall
fiaddl
mov
lret
push
movsb
pop
adc
xchg
scas
cli
jg
sub
push
xlat
lods
sub
aaa
cltd
outsb
adc
fcomip
pop
mov
jl
fsubs
hlt
incl
pop
cmc
pusha
bound
mov
fdivl
enter
mov
lods
ljmp
jecxz
fcmovb
add
jg
xchg
fdivs
xchg
adc
xor
ljmp
roll
fisubs
dec
hlt
cmp
cmp
add
aaa
andl
mov
jne
push
lahf
popl
loop
ljmp
push
mov
mov
jb
push
call
in
cs
fnstenv
adc
push
mov
stos
push
add
mov
clc
das
jge
mov
sub
inc
xchg
jle
clc
cld
aas
or
pop
roll
adc
iret
or
addl
xchg
imul
lock
add
sbb
scas
and
cli
andb
or
icebp
daa
cmp
cli
dec
jecxz,pn
call
stc
push
gs
fcomip
call
jbe
fdivr
sub
or
jl
and
fsubr
scas
push
popa
xchg
sub
adc
rorb
std
xchg
add
pop
sbbb
sbb
stos
outsb
or
mov
mov
adc
jg
xor
leave
add
push
add
jmp
lock
sbb
mov
cmp
fwait
add
out
movsb
hlt
incl
xchg
cmp
lea
adc
push
rcrb
es
inc
mov
and
subl
adc
xor
mov
out
pop
insb
push
push
xor
adc
mov
movb
push
dec
pop
fsubrl
cli
stc
clc
adc
mov
hlt
jmp
add
or
and
aad
xlat
mov
stc
xchg
or
fimull
add
cmp
cld
pushl
loop
in
jl
daa
sbb
jae
sbb
or
cmpsb
enter
fisttps
in
and
or
vunpcklps
push
ficompl
daa
loopne
adc
pop
push
call
sbb
jecxz
jecxz
nop
mov
das
cmpsb
lcall
clc
push
jne
sahf
outsb
pop
xor
data16
xchg
cld
pop
sub
sub
cli
cmp
fwait
pushl
fstp
sbb
push
pop
xchg
cli
adc
mov
jg
push
rclb
sub
movsl
rep
cltd
pushf
add
cmpsl
jbe
inc
jbe
adc
jmp
decl
sub
in
filds
adc
fdiv
decl
push
push
fwait
loopne
add
int
imul
std
roll
out
lret
push
ror
pop
adc
movsb
xchg
push
fs
xor
stos
push
sub
xor
out
mov
mov
inc
xchg
jmp
pop
fsts
incl
dec
or
jmp
jg
outsb
xor
call
pop
in
mov
xor
bswap
or
push
ljmp
outsb
and
fdivrs
push
cmp
das
push
repz
ds
add
mov
mov
mov
mov
nop
xor
dec
sub
lcall
decb
jnp
int3
gs
insb
lcall
xchg
mov
call
cmp
xchg
inc
mov
sbb
sti
outsl
sub
add
adc
pop
call
loop
sbb
adc
imul
mov
push
test
std
out
aad
mov
jl
pushl
mov
mov
fwait
push
call
sub
jg
adcb
insl
scas
dec
cmp
xchg
out
mov
cmpsb
inc
xor
lahf
fbld
or
rcll
fnstcw
sub
sarl
in
incl
icebp
push
clc
arpl
aad
dec
pop
mov
mov
je
cmpsb
pushl
loope
push
jo
cmp
cltd
mov
fwait
dec
shlb
call
jmp
jp
sub
aas
fmuls
int
cli
ror
push
or
pop
rcr
test
call
and
cmp
inc
incl
enter
mov
mov
aam
into
cmpl
push
cvtps2pd
cmp
mov
fnsave
sub
xchg
dec
cmp
es
adc
out
xor
js
jbe
sarl
mov
icebp
mov
adc
jle
mov
push
sub
jne
movsb
push
sub
pop
ljmp
fists
fisttpl
and
test
clc
adc
xchg
daa
js
rclb
incl
push
sbb
nop
sbb
pop
push
ds
jno
and
incl
sbb
cmp
cmp
sub
mov
cmp
loopne
decl
loop
lahf
popf
push
mov
decl
je
jp
inc
nop
mov
adc
adc
add
or
cs
inc
nop
arpl
mov
rolb
ljmp
scas
mov
cmp
leave
xor
jo
mov
hlt
jns
lcall
jecxz
xor
cs
test
lea
xchg
mov
movsb
sbb
mov
cmp
mov
sti
sub
ret
xchg
xchg
je
inc
cld
outsb
cmp
sub
pop
ljmp
add
roll
sbb
inc
sub
mov
dec
pop
cmc
adc
mov
or
cmp
pop
inc
cld
lds
rorl
push
clc
inc
ret
adc
imul
sbb
je
push
sarb
push
cmpsl
mov
ret
rolb
flds
decl
mov
cmp
ret
stos
dec
xor
subl
jp
cli
scas
xor
add
jnp
xchg
shll
lret
lods
repz
mulb
and
pop
mov
clc
clc
and
xor
pop
inc
dec
push
aas
out
into
nop
pop
adc
xchg
scas
pusha
shlb
ljmp
mov
add
adc
cli
xchg
dec
or
lock
mov
int
mov
fcompl
add
ja
repz
dec
std
jge
adc
adc
sbb
mov
adcb
dec
push
xchg
clc
fwait
mov
push
dec
add
and
dec
jecxz
dec
xor
inc
rorl
mov
sbb
fwait
dec
mov
lret
pushl
xchg
scas
jns
inc
sbbl
mov
and
or
and
jle
in
push
mov
icebp
mov
ret
xchg
or
mov
lret
cmp
fnsave
lods
aaa
add
test
loop
push
iret
lea
pop
cmpl
stos
mov
cmp
clc
es
adc
iret
push
jmp
in
pop
in
jle
sub
mov
fwait
adc
jg
movsl
loope
daa
clc
adc
pop
ss
dec
and
repnz
mov
ret
mov
and
cmc
repz
incl
fistl
xor
js,pt
std
xor
jb
ret
lods
mov
push
decl
pop
fcomps
rcrl
adc
scas
mov
xchg
jbe
outsl
push
test
adc
sti
cmp
cmp
stc
adc
pushf
lods
mov
mov
cmpsb
pushl
add
in
xchg
cmp
rcrl
push
mov
call
push
and
add
lcall
mov
xchg
lea
xchg
cmp
mov
sahf
or
xchg
push
roll
mov
dec
cli
movb
pushl
in
movsl
pop
adc
cltd
pusha
cmpsl
push
in
daa
sub
cmpsl
jle
xchg
aam
pop
xchg
mov
lds
lcall
test
xchg
xchg
mov
lods
sbb
daa
roll
clc
pushl
lea
xchg
pavgw
shll
adc
test
push
mov
sub
jg
adc
mov
mov
loopne
add
jmp
or
or
mov
mov
ret
mov
bound
aaa
adcl
and
add
jecxz
cmp
clc
decl
xchg
add
fidivs
jl
and
mov
push
mov
das
incl
decl
mov
sti
lret
pushl
mov
pop
popa
xchg
xor
stos
cmp
adc
lods
in
jmp
inc
xorb
daa
pop
sbb
and
add
jp
in
sbb
mov
or
add
ljmp
aam
add
and
cmp
fistpl
fisttpl
jge
add
ds
fildl
incl
jmp
hlt
in
repnz
push
in
xor
hlt
or
inc
out
push
and
imul
add
jmp
xor
mov
sub
mov
stos
imul
jge
es
xor
insl
cld
aas
push
dec
and
pushfw
push
xchg
pop
gs
ds
add
mov
jle
es
rcr
test
lret
int
mov
lods
sub
and
sub
fwait
mov
add
push
jmp
cwtl
mov
cld
ljmp
dec
cbtw
fstl
imul
mov
mov
test
cld
cmpb
mov
fbstp
mov
das
daa
mov
icebp
dec
mov
enter
mov
add
das
or
pusha
in
mov
adc
xchg
or
fldt
in
cmc
lcall
mov
test
ljmp
mov
and
lcall
push
repz
std
pushf
int
ljmp
shlb
and
push
push
pushf
cmp
sub
push
stc
sahf
or
sub
clc
push
mov
pusha
mov
mov
push
sub
outsb
cltd
mov
iret
xchg
jg
movsl
int
int3
out
mov
movsb
shll
decb
fcmovb
inc
adc
xchg
mov
lcall
loopne
in
mov
add
ss
and
and
mov
push
inc
cmp
and
mov
mov
pop
xchg
pop
sub
add
cmp
or
addb
dec
adc
movsl
xor
decb
pop
xor
out
inc
pop
dec
mov
sbb
or
and
mov
decl
xchg
jge
jb
and
stos
sub
adc
or
shrb
ja
mov
adc
movsb
or
inc
push
and
add
xor
jg
mov
push
rclb
mov
decl
jae
outsb
decl
dec
adc
stc
out
jns
pop
xor
sti
cmp
popf
or
ljmp
repnz
xor
repz
sahf
and
pop
sbb
sub
ds
out
stos
and
cmpsl
hlt
jmp
jno
or
lahf
jo
sub
pushf
push
in
push
dec
cli
cmp
orl
sbb
sbb
xchg
leave
push
adc
cs
push
aad
and
pushl
mov
xor
pushf
imull
cmc
mov
sbb
jecxz
xchg
ss
mov
outsb
sub
cmp
pop
cmp
push
mov
ljmp
loop
and
and
ss
adc
inc
ret
and
mov
fnstsw
sbb
lahf
ret
mov
xor
sarb
mov
mov
inc
addl
jbe
std
fnstsw
mov
mov
nop
mov
mov
int
nop
outsl
or
outsb
out
int3
fisubrl
or
lahf
jecxz
fwait
jo
xlat
lahf
add
popa
and
or
cltd
xor
std
inc
repnz
jo
std
pushl
xchg
inc
jl
xchg
dec
sub
fbstp
xchg
sbb
pop
adc
push
mov
les
bound
shlb
pop
aad
sub
test
rclb
adc
repz
jb
daa
adc
xlat
rolb
or
loop
adc
xchg
mov
cmp
aad
fsubrs
dec
mov
ljmp
jecxz
and
cwtl
or
adc
out
aam
and
loop
dec
and
fcmovnb
addr16
push
and
cmpsb
jmp
movsb
sbb
and
adc
popf
pop
ret
mov
lcall
stos
mov
cmp
push
imul
pop
cld
out
dec
sbb
in
fmul
imul
ja
sysexit
cmp
jbe
mov
push
adc
cld
fildll
mov
aad
fdivs
add
add
and
repnz
cmp
or
jo
aas
cmp
jmp
cmp
outsb
scas
aaa
iret
mov
loopne
dec
inc
sbb
adc
jg
sub
mov
fsubl
cmp
inc
push
test
das
test
clc
mov
add
filds
mov
or
mov
inc
push
push
pop
movsl
xchg
lock
lock
mov
add
js
adc
aam
add
adc
jge
mov
and
pop
imul
sub
cmp
in
xor
push
fimull
fadds
push
sub
push
sub
out
test
sbb
mov
cmp
pushl
popf
daa
insl
sub
cmp
das
fdivl
jnp
pushf
out
fwait
ja
ret
mov
cltd
xor
jle
pop
fucomip
shrb
outsb
inc
dec
mov
adc
ret
xor
xchg
jle
adc
ja
mov
add
out
xor
lcall
outsl
lahf
mov
negl
rorl
cmpsb
or
mov
dec
jge
cld
mov
add
add
add
xlat
adc
lcall
pop
adc
stc
clc
xlat
push
rcrl
ja
ja
or
inc
mov
int
add
cwtl
rcrb
stos
mov
fnstenv
das
cld
ffreep
mov
movl
mov
pop
and
pushl
adc
les
hlt
mov
incl
loopne
ret
iret
inc
dec
cmp
mov
mov
inc
insl
xor
push
in
xor
shll
repz
lcall
dec
fildll
incb
int
cld
push
cmp
rcrb
loop
xor
jmp
mov
das
lods
das
mov
adc
jbe
ljmp
jge
outsb
fnstsw
outsl
fsubrp
and
cmp
fwait
inc
dec
cmp
popf
sbb
filds
cld
es
and
cwtl
adc
and
jg
inc
sub
cmp
hlt
pop
pusha
cmp
mov
sub
jg
sahf
repz
sub
sti
sub
jp
pop
ja
ljmp
test
out
push
nop
push
aad
xor
sahf
mov
call
cmpl
mov
pop
inc
add
mov
cmp
add
incl
mov
and
pop
sbbb
ljmp
or
adc
pop
xor
repnz
adc
mov
mov
pop
aad
icebp
cmp
subl
mov
dec
pop
jno
pusha
mov
fcoml
loope
orb
call
xorb
adc
sub
movups
cmp
sub
dec
ds
punpckhwd
es
mov
es
sar
ljmp
cvtps2pi
fwait
sbbl
nop
into
imul
mov
mov
ljmp
adc
xor
xchg
mov
dec
jge
add
mov
cltd
xlat
inc
xchg
pop
or
icebp
jmp
xchg
sub
fcmovu
push
sbb
sub
sub
stos
inc
jecxz
jg
or
rcr
and
cltd
mov
lcall
pop
call
mov
cwtl
ja
dec
lea
or
and
and
ficoml
int
sbb
mov
test
add
pop
inc
xor
ret
stos
xlat
out
cmpsb
cltd
std
cmp
nop
in
ret
pop
mov
fcoms
and
jg
push
sbb
loopne
mov
std
xor
pop
add
outsb
ja
bsr
and
hlt
jg
not
cmp
ljmp
xor
cltd
outsl
sub
sahf
bound
std
int
adc
xor
add
insl
and
outsl
sbb
fdiv
ret
js
cmpb
pop
xor
xor
scas
cmpsb
or
xor
mov
out
aam
les
cmp
inc
cmp
fs
pop
push
and
cmp
data16
lahf
sbbb
sti
push
cmp
call
xor
out
mov
lcall
push
pusha
cmp
inc
sti
call
es
sub
stos
int
addr16
call
cs
and
push
push
sub
mov
das
and
xor
rcll
lcall
or
sbb
sub
mov
lock
mov
pop
push
add
dec
push
and
sbb
pushl
push
or
pop
inc
insl
lret
in
or
inc
aad
loope
into
in
sub
pop
push
hlt
xchg
fldl
shr
jl
mov
fsubrs
loopne
cli
aas
jbe
sub
mulb
cld
fildll
lock
sbb
xor
aaa
fdivl
nop
call
and
and
enter
sbb
push
insb
fdivrs
push
pop
aaa
sbb
push
fwait
inc
push
ss
scas
movsl
hlt
mov
mov
ret
orb
pushl
add
add
cmp
fstpl
shlb
sbb
test
std
lcall
popa
pushf
and
out
adc
and
in
mov
dec
push
adc
push
out
sahf
int3
push
hlt
addb
sub
out
test
or
hlt
xchg
fmulp
sbb
xlat
mov
cwtl
inc
adc
xor
les
sub
out
adc
test
out
jle
iret
loopne
movsl
adc
icebp
or
mov
ljmp
ljmp
adc
push
fdivrs
pop
cmp
pop
insl
loopne
sbb
sbb
pop
mov
loopne
mov
gs
mov
lock
outsl
adc
mov
jecxz
in
aaa
aad
cs
popf
es
std
ljmp
cld
mov
sub
xor
jnp
xchg
mov
icebp
scas
shr
jge
out
xchg
xor
mov
sbb
mov
out
cmp
inc
or
data16
add
lret
push
es
aad
lahf
push
sar
push
cwtl
repnz
jl
je
leave
lahf
inc
popl
lcall
mov
jle
rcll
ja
jg
rcll
push
ret
sub
push
fbld
orl
pop
pop
cmp
insb
pop
mov
das
stos
lods
cmp
cmpsb
jl
sbb
insl
dec
push
mov
pop
push
adc
xchg
pop
push
scas
mov
mov
pusha
pop
popa
push
mov
sub
push
sti
push
sub
xor
xor
cwtl
mov
jnp
sub
roll
adc
sub
push
xor
or
cmp
jb
fs
lcall
xchg
pushf
insb
stos
pushf
aas
out
jl
mov
cmp
inc
call
fdivrs
test
inc
cmc
push
jbe
clc
mov
sbb
inc
test
lock
cmp
shl
cmp
mov
jg
movsl
out
ss
sub
cmp
add
lret
aaa
and
aaa
loopne
stos
mov
dec
jge
iret
jecxz
adc
or
cs
dec
inc
sbb
js
lret
inc
femms
call
sbb
adc
push
adc
mov
adc
inc
popf
jmp
inc
lcall
xchg
and
stc
cld
xchg
sbb
ljmp
pusha
adc
bound
rcrb
pop
fldcw
push
test
loope
push
lods
sub
push
adc
and
cmp
cmp
adc
add
cmpb
cmp
ljmp
jl
pop
insl
insl
push
xchg
je
inc
xchg
subb
xchg
dec
scas
mov
clc
decl
mov
push
je
push
out
mov
jbe
fildll
jmp
xchg
pop
mov
enter
pop
adc
or
cmp
sub
ss
jns
ljmp
jno
xorb
cmpsb
lcall
or
ljmp
movsb
out
out
enter
mov
stos
rcrb
fidivrl
incl
sub
add
mov
aaa
mov
ss
xlat
xchg
ficoms
call
mov
or
add
cmp
test
cmp
xor
sbb
jg
icebp
mov
les
mov
pop
rorb
push
nop
shlb
sub
mov
mov
jg
test
pop
hlt
cmpsl
stc
pop
pop
aaa
scas
mov
push
inc
xchg
push
sbb
imul
mov
cmp
mov
cltd
mov
ja
push
outsb
lods
add
dec
add
xchg
xchg
push
sarl
xor
and
repz
push
dec
jecxz
repz
pop
push
test
lods
pop
sub
outsb
sbb
clc
decl
mov
cmp
stc
aas
add
push
sbbb
xchg
fwait
mov
xchg
or
incl
inc
jns
cmp
jne
pop
repnz
cwtl
mov
cwtl
xorl
popf
mov
das
xor
clc
push
mov
lock
call
lahf
fidivrs
out
and
int3
data16
add
cli
incl
push
mov
out
call
sub
xchg
aad
sbb
push
mov
in
mov
fwait
push
stc
stos
sub
push
jmp
adc
and
repnz
popa
ret
jne
and
out
mov
addr16
mov
xchg
roll
cmpsl
jle
popa
dec
mov
push
dec
xchg
std
mov
icebp
cmp
xchg
push
cmpsl
pop
hlt
or
xchg
and
xchg
add
dec
mov
mov
call
mov
lods
cmp
add
stos
mov
ljmp
faddl
dec
xchg
pop
xchg
xchg
sti
adc
enter
inc
mov
fnsave
push
jge
fldt
adc
and
mov
call
xor
push
idiv
push
decb
call
and
lods
mov
aad
xchg
push
scas
jnp
ss
pop
decl
fstl
int
jp
sbb
inc
nop
mov
sbb
scas
cmp
dec
hlt
ljmp
mov
push
das
jno
mov
fists
insb
or
popa
jns
daa
mov
scas
add
ja
cmc
addr16
data16
pop
bnd
cmp
or
mov
int
int3
inc
ja
adc
lea
cmp
psubd
mov
jg
test
cmp
rorb
xor
idivb
lcall
scas
xor
in
lock
sub
dec
mov
rol
ja
pop
popa
setg
jnp
out
cmp
push
push
or
ds
and
adc
or
or
jns
mov
and
enter
pop
dec
lods
mov
loopne
lods
add
loope
fisttpll
aad
shll
jae
inc
mov
inc
add
fs
sbb
loop
xchg
div
xlat
out
push
fidivl
add
mov
movsb
ss
out
aas
incl
stc
movsl
dec
xchg
xor
cmp
adc
lock
test
xchg
fadds
push
mov
xchg
jg
fiadds
push
adc
inc
orb
xchg
pop
mov
dec
xchg
imulb
stos
lcall
mov
fcmovne
das
jae
xchg
jne
jnp
xlat
stc
xchg
fcoml
mov
jmp
mov
push
adc
or
sti
or
and
call
mov
sub
in
pop
sbb
lock
clc
cs
roll
sbbb
lock
movsl
enter
cmp
addr16
add
mov
mov
and
xor
in
or
and
cmp
and
fstps
push
jl
xchg
incl
push
mov
add
xchg
cli
add
mov
lcall
inc
sbb
or
and
xlat
sbb
cmp
jecxz
rcl
sbb
es
adc
dec
loop
sub
insl
xor
into
add
mov
into
mov
and
jae
push
popf
sub
not
mov
mov
std
jmp
stos
sub
xchg
xchg
pop
std
xchg
jbe
idivl
inc
test
xchg
aas
dec
cld
mov
pop
lret
mov
leave
add
jp
stc
call
aad
icebp
out
int
aad
pushl
insl
jp
sbb
push
in
push
adc
mov
xchg
inc
adc
push
aam
sub
mov
jns
loopne
cmp
fcmovnbe
xlat
jae
sub
sub
jle
testl
mov
scas
ret
inc
dec
mov
jg
out
fucom
hlt
int
push
aad
adc
adc
cmpsl
sarb
jmp
gs
xlat
fiaddl
insb
repnz
mov
sub
bnd
clc
ret
adc
xor
ja
call
cmp
bound
rcr
std
xor
ljmp
mov
dec
mov
fnsave
out
mov
adc
jg
call
ss
xchg
pop
sub
inc
cmc
xor
and
orb
stc
xor
es
daa
ret
cmpsb
push
xor
jmp
incl
clc
pop
mov
test
out
xchg
xchg
xchg
xor
daa
and
add
xor
fsubrl
add
out
adc
lods
push
les
or
sub
and
cmc
push
inc
int
cmp
fucomp
xor
jns
xchg
aad
mov
jg
lahf
dec
ret
aas
ja
fnsave
mov
jge
lock
jns
push
out
mov
jb
call
xchg
jmp
sub
jbe
or
pushl
mov
imul
jae
repz
int3
mov
outsl
add
pop
sbb
inc
cmp
pop
pop
and
loopne
ret
xchg
jp
cli
fidivl
cmp
ret
dec
xchg
clc
cmp
std
pop
mov
jmp
cmp
xorl
mov
incl
jae
add
movsl
fwait
pop
jb
addr16
leave
loop
mov
leave
popa
jmp
call
adc
and
outsl
insl
push
inc
sbb
les
ja
and
xlat
mov
into
mov
loopne
fildll
mov
test
mov
mov
fnstcw
shlb
divb
inc
fnstsw
lret
fistps
int
into
cmp
aad
divl
sbb
xchg
ja
mov
lcall
dec
inc
cmp
push
cmp
jl
push
jns
adc
jno
inc
pop
xchg
jbe
and
call
ret
jns
sub
jge
lahf
jecxz
pop
sar
mov
mov
adc
dec
sar
mov
shlb
popa
sbb
daa
icebp
cmp
cmpsb
add
in
jne
and
adc
push
inc
jae
xchg
sbb
orb
fbld
lcall
ljmp
call
xor
mov
jmp
jle
sub
push
insl
xor
ret
and
sti
push
aaa
loop
ljmp
out
push
icebp
and
mov
js
mov
fmull
jle
rcll
flds
mov
sbb
pusha
push
nopl
mov
or
out
es
dec
pop
pushl
out
rcr
push
cmp
sbb
adc
ja
add
lret
insb
adc
aam
push
outsb
adc
sti
mov
sub
add
adc
mov
out
jg
dec
adc
sub
ljmp
push
loope
jecxz
into
and
call
fcomip
and
sub
and
add
mov
call
push
push
jne
jmp
sbb
dec
xchg
or
icebp
lcall
pop
mov
je
mov
pop
ss
mov
push
jecxz
pop
xchg
lcall
es
mov
dec
pop
ret
and
mov
push
call
ja
push
add
or
xor
xor
cs
cltd
clc
incl
call
sub
dec
mov
stos
cli
pushl
nop
xchg
cwtl
icebp
inc
mov
sub
lcall
lods
scas
cmc
fwait
ljmp
xchg
fcoml
imul
repz
pop
mov
insb
mov
and
pop
mov
sbb
jo
decb
jg
cli
insl
xchg
adc
movsl
decl
add
xlat
dec
adc
jae
movsb
mov
mov
mov
xchg
sbb
mov
xor
or
sbb
mov
ljmp
test
and
movsl
addl
scas
mov
fisttpll
test
mov
nop
sar
and
jns
xchg
jecxz
scas
pop
arpl
mov
movsl
leave
push
mov
push
mov
lea
adc
push
jle
movl
aad
cmp
sbb
hlt
add
and
pusha
dec
mov
ss
dec
in
jbe
mov
dec
xchg
xchg
xchg
lods
mov
stos
cli
pop
fdivrl
push
pop
dec
pop
jne
enter
push
mov
fiaddl
push
dec
fsubrl
cwtl
flds
dec
data16
ljmp
in
in
hlt
push
mov
sub
sbb
cmpsl
lret
mov
jg
mov
loop
fiadds
sbbl
cmp
jge
mov
fcompl
xchg
push
mov
mov
add
cli
add
out
ljmp
pop
test
add
jnp
xchg
push
and
in
cmp
dec
test
xor
mov
adc
jge
push
lea
leave
mov
sbb
and
loopne
fisubrl
ror
sub
outsl
aam
add
mov
call
loopne
mov
inc
add
xor
or
ss
cmp
pop
push
cmp
sbb
xchg
call
adc
loopne
lret
bound
or
adc
out
adc
cmpsl
add
icebp
push
fwait
dec
or
adc
add
mov
pop
pushf
xchg
sbb
push
adc
lret
sbb
nop
cmp
rorl
xchg
fbld
mov
push
pop
xchg
aam
or
lock
xchg
clc
or
pop
xchg
dec
repnz
shl
scas
cmp
out
ljmp
and
sbb
sahf
popf
andl
inc
cmp
shrb
push
ljmp
push
scas
jb
in
sti
push
mov
lods
dec
cli
ja
jmp
mov
and
sbb
dec
rcll
push
adc
in
pop
or
addb
or
jb
sar
jg
std
dec
insb
mov
mov
push
das
pop
jge
xor
dec
shlb
push
test
cmp
lret
push
fstpt
push
ss
mov
addl
ljmp
ss
push
enter
es
inc
imul
add
mov
xor
mov
xchg
popa
sbb
mov
mov
mov
stc
jl
push
push
jecxz
pop
pop
ret
movsb
push
mov
jg
cld
filds
into
inc
pushl
adc
cmp
test
sub
xchg
mul
lock
push
mov
cltd
inc
adc
les
pushl
cmp
jmp
jnp
xor
es
cmp
sbb
movsb
roll
jno
or
sbb
cmpsb
mov
outsb
or
cwtl
scas
cwtl
or
mov
int3
mov
leave
jno
cld
mov
aam
fists
idivb
xlat
jecxz
int3
insl
push
std
push
jecxz
dec
mov
inc
aad
or
test
pushf
xchg
cmp
lods
cmpsl
mov
test
mov
inc
decl
add
and
pop
adc
scas
mov
popf
sub
mov
jl
lock
cmp
pop
fdivrl
mov
xchg
mov
dec
es
lock
xchg
push
add
mov
test
mov
cmp
add
cmp
sahf
jne
loopne
ljmp
ja
fcomps
leave
add
aad
mov
rorb
insl
std
mov
lret
dec
dec
mov
lods
sub
mov
add
ja
jmp
cmp
jge
mov
sub
add
cmp
ja
add
inc
pop
and
cltd
pusha
rolb
jge
sbb
cwtl
sahf
cmp
jnp
fs
jb
adc
sar
jmp
or
mov
js
fwait
sub
cmc
divb
add
push
xchg
sahf
xor
vmovntps
add
stos
mov
pop
push
pop
cmp
rcl
and
push
test
jg
or
in
jns
jae
sub
cmp
and
test
or
jle
hlt
mov
test
scas
and
pop
jae
addr16
out
int
daa
xor
adc
sbb
es
jecxz
xor
incb
cmp
in
sbb
int
mov
sarl
push
idiv
mov
push
cmp
ret
push
pop
lcall
mov
cmp
mov
stos
jl
or
daa
das
sbb
out
or
aaa
pop
cli
rorb
and
sub
cmp
mov
or
ljmp
inc
add
call
or
xchg
adc
push
shll
xchg
enter
fstps
leave
add
lock
inc
outsl
cld
in
mov
stos
ss
jecxz
dec
push
dec
cli
incb
or
add
mov
ret
mov
mov
test
cmp
imulb
lcall
push
ret
decl
xor
mov
inc
jg
xchg
icebp
push
outsl
mov
dec
inc
pop
push
sbb
jg
cmc
roll
pop
and
pop
push
clc
rcr
or
test
test
ret
cmp
outsb
cmp
lds
adc
mov
ds
lods
sub
lcall
out
jae
call
cmc
jg
inc
fucomp
ficomps
sti
mov
xor
icebp
pushl
sbb
push
sarl
daa
sub
mov
push
xor
outsl
outsb
add
test
push
pop
hlt
pop
sub
and
push
push
or
mov
mov
data16
in
pop
mov
sub
sbb
shrb
mov
ffree
push
mov
mov
xor
std
mov
test
push
pop
and
loop
mov
jle
int3
sub
outsl
addb
lds
jge
sub
jg
hlt
pushl
push
cmp
xor
or
nop
and
in
pop
add
adc
insb
rclb
mov
push
or
dec
sbb
and
cltd
out
sbb
sbb
out
ficomps
loopne
xchg
repnz
aas
aas
fisubrl
dec
pop
in
cli
add
cwtl
push
sbb
jle
and
movl
cmc
in
mov
add
mov
sub
cmp
incl
pop
mov
mulb
sub
lock
out
aam
jmp
and
jnp
arpl
addr16
sbb
mov
xor
enter
cmp
adc
mov
movsb
dec
push
js
mov
stc
cmp
mov
adc
mov
cmp
outsl
cld
decl
sub
movsb
mov
cmp
jns
pusha
loopne
cmc
jg
adc
xor
dec
cmp
or
and
adc
inc
ds
movsb
cmc
push
pop
ret
mov
fildll
push
dec
inc
sarl
jnp
pop
roll
in
es
add
mov
mov
decl
add
dec
pusha
aad
sub
jne
sub
jecxz
call
inc
in
cld
or
jns
dec
das
repnz
ss
inc
or
and
add
mov
lahf
xor
sbb
in
xor
aas
ror
sarl
xor
popf
xchg
rcr
ja
pop
dec
dec
cmp
adc
or
and
add
adc
or
test
jno
push
mov
ljmp
or
dec
adc
in
ljmp
push
loop
call
mov
sarl
lahf
add
push
adc
lret
or
dec
subb
add
adc
aaa
mov
xchg
dec
xchg
imull
std
jg
bound
and
dec
sbb
add
cmc
pushl
xchg
sbb
push
mov
xor
ds
push
out
xor
call
pop
adc
push
incl
sar
add
or
dec
and
fucomp
push
push
rcr
cmp
pop
in
push
pushf
sbb
cmp
pop
and
sar
call
rclb
adc
xchg
ja
rcl
test
out
ret
and
lock
and
add
xchg
ja
decb
in
mov
int3
ja
in
insb
sbb
lcall
dec
adc
push
outsb
subl
jae
and
push
push
xor
adc
sub
or
mov
mov
xor
dec
inc
adc
mov
push
and
aaa
cmp
sub
mov
movsl
daa
fs
cmp
push
fwait
mov
pushf
xchg
xor
cwtl
mov
lock
lcall
popa
xor
lahf
mov
add
sub
and
hlt
loop
sub
out
lcall
xor
push
adc
push
or
in
push
fcoms
fdivp
fadd
lcall
ret
pop
xor
dec
pop
lock
mov
pop
call
cmp
inc
in
mov
ljmp
in
mov
imul
cmp
mov
mov
mov
cwtl
stc
add
rolb
xchg
nop
push
fisttps
jecxz
aad
fidivs
lock
stc
sbb
pop
push
adc
dec
pop
loopne
mov
mov
rorl
push
cld
jo
cmpsl
adc
push
jmp
sub
std
add
leave
repz
repnz
in
ds
mov
push
cmp
jne
adc
push
inc
out
popa
leave
pop
mov
push
adc
out
xor
pop
and
out
cli
filds
cwtl
fmull
iret
and
jle
test
cmc
pop
push
or
adcl
fxch
push
pop
lcall
lods
je
and
jp
xor
mov
adc
sub
add
jg
mov
mov
cmpsl
push
sub
lcall
jg
loopne
or
and
jae
inc
adc
popa
stos
dec
shrl
mov
sub
inc
stos
mov
pop
cmp
scas
test
xor
int
loop
mov
dec
pop
or
ljmp
faddl
sub
les
jmp
pusha
mov
fwait
sub
fwait
mov
mov
sbb
ret
and
lret
hlt
shlb
pop
js
bound
sar
pushl
pushf
inc
jecxz
fsub
fsts
adc
fs
push
push
mov
xchg
lods
push
jmp
xchg
dec
std
arpl
cmp
loope
cmpsl
xor
cli
jg
push
xchg
popf
jg
adc
popa
xchg
push
dec
test
lahf
adc
adc
mov
jle
dec
out
lcall
and
inc
outsb
push
adc
ljmp
ljmp
mov
rclb
cmp
or
add
outsl
xorb
subl
addl
mov
cld
mov
sbb
stos
out
push
hlt
mov
decl
push
inc
add
popf
push
fadds
aam
xor
leave
or
aas
add
rcrl
jbe
fsubl
clc
push
mov
inc
xchg
sarb
inc
inc
fistpll
push
inc
push
pushl
fcoms
or
xchg
fwait
loopne
add
ljmp
add
ja
cli
sub
leave
and
lock
pushl
sbb
jecxz
lods
xor
out
add
mov
rcll
ret
iret
sahf
dec
mov
fsubrs
adc
rcr
ja
call
call
push
std
mov
iret
add
sub
mov
pop
fwait
mov
pcmpgtw
xor
add
pop
iret
adc
fcompl
int
push
push
pop
rolb
jmp
adc
es
add
cmp
loopne
dec
add
add
pop
ds
dec
call
push
push
or
sbb
jb
pop
dec
dec
outsl
push
nop
pushf
shl
or
pop
add
and
inc
pusha
cld
faddp
stc
scas
add
jmp
sbb
push
ljmp
jbe
enter
shlb
sub
jb
out
clc
push
lea
sub
test
addr16
cld
cs
xor
cld
bound
pop
cmp
cld
push
dec
cld
cmova
jecxz
mov
push
call
push
decb
fs
add
adc
jmp
pop
sarb
add
das
sbb
sub
jge
in
add
mov
mov
xor
jg
and
push
add
insb
insb
in
cmp
cmp
adc
add
add
jle
dec
push
incl
dec
aaa
pop
inc
insb
sub
push
jg
add
dec
cli
ds
arpl
add
cwtl
clc
das
xchg
lcall
insb
pusha
xchg
aaa
pop
xor
jnp
and
aaa
sub
add
push
xorb
mov
mov
push
aas
inc
bound
push
bound
add
jns
scas
cmpsb
and
push
es
sbb
mov
jecxz
call
lret
or
std
cs
add
es
dec
or
or
testb
push
lret
cmp
fists
xor
cmp
jnp
jecxz
add
xchg
mov
cmp
fisttps
pop
adc
insl
lret
adcb
es
aaa
std
xor
sbb
sbb
sbb
inc
call
jno
jnp
mov
jb
pop
out
aaa
call
pop
es
push
cmp
pop
and
sub
inc
je
std
inc
mov
pop
dec
sub
roll
gs
inc
jge
sub
js
lcall
dec
les
rcrl
inc
insb
adc
xorb
add
mov
and
mov
rorb
pop
data16
decl
test
pop
pop
or
aaa
into
lahf
mov
jg
push
push
aam
or
in
fisubl
or
dec
add
cmp
lods
dec
inc
ljmp
dec
jl
out
mov
adc
mov
cs
cld
add
pop
cltd
mov
pop
or
stos
insb
ss
repz
adc
xchg
clc
push
ret
pop
jns
mov
xchg
ret
outsl
jmp
jmp
cmp
das
in
pop
pop
sub
dec
inc
adc
push
push
fiadds
mov
jnp
dec
pop
dec
cmpsl
test
dec
rcl
jmp
shlb
packuswb
int3
pusha
or
shrb
pop
mov
rcl
movsb
xor
adc
push
pop
adc
dec
and
push
popa
incb
lret
daa
dec
mov
fmull
inc
mov
adc
mov
out
movsb
push
loopne
adc
cmp
fsubr
adc
xchg
aas
mov
xor
xor
sub
push
inc
movsb
or
add
sub
xor
push
xlat
or
sbb
clc
sbb
pop
jb
adc
inc
ds
or
stc
ret
outsl
push
fdivs
push
aaa
mov
or
add
call
roll
sbb
xor
adc
and
fcmovne
dec
adc
fiadds
and
push
jno
adcb
clc
or
loopne
xchg
out
or
jnp
mov
cmp
push
xor
fdivrs
out
jns
push
mov
pop
mov
mov
fstps
mov
shll
adc
and
js
jp
mov
cmp
push
into
and
xor
push
cmp
adc
cmp
outsb
aaa
add
xchg
xchg
sahf
mov
or
inc
mov
imul
test
xor
jno
fbld
add
inc
cmp
test
ss
gs
pop
xchg
mov
cmp
add
push
sahf
sub
mov
dec
xor
rcrb
fcomps
mov
sbb
xor
sub
out
jno
push
mov
jns
scas
pop
mov
xchg
xchg
sbb
and
sahf
mov
pop
rorl
dec
lds
ret
jo
stc
xchg
imul
mov
add
pushl
rolb
pop
addr16
inc
xor
pop
jmp
push
es
arpl
lret
mov
iret
repz
sti
xor
cmp
mov
aaa
mov
outsb
das
add
mov
push
push
mov
jl
cld
ljmp
or
dec
test
je
jnp
ds
addr16
xchg
add
aaa
rcrb
dec
clc
cmpb
cld
lcall
pop
pop
add
pop
dec
lcall
mov
dec
mov
out
or
sbb
out
dec
jno
xlat
xchg
dec
lcall
pop
lods
pusha
call
pop
add
ja
aam
jb
outsb
scas
mov
decl
pushl
cmp
out
addr16
fucom
jg
xchg
outsw
mov
hlt
test
push
pop
or
nop
jb
jg
std
leave
neg
stc
in
std
aam
lret
icebp
rcr
sar
fld
shl
repz
jge
bound
cmp
jmp
pop
mov
repnz
lret
fxch
shr
stc
ror
into
lret
lods
pop
dec
mov
jb
mov
repz
mov
push
shl
xchg
dec
sub
dec
ja
cmc
jae
out
and
cld
pop
dec
cli
dec
mov
jl
jge
cmp
inc
jnp
xchg
pop
push
sub
pushl
shlb
aam
push
lahf
jg,pt
aaa
scas
in
aam
jne
mov
pusha
outsb
pop
cmp
pop
sbb
pop
xor
pop
bound
sub
cmc
ljmp
add
sbb
imul
pop
push
adc
in
dec
je
ret
mov
repz
xchg
ror
aaa
push
stos
pusha
fmuls
enter
lcall
sti
ret
rol
pop
xchg
jno
stos
aam
inc
or
xchg
push
decl
nop
lret
or
and
sarl
fidivs
xchg
gs
fdivrs
dec
in
jl
pop
aam
test
or
ja
cmp
psubb
mov
jns
and
test
or
std
ja
xor
and
xchg
lcall
push
aad
cmp
into
repz
cmp
scas
fstpt
jne
outsb
aaa
adc
ja
sub
dec
push
daa
add
xor
jae
imul
lcall
mov
add
mov
inc
sbb
xchg
jp
add
dec
push
mov
sbb
test
decl
roll
ret
into
fisttpl
hlt
popa
aas
sbb
call
bound
cmc
in
inc
pop
pop
aaa
push
out
lock
je
inc
and
jnp
clc
cld
adc
pop
mov
shll
pop
mov
xchg
mov
rorb
ja
cli
enter
int3
fildl
ret
sbb
or
repz
cld
bound
adc
outsb
sub
push
addr16
and
jmp
and
dec
dec
xor
dec
add
xchg
fbstp
push
fs
pop
push
mov
adc
mov
xor
sbb
lcall
outsb
cmp
xchg
and
push
push
pop
stos
pushf
js
aas
data16
adc
inc
pop
ds
enter
call
sbb
pop
inc
aaa
jae
dec
mov
mov
add
dec
aaa
call
or
hlt
sbb
sti
sbb
adc
or
fcompl
out
test
pop
lods
dec
and
outsb
sbb
daa
cmp
dec
jae
mov
dec
inc
sub
data16
add
mov
jge
xchg
xchg
popa
cli
loop
cmc
ja
les
jmp
or
rcrb
push
je
mov
sti
cmp
ljmp
push
insb
dec
dec
out
es
add
and
xlat
mov
inc
and
cld
stc
out
mov
in
pop
push
sbb
cld
aaa
loope
jmp
test
sub
les
loope
orl
filds
cld
mov
call
test
test
mov
ret
iret
lahf
aas
jg
cmp
and
push
and
mov
out
push
movsl
push
jmp
adc
insl
pusha
jecxz
lods
xchg
pop
sbb
add
icebp
fsubrs
adcl
push
pop
add
jbe
xchg
mov
stos
sub
push
popa
inc
push
cmp
hlt
aas
test
pushl
sub
arpl
push
jo
int3
and
or
xchg
dec
cld
loop
sbb
pop
je
push
cld
orl
dec
pop
inc
mov
push
es
ficomps
mov
ret
out
ja
push
jmp
dec
out
scas
push
lods
cmp
push
push
arpl
aaa
jno
pop
push
inc
aaa
fwait
cli
cmp
xchg
dec
test
jae
xchg
jbe
icebp
push
jo
push
gs
push
xor
dec
jp
sbb
es
movsl
or
xor
add
cmp
fmull
ljmp
push
sbb
fisubl
test
in
cld
pop
push
jmp
jae
jecxz
imul
cld
and
call
sbb
pusha
outsb
sub
rcll
imul
leave
fistps
fs
mov
mov
test
frstor
adc
adc
fisttpll
jmp
decl
mov
hlt
ret
icebp
or
in
add
imul
dec
dec
jb
rol
dec
scas
int
outsb
in
je
cld
and
mov
outsl
inc
inc
push
jb
ficoms
dec
and
lahf
jg
inc
add
add
das
push
sti
jg
dec
pop
dec
sar
shl
and
cs
ficomps
push
pop
enter
xlat
inc
fmuls
insb
outsb
sbb
push
pop
sub
sub
jb
or
push
call
popf
clc
lcall
push
jle
sub
jge
mov
es
or
arpl
cmp
or
push
fs
xchg
dec
dec
mov
gs
inc
leave
lcall
jbe
cmp
and
sub
ss
sub
jg
std
popa
sub
cmp
mov
jg
jbe
sbbb
ljmp
int3
and
sub
add
ljmp
and
inc
mov
mov
push
cmp
decl
data16
outsl
and
ds
mov
inc
or
push
fsubrs
pop
pop
adc
and
sub
push
shll
push
jbe
and
das
xor
shl
sahf
into
arpl
ljmp
jg
inc
mov
jl
icebp
and
mov
shlb
shrb
mov
push
ret
arpl
stc
int
incl
rorl
jmp
ret
lock
mov
pop
test
xor
das
dec
ljmp
std
idiv
jg
jnp
push
dec
mov
insl
shl
xlat
inc
testb
jo
ljmp
mov
sub
xor
data16
add
add
xchg
out
pop
stc
call
rorl
fcom
sbb
outsl
mov
inc
pop
mov
pusha
shl
les
lcall
enter
push
sti
inc
out
sbb
stc
push
filds
rcrb
pop
mul
cmp
fisttpl
loop
nop
out
mov
hlt
lcall
push
ret
and
scas
jp
pop
pop
pop
sbb
jae
cmpsl
push
outsw
repz
mov
ja
icebp
adc
cmp
in
xchg
call
in
int
aad
push
push
push
xchg
mov
lea
scas
mov
push
aas
std
mov
and
add
lcall
sub
outsl
pop
rep
andb
jbe
cmp
xor
movsl
ljmp
jb
ficoms
xchg
mov
xchg
loopne
test
push
jae
loop
inc
jo
fistps
int3
inc
push
add
inc
sub
faddl
lahf
ljmp
cmpsl
idivl
dec
rcrl
pushf
xchg
sub
jl
enter
adc
jle
sbb
cmp
mov
cmp
sbb
ljmp
pop
cmp
or
dec
xchg
or
aas
push
aaa
add
add
pop
loopne
mov
xchg
call
inc
shlb
andl
sbb
cmp
or
aam
and
rol
adc
pop
pop
lods
scas
sbb
mov
rorl
es
scas
and
js
test
jbe
outsl
cmp
add
jg
mov
sbb
inc
mov
cmp
int
pop
push
jmp
testl
and
jnp
scas
bound
imul
sub
jg
int
jno
emms
jmp
mov
add
jne
sub
jg
sub
dec
dec
mov
sbb
pop
lea
sar
lcall
add
jp
js
lcall
dec
inc
mov
add
mov
sbb
sub
mov
decl
inc
shrl
lods
bound
cmc
push
push
rorl
mov
and
jg
sub
push
inc
xor
push
hlt
imul
or
cs
cmp
add
outsl
dec
orl
pop
shll
aas
mov
repz
call
dec
cs
sarb
in
inc
jg
cwtl
cmp
xchg
jge
in
fsubp
dec
cmpsb
imul
sbb
fldcw
sbb
nop
lahf
jne
sub
sbb
cmpsl
inc
or
data16
movq
xor
pop
push
mov
rcrl
push
pop
or
imulb
dec
fistpll
xchg
mov
cld
call
test
ret
hlt
shll
sub
outsl
je
in
dec
mov
jmp
lcall
jae
adc
adc
outsb
jae
add
aas
test
inc
xor
cmpsb
cmp
push
mov
mov
pop
arpl
mov
fs
pop
mov
sub
pop
fdivr
or
add
or
jbe
ud0
cmp
daa
pop
xchg
pop
repnz
inc
mov
mov
jg
lcall
mov
aam
jl
adc
push
addb
pop
xchg
push
add
ljmp
cli
aas
xchg
outsl
cmp
call
or
inc
adc
mov
scas
out
sbb
rolb
das
addl
mov
fisubs
pop
stc
lcall
push
xchg
adc
jno
lcall
aas
xchg
ret
mov
jns
loop
je
and
daa
iret
jo
test
xor
sahf
mov
and
loop
cmp
dec
mov
xchg
adc
cmp
fadd
stc
jnp
cld
sbb
lock
dec
divb
fcom
cmp
incb
dec
or
enter
cmpsb
test
adc
xlat
push
test
sarl
movsb
in
sbb
sub
xor
movsl
cld
repnz
adc
cld
mov
repnz
and
incl
mov
in
and
stc
cmpsl
popa
xchg
shll
and
inc
adc
mov
push
sub
fstl
aas
push
cmc
mov
mov
das
push
add
push
mov
push
cmpl
add
ljmp
sbb
or
sbb
testb
cwtl
aaa
adc
pop
addr16
mov
cmp
jne
inc
imul
jg
mov
sub
cmp
xor
sbb
dec
cmp
lods
push
jae
adc
lret
ljmp
xchg
jb
dec
data16
mov
xlat
in
jno
sbb
insb
inc
arpl
stos
xor
decl
testl
xor
sub
add
cmp
ret
mov
pop
or
sub
cmp
adc
icebp
inc
dec
sub
jne
push
daa
mov
inc
pop
add
aam
or
aam
incl
insl
and
adc
mov
test
addr16
incl
stc
sbb
out
dec
cmp
leave
xchg
mov
outsb
test
out
clc
pop
mov
adc
sub
pop
and
out
cmp
inc
jg
mov
inc
mov
cs
fnstenv
ds
or
mov
ret
popa
fcomip
push
std
dec
or
push
insl
xchg
ss
popa
dec
jecxz
push
fs
mov
test
ss
xchg
shll
push
loope
sbb
sub
incl
cmp
sbb
enter
lods
roll
xchg
dec
aaa
cmp
mov
les
sub
or
adc
aam
pushl
xchg
and
pop
sbb
pop
ss
sub
sub
ss
stc
jecxz
add
int
cld
pop
push
sub
rcrb
dec
pop
sbb
xchg
adc
ljmp
rorb
dec
cmp
jb
and
in
mov
fucompp
sbb
jnp
fidivl
pusha
loope
clc
and
stc
inc
mov
cli
and
movsb
sub
xor
pop
je
push
sub
in
jmp
or
cmp
mov
sbb
mov
test
gs
sbb
aaa
dec
dec
inc
sub
movsl
sub
insl
out
mov
subb
int3
and
scas
negb
sub
ljmp
iret
adc
push
push
adc
dec
or
jne
push
adc
lock
cli
and
adc
aad
loope
lock
arpl
fldl
rcr
adc
mov
addr16
imul
andl
push
cmc
sub
pushl
inc
in
arpl
cmp
sbb
add
les
daa
or
dec
or
mov
inc
and
loop
pushl
jbe
sbb
xchg
insb
inc
fstl
cwtl
or
mov
dec
imul
cmc
jmp
pop
repnz
cwtl
add
mov
adc
es
sbb
push
pop
cmc
sbb
ss
sbbl
outsb
das
scas
dec
adc
sbb
jmp
sbb
mov
or
icebp
cmp
aas
pop
repnz
ljmp
jge
in
cmp
int3
and
mov
pop
xchg
jmp
aas
push
cmpsb
fs
cmp
adc
and
std
sbb
incl
pop
fnstcw
maxps
and
test
leave
xor
jb
iret
jle
xorl
push
in
sub
jg
add
mov
mov
jle
ds
adc
mov
and
cmp
mov
call
es
pop
outsb
push
shrl
fs
jb
nop
dec
vmovdqu
and
xchg
dec
or
lahf
sbb
push
xor
decl
inc
hlt
cmp
push
xor
and
out
call
xchg
and
popa
inc
push
jo
int
cwtl
je
arpl
lods
es
es
pushl
rclb
jbe
pop
sbb
cmp
jg
sub
sub
add
inc
mov
int
aas
inc
push
aas
pop
jbe
push
sbb
jmp
and
inc
repnz
sbb
ljmp
push
xlat
outsl
or
add
and
mov
insl
data16
push
hlt
jle
push
xorl
jg
jmp
add
fcoms
inc
in
ljmp
sbb
loopne
aas
nop
hlt
daa
ljmp
loopne
sub
jmp
ret
add
rolb
push
adc
cwtl
pop
mov
data16
xor
jg
jo
cmp
daa
std
ds
xor
cmp
xor
cld
jg
xor
cmp
sbb
sbb
adc
sbb
cmp
push
push
or
pushl
mov
sbb
aas
test
fwait
pop
xchg
test
xchg
add
addl
push
test
cmp
and
xor
lea
stos
sbb
scas
adc
das
mov
dec
xor
pop
jmp
adc
lcall
push
mov
mov
cmp
pop
callw
jp
add
ljmp
ds
adc
pop
adc
pop
lock
and
cmp
and
push
loope
adc
cmpsb
sbb
je
sbb
ljmp
cli
cmp
or
sbb
xor
add
xchg
hlt
fisttps
pop
out
fsts
fisubrl
lret
cmp
mov
daa
pop
jb
nop
mov
leave
inc
repnz
mov
mov
incl
dec
add
jae
pop
cmp
sbb
loop
pushl
and
or
aaa
cs
and
and
push
and
sbb
mov
or
sub
sub
cmp
mov
add
push
fnstsw
xor
fldt
out
pop
cli
sub
push
into
or
and
adc
sub
cmp
or
pop
cli
das
fidivl
int
mov
or
or
xor
and
lock
and
test
orb
and
test
les
mov
adc
test
es
sub
inc
pop
xor
adcl
adc
roll
aaa
fidivs
ss
pop
aas
enter
add
sub
add
dec
cli
pop
fsts
sub
mov
shrb
mov
mov
jb
jmp
pop
ret
aam
adc
mov
ja
pop
add
aaa
dec
xor
jbe
adc
ret
inc
pop
pop
dec
in
les
add
incl
popl
sub
xor
mov
sub
adc
adc
mov
out
adc
inc
add
push
xchg
jo
in
test
stos
rcll
out
ljmp
sbb
jle
imul
sbb
ds
pusha
icebp
mov
mov
and
cmp
jmp
in
sbb
icebp
lret
filds
aas
sub
sti
aas
inc
stc
fiaddl
aam
and
ret
mov
mov
jecxz
in
inc
ret
fstps
cli
jmp
ds
push
bound
inc
shll
stc
add
call
or
xorl
ss
lods
scas
pop
es
xchg
add
cmp
lcall
cld
xchg
jnp
xor
jle
cmp
frstor
xchg
cmp
jbe
or
mov
add
and
decl
cs
add
push
fwait
xchg
push
cmp
or
icebp
rorl
pop
add
lcall
into
jae
or
or
push
arpl
xchg
sub
roll
repz
insl
and
stc
push
or
xor
decl
aad
xchg
inc
lahf
mov
pop
lds
lcall
pop
rcrl
enter
dec
lcall
out
fcomps
inc
mov
addl
jne
pop
push
dec
push
aaa
jbe
cmp
incl
push
pushf
std
pop
xor
test
sbb
jg
addl
inc
mov
push
imul
add
ljmp
bound
push
out
repz
xor
push
scas
pop
fs
or
les
popf
es
lcall
data16
arpl
shlb
fldl
bound
movsb
add
or
cmpsl
das
test
mov
or
inc
insl
cmp
adc
dec
or
add
dec
std
jmp
icebp
or
mov
inc
cmp
aas
mov
jb
dec
sbb
aaa
ja,pn
or
add
test
sub
cli
push
inc
clc
xchg
add
shrb
or
aas
inc
inc
shrb
sahf
inc
adc
and
or
arpl
sub
aas
cmp
dec
scas
cld
inc
jb
call
or
js
mov
aaa
fildll
loopne
fidivrl
mov
jne
aaa
lret
cs
fwait
mov
cld
fidivl
ret
ja
jl
dec
xor
daa
and
xlat
xor
add
fistpll
negb
loope
ds
or
sti
sub
loope
out
jmp
inc
and
es
xlat
adc
outsb
or
dec
dec
in
shrb
mov
ss
ret
rorb
call
es
shr
pop
dec
and
add
or
jp
popf
cmc
sub
cli
dec
xor
ret
cmp
mov
fsub
adc
std
cmp
out
sub
xchg
cmc
adc
fistpll
stc
xor
hlt
sar
sbb
inc
xor
jmp
and
int
xchg
aaa
fisttps
repnz
add
fadd
xor
in
fcomi
ds
ljmp
ret
ss
jmp
faddl
cld
cs
cmp
adc
or
jmp
adc
cmp
fsts
cs
sub
dec
push
and
mov
pushf
hlt
add
xor
cmp
push
dec
out
or
lock
std
fidivrs
pusha
repnz
push
iret
and
and
fstpl
cs
xor
dec
out
dec
adc
adc
adc
jl
lock
sub
daa
clc
adc
rcrl
or
aaa
xor
xor
lea
lds
sub
sbb
loope
in
push
sbb
cs
and
cmp
jmp
push
push
outsl
imul
imul
cld
ja
fidivrs
sub
xor
push
int
ret
repnz
sarl
aas
dec
mov
scas
add
jmp
sbb
dec
push
and
pop
out
pop
lock
xor
push
popa
add
cs
sub
les
xchg
xor
xchg
sbb
lds
dec
clc
dec
aas
adc
mov
sbb
sbb
push
fists
mov
and
fisttpl
push
inc
hlt
push
and
adc
ss
cmp
icebp
or
push
ljmp
fwait
out
xor
cmp
leave
pop
cmp
adc
js
and
xchg
rolb
jle
icebp
and
mov
ss
pop
pop
mul
das
out
fsubr
clc
cld
ret
cs
add
lret
pop
in
push
lock
dec
repz
lahf
or
push
push
cli
or
add
adc
and
cs
lock
cld
int3
movhps
lret
scas
sbb
test
sahf
fstl
lea
dec
rcl
pop
xchg
jmp
pop
mov
stos
add
mov
lock
and
icebp
lsl
ror
in
jge
pop
stos
and
push
stos
lock
lock
push
aas
pop
push
out
repnz
iret
and
movhps
ds
pop
add
sub
cli
repnz
pushl
out
sbb
enter
add
cmp
scas
adc
jo
std
xor
or
and
fimull
or
adc
idivb
push
lcall
jnp
fisubl
out
jle
mov
adc
add
or
or
pop
xchg
mov
ljmp
pushl
pushf
test
cmp
test
sbb
mov
sbb
nop
lods
ljmp
lds
push
mov
call
call
mov
jmp
jns
faddl
ret
adc
inc
sarl
jb
hlt
decl
mov
dec
push
into
sbb
push
lret
adc
jg
fisttps
sub
sarl
jle
sub
scas
rcll
push
inc
jmp
hlt
jg
rolb
and
jl
pushl
popf
ljmp
test
cmp
rclb
xchg
xchg
jmp
cmp
jg
dec
mov
add
lret
cmpsb
frstor
daa
nop
or
rcrl
enter
cs
fdivs
in
cli
cmp
hlt
into
cld
lcall
sub
loopne
xchg
neg
cs
fsts
adc
int
es
out
test
lcall
sbb
loop
jmp
leave
push
adc
in
and
sti
shll
int
out
out
addr16
xor
fcmovnb
xor
in
sbb
dec
mov
div
ds
shll
clc
cmp
mov
xor
ret
add
ds
mov
in
mov
hlt
shl
call
outsl
jbe
fcomps
mov
ds
fisubrl
xchg
in
scas
rcr
cld
cmpsb
stc
in
call
daa
out
sub
ds
aas
fidivl
cmp
outsl
repz
add
es
cmp
pop
clc
cmp
xor
sbb
xchg
stos
aaa
add
scas
sbb
fdivl
movb
fldcw
mov
mov
xchg
aas
mov
je
add
mov
dec
ja
xchg
adc
xchg
fmull
and
data16
xorl
je
mov
lret
mov
mov
fwait
into
adc
lock
pop
cmp
gs
adc
mov
xor
cmpxchg8b
mov
testb
scas
clc
je
push
xchg
push
iret
cmp
inc
or
add
pop
add
inc
ss
inc
lods
jae
push
mov
decl
clc
call
jge
dec
cmp
das
sub
ja
mov
jnp
xor
btc
or
and
mov
push
je
mov
dec
dec
movsl
outsb
jo
clc
stos
fwait
incb
aas
jecxz
test
cld
cmc
and
ljmp
and
int3
sub
or
mov
rcrb
cli
add
incl
insl
adc
and
lcall
add
push
cmp
outsl
incl
mov
sbb
icebp
cmp
pushf
mov
shlb
cmp
shll
add
cld
lds
out
pop
stc
push
push
pop
dec
data16
incl
or
cld
cs
mov
aas
in
sub
cmp
loop
incl
xchg
scas
sub
icebp
and
pop
test
mov
jmp
add
shl
popa
fmull
mov
mov
and
das
mov
or
mov
add
jg
xor
das
stos
mov
mov
push
or
jp
outsl
mov
subl
inc
jecxz
incl
and
mov
sub
ret
mov
sti
xchg
fcoms
mov
das
xchg
push
mov
pop
and
push
adcb
inc
mov
notl
push
mov
inc
dec
shlb
add
push
fs
pushw
decl
das
jno
adc
lret
adc
adc
add
xor
xor
bound
daa
fsubrl
xor
fwait
sbb
lea
outsb
xor
sbb
fbld
sbb
in
in
add
stos
icebp
out
inc
in
out
das
push
jne
push
decl
jmp
sub
jmp
pop
jnp
sbb
js
lock
adc
sbb
or
cmp
sbb
cmovae
sbb
jmp
lods
je
dec
arpl
orl
iret
mov
push
or
dec
pop
cltd
or
mov
sbb
arpl
mov
inc
dec
jg
mov
movsb
mov
pop
mov
jo
loope
dec
leave
loop
aaa
mov
scas
into
inc
cmp
pusha
push
popa
xchg
rorb
push
into
sbb
push
pop
dec
inc
cmp
dec
or
jg
sub
jl
cmp
dec
ss
fldl
adc
fcomip
inc
jl
cmp
decl
das
repz
pop
cmp
sub
clc
adc
cli
std
pop
outsb
sub
xor
shlb
adc
out
clc
decl
xor
fcoml
push
pop
inc
sbb
ja
push
es
xor
sub
dec
scas
adc
pop
or
add
leave
xchg
pop
dec
loope
sbb
xor
add
gs
scas
clc
push
mov
rcrb
dec
mov
adc
icebp
mov
aam
and
lds
pop
push
push
lcall
pop
loop
out
js
call
push
insb
mov
jl
sbb
jge
adc
les
pop
movsb
mov
call
push
jb
mov
dec
aas
xor
fcoml
aas
adc
jg
xor
push
mov
xor
lret
in
push
mov
sbb
out
js
add
push
lahf
lea
fucomip
add
js
ljmp
gs
std
aas
lods
mov
ljmp
cld
push
adc
cmpb
cmpsb
shlb
sub
mov
or
jne
jbe
sub
xor
cmpsl
xor
mov
decl
loop
add
pop
pop
adc
pop
jle
lock
mov
pop
cmp
notb
mov
cwtl
sub
insl
jecxz
add
ja
lahf
mov
les
daa
sub
add
cmp
pop
aad
and
and
xchg
sti
repnz
xchg
int
xchg
lret
in
ljmp
and
in
insb
pop
dec
xor
adc
and
and
and
push
push
data16
sub
je
lcall
iret
test
ret
dec
pop
pop
movsl
jg
jecxz
aaa
adc
cmp
imul
daa
cmpsl
lcall
mov
xchg
dec
scas
aas
mov
sbb
cmpxchg
cmp
sbb
lcall
mov
negl
add
mov
sbb
scas
dec
pop
std
jecxz
lds
das
mov
fildll
jge
lcall
mov
fucom
pop
xchg
mov
push
mov
js
cmp
sbb
mov
adc
ud0
incl
and
and
sbb
inc
mov
jo
mov
add
cwtl
cld
lcall
sub
xchg
sbb
mov
scas
xor
push
lock
mov
adc
call
dec
add
adc
insb
xor
inc
cwtl
add
dec
adc
mov
aaa
add
xor
or
lcall
jecxz
xor
jle
lret
movsb
jge
jne
push
push
test
pop
cmp
mov
sbb
sbb
sub
jmp
and
jo
decl
daa
sbbl
add
inc
cltd
sub
cmp
sbb
bnd
call
adc
and
notb
sub
call
mov
sub
sub
sbb
test
icebp
xlat
jmp
ret
sub
xchg
jl
push
mov
ret
stos
aas
inc
bound
dec
mov
fwait
or
cltd
mov
loope
aaa
ljmp
or
les
imul
xchg
pop
sar
mov
push
adc
mov
stos
shl
sub
gs
push
call
adc
scas
xchg
aas
mov
and
xchg
repnz
cmpsl
cmp
loopne
or
sbb
adc
movsb
xor
jmp
sbb
clc
cmp
and
das
ljmp
jmp
push
pop
sbb
pop
inc
aad
sbb
and
ljmp
adc
xlat
xor
data16
dec
aas
xor
xchg
in
add
pop
jmp
sbb
xchg
mov
lds
hlt
imul
add
inc
imul
sbbl
lret
cmp
call
cmp
lds
mov
addl
and
add
stos
incl
aas
xchg
inc
pop
adc
addr16
repnz
decl
adc
push
leave
sti
inc
push
movsb
push
xor
jl
pushl
test
or
cmp
jp,pt
in
jo
sub
jmp
add
fbstp
xchg
jnp
mov
mov
and
je
imul
sbb
dec
xor
incl
mov
gs
outsl
ds
sbb
ja
gs
mov
cltd
mov
push
push
call
sbb
aaa
jnp
aaa
pop
sarb
inc
cmc
cmp
dec
inc
jmp
sbbb
jbe
jmp
jb
inc
jo
jp
xchg
punpcklbw
stc
decl
stos
imul
dec
sbb
sbb
cltd
aaa
stos
out
pop
leave
aas
mov
adc
mov
jg
jmp
xchg
cs
shrb
cmp
stos
sub
cs
adc
ds
lcall
mov
xchg
insb
mov
cmp
subb
push
xor
jg
dec
jbe
push
xchg
adc
or
ret
jmp
adc
ror
fldenv
jg
dec
icebp
jnp
mov
push
push
in
sti
sbb
ja
sub
out
clc
and
mov
mov
jmp
aaa
rcll
rclb
jbe
lea
adc
lahf
pop
hlt
call
dec
das
mov
push
and
leave
fwait
push
pop
sub
divl
cmp
jecxz
or
xor
mov
xor
push
adc
pushf
push
popf
sbb
cwtl
int
out
cli
outsl
push
inc
loope
push
cmp
push
test
mov
xchg
jle,pn
popa
std
pop
and
fs
test
iret
adc
ds
incb
incl
add
xlat
leave
imul
rolb
add
cld
std
push
aad
into
push
adc
or
sbb
jmp
outsl
dec
mov
pop
popf
add
movsb
je
fistps
ja
daa
std
fwait
outsl
or
inc
clc
in
dec
xor
ds
dec
push
mov
xchg
or
repnz
push
in
jg
cmpsb
iret
sub
dec
pusha
xchg
in
outsb
test
js
insl
pop
add
cld
jmp
iret
jae
xchg
lea
pop
cwtl
pop
repnz
aas
dec
pop
out
cmp
fldcw
and
jle
aad
outsl
loope
movsl
pop
loope
pop
cwtl
std
inc
inc
adc
adc
incl
jg
ds
and
cs
and
nop
ret
xor
or
fcomps
mov
int3
add
sub
scas
xchg
adc
pop
pop
mov
push
jl
xor
out
jne
in
xor
xor
ljmp
fs
lahf
inc
mov
or
xor
sbb
pop
mov
pop
sub
inc
pop
jns
add
mov
cld
jg
lcall
dec
pop
or
mov
daa
push
or
push
xchg
arpl
mov
sbb
or
dec
dec
dec
jecxz
int
inc
and
loopne
mov
adc
fcomip
ret
or
jp
pop
sbb
lahf
aaa
xchg
push
ret
and
rcrb
mov
cmc
lcall
xchg
mov
sub
mov
cmp
mov
push
and
aam
lcall
fnstsw
xor
ja
in
and
addr16
ja
ja
mov
int3
hlt
out
pop
xchg
cmp
out
enter
pop
lods
pop
aam
mov
jl
shlb
jmp
mov
lret
add
bound
adcl
sub
add
xchg
mov
mov
aad
shrl
mov
mov
inc
cmpsb
inc
push
xorl
cmpb
jg
or
cmpsl
dec
mov
cmp
sub
xchg
inc
or
sbb
fwait
and
rorb
mov
inc
shrl
mov
call
or
push
or
dec
ljmp
icebp
fisttps
arpl
je
idivl
xchg
je
mov
sub
in
push
sar
jo
jbe
jl
pop
scas
push
dec
rcrb
push
pushl
adc
push
inc
xor
ret
bsr
pop
cmp
in
enter
hlt
pop
dec
add
dec
inc
clc
inc
jns
les
mov
sub
pop
repz
in
dec
in
in
outsb
out
lret
call
nop
add
jo
arpl
mov
jg
pushl
rol
repz
gs
push
dec
mov
outsb
add
sbbl
jno
les
push
incl
adc
cmp
push
sub
repnz
cmp
daa
push
out
push
jg
incl
lret
nop
leave
pop
adc
push
outsl
mov
data16
mov
dec
rcr
dec
jae
pop
cmp
jg
pop
add
dec
cmp
add
add
sbb
sbb
inc
iret
out
and
or
adc
ljmp
in
pop
fbld
incl
jae
push
sub
rorb
and
cmp
dec
mov
adc
fcomps
push
push
and
or
in
leave
add
faddp
sbb
jnp
dec
add
sbb
sbb
cmp
pop
cld
dec
daa
xchg
jb
decl
das
pop
negl
adc
daa
lcall
sbb
and
out
ljmp
ss
shlb
jns
xor
add
pop
fdivp
out
out
test
movsl
clc
sti
pop
sub
loop
cli
lcall
les
sbb
and
es
xor
sbb
icebp
inc
fbld
cmp
pop
xor
cli
lcall
sub
xor
aaa
adc
cwtl
jg
inc
or
orb
jne,pn
cmp
repnz
int
insl
mov
push
cmp
adc
incl
arpl
aam
xor
xor
pop
and
and
shrl
sqrtps
pop
push
lcall
jae
bound
xor
aam
jecxz
add
sub
adc
bound
incl
pop
add
dec
ja
inc
inc
je
in
sub
out
hlt
dec
ja
pushl
jecxz
dec
aam
jmp
icebp
jnp
sarl
push
arpl
fildll
cld
decl
aam
add
add
repnz
dec
jo
test
jg
jg
les
push
or
add
xor
dec
sub
xchg
stos
stos
xchg
cmp
jg
lcall
imul
cmp
jae
cmp
dec
or
cmp
inc
decl
lcall
popa
imul
push
mov
clc
sbb
int3
std
notb
inc
mov
incl
cmp
push
jg
cmp
jmp
fcmovnu
xlat
dec
dec
fwait
inc
or
inc
dec
call
pop
les
add
sti
data16
and
fbstp
sbb
push
jb
rcrb
ds
add
sbb
outsl
inc
jbe
adc
out
lcall
sbb
xchg
sarb
or
popa
add
sbbl
jmp
test
ljmp
sbbl
mov
push
shlb
repz
sbb
cs
ljmp
mov
jle
sbb
fnsave
jne
stc
and
jns
aas
icebp
cmp
inc
push
sbb
decl
mov
in
jae
cld
adc
sbb
fcompl
cmp
push
ret
adcl
clc
cwtl
cs
js
cmp
test
jmp
xor
mov
xor
imul
fisttpll
insb
je
jb
rcrb
jg
add
and
leave
push
push
add
iret
bound
dec
cmp
andl
dec
leave
ljmp
dec
fdivr
jo
mov
addr16
adc
clc
sbb
or
add
icebp
add
push
pop
lock
sbb
adc
mov
fs
aaa
out
push
jo
in
push
sub
inc
dec
sub
pop
call
cmp
cmp
mov
call
les
cmp
ljmp
jecxz
or
call
dec
ds
adc
adc
sbb
out
into
loop
dec
aas
negl
sub
pop
je
lcall
and
or
fimull
mov
lret
xchg
pop
jg
or
cmp
adc
push
loopne
cli
cmp
pop
popa
jb
js
sub
loopne
xor
addb
dec
addr16
fdiv
sub
lock
cmp
cmpl
xchg
out
mov
cmpsb
push
cmp
stos
divb
add
mov
push
add
iret
das
and
pminsw
out
dec
add
cmp
mov
sbb
sbb
jbe
xor
std
cmp
ss
sub
inc
rcll
cs
enter
or
scas
iret
jo
add
jmp
out
pop
das
ds
jae
aad
sub
dec
push
push
ret
jmp
pop
test
cmp
cmp
outsl
adc
imul
fnstsw
movsb
pop
or
or
cmp
adc
dec
mov
dec
cmp
in
inc
inc
xor
jno
cld
out
push
xchg
push
loop
cmp
lods
jo
sub
loopne
push
inc
jp
dec
adc
jl
repz
incl
push
push
jmp
pop
push
stos
test
and
andl
jmp
into
bound
pop
xorb
roll
aam
xchg
ja
sub
jle
mulb
jno
mov
or
pop
bound
inc
push
sbb
cmp
icebp
scas
adc
ds
fwait
nop
or
inc
adc
pop
insl
jl
pop
mov
jle
stos
jno
scas
xor
movsl
cs
scas
pusha
and
int3
mov
adc
inc
aaa
stc
push
fisubrs
jb
cmp
jg
ja
icebp
jl
xchg
or
hlt
cmpsb
xchg
mov
or
and
or
js
pushl
lods
mov
movsl
out
aad
fsubs
pop
or
icebp
inc
out
xorl
add
movsl
aaa
sub
mov
push
xchg
ljmp
std
push
xchg
aam
jnp
cmc
fs
mov
sbb
cs
pop
sbbb
dec
cld
sbb
cs
dec
sbb
lods
sub
fmul
cmp
dec
stos
les
adc
repz
mov
add
adc
xor
scas
jmp
and
lret
mov
or
jne
mov
sahf
push
negb
imulb
aad
dec
das
pushl
xorl
mov
repnz
rorl
pop
push
add
push
stc
repnz
adc
les
mov
pop
loopne
pusha
mov
mov
jo
cmpb
cmpsb
ljmp
add
inc
mov
ds
icebp
inc
shlb
hlt
push
aad
add
js
int
jp
enter
repnz
clc
incl
adc
push
pop
ja
push
out
mov
or
fcomip
jmp
fsubs
jge
xor
or
insb
pop
and
cmp
dec
mov
testb
fbld
sbb
mov
decl
and
in
ds
lds
ljmp
push
sub
push
push
xor
lcall
dec
fldt
pop
cs
sub
sub
sub
rcrb
call
hlt
aas
or
pop
inc
sahf
cmp
cmp
adc
dec
cvttps2pi
clc
push
xor
jnp
adc
clc
xor
adcl
call
mov
das
add
cmp
sar
lcall
sbb
inc
cwtl
and
int
jbe
xor
bound
mov
dec
ds
pop
cwtl
push
xlat
jle
ss
das
pop
test
xor
aaa
cmp
cmp
and
fldl2t
push
sub
push
sbb
add
icebp
repnz
aaa
cld
ljmp
insb
cmp
fiaddl
jle
sub
mov
in
mov
jecxz
pop
je
add
sub
pop
jo
adc
outsl
xchg
loope
mov
mov
add
negb
adc
pop
xor
rcl
jmp
lock
pop
test
roll
sub
adc
push
adc
or
xor
pop
adc
xor
and
sbb
dec
cmpsl
dec
jb
jbe
scas
pusha
bound
dec
pop
popf
sbb
ja
sbb
jbe
sub
dec
add
inc
inc
sbbb
and
jg
sub
fs
daa
xchg
add
aas
cmp
inc
scas
push
jne
and
daa
push
shl
aas
enter
dec
sub
pop
std
pop
out
xor
mov
or
fstp
data16
stc
call
js
jg
cmp
in
data16
mov
pop
in
dec
sub
ljmp
sbb
mov
sub
mov
push
das
adc
jg
mov
add
sbb
movsl
push
pop
ja
xor
bswap
adc
shlb
addr16
mov
icebp
jo
jg
sbb
and
aas
add
and
jecxz
mov
pop
jl
and
adc
fcmovnb
and
scas
sbb
sub
dec
sub
sbb
pop
mov
ds
add
subl
stc
mov
mov
out
add
sub
add
or
jg
scas
repz
divl
outsl
cmc
shlb
mov
inc
inc
test
incl
les
pop
imul
in
shll
push
dec
faddl
rclb
in
incl
and
daa
adc
lock
int3
std
adc
xchg
dec
sbb
mov
jmp
jl
pop
mov
scas
loop
push
and
das
cmp
jmp
sub
jle
add
pop
movsb
sbb
das
aas
jp
inc
or
inc
or
push
xor
dec
xchg
inc
repnz
mov
ds
decl
decb
push
je
and
pop
repnz
aam
cmp
and
xchg
test
push
xor
imul
mov
and
ljmp
in
lahf
testb
incl
pop
es
insl
dec
pop
loope
sbb
dec
push
push
orb
jmp
pop
dec
pop
and
mov
cmp
imul
cmpsl
push
pop
leave
dec
fimuls
push
adc
ret
push
scas
mov
stos
inc
mov
jg
fyl2x
and
mov
push
cli
add
loope
lahf
jmp
pop
sub
decl
mov
xlat
push
cltd
or
mull
aas
lret
xor
fwait
decl
xlat
daa
mov
fst
xor
mov
xchg
mov
xchg
adc
dec
insl
lret
mov
cmp
test
xor
dec
xor
sar
jmp
inc
loope
push
in
sarl
addr16
filds
adcb
in
out
xchg
jp
jl
int
mov
inc
stc
and
data16
pop
cmp
push
mov
aaa
mov
inc
jns
adc
fwait
outsl
mov
das
jno
outsb
ret
lret
adc
dec
repz
clc
out
add
movsl
sarl
and
int
fistpll
lret
test
lock
mov
insl
jmp
das
in
dec
and
inc
jmp
fsubs
or
dec
cmpsl
add
jne
sbb
xchg
or
lahf
add
imul
xchg
pop
stc
xchg
push
pop
push
insl
pusha
in
xor
js
adcl
xor
dec
inc
dec
xor
push
cltd
lods
push
add
push
and
sub
push
dec
lea
jmp
push
pop
stos
cmp
imul
out
sub
mov
mov
dec
push
and
adc
dec
dec
pop
mov
jg
mov
xchg
mov
sbb
mov
jl
repnz
mov
xchg
scas
mov
xchg
fidivs
add
incb
xor
pop
pop
out
in
repnz
lret
pop
in
xor
jecxz
lret
jae
fcmovu
fstp
sbb
lock
xchg
jg
dec
lahf
sbb
repnz
aas
mov
adc
scas
sahf
mov
add
jno
or
push
aas
inc
dec
shll
push
fstl
xor
rorl
jmp
loope
or
shlb
test
mov
push
inc
xchg
cmp
sbb
mov
shll
out
shll
pop
ret
dec
shll
inc
lret
imul
imul
imul
cmpsb
imul
cmpsb
imul
imul
stc
push
fisttps
and
or
shll
imul
mov
mov
aaa
or
dec
push
in
leave
adc
dec
add
push
pop
sub
stc
clc
mov
js
or
pop
stc
xchg
add
cld
mov
das
imul
movsb
sbb
call
fldt
daa
iret
xor
pop
adc
pushl
add
daa
lret
adc
enter
movups
mov
fcos
lcall
icebp
bound
mov
or
sbb
pop
xchg
xchg
cmp
inc
lock
push
nop
xorl
aad
lock
pusha
sbb
or
les
xchg
adc
mov
inc
xchg
fmuls
xchg
mov
mov
mov
mov
cld
fadd
out
push
cli
out
cld
mov
pushl
xor
lods
sub
orl
imul
mov
sub
push
cmp
jge
imul
sub
adc
sub
jle
repz
in
in
cmp
aas
dec
jg
das
test
aas
in
orl
cmp
xchg
lods
pop
add
push
sbb
add
adc
out
in
jg
xor
mov
je
lahf
bts
fisttpl
add
fucomi
clc
or
cmp
xchg
popf
mov
push
cmp
add
mov
lret
sbb
mov
inc
outsl
and
std
cli
call
sbb
add
xchg
ret
mov
push
stc
aas
nop
inc
pushl
jmp
xor
je
or
ror
or
pushl
rol
adc
pop
fcmove
mov
or
lcall
faddp
fwait
in
pop
add
andb
add
shlb
adc
fcomip
sub
push
jecxz
in
jo
xor
sub
xchg
iret
cmp
mov
ljmp
negl
clc
out
xor
dec
mov
cmp
scas
jns
mov
mov
sahf
xchg
sbb
es
insb
pushf
repnz
rep
call
test
xor
testl
ljmp
in
test
loopne
jmp
jnp
stc
sbb
sbb
mov
push
push
dec
fnstcw
inc
push
shrb
cli
xchg
xor
loop
xchg
hlt
fstpt
cltd
shlb
jecxz
in
gs
stc
imul
ds
mov
std
jb
mov
mov
aas
pop
jp
iret
jb
dec
mov
pop
int
inc
push
jmp
fs
push
jne
and
pop
repnz
aaa
push
mov
outsb
mov
mov
inc
jl
dec
inc
ja
iret
outsb
dec
adc
outsl
push
sub
bnd
pop
xchg
mov
mov
cmc
dec
jbe
iret
imul
push
call
mov
int3
fldenv
push
int
bound
push
xchg
inc
jle
ljmp
jbe
ja
lea
outsl
jb
dec
inc
push
out
ljmp
jg
mov
xchg
in
fs
or
pop
sahf
cmpsl
mov
push
ret
pop
stc
jg
add
jne
xchg
mov
push
ljmp
add
inc
call
incl
loopne
jno
imull
add
movsl
cltd
sbb
ret
icebp
and
aas
cld
popf
enter
sbb
add
or
xor
lret
mov
sbb
and
ret
dec
cmp
and
daa
push
mov
inc
inc
mov
add
adc
xor
add
xor
jg
aas
inc
loope
nopl
adc
sbb
pop
or
getsec
push
xchg
push
add
push
pop
xor
add
xor
inc
jle
cmp
cmp
push
add
pop
pcmpeqb
adcb
pusha
xor
mov
adc
addr16
adc
jae
adc
add
cmp
add
sub
push
and
sub
fs
or
add
sbb
dec
mov
es
add
lcall
cmp
adc
inc
sbb
cmp
mov
xor
sub
sub
dec
xor
cmp
sub
push
aas
ds
or
xor
push
jo
shl
out
sbb
ss
add
cmp
add
and
arpl
cmp
aaa
adc
pushw
insb
jb
int
xchg
xchg
loopne
adc
ja
fidivrs
cmp
sbbb
mov
jo
lods
push
loop
frstor
movsl
jle
test
cwtl
push
int3
data16
pushl
out
push
mov
xchg
iret
inc
inc
call
sub
lock
imul
sub
xor
sub
popf
pop
mov
pop
sbb
or
or
stos
ror
jmp
sub
fs
dec
int
js
outsl
sbbl
out
mov
jle
push
lea
sarl
mov
mov
jle
dec
cwtl
divb
inc
mov
cmp
incl
pop
mov
xchg
push
xchg
jp
mov
and
mov
inc
xchg
imull
test
adc
cld
in
and
pusha
call
push
pop
sahf
jo
pop
xchg
into
xchg
push
jne
pop
inc
sbb
mov
icebp
push
fwait
push
mov
mov
pop
jae
std
fidivl
fidivrs
loop
std
ljmp
ret
lods
in
cmp
dec
mov
jno
testb
adc
dec
hlt
lock
call
std
pop
pop
fs
xor
pusha
fcoms
inc
push
pop
and
mov
fs
leave
imul
xor
shrb
push
jg
dec
pop
rcrl
pop
adc
inc
jmp
jmp
push
inc
in
push
in
ja
adc
jno
mov
jg
sub
sbb
adc
int3
sbb
dec
outsb
pop
shrl
inc
dec
adc
inc
jmp
cli
in
lret
push
dec
jo
popf
push
dec
or
call
imul
enter
call
cmc
push
insb
jle
xor
cmp
push
ljmp
cli
dec
dec
das
and
cmp
jnp
decl
cwtl
pusha
jns
or
lcallw
gs
inc
outsb
push
imul
jo
sbb
pop
push
push
fisubs
fsubr
dec
insl
fsubl
inc
loopne
pop
imul
pop
or
xchg
jbe
ficoml
cmc
jmp
dec
or
mov
xor
sub
call
ljmp
jle
sub
cmp
addb
es
or
add
jle
adc
das
cmp
inc
dec
push
dec
sbb
repnz
pop
sbb
push
adc
leave
adc
jle
push
adc
fs
and
inc
dec
jns
ret
aam
ss
and
loopne
das
inc
les
hlt
into
push
or
pop
pop
loope
dec
aaa
dec
iret
bound
sti
jmp
add
jne
daa
xor
aaa
push
mov
push
addr16
pop
sbb
push
add
pop
or
jg
adc
icebp
insb
ss
dec
adc
in
decl
cmp
into
push
jo
jl
arpl
pop
imul
stos
sbb
jp
or
das
subb
sbb
pusha
or
pop
decl
xchg
into
or
scas
pop
shl
jno
out
outsb
fs
push
lret
dec
pop
shlb
pmulhuw
daa
das
inc
pop
out
xor
cld
sbb
loopne
xor
ljmp
and
and
lcall
sub
hlt
jae
lock
fucomi
jbe
filds
movl
jns
icebp
out
aad
ja
push
ret
imul
pop
in
iret
push
out
pop
jmp
dec
incl
jmp
fistl
ljmp
pop
ljmp
aad
cmp
fstps
or
push
aam
jbe
jno
roll
iret
and
test
pop
std
out
clc
push
loop
je
test
mov
jg
in
jne
inc
loope
out
and
dec
xor
jb
in
xor
push
call
push
jecxz
loope
push
jle
rclb
outsl
lds
addr16
repnz
xor
cli
bound
dec
jb
push
roll
add
ds
jb
pop
fcoms
movsb
xor
leave
incl
xor
adc
outsl
aas
jb
or
and
pop
pop
movsb
sbbb
jae
gs
sahf
and
fcomip
inc
inc
mov
lods
and
scas
clc
add
out
xchg
push
inc
sar
incl
pop
roll
cmc
push
adc
enter
call
in
inc
add
dec
mov
ljmp
in
dec
repz
fistps
or
imul
out
leave
pusha
xlat
fcomi
mov
xor
dec
in
loop
mov
cmc
es
jg
pusha
ljmp
fisttpll
jg
mov
jo
mov
dec
stc
mov
incl
nop
or
mov
jnp
add
xor
sbb
cmp
mov
adc
inc
test
dec
subl
ds
bnd
mov
call
cs
jb
inc
mov
outsb
ljmp
jmp
sub
test
fdiv
cld
add
push
add
stos
movsl
rcl
es
cld
dec
inc
push
pop
fdivrs
test
add
xchg
xchg
int3
adc
push
insl
addb
repz
lods
xchg
out
mov
push
or
push
xor
cmp
mov
lret
imul
shl
scas
jmp
xor
dec
cmpsb
dec
into
and
mov
ror
dec
testb
jge
jnp
hlt
decl
jae
sub
xchg
das
push
lahf
mov
es
ss
cmp
or
push
aas
dec
cmp
dec
sbb
out
test
mov
add
lea
pop
push
and
in
sub
dec
cwtl
arpl
xchg
adc
pop
mov
repnz
jg
imul
push
dec
in
aad
cwtl
mov
push
cmovbe
inc
rcr
dec
sahf
push
mov
push
push
lock
jnp
and
sub
jg
decl
imul
push
sub
stos
outsb
outsb
filds
leave
sbb
imul
push
cli
inc
lods
mov
xorb
dec
dec
mov
repz
lret
jbe
sbb
imul
add
dec
dec
mov
lcall
in
push
cwtl
loopne
es
arpl
mov
jle
xchg
jno
pop
xchg
push
jns
pop
dec
add
int3
clc
addr16
stos
sbb
pushl
add
push
ja
pop
ret
jae
push
ret
inc
jb
fadds
icebp
pop
nop
inc
inc
pop
imul
call
in
push
lds
or
push
aaa
cmp
cmp
mov
fnclex
add
mov
out
jnp
mov
addr16
mov
hlt
pop
mov
cli
call
sub
pop
cmp
adc
lods
loopne
ljmp
pop
adc
pop
decl
cmp
dec
fiadds
jge
arpl
addr16
cmp
cmp
jl
ficomps
push
push
push
fildl
repnz
data16
dec
cmpb
dec
push
cmpb
decl
push
cmpsl
pusha
aaa
jno
pop
xor
push
sbb
repz
push
roll
lods
jnp
lds
leave
mov
and
sbb
xor
fs
sti
xor
insl
adc
out
ljmp
lds
and
test
inc
iret
inc
pop
ss
pop
push
sub
xchg
imul
pop
jle
negb
jle
decl
leave
push
inc
inc
push
fwait
testl
std
dec
cmp
es
sub
negb
popf
in
inc
push
and
jl
inc
loope
jbe
push
pushl
pusha
pop
repz
out
and
shlb
adc
pop
mov
rcrl
enter
scas
clc
xchg
addr16
fwait
cmpsb
pusha
aad
pop
pop
push
push
jle
lcall
test
stc
popa
dec
adc
cmc
or
cltd
jl
mov
push
push
daa
jg
jmp
inc
sub
movsl
rcrb
lahf
and
call
push
mov
inc
push
xor
mov
mov
jb
sub
lahf
pop
xchg
mov
push
inc
ja
mov
call
test
fcoml
cmc
and
fistpl
stos
or
pop
pushl
or
icebp
mov
inc
outsl
pop
inc
sti
sbb
fchs
ret
adc
ljmpw
jle
gs
mov
xor
add
lcall
adc
pop
xchg
cltd
mov
mov
dec
push
je
push
add
jmp
or
data16
push
pop
stos
jne
mov
cs
sub
dec
xor
ljmp
xor
jl,pt
jecxz
jle
addb
add
add
jp
jecxz
pop
les
shlb
jns
pop
adc
mov
cmp
out
addb
hlt
adcl
mov
mov
repnz
lock
jg
icebp
sbb
jo
dec
push
xchg
mov
dec
mov
xor
pop
ljmp
outsl
xor
mov
pop
mov
xorl
sub
jle
xor
lcall
rolb
mov
mov
mov
jle
jg
das
push
imul
cmc
out
fistl
jge
aas
mov
add
scas
incl
shrb
xor
add
rcl
sbb
or
pop
mov
call
push
hlt
mov
sub
push
mov
adc
jecxz
fcomip
decl
mov
addr16
inc
pop
jmp
lahf
lods
sbb
arpl
xchg
imul
add
data16
decl
jmp
jbe
outsb
lock
push
je
lods
subb
lds
into
pushf
push
jmp
sbb
arpl
addr16
push
fcomps
xor
rclb
and
in
pop
jae
sub
sbb
arpl
mov
push
daa
and
inc
cmp
fnsave
add
xor
mov
ficoml
push
inc
push
or
out
ja
mov
jg
push
addr16
std
int3
loopne
stc
fsubl
rorb
or
rclb
pushl
stos
sub
xchg
repz
add
or
sub
mov
add
aam
sub
lcall
push
mov
mov
add
or
mov
es
and
cmpsb
fistpll
outsl
ss
xchg
adc
pop
adc
adc
pop
es
push
cli
push
imul
divb
into
adc
mov
arpl
mov
cmp
sar
dec
bound
jl
and
mov
mov
dec
inc
jns
fs
cmp
adc
das
push
push
lock
mov
fistl
mov
and
scas
dec
pushf
inc
je
pushl
fadd
dec
inc
sub
or
loope
scas
jae
nop
dec
push
xchg
loope
sub
and
or
jae
repnz
jnp
mov
pop
mov
nop
push
hlt
sbb
sbb
and
lods
mov
and
insl
add
and
xchg
outsb
sbb
jg
movsl
sti
jne
and
push
xchg
cmp
jmp
push
adc
stc
inc
add
push
xchg
xor
popa
and
ja
cs
sbb
and
scas
sub
decl
cmp
push
xor
mov
ja
sti
fs
dec
scas
imul
push
imul
xchg
mov
dec
cmp
xchg
or
movsb
test
aas
rcpps
and
lcall
and
div
sbb
add
in
push
or
push
add
lods
adc
push
mov
fdivr
jmp
xor
or
mov
cmp
adc
add
lcall
outsl
clc
dec
cmp
jl
cmp
add
pop
jns
insl
cmpb
std
pushl
add
push
int3
insl
aam
loope
cmc
sub
push
jno
adc
lahf
rcl
sub
shr
xor
mov
jne
mov
mov
popa
xor
inc
mov
mov
sub
mov
pusha
test
jge
cmp
call
mov
test
ljmp
dec
ss
out
inc
adc
jg
mov
add
repz
ljmp
fidivrl
pop
mov
inc
fnstenv
cmp
incl
sahf
stos
mov
ja
popf
mov
jg
inc
inc
fildll
addr16
movsb
dec
inc
hlt
jmp
push
jno
jl
push
xor
jne
imul
jae
loope
es
jbe
cld
decl
ss
int3
pop
pop
fld
add
inc
jg
cld
push
int3
add
rcll
movsb
jae
int3
mov
sub
movsb
lock
movsb
mov
popa
decl
sub
jo
and
sbb
pop
jmp
add
cmp
sarl
fildll
push
out
adc
jae
sub
dec
ret
fisttps
xchg
inc
fstl
imul
jl
pop
outsl
lcall
jg
mov
push
jmp
imul
mov
xor
add
mov
add
add
dec
mov
movsb
inc
jge
out
js
push
out
and
popf
scas
loop
ja
dec
imul
fwait
inc
jmp
dec
xchg
xor
inc
dec
sbb
jmp
or
xchg
ds
push
dec
or
push
push
pop
das
sub
push
push
push
or
bound
out
xor
inc
inc
rolb
pop
adc
mov
cs
inc
roll
inc
nopl
stos
adc
push
push
cmpsb
pop
inc
xor
inc
inc
aaa
stc
sub
add
cmp
lcall
insb
daa
sub
jae
sub
outsl
inc
bound
inc
add
push
and
idiv
lcall
cs
adc
dec
and
push
sub
aaa
push
add
add
ljmp
sbb
cmp
adc
sub
xor
add
adc
pop
data16
decl
cmp
push
jno
jb
xor
aas
sbb
or
cmp
and
inc
xor
adc
idiv
pushl
or
daa
adc
cmp
aaa
cmp
sub
and
jne
mov
adc
cmp
sbb
lock
and
or
pop
and
or
scas
jne
les
adc
dec
xor
ds
decl
incl
pop
and
sub
add
push
xor
ljmp
inc
push
or
pop
xor
adc
cmp
pop
pop
sbb
push
ret
pop
cld
fildl
sbb
adc
add
xor
cmp
pop
and
pop
mov
jg
inc
ds
add
mov
cmp
es
lret
loope
outsl
in
push
push
adc
pop
and
pop
add
lret
add
add
fdivr
call
add
sub
and
pop
adc
or
cmp
cmp
or
and
add
adc
push
or
sbb
testb
pop
push
daa
add
cmp
mov
sbb
in
cltd
loopne
xchg
or
cmp
fcomps
add
or
inc
jge
and
enter
add
das
pop
or
or
jg
sbb
mov
and
add
xor
add
iret
add
dec
popa
out
fcomip
sbbb
inc
inc
pop
jbe
test
mov
arpl
outsb
xor
inc
out
xor
fs
dec
pop
push
jne
jp
outsw
push
imul
sar
pop
hlt
pop
push
inc
addr16
inc
push
dec
push
imul
ljmp
inc
push
jne
push
push
dec
dec
inc
inc
jo
xchg
jecxz
in
jmp
push
arpl
jo
gs
les
push
inc
push
dec
jb
jae
inc
push
pop
jg
in
outsl
pop
xchg
push
jne
jbe
jno
js
insb
dec
pop
adc
pushl
dec
jp
inc
jae
jns
ja
jp
outsl
pushl
push
inc
insb
pop
inc
bound
inc
cld
push
dec
popa
test
popa
test
test
test
add
fs
xlat
in
pop
das
add
add
jns
adc
or
out
sahf
out
sbb
sbb
sahf
out
sahf
pop
and
and
sub
sahf
out
sub
out
sahf
out
xor
aas
pop
sahf
out
sahf
inc
inc
push
push
push
push
add
sarl
je
je
cmp
sti
adc
sub
sub
xor
cmp
repz
inc
inc
dec
iret
repz
cwtl
dec
push
push
pop
pop
jns
out
jbe
fs
sahf
out
js
addb
xchg
nop
pushf
mov
movsb
test
mov
push
push
cs
dec
adcb
xchg
out
jecxz
jne
imul
inc
outsb
sbbl
cs
fidivrs
arpl
das
popl
fisttpl
push
imul
inc
jo
push
pop
pop
or
pop
add
add
cmp
jnp
cwtl
push
or
push
imul
int
or
aam
and
loop
in
mov
push
or
mov
mov
jae
lock
push
push
push
pushw
ja
jb
adc
pop
add
arpl
push
jnp
lea
xor
arpl
jnp
neg
jo
insl
push
outsb
cmpsl
aaa
dec
subb
fnstcw
inc
je
outsl
aaa
push
cs
push
mull
jnp
push
bound
das
push
gs
push
jmp
mov
into
jne
das
inc
mov
mov
daa
aas
push
fbstp
xor
arpl
adc
jo
pushf
fldcw
jg
das
je
js
leave
add
sbb
inc
inc
inc
sarl
inc
insl
insb
add
push
subb
pop
ja
push
push
jp
add
jb
loopne
jecxz
push
arpl
addr16
ficompl
jae
push
sub
sarl
mov
cmpsl
jae
lock
arpl
out
insl
js
jae
dec
push
popa
xchg
daa
push
xchg
or
adc
adc
mov
cmp
rcll
das
inc
jno
jnp
pcmpeqb
insl
aaa
dec
xchg
jo
sbb
pop
das
push
xlat
imul
das
pop
mov
aaa
pop
scas
cs
mov
fs
shll
inc
sti
outsl
xchg
pop
xchg
leave
xor
cltd
dec
and
orb
xor
out
inc
sub
push
push
jb
push
and
stos
push
clc
orb
mov
cmp
inc
or
jb
jo
push
popa
mov
loop
sbb
or
push
mov
idivl
xor
mov
pop
sub
arpl
lock
rcrb
jnp
outsl
push
bt
push
mov
bt
mov
dec
out
inc
xorps
enter
add
or
mov
cs
jnp
pop
add
xor
das
je
sbb
pop
sbb
xorb
pop
or
pop
into
mov
mov
insl
pop
xchg
lahf
incl
sbb
lahf
incl
dec
dec
movsl
inc
out
push
cmp
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
ja
pushf
fmull
das
and
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
mov
sbbl
push
pop
andb
mov
orl
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
bound
xchg
aaa
pop
sbb
add
nop
mov
sub
test
adc
add
dec
push
or
add
popa
inc
imul
adc
xchg
das
clc
dec
test
add
movsb
add
pop
stc
enter
pop
movsl
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
push
add
mov
xor
mov
rcr
fsubp
stc
jb
jle
scas
dec
cmpl
inc
push
push
push
mov
je
add
or
and
mov
scas
cmp
mov
jle
push
subl
aas
mov
in
rclb
pop
xorb
and
in
lock
daa
push
jo
loopne
dec
or
cwtl
inc
fldl
mov
data16
in
add
sub
or
mov
or
xor
out
ds
add
loopne
adc
jl
push
sbb
dec
repz
in
sbb
push
cmp
iret
repz
pop
cmp
sarl
and
mov
push
cmp
pop
jns
jp
push
cld
inc
cmp
repz
and
outsl
test
sbb
or
stos
push
mov
lea
aas
pop
push
mov
adc
out
adc
lods
ret
jns
out
push
movsb
mov
jns
out
test
cmp
repz
dec
inc
inc
repz
repz
xor
sub
repz
sub
sbb
sahf
testl
in
push
in
jns
out
rol
mov
sahf
out
nop
test
add
mov
push
stos
xchg
sbb
push
pop
jl
mov
jg
daa
xchg
daa
inc
lea
cmpsl
cmp
pop
xchg
xor
out
push
mov
repz
xor
in
repz
insl
add
push
pop
lret
iret
ja
mov
repnz
iret
jnp
das
push
dec
insb
mov
aaa
push
mov
outsl
imul
mov
sti
mov
outsb
addr16
inc
aas
mov
outsl
jne
pop
outsl
pop
jb
dec
gs
pop
orb
subl
imul
add
dec
inc
add
xchg
rorb
and
sub
mov
sub
or
add
add
add
rolb
jae
idivb
incl
and
mov
pop
push
add
push
mov
out
ja
pop
jg
std
popf
fmull
jle
addb
pop
popa
subb
in
jbe
add
out
pusha
pusha
or
jle
xor
add
mov
xor
out
aas
add
andl
or
outsl
int
in
push
andl
or
push
add
outsl
int
sbbl
pusha
test
jg
push
out
or
mov
pop
out
sbbl
fistpl
sbbl
addr16
out
outsb
add
data16
orb
inc
clc
add
push
int3
jmp
push
rolb
push
repnz
lret
sarb
cmp
loopne
clc
cld
pop
push
cmp
incl
pop
rcr
xchg
dec
cmc
iret
adc
movl
adc
ja
jo
testb
pop
jle
jmp
in
lds
cmp
push
out
pop
inc
into
int3
imulb
pop
push
inc
jle
loopne
push
mov
pop
xor
xchg
push
xchg
mov
mov
pop
or
dec
pop
repnz
xor
add
push
pop
and
fidivrl
das
mov
fwait
pop
mov
jg
ss
add
fisubrl
insl
xchg
cmp
out
jle
fisubl
pusha
pop
aas
push
pusha
pop
xlat
movsl
icebp
outsl
cmp
insl
fildl
das
pop
nop
mov
mov
out
pusha
pop
push
dec
in
dec
insl
add
mov
pop
dec
sub
outsl
push
das
rorl
pop
pop
shrl
push
jnp
mov
movsl
imulb
das
shll
in
das
rorl
jbe
xchg
das
shlb
sub
loopne
shrl
xor
roll
pop
lahf
rcll
subl
pop
push
shll
push
addl
test
in
das
sarl
data16
out
out
or
mov
push
jmp
mulb
or
jo
test
vmread
xor
add
add
scas
adc
xadd
inc
orb
loopne
cs
lock
in
cs
ljmp
in
xchg
in
lock
loope
xchg
out
add
aas
pop
adc
sbb
scas
adc
pop
xchg
sub
iret
int
aaa
insl
push
fdiv
lret
add
or
fldcw
or
adc
push
add
and
sub
push
add
inc
add
shrl
jle
or
push
xchg
add
idivl
out
adc
test
aaa
jnp
cwtd
int3
sbb
repz
jns
incl
xor
insl
jns
cltd
int3
insb
incl
xor
pop
fdivp
cltd
int3
xchg
incl
xor
xchg
cmp
int3
sub
out
mov
aad
pushw
cltd
daa
out
push
mov
std
push
xor
xor
xor
xor
xor
out
xor
xor
xor
jns
out
xor
xor
rcr
sahf
xor
xor
iret
xor
mov
ja
add
data16
repz
data16
repz
data16
out
js
push
data16
jns
xor
xor
int3
int3
in
sbb
out
incl
data16
ret
in
xor
test
add
mov
xor
popw
call
data16
out
xor
push
cs
cltd
pop
pushf
out
cltd
cltd
cltd
sbb
imull
cltd
cltd
xor
pushf
jns
out
pop
das
lcall
sbb
adc
add
xchg
xor
push
mov
pop
orl
push
data16
orl
int3
fmulp
xchg
add
int3
mov
jns
out
int3
int3
int3
pushl
push
int3
int3
jns
out
loop
or
push
jmp
jns
out
pushl
jns
int3
dec
mov
jns
jns
xor
int3
cs
out
sahf
out
int3
int3
int3
int3
in
jns
decb
incl
sti
ja
dec
data16
push
and
movsl
add
ss
int
add
xchg
xchg
add
add
add
add
add
add
mov
icebp
add
data16
jbe
mov
pushf
dec
add
mov
repnz
cmp
pop
in
cmp
icebp
lock
out
mov
mov
fsubrs
add
mov
pop
icebp
jg
sti
jnp
push
mov
push
fidivrl
imul
aas
loope
mov
mov
fistl
call
mov
mov
or
sarl
aas
pop
ss
mov
fsub
dec
push
ret
mov
fdivp
fdivrl
add
add
cmp
mov
negb
aas
inc
sbb
or
push
mov
fmuls
test
mov
mov
icebp
jg
sbb
or
add
sahf
cmp
push
out
mov
cmp
sbb
rcl
test
cmp
add
or
mov
testb
add
repnz
data16
add
xor
xor
nop
sarl
sbb
add
test
loopne
sub
dec
add
or
add
pop
inc
or
mov
cmpl
xlat
in
inc
sbb
inc
loop
aas
inc
lret
imul
aas
add
xchg
fdivs
js
push
add
mov
inc
jb,pn
push
pop
push
cmp
push
add
shrb
cmp
js
sbbb
sbb
xor
inc
mov
test
and
dec
pop
hlt
add
sbb
pop
hlt
nop
andb
add
push
adc
icebp
add
push
fmuls
adc
add
outsb
mov
mov
dec
jns
and
movsl
loope
mov
fiadds
pop
loope
dec
lods
les
addr16
rcr
push
negb
outsb
add
push
fs
or
pusha
cmpl
xchg
mov
shll
in
les
dec
out
or
popa
inc
xchg
xor
popa
iret
or
popa
mov
adc
call
aam
pop
xor
push
bound
pop
subl
or
insl
add
push
or
fsubs
lds
nop
lods
sub
mov
int
push
fadd
xor
jle
cwtl
mov
jo,pn
cmpl
fs
outsb
loope
and
mov
or
pop
push
push
into
sub
rorb
aaa
out
or
jecxz
sub
ror
or
sarl
insl
insl
mov
addr16
or
and
in
mov
rcrl
fidivrs
icebp
roll
xorb
daa
shl
outsb
add
and
iret
sbb
rorw
insl
jp
fisubl
repnz
or
rorb
and
ret
pop
mov
add
or
rcrl
xlat
pop
adc
inc
repnz
dec
mov
outsb
lea
push
lock
out
or
icebp
or
mov
popa
sbb
jae
add
pop
xrelease
ret
push
fldcw
shll
orb
xchg
or
push
je
mov
frstor
and
rol
mov
add
xor
sbb
pusha
int
scas
sbb
add
pop
imul
pop
add
pop
int
pop
mov
jae
into
sbb
push
bound
adc
popa
pop
pop
lds
jnp
xchg
imul
rorl
in
outsb
add
int3
loop
andl
pop
pop
pop
push
clc
or
pop
sbb
pop
or
xor
outsl
in
or
or
xorb
push
add
sub
je
dec
add
test
fndisi(8087
fwait
mov
pop
popf
cmp
outsb
push
push
mov
and
push
out
orl
push
pop
aas
fdivrl
test
add
ds
in
sahf
sbb
es
pop
mov
shlb
xor
mov
mov
or
mov
rolb
push
cmc
mov
pop
pop
mov
scas
xchg
das
and
jae
add
andb
mov
out
inc
fisubrs
inc
push
ds
hlt
clc
add
addb
cmc
fsubrl
mov
push
nop
nop
lock
add
test
and
ret
and
cmp
add
adc
sbb
or
xor
sbb
add
push
pop
test
ss
sbb
add
imul
push
outsb
andl
add
or
push
ja
inc
loopne
out
lods
sahf
xor
and
or
imulb
cmp
add
pop
add
add
aaa
and
mov
cwtl
and
dec
cmp
ret
jne
push
andb
pxor
sbb
inc
pop
js
or
push
je
xchg
mov
push
out
sbb
daa
outsl
xorl
add
jne
std
sbb
pop
aaa
add
es
jns
inc
add
pusha
scas
rcll
call
add
repz
pop
insb
and
add
fs
mov
inc
sub
jo
cmp
xor
sub
fisubl
das
xchg
dec
push
mov
and
inc
lcall
mov
inc
fnstenv
mov
gs
sbb
push
fimuls
imul
inc
add
xor
fimull
fidivl
popa
sub
push
sbb
mov
adcl
outsl
out
push
popa
loopne
ret
scas
add
pop
xchg
jo
pop
xlat
roll
jae
or
xor
and
sbb
xor
in
mov
lea
xor
testb
fimuls
jb
or
push
jo
pop
add
dec
testb
pop
adc
sbb
jl
movsb
loop
rolb
sahf
push
stos
or
loopne
xchg
pop
psadbw
loop
add
es
inc
por
repnz
mov
pop
add
and
loop
pop
or
das
ficomps
stos
cs
stos
or
jbe
fnstsw
jae
xor
jp
cld
js
arpl
jb
and
mov
sub
adc
outsb
sti
mov
dec
or
jnp
neg
fildll
and
daa
sarw
aaa
lahf
jbe
add
mov
inc
out
roll
pop
jb
add
or
fmuls
pop
bound
or
jmp
xchg
add
jo
pop
shrl
lcall
adc
mov
out
mov
ss
push
push
jle
fisttpll
out
jns
inc
inc
jle
testb
fiaddl
ja
xlat
fcomi
loopne
insb
mov
pusha
bound
xor
jo
fcomps
bound
jae
pop
xchg
out
popa
add
stos
or
xchg
ja
pop
pcmpeqw
cmpsb
jns
js
or
sbb
mov
xchg
adc
mov
outsl
dec
repnz
jae
adc
sbb
mov
cmp
inc
mov
adc
inc
shl
sbb
mov
jnp
adcb
fldt
pop
cs
scas
fs
adc
cmp
xlat
outsb
stos
push
outsb
sarl
das
sub
daa
incb
mov
sub
xchg
and
inc
add
sbb
push
sbb
xchg
xchg
orb
sub
ret
jae
out
outsb
popl
jns
mov
fbld
ret
pop
enter
cmp
mov
sub
sub
mov
sub
adc
mov
ja
pop
mov
imulb
loop
arpl
cmp
lret
adc
repnz
loopne
outsl
repz
jb
outsw
rorl
je
lods
popa
adc
andl
outsb
shrl
mov
or
sbbl
adc
imul
cmp
loop
loope
stos
inc
iret
pop
scas
or
mov
xor
mov
and
ja
xchg
push
or
das
insl
push
insl
xchg
jmp
inc
mov
outsl
dec
jo
mov
cli
scas
out
loop
push
outsl
and
mov
ja
out
push
loopne
pop
gs
inc
mov
add
sub
ds
fildll
rolb
insb
cmpsb
sbb
jmp
sbb
push
inc
jg
sub
fbld
pop
lret
inc
inc
fcompl
xchg
adc
adc
mov
jecxz
push
inc
sti
insb
dec
adc
pop
inc
jo
jae
pop
add
xor
xorl
orl
and
pop
mov
fs
push
xor
mov
sahf
jno
jg
sbb
scas
adc
xchg
pop
inc
js
jns,pn
sub
xor
sbb
pusha
adc
dec
pop
or
shrb
sbb
or
maxps
fs
xchg
dec
mov
mov
sub
stos
lods
adcb
xchg
jp
mov
push
mov
adc
xchg
mov
insl
repz
data16
mov
cmpps
add
pop
nop
adc
sbb
xchg
mov
subb
jae
and
xchg
stos
inc
jecxz
or
js
lahf
outsl
daa
andl
insl
rorl
mov
or
imul
xchg
sbb
mull
push
and
or
fcomip
pop
add
out
and
ret
inc
xchg
mov
add
js
adc
jne
or
jecxz
mov
xorb
insl
adc
mov
dec
or
inc
pop
bound
imul
adc
popa
scas
aas
jbe
lahf
insl
ja
popa
pop
imull
adc
dec
or
add
rcll
xor
dec
pop
add
les
test
imul
fnstsw
push
ret
insb
push
pop
jmp
adc
bound
pop
xor
imul
xor
push
push
add
or
pop
mov
bound
stos
pop
jae
jg
push
cmp
xchg
add
cs
mov
jb
cs
lds
int
sbb
imul
xchg
scas
insl
cmpsl
push
mov
push
fwait
insb
xchg
mov
dec
push
pop
scas
jo
aam
aas
pop
sbb
ret
sub
shlb
sbb
out
sbb
push
sub
push
mov
arpl
pop
bound
mov
jae
cmp
addl
mov
pop
xchg
mov
mov
cmp
ja
push
add
cmp
push
push
les
dec
and
dec
mov
jle
xorb
lret
and
push
pop
jae
or
stos
sbb
mov
movsl
loope
inc
dec
inc
es
imul
outsl
dec
push
and
std
imul
dec
mov
fs
inc
imul
or
push
mov
imul
pop
sar
jmp
repz
lret
arpl
gs
cwtl
scas
xor
xchg
sbb
mov
nop
adc
sub
add
adcb
addr16
rcpps
pusha
insb
mov
push
mov
adcl
adc
fisttps
jae
inc
inc
push
dec
adc
adc
lock
loopne
mov
gs
fdivs
adc
pop
push
mov
roll
lret
push
fmull
push
dec
loope
push
and
inc
xchg
push
rcrb
jle
negb
movsb
push
fldl
test
mov
push
adc
pop
xor
push
sbb
dec
gs
adc
mov
and
inc
movsl
in
mov
inc
jmp
lds
mov
jne
dec
and
dec
fisttpl
or
add
push
jne
jns
cmpl
add
xchg
and
push
sub
nop
xchg
scas
push
insl
add
lret
mov
pop
popa
pop
inc
pusha
jg
mov
cmp
sbb
fldenv
or
pop
mov
hlt
mov
jne
rcll
mov
enter
and
mov
cmp
and
shlb
inc
lsl
add
sbbl
inc
ss
xchg
bound
fwait
xor
or
call
dec
add
xchg
int3
dec
lods
cltd
jmp
test
imul
ret
in
inc
xchg
jae
cmpsl
adc
sbb
popa
clc
jo
and
ds
push
aad
push
add
fsubrl
ljmp
and
push
je
mov
push
fwait
mov
push
ret
jns
imul
push
xor
sub
fwait
adc
mov
fs
dec
fisttpll
push
js
stos
fstpl
inc
data16
push
das
inc
pop
sub
insl
cltd
into
jo
sbb
pusha
adc
imul
stos
jle
cmp
push
xchg
sub
lret
cltd
int
mov
jbe
out
xchg
and
pushf
js
cmc
outsb
or
pop
jne
int3
pusha
pop
stc
push
loop
popa
sbb
sbb
add
push
push
notl
sbb
pop
cs
or
dec
fwait
cmp
pusha
mov
imul
sub
pop
xchg
inc
je
inc
pop
or
push
adc
inc
xchg
mov
jo
dec
inc
dec
add
stc
push
jbe
cmp
dec
gs
lock
xor
or
fmuls
push
mov
mov
push
and
mov
cmpb
arpl
fstpt
cmp
xor
sub
and
das
je
sbb
test
pop
push
pusha
jo
xchg
insl
xchg
rep
mov
push
sbbb
and
add
in
pop
adc
inc
mov
xor
inc
push
out
cmp
je
es
out
xchg
dec
lods
cltd
adc
adcb
inc
bound
jge
outsl
mov
lock
adc
enter
jno
dec
jne
lods
call
sub
push
rolb
cs
and
pop
sahf
add
inc
jo
and
js
ljmp
mov
mov
jecxz
xor
xor
insb
cwtl
movsl
dec
shlb
inc
push
and
mov
or
inc
push
cmp
xchg
es
insl
rcr
xchg
cltd
jnp
mov
dec
mov
ljmp
push
insb
xor
mov
mov
add
or
inc
arpl
pop
pop
jno
sbb
subb
sub
inc
imul
mov
and
cs
outsl
add
scas
pop
arpl
cmp
imul
dec
outsb
out
sub
insl
das
aaa
movsl
popf
xchg
gs
outsb
and
subl
outsl
test
lods
stos
mov
push
mov
jnp
imul
mov
cmp
test
jo
je
pop
sbb
ficoml
jnp
jae
cmc
inc
rcrl
shll
mov
mov
cmp
sbb
and
dec
rolb
ja
jae
int3
jo
jno
insb
jne
cmp
arpl
cmp
ret
jae
in
push
shrb
pop
or
dec
mov
ja
jo
dec
test
test
jae
jo
cwtl
sub
clc
fs
sbb
sub
push
inc
jbe
push
xor
push
popf
xchg
sbb
sti
test
repz
sbb
and
or
pop
ret
arpl
xchg
push
test
dec
dec
in
and
inc
iret
dec
clc
add
je
adc
je
imul
push
and
sub
inc
pop
movl
push
lods
ret
jb
dec
pop
sub
dec
popa
jns
lret
movsl
popa
lret
daa
lret
xchg
fldenv
cmp
push
jne
xor
pop
inc
movsb
lods
mov
fs
lcall
jge
cmp
push
mov
inc
mov
inc
pop
push
and
es
push
dec
outsb
dec
jbe
in
push
pop
push
outsl
imul
xchg
push
and
bound
cmp
sbb
push
add
sub
fnstenv
adc
cmpsb
sub
inc
pop
nop
jo
rcl
adc
stos
mov
jg
mov
sub
test
or
outsb
imul
push
repnz
mov
xchg
push
sbb
cmp
or
xchg
pusha
jnp
xor
sub
incb
push
inc
addb
add
add
popa
mov
dec
inc
aaa
rorl
add
ljmp
inc
or
lret
mov
xor
pop
inc
cmp
test
push
fnstcw
out
push
push
xadd
cmovo
into
sahf
mov
nop
inc
rcrl
jo
mov
dec
loopne
sub
sbb
in
pusha
repnz
aaa
mov
inc
shl
or
pusha
jb,pn
popa
adc
push
jno
and
out
inc
sarb
dec
cld
jbe
lock
pop
add
cmp
outsb
inc
rcrb
out
mov
xchg
dec
dec
sub
add
xchg
and
js
mov
push
dec
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
