call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
inc
aam
in
hlt
jb
mov
shlb
inc
notl
divb
adcb
les
push
in
hlt
jb
add
inc
into
push
rolb
lock
and
xor
les
dec
in
hlt
push
sbb
inc
ret
add
int
out
rcrb
mov
aam
test
movsb
adc
pop
roll
imul
icebp
or
sbb
mov
fcoms
jb
loope
ffree
int
cmp
stc
or
sub
int3
dec
inc
cmp
push
xchg
sub
das
adc
outsl
inc
ret
xor
aam
cmpsl
mov
aam
les
mov
mov
and
jg
mov
mov
mov
loope
insb
ret
movsb
sub
xor
je
push
cmpb
lret
aaa
cmp
aam
outsb
lcall
pop
and
mov
sbb
adc
and
push
aam
in
hlt
jb
add
inc
ret
fs
je
add
adc
and
xor
mov
nop
and
add
jae
dec
rcll
lods
out
or
adc
dec
int
ficomps
adc
movsb
push
int3
add
mov
mov
xchg
lock
repnz
je
sub
mov
cli
push
xchg
aam
lds
xchg
adc
push
shlb
repnz
adc
and
xor
les
push
in
hlt
jb
add
inc
ret
fs
repnz
adc
and
xor
les
inc
imul
lahf
mov
in
inc
sub
out
sub
cmp
nop
inc
push
mov
stos
mov
in
xchg
movsb
xlat
insl
test
out
push
rcll
sahf
test
movsb
pop
cmp
adc
sub
and
es
cmp
xlat
imul
jne
push
mov
imul
adc
adc
js
mov
xchg
sbb
cmc
mov
push
loopne
add
rcrl
mov
add
scas
mov
sub
push
push
xchg
je
xchg
cmp
add
push
cmp
lds
and
xchg
push
mov
lret
inc
ror
add
sbb
pop
test
adc
sbb
add
rorl
dec
or
and
pushf
or
in
mov
in
mov
mov
aad
in
sti
xchg
ss
andl
imul
add
and
sub
loope
rclb
ljmp
mov
xor
xchg
jmp
and
addb
mov
les
add
sbb
das
pop
cmp
stos
and
loope
dec
insb
xchg
cltd
lds
and
add
cmp
mov
fldl
jp
std
pop
push
mov
out
fcoms
jnp
adc
mov
xor
jns
jo
inc
and
cwtl
pop
adc
mov
adc
jb
mov
sub
mov
adc
jnp
mov
out
jbe
mov
loope
mov
jecxz
mov
ret
pop
adc
insl
dec
mov
arpl
cmp
or
or
out
sub
dec
enter
cmpsl
lock
ss
fidivl
add
jae
lret
fstpt
mov
pop
jg
xor
das
cmpsb
cmp
pop
jo
pop
adc
and
push
push
loope
xor
pop
inc
scas
inc
loop
cmp
mov
lods
in
mov
pop
push
add
idivl
leave
lret
nop
jnp
fcoml
aad
lcall
mov
gs
ret
je
test
sti
sub
jne
mov
mov
repz
lahf
pop
imul
jge
adc
push
inc
sbb
fisttpl
pop
aaa
scas
cmc
or
hlt
in
ja
dec
pushf
pop
cmp
popf
jmp
push
lods
and
in
mov
sbb
call
int3
cmp
dec
das
fwait
cld
add
insb
icebp
fisubrl
jmp
in
mov
sti
fsts
imul
out
jl
clc
mov
sysret
mov
leave
adc
fwait
xlat
mov
lret
stos
sub
cmpsb
into
and
inc
sti
fildll
adc
xchg
mov
movsb
lock
jl
lret
mov
inc
pop
rclb
dec
pop
mov
fisttpl
inc
xor
sbb
mov
insb
sbb
dec
lahf
sbb
jbe
pop
stos
cmpsw
insl
das
movsb
adc
sbb
push
aam
cmpb
cwtl
pusha
sub
into
hlt
mov
scas
jle
jmp
jb
jb
sbb
pop
mov
adc
outsb
jge
out
sbb
cmp
mov
xchg
jg
jp
pop
inc
sti
mov
enter
pop
fsubrl
imul
xchg
enter
outsl
mov
mov
lock
push
jae
rorl
jb
cmpsl
js
iret
dec
fsubl
sub
cmc
xor
call
xchg
sub
mov
push
arpl
dec
mov
shl
ja
aas
out
mov
mov
scas
jmp
and
adc
out
mov
adc
inc
ss
repz
subb
inc
mov
movsl
pop
fistps
and
fsub
mull
inc
loopne,pn
xchg
cmp
adc
insl
int3
mov
cmp
mov
fldl
sbbb
popf
outsl
jne
inc
sbb
inc
mov
pop
cmpsb
mov
lcall
lcall
push
fwait
push
notb
loopne
xor
sub
mov
mov
jnp
push
jns
or
push
and
and
mov
inc
nop
sahf
jmp
cs
rcrl
jle
pushw
popf
aaa
repz
je
add
and
sbb
rcrl
aas
nop
cmp
test
xchg
jne
adc
insl
mov
cld
jno
outsl
inc
into
les
mov
rol
dec
push
sarb
insb
mov
cmp
fcmovnbe
mov
in
in
mov
mov
pop
or
mov
sbb
mov
gs
mov
mov
xor
pop
scas
mov
sbb
add
iret
pop
and
repz
stos
xor
std
jns
mov
xor
cld
cltd
shrl
dec
repnz
ja
pop
jp
jb
addps
iret
adc
jp
fst
jl
ds
sar
out
inc
push
lret
mov
fnstenv
imul
subb
xchg
and
jge
pop
or
jmp
adc
inc
jl
cmp
sbb
sub
xor
stc
mov
jmp
fisubs
add
sbbb
mov
jno
cmc
into
or
add
ja
inc
pushf
and
fists
mov
vmwrite
aad
inc
add
mov
xor
lahf
mov
arpl
push
mov
inc
push
push
sbb
mov
sbb
inc
jns
pop
iret
mov
sarb
lret
inc
sbb
dec
arpl
mov
pop
dec
lock
out
jmp
mov
bound
icebp
adc
mov
lods
and
mov
push
xchg
into
push
jnp
lock
lea
insb
xchg
sub
fisttps
roll
and
insb
sbb
pop
outsb
mov
cmp
xchg
pop
std
outsb
pop
mov
push
subl
and
roll
ret
or
or
and
pop
sub
shll
jp
popa
mov
xchg
popa
clc
fisttpll
subl
ret
dec
mov
and
test
shrl
push
inc
dec
adc
fbstp
adc
jbe
pop
cwtl
jle
in
push
pop
xchg
mov
pop
aad
jne
jecxz
lcall
ja
jmp
adcb
sti
xor
xor
cmc
clc
cmpl
fldcw
les
dec
addr16
push
jo
repz
iret
repnz
stc
mov
enter
and
call
add
mov
jl
fistpl
mov
or
les
cmc
imul
nop
daa
pop
pop
gs
inc
in
sbb
int3
push
test
data16
sar
pop
out
cmp
jbe
shlb
add
fwait
mov
das
out
jecxz
out
jg
cmpsl
outsl
mov
aaa
in
sub
add
inc
insl
xchg
mov
fistl
aad
hlt
arpl
out
push
inc
ret
out
xor
fwait
jl
and
frstor
cmp
notb
lret
jo
jo
mov
mov
sbb
jns
mov
xchg
test
push
pushf
call
dec
test
popf
xchg
xor
cmpsb
mov
or
loop
mov
adc
outsb
test
cs
shrl
cld
inc
lea
mov
sub
add
in
pop
adc
xchg
lods
inc
inc
ljmp
sbb
jle
in
dec
push
mov
mov
push
jne
test
sub
out
iret
lret
std
push
cmpsb
dec
mov
and
mov
lcall
dec
movsl
push
sub
mov
xchg
push
or
leave
leave
out
sub
mov
into
or
jp
mov
jmp
imull
mov
dec
and
cltd
enter
flds
sub
push
push
cmpsb
or
pop
aaa
cld
es
xchg
nop
incb
in
or
push
xchg
mov
insb
mov
gs
gs
cwtl
mov
xchg
jnp
inc
ljmp
repnz
lret
push
sbb
jb
jp
test
xchg
fstpl
fs
dec
sbb
mov
lds
add
call
pop
addr16
leave
lods
jg
push
stos
dec
inc
sbb
adc
pop
xchg
insb
inc
outsl
daa
sub
mov
jno
add
pop
idivb
jae
add
mov
cmpsb
lea
push
lahf
movsl
test
dec
mov
ja
mov
cltd
lock
int3
sbb
shll
ss
mov
call
inc
ret
lock
sbb
stc
arpl
xor
stos
std
dec
imul
lret
add
andnps
mov
ret
jg
loop
pusha
xor
pop
int
inc
ljmp
ljmp
in
negl
sbb
pop
cmpsl
pop
add
adc
aad
sub
fnstenv
repz
xchg
dec
stos
adc
jb
in
out
add
jmp
jb
ss
out
sub
out
cmpsl
mov
push
add
mov
fucom
lods
push
push
fs
mov
sub
fidivs
xor
es
dec
repz
xchg
cwtl
addl
mov
jnp
push
pop
ret
and
shll
adc
jb
lea
lret
xor
jmp
cmp
lret
mov
jns
imul
addb
inc
push
dec
fbstp
sub
inc
pop
and
or
into
or
xor
dec
outsl
fldenv
enter
out
in
ret
ds
mov
or
popl
daa
mov
cmpsl
jg
aaa
inc
cmpsb
xor
push
jg
inc
sub
push
pop
and
jle
cs
outsl
push
mov
mov
jg
or
xchg
out
jmp
add
cwtl
and
test
jge
sub
and
push
std
or
jecxz,pn
or
cmpsb
sar
or
loope
cmp
push
cmp
dec
popa
mov
add
mov
adc
and
rcrb
iret
fwait
inc
in
xchg
popf
sub
add
sub
push
sub
fs
addr16
add
dec
ljmp
mov
in
mov
bound
leave
int
out
ja
and
lret
ret
pop
hlt
push
xchg
insl
clc
data16
mov
inc
dec
loop
imull
sbb
stos
mov
mov
pop
sbb
scas
hlt
scas
cmp
out
xor
mov
aam
dec
push
mov
push
mov
xchg
sbb
add
sbb
icebp
dec
stos
loope
cli
dec
repnz
inc
jp
addb
out
repnz
js
xor
jbe
push
cmp
add
push
adc
imul
jp
cmp
jbe
daa
test
add
xor
aad
aad
ss
mov
nop
xor
in
and
repnz
pop
push
and
pop
jnp
or
adc
sub
mov
sub
inc
xchg
mov
xor
repz
pop
mov
outsb
lret
jno,pt
rcr
lock
jge
jo
sub
stc
out
xchg
js
xor
jg
or
and
xlat
jp
int
push
mov
out
notb
lods
cmpsl
push
addr16
mov
mov
sbb
sub
adc
out
mov
xor
mov
fisttps
rcr
jg
ret
jne
mov
cmpsl
leave
inc
push
mov
lock
shl
mov
xchg
aad
and
cmpb
jl
lret
and
pop
and
sbb
pop
xchg
jb
icebp
sub
fldcw
stos
or
test
fdivrs
sar
mov
mov
ret
cmc
adc
xchg
nop
pop
adc
jb
es
mov
out
testl
js
mov
adc
add
movb
push
fdivrs
loopne
fbstp
jecxz
and
sbb
test
idivl
stos
ror
sbb
sbb
loop
popf
sub
je
mov
lret
pop
add
dec
imul
mov
stos
ljmp
sub
int
push
push
mov
or
mov
xor
jecxz
adc
or
push
loopne
scas
xor
mov
xchg
fistps
mov
dec
shlb
jmp
sub
cmp
jge
mov
push
rcrl
mov
sbb
stc
xlat
sbb
imul
jg
bswap
mov
loope
test
repnz
enter
push
es
jnp
cld
clc
jbe
fldl
out
outsl
xchg
or
fwait
cltd
fidivrs
add
arpl
jb
mov
jbe
cmp
lods
mov
ret
fisubs
mov
push
pop
add
rcrl
roll
sub
mov
loopne
in
push
xor
mov
addl
arpl
fmulp
ficomps
cmc
sbb
jbe
pop
popl
xor
or
aas
adc
je
adc
push
pop
hlt
in
fbstp
scas
les
sub
leave
sbb
sbb
std
inc
xchg
cmp
cmc
mov
insl
xchg
jge
aas
imul
mov
lahf
ror
shl
int3
push
cmpsl
lds
inc
cmp
sub
and
das
mov
xchg
rol
leave
mov
xorl
in
rorb
adc
daa
push
mov
pop
mov
out
in
sub
sbb
pop
cwtl
push
mull
xor
mov
mull
repz
pop
pop
fstpl
ljmp
sub
loop
rcr
pusha
inc
jns
inc
pop
inc
xchg
mov
inc
and
mov
iret
jae
bound
rorb
lret
nop
jne
mov
ss
sbb
cmp
adc
or
ret
fwait
imull
stos
and
mov
stos
mov
dec
fstl
andps
xchg
out
lret
sub
fs
stos
mov
jno
outsl
cld
lea
in
scas
push
imul
jbe
shrl
aad
out
sbb
mov
mov
fwait
jp
aaa
pop
repnz
pop
mov
cmp
cmp
enter
adc
and
cmp
inc
adcb
lret
mov
add
or
imul
sarb
adc
cmpsl
jge
add
fwait
pusha
out
imul
cmp
out
es
add
daa
sub
shll
push
popf
test
dec
es
sbb
mov
xchg
xchg
je
fxch
pusha
test
cmpsl
loopne
and
repnz
cmp
mov
xchg
movswl
int3
leave
dec
fsts
ds
dec
nop
mov
pop
insl
inc
cmp
sahf
mov
pop
push
outsb
xchg
xor
scas
call
nop
mov
mov
nop
sti
inc
or
xor
lods
fs
add
sbb
enter
adc
push
or
or
iret
adc
mov
jns
into
mov
fxam
enter
adc
xchg
pusha
subl
lahf
cmp
mov
nop
mov
or
in
xchg
mov
push
sbb
insb
mov
and
dec
repnz
xchg
hlt
dec
popf
pop
xchg
stc
adc
inc
add
mov
xor
fidivs
and
ljmp
shll
xchg
mov
sbb
mov
aaa
ss
fstps
adc
in
inc
call
sub
aad
sub
dec
lahf
pop
jecxz
mov
xchg
aam
ljmp
shrl
cmp
movsb
repz
mov
push
and
inc
scas
iret
rclb
call
push
enter
sub
pop
jb
stc
inc
mov
lcall
cmp
test
loopne
das
ret
or
and
jmp
jo
ja
pop
int3
mov
rcll
add
jb
push
out
xorb
pushf
push
mov
enter
pusha
cmpsb
orl
xchg
pop
sbbl
mov
fldcw
lock
mov
jecxz
dec
ud0
sti
in
adc
sbb
dec
aad
ljmp
lods
shll
xchg
push
in
mov
xchg
xchg
mov
mov
dec
sub
mov
xor
mov
push
push
adc
dec
cmp
out
ret
cmp
or
cs
pop
push
inc
neg
mov
fildll
sahf
mov
sbb
loopne
je
dec
shl
shlb
or
roll
inc
andb
mov
jnp
movsl
pop
sub
pop
sub
faddp
stos
add
mov
mov
aam
sub
addl
ja
pop
hlt
inc
in
mov
inc
rorb
pop
dec
in
cmpsb
into
nop
rorl
sub
call
decb
popf
cld
sbb
add
jmp
push
mov
stc
stc
stos
mov
mov
and
lret
pop
into
iret
pop
lret
xlat
std
mov
sub
or
into
add
mov
cmpsb
leave
sbb
pop
insb
push
inc
in
sbb
push
mov
mov
jbe
and
add
rcll
add
ficoml
scas
stos
inc
lret
insl
mov
rorb
into
cltd
fcoms
mov
dec
sti
jns
test
xchg
push
mov
bnd
fiaddl
cs
bound
imul
xor
enterw
lock
bound
sbb
cld
xchg
fdivs
sbb
and
dec
cmp
and
leave
es
cmp
jbe
pop
and
lret
xor
sbb
insl
jmp
pop
js
lahf
sub
inc
hlt
out
mov
cmpsl
lret
jl
rcll
nop
test
outsb
jmp
in
inc
adc
adc
insb
sub
movsl
out
push
pop
aas
std
mov
jne
cmp
fldl
ret
fnsave
nop
or
jg
ja
lock
inc
dec
xchg
into
pop
inc
xor
rolb
inc
scas
pop
insb
test
inc
call
and
out
lods
jecxz
sub
xchg
mov
pop
mov
hlt
cwtl
loopne
fnstsw
cs
mov
push
stc
jg
std
nop
pop
scas
shlb
push
pop
out
push
add
mov
mul
fiaddl
dec
gs
and
lods
leave
cmc
ja
dec
je
fbstp
dec
xor
sbb
and
stc
fldenv
cmp
jns
add
and
mov
rcl
aaa
iret
lea
aas
ss
cli
push
mov
push
out
and
dec
negl
jge
sar
push
daa
mov
cmp
fisubl
fimuls
xchg
sub
push
hlt
xor
cltd
cmp
push
pushf
mov
in
fiadds
das
push
jno
clc
lods
cld
rorb
mov
dec
push
and
xor
sub
test
fnsave
mov
xor
mov
out
aam
imul
adc
mov
pushf
insl
and
xor
xor
adc
cli
push
loop
pop
jno
icebp
push
sub
jmp
push
das
push
fisubs
or
or
stos
das
mov
insb
popf
scas
movsl
popa
lods
nop
jle
cmpsb
adc
dec
sbbb
andb
inc
sub
mov
cmp
jno
inc
mov
mov
in
mov
mov
outsl
pop
sbb
cmp
icebp
jecxz
bound
cwtl
push
pop
roll
add
pop
aam
push
fcoml
jmp
push
int
imul
cmp
nop
mov
andb
cmp
mov
push
shr
gs
jl
popa
div
push
aam
mov
stos
shll
dec
cmp
cmp
popf
and
rcr
in
out
mov
add
mov
movzbl
pop
cmc
cli
aad
mov
iret
rcll
or
lds
push
mov
xchg
ljmp
pop
xchg
cld
add
frstor
out
fldl
inc
xor
or
cmp
add
or
fsts
inc
cmp
push
ret
xchg
jbe
mov
inc
and
xchg
cmpsb
bound
mov
mov
aam
dec
aas
inc
fisttpl
in
int
movsb
inc
pop
pop
xchg
das
dec
je
adc
repnz
stc
call
pushf
xchg
lret
cmp
es
lods
sahf
push
loopne
jo
add
fstpt
push
inc
mov
xor
sub
jae
scas
imul
adc
pminub
push
push
sbb
mov
roll
pop
loopne
xchg
mov
pop
push
adc
loopne
mov
int3
out
xchg
shlb
jno
inc
jmp
pusha
leave
mov
in
dec
decb
rolb
jge
fsubs
sbb
pop
iret
push
lods
push
dec
or
in
ret
jmp
sbb
inc
je
mov
test
gs
ds
sub
pusha
fdivs
mov
pop
cltd
js
mov
push
mov
jp
sahf
out
test
mov
std
dec
jmp
ret
leave
sub
imul
jmp
bound
insl
int3
in
xchg
popa
cmp
dec
scas
xor
xor
add
inc
ret
fs
repnz
adc
and
xor
les
push
in
hlt
jb
add
inc
ret
fs
repnz
adc
and
xor
les
push
in
hlt
jb
add
inc
ret
fs
testb
xchg
and
xor
push
in
hlt
jb
add
inc
ret
into
loop
test
pushf
in
fcmovnu
lret
int
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
sub
jns
sbb
jns
addr16
cmc
test
cltd
push
mov
add
fnstenv
pop
shrb
jne
or
jns
imul
clc
push
jmp
xor
jp
xchg
or
inc
stos
dec
sbb
mov
add
add
push
xchg
push
push
test
sbb
imul
lret
lcall
fsubr
sbb
jnp
ret
aad
cltd
xchg
mov
push
xchg
jmp
dec
dec
mov
jne
push
adc
ss
test
mov
add
push
jp
out
inc
test
mov
rep
in
adc
cmc
mul
rolb
in
lock
cmp
sbb
adc
leave
dec
push
and
cmp
loope
shlb
dec
cltd
arpl
pop
cltd
or
mov
jae
mov
sbb
andb
jl
mov
lods
add
mov
sbb
push
fxch
lret
dec
jg
sbb
nop
pop
mov
xor
out
bound
jmp
leave
add
pop
mov
push
and
dec
idivl
mov
jg
push
lods
pop
je
dec
xchg
imul
ret
sbb
fisubs
sti
and
orb
mov
mov
mov
xor
pop
pushf
sub
imul
cltd
pusha
mov
add
adc
and
xor
shrb
sbb
or
jns
imul
cltd
pusha
mov
add
adc
and
xor
rorb
mov
sbbl
cli
icebp
mov
stos
add
add
mov
cmp
xlat
out
ja
pushf
ljmp
dec
xor
and
hlt
leave
add
out
loope
mov
pusha
jae
lds
sbb
push
cwtl
push
dec
push
mov
xchg
mov
sub
jle
testl
mov
jmp
idivl
push
sub
arpl
ret
jl
es
cmpsb
mov
notl
sub
popf
or
xchg
ljmp
inc
mov
xor
insb
test
and
icebp
jne
cmp
push
mov
cmp
pop
push
mov
or
xor
int
fs
xchg
cltd
aas
add
push
daa
and
pop
adc
ret
cmp
pop
decb
jle
testb
mov
push
adc
clc
pop
adc
in
xor
pop
and
jge
imul
inc
and
sub
paddsb
clc
std
inc
pop
jb
in
mov
shlb
ljmp
hlt
jge
sbb
push
pop
xchg
shl
negl
sbb
ret
sub
in
and
push
js
xchg
push
out
scas
xchg
imul
sbb
test
xor
cmp
lock
test
mov
mov
push
mov
sub
xchg
incb
jl
add
data16
shl
lret
adc
mov
lods
std
adcb
scas
mov
sbbl
push
mov
lcall
scas
imul
ljmp
xor
jecxz
xchg
adc
sbb
lea
es
loope
adc
iret
ja
jg
and
adc
and
push
add
mov
ret
in
and
sbb
test
mov
cwtl
add
lahf
mov
lea
xor
sbbl
pushf
test
inc
inc
xorb
push
out
cmc
or
pop
dec
inc
mov
std
sub
jg
cmpsb
shrl
sub
cltd
add
outsl
pop
sbb
inc
cmp
push
or
aam
idivb
pop
mov
movsb
or
test
push
sub
les
mov
push
pop
lret
push
add
lea
dec
loop
pusha
loopne
xchg
mov
pop
cmp
mov
xor
mov
jecxz
cmpsb
and
jbe
into
mov
fbstp
addr16
int3
adc
mov
addr16
scas
lea
mov
mov
sbbb
shr
xchg
fwait
and
out
mov
push
xor
mov
in
mov
daa
fsubl
jge
outsl
iret
fnsave
sbb
mov
ficoml
push
pop
xchg
sub
negb
jle
insb
in
jns
js
pop
inc
jnp
add
cmpsl
sub
dec
xchg
and
lds
jnp
sahf
movsl
in
gs
pop
into
je
movsl
cmp
jbe
subb
push
repnz
fnsave
or
test
inc
push
bound
sub
xchg
sbb
call
cli
and
push
push
pushf
jno
les
inc
mov
or
xchg
mov
add
jo
lods
lods
mov
data16
or
or
sub
rcr
mov
inc
sbb
inc
add
xor
popa
xchg
or
jecxz
jbe
pop
xor
test
repz
mov
outsl
and
icebp
bound
jecxz
push
xchg
pusha
jge
out
insb
es
push
mov
imul
roll
mov
jl
ss
push
dec
inc
sbb
push
jns
icebp
pushf
into
ret
dec
popa
mov
loopne
scas
subl
lahf
fistl
ljmp
jl
test
push
out
jnp
jp
xchg
icebp
pop
fists
inc
divl
push
in
push
sub
sub
and
dec
sbb
ss
mov
lea
std
stos
rcrb
imul
inc
out
xchg
mov
pop
js
sub
sub
mov
pop
mov
lret
dec
out
mov
xor
fldl
fbld
dec
mov
rcrl
out
lods
out
push
xor
mov
sbb
dec
in
movsl
pop
js
out
push
sti
jo
mov
sbb
sarb
mov
nop
mov
in
sub
or
std
jae
popa
inc
mov
pop
dec
sbb
push
mov
cwtl
or
ds
pusha
mov
fwait
push
jnp
js
and
and
xor
jne
sub
sub
push
dec
inc
aaa
push
lods
xor
rcr
and
and
mov
mov
iret
jmp
pop
ja
mov
bound
nop
popa
mov
in
jmp
push
jnp
in
inc
cld
inc
xor
or
ljmp
push
test
xchg
lret
dec
sahf
mov
pop
jns
ret
lahf
sub
pop
sbb
loope
nop
add
jnp
loopne
jmp
mov
mov
xlat
pop
out
and
push
push
xchg
sub
push
not
das
push
inc
pop
lret
push
adc
push
cmp
inc
ret
sbb
loopne
cmc
push
aaa
dec
pop
scas
push
inc
pop
sub
fldl
cmpsl
fimuls
or
mov
ja
push
mov
cmp
dec
pop
addb
fnstcw
scas
cmp
mov
push
pop
xor
popa
mov
call
into
sub
pop
add
movsb
in
ja
mov
call
aas
jae
sahf
xor
mov
sub
test
adc
adc
sub
push
xchg
mov
pop
xor
js
and
sahf
cmp
and
mov
cli
add
cmpsb
in
xchg
xchg
mov
loope
cwtl
or
add
test
test
rclb
hlt
lahf
push
rolb
rclb
lret
and
aaa
out
fstps
addb
mov
icebp
and
pop
test
inc
movb
xchg
fcoms
inc
loopne
or
pop
loop
inc
out
rcl
pop
fs
inc
dec
gs
in
out
add
add
pop
cmc
mov
adc
push
mov
push
sarb
jg
push
dec
mov
ds
stos
sub
push
test
pop
popa
add
mov
repz
dec
repz
loope
dec
jmp
jbe
inc
mov
sub
push
mov
sub
fsubl
add
inc
loopne
pusha
jmp
andl
test
sbb
fnstenvs
arpl
add
out
fmul
bound
jo
lcall
movb
hlt
inc
push
and
pushf
and
jmp
shld
lcall
adc
inc
cmpb
sub
outsl
sub
mov
int3
lahf
mov
jae
outsb
mov
cmp
add
dec
jb
sbb
rcl
adc
jl
cmp
addl
sbb
ja
pop
cmp
push
dec
inc
aaa
pop
subb
add
add
pop
jno
insl
dec
mov
adc
xor
jbe
xchg
mov
push
jb
dec
fimull
lock
rorb
in
sbb
sub
adc
cmpsl
popf
pop
jo
cmp
cmp
shlb
add
ja
mov
jmp
fnsave
cmp
or
cs
adc
sbb
xor
jne
enter
xchg
in
adcl
cmp
pop
push
sti
popf
or
lds
test
inc
leave
out
lea
sbb
popf
xchg
fwait
sub
fcomip
jo
jo
mov
jl
shll
add
inc
clc
out
jno
into
or
mov
or
and
fwait
imul
movsl
jg
push
cmpsb
outsl
daa
mov
mov
fsubrs
ds
adc
in
lret
jns
mov
repz
inc
fs
and
pop
fdivs
das
push
das
fwait
mov
fdivr
aad
sbb
mov
push
pop
adc
leave
in
mov
xor
ljmp
lret
loopne
lahf
pop
test
cmp
out
xor
mov
movsl
xchg
add
xchg
out
pop
mov
out
push
ret
push
je
xchg
xlat
pop
mov
add
inc
jmp
cs
add
push
clc
mov
mov
sti
test
mov
pop
movsl
inc
hlt
call
rorb
out
cmp
test
sbb
xor
push
ljmp
cld
or
scas
lcall
or
lcall
inc
imul
add
push
jae
rorb
cs
out
icebp
push
andb
xlat
or
inc
in
mov
lahf
inc
xchg
inc
lret
mov
xchg
fildll
movsl
popl
mov
scas
inc
dec
je
lret
cltd
mov
and
and
xor
outsb
push
loope
lea
mov
push
mov
stos
sbb
rcrb
sarl
and
dec
mov
cmp
mov
out
xchg
add
xchg
loop
mov
mov
aaa
jnp
and
loopne
mov
in
les
loope
nop
aad
jno
gs
sub
mov
add
mov
pop
and
mov
cmp
add
xchg
mov
xor
mov
or
mov
out
outsb
hlt
pop
lahf
subb
mov
inc
sub
xchg
mov
iret
mov
inc
enter
ficoms
add
adc
mov
and
add
das
out
sub
pop
inc
sbb
inc
popf
loopne
or
pop
icebp
dec
pushf
imull
push
enter
sbb
je
in
dec
jge
jp
dec
sbb
xchg
cmp
or
mov
mov
jp
push
leave
push
pusha
xchg
inc
loope
loopne
sub
cmpsl
popf
xchg
mov
mov
xlat
pop
cmp
dec
ljmp
enter
inc
and
stos
rcrl
sub
out
loop
dec
xor
dec
loop
sbb
mov
stos
push
mov
jne
add
pop
push
punpcklwd
insl
repnz
lret
out
clc
loope
mov
jmp
addr16
int3
or
add
in
lea
cmpsb
gs
mov
or
xchg
mov
insl
pop
add
cmc
xchg
mov
outsl
sbb
jmp
aaa
mov
mov
es
and
in
sub
shlb
jne
cmp
mov
cld
ljmp
dec
les
das
imul
jbe
imul
popf
ljmp
sbb
inc
dec
pop
subb
mov
hlt
mov
imul
xor
push
jno
cltd
push
jp
popl
mov
lret
dec
lret
lret
fimull
cli
lods
mov
je
xor
test
mov
imul
xchg
add
lcall
cmpsb
dec
lock
push
push
add
ja
xor
mov
sbb
mov
push
jp
xchg
adc
jne
and
leave
loop
add
mov
loopne
aad
xchg
xchg
int
fdivs
sti
aas
lcall
cmp
jb
ret
xor
in
xchg
fistpl
gs
in
in
shrb
mov
in
int
leave
pop
shl
leave
pop
test
test
sub
in
push
leave
xchg
ljmp
sbb
sub
xchg
push
add
xor
pop
pop
mov
out
xorb
mov
xchg
lea
cmp
sbb
add
inc
scas
adc
push
and
out
mov
call
add
into
sub
std
sarb
xchg
mov
xor
mov
ret
dec
add
test
inc
pop
aaa
or
inc
inc
mov
push
pop
pop
lods
icebp
pop
pop
lahf
mov
sub
addr16
jg
icebp
mov
adc
lret
xor
inc
das
int3
mov
out
mov
jae
fdivrl
jg
cltd
add
cli
pop
hlt
adc
popa
scas
in
inc
ret
sbb
sbb
inc
lods
outsb
popa
jg
mov
or
xor
adc
shrb
xchg
int3
rcrb
jnp
shrb
adc
cmpb
fmull
and
xchg
outsl
pop
mov
sbb
clc
cmpsl
pop
jecxz
xchg
test
xchg
push
or
lods
out
cld
out
lcallw
aas
repz
add
lcall
adc
imul
cmp
and
leave
cwtl
inc
cmp
mov
xor
fimuls
pop
xlat
insl
pop
push
fs
je,pt
mov
jne
adc
ret
mov
cltd
std
fistpl
push
fs
push
hlt
inc
ror
nop
or
repz
inc
cmp
sar
iret
sub
jp
mov
mov
jmp
in
stc
gs
lret
gs
in
xor
aam
xchg
movsl
sahf
and
in
add
xchg
inc
xchg
adc
bound
dec
sub
outsl
fldl
pop
les
push
mov
jno
add
cmp
mov
mov
xchg
jl
popa
add
xor
or
popf
xchg
or
sbb
adc
cmp
jmp
dec
fildll
pop
mov
jmp
sub
repnz
inc
sbb
sbb
cld
sarb
inc
jns
push
fsubrl
jecxz
sub
sub
xor
and
adc
add
sahf
outsl
mov
push
cmp
dec
mov
mov
cltd
add
int
push
bound
lret
repz
scas
dec
rclb
mov
pop
push
sub
stos
cli
cmp
ret
loop
xchg
xchg
ret
sub
sbb
xor
or
xorb
rcll
sub
es
pusha
adc
stos
lods
adcb
add
jbe
les
xchg
sub
arpl
scas
mov
mov
push
push
xor
cli
jle
jl
push
add
jno
inc
in
jae
add
pop
es
add
out
xor
jb
or
cmp
stos
push
mov
out
lods
jae
xor
inc
inc
cmp
inc
js
pop
sub
jne
push
xchg
shll
mov
push
rcrl
xchg
sub
jbe
es
subl
imul
out
or
in
mov
add
enter
das
lret
stos
test
dec
xor
testl
push
dec
scas
dec
push
xor
add
rcrl
xor
xor
cmpsb
jl
sbb
arpl
mov
leave
and
or
cmp
push
repnz
je
sbb
mov
add
repnz
out
xchg
dec
roll
xchg
adc
loopw
fisttps
xchg
push
inc
lcall
das
xor
mov
ret
fstpl
xchg
cmp
outsb
jnp
jp
shl
arpl
sar
in
out
ss
push
arpl
adc
pop
ficoms
test
fld
cmc
xlat
ret
xor
push
ret
or
call
or
outsb
mov
vpunpcklbw
loop
aam
dec
cmpsl
cmc
in
push
xor
fsubr
mov
jns
jl
cmp
stos
push
pop
xchg
cmpsl
inc
jno
ss
fstp
jecxz
pop
xchg
loop
jmp
mov
push
fcomps
shlb
mov
lock
sub
mov
daa
ss
cmp
repnz
lret
sub
notl
cmp
sub
pop
sub
adc
iret
jg
int
mov
mov
rcrb
mov
in
and
comiss
push
push
jp
stos
xchg
cli
adc
out
movsb
xor
mov
jmp
ljmp
rcr
jns
stos
ja
mov
fmull
jg
xchg
aaa
imul
adc
mov
into
lret
jo
jecxz
stc
gs
out
mov
add
push
nop
aad
mov
ss
sbbb
sbb
js
dec
mov
testl
dec
daa
enter
sarl
jmp
jle
lret
xchg
jle
pop
xchg
dec
movsb
pop
fcoml
lret
add
cld
test
cltd
push
adcb
repnz
sub
dec
inc
dec
arpl
gs
out
cmp
loope
icebp
mov
shlb
inc
cld
sahf
sbb
lcall
cmp
mov
outsl
pop
lea
mov
outsl
mov
jle
pusha
lahf
repz
faddl
pushw
cmp
test
or
ja
in
outsb
pop
lea
and
xchg
adcl
arpl
insl
inc
cmp
inc
nop
ja
sti
clc
dec
pop
sub
jg
out
stos
jae
bound
leave
fsubp
cmovno
aad
dec
xor
xchg
stc
push
icebp
mov
sar
fdivrl
dec
inc
pop
push
sahf
xchg
mov
mov
shlb
or
aaa
jo
push
inc
dec
arpl
pushf
push
adc
enter
ret
push
cmc
jb
jge
or
jbe
bound
xor
and
nop
ja
push
fdivrs
mov
cs
das
scas
stc
aad
stos
rcrb
roll
xchg
dec
movsb
in
testb
cmpsl
ljmp
xchg
xor
inc
mov
insl
mov
mov
mov
mov
and
sub
aam
mov
inc
sti
mov
pop
inc
adc
scas
xor
aaa
xchg
out
mov
repnz
out
jmp
mov
pop
xor
leave
in
mov
je
ret
lock
push
or
out
xor
push
add
das
sbb
or
add
test
shll
enter
push
sti
dec
ret
pop
je
inc
mov
dec
mov
xor
and
and
repz
inc
push
aas
rol
popf
das
mov
jle
daa
mov
hlt
mov
push
je
test
push
in
jnp
xchg
inc
ja
push
bound
outsl
add
push
dec
std
test
popf
rcl
mov
push
stos
jbe
xor
mov
push
xor
ret
call
daa
pushf
pop
or
lock
xchg
inc
mov
sbb
xchg
sbb
jg
pusha
push
jnp
aas
out
lret
jge
sbb
test
pop
mov
pushf
cmp
xchg
or
mov
call
xor
add
push
lods
inc
xchg
idiv
stos
mov
rcr
cmpsl
pop
add
shll
jbe
mov
pop
cltd
inc
lods
out
hlt
dec
xor
fldcw
test
and
and
xlat
sub
scas
jne
hlt
dec
add
or
xchg
sbb
outsl
mov
outsl
push
push
mov
inc
pop
stos
jnp
ljmp
lcall
decb
in
pop
ds
out
scas
popf
jecxz
orl
imul
push
repz
jge
jge
mov
mov
sbb
scas
jecxz
jne
jmp
push
iret
xchg
aaa
movsb
xchg
push
lret
lods
unpckhpd
adcl
pop
and
dec
notb
jno
sbb
xchg
mov
insl
xor
ljmp
push
pop
sub
inc
xchg
dec
inc
mov
nop
bnd
pop
aaa
call
cltd
adc
insl
rclb
cmp
cs
fnstenv
jb
scas
shl
mov
pop
fbstp
jg
mov
inc
mov
xchg
xor
jg
out
aad
jmp
cmc
in
in
rolb
push
lods
push
inc
mov
imul
mov
sub
push
popa
sbb
pushf
sub
push
mov
movb
out
fincstp
loop
cmp
sti
lds
xchg
or
push
mov
and
out
sbb
sub
push
mov
cltd
add
sub
cmp
insl
fnstsw
fdivs
mov
movsl
pop
cmpsl
xor
push
dec
gs
cld
sub
or
add
dec
nop
or
mov
loope
mov
pop
xchg
add
inc
int
lods
mov
jb
mov
loope
in
pop
in
imull
cmp
fdivrs
cmp
mov
xor
pop
or
fsub
enter
add
cli
or
frstor
pop
push
outsl
fisubl
jae
or
jo
daa
lods
orb
orl
push
data16
jl
mov
pushf
aad
mov
xchg
xor
dec
cmp
push
dec
cmp
out
mov
iret
jg
jmp
cmpsl
jp
cmp
inc
lcall
and
dec
pop
loopne
fucom
aam
pop
popf
jno
adc
inc
fildl
push
cmp
or
jp
jns
fildl
jg
stc
cmp
xor
in
repnz
das
and
loopne
push
out
push
and
pushf
loopne
mov
int3
scas
cmp
push
or
clc
adc
outsb
mov
outsl
inc
cwtl
xchg
cltd
aad
popa
lock
or
jns
imul
cltd
pusha
mov
add
adc
and
xor
shrb
sbb
or
jns
imul
cltd
pusha
mov
add
adc
and
xor
les
fidivrs
or
jmp
movsb
mov
imul
adc
sub
aam
and
xor
add
mov
cmpb
and
jo
mov
mov
mov
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
das
inc
aas
ja
addr16
sbb
pop
push
and
xlat
adc
mov
out
xchg
out
xchg
mov
cmpsl
fists
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
cmp
scas
mov
xchg
mov
fists
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
pop
xlat
scas
pushf
test
leave
icebp
ljmp
leave
test
arpl
add
adc
nop
mov
sub
inc
aas
aam
aam
xchg
mov
xor
sbb
das
sti
das
andb
cmp
rcl
and
bound
mov
pop
mov
fucomp
fmuls
push
mov
xchg
leave
pushf
xlat
scas
lods
mov
aaa
adc
ret
rolb
adc
mov
out
pop
outsb
pop
jg
inc
dec
mov
jp
rcrl
out
pop
mov
movsl
fildll
lock
adc
es
push
cmp
sbb
aas
test
jg
xor
hlt
enter
xchg
mov
scas
mov
iret
and
das
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
pop
xlat
scas
mov
xchg
out
xchg
mov
cmpsl
cltd
adc
cs
adc
pop
jnp
dec
or
sub
fmull
mov
push
inc
xor
jl
sub
cmp
sbb
jno
lret
mov
mov
imul
outsb
and
addr16
pop
pop
jg
dec
daa
pop
xlat
scas
mov
xchg
out
xchg
mov
cmpsl
fists
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
pop
xlat
scas
mov
xchg
out
xchg
mov
cmpsl
fists
loop
int3
pusha
inc
fmul
lcall
mov
std
mov
push
mov
xchg
jbe
ds
out
cltd
jg
sub
sbb
and
xchg
inc
int
test
xor
mov
loope
xor
xor
mov
mov
adc
adc
push
push
cmp
mov
lods
inc
lret
or
push
fs
in
sbb
mov
jo
dec
adc
dec
insl
shrl
mull
lcall
push
pushf
fisttpll
mov
inc
and
les
mov
fcomps
rol
test
out
and
push
pop
mov
notb
cli
xlat
jmp
lea
xchg
sub
and
daa
rorb
jmp
xor
clc
add
xchg
adc
lods
or
sbb
int
jne
test
inc
dec
mov
mov
adc
xor
jb
and
enter
clc
insb
int
sti
sti
pop
iret
pop
addr16
adc
xor
pop
sub
lret
add
adc
jl
dec
repnz
xlat
mov
movsb
mov
and
nop
sub
add
inc
adc
lcall
idivl
test
pop
test
imul
dec
xor
int3
push
jg
push
or
aaa
jne
mov
jbe
stc
xchg
sarb
xchg
jp
push
inc
xchg
xchg
inc
sub
mov
adc
repz
or
imul
shll
pop
push
lret
popf
dec
mov
mov
loopne
xchg
fldcw
addr16
in
fdivrs
out
sub
inc
ficompl
les
xchg
outsl
sbb
mov
daa
push
icebp
std
or
inc
insb
fwait
inc
dec
mov
add
int3
push
sub
inc
push
sahf
push
cli
sub
mov
clc
mov
cmpsb
es
jne
lods
cmp
add
test
mov
pop
aam
movsb
idivb
mov
xor
xor
ljmp
clc
mov
mov
fidivl
jl
in
sbb
je
push
xchg
test
test
lods
addr16
fisttpl
andl
mov
push
dec
outsl
addb
add
pop
ja
xor
or
mov
outsl
sahf
sbb
ficomps
popa
ljmp
movsl
fcmovu
leave
and
pop
std
jecxz
cmp
out
mov
jo
xlat
aad
push
es
cli
xchg
cmp
out
mov
fistl
jl
jle
jae
push
xlat
xlat
bound
mov
sbb
inc
fs
neg
jns
mov
cmp
mov
mov
hlt
ljmp
dec
dec
jl
pop
xlat
jmp
cld
sti
cmp
shlb
dec
xlat
mov
jle
inc
xchg
sub
idivb
cmp
cmpb
imul
dec
inc
outsb
mov
and
inc
push
jb
xor
scas
mov
idivb
rolb
adc
cmp
clc
inc
cmp
cmp
les
mov
stc
xor
mov
movsl
pop
mov
jnp
js
call
mov
popf
mov
mulb
ljmp
repz
mov
test
lret
pop
xlat
pusha
xchg
xchg
mov
ja
jmp
imul
in
lret
adc
xchg
mov
idivb
jle
daa
cmp
fs
inc
dec
inc
xlat
push
data16
mov
out
shlb
cmpl
mov
js
lds
push
mov
jae
aad
jl
dec
rcl
aad
add
fwait
clc
ds
iret
idivb
push
outsl
and
ss
or
xchg
mov
repnz
mov
inc
pop
adc
stc
mov
and
jo
xchg
popa
stos
mov
push
dec
add
addr16
leave
clc
outsl
and
clc
std
jbe
std
pop
push
les
dec
mov
sub
cmp
sbb
mov
sub
fsubs
and
rorl
jge
test
pop
jne
and
mov
ficoml
sbb
inc
cs
fimuls
outsb
jl
jns
nop
xchg
mov
out
test
ja
ja
lods
mov
adc
aam
divl
xor
xor
or
pop
ret
pusha
bound
cwtl
or
jle
mov
sbb
mov
in
jno
mov
pop
fisubl
sbb
es
sbb
clc
sbb
scas
push
xchg
lret
sbb
ds
mov
sahf
xchg
push
movsb
push
sbb
pop
jge
cmp
mov
aad
cmp
enter
jne
sbb
lahf
lret
aam
clc
adc
test
hlt
and
pop
fdivrs
fdiv
cmp
pop
xchg
jne
in
dec
sub
ss
add
nop
js
nop
adc
cmp
ljmp
into
ljmp
add
add
cld
mov
bound
fildll
jmp
add
sbb
adc
jno
and
ret
pop
test
jp
adc
mov
sub
lock
psrlw
inc
in
repnz
sub
xchg
repnz
scas
imul
sub
cmp
jae
jo
lods
rcrl
mov
adc
mov
dec
cmpsb
push
xchg
xchg
jno
fstpl
sahf
xor
fstpt
xor
add
push
repz
mov
je
cmp
pop
cwtl
mov
pusha
jmp
push
push
dec
push
jp
mov
fmull
loop
ja
stc
mov
adc
xor
jecxz
mov
sub
sahf
clc
fsubl
cmp
in
stos
adc
sti
or
imul
insl
outsl
mov
push
and
or
mov
mov
jp
or
pop
dec
leave
aad
xchg
dec
stc
and
cmp
inc
clc
mov
push
out
mov
in
push
jp
cs
jae
ret
mov
xlat
push
pusha
lods
and
sub
xchg
jae
mov
shrb
pop
sub
mov
mov
jle
jnp
lret
int
icebp
in
test
in
js
push
lock
iret
xor
cmp
inc
sub
mov
and
pop
sbb
cmp
gs
in
xor
add
adc
or
test
dec
aad
mov
jp
mov
and
inc
adc
or
pop
sti
push
scas
cwtl
leave
pop
adc
je
fdivl
xor
test
hlt
push
callw
call
sbb
mov
lret
addr16
add
dec
jl
mov
mov
scas
mov
push
mov
testb
mov
scas
mov
lock
in
push
mulb
test
sbb
mov
cs
push
lds
cmp
incb
xlat
xor
cmpsl
cmpsb
in
cmp
iret
je
adc
mov
mov
sbb
lcall
into
cmp
or
adc
xor
scas
mov
repz
in
pop
push
mov
inc
sub
hlt
aad
jae
int3
test
dec
cmpsb
in
mov
cmc
into
iret
fs
js
repz
xchg
pop
pop
mov
and
adc
and
dec
add
add
sbb
xchg
dec
mov
mov
sahf
dec
mov
jle
mov
sar
decb
mov
out
mov
jg
add
mov
mov
je
jno
inc
jnp
ret
cmp
das
mov
rcrl
xor
jae
idiv
adc
scas
sbbl
incb
imul
or
jmp
ljmp
insb
in
jp
nop
add
fdivrp
rorl
leave
icebp
sub
or
jge
mov
lahf
aam
loopne
or
pop
sub
das
into
outsl
test
clc
shrb
cltd
or
pop
mov
mov
lds
and
pushf
lods
adc
mov
aam
mov
xor
hlt
xchg
mov
fistl
les
pop
xor
cs
and
lret
fstl
ret
mov
test
les
dec
test
jns
cmp
add
push
sbb
or
mov
mov
addr16
ret
movl
push
outsb
inc
sbb
insl
cmp
jne
fidivs
cmpsb
pop
add
and
xor
sub
orl
notb
aaa
mov
xor
fs
jge
fistpll
idivb
and
xchg
xchg
idivl
adc
out
sbb
cmp
loope
and
cs
mov
cmp
lods
sbbb
sahf
clc
jae
xor
push
jne
test
arpl
lcall
and
repz
sarb
push
lret
outsl
add
mov
roll
or
xor
stos
mov
sbb
or
mov
ret
mov
out
leave
mov
icebp
jbe
clc
or
ds
push
test
fldt
mov
dec
jae
popf
mov
es
lds
push
sbbb
and
pop
insb
push
inc
mov
aam
add
push
out
ficoml
ljmp
test
jno
out
push
mov
jno
lahf
sbb
jne
and
push
inc
ds
cmp
xor
mov
ds
addb
cmp
xchg
in
in
adc
addr16
inc
push
sbbb
lods
push
xchg
mul
dec
in
rdmsr
jne
xchg
mov
push
mov
fisttpl
pop
push
xchg
iret
int3
test
fsubrs
ljmp
pop
push
lcall
das
std
adc
xchg
outsb
inc
push
push
in
idiv
cmp
lret
iret
push
nop
adcl
or
pusha
shr
inc
popf
pop
lock
or
and
shlb
ret
cmp
test
inc
cmp
data16
insl
fnstenvs
adc
add
xor
pop
imulb
daa
or
pop
inc
xchg
in
push
sub
stos
lcall
inc
in
mov
mov
and
pop
call
and
lock
aaa
sub
dec
loop
mov
in
mov
arpl
xchg
out
or
and
cld
popa
lret
xor
pop
leave
repz
or
in
rorb
pop
jmp
scas
adc
cmc
pushf
mov
mulb
shlb
inc
imul
aam
into
pusha
inc
adc
inc
lods
inc
cltd
pop
push
jmp
pop
insl
xor
rclb
lock
lods
ja
sbb
and
loop
movsb
insl
cwtl
lahf
mov
xchg
addr16
mov
inc
xor
pushf
outsl
mov
push
push
call
sub
push
movsl
jge
test
cmpb
leave
dec
out
adc
jecxz
out
pop
dec
roll
dec
aas
repz
mov
fbstp
mov
in
dec
sub
xorb
mov
aas
hlt
icebp
fildl
lcall
jmp
mov
pslld
cmp
pop
in
loope
outsl
pusha
ds
sbb
push
popa
cmp
sti
mov
test
es
test
sbb
mov
fcoml
loop
add
jp
xlat
insb
adc
fistl
mov
fcoml
aad
mov
push
fimuls
sub
xor
jmp
clc
mov
and
imul
sbb
push
gs
int3
rcr
fmull
popa
jbe
xchg
push
fldl
cmp
mov
rclb
or
pop
push
outsl
mov
mov
out
divb
call
je
sbb
imul
inc
inc
scas
and
ja
push
push
stc
scas
cmp
lods
dec
decl
daa
jg
mov
push
ljmp
shrl
gs
inc
cli
dec
fdivl
pop
int
jge
idiv
push
stos
pushf
jns
lret
cmpsb
in
xchg
fcmovbe
xchg
adc
mov
fdivrp
icebp
ljmp
loope
pop
jb
hlt
ret
or
inc
cmp
cmc
movsb
sbbb
push
jg
push
test
lock
mov
test
push
imul
pop
scas
mov
lods
test
das
mov
xchg
cwtl
mov
inc
lcall
mov
add
scas
inc
aas
pop
inc
mov
pop
inc
nop
cmp
cld
xchg
scas
xor
jne
inc
push
aas
jne
xor
mov
add
adc
sti
lds
int
adc
pop
ret
lds
ljmp
jae
mov
rorl
xchg
add
inc
push
cli
enter
jnp
or
lock
repnz
scas
sbb
jb
mov
sbb
push
jbe
out
xorl
insl
repz
fs
scas
pop
sbb
test
dec
fsubrl
lahf
icebp
shll
pop
add
mov
pop
lods
pop
inc
mov
sub
xchg
call
push
pop
push
hlt
push
lds
stos
mov
sbb
dec
push
add
or
lock
push
aaa
jno
ss
mov
dec
and
sbb
out
es
xor
and
or
xor
pop
enter
pop
mov
ja
adc
and
mov
adcb
jp
roll
mov
fstpt
das
mov
pop
mov
and
push
xor
lret
pop
test
or
sahf
and
mov
jb
jmp
xor
ljmp
in
loop
sti
inc
jp
and
pop
sub
sbb
mov
pop
push
mov
lahf
dec
inc
lock
stc
mov
inc
jno
jo
dec
or
mov
lahf
shrb
imul
enter
cli
aad
repz
add
js
inc
sub
pop
icebp
in
ret
dec
sbb
push
pop
lds
pop
sub
mov
sbb
loopne,pn
sub
dec
in
cltd
shl
js
mov
call
lret
push
fcoms
inc
adc
lret
pusha
pop
mov
adc
xor
mov
jle
mov
sub
std
xor
arpl
xor
sti
popl
pop
shlb
adc
fwait
test
hlt
adc
mov
mov
loope
out
loopne
fs
movsb
aad
scas
ds
mov
out
dec
roll
sub
pop
cmp
ror
sbb
adc
pop
ret
shrl
pop
xor
into
mov
dec
add
dec
sub
in
test
mov
in
lods
cmp
mov
outsl
pop
dec
or
xchg
fs
or
xor
pop
dec
xchg
outsb
aad
cmp
dec
mov
xchg
fidivrl
popa
dec
and
inc
lret
add
adc
adc
pop
pusha
not
punpckldq
out
rcrl
jge
add
sbb
nop
cld
rol
push
sub
sti
inc
cmp
js
test
or
xchg
andl
adc
sbb
add
jo
cmp
inc
sub
test
cld
scas
repz
call
cwtl
push
outsb
clc
mov
inc
pop
sub
xchg
enter
call
pop
pop
lret
je
ficoml
inc
jae
sbb
mov
nop
pop
or
xor
in
subl
lods
cmp
mov
xor
mov
inc
add
mov
push
push
or
or
mov
push
pop
lods
in
lret
mov
js
add
inc
cmp
aaa
adc
shll
xor
dec
in
dec
int3
sbb
mov
aad
add
push
push
testb
jecxz
dec
sub
and
gs
imul
jns
ds
clc
sahf
cmp
bound
add
js
imul
mov
mov
mov
push
dec
fs
lret
adc
frstor
fidivl
and
and
out
sub
mov
bound
push
sbb
insb
dec
insl
std
int3
mov
sbb
jb
mov
sub
or
xor
dec
ja
movsl
shll
js
repz
flds
aas
jno
mov
pop
sub
cmp
nopl
addr16
inc
sub
popf
xor
loop
je
push
je
inc
mulb
jae
xchg
mov
sahf
and
ja
pop
clc
dec
push
jb
fimuls
mov
imul
mov
int3
cmc
sbb
hlt
bnd
pop
hlt
scas
mov
aam
sahf
inc
stos
pop
lods
cmp
mov
pop
cmp
sbb
jo
xchg
inc
test
dec
bnd
aad
xchg
stc
mov
push
sub
mov
sbb
or
fdivrl
fsubrl
test
add
lcall
fldt
aas
adc
ja
mov
mov
pusha
jne
repnz
sahf
sub
sbb
or
cmpsl
push
addl
pop
fwait
mov
ss
inc
cld
stc
mov
pop
and
xchg
sub
mov
sbb
fsubr
ret
xor
dec
dec
stc
cmc
push
rcrb
fistps
mov
lret
arpl
aad
daa
test
mov
insb
subl
std
dec
sub
hlt
mov
cwtl
push
loopne
cmp
pop
jle
sub
jae
pop
ret
inc
add
pop
mov
cmp
adc
jge
sar
leave
sbb
xlat
or
orl
add
adcl
jo
xor
sbb
jp
or
jg
test
mov
inc
fmull
lret
fcoms
jae
test
sbb
cmp
mov
pop
aad
pop
pop
movsl
mov
mov
mov
inc
xchg
out
imul
ljmp
popa
fwait
jecxz
cmc
jnp
cs
stos
mov
mov
push
dec
or
js
test
or
lods
fldenv
add
in
shld
push
test
cltd
fdivrl
and
mov
icebp
shll
loop
bound
popf
lret
mov
cmp
idiv
jmp
test
mov
add
add
scas
cmp
out
pushl
mov
push
cwtl
jmp
fldcw
je
and
popa
jno
pop
xor
stc
pop
mov
sub
and
xchg
pop
xor
in
mov
arpl
fwait
idivb
cmp
and
aaa
sub
cmpsl
adc
push
sbb
mov
ja
arpl
jge
dec
jmp
sub
gs
and
mov
fs
cwtl
dec
pop
mov
inc
jp
fbld
sbb
dec
incb
or
call
adc
cmp
xor
imul
insb
subb
out
xor
dec
sbb
mov
push
push
jno
outsl
mov
sub
cli
rcll
lea
aaa
sbb
cmc
hlt
gs
jge
popf
cmp
addr16
iret
mov
inc
jg
xor
mov
shl
hlt
jnp
fimull
xor
mov
sahf
adcb
mov
js
mov
fisttps
ss
insl
dec
dec
es
cmp
out
data16
xor
sti
in
lock
sbb
adc
out
mov
jno
add
lahf
jbe
cmp
mov
mov
push
add
jae
or
cld
or
popa
mov
mov
sarb
outsl
loope
je
movsb
outsb
push
push
sub
aas
clc
add
ret
ds
mov
add
jmp
call
fucom
test
xchg
mov
or
leave
fcompl
pusha
shlb
je
push
lret
inc
sub
or
js
mov
shlb
clc
jae
outsl
les
movsb
mov
cmp
dec
and
cmpsb
inc
imul
bound
push
ss
jmp
xchg
jp
inc
cli
mov
adc
pop
aaa
adc
mov
cmp
xchg
sbb
sbb
imul
popl
cmp
jne
cmp
jg
fldenv
fcoms
je
fldt
inc
adcb
pop
inc
or
jne
cmp
cwtl
jmp
jne
pop
lcall
insl
sahf
sbb
test
fldt
add
outsl
dec
cmp
sub
and
lock
lret
lret
bnd
add
call
jg
icebp
sbb
push
mov
iret
rcr
ss
mov
push
inc
xorl
lods
jmp
mov
dec
lahf
jbe
orb
mov
mov
pusha
cmpsl
into
xor
dec
pop
cwtl
lods
hlt
adc
and
aas
arpl
in
es
insb
loop
and
lret
or
xchg
test
or
test
adc
pop
pop
mov
cmpsl
push
sbbb
sbb
add
dec
mov
inc
mov
packuswb
pop
outsl
pop
jg
dec
daa
pop
xlat
scas
mov
xchg
out
xchg
mov
cmpsl
fists
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
pop
xlat
scas
mov
xchg
out
xchg
mov
cmpsl
fists
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
pop
xlat
scas
mov
xchg
out
xchg
mov
cmpsl
fists
inc
aas
ja
addr16
pop
outsl
pop
jg
dec
daa
lahf
xlat
scas
adc
loopne
str
pop
and
add
cmp
test
jae
mov
test
dec
leave
cmp
sub
or
or
cli
sbb
sub
cmp
dec
mov
jns
mov
push
jp
dec
or
cli
jmp
jecxz
ljmp
pop
mov
cmpb
cltd
mov
dec
leave
jnp
inc
pushf
dec
xchg
or
jge
sub
shlb
add
dec
call
pop
js
rcrl
inc
cmpsl
xchg
stos
jne
ss
pop
push
xchg
adc
push
dec
inc
dec
ss
je
pop
add
dec
scas
ret
stos
loop
daa
mov
int
test
sub
or
cmp
outsb
lcall
add
sbb
push
mov
cltd
aad
nop
int3
pusha
test
or
and
pop
push
ljmp
push
pop
les
push
cmpsl
mov
cmc
out
ljmp
dec
in
jns
fidivrs
jle
dec
xchg
pop
cltd
imul
cli
sbb
sub
cmp
dec
mov
jns
mov
jb
inc
mov
cmp
dec
lahf
insl
ljmp
sub
or
adc
adc
push
fnstcw
sbb
ljmp
sbb
adc
sub
in
add
or
dec
mov
test
outsl
insb
mov
push
mov
imul
mov
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jns
mov
push
pop
mov
sub
sbb
or
cli
cmp
mov
push
fnstenv
mov
in
test
stos
rolb
add
aaa
repnz
pop
cmp
xor
aaa
sarb
loope
es
xchg
clc
jae
lea
mov
cmp
add
jns
cmp
lret
mov
add
xchg
leave
jge
jmp
shr
mov
and
fwait
lods
mov
sbb
pop
rcl
dec
bound
sbb
fwait
and
loope
in
pop
add
test
sub
sub
jle
ljmp
std
daa
fucomip
dec
out
pop
jns,pn
jno
cwtl
push
loope
stos
out
inc
and
aas
push
out
push
insl
das
jne
and
fidivl
sbb
or
fimull
fcompl
and
jmp
dec
mov
int3
ds
leave
and
and
sub
xchg
in
inc
pop
test
imul
je
fsubl
rolb
pop
push
loop
sbb
mov
popa
jecxz
jno
lods
repnz
repz
push
xchg
cmp
gs
into
loopne
xchg
fmulp
xor
inc
data16
xchg
fsubl
das
jge
push
sub
call
or
or
loop
or
int3
or
push
enter
add
incl
jp
sub
jb
sub
xchg
mov
mov
ret
mov
jne
jne
push
adc
movsb
leave
pusha
inc
pop
or
xchg
popa
sub
adc
fldcw
and
or
pop
pop
cltd
scas
je
lret
out
in
push
arpl
mov
int
xor
shll
ljmp
in
div
and
jo
lret
mov
or
push
cmpl
mov
data16
jo
pop
and
rol
push
stos
pop
dec
fwait
jecxz
gs
push
je
jb
imul
test
addr16
or
or
push
xor
sub
add
movsl
pushf
inc
dec
dec
add
js
xchg
dec
test
or
pop
orb
out
fsubl
push
pop
mov
cmpsl
mov
jge
popf
pop
xor
xchg
jle
pop
cmovae
fwait
stos
nop
sub
movsl
mov
scas
mov
lods
mov
repnz
ja
jo
mov
imulb
cwtl
push
pusha
pusha
scas
xchg
ljmp
push
mov
mov
dec
mov
add
ds
sub
pusha
xlat
das
insb
test
arpl
mov
loop
and
lods
out
mov
cli
mov
fisttpl
cs
mov
clc
clc
pop
jne
sub
mov
sbb
push
cmpsl
aaa
sbb
es
xchg
ljmp
dec
dec
jo
div
sub
outsl
cltd
mov
fcoml
mov
loope
or
pop
ret
xchg
lock
xchg
aam
or
out
out
cs
jnp
sub
imul
jge
inc
jbe
cmp
mov
cmc
stos
mov
bound
ret
sbb
mov
mov
out
push
nop
std
inc
testb
fidivl
sbb
xchg
enter
push
lods
test
mov
cmp
lds
nop
data16
cltd
rclb
test
dec
and
dec
ret
xchg
ja
std
pusha
add
test
dec
cmpsl
aaa
pop
mov
cmp
out
jbe
stos
fidivs
xor
sbb
loop
lods
mov
out
std
pop
pop
push
cmc
adc
aaa
test
push
pushf
or
sub
xchg
cld
jge
inc
jne
adc
lock
arpl
mov
sbb
ds
push
xchg
scas
mov
dec
mov
sbb
mov
out
sbb
fwait
pop
jae
jnp
and
jno
xor
jb
jbe
cmp
mov
xor
xchg
dec
push
or
mov
iret
jno
cs
mov
icebp
or
push
dec
inc
lock
mov
into
mov
into
and
lahf
jge
std
clc
jle
sbb
imul
cld
neg
pop
and
xor
insb
ss
in
or
fistl
mov
push
dec
gs
andb
push
push
adc
and
inc
mov
push
sub
mov
icebp
xor
fldl
sbb
fldenv
loope
inc
mov
and
inc
mov
push
pop
leave
add
and
mov
adc
ss
aas
mov
pop
cmp
int
sarb
sbb
jb
out
lcall
push
jmp
sub
fs
xlat
lahf
mov
aaa
dec
scas
and
sub
and
shll
and
popf
mov
jcxz
div
or
in
nop
fs
in
jl
mov
orl
sub
pop
js
sub
ret
loopne
dec
and
enter
cmp
gs
outsl
mov
ss
sbb
cmpsb
mov
fsubrs
lock
fwait
push
lret
jns
dec
cwtl
and
push
lahf
push
xchg
sahf
jecxz
mov
stos
xor
sbb
pushf
add
pushf
jae
pop
push
cmp
ud0
lock
pop
jno
push
iret
mov
insb
repnz
in
rol
repnz
mov
sbbl
add
out
pop
and
sbb
adc
mov
inc
outsl
lea
scas
dec
jecxz
mov
lea
xor
arpl
int
push
pushl
fisubrl
mov
aas
mov
mov
pop
ror
xor
test
jb
mov
stc
fldt
call
inc
xchg
or
mov
leave
mov
jmp
mov
and
arpl
fmull
cli
add
push
bound
jne
je
sub
nop
pop
rorl
fwait
pusha
fdivl
mulb
in
xchg
loope
sahf
xchg
mov
and
imul
frstor
fwait
out
pop
shlb
push
into
pushf
daa
scas
bound
jns
stc
mov
mov
jl
push
lock
cmpsl
daa
mov
cmp
and
cmovnp
and
lock
inc
lar
ret
fidivrs
cld
ds
test
insb
xchg
rorb
int3
std
insl
or
aad
add
dec
loop
leave
outsl
cmp
push
bound
pop
xchg
mov
aam
fwait
xchg
sub
movsl
xchg
btc
push
mov
ljmp
aas
iret
pop
push
mov
daa
imul
inc
xor
sbb
imul
pop
push
das
pushf
and
insb
jge
imul
test
ret
sub
aad
lcall
adcb
shrb
in
lret
popa
hlt
mov
loope
add
fwait
mov
imul
mov
js
in
dec
stos
ja
addb
ss
js
jae
push
cmp
or
inc
mov
add
outsl
out
jl
popf
ss
flds
cmp
xor
mov
cmp
sbb
loope
xchg
and
aas
aas
dec
ret
jp
push
jns
mov
aad
outsl
sub
sub
scas
rcll
mov
mov
push
fidivrs
shl
inc
sahf
cmp
inc
jno
dec
jle
popf
mov
pop
xor
xchg
scas
add
rclb
cmp
mov
jae
adc
add
dec
hlt
mov
xchg
sub
jp
or
pop
and
ds
in
stos
or
imul
adc
add
mov
fiaddl
adcb
dec
std
xor
pop
ret
cli
js
es
pop
mov
xor
push
in
outsb
int3
test
jmp
pop
dec
jbe
cmp
mov
or
lods
mov
out
movntps
mov
mov
lret
mov
fiaddl
mov
push
mov
mov
jne
push
pop
and
mov
or
fistl
popa
mov
sbb
push
std
or
mov
cmp
cld
fsubrl
les
push
pop
push
mov
xor
xchg
cmp
and
jle
scas
adcb
pop
cld
clc
movsb
adc
rcrb
sbb
and
test
stc
imul
popf
js
fdivl
loopne
and
jmp
inc
jo
outsl
sahf
repnz
dec
xchg
xor
lods
dec
test
scas
mov
ret
cltd
fsubs
push
test
into
xchg
add
jbe
jne
jmp
push
aas
pop
cmp
pusha
loopne
xchg
ljmp
mov
cs
mov
sbb
stos
std
mov
mov
mov
lea
sbb
ds
mov
mov
inc
testb
and
xor
mov
sub
das
fiadds
dec
xchg
dec
push
cmpb
and
jo
mov
push
ss
rorl
adc
es
sti
shll
lahf
cmp
mov
pop
icebp
fldt
xchg
mov
mov
ja
gs
iret
mov
imul
scas
mov
and
xchg
push
or
and
xchg
arpl
mov
cmp
add
push
push
cmp
fdivrl
jae
jbe
sub
outsb
test
or
dec
adc
sahf
rol
mov
add
testl
aad
daa
inc
and
dec
or
push
fnstenv
lock
arpl
jl
in
pushf
jg
lock
popf
ljmp
and
dec
in
push
gs
mov
test
jbe
loopne
mov
adc
lret
add
insl
popf
les
ljmp
icebp
jmp
adc
stos
dec
sbb
stos
add
into
insb
rcll
mov
fwait
jae
jne
fwait
or
mov
lret
cmpsl
mov
aaa
mov
jae
repnz
popf
mov
out
inc
mov
cmp
popa
imul
leave
ficomps
cmp
inc
mov
pop
xchg
mov
enter
pusha
mov
js
test
fs
or
inc
pop
fisubl
xchg
sub
xor
stc
roll
jbe
fsubl
repz
cmp
and
sbb
sbb
jle
jb
arpl
out
adc
ljmp
cmp
ja
cwtl
clc
push
call
add
pop
les
hlt
int
fwait
lds
mov
xchg
jp
sbb
std
je
xchg
jmp
andnps
cld
enter
xchg
mov
aaa
out
jae
ja
cmp
inc
hlt
shlb
loopne
mov
mov
pop
shrb
fsubl
imul
mov
fstps
mov
lea
leave
xchg
push
mov
mov
pop
int
push
pop
mov
addl
xchg
sti
pop
in
loope
int3
push
push
mov
xor
jae
sbb
mov
scas
pop
and
pop
mov
add
pop
int
dec
jb
leave
xchg
mov
pop
pop
cmc
mov
adc
inc
mov
dec
push
push
repnz
stos
fnstcw
lea
jae
xchg
insl
push
movsb
movsb
or
push
ret
imul
mov
jmp
faddl
repnz
cwtl
jns
mov
pop
xor
clc
aad
addl
or
repnz
sarb
nop
xchg
xor
adc
movsl
adc
mov
test
orl
jmp
sub
pusha
push
sahf
nop
es
iret
push
pop
js
push
fnsave
or
add
es
lods
pop
popf
sbb
xchg
xor
sbb
rolb
insb
out
mov
adcl
or
pop
mov
push
mov
mov
fdivr
and
ja
rorl
loopne
sub
push
jno
int
test
ret
cmp
subl
fiadds
out
ds
mov
cwtl
fsub
mov
in
or
sti
adc
pop
mov
adc
fnstcw
sub
lahf
out
loop
pop
call
in
cmc
jg
dec
dec
rorl
imul
xchg
je
dec
sbb
outsl
push
cli
pop
add
ljmp
pop
jne
lock
shl
or
mov
inc
inc
mov
and
xchg
scas
std
je
pop
push
testl
sar
push
ljmp
lods
push
push
out
inc
xor
cmp
ljmp
jo
jbe
rcl
leave
and
pop
movsb
in
stos
imul
dec
sbb
dec
imul
loopne
xor
loope
dec
mov
fdivr
popa
lahf
mov
pop
or
hlt
popf
aam
int3
int3
in
jl
mov
fnstenv
pop
inc
ss
jae
push
aad
mov
mov
int3
fwait
pop
sbb
sarb
jbe
stos
lea
mov
lods
loop
sbbb
rcll
mov
fxch
aaa
clc
les
cld
mov
nopl
outsl
stos
mov
loopne
ds
je
jo
fcomps
outsb
mov
pop
mov
outsb
jg
pushl
cmp
cltd
repz
scas
jnp
fcmovnbe
push
cmp
push
fsts
repz
stc
fildl
psrlq
add
xchg
jp
fildl
popf
dec
int
loope
xlat
xor
loop
lret
mov
pop
out
popf
pop
cmpsl
aam
jae
ss
inc
xchg
fsts
addr16
out
sbb
mov
bound
sub
dec
mov
movsl
dec
addr16
jnp
and
xor
inc
or
pop
pusha
mov
xor
fld
pusha
pushf
popa
movsb
jmp
mov
data16
push
lahf
hlt
test
insl
sbb
dec
mov
mov
jmp
mov
dec
xchg
loope
mov
in
in
mov
movsl
ja
pop
xchg
cld
sub
cwtl
cli
das
mov
or
jo
xchg
jp
pusha
arpl
shlb
fs
stos
addl
shll
sub
cmc
pop
dec
xor
f2xm1
add
dec
cmpsb
out
dec
xchg
fdivrs
sbb
shll
mov
test
stos
or
in
daa
into
cmp
cmp
lds
pop
aas
je
mov
xchg
movsl
data16
push
aaa
in
jbe
jne
fwait
pop
out
adc
mov
add
dec
popa
test
or
dec
lret
dec
xor
lds
pop
loope
inc
cltd
popa
jo
lret
xor
xor
adc
sbb
rolb
sbb
xchg
jle
aas
pop
gs
adc
sbb
dec
popf
or
fcomip
icebp
jg,pt
add
xchg
or
inc
or
lea
cwtl
fwait
push
int
fsub
xchg
add
je
insb
arpl
lods
nop
mov
bound
fwait
pop
xorb
cmp
bound
add
inc
cmp
mov
lock
push
xchg
test
mov
lahf
sub
add
adc
push
ja
jle
imull
cwtl
out
mov
xchg
shll
mov
mov
cltd
mov
sub
fisubs
inc
fcompl
dec
gs
adc
dec
out
add
hlt
shlb
popf
sub
pop
mov
jnp
jno
cld
push
push
imul
xlat
subb
sub
repz
insl
adc
stc
sarl
and
movsb
pop
sbb
xor
cltd
jecxz
hlt
pop
or
loopne
cmp
push
push
dec
shl
and
addr16
repnz
sbb
into
notb
inc
mov
xor
sbb
cmp
sbbb
jno
pop
mov
rolb
ljmp
clc
mov
mov
and
out
adcl
das
cmp
fidivs
imul
fdiv
mov
or
mov
add
aam
je
movzwl
xorl
in
mov
mov
rclb
jl
lret
push
jae
es
push
xor
movsl
xchg
adc
jne
sarb
inc
jmp
xchg
insb
xchg
mov
jge
out
imul
jle
inc
movsb
push
pop
cmp
cmp
xchg
in
or
xchg
mov
adc
jl
je
inc
sub
mov
aas
jae
movsl
movsb
or
inc
or
push
cs
push
push
fistpll
sub
call
clc
movb
add
inc
loopne
dec
mov
cmpsl
das
dec
out
push
std
push
adc
dec
dec
fimuls
xchg
js
in
mov
je
cmp
mov
shll
xor
andb
mov
adc
push
pop
cs
jae
movsb
cmpsb
add
push
cwtl
ss
lods
fucomi
sarl
sbb
cmp
stos
xor
pop
sbb
scas
mov
outsb
dec
mov
ja
cmp
cmp
fstpl
mov
or
adc
int3
stos
mov
fildll
push
popf
fs
sub
mov
adc
popa
cs
cmp
fwait
mov
sbb
lret
dec
daa
mov
xchg
and
mov
in
push
add
and
in
std
test
mov
sub
cmc
cmpsb
mov
adcl
cmp
loopne
mov
lcall
jmp
aam
lods
lcall
lcall
imul
and
sub
mov
out
and
inc
inc
out
mov
or
mov
add
pop
lret
adc
addr16
int
dec
lods
jg
and
fbstp
xor
out
ret
or
cmp
outsl
push
inc
jmp
push
xchg
cmp
pop
test
inc
subb
inc
sub
dec
es
pop
jae
pop
bound
dec
or
xchg
mov
and
add
clc
sbb
cld
sbb
movsl
enter
aas
or
xlat
cwtl
or
dec
mov
lcall
les
insb
clc
cmpsl
rcrl
cld
daa
dec
xchg
inc
mov
scas
jne
imul
in
xchg
mov
xchg
push
pop
cmc
lods
mov
jg
pop
repz
sub
xchg
fnstcw
cmp
mov
jns
test
pop
pop
pop
repnz
mov
push
lcall
stc
outsb
adc
imul
add
push
push
xchg
mov
repz
fmulp
inc
mov
jecxz
push
iret
aas
jecxz
sbb
mov
and
cmpl
fmulp
jge
mov
dec
subl
fldt
jmp
jl
sub
pop
lret
imul
cwtl
push
push
and
call
dec
add
popa
iret
and
jns
cmovle
std
push
mov
imul
ror
repnz
inc
gs
jmp
cli
outsl
js
dec
inc
mov
lret
out
or
outsl
dec
mov
jle
loop
jns
sbb
push
popa
fwait
pushf
shlb
inc
lret
cmp
movsl
cltd
lods
lahf
push
xlat
dec
mov
pop
push
fistl
or
pushf
inc
mov
lods
lcall
push
jns
lret
loop
cs
xor
insl
loopne
add
jbe
loop
ficomps
pop
imul
xlat
jb
or
xor
mov
xor
jecxz
sub
pop
xchg
xor
dec
rcpps
cltd
hlt
out
imul
rcll
push
daa
out
cmp
fst
mov
hlt
jg
das
fdivrl
into
popf
push
jg
sbb
mov
inc
imul
jae
outsb
xor
test
inc
jg
mov
push
xchg
mov
shll
inc
sub
mov
sti
xor
sahf
mov
movsb
adc
sarb
shlb
test
loop
xchg
insl
jno
add
adc
sbb
jge
sub
and
push
jle
pop
int3
jo
cmc
ja
lret
add
andl
jns
in
and
fistps
xor
test
imul
pop
jmp
inc
cmp
test
add
cmc
lea
add
inc
dec
pop
sub
or
jbe
jnp
xor
xchg
std
sub
xlat
sarb
int
leave
xor
inc
inc
jmp
test
or
push
gs
jnp
push
adc
xor
loope
dec
cmpsb
cmpsb
pop
rol
scas
jg
xchg
push
or
outsb
lea
xchg
dec
fisttpll
push
or
jmp
insb
out
not
pushf
xor
mov
lods
aad
pop
in
pop
shll
add
mov
arpl
xor
fs
movsb
dec
xchg
add
cmp
fldt
in
push
and
mov
pop
std
cmp
rorl
loopne
mov
xchg
test
in
jno
inc
das
ds
push
pop
xlat
inc
mov
imul
shll
ret
and
cmp
inc
jge
imul
dec
loop
add
int
inc
adc
call
out
sub
js
sub
lahf
jmp
add
test
jmp
clc
movsb
out
stos
mov
and
leave
fimull
int
adc
in
clc
in
add
js
mov
sub
fsubl
pushf
int
test
and
sbb
ret
pushf
jne
fdivl
dec
xchg
test
stc
xchg
jnp
std
testb
jle
pop
mov
inc
or
imul
push
mov
outsl
push
jle
inc
das
jno
mov
mov
mov
mov
dec
sarl
outsl
ljmp
pop
stos
imul
mov
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jns
mov
push
pop
mov
sub
sbb
or
cli
cltd
ljmp
pop
stos
imul
mov
sub
sbb
or
cli
sbb
sub
cmp
dec
mov
jns
mov
rolb
mov
aad
in
cmc
hlt
and
aam
les
loope
mov
ja
data16
xor
and
adc
add
hlt
and
aam
les
xchg
loop
bnd
fs
and
inc
and
jb
and
aam
les
xchg
loop
bnd
inc
adc
and
xor
push
cmp
addb
jecxz
add
psadbw
inc
mov
test
mov
aam
adc
les
dec
mov
movsb
sub
enter
stos
and
mov
or
mov
loope
jbe
pop
mov
jno
inc
loop
iret
xor
popf
add
hlt
xchg
ret
adc
outsb
ret
mov
ret
pop
ror
insl
test
mov
mov
lods
in
popf
jmp
daa
cmp
ret
test
push
insb
inc
iret
repnz
movsb
scas
jmp
add
enter
out
les
dec
lahf
mov
pop
xor
and
movsb
xor
xor
push
ja
shll
jae
and
aam
les
xchg
loop
bnd
adc
xor
and
adc
add
xchg
in
xchg
shrl
add
daa
dec
add
and
je
addb
rcl
out
mov
xchg
shl
jp
sub
pop
ret
and
jge
outsb
and
lret
icebp
ret
xchg
loop
bnd
adc
xor
and
adc
add
hlt
and
aam
les
xchg
loop
bnd
adc
xor
and
adc
add
hlt
addb
fs
push
outsb
les
dec
imul
push
sub
sarl
xlat
addl
inc
lret
push
cli
mov
mov
adc
sbb
je
fistpll
rorl
adc
into
mov
outsb
push
mov
or
jp
insb
push
mov
lods
daa
pop
outsb
xchg
pop
pusha
imul
rcrl
add
mov
aad
pop
enter
jnp
jo
mov
cmp
das
jno
xchg
xor
pop
xlat
into
mov
cmp
aad
cmp
jns
sbb
mov
stc
aad
cmpsl
mov
out
or
mov
inc
inc
push
pop
je
das
sti
xor
aas
push
lcall
shll
xlat
or
sbb
adc
cmpsb
sub
inc
cld
es
mov
hlt
cmc
lahf
jnp
lret
inc
rorb
push
dec
sbb
cmpsb
jge,pt
jecxz
pop
cmc
xchg
or
ljmp
ljmp
out
test
fadd
mov
insb
movsl
mov
in
jnp
and
jne
sbb
ljmp
test
jge
loope
insb
mov
repz
gs
sbb
cld
jg
sbb
pop
xchg
mov
jmp
sub
mov
loop
push
jae
mov
push
mov
jecxz
push
sbb
inc
mov
jns
xor
shrb
mov
inc
lea
xchg
xor
inc
xor
mov
popa
daa
mov
xor
hlt
jae
cltd
mov
xchg
jnp
into
lret
xchg
mov
and
cmp
les
ds
mov
cwtl
adc
cltd
loope
adc
xchg
xchg
cmp
movsl
adc
mov
xchg
mov
sysret
sti
adc
mov
adc
shl
jg
xchg
and
lret
sbb
dec
movl
or
and
add
jp
and
hlt
push
insl
into
stos
mov
out
out
inc
and
enter
mov
adc
push
cmp
iret
repnz
adc
push
cwtl
enter
and
lods
movl
push
mov
das
in
xchg
sbb
jae
mov
ror
add
push
cmpsl
sarl
mov
addr16
rcrl
fdivl
sub
in
mov
inc
push
fwait
jp
into
and
rcl
sti
outsb
orl
add
insl
hlt
jae
int
xor
dec
mov
cmp
mov
push
aaa
mov
jne
add
or
les
in
sub
mov
addr16
cli
sbb
clc
ljmp
sbb
andnps
pop
imull
and
outsb
ret
or
mov
fbstp
cmpsl
cld
aam
lock
call
cs
sahf
repnz
mov
ds
adc
push
or
pop
xchg
in
mov
jae
sbb
addr16
mov
jge
and
jae
std
push
inc
jne
inc
dec
repnz
inc
dec
lods
adc
loopne
imul
das
mov
jb
loop
inc
mov
jns
mov
movb
mov
cmp
cwtl
ja
mov
push
xchg
loopne
inc
adc
sti
dec
inc
fwait
std
mov
or
fcom
jle
pop
leave
cmp
dec
sbb
fs
mov
xor
or
outsl
stos
or
std
add
and
cmp
or
addr16
cmp
mov
into
bsf
pop
cmpsl
and
sarb
les
mov
add
addr16
push
push
push
push
dec
add
jae
icebp
jge
aaa
jnp
cld
ret
pop
rolb
jnp
jg
fadd
dec
insl
mov
iret
cs
ja
push
lcall
in
imul
outsl
cwtl
shrb
fmul
mov
and
loopne
xchg
in
insl
out
jae
add
push
out
jl
je
inc
dec
iret
xchg
inc
xchg
out
les
sub
or
mov
and
dec
push
ds
jecxz
popf
int
xor
jg
mov
dec
stos
loopne,pt
cltd
fmuls
inc
lcall
lret
sbb
stos
push
mov
add
iret
jle
mov
inc
pop
pop
orb
imul
push
pop
or
adc
inc
inc
fildl
sbb
test
push
out
lahf
jb
cwtl
jno
push
arpl
jp
popa
inc
cs
movsb
ss
mov
pushf
leave
mov
inc
jmp
sbb
jg
into
xor
sub
jg
cmp
mov
pushf
jg
test
pop
jno
inc
mov
push
out
and
or
mov
lcall
sub
sub
shrb
lret
in
loopne
in
in
sub
out
outsl
or
aad
test
shlb
xchg
mov
int3
jle
lea
jmp
adc
xor
jbe
mov
mov
out
test
pop
push
aas
es
cmpsl
aam
mov
lret
push
jno
push
sahf
ljmp
jno
inc
cltd
stos
jo
clc
sbb
int3
daa
mov
push
enter
mov
in
sti
fisttps
push
jns
cmp
outsb
bound
and
popf
scas
xchg
andl
sub
cmp
leave
jmp
jne
inc
sub
jo
xchg
add
fcomp
sbbb
push
popa
xchg
jo
mov
cwtl
idivl
mov
push
mov
inc
cs
sub
mov
mov
jg
or
mov
cmp
push
cld
lds
adc
shrb
gs
sbb
movsw
mov
and
jnp
hlt
mov
sbbb
inc
sub
aad
jge
cwtl
movsb
movsl
arpl
lahf
mov
add
scas
push
test
ds
sub
loope
ds
fs
or
or
xchg
aam
push
pop
out
dec
inc
mov
xchg
dec
or
js
push
aaa
adc
lds
push
jno
jo
aaa
outsb
pop
jae
mov
sbb
mov
pushf
dec
sbb
stos
add
lcall
inc
int
mov
out
out
push
adc
pop
pop
or
test
nop
shlb
fsubs
push
push
mov
lock
add
rorb
adc
lret
mov
sbb
pop
adc
push
sti
or
lods
std
inc
icebp
lods
push
or
push
xor
and
or
ret
fdivl
fistl
sbb
mov
dec
or
mov
pop
adc
dec
bound
jo
fiaddl
mull
jle
dec
jbe
pushf
dec
xor
jmp
ja
test
jmp
xor
mov
jecxz
jle
mov
or
in
adc
push
mov
pop
dec
shll
and
sub
lret
or
xor
pushf
jge
cmp
ds
inc
add
mov
mov
inc
mov
je
adc
push
jmp
jne
push
daa
push
insl
call
pushl
jne
jbe
adc
cmpsl
hlt
cmp
jmp
ss
push
pop
and
xchg
movsb
int
std
lods
insl
insl
lahf
scas
cli
cmp
pushl
lock
sbb
and
dec
test
cmc
nop
and
stos
inc
sbb
das
xchg
repnz
sahf
lods
sbb
jp
xor
jne
rcl
loop
into
mov
push
in
hlt
adc
ret
or
mov
mov
jp
mov
lods
pop
iret
cld
push
jns
ss
dec
nop
bound
mov
aas
sbb
je
or
verw
mov
or
mov
inc
out
imul
mov
clc
xor
add
mov
pushf
sub
adc
xchg
push
adc
imul
adc
test
fucomp
fldl
and
add
inc
adc
cmp
into
fidivrl
xchg
fiadds
lea
add
into
mov
sub
add
icebp
int3
jle
add
test
jbe
xor
icebp
pop
test
leave
lods
cmc
pop
mov
jmp
ds
fwait
add
mov
movsb
xchg
popf
mov
cmc
les
and
adc
adc
xchg
pop
jns
stc
push
cmp
imul
ljmp
sbb
les
shl
fisubl
mov
bound
sarl
movsb
aaa
or
pop
jecxz
decb
sbb
cmp
add
add
loop
and
sbb
dec
rorl
inc
adc
mov
pushf
cs
jle
je
lods
or
xchg
dec
mov
shrl
imul
push
adc
cmpsb
mov
sbb
int
push
mov
push
test
and
cmp
hlt
test
and
xchg
movsb
push
sub
push
andl
es
and
out
sbb
push
jl
adc
or
xchg
push
rcll
aas
and
in
das
xor
das
mov
mov
aas
cmp
jecxz
out
fstpt
decl
shlb
bound
mov
jg
dec
loopne
mov
mov
mov
or
pushf
aas
prefetch
and
inc
adc
cmp
mov
sub
adc
jne
ljmp
adc
sahf
xchg
fs
mov
movsb
dec
leave
push
add
push
lahf
daa
push
mov
or
xlat
sti
sub
divl
mov
jecxz
out
mov
sub
mov
cmc
adc
hlt
cwtl
xor
lcall
ret
xchg
push
and
or
push
dec
imul
pop
and
mov
mov
sub
push
rcrl
inc
pop
imul
mov
jg
bound
dec
and
call
icebp
imul
add
dec
sub
lds
outsb
adc
cmp
sbb
inc
jne
dec
pusha
lods
fildl
sahf
cltd
pop
push
mov
push
fcom
sarl
lock
jne
inc
fstl
push
repnz
xchg
pop
dec
nop
jo
push
sub
push
add
je
xchg
mov
push
sub
and
push
pop
mov
sub
int
test
inc
xor
decb
fldcw
mov
push
pop
stos
push
and
jbe
pop
xchg
xchg
loopne
rclb
fsub
insb
movsb
pop
add
pop
mov
call
sbb
push
fldcw
mov
jecxz
xchg
sbb
addr16
dec
cli
repz
sbb
mov
cmp
xchg
daa
sub
add
stos
jnp
sub
push
sti
add
pop
call
push
mov
pop
test
fs
lret
pop
mov
or
dec
adcb
cmp
movsb
push
in
cwtl
sbb
out
xchg
jnp
js
push
sbb
adc
ret
ds
mov
cmp
push
cltd
lods
das
jnp
lahf
dec
or
les
xchg
inc
insl
imul
clc
movsb
push
and
adc
pop
adc
push
je
push
loope
cltd
add
sub
mov
xlat
sbb
mov
addr16
lock
and
cltd
sbb
iret
test
shrl
mov
xchg
xchg
push
pop
mov
mov
outsl
movsb
bound
xchg
push
ss
pop
in
xlat
or
movsb
add
decb
scas
ret
add
fidivs
int
xor
xchg
icebp
dec
int3
xorb
push
lods
testl
outsb
into
add
movsb
inc
int3
cmpsb
adc
je
pop
inc
leave
movsb
xor
popf
mov
rcrl
cs
mov
push
xchg
push
dec
cmp
push
leave
lahf
sbb
inc
std
pushf
sti
popa
push
pop
daa
test
mov
imul
into
stos
push
xchg
sbb
xchg
push
inc
or
mov
bound
and
mov
mov
sub
add
sub
pop
shlb
jns
sub
jecxz
icebp
insb
lds
push
cmp
sub
mov
mov
and
stos
jg
inc
mov
dec
jb
loop
imull
imul
sbb
xchg
inc
push
fldenv
sbb
inc
lahf
flds
iret
popf
addr16
pop
xchg
sbb
fwait
and
test
ret
inc
sbb
push
es
ljmp
jg
jl
inc
icebp
push
movsl
mov
mov
sub
mov
mov
dec
pop
adcb
orl
jp
in
cmpsb
push
out
xor
dec
and
add
mov
add
lret
xchg
retw
scas
outsb
jb
data16
dec
cmp
add
dec
push
sahf
mov
add
sbb
add
clc
subb
aaa
fdivl
int
fiaddl
add
cmp
cmp
push
jmp
add
fcoms
dec
pop
adc
pop
cltd
ja
std
add
cmp
push
arpl
int3
out
pop
adc
into
cltd
imul
int3
scas
xchg
mov
sbb
daa
add
cmp
js
and
popf
pop
std
jno
cli
add
mov
dec
inc
ror
leave
hlt
push
lods
frstor
push
sub
push
or
int3
xchg
hlt
dec
mov
fwait
addr16
push
call
enter
shlb
out
push
mov
inc
inc
pop
mov
daa
mov
cmp
jns
fcoms
int3
pop
fxch
mov
cmp
cmp
test
pop
mov
add
cmp
mov
dec
jb
les
sub
jno
mov
adc
or
cmpsb
mov
xchg
mov
gs
ret
jp
aam
jge
pop
xchg
fisttpll
rolb
cmpsb
jbe
or
xor
jbe
push
xchg
ds
jg
xchg
push
aas
popf
je
ja
pop
jl
mov
and
sarl
cmp
adc
push
inc
add
dec
scas
das
sti
jp
cmp
xchg
leave
pop
aas
es
or
jo
mov
or
jmp
push
or
mov
ret
pop
xchg
xchg
and
sub
test
sbb
stos
ret
push
lret
shr
mov
nop
std
repnz
or
std
mov
push
xor
mov
inc
call
in
lcall
xchg
pop
gs
push
int
fwait
ret
add
imul
mov
fimuls
setg
pop
lea
imull
es
xchg
bound
or
dec
cltd
mov
dec
add
jmp
scas
in
lcall
testb
adc
rcrl
push
out
pop
out
adc
add
push
insl
es
adcb
mov
cmp
andl
test
jb
icebp
out
mov
push
jno
ja
inc
in
xor
jmp
loop
arpl
outsb
cwtl
in
mov
xor
mov
mov
icebp
mov
cmpl
inc
push
or
push
sub
adc
cld
fdivr
inc
je
repnz
imul
cmp
or
jecxz
in
xlat
or
aam
mov
mov
mov
in
mov
clc
cmpb
cs
xor
lea
int3
lret
push
mov
jno
icebp
neg
push
xchg
inc
jae
push
lcall
lock
xor
loopne
inc
inc
dec
jnp
clc
negl
test
test
mov
push
jle
xchg
hlt
mov
js
adc
xchg
jecxz
nop
push
iret
nop
add
add
add
mov
cmp
insl
shll
lret
nop
dec
cmp
lcall
mov
ss
mov
add
je
addr16
movsb
sbb
call
testl
or
cmp
bound
jge
xchg
rcl
sti
cmp
mov
dec
jmp
dec
cmpsl
movsl
mov
leave
cld
push
stos
inc
pusha
rorb
in
xor
mov
mov
and
fsubrl
movsl
cltd
push
decl
cmpsb
sub
loop
int
mov
inc
cmpsb
mov
and
loop
fucomp
cmc
lcall
cmp
cmp
fimuls
push
jecxz
or
fidivs
les
inc
and
popa
pusha
and
pop
jge
lods
fimull
mov
test
sbb
inc
imul
mov
fisubrs
stc
dec
mov
xor
vpunpckhqdq
push
dec
out
cmp
loope
ja
cltd
pop
mov
pop
mov
pushf
call
xlat
mov
dec
repz
add
adc
cmpsb
cmpsb
push
sub
mov
lahf
hlt
insl
and
jecxz
adc
xor
cli
ret
out
into
mov
push
sbb
fidivs
sub
sub
xlat
push
add
int3
push
ret
lea
out
scas
dec
dec
rorb
js
mov
xchg
dec
push
loope
jo
mov
adc
sbb
push
mov
mov
repnz
jae
dec
sarl
mov
out
lds
or
jne
jns
cmp
stos
jl
sti
popa
inc
pop
inc
scas
xor
sbb
cwtl
mov
jg
push
cmpsb
sub
bound
dec
mov
int
jmp
test
sbb
lock
das
imul
fcompl
dec
popl
ljmp
sub
das
movsb
and
rorb
subl
jg
test
into
in
sub
jmp
insl
fimull
cltd
jno
pop
adc
rcrl
lods
or
adc
or
dec
push
ja
mov
ds
jae
xor
dec
insl
movb
sar
fcoms
nop
add
test
jle
aas
dec
roll
lea
outsl
xor
pop
mov
add
or
data16
enter
add
enter
movsl
xchg
jbe
mov
sahf
ljmp
popa
in
mov
push
pop
pop
sub
in
or
push
adc
push
ret
add
int
or
sahf
sbb
push
sub
push
xchg
outsl
push
loope
add
or
lret
fisttpl
andb
pop
lea
rorl
cmp
aas
sub
int3
push
dec
cmpsl
lods
gs
xchg
aam
cmp
adc
sub
decb
jae
in
xor
add
and
push
pop
jae
adc
push
push
adc
in
fidivrs
and
movsl
and
loopne
lret
ret
fsts
aad
or
inc
xchg
or
pop
jle
iret
pop
call
aaa
test
js
cmp
lret
scas
push
data16
sahf
sbb
ror
mov
lods
mov
xor
lret
push
arpl
loope
add
cmp
jmp
lods
in
and
jecxz
cld
dec
int3
sbb
add
mov
sub
fists
mov
xor
and
xchg
mov
mov
push
push
dec
loopne
int
xchg
rep
pop
cmc
sbb
popa
add
sbb
inc
wbinvd
insl
scas
sub
pop
xor
xchg
sub
gs
insl
jnp
out
cwtl
repnz
mov
pop
xchg
jl
sub
inc
mov
scas
mov
hlt
fcmovnbe
dec
mov
stc
enter
lock
inc
lea
mov
insl
sbb
fnsave
mov
es
test
jns
hlt
enter
fisubrs
jg
lret
xchg
outsl
xchg
outsb
jnp
imul
push
test
pop
insb
inc
das
jo,pt
adc
lds
xchg
lods
push
fists
add
sub
sub
insb
mov
push
xchg
sub
sub
aam
aam
ret
pop
mov
add
rorl
mov
mov
clc
out
sbb
jmp
xchg
mov
cmp
stos
ror
cmp
lock
mov
int
jns
shlb
movsl
mov
mov
pop
xor
inc
cmp
popf
sbb
xchg
pusha
pop
xchg
mov
mov
dec
pusha
sbb
lret
xor
xor
call
repz
mov
mov
inc
fdivrl
enter
cli
sbb
les
fimuls
sbb
arpl
and
mov
scas
clc
mov
pop
xor
into
imul
in
pop
mov
add
int3
mov
cltd
popa
add
inc
push
inc
rcrb
jb
sbb
fs
aad
or
in
push
or
pop
scas
jbe
adc
sub
pop
xor
pop
xchg
lds
xor
cmpsl
sbb
sti
push
testl
ljmp
mov
sti
xchg
jno
jle
xor
mov
cld
sub
psrlw
adc
into
and
jg
xchg
xchg
js
addr16
dec
out
ret
mov
sbb
inc
leave
ret
addr16
mov
dec
cmc
addr16
je
push
jle
ret
ret
pop
jne
xor
pop
add
or
mov
mov
lods
sarb
shll
or
xor
pop
rolb
rcrl
xchg
jmp
les
xchg
loop
bnd
adc
xor
and
adc
add
hlt
and
aam
les
xchg
loop
bnd
adc
xor
and
adc
add
hlt
and
aam
les
xchg
loop
bnd
adc
xor
and
adc
and
aam
les
adc
add
mov
fwait
mov
inc
lret
in
popf
cld
lea
movsb
xchg
pusha
test
adc
add
push
adc
test
lds
and
movsb
adc
hlt
inc
in
add
add
xor
sub
je
fs
mov
xor
int
fmull
stos
in
or
ficompl
mov
pushf
sub
jmp
mov
rolb
push
xor
cmpsb
decl
mov
sbb
lods
adcb
scas
jnp
int3
pop
sbb
jno
jno
xchg
subb
add
push
ss
fwait
pop
imul
inc
pop
loop
pop
ss
dec
jg
and
inc
sub
xor
test
cmc
je
lds
adc
lds
lahf
pop
add
imul
xor
fnstsw
push
inc
nop
sub
xor
test
xor
mov
hlt
mov
je
jl
fs
adc
das
sub
testb
in
test
dec
jp
lea
in
or
push
pop
and
movsb
pop
ret
gs
hlt
lahf
std
aad
and
sub
cmp
or
clc
ja
xor
cmpsl
adc
xor
push
cld
push
mov
addl
pusha
in
mov
sub
jecxz
loopne
repnz
mov
mov
icebp
jae
jb
push
int3
jbe
add
jne
inc
in
adc
add
xor
and
push
in
cmc
je
fs
and
movsb
adc
hlt
inc
in
adc
add
xor
and
push
in
cmc
je
fs
and
xlat
cmp
sbb
push
xor
jecxz
aas
scas
xchg
in
push
or
shr
xchg
mov
cwtl
xchg
aaa
movb
fistl
fildl
sti
arpl
roll
xchg
push
jmp
xor
mov
push
dec
xchg
mov
mov
test
sub
filds
jmp
popa
adc
xchg
rcrb
xchg
outsb
mov
mov
cmc
stos
sahf
cmp
mov
sbb
stc
mov
iret
ljmp
pop
xchg
push
or
cmp
push
mov
imul
or
fwait
sbb
outsb
pop
push
std
fcoms
xor
adc
rolb
lea
or
sbb
sti
jg
fs
xchg
pop
xchg
aam
fstpt
mov
mov
xchg
add
insl
sbb
inc
sub
adc
bound
adc
fwait
mov
cli
lock
sahf
sub
pushf
xor
and
pop
nop
mov
aad
stos
sbb
adc
in
cltd
mov
outsl
ja
divb
pop
idivl
pushf
adc
imull
jnp
movsl
scas
jl,pt
push
jb
aam
adc
das
cmpsb
aam
cmp
repz
jb
inc
orb
sbb
scas
scas
imul
cs
and
pop
cmp
mov
iret
mov
cwtl
loope
cmp
mov
std
inc
pushf
clc
dec
sbbb
popa
fmull
ret
push
and
cwtl
sbb
arpl
pop
lods
mov
dec
mov
pusha
out
fdivrs
mov
fnstsw
xchg
sbb
lret
lea
mov
mov
leave
mov
xor
xchg
lds
push
jno
inc
out
cmp
shl
cs
repnz
cmp
pop
adc
mov
lahf
xchg
imul
pop
outsl
adc
ficoml
dec
andl
or
xchg
in
sbb
mov
mov
nop
mov
jo
sub
inc
int
ja
leave
mov
xchg
ja
mov
lahf
sahf
lahf
xlat
test
or
adc
orps
push
cmp
fisubl
add
outsb
dec
fidivrs
sbb
sbb
aam
clc
fstpt
out
xchg
jg
loope
dec
sbb
xchg
aad
xchg
cld
movsl
dec
insb
clc
inc
mov
cmp
mov
leave
ja
mov
jle
repnz
mov
mov
shl
push
sbb
and
mov
add
clc
sub
in
aas
pushf
movsb
mov
and
sub
xlat
xor
imul
cmpsl
out
addr16
pop
cmp
nop
jns
adc
inc
jle
mov
xchg
mov
mov
sti
clc
insb
rcll
jbe
pop
push
sbb
pop
dec
jne
xchg
es
jne
and
test
stos
ret
adc
xor
mov
fistpl
cmpb
test
cmp
push
out
mov
inc
loope
lret
mov
adc
cmp
pop
mov
fldt
sub
or
add
and
mov
es
ss
dec
fdivl
mov
insl
xchg
bound
push
and
jns
xor
and
or
inc
call
test
pop
push
mov
jnp
push
xor
ds
sub
adc
lret
scas
jnp
xchg
sub
adc
jne
push
out
mov
shll
mov
mov
xchg
lds
sbb
enter
mov
data16
or
fimull
dec
push
ja
fsubl
into
mov
out
or
imul
cmp
mov
pushf
mov
jns
insb
xlat
fstps
out
mov
scas
in
sub
jle
stos
loope
pop
jge
adc
mov
sbb
push
dec
mov
xchg
in
sub
xchg
pusha
test
out
ret
xchg
mov
std
rcr
sbb
scas
jae
xchg
push
pop
scas
nop
lds
mov
mov
shl
jne
lds
inc
fsubrs
roll
repnz
jne
ret
cmpsb
fcmovne
lret
lahf
mov
cld
cmp
jle
mov
les
mov
pop
xor
mov
cmpsb
scas
cli
mov
shlb
fists
shll
imul
sti
sbbl
sar
test
lret
mov
stos
cmp
out
aaa
push
push
bound
xchg
call
inc
pop
sarb
std
aas
dec
cld
sbb
lods
xor
lret
jmp
cmp
cmpsl
negb
mov
mov
mov
push
jge
push
xor
fcom
adc
xchg
xchg
xchg
dec
mov
frstor
jle
xor
and
mov
xchg
sahf
enter
in
dec
das
gs
xchg
outsl
ss
add
cmp
movsb
xchg
outsb
fsts
jo
scas
mov
cmpsl
jmp
xor
push
lods
fdivrs
pop
ror
push
adc
psubb
lret
rorb
mov
movsl
xchg
repz
adc
movsb
out
test
xchg
rcl
adcl
mov
mov
scas
xorb
pop
ljmp
popf
repnz
mov
and
outsl
jo
push
movsl
xlat
jg
outsl
repnz
dec
add
add
pop
push
cwtl
cli
mov
fistpll
aas
adc
scas
les
cmp
pop
movsb
mov
ret
imul
xlat
call
rcr
movsb
and
pop
hlt
fs
jg
mov
xor
dec
or
adc
ret
or
hlt
add
and
mov
sub
lret
cmc
popf
lret
xadd
in
leave
es
jmp
dec
xor
mov
sub
lds
popf
push
push
push
inc
cmp
inc
add
arpl
mov
dec
push
fwait
xchg
cld
adc
push
inc
outsl
push
iret
icebp
or
sbb
aad
xchg
mov
ret
fildl
fldenv
pop
jge
xchg
movsb
cmc
add
iret
ja
scas
dec
ja
shll
inc
pushf
pop
push
rcrb
ss
repnz
inc
add
sbb
aam
sarl
rol
int3
mov
pushw
cmc
shll
sub
ficomps
movsl
xchg
movsl
popa
out
jne
stos
xlat
or
jnp
popa
push
rclb
sub
pop
mov
lods
nop
ds
sub
or
das
xchg
cli
jmp
mov
jb
frstor
jecxz
mov
push
push
out
stos
xchg
daa
int3
ret
inc
test
mov
dec
mov
das
fisttps
out
and
arpl
push
cmpsb
cmpsb
cmp
mov
mov
movsb
push
shl
jo
and
cs
jmp
popa
cwtl
jmp
cmp
jmp
add
and
jo
sub
mov
les
dec
int
lret
mov
dec
xchg
jb
push
daa
in
aaa
push
enter
push
xchg
xchg
jae
stc
clc
or
and
pushf
in
push
and
xchg
adc
hlt
lret
loopne
daa
sbb
roll
xlat
sub
loope
adc
adc
push
out
sub
mov
xchg
xlat
ljmp
push
adc
sub
push
mov
cmp
add
je
dec
mov
insb
sub
shrb
mov
call
push
xchg
dec
gs
test
es
or
pushf
lret
inc
mov
mov
stos
dec
nop
cwtl
cmp
xchg
jns
sub
outsl
test
xchg
xlat
imul
mov
cmp
dec
orb
inc
and
fsub
adc
iret
adc
imul
insb
push
insl
out
out
dec
aas
fwait
dec
add
dec
sub
fnstsw
mov
outsl
adc
in
pop
sarl
fisubrs
outsl
add
sbb
and
into
mov
pop
jp
inc
mov
inc
pushf
add
sbbb
mov
mov
repz
out
adc
repnz
fdiv
dec
or
mov
mov
sahf
ror
outsl
shrb
mov
ja
add
lcall
adc
mov
mov
lahf
mov
cmp
test
add
sbb
dec
mov
mov
sti
iret
sbb
notl
dec
mulb
fimuls
insb
negl
xchg
pop
lock
sub
dec
insb
jg
push
xorb
pushf
das
clc
xor
gs
lahf
xchg
nop
fists
dec
ja
sbb
imul
or
loop
jecxz
push
out
sub
adc
dec
mov
or
cld
xchg
mov
cmp
mov
aad
int
shr
xchg
pop
add
push
pusha
mov
popa
pop
iret
cmp
sub
xchg
loopne
int
iret
lds
dec
push
jns
stos
sahf
fs
popa
fcmovnb
pushf
mov
stos
mov
ja
inc
sbb
cmc
outsb
sbb
cwtl
dec
push
hlt
outsl
test
push
dec
pop
faddl
add
jp
xor
add
push
mov
adc
aaa
mov
jns
rorb
lcall
dec
dec
dec
lods
data16
sub
lret
or
dec
xor
push
nop
cmp
lret
sub
adc
pop
push
xchg
daa
xor
xor
enter
pop
add
jmp
mov
mov
mov
mov
mov
pusha
data16
call
cmp
mov
add
aam
lret
mov
cmpsl
add
pop
call
testl
dec
clc
cmc
xor
xchg
push
shl
cmpsl
dec
hlt
lahf
std
lret
jns
push
add
mov
mov
xor
mov
icebp
rcll
imul
jno
xor
mov
and
add
jecxz
insl
sub
mov
lods
call
popf
cmp
popa
push
xor
or
jle
testb
xlat
cmp
stos
sbb
push
in
jnp
mov
xlat
xchg
dec
pusha
add
cmp
into
add
push
mov
pop
movsb
mov
sub
sahf
sub
out
enter
xchg
pop
insl
pmulhuw
shrl
icebp
mov
mov
and
scas
add
xor
and
enter
mov
lea
xor
movups
push
fwait
mov
mov
mov
mov
xchg
cmp
enterw
into
sub
orb
test
xor
cmp
in
faddl
sahf
sub
and
adc
adcl
sub
or
push
pushf
mov
into
insl
push
jp
out
imul
ds
adc
jno
cmpsb
adc
fucomip
lock
pop
cmp
fcomps
xchg
xchg
popw
popf
stos
cmpsl
pushf
outsb
adc
fcoms
cmpsl
adc
add
adc
pop
jo
and
scas
jae
mov
scas
xchg
xchg
lahf
stc
fldcw
and
bnd
shlb
stos
lret
test
out
pop
fwait
inc
mov
push
sub
es
dec
jae
xchg
jo
pop
dec
icebp
push
scas
adc
push
or
scas
scas
cmp
ja
dec
jbe
jo
mov
movsb
pop
xchg
pop
cmp
adcl
mov
mov
ret
rcrl
cmp
mov
or
adc
xchg
add
std
jns
or
xchg
push
mov
mulb
fdivl
push
pop
lea
pop
subb
and
push
test
lahf
inc
mov
jp
and
lds
aaa
dec
push
push
xchg
fimuls
cmp
mov
popa
mov
adc
fstps
or
jecxz
add
sbb
mov
mov
fsubs
cmp
jmp
or
out
icebp
aas
inc
add
into
cltd
sahf
inc
in
add
add
and
pop
cmp
xchg
movsb
je
pop
pop
in
pop
stos
sbb
aaa
scas
shr
jle
pop
inc
es
mov
fstl
pop
and
mov
sbbb
repz
push
nop
sbb
mov
outsb
add
pop
add
xor
inc
mov
movl
inc
inc
push
dec
jne
and
xor
je
adc
jne
jnp
lcall
inc
mov
jbe
scas
je,pn
sub
inc
push
lahf
aad
mov
pop
into
push
mov
xor
jb
xchg
ljmp
sub
jbe
cmp
mov
movsl
sub
lds
imul
jmp
mov
pop
push
inc
cs
pop
test
testb
xor
sarl
mov
mov
push
add
push
lods
mov
movsb
in
lea
jp
xchg
rorl
iret
or
cmp
and
push
dec
pop
mov
mov
sub
mov
jl
pop
adc
ret
cmp
mov
pop
jge
push
cltd
xchg
lock
fwait
lret
mov
leave
adc
push
out
ss
int3
aaa
and
push
add
pop
les
inc
mov
xor
pop
sub
xchg
mov
cmp
mov
pop
fidivrl
and
jmp
dec
ds
sbb
pusha
mov
push
push
jnp
xchg
cld
sub
inc
jg
int3
scas
sbb
pop
insl
fdivrp
add
pop
jno
je
and
in
cmpl
stos
xor
xor
dec
shrb
lods
cmp
sub
bound
and
dec
or
cmpsb
mov
dec
imul
xchg
repnz
hlt
adc
mov
xchg
mov
daa
cmp
loop
push
lea
cs
mov
imul
and
xchg
rorl
mov
inc
xor
jp
mov
lds
sbb
cmp
pop
bound
ljmp
js
fidivs
stos
daa
jmp
or
or
lods
dec
les
jp
dec
mov
push
adc
mov
mov
scas
xchg
xchg
sub
mov
clc
and
loope
add
mov
lods
jmp
cs
addr16
pop
inc
dec
dec
iret
mov
sbb
pop
or
lods
hlt
mov
cli
cmp
and
inc
loopne
sub
cltd
mov
push
xor
test
cwtl
arpl
pop
cltd
rcll
push
mov
dec
pusha
push
fcoms
sbb
push
jge
xchg
fisubs
push
sarl
into
sbb
out
inc
cli
arpl
jne
push
adc
in
mov
or
push
inc
sti
lret
xchg
icebp
pop
pop
pop
fsubrl
dec
insb
dec
sbb
sub
adc
sbb
addr16
mov
cltd
xchg
mov
or
repnz
and
sbb
jl
scas
js
inc
add
aas
aaa
jnp
lret
cmc
push
mov
in
mov
jo
jns
mov
mov
fstps
int
out
jmp
dec
pop
int3
cmc
scas
outsb
push
ljmp
push
into
mov
ficomps
mov
lret
dec
ja
jno
cs
ljmpw
mov
xchg
cmp
cmc
mov
adc
lret
bound
mov
xchg
dec
cld
dec
sbb
jbe
add
into
outsl
cmp
xchg
mov
xor
push
xor
leave
out
iret
add
sbb
aad
lods
add
and
and
call
sarb
add
out
aas
test
mov
in
adc
roll
mov
int3
mov
cmp
in
js
inc
mov
adc
sahf
into
sub
mov
lods
xchg
mov
jp
adcl
jno
mov
mov
jl
fwait
push
push
push
sbb
dec
iret
jl
lcall
je
xorl
or
std
dec
iret
into
push
mov
lea
shlb
cmp
xor
dec
jge
test
adc
xor
adc
dec
sarb
in
sbb
pop
popl
repnz
jo
jg
scas
aam
fisubrs
xchg
jno
insl
inc
cmp
mov
cmp
loopne
fsubs
in
lods
pop
or
or
xchg
movsb
and
inc
loope
pushf
gs
xor
lcall
xor
sti
adc
push
cwtl
sbb
cmpsb
enter
icebp
xchg
cmp
outsl
ds
mov
jb
nop
fidivl
int
sub
jmp
push
sub
aas
in
mov
push
or
cmpsl
mov
pop
mov
fimull
xchg
sahf
inc
jg
mov
out
jb
mov
pop
jne
lret
sbb
scas
push
jb
mov
rcr
rcrl
inc
or
stos
jns
dec
pop
in
test
es
icebp
lock
mov
cwtl
pop
test
sbb
inc
or
sbb
fisubl
mov
rorb
cmp
outsb
test
inc
jg
cli
outsb
inc
cmc
inc
lcall
xor
shlb
or
out
jp
nop
cmp
adc
out
xor
rorl
ficomps
cmc
pusha
test
leave
cmp
rorl
in
xchg
jg
or
data16
xchg
cli
sbb
repnz
std
mov
push
jp
mov
pop
inc
outsb
callw
mov
out
icebp
push
pop
mov
sbb
jnp
dec
aaa
int
xor
nop
ja
sbb
popf
lret
imul
ror
ss
fbstp
aad
mov
push
mov
xchg
mov
mov
ljmp
addr16
lock
mov
stc
movsb
orb
push
ss
ja
inc
les
mov
jmp
std
ret
push
push
mov
push
popf
jmp
cmp
arpl
or
mov
rcl
add
xchg
fimull
pop
out
lcall
das
cmp
subb
inc
loope
jl,pn
cwtl
shlb
mov
cmp
xchg
ljmp
adc
sbb
mov
cmpl
and
cs
adc
inc
inc
rcrb
xor
xchg
and
jns
inc
ret
xor
mov
ret
pop
out
ds
in
sar
push
inc
xor
das
popf
jne
cmpsl
call
push
add
rclb
rorl
in
loop
xor
adc
sarb
and
sarl
cmp
lea
and
mov
mov
jb
out
adc
test
sbb
mov
jns
inc
mov
lahf
in
inc
cmp
fisubrs
add
cwtl
int3
cmp
mov
fs
popa
outsl
mov
sub
std
in
std
pop
pop
push
mov
ljmp
repnz
cmp
lret
sub
or
jb
shr
rcrl
mov
dec
xchg
repnz
pop
jnp
and
cltd
mov
jmp
or
dec
fmull
mov
andb
mov
lret
gs
rcrb
shll
pop
dec
push
and
mov
fdivr
sub
test
xor
push
cmp
scas
test
shlb
int
pushf
lds
jmp
fldt
dec
push
shrl
mov
cmpsb
fwait
popa
dec
call
push
lods
insl
sbb
mov
sarl
paddd
pop
lahf
sbb
hlt
scas
pop
xchg
pop
jae
sbb
test
mov
mov
and
mov
pop
add
push
xchg
outsb
pop
in
das
fstl
adc
sar
pop
mov
inc
test
add
repz
cmp
push
jo
stos
adc
pusha
mov
lock
sub
loope
fiadds
repz
leave
push
ds
sub
sbb
mov
pop
jns
jg
mov
pop
jns
or
xchg
and
pop
enter
mov
mov
pavgw
fst
pop
pusha
mov
out
movsl
pop
movsl
daa
test
dec
aas
add
insl
roll
subb
or
sbb
mov
mov
lds
data16
pop
adc
cmpsl
test
mov
fsubr
sbbb
xchg
test
sub
dec
inc
push
xchg
xchg
inc
fwait
repnz
cltd
int
pop
cs
xchg
fs
in
mov
dec
and
icebp
dec
jae
out
and
pop
insb
aas
fstl
sti
rcll
int3
mov
and
cmp
dec
push
jns
and
rorl
xor
jbe
dec
add
sub
push
jmp
and
push
sbb
pop
fs
addb
adc
push
mov
movsl
cltd
out
cmpsb
fdivrs
sbb
inc
push
xor
aaa
subl
ret
fwait
dec
mov
ds
adc
lret
repz
inc
inc
arpl
jns
xchg
pop
xchg
pop
add
aam
nop
outsb
shrd
cmpsb
inc
aad
or
lods
insl
mov
xor
aas
cmp
mov
cli
loope
stos
xlat
dec
loopne
xchg
pop
addr16
mov
push
cwtl
idivl
les
fimuls
test
cmp
mov
adc
jge
sub
pushf
in
cli
jne
xchg
cmc
adc
adc
in
dec
inc
pop
mov
add
push
adc
jg
pop
loop
stos
xor
cltd
mov
movsb
adc
hlt
inc
in
adc
add
xor
and
push
in
cmc
je
fs
and
movsb
adc
hlt
inc
in
adc
add
xor
and
push
in
cmc
je
fs
and
movsb
adc
hlt
inc
in
adc
add
xor
and
push
in
cmc
je
data16
and
movsb
adc
les
lds
pop
sti
pop
sahf
test
and
or
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
outsb
inc
pop
push
dec
ds
inc
and
push
movsb
icebp
out
ret
fdivp
into
mov
sahf
xchg
mov
jno
jno
push
dec
and
xor
add
adc
jmp
icebp
out
movsl
ficoms
into
mov
sahf
xchg
mov
push
dec
cmp
sub
sbb
push
push
loope
cli
mov
scas
movsl
into
mov
cld
lret
clc
mov
jle
sbb
clc
int
xor
or
aad
dec
jbe
adc
cld
cs
dec
inc
mov
into
shl
adc
push
sub
mov
iret
sbb
sahf
sbb
in
imul
test
xor
jecxz
push
adc
mov
push
mov
popa
outsl
mov
aas
and
jmp
int
sti
shll
xor
js
and
and
rcll
loope
pop
jmp
and
std
or
jmp
lahf
imul
push
pop
fdivrl
pushf
cmc
mov
mov
add
ds
into
popa
inc
mov
mov
pop
inc
dec
xor
sub
add
or
clc
jmp
into
mov
sahf
mov
adc
adc
and
xor
outsl
add
jle
xchg
icebp
xchg
rcl
xlat
in
hlt
jmp
aas
jno
and
push
sbb
pop
add
push
push
jecxz
icebp
addb
shl
xchg
loopne
cs
sbb
push
cmp
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
mov
sbb
cmp
out
sub
test
mov
outsl
cmp
jg
insl
sarb
jb
mov
loope
lock
out
test
nop
out
xchg
inc
inc
fadds
ds
outsb
inc
mov
sbb
mov
inc
add
ja
pop
repnz
aas
cmp
in
sbb
pop
je
or
call
pop
loope
mov
imul
pop
mov
xchg
das
xchg
xchg
repz
imul
xchg
xor
testl
cmp
add
rorb
loop
lret
dec
stc
xlat
sbb
popf
std
jns
pop
push
aaa
gs
sub
cmpl
add
dec
adc
pop
arpl
jp
mov
fldcw
mov
or
sub
cmp
jno
sbb
fcompl
xchg
clc
mov
sub
mov
movsl
push
aaa
jno
repz
push
aad
lahf
adc
out
mov
mov
outsl
ljmp
xor
ja
xchg
fs
outsl
repnz
inc
lret
jo
cmpsl
xor
lods
test
lret
xchg
es
adc
push
xor
enter
inc
mov
jo,pn
pop
test
shlb
mov
mov
stos
fisttps
mov
adc
bound
xchg
push
stc
out
cmpsl
inc
out
xlat
adc
and
cmp
sbb
lahf
mov
xchg
push
test
lahf
leave
sti
inc
subl
int3
inc
cmp
lcall
mov
mov
sub
test
scas
pusha
fisttpll
mov
aaa
mov
adc
mov
sarb
lods
rorl
sbb
lea
sbb
xchg
xchg
mov
or
mov
iret
scas
mov
loop
fisubs
testl
fimull
cmc
push
inc
sub
sbb
mov
aaa
testb
adc
jnp
pop
xor
and
or
fmuls
or
mov
test
sti
and
push
add
cli
mov
test
pop
inc
cmp
and
mov
adc
xchg
mov
jae
rcll
lea
aaa
pushf
jae
jmp
pop
xor
pop
jecxz
int3
dec
dec
es
mov
outsl
add
sbb
or
push
lret
gs
cmpsl
add
ret
insl
mov
and
ja
jmp
repz
mov
mov
inc
lahf
add
test
sbb
clc
pop
mov
xchg
and
xchg
jb
cmc
into
jae
adc
mov
lods
ret
cmp
out
in
fcomi
mov
mov
push
adc
xor
dec
gs
and
cmp
push
adc
dec
pop
inc
dec
mov
std
jae
faddl
pushf
sbb
aad
in
lcall
pop
cmp
cld
cmpsl
enter
lea
mov
mov
je
js
push
loope
jns
ficompl
cmp
mov
gs
clc
fcoml
and
and
in
addr16
data16
shrl
sti
sbb
popf
imul
cmp
lds
mov
or
mov
call
jmp
sub
push
sub
outsl
push
aas
adcl
mov
std
sub
aas
dec
add
cmpsb
scas
cmpsl
push
out
add
into
adc
pusha
sbb
iret
mov
shlb
pop
ss
subl
popl
push
jb
or
sub
jae
add
jnp
cmp
or
sub
sbb
mov
test
add
pushf
hlt
jge
inc
dec
mov
lahf
inc
ljmp
mov
out
cwtl
lds
inc
mov
mov
pop
mov
mov
xchg
mov
jg
push
jae
push
ljmp
mov
jge
hlt
movsb
mov
mov
cli
mov
inc
mov
xchg
rcll
push
int3
inc
cmp
jbe
daa
fsubrl
mov
orb
faddp
and
out
out
aad
jnp
xchg
cmp
in
repnz
out
fldt
adc
add
push
push
fstl
lret
pushf
inc
add
push
jae
dec
adc
js
sub
fldenv
cwtl
mov
les
mov
nop
arpl
stos
ss
orb
xor
fs
xorb
test
movsl
lea
dec
xchg
sbb
call
push
mov
dec
out
lods
xchg
jbe
out
push
lret
jle
inc
ljmp
pop
call
scas
repz
ja
shrb
push
or
addr16
and
push
add
xor
adc
test
pop
mov
jbe
in
sub
push
outsb
jle
inc
hlt
test
cmp
cld
or
lea
imul
sub
dec
test
xor
int3
cmp
add
ret
repnz
scas
inc
mov
jge
bound
stos
pop
add
mov
jbe
test
xchg
sbb
push
mov
mov
fistpll
xor
adcb
sbb
add
test
not
outsb
movsl
pop
ret
scas
clc
jae
inc
shl
imul
fs
outsl
pop
push
incl
cmp
pop
pop
mov
and
sti
je
loop
outsl
rcll
dec
push
mov
fwait
mov
movsl
aam
into
pop
les
bound
dec
mov
in
lds
mov
cmp
adc
fmul
outsl
mov
jge
mov
mov
in
pop
ljmp
mov
test
lock
xchg
adc
mov
sbb
mov
adc
pop
lods
daa
mov
or
ljmp
mov
sub
cmp
test
mov
xchg
fiaddl
sbb
repnz
sbb
call
add
ds
push
cltd
inc
jo
sbb
loop
mov
mov
aaa
cmpsb
out
push
jno
cmp
dec
stos
dec
mov
aad
sar
cmp
pop
rolb
sbb
sahf
xchg
push
mov
lahf
out
sahf
xor
xor
ljmp
fstl
imul
cltd
pop
scas
add
cmp
lock
enter
faddl
mov
jg
xchg
push
dec
mov
adc
das
push
push
jmp
mov
clc
xor
gs
pop
in
inc
scas
lods
das
loop
scas
into
push
dec
mov
addr16
into
pop
aad
adc
lcall
push
xchg
xorl
push
inc
mov
stos
test
loop
xchg
cmp
or
sbb
add
test
cmp
xor
pop
xor
xchg
push
imul
fs
mov
stc
jl
adc
and
xor
and
pop
je
cmp
int
leave
out
mov
hlt
mov
pop
adc
btc
das
sub
dec
sti
mov
cmp
dec
jecxz
iret
aas
xlat
inc
mov
rorb
lret
mov
and
mov
scas
push
divl
in
inc
ds
outsl
lods
cmp
imul
jge
mov
or
or
in
gs
out
xchg
lret
inc
or
call
dec
sbb
mov
fldenv
adcb
jb
scas
pop
xchg
xor
mov
adc
ja
mov
xorl
adcl
lods
jns
rcrb
sbb
xchg
fisubs
inc
sbb
scas
sub
mov
sbb
fisubrl
insl
sahf
pop
dec
movsb
add
sub
sub
gs
cmp
aas
arpl
ja
lods
inc
rolb
sub
adc
in
fldt
cmp
mov
or
ja
cmpsb
or
out
jo
hlt
xor
mov
sahf
nop
or
mov
xchg
fwait
clc
lock
pop
scas
mov
mov
xchg
jmp
push
xorb
dec
cmp
cmp
movsl
loop
insb
insl
cmpb
aas
and
add
pop
or
mov
out
ror
mov
cmp
outsb
sbb
dec
sub
jl
push
and
lods
lcall
jmp
cmp
ficoms
fimuls
lods
xor
das
mull
push
inc
mov
push
loope
push
lds
iret
xchg
sub
mov
loopne
fmul
daa
pop
cmp
into
das
mov
mov
aam
andl
mov
decb
outsb
pusha
xchg
xor
mov
lock
xor
popf
pop
mov
adc
push
cli
je
leave
sbb
push
subl
jp
insl
scas
xor
adc
bound
xor
aad
mov
jnp
sub
jmp
cs
adc
call
cmp
aam
pop
xor
enter
mov
movsb
inc
inc
aad
inc
call
es
jnp
daa
cmp
jmp
pop
cmpsb
jle
pusha
test
lods
loope
lds
and
and
xor
and
push
aaa
gs
dec
test
divb
cwtl
fwait
jg
test
xor
add
cmp
mov
sbb
icebp
lock
adc
mov
dec
adc
sarl
cmp
and
jl
mov
insb
in
rclb
cmp
dec
mov
mov
pop
shll
fwait
lret
mov
pop
enter
mul
push
push
sti
sti
mov
fs
pop
ficoml
xchg
dec
aam
mov
lock
pusha
push
repz
sarb
adc
aam
cmp
cmp
jecxz
in
addr16
push
cwtl
pushf
or
push
mov
sub
in
lds
xchg
xchg
mov
mov
sbb
push
jle
jne
hlt
cmc
or
mov
cmp
sarb
sbb
jecxz
mov
out
or
in
jne
cwtl
popf
repnz
push
dec
pop
gs
loopne
data16
rorl
shlb
outsl
in
loop
jbe
mov
scas
push
scas
std
test
ror
mov
ds
dec
scas
pop
pushf
subb
sub
ret
add
mov
pop
pop
sti
sbb
xchg
loope
mov
loop
pop
mov
inc
mov
mov
mov
or
pop
cmp
aas
push
or
call
sbb
mov
daa
aaa
or
jbe
shll
cmpsl
add
fnsave
mov
in
aaa
lea
outsl
xchg
js
bts
int
repnz
xlat
rcrb
mov
je
add
iret
pop
dec
mov
testb
cmp
out
jg
or
ds
and
mov
aaa
pop
dec
jle
xchg
push
loop
mov
add
mov
loopne
xor
inc
mov
sbb
fs
fcomp
test
shl
and
sahf
imul
lret
or
dec
cli
lret
outsb
mov
ret
ds
adc
jecxz
iret
xchg
jo
sub
dec
ja
pusha
orb
div
fdivrl
aam
xchg
loopne
xor
sbbl
nop
cltd
jne
xchg
fsubp
dec
nop
mov
je
outsl
sarl
push
subb
or
call
xor
pop
inc
inc
adc
icebp
jmp
cmc
xchg
fs
ja
test
stos
sbbb
aas
xor
idivb
pop
cmpsb
inc
cli
push
or
pop
movsl
stos
adc
data16
cmpsl
neg
and
xorl
neg
mov
mov
dec
fdivrl
aam
inc
shrb
incb
cmpsb
arpl
loop
jnp
mov
mov
into
sub
cltd
in
shll
test
push
mov
push
cmp
add
push
mov
push
push
push
popf
and
insb
jns
mov
jno
addr16
into
imul
or
into
cmp
scas
adc
inc
inc
and
mov
mov
dec
and
jae
push
mov
dec
jbe
ja
push
pop
pusha
ret
pop
push
iret
sbb
pop
bound
shrl
jmp
xor
mov
xor
mov
adc
adc
testb
mov
adc
lods
cmp
mov
dec
xchg
add
cwtl
pusha
lea
inc
aad
sbb
imul
xorl
mov
mov
adc
loop
or
xchg
les
cld
into
sub
stos
aam
les
loopne
inc
aad
cmpsb
ss
or
or
dec
or
xchg
and
stos
add
and
jb
sti
inc
lods
lods
fisubrl
add
xchg
imul
fildl
in
push
sbb
lods
jp
popf
cmp
loop
mov
sub
dec
dec
cs
int
jle
ret
inc
into
pop
cmp
inc
int3
or
je
add
sub
pop
mov
sub
pop
imul
fsubp
jg
mov
or
inc
js
cmpsl
loopne
push
cmp
xchg
aad
lods
cltd
push
mov
inc
sbbb
mov
jmp
mov
jne
sub
and
sbb
jl
pop
mov
lahf
mov
mov
pop
shll
divb
ljmp
in
inc
stc
xchg
jecxz
or
cmp
decl
push
aad
mov
in
pop
repnz
popa
mov
test
aam
call
jno
dec
ret
xchg
cmp
mov
pop
das
mov
xchg
sub
fld
repz
mov
inc
push
imul
insl
movsb
xchg
lds
ss
enter
fucomip
sub
in
fsubrs
scas
dec
mov
lret
cmp
jl
lods
rorl
push
mov
xchg
push
in
icebp
ret
insb
imul
jne
mov
in
mov
in
cmp
mulb
out
inc
push
and
xchg
ja
nop
enter
and
xchg
sub
cmp
sub
mov
push
push
cltd
movsb
adc
addr16
and
jl
jg
stos
xlat
jp
pop
mov
cmp
in
mov
imul
pop
and
push
sti
movsb
dec
call
negb
out
xchg
xchg
fs
mov
dec
push
jg
xor
sub
fcmovnu
mov
cmc
inc
mov
jle
mov
ljmp
pop
orl
pop
fmul
dec
dec
push
mov
push
es
dec
xor
xor
sub
dec
push
lret
jle
mov
lods
ret
fnstenv
add
lcall
aam
pop
ja
sub
mov
inc
enter
addr16
repnz
xchg
gs
and
or
adc
insl
inc
data16
sarl
fiaddl
sub
cmovg
repz
sbb
and
int3
sub
or
xchg
ss
push
jmp
mov
pop
sub
imul
cmp
xor
dec
test
rcrl
mov
mov
mov
dec
or
es
popa
out
lods
jns
xlat
sub
push
xor
inc
push
loop
and
sbb
cmpl
add
jne
sub
xorl
insl
cmp
shll
insl
xor
push
mov
sbb
add
pop
movsb
mov
adc
rorb
ljmp
outsl
xor
stos
cmc
jnp
in
dec
push
jecxz
loope
mul
std
aaa
pop
mov
daa
lock
pop
dec
mov
es
adc
popf
call
subl
or
sbb
lret
mov
mov
lcall
lea
in
fs
sbb
mov
fistpll
or
loop
and
out
in
movsb
ja
inc
data16
dec
cmpsb
rclb
scas
decl
push
adc
insb
ja
outsl
sbb
out
lods
mov
aaa
push
and
jp
movsb
cld
dec
test
popa
test
xchg
xor
rcll
sub
bound
stc
lods
call
shr
dec
and
icebp
mov
sub
lea
ss
sbb
push
shrl
sbb
fidivs
cmp
cli
mov
gs
test
fistps
jp
inc
cmpsl
cmp
add
adc
jp
adc
or
pop
call
cmp
shrb
push
jne
sbb
orl
in
xchg
ficoml
cmpsb
shll
pop
sub
stc
adc
fisttpl
sub
push
jno
pop
dec
mov
jl
xor
dec
lcall
push
and
aas
test
stos
lds
cmovbe
mov
or
or
pushf
sub
imul
xchg
mov
add
mov
xchg
cmp
imul
or
rol
clc
sarl
popf
mov
push
les
or
aam
xchg
adc
pop
adc
xchg
inc
in
sub
jo
cmc
or
xchg
popf
pusha
gs
shl
adc
scas
mov
mov
iret
push
into
mov
arpl
cli
mov
test
fs
daa
les
jo
inc
stc
ror
cli
sbb
push
pop
imul
xor
cmp
lret
sahf
mov
xchg
adc
lds
xor
cmp
ds
sub
mov
insl
call
arpl
outsl
jg
adc
push
bound
sarl
ds
or
mov
orl
adc
mov
jge
cwtl
sbb
push
jb
pop
sahf
inc
mov
loopne
movsl
jb
test
push
in
sub
mov
js
mov
and
jle
cmp
iret
sub
cmp
mov
sbb
js
hlt
pushf
dec
xchg
fidivs
cmc
inc
test
push
imul
mov
subl
mov
fisubl
clc
fidivrs
std
fidivrl
or
hlt
aam
push
sti
dec
cmpsb
mov
or
xor
out
adc
cmp
sar
call
jns
mov
fwait
jp
cmp
clc
or
xchg
ret
push
scas
or
pop
xchg
cmp
xchg
sbb
inc
add
jno
add
daa
scas
sub
pop
mov
decl
lcall
in
inc
scas
int3
lcall
out
cltd
jae
or
adc
lea
xorb
sti
iret
lds
sbb
mov
clc
adc
mov
push
cmp
xchg
testb
push
mov
scas
add
out
lcall
mov
push
fdivrs
mov
xchg
imul
dec
lods
cmc
imull
push
push
into
sub
outsl
xchg
jo
or
pop
repnz
or
cmc
adc
and
inc
das
jp
sbb
popa
cmpl
loopne
mov
notb
and
sbb
adc
and
cmp
xorb
je
inc
or
mov
jns
pop
inc
xchg
mov
xlat
add
std
rcl
int
add
pushl
push
cld
inc
mov
call
inc
addr16
rcrl
mov
out
push
push
cmp
xchg
lds
mov
push
jecxz
push
xchg
xchg
xchg
xlat
test
cmp
lcall
and
dec
int3
popa
adc
leave
push
xor
add
in
inc
xor
testl
rcll
mov
roll
in
xchg
push
cmpsb
mov
shrl
aad
fidivs
pop
sub
call
mov
bound
sub
push
sarl
mov
jecxz
jno
test
mov
adc
pop
in
mov
xchg
out
out
adc
jg
out
lods
fcmovbe
jecxz
add
sub
xorb
pop
jbe
pop
mov
mov
imul
sub
adc
fwait
or
outsl
repnz
movsl
cmp
mov
push
mov
insb
repnz
in
lret
ret
push
adc
or
das
lcall
lods
aad
loopne
cmc
iret
push
fadds
pop
mov
pusha
adc
sub
mov
addb
cld
mov
adc
je
fistl
and
in
and
xchg
ret
push
adc
cmp
lods
fstl
mov
into
add
jle
dec
pushf
mov
jp
or
mov
mov
xlat
dec
repnz
xchg
daa
je
imul
sub
andb
sub
shrb
inc
sbb
test
shll
aam
call
or
mov
mov
or
xor
jecxz
mov
cmp
mov
je
fcoms
popf
lea
cmp
scas
je
and
jp
test
jb
lock
das
and
mov
pop
xchg
adc
or
int
sbb
leave
jmp
in
cmp
inc
scas
repnz
jae
mov
scas
pop
mov
push
in
call
inc
in
push
adc
and
jg
mov
mov
xchg
or
jmp
fcompl
adc
les
leave
pop
outsb
loopne
push
dec
and
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
into
mov
sahf
mov
outsb
ja
push
dec
and
xor
push
add
inc
imul
mov
jle
outsb
jno
inc
stc
push
jno
popa
jae
dec
push
xor
jecxz
repz
addl
pop
inc
inc
push
jno
popa
jae
add
adc
and
dec
add
loope
xchg
out
in
mov
mov
push
mull
jae
add
sbb
ret
lods
lock
xchg
adcb
int
rclb
popa
sbb
and
test
mov
sub
dec
mov
hlt
sub
fisttpl
call
xchg
sbb
movsl
cmp
cmp
push
testb
adc
adc
mov
push
pop
jno
loope
cltd
or
inc
rcrb
xchg
xchg
ds
push
mov
or
inc
decb
adc
cmp
dec
xor
adc
and
les
sub
addr16
adc
subl
pop
mov
aaa
mov
out
mov
adc
cmp
lahf
push
sbb
mull
adcl
mov
xor
fdivs
sarb
xor
loope
adc
add
bound
push
jno
or
adc
and
shrl
jecxz
repz
sbbl
and
adc
data16
and
addr16
adc
xchg
test
out
push
es
ss
stos
jae
outsl
pusha
pop
pop
dec
push
push
jmp
mov
xchg
loop
in
cmc
loopne
and
jb
add
and
push
sub
and
rol
rcl
jecxz
repz
addl
push
inc
inc
push
jno
popa
jae
add
adc
and
xor
ret
rcl
jecxz
repz
addl
push
inc
test
outsb
cld
push
lods
inc
jno
sub
mov
adc
ficomps
adc
mov
aad
mov
ret
cmpsl
out
scas
popa
and
sbb
cmp
adc
sbb
pusha
sbb
or
and
lds
lds
das
fs
test
rcr
in
imul
mov
rcll
lret
std
daa
add
lahf
inc
dec
adc
int
bound
adc
mov
xchg
stos
adc
cwtl
mov
jp
sbbl
mov
and
mov
sub
inc
adc
ret
clc
lret
loope
pop
fbstp
scas
std
push
jl
rep
arpl
in
mov
loop
mov
mov
lods
outsl
test
arpl
or
inc
sub
scas
push
fbld
adc
movsb
jnp
repz
cs
cld
ret
mov
das
sub
sbb
jl
ja
imul
arpl
mov
add
lea
inc
jo
fiadds
repz
mov
mov
sbb
jnp
mov
inc
andb
lahf
repnz
jb
mov
add
data16
push
popa
xchg
rcrl
inc
jle
es
in
xorb
loop
xchg
ds
xchg
cs
imul
or
sub
arpl
and
fcom
outsl
movsb
scas
mov
sub
gs
and
loope
insb
mov
imul
add
outsl
xchg
jmp
dec
mov
mov
dec
mov
lods
add
shrb
cs
mov
mov
pop
inc
fwait
cmp
out
lcallw
inc
lret
int3
das
mov
add
int3
mov
mov
test
out
mov
test
mov
cmp
push
cmp
iret
dec
cltd
mov
mov
outsb
xchg
fdivrs
out
popa
cli
notb
xchg
push
aam
sbb
lods
xor
inc
and
in
push
js
loopne
lcall
inc
push
bound
sub
orb
bnd
jb
xchg
test
mov
lret
sub
or
sbb
jae
loope
mov
pop
mov
std
aam
adc
movsb
divl
mov
pop
pop
push
and
add
sahf
sahf
leave
fcoml
je
mov
int
mov
andb
test
mov
test
cmc
adc
fdivr
lcall
sbb
addr16
mov
mov
notl
mov
packssdw
push
test
push
mov
push
dec
ficomps
aaa
rclb
sbb
dec
clc
cli
into
repnz
push
push
bound
vmovupd
iret
sahf
cmpsl
adc
jl
test
bound
testl
es
arpl
call
mov
idivb
sub
movsb
mov
sub
mov
mov
ret
and
loop
ret
lods
ror
pusha
fistl
push
ja
pop
les
pop
sbb
fidivl
or
push
sbbl
ret
xor
inc
lods
test
jb
dec
stos
adc
test
or
jae
jae
pop
mov
js
cmp
insb
fwait
dec
mov
cltd
jge
pop
inc
push
movsl
inc
sub
sti
jo
pop
repz
and
pop
jp
pop
sbb
jl
xor
add
or
mov
inc
loopne
cwtl
cli
pop
or
jo
xor
jae
cmpsl
xor
mov
fsubr
inc
lea
andl
and
lock
jno
lds
aad
repnz
aas
out
add
push
xchg
xchg
aam
pop
fldcw
mov
aaa
xor
or
fnstsw
fadds
inc
testb
dec
pop
xchg
inc
scas
aas
jg
sahf
fwait
pop
add
jae
mov
fidivrl
cmp
out
loop
jl
fldt
sub
push
jo
adc
shr
or
ljmp
andl
pop
fisttpll
mov
cltd
imul
xor
sub
jl
xor
movsl
out
lret
pop
fcompl
push
mov
xor
imul
inc
test
aam
pop
jo
mov
and
ret
cld
xor
and
lcall
and
hlt
lret
pop
hlt
sbb
jne
in
pop
das
data16
imul
outsl
mov
pop
lret
test
shll
orb
xchg
jnp
pop
inc
stos
pop
push
adc
stos
sub
cmpsb
jno
insl
add
sub
fwait
inc
sub
cmp
and
push
or
loop
adc
or
clc
orl
ret
into
leave
repnz
xchg
xor
imul
or
xchg
or
and
sub
aad
mov
call
loop
in
pop
mov
mov
adc
or
jmp
cli
push
jmp
inc
incb
pop
das
adc
xchg
add
adc
out
pop
insl
xchg
push
pop
push
dec
shlb
mov
cmp
in
cwtl
out
dec
stos
lock
pop
cmp
int3
test
cmp
call
and
out
aam
adc
xchg
std
cmp
dec
repz
jb
mov
std
fldl
jnp
xor
sbb
cmp
dec
fldenv
cld
jp
stos
cmpsl
mov
pusha
jge
xchg
outsb
enter
stc
les
lret
aad
fistps
add
cli
lret
sub
in
inc
popa
add
and
jb
bound
sub
pusha
pusha
jnp
aam
sbb
and
cmpb
cld
ret
mov
je
lea
scas
loope
cmp
es
nop
pop
jp
mov
sub
sbbb
ret
and
aad
outsb
fsubl
cmp
adc
cwtl
jns
mov
mov
sbb
loop
decl
fdivs
stos
ret
movsb
loop
loop
ljmp
rcll
dec
or
inc
inc
imul
mov
or
xor
add
cmc
xchg
mov
push
mov
ss
adc
movsb
xor
aad
inc
daa
fcmovb
xchg
int3
adcb
lods
jnp
sub
push
cmp
bound
in
inc
pop
out
mov
or
int3
sub
xchg
mov
test
jge
dec
aas
add
sbb
aaa
daa
cmp
cmc
insl
jp
loop
lea
jl
stos
lods
jecxz
push
es
fidivl
adc
inc
dec
cmpsb
loop
or
loop
rorl
das
in
and
or
pop
jmp
mov
push
add
repz
repnz
sub
add
mov
xchg
in
out
test
lods
jge
mov
stc
insl
int3
inc
adc
inc
repz
out
shl
bnd
push
mov
push
fmull
test
nop
pop
fdivrl
and
stc
mov
je
cmp
scas
sub
rolb
and
or
inc
imul
nop
ja
jp
jmp
addr16
push
and
push
adc
add
loopne
movsl
sub
cmp
mov
in
fstpl
and
repz
dec
sbb
xchg
jb
mov
clc
lods
addr16
sub
fnstenv
iret
mov
sub
cmp
addr16
int3
sbb
leave
xor
addr16
push
pop
out
push
inc
jnp
jp
sti
jp
in
pushf
xchg
ret
bnd
cld
xchg
mov
fildll
and
loope
fsts
mov
xchg
and
ja
and
cmp
push
jno
inc
mov
xchg
cmp
out
jmp
sbb
loop
jne
js
sub
pushf
or
mov
iret
xor
push
cmp
ja
cmp
and
lcall
shll
sbb
xchg
inc
fisttpl
lahf
dec
ret
inc
sub
cmc
lds
mov
mov
imul
push
dec
push
enter
push
xor
rcll
fisubrl
and
and
sub
jo
movsb
cmc
jb
mov
mov
push
mov
in
jmp
lret
mov
fsubp
or
push
mov
pop
aam
testl
pop
packuswb
jno
mov
mov
mov
push
popf
nop
fidivl
adc
add
or
sbb
ret
call
xor
lcall
jae
adc
or
push
push
cwtl
inc
out
cmp
das
out
pop
push
test
ljmp
adc
adc
mov
sub
and
sbb
mov
lock
pop
fdiv
cmp
jo
dec
inc
adc
xchg
rcrb
bound
jle
loope
scas
in
paddusb
fdivs
aas
fcomps
pop
repnz
pushf
xchg
stc
fsubrl
mov
cmpsl
xlat
xchg
out
fistl
idiv
or
test
out
push
in
movsl
pop
enter
pop
xor
pop
or
xchg
scas
cmp
add
jno,pt
leave
mov
push
lcall
inc
fidivrl
fldpi
aad
sbb
rcl
test
test
outsl
adc
ds
xor
dec
jb
pop
nop
pop
and
mov
cmc
jns
xor
xchg
mov
jmp
mov
lret
add
cltd
jge
daa
shr
std
shll
pop
mov
dec
popf
mov
mov
ret
lds
bound
xlat
enter
pop
push
inc
xchg
shrl
jle
hlt
fsubr
and
sbb
sub
in
dec
cmpsl
loope
jae
ja
sbb
loop
push
insl
cmc
loope
sub
mov
mov
jmp
sub
repz
xchg
aam
iret
mov
pop
es
loopne
aam
lret
push
in
mov
loope
pop
xor
lods
mov
xlat
pop
fmuls
mov
bound
mov
add
cld
movsb
cmp
xor
adc
add
stos
jne
push
dec
aaa
jnp
loop
push
fisubl
jle
shll
adc
jbe
sbb
xchg
cmp
push
ds
or
xor
xchg
xor
xchg
and
pop
or
push
aad
cmpsl
xor
xor
repz
xchg
shll
sub
mov
and
pop
stc
lcall
push
dec
inc
xchg
out
test
push
pop
jbe
fstpl
jl
or
es
mov
mov
mov
pop
jno
jecxz
outsl
subb
sbb
rclb
pushf
inc
and
mov
dec
rol
jg
and
aam
shrl
es
test
inc
inc
icebp
cs
pop
jl
jbe
inc
mov
and
mov
dec
in
sbb
sbb
jmp
test
outsb
gs
and
mov
push
adc
lock
push
inc
nop
cli
pop
rcrb
xchg
sub
sbb
fidivrs
mov
push
mov
outsl
movsl
das
insl
mov
xlat
push
adc
adc
inc
pop
pop
pop
adc
ret
nop
sub
add
aas
sub
push
out
aas
mov
cmp
scas
push
cmp
xchg
dec
cmp
xchg
cmp
xchg
sbb
cmp
cli
scas
jge
or
sahf
push
adc
sbb
mov
ret
roll
aas
lret
in
les
sbb
inc
in
bound
ds
rcrl
add
pop
into
mov
out
es
test
aaa
sbb
std
inc
and
mov
jo
mov
mov
dec
test
in
mov
adc
or
hlt
sub
adc
inc
xchg
mov
mov
adc
push
test
fisttpll
into
push
jne,pt
pop
or
les
lcall
or
xchg
inc
loop
lods
pop
pop
pusha
dec
jae
ret
mov
fsubrs
and
lock
sahf
push
and
and
cltd
lret
je
cld
movsb
dec
sub
in
cmp
lret
cmpsl
imul
inc
aam
jmp
cld
clc
cmpsb
cmc
repz
outsb
lock
add
add
xchg
dec
sbb
cmp
cmp
pop
jp
fstpt
into
mov
xor
ss
js
jno
xchg
fimuls
pop
inc
mov
ficoml
pop
dec
xchg
jmp
in
push
je
cwtl
es
cmpsl
mov
push
jne
test
pop
loope
mov
loop
jb
or
inc
push
hlt
dec
sbb
iret
in
lods
and
and
jp,pt
jns
popa
fdivrl
mov
jle
pop
xchg
insb
lcall
inc
jns
arpl
dec
inc
pop
fnstcw
inc
in
test
cmp
icebp
repz
das
dec
jbe
push
repnz
inc
ds
jmp
xchg
xor
add
fcoml
cmp
stos
out
or
or
call
and
mov
sbb
repnz
shll
adc
aas
cmp
adc
lods
aad
mov
sti
pushf
sti
insl
cltd
clc
cmp
inc
cmp
std
mov
add
shrl
adc
addb
dec
ret
rol
pop
call
mov
cmpsl
bound
xor
stos
dec
imull
cmp
outsb
cmp
push
adc
lahf
pop
ds
imull
xchg
loop
jno
cmp
es
sub
call
ret
stos
or
xchg
and
and
mov
add
and
push
cwtl
mov
push
repnz
fbstp
dec
outsl
test
xlat
sbbb
clc
dec
adcl
fiadds
or
out
mov
movsb
cmp
inc
enter
xchg
bound
jbe
call
cld
sbb
dec
in
mov
pop
fwait
aam
sub
out
mov
xor
adc
mov
pop
mov
fcmovnbe
or
mov
dec
add
push
ret
or
clc
aad
addr16
push
mov
inc
int3
leave
les
icebp
ret
jecxz
mov
jmp
pop
ja
jbe
xor
leave
dec
call
sub
jge,pn
je
jge
and
xchg
xchg
mov
cli
push
xchg
aam
lods
shlb
shr
scas
lret
and
mov
imul
pop
push
mov
ficomps
insb
inc
iret
daa
push
out
sub
and
mov
ret
dec
es
insl
mov
ds
leave
mov
pop
in
repnz
repnz
lds
mov
into
add
xchg
dec
sbb
sbb
icebp
push
stc
mov
ds
ret
jae
call
insl
and
pop
or
fldcw
inc
and
mov
cvtps2pd
cld
mov
inc
dec
out
movsb
inc
scas
outsb
adc
js
call
iret
std
sub
int
mov
push
mov
jo
dec
fldl2e
jecxz
je
sbb
nop
hlt
mov
je
xor
rcrl
mov
add
pop
push
sbb
mov
jo
scas
je
jns
push
imul
xchg
add
scas
mov
aam
xor
repz
or
jecxz
out
or
arpl
add
push
popf
lahf
out
push
mov
sbb
inc
adc
mov
iret
xor
xor
dec
andl
mov
insb
mov
pusha
icebp
push
xchg
jnp
test
push
and
aad
mov
adc
jmp
jmp
outsl
xchg
xor
les
pop
inc
pop
inc
imul
pop
sub
jmp
in
js
push
pop
add
inc
lret
push
jp
inc
aam
xchg
mov
out
cld
aam
stc
cmpsb
test
jg
xchg
lds
mov
call
push
and
and
lock
mov
add
xchg
mov
fisubl
and
fstpl
decl
dec
push
jl
or
and
mov
adc
call
cmpsl
sbb
iret
sti
adc
out
aas
in
mov
iret
dec
aam
mov
sub
mov
imul
jl
sbb
lods
roll
mov
cmc
cmp
sub
hlt
jle
sbb
ljmp
out
dec
dec
je
inc
inc
fadds
lods
pushl
cmpsl
in
daa
ss
mov
mov
add
mov
sub
sub
rorb
insb
sub
mov
rcll
jl
lods
pusha
out
add
fists
ljmp
inc
fs
xor
and
adc
pop
sbb
sbb
inc
movsl
jmp
pop
add
cmp
sti
rcl
das
rol
dec
sub
ja
xchg
movsl
out
mov
daa
js
hlt
jg
in
repz
iret
adc
ret
cmpsl
repnz
ljmp
shrl
ds
mov
loopne
pusha
fs
push
push
cmpl
repz
test
dec
xor
jl
sbb
push
push
add
rcrb
push
lcall
mov
aad
adc
xchg
test
aam
push
or
cltd
lahf
pop
push
lock
xor
cs
xor
cli
push
push
or
jae
lret
ret
in
xor
and
jmp
mov
mov
push
mov
out
mov
mov
enter
xorl
add
adc
mov
pop
ja
fs
push
rcrb
sub
rolb
push
adc
adc
jnp
pop
aas
mov
outsb
push
les
xchg
lds
lea
sbb
xor
mov
adc
adc
daa
mov
mov
lahf
rol
in
sub
pop
ja
adc
adc
jmp
mov
mov
lods
rcl
cmp
cmpb
inc
lahf
fnsave
jb
popf
stos
xlat
scas
jne
xor
cwtl
sahf
push
enter
cld
nop
lahf
inc
jne
shr
cvtps2pi
lods
mov
xchg
dec
dec
sub
movsl
sbb
mov
xchg
pop
and
jl
push
inc
lods
shrb
or
out
mov
lds
cmpsb
shr
aaa
test
pop
lds
loopne
push
pushf
cmp
adc
cltd
cwtl
mov
inc
fstl
fs
adc
dec
sub
repnz
leave
je
out
xorl
mov
int
insb
lret
outsl
mov
imul
adc
aas
je
pop
cmp
mov
xor
lock
xlat
int
mov
mov
push
xchg
insb
icebp
fimuls
repz
js
ds
leave
ja
cmp
push
inc
inc
dec
xor
and
sub
jl
jmp
fwait
pop
sahf
sbb
and
in
push
xchg
das
stc
inc
bound
imulb
daa
mov
pop
cmp
ror
jno
and
cmp
cmp
mov
lcall
repnz
ret
adc
fsubl
mov
adc
mov
popa
mov
ret
lods
popa
mov
repnz
push
leave
ret
enter
stos
sahf
ljmp
test
in
out
out
xchg
lods
call
mov
repz
push
sub
mov
and
dec
mov
or
sub
loope
or
std
lods
mov
pop
sub
mov
pop
xor
mov
sbb
add
push
sub
je
pop
mov
nop
insl
pusha
mov
xor
shlb
das
sbb
mov
xor
push
aas
sub
pop
inc
push
and
shrl
jecxz
and
xor
decb
popl
sahf
sahf
xchg
loopne
inc
mov
std
lds
xchg
je
mov
repnz
jle
mov
out
xchg
and
cli
jo
push
sbb
jae
cmp
fcomp
testl
pop
and
push
mov
jmp
pop
mov
inc
aad
pop
jl
xchg
or
shlb
stos
ss
daa
dec
nop
pusha
sub
xchg
dec
mov
dec
adc
jmp
aam
imul
cmp
pushf
add
inc
fcmovnb
jno,pn
or
orb
lods
xchg
xchg
mov
dec
iret
andb
jbe
loop
push
cmp
je
sti
pop
add
mov
imul
dec
or
cmpsb
cld
dec
adc
pop
stos
jo
call
lret
loop
jp
push
mov
lret
sahf
popf
fcmovnbe
cmp
std
arpl
mov
imul
cli
insl
adc
mov
aaa
arpl
mov
xchg
add
cmpl
ljmp
mov
cltd
add
out
add
inc
jne
or
scas
nop
add
sbb
mov
ljmp
testl
mov
pop
cmp
cmpsl
aam
sub
push
and
pop
roll
cmpsb
mov
jge
adc
add
xor
and
rol
rcl
jecxz
repz
addl
push
inc
inc
push
jno
popa
jae
add
adc
and
xor
ret
rcl
jecxz
repz
addl
push
inc
inc
push
popa
arpl
adc
add
xor
ret
rcl
jecxz
repz
sbbl
dec
inc
insl
push
stc
arpl
adc
adc
xor
mov
jns
jecxz
test
or
insb
dec
pop
pop
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
pusha
push
cmp
dec
and
lea
pop
add
add
add
or
add
add
or
mov
mov
pop
add
add
add
add
add
add
add
or
fadds
jge
cmp
mov
lcall
add
add
rolb
jb
roll
jl
adc
arpl
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
jno
lret
add
mov
adc
sbb
dec
add
add
add
pop
add
jle
sbb
xor
cmp
imul
add
add
add
add
add
flds
adc
adc
jle
stos
add
add
fadds
add
add
add
str
add
add
cmpsl
add
add
pop
add
movl
jge
out
add
add
insb
add
add
sub
fiaddl
inc
add
add
add
add
add
add
add
add
outsl
add
add
add
popl
data16
pop
add
add
add
add
jae
insb
add
add
add
add
add
test
add
add
add
add
int
pop
add
add
jne
jmp
and
add
pop
add
add
add
add
scas
add
sbb
insb
add
add
sub
test
add
xor
roll
jno
jp
dec
add
pop
add
add
sbb
jno
test
mov
add
add
add
in
add
add
jb
jle
push
add
add
add
jbe
mov
add
add
add
test
add
addb
add
add
add
add
xchg
add
add
add
add
add
pop
add
movsl
add
lret
add
sub
test
add
add
add
add
add
add
jg
sbb
cmp
add
add
add
test
add
add
add
add
add
add
add
int3
add
add
add
and
or
add
int
ljmp
add
insb
add
add
and
add
mov
add
add
add
add
inc
add
add
add
add
add
add
cltd
add
jle
jne
test
sbb
pop
add
sbb
xchg
add
add
add
add
add
sub
imul
add
add
add
ds
add
xchg
add
or
jbe
aad
cmp
add
jne
insb
add
aad
sbb
add
add
add
add
push
add
pop
add
add
inc
add
add
add
add
add
insb
add
add
or
movsl
add
add
add
add
test
insb
add
add
pop
add
jge
or
add
mov
mov
imul
add
add
add
insb
add
add
add
mov
push
add
add
pop
add
add
add
sub
aad
jg
int3
adc
adc
adcb
jb
mov
jno
inc
aas
inc
bound
orb
les
daa
jecxz
shll
mov
out
cwtl
stos
or
idiv
ficoms
lahf
mov
xlat
mov
jecxz
insb
push
aaa
adc
test
addl
cld
out
repnz
sub
jb
mov
push
dec
adc
test
fidivl
mov
cli
mov
test
sub
cmp
and
sub
mov
push
pop
in
xor
xchg
sbbb
imul
scas
pop
pop
bound
xor
jno
inc
inc
xchg
movsb
push
outsl
out
inc
push
jle
mov
ja
add
dec
adc
aad
sbb
pop
mov
cmp
std
imul
mov
test
idiv
mov
pop
cwtl
hlt
sbbb
sub
mov
inc
or
adc
xor
in
pop
psubsw
mov
xchg
in
mov
push
out
cwtl
je
mov
and
int3
dec
je
imul
lds
cmp
test
je
out
ds
and
mull
les
cltd
iret
push
inc
movsl
mov
lock
idiv
scas
inc
push
cld
sbb
or
inc
mov
mov
cmp
sub
repz
addb
out
out
mov
fs
push
xor
rorl
aaa
std
aaa
inc
jp
xchg
repz
or
mov
sub
mov
in
cmp
enter
push
scas
lcall
cmp
daa
sub
push
xchg
jmp
inc
insl
mov
xor
push
mov
mov
xchg
je
shrb
mov
dec
xchg
inc
stos
shr
push
xchg
pop
lods
jo
push
xlat
jge
pop
cld
cmpsl
xor
sub
popa
hlt
loopne
fisubrl
movsb
loop
in
jge
dec
jle
neg
pop
dec
leave
loop
je
sahf
cmp
aas
dec
add
std
cs
lret
pop
push
pop
rcl
push
hlt
push
jns
cs
icebp
jne
sahf
pop
hlt
xchg
jmp
mov
lcall
dec
mov
push
lock
nop
add
insb
es
repnz
sub
fistps
mov
imul
ret
fwait
sbb
test
and
and
xchg
sub
jecxz
xor
and
insb
xlat
xor
les
scas
ss
mov
xchg
data16
xor
loopne
into
cwtl
je
mov
int3
cmpsb
pop
cli
push
shl
inc
aam
and
loop
fdivl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
