mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
repz
ret
mov
mov
loope
mov
jb
arpl
sbb
or
jl
insb
add
repz
ret
mov
faddl
sub
sbb
or
adc
insb
adc
ljmp
mov
faddl
outsb
cmp
sub
xor
iret
mov
shl
mov
loopne
mov
inc
cmc
fistps
je
cmp
jl
xlat
xor
jb
sbb
stos
sarb
cld
mov
testb
scas
or
movsl
adc
or
pop
mov
jo
daa
insb
sbb
inc
cltd
and
pushf
mov
xor
insb
adc
add
repnz
xrelease
mov
fisttpl
in
insb
mov
xor
ret
in
int3
jl
xchg
cwtl
push
add
enter
int3
and
dec
je
fidivs
movsl
pusha
push
jecxz
or
das
and
adc
xchg
mov
dec
std
mov
mov
adc
jbe
jo
adc
cmp
mov
lcall
sbb
or
jl
insb
or
lahf
mov
mov
rcrb
cwtl
jae
cvtps2pi
jns
js
aas
inc
or
outsb
add
mov
fists
shrb
push
dec
add
adc
or
xchg
clc
in
out
stos
jmp
xchg
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
sub
sbb
or
jl
insb
adc
repz
mov
fisttps
inc
mov
and
enter
pop
out
sbb
cmp
jns
jg
in
push
jp
mov
mov
das
stos
push
test
sbb
xchg
and
xor
jecxz
je
mov
xor
sub
add
sti
xor
enter
stos
adc
inc
addr16
pop
fistl
jmp
push
insl
mov
and
mov
mov
scas
icebp
mov
stos
sbb
nop
jns
sahf
pushf
stos
sbb
cmpsb
xchg
inc
jle
nop
addr16
push
cltd
adc
popf
ja
cs
mov
cmp
cmp
mov
hlt
insb
clc
push
lods
addr16
iret
mov
sub
dec
or
sbb
push
ljmp
test
jle
pop
insl
int3
pop
fs
add
leave
xor
rcll
lods
cmp
bnd
gs
stos
xor
mov
je
lds
enter
and
call
inc
jecxz
jnp
adc
xchg
mov
xchg
jns
or
sbb
in
dec
sub
sub
movsl
stc
das
inc
sahf
and
inc
jl
shrb
xlat
and
mov
ret
jle
pop
mov
das
aaa
mov
rcrb
jno
add
mov
js
cltd
cs
inc
jae
mov
lret
or
scas
push
or
push
ficoms
cmc
pop
push
cmpsw
adc
mov
jg
add
test
je
xor
pushf
fwait
adc
inc
jp
add
jbe
dec
pop
xor
cmp
cmpsb
je
jle
sub
jbe
std
sahf
sub
xchg
fidivrs
lea
mov
jge
lcall
pop
data16
xchg
jmp
xchg
mov
push
test
lret
mov
ja
inc
aas
xchg
sub
loopne
mov
popa
push
andb
or
fldt
pop
pop
in
cs
adc
adc
mov
mov
push
outsl
pop
xlat
arpl
jg
inc
mov
iret
pop
jae
enter
and
fildl
jb
hlt
out
test
sahf
std
dec
stos
add
jbe
xchg
leave
adc
lahf
xchg
repz
cmc
into
push
test
mov
and
push
fldl
aam
or
sahf
xor
imul
mov
push
pop
inc
sub
out
test
xchg
loopne
mov
loop
inc
dec
and
mov
inc
push
xchg
cmc
mov
stos
jmp
mov
mov
add
and
shll
das
cmpsb
push
and
cmp
mov
cmp
xor
js
jns
sbb
fldenv
xor
add
imul
and
push
shr
popf
mov
or
dec
mov
mov
pop
adc
cmp
lahf
cmc
insl
popf
dec
adc
sbb
movsb
sbb
test
xor
jo
fstl
sbb
lds
add
stos
pushf
inc
xlat
in
sub
fcomi
or
sub
sar
stc
jne
stc
and
ds
lods
loop
push
inc
push
dec
out
mov
xor
cmp
inc
add
pop
test
lods
pop
jle
test
adc
adc
xchg
pushf
repz
add
jl
inc
mov
jo
or
in
in
jp
jns
int
pusha
jbe
add
cmp
loope
lea
add
dec
xchg
xor
sbb
push
dec
bound
push
pushf
scas
cwtl
repnz
cmpb
icebp
movsl
jnp
xor
sbb
shll
jo
or
arpl
leave
sti
push
aam
enter
jno
adc
sbbl
lods
add
sub
jnp
popa
cmp
sbb
ljmp
dec
xor
mov
or
test
adc
mov
bound
xlat
das
mov
in
into
je
push
push
inc
subl
stc
xlat
insl
mov
pushf
notl
push
xchg
cmp
sub
mov
mov
pop
push
jecxz
out
aaa
add
jp
cli
mov
dec
popa
es
mov
test
inc
jns
push
imul
and
dec
sub
leave
inc
jmp
mov
les
icebp
push
push
aam
pop
add
rorb
and
and
push
adc
mov
inc
shlb
pop
add
shll
push
push
jge
sub
add
stos
in
adc
mov
sub
adc
jmp
sti
pusha
test
aam
in
jmp
js
shrb
sub
dec
stos
mov
jmp
in
test
pop
lcall
push
ja
sti
inc
jo
adc
rolb
pop
mov
and
jmp
sbb
sub
push
jmp
stos
jmp
cmp
mov
stos
es
call
clc
cmp
sub
dec
pop
adc
cltd
call
push
js
rol
int3
sub
out
jbe
ret
mov
jae
out
je
pop
cmp
pop
mov
mov
add
lcall
mov
mov
cmpsb
nop
mov
stc
lods
push
jno
and
gs
or
out
dec
inc
cmpsb
leave
sbb
mov
outsb
cld
mull
add
addb
mov
shll
adc
mov
mov
mov
adc
ja
mov
xchg
cld
cwtl
mov
cmp
inc
dec
scas
inc
cs
fisubrs
subl
inc
addr16
or
aas
add
in
jp
and
int
mov
dec
xor
or
inc
fsubrl
mov
test
mov
xchg
mov
int3
push
xchg
mov
repnz
fxtract
inc
mov
inc
aam
icebp
movsb
vpsubsw
hlt
or
in
enter
push
jmp
and
mov
push
adc
cwtl
dec
das
sbb
xor
or
enter
repnz
mov
int
aad
xor
mov
stos
lahf
lods
add
pop
sbb
sbb
sbb
mov
dec
scas
fs
addr16
xchg
and
outsl
mov
out
test
sub
jg
jmp
xor
add
jle
in
xor
mov
out
sbb
xchg
shll
icebp
stos
mov
cmp
jno
dec
testb
flds
jecxz
out
popa
jecxz
xchg
fisttps
or
daa
jle
fadd
icebp
cwtl
jp
sbb
in
sub
sbb
loop
push
mov
pop
into
inc
cmp
xchg
jmp
cmp
jnp
jge
fistps
jns
rep
into
test
xchg
and
sub
cmpsl
push
dec
push
stos
bound
push
cmc
jns
jb
arpl
call
test
subl
cmpsl
aaa
inc
cli
dec
xorb
aam
push
mov
xorl
std
inc
test
jb
mul
fildll
xchg
dec
adc
mov
stos
arpl
push
cwtl
mov
xor
test
cld
daa
sub
aas
push
and
or
sub
or
mov
fimull
mov
sbb
jge
bound
pop
xchg
test
push
in
add
add
add
ljmp
int3
mov
mov
xor
lods
fs
pop
cmpsb
movsl
cmpsb
cli
lods
mov
sarb
adc
cmpb
fisubrs
stos
jmp
in
cmp
movsb
shrl
and
sub
cmp
hlt
xchg
xchg
mov
inc
cmp
addr16
lahf
aas
xchg
sub
pop
dec
jmp
out
ljmp
mov
sub
popf
push
aam
xchg
pop
arpl
mov
xchg
dec
adc
cltd
mov
popa
out
jne
aad
pop
and
shl
dec
add
mov
mov
or
incb
call
push
js
or
popa
sbb
add
cmp
lods
mov
push
mov
cld
fdivrl
inc
je
call
jle
xlat
test
test
andl
jne
jge
xor
pop
stos
xor
test
mov
stos
add
pushf
dec
xor
rclb
subl
jbe
out
xchg
push
cmp
daa
repnz
ja
lea
mov
push
add
cld
jnp
std
jle
adc
mov
cs
rcl
data16
dec
test
xor
adc
cmp
jbe
pop
in
push
sbb
xchg
lock
inc
add
mov
loop
fwait
mov
fisubrl
or
cmpl
leave
cld
cmpsl
pop
pop
mov
or
push
mov
pop
pop
fmul
addl
repz
mov
push
dec
mov
or
jb
shlb
or
movsb
jp
enter
stos
mov
mov
stos
aaa
cmp
adc
pop
inc
shl
jecxz
mov
dec
add
jbe
pextrw
push
arpl
adc
pop
or
mov
orl
adc
ja
loopne
dec
sub
sub
jle
xchg
fabs
dec
int
cmpsl
sbb
sti
mov
in
je
sub
mov
std
jae
or
js
mov
sahf
push
popf
push
je
int3
or
cmp
rol
adc
mov
cwtl
or
clc
jge
mov
jp
xor
js
cli
mov
dec
mov
aas
in
aas
iret
jecxz
ret
inc
insb
bsf
mov
adc
sub
sbb
idivb
jg
push
fstpl
iret
jne
mov
mov
in
roll
push
lret
imul
push
pop
mov
test
jno
jge
mov
imul
out
push
and
lea
enter
xor
repnz
and
sarl
add
sbb
jne
xchg
mov
pop
popa
std
jne
cltd
mov
cmp
subb
aad
adc
sub
and
dec
fwait
and
xchg
xor
and
mov
es
push
push
into
in
mov
in
jns
push
faddl
stc
and
sahf
ljmp
xor
add
push
cmp
cld
sbb
inc
adc
pop
lahf
mov
in
mov
mov
inc
in
sub
dec
push
push
and
jp
xchg
lret
cmp
sub
xor
and
mov
pushf
fs
or
out
into
aam
ret
mov
pop
and
push
push
lcall
jnp
aas
jle
ret
imul
dec
test
ja
icebp
lds
aam
mov
sbb
mov
lds
cmp
arpl
cmpsl
jb
nop
xor
push
aam
xor
jnp
jae
iret
loope
sbb
xchg
jno
lcall
xor
fcomi
adc
negl
movsb
mov
fwait
test
das
mov
call
jnp
cli
gs
aaa
in
adc
lock
bound
push
cld
dec
dec
or
mov
repz
shrl
std
test
and
repz
fcoml
lcall
sub
mov
add
add
stos
and
jno
mov
or
and
pop
imul
dec
scas
aad
stc
xchg
add
xor
pushf
insb
sbb
enter
loopne
pop
mov
inc
and
cli
xor
inc
push
outsl
das
inc
cmp
or
pop
lahf
in
pop
add
sbb
sarb
mov
push
inc
jns
add
sub
vpunpckldq
insl
mov
jb,pn
imul
ja
pop
addl
aaa
xor
stc
mov
mov
cmpsl
push
lock
scas
push
jo
rorb
setb
into
xor
pop
cltd
sbb
or
sbb
mov
cmpsl
inc
adc
cmpsb
add
mov
subb
and
jmp
insl
movsb
in
sahf
mov
or
pop
iret
test
movsl
cltd
cmpsb
int
mov
sub
cmpsb
xor
pop
mov
inc
sbb
repz
mov
sbbl
addr16
xchg
xchg
dec
ds
aas
stc
js
out
sub
pop
ret
stc
int
inc
mov
push
xchg
xor
jb
sbb
js
fldenv
jle
dec
or
lods
mov
jmp
movsl
movsb
loope
push
loop
scas
xchg
jne
dec
mov
sub
pop
movsb
sub
push
movsb
in
outsb
and
mov
jecxz
test
xchg
xlat
xor
jns
inc
lods
nop
jns
clc
daa
mov
aas
adc
mov
adc
repnz
sbb
out
push
orb
mov
in
and
stos
pusha
xchg
insb
lret
lds
cmpsl
fmul
fnstsw
test
xchg
ja
sub
jo
ret
add
test
sahf
mov
hlt
push
cmp
dec
mov
mov
pop
mov
xchg
lcall
ret
fadds
pop
xor
xchg
mov
sbb
adc
stos
in
pusha
or
adc
test
fwait
jge
adc
sbb
xchg
adc
mov
mov
addl
mov
dec
bound
mov
mov
stos
push
loopne
dec
xor
xor
push
push
mov
in
into
inc
push
subl
in
ds
andl
dec
push
mov
pop
cmp
shrl
push
lahf
lds
xor
out
jge
mov
test
mov
mov
addr16
call
dec
cmp
or
mov
test
dec
jo
fcomp
lahf
pop
shlb
in
dec
add
xchg
js
gs
mov
sub
pop
mov
pop
push
push
lret
cmpsb
mov
popf
mov
inc
in
push
xor
inc
cmove
test
pop
or
add
jns
push
jge
cmp
cli
add
loope
push
mov
fs
std
jae
adc
adc
cmp
xchg
push
sub
adc
daa
cmp
xchg
and
mov
stos
xchg
cli
rol
mov
js
add
out
add
lods
jns
inc
test
rorb
push
mov
jg
lods
and
lds
jg
test
jnp
cld
mov
cmp
sbb
push
cmp
jecxz
or
mov
jbe
aaa
inc
mov
ds
xlat
popf
inc
cwtl
or
out
fs
test
add
lcall
jno
jb
jl
jns
loope
jnp
cmp
jl
jle
mov
jecxz
jno
mov
mov
mov
mov
aas
xchg
enter
and
sub
and
push
mov
add
or
xchg
aad
lods
inc
jns
int3
loop
or
repnz
fwait
sbb
out
sub
xor
test
decb
xor
xor
xchg
cmp
loopne
sbb
inc
jecxz
xorb
mov
shll
sbb
xchg
insl
xchg
xchg
enter
mov
lea
loopne
and
lea
jl
jne
call
mov
lods
addr16
sbb
lret
push
jmp
push
lea
push
aad
and
ja
int3
jo
ret
stos
push
adc
insb
pushf
mov
test
xor
jns
fwait
mov
or
movsl
jg
out
dec
mov
and
sbb
std
and
pop
mov
test
mov
aaa
adc
sub
mov
roll
xlat
cmp
push
pop
loope
jg
lds
push
ss
clc
xchg
aad
adc
ror
or
add
sub
shr
mov
lahf
adc
adc
jno
add
sub
out
insl
in
int
and
sbb
lcall
int
cs
cmpsb
mov
rclb
push
out
inc
push
fstpt
push
xchg
dec
push
pop
mov
sbb
aad
pop
out
inc
dec
xchg
push
mov
or
xchg
rolb
pop
push
and
repz
cld
mov
jle
pop
pop
xchg
in
push
xchg
jno
or
pop
inc
fnstcw
insb
js
xchg
add
cmp
cmp
jmp
pop
mov
sbb
in
inc
add
xchg
pop
sbb
movsl
xor
mov
out
mov
cmp
mov
fmul
pushf
es
push
mov
rcll
mov
out
pushf
mov
xor
fwait
cmpsl
lods
jle
mov
cli
add
test
cs
and
inc
xchg
popfw
movsl
pop
sbb
rorl
loop
jl
mov
imul
je
mov
popa
mov
sub
push
cmc
and
std
pop
mov
jmp
andl
lret
sbb
add
add
sub
sbbl
stos
dec
mov
cmp
mov
into
sbb
mov
inc
lock
in
mov
aad
jo
je
jmp
lret
or
push
add
lret
sti
push
int3
outsl
cwtl
xchg
jecxz
test
ds
faddp
jns
push
and
mov
lret
into
fnstsw
loopne
push
jnp
adc
inc
pandn
mov
lods
ffree
jbe
dec
icebp
repz
sub
lds
rclb
or
std
mov
fs
pop
xchg
push
andl
ficoms
and
popa
xor
ljmp
dec
push
loopne
ficoml
inc
insb
pop
popf
filds
lods
test
es
nop
ljmp
add
mov
adc
pop
push
push
pop
sbb
hlt
sbb
loope
and
popa
cwtl
insl
cmc
repnz
imul
push
int
xchg
add
inc
lahf
fcoml
add
push
and
inc
cmp
mov
adc
and
push
push
mov
movl
mov
jge
dec
icebp
rcll
adc
mov
mov
lret
jl
jnp
xor
jle
or
in
push
cmpb
cld
js
aam
push
mov
lret
pop
or
cmp
jl
pop
cmp
pop
mov
ret
pop
or
push
out
fbstp
inc
cli
mov
addr16
add
into
xchg
ret
dec
pop
add
mov
dec
je
cmp
rcrb
push
test
or
dec
les
call
xchg
and
push
insb
leave
fbld
ljmp
iret
add
add
jnp
fisttpl
or
push
js
cmp
lret
xchg
jbe
pushl
insl
xchg
scas
ds
outsb
jg
test
sub
int
int3
lahf
lcall
nop
sub
arpl
jnp
mov
jp
shlb
lcall
jno
iret
es
in
pop
push
pop
rclb
lods
adc
sbb
loop
mov
xchg
push
sub
popf
dec
inc
test
xchg
dec
lret
cmp
pushf
stc
xchg
aad
dec
stos
arpl
sbb
xor
scas
mov
jmp
fcoms
push
dec
adc
dec
cmp
xchg
add
bound
cmc
dec
test
icebp
pop
add
xchg
aas
cmp
jp
aad
add
jbe
xchg
lret
lcall
dec
pop
subl
add
jp
cli
loope
test
or
pop
mov
mov
push
mov
jecxz
daa
adc
lock
int
jo
adc
pop
mov
sbb
jle
out
sub
cli
fdivp
push
test
add
cmc
clc
xchg
mov
push
mov
jl
and
daa
call
popa
fistpl
xchg
movsl
test
inc
loopne
xor
mov
push
fcompl
jbe
int
sti
fneni(8087
loop
pop
rcll
sbb
dec
rclb
repz
jp
loopne
test
add
out
sbb
push
mov
sbb
xor
jo
jg
js
mov
cwtl
inc
aam
xor
cmp
lret
dec
adc
daa
hlt
jmp
lods
jb
lea
lods
out
hlt
push
clc
std
lock
push
xor
fadd
cmp
xchg
lods
or
fstpl
aam
cmp
lret
jmp
das
mov
mov
inc
sbb
aaa
xchg
jno
adc
test
andb
pop
jo
dec
sbb
cmp
out
add
clc
mov
dec
jne
pusha
mov
pop
sub
xor
stc
mov
leave
out
or
jne
push
xchg
out
shrb
ljmp
push
jge
gs
and
repz
mov
mov
loop
jl
sbb
jg
push
pop
sbb
cmp
mov
adc
inc
in
and
ficoms
data16
mov
add
mov
nop
lahf
jb
fisttps
sub
hlt
sub
cmpsb
mov
in
movsb
push
lods
imul
xor
insb
ja
dec
das
xchg
mov
testl
jle
xchg
testl
inc
pusha
flds
xchg
and
ljmp
xor
mov
pusha
sub
lret
dec
cmp
cwtl
and
std
ret
jno
pop
jl
push
ret
lock
jb
dec
jnp
pop
mov
outsb
jg
xchg
inc
mov
int
xor
dec
test
adc
lahf
and
pop
xchg
and
cmp
adc
in
ficoml
add
jnp
test
xchg
scas
mov
inc
stos
mov
xor
stc
push
pop
xchg
into
aad
adc
lods
pop
cmp
or
xchg
push
mov
lods
fstps
in
xchg
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
int3
mov
xchg
sbb
jnp
hlt
stos
xchg
in
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
cmp
cld
je
mov
fwait
daa
test
jns
sub
mov
cmp
fdivrl
mov
sub
adc
or
push
fsubrs
stc
dec
or
sbb
push
cmp
dec
int3
pop
movsb
imul
mov
jle
das
stos
or
clc
js
sub
push
jmp
sbbb
inc
mov
shll
movsb
push
pusha
add
out
call
pop
addr16
and
rclb
inc
pop
sahf
imul
add
aam
cmc
inc
lds
sbb
mov
aaa
cmp
cmp
enter
push
stc
mov
mov
mov
call
jns
jns
adc
dec
jecxz
or
adc
pushf
push
lods
popa
les
iret
jns
xchg
sbb
xchg
jnp
cld
xor
cltd
push
pop
jns
psubw
xor
jmp
rcrb
int
imul
pop
lret
sub
mov
es
mov
call
pop
in
imul
cltd
test
inc
flds
insb
mov
jg
sub
addl
jg
pop
fidivrl
cwtl
add
insl
ljmp
adc
sti
pop
pop
aam
mov
insb
cmpb
aas
outsb
iret
sbb
pop
loopne
mov
in
imul
cltd
sub
sbb
or
jl
insb
jmp
mov
cmp
fdivrl
mov
sub
sbb
or
jl
insb
jmp
mov
inc
bound
jne
repz
push
xchg
aam
loopne
call
inc
add
xchg
and
pop
xchg
push
addb
into
movsb
push
lds
push
cwtl
cmc
mov
lcall
and
xchg
inc
ds
and
sub
ds
out
and
xchg
xor
mov
cmp
aad
cmp
pop
movsl
push
ret
or
add
jnp
lret
or
sub
jmp
daa
pop
inc
out
pop
xor
mov
in
push
push
and
arpl
adc
into
aam
lock
jo
scas
pushf
sbb
nop
inc
mov
jb
xchg
mov
aad
je
sbb
mov
or
pop
in
inc
xlat
mov
cmp
push
clc
jne
dec
loope
jl
push
into
pop
inc
adc
mov
mov
xor
es
xchg
push
push
enter
or
outsl
popf
arpl
cmpsl
cs
dec
xchg
cmp
mov
shrl
ja
pop
xchg
rol
push
mov
loop
cmp
sub
lods
pop
mov
test
jmp
test
jne
ds
push
cmp
fsubrp
lret
loope
pop
bound
popf
jg
sub
sti
jecxz,pn
xor
cmpsb
and
loope
xchg
sbb
in
cmp
xor
push
loopne
fdivl
and
insl
rorb
jns
adc
mov
testb
mov
lahf
mov
and
pop
lods
or
popf
jne
mov
and
sbb
repnz
xchg
mov
add
in
loope
mov
xorl
jns
pop
pop
mov
jmp
nop
mov
pop
leave
cwtl
loope
test
jle
mov
dec
inc
mov
push
mov
pop
out
cmp
das
in
sub
sahf
fs
xchg
sbb
fdivrl
pop
jb
dec
push
mov
cmp
fcmovbe
push
loopne
mov
sbb
fmul
jno
pop
push
test
mov
cmp
scas
out
aas
jle
out
or
push
gs
cs
jbe
mov
mov
iret
cld
enter
xchg
rclb
sahf
and
add
xlat
push
outsl
in
inc
les
cmp
dec
mov
imul
popa
std
sub
lods
clc
dec
mov
and
int
loop
cmp
xchg
dec
xlat
aaa
mov
add
xchg
enter
imul
iret
dec
inc
aaa
dec
lods
sub
inc
cmc
mov
jp
add
mov
popf
dec
or
sub
push
fcoml
mov
push
cs
movsl
inc
repnz
mov
sbb
mov
shl
xchg
mov
mov
and
mov
hlt
iret
add
sbb
nop
stos
adc
fildl
mov
movsb
sbb
push
test
add
xchg
jns
aaa
sub
jno
lret
in
rol
inc
xor
faddl
pop
mov
lods
pop
shll
aas
sbb
rcll
mov
or
dec
in
xor
and
xchg
ret
lods
jb
pop
push
mov
cmp
dec
mov
jo
cmp
xchg
std
mov
xchg
pushl
fisttpll
fcomip
cmp
inc
cmpsl
leave
mov
lds
pop
sub
fwait
push
push
movsb
mov
dec
jge
sub
ret
jp
xor
pop
mov
loope
xchg
gs
mov
popa
arpl
xchg
push
mov
sahf
dec
mov
inc
mov
jo
pop
sbb
pop
xor
mov
mov
lds
lock
inc
jae
decl
or
outsb
xor
fmulp
sbb
push
mov
stc
clc
xchg
ljmp
enter
push
stc
and
arpl
fldcw
fdivp
nop
xor
scas
je
push
pop
shll
sub
in
jp
movsl
jl
jnp
push
jecxz
orl
mov
inc
mov
in
jbe
add
aaa
inc
ds
scas
jmp
lock
sbb
js
aaa
mov
sbb
test
shlb
ficompl
mov
nop
push
scas
adcl
and
or
pushf
or
sub
mov
or
dec
inc
out
mov
xor
mov
cld
clc
leave
adc
mov
push
ret
adc
in
pop
mov
insl
lds
fiaddl
add
nop
push
or
cmp
mov
mov
xor
data16
mov
sbb
xchg
push
push
vmovntpd
in
pop
xchg
outsb
lcall
daa
les
lds
or
jno
stos
dec
mov
loope
add
adc
push
nop
test
pop
push
xor
lahf
inc
iret
adc
fidivrs
inc
fidivrs
pop
jl
in
push
mov
int
insl
mov
mov
lods
adc
jbe
movsl
negb
dec
mov
gs
int
ja
xchg
sub
mov
ret
fldt
xchg
lret
pop
repnz
fsubs
pop
xor
outsl
add
push
inc
mov
dec
je
mov
movsb
mov
add
pop
dec
sub
in
inc
repnz
xchg
aas
add
pop
into
jbe
js
jle,pn
jge
scas
es
mov
lds
xchg
in
pusha
sbb
cmp
cmc
jge
mov
fdivs
cmp
rorl
rcrl
sbb
cwtl
std
mov
gs
mov
jge
add
aam
enter
mov
inc
mov
int
fldt
pop
pop
mov
and
adc
test
adc
or
xlat
sub
leave
mov
jae
mov
out
pop
cmpsb
adc
rol
jae
sbb
lret
jmp
jae
dec
mov
pop
mov
dec
loope
sbb
jl
mov
xchg
ljmp
fimuls
in
daa
add
decb
lret
pop
xchg
js
xor
mov
aam
hlt
add
fadds
dec
es
pusha
rep
mov
push
push
xor
dec
data16
int
in
lahf
addr16
shl
push
mov
or
sub
mov
out
scas
jbe
repnz
mov
mov
and
rclb
inc
xchg
jle
hlt
xchg
int3
sub
test
popf
test
mov
cmp
aad
and
xor
decl
cmp
in
jg
loopne
dec
lcall
xchg
sub
inc
scas
arpl
pop
mov
mov
sahf
fistpll
inc
lds
or
add
xorb
stc
sbb
dec
int
adc
sbb
fstpt
dec
or
idivl
popa
rorb
mov
leave
imul
inc
cmp
fs
pop
in
inc
scas
out
lret
test
add
cmp
mov
je
jne
push
add
adc
repnz
aas
jmp
pushl
pop
int
gs
pop
enter
jno
rcrb
out
jecxz
push
sbb
cmpsb
fadd
push
or
add
insl
jg
xchg
mov
js
imul
inc
shrb
push
push
xchg
ds
lret
adc
repnz
inc
stos
loop
fmuls
add
adc
ss
xlat
imul
hlt
dec
cld
and
daa
div
shrl
lock
sahf
cld
jb
fwait
jle
test
nop
mov
mov
adcb
cmp
cmp
and
mov
jl
in
jecxz
pop
sti
add
hlt
fnstsw
inc
sbb
pop
mov
es
lea
adc
push
xlat
mov
stos
push
aad
outsl
insb
and
cmp
rcll
cli
icebp
xchg
and
arpl
cmp
inc
mov
add
sahf
arpl
push
rorb
ds
in
adc
hlt
call
test
jae
add
dec
and
jl
jns
adc
sbb
pop
xchg
out
or
jmp
cli
sbb
pop
pushf
cmp
xor
movsl
cmpsb
movsb
das
dec
stc
xchg
mov
test
enter
mov
ljmp
and
dec
les
je
leave
daa
sbb
clc
mov
xchg
mov
call
repnz
lods
xor
inc
cmp
jo
and
push
sub
pop
rcll
sbb
fbstp
jl
loop
mov
xchg
xchg
and
dec
out
jp
adc
mov
aas
fisttps
push
jbe
jge
mov
push
lds
xor
mov
mov
mov
cld
daa
cmpl
aas
fucomi
jg
imul
fwait
adc
ds
addr16
mov
mov
lds
inc
sbb
mulb
scas
mov
push
es
mov
shld
rorb
pop
addr16
inc
dec
jns
movsb
adcl
scas
std
test
jnp
out
das
std
aad
jmp
in
fidivs
mov
testl
push
js
dec
jge
jge
cmp
mov
mov
mov
jmp
mov
test
mov
nop
jae
pop
adc
push
cs
adc
pop
xchg
rol
xchg
mulb
mov
jnp
jb
pop
sub
push
cmovae
out
sbb
popa
test
inc
inc
outsl
jnp
fsubl
leave
xchg
stos
lock
imul
popa
mov
and
into
out
add
sbbb
adc
stos
pop
pop
in
ret
lods
fbld
loope
xchg
outsl
inc
mov
adc
fs
sub
call
call
cmp
cmpsb
mov
mov
push
aaa
mov
cltd
xor
jns
stc
jle
mov
dec
insl
dec
idiv
xchg
push
and
jb
push
loop
pop
in
test
fwait
cmpsb
gs
fstp
dec
cmpl
adc
or
sbb
clc
cwtl
adc
sbb
push
imul
adc
xorl
add
popa
sbb
jge
lret
xchg
sub
and
push
jo
cld
cwtl
mov
cmpsl
inc
xchg
outsb
pushf
gs
loope
pushl
or
scas
sub
xor
lock
stos
jnp
movsl
and
pop
xchg
fnstenv
addb
subl
push
add
ror
xchg
pop
or
pop
scas
and
jmp
lret
xor
mov
adc
mov
mov
adc
pop
mov
push
rclb
mov
mov
mov
movsb
lods
sti
cmp
and
add
pop
icebp
das
or
popf
stc
fiadds
mov
rcll
dec
pop
xor
scas
icebp
test
xchg
ret
xor
sbb
add
jmp
outsb
addr16
mulb
movsl
das
mov
rcl
cmp
inc
xchg
ret
stc
adc
pop
sti
arpl
sub
push
jne
jecxz
mov
in
mov
clc
mov
fbstp
lock
ret
aaa
fwait
in
ljmp
in
shlb
inc
loop
outsb
jnp
mov
lock
pushl
cmp
mov
lock
popa
sbb
ja
loopne
mov
mov
mov
jmp
sub
mov
inc
lcall
adc
push
les
nop
les
ljmp
mov
orl
sti
ljmp
push
mov
test
fsubrl
cmpsl
sub
shlb
xor
popf
jmp
pop
insb
dec
and
xor
push
push
fldcw
cmp
and
out
jle
pop
jbe
cmp
mov
ror
insl
std
test
jno
sub
cmp
sub
ret
lret
jg
mov
inc
popf
xchg
push
xchg
ret
lock
pop
cmp
mov
sbb
mov
add
insb
jmp
and
adc
rol
push
mov
fisttpll
xor
xchg
insl
fiaddl
push
jg
mov
pop
imul
or
aas
repz
insb
xchg
aas
cld
orl
jne
add
fsts
repnz
pop
hlt
insb
jecxz
xchg
in
sbb
into
roll
scas
add
rclb
faddl
test
inc
xchg
dec
addb
cld
inc
rorb
mov
movsl
sub
ret
mov
inc
pop
xchg
movsl
jge
imul
fsts
fld
mov
jg
or
add
ret
loope
jbe
adc
jbe
cs
aam
daa
popl
outsb
int
enter
movsb
ret
lock
dec
xor
xlat
mov
inc
popa
outsb
test
dec
outsb
mov
push
mov
out
jo
and
aas
mov
and
call
aas
int3
mov
and
xor
adcb
test
out
pushf
clc
mov
fucomip
push
pop
sub
call
ja
lods
adc
add
mov
xor
xchg
inc
dec
and
popa
insl
cmp
dec
sub
das
xchg
insl
lds
xchg
and
aas
lods
xor
sub
xor
cmpsb
mov
cs
ds
dec
cmpsl
fdivrl
cmpsb
pop
jo
lret
mov
dec
jl
imul
nop
testb
cmp
cmp
lret
out
jg
mov
lea
jae
xor
dec
or
jle
lods
push
int3
pop
xlat
vpmaxsd
mov
dec
xor
sti
or
pop
ret
xor
popf
aad
in
fs
fbld
xor
cli
xchg
outsl
std
jae
push
pop
xchg
int3
mov
push
ja
xchg
lods
xor
dec
lds
outsl
cli
aas
in
adc
int3
shll
iret
out
fisubs
adc
or
aas
adc
fidivl
fwait
mov
loope
xchg
inc
imul
test
push
jmp
xor
ljmp
mov
cwtl
hlt
outsl
cmpsb
sub
aam
js
das
xor
mov
cmp
jae
ret
mov
push
mov
fidivrs
movsb
xchg
push
fisubrs
dec
xor
push
in
or
dec
push
test
lods
cmc
dec
cmp
sbb
xchg
xor
inc
jl
clc
inc
and
lods
mov
xor
adc
cmp
pop
hlt
xor
pop
lods
push
and
push
loope
push
stos
or
popf
cld
dec
fsubs
ja
sbb
fisubl
rcrl
sarb
cld
xchg
pop
push
lcall
dec
cmpsb
push
ljmp
pop
outsb
gs
jnp
and
cmovge
test
push
add
cmp
scas
push
xor
cmpsl
xchg
jg
dec
jae
pusha
or
cmpsl
scas
outsb
xchg
ljmp
inc
js
cmpsl
popf
les
rorl
enter
lcall
shr
mov
out
jg
addr16
cmp
mov
dec
add
das
and
and
or
mov
in
jbe
addr16
flds
in
xchg
hlt
popa
arpl
dec
xchg
rorl
fstps
xchg
stc
jge
ss
in
mov
lret
mov
scas
mov
push
xor
add
jle
push
jmp
jp
or
sbb
ret
or
inc
xchg
out
mov
lea
xchg
dec
xor
js
ret
out
mov
sbb
nop
or
mov
movsb
pop
ficoml
loope
pop
out
dec
dec
add
dec
lahf
addl
sbb
push
shrl
enter
cld
fldl
pop
cmpsl
jl
andps
repnz
out
sub
inc
subl
aad
fcomp
scas
sbbl
scas
sub
push
push
jnp
outsl
inc
mov
dec
aam
lods
ljmp
mov
cmp
add
or
mov
inc
inc
testb
add
inc
lods
divl
test
sar
out
aad
sub
xchg
push
mov
adc
cld
add
stc
imul
inc
xor
fs
mov
dec
push
mov
out
pop
enter
scas
daa
push
mov
adc
addr16
add
movsl
jge
mov
mov
and
xchg
add
jno
pop
inc
idivb
mov
add
cmp
imul
adc
lods
mov
out
faddl
gs
shrl
or
cmp
mov
fstl
es
stc
outsl
cltd
call
pop
sub
testb
outsb
lds
cmp
push
xchg
add
shll
pop
cmpsl
sub
clc
or
lea
lahf
in
stos
adc
mov
dec
mov
push
outsl
xor
cmpsb
jnp
scas
movsl
push
mov
daa
mov
mov
xchg
sbb
mov
push
jp
jle
int
imul
fs
dec
movsb
cmpsb
addr16
ss
jae
xor
mov
adc
stos
in
scas
hlt
and
mov
push
xchg
pop
int
inc
xchg
stos
push
cmp
aad
daa
jo
inc
sub
push
inc
xor
fnstcw
loop
jle
cmp
xchg
mov
xor
jnp
jb
aam
and
lret
negb
pop
mov
xchg
lds
xor
or
lret
popf
fstpl
xchg
lock
into
adc
add
and
jle
into
sub
jbe
shl
pusha
test
pop
mov
jg
int
out
mov
or
hlt
icebp
mov
pushf
mov
mov
xchg
lds
cld
icebp
mov
pop
int3
pop
icebp
mov
inc
lahf
gs
in
dec
ss
or
xchg
out
mov
and
jl
out
add
cmp
dec
xchg
jno
dec
push
add
xchg
jmpw
push
std
jmp
jg
adc
xor
lods
cs
out
pop
dec
lods
mov
pop
xchg
inc
mov
sbb
fwait
rclb
mov
jo
icebp
in
test
mov
mov
stc
fisubl
and
les
cs
movsl
les
es
xchg
jge
dec
add
mov
jnp
loop
and
jmp
fisubl
jl
fs
int3
adc
xor
dec
or
lret
adc
sarl
in
in
cmc
or
lods
je
and
out
fimuls
add
ds
leave
das
divb
ja
mov
mov
lds
popa
push
pop
push
outsl
mov
sub
and
cmp
add
mov
in
push
sahf
sti
mov
jne
gs
inc
not
sub
jbe
mov
or
pop
push
fcmovnu
fnstcw
push
cmpsl
pusha
pop
mov
scas
and
jne
in
or
xor
jbe
mov
pop
frstor
popf
dec
aaa
push
cmp
jl
pusha
js
push
push
fmuls
push
in
add
mov
add
ret
repz
pop
adc
cmpsl
lcall
jecxz
xchg
xor
arpl
jmp
mov
xchg
cmp
in
xchg
jmp
js
es
into
xor
sahf
ljmp
cs
sahf
fiaddl
lret
in
add
cs
scas
jbe
jl
mov
stos
int3
fdivl
xchg
jne
loopne
cmp
mov
xchg
sub
cmp
loopne
sbb
movsb
sbb
sub
sahf
insb
cmc
leave
dec
push
cwtl
push
scas
mov
mov
xor
mov
xchg
clc
sbb
adc
call
fcom
popf
sti
adc
stos
shll
sub
aad
test
mov
or
pop
loopne
test
pop
or
mov
call
mov
and
push
ljmp
cwtl
push
out
lret
xor
and
ja
mov
jne
xor
notb
scas
lcall
xchg
jno
js
dec
shrb
cmc
pop
pop
xchg
pop
adc
sub
int
addr16
out
and
loopne
jns
jbe
sub
xlat
stc
out
and
fistpll
xor
rcrb
data16
push
or
xchg
mov
test
mov
and
mov
or
xlat
push
pop
xor
adc
push
dec
in
dec
jg
pop
mov
add
or
rorl
aas
push
xor
sbb
push
adc
loope
add
or
ss
jecxz
mov
cs
mov
adc
adc
mov
mov
out
fwait
outsl
das
fs
push
std
xor
cmp
pushl
push
xchg
insl
xchg
xor
mov
push
hlt
std
fstl
fidivs
in
sbb
pop
sbb
repz
cs
ficoml
iret
lret
sbb
adc
pop
lods
and
aas
ret
adc
push
aam
inc
pop
push
pop
add
jmp
inc
popf
ljmp
xchg
stos
xchg
jmp
leave
add
pushf
adc
lret
outsb
push
fsubl
lds
hlt
sbb
shl
inc
and
sbb
sbb
push
xchg
test
loop
hlt
and
mov
repz
mov
data16
movsb
out
outsl
imul
jno
jns
jbe
inc
xor
cmp
xchg
fst
daa
jbe
mov
test
lods
inc
push
scas
pop
icebp
jmp
sbb
mov
or
sbb
aad
test
pushf
fsubrs
js
push
pop
mov
out
aam
adc
lods
pop
push
adc
xchg
lds
mov
out
dec
fildll
inc
rcll
mov
cmp
fdivrl
mov
sub
sbb
or
jl
insb
jmp
mov
cmp
fdivrl
mov
sub
sbb
or
jl
insb
jmp
mov
cmp
imul
cltd
sub
js
insb
call
pop
sbb
js
int3
dec
cld
pop
in
jmp
ret
data16
sbb
jnp
add
adc
and
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
scas
mov
mov
adcl
mov
push
jg
outsl
bound
dec
xchg
mov
mov
out
repnz
iret
adc
and
push
sbb
mov
xchg
cmpsb
subb
out
div
loop
adc
add
xor
sub
push
or
jmp
add
adc
or
push
xchg
mov
movsb
cmp
xchg
push
and
loop
out
pop
jecxz
shll
js
xchg
inc
addr16
scas
imul
mov
add
inc
subl
rol
test
xchg
and
mov
fisttpll
icebp
mov
subb
fucomip
das
adc
shlb
dec
lock
adc
outsl
xchg
loope
mov
cmp
lret
loop
jp
ja
bound
lgdtl
sub
negl
mov
mov
dec
cmp
or
or
and
in
ds
inc
or
sbb
arpl
mov
mov
out
repnz
loop
adc
add
xor
and
push
addr16
js
pop
bound
out
scas
ficomps
cmpsl
xorl
dec
inc
pusha
adc
cmp
pop
push
and
mov
mov
mov
outsl
dec
dec
imul
or
jge
in
lods
lret
cmp
xchg
ret
iret
adc
add
xor
and
push
jg
outsl
jb
bound
mov
mov
out
repnz
iret
adc
add
xor
and
push
jg
outsl
jb
bound
mov
lock
mov
arpl
daa
add
xchg
jg
push
add
xchg
ds
js
lcall
sar
xchg
push
or
js
inc
in
test
lret
sub
into
xchg
cmc
mov
stc
out
aas
mov
pop
mov
ret
push
addl
stos
dec
cmpb
das
aas
je
mov
int
cli
dec
adc
ljmp
jmp
mov
xor
mov
jg
shrb
dec
imul
sbb
dec
jnp
xchg
outsb
sbbl
xchg
lcall
sarl
insl
push
mov
cmp
pop
jmp
xor
cs
mov
pop
cmp
or
adc
xchg
adc
movsb
test
cltd
addb
fadd
and
xor
in
icebp
addr16
dec
test
ss
shlb
pop
fidivrl
xor
sub
jae
fsubl
xchg
mov
sbb
adc
in
jbe
add
ds
fcoml
aas
pop
mov
sti
sub
sub
test
stos
sub
xlat
pop
dec
movsl
pop
imul
dec
ret
jg
sbb
cltd
cmpxchg
sbb
pop
sbbb
fmuls
leave
cmp
dec
sub
fisubs
or
xchg
aad
sti
in
mov
push
xchg
arpl
jbe
rcrb
repz
fstps
repz
repz
adc
jo
imul
xchg
xor
jecxz
aam
lds
mov
xchg
jg
pop
pop
or
lahf
aaa
out
sar
into
ret
hlt
sbb
mov
outsb
xchg
mov
mov
iret
push
mov
mov
pushf
jns
sub
push
push
xor
pop
lahf
mov
fdivs
aas
gs
jno
out
cmp
pop
scas
jg
lcall
test
jo
pop
repz
ret
jmp
imul
push
ficomps
mov
mov
gs
mov
pop
cmp
jmp
xor
out
push
xchg
jae
stos
jae
fistl
pop
mov
mov
jmp
jmp
pop
mov
dec
adc
lods
imulb
and
clc
pop
lret
sub
insb
push
icebp
push
push
ja
arpl
jge
cmpsl
sub
adc
es
call
gs
sub
sub
mov
adc
mov
jbe
jns
jmp
jle
push
ljmp
stc
into
add
jl
add
push
xlat
dec
xchg
add
loopne
push
insl
flds
mov
and
dec
popa
lret
sahf
mov
rorb
jae
or
cmc
fcmovnb
jecxz
cmp
in
mov
idivl
dec
or
adc
out
ffree
mov
lock
jmp
sub
and
loopne
out
popf
lret
mov
dec
icebp
mov
add
mov
pop
inc
ss
push
mov
cli
les
jo
roll
call
mov
cmc
outsb
cmpsl
push
sub
pop
clc
jp
in
pop
push
sbb
fistps
sbb
aam
jno
adc
leave
mov
sbb
add
lock
pushf
lea
cld
cwtl
mov
fists
lock
pop
repnz
mov
cmpsl
orb
pop
cmp
adc
dec
int
popf
in
mov
clc
inc
adc
arpl
ret
adc
rcrb
pop
sub
mov
add
enter
adc
sbb
je
xchg
fists
daa
or
and
ljmp
hlt
mov
cld
cmp
mov
lea
pop
xchg
mov
xchg
or
sbb
jno
data16
push
andl
push
dec
or
cmpsb
imul
bt
mov
cmp
insb
push
jbe
dec
push
outsb
cmc
sbb
add
adc
mov
sbb
negl
cmc
xorb
cli
fcoms
popa
adc
sub
sbb
sbb
test
mov
mov
push
sub
pop
inc
cwtl
outsl
and
out
xor
sbb
out
insb
sub
mov
lahf
dec
test
insb
lret
adc
mov
xor
pop
jmp
out
mov
mov
lahf
dec
cmp
cwtd
mov
dec
sbb
or
ljmp
cmp
out
out
and
push
add
mov
pop
popf
pop
xor
int3
inc
or
xor
jo
xor
sbbb
pop
clc
push
push
pop
shll
or
sub
push
pop
push
leave
cwtl
outsb
lcall
pop
cmpsb
cmpsl
lods
sbb
movl
stc
notl
xlat
cltd
mov
ret
cmc
adc
mov
pusha
das
fxch
add
and
xchg
mov
and
mov
push
adc
cmp
push
test
ret
pop
arpl
test
test
loop
lahf
stc
movsl
dec
xchg
jns
icebp
cmpsb
jecxz
mov
shrb
movsl
cs
xor
loopne
mov
dec
push
jb,pn
push
bound
arpl
imul
mov
call
xchg
xor
jg
jmp
fldt
imul
fcmovnbe
sub
push
out
sbb
aam
xor
jp
out
clc
or
or
xchg
mov
test
std
dec
mov
outsb
xchg
cltd
push
xor
cmp
ss
sub
mov
out
nop
in
test
mov
fnstcw
repnz
out
sbb
ds
jns
cwtl
lret
inc
xor
push
dec
sbb
imul
xor
sbb
xlat
pop
mov
mov
cmp
sub
mov
xchg
fsts
and
pop
andb
mov
or
mov
cmp
jne
ds
iret
sub
xchg
addr16
negb
cmp
add
cld
mov
push
xchg
stos
in
lock
out
imul
jns
daa
lds
mov
sub
or
and
divb
push
test
push
inc
pop
inc
movsb
mov
in
adc
test
scas
or
fxch
sbb
cmp
sub
lcall
subb
insb
sarl
cs
jnp
fidivl
dec
sub
jp
leave
gs
sub
pop
mov
shl
into
or
mov
jecxz
dec
pop
or
sbb
xchg
pop
xchg
ds
jb
lods
mov
push
daa
jge
popa
mov
jno
pop
lretw
ret
mov
lea
push
pop
add
pop
adc
gs
push
jge
aaa
lods
test
mov
pop
xor
xor
pop
push
pop
insl
dec
test
pop
rcl
mov
mov
push
push
insl
dec
mov
rcrl
adc
xor
or
ss
outsl
or
fstp
xchg
push
pop
fidivl
popf
pop
fimull
pusha
mov
mov
fdivl
das
dec
sahf
add
js
jo
es
int
xlat
int3
pop
dec
shl
mov
or
arpl
cmp
jb
xor
cli
call
je
dec
pop
mov
fcomps
and
test
inc
mov
pop
xlat
jne
lret
mov
add
mov
pop
scas
jmp
das
dec
loope
mov
mov
out
andb
push
clc
scas
or
xor
mov
decb
xor
pushf
inc
stos
xor
lods
repnz
jno
mov
fcoml
inc
cltd
arpl
fildl
add
stos
gs
mov
loope
repnz
mov
aas
shrl
mov
adc
jmp
xor
xorl
leave
mov
lea
sbbl
mov
push
pop
testb
sbb
addr16
repz
movb
push
test
mov
add
pop
lcall
jge
ljmp
sbb
or
sti
xor
push
mov
push
pop
adc
or
sub
mov
mov
fistl
wbinvd
add
out
testb
das
lret
fdivs
cmpsb
flds
cmp
mov
std
push
push
pusha
add
leave
fstpl
aam
jb
mov
ficoms
mov
in
push
cmp
mov
jne
or
or
out
and
imul
jle
cli
cmp
cltd
ficompl
imul
cli
rorl
mov
push
test
ljmp
jnp
repz
lock
mov
cmpsb
push
sbb
xchg
bswap
push
mov
imul
pop
rorb
sahf
pop
cmpb
aaa
in
mov
mov
lret
push
jnp
notb
xchg
mov
cld
int3
xchg
inc
pop
in
or
insb
cld
and
or
stc
push
es
clc
xchg
into
sub
icebp
jno
mov
push
loopne
in
fnsave
pop
loopne
fnstenv
xchg
push
xchg
lcall
mov
lods
or
dec
lret
loope
aas
stos
push
repz
push
add
mov
push
xlat
les
add
in
ss
cmpl
icebp
pushf
mov
lea
lret
pop
mov
aam
fs
push
repnz
test
ret
mov
inc
push
inc
jne
call
cmp
arpl
mov
inc
push
and
dec
xchg
fnsave
lea
iret
movsb
lock
enter
movsb
mov
sub
jg
in
or
xchg
mov
repz
ja
shrl
sbb
mov
inc
std
pop
in
mov
pop
push
xor
push
arpl
and
fninit
or
lret
outsl
je
mov
loopne
subl
pop
out
lret
loop
push
rcrb
xchg
clc
push
ds
dec
test
in
popf
imul
push
pop
inc
rol
fstpl
test
xchg
lahf
inc
dec
jnp
inc
add
incl
jmp
adc
fstl
sub
jb
sub
int
mov
pushf
test
fs
cmp
movsb
xor
dec
arpl
movsb
push
lahf
inc
push
inc
sahf
rorl
jno
push
fwait
or
dec
mov
mov
lret
adc
jae
push
lcall
mov
das
xor
out
mov
sbb
test
mov
cli
pop
test
pusha
fldl
insl
adc
ds
add
imul
mov
stc
mov
mov
clc
inc
jnp
pop
cmp
cmp
sbb
fldcw
mull
xchg
fdivrp
sub
pop
std
nop
icebp
cmp
mov
aam
mov
pop
xor
jp
mov
mov
fldl
pop
es
out
adc
xchg
pop
scas
push
ficomps
stos
cmp
cmpsl
add
mov
popf
xchg
cmp
hlt
popa
fisttps
fisubl
dec
lea
mov
into
rorl
and
inc
push
sbb
inc
ja
push
test
jbe
cmpsb
mov
push
cmpsb
lods
jp
cmp
dec
stos
cmp
pushf
xchg
push
loop
cmpsl
cmpsl
jmp
ret
xchg
divb
test
adc
fmul
and
aaa
orps
stos
pop
sub
movsl
shrl
adc
mov
repnz
cltd
sbb
xchg
adc
das
mov
pop
sbb
aam
xchg
fisubl
push
fisttpl
lea
xchg
test
or
ss
lods
sub
lcall
andl
jle
test
bound
test
ds
cld
bound
cld
inc
push
test
sbb
loopne
push
inc
and
cmp
or
or
xchg
scas
div
mov
cmp
fisubs
fnstenv
inc
mov
and
sahf
ss
push
mov
loope
shll
test
popf
sub
lret
mov
add
cmp
pop
push
bound
mov
lret
imul
xor
cmpl
xor
je
rcpps
pop
xchg
cli
and
mov
fsubp
jle
dec
ss
es
popa
jmp
jmp
rol
aam
push
mov
ficompl
cs
push
mov
inc
movsl
call
mov
xchg
mov
push
and
in
mov
xor
divl
dec
cltd
mov
push
mov
sbb
dec
cmc
mov
and
ljmp
xchg
jg
hlt
push
or
lds
test
subl
bound
loope
xor
mov
mov
mov
pop
out
dec
adc
xchg
cmpb
lea
sti
ret
push
xchg
sahf
mov
jg
xor
gs
mov
sbb
push
fwait
xor
pop
bound
notl
aad
hlt
aaa
sub
out
jmp
mov
fldt
xor
leave
insl
les
fs
or
cmp
in
fidivrl
mov
scas
scas
mov
ja
cli
or
sub
fdivl
lret
push
mov
add
pop
ds
les
insl
loopne
in
sbb
sbb
cld
movsb
or
sbb
adc
or
inc
clc
inc
jne
push
out
aad
cmpsb
sbb
cwtl
leave
xchg
pushf
xor
mov
sub
xchg
call
or
xor
pusha
fsubrl
add
and
repnz
lock
jp
std
xor
les
clc
cli
andb
xchg
sub
cmpb
pop
js
fwait
dec
rcr
cmp
cli
sub
mov
or
mov
pop
movsb
xchg
mov
test
sbb
mov
or
sub
xchg
mov
sbb
aas
lods
outsb
inc
push
dec
es
aad
mov
jmp
mov
jl
xchg
mov
lock
dec
inc
sub
push
xchg
and
dec
or
negb
in
jmp
les
push
into
xorl
pop
push
pop
filds
cwtl
outsl
adc
mov
es
xchg
add
cmc
adc
or
xchg
lret
cmp
std
jbe
sarl
pusha
scas
aas
sbb
mov
test
gs
push
pop
mov
push
out
mov
pop
call
and
pushf
icebp
fs
mov
adc
lret
mull
xlat
call
sub
out
stos
jle
adc
stos
int3
xchg
add
fisubrl
cltd
cmp
adc
xlat
iret
adc
incb
xor
adc
add
jmp
pushl
push
cmpsb
lcall
or
push
ja
rol
add
adc
notl
mov
adc
and
or
mov
jl
pop
xchg
insb
fcmovu
imul
ss
movsb
add
cmp
jne
inc
push
push
je
cmp
and
add
out
adc
out
pop
test
daa
cmp
leave
les
outsl
xchg
push
cmpsl
lret
add
mov
in
jg
xor
mov
jne
push
dec
cld
fnstcw
imul
ret
mov
shl
out
xchg
mov
daa
mov
and
push
mov
xlat
je
pop
dec
inc
dec
xchg
call
fsubl
xchg
enter
jo
lds
jbe
xchg
adc
mov
xchg
xchg
xor
addr16
fiaddl
xor
mov
repz
movsl
mov
dec
cld
ja
mov
ret
add
pop
int
xor
mov
into
cmpsb
lcall
scas
dec
mov
xor
pushf
inc
xchg
fucom
stc
jle
fstpl
add
xchg
cmp
mov
sar
pop
xor
jne
leave
std
pop
xor
cs
ret
test
in
lds
fnsave
lret
mov
xor
frstor
cmc
fdivl
in
rol
fistl
mov
lds
xchg
dec
in
sub
or
dec
rcr
rcrb
insl
outsl
ret
dec
ja
pop
mov
pop
fisubs
xchg
sub
or
add
adc
addr16
sbb
sub
in
mov
icebp
or
dec
dec
or
outsl
mov
jnp
aas
mov
out
addr16
stc
movsl
mov
xor
mov
movups
lahf
jle
add
insl
push
or
pop
lock
cmp
xchg
sarb
je
xchg
int
mov
rcrl
sbb
divl
iret
mov
push
sbb
push
in
push
mov
jmp
or
mov
sub
fistl
das
sahf
iret
mov
or
sub
subb
xor
and
xchg
adc
inc
lcall
mov
ljmp
push
jle
out
mov
xchg
data16
ja
into
ljmp
xchg
and
or
cmpsb
aaa
fidivs
ja
jl
insb
xchg
jmp
aas
iret
aaa
xchg
cmp
rcrl
in
movhps
push
insb
call
and
clc
jns
subl
notb
xorb
sub
push
hlt
pushf
hlt
out
mov
icebp
mov
lds
lcall
sahf
pop
daa
int
and
jmp
stc
notl
aam
daa
or
add
push
jne,pn
clc
hlt
xchg
pop
xchg
or
call
xchg
nop
insb
subl
bound
inc
cmpsl
mov
repz
es
std
stos
out
adcb
pop
dec
pop
and
inc
in
test
jns
jecxz
mov
fs
das
sbb
xor
sub
jle
xor
sub
repnz
loop
in
fisubrs
repnz
adc
sub
jg
push
jecxz
pop
jae
jno
sub
mov
andb
ja
in
sub
aam
cmp
mov
lret
cmc
sbb
mov
pushw
fisubrs
cmp
out
std
adc
or
lds
add
adc
or
jns
fistpl
mov
sub
orb
js
sahf
jge
adc
shll
and
sbb
and
push
clc
mov
ljmpw
lds
cmp
or
push
imul
add
jle
mov
std
xchg
jecxz
lret
cmpsl
dec
test
in
jne
adc
jmp
aad
clc
movsl
into
pop
cld
sbb
stos
or
gs
add
mov
mov
lds
mov
push
and
mov
lds
cmp
adc
int3
cli
xor
ss
and
jmp
mov
inc
lds
enter
mov
add
mov
push
fwait
aad
clc
stos
pop
adc
fdivl
movsl
mov
shll
lods
fisubl
movsb
lcall
imull
loope
and
aas
sub
inc
inc
in
les
out
mov
inc
jp
mov
jae
mov
ret
and
jle
mov
test
mov
aaa
arpl
addr16
mov
adc
and
jecxz
int3
addb
das
in
lahf
daa
adc
cmc
loopne
sti
mov
add
divb
or
xchg
aam
push
inc
ds
add
mov
out
xor
mov
mov
or
cmp
mov
fsubs
into
push
and
pop
add
int
sbb
insl
jmp
insl
or
mov
clc
xchg
sub
in
push
or
out
lret
pop
sub
xor
cmc
fdivrs
data16
scas
mov
test
ljmp
aad
jns
jnp
stos
test
popf
or
mov
jne
adc
into
sahf
imul
fisubrs
add
cmp
lock
dec
test
cltd
push
mov
inc
icebp
js
scas
push
sub
mov
rcpps
rorb
in
fbstp
lret
xchg
xor
mov
repz
sbb
cmp
out
dec
pop
lret
pop
adcl
je
mov
ss
inc
repz
inc
cmp
imul
fimuls
mov
mov
or
and
fidivl
adc
adc
and
cmpsb
clc
outsl
jo
sbb
mov
arpl
mov
and
cmp
out
push
jnp
insl
xchg
mov
mov
sbb
in
lock
aas
movsl
pushf
jbe
iret
adc
pop
dec
inc
xor
notl
inc
mov
lds
ret
lret
mov
push
xchg
pop
aaa
jl
gs
rol
fcmovnu
push
jbe
pop
imul
inc
lds
fsubl
aad
arpl
mov
xchg
movsb
xchg
hlt
int
mov
ret
xor
cmp
cmp
pop
pop
inc
push
or
outsl
mov
icebp
iret
mov
dec
repz
hlt
cli
jo
inc
movsl
outsb
push
repnz
xchg
test
cli
add
orl
cmpsl
push
jo
int3
mov
fidivrs
aam
rol
or
mov
and
fistl
subl
clc
xor
sbb
les
mov
out
repnz
iret
adc
add
xor
and
push
jg
outsl
jb
bound
mov
mov
out
repnz
iret
adc
add
xor
and
push
jg
outsl
jb
bound
mov
mov
out
repnz
iret
adc
add
xor
and
push
jg
outsl
jb
arpl
mov
mov
out
repnz
iret
adc
add
and
mov
fwait
leave
adc
add
jge
or
daa
ljmp
xchg
jns
imul
cmp
sub
fldenv
leave
adc
add
jae
arpl
jecxz
mov
imul
cmp
sub
fldenv
jmp
jg
mov
adc
rorl
insl
movsb
pop
mov
jb
add
clc
pop
es
push
mov
mov
sub
cmpsb
rcll
shll
call
pushf
jbe
mov
mov
insb
jns
push
push
cmp
arpl
xor
adc
addl
mov
pop
mov
jl
test
and
pushf
sub
pop
enter
std
jb
pushf
cltd
push
push
inc
stc
cmpsb
push
pop
addl
pop
mov
or
das
ret
adc
cltd
loopne
pop
inc
or
jae
repz
insb
test
dec
cmpl
jns
pop
and
in
clc
cmpsb
pushf
push
fwait
mov
jb
sub
cmpsb
pop
pop
xchg
jge
imul
shrl
add
and
adc
outsl
jmp
push
mov
xor
jns
imul
mov
sbb
insl
scas
sbb
fsubl
xor
loop
lcall
dec
xor
enter
add
mov
and
xorb
cmpsb
dec
addb
adc
ss
arpl
mov
mov
imul
cmp
sub
fldenv
leave
adc
add
jae
arpl
mov
mov
imul
cmp
sub
fdivrl
pop
or
xor
daa
xlat
lock
adc
addr16
jo
mov
mov
inc
movl
push
xor
mov
daa
lahf
cli
sahf
stc
or
sub
cmc
cmp
pop
in
mov
dec
push
popf
push
ficoml
setle
bound
xchg
rcrb
inc
lret
mov
inc
out
rolb
inc
cmpsl
add
mov
or
push
cmp
push
xor
push
ret
push
std
int
jp
pop
jmp
in
xchg
fildl
and
stos
inc
js
rolb
mov
outsl
xchg
xchg
arpl
shlb
out
fdivrs
add
sahf
add
cmp
mov
fyl2x
dec
adc
test
enter
outsb
mov
xchg
lret
in
push
or
shll
pop
pop
jmp
mov
push
add
xchg
mov
adc
popf
cmc
enter
sbb
shll
sub
pop
and
ret
imul
mov
mov
aas
cwtl
inc
mov
mov
add
jle
lret
bound
cltd
xlat
rcrl
popa
rcrl
and
dec
xchg
push
or
fsubr
aam
aas
andb
mov
sub
lock
js
inc
jo
inc
rcr
imulb
dec
in
mov
pop
shrl
testb
iret
ret
lret
add
dec
arpl
ficoms
das
shll
loop
fimuls
loop
jne
in
les
add
cmc
sbb
and
jno
sbb
mov
pop
jne
loopne
jp
fcomps
xchg
xor
push
repz
xchg
popf
pop
js
pop
popa
sti
dec
and
push
int3
hlt
push
out
pushf
pop
test
add
sbb
idivb
push
push
sub
inc
sbb
mov
mov
add
xchg
pop
fcoml
mov
es
in
push
icebp
add
inc
cmp
lret
arpl
das
add
je
sbb
xchg
xor
add
and
sub
dec
add
sub
in
cmp
mov
divl
cmp
test
gs
cmp
enter
push
adc
jno
insw
movsl
fidivrl
jne
dec
cmp
ds
out
outsb
stos
mov
xchg
in
pop
inc
test
cmp
mov
inc
adc
ss
testb
push
roll
aad
iret
xlat
ss
enterw
cmpl
sbb
rclb
in
stos
hlt
push
mov
and
xchg
jp
sbb
orb
add
aad
dec
mov
int
xchg
jmp
mov
jae
add
dec
or
test
ss
lds
mov
inc
push
sar
into
or
mov
popf
fisttpl
stc
hlt
pop
xor
xor
push
or
pop
mov
test
test
cmp
or
inc
shr
or
jge
mov
inc
mov
push
lods
in
inc
sub
jg
sbb
cs
cltd
insl
aaa
cmp
jp
clc
add
or
jno
mov
jne
jp
push
lock
mov
mov
and
in
jo
cmp
dec
add
adc
jb
push
adcl
push
icebp
xor
lcall
insb
adc
add
push
inc
mov
insb
jae
cmp
or
xchg
xchg
mov
xor
sbb
cs
aad
adc
push
xchg
movsl
xor
leave
pop
mov
scas
shll
mov
std
nop
push
shr
adc
scas
pop
pop
test
pusha
fdivrs
scas
dec
sub
jno
loopne
popl
test
dec
push
fisubrs
pushf
sub
xchg
shl
je
arpl
loop,pn
xor
hlt
pop
and
sub
popa
gs
xchg
add
or
imul
inc
mov
inc
pop
pop
loop
sub
into
add
testl
fnsave
dec
mov
xchg
in
mov
jge
cli
iret
scas
lcall
pop
dec
or
or
out
jns
jecxz
mov
rorb
out
sbb
inc
movsb
cmp
mov
fcmovnbe
xor
lock
mov
shrl
fwait
and
mov
cmp
xor
xor
xchg
sub
sbb
lcall
push
sub
jno
jae
stos
sub
arpl
cmp
or
pop
inc
fucomp
push
pop
fwait
and
and
xor
std
sbb
push
in
push
ret
xchg
push
jp
mov
fs
xor
jns
enter
or
imul
test
jp
repnz
cwtl
cli
add
enter
jbe
jnp
movsb
movsb
ret
outsl
mov
aaa
xchg
jle
mov
mov
mov
dec
jmp
push
cwtl
aad
pop
xchg
leave
push
fimull
or
and
sti
cltd
pop
scas
cld
ds
xchg
inc
xchg
cmc
scas
inc
pop
mov
repz
mov
lods
pop
enter
test
and
imul
xor
mov
in
dec
out
sub
sub
push
test
pop
imul
icebp
push
test
xlat
xchg
xchg
sbb
dec
std
fsubl
jno
mov
xchg
leave
insb
out
push
push
cmp
into
out
xchg
out
std
fsubrl
push
orb
xchg
adc
jl
ret
adc
xchg
xor
int3
cmpsl
xchg
mov
xchg
mov
inc
daa
lods
mov
test
or
and
pop
xor
push
adc
sbb
or
fimull
addr16
jle
pop
cmp
fdivs
pusha
ja
ds
sbb
adcb
aas
ret
iret
sub
iret
nop
adc
xchg
jnp
sub
push
sbb
pop
aad
mov
out
or
xchg
pop
cs
mov
jl
mov
imul
cltd
out
jbe
cs
sub
ja
rcll
repz
outsb
cwtl
js
push
cmovo
int3
xchg
lods
rcl
jecxz
add
mov
jne
stc
test
je
scas
mov
cli
leave
stc
jo
in
test
push
ja
mov
stos
or
sarb
jl
aam
mov
pop
data16
loope
mov
mov
or
cs
push
cltd
or
dec
jmp
or
jno
sbb
test
cmpsl
xchg
incl
loope
ljmp
sub
rcrl
jp
inc
mov
jno
or
push
xchg
sub
shr
push
enter
stos
sbb
mov
rep
jae
rol
and
jge
push
adc
xchg
fcmovne
inc
mov
mov
movsl
outsb
and
push
xchg
mov
imul
cmp
shrb
mov
push
js
in
dec
sbb
ljmp
inc
xchg
mov
data16
lds
jb
dec
mov
mov
in
fdivrs
test
sbb
fs
mov
xorb
push
mov
out
pop
dec
mov
arpl
sbb
adc
loope
bound
inc
gs
shlb
xor
sub
jecxz
clc
fisttps
sarl
jno
xchg
cmp
mov
or
xor
into
lods
aad
xchg
pop
pop
adc
or
mov
popf
clc
enter
push
fdivrl
jbe
dec
sahf
gs
jne
jge
notl
mov
cmpsl
sbb
push
xchg
mov
pop
cmp
pop
xchg
dec
push
push
push
clc
iret
mov
dec
inc
sub
push
nop
rcl
fistps
or
jo
shll
jp
or
ss
hlt
repnz
cmp
sbb
adc
aas
mov
pushf
std
xchg
bound
repnz
xor
inc
test
enter
mov
in
scas
inc
jmp
movsb
sbb
and
lock
push
cmp
rolb
dec
pop
or
xchg
mov
xchg
push
popf
ret
mov
fdivp
adc
xor
in
xlat
ficoml
mov
stc
push
and
repnz
jmp
inc
or
pop
jb
jno
adc
and
pop
sti
push
inc
inc
xor
inc
cmc
js
pop
xchg
inc
inc
std
pop
dec
clc
mov
cs
mov
add
push
mov
adc
js
int
pop
rorl
shll
loope
ret
repnz
movsb
je
cmp
enter
fs
inc
mov
mov
sbb
mov
inc
repz
daa
and
fs
push
inc
inc
outsl
aad
sub
xchg
add
push
ss
and
sahf
ljmp
push
push
dec
js
sub
xchg
push
or
pop
mov
jno
je
lret
jne
jge
or
add
push
dec
loop
mov
mov
cmp
lret
adc
push
sbb
push
mov
call
mov
frstor
jmp
cli
jns
int
or
roll
into
adc
insb
add
icebp
add
mov
sbb
ret
scas
or
aaa
call
mov
aam
push
or
adc
sbb
push
push
mov
das
cwtl
push
mov
insb
or
fstl
pop
sahf
loop
movl
std
add
imul
adc
in
push
xor
pusha
push
xor
ret
sahf
push
sub
fwait
repz
enter
and
pop
pop
mov
jnp
push
push
testl
mov
out
nop
inc
cmc
repz
loope
dec
cmpsl
push
sub
add
notl
cmp
push
sbbl
jo
pop
xchg
leave
insl
sub
imul
cmp
outsb
imul
xchg
mov
adc
or
imul
js
imul
mov
ret
mov
mov
daa
arpl
fidivl
xlat
jbe
leave
cmp
inc
pop
xor
movsb
mov
addr16
and
pop
lret
push
or
push
dec
inc
and
and
gs
jl
leave
stos
into
fwait
jp
jge
fcmovbe
popa
inc
out
push
jo
hlt
inc
xchg
lea
lret
or
cmpsb
mov
icebp
sub
sub
adc
jle
fbld
or
mov
stos
cmp
nop
sbb
mov
cmp
popf
out
adc
mov
adc
call
cmpsb
loopne
fcoms
fwait
rcll
sub
pushf
jno
add
fidivrl
out
xchg
mov
jge
bound
into
sub
adc
add
fs
dec
lds
mov
add
fildll
out
push
xor
cmpsb
push
and
add
jbe
shrb
pop
xor
in
sahf
mov
ss
iret
xchg
mov
inc
jle
fidivrs
adc
sahf
cmp
addl
stc
and
clc
xchg
std
cwtl
fisttps
and
pop
ljmp
insl
lret
cmpb
xchg
jg
repz
test
push
push
aam
add
xor
cmc
in
add
leave
sbb
test
adc
cmp
add
sub
cmpsb
mov
daa
repnz
dec
jg
sti
fwait
or
cmp
sbb
add
or
stc
jecxz
shl
outsl
stos
dec
xor
jmp
push
sub
iret
add
loop
sbb
jmp
lock
int3
push
out
rolb
jne
cmp
lahf
pop
icebp
sbb
outsl
or
fldenv
add
movsb
dec
sub
std
xchg
lods
cmpsb
dec
add
dec
rclb
cld
pop
sub
data16
mov
jo
rcrl
push
inc
cmp
mov
xchg
mov
sub
movsb
xchg
aad
push
rcll
sbb
cmp
pop
clc
movsl
in
xchg
jne
xor
add
in
pop
fldcw
inc
pop
push
and
pop
and
cmp
sub
sub
insl
lock
test
jg
mov
jp
mov
xorb
mov
sbb
add
jle
jmp
fbld
fwait
fisttpl
fnstsw
gs
aam
push
sub
clc
push
aad
pushf
adc
in
leave
leave
push
lods
repz
push
ret
mov
sbbl
and
movsb
lcall
shrl
jno
lods
push
rcl
sub
jecxz
daa
xor
hlt
lods
mov
mov
mov
iret
cld
mov
cltd
lret
add
mov
jbe
scas
lret
xor
jp
out
jno
add
mov
mov
or
jmp
into
add
dec
cmp
fstl
add
jecxz
xchg
xor
xor
xchg
repnz
pop
in
mov
pop
adc
outsl
das
sbb
filds
mov
out
mov
fsubl
push
push
insb
fwait
sti
push
xchg
rcll
shrl
insl
sarb
enter
sub
and
dec
outsl
pusha
mov
cmc
cs
push
addr16
push
repz
dec
ljmp
dec
push
pushl
mov
cmp
mov
dec
cli
and
test
mov
add
insb
dec
movsl
dec
sub
mov
dec
inc
push
mov
shrl
cmp
in
lock
imul
movsl
stc
push
mov
sbb
sub
cmpsl
ret
pusha
sbb
rcll
jmp
cmp
inc
aam
sbb
dec
sbb
add
mov
mov
push
call
jmp
aaa
mov
pop
pop
mov
lock
clc
test
mov
mov
sub
push
mov
jo
pop
out
mov
or
loope
inc
adc
imul
mov
inc
je
rorl
push
push
xchg
ds
or
lcall
mov
mov
scas
imul
xor
or
xchg
rcrb
mov
cmp
out
mov
lret
rcl
lds
lea
xor
mov
mov
cmpsb
fistps
xor
mov
testb
popf
pop
popf
adc
add
xchg
mov
xchg
lods
in
mov
call
icebp
out
cmp
and
jmp
push
jg
loop
push
aam
lcall
push
pop
sub
or
mov
push
pop
movsb
pushf
insb
pop
enter
movhps
pop
sbb
adc
loopne
pop
mov
push
jo
lods
xchg
mov
push
cmp
inc
adc
inc
mov
push
lret
mov
je
push
dec
jns
ljmp
push
xor
cmpsl
out
std
add
scas
push
insb
pop
sub
jmp
push
enter
enter
lods
mov
jge
insb
jg
in
sbb
pop
repnz
ss
mov
xchg
dec
in
stos
jnp
xor
or
cmp
outsl
cmc
push
mov
int
sub
fwait
imul
mov
mov
inc
cmp
dec
and
iret
add
fwait
jge
jge
add
sahf
aad
mov
ss
dec
mov
add
jns
fimull
mov
clc
add
jmp
mov
iret
jecxz
inc
gs
or
inc
cld
ret
xor
arpl
or
push
ret
test
cmpsb
mov
aaa
lods
nop
cli
xor
es
jnp
outsl
xorb
arpl
mov
cmp
mov
fdivl
imul
sbb
xchg
das
hlt
xor
into
add
rolb
mov
aas
pop
xchg
mov
arpl
adcb
cmp
pop
rcll
out
adc
imul
ljmp
inc
add
in
dec
xchg
push
stos
mov
jge
dec
mov
in
or
scas
ficoml
pop
fildll
jb
mov
icebp
fistpll
mov
movsl
jecxz
dec
xchg
pop
fcomi
sub
ret
xor
inc
fldt
sbb
dec
popa
mov
or
push
arpl
adc
call
inc
jae
jnp
jmp
dec
mov
sub
data16
leave
mov
adcl
and
xchg
je
cmp
pop
mov
cs
xor
aas
sbb
jbe
bswap
lret
test
dec
mov
inc
mov
dec
and
push
rcr
or
mov
sbb
sub
push
test
addb
fwait
cmc
jl
and
sbb
popa
pop
adc
add
imul
adc
xchg
jmp
repz
fadd
test
jne
mov
enter
dec
cwtl
es
dec
add
adc
mov
rclb
add
cmpsb
xor
mov
add
inc
xor
movsb
mov
mov
jo
mov
sub
fwait
cs
push
cli
popf
aas
cs
dec
push
mov
or
xor
dec
cmp
push
in
xor
pop
cld
subb
mov
mov
andb
cmpl
shl
stc
loop
and
sub
imul
push
ret
push
mov
mov
in
jae
pop
ret
pop
mov
xor
jecxz
pushf
cli
mov
inc
shlb
sub
dec
inc
jge
jno
nop
in
cs
inc
icebp
sub
stos
add
mov
lcall
sub
jmp
xchg
and
or
sbb
mov
jl
sbb
mov
adc
mov
cs
sbb
push
pop
pushf
mov
xor
popl
fdivrl
xor
jle
subl
mov
mov
in
movsb
push
jmp
aad
cmpsb
sarl
mov
insl
inc
gs
push
xrelease
rolb
cmp
ret
ret
mov
loope
mov
aaa
cli
mov
dec
xchg
cmp
es
shll
fildll
cmp
push
scas
adc
jmp
pushf
sbb
mov
out
sti
jb,pn
in
mov
in
arpl
mov
iret
mov
loope
pop
dec
jno
mov
js
lcall
lahf
mov
mov
pop
xlat
lods
out
iret
cmc
dec
pop
push
sub
das
dec
jb
mov
xchg
adc
push
sar
pop
rcll
fs
inc
mov
jge
jg
jno
cmp
mov
fisubs
pushf
clc
ffree
shrl
lock
xorb
inc
test
ror
ret
aaa
pop
ljmp
fwait
jae
xor
outsb
gs
xchg
das
imul
xchg
dec
out
mov
pop
incl
pop
inc
push
les
loopne
das
movsb
mull
push
add
fcomp
jmp
or
lahf
xchg
cmp
cmp
pushf
sarl
jno
std
mov
adc
sar
cmpsb
ret
dec
cltd
call
cli
xor
in
sub
out
js
jne
sbb
out
in
sub
adc
cmp
push
lds
mov
adc
mov
or
jl
cmp
adc
mov
xor
and
cmp
sarl
sub
jo
loope
dec
ja
or
addr16
or
pop
mov
adc
js
adc
lahf
jnp
add
repz
outsb
mov
testl
aam
fsubrl
xchg
jno
shrb
jns
orl
repz
popa
mov
fistpll
data16
rcr
dec
xchg
mov
and
movsb
dec
mov
mov
and
inc
mov
mov
stos
aam
mov
mov
shl
in
ja
rorl
jl
icebp
leave
cmc
int3
mov
sbb
gs
shl
add
mov
mov
inc
das
test
and
sti
inc
push
or
lock
inc
push
jns
stos
push
insb
mov
ds
pusha
inc
adc
iret
xchg
jg
and
scas
adc
insb
fidivs
out
ds
add
ret
xor
daa
push
cmpsl
popa
bound
cmpb
or
xchg
push
repz
mov
aas
cwtl
mov
sub
inc
sbb
jns
mov
int3
in
jne
fsub
dec
iret
mov
ret
cmc
popf
mov
test
data16
xchg
sub
lds
test
insl
in
sbb
and
repnz
fiaddl
clc
imul
mov
jo
push
andl
xchg
adc
sbbb
popa
mov
jno
sub
ss
movl
xor
inc
mov
xchg
sahf
sub
adc
fstl
in
sub
inc
out
mov
insb
movsl
repz
sub
lods
imul
ljmp
popa
mov
add
sub
push
and
mov
je
daa
inc
arpl
xlat
mov
pusha
iret
and
lret
or
push
xor
xchg
int
aas
xor
popa
lods
nop
out
cli
jno
pop
push
and
inc
pop
xchg
nop
je
pop
insb
jmp
lods
cmp
int
lods
pusha
negl
mov
fsts
scas
mov
pop
js
rclb
sbb
cmpsl
jne
and
cs
shlb
cmpsb
xchg
loop
incl
sbb
out
cld
mov
sbb
rorb
pop
jmp
push
mov
mov
imul
cmp
sub
fldenv
leave
adc
add
jae
arpl
mov
mov
imul
cmp
sub
frstor
leave
add
add
jb
mov
inc
test
lcall
or
cmp
sub
leave
fwait
stc
sub
jae
jae
push
cmp
push
mov
pop
jecxz
jns
push
test
cmp
clc
scas
enter
fdivs
js
push
aas
cmp
ficompl
outsl
or
scas
enter
test
cwtl
out
mov
js
push
aas
cmp
pop
sbb
call
mov
cwtl
out
mov
js
push
aas
push
or
push
sbb
call
out
clc
or
sti
mov
jp
mov
xchg
addr16
mov
sub
dec
sub
xchg
jmp
inc
loopne
cs
cmp
cs
arpl
out
mov
adc
add
cmpsl
out
and
cwtl
dec
mov
idivb
arpl
mov
pusha
loopne
js
js
aad
outsb
outsl
and
or
pop
outsl
pushf
pusha
mov
lock
add
mov
jl
repz
dec
dec
rol
pushl
nop
sbb
pusha
lahf
leave
sub
mov
add
sub
pop
mov
pop
sub
cmpsb
scas
enter
test
cwtl
out
mov
js
push
aas
cmp
pop
sbb
push
mov
lods
aam
loope
std
mov
insb
imul
and
pop
cs
sub
insl
pop
ds
lcall
xchg
mov
sbb
dec
or
xor
or
das
xchg
mov
mov
leave
fidivrl
out
mov
js
push
aas
cmp
pop
sbb
jg
scas
enter
test
cwtl
out
mov
js
push
aas
cmp
pop
sbb
jg
dec
arpl
add
and
pop
inc
lret
cli
mov
cltd
pop
fstps
xchg
jns
shufps
dec
or
xor
insb
pop
lret
jecxz
subl
cld
xor
mov
js
mov
out
pop
mov
insb
out
es
mov
rcrl
sub
push
push
cmpb
jne
dec
and
sub
popf
bound
hlt
xlat
xor
mov
jg
out
loop
xor
movsb
push
pop
xchg
xor
jg
call
and
repz
dec
push
push
pop
mov
stos
xlat
iret
ljmp
cmpsl
pop
icebp
xor
mov
shlb
icebp
cmc
arpl
add
add
lcall
sub
in
popf
mov
xchg
push
jg
int3
pop
mov
cmp
sahf
sbb
mov
xchg
int3
int
cmp
ja
fstpl
jnp
in
adc
iret
jge
pushf
idiv
outsb
test
test
and
dec
mov
cli
push
scas
push
cwtl
leave
jb
push
decb
mov
add
or
xchg
rcrb
sbb
aas
xchg
or
or
push
adc
mov
fcom
bound
jg
pop
mov
mov
imul
xchg
ja
sub
idivl
and
gs
aam
or
push
lret
mov
mov
mov
jmp
icebp
sub
cmp
mov
dec
shrb
call
jae
cs
lcall
add
sub
call
add
lods
inc
dec
add
adc
loopne
jbe
adc
insl
lahf
sub
adc
adc
std
push
fs
std
mov
imul
incl
mov
push
lds
fs
pop
adc
adc
mov
scas
hlt
test
pop
mov
ret
jae
push
sub
ret
lret
xchg
or
dec
shll
ds
lods
sub
repz
dec
mov
bound
and
call
dec
mov
adc
scas
cmp
and
adc
adc
jecxz
mov
push
das
adc
mov
pop
cs
and
cmp
lock
cmp
mov
sbb
xor
cmc
repnz
add
mov
outsb
push
ss
sarb
ja
call
es
adc
sub
out
push
or
nop
jno
or
mov
rcll
ljmp
add
push
and
daa
mov
pop
ficompl
sti
xchg
sub
jp
jbe
xchg
ret
jmp
push
in
add
fwait
mov
dec
gs
mov
or
mov
out
icebp
sbb
xchg
push
inc
cmp
sub
nop
fwait
cld
mov
sti
sahf
xor
dec
stc
test
imul
push
and
aam
inc
dec
aaa
mov
cld
inc
inc
mov
xor
fcompl
lock
push
push
cmp
xor
fildll
push
xor
cmp
fs
fsubs
aas
divb
movsl
popa
lods
loopne
and
xchg
push
or
mov
movsl
lcall
ja
mov
and
adc
jle
push
mov
iret
js
or
add
or
or
imul
mov
mov
push
dec
jbe
shlb
mov
sbb
sti
and
sub
sub
rcr
gs
xor
cli
iret
aaa
adc
sbb
jmp
stc
cmp
pop
lock
push
test
cmp
sti
pop
pop
and
mov
cmp
cmp
pushf
fimuls
mov
leave
mov
dec
das
sahf
xor
push
fstps
mov
iret
js
dec
or
cli
xchg
push
ljmp
push
or
pop
bound
mov
or
sbb
inc
cld
add
fwait
cmp
or
or
out
das
sbb
add
dec
negb
aaa
loope
dec
dec
cltd
jle
dec
and
cmpsb
std
imul
aaa
test
sub
inc
dec
xchg
bound
fbstp
and
inc
stc
lds
test
sub
sbb
pop
sahf
aaa
cld
icebp
repnz
cmp
xchg
add
push
cli
mov
jns
push
push
dec
and
xor
dec
sbb
add
movsb
jp
xlat
scas
add
cmc
add
or
fsubrs
pop
jg
mov
aaa
fwait
jl
mov
dec
mov
inc
fisttpll
pop
std
add
lret
add
test
dec
test
pop
in
xor
cmp
fsubs
sub
dec
jbe
pusha
outsl
negl
jg
stos
xchg
dec
xchg
pop
int
mov
mov
ja
adc
dec
push
jno
stc
nop
pop
rorl
and
pop
xor
aaa
in
jns
push
inc
adc
scas
shl
jecxz
sub
out
adc
cmp
addr16
iret
cmpsl
pop
mov
jnp
mov
sarl
xlat
push
adcb
in
inc
aam
mov
cmc
push
and
push
cltd
test
push
push
nop
pushf
ljmpw
es
jl
and
adc
fimuls
lcall
arpl
sbb
lds
cmp
lods
sbb
pop
lock
lock
rcrb
or
adc
fstl
shlb
push
enter
sbb
in
cmpsl
xchg
outsl
ja
mov
sti
cmc
or
lds
fisubrs
mov
dec
sbb
cmp
jmp
jns
sti
or
or
fs
or
outsb
pop
es
scas
adc
pop
rorb
mov
inc
ret
aaa
icebp
jle
mov
mov
js
sub
xor
add
lods
dec
fwait
dec
out
scas
out
lods
add
xor
mov
xchg
mov
xchg
loope
mov
xor
fcmovb
fcoms
decl
cmp
mov
iret
scas
add
add
or
lret
sti
inc
adc
cmp
mov
pop
fs
jnp
sbb
stc
nop
jae
ret
add
dec
fidivl
stos
xor
xchg
shlb
and
js
gs
std
push
cwtl
mov
loope
mov
dec
mov
in
idivb
stos
mov
adc
test
cmc
fildl
clc
lea
adc
mov
stos
jae
fistl
leave
cmpsb
aas
ja
sub
mov
icebp
imul
leave
sbbb
out
icebp
mul
pop
mov
xor
arpl
inc
jecxz
push
leave
mov
in
xor
fucom
dec
stos
addr16
cmc
into
push
lret
xor
js
mulb
push
xchg
xchg
fidivs
dec
or
sub
pop
xchg
sub
inc
ja
xor
lds
jne
sahf
imul
icebp
pop
jle
sbb
test
loop
rcrl
pop
test
or
or
mov
loopne
sub
jmp
ret
subb
add
lret
lods
jb
xor
mov
lret
adc
xor
lods
mov
ret
popa
test
xor
jns
inc
mov
add
push
in
out
imul
imul
cli
adcl
adc
stos
mov
or
fcomps
mov
xchg
sub
sub
and
xorl
push
or
std
cmc
ljmp
cmp
and
mov
das
dec
mov
repz
jg
shrb
jle
jp
push
dec
adc
push
add
mov
cmp
pop
xorb
xchg
cmpsb
arpl
das
out
sbb
insl
in
and
add
test
je
ret
sbb
sbb
push
xchg
pushf
pop
add
xchg
mov
cmpsl
xor
outsb
ljmp
push
jle
pushf
cld
aam
std
packuswb
adc
sbb
mov
dec
mov
into
cmp
or
xchg
out
push
arpl
mov
cmp
push
pop
mov
test
mov
jb
pop
xor
mov
ficompl
or
pop
cmp
cmp
adc
enter
aad
loopne
mov
adc
scas
mov
jecxz
out
imul
cmpsl
mov
notb
xchg
and
pop
ds
push
cmp
xchg
jo
and
popa
fs
sbb
adc
pop
dec
addr16
jmp
xchg
adc
ret
mov
in
call
xchg
pop
jnp
inc
jnp
and
push
scas
lock
jmp
sub
xor
icebp
adc
push
inc
jl
and
stos
pusha
cltd
push
add
mov
fmul
push
sbb
mov
sub
adc
mov
test
mov
jg
add
inc
mov
sbb
loope
es
mov
jo
inc
pop
mov
leave
sbb
in
mov
add
test
mov
clc
cmp
fwait
mov
stos
add
xchg
orl
clc
fildl
gs
sub
xchg
push
cmc
jmp
xchg
outsb
aam
in
mov
clc
mov
or
es
mov
stos
add
mov
hlt
clc
pop
mov
xchg
lods
push
je
jno
inc
movsb
xor
mov
mov
dec
pop
leave
pop
xlat
jnp
push
push
cld
xor
inc
sbb
cli
cmpsl
cld
or
test
cmpsl
mov
lret
cld
sahf
xlat
adc
lahf
xchg
fsub
mov
adc
arpl
aas
mov
jl
icebp
adc
mov
or
sub
mov
mov
or
sbb
aam
sbb
mov
push
mov
rcll
out
aad
mov
pop
inc
cmp
mov
sub
push
cmp
ja
mov
dec
cmp
into
xor
xchg
push
sbb
stc
cmp
mov
fsubs
cli
xor
cmpsl
les
fnstsw
stc
stos
or
pop
sbb
leave
mov
sub
loop
pop
cltd
loope
push
sbb
mov
push
pop
dec
shr
aam
adc
subl
jp
movzbl
push
inc
sbb
xor
pop
adc
inc
je
mov
scas
pop
lock
sbb
dec
insl
pusha
pop
imul
mov
lahf
lds
sub
sub
sub
cmp
inc
shrl
pop
jbe
loopne
mov
dec
xchg
mov
or
add
ljmp
or
mov
fmull
xchg
sarb
add
add
outsb
mov
add
jns
pop
jle
stos
outsl
mov
cmp
out
out
jmp
push
jbe
push
movsl
jl
jo
iret
sbb
mov
lods
std
out
or
mov
cmp
daa
movsl
test
or
jno
mov
push
movsb
test
jbe
sub
add
out
les
jp
loopne
or
cmc
and
cmc
pop
out
sarb
aam
push
aaa
lahf
xor
pop
cmpsb
cmp
mov
ficoms
cs
and
movsl
dec
sub
or
xor
cmp
mov
sub
sbb
mov
adc
jge
mov
mull
clc
mov
lcall
jnp
int
adc
mov
stos
ret
push
or
or
push
jmp
bound
gs
sub
pop
mov
fcom
and
sbb
mov
in
addr16
testb
sbb
iret
je
pop
fbstp
movsl
push
add
and
cmpsb
add
push
loop
jmp
inc
fadds
add
test
add
inc
add
jb
pop
or
icebp
mov
lret
push
sahf
arpl
fisubrl
inc
stc
xor
lahf
cmp
or
mov
sbb
sbb
pusha
in
or
mov
cmc
push
fimuls
cmp
aas
mov
rcll
out
test
and
xor
mov
scas
and
es
pop
mov
jae
add
cmpsl
hlt
adc
ret
mov
or
ljmp
fldl
inc
adc
dec
mov
mov
fs
xchg
mov
arpl
dec
stos
dec
dec
cli
loope
inc
pusha
adc
fwait
iret
rorb
out
loopne
lock
lock
lahf
and
add
lods
adc
sub
jecxz
xchg
notl
inc
xor
mov
mov
mov
pop
mov
add
dec
cld
into
ljmp
jb
cmpsl
fdivrl
mov
xchg
jb
jbe
aad
insb
mov
int3
mov
and
push
outsb
mov
sub
int3
in
jo
mov
imul
jmp
xor
mov
cltd
loop
outsl
jmp
in
movsb
filds
mov
ret
pusha
sbb
shll
int3
testl
push
sbb
mov
inc
out
mov
imul
or
sbb
outsb
stc
shlb
xchg
or
lret
or
jecxz
pop
imul
mov
inc
or
adc
shlb
out
push
xor
adc
int
sahf
das
push
push
js
push
into
mov
jno
add
xchg
pop
jns
lds
push
gs
jo
bound
inc
jp
lahf
daa
imul
out
sub
adc
jp
jmp
jb
ret
popf
push
test
mov
daa
pop
push
imul
pusha
xchg
out
adc
lods
into
aam
leave
sbbl
dec
pop
sbb
loopne
mov
sbb
pop
or
andl
sbb
maskmovq
notl
lock
mov
push
loopne
movsl
hlt
cmpsb
sahf
adc
std
jno
out
daa
dec
jns
pop
jnp
fsts
sbb
icebp
sub
mov
testb
xchg
cmp
shrl
dec
in
push
adc
sbb
cmp
pop
pop
adc
clc
sahf
scas
adc
repz
rcr
xor
call
adc
ss
xchg
aaa
ds
mov
orb
pushf
pop
jle
outsb
push
into
add
xor
and
sub
sti
and
push
lea
mov
mov
add
pop
scas
lcall
mov
inc
cmp
sarb
daa
daa
dec
sub
mov
pop
stc
fwait
mov
mov
xchg
jae
pop
cmp
xor
sbb
cmp
insl
iret
lahf
int3
out
pop
addr16
mov
xor
inc
fwait
arpl
cmp
daa
add
insl
jge
dec
cmpsb
and
xchg
notl
dec
cs
mov
push
mov
mov
pop
enter
sub
test
outsl
nop
mov
ljmp
rcrl
fildl
mov
rorb
mov
dec
pushf
mov
or
mov
pop
in
cli
sbb
jo
fisttps
mov
ss
xor
lods
mov
add
lods
push
jne
push
mov
sub
lock
lods
incl
cwtl
sub
cmp
test
add
ds
ljmp
mov
imul
pop
or
loop
xor
inc
and
push
call
and
mov
mov
mov
notb
fcoml
cmp
addr16
pop
lret
loop
mov
scas
mov
mov
jbe
mov
aad
enter
ljmp
std
std
popf
fistpll
cmc
mov
cmp
addb
scas
mov
adc
sub
inc
push
es
push
mov
movsb
pusha
mov
filds
cmp
imul
mov
stc
andb
les
adc
ljmp
dec
scas
xchg
cli
cmp
movsb
leave
shlb
js
loopne
insl
loopne
int3
nop
iret
inc
mov
cmpsl
mov
shr
outsl
sbb
sub
pop
pop
sub
into
jne
imul
ljmp
push
les
jbe
daa
mov
push
je
bound
imul
xor
sub
sub
cmpsl
mov
xchg
push
pop
test
mov
xchg
jo
inc
dec
push
dec
mov
lock
aam
pcmpeqw
test
xchg
int
sbb
dec
fs
or
jbe
push
fildll
add
fwait
push
aas
xchg
xor
test
cwtl
stos
add
sub
pop
mov
lock
dec
in
das
nop
sub
nop
daa
div
cld
je
loope
push
mov
xchg
leave
ja
ret
sbb
and
cltd
ss
mov
jle
dec
and
and
xor
push
adc
pop
test
dec
push
push
pusha
cs
sahf
add
jmp
xchg
jo
cld
lret
cmp
sub
mov
in
push
clc
cltd
repnz
xor
pop
rcl
ret
xor
sbb
addr16
out
lahf
jmp
xchg
in
ss
adc
sti
push
and
imul
loopne
pop
stos
into
jb
pop
repnz
xor
rolb
stos
leave
aas
adc
movsl
repz
push
adc
sbb
rorb
push
mov
jbe
or
movsb
cmc
cmp
std
mov
sti
mov
scas
mov
dec
aam
or
jnp
inc
cmpsb
shlb
int3
fsubrl
xor
dec
fcomi
aad
outsb
iret
xchg
adc
push
test
add
aam
rol
out
aam
jge
outsb
and
sub
scas
out
loop
leave
test
jb
xor
xchg
cld
iret
ficoml
add
out
fimuls
xchg
test
sbb
push
jg
lea
push
cmp
pop
pop
das
and
sub
sbb
popa
mov
sbb
push
fldl
lds
inc
push
and
fistpll
push
mov
jle
mov
jne
jbe
cmp
iret
push
in
filds
or
test
es
popa
jecxz
ljmp
repnz
lahf
sub
inc
lea
inc
fwait
xlat
and
out
add
jbe
mov
inc
dec
adc
ss
pop
or
pop
mov
and
pushf
out
pop
cmpsb
andb
int3
stos
lock
sub
rcll
fdivs
sub
jg
inc
idiv
cwtl
jae
push
pop
add
sbb
movb
add
push
daa
loopew
mov
mov
fbld
mov
sub
mov
push
enter
fnstcw
pop
cli
pop
cmp
es
mov
mov
cmp
push
jle
subl
in
test
jnp
and
mov
and
addl
or
pop
hlt
push
mov
sub
ficoml
inc
aaa
jl
lcall
icebp
repz
test
in
imul
or
les
pushf
out
inc
rcrb
push
mov
inc
jb,pn
loopne
cmp
test
cmpsb
nop
je
inc
sbb
push
mov
mov
push
imul
lahf
hlt
jo
push
out
roll
cmp
push
lcall
insl
cmp
out
or
jge
add
sub
mov
test
pop
jae
mov
dec
sbb
dec
in
jae
outsl
andl
and
xor
dec
adc
in
out
mov
into
lds
mov
or
lods
mov
pop
arpl
push
lahf
mov
aaa
inc
pushf
rorl
jb
in
in
lea
in
dec
dec
sub
push
pop
mov
scas
lcall
jnp
lret
dec
out
mov
fimuls
dec
fcmovnb
or
dec
dec
in
and
mov
xchg
aaa
das
sarb
call
gs
sahf
popf
xchg
movsb
jmp
and
mov
mov
ss
or
xchg
and
push
iretw
pop
popf
push
inc
test
fdivl
mov
and
sbb
aas
insl
sbb
push
repz
jnp
xchg
icebp
push
out
xchg
cmp
dec
mov
jns
decb
bound
test
xor
cwtl
xchg
add
cmp
push
lahf
in
leave
insb
add
stos
mov
je
cli
ljmp
clc
and
repz
pop
in
push
repnz
xor
mov
out
mov
jp
fcmovnbe
lret
pop
cmp
stos
lahf
mov
lea
and
and
insb
sbb
xchg
gs
call
rcrl
lods
enter
mov
popa
out
mov
popf
mov
xchg
pop
push
or
or
std
mov
jg
int3
loope
adc
ds
pop
push
adc
push
push
lahf
mov
xchg
xor
in
call
imul
add
test
sub
out
cmp
xchg
out
frstor
popf
mov
and
cmpsb
ja
mov
mov
pop
or
sub
cmp
and
stos
push
stos
pop
pop
xchg
ffree
adc
push
out
daa
iret
sbb
sbb
jmp
std
add
movl
mov
out
mov
js
push
aas
cmp
pop
sbb
jg
scas
enter
test
cwtl
out
mov
js
push
aas
cmp
pop
sbb
jg
das
enter
test
cwtl
out
mov
js
push
aas
cmp
pop
sbb
jg
scas
enter
test
cwtl
out
mov
js
push
dec
dec
mov
subb
pushf
jmp
in
shl
test
or
sbb
insb
sbb
cmp
fnstcw
in
cltd
cld
cltd
int3
mov
cmp
insl
jns
imul
pop
sub
dec
rcrb
loope
icebp
repnz
pop
pop
push
add
pop
push
push
jge
dec
add
xchg
lock
call
pop
testl
jge
push
loope
orb
push
inc
flds
or
sbb
inc
inc
push
push
fisubl
loopne
xchg
jns
push
dec
leave
mov
mov
and
mov
hlt
jp
cmp
sbb
sbb
jl
cmp
jo
aam
imul
cld
cltd
xor
fsubrl
xchg
in
and
pop
cmp
mov
lods
push
add
inc
mov
rorl
shrb
sbb
push
lods
push
and
adc
adc
stc
pop
xor
and
xor
jmp
test
pushf
jmp
int3
mov
cmpsb
push
jp
sub
and
jbe
jle
pop
sub
fxch
mov
sbbl
int3
sub
outsl
dec
imul
or
mov
mov
test
mov
or
imul
sbb
leave
in
popf
iret
lods
mov
mov
cmp
or
sbb
insb
sbb
cmp
fnstcw
in
cltd
cld
mov
mov
cmp
or
sbb
insb
sbb
cmp
fstps
fimull
pop
jmp
adc
mov
ror
outsl
popa
aaa
ds
call
cli
push
sub
and
mov
jp
test
jbe
push
outsb
mov
insb
out
mov
dec
dec
into
mov
cmpl
push
pusha
ds
fbstp
jmp
fnsave
cld
enter
cwtl
lods
daa
jno
cmp
dec
mov
dec
jge
push
enter
xor
in
adc
dec
aaa
add
jne
lcall
dec
pushf
leave
pop
nop
adc
sarb
mov
xchg
rcrl
xchg
inc
mov
movaps
adc
mov
push
leave
in
arpl
fcomps
rcrl
add
dec
mov
and
dec
nop
aas
add
idivl
test
ret
out
mov
fsubr
push
sbb
jecxz
stc
mulb
and
cs
shlb
sbb
cli
jno
mov
js
scas
fidivl
ljmp
or
mov
adc
mov
mov
out
lds
jmp
adc
das
xor
jl
fcmovnu
add
and
fsubs
or
cltd
xor
mov
xchg
jge
aaa
mov
out
dec
adcl
cwtl
call
xor
testl
inc
adc
dec
or
and
inc
mov
into
mov
and
in
lret
movsl
xor
pop
mov
pop
daa
fnstcw
shr
cmp
cmp
mov
sub
mov
mov
sub
mov
cmp
in
mov
add
mov
stos
iret
jae
mov
mov
subl
call
incb
inc
icebp
ljmp
movsl
xor
andl
adc
jecxz
clc
lret
xor
jle
sbb
movsl
pop
mov
mov
cmpsb
dec
cmc
mov
mov
push
lods
cmp
adc
mov
and
movsl
dec
xchg
cmc
les
xlat
jmp
das
stos
cld
insl
push
mov
sbb
xor
cmp
jbe
or
insb
mov
nop
bound
in
inc
mov
rcrb
into
out
cld
lret
inc
mov
and
xchg
mov
cmp
mov
sahf
pop
ds
dec
dec
sub
jnp
dec
rolb
add
test
js
outsb
pop
je
inc
ss
and
mov
dec
jmp
shlb
xchg
inc
gs
pop
adc
dec
pop
nop
sbb
push
movsb
push
mov
fsubr
lea
push
mov
xchg
lret
push
pop
cwtl
arpl
movsl
shlb
jl
int
loopne
xchg
cmp
fisubs
push
pushl
insb
pop
rcrl
or
sbb
test
pop
inc
sbb
mov
cld
lods
test
cltd
in
stc
adcl
repnz
mov
sub
push
mov
mov
jmp
or
faddl
jge
mov
push
icebp
xchg
bswap
je
mov
outsb
sbb
push
dec
imul
xor
imul
push
cmp
inc
xlat
in
arpl
cmp
adc
xor
dec
jl
and
decb
daa
outsb
jmp
pop
rolb
aad
xchg
aad
add
jp
push
push
add
rcrl
jae
icebp
pop
cli
cmpsb
and
pop
test
roll
test
movsbl
jge
jb
dec
aas
push
cmpsl
inc
sbb
pop
push
inc
sarl
and
or
pop
and
pmulhuw
and
insb
push
hlt
lea
cmp
call
push
pop
insl
mov
sbbb
mov
dec
subl
cmp
xorb
inc
iret
insl
shll
inc
jb
arpl
lods
daa
in
rolb
fcomps
mov
or
in
xlat
sub
out
loop
and
movsl
repnz
imul
movsb
clc
loop
jo
jmp
lret
fcmovnb
jne
icebp
mov
mov
xor
sub
jae
outsl
cs
daa
in
stc
daa
pop
cmp
ds
or
bound
sbb
and
and
push
aam
in
or
mov
adc
jbe
test
xor
ds
into
shrl
in
or
aaa
insb
ja
repnz
stos
test
nop
mov
mov
jmp
dec
cwtl
sahf
or
dec
gs
fsubr
jb
pop
fistpl
and
out
pop
fxtract
pushf
xor
xor
sub
add
xor
movsl
js
stos
or
mov
sub
or
jae
insb
push
je
xchg
mov
icebp
nop
lahf
lret
ret
jmp
xor
pushf
dec
mov
outsl
pop
in
xor
aam
sarb
or
mov
mov
ljmp
into
scas
cltd
fnstenv
push
inc
loopne
and
and
ret
mov
outsl
push
arpl
adc
repz
cmp
push
jg,pn
movb
xor
repz
sbb
inc
mov
inc
mov
dec
mov
push
jecxz
fmull
inc
addl
pop
mov
pop
push
jmp
fsubs
mov
test
pop
xchg
iret
dec
dec
jae
mov
psrlw
test
test
xchg
cwtl
mov
scas
add
scas
lret
jnp
fidivrl
dec
std
or
add
hlt
loopne
popa
fisttpll
push
imul
notrack
jg
testl
cmc
adc
ficompl
mov
xchg
mov
mov
dec
mov
and
inc
js
xchg
scas
pop
adc
add
cmc
mov
repnz
jbe
lahf
xor
les
imul
int3
xchg
mov
sub
rcrb
mov
imul
bound
cltd
or
mov
xchg
repz
mov
pop
cmpl
lods
test
mov
xor
jmp
push
in
je
pop
jl
les
loope
jb
pop
repz
xor
rcl
scas
xchg
mov
data16
jbe
mov
scas
pushf
popf
out
fisubs
sbb
adc
ljmp
jae
mov
push
or
push
pusha
cld
incl
or
stos
cmp
push
negb
xor
xor
mov
jne
pop
rclb
aad
sbbl
xchg
xor
mov
mov
les
xchg
enter
cmp
int3
std
movsb
adc
dec
xchg
sarl
out
lods
push
lcall
or
push
sub
mov
jbe
mov
mov
leave
enter
mov
and
loop
loopne
cli
out
nop
pop
loope
xchg
ret
cmp
mov
inc
pushf
and
push
int
clc
jnp
test
xchg
adc
imul
mov
cs
xchg
dec
addr16
inc
lock
pop
pusha
adc
fistpll
divl
mov
cld
mov
xchg
or
sti
mov
ds
loopne
or
inc
call
inc
cmpsl
out
push
lahf
mov
and
jnp
ja
test
mov
jecxz
sbb
push
push
addb
cmpl
fldenv
nop
pusha
test
jl
decl
cmp
addb
test
pop
aam
xor
js
scas
and
flds
cmp
lcall
mov
ret
and
adc
cmp
mov
inc
ror
test
loope
sbb
add
cmpsb
pop
cmp
in
and
in
rorb
cmp
jl
lret
adc
dec
push
mov
cmp
dec
or
scas
adc
in
out
decb
lds
mov
mov
dec
mov
addr16
mov
mov
lcall
test
shll
movb
mov
mov
and
cmp
and
jp
dec
mov
sub
cmp
jg
dec
mov
mov
addr16
adc
xor
test
adc
decl
nop
addb
and
pop
cmp
inc
jge
mov
mov
mov
ss
xlat
cmpsb
mov
scas
and
js
jo
scas
lea
push
mov
movsb
cmp
sub
sub
pop
xor
dec
hlt
xor
xchg
jle
jecxz
in
dec
hlt
into
add
movsl
ret
mov
cmc
popl
xchg
push
adc
push
mov
add
dec
arpl
sub
loope
xor
pop
mov
lcall
adc
pop
int
daa
mov
out
mov
push
sbb
jecxz
cmp
andb
loopne
ffreep
sbb
jg
ss
popf
xchg
add
clc
xchg
xchg
out
test
pop
loope
or
mov
jnp
cmp
ret
rorl
fists
arpl
push
pusha
loopne
jno
dec
lea
or
ja
ret
push
and
cmp
mov
ljmp
shl
mov
jno
fs
lahf
stc
out
bound
or
add
add
cmpsl
outsl
lret
add
pushf
pushf
loopne
cmpsb
ljmp
pop
push
mov
imull
mov
inc
nop
xchg
sbb
rorb
fcoms
and
dec
and
push
xor
cmp
dec
test
aam
add
aad
sbb
insb
in
lods
divb
ss
call
and
push
jae
imul
bound
jb
inc
stc
ljmp
sub
or
pop
dec
addr16
scas
nop
popa
fisubs
sti
xchg
cmp
pop
std
scas
mov
mov
jg
push
js
lods
arpl
or
or
inc
test
ret
loop
fldt
and
and
mov
sbb
jne,pn
sub
push
sub
lds
stc
stc
leave
or
imul
inc
outsb
inc
mov
mov
test
xchg
mov
daa
fwait
inc
fiaddl
dec
ret
test
aam
mov
cmp
jne
sbb
shl
test
dec
lock
and
and
lods
cmpsb
inc
ret
sub
xor
cmp
sbb
dec
jae
xchg
stos
fidivrl
xchg
aaa
repz
lret
jnp
cmp
or
jp
movb
movsb
hlt
xor
mov
stos
fldenv
adc
and
push
cltd
cli
pop
movsl
shlb
sbb
sahf
pop
mov
add
hlt
jbe
mov
cs
fwait
push
dec
push
xchg
mov
add
imul
addr16
rol
pop
push
adc
dec
test
adc
and
icebp
bt
inc
push
adc
add
mov
lods
rorl
push
mov
sbb
push
andl
es
mov
push
in
aam
int
in
fwait
xor
xchg
pop
xchg
sbb
xor
lds
cmp
jnp
clc
aam
int3
and
and
and
mov
adc
insl
push
mov
dec
js
pusha
add
das
out
fimuls
push
nop
mov
jp
jp
shlb
cwtl
inc
and
xchg
in
inc
stos
and
mov
in
add
outsb
je
int3
orb
mov
inc
and
cli
outsb
ret
mov
mov
jne
and
shll
sahf
xor
stos
or
cmp
arpl
insl
cwtl
pop
or
xor
mov
mov
dec
fs
mov
cmc
shll
push
mov
and
int3
in
jge
dec
loopne
stc
into
popf
test
and
jne
mov
aam
pop
ret
pop
scas
dec
in
sarl
pop
es
les
add
push
jmp
jmp
test
idiv
ljmp
loop
push
scas
push
not
test
and
sbb
inc
inc
scas
lret
adc
or
sbb
roll
mov
push
loop
insl
xor
mov
ds
sub
sub
and
jmp
testb
cmp
outsb
xchg
xor
adc
cwtl
inc
push
and
cltd
mov
stos
jmp
or
in
ret
test
out
pop
scas
in
sub
lret
mov
sbb
xchg
sbb
aaa
mov
call
pop
mov
int
jnp
insl
out
dec
jge
pushf
leave
fcoms
inc
dec
cld
sub
adc
xor
and
lahf
icebp
syscall
xchg
sub
jae
sub
jl
and
ret
test
push
pop
shl
ret
mov
rorl
enter
or
inc
aam
sbb
nop
and
aam
mov
mov
pop
xchg
xchg
std
cs
rcll
pop
into
mov
mov
xor
out
mov
xor
add
enter
fdivp
xor
mov
jecxz
sti
adc
and
stc
xchg
testb
lock
int
add
push
sub
ficoml
dec
movsb
stos
mov
cld
jmp
xchg
cmp
cmpsb
stos
inc
mov
movsb
and
jb
aam
fnstenv
add
inc
add
or
push
fwait
cwtl
and
loope
getsec
pop
sbb
xlat
or
roll
and
aas
and
scas
sbb
sub
arpl
andb
push
sbb
sub
mov
xor
cmpsl
mov
aas
sbb
test
xor
rcll
in
movsl
or
and
or
and
jnp
scas
test
sbb
pop
or
cltd
lods
cld
push
mov
and
inc
inc
jg
and
lods
mov
lahf
das
ret
je
xchg
adc
mov
mov
ds
andl
add
xor
xchg
shrb
sbb
fwait
jg
sahf
stos
dec
cmpsl
push
jle
mov
test
dec
es
push
and
loope
jae
test
test
adc
lahf
xchg
gs
xor
xor
cmpb
jecxz
adc
cmpl
icebp
in
and
mov
sti
adc
pop
ja
clc
add
xor
jle
cwtl
jne
into
das
popf
mov
enter
imul
sbb
ja
sbb
and
jo
xor
data16
sarl
mov
lods
loope
fildl
xchg
in
xor
push
mov
mov
xlat
push
mov
aas
nop
and
out
dec
psubsb
pop
mov
fistl
inc
outsb
dec
int
dec
cs
pop
xchg
mov
jne
cmp
nop
add
adc
cli
add
or
popa
arpl
addr16
stos
add
push
fldl
mov
int3
aas
cmpsl
inc
ss
xchg
and
push
jp
lahf
push
mov
test
mov
loop
es
adc
push
mov
shlb
mov
fcmovnb
ljmp
add
test
dec
cmpsl
das
jle
inc
popfw
mov
loop
add
xor
push
mov
pop
clc
mov
mov
inc
xor
xor
jbe
cmc
push
mov
and
nop
out
mov
ror
mov
cmp
and
shll
push
xchg
shlb
cmp
nop
push
ds
mov
mov
pop
adc
sub
mull
jge
in
or
lods
sub
and
sbb
lcall
xor
cmp
dec
cmp
data16
push
and
jmp
xchg
ret
xlat
xchg
adc
out
inc
dec
pop
gs
das
mov
jo
mov
mov
push
mov
pop
sbb
sub
dec
mov
idivb
dec
cwtl
inc
pop
xchg
sub
arpl
in
mov
ret
ljmp
add
cmp
mov
ss
lods
testl
xchg
dec
pop
insb
add
pop
into
test
jecxz
shlb
sarl
mov
cmp
stos
mov
pop
mov
pusha
add
mov
sbb
into
xor
mov
mov
pop
cltd
jl
pusha
push
pop
imul
loope
pushl
adc
sub
mov
adc
jns
mov
sbb
lar
sbb
daa
ret
add
mov
jle
sbb
insb
test
nop
mov
ss
movsb
add
xchg
mov
imul
jmp
movsb
ret
mov
imul
xor
mov
ret
push
aas
cmpsl
cmp
adc
and
ss
call
mov
out
inc
shll
mov
movsb
sub
mov
lods
mov
das
in
sarb
push
fimull
mov
xchg
inc
bnd
es
mov
push
dec
cmp
adc
push
fstps
xor
pop
rcr
mov
lock
sub
pushaw
or
fiadds
xchg
stos
xorl
insl
shlb
inc
push
cmc
repnz
dec
out
aad
bnd
stc
push
aad
push
dec
push
mov
arpl
inc
jge
aaa
pop
jle
bound
and
mov
dec
arpl
push
fbstp
fldt
repnz
ljmp
loopne
out
clc
dec
and
push
xor
mov
mov
mov
bound
sub
fsubr
hlt
call
imulb
es
add
pusha
add
out
push
loopne
fisubrl
addr16
inc
test
mov
clc
xchg
sbb
or
push
cmp
dec
sbb
sub
add
in
adcb
rcrl
arpl
in
insb
jp
add
dec
out
addr16
aas
mov
jl
fwait
pop
add
cmp
mov
push
push
mov
or
add
dec
push
outsl
stos
in
js
or
dec
cltd
pop
je
insl
cli
jne
mov
push
icebp
gs
mov
sub
inc
outsl
sub
scas
stc
int3
jno
fs
jno
outsb
es
out
hlt
add
cmp
leave
imul
pop
outsb
jae
xor
test
jno
sbbl
jge
pop
pop
test
dec
stos
iret
jl
dec
cmp
repz
push
or
cwtl
push
cmp
xchg
xchg
fsubl
int
mov
mov
movl
jne
test
xor
pop
shrl
pop
jae
dec
mov
jge
or
aas
and
movsb
lods
mov
and
cli
push
addl
into
lods
test
and
mov
inc
sub
sbb
lods
sub
mov
dec
xchg
jge
out
jl
mov
clc
inc
js
movsl
push
or
rclb
out
push
jecxz
mov
stos
leave
sbb
fildll
insl
dec
mov
dec
int3
push
fcompl
bswap
push
ficoms
pop
xchg
and
mov
es
gs
inc
jmp
aas
sarl
pop
mov
or
repz
cmpb
bound
xor
fidivrs
xchg
loop
jns
mov
sub
aaa
mov
adc
push
lods
adc
and
outsl
xchg
fiadds
cmpsb
push
jg
insl
int
pop
fstl
in
scas
push
int3
subb
rcl
pop
or
cmpsb
cmp
inc
pop
and
dec
bound
adc
dec
stos
xor
or
sbbl
inc
addl
in
dec
pop
add
or
cmp
mov
and
lea
pushf
jmp
std
inc
mov
test
and
mov
add
sti
notl
cmpsb
dec
imul
adc
popa
push
dec
fimull
int3
lock
mov
leave
jle
dec
imul
icebp
enter
das
xor
incb
addl
cmpsb
repnz
loope
call
outsl
sarl
or
out
lock
dec
les
sub
leave
and
push
enter
enter
test
leave
add
cli
out
inc
enter
cmp
xchg
bswap
mov
push
daa
adc
lock
imulb
inc
in
mov
adc
sahf
cmc
imul
cmp
xor
cmp
xchg
sub
aas
xor
inc
into
cmpsb
dec
xlat
cmp
leave
and
ja
jmp
xor
negl
xchg
add
loop
nop
mov
movsl
add
cmpsb
adc
inc
push
cmpl
das
inc
jno
mov
ret
push
and
add
sbb
idivb
jmp
jl
inc
fisttpl
scas
cmp
loop
jne
mov
jmp
jl
sarb
scas
into
gs
leave
lret
stc
pushf
jmp
int3
mov
cmp
or
sbb
insb
sbb
cmp
fnstcw
in
cltd
cld
mov
mov
cmp
or
sbb
insb
sbb
cmp
jl
cld
mov
mov
cmp
cld
jns
insl
insb
sbb
cmp
loopne
std
mov
mov
mov
ret
jecxz
jns
push
sbb
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
jbe
inc
cwtl
push
or
xor
sbb
out
imull
sbb
or
pop
xchg
dec
mov
inc
cwtl
push
mov
clc
ss
fcoms
mov
sbb
or
mov
xchg
xchg
dec
data16
inc
xor
les
aam
ss
shl
out
dec
stos
inc
jnp
das
flds
repz
dec
cmp
cmp
out
iret
mov
adc
ficoml
dec
loop
repz
sbb
std
mov
fyl2xp1
ss
cwtl
jmp
sbb
sub
pop
jns
stos
rcrl
lds
mov
and
lea
inc
out
mov
test
pop
lret
push
data16
mov
add
and
imul
js
sub
notb
cltd
lods
xchg
inc
cmpsb
lret
test
lods
test
push
enter
cmp
stos
or
sub
dec
xchg
mov
js
adc
in
les
cwtl
push
xor
cmp
inc
cmp
adc
jns
xchg
ret
pop
push
int3
stos
mov
push
andb
ss
out
imul
or
inc
cmpsb
push
mov
xchg
es
ljmp
mov
mov
lods
out
xchg
insl
insb
scas
popa
cmpsl
pop
mov
in
shrb
add
adc
and
cmp
jle
inc
movsb
sbbl
les
outsl
cmpsl
sub
and
cmp
and
out
jbe
sub
cmp
push
ss
out
imulb
sbb
or
pop
xchg
dec
mov
inc
cwtl
push
mov
clc
ss
out
imulb
sbb
or
pop
xchg
dec
mov
fstpt
jns
fsubs
lret
in
xchg
adcl
out
mov
push
int3
popf
mov
lret
pop
clc
lds
mov
fildll
scas
push
dec
adc
rcr
ljmp
inc
push
out
test
xor
add
or
js
xchg
fxch
lahf
data16
test
inc
in
push
repnz
repnz
cs
jo
jmp
stos
pop
cmp
mov
in
fists
sub
testl
push
mov
jnp
insl
imul
push
jp
fs
fsubl
in
sub
xchg
jmp
lea
sbb
mov
or
adc
pop
adc
mov
add
lret
aaa
cmpsb
out
sub
inc
or
leave
movsl
ret
ds
push
popa
lods
cmp
xor
jae
cmp
pop
sbb
das
mov
sub
xchg
xor
in
test
add
lea
or
or
mov
ret
loopne
xchg
iret
filds
loopne
cmp
pop
loope
pushf
mov
xchg
dec
jg
sub
arpl
mov
ljmp
push
jle
sarb
scas
sub
loopne
and
push
nop
int3
adc
push
push
push
pusha
ljmp
inc
fisubrs
mov
shl
mov
cmp
cmp
sbb
movsw
sub
icebp
pop
lods
nop
fucomi
xchg
jge
sbb
ret
and
les
fists
stc
adc
arpl
pop
pop
and
and
pop
lods
mov
cmp
sub
mov
mov
push
fs
push
push
pop
sub
dec
lea
adc
and
pushf
sahf
mov
jecxz
push
sarb
xor
mov
mov
in
cwtl
cmp
arpl
pop
gs
jne
inc
pusha
lds
pushf
insb
sti
mov
pop
xor
jae
sub
sub
jne
pop
sbb
mov
pop
aas
ret
push
xchg
cmp
or
jnp
daa
popa
mov
test
insl
sub
push
aaa
fdivs
enter
scas
pop
arpl
pop
push
sub
inc
movsl
or
jb
aas
or
sarb
xchg
add
mov
xchg
adc
and
xor
int3
test
jae
incl
insb
dec
repz
jbe
cwtl
scas
test
sub
cli
leave
sarb
je
push
push
rclb
repnz
ja
bound
imul
and
or
sbb
or
jno
fwait
aad
jbe
jg
roll
mov
jge
push
mov
adc
sub
pop
add
dec
mov
outsl
sbb
push
cmp
add
sub
mov
iret
sbb
rclb
repz
pop
mov
push
lds
xchg
push
push
push
fwait
and
push
std
mov
testl
pusha
pop
and
pusha
out
mov
mov
idiv
nop
movsb
push
mov
xchg
das
test
lret
test
repz
test
and
inc
mov
push
adc
arpl
sbb
sahf
adc
in
sub
clc
movsb
loop
out
nop
js
aad
and
cmpsb
and
dec
jno
xor
jl
ds
push
ljmp
dec
fildl
cmp
in
cltd
dec
rcrl
cmc
rclb
daa
out
sub
in
lods
xor
popf
push
test
jae
mov
rolb
movsb
dec
cld
xchg
sub
lret
sub
inc
jecxz
xor
dec
dec
mov
push
push
push
mov
inc
fwait
ret
adc
mov
sbb
jg
mull
es
xchg
xor
push
outsl
cmp
fucom
sbb
test
lret
sub
sar
pop
lahf
mov
cmpsl
rclb
pop
dec
jp
mov
jae
cmp
mov
xor
adc
cmp
add
jae
cmp
adc
xor
dec
cmpsb
enter
push
cltd
xor
mov
stos
sub
dec
xorl
mov
ss
mov
xorl
jecxz
mov
test
adc
jl
cmpsl
out
gs
pop
out
les
popf
mov
enter
dec
std
pop
sub
daa
pusha
loopne
fdiv
adc
mov
and
lret
add
fimull
or
in
push
in
push
ret
xchg
mov
loop
jmp
scas
lcall
and
mov
cltd
adc
pop
xchg
jl
mov
add
out
adcb
iret
sub
bound
jne
iret
sti
pop
stc
adc
cld
inc
lret
fnstenv
jecxz
mov
adc
fists
sub
xchg
mov
cmpsb
lret
or
xchg
ljmp
dec
aad
je
in
std
cltd
shll
test
jmp
int
ljmp
pop
cmpsl
loope
js
imul
add
fbld
sub
cmc
cmp
aaa
xor
cmp
icebp
inc
arpl
cli
jmp
dec
push
push
push
notb
mov
js
sub
mov
sub
ss
fdivrp
adc
loopnew
fdivrs
xchg
aas
mov
in
repnz
cmp
icebp
mov
mov
scas
inc
add
inc
enter
clc
ja
cmpsb
xor
iret
mov
aaa
fiadds
or
mov
test
xchg
nop
les
or
mov
jne
mov
sbb
dec
mov
cmp
pop
enter
std
mov
jle
jns
test
pop
sub
xor
movsb
xor
sub
jmp
cmp
clc
and
daa
dec
or
and
out
imul
hlt
sbbl
rorl
push
outsl
in
inc
dec
stos
adc
rcr
mov
mov
cmpsb
and
mov
xchg
sbb
mov
pop
adc
dec
and
dec
inc
mov
pop
arpl
pop
sbb
mul
loope
sbb
mov
sbb
and
stos
mov
repz
inc
jbe
lret
xchg
addl
jecxz
mov
fcoml
ror
pop
adc
cmpsb
lcall
aam
xor
das
and
les
push
xlat
xchg
mov
xchg
clc
dec
mov
jmp
adc
sub
jecxz
lcall
add
cmp
sub
call
sahf
xchg
mov
int
mov
gs
divb
xchg
mov
push
aaa
pop
mov
aam
cmc
push
add
outsl
inc
mov
adc
rorb
popf
mov
lcall
ret
mov
dec
add
push
outsl
imul
inc
or
mov
jecxz
add
addr16
stos
mov
stos
push
std
inc
dec
xchg
xchg
pop
cs
lock
xchg
addb
sub
aam
add
and
and
mov
lea
ja
icebp
cmpsb
sahf
mov
test
cs
fcmovnbe
daa
jle
leave
xchg
lret
xor
sbb
pop
fists
es
loope
mov
push
and
jbe
xlat
fiaddl
bswap
pop
mov
xchg
movsl
les
mov
lock
adcb
xchg
mov
faddl
dec
xor
mov
pop
leave
insl
pop
jae
jbe
push
inc
and
sub
rclb
imul
test
xchg
mov
sub
mov
in
ja
js
adc
lock
push
dec
adc
adc
gs
lock
jecxz
popf
dec
dec
mov
into
rclb
inc
push
push
add
js
outsl
mov
mov
int
arpl
push
test
dec
xchg
fisubl
pop
xchg
adc
dec
inc
out
mov
cmp
sub
sbb
test
pop
into
inc
pushf
push
lods
in
cwtl
sub
movsb
dec
add
loope
mov
nop
es
addr16
adcl
pop
inc
aaa
test
jno
enter
cmpsl
call
movsl
xor
mov
das
subl
dec
in
sub
jl
fsubl
add
pusha
in
nop
pop
push
adc
xor
popa
mov
or
ja
push
inc
fdivr
xor
test
push
movsb
push
out
pop
inc
jge
push
cmp
lods
shll
add
shrl
ret
and
ss
adc
ffreep
stc
scas
aad
xchg
xchg
orl
mov
add
aad
scas
adc
mov
sub
push
ljmp
push
jae
cmp
out
cltd
add
push
cmp
cltd
and
out
mov
repz
pop
out
into
psrld
sub
or
scas
push
pop
jns
pop
push
inc
sbb
lret
mov
inc
add
adc
aam
stos
xchg
les
mov
adc
fcmovnu
adc
pop
push
mov
cli
or
stc
fists
or
mov
and
dec
mov
stos
push
js
pop
popf
push
dec
add
pop
loope
xchg
mov
or
jle
shll
imul
cld
fucomip
insl
mov
xchg
xchg
xlat
push
mov
lret
xchg
xor
outsb
lods
repnz
adc
cmpsl
das
push
shr
fs
test
xchg
fcoml
mov
mov
sub
adc
pop
mov
rcrb
mov
pushf
arpl
push
cltd
xor
cs
push
push
nop
jl
jo
cld
xor
clc
lods
jmp
roll
mov
push
sbb
sbb
ljmp
pushf
dec
sub
data16
sarb
ds
mov
int
js
mov
add
xchg
sbb
push
mov
lods
push
js
insb
outsb
fisubs
shrb
xor
nop
rcll
sbb
cs
pop
lret
fsubl
cmp
adc
inc
enter
cmpsb
sbb
xchg
push
rcrb
or
sbb
icebp
push
mov
cmp
add
push
jge
jecxz
int
push
mov
je
push
cmpsl
test
dec
push
aad
in
test
pop
bound
in
ss
inc
ljmp
push
xor
adc
cli
nop
scas
adc
sub
jmp
xchg
bound
jbe
dec
adc
cltd
adc
lcall
add
push
fnstcw
popf
jbe
bnd
sbb
push
test
xchg
add
je
je
rcl
jg
inc
popf
arpl
adc
pop
hlt
icebp
repnz
push
xor
and
jo
jg
pop
std
js
mov
ss
mov
inc
mov
gs
mov
and
xor
pushf
js
aaa
xchg
pusha
adc
stos
and
in
lret
movsb
fwait
pop
out
mov
sbb
rcr
outsb
lods
mov
fs
mov
stos
sub
neg
das
stos
pop
pop
add
sub
pop
bound
repz
inc
push
rcrb
xor
scas
js
test
int3
test
push
sti
inc
adc
pop
aam
test
cld
sub
push
adc
loop
sbb
fs
orb
mov
pop
lds
mov
mov
xchg
lret
jle
shlb
aam
and
pop
iret
sbb
addr16
inc
inc
mov
pop
push
imul
xlat
mov
push
fnstcw
addl
ret
jo
repz
cld
mov
dec
shl
xchg
insl
and
inc
mov
dec
cmp
or
rcll
imul
nop
and
icebp
sti
and
add
fnstenv
push
xor
push
rorl
mov
loop
or
stos
mov
mov
mov
add
mov
mov
lods
mov
xor
fs
cmp
sahf
push
sbb
fcomps
mov
sbb
sub
leave
push
lds
sbb
fs
fyl2xp1
andb
add
loope
shr
mov
int3
pop
sti
lahf
sbb
xor
mov
inc
in
ffree
mov
ja
cli
ljmp
jnp
loope
mov
pop
lea
push
into
mov
gs
push
cld
outsb
mov
xor
sub
cmpsl
lahf
jle
push
sub
lods
shll
dec
movsb
xor
and
mov
inc
fsubs
jg
and
xchg
loop
xor
rol
and
mov
pusha
arpl
pop
lahf
dec
iret
cmp
push
outsb
enter
inc
inc
pop
sbb
dec
jno
dec
leave
mov
mov
push
pop
js
cmpsb
jo
sbb
repz
andl
mov
fldenv
pusha
out
jb
std
filds
pushf
pop
sub
in
addl
daa
popf
pop
push
mov
sbb
or
mov
xchg
pop
in
ss
fcmovnbe
es
mov
stos
jbe
push
push
in
mov
and
fsubl
pop
inc
xchg
fdivr
mov
outsb
xchg
scas
aad
push
xchg
lret
out
jns
ja
or
repz
mov
ss
cmp
or
mov
bound
inc
fdivs
les
mov
stos
movsl
mov
adc
ljmp
xchg
xchg
es
aaa
push
push
imul
xchg
inc
mov
and
jnp
sbb
sti
inc
in
adc
mov
and
dec
das
cwtl
pop
sbb
lods
mov
cli
jb
add
mov
sbb
mov
loopne
cmpsb
mov
jecxz
lret
in
mov
lcall
push
mov
cli
insl
mull
mov
enter
cld
gs
or
fs
loop
cmc
dec
pop
pop
dec
outsb
iret
inc
mov
mov
hlt
dec
mov
cld
shr
pusha
out
lods
jnp
cmp
out
insl
mov
int3
shll
fmuls
sti
cmp
mov
pop
cmp
clc
mov
push
movsl
xchg
rcrl
cmp
popa
mov
clc
out
xor
mov
push
shl
xchg
adcl
cwtl
xor
sbb
or
mov
in
gs
mov
popa
sar
push
xor
push
cmp
aam
inc
hlt
lcall
aad
fwait
loop,pt
out
aaa
test
and
les
aaa
jecxz
adc
loopne
out
mov
not
fisubl
push
scas
cmp
xor
jg
imul
es
push
mov
adc
inc
jg
pop
ljmp
dec
loopne
in
mov
sbb
mov
movsl
pop
mov
push
xor
loopne
sbb
sbb
sarb
xor
jne
push
cmp
adc
stc
push
std
jne
stos
xor
leave
clc
clc
dec
mov
cmpsl
mov
mov
push
xor
insb
and
clc
rorb
loope
cmp
aam
mov
pop
mov
test
or
arpl
stos
push
push
xor
repnz
and
movsb
xorb
xchg
pusha
enter
sub
cli
ret
es
pop
mov
pop
jae
mov
push
movsl
loope
sti
ss
test
mov
fs
aas
cmp
cs
sbb
pop
xchg
idivl
sbb
push
outsb
hlt
add
popf
mov
push
outsl
mov
and
jecxz
fimuls
and
shlb
insl
js
push
mov
int3
out
or
pushf
add
dec
mov
or
push
pusha
sbb
add
addr16
in
lds
fimull
cmp
test
mov
inc
int
in
push
rcrb
sub
jmp
xor
add
jns
popf
xchg
xor
mov
fs
shl
std
pusha
mov
ljmp
jp
imul
insl
faddp
push
pop
mov
jecxz
repnz
xor
mov
adc
stos
cmp
xchg
arpl
adc
imul
push
mov
push
pop
and
popa
pcmpeqw
add
lret
fmuls
mov
sbb
jg
stos
or
mov
xor
into
pop
mov
mov
outsl
dec
pop
sub
mov
push
clc
cmp
xor
xor
sub
jl
and
xchg
mov
jns
add
sub
cmpxchg
pop
mov
dec
test
pop
mov
lcall
frstor
cmp
repz
out
bound
int
or
sub
xor
mov
mov
xor
lds
push
mov
and
lret
lods
imul
pop
mov
lods
push
jecxz
inc
pop
cmp
adc
fstpl
sbb
adc
mov
inc
cmpsb
ret
mov
pop
js
push
inc
sti
dec
icebp
pop
pop
leave
imul
addr16
mov
nop
xlat
in
es
sarl
mov
lea
adc
mov
dec
jns
lods
sbb
push
cwtl
scas
test
aas
xorl
push
out
int
inc
mov
jns
inc
dec
aam
cmp
jge
xchg
adc
fisubrs
dec
stc
clc
stos
sbb
ret
mov
loopne
and
mov
pop
aad
or
insl
int3
xchg
xor
rolb
fxch
push
mov
mov
movsb
jle
add
jg
ds
dec
sub
push
inc
popa
xlat
stos
shl
cmc
rcl
jae
inc
jl
fstpl
and
push
jne
lock
leave
dec
aam
xchg
cwtl
cmp
stos
pop
xchg
call
dec
mov
jmp
xchg
icebp
xchg
pop
imul
push
pop
mov
dec
cmp
std
icebp
jmpw
push
or
mov
cmp
roll
fmull
aas
int
sbb
lahf
cmp
mov
loope
test
cs
imul
dec
add
ja
roll
push
ja
stc
jge
in
mov
xchg
lods
arpl
mov
stc
inc
push
jno
dec
aaa
shrl
cmp
dec
mov
pushf
cs
or
mov
inc
shl
lods
push
jle
loopne
mov
or
cltd
xchg
push
mov
inc
out
lds
lods
stos
xor
fcoms
dec
xchg
jecxz
inc
or
sbbb
je
aam
jp
pusha
ds
mov
inc
cmp
idivb
xchg
jp
adcl
dec
pop
xor
sti
pop
scas
jmp
lret
cld
push
and
pop
loopne
mov
xchg
lret
icebp
popf
and
stos
andb
dec
lds
jno
and
leave
sbb
movsl
mov
shrb
aam
adc
mov
jno
sbb
lahf
cmpb
loopne
xchg
data16
and
pop
imul
aas
cmp
rcrl
daa
in
in
pop
dec
push
inc
inc
ret
pop
dec
shl
rcll
and
mov
pop
sub
add
push
mov
adc
sbb
add
rep
jb
push
push
pop
popa
in
mov
mov
rorl
mov
fsubr
xor
popf
mov
dec
and
pusha
adcb
mov
mov
shll
and
pop
lret
rclb
inc
mov
mov
jl
nop
sub
in
add
stc
int3
xchg
or
lods
xor
popa
and
and
inc
or
fnstenv
cmc
xchg
and
in
mov
imul
inc
rcrb
stc
pop
test
in
sub
push
call
inc
mov
movsb
adc
daa
jns
fcompl
cmc
andl
ret
in
lea
call
pushf
hlt
jecxz
lea
cmp
loopne
fs
cmc
lahf
gs
adcl
idivb
dec
mov
pop
jmp
je
or
lret
mov
fwait
test
popf
scas
cmp
lds
jno
fsubrp
xor
rolb
sar
ret
or
xchg
in
inc
iret
loop
pop
out
popf
mov
push
leave
mov
dec
mov
mov
pop
stc
insl
pop
in
cld
adc
rcrl
mov
and
xchg
fisubrs
mov
iret
dec
sub
lds
popf
dec
stos
jge
xchg
dec
push
add
xchg
clc
or
mov
cmp
mov
mov
sbb
out
dec
ficomps
sarb
xor
movaps
mov
in
stos
pop
pushf
shrb
cmpsb
loopne
out
mov
gs
iret
cmp
pop
repz
pop
mov
loopne
sbb
cmp
fsubs
fisubs
mov
lock
stos
cmp
add
jle
xchg
inc
mov
sub
jno
or
adc
or
mov
stos
pop
dec
inc
dec
push
gs
nop
out
jle
pop
out
rcl
sub
cltd
icebp
adc
addl
push
mul
add
popf
add
dec
sahf
aas
or
shrb
push
cmp
jp
fadds
and
shrb
xchg
mov
pop
imul
aad
xlat
add
daa
and
arpl
xchg
cmp
push
mov
fcomip
cmp
loopne
xor
add
fwait
std
mov
push
hlt
jp
neg
pusha
sarl
leave
les
jo
mov
lds
mov
clc
ss
out
imulb
sbb
or
pop
xchg
dec
mov
inc
cwtl
push
mov
clc
ss
out
imulb
sbb
or
pop
xchg
dec
mov
loopne
mov
fcoms
sub
sbb
or
js
dec
mov
inc
cwtl
push
mov
clc
ss
out
testb
lock
xchg
mulb
int
std
in
hlt
addb
mov
cli
dec
pop
jg
dec
je
add
sub
aam
in
hlt
popf
test
rcll
dec
push
sbb
je
popa
or
cmp
aam
in
cmc
hlt
test
mov
inc
inc
ja
add
sbb
inc
inc
dec
dec
inc
inc
inc
lods
mov
movsb
mov
adcl
cmpsl
push
mov
mov
mov
cmpl
xor
les
std
mov
jns
xchg
jb
dec
sub
ds
push
mov
sbbb
dec
rcrl
adc
ss
xor
leave
mov
jg
ja
inc
mov
sub
sti
dec
sub
dec
ffree
sbb
test
push
imul
pop
hlt
jge
les
sbb
jnp
cmc
mov
inc
push
push
or
mov
aad
cmp
pop
pusha
cld
and
push
pop
pop
xchg
adcb
mov
adc
sub
aam
in
hlt
lea
mov
inc
push
push
gs
add
and
jb
les
mov
ret
loopne
mov
xor
dec
getsec
add
jo
push
pop
push
dec
push
out
xchg
jmp
repz
cmp
sbb
js
jle
dec
inc
sub
xchg
mov
xchg
mov
inc
dec
push
jge
insl
je
add
adc
and
xor
int
std
in
hlt
popf
test
mov
inc
dec
push
jge
insl
je
add
adc
and
xor
les
cld
movsb
mov
pop
add
cmc
push
jae
ds
adcl
mov
xor
pop
jns
jp
cmp
lods
sahf
push
dec
in
mov
mov
sahf
gs
pop
or
jae
sbb
sub
xor
mov
push
arpl
pop
pop
ljmp
movsb
aam
mov
mov
dec
adc
jmp
or
cmpsb
jle
inc
push
dec
outsb
inc
daa
dec
lods
cmp
fimull
lea
imul
fstenv
jg
movl
js
or
vmwrite
loop
aad
sbb
lock
aas
mulb
pop
test
sar
jnp
scas
pop
js
pop
out
popl
add
jno
fstpl
jbe
les
xor
nop
shlb
push
jp
jl
test
jg
and
rcrl
add
and
sbb
push
call
enter
mov
enter
push
and
sub
dec
xchg
mov
cltd
das
stc
hlt
and
or
inc
xlat
repz
sbb
mov
mov
pop
sahf
lods
xchg
mov
and
mov
fwait
sti
inc
push
pop
cmp
sbb
hlt
fisttpll
inc
push
outsb
xchg
inc
cld
leave
hlt
mov
sub
inc
dec
add
iret
inc
and
push
dec
xchg
jl
pop
jg
decb
inc
adc
sub
sub
add
sahf
clc
pop
push
aam
divb
cmp
xor
xor
mov
or
ret
sbb
or
fs
test
xchg
adc
and
or
and
mov
cmp
or
push
jl
inc
stc
mov
push
arpl
call
xor
mov
jae
push
jne
mov
mov
and
jg
fistpll
sub
or
test
mov
jg
lock
add
outsb
cld
xchg
mov
mov
xchg
push
cwtl
jp
mov
gs
xchg
test
clc
cld
in
sub
lds
mov
nop
cmpsb
imul
jl
and
push
adc
push
ds
inc
inc
test
scas
sbb
sahf
ljmp
jmp
nop
dec
in
rcrl
jne
shl
je
jb
and
dec
insl
jns
jae
hlt
imul
fisttpl
sahf
xchg
adc
repz
mov
pop
mov
pop
or
dec
jle
sti
push
sub
pop
fmul
aam
mov
clc
test
push
xchg
and
push
push
cmc
shufps
shlb
sub
cmp
mov
jmp
pop
in
add
adc
cli
push
aam
jmp
cmpb
pop
sub
and
xchg
stc
cmp
jle
xchg
mov
push
xchg
sbb
arpl
cmp
jns
daa
pop
pusha
dec
or
mov
insl
cmp
nop
lret
lret
and
std
es
ret
jnp
out
add
sub
insb
rclb
push
xor
ss
stc
ffree
push
loop
jg
bound
push
out
mov
jmp
sub
das
dec
or
in
in
inc
jnp
ffree
add
jnp
in
xor
insb
mov
push
ljmp
and
adc
sub
sub
std
xor
ljmp
int3
insb
gs
xor
popa
cmc
add
cmp
in
sub
clc
loopne
dec
xor
mov
pop
mov
and
out
dec
mov
fistps
nop
bound
push
lods
pop
or
nop
mov
inc
adc
addr16
xor
addr16
jge
xor
les
pop
jae
sbb
push
mov
rclb
ds
push
or
or
fidivl
fsubs
mov
negl
fiaddl
or
in
jnp
pop
clc
mov
jno
dec
fistl
test
inc
mov
sbb
fcom
fs
xor
xor
sub
push
mov
cli
jg
pusha
inc
loopne
add
add
xor
iret
repnz
loope
mov
dec
ror
imul
cmc
dec
sti
js
in
sub
imul
sub
popa
push
pop
and
cltd
xor
iret
and
or
pushf
mov
out
addr16
mov
sub
sub
int3
xchg
in
testl
movsb
pusha
inc
fists
loope
clc
sarb
sub
cs
ljmp
dec
lahf
addr16
movsb
scas
dec
mov
push
out
rcrb
scas
insb
imul
push
mov
leave
sub
add
cmpb
pop
pushf
int3
sbb
xchg
jmp
leave
dec
xchg
mov
lahf
mov
mov
pop
jl
mov
ja
fs
cmpsb
jecxz
int3
cmp
jbe
push
pop
cs
leave
push
fimull
aad
sarb
jnp
xor
push
and
cs
int
cmc
mov
stos
and
xor
dec
xchg
cs
add
push
jns
stc
push
mov
stos
xchg
or
inc
sbb
sbb
fdivrl
dec
pop
sbb
mov
data16
sub
ret
subb
inc
inc
icebp
xor
rolw
push
div
xor
out
push
inc
inc
mov
pop
icebp
pop
sub
jno
pop
jo
ljmp
mov
icebp
loopne
mov
outsl
les
ljmp
mov
rcl
lock
orl
testl
xor
ss
cwtl
sbb
ljmp
popa
adc
cmpsl
std
xchg
loope
cmp
fists
lds
test
pop
insb
push
imul
push
cmp
inc
fdivr
mov
pop
inc
mov
mov
popf
fistpl
aam
mov
icebp
pusha
mov
aaa
adc
jl
jns
hlt
cmpsl
std
push
dec
pop
addr16
mov
xchg
push
add
xchg
outsl
movsb
pop
mov
leave
mov
int3
pushl
loop
test
inc
movsl
rcrb
into
iret
sbb
scas
mov
fstp
dec
xchg
xor
sbb
loop
sahf
sbbl
sbb
xchg
add
ss
orb
lods
mov
addr16
push
or
jp
or
mulb
adc
enter
shll
xor
cmpsl
stos
sub
outsl
mov
xor
rcrl
xchg
hlt
sub
adc
xor
jne
es
xchg
outsb
push
push
das
outsl
add
mov
test
push
or
call
cmovg
cld
mov
xor
roll
pop
je
mov
cmpsb
or
xor
inc
dec
stos
adc
sub
dec
fwait
lods
std
stos
lea
or
std
int
cld
mov
inc
jns
test
sub
pop
xor
pop
test
dec
jl
jle
cs
mov
dec
lods
jge
stos
sbb
testl
push
dec
cli
xorl
pushf
pushl
dec
arpl
fwait
mov
hlt
mov
jno
sbb
or
dec
xor
lret
inc
aam
gs
aaa
negl
cmc
push
xor
push
jnp
ficomps
movsl
and
pop
mov
inc
inc
push
imul
adc
jbe
xchg
sbb
stos
add
repnz
and
xchg
loope
add
mov
push
inc
and
outsb
lods
jge
enter
mov
icebp
dec
inc
notl
lahf
fisubl
pop
fcoms
xchg
arpl
sub
les
in
mov
push
sub
jno
pop
sar
shll
sbb
fidivrl
shrb
int3
mov
mov
xchg
mov
cmpsb
insb
cwtl
popf
shrd
lods
inc
mov
and
or
ja
sbb
xchg
mov
or
scas
xor
mov
sbb
stos
xchg
push
je
pop
inc
pusha
cmp
pop
xor
adc
jg
inc
call
ret
cmp
and
out
dec
std
mov
xor
pop
cmc
test
adc
stos
mov
pop
xor
jno
pop
or
ret
or
and
cmpsl
adc
push
jecxz
dec
rorb
nop
stc
mov
lea
popf
sub
dec
sbb
sbb
fs
repnz
xor
lea
test
pop
fistpl
cld
movsl
or
inc
test
mov
aad
inc
testl
jns
cs
faddl
lods
repnz
add
out
adc
aam
push
pop
cmc
jns
cmp
loopne
insb
xchg
fidivrl
sub
dec
test
mov
insb
mov
cmp
subl
gs
call
fdivrs
lret
sub
dec
gs
fiadds
inc
sbb
into
xor
fwait
bound
push
popa
jns
jnp
cli
leave
lret
push
mov
movsb
out
or
mov
scas
pop
mov
aad
jne
cld
mov
add
push
pop
pop
aad
cmp
out
aas
jp
dec
xchg
push
insb
push
and
pop
leave
stc
pop
mov
sub
icebp
rclb
cs
jge
test
mov
out
sbbb
sti
addr16
push
and
arpl
dec
xor
xchg
add
fs
sub
sub
pop
mov
data16
dec
fidivl
push
cmpsl
movsb
loop
pop
sti
inc
xor
imul
dec
dec
icebp
movsb
xchg
shrl
popf
icebp
or
push
call
push
mov
dec
dec
push
out
sub
dec
imul
push
jnp
aas
mov
push
cmp
fwait
push
cmpsl
lret
xchg
or
mov
dec
mov
and
shrl
pushf
insl
sbb
add
test
mov
add
leave
jmp
cmp
mov
out
or
out
xorl
sbb
push
loope
or
jns
mov
and
pop
aas
imul
xor
dec
enter
out
inc
mov
jne
enter
jle
iret
gs
fdivl
add
pop
test
xor
leave
pop
mov
rep
sub
pop
pop
mov
rol
aaa
sub
mov
outsl
jecxz
lds
cmpsb
inc
xor
sbb
scas
mov
insb
loop
das
inc
ret
pushf
sbb
mov
and
es
lock
sub
sub
sub
lods
call
and
cmp
jb
aas
imul
loop
hlt
or
sbb
insl
or
stc
jmp
mov
ss
int
out
roll
shrb
mov
xchg
adc
inc
jbe
dec
cwtl
pop
jo
bound
jnp
sub
fsubrl
icebp
outsb
aas
pop
ror
outsl
push
jecxz
movsb
aam
inc
jbe
push
shll
in
mov
or
mov
inc
test
jmp
xor
bound
stos
out
dec
jbe
and
inc
cmp
xor
ljmp
mov
sub
stos
pop
icebp
lock
test
jbe
mov
jmp
jb
andl
adc
and
sbb
push
lcall
scas
je
pop
and
mov
js
jmp
das
add
stc
filds
lcall
mov
sahf
or
lods
shlb
stos
sub
movsb
mov
add
popf
mov
jle
mov
lcall
and
sbb
inc
addl
negb
das
in
push
xchg
hlt
movsl
mov
adc
test
inc
outsb
mov
mov
sub
inc
mov
cmc
inc
mov
fwait
pop
notb
pop
insb
xchg
popf
jo
adc
ret
adc
roll
or
push
jb
push
pop
dec
pop
in
nop
mov
push
push
movsb
mov
cmc
bound
scas
movsl
fsts
std
hlt
xchg
sarb
pop
push
stos
movsb
inc
adc
test
xchg
jmp
push
inc
cltd
pop
or
dec
mov
jne
fs
push
das
or
jno
add
int
add
cmp
sbb
mov
mov
xor
lds
stos
in
aam
movsb
pusha
lret
xlat
cltd
ljmp
cmpsb
pop
mov
mov
pop
icebp
cli
lods
sbb
jl
scas
inc
insb
mov
xchg
jmp
inc
in
mov
mov
fucomp
imulb
ljmp
xlat
jo
adc
stos
xchg
leave
pop
inc
fsts
fldl
fisttpll
mov
std
aam
arpl
cld
inc
insb
mov
mov
and
loopne
js
add
pop
std
incl
and
fwait
xor
into
repnz
xchg
push
les
in
movsb
mov
adc
inc
loop
push
int3
or
mov
daa
inc
and
jl
cltd
nop
dec
cmpsb
in
cmpsb
cltd
test
jnp
inc
sbb
sub
mov
outsl
das
sub
mov
jl
repnz
dec
push
stos
cmp
test
adc
mov
lods
insb
stos
scas
int3
ret
cmp
outsl
fldl
shll
sbb
pop
jns
lcall
push
mov
pop
int
or
jae
dec
stc
cmp
insl
mov
std
inc
and
jecxz
mov
sub
out
bound
outsl
mov
push
repz
mov
push
add
dec
jg
cmp
push
inc
fisttpl
add
data16
cmpsl
daa
popf
or
fsubrl
mov
mov
rcrb
pop
xor
clc
lods
and
jecxz
out
dec
scas
shrb
lcall
mov
jge
decb
cs
fs
imul
call
sbb
sub
adcb
dec
mov
shlb
std
push
lahf
fnstsw
cli
cmp
imul
adc
int3
loop
filds
inc
xor
enter
out
inc
pop
sbb
fsts
cmpb
pop
cli
jecxz
xor
cltd
lret
add
push
cmp
stc
sub
rcrl
iret
xchg
mov
dec
and
jnp
out
sub
xlat
xchg
cwtl
aam
pusha
xchg
add
ljmp
push
jecxz
sub
push
fwait
mov
aaa
imul
dec
mov
pusha
xor
stos
sub
jmp
and
lahf
cli
rcll
lret
fidivs
xchg
popa
call
inc
js
and
xchg
inc
add
out
cmp
int
movsl
dec
xor
inc
enter
ja
sti
dec
mov
pop
push
outsb
inc
ret
dec
mov
push
sub
push
dec
adc
jns
pop
imull
cli
sbb
push
mov
jge
mov
mov
shll
in
pop
repnz
sbbb
or
mov
mov
push
or
aad
xor
cld
cltd
dec
paddd
enter
fwait
out
orb
or
xchg
jge
fnsave
mov
push
clc
outsb
mov
sub
jno
sbb
adc
int3
test
mov
xor
mov
cmp
in
inc
inc
lret
ljmp
fcoml
or
nop
mov
jbe
dec
jnp
add
aas
repnz
sbb
arpl
or
stos
jnp
fnsave
pop
jns
popa
out
mov
add
aaa
and
fsubrl
dec
push
out
mov
neg
out
and
movsl
and
jb
sub
cmp
push
arpl
lret
imul
push
or
popf
ss
inc
mov
jle
cltd
shl
aas
outsl
sub
fcos
fdivl
lahf
fwait
inc
jmp
scas
movsl
xchg
fcomp
xlat
cmpsl
pusha
pop
lock
sahf
lea
jmp
jecxz
or
loop
xchg
cmpsb
inc
sti
cmp
mov
push
jl
enter
xchg
cld
rcr
xchg
jnp
sahf
xorl
xchg
cld
test
or
mov
ja
push
mov
ss
mov
jno
icebp
mov
pop
jp
dec
movb
in
mov
aas
out
icebp
popa
pop
xchg
scas
cld
adc
addr16
sbb
call
jno
cwtl
outsb
in
movsl
cmpsl
mov
lcall
lcall
loop
and
imul
xor
push
jno
loope
das
mov
shll
gs
lods
das
scas
jmp
xor
dec
adc
and
jecxz
mov
jno
xlat
lret
cmp
sbb
in
xchg
les
lahf
enter
mov
iret
daa
mov
jno
sbb
inc
fiadds
out
popf
aaa
lret
push
jle
mov
je
imul
fisttpl
enter
mov
out
andb
negl
into
inc
stos
jne
lods
mov
and
rcrb
mov
jl
pushf
in
cld
psubd
cmp
xchg
and
adc
jmp
insl
fimuls
clc
mov
fiadds
or
push
push
push
repnz
fnstenv
stc
xor
and
call
in
orl
outsb
test
push
leave
jae
pop
inc
lea
add
dec
js
or
cmp
scas
lret
cmp
cmp
push
pop
loop
fidivl
xchg
fidivs
sahf
fidivrl
rclb
xchg
push
add
jne
cs
mov
push
mov
fstp
test
mov
sbb
pop
xor
sbb
inc
mov
mov
dec
and
cmpsl
std
testb
mov
adc
add
movsl
lret
push
out
or
jbe
loop
ret
jne
outsb
cmpsl
jbe
test
xor
sbb
jmp
push
fiadds
mov
fcmove
popa
arpl
cmp
xchg
xor
mov
cwtl
lcall
jb
fadd
int3
pop
inc
das
xor
inc
or
lss
inc
push
lock
aad
loope
jne
add
adc
jne
dec
movb
mov
lret
divl
lea
test
fs
test
cltd
pop
imul
mov
xchg
add
stc
cmp
mov
sti
push
cmpsb
leave
leave
inc
pushf
leave
lods
stos
std
shlb
add
das
mov
fadd
addr16
les
pop
notb
and
mov
pop
filds
mov
outsb
icebp
push
shlb
push
adc
loope
flds
arpl
inc
sbb
dec
jle
xor
insb
cmp
pop
sbb
dec
jp
pushf
adc
dec
outsb
add
push
out
call
dec
fisttpl
push
rol
and
pop
leave
xorb
test
in
mov
lcall
xchg
pop
mov
jg
inc
lret
mov
ret
jno
cmp
sbb
cli
xor
pop
dec
fcomip
mov
sub
cli
pushl
cwtl
mov
inc
or
aad
out
dec
or
push
add
ljmp
dec
stos
iret
lods
add
pop
lahf
inc
js
push
or
sub
or
mov
jmp
outsb
or
rcl
pop
sbb
in
mov
pop
test
xchg
sub
dec
xor
push
add
xchg
add
into
scas
or
inc
xchg
adc
and
lcall
or
pusha
cmp
int3
or
imul
test
frstor
data16
add
cld
fsubl
imul
xchg
dec
repz
lcall
cmc
adc
push
mov
aaa
mov
push
xor
adc
sar
jns
sub
fidivrl
nop
inc
push
pop
cltd
shll
mov
cmpsl
rclb
into
mov
mov
stc
hlt
xchg
inc
or
into
nop
jb
and
adc
in
mov
pusha
cmp
mov
and
addr16
pushl
pop
ret
rcll
mov
popa
int
mov
movsb
sub
js
adc
sub
lea
sarl
pop
pushf
ret
enter
jmp
fistpl
enter
adc
inc
neg
push
adc
cmpsl
jle
mov
cmp
pop
rorb
and
mov
jns
movsl
jmp
dec
push
push
jne
xorl
shlb
sbb
enterw
cwtl
imul
push
xchg
inc
inc
mov
int
fidivrs
int3
xor
pop
movsb
movsb
pop
mov
push
cmp
subb
ss
mov
xorw
inc
test
rorb
mov
mov
mov
push
xchg
mov
fisubl
rcrb
roll
aaa
test
lcall
dec
inc
and
inc
jmp
adcb
insb
fcompl
mov
out
iret
adc
gs
xlat
jmp
xchg
fs
and
push
xor
mov
call
xor
mov
add
sbb
xor
push
repnz
sbb
lret
dec
ss
cmc
dec
push
ror
xchg
aaa
ljmp
mov
and
add
orl
pop
pop
sahf
push
pop
add
in
pop
pop
fninit
or
ja
data16
cmp
gs
imul
mov
xor
pop
ficompl
ja
mov
leavew
pop
test
sub
mov
aas
fcomip
jmp
push
aam
sub
pmulhuw
hlt
popf
test
mov
inc
dec
push
jge
insl
je
add
adc
and
xor
int
std
in
hlt
popf
test
mov
inc
dec
push
jge
insl
je
add
adc
and
xor
int
std
in
hlt
popf
test
mov
inc
dec
push
jns
insl
je
add
adc
and
xor
stc
aam
in
hlt
popf
test
je
inc
mov
xlat
fs
add
test
ret
lret
xor
nop
sti
test
punpcklwd
xlat
addb
add
add
or
pop
add
mov
add
sbb
jns
xchg
add
add
push
add
loop
pushf
add
jno
and
sbb
xor
add
add
test
add
push
add
pop
add
add
stos
add
and
add
jp
xchg
xor
add
lcall
add
add
add
add
test
add
roll
add
add
add
imul
test
or
and
stos
add
add
add
add
add
cmp
addl
and
xchg
add
add
add
add
cmp
sub
lods
add
add
add
add
add
add
add
iret
add
add
or
add
add
add
or
or
lret
add
add
add
scas
add
push
xor
jno
push
add
or
daa
add
add
lret
add
add
push
add
adc
add
add
add
add
add
mov
add
sub
xor
ret
add
add
mov
sbb
jno
jg
outsl
add
pop
add
test
add
add
add
add
pop
add
imul
cmp
es
add
add
add
dec
add
add
pop
add
add
pop
add
add
fwait
add
add
sbb
cltd
add
roll
add
stos
add
add
xor
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
and
xor
push
inc
add
add
add
add
add
pop
add
jg
push
add
add
add
add
add
add
roll
add
mov
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
stos
add
add
ret
add
add
add
add
add
push
stos
add
add
add
and
pop
add
mov
inc
add
jg
pop
add
add
add
xor
xor
pop
add
ret
add
add
add
add
add
sahf
add
add
bound
push
add
add
and
add
add
add
add
add
add
aam
add
add
add
xor
and
aam
dec
add
add
add
add
add
or
mov
add
dec
add
add
add
add
add
inc
add
push
add
add
movsb
add
add
or
ret
add
add
add
test
add
dec
add
add
or
test
add
ret
add
stos
add
add
dec
add
push
mov
add
add
stos
add
add
add
add
add
push
cmp
add
add
jle
inc
xchg
andb
mov
xor
sub
sbb
and
sbb
mov
xor
add
cmc
inc
fnstenv
movb
fsubs
fwait
bound
or
rcrl
icebp
cmp
sar
jne
mov
adc
push
mov
mov
inc
vpshaw
and
add
test
jns
cmpsb
test
fdiv
fsts
cmc
push
iret
jp
xsha1
cmpsb
int
int3
add
xchg
mov
inc
mov
dec
xlat
dec
aam
ret
mulb
add
movsl
int3
push
repnz
aas
out
push
xchg
push
subl
cmp
dec
and
orb
or
das
sub
jb
repz
or
dec
sub
sbbl
ret
mov
pop
pop
out
or
push
xchg
pop
fadd
jg
das
push
imull
jno
mov
enter
pop
mov
xchg
scas
jnp
decl
in
loope
je
lea
aaa
adc
lea
fucom
push
in
mov
mov
xor
jb
mov
add
les
lds
and
fs
mov
in
inc
mov
cld
xchg
cltd
jmp
xchg
ret
or
les
faddl
pop
mov
xchg
int
imul
push
mov
pushf
aam
inc
sbb
xchg
push
lock
adc
imul
jns
push
adc
sar
push
mov
sbb
jecxz
pop
jb
jp
cli
cmp
out
pop
dec
xchg
das
jg
movsb
or
mov
or
dec
cmp
adc
popa
jo
sbb
addr16
inc
cmp
add
push
pop
xor
sarl
cmp
inc
f2xm1
push
dec
rcll
xor
xchg
shll
xlat
or
dec
imul
xrelease
mov
inc
mov
addr16
out
aas
cmpsb
adc
push
cld
push
in
mov
rcpps
push
sub
cli
pop
pop
cmpsl
lahf
mov
call
insb
xor
rorb
xor
pop
icebp
pushl
mov
mov
mov
test
xchg
leave
fnsave
int3
xchg
imul
dec
cmpsl
jl
test
xor
mov
jo
es
outsl
aas
fiaddl
or
mov
fcomp
push
sub
xchg
jno
sbb
out
xor
inc
inc
and
inc
cmp
push
sbb
js
insb
sbb
dec
sbb
out
jne
pop
js
jo
xchg
js
inc
cmp
shrl
or
mov
adc
xor
push
pop
or
inc
cmp
sub
pop
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
