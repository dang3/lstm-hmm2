call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
outsb
inc
out
push
fisubs
jbe
dec
mov
push
ljmp
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fbld
jbe
push
scas
push
sahf
mov
outsb
aas
out
idivb
ljmp
incb
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
cmc
aas
xchg
sub
ds
xor
sahf
jbe
mov
lods
mov
mov
xor
mov
jmp
stos
cmp
xchg
adc
sti
cmp
mov
sub
repz
xchg
ret
xchg
pop
push
cmpsb
mul
jnp
out
pop
rorl
jo
push
and
adc
nop
ds
or
out
xchg
popf
and
cmp
out
jb
dec
and
mov
dec
mov
outsb
cmp
push
fiadds
add
add
adc
lea
push
mov
push
push
cmp
lcall
inc
xchg
fwait
cmpsb
icebp
dec
push
ret
out
fistl
ss
pop
data16
dec
jae
xlat
mov
jecxz
xchg
lds
cmpsb
bt
data16
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
fisttps
data16
lret
jg
pusha
jmp
push
mov
sub
jae
jp
mov
add
pop
sahf
dec
notb
lea
scas
es
xchg
jne
pop
xchg
dec
lock
mov
rcrb
adc
adc
sub
ss
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
jmp
push
mov
in
test
aaa
dec
frstor
jns
add
sbb
addb
mull
pop
lahf
dec
push
or
das
rclb
dec
shll
fdivrs
outsb
std
add
push
add
add
scas
and
mov
xor
iret
dec
lods
not
mov
shl
ja
insb
or
movsb
jno
xor
mov
imul
push
xor
xchg
pop
insl
cmp
insl
xchg
into
fldcw
fisubrs
mov
mov
data16
cmp
icebp
leave
lods
inc
adc
int3
push
sbb
fwait
push
loope
pop
mov
divb
je
mov
pop
cmp
dec
inc
dec
dec
push
sbb
fistps
pop
mov
xchg
inc
mov
pop
notb
sahf
outsl
repz
out
or
int3
fcmove
cltd
add
js
shlb
add
jle
test
int
adc
add
test
scas
aad
or
sahf
pop
and
xchg
push
adc
in
sarb
mov
test
xor
int3
aad
test
inc
insb
dec
sub
cmc
js
push
dec
mov
dec
int
in
adc
movsb
sub
gs
mov
push
scas
jge
push
inc
adc
pop
xchg
fdivs
mov
xchg
rep
mov
cmp
ja
cmp
sub
hlt
ficoms
pop
je
bnd
sbb
push
aaa
ljmp
loopne
neg
add
push
pushf
or
das
push
test
lea
mov
clc
sub
inc
imul
inc
nop
dec
mov
nop
sbb
add
rcrb
cmp
mov
pushf
mov
mov
inc
mov
cltd
repnz
pop
aaa
hlt
xchg
gs
xchg
push
pop
sub
fsubs
pextrw
test
scas
fbstp
in
test
sbb
sub
out
sub
adc
pop
or
mov
mov
mov
and
dec
adc
aam
lods
cmpsl
add
mov
fistps
adc
das
enter
dec
call
xchg
add
int
leave
dec
xchg
jne
roll
jns
dec
push
pusha
add
jns
arpl
mov
xchg
jle
xlat
adc
mov
xorl
rcrb
sbb
outsb
les
std
lret
xor
cmp
test
mull
ret
mov
int3
push
mov
mov
scas
std
ffreep
test
xor
mov
xor
stos
mov
mov
xor
fmulp
sub
movsb
adc
sub
and
jecxz
xchg
pusha
and
sahf
gs
sbb
or
cltd
bound
fisubs
mov
rorb
lds
xchg
inc
call
lahf
mov
xlat
fwait
out
call
add
jp
aam
mov
inc
inc
es
and
push
pop
push
push
sbb
xchg
insb
repnz
add
lea
adc
xor
imul
jmp
pop
mov
cld
dec
cwtl
fsubl
lret
and
dec
mov
xor
push
divb
or
shrl
mov
mov
ds
ja
push
fcoml
imul
xchg
dec
mov
jle
mov
js
adc
mov
mov
ret
lock
out
cmp
mov
push
push
push
nop
in
jle
out
shr
jl
cmpsb
or
clc
mov
xchg
fsubrp
jnp
dec
sbb
hlt
lock
jmp
dec
xchg
add
scas
fists
xchg
mov
jnp
sbb
pop
dec
mov
xchg
fisubs
sbb
fcoml
cmp
sbb
lods
xorb
aam
mov
mov
mov
outsb
sahf
cmp
mov
cmp
repz
mov
jl
imul
in
pop
xor
sbb
sub
sub
xor
aam
push
in
xchg
fdivl
mov
aaa
adc
fldl
movsl
cli
pop
cmpsl
std
shll
jmp
mov
cmp
pop
mov
mov
jno
lea
jecxz
add
inc
pop
mov
sub
rorl
add
adc
cmp
xor
dec
jg
mov
inc
adc
lock
pop
mov
inc
lock
cmp
sbb
or
leave
std
cmp
jl
or
pop
js
popa
cmc
push
push
clc
aas
sbb
lea
mov
fsts
sub
cmp
repz
aad
icebp
cli
sbb
xchg
or
sub
inc
lret
add
sbb
push
mov
in
inc
dec
cwtl
stos
subb
ds
mov
daa
xlat
out
movsb
stos
cltd
stos
fdivp
fs
or
rolb
add
xchg
sub
cwtl
pop
mov
or
xchg
xor
push
and
fstl
jecxz
pop
clc
out
stos
popa
mov
mov
xor
inc
out
and
test
nop
push
stos
cli
mov
sub
rorb
mov
mulb
xchg
add
push
es
pop
xchg
fisubs
xchg
xchg
shlb
and
cmp
call
mov
xchg
imul
rcr
cs
insl
add
jmp
test
and
sub
dec
mulb
inc
xor
andl
stc
js
jl
mov
sbb
rcl
mov
mov
out
ss
and
add
fsubrl
and
loopne
cmp
add
adc
repz
xor
aam
jle
sub
icebp
fwait
cld
push
lcall
fisttpl
mov
mov
mov
sbb
lcall
nop
add
xor
ret
add
std
mov
sbb
or
mov
mov
push
inc
pop
outsl
inc
jbe
cmp
mov
lcall
pop
leave
dec
xlat
inc
out
push
std
fsts
mov
jno
out
into
in
dec
fwait
inc
push
test
nop
or
inc
jl
push
cwtl
jp
mov
add
cmp
stc
jecxz
scas
lcall
mov
inc
lods
pusha
stos
and
push
mov
outsl
add
movsl
outsb
and
daa
rclb
jecxz
enter
fldl2t
lea
or
mov
and
int
add
cmp
or
aam
xlat
inc
decb
add
out
fwait
divb
or
ja
add
negb
insb
xchg
and
mov
negb
rorb
in
mov
mov
popf
cmp
inc
lea
ss
adc
push
fsts
mov
xchg
xor
iret
cmpl
xchg
mov
leave
xchg
std
push
adc
test
aas
jg
dec
inc
lret
add
jno
iret
fcompl
push
or
lret
jb
add
pop
jne
icebp
adc
inc
inc
movsb
sbb
sti
sti
pop
dec
mov
sbb
mov
lock
fs
push
xor
mov
into
out
je
lds
mov
xchg
es
dec
lcall
push
cmpsb
mov
cmp
into
es
jg
in
mov
fidivs
popf
aam
mov
sbb
sbb
int3
and
rorl
mov
imul
arpl
fbstp
xor
mov
idivl
pushf
es
or
mov
repnz
push
cmpsb
adcl
enter
pop
lods
cmp
icebp
call
push
push
test
add
sti
add
iret
rcll
sub
mov
mov
shll
stos
inc
test
push
add
mov
les
lahf
mov
mov
jb
push
lds
xchg
xchg
addr16
dec
fnstsw
push
movl
enter
sub
inc
leave
sbb
xchg
nop
out
lods
pop
out
or
mov
xchg
icebp
mov
dec
mov
mov
mov
push
lods
dec
push
cli
test
push
orb
cld
aaa
imul
dec
lahf
dec
repz
push
mov
mov
push
mov
icebp
xlat
push
add
xchg
cmpsl
popl
std
xchg
fsubs
lods
popa
cmp
out
mov
sbb
mov
xchg
mov
mov
loope
adcb
bound
mov
mov
insl
or
outsb
sbb
iret
test
push
es
sub
nop
loopne
maskmovq
xchg
in
dec
fnstcw
adc
push
shlb
mov
jecxz
ja
push
sub
pop
in
movsb
adc
dec
mov
sub
cwtl
cmp
mov
xchg
loopne
mov
addr16
push
fwait
dec
add
dec
into
and
push
les
mov
sub
jp
sub
cmp
sarb
int
xchg
dec
pop
push
or
and
mov
orb
icebp
xchg
sub
push
or
sbb
mov
fs
sub
and
sub
fs
xchg
and
adc
pusha
leave
xchg
xchg
adc
mov
mov
mov
push
test
mov
jae
mov
xor
nop
dec
stos
mov
pop
aas
cmpl
adc
nop
sub
and
inc
outsb
fsts
insl
into
in
pop
cmp
pop
ret
cmp
sti
pushf
mov
mov
xor
inc
fsqrt
cmp
dec
popa
call
mov
mov
cmp
mov
out
ret
sbb
into
cmpsl
out
mov
sbb
sbb
dec
call
sub
les
push
xor
in
or
stc
in
lea
inc
inc
fstl
xlat
add
inc
pop
and
and
dec
stc
rorl
or
or
dec
add
xchg
cmp
lret
loope
inc
out
sbbl
push
or
jecxz
cmc
pushf
int
mov
mov
fnstenv
xor
lcall
nop
mov
mov
ret
push
shl
lock
test
push
les
mov
out
dec
sbb
sub
dec
imul
xor
dec
mov
jns
andl
and
das
xor
dec
adc
in
and
stos
pop
push
scas
sti
fwait
add
adc
xchg
inc
in
sub
daa
add
ret
ja
jns
and
add
sbb
stos
jmp
adc
sub
mov
and
loopne
or
notb
cld
xchg
cmp
jns
add
movsb
mov
mov
imul
mov
xor
push
shl
add
inc
stos
ficoml
ret
les
jnp
aam
add
xor
jle
or
cmp
mov
aam
push
in
outsl
test
fmuls
fs
pushf
inc
adc
shrb
jns
sbb
testl
or
inc
lahf
mov
jo
jno
aas
xchg
fildl
jno
movsb
pop
ret
insb
scas
call
push
mov
jns
ficoml
jge
iret
cltd
fwait
repnz
pusha
push
sbb
mov
mov
cmpsl
pop
jbe
or
mov
imul
sub
xor
aam
pushf
jnp
int3
mov
enter
sub
notl
mov
test
arpl
cld
xor
xchg
fmull
icebp
imul
sbb
pop
jmp
mov
sub
jns
es
std
mov
jo
fstpt
test
inc
push
cmpsl
mov
pop
rclb
and
xor
add
es
or
sti
mov
pop
pop
stc
and
pushf
xor
sub
and
dec
fs
jne
push
xchg
jp
mov
jbe
dec
out
dec
pop
ds
push
lock
mov
xchg
lds
arpl
sahf
popf
mov
pop
mov
decl
sub
lcall
add
iret
mov
icebp
ret
sbb
int
mov
ja
jmp
push
in
mov
cmc
mov
push
adcb
cmp
cli
cmpsl
lea
or
inc
loope
mov
xchg
push
fs
add
jle
mov
lret
out
xchg
sbb
mov
inc
mov
nop
inc
scas
sub
sbb
cmp
and
xlat
dec
dec
ret
pop
adc
xor
lahf
pushf
fwait
repnz
pop
das
add
inc
mov
jle
dec
hlt
cwtl
loope
int3
fstps
adc
fs
cltd
push
cmp
mov
notl
pop
test
shll
jns
addb
mov
addr16
xor
icebp
mov
dec
stc
or
outsl
mov
aad
adc
mov
jl
shrl
jae
xchg
and
mov
mov
push
add
mov
jge
cmpb
fisubl
or
out
and
sahf
insb
and
aam
add
add
aam
mov
sub
xchg
imul
fistl
sarl
dec
pop
rclb
xorl
shr
sahf
pop
mov
sbbb
shl
rep
popf
jl
lcall
lret
icebp
daa
push
inc
cmpsb
or
fcompl
jmp
je
leave
mov
ffree
sub
cmp
out
mov
sbb
dec
pop
push
ljmp
out
rclb
jg
loopne
jmp
shll
into
lock
daa
ja
adc
fnstcw
iret
idiv
cmp
mov
push
adc
je
mov
jbe
fbstp
inc
push
cmp
movsb
lods
push
roll
insb
dec
mov
addb
mov
mov
lds
cmp
fs
dec
sbbb
cmp
je
mov
jp
call
jp
sub
xchg
inc
mov
jb
mov
xchg
xchg
pushf
mov
cmpsl
sub
cmp
xchg
aaa
xchg
repz
cmpsl
and
or
je
jl
sbb
push
mov
mov
sbbl
in
mov
mov
test
lock
jbe
mov
jns
adc
out
mov
pop
and
ja
lahf
arpl
lea
insb
scas
jns
cwtl
pop
dec
jns
adc
fmull
sbb
dec
in
mov
sub
cmpsl
sub
push
adc
test
mov
repnz
in
jp
jb
mov
cs
jg
adc
cwtl
or
les
lock
arpl
add
out
cmp
pop
call
lret
les
rclb
es
xacquire
inc
ret
icebp
inc
adc
movsb
push
aam
inc
fsubrs
popl
adc
enter
test
sti
mov
pop
add
inc
mov
ret
xchg
jnp
pop
dec
lcall
fistpll
fwait
ds
into
dec
stos
or
mov
flds
cs
js
pop
push
sub
mov
lea
inc
ss
lock
sti
push
sub
xchg
out
cmp
sbb
or
pusha
les
mov
lds
mov
xchg
sbb
insl
push
xchg
push
in
jp
mov
frstor
in
xorb
out
nop
mull
mov
add
dec
push
pop
cmp
mov
sbb
mov
ret
inc
or
jne
mov
call
lret
ret
daa
dec
mov
pop
lods
jo
andb
popf
jnp
inc
mov
popa
and
add
scas
aam
pop
idiv
out
orb
fistl
shll
rcrl
scas
xchg
jo
fcomps
push
jge
imul
in
xchg
dec
pushf
outsl
popa
jno
sbb
shll
xor
ret
fdivp
mov
xchg
dec
xchg
hlt
pop
es
or
jns
in
pop
pop
push
ret
cli
fimuls
mov
pop
pop
daa
push
pop
int
std
jo
stos
out
dec
xchg
mov
jnp
data16
add
fidivs
and
cmpsl
and
or
push
push
jg
fs
xchg
test
inc
lcall
aas
sbbb
push
nop
dec
lea
popf
rol
inc
lods
dec
push
dec
dec
loope
cmp
cmp
icebp
nop
mov
iret
sbb
sbb
fistpll
ficomps
push
add
inc
dec
ret
mov
insl
jo
ret
cwtl
sub
push
in
jnp
cld
mov
or
lahf
or
test
mov
jg
cld
add
dec
enter
and
inc
inc
mov
out
add
inc
in
shrl
fsubrl
xchg
push
rcrb
insb
sbb
jno
cwtl
dec
sub
pop
push
test
dec
lods
cmp
cmc
inc
out
arpl
mov
je
and
stos
dec
leave
jle
scas
mov
cmp
repz
loop
mov
or
jae
ficoml
adc
arpl
test
or
or
or
leave
mov
inc
mov
and
sub
push
mov
test
iret
pop
int
push
jmp
popf
iret
movsb
xchg
aam
cmp
les
add
fsubp
or
mov
popa
mov
fnsave
push
inc
icebp
push
jo
outsb
stos
jbe
dec
cmc
mov
cld
loop
sbb
jp
inc
xlat
inc
add
cwtl
call
inc
add
xor
xor
or
inc
mov
push
mov
cld
lds
sbb
ss
test
inc
mov
std
stc
xchg
fwait
lock
inc
sub
push
divb
in
lcall
and
pop
pusha
or
imul
cld
xchg
cmc
jp
mov
xor
je
mov
sbb
dec
setl
cmpsb
mov
inc
xorl
pop
cmp
adc
inc
mov
ret
dec
mov
jae
push
cmp
dec
dec
and
cmp
cli
pop
or
aad
mov
repz
xchg
js
sub
pushf
sar
sub
mov
or
int3
test
xor
popa
mov
add
cld
push
mov
or
in
cmp
sub
cmp
rolb
pop
adc
int
add
and
or
les
mov
adc
out
sub
enter
push
mov
clc
push
addb
popa
bound
mov
subb
adc
std
jmp
test
aaa
je
les
inc
mov
mov
out
dec
inc
sbb
popa
fdivrp
pusha
xchg
js
mov
push
fnstenv
rolb
pop
jne
push
jbe
sbbb
xlat
jg
test
push
cs
into
bound
mov
repnz
mov
movsl
ret
mov
movsl
mov
pusha
fldl
dec
shll
stos
or
les
and
mov
adc
or
inc
sbb
pop
sahf
xchg
das
inc
sahf
into
inc
sub
int
das
cmp
fidivrl
icebp
add
in
dec
mov
icebp
loop
clc
pop
adc
dec
and
int
jmp
add
push
insb
add
mov
rcl
xor
pop
lods
add
mov
iret
mov
sar
popf
repz
and
out
sub
jns
gs
pushf
sub
in
dec
pop
xor
xchg
das
in
fidivrl
loop
mov
mov
popa
mov
xchg
cmp
rolb
repnz
mov
lret
mov
or
dec
or
fs
sub
adc
sbb
mov
int
lahf
add
rcrb
push
sbb
insl
cld
mov
adc
and
mov
ja
inc
bound
pop
inc
push
in
bound
clc
jp
push
adc
bound
pop
sub
mov
pop
mov
cmp
cmpsl
adc
sub
cmp
ret
roll
push
mov
dec
mov
out
mov
call
sti
test
inc
push
iret
adc
dec
aaa
cmpsb
mov
mov
xlat
loopne
pop
mov
push
xor
test
insb
arpl
jge
fs
jno
jnp
sub
imul
pop
dec
mov
lock
lret
pop
call
xor
rcrl
jle
enter
hlt
outsb
jb
jnp
sbb
or
fidivrl
or
mov
add
mov
xchg
pop
fs
enter
fucomp
int
mov
sub
jp
ret
loopne
loopne
push
or
sub
xchg
sbb
and
dec
inc
or
mov
dec
inc
hlt
fsubrp
stc
push
and
sbb
jnp
pop
mov
and
cli
sbb
test
icebp
cmpsl
cmp
jp
pop
push
add
jno
xchg
nop
add
shrl
mov
inc
out
xchg
inc
push
or
pop
outsl
jp
push
lret
sbb
adc
arpl
dec
or
daa
add
into
js
or
jnp
jecxz
inc
scas
pusha
lods
add
cmp
popf
je
xor
cmp
movsb
int3
mov
out
push
jle
outsb
clc
shlb
not
push
and
data16
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
movzbl
inc
out
push
fbld
jbe
push
scas
push
sahf
mov
jle
outsb
jl
out
orl
icebp
dec
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
jne
inc
in
push
andl
pushf
imul
sbb
jle
dec
aad
movsb
dec
mov
xchg
sub
lret
gs
jne
inc
in
push
pushf
and
lods
jo
in
cmc
sbb
scas
aad
rorb
lds
jne
inc
hlt
push
test
mov
adc
inc
jmp
lods
sub
add
xchg
lahf
jo
popl
push
adc
sahf
sbbb
jp
push
fsubl
gs
das
cld
fcomps
jae
dec
lea
xchg
cmc
mov
cmpl
shlb
mov
mov
xchg
cs
shrb
sti
scas
fidivs
sub
xchg
sub
pop
dec
mov
call
add
xor
push
add
push
cltd
mov
push
jl
lds
movsl
mov
dec
fisubrl
mov
imul
or
jne
cmp
arpl
push
mov
mov
mov
sub
mov
in
test
sbb
int3
jne
inc
sti
push
mov
mov
inc
in
cmc
lds
add
adc
cmp
xor
or
add
adc
inc
mov
xchg
dec
in
push
xchg
add
pop
testl
cltd
or
loop
rclb
cmp
dec
xchg
mov
jg
dec
loopne
shll
in
sub
mov
in
cmc
jl
insb
aad
movsl
or
cmp
sub
fsubl
jne
inc
in
push
pushf
and
lods
adc
jl
insb
aad
movsl
or
cmp
sub
fsubl
pop
movsl
sub
add
icebp
jb
aas
jmp
mov
add
cmpl
mov
pop
mov
scas
ret
popf
repnz
xchg
insb
cwtl
outsl
sahf
add
jne
shll
add
adc
std
xchg
sbbb
mov
dec
inc
jnp
and
mov
cltd
loopne
lods
sub
xchg
popa
sub
rorb
out
dec
mov
sarl
jecxz
mov
lock
push
aaa
lods
inc
mov
xchg
cmp
sti
pop
push
mov
mov
fimull
pop
mov
rcrl
xor
mov
sbb
cmp
leave
mov
and
mov
adc
sti
fsubs
sbbl
mov
scas
or
stc
push
sub
loop
shll
adc
mov
sahf
cmp
xor
imulb
xchg
loopne
xor
mov
xchg
js
push
out
aas
xor
addr16
test
nop
aam
push
lods
mov
push
arpl
jbe
je
xchg
repz
es
popf
in
int3
lea
das
imul
fcmovnu
stos
pop
es
pop
sbb
insl
lret
push
xchg
xchg
jbe
sbb
push
fnsave
roll
dec
adc
or
std
clc
dec
mov
mov
jnp
in
pop
add
pusha
sub
sahf
mov
repz
push
xor
jl
pop
and
and
push
mov
xchg
xor
sub
pop
test
lret
jo
xchg
loope
mov
and
add
cwtl
ljmp
adc
aaa
adc
insb
js
les
jg
hlt
in
ss
in
jmp
sub
mov
dec
adc
mov
pop
mov
dec
lea
aad
mov
push
sbb
mov
push
dec
lds
in
mov
jge
mov
clc
cmp
stc
or
inc
mov
mov
jne
loopne
in
and
mov
and
lcall
and
sub
ret
xchg
fcoml
enter
rorl
xor
testb
xchg
lock
fstps
or
xchg
jmp
cmp
adc
xchg
push
adc
subb
dec
leave
add
ljmp
in
rcr
mov
lock
je
lret
pop
iret
data16
jp
cwtl
dec
dec
mov
xchg
aad
or
das
notb
aas
in
adc
ljmp
nop
xor
and
cltd
loope
mov
rcrb
loope
repnz
mov
mov
jbe
pop
or
push
mov
jb
jle
dec
push
out
mov
sbb
jmp
dec
pop
pop
imul
mov
sbb
cli
aad
fnstenv
mov
adc
mov
in
je
xor
int
xchg
pop
jne
aad
inc
out
mov
jbe
aad
sarl
daa
sbb
adc
ljmp
inc
sub
jne
movsb
mov
leave
push
fstps
sarb
in
sbb
orb
or
inc
ljmp
faddp
xor
and
push
cmp
dec
pop
jb
inc
sub
sbb
mov
rcrb
bound
dec
xchg
int3
xlat
pop
imul
out
lret
testl
push
hlt
clc
lret
shl
mov
mov
aad
pop
ja
je
and
adc
imul
lcall
and
xchg
arpl
iret
nop
mov
xlat
test
hlt
and
inc
mov
and
nop
lods
pushf
inc
inc
stos
rolb
inc
mov
imul
and
ret
addr16
xorb
pop
icebp
outsb
jb
cmpsl
imul
icebp
rcll
es
dec
insl
cmp
push
and
pop
mov
or
mov
xchg
rcr
test
dec
jg
test
sub
mov
lods
daa
ss
stos
jns
push
dec
je
inc
frstor
outsl
sbb
pop
leave
lock
shrb
cmp
sub
add
mov
jg
inc
jb
jecxz
and
adc
ror
push
mov
push
pop
pusha
jne
sbb
aaa
test
pop
xor
and
ss
dec
addr16
pop
repnz
push
fisubrl
stos
push
aas
xor
mov
hlt
mov
push
shl
jge
and
inc
fcomps
sub
mov
jecxz
jecxz
jns
fcomip
addb
xor
pushf
movlps
sarl
shll
lock
lahf
cmp
repnz
daa
jo
inc
push
mov
jl
add
and
jns
mov
mov
and
sbbl
divb
loopne
test
lea
and
movsb
out
fsts
adc
xlat
es
dec
stc
cs
ljmp
mov
mov
and
add
mov
test
mov
sbb
in
xor
je
xchg
jnp
lds
jo
out
cmpsb
inc
inc
sbb
cli
enter
es
cmp
xchg
into
sarl
pop
jno
mov
int
loop
add
dec
sub
test
jecxz
sub
orl
jl
inc
imul
push
stc
xor
mov
push
jp
mov
loop
sti
pop
sti
loop
sub
mov
cbtw
sbb
mov
cmpsb
loope
leave
dec
stos
or
push
clc
cmp
jecxz
out
adc
push
inc
dec
stos
lds
jo
mov
jnp
lahf
iret
lcall
cli
lret
xchg
scas
inc
int
pop
xor
sub
lods
push
xor
and
lods
jne
pop
cli
cmp
sbb
cs
sarl
lret
or
hlt
mov
dec
lock
sub
test
push
test
inc
aam
pop
lret
fwait
rclb
test
lock
dec
addr16
cmpsb
inc
popf
and
shlb
movsb
iret
clc
arpl
jo
in
add
daa
mov
scas
push
insl
scas
xor
jno
ret
cmp
mov
jbe
mov
jno
xchg
pop
fimuls
dec
xor
fildl
outsb
pop
sub
scas
xchg
cmpsb
ds
test
cwtl
cli
adc
stc
pop
sub
test
push
popa
mov
mov
shl
jecxz
mov
jo
push
cmpsl
and
jecxz
out
inc
test
sbb
pushl
push
iret
jns
cmp
mov
daa
mov
cmp
xchg
mov
in
pop
ss
pop
ljmp
push
mov
ja
add
push
dec
sarl
sub
cmp
lret
add
loop
push
xchg
aad
mov
inc
mov
jne
js
aam
sub
mov
rclb
mov
jnp
pop
outsb
out
cmp
in
cmp
jmp
dec
jl
es
jle
mov
jne
hlt
iret
dec
push
roll
add
pop
adc
aaa
lahf
add
adc
and
add
mov
and
lods
in
leave
mov
or
push
mov
or
data16
rol
cli
popf
mov
and
xchg
inc
daa
insl
das
xor
sbb
lahf
xchg
pop
stc
ret
std
jae
into
or
inc
mul
or
mov
pop
xor
mov
cmp
pop
jae
aam
push
mov
ljmp
mov
sub
sub
mov
xlat
ja
add
hlt
imul
clc
das
in
xchg
out
hlt
leave
test
pop
scas
clc
jns
negl
test
shll
jbe
xchg
icebp
aam
rorl
cmp
jmp
repz
pop
inc
adc
outsl
sub
mov
sbb
push
pop
mov
lods
jae
sahf
jge
scas
out
mov
inc
mov
test
adc
ds
leave
jl
test
cmc
scas
nop
add
lret
dec
fwait
sti
cmp
xor
jmp
and
mov
jns
ffreep
mov
mov
inc
test
repz
aaa
jg
outsb
adc
ss
popl
js
xchg
inc
inc
lahf
mov
xchg
xor
pop
pop
dec
and
mov
lea
mov
andb
add
jle
repz
pop
mov
sub
aam
es
xor
dec
mov
mov
gs
cmpsb
push
xchg
jp
pop
inc
sub
xchg
out
pop
mov
aad
mov
lea
into
cwtl
cwtl
aad
inc
mov
push
std
test
int
sahf
mov
test
iret
ficompl
sbb
mov
or
ja
jne
xchg
int
cli
sbb
ss
xchg
dec
gs
out
mov
and
push
jmp
and
daa
pop
or
mov
js
push
cmp
aam
out
cmpsl
cmp
push
mov
jl
je
pop
mov
lahf
mov
mov
out
ret
shrl
popa
daa
sub
popa
sub
mov
xlat
dec
add
sbb
dec
sbbb
push
mov
cmp
loopne
fistpl
in
ja
ret
sub
jno
push
enter
pop
mov
insl
loope
and
imul
adc
xchg
fsubl
cmp
add
test
in
ficompl
cmpb
jl
gs
jmp
cld
fimull
sub
shrb
push
add
mov
pop
shll
xchg
mov
push
fdivrs
sub
sbb
outsl
andb
fcomip
or
icebp
xor
xchg
ja
fstl
cmpsb
xlat
out
loopne
popa
jns
ds
aam
leave
adc
arpl
mov
adc
ss
imul
ror
js
add
sti
dec
dec
mov
lcall
insl
aam
idivl
xchg
cld
rcll
and
into
shl
add
inc
lret
xchg
dec
cmp
call
aad
adc
xor
in
inc
sbb
dec
dec
pop
repz
enter
jo
pop
sub
lods
add
addr16
sub
stos
mov
cmp
cltd
mov
inc
cmc
adc
jae
lret
rcrl
scas
fdivrs
test
negb
iret
adc
xor
lcall
adc
cwtl
push
jl
in
insl
cmp
outsb
dec
xor
lret
cmp
cs
lock
lahf
jae
sti
cwtl
jmp
jp
cli
cmp
fbld
aas
leave
mov
xchg
cmp
adc
mov
xchg
lock
mov
lock
sub
push
and
mov
arpl
push
in
xchg
xchg
xlat
mov
pop
movb
out
jnp
xchg
sarl
dec
push
iret
call
jmp
push
in
idiv
mov
out
push
or
inc
inc
loop
xor
xchg
andl
fiaddl
add
sub
test
out
push
mov
sbbb
cmpsb
push
add
rcr
xor
xchg
push
xchg
clc
sub
mov
add
inc
push
das
pop
add
and
mov
xor
fmuls
mov
inc
out
lret
cwtl
lret
mov
insb
rcrb
or
xor
jg
sub
jle
pop
adc
dec
in
mov
cmpsl
lcall
pop
cmc
cltd
pop
out
inc
jno
sub
cs
dec
movsl
jns
pop
and
mov
dec
adc
add
lock
jge
mov
icebp
add
or
xchg
fmulp
inc
mov
outsl
jmp
jo
fcompl
not
std
aam
in
mov
nop
push
fld
adc
xor
sbb
xor
or
aaa
out
std
ljmp
stc
sahf
mov
test
xor
sti
mov
js
dec
fadds
or
in
outsl
cltd
jae
data16
in
loop
test
pusha
jbe
sub
mov
sbb
outsb
push
xchg
xor
or
adc
jg
ja
mov
mov
iret
sub
sti
loopne
jmp
gs
pop
jmp
punpckhwd
xchg
mov
mov
aam
or
pop
or
ror
push
push
inc
sbb
sbb
out
pop
mov
in
cmp
xchg
add
mov
add
mov
dec
or
icebp
lea
mov
mov
int
sbb
test
push
stc
xor
inc
cmp
or
bound
addr16
add
xchg
cmp
sbb
adc
xchg
jecxz
rclb
cmp
xor
pop
faddp
pushf
and
cmpsl
mulb
nop
dec
inc
push
add
ja
push
push
insb
push
bound
push
incb
in
sub
daa
stos
pop
inc
add
mov
mov
lret
pop
arpl
pop
ja
ret
testl
and
adc
pop
jo
and
hlt
ret
cli
sub
jle
das
arpl
dec
leave
cmp
sbb
fistpl
pop
fs
mov
data16
cwtl
and
insb
add
mov
inc
adc
cld
dec
jge
jmp
mov
aam
rcl
cmc
lods
fsubrp
xchg
cld
mov
fstps
cltd
mov
test
mov
jge
orb
and
cmp
inc
out
and
imul
sub
dec
sub
push
shlb
adc
xchg
mov
cmpsl
cmp
pop
sub
sbb
cmp
fimuls
xchg
cmp
aam
call
shl
jnp
orl
push
sti
mov
pop
iret
movsb
xchg
movsb
in
iret
mov
fwait
mov
dec
or
push
movsb
loop
xor
push
xchg
rcll
inc
push
or
pop
mov
mov
fiadds
mov
out
xor
mov
movsl
ret
sbb
sbb
aas
daa
loopne
pusha
or
pop
sti
sbbb
or
push
fcomps
pop
test
jno
sbb
js
dec
mov
lret
insb
lret
cld
mov
outsb
xor
sarb
fcom
imul
test
or
repz
inc
icebp
lods
and
pop
ss
scas
add
inc
add
rclb
push
xor
leave
aaa
mov
cmp
psllw
jae
lods
out
arpl
mov
xchg
mov
jb
and
cmpsb
fs
mov
mov
cmpsl
int3
inc
sbb
insb
arpl
data16
adc
fs
jbe
ret
sarl
and
fstpl
xor
in
xor
ret
les
fwait
sarl
adc
dec
mov
movswl
push
xchg
movsl
les
jecxz
imul
test
les
pop
mov
ret
sub
dec
frstor
pop
mov
call
into
and
pushf
inc
xor
adc
inc
jns
adc
add
cli
cwtl
xor
outsb
std
adc
mov
sbb
cmpsl
imul
adc
ljmp
mov
mov
sarl
pushf
vxorps
scas
dec
repz
leave
push
push
jo
mov
das
sahf
push
jno
shrb
xchg
push
lea
or
js
mov
sbb
iret
ljmp
lock
sub
cmp
rcll
ds
out
cmpb
mov
orb
xchg
ret
xchg
sub
jl
sbb
jg
or
popf
inc
outsb
jbe
inc
mov
sahf
scas
or
or
pop
fsubl
adc
xchg
and
inc
inc
dec
popf
loopne
adc
push
push
call
cltd
jl
scas
shl
pop
xchg
inc
jg
ficomps
push
nop
into
or
mov
fcompp
test
test
into
mov
and
out
test
xchg
or
daa
mov
cmp
inc
lahf
pop
in
scas
xor
ja
ljmp
test
mov
testb
test
jae
adc
jp
jmp
xor
cld
pop
mov
ljmp
clc
iret
ds
sbb
sbb
adc
outsb
and
fdivrs
sbbl
sbb
lock
add
xor
xor
shll
leave
rcll
mov
repnz
popl
cmp
or
jne
call
int
out
pop
imul
test
loope
aad
aaa
cmpl
inc
insb
jle
daa
test
pop
or
cltd
xchg
sbb
push
mov
jbe
xchg
or
mov
xor
cmp
dec
xchg
ret
adc
dec
lds
lods
sbb
or
sub
inc
push
inc
hlt
inc
mov
inc
stc
roll
clc
popl
xor
mov
sti
mov
adc
jne
cmp
push
mov
xor
call
shlb
sub
inc
cmp
and
sub
cmp
xchg
mov
andl
xor
bnd
inc
xor
xor
add
cmp
push
mov
mov
test
in
aas
pop
data16
adc
in
outsb
cmp
jecxz
and
cmp
loope
enter
add
push
add
mov
lds
stos
pop
icebp
out
sbb
cs
test
pop
add
aam
cmc
adc
sarl
inc
cmp
mov
cmpsb
mov
lret
mov
outsb
rcll
jbe
jmp
mov
xchg
sbb
icebp
xlat
lds
call
xorl
dec
add
pop
adc
pop
push
jecxz
orb
decl
les
xlat
fs
movb
or
nop
in
into
adc
scas
mov
adc
aas
mov
lock
pop
xchg
xchg
adc
std
fwait
mov
mov
mov
push
sub
jl
lods
das
sbb
shrl
es
test
pop
out
jecxz
sub
test
xor
inc
adc
aam
xchg
inc
in
nop
repnz
jge
mov
gs
movsl
pop
fwait
iret
mov
cmp
and
xchg
mov
test
sahf
out
lods
pusha
dec
push
mov
and
mov
cld
clc
enter
fcmovne
imull
arpl
mov
and
cmp
pop
dec
mov
cmc
add
fistl
popa
pop
lods
mov
pop
sahf
stos
adc
lret
jnp
and
mov
jle
loopne
and
cli
adc
jle
adc
dec
pminub
add
pop
sbb
dec
mov
flds
leave
xor
xor
add
xor
lret
fisttpll
mov
pop
inc
aam
cltd
daa
and
daa
loopne
xorw
sarl
out
or
mov
daa
mov
cmc
dec
adc
add
enter
mov
mov
mov
outsl
aaa
js
push
sbb
lods
and
mov
cmp
push
movsb
ret
xchg
jne
mov
or
push
std
mov
fcompl
push
mov
aaa
fwait
test
out
and
sbb
movl
sbb
cwtl
les
xchg
inc
stc
mov
shlb
jnp
in
std
mov
popf
inc
lock
out
je
push
lret
test
int3
mov
test
aas
sub
js
inc
fidivl
jne
mov
rcrl
std
lahf
push
fcoms
sar
aam
xchg
lret
dec
jns
mov
data16
movsb
insb
mov
xorb
pop
lret
jle
inc
and
addr16
call
cwtl
xor
nop
lret
scas
pusha
icebp
ret
das
scas
inc
mov
pop
xchg
pop
jl
clc
inc
setp
xchg
xchg
aad
iret
shlb
mov
jno
and
pop
push
inc
daa
sub
test
add
out
cmp
out
xor
pop
jge
fidivl
inc
lret
iret
movsb
xchg
pushf
icebp
mov
mov
adc
mov
bnd
loope
repnz
dec
push
inc
icebp
imul
test
or
rorb
sbb
adc
rol
ds
jne
mov
test
outsl
sbb
sbb
addr16
shrl
and
xchg
out
pop
js
movsl
sbb
dec
cmp
inc
or
jp
push
lods
sahf
pusha
xor
pop
int
seta
adc
std
add
mov
mov
pop
xor
ss
xor
inc
mov
and
in
mov
lods
dec
stc
mov
cmp
loopne
fwait
notb
cmp
ds
in
sarb
mov
test
xor
lret
pop
int
mov
add
sub
cmp
add
add
pop
and
stos
fwait
dec
or
movsb
mov
xchg
mov
fadd
xor
mov
mov
daa
dec
or
inc
aad
hlt
mov
mov
orb
out
shrb
jae
cmp
adc
dec
ja
into
mov
jge
imul
fdivp
inc
lds
xchg
dec
xchg
mov
xor
test
dec
or
mov
jb
in
imul
fs
cmp
add
daa
dec
add
pusha
mov
add
or
push
push
mov
je
sbb
add
adc
jne
divb
push
mov
xchg
jle
xor
test
inc
rclb
sbb
mov
in
test
jnp
mov
imul
cmp
mov
adc
jne
inc
in
push
pushf
and
lods
adc
jl
insb
aad
movsl
or
cmp
sub
fsubl
jne
inc
in
push
pushf
and
lods
adc
jl
insb
aad
movsl
or
cmp
sub
fsubl
jne
inc
in
push
pushf
and
lods
adc
js
insb
aad
movsl
or
call
inc
in
push
pushf
and
sub
mov
lds
sub
shrl
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
add
sub
push
fwait
and
mov
jp
mov
dec
fnstcw
int3
sub
or
or
or
cmp
sub
pop
mov
insb
mov
js
push
jp
dec
fcompl
cli
cld
sbb
or
jecxz
ljmp
add
push
adcb
das
int
cld
jnp
inc
mov
pop
cli
sub
js
pop
inc
xlat
push
or
add
dec
scas
icebp
loope
pop
daa
sbb
rorl
push
adc
movsl
ss
mov
push
adc
add
cli
jno
inc
dec
inc
dec
pop
mov
popa
inc
dec
add
lods
scas
aam
cmp
data16
jae
inc
out
iret
and
inc
sub
in
or
je
inc
fidivrl
pop
lcall
mov
fists
push
imul
pusha
cltd
ret
ret
and
iret
push
cmp
and
pop
neg
push
pop
scas
dec
das
push
int3
cmpsl
lods
sbb
or
fimull
dec
stc
mov
je
mov
imul
sbb
cli
or
cmp
inc
rcrb
stos
jl
aam
outsb
bound
jb
inc
mov
mov
sbb
ljmp
cmp
outsl
testb
in
bswap
and
mov
stos
addr16
test
jnp
out
xor
pop
out
add
or
rorb
dec
test
outsl
outsb
mov
insl
mov
jl
insb
mov
lods
dec
fdivrl
int3
sub
sbb
or
or
cmp
sub
pop
mov
insb
mov
lods
dec
fdivrl
int3
sub
sbb
or
enter
jae
adc
or
in
cmp
inc
dec
inc
pop
add
aaa
out
cltd
mov
cs
inc
bound
jae
mov
cmp
cmc
jmp
in
leave
and
lods
jmp
adc
popa
aaa
xchg
in
inc
sbb
push
test
repz
mov
pop
in
fisubrs
repnz
and
inc
ljmp
mov
adc
inc
outsl
bound
rcll
dec
sub
dec
sub
cmpsb
mov
stc
inc
jbe
push
pop
push
push
fwait
sub
dec
test
stc
xor
cwtl
int3
xor
jg
call
inc
sbb
inc
ljmp
adc
jge
test
jae
jecxz
and
push
sbb
in
jno
add
xor
xlat
out
jge
mov
fisubs
dec
inc
ss
addr16
ffree
xchg
aam
test
pop
test
jns
pop
add
sbb
sbb
sbb
or
popf
fimuls
lcall
jb
stos
nop
ja
pop
pushf
mov
test
mov
nop
mov
push
shr
push
push
das
icebp
cwtl
popa
xor
adc
mov
jae
pop
fwait
int
sarl
sub
jmp
test
pushl
cs
shl
adc
add
mov
mov
ljmp
aas
add
insl
neg
lcall
hlt
mov
dec
ljmp
push
leave
decb
xchg
fidivrs
or
fsubrl
mov
cld
mov
mov
mov
or
call
cmp
aam
mov
lea
out
xor
mov
and
sub
and
scas
or
xchg
jecxz
mov
insb
test
arpl
sub
sti
fwait
adc
aad
repnz
mov
lods
adc
es
lock
xor
add
scas
jnp
xor
popf
dec
out
test
xchg
in
mov
scas
stos
pop
clc
shll
sub
push
fcomi
mov
and
inc
fs
cmp
lahf
fs
or
insb
mov
push
inc
adcb
imul
mov
subb
add
sbb
sub
push
movsl
pop
les
lahf
loope
cltd
and
and
das
repnz
xor
out
push
mov
xor
and
cmp
and
cmp
push
jne
jle
sub
lahf
loope
pop
scas
insb
fwait
test
outsl
mov
aas
add
loop
lea
inc
fxch
loopne
pushf
add
cltd
fs
lods
dec
int
stc
imul
push
fadds
std
outsb
add
cmp
pop
in
push
adcl
push
inc
popf
xchg
cmpsl
rcl
jno
int3
fstps
add
fiaddl
lods
push
push
sub
xchg
inc
in
hlt
int
js
insl
mov
cmpsw
push
ss
aaa
enter
out
mov
mov
fcomi
cmc
mov
inc
andl
out
lea
aas
lahf
mov
or
js
push
nop
outsl
sub
adc
adc
and
or
adc
sub
mov
pop
lock
lcall
xor
fnstenv
mov
push
jne
je
sbb
stos
mov
jns
or
hlt
test
pop
jle
sbb
add
mov
jmp
pop
dec
repz
test
sub
arpl
push
mov
jl
std
mov
dec
orl
mov
stos
pop
cmp
cmc
or
cltd
insl
dec
es
jnp
out
fmuls
das
adc
lcall
push
jbe
int
cmc
mov
cmp
imul
pop
int
fcomp
int
inc
add
add
cmpsb
imul
ret
fstps
add
lds
pop
test
mov
sub
push
mov
imul
test
sbb
lahf
outsl
mov
xor
xchg
xchg
repz
mov
pop
sub
ljmp
lock
xor
xchg
int3
int3
sub
cmp
jmp
jle
adc
subl
imul
sbb
mov
in
add
mov
and
mov
dec
push
jne
xchg
xor
sahf
fldenv
cmp
and
cmc
mov
sbb
mov
ret
inc
movsl
inc
rcrb
je
mov
rcl
xchg
ficompl
lods
mov
pop
mov
aaa
std
aam
repnz
adc
das
jne
add
xor
ds
push
mov
insl
into
dec
or
bound
cltd
pop
mov
inc
cli
jns
adc
icebp
ja
stos
or
rcrl
mov
mov
cld
mov
and
pop
aaa
sahf
shll
cld
subl
aaa
ret
popa
push
ljmp
test
adcl
adc
outsb
popl
mov
out
cmp
out
ficomps
lret
aas
add
dec
or
enter
xlat
mov
or
mov
adc
fdivs
iret
dec
aas
int
mov
add
gs
push
push
popf
cmp
and
mov
insb
ds
inc
xlat
add
mov
sub
psubusw
lods
mov
loope
icebp
xchg
cmpsb
mov
and
sub
or
fcmovne
lret
dec
ret
loope
inc
sahf
and
mov
orb
inc
scas
add
xorl
jns
popa
inc
push
fs
xchg
mov
xor
and
sub
sbb
jge
cltd
data16
xchg
mov
cmpb
leave
mov
lcall
dec
inc
mov
sbb
xchg
jp
stos
mov
sub
sbb
pop
cmp
pmullw
popa
pop
test
cmpsl
insb
lods
xchg
rclb
sub
out
adc
fstpl
dec
add
xchg
cmp
and
mov
daa
not
ds
push
sahf
addr16
mov
or
cmpsl
lods
insb
aad
shl
fisubs
mov
xchg
pop
ds
dec
mov
jge
insl
into
aas
mov
and
bound
sbb
and
mov
cs
ret
dec
jmp
iret
or
sub
aam
jns
in
adc
lock
adc
mov
loope
icebp
dec
hlt
push
push
xorb
inc
clc
out
test
popa
std
scas
xor
sti
in
es
pop
in
mov
pop
cwtl
xchg
inc
hlt
sub
out
repnz
pop
push
jecxz
pop
mov
push
fs
ja
adc
outsb
adc
js
dec
dec
in
jae
arpl
ss
pop
outsl
add
jo
inc
aam
mov
fs
mov
push
cwtl
xor
sbb
push
shrb
repnz
mov
lea
negb
dec
or
lahf
or
dec
les
push
pop
loope
pop
xchg
push
sbb
pop
leave
xor
adc
adc
movl
pushf
mov
mov
pushf
int
sbb
jl
sub
mov
test
sbbb
xchg
inc
xchg
xchg
add
hlt
lret
ret
in
xchg
shl
mov
fwait
lret
xchg
cmp
ljmp
test
inc
cmp
add
clc
test
sti
cld
sbb
fistps
scas
int
fsubrp
push
mov
or
clc
dec
cs
ljmp
hlt
dec
test
xor
mov
adc
mov
lcall
int3
sub
sub
mov
sbb
sarl
in
out
dec
pop
call
sub
inc
es
adc
cmp
pop
pop
mov
add
test
push
push
mov
push
push
fiadds
pop
es
adc
cmpsl
insl
cwtl
insb
arpl
pop
in
push
outsl
or
pop
push
ret
inc
push
test
xor
dec
into
inc
add
enter
inc
sbb
mov
insl
test
mov
push
ret
jge
repz
ret
lea
nop
push
pop
push
mov
mov
jns
ret
push
cli
in
in
daa
out
xor
add
jno
or
out
jae
cmp
adc
cmpsb
js
test
pop
jmp
leave
data16
adc
clc
or
pop
xchg
push
scas
mov
push
mov
divb
cmp
xchg
xor
mov
repnz
sbb
mov
cmp
dec
dec
mov
sbb
adc
std
push
aaa
hlt
test
mov
call
div
push
out
mov
adc
xchg
xor
push
xor
mov
out
enter
scas
xchg
push
push
lea
adc
xchg
add
inc
das
pop
jle
aaa
movsl
xchg
stos
mov
icebp
push
lods
inc
stc
es
xor
xchg
in
int3
das
loop
gs
cmpsb
insb
and
cmp
dec
or
add
cld
test
or
mov
ja
fbstp
pusha
call
leave
sub
sti
bound
fsubrl
test
dec
xchg
in
ss
out
fwait
sti
lock
ds
add
sub
push
xor
pop
xchg
lods
lock
in
inc
mov
notl
sti
mov
pop
push
nop
arpl
pusha
and
xchg
out
inc
mov
and
push
inc
call
and
cmp
sub
sti
cmpsb
cld
fstpl
and
sbb
movsb
sub
push
jo
in
sub
inc
xor
inc
xchg
mov
add
xchg
lods
pop
cmpl
adc
jg
push
cltd
dec
bt
sbb
add
fdivrl
fcomp
and
inc
jp
roll
inc
jns
mov
add
lods
jo
fcoms
int
push
roll
jmp
iret
adc
pushf
mov
and
imul
add
jp
push
cmp
add
mov
or
add
mov
out
popf
adc
xchg
mov
cwtl
fstp
ljmp
mov
lret
dec
decl
std
pusha
lods
mov
sahf
xor
popf
mov
push
ds
cmp
adc
mov
mov
mov
dec
inc
xor
pop
stos
fcoml
outsb
lcall
and
cmpsl
enter
sbb
mov
add
pusha
mov
int3
xchg
movsb
testb
sub
test
or
or
sahf
jb
push
inc
and
insb
pop
idiv
xor
mov
and
in
and
add
jno
add
in
dec
or
xor
lods
stos
ss
gs
or
or
xchg
cmc
pop
data16
adc
ret
mov
sub
stos
sbb
xor
mov
ja
pop
add
jae
push
jg
scas
inc
inc
jl
test
pushf
rcll
and
mov
call
shlb
lods
xchg
aaa
inc
inc
push
add
cmp
std
cmp
jl
pop
addr16
outsl
aad
insl
mov
mov
mov
inc
mov
aas
jno
pop
out
push
jmp
push
daa
xchg
xchg
mov
and
pop
xor
push
repnz
ficomps
cs
and
test
arpl
push
movsb
lea
sbb
js
mov
cwtl
push
adc
mov
cwtl
mov
pop
lds
loope
push
and
sub
iret
je
mov
sub
push
sub
xor
push
xchg
inc
loope
sub
xchg
pushf
jb
negb
sbb
xchg
wbinvd
sub
movsl
lds
loope
lret
mov
pop
imul
xchg
mov
jp
xor
aam
sbb
incl
or
fs
scas
testb
aad
mov
loop
leave
pop
lahf
bound
lret
mov
int
sbb
gs
shl
inc
xor
imul
out
and
xor
iret
int
jp
dec
repnz
cld
bound
inc
lahf
dec
jno
and
ja
push
int3
pop
xor
test
or
stc
dec
and
mov
sbb
addr16
push
or
pop
in
inc
xchg
hlt
xchg
mov
mov
aam
add
stos
leave
imul
shlb
cmp
dec
jmp
jbe
iret
jns
dec
mov
out
xor
fld
and
push
mov
aad
ret
ja
add
mov
or
mov
push
lods
ja
cmc
push
mov
jl
mov
jp
cmp
int3
mov
imul
xor
and
xchg
fisubl
jp
addl
mov
sbb
mov
jns
dec
adc
push
lahf
mov
arpl
in
cmp
or
jb
lahf
lods
imul
sub
popl
js
lret
inc
sub
push
das
jl
popa
fstpt
xor
aaa
lahf
outsb
popa
cld
lods
aaa
mov
and
xor
jae
lcall
fstps
cmp
in
jo
sub
pop
and
dec
jge
repnz
pop
sub
jbe
arpl
imul
dec
por
push
mov
stos
push
iret
sub
or
dec
ret
aad
aaa
adc
jo
pop
mov
jnp
repz
loope
pop
aas
and
sub
and
pop
cld
outsb
add
ficoml
mov
je
sub
push
mov
enter
ss
pop
mov
imul
xchg
add
xor
push
out
xchg
mov
xor
jns
dec
cs
cmp
jmp
scas
sbb
aam
push
cmp
jmp
stc
in
xor
popa
xchg
lahf
daa
pop
xchg
aas
insb
lock
push
in
push
out
out
mov
or
inc
fnstenv
fdivr
xlat
xorl
and
movsb
xor
or
adc
mov
mov
bound
adc
mov
int
or
push
xchg
add
je
dec
in
cld
dec
jb
rorl
test
out
push
in
add
xor
mov
das
pop
fistpll
mov
negb
add
jae
mov
inc
xchg
fucom
mov
xchg
mov
aam
insl
lahf
xor
pushf
sbb
cmp
test
ljmp
notl
or
gs
cmpsl
dec
fs
pop
mull
inc
scas
negl
lea
enter
inc
jno
imul
jp
dec
mov
mov
sub
sub
decb
pushf
fptan
sbb
test
mov
lcall
aaa
xor
mov
dec
lcall
push
iret
add
mov
adc
outsb
pusha
lods
pop
pop
adc
das
push
adc
aam
jnp
js
jbe
push
daa
xchg
mov
mov
inc
push
imul
fimull
xchg
mov
push
repz
push
scas
xchg
mov
arpl
add
fwait
push
testb
sub
jp
adc
cli
jb
push
ret
xchg
pop
out
and
sahf
inc
jnp
mov
cmp
xchg
mov
sbb
mov
cmp
andl
cli
out
cli
cmp
xor
mov
add
pop
inc
in
loope
jl
and
push
xchg
arpl
mov
sbb
and
mov
push
out
insl
xchg
je
shlb
call
ja
jmp
mov
add
or
push
jnp
std
jl
loope
fs
push
mov
cltd
add
cwtl
orb
mov
xchg
cmp
mov
jnp
mov
je
push
push
pushf
pand
xchg
inc
mov
and
icebp
cmovbe
add
lcall
sbb
jl
jle
xchg
test
fucom
or
push
mov
xor
adc
adc
or
sbb
mov
inc
push
cmp
xchg
add
fdivs
inc
lahf
lahf
jmp
test
icebp
ja
inc
jo
bound
sub
sbb
into
lea
jo
cli
mov
push
insb
jne
adc
rorl
mov
jae
out
cs
insl
push
insb
stos
mov
scas
lock
outsl
faddl
rorb
jmp
rorb
push
mov
cs
shr
sbb
scas
jg
cltd
cmp
sti
mov
shl
dec
mov
fbld
pop
inc
cmc
xor
das
mov
fldl
sbbb
mov
jo
cmpsb
sbb
pop
push
sahf
mov
adc
insb
fcmovu
pshufw
mov
mov
cmpsl
sbb
pop
mov
cmp
bound
push
jo
loope
mov
dec
or
pop
std
stos
push
dec
ljmp
fsubrs
mov
scas
fidivrl
cli
add
jb
bound
mov
les
jmp
scas
hlt
inc
movsb
lret
pop
jbe
add
and
inc
imul
jnp
and
xor
and
add
inc
pop
sub
addr16
clc
sub
or
adcl
mov
xchg
or
xor
sarl
xchg
out
adc
xor
jbe
cwtl
stos
stc
push
xchg
gs
push
loope
repnz
cmp
xor
inc
mov
dec
arpl
push
outsl
dec
dec
and
out
iret
xchg
cmp
aad
imul
xor
repnz
push
sub
leave
gs
cmc
lret
sub
mov
xchg
push
stos
cld
bound
add
ret
fisubrs
jmp
mov
ret
adc
cmc
mov
lcall
adc
and
in
mov
push
xor
pop
jae
adc
inc
ret
pop
and
mov
mov
out
rorb
pop
in
and
mov
pop
push
mov
push
add
cmp
and
push
mov
js
jl
dec
xor
icebp
or
mov
call
call
jl
jo
imul
sub
mov
hlt
fbld
std
mov
mov
leave
test
jo
xchg
jnp
mov
pop
mov
sub
mov
push
sbb
add
xor
push
xchg
test
cmp
add
or
test
mov
mov
sub
mov
inc
add
ret
mov
mov
inc
jle
fsubs
or
shlb
sbb
dec
sub
pushf
push
imul
push
subl
stos
aaa
cmp
push
stc
mov
arpl
sub
adc
scas
mov
bound
xlat
sti
stc
jmp
pop
aam
fcmovbe
mov
adc
jae
xchg
jb
mov
sub
jle
mov
cs
dec
xchg
insl
add
ret
sahf
movsl
sahf
xor
insb
loope,pt
ror
dec
xor
inc
cmp
repnz
xor
movsb
es
dec
mov
jno
dec
sub
in
scas
leave
or
push
addr16
mov
mov
mov
xchg
cmp
or
dec
fildl
mov
inc
bound
push
adc
pop
adc
mov
mov
enter
out
mov
leave
dec
xchg
pop
cli
mul
js
in
ror
mov
jecxz
mov
mov
dec
mov
addr16
sbb
rclb
adc
mov
mov
leave
in
jmp
adc
mov
lods
cltd
shr
add
add
dec
xor
add
shl
and
mov
inc
aaa
or
jmp
xor
fs
sbb
loope
stos
pop
insl
cwtl
rcll
sub
adc
cld
xchg
inc
stos
out
outsl
or
xor
adc
shlb
sbb
push
in
mov
dec
mov
out
mov
gs
cmc
lcall
mov
cmp
dec
fs
fldcw
xchg
incl
mov
pop
or
lea
push
jg
jbe
shl
shll
test
adc
dec
scas
pop
or
jb
loopne
lret
lea
imul
lods
xor
mov
imul
and
mov
dec
cwtl
filds
cmc
fsubr
dec
lods
xchg
inc
imul
pop
jecxz
dec
add
nop
jmp
mov
fsts
or
repz
cmp
inc
mov
and
jmp
cs
adc
mov
cmp
cmp
out
add
mov
jb
pop
stc
into
push
ss
popa
lret
inc
lods
pushf
idivl
mov
adcb
in
scas
dec
les
jbe
rorb
leave
adc
fnstcw
add
push
scas
fistl
rol
shll
cld
inc
lods
movsl
rclb
imul
in
dec
adc
arpl
popf
cmp
mov
out
lcall
movb
pop
js
mov
dec
stc
jnp
cwtl
mov
in
enter
sbb
and
mov
pop
insb
sahf
add
inc
lods
dec
in
mov
fcmovnbe
fiaddl
sub
adc
sbb
push
testl
outsl
mov
jno
jg
shll
fsubr
jge
xor
pop
mov
insb
mov
lods
dec
fdivrl
int3
sub
sbb
or
or
cmp
sub
pop
mov
insb
mov
lods
dec
fdivrl
int3
sub
sbb
or
pminsw
sub
pop
mov
insl
mov
pop
test
fdivrl
aad
clc
sbb
or
and
mov
add
pop
mov
in
mov
lods
cmp
add
adc
fisubl
jo
inc
ljmp
imul
rcrb
or
sub
lret
inc
ljmp
add
lock
rcrb
sarb
mov
subb
ret
jns
imul
cmp
or
imul
sbb
les
jge
mov
movsl
add
and
mov
jnp
insl
fdivrl
mov
repz
rcll
pop
or
loop
sbb
pop
pusha
xor
add
aas
out
fistps
arpl
xchg
sbb
cmp
push
or
mulps
push
or
stos
out
sbb
sub
fstpt
fimull
and
xchg
roll
dec
push
dec
aas
xchg
pop
in
or
mov
inc
ja
or
or
pop
sbb
cmp
mov
xor
adc
xchg
dec
add
lcall
pop
push
cmp
shll
pop
ljmp
add
call
add
sub
lahf
and
in
push
imull
pop
es
push
mov
lds
dec
out
inc
cld
mov
stos
sbb
and
and
xchg
das
xchg
jp
sub
sbb
popa
mov
out
in
pusha
cmpsb
jo
and
adc
mov
loopne
lock
push
sbb
sub
cli
inc
ljmp
add
lock
push
sbb
sub
inc
cltd
push
imulb
outsl
jns
or
fdivs
loope
pop
jae
int
in
and
fstps
adc
xor
icebp
repnz
ds
int3
imul
pushf
dec
stc
mov
outsb
sub
pop
sub
adc
outsb
cmp
in
out
sbb
test
adcb
push
or
repz
mov
adc
jnp
ftst
push
jns
sub
pop
push
lcall
mov
movsb
das
cmpsl
stos
adc
mov
xor
ja
or
mov
insb
dec
inc
mov
or
push
xchg
dec
mov
pop
push
fbstp
adc
push
pushf
sub
addr16
shr
lfence
sub
mov
test
pop
shlb
rol
cmp
adc
in
mov
xchg
mov
pop
jae
sbb
mov
imull
loope
mov
push
orb
or
xchg
imul
xor
shlb
mov
add
fcomp
outsl
lods
xchg
cmpsl
into
and
hlt
and
or
pop
or
jnp
adc
cmp
insl
mov
cld
ss
adc
outsl
add
jmp
inc
mov
sahf
mov
jl
stos
mov
sahf
ret
push
dec
cmovae
imul
xor
xchg
js
sub
push
sub
fiaddl
rorl
xchg
xchg
pop
mov
les
test
pusha
jb
jmp
movsb
pop
daa
xlat
cs
mov
fiaddl
push
jo
mov
and
xor
jbe
inc
ffree
dec
add
pop
mov
push
test
mov
add
lods
pusha
push
inc
js
jne
xchg
add
mov
mov
nop
inc
fwait
cmp
fisubrs
cli
rorl
xchg
rcrl
jl
mov
xor
push
cmp
jns
adc
mov
lret
push
sbb
test
cmp
jbe
mov
call
movsl
dec
jae
push
mov
mov
mov
sub
inc
dec
sbb
jo
fcmove
loop
dec
push
pop
repnz
pop
cmpsl
pop
and
out
adc
adc
fisubl
adc
dec
loop
xorl
pop
in
jge
or
push
pop
and
sbb
fstl
xchg
add
add
cmc
in
adc
push
jp
jb
fxch
out
lods
cmpsl
jnp
jne
test
xor
or
xchg
les
push
mov
xchg
stc
dec
and
sub
stos
call
xchg
in
test
dec
in
jne
push
cld
loop
mov
sub
outsb
pusha
jae
adc
mov
or
test
test
push
cli
push
sbb
in
mov
adc
push
sahf
jl
push
dec
dec
insb
jg
outsl
loopne
loopne
jne
das
je
imul
jecxz
jp
loope
into
loope
add
cli
cmc
push
add
rorb
lds
sti
xor
push
xchg
sub
sahf
addb
dec
xorb
jge
dec
gs
mov
das
mov
pop
inc
rcl
call
das
std
jbe
mov
xor
adc
out
shll
scas
mov
sub
xor
xchg
mov
cwtl
adcb
fiaddl
lret
push
cmp
leave
cltd
add
fndisi(8087
mov
roll
ret
cmpb
sarb
sbb
pop
inc
test
cmp
dec
fistps
lahf
jp
nop
js
mov
stos
add
arpl
push
sub
shrl
lret
shrb
mov
xchg
mov
cmp
mov
pop
mov
dec
jns
ficomps
pop
ljmpw
stos
cwtl
push
jns
ds
or
fimuls
or
pushf
mov
mov
cmp
and
call
lea
xor
inc
negl
repz
je
rcll
mov
and
mov
hlt
scas
xorb
test
cmp
cmovge
inc
orl
inc
push
ret
popa
sbb
mov
leave
jo
jle
je
cmp
dec
or
stc
je
rcl
mov
xor
sarb
sar
pop
daa
fildl
adc
sub
dec
mov
gs
xchg
inc
aaa
rclb
sbb
adc
jp
mov
pop
inc
sub
push
push
clc
cmc
cmp
jecxz
fnstsw
subb
jno
xchg
sbb
test
clc
or
cmp
mov
and
cmp
aad
xchg
mov
add
adc
cld
or
sbb
cmp
pop
cmc
push
inc
mov
pop
xchg
mov
mov
pop
jbe
jge
mov
inc
call
xor
inc
loop
lret
sbb
inc
je
aam
das
in
in
and
adc
out
push
sbb
rcl
adc
sar
data16
and
aas
push
dec
movsb
jle
cmpl
xchg
lret
ficoml
idivl
mov
push
loope
shl
addr16
enter
das
icebp
push
addr16
outsb
dec
or
fnstsw
push
sbb
jns
mov
mov
pushf
mov
xlat
jp
sub
stc
gs
stc
outsl
aaa
or
pop
test
lds
popf
xchg
fldenv
stos
and
pop
xlat
das
inc
dec
insl
ret
arpl
mov
aas
mov
cwtl
scas
sub
sbb
lret
adc
in
into
cmpsb
pop
jmp
push
pushf
andb
jo
mov
push
jb
loope
das
push
int
rolb
stos
jo
roll
out
testl
xor
sub
sbb
popa
dec
push
mov
mov
andl
inc
and
mov
inc
xchg
hlt
lcall
iret
pushf
push
gs
xchg
lret
test
jae
or
xchg
aam
xchg
mov
cmc
aam
xor
mov
sbb
inc
pusha
test
ss
add
push
sbb
arpl
xchg
mov
es
dec
xchg
jg
jp
pop
scas
ja
push
mov
or
ljmp
mov
and
movsl
xchg
mov
xor
test
push
mov
pop
frstor
fs
or
jo
adc
pop
mov
lods
inc
pushaw
into
push
jecxz
mov
out
cmp
pop
sbb
mov
aad
daa
inc
mov
sbb
neg
cmp
dec
mov
and
pop
adc
push
xor
mov
jl
dec
jge
and
pop
out
repz
sub
test
cltd
pop
or
movsl
icebp
les
push
xor
sahf
rorb
insb
lahf
mov
loop
dec
mov
cltd
lds
out
xchg
les
shrl
fs
and
and
dec
sbb
sti
lret
data16
daa
xor
inc
push
jg
aas
sti
or
xor
mov
mov
jle
adc
inc
lret
ja
shr
divl
push
in
lret
mov
sub
mov
sbb
sbb
cmpsb
shr
and
mov
inc
leave
addr16
xor
pusha
push
mov
mov
faddl
mov
jno
xchg
inc
jle
fisubrl
or
mov
loopne
test
mov
call
call
loope
aam
daa
add
xchg
sbb
inc
pop
add
inc
insb
inc
push
std
adc
adc
test
pushf
ret
xchg
movsb
jmp
sbb
adc
movsl
xor
add
push
mov
sub
cmpsl
xchg
imul
mov
jo
out
ss
lret
push
cmp
or
rorb
mov
dec
fwait
pusha
mov
or
add
adc
divl
inc
ret
imul
jl
out
adc
mov
in
movsb
das
adc
divl
adc
pop
xchg
fisubs
sahf
mov
sbb
dec
fldcw
dec
pop
cmp
test
mov
stos
mov
lret
cs
push
cmpsl
pushf
hlt
inc
add
lea
iret
mov
adc
lahf
jp
xchg
popf
js
icebp
push
test
inc
leave
jl
xchg
inc
xchg
pop
aam
jmp
outsb
push
sahf
dec
dec
ret
inc
scas
inc
xor
sub
ja
mov
sub
rolb
ljmp
xchg
add
mov
jne
pop
pmulhuw
inc
mov
cli
shll
stos
sbb
inc
xor
adc
pusha
or
sbb
or
lret
add
sti
and
mov
or
aas
xchg
sub
pop
mov
ss
loop
ret
lea
mov
push
mov
xchg
pop
pop
inc
je
lea
stos
sbb
mov
jge
xchg
fwait
pop
lahf
std
and
push
sub
adc
out
or
push
icebp
fisubs
ss
stos
cld
mov
adc
xchg
xor
aam
loopne
jl
repz
imul
xor
jp
and
pusha
subb
inc
icebp
lock
je
sbb
pop
push
cmp
or
int3
pop
adc
jne
jne
push
jbe
and
scas
rorl
inc
xor
xorl
int
push
push
or
or
and
adc
ljmp
lret
addr16
aaa
ror
inc
call
cmpsl
mov
push
cmc
lea
xor
gs
and
sub
mov
int
outsb
xchg
inc
incb
icebp
clc
mov
test
loop
push
hlt
out
mov
sub
pop
mov
mov
mov
push
test
mov
sbb
mov
xor
mov
add
dec
or
data16
test
cwtl
addr16
add
andb
cli
js
xlat
in
push
pop
pop
xchg
pushf
cmp
ljmp
or
mov
push
jmp
pop
fiaddl
test
out
loop
stos
xchg
mov
pop
das
aam
xlat
sarb
call
inc
gs
dec
push
and
push
ds
andb
imul
dec
in
movsl
out
pop
adc
cmpl
ds
push
xchg
mov
pop
pop
ljmp
dec
jae
mov
out
js
dec
sbb
mov
andb
dec
mov
ljmp
xchg
rcr
es
xchg
cmp
mov
push
test
imulb
push
mov
xor
scas
push
stc
adc
insb
push
in
xchg
mov
add
rcrl
repz
inc
jae
mov
adc
and
roll
out
jbe
int
bound
addr16
iret
jl
and
mov
outsl
cmp
sub
push
fiaddl
in
cmpsb
test
jl
aad
adc
incb
das
dec
mov
fsubrs
lea
out
loope
adc
cltd
push
sbb
nop
xlat
xor
mov
mov
jp
cmovno
int3
imul
push
mov
outsb
inc
dec
out
pop
push
cmpsb
xchg
cwtl
pop
out
inc
stos
jecxz
pop
cli
out
mov
pop
add
sbb
pushf
inc
mov
gs
sar
xlat
lea
jmp
xchg
dec
movsb
movsl
jecxz
test
inc
jo,pn
push
mov
inc
in
loope
ja
mov
mov
xlat
int3
lea
daa
xor
push
es
jmp
test
inc
sbb
cmp
mov
movsb
movsl
inc
xor
insl
mov
cmp
or
stos
push
movl
xchg
mov
push
and
mov
jno
shll
out
in
and
adc
xchg
push
in
xor
icebp
mov
xor
xor
cmp
f2xm1
push
jae
mov
enter
sti
out
inc
push
out
outsl
movzwl
xchg
jp
or
pause
ret
and
repnz
xor
cltd
or
js
pop
cmp
rclb
dec
aas
sbb
adc
adc
push
and
fwait
xchg
dec
ds
out
push
xor
sbb
sbb
aaa
ds
dec
out
mov
sbb
push
mov
sbb
push
and
jb
mov
jge
lret
jl
and
lea
push
test
divb
mov
adc
nop
aaa
sub
test
in
nop
popf
xchg
add
sub
cld
sbb
stos
cmp
sbb
cltd
inc
pop
jle
lods
lea
pop
fsubrl
push
test
aas
cmovb
cli
xchg
cld
sbb
aas
insl
or
scas
and
and
fs
mov
xor
lea
dec
sbb
cmp
xchg
push
shr
dec
pusha
jb
mov
mov
push
sub
sub
xchg
out
sar
and
dec
inc
sbb
jbe
lcall
dec
lock
inc
and
cmc
xchg
sub
cmp
out
add
mov
jge
mov
enter
adc
sub
sbb
adcl
ljmp
clc
loop
sub
jae
adc
stos
mov
and
call
jb
mov
les
decb
out
scas
and
add
fisubrl
movsb
jns
int3
sbb
xchg
xchg
je
sub
inc
je
imul
jae
dec
jb
mov
adcb
jmp
out
daa
pop
js
or
movsb
les
leave
cwtl
fdivl
sahf
cmp
adc
pop
xor
in
test
imul
or
in
fisttps
shr
pop
mov
and
nop
std
inc
xor
cltd
cwtl
and
push
lock
inc
movsb
xchg
push
ljmp
call
jecxz
das
test
pop
icebp
sarb
push
or
sbb
push
std
cmp
cmc
filds
mov
mov
cwtl
inc
sbb
pop
mov
cli
sub
cld
push
fdivs
ljmp
jp
jo
jge
and
enter
sarl
push
stos
lret
push
mov
fnstenv
cwtl
sub
adc
rcrl
into
lret
aas
xchg
hlt
push
pop
into
jnp
push
cld
arpl
inc
xor
push
mov
add
push
push
jle
jno
pusha
mov
mov
jp
rol
das
and
lock
rcll
roll
loop
ljmp
xorl
mov
repnz
inc
movsb
and
outsb
push
xchg
adc
push
shr
in
mov
addb
push
frstor
mov
and
mov
dec
cli
adc
pop
adc
xor
inc
mov
cmp
xchg
lods
adc
sub
inc
mov
sbb
icebp
inc
ficoms
mov
pop
or
inc
lret
repnz
push
cmp
mov
shrb
xor
mov
out
je
and
mov
mov
lret
xchg
lahf
inc
mov
adc
jbe
xor
fisubrs
and
fldcw
pusha
ss
adc
xchg
mov
adc
inc
lods
sbb
ret
ds
jle
enter
xchg
cmp
sbb
addr16
inc
popa
xchg
mov
add
dec
pop
and
subl
sub
mov
repnz
dec
jb
out
mov
test
faddl
or
adc
cltd
jmp
leave
out
movsb
icebp
shl
xor
out
xchg
cs
movsb
aad
add
sti
mov
mov
and
shlb
inc
ficomps
loop
jnp
pop
outsl
je
jecxz
pop
imul
cmp
mov
push
add
cmpsl
es
dec
jne
das
lret
jnp
dec
stc
cmpsb
idivl
ret
test
pop
movsl
cmc
cmc
cltd
mulb
sar
lods
mov
in
push
pop
cmp
and
mov
fwait
mov
xchg
loop
loope
mov
push
aam
push
stc
xchg
leave
in
or
das
cli
es
add
sub
xchg
xchg
sub
stc
mov
sbbb
loope
cmpsl
mov
insl
scas
arpl
sub
lahf
int
out
sub
js
call
add
fcomi
test
or
in
lret
out
mov
aas
adc
dec
push
lcall
fcompl
in
flds
pop
icebp
or
fcomps
stos
push
jp
scas
inc
pop
es
dec
idivb
nop
pop
inc
stos
sub
cld
mov
cmp
cmp
rol
lcall
fs
jg
xor
sub
xchg
in
jae
and
sarl
add
mov
mov
lods
stc
fisubl
sahf
dec
fdivrl
out
data16
repz
mov
mov
xor
mov
xchg
jle
or
insl
hlt
push
sub
xchg
inc
orl
jae
in
clc
imul
push
mov
imul
jbe
sbb
imul
lds
pop
movsl
push
push
push
adc
mov
xchg
in
pusha
sub
xor
mov
dec
jl
das
or
xor
sbb
pop
imul
or
int
jnp
push
loopne
addr16
shlb
pop
pop
pusha
push
mov
ds
pop
iret
loope
jo
adc
int
lea
in
add
dec
adc
shlb
clc
jge
cmpsb
popa
sub
lea
cltd
push
loopne
xor
mov
and
call
shl
out
mov
mov
lea
push
out
inc
jb
dec
jbe
loop
bound
sub
and
cwtl
jecxz
lock
jnp
jg
push
sub
xor
xchg
mov
mov
mull
jnp
popa
push
repnz
adc
pop
jnp
std
xchg
adc
rclb
mov
push
mov
xor
jo
cli
mov
imulb
loope
xor
scas
dec
push
je
dec
int
addr16
xchg
xor
dec
mov
or
int3
xor
inc
push
sbb
test
mov
imul
fcmovbe
xchg
jp
adcb
adc
stc
pusha
xchg
push
ss
pushf
test
int
sub
add
popf
jle
push
cmc
fpatan
mov
pop
jmp
popf
rcll
jl
or
outsl
add
and
mov
fdivrs
adc
push
fisubrl
and
jl
mov
in
jno
fstl
lods
out
out
xchg
das
pushf
shlb
es
popf
iret
xorb
mov
icebp
mov
sub
insb
popf
jg
cmpb
dec
outsb
mov
popf
and
into
push
mov
pushf
pop
mov
fisubl
or
pop
out
fcoml
xchg
mov
addb
pop
inc
stos
es
dec
push
and
mov
add
es
mov
iret
sbb
pop
ja
lock
push
cltd
cwtl
mov
mov
jo
and
subl
test
repnz
cmpsl
sub
aad
jecxz
mov
scas
adc
cld
je
sub
test
mov
cmp
mov
sbb
fmuls
test
popf
fs
shrl
in
jle
aad
outsb
js
pop
inc
pop
cmp
lods
push
inc
sbb
insl
mov
pop
sbb
ds
mov
sbb
push
daa
or
ret
jb
dec
xchg
lea
pop
decb
ret
xchg
or
fsubs
repnz
mov
mov
stos
aam
fmuls
faddl
addb
rcrb
adc
lret
cmp
inc
cwtl
aaa
jmp
ret
pop
ret
dec
lock
lock
stc
pop
scas
pop
push
jnp
cmc
xchg
push
repnz
andb
in
movsb
es
imul
pop
xlat
adc
mov
inc
rclb
pop
and
outsl
and
roll
repz
xchg
divb
cmp
ljmp
xor
xlat
add
pop
cmpl
jns
fdivl
mov
xchg
cltd
hlt
push
subb
stc
pop
mov
je
add
push
leave
mov
jmp
aas
push
xchg
sub
rclb
cmp
filds
movsl
push
mov
add
xor
sub
rcrl
jl
mov
or
aam
ljmp
add
imul
pop
std
add
mov
xor
repnz
ror
or
dec
push
scas
lods
adc
sub
pop
bound
pop
ja
lret
loopne
adc
push
hlt
cmp
fimuls
cmovg
int
das
inc
stos
xchg
push
xchg
sbb
icebp
jno
push
and
xchg
mov
push
mov
xchg
xor
mov
pop
add
push
bound
inc
std
push
xorb
ror
xor
lods
inc
jp
push
inc
es
pop
push
jle
mov
jne
lahf
adc
mov
imul
pop
test
dec
fbstp
jmp
push
lahf
and
incl
cmp
out
xchg
push
pop
inc
jle
shr
and
fcmovbe
lods
push
mov
repnz
je
mov
cmp
jg
andb
sub
xor
stos
test
dec
dec
inc
ret
sarl
adc
int
test
jne
dec
fstp
mov
pop
inc
cs
sbb
push
lahf
scas
jmp
pop
mov
lock
ljmp
add
lock
push
sbb
sub
cli
inc
ljmp
add
lock
push
sbb
sub
cli
inc
ljmp
add
lock
push
sbb
sub
inc
ljmp
add
shlb
shrb
sub
out
mov
jg
outsl
jmp
pop
and
xor
add
adc
pusha
lahf
jo
inc
mov
mov
cmpb
loopne
lock
shrb
and
xor
pusha
lahf
jno
inc
std
push
scas
mov
jg
outsl
loopne
lock
shrb
and
iret
jo
jne
pusha
fiaddl
loopne
int
scas
aam
rcll
adcb
ds
fsubs
sub
inc
sbb
or
sti
add
mov
insl
dec
or
jg
insl
nop
loopne
lock
cmp
aaa
mov
bound
ljmp
pop
pop
ficompl
mov
add
jg
ret
sahf
and
adc
sti
dec
ret
inc
push
mov
mov
outsl
mov
setns
mov
mov
mov
mov
insl
nop
pop
push
rcrb
cmp
pop
lods
and
cmp
xor
push
and
outsl
xchg
lret
push
andb
stos
jne
lock
jp
test
push
scas
arpl
dec
cmpb
loopne
lock
shrb
and
xor
add
adc
pusha
lahf
jo
inc
mov
rorl
push
push
test
imul
jg
mov
push
test
and
pop
les
jg
sbb
test
das
push
cmpsl
push
mov
xchg
cld
adc
inc
push
mov
pop
cmc
or
aas
shrb
and
xor
add
adc
pusha
lahf
jo
inc
mov
mov
cmpb
loopne
lock
shrb
and
xor
add
adc
pusha
lahf
jo
inc
mov
roll
sbb
roll
mov
inc
dec
jmp
aas
data16
dec
insb
inc
mov
mov
adc
jo
bound
outsl
jl
sahf
xor
test
shlb
adc
js
mov
cmp
das
sbb
outsb
testb
dec
int
pop
push
ss
jg
and
or
sub
roll
jge
jecxz
sbb
test
sub
push
mov
mov
xchg
mov
daa
xchg
cmpsb
xchg
dec
dec
jmp
xchg
cs
add
inc
jl
iret
repz
add
cs
cli
cmp
lods
neg
lcall
dec
sti
mov
push
dec
sbb
mov
filds
mov
nop
sahf
xchg
add
fxch
push
jb
xor
push
mov
lods
int
imul
sub
ret
es
xor
movsl
mov
push
pushf
push
mov
cmpsb
jmp
dec
iret
mov
or
mov
sahf
lahf
out
in
mov
dec
add
sti
xchg
xchg
and
movsb
jae
mov
scas
mov
xor
int3
cmp
jo
jae
or
rcrl
testb
cmp
jle
mov
cmpsl
mov
adc
pop
mov
push
mov
and
jl
dec
es
push
lahf
inc
mov
std
aaa
mov
movsl
mov
std
bound
xor
insb
mov
cmp
aaa
jo
ja
das
cmp
insl
xchg
test
ss
sbb
cmc
sahf
mov
jge
cmp
mov
ret
push
pop
scas
jnp
es
gs
aad
mov
mov
ret
mov
fcmovnbe
mov
ja
dec
lret
push
iret
mov
rcll
pop
rclb
push
sub
mov
ss
sub
lock
pop
in
mov
loopne
inc
ds
into
or
pop
cmpsl
orl
sbb
cli
mov
sub
inc
in
lods
dec
data16
test
pop
and
scas
out
sbb
jle
stc
sahf
ret
fildll
repz
cmp
daa
or
jecxz
into
cmp
cmp
fdivrp
lds
test
pop
push
sub
bound
rorb
adc
inc
adc
jl
xor
cmp
inc
arpl
sbb
call
inc
movsb
mov
xchg
je
sbb
mov
mov
or
adc
loope
inc
mov
mov
ret
push
fstps
mov
fcomps
rol
mov
pop
aaa
push
pop
mov
mov
loopne
in
dec
ja
xchg
mov
add
push
ds
mov
pop
fdivrs
pop
xor
lcall
sub
test
pushf
xchg
mov
dec
pushf
ret
inc
xor
fisttpl
loop
xor
push
inc
mov
dec
das
inc
rolb
repnz
ret
ds
vcvttps2dq
sub
inc
or
add
lock
push
je
mov
cmpsl
aas
call
xchg
jno
cmp
cwtl
add
mov
adc
out
xor
mov
sbb
das
mov
out
std
ficoml
sbb
jae
ret
xchg
cli
mov
rorl
js
sbb
ret
pusha
ror
testl
fsubs
push
or
pushf
and
pusha
sbb
or
sbb
pop
mov
mov
shl
adc
shrl
int3
pushf
jbe
or
jb
xchg
icebp
add
mov
push
mov
push
push
outsb
stc
jnp
jle
mov
sbb
ljmp
adc
push
jb
repz
sbb
nop
cld
xor
lock
or
add
scas
int
frstor
aas
sbb
jg
cmp
sbb
sub
pop
jne
sbb
mov
cmp
imul
cli
push
in
adc
mov
into
imul
adc
cs
or
je
loope
stos
push
mov
aaa
sub
push
jge
push
fists
xlat
cmpsl
repnz
ret
mov
out
sub
aaa
shll
xor
addr16
in
out
scas
orb
mov
mov
lods
nop
stos
ds
bound
mov
loope
stos
pop
repz
test
arpl
les
inc
dec
push
fdivrl
aam
inc
loopne
ds
clc
jne
mov
ljmp
or
jl
in
int3
loop
stos
stc
jg
xlat
call
rcll
das
xchg
in
adc
pop
push
inc
cmpsb
add
xor
ret
jne
or
ljmp
mov
xchg
pop
shll
mov
jo
push
stc
stos
divb
sahf
orl
pop
fcmovu
jbe
int3
pop
sub
sbb
dec
dec
inc
aaa
int3
in
jcxz
mov
test
out
sarl
mov
mov
popf
addr16
jb
pop
iret
mov
jge
jle
fdivrs
outsb
push
les
jl
daa
mov
and
das
aas
idivb
test
or
xchg
jbe
imul
push
jne
lock
mov
mov
lret
jns
cmp
loope
jne
fstpl
std
mov
sbb
orb
sbb
jle
push
jge
scas
hlt
ds
pop
cltd
dec
xor
mov
fbstp
cld
loop
push
fistps
testb
imul
cltd
dec
mov
push
mov
xor
or
jmp
jmp
or
mov
scas
jmp
sub
jns
jb
pop
aaa
out
arpl
jno
std
and
sbb
jno
xorb
sahf
cmp
sbb
cmp
stos
call
jle
pop
pop
ficoms
sbb
mov
mov
xlat
or
add
lods
jo
cmp
pop
mov
inc
jb
mov
adc
inc
imul
insb
out
lods
fisubrl
rorb
movsl
mov
jle
push
pop
or
rcl
lds
aaa
movsl
mov
cmp
lret
les
xor
data16
dec
push
inc
push
inc
mov
js
lcall
popf
pusha
sub
xchg
in
add
xchg
adc
and
mov
inc
sbb
int3
sbb
arpl
insl
xorl
mov
push
mov
jmp
sbb
je
xor
cli
jno
adc
mov
pop
ja
push
outsb
mov
mov
adc
jo
sbb
and
data16
sarb
inc
ret
daa
cmp
or
loopne
cmp
xor
xor
fmull
lock
cmp
mov
push
mov
incb
and
out
jnp
push
fimull
fldl
mov
jp
push
int
mov
xlat
stos
popl
cmp
xor
lods
test
lret
and
aaa
scas
xchg
nop
outsb
inc
or
cmp
ret
xchg
lahf
pusha
mov
cmpsb
hlt
cli
dec
or
add
mov
movsb
in
dec
push
cmpb
stc
ret
iret
jecxz
lods
lods
xchg
cmp
pusha
dec
andl
mov
je
movsl
cmpsb
push
sbb
aas
cmp
test
pop
inc
dec
cmp
arpl
lea
mov
push
dec
dec
mov
ljmp
mov
out
outsl
call
mov
addr16
mov
nop
add
jns
mov
sbb
jnp
push
xchg
lods
xchg
adc
cld
sub
pop
adc
sbb
adc
insl
in
cmpsl
mov
mov
add
xchg
enter
int
xlat
dec
orl
into
outsl
sbb
jns
xchg
fimull
ret
outsb
inc
sbb
imulb
popl
stc
jg
fistpl
pop
xchg
cmp
jmp
inc
pop
mov
push
cmc
jecxz
fcompl
push
xorb
mov
shll
fistpll
addr16
sbb
sti
sbb
xchg
cmp
sbb
adc
mov
repnz
pop
lods
cmp
jle
dec
add
push
das
pop
sarb
cmp
cmp
dec
inc
movsl
jge
orl
cli
mov
sub
and
lret
insl
cmp
cmpps
leave
push
inc
repnz
shrb
jg
xor
fnsave
loopne
in
fisubs
jo
cmp
fwait
lret
je
test
ret
push
pop
add
add
push
mov
pop
into
xchg
cmp
call
xor
enter
mov
mov
pop
int3
test
push
sub
and
shlb
out
sbbl
shll
stos
xor
push
xchg
out
pushf
shrb
es
jb
and
mov
xchg
xor
xchg
push
mov
mov
xchg
inc
stc
jge
lds
fmull
and
rcrl
aam
int3
mov
jmp
out
movsl
aad
mov
jo
mov
in
dec
sub
inc
shlb
xor
jnp
fwait
imul
adc
push
mov
xor
call
push
icebp
scas
sti
push
pop
testb
mov
mov
in
push
xchg
xorl
scas
jl
jle
xor
call
and
cmp
dec
mov
or
lret
mov
push
loope
jle
loopne
imul
sbbb
sub
int3
shl
and
add
mov
movsl
ret
or
xchg
cmc
xchg
sub
mov
jecxz
push
push
call
sar
jmp
push
or
inc
sarb
mov
sub
icebp
and
in
mov
int3
push
les
rol
xchg
cmc
inc
inc
mov
cmp
mov
rcrl
int3
mull
mov
mov
data16
and
add
push
pop
and
mov
inc
add
out
inc
and
sbb
repnz
lcall
jl
or
imul
mov
outsl
scas
sbb
sbb
jmp
arpl
sbb
jmp
add
fdivr
fwait
inc
out
loopne
insb
add
xchg
xchg
cmp
pop
push
fxch
jbe
push
xchg
dec
jns
and
in
sbb
mov
xor
daa
fildll
xlat
shrb
jecxz
mov
lock
jmp
mov
mov
adc
adc
enter
pop
jp
push
mov
push
and
popa
add
mov
jno
filds
add
xor
inc
ljmp
jb
cmpsb
and
lds
push
clc
push
mov
mov
stos
ss
mov
jae
push
shrl
xlat
sbb
rcll
inc
xchg
cmpsl
jl
fldt
fisubl
mov
jle
out
aaa
loopne
cmp
loope
repnz
xrelease
add
arpl
and
push
pop
lahf
xchg
pushaw
dec
mov
mov
xor
mov
lret
pusha
arpl
fadd
cmc
xor
xor
pop
mov
les
and
dec
lret
and
in
aad
pop
xor
jno
mov
test
lahf
fisubs
mov
lret
xchg
lret
fcomps
push
pop
mov
inc
mov
int3
jecxz
mov
ret
pop
addl
cmp
addr16
mov
repz
aad
mov
and
clc
cmc
rol
inc
int3
push
movsb
cltd
jge
div
xchg
mov
daa
or
divl
pop
pushf
ficomps
sub
out
dec
sarb
lods
xor
fstl
shll
cmpsl
pop
mov
mov
mov
jae
stos
push
pop
flds
jmp
sub
ss
sahf
dec
jnp
push
in
push
sbb
in
push
cli
xchg
pop
mov
sub
aas
sti
mov
mov
dec
sub
add
add
push
das
adc
ljmp
pop
xor
repz
lods
cmp
jge
adc
sub
ljmp
pop
shlb
fnstenv
aas
push
fisttps
mov
jne
imul
xchg
sbb
stos
lock
xor
and
aad
aas
dec
push
call
in
pop
loop
gs
call
jl
mov
inc
out
sub
stos
mov
jne
cmp
mov
cmpsl
mov
popa
and
inc
push
std
inc
aad
sahf
mov
movsb
das
test
jmp
call
jns
xor
scas
in
mov
pusha
cmp
jle
adc
jg
stc
jmp
lods
arpl
pminub
push
cmp
cmp
inc
pop
popa
daa
or
and
cltd
inc
lcall
and
push
adc
fsubrs
inc
push
cmp
sahf
jmp
push
jnp
jns
sbbl
and
out
add
pop
push
adc
ja
lea
or
int3
add
adc
jle
push
cmpsb
stc
arpl
jle
popf
lods
test
push
lods
mov
pop
outsl
push
ja
adc
addr16
cmpsl
out
pushf
jmp
fidivrl
push
inc
fwait
pusha
mov
mov
popa
xor
imul
xchg
add
filds
sbb
sbb
pop
adc
int
out
das
fldenv
push
repz
aaa
and
jg
xchg
jns
movsb
pop
cmp
mov
loopne
or
jno
ret
add
pop
push
ljmp
lock
pusha
into
pop
data16
dec
mov
rcrb
in
adc
mov
stos
add
push
and
cltd
inc
adc
fadds
dec
jge
ret
sahf
mov
xor
xchg
adc
xchg
fcoms
bound
mov
mov
adc
orl
mov
in
les
int3
test
mov
inc
aaa
pop
sti
in
push
lahf
aas
sti
pop
leave
jmp
push
mov
repz
jmp
outsb
adc
and
cltd
mov
jno
jo
xchg
mov
inc
push
push
ret
pop
cwtl
pushf
sti
mov
rcl
xchg
ret
insl
mov
imul
mov
fdiv
out
popa
int
jb
sbbl
lahf
adc
jne
xchg
add
pop
cmp
out
jl
add
addr16
mov
ss
pushf
xor
pop
jno
add
adc
xor
pop
mov
mov
push
aad
cs
fs
out
clc
enter
sbb
scas
mov
aas
arpl
jmp
pop
lcall
ret
lods
movl
xchg
filds
push
popl
or
or
add
mov
inc
and
popa
jnp
mov
cmp
movsl
xchg
fbld
pop
push
shrb
imul
arpl
ret
pop
es
or
nop
aas
dec
out
sub
push
jbe
push
clc
test
lahf
stc
or
xor
mov
mov
pusha
mov
push
arpl
cs
jle
in
scas
lret
xchg
sbb
mov
pop
insl
in
push
xorb
cld
xor
jg
xchg
ljmp
xchg
or
push
test
xchg
pop
xor
mov
mov
test
ret
mov
pop
pop
movsl
jmp
add
sub
sub
jno
repnz
xchg
cwtl
sbb
std
pop
enter
adc
add
js
push
lret
add
sbb
sti
push
movsb
outsb
lcall
stos
dec
cli
roll
aas
mov
xor
imul
sbb
lea
pop
aaa
xor
mov
sar
and
dec
adc
stos
mov
test
leave
xor
xchg
add
fwait
xchg
dec
fs
lds
stc
andb
popf
xorl
push
mov
fisttpll
push
cltd
cmp
dec
nop
xchg
xor
frstor
xor
pop
lcall
fsubl
popa
mov
rorb
pop
adc
ja
xchg
roll
out
stos
leave
mov
pop
mov
mov
and
addr16
jae
das
dec
dec
push
jecxz
dec
out
mov
jmp
lds
jecxz
pop
fmuls
and
xorl
mov
imul
loop
out
inc
mov
nop
shll
cli
xchg
xor
mov
insl
fwait
jg
repz
push
pop
xor
fxam
fs
push
js
xor
inc
popa
adc
push
xchg
scas
jbe
out
roll
iret
into
lock
enter
and
push
mov
sub
out
in
cs
mov
lods
fidivl
sbb
pop
jmp
mov
pusha
xchg
in
loopne
and
mov
xor
shlb
arpl
loope
fcompl
jne
movsl
outsb
scas
addr16
cmp
ljmp
pushf
mov
jle
cmpsb
movsb
push
and
cmp
movsl
push
fmull
jecxz
ret
push
fwait
jb
push
inc
dec
in
enter
incl
jp
ja
mov
push
mov
or
lret
aam
bound
lds
mov
push
push
out
rolw
lods
jo
cld
pop
movsb
imul
lods
mov
inc
add
sbb
dec
pop
or
mov
cmp
add
sub
nop
jne
or
aas
jae
dec
pop
fistpl
adc
push
shll
sub
cmc
push
pop
jl
push
push
mov
pop
lcall
pop
in
inc
inc
adc
push
sub
add
sbb
lret
jecxz
cmp
ret
test
divl
add
iret
shrb
xlat
or
xor
stos
push
sub
gs
xor
test
or
dec
pop
jno
push
lea
and
xchg
xor
data16
out
dec
sub
icebp
imul
inc
std
outsb
push
cmp
enter
inc
mov
add
loope
scas
mov
dec
add
push
pop
aam
mov
or
sahf
push
pop
ffree
push
subl
jno
or
aas
pop
or
in
pop
inc
jmp
loop
or
dec
cmp
or
addr16
int
das
mulb
sub
lret
cld
jl
adc
cmpsl
xlat
push
cmpsb
pop
subb
cli
adc
jb
testb
sub
ds
inc
incb
jge
jae
pop
jle
xor
aad
aad
sbb
mov
arpl
ret
inc
je
or
pop
sbb
sbb
fidivrs
sub
xchg
xchg
and
xlat
cmp
movsl
sbb
jb
mov
push
add
dec
fistpll
sbb
imul
pop
mov
add
inc
dec
dec
inc
in
adc
or
jae
sahf
aam
inc
out
sahf
and
ret
mov
fstpl
and
adc
lret
call
lods
loope
dec
add
pop
jge
dec
lahf
mov
pop
jno
mov
mov
inc
adcl
int3
and
adc
xor
repnz
sbb
add
mov
cltd
or
add
mov
outsl
sbb
add
loope
jmp
sub
fldcw
sbb
push
sahf
dec
fcomps
xchg
or
fnstcw
enter
test
adc
pusha
frstor
movsb
sub
dec
add
icebp
ds
movnti
or
sbb
cwtl
inc
pop
jbe
sub
lea
mov
mov
adc
inc
mov
lods
cmp
inc
pop
aaa
pop
notl
mov
rorb
loope
add
xor
mov
ds
mov
stos
test
pop
adc
cmpsl
rcll
push
or
inc
cltd
xor
jno
cmpl
arpl
imul
xchg
or
lcall
pop
mov
fcoml
ds
loopne
cmc
out
xchg
push
mov
mov
xchg
adc
adc
aad
out
cld
pushf
sti
fldt
mov
js
inc
inc
cmp
js
pushl
aam
cs
cwtl
pop
mov
sub
sahf
jo
rcll
in
int3
xchg
mov
jo
sbb
and
ja
mov
mov
mov
xchg
mov
xlat
pop
out
push
aaa
inc
leave
adc
mov
fsubs
mov
inc
and
mov
test
push
fdivl
fdivs
mov
pop
fs
xchg
icebp
dec
push
dec
mov
cli
and
mov
leave
hlt
cld
mov
mov
loopne
out
pop
lcall
les
jnp
xorl
cld
aam
mov
imul
or
pop
das
mov
xor
mov
mov
sbb
outsl
les
jl
pop
jb
pop
addr16
ret
sahf
cmpsb
movl
ljmp
fldt
insl
negl
jmp
mov
sub
leave
pop
adc
jmp
int3
popa
lea
inc
mov
gs
stos
sbb
push
cmp
sbb
stos
pop
out
sahf
aam
and
mov
push
addb
mov
out
push
ja
imul
daa
out
lods
mov
adc
popa
push
addr16
sti
scas
insl
pop
push
sub
jnp
nop
push
cmp
inc
or
mov
push
cmc
int3
ficompl
mov
dec
mov
pop
lock
shrb
and
xor
add
adc
pusha
lahf
jo
inc
mov
mov
cmpb
loopne
lock
shrb
and
xor
add
adc
pusha
lahf
jo
inc
mov
mov
cmp
outsl
loopne
icebp
pop
aas
shrb
and
iret
add
adc
pusha
lahf
jo
inc
mov
mov
cmpb
loopne
lock
push
das
iret
gs
call
cwtl
pop
pop
clc
jo
inc
test
add
xor
inc
int3
and
gs
xor
shll
loope
icebp
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
sub
icebp
mov
shl
push
mov
jmp
sub
in
mov
leave
mov
mov
mov
inc
pop
aas
and
and
ss
lcall
mov
mov
jge
sbb
in
out
in
lret
mov
add
in
in
popa
cld
jae
in
andl
lea
mov
push
push
push
jnp
pop
mov
sub
inc
mov
mov
mov
shll
int
fldl
mov
fidivl
cmpb
andl
dec
icebp
loop
push
sbb
add
lods
hlt
mov
sub
xor
es
icebp
test
rcll
incb
iret
dec
mov
popa
inc
int
rcll
dec
addb
pop
inc
inc
mov
movsl
add
adc
xlat
mov
inc
or
xlat
icebp
cmpl
push
and
jne,pn
jle
dec
jno
addl
mov
rorb
adc
push
push
sub
and
ret
xchg
sarl
fisubrl
jge
inc
xor
adc
adc
jno
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
mov
jecxz
icebp
pop
mov
sarl
add
ret
pop
pop
jecxz
cmpl
cltd
push
iret
cmp
push
push
es
and
cmp
xchg
int
xchg
mov
sbb
int
xor
sub
cwtl
xor
fdivp
out
out
ja
mov
mov
pop
pop
mov
mov
outsb
mov
cwtl
sub
push
xchg
inc
pop
cmc
push
ja
xor
or
cmpsb
aam
sbb
fisubrl
lods
cmp
les
jg
and
psrad
imul
and
addr16
mov
popf
popa
mov
or
repz
lret
dec
mov
adc
mov
xchg
cltd
jne
sbb
jnp
and
or
mov
add
inc
repz
xchg
es
aaa
in
fisubl
mov
mov
jne
or
test
scas
das
inc
in
mov
or
aas
mov
insb
adc
lods
cmc
adc
jbe
call
mov
outsb
inc
mov
jns
rclb
xor
jmp
cld
push
out
push
mov
ds
iret
movsl
nop
mov
cltd
loopne
and
sub
cmpsl
dec
out
fiaddl
loop
sbb
mov
frstor
leave
iret
sbb
rorb
xor
andl
pop
mov
cmp
sbb
stc
addr16
test
aad
cmp
lods
push
call
or
nop
addr16
sti
loopne
mov
cltd
add
xor
sub
int
add
and
and
test
push
imulb
push
ljmp
or
call
inc
shlb
pop
cmp
jp
or
in
mov
ret
ds
cs
stos
jbe
jecxz
jb
push
push
int3
sahf
cmp
mov
loop
and
inc
repz
jle
jmp
jg
push
lock
cmp
inc
addr16
xchg
sub
push
rcll
scas
lahf
divb
mov
push
jge
adc
aam
in
rorb
loope
repnz
or
pop
aaa
mov
dec
sub
sub
loope
loop
enter
and
rol
lods
sub
mov
and
mov
xor
pop
xchg
push
xchg
mov
out
test
mov
scas
sub
jnp
shll
and
in
jmp
cltd
xchg
xchg
mov
hlt
push
pmaxub
pop
rcrl
fld
bound
inc
imul
clc
pop
ljmp
ret
in
sti
rol
les
or
test
aam
cmpxchg
in
shlb
cmp
mov
jns
cld
pop
fisubrl
repnz
lea
int
or
cli
sub
shrl
insl
sub
jb
aam
out
mov
test
aaa
and
ja
xchg
add
lods
loope
fnstenv
shlb
into
jmp
or
mov
xchg
xchg
shld
or
dec
fwait
lods
fwait
xchg
aas
cltd
mov
mov
mov
sbb
lods
jmp
xchg
sub
sbb
or
aas
iret
mov
cmpsb
jne
into
lahf
push
sbb
push
loopne
sti
mov
test
inc
jge
mov
mov
nop
jb
jns
out
mov
inc
push
push
cmp
loopne
stos
push
cld
mov
add
or
mov
stc
adcl
sub
out
mov
scas
xlat
dec
mov
je
mov
mov
inc
int3
mov
mov
mov
xchg
sbb
pop
std
jnp
mov
ret
or
cmp
std
mov
and
test
sbb
jae
jp
mov
insb
lea
inc
ret
adc
les
sbb
xchg
mov
fsubl
stc
inc
clc
pop
movsl
ss
arpl
jae
xlat
fs
int3
push
cmp
cli
das
jns
adc
ljmp
push
sbb
sbb
les
out
dec
stos
xchg
push
ss
and
dec
mov
and
lcall
and
adc
mov
fsts
int
idivl
jmp
mov
jecxz
add
jmp
fists
fsubr
cs
xor
ds
lods
push
fcmovne
daa
fcompl
jnp
jp
mov
mov
fdivs
jp
mov
test
sbb
sbb
mov
push
test
stc
stos
addr16
shl
inc
sub
adc
xchg
xchg
test
jmp
push
and
sbb
mov
push
cmpb
sti
mov
pop
aad
pop
das
push
and
sahf
sbb
idiv
cwtl
cli
mov
je
testl
xchg
mov
imul
pop
mov
mov
mov
cmpsb
je
lods
cmpsb
mov
aaa
push
mov
mov
mov
pop
cmp
push
dec
test
dec
rsqrtps
repnz
or
data16
incb
mov
addr16
nop
push
jecxz
fcomi
and
xchg
or
or
push
gs
shl
and
jbe
mov
sbb
neg
push
mov
jo
jns
cs
xor
sbb
out
jle
outsl
cmp
adc
scas
fstpt
icebp
mov
or
or
inc
pop
and
or
dec
fdivl
add
ja
mov
dec
fcoms
jmp
divb
or
cmp
mov
imul
ljmp
call
int3
push
mov
inc
jbe
fsubrp
dec
dec
mov
out
pop
ret
outsb
xlat
pop
movsl
mov
or
sahf
mov
adc
int
iret
insb
aad
stos
cwtl
nop
jb
mov
pop
fsubs
rcrl
xor
mov
hlt
lahf
rcrb
cmp
ss
and
cmpsb
and
jg
iret
xchg
or
jge
cmp
fs
inc
and
push
repnz
mov
call
lcall
cs
aad
pop
dec
mov
hlt
daa
stc
jmp
imul
pop
add
push
jbe
jbe
jg
or
mov
or
or
inc
sub
mov
rolb
or
push
aaa
jae
cmc
sarb
push
cmpsb
mov
or
or
fwait
es
fwait
shll
cwtl
pop
clc
fdivrp
mov
pop
and
out
repz
incl
mov
push
test
out
dec
or
cmpl
sbb
movsb
mov
xchg
int3
cmpsb
pop
mov
insb
push
test
adc
sub
dec
or
jl
and
std
jp
icebp
mov
sbb
fcompl
es
aad
mov
cli
jno
fwait
sub
sub
fstl
ljmp
es
dec
into
sbb
mov
adc
cmc
xchg
cwtl
icebp
mov
test
cmp
push
cld
inc
movsb
lahf
pusha
shl
test
sbb
push
cmp
hlt
mov
jnp
mov
es
jo
aas
js
fsubrl
int
jge
mov
sub
imul
inc
jns
inc
mov
inc
pop
lcall
xchg
or
dec
lcall
push
and
xchg
fldt
xchg
xor
arpl
std
xchg
nop
pushf
sub
jg
lahf
hlt
aas
pop
xor
xchg
out
push
inc
out
mov
xor
xchg
lds
push
movsb
les
push
jle
pop
movsb
mov
pushf
cmp
or
jg
ds
dec
cld
lea
adc
ret
pop
fwait
xor
lea
ss
mov
outsb
xchg
mov
mov
sub
push
imulb
inc
ja
mov
sahf
call
or
mov
inc
xor
sbb
gs
jg
sbb
dec
xor
fwait
pop
lret
out
out
mov
xchg
cmpsl
pusha
js
scas
sarl
jb
sbb
mov
scas
popa
mov
lods
inc
out
sti
idivl
int3
pusha
test
hlt
lret
xchg
cmc
pop
lock
jae
or
in
xchg
xchg
add
xor
insb
xchg
inc
mov
hlt
psubw
and
je
nop
iret
xor
scas
push
cli
push
xor
rolb
or
inc
call
push
pop
cmp
aas
cmpsb
mov
inc
xchg
xchg
add
sub
andl
xchg
xor
out
std
es
mov
adc
shll
in
jmp
xlat
test
cs
stc
sub
jo
dec
jecxz
repz
and
mull
cli
out
and
imul
fdivp
xlat
mov
jnp
fstl
xchg
mov
push
pushf
adc
adc
imul
jp
jle
das
or
sar
pop
ja
scas
inc
loop
adc
stos
push
or
aaa
push
lahf
aas
pusha
cmp
jo
cs
mov
cmp
fs
dec
aaa
mov
div
scas
push
jo
std
add
std
adc
adc
loop
inc
push
clc
imul
jmp
leave
hlt
fcmovnu
lea
es
add
loope
dec
outsb
int
xchg
cmc
out
push
subb
lahf
or
pop
push
in
dec
insb
adc
pop
mov
fcmovb
cli
gs
and
mov
sbb
xchg
xchg
in
rcrb
fldcw
repz
insb
aas
aam
rorb
sbb
enter
lret
xor
sub
xor
xchg
pusha
hlt
negb
imul
sub
lods
xor
xor
mov
call
std
repnz
aad
jl
and
adc
mov
cwtl
ficoml
mov
dec
movsl
scas
dec
jae
scas
stc
xchg
enter
das
mov
xor
cmp
insb
inc
aaa
fdivl
les
out
into
jb
dec
mov
and
stos
insb
jno
out
jnp
int
fdivs
mov
or
test
adc
pop
sahf
dec
push
fadds
movsl
test
lods
mov
ds
mov
xchg
rcl
in
in
add
mov
cmc
scas
int3
cmp
and
mov
lretw
insb
sbbl
inc
fs
scas
adc
sbb
insl
push
inc
pop
inc
fdivr
xor
pushf
xchg
mov
ret
lock
rorl
adcl
cmpsb
or
jmp
int
jne
xlat
mull
stos
cmp
out
ret
mov
dec
insl
int
mov
pushf
pop
shll
pushf
and
mov
fwait
shlb
jge
adc
and
out
bound
fbstp
jo
and
jb
push
pop
cli
popa
sbb
icebp
fnstenv
mov
cltd
jge
pusha
roll
js
leave
in
les
out
pop
mov
cli
repz
xchg
sar
dec
sbb
dec
mov
sahf
mov
in
int3
push
dec
loop
je
movsb
adc
scas
dec
shl
out
pop
ret
add
add
mov
ljmp
in
push
cmp
test
sbb
add
inc
icebp
fnsave
loopne
in
addr16
dec
push
sbb
cs
xor
sub
xchg
call
je
xor
jecxz
jmp
movsl
push
cli
das
mov
mov
test
dec
rclw
loop
pop
cmp
sbb
enter
inc
dec
fildl
cvttps2pi
das
push
mov
into
cmpsl
mulb
sti
push
aad
sub
xchg
pop
or
xor
mov
jg
or
sub
mov
lea
out
pop
repz
jo
cmp
cmp
andb
fwait
je
mov
arpl
and
dec
xor
insl
in
push
mov
icebp
jae
cmc
dec
mov
jmp
icebp
add
imull
jb
pop
outsl
adc
cmovg
add
xchg
cmp
insb
sti
lcall
ror
mov
push
add
mov
js
mov
inc
and
lahf
jge
xlat
aaa
jmp
std
sahf
mov
lea
loopne
pop
dec
repnz
xchg
je
jnp
jle
mov
cmp
fucomi
lods
loope
mov
dec
insb
jnp
or
enter
jmp
and
pop
nop
sbb
popf
xchg
push
loope
add
fsubs
sub
pusha
dec
sub
cwtl
fwait
pop
fs
mov
adc
pop
mov
mov
jmp
and
xor
idivb
ljmp
mov
mov
xorl
cmpsl
push
and
mov
mov
inc
pop
and
xlat
xchg
fcomip
stos
repz
mov
outsl
les
xlat
mov
cli
dec
cmc
mov
mov
fcmovnbe
xor
adc
add
cmp
out
mov
xchg
inc
jae
or
dec
add
add
lds
enter
xchg
rol
inc
lret
mov
pop
aaa
mov
sarl
mov
xchg
popf
or
xor
push
iret
sub
aas
xor
cwtl
nop
scas
sub
imul
adc
rcll
mov
es
shr
cltd
jbe
sbb
or
and
jmp
cmpsb
dec
xchg
outsb
inc
cltd
sbb
repnz
lret
mov
push
mov
dec
push
mov
sahf
xchg
mov
decl
xchg
jno
inc
or
add
sbb
xor
xchg
mov
imul
mov
push
and
js
cld
aam
xchg
push
popf
inc
xor
jnp
jge
and
mov
call
jp
push
jne
cmp
cmc
data16
imul
or
insl
gs
mov
sub
xchg
aas
lds
cmc
nop
enter
repnz
cwtl
jne
mov
in
call
sbb
out
cmpsb
aas
icebp
lock
stc
pushf
aaa
call
push
and
xchg
mov
sub
arpl
mov
add
mulb
adc
dec
push
sbbl
sbb
push
scas
shll
je
mov
hlt
icebp
cmp
inc
pop
pop
or
mov
out
addl
ds
lods
repz
sub
cltd
movsl
cltd
pop
inc
ja
jle
sti
jne
imul
push
adc
mov
inc
call
dec
xchg
jle
rcrl
sub
pop
gs
or
lahf
or
mov
das
icebp
mov
mov
cwtl
lds
sub
cmpsl
mov
adc
les
stc
out
cld
push
outsl
fs
adc
xor
jns
sub
jnp
orl
jne
rcrb
xchg
jns
negl
push
fdivr
ljmp
jmp
xchg
pop
fld
mov
jns
mov
inc
mov
pop
or
popa
jle
xchg
cld
xor
pusha
ficoms
aaa
fiaddl
aad
pushf
adc
xor
fisubrl
inc
fidivs
fildll
in
add
test
xchg
es
leave
jns
insl
inc
jp
dec
leave
dec
fnsave
pop
sahf
add
jmp
push
push
push
lcall
out
mov
out
add
scas
adc
adc
rcl
xor
mov
push
sbbw
xor
ljmp
mov
xlat
popa
mov
add
sbb
je
outsl
aas
mov
insl
call
adcb
add
mov
xchg
cli
inc
pop
lret
in
lods
pextrw
xchg
in
scas
adc
jecxz
out
insb
lea
push
pop
and
into
or
mov
lahf
or
imulb
pop
orb
lret
xchg
inc
in
push
out
mov
lret
add
or
dec
pop
and
add
push
and
dec
enter
lret
movsb
push
icebp
dec
jecxz
push
stos
add
test
jne
mov
sub
test
scas
xor
sub
mov
repz
lods
cwtl
cmp
sti
adc
insb
inc
add
adc
or
int3
sbb
aad
mov
ds
inc
gs
cmp
rorb
inc
jo
mov
cmpsb
inc
repz
cmp
pushf
stc
xchg
movsb
shlb
stc
aaa
js
std
sbb
adc
sbbb
imul
jbe
imul
xlat
pop
aad
lods
xorl
mov
pop
pop
mov
rcrb
xor
xor
sub
icebp
loope
mov
popa
xchg
mov
mov
fsubl
and
sbb
cmpsb
ja
and
xchg
cs
dec
icebp
lcall
sub
and
and
adc
xor
push
jnp
mov
push
xchg
aam
addr16
sbb
rclb
test
loope
insb
sub
repnz
imul
sub
add
fsubrl
je
std
sub
int
push
cmp
pop
imul
jmp
call
insb
mov
daa
mov
xchg
xchg
or
in
inc
loopne
bound
js
int
and
daa
sbb
es
mov
fadd
cmp
mov
shlb
pop
ja
jle
ficoms
jecxz
push
mov
push
mov
rcrl
cmc
ljmp
aaa
cmpb
hlt
adc
xchg
ret
in
cmp
inc
jmp
movsb
xor
or
cmp
mov
cmpsb
nop
jl
add
pusha
mov
cwtl
inc
testl
cmp
cmp
sti
je
lret
cwtl
les
lods
xor
in
mov
fnstcw
mov
loope
aas
pushf
jmp
loopne
adc
adc
or
cli
gs
inc
mov
adc
mov
xor
jne
rclb
fcomi
js
jmp
pop
mov
out
loopne
pop
and
or
sbb
test
mov
xchg
mov
shll
test
inc
xchg
mov
pop
cmp
fstpl
dec
shlb
loop
inc
dec
sub
mov
adc
fsubrl
add
mov
mov
inc
and
pusha
pushf
sti
jp
pop
out
adc
dec
jmp
out
repnz
test
cmp
loope
imul
mov
dec
addb
xor
pushw
lods
mov
sub
cmp
outsl
xchg
out
cmc
push
in
hlt
mov
push
fnsave
into
frstpm(287
bswap
fmulp
cmp
hlt
pop
inc
fldl
and
into
aad
and
scas
shrl
imul
mov
dec
jmp
jmp
xor
fstl
pop
push
lea
xchg
mov
jae
shl
or
jno
std
mov
ja
shrb
inc
xchg
and
nop
cmc
pop
and
imul
sbb
sbb
inc
and
fstpl
setnp
mov
lock
fimull
add
js
mov
lret
cwtl
jmp
loope
dec
sub
ss
bound
insl
add
jp
mov
clc
xor
jecxz
xlat
lods
inc
ds
jp
insb
lds
repz
mov
push
in
sti
ds
mov
cltd
add
lea
leave
mov
fucomp
or
out
inc
push
rorb
push
mov
dec
push
push
outsb
jo
or
pop
and
out
push
in
lods
lds
lds
xor
add
cli
cltd
scas
stc
mov
cmp
cmp
repnz
jmp
stc
mov
rcr
inc
movb
jnp
push
or
out
mov
cmp
sbb
cmpsb
sbbl
notb
lods
adc
sub
pop
mulb
scas
push
shll
xchg
lcall
xorb
inc
aad
lods
insl
add
sbb
ljmp
movsl
int3
insl
dec
addl
fwait
call
nop
adc
xchg
rcrl
out
dec
loop
mov
adc
inc
push
es
loopne
mov
addr16
jmp
xchg
mov
repz
mov
and
ljmp
push
std
xlat
shll
lock
sub
cmp
sub
mov
mov
push
pop
and
subl
jae
pushf
iret
and
sub
jbe
push
cmp
pop
in
enter
or
in
and
jmp
lods
cmp
movsb
push
push
xorb
in
in
mov
pusha
arpl
jnp
in
pop
sub
jle
aaa
enter
leave
push
outsb
movsl
xchg
mov
add
push
add
push
jnp
mov
sub
push
iret
jl
cli
sub
dec
aam
push
popf
enter
sub
mov
lds
and
cmp
out
pusha
mov
jp
jp
lcall
pop
into
sub
repnz
inc
cmp
movsb
out
mov
fucomp
jecxz
mov
fnstcw
and
mov
cmp
mov
mov
pop
scas
xchg
invd
repz
gs
sbb
insb
dec
push
push
push
dec
inc
xor
in
add
or
push
adc
jno
add
mov
roll
mov
inc
adc
popa
xor
add
popa
and
add
mov
roll
mov
inc
and
inc
sbb
jno
add
popa
and
rcll
mov
roll
mov
inc
dec
push
jnp
adc
add
popa
mov
outsb
jnp
loope
xchg
pop
push
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
int
fst
in
mov
out
mov
ret
dec
pop
sbb
jl
or
bound
xchg
in
mov
popf
shrb
add
insl
sub
int
sbb
jb
and
push
in
cmp
les
call
jle
add
inc
or
adc
xchg
mov
xlat
inc
int
sub
mov
pop
pop
jl
cmp
test
add
xlat
popf
pop
push
sbb
fsubr
xchg
fldl
or
popf
ljmp
push
cs
test
insl
and
scas
dec
mov
mov
sbb
xchg
mov
sub
mov
repnz
fstl
xor
push
pop
fildll
push
cmp
dec
aam
popf
shrl
and
push
movsl
and
inc
call
sub
inc
jge
cmp
xor
insl
xlat
jbe
dec
lea
and
lods
inc
xchg
hlt
push
pop
pop
sub
sbb
push
fnsave
ret
lods
loop
pusha
dec
add
insl
and
or
jp
inc
mov
xchg
fimuls
xchg
mov
bound
add
cmp
test
mov
fimuls
mov
shrl
or
outsl
jo
add
dec
add
into
xchg
faddp
mov
repnz
add
insl
and
or
bound
xchg
in
mov
popf
shrb
add
insl
and
or
bound
les
rcrb
lahf
fildl
dec
int
dec
insb
push
mov
inc
adc
add
and
or
data16
cmc
or
in
into
mov
or
cmp
push
or
scas
sub
test
jmp
testl
push
add
scas
into
jns
imul
aad
sbb
enter
xchg
push
je
out
test
fldcw
scas
ret
mov
out
add
in
out
ss
dec
stc
scas
add
cmpsl
xlat
scas
jnp
movsl
mov
push
adc
mov
jmp
ja
cmp
int3
or
jno
xchg
scas
mov
inc
dec
xchg
gs
pop
xor
cltd
out
dec
push
scas
test
mov
fidivrl
pushf
xchg
mov
lock
add
bound
inc
sbb
std
dec
ja
scas
popa
push
iret
pop
fs
xchg
pop
loope
pop
sbb
pop
and
out
mov
lret
xor
push
mov
cmpb
loope
popf
and
and
daa
aaa
mov
nop
les
add
sub
jo
mov
push
outsb
jns
stos
fidivs
dec
rcl
mov
pop
xchg
cmp
lock
cmp
pop
jmp
xchg
test
int
jbe
sysenter
int
pop
push
in
xchg
jmp
fs
cmp
dec
fistpll
or
push
and
out
push
testl
stc
inc
push
popa
test
loope,pn
or
int3
pop
aas
repz
jl
adc
daa
mov
push
repz
jp
inc
sahf
pusha
test
repnz
out
jo
cmc
mov
mov
cmp
adc
fmul
pop
jo
sub
rcrl
not
sbb
leave
fs
dec
in
lods
jbe
adc
push
and
fiadds
shl
xor
out
xchg
insb
fucomip
out
cmp
dec
fcmovbe
lahf
cld
les
xchg
pop
mov
dec
sbb
mov
xchg
mov
push
push
test
scas
sub
aad
mov
inc
cwtl
or
sbb
pop
movsb
cld
push
das
xlat
adc
mov
mov
adc
jg
sbb
mov
aad
adc
cltd
xor
das
cmp
repnz
cmp
sub
inc
and
push
aaa
mov
push
aas
int
jb
jg
inc
fisubrl
scas
clc
xor
ja
jb
iret
add
inc
cmpsl
pop
add
pop
push
and
icebp
roll
cmc
adc
xchg
inc
push
jp
mov
jb
lret
popf
jb
lret
outsl
cmc
enter
rcrl
insb
pop
test
ret
scas
test
shrb
xchg
pop
out
lcall
mov
loope
jbe
and
cltd
nop
jmp
jbe
push
push
or
mov
fimuls
std
dec
test
add
jbe
enter
xor
and
inc
or
dec
mov
aas
pop
push
jns
pop
pop
push
inc
inc
mov
adc
pop
aam
inc
jo
gs
and
xor
push
cmpsb
and
add
cmc
shr
jae
cltd
mov
jnp
xchg
push
mov
dec
push
mov
and
movsb
inc
pop
inc
push
pop
lea
cmp
fdecstp
cmpsb
test
stos
addr16
and
xorb
mov
dec
ret
jle
sbb
cwtl
lods
addb
dec
stos
scas
bswap
test
cmp
test
leave
je
loope
into
scas
jno
je
std
loopne
ljmp
fldenv
sti
jg
addr16
in
dec
outsb
cmp
xchg
jae
mov
mov
mov
pop
fisttpl
aad
adc
ds
pop
loop
cwtl
decb
and
inc
fcmovb
push
popf
sbb
repnz
cmc
imul
adc
mov
fiadds
mov
jge
mov
adc
mov
mov
fwait
mov
lea
and
lock
pop
mov
das
ret
cwtl
hlt
mov
cmpb
xchg
sub
jmp
jge
mov
and
push
enter
add
and
xchg
push
andb
cmp
rolb
repnz
fdivs
jbe
dec
loopne
jmp
movsl
dec
daa
aam
push
pop
sbb
jbe
jb
lods
repnz
sarb
in
cmp
arpl
cmpl
cwtl
cmp
push
mov
and
xchg
cwtl
add
mov
outsb
mov
add
imul
mov
pop
sub
mov
jno
jg
mov
mov
xor
notl
popf
popa
fsubl
lcall
mov
xchg
fcmovb
jae
adc
cs
aad
and
push
mov
pop
sahf
pusha
adc
mov
xor
jbe
loopne
sub
dec
push
adc
or
xor
jbe
jge
lahf
leave
push
or
out
jae
rorb
loope
pop
push
stos
gs
sbb
loope
fsub
xchg
inc
dec
test
xchg
xlat
clc
in
popa
jle
mov
call
pushf
ret
mov
scas
loop
aad
lea
push
mov
lahf
and
dec
int
xchg
adc
es
lcall
dec
or
add
stos
cmc
mov
stc
lods
push
mov
orl
fildll
sbb
pop
test
in
lods
mov
inc
xchg
hlt
add
add
icebp
mov
aaa
ficomps
xchg
dec
pop
scas
xchg
mov
jno
fwait
les
push
xchg
and
cwtl
inc
addr16
out
imul
mov
ds
pop
xor
icebp
cld
push
pop
push
in
das
testl
dec
or
xchg
aas
mov
xor
and
mov
shlb
and
xor
jle
and
jmp
add
arpl
repz
cmpsb
sub
in
scas
xor
cmp
xor
leave
xchg
pop
rolb
jge
ds
stos
pop
add
sub
or
sub
and
xchg
xor
sti
mov
sbbl
fcomps
cmpsl
add
jo
push
pushf
xchg
and
cmpsl
mov
aam
xor
das
mov
lds
aas
push
adc
outsb
inc
or
test
mov
push
mov
lret
fiaddl
cmpsl
xlat
xchg
shl
push
or
insl
ljmp
sub
cmp
test
pop
jb
loope
fimuls
aam
mov
rcrb
andl
jno
xor
or
les
mov
mov
das
or
lret
jns
fs
adc
jle
aaa
fiadds
lods
cmp
lret
stos
loope
stos
mov
lock
jne
push
mov
xchg
outsb
dec
inc
test
rcl
mov
inc
mov
and
repnz
ss
notl
dec
pushf
mov
roll
das
cs
in
ret
sub
mov
mov
es
mov
pop
xor
jge
jmp
sub
jb
fstl
sbb
mov
not
flds
sbb
adc
xchg
stos
push
cmp
xlat
loopne
cmp
mov
dec
jp
xchg
push
fmull
mov
scas
sbb
push
add
out
cli
pushf
xchg
inc
mov
sbb
fiaddl
mov
lcall
inc
xor
push
movsl
mov
jmp
mov
popf
xor
push
add
add
call
call
imul
jmp
popf
mov
fidivs
xchg
jns
adc
ljmp
add
or
repnz
arpl
loope
dec
insb
pop
xchg
pop
jns
mov
xlat
sbb
push
jbe
push
fwait
adc
enter
ret
pop
push
mov
jge
and
mov
das
dec
loope
cmp
pop
xchg
push
lock
push
inc
ret
mov
clc
fnstcw
and
xchg
push
test
pop
int
mov
std
stos
insl
inc
aas
mov
imul
dec
out
in
add
mov
adc
icebp
shll
xchg
add
movsb
scas
addr16
and
jae
outsb
dec
jl
addr16
jae
inc
inc
cmp
js
jo
xor
inc
pop
and
sbb
push
fildl
jp
pop
testl
sar
mov
jbe
cld
cmp
out
fildl
wbinvd
pop
mov
repnz
fsin
or
repz
jne
aas
enter
jne
popf
dec
sub
pop
mov
roll
movsl
in
psllq
enter
or
orl
sub
adc
sbb
pop
inc
ja
jbe
mov
out
fistpl
imul
testb
push
xor
pop
in
push
xchg
clc
sbb
into
iret
fstpl
sub
and
inc
xchg
cmp
and
jl
sub
sbbb
or
jnp
int
jnp
test
mov
sbb
push
cwtl
in
inc
gs
fdivs
std
xor
cmp
xchg
fnsave
es
cmp
js
push
dec
mov
xchg
es
push
iret
jmp
hlt
scas
fisubs
fists
ljmp
pop
xlat
add
pop
sti
dec
rcrb
pop
mul
nop
mov
and
push
pop
inc
mov
pop
imul
xchg
mov
jae
sbb
ret
pop
xor
imul
hlt
mov
cld
and
and
sub
in
xor
jmp
outsl
sahf
mov
dec
mull
leave
movsl
fsubl
lahf
inc
and
stos
mov
dec
xor
mov
bound
pop
jo
into
mov
fildl
adc
in
push
or
dec
dec
xor
sbb
pop
scas
lahf
sub
sti
rclb
les
pop
cmp
test
test
inc
add
fisubl
mov
arpl
push
enter
and
push
push
xchg
outsl
test
mov
or
push
jg
shl
mov
stos
ss
shl
inc
lret
ljmp
xor
push
jl
lahf
pushf
or
xchg
jae
and
add
cltd
popa
std
or
dec
cli
repz
xchg
sbb
imul
sub
fldt
enter
mov
pop
adc
hlt
mov
sarb
arpl
fcoml
repz
cli
jle
fs
pop
lods
fwait
lret
jnp
repz
icebp
dec
loop
out
jnp
mov
mov
inc
inc
mov
mov
es
adc
shlb
mov
xchg
cmc
inc
push
loope
pop
andl
push
int3
jbe
mov
ds
jecxz
mov
inc
outsl
adc
jb
add
sub
mov
xchg
add
mov
inc
jne
xor
xchg
sbb
test
es
jge
sbb
outsl
add
mov
adc
mov
in
data16
xchg
mov
xchg
mov
cli
and
xor
stos
in
fidivs
rolb
clc
adc
popf
pop
add
leave
sub
popa
lahf
bnd
xor
or
push
in
test
cltd
or
push
add
stos
in
mov
out
pop
xor
rcrl
leave
push
push
mov
dec
mov
jge
pop
mov
mov
push
repnz
fst
daa
push
sahf
sbb
iret
or
je
mov
lcall
gs
mov
addr16
push
mov
pop
sub
push
mov
ds
or
sub
push
xchg
aam
or
inc
xor
cmc
loope
mov
xchg
dec
addr16
sti
jb
scas
mov
mov
out
cmc
or
cltd
mov
test
lret
ja
in
movsb
movsb
and
dec
stos
hlt
or
lods
sbb
pop
mov
pop
dec
push
sub
pusha
in
pop
inc
rorl
lret
jbe
inc
sub
enter
dec
and
pop
mov
mov
xor
test
adc
adc
cmpsl
into
xchg
je
and
lret
imul
pop
flds
jg
sahf
xor
xor
loopne
and
mov
loop
xchg
jae
pop
icebp
cli
icebp
or
dec
xchg
ss
sarl
addr16
lcall
mov
ret
clc
rcll
push
jnp
cmp
pop
dec
stos
mov
xor
dec
aaa
cmp
in
stc
fsubs
and
push
xlat
repnz
aad
add
pop
xor
inc
fcoml
xchg
adc
ljmp
pop
es
leave
aam
inc
sbb
adcb
les
lea
xor
mov
or
add
mov
je
mov
lret
xchg
data16
pop
nop
imul
subb
data16
addr16
sbb
pop
jg
and
in
in
xlat
into
or
push
hlt
outsl
pop
push
jecxz
mov
sti
aam
dec
dec
call
orb
sarl
das
test
and
mov
pop
lock
in
add
sbb
std
push
adc
push
loopne
lcall
jne
pushf
sbb
testl
fstl
sbb
or
cld
push
mov
cmp
xor
cli
push
or
ds
shlb
les
dec
in
add
add
arpl
sahf
sbb
cmp
leave
imul
cmpsb
mov
adc
out
mov
pop
or
lret
push
repz
jge
aad
lds
cs
mov
addr16
mov
or
popa
lret
fistpl
hlt
xor
sub
jne
or
mov
mov
inc
mov
mov
fwait
loopne
ljmp
imul
dec
andb
jno
fucomp
push
push
popa
mov
shll
mov
inc
adc
iret
push
jb
pop
pop
shrb
mov
pop
andb
and
xchg
cmpsl
mov
add
mov
scas
stos
sbbl
out
stc
ret
sbb
cmp
cwtl
mov
es
repz
lods
mov
lock
addr16
jecxz
or
stc
jl
and
jle
scas
out
sahf
jo
xchg
dec
add
in
stos
mov
lds
pop
shlb
and
dec
pop
and
mov
xor
and
stos
sbb
cmp
in
xor
cmpsb
pop
pop
out
mov
dec
dec
fxch
loope
out
sarb
call
scas
aaa
mov
stos
int
mov
or
jg
bswap
inc
cltd
movb
add
jecxz
push
fbld
push
popa
dec
clc
pop
insb
popf
orb
push
out
mov
or
add
lods
lcall
inc
dec
mov
xchg
das
ret
adc
clc
inc
mov
jmp
mov
orl
daa
pushf
inc
cmc
cmp
mov
nop
pusha
or
mov
fistpll
shll
and
call
pop
xchg
xor
or
loopne
cwtl
xchg
cmp
push
push
mov
cwtl
sbb
xchg
pop
mov
lret
out
sarb
mov
sbb
xor
mov
jl
leave
add
and
sbb
cmp
jg
mov
test
cmpsb
outsl
mov
loope
mov
inc
movsb
xchg
jecxz
sub
test
test
lcall
fldt
lret
pusha
mov
adc
dec
mov
addr16
xor
pop
cltd
test
mov
out
in
sbb
add
push
shlb
scas
out
cmp
loopne
jb
cmp
push
push
inc
je
addl
dec
rolb
mov
mov
and
daa
sub
cmc
lds
add
xchg
mov
pusha
dec
call
xor
push
pop
shrl
xor
mov
mov
push
iret
inc
inc
mov
sbb
dec
sub
repz
mov
lcall
pop
adc
jbe
mov
inc
cwtl
roll
rcll
dec
fisttpl
jbe
mov
lcall
mov
cmpsl
sahf
std
mov
popf
hlt
push
mov
enter
mov
adc
out
pop
subb
dec
and
mov
rorl
les
push
sarb
fnsave
nop
lcall
sub
inc
cs
fnsave
sub
cmp
test
or
cli
out
xor
or
in
xor
lret
push
mov
lods
jb
ret
call
jne
test
jnp
mov
filds
mov
cltd
stc
xchg
fs
incl
addr16
cmc
cmpsb
ss
mov
neg
lock
leave
leave
push
leave
lods
sbb
mov
sub
jecxz
fabs
aad
lahf
pop
xchg
or
adc
pop
mov
inc
inc
mov
movsl
jo
cmp
mov
xor
mov
jecxz
rorb
mov
lret
pop
lea
sahf
aad
cmpsl
adc
call
jl
in
cmp
ljmp
xor
sbb
lds
and
jle
adc
iret
clc
sub
jb
xchg
jecxz
push
sbb
sbb
ret
dec
mov
fiaddl
cmp
xchg
outsl
inc
ret
xor
mov
movsb
push
pop
xor
pop
ds
cmpsl
sbb
sub
pop
call
in
push
add
scas
cs
mov
icebp
add
lds
scas
jp
lods
or
cmp
aad
das
mov
addr16
lds
xchg
jae
imul
pop
test
aad
xchg
pusha
in
pop
ss
outsl
in
jg
ds
xchg
inc
and
je
mov
repz
popa
cmp
inc
and
push
xor
push
lcall
pop
push
ficompl
repnz
adc
sbb
lods
pop
dec
xchg
fdivp
push
push
in
lods
sti
sub
aad
int3
push
stc
gs
xor
in
out
aad
inc
sub
adc
sbb
outsb
cmpsl
xchg
mov
and
pop
cwtl
imul
movsl
xchg
and
jno
cmpsl
xor
mov
xor
sbb
add
xor
adc
push
mov
push
pop
loopne
test
das
mov
rolb
mov
loop
jno
push
lret
push
cmp
pop
cmpsb
inc
inc
inc
fdivp
sub
test
sbb
jae
loop
lret
adc
push
ret
fisubrs
das
mov
adc
pop
sbb
into
jae
lods
jl
cli
sub
testl
mov
fbstp
lahf
rcrl
fwait
in
cmpsl
icebp
xchg
dec
mov
in
and
sti
mov
pop
xchg
addr16
adc
hlt
aaa
mov
mov
and
or
adc
xor
fists
jmp
js
sub
imul
xor
add
dec
push
xchg
iret
loop
cmc
popa
and
stos
jmp
ss
insl
dec
pop
insb
xor
decb
jge
aas
cmc
push
int
mov
test
adc
out
scas
mov
inc
sbb
lds
cltd
in
clc
fadds
push
mov
je
xchg
push
adc
imul
sub
pop
nop
mov
lods
jae
xor
adc
in
dec
stos
mov
test
add
scas
mov
push
and
std
loopne,pn
in
mov
lea
cmp
mov
adc
stos
jb
cmp
sbb
jecxz
mov
lock
jmp
and
dec
inc
adc
sbb
ja
or
mov
nop
cwtl
sbbl
sbb
cmp
jne
mov
mov
test
jb
gs
pop
adc
daa
cmp
fisttpll
pop
cltd
clc
mov
imul
add
daa
mov
mov
fidivs
mov
loope
ret
shlb
loopne
lret
add
xor
rol
xor
dec
mov
cmp
add
cltd
xlat
pop
jb
testb
imull
push
stc
popf
and
cli
test
sub
test
lods
dec
push
xor
fs
test
mov
into
repnz
or
jge
mov
js
insl
imul
dec
hlt
dec
gs
mov
cwtl
out
dec
lret
shrb
cmp
xlat
rolb
lods
xor
std
sbb
cmpsl
add
sub
and
inc
ljmp
in
xchg
insb
cmpsb
movsl
cmp
and
fcomi
dec
jno
inc
mov
or
pop
and
jno
jbe
stos
arpl
enter
insb
imul
jmp
sbb
cmp
test
rcrb
testb
js
cmp
in
lcall
jns
mov
das
mov
pop
add
shlb
outsl
add
xchg
repz
jg
in
and
xor
int
or
unpckhps
inc
inc
dec
mov
sub
out
hlt
pusha
pop
mov
jno
stos
xor
add
xchg
fs
leave
arpl
jnp
call
mov
cmp
popa
int
repz
jae
xor
mov
lahf
pop
push
mov
scas
shl
inc
sbb
adc
mov
rorl
aad
in
frstor
push
jae
mov
inc
xchg
aam
cmp
cmp
mov
mov
outsl
dec
test
jp
jg
fwait
lret
fwait
jno
adc
ljmp
cwtl
mov
push
mov
stos
sub
pop
mov
leave
cmp
cmp
orb
dec
das
fmull
pop
fld
sahf
int3
rorb
in
push
cwtl
dec
data16
gs
in
cmpsl
std
mov
ret
lods
loop
repnz
add
insl
and
or
bound
xchg
in
mov
popf
shrb
add
insl
and
or
bound
pushf
insl
mov
popf
mov
dec
add
insl
and
or
imul
in
inc
std
repnz
ret
lods
bound
mov
jge
insl
sub
dec
or
add
xor
and
pop
cmp
adc
cmpl
icebp
into
loope
adc
add
xor
and
push
outsb
inc
jle
dec
popa
pop
xchg
scas
cmpl
icebp
into
loope
adc
add
xor
and
push
outsb
inc
jle
dec
popa
pop
xchg
nop
and
mov
stos
ficomps
add
push
repnz
lcall
mov
leave
pop
jmp
mov
jle
pop
lods
loope
xchg
lds
adc
mov
cs
lock
pop
and
cmp
jb
cmp
or
fists
mov
pop
jno
dec
int
xor
fists
aas
inc
push
or
push
outsb
cmpsl
or
xchg
popf
xchg
stos
cmp
xchg
mov
jecxz
out
mov
ret
sbb
ljmp
or
jb
lods
pop
es
mov
out
stos
cmp
jbe
shrl
cmpb
ljmp
mov
sahf
in
adc
or
fisttpl
xor
and
push
outsb
inc
jle
dec
popa
pop
xchg
scas
cmpl
icebp
into
loope
push
inc
push
pop
cmp
sub
cs
test
shl
int
mov
test
mov
mov
adc
je
push
inc
dec
pop
or
pop
hlt
jmp
shl
fsub
repnz
xchg
xchg
cmpl
dec
pop
jp
push
add
jno
popa
pop
xchg
scas
cmpl
icebp
into
loope
adc
add
xor
and
push
outsb
inc
jle
dec
popa
pop
xchg
scas
cmpl
icebp
into
loope
adc
movsb
sub
stos
in
push
clc
mov
jp
aad
fcomps
jo
xor
js
lods
in
mov
test
xor
or
pop
push
push
pusha
es
cmp
test
negb
out
in
mov
shlb
clc
pop
jg
dec
outsb
ror
xor
pusha
sahf
add
mov
addr16
sbb
cmpsb
cld
xchg
mov
pop
cmp
fidivs
xchg
jl
push
fisubl
inc
pop
push
mov
sti
stc
movsb
push
pop
lret
sbb
sarb
mov
mov
rcll
jg
repz
xchg
mov
fwait
cmp
std
stc
addr16
adc
or
js
pop
add
inc
punpckhbw
push
loopne
jno
adc
clc
cmp
mov
shrl
fcomip
shlb
push
lock
jmp
jns
rcrl
shll
inc
jns
movsl
aad
xchg
scas
sbb
popa
sub
jge
and
int3
cmp
loope
popf
cmpsb
nop
or
xchg
mov
enter
scas
adc
popa
aas
mov
push
js
vmovsldup
daa
leave
add
nop
lods
sti
cmp
inc
push
jnp
jl
jne
mov
and
pusha
loop
and
js
pop
adc
icebp
aam
popa
lds
dec
mov
xchg
fs
mov
xor
push
inc
addr16
stc
add
lock
xlat
or
stc
lcall
xor
mov
and
out
call
and
iret
scas
gs
mov
bound
xor
movsl
or
fmuls
push
pushf
pusha
fisubrs
xlat
outsl
or
dec
cmpsb
and
cmp
aaa
inc
arpl
imul
jge
les
jmp
cltd
xchg
out
pop
icebp
repnz
pop
jbe
popl
mov
stos
ss
mov
sbb
inc
cmpsl
ja
adc
xchg
inc
outsl
pushl
mov
aaa
push
rcrl
inc
hlt
ret
iret
mov
testb
arpl
cmp
rol
test
shr
enter
push
mov
push
sub
jno
pop
imull
xchg
fdivrs
mov
push
mov
dec
inc
bound
je
cltd
in
test
pop
mov
sub
add
sub
add
adc
gs
xchg
pusha
insb
cmp
mov
push
stc
lea
es
out
xorl
mov
jne
pop
imul
pop
dec
testb
addl
pushf
cmp
flds
stc
pop
mov
add
mov
dec
adc
adc
rorl
push
adc
es
shlb
xchg
lret
xchg
or
nop
push
xlat
rclb
aas
xor
ljmp
ret
ds
xchg
mov
stos
and
pop
aas
xor
inc
jns
movsb
jns
loopne
iret
xchg
les
gs
cmpsl
push
inc
push
cld
jl
adc
sub
xor
adcb
pop
jno
lret
enter
daa
adc
js
jns
pop
nop
sbb
repnz
push
push
mov
repnz
insl
adc
push
test
push
loope
cwtl
in
inc
lret
iret
mov
inc
jl
lcall
fst
fldl
sbb
pop
add
dec
inc
mov
push
lret
mov
pop
mov
jmp
adc
xor
sbb
cld
test
xor
int3
adc
out
dec
mov
das
dec
andl
xchg
push
xchg
xor
out
sbb
mov
std
mov
pop
bound
lret
jo
rclb
das
sbb
loop
pop
jb
fnstcw
pop
je
insl
sahf
sub
xchg
sub
jecxz
inc
ret
xchg
pop
inc
in
dec
loop
push
xchg
dec
shl
andb
sub
pop
cmpsb
movsl
out
inc
push
sub
sub
fsubl
cwtl
dec
push
mov
mov
stos
arpl
shll
and
cmp
outsb
push
or
stos
stc
lret
addr16
daa
jns
fstl
lods
mov
fildl
aas
xor
iret
loop
pop
push
dec
push
xor
cmpsb
pop
sti
fstpt
add
xchg
mov
dec
mov
or
in
xchg
fsubs
mov
xchg
ret
and
jnp
popf
enter
or
or
push
dec
xor
mov
xchg
jge
mov
mov
sub
pop
cld
jp
nop
jmp
adc
xor
je
pop
mov
xor
in
shlb
xchg
ret
in
lods
jg
cmc
or
push
sub
mov
mov
repz
or
mov
push
push
sub
mov
push
and
clc
inc
dec
mov
jbe
sahf
mov
inc
pop
xchg
adc
cmp
mov
fcompl
dec
in
mov
pop
out
stc
das
jb
dec
jno
aas
scas
xor
push
fldenv
mov
fcompl
imul
int3
jmp
cmpsl
mov
mov
cmp
sbb
pop
cmp
into
add
ror
add
sub
fcomip
rcrb
dec
rorb
pusha
int3
fnstenv
xor
jl
or
cmp
pop
pop
imul
adc
movsl
fwait
test
fisubl
mov
je
inc
in
push
inc
popf
jne
pop
daa
pop
adc
cmp
mov
lods
xchg
faddl
mov
mov
dec
sbb
mov
sti
jbe
sbb
push
or
jg
sbb
ss
dec
pop
bound
jle
insb
arpl
cmc
dec
ret
mov
pop
push
add
fsubrs
mov
adcb
push
pop
and
aas
mov
int3
mov
jecxz
xchg
sbb
xor
inc
bswap
shll
scas
xor
sbbl
fadds
aam
pop
pop
jp
lret
imul
stc
lahf
dec
lcall
jno
popf
mov
dec
lret
insl
call
insb
mov
lahf
push
pop
cmpsb
xor
test
pop
inc
xchg
rcrl
int
cmp
cmpsb
cmp
in
mov
sub
in
lret
fsubrl
fs
push
adc
cltd
lahf
push
int3
dec
sub
adc
les
cwtl
xlat
jbe
jno
xchg
jbe
pop
sahf
fwait
mov
inc
sahf
sahf
in
aaa
inc
mov
ficoml
jns
mov
insl
pop
imul
incl
nop
push
xor
push
cmpsb
cmpsb
roll
push
mov
add
xchg
or
push
ret
xlat
lret
loopne
loopne
push
sub
and
incb
gs
in
iret
loopne
mov
cwtl
clc
or
xchg
mov
arpl
imul
jno
jae
imul
ja
aaa
fs
aaa
add
hlt
sub
dec
insl
inc
dec
lcall
data16
cmc
test
mov
mov
out
stos
mov
dec
xchg
add
push
xor
push
or
sub
inc
loop
push
jnp
xchg
or
and
ret
cwtl
test
mov
jns
inc
pop
or
adc
and
repz
out
mov
ja
sbb
mov
push
sbb
pop
mov
daa
inc
insb
hlt
inc
jb
les
push
xor
sbb
gs
imul
push
mov
int3
aas
arpl
lret
inc
out
adc
movsl
pop
sbb
repz
test
cmp
mov
cmpl
js
sub
jnp
nop
push
shl
out
push
leave
or
cmp
mov
mov
and
in
scas
pop
and
cmp
or
mov
pusha
cmp
test
enter
xchg
cwtl
ljmp
mov
imul
es
pop
int3
icebp
fldenvs
imull
adc
jo
test
insb
push
jmp
pop
cmpl
lea
push
cmp
lahf
push
hlt
repnz
push
daa
xchg
in
add
adc
mov
push
rcl
insb
pop
jno
jecxz
cmp
stos
xchg
add
jo
dec
push
jp
mov
xchg
or
orl
sbbl
in
fidivl
into
ja
fwait
aam
ret
xchg
jl
lcall
arpl
xchg
xor
in
mov
sbb
fmuls
mov
imul
lea
iret
cmp
repnz
insb
push
mov
xchg
sub
pop
bound
outsb
repz
jg
pop
xor
lcall
stos
dec
mov
leave
add
push
inc
push
jge
pop
js
rorb
pop
mov
cmpsl
mov
jmp
gs
adc
das
ds
push
outsb
dec
loopne
gs
or
in
pop
xchg
sub
add
mov
sub
pop
lret
ss
push
test
inc
bound
in
add
outsb
jnp
mov
mov
xchg
xchg
popl
mov
jl
mov
pop
dec
rolb
mov
mov
sbb
pop
adc
lahf
pop
call
je
shlb
in
shlb
mov
xchg
in
push
cmp
sarb
xor
mov
cmpl
jo
je
sub
outsb
pusha
pop
add
pop
add
out
adc
test
and
sti
or
roll
pop
and
sahf
sbb
push
test
sub
xlat
mov
mov
jb
das
pushf
cli
je
aas
clc
lods
mov
and
scas
test
push
ret
or
hlt
jo
lret
cltd
xchg
mov
and
aad
jp
push
sbb
shll
jb
xchg
outsb
int3
pop
add
sbb
out
sbbb
jae
outsl
pushf
jg
inc
fwait
jb
pop
xchg
cmp
mov
pop
cmp
cmc
mov
ds
xor
aad
pop
push
in
lea
and
push
push
fsubr
xor
subb
pop
out
sub
push
and
lods
dec
aas
cs
in
rcrb
dec
in
mov
pop
cwtl
jmp
jp
testb
xchg
cmp
pop
dec
mov
sbb
inc
ds
fldcw
mov
add
sub
cmpsb
push
loop
lods
fadd
ss
out
aaa
std
sub
sbb
xchg
jb
adc
cltd
sarl
inc
mov
jg
fistps
sahf
out
xchg
mov
lahf
mov
ss
or
out
outsl
aas
xlat
add
out
mov
inc
fdivr
fisubl
add
out
in
mov
mov
xchg
rcll
into
test
test
loopne
pop
add
sarl
mov
sub
fisubrl
pop
decb
ja
clc
arpl
lods
loopne
pushf
pop
std
inc
xchg
aad
js
cmp
jns
daa
outsl
icebp
dec
pop
imul
push
gs
cmp
test
ja
add
je
popf
imul
cmp
out
out
into
inc
and
xchg
dec
jmp
ja
mov
fiaddl
data16
popf
cltd
jecxz
repnz
xchg
pop
sbb
dec
xchg
addr16
cmp
and
ret
aam
std
add
inc
pop
adc
pop
adc
add
mov
lock
cmp
xor
into
negb
dec
inc
cli
mov
repz
jne
cmpb
mov
inc
adc
shll
fmul
jne
adc
xor
jbe
lods
stos
push
sub
push
test
lock
mov
add
int
jmp
movsb
jnp
mov
js
notl
jae
leave
or
aaa
jle
cld
mov
pop
mov
push
mov
lods
pop
outsl
call
movl
or
dec
pop
mov
mov
insb
mov
rclb
ret
mov
jo
rorb
out
push
sub
js
popa
xor
clc
out
leave
stc
int3
pop
fsubrp
jb
les
bnd
pop
xor
or
jle
dec
xchg
jge
sbb
inc
mov
mov
mov
movsb
clc
pop
dec
daa
sbb
sbb
lds
test
xchg
adc
cmp
dec
sbb
jl
or
adc
pop
iret
popf
and
cmp
scas
add
lock
xchg
or
out
icebp
popa
into
cltd
aam
add
into
or
xchg
mov
call
mov
mov
pop
shlb
and
into
aas
pusha
rcl
cli
adc
mov
cmpsl
cmpsl
inc
mov
test
jbe
xchg
push
dec
icebp
fisttpl
jne
jmp
sbb
stos
icebp
or
sub
cwtl
sbb
pop
out
ja
mov
es
adc
icebp
daa
sbb
pop
xchg
movsl
into
je
cmp
mov
mov
mov
sbb
scas
pushf
pop
inc
loop
imul
mov
sub
pop
je
add
adc
jmp
lock
stos
jne
add
aas
icebp
push
cmp
sub
push
mov
push
loopne
inc
or
inc
add
jbe
fsubrs
xor
jg
in
pop
sbb
lock
hlt
fldl
rcrl
ljmp
pop
aaa
xchg
icebp
lret
call
lock
sahf
sbbl
push
rol
call
xlat
pop
sub
cs
xchg
ss
xchg
cmp
xchg
push
mov
sbb
pushf
xchg
out
cmpsb
xchg
test
subl
cmp
mov
or
xchg
add
cltd
hlt
insl
enter
lea
fsubp
dec
mov
ja
idivl
mov
icebp
xchg
dec
das
lret
mov
mov
insl
or
sub
and
ficompl
cmpsl
push
mov
call
pop
test
pop
and
ret
pop
ret
and
in
sbbb
sub
ret
xor
addr16
in
add
lahf
test
mov
add
and
sub
arpl
inc
aad
xchg
in
adc
push
mov
xlat
adc
les
cld
movsl
cmp
sub
inc
insl
pop
adc
mov
add
imul
inc
rolb
ficompl
stos
in
sti
add
loope
pop
add
add
jnp
push
pop
imul
movsl
and
or
int
fnstsw
call
insl
mov
cmp
adc
je
pop
mov
cli
jb
outsl
mov
sbb
dec
inc
mul
gs
pop
add
cmpsb
push
sbb
rol
push
lods
dec
inc
loop
popf
popa
outsb
icebp
hlt
sub
cld
cltd
mov
out
xor
mov
sbb
repz
xchg
int3
dec
push
jle
icebp
jl
mov
cld
aam
lock
loopne
ljmp
pop
inc
sti
je
cmp
push
mov
cmp
xchg
test
push
mov
shrl
xor
rcr
in
cltd
mov
aas
test
and
fwait
cmp
imul
pop
sub
imul
push
sahf
ret
shr
push
clc
sbb
sbb
mov
add
inc
xchg
jecxz
outsl
popl
cmp
fucom
cltd
jae
mov
adc
jecxz
call
jg
jae
sti
ret
and
mov
repnz
push
fwait
pop
mov
mov
cmpsl
pop
daa
leave
ds
in
jl
or
daa
dec
mov
pop
xchg
and
push
or
test
push
xchg
out
shl
cmpsl
jae
mov
rorb
ds
aas
add
push
fisttpl
pop
inc
push
loop
add
push
jecxz
push
xor
sub
sub
adc
and
sbb
dec
jl
adcl
in
jmp
or
in
fsubrs
movsl
mov
inc
fisttpl
jge
jb
addr16
bound
add
test
sahf
lods
xchg
mov
ret
adc
xchg
and
push
add
xor
xchg
into
aaa
lods
scas
bound
fs
enter
push
idiv
sti
and
lahf
pop
adc
adc
xchg
mov
fidivs
negb
sub
test
scas
in
pusha
nop
and
ja
push
pop
add
pop
dec
fs
inc
dec
or
scas
sbb
in
mov
mov
repz
pop
mov
in
mov
xchg
ja
in
dec
inc
push
cli
add
dec
sbb
call
jge
push
test
sbb
jno
and
aas
repz
fsubrs
mov
jecxz
and
vmovhpd
sbb
jne
add
mov
imul
stc
adc
into
push
or
inc
in
repnz
xor
or
xor
pop
and
cmpl
dec
cmp
movsb
rolb
xchg
or
mov
dec
fistl
loop
xchg
dec
lods
and
imul
mov
out
xor
mov
push
push
cmp
inc
mov
cmp
int
loop
daa
and
shrb
stos
inc
xor
outsl
dec
and
clc
outsl
xabort
mov
inc
push
in
sub
or
gs
push
push
jne
dec
jb
jl
adc
es
pop
adc
adc
xchg
dec
cld
int3
sbb
notl
insl
je
pop
jbe
mov
outsb
xor
stos
xchg
fisubs
outsl
gs
stos
pop
sub
mov
cmp
call
adc
sub
popl
out
addr16
nop
popa
mov
out
shr
adc
mov
jle
pop
mov
mov
jb
addr16
add
mov
and
pop
inc
mov
jle
test
mov
push
insl
pop
mov
stos
push
icebp
movsb
cwtl
mov
sub
mov
push
fldcw
loope
jns
pop
push
jl
pop
mov
mov
mov
mov
fistpll
push
push
mov
ljmp
data16
cmp
pop
lret
sbb
and
sbb
andb
push
call
cltd
sub
add
repz
cltd
mov
add
and
in
or
or
mov
pop
call
outsl
enter
outsl
mov
shr
pusha
in
mov
push
in
mov
ds
inc
mov
fidivs
add
dec
pop
xlat
rorl
mov
xor
fisubl
pop
ss
add
ja
mov
and
dec
dec
mov
fisttpl
xchg
inc
in
xlat
xchg
inc
push
bound
xorl
shll
xchg
mov
mov
mov
xchg
mov
cmp
mov
into
mov
inc
inc
mov
sub
test
dec
repnz
test
and
mov
lds
pop
in
inc
fucom
out
pushf
iret
xchg
mov
inc
mov
xchg
or
jle
xchg
jmp
lods
cltd
pusha
pop
lock
add
or
push
sbb
jb
sbbl
adc
mov
sub
xchg
add
lds
mov
pushf
inc
shrl
xchg
adc
sti
add
ds
adcl
xor
out
dec
test
cltd
rcrb
sub
incb
push
iret
xchg
mov
jmp
idivl
sbb
test
xor
mov
lea
cmpsl
add
lcall
inc
mov
jo
xchg
int3
sub
int
and
jno
xchg
out
xchg
stc
jg
or
cld
mov
pop
sbb
pop
scas
dec
push
pop
inc
std
sbb
insl
mov
xchg
test
insl
adc
add
mov
and
or
push
dec
aam
sbb
ss
out
sbb
jno
pop
movsl
adc
xor
dec
push
push
sbb
mov
jmp
push
cmc
out
jl
mulb
jg
inc
andb
outsl
loope
aas
sbb
aaa
je
ss
cmpsl
or
das
sarl
faddl
sbb
mov
data16
stc
mov
xor
mov
aam
insl
cmpsl
xchg
sbb
rol
cmp
fisttpll
clc
out
xor
jne
sub
outsb
inc
jmp
int
xchg
sbb
add
int3
cld
clc
rol
push
idivl
rcrl
dec
outsb
xchg
mov
dec
sarb
lods
xchg
pop
pop
scas
adcl
inc
imul
icebp
stos
push
stos
push
jg
xadd
test
lahf
cwtl
jmp
sub
add
gs
mov
in
dec
pushf
xor
and
movsb
imull
jl
iret
cmc
dec
mov
pop
pop
pop
inc
push
jg
aam
xchg
stos
push
lret
xlat
push
addl
inc
xor
fldz
adc
push
sbbb
fwait
mov
les
push
dec
sub
sub
inc
adc
jg
addr16
rclb
dec
sbb
or
fimuls
and
cwtl
mov
cmc
push
add
lcall
add
cli
jmp
add
mov
mov
pop
xor
inc
xchg
mov
ja
subb
ret
outsl
js
sub
inc
xchg
dec
mov
push
jb
mov
or
loop
ret
jo
push
ss
mov
pop
xor
stos
in
cmc
in
bound
pop
orl
mov
les
fsubr
dec
cmp
dec
mov
insb
inc
pop
jb
mov
das
pop
outsl
add
test
out
lret
cmp
push
test
in
fsubs
sbb
movsl
cmp
fimuls
sahf
jo
ret
je
or
jp
xor
clc
dec
push
pop
sub
cli
jae
pop
mov
aad
or
and
push
outsb
inc
jle
dec
popa
pop
xchg
scas
cmpl
icebp
into
loope
adc
add
xor
and
push
outsb
inc
jle
dec
popa
pop
xchg
scas
cmpl
icebp
into
loope
adc
add
xor
and
push
outsb
inc
jle
dec
popa
pop
xchg
scas
cmpl
icebp
into
loope
adc
add
xor
and
push
outsb
inc
jno
popa
mov
sbb
dec
add
xor
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
cld
adc
imul
add
add
push
add
pop
pop
add
add
add
add
mov
add
or
add
loopne
or
pop
add
add
mov
add
or
jg
aaa
add
push
add
add
add
jge
mov
or
js
jg
push
add
add
add
add
add
testl
adc
add
mov
and
push
add
add
adc
add
add
inc
add
add
add
sbb
add
jl
add
fldl
pop
add
add
add
add
add
add
push
add
add
add
pop
add
outsb
add
add
add
add
xchg
aaa
add
add
add
add
add
add
add
push
add
sub
and
mov
jge
add
add
add
add
add
sub
and
add
add
add
inc
add
add
add
jge
push
add
add
lods
add
push
add
add
add
add
add
add
cmp
loopne
sub
movl
mov
or
jno
adc
sbb
inc
add
fadds
push
add
add
add
add
add
add
add
adc
dec
add
add
add
add
jbe
and
movl
pop
add
add
add
pop
add
add
add
and
push
add
add
add
add
stos
add
adc
adc
roll
add
stos
add
add
add
or
daa
add
add
or
aaa
add
add
daa
add
add
mov
mov
sub
add
add
add
sbb
rolb
add
add
add
add
add
add
mov
das
add
add
add
add
add
add
add
mov
pop
add
mov
inc
add
add
add
add
roll
add
add
add
add
nop
add
add
ljmp
add
jg
mov
faddl
aaa
add
add
add
add
add
cmpsl
add
sbb
or
add
int
popl
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
insb
add
test
arpl
cmpsb
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
add
addb
add
jg
mov
or
adc
add
inc
add
add
add
add
add
adc
inc
add
dec
add
and
mov
jno
arpl
cmpsb
add
sub
jno
mov
das
add
add
add
adc
add
add
add
add
ljmp
add
mov
ljmp
add
add
add
add
jge
and
sbb
dec
add
add
add
add
imul
adc
mov
add
and
les
sub
push
add
str
add
add
adc
mov
xor
je
outsb
pop
sbb
push
xor
incl
inc
push
addr16
ret
sub
mov
mov
ret
insl
sub
cltd
test
sbb
fimull
xchg
sub
loopne
xchg
test
push
ljmp
adc
add
js
cwtl
out
mov
and
jmp
mov
gs
push
test
popa
inc
stos
shr
cwtl
adc
arpl
add
daa
notb
cld
out
call
xor
mov
lods
adc
int3
dec
addr16
jbe
sub
testl
imul
pop
xlat
ret
out
out
jle
xorb
jg
jno
popf
comiss
loop
and
mov
ja
fisttpll
das
dec
in
cli
adc
clc
cltd
in
jne
in
mov
imul
aaa
jl
insb
out
xor
ret
xor
imulb
fs
mov
mov
cmpl
lcall
test
mov
shlb
stos
aam
dec
lret
ss
loop
add
pop
test
dec
in
nop
mov
fstpl
ljmp
aaa
sbb
adc
or
push
adc
outsb
das
dec
mov
sub
movsl
insl
pop
jge
lahf
adc
sbb
mov
mov
cltd
lahf
mov
mov
jne
jmp
mov
std
sahf
cmc
mov
adc
les
into
or
jecxz
incl
adcl
mov
sti
xor
push
push
dec
xlat
sub
ja
dec
mov
lahf
movsl
gs
jns
mov
jp
lret
dec
jg
adc
stos
jg
and
mov
or
mov
nop
in
mov
mov
cmp
dec
repz
push
xor
rorb
xor
sbb
push
mov
int
or
jno
jnp
add
pop
xchg
mov
test
xor
sub
inc
mov
jns
xchg
fisubs
inc
mov
mov
sub
fnstsw
mov
xchg
imul
std
jle
popl
icebp
push
push
xlat
or
cmp
push
sbb
enter
mov
and
ficomps
lret
xchg
cwtl
lods
das
inc
or
into
push
sub
jle
les
arpl
ret
mov
fsubrl
testl
imul
lods
test
pop
fnstcw
nop
cmp
cmp
rol
pop
jno
bound
ljmp
jnp
dec
cs
lret
insb
xchg
mov
js
js
cld
cmc
xchg
in
mov
mov
shl
leave
ret
fistpl
outsl
sub
out
shrb
fcompl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
