adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
inc
out
push
add
jb
or
bound
inc
xor
rolb
adc
ret
mov
adc
bound
jb
add
int
jno
adc
xchg
mov
mov
mov
adcl
cltd
jb
add
jge
lahf
xor
dec
shl
xchg
out
ljmp
loope
adc
adc
inc
data16
test
xchg
or
sub
loope
sub
repnz
xchg
imul
sub
mov
xor
cld
shrl
ja
jge
xchg
mov
adc
add
sub
subps
add
xlat
fsubr
ret
add
cmp
sub
icebp
sbb
xor
pop
rcll
adc
repz
add
sub
mov
ret
shrl
aam
jl
cli
mov
add
jmp
mov
jns
popa
rol
cs
bnd
mov
inc
loopne
push
mov
and
ret
mov
jmp
mov
icebp
fisubl
adc
bound
adc
stos
xor
ret
inc
loop
bnd
mov
inc
cmp
pop
jb
movd
jae
adc
les
mov
out
inc
push
and
push
pop
add
jle,pt
and
xor
mov
add
mov
inc
ss
or
inc
add
xor
xchg
rolb
adc
shll
push
add
jb
add
inc
and
popa
ret
and
rcll
loope
adc
fsts
mov
sub
cld
adc
sub
pop
pop
push
dec
stc
ret
notb
dec
jo
inc
jl
mov
pop
mov
insb
push
ja
rorb
sub
sub
jecxz
lock
ret
in
int3
je
push
sahf
or
push
xchg
int3
outsl
call
fstl
adc
push
xchg
mov
ret
addb
sbb
movsb
lods
je
add
mov
arpl
and
aam
ja
loop
test
jmp
jb
shll
sbb
adc
fdivrl
insl
jns
jp
cmp
mov
or
dec
ss
loopne
xor
mov
fucomi
push
popf
int
jno
decb
cwtl
jmp
mov
jecxz
lret
out
addr16
and
std
inc
pop
rorl
dec
inc
or
jo
jge
add
incl
stc
iret
icebp
je
call
jg
pop
data16
outsb
push
add
mov
cmp
fidivl
or
jb
adc
imul
nop
jge
popa
imul
sbb
xchg
add
insb
push
mov
cwtl
pop
xor
jb
mov
add
popa
mov
lock
cmc
sub
lahf
mov
movsb
out
adcl
call
or
xor
push
cwtl
cmpsl
fwait
out
xchg
xor
add
inc
mov
or
gs
adc
mov
mov
ret
mov
call
testl
sub
stc
lcall
lret
mov
dec
cmc
incl
cmp
out
jno
je
mov
and
loopne
shl
xchg
movsl
push
dec
rorb
imul
scas
cwtl
andl
jnp
sub
xchg
mov
mov
jae
lret
cmpsl
push
clc
cmpsl
adcb
cltd
pushl
adc
repnz
xor
mov
mov
dec
cmpsl
enter
lds
lahf
push
fbstp
sub
insl
dec
or
push
sbb
xchg
loop
and
adc
inc
xchg
fs
sbb
outsb
fwait
xchg
jb
and
lret
push
mov
mov
mov
sub
ret
fdivrp
dec
sub
rcrb
push
pop
push
shll
cmp
jg
test
jne
scas
add
out
inc
mov
push
adc
xchg
mov
fcomps
mov
sbb
fcomip
scas
xchg
out
xor
ret
mov
push
ret
adc
dec
fisttpl
adc
mov
outsb
mov
dec
in
bound
cld
incl
jecxz
xchg
pop
xor
imull
nop
lea
dec
sbb
jae
aam
test
adc
mov
jo
rolb
iret
enter
mov
mov
sbb
mov
xor
movsb
cmp
push
sub
out
popf
enter
loop
lret
std
xchg
jns
je
jb
daa
and
sub
xor
lret
mov
inc
mov
jo
push
lock
std
jne
and
sub
sbb
mov
stos
inc
jg
pop
add
jge
dec
adc
out
sub
out
xor
adc
roll
push
adc
sbb
xchg
outsb
mov
xchg
mov
les
xabort
cwtl
movb
xor
dec
xchg
mov
movups
mov
adc
cmp
std
xor
popa
sub
push
int
or
or
lret
daa
sbb
mov
popa
push
lds
mov
jae
jle
cmp
hlt
xchg
sbb
xchg
add
stos
sbb
cmp
mov
dec
jne
fistpl
xlat
pushf
mov
sbb
pop
dec
andl
cltd
cmp
dec
xor
push
push
jg
xchg
push
in
sti
cmp
jae
stos
cli
stos
mov
cmc
mov
inc
mov
ret
add
mov
hlt
sbb
mov
fidivrl
sub
cmpsl
and
cld
sub
std
adc
out
add
sarb
cmp
ror
insb
ljmp
mov
sub
enter
test
cmp
pop
std
aaa
mov
dec
mov
stos
jecxz
lods
sahf
sbb
pop
jp
mov
test
jg
mov
data16
jp
negl
aad
mov
cmpsl
adc
rcr
inc
dec
cltd
and
mov
mov
dec
adc
cmp
jne
ds
dec
fidivrs
stos
jo
outsl
subb
daa
push
or
cmp
stos
add
nop
cld
dec
inc
shrb
lods
aas
fxch
mov
mov
sub
mov
jle
sub
pop
xor
push
outsl
dec
pop
mov
ret
mov
lcall
inc
xchg
sub
or
imul
fsub
mov
dec
mov
stos
cmp
cmp
cltd
cmp
movsb
mov
std
cmc
cmpsb
and
sbb
dec
inc
sbb
jns
imul
inc
pop
jmp
mov
hlt
mov
adc
mov
jle
push
sbb
lahf
nop
push
nop
idiv
lods
and
cld
pop
ffreep
daa
loopne
daa
sub
scas
sub
mov
sbb
rolb
cmpsb
pop
aaa
gs
mov
mov
mov
cmp
push
mov
sub
pop
call
jmp
fcmovu
inc
inc
ficompl
jg
xchg
lret
stos
xor
imul
lods
in
pop
lcall
insb
enter
jno
pandn
ljmp
icebp
inc
adc
loopne
dec
and
fstl
cmp
and
test
clc
cmc
into
or
jl
test
nop
add
bound
fisttps
addb
jecxz
sub
xchg
sub
push
pop
adc
das
pop
test
adc
loope
sbb
push
and
inc
lds
jno
mov
hlt
popa
push
sbb
jnp
popa
cwtl
ds
push
adc
mov
push
mov
insl
sti
mov
movsb
ja
lds
pop
es
fildl
imul
jb
std
shrb
dec
stc
movsl
dec
sbb
dec
jl
test
ds
fistpl
push
mov
fimull
outsb
sbb
leave
xchg
adc
sbb
movsb
mov
es
movd
aad
lcall
lret
xor
leave
ss
xchg
mov
xchg
sub
pushf
xor
cs
jp
repz
inc
inc
cld
jp
adc
mov
insb
stos
xor
dec
fidivrl
outsl
arpl
mov
in
sbb
push
lret
lcall
xor
jg
sarb
xor
push
push
imulb
xchg
addr16
mov
subb
ficompl
lcall
mov
pop
ret
mov
jp
dec
inc
int3
inc
mov
jne
inc
adc
into
out
stos
mov
sbbb
jne
push
sbbb
jb
jg
loop
lahf
sbb
jg
xchg
xchg
cmp
test
hlt
mov
nop
xchg
out
mov
jne
push
insb
push
punpckldq
cmp
jmp
add
imul
jns
mov
lret
out
xchg
mov
sub
adc
std
lret
scas
adc
imul
mov
cmp
xchg
in
fisubl
cmp
mov
rcll
xor
push
lahf
push
lret
xchg
lea
flds
mov
xor
mov
rclb
mov
mov
repnz
fwait
push
aaa
repnz
xchg
xor
lret
cs
shl
adc
mov
xchg
or
mov
mov
jp
ds
test
aad
pop
jbe
push
std
gs
jle
add
xchg
lahf
cmc
pushf
mov
outsb
xchg
roll
dec
pop
inc
sub
mov
lret
xorl
xor
push
test
ds
add
push
aad
les
outsb
xchg
add
fwait
ljmp
mov
add
add
sbb
sahf
movsl
add
mov
jnp
mov
jmp
ss
repz
push
cmpsb
xchg
and
daa
subl
pop
neg
sarb
mov
mov
dec
fldt
ss
cmc
rcl
call
mov
movb
fmuls
inc
xchg
int
push
push
orb
mov
mov
mov
xlat
xchg
add
out
js
xor
aaa
leave
jnp
mov
pop
test
dec
mov
fimuls
movsl
mov
in
out
pushf
sti
cmp
int3
mov
ss
and
flds
inc
jo
mov
cltd
cmc
sub
inc
cmp
or
sub
push
pop
push
mov
mov
or
inc
out
pop
lods
imul
jnp
mov
adc
xor
popf
jne
shlb
xchg
jg
pop
push
flds
sbb
call
sti
popa
sub
fcmove
gs
call
mov
in
rcl
mov
jo
fldenv
xor
sbb
mov
outsl
scas
or
mov
mov
inc
out
xor
push
push
add
test
or
fisttps
pop
push
hlt
fwait
stc
in
lea
clc
jmp
int
cmp
jae
xchg
dec
or
inc
jle
push
andl
stc
lret
jge
mov
movsl
add
lret
inc
mov
or
icebp
dec
addl
cmp
enter
test
out
pop
push
jmp
sub
ret
inc
ja,pn
mov
push
push
fiadds
and
fxtract
dec
lret
lock
test
repnz
cmp
jnp
cmpsl
mov
out
rcrl
fbstp
xor
inc
gs
ret
adc
cmp
shl
sahf
lret
sbb
sub
pop
pushf
decl
push
adc
cwtl
jns
push
ss
inc
iret
jns
test
or
sub
je
push
jmp
sub
ds
je
xor
mov
pop
shlb
inc
and
dec
jge
dec
inc
inc
xchg
popf
inc
pop
mov
shll
call
pop
nop
cltd
insl
lea
mov
out
mov
insl
and
mov
in
enter
sbb
inc
jp
jnp
cli
jno
outsb
push
addr16
add
push
jb
and
arpl
sbb
mov
adc
adc
ss
sbb
mov
testb
jae
sub
mov
aaa
mov
outsb
inc
add
sti
or
iret
and
jecxz
mov
jge
xlat
lea
sbb
movl
sub
sbb
xchg
pop
in
lcall
adc
xchg
ja
ret
clc
js
xchg
sbb
and
cmpsb
ficoms
push
pop
inc
mov
int3
repz
jle
clc
pop
push
cli
sub
mov
push
lock
jne
xchg
push
and
popa
sbb
or
fdivs
loopne
pop
sahf
aas
xchg
jecxz
imul
jmp
pop
sti
das
pop
mov
sbb
leave
add
or
in
aad
scas
sbb
fs
pop
or
mov
add
fldcw
pop
or
sbb
and
in
add
jle
mov
shll
ljmp
jnp
ds
rcll
shrl
pop
loop
std
test
inc
int3
jp
js
push
or
dec
inc
subl
mov
mov
popa
mov
pop
sti
inc
test
js
repnz
xlat
sub
ror
callw
repnz
test
int
xor
aas
push
daa
push
movsb
add
mov
mov
ss
jo
pop
int
outsb
push
sub
insb
mov
or
test
jns
mov
and
ljmp
sti
or
ja
aas
and
pushf
call
leave
dec
mov
fisubrl
ret
sahf
sti
std
lahf
sti
mov
dec
shr
aad
cli
push
cmp
js
popa
or
xlat
xchg
xor
rolb
jle
repz
sub
cmp
lcall
lcall
ss
enter
in
int
scas
mov
sub
fcomi
es
push
test
mov
fcmovu
cmpsl
jge
dec
adc
jns
rcr
fistpl
fsubrl
ljmp
arpl
and
es
push
pop
sbb
jecxz
scas
jecxz
add
stos
bound
aaa
ror
and
mov
aas
push
sti
ret
stos
xchg
lods
adc
repnz
std
mov
or
mov
popf
adc
mov
cli
sbb
andb
jg
les
adc
push
jo
pop
mov
jl
push
sbb
pusha
dec
popf
mov
shlb
xchg
jns
push
adc
ja
inc
lahf
sbb
aaa
rol
test
xchg
cli
jo
seto
cwtl
inc
imul
lret
in
cwtl
out
push
loope
mov
inc
or
mov
pop
push
add
pop
lods
and
popf
push
xlat
mov
js
push
les
divl
in
in
adc
dec
sub
add
pop
stos
push
push
sarb
movsl
mov
inc
jb
cwtl
or
fdiv
sub
xchg
xchg
sub
or
stos
mov
ja
add
dec
adcl
xor
and
cmp
jns
loope
insb
xor
fistps
inc
data16
cs
sbb
or
pop
pusha
mov
jp
repnz
in
inc
and
repnz
mov
mov
lret
aad
sub
cmp
push
rolb
data16
lock
lret
movsb
xchg
mov
cmpsb
stos
das
mov
jae
or
lods
bound
jno
sub
jne
mov
rol
mov
cmc
add
outsl
cmpsb
cmpsl
mov
push
and
fnsave
lret
pop
pushf
and
es
or
and
and
push
out
shrb
sarb
sbb
das
xor
or
cmp
jmp
and
ficomps
push
in
add
into
aad
popa
mov
xor
adc
in
mov
jmp
push
inc
loopew
push
mov
jae
sub
add
test
mov
sub
add
inc
pusha
mov
xchg
adc
insb
xor
dec
scas
jge
cmp
push
sub
sub
fwait
gs
jecxz
mov
daa
cmpsl
xor
push
mov
out
imul
mov
and
jnp
cmp
fldl
mov
lds
pop
push
mov
dec
lret
test
dec
dec
cmpsb
mov
shll
test
pop
or
out
sub
and
call
push
nop
mov
leave
loopne
jae
leave
mov
sub
mov
sub
es
cwtl
js
mov
insl
les
and
movsb
sbb
mov
into
adc
and
imull
sbb
jmp
hlt
or
jp
mov
cmp
shr
inc
cld
and
add
inc
sbb
idivl
lods
loope
nop
inc
aas
sub
inc
sbb
cmpsb
xchg
xchg
sbb
cmp
cli
add
mov
js,pt
cmp
add
push
sti
add
jl
push
aas
push
inc
test
adc
or
loop
cmpsl
add
mov
dec
pop
push
cmp
add
fldenv
leave
dec
inc
xchg
loopne
push
mov
int
call
int
lods
add
pop
push
or
dec
pop
aas
mov
insb
pop
pcmpgtd
rcll
js
xchg
testl
jne
or
pop
pop
add
sub
lock
push
call
inc
scas
loope
in
jb
fs
sahf
scas
jbe
dec
aaa
je
cmpsl
sbb
cmc
out
aad
ss
cmp
push
mov
mov
fcoms
jmp
std
pop
jns
jne
fsubr
push
push
cmp
leave
cmpsb
leave
leave
push
clc
clc
mov
xor
icebp
cld
div
or
dec
ljmp
imul
lods
push
jne
ljmp
adc
stos
jp
xor
aaa
ret
xchg
scas
dec
pop
or
cmp
mov
dec
jle
xchg
cltd
fcomip
fidivl
sbb
push
push
lea
or
sahf
adc
adc
int3
cmp
nop
or
dec
es
ret
aas
out
cmpsb
in
push
cmpsb
movsl
xchg
sbb
jbe
out
and
fcmovne
jg
jo
pop
inc
mov
arpl
test
push
jae
inc
xchg
sbb
ljmp
stos
aaa
and
xchg
clc
pop
mov
jecxz
mov
jno
cmpsb
push
sahf
push
pop
and
inc
push
xchg
pop
mov
push
pop
cld
mov
shlb
xchg
dec
cmp
jnp
mov
adc
add
inc
mov
sti
adc
lods
sub
push
lea
out
in
xlat
loopne
sti
cwtl
jg
nop
call
mov
sub
cld
dec
out
adc
dec
sub
push
and
or
popf
cmp
adc
xor
out
out
mov
stc
mov
xorb
push
dec
mov
inc
mov
repz
clc
inc
cmpsb
inc
orb
mov
nop
push
inc
mov
pop
cs
mov
or
test
iret
or
inc
loop
or
push
cwtl
sahf
jmp
shlb
out
and
push
sti
pushf
push
cli
pop
loop
push
sub
add
xor
pop
inc
inc
xchg
sarb
adc
xchg
mov
jbe
inc
mov
pop
cld
roll
mov
add
dec
cmpl
shl
cmp
in
cmp
and
int3
ljmp
into
add
cld
and
push
jl
out
inc
icebp
imul
fisttpl
int
mov
add
push
in
push
pop
jp
cli
test
cli
mov
jbe
cmp
push
insb
loop
push
insb
pop
cmp
cmp
push
inc
adc
nop
xchg
ljmp
sub
adc
or
pop
test
dec
cltd
or
push
cmpsb
subl
rorb
sbb
mov
mov
mov
push
mov
fidivrs
ja
ja
jle
pusha
pop
push
mov
jnp
sub
js
cmc
mov
or
out
cmpsl
sbb
mov
in
push
out
xchg
sbb
sahf
xchg
sbb
stc
xchg
mov
cmpsb
mov
stos
aas
or
imul
dec
mov
cltd
jns
leave
in
adc
cld
xor
mov
xor
test
mov
mov
mov
cmp
pop
test
xchg
iret
add
mov
enter
adc
outsb
mov
pop
subl
adcb
outsb
gs
in
inc
jns
inc
ss
stc
dec
ja
imul
xchg
cld
cmp
arpl
add
sti
xor
ficomps
push
cld
xchg
das
cwtl
mov
stc
rcrb
aaa
hlt
inc
cwtl
pop
in
push
adc
gs
lahf
push
cmp
mov
sbb
sub
stos
mov
mov
adc
mov
shll
mov
test
sbbl
mov
mov
scas
pop
push
cmpxchg
jae
mov
scas
cmpsb
or
nop
sub
dec
lcall
imul
dec
cmpl
cmp
cwtl
mov
push
mov
cmpb
ljmp
pop
lea
jmp
sahf
mov
pop
ds
cmp
jns
scas
dec
nop
xchg
loopne
outsb
pop
push
int
inc
imul
movb
and
mov
test
or
scas
or
adc
push
cmp
jge
mov
mov
les
fcomi
cltd
mov
sbb
je
cmpsl
or
pop
xor
pop
mov
sbb
mov
push
cwtl
jb
pop
addl
mov
mov
mov
dec
lret
clc
dec
and
ret
adc
and
sti
jle
roll
xor
xchg
dec
push
arpl
jecxz
int
xor
repz
lret
push
stos
sub
or
outsb
push
xchg
cmp
insl
sub
sarb
outsb
adcb
negb
mov
mov
inc
mov
sbb
and
adc
stos
inc
pusha
ret
lea
mov
pop
outsl
pop
lds
lahf
inc
sahf
dec
dec
mov
pop
test
movsb
lret
lock
sub
mov
fcomp
push
push
addr16
out
add
push
stc
pop
xchg
insl
das
rorl
repnz
call
sbb
scas
adc
jge
mov
mov
test
aaa
aam
inc
and
and
ja
int3
daa
mov
aas
mov
sbb
js
mov
push
cmp
imul
js
ret
fiaddl
cwtl
hlt
in
lret
cmp
stos
inc
jno
or
fwait
pop
sti
xchg
popa
lret
cwtl
mov
push
movsl
enter
cmpsl
xor
pop
pop
jb
add
inc
and
popa
ret
and
rcll
loope
adc
bound
jb
add
inc
and
popa
ret
and
rcll
loope
adc
bound
and
push
adc
and
popa
ret
and
rcll
loope
adc
bound
jb
add
inc
and
xor
outsb
shrb
dec
mov
cmc
pop
sbb
pop
push
dec
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
popa
lds
mov
call
rclb
inc
loope
andl
push
aad
lds
add
inc
and
loope
icebp
xor
mov
gs
push
jns
imul
rorl
xor
jns
or
mov
ds
loopne
xchg
ret
inc
sbb
pop
in
repnz
jns
sbb
xor
stc
inc
mov
in
push
pop
loop
fiadds
into
icebp
ds
das
stos
mov
push
mov
mov
xchg
push
mov
cmp
push
inc
cs
adc
shrl
and
sub
mov
popf
scas
test
nop
and
xchg
push
mov
adc
pop
cli
mov
sub
es
int
mov
xor
dec
movb
xor
mov
pusha
sti
cmp
jl
lea
inc
push
mov
and
mov
push
in
aad
test
adc
shl
clc
pop
call
adc
inc
xchg
and
add
jo
dec
in
adc
and
add
in
xchg
popa
into
inc
sub
xchg
adc
push
faddl
les
push
testb
mov
mov
test
repz
icebp
inc
xchg
pusha
movb
push
movsl
add
movsl
adc
shll
loope
icebp
xor
mov
in
aad
lds
add
xor
rcll
inc
icebp
xor
mov
and
out
jae
mov
cmc
out
loope
ss
aam
mov
imul
jg
and
pop
out
and
mov
adc
xchg
inc
addb
scas
icebp
inc
lods
iret
ss
push
mov
incb
sub
sbb
and
fwait
repz
loope
cmp
in
or
fstl
popa
jle
cld
imulb
inc
mov
mov
lods
ljmp
scas
xor
or
pusha
mov
dec
mul
out
dec
outsl
sbb
cld
movsb
fdivrs
stos
es
xor
xorb
mov
lret
jg
loop
xchg
lret
jl
and
movsl
mul
mov
sbb
adc
and
fsts
test
inc
pusha
in
in
std
or
lods
sbbl
mov
sbb
movsb
mov
dec
call
jl
pop
add
popf
mov
jno
dec
scas
mov
jmp
or
cmc
call
fisttpl
mov
sbb
jno
adc
stc
loopne
lahf
add
cmp
xchg
inc
sub
std
mov
cmp
cmp
cld
sub
jnp
jg
test
daa
pop
lock
and
push
mov
lahf
push
push
sbb
mov
sbb
outsb
fstpt
sti
addb
mov
sbb
fsubrp
fsubl
jp
mov
aad
test
sub
or
lcall
cltd
mov
aas
inc
or
cltd
xchg
pop
push
pop
sub
xor
call
subb
mov
sbb
pop
ss
scas
in
pusha
xor
mov
rcr
les
add
cltd
xchg
jp,pt
inc
jge
orb
adc
sub
dec
icebp
push
jg
adc
mov
xchg
push
inc
mov
dec
xlat
dec
pop
loope
push
cmp
test
jl
sub
imul
pop
cmpl
xchg
stos
jle
jns
lret
inc
ret
sub
flds
sbb
adcl
cmp
stos
and
mov
into
cmc
xchg
scas
outsb
sar
adc
or
push
push
dec
rcrb
loopne
and
inc
mov
pop
adc
pop
test
fistpl
cld
dec
or
pop
mov
ss
pop
lret
mov
jl
cli
notb
rclb
insb
xchg
xchg
sbb
fwait
call
out
in
ret
data16
mov
cmp
jno
jae
mov
adc
adc
popa
dec
jo
xorl
sti
scas
sub
int3
adc
ja
arpl
push
xor
shr
push
pushf
jns
mov
jno
scas
fcmovbe
loopne
lret
jae
filds
jno
jle
add
sub
mov
sbb
into
call
rcl
pop
xor
shlb
data16
adc
add
push
dec
dec
in
mov
cmp
lods
das
adc
mov
mov
adc
or
mov
push
or
je
push
jns
mov
mov
adc
pusha
std
mov
xor
sbb
mov
add
cmc
or
lock
mov
outsl
cwtl
imul
jle
xchg
sub
add
into
sbb
loopne
mov
cmc
and
cmp
jns
out
lcall
or
rcl
stc
popa
pop
popa
dec
jl
jmp
sahf
mov
mov
shl
sbb
incb
mov
into
jae
inc
repnz
or
add
fildl
lret
pop
div
push
outsb
aam
or
addr16
push
add
mov
cmpsb
lea
out
fisubs
xchg
xchg
mov
lret
test
push
or
push
enter
adcl
repz
add
hlt
pop
fdivrs
or
dec
xchg
outsl
add
jnp
mov
in
test
shrb
pop
out
std
ljmp
nop
pop
daa
dec
sahf
repnz
adc
and
sub
daa
xchg
dec
xchg
push
sbb
mov
jo
cli
mov
ja
xchg
lods
lds
sti
adc
xchg
dec
popa
dec
sbb
mov
sahf
fs
enter
sub
movsl
add
gs
icebp
jbe
shl
and
mov
push
add
stos
int3
xchg
push
in
dec
sub
out
or
adc
push
and
add
sahf
jle
push
push
cs
jle
inc
sbb
aaa
adc
fstpl
out
push
pushf
ja
pop
mov
fistpl
mov
sbb
fwait
pop
cmp
fnstcw
std
sti
enter
pop
add
leave
rorb
add
xchg
mov
lods
fcmovne
add
aad
icebp
les
loop
jo
inc
lods
test
sub
inc
and
and
aad
je
test
cmp
mov
pop
clc
test
daa
ss
mov
icebp
fld
cmp
lcall
xor
movsl
adc
xor
jecxz
aas
pop
mov
int
icebp
outsb
and
mov
mov
adc
dec
rorb
dec
shll
lods
fidivl
repz
jg
gs
popl
addl
or
mov
in
hlt
ss
sub
jmp
xchg
lods
nop
jns
ret
outsb
or
test
icebp
bound
in
xchg
xor
xchg
popf
lods
lret
fsubr
pop
inc
ret
sahf
add
cmpsl
mov
xor
pop
rorl
fadds
jmp
loop
insl
jne
jbe
stos
fnstcw
std
mov
imul
mov
test
mov
std
cmp
mov
jo
mov
and
ja
xchg
mov
push
adc
repz
cmp
and
adc
mov
push
out
jns
mov
aam
lods
jae
xchg
push
mov
ror
enter
or
outsb
imul
cmp
jmp
scas
sbb
lods
aaa
xor
push
int
xchg
dec
jbe
mov
ret
cli
loope
inc
xorl
inc
add
shrb
into
jo
mov
push
mov
push
cltd
fwait
inc
adc
incb
mov
cmpl
cmp
call
mov
dec
insl
insb
jno
fcoms
aam
inc
dec
ret
int
rorb
mov
in
aam
std
ret
mov
aad
dec
rolb
test
lods
push
mov
jle
and
test
rep
jne
mov
sub
out
cld
aaa
test
shlb
movsb
nop
test
ret
dec
lret
ljmp
pop
inc
sti
and
cs
shrl
push
mov
xor
enter
pop
and
add
lods
sub
stc
sbb
enter
pop
mov
adc
jmp
mov
jno
arpl
xchg
inc
mov
mov
jmp
data16
cmp
sarl
xchg
lea
inc
decb
or
xor
push
sbb
sbb
mov
xorb
outsl
mov
call
mov
imul
xchg
aad
sbb
aam
xor
jae
jmp
or
aam
xchg
mov
push
das
mov
loopne
sbb
mov
incl
adc
and
sbb
pop
es
testl
jcxz
in
aas
fstpt
inc
scas
gs
sub
pop
into
cmc
xor
outsl
les
inc
sarl
sbb
jae
cmpsl
shl
daa
add
xchg
lahf
xchg
into
xchg
jl
cmp
push
aam
clc
push
cmc
stos
cwtl
adcl
dec
cmp
or
jae
pusha
imul
xchg
jno
and
in
inc
xlat
xor
mov
push
add
inc
jne
add
dec
add
jecxz
inc
dec
add
pop
ljmp
sbb
mov
rorb
scas
mov
adc
and
xchg
mov
imul
lods
pusha
mov
dec
pop
loop
mov
push
aas
mov
insb
jge
cli
jo
frstor
pop
out
orl
adc
mov
js
mov
test
mov
sub
inc
xchg
xlat
mov
push
pop
add
pop
adc
jecxz
popf
jbe
lcall
jmp
pop
ret
dec
mov
cld
mov
or
arpl
fnsave
lret
js
dec
cltd
ror
pushf
and
sbb
rorl
popf
add
leave
inc
aad
cmp
sbb
stos
push
add
dec
mov
cld
dec
popf
sub
jl
clc
jne,pn
xorl
das
mov
fucomip
inc
xor
jmp
cmp
out
cmp
inc
mov
sbb
addl
andb
fdivrl
add
loop
sahf
dec
shrb
mov
lcall
pop
cwtl
push
pusha
push
lods
push
test
negl
fcmovnbe
jg
stos
in
imulb
xor
lcall
adc
ss
movsb
jne
gs
loope,pn
cwtl
cwtl
cmp
jns
loope
inc
mov
or
loope
movsb
or
xor
scas
sub
jno
mov
pop
and
lods
sub
daa
inc
push
fnstcw
outsl
sub
or
or
lock
or
out
outsl
aam
fs
aad
push
pop
adc
outsb
jge
sbb
iret
filds
and
pop
in
pop
sub
sti
mov
and
sbb
sub
ljmp
in
stos
pop
jmp
cmp
xchg
mov
jmp
lahf
mov
xlat
js
pusha
lret
mov
add
xchg
mov
inc
mov
popa
sbb
lds
stc
sbb
lock
adcl
jae
loop
movsl
cmp
add
in
mov
jb
add
inc
in
and
in
ds
fcoms
out
jo
dec
adc
test
xchg
xchg
mov
xchg
repnz
idivl
inc
out
add
jnp
leave
insb
shl
out
lahf
sahf
fadds
imul
lcall
ja
jb
lea
clc
pop
leave
popa
inc
pop
mov
sahf
push
add
xchg
mov
insl
pop
addl
mov
xchg
aad
mov
jmp
sbb
in
mov
jbe
cmp
sbb
sbb
pushf
add
xlat
dec
dec
inc
cmp
es
lods
js
and
cmp
je
adc
xchg
cmp
pop
and
cltd
call
jle
nop
cmp
mov
adc
pop
jecxz
cmpsl
xchg
js
push
hlt
or
rol
dec
mov
sub
sub
pushf
or
xorl
insl
sbb
lret
mov
out
dec
js
andb
mov
cld
movl
cld
sub
adc
pop
cli
pop
icebp
sub
or
fs
and
shlb
push
mov
je
shrl
and
sub
fwait
sarb
dec
rclb
aas
nop
in
mov
xor
jp
jo
loope
not
bnd
adc
push
dec
test
pop
cltd
mov
std
lods
lods
cmc
and
lahf
push
adc
cmpsl
js
pop
sahf
data16
jecxz
cmp
push
push
add
mov
addr16
scas
aas
pop
rcll
jecxz
imull
jl
inc
fcmovne
dec
jmp
pushf
mov
mov
pop
xchg
dec
adc
mov
popa
icebp
push
xchg
sahf
decb
sub
sti
ficomps
daa
mov
insb
fsubs
inc
sbb
push
pushf
push
jo
inc
jns
add
or
push
aam
ret
mov
aaa
leave
push
cmpsl
inc
xor
jns
adc
pop
fdecstp
pushl
inc
mov
jmp
mov
mov
daa
jnp
jo
fdivs
fwait
repnz
mov
mov
data16
push
std
leave
jg
shr
dec
jbe
inc
inc
xor
push
int3
jge
xchg
xchg
iret
hlt
out
push
rcrb
mov
jmp
xchg
mov
iret
or
and
xchg
loopne
mov
xlat
leave
jnp
and
mov
shlb
jo
sarb
jge
out
sub
imul
add
jmp
adc
mov
leave
test
loope
shrl
out
and
ss
mov
jmp
es
mov
daa
cmp
out
sbb
scas
add
inc
call
push
xchg
xor
xchg
fnstenv
stos
inc
add
test
cmc
movsb
insb
test
addb
divb
lret
ficoml
mov
push
sbb
jae
xchg
xor
mov
xchg
jmp
push
pop
mov
push
ss
jb
jns
push
cmp
bound
push
pop
cltd
pop
pop
popa
pusha
mov
xchg
and
enter
add
call
movsl
repz
dec
ret
sub
outsb
pop
add
inc
and
iret
mov
and
cmp
out
out
neg
dec
hlt
cld
pop
add
sbb
pop
and
je
cmpsl
ja
and
ss
jg
jl
push
dec
test
in
and
das
hlt
sub
ja
dec
das
jns
das
jl
mov
test
fistpll
pushl
dec
enter
sbb
icebp
or
pop
gs
jmp
jge
cmp
dec
pop
fcomi
sbb
adc
dec
inc
movb
push
jae
inc
fistl
ljmp
jb
aas
imul
leave
clc
int
xor
mov
outsb
test
stos
fwait
push
adc
pop
cwtl
iret
add
push
test
movsl
scas
pop
sarb
in
push
add
xlat
test
popfw
mov
jecxz
std
sbb
jg
loopne
mov
xor
xchg
test
loopne
jg
pop
adc
xchg
ljmp
pop
jne
and
mov
gs
xor
sbb
adc
xor
stc
mov
insl
inc
rcll
inc
xchg
sahf
mov
test
xchg
call
or
hlt
xor
add
xor
cmp
lods
js
and
cmp
clc
daa
enter
jno
pusha
adc
sti
inc
aaa
xchg
rol
cmp
push
xchg
outsl
push
xor
push
xor
sbb
lods
int
mov
jns
gs
aad
cmp
mov
mov
cmp
mov
push
add
mov
and
push
test
lock
push
dec
sti
mov
fs
in
mov
and
push
adc
aaa
data16
xchg
cwtl
push
ds
or
fwait
mov
add
mov
shlb
test
fnsetpm(287
xor
sbb
into
xor
xor
test
fidivs
or
cmp
push
lret
jecxz
and
lret
clc
in
dec
cmpb
sbb
or
int
aam
pop
je
rclb
and
pop
mov
xor
mov
push
repnz
clc
push
pushf
jae
mov
clc
or
je
stc
cmpsb
mov
outsb
push
sub
popa
fildll
push
or
insb
lods
pop
jne
jl
inc
cltd
xchg
push
lds
dec
and
lahf
cli
mov
movsl
sbb
loope
xlat
cmp
mov
add
and
and
sub
add
jle
xchg
mov
cmp
and
das
adcl
push
adcb
in
sub
sar
jge,pn
jb
cmp
ss
fidivs
cmc
cmp
popa
leave
mov
aas
and
dec
cmp
xchg
cmp
bound
movsb
mov
cmp
shl
sbbb
mov
das
and
jb
xor
and
inc
pop
push
add
loop
adc
add
sbb
xor
xchg
hlt
insl
xchg
xchg
dec
popa
into
xor
stos
and
xor
add
mov
nop
xchg
xor
test
outsl
stos
pand
cmc
test
pop
mov
jge
pop
fdivs
into
dec
jp
jno
dec
jle
les
pushf
cmpsb
mov
shll
sbb
les
sbb
cs
rorl
or
push
jge
popf
lahf
out
dec
lahf
push
data16
test
decb
lcall
or
or
loopne
mov
mov
cwtl
jmp
rcl
stos
rcrb
popf
jno
mov
and
xor
mov
ljmp
pop
xchg
cmpsl
fisttpl
leave
add
clc
jbe
loope
rorl
fstps
pop
das
cs
cs
add
mov
movsl
in
dec
fiaddl
in
push
add
xor
scas
scas
aad
and
sub
jp
push
adc
mov
inc
test
jmp
sbbl
cmp
fwait
mov
push
pop
outsb
xchg
xchg
adc
sub
adc
in
dec
pusha
dec
sbb
pop
stos
fwait
mov
mov
adc
fs
test
lods
lods
out
shll
pop
mov
cmp
adc
jne
cs
push
cmc
jge
out
movsb
xchg
lret
sub
pop
xchg
add
push
repz
jo
mov
cwtl
pushf
sahf
cmp
out
xor
pop
das
jbe
push
out
std
pop
jnp
mov
sbb
or
mov
or
stc
sub
notb
xchg
push
dec
cmc
in
mov
out
pop
sub
add
ror
jne
outsl
andl
jecxz
popf
into
insb
sub
jnp
push
xchg
ljmp
push
mov
or
inc
add
repz
cs
scas
std
imul
cmpb
ljmp
mov
js
dec
jecxz
sahf
add
dec
jle
mov
sahf
data16
mov
mov
pop
lcall
pop
or
mov
mov
addr16
loope
sub
sarl
adcl
xchg
sub
cmpsb
mov
aam
cmp
in
lret
cmp
push
or
add
or
sub
ret
rcr
cmc
jmp
or
int
or
mov
jnp
mov
inc
xor
cmp
jb
xor
clc
popa
push
sahf
adc
rcll
ret
pop
xchg
rcrl
xchg
addr16
pusha
popf
out
jnp
scas
xchg
mov
lods
mov
std
xlat
push
aam
aaa
mov
mov
inc
xchg
cmp
xchg
pop
xchg
movsl
xor
mov
rorl
lock
je
lods
jl
dec
or
test
xchg
xor
ja
xchg
mov
dec
in
lods
add
add
addr16
mov
add
test
insl
push
mov
mov
pop
movsb
fistpl
inc
adcb
aas
in
rcrl
pusha
inc
cmp
lock
ret
jmp
push
lods
xchg
mov
jbe
dec
imul
roll
xchg
pushf
mov
loope
push
xchg
push
enter
add
fmull
cwtl
addr16
mov
sbb
fsub
dec
imul
push
lahf
pop
sub
pop
sbb
data16
hlt
sub
push
scas
mov
jle
cli
daa
lcall
cmp
ja
lock
movsb
inc
int3
lret
or
add
mov
xchg
fsubl
test
stos
int
or
add
insl
out
sbb
clc
insl
dec
sub
das
aas
adc
pop
enter
mov
popf
ljmp
lods
pop
jl
xor
mov
or
lahf
mov
loopne
aaa
dec
jp
testl
or
int3
scas
stos
pop
mov
sahf
in
cmp
daa
imul
in
js
or
inc
mov
addr16
jg
adc
jg
inc
ss
mov
xor
pop
sub
dec
aaa
xchg
inc
je
loope
or
pop
aam
cmp
xor
mov
push
jnp
std
fwait
push
sbb
sbb
add
dec
xlat
std
sub
pop
xchg
dec
lahf
aaa
push
in
add
sbb
imul
push
imul
outsl
push
jecxz
addr16
test
loopne
dec
jnp
mov
push
jle
andl
js
sub
pop
pop
icebp
cli
sbb
popf
out
xor
loopne
and
xchg
insl
inc
xchg
subl
rcl
and
push
in
dec
push
test
inc
mov
xor
mov
jno
out
aad
imul
scas
stos
cltd
movsl
stos
or
imul
jecxz
add
pusha
jns
or
mov
sarb
mov
cli
pop
js
mov
shll
andl
mov
insb
dec
pop
inc
daa
adc
in
lock
adc
arpl
cmp
add
leave
call
insb
jle
outsb
xchg
movsl
mov
jo
xchg
fisubs
dec
mov
inc
xchg
cltd
adc
ss
lret
xchg
sbb
xchg
xlat
dec
pop
mov
mov
jecxz
inc
inc
loope
cld
add
shlb
ret
test
jg
pop
lea
test
mov
hlt
fistpl
adc
adcb
aaa
mov
inc
stos
jae
pop
or
xor
xchg
dec
aam
xchg
rcrl
cld
in
mov
test
mov
push
push
sbb
lds
movsb
andl
jno
add
xor
rcll
inc
icebp
xor
mov
in
aad
lds
add
xor
rcll
inc
icebp
xor
mov
out
lds
jno
add
xor
rcrl
cmc
xor
movsl
xor
push
pop
gs
jno
add
icebp
jne
lcall
or
into
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jp
imul
cmp
daa
scas
mov
or
jg
outsl
mov
das
cltd
das
sbb
decl
cmp
or
stc
pop
jmp
outsl
stc
jp
setns
mov
rcr
iret
lret
call
popl
mov
lret
sbb
int
aad
pop
xchg
and
mov
mov
fidivl
cld
xchg
test
jmp
fists
bound
vpshlb
test
pop
xorb
cltd
xchg
xchg
sub
sub
pop
sub
shrb
adc
scas
pop
jmp
nop
test
mov
jecxz
push
add
mov
sahf
sub
clc
mov
aaa
ljmp
mov
xchg
xor
aam
lds
pusha
xchg
out
subb
orb
push
test
xchg
mov
rol
add
xor
in
dec
push
or
pop
cltd
aas
mov
and
aas
iret
pop
decl
fstpl
scas
scas
aas
pop
jae
scas
jg
outsl
icebp
pop
mov
imul
mov
inc
sti
insl
fimull
das
mov
pop
lret
imul
lock
in
dec
xor
or
sub
dec
lret
pop
sbbl
jp
cltd
lock
enter
add
xchg
push
sub
stc
pop
jmp
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
iret
out
nop
mov
imulb
or
call
sbb
lds
sbb
cwtl
aam
xor
or
loope
adc
xchg
popa
imul
mov
cmp
leave
jb
mov
loopne
stos
jmp
loopne
sbb
add
rcrl
insb
jns
cmp
mov
cmc
std
jbe
jns
and
fistpll
cld
jnp
fwait
jge
or
add
jno
add
pop
xchg
push
push
ljmp
insl
fstps
xchg
mov
jns
pop
repnz
data16
aam
add
mov
xor
jo
jge
mov
sub
mov
out
fildl
lds
push
mov
mov
jae
jb
dec
xchg
mov
rclb
insl
cmp
pop
out
and
dec
fs
jb
lret
cs
aas
cmc
dec
cmpsb
xchg
mov
mov
jge
shrl
dec
and
fs
cmp
push
ret
fwait
rorl
cs
push
xor
xchg
jb
iret
xchg
pushf
pop
xor
jle
add
jnp
movl
lea
sbb
out
or
loope
push
incb
adc
and
lea
dec
loop
ror
pop
jp
sub
test
movsl
xchg
mov
out
add
cmp
jns
dec
push
sub
adc
sub
pushf
cmpsb
lods
adc
push
mov
lahf
leave
and
std
in
cmp
inc
neg
mov
mov
sbb
or
aaa
add
jb
lahf
and
jge
arpl
fldenv
lret
cmpsb
jns
repz
jo
out
aam
pop
adc
mul
shlb
ljmp
lea
inc
pop
out
icebp
int3
and
push
ds
dec
pop
jecxz
das
inc
hlt
mulb
jp
cmpsl
fstps
data16
jae
jae
pop
dec
jecxz
in
pop
adc
xchg
cmpsl
xchg
mov
inc
pop
pop
mov
push
push
jns
adc
stc
pop
cwtl
daa
hlt
dec
mov
mov
sub
rolb
cmpsl
pop
mov
xor
fcoms
fiaddl
jb
aaa
test
xchg
sub
sbb
aam
mov
add
inc
sahf
pusha
lods
xchg
pop
ljmp
div
xchg
and
xchg
pop
jecxz
mov
ret
jmp
mov
cs
test
pop
jge
pop
xchg
add
cmp
sbb
jge
adc
nop
movl
push
cs
leave
jecxz
rcrb
iret
xor
sbbl
xor
popl
mov
xor
lds
notl
sahf
or
sbb
cmc
inc
xchg
xor
sarb
sbb
setl
test
xor
mov
insl
mov
adc
push
adc
jae
inc
ja
add
into
out
mov
incl
in
fdivl
test
sub
push
xchg
mov
les
jno
adc
pop
jp
and
sbb
xchg
jae
stc
lea
xchg
and
mov
or
sbb
shl
or
mov
lods
or
sbb
hlt
pop
xchg
adc
call
js
and
jge
push
jno
in
jge
dec
adc
pop
inc
add
mov
sbb
mov
and
rolb
dec
andl
jmp
rcrl
flds
call
cld
out
pop
and
hlt
inc
push
xor
cs
mov
data16
dec
mov
xor
popf
jl
jle
shlb
fnsave
or
fnstcw
pop
or
out
or
ret
ds
inc
mul
loope
cld
ror
cld
lcall
dec
sbb
and
or
adc
popa
pop
adc
sub
mov
jnp
hlt
inc
push
dec
mov
fisttpl
cmc
xlat
movsl
sbb
inc
xchg
loope
ret
clc
sbb
adc
arpl
push
ficompl
jge
dec
daa
pop
sub
clc
and
inc
ret
add
mov
mov
mov
mov
mov
in
rcl
push
xchg
std
or
cmc
cmp
inc
sub
es
jp,pn
cli
sbb
sub
sbb
sbb
fldl
dec
mov
int3
stos
loope
xor
jbe
sahf
add
pop
jae
ret
jo
sbb
lret
inc
jmp
add
nop
or
lahf
xchg
movsl
bound
jnp
gs
cmp
ss
es
mov
push
ljmp
int
mov
fcompl
pop
mov
pop
or
dec
leave
mov
clc
add
into
cmp
jmp
fisttpll
dec
sub
mov
or
sbb
into
mov
mov
or
dec
test
fdivr
or
scas
and
divl
bnd
loope
sbb
icebp
loop
push
pop
add
xchg
cli
push
dec
sub
popf
or
sbb
and
dec
sbb
enter
push
in
lods
ret
cmpsl
stos
shl
je
mov
add
cmpsl
cs
fistpl
pop
shrb
test
xor
ds
repz
xor
mov
lds
ljmp
pop
and
and
repz
jb
pop
cmp
pop
push
fistpl
xchg
xchg
inc
shr
dec
sub
push
xchg
inc
adc
mov
pop
enter
mov
sub
xchg
inc
fdivl
out
je
dec
mov
xchg
inc
adc
call
cmp
cli
cli
add
fists
jge
fsubrp
cmp
mov
clc
add
cmpsl
fwait
mov
arpl
pusha
sbbl
in
sub
shl
jno
imul
lods
in
imul
scas
lods
cmp
pop
mov
jno
aad
test
aaa
pop
mov
fsubrl
push
mov
xchg
data16
add
rcll
arpl
addl
xor
inc
cmp
cwtl
jl
rcll
xlat
add
cld
test
mov
and
or
scas
xchg
fcomip
shlb
inc
pop
jnp
cs
mov
xlat
icebp
adc
mov
xchg
mov
popa
cmp
bound
into
pop
shr
inc
or
sbb
dec
jne,pn
add
repnz
lret
popa
and
mov
ja
add
mov
cmp
js
out
and
jbe
xlat
jno
mov
and
repnz
inc
sbb
mov
mov
mov
push
bound
loopne
pop
loope
fcomip
and
std
mov
arpl
xor
gs
std
mov
inc
pop
mov
stos
inc
int
cmc
lea
dec
mull
in
push
scas
aas
loope
ljmp
cmpb
mov
mov
cmp
mov
lret
loop
jp
cmp
shrb
cmp
int
dec
xchg
add
inc
or
out
aaa
mov
mov
xor
arpl
and
call
mov
xchg
out
bound
subb
aad
inc
stc
cmpsl
adc
sbb
xor
jb
adc
cld
mov
es
cltd
ss
xchg
and
mov
adc
stc
dec
mov
int
imul
xor
and
adc
cmc
xchg
and
sbb
lods
aaa
sbb
rclb
jle
iret
pop
fndisi(8087
lcall
and
add
cmp
call
add
lret
pop
aam
and
ss
ljmp
cmp
xchg
insb
stc
stos
addr16
fsts
daa
mov
clc
das
loopne
cli
adc
ss
adc
inc
mov
xchg
or
out
sbbb
pop
mov
cmp
es
jns
movsb
push
xor
mov
and
fwait
insb
push
push
rcll
mov
xor
stc
push
cmpsl
icebp
mov
push
dec
loopne
aam
shr
sbb
push
cmp
call
sub
xor
mov
repnz
jmp
nop
mov
loopne
mov
fcomps
mov
xor
lock
inc
in
sub
inc
rcl
imul
fisttpl
add
jb
cmp
inc
daa
mov
add
repz
mov
arpl
mov
in
xchg
xor
sbbb
xchg
xor
push
inc
dec
and
push
mov
cmp
in
pop
lret
aad
je
cmp
adc
xchg
decl
ret
lods
add
pop
shl
ror
xchg
aam
ljmp
dec
jne
sbb
and
call
xchg
dec
in
cmp
cmp
mov
xlat
lret
hlt
aad
dec
pop
or
insl
sub
jge
jp
mov
imull
and
jb
xchg
mov
aad
ss
rol
arpl
imul
test
dec
rolb
xchg
mov
mov
ljmp
sbb
mov
inc
rorl
mov
jmp
cmp
inc
or
mov
clc
pop
and
scas
outsb
mov
push
ror
push
xchg
ret
aas
sbb
add
dec
sbb
inc
or
out
sub
jecxz
stos
cli
daa
out
out
ss
mov
jmp
adc
mov
sbb
and
mov
pushl
or
and
aam
inc
mov
jns
imul
sub
out
dec
pop
test
inc
mov
pop
out
or
enter
adc
loope
divl
inc
jae
push
int3
pop
aas
mov
add
mov
js
daa
xchg
out
repz
push
mov
scas
lea
enter
xchg
mov
js
cltd
popf
into
dec
ds
aad
add
and
aam
dec
in
nop
ss
jno
in
mov
outsb
xchg
stos
mov
or
xchg
pop
add
aaa
fidivrl
fisttpll
sbb
jg
or
cmpsb
and
mov
and
xchg
jnp
xor
mov
inc
jne
fcomip
add
sbb
sub
inc
stos
adc
cmp
ds
fwait
mov
ja
fldt
shrl
movsb
push
ret
adc
dec
scas
jno
or
xchg
cmp
setb
jmp
movsb
mov
pop
lret
sub
and
or
rorb
bound
andb
or
aaa
dec
push
fdivs
shrl
xchg
ret
test
sub
rcrl
adc
int
je
adc
jmp
jae,pt
mov
scas
clc
and
shll
pusha
push
xchg
cmp
sub
inc
push
or
roll
pop
add
jo
push
inc
adc
outsl
xchg
lret
mov
cld
xlat
aas
jae
mov
mov
sub
lock
sub
adc
sbb
cmp
int
jns
cli
push
outsb
xchg
mov
dec
pop
sub
int
mov
add
cli
mov
push
sar
in
cmp
sbb
imul
je
testb
cmp
popf
movsl
les
repz
push
das
inc
in
dec
ljmp
push
out
aam
test
or
imul
jg
ss
xchg
rclb
lds
mov
add
cmp
mov
clc
xor
jmp
lret
adc
and
sahf
mov
adc
mov
sbb
hlt
out
inc
dec
lret
repz
out
daa
leave
pop
pop
test
lret
sbb
addb
mov
cmp
and
loopne
sar
jo
lret
push
and
fbstp
int
imul
incl
or
xchg
je
mov
pop
cs
sbb
imul
adc
inc
ror
nop
shr
xor
int
mov
cld
adc
test
mov
mov
stos
ret
pop
imul
loope
mov
dec
jge
push
out
sub
mov
int3
subb
mov
push
out
test
mov
mov
and
or
xchg
jge
icebp
int3
dec
xor
dec
jle
xchg
fldt
lods
sub
negb
cli
call
fistps
adc
adc
pop
imul
xlat
enter
cmp
pop
rcll
pop
jns
sub
mov
popf
jmp
xchg
push
push
cmp
bound
cmpsl
lcall
cmp
cmp
and
bound
inc
jae
aad
xlat
adc
lods
lret
mov
pop
aaa
cli
xchg
jecxz
out
roll
mov
dec
addr16
es
mov
mov
sub
xor
dec
aad
pop
stos
or
jb
data16
inc
inc
fwait
adc
or
xchg
or
and
pop
stos
cmp
xor
lea
sbb
xchg
push
cmp
pusha
insl
adc
js
mov
std
stc
lcall
mov
mov
jb
pop
xchg
pusha
rep
xor
div
jb
loop
cmpsb
mov
xor
xlat
jmp
lock
mulb
orl
int
mov
xchg
pusha
jge
fs
outsb
stc
and
mov
push
cmp
rorb
and
push
xchg
loopne
gs
dec
out
mov
mov
sub
and
xlat
or
loope
ja
xchg
sbb
sbb
aaa
imull
aad
xchg
xchg
and
jne
mov
clc
dec
sbb
push
push
push
and
orl
inc
aas
subb
xchg
jg
loopne
jg
sarb
mov
mov
xchg
push
jne
sbb
mov
in
shr
xchg
cmpsb
sub
sti
cmpsb
sbb
ja
cmpsb
and
xor
cmp
mov
imul
push
cmp
loopne
lcall
outsb
add
mov
negb
dec
in
sub
cmp
fisubrl
sub
xchg
push
push
mov
mov
scas
addl
pop
insl
push
dec
hlt
scas
adc
jnp
jo
sub
cmp
in
and
sub
push
pop
add
outsl
push
jg
and
inc
jnp
dec
lds
js
ficoml
lods
adc
das
jo
jl
jnp
lret
push
rcl
xor
pusha
arpl
and
lods
push
mov
jno
pusha
sahf
movsl
repz
fldl
fiadds
lret
and
dec
and
push
push
in
xchg
cmp
mov
mov
mov
pop
cmpb
aad
addr16
das
jns
sub
cmp
aad
push
adc
inc
mov
out
in
imul
add
jecxz
fwait
sti
sub
adc
xchg
test
dec
adc
mov
mov
aaa
jl
sub
inc
pusha
fldl
scas
cmc
aad
jle
dec
xchg
addr16
stos
sbb
mov
inc
cmp
bswap
xor
push
sbb
adc
les
lods
push
sub
idivl
and
mov
inc
mov
mov
scas
mov
sbb
ret
test
pop
aam
lods
ja
jmp
arpl
cs
jae
xchg
push
push
test
fnstsw
dec
aad
into
or
mov
pop
js
sbb
jmp
add
mov
out
aaa
mov
or
mov
xor
shll
sbbl
fisttps
arpl
push
or
pop
in
cli
in
cltd
cmp
dec
push
jo
add
mov
fiadds
push
inc
adc
sub
repz
fsubs
enter
lds
cli
std
cmp
sub
pop
insb
ret
insb
xlat
xchg
sub
test
mov
push
std
cwtl
js
jo
negl
sbb
or
mov
jnp
loopne
xchg
lods
es
pusha
andb
cmp
ret
mov
push
ljmp
add
dec
ret
inc
cmp
mov
sub
mov
testb
pop
int
call
jle
aam
adc
and
mov
pop
adc
lds
and
test
xor
pop
inc
repnz
jb
or
loope
adc
incl
jb
pop
sub
pop
xor
mov
lret
cmpsb
add
push
shlb
or
leave
xchg
adc
loopne
ss
and
push
mov
test
inc
mov
push
push
mov
divl
jns
js
data16
mov
stc
cs
enter
sub
jge
pop
sub
jbe
ds
jp
pushf
pop
add
inc
and
ljmp
and
sbb
or
fwait
and
xchg
loope
imul
out
in
cmp
push
stos
sbb
lds
das
cs
mov
shrl
test
jno
shrb
dec
push
test
push
sbb
xchg
dec
aas
mov
inc
pop
sbbb
fdivrs
ss
xchg
outsb
add
idivb
clc
or
int
nop
jmp
aad
mov
int
adc
jne
inc
cmp
jl
mov
xchg
xchg
fcomps
mov
test
mov
lods
roll
push
or
pop
inc
and
jo
xor
sub
sbb
push
fsts
pop
mov
sbbb
pop
ds
inc
imul
add
dec
push
clc
out
popa
movb
pop
push
ss
inc
addr16
lret
repnz
push
lods
xor
xchg
shll
out
xchg
mov
shr
in
jle
mov
clc
test
xor
jl
jecxz
sub
mov
mov
subl
xor
inc
cld
mov
cmpsb
adc
pop
movsl
or
imul
jecxz
movsb
imul
xchg
inc
or
sub
mov
in
icebp
xchg
sahf
aaa
jg
jecxz
outsb
movsb
daa
lahf
mov
xor
push
iret
or
idivb
sub
inc
inc
leave
mov
sbb
and
xchg
aas
cmp
or
aas
es
outsb
in
mov
adc
push
inc
shrl
ja
push
mov
into
xor
ljmp
push
in
add
loope
les
mov
jae
or
inc
sbb
adc
gs
cli
out
jl
sbb
fcmovb
pop
mov
and
das
imul
rcrb
ds
jmp
in
outsb
imul
aas
cmp
fs
or
imul
fbld
or
fwait
or
cmp
mov
and
idiv
scas
add
test
mov
out
mov
xor
cmpsb
lret
movsl
xor
cmp
pop
dec
daa
dec
mov
or
loope
mov
push
dec
movsl
ja
sub
cmp
and
hlt
mov
mov
fnstcw
fcmovu
xchg
push
ret
les
lods
pop
outsl
arpl
pop
xchg
cmpsb
pop
push
rclb
xchg
mov
std
in
inc
pop
icebp
popa
and
adc
or
cmp
adc
inc
xor
and
dec
push
je
fdivs
push
sbb
sub
clc
ja
lret
and
fnstenv
je
es
imul
cs
test
xchg
inc
mov
fisttpll
dec
mov
jecxz
jbe
adc
stos
out
push
mov
repz
jl
adc
je
adc
clc
push
aas
in
add
push
dec
and
int
rorb
popa
imul
jge
rorb
add
inc
subl
nop
arpl
ja
pop
cltd
test
leave
push
addb
iret
sysenter
je
leave
aam
jo
xchg
fsts
cmpsl
dec
push
mov
push
rcl
push
or
sbb
or
mov
insb
mov
ficompl
push
dec
addr16
pop
fnstcw
ret
sub
push
aam
jmp
sahf
xchg
cs
enter
cld
outsb
mov
icebp
int3
mov
mov
mov
push
dec
push
outsb
jns
mov
mov
jnp
gs
ret
loope
daa
ss
xchg
sub
and
xchg
mov
jge
clc
rcrl
in
sbb
outsb
aas
mov
mov
stc
stos
out
sahf
popl
push
jae
pop
aam
test
cwtl
mov
inc
int
cmp
fisubs
test
in
mov
push
xchg
cmp
xor
fildl
pop
xchg
nop
inc
out
je
sub
ja
cld
sub
jl
cmp
movsl
xor
dec
ret
stos
dec
ficoms
pop
mov
cmp
aas
inc
sbb
xchg
je
jmp
popa
jl
jp
test
xchg
gs
fcompl
mov
push
rorb
les
repnz
mov
pushf
sbb
dec
dec
sbb
sub
leave
inc
cltd
jl
push
xchg
push
fwait
jmp
push
movsb
jmp
sbb
xlat
adc
sbb
into
pop
xor
jge
xor
in
xor
pop
das
aad
scas
rcrl
push
fmuls
in
pusha
cld
jecxz
inc
mov
es
adc
test
jne
xchg
movl
pop
fmull
mov
cmp
inc
iret
push
decl
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
pop
iret
cmp
dec
out
test
mov
jmp
outsl
mov
aas
popa
das
insl
fbstp
out
cmp
mov
pop
push
in
jg
sbb
xchg
and
data16
jo
pusha
dec
push
pop
inc
jecxz
dec
dec
pusha
xor
out
lock
into
rcr
shrb
sahf
subb
pusha
dec
push
pop
inc
xor
and
adc
add
lock
outsb
mov
mov
outsb
jo
pusha
dec
push
pop
inc
xor
and
adc
add
pop
fucom
mov
cmc
ror
sti
loop
xorb
sbb
dec
aas
xor
out
mov
add
outsb
xor
inc
test
inc
ljmp
inc
es
loopne
mov
fcomip
push
jecxz
adc
jnp
xor
and
lds
sarl
sub
dec
cmpsl
sub
push
inc
in
out
or
push
cmp
jmp
sahf
or
jle
and
pop
inc
or
sub
mov
jnp
xor
mov
push
pop
or
nop
sahf
lahf
scas
aad
mov
lea
test
dec
das
mov
pop
fisubrs
or
lea
aad
in
inc
int3
lods
andl
mov
shl
movsl
xor
test
andl
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
jmp
daa
cmp
sub
pop
dec
and
sbb
out
xchg
fwait
xchg
into
mov
mov
rorl
sbb
push
xor
js,pn
inc
jbe
dec
add
mov
scas
scas
rcl
lret
loop
jmp
or
jle
and
xor
push
adc
add
lock
loopne
rcr
shrb
sahf
subb
pusha
dec
push
pop
inc
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
sub
loop
pop
sar
cmp
in
jmp
xlat
dec
scas
test
rclb
insb
xchg
cli
sbb
movsb
rcrb
mov
fisttpl
insb
push
insb
xchg
lcall
jl
sub
sti
pop
loope
jmp
or
mov
push
mov
xor
aam
jle
mov
iret
or
lret
insb
cld
cs
outsl
stc
aad
xchg
xchg
test
pop
pop
sub
xor
nop
pop
js
rcrl
arpl
mov
out
cmpsb
lcall
js
sub
stos
jl
pop
sahf
ljmp
les
mov
pop
lret
jp
adc
xchg
xchg
nop
pushf
pop
jnp
out
les
sbb
jno
mov
ret
int3
aam
sti
rcrb
js
nop
inc
jp
call
jb
test
sbb
fnstcw
adc
outsb
test
movd
add
shrb
xchg
test
sbb
or
pop
xchg
mov
hlt
push
push
xor
enter
sbb
push
sete
jle
xor
fcomps
sbb
inc
cwtl
mov
jge
lea
testl
sub
or
push
cmpsl
out
sub
add
imul
dec
push
lret
jb
push
add
in
call
jmp
jno
mov
adc
int3
mov
jmp
dec
cmpsl
or
inc
push
scas
sbb
enter
cmpsb
xor
dec
test
push
fucomi
adc
cmp
inc
jae
in
xor
adc
jp
cwtl
mov
sub
mov
hlt
xchg
es
and
addr16
xor
mov
mov
aaa
jns
mov
and
bound
les
sahf
mov
dec
xchg
pinsrw
jmp
inc
jle
sbb
xor
imul
dec
jns
and
pop
pop
aaa
orb
xlat
adc
out
adc
out
popf
mov
ss
xchg
dec
xor
adc
insl
xor
mov
es
stc
pop
push
push
popf
or
adc
cmp
jb
in
jo
stos
or
mov
mov
leave
in
pop
cwtl
mov
push
jnp
inc
pusha
aam
sub
fildl
xor
xor
mov
inc
stos
dec
inc
jecxz
pop
xor
dec
outsb
subb
outsl
mov
dec
adc
je
push
mov
mov
dec
lods
aad
test
and
fistl
sub
or
mov
lods
call
mov
xchg
outsl
push
mov
insb
insl
jmp
pop
mov
xchg
push
je
fdivrl
xchg
int3
imul
fisttpll
add
enter
std
fisubrs
and
popa
add
push
cmc
dec
sub
aad
es
or
dec
data16
jo
test
jnp
lret
mov
sub
push
scas
sub
shrl
push
push
or
ja
pop
adc
test
mov
int3
int
jecxz
push
iret
dec
cmpsb
cmpsb
insl
icebp
das
xor
xor
xor
jg
lds
jns
popf
push
addr16
ljmp
mov
cmpsl
lret
fidivl
sub
pop
mov
sbb
addr16
clc
fs
jo
sarl
push
popf
cmp
enter
or
inc
pop
scas
ljmp
dec
mov
xchg
dec
lock
mov
outsb
xor
loop
rcrl
xor
dec
mov
mov
lods
outsb
nop
stc
sbb
mov
int3
jae
fidivs
adc
xchg
cmp
movsb
inc
dec
inc
mov
cltd
out
mov
dec
cmp
cwtl
fsts
add
lahf
pop
sub
lds
pop
xchg
dec
push
xchg
inc
ss
or
ss
mov
push
jmp
inc
loopne
cwtl
int
out
mov
dec
shll
adc
imul
add
dec
dec
and
pop
insl
mov
cmp
xlat
jmp
outsl
stc
cmpsb
loopne
push
and
out
dec
arpl
ret
fwait
dec
aam
je
popf
jnp
xchg
imul
fwait
cmp
gs
popf
push
pop
or
roll
xor
add
pop
pop
outsl
jo
push
lods
repnz
imul
cli
enter
loopne
add
les
mov
sbb
jb
mov
pop
mov
stos
add
les
pop
mov
xchg
sbb
mov
ficomps
inc
std
push
loopne
mov
xor
rcrl
sub
decb
lods
sub
jl
repz
ds
ljmp
mov
stos
adc
cltd
inc
sbb
out
jle
mov
ss
pop
or
rolb
cltd
adc
xchg
insb
ss
mov
std
frstor
mov
fcomps
es
adc
es
add
jne
hlt
fcoms
mov
push
and
cmp
dec
jnp
rolb
adc
in
in
lods
inc
and
mov
cmpsl
cs
in
add
arpl
xor
push
jg
mov
lds
fisubrs
jb
imul
mov
insb
enter
dec
cmp
sub
mov
xor
pop
cmp
es
add
shll
adc
cmpsb
push
gs
or
xor
xor
sarl
pop
sarb
mov
sahf
sbb
mov
dec
mov
ret
sub
clc
add
adc
inc
add
ja
ret
push
push
pop
pop
testl
mov
xchg
push
test
add
fadd
addr16
fdivrp
insb
push
xchg
jb
or
pop
pushf
popf
sti
fidivrs
sbb
orb
xor
and
xchg
jne
movsb
iret
shlb
fisubrl
inc
mov
stos
cltd
lds
adc
sti
icebp
call
cld
flds
add
or
add
insb
sbb
js
cmc
test
fst
dec
scas
mov
mov
movsb
push
cmpb
shll
push
stos
xor
pop
lock
icebp
mov
lret
pop
lret
xchg
andb
sbb
in
testl
mov
pop
out
daa
into
mov
and
push
clc
mov
dec
cmp
mov
shrb
adc
shlb
or
test
in
clc
xor
mov
bound
push
adc
bound
scas
xchg
xchg
outsb
dec
push
ss
dec
push
push
notb
dec
inc
ret
gs
pop
dec
or
inc
stos
pop
out
pop
or
lods
ret
push
iret
andl
cmpsb
push
je
inc
mov
lds
aam
enter
sbb
mov
rcll
mov
pop
iret
test
ja
lahf
and
mov
or
cmp
in
dec
lret
fnstsw
imul
cld
fisttps
push
rclb
jae
mov
xlat
jg
cmc
push
mov
cmp
jns
out
cld
scas
jecxz
xchg
and
sbb
negb
push
ret
cmp
test
xchg
jo
lods
sub
notl
mov
outsl
dec
push
xchg
dec
lahf
push
or
cmp
lds
sbb
inc
adc
pop
add
ja
push
or
neg
fnstsw
jo
jo
adc
les
and
mov
pusha
mov
in
movsl
test
fldcw
push
and
in
dec
int3
jno
xor
sbb
dec
mov
testl
fs
into
mov
pshufw
loopne
adc
mov
lock
scas
in
push
mov
test
and
scas
pop
jle
xchg
xchg
rcrb
rorb
ljmp
sub
cli
pop
and
inc
cwtl
mov
das
push
inc
ss
out
push
adc
xor
mov
fdivs
icebp
dec
pop
int
les
cmpsb
push
push
mov
mov
lds
clc
cwtl
jae
sbb
mov
xchg
mov
mov
jp
dec
ds
mov
insl
fsubp
mov
inc
aad
in
cmp
inc
fidivrs
mov
and
push
iret
aas
sbb
imul
leave
jae
out
xlat
mov
inc
int3
lret
aam
dec
popf
push
xchg
ret
adcb
mov
pop
shrl
mov
shlb
icebp
xor
ss
into
pop
dec
scas
sub
xor
daa
lcall
inc
or
push
xor
bound
cmp
mov
jle
cmp
cmpsl
pop
mov
clc
inc
mov
rorl
mov
cld
lock
iret
xor
fucomi
xor
shll
add
ja
sbb
mov
mov
pop
xchg
dec
add
enter
cli
cltd
ljmp
cmc
cmp
repnz
lea
lret
pop
test
lret
adc
xor
std
inc
sti
gs
addr16
in
imul
adc
adc
filds
or
jp
jbe
fwait
or
pop
mov
sarl
push
and
fcmove
push
clc
xchg
xlat
out
lods
add
xor
arpl
cmp
ret
movsl
nop
and
mov
ret
push
lds
push
xor
or
loope
fdiv
icebp
add
call
mov
cwtl
add
adc
sub
call
inc
jp
mov
nop
add
dec
jecxz
push
scas
divb
xchg
mov
fcomip
andb
jnp
mov
dec
sbb
fildll
cmpsb
sub
or
xor
mov
add
add
xchg
stc
mov
or
sbb
push
or
push
cli
jle
push
mov
jl
xorb
push
jle
into
xor
cld
pop
imul
insb
aad
lret
jns
jg
pushf
push
pop
sar
add
fsubr
aam
pop
insb
lret
push
hlt
mov
popl
and
pop
fisttpll
push
nop
je
rcr
arpl
lret
movsb
daa
lods
ss
in
repnz
mov
inc
push
sbb
aaa
push
insb
and
testl
jo
or
pop
incl
pop
sub
jmp
jns
jae,pt
pop
scas
jo
pop
stos
jo
xchg
js
repz
icebp
add
fcoms
scas
lods
push
in
hlt
fwait
icebp
xchg
push
repnz
push
push
out
mov
imul
cmpb
stc
test
mov
push
dec
mov
mov
xchg
ret
jno
mov
in
das
jbe
cli
pop
fs
fdiv
mov
xorl
ds
push
dec
repz
aad
js
fidivrl
pop
mov
sti
sarb
dec
ret
shl
mov
sub
inc
inc
xchg
hlt
sbb
das
mov
sahf
or
cmp
and
adc
fsubl
and
popfw
xor
clc
out
pop
jns
xchg
xor
daa
push
xor
adc
adc
fucom
mov
pop
fldcw
pop
mov
cmp
jo
push
std
jecxz
fcmovu
cmp
lods
daa
jno
loop
rcrl
xorl
xor
outsl
xor
loop
add
add
mov
xor
inc
push
lahf
rclb
outsb
mov
and
xor
sub
inc
jne
sub
push
lds
push
sbb
dec
sbb
sbb
dec
cmp
xor
add
inc
mov
aaa
push
nop
jno
subl
rol
add
ja
icebp
mov
popa
sub
pushf
fwait
arpl
stos
lret
ja
dec
ror
xchg
mov
mulb
shlb
cmpl
out
xchg
outsb
jbe
xchg
sub
pop
xor
out
iret
je
mov
loopne
aam
das
jecxz
sbb
stos
addr16
iret
int3
jb
loopne
fimull
mov
add
dec
push
mov
or
adc
outsl
decb
daa
push
xor
sbb
mov
test
sub
int3
xor
popf
insl
dec
xchg
inc
mov
xor
mov
sub
cmp
into
xchg
mov
xchg
fwait
mov
jne
icebp
push
sub
cwtl
mov
dec
mov
xor
stc
in
faddl
aas
ret
push
js
out
movsb
mov
mov
movsb
ss
gs
mov
rcrl
jns
jb
lar
in
inc
sbb
lcall
xchg
aaa
sbb
lods
insl
xchg
jbe
fcoms
mov
inc
xchg
adc
cs
test
clc
adc
imul
daa
outsl
add
mov
ja
sahf
js
sub
sbb
or
push
das
pop
shrl
lods
les
fwait
clc
add
sub
fwait
int
xor
pop
icebp
cld
push
add
shlb
xor
xor
dec
adc
pop
jb
inc
sbb
out
inc
call
cmpsb
push
adc
sti
sub
add
mov
mov
fldl
mov
jcxz
xor
dec
or
je
dec
push
cwtl
pop
xor
mov
mov
xchg
or
or
push
dec
leave
push
sbb
push
mov
lea
or
inc
sbb
adc
psrlw
cmp
pushf
push
xchg
imul
std
adc
sbb
lret
lret
sbb
mov
cwtl
push
gs
frstor
arpl
sar
das
cmp
cwtl
loope
xor
rcr
jne
inc
mov
inc
and
in
enter
cmc
test
in
lods
ds
lea
loope
ret
dec
push
add
add
mov
in
and
decb
ljmp
sub
sub
dec
jecxz
jmp
stos
cmpb
test
xlat
mov
dec
sbb
insb
insl
xchg
lods
clc
movsb
mov
fcoml
stc
test
in
xor
outsl
ds
fs
cwtl
aam
mov
adc
stc
ja
fucomp
add
data16
xorl
inc
sti
aas
jnp
xchg
call
int
imul
roll
or
sub
sahf
mov
mov
fcmove
cltd
testl
outsl
push
pop
rcll
int3
test
fisubrs
or
movsb
xor
sub
sub
ficoml
pop
loope
mull
jae
jns
sbbb
repz
pcmpeqw
cmpsb
mov
out
outsb
sub
fistpl
and
test
adc
xor
push
pop
out
scas
cmp
shlb
lods
add
inc
mov
sub
aaa
jge
insl
and
xchg
cld
mov
jle
and
mov
xchg
lret
xchg
mov
sbb
fcomps
xlat
es
lahf
pop
movsb
adc
lds
mov
sub
pop
or
add
xchg
mov
jb
in
or
mov
sub
push
rclb
out
imul
lret
adc
dec
mov
stc
orb
idivb
and
outsl
popf
mov
loop
js
pusha
jb
es
imul
xchg
mov
std
in
cli
and
mov
jb
push
or
push
pop
dec
mov
ror
imul
and
frstor
and
mov
xchg
test
mov
push
insb
mov
repz
adc
add
xchg
and
ret
mov
inc
mov
mov
aaa
xor
loope
jmp
and
sub
sub
sar
loop
or
sub
mov
or
mov
and
ja
je
fcoml
jg
sub
pop
in
push
cltd
ja
sub
test
je
popf
jge
popa
in
loop
push
xor
aaa
or
dec
xchg
scas
cmpsb
jp
adc
dec
pop
dec
mov
fstl
pop
int3
test
std
xchg
pop
sbb
stos
fadds
xchg
aaa
and
imul
fcoml
fnstsw
mov
dec
cmp
sub
je
ja
xchg
xchg
push
shrl
xor
xor
add
dec
ja
daa
cwtl
jnp
call
mov
cs
in
test
rcl
cld
fstl
adc
jle
or
add
cmp
nop
sub
cwtl
and
nop
or
or
dec
sub
daa
sahf
insb
imul
out
cwtl
mov
int
shll
out
fidivrl
add
sbb
aas
leave
xchg
incb
mov
js
dec
mov
popa
icebp
lret
and
clc
js
dec
xchg
jg
in
lods
xchg
mov
cmp
repnz
test
xchg
fstpl
xor
adc
and
xchg
xchg
xchg
in
mov
pop
jno
jle
mov
xorb
and
fidivs
shlb
fcmovbe
rolb
test
mov
ja
and
jmp
imul
add
and
adc
inc
jg
sbb
into
dec
adc
xor
mov
int3
inc
jns
mov
or
sbb
les
cmp
jecxz
out
lret
aam
xor
jo
adc
mov
insl
enter
aas
xor
ficomps
push
ficomps
inc
pop
inc
push
insl
add
jbe
pop
cmp
cmc
call
mov
aas
test
adc
add
add
jg
mov
ficoms
push
aaa
lea
inc
cltd
mov
jb
lock
sub
rcr
sub
je
lahf
stos
call
aas
out
pop
in
andl
jnp
and
mov
imul
cmp
xchg
xchg
dec
push
fwait
loope
movsb
or
cmp
fisttpll
mov
loopne
pop
out
push
adcb
subl
push
dec
sbb
mul
mov
scas
xlat
mov
bound
cmp
addb
je
fildl
cmc
jp
inc
cmpsb
inc
jecxz
popf
mov
test
push
mov
repnz
push
sti
or
mov
dec
lret
loop
xchg
mov
mov
out
lea
stc
xor
xchg
xor
adc
out
mov
pop
add
mov
mov
pop
adc
sbb
mov
test
adc
out
ret
in
stos
pop
push
fldl
mov
out
push
stos
outsb
popa
test
les
cmp
mov
ja
cli
popf
call
sbb
push
xlat
lea
cli
fdivp
ror
mov
popf
jne
xor
lret
sahf
test
add
jcxz
sub
mov
or
dec
cmpsb
add
clc
lock
inc
xor
insl
arpl
add
outsb
into
out
js
pop
imull
cwtl
inc
lock
push
loop
imul
pavgb
mov
inc
add
mov
dec
int3
push
les
sub
ror
ror
lret
sarl
ret
push
inc
sub
or
sbb
mov
imul
std
pop
mov
push
mov
cld
flds
cli
jnp
and
pop
pop
and
ss
mov
cltd
xor
inc
cli
pop
bound
push
test
int3
dec
push
loope
dec
not
negl
hlt
jns
daa
into
cmpsl
push
scas
xchg
seto
lods
jno
in
stos
adc
push
cmpsl
int3
dec
mov
push
pop
inc
outsb
mov
mov
and
cmp
in
bound
repz
mov
dec
rcrl
pop
scas
sar
repz
sub
cmp
cli
orb
mov
mov
mov
mov
sbb
mov
fmull
sbb
not
hlt
ja
aad
lahf
shr
sbb
out
std
inc
shrb
pusha
mov
mov
sub
mov
xchg
xchg
mov
cli
in
mov
sahf
mov
mov
pop
lods
xchg
bound
jecxz
leave
addr16
xchg
pop
sub
rcrl
mov
test
shrb
xor
scas
push
mov
inc
and
addr16
rolb
jns
mov
mov
mov
xchg
mov
mov
jl
mov
icebp
lds
add
mov
fisubl
add
push
sub
repz
into
xchg
dec
loope
lahf
sub
and
cmp
gs
ds
pop
test
cmp
sub
lods
jo
lahf
mov
repnz
add
xchg
stc
popa
ja
fwait
enter
cld
xchg
jge
push
inc
xchg
inc
adc
insl
loope
fildll
push
fisubrl
pop
push
mov
cmp
xor
shll
adc
push
lods
push
and
push
pop
dec
sbb
cltd
xor
popf
push
xchg
fimull
cwtl
push
jmp
push
out
aad
psubusb
enter
push
dec
std
add
xor
and
mov
fadds
and
test
cmpsb
or
jp
and
and
pusha
dec
push
pop
inc
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
pusha
dec
push
pop
inc
xor
and
adc
add
lock
loopne
rcr
shrb
sahf
subb
loopne
rcrb
scas
xor
mov
out
jo
loopne
rcr
shrb
sahf
subb
pusha
dec
push
pop
inc
xor
and
adc
add
lock
rcr
mov
cmp
pop
outsl
out
jg
cmp
rcll
repz
in
or
aam
les
add
je
rcll
repz
and
adc
add
hlt
inc
in
aam
les
pusha
movsl
ret
xchg
and
push
sti
inc
ljmp
add
hlt
mov
mov
jge
jne
xor
ret
add
js
insb
jae
cmp
iret
fcomp
addr16
and
jl
ret
push
stos
imul
call
ret
imul
ret
jle
cmp
push
ds
notb
dec
icebp
xchg
filds
mov
das
adc
fldl
xchg
jecxz
ret
pop
mov
add
add
imul
test
loope
rcrl
adc
mov
mov
into
in
push
pop
es
jae
imul
and
outsb
jecxz
cmp
mov
adc
mov
mov
arpl
mull
faddl
les
jmp
adc
add
hlt
pop
in
aam
les
sbb
adc
add
push
aad
std
jnp
sbb
sub
sbb
outsb
in
icebp
and
pop
add
add
mov
xchg
xorl
pop
les
inc
jno
jl
dec
out
push
adc
and
adc
add
hlt
inc
in
aam
les
add
je
rcll
repz
and
adc
add
hlt
inc
in
aam
les
add
je
add
loopne
mov
fwait
pop
inc
aad
mov
sbb
mov
push
dec
mov
mov
add
icebp
mov
mov
insl
push
cmpxchg
xor
xor
jmp
mov
call
imul
cmp
imul
xchg
dec
push
cmp
fstpt
jno
push
cltd
sub
mov
jnp
stc
inc
test
mov
daa
and
jo
xor
push
aad
outsl
nop
cmc
fstpt
mov
jle
jge
push
cmp
call
dec
push
arpl
cmp
add
test
stc
aad
adc
cmp
out
push
mov
and
mov
mov
or
jo
stos
xchg
rorb
mov
into
mov
xchg
in
cmp
pop
mov
cmpsb
or
mov
popa
lods
test
aas
xchg
adc
loope
xor
rcrb
inc
add
hlt
pop
out
xor
mov
addr16
sbb
sub
mov
ret
cmp
mov
fldcw
jmp
icebp
sub
jp
loop
hlt
cmp
push
movsb
jo
lret
push
outsb
call
mov
add
inc
ds
daa
add
or
or
pushf
pushf
pop
pop
mov
adc
loop
sbb
cmp
cmpb
lds
loop
lods
aam
adc
enter
mov
inc
cmpsl
or
std
pop
in
cltd
shlb
fnstsw
setge
add
jmp
mov
xchg
cmc
xor
pop
mov
xor
dec
test
xorb
jmp
imul
out
pop
cs
add
mov
dec
mov
pop
or
sbb
call
inc
lret
cmpsb
subl
pop
mov
mov
mov
xchg
push
imul
pop
ljmp
add
cmp
stc
pop
push
inc
or
mov
std
jg
stc
aaa
out
movsb
repnz
into
jnp
fnstcw
xchg
pop
pop
divl
jnp
jae
out
adc
inc
movsb
adc
push
pop
jo
mov
shl
add
mov
cld
into
loope
mov
sbb
and
pop
cli
fmulp
pop
ja
and
cmpsb
fsts
stos
jmp
shr
mov
fisttps
xchg
jmp
out
pop
fidivrs
rol
jecxz
sbb
scas
shl
xchg
fsts
sbb
popa
xchg
xor
pop
fildll
in
fldenv
mov
pop
cmp
cld
cmpsb
lea
test
pop
pmuludq
ja
in
outsl
dec
and
pop
inc
fsubl
fwait
inc
pusha
shlb
jno,pt
xor
fnstcw
in
inc
xor
dec
lock
popf
jle
notl
mov
xrelease
sub
outsb
jno
sbb
xchg
inc
adc
sub
sub
sbb
cmp
movsl
pushf
inc
dec
cltd
mov
dec
data16
je
xor
ret
sbb
xor
fisubrl
movsl
sub
sarb
std
add
pop
mov
cwtl
or
xor
out
fistpll
pop
test
mov
jne
xchg
stos
cltd
sub
or
shrl
xor
lods
pop
rcll
mov
adc
lods
or
scas
jb
adc
jmp
xchg
mov
shl
mov
scas
push
xor
out
sub
adc
push
enter
sbb
insl
test
mov
popf
mov
shlb
sbb
movsl
fidivrl
aad
mov
fnstenv
stos
xchg
inc
or
inc
cs
jno
xchg
push
loope
ret
pusha
outsb
or
cld
mov
enter
cmpsl
dec
dec
push
or
out
mov
xor
rcrb
bound
or
cwtl
lock
out
outsb
xchg
push
push
iret
inc
pop
out
scas
sbb
sub
push
xchg
fistpl
outsb
and
call
vpaddq
dec
push
test
je
pop
in
inc
pop
aas
and
push
sarb
mov
cs
push
push
dec
or
mov
add
popf
rorl
mov
in
popf
xchg
inc
mov
or
stos
cmpsb
je
je
fxch
and
cmp
cmp
inc
and
jg
out
mov
or
movsb
repz
jp
mov
in
fbld
std
dec
cmpsb
fistps
dec
mov
cmc
stc
imul
or
xchg
int3
mov
xor
stc
iret
xchg
sub
mov
jb
sub
sbb
jl
dec
iret
aad
arpl
clc
inc
or
lret
xor
addl
dec
inc
cmp
xor
pushf
mov
xchg
inc
int
je
std
movsl
scas
adc
cmpsl
mov
mov
lock
addr16
cli
mov
inc
sahf
sub
mov
stos
mov
mov
repz
push
mov
push
adc
test
es
and
inc
arpl
mov
nopl
xchg
push
push
xor
aaa
sbb
cmpsl
pop
sbb
push
and
push
jb
fwait
loope
test
push
stos
mov
cmp
jb
inc
xchg
dec
add
dec
sub
popf
and
pop
inc
lret
cmc
mov
add
pop
or
test
xchg
imul
es
mov
dec
daa
lcall
out
ret
imul
inc
dec
out
mov
pop
mov
lcall
adc
xor
pop
mov
and
ljmp
xchg
jge
fs
fsubl
iret
popa
aaa
push
xor
xchg
fdivl
pushf
adc
outsl
jge
cmp
pop
ret
sbb
sub
xchg
push
jne
in
inc
scas
push
test
mov
pop
aam
adc
ret
or
inc
pop
mov
pop
mov
mov
lahf
sbb
and
push
lods
mov
inc
dec
out
outsb
xor
xor
inc
sub
mov
mov
xor
pop
sub
into
push
cwtl
insl
jge
mov
mov
inc
push
mov
outsl
cmpb
mov
psllq
mov
xchg
push
add
std
loopne
shll
xlat
aad
cld
pop
mov
inc
scas
sar
jp
push
jo
insl
fdivrl
cmp
cmp
ret
pusha
dec
ret
insl
fadds
ljmp
enter
push
sub
mov
mov
jo
outsl
jns
xor
mov
movsb
popa
adc
or
xchg
out
call
sbb
mov
sub
sbb
mov
rorl
or
inc
dec
mov
ss
pop
scas
sarb
loop
mov
fsubl
sbb
movmskps
add
jb
push
out
mov
mov
push
inc
jae
mov
xchg
subb
mov
xchg
jg
and
jecxz
mov
int3
or
mov
pop
mov
push
sbb
lret
mov
xlat
dec
jne
shrb
mov
mov
adcl
ret
repz
or
dec
add
mov
incb
push
rcrl
pop
out
cmovg
ficompl
imul
fisttpl
push
fsubrs
je
test
pushf
ret
int
add
mov
cmp
xchg
xchg
insb
xor
inc
out
mov
or
or
fdivrl
pop
lods
and
mov
sub
cmp
bound
jno
enter
dec
mov
push
or
adc
push
sub
dec
sti
clc
scas
lahf
pop
jae
add
xchg
sbb
xlat
inc
jg
dec
fs
and
ss
pop
jo
jge
daa
cltd
fs
mov
sub
sub
ficoml
mov
cmp
sub
xchg
fcoml
mov
das
lds
add
adc
fcompl
imul
xor
jb
or
cmp
sub
push
aam
mov
dec
adc
mov
fildl
and
xchg
dec
sbb
test
jg
out
mov
sub
lods
ret
repz
dec
and
xchg
jo
pop
mov
cmc
pop
xchg
dec
iret
arpl
mov
shlb
icebp
jno
xchg
rcl
daa
mov
push
into
js
or
sub
add
repnz
jp
adc
test
xchg
stos
lea
repnz
cmp
movsl
push
dec
mov
xor
sar
mov
pop
test
push
xlat
test
or
call
test
addr16
in
shl
out
inc
push
or
push
movsl
sub
mov
push
scas
fiadds
clc
xor
and
mov
xor
xchg
or
or
xor
stos
stc
nop
xor
adc
sub
jp
or
sbb
mov
outsl
xchg
fnstcw
or
mov
adc
ss
xchg
dec
pushl
addr16
icebp
push
sub
out
xchg
adc
sbb
aaa
movsb
cmp
inc
mov
and
fcompl
dec
nop
out
push
sub
and
test
xor
iret
and
movsb
mov
mov
pop
mov
enter
cwtl
push
inc
adc
scas
mov
aaa
dec
jae
xchg
movsb
fucomi
ror
fldt
xchg
pushl
xor
push
imul
shr
hlt
rcl
lods
test
dec
out
xchg
fisttps
mov
mov
loopne
dec
add
inc
cli
sub
inc
mov
pop
lahf
stos
insl
enter
scas
fsubs
ja
pusha
push
int3
fdivrl
into
ficomps
mov
sbb
les
scas
repnz
pop
mov
jg
mov
lahf
or
mov
xchg
adc
cmp
call
test
xor
and
sti
pop
cli
loop
mov
jecxz,pt
cmc
sub
fs
nop
sarb
icebp
movsb
mov
pop
adc
jmp
addr16
inc
decb
mov
ss
loopne
mov
in
sti
out
pusha
pop
mov
lret
mov
add
mov
lahf
jns
add
mov
fst
ret
in
xchg
adc
flds
mov
inc
mov
mov
ficoms
pop
and
repnz
sub
into
mov
push
or
daa
mov
lods
fs
jb
andb
gs
push
sbb
jb
punpckhdq
repnz
ja
mov
xlat
jo
cmp
sbb
movsb
in
mov
or
data16
cmp
or
mov
adcl
cmp
ljmp
push
mov
xchg
int
pop
fs
cmpl
outsl
clc
jp
xor
cmp
mov
ret
xor
into
loop
lret
mov
mov
pop
adc
mov
shrb
xchg
std
rcrb
sub
mov
pop
out
dec
fwait
push
lock
adc
es
test
and
pop
pop
popa
sti
ss
inc
cmp
mov
dec
into
jo
inc
sub
bound
jb
cmc
es
lret
xchg
lcall
pop
ljmp
cmp
cli
dec
cli
push
push
in
in
fstpl
mov
inc
shlb
lock
push
push
mov
sub
sub
inc
lahf
dec
mov
jo
test
outsl
sub
and
mov
mov
pop
mov
pop
xchg
lea
sarb
stos
ret
loope
lods
pop
sbb
inc
pop
in
or
into
ds
pop
inc
xchg
jl
cmp
mov
inc
testb
int3
push
add
push
xor
sar
stos
jb
and
sbb
adc
mov
gs
clts
lret
out
movsb
xor
sub
jbe
in
mov
push
mov
rclb
loop
pop
test
sarl
xor
cmpsl
pop
lret
add
pop
imul
mov
inc
cmp
test
out
sub
mov
stc
mov
mul
pop
adc
leave
jle
pop
pop
jbe
xor
out
xor
sbb
push
imul
dec
fdivp
pop
mov
push
mov
jne
into
mov
roll
arpl
ljmp
sbb
lods
sub
cmp
les
jle
or
pushf
lock
loope
cs
cwtl
adc
cmp
and
movsb
sub
or
out
mov
cli
addl
sub
xchg
out
fildll
inc
mov
jo
sarl
sbb
mov
mov
aad
out
cmp
fsubs
int
roll
movsl
decb
xchg
int3
adc
cmp
mov
lods
jae
call
ret
push
xchg
jnp
stos
fs
scas
and
filds
pop
inc
or
xor
pushf
icebp
je
int3
xchg
dec
sbb
ret
push
call
xchg
xchg
mov
scas
add
mov
cs
jns
pop
adc
loop
add
push
sub
outsb
cmp
shr
sbb
fwait
xchg
inc
dec
subl
add
mov
fs
pop
mov
inc
pop
fnsave
mov
xor
sub
ret
nop
lock
gs
jb
push
mov
jle
popf
sbb
adc
test
pop
out
sbb
jle
jecxz
cmp
sbb
jecxz
subl
mov
int
pop
pop
imul
mov
imul
pop
test
sub
or
mov
gs
out
sarl
jle
out
xor
and
add
std
mov
push
jo
jnp
xor
cmp
mov
sub
sbb
prefetchw
push
nop
dec
mov
mov
outsb
mov
dec
popa
and
and
adcl
daa
fmul
int3
mov
fsubr
ja
xor
sub
mov
xchg
aas
add
clc
int3
push
adc
xor
inc
jg
push
adc
inc
sahf
cld
or
insb
mov
xchg
dec
aam
mov
sub
mov
xchg
mov
mov
mov
pop
lods
xchg
jge
rcll
inc
adc
nop
push
mov
add
push
movsl
xlat
lcall
nop
pop
mov
in
in
sbb
mov
sbb
jecxz
mov
je
fcmovbe
out
xlat
iret
sbb
ret
sub
lcall
xor
sub
insb
les
sbb
fcompl
and
xrelease
fwait
or
jae
addr16
repnz
and
fwait
cmpsb
fisubrs
sub
pop
or
out
sti
adcl
int
pushf
aas
cmpsl
mov
inc
in
add
bound
cmpl
lahf
push
push
and
jge
sbb
push
adc
fidivrl
int3
lcall
int3
or
mov
jecxz
fcoml
jnp
mov
pop
cs
sbb
jne
sbb
pop
int3
popf
mov
fisttpl
sti
push
add
pop
mov
loopne
inc
push
and
xor
xchg
mov
and
push
adc
push
cmp
lcall
ja
or
cmp
fildl
cmp
stos
in
mov
lahf
je
mov
cmpsb
hlt
leave
bound
out
out
fmull
mov
mov
loop
ja
cmp
pop
jbe
stos
sub
lret
daa
adcl
mov
sti
xchg
enter
inc
inc
rcrb
in
clc
cmp
in
enter
je
push
inc
stos
push
adc
add
mov
enter
popf
adc
sbb
loopne
inc
ret
icebp
insl
lods
out
ds
xchg
jl
cmp
and
mov
and
push
pop
push
adcl
shll
lods
js
mov
inc
in
mov
inc
scas
cmp
imulb
ljmp
icebp
fs
adcl
arpl
cwtd
pop
xlat
loope
mov
ret
jnp
xor
mov
adc
xlat
into
mov
pop
loope
inc
mov
adc
or
ret
xor
ss
into
fs
and
es
sbb
in
ret
sbb
push
or
fistps
push
sub
sbb
pop
movl
movl
les
jmp
mov
pop
test
aaa
ficoms
sub
fwait
cmp
dec
inc
cmc
add
dec
or
xor
shrl
lcall
xchg
dec
pop
add
xor
cld
xlat
arpl
or
add
inc
stos
push
in
lcall
adc
cmc
les
ds
adc
scas
sbb
cmpl
jo
xor
fnsave
addb
ret
lods
jns
push
sub
subb
hlt
sbb
lcall
inc
shrb
xor
dec
xor
shrl
mov
xor
dec
xor
cmp
std
adc
pop
xchg
mov
nop
cltd
sub
les
mov
cld
outsb
dec
fcomi
mov
mov
jno
sbb
mov
mov
jp
xor
addr16
mov
xor
in
lods
movb
divb
cmp
jo
dec
jmp
addr16
cmpsb
mov
subb
aam
push
mov
jmp
sbb
jl
mov
je
iret
cmc
clc
pusha
xchg
jbe
adc
scas
fisttps
push
xchg
lock
sbb
cmp
cmp
dec
add
sbb
lods
aaa
mov
xchg
push
movb
test
mov
decb
jmp
cmp
loopne
pop
cmp
mov
bndldx
cmpsb
and
mov
shlb
fnstsw
out
daa
jae
jno
cli
adc
cmp
jmp
or
out
fldlg2
movsb
sub
push
dec
cmp
jg
outsl
push
out
sahf
fwait
dec
sbb
jecxz
inc
xchg
xor
je
in
ss
push
pop
push
aam
les
sub
sub
arpl
cli
sbb
rcrb
or
lret
repnz
aas
add
nop
cmc
pusha
lea
in
mov
out
sbbl
cmp
jle
shll
sbb
add
sub
popl
pop
fs
pushf
jl
or
jp
shrb
and
xor
into
ljmp
push
mov
fdivl
or
jge
xchg
sub
add
cld
add
jg
jg
sahf
mov
mov
cmovb
push
push
test
adc
pop
sub
add
mov
imull
test
cmc
cmp
sub
cmc
mov
jae
sub
push
arpl
cmpsb
jb
push
cwtl
repnz
leave
int3
mov
mov
pop
sbb
mov
test
movsb
xchg
lcall
in
dec
push
xchg
or
leave
inc
fisubs
xor
jbe
iret
xor
je
into
loopne
or
mov
or
into
adc
fnsave
jmp
dec
insb
dec
loopne
scas
rol
outsb
mov
dec
mov
cwtl
pop
mov
jb
mov
insb
jecxz
cwtl
rorl
call
mov
adc
mov
lock
push
inc
and
mov
fwait
jns
add
fisubrs
adc
insb
sbb
sub
or
push
fwait
adc
testl
and
adc
idiv
std
testb
mov
mov
js
test
aas
das
mov
xor
xchg
mov
daa
enter
cli
loop
sti
push
xchg
adc
jae
stc
lea
jbe
xor
subl
adc
xchg
jp
xor
cs
pop
mov
mov
stos
in
inc
pushf
out
je
in
cli
sub
jne
stc
mov
mov
lea
int
xlat
je
call
add
mov
dec
inc
arpl
cmc
addr16
in
arpl
cmp
pop
stc
push
jb
xchg
loope
adcl
add
pusha
xlat
jnp
pop
inc
pushf
mov
adc
mov
cmp
rol
lret
xchg
mov
cwtl
push
decl
sbb
xchg
push
or
ss
mov
jno
idivb
arpl
xor
pop
loope
jns
enter
and
push
dec
or
in
xchg
sahf
andb
into
ret
aam
test
dec
mov
mov
mov
dec
aas
stos
mov
mov
aad
mov
pop
stos
cmp
cmpsl
decl
into
pop
fwait
xchg
ret
sub
in
call
push
add
mov
xor
scas
ret
mov
jnp
bound
mov
ss
cmp
cmp
push
or
jle
pushf
cmp
mov
icebp
in
out
inc
mov
xchg
ret
scas
mov
mov
stc
into
pop
lds
movsb
sub
push
dec
cmp
inc
cmpsb
adc
dec
mov
adc
mov
adc
imul
sbb
push
adc
add
dec
or
test
ljmp
add
or
cmpsl
jmp
outsb
mov
fiaddl
pop
lds
call
inc
push
cwtl
iret
pop
cmp
mov
fadd
cltd
jl
xlat
pop
sub
imul
xor
and
adc
add
hlt
inc
in
aam
les
add
je
rcll
repz
and
adc
add
hlt
inc
in
aam
les
add
je
rcll
repz
and
mov
inc
in
aam
lds
add
je
rcll
repz
and
xchg
mov
sbb
jle
les
mov
insb
fdivrl
jb
bound
xor
jle
inc
push
xor
add
mov
lds
hlt
addb
bound
xor
adc
repnz
loop
shlb
in
hlt
addb
bound
xor
inc
xor
adc
repnz
rol
shll
cld
fwait
icebp
je
adc
push
adc
cltd
inc
mov
sbb
mov
mov
jg
push
and
movl
add
icebp
xchg
std
cmp
in
xchg
or
xorl
inc
inc
cmp
mov
test
xchg
jp
adc
addr16
mov
ret
aaa
adc
add
fcoms
test
cld
xchg
or
pop
and
xchg
incb
ja
and
lods
mov
je
in
or
mov
xchg
loope
mov
cld
notl
scas
inc
mov
movsb
xor
jnp
inc
mov
sub
xlat
mov
aam
in
cmc
xchg
pop
jb
bound
xor
inc
xor
adc
repnz
loop
shlb
in
hlt
jmp
jbe
and
jp
pop
push
xor
push
adc
mov
jecxz
mov
mov
icebp
cwtl
mov
or
pop
push
pop
push
aaa
jl
and
outsb
fs
data16
mov
shll
mov
jmp
jb
cmp
inc
and
add
adc
repnz
loop
shlb
in
hlt
addb
bound
xor
inc
xor
adc
repnz
loop
shlb
in
hlt
addb
or
inc
pop
int
popf
addb
int
cltd
into
add
mov
ret
mov
mov
and
les
lock
and
add
dec
mov
loop
cli
adc
jne
push
push
or
inc
mov
inc
das
js
push
aas
aas
mov
dec
add
pushf
fwait
push
push
mov
das
pop
or
mov
sbb
mov
and
dec
lods
imul
call
loop
xor
or
jp
setg
rclb
push
and
sub
shrb
ret
inc
sub
lcall
xor
dec
popf
subb
add
cmp
dec
std
cmp
mov
js
xor
push
xchg
cmc
mov
or
xor
iret
imul
push
loop
int
pop
sub
fs
mov
xchg
push
roll
pop
pop
cmc
gs
cmpb
movsb
ss
cmp
rolb
addr16
adcb
in
add
shrb
add
mov
pop
jnp
test
aad
pop
fsubl
cltd
push
dec
sub
mov
xchg
cs
mov
fisttpll
add
inc
addr16
inc
jo
insl
xor
mov
movsb
fsubl
in
iret
bound
xor
sub
or
sub
dec
adc
cmp
fucomip
and
xchg
mov
movsb
ja
popf
mov
dec
inc
sbb
sub
out
inc
xchg
push
cmpb
add
mov
in
xor
push
lods
mulb
sbb
xor
pop
inc
mov
mov
fdivrp
pop
or
imul
mov
popf
mov
lcall
fnstenv
cmp
jno
lea
sub
pop
out
add
xor
pop
cwtl
dec
loop
lcall
fcoml
mov
sti
insb
inc
cmp
hlt
pop
into
pop
out
mov
cld
mov
aam
mov
scas
sarl
stc
push
jbe
add
aaa
push
dec
in
mov
inc
adc
stc
jns
out
gs
xchg
cmp
bound
and
cmp
cmp
mov
int3
mov
xor
mov
lods
imul
and
in
loop
fcmovne
xor
into
dec
test
push
ljmp
push
fdivrl
adc
shl
fwait
daa
mov
rcr
sub
rcl
or
jp
adc
movsl
sbb
je
push
ljmp
test
sub
cld
mov
aad
push
sbb
pop
pushf
into
mov
rep
js
mov
cmc
xchg
lds
xchg
lret
test
mov
jl
enter
loop
mov
mul
mov
mov
and
and
test
add
lahf
pop
adc
or
xchg
dec
mov
out
pop
add
mov
out
cmp
xor
and
xchg
lret
inc
sbb
push
push
lcall
push
repnz
mov
xchg
pop
arpl
mov
mov
sbb
push
push
aam
mov
mov
and
sbb
aam
jns
jb
cmp
sub
insb
push
xchg
lods
pop
adc
fistpll
mov
shrb
pop
xor
dec
dec
adc
cmp
stc
dec
xchg
mov
mov
cmp
loopne
xchg
popf
js
stc
leave
xchg
xlat
push
lret
pusha
roll
popa
aas
cmp
push
inc
xlat
int3
outsb
and
xor
lahf
or
dec
int
int
add
xchg
lea
sbb
mov
sub
mov
or
pop
clc
nop
idivl
loopne
sar
in
dec
fdivrs
rep
sbb
fnstenv
clc
xor
sbb
mov
xor
pop
rcrb
rolb
comiss
ja
pop
jl
sbb
sbb
xor
leave
cltd
lock
xor
mov
xor
xor
in
pop
push
subl
inc
mov
js
mov
mov
lahf
fistps
sub
mov
xor
arpl
inc
outsb
xchg
nop
cmp
mov
cmp
push
loop
add
in
xlat
or
inc
fnsave
adc
mov
pushf
pushl
xor
cltd
subb
inc
inc
mov
pop
shll
sub
lret
jmp
mov
gs
jge
insl
inc
iret
lock
mov
sahf
or
xor
sub
cli
jae
push
shl
lret
inc
popf
orb
jp
out
mov
inc
fs
mov
je
jo
sub
xchg
jg
pop
dec
imul
push
cwtl
add
sti
xor
sbb
cmp
pop
push
int
jmp
stos
adc
jge
inc
sti
mov
ja
inc
test
pop
gs
data16
sub
jb
sub
or
dec
xchg
add
inc
mov
sar
es
arpl
and
pop
push
pop
pop
xchg
call
insb
jg
sbb
lock
mov
mov
pop
lret
js
int3
arpl
insl
popf
and
pop
sbb
mov
aas
addr16
push
push
in
lret
jno
in
stos
xchg
push
test
stc
cmp
pop
outsb
scas
divl
mov
add
dec
jbe
fbld
loope
pop
ja
sub
flds
scas
push
cmpl
mov
mov
sbb
sbb
mov
jbe
loopne
mov
inc
push
mov
add
or
xlat
mov
mov
xlat
in
int3
iret
cmp
push
fstl
mov
cld
stc
lahf
jg
cmpsb
xchg
mov
out
in
push
fdivp
xchg
mov
inc
aad
cmp
pop
sbb
stos
and
cmpsl
outsb
or
inc
popa
jg
scas
jg
dec
inc
xor
lea
movsl
fs
sbb
insb
xchg
pop
fdivs
movsl
js
loop
inc
out
imul
and
scas
ret
and
orl
rorl
test
push
add
mov
sbb
addr16
in
cltd
repnz
mov
loope
scas
and
and
push
out
add
xchg
sub
out
dec
or
pop
mov
or
sub
adc
mov
std
inc
scas
test
cli
mov
xor
sbb
jecxz
out
mov
mov
mov
ja
jae
aaa
push
roll
cmp
mov
int
xchg
jmp
test
in
iret
inc
in
int3
dec
iret
iret
jmp
xor
and
push
ror
inc
xor
xor
push
out
imul
xchg
mov
pop
iret
add
int
sar
sahf
xchg
cmp
pusha
mov
or
stos
mov
sub
mov
xchg
jns
jmp
inc
fs
cmpsl
aaa
mov
in
mov
xor
pminub
xor
jns
mov
orl
mov
cmp
daa
dec
mov
daa
jnp
or
lahf
push
aam
sub
cmp
lret
pop
inc
adc
pop
mov
popf
inc
inc
cwtl
ret
sbb
pop
xor
push
pushf
sub
imul
std
jecxz
cmc
sub
mov
lcall
pop
mov
adc
gs
notl
insb
cltd
xchg
mov
cltd
ret
or
scas
fcomps
push
ds
iret
mov
add
pop
jle
fsubl
pop
cmp
movsb
jge
in
test
fnstcw
dec
icebp
dec
loop
in
push
fdivrs
shlb
add
out
ror
mov
push
mov
or
pop
jl
aaa
stos
scas
inc
xlat
bnd
push
cmp
jmp
xor
outsl
xchg
push
push
sbb
test
test
sbb
enter
jmp
cld
movsb
xor
fcmovb
int
xor
std
repz
sub
add
mov
movmskps
das
aad
xchg
into
dec
mov
xor
icebp
jg
mov
mov
sbb
pop
jae
pop
dec
outsl
fcoml
xor
adc
xchg
inc
imul
out
mov
mov
loope
pop
or
inc
nop
fiadds
into
jae
out
mov
fbstp
lea
push
push
sbbl
pop
repnz
cmpsb
and
arpl
loop
jae
sbb
imul
cmp
xor
xor
dec
sahf
stos
pop
xchg
mov
insb
dec
pop
insl
repz
movsl
loope
dec
sbb
lods
inc
xor
gs
add
xor
dec
int
gs
jp
insb
jae
sbb
push
xchg
mov
mov
mov
test
jecxz
enter
pop
sub
out
clc
adc
mov
aam
fcompl
outsb
in
cmpsb
enter
and
call
stos
mov
cld
pop
arpl
push
sbb
incl
inc
out
scas
insb
pop
xor
jne
je
mov
stc
fldcw
lods
lock
in
clc
sub
add
pop
sub
jnp
push
xor
add
movsl
in
out
dec
inc
adcb
ss
xor
lret
sarl
push
nop
inc
aaa
popa
pop
mov
loopne
sub
push
lods
in
pop
add
into
cmp
jae
lahf
dec
out
popa
or
cmpsl
xchg
mov
mov
jg
fsts
movsl
adc
jp
int
lods
insb
xor
dec
in
push
cmp
loop
gs
xor
xor
loop
mov
movsl
insb
adc
sbbl
std
in
jns
mov
cmpb
sub
fdivr
jae
ljmp
push
pop
stos
popa
or
xor
cmpsb
pop
pop
and
dec
adc
jecxz
jns
loopne
test
cmpsb
inc
arpl
add
loopne
add
ljmp
sub
clc
icebp
mov
loopne
dec
xchg
dec
mov
fsubs
sub
mov
jl
pop
fidivl
scas
push
cmp
ja
mov
xchg
adc
jl
push
ret
ja,pt
sahf
test
mov
mov
dec
inc
xchg
xor
or
push
stos
lcall
fs
ss
push
shlb
push
test
insb
bound
jg
jbe
stos
aaa
paddsb
cmp
or
incl
subl
jnp
xorl
xchg
push
pop
cld
push
lret
jge
pop
pop
and
cs
and
cmp
repnz
add
inc
and
pushf
fists
call
push
sub
pop
dec
adc
outsl
js
xchg
cltd
add
mov
fs
push
loope
cmpl
jae
mov
jns
aad
cli
pop
adc
call
xchg
das
rcl
jns
repz
out
push
fsub
mov
icebp
jno
inc
lahf
inc
fcomps
dec
rcrl
cmpsl
hlt
jo,pn
lea
rdmsr
add
in
pushf
aam
repnz
lock
xlat
adc
and
movsb
mov
mov
rcll
mov
jl
mov
push
fldt
sbb
scas
push
sbb
test
fldenv
mov
jg
mov
fstl
test
into
push
push
sbb
test
or
fwait
push
das
loopne
sub
push
clc
cmc
jmp
push
out
lods
xchg
sub
jmp
jl
adcl
sub
mov
adc
out
mov
sbb
ljmp
add
ret
cmp
fnstenv
fildll
out
mov
rorb
mov
jno
cmc
popf
insb
fbstp
inc
popf
xchg
rorl
sub
jle
dec
aas
pop
stos
or
shrb
es
mov
lcall
in
movsl
jnp
leave
ljmp
int
pop
pop
pop
xchg
arpl
sub
inc
or
in
das
xor
lret
in
mov
repnz
test
mov
lds
cmp
push
insl
js
mov
mov
mov
pushf
arpl
movsl
pushl
loop
mov
fldl
ljmp
nop
std
sbb
mov
arpl
lret
mov
xchg
mov
scas
jl
add
adc
jo
sbb
jmp
test
or
adc
sbb
out
dec
dec
mov
fcomi
movsl
mov
icebp
lcall
mulb
xlat
test
inc
imul
add
cmpsb
and
enter
jle
cmp
mov
and
out
cmp
sbb
xor
shlb
out
push
cmp
inc
je
push
jecxz
sub
fistpll
cmp
scas
push
enter
daa
push
xor
mov
mov
lea
insl
sbb
xchg
mov
cld
inc
xchg
rorb
shll
fcmovne
daa
dec
out
insb
xchg
inc
bound
pop
pop
insl
xlat
fcmovb
pop
ljmp
ds
dec
ret
insb
or
pop
je
rcrb
jbe
push
or
lret
out
enter
or
dec
leave
pop
mov
mov
test
mov
jp
cli
or
cmc
sub
xor
xor
divb
scas
dec
insl
mov
imul
mov
xorb
xchg
pop
push
and
cld
pop
push
pop
jg
imul
push
mov
jmp
int
test
jb
jge
orb
mov
inc
enter
push
push
rcrb
daa
add
pop
or
or
loop
iret
outsb
add
pusha
xchg
jge
push
rol
push
out
mov
mov
movsl
pop
pop
sbbl
cwtl
fs
pusha
add
jl
addb
push
int
inc
lcall
mov
mov
sti
stos
icebp
loope,pn
ja
pop
pop
dec
push
aam
lret
lret
push
popf
rclb
jbe
int3
push
xchg
jne
aam
lds
inc
pusha
movsl
leave
je
popf
mov
pop
fstl
inc
mov
fnstenv
cs
or
out
push
pop
mov
xchg
loope
lds
dec
mov
lds
aam
scas
cld
lcall
inc
push
fs
rorl
jnp
aaa
mov
outsl
fsubrs
pushf
mov
lret
mov
xor
gs
mov
dec
fstpt
mov
pop
xor
leave
shll
mov
cwtl
cli
loop
dec
push
push
ret
outsb
dec
outsl
stc
scas
or
sub
shll
xor
cmpsb
scas
or
movsl
pop
rorl
pop
jne
sub
test
fistpl
xchg
movsb
rorb
cld
xchg
lock
push
out
pop
ret
ja
xchg
std
into
int3
ja
lcall
sbb
dec
ljmp
enter
jge
rcll
inc
popa
ret
xchg
or
jno
in
shll
push
int
lock
daa
dec
push
pop
stc
sbb
or
clc
lret
test
or
mov
adc
aam
pop
loopne
cmpsl
es
popa
xchg
mov
divb
xor
pop
aas
ja
sbb
or
aam
je
pop
push
and
rcr
ss
sbb
cmp
cwtl
aam
mov
dec
or
ret
mov
dec
and
ljmp
lcall
in
push
js
mov
xchg
mov
movsl
mov
js
xchg
xchg
les
in
daa
or
add
out
jg
mov
sub
loopne
add
out
adc
fwait
xor
xchg
xchg
mov
or
cmp
lahf
mov
xchg
mov
or
mov
rclb
dec
pop
sar
mov
pop
out
push
stos
ja
data16
scas
xor
addl
popa
leave
lcall
std
xlat
adc
pop
mov
xor
fildll
mov
push
xchg
xchg
and
sub
pop
cld
lret
lods
xchg
add
fwait
out
xor
jmp
fistpl
gs
iret
scas
test
jbe
xchg
inc
mov
mov
jne
mov
xor
push
jne
ret
and
inc
outsb
cmp
fldt
dec
mov
pop
xlat
aas
ja
jg
sarb
xchg
test
mov
pushl
mov
jl
cmpb
movsl
pop
mov
jmp
push
ret
cmpsl
stos
popa
sbb
mov
xor
push
dec
inc
lea
fbstp
adc
push
jo
xchg
xchg
or
fldenv
js
les
mov
and
aad
push
fistps
imulb
fdivrs
xor
jns
out
sbb
rorl
push
sbb
xchg
push
sub
fcompl
cmp
xchg
fisubrl
add
scas
gs
mov
mov
inc
test
jo
push
andl
lods
je
rol
bound
ljmp
push
mov
inc
xchg
and
inc
es
fnstcw
sbb
adc
mov
ret
fbstp
or
xchg
xor
mov
pushf
pushf
xor
push
or
int3
aas
fistpll
lret
lock
mov
jb
nop
mov
leave
popa
addl
cmpsl
push
sub
into
shlb
aad
dec
jno
xchg
fsubr
test
insl
test
mov
andb
cmp
movsb
fcompl
or
arpl
mov
push
and
xor
imul
test
shl
xor
mov
inc
movsb
jo
xor
fdiv
iret
cmp
clc
inc
loope
lret
fwait
xor
in
inc
test
xor
and
sub
push
cmp
daa
lea
ljmp
addl
addl
jp
mov
arpl
pop
movsl
jl
loop
pop
cmc
cltd
xor
jo
pop
into
gs
outsl
dec
jns
adc
lret
mov
xchg
xor
loope
ja
ficoms
test
and
mov
mov
add
call
jle
mov
cltd
lock
xchg
xor
cli
loop
xor
push
ds
adc
inc
jl
movsl
mov
mov
and
insl
sbb
icebp
mov
cmp
cmp
loop
daa
add
setnp
nop
xor
jp
lret
cmp
jge
jmp
ss
mov
imul
xlat
lock
cmp
inc
jmp
push
pop
in
sub
out
and
push
fstps
aam
cmp
int
xchg
rcrb
mov
je
jb
jmp
push
ret
push
pop
hlt
movsb
insb
mov
in
cwtl
int3
movsb
test
ljmp
xchg
bound
adc
inc
adc
cmovnp
test
push
and
call
xchg
popf
inc
push
jle
jbe
push
shrl
rol
mov
pop
aam
add
in
pop
mov
adc
xchg
push
daa
or
xor
out
mov
mov
adc
mov
cmc
insb
cwtl
repnz
outsl
leave
rclb
sub
jge
pop
mov
xchg
adc
push
inc
push
jo
loop
data16
out
aad
add
je
mov
je
lea
mov
aaa
je
sub
mov
lea
fucom
push
imul
lahf
or
mov
jmp
sbb
fidivrs
mov
mov
pop
rolb
pop
sub
add
xor
mov
jg
mov
mov
cmp
stc
lcall
and
pop
jle,pn
cld
xor
mov
xor
lea
mov
int3
inc
mov
mov
or
out
or
add
mov
and
jmp
rcrl
cld
xchg
mov
mov
ds
shl
xor
lods
add
stc
jp
repz
shll
jle
fwait
iret
add
cli
pop
push
shl
mov
mov
or
sbb
inc
pop
mov
cmp
adc
sub
dec
or
scas
jge
inc
push
mov
add
sub
lret
push
sub
fistps
out
inc
cmp
push
hlt
mov
in
dec
fstps
xor
xchg
adc
push
cmpsb
shrb
test
das
pop
filds
pop
dec
push
psubq
movsb
adc
jmp
sub
pusha
sbb
jo
into
mov
add
jbe
push
pop
push
or
cmp
les
ss
sbb
in
push
movsb
pop
xchg
lods
aaa
inc
jmp
push
ret
icebp
pusha
push
xchg
sub
mov
loop
pop
jle
pusha
sub
or
insl
das
add
test
dec
mov
cmp
pop
call
clc
addr16
fsubrs
popf
test
cltd
flds
nop
mov
loopne
cltd
mov
pop
jnp
ret
pop
or
into
add
push
cmp
sbb
xor
andb
cld
mov
pop
pusha
cmp
adc
arpl
pop
xor
test
push
xlat
das
movsl
cwtl
pop
cmp
imul
mov
push
outsb
and
mov
or
rcl
movsl
inc
or
pop
jne
xor
lds
xchg
and
or
enter
popf
mov
jb
je
mov
fcom
imul
into
pop
mov
cmpsb
mull
hlt
inc
je
ret
fcmovnu
pusha
in
jnp
mov
dec
imul
bound
xor
adc
repnz
loop
shlb
in
hlt
addb
bound
xor
inc
xor
adc
repnz
loop
shlb
in
hlt
addb
bound
xor
inc
xor
adc
repnz
loop
shlb
in
cmc
addb
xor
inc
xor
adc
repnz
dec
push
shlb
sbb
jge
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lds
dec
in
cmc
imul
cli
xlat
push
push
lret
gs
jne
add
mov
aad
in
cmc
imul
mov
push
fistl
gs
jnp
add
mov
int3
dec
std
jnp
imul
sub
xchg
cmp
jp
jns
bound
in
addl
cmp
ret
scas
sahf
in
sti
sub
push
std
xor
inc
push
sub
popf
push
xchg
scas
jecxz
hlt
and
and
shlb
cltd
sti
mov
push
pop
add
push
cmp
popf
push
mov
subb
jne
adc
stos
xor
add
inc
xor
dec
sub
sarl
sbb
into
call
mov
enter
inc
xor
mov
lods
adc
hlt
call
sahf
xchg
lret
test
std
push
adc
sti
sub
jp
push
jp
xchg
or
mov
ficompl
jmp
jg
scas
xor
dec
in
cmc
imul
lods
sub
lret
jge
insb
jmp
fwait
or
in
test
cmp
repz
call
mov
mov
add
cmp
stos
sbb
jmp
push
out
push
sahf
xor
add
into
push
lds
setge
int
xchg
or
fistl
gs
jne
add
mov
aad
in
cmc
imul
mov
inc
fistl
gs
jne
add
mov
cli
pop
pop
mov
sbb
fs
pop
xlat
push
pop
push
jns
and
add
std
dec
ja
push
xchg
jmp
mulb
mov
in
gs
stc
jmp
mov
xor
shl
pop
int3
xchg
push
push
outsl
dec
push
insl
xchg
mov
sbb
mov
sub
out
enter
jno
popl
insb
inc
ds
fs
fstpt
inc
cmp
sub
aam
pop
mov
test
push
pop
subb
or
add
pop
cmp
and
js
push
imul
adc
insl
cwtl
jmp
rcrb
out
in
sbb
int3
sbb
ss
ljmp
sbb
add
fs
out
out
dec
je
les
mov
inc
xchg
cmp
jl
xchg
ficoml
or
int
mov
jmp
mov
jb,pn
in
ljmp
je
sbb
mov
pop
pop
mov
pop
xor
dec
rcrl
and
jb
lcall
test
mov
push
aas
aaa
ficoms
movsl
arpl
xchg
out
cwtl
xchg
lods
mov
pushf
js
stos
pushf
add
bound
add
in
jl
test
sahf
mov
pop
add
popa
dec
sbb
popf
inc
fidivl
push
push
jne
std
xor
fdivs
adc
sbb
imul
mov
inc
or
bound
aam
popa
fs
push
es
in
inc
adc
mov
dec
ficoms
dec
loopne
gs
adc
mov
cmp
sbb
lds
inc
mov
dec
mov
lock
rcll
pop
jno
jbe
xchg
inc
sbb
jl
inc
mov
das
incl
mov
daa
mov
in
stos
rorl
rsqrtps
test
push
stos
xor
inc
int
dec
add
mov
mov
ljmp
mov
int
mov
cmc
xor
mov
movd
fimull
imul
ret
out
or
sti
inc
xorb
mov
fidivl
jae
dec
jle
xchg
lret
push
add
jnp
clc
pop
imul
mov
aad
ljmp
pop
mov
add
and
xchg
in
or
jne
lret
xchg
enter
adc
test
xchg
enter
into
pop
cmpsb
jnp
cmp
fs
dec
lsl
stos
cmp
jne
clc
fcomps
rcrb
pop
push
icebp
lea
fwait
pop
faddl
adc
idiv
aad
int
or
sahf
adc
push
bound
jmp
dec
pop
test
loope
fsubrs
add
fmull
je
or
int
inc
adc
inc
mov
pop
sahf
loope
lret
xor
in
imul
jecxz
dec
lret
push
mul
lock
test
mov
ds
adc
pop
repz
inc
popa
push
jnp
lods
push
aaa
stc
cs
test
fwait
lret
adc
add
mov
inc
cwtl
decl
mov
aaa
mov
push
sbb
add
outsl
mov
shl
test
imull
movsb
mov
or
fs
ds
cmp
mov
ret
jmp
sahf
cmp
push
cmpsb
dec
aad
mov
insl
aad
lods
mov
inc
arpl
xor
mov
das
stc
mov
xchg
and
ja
and
dec
rcrl
jae
bound
ljmp
inc
cltd
imul
cmp
mov
sbb
inc
mov
fistl
pop
dec
sub
testb
out
addr16
xlat
aas
xchg
in
mov
or
push
xchg
out
mov
mov
out
aad
cld
mov
jg
jmp
clc
jbe
loop
add
push
test
sub
pop
dec
jmp
push
cmp
cli
dec
aam
sbb
cwtl
std
sub
sub
adc
in
repz
mov
jns
out
negb
xor
sbb
xor
jb
mov
adc
iret
jle
stos
loopne
xchg
add
in
mov
and
leave
shlb
pop
pop
movsl
fcmove
and
int3
push
pop
ljmp
insb
cmpsb
xchg
push
loopne
sub
movsl
dec
xchg
adc
pop
mov
jp
ljmp
xchg
hlt
fs
mov
xor
jb
fs
inc
insb
mov
push
push
pushl
popf
xchg
sub
push
inc
fdivrl
icebp
stos
mov
mov
or
inc
sbb
sti
jl
xchg
sub
lods
repz
pusha
ficoml
and
lret
dec
pop
cmp
pop
sahf
lock
pop
xlat
test
rclb
xchg
add
mov
sti
dec
cmp
xchg
inc
daa
xchg
cmp
dec
pushf
mov
insl
std
lods
fldt
and
insl
xchg
mov
xlat
into
mov
je
jmp
xchg
cmc
jmp
sub
mov
and
dec
cmp
std
daa
mov
popf
bound
les
inc
pop
aas
cmpsl
cmc
cmp
adc
arpl
fwait
cld
imul
jmp
cld
ret
and
jns
jg
mov
jmp
mov
dec
or
mov
sbb
cvtpi2ps
dec
cmpsb
jne
stos
fldt
icebp
testb
les
xor
xor
sti
ret
fstpl
pop
ja
inc
dec
pop
dec
aad
scas
daa
je
sub
mov
nop
es
repz
jmp
dec
cmp
xchg
push
lcall
push
adc
mov
fisubrs
lds
enter
mov
inc
imul
std
out
nop
pop
fcomip
mov
inc
mov
movsb
lahf
iret
cli
dec
int
aad
movsl
xor
add
sbb
addl
pusha
rorb
xorl
rcrb
sub
add
ja
movsl
call
fldcw
pop
insb
mov
test
xor
movl
jo
pop
fcoml
cmpsl
xchg
stos
adc
or
or
push
cmpsb
js
sbb
push
enter
imul
bound
nop
les
xchg
fdivs
add
lret
movsl
arpl
jle
push
fs
jno
jecxz
push
cmpsl
rcrl
in
mov
jb
ds
fidivs
ficomps
pop
adc
jg
jnp
and
push
xor
pop
push
lret
aas
insb
sub
sub
sahf
push
lods
pop
dec
hlt
arpl
sbb
into
mov
jae
das
js
cmp
call
xor
insb
push
push
push
iret
dec
cmp
cmp
fidivs
aam
cmp
xchg
popf
icebp
mov
in
adc
push
xor
pop
inc
jne
add
aaa
int3
iret
jecxz
lock
test
inc
fistpll
jle
sbb
push
iret
stos
mov
pop
repz
sub
bound
clc
push
cmpsl
add
out
jns
adc
aad
neg
loope
push
pusha
aad
mov
mov
aaa
or
popf
mov
pop
mov
std
and
repz
pushf
bound
incb
jle
mov
and
push
sbb
pop
sarl
bound
ret
test
je
dec
cwtl
inc
cli
inc
das
push
pop
xchg
jecxz
adc
insl
adc
mov
adc
cmc
das
arpl
hlt
inc
je
hlt
add
test
jbe
sbb
clc
xchg
movsl
lods
or
sbb
stc
ljmp
cmp
in
and
outsl
jmp
and
cmc
lock
mov
ret
mov
imul
push
mov
mov
xchg
push
mov
aas
mov
int3
sub
push
dec
push
add
lods
call
add
bound
jbe
sub
decl
xchg
fwait
popf
int3
jne
lea
add
mov
pop
adc
std
sar
and
push
xor
ret
add
add
pushl
or
cmova
jg
cs
lock
scas
pop
mov
sub
xor
sti
fmuls
pop
mov
shl
ret
mov
and
out
xor
dec
and
ret
xor
cmp
fbstp
push
xor
push
cs
clc
out
or
sub
js
icebp
cmp
add
mov
mov
jns
push
outsb
mov
std
ficompl
cmpsb
inc
push
and
loope
leave
sbb
sbb
mov
mov
cmpsb
stc
daa
aad
inc
insb
ficomps
jns
push
push
xor
add
lds
fbstp
add
jle
lcall
insb
or
in
push
arpl
pop
dec
clc
arpl
sarl
lea
lods
std
sub
mov
push
ror
jg
popa
lahf
cs
fcoms
inc
fwait
test
cmpb
jno
push
xchg
dec
mov
jle
jmp
mov
aaa
int3
push
xchg
sbb
mov
inc
test
mov
inc
cmc
mov
push
hlt
fwait
cmp
outsb
test
and
or
inc
movl
leave
xchg
mov
sbb
adcb
fwait
popf
mov
rcr
jecxz
ss
add
mov
dec
inc
inc
pop
out
dec
xor
add
sub
or
sub
clc
mov
enter
scas
cli
xor
sub
xchg
out
je
dec
cmpsl
outsb
pop
repnz
ficompl
lods
stos
scas
lea
xchg
dec
test
xchg
push
pop
es
push
rclb
outsb
rcrb
push
stc
aas
leave
jmp
arpl
jp
pop
jmp
xor
nop
or
xor
sub
out
adc
fbstp
pop
std
xchg
mov
jp
ffree
rclb
dec
movsl
jo
pushw
cmpsb
rcrl
andl
and
jo
pop
call
lcall
out
andl
pminub
cmp
push
hlt
xor
bound
lds
cmp
pop
xor
xorl
sbb
in
mov
sbb
int3
inc
mov
adc
and
ja
sbb
popa
cmp
flds
jae
pop
sbb
adc
mov
xchg
mov
push
ljmp
repz
mov
cmpsl
adc
cmc
mov
add
inc
xchg
push
inc
lea
inc
cmp
rclb
sbb
out
out
cld
mov
push
xor
mov
push
jb
adc
xor
push
pop
sub
cmpsb
mov
add
inc
push
ljmp
jbe
aam
out
sbb
xchg
jo
mov
jge,pt
pop
inc
xor
out
push
inc
xchg
test
sbb
std
daa
jp
out
and
sti
or
loope
and
xchg
in
mov
mov
push
nop
xchg
fdivp
or
and
pop
pop
nop
je
add
jg
cmp
push
jns
xchg
mov
jbe
dec
mov
pop
cmpl
jl
mov
jns
dec
or
adc
iret
pop
xchg
repnz
into
or
jg
in
xor
test
inc
insb
and
fsts
or
out
int3
mov
in
sub
movsb
sti
mov
push
in
outsb
jne
jno
ret
aad
jno
xlat
fs
mov
sub
push
dec
outsb
cmc
and
xor
dec
sub
push
je
cld
xor
push
mov
nop
test
shll
ljmp
jno
jmp
and
cmp
pop
iret
inc
sbb
dec
movsb
outsl
sbb
push
mov
sub
lea
outsb
dec
jbe
push
jp
adc
mov
test
lock
jmp
nop
shll
dec
jp
cs
cmpsl
int
jbe
mov
mov
push
mov
xchg
mov
push
add
cs
xchg
fstl
pop
shll
pop
shl
adc
cmp
cmp
ljmp
push
pop
xor
shlb
cmpsb
insl
cli
mov
mov
call
test
popf
pop
or
jae
shlb
fwait
hlt
push
addr16
lcall
pushf
push
cli
sbb
jge
int3
lahf
mov
dec
sub
movsl
in
test
cli
mov
repz
mov
sub
sbb
movsb
cmp
mov
pop
mov
aam
cmpsb
not
fdivrl
cmp
pop
dec
call
push
adc
pop
int
ja
sbb
cmp
jg
cmp
mov
ds
jg
test
scas
cmc
pop
sub
jbe
adc
adc
daa
out
inc
sub
xor
scas
lods
les
loope
cwtl
fsts
es
mov
sbb
jbe
xchg
or
xor
xchg
xchg
ja
ja
push
xor
inc
mov
popa
hlt
addb
mov
ja
adcl
cmc
mov
mov
loope
xor
mov
bound
xor
pop
push
adc
or
push
xchg
fwait
xor
jbe
pop
stc
lea
jl
movsb
cmc
loopne
add
adc
adc
mov
adc
and
inc
jbe
adc
int3
into
dec
into
repnz
mov
movsl
insl
jno
out
ds
and
hlt
insb
cmpsl
out
out
enter
cwtl
cmp
comiss
sub
xchg
mov
adc
mov
xchg
cmpsb
mov
aaa
and
leave
inc
fcomi
mov
mov
cmp
cmpl
stc
mov
inc
rorl
lds
lcall
popa
fwait
jns
ja
mov
push
movsb
je
outsb
outsb
inc
into
cmp
xor
or
gs
nop
fcoml
sub
add
inc
xchg
int3
movsb
mulb
pop
aam
cmp
add
inc
jecxz
fnsave
cmp
mov
fisubl
iret
and
sbb
push
les
jp
sub
dec
cmpsb
lods
popf
out
push
int
cmp
mov
pop
adc
adc
fdivs
ror
sbb
pop
int
or
jae
xor
std
loope
in
in
push
pop
push
lcall
add
imul
add
lods
inc
xchg
xor
jg
adc
aad
dec
sbb
mov
pmulhw
pop
inc
jge
scas
stc
adc
stc
mov
push
cmc
mov
mov
cli
test
mov
in
jae
push
stos
lock
pop
lds
sbb
dec
cld
add
inc
les
and
inc
scas
jno
jne
xlat
jg
cwtl
sbb
pop
add
mov
mov
xchg
rcrb
in
adc
pop
adc
out
sub
cltd
bound
mov
cmp
pop
xchg
mov
and
test
xchg
je
out
inc
les
dec
mov
xchg
aas
sbb
mov
fld
push
outsl
fildll
sbb
outsl
scas
mov
sbb
shr
gs
push
int
jg
pop
add
pop
call
push
aam
in
push
notb
mov
arpl
es
lods
inc
les
fidivl
ret
dec
nop
cld
jnp
and
daa
xor
sub
add
nop
and
jae
sbb
loop
mov
cmpsl
sub
xchg
int
fisttpll
and
test
pop
stc
mov
cmp
pushf
xor
invd
jl
xchg
enter
scas
mov
test
dec
mov
sub
subb
inc
inc
push
mov
roll
push
clc
ds
mov
dec
xchg
mov
cmc
push
aas
in
mov
add
sbb
dec
std
outsb
dec
and
ja
mov
lods
js
lods
pop
jl
sub
in
stc
pusha
ja
loop
jo
mov
push
xchg
and
xchg
mov
fimull
iret
adc
and
test
push
or
fsts
sti
xchg
popa
jecxz
sti
lea
stos
addb
adcl
sbb
dec
mov
dec
je
hlt
jae
mov
lret
jno
add
lret
sarb
inc
stos
xchg
fmuls
sbb
dec
and
insl
jno
movsb
cmp
and
sbb
mov
cmpl
lea
scas
test
insl
jns
fstps
mov
mov
and
insl
sub
pop
push
jno
mov
mov
dec
int3
out
scas
dec
stos
inc
shlb
push
fisubs
imul
jno
out
jp
outsl
inc
ja
cmp
orb
dec
clc
adc
xor
or
mov
dec
add
lods
jbe
aaa
mov
div
orl
dec
adc
mov
divb
dec
daa
mov
mov
inc
call
mov
lds
add
cmpb
or
cld
stos
outsl
pop
mov
jg
mov
push
lods
xchg
or
int3
shll
stos
cltd
or
fistl
mov
push
iret
add
aad
push
and
addb
dec
pop
into
or
pop
xorl
dec
jp
pop
lahf
dec
daa
dec
lret
sub
jns
bound
inc
cmp
cltd
add
pop
push
pop
repz
scas
push
xchg
int
mov
addr16
mov
push
fdivs
hlt
xchg
cli
push
psubsb
loope
or
mov
add
push
push
xchg
stc
pop
mov
outsl
adc
xor
repz
push
fists
add
jnp
push
jg
or
pop
adc
inc
outsb
dec
mov
xchg
outsl
ljmp
adc
and
mov
invd
mov
lds
mov
sub
xchg
pop
test
lock
sbb
xchg
imul
inc
mov
pushf
mov
stc
adcb
adc
mov
mov
push
mov
sub
pop
ficoms
pop
dec
repz
xor
push
sbb
or
xchg
cmpb
out
subb
dec
sbb
sub
adcl
pop
mov
mov
shlb
stos
jne
movsb
push
movsb
fadds
mov
fisttpll
imul
int3
insb
sub
js
imul
sub
notb
nop
add
out
xchg
out
push
mov
sti
nop
mov
xchg
mov
je
jnp
scas
rcll
aam
mov
sub
dec
aas
xchg
out
test
icebp
test
mov
mov
mov
sub
adc
mov
mov
arpl
push
js
movsb
mov
fcoml
test
lods
inc
sub
popf
xor
add
or
movsl
mov
fdivrl
mov
ja
xchg
inc
das
loopne
sbb
das
punpckhbw
push
insb
cltd
lea
cmpsb
in
ja
dec
mov
or
push
inc
jp
dec
dec
fadds
dec
stc
subb
pusha
ja
or
sti
mov
mov
mov
fwait
sub
dec
dec
leave
mov
cwtl
or
ss
and
sub
or
sbb
push
movsl
sbb
es
dec
imul
jo
outsl
pop
jae
cmpsb
pop
sbb
fildll
ret
xchg
cmc
cmpsl
loop
int3
and
mov
cmpsl
sbb
sub
test
or
lret
cmp
dec
sub
movsl
jns
and
cmp
popa
enter
cmp
cmp
scas
lods
aam
push
scas
lds
filds
xchg
test
mov
and
fs
cmp
and
sahf
xchg
sti
das
pop
mov
pushf
out
loopne
lcall
cmc
cmp
mov
sbb
pop
lret
test
rcrb
jno
fs
out
inc
mov
xchg
adc
jne
add
shrl
fidivl
pop
mov
jnp
mov
or
inc
add
in
gs
clc
popa
mov
or
das
sbb
sub
pushf
jge
cld
mov
iret
nop
shlb
mov
js
pop
hlt
adc
push
sbb
cwtl
push
lea
jae
xor
dec
out
adc
pop
in
mov
in
outsb
cltd
sti
aaa
pusha
movsl
ja
js
xor
mov
push
fstpl
mov
adc
or
sub
or
fdivrl
aad
subl
mov
mov
loope
ficoml
rcl
or
fsts
and
aam
or
sub
arpl
loopne
sbb
cmpsl
xor
fisubl
jne
in
or
add
mov
pop
sbb
es
add
dec
outsb
xchg
cli
add
icebp
xor
aam
sub
or
dec
cmp
xor
mov
cmc
jmp
mov
jl
mov
push
iret
call
or
and
hlt
adc
xchg
push
cmp
aad
sub
pop
add
rcrl
movb
cmp
fwait
push
mov
stos
or
push
mov
mov
ljmp
mov
imul
or
fidivs
imul
mov
inc
fistl
gs
jne
add
mov
aad
in
cmc
imul
mov
inc
fistl
gs
jne
add
mov
aad
in
cmc
push
sbb
sub
push
lret
jne
add
mov
xlat
dec
in
cmc
outsl
xchg
xchg
mov
and
popa
iret
sti
jne
jb
popf
je
inc
lret
into
imul
cmp
jmp
jp
psubsw
cltd
sub
fisubrl
dec
cli
cmp
or
bound
jp
and
sbb
insb
jo
inc
jo
mov
mov
push
mov
dec
loop
mov
mov
jl
pop
loopne
or
daa
lahf
xor
lock
rcll
adc
and
push
xchg
aad
jno
leave
in
pop
sahf
pop
add
jmp
mov
cmpsb
es
les
add
mov
imul
or
loope
dec
push
dec
mov
test
in
out
decb
test
out
ret
sahf
cmp
icebp
push
aaa
int
cmpl
pusha
inc
cltd
sbb
daa
add
cmp
fwait
or
inc
icebp
imul
mov
pusha
test
adc
jno
cltd
xor
les
test
mov
mov
es
mov
push
mov
sahf
pop
cli
sub
adc
loopne
icebp
repnz
mov
xor
mov
xchg
negl
fbld
or
sub
dec
int
cld
pop
in
push
jns
imul
ret
dec
mov
sub
das
pushf
cmp
jmp
mov
dec
xchg
inc
sub
stc
dec
jmp
jp
or
cmp
imul
cmp
or
fldcw
jp
or
cmp
stos
mov
xchg
and
in
add
test
add
jno
enter
sbb
sub
sti
sbb
cli
dec
pop
dec
or
add
inc
mov
or
xchg
add
out
hlt
in
xor
in
xchg
sub
das
divl
mov
sarb
jmp
ljmp
push
bound
add
pop
je
sbb
test
jle
jg
mov
scas
pop
int3
push
je
fcmovu
stos
daa
cmp
mov
inc
lret
jecxz
mov
dec
xchg
repnz
sbb
add
or
test
add
jae
and
sub
mov
outsb
add
pop
adc
js
stos
leave
inc
outsl
scas
shll
in
add
loope
test
fnstenv
jmp
jns
mov
cmpsb
sbbb
inc
repz
jl
inc
lret
aaa
es
cmp
xor
cmp
jo
imul
mov
adc
push
idivl
lea
dec
outsl
jbe
ret
icebp
test
sbb
cli
adc
or
mov
adc
dec
or
iret
repz
add
and
fisubrs
shlb
push
fistps
faddp
in
add
div
leave
lcall
and
fildll
sbb
sub
jne
ret
pop
subb
js
addb
adc
adc
mov
jge
cmp
jmp
sahf
mov
inc
daa
ds
push
mov
cmp
mov
xchg
test
shr
sti
rcl
dec
mov
std
mov
ljmp
hlt
fnsave
les
push
repnz
int3
mov
std
mov
icebp
mov
fldl
loopne
push
sub
mov
pop
and
out
mov
xchg
lods
mov
shll
push
enter
ja
jnp
sub
clc
mov
orl
add
fs
fstpl
cmp
out
add
xchg
add
push
ljmp
in
jmp
cltd
pop
mov
xor
pop
add
mov
outsb
inc
clc
loop
out
dec
addr16
in
pop
fstl
shl
out
push
in
filds
aam
jno
jge
test
stc
push
sti
pop
lret
sbb
flds
xlat
in
sbb
mov
xor
push
cmpsb
inc
pusha
gs
or
imul
nop
adc
insb
push
leave
sti
dec
jl
cltd
cmp
sbb
add
xor
xlat
decl
mov
sub
jo
cmp
lods
jno
mov
iret
ds
es
aas
jo
xor
in
popa
xor
cmp
push
test
aas
sti
sbb
inc
and
add
imul
cmp
and
jle
mov
inc
pop
mov
adc
xlat
jge
clc
mov
cli
dec
jp
sbb
faddl
pop
aas
testb
jmp
out
js
jb
mov
nop
xlat
pusha
jo
mov
out
shl
jno
andnps
out
cs
mov
mov
jmp
dec
jge
mov
pop
adc
add
and
pop
sub
outsb
lahf
mov
ret
insl
stos
mov
test
pushf
mov
jbe
scas
test
test
xchg
push
dec
adc
das
lahf
lret
mov
repnz
jmp
or
jns
xor
scas
mov
ja
inc
int3
hlt
xchg
adc
ja
aas
nop
lret
xor
push
xchg
add
xor
fcomps
pop
pop
cmp
mov
cmp
xchg
out
mov
push
lret
and
int3
mov
dec
mov
pop
jbe
incb
ds
cmp
mov
pop
aad
push
xchg
addr16
std
add
into
xchg
mov
mov
ud0
sbb
add
lods
mov
into
and
push
movsb
cwtl
pop
mov
add
dec
shlb
mov
cld
mull
add
mov
in
jmp
enter
push
aam
sarb
lret
cmp
hlt
aam
dec
sub
fistpl
sub
cltd
pop
jno
ret
test
inc
dec
mov
push
popa
in
cmc
push
xchg
out
jo
jl,pn
out
cmp
jecxz
jnp
mov
push
fst
enter
clc
aam
arpl
insl
outsb
cmp
stos
int
mov
into
sub
scas
fcomp
sub
scas
dec
repnz
push
and
mov
mov
cmp
enter
xchg
inc
jp
mov
rolb
sub
add
das
cmpsl
sub
loope
jl
lea
sub
scas
in
in
je
aaa
lods
xor
mov
inc
shlb
and
xchg
mov
mov
cmp
insl
jp
pop
dec
push
fcoml
push
stc
lock
arpl
cs
leave
cltd
clc
xchg
repnz
pop
mov
jo
mov
push
orl
ja
inc
jne
mov
mov
test
pop
lock
outsb
stc
add
pop
lds
iret
shrb
jo
hlt
lahf
test
add
sbb
push
fs
clc
cld
mov
xor
sbb
repnz
into
ret
fisubrl
mov
jecxz
outsl
outsl
jl
call
dec
jg
mov
jae
dec
in
mov
andb
fchs
push
mov
and
movsb
lea
and
sbb
movsl
xor
lods
jb
sti
xor
xchg
cltd
into
shll
cmp
lds
arpl
jbe
sbb
aas
inc
loope
ss
jp
popf
std
outsb
insl
in
jbe
cmp
lea
sub
cmp
jae
mov
and
clc
mov
mov
call
jecxz,pn
hlt
in
sub
out
xchg
mov
push
pop
es
pop
xor
shll
call
fwait
push
fistpl
adc
iret
ss
mov
aaa
iret
roll
dec
mov
fs
mov
imul
aam
jmp
lret
aaa
jne
fadds
inc
and
or
or
in
jp
pop
xchg
push
fcomps
dec
sub
jo
out
repz
jb
xchg
ja
sbb
test
sub
sbb
push
xchg
xor
inc
iret
mov
repz
ljmp
cmp
ja
lcall
stos
sbb
mov
fldl
je
or
ret
insl
mov
push
add
inc
cmp
outsl
sbb
pop
jne
sub
xor
test
pop
jmpw
xor
in
rorb
jb
int3
mov
dec
mov
cmp
out
xor
fstpt
pop
out
dec
mov
rolb
mov
pusha
jmp
aas
out
mov
jge
cwtl
jno
aam
mov
add
jl
adc
int
fnstenv
sbb
in
mov
push
fists
fadd
dec
xor
jbe
aas
xchg
repnz
jle
cmpsl
dec
mov
add
mov
mov
xchg
pop
ja
xchg
ret
popa
cs
xchg
sbb
add
mov
cli
pop
aam
inc
sti
or
movsb
dec
mov
lods
add
mov
jb
dec
mov
push
push
in
mov
inc
push
fsubrp
mov
lds
les
push
push
mov
nop
in
jns
xor
cmc
leave
jbe
xchg
data16
jb
jno
shl
mov
test
arpl
outsl
call
xchg
fistps
std
jo
add
cltd
cmp
scas
cld
sti
mov
pop
dec
pop
adc
mov
mov
in
cmpsl
int
gs
insb
jmp
fsubs
jae
pushf
roll
das
ficoml
or
xor
push
gs
inc
les
sti
pop
cmpsb
mov
pop
xchg
inc
jno
jmp
jb,pt
cmp
ss
fs
sub
enter
sub
testl
sub
jl
repnz
adc
cmpsb
cmpl
leave
cmpb
and
dec
clc
xchg
mov
in
or
into
and
inc
mov
mov
inc
or
sbb
call
push
test
fsubrs
push
push
inc
xor
pslld
sar
sub
xor
leave
adc
pop
sbb
clc
add
push
roll
xchg
int3
fildll
pusha
movsl
jno
inc
in
push
sbb
adc
xchg
leave
bound
mov
push
in
test
fiadds
sti
lea
add
sub
push
mov
jae
out
aaa
pop
test
dec
push
push
mov
imul
pop
movsl
lods
sbb
inc
lods
shll
aam
pop
ss
push
lret
outsl
jmp
les
popa
mov
mov
fildll
inc
mov
mov
ja
aam
dec
jmp
scas
mov
cs
into
sub
dec
nop
sbb
fstps
out
cltd
imul
fsubrl
aad
mov
jge
imulb
and
push
push
push
mov
les
subl
cld
aaa
aam
out
xchg
jge
jno
dec
lock
clc
jg
in
ds
pushf
cmpb
aaa
jns
push
cwtl
fildl
ret
rcl
pop
push
dec
enter
xor
add
mov
sub
adc
cmp
jae
into
incl
xchg
ds
imul
dec
inc
adc
ret
xor
aas
pop
inc
cli
out
insl
movsb
jl
push
xor
add
adc
xchg
pop
or
cmp
bound
mov
pop
aad
push
into
inc
lcall
push
adc
mov
enter
or
jnp
js
mov
adc
push
dec
stc
jle
dec
push
and
imul
int
adc
repnz
fwait
mov
shll
cmc
jmp
or
jg
cld
push
add
jg
inc
into
in
push
mov
fistl
or
dec
mov
jns
les
lret
loope
nop
add
push
jae
pushw
enter
sahf
cmpb
dec
cmovge
stos
mov
adc
testl
xor
pop
out
cmc
notb
cmp
push
add
outsl
jmp
jae
cmp
sub
mov
in
mov
push
lock
aas
ret
or
popa
dec
cmpsl
sahf
aaa
inc
js
stc
pop
push
xchg
popa
pop
inc
and
lcall
or
les
mov
clc
in
arpl
rcll
out
mul
outsl
mov
mov
jbe
dec
test
jo
jnp
ja
push
stc
imull
rolb
cs
mov
jp
mov
pusha
adc
fxam
test
int3
imul
pop
xchg
add
in
lds
or
or
jne
ret
hlt
aam
out
dec
sbb
sbb
in
lods
pop
sbb
mov
imul
sub
lods
mov
xchg
popf
cmp
sarb
jl
fs
divl
mov
dec
sbb
insb
or
loop
pop
mov
cmp
notb
add
sbb
mov
push
jae
push
aas
movsb
movsl
xor
mul
sbb
les
inc
xchg
aad
scas
dec
fbstp
add
test
lock
test
fildl
sahf
sbb
test
orb
xor
test
insb
into
mov
add
cmp
mov
push
ljmp
inc
in
mov
mov
mov
sarb
int
aaa
add
mov
int3
frstor
cmp
pop
stc
mov
mov
jae
add
stos
scas
jae
push
ret
pop
aas
jo
outsb
mov
dec
les
inc
push
and
rol
test
testl
imul
outsl
popa
mov
xor
push
and
fcmovnu
push
fld
pushf
mov
inc
ss
fcmovnu
xor
daa
fs
fidivrl
dec
mov
dec
enter
jmp
insl
aad
leave
or
in
inc
mov
xor
ret
aas
mov
fstpt
or
mov
lods
push
adc
pop
mov
pusha
in
sbb
add
orb
mov
lea
cs
mov
fcmovnbe
sbb
and
xor
fisubrl
and
lds
cltd
pop
mov
mov
dec
and
loop
leave
or
xchg
loopne
clc
jbe
push
adcl
sbb
stos
in
cltd
mov
jle
lahf
mov
pushf
mov
test
scas
push
imul
sbb
lea
mov
testl
jb
pop
mov
mov
je
xchg
inc
or
nop
sahf
test
or
xor
cmc
sub
sub
subl
loope
test
repz
ret
loope
and
jg
flds
mov
rol
ds
pushf
pop
adc
ja
xor
jnp
rclw
shll
mov
push
jmp
add
lahf
mov
push
xchg
lds
inc
mov
mov
mov
push
pop
jbe
scas
jne
das
mov
mov
hlt
popa
sub
push
test
jb
jae
jns
mov
push
mov
pop
cmp
cmp
loop
leave
inc
pop
lcall
mov
nop
mov
xorl
sahf
rcll
cmp
and
or
cmp
jp
sub
subl
add
cmc
xorl
test
out
mov
and
sub
inc
mov
ljmp
fdivs
add
inc
into
xchg
mov
mov
xchg
xlat
int
inc
inc
pop
rcr
or
push
aas
in
push
adc
adc
mov
mov
adc
sbb
loopne
and
js
mov
xor
or
jge
pop
imul
mov
hlt
inc
stos
imul
ss
or
loopne
std
dec
sbb
add
or
jle
rcl
and
push
xchg
jae
pushf
push
jnp
icebp
es
sub
inc
iret
test
pushf
lods
int
shl
out
call
mov
les
mov
test
mov
test
shl
fwait
aam
loop
stos
ljmp
mov
jns
adc
in
sbb
xchg
pop
in
push
aad
xor
arpl
mov
jmp
add
or
loope
iret
les
xchg
and
sub
subl
and
loopne
popf
test
std
data16
sub
imul
jo
aam
jb
addr16
dec
sub
loope
dec
dec
stc
imulb
aad
adc
lds
shlb
cli
int
aas
xlat
inc
pop
mov
mov
daa
cmp
mov
inc
add
add
pop
movsl
mov
jae
cmc
test
pop
call
jnp
cld
sbb
adc
dec
dec
adc
sub
arpl
aas
enter
inc
jmp
add
mov
adc
dec
or
mov
out
mov
insb
sbb
jno
ss
sub
mov
pop
push
out
add
rolb
leave
hlt
push
idivl
or
fidivrl
or
fists
xchg
jbe
push
xor
lea
and
popa
sub
mov
xchg
scas
lret
out
push
cmp
mov
in
and
dec
fiaddl
call
dec
push
xchg
dec
xor
or
dec
push
fmulp
popa
push
lcall
outsb
movd
sti
adc
imul
xchg
pushf
dec
pop
sub
call
jmp
aam
xor
push
es
scas
cmp
and
add
sbb
cs
pop
mov
adc
test
pop
sub
in
push
adc
pop
hlt
dec
dec
mov
scas
mov
inc
leave
popa
cltd
mov
shll
enter
jo
dec
int
and
sub
or
scas
je
in
nop
data16
adc
xchg
stc
dec
cmpb
xlat
sahf
pop
pop
out
dec
cmpsb
popa
dec
outsl
mov
icebp
pop
idivb
push
inc
lds
add
or
jmp
mov
sbb
out
out
dec
or
jb
pop
lcall
jns
mov
or
dec
jns
in
out
lock
mov
sbb
lcall
andl
cltd
aas
outsb
push
cs
gs
xchg
int
es
repnz
jno
loopne
cltd
jae
adc
push
pusha
sbb
sub
insl
mov
inc
aas
jae
mov
test
fdivl
sbb
loope
les
imul
loop
xchg
xchg
add
std
sbb
mov
popf
shll
fiaddl
sti
jb
push
inc
lcall
lods
inc
dec
in
dec
mov
leave
test
popf
xchg
dec
ja
xor
push
add
stos
push
jmp
jns
popf
fs
not
filds
adc
daa
mov
sbb
mov
testb
stos
adc
sbb
ficomps
and
insb
push
xorl
or
sbb
lret
cmpsl
sub
pushf
adc
fadds
orl
insb
gs
sub
loop
leave
mov
int
lods
sahf
pop
scas
lret
sarb
out
and
or
popa
hlt
bound
sahf
mov
pause
popf
in
mov
sub
sbb
leave
outsl
lea
ljmp
pop
ja
dec
insl
add
xor
mov
fs
fnstsw
ja
ret
inc
mov
xor
insb
inc
xchg
push
repz
int
jae
xchg
add
cmpsl
pop
loopne
jno
pop
setne
rorl
insl
ss
dec
cmpsl
ljmp
push
push
cmp
cmp
dec
inc
loopne
jns
xchg
movsb
mov
mov
fisttpl
js
inc
rcrb
pop
pop
mov
xlat
cwtl
inc
ds
negl
xchg
js
pop
inc
subl
fisubs
jo
je
je
xchg
xchg
dec
and
movsl
sub
aam
mov
jl
into
outsl
loope
push
movsb
lds
adc
int3
mov
ret
xlat
sbb
lcall
sbb
xchg
jp
mov
add
subb
in
nop
pop
sub
sub
insb
in
xlat
fs
js
in
sub
imul
sbb
inc
xlat
sarl
shrl
loop
lcall
jle
mov
sub
jb
jge
inc
mov
xor
gs
and
jns
pop
mov
popa
repnz
sbbl
pop
loope
lcall
mov
lods
addr16
xchg
outsl
push
pop
jl
cmpl
orb
jmp
mov
inc
xor
pop
sbb
or
in
jb
mov
mov
xor
sarb
shll
arpl
test
push
imul
fdivp
imul
ljmp
inc
push
in
pop
ljmp
and
cli
fsts
sbb
cmp
pop
clc
nop
sub
rol
dec
test
fs
cld
mov
mov
in
test
ret
push
jnp
pop
and
cmpb
and
dec
int3
xor
lcall
test
xor
mov
dec
out
outsb
mov
bound
add
pop
cld
jp
push
cmp
lods
mov
int3
push
imul
dec
push
jb
jecxz
inc
stc
cmpsl
inc
xlat
jmp
rcl
je
pop
loope
test
mov
out
mov
push
fdivrp
cmpsl
cmp
xchg
dec
notl
sbb
loop
lret
jp
lock
in
mov
in
popa
add
adc
nop
inc
nop
cmp
data16
movsb
jne
and
mov
popa
add
xlat
imul
paddsb
adc
ljmp
insb
sbb
imul
lods
push
js
mov
sub
cwtl
or
daa
inc
subl
push
mov
cltd
sahf
push
cmp
fs
mov
jb
or
jle
stos
sbb
inc
adc
fidivs
jb
push
mov
sarl
pop
sbb
fs
add
xchg
push
shrl
push
loope
gs
inc
pop
mov
lcall
mov
sub
sbb
pop
dec
mov
cmp
negb
jle
lods
icebp
dec
test
or
outsl
push
add
or
ret
cltd
inc
sbb
pop
lds
lahf
cmp
jmp
rep
test
and
jo
jecxz
clc
adc
pop
pop
dec
sub
inc
mov
mov
das
add
outsb
xor
inc
fidivrs
cmc
jge
repz
mov
xchg
scas
cli
int3
adcl
test
sbb
push
pop
jns
lods
cld
jle
xor
pop
cmp
jns
cld
push
mov
sub
mov
fnstenv
fwait
pop
pop
mov
mov
pusha
cwtl
in
cld
scas
rorb
jle
add
mov
sub
adc
dec
add
add
jno
mov
xchg
jne
add
mov
lahf
sub
orl
fnstenv
dec
inc
fidivrl
dec
cli
cmp
or
fldcw
jp
or
cmp
imul
cmp
or
fldcw
jp
or
cmp
imul
cmp
or
jae
push
lods
sbb
cs
outsl
push
dec
mov
cltd
sub
lock
leave
or
push
jbe
cmc
js
inc
jge
jb
ret
jns
into
push
jg
or
add
pop
add
push
add
add
add
pop
aam
roll
addb
add
filds
bound
ljmp
add
add
icebp
add
add
mov
xchg
add
add
add
test
xchg
add
add
pop
add
sbb
popa
add
add
add
add
add
test
push
call
add
xchg
add
sub
push
add
add
push
add
add
add
push
add
add
add
add
add
add
je
sbb
jge
mov
add
add
add
js
lods
add
add
imul
cltd
add
add
add
push
add
faddl
js
cltd
add
add
add
add
sub
add
xchg
add
jg
sbb
ljmp
add
jle
sub
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
addl
add
add
add
add
add
add
addb
add
add
add
add
add
popf
add
xchg
push
add
add
add
mov
add
add
add
add
add
add
sbb
sub
iret
add
fwait
add
insl
add
add
add
lds
push
add
add
add
add
add
add
add
test
je
in
add
add
add
sbb
cmp
insb
add
js
addb
add
or
pop
add
add
dec
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
sbb
mov
jno
pop
add
sbb
sbb
sub
addl
add
sbb
sbb
fiadds
mov
imul
inc
add
test
stos
add
add
add
clc
add
add
add
add
add
xchg
add
add
add
add
add
int
jg
jg
push
pop
outsb
add
xchg
add
test
xchg
add
addb
add
sbb
lea
add
add
add
add
sub
xchg
add
pop
add
add
sbb
jle
jg
lds
push
add
aaa
add
add
add
add
add
add
lods
add
add
add
add
add
inc
add
add
lods
add
add
add
add
add
add
fiadds
fldl
call
add
add
sbb
fiaddl
mov
movl
addb
add
add
add
add
add
add
add
mov
ljmp
add
pop
add
cmp
adc
addl
fiadds
incl
addb
add
add
mov
test
sub
add
mov
add
add
pop
add
sbb
sbb
das
add
add
add
addb
add
mov
addb
add
add
add
mov
add
add
popl
xchg
add
add
add
add
mov
mov
and
sbb
ds
addr16
loopne
push
imul
push
pop
adc
dec
mov
arpl
lods
out
mov
lds
sti
or
mov
inc
xor
push
xchg
xor
fisttpll
jae
mov
inc
inc
mov
pushf
ret
xlat
jno
lcall
stc
jno
push
mov
out
or
add
shlb
push
push
xchg
cmp
pop
icebp
fisttpll
stc
pop
dec
jns
mov
js
jns
adc
sbb
das
aad
xchg
inc
lods
inc
push
icebp
push
rcr
les
push
pop
or
inc
mov
and
or
adc
inc
outsb
daa
pop
jge
xchg
repnz
push
aad
popf
sbb
inc
lods
mov
add
add
push
or
xorb
dec
mov
hlt
sarl
jle
cmp
sbb
je
xchg
mov
pshufw
dec
test
clc
popf
inc
ffreep
jbe
or
and
mov
cmp
ljmp
mov
inc
sub
dec
arpl
cmp
dec
xor
cmp
push
jmp
add
push
into
adc
inc
mov
loop
sbb
xor
test
cld
es
aas
adc
fsubl
ljmp
inc
mov
jmp
xchg
cld
pop
pop
cld
shrb
in
pop
xorl
sbb
aas
or
lods
xorb
and
aad
ret
mov
test
out
jp
shll
into
and
cmp
movsb
cltd
push
mov
sahf
xchg
popa
imul
cmpsl
dec
scas
push
mov
push
jne
bound
cmp
xchg
cmp
cmpsl
mov
or
adc
hlt
outsb
lret
lea
cmp
cwtl
ljmp
jp
xchg
out
inc
fbstp
fldcw
cltd
jmp
ljmp
push
inc
ss
cmp
hlt
das
ss
test
dec
insb
movsb
mov
sub
shr
fcmovb
or
data16
fdivl
dec
sbb
movsl
push
insl
dec
mov
movsl
adc
fisubrs
lcall
xorb
loopne
sti
loope
mov
and
and
adc
addr16
inc
pushf
notb
push
xlat
hlt
mov
pop
adc
and
mov
les
aad
cmpsl
aad
add
xchg
push
sub
out
cmp
fldl
sub
lahf
shlb
test
fsubr
in
jo
rcll
ret
mov
out
addr16
frstor
movsl
pop
loop
addr16
xchg
fcmovnu
and
dec
std
xchg
fcomip
ja
xchg
mov
testl
fdiv
cmc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
