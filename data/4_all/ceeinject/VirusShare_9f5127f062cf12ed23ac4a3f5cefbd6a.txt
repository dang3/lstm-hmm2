adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
pop
xchg
dec
call
jae
or
add
adc
popa
mov
push
lea
pop
xchg
dec
loope
icebp
sub
and
xor
add
adc
popa
fdivs
inc
popf
push
lea
pop
xchg
dec
loope
icebp
sub
and
adc
jno
je
popa
sti
add
add
cmp
aad
rcrb
out
xchg
or
jle
adc
xchg
xchg
xor
fsubrs
jge
jge
aaa
insb
shl
icebp
mov
popf
in
mov
fdivs
lods
jno
pop
and
fldt
mov
and
or
mov
lahf
std
and
adc
xchg
xor
cli
xchg
ret
inc
mov
dec
xchg
sbb
adc
mov
dec
xor
fimull
add
insb
inc
push
mov
ret
pop
or
mov
lcall
cmc
push
insl
popf
and
jnp
jecxz
inc
lret
cmpsb
gs
roll
jnp
test
jb
jge
insl
sbbl
sub
and
xor
add
adc
popa
mov
push
lret
les
adc
sbb
or
jp
pop
scas
js
jns
lea
mov
leave
xor
and
and
xlat
adc
add
adc
mov
and
push
lahf
jl
adc
sub
cmp
cmp
ds
cmp
xor
rcrl
in
add
adc
popa
mov
push
lea
pop
xchg
dec
loope
icebp
sub
and
xor
add
adc
popa
mov
push
lea
xor
mov
enter
dec
dec
jmp
ds
jl
dec
fiadds
jge
loopne
inc
test
std
fwait
popa
stos
adc
dec
jae
add
test
lret
or
or
sub
cwtl
dec
inc
jmp
xchg
outsb
mov
inc
insb
push
jecxz
call
and
xor
adc
pop
xor
or
mov
or
pop
pop
ss
cmp
mov
mul
data16
jb
into
ljmp
mov
outsb
mov
push
ja
icebp
pop
and
pushf
lock
add
inc
mov
and
pop
xchg
scas
lods
ss
lret
pop
insb
inc
mov
outsb
js
cmp
jno
xor
xchg
pop
mov
dec
dec
or
mov
jb
or
dec
bound
jle
scas
push
xchg
ss
and
sbb
aas
stc
bound
jno
jb
adc
cs
dec
cwtl
mov
cmp
into
fsubr
inc
aad
sub
bound
scas
pushf
inc
iret
lahf
xor
pop
iret
push
popf
shll
data16
cmp
mov
mov
popa
divb
mov
clc
cs
push
fisttps
test
cmpsb
hlt
shll
push
mov
popa
cmp
std
cmpsl
push
and
mov
push
add
mov
or
pop
js
or
movsl
stc
inc
into
cmc
sti
xchg
inc
pop
jnp
pop
mov
xchg
andl
add
in
xchg
xchg
out
ret
in
scas
adc
inc
lods
div
movsb
adcl
dec
cld
and
sbb
ja
fistl
mov
test
movsl
add
or
lcall
popf
js
push
xchg
stc
inc
insb
ret
dec
int3
jl
int
dec
jge
or
mov
or
xchg
push
dec
or
and
and
push
cli
cmp
jno
pop
cmp
popa
mov
jnp
xor
popa
dec
cmp
fsubrs
pop
xlat
scas
mov
out
jb
repnz
mov
push
mov
ljmp
cmp
out
inc
fs
lahf
push
cmp
xor
aad
orl
pop
bound
aas
xor
and
jo
push
js
push
loopne
fiadds
push
inc
mov
popa
inc
pop
sub
push
insb
jo
mov
js
pusha
add
daa
pop
popf
lods
mov
in
addl
mov
push
out
push
xchg
pop
jle
insl
push
add
inc
loopne
xchg
adc
jl
es
cmp
inc
fsub
sub
sub
sahf
lret
sub
les
cwtl
or
jne
or
mov
test
cld
insb
jnp
data16
rol
mov
xor
inc
inc
cli
stc
or
jle
mov
lds
xchg
je
pop
loopne
icebp
call
fmuls
push
dec
mov
xchg
sbb
inc
jbe
icebp
and
in
jnp
mov
mov
cmp
push
mov
adc
xor
cmpsl
pushf
lods
mov
daa
jp
ret
insb
jp
cmpsb
fildll
addl
cltd
lods
pop
ss
jb
sbb
xor
test
xor
or
insl
daa
lahf
test
push
mov
dec
or
push
stos
mov
lret
lea
loop
mov
fadds
adc
inc
adc
jl
jae
dec
in
mov
cs
mov
mov
adc
add
cs
loopne
push
dec
outsl
pop
arpl
das
sbb
cld
jne
push
push
popf
ds
pop
jns
cmp
mov
pop
stos
aam
je
adc
stos
xchg
sub
arpl
cmp
add
sub
push
fdiv
das
test
fidivs
andl
repnz
adc
push
mov
lcall
pop
movl
aam
inc
clc
out
fs
pop
mov
add
popa
mov
pushf
pop
and
mov
leave
lcall
xchg
dec
inc
outsb
imul
fildl
fcmovb
lret
cmp
mov
js
pop
pop
mov
push
movl
shrb
mov
and
and
xor
fucomip
jno
jmp
lcall
jno
ljmp
stos
addps
neg
mov
sbb
daa
and
dec
pop
int3
dec
push
mov
mov
cmp
mov
mov
push
pop
xchg
jecxz
adc
daa
pcmpgtd
or
addr16
mov
inc
dec
je
shrb
add
nop
or
popf
push
imul
sbb
inc
popf
out
sub
std
push
cmp
mov
loop
lcall
or
fldcw
lea
pop
mov
lret
mov
jge
arpl
dec
popf
inc
sbb
std
sbb
push
adc
inc
mov
popa
jge
cli
push
cltd
pushf
xor
xor
mov
mov
xchg
or
xchg
adc
mov
mov
sahf
je
xchg
shll
mov
mov
test
cmp
aas
pusha
mov
xchg
in
cltd
decl
andb
stos
inc
jle
adc
dec
test
mov
mov
fwait
stc
mov
adc
lea
mov
and
jge
inc
fs
mov
pusha
ds
call
fdivl
add
jo
out
into
jb
test
jb
test
or
add
add
mov
movsb
cwtd
jle
int3
aaa
lcall
jecxz
sbb
xor
mov
sbb
je
popf
cmp
add
mov
cltd
push
jle
pusha
adc
dec
daa
jmp
out
cltd
cmc
ljmp
aad
and
lock
jl
lea
lock
scas
sahf
mov
iret
loop
sub
in
pushf
or
mov
dec
fnstenv
subb
xor
or
pop
ds
popf
aas
sbb
add
sub
loopne
fnsave
cs
pop
dec
cmp
fwait
outsl
ret
or
mov
xchg
mov
repz
mov
aam
in
loopne
popa
pop
lcall
adc
xchg
sarl
xor
pop
test
test
ss
in
lds
aad
sub
int
jl
fisttps
add
mov
jne
inc
insb
fcmove
sarl
shll
sub
jae
sbb
gs
out
xor
jae
xchg
lret
mov
lods
nop
inc
cmp
mov
shlb
movsl
or
cmp
mov
push
pop
adc
scas
lret
fsub
movsl
out
ljmp
sbb
fwait
push
dec
cs
inc
ljmp
pop
daa
fs
jo
je
jecxz
shr
fiadds
xchg
orl
push
jg
nop
mov
neg
xchg
dec
adc
pop
push
rorl
dec
jno
ja
sbb
ja,pn
pusha
adc
jns
notb
adc
mov
cmp
or
test
pusha
sbb
movsl
or
rclb
jge
cltd
adc
jmp
xor
add
mov
xchg
leave
xchg
fldcw
stos
idiv
xorb
lds
stos
or
add
daa
rcrb
pop
cmp
mov
cmp
xor
xchg
pop
sbb
mov
enter
mov
out
insl
cwtl
ljmp
mov
add
pop
add
movsb
mov
adc
scas
sbbl
ret
test
out
loope
jae
clc
push
sbb
push
ret
xlat
lea
dec
movsb
icebp
push
jge
cld
stos
xor
jae
ret
jge
mov
sbb
test
xor
dec
inc
repnz
sub
dec
repz
mov
in
aas
dec
pop
testl
out
add
mov
sub
adc
pop
pop
xlat
cli
jno
cmc
add
ret
jle
or
fsubr
jae
test
cmp
cmp
xchg
test
sbbb
jns
aad
js
out
push
lods
jbe
shr
popf
xchg
push
dec
dec
adc
push
xor
adc
shlb
adc
stos
xchg
hlt
cltd
push
mov
pop
sti
jo
les
mov
insb
cmp
stos
lock
cmpsl
jbe
and
cmp
rclb
inc
sub
stc
out
inc
pop
mov
pop
data16
inc
int3
xor
stos
jbe
aaa
pop
lock
adcb
xlat
inc
mov
sbbb
and
ja
lret
leave
xchg
xor
jmp
in
in
push
stos
inc
nop
lods
jg
jbe
test
arpl
fsubp
out
push
lahf
fnsave
or
mov
stc
into
sahf
scas
sub
in
pop
xchg
xor
ret
fwait
cmc
and
inc
lods
sub
inc
push
leave
adc
or
add
mov
imul
nop
add
pop
adc
shl
mov
sub
scas
jae
xlat
das
cltd
pop
mov
les
push
sbb
mov
sub
decb
pop
fcmovu
adc
gs
push
add
mov
in
mov
fldenv
mov
mov
fstpl
or
mov
push
adcb
imul
add
sbb
bound
pushf
push
cmp
sbb
inc
mov
lcall
inc
push
je
out
outsl
addr16
ljmp
pop
mov
js
testb
xor
insb
lret
ret
pusha
outsb
orb
xor
decb
adc
enter
mov
push
mov
mov
pop
rcr
mov
push
jne
dec
or
mov
popf
dec
cmp
hlt
pushf
loopne
and
xchg
adc
lock
arpl
clc
into
xchg
aas
std
mov
cld
pushf
test
inc
sub
mov
call
mov
data16
push
cmp
sbb
popa
mov
inc
imul
imul
jbe
jg
stc
jne
dec
or
outsb
inc
xor
dec
hlt
sub
or
xchg
mov
dec
push
dec
push
outsl
sbb
cmp
lret
pop
mov
stc
and
mov
popf
fidivs
je
cmpsb
in
cmpsl
push
js
fucomp
or
mov
mov
xor
xchg
mov
lock
xchg
add
cli
sbb
out
cmp
add
in
jno
or
loop
push
xor
jnp
mov
push
movsl
cwtl
icebp
ja
cmpb
and
xchg
aad
aas
xchg
cld
adc
lea
in
xchg
mov
sub
repnz
in
or
aas
and
scas
inc
xor
mov
or
outsb
lahf
daa
lods
rolb
cmp
cmc
mov
in
dec
imul
fmull
adcb
popa
sub
xchg
pushf
call
fildl
and
pop
popf
sub
pop
xchg
movsl
scas
sub
cmp
ds
jnp
sbb
in
popf
lock
lea
and
out
es
xor
adc
push
ficomps
cmp
inc
psubusw
into
push
lcall
add
add
pop
mov
dec
stos
lret
cs
dec
mov
jnp,pt
ja
jo
or
sbb
push
sbb
inc
rolb
notb
dec
fsubs
xchg
push
cmpsb
mov
test
lds
dec
add
in
xchg
pushl
cmp
fcoml
cmp
loopne
ret
jg
lods
test
hlt
xchg
xchg
dec
pop
xor
jae
nop
mov
ds
lahf
bound
mov
adc
or
dec
leave
sbb
mov
inc
xor
cmpsb
inc
inc
jl
sbb
in
mov
std
outsb
dec
sbb
fsubl
pop
mov
sub
jbe
loopne
jae
mov
scas
test
xchg
lahf
jnp
les
enter
rorb
daa
outsb
mov
and
sub
xorl
jno
pop
shrl
jbe
cmpsl
pop
sub
sbb
andl
or
cwtl
mov
pushf
lds
mov
out
jge
xchg
pushf
sub
lock
adc
mov
jns
push
mov
into
pop
incl
test
test
mov
frstor
ficoms
or
jg
mov
dec
pushf
inc
inc
lea
cmp
dec
shll
sbb
cmp
int
arpl
aam
sub
dec
dec
in
sbb
mov
sub
gs
sbb
out
mov
inc
pop
mov
or
add
xor
clc
lahf
scas
fninit
fidivrs
jle
sub
lods
sbb
jb
stos
repnz
inc
daa
inc
addb
loopne
pop
cmp
cmp
xor
cltd
xor
push
push
popf
xor
mov
fmuls
addb
xchg
mov
sahf
xchg
das
dec
pop
fsubr
and
xchg
mov
adc
dec
cmp
lea
push
popa
jp
popa
pop
add
imul
inc
cmp
mov
scas
je
jmp
sbb
daa
xor
push
out
testb
adc
xor
test
int3
xchg
aaa
jmp
scas
mov
xchg
icebp
jecxz
shrb
ficoms
fistl
jne
jle
mov
inc
lcall
pmaxub
sub
jle
sbb
cmc
outsb
inc
lret
hlt
pop
mov
movsb
aas
mov
int3
loop
and
mov
jo
cmp
sub
inc
and
test
push
std
lcall
lock
push
mov
mov
push
cwtl
test
test
xor
sti
lret
or
add
dec
popf
das
adcl
mov
dec
xchg
dec
mov
stos
popf
fnsave
mov
cmp
lret
fscale
push
and
xchg
sar
xor
lret
enter
mov
loop
dec
and
movsb
fimuls
xor
cmp
jp
pop
cmp
add
fs
or
sahf
and
inc
out
std
push
rclb
inc
xchg
xchg
in
and
cmp
hlt
nop
or
cwtl
xchg
movsb
push
and
stc
testb
je
push
xchg
jo
in
and
shll
test
imul
adc
les
or
movsl
jp
dec
stos
adc
jecxz
sysenter
cmp
jl
cmp
fsubrl
inc
xchg
insl
xchg
setbe
mov
fildl
inc
fdivrl
out
sti
jbe
sub
popf
fldcw
dec
test
repnz
andb
push
adc
jmp
push
imul
add
add
imul
daa
xor
bswap
sub
mov
inc
adc
xchg
xchg
sub
shll
js
cs
out
xor
xor
in
enter
idiv
adc
out
adc
inc
lret
inc
dec
popa
nop
adc
fdivrl
aam
jp
mov
mov
popl
es
test
rorl
add
in
mov
pop
mov
inc
inc
cmpsb
arpl
xor
inc
or
loopne
aam
ljmp
iret
sub
pop
lea
mov
xor
xor
jbe
leave
jg
jmp
push
xor
push
nop
sbb
xor
and
out
les
jbe
push
sub
fcomp
mov
jge
out
or
sub
mov
xchg
mov
cmp
int3
sub
sarl
pushf
mov
shrl
mov
mov
cmc
jnp
ficoml
lea
aam
or
sbb
or
mov
dec
lea
stc
stc
sti
hlt
pop
pushf
jl
jo
xor
push
out
adc
xchg
cmp
outsl
pop
xor
sbb
subl
into
cmp
mov
inc
test
add
je
das
int3
dec
and
xchg
sbb
push
push
pop
inc
orb
ret
fnstcw
scas
imul
push
arpl
outsb
jo
imul
clc
push
xchg
push
test
sbb
into
insb
cld
iret
jb
inc
aas
test
icebp
sbb
lea
dec
or
flds
push
xchg
rorb
and
jl
cld
mov
and
xor
js
mov
dec
xchg
add
inc
mov
xchg
outsb
sub
popa
cmp
jbe
cmc
imul
fnstcw
mov
repnz
lods
push
les
or
mov
push
push
mov
mov
add
outsl
mov
sahf
mov
stos
xor
add
lahf
popf
inc
lods
or
jp
cmc
in
push
sahf
lahf
movsl
fidivs
iret
aas
or
leave
jg
mov
adc
test
cmp
or
movhlps
xor
cmp
mov
test
lea
lods
push
ret
dec
outsl
in
cmpb
rorl
loopne
daa
xor
in
add
scas
icebp
sahf
insl
std
std
dec
sbb
cmp
mov
dec
dec
add
in
mov
push
lahf
xor
cmp
sbb
add
nop
ds
mov
jns
sbb
cmp
xchg
std
push
stc
jle
push
inc
and
sbb
jg
xchg
inc
mov
movsb
jb
or
imul
pop
ficoms
adc
cwtl
add
pop
jo
loope
aaa
sbbl
cmpb
pusha
sub
sahf
xchg
loopne
into
ficompl
push
inc
js
cld
enter
add
popf
addl
ss
push
scas
icebp
mov
call
mov
out
cmpsb
mov
div
loop
outsb
xchg
mov
lret
mov
mov
test
dec
cmp
pushl
cmc
stos
cmp
fistl
call
cwtl
push
inc
xlat
mov
xchg
jne
mov
adc
aaa
and
loop
data16
add
mov
into
push
clc
sub
inc
cmpsb
inc
mov
out
test
xorl
mov
icebp
test
lret
sub
dec
inc
push
imul
jne
mov
cltd
dec
sahf
or
rorb
push
adc
test
out
cmpl
sub
lret
mov
pusha
popa
jne
pop
call
pop
popa
adc
pop
and
jb
jp
and
sub
ja
inc
lcall
push
fstl
bound
js
clc
ret
scas
sahf
and
or
cmp
loope
xchg
mov
out
add
cli
pop
popa
lds
mov
dec
or
cli
cwtl
adc
orb
adcb
mov
fwait
inc
jb
dec
jno
jae
daa
out
data16
sbb
mov
lea
cmp
iret
nop
js
xchg
mov
fucom
adc
adc
pop
inc
mov
jne
ss
pop
test
sbb
xlat
mov
es
jg
ja
lods
cmp
lock
pop
push
dec
sbb
cmc
mov
mov
xor
push
jge
scas
movsl
dec
pop
mov
movsl
sub
loopne
data16
jnp
cmpsb
out
leave
adc
jmp
inc
pushf
mov
pusha
pop
lods
mov
mov
xchg
adc
into
test
fldlg2
cmpsb
inc
in
pop
outsb
hlt
jno
mov
adc
test
cld
mov
xrelease
jo
mov
mov
mov
adc
stos
inc
ficoms
fsubl
add
les
movsb
fwait
cmp
ret
mov
adc
jp
lock
mov
jecxz
cmp
out
out
sbb
mov
dec
adc
mov
jmp
and
push
mov
cmp
imul
out
jae
daa
dec
mov
and
xor
jmp
mov
cmp
mov
iret
adc
adcb
xchg
test
lods
insl
ja
dec
push
arpl
ret
or
aas
xchg
outsl
shll
dec
cmpsl
stos
mov
or
jno
mov
jo
jl
add
xor
insl
std
aam
outsl
jo
xor
leave
addl
shrb
mov
xor
cmpsl
lea
push
arpl
xor
fnstsw
cltd
daa
add
push
adc
jmp
sbb
aad
adc
push
cmp
pop
js
dec
add
jnp
jo
lahf
cmp
sub
pop
cmp
shrb
orl
rcr
ja
pop
arpl
imul
iret
scas
sub
pop
out
inc
jbe
sbb
mov
arpl
mov
icebp
pop
lret
dec
pop
dec
cmp
outsb
cmc
add
mov
xor
sub
and
lret
je
cld
xorl
xor
sbb
mov
in
inc
dec
pushf
cmp
mov
inc
mov
xor
scas
mov
in
xor
loope
rolb
jbe
adc
jno
gs
ja
repz
mov
pop
mov
pop
xchg
dec
loope
icebp
sub
and
xor
add
adc
popa
mov
push
lea
pop
xchg
dec
loope
icebp
sub
and
xor
add
adc
popa
mov
push
lea
pop
xchg
dec
loope
lock
and
xor
add
adc
popa
mov
push
lea
pop
xchg
dec
loope
icebp
sub
fdivrp
into
inc
stos
fstl
mov
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
test
mov
or
xor
dec
sub
cmp
cld
jp
pop
fcompl
test
mov
or
jl
insb
enter
cmp
mov
dec
in
dec
fcompl
mov
mov
or
jl
insb
rcrb
xor
in
push
mov
mov
mov
mov
xlat
pop
scas
pop
ret
flds
mov
imul
ret
jmp
lods
enter
mov
call
dec
fsubl
and
fimuls
sub
inc
scas
sbb
jg
and
lds
in
dec
pop
pop
je
jns
or
mov
insl
aaa
fnstenv
cmp
cld
js
ret
pop
int
dec
xor
adcl
sub
loopne
arpl
mov
fmull
inc
mov
addr16
pop
jge
movsb
cmp
xlat
lods
mov
jne
dec
cltd
sub
fcompl
popa
cmp
sub
sbb
or
jl
insb
enter
xor
mov
pusha
in
push
fcompl
les
sbb
or
sbb
sbb
lds
stc
jl
push
movsl
xor
dec
out
call
and
xor
pop
aad
iret
pop
jmp
mov
int
aam
in
lock
mov
sbb
fcompl
test
mov
or
jl
insb
enter
sub
mov
js
dec
fcompl
test
xchg
inc
aaa
icebp
jmp
test
lcall
push
js
in
add
outsb
add
imul
or
bnd
xchg
mov
sub
jbe
out
push
mov
jecxz
mov
in
std
les
ljmp
xor
mov
push
sub
mov
ret
or
pop
les
adc
andb
pushf
or
rcl
idivb
adcl
mov
leave
push
hlt
pop
fwait
clc
push
push
stos
lret
sbb
mov
jge
mov
daa
lods
mov
mov
or
fistpll
jne
lahf
xor
daa
xor
pop
push
sub
xlat
stc
sbb
sbb
cmp
mov
popf
addl
and
ret
into
movsb
pop
or
cmpsb
inc
jno
pop
adc
sub
pop
jnp
in
stos
inc
sub
jg
enter
out
mov
push
sub
pop
ljmp
das
adc
cltd
popa
call
mov
sbb
pop
push
adcl
es
ja
push
inc
inc
xchg
pop
cmp
or
mov
jo
push
frstor
mov
xlat
test
scas
push
sbb
pop
pop
mov
in
icebp
xrelease
gs
aam
les
pop
subb
loope
sub
mov
or
fwait
or
insl
fs
hlt
mov
enter
enter
add
pop
or
or
xor
loop
mov
popa
xlat
cmp
jecxz
jo
xchg
cmpsb
cli
inc
xlat
xchg
fwait
mov
fwait
mov
xchg
lea
xor
mov
ret
pushl
sahf
mov
mov
stos
mov
sbb
push
cs
fs
cmp
ret
imul
xchg
xor
ss
rcrb
ljmp
clc
test
adc
push
fnsave
adcl
push
jp
mov
sbb
idivl
data16
out
test
inc
fs
jmp
popf
mov
lret
mov
adc
arpl
imul
mov
push
mov
mov
ss
jnp
adc
test
leave
xchg
lret
push
stc
cmpsl
cmpsb
cld
movsl
jo
pop
std
xchg
cmc
sub
data16
or
das
pop
shlb
pop
xchg
add
daa
repnz
lret
cmp
sbb
inc
cs
out
or
call
dec
dec
scas
xor
popf
jb
lret
mov
push
xchg
jle
add
lods
inc
pop
or
imul
popf
sub
and
mov
js
lds
mov
ret
xchg
and
dec
mov
popf
lock
stc
and
fwait
jg
daa
jmp
inc
xchg
mov
arpl
and
add
jle
xchg
dec
out
add
in
xor
roll
dec
rclb
int
int3
stc
hlt
stos
adc
cmpsb
mov
mov
sbb
fidivs
mov
loopne
mov
and
xchg
rol
idivl
push
push
imul
and
bound
adc
repz
je
dec
pop
adc
inc
jne
js
frstor
mov
fwait
nop
ret
dec
lret
inc
dec
ret
push
mov
fwait
and
pop
jle
sbb
xchg
ret
cmp
rcrb
pop
pushf
stc
inc
inc
out
cmpsl
pop
jl
imul
movw
mov
xchg
inc
fwait
outsb
ret
xchg
cmp
inc
jae
push
fxch
dec
loope
ja
adc
in
testb
cmp
divl
std
call
pop
sbb
inc
jbe
out
xchg
adc
cmpsl
fs
adc
sub
outsl
mov
divl
sarl
cltd
lea
mov
adcl
cmp
push
sbb
push
xchg
push
sbb
das
inc
sub
daa
lret
sarb
or
in
fcmovbe
in
std
stos
popa
push
mulb
cmp
adc
into
popa
xchg
adc
or
icebp
sahf
outsl
mov
inc
and
andl
and
add
test
inc
sub
sub
xchg
and
lock
loopne
je
ss
mov
loopne
fdivs
insl
test
data16
xlat
mov
sub
jmp
jmp
pop
or
test
addr16
pushw
xor
out
mov
lret
imul
test
outsl
jl
clc
sahf
sar
iret
ja
push
cmpsb
fsubp
js
mov
sbb
lods
cmc
repz
xlat
push
pop
xor
and
cs
insl
dec
push
test
xor
cld
dec
adc
lea
imul
std
sub
ljmp
sub
xchg
cmp
cld
incl
lea
or
mov
sub
xchg
rcr
inc
out
ljmp
pop
daa
notl
das
push
ror
inc
mov
cmp
inc
es
pop
lret
adc
or
icebp
in
cmp
and
mov
xchg
or
xchg
clc
subb
xor
fcmovu
pop
insl
nop
push
mov
popf
dec
stc
sbbl
dec
xchg
mov
in
fldcw
xchg
lret
lcall
xor
outsl
in
bnd
or
subl
lods
bound
mov
in
loopne
int3
pop
mov
dec
repnz
aad
movsl
push
push
leave
aam
rclb
mov
lcall
mov
jl
decl
ljmp
jnp
lds
pop
mov
loop
out
mov
cmp
mov
xor
or
sbb
loope
inc
or
daa
gs
leave
cmp
cmpsb
hlt
addr16
push
fisttpll
faddl
faddl
inc
adc
sub
mov
add
out
insb
in
lret
jo
inc
fisubl
std
fnsave
ljmp
sub
aad
fwait
out
sahf
push
push
ffreep
sub
add
je
aas
xor
adc
int
aaa
xor
dec
lods
mov
ret
inc
data16
pop
enter
stos
cmp
or
dec
jecxz
ljmp
cmp
lcall
jg
or
push
and
and
jns
adc
add
xchg
mov
ss
pop
push
outsl
lods
xchg
pop
sbb
xchg
ror
hlt
mov
repnz
dec
mov
insl
in
bound
ja
fwait
repz
mov
in
lods
push
out
stos
or
popa
mov
push
or
les
js
sub
negb
cmp
dec
sahf
mov
or
push
mov
icebp
sbb
xchg
js
dec
ja
iret
rolb
dec
pushf
cmp
pop
jbe
jnp
outsb
xor
cli
dec
sbb
xorb
xchg
and
jo
cmp
dec
cli
outsl
jnp
pusha
mov
rcr
movsl
inc
les
and
push
sub
adc
add
fsubrs
adc
and
pushf
das
rorb
cmp
mov
push
out
ret
jae
cli
xchg
lods
test
jle
dec
stos
mov
das
ficoml
cmp
lea
sbb
sbb
pop
xor
mov
push
xor
cld
repz
jle
dec
loop
xchg
fsub
cmp
js
je
das
pushf
pusha
push
fisttpll
inc
or
mov
out
adc
inc
push
scas
cmp
in
inc
xchg
sbb
outsl
sub
pop
fsubr
add
aaa
mov
inc
and
jnp
js
adc
and
fidivrl
cli
cli
cli
int3
incl
adc
cmpsl
jp
mov
leave
adc
xor
in
in
ja
shlb
pop
inc
mov
cwtl
lds
sbb
sbb
xchg
add
fs
mov
pop
push
popf
test
mov
adc
cmpsb
mov
xorl
xlat
cld
ret
insl
mov
ror
pop
xchg
add
int3
aam
push
push
jmp
mov
pop
mov
scas
jmp
sub
leave
scas
out
outsb
fdivrl
bound
add
cwtl
sub
inc
xchg
dec
lahf
pop
jnp
or
push
cmp
dec
outsl
lds
pop
in
imul
xor
xor
xor
dec
add
pop
sub
xor
outsb
jp
inc
mov
ja
xchg
sub
mov
inc
mov
lds
jecxz
add
dec
leave
lret
jl
scas
aad
subb
mov
test
aad
push
outsb
adc
xlat
mov
mov
sbb
or
out
sarb
test
jecxz
sbb
sub
mov
dec
jmp
repnz
mov
incl
inc
cld
mov
hlt
cmp
jo
inc
adc
cmp
mov
jmp
push
push
jge
push
jae
jno
sahf
or
outsl
lea
xchg
xor
inc
jb
cltd
mov
mov
mov
dec
stos
es
lcall
cmp
out
shrd
popl
xchg
mov
xchg
dec
int3
mov
dec
bound
hlt
dec
mov
mov
data16
pusha
roll
pop
push
clc
rol
mov
cmp
mov
add
jae
pop
scas
fwait
icebp
xor
in
cmp
pop
movsb
lret
mov
xor
add
push
pusha
ret
push
repnz
cmp
pop
pop
les
pop
push
andl
mov
mov
hlt
cwtl
in
or
push
mov
test
dec
sti
jecxz
fsubrs
outsb
outsb
sbb
lea
dec
cld
es
xchg
ljmp
aaa
lea
loopne
or
je
data16
test
pop
les
adcl
push
mov
test
incl
or
sub
xchg
mov
cwtl
int
outsl
add
mov
loopne
dec
inc
in
test
fstps
push
adc
and
into
rcrb
outsl
aaa
call
movsl
adc
loope
leave
test
mov
pop
into
push
xorb
mov
cld
insl
pop
cmp
test
pop
stc
loop
mov
push
rorb
xchg
push
nop
push
in
push
enterw
lea
pop
jnp
pop
mov
and
imul
gs
and
or
mov
push
repz
sbb
cltd
add
int3
je
mov
pushf
out
xchg
and
jl
js
xor
cmp
pop
loop
xor
idivl
lods
inc
add
push
xchg
rcll
add
popa
daa
xor
ljmp
dec
aaa
sub
lock
add
jns
xchg
jmp
insb
pop
lods
add
mov
sub
gs
inc
add
or
mov
addr16
or
pop
call
aas
scas
shrl
sbbl
sub
sub
jle
jb
push
data16
xor
push
adc
insb
ljmp
das
fsubrs
pusha
std
sbb
pushf
jbe
rcll
and
xlat
adc
sbb
repnz
movsl
add
dec
xlat
inc
in
cmc
mov
scas
insl
inc
mov
outsb
or
cmp
dec
rolb
and
mov
xchg
xchg
ss
push
cmc
cmp
mov
dec
xorl
mov
shrb
out
sub
mov
add
mov
mov
dec
and
pop
mov
adc
or
repz
cmp
mov
mov
dec
mov
int
pop
outsl
les
mov
outsb
inc
rorb
mov
push
xor
add
pop
std
in
enter
ljmp
xor
inc
mov
iret
add
fst
insb
dec
sbb
jne
ficoml
addb
out
mov
pop
mov
jl
loopne
pop
cmc
cli
lea
jo
cmp
mov
and
loopne
jg
out
addb
mov
lods
enter
pop
or
mov
stc
pop
hlt
lods
scas
xchg
imul
add
out
sub
das
popf
dec
jo
push
aad
cmpsb
jae
scas
mov
inc
repnz
cli
sbb
cmp
mov
mov
and
lock
fwait
loope
adc
jnp
or
dec
mov
pop
insl
mov
call
or
push
push
int
shlb
mov
jecxz
pop
mov
cmp
mov
aas
dec
loope
mov
xor
scas
add
sti
mov
popa
jno
shll
rcrl
xchg
jnp
lock
adc
sbb
or
push
xchg
adc
popf
aas
ja
mov
sbb
push
add
in
add
adc
sbb
fldcw
mov
adc
daa
sub
mov
dec
imul
and
out
fcmovbe
in
inc
aas
and
sbb
jns
adc
sbb
pop
cmc
std
push
sbb
int3
sub
ret
or
lds
jne
fmull
xchg
hlt
sub
addr16
xchg
jmp
pop
sahf
xlat
ss
push
cli
add
add
testb
rorl
mov
dec
adc
cmc
jno
push
mov
fs
stos
addl
aaa
roll
cmp
or
xchg
mov
fcomp
frstor
das
dec
mov
lret
mov
pop
dec
mov
test
insl
pushf
iret
cmp
iret
aaa
das
xchg
aas
xchg
or
inc
or
push
pop
js
and
xchg
mov
in
cmp
ljmp
testl
in
lods
ror
pop
aam
out
in
mov
inc
aad
call
repz
outsl
push
sub
lahf
xor
int3
mov
cmp
aas
push
adc
mov
lods
push
fisubs
mov
pop
into
sub
lea
inc
icebp
sbb
or
icebp
shlb
xchg
cld
cmp
mov
lods
out
lret
jge
jbe
mov
dec
mov
add
push
xchg
divb
push
insl
into
outsb
out
ret
sbb
orl
lahf
popa
add
fwait
mov
add
and
jle
enter
or
ss
sub
sub
push
add
mov
jmp
scas
mov
mov
cmp
out
ljmp
jb
push
fldcw
fld
add
xchg
or
ds
stc
pop
idivl
adc
fnstenvs
jle
insb
mov
cmc
xchg
dec
testb
pop
cld
lods
sti
gs
outsb
cmp
and
push
xchg
out
sbb
mov
jle
xchg
aaa
sbb
dec
jne
stos
shrl
movsb
shlb
leave
mov
inc
jbe
out
les
stos
jp
inc
mov
or
cltd
xlat
lahf
mov
pop
cli
inc
ds
mov
cmp
or
dec
inc
cltd
push
scas
fbld
mov
inc
int3
push
inc
jne
pextrw
mov
mov
pop
push
and
imul
roll
nop
sti
push
fwait
pop
ret
mov
or
gs
pop
xchg
push
sti
push
and
rcl
push
mov
jg
out
add
inc
jl
xor
add
dec
daa
dec
rcr
rorb
int3
xchg
movsb
test
das
out
mov
jl
mov
frstor
and
and
xchg
cmp
mov
loop
jae
push
pop
jg
inc
mov
sbb
pop
lahf
and
dec
pop
into
in
push
fstp
stos
or
fistl
sub
pop
test
sbb
in
fstpt
out
call
cltd
lret
loope
call
jae
les
cmp
sarl
jl
mov
pop
xchg
cmp
xor
pop
and
push
mov
pop
xchg
dec
jge
mov
out
jnp
or
mov
repnz
insl
icebp
fs
iret
in
jno
jns
call
mov
mov
push
loop
test
mov
in
imul
xor
scas
aam
add
popa
xchg
das
xchg
jl
outsb
test
rorl
push
or
push
test
mov
rcll
pop
insb
push
negl
cwtl
cmp
mov
mov
adc
push
mov
mov
mov
mov
or
cld
nop
testl
xchg
movsl
sbb
pcmpgtd
or
adc
or
mov
addr16
fwait
mov
insb
pop
lret
mov
xor
out
hlt
je
bound
stos
aam
mov
mov
add
adc
rcrl
mov
shll
and
push
push
mov
stc
xchg
jmp
jnp
dec
push
andl
pop
scas
arpl
mov
std
or
push
out
mov
inc
lods
inc
mov
inc
in
mov
sub
das
aad
dec
les
jl
aas
sbb
mov
jle
ja
movsl
loopne
out
dec
add
sub
in
xlat
in
ljmp
cmpsb
fdivr
cltd
imul
scas
insb
xor
xor
inc
jmp
sub
rorl
loop
lcall
sbb
and
stc
and
push
aaa
push
in
push
outsl
push
mov
xchg
sub
and
xor
lods
in
mov
pop
add
fidivs
inc
mov
sar
lahf
test
jecxz
jne
leave
xor
stos
inc
mov
pop
addr16
imul
xchg
fstpl
xchg
shll
dec
fcompl
mov
pusha
fnstenv
mov
xchg
jns
gs
mov
mov
cmovs
dec
clc
xchg
addr16
pop
pop
lods
and
and
shll
insb
enter
xchg
or
nop
js
push
mov
sub
dec
sbb
push
outsb
aaa
mov
mov
sbb
decb
add
sub
xchg
roll
add
mov
pop
lock
leave
sbb
icebp
dec
mov
mov
mov
mov
push
xor
loop
mov
pop
data16
mov
andl
iret
data16
sub
jbe
xchg
push
xchg
jbe,pn
xlat
xorb
and
and
pop
xchg
imul
inc
ror
xchg
mov
cmp
outsl
subl
mov
jge
filds
dec
negb
mov
mov
sahf
aaa
and
shll
fidivrl
jbe
mov
inc
push
mov
push
add
push
sub
inc
push
test
movb
sarl
into
repz
and
je
test
ret
cmp
lea
ror
xchg
sbb
sub
mov
aad
mov
and
dec
shrl
mov
sub
xlat
ljmp
mov
sbb
mov
mov
jo
outsb
pushf
outsl
xchg
loopne
and
mov
mov
sub
clc
arpl
jp
stc
adc
fdivl
cld
pop
push
mov
xchg
movl
enter
xor
cmpsl
xor
rcrb
lods
arpl
insb
mov
sbb
adc
cmp
add
inc
cld
test
mov
mov
cmp
mov
mov
daa
cld
stos
pop
sub
out
push
lods
push
add
xchg
jae
xchg
fwait
mov
jecxz
cmp
loop
mov
lock
mov
push
and
pop
or
dec
arpl
mov
jae
or
push
xchg
std
lea
in
dec
pop
fs
shll
dec
paddb
int3
hlt
mov
jae
stc
jns
lods
leave
inc
and
sahf
fwait
aaa
push
stc
arpl
gs
pushl
sahf
sti
cmp
movd
cmpl
pop
int3
mov
or
lea
fidivs
xor
xchg
jle
pop
or
imul
repz
cmp
ss
fsts
xor
push
mov
sub
push
mov
out
lahf
fadd
or
jbe
sub
retw
fcmovne
fiaddl
nop
adc
cld
cmpb
lahf
inc
sbb
push
je
out
stos
add
xor
and
mov
sub
xor
aam
add
jb
lods
mov
xor
mov
sti
mov
xchg
scas
aam
or
push
sub
pusha
dec
rcl
jbe
inc
movsb
jno
arpl
pop
dec
xor
aad
lods
ret
mov
xchg
imul
mov
out
std
cmp
or
cmp
dec
add
rcll
xchg
jb
lods
mov
lods
fcmovnu
pop
imul
push
xchg
jbe
pop
lret
xor
imul
dec
sub
icebp
mov
dec
aas
aad
cmp
sub
ret
inc
scas
xor
adc
jne
mov
mov
je
fcomip
jb
and
or
push
and
pop
rcll
push
add
xor
jecxz
push
sbbl
out
outsb
mov
lret
pop
sub
sbb
or
jl
insb
enter
sub
mov
js
dec
fcompl
test
mov
or
jl
insb
enter
sub
mov
js
dec
fcompl
test
mov
or
jl
insb
enter
sub
mov
jns
dec
fcompl
test
mov
or
jl
insb
dec
pop
pop
dec
xlat
mov
sbb
pop
je
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
sub
xor
push
adc
bound
clc
push
call
cmp
dec
sarb
push
jae
add
push
mov
push
or
cmp
in
pop
orb
ret
xor
mov
addr16
popf
adc
fcompl
out
push
xchg
push
jmp
negb
jmp
orb
sub
push
lock
sub
pop
mov
pop
pop
xlat
bound
les
ja
mov
ds
test
mov
out
xchg
inc
cmp
mov
test
ja
js
push
fldenv
or
or
outsb
sub
test
in
inc
cld
clc
lea
inc
gs
clc
scas
divl
pop
push
pop
insl
dec
jmp
mov
push
stos
pop
dec
gs
mov
notl
sub
testl
dec
xor
push
in
inc
jmp
xchg
cmp
dec
sarb
push
fs
push
sbb
push
cli
inc
popf
xor
dec
cmpsb
ss
std
jno
ja
addr16
add
daa
test
loopne
jecxz
fwait
adc
push
adc
jp
or
add
repz
rorl
pop
loop
sarb
push
adc
enter
call
xchg
cmp
dec
sarb
push
adc
enter
call
push
mov
cmp
push
pusha
scas
pop
jp
jno
sub
sub
dec
shll
js
sbb
movsl
mov
push
test
sbb
hlt
add
aad
or
xchg
popf
test
mov
jg
lea
jnp
pop
repnz
inc
jo
mov
mov
cld
in
sbb
les
mov
sub
lock
test
or
pop
inc
addb
ret
test
dec
jns
shrl
pop
add
push
xchg
jecxz
lahf
out
lcall
das
andl
roll
js
mov
pop
leave
or
jmp
cmp
mov
mov
mov
jno
dec
out
enter
cltd
bound
outsl
testl
xchg
and
shll
cltd
inc
sub
ja
fldt
cmpsl
pop
cmc
add
xor
jp
inc
push
mov
fst
push
push
jl
movb
fwait
add
dec
mov
lahf
sbb
or
inc
sarb
loope
or
movsl
outsl
gs
cmp
cmpsl
dec
lock
mov
call
cmp
sbb
mov
fwait
int
mov
mov
and
test
push
cmp
cmpsl
xor
movsb
sub
jns
sub
je
test
inc
jae
out
aaa
jb
ret
jo
jnp
sub
adc
mov
movsl
ficompl
stos
cmp
loope
rcr
sub
dec
enter
jmp
fistl
aaa
jbe
and
jecxz
sub
int3
lret
sbb
shll
mov
loopne
sub
out
loop
cmp
inc
fstl
lea
jecxz
cmp
mov
xchg
js
scas
jge
add
jns
je
xchg
and
lea
jp
mov
add
movsl
ljmp
inc
in
pushf
incl
cmpb
out
sbb
out
lcall
test
jecxz
adc
pop
icebp
xchg
jle
dec
inc
ja
andl
and
ljmp
mov
dec
clc
xchg
bound
sub
cltd
aaa
lods
das
xchg
mov
sbb
pop
fdivp
subl
loopne
cmp
adc
ret
out
mov
les
insb
or
mulb
pop
xor
cmpsb
and
push
and
mov
in
adc
pop
cmp
movsb
shrb
repnz
lret
mov
pop
dec
pop
push
mov
fnsave
xchg
mov
xor
inc
adc
or
scas
enter
pop
inc
mov
mov
dec
adc
shl
cmpsb
sub
mov
mov
or
cmp
cmpsl
cmpsb
add
dec
movsl
repz
pop
fldcw
xor
jns
pushf
dec
ss
shl
loop
out
xlat
int
popf
je
fcomps
sbb
push
insl
jnp
sbb
loope
lcall
pop
ret
or
cmp
inc
jge
adc
xchg
sub
adc
or
mov
mov
fdivrl
enter
mov
pop
in
jno
adc
mov
and
push
fnstsw
mov
mov
fwait
dec
pop
imul
inc
xchg
xlat
xchg
adc
and
ss
push
cli
rcll
mov
jnp
xchg
and
rcl
in
or
xchg
iret
adc
fistpl
sbb
push
test
imul
test
push
dec
pop
test
mov
test
cli
sub
lods
add
inc
fdecstp
repz
hlt
push
and
test
lahf
ret
lock
add
jbe
add
jmp
add
dec
dec
cwtl
dec
dec
lds
loope
cmp
jbe
jg
jno
mov
jge
mov
inc
sahf
mov
and
das
outsl
xor
les
sarl
add
jne
cltd
pusha
addr16
rcrl
add
cmpsb
pop
or
jnp
sub
push
lock
imul
xchg
push
clc
rolb
dec
mov
lods
jmp
sarb
into
in
cs
mov
dec
mov
fcomps
or
sti
add
je
in
jp
or
lds
xchg
nop
outsb
dec
mov
sar
fists
jbe
in
and
lret
ljmp
ficoml
sbb
out
aaa
ds
popf
lock
mov
call
or
cwtl
fnstcw
insb
pushf
sub
add
adc
rol
mov
fdivr
pop
inc
call
movsl
adc
cmp
fmulp
or
subb
sti
insl
jecxz
sbb
rep
nop
in
in
jecxz
cmp
lods
out
cmp
lret
pusha
push
xor
cld
cli
rclb
xchg
sbb
lret
nop
xchg
js
cld
and
xor
lret
lock
js
stos
fisttpl
push
inc
xor
leave
into
pop
or
xlat
and
jg
aaa
adc
mov
cmpsl
rolb
mov
inc
inc
popf
mov
mov
push
sbb
outsl
and
add
daa
fldenv
jmp
mov
cmp
int
stos
fmull
cmp
push
adcl
mov
xchg
lock
jne
into
push
sbbl
and
add
xchg
test
insb
int
add
mov
sahf
cwtl
or
out
mov
xchg
push
stos
mov
ret
jns
and
ljmp
jno
cmpsl
std
out
stos
dec
push
inc
or
or
fisttps
inc
stc
adc
andb
adc
pop
es
scas
addr16
fimuls
jg
cmp
or
dec
fidivs
dec
xor
orb
jo
jb
dec
inc
subb
jno
mov
adc
inc
xor
jbe
sub
adc
add
fcompl
lock
push
rcll
adc
aaa
xchg
mov
jo
inc
call
mov
data16
xchg
js
adc
jp
xor
jge
pusha
ret
ds
sub
sub
scas
xor
push
cmpb
fcoms
aad
mov
mov
pop
data16
mov
xorb
cld
push
pop
popl
mov
sub
jl
fs
mov
fs
lods
xchg
js
rclb
inc
mov
les
inc
xor
popa
and
dec
loope
push
add
ljmp
jnp
lods
rclb
ss
mov
inc
inc
cmp
stc
jns
and
test
je
pushf
xchg
mov
dec
icebp
jne
mov
mov
sarb
ja
jne
hlt
xchg
mov
scas
stc
lret
mul
in
inc
addr16
test
inc
syscall
outsl
stos
mov
pop
add
andb
xchg
sbb
add
push
pop
sarl
or
mov
xchg
addr16
inc
jp
mov
cmp
js
stc
nop
adc
aas
sub
sub
loopnew
lret
lds
sbb
inc
into
add
out
mov
ljmp
sahf
inc
loope
xlat
leave
das
cmpb
push
shrl
scas
inc
je
and
clc
push
aam
adc
inc
sbb
jnp
mov
add
pop
dec
sti
jnp
jecxz
sub
dec
mov
lds
rcll
and
cmpl
lods
sub
test
lock
adc
stos
out
imul
cmpsb
inc
xor
insl
imul
sets
cmpsl
mov
dec
xadd
and
cltd
xchg
loopne
rcr
and
add
stos
jmp
rorb
or
sti
pop
xchg
dec
negl
cmp
mov
ljmp
jl
inc
xchg
aas
sbb
jg
push
and
daa
shl
test
dec
fcompl
push
and
jp
pop
dec
pop
ds
imul
push
mov
adc
sub
test
test
jno
dec
cltd
sub
xchg
mov
icebp
xor
mov
in
dec
adc
gs
popa
fcmove
fldcw
mov
rcl
sahf
xchg
mov
fsts
movsb
dec
cmp
adc
shlb
cmp
jmp
fwait
repz
std
out
jg
push
jne
or
sbb
xor
push
xor
movq
imul
mov
and
fwait
outsb
add
sbb
pop
gs
es
add
pop
mov
cmpsb
lods
mov
add
and
adc
dec
ljmp
inc
fwait
and
cmp
out
dec
mov
xchg
les
sub
cmp
dec
add
pop
inc
and
jge
xor
mov
jns
lcall
push
push
cmp
call
repnz
mov
xchg
gs
sub
ret
mov
xchg
push
pop
dec
lock
mov
push
aam
inc
jbe
mov
ficomps
xor
mov
bswap
stos
addl
cmp
fbld
push
js
lret
lea
xor
mov
inc
xchg
lds
add
adc
xchg
sbb
popa
sbbl
popa
pusha
xor
mov
sub
out
xchg
outsb
in
mov
mov
inc
insl
test
test
repnz
into
push
test
or
mov
or
inc
js
inc
xchg
hlt
xor
fcomi
pop
repz
inc
jecxz
aaa
mov
sbb
cmp
mov
mov
fiaddl
push
popf
cmc
push
cwtl
lods
rol
cwtl
mov
adc
sbb
inc
sarb
stos
ds
idivb
inc
pop
inc
jo
and
xchg
lahf
add
mov
add
lods
sti
and
and
repz
es
mov
sub
mov
std
mov
js
pop
add
cli
cltd
mov
dec
neg
jbe
out
fs
mov
outsl
cmpsl
mov
popf
inc
xchg
test
int
jge
pop
popl
jle
push
pop
rcrb
loop
xor
sub
cmc
push
ds
std
add
das
test
mov
push
mov
subb
adc
insl
push
out
jo
rcl
push
outsb
pop
jmp
insb
sahf
cld
jnp
jae
push
dec
sbb
adcb
push
mov
mov
test
push
rol
or
fs
cmp
and
outsl
rcr
stos
jmp
je
cmpsl
lea
insb
cmp
fsubrs
mull
pushl
shlb
mov
cld
mov
xchg
sub
stos
pop
and
mov
pop
add
adc
iret
jl
xchg
and
lods
xor
andb
mov
mov
cmp
cli
mov
or
pusha
adc
lahf
push
fs
cmp
mov
mov
jp
inc
into
ror
xchg
sbbl
mov
mov
leave
sub
jb
inc
hlt
in
cmp
add
inc
outsb
loop
faddl
test
sub
sub
sbb
mov
mov
mov
mov
jmp
mov
loope
dec
pushf
pushf
inc
push
mov
sub
outsb
loop
jbe
pop
ret
cld
jae
or
repz
jmp
mov
ret
es
xlat
cmpsb
inc
jge
xchg
mov
jns
iret
fucom
icebp
call
xor
mov
clc
stos
sbb
loope
lods
negb
add
pop
jmp
xor
sahf
loop
popf
ja
xchg
push
push
stc
dec
xor
nop
push
out
loop
xchg
sub
inc
popf
and
mov
cmpsb
and
loopne
loope
int
call
mov
push
jae
adc
dec
fmull
push
and
popa
lock
in
insl
test
jge
cmpsb
sbbb
aad
repz
xor
iret
ljmp
mov
xor
stc
mov
idiv
sub
out
pop
mov
les
sti
gs
ljmp
outsb
or
inc
add
sbb
jmp
scas
daa
push
out
arpl
scas
xchg
cmp
dec
out
fistl
mov
jbe
cmpsb
add
bound
shlb
add
sbb
dec
sbb
rcrl
fldt
stos
les
subl
xchg
ss
sbb
lea
les
adc
aas
pop
xchg
pop
es
idiv
test
shll
mov
in
inc
dec
subl
pop
adc
andl
mov
push
dec
xor
and
mov
or
mov
mov
pop
mov
stos
jmp
shrl
mov
insl
push
xchg
sahf
cmp
lea
nop
and
inc
rorl
sbb
jecxz
add
and
rcll
xchg
popf
in
movsl
xchg
pop
lahf
cmp
jmp
mov
xlat
adc
ret
jge
andl
js
mov
pop
movsl
dec
das
lea
mov
adc
faddl
cmp
sbb
shr
insl
or
je
int
repnz
sub
mulb
sbb
std
fstpl
dec
adc
daa
shrl
inc
hlt
push
adc
xlat
push
loop
out
mov
ret
sti
repz
mov
cmp
es
mov
aas
mov
dec
sub
mov
dec
cltd
js
xchg
and
out
hlt
dec
xbegin
xchg
dec
mov
addr16
fstpl
inc
sub
sahf
enter
jae
and
fmull
imul
cmp
cwtl
push
and
loopne
js
push
es
mov
xor
sub
aam
sbbl
adc
pop
sub
ljmp
stc
into
std
dec
fsubp
inc
mov
or
call
addl
cmpsb
push
scas
xor
fisttpl
lea
test
call
push
sub
test
imul
push
popa
add
inc
fs
and
gs
inc
add
outsl
in
sbb
clc
stos
pop
jg
int
out
mov
stos
mov
in
mov
mov
push
in
lea
xchg
fildll
insl
imulb
clc
icebp
push
fcoms
mov
lret
lock
inc
mov
jecxz
mov
aad
inc
fs
dec
cs
push
les
mov
inc
sub
clc
lahf
fildll
cli
and
dec
add
pop
dec
dec
fidivs
jbe
mov
mov
mov
les
push
mov
addl
cli
int3
test
lods
cmpsb
cwtl
int3
stos
sbb
cwtl
je
mov
adc
int
cld
cmp
or
dec
lock
test
sub
jb
adc
mov
push
mov
pop
sbb
loope
adc
push
lahf
stos
add
mov
adc
and
in
add
lcall
xor
in
cmp
scas
mov
rcll
xor
imul
sub
sub
sbb
test
fstpl
stos
mov
sti
adc
mov
mov
mov
mov
add
mov
es
pushf
lea
fwait
inc
push
loop
add
pop
stos
stos
xchg
sub
paddb
mov
or
or
jmp
adc
xchg
push
and
mov
xor
cwtl
adc
pop
or
dec
cmpsl
inc
cmpsl
popf
pusha
cwtl
int3
adc
jg
out
loopne
lcall
mov
lock
sub
xchg
stc
sahf
push
lea
lea
add
adc
inc
bound
jb
je
and
movsb
repnz
jmp
sub
sbb
cmpsb
jno
bound
mov
push
in
test
pop
stos
lahf
dec
sbb
daa
shlb
mov
pushf
testl
inc
and
out
push
sub
mov
jg
add
ja
ds
jns
lret
adc
and
xor
mov
push
pop
jecxz
gs
insb
fistpl
in
mov
ljmp
jo
mov
push
jae
pop
mov
nop
jnp
popa
adc
sbb
sbb
pop
in
scas
loope
in
adcl
mov
in
popf
and
adc
dec
mov
sbb
cmp
outsb
in
adc
js
or
fistpll
ret
sub
push
push
outsl
insb
loope
cmp
into
mov
pop
xchg
pusha
sub
push
adc
stc
repnz
add
xchg
lds
mov
or
mov
loope
pop
sbb
mov
popl
mov
xor
dec
pop
inc
sahf
mov
dec
dec
xchg
cltd
xchg
faddl
lods
aaa
in
xchg
adc
lcall
lcallw
shl
aaa
into
adcl
dec
xchg
adc
nop
dec
das
lcall
xlat
pop
add
insb
movsb
mov
inc
mov
pop
adc
add
sti
pop
in
mov
repnz
mov
adc
mov
push
jns
sub
dec
sahf
movsl
xorl
stos
sahf
add
jbe
mov
scas
adc
jo
test
ret
out
or
shlb
pop
push
dec
pop
and
test
dec
dec
lahf
sbb
sub
dec
in
inc
mov
mov
inc
xor
call
jl
cs
fldcw
shl
sbb
or
dec
pop
lods
mov
cmp
flds
mov
fidivl
pop
in
lahf
pop
insl
das
and
inc
test
leave
iret
lea
ljmp
pop
jb
xchg
call
mov
xor
test
outsl
aam
dec
pop
ds
out
dec
xchg
shrb
out
enter
stos
loop
in
pop
jae
nop
test
pop
stc
ds
in
stos
add
mov
cmovge
add
lods
pusha
push
shr
scas
das
cmp
push
sub
in
enter
imul
shl
pop
out
clc
push
fs
insb
dec
cmp
mov
fadd
mov
or
inc
push
inc
out
jle
mov
cmp
inc
and
sub
sub
cmp
stos
fwait
stc
sahf
sti
jno
in
push
cwtl
cld
dec
jne
popf
push
gs
pop
cmp
shl
pusha
push
inc
mov
mov
jo
pop
or
cwtl
xchg
sbb
mov
jecxz
fdivr
push
sub
cmpsb
into
out
mov
xchg
insl
xor
cmp
outsb
mov
filds
int
add
push
sub
pop
xchg
or
bound
bound
icebp
mov
mov
and
cld
add
aam
or
cwtl
push
stos
das
aaa
push
sbb
inc
adc
loop
add
jp
adc
lret
in
adc
jmp
rorl
fldl
xchg
push
mov
mov
or
adc
cmp
imul
call
mov
jmp
aad
hlt
ficoms
leave
xor
aam
int3
sub
and
dec
or
xor
test
arpl
stc
out
mov
ds
fucomp
xor
inc
xchg
lds
repz
mov
cli
jno
mov
and
adc
mov
test
in
pop
mov
cmp
pusha
adc
jno
dec
push
lcall
xor
cli
sbb
cmpsl
dec
mov
inc
mov
mov
mov
xchg
mov
fstl
js
and
xchg
pop
push
lock
loop
xchg
push
repz
cmp
add
sbb
or
mov
test
lods
push
out
mov
test
mov
pop
outsb
xchg
mov
int
icebp
jmp
test
js
mov
fstpt
mov
loop
sti
outsl
mov
aas
ret
xor
jle
decl
sbb
iret
popf
adc
fisubrl
and
cli
sub
mov
fimuls
jb
outsb
incl
add
lret
test
dec
cmpl
cli
cmp
mov
lds
mov
mov
cs
sub
and
mov
or
outsb
sub
dec
icebp
mov
shlb
cmp
lahf
adc
mov
ja
sbb
mov
jae
push
insl
add
sbb
add
xor
or
or
push
mov
aas
ss
cmc
aas
mov
iret
push
out
pushf
pop
inc
xor
adc
pop
push
loop
sub
aam
popl
flds
push
inc
xor
cli
jae
leave
out
mov
xchg
push
inc
adc
or
lods
out
sub
fwait
mov
or
xchg
or
or
std
xor
mulb
ret
push
sub
stos
mov
cmpsl
enter
shrb
sbb
mov
add
jno
mov
ljmp
inc
nop
inc
les
sbb
popf
scas
fs
cld
std
jle
repz
xchg
orl
test
xchg
sbb
pusha
andb
cmp
nop
adc
movsl
pop
jge
ror
mov
jge
push
imul
iret
mov
push
sub
cmp
xor
stos
mov
flds
push
in
aad
subb
pop
loop
sarb
push
adc
enter
call
xchg
cmp
dec
sarb
push
adc
enter
call
repnz
loop
sarb
push
loop
add
push
clc
stos
call
enter
repnz
repnz
sarb
push
mov
push
ljmp
enter
pop
dec
xchg
mov
add
mov
cmpsl
fsts
test
jns
imul
cmp
jmp
push
or
stc
mov
xchg
xchg
leave
xchg
test
jns
imul
cmp
pop
sbb
lret
enter
mov
out
es
or
push
lock
mov
lahf
cwtl
mov
sbb
std
or
push
xchg
lea
add
jbe
fwait
out
hlt
add
pushl
xchg
inc
imulb
dec
sub
popa
and
cmp
mov
pop
pop
xchg
icebp
push
int3
stc
cmp
or
xlat
aam
cld
pop
mov
jns
imul
push
ja
setl
mull
mov
jmp
xchg
xchg
mov
mov
push
sub
lcall
mov
push
mov
ljmp
cmp
ret
xor
in
pop
or
es
and
or
aaa
imul
cmp
sbb
stc
xor
popa
flds
test
test
xor
cmp
pop
or
or
stc
icebp
mov
mov
mov
xchg
iret
cmpsb
sbb
or
cmp
and
push
popa
cmp
pushf
sarb
loopne
cmpsl
stos
cmc
mov
lods
sbb
imul
adc
sbb
inc
stc
mov
cmpsl
fsts
test
jns
imul
cmp
sbb
inc
stc
mov
cmpsl
fsts
test
jns
dec
lock
inc
repnz
or
ja
iret
lock
dec
inc
andb
pop
and
sub
sarl
xchg
sbb
loop
ret
addr16
imul
scas
add
and
popf
hlt
xchg
push
dec
fbld
incl
hlt
sbb
push
mov
pop
int3
test
movsl
cmpsb
adcl
dec
jg
cmp
mov
jne
pop
scas
mov
ret
rcrl
lods
stos
inc
add
mov
add
sbbl
mov
xchg
cmpl
mov
repnz
ror
or
xchg
bswap
cmpb
stos
jbe
mov
lock
and
movsb
add
lret
int3
cmp
jno
and
test
loope
pcmpeqw
in
into
ljmp
jmp
sbb
out
mov
aaa
xchg
mov
push
inc
push
rol
scas
cli
xchg
loopne
es
jb
cmpb
mov
pop
fisubl
fisubrl
dec
xchg
movsl
pop
stos
sahf
pop
aas
ret
test
lock
mov
push
jbe
cwtl
icebp
mov
rolb
add
fisttpll
push
cwtl
loope
outsl
je
out
push
xlat
rcrl
xchg
sbb
repz
pop
test
xchg
incl
jmp
push
mov
push
mov
mov
roll
jge
sbb
adc
dec
cmpsb
jmp
std
dec
gs
pop
jmp
lcall
out
iret
push
addr16
cwtl
les
iret
movsl
std
mov
fimuls
aaa
stos
out
and
mov
xchg
dec
inc
xchg
push
xchg
fdivrl
push
jbe
test
jne
dec
fwait
loopne
dec
push
sbb
add
and
aad
test
mulb
imul
imul
daa
push
lcall
in
mov
ds
adc
pop
pop
js
mov
outsl
js
lds
jns
test
and
sub
mov
cwtl
jmp
xor
dec
sbb
mov
and
inc
fstpl
jecxz
pushf
push
hlt
push
add
movsl
pop
sbb
mov
fisubl
jb
mov
rcrl
fnsave
xchg
mov
ret
int
shrl
ljmp
mov
and
std
jns
cmc
xor
fldt
cld
mov
add
mov
pop
pop
jmp
dec
dec
pcmpeqd
fsts
sub
out
pop
add
xor
push
dec
in
fcomps
jbe
orl
cmpsb
sbb
lock
xchg
mov
jge
std
movsb
jp
and
repnz
call
add
aam
push
mov
loopne
adc
mov
mov
aam
cmpsl
es
inc
jp
ret
lock
add
aam
lcall
je
hlt
stc
sar
xchg
xchg
pop
mov
inc
xor
jo
or
stos
dec
push
fwait
ss
dec
lds
dec
je
xchg
imul
cmc
scas
mov
mov
mov
aas
jge
rcll
mov
or
push
sti
mov
enter
int
outsl
sarb
and
and
in
mov
jge
divl
pop
and
mov
inc
or
orl
push
xchg
outsb
into
push
negl
dec
or
arpl
inc
cmc
jno
adc
popf
and
subl
add
repnz
push
std
xchg
dec
fistpll
stc
lds
in
sub
xchg
pop
add
pusha
fdivl
dec
ret
push
xor
jb
cwtl
stos
iret
push
adc
jg
mov
push
cmp
sub
in
mov
sbb
sub
xlat
pop
js
push
dec
jmp
sbb
jno
sub
mov
adc
or
mov
sahf
popa
pusha
mov
std
lods
jbe
jmp
dec
int
sub
adc
arpl
and
or
shrl
movsl
or
hlt
inc
and
dec
test
lds
leave
aad
pop
aas
xchg
xchg
xor
pop
mov
inc
repz
jle
test
add
mov
pop
jmp
xorb
test
sub
pop
mov
lcall
pop
shl
repz
add
enter
cli
rclw
mov
jae
outsl
cmp
test
inc
arpl
imul
and
xor
rorb
add
fbld
adc
bts
pusha
clc
adc
add
or
std
cmp
push
lea
push
mov
push
cwtl
mov
cs
jge
xchg
pop
jno
xor
cli
int
cs
fistps
scas
and
aaa
cmp
adc
mov
mov
jge
mov
ret
pop
cmp
inc
fidivrl
mov
insl
sbb
mov
rolb
adc
mov
out
and
cmpsl
jmp
mov
add
mov
ret
movsl
jnp
stos
idivb
insb
cmpsl
xor
mov
es
push
push
sub
mov
imul
mov
jg
icebp
mov
fstl
add
sub
sbb
jp
sahf
loopne
and
pusha
mov
popf
xor
std
mov
jb
pop
or
ret
push
test
pop
cltd
mov
xchg
sub
push
xchg
cmp
pop
sbb
jbe
push
cltd
test
dec
repz
xor
inc
lret
or
dec
or
add
cli
sub
mov
inc
cmc
xchg
inc
mov
jle
jb
pop
mov
mov
gs
xor
xor
addr16
stos
add
aam
adc
dec
and
sub
enter
jge
test
sbb
rclb
fs
xchg
jmp
outsl
das
cli
or
dec
sub
jge
adc
or
dec
pop
jl
insb
or
inc
stos
push
nop
mov
fnsave
inc
ss
dec
mov
lods
adc
xchg
call
std
sub
or
enter
fcomi
sbb
lcall
dec
cwtl
loope
mov
or
sahf
addr16
test
cmpl
andb
push
mov
cwtl
xor
insl
adc
jge
or
mov
stos
xchg
mov
push
addr16
inc
adc
pop
inc
cmp
lds
outsl
insb
and
mov
and
xlat
push
mov
push
cmp
fildl
and
jo
hlt
cmp
mov
inc
xchg
repz
cmp
xor
or
je
inc
mov
push
mov
mov
mov
adc
push
mov
cmp
mov
push
jecxz
ds
cmp
add
icebp
mov
in
stos
loopne
stos
mov
jae
lcall
mov
imul
dec
xor
xchg
scas
mov
cmpsb
bnd
out
xchg
rclb
sbb
aad
pushf
jne
fistpll
inc
loope
ljmp
pop
or
mov
cld
pop
addr16
or
repz
ljmp
stc
sub
imul
and
jb
pop
inc
inc
sub
push
xchg
subb
int
imul
mov
ds
cld
sub
push
mov
in
push
add
mov
xor
popf
sbb
daa
push
xchg
lods
push
popf
lahf
dec
pop
or
add
mov
mov
data16
ret
pop
test
dec
sbb
test
icebp
rol
and
stos
shrb
and
mov
xor
add
lods
push
xchg
push
jns
xlat
aaa
ret
or
jp
int3
pop
in
mov
les
aaa
sbb
sub
mov
pop
xlat
and
mov
jo
daa
jno
movsl
out
fcomip
in
ds
cmovg
pop
pushf
ljmp
cmpsb
cmpsb
stos
jnp
movsb
xchg
cmp
cmp
mov
in
pop
adcl
adc
cmc
aam
push
mov
pushf
or
fwait
mov
mov
stc
outsl
pop
jmp
mov
cmpsb
jb
jl
inc
sub
jb
cmp
or
xor
js
add
int3
lods
outsl
pop
jmp
outsb
movsl
sbb
push
push
pop
jnp
push
and
mov
push
adc
aas
pop
inc
xchg
cltd
outsl
jge
sbb
fmull
dec
and
and
sbb
arpl
cmp
and
mov
fbstp
push
shll
flds
xchg
lea
aaa
mov
inc
test
enter
inc
inc
test
sbb
mov
ret
push
mov
dec
jo
pop
mov
mov
push
push
das
xchg
mov
push
mov
jns
add
add
cld
insb
enter
popa
xor
adc
xchg
pop
jns
jnp
mov
fstpt
cwtl
mov
insl
mov
enter
cmc
push
mov
pop
js
pushf
xchg
mov
mov
aad
sub
ss
inc
jo
pop
fldenv
enter
xchg
ds
fcmovu
arpl
mov
lahf
popa
outsl
bnd
push
into
push
xor
adc
fisttpll
mov
mov
enter
in
mov
cmp
add
adc
outsl
test
jl
mov
mov
daa
push
popf
mov
and
std
sub
hlt
dec
repnz
xor
adc
dec
sbb
sahf
movsb
mov
cmpsl
lods
dec
or
mov
test
ficomps
mov
js
xchg
roll
push
xor
aaa
or
rcl
dec
popf
pop
xchg
popf
pop
push
pop
adc
mov
nop
test
dec
and
arpl
pop
xchg
ds
in
insl
ficoms
xchg
ljmp
jb
xor
or
rorb
fidivl
iret
pop
xchg
mov
jp
lea
adc
fldz
xor
sti
or
test
mov
jnp
sbb
inc
fs
jnp
jb
scas
sbb
adc
enter
lods
xchg
imul
roll
mov
pop
push
or
enter
pop
in
sub
pop
or
mov
nop
mov
push
mov
das
inc
jg
mov
xor
test
outsl
sbb
loope
flds
jl
js
aas
xchg
repz
adcl
sbb
shlb
inc
pop
mov
mov
sbb
lods
pop
out
fbstp
mov
dec
xor
xchg
ja
mov
dec
popf
mov
pop
sub
hlt
push
lcall
leave
shl
bound
sbb
mov
aaa
scas
lods
ss
xchg
popa
stc
arpl
movsb
and
dec
pop
sbb
push
jb
cli
out
fiadds
cmp
dec
fdivp
pop
mov
inc
into
adc
in
sub
cmp
pusha
rep
push
dec
cltd
or
mov
xor
iret
adc
mov
cmc
inc
enter
insb
clc
and
jge
leave
push
push
daa
or
and
out
in
in
mov
jle
cs
inc
repnz
push
rorl
push
push
mov
rorl
adc
push
sti
daa
pop
shll
sahf
jb
shr
jge
pop
xchg
cmp
rep
mov
outsb
xchg
lcall
fidivrl
push
pop
inc
shlb
int
lea
out
es
inc
hlt
xor
or
cld
and
ja
inc
pop
pop
test
xchg
sbb
in
mov
fsubl
pop
test
mov
pop
and
and
pop
ds
xchg
push
pushf
fdivrs
daa
stos
sahf
ret
aaa
cltd
icebp
mov
jg
sub
sbb
jo
dec
jne
hlt
push
inc
fcomp
and
jp
stc
mov
arpl
adc
cmp
in
dec
in
xor
pop
cmp
stc
fcmovnb
add
sbb
loop
dec
in
lods
jp
imul
sub
inc
outsb
mov
cs
cmp
xlat
shrb
fsubrs
pop
fnsave
inc
mov
xor
jb
and
rol
sub
es
and
dec
mov
aam
xor
movsl
fbstp
lret
push
xchg
iret
dec
in
xchg
mov
ljmp
dec
xor
xchg
xchg
imul
fidivs
mov
jne
mov
mov
lret
xor
je
in
sbb
loope
rolb
fs
in
dec
test
lret
sarb
inc
jb
push
add
dec
sub
jae
jns
mov
int3
mov
adcb
mov
addr16
outsb
ljmp
stos
mov
int3
lret
ljmp
jge
orl
pop
xlat
adc
add
xorl
pop
lods
lcall
pop
jge
js
repz
jbe
xlat
and
sbb
shrb
out
push
outsb
hlt
and
inc
push
repz
push
movsl
sub
rcl
jle
hlt
xor
loope
and
es
icebp
js
jmp
push
repnz
xchg
out
and
outsb
arpl
sbb
nop
inc
mov
push
push
aaa
aad
fs
xchg
xor
mov
hlt
jnp
dec
pushf
cltd
lods
fcomp
xor
inc
xorl
xor
xor
stc
dec
mov
pop
cltd
jnp
inc
mov
negb
cmp
pop
sbb
int
lods
cwtl
stc
pop
mov
jecxz
lods
xchg
push
and
push
and
aad
and
jmp
movsl
pop
aad
ror
dec
imul
xor
arpl
pop
aam
dec
fistpl
jns
sub
bound
fs
movsl
lods
mov
pop
jg
cmp
push
cmp
xchg
inc
repnz
and
push
push
int3
movntps
add
cmp
fs
aas
pop
ret
int
mov
cmc
out
rcll
arpl
add
fidivl
je
dec
cs
xchg
inc
dec
mov
and
popa
lahf
sub
sub
ds
xchg
out
sub
ljmp
pop
mov
push
jp
pop
cmp
out
pop
xor
adcl
fisubs
mov
in
imul
cmpsb
mov
mov
mov
mov
sti
xor
scas
ffree
xchg
leave
mov
adc
xlat
sbb
lahf
mov
push
daa
fcomi
and
mov
sub
inc
test
push
add
mov
mov
stos
inc
enter
jo
enter
lret
sbb
push
mov
hlt
lds
xchg
cmc
add
sbb
in
scas
divb
mov
cwtl
jle
jmp
add
outsl
int3
mov
addl
scas
and
int
iret
shl
cltd
push
or
push
xchg
lods
jge
dec
and
xor
cmp
xchg
incl
add
mov
out
xchg
xchg
cmp
test
lods
pop
push
addr16
mov
aad
jle
sub
ja
push
hlt
cmpb
push
les
sbb
inc
test
pop
in
xchg
cld
lods
es
xor
daa
xor
jmp
dec
lahf
nop
xor
fucomi
xchg
out
push
and
ret
ljmp
and
mov
les
js
add
aam
gs
adc
and
cld
jae
fistpl
iret
and
pop
sbb
xor
out
adc
fwait
or
pop
jo
into
dec
sarb
sub
jmp
inc
jecxz
inc
je
jmp
xchg
imul
scas
incb
dec
mov
cmp
stc
aaa
xchg
add
jg
jge
imul
cmp
or
mov
cs
sarb
lds
fistps
xor
fstps
shlb
and
in
shll
lds
push
adc
sti
cmpsb
loop
xor
call
push
into
xor
xor
enter
jle
push
push
inc
push
pop
out
dec
sub
mov
outsl
cltd
pop
dec
adc
pop
std
mov
cmp
mov
test
dec
ds
lods
push
jecxz
into
add
adc
and
rorl
test
and
test
and
sbb
insl
pop
push
dec
mov
push
lea
in
scas
scas
daa
pushf
xor
dec
movsl
enter
ja
ror
inc
push
sbb
cmp
pop
mov
inc
aad
ja
jecxz
loopne
test
out
fisubrs
aaa
push
adc
adc
je
cmp
mov
enter
pop
inc
jmp
push
inc
pop
dec
popf
out
mov
out
popf
jae
push
test
scas
leave
cmp
jnp
mov
sahf
dec
mov
mov
jl
pop
out
ljmp
loope
addr16
and
out
mov
lock
hlt
repz
or
or
rorl
xchg
dec
lret
lods
cmp
insb
cmp
ret
ret
stos
xorb
mov
add
jb
mov
sub
fsubl
pop
or
iret
xchg
jnp
inc
and
fisubrl
sbb
and
shll
xchg
subb
movsb
pop
add
mov
pop
mov
mov
lcall
dec
add
jl
dec
rol
mov
push
fistl
lret
jp
into
pop
notl
mov
sub
adc
scas
ds
jle
sub
mov
mov
lcall
cld
aaa
xchg
mov
push
es
mov
out
iret
out
fidivrs
xor
inc
test
test
loop
dec
push
hlt
lret
stc
or
lea
cmpsb
jle
rorl
jle
adc
dec
stos
repz
adc
push
cmpsl
pop
loopne
xor
push
repnz
and
and
pop
les
inc
nop
dec
cmp
push
loope
and
inc
inc
xor
mov
jle
add
cmpl
bound
jge
daa
inc
scas
dec
hlt
inc
gs
add
push
hlt
push
mov
cld
jnp
xor
sub
daa
test
pop
dec
inc
scas
repz
ret
pushf
jge
cmc
shl
adc
jmp
imul
je
jl
ljmp
test
sub
inc
fcoml
adc
and
inc
ret
scas
sbb
sub
lahf
pop
or
je
adc
pop
hlt
cmp
push
push
jmp
push
jbe
xor
inc
dec
test
es
dec
leave
or
ficoms
aad
in
movsb
icebp
lods
out
adc
scas
jbe
stc
mov
lcall
mov
mov
push
inc
ret
pop
cmpsb
test
in
xchg
dec
xchg
clc
sub
icebp
psrlq
ret
sti
out
push
adc
cld
test
and
sub
movsb
out
jmp
loopne
sub
lret
int3
shlb
loopne
pop
and
inc
roll
fimuls
jno
mov
dec
sbb
lret
js
dec
insl
adc
daa
in
xchg
int3
icebp
inc
pop
leave
fsub
notb
lahf
dec
add
ljmp
cmp
pop
bound
add
pop
lret
fimuls
int3
push
pop
gs
xor
dec
scas
enter
xchg
mov
xchg
lock
pop
int3
lret
dec
lret
xorl
adc
jae
test
insb
sbb
sbb
roll
lods
jle
xchg
jge
jmp
or
lret
rorb
xor
xor
inc
or
mov
xor
cwtl
dec
inc
fildl
loopne
iret
or
lock
inc
xlat
or
stos
push
leave
cltd
ljmp
inc
jg
movsb
mov
mov
xchg
inc
xor
shll
jns
cmc
lahf
mov
push
mov
add
sub
cmp
in
fs
lahf
repz
adcb
dec
jae
data16
rorb
ja
bound
test
cs
mov
xor
and
fldenv
imul
outsl
jmp
or
ret
dec
cwtl
xlat
aad
aad
roll
mov
leave
repz
imul
push
and
push
in
and
xor
les
out
and
fstl
in
mov
xor
icebp
and
mov
aas
inc
push
les
push
xchg
leave
cmp
insl
in
fisubrl
shll
rclb
mov
insl
jge
movsb
test
repnz
aad
push
or
addr16
dec
jmp
and
mov
movsb
and
insb
push
test
push
pop
ljmp
jb
shll
sub
and
inc
mov
pop
imul
mov
lahf
xchg
fisubs
test
cmpsb
jo
insb
fsubl
dec
inc
nop
frstor
mov
push
fistps
adc
mov
test
dec
mov
sub
dec
jb
dec
xchg
cli
ficoms
xlat
stos
cmpsb
mov
jne
or
mov
cmp
and
dec
js
xchg
fxch
mov
cli
jo
inc
mov
int3
sub
and
mov
sub
pop
dec
rorb
sub
sarb
subl
pop
cmp
sbb
inc
stc
mov
cmpsl
fsts
test
jns
imul
cmp
sbb
inc
stc
mov
cmpsl
fsts
test
jns
jmp
pop
mov
push
mov
outsl
jmp
xchg
testl
push
cmp
addr16
or
dec
jmp
lock
jg
sbb
sub
cmp
addr16
push
ret
jns
je
aaa
sub
push
pop
out
idivl
xchg
xlat
sbb
ljmp
pop
stos
pop
lcall
xlat
je
dec
idivl
xchg
sbb
push
pop
addr16
stos
pop
loop
mov
jb
jp
push
mov
sub
sbb
jbe
insl
ret
mov
add
sahf
and
aam
fldt
push
out
mov
pop
sub
jle
dec
mov
mov
call
mov
push
aas
jp
mov
out
idivb
cmpsl
xchg
push
cli
sbb
push
fistpl
pop
xchg
sub
xchg
mov
mov
lahf
arpl
into
mov
hlt
cmp
dec
sbb
mulps
xchg
jg
pop
stos
and
pop
sub
ret
cmpb
movsl
sbb
leave
dec
sub
dec
cmpsb
jg
jg
ljmp
int3
push
adc
in
jae
cmpb
pop
jecxz
idivl
mov
mov
inc
ljmp
pop
out
pop
lcall
xlat
and
negl
xor
sbb
pushf
test
push
jmp
sbb
sub
outsb
and
bound
shll
cmp
dec
stc
aaa
inc
subb
aas
mov
fwait
dec
call
dec
adc
pop
lcall
xlat
pop
out
idivl
xchg
xchg
sbb
ljmp
pop
stos
pop
lcall
xlat
pop
out
idivl
xchg
xchg
sbb
cs
jb
xchg
cmpsb
test
add
jo
dec
cmp
fistl
jge
xchg
mov
test
mov
gs
fdivl
dec
cmp
incl
sub
ja
push
lahf
push
or
mov
cmp
cmpsb
cmp
clc
mov
pushf
xchg
push
inc
out
xor
adc
adc
dec
mov
pop
loopne
or
mov
pop
mov
adc
insl
jp
mov
inc
jnp
lock
call
add
cmc
mov
push
mov
mov
push
mov
pop
mov
push
xlat
mov
stos
pop
or
sahf
pushf
enter
push
jl
imul
movsb
mov
js
mov
xor
dec
icebp
jmp
loopne
jmp
mov
lcall
mov
shrb
xchg
sbb
insb
imul
aad
jns
ds
es
push
cmp
pop
movsb
es
jne
pushf
jmp
cmp
mov
inc
mov
clc
cli
pop
cmpsb
cmp
add
push
jge
mov
ret
movsl
shrl
mov
or
cmp
nop
inc
mov
das
cld
mov
subl
rcl
or
inc
inc
mov
cltd
es
pop
pop
cltd
dec
jbe
pop
fistps
xchg
sbb
push
daa
mov
mov
sahf
int3
stc
loop
or
int3
add
jnp
push
pop
int3
test
inc
pop
dec
sub
jb
cmc
sahf
dec
std
and
lock
sahf
rclb
jp
pop
ss
or
addr16
push
jae
ja
adc
sub
mov
xor
pushf
adc
fs
push
xchg
mov
adc
das
cmpsl
mov
jge
cmp
outsl
jg
jno
pusha
mov
jbe
testb
push
scas
imul
idiv
lahf
dec
shll
cs
rcrb
jb
pop
test
mov
cmpsb
and
pop
or
idivb
or
repz
push
subl
lods
stos
jecxz
push
test
inc
jl
xchg
adc
je
repz
scas
jle
xlat
stos
fs
xor
sbb
fists
ret
mov
dec
dec
cmp
repnz
adc
sbb
push
xchg
enter
push
insb
in
out
inc
je
push
pop
xor
xchg
loop
in
scas
aam
xchg
cmp
icebp
jno
sub
pop
cld
sub
iret
mov
test
mov
sarb
mov
sub
jge
into
xchg
es
in
mov
std
std
pop
mov
sub
jb
dec
push
push
jae
inc
gs
or
adc
incl
jns
pop
push
pop
shr
subb
adc
imul
add
or
fs
cmp
das
sub
mov
pop
sub
bound
out
mov
lods
mov
fisttpl
and
inc
and
lods
je
xchg
shlb
rcrb
mov
jnp
fcos
icebp
movsl
push
bound
xor
inc
cltd
xchg
dec
out
sub
pop
mov
sbb
push
cmp
cmp
gs
or
and
mov
cmpsb
push
adc
adc
xchg
mov
jb
movsb
nop
push
pop
out
addr16
inc
outsb
pop
enter
xorb
enter
fisttpll
jge,pn
out
pop
rcrl
pop
mov
xchg
xor
xchg
outsb
and
push
jne
inc
daa
jg
inc
xlat
xor
dec
or
xor
dec
mov
rcl
mov
jmp
and
add
pop
add
stos
loop
jb
dec
add
cmpsl
ficomps
fmuls
or
pop
fists
mov
mov
or
ljmp
push
leave
adc
mov
add
xchg
das
and
aas
testb
cmp
inc
sbb
testb
sub
stc
xchg
jo
mov
dec
movsb
loope
call
outsb
lods
mov
imul
ja
xchg
sub
mov
mov
pop
xor
or
push
xchg
aam
xor
jmp
ret
jecxz
test
movsb
push
sub
push
lock
dec
daa
xchg
clc
bound
sbb
mov
ds
in
add
fisttps
inc
cmp
sbb
push
xchg
add
lock
sarb
imul
ja
mull
adc
scas
pop
adc
out
push
dec
negl
mov
mov
add
adc
push
xchg
mov
dec
inc
xor
mov
ljmp
mov
sub
cmpsb
scas
adc
cmc
iret
jno
cmp
jmp
bound
add
out
push
jno
inc
jmp
mov
in
shlb
jge
pop
mov
cmp
stos
adc
xchg
xchg
jns
mov
mov
adcb
test
cld
cmpsb
shrb
divb
mov
push
cmp
inc
cmp
pop
imul
mov
adc
or
movsl
xchg
mov
sbb
cwtl
pop
pop
add
pop
js
loope
mov
out
pushf
pop
dec
dec
and
mov
hlt
push
in
mov
into
fstpl
sub
std
dec
add
push
out
daa
xchg
imul
mov
dec
pop
stos
or
les
and
sbb
cs
dec
pop
cld
fwait
add
dec
pushf
mov
ja
jg
icebp
push
idiv
pop
lods
sbb
nop
push
outsl
push
xor
sbb
mov
hlt
add
sti
clc
xor
leave
mov
xor
outsl
inc
ljmp
jmp
sub
mov
mov
jmp
ret
jge
mov
ficoml
push
add
adc
sbb
mov
inc
jbe
mov
push
loopne
xor
mov
dec
xchg
jbe
cltd
sub
sub
fistpll
jnp
outsb
nop
orb
call
out
fdivl
out
cmpsl
push
sub
sbb
sub
jo
icebp
test
adc
mov
and
jmp
mov
fwait
cltd
fdivr
mov
push
sbb
mov
sub
pop
loopne
fisubrl
sub
hlt
and
stos
mov
repz
cli
dec
test
into
out
cld
iret
pop
lods
outsb
dec
out
stos
sbbb
andl
xchg
pusha
rolb
pop
push
test
push
data16
out
mov
xorl
imul
pop
adc
cltd
les
mov
mov
mov
loope
fnsetpm(287
out
dec
call
xchg
inc
add
mov
imul
call
xor
stc
cmc
xor
repz
or
xchg
mov
fwait
inc
push
jge
xorl
jle
lret
popa
dec
cli
fadd
das
sbb
jnp
in
cmp
daa
mov
dec
mov
sbb
int
jecxz
push
mov
inc
ror
in
les
push
xor
cmpsl
cmpsb
sbb
ljmp
mov
sub
jo
mov
icebp
or
les
sbb
aaa
movsl
dec
int3
add
dec
fwait
push
adc
sbb
in
inc
sbbb
lahf
push
fdivs
cmp
dec
sbb
mov
push
xchg
loop
push
popf
mov
and
jne
jp
adc
ja
or
sahf
xchg
push
lea
xor
or
lret
movsl
das
out
fdivs
inc
mov
cmpsb
jne
cmp
jne
jge
ja
and
fisubrs
lods
negb
repz
in
jbe
cmp
inc
movl
add
arpl
lret
cmc
pop
ficoms
mov
and
cmp
dec
out
lock
xchg
mov
sub
sti
loopne
xor
jg
les
xchg
in
hlt
pop
mov
out
sbb
testb
or
push
fbld
rorl
shrl
jecxz
arpl
inc
addb
fisubrs
xchg
aaa
jle
sub
rcll
incb
push
jp
ja
sub
idivb
xlat
sbb
das
lods
inc
fdivs
int
shrb
sub
das
popa
gs
inc
inc
xlat
insb
xchg
fistpl
scas
mov
sbb
cltd
xchg
imul
je
and
arpl
jo
xchg
and
fs
adc
into
inc
push
adc
cmp
mov
push
int
pop
cli
dec
leave
pop
outsl
insb
or
jmp
pop
sahf
test
jbe
mov
xlat
shr
xor
lods
mov
lea
mov
test
mov
xor
out
scas
cmpsb
movsb
add
push
clc
sahf
inc
lret
add
aam
xlat
push
add
sbbb
imul
les
les
lahf
mov
gs
js
or
jb
outsl
aam
sub
sbb
mov
lds
mov
push
push
xchg
sub
movsb
pop
fstps
es
out
inc
mov
addr16
sub
adc
jbe
add
gs
pushf
jl
cmpsb
push
jns
jno
in
stc
repnz
sub
sti
mov
addl
aad
ss
sub
insb
xchg
xchg
mov
mov
and
cmp
mov
ret
xor
cmp
int3
sbb
insb
mov
jb
jg
in
jae
push
repnz
fdivrl
xor
inc
adc
shlb
add
imul
shll
or
xor
inc
jo
sahf
mov
out
dec
test
mov
pop
je
fildl
imull
jo
das
rcrl
loopne
lea
cld
ret
sahf
cmp
xor
lret
jae
repnz
loop
xor
insl
lock
arpl
jg
imul
and
cmc
xchg
mov
stos
scas
rclb
dec
dec
jno
jp
leave
bound
dec
mov
lods
outsl
outsb
sbb
out
mov
out
or
jmp
adc
dec
imul
fs
insb
sub
imul
lea
les
push
lods
js
mov
cmp
mov
pop
jae
into
mov
fidivl
mov
mov
push
sbb
add
adc
cltd
cmp
pop
pop
xchg
mov
popa
or
pop
fcoml
in
fcomi
sahf
lock
sbb
xor
cmpsb
mov
in
out
arpl
sub
dec
dec
push
lock
lea
ret
jecxz
sbb
xor
mov
sub
insb
in
push
inc
inc
pusha
pop
icebp
rorl
inc
xor
sbb
adc
jbe
sarl
pop
into
shl
frstor
adc
xchg
shrb
fidivs
daa
jo
jne
fsubl
fwait
mov
xchg
into
or
push
rcl
add
mov
sbb
lahf
aaa
adc
xor
pop
imul
cli
xor
in
es
dec
cld
loop
stc
test
sub
add
cli
and
mov
mov
push
inc
add
sub
push
loopne
es
adc
mov
rcrl
sahf
mov
outsl
sbb
sahf
push
fsubrs
call
push
sbb
fsubl
push
cmp
test
in
rcrb
pushf
jbe
lahf
xor
aam
inc
lcall
mov
sbb
mov
xor
sub
dec
test
or
int3
notb
fisubl
mov
inc
subl
sub
nop
xchg
shlb
or
movsl
jmp
xor
xor
fmull
xlat
sbb
dec
test
jl
inc
sub
cmp
pop
inc
outsl
push
ds
dec
lds
sbb
push
dec
sub
in
xor
mov
data16
pop
shll
stos
lret
in
ss
data16
adc
sbb
sbb
aaa
cvtps2pi
mov
jmp
ret
mov
fsubs
mov
iret
cld
cltd
aaa
fs
sub
cmpsl
sub
cld
sub
aam
push
fcompl
cmp
xlat
mov
and
ss
pop
mov
sub
or
add
mov
test
in
cmpsl
repz
in
pop
pop
mov
sub
aaa
inc
mov
faddl
xchg
or
adc
das
aam
test
stos
xchg
lock
push
aad
movsb
mov
mov
and
inc
ja
xchg
cwtl
aaa
mov
sti
imul
xor
ss
push
mov
or
std
call
xchg
repz
mov
data16
push
push
cwtl
rclb
into
mov
mov
into
pop
push
mov
fisubrl
xchg
jp
push
cmp
add
cmp
sub
je
mov
push
pop
enter
int
mov
pop
inc
mov
xlat
mov
or
jb
jg
xchg
outsb
push
add
lret
fnstsw
and
sbb
filds
stos
xchg
sub
idiv
in
ja
sti
xchg
xchg
inc
jne
fidivrl
cmc
leave
adc
popf
stos
mov
ja
int3
addb
leave
cmpsl
or
mov
ljmp
pop
lods
test
pcmpgtw
in
pop
int3
cmova
xchg
lods
cmc
inc
repz
pushf
inc
sbb
mov
subb
add
inc
nop
aad
add
out
mov
cltd
scas
cld
repz
adc
mov
xlat
fwait
add
addr16
mov
jle
aam
mov
push
pop
or
movl
filds
add
cmp
pop
aad
xor
leave
mov
ss
push
out
popf
adc
push
xchg
insb
push
ror
xor
cs
outsb
sahf
in
jg
mov
fs
sub
or
es
adc
test
dec
shl
ds
fidivrs
popf
jge
jne
pop
imul
add
jbe
and
notl
xor
mov
pop
cs
and
sub
mov
and
cmp
sbb
int
push
stc
sahf
cmp
inc
sub
out
jns
mov
mov
mov
mov
or
aad
sbb
out
sub
inc
pop
lods
pop
mov
in
jmp
or
cld
mov
jge
xorb
rcr
nop
xchg
out
in
mov
rcll
and
xchg
add
aam
or
push
rcrl
int
xchg
dec
sub
sub
nop
in
add
pushf
inc
mov
sti
push
stos
in
sub
movsl
jnp
sub
data16
je
pusha
popa
mov
movsb
sub
push
jne
pop
lcall
scas
in
fistl
cmp
mov
jle
or
mov
jmp
shl
pop
jae
rorl
cwtl
push
xchg
fidivs
cmp
insl
jns
out
push
dec
sarb
sti
jb
fs
movsb
mov
insb
sarb
jecxz
loopne
xlat
out
cmp
and
mov
js
inc
pop
mov
incb
fisubs
sbb
out
pushf
inc
daa
inc
xchg
popa
ret
clc
and
cmp
push
out
scas
or
movsb
repz
ret
daa
cwtl
hlt
gs
ljmp
cs
dec
adc
pop
hlt
out
fistpl
fisttpl
xchg
cmp
and
sub
mov
mov
pop
ds
pop
int3
in
xor
fwait
lea
cmp
scas
lcall
mov
lods
or
fcoms
dec
cvttps2pi
lret
or
sub
mov
in
xchg
sti
mov
mov
cmp
mov
cmp
xor
je
pop
les
lock
shlb
cs
fidivl
xor
insl
insl
into
cli
jnp
xchg
mov
mov
je
sub
iret
xor
pop
mov
adc
and
sub
in
push
ret
iret
ja
enter
mov
cmpsb
mov
or
fstpt
stos
fwait
test
push
and
clc
xchg
sbb
ret
add
pushf
hlt
pop
orl
repz
pop
and
and
sbbb
aad
ret
lds
xchg
repnz
aam
xor
sarl
subb
js
lret
push
notl
jg
xor
push
lds
sarl
add
cltd
cmp
gs
adc
jb
adc
add
ret
jge
faddl
jle
or
sbb
jae
cmp
jmp
push
stos
xchg
xor
mov
hlt
jge
dec
dec
sbb
ljmp
push
sub
mov
mov
cli
mov
aaa
fcom
fsubrl
shrl
or
pushf
xor
sub
mov
jle
iret
cmp
mov
lods
jns
push
movsb
add
test
add
sbb
jmp
cmp
sbb
xchg
and
out
call
call
dec
cmp
out
xchg
dec
cmpsb
adc
dec
mov
inc
pop
or
add
ja
dec
rcrb
movswl
stos
pop
cmpsb
out
cmp
in
xlat
mov
popa
arpl
cmp
mov
xchg
pop
lahf
mov
cmp
outsb
sub
enter
push
mov
xchg
inc
sub
pushf
insb
movsl
into
pop
sbb
push
xchg
shlb
je
mov
shll
out
inc
fcomps
call
aam
pushf
xchg
inc
fcmovnu
sti
rcl
loope
outsl
mov
pop
insb
mov
int3
jo
jne
push
mov
call
inc
pop
nopl
inc
rclb
add
sbb
call
fcomp
inc
std
sbb
or
mov
icebp
mov
jg
scas
jns
out
lods
stos
sbb
mov
adc
mov
pushf
inc
or
dec
fnsave
daa
jl
jp
mov
stos
dec
outsl
in
cmp
sub
add
sahf
add
insb
cmpsl
cld
jns
push
cmovno
ja
inc
inc
push
cmpsb
pop
enter
cmp
aas
icebp
fldl
lock
test
adc
cmp
mov
test
or
push
scas
mov
mov
nop
dec
divb
pop
out
popa
mov
jo
sbb
out
xchg
pushf
jne
add
push
lret
mov
inc
mov
pop
bound
lods
jae
dec
addr16
movsl
popa
mov
nop
cs
cmp
and
test
fstp
rclb
repz
dec
popf
cmp
pop
inc
les
pop
pop
scas
mov
jle
push
outsb
int
call
leave
ret
or
into
add
call
gs
lahf
cld
mov
cmp
inc
lock
push
mov
jle
cmpsl
adc
xchg
push
pop
repnz
mov
cmp
test
and
call
cld
mov
aaa
pop
lret
inc
cmp
push
pop
jo
add
lds
mov
jo
pop
loope
fdivs
int
add
xchg
mov
sarl
pop
repz
and
pop
jne
imulw
dec
leave
jecxz
push
roll
nop
adc
lret
push
mov
mov
insb
test
xchg
orl
int
ja
popf
mov
push
je
enter
jmp
jmp
out
add
mov
xchg
imul
xchg
fisubrl
xchg
ds
mov
das
test
and
dec
mov
mov
sub
cmp
jno
imul
int3
dec
aam
scas
dec
cli
fsubrl
in
inc
outsb
mull
xchg
jno
inc
pop
dec
sub
mov
xchg
dec
and
fcomi
xchg
lods
in
fisubrs
ljmp
add
loope
icebp
loope
xor
popf
pushf
jle
andl
pushf
mov
lock
fmuls
lea
lock
mov
ret
sahf
test
mov
inc
inc
xor
inc
inc
xchg
adc
adc
das
jmp
mov
and
add
es
sbb
adc
bound
es
nop
test
mov
mov
ds
roll
ja
test
fstl
arpl
pop
nop
push
jb
insb
xor
xor
jle
in
sbb
mov
cltd
xchg
mov
stos
into
jle
xor
mov
cltd
cmp
aam
insb
inc
or
mov
inc
push
xor
pop
jmp
inc
fcmovbe
xchg
xor
pop
mov
stc
adc
xchg
hlt
in
fcmovb
cli
xor
push
jmp
in
shll
lea
les
in
lret
inc
daa
dec
pop
insb
stos
addr16
outsl
dec
ljmp
push
movsl
adc
jo
xlat
pop
mov
jecxz
mov
push
ds
or
in
xlat
mov
out
cmpsl
inc
mov
scas
cltd
sbb
xor
cmc
testl
sub
push
mov
js
insl
mov
sub
dec
cmp
dec
cld
adc
push
mov
sub
or
and
pop
insl
add
shlb
sbb
repz
lea
gs
mov
ja
pop
stos
pop
lcall
xlat
pop
out
idivl
xchg
xchg
sbb
ljmp
pop
stos
pop
lcall
xlat
pop
out
idivl
xchg
xchg
sbb
jmp
jbe
pop
scas
pop
lcall
push
out
idivl
xchg
xchg
push
cmpsl
cmp
push
loopw
mov
cmpsl
or
jp
xchg
jge
out
orb
push
xor
add
adc
pop
es
hlt
mov
repz
movsb
roll
adc
jae
arpl
adc
add
mulb
repz
jecxz
rcll
adc
jae
arpl
or
push
mov
mov
les
ret
jp
and
xor
arpl
fmuls
jns
pop
rcl
xchg
js
repz
pop
push
lahf
and
pop
mov
mov
inc
je
or
les
les
div
rclb
jecxz
or
and
pusha
lods
call
insb
push
push
mov
add
push
xorb
in
dec
sub
mov
mov
push
xor
cmp
push
shr
dec
push
test
cmp
inc
inc
add
adcl
sub
xchg
jnp
jnp
test
mov
mov
mov
cmc
leave
lock
aam
out
rcl
imul
adc
jae
arpl
or
mov
lods
jecxz
rcll
fs
inc
pop
bound
dec
ss
imul
sub
notl
or
fs
and
inc
xor
jo
push
shlb
mov
mov
xor
add
jae
arpl
adc
add
hlt
mov
repz
movsb
rcll
adc
jae
arpl
adc
add
hlt
mov
repz
movsb
rcll
jecxz
jne
push
test
test
in
fisubl
popl
pop
ror
jp
push
lea
mov
das
mov
shl
rol
outsb
push
inc
movsl
sbb
imul
cmp
jecxz
xor
or
stos
lret
inc
inc
or
push
inc
push
sub
ja
sar
lcall
into
jg
pop
ss
mov
ret
pushf
mov
or
fisubrl
jle
mov
jl
pop
push
jl
push
mov
out
or
jnp
sbb
push
js
js
xchg
lahf
pop
mov
stc
popf
movsl
or
xchg
inc
mov
or
repnz
lods
xchg
loop
add
pop
mov
int3
test
sbb
sbb
xorb
jnp
mov
mov
addl
push
jbe
stc
aad
mov
shrb
imul
inc
or
std
lret
in
ljmp
jae
sti
add
dec
lock
adc
jmp
push
push
push
aaa
pop
jno
xchg
xchg
rolb
leave
sub
add
jl
add
push
and
push
movsl
sub
inc
rolb
bound
inc
lahf
mov
pop
nop
sbbb
ss
repz
xor
pop
mov
scas
fldenv
frndint
and
pop
mov
push
push
sub
or
adc
jbe
xchg
outsl
dec
add
push
mov
pop
xchg
jo
cmpsb
or
pusha
push
adc
xor
fstps
jmp
cs
fwait
subb
pusha
adc
imul
lods
repz
repz
jb
nop
pop
adc
es
jbe
or
jp
inc
fwait
xchg
leave
scas
fs
lret
xchg
pop
pop
leave
mov
imul
sub
mov
insl
sub
sub
push
lahf
dec
push
push
cli
imul
xchg
hlt
jl
xchg
imul
inc
into
leave
ret
pop
cmc
push
mov
int
aad
out
or
push
out
movsb
sub
push
lret
mov
add
mov
pop
mov
mov
test
push
test
pop
or
fadds
jmp
aad
cmp
es
xor
ljmp
sbb
sub
cmp
adc
pop
push
out
mov
mov
insb
cmpl
lret
movsl
sub
and
rcrl
out
dec
sub
push
std
sbbb
sbb
bound
lods
sub
adc
mov
dec
cmc
repz
sbb
xchg
in
leave
imul
aad
cmp
dec
rcrl
push
push
fbstp
mov
jns
std
xorb
adc
sub
aam
aaa
mov
in
shll
aaa
cmpsb
sub
xchg
push
leave
inc
add
dec
pop
xchg
in
xor
js
in
loope
iret
out
sbb
mov
inc
popf
movsb
icebp
inc
sti
fdivs
push
popa
and
out
jbe
lret
pop
inc
lea
mov
mov
mov
jno
xchg
insl
xor
add
add
dec
jecxz
push
jecxz
cmpsl
js
scas
jmp
xlat
dec
add
pop
cmpsl
fimull
out
sub
dec
add
scas
movsl
dec
rolb
cmp
lock
rolb
fisubl
int
push
or
int3
pop
fwait
or
jo
pop
int3
ret
or
lcall
jae
idivl
shll
scas
adc
sbb
adc
movsl
mov
lea
adc
pusha
mov
icebp
jnp
mov
mov
xchg
lods
push
pushf
inc
cmpsb
sbbl
or
inc
xor
jg
push
or
stc
aas
cmpsl
ds
pop
movsb
xchg
rcl
lods
popf
ss
repnz
lds
fildl
lods
rorb
inc
call
ret
inc
pop
loopne
faddp
cld
daa
xchg
in
inc
ja
and
iret
addr16
or
movb
ja
sti
or
push
adc
xchg
mov
adc
mov
in
cs
mov
inc
pop
ret
inc
lret
cmp
pop
mov
sti
fcompl
add
rcrl
push
fwait
in
call
jnp
pop
pop
mov
out
sub
adc
andl
repnz
add
fldl
mov
fmull
movsb
in
mov
std
fists
mov
mov
stos
push
mov
or
inc
in
add
push
push
shrb
sbb
aaa
sarl
xor
dec
out
aad
repnz
mov
xchg
push
pop
xlat
into
jle
pop
loopne
adc
lahf
mov
and
cwtl
aaa
and
in
push
jo
insb
pop
data16
sar
movsb
jmp
jae
loopne
fdivrl
enter
cli
mov
add
inc
push
adc
sbb
and
sbb
xor
and
pop
addr16
pop
test
push
cmp
sbb
inc
fstpt
add
sub
enter
and
shll
inc
ja
decb
lcall
xor
jne
imull
hlt
jle
add
loope
sbb
test
lcall
aad
adc
and
sub
sub
jnp
popf
rorb
pop
ds
inc
add
into
test
into
stc
mov
stc
lock
stos
xlat
add
sbb
xor
pushf
and
sbb
in
enter
jo
lahf
mov
out
aaa
hlt
icebp
scas
es
push
jo
mov
adc
pop
mov
mov
and
aam
lods
pop
xlat
dec
push
push
push
icebp
inc
les
test
iret
mov
mov
xor
data16
fs
call
pop
inc
arpl
fs
ficoml
add
inc
mov
jne
dec
clc
bound
mov
mov
inc
mov
xchg
jge
dec
jo
adc
lock
lods
out
and
or
sbb
in
or
inc
inc
xchg
punpckhbw
pop
pop
daa
out
mov
insb
xchg
inc
es
sub
mov
loopne
pushf
push
mov
inc
js
push
aam
sbb
sub
mov
popf
int
mov
dec
mov
aam
jno
ds
jno
sbb
sbb
cmp
fwait
daa
cwtl
push
push
dec
std
pop
clc
mov
adc
mov
add
pop
dec
mov
push
out
test
mov
xchg
orl
lds
push
fistl
dec
lret
sbb
test
cmpb
dec
jo
out
icebp
sbb
mov
jb
and
push
or
mov
pop
jg
mov
and
cmp
into
test
cmp
ret
xchg
jecxz
or
mov
mov
push
test
xchg
xor
dec
shlw
dec
jmp
movsl
cmp
push
cmp
add
nop
int3
es
cmc
sub
sbb
mov
pushf
mov
jp
lcall
or
jge
mov
cmp
mov
xchg
fwait
add
fucomip
out
leave
dec
dec
stc
scas
dec
push
xor
cmc
mov
out
test
push
fisubl
inc
inc
call
fildl
cmp
test
jb
popa
pop
stc
movsb
mov
mov
mov
lds
addr16
jb
cmp
mov
adc
mov
call
call
mov
xor
nop
lcall
inc
push
adc
jne
gs
mov
mov
jle
outsb
add
sub
inc
adc
jne
add
inc
rcrb
push
jl
jge
loop
dec
gs
ljmp
jge
mov
test
mov
ljmp
mov
pop
insb
pop
cli
loopne
jo
inc
call
lcall
test
orb
add
and
jge
push
xlat
xor
js
push
les
test
shrl
sbb
jb
lods
rol
out
scas
mov
jp
adc
mov
and
add
out
mov
or
fwait
xor
mov
test
add
pop
stc
sbb
mov
xor
dec
jl
pop
inc
push
mov
movsl
push
jbe
pop
idivb
adcb
lret
inc
xchg
shll
pusha
fbld
stos
inc
mov
jp
or
push
adc
test
xchg
das
and
addr16
xchg
jne
inc
jp
subl
adc
test
call
sbb
push
stos
repnz
xchg
das
xchg
ljmp
sbb
sub
outsb
loope
xchg
xchg
mov
pushf
fmull
insl
pop
clc
xchg
xor
jbe
sub
dec
movsl
jo
imul
add
in
or
leave
cmp
addr16
lds
push
xchg
jle
sbb
cmp
xchg
jl
inc
ds
mov
lret
sub
daa
fidivrl
cmp
faddl
bound
rcl
js
mov
jno
lret
mull
mov
rclb
frstor
or
sbb
ljmp
int
jle
fmuls
lahf
pop
pop
jno
or
ds
test
push
sub
or
dec
cmp
xor
enter
popl
xchg
pusha
xchg
sbb
bswap
jne
je
dec
in
mov
sub
ja
into
pop
ja
sub
ljmp
fstl
and
or
sbbb
shl
mov
sahf
pop
jle
aad
gs
dec
mov
add
mov
mov
jo
in
pop
cs
pushf
jne
fimull
cmpsb
or
inc
fwait
mov
aas
cmp
aas
lds
lret
adc
jecxz
mov
push
call
cmpb
jns
aas
adc
mov
pop
int3
out
push
lds
push
std
lea
ficoms
in
addr16
sub
inc
push
lret
pop
mov
cmp
shrl
push
and
int3
sbb
add
sbb
jns
mov
je
rcrl
ljmp
sbb
push
xchg
push
mov
inc
scas
insl
xchg
popf
scas
lcall
xor
insl
xor
mov
jno
imul
scas
out
data16
or
adc
in
pop
xchg
cmpsb
out
mov
push
pop
mov
fimuls
dec
push
mov
cs
mov
jnp
popa
jbe
loope
fildl
cs
push
cltd
and
push
add
in
and
pushf
inc
sbb
fwait
fs
outsl
mov
mov
in
data16
xor
xchg
aam
ja
lds
cmpsb
sbbl
jge
cmpsb
mov
push
fiadds
cmp
mov
loope
lds
pop
push
arpl
mov
dec
lcall
enter
mov
cs
mov
and
daa
inc
inc
pop
shl
out
outsl
mov
imul
xchg
push
mov
fsub
adc
jle
pop
sti
jbe
pushf
addr16
or
out
mov
mov
adc
stc
mov
ret
xlat
jge
jns
or
js
lret
and
fistps
dec
out
fmulp
popf
lret
and
dec
ret
mov
test
push
inc
sar
sub
xchg
sub
inc
and
negl
push
leave
cmpsb
dec
push
xchg
jge
adc
cmp
lea
sub
push
push
push
or
cmpsb
loopne
mov
xor
test
xor
out
shl
xor
and
mov
add
mov
jnp
push
lds
data16
mov
add
sub
adcb
dec
jae
test
adc
sbb
test
mov
je
adc
and
rolb
dec
aaa
scas
popa
mov
mov
fwait
add
xchg
lods
xor
xchg
mov
hlt
mov
cmpsb
lahf
push
add
mov
int3
and
outsl
cmpsl
pop
push
or
adc
xchg
dec
subb
xchg
jne
loopne
pusha
inc
mov
cmc
xchg
mov
test
xor
dec
inc
mov
xor
xchg
out
pop
xchg
mov
and
inc
mov
sahf
lods
test
or
sbb
push
aam
in
imul
push
mov
mov
dec
popa
mov
mov
or
mov
mov
push
insl
iret
gs
cmp
jmp
pop
mov
inc
jno
mov
shll
mov
mov
jmp
rolb
lret
cmp
cmp
lds
xor
popf
das
cmp
shl
adc
pop
push
sub
insl
cld
or
and
test
mull
les
or
push
loop,pn
sub
xorb
push
repz
lods
push
fsubl
loop
or
xchg
pop
inc
inc
push
fs
test
add
and
into
pop
cli
ljmp
inc
inc
mov
jo
stos
into
pop
iret
mov
je,pt
pop
mov
or
xchg
ja
mov
test
jae
pop
adc
xor
fwait
int3
and
ss
push
dec
jb
inc
loop
jne
mov
addr16
pop
xchg
sahf
inc
outsl
out
pusha
or
in
popf
jge
mov
jmp
push
adc
adc
scas
pop
ss
aas
mov
jb
in
xor
sbb
pushf
adc
cmovle
push
pushf
lock
fiadds
cltd
push
add
imul
dec
repz
add
xchg
mov
bnd
sub
jns
sub
fildll
repz
repnz
pop
js
pop
add
pop
xchg
sub
mov
jno
sub
data16
jge
iret
jo
dec
jp
mov
stc
outsb
inc
lods
sub
bound
sbb
mov
outsl
cmp
xchg
test
in
ds
inc
pushf
pop
pop
cmp
arpl
repnz
adc
loopne
xor
test
jo
pop
in
arpl
shlb
stos
mov
out
inc
xchg
sub
in
or
rorl
inc
jp
jbe
xor
subb
cmpb
mov
les
loopne
jge
sarl
cltd
and
sbb
xor
inc
sub
rorb
pop
sub
push
in
nop
outsl
push
das
or
mov
fsub
sub
sub
pop
fidivrl
push
mov
push
pushf
sbb
test
sub
add
fbld
push
pop
jae
xchg
jae
cmp
cmp
sar
shlb
and
dec
daa
cli
push
std
xchg
sub
iret
cltd
mov
mov
fldcw
sti
and
mov
and
andl
xor
xchg
or
jle
jnp
fldcw
jne
addr16
adc
push
mov
test
leave
les
repnz
shlb
xchg
dec
adc
aad
xor
mov
dec
enter
ljmp
jp
fiadds
out
loope
cltd
pop
or
les
mov
in
push
sub
pop
sub
out
lcall
hlt
push
adc
xor
mov
ror
pop
mov
aaa
sub
repnz
sar
mov
repz
pop
fstpt
mov
jle
inc
and
dec
push
iret
lret
je
insb
cmp
inc
sti
test
inc
hlt
sub
sub
or
and
lea
cmpsb
push
jg
out
and
mov
mov
js
jno
mov
jle
push
or
lds
fsubrl
add
fstps
test
jge
push
adc
xlat
shlb
scas
add
popf
out
lods
aam
mov
int3
je
shl
adc
pop
xor
in
sbb
test
sbb
cmp
jl
mov
pop
in
push
mov
adc
push
add
mov
mov
jae
jle
shr
mov
std
orl
lret
test
push
orl
or
cltd
aaa
pop
int3
sbb
fiadds
fsub
cwtl
xor
mov
sbb
xor
jmp
fcom
sbb
xor
imul
push
imul
push
cli
std
cmp
clc
aad
pop
test
jno
imul
xor
out
cmpsl
mov
movsl
loop
scas
push
and
or
testl
or
sub
xor
sub
scas
jne
sbb
pop
jp
and
cltd
xchg
inc
xlat
sbbb
stos
fmull
adc
mov
mov
imul
jnp
push
out
mov
cld
jmp
shll
lahf
sbb
sti
cmp
in
xor
mov
loope
je
sahf
jns
xor
pop
dec
in
adc
std
stos
jl
test
test
mov
xor
jnp
loope
fmulp
mov
sbb
and
push
mov
pop
sbb
sbb
adcl
xchg
adc
gs
pop
in
sub
popa
loope
jmp
jge
aas
push
pop
iret
push
dec
ffree
rolb
xchg
test
ret
sbb
outsl
dec
ret
add
xor
scas
sbb
push
jno
popa
push
test
xchg
aad
stos
push
xchg
add
divl
ljmp
or
leave
inc
int
or
sub
mov
push
and
lahf
pop
call
imul
bound
inc
pop
inc
pop
mov
dec
incl
aad
pop
test
test
xchg
inc
stos
cmp
add
mov
or
push
pop
xchg
sub
ds
pop
ljmp
mov
ret
jmp
add
jno
adc
jecxz
insb
mov
sti
sbb
sarb
mov
push
test
mov
xor
mov
les
push
add
xchg
addl
sub
bnd
mov
mov
jl
mov
mov
or
imul
mov
fisubl
pop
dec
out
push
jno
jmp
data16
nop
out
stos
dec
subb
insb
les
test
push
scas
shll
pusha
cwtl
imulb
and
pop
add
test
sbbb
xchg
inc
subb
xor
mov
and
push
dec
notl
mov
pop
lcall
fcomps
cltd
push
cli
das
jg
fidivs
sub
sahf
mov
mov
aam
inc
movsb
stc
cli
fwait
add
mov
add
mov
cltd
pop
push
sub
or
mov
aad
fwait
pop
xchg
sti
jbe
cmc
mov
out
int3
push
pop
jae,pt
in
and
addl
sti
cltd
jnp
cvttps2pi
lret
pop
jae
adc
dec
aaa
pop
sbb
pop
mov
inc
aaa
push
jns
xlat
das
std
mov
out
push
dec
mov
stos
icebp
or
mov
les
shrl
mov
mov
xchg
loope
sub
clc
mov
insb
jb
jne
es
pushf
or
sbb
mov
dec
popa
inc
or
inc
sbb
das
pushf
adc
movsl
stc
imul
dec
mov
xor
gs
xchg
mov
in
aaa
lret
and
jge
scas
lods
mov
ficomps
jne
mov
or
inc
mov
imul
add
dec
push
push
inc
adc
jge
add
js
pop
mov
leave
cmpsb
inc
repz
mov
pop
lret
js
mov
or
stc
adc
ss
sbb
scas
scas
and
mov
and
xor
inc
xchg
adc
std
or
mov
push
mov
js
lret
xor
mov
std
mov
scas
jns
lcall
outsb
mov
fcmovu
jbe
in
divl
and
inc
stc
mov
push
test
ficoms
xor
shrl
sub
pop
imul
dec
hlt
jle,pn
ss
sub
sbb
pop
insb
sbb
xchg
cmp
push
or
outsl
lock
fisttpl
xchg
jge
push
lods
ss
iret
fs
int
repnz
lret
jno
mov
add
std
ja
dec
testb
and
ret
imul
hlt
ljmp
lcall
jg
mov
xchg
out
shl
scas
dec
arpl
adc
shlb
lea
push
push
stc
inc
in
das
dec
jg
das
int3
inc
dec
arpl
je
arpl
dec
dec
mov
fildll
inc
jbe
jge
cwtl
aad
xchg
les
mov
in
push
jae
pop
add
xor
push
push
dec
and
mov
ljmp
sbb
jmp
int3
adc
hlt
mov
mov
nop
test
sub
insl
and
lahf
xchg
adc
mov
pop
gs
pusha
inc
std
dec
popf
pop
aad
mov
jae
inc
xor
push
mov
xchg
mov
dec
xchg
add
dec
fsubrs
add
call
inc
mov
gs
pop
fcmovne
subb
xor
outsl
mov
mov
lods
cmpsl
test
fildl
dec
mov
call
adc
in
pop
mov
xchg
add
jbe
pop
inc
or
cmp
nop
push
das
test
test
xor
add
arpl
adc
add
hlt
mov
repz
movsb
rcll
adc
jae
arpl
adc
add
hlt
mov
repz
movsb
rcll
adc
jae
arpl
adc
add
hlt
mov
jecxz
rcll
and
add
arpl
adc
add
hlt
mov
mov
cmp
pop
sub
cmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
xchg
xchg
pop
pop
rcrb
and
xor
add
adc
arpl
clc
push
inc
push
push
mov
xchg
out
shlb
arpl
adc
bound
push
push
mov
lahf
xchg
loop
repnz
ret
int
daa
xor
jle
bound
sub
add
cmp
into
loop
lock
loope
mov
add
outsb
lahf
out
adc
cmpsl
aas
cmp
jecxz
std
add
cmp
leave
pop
push
lahf
call
dec
mov
scas
daa
cmp
enter
fmull
cmpsl
mov
daa
bound
push
insl
in
call
roll
gs
mov
mov
out
out
mov
push
xor
hlt
leave
add
cli
lcall
pop
inc
pop
and
sarl
jecxz
daa
cli
add
sarb
push
call
scas
xor
addr16
adc
rcrb
mov
or
sbb
cmp
adc
fisttpll
pop
ja
lahf
call
inc
inc
push
push
std
mov
cmpsl
sbbb
test
daa
xor
add
adc
bound
outsl
inc
pop
push
push
cmpsl
test
loop
repnz
stos
mov
dec
dec
xorb
add
push
add
jne
sub
cmp
into
icebp
fdivp
hlt
xchg
xchg
mov
jo
pop
push
jp
ja
sub
add
and
aam
pushf
mov
jecxz
shlb
rcl
and
xor
add
adc
bound
ja
inc
push
push
mov
xchg
test
daa
xor
add
adc
bound
ja
inc
push
push
mov
add
xchg
xchg
insb
stc
imul
pop
dec
inc
arpl
testb
cwtl
addr16
je
test
adc
je
inc
mov
xor
add
xor
sub
push
shrl
and
jecxz
cwtl
cmpsb
sbb
scas
and
pop
adc
cmpsl
inc
sbb
fidivrs
icebp
loope
nop
stc
xchg
out
in
ror
jae
cvtps2pi
fcmovnbe
das
inc
call
ljmp
cmp
fwait
adc
inc
mov
loop
add
repnz
mov
iret
outsb
xor
loop
lods
xor
sbb
add
mov
or
jg
add
mov
cli
cmp
cltd
adc
jecxz
fmul
lods
inc
into
fists
rep
mov
shll
sbb
ret
addr16
jnp
xchg
jno
iret
pop
sub
or
icebp
ret
xor
mov
pop
cmp
and
xor
inc
mov
rol
push
mov
and
mov
sahf
stos
dec
xchg
cmp
mov
mov
mov
inc
fcmovu
fwait
xchg
mov
adc
lods
inc
movsb
iret
repz
inc
mov
movsb
movsb
fistl
outsb
add
push
mov
imul
sbb
ficoml
movsb
adc
lods
imul
mov
lods
pop
sub
pop
mov
push
cwtl
jle
dec
xchg
shlb
jbe
shr
mov
mov
icebp
mov
int3
mov
add
ret
add
adc
xor
jne
cltd
jecxz
inc
loop
test
adc
sbb
icebp
incl
cli
cmpsb
ja
lods
push
xchg
pop
push
add
stos
aas
push
pop
push
ss
sbb
les
inc
xor
cmp
mov
adc
xchg
sub
hlt
jmp
into
outsb
int3
xchg
xchg
cmp
mov
pop
cmp
jmp
mov
add
es
or
scas
mov
icebp
in
ret
push
popa
mov
push
imul
mov
fsubrl
xor
pusha
xor
xchg
inc
mov
mov
adc
xchg
or
inc
jbe
lahf
xchg
dec
inc
addr16
aad
fwait
test
fldt
add
adc
in
lock
hlt
sbb
push
scas
cmove
add
and
push
imul
sbb
xchg
xor
in
push
lods
pop
rcrb
iret
mov
je
xor
jno
xor
adc
ss
mov
test
pop
xchg
out
pushl
inc
fildl
das
mov
cmp
movsb
stc
mov
push
outsl
sti
jnp
repz
or
addr16
mov
jle
lds
icebp
xor
xor
cmpb
mov
jb
sarb
shll
jmp
sbb
cmp
lcall
pop
aaa
sub
dec
insl
inc
imul
aad
mov
ja
aas
add
sbb
add
cli
shl
iret
dec
and
pop
clc
and
fisubs
call
rolb
inc
icebp
and
adc
lahf
mov
sbb
push
jnp
in
push
jne
cmp
pop
push
inc
ret
and
mov
inc
mov
ja
or
sub
rorl
dec
sbb
mov
push
push
push
pushf
push
xor
lret
jbe
mov
jecxz
int3
xchg
pop
or
cmp
xor
sti
xchg
add
js
mov
fs
xchg
mov
or
push
jp
mov
movsl
outsl
or
stos
adc
loopne
add
in
and
test
and
mov
dec
adc
ja
xor
dec
loop
inc
and
js
dec
pop
outsb
test
sbb
je
push
ss
aaa
pop
test
dec
jp
sub
jnp
call
loopne
arpl
sarb
ret
jecxz
fldt
jno
lahf
arpl
push
pop
mov
popf
sti
and
and
sub
mov
loope
mov
fs
rcr
xchg
out
fists
mov
mov
insb
dec
adc
add
rcll
mov
es
rcrl
cmp
jne
or
xor
sub
and
fwait
loopne
or
cmp
inc
or
clc
jmp
mov
pop
mov
inc
gs
and
dec
add
cmp
sbb
jne
pop
adc
sub
shll
dec
sub
dec
lods
orb
daa
es
xchg
ds
push
out
pushf
ret
adc
icebp
inc
imul
lods
loope
or
fs
flds
push
daa
pop
xor
xchg
or
jp
test
fucompp
jg
and
jmp
cwtl
sbb
inc
sub
test
adcb
out
out
push
rclb
ret
insb
push
inc
push
scas
out
inc
sbb
mov
aaa
popf
xor
movhps
xlat
cltd
adc
ret
pop
sbb
jg
scas
mov
xchg
cmpsb
fwait
xchg
sub
nop
sbb
outsb
or
add
jmp
dec
lret
mov
mull
cmp
xchg
inc
cmp
add
mov
das
inc
pop
xchg
sub
das
aad
push
dec
out
fimuls
and
sbb
in
mov
jns
cmpsb
cwtl
inc
cwtl
ret
push
hlt
and
xor
mov
frstor
in
lea
pop
xchg
mov
mov
leave
lods
push
shll
add
jo
xlat
push
add
jmp
jbe
and
data16
sarb
sub
fisubl
stc
add
and
les
jae
hlt
push
inc
leave
addl
lcall
jmp
push
insb
mov
jae
xchg
adc
sbb
test
push
sbb
pop
push
mov
xchg
fildl
xchg
sbb
xor
push
call
aaa
aas
jnp
fildll
lock
out
mov
sbb
inc
jg
out
mov
adc
jmp
inc
outsl
pop
jne
test
and
inc
shl
loopne
dec
sbb
lds
les
fisubrs
or
imul
ljmp
add
icebp
sub
xchg
lcall
mov
sahf
cld
mov
bound
das
mov
lahf
in
jle
insb
dec
je
xor
sub
sub
sub
or
jns,pn
fs
inc
adc
test
xor
cmp
cs
jle
inc
aad
gs
test
or
pusha
lock
or
out
add
rcrb
gs
cltd
and
mov
mov
or
bnd
push
inc
cmp
pop
insl
or
outsl
push
repz
adc
das
inc
cmpsb
mov
ja
sub
lcall
xchg
mov
push
mov
rcrb
lcall
mov
adc
enter
mov
lods
in
push
xchg
fiadds
push
int
aam
pop
mov
add
aad
jns
stc
xchg
cmc
enter
jns
cltd
sub
pop
cmpsl
int3
sahf
or
xchg
or
sub
inc
notl
ret
pop
and
xor
adc
mov
and
and
insl
add
mov
pop
dec
adc
dec
or
orl
out
xchg
xchg
movsb
mov
xor
sbb
mov
sbb
in
rclb
mov
fsubrp
pop
out
mov
cwtl
repz
sbb
out
mov
inc
sbb
jecxz
pop
mov
xchg
inc
sbbb
adc
roll
fsubrl
inc
mov
test
ret
aam
or
pop
pop
movsl
pop
sbb
mov
xor
aas
pop
data16
mov
cmpsb
sbb
ret
int
out
leave
aam
pusha
mov
shll
fcompl
xor
push
pop
xor
bound
sbb
xor
jnp
jp
mov
popl
sub
shrb
fmull
or
sti
dec
and
inc
out
xchg
ja
popa
in
sarl
imul
cmp
hlt
je
inc
pusha
jge
inc
cs
bound
adc
cld
stos
inc
das
xor
jns
mov
or
movsl
jne
and
jecxz
aam
scas
cmpl
or
or
mov
mov
sbb
dec
addr16
push
dec
scas
add
test
pop
dec
jo
insl
fstps
inc
cs
pop
out
push
in
roll
dec
lock
aam
arpl
lret
mov
je
mov
add
sar
push
clc
out
dec
loope
sbb
in
repz
mov
js
pop
test
das
rolb
dec
or
mov
cmp
fstpt
xadd
adc
jmp
xchg
imul
push
or
jecxz
into
jbe
popa
push
cmp
lcall
stos
push
and
pop
insl
xorl
jb
pop
notb
stos
sarl
jecxz
sti
jl
sub
movsl
and
enter
mov
jle
loop
scas
xor
movsl
push
xlat
xor
rcrl
xchg
ret
adc
pushf
sbb
cmp
call
rcr
daa
jo
insl
mov
cli
xlat
out
fidivs
inc
or
sub
mov
and
push
cmp
push
sbb
aad
or
ja
xchg
repz
std
sar
outsl
mov
adc
inc
out
sbb
mov
shrb
inc
inc
cmp
pop
jmp
mov
lock
push
loopne
outsl
jne
aas
xchg
sbb
dec
icebp
mov
sbb
repnz
in
inc
pusha
mov
cmp
jmp
mov
jb
into
mov
sub
push
inc
push
mov
in
ret
or
clc
dec
add
out
and
lret
mov
in
jns
cli
movsb
xchg
dec
mov
ja,pn
sbb
mov
or
sti
xor
push
adc
test
into
js
xchg
mov
lods
jecxz
movsl
or
dec
xchg
jecxz
in
inc
adc
out
int3
lock
maskmovq
notl
jns
negl
cld
ret
mov
in
je
lret
adc
mov
fnstsw
lods
jae
pavgb
lods
jge
ret
or
hlt
cmp
repnz
enter
dec
roll
test
ficoms
fisttpll
leave
shr
push
jle
mov
and
push
xchg
jl
iret
imul
adc
cmpsb
in
xchg
scas
std
cmp
xchg
imul
in
imul
movsb
loop
aaa
shll
shr
xchg
mov
push
inc
loop
test
mov
sbb
xor
pop
aad
addl
bound
movsb
in
pop
push
or
or
fisttpl
test
pop
sbb
push
outsb
insl
loop
ret
mov
cmc
pop
inc
dec
or
sbb
lods
mov
xchg
mov
sbb
jb
mov
pusha
dec
push
aas
mov
aaa
add
mov
loope
scas
das
inc
jmp
rcrb
fcompl
sbb
add
cmp
mov
pop
stc
mov
std
adc
adc
and
sub
jno
add
jg
clc
sahf
test
sbb
jge
in
adc
cli
xor
xor
fnsave
add
dec
call
daa
frstor
cmpsl
shll
mov
lea
popf
adc
mov
dec
sub
insb
mov
jne
push
sbb
add
aas
adc
ficomps
adc
cmp
sbb
pop
insb
push
pop
add
std
fs
inc
ficompl
iret
lds
lahf
jle
inc
es
dec
jg
shll
shl
inc
sbb
clc
test
push
call
scas
out
mov
sbbb
or
pop
mov
adc
outsb
addr16
xchg
push
and
pop
inc
push
mov
enter
or
jnp
mov
xor
lahf
or
sar
enter
ret
leave
lock
jl
fisttpl
mov
pop
jno
enter
mov
xor
pop
mov
sub
div
dec
jno
push
push
lods
mov
cmp
fstl
in
out
daa
mov
fsubrs
movsb
in
mov
data16
push
xor
or
adc
jecxz
add
adc
shrl
inc
xlat
int3
mov
or
fdivl
or
ljmp
xchg
dec
lods
in
fisttpl
ss
loope
scas
orb
xor
in
add
pop
adc
fiaddl
pop
xor
jmp
xorl
ficoml
sub
dec
int3
mov
int
mov
pop
out
pusha
loop
movsl
cmpsl
lcall
push
scas
adc
mov
mov
sti
sub
sub
mov
std
pop
xor
aaa
mov
jbe
push
test
xorl
sub
mov
and
sbb
insl
dec
incl
ljmp
stos
icebp
fwait
cld
movsb
cli
pop
rcrb
mov
mov
cld
jno
mov
jmp
jmp
popa
pop
xchg
mov
popa
popa
das
mov
ret
add
jp
shrb
add
dec
jle
push
or
dec
adc
pop
adc
lret
sbb
sahf
and
adc
data16
mov
xchg
lret
mov
je
mov
enter
imul
xor
push
insb
imul
imul
mov
insl
xchg
es
dec
push
arpl
xor
scas
lret
popa
adc
adc
jmp
iret
xchg
aad
adc
mov
fiaddl
inc
jg
or
int
loopne
fwait
cmp
in
das
push
popf
jecxz
fists
pop
aas
aas
mov
sub
mov
sbb
mov
sub
adc
xchg
test
ror
adc
jecxz
or
and
dec
jns
adc
mov
repz
mov
pop
shll
mov
leave
sbb
sbb
outsb
pop
hlt
movsl
mov
call
mov
dec
push
adc
mov
inc
push
int3
scas
repnz
push
inc
ljmp
in
mov
add
cmp
imul
repnz
jl
fldcw
mov
rorb
pop
hlt
repnz
loop
pop
out
jl
shrl
sbb
xchg
ds
push
mov
mov
add
jnp
mov
fstp
loope
push
mov
adc
es
roll
fwait
scas
inc
ret
inc
adc
dec
push
cwtl
int
adc
flds
mov
jb
out
xor
and
fisttps
xchg
jbe
xchg
orl
test
xchg
popa
pop
sbb
mov
cltd
dec
fbstp
ror
xor
jge
jmp
loopne
push
pushf
daa
orl
out
cmp
nop
and
nop
loopne
inc
adc
loope
lret
push
inc
push
and
movsl
adc
movsb
jns
xor
bound
mov
cmpb
xchg
rcrb
jg
push
shr
cmc
mov
adcb
add
lea
das
out
sbb
fmuls
mov
xlat
das
mov
sbb
xchg
mov
ret
imul
cmp
in
cmp
mov
push
jge
mov
ror
frstor
xlat
push
adc
pop
pop
out
ljmp
sbb
xchg
adc
fcmovnb
scas
jo
lock
cmpsl
call
xor
mov
and
cmc
cmc
test
in
xor
inc
out
sbb
push
mov
cmp
jp
movl
fisttps
mov
cmp
xor
sti
shll
lods
pop
jg
jecxz
adc
adc
cmp
jg
xor
jmp
cmovne
dec
sub
scas
mov
fwait
sub
out
dec
mov
stos
fsts
lcall
jmp
mov
stos
adc
mov
and
scas
icebp
test
stc
mov
lcall
testb
data16
push
in
adc
cmp
push
decb
data16
test
jnp
ret
pop
or
xchg
mov
sti
fwait
or
mov
jp
mov
pop
orb
jl
aas
push
popf
jmp
fdivrs
mov
jne
dec
mov
pop
arpl
push
loopne
insl
adc
addl
xor
adc
loope
add
cltd
mov
mov
and
xchg
jbe
cmc
les
stc
popa
loop
leave
jl
aam
inc
and
pop
xor
mov
icebp
fildll
std
ja
add
arpl
xlat
bound
mov
leave
mov
mov
xchg
add
imul
les
push
sbb
dec
adc
and
imul
lea
outsl
dec
pop
xchg
hlt
inc
inc
insl
std
pop
lea
xchg
jae
sub
xor
cmp
push
cs
adc
mov
sub
rcrb
mov
xchg
popa
mov
push
push
sarl
das
testl
or
shlb
fimull
mov
out
stos
inc
pop
cmpsb
push
mov
les
inc
jno
pop
push
xchg
mov
lret
pop
xor
jmp
aam
or
sbb
stos
jne
sysexit
xchg
ds
clc
and
push
faddl
pop
mov
or
out
dec
stc
test
add
ljmp
mov
jns
arpl
bound
dec
cmp
pop
outsl
jno
xchg
push
mov
outsl
xor
and
scas
xchg
xlat
gs
icebp
jo
inc
sti
and
push
aad
push
mov
shlb
test
popa
add
lock
insl
bndstx
lcall
jp
out
xor
jnp
shll
lahf
stos
notb
or
fcoml
push
stos
mov
lret
testl
mov
inc
fldt
or
hlt
cmpl
cs
pop
pop
pop
xor
aam
or
repnz
inc
scas
and
push
arpl
push
jae
jp
outsb
jne
mov
test
fwait
jae
cld
push
outsl
rorl
lahf
or
and
movsb
mov
mov
sub
bound
lret
div
push
inc
pushf
mov
sbb
sarb
pop
xchg
push
fiaddl
mov
js
data16
pop
pop
stc
inc
pop
adc
push
mov
outsl
call
mov
movsb
mov
test
mov
push
nop
cmp
mov
sbb
loopne
sbb
xchg
inc
xchg
adc
ds
mov
push
xchg
int3
mov
mov
je
push
push
jae
sub
mov
sub
aas
jmp
out
sbb
aas
ljmp
push
das
mov
mov
mov
inc
push
xor
lret
pusha
jmp
and
stos
pop
xchg
dec
xchg
fwait
or
fisubs
stos
cmp
stos
mov
and
sub
aam
jne
inc
sar
fisubs
std
or
sub
clc
mov
push
jmp
pop
mov
aad
or
pop
outsb
rcrl
inc
ds
aaa
push
and
sub
out
bound
fimuls
jno
mov
mov
stos
push
ret
pop
add
mov
arpl
mov
jo
jnp
sub
loopne
roll
aad
jnp
jae
iret
adc
push
scas
ja
lods
xor
popa
je
xchg
mov
mov
ss
xor
inc
outsb
pushf
sahf
scas
dec
adc
push
xor
inc
in
mov
sbb
or
sbb
lods
addr16
test
idivb
push
je
call
adc
mov
lods
add
test
pop
fnstcw
dec
mov
pop
imul
mov
cmp
dec
scas
in
stc
cmp
stc
adc
mov
mov
dec
fsubp
xchg
popa
dec
sub
adc
cmp
push
cmc
push
mov
cmp
push
mov
mov
je
popa
mov
sbb
lods
out
and
push
adc
adc
es
mov
add
in
mov
fiadds
and
sbb
je
cmp
sub
dec
mov
xor
add
ljmp
lret
or
push
std
cmp
and
cmp
pop
sahf
or
stos
sar
inc
popa
push
sub
push
fadds
and
xlat
mov
mov
repz
dec
and
push
adc
mov
leave
aas
jmp
pop
test
lds
in
mov
cltd
cli
ret
xchg
jmp
std
js
dec
adc
mov
sub
dec
pop
clc
popf
sar
xchg
cltd
and
push
add
add
ljmp
in
sbb
xor
mov
mov
adc
push
imul
jns
mov
aaa
pusha
pop
push
popf
movsl
fsub
inc
mov
mov
divl
and
leave
dec
cmc
mov
bound
leave
stos
sub
dec
lret
lret
push
insl
add
hlt
push
ret
mov
dec
mov
xchg
test
daa
xor
add
adc
bound
ja
inc
push
push
mov
xchg
test
daa
xor
add
adc
bound
ja
inc
push
push
mov
xchg
test
daa
xor
add
adc
bound
ja
inc
push
push
mov
adcl
ret
pop
and
xor
adc
cmp
fnstenv
test
xor
fst
int
adc
xchg
mov
cltd
push
test
inc
fnstenv
data16
pushf
or
cmp
addr16
pop
imulb
jns
das
pop
pop
xor
iret
dec
stc
pop
xchg
outsb
jecxz
lret
xchg
or
dec
stc
sbb
sbb
jp
dec
fcompl
mov
cmp
jle
jg
dec
shlb
xchg
jmp
pop
fnsave
inc
xchg
fdivrl
push
pop
idivb
dec
stos
imul
imul
push
sarb
dec
sbb
jle
xchg
or
out
pop
sub
and
lods
lods
mov
sahf
sub
mov
cli
cmp
xchg
aam
xchg
syscall
negb
outsl
push
push
inc
push
cli
xchg
data16
sahf
sub
mov
and
dec
jnp
push
hlt
divb
data16
stos
imul
cltd
dec
clc
imul
push
push
and
sbb
test
adc
add
xor
jbe
jg
scas
sub
mov
jno
dec
mov
push
lds
xor
je
or
les
ss
sbb
push
fists
and
and
and
xchg
push
rorl
mov
mov
xchg
or
xor
push
lds
aad
test
jbe
data16
xchg
or
cmp
dec
pop
imulb
jns
mov
cltd
ss
inc
fnstenv
data16
xchg
or
cmp
dec
pop
imulb
jns
mov
iret
outsl
aam
push
jns
push
leave
inc
ds
mov
mov
jbe
sti
xor
push
cmpsl
mov
hlt
xchg
lock
inc
pop
jmp
lea
adc
xchg
fldcw
xchg
push
pop
mov
cmp
adc
mov
push
repnz
add
loopne
mov
push
aad
add
shrb
ret
cmp
add
loopne
and
pop
and
std
push
mov
pop
inc
into
adc
mov
pop
pop
insb
sbb
inc
xchg
and
sub
and
mov
inc
ret
into
pop
into
pop
mov
pop
push
out
into
lds
test
or
mov
sub
jp
pop
mov
inc
jg
divb
pop
sbb
jbe
cmp
mov
popa
inc
push
or
sub
sbb
ljmp
and
mov
daa
jo
lahf
mov
hlt
int3
fisubs
or
or
lret
xor
rcl
lods
jmp
cmp
push
jle
ficomps
jg
or
adc
shrb
xchg
das
addr16
cmp
mov
xor
dec
mov
add
lea
je
xor
mov
add
jns
push
stos
pop
xor
mov
jnp
mov
xlat
and
jecxz
jmp
sbb
ja
das
sbb
inc
lock
cmp
std
out
insb
lret
sbb
mul
add
and
pusha
jnp
fcoms
bound
sub
imul
je
jp
jb
jecxz
scas
bound
xor
in
mov
pop
daa
mov
repnz
inc
xchg
ret
shrl
inc
cwtl
push
sbb
cmp
mov
dec
jne
inc
iret
pop
push
mov
shll
and
test
ret
jb
cmpsb
jo
push
mov
xchg
push
loop
xchg
sbb
mov
inc
adc
push
dec
push
sub
fcoms
mov
jno
call
ljmp
and
pop
mov
push
int3
pushf
fidivl
sub
ret
sub
xor
imul
mov
sbbl
add
ja
call
sub
fsub
lods
mov
popa
insb
push
rcrb
popf
sbb
pushf
mov
aam
xor
xchg
fs
pop
ret
aad
les
mov
cli
pop
test
sub
cltd
ds
das
inc
rol
fmul
mov
xchg
std
xchg
cmc
enter
sahf
jnp
mov
sysexit
roll
subb
test
dec
jl
push
jno
and
mov
push
mov
fs
gs
iret
jle
mov
xchg
scas
fwait
add
outsb
outsl
sarl
push
jl
in
icebp
out
daa
les
sbb
sbb
jbe
lock
jecxz
push
inc
jae
arpl
aaa
loopne
es
dec
out
in
rcrb
fmulp
add
dec
mov
jl
jbe
out
xchg
xchg
jb
push
xchg
shll
lods
add
xor
fidivrs
xchg
fsubrs
or
jns
test
aas
cwtl
pop
test
sub
xor
jb
loopne
mov
mov
xchg
or
cmc
cmpsl
aam
xchg
shl
cmp
pop
jl
sahf
cmpsl
out
push
adc
jle
mov
sub
shlb
repz
and
inc
add
and
mov
lods
jb
inc
and
add
jo
sub
stos
xchg
cmp
popa
nop
sahf
push
mov
scas
aad
sbb
and
xchg
sti
jae
push
mov
in
add
in
scas
mov
push
mov
lea
push
pop
dec
dec
testl
inc
sbb
cli
es
repz
ds
push
sahf
or
aas
jo
inc
mov
aaa
mov
loopne
or
scas
pop
mov
cltd
inc
mov
and
cmp
add
add
dec
and
pop
movsb
and
pop
sbb
mov
fnstenv
xorb
push
mov
pop
or
out
bswap
fcoml
cmc
mov
and
pop
sub
push
mov
and
cmc
in
fstpt
jne
xlat
adc
cli
dec
or
out
jo
mov
jo
iret
jbe
arpl
repz
imul
sbb
mov
add
jns
push
sub
pop
fnstsw
push
fnstcw
cmp
stc
pop
mov
mov
jnp
push
xorl
dec
mov
inc
pop
jns
cs
sbb
outsl
fstps
nop
in
hlt
or
jmp
xor
or
insb
jp
int3
pushf
stc
pop
lods
test
pop
xor
outsl
pop
ja
idivl
mov
mov
clc
sbb
mov
xorb
fsubrs
sbb
pushf
lret
push
sbb
lret
clc
pushf
decl
mov
je
jbe
shrl
mov
cmp
mov
cli
push
or
mov
adc
popf
inc
xor
pop
or
aam
sub
jmp
sahf
sub
loop
in
adc
xor
pushf
shrl
movsl
in
cmpsb
mov
push
mov
fidivs
icebp
icebp
sub
in
inc
sbb
adc
test
jne
add
jecxz
jno
add
jns
arpl
sub
or
xchg
add
mov
cli
mov
mov
fsubrl
sbb
xor
movsl
dec
push
add
and
and
pop
arpl
dec
mov
pop
jp
enter
scas
and
sti
push
jo
das
mov
test
jle
daa
inc
push
adc
inc
ficomps
fcompl
ds
jns
xchg
sub
in
sub
repz
xchg
pop
adc
in
xlat
and
stos
adc
insl
cmp
xchg
add
mov
testb
in
jmp
rolb
popf
fbstp
add
les
mov
and
jl
test
sub
aas
ljmp
aad
insl
adc
mov
dec
xchg
popa
and
push
incb
lahf
inc
mov
add
in
leave
add
ss
xchg
push
jg
and
mov
ja
mov
mov
push
loope
add
pop
push
cmp
test
ja
arpl
sbb
insb
mov
andps
dec
mov
adc
xlat
test
bound
mov
mov
mov
cmpsb
adc
and
and
jmp
lret
or
mov
lock
push
jge
xchg
mov
cwtl
aad
sub
sub
ss
dec
nop
int
pop
pusha
jg
repnz
shlb
adc
or
out
fdiv
xorb
mov
dec
mov
rolb
xor
ror
cmp
sub
jmp
bound
pop
mov
rol
ja
jns
pop
mov
movsl
ret
shr
mov
fimull
push
inc
addr16
mov
out
imull
inc
fs
adc
mov
mov
sbb
add
cmp
or
xchg
arpl
or
push
add
bound
stos
or
enter
sub
push
xchg
mov
sbb
cmp
addr16
rcl
enter
or
sbb
cmp
rclb
mov
mov
mov
mov
jmp
stos
insl
mov
cmp
ret
xorb
lea
mov
add
aaa
pusha
fwait
rcll
xchg
mov
mov
mov
inc
je
subl
sub
das
mov
idivb
testb
fcompl
pop
add
out
mov
adc
cmp
bound
dec
xchg
mov
push
shr
xchg
sar
sbb
pop
cltd
add
lahf
pop
mov
xor
jle
push
and
or
push
scas
inc
mov
xor
dec
jg
mov
pop
scas
in
popa
movsl
fbstp
mov
mov
push
jno
imul
dec
and
clc
dec
jmp
sub
clc
xchg
pop
xchg
and
mov
mov
mov
loopne
push
or
inc
xor
mov
cmpsb
out
imul
mov
sub
adc
in
cmp
rorb
movsb
mov
daa
pop
fldl
fs
fisttpll
rcr
push
imull
pop
outsb
aad
and
xor
add
fwait
pop
push
cld
mov
fdivrp
sub
cmp
pop
pcmpeqd
ret
jns
scas
lahf
mov
je
out
sbb
dec
mov
xchg
pop
cmc
addb
push
dec
aaa
aaa
and
lods
xchg
sub
flds
and
lea
icebp
push
lret
inc
fidivl
inc
je
add
sti
pop
pop
subl
shlb
mov
jecxz
lods
lock
lret
add
jae
and
add
push
inc
dec
shrl
xor
jp
pop
dec
push
int
loopne
push
push
mov
int3
arpl
aas
mov
push
mov
daa
fdivp
shll
mov
into
rcrl
or
into
in
xchg
daa
mov
stc
cmc
lds
pop
jne
mov
out
sbb
lock
and
fnsave
xor
fistps
aas
push
push
test
pop
and
ljmp
std
movsl
xor
cli
dec
lcall
aaa
adc
pop
mov
shl
push
loope
fdivr
call
testl
icebp
sbb
xchg
add
mov
imul
repnz
add
and
lock
les
divl
cmpsb
push
push
mov
and
imul
fdivl
push
out
mov
or
enter
push
les
fidivs
iret
jle
cmpsl
jmp
pop
int3
and
aas
pop
dec
cmc
test
lret
jle
stos
xor
sub
mov
aam
dec
sahf
rorb
mov
jg
fadd
clc
mov
call
jmp
xchg
and
lock
lds
fcmove
aad
je
cmpsl
adc
cmpl
clc
cmp
clc
pop
out
in
pop
push
cmp
jge
rcrb
mov
add
mov
sbb
mov
or
movsb
sarb
aas
sub
hlt
pop
aam
insb
sub
arpl
into
cmpsl
adc
in
push
and
xor
ja
push
adc
test
insb
jo
or
fs
sti
icebp
negl
insl
mov
pop
insb
dec
ja
bound
sbb
cmp
inc
mov
jecxz
sbb
cltd
jno
popf
mov
hlt
inc
lret
cvtps2pd
pop
out
add
loop
dec
iret
js
cmp
roll
xchg
jp
nop
jle
js
pusha
sbb
lods
mov
pop
or
or
adc
cs
jo
mov
enter
xchg
xchg
popa
mov
dec
jp
pop
pusha
pop
bound
mov
cmp
dec
mov
inc
jbe,pt
and
dec
sub
mov
jg
arpl
adc
mov
jb
aam
popa
in
insb
sbb
push
stos
cmpsl
mov
xor
sbb
mov
cmp
cmp
cs
lcall
insl
test
btc
dec
add
daa
inc
rcrb
push
ficoms
cmc
int
xor
scas
in
test
xor
inc
mov
jnp
pop
mov
inc
clc
xchg
jl
pop
lds
js
mov
stc
xor
xor
inc
in
loop
dec
xor
mov
xchg
ret
adc
lea
and
inc
fwait
sub
jmp
test
cwtl
cmpsb
cmp
enter
ds
cmp
arpl
fsts
xchg
mov
pop
and
shrl
pop
das
insb
jns
lea
mov
and
frstor
or
hlt
and
and
mov
jbe
mov
sarb
fisttpl
jl
das
xchg
test
mov
mov
push
jge
push
movsb
sub
pop
das
dec
jmp
fisttps
adc
push
aad
test
subl
jmp
push
cmp
movsb
fldt
stos
out
cmp
je
fdiv
jo
mov
cmpsl
push
dec
mov
xchg
jno
shl
and
outsl
jmp
loop
ljmp
jne
rcrb
sbb
xchg
mov
in
cmc
or
xlat
out
cmp
int
adc
imul
test
fstl
ljmp
fldl
xchg
mov
aaa
inc
nop
or
xor
test
std
loop
inc
inc
mov
inc
bound
pop
cmp
and
or
cmp
lods
leave
cmp
hlt
sub
adc
outsb
or
fnstcw
fdivrs
pusha
xorl
jne
fdiv
lret
jns
dec
push
and
mov
xor
data16
cld
rcll
dec
in
push
lods
out
push
dec
xchg
add
and
movsl
push
mov
or
imul
movl
mov
std
adc
stc
ss
xlat
sbb
ja
cmp
test
pop
lods
lahf
nop
or
popf
popf
add
outsl
fisttpll
xchg
into
mov
jp
jmp
xorl
insl
pop
mov
push
sbb
pop
mov
imul
jae
std
push
and
cmpl
add
jge
shll
rorl
scas
mov
iret
clc
dec
xor
stc
cs
push
fstl
mov
insb
sub
iret
push
stc
lods
icebp
xchg
scas
mov
adc
or
lds
in
lds
xchg
movsl
inc
mov
xchg
aaa
shlb
add
mov
shlb
and
xchg
push
dec
dec
inc
mov
adc
add
cltd
aaa
push
pop
adc
andl
ss
or
ja
cmp
mov
stos
das
sub
push
cmp
jmp
lods
scas
or
out
xor
sbb
xchg
or
sbb
cmp
xchg
cli
ds
or
lods
pushf
and
ljmp
ret
push
mov
test
pop
add
stos
sbb
xor
xchg
mov
stos
or
sbbl
pop
int3
in
cmpsb
and
aaa
mov
cmc
cwtl
lret
sarl
dec
test
mov
jnp
and
mov
xchg
push
lock
sbb
cs
flds
sub
stc
jmp
mov
mov
dec
mov
cmp
or
sbb
pop
dec
add
nop
aam
fidivrl
fbstp
cwtl
invd
adc
sbb
testb
dec
push
push
add
sub
aas
mov
xor
jmp
or
js
mov
xor
sbb
leave
test
cltd
mov
push
inc
clc
add
xor
jmp
loope
lods
dec
pop
jne
mov
sub
test
in
xor
jno
xchg
arpl
sub
jg
cmp
xlat
xor
mov
mov
sub
lock
adc
std
jle
add
out
or
insl
xor
jbe
or
aam
fcmove
cmp
or
imul
mov
dec
dec
in
ja
add
sarl
testb
cmp
jl
fidivs
xor
addl
sbb
gs
push
rcr
and
sbb
inc
mov
pusha
fimull
int3
sub
mov
rorb
jp
aaa
xchg
jne
xchg
sub
or
lds
lahf
es
int3
sub
adc
fmull
xchg
popa
scas
and
das
xchg
fildll
adc
jl
xchg
call
pusha
cli
int
inc
js
cmp
and
repz
test
fsubrl
lods
bound
inc
jg
ret
sub
jmp
pop
mov
popf
scas
xor
xchg
stc
pop
js
dec
ds
mov
mov
pop
rolb
das
pop
lock
shrb
jmp
mov
arpl
ret
pop
cmp
mov
nop
jl
das
xor
sti
int
jbe
sub
fcomi
push
sti
and
xlat
loop
xchg
sub
inc
sbb
dec
fs
cmpsl
pop
dec
js
dec
mov
dec
gs
push
popf
sub
inc
xchg
jmp
out
xchg
push
push
sbb
scas
shrl
sub
sub
lock
roll
cmp
insl
push
pop
lcall
in
inc
loope
mov
scas
in
sti
mov
arpl
fs
sbb
mov
push
inc
int3
setg
in
nop
dec
xchg
push
call
pop
popf
fisttpll
aaa
loopne
pop
fs
pop
cmp
push
sbb
popl
pop
mov
pop
sbb
xor
enter
add
pop
inc
push
in
int3
cmp
sti
fdiv
xchg
xchg
ret
push
insb
mov
dec
push
div
mov
stos
fisttps
repz
dec
lds
in
push
aam
jge
jnp
jle
pop
xchg
call
imul
jns
js
lcall
dec
xor
mov
lahf
push
jbe
inc
aam
enter
js
mov
xor
rolb
fstps
dec
push
int3
test
xlat
pop
scas
scas
loopne
imulb
test
mov
cwtl
mov
xlat
aam
dec
mov
lcall
pusha
mov
cld
xchg
fdivl
jecxz
test
jae
sub
jno
xor
cmpsb
cmpsb
cli
sbb
mov
test
dec
sahf
cs
addr16
push
xchg
and
lret
popl
rolw
pop
out
jns
push
sbb
dec
lcall
dec
rorl
rcr
adc
dec
fwait
xchg
cmp
sub
xor
push
xchg
mov
ret
mov
pop
nop
jae
sub
out
pop
push
fsubrs
rorb
insl
jmp
pop
adc
push
js
icebp
or
pop
jmp
mov
cmpsb
addr16
mov
cli
cmp
out
ficompl
mov
fcmove
xor
adc
mov
testl
lahf
xchg
push
inc
cld
jns
push
popa
scas
test
repnz
lcall
push
jp
sub
in
sbb
clc
fisubl
es
and
aaa
mov
xchg
std
xor
mov
aam
imul
xor
add
mov
pop
inc
mov
mov
not
inc
and
add
xchg
flds
cmpsb
lahf
jp
xchg
xlat
roll
xchg
shll
push
push
cli
xchg
cld
xchg
pop
or
rorl
addl
cmp
test
mov
ret
xor
popf
lods
mov
push
cmp
push
mov
pushf
jns
pop
inc
dec
in
pusha
xor
inc
movsl
jb
js
sub
sbbl
jl
scas
in
stos
testl
push
ds
shll
cmp
insb
xchg
adc
mov
xchg
xor
jge
mov
push
xchg
push
xchg
lret
inc
fcmovnu
sub
dec
outsl
insl
lcall
inc
add
cmc
add
or
mov
negl
jns
into
pop
mov
mov
daa
jecxz
dec
imul
lret
lods
pushf
inc
xchg
bound
cltd
cwtl
jle
mov
push
pop
lods
rol
iret
pop
aam
sub
push
idivb
int3
lock
xchg
sti
adc
cld
adc
xchg
daa
ljmp
insl
loop
out
fimuls
repnz
shrl
jl
fnstenv
je
pop
sbb
or
or
int3
loop
insl
sbbb
in
int3
pushf
inc
stc
inc
popa
fwait
mov
not
movsl
lret
sub
pop
and
rcll
fdivrs
fdivp
push
imul
jnp
into
rcll
js
or
mov
outsb
add
repnz
push
in
jg
cmp
add
fnstsw
push
push
andl
dec
add
fdecstp
or
popf
mov
or
mov
add
pop
test
andb
fisubs
sbb
inc
nop
into
mov
or
fstpl
push
jne
lcall
sub
cmp
cmp
lahf
test
xor
xorb
aas
cwtl
imul
mov
and
pop
jbe
adc
and
mov
inc
inc
in
ss
mov
inc
nop
mov
adc
sub
int3
test
insl
cwtl
push
xor
shrb
and
xor
scas
and
daa
insb
pop
push
pop
dec
mov
xor
add
sub
xor
iret
pop
push
int3
movsb
mov
mov
sbb
shlb
or
jnp
fwait
clc
mov
jl
movsl
daa
cli
cmp
or
push
sbb
insl
fnstcw
les
dec
xchg
aad
mov
or
sbb
aam
mov
mov
mov
out
lret
sub
jp
bound
stos
dec
out
jae
shlb
sub
cmpb
add
test
cmp
cmp
mov
mov
and
adc
hlt
cmc
sbb
sarb
andb
jbe
cltd
fisubrl
fnstenv
data16
xchg
or
cmp
dec
pop
imulb
jns
mov
cltd
ss
inc
fnstenv
data16
xchg
or
cmp
dec
pop
imulb
jns
lea
xchg
ss
mov
jbe
data16
xchg
or
xor
dec
ret
pusha
xlat
popf
and
jge
dec
es
push
leave
inc
fdecstp
imul
mov
sub
and
adc
add
pop
mov
jle
scas
ja
cmp
pop
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
adc
inc
add
addl
xor
testl
and
add
add
inc
add
fwait
add
add
add
add
mov
mov
ret
add
add
add
add
addb
add
add
add
lret
add
adc
aas
add
inc
add
add
add
mov
add
add
push
xchg
jo
sbb
cmpsb
add
add
add
add
test
and
add
add
pop
add
add
add
add
add
and
add
add
add
and
add
add
add
add
push
dec
add
add
add
add
add
and
or
roll
sub
xchg
add
add
add
mov
and
pop
add
and
and
cmp
push
mov
testl
lret
add
add
push
add
add
add
add
add
mov
adc
roll
mov
add
add
dec
add
add
cmp
mov
add
add
or
xor
imul
aaa
add
or
add
mov
add
or
cmp
inc
add
add
add
add
push
add
iret
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
testl
xor
adc
lret
add
stos
add
add
xchg
add
add
add
add
add
add
add
add
dec
add
add
add
add
or
push
add
add
cmpsb
add
jno
stos
add
cmpsb
add
add
add
add
aas
add
add
and
sub
aas
add
add
add
add
add
add
add
popf
add
add
ret
add
add
add
add
push
add
add
add
and
add
add
add
add
add
push
add
add
and
add
add
add
add
add
add
add
add
and
cmp
jle
jge
inc
add
inc
add
add
aam
dec
add
add
mov
aaa
add
push
add
add
add
add
mov
popa
add
add
add
add
dec
add
add
add
add
or
add
add
add
add
add
imul
push
add
popf
add
add
add
add
add
add
add
add
add
sub
xor
push
rolb
add
add
push
mov
add
add
add
add
add
add
add
add
dec
add
add
xor
cmpsb
add
add
xchg
add
add
and
ss
add
add
add
add
add
add
add
add
add
add
push
add
add
scas
popf
dec
mov
int3
sub
je
sbb
push
or
add
movsl
insl
cmp
jmp
ljmp
ret
sarl
lret
mov
push
pop
or
adc
insl
push
test
loope
sahf
outsb
js
mov
outsl
lods
mov
mov
pusha
nop
out
popa
lret
sbb
cmc
xchg
add
xchg
xchg
sbb
bound
pop
xchg
xlat
repnz
sahf
jnp
dec
xchg
rcrb
je
inc
iret
sbb
pop
jp
mov
xor
pop
in
lds
push
outsl
sbb
mov
xor
mov
ss
mov
jmp
push
mov
enter
lcall
sti
movsl
push
jmp
jecxz
mov
push
add
scas
push
nop
pop
pop
call
jno
flds
lcall
mov
movsb
mov
hlt
mov
adc
pushf
adc
fldt
dec
lcall
push
mov
sub
and
hlt
cmp
xchg
aas
loopne
add
mov
arpl
mov
jae
pop
push
loop
movsb
fsts
and
jno
jns
pop
ror
rcll
pop
div
sahf
jl
push
lret
push
mov
xchg
int
and
ja
and
stc
mov
xor
xor
dec
imul
es
push
fcmovb
pop
mov
jns
cmp
or
or
andb
mov
in
lock
add
sub
add
out
cmp
lods
in
out
rol
xchg
stc
sbb
jb
in
mov
leave
pop
fldcw
adc
push
fildl
fnstsw
out
fisubrl
jge
pop
mov
lock
hlt
and
sbb
shll
outsb
dec
inc
aas
cwtl
sub
sbbl
push
adc
dec
pop
addb
cld
sbb
mov
lea
inc
mov
inc
add
cli
mov
push
dec
daa
dec
jg
jae
pop
imul
or
imul
cli
ror
rcrl
adc
xchg
test
xchg
mov
fisubrs
testb
inc
mov
inc
aas
push
imul
or
pushf
orl
std
repnz
ljmpw
pop
mov
shll
enter
mov
jnp
jbe
jo
imul
test
mov
or
lahf
mul
out
stos
pop
mov
and
adc
pop
cmp
lea
xchg
xor
sbb
aad
pushf
js
and
or
loope
fwait
cli
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
