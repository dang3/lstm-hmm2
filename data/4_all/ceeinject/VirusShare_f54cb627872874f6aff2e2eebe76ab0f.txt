call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmc
inc
mov
mov
fimull
push
aas
daa
or
jnp
imul
dec
mov
fwait
lahf
mov
sti
jmp
fcmovnu
lret
and
cmp
or
jle
dec
pop
pop
dec
mov
cmpsb
stos
xchg
addl
xlat
ret
enter
xor
arpl
or
xor
fistpll
icebp
add
adc
xor
inc
es
mov
mov
sbb
push
adc
adc
adc
out
rol
or
or
sub
mov
inc
mov
out
mov
scas
daa
sub
cmpsl
loopne
nop
imul
in
cwtl
dec
jg
scas
stos
outsl
fwait
adc
lret
sub
sbb
sbb
aam
sti
inc
hlt
ljmp
and
inc
dec
fs
mov
mov
lret
shrb
pop
pop
or
adc
ret
mov
mov
dec
rcrb
or
loope
inc
sarb
sarb
push
push
sbb
movsb
pop
pop
outsl
mov
mov
iret
ret
and
xor
add
adc
addr16
pop
inc
das
fisubrl
mov
mov
pop
push
aas
push
jge
jno
add
sbb
sub
es
ret
mov
mov
mov
aas
dec
dec
outsl
push
or
or
aas
aaa
pop
cs
cli
into
ljmp
jmp
fcmovnu
lret
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
sti
jmp
fcmovnu
lret
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
negl
jo
xchg
add
sub
roll
iret
inc
inc
jbe
jmp
mov
test
pop
repnz
inc
int
lret
into
push
cld
pop
push
das
pop
push
push
shrl
push
loope
cs
jle
into
pop
jmp
or
fs
mov
imul
inc
inc
cli
push
mov
push
xor
cmpsl
fisubrl
rol
imul
ret
leave
stos
in
insb
push
dec
insl
mov
pop
test
pop
adcb
and
sbb
sbb
mov
lods
push
lods
pop
icebp
jmp
cmp
cmpsb
pop
mov
adc
int
sbb
ds
mov
ds
pop
inc
mov
xor
xchg
xor
push
sbb
xchg
cmp
stos
aad
lock
inc
pop
jmp
ja
mov
movb
xor
sti
adc
mov
push
adc
jnp
pop
out
int3
ss
les
mov
loope
pop
cmp
dec
mov
dec
cli
mov
or
stos
movsb
loopne
fisttps
jmp
stos
in
jp
int3
inc
rcrb
xchg
xchg
jle
mov
or
jo
adc
xor
xor
dec
insb
push
into
lahf
jns
ficompl
xor
jo
inc
push
or
aad
sub
dec
mov
cltd
stos
push
xchg
dec
and
scas
pop
jge
clc
insl
lods
or
push
loop
and
out
mov
mov
dec
cli
negb
adc
in
hlt
push
hlt
out
sub
sarb
adc
push
push
or
lock
and
jns
in
notb
push
js
in
or
mov
push
push
adc
pop
mov
xchg
outsb
adc
dec
cmp
sub
ret
cmp
sub
repnz
cld
dec
pushf
arpl
ror
arpl
movsb
ja
mov
js
xchg
repnz
xchg
mov
std
aaa
xchg
add
add
sub
xchg
xor
mov
dec
jo
and
push
imul
cmp
in
mov
aaa
or
je
sarl
movsl
xchg
push
jb
xor
sub
pop
scas
mov
xor
mov
data16
hlt
push
pop
and
dec
decb
cmp
mov
and
jle
mov
sub
xchg
add
jmp
jp,pn
push
fistl
adc
sub
inc
jp
inc
mov
inc
sbb
xor
daa
pop
or
xor
sti
xchg
je
mov
sbb
bound
cmp
fisubs
mov
mov
ret
and
inc
fs
in
mov
sbb
mov
push
mov
sub
jg
stos
mov
and
pushf
sub
fistpl
dec
add
push
cmp
ss
or
mov
xlat
out
out
cs
sbb
mov
sbb
xchg
sub
fsubrs
sub
pop
andb
xchg
xor
inc
je
adc
mov
popf
test
pop
adc
subl
pop
xor
sub
imul
push
push
aam
mov
in
jno
sahf
aam
nop
pop
arpl
sub
mov
addr16
mov
lock
loope
cld
inc
dec
ret
push
add
sub
divb
lea
dec
adc
loop
test
imul
insb
mov
push
adc
andb
pop
inc
das
int3
push
pop
sbb
cmc
lret
lods
lods
add
ret
mov
popf
jle
mov
stos
lret
push
fbld
sbb
bswap
mov
cld
sbb
jmp
rorb
test
fmuls
or
jge
cmove
pop
fisttpll
cmpsb
inc
push
jl
loope
and
xchg
jae
adc
out
pop
jmp
scas
cmp
test
std
fbstp
int3
pop
mov
ret
ficompl
scas
jp
int3
test
xchg
loopne
fistpl
insb
fisttpl
or
scas
ljmp
int
push
js,pn
mov
enter
mov
dec
push
xor
adcb
cmp
dec
and
or
mov
mov
jnp
inc
fs
cld
ret
cmp
adc
mov
cmp
dec
sbb
out
push
enter
aaa
cmp
or
insl
push
adc
cmpsb
mov
cli
xchg
xor
or
mov
jae
pop
aas
cmp
jmp
lods
or
scas
xchg
repnz
adc
xor
bound
pop
and
dec
ret
stos
jge
dec
mov
daa
jnp
or
int3
pop
mov
in
cmp
mov
mov
aad
repnz
popa
jne
andb
outsb
aam
mov
pop
pop
and
lret
pop
mov
push
mov
or
inc
lret
sub
push
pop
and
sub
xchg
and
out
push
sbb
mov
xchg
or
cmp
fsub
lahf
cmc
outsl
sub
stos
mov
push
lock
adc
xor
std
pop
or
jo
jbe
cmp
cmpsl
jle
mov
mov
pop
lcallw
cmp
pop
inc
push
test
push
pop
daa
adc
xor
ds
cld
pop
and
aam
xchg
lcall
pop
in
mov
sbbb
sub
cs
mov
stos
jb
lods
sbb
push
scas
popa
sbb
mov
add
into
mov
scas
cmp
lods
fdivs
pop
mov
ljmp
or
data16
sub
jle
ds
cmp
xchg
jmp
xor
fyl2xp1
dec
mov
mov
fmulp
outsb
call
cmc
jns
insb
xchg
adc
pop
add
cltd
mov
and
adc
sbb
in
mov
inc
xchg
aas
fs
js
out
leave
mov
mov
lock
push
sub
and
test
xor
sar
test
sarb
xor
call
insl
pop
and
mov
fidivs
xchg
push
ljmp
test
fmul
sbb
xorl
mov
lret
pushf
test
xchg
push
scas
ret
pop
mov
mov
jmp
imul
inc
push
adc
xor
xor
pop
into
xchg
xchg
sub
fwait
stos
fists
xorb
fstps
cmpsl
test
cld
lcall
adcl
rcr
cmp
adc
jmp
rorb
cmp
movsl
cmc
repnz
mov
inc
cli
jo
iret
enter
orl
orb
mov
mov
adcb
iret
adc
sbb
repz
add
xchg
rclb
lods
lods
icebp
mov
fldl
ret
ljmp
cmp
jb
ljmp
and
shrb
ljmp
adc
dec
fcmovb
sahf
aas
ljmp
scas
fisubrl
cld
jmp
mov
cmc
pop
adc
lcall
leave
or
jno
xor
insl
pxor
push
inc
int3
sbb
push
lea
cli
adc
adc
xchg
mov
aas
repnz
aad
cmp
loop
mov
test
adc
jnp
mov
sub
popa
mov
xlat
jae,pt
pop
fisubrl
add
mov
rolb
push
lods
insl
arpl
outsb
daa
pushl
fldt
dec
insb
cmpsb
dec
inc
push
insb
mov
mov
std
cmpsl
shll
cs
cli
xchg
or
es
xchg
jo
cmpsl
mov
into
jmp
lret
pop
clc
pop
loope
push
lods
fildl
test
inc
icebp
jno
cmc
scas
sub
orb
pop
outsl
rcrl
or
imul
cmp
popa
shrl
xlat
daa
mov
mov
imul
cmp
daa
cwtl
loop
out
aad
repnz
mov
leave
fs
push
mov
js
jl
sub
out
and
jbe
adc
mov
push
clc
pop
xor
cmpsl
xor
into
int
enter
push
rcrb
shlb
push
clc
and
lret
mov
xchg
jb
cmp
loopw
dec
jmp
sbb
out
mov
fucomi
push
inc
icebp
daa
imul
or
loope
xchg
jmp
std
lds
imul
cmp
jbe
iret
movsl
push
sub
clc
fs
xor
sub
and
popf
xor
xchg
push
sti
std
popf
imul
and
adc
jne
fwait
fs
icebp
push
mov
dec
mov
add
jb
stos
mov
inc
xchg
and
xor
js
icebp
out
int3
daa
and
and
jmp
sub
lcall
stc
cld
cmp
movsl
and
cmpsl
push
cmp
cmc
mov
mov
mov
pop
jns
hlt
or
or
add
xchg
mov
mov
cmp
cmpsb
jle
push
lods
lea
xor
add
adc
bound
das
nop
inc
in
mov
inc
jno
es
mov
sbb
mov
test
pushf
sar
sbb
test
xchg
mov
int
int3
push
add
cli
testl
fs
stos
aam
out
mov
stos
js
xchg
popf
sub
scas
jmp
xor
and
dec
cmp
sub
adc
dec
jg
pop
sarl
mov
xor
dec
aam
add
fistl
ret
into
shrl
inc
inc
lods
add
add
lret
inc
test
sbb
sti
jp
mov
lret
testl
or
lods
dec
sbbl
xorb
and
or
aaa
jle
mov
outsb
and
lods
cmc
add
fldt
adc
scas
sbb
mov
out
sbb
jb
mov
mov
in
pop
push
inc
sbb
push
sub
or
out
in
jmp
dec
pushf
fwait
cmpsl
xchg
adc
cmp
or
cs
daa
std
mov
or
test
mov
pop
movsl
ret
push
out
adc
mov
iret
fcoml
cmpsl
rol
aaa
notb
mov
in
sti
jno
mov
stos
jb
mov
in
sub
pop
fcmovbe
stos
push
push
jle
sbb
shl
mov
dec
jno
mov
hlt
insl
clc
loop
leave
scas
xor
movsl
or
loope
cmp
int3
xor
outsl
or
sbb
fsub
push
fldcw
and
cmp
push
sbb
cli
pop
mov
inc
jno
jns
pusha
iret
das
dec
jp
in
loope
inc
dec
sub
push
fnsave
mov
push
and
xor
mov
cwtl
ljmp
push
stc
lods
jnp
shll
std
mov
adc
mov
push
jb
fimull
mov
stos
jmp
pop
loope
mov
xor
inc
xor
add
inc
test
and
or
and
pop
jns
sub
ret
data16
imul
mov
xchg
and
dec
mov
rcl
icebp
or
xchg
xchg
dec
xor
lds
pop
aam
fbld
push
push
fs
mov
jge
lahf
mov
fsts
in
or
clc
or
dec
sahf
ret
mov
jo
not
lods
sub
fimuls
cmp
test
push
pop
mov
dec
cmc
dec
jnp
xchg
imul
decl
cld
or
and
movsb
xchg
mov
leave
xchg
push
in
mov
mov
jne
sbbl
mov
and
and
cmp
pop
shl
push
mov
stos
xor
dec
cs
icebp
mov
mov
stc
sub
add
mov
and
rcrl
xor
popf
loopne
or
and
lds
push
fsubrl
push
mov
outsl
push
push
cmovge
pusha
mov
std
jo
mov
test
stos
sbb
jo
and
out
xlat
xchg
xorb
ja
repz
xchg
jecxz
adc
jle
cmp
or
push
cmc
add
sub
and
mov
pop
sbb
lea
xor
insb
mov
mov
and
pop
fdivrl
lods
and
lret
jg
and
add
jmp
xchg
mov
jl
fwait
jle
mov
rolb
sbb
enter
jb
data16
mov
in
xchg
inc
imul
adc
ficoml
xchg
xchg
mov
cwtl
fbstp
stos
push
ficompl
movl
ds
mov
divl
pop
cvtdq2ps
iret
add
jle
arpl
iret
jns
jns
or
cmc
sahf
push
inc
pop
movsb
jnp
cmp
movsl
ds
jl
xchg
push
imul
enter
scas
imul
rclb
add
dec
int
test
scas
push
jecxz
fnstsw
inc
xchg
out
loopne
enter
lds
les
call
clc
movsb
shl
test
cmp
out
lods
sub
add
push
lods
dec
cltd
into
cmp
popf
scas
scas
xor
pop
int
prefetchwt1
test
cltd
out
dec
outsl
sub
dec
insl
pop
sub
adc
daa
push
sub
xchg
sub
xchg
add
inc
cwtl
cmp
out
add
cmp
xchg
inc
dec
jecxz
faddl
xor
or
sub
xchg
rcll
jne
or
out
push
pop
xor
or
xchg
xchg
push
inc
sbb
add
lods
xor
jmp
jge
movsb
leave
call
xchg
shl
in
cmp
jle
adc
push
sahf
pusha
test
push
les
inc
push
daa
adc
dec
fmuls
jns
mov
cwtl
loop
inc
dec
xor
add
adcb
les
xchg
mov
popa
pop
mov
shrl
mov
xor
daa
add
jmp
dec
and
outsb
sub
add
mov
inc
leave
sbbl
sub
cmc
fcomp
mov
xor
andb
daa
adc
cld
fisttpll
dec
lods
jge
dec
jge
inc
inc
adc
push
hlt
loopne
stc
lods
sahf
dec
and
push
imul
fisubl
mov
ljmp
stos
pop
dec
repnz
xorb
repnz
sti
movsb
aad
jb
push
add
lods
xchg
icebp
daa
popa
sbb
test
pop
mov
out
mov
imul
loopne
fdivs
popa
fidivs
stos
add
adc
mov
jnp
pop
call
pusha
popf
jmp
and
mov
inc
int
lea
mov
pop
and
loop
faddl
xlat
jl
or
mov
sbb
sub
dec
repz
xor
hlt
dec
pop
daa
aas
push
imul
xor
fwait
jb
xchg
pop
jecxz
in
push
xor
cmp
test
mov
sub
push
jge
dec
into
cmc
in
aam
in
in
dec
push
test
mov
in
push
push
cmp
addr16
or
inc
dec
pushf
sbb
inc
fs
and
lock
jl
fldcw
in
fmulp
and
dec
es
sub
push
adc
mov
leave
rcrl
dec
xchg
pop
add
adc
mov
les
mov
cwtl
std
divl
push
enter
lret
cmp
push
adc
ljmp
lret
test
jns
xlat
inc
loop
sub
or
dec
iret
jg
jae
mov
mov
or
sbb
bound
lret
cmpsb
loop
push
jecxz
loop
pop
cli
mov
enter
xchg
sub
pop
hlt
and
pop
je
inc
xor
sbb
push
adc
cmpsl
mov
xor
out
mov
pop
fdivrs
test
mov
push
push
xchg
testb
lods
hlt
idivl
xor
daa
xchg
gs
xlat
nop
mov
add
subl
repz
and
inc
out
pop
rorl
rolb
in
dec
jle
aam
jmp
lret
jmp
push
or
xchg
lahf
arpl
sbb
icebp
inc
addr16
push
insb
jbe
fs
inc
lcall
add
jnp,pn
cltd
lcall
je
insb
dec
xchg
xor
cs
inc
mov
and
adc
add
sbb
pop
movsl
pop
mov
dec
mov
xchg
sub
lret
jecxz
std
jmp
out
pop
fisubrs
xor
inc
jae
mov
shll
pop
mov
je
imul
faddl
fdivrs
out
and
jmp
inc
sub
xor
call
push
push
sahf
fwait
scas
mov
rcrl
rol
jge
dec
out
inc
mov
stos
es
sti
xlat
mov
adc
sar
mov
jb
sti
ljmp
xchg
inc
jmp
jecxz
in
cmp
repz
cltd
adc
fcmovnb
xorb
daa
pop
iret
sti
and
push
in
inc
rcrb
leave
xor
pop
fwait
push
into
sub
jns
adc
pop
fcmovbe
fildl
xchg
sub
aad
dec
shl
and
jno
hlt
outsl
call
mov
lock
cld
xor
and
outsl
mov
lret
mov
mov
sbb
in
js
shrb
mov
push
stc
mov
addr16
repz
xchg
add
xchg
add
mov
cld
dec
gs
sbb
movsb
outsl
repnz
cmp
add
push
out
cli
sahf
bound
inc
sahf
dec
mov
cmc
push
inc
lods
mul
outsl
xchg
add
and
hlt
imul
stos
add
fsubrl
xchg
pusha
cmc
pop
movsl
xchg
mov
xor
xlat
mov
or
ss
lahf
int3
xor
add
adc
test
xor
sub
jmp
jnp
out
les
xor
pop
test
dec
pop
mov
inc
mov
dec
lcall
mov
mov
mov
fldl
stc
in
inc
shlb
test
pushf
ljmp
push
push
js
test
pop
mov
aaa
xchg
loop
mov
push
mov
pop
int
stc
std
hlt
jnp
or
and
mov
jne
push
xchg
in
lret
mov
js
lods
fisttpll
xlat
xchg
inc
test
jbe
mov
jbe
adc
incl
jnp
push
imul
ret
push
mov
xor
repnz
dec
aaa
enter
outsl
lea
daa
cmp
and
fwait
xor
fdivr
movsb
fildll
or
and
lods
icebp
mov
lcall
cmpsl
mov
movsl
sar
push
hlt
aaa
pop
adc
xor
aaa
fldl
mov
mov
dec
mov
stos
fisttpll
fdiv
mov
add
lock
iret
or
pop
fdivs
in
lods
ret
add
ficomps
pop
pop
xchg
call
aas
cmp
pop
div
lret
pop
cmpsl
pop
mov
pop
mov
push
pop
nop
push
dec
bound
dec
ja
cmp
out
mov
mov
cmp
mov
aad
dec
icebp
fists
push
xor
into
jle
or
fiaddl
dec
leave
mov
inc
mov
xorb
popf
andl
arpl
divb
add
daa
dec
or
adc
cmpsl
fwait
lcall
and
xor
sbb
rorb
push
dec
das
int
data16
push
jb
push
fiaddl
dec
call
and
pop
aaa
pop
mov
xchg
jmp
cmp
faddl
cmp
push
mov
pop
mov
out
inc
cmp
pop
sbb
sub
adc
mov
xor
aad
ljmp
std
adcl
pop
fwait
fs
jg
push
mov
jbe
cli
imul
fcoml
mov
pop
xor
mov
pop
js
mov
paddusw
mov
mov
bt
fistpll
pop
sub
sti
mov
lods
mov
cwtl
dec
inc
mov
fistpl
sub
or
ret
lock
jge
cmp
insl
scas
mov
clc
loopne
in
dec
test
dec
das
xor
ljmp
jae
sub
lods
push
cmp
aad
stos
pop
cmp
loope
outsl
pop
mov
test
movq
rorb
sbb
icebp
testl
jns
xor
pop
pop
sbb
xchg
jnp
mov
xor
repnz
stos
jnp
sub
notl
cmp
cmpsb
xor
or
jns
push
lret
sub
out
pop
cld
add
dec
xor
push
push
xor
add
inc
mov
xor
enter
dec
sahf
out
out
out
data16
arpl
popa
inc
or
les
pushaw
sahf
loope
imul
mov
loopne
mov
rorl
dec
cld
pop
mov
imul
fidivl
pop
call
test
inc
addr16
mov
cs
cmp
pop
sbbb
lods
dec
stos
mov
fxch
jl
pop
and
lret
pop
aas
xchg
push
fsub
sub
dec
arpl
cmc
adc
lret
mov
pop
mov
mov
fwait
notb
push
test
in
push
pop
nop
or
or
jb
test
add
xor
scas
fistps
jmp
nop
stos
cmpsb
cmpb
push
jne
mov
sbb
sub
repz
je
mov
sti
jmp
fcmovnu
lret
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
sti
jmp
fcmovnu
lret
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
sti
jmp
fcmovnu
lret
das
cmp
sub
sbb
or
jnp
dec
pop
outsb
dec
fwait
mov
lahf
mov
sti
jmp
fistpl
sarb
rolb
repz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
push
dec
xchg
insl
call
push
mov
movl
pushf
jbe
inc
lods
push
lods
scas
pop
mov
xchg
insl
out
testb
fnsave
int
cld
push
in
data16
adc
jl
ss
add
insl
negb
cs
pusha
cwtl
ja
inc
fldt
shll
fsubs
cmp
insl
cmpsl
mov
ret
sub
cmpsb
popf
cmpsb
mov
inc
imul
loopne
or
push
cmpsl
mov
add
clc
jecxz
out
movl
push
stos
outsb
push
xchg
mov
out
out
data16
int3
stc
sti
call
mov
xor
popa
jecxz
into
pop
sti
push
or
xor
xor
cmp
push
push
enter
popf
dec
mov
adcb
xchg
jne
subb
and
stc
add
popf
push
aad
dec
and
pop
jns
xor
push
push
xchg
das
movsb
into
leave
pop
mov
adc
mov
add
mov
xchg
insl
out
mov
cmp
movsb
int
std
or
push
popf
push
jmp
pop
shlb
clc
sub
pop
cmpl
mov
inc
lods
ja
push
scas
ja
psubsw
lret
adc
cmpsb
xor
and
xor
xchg
dec
stos
push
add
mov
jp
adc
fcoms
stc
aam
test
negb
xlat
adc
cmp
ss
std
push
in
popfw
jbe
inc
mov
mov
xchg
insl
out
testb
fnsave
int
std
push
in
popfw
jbe
inc
mov
jb
cs
stos
stos
call
mov
gs
shll
in
sub
in
inc
pusha
jmp
mov
pop
jno
subl
test
ret
mov
outsl
or
aas
lcall
ds
jp
addr16
push
and
xchg
pop
pushf
adc
outsb
in
mov
sbbb
and
fisubrs
cmp
daa
mov
ret
mov
das
xchg
mov
out
push
and
vpand
pop
xlat
lock
inc
jp
fld
xor
es
sbbl
adc
cmpsb
es
imul
hlt
rolb
rol
fwait
cmp
clc
push
and
gs
jbe
jnp
pop
aas
daa
pop
push
bound
xchg
hlt
test
mov
xchg
shl
jmp
fidivrl
nop
loope
rcll
mov
popf
ss
movsl
cmc
mov
filds
lcall
xor
aam
sub
push
insb
imul
sahf
or
pushf
sub
adc
rcrl
cltd
orl
adc
rol
mov
scas
pusha
lret
push
push
xchg
cmpsb
inc
jb
xchg
or
and
les
xchg
icebp
subl
inc
aaa
movsb
dec
movsl
movl
cli
mov
mov
icebp
aad
stc
cmp
clc
lcall
idivb
sahf
pop
jo
inc
add
mov
cmpsb
insl
xchg
arpl
stc
lods
stos
sti
inc
cmp
pop
lea
xor
fldl
sbb
subl
ja
repz
sbb
add
pop
push
insl
jge
call
cmpsl
or
mov
cmp
and
rol
adc
pop
pushl
add
ljmp
cmc
cmc
loope
ret
pop
inc
mov
gs
test
cld
jb
daa
nop
mov
xor
jae
mov
xchg
push
fmuls
pop
mov
dec
sbb
xor
into
sub
lds
sbb
loopne
jmp
push
sub
clc
push
lcall
outsb
jae
xchg
jb
arpl
and
addl
bound
sub
fisubl
xor
xchg
ret
xor
dec
jno
jl
cmp
pop
sbb
inc
add
jnp
xor
stos
cli
inc
js
loope
and
aam
push
lods
lret
jo
sti
int3
push
lcall
jae
sahf
pushf
iret
lahf
ljmp
ss
cmpsl
clc
mov
pop
mov
test
notl
jmp
dec
jb
mov
es
sub
add
out
push
stc
ss
push
mov
repnz
ljmp
fs
repnz
repz
jl
fs
mov
pop
mov
cmpsl
cmp
pushf
mov
jge
shrb
jbe
arpl
and
data16
ja
insb
push
cmp
and
mov
push
add
push
sti
mov
cmp
idiv
xor
in
pop
mov
inc
mov
aam
or
cmp
or
xchg
push
dec
mov
jle
xor
sbb
pop
into
or
push
jecxz
pop
cmp
jbe
push
sbb
imul
push
dec
inc
mov
outsb
in
jno
mov
sbb
cwtl
sub
mov
sub
fcoms
aam
inc
pop
shll
cmp
int3
mov
jmp
popa
ret
sti
add
int
sub
mov
ret
mov
pop
adc
es
test
inc
sbb
jnp
imul
xchg
sub
dec
cmpsl
es
and
xchg
addl
aaa
testb
mov
add
and
sub
and
iret
rcr
mov
cmp
sub
addb
pop
in
notl
mov
or
push
mov
mov
std
imul
out
jecxz
scas
mov
fnstsw
mov
aaa
mov
adc
in
push
mov
out
jmp
sarb
lret
mov
fistpl
stos
data16
mov
inc
iret
aaa
cmc
in
lahf
or
lock
push
lcall
push
adc
mov
inc
sub
ljmp
rclb
rep
push
dec
jle
int3
pop
adc
test
mov
aad
jns
cmp
pop
test
mov
movsl
or
es
adc
jbe
mov
cwtl
inc
mov
jecxz
mov
dec
push
push
mov
jb
shl
jmp
ss
mov
pushl
aam
pop
adc
pusha
jb
std
xlat
mov
out
fs
push
mov
push
in
clc
loopne
loope
hlt
sbbb
repnz
mov
mov
adc
in
mov
xorl
pop
iret
pop
mov
loope
mov
cmp
xchg
dec
jl
jae
mov
lock
popa
imul
repz
das
pop
popa
les
idivb
mov
sub
mov
test
rcrl
add
and
pop
add
mov
cmp
cmpxchg
inc
outsl
aam
push
mov
popf
popa
daa
or
jbe
ja
sbbl
jp
test
call
scas
pop
pop
test
xchg
jl
pusha
mov
cmp
roll
pop
shll
ret
xor
scas
fwait
mov
lods
xchg
nop
icebp
rcrl
push
or
xchg
cmpsl
movsb
jbe
movsl
push
or
add
stc
bound
dec
push
clc
je
inc
mov
and
fildll
push
inc
sub
push
int3
jge
pop
js
jmp
aas
lods
inc
cli
popa
pop
push
lock
sti
sub
test
sbb
in
daa
divb
mov
or
out
out
mov
fnstenv
xchg
inc
dec
mov
fbld
jmp
adc
mov
dec
out
sbb
loop
push
adc
push
sub
iret
sub
out
pop
xchg
push
pushf
xchg
movsb
aaa
aad
sub
jp
addr16
andb
xchg
adc
lock
cltd
cs
dec
imul
lods
fisubs
add
shr
mov
mov
inc
push
sbb
jbe
mov
xchg
loope
insb
adc
gs
cld
or
mov
insl
push
addr16
and
pop
loop
xor
daa
mov
decb
imul
popa
jnp
repz
jp
int3
repz
clc
repz
popf
insb
xchg
or
dec
push
or
adc
lea
loopne
addr16
sub
push
ret
adc
loopne
std
cld
xor
or
push
dec
xor
test
aam
insb
inc
data16
negb
or
sarb
push
xchg
aad
adc
mov
sub
mov
mov
xchg
jle
lea
pop
sti
mov
inc
jns
pop
mov
sahf
add
and
or
xchg
adc
add
pop
pop
mov
mov
cs
nop
sub
add
dec
mov
push
and
jmp
push
mov
xchg
jecxz
cli
jb
sbb
repnz
test
pop
sti
pop
out
add
cmp
into
mov
or
roll
mov
imul
inc
adc
inc
lock
push
addb
mov
movsb
outsb
push
ss
pop
fsubp
clc
lret
mov
sti
loop
push
rolb
mov
out
adc
sbb
gs
pushf
push
fiadds
mov
push
xlat
lds
and
and
mov
incb
mov
jle,pn
adc
mov
pop
aad
rolb
or
mov
addb
rolb
xchg
push
inc
or
and
mov
stos
sar
je
movsb
cs
std
ds
add
sub
mov
cltd
dec
stc
aaa
adc
mov
jbe
xlat
pop
rcll
les
cmpsl
or
or
mov
stos
sbb
in
je
lods
aaa
inc
xlat
pop
in
popf
iret
jno
push
sub
and
push
icebp
call
pop
popa
dec
enter
and
cmp
xor
push
icebp
out
or
popa
imul
cmp
mov
in
cmp
add
mov
int
mov
dec
roll
adc
mov
mov
clc
mov
int3
outsb
dec
mov
rcll
arpl
mov
and
inc
sub
and
mov
push
sbb
jle
fistpll
fidivrl
das
xchg
xchg
jbe
xor
push
ss
jl
rcll
inc
sarl
mov
loopne
add
xor
ja
std
mov
je
ret
nop
cmp
mov
fisubrs
imull
gs
repz
imul
imul
cltd
dec
jo
leave
push
or
loopne
sub
pop
mov
cmp
pop
cmp
shlb
jo
test
add
sub
mov
fadd
or
cmp
sub
nop
lods
mull
outsl
je
dec
xchg
xchg
shlb
mov
sbb
mov
inc
imul
xorb
push
pop
int3
mov
sbb
pop
data16
nop
mov
fisubrl
iret
mov
cmpsb
sbb
frstor
stos
aaa
inc
sub
mov
loope
xchg
lods
push
mov
dec
and
mov
test
bound
enter
mov
bound
int
or
or
in
imull
push
out
mov
inc
jecxz
push
repnz
lcall
and
or
xor
ja
push
stos
add
adc
je
out
jl
movsl
fisttpll
movsb
mov
aas
aaa
jge
xchg
sub
dec
gs
xor
xchg
outsl
pop
add
mov
adc
sti
add
repz
je
add
sahf
push
scas
je
movsb
xchg
hlt
push
jbe
cmpsl
out
frstor
not
repnz
mov
popf
repnz
lret
in
pushl
jecxz
sbb
cmpsb
mov
jae
jnp
mov
outsl
mov
jbe
mov
stc
icebp
and
xor
push
push
and
movsl
or
aad
pop
and
push
pop
sub
lcall
sbb
popa
sbb
aad
in
and
fdivrl
jnp
xchg
mov
lret
out
sbb
lock
sbb
mov
xchg
xor
jecxz
push
dec
sub
jg
cmpsb
add
sub
and
stos
dec
movsl
mov
les
lods
sub
inc
adc
jp
test
es
dec
ret
insl
add
xor
dec
jne
mov
dec
sbb
addl
cmp
jnp
divb
clc
jns
mov
jl
mov
cwtl
or
loopne
iret
mov
adc
test
movsl
movsb
inc
sub
hlt
out
jmp
in
bound
lahf
inc
rorl
adc
adc
ljmp
adc
movsb
jle
and
cli
repnz
xchg
fmuls
xor
sub
dec
in
movsb
cmp
scas
ffreep
sbb
outsb
aaa
xchg
mov
xor
popa
and
in
xor
mov
push
lret
mov
mov
inc
mov
inc
jno
pop
lds
data16
or
ss
addr16
push
cltd
mov
xchg
xor
pop
hlt
and
fcompl
clc
sti
jmp
sbb
xorl
dec
test
lods
mov
jmp
out
ds
adc
cs
stos
sarb
dec
mov
pop
mull
scas
incb
mov
es
ror
inc
test
js
and
pop
mov
lock
fldl
mov
jns
in
popf
jp
xor
bound
mov
push
add
inc
cmpl
mov
mov
loopne
mov
jae
xor
aas
outsl
jae
push
lahf
gs
repnz
sub
mov
std
popa
scas
xchg
sarb
int
xor
test
movsb
xchg
iret
loop
push
pop
inc
cli
loop
jmp
inc
aam
mov
jns
lods
mov
iret
popa
rorb
jmp
cmpsb
scas
out
jle
or
cli
mov
lds
pop
or
ret
mov
iret
cli
adc
das
in
int
cmp
mov
dec
popa
cmp
xor
lods
leave
movsl
inc
ret
in
mov
mov
test
push
mov
xor
addr16
inc
xchg
xor
int3
aam
adc
xor
or
pusha
dec
test
insb
cs
ljmp
push
mov
pusha
test
rcl
sub
inc
sub
sub
mov
mul
push
imul
mov
fistl
jb
add
jl
stc
out
sbb
enter
inc
scas
fdivp
in
mov
ljmp
mov
jnp
xor
sbb
jg
mov
xchg
in
add
imul
pusha
sbb
loopne
adc
fdivrl
add
gs
lcall
ret
pminub
sub
mov
pop
fdivrl
jle
pop
insb
bound
jnp
mov
in
lret
cmc
std
aam
stc
imul
repz
cmpsl
mov
sub
mov
jmp
std
cwtl
lret
daa
xor
int3
push
iret
outsb
rolb
call
jecxz
in
cmc
out
shrb
adcl
push
adc
out
fcompl
cmp
outsl
and
sub
inc
fistpll
sahf
fisubs
in
push
inc
enter
cmp
popf
or
jg
aaa
or
dec
cmc
inc
out
mov
cmc
adc
pop
cmc
dec
push
mov
mov
out
daa
xchg
addr16
dec
addr16
std
sbb
sahf
fcomps
dec
mov
and
mov
imul
mov
and
jge
shll
add
test
jbe
lock
jp
push
pop
adc
mov
in
mov
cs
fst
leave
cmpb
push
jo
mov
sbb
inc
xor
jae
and
inc
rorb
inc
adc
jl
mov
jae
jno
out
in
add
out
xchg
dec
scas
jno
nop
adc
sbb
pushf
mov
mov
stos
dec
jle
stos
pop
mov
xchg
cmpb
outsl
fld
dec
cmp
xchg
es
movsl
sub
aam
je
mov
loop
or
jmp
dec
mov
sub
stos
sbb
int3
rolb
aam
dec
test
in
fadd
mov
mov
aad
push
gs
xchg
cmp
mov
add
scas
mov
insl
pop
out
fstpt
fdivrl
and
mov
mov
js
mov
negb
out
ljmp
mov
test
cli
pushf
shlb
pop
xor
std
sub
loope
and
cwtl
dec
push
outsl
clc
cmp
xchg
xor
insb
pop
jle
shl
jno
pop
es
cmovs
cmp
sub
ja
dec
sti
mov
jecxz
mov
out
hlt
negb
inc
push
add
or
jbe
pop
insb
mov
cmpb
jl
and
imul
iret
lret
inc
aaa
outsl
adc
in
in
cmpsb
sub
cmovbe
sub
xor
or
push
adc
ss
insb
jb
cld
fwait
out
push
add
int3
and
stc
aas
fs
sti
notl
jle
sbb
test
push
cmp
push
mov
add
lcall
push
mov
pop
sbb
mov
sbb
addr16
adc
sbb
ss
and
cmp
xor
adc
push
inc
jae
mov
std
xchg
jae
pop
hlt
add
xchg
ret
aam
arpl
stos
mov
insl
jge
pop
inc
mov
jne
add
pop
or
cmp
add
cmpsb
and
xor
cmc
add
mov
mov
and
rorb
movsb
int
pop
push
push
dec
inc
js
repz
pop
sti
sbb
inc
call
in
mov
xlat
dec
sahf
sahf
and
dec
xchg
popf
mov
pop
add
mov
sarl
inc
lods
mov
fs
movsb
les
std
lahf
jecxz
sub
and
int
scas
into
xor
mov
int3
pop
pushf
mov
dec
repz
ret
int
frstor
iret
sub
xchg
jae
sub
fistl
test
xchg
rorb
shl
leave
ret
jbe
iret
jecxz
inc
cmp
insl
pop
enter
fwait
mov
xor
xor
mov
push
aaa
repz
push
test
dec
sbb
scas
loopne
adc
subl
mov
pop
pop
fildll
enter
inc
fmul
imul
lea
hlt
pop
bound
pushf
loopne
fnstenv
data16
and
fstpt
add
aam
adc
int3
mov
sub
mov
ficoml
xchg
mov
pop
test
jp
incb
outsl
pop
and
adcb
jo
les
jecxz
icebp
fidivs
subb
mov
cmp
call
dec
filds
aam
mov
add
jb
sbb
add
cli
inc
scas
out
lcall
dec
lock
sub
push
iret
mov
data16
push
ret
sarb
out
mov
rcll
in
mov
dec
test
mov
cld
push
xor
or
pop
and
ret
clc
dec
lock
dec
in
cld
and
ret
mov
pop
cmp
lret
lahf
mov
mov
cmp
jmp
inc
push
das
jae
lods
arpl
addl
ja
enter
add
sub
enter
pop
dec
push
sbb
loopne
pusha
int
dec
rorb
out
xor
add
add
fs
ja
inc
mov
loopne
cltd
stc
das
inc
lods
pop
out
xor
jl
lahf
xor
push
add
mov
test
cmp
mov
sbb
adc
inc
mov
push
push
push
and
mov
cmp
mov
shrl
dec
stos
and
loope
pop
popa
dec
add
aam
in
pop
enter
test
dec
nop
aas
inc
fwait
mov
addr16
sub
dec
mulb
iret
imulb
mov
fstps
inc
imul
or
lods
cmp
add
cli
cmpl
cmpsb
movsb
mov
lock
aas
inc
aas
push
inc
xchg
mov
mov
adcb
mov
insb
pop
mov
mov
sub
mov
stos
push
shll
jnp
test
fsub
pop
lcall
mov
icebp
cmp
sub
jae
rorb
lods
aad
test
lea
xchg
mov
loop,pn
in
mov
inc
mov
gs
icebp
sub
out
mov
pop
jecxz
int
mov
ret
mov
das
outsl
clc
xchg
mov
pop
jbe
jo
cmpsl
mov
xchg
nop
xchg
call
cmp
or
repnz
scas
arpl
cld
lret
inc
lock
cmp
or
iret
add
jb
into
idivb
decl
pushf
mov
shll
jae
int
stos
inc
clc
push
loop
push
and
cmp
lods
sub
imul
scas
pop
iret
sub
nop
or
sarb
sub
xor
cmpsb
fcomi
scas
xchg
cmp
pop
int
adcl
nop
push
pop
call
mov
mov
jno
xchg
mov
inc
lea
clc
insb
gs
aaa
push
stc
test
adc
js
daa
les
xchg
sahf
mov
addl
scas
dec
push
xlat
out
fidivrs
hlt
mov
and
int3
cmc
sbb
lock
pop
push
in
lock
pop
popf
push
int
cmp
iret
repnz
add
xor
lds
jnp
adc
push
aaa
jle
rorb
lods
movsb
sub
pusha
sbb
jmp
or
xchg
mov
ja
dec
jp
sub
mov
arpl
int3
fldcw
subb
or
cmp
dec
lcall
iret
shrl
popf
ss
std
or
mov
stos
repz
fdivrl
sbb
outsl
xchg
loope
jecxz
outsl
sub
and
dec
lock
xchg
in
lock
mov
jl
shrb
stos
stos
rolb
stos
popf
loopne
xchg
push
shrl
cmpsl
cmp
jne
add
push
movsl
jle
push
cli
push
mov
mov
push
jnp
or
roll
ret
push
dec
stos
stos
lock
and
pusha
add
call
cld
leave
mov
imul
jb
xor
arpl
push
ficomps
xor
push
or
and
mov
dec
in
enter
rcrl
incb
fwait
addr16
cmp
pop
xchg
out
scas
sub
mov
pop
stc
ljmp
popf
je
pusha
ljmp
mov
push
jg
ss
mov
sarb
xchg
mov
sub
popa
jecxz
mov
ja
xchg
jge
insl
out
testb
fnsave
int
std
push
in
popfw
jbe
inc
mov
mov
xchg
insl
out
testb
fnsave
int
std
push
in
popfw
jbe
inc
mov
mov
xchg
jge
insl
out
repnz
and
ss
std
adc
popfw
outsl
lea
lods
mov
jge
insl
out
out
cmp
leave
lods
std
push
lcall
test
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
mov
ja
addr16
push
into
inc
fcmovbe
lret
negl
out
xchg
dec
xchg
push
mov
ja
addr16
aaa
out
daa
rcl
push
push
andl
ds
pusha
xchg
outsb
cmpsl
jle
sub
ja
addr16
xchg
aaa
in
int3
xlat
push
cmp
lcall
leave
sbb
lret
add
adc
daa
mov
test
aad
xchg
xchg
push
cmp
sti
pop
sbb
inc
cmp
adc
add
icebp
jmp
outsb
push
in
xor
imul
dec
dec
and
daa
dec
push
leave
movsl
xlat
shrd
or
shlb
push
mov
adc
out
pop
ficoml
out
leave
cs
jae
mov
jp
sarl
pop
out
shll
pop
xor
push
pop
inc
lods
std
or
ss
es
sub
outsb
into
sbb
repz
jg
xor
xchg
add
incl
clc
mov
sbb
add
ja
addr16
aaa
out
daa
insb
xlat
push
mov
sub
add
jbe
dec
adc
add
jnp
dec
mov
fwait
mov
ret
outsb
xchg
mov
xor
sbb
pop
push
enter
fldl
rclb
imul
lds
jl
push
repnz
pop
lds
cmpsl
or
push
ret
pop
addb
aaa
out
daa
xlat
push
push
imull
out
xchg
dec
xchg
outsb
cmpsl
jle
mov
ja
addr16
aaa
out
daa
xlat
push
push
imull
out
xchg
dec
xchg
outsb
cmpsl
jle
mov
enter
push
int
stos
xlat
mov
sarl
mov
push
test
in
ss
xor
lret
adc
movsl
pop
es
insl
outsb
cmp
cmp
push
rcrb
repnz
loope
push
fnstsw
cwtl
aam
adc
ret
lcall
and
cmpsb
mov
cmp
jno
xchg
insb
and
aas
pop
shrl
sbb
ret
sbb
dec
int3
mov
sub
and
fldcw
sti
add
adc
pusha
pusha
mov
xor
sbb
push
loopne
in
clc
in
sub
push
das
clc
mov
fidivrl
subb
jg
push
jp,pn
lret
pop
xchg
add
xor
pop
mov
jecxz
out
push
dec
mov
sbb
rcl
imul
addr16
ljmp
lods
pop
mov
or
notb
dec
mov
fstpt
inc
pop
ret
out
push
mov
jns
outsb
bound
loopne
mov
movb
shlb
or
aaa
imul
rcl
mov
mov
clc
cmp
cs
in
stos
out
es
loop
push
hlt
cmp
and
add
out
jb
xchg
push
aaa
xchg
jnp
pop
imul
je
jns
xor
push
cmp
loope
sub
shll
rorl
jo
mov
push
rclb
pop
push
div
popa
adc
pop
cltd
mov
add
sbb
in
aaa
cwtl
idivl
orb
loopne
int
rclb
cmp
mov
andb
test
pop
add
repnz
pusha
or
inc
fsubs
mov
pop
dec
push
cmpsl
push
mov
xor
add
dec
pop
jl
hlt
cs
mov
outsl
jb
shrb
adc
cmp
aad
cmp
pop
outsl
outsl
ror
pop
inc
repnz
aam
je
jmp
loop
pushf
mov
insb
mov
push
add
dec
xor
repnz
pop
idivb
pop
mov
pop
stos
sub
mov
pop
rcrb
out
outsl
bnd
outsb
cmp
test
pop
out
xchg
lahf
scas
cmp
aad
push
xor
lret
idiv
das
mov
test
insb
add
lahf
or
adc
adc
es
or
xchg
test
jl
aad
daa
aam
ffree
into
lea
lcall
xchg
push
add
push
pop
sub
test
iret
jecxz
cmp
cmpsb
add
jecxz
enter
push
adc
xor
arpl
push
lods
sub
cltd
fbld
stos
scas
test
scas
cmpsb
dec
or
call
popf
adc
cs
or
mov
adc
fs
pop
jl
fs
and
dec
xchg
dec
inc
je
pop
jle
repnz
nop
or
pop
push
sbb
add
lcall
stos
adcl
push
sbb
loope
fiaddl
outsb
arpl
lret
inc
cli
fadds
and
jecxz
mov
push
in
add
xor
pop
jle
call
rclb
or
lods
or
inc
sarb
adc
fwait
cltd
mov
mov
xchg
inc
movsl
jne
jns
lret
jbe
xchg
fsubs
cmp
cwtl
cli
push
in
cld
inc
pushf
dec
xor
dec
test
js
mov
sub
pop
dec
addb
cs
jne
adc
push
inc
jge
ret
xchg
bound
cwtl
fldt
dec
jecxz
in
jl
insl
mov
dec
bound
arpl
gs
xor
pop
nop
jmp
in
cld
lret
mov
lods
add
mov
inc
pop
xor
fdivrl
test
movsb
xchg
and
push
clc
mov
movsb
inc
repz
mov
lock
out
fisttpl
push
push
xchg
comiss
cmp
adc
mov
pushf
fimuls
sub
inc
in
fwait
xor
pop
mov
mov
test
inc
mov
jl
inc
popl
fidivs
mov
xchg
fsubrp
inc
aas
pop
inc
sbb
out
push
xchg
popf
pop
jle
out
add
aas
jo
mov
sbbl
push
adc
mov
fwait
mov
jno
dec
mov
mov
imul
xchg
test
mov
inc
faddp
mov
aaa
mov
xorl
lock
pop
or
mov
mov
pushf
scas
aaa
sub
pushf
pop
roll
push
data16
sub
ja
mov
int
repnz
dec
cmc
jno
lcall
add
pop
sbb
sti
pop
lods
cmp
clc
sbb
push
sub
fldt
gs
cmp
sub
lcall
aas
push
and
scas
addl
xor
add
xchg
lods
push
adc
outsl
bound
test
sbb
test
push
or
push
call
ror
cmp
cli
dec
and
into
pop
shll
stos
adc
sub
ljmp
daa
rcrb
faddp
lcall
lds
loope
repnz
jno
xor
jmp
je
imul
cwtl
mov
mov
jge
pop
mov
adc
in
popl
sahf
sub
inc
call
nop
loope
into
push
xchg
enter
in
leave
dec
sbb
push
clc
jle
push
js
scas
pop
mov
out
rolb
stos
fsubr
rol
jne
pop
cmp
loope
xchg
iret
push
jecxz
mov
or
cli
mov
mov
inc
cli
adc
fsts
mov
pop
pop
stos
pusha
out
bound
stos
pop
into
into
dec
insb
pop
mov
outsb
jl
or
stos
inc
ret
xor
xchg
subb
mov
push
sahf
les
dec
stos
xorl
repz
cwtl
test
xor
push
pop
rorl
mov
jbe
fiadds
xor
pop
mov
lahf
insl
je
das
jns
xchg
sub
mov
mov
mov
dec
sub
jge
pop
scas
jg
dec
mov
adc
outsb
xchg
or
dec
inc
fisubrs
jg
and
insl
pusha
iret
frstor
push
and
or
in
inc
pop
out
outsl
shrb
mov
adc
and
jecxz
inc
push
cmpsb
out
pusha
roll
addr16
sbb
push
mov
jo
add
jno
ss
gs
mov
es
stos
and
cmp
lcall
or
pop
in
stc
mov
frstor
insb
stc
lods
sbb
fbstp
jbe
enter
push
stos
mov
aam
scas
clc
pushf
xlat
lods
xor
cmp
inc
in
fisubrs
scas
mov
cltd
leave
leave
xchg
pop
cmp
mov
sbb
push
dec
or
loope
data16
mov
mov
mov
cs
mov
outsb
push
lret
ret
dec
pop
mov
jb
loopne
fcoms
dec
aam
es
push
in
mov
push
pop
cmp
xchg
test
in
cmpsb
pushf
push
scas
mov
pop
pop
inc
jb
sub
add
xchg
das
fdivl
push
cltd
xchg
or
pop
dec
fbld
sub
movsb
cs
cmpsl
jle
fsubs
push
fstps
fxch
int3
pop
xor
or
xor
popf
mov
mov
rcr
jo
ljmp
push
push
sub
into
add
iret
or
daa
loope
inc
pop
mov
lds
sarl
shlb
mov
xchg
sti
loope
nop
jecxz
inc
jmp
shl
aad
jo
test
sub
into
fdivr
dec
xor
jbe
xchg
mulb
dec
scas
pop
add
dec
out
sub
stos
xlat
cmpsl
and
cli
aam
add
sbbl
push
xchg
push
push
cmpsl
mov
lock
pop
sbb
fcoml
sahf
aad
mov
jb
push
ficoml
add
mov
loopne
cli
ret
icebp
leave
xor
addr16
and
addr16
lret
or
leave
insl
popfw
aad
in
fldt
sbbb
sub
out
xor
flds
arpl
iret
loopne
sub
loop
mov
sbb
es
mov
mov
jbe
or
lcall
mov
fwait
icebp
not
sub
sub
mov
add
stc
inc
add
pop
push
in
dec
enter
mov
jle
cmpsl
aas
dec
sti
out
sub
inc
js
clc
clc
notl
sub
gs
cmp
sbb
pop
push
repz
sbb
jb
jnp
mov
popa
mov
xchg
adc
inc
mov
jno
xchg
cli
leave
stos
in
mov
stos
test
sbb
xor
push
repnz
cmp
repnz
xor
inc
je
pop
push
mov
jnp
loope
fnstsw
cmp
into
pop
sahf
lods
dec
xchg
sub
pop
mov
out
scas
mov
jmp
sbb
cmp
jmp
or
or
je
in
rcll
imul
jns
aaa
orb
movsb
inc
cmpsl
sahf
dec
push
jl
xchg
cmp
fs
push
and
lods
clc
dec
mov
roll
sub
cs
lahf
push
or
push
jae
iret
jge
daa
jbe
mov
inc
push
loope
jne
jnp
inc
hlt
push
cli
add
adc
adc
xor
mov
sub
xor
adc
mov
pop
ret
test
rorl
jbe
ficompl
dec
cwtl
aam
addb
push
cmp
dec
in
mov
sub
dec
mov
xchg
int3
jg
std
std
jle
push
xlat
adc
mov
outsb
dec
hlt
jnp
repnz
dec
roll
and
rolb
push
jge
in
imul
ja
daa
pslld
cmp
in
mov
mov
pop
jb
and
rorl
sub
bound
jle
cmp
cmpsb
cmpsl
inc
or
pop
sbb
xor
sbb
ret
jmp
sbb
subl
jb
ret
push
dec
cmp
fwait
rcrl
fwait
scas
mov
lock
test
xor
or
out
mov
outsb
js
lods
push
outsb
xor
cmp
mov
sub
mov
mov
jmp
test
add
push
add
cli
and
adc
xor
mov
jecxz
movsb
mov
in
or
jae
call
and
insl
addr16
pop
jmp
fsubrl
call
in
mov
xlat
mov
in
mov
cmp
push
arpl
push
loopne
xlat
or
cmp
xchg
popf
das
cs
das
and
pop
hlt
shlb
aaa
and
out
pop
aad
jne
movsb
sbb
mov
into
mov
jl
outsl
popl
and
adc
sbb
je
adc
adc
aad
xchg
test
adcb
push
mov
add
shlb
dec
mov
ret
mov
adc
sti
inc
fiaddl
pusha
jbe
push
popf
jnp
push
push
xchg
add
imul
mov
aas
mov
aad
fnsave
xchg
xor
inc
scas
xor
jmp
inc
rcll
pop
mov
jmp
jo
jns
scas
push
aam
jl
test
scas
cmc
inc
sar
mov
iret
out
jecxz
fdivl
mov
cmp
inc
inc
cmp
daa
fisubrl
mov
cmpsl
pmaddwd
mov
adc
and
test
enter
xchg
cmpsb
sahf
push
mov
sbb
mov
adc
loopne
pop
cmp
jge
sub
clc
mov
add
fucomp
add
inc
push
in
mov
mov
popa
lods
sbb
data16
push
mov
push
or
imul
ret
rcl
jbe
sbb
sti
test
in
cmp
hlt
iret
outsb
std
je
in
xor
push
xchg
js
inc
sub
fwait
aas
cwtl
cs
cltd
mov
and
sbb
jl
jge
add
jle
sbb
fstpt
mov
loopne
jge
jge
aas
mov
pusha
rcrl
imul
shrb
xor
fbstp
mov
jb
and
inc
pushf
jge
jmp
push
and
dec
dec
fsubl
cs
in
sub
scas
into
dec
mov
inc
mov
out
clc
bound
push
stos
jns
pop
rcrb
fcoml
test
pop
out
ljmp
repz
pop
inc
xchg
repnz
jle
lds
jno
xchg
mov
fstps
push
mov
imul
pushf
inc
pop
loop
cmpsl
push
mov
mov
imul
lods
or
pop
xchg
adc
cmp
lds
inc
cmp
xor
lds
outsl
data16
orl
jmp
adc
xor
in
fisubl
mov
addr16
jmp
jnp
jle
int3
push
test
insb
sbb
dec
call
in
scas
rolb
mov
test
out
test
outsb
add
insl
idivb
call
push
sub
adc
jb
scas
aam
xorl
adc
fmull
pop
adc
pop
pop
icebp
pop
inc
push
cmpsb
out
out
or
cld
pushf
lods
out
jge
xchg
pop
ss
sarb
cld
dec
repnz
mov
leave
testb
mov
jbe
inc
sbb
push
mull
push
sub
roll
jge
add
jmp
mov
xchg
enter
div
faddp
jge
push
out
into
imul
inc
mov
sahf
xchg
imul
test
dec
movsb
pop
or
xchg
fdivs
aaa
hlt
mov
int
pop
or
pop
sbb
mov
loop
outsb
add
rolb
ljmp
or
arpl
add
xchg
push
in
push
lahf
lods
test
adc
dec
mov
out
mov
push
inc
lods
cmp
int3
fcoms
add
in
push
jae
xor
push
cmpsl
cmp
pop
in
dec
incb
insb
cmpsl
jo
out
sub
out
pop
inc
jne
sbb
push
cltd
push
jne
stos
hlt
xlat
and
pop
fildl
jmp
std
lahf
or
add
hlt
adc
pop
push
push
push
stos
stos
mov
cwtl
fidivrs
mov
lds
repnz
jae
mov
sbb
pop
sub
dec
inc
test
lahf
xor
lcall
and
adc
push
add
addl
daa
sub
bound
mov
out
outsl
add
lock
outsl
add
sarl
imull
in
insb
push
sub
bound
lea
loop
mov
repnz
insl
inc
jne
stos
cli
pop
sbb
test
stos
cwtl
jp
rcrb
imul
dec
call
sti
cwtl
push
fcomps
push
ds
jno
push
popa
push
mov
xchg
es
add
push
clc
sti
in
sub
sbbl
add
cmp
movsb
sbbb
imul
imul
inc
int
ds
mov
imul
cmp
and
mov
imul
arpl
xor
in
insb
dec
mov
scas
lahf
in
es
adc
and
pop
cmpsl
mov
pop
add
cmp
push
rol
test
sti
inc
pop
or
jns
or
fisubs
divl
mov
rolb
mov
fcomi
inc
dec
hlt
add
and
fdiv
negb
adc
adc
shlb
pop
cmp
or
sbb
nop
inc
sahf
cmp
pushl
cmp
mov
dec
fs
in
test
popa
hlt
int3
test
adc
or
pop
jmp
lods
popf
mov
nop
daa
xor
push
pop
dec
jl
out
clc
cmpsb
sbb
data16
fistpl
dec
xor
xor
sbb
insb
sub
mov
sub
shlb
inc
cli
in
ljmp
and
mov
imul
push
das
sub
pop
test
push
adc
out
outsb
ret
arpl
lret
jecxz
rorb
aaa
push
inc
jno
xor
jnp
pop
dec
sbb
cmp
fimull
int3
scas
xchg
mov
or
inc
ds
movsb
lds
lods
rcl
dec
stc
sbb
push
jecxz
jo
xchg
cltd
orb
and
fisttpll
out
jne
xorl
loopne
adcb
and
push
push
mov
or
test
loopew
call
les
out
cmpsb
mov
xlat
int3
mov
into
sub
mov
sbb
xlat
sub
adc
movsb
in
mov
roll
push
idivb
les
fcmovnu
aad
jl
repz
xor
dec
or
icebp
movsb
xchg
scas
xchg
call
pusha
pop
mov
insb
lcall
call
pop
sbbl
sub
andl
mov
sub
xchg
push
stos
pop
sub
pop
mov
dec
das
inc
sbb
and
fsubrs
xchg
in
jb
int3
mov
test
and
repz
popa
xchg
out
outsl
pop
inc
sub
addr16
lods
lret
cmp
add
mov
std
aam
in
pop
sti
pop
mov
insb
mov
mov
push
scas
test
lahf
int3
aaa
aaa
roll
ret
jmp
ss
pop
push
roll
shll
xchg
mov
in
shrb
xor
clc
mov
inc
sub
mov
push
in
xor
and
mov
push
out
fcmovnbe
xchg
js
sbb
dec
je
pop
sub
mov
cmpl
add
aam
xchg
adc
mov
cmp
xchg
mov
arpl
pop
ja
xor
dec
sbb
shll
push
imul
adc
outsl
ja
xlat
pop
push
jl
sbb
fwait
lods
inc
mov
orl
sub
dec
repz
xchg
push
aaa
inc
test
fwait
jae
ljmp
inc
rorl
sbb
cltd
add
and
ret
ret
mov
scas
daa
fstpt
shl
mov
and
pusha
es
mov
jmp
inc
rcrl
mov
jno
inc
popf
mov
mov
jns
mov
cmp
push
and
cmp
push
cs
jns
inc
mov
int3
adcb
clc
test
mov
dec
addb
mov
jae
push
loopne
ret
mov
stc
inc
lahf
in
ljmp
call
cmpsb
mov
std
sbb
adc
adc
xor
or
jo
outsb
sbb
leave
loopne
shl
subb
push
pop
xchg
inc
jl
mov
or
aas
push
dec
cmpsb
lods
negb
and
mov
mov
inc
mov
and
ffree
mov
cwtl
cwtl
ja
add
idiv
cs
jbe
pop
xor
rcl
add
lahf
pop
adcl
mov
mov
add
and
roll
popa
fcmove
dec
xor
outsl
sub
test
cmpsb
push
xchg
stos
pop
stos
sti
inc
xlat
mov
les
cltd
scas
mov
sarl
ss
adc
or
xchg
js
ljmp
cmp
ds
hlt
out
xchg
xor
idiv
mov
add
pop
pop
jae
call
cmpsb
ljmp
leave
or
xchg
cld
add
adc
ljmp
jecxz
mov
ret
and
mov
sti
push
adc
mov
jno
mov
jmp
into
test
push
inc
cmp
pop
pop
aad
xor
clc
into
sub
push
pop
xchg
pop
adc
add
fdivl
mulb
mov
cwtl
test
xchg
daa
dec
loopne
daa
jae
lods
xchg
jle
or
orb
mov
bswap
lea
in
and
cmp
or
pushf
ljmp
subl
xchg
mov
mov
into
fsubrs
clc
fcompl
sbb
pop
pusha
mov
push
xor
notl
add
add
outsl
insb
jae
and
test
dec
jne
fnstsw
gs
and
add
mov
imul
or
mov
arpl
ja
inc
stos
xchg
fisttps
pop
bound
decb
test
or
gs
dec
xor
and
aaa
or
and
xor
jb
call
xchg
mov
aas
sbb
rol
sbb
dec
imul
idivl
mov
scas
mov
aad
fcompl
xchg
jmp
push
insl
mov
clc
cmpsl
cmpb
enter
adc
xchg
push
xor
jb
daa
cmp
rorb
aaa
mov
lahf
pop
xchg
xor
outsl
pop
push
pop
idivb
pusha
jle
push
dec
lea
in
rcll
xor
cmp
jp
fcompl
test
cmpsb
push
mov
dec
notl
xchg
push
call
cmp
aas
add
aaa
out
mov
leave
sti
stos
xchg
gs
pop
out
test
xchg
stos
addr16
aaa
out
daa
xlat
push
push
imull
out
xchg
dec
xchg
outsb
cmpsl
jle
mov
ja
addr16
aaa
out
daa
xlat
push
push
imull
out
xchg
dec
xchg
outsb
cmpsl
jle
mov
ja
addr16
aaa
ljmp
imull
out
xchg
dec
xchg
cmpsl
lcall
addr16
pop
into
pop
fidivs
outsb
daa
xlat
icebp
mov
cs
loopne
dec
push
pop
push
out
sbb
or
cmp
sub
adc
mov
pop
mov
psubb
call
iret
cmp
sub
js
sbb
xchg
jg
dec
mov
ds
pop
call
iret
and
xor
pusha
lahf
jb
cwtl
pop
stos
aas
sarl
das
xchg
dec
mov
fwait
push
sahf
js
pop
mov
mov
fwait
adc
cmpsl
inc
push
lds
pop
stos
mov
pop
pop
xchg
add
add
scas
sub
xchg
shll
jbe
call
aas
xchg
pop
or
adc
ja
shrl
inc
dec
shlb
rcr
push
jge,pn
jno
clc
pop
lods
out
inc
fdiv
or
fdivrs
pop
inc
pop
or
in
lahf
js
jbe
inc
mov
dec
testl
jp
dec
and
lahf
cmp
outsb
fs
ret
adc
mov
insl
shl
pop
jl
shlb
test
xor
sub
cmp
lock
mov
lock
sub
cli
sbb
sbb
and
sub
js
jno
cwtl
jg
dec
mov
aas
rorb
loop
jmp
mov
dec
lret
sub
adc
or
cmp
sbb
test
xchg
outsl
test
dec
sahf
inc
lret
push
lret
pop
sbb
fstpl
fsubrs
jne
mov
decl
mov
ljmp
push
dec
mov
aas
enter
call
iret
cmp
sub
js
push
dec
mov
aas
enter
call
push
mov
dec
fbstp
lods
je
mov
push
or
mov
sbb
leave
mov
ja
mov
inc
push
fbld
cli
in
inc
xor
xchg
add
sbb
mov
popf
mov
popf
movsl
xchg
add
sbb
and
and
sub
jo
imul
sbb
push
imul
inc
push
scas
arpl
nop
jnp
cltd
mov
fstpl
cld
into
pusha
xlat
lods
xchg
scas
push
fnsave
leave
fs
fldcw
pop
inc
sbb
jge
fs
insl
scas
push
movsb
xor
xchg
sub
and
sti
fdivs
outsl
enter
cwtl
sti
pop
shll
dec
push
or
push
jbe
mov
cmpsb
loope
adc
mov
mov
fs
pop
imul
jg
mov
or
cwtl
mov
out
mov
adc
or
add
fstp
add
stos
sarb
call
popf
mov
mov
add
movsl
push
int3
or
mov
mov
clc
inc
jno
lret
je
push
aam
pop
mov
inc
pop
mov
jg
jbe
sub
adc
clc
icebp
xor
adc
mov
rcrl
xchg
lahf
pushf
dec
mov
lea
aam
movsb
jp
mov
jle
cld
pop
inc
sar
cmp
jle
ret
cmp
pop
lcall
ret
push
lods
xchg
add
dec
xchg
push
gs
xchg
xor
and
jno
push
lahf
dec
pop
mov
mov
mov
xchg
adc
ss
data16
jp
dec
das
out
mov
adc
xchg
imul
std
pop
jno
das
adc
sub
push
xchg
outsl
lods
jbe
or
and
loope
cwtl
imul
xchg
mov
loop
jp
push
nop
stc
lahf
push
je
rcrl
das
testl
dec
pop
add
jmp
or
test
jno
mov
mov
mov
mov
loopne
cltd
sub
mov
add
daa
jno
mov
sub
pushf
repz
cltd
mov
pop
andl
inc
shl
test
xchg
stos
js
stos
add
pop
inc
shr
out
loopne
fldcw
pop
clc
lret
adc
and
cli
movsb
shrb
lidtl
leave
or
pop
daa
cltd
notl
scas
add
pusha
xor
into
sahf
mull
pop
cmp
adc
test
in
cmp
movsb
and
mov
xchg
mov
in
pop
sbb
lea
cld
scas
cltd
addl
pop
sarl
in
popa
aaa
push
insl
mov
mov
jge
and
dec
jge
cmc
mov
popf
push
jns
enter
and
xor
mov
std
push
out
call
std
mov
clc
lea
xchg
movsl
daa
insb
movsb
je
and
push
push
xchg
mov
lret
add
sbb
sbb
jno
inc
jo
mov
xlat
or
dec
sbb
inc
lock
sbb
mov
scas
clc
cwtl
mov
movsl
aam
xchg
lahf
lea
scas
jne
push
sahf
xchg
cmp
inc
inc
add
cmpsl
les
pop
xchg
testl
ret
sbb
push
aaa
jns
shr
int3
and
push
dec
add
mov
jmp
std
adc
mov
pop
sub
inc
rcrl
pop
fstpl
push
jae
mov
insb
hlt
or
jbe
fnsetpm(287
addb
ja
jbe
add
add
pop
int
mov
xchg
bnd
mov
bound
mov
nop
mov
xor
push
and
fwait
and
jnp
test
xchg
fldl
loope
mov
pop
cmp
jl
cmp
sbb
xchg
push
icebp
mov
sub
pop
gs
or
popa
add
xor
adc
clc
push
mov
cwtl
js
rol
stc
dec
shll
sub
or
fiadds
and
ljmp
pushf
dec
dec
scas
pop
in
fcomps
ret
daa
sbb
mov
popf
dec
ja
test
xor
mov
or
out
xchg
js
jne
cs
insl
data16
mov
sbb
jp
jbe
outsb
cmp
popa
in
icebp
pop
je
mov
test
sbb
das
push
inc
xchg
cltd
hlt
push
inc
int
mov
adc
mov
dec
cmp
xchg
mov
mov
xchg
mov
cli
shl
pop
sahf
out
lods
andl
sub
sbb
lods
xchg
leave
add
adc
lods
add
mov
fisubl
cltd
jne
cli
dec
data16
fsub
in
adc
cmp
in
cmp
hlt
jae
mov
xchg
sub
jb
or
sub
js
inc
ljmp
xor
pusha
addb
call
push
dec
jle
mov
scas
cmpsl
pop
movsb
in
out
in
in
add
pop
dec
mov
popf
sbb
aam
xor
dec
lcall
mov
test
idivb
outsl
mov
icebp
inc
or
pop
jbe
out
sbb
fidivrl
scas
leave
int3
and
add
and
fnstenv
aam
pop
dec
loopne
sub
xchg
lret
jg
test
fildll
pop
jns
lcall
lret
or
adc
pop
inc
aas
xor
mov
and
or
stc
iret
pop
movb
add
mov
popa
pop
notb
test
cmp
scas
inc
std
xlat
cwtl
lret
jnp
rol
dec
insl
lahf
add
in
xor
in
iret
lods
mov
sbb
xor
shll
aam
sahf
push
add
inc
fdivrl
movsl
adc
or
and
fisubl
pop
lds
nop
mov
mov
stos
insl
push
test
pop
into
and
mov
push
cwtl
cmp
fists
call
lods
and
jge
fistl
xor
nop
mov
das
cs
scas
iret
cmpb
add
testb
push
add
sbb
mov
jne
mov
and
sub
add
push
jecxz
ds
or
mov
push
adc
cmp
push
xor
inc
add
lods
cwtl
loope
fidivrs
les
out
cs
lods
pop
ss
cmpsb
fcmove
mov
mov
sub
fwait
or
sbb
mov
inc
cmp
xchg
inc
les
nop
ds
dec
fiaddl
cmp
mov
cli
data16
lea
sti
insl
pop
push
repnz
mov
icebp
sub
das
jecxz
inc
ret
pushf
bound
xchg
pop
jecxz
enter
cmp
filds
adc
popf
cmpb
int3
xchg
sarb
jbe
inc
lea
adc
mov
aad
push
shrb
push
or
dec
cmc
and
cmpps
cmp
and
xlat
jns
imul
inc
in
ja
push
jne
sbb
add
xchg
test
mov
jnp
scas
dec
xor
lret
xchg
test
push
rcrl
dec
pop
pop
sub
and
xor
sub
inc
or
out
sub
sbb
xor
xchg
and
or
push
fsub
int3
and
daa
mov
mov
in
or
xchg
sub
bound
aam
scas
popa
mov
cmp
inc
test
inc
testb
cmpsb
adcl
xchg
or
je
jl
mov
or
pop
and
decb
add
push
push
mov
and
out
add
cmp
das
pop
les
add
jb
outsb
loope
ss
ja
scas
ljmp
add
loope
adc
inc
in
and
cmp
fdivs
push
pop
das
fcom
cmp
sub
leave
mov
repz
adc
adc
dec
and
addr16
pop
fstpt
in
mov
push
mov
call
ficoml
mull
sbb
int3
pop
not
xor
popaw
ds
mov
scas
jmp
cmpsl
pop
ja
hlt
les
mov
movsl
xchg
push
adc
sub
mov
and
or
add
pushf
jnp
push
repnz
das
pop
jne
mov
cmc
out
out
inc
xchg
inc
pop
dec
cmp
mov
xor
gs
or
dec
pop
mov
test
jns
outsl
mov
nop
xor
mov
add
shrl
fimull
popa
sbb
and
mov
lock
xchg
ljmp
and
insb
dec
inc
out
sbbl
mov
stc
in
adc
loopne
cmpsl
cmp
and
mov
add
dec
inc
inc
jo
xlat
out
std
cmpb
mov
andl
inc
iret
int
mov
js
dec
add
into
bound
popa
fcompl
out
mov
arpl
sub
int3
inc
xor
add
iret
mov
push
imul
test
or
aam
lock
sbb
mov
cmpsb
aaa
repnz
shlb
and
xchg
mov
cmpsb
insb
mov
mov
sti
pop
sahf
es
das
pop
fwait
popa
cmpsl
cwtl
sbb
or
ss
dec
add
jae,pn
in
push
out
leave
mov
xorl
add
ret
xor
mov
and
xor
je
jns
mov
mov
jbe
or
dec
and
loopne
gs
test
xor
cs
push
mov
jge
loope
cmp
bound
pop
ret
clc
sbb
inc
jg
jno
jae
repz
pop
popa
ret
lds
lods
imul
in
hlt
insl
in
xchg
cltd
icebp
gs
jg
mov
and
jecxz
ss
jae
add
jae
sbbl
lds
jne
add
cwtl
lds
aad
xlat
push
lods
pusha
jp
leave
cmp
push
hlt
divb
push
out
push
or
mov
jle
jecxz
jne
dec
sti
ds
mov
das
loope
jae
jnp
je
cmc
mov
rcl
xor
ret
popl
int3
mov
dec
iret
sbb
dec
imul
sbb
jp
pop
sub
xlat
mov
add
push
jo
aaa
cmp
roll
pop
mov
aad
daa
push
cld
aad
sbb
mov
jns
or
lds
cmp
shl
movsb
movsb
pop
or
pop
test
aad
cld
dec
iret
xchg
cmpsb
mov
shrl
xor
rorl
negb
xor
push
push
daa
push
dec
push
test
test
fs
inc
xchg
outsl
int3
jb
sub
pop
imul
sbb
lods
les
divb
jge
xchg
stos
in
dec
lcall
or
lret
popf
add
adc
fdivrp
push
inc
xor
sbb
cmc
rcr
cmpsb
sub
cmp
and
outsb
lods
out
sbb
inc
dec
push
and
and
inc
add
mov
dec
mov
loopne
rcrb
mov
push
push
mov
pop
inc
rorl
sbb
xchg
pop
nop
daa
nop
mov
cmpsl
daa
adc
xchg
sub
jns
inc
sub
aas
xchg
mov
aam
sbb
outsb
xlat
fstp
insl
negl
icebp
xor
loope
sbb
lret
sub
sub
leave
les
insl
xor
call
cld
mov
xchg
pop
dec
hlt
pop
xchg
push
movsl
cltd
sbb
test
out
and
xchg
inc
push
fisttpll
xchg
pop
jo
and
mov
jo
ret
xchg
cld
and
xorl
mov
pop
clc
mov
mov
sbb
jbe
jnp
push
stc
call
pop
enter
call
mov
or
mov
iret
mov
sahf
and
ficoml
pop
dec
and
xchg
cmc
clc
push
daa
or
dec
cmp
pop
and
sbb
pop
mov
rorl
or
mov
or
mov
dec
sbb
roll
push
cltd
or
adc
shll
enter
or
jle
jns
inc
xor
addb
xchg
and
sar
rorl
xchg
push
pop
and
xor
xlat
pop
pop
inc
add
call
ja
ret
stc
sub
pop
adc
in
out
out
lret
xlat
movsb
in
aam
out
cmp
fldcw
xor
test
mov
icebp
je
mov
sub
fs
jg
cmpsb
pop
cs
pop
dec
jns
mov
push
ja
cmp
faddl
addb
lcall
aaa
out
andl
repz
mov
mov
je
jbe
imul
in
mov
sbb
sbb
mov
cmp
movsb
and
fcmovbe
inc
cltd
add
dec
cmp
setl
clc
sub
pop
push
stos
outsb
out
fmuls
add
add
dec
jno
sub
ljmp
hlt
je
fisttps
xchg
adc
mov
aas
mov
sahf
leave
pop
repz
repnz
jmp
inc
dec
fsts
int
icebp
icebp
cmc
xchg
pop
std
fcomp
fimull
mov
mov
push
in
xor
mov
sub
fisttpll
mov
pop
sbbl
dec
add
and
mov
insb
mov
lcall
sbb
and
ret
call
or
loope
adc
mov
jl
int3
inc
aas
xchg
loope
std
mov
mov
sarl
or
lock
out
xor
inc
cltd
xchg
int3
mov
sbb
scas
ljmp
das
xor
or
push
xor
or
test
sub
pushf
lods
add
inc
jae
js
add
dec
push
xor
cmp
mov
jl
jne
sbb
adc
addl
cli
ja
in
push
int
mov
lea
fimuls
mov
push
hlt
clc
test
mov
dec
lods
in
shll
mov
adc
xchg
jl
pop
and
mov
or
cmp
xor
in
out
scas
shll
mov
push
mov
in
aas
add
dec
sub
jp
mov
bound
dec
cli
xor
jbe
arpl
sub
add
cwtl
sub
mov
pop
mov
lods
data16
jo
sbb
aaa
cltd
sub
jmp
mov
adc
sub
je
hlt
push
hlt
mov
or
fnsave
ljmp
out
mov
push
jae
leave
mov
xchg
jb
jne
icebp
xchg
outsb
iret
icebp
mov
loop
cmp
loop
pop
push
sub
icebp
add
les
aam
xor
in
pop
cmp
int
inc
js
rol
jne
and
push
std
push
xchg
push
push
call
ljmp
xchg
aad
stos
ljmp
or
hlt
push
inc
dec
dec
sbb
jge
cli
or
xor
out
mov
cmc
adc
jp
inc
sub
xchg
insb
aam
sub
inc
js
sub
pop
loopne
adc
les
in
inc
and
movsb
xchg
je
or
into
jecxz
inc
add
dec
sarb
aad
std
pushf
hlt
pop
and
lret
iret
dec
cmc
adc
or
cmp
std
movsb
cmp
pop
dec
call
dec
in
and
dec
pop
jo
dec
repnz
daa
push
lret
lret
fcoms
bswap
push
adc
xor
std
mov
int
sahf
jae
andl
aaa
loopne
les
jb
dec
shrl
shl
mov
dec
sbb
stos
or
jmp
movsb
cwtl
nop
and
out
andb
and
and
or
lods
popl
ret
inc
push
stos
dec
inc
or
pop
stos
scas
mov
jbe
inc
mov
adc
cltd
cli
fcoms
jecxz
sarb
sub
cmpsb
cmp
pushf
stc
cltd
mov
push
mov
test
leave
push
movsb
imul
jge
lahf
popf
jge
mov
pusha
inc
movsl
jl
sbb
inc
dec
cmp
push
aad
sub
popa
jg
pop
in
xchg
repnz
mov
jge
and
pop
mov
aam
and
mov
sbb
dec
add
pop
sub
cmp
rcr
imull
es
mov
jmp
out
add
dec
pop
call
icebp
inc
jno
cmc
cld
jl
icebp
push
pop
mov
push
push
out
div
imulb
mov
inc
mov
outsl
push
push
mov
gs
aas
sub
add
mov
lahf
je
stos
jb
movsb
push
inc
jnp
and
jno
lret
popa
pop
in
loopne
pop
sarl
pop
xchg
mov
mov
push
lea
ljmp
in
inc
xchg
loopne
or
mov
lahf
scas
je
cmp
lods
stc
pop
pop
pop
cmc
xor
push
mul
xchg
ss
in
imul
cmpsl
push
daa
inc
jno
sbb
lock
dec
add
adc
test
pop
out
test
sbb
mov
pop
or
xor
mov
sub
jb
add
lret
enter
out
and
clc
sbb
std
jae
pop
fs
ja
sti
cmp
les
mov
std
loop
aad
insb
xchg
into
fildll
imul
test
loop
mov
loopne
insb
xor
pop
stos
mov
push
popf
insb
xchg
aam
xchg
iret
testl
mov
aas
xchg
int
lahf
ss
dec
fimull
fwait
or
inc
mov
jnp
lret
xchg
xlat
sbb
mov
cmp
lret
out
sub
add
pop
and
cwtl
mov
inc
subb
xchg
add
roll
mov
and
and
insl
cmp
faddl
xor
xchg
popa
repz
xlat
bound
pop
lcall
sub
inc
paddb
cmp
cmp
cltd
xor
mov
or
adc
clc
jmp
sarl
xor
pop
loopne
mov
dec
mov
scas
sahf
adc
mov
lock
jbe
jmpw
loop
stos
lret
imul
xor
fistl
fists
out
inc
sti
outsb
jo
subl
lds
movsb
or
push
jmp
call
loopne
movsb
stos
rclb
mov
sahf
imul
jle
add
xchg
add
fidivs
inc
and
lods
push
rolb
inc
mov
pop
pop
gs
or
je
push
inc
push
out
mov
mov
and
por
xor
mull
mov
xchg
jb
jno
xchg
or
mov
mov
dec
mov
lret
xor
popf
lret
mov
mov
fsubrl
cwtl
inc
shl
dec
mov
or
data16
sub
test
pop
lods
or
loopne
fsubrs
jnp
lods
sub
mov
inc
or
ja
ret
mov
sbb
add
out
outsl
test
out
add
add
jne
mov
xchg
leave
sub
lock
icebp
add
daa
rorl
jle
inc
ror
test
neg
test
out
pop
icebp
cld
mov
xchg
jo
repnz
stc
mov
cmp
jp
sub
jp
or
in
in
outsb
xor
fs
insl
push
cmp
sub
ljmp
mov
scas
mov
inc
or
mov
lret
or
jo
mov
push
mov
mov
mov
cltd
sbb
push
push
dec
cltd
insb
loope
xchg
lret
mov
push
lea
and
imul
lcall
xor
jl
push
mov
cmp
cmp
ja
inc
stos
pop
xlat
outsl
faddp
and
xchg
xor
fnstsw
pop
mov
pop
jo
ja
adc
mov
imul
push
or
cmpsl
out
cli
push
nop
out
std
adc
bts
js
rol
sahf
test
nop
data16
out
out
loope
out
imul
shl
pop
xor
pop
imul
mov
aad
cmp
dec
mov
xchg
ds
jecxz
xor
mov
push
xor
loopne
jmp
inc
cltd
adc
mov
pop
inc
mov
jp
mov
lret
mov
or
repnz
jge
scas
xchg
pop
sbb
out
sahf
mov
fadd
push
orl
orb
jl
fcoml
cmp
out
pop
mov
xchg
sub
jb
sub
xor
sbb
in
outsb
in
mov
and
into
pop
std
jp
sbb
xchg
lods
std
fistl
add
scas
dec
adc
fstl
outsb
lcall
xchg
xlat
ja
icebp
mov
jae
rorb
aad
xchg
sti
dec
dec
testb
es
in
cmpsl
test
std
sbb
pushl
cli
or
lds
and
mov
mov
sarb
cmpsb
and
lock
sub
js
push
dec
mov
aas
enter
call
iret
cmp
sub
js
push
dec
mov
aas
enter
call
iret
cmp
sub
js
push
dec
mov
aas
enter
in
out
sbb
or
cmp
sub
js
test
cwtl
andb
mov
mov
testl
pop
and
cmp
gs
cmpsb
test
aad
inc
xlat
cmc
in
adc
pop
and
push
jne
gs
cmpsl
in
mov
movsl
aaa
aad
in
adc
pop
and
push
jne
gs
test
notl
test
pop
pop
pop
imul
cmpsb
pop
scas
mov
lea
loopne
and
std
ret
daa
jg
lods
test
clc
fimull
jae
and
push
mov
dec
mov
dec
das
pop
adc
jb
cld
fcoms
xchg
fdivl
repz
jne
pop
cmpsl
aam
add
aaa
add
xchg
pop
and
sar
inc
lcall
in
cmc
or
repnz
divl
addr16
aam
add
pop
imul
movsb
lds
cmp
sbb
aam
mov
mov
xchg
enter
test
loopne
test
scas
movsb
cmpsl
shrb
loope
in
adc
pop
and
push
jne
gs
cmpsl
test
aad
mov
push
add
ja
adc
xor
xchg
jecxz
mov
mov
testl
push
ja
and
das
add
lock
aam
lret
mov
push
pop
daa
push
js
imul
addr16
push
jne
gs
cmpsl
test
aad
in
adc
pop
and
push
jne
gs
cmpsl
test
aad
in
adc
sub
cltd
gs
mov
ja
fistl
xchg
rolb
int3
push
das
mov
xor
xor
cwtl
add
push
je
push
add
out
fadds
jge
and
lock
inc
xchg
shl
jae
xor
imul
insl
push
lods
insb
and
scas
fldt
and
loopne
adc
add
xchg
pop
cmova
add
jmp
popf
jnp
movsl
mov
int
pop
cmp
ficomps
jmp
and
mov
xor
popa
or
cmp
add
pop
imul
or
pop
fmulp
cmc
mov
into
cwtl
fadds
or
call
and
data16
push
and
icebp
adc
mov
push
xchg
or
cmp
sbb
rclb
loope
addb
push
mov
jg
pop
scas
jge
aas
ljmp
inc
inc
call
mov
mov
or
ret
in
shl
and
in
movl
test
sahf
push
or
cmc
add
lahf
fisubs
mov
fwait
ficoml
adc
fidivrl
xchg
insl
xor
in
xor
sub
ss
xchg
out
push
jmp
add
jle
loopne
pop
data16
dec
and
push
xchg
add
xor
pop
lods
jmp
cmp
jecxz
jmp
jle
or
xor
pop
scas
out
push
pop
and
mov
lods
out
sbb
imul
jle
icebp
push
mov
mov
call
xor
and
subl
adc
ficomps
mov
dec
daa
stos
fwait
into
movsl
cmpsl
int
pusha
mov
outsb
loop
push
ret
push
rorl
lcall
and
or
repz
or
jmp
call
sahf
xchg
xchg
cmp
mov
iret
pop
xchg
adc
inc
rcrb
es
aas
inc
adc
insl
dec
or
dec
pushf
xor
fldl
sbb
jge
stc
mov
bound
sub
jmp
push
mov
hlt
cwtl
and
outsl
imulb
push
sbb
jmp
sbb
and
mov
stos
rcll
add
movsl
push
mov
jg
test
jecxz
push
cmp
xchg
mov
jmp
mov
xchg
scas
sub
or
push
fs
mov
add
xchg
movsb
dec
push
mov
test
push
xor
mov
adc
pop
and
int
dec
mov
mov
adc
mov
dec
stc
and
pop
mov
or
faddl
mov
jle
sbb
xor
inc
rolb
test
jo
push
fsubl
test
sbb
jb
idivl
test
notl
sbb
lea
push
pop
fisubrs
mov
push
push
cmp
sbb
aam
xlat
sbb
sbb
push
add
dec
cmp
or
xor
pop
mov
dec
push
ja
lock
mov
lock
dec
xlat
pop
lds
hlt
lea
mov
inc
mov
sub
xor
pusha
es
in
cli
mov
shrl
sub
into
adcl
in
mov
pop
ss
and
in
and
sti
insl
fsubrl
outsb
sbb
cmp
jmp
sub
pop
aas
shll
nop
clc
out
js
cmp
jge
mov
in
cmp
stos
and
mov
lcall
ret
or
in
mov
xchg
xchg
loope
sbb
and
adc
push
scas
stos
imul
insl
push
ja
fwait
sahf
cs
xor
push
aad
cmp
imul
fadds
or
rcll
adc
loope
mov
add
hlt
pop
mov
and
mov
add
jbe
adc
pop
mov
adc
icebp
out
cli
pop
or
push
mov
dec
popa
popa
xor
adc
xchg
mov
cmpsl
daa
fdivrl
adcb
sbb
movsl
add
cmpsl
fistpll
dec
fwait
and
pop
pop
sub
iret
je
sti
fucomp
stos
nop
mov
divl
sub
jecxz
mov
fadd
mov
test
pop
mov
pop
pop
ja
dec
lahf
pop
dec
mov
bound
jbe
sbb
sbb
jmp
mov
sbb
shlb
ret
mov
cli
roll
dec
mov
cmc
xchg
push
fwait
in
adc
cmc
cmp
xchg
jno
xchg
rolb
dec
cmp
jge
xchg
xchg
mov
mov
mov
sbb
push
xchg
push
movsl
rcrl
and
in
lods
inc
or
icebp
inc
cs
in
cmc
jmpw
and
xor
decl
add
add
inc
add
pusha
faddl
jb
popf
cmp
cmp
stos
test
mov
dec
xchg
and
add
test
xor
dec
idivl
fisubrl
add
rorb
lret
pop
add
mov
cmp
add
insl
pop
popa
push
cwtl
adc
insb
xchg
iret
dec
lcall
push
fcomps
lea
adc
sti
jg
inc
daa
or
adc
ja
mov
ret
mov
addr16
pop
cmc
aam
fs
dec
call
mov
aas
mov
and
mov
inc
sbb
and
imulb
mov
push
sbb
cmc
mov
cwtl
cs
out
sub
scas
mov
daa
fsts
jge
jne
push
xchg
cmp
bound
ds
stos
test
repz
inc
insl
rcll
jg
call
and
adcl
and
rorl
test
inc
lret
push
xchg
or
mov
mov
out
adc
into
add
jno
adc
jecxz
adc
sbb
scas
jmp
inc
ds
mov
mov
mov
test
mov
andl
inc
sarl
xchg
fs
mov
xchg
outsl
jae
sahf
lahf
mov
mov
mov
in
mov
and
int
test
lods
xchg
fstpt
mov
in
test
mov
lods
and
lahf
add
shlb
adc
dec
jne
inc
push
in
adc
mov
lret
cwtl
push
dec
fstpt
push
adc
mov
jl
cmp
or
inc
mov
popf
roll
push
subl
and
or
inc
in
lods
mov
pop
aaa
dec
dec
nop
outsl
clc
lds
add
xchg
push
cmp
lds
pusha
das
dec
test
ficomps
jns
and
roll
lret
pop
orb
xlat
addr16
cmp
jg
ret
loopne
orl
pop
push
jmp
bound
or
data16
test
jns
push
and
sub
test
pop
dec
lods
pop
xor
mov
or
cmp
shl
xchg
cmp
dec
mov
pop
lea
add
ljmp
pop
cmp
cmp
call
enter
jg
mov
icebp
inc
sbb
cmp
pop
dec
mov
sub
mov
or
jns,pn
jns
dec
sbb
dec
pop
jbe
jno
or
mov
bound
inc
ds
inc
add
jmp
das
mov
add
or
add
test
orb
nop
mov
fcmovnb
mov
cmp
std
add
jge
rcr
pop
add
jmp
jp
movsl
jecxz
sahf
xchg
push
xchg
add
dec
fcompl
push
or
adc
rcrl
js
xor
jae
xchg
test
jp
pop
sbb
lock
jo
inc
je
arpl
out
jecxz
inc
mov
jbe
pop
xchg
xor
test
push
add
mov
enter
vmovups
repz
cwtl
xchg
leave
sbbl
inc
pop
andl
in
stos
mov
add
movsl
pusha
in
stos
cmp
nop
cmp
cld
mov
popf
int3
mov
outsl
mov
pop
addb
mov
sub
cmpsb
xchg
sahf
lods
dec
sub
popa
cld
or
jp
ds
dec
in
pop
mov
out
fwait
ljmp
push
in
xchg
adc
cli
in
mov
aad
cmp
ficoms
xchg
or
ret
int3
rorb
mov
xor
adc
stos
adc
cmp
jnp
or
cmp
dec
inc
fsts
jno
sti
aad
sbbl
inc
loopne
mov
fsts
ret
sbb
add
mov
xchg
movsb
jb
adc
xor
jg
pop
shll
mov
repz
ljmp
pop
dec
enter
mov
cmp
sub
mov
add
xlat
cld
test
or
es
popa
mov
mov
fucomi
dec
sub
add
das
push
stos
adc
inc
out
fsts
cwtl
insb
cwtl
cmc
cld
dec
jae
cli
scas
sub
xchg
mov
loope
adc
test
pop
pop
stc
pusha
shl
cld
fdivrs
sbb
xchg
xchg
dec
cmc
cmc
xor
or
fidivrs
dec
into
das
shlb
enter
lock
mov
push
dec
mov
ss
mov
ret
sti
shlb
leave
or
dec
subb
stos
iret
mov
out
incb
loope
stos
sbb
icebp
roll
cld
out
xchg
xchg
dec
pop
xlat
xchg
cmp
shll
leave
cld
sub
push
jge
icebp
sub
mov
pop
xchg
je
jmp
mov
fldt
mov
lret
push
mov
test
add
cmpsl
xor
adc
lea
out
fldt
dec
int3
outsl
push
adc
xorb
pop
xchg
int
jge
aam
jle
je
lret
jbe
scas
outsb
cmp
test
push
pop
pop
in
jp
test
jbe
hlt
scas
fcmove
xchg
mov
push
add
xor
iret
push
jl
xchg
cwtl
xor
jb
push
jp
mov
xchg
push
ljmp
inc
mov
aam
fnstenv
jmp
mov
les
sub
lahf
iret
cltd
mov
and
add
int
adc
cmc
add
in
ret
jge
test
les
cmp
sbb
cmp
mulb
or
icebp
and
les
mov
enter
out
pop
adc
jmp
push
push
outsb
mov
shlb
push
lret
add
mov
and
lods
mov
test
sbb
mov
mov
pop
lahf
cmpsl
adc
in
ljmp
jns
inc
mov
out
adc
fwait
gs
int3
or
clts
cld
mov
fldl
lds
aas
xchg
xchg
scas
mov
data16
insl
iret
jns
adc
stos
jb
aam
and
add
dec
mov
fs
call
mov
aaa
fidivrl
push
sbb
cmp
fcmovbe
pop
sahf
mov
sti
mov
sbb
and
ret
dec
js
dec
inc
nop
leave
inc
shll
sbb
mov
movsl
pop
mov
mov
push
cmpsb
mov
fistl
out
xchg
inc
xlat
andb
clc
lret
mov
push
jge
clc
xor
aam
inc
mov
imul
divl
push
mov
out
mov
mov
test
sbb
mov
sub
sub
or
test
sbbl
adc
lods
push
lods
inc
rcr
out
fsubp
dec
in
daa
lcall
mov
int3
inc
adc
sahf
dec
bound
pop
iret
cld
push
sbb
dec
std
add
push
jno
out
xchg
imul
push
lds
mov
jne
aam
arpl
mov
xchg
jo
xlat
in
add
pusha
cmp
push
or
inc
jmp
xchg
into
arpl
push
sub
inc
cmp
mov
jmp
loopne
mov
test
jg
repz
pop
out
push
data16
cs
in
mov
xor
cmp
ja
fildl
push
add
into
test
aad
xchg
and
mov
loop
insb
mov
pop
int
enter
inc
sahf
insl
cmp
jno
pop
mov
pop
mov
mov
pop
fbstp
call
push
add
es
pop
stos
gs
int3
fdivl
mov
gs
mov
dec
lods
push
pop
enter
push
adc
push
in
or
cmp
cmc
mov
out
ret
adc
mov
hlt
xor
or
addr16
or
fneni(8087
in
adc
sbb
jmp
je
ds
push
mov
aaa
push
lcall
adc
sub
adc
lods
and
xor
jae
and
stos
sbb
sub
adc
int3
push
mov
in
xor
pop
or
inc
sub
call
sarb
push
mov
pop
inc
sub
and
sbb
repnz
repz
push
jmp
dec
je
test
daa
xchg
pushf
add
push
cwtl
inc
pop
jno
lret
out
scas
call
push
and
lds
dec
das
cmpsb
mov
sub
push
aaa
adc
mull
shl
xlat
rorl
pusha
outsb
mov
sub
mov
stos
jecxz
jecxz
sbb
jb
fs
lods
ss
ret
pop
or
push
loope
test
jnp
ret
inc
jne
popa
ja
daa
adc
in
ret
les
cmp
lods
xchg
sub
aaa
push
pop
xchg
addl
dec
and
test
fwait
inc
add
repnz
ds
sbb
pop
add
mov
lods
lcall
xor
mov
roll
bnd
sub
add
ja
xchg
push
xor
imulb
movsb
sbb
inc
xorl
sub
in
push
dec
stos
adc
sub
mov
cmp
les
aaa
sbb
sbb
inc
push
or
psrad
cmp
pop
and
in
int3
mov
test
mov
sub
rorb
stos
jno
mov
cmp
cmpsb
aam
add
xchg
sub
pushf
aaa
and
in
stos
and
mov
adc
pop
and
cmc
insb
pop
call
pop
lds
add
cmc
and
sarb
inc
pop
aaa
ljmp
and
fistps
data16
push
xor
xchg
sarl
mov
xor
mov
lds
das
movsl
test
ret
xor
adc
jecxz
lods
mov
scas
clc
movsl
or
aaa
dec
ja
movsl
adc
mov
inc
mov
fidivrl
adc
imul
out
mov
xchg
sub
cld
mov
jl
in
fwait
or
inc
cmp
mov
push
ds
outsb
or
mov
adc
jle
mov
adc
cltd
rorl
mov
pop
enter
mov
int
lods
mov
pushf
cmc
imul
mov
std
fwait
sub
xlat
xchg
hlt
xor
or
neg
push
fsubrl
xlat
push
sbb
ss
or
mov
pop
test
inc
mov
out
mov
loope
push
and
mov
jb
inc
addr16
lsl
xchg
icebp
fwait
mov
pop
dec
mov
cmp
insb
push
popf
pop
jecxz
jns
mov
int3
das
jl
mov
ss
pushf
add
js
fcompl
push
into
push
xchg
ja
nop
loop
jmp
adc
cltd
xor
arpl
into
mov
pop
aas
pop
push
xor
sti
lds
mov
movl
int
test
in
out
test
push
icebp
out
inc
ret
jmp
adc
stos
pop
inc
jne
ljmp
sub
int3
lds
mov
movsb
pop
mov
sub
jnp
xchg
fwait
dec
mov
push
jmp
jl
int
bound
mov
insb
mov
cmovns
data16
lahf
mov
out
sub
in
scas
adc
mov
xchg
sbb
inc
push
lods
add
jo
xchg
daa
push
into
add
iret
repnz
dec
or
iret
lods
mov
ret
std
sbb
xor
ret
inc
jne
cmp
jb
cmp
insb
sar
nop
clc
mov
sbb
test
pop
icebp
xor
cmp
out
jge
ffreep
outsl
jl
out
push
clc
add
xor
and
mov
clc
xchg
adc
mov
lds
xor
es
inc
push
inc
mov
clc
js
lret
mov
xchg
sub
mov
mov
sbb
pop
cwtl
daa
add
stos
dec
je
jbe
add
loopne
outsb
lret
popf
sarb
push
pop
sahf
lret
test
pop
push
cmp
shll
push
jne
popf
dec
inc
xchg
stos
cltd
jo
push
jmp
mov
mov
cmpsl
dec
in
pusha
mov
jae
les
sub
pushf
lds
repz
pusha
push
popa
push
shll
or
or
psadbw
push
jb
xchg
enter
push
pop
les
scas
jnp
pusha
pushf
les
fstpl
pop
add
add
sub
adc
push
das
xchg
xlat
gs
dec
lahf
mov
sahf
cs
or
ret
jl
mov
push
scas
xor
xor
stos
aaa
add
xor
xor
inc
add
insl
inc
mov
insb
and
das
pop
xor
scas
shrl
aaa
xchg
ret
pop
cs
pop
push
test
add
std
sub
push
ja
popa
dec
popa
in
push
popf
test
mov
jno
push
cmpsb
mov
cltd
addl
push
xor
xchg
fstp
sti
fiadds
cwtl
out
xchg
mov
int
psrlw
cmc
aad
push
and
dec
and
fisttpll
jp
shll
std
negl
jbe
xchg
adc
pop
push
mov
ja
idivb
repz
jo
add
ss
mov
ljmp
xor
orb
jmp
sub
sti
mov
sub
xchg
les
test
inc
lret
into
inc
mulb
jg
dec
xchg
push
decb
and
xchg
loop
aam
mov
mov
loop
jle
clc
jno
lret
nop
out
xchg
jns
pop
xlat
jnp
cmpsb
jbe
push
inc
sbb
xor
fwait
add
sbb
aas
push
push
cli
and
xchg
adc
mov
shlb
mov
mov
jle
lods
fisttpll
add
lcall
jno
lock
pop
fistps
sub
jge
sub
add
mov
jl,pt
cli
push
xor
pop
jo
lods
inc
imul
shrb
push
in
fcmove
mov
push
dec
data16
push
dec
push
pop
pop
xor
inc
cmp
or
and
lcall
adc
sahf
fs
push
and
and
mov
push
movsl
dec
pop
outsl
pop
push
jb
test
add
xlat
das
inc
cltd
cmpsl
dec
jns
jge
popf
mov
xchg
sub
or
push
enter
cwtl
enter
repz
add
mov
cs
jp
xchg
inc
cmpsb
push
dec
jmp
out
test
stc
adc
out
mov
dec
cmc
decb
cmp
pop
push
inc
lret
pop
or
sbb
adc
repnz
or
adc
push
cmpsb
push
sbb
push
out
xchg
xchg
push
out
out
xor
xchg
cmp
arpl
or
pop
jl
pop
mov
fnstcw
xchg
jle
sahf
pop
shr
dec
pop
xor
inc
xchg
add
pop
leave
push
shrb
out
xchg
sbb
ljmp
jge
mul
add
add
lods
mov
insl
or
mov
mov
mov
sub
and
jge
xor
stc
push
out
jno
pop
loop
out
popa
insl
bound
adc
xor
mov
inc
adcb
and
bound
outsl
leave
loope
jmp
leave
or
fstl
enter
scas
mov
mov
enter
cmc
clc
xlat
sti
mov
mov
mov
shll
or
cld
pop
inc
add
les
test
sub
sub
fsubrp
mov
lods
ss
mov
sahf
ss
leave
lret
push
sar
jge
fisubrl
mov
push
lahf
mov
inc
std
inc
pop
mov
movsb
out
test
pop
push
aaa
xorl
xchg
test
rcrl
inc
out
push
imul
negb
cltd
xchg
push
xchg
sub
les
jo
sub
pushf
out
add
push
mov
aaa
aas
ja,pn
cwtl
pop
das
int3
gs
stos
pop
add
add
mov
sbb
je
lret
aam
dec
sahf
arpl
or
mov
out
mov
push
rcr
sbb
lret
push
js
mull
mov
adc
push
js
push
jnp
dec
inc
insb
mov
lods
cld
cli
ret
inc
jge
std
inc
shlb
cmpsl
cltd
mov
sahf
xlat
cltd
and
push
out
sbb
imul
push
addr16
push
jne
gs
cmpsl
test
aad
in
adc
pop
and
push
jne
gs
cmpsl
test
aad
in
adc
pop
and
push
jne
gs
cmpsl
test
aad
in
adc
pop
and
push
jne
gs
cmpsl
das
cmp
pop
xchg
cmp
arpl
push
ja
pop
pop
push
xor
repz
mov
mov
jae
inc
js
or
sbb
sub
cmp
fsub
fdiv
call
mov
mov
jae
inc
pusha
push
adc
add
xor
cmp
rcr
sti
scas
mov
adc
icebp
not
hlt
out
xchg
and
pop
push
in
bnd
jmp
cmpsb
popa
ret
mov
imul
pop
leave
imul
and
sbb
lods
shrd
dec
pop
icebp
xchg
adc
push
rcr
arpl
outsl
mov
movsb
movsl
fwait
mov
aas
lret
je
mov
lahf
and
or
mov
mov
jb
inc
pop
inc
mull
sbb
xlat
ljmp
fnstsw
cwtl
jecxz
jge
mov
aad
in
cwtl
scas
mull
add
gs
enter
push
bnd
imul
mov
inc
xchg
imul
sbb
fcmovne
xor
xchg
test
int
lret
inc
test
mov
jae
inc
js
pop
and
xor
add
adc
jecxz
repz
loope
nop
mov
mov
mov
jnp
jle
data16
mov
fwait
lods
pushf
mov
fiaddl
aad
daa
and
cmp
inc
or
inc
sbb
mov
mov
neg
std
sub
aaa
adc
inc
dec
sbb
sub
cmp
enter
call
mov
mov
jae
inc
js
or
sbb
sub
cmp
enter
call
mov
mov
data16
mov
andb
sub
jmp
cwtl
in
jae
int3
loope
jb
sahf
movsb
sub
dec
sbb
mov
xchg
aas
lahf
lret
pop
sahf
sub
and
mov
mov
repz
xor
jbe
aaa
cmpsb
or
cltd
jo
cmp
and
sub
xchg
adc
in
lea
push
out
jecxz
test
sahf
xor
imul
std
dec
enter
or
mov
mov
test
or
cmpsl
and
mov
jge
pop
dec
int3
cwtl
and
rcll
in
jmp
outsb
cltd
rorl
add
xorb
cmp
cli
inc
push
push
cmp
fldenv
in
inc
insb
cmp
popf
loope
loope
jl
ds
sub
lea
sbb
push
shrb
imul
mov
std
fsts
sbb
jge
pop
mov
jmp
adc
insl
mov
enter
das
repz
jno
mov
out
jecxz
pop
fimuls
push
cwtl
mov
mov
cmc
pop
out
negb
cmp
dec
movlps
cmpsl
jae
push
jecxz
bound
les
mov
loopne
bound
fstl
add
jno
sbb
lea
subl
mov
fidivrl
and
xor
pop
add
mov
sbb
xor
fs
mov
push
pop
mov
and
inc
shll
and
ficompl
xor
sub
xchg
aad
add
lret
pop
and
pop
jmp
mov
push
lret
in
pop
adc
mov
fimuls
mov
out
loope
aas
shlb
cwtl
or
test
pop
pop
stc
mov
scas
iret
push
and
aam
mov
inc
nop
mov
cmpsb
push
out
inc
mov
int
js
and
fwait
repnz
xchg
jo
fs
loop
cmp
int
and
push
ret
dec
mov
in
rcll
aam
addb
jae
jbe,pt
sub
push
loope
and
leave
and
jg
fsubrs
sti
inc
cs
mov
inc
sub
add
sahf
add
jp
movsl
out
mov
mov
push
mov
or
popa
cmp
lods
insl
xorl
sti
andl
lds
repz
ficoms
and
xorb
mov
jmp
fwait
lods
lret
sbb
lcall
and
clc
sub
cmc
dec
dec
arpl
js
adc
xor
and
ret
inc
fiadds
sbb
pop
or
mov
ss
shlb
sti
loope
fnop
leave
popa
in
js
xchg
jge
cmp
inc
sbb
mov
sub
shll
ds
daa
icebp
lret
pushf
dec
int
pop
add
pusha
subl
lock
cmp
sub
jmp
adc
pop
fmul
cltd
dec
das
icebp
int3
jns
cld
lods
mov
dec
inc
rorl
pop
mov
call
push
es
in
sbb
pusha
dec
js
inc
cmp
loop
enter
ret
and
fistl
call
mov
nop
cwtl
addr16
aas
movsl
push
lcall
cli
shrb
fadds
add
inc
outsb
iret
rcr
jmp
arpl
bnd
jecxz
add
ljmp
ret
pop
inc
xchg
outsl
scas
test
scas
lahf
testl
clc
loope
xor
mov
add
or
in
imul
jb
add
insb
popa
cltd
ds
jb
xchg
dec
sbb
push
xchg
imul
adc
lods
lahf
adc
icebp
pushw
enter
xorl
cwtl
leave
fcmovnu
stc
stos
cwtl
add
adc
xchg
les
cld
fisubs
sbb
cmp
repz
jns
dec
inc
jmp
sbb
cmpb
scas
add
jmp
loopne
mov
push
adc
jbe
roll
xchg
xlat
mov
repz
call
mov
add
lods
inc
xorb
arpl
scas
aam
mov
pop
outsl
aad
fidivs
dec
mov
sub
insb
mov
hlt
mov
inc
fucom
bound
or
loope
adc
pop
cmp
rclb
icebp
into
mov
notb
fnstsw
and
fwait
std
sub
loopne
mov
pop
adc
sub
cltd
cltd
adc
dec
cmp
mov
rcl
mov
push
add
dec
loopne
jmp
xchg
imul
and
mov
out
mov
mov
mov
jge
mov
mov
movsb
pusha
jo
int3
inc
test
scas
scas
mov
or
inc
jmp
or
dec
mov
rcll
xor
mul
or
push
sub
out
and
adc
cmc
sub
icebp
jp
inc
int3
pop
fwait
ds
xor
lcall
stc
cmc
mov
test
dec
imul
lcall
sub
adc
fwait
inc
dec
xchg
cmp
out
je
mov
fisubrs
inc
inc
shrb
dec
into
and
lds
pop
mov
aaa
cld
jecxz
dec
mov
shrl
push
imul
rclb
vunpcklps
lock
or
mov
lret
add
push
test
fsubrl
insl
sub
xchg
outsb
mov
or
in
lods
inc
in
inc
and
sbb
sahf
shrb
pusha
xchg
enter
push
stos
or
push
repnz
xchg
sub
ret
xchg
sub
sub
mov
sahf
sahf
mov
shrb
sub
pop
lret
bnd
call
lea
shll
inc
imul
lods
jg
push
jg
nop
pop
push
mov
and
jne
sbb
jp
movsb
je
ret
pop
sub
sbb
and
sbb
ds
dec
icebp
leave
jae
xor
gs
jecxz
ja
sub
push
dec
sub
sbb
mov
jp
and
sbb
mov
or
mov
jb
dec
stos
sbb
sub
imulb
lods
adc
out
call
cld
adc
les
jge
sbb
sbb
insl
mov
mov
into
push
xchg
sub
daa
mov
ficompl
cmp
adc
loop
dec
mov
xchg
mov
or
add
insl
inc
loop
div
movsl
rclb
mov
sbb
jecxz
cmp
pusha
movsl
roll
imul
lret
or
and
add
mov
out
sub
jns
or
push
inc
cmp
cwtl
xlat
xchg
loopne
std
push
loopne
pop
sub
out
shr
or
mov
dec
cmp
mov
sbb
pop
jnp
in
sbbb
mov
hlt
push
aad
cmp
xchg
lahf
rorl
fisttps
mov
int3
lahf
ljmp
add
jne
add
fdivrs
and
imul
imul
push
das
ds
fwait
and
sub
ret
or
push
cs
fadd
add
aam
je
pushf
jnp
xor
stos
in
out
scas
mov
xorb
sbb
mov
in
mov
es
lea
pop
jns
mov
aam
pop
into
jge
lcall
ret
xchg
sbb
addr16
fnsave
stos
mov
sbb
loop
cld
mov
cmp
dec
fisubrs
push
pop
inc
ss
and
test
popf
stos
faddl
push
iret
xor
push
jp
sbb
pop
je
mov
inc
imul
test
bound
clc
mov
xchg
and
push
imul
mov
call
fidivrs
inc
int3
insb
bsf
xchg
icebp
dec
int
repz
dec
cmpsb
mov
icebp
mov
or
stos
adc
sbb
push
jecxz
jmp
out
sbb
scas
sbb
test
mov
inc
aam
mov
ja
ret
pop
fdivrl
jno
test
mov
nop
push
psubusw
pusha
mov
cmp
cltd
sbb
mov
je
fsubs
and
adc
jne
inc
and
mov
adc
cmc
dec
std
out
lret
push
pop
das
pushf
push
mov
xor
xchg
mov
js
and
and
loope
mov
movsb
hlt
jnp
jno
push
inc
repz
rolb
adc
mov
push
or
cmp
imul
xor
cmp
sub
pop
mov
jl
sub
in
cmp
xor
add
ss
cmp
pop
insl
push
mov
pop
lds
adcb
xchg
xchg
sub
imul
cltd
sbb
out
sub
rol
repz
mov
jo
or
imul
add
inc
ficoml
test
cwtl
sbb
movsl
aam
mov
inc
xchg
xchg
movsb
bound
out
xor
dec
mov
mov
pop
mov
adc
adc
leave
loop
inc
jo
jb
xchg
pop
mov
push
lahf
dec
inc
pop
insl
pop
ljmp
in
sar
push
jne
aaa
sub
and
mov
in
cmc
sbb
lods
push
push
or
fcomps
addl
les
xlat
test
idivb
push
xlat
mov
hlt
cmpsb
ds
cmp
negl
sbb
push
leave
out
test
inc
cli
subl
mov
mov
or
cs
add
dec
stos
fidivl
pop
adc
cld
inc
arpl
cmp
insb
ret
loop
sub
arpl
push
or
nop
movsb
int3
loopne
dec
fadd
stc
loope
cmpsl
in
lods
xor
fisttpll
inc
dec
cmp
mov
ret
mov
arpl
jae
sbb
sbb
fs
lods
cmp
sbb
pop
inc
mov
out
cs
call
lock
inc
xor
jbe
idivb
daa
filds
push
pop
push
jle
cmp
dec
iret
outsl
lcall
mov
pop
jno
mov
test
and
out
mov
push
or
dec
loope
inc
add
mov
mov
divl
pop
out
or
aaa
mov
pop
sbbb
dec
lea
out
ficompl
aam
lret
jb
ret
aaa
into
or
sub
jns
js
sbb
cltd
jmp
jnp
xchg
pop
adc
and
push
jg
sti
xor
cmp
mov
ds
int3
adc
es
jae
pushf
loope
fld
xlat
add
fs
push
mov
push
or
push
test
in
rcll
push
inc
in
cltd
gs
outsb
sbb
mov
je
and
or
lods
fs
sbb
add
cld
mov
mov
fucom
jb
in
adc
int
dec
or
incb
mov
mov
or
inc
jo
stos
sahf
lret
je
flds
cmp
shrb
push
pop
mov
shll
mov
and
lock
push
mov
cli
mov
mov
hlt
mov
cmpsb
cld
sar
cmp
and
fmull
cli
fstps
pop
sarl
std
clc
fistpll
xor
mov
das
sub
pop
leave
push
loope
and
push
adc
inc
fwait
cmp
xchg
fisubl
push
stc
sub
dec
pop
aaa
daa
jnp
hlt
mov
mov
xchg
out
outsb
lea
loope
pusha
mov
insl
sub
cltd
mov
xor
inc
cmp
add
add
nop
dec
xor
insb
sub
mov
inc
cld
mov
add
pmullw
fidivl
flds
push
lcall
sti
add
es
mov
jmp
test
sub
loopne
fnstcw
pop
stos
imul
adc
rorl
mov
sbb
add
adc
cltd
call
rcrb
pop
sahf
js
cmp
jl
and
notl
in
fsubr
adc
adc
ret
int3
mov
dec
pop
lods
fadds
inc
xchg
inc
idivb
inc
or
lret
mov
xor
cmp
sarb
mov
fisubrs
jge
mov
mov
out
cmpsl
and
fucom
ja
lods
loop
shll
rol
aad
xchg
js
and
inc
jnp
pop
mov
daa
ljmp
cmp
push
daa
insb
leave
add
jno
in
in
sahf
cmp
fsubs
cmp
mov
mov
jle
pop
loopne
dec
stos
test
push
sbb
movsb
cltd
or
addr16
scas
das
adc
test
fs
lahf
jno
mov
movsb
out
add
hlt
arpl
inc
xchg
js
jmp
in
adc
xchg
adc
push
sbb
mov
adc
xor
es
clc
push
jmp
jecxz
inc
cltd
movsb
in
sub
jmp
loopne
outsl
ret
or
jb
imul
cmp
arpl
add
into
rclb
movsb
push
je
add
cmp
sub
xor
mov
cli
inc
jb
and
fs
mov
cmp
sub
imul
dec
mov
push
cmp
adc
cmpsb
imul
sbb
int
aam
addr16
into
sub
pop
cmp
in
loopne
loopne
fistpl
stos
or
push
daa
jmp
addr16
lcall
adc
push
sbb
fstpt
pusha
movl
stos
mov
and
fiaddl
cmp
adc
icebp
and
xchg
mov
mov
shlb
div
cmp
fdivl
divl
mov
daa
clc
add
test
pop
mov
nop
mov
mov
pop
push
aas
or
mov
pop
dec
cli
push
sbb
outsl
lds
in
scas
xor
int
popf
add
cmc
xchg
pop
clc
call
sub
and
and
or
push
adc
mov
arpl
xchg
or
add
iret
jp
sub
sub
lock
push
imul
cwtl
pop
das
mov
or
cli
sarb
jp
or
dec
ja
push
call
xchg
jmp
jmp
lock
les
mov
jg
mov
mov
ror
dec
inc
jle
sbb
adc
testl
rcrl
gs
pop
insl
mov
mov
imul
jg
icebp
out
paddusb
add
pop
sub
jp
pop
cmc
sub
dec
mov
fsubrs
lea
into
xchg
fs
das
bound
out
cwtl
pop
inc
xor
int3
sub
les
fstl
sarl
add
inc
icebp
and
add
fwait
xchg
lcall
insb
std
jo
testb
xchg
cmpsl
fldenv
iret
adc
dec
cmpl
rorb
jo
ret
and
fldt
cli
cmp
rolb
xchg
sti
mov
or
cmpb
lcall
int
mov
inc
js
call
lods
call
shll
pop
into
xchg
sarl
scas
cmc
dec
out
xor
lret
xchg
cmpsb
dec
and
insl
in
xor
mov
inc
mov
cwtl
xchg
sbb
loop
dec
pop
push
icebp
xor
clc
xchg
inc
and
sub
adc
push
jle
xor
enter
addr16
mov
or
jp
mov
push
nop
orl
sbbb
inc
add
les
mov
mov
int
ret
nop
fcompl
adc
mov
je
xchg
outsb
lods
pop
dec
xlat
repz
iret
push
sub
and
cmp
pop
inc
push
xchg
ss
jg
inc
movsl
aam
jge
mov
add
loop
shll
lock
add
xchg
xlat
push
sbb
push
push
adc
orb
icebp
mov
sarl
ret
jae
movsl
pop
inc
test
shl
sti
and
sub
sbb
notl
insl
decl
out
mov
dec
xlat
and
jmp
push
addr16
ljmp
add
lock
scas
loopne
inc
jg
cmp
jge,pn
mov
xchg
das
fwait
bound
cmp
dec
inc
pop
mov
sti
cmp
faddl
movsb
mov
sub
mov
xchg
ret
lock
lahf
push
dec
cltd
mov
xchg
int3
rcrb
mov
divb
xchg
xor
pushf
mov
scas
cmp
lods
mov
jbe
dec
loop
addb
dec
out
das
jmp
xchg
aam
mov
fisubl
adc
popa
pop
test
inc
sbbl
aas
cmpl
pushf
scas
int
lock
fs
cmp
jno,pn
xor
push
rorl
popf
arpl
or
jnp
ljmp
aad
and
add
jle
jecxz
push
cmp
jge
sbb
clc
cmp
sub
cmp
inc
out
jp
adc
lods
fmull
inc
mov
mov
fimuls
add
lcall
xchg
idiv
aam
push
xchg
mov
orb
dec
inc
idivl
jae
lods
mov
mov
and
push
hlt
inc
js
stc
mov
add
xlat
pop
xorb
cwtl
inc
mov
fs
into
in
jnp
push
jmp
inc
fimull
and
mov
cmp
call
sbb
cmp
pop
xchg
daa
and
lods
cld
movsb
cli
fmuls
aam
cld
insl
sub
jecxz
ret
decl
out
shlb
lret
xchg
mov
dec
xchg
je
fnstcw
cmpsb
insl
insb
dec
fdivr
lahf
repnz
mov
cld
cmpl
mov
push
fs
xchg
repz
aaa
or
inc
push
mov
sbb
jmp
dec
call
push
xchg
testl
or
in
std
int
push
lahf
or
jne
das
call
xlat
dec
call
stos
pop
lds
cwtl
daa
stos
loop
push
push
sbb
in
adc
adc
sub
rclb
push
insb
int
pop
les
add
adc
dec
jge
aaa
shlb
pusha
xor
loop
mov
insb
push
inc
sbb
shr
and
test
out
mov
adc
out
test
loopne
jg
add
stos
std
sbb
xor
jbe
popa
mov
dec
jb
add
insl
adc
dec
and
sti
mov
lret
lcall
cmp
jp
mov
mov
popf
notl
imul
mov
push
scas
cwtl
and
sub
inc
dec
out
cld
xchg
jb
imul
lcall
and
sbb
mov
xor
or
popa
clc
pusha
fildl
pop
in
push
je
aaa
outsb
jp
jecxz
inc
lea
js
adc
xor
test
fsubs
xchg
icebp
mov
fistl
hlt
mov
aad
adc
push
fnstenv
pop
andl
dec
adc
test
fistpl
jg
out
fmull
sarb
or
hlt
jb
xchg
xor
iret
hlt
ljmp
and
xchg
rol
mov
cmp
ljmp
mov
pop
std
pop
mov
xchg
jbe
inc
lea
fpatan
mov
cld
push
mov
mov
bound
xchg
rorl
cli
cmp
movsl
ja
xchg
dec
add
scas
fwait
shl
pop
cmpsl
fucomi
xchg
lcall
mov
jne
aam
sarl
sbb
fidivrl
shlb
cmpl
or
jne
jge
pusha
pop
xchg
jmp
or
in
mov
xor
addr16
adc
pop
push
mov
mov
iret
mov
inc
lds
int3
jb
out
mov
push
subl
addl
shl
push
jecxz
outsl
xlat
xchg
xor
sbbl
sbb
push
in
pop
fdivr
insb
pop
sub
inc
and
sub
out
fcmovnu
cmp
jbe
jne
push
push
daa
mov
fildll
pop
imul
fcomi
insb
ljmp
adc
mov
imul
mov
loopne
xchg
ret
inc
mov
pusha
xchg
cld
xchg
xchg
loopne
adc
pop
dec
shr
std
aam
xchg
ftst
jne
divb
sub
les
dec
lds
jecxz
hlt
mov
scas
xchg
dec
lods
mov
cmp
sar
es
mov
lock
push
jle
mov
xorb
pop
and
push
ds
jecxz
int3
inc
daa
pusha
jnp
mov
mov
add
test
cmp
sub
fcmovnbe
jge
dec
jg
xchg
shll
out
cld
xchg
test
sub
mov
testl
push
or
sbb
sub
cmp
enter
call
mov
mov
jae
inc
js
or
sbb
sub
cmp
enter
call
mov
mov
jae
inc
js
or
sbb
sub
cmp
enter
call
mov
mov
jae
inc
js
or
sbb
aaa
sbb
pop
inc
ret
clc
movsb
ljmp
adc
inc
insb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
daa
sub
add
adc
fs
push
in
lock
call
je
fs
hlt
push
les
and
aam
les
adc
fs
je
inc
mov
shlb
xchg
movsb
jnp
add
je
and
inc
mov
pop
int3
out
test
mov
rorb
pop
popl
insl
nop
inc
mov
aam
stos
add
jge
pusha
mov
jg
jecxz
xchg
hlt
mov
jno
jp
pop
enter
xchg
pop
dec
xchg
hlt
js
hlt
push
jno
adc
sbb
je
adc
sub
jno
add
lods
xor
das
repnz
hlt
xor
add
hlt
call
aam
in
pop
fwait
xchg
je
mov
stos
mov
add
cwtl
sbb
aam
fcmovnb
cmp
cmpsl
mov
mov
ror
fbld
mov
mov
and
test
ficomps
hlt
popa
pop
xchg
push
mov
or
adc
xlat
mov
add
adc
adcb
movsb
sub
cmp
cld
divb
dec
dec
xchg
jo
insb
lret
sbb
xor
push
shll
or
lods
jne
inc
imul
adc
ret
xor
adc
fwait
dec
lods
push
xchg
dec
dec
sbbb
movsb
inc
xchg
lock
inc
mov
movsb
movsb
push
mov
test
in
hlt
add
xor
and
aam
les
adc
fs
je
inc
mov
movsb
movsb
push
mov
test
in
hlt
add
xor
and
aam
adc
push
aam
stos
or
imul
int
inc
sub
adc
adc
mov
cli
cmc
add
lods
jae
cmp
ds
out
mov
jb
inc
sahf
popf
xor
adc
ret
roll
mov
xchg
adc
xchg
es
sete
adc
lods
dec
and
cmpsb
pop
xlat
pop
cmp
out
and
push
add
dec
adc
jl
pop
mov
mov
movsl
inc
icebp
mov
mov
test
pop
pop
icebp
jmp
rclb
sbb
sarb
aas
test
lcall
cmp
lods
push
add
or
ss
xor
loopne
mov
inc
xchg
cmpsl
sbb
fstps
jne
add
sub
or
loopne
insb
sub
and
movd
fidivrs
outsl
addl
lret
movsl
lock
orl
mov
mov
mov
cs
push
xchg
mov
sbb
imul
das
dec
mov
ret
jge,pn
add
mov
xchg
cmpsb
out
jns
nop
enter
incl
dec
adc
jg
jmp
lcall
lahf
xor
cmpsl
sahf
inc
lret
mov
out
cmp
pushf
and
sbb
test
push
test
jl
and
hlt
mov
jp
or
subl
fnstenv
pushf
xchg
lods
stc
jmp
dec
or
mov
out
add
sbb
mov
push
xor
mov
leave
loop
imul
and
mov
adc
sbb
mov
and
xchg
xrstor
sub
push
add
jne
lahf
mov
xor
adc
lds
out
xor
addr16
je
mov
cmpsl
subl
fnstsw
push
cld
xchg
outsl
xchg
mov
fs
mov
inc
insl
jmp
pusha
mov
aaa
imul
test
lds
xchg
mov
pop
insl
jnp
jle
and
add
push
stc
adc
and
mov
mov
rcl
dec
mov
ret
movsb
ficoms
mov
adc
mov
fwait
mov
shl
repz
ror
imull
push
int
cmp
jp
and
dec
rcrl
fucom
and
stos
mov
dec
mov
out
sub
mov
cli
pop
js
push
add
movsl
mov
sbb
ljmp
jno
jo
xor
jae
sbb
insb
outsl
stos
stc
push
pop
testl
xlat
xor
and
jne
pop
or
cltd
test
shrl
lahf
jnp
xchg
sbb
fnsave
adc
mov
int3
mov
cltd
dec
jae,pn
pop
jecxz
imulb
imulb
jp
mov
pop
cli
and
ds
pop
xor
addr16
popa
lea
in
inc
sub
lds
ja
aam
add
or
test
shlb
adc
mov
mov
jl
xor
push
xor
cmpsl
pop
int3
loopne
into
jl
das
sahf
pop
call
push
cwtl
xchg
imul
xchg
mov
ds
jb
cmp
mov
imul
pop
mov
rcrl
bound
push
dec
fcmovbe
cmpsl
repnz
loope
icebp
mov
pop
loop
and
ljmp
mov
mov
data16
hlt
daa
adc
mov
lods
outsl
sarb
imul
aam
fdivs
sub
pusha
and
xchg
pop
mov
add
mov
out
jmp
push
sahf
mov
xchg
and
push
arpl
outsl
hlt
inc
into
mov
or
outsl
cs
cld
cmpsb
pop
mov
jns
ret
inc
push
dec
jnp
dec
in
pop
and
push
dec
mov
mov
fwait
test
xor
rolb
dec
pop
sbb
movsl
testl
and
or
ds
test
int3
repnz
lock
pop
ret
fldenv
cmp
mov
mov
pop
push
cmpl
clc
push
in
lock
mov
push
scas
inc
jmp
cwtl
cmp
and
jbe
cmc
out
les
das
pop
cmpsb
cmpsl
lods
dec
sbb
push
pop
jp
aaa
xchg
xor
fxch
in
fstp
add
mov
int3
add
ret
push
mov
dec
push
dec
imull
js
cmpsl
cs
mov
sete
add
pop
outsl
sbb
rorl
fcoml
rolb
push
jbe
popf
xor
mov
cwtl
xor
popf
in
pusha
push
popf
subl
mov
scas
lcall
cld
jmp
mov
xchg
jnp
mov
insb
movsb
push
sub
lock
xor
inc
mov
jo
mov
fcompl
add
jp
lock
inc
icebp
lahf
pop
ljmp
dec
sbb
test
mov
cmp
out
push
inc
in
push
pushf
xchg
outsl
gs
cmp
mov
in
arpl
sbb
or
mov
mov
sub
and
aaa
sbb
mov
in
push
pusha
les
sub
es
adc
jecxz
mov
push
in
mov
or
fdivs
jae
ss
mov
jmp
jmp
cmp
xchg
out
inc
fidivrl
js
pop
push
push
jg
std
cli
dec
jmp
mov
mov
or
jbe
repz
daa
subb
jbe
or
icebp
hlt
fisttpll
out
sarl
icebp
add
aas
fistpll
jbe
les
mov
ljmp
cli
push
mov
sbbl
test
jmp
inc
pop
leave
push
js
add
cs
lret
xchg
mov
push
movsb
and
test
push
inc
mov
and
sti
push
jmp
clc
mov
loope
pop
mov
mov
mov
pop
mov
faddl
xchg
nop
add
pop
scas
jnp
push
and
adc
pop
pop
pop
inc
fistl
sbb
xchg
ret
dec
mov
and
lods
rorb
gs
pop
jge
andb
pop
cmpsb
or
inc
cltd
push
data16
lods
and
mov
jle
rol
addr16
ljmp
jne
lret
or
jb
out
int3
pop
inc
int3
dec
xor
out
or
repz
push
cmp
xor
jnp,pt
movsl
push
addr16
jbe
mov
test
push
push
rcll
jne
inc
fdivp
xor
scas
stos
add
jg
lret
dec
mov
loope
stos
dec
out
cmp
mov
in
inc
mov
divl
stc
mov
cmp
js
into
mov
stc
xchg
ret
adcl
dec
das
filds
jns
cld
sti
mov
lret
movsl
xor
inc
ret
sbb
inc
sbb
cltd
movsb
insb
repz
lds
jmp
push
mov
dec
mov
movsl
pop
xchg
sbbl
call
and
xchg
popf
in
inc
cmpsl
std
stos
push
xchg
mov
xor
je
fistl
mov
inc
mov
shl
dec
fdivr
xchg
jg
dec
fwait
popa
add
rclb
out
fs
xor
cs
xchg
sahf
pop
sub
or
jns
enter
inc
mov
inc
into
shlb
aam
jge
test
stc
sub
scas
add
psraw
ds
fists
je
insl
mov
movsb
adc
pop
ret
adc
insb
aas
cltd
aam
sbb
lds
insl
mov
loope
rcr
xchg
fcmovnbe
cmpb
or
bound
xor
jnp
dec
cwtl
aas
xchg
jns
movsl
aaa
jo
data16
aaa
outsb
sub
adc
jnp
add
ss
subl
jmp
or
cmp
cmp
data16
das
das
fcomps
cmp
sub
shrl
scas
cmpsl
and
adc
mov
aas
cmp
aad
les
movsb
aas
popa
or
mov
pop
pop
cmp
adc
jne
jge
mov
jl
imul
aas
mov
movsb
and
inc
pop
xchg
cmp
std
stos
les
loope
sbb
insl
adc
andb
add
shll
add
movb
ja
mov
sbb
lods
jae
scas
pusha
xor
not
jbe
andb
enter
jle
test
clc
pop
mov
cltd
sub
cmp
push
mov
mov
repz
sbb
lock
cmpsb
and
push
cmp
pop
mov
stos
ret
push
inc
out
pop
lret
adc
xchg
jbe
dec
daa
pop
outsl
hlt
and
mov
aas
stc
aas
movsl
add
in
xchg
add
sbbb
dec
arpl
add
lods
pop
hlt
lret
fs
ret
or
cmp
and
outsb
movsb
xor
push
jmp
sbb
xor
fisubrs
psrld
ds
cmp
inc
in
clc
aas
jne
xchg
push
adc
mov
and
jns
xor
std
xor
lret
push
decb
mov
mov
mov
lds
sbb
add
fs
rcrl
mov
cmp
jns
or
xchg
inc
das
pop
scas
popf
hlt
or
jecxz
movups
mov
jno
pusha
jp
cmp
popa
call
test
aam
in
add
imul
cmpb
push
leave
movsb
int3
and
cld
jo
cmc
xbegin
mov
outsl
jmp
or
mov
cmp
mov
lcall
arpl
lret
push
imul
lods
adc
lds
sub
les
push
push
and
repnz
shlb
aaa
rcll
outsl
adc
fstps
jecxz
rcrl
xchg
aas
sbbl
jb
xchg
jae
adc
leave
mov
fisttpl
sub
outsl
lahf
pop
cmpsl
dec
jmp
lds
dec
aam
xchg
lods
es
push
ljmp
jb
aas
into
dec
out
sbbb
sbb
pop
add
movsl
fwait
addr16
dec
push
mov
sub
cmpsb
cmc
stos
movsl
pop
jbe
push
xchg
in
insb
iret
mov
cmp
movsl
dec
lcall
or
or
jge
stc
dec
lea
inc
idivb
xor
enter
add
lods
sbb
add
cmp
andb
mov
mov
gs
xchg
sbb
aaa
stos
mov
sub
and
test
cmp
imul
jbe
sbb
andb
jg
cmpsb
mov
push
pop
jge
push
xchg
jo
test
mov
int3
xchg
fidivs
pop
cli
aam
lock
cwtl
aaa
insb
jnp
outsb
inc
sbb
mov
repnz
jno
and
cmpsb
jns
pusha
and
enter
mov
jo
mov
add
pop
mov
mov
xor
hlt
pop
js
das
mov
add
mov
stos
cli
sub
mov
shll
orl
cmp
test
outsl
ja
inc
push
pusha
cmp
out
push
insb
dec
or
out
jle,pn
cld
cld
popa
std
mov
push
ljmp
sarb
inc
stos
lahf
push
lock
repz
push
cmp
movsb
sahf
mov
push
pop
daa
and
scas
jno
mov
and
dec
cwtl
dec
out
into
addl
or
push
push
and
or
repnz
pop
je
mov
xchg
jns
in
outsb
shr
cmp
jns
scas
jmp
call
add
mov
jo
aas
cmp
xchg
ficoms
nop
push
pop
add
xchg
mov
or
sub
xchg
leave
fwait
inc
add
loope
mov
push
add
or
out
inc
cs
pop
aaa
xor
lds
xlat
xchg
loop
shlb
cltd
hlt
rorl
xchg
lea
push
add
data16
lock
push
jge
adc
xchg
add
es
add
adc
push
or
pop
or
sti
les
cmpl
test
nop
mov
and
inc
ret
and
hlt
ror
shrl
mov
in
cwtl
repz
ret
sub
push
stc
pop
mov
add
xlat
push
and
iret
sub
xlat
sub
adc
scas
popl
mov
int
adc
and
push
call
and
leave
push
mov
add
lods
out
mov
xor
mov
sub
mov
cmpsb
repnz
call
lea
mov
add
fstpt
stos
lcall
insl
sbb
loop
test
xor
jecxz
add
adc
lock
imul
cli
jne
nop
int
leave
dec
in
xchg
insb
inc
popf
jle
push
mov
and
and
sarb
xor
adc
adcb
and
or
lret
xchg
in
lock
lahf
inc
pop
add
and
mov
aad
dec
into
inc
fldl
out
adc
mov
loop
inc
cld
jl
stos
xchg
pop
lods
dec
xchg
mov
in
push
out
pop
xchg
sub
push
xchg
cltd
in
stos
fiadds
fcmovnu
push
pop
fiadds
mov
popf
xchg
jle
faddp
sbb
aaa
dec
mov
imul
loopne
fs
mov
pop
addr16
imul
jecxz
pop
cmpsl
sbb
insb
mov
stos
sbb
mov
negb
jle
sub
adc
sub
and
sbb
repnz
xchg
mov
mov
adc
sbb
mov
jne
ljmp
bound
mov
mulb
and
sbb
xor
mov
std
ds
cld
lahf
dec
mov
stc
int3
std
mov
daa
mov
jp
stc
loopne
mov
cld
leave
xchg
mov
insb
sbb
jle
or
clc
jo,pn
push
fxtract
repz
sbb
xor
mov
mov
cmp
mov
std
call
mov
das
cmp
push
aad
mov
adc
xchg
xor
or
aam
jbe
std
fistpll
test
int
dec
adc
push
or
jmp
pop
push
add
push
or
push
clc
icebp
cwtl
outsb
xor
xchg
mov
push
movd
inc
mov
insb
nop
or
mov
fcompl
ja
inc
pop
frstor
pop
bound
push
jo
test
or
adc
add
mov
mov
xor
mov
lcall
jns
es
xlat
addr16
sub
mov
or
dec
cmpsb
sbb
mov
and
arpl
out
jg
shl
lds
cmc
jge
jmp
jp
sbb
adc
sub
or
divl
insb
mov
push
mov
push
jecxz
add
xchg
sbb
repnz
adc
cmp
lock
dec
jmp
cwtl
repz
mov
or
inc
mov
cwtl
ja
mov
das
or
ss
xor
cld
sub
pop
test
dec
std
sahf
aad
and
add
jg,pt
rorb
cmp
jmp
aaa
sahf
cmp
or
iret
or
movsb
adc
push
or
jge
es
xchg
fstps
inc
stos
mov
idivb
sub
sbb
add
test
repz
sar
sahf
daa
inc
xchg
jnp
inc
cmpsl
dec
inc
ljmp
push
lock
mov
mov
sti
xchg
cmp
test
ljmp
xchg
fcmovb
fistpl
mov
push
xor
shll
fidivrs
dec
imul
icebp
add
pop
adc
ja
mulb
pop
divl
push
sub
dec
mov
pop
les
xchg
fs
xchg
mov
cltd
sub
cwtl
es
cmp
and
add
pop
push
test
pop
testl
sarl
std
pop
ret
jl
jl
les
push
subl
stos
push
mov
mov
inc
and
cwtl
adc
cs
and
aas
cmp
pop
push
pop
dec
sti
lret
cmp
mov
hlt
dec
dec
ja
xchg
aad
push
mov
mov
imul
les
mov
or
sub
push
jo
pop
lods
outsb
fsubrs
xor
xor
cmp
xchg
xchg
sub
cli
aam
lds
pop
jno
sub
adc
dec
mov
add
sarl
sbb
inc
shll
es
icebp
in
leave
mov
mov
sbb
sub
movsl
sbb
idivb
lock
cmc
aas
and
fnstsw
sub
repz
mov
push
inc
call
inc
test
push
shl
adc
mov
fsub
aas
fcmovne
xor
adc
adc
cmpsb
jno
sbb
gs
cmp
mov
sub
movsb
rcr
fs
dec
sub
stos
jns
cld
pop
mov
cmp
and
sbbb
inc
fcomip
dec
push
pusha
adcb
icebp
or
sbb
pop
adc
xchg
pop
mov
xchg
jns
sub
jbe
add
sub
mov
mov
dec
shr
adc
je
cmp
push
push
mov
loope
mov
cmp
dec
jge
daa
pop
push
cld
test
es
jne
xor
insl
icebp
xchg
mov
jae
aaa
enter
push
pop
test
dec
pop
and
mov
sub
mov
fisubl
jmp
and
sub
jae
sbb
mov
cmp
jbe
sub
repnz
mov
adc
xor
icebp
out
add
shlb
inc
jno
insb
and
push
cmove
inc
pop
and
xchg
test
lret
out
and
cwtl
cmp
inc
jb
push
cli
sbb
adc
mov
xchg
mov
ljmp
adc
arpl
mov
xchg
ret
popl
pop
fstpl
shll
pop
dec
movsb
add
xor
push
mov
mov
mov
adc
jo
dec
cmp
fidivs
xchg
roll
or
cmc
xor
inc
fprem
ret
into
jge
test
ret
out
adc
imul
insl
iret
jmp
mov
pop
scas
adcb
ret
sbb
stc
lods
mov
jno
mov
fdivrl
scas
xlat
call
and
add
xchg
addb
fwait
and
stos
mov
cs
dec
pop
loopne
icebp
add
mov
push
add
dec
inc
inc
test
add
xor
mov
inc
divl
adc
ret
bswap
add
cs
in
cmp
mov
jo
aas
dec
add
out
sbb
adc
out
lock
sub
sbb
repnz
and
icebp
adc
fsts
js
test
mov
cld
sub
mov
xchg
mov
or
insl
pop
pop
data16
add
xor
aad
jle
cmpsb
sub
sahf
stos
xchg
gs
adc
and
leave
add
inc
mov
call
adc
mov
jge
cmc
push
loopne
pop
stos
inc
mov
outsl
xchg
into
and
std
sbb
mov
pop
sbbl
test
shll
xor
push
add
scas
popa
pop
lret
ret
dec
xor
lea
adc
ljmp
rcrb
out
mov
jmp
dec
xorb
sbb
lcall
test
dec
cltd
xor
cmp
xor
pop
cli
cli
fisubl
xor
insb
negb
imul
jns
inc
sbb
imul
cmp
adc
and
sub
jae
sub
sti
fistps
sub
pop
xchg
pop
dec
and
add
inc
lock
or
div
pop
cmp
dec
jle
cmp
xchg
pop
xchg
fidivs
pop
out
push
jp
out
mov
lods
fisttps
shlb
stos
jnp
mov
insl
gs
adc
fidivrs
scas
pusha
push
xor
rclb
sar
stc
pop
push
adc
inc
sti
out
adc
mov
jbe
ja
into
cltd
push
ljmp
inc
sahf
pushf
cs
in
mov
sub
dec
js
ja
scas
fdivr
pop
mov
xlat
adc
popf
adc
pop
rcl
jo
test
adc
dec
jecxz
aas
push
mov
fs
mov
jmp
das
je
and
scas
idivb
sbb
pop
jo
sub
mov
fistpl
dec
int
dec
mov
imul
loopne
mov
sub
out
lret
shll
in
rcl
and
icebp
ljmp
inc
dec
addb
in
inc
xlat
xchg
data16
mov
sub
filds
test
lret
cli
aaa
sar
xchg
popa
dec
je
hlt
add
sbb
jae
cmpsl
sti
loopne
pop
nop
fsub
ljmp
pop
mov
pop
lcall
mov
xorb
xor
in
adc
loopne
xchg
push
pushf
test
cmp
push
xchg
les
adc
fs
je
inc
mov
movsb
movsb
push
mov
test
in
hlt
add
xor
and
aam
les
adc
fs
je
inc
mov
movsb
movsb
push
mov
test
in
hlt
add
xor
and
aam
mov
in
xchg
je
inc
mov
movsb
movsb
mov
in
in
les
and
aam
les
xor
fs
test
movsb
movsb
stos
dec
out
je,pn
adc
lret
sub
movsb
xchg
and
adc
add
into
sahf
inc
mov
mov
movsb
add
push
in
les
bound
and
adc
shlb
repnz
lcall
test
hlt
ds
aam
les
xchg
and
adc
add
je
fs
inc
loop
adc
xchg
push
lea
inc
loope
lret
pop
ficoml
repnz
scas
jns
imul
pop
jo
cmp
cmp
popa
out
inc
daa
jne
imul
xor
shll
int
or
push
sbb
mov
and
movsb
jo
out
inc
filds
xor
ret
jb
inc
and
push
testl
cmc
je
dec
ret
mov
inc
sbb
in
std
xchg
mov
ret
mov
les
arpl
out
rolb
adc
pushf
pop
insb
dec
push
cwtl
inc
ret
rorl
int
cmpsl
add
int3
pop
and
sahf
mov
lods
or
jb
loope
or
adcb
aad
lds
xchg
and
adc
add
je
fs
inc
loop
adc
hlt
push
in
aam
les
inc
xchg
pusha
ret
js
dec
mov
adc
add
push
loopne
adcb
daa
mov
mull
pusha
xlat
dec
mov
push
fwait
cmp
out
leave
jnp
popa
loope
mov
and
or
ja
and
xor
repnz
loop
adc
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
inc
loop
adc
hlt
push
in
aam
les
xchg
and
cltd
pop
push
pusha
pop
cmpsb
outsl
sub
mov
jb
inc
cmc
mov
repz
icebp
add
mov
push
or
aaa
fiadds
or
fdivrp
xor
xor
sbb
or
sahf
jp
dec
or
pop
push
push
dec
imull
xchg
loope
call
iret
mov
adc
xchg
mov
cmp
hlt
xor
push
dec
out
xchg
sub
xchg
push
jge
lahf
cmove
pop
testb
adc
cmp
cld
jmp
dec
addr16
and
fwait
mov
jno
mov
and
pop
lods
fisubl
andl
cwtl
int
pop
mov
in
dec
daa
movsl
jge
push
sbb
pop
or
sahf
lods
sub
inc
xchg
mov
stos
into
jno
cmp
sbb
popf
pop
cmpsl
and
or
decb
orl
mov
cld
cmpb
fisubrs
mov
or
pop
aaa
aam
cltd
and
xchg
lcall
mov
and
dec
pop
ljmp
int3
mov
xlat
ficomps
fdivrs
daa
fsubrl
mov
cs
adc
cmp
xchg
cs
in
scas
cmp
xchg
cmp
in
xor
cltd
outsb
and
hlt
cmp
call
mov
fnstcw
repnz
shll
pop
daa
cs
rclb
popf
bound
daa
pop
dec
jmp
and
cmc
lfs
jmp
pmulhw
rcrl
hlt
shrl
aam
leave
mov
dec
and
sbb
out
cmp
gs
fiaddl
movsl
adc
sti
test
sbb
adc
sub
dec
out
sti
jbe
ret
sti
sub
sbb
sbb
lcall
add
pop
aam
pop
test
jg
jnp
aas
add
xor
imul
call
popa
pop
jecxz,pn
xchg
xor
nop
add
rorl
dec
cmp
push
jae
dec
adc
xor
dec
fcoms
notl
dec
and
add
idivl
dec
or
or
push
sbb
mov
imul
out
dec
inc
dec
pop
sub
xlat
or
je
pop
cmp
gs
push
jae
test
add
mov
add
xor
mov
hlt
push
cmp
fldl
movsl
push
mov
mov
xor
adc
nop
sub
es
scas
sbb
scas
add
lock
push
sarb
mov
inc
mov
pop
inc
les
push
push
push
xchg
movsb
stos
scas
fiaddl
fcompl
scas
mov
or
dec
pop
loop
dec
testl
fstpt
adc
orl
inc
test
pop
jmp
pop
mov
inc
mov
movsl
mov
cli
pop
xchg
push
inc
mov
fwait
add
jne
sub
pcmpeqw
ret
cmpsl
add
fs
xchg
add
add
out
gs
cmp
inc
in
jp
int3
out
cmp
xchg
cmp
pusha
cwtl
sbb
lcall
frstor
hlt
push
addl
jbe
icebp
in
xor
xchg
lods
mov
dec
dec
add
push
jae
rcr
jno
add
mov
jl
test
jl
test
iret
push
jmp
sub
popa
cmpsb
cmpsb
pop
and
cmp
enter
sbb
lret
xchg
mov
dec
jns
jmp
jbe
inc
das
paddq
push
inc
xor
mov
insb
inc
and
adc
sub
fxch
shlb
sub
sbb
imul
xor
or
mov
andb
icebp
mov
shll
icebp
jb
stos
jecxz
add
js
xchg
xchg
mov
aas
adc
adc
lock
dec
lods
fisubrs
mov
loope
or
scas
xor
les
in
sarb
aas
iret
jle
orl
sbb
pop
icebp
enter
hlt
sbb
or
shrl
insb
pushf
jne
cmpb
stc
mov
inc
je
push
data16
push
andl
adc
scas
jg
test
push
inc
mov
decb
dec
mov
push
mov
std
mov
insb
in
adc
ret
out
adc
in
lods
lds
in
mov
fstl
fcomp
jge
cmp
in
inc
shlb
repz
push
jg
test
loopne
in
push
fcompl
pop
mov
fisubl
int3
jno
jae
push
jmp
dec
movl
cmp
sbb
push
jge
xchg
and
push
dec
inc
call
xchg
mov
out
and
push
fcmovnbe
mov
inc
xor
sub
sbbl
sub
xor
popf
sbb
rcrb
inc
mov
jmp
mov
xor
jbe
push
enter
xor
stos
fsubl
sahf
cltd
ret
sbb
adc
in
xor
das
xlat
lahf
mov
sub
daa
test
adc
lds
xchg
lea
jne
xchg
jmp
rolb
frstor
cmp
add
cmp
adc
inc
add
mov
pushf
das
ljmp
push
fs
xor
out
jae
ret
jecxz
andl
xchg
jnp
cmp
test
loopne
ljmp
jge
sub
test
pop
movl
jae
sbb
jbe
mov
ljmp
xchg
inc
sbb
es
bound
dec
hlt
jg
andl
pop
stos
andb
aas
adc
dec
pop
pop
fs
stos
or
mov
sti
insl
xchg
cmp
es
in
les
ret
sub
push
mov
pop
jmp
andl
add
push
hlt
and
popf
and
mov
mov
push
je
mov
push
cs
lahf
lcall
es
testl
mov
sbb
lahf
loopne
pop
push
xchg
or
fdivl
cwtl
paddd
insl
xchg
pushf
addr16
cmp
ja
jge
ds
or
push
mov
and
jo
aam
and
push
adc
aaa
lea
push
dec
mov
in
notb
inc
aas
test
popa
rcr
test
cmp
mov
xchg
mov
movsl
dec
outsl
je
jnp
daa
pop
mov
sar
ffreep
ret
push
dec
repz
int3
aaa
lea
mov
xor
or
sub
outsb
inc
jbe
pop
adc
mov
notb
adc
xor
shll
jo
scas
mov
fld
stos
or
dec
mov
sbb
lods
adc
pop
outsl
jmp
push
cmpsb
data16
sti
cld
pop
fxsave
inc
sahf
mov
xchg
in
push
cmp
add
mulb
rcrl
aaa
inc
cli
in
and
sub
ret
dec
bound
jmp
inc
daa
xor
rorb
pusha
cmpsl
frstor
repnz
sub
inc
rorl
inc
xlat
cmp
push
pop
pop
adc
cli
mov
mov
mov
mov
xchg
fsubs
dec
gs
mov
inc
fisubrs
shrl
shll
mul
orl
rorl
mov
stos
out
jg
mov
adc
xor
jae
jns
and
mov
xchg
movsl
xor
push
fcmovb
dec
cwtl
mov
push
adc
gs
xlat
cld
cmpsb
std
or
in
sbb
and
push
jge
aaa
cmp
pop
push
pop
jbe
bound
jbe
fs
xor
es
jb
loop
pop
ror
jle
inc
sbb
jmp
sar
cltd
adc
push
xchg
sahf
pop
push
push
dec
es
push
cmp
int
into
fucom
dec
mov
mov
pop
shlb
push
xchg
mov
xchg
pop
fisubl
mov
stos
fsub
and
jl
and
and
xchg
cwtl
xor
sub
ret
adc
fistps
dec
repnz
mov
push
mov
xchg
dec
mov
sqrtps
push
jmp
xchg
sarl
ret
in
stc
es
xchg
outsb
jbe
jns
outsb
cmp
cmp
fildll
cmp
fildll
mov
inc
daa
mov
popf
xor
imul
xchg
and
and
hlt
idivl
arpl
ja
mov
stos
test
shr
cmp
ja
loope
push
lret
ds
aas
adc
mov
int
xchg
pop
cmp
adc
std
insl
scas
in
lahf
cli
jmp
imul
mov
xor
pop
movsl
cs
and
sti
inc
add
arpl
aam
jb
out
and
dec
mov
inc
dec
xchg
push
insb
xor
les
xor
xor
jle
or
inc
test
cmp
fists
test
movsb
sub
xorl
popf
pop
inc
in
fstpt
bound
mov
insb
mov
inc
push
arpl
or
dec
mov
das
out
inc
or
jg
movsl
imul
jb
lods
repz
mov
inc
test
adc
lods
xchg
sbb
nop
lds
mov
das
mov
or
int3
faddl
movsb
mov
fldenv
repnz
xchg
xchg
mov
out
or
sahf
sbbb
hlt
icebp
in
sub
out
fiadds
xor
sbb
add
pop
filds
jle
popa
mov
xchg
xchg
mov
mov
rclb
imul
or
dec
inc
push
iret
add
shl
lahf
fstpl
prefetcht2
pop
add
outsl
popa
jns
dec
hlt
les
sbb
arpl
test
pop
pop
jno
jbe
int
xchg
mov
lret
roll
sub
aaa
pushf
dec
cmp
loop
xchg
sub
xchg
js
adc
stos
or
or
mov
push
fst
ja
test
dec
outsl
iret
out
xchg
in
jb
setl
lret
and
testb
sbb
in
mov
mov
cmp
jae
div
mov
in
push
dec
push
int
pop
mov
adc
or
pop
aaa
xor
js
mov
jnp
stc
rolb
sbb
pop
popf
push
or
repnz
nop
loope
fldt
sub
and
mov
mov
jg
dec
adc
imul
dec
movsl
xor
pop
in
test
jo
and
scas
adc
insl
mov
inc
cld
jge
imul
or
cwtl
sbb
or
cmpsl
jo
cwtl
inc
imul
sar
push
mov
or
add
rclb
je
inc
repz
shll
ret
nop
outsl
push
lds
imul
std
into
in
pusha
loopne
xchg
jnp
mov
jmp
cld
add
shlb
pusha
jo
sbb
sub
add
mov
inc
inc
jp
call
jmp
pop
call
out
push
inc
bound
in
xor
mov
push
popa
add
ret
movsb
pop
cmp
mov
lods
sub
out
mov
mov
addr16
mov
jae
insl
or
iret
aam
in
pop
mov
pushf
ja
push
mov
pop
jmp
pop
jecxz
xor
xlat
stc
xor
push
mov
mov
xchg
jno
call
clc
mov
outsb
xlat
subl
xlat
int3
stos
rorl
popf
xor
stc
lods
repnz
enter
out
hlt
lock
iret
test
outsb
aam
dec
mov
jbe
movsb
stc
and
lods
pushf
cmpb
repz
sub
lcall
sub
addb
stc
sub
jbe
mov
arpl
jmp
clc
or
dec
ror
pusha
cmc
movsl
aaa
or
nop
insl
jle
jle
mov
mov
and
jno
ja
push
or
xchg
sti
push
or
jmp
jle
inc
mov
pop
jmp
jecxz
push
fs
loope
scas
jle
aas
inc
push
cld
jns
dec
stos
xor
dec
push
push
mov
in
push
cmp
aad
hlt
pusha
inc
les
or
push
sbb
jns
adc
cmp
mov
shl
movsl
lret
ret
test
jns
ja
dec
in
out
aam
push
push
movq
push
fimull
in
inc
fisttpl
movsb
push
sbb
cmc
sbb
out
jnp
or
cmp
lcall
dec
jns
loop
jae
lds
mov
sbbb
sub
push
jmp
sbb
movsl
std
dec
add
dec
cmp
cwtl
loop
andl
in
mov
sahf
dec
inc
inc
adc
dec
loopne
jns
mov
sarb
fwait
lcall
pop
jbe
pop
mov
xchg
lods
dec
add
inc
shlb
sbb
shrb
aam
mov
jno
push
repz
popa
fistpl
and
inc
xchg
pop
cltd
push
ret
in
sub
inc
cmp
loope
ret
pop
mov
inc
inc
jmp
pop
neg
test
movsl
into
adc
int
pop
inc
lcall
mov
test
mov
jecxz
or
in
roll
push
xor
pusha
aam
jne
ficoms
mov
jnp
and
test
daa
jle
fwait
rorl
cmpsb
sub
int
cs
xchg
dec
daa
cmpsl
cmpsb
or
xorb
dec
pop
dec
pop
aam
pop
push
jnp
push
test
push
xor
or
add
or
adcb
jge
mov
inc
xchg
jo
iret
inc
call
sar
stos
stos
jo
pop
int
mov
repz
sub
sub
jb
mov
jmp
xor
jno
adc
ds
adc
movsl
xor
add
inc
lods
pop
gs
xor
mov
jnp
inc
cmp
mov
call
pop
sub
setle
inc
or
dec
aaa
sub
xchg
pop
subl
jne
nop
jecxz
das
pop
mov
orl
push
dec
rclb
jne
xchg
mov
call
roll
insl
nop
lret
xchg
cmp
insb
ret
orl
mov
mov
xchg
jge
inc
jecxz
and
into
sub
jg
mov
sub
sbb
sbbb
jb
xor
mov
push
jmp
or
pop
and
jnp
inc
jp
lods
shll
cmp
in
sub
dec
mov
in
stos
mov
fnsave
pop
icebp
jns
sub
hlt
aam
sbb
mov
xor
lret
cmpsl
fcompl
dec
jno
push
jg
lret
fmuls
pop
ret
push
pushl
xor
adc
pop
mov
loope
cld
mov
aaa
scas
ljmp
fisubrs
add
dec
sbb
fldl
shlb
stc
enter
test
dec
imul
inc
pop
inc
rorl
in
hlt
cmc
inc
xlat
jns
out
andb
sub
bound
outsl
mov
lods
sub
push
loope
data16
xor
sti
jns
mov
les
mov
sahf
lret
hlt
insl
dec
cmp
gs
mov
mov
mov
xchg
or
mov
cs
shll
hlt
je
pop
ss
mov
inc
push
mov
jg
andb
inc
fcmovbe
lods
fs
push
jbe
addr16
gs
shrl
sub
inc
lahf
and
pop
xchg
roll
xchg
mov
inc
aas
mov
fsubrs
xchg
push
out
sub
inc
in
lds
pop
cmp
cmc
and
cli
mov
sub
cmpsb
push
adc
out
xor
ljmp
mov
test
fiadds
dec
pop
jno
cmpsl
inc
in
imul
or
cmpsl
xor
rorl
jno
jecxz
jle
int
push
je
inc
aas
pop
in
aad
mov
bound
jl
jle
cmp
pop
ficomps
pop
test
cld
sbb
enter
dec
inc
lods
inc
gs
cmp
enter
sbb
cmpb
push
jg
cwtl
cmp
mov
icebp
js
xchg
popf
sub
jb
mov
das
dec
dec
and
mov
mov
push
popa
ret
out
lea
stos
xor
jl
aaa
jo
xchg
adc
fwait
shl
sub
ficoms
jge
insl
scas
or
mov
pop
jno
loope
lahf
arpl
and
clc
jl
in
xchg
xchg
fs
pop
cmpsb
and
dec
push
sub
jle
pop
add
dec
in
xor
pop
mov
jge
sarl
rorl
in
cmpsl
aad
xor
cmp
lahf
enter
xchg
jl
jle
add
add
mov
pop
dec
push
out
les
and
push
insb
stc
mov
xchg
loop
pusha
push
ja
imul
ja
push
filds
sbb
mov
or
sub
ret
push
ret
shlb
ss
adc
js
jns
xchg
sub
mov
and
enter
jp
dec
shrl
push
push
lcall
insb
mov
ljmp
lock
aad
cmp
mov
lods
sti
rolb
fstl
fcoms
js
jmp
out
lret
sub
mov
add
and
imul
pop
pop
sub
enter
mov
imul
pop
sub
cmp
push
add
out
inc
xchg
jg
lret
mov
xchg
addr16
cli
pushf
cltd
add
mov
inc
xchg
lods
ret
lret
rcrl
dec
dec
adc
adc
shrl
inc
add
inc
frstor
cwtl
or
pop
dec
pop
sbb
inc
push
inc
adc
ljmp
add
fs
fstl
std
lret
loopne
nop
xchg
dec
enter
data16
inc
xor
out
pop
xchg
push
cltd
adc
pushf
mov
pop
add
in
fisttpll
icebp
in
xor
mov
adc
ss
in
movsb
out
mov
iret
loop
test
mov
repnz
lea
mov
int
dec
jnp
xchg
test
ficoms
cmp
lcall
push
mov
aam
int3
adc
or
and
xor
jg
ljmp
lcall
cmp
push
cmp
cmpsb
xorl
loopne
lods
xchg
pusha
ret
insb
adcl
and
jecxz
ds
stos
jns
sub
std
pop
fidivrs
iret
inc
aam
pop
dec
imul
loopne
cmp
xchg
mov
dec
outsb
mov
lret
and
lods
lock
xor
paddusb
xchg
jp
xor
test
sbb
mov
jmp
mov
addr16
movsl
pop
fld
jmp
mov
stos
mov
es
add
and
gs
or
out
jecxz
pop
mov
f2xm1
outsb
xchg
xchg
lods
ret
test
fwait
lret
push
jmp
aad
enter
out
mov
push
inc
mov
mov
outsb
mov
dec
dec
addb
movsb
pushf
mov
mov
out
sti
in
xchg
inc
xchg
in
repnz
lret
out
or
add
cmc
outsl
or
dec
add
fwait
push
adc
test
scas
adc
mov
jg
xchg
cmp
xor
test
ja
daa
jmp
or
sbb
dec
rcrl
mov
lret
xchg
adc
cwtl
push
xchg
inc
stc
dec
mov
jno
xchg
inc
adc
es
int
xor
sarl
add
outsb
lret
loop
dec
dec
aad
sbb
add
and
mov
cmpsb
in
inc
call
iret
cmp
icebp
xor
fimuls
sub
test
daa
xchg
test
clc
repz
pop
testb
jl
xchg
lds
jg
insb
cld
and
int3
rcrl
daa
iret
sub
dec
pop
pop
stc
fistps
test
fdivrl
cmp
pop
sbb
dec
xchg
mov
xchg
mov
cmp
scas
lret
nop
ret
movsl
inc
sbb
aas
sar
or
mov
ja
jno
in
sarb
push
outsl
ja
nop
test
ja
inc
adc
cmp
mov
sub
xor
xor
push
insb
icebp
mov
or
int3
cltd
es
and
push
push
and
cld
int
inc
pop
or
fwait
jb
xchg
inc
movsl
jge
test
sub
mov
xor
movsb
addr16
adc
arpl
shrl
pop
xchg
jmp
repz
push
sub
clc
ljmp
mov
pop
loop
xor
out
or
xchg
movb
mov
mov
repnz
push
jno
or
xchg
inc
and
mov
push
xchg
fs
test
pop
fidivrs
test
in
out
out
inc
cs
fnstsw
xor
xor
mov
push
or
jne
xchg
inc
cmp
jle
aaa
fisubl
or
adc
inc
pop
loopne
test
xor
std
je
icebp
push
xchg
dec
int
insb
cs
outsb
psubw
xchg
aad
pop
xchg
in
nop
clc
or
stos
out
movl
cmovno
lret
xor
xor
lods
push
and
add
je
fs
inc
loop
adc
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
inc
loop
adc
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
inc
loop
adc
hlt
push
in
aam
lds
xchg
and
mov
push
repnz
loop
adc
sbb
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmpsb
scas
ss
and
xor
mov
sbb
add
add
push
add
add
or
add
add
test
dec
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lldt
add
add
mov
add
imul
sub
add
add
add
add
add
add
push
add
xchg
mov
add
add
jecxz
insl
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
filds
mov
or
or
roll
mov
sti
add
add
add
aas
add
cmp
lldt
add
add
add
add
add
gs
add
int
add
add
add
add
add
add
or
push
add
add
add
lds
jg
jo
addb
add
mov
add
add
add
int
imul
add
add
add
add
add
add
add
sbb
aas
add
das
add
add
add
add
jae
out
lds
outsl
add
add
add
add
add
scas
add
add
add
or
or
pop
add
add
add
aas
add
sbb
mov
add
add
add
push
add
add
add
add
or
std
add
aaa
add
test
add
add
add
add
add
add
add
in
lods
add
add
add
add
add
lret
add
adc
add
add
pop
add
xchg
add
add
inc
add
adc
jge
lds
xor
add
fadds
movb
add
add
or
fiaddl
dec
add
add
add
add
push
add
pop
add
add
add
add
add
add
add
add
add
enter
cltd
add
add
jg
jecxz
test
stos
add
add
add
add
add
add
add
xor
add
add
mov
add
cmp
dec
add
add
add
add
jo
testl
outsb
add
jae
test
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
and
and
into
add
add
test
add
add
push
add
add
add
pop
add
into
add
add
add
pop
add
adc
str
add
add
pop
add
add
add
enter
mov
movsb
add
add
cmpsb
add
add
add
add
js
mov
aad
add
add
add
and
aam
sub
jb
dec
or
loope
and
add
dec
das
sbb
xchg
sub
push
push
xchg
dec
and
mov
xchg
push
out
push
mov
rcl
icebp
jg
hlt
pusha
push
adc
addr16
rcrl
imul
push
std
pop
pop
cwtl
or
inc
ds
dec
pop
fs
jnp
pop
mov
and
cltd
mov
cmp
mov
inc
insw
dec
daa
in
pop
fnstenv
cmp
add
dec
ret
shr
aaa
movsl
xorl
sub
adc
popf
xor
xchg
cmp
in
addr16
push
stos
stos
push
xor
xlat
mov
movsb
sbb
jmp
lahf
ss
xchg
cmc
test
or
nop
mov
push
inc
rorb
cmp
dec
in
in
add
mov
and
pop
out
xchg
leave
subl
or
inc
inc
out
mov
push
ret
shrb
fcoml
jp
andl
fwait
gs
mov
mov
dec
xor
push
fbstp
movsl
and
imul
mov
mov
idiv
xor
xchg
push
add
cli
jl
rcl
inc
sub
scas
inc
fcom
inc
pop
jns
dec
mov
jmp
xchg
popa
mov
loope
imul
and
add
xor
jg
push
fdivs
push
lods
cmpsb
mov
push
gs
repnz
jbe
and
scas
aaa
loopne
pop
inc
mov
dec
xchg
xor
mov
xor
in
mov
sbb
xchg
enter
push
rorb
inc
push
jle
cmpb
xor
addr16
mov
xchg
lret
jg
and
xchg
dec
and
pop
dec
dec
outsl
aaa
mov
insl
in
ss
mov
sbb
gs
cmpsl
dec
inc
mov
test
pop
scas
cmp
xor
sbb
inc
mov
lods
mov
mov
and
dec
cwtl
push
push
xor
inc
inc
out
fwait
inc
xchg
push
mov
xlat
lcall
sahf
fsts
mov
jecxz
sbb
sbb
rol
fistps
mov
or
jle
xchg
das
lcall
inc
inc
insb
sub
or
add
mov
pop
lahf
std
aad
test
sub
jl
dec
in
xchg
loopne
ds
fiaddl
movsl
xor
xchg
xchg
jmp
repnz
test
mov
pop
sbbb
and
fisubl
test
iret
sbb
and
mov
aam
scas
or
loopne
cmpsb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
