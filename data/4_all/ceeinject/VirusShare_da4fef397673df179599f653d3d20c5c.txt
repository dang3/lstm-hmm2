call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aad
lds
cmc
or
sbb
and
inc
mov
mov
adc
cmp
or
sbb
dec
movsl
ds
stos
inc
mov
adc
lret
and
cmp
or
sbb
dec
movsl
pop
push
stos
inc
cwtl
push
out
dec
cmc
jge
cmpsw
jnp
dec
lods
pushf
lds
pop
xchg
jle
roll
pop
xchg
sub
rcrb
xor
pop
pop
sub
add
xchg
mov
ret
push
shll
je
mov
sti
adc
sub
fldcw
lret
es
mov
nop
dec
cwtl
push
stos
das
mov
mov
mov
push
inc
in
nop
cmpsb
les
sbbl
dec
xchg
push
jnp
inc
int
push
push
push
inc
clc
dec
inc
push
jmp
insl
sbb
jmp
les
loopne
xchg
mov
movsb
pop
inc
push
mov
fwait
cwtl
mov
xor
sub
sub
insl
and
lock
shrl
add
and
add
xor
sub
cmp
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
and
inc
nop
dec
sbbb
int3
cs
adc
inc
mov
jo
insb
mov
inc
mov
movsl
inc
cmpb
jmp
jne
into
inc
leave
xor
and
jo
push
insl
inc
scas
and
push
xchg
pop
test
dec
movsl
pop
push
stos
inc
mov
adc
lret
and
cmp
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
and
adc
rcr
sahf
sub
or
mov
movsl
out
aaa
dec
pushf
mov
sbb
sbb
mov
mov
lock
movsb
and
mov
addb
mov
cmp
mov
mov
stc
mov
call
rorl
or
scas
stc
push
arpl
clc
adc
insl
xor
and
and
rorl
mov
bound
xlat
mov
adc
and
cmp
pop
ljmp
inc
ja
outsl
dec
movsl
add
jae
in
push
pushf
xchg
pop
pop
jno
iret
sub
lret
addr16
std
nop
test
mov
adc
or
mov
xor
sbb
mov
arpl
push
rolb
xor
jb
xor
sub
mov
stos
outsb
push
mov
adc
xor
push
roll
fidivl
nop
aam
cmpl
or
nop
test
fwait
adc
loopne
dec
or
mov
jno
les
adc
xchg
xor
or
xchg
lods
jb
js
lahf
pusha
lret
sbb
mov
faddl
inc
xchg
xchg
jle
lods
pop
sub
loope
outsb
ficoml
mov
fidivrl
loop
mov
lods
xor
js
xor
sbb
dec
xchg
xchg
cmc
inc
xor
mov
mov
xchg
dec
mov
xor
outsl
or
dec
es
outsb
and
lock
jae
sbb
push
popf
je
stos
mov
xchg
xchg
loopne
outsb
neg
cs
push
popa
imul
push
imul
dec
js
aad
sbb
lahf
out
push
xor
xchg
fucomp
cmp
cld
iret
push
das
xlat
inc
arpl
data16
add
loopne
xor
sub
fistpll
xchg
push
je
xor
pop
jo
pop
movl
cmp
fimuls
mov
popf
std
fmull
stc
push
dec
jp
mov
xor
jle
sbb
cld
push
mov
lock
xchg
xchg
call
lea
xchg
hlt
pop
sahf
not
xor
pop
xor
jp
rcrb
hlt
mov
adc
stos
adc
xor
jbe
xchg
adc
push
outsl
fimull
mov
std
mov
lahf
push
lea
jne
jle
fistps
jl
sbbb
pop
push
scas
lods
cld
loopne
sahf
and
test
cmpsb
js
pop
or
cmp
sub
pop
fwait
cli
mov
shrl
pop
jmp
inc
leave
das
xor
loopne
sahf
dec
push
mov
mov
xchg
sub
pop
add
mov
lds
or
rcrl
in
xorl
inc
enter
xchg
xor
mov
adc
sahf
in
mov
or
sub
xchg
or
int
cmp
or
xor
and
lods
imul
ret
mov
or
or
mov
test
adc
cmp
daa
cltd
mov
sub
pop
fcomps
mov
cmp
xchg
or
pop
xorl
out
leave
sarb
aad
adc
pause
push
push
inc
frstor
xor
xorl
xlat
cld
dec
dec
into
scas
negb
inc
lods
ret
shll
xchg
bound
fistpl
mov
mov
ljmp
cld
jno
daa
gs
mov
sub
mov
sbb
sbbb
lcall
ja
les
dec
pop
dec
mov
xchg
shll
sub
hlt
fnsave
xchg
rcll
inc
xor
mov
stc
mov
and
add
add
cs
stos
out
call
jne
xor
push
mov
xchg
mov
pop
nop
cmpsb
mov
jmp
mov
adc
xor
xchg
rorb
sub
mov
xchg
inc
int
pushl
sarl
add
shlb
dec
lock
insl
dec
out
sarl
push
in
outsl
ja
mov
inc
add
fdivp
popf
and
sbb
adc
mov
data16
and
test
pushf
loopne
or
inc
push
test
stos
icebp
cmp
mov
fwait
aam
fimuls
mov
inc
jmp
shl
jle
shl
stos
push
mov
cmp
inc
test
bound
xor
adc
add
or
pushl
mov
fs
inc
pushf
movsl
lds
test
aaa
test
inc
fisubl
shlb
mov
dec
shl
mov
fs
xor
sub
fidivs
data16
xchg
or
loopne
cli
fldl
xchg
mov
pop
aas
pop
into
mov
inc
dec
and
rolb
aam
sub
push
movsb
dec
mov
test
push
in
fstpt
push
xor
jns
adc
fidivs
scas
lea
push
int3
testl
jg
cld
lods
sub
aam
xchg
shrb
cmp
dec
hlt
mov
aad
xor
push
xor
jb
roll
gs
jne
push
sbb
pop
ficoml
ljmp
jl
mov
aaa
jmp
push
sbb
sbb
pushl
in
inc
and
les
repnz
fwait
push
leave
jmp
imul
sbb
or
mov
repnz
rolb
sahf
jp
cs
dec
push
stc
mov
push
dec
ret
pop
mov
sub
movsl
ret
sar
rclb
daa
mov
add
cs
insb
jne
mov
shll
push
inc
insb
mov
stos
sahf
xchg
xchg
stc
xor
cmp
sub
test
in
cmp
lret
lret
cmp
cmc
jno
sub
mov
rorl
fwait
inc
mov
mov
pop
xchg
out
sbb
adcb
incl
inc
aad
pop
loopne
pop
xor
js
and
daa
cs
pop
pop
fisubrl
cmpsl
leave
stc
aaa
sahf
pop
repnz
push
xor
mov
shlb
sub
jns
fwait
mov
cmp
mov
pop
shlb
ret
mov
dec
stc
cld
ret
mov
add
jns
xor
dec
lock
gs
inc
dec
mov
add
mulb
test
aaa
and
ret
sbb
repz
loopne
and
lret
in
mov
xchg
mov
dec
sub
ljmp
lahf
sub
sbb
cmpsb
out
js
lahf
jle
ds
cmc
fsubr
subb
jo
pop
mov
jne
mov
outsl
inc
pop
out
sbb
jle
pop
loop
push
push
shl
cmpb
stc
xchg
jle
imul
xor
pop
xchg
or
jp
mov
out
xchg
gs
inc
pop
call
sbb
cmp
imul
imul
sahf
shlb
cwtl
push
lcall
int
cld
or
xor
sti
adc
lea
jle
xor
xor
in
insl
fs
dec
xor
call
and
cmp
xchg
cmp
js
or
adcl
aam
sub
add
sbb
lret
push
cmp
fistps
sbb
and
dec
hlt
shr
sub
pop
jg
mov
push
sub
inc
mov
lds
dec
mov
jns
dec
sbb
scas
fcomip
popa
add
mov
jb
into
xlat
push
cwtl
pushf
sub
and
ja
inc
jne
ret
mov
cmc
inc
jmp
add
cmpsb
push
or
cmp
xor
test
test
or
dec
icebp
dec
ja
sub
pop
scas
push
dec
adc
stos
fisttpl
sub
icebp
push
inc
mov
xchg
pop
sub
pop
movsb
movsb
stos
mov
or
vmwrite
or
xor
mov
js
xlat
lcall
lds
or
cmp
push
out
xor
push
ret
lcall
insl
mov
and
iret
mov
jbe
pop
or
in
pop
mov
dec
xchg
imul
xchg
in
aad
rolb
addr16
test
mov
push
adc
dec
sti
icebp
or
mov
movsl
loope
int3
pushf
adc
fsubrs
dec
out
jmp
shrb
insb
aam
in
mov
cwtl
rcrl
lock
jge
and
pop
cmp
or
mov
sub
jl
fcompl
cmp
fwait
cwtl
ficoml
das
mov
in
xchg
cmp
jmp
std
push
dec
mov
add
add
in
pop
stc
mov
les
je
insb
out
mov
das
and
push
sbb
xchg
mov
push
xorl
mov
repz
pop
add
mov
imul
aaa
sub
pusha
clc
mov
cmpsb
add
sub
push
dec
xchg
add
loope
cmpsl
adc
in
mov
iret
xchg
cmp
dec
jns
adc
push
jnp
dec
mov
xchg
das
cmp
sub
sti
ss
push
cmp
and
sbb
xorl
mov
loop
aam
mov
pop
std
adc
jb
pop
adc
mov
insl
in
sbb
fldenv
pop
icebp
mov
cmp
out
das
xchg
mov
pop
inc
push
int3
repnz
arpl
cld
or
iret
test
xchg
stos
xor
adc
mov
mul
sbb
add
mov
sbbl
es
or
mov
dec
ret
jp
test
out
adc
and
jge
inc
push
xor
aad
mov
mov
adc
sti
and
inc
dec
and
dec
mov
iret
pusha
cld
outsl
out
popa
xchg
xlat
dec
pushl
dec
mov
pop
pop
adc
pop
in
leave
and
les
push
cli
pop
pushf
pop
addr16
mov
ljmp
add
adc
es
popf
jbe
adc
lcall
fwait
mov
mov
in
mov
lea
and
incl
inc
mov
xor
lea
stc
dec
and
mov
xchg
or
pop
test
jl
inc
pusha
pop
add
mov
or
mov
into
add
imul
in
pop
mov
rol
add
mov
jg
xor
out
shl
sub
les
cmpsl
push
add
loopne
inc
cmpsb
pop
adc
stc
cmp
jmp
arpl
jae
imul
sbb
sub
loop
add
mov
and
subb
push
dec
hlt
shlb
adc
mov
or
roll
fs
adc
pusha
mov
jp
icebp
push
test
pop
push
std
lods
ret
aaa
jg
jle
add
push
lock
adc
xor
icebp
not
mov
pop
fiaddl
xor
mov
inc
nop
sbb
movsl
jae
mov
rorl
incl
sahf
pop
push
push
sbb
jge
repnz
shlb
lret
sbb
adc
roll
xchg
hlt
push
insb
aas
ja
and
mov
loope
push
mov
sahf
push
popa
add
imull
ljmp
and
mov
addb
adc
and
pop
fdivrs
sbb
pop
insl
fwait
mov
and
out
bound
adcl
int3
mulb
dec
icebp
cmpsl
fmul
mov
pop
mov
ljmp
pop
and
sbb
jb
add
jmp
cwtl
scas
push
pop
fistpll
add
add
dec
stos
xchg
jae
fwait
arpl
fldenv
jno
popf
mov
cmp
cmp
xor
ret
aas
ds
pop
jg
fcmovne
fldcw
pop
pop
jno
mov
out
xchg
jo
cmpsl
jmp
pushl
lcall
or
jns
into
sbb
pusha
sti
stos
call
push
sub
mov
push
and
push
jmp
outsb
mov
divl
jp,pt
imul
or
xchg
inc
in
jae
dec
or
jp
lods
outsl
mov
int
xchg
dec
dec
fistl
sbb
loop
mov
jo
inc
pop
sbb
adc
push
cmc
notb
dec
jnp
mov
fmull
push
adcl
call
jbe
or
and
pop
in
push
js
subb
cmp
test
push
cmp
mov
add
pop
inc
shlb
dec
and
adc
call
bound
fcompl
fcomip
lods
add
fisttpll
sub
repnz
addr16
push
xchg
cmp
jns
out
xlat
roll
bound
ror
aad
jmp
adc
mov
mov
xor
lahf
pop
jmp
add
push
fs
sahf
out
push
mov
dec
repnz
daa
mov
jae
pop
outsb
inc
mov
test
mov
sti
outsb
mov
into
xor
pop
dec
sahf
lods
cwtl
mov
jg
popf
test
iret
or
cmp
movb
pop
insb
add
add
stos
divb
fs
mov
insl
lahf
das
iret
out
fcomps
mov
popf
lahf
mov
loop
dec
and
adc
lea
pop
ret
mov
addr16
sbb
xchg
arpl
and
dec
lock
jecxz
pcmpgtw
xchg
adc
jae
fptan
repz
add
mov
inc
dec
mov
fcmove
xchg
or
and
daa
cwtl
mov
mov
mov
dec
popa
mov
das
mov
sbbb
adcb
lea
push
push
jl
jle
lods
rep
inc
mov
cltd
sti
data16
shrb
rclb
hlt
cltd
stc
lods
pop
xchg
test
and
adc
or
xorb
les
jge
lods
mov
aad
or
sub
inc
cmpsb
inc
orb
jg
loopne
xor
lods
adc
jle
imul
jle
movsl
shlb
dec
movq
mov
ds
dec
or
sahf
sub
in
pop
divl
sub
jb
call
jp
mov
pop
stos
xchg
fcomps
je
movsb
cli
dec
jo
or
push
pop
jle
loopne
shrb
popf
dec
jnp
lds
mov
adcb
out
in
xchg
cmp
insl
push
out
mov
test
ds
addr16
mov
xchg
imulb
es
inc
hlt
mov
loopne
xchg
arpl
adc
and
pop
out
cmp
adc
in
jmp
lcall
lahf
lahf
cmp
inc
cmpsl
sarb
lcall
xchg
test
ficomps
repnz
mov
sbb
or
mov
xor
int3
hlt
addr16
pop
fstl
sub
fcos
cmp
stos
sarb
into
jle
addr16
hlt
jmp
fscale
adc
jg
pusha
in
xor
imull
push
inc
xor
cmpsl
outsb
cmp
jmp
popl
fcoml
jge
mov
jle
adc
ljmp
aad
add
mov
sbb
sahf
les
xchg
push
push
out
repz
gs
cs
loopne
or
clc
pop
xchg
cmp
fcomp
stc
lcall
adcb
in
mov
sub
pop
divl
int
in
inc
sub
popf
sbb
sub
scas
lock
fsub
sub
neg
pop
lock
push
xchg
xor
add
stos
js
or
ljmp
add
enter
cbtw
and
fsin
inc
sbb
dec
loopne
add
int3
jbe
gs
insb
cmp
mov
push
aad
movsb
push
outsl
clc
in
mov
push
into
push
ja
adc
mov
shll
adc
lret
cmc
add
jp
leave
pop
jae
cwtl
in
out
sbb
xor
scas
das
add
sbb
das
xor
push
mov
in
pop
lret
js
into
add
mov
xchg
jg
inc
mov
jmp
faddp
jmp
repz
or
das
push
pop
lcall
cmpsb
in
mov
cld
daa
push
cmpsb
clc
lahf
aam
xchg
or
push
mov
repz
or
imul
sub
sahf
into
dec
ficompl
lret
mov
jbe
mov
push
dec
idiv
clc
lcall
stc
inc
sub
sbb
repnz
and
inc
out
cwtl
fnstenv
outsb
fmull
lods
pusha
fwait
sub
push
mov
mov
mov
rcl
rcr
mov
pop
js
jp
and
push
xor
mov
jle
jmp
add
inc
jnp
into
mov
sbb
push
iret
stos
fwait
jl
push
xchg
lret
in
popf
jbe
mov
jbe
inc
push
mov
mov
pop
fsub
mov
and
pop
imul
loope
std
inc
fwait
mov
push
push
sbb
aas
icebp
dec
stc
add
jns
mov
std
test
or
sub
jp
sbb
clc
nop
out
push
cmp
add
xchg
adc
dec
mov
jge
sbb
pusha
int3
add
fcmovnb
xchg
dec
in
push
fwait
mov
jp
jns
fbld
mov
mov
sbb
movl
mov
inc
xchg
inc
pop
mov
loopne
js
lret
das
pop
xor
mov
push
mov
add
scas
add
push
cmp
xor
aaa
add
dec
pop
stc
movsb
push
inc
xchg
sub
sbb
push
xchg
mov
inc
movsb
loopne
lret
jnp
mov
cmp
add
or
insb
jnp
jb
push
iret
imull
add
pop
mov
mov
jo
loop
int
out
test
leave
lods
jmp
push
or
push
loope
jle
daa
lods
sub
sarl
aas
add
notl
add
inc
fwait
inc
stc
aad
adc
lea
dec
and
out
rclb
popf
jmp
and
ss
xor
sub
jmp
jg
dec
mov
mov
mulb
dec
sub
scas
mov
cs
sub
pop
hlt
ficoms
push
call
nop
mov
loopne
lock
loope
sub
jl
push
rcll
aas
jl
and
mov
inc
pop
insl
xor
scas
mov
mov
jmp
dec
jp
cmp
sbb
mov
je
xchg
fcomip
lahf
and
xchg
mov
test
pop
xor
and
outsl
movsl
cli
or
leave
dec
push
jbe
ret
nop
sbbl
inc
aaa
imul
ret
dec
or
mov
sub
sub
ljmp
mov
sarb
or
mov
repz
mov
or
pop
push
divb
ljmp
mov
jae
testb
mov
mov
and
ljmp
inc
sahf
bnd
sub
cli
into
push
outsb
sub
addr16
stc
data16
xchg
into
sbb
jle
and
sub
lahf
mov
push
or
aad
xchg
mov
adc
jbe
and
loopne
jecxz
scas
ds
dec
inc
dec
es
shrb
mov
shl
pop
dec
or
dec
mov
mov
pushf
into
jbe
xchg
mov
sub
jl
jg
int3
daa
es
mov
sub
in
mov
pop
aaa
pusha
xchg
ss
shrb
jb
mov
into
lock
push
mov
aad
sub
scas
iret
pop
sbb
ljmp
imul
jle
inc
rcrl
insl
enter
sub
cmp
xchg
pop
bound
aas
rcll
shrl
cwtl
outsl
xlat
enter
imul
repnz
cmp
test
das
xor
mov
rorl
test
lods
add
outsb
into
loopne
aad
sub
mov
mov
js
push
jne
cld
push
push
add
insb
jnp
addr16
mov
cli
bound
fmulp
mov
mov
aaa
xchg
ret
and
lds
jge
gs
mov
push
mov
xchg
xchg
cli
and
pushf
xchg
stos
or
daa
loopne,pn
dec
jne
call
push
pop
jnp
das
cmovle
xor
jmp
cmpsb
dec
int3
inc
jmp
and
hlt
sahf
dec
inc
outsl
cmp
mov
jbe
cltd
andl
adc
dec
xchg
mov
sub
add
adc
mov
cmp
push
movsl
jno
mov
outsb
or
sub
in
push
imulb
add
dec
loop
pop
cs
sti
cmc
popf
iret
add
pop
mov
and
testb
jae
mov
arpl
mov
or
inc
js
pop
add
popf
adc
in
xor
xlat
mov
loopne
adc
xchg
aas
movsb
clc
and
xor
add
sarl
das
lock
je
dec
aaa
sahf
xchg
sbb
cmpsb
adc
xchg
add
aas
jg
test
mov
leave
mov
inc
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
and
cmp
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
and
cmp
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
and
cmp
or
sbb
dec
movsl
fwait
push
stos
inc
adc
mov
bound
add
xor
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
addl
mov
enter
xchg
inc
cld
jb
adcb
and
push
push
popa
loop
repnz
mov
roll
loope
icebp
jb
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jb
sub
xchg
push
push
mov
xchg
mov
cmc
add
dec
mov
test
jbe
sbb
lcall
ficompl
ljmp
pop
inc
dec
int
rcl
sbb
push
insl
fbld
push
ds
mov
mov
lret
aad
pop
xchg
iret
add
mov
bound
loop
jno
adcl
mov
test
in
icebp
icebp
pop
pushf
inc
pop
into
loop
test
sub
shl
adc
and
dec
int
inc
icebp
inc
sbb
jle
lds
shrl
sahf
sbb
imul
ljmp
xchg
inc
notl
mov
mov
xlat
add
inc
add
xor
inc
rcll
jb
adcb
and
push
shlb
jno
in
repnz
dec
negl
cs
and
je
push
lret
mov
add
ret
inc
movsb
or
jb
cli
jbe
pop
ret
xor
mov
xor
or
xchg
inc
out
aam
test
push
loope
icebp
jb
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jb
adcb
and
push
shlb
jno
addl
into
jne
mov
out
mov
outsb
mov
pusha
ret
cmp
xor
pop
xchg
shl
addb
les
sub
test
adc
jl
mov
test
adc
xor
pop
int3
pushf
jnp
in
test
hlt
imul
call
lods
lahf
lcall
es
iret
mov
sub
pop
aad
jecxz
orb
repnz
sbb
add
fwait
es
cltd
jecxz
out
xor
or
mov
lret
stos
dec
lods
fidivrs
jge
mov
and
xchg
lcall
mov
pop
call
pop
sbb
inc
shrb
iret
lea
sti
orb
je
hlt
push
mov
sub
and
int
lcall
and
movsb
ret
xchg
shlb
es
sub
cmp
les
mov
popf
dec
rcll
jle
imul
and
xor
pop
test
test
lahf
add
xchg
dec
xchg
push
bound
enter
mov
mov
cltd
ds
dec
pusha
fisttpll
xlat
jae
insl
adc
mov
xor
cld
push
inc
fnstcw
ret
pop
push
mov
mov
in
leave
cmp
jmp
into
ret
insl
pop
arpl
outsb
pushf
outsl
add
sbb
xchg
imul
jo
cmp
cmpsl
out
xchg
mov
xchg
shrb
popf
jo
sub
and
divl
sbbb
mov
cltd
pop
in
leave
jnp
shlb
add
mov
mov
in
mov
inc
loopne
fst
xchg
movsb
ds
icebp
mov
in
pop
jecxz
xchg
lods
adc
lret
cmp
mov
aad
adc
dec
lcall
dec
clc
pop
in
cmc
adc
xchg
jno
subl
jmp
push
pop
push
mov
das
into
push
in
jp
daa
insl
mov
out
fists
out
push
and
jecxz
xor
add
emms
add
sbb
call
outsb
into
mov
sub
dec
cmp
fdiv
outsl
jmp
lock
mov
mov
jg
add
and
push
outsb
and
or
lret
mov
mov
and
dec
ret
push
mov
std
mov
loope
cmp
and
cmp
jecxz
lret
ffree
into
cmp
sub
pop
js
fcompl
sub
dec
icebp
iret
and
mov
and
in
sti
jmp
sbb
cltd
cmp
stos
xchg
int
pushl
jo
and
or
shl
cmp
mov
jle
aaa
mov
cmp
jecxz
or
jecxz
add
mov
test
movsl
loop
mov
ss
addr16
cmp
lods
sbb
dec
fidivrl
jl
in
not
ljmp
cmpsl
popf
xchg
sbbl
mov
or
rcll
xchg
scas
jns
into
or
mov
gs
sbb
push
rorb
or
repnz
or
jle
jb
mov
xlat
xchg
loopne
inc
fstp
je
pusha
dec
mov
bound
jg
xchg
ret
adc
mov
into
into
pop
cld
xor
mov
nop
inc
out
or
dec
imul
jge
and
in
jle
cmp
inc
jnp
mov
bound
daa
ja
add
or
insb
in
adc
je
inc
out
or
inc
cli
sbb
rolb
stos
ret
pop
xchg
stos
pop
xor
inc
sub
mov
sub
fsubrs
adc
pop
in
cmc
loop
icebp
std
daa
or
pop
les
cmp
outsb
addr16
loope
aam
cld
xor
dec
xchg
pusha
cmp
shrl
mov
imul
out
lret
pushf
jp
sahf
inc
sbb
daa
adc
movsl
pop
gs
loop
testb
mov
repz
lret
inc
cmc
or
xor
rorl
aam
outsb
pop
dec
and
xchg
xchg
es
cmc
jns
sub
aad
inc
ljmp
lret
pop
add
pop
push
xchg
jns
pop
lret
stos
push
push
mov
jne
loope
mov
aaa
test
aam
pop
or
xor
aad
mov
fwait
add
mov
jmp
js
adc
jmp
sub
je
xchg
adc
lret
and
enter
pop
or
loopne
push
and
movl
je
xor
push
xchg
xor
iret
pop
dec
leave
adc
jmp
dec
inc
test
mov
mov
or
pop
ja
push
and
pop
outsb
sti
dec
mov
fldl
bound
pop
add
xchg
fs
inc
mov
pop
mov
add
hlt
sbb
sbb
insb
inc
in
into
push
js
adcb
filds
dec
lcall
out
ljmp
mov
dec
dec
daa
mov
ljmp
dec
leave
divb
enter
lock
es
fiadds
mov
inc
enter
and
int
pop
shlb
inc
rcll
cwtl
sbb
push
aam
stc
push
mov
or
cltd
pop
lret
lds
dec
mov
das
scas
adc
sbb
jl
or
loop
loop
sbb
xchg
scas
in
xor
mov
xchg
pop
jns
sahf
jmp
pop
call
test
popf
push
adc
aad
sbb
mov
das
inc
mov
in
lea
push
inc
insb
int
push
aam
or
lret
sub
imul
pop
adc
sub
push
adc
fiaddl
push
push
push
in
lcall
jl
xor
and
mov
and
jmp
push
pop
cwtl
fistps
dec
test
cmpsb
pop
pusha
inc
fsubrl
mov
popf
sub
popa
cmc
dec
ds
fidivrs
ljmp
aad
insl
dec
cmp
inc
sbb
or
cmp
mov
pop
fistps
lods
lret
cmovl
push
fiaddl
sub
repz
or
xchg
repnz
dec
sub
push
inc
push
push
dec
pop
popf
aas
dec
xor
push
filds
add
ret
sub
push
lea
xorl
xor
push
nop
sbb
or
in
je
push
jbe
mov
mov
fildll
loope
pusha
sbb
gs
or
xchg
cmc
xchg
lret
jmp
fildll
push
cmp
aas
lcall
movaps
dec
and
add
cld
dec
iret
push
lock
sub
fidivl
jge
lcall
std
pop
bound
mov
sub
inc
punpckhwd
sbb
fists
fsts
sub
out
jmp
popa
push
incb
fwait
nop
ffree
idivl
ret
xchg
sti
dec
popf
add
outsl
sahf
andl
out
mov
cwtl
xor
jae
es
jbe
jmp
loope
fistpl
xchg
invd
fsub
das
addr16
btr
adc
testl
dec
mov
cmp
push
add
xor
int3
xor
adc
jnp
enter
and
jne
rcr
int3
ss
xlat
mov
fs
fmuls
xor
jno
cmova
in
mov
test
jge
ljmp
sahf
mov
out
or
sub
or
mov
aam
and
pop
xor
push
mov
fs
pop
mov
movsb
sti
cli
inc
nop
sub
add
add
imul
sarb
shl
add
push
mov
inc
xchg
cmp
fucom
and
mov
and
jle
in
dec
ficompl
inc
bound
inc
add
orl
cmp
push
mov
sub
psllw
and
dec
xlat
xchg
jp
popa
and
cld
mov
pop
dec
sbb
inc
xor
mov
add
aas
jge
arpl
dec
xlat
jne
in
std
push
icebp
jge
insl
adc
iret
ret
sbb
gs
cmp
or
inc
inc
fnstsw
adc
pop
dec
icebp
sbb
cmpl
mov
sti
inc
add
xlat
fmull
leave
sbb
rcll
movl
push
test
cld
fst
stc
cmpb
clc
jp
popa
mov
leave
sbb
jae
mov
pop
repz
push
das
push
dec
dec
cmp
sahf
int3
addl
xlat
add
dec
popf
cs
xchg
inc
loop
fwait
orb
std
lret
push
std
sahf
stc
stos
lret
movl
jbe
cmpsl
push
ffree
sbb
pushf
cmp
lret
mov
cmp
xor
cwtl
je
push
movmskps
cmp
mov
mov
mov
shr
sub
mov
call
es
int
mov
decb
inc
sbb
jp
cmc
cli
jmp
pop
cmpsb
sub
xchg
dec
xchg
enter
out
fs
mov
pop
fldl
mov
and
mov
pop
insb
arpl
cmp
cmpb
popf
mov
cmp
fwait
xchg
fsubs
mov
pop
cmpsl
push
and
push
les
lock
popf
mov
cld
jno
or
push
jmp
aad
fs
cmp
aaa
add
adc
mov
or
xchg
push
add
or
out
cmp
or
stc
test
add
sbb
outsb
ret
push
push
push
rorb
dec
mov
xchg
clc
mov
jns
jmp
push
or
push
add
cmp
xchg
add
xor
add
ficompl
jmp
jno
mov
fstpt
jp
stc
dec
lret
test
pop
or
sbb
xchg
dec
mov
push
jo
dec
and
cmp
test
shrb
mov
rorb
std
lock
push
sub
aaa
or
popa
nop
and
jns
and
push
stos
add
jecxz
loop
inc
jmp
xor
scas
push
push
popf
in
stos
mov
call
push
pop
cltd
cwtl
push
loop
push
in
mov
aam
clc
lret
out
mov
and
jae
rolb
xor
imul
addr16
scas
add
outsl
add
scas
out
dec
stos
cmp
pop
cmp
outsl
jecxz
leave
arpl
scas
pop
test
pop
mov
inc
jp
jge
shll
outsb
jecxz
cmpsl
inc
fiadds
lret
xchg
ljmp
push
sub
sub
and
pushf
ja
lea
leave
add
pusha
sub
sub
ljmp
aaa
and
xchg
xchg
popf
out
mov
xlat
cld
fsubs
dec
loop
adc
cmp
cmp
inc
dec
pop
inc
pop
cvtpi2ps
mov
mov
cmp
imul
xchg
stos
mov
scas
xor
mov
pop
sub
les
dec
mov
pushf
inc
adc
icebp
push
jb
out
test
and
push
xchg
dec
jecxz
dec
lds
fisttps
cmp
adc
mov
add
sub
les
mov
in
jnp
insb
pop
call
in
pop
adc
jp
and
sub
cmp
imul
push
pop
push
idivb
pop
push
xor
aad
popa
mov
stc
lods
and
mov
mov
mov
jle
mov
push
add
pushf
ds
sub
push
lahf
push
bound
das
or
inc
das
lret
sub
cwtl
cwtl
fistps
xchg
sbb
sub
inc
inc
test
sbb
jae
and
je
push
test
les
fnstcw
dec
adc
adc
and
cwtl
xor
adc
std
pushf
adc
xchg
loop
cmc
xor
mov
cmpl
xor
divb
push
mov
sbb
rcll
lret
or
jmp
arpl
push
lret
fistl
cmp
sbb
xor
mov
lcall
and
popa
popa
inc
outsb
ljmp
xor
test
out
addr16
in
cmpsb
adc
xor
mov
or
sbb
jae
rorl
inc
sub
push
adc
add
lret
mov
and
enter
lods
cli
mov
adc
fldl
clc
test
mov
cmp
ja
mov
mov
out
frstor
push
loopne
and
pop
lds
js
pop
jae
add
sub
xor
jle
mov
dec
and
incl
loop
dec
jmp
mov
lock
pusha
mov
and
subl
mov
xor
mov
pop
cmpsl
test
fs
or
sbb
or
inc
xor
mov
mov
sub
mov
cld
pop
test
xchg
fistpl
pushf
gs
cmc
popa
add
lcall
orl
ror
mov
and
cltd
aaa
adc
xor
ret
gs
cmp
jno
into
xchg
mov
leave
push
or
jno
cld
mov
mov
fwait
jno
mov
add
fmul
ss
sbb
xchg
sub
mov
ja
out
arpl
loop
or
cmp
sbb
int3
pop
movsb
and
mulb
jbe
mov
xchg
imul
mov
inc
stos
push
mov
xchg
lret
out
push
mov
lret
adc
cmp
scas
mov
jae
or
test
sub
push
add
iret
leave
mov
insl
sub
xor
jle
jp
inc
jg
cmp
sub
mov
mov
push
jmp
nop
cmp
dec
repnz
sub
push
fxch
movsb
mov
imul
jbe
out
sub
cmp
mov
dec
mov
cmp
xchg
add
lock
lock
cmpsl
popf
xchg
scas
cli
incb
mov
decl
jmp
dec
push
cmpsl
xor
inc
fucomip
pop
push
lret
jae
sbb
sub
mov
out
xchg
xlat
out
mov
sbb
fdivrs
sbb
and
int3
add
add
test
mov
mov
outsb
jo
cmp
ja
lods
aam
hlt
in
xor
out
shrl
fidivrs
jb
in
shrb
aam
push
adc
and
mov
jle
dec
jo
test
popa
jecxz
adc
inc
jb
inc
fists
cmc
shl
out
xchg
push
mov
rcrb
test
xchg
mov
xchg
inc
outsb
mov
shl
hlt
stc
adc
cmp
repnz
cmp
cmp
jae
repz
push
icebp
jl
push
dec
imul
addr16
subb
sahf
inc
fidivs
movsb
add
jae
pop
frstor
out
loopne
adc
inc
ljmp
push
fwait
lcall
repnz
movsl
xor
mov
jb
jns
mov
test
and
call
mov
movsl
dec
xor
les
imul
test
movsb
xlat
bound
jecxz
xchg
test
fs
lea
xchg
and
sahf
dec
imul
jmp
cmp
sbb
cwtl
xchg
js
push
movsb
xor
jmp
jle
mov
dec
iret
loopne
int
leave
or
ja
add
xchg
or
dec
push
call
into
addr16
in
movsb
adc
fmuls
sbb
push
mov
addr16
mov
mov
adc
jecxz
cmp
gs
mov
popf
adc
mov
pop
xor
into
pop
mov
push
xor
test
cmc
ret
outsb
dec
movsb
push
cmp
and
std
fs
cld
imul
pusha
jmp
sub
lods
mov
popf
loope
cs
outsb
jns
out
adc
out
mov
pop
pop
lods
pop
sbb
and
mov
jns
mov
xchg
cmc
outsl
cmp
call
lock
mov
inc
into
lods
ja
adc
repz
dec
xor
or
pop
jmp
arpl
daa
movsl
mov
subl
jnp
mov
sbb
xchg
add
pop
xchg
stos
or
cmpsl
push
dec
out
xor
inc
mov
cmp
mov
iret
pop
sbb
jmp
and
call
inc
cwtl
cmp
add
xor
out
out
sub
rcll
lods
arpl
inc
ss
xchg
arpl
push
int3
test
push
inc
cmc
into
enter
mov
mov
jmp
jb
les
lock
add
ficoms
cmp
in
inc
mov
ror
lods
pop
and
rolb
fildll
push
push
jp
iret
fisttpll
pop
cmpsl
mov
sub
sub
xchg
pop
xchg
outsb
push
jmp
inc
daa
bound
andb
inc
push
push
js
and
outsl
lds
dec
and
cwtl
jl
mov
inc
cmpb
movsb
jnp
sbb
jne
dec
push
hlt
push
std
pop
sbb
movsl
in
add
scas
into
daa
aam
and
js
pop
inc
push
loopne
push
or
test
andl
rorb
stc
jp
mov
insl
add
aaa
mov
jp
pop
pusha
adc
cmpsb
pop
xchg
mov
or
xchg
and
je
push
fstl
imul
jbe
cmp
sbbb
outsb
push
or
test
inc
or
aam
mov
gs
int3
fcomps
insb
sbb
out
loope
int
sbb
pop
xchg
leave
dec
clc
loop
jecxz
sbb
push
push
push
jae
jp
inc
loopne
sub
lock
stc
mov
imul
inc
sub
nop
add
lods
cmp
mov
mov
mov
test
mov
xchg
add
fistpl
inc
in
and
xlat
xor
pop
fstps
aam
jbe
mov
jg,pt
aaa
push
mov
out
mov
dec
outsb
or
pop
aaa
aaa
inc
ret
adc
sahf
clc
imul
subb
mov
push
mov
xchg
mov
scas
adc
adc
movsb
xchg
repnz
jp
stos
push
dec
pop
sub
lcall
movsb
sbb
out
les
inc
mov
xchg
jnp
pop
xor
jg
gs
adc
sub
sub
leave
jae
int3
jmp
andb
sbb
mov
dec
jne
sbb
jbe
sarl
jmp
nop
inc
nop
daa
cmp
stos
sbb
adc
rol
dec
sbb
push
xchg
test
cmpsl
adc
data16
push
repz
dec
xor
call
lea
adc
popa
aaa
aas
xchg
das
push
int3
xor
ljmp
jo
mov
ret
fwait
mov
sbb
test
lcall
cmp
pop
out
xor
addr16
iret
outsb
add
mov
loopne
out
xchg
lret
inc
sub
lret
test
aas
dec
dec
jns
xor
jne
xor
xor
pop
mov
sbb
pop
inc
lods
int
sbb
and
jp
jl
bound
and
out
aaa
mov
into
push
sub
into
cltd
stos
fisubrl
mov
cwtl
mov
lcall
push
mov
jns
adc
shll
lea
jg
sarl
dec
adc
pop
test
lret
xchg
rolb
fcoml
xchg
jbe
mov
mov
jle
test
test
or
mov
jmp
out
jne
cwtl
cmp
push
xchg
adc
je
cwtl
push
mov
lret
jns
sub
test
lret
movsl
lods
dec
lods
mov
test
pop
call
mov
adc
pushf
dec
xor
aas
pop
sub
mov
jle
mov
inc
pop
sub
push
inc
or
fisttpll
and
add
jne
shr
mov
xchg
popf
out
cld
inc
mov
sub
repz
fidivrs
add
ficomps
lea
pop
pop
mov
lret
push
roll
mov
sub
cwtl
mov
jnp
jae
shlb
rorb
test
sub
into
push
add
movb
arpl
xchg
or
fbld
xchg
xchg
jle
inc
fisubl
jnp
pop
add
push
dec
jbe
stc
es
call
xchg
int3
shl
out
arpl
push
hlt
pop
adc
pop
stc
xchg
add
ljmp
jnp
xor
test
inc
push
mov
mov
add
and
inc
outsb
fiaddl
sub
inc
add
xchg
out
leave
insb
pop
cwtl
leave
sub
sbb
lcall
and
dec
push
inc
out
cmpsl
jl
imulb
daa
into
negb
sahf
cs
fs
pop
push
mov
mov
xchg
mulb
xor
popf
sub
pop
pop
inc
int3
loopne,pn
xor
aas
sub
scas
das
mov
and
cmp
adc
inc
rcll
jb
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jb
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jb
add
xchg
and
push
shlb
jno
addl
mov
roll
popa
bound
incb
xor
ss
fldcw
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
loope
icebp
or
cmp
sub
sub
pop
fwait
push
inc
mov
xor
add
adc
loope
icebp
or
cmp
sub
js
adc
jno
inc
mov
xor
add
adc
loope
icebp
or
cmp
sub
js
push
sub
mov
je
jg
mov
push
mov
dec
mov
imul
enter
gs
je
push
jae
mov
dec
jp
popf
fs
pop
pop
mov
jg
insb
bound
scas
int3
xor
push
clc
pushf
mov
push
movsb
sub
enter
cmp
inc
loope
clc
jno
dec
enter
push
loope
icebp
sub
adc
jg
sti
movsb
dec
add
xchg
xchg
in
addr16
ja
cmp
dec
jno
xor
jmp
and
movsl
clc
shlb
dec
mov
les
lods
jb
into
enter
push
sbb
push
test
sub
arpl
orb
sub
mov
fdivrs
sub
cmp
sub
js
push
inc
mov
xor
add
adc
test
mov
and
ds
cmp
loope
mov
sub
and
push
cmpsb
test
insl
movsb
pop
mov
add
adc
or
shll
icebp
inc
jmp
int
mov
leave
insl
scas
xchg
mov
dec
cmpl
mov
push
test
fdivs
enter
call
sarl
sub
js
push
inc
mov
xor
add
adc
loope
aam
pop
aad
ljmp
data16
jno
adc
push
dec
roll
orl
pop
adc
and
push
mov
inc
push
loopne
add
xor
ret
stc
push
push
add
jecxz
xchg
repnz
outsl
lds
in
outsb
mov
sub
push
mov
and
icebp
sub
imulb
les
cli
jne
rorb
dec
cmp
cmpsb
pop
cmp
jp
pop
add
mov
pushf
test
jb
push
popw
xor
lcall
xchg
jnp
test
adc
cld
dec
dec
mov
loope
and
lock
jo
out
push
icebp
push
loop
fbld
mov
add
mov
mov
add
leave
arpl
loope
mov
cld
pop
inc
pop
dec
xchg
mov
or
rol
movl
xor
xlat
stos
rcrl
pop
inc
fstl
aas
jae
jle
inc
in
and
lock
mov
inc
out
jp
ret
lret
cmp
in
in
repnz
dec
adc
fsubs
ljmp
adc
mov
fcmovne
push
add
mov
test
push
aad
ret
mov
rclb
xchg
out
rcll
int
addb
pop
jno
sbbb
lods
cmp
xchg
arpl
outsl
mov
leave
cwtl
mov
mov
mov
dec
sbb
inc
xor
add
sub
dec
repnz
xorb
or
ja
push
pop
mov
xor
inc
scas
sub
out
sub
lods
jp
out
cs
jne
das
inc
das
insb
push
lahf
push
lcall
mov
push
inc
movsl
into
ds
insb
mov
mov
jno
lret
mov
mov
in
cmpb
pop
loopne
out
mov
lods
jecxz
add
dec
mov
rclb
mov
decb
fisttps
push
aad
adc
sub
pusha
xchg
enter
clc
sbb
mov
sbb
pop
je
int
jmp
cmc
push
pop
inc
imul
nopl
std
sbb
sbb
int
ja
sub
sub
cld
popa
int3
xor
fcomps
push
mov
cmp
inc
call
adc
pandn
fs
inc
out
mov
lret
pop
xlat
jno
lods
inc
lods
leave
mov
mov
mov
push
rolb
je
pusha
mov
insb
out
cs
pop
loope
adc
daa
xlat
int3
movsl
fisttps
inc
in
push
loopne
pop
inc
inc
pop
in
mov
in
xchg
bound
imul
addb
loop
arpl
xchg
cmp
push
fisubrs
mov
adc
mov
pop
addr16
mov
or
je
or
add
lcall
cmpsl
xchg
jnp
aam
mov
outsl
sbb
mov
or
out
fmull
dec
ret
push
push
xor
or
lods
pop
pop
js
jp
pop
outsb
xchg
leave
sub
int3
sub
movsb
lods
data16
sub
hlt
stc
stc
jg
or
lahf
enter
clc
test
icebp
in
xchg
pop
cmc
stc
outsl
shr
pop
push
adc
sub
scas
cmp
add
lods
xchg
push
fsts
or
pop
push
outsb
jno
and
clc
addr16
mov
fstpl
clc
rol
or
daa
loopne
adc
push
inc
pop
cmp
shlb
daa
loop
in
outsl
frndint
adc
fidivl
dec
dec
notb
in
add
and
stos
frstor
dec
movsl
pop
jecxz
jmp
cmp
mov
add
ds
mov
bound
add
jecxz
fs
jb
test
shlb
lea
push
jecxz
ja
lods
sahf
outsb
or
mov
cwtl
dec
xor
ss
je
adc
or
sub
fwait
xchg
cmp
fs
pop
sbb
cmp
rolb
mov
pushf
and
sub
mov
add
sub
cli
les
lret
jp
or
sub
es
pop
movhps
mov
adc
into
xchg
adc
jae
pop
push
clc
jmp
push
inc
aaa
mov
push
cmc
add
pop
xchg
std
or
popf
shlb
jmp
and
push
mov
and
adc
jmp
outsb
insl
mov
mov
test
es
inc
or
lahf
mov
mov
and
pop
pusha
in
push
shlb
mov
push
jg
or
push
jle
push
dec
or
lods
mov
out
jle
fists
push
push
xchg
mov
data16
sbb
dec
or
cmp
mov
adc
inc
in
imul
aam
xor
fcoms
aam
push
inc
adc
pop
out
movsl
repnz
lods
imul
mov
ds
cli
imul
lret
data16
loopne
fwait
lock
nop
subl
lret
sbb
push
test
je
scas
aam
xchg
aam
push
mov
pop
inc
pop
stc
and
sbb
pop
mov
jae
pop
cmp
mov
jmp
stos
dec
sbb
xor
sbb
push
mov
mov
pop
add
mov
xor
pop
adc
jge
icebp
push
out
aas
inc
mov
outsb
mov
jae
movsb
mov
imul
daa
lds
iretw
mov
add
fsubs
xchg
dec
loope
and
std
cmc
outsl
push
in
fcoml
in
pop
les
ss
fmuls
mov
rolb
mov
cs
adc
iret
jns
clc
sbb
sarl
and
daa
push
je
mov
sahf
cmpb
mul
lahf
sub
iret
and
pop
jns
mov
xchg
pushf
or
rorl
adcl
and
xorl
pop
xor
ret
orl
push
adcl
les
sub
sub
js
or
pop
popa
push
push
adc
orl
sarb
in
fsts
outsb
test
scas
jns
jge
mov
mov
add
mov
cs
xchg
gs
add
mov
fiadds
lock
dec
arpl
ss
inc
inc
jno
dec
inc
mov
in
cmpl
inc
std
popf
lret
or
jecxz
jecxz
inc
shll
lcall
sbbb
push
add
out
imul
xchg
push
and
mov
push
push
in
push
inc
and
xor
insl
sbb
ja
mov
mov
sar
addb
pop
dec
jo
push
pop
inc
in
cli
data16
sub
lods
adc
out
adcb
pop
push
mov
jmp
add
and
out
jl
or
and
sti
inc
mov
aas
or
add
push
jb
jnp,pn
sub
xchg
add
xor
icebp
pop
adc
jne
pop
adcb
dec
sbb
jl
sub
mov
dec
ficompl
fmul
iret
push
xchg
mov
scas
adc
cmp
shll
pop
pushf
lret
int3
aad
xor
shrl
outsl
mov
pop
sahf
inc
cmp
int3
scas
addl
dec
mov
pop
je
subb
dec
xchg
ror
repnz
push
xchg
xor
jae
fists
cmc
mov
loopne
icebp
std
clc
psubusw
cs
adc
push
mov
in
shll
jl
jle
ret
aad
imul
xor
jne
push
cld
lods
std
adc
mov
std
xchg
sub
cmpsb
dec
fbld
add
adc
and
gs
popa
dec
xchg
push
jmp
ja
adc
popa
aam
mov
sub
pop
mov
shr
fcmove
mov
leavew
jl
jo
adc
cmc
sbb
push
dec
mov
and
out
inc
incb
mov
in
popf
testl
movsb
lods
mov
push
rclb
divb
fisttps
aam
mov
lret
out
mov
loope
add
data16
pop
add
jnp
mov
out
sbb
push
pushl
ret
repnz
add
cmp
sbb
sub
movl
xor
jb
add
xchg
add
aas
jb
xchg
cmp
ret
shlb
pop
bound
push
aam
jno
shrb
jns
popf
pop
or
mov
sub
xorl
iret
cwtl
pop
cli
push
aas
sub
stc
push
add
fdivs
fucomp
aad
jg
pop
xchg
sti
fwait
mov
push
sbb
or
mov
aad
xor
pop
repz
loopne
movsb
int3
aad
ror
adc
aas
jecxz
loopne
loope
inc
in
or
jae
ds
jno
inc
push
leave
pop
lock
sbb
mov
or
fs
arpl
xchg
mov
subb
mov
sub
jne
test
or
and
xchg
xor
sti
shll
ret
add
out
pop
dec
adc
dec
inc
in
pop
je
gs
movsl
mov
xchg
mov
sbb
mov
mov
sub
hlt
push
jns
rorl
mov
lock
cmp
mov
mov
sub
dec
push
test
adc
leave
in
sbb
jbe
jo
sub
test
xchg
mov
hlt
xchg
adc
testb
pusha
sub
fisubrl
xchg
add
daa
movsl
mov
in
aaa
pop
sbb
enter
cmc
push
test
mov
jne
jle
lret
in
mov
fstpt
xchg
or
mov
mov
push
int
loopne
mov
sbb
xor
shrl
outsl
fiadds
lret
push
shlb
in
leave
nop
adc
jno
ficoms
loope
jl
mov
mov
mov
cmpsl
sbb
jb
sbb
xor
cmp
mov
rcll
sub
mov
inc
mov
xlat
xchg
mov
stos
mov
movsl
fwait
cmp
aam
fidivrl
adc
mov
nop
adc
jns
test
test
push
sbb
jae
sahf
lods
xor
stos
mov
dec
pop
cmp
cmp
sbb
push
lock
push
popa
dec
inc
cmpl
push
xor
out
sbb
in
outsb
stos
inc
cmp
je
jne
shr
mov
push
push
mov
sub
or
mov
sbb
arpl
mov
test
xchg
repnz
lret
xchg
mov
ficoms
pop
repz
imul
andl
mov
fnsave
jae
xor
or
pop
xlat
jne
hlt
jb
enter
mov
add
cmpsl
push
jmp
sub
xchg
push
dec
sahf
jnp
pop
jbe
sub
fs
icebp
pop
xchg
mov
lahf
fadds
loop
mov
sbb
inc
and
adc
pop
xchg
xchg
insl
or
mov
test
call
adc
enter
mov
push
dec
into
andb
out
scas
out
int3
add
enter
andb
rcl
xor
mov
and
push
insl
adc
mov
mov
and
pop
sub
xchg
mov
je
lahf
fwait
imul
bound
push
and
adc
xchg
cmp
ljmp
lods
xchg
scas
shrl
mov
mov
mov
bound
or
jae
jmp
adc
push
mov
test
xor
inc
mov
jo
cmc
aad
sbb
mov
mov
sbb
dec
aaa
jne
adc
mov
loopne
cmp
insl
or
mov
push
xor
enter
cmpsb
mov
adc
fdivl
std
out
cmp
je
cwtl
loop
or
mov
aad
aas
out
in
adc
sbb
jmp
movl
adc
adc
pop
pop
xlat
fwait
mov
inc
shlb
xor
sti
sbb
mov
lret
adc
inc
int
aas
add
push
dec
add
or
cmp
lea
xor
popf
xchg
jl
mov
addr16
or
lahf
lods
sbb
sub
int
inc
xor
in
incb
inc
xor
cld
push
pop
notb
jb
cli
mov
je
mov
inc
and
jo
or
sub
mov
data16
sbb
leave
pop
xchg
and
push
mov
cmp
and
mov
arpl
incl
repz
dec
rorb
cmc
mov
jmp
cmp
inc
sbb
int3
stos
cmp
mov
movsb
and
add
fldcw
popa
hlt
and
cld
repnz
repz
pushf
lret
imull
outsb
ja
xor
xor
in
jmp
ss
mov
sti
cmp
xchg
xor
mov
mov
clc
lahf
in
out
insl
mov
xor
inc
dec
and
scas
mov
stc
jbe
mov
mov
and
jns
adcb
scas
dec
mov
outsl
xchg
fistps
pop
jb
mov
or
cmp
sub
jge
mov
das
push
shlb
push
dec
insl
aam
and
xchg
iret
mov
je
xchg
inc
lock
push
sbb
mov
jo
enter
inc
sub
gs
loopne
sub
push
or
arpl
inc
cmp
add
ss
or
xchg
dec
bound
rcl
mov
pop
dec
gs
int3
int3
sub
arpl
outsl
cmpsb
sub
xor
aas
sbb
popa
and
addr16
aam
ficompl
cmp
mov
pusha
jl
test
mov
test
mul
mov
xchg
cli
testl
jb
iret
test
or
fisubl
fnsave
and
inc
dec
cmp
push
stos
xorb
mov
adc
fldt
shlb
pushf
dec
jno
pushf
xor
repnz
fnstenv
sub
mov
gs
jmp
out
jmp
pop
mov
sbb
in
xchg
testb
add
mov
lcall
aas
push
repnz
inc
or
imul
shl
out
iret
aas
loope
scas
xchg
inc
imul
cwtl
faddl
fsubrs
divb
subb
lods
aad
xchg
push
mov
popf
add
cmp
sahf
pop
pcmpeqw
jmp
lock
push
rclb
mov
imul
lds
pop
repnz
sarb
dec
xor
or
jl
cmp
xchg
push
ret
jl
sub
cmp
mov
das
push
jae
pop
mov
or
mov
xchg
mov
mov
pop
jp
or
xchg
outsl
adc
sbb
ret
mov
mov
and
mov
sbb
add
jns
test
iret
jns
mov
mov
sbb
jmp
and
popa
add
jb
lcall
icebp
push
ret
jge
mov
cmc
inc
scas
and
sub
xlat
aaa
or
mov
leave
pop
mov
push
in
stos
mov
mov
push
dec
dec
pop
mov
and
decl
ficoms
loope
stos
mov
mov
or
imul
jmp
addr16
movsb
xor
notb
dec
dec
xor
or
test
int3
mov
xchg
jl
stc
repz
xlat
xchg
cmpsb
push
out
mov
adcb
mov
call
xchg
mov
mov
popa
les
or
ret
movsb
mov
sbb
push
movups
subl
pushf
push
mov
cmpb
and
inc
bound
ss
mov
sarb
decl
jmp
push
imulb
or
sbb
cld
aam
and
and
lret
icebp
scas
loope
add
shll
repnz
or
loopne
add
std
pushf
inc
and
rclb
loope
cmp
imul
aam
mov
ja
pop
sub
add
xchg
push
lock
call
mov
repz
mov
sub
int3
test
aas
xlat
and
and
inc
call
dec
xor
xchg
pop
stos
lea
repz
xor
add
dec
shl
dec
je
leave
loopne
or
aas
sub
mov
sahf
mov
aam
inc
jae
call
pop
sub
mov
test
jnp
jmp
addr16
imull
push
sti
cmpsl
inc
push
outsl
movsl
mov
aam
fbstp
xchg
or
xchg
outsb
gs
jnp
hlt
sbb
mov
pop
mov
dec
or
dec
scas
cmp
int3
mov
or
xchg
loop
jmp
jne
inc
jbe
sbb
ss
jns
inc
xchg
cld
or
sub
sub
dec
or
cmp
sub
push
inc
sbb
or
leave
popf
dec
scas
std
push
jne
pop
sub
inc
xor
sbb
clc
jae
xchg
je
cmc
sub
push
sbb
cmpsl
cmpsb
hlt
mov
in
adc
mov
clc
xchg
fldl
fmuls
and
and
push
in
inc
es
sub
fsubrl
push
dec
mov
addb
sbb
push
bound
fistpl
jle
test
push
push
adc
addr16
sar
subl
add
mov
pop
testl
jno
or
jmp
jecxz
int
xor
mov
inc
mov
out
mov
rorb
push
clc
ljmp
lods
nop
loope
dec
int
inc
pusha
sbb
or
ret
dec
sub
test
xchg
push
mov
push
movb
test
adc
frstor
rol
call
xchg
aam
cld
icebp
lret
dec
jnp
inc
imul
xor
iret
fcoms
pop
icebp
add
push
dec
cmp
pop
and
in
cmp
scas
in
daa
dec
loopne
clc
add
cltd
push
jecxz
xchg
in
hlt
xchg
arpl
cli
jbe
cmp
aam
adc
fs
xor
fdivr
inc
xor
stos
mov
mov
fcoms
jp
xchg
aas
add
push
and
sub
lods
sbb
sarl
es
mov
pop
mov
roll
sahf
movsb
cld
push
xchg
int
push
sub
out
loopne
fiadds
test
scas
sbb
and
jns
mov
push
into
insl
clc
sub
fs
inc
xchg
scas
push
fwait
sarb
inc
mov
dec
pop
dec
cld
mov
lea
outsl
push
pushf
pop
mov
fisttpl
leave
dec
push
lret
shll
loope
iret
inc
outsl
and
ret
rcrl
push
movsb
sub
sbb
mov
pusha
jmp
mov
inc
sahf
xor
sarl
cltd
inc
hlt
jne
or
ficomps
inc
add
adc
mov
pop
jnp
inc
sub
xchg
xor
mov
xchg
push
mov
lds
movsl
fidivl
jae
dec
testb
cmp
inc
pop
xchg
pop
lcall
or
movsb
pop
xchg
in
inc
in
mov
xor
pop
xchg
mov
roll
push
test
sub
mov
jmp
mov
push
in
and
popf
sbb
xchg
adc
imul
push
in
inc
in
xor
js
bound
push
cmp
cmc
push
xchg
mov
jmp
es
test
xor
inc
adc
adc
adc
mov
scas
pop
cmp
and
jge
jl
rcll
jbe
mov
bound
jl
mov
dec
mov
imul
mov
pop
or
mov
bound
test
sti
imul
mov
adc
enter
adc
mov
cld
in
out
mov
pop
js
cmp
xorl
cmp
sti
dec
mov
out
and
hlt
add
std
stos
inc
scas
int
loope
std
cltd
fists
lock
outsl
insl
mov
repz
loope
pop
aad
pop
out
js
in
sbb
gs
and
dec
add
outsl
mov
fwait
cmp
mov
loope
popa
mov
jbe
push
inc
lea
pop
xchg
and
jb
repz
cmpsl
cmp
mov
jno
int
aas
mov
dec
call
std
cld
and
arpl
dec
fistl
ret
inc
out
shlb
xor
inc
dec
fwait
rcr
mov
jb
jl,pt
lods
mov
adc
dec
iret
mov
xchg
ret
inc
ljmp
inc
mov
push
xchg
add
mov
jge
scas
dec
addr16
outsl
shrb
jge
dec
out
popa
jl
dec
sub
sbb
movsb
dec
je
fnsave
add
ss
push
insb
jbe
or
subb
and
ds
out
or
cmp
sub
js
push
inc
mov
xor
add
adc
loope
icebp
or
cmp
sub
js
push
inc
mov
xor
add
adc
loope
jno
inc
cmp
sub
pop
mov
cmpl
mov
push
test
fdivs
enter
call
sarl
sub
js
push
jmp
push
fists
inc
aaa
jno
popa
pop
xchg
sub
in
mov
ljmp
push
dec
ss
adc
add
and
and
aam
les
xchg
movb
push
inc
ss
sub
jbe
jbe
data16
int
les
ficomps
mov
jle
add
push
push
sub
bound
and
aam
lods
mov
shrb
jnp
pop
aaa
sub
gs
iret
mov
incl
scas
enter
mov
into
jl
sbb
pop
jp
jae,pt
xchg
aam
lods
lret
fs
xchg
push
push
jbe
cltd
imul
loopne
adc
shlb
inc
sar
test
enter
add
add
lret
xchg
test
aam
mov
inc
or
out
popf
add
mov
test
mov
or
sub
movsl
push
fld
inc
aaa
xor
fs
jl
mov
icebp
hlt
pop
das
sub
out
sub
push
mov
popa
jbe
adc
jno
lret
data16
aam
shll
xchg
test
lods
mov
cs
aas
jge
or
adc
inc
cli
mov
shl
shl
movsl
ret
mov
cmp
inc
or
and
xor
dec
stc
lods
out
flds
mov
shlb
and
push
sub
pop
add
xchg
ljmp
clc
movb
push
inc
ss
fs
adc
add
xor
and
aam
les
xchg
movb
push
inc
ss
fs
adc
add
xor
and
aam
inc
or
aad
mov
or
dec
aaa
ret
cmp
outsb
adc
adc
jae
add
sub
imulb
push
repz
mov
mov
dec
sahf
xlat
ror
xchg
out
pop
and
mov
jle
inc
adc
inc
hlt
sbb
sub
mov
loopne
mov
popf
pop
jb
stos
and
cs
sbb
push
loope
push
fstl
sub
mov
mov
jl
or
lret
nop
subl
add
push
xchg
sub
lods
insl
movsb
add
push
dec
push
add
lahf
faddl
and
ret
xor
xchg
mov
jl
sub
push
jp
cmp
sub
jns
sti
adc
ret
mov
aaa
pop
stos
lds
mov
xchg
push
adc
sbb
imul
push
push
nop
popl
cmpsl
xchg
icebp
sub
repnz
xchg
mov
jp
xor
or
fsubs
clc
push
test
dec
jge
enter
movsb
adc
jno
and
inc
test
test
dec
int3
ds
mov
pop
shl
in
dec
mov
mov
jbe
out
mov
mov
fs
mov
xchg
xchg
mov
mov
push
pop
mov
push
jl
xchg
popa
xchg
mov
repnz
xorl
mov
push
insb
es
ficomps
sub
mov
shlb
aas
xchg
xchg
jbe
xchg
daa
or
iret
out
pop
ja
or
insl
addr16
adc
xor
mov
arpl
fcomps
std
insb
stos
jne
fisubl
rclb
add
pushf
push
jno
jmp
movsb
repnz
gs
test
mov
inc
lcall
pop
mov
inc
and
add
dec
shrb
inc
pop
pop
cmp
cli
rolb
add
shrl
and
lahf
mov
hlt
xchg
mov
dec
push
nop
dec
adc
in
add
push
les
mov
cld
test
lret
pop
shlb
sbb
jge
xor
test
fidivrs
and
xchg
call
aam
push
repz
nop
push
xor
xchg
lods
adc
push
push
int3
pop
cmp
gs
clc
pushf
repnz
pop
or
daa
and
fisttpll
fldl
xor
bound
mov
dec
sbbl
dec
sbb
and
inc
cmp
call
aad
fchs
mov
jmp
out
test
mov
rcrb
xor
jbe
mov
lock
leave
xor
pop
or
mov
test
loope
add
or
add
sub
in
push
cmp
jp
cmpsl
sti
inc
push
orb
jns
es
aam
inc
xor
ljmp
lock
cmp
mov
scas
sbb
int
sub
paddb
cltd
dec
jmp
mov
int3
mov
imul
mov
ja
mov
pop
mov
mov
push
insl
pop
flds
sub
add
xchg
popa
int3
mov
dec
aas
add
sbb
mov
sti
shll
or
int3
add
rorl
daa
mov
push
fisubrl
fisubs
insl
out
lret
xor
xchg
mov
pop
icebp
mov
push
pop
test
inc
das
jae
cmp
addr16
int
push
popa
mov
xchg
sti
leave
push
mov
std
mov
dec
xchg
cmp
pop
addr16
jns
pop
and
inc
sub
insl
rcl
jl
jnp
jo
add
scas
xchg
clc
sub
repz
adc
ja
push
fisubrl
or
mov
cltd
pop
sub
movsb
pop
mov
mov
jle
aas
lods
aas
sub
popa
jae
sub
cmp
rcll
pop
push
mov
sbb
xchg
adc
jl
mov
xor
and
inc
xchg
jnp
adc
fidivl
rcrl
lahf
pop
xchg
enter
jnp
jnp
push
xchg
lret
mov
fsubs
add
dec
lcall
and
push
push
push
xlat
xorl
test
mov
pop
mulb
test
jae
add
add
and
test
mov
dec
ja
cltd
adc
push
cli
cmp
popa
gs
pop
cmpsl
sub
cmp
push
xchg
pusha
adc
pop
cltd
insl
adc
dec
std
mov
aad
pop
inc
sbb
inc
in
in
fwait
lret
mov
repz
mov
fistpll
xchg
push
sub
daa
jl
fwait
lods
into
ret
mov
pop
pop
idivb
inc
mov
pop
push
jno
adc
daa
push
sar
jno
mov
mov
stos
push
jae
xchg
xor
lods
testb
mov
aam
inc
pop
jmp
incb
fadds
jo
or
sub
adc
and
or
jp
or
sbb
loopne
cmp
or
and
jbe
jge
push
test
out
mov
shrb
and
test
mov
pop
pop
shrb
pop
test
sbb
and
enter
add
inc
ret
fstpl
fisttpl
jnp
jle
and
dec
and
cmpsl
ljmp
pusha
sbb
adc
je
in
dec
jo
enter
pop
xor
pop
inc
xchg
dec
fdivr
test
lcall
pop
adc
inc
ficomps
and
aas
and
outsb
adc
sti
out
mov
add
add
cmp
orb
push
lahf
pop
mov
pop
dec
pop
jecxz
repnz
jbe
subl
movsl
mov
xor
and
xor
insb
ret
test
push
sti
mov
fmul
gs
mov
outsl
nop
pusha
insb
push
add
ds
sbb
mov
or
mov
cmp
shl
insb
arpl
cmc
jne
out
and
ss
xor
pop
cli
in
sbb
dec
push
adc
fs
rcl
sbb
push
sbb
xchg
mov
push
sub
sti
cmp
fs
cmpsl
jbe
data16
cwtl
sbb
fisubs
fnsave
repnz
cld
lret
inc
mov
pop
popa
sbb
push
cld
pop
adc
inc
int
push
sbb
mov
xchg
dec
mov
jno
aam
aam
xor
mov
adc
testb
mov
xchg
lock
popa
mov
mov
sbb
mov
aas
cmp
in
mov
loopne
sbb
mov
mov
and
jl
pushf
pop
add
sub
hlt
out
lods
and
shll
xlat
cs
xor
orl
cmp
imul
loope
mov
out
into
je
stos
pusha
sub
inc
mov
cmp
mulb
out
add
movsl
or
mov
ret
out
xchg
push
mov
mov
mul
in
mov
je
dec
es
mov
push
add
cmp
roll
imul
addr16
sarl
hlt
mov
push
jo
cmp
jno
jno
imul
and
mov
out
test
fwait
ds
mov
in
into
inc
xchg
or
shrb
scas
movsl
test
test
xchg
xorl
fucomi
imul
add
testb
movsb
testb
mov
mov
stos
faddl
popa
loop
push
inc
mov
or
inc
xchg
inc
add
arpl
bound
js
stc
xchg
dec
out
jae
insb
pop
adc
test
mov
push
jo
sti
iret
jne
jns
pop
or
aaa
in
es
push
adc
aad
nop
sub
fstpt
sub
dec
gs
mov
jle
stos
mov
mov
pushf
repnz
jle
push
aam
mov
aaa
push
mov
pushf
sub
imul
push
pushf
adc
dec
pop
dec
iret
in
leave
push
arpl
dec
mov
data16
or
and
mov
adc
add
popa
cmp
xor
or
push
insb
insb
fwait
jo
jns
cmp
pop
shlb
mov
mov
nop
jge
or
mov
call
ljmp
fidivrl
loop
adc
lea
rolb
mov
out
ffreep
inc
jbe
ror
cmpsb
cmpsb
out
popa
movsl
bound
ficoml
mov
in
mov
popa
add
mov
gs
insl
jne
out
push
pop
lods
jbe
mov
or
repz
push
shlb
psubq
xchg
test
push
sbb
pop
xor
adc
jmp
pop
mov
loopne
punpcklbw
add
sbb
or
sub
enter
xchg
lret
mov
jl
fsubp
aaa
jae
sub
addr16
lret
fisttpl
sub
out
inc
add
push
adc
cli
test
mov
xor
into
xchg
fwait
divb
jns
sahf
xchg
popf
dec
jecxz
mov
xor
outsw
and
inc
daa
test
rcr
std
xor
inc
jbe
push
in
ss
sbb
loopne
inc
cmp
mov
mov
shll
and
sbb
stos
mov
mov
pop
scas
fcom
xor
xchg
adc
inc
xor
rcrb
insb
push
mov
mov
ss
ljmp
repz
jb
sti
xorb
adc
fwait
scas
cs
rclb
jg
mov
int3
adc
repnz
mov
sub
and
test
xchg
mov
and
mov
push
sub
inc
imul
inc
fiaddl
xchg
mov
iret
mov
mov
dec
push
in
gs
cmpsl
lds
cmp
call
inc
int
push
inc
icebp
mov
adc
cld
or
mov
fwait
push
jp
inc
rolb
mov
push
xor
pushf
and
aam
xchg
cmc
and
sbb
pop
in
ds
push
inc
sbb
out
std
je
hlt
loopne
aad
or
aam
mov
inc
sbb
dec
es
cli
xlat
mov
repnz
aam
in
cmp
ds
fisttpl
push
pop
lea
test
cmp
inc
and
por
mov
test
jbe
mov
leave
movsl
xchg
mov
pop
xchg
pop
rclb
push
push
out
dec
out
sbb
mov
fistpll
outsb
inc
aaa
iret
adc
icebp
iret
xor
xchg
xor
and
enter
dec
xor
pop
sub
pop
push
enter
xor
dec
dec
mov
loop
aas
nop
lds
and
rolb
mov
inc
stos
mov
cmp
mov
fnstcw
sbb
sbb
sub
rcr
dec
fwait
repz
fmulp
lods
push
sub
sbb
xchg
sub
insb
jo
pop
pop
int3
jo
pop
push
xor
iret
pop
mov
shr
jp
adc
sub
pop
pop
bound
ret
gs
scas
xchg
daa
int3
test
stc
mov
fisubrl
adc
imul
test
jecxz
cwtl
mov
addb
orl
xchg
sub
or
mov
mov
or
popf
sub
sub
les
xor
hlt
pop
jl
or
add
cmp
and
aam
adc
sbb
aas
xchg
mov
mov
jp
lret
aad
loope
sub
lret
ljmp
xchg
add
dec
add
xor
outsb
adc
xchg
sbb
cmp
or
and
cmp
cmpsl
adc
and
in
repnz
or
movsl
xchg
mov
mov
arpl
cmp
mov
sahf
imul
inc
pop
sub
push
ljmp
xchg
lahf
jmp
adc
adc
out
mul
aas
lahf
jl
push
rcrb
mov
push
push
and
mov
fsts
adc
sbb
sbb
lahf
sbb
imul
or
push
pop
push
ljmp
test
mov
repnz
jo
dec
mov
cli
dec
cltd
mov
xchg
inc
sahf
div
push
mov
jg
mov
jg
sbb
push
dec
sbb
enter
ljmp
xchg
movsb
and
mov
aam
sahf
sbb
insb
pop
mov
call
stc
mov
movsl
sub
and
pop
lret
adc
cli
repz
scas
adc
in
ds
cmc
pop
dec
sub
es
out
arpl
inc
iret
mov
fwait
inc
inc
push
inc
fidivl
push
repz
pop
adc
lahf
and
add
mov
xchg
je
push
push
int
fbld
pop
lahf
add
js
lock
jg
add
sbb
jae
dec
and
ljmp
shrb
xchg
push
gs
xchg
fwait
cmp
jb
xchg
hlt
out
lods
lahf
inc
sub
mov
fdivrl
js
divl
jbe
insl
jno
dec
shl
push
adc
xchg
mov
jae
pop
pop
faddl
aas
jnp
popl
aas
fsubl
mov
mov
out
test
jae
stc
or
jp
in
or
push
and
and
cmpsl
jecxz
dec
jno
test
std
popf
xor
sub
lahf
jp
push
in
loope
sbb
xchg
push
push
sbb
push
jo
aad
dec
xor
sbb
test
movsl
hlt
sub
ret
lret
adc
outsb
push
jmp
imul
mov
cwtl
inc
xchg
outsl
mov
fisubs
lcall
mov
xor
pop
movsl
dec
mov
dec
and
fadds
mov
pushf
hlt
inc
mov
js
push
test
dec
push
xchg
jns
jl
sub
insb
pop
in
mov
outsl
fdiv
imul
or
adc
pop
cmc
mov
pop
lea
xchg
vpcmpgtd
ljmp
mov
out
test
gs
pop
add
andb
movsb
cld
jno
and
xchg
je
addr16
out
pushf
dec
xchg
dec
outsb
sti
popa
xchg
dec
dec
lcall
hlt
xor
inc
fdivrs
inc
or
popf
push
rcrl
push
sahf
aaa
testl
cmpsb
lods
add
mov
sub
adcb
test
mov
out
push
pop
and
pop
imul
add
in
fists
inc
mov
push
ds
je
jge
loope
stc
add
sbb
xchg
lcall
sbb
rolb
mov
sbb
pop
into
pop
inc
xor
lcall
push
cmp
test
pop
scas
aaa
aam
cwtl
mov
and
push
mov
cmc
pushf
hlt
dec
nop
mov
sbb
rorl
sbb
jne
mov
sub
out
push
xchg
mov
or
pop
cs
sbb
or
inc
movsl
addr16
mov
sub
test
push
push
test
test
mov
rcrl
rolb
xchg
dec
les
or
mov
lret
mov
dec
cwtl
rolb
decl
cmpsl
dec
push
xchg
adc
mov
push
fbld
pop
imul
das
pushf
sbb
daa
cmp
lret
mov
dec
stc
call
popa
in
or
ret
fisubl
rorl
cmp
incl
push
inc
add
idivl
cmp
and
mov
mov
lock
cmp
repz
mov
stc
adc
arpl
fists
xlat
cltd
daa
xorl
mov
adc
cld
push
lret
es
int
lahf
loop
pop
or
fsts
jno
dec
adc
decb
inc
push
stc
mov
sbb
mov
xor
jnp
mov
lock
ljmp
or
cwtl
xor
loop
xchg
rcrb
mov
xor
add
fistpl
mov
and
sbb
pop
sbb
inc
inc
mov
int
pop
inc
repnz
out
fnstsw
push
mov
mov
adc
wbinvd
jb
pop
mov
pushl
dec
clc
and
lcall
bound
cwtl
xor
rcl
mov
stc
or
mov
mov
das
pop
scas
xchg
lret
pusha
cli
test
adc
push
js
aad
mov
mov
cmp
cmp
ret
dec
popf
stc
sbb
adc
mov
lret
push
out
addr16
sub
test
or
xor
fxch
dec
pop
sbb
mov
daa
pop
dec
dec
dec
push
jne
ficomps
testl
leave
push
mov
or
aaa
lret
add
cmp
mov
fldl
imull
insb
pop
cwtl
dec
pop
mov
and
cld
ret
dec
xor
lcall
subl
jmp
fcomps
imul
mov
incl
xor
leave
jnp
xor
cmc
fsts
add
add
sbb
test
inc
inc
push
sbb
pop
fwait
push
sub
sub
pop
ljmp
adc
xor
jmp
daa
sbb
mov
outsl
mov
adc
cli
mov
dec
adc
in
mov
mov
dec
dec
loope
insb
adc
sub
lods
push
and
ljmp
xchg
inc
cmpsl
pusha
cmp
hlt
test
popf
scas
cli
jnp
add
sbb
mov
adc
jmp
fwait
scas
sbbl
sub
mov
pop
mov
inc
push
mov
add
mov
xor
add
stos
mov
adc
push
ds
out
adc
push
mov
cmp
push
inc
ja
aas
pop
sub
push
xchg
movsb
fnstenv
inc
cld
inc
xchg
mov
mov
nop
xorb
insl
push
cmc
jo
push
data16
fmuls
test
pusha
mov
inc
pop
outsb
mov
cmp
pop
pop
add
sahf
xlat
and
popf
lret
adc
pop
cltd
cwtl
data16
xor
int
or
adc
clc
sub
daa
sub
stos
dec
mov
sbb
in
dec
dec
or
dec
or
adc
push
js
negl
outsb
cmpb
xchg
dec
shlb
sbb
sub
repnz
xor
insb
repnz
icebp
mov
popa
out
cmp
fimull
rcrb
mov
jl
shl
add
data16
cmpsb
outsl
lahf
in
adc
std
popa
in
inc
sub
pop
es
dec
mov
das
adc
cmp
jnp
cmpl
dec
test
fdivrp
testb
rorb
lret
sub
mov
hlt
arpl
repz
lea
inc
rcr
mov
loop
adc
out
insb
out
cmp
orb
fs
clc
adc
cs
sub
bound
into
aas
adc
out
jnp
pop
fidivl
push
imul
push
adc
addb
push
nop
cmpsb
imul
ret
jbe
subb
rcrb
sbb
xor
add
mov
je
adc
xor
and
out
das
rorl
movsb
pop
xchg
sbb
cmpsl
ja
lahf
dec
stos
lock
mov
mov
shll
ret
cmp
jb
xlat
jge,pt
ret
jb
sti
mov
adc
jno
call
xchg
lods
jns
jecxz
sbb
aam
stc
gs
mov
jg
adc
das
rol
lock
xchg
cmp
aam
mov
jge
xchg
clc
pop
into
rcrb
gs
imul
nop
stc
call
mov
test
mov
movsb
outsb
mov
stos
sub
fsts
push
dec
mov
xchg
jae
cwtl
xor
iret
stos
jo
repz
imul
pop
push
insb
pop
ds
inc
inc
jbe
adc
lods
popa
xchg
out
and
cmp
pop
inc
repz
sbb
fldcw
sub
ds
xor
dec
push
pop
xor
and
hlt
mov
cmp
subb
std
aad
cmp
mov
mov
sbbb
mov
ss
out
mov
xor
or
push
mov
add
push
adc
push
loope
mov
xchg
xchg
push
fs
test
pop
mov
and
dec
lahf
pop
aam
lret
push
jbe
mov
mov
push
push
in
lock
mov
jmp
mov
xchg
movb
push
inc
ss
fs
adc
add
xor
and
aam
les
xchg
movb
push
inc
ss
fs
adc
add
xor
and
aam
les
xchg
movb
push
inc
ss
gs
adc
add
xor
test
mov
cmpsb
in
xchg
movb
stc
out
pushf
je
adc
pushf
into
sti
mov
cltd
sub
sbb
or
or
and
and
lahf
stos
cltd
mov
stos
lret
out
sub
sub
sub
or
jnp
imul
dec
outsl
mov
stos
mov
ljmp
pop
xor
add
adc
bound
dec
inc
jg
outsl
mov
iret
ljmp
test
mov
jnp
pop
gs
jae
xchg
mov
mov
inc
adcl
mov
pop
pop
shll
cmp
cmpsb
dec
sbb
sbb
mov
jae
addr16
push
out
fs
mov
adc
enter
or
dec
js
out
mov
mov
scas
cld
jno
or
jmp
cmp
sti
cmpb
pop
jle
mov
dec
aas
lods
ret
lcall
mov
into
fildl
jg
sub
mov
sbbb
ficoml
inc
mov
xor
push
xchg
xchg
loopne
mov
pusha
push
sahf
fs
sti
cmp
ljmp
sbb
sbb
imul
pop
jg
outsl
mov
mov
repz
shrb
jle
outsl
imul
sbb
pop
iret
rep
out
shl
rcll
scas
mov
pop
sub
aas
or
cmp
outsl
mov
jmp
cwtl
mov
push
dec
sbb
dec
or
xor
pop
jg
outsl
mov
mov
jmp
lret
out
cmp
sub
sbb
or
jnp
imul
dec
outsl
mov
mov
jmp
lret
out
cmp
call
push
lcall
xchg
xchg
dec
gs
jmp
push
popw
adc
dec
mov
xor
and
rcrb
mov
jnp
add
inc
dec
in
enter
cmpsb
pop
cli
push
sub
mov
dec
leave
out
add
popa
inc
les
and
xor
repz
mov
push
xchg
dec
or
xchg
decb
jns
sub
xor
cmp
aad
mov
fbstp
mov
jl
mov
popf
jle
lret
xchg
cld
pop
xor
mov
data16
sub
pop
xor
adcb
jl
push
hlt
outsb
addr16
ss
mov
loop
adcb
test
sbb
aam
hlt
fimuls
pop
arpl
xchg
adc
fstl
je
xchg
loopne
and
nop
lcall
dec
sti
movsb
pop
inc
popf
add
subl
xor
pop
push
and
ficompl
mov
mov
mov
std
iret
loope
adc
ret
push
stos
pop
and
inc
or
mov
ret
mov
cwtl
inc
mov
fistpll
pop
add
and
cld
dec
into
add
jge
incl
into
mov
addr16
xor
outsb
push
inc
in
mov
fisubl
or
mov
lret
adc
pushf
inc
roll
mov
or
pop
xchg
imul
mov
sarb
xchg
pusha
dec
push
hlt
out
aaa
insb
in
xor
xchg
push
mov
or
cmp
icebp
dec
mov
data16
fwait
dec
test
pop
fsubs
mov
sahf
mov
inc
sbb
int
in
loope
jmp
aam
in
pop
mov
aad
roll
or
jp
out
mov
sub
lret
lods
int
rorb
adc
and
mov
neg
and
stos
outsb
mov
mov
rcr
enter
jmp
movsb
xor
rclb
shrl
mov
mov
rorl
push
sbb
mov
or
xor
jl
rcrb
loope
pop
in
add
xchg
cmc
add
push
aad
mov
lods
pop
shrb
mov
mov
rcrb
jg
ss
out
pop
mov
shll
ss
dec
sub
lcall
mov
hlt
inc
jl
in
add
add
mov
dec
cmpl
adc
sub
jge
in
add
not
and
cmp
mov
lcall
dec
sub
inc
paddq
daa
test
arpl
mov
jmp
call
das
lret
cmpsb
lahf
ret
scas
out
dec
call
push
cmp
imul
push
xor
mov
cmp
movsb
jbe
xor
lret
loopne
int3
je
mov
mov
bound
rolb
push
lods
and
mov
xor
rcrb
imul
shll
inc
data16
pop
inc
insl
movsb
mov
mov
add
jmp
in
popa
lock
in
push
ffreep
jl
insl
mov
push
xor
out
mov
inc
xor
lock
push
mov
adc
and
pop
pop
fs
movsl
adc
push
shll
fildl
xor
push
push
jae
nop
rorl
push
loop
arpl
adc
dec
cltd
push
xchg
xor
jo
jnp
repnz
xor
lock
mov
cmp
scas
dec
loop
pushf
jnp
inc
js
outsl
std
mov
loope
pushf
jo
out
adc
and
xchg
leave
and
push
mov
fwait
mov
icebp
ja
add
jge
fsts
push
dec
int
adc
loope
push
or
int3
push
push
cmp
arpl
out
sbbb
dec
cmc
sub
push
lret
test
cmp
dec
sub
and
xchg
cmpl
les
mov
stc
mov
sub
imul
ret
mov
jecxz
scas
fdivrs
dec
mov
cmp
sbb
int3
jl
imul
stc
mov
insl
or
pop
jmp
mov
shrl
adc
cmp
adc
fs
jae
pop
cmp
push
sarl
gs
and
mov
jge
sahf
out
daa
in
jbe
fsubs
test
mov
or
repnz
push
mov
fidivrs
in
xor
mov
sbb
int
pop
sbb
pop
mov
push
decl
sub
cmp
ficomps
adc
pop
xor
mov
jae
loope
out
jge
or
sbb
or
jno
dec
sahf
dec
sub
xor
jno
sub
cli
push
iret
jl
lret
test
adc
mov
loop
icebp
and
loopne
out
sbbl
push
mov
adc
jl
mov
push
dec
out
scas
and
std
mov
mov
ret
mov
cs
sub
lods
in
jle
inc
leave
sbbl
xor
lret
push
sub
cmp
das
add
mov
push
loop
outsb
add
add
sti
jbe
jae
mov
inc
pop
jecxz
pop
shlb
lea
push
jnp
mov
sub
popa
test
test
imulb
mov
shr
int
mov
pop
mov
mov
jl
dec
dec
mov
lods
add
nop
in
sub
add
daa
dec
ljmp
ret
mov
aad
push
jl
cmp
into
dec
lock
inc
push
lret
sub
push
cmp
dec
cwtl
popf
and
lret
mov
and
fs
mov
dec
ja
cmp
cmpsb
lods
push
mov
xchg
mov
es
mov
pop
jp
shll
ret
add
mov
adc
aad
call
out
jbe
xchg
xchg
out
rcl
mov
mov
jbe
jge
das
xchg
data16
add
imul
js
push
fwait
js
fwait
shlb
or
inc
jle
sahf
inc
sbb
loope
or
cmp
mov
mov
out
inc
inc
sub
push
cmp
push
xchg
cmp
cmp
pop
jl
mov
cli
lret
jmp
stos
jnp
fsubrl
and
es
sub
imul
scas
movsb
ficompl
add
xchg
lods
inc
mov
aam
dec
stos
inc
mov
push
cli
mov
mov
movsl
idivb
or
inc
mov
gs
xchg
cs
push
fs
push
stos
sahf
daa
add
xchg
lock
fs
lcall
push
or
push
and
sub
adc
fwait
jmp
mov
in
mov
cmpsb
add
sahf
inc
inc
push
inc
jb
test
in
add
testb
test
aas
insl
stc
sar
inc
pop
or
and
inc
call
imul
push
xor
ficoms
mov
and
test
lea
inc
jp
repnz
push
cmp
enter
push
icebp
sbbl
aam
push
rclb
push
sub
xchg
aas
sti
cmp
xchg
and
ss
pop
dec
and
jb
cmp
mov
rcl
xlat
pop
dec
aam
pop
push
xor
out
imul
dec
shr
int
jae
fstpl
dec
lret
inc
xchg
sahf
and
xor
loopne
jns
cmpsl
push
fdivs
jge
test
xor
push
lea
scas
dec
jle
cmp
xor
mov
aam
test
std
mov
gs
mov
add
sub
je
pop
push
xor
call
and
and
dec
dec
lcall
pop
xor
into
mov
sbb
push
inc
in
out
lahf
xor
insb
push
hlt
imul
nop
cltd
pop
hlt
addr16
je
lea
add
rcr
cld
test
dec
mov
fildll
cltd
sbb
add
lret
loop
pop
cmpsl
and
sbb
sahf
repnz
lret
mov
sti
add
push
mov
mov
cmp
xor
dec
dec
das
sar
data16
adc
insb
test
xor
mov
out
cmpsl
xor
ret
sbb
or
popa
push
icebp
repnz
hlt
inc
mov
leave
cmp
loope
jmp
rolb
fnsave
subb
xchg
inc
call
lock
fcomps
data16
sarl
jg
in
jmp
jo
ret
ficomps
int
jmp
testl
xor
rorb
xchg
out
repnz
das
mov
mov
int3
adc
enter
or
mov
mov
les
adc
mov
jmp
pop
jne
data16
ja
outsl
xchg
fsub
jmp
lods
pop
mov
std
dec
lock
jle
lods
and
pop
push
pop
xchg
mov
adc
add
cmp
push
push
popa
add
mov
pusha
lret
scas
bnd
lds
push
push
popf
ss
sub
imul
sbb
out
adc
cs
lret
notb
sbb
push
ljmp
lahf
lods
and
mul
aas
inc
int3
test
sub
pusha
or
ja
outsl
cmp
sti
mov
dec
pop
adc
jno
notb
int3
dec
dec
shlb
sub
in
sbb
push
cmp
mov
pop
les
push
es
add
test
test
aam
andl
jae
mov
add
pop
xchg
daa
xor
jne
fisubl
mov
adc
test
mov
add
inc
mov
fidivs
xchg
pop
add
fisubrl
add
pop
jecxz
iret
ja
mov
mov
cmp
inc
or
xchg
mov
mov
lret
xor
sti
or
lock
inc
je
sbb
je
cmp
sarl
push
xlat
lods
xor
std
push
mov
push
lea
sar
popf
test
ljmp
aad
jo
ljmp
test
add
lahf
mov
add
sti
mov
pop
popa
ss
test
jnp
inc
test
sub
xchg
sub
pop
jg
mov
cmp
imul
dec
xchg
rolb
fnstsw
cmpsb
iret
dec
stc
addb
jp
ret
icebp
test
loope
stos
dec
add
adc
adc
add
mov
movhps
sub
mov
fisubrl
addr16
xchg
dec
xor
in
sbb
stc
adc
repnz
adc
cmp
inc
mov
jmp
xchg
inc
sbbb
andb
mov
mov
jge
lahf
xchg
jmp
fldln2
addr16
and
fmul
cltd
lds
xor
mov
lahf
fs
mov
cltd
je
cmp
cmp
stos
enter
mov
jbe
jne
xchg
cmpsb
mov
xchg
mov
xchg
cmpsb
ljmp
add
xchg
or
and
pop
es
bound
and
sbb
enter
sar
repz
pushl
call
lods
adc
insl
mov
das
cmp
cmc
movsb
rol
ljmp
sbb
mov
inc
cmpsl
lock
mov
add
test
xor
jb
enter
and
push
pop
push
fadds
mov
mov
push
xchg
stc
inc
push
jne
mov
dec
imul
jne
test
adc
mov
das
xchg
lret
mov
cmpsl
outsb
inc
out
jmp
jae
add
fdiv
pop
jns
scas
lods
out
int3
inc
daa
and
decl
pop
fdivl
scas
fdivs
add
sahf
pop
test
scas
xchg
jmp
sbb
adc
dec
and
and
jmp
sbb
sti
lcall
xchg
shll
mov
out
cmp
cmpsb
jbe
mov
pop
inc
dec
bound
insb
push
sbb
mov
sarb
mov
scas
gs
clc
inc
dec
mov
pop
pop
or
pop
test
lock
rcl
push
xor
test
mov
mov
and
mov
or
dec
jge
cmp
cmc
sbb
push
loopne
xchg
or
jnp
and
mov
xchg
cmp
ret
mov
and
fcoml
mov
push
push
add
sub
cld
std
cmp
mov
sar
scas
sbb
pusha
pop
testb
sub
fnsave
or
inc
xchg
cs
xchg
ret
add
push
jle
mov
into
js
mov
test
into
cld
addr16
jno
lods
mov
jl
pop
daa
movsb
push
xor
stos
es
sbb
lcall
sbb
mov
pop
bound
pop
cmpsb
outsl
dec
xchg
scas
not
mov
int
push
lds
xchg
insb
hlt
mov
je
and
dec
jnp
or
pop
sub
pop
cmpsb
or
mov
sub
add
push
mov
pop
fwait
xchg
pusha
jge
in
fcmove
xlat
add
dec
pop
push
fcoms
xchg
jp
mov
gs
jle
cltd
xlat
or
stos
out
addl
mov
popw
mov
and
push
cltd
and
dec
adc
xlat
into
mov
push
lods
jecxz
out
es
loopne
hlt
or
roll
addb
inc
nop
lods
in
jmp
les
dec
sub
mov
sub
test
cmp
dec
add
add
pop
xchg
mov
hlt
repnz
dec
cli
and
xlat
pop
sbb
jecxz
stos
and
lock
popa
jecxz
dec
mov
out
test
xchg
pop
push
sahf
jecxz
add
int3
test
scas
ja
out
xlat
and
cmp
add
aas
fstpt
push
push
adc
sub
or
popf
add
mov
pop
or
inc
pop
push
inc
inc
movsb
jae
add
lret
sub
test
enter
enter
jnp
mov
jmp
leave
std
push
push
push
or
inc
cwtl
ret
add
sbb
jl
icebp
es
adc
mov
push
testl
jmp
popa
jmp
pop
ret
xchg
xor
or
mov
lods
push
push
xchg
fdivrl
decb
aam
mov
les
pop
mov
es
insb
dec
arpl
les
ss
fs
insl
cmc
insb
or
sbb
vpcmpgtb
jae
cmp
cmp
pop
add
scas
insl
mov
mov
xor
call
xchg
enter
lahf
mov
leave
dec
jp
or
mov
je
fwait
xor
movsl
imul
aam
or
sub
sbb
icebp
push
out
mov
pushf
jg
ljmp
sarb
dec
sbb
incl
jb
xor
aad
jo
lcall
icebp
aas
xchg
lret
popa
or
xchg
shrl
iret
popf
cltd
push
lds
push
add
sub
mov
mov
lret
sub
inc
loope
je
mov
jecxz
sbb
mov
pop
jb
mov
sub
outsl
xor
add
cmp
push
jge
into
stos
repnz
fs
jg
fstp
daa
repnz
rcrl
or
rorl
mov
out
pushf
lret
mov
mov
inc
push
out
test
nop
std
xor
cmp
das
push
rorl
push
xor
mov
and
mov
fldenv
mov
mov
mov
fwait
shlb
xchg
ss
inc
adc
out
mov
pop
jecxz
mov
arpl
xchg
add
mov
sub
in
lret
repnz
cmp
icebp
add
nop
inc
sbb
ds
adc
loopne
xchg
fidivrl
je
or
jnp
mov
repnz
push
sub
adc
xor
jo
ja
push
in
fbstp
mov
into
push
mov
xchg
mov
movsb
lcall
jge
popa
inc
sub
lret
dec
or
mov
sbb
dec
mov
pop
imul
mov
shlb
lods
out
fdivs
push
add
hlt
pop
enter
das
lret
mov
data16
insb
fsubrp
mov
or
gs
movq
cwtl
pop
mov
sarb
loop
xchg
repz
jae
shl
dec
mov
jecxz
lea
xor
push
adc
push
in
jae
sbb
sbb
adc
push
push
ss
and
into
ficompl
xor
mov
test
push
dec
icebp
outsl
enter
fnstenv
mov
sbbb
mov
enter
xchg
mov
sbbl
les
pop
lock
lds
test
scas
test
lret
popa
fistpll
mull
repz
mov
mov
repz
push
jge
and
xor
divb
xchg
mov
int
leave
fnsave
xchg
jp
imul
jns
lods
sub
mov
clc
rol
inc
call
add
push
cmp
jne
pop
add
sub
lcall
push
lds
aad
aaa
aad
fisubrl
orb
and
mov
scas
inc
or
xchg
cmp
outsb
mov
std
lret
aad
jae
xchg
popf
ljmp
and
mov
and
cmp
mov
jbe
std
inc
mov
xor
and
arpl
mov
popl
sub
aam
lcall
cli
sbb
mov
fsubl
and
push
frstor
push
fildl
jb
mov
and
inc
dec
daa
lea
scas
testb
and
loop
iret
mov
jg
lods
pop
scas
xor
jno
inc
lods
mov
lcall
ss
out
sub
push
pop
int
xchg
inc
mov
ficomps
clc
dec
ljmp
mov
out
sahf
xchg
push
mulb
push
xchg
lahf
jg
xchg
xchg
jo
adc
jbe
gs
jo
movsl
mov
pusha
stc
mov
fcoms
push
inc
leave
sbb
jl
cmp
mov
out
sahf
push
adc
mov
dec
pop
or
fiaddl
scas
xchg
popf
rorl
xchg
leave
add
mov
push
mov
int3
adc
cmp
mov
inc
adc
pop
call
hlt
testb
daa
repz
jbe
sub
xor
xchg
fiadds
out
cmpsb
or
data16
fistpl
addr16
cltd
test
in
push
jae
int
stos
sbb
mov
sub
jno
pop
sbb
notb
push
sbb
push
fsubl
aad
shrl
dec
xor
ljmp
cmc
lea
add
adc
in
xchg
mov
jl
mov
xchg
and
out
pop
stc
lcall
push
cmp
clc
cltd
dec
rorb
popf
xchg
xor
push
push
ret
xor
data16
pop
lret
jmp
pop
push
stos
and
xchg
inc
inc
pop
mov
push
jl
dec
pop
sub
lds
ret
cmp
movsb
insl
jle
dec
mov
cmc
cmp
ret
hlt
in
push
inc
xor
in
mov
pop
mov
jns
push
sbb
inc
ja
cwtl
mov
adc
ret
pop
cltd
jnp
xorl
out
addr16
out
cmpsl
sbb
add
cmp
test
jns
inc
adc
mov
jno
mov
sub
inc
mov
adc
lret
add
mov
lret
je
xchg
sub
idivb
xchg
and
fisubs
ljmp
and
pop
mov
sbb
and
and
xchg
sbb
out
or
push
gs
pop
inc
add
nop
test
inc
hlt
pushf
fs
fbstp
sub
push
pop
dec
jl
sub
repnz
mov
movsl
imul
ja
movsl
mov
repnz
xchg
jl
cmc
add
pop
push
cmpsb
jns
pop
mov
sbb
inc
xor
adc
ror
addr16
xor
aas
dec
fs
xchg
es
mov
popf
adc
idivb
fmull
xor
movsl
push
test
mov
jb
dec
sahf
mov
and
xor
xor
mov
test
das
shll
xchg
jns
pop
loopne
jbe
arpl
cld
clc
addr16
das
push
cmpsb
popa
push
sub
adc
das
fwait
es
popa
adc
rclb
sub
mov
ljmp
iret
push
push
sub
mov
movsb
ret
testb
loope
mov
jecxz
xorb
mov
dec
fnstenv
insl
adc
fidivs
push
lods
stos
jecxz
adcb
mov
cmp
lret
fwait
xor
mov
pop
jg
sub
mov
push
or
mov
jns
push
mov
scas
cmc
fisttpl
jge
fwait
jno
out
out
xor
shl
mov
xor
jnp
addr16
out
pop
xlat
inc
dec
push
jp
in
std
inc
push
arpl
adcb
ud0
or
jnp
imul
dec
outsl
mov
mov
jmp
lret
out
cmp
sub
sbb
or
jnp
imul
dec
outsl
mov
mov
jmp
lret
out
cmp
sub
sbb
or
jnp
imul
dec
outsl
mov
mov
out
iret
cli
out
nopl
cvtps2pi
or
jnp
imul
dec
nop
inc
pusha
push
and
mov
xor
xor
outsl
lahf
jl
dec
mov
dec
mov
mov
sub
aas
lods
pop
mov
outsl
or
pop
scas
sub
cmp
or
sbb
in
adc
shrd
fsubrl
in
sub
pushf
outsl
aam
mov
xor
pop
xlat
adc
sbb
mov
fildll
inc
mov
cmp
or
xor
dec
fidivl
push
sbb
add
cmp
jmp
sbbb
int3
mov
incl
scas
mov
adc
loopne
icebp
dec
outsl
and
push
aas
loopne
mov
cmp
cmp
in
int3
das
mov
pop
cld
psubusw
sarb
mov
jo
inc
mov
rcr
cmp
repz
in
cld
icebp
dec
shlb
push
arpl
xchg
sbb
insb
inc
rcr
pop
mov
xchg
xchg
xchg
jecxz
lock
cltd
xchg
jmp
sub
ljmp
mov
push
sub
inc
shrb
and
scas
mov
imul
cmpsb
pop
scas
enter
or
mov
pop
mov
inc
mov
mov
lahf
push
std
cmp
and
inc
fstl
js
sbb
in
jo
pop
cmp
dec
in
stc
add
negb
out
int3
cmp
cmp
imul
aad
rorl
sbb
sbb
lahf
adc
jg
cmp
or
sbb
in
pop
cld
bswap
aas
fsubrl
lods
pop
mov
outsl
insb
lahf
jl
dec
mov
cmp
or
sbb
in
pop
cld
bswap
aas
fsubrl
lods
pop
mov
outsl
insb
lahf
ficompl
push
aam
bound
mov
repz
daa
idivl
scas
pop
mov
cmp
or
jb
sbb
je
adc
cmp
orl
jl
xor
js
out
fistpl
fsub
popf
ret
jb
mov
or
rclb
minps
inc
adc
lahf
sbb
adc
mov
jg
sbb
cwtl
cs
inc
cmp
cmp
cs
lds
mov
push
inc
inc
mov
cmp
push
ss
ljmp
fistps
push
movsb
test
pop
jl
mov
dec
xchg
cmp
xchg
iret
lods
add
scas
mov
sub
cmp
add
bound
lock
sahf
outsl
mov
das
cmpsb
push
mov
or
push
and
sub
push
cmp
into
and
ljmp
jp
aad
and
pusha
push
rcll
inc
fwait
sub
ret
lock
xchg
roll
outsl
fs
in
pop
xchg
out
sub
push
jecxz
xchg
addr16
xchg
rolb
loope
push
push
cmpsb
dec
mov
fisttps
mov
sub
add
insl
push
cmp
cmpsl
xchg
sub
movsl
xorb
and
pop
out
mov
push
loope
push
add
and
dec
js
rcrl
scas
in
dec
scas
adc
jnp
xlat
in
mov
mov
xlat
ljmp
mov
and
push
lods
inc
mov
mov
and
ja
sahf
xor
xchg
jne
std
xchg
mov
lods
shll
or
mov
shl
add
adc
push
push
mov
ja
xorb
dec
pop
pusha
lret
dec
dec
psubd
mov
pop
outsl
fstpl
mov
mov
sahf
and
xor
dec
loopne
rol
add
test
xchg
add
sub
mov
add
fucomi
jecxz
aam
pmullw
rcll
dec
int3
push
arpl
repnz
cli
jge
icebp
jle
rcl
add
popa
sarl
xor
cmpsb
jne
xor
mov
imul
dec
iret
sarb
dec
mov
clc
push
jecxz
test
jl
pop
fisubs
cmp
lcall
xor
mov
test
rcl
int
dec
ds
cwtl
add
iret
inc
cmp
int3
leave
ret
adc
xchg
mov
das
call
sti
arpl
xor
or
mov
outsl
or
enter
sahf
pop
lahf
ds
es
jge
dec
add
shl
mov
or
cltd
xlat
jae
wrmsr
rcrb
fsubrs
mov
mov
or
in
int3
adc
pop
mul
cmp
insl
pop
mov
pushf
ret
fistl
push
cmp
mov
xchg
pminsw
rcll
push
popa
cmpsb
mov
in
addr16
insb
ficoml
roll
lock
out
add
mov
int
rcll
add
push
lock
mov
mov
xor
icebp
push
cmp
mov
or
push
stos
or
mov
mov
mov
jae
je
cmp
sbb
mov
fstpl
or
cmc
and
sub
shl
sbb
or
sub
in
movsb
sbb
add
and
push
or
int
and
rorl
roll
cmpsb
aaa
add
arpl
jne
pushf
or
cmp
gs
pusha
loop
and
xchg
cmpsl
pop
jne
sub
fldenv
mov
or
mov
das
pop
xchg
pusha
or
xlat
push
in
pop
dec
xchg
sbb
or
ljmp
add
adc
sbb
jb
push
scas
add
outsl
xlat
mov
stc
cmp
in
in
add
adc
notl
mov
cld
addr16
sarb
mull
sbb
dec
inc
or
jl
sar
in
shlb
push
and
daa
mov
loop
jmp
xor
pop
mov
add
mov
push
fsubs
loop
enter
cwtl
adc
mov
mov
imul
dec
rcl
ljmp
dec
ret
push
jae
dec
and
mov
mov
inc
inc
xchg
dec
push
cltd
ret
movsb
call
push
ret
xchg
shrl
and
jmp
incl
and
test
xchg
xlat
addl
or
enter
xchg
add
mov
push
xor
loope
shl
add
push
cmp
add
sub
add
into
sbb
shrb
add
adc
push
clc
adcb
add
aam
mov
inc
xchg
jne
lock
push
xchg
js
mov
sub
sub
filds
stos
push
add
outsb
xchg
cmp
or
fsubl
test
mov
out
in
imul
cmpsl
mov
leave
sarl
scas
and
jecxz
jecxz
lret
jne
inc
pop
push
mov
push
testl
jp
push
pop
in
pushf
push
xor
pop
fdivrl
xorl
push
stc
ror
mov
in
mov
xor
sub
jo,pn
cmp
sti
js
lds
fwait
jmp
sub
mov
lahf
pop
dec
les
sub
adc
sarl
jecxz
add
xchg
jg
mov
js
add
push
aas
push
fistpl
mul
sub
aas
nop
cs
xchg
imulb
cli
shrl
xor
scas
sbb
pop
pop
dec
fildl
stc
jp
sbb
fdivs
xor
call
jmp
pop
es
mov
in
sub
inc
push
lret
jnp
inc
adc
cmc
loope
insb
dec
or
enter
ret
orl
mov
jno
testb
jne
lock
sbb
fadds
mov
mov
dec
push
nop
int
lret
jmp
icebp
test
and
push
push
movsl
aas
mov
add
and
lcall
mov
mov
out
and
push
push
cld
mov
mov
lret
loope
pop
inc
jae
dec
insb
inc
mov
adc
push
daa
aas
and
jle
pop
mov
clc
mov
int3
pop
enter
mov
adc
rcr
sub
lahf
cld
adc
add
in
outsb
or
adc
sub
cs
js
jle
dec
and
imul
push
and
dec
sub
mov
ds
rcr
int3
dec
mov
sahf
mov
shrb
shrb
cli
sub
xor
xchg
mov
enter
push
ds
dec
sub
punpcklbw
nop
rcr
movb
js
out
int3
cmp
cmp
mov
adc
inc
inc
xor
xor
movsb
repnz
mov
ret
enter
sub
add
xor
cmc
bound
push
pop
in
mov
lcall
loop
popa
sahf
push
je
sbb
dec
jo
aad
loope
sub
xor
dec
insl
roll
das
sbb
inc
jp
mov
lea
shrb
icebp
pusha
sub
test
xlat
cmc
dec
loope
add
aad
jne
and
xchg
sub
pop
ja
sbb
jno
sbb
ror
add
push
pop
mov
jo
push
in
and
jp
dec
stos
mov
pusha
mov
cltd
xor
mov
ljmp
mov
cmpsl
es
mov
jp
lea
jne
push
test
lock
and
aad
pop
lods
mov
dec
aam
xor
jne
andb
dec
inc
and
in
nop
scas
js
sti
mov
gs
jge
or
mov
test
andl
das
and
ljmp
fsubp
cwtl
mov
repz
fwait
adc
icebp
pop
test
push
jge
mov
ds
pop
jmp
xor
push
pushw
mov
stos
cmp
add
nop
add
das
mov
repz
das
aaa
and
subb
jo
lock
lahf
jle
xchg
mov
inc
cmpsl
loope
lea
out
insl
inc
and
leave
pop
push
jle
or
aaa
sub
jecxz
aam
mov
ss
out
aaa
fisubl
icebp
pusha
push
loopne
data16
inc
subl
dec
lds
push
outsb
push
sbb
or
and
outsb
ljmp
cmp
fsubrl
xor
notl
addr16
rclb
enter
xchg
cmpsb
sub
push
ja
shl
dec
insb
jp
jg
iret
out
adc
shll
and
inc
loope
not
rcrb
aaa
in
loope
mov
cmc
or
fsubs
add
lea
jno
push
mov
jbe
and
das
adc
fbstp
into
xchg
fists
incb
jp
or
or
cmc
inc
jns
jae
pop
imul
pop
aam
out
lods
scas
inc
pop
mov
movl
call
int
push
ret
sub
lds
insb
rol
lcall
test
xlat
jmp
lahf
ljmp
pop
sbb
pop
push
sbb
clc
mov
stc
es
daa
lods
shrb
xor
fistpll
sti
fucomp
sub
dec
mov
adc
jp
stc
hlt
pop
stc
dec
mov
sbb
adc
js
fsts
adc
dec
xorb
addb
aam
mov
cmpsb
add
lret
xchg
addb
outsb
xor
mov
imul
frstor
daa
pop
mov
push
adc
sarb
mov
movsb
jp
hlt
test
stos
jns
jp
loope
xor
pop
cwtl
push
aas
mov
cwtl
add
jg
and
adc
cmp
jmp
stos
cmp
imul
dec
pop
arpl
jno
sbb
mov
adc
mov
push
fwait
push
sti
sar
fwait
fs
mov
xchg
sbb
jg
aas
cmc
or
jle
lahf
push
pop
xchg
subl
das
and
test
movsl
jp
movsl
dec
cmpsl
stc
movl
add
mov
outsl
hlt
insb
jmp
and
repnz
jmp
pop
push
and
arpl
inc
int
pop
outsl
inc
jecxz
add
pop
test
pop
outsl
pop
mov
arpl
xchg
pop
pop
pop
out
cs
pop
xor
sbb
ds
incl
loope
fwait
push
daa
dec
mov
push
and
jbe
clts
add
lods
dec
jl
in
pushf
aam
jnp
fidivrl
sbb
xor
fsubs
rorb
cmc
push
loop
push
xchg
lret
sbb
nop
lods
stc
adc
test
or
stc
out
rcrb
jg
push
outsb
pop
add
add
sbb
mov
sbb
push
es
adc
mov
mov
mov
cmp
ret
jns
push
cmc
mov
les
popf
js
fistl
js
imul
dec
sbb
pop
aaa
pop
mov
jge
mov
jno
xchg
xchg
and
push
and
xlat
pop
out
or
pop
push
popf
xchg
int3
in
push
icebp
popf
cmp
stos
xor
pop
jnp
cmp
adc
xchg
stos
ret
adc
inc
ja
popa
test
push
and
int
movsb
out
mov
xor
loop
xchg
das
xor
rdpmc
popf
test
mov
lods
dec
in
movsl
fcmovbe
or
sbb
call
or
cmpsb
clc
sti
out
jne
push
cs
cld
cwtl
and
cwtl
sti
jle
xor
cmpl
movb
andb
faddl
hlt
mov
mov
mov
or
js
fs
sahf
repnz
scas
out
ret
inc
mov
in
outsl
mov
inc
jae
rorl
fists
test
add
add
mov
xchg
imul
mov
pop
sbb
jb
jbe
imul
and
and
outsb
jns
push
stos
sahf
loope
and
jbe
adc
mov
jl
push
mov
dec
orl
ret
arpl
outsb
vmread
adc
lds
fadds
dec
inc
pop
adc
inc
fwait
out
stos
dec
adc
shll
cmp
or
mov
and
out
test
sub
int3
push
sub
pushf
adc
push
lods
iret
repz
mov
mov
add
dec
in
ret
push
jle
ret
lea
adc
imul
and
fsub
or
push
pop
data16
enter
out
je
or
call
push
cmp
lods
cltd
mov
inc
je
cmp
into
aam
pop
lahf
sub
xor
dec
add
ss
das
lds
shrl
mov
sub
xor
mov
or
or
popa
push
mov
or
xchg
push
aaa
iret
hlt
xchg
mov
push
and
loope
sbb
nop
push
push
lods
and
insb
adc
mov
mov
cmp
mov
cmp
cli
push
ss
andps
inc
enter
xchg
push
sub
jecxz
inc
loop
and
pusha
sbb
xor
or
ret
lds
adc
test
add
push
lret
enter
outsb
out
test
xorb
cmp
xor
movsb
movsl
jecxz
insl
sbb
cmc
cmpsb
adc
xchg
out
shll
mov
adc
and
je
testb
xchg
je
jno
loope
test
xchg
adc
push
outsl
iret
in
push
mov
mov
dec
mov
in
add
cmpsb
scas
sbb
ret
mov
mov
idivb
pop
cmp
and
sbb
test
test
fiadds
imul
pop
cmc
les
mov
iret
xlat
inc
fisttps
mov
jnp
mov
or
inc
sbb
jp
iret
mov
pop
jmp
ds
push
leave
rorl
sbb
dec
ficoms
mov
inc
jno
sub
ret
push
aaa
push
xor
sahf
into
iret
mov
je
cmc
pop
or
das
mov
lret
shlb
xchg
push
stos
sbb
int3
ljmp
ljmp
into
xor
cmp
mov
std
movsl
loope
call
sub
lcall
scas
dec
ret
xor
das
pop
frstor
push
sub
sub
pop
dec
inc
test
jne
outsb
pop
and
sub
ja
inc
sbb
aad
mov
mov
rorl
out
pop
jp
jmp
loopne
psubsw
repz
xor
jle
cli
xchg
jno
call
pop
popf
push
adc
rcrb
cmp
xor
rcrb
pop
dec
cmp
fsqrt
mov
xchg
lods
lahf
ret
push
imul
ret
movzwl
outsl
push
fwait
or
out
and
inc
ficoml
call
sub
insb
test
fcomp
rorl
sub
scas
lret
lret
add
lock
fadds
add
pop
mov
cwtl
lods
mov
lcall
sub
test
pushf
outsl
jp
and
mov
xchg
inc
xchg
jno
gs
xor
mov
outsl
xlat
push
jge
shrl
out
mov
xor
pop
pop
jmp
dec
mov
lret
stos
fisttpll
xchg
pop
cs
fldt
lahf
out
ljmp
mov
mov
mov
test
dec
lahf
mov
imul
xchg
leave
mov
out
hlt
mov
mov
call
and
pusha
pop
dec
ficoms
imul
or
les
ja
cwtl
pop
mov
test
pushf
cli
mov
xchg
and
add
or
popa
in
xchg
push
test
inc
jns
pusha
fldenv
or
jae
adc
sbb
and
cmp
pop
sbb
movsl
xor
or
popf
jl
cwtl
pop
int3
clc
movsl
or
ficoml
xlat
jl
adc
mov
in
outsl
mov
subl
in
or
inc
inc
sbb
out
and
jns
xor
jg
aam
mov
jns
mov
rcll
mov
mov
nop
loope
xor
daa
iret
sahf
fidivs
mov
push
push
mov
cltd
mov
repz
mov
push
sub
mov
xchg
out
addb
cld
adc
ds
ss
and
dec
inc
decb
inc
mov
pop
jecxz
test
dec
xor
pusha
jnp
es
push
sti
dec
adc
or
and
push
rorb
rcll
mov
enter
loop
lret
jae
arpl
scas
fisubl
mov
hlt
jne
xchg
jne
je
ja
sbb
ret
dec
test
adc
push
arpl
mov
adcb
lds
push
pop
sub
push
lock
js
and
mov
mov
xchg
fmuls
leave
pmuludq
mov
rdpmc
xchg
mov
repnz
push
imul
jns
dec
movsb
lahf
cld
and
cmpsl
adc
enter
sub
sbb
scas
outsb
mov
icebp
sbb
cld
push
vdivps
sbbb
jnp
out
mov
adcb
loope
dec
addr16
int3
xchg
ffree
cmp
aas
mov
sbb
std
push
cs
cmc
fildl
scas
sub
jo,pn
mov
popf
repnz
xchg
xor
sti
dec
rorl
mov
leave
adc
cmpsb
push
ds
sub
lret
cmc
in
and
fdivrs
scas
push
xor
jae
shll
repnz
cld
push
pop
dec
sbb
pop
mov
cltd
lods
inc
bound
xor
mov
orb
lea
add
sbb
iret
dec
cltd
pop
sub
std
fs
in
shlb
cs
dec
and
imul
fbld
cmpsl
dec
add
in
sbb
cmp
out
sub
repz
xchg
push
dec
add
mov
push
testb
push
call
call
shl
movsl
push
leave
mov
inc
mov
push
dec
das
xchg
and
movsb
int3
out
and
int
jp
mov
push
adc
rorl
xchg
orl
sarl
xchg
sub
mov
adc
jns
xor
fstps
add
jae
dec
imul
inc
in
add
test
jmp
pop
cmp
rep
push
xorl
iret
ds
or
jge
push
in
sbb
add
outsb
pop
and
mov
add
mov
repnz
jo
sarb
ret
and
popf
testb
push
repnz
lods
xchg
daa
call
mov
adc
xchg
bswap
jp
add
clc
insb
lock
fs
push
out
pushl
jle
ret
cmc
testb
and
into
data16
mov
addr16
jae
std
xlat
sahf
fmul
clc
fisttpl
shrl
sbb
shrb
xor
dec
je
inc
mov
and
sahf
add
pop
insb
mov
push
mov
sbb
sbb
sub
test
push
fwait
cmpsl
in
sarb
das
jp
push
addr16
mov
push
push
adc
ljmp
rcrl
or
lret
cltd
jb
pop
fs
sbb
jp
movsl
push
in
jo
in
int3
ljmp
mov
fbld
add
sub
mov
scas
or
stos
out
mov
ss
icebp
push
mov
les
jmp
ljmp
shlb
cld
or
cmp
pop
in
popa
insb
xor
ja
stos
mov
movsb
push
dec
ret
sub
and
in
mov
jge
rcr
sub
subl
inc
decl
loopne
mov
lahf
ss
aam
int
in
xor
fwait
and
es
jb
pop
bound
cmp
fwait
mov
pop
movsb
mov
test
out
test
sub
xlat
xchg
lret
in
or
xchg
mov
jb
loope
loop
sub
xor
mov
dec
cld
inc
bound
xchg
dec
les
xchg
inc
fimull
push
rolb
insb
cmp
add
cmp
mov
ja
int3
aaa
push
dec
cmp
pop
inc
xor
pop
adc
jb
push
stos
in
jmp
imul
sbb
xchg
ret
xchg
mov
push
jne
stos
pop
push
rcll
add
lock
shl
jmp
xchg
leave
mov
add
stos
dec
int
mov
pop
popa
fnstenv
inc
loope
andl
dec
into
mov
inc
sbb
loope
mov
xor
arpl
loop
pop
sbb
push
lea
rcrl
mov
movsl
add
jle
int3
lds
scas
sub
cmp
or
sbb
in
pop
cld
bswap
aas
fsubrl
lods
pop
mov
outsl
insb
lahf
jl
dec
mov
cmp
or
sbb
in
pop
cld
bswap
aas
fsubrl
lods
pop
mov
outsl
insb
lahf
dec
sub
pop
scas
mov
fsubr
in
pop
cld
aas
fsubrl
lods
pop
lods
dec
mov
imul
mov
mov
sub
or
pushf
das
in
pop
add
fcmovnbe
xor
jae
arpl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jne
nop
lds
cmc
or
pop
add
sub
and
inc
cwtl
jne
gs
adc
enter
sub
sbb
or
js
push
shr
push
test
mov
mov
jp
add
loop
test
sahf
pop
into
out
test
mov
mov
sub
push
fadds
insb
scas
inc
mov
stos
pop
cmpb
mov
dec
jge
push
stos
call
jmp
stc
jnp
pop
jg
and
xchg
jns
cmc
int3
out
jo
adc
jge
jns
pop
xor
test
aam
rcrb
mov
lock
sbb
clc
fcoms
addr16
jbe
pop
xor
xchg
xor
gs
pop
jns
xchg
in
pop
dec
dec
pop
lods
stos
sti
adc
jne
ljmp
rcl
out
enter
jmp
sbb
add
addr16
or
add
and
fidivrl
in
fcomip
rclb
pop
inc
push
push
sub
jge
call
mov
sbb
out
js
sub
pop
outsl
lock
inc
gs
sub
fdivs
pop
lds
lret
push
loope
ljmp
jmp
or
jp
jno
je
inc
cmp
ret
rclb
or
xorb
adc
adc
add
push
mov
sbbl
push
icebp
push
movsl
mov
jne
gs
adc
enter
sub
sbb
or
js
push
movsl
mov
jne
gs
adc
enter
in
adc
or
cmpsb
cmp
sub
sti
xchg
sbb
insb
ja
adc
dec
dec
loopne
push
in
int
out
mov
fstpt
and
jp
sahf
mov
xlat
jae
out
outsl
jnp
xchg
sub
or
push
bound
lret
pop
int3
rcll
mov
repnz
mov
push
hlt
cmp
inc
int
movsb
and
pop
pop
jmp
or
pusha
xchg
imul
jbe
das
icebp
cmp
cltd
add
cmp
xchg
hlt
cmc
xchg
pop
adc
lock
and
and
mov
in
addl
aam
jno
cmp
jb
ret
sbb
dec
inc
add
out
pusha
aas
sbb
mov
fcomps
lock
push
insb
jb
push
insl
sbb
cld
jbe
rol
fs
mov
mov
sarb
in
jle
shrb
mov
jmp
mov
imul
xchg
mov
rcrb
into
ds
divb
mov
imul
pop
sub
dec
fdivl
mov
call
mov
pop
dec
iret
test
xchg
jbe
mov
cmp
popf
outsb
dec
ret
inc
pop
insl
lcall
mov
inc
stos
ljmp
test
lods
jo
inc
cli
in
fistpl
xor
ficoms
cmp
sbb
mov
adc
jno
insl
sarl
pop
addr16
lods
jne
rcl
jge
mov
mov
or
cmp
sub
mov
stos
push
ja
in
mov
pop
xchg
cmp
dec
inc
push
xchg
daa
cwtl
xchg
mov
addb
adcl
mov
arpl
aas
xor
and
test
pop
cmpsb
adc
add
jbe
fwait
test
shl
push
aas
dec
or
rcll
push
ljmp
mov
leave
jae
push
add
mov
nop
test
in
jmp
cld
push
mov
mov
mov
aad
nop
sub
imul
shll
sbb
sub
mov
pop
in
sbb
mov
xlat
imul
clc
inc
adc
sti
jb
pop
xchg
lods
sub
loope
ret
shlb
rcrb
add
xchg
out
movsl
int
jge
in
pop
dec
and
stc
rcrl
stc
in
xor
lret
jbe
ficoms
fldl
daa
int3
mov
xor
decb
pop
repz
xchg
cli
insb
rorl
clc
stos
mov
inc
push
mov
pop
movsl
jne
test
roll
in
jb
inc
or
dec
sbb
sbb
test
es
outsl
test
pop
imul
add
arpl
arpl
xorl
in
jge
aam
mov
stos
sub
sbb
dec
aad
jmp
test
imul
shrl
mov
xchg
cmp
lret
outsb
adc
jl
iret
sbb
loopne
popa
cmp
outsl
inc
daa
insl
xchg
mov
daa
adc
lods
mov
outsb
loop
pop
mov
fnstcw
ja
imul
outsl
jecxz
ljmp
lock
imul
pop
repz
sarl
xchg
pop
xchg
pop
add
and
fs
push
jp
jmp
scas
xor
add
cwtl
or
add
inc
jge
jae
rcrl
inc
fistps
jecxz
xchg
mov
push
sbb
jbe
pop
push
xchg
ret
jge
fcompl
xchg
leave
data16
imul
xor
leave
adc
dec
mov
mov
push
pop
mov
jbe
int
mov
push
cmp
xchg
or
movsl
pop
push
jbe
jb
adc
lcall
push
ret
lret
iret
mov
push
jnp
pop
add
jbe
aas
xchg
sub
shll
je
sahf
lds
mov
dec
cltd
out
repnz
pop
ja
pushf
jne
jno
xchg
fdivrs
cmpsl
roll
mov
push
inc
xor
movsl
outsl
pushf
xchg
shrl
add
hlt
movsl
hlt
mov
inc
jg
aaa
notl
mov
js
or
cld
sub
xor
push
mov
lods
lret
nop
stos
in
lds
clc
ljmp
add
xor
push
mov
bound
mov
xor
scas
popf
or
pop
mov
adc
or
subb
addl
mov
or
jmp
pop
fisttps
cmp
and
mov
les
call
xchg
fstpl
pop
push
jb
inc
inc
mov
sahf
pop
sahf
sahf
cmp
outsb
hlt
pop
js
pushf
jo,pn
jg
cmpsl
imul
test
shl
cmp
stos
mov
adc
mov
push
popf
jmp
iret
adc
inc
cmc
mov
fwait
mov
outsb
cmc
mov
scas
xor
es
shrl
inc
jg
and
into
pop
sub
in
aas
adc
adc
push
hlt
xchg
icebp
jp
xor
mov
xchg
bound
fwait
dec
push
push
imul
out
popl
push
push
subb
out
loope
pop
xchg
lcall
and
mov
mov
ja
and
pop
cs
mov
ljmp
sbb
xor
ja
xchg
out
in
sti
push
jmp
std
lods
rclb
repnz
mov
movsb
lods
sbb
jl
shll
mov
xchg
repnz
out
popa
mov
mov
and
cmpsl
add
fcoms
cmp
xor
loopne
pop
fldt
pop
mov
outsl
jae
lahf
andb
push
mov
stc
mov
ja
inc
sbb
adc
sbb
sbb
scas
xchg
push
enter
arpl
cmpsb
faddl
cwtl
imul
shr
push
mov
popf
sub
arpl
int
push
add
subb
inc
lods
mov
sarb
xchg
pop
cmp
xor
arpl
sbb
inc
pushl
jbe
xchg
in
div
mov
inc
lahf
xor
push
movb
js
mov
and
stos
push
add
into
sbb
rclb
jecxz,pt
or
mov
xchg
xchg
lea
dec
sbb
es
aas
outsb
cmp
or
in
sbbl
ror
and
cmp
into
popa
pushf
sub
pop
sbb
std
mov
inc
insl
pushf
jg
aad
jg
adc
cmp
mov
or
inc
imul
sarl
lock
scas
fidivs
sahf
iret
push
call
sub
adc
cmp
in
cmp
sub
aaa
dec
adc
aad
repz
popa
aam
test
int
mov
imul
pop
pop
jecxz
or
mov
aas
ficomps
jecxz
add
jae
adc
or
pusha
scas
inc
imul
or
adc
test
jbe
sub
push
mov
test
push
xor
inc
ret
int3
int
pop
sbb
dec
cli
xchg
cmpsl
test
mov
jae
push
test
jecxz
pop
inc
lret
push
adc
js
fwait
inc
jmp
jbe
mov
jmp
or
sbb
mov
pusha
sbb
cli
bound
pop
les
lret
push
outsl
fldl2t
pop
stos
mov
out
lds
jp
aas
dec
stos
push
cmpsb
push
fcmove
and
cmp
pop
cmp
repz
out
inc
pop
xor
mov
add
movsb
shlb
push
mov
sbb
pop
fcompl
sub
xlat
mov
icebp
out
loope
inc
setp
aad
mov
ret
lods
idivl
pop
push
ds
cmp
lea
xchg
jecxz
fiaddl
stos
pusha
mov
pop
cmc
lcall
imul
push
push
fldenv
push
dec
mov
enter
cmc
and
jecxz
lcall
cltd
loop
mov
pop
xor
insb
roll
jae
rol
lcall
aaa
mov
movsl
out
inc
cmp
jns
cwtl
cmc
mov
dec
xor
cmp
pop
push
add
or
adc
or
pusha
cmp
imul
test
push
andl
fmul
incl
mov
lahf
mov
outsl
bnd
dec
shrl
adc
add
arpl
and
or
pop
lods
or
call
add
add
xor
fnstsw
adc
mov
imul
xor
shlb
pop
js
int3
xor
xchg
cmp
in
adc
mov
mov
xchg
mov
addr16
push
lahf
jecxz
xchg
mov
in
ljmp
inc
roll
fsubr
adc
pushf
mov
and
push
mov
enter
or
loopne
jae
xchg
pop
out
sti
jae
jae
addr16
repz
jno
add
jae
fistpll
jg
mov
div
leave
fwait
lods
out
cmp
and
mov
pop
add
ja
xchg
lods
and
xor
mov
mov
out
mov
insl
sub
js
dec
dec
cs
test
cmp
mov
cmp
mov
sbb
or
push
std
push
mov
or
inc
jge
es
fsubrs
push
insl
xchg
mov
ljmp
mov
mov
mov
cmpsl
pop
xchg
and
xchg
jno
mov
jl
xchg
or
cli
arpl
mov
inc
inc
cli
jb
pop
repz
pop
or
test
enter
cmp
mov
cmpsl
push
jb
inc
mov
adc
or
or
out
xchg
inc
mov
xchg
fs
or
xchg
pop
aad
mov
into
enter
add
les
je
lcall
aaa
dec
stos
dec
adc
inc
mov
iret
loopne
pop
imul
and
cwtl
inc
pop
ret
lods
les
add
inc
xor
repz
dec
enter
insl
pop
xor
fmuls
or
mov
ficoms
sub
mov
insb
gs
ja
in
adc
repnz
inc
fcomps
das
or
movsb
je
push
into
clc
daa
mov
mov
dec
mov
xor
lods
movsb
jecxz
scas
imul
xchg
sub
hlt
data16
pop
xchg
inc
je
pop
clc
sbb
sub
mov
jge
jbe
dec
dec
push
fidivs
add
dec
mov
or
inc
rorl
int
xchg
mov
test
push
mov
sbb
call
jns
jg
out
xchg
ret
pop
daa
pushf
and
das
mov
repz
filds
push
adc
int
xor
stos
and
mov
push
lds
dec
stc
mov
or
xchg
inc
and
inc
test
lods
inc
aam
fists
sub
xlat
push
pop
fwait
int
call
inc
jp
pop
call
hlt
pop
pop
inc
cltd
stc
pop
rcll
sahf
rorb
sbb
pusha
cli
xor
mov
mov
pop
mov
das
push
pop
add
ret
shrb
pop
leave
xchg
arpl
test
mov
scas
add
aad
rcll
bound
cli
sbb
or
icebp
mov
or
and
adc
sti
inc
add
add
mov
cld
fcomps
aaa
lock
mov
dec
mov
sbb
cli
push
adc
data16
pop
push
or
xchg
inc
mov
xchg
insl
fs
movsl
add
mov
scas
push
push
fs
fnstcw
fnsave
mov
roll
mov
lcall
mov
cmp
jnp
adc
test
mov
mov
xchg
cmp
adc
pop
insb
pusha
cmpsb
mov
mov
mov
sbb
insb
sbb
sub
flds
das
movl
jp
pop
xchg
mov
mov
push
shll
mov
add
lock
pop
popf
ret
idiv
sahf
push
fsubl
clc
xor
shl
adc
and
icebp
bound
or
sbb
add
dec
push
xor
rcr
add
test
or
lds
iret
fsubrl
data16
push
or
inc
xorb
add
pop
cltd
adc
mov
inc
pop
and
out
sbb
out
flds
pop
inc
fwait
inc
aaa
cmp
cmp
pop
adc
fstl
aad
pushf
sbb
hlt
push
push
mov
adc
mov
int3
dec
call
xchg
mov
daa
incl
pop
lods
rorl
shl
ss
lods
out
sub
imul
push
int
lret
je
inc
lock
inc
xor
pop
nop
xor
push
inc
xor
sbb
mov
aad
cmp
in
xor
stos
adc
ret
into
push
cmpsb
mov
cmp
and
and
mov
dec
pop
mov
dec
jne
mov
sbb
push
pop
adcb
popa
lcall
out
scas
add
jge
and
cli
xchg
mov
adc
cltd
daa
cmp
adc
lahf
and
repz
mov
jecxz
xor
push
or
push
dec
rcl
or
or
mov
fstl
sub
cmpsb
xchg
sub
dec
or
cmp
stos
jnp
inc
pop
mov
out
insl
mov
int3
sbb
shrb
inc
inc
jbe
ret
nop
cld
cmp
add
or
cmp
push
lcall
loopne
adc
adcb
daa
mov
xchg
mov
out
arpl
stos
mov
shr
sarb
mov
jmp
mull
inc
mov
jb
iret
mov
inc
xchg
push
repnz
adc
pop
loopne
test
leave
enter
sub
xchg
pusha
push
fcmovb
mov
mov
inc
mov
dec
lea
jns
rolb
add
xchg
pop
push
aaa
shll
shl
jmp
pop
stc
lea
or
repz
ret
inc
jae
in
and
xor
adc
inc
or
mov
bound
aas
sbb
insl
adc
aam
shll
lea
fsub
cwtl
sub
and
andb
cmp
iret
lock
test
fidivl
aam
jle
sahf
int
sub
xchg
pushf
xor
sbb
xchg
stos
lcall
cmp
push
dec
inc
cwtl
sbb
dec
pop
shl
inc
push
int
sbb
cmp
cmp
dec
adc
pop
repnz
inc
mov
mov
pop
push
mov
or
adc
ret
movsl
xor
scas
jno
js
repz
sbb
fwait
test
dec
test
enter
xchg
dec
dec
sbb
cmpsl
jecxz
rolb
mov
movsb
push
adc
popa
jl
imul
lret
push
mov
cmpsb
jmp
jp
push
out
dec
cmp
cli
xlat
dec
enter
mov
jnp
mov
jnp
xchg
mov
mov
sbb
mov
adc
imul
ja
out
inc
mov
push
push
arpl
stc
insl
mov
xchg
test
insb
out
push
das
dec
pusha
jbe
int
sahf
xor
dec
sbb
push
sub
bound
mov
and
lea
ds
ret
sarl
aam
adc
rclb
cmp
mov
fcmovu
pop
sub
lods
inc
repnz
xchg
mov
inc
inc
pop
rorl
pop
in
and
push
jno
jg
add
adc
sbb
xor
ret
and
ret
cmp
out
add
rolb
pop
or
dec
cmp
fimull
mov
inc
lret
sub
mov
fidivrs
jp
stc
test
sbb
jns
add
or
mov
add
hlt
stc
imul
lret
xor
mov
cmpsl
ds
icebp
je
lea
repnz
and
xlat
shl
lods
out
sbbb
cmp
cltd
pop
jnp
scas
mov
xor
adc
lock
push
sbb
jbe
aam
xchg
push
mov
cmpsb
or
jne
pop
repz
call
leave
mov
add
repz
movsb
lret
test
mov
adc
fidivrs
xchg
pop
in
sbb
mov
pop
arpl
add
cltd
push
and
mov
in
mov
cmp
mov
sbb
add
pop
mov
sbb
inc
adc
xor
std
mov
mov
imul
and
out
gs
lock
push
add
pop
and
sbb
push
mov
test
cld
lcall
iret
inc
fyl2x
pop
pusha
andl
int3
mov
push
pop
fstpt
push
inc
popa
mov
jnp
stos
cmp
pop
sub
or
fcoms
lods
push
inc
jb
push
stos
pop
andb
sti
jns
pushf
and
insl
icebp
cmp
push
jae
notb
dec
sub
or
lock
pop
push
xor
sub
sbb
int
cmp
sub
sbb
stc
push
int
jns
mov
fcoms
loopne
sub
icebp
jge
test
xchg
test
aad
lret
shrb
or
bound
out
lcall
jmp
outsl
or
cmpsb
cs
cwtl
neg
shlb
jb
mov
mov
add
sbb
call
mov
fsts
jno
fstpt
mov
aas
push
adc
mov
idivb
cmpsl
imul
dec
xchg
pop
adc
lods
imul
mov
out
add
cltd
sbb
push
sahf
imul
jl
push
bound
or
data16
xor
or
sarl
and
int
sbb
add
repz
push
mov
ss
xorl
and
and
xor
mov
mov
xor
cmpsb
jae
lods
lock
and
sub
mov
inc
pop
popw
mov
cmp
inc
loop
scas
es
mov
and
movsl
data16
add
lret
xchg
dec
xchg
xchg
sbb
es
pcmpgtw
pop
sbb
lock
mov
push
fisubs
popl
or
mov
push
aam
pushf
inc
pop
inc
cmp
lcall
gs
cld
ss
aas
sbb
inc
dec
pop
pop
adc
pop
pop
push
lea
pop
xor
mov
in
xor
aas
push
shll
add
dec
stos
inc
push
mov
shr
xchg
cmp
popa
mov
fs
pop
adc
bswap
das
jg
cmpsb
sub
out
insl
jmp
and
mov
mov
pop
bound
shll
loop
mov
push
sbb
lret
adc
or
loop
fidivrl
and
push
cmp
mul
lret
iret
testl
dec
mov
aas
loope
icebp
in
dec
inc
adc
fsub
shl
insl
sbb
adc
fwait
sahf
lcall
add
inc
jne
lret
fsubrp
jnp,pt
cltd
in
dec
jmp
rcrb
mov
cli
std
lock
sub
pop
int
xor
push
fstpl
pop
repnz
pop
rcrb
mov
orb
das
fdivr
mov
or
pop
dec
insb
push
fistps
lock
mov
xchg
in
add
jge
fisttpll
sti
sbb
mov
pop
ljmp
lods
mov
outsl
add
fwait
push
mov
faddl
mov
movsl
inc
ds
aad
out
ficomps
xchg
pop
frstor
cmp
lahf
cmc
add
nop
and
stos
stos
and
shrl
xchg
xor
jb
xchg
jecxz
jne
les
cmp
jbe
cmp
mov
and
fildl
lret
hlt
jae
test
cmp
mov
fiadds
push
ret
xor
add
ss
sub
lcall
repnz
sub
and
mov
sub
mov
bound
add
mov
cltd
mov
cltd
and
push
cmpb
pop
cmpl
mov
imul
jle
jge
dec
adc
mov
fimull
int3
cmpsb
dec
push
into
and
nop
mov
movaps
loopne
cmc
stos
lock
fcmovb
out
cli
and
rcl
mov
sti
out
mov
mov
sub
push
mov
in
dec
hlt
sbb
sub
fstcw
ficompl
loopne
mov
das
push
jle
mov
mov
data16
jae
jns
inc
aad
dec
pop
out
fsts
push
mov
neg
outsb
int
sti
frstor
pusha
adc
test
or
pop
add
xchg
fmull
sbb
push
lds
adc
js
push
movsl
mov
jne
gs
adc
enter
sub
sbb
or
js
push
movsl
mov
jne
gs
adc
enter
sub
jns
insb
sub
mov
jne
gs
adc
clc
and
nop
cmc
and
js
js
pop
xor
push
out
xor
adc
lret
and
push
xchg
and
xor
inc
and
jae
arpl
mov
mov
xor
inc
loop
shlb
pop
xor
add
push
loopne
lock
mov
inc
bnd
sbb
push
inc
xor
addr16
or
ret
push
fidivs
push
jns
ret
jecxz
mov
or
outsl
sbb
sbb
faddl
add
shl
push
ret
iret
repz
in
fistpl
mov
inc
jg
insb
dec
pop
loopne
aad
pop
imul
popf
jns
shl
push
sub
xorl
int3
xor
aaa
jne
mov
xor
push
into
pusha
xor
in
adc
mov
aad
pop
inc
pop
dec
mov
pop
in
rcr
iret
sbb
push
shlb
push
movl
or
xlat
mov
jge
jmp
loopne
cvtpi2ps
int
hlt
shlb
fiaddl
test
xchg
push
or
lcall
xorb
inc
loop
shlb
loop
andb
adc
bound
push
clc
inc
ret
out
decb
mov
xchg
pop
ret
nop
loopne
add
cs
in
inc
loope
out
lret
adc
inc
pusha
loope
in
repnz
adc
add
mov
icebp
dec
mov
push
shlb
jo
andb
adc
rclb
inc
lock
mov
xor
inc
loop
shlb
jo
andb
adc
rclb
inc
lock
cmpsl
inc
pop
pop
rcr
andl
ss
and
xor
jae
xor
loop
pop
in
jne
shl
mov
cmpsb
jo
lahf
sbb
mov
or
pop
push
rcr
fisttps
pushf
mov
push
jo
fwait
test
aam
sub
inc
cmpsb
loopne
push
pop
and
leave
and
adc
or
inc
cmp
out
inc
push
stos
dec
push
cmc
adc
push
sbb
std
ret
loopne
mov
pop
cmp
addr16
xor
loope
add
dec
xor
fnstcw
es
aad
jne
add
or
loope
cmp
push
sub
lret
sub
jo
push
aas
push
cmp
loopne
sbb
scas
push
sub
stos
fdivrp
inc
mov
dec
loope
lret
mov
mov
push
call
pop
aam
jb
fldcw
pop
cmp
sub
sbb
push
shr
mov
dec
call
mov
stos
stc
lret
shrb
stc
sarb
out
cmpsb
repnz
imul
and
push
imul
pop
jae
je
adc
add
add
inc
int
test
stc
hlt
stc
adc
lahf
or
int
add
add
lea
cld
movups
adc
mov
popf
adc
push
shrl
repz
push
lods
inc
lahf
cmp
jp
push
stos
cmp
fwait
cmp
test
add
test
jmp
add
fmull
mov
aaa
jb
inc
xorl
inc
mov
ret
jmp
jnp
sub
popa
mov
in
leave
sahf
int3
or
jne
shll
sub
dec
cmpsb
cmp
aaa
mov
adc
inc
dec
jmp
mov
push
cmpsl
mov
mov
mov
fbstp
pop
inc
andb
mov
xchg
dec
xchg
fisubs
inc
sub
xchg
inc
dec
xchg
fmulp
mov
mov
mulb
ret
push
icebp
mov
outsl
push
sub
les
cmp
call
pop
push
mov
mov
mov
fs
adc
fsubs
in
ja
repz
inc
cmp
rorb
pop
cltd
repz
mov
push
scas
or
loopne
or
aaa
or
adc
out
sbb
test
mov
push
mov
xor
js
sbb
inc
divb
pop
popf
stos
push
push
inc
loop
adc
cmp
push
sti
mov
jnp
mov
stos
push
xchg
cmp
arpl
out
fildl
pushf
clc
lret
cmp
imul
jp
or
mov
fucomip
pop
dec
cwtl
repz
mov
cmp
ret
jl
add
jb
hlt
inc
xchg
inc
popa
cmpsb
js
cmp
mov
fs
arpl
call
xchg
sub
mov
ficompl
gs
ror
lods
jne
sub
cmpsb
cmp
sti
hlt
fwait
loope
outsl
push
out
push
popl
pop
cmp
cwtl
fwait
mov
dec
fcompl
sub
rorb
cwtl
sti
cmp
xor
mov
mov
inc
dec
mov
push
xchg
mov
ret
sub
loope
out
sbb
fwait
or
lret
lahf
pop
shlb
ret
scas
insl
jbe
lods
and
xor
inc
xchg
xchg
pop
jecxz
sti
mov
push
jne
sub
imul
sub
lret
xchg
sarb
adc
test
jge
and
push
scas
enter
clc
in
dec
fs
rolb
xchg
popl
push
stos
ljmp
clc
xchg
out
jl
sub
mov
loope
jg
cmpsl
fstp
lahf
lret
sbb
jecxz
out
or
mov
scas
xlat
jns
out
mov
add
pop
imul
xor
sbb
sbb
cltd
repnz
adc
push
in
pop
mov
bound
cmp
les
sub
push
repz
sbb
mov
sbb
fbld
hlt
cmp
mov
xchg
cld
sahf
mov
test
paddsw
adc
rorb
out
insb
push
cmpsl
jecxz
mov
ficoms
xlat
mov
call
sub
add
addl
arpl
fs
rsqrtps
je
test
inc
xor
mov
dec
ja
data16
adc
sbb
lret
fs
jno
out
push
ret
iret
mov
mov
int
out
mov
push
clc
pop
dec
jl
aas
sahf
jp
test
xor
int3
repnz
sub
int3
rcr
xlat
lcall
nop
mov
popf
enter
fists
sahf
mull
jp
scas
enter
xchg
nop
repnz
stos
inc
lds
and
lret
xchg
subb
clc
fadd
mov
rcr
shll
add
lcall
push
pop
or
cmpsb
cmp
dec
out
pop
insl
aam
sbb
test
mov
inc
inc
pop
daa
sbb
sub
cmp
cltd
mov
pop
add
xor
imul
lret
dec
pop
jg
test
fldcw
mov
push
out
ss
pushf
mov
sub
or
push
jno
bound
lret
dec
fstpt
xchg
cmp
loop
ficomps
testb
decl
jl
mov
and
add
fsts
out
add
jle
scas
ljmp
add
inc
and
push
rol
inc
mov
or
lret
notb
out
repz
ret
ret
jecxz
xchg
push
test
mov
jecxz
cmp
xchg
xlat
pop
fs
stos
lock
push
popa
mov
xor
lahf
mov
and
fwait
imul
cmc
in
test
xor
cmp
popa
jmp
dec
push
into
and
mov
rorl
dec
pusha
test
dec
and
sub
jl
out
outsb
adc
adc
xchg
mov
add
jg
call
into
xchg
pop
cwtl
jmp
out
push
xchg
ftst
out
out
xor
dec
imul
adc
or
cmp
and
sbb
rcrb
dec
es
mov
ror
xchg
xchg
mov
dec
mov
lret
movsl
xchg
cwtl
test
popl
mov
xchg
out
push
cmc
adc
adc
inc
ret
mov
push
xlat
mov
xchg
rclb
lret
iret
or
lea
insb
fwait
imul
lret
sub
les
push
addb
outsl
arpl
in
jge
xor
ljmp
or
aad
sahf
xchg
fcomps
clc
call
in
mov
jmp
jbe
je
adc
pop
jge
es
pand
xor
jae
push
push
adc
js
jne
cltd
hlt
and
add
jno
inc
dec
dec
arpl
push
testl
push
pop
push
cmc
adc
or
pop
or
rcrb
adc
sub
cld
mov
movb
xchg
pusha
jae
nop
and
aas
lret
push
test
sbb
xchg
add
and
pop
into
and
xchg
or
mov
ljmp
aam
dec
lret
aas
test
stos
and
into
leave
mov
ds
push
and
push
out
out
mov
xor
fcompl
add
clc
xchg
imul
ret
ja
xchg
int
sti
sub
es
enter
jno
jbe
sub
dec
cwtl
mov
pop
imul
out
test
nop
inc
sarb
outsb
push
and
jg
arpl
xchg
jnp
fcoms
lods
mov
roll
sti
aaa
in
lea
dec
mov
push
loope
sti
enter
mov
add
push
pusha
xor
dec
cmpsb
enter
in
push
ss
xchg
orl
cmpsb
cmp
push
mov
xchg
cmp
push
inc
lds
nop
js
pop
out
popf
add
int3
test
stos
scas
out
les
pop
xor
add
jne
inc
or
fsub
push
xor
add
xor
and
out
lods
inc
mov
out
sub
lret
sbb
dec
in
negb
arpl
sbb
outsb
aas
lods
ja
mov
add
pop
or
enter
add
inc
mov
fdivl
adc
adc
aad
cmp
jmp
add
ror
test
push
aad
adc
mov
xchg
cmpsb
inc
inc
sahf
shrl
xchg
cmc
inc
adc
adc
sbb
adc
jae
push
pop
cwtl
sti
pusha
push
xchg
ffreep
in
and
dec
xor
bound
lock
xchg
pop
call
cli
shll
orb
xor
in
push
pop
xor
test
pop
nop
aam
add
js
sarb
cmp
scas
in
fstl
xchg
mov
ds
xchg
xor
and
shlb
inc
push
mov
shl
cmc
int
push
loopne
rcll
outsl
mov
push
popa
ja
adc
es
add
test
imul
or
insb
pop
add
in
or
sub
jo
pop
call
ficompl
ret
sub
fldcw
mov
pop
stos
lcall
push
sarb
aas
imul
sbb
call
daa
arpl
inc
inc
rcr
and
pop
jle
xchg
inc
call
sbb
dec
xchg
pop
push
jne
fincstp
cmp
in
mov
clc
add
iret
add
scas
stos
or
mov
jle
dec
mov
cmp
jge
leave
and
mov
dec
xlat
dec
int
fistl
and
arpl
sbb
in
xchg
loopne
loop
xchg
dec
mov
out
xchg
shll
test
cmp
push
setns
shll
or
add
daa
shll
gs
lods
mov
fisubrs
lods
and
js
cmp
nop
mov
pop
and
pop
je
test
mov
daa
adc
jne
mov
dec
push
ljmp
mov
repz
push
sar
sub
scas
mov
jmp
xchg
pop
lahf
mov
icebp
sub
jmp
push
cmp
in
lods
in
xchg
fstpl
jge
add
dec
xchg
ds
mov
cmp
ret
sub
jl
or
pushf
int
pop
sub
jge
dec
or
insb
aaa
push
inc
push
dec
and
pop
jp
in
bound
fnsave
push
push
and
aam
fiaddl
push
xor
jno,pt
cmp
movsl
out
xchg
repnz
gs
test
sbb
adc
inc
pop
int3
andl
xchg
aad
push
lret
dec
xchg
repnz
add
or
cwtl
add
add
or
or
jl
add
push
lea
and
fsubrl
lods
add
test
xchg
sti
lahf
pop
inc
out
mov
test
inc
xor
pop
mov
xor
mov
les
and
push
aad
lahf
sbb
jmp
push
ret
dec
dec
lods
fs
sbb
jmp
xchg
rol
in
jno
das
add
fnstsw
movsb
cmp
dec
cs
test
fisubl
mov
repnz
push
sarb
aam
test
dec
jne
dec
and
mov
dec
in
dec
mov
sub
stc
or
ss
loop
push
adc
loope
inc
out
and
cwtl
gs
jge
xor
mov
ds
enter
mov
push
mov
cwtl
jp
mov
andl
shlb
and
ljmp
ds
in
call
stos
jo
and
stos
fwait
pushf
mov
jae
xchg
movsb
fwait
nop
iret
stos
in
mov
mov
sbb
sub
leave
sub
cs
mov
int
mov
ret
jge
popf
into
outsl
lods
call
arpl
shrl
push
pop
das
aaa
xor
gs
call
dec
add
mov
dec
cmp
mov
xor
test
andb
addr16
or
imul
and
inc
adc
push
dec
frstor
insb
inc
jbe
adc
add
inc
and
jno
scas
mov
inc
leave
add
sti
sub
outsb
popf
iret
shll
mov
and
ds
mov
push
clc
mov
xchg
jbe
popa
lret
jmp
ss
mov
cmp
push
hlt
pop
xchg
inc
push
stos
inc
pop
mov
enterw
adc
int3
jne
int
outsl
xor
cld
aam
ljmp
outsb
mov
xor
push
je
dec
and
fnstcw
jns
popa
xchg
aaa
jnp
mov
xchg
stc
popf
or
out
shlb
cmc
les
xchg
aam
push
ss
mov
lds
push
inc
mov
ss
int
jae
enter
fmuls
or
xorps
mov
dec
pop
jle
inc
iret
sbb
jnp
pusha
mov
pop
mov
fmulp
inc
mov
mov
imul
adc
pop
or
or
jg
lods
xchg
sti
pop
sub
add
dec
enter
mov
or
out
lods
sub
jge
inc
jp
shrb
inc
add
mov
aas
test
dec
in
jb
inc
pop
cltd
mov
ljmp
jno
mov
adc
mov
inc
jo
int3
jmp
aaa
pop
int3
mov
dec
inc
pop
pop
xor
test
push
test
mov
pop
xchg
add
lret
adc
cmp
inc
inc
xlat
out
mov
leave
lcall
outsl
out
xlat
and
jae
in
jae
dec
jl
es
jns
ja
popf
call
fbstp
xchg
loop
cmpl
add
sbb
dec
adc
and
xchg
mov
das
das
and
cmp
mov
fisttpll
hlt
dec
pop
push
std
ds
push
daa
mov
add
cmpsl
outsl
add
daa
dec
repz
mov
or
mov
mov
dec
ljmp
cmpsb
dec
lock
aam
xor
xchg
in
mov
mov
pop
loop
leave
xchg
mov
dec
test
add
test
lock
out
mov
wbinvd
ss
mov
leave
out
jnp
popa
test
in
xchg
or
mov
sub
xchg
pop
cmpsb
xor
pop
iret
adc
subb
into
jnp
sbb
enter
xchg
mov
pushf
push
adc
push
adc
ret
ror
push
xor
dec
and
repz
in
out
sub
jge
in
inc
inc
out
mov
jbe
ss
add
popa
mov
mov
cmp
mov
loopne
add
std
xchg
dec
lret
mov
cwtl
ret
push
jae
in
add
repnz
or
test
in
loope
cmp
add
push
xchg
decb
fstpl
fisttpl
push
sahf
mov
mov
jl
jb
jp
in
movl
and
xchg
arpl
ljmp
sub
or
and
arpl
and
sub
js
into
sar
adc
aam
jnp
jge
lock
mov
xor
fistpl
push
test
bound
add
mov
jle
push
sbb
xchg
sahf
inc
adc
test
cmpsl
lds
xchg
lea
aaa
sbbl
inc
mov
ret
addr16
fs
test
cld
xor
add
mov
sti
adc
mov
add
mov
test
scas
scas
fiaddl
xchg
nop
and
sahf
xor
stos
dec
outsb
push
add
push
popf
inc
aaa
cmp
pop
pop
clc
push
jle
push
cmp
sbb
outsl
shrb
push
addr16
cmp
mov
cmp
inc
cs
jo
cmp
inc
dec
push
pop
inc
and
mov
push
inc
js
jmp
jp
dec
iret
fwait
lock
dec
mov
outsb
cmp
push
testl
dec
les
push
sub
adc
pop
stos
in
stos
je
and
pop
jg
fcmovnb
jb
lret
mov
or
ja
mov
sbb
addr16
inc
sub
jl
cli
mov
mov
pop
adc
aam
hlt
inc
mov
rolb
movsb
xchg
adc
push
dec
inc
add
aaa
push
fsubs
stos
xchg
fiadds
mov
jmp
jle
pcmpeqb
xchg
fldcw
lahf
cmpsb
dec
and
add
mov
cmp
xchg
stc
cwtl
movsb
push
pop
push
and
cmp
ret
push
cmp
mov
movsl
jl
das
push
fcompl
pop
inc
mov
mov
add
insl
push
test
mov
push
stos
daa
sub
mov
loop
xor
je
or
leave
arpl
push
hlt
fimull
jl
jle
fsubs
mov
cmpsl
pop
adc
loopne
jmp
shll
and
xor
adcb
lahf
xchg
xchg
xor
or
cld
add
lahf
in
jl
lods
push
es
ss
cli
mov
sbb
inc
addr16
push
jns
test
insb
lods
push
call
fucomp
and
ds
jne
push
xchg
push
sub
and
mov
sub
jae
call
mov
pop
push
fxch
fisubl
adc
adc
aam
fldl
inc
xchg
pop
sbb
cmp
inc
mov
cli
imulb
imul
in
lret
sub
dec
testb
mov
adc
imul
xchg
scas
cltd
in
stc
mov
push
push
push
mov
jg
mov
jb
pop
jmp
jp
fnstsw
fwait
xor
aas
lods
sti
pop
mov
fwait
pushf
sbb
dec
sub
sbb
push
cmp
fldl
mov
decb
sbb
cmpb
sbb
mov
lret
ljmp
loopne
imul
sub
jmp
cmp
addr16
in
inc
jp
push
sub
in
int3
js
mov
xor
lret
lcall
add
xor
int3
popf
inc
out
push
pop
sbb
jns
call
xor
pop
les
stos
pusha
sarb
mov
or
cld
xchg
mov
roll
loopne
mov
pop
je
push
xchg
cwtl
add
mov
ret
xor
and
loop
xor
adc
cmp
test
enter
fsub
push
mov
cmc
sbb
sub
adc
add
inc
sub
mov
push
sahf
add
sarl
or
lods
mov
push
inc
mov
pop
outsb
sbb
fisttps
shll
push
xor
and
stc
jae
nop
push
lods
xchg
ret
mov
pop
dec
cmpb
mov
movsb
add
cmp
push
ja
mov
fisttpl
sbbl
cmp
dec
cmc
sub
xchg
cmp
pop
rorb
cmp
cltd
dec
push
xchg
es
xor
fidivs
cltd
adc
xor
inc
enter
pop
movsl
and
jno
xor
test
xchg
inc
push
lret
and
sbb
out
xor
test
out
sub
push
xor
xorl
xlat
sbb
mov
push
cli
mov
push
outsb
push
mov
ljmp
testl
mov
cli
shlb
or
or
pop
push
ret
scas
ja
fiadds
cli
js
cld
outsl
ret
fwait
dec
in
test
es
push
sub
jno
sbb
pop
ja
in
icebp
lret
add
adc
mov
inc
ljmp
hlt
cmpl
add
cmp
inc
orl
mov
mov
cmp
inc
in
out
inc
fiadds
in
mov
mov
sub
sbb
dec
jle
imul
insb
cmp
jne
lods
pop
xchg
shlb
pop
push
sbb
add
frstor
mov
and
js
xchg
fbstp
sbb
push
lcall
mov
dec
add
inc
xchg
les
pop
jg
dec
inc
sbb
and
movsb
xchg
sbb
or
sti
sub
mov
addr16
inc
jl
mov
and
nop
testb
xchg
dec
push
xchg
inc
clc
jbe
mov
aaa
sbb
dec
stc
mov
inc
or
out
sbb
pop
push
icebp
adc
int3
rcrb
push
int
cwtl
es
inc
xchg
adc
adc
das
iret
mov
mov
or
add
mov
in
push
sub
jo
out
out
dec
mov
pop
outsb
aas
es
adc
popf
push
add
push
or
cmp
cmp
stc
jl
loop
into
jnp
inc
push
mull
jno
clc
subl
in
cltd
adc
lret
pop
sbb
dec
aas
dec
lods
xlat
pop
push
lret
pop
in
xchg
mov
movsb
xchg
jle
push
xor
mov
push
mov
shr
idivl
mov
dec
mov
addr16
cmc
test
mov
aad
fmull
sbb
outsb
dec
sub
lret
ret
cmp
sub
xchg
shrl
add
loopne
out
inc
daa
jb
popa
mov
adcl
adc
xorb
inc
loop
shlb
jo
andb
adc
rclb
inc
lock
mov
xor
inc
loop
shlb
jo
andb
adc
rclb
inc
lock
mov
xor
inc
loop
shlb
xor
add
push
jmp
mov
jo
inc
loop
shl
ret
jg
cmp
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
mov
push
xchg
and
adc
push
add
add
push
add
pop
add
add
add
add
add
add
stos
add
mov
push
add
add
lock
add
push
add
add
verw
add
add
add
jbe
addl
add
add
add
add
add
add
add
add
add
add
add
and
xchg
add
add
testl
inc
add
add
add
add
adc
in
ret
add
jp
push
add
ltr
add
add
add
add
add
add
sbb
addr16
add
add
add
pop
add
add
add
add
add
in
push
add
add
add
add
add
push
add
iret
add
add
out
add
add
add
add
add
add
adc
lock
add
push
add
add
into
add
add
add
add
add
push
push
add
add
stos
add
add
filds
fwait
add
lcall
add
add
add
add
add
bound
push
add
add
add
adc
and
add
add
add
and
mov
test
jae
jecxz
push
add
add
fwait
add
add
add
addb
add
add
add
adc
xchg
add
add
add
push
add
add
adc
fs
add
add
add
xchg
add
push
add
cmp
lret
add
rolb
add
add
add
push
add
push
push
add
add
add
add
add
add
add
add
lds
stos
add
add
bound
add
add
add
add
add
add
add
add
cmpsl
add
roll
les
jecxz
push
add
add
add
add
add
add
add
add
add
add
add
js
add
jmp
rolb
add
push
push
add
and
push
add
add
add
add
aam
enter
mov
add
roll
cmp
inc
add
add
js
cmp
jp
push
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
mov
xor
add
add
add
mov
push
add
add
add
add
xchg
add
add
add
add
add
ds
add
add
add
add
add
add
fwait
add
add
add
add
add
push
add
or
lcall
add
add
add
add
add
add
add
push
add
add
sbb
push
add
add
add
push
add
add
mov
push
add
sbb
add
jp
stos
add
js
jno
xor
push
mov
add
add
add
ss
add
add
pop
add
mov
add
add
add
add
pop
push
xor
movsb
or
jge
loopne
pop
add
jl
lock
mov
cltd
mov
dec
push
add
int
xor
test
pushf
repnz
sbb
insb
sbb
pop
pop
jbe
sub
mov
ja
test
pop
push
cs
jp
repnz
inc
ss
rcll
pop
movsl
mov
xor
sub
sub
icebp
ret
movsb
cmp
shlb
repnz
outsl
inc
or
push
push
push
in
cmp
mov
adc
ret
subb
leave
stc
repz
xor
adc
push
xor
scas
cmc
rcr
and
shrb
mov
test
mov
and
mov
cmp
jo
inc
lahf
enter
push
cmp
mov
stc
xor
add
mov
mov
pop
cvtpi2ps
sarl
popf
ds
mov
lcall
push
lods
dec
add
sub
lcall
add
dec
sahf
mov
out
mov
xor
add
xchg
xor
or
in
and
push
mov
pop
daa
xor
jnp
and
into
and
test
pop
jb
imul
fildl
xchg
push
push
mov
aaa
sti
shlb
push
dec
mov
cmpsl
lret
add
stos
cs
xchg
jge
cmc
xor
test
aaa
push
fstpl
rorb
jl
adc
nop
pop
inc
icebp
push
mov
roll
and
jmp
mov
xor
xchg
test
and
cmp
insl
mov
fmull
mov
xor
int
outsb
inc
cli
enter
ficoml
xlat
cld
cli
pop
push
shll
in
mov
aaa
inc
cmc
pop
outsl
sti
sbb
aas
pop
call
fldl
add
add
sub
in
dec
ljmp
cltd
cmc
xchg
dec
adc
or
push
adc
das
jle
mov
mov
mov
sub
cmp
mov
adc
fimuls
lds
push
pop
push
rorl
stos
loopne
xchg
aas
fwait
sub
adc
cmovg
cwtl
das
std
sbb
mul
add
outsb
xchg
jg
inc
rolb
fs
nop
sub
addr16
inc
inc
pop
adc
call
adc
sbb
xor
insl
inc
dec
sbb
xchg
cltd
xor
leave
icebp
sub
fisubs
in
dec
test
push
cmp
add
fnstenv
sub
mov
pushf
sahf
add
xor
push
rolb
xchg
test
stos
mov
es
das
mov
xchg
and
js
aas
test
cmpl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
