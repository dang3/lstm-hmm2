fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
in
gs
push
jl
insb
push
add
sub
xchg
in
aam
pushf
movsb
mov
pop
gs
push
jl
insb
xor
cmp
push
cmc
fsub
int3
mov
lock
mov
pop
gs
push
jl
insb
xor
cmp
sub
fsub
out
mov
mov
das
gs
mov
mov
cmpsl
je
out
fidivl
xor
psubsb
and
add
xor
sub
subb
mov
pop
inc
popf
mov
fs
pop
push
and
xor
mov
mov
mov
push
cmp
adc
sbb
jne
test
or
in
and
aam
sub
jb
mov
lods
mov
lcall
xchg
sub
or
and
call
adc
rcr
shrb
ret
imul
add
stc
rcrl
sub
push
jl
insb
xor
cmp
sub
fsub
int3
aad
pushf
movsl
mov
pop
and
jbe
inc
gs
jp
js
movsl
push
int
cltd
mov
jmp
sub
sub
sbb
inc
adc
xchg
mov
repnz
ret
add
dec
add
push
or
or
cmp
sub
fsub
int3
aad
pushf
movsl
mov
pop
gs
push
jl
insb
xor
cmp
sub
fsub
int3
aad
pushf
movsl
mov
pop
pusha
and
xchg
pop
scas
inc
push
icebp
outsb
loop
mov
mov
and
pop
and
dec
movsb
in
pop
cwtl
push
cltd
pusha
jecxz
inc
out
je
jne
mov
push
push
movl
push
dec
ss
cltd
mov
stos
sbb
leave
nop
sbb
mov
mov
test
pop
push
cmp
jne
cmp
sub
jl
into
insl
imul
mov
outsl
stc
add
mov
and
xor
shl
mov
xchg
mov
push
lret
jecxz
mov
scas
cltd
jno
or
adc
rcl
out
mov
adc
roll
data16
in
push
pop
fcmovu
jo
cmp
hlt
sti
jg
iret
lea
in
cmp
pop
fisubrl
xchg
aaa
mov
and
mov
loope
mov
stc
mov
or
test
scas
jo
adc
data16
call
jecxz
ret
add
repnz
loop
sub
mov
test
repnz
es
cmp
add
in
mov
xor
xchg
sbb
pusha
jns
push
cmp
push
xlat
push
adc
jb
sub
repnz
mov
sub
leave
orb
mov
cwtl
scas
sbb
in
std
jbe
divb
jp
and
jbe
cmp
insb
and
xchg
jl
xchg
sbb
rorb
rcrl
insb
pop
ds
lcall
ret
lret
mov
and
rcrl
xchg
stos
inc
jmp
int
ja
sbb
lds
leave
enter
js
ss
add
jnp
dec
ret
out
adc
jg
pop
mov
popa
jle
push
jbe
arpl
mov
out
aam
push
sbb
push
push
iret
adc
ja
lcall
stos
adc
call
frstors
shrl
lret
xchg
fwait
mov
push
cmpsl
ret
pushl
push
dec
add
das
aas
fisubrl
fidivrs
pusha
test
pop
fisubl
xchg
scas
or
xchg
add
outsb
inc
push
data16
adc
loope
cld
adc
sbb
sub
jbe
ljmp
adc
icebp
mov
ret
xor
pusha
jbe
push
sti
push
cmp
jnp
repnz
pop
mov
lods
jge
mov
js
jns
ficomps
sbb
dec
push
dec
aas
or
cmp
push
and
xor
std
test
stc
mov
cmp
je
mov
add
cmp
and
inc
xor
jno
das
and
jns
clc
jmp
lcall
fwait
imul
lret
add
addr16
ret
dec
add
loope
repnz
inc
sbb
mov
cli
mov
push
mov
fstpt
into
setge
sbb
fdivs
sarb
dec
in
inc
jmp
hlt
inc
or
stc
xlat
loope
insb
bnd
out
rclb
jmp
mov
int3
cwtl
jl
jo
cmp
mov
mul
or
xor
jnp
dec
ljmp
mov
inc
lahf
in
pop
out
imul
je
andl
or
pushf
stos
outsb
in
jl
negb
outsb
aam
mov
dec
ud0
mov
mov
dec
inc
fnstcw
inc
or
cmp
or
push
mull
dec
jnp
or
dec
cmpsl
movsb
dec
push
es
into
mov
inc
and
mov
out
dec
and
stos
mov
push
sahf
mov
bound
adc
mov
xchg
loopne
adc
mov
xchg
adc
push
stc
jp
enter
lods
jl
cld
es
xchg
fisubl
sbb
add
pop
or
push
pop
jmp
mov
dec
mov
lds
xor
adc
mov
add
stc
repnz
scas
addr16
adc
rorl
adc
ret
xchg
sbb
lret
sub
push
int3
jg
xor
pop
pop
pop
les
inc
push
das
mov
cmpsb
popa
xchg
inc
adc
mov
aad
xor
pop
jno
dec
in
stos
pop
test
ss
xchg
sub
mov
pop
std
jg
scas
ficoms
push
cmp
mov
es
insl
lds
xchg
xlat
jge
pop
cmp
daa
mull
inc
dec
ret
out
enter
cli
pop
push
pop
outsb
push
jb
sbb
sub
xchg
sbb
sbb
adc
push
add
pop
sub
jae
adc
add
sub
sbbl
adc
das
push
push
repnz
push
shlb
in
pop
js
adc
jg
pop
lods
xchg
bound
inc
call
lfs
inc
pop
lret
jmp
jns
mov
int3
xchg
js
push
add
add
mov
adc
test
lea
xlat
cltd
lahf
in
cmp
xchg
inc
or
test
gs
jle
jne
in
aas
pushl
testb
ss
ljmp
outsl
jecxz
ja
push
movsl
jb
adc
nop
inc
fs
out
lea
hlt
add
das
xor
pop
cmp
outsl
divb
das
xor
test
adc
out
mov
adc
jnp
aam
push
das
dec
mov
mov
push
pop
dec
jno
adc
jecxz
repz
andb
fidivl
xchg
xor
mov
jmp
cs
sub
inc
and
insb
or
in
out
cmp
or
repz
lahf
pop
mov
mov
push
fstps
fwait
andl
xchg
sbb
inc
scas
jp
dec
mov
ds
mov
mov
adc
dec
jnp
jae
fbstp
cltd
mov
scas
jns
sub
js
test
or
add
imul
jecxz
push
mov
ret
cltd
mov
xchg
jno
lods
decb
test
jl
aam
sub
xor
icebp
mov
rcrb
es
xchg
xchg
call
adc
pushf
rcrb
test
pop
xor
mov
xor
xchg
inc
sbb
loopne
jae
decb
add
shlb
fsincos
sub
push
dec
std
enter
mov
xchg
sub
push
orb
add
shrb
cmc
fwait
and
daa
or
xor
adc
cmpl
add
inc
push
ss
inc
cmp
jecxz
inc
mov
cltd
inc
jmp
lret
adc
mov
mov
sub
xor
inc
lret
or
stos
xchg
lock
xchg
subl
orl
adc
sub
stos
mov
in
je
pop
cmpsb
cmpsl
jns
mov
sbb
popa
xchg
pop
xchg
xchg
ficomps
push
stc
mov
jge
lahf
xor
push
or
cmp
ss
mov
wrmsr
insl
movl
insl
jmp
mov
jno,pn
push
jbe
sbb
test
cmp
out
repnz
sbb
xor
daa
rcll
pop
fmul
loopne
sbb
shrl
cwtl
add
xchg
out
imul
cmp
addl
lahf
nop
dec
outsb
and
push
jle
ljmp
shlb
aam
xchg
cli
push
rolb
dec
jg
sahf
mov
add
ss
aad
pusha
push
out
mov
popl
sub
or
pop
mov
pop
inc
push
xchg
into
cmpb
jge
subl
adc
or
fsubl
or
lahf
jb
cmpl
shl
in
rorb
xchg
daa
xor
cwtl
mulb
loop
push
sbb
and
xchg
mov
lea
or
scas
icebp
jno
test
cvtdq2ps
faddl
test
divb
aas
inc
cltd
add
sub
or
pop
jg
test
push
imul
mov
mov
icebp
sub
mov
loopne
jle
test
sub
iret
pusha
dec
sbb
fdivl
push
jne
in
add
out
and
mov
gs
sbb
subb
push
xlat
pushf
daa
stos
sbb
dec
loope
pop
adcb
fisttps
push
or
into
call
adc
cmpb
shrb
repnz
jns
pop
mov
dec
and
push
mov
dec
lcall
pushf
shrb
gs
fstpt
rcll
mov
add
sbb
mov
push
sti
push
or
sti
mov
testb
daa
jmp
xor
jmp
sbb
jne
sbb
mov
push
mov
adc
pop
xor
add
je
fcomi
fistl
sbb
jl
push
hlt
sub
movsl
shrb
arpl
add
cmp
das
test
mov
jno
and
mov
xchg
repz
xor
cld
push
inc
lds
jge
push
ljmp
or
mov
clc
jl
shll
movsb
fsubrs
js
mov
jae
add
fnsave
in
pop
mov
neg
clc
es
fstps
aam
mov
movsl
das
loope
adc
mov
pop
add
xor
cs
dec
ljmp
add
lea
dec
cmpsb
inc
test
adc
subl
mov
outsl
xlat
mov
scas
in
xor
mov
add
mov
icebp
xlat
jp
jge
push
aam
push
sbbl
push
mov
mov
testl
adc
aam
jae
shrl
push
mov
popa
or
insl
call
hlt
xor
xchg
pop
xchg
dec
xchg
lahf
push
stos
or
arpl
mov
daa
xor
xor
push
fdivs
aaa
sub
rclb
std
jno
push
dec
jle
cmpsb
inc
push
ficompl
nop
lds
mov
push
rorl
test
or
cmp
fsubp
std
int
add
inc
adc
sub
adc
jl
lret
dec
cmp
xchg
mov
repz
add
mov
mov
sbb
inc
ret
pop
lods
lahf
cmc
sub
pop
mov
icebp
lods
xor
inc
aam
fisttpll
int3
pop
out
std
sbb
scas
in
sub
js
pop
ss
cwtl
inc
push
out
lret
mov
jle
das
shl
pop
mov
xchg
pop
lcall
adc
pusha
dec
cmp
add
fists
mov
test
inc
lcall
test
adc
mov
iret
stos
xor
ror
jns
push
xor
sbb
inc
sahf
mul
cmpsl
cmp
mov
jbe
stc
adc
jmp
lods
gs
push
fisubrl
dec
dec
adc
rcrb
fimull
or
and
xchg
sbb
cmp
cmp
out
sbbl
jbe
nop
dec
iret
aaa
sti
movsl
push
bound
add
pop
xor
mov
or
cmp
std
cmpsb
push
pop
jae
jp
test
mov
leave
mov
xchg
pop
mov
jnp
push
lret
lods
xor
mov
push
jp
mov
mov
jb
mov
push
pop
mov
lds
insb
jnp
pop
xlat
nop
int
cli
hlt
push
out
push
ror
sbb
jg
xor
inc
jns
leave
xlat
xor
roll
mov
scas
push
adc
jb
int
clc
shll
hlt
int
cmp
clc
and
mov
mov
push
popf
hlt
xchg
loope
mov
mov
and
mov
push
in
loop
mov
aaa
lahf
clc
sbb
cltd
arpl
sarb
jo
mov
dec
les
and
mov
adc
lock
jle
outsb
mov
loop
sbb
lret
cmp
vpcmpeqd
push
pop
add
mov
fcomi
and
push
popa
stos
xor
ja
mov
sbb
jg
push
icebp
adc
ficoms
adc
outsl
mov
lahf
mov
pop
out
mov
inc
mov
idivl
xor
lret
cmpb
scas
dec
push
movsl
pop
mov
fwait
or
jle
cwtl
repz
push
es
pop
into
adc
pop
in
leave
jg
in
or
mov
test
iret
mov
mov
cmp
inc
dec
dec
mov
or
or
add
push
and
ljmp
stos
push
jmp
seto
push
mov
xchg
int3
cltd
pushf
jmp
mov
push
and
cs
mov
mov
sarl
push
andl
data16
xchg
ret
add
push
pop
dec
repnz
cmpsb
cmpsb
push
push
repnz
mov
dec
adc
icebp
mov
cs
push
push
jo
in
lods
xchg
cmp
dec
jns
pop
mov
jae
in
fistpll
jns
pop
mov
jno
int
bound
pop
sub
jmp
sti
ja
scas
mov
fiadds
jnp
xchg
mov
xor
loop
insb
popf
inc
repnz
jne
and
test
and
inc
std
bound
xor
loope
xor
bound
adc
addr16
push
dec
outsb
adcb
fiaddl
mov
add
pop
bound
idivl
mov
loop
sbb
inc
call
leave
iret
ud2
pushf
in
pop
pop
das
inc
push
add
mov
add
push
scas
xchg
mov
aaa
mov
push
shll
ljmp
sbb
int3
lea
iret
addr16
pop
sub
add
js
dec
hlt
imul
jbe
insb
cs
ret
add
mov
int3
std
push
mov
dec
std
test
nop
daa
and
sbb
mov
mov
icebp
push
mov
icebp
add
or
mov
and
jmp
add
jl
push
stc
sarl
pop
add
xchg
gs
cmp
scas
dec
rcll
sbb
jp
sbb
movsb
cmp
arpl
jge
movsl
xor
in
pop
int3
ljmp
dec
dec
mov
ss
pop
into
scas
inc
cmpsl
daa
fcoms
lods
sub
and
popf
sub
in
lret
lret
sbb
adc
xchg
pop
xchg
movsl
ficomps
shlb
cmpsb
mov
push
in
cli
add
fs
fwait
movsl
pop
daa
gs
dec
and
fsts
repz
adc
jle
add
icebp
cmp
call
dec
adc
jmp
scas
test
push
cmp
iret
push
cltd
scas
jnp
js
jp
testl
inc
mov
xchg
clc
test
mov
pop
lcall
inc
jo
andl
idiv
cltd
loopne
fbstp
fsts
xor
movsb
pop
pop
aaa
push
cmp
push
and
insl
in
or
adc
data16
jns
xor
push
daa
mov
push
movsl
test
adcb
jbe
loope
pop
push
test
push
leave
hlt
inc
push
stos
and
adc
cwtl
out
pushf
mov
cmp
das
roll
cmp
imul
jle
out
cli
fdivl
dec
out
lahf
insl
repnz
fmul
push
jmp
mov
rol
sti
andl
js
pushf
and
fnstenv
push
popf
sbb
fs
xchg
test
or
push
leave
sub
dec
push
xor
push
push
add
jnp
dec
xchg
cmp
jnp
jae
mov
xchg
test
push
sbb
xchg
adc
and
mov
xchg
mov
add
adc
mov
pop
jne
into
push
cmp
sti
pop
add
rolb
jae
mov
sub
cmp
out
mov
xor
dec
or
aad
inc
pop
nop
push
shrl
pop
mov
subb
push
ds
mov
addr16
or
mov
inc
push
insb
mov
fdivr
push
jp
fbstp
out
shlb
dec
mov
sub
pop
mov
mov
mov
sahf
xchg
push
loop
in
repnz
in
int
or
push
xbegin
out
popa
mov
aaa
add
inc
fwait
out
sbb
inc
dec
loope
and
sub
fisubs
mov
sbb
aas
std
test
cmp
xor
push
mov
jle
pop
inc
movsb
in
push
ljmp
fcom
dec
or
icebp
or
into
xchg
fildl
mov
arpl
shrl
push
pop
jmp
aam
mov
jmp
sub
or
loopne
nop
pusha
addb
cmc
xchg
adc
push
mov
xchg
xchg
jg
popa
jbe
lret
xor
dec
cmp
dec
push
and
pop
outsl
fdivrs
pop
call
sub
jae
lret
sub
stos
or
jmp
iret
imul
mov
push
jle
inc
inc
adc
adc
sub
std
cld
andb
push
arpl
lea
mov
mov
hlt
xchg
in
insl
cltd
sbb
jl
xor
sahf
mov
ret
mov
mov
imul
xchg
repnz
jmp
mov
out
sarb
jae
inc
addr16
punpcklwd
adc
mov
ljmp
or
stos
mov
mov
sbb
mov
adc
mov
jmp
insb
hlt
mov
rcll
gs
je
or
leave
push
shr
cwtl
lret
roll
pop
jl
mov
jle
cmp
rorl
mov
popf
add
cmp
add
jecxz
cli
dec
cmp
dec
add
adc
out
rcll
push
inc
fcmovnb
adc
jne
sarl
jmp
loop
adc
xchg
xchg
stos
ljmp
inc
mov
mov
leave
bound
xchg
or
jno
sti
stc
test
xor
or
cmc
test
call
mov
inc
xor
mov
loopne
jle
push
push
dec
cs
shlb
jns
loop
movsb
push
hlt
in
lock
stc
push
mov
xor
shl
in
add
adc
gs
mov
sbb
sbb
fildll
orb
mov
incb
mov
mov
outsb
mov
pop
jnp
jnp
flds
jp
cs
cmpsl
int
cmp
ss
or
dec
push
or
mov
lods
gs
jns
loopne
fstpt
push
mov
sub
shll
dec
push
js
bound
gs
mov
mov
mov
test
xchg
adc
pop
mov
std
jge
and
stos
or
mov
js
rorb
mov
push
call
jo
scas
inc
push
sahf
and
xchg
mov
mov
add
je
dec
push
jge
xchg
xchg
add
lods
repz
jg
mov
jmp
push
cmpb
ret
shrb
mov
rolb
or
repnz
jb
sub
or
in
lods
das
int3
stc
sub
pop
xchg
in
mov
mov
ror
imul
push
mov
xor
add
fists
inc
sub
loop
in
and
sub
mov
mov
shll
or
and
scas
mov
adc
dec
jecxz
cmp
loope
mov
xchg
shrl
mov
lcall
pop
or
sbbl
or
sub
bound
jnp
out
sbb
xchg
lea
pop
or
cli
test
xor
jae
jp
jne
imul
pop
stc
adc
adc
jb
movsl
or
mov
cmpsb
test
add
cmp
xchg
xchg
inc
test
lock
in
cmp
out
aad
iret
loop
jo
sarl
push
call
shll
mov
or
icebp
cmp
mov
aam
sbb
imul
leave
lods
stos
repnz
jb
psrlq
fs
sbb
je
movhpd
js
and
cmp
cmpsl
xor
pop
rclb
fcoms
int
jl
lds
mov
clc
lds
shll
lret
rolb
mov
mov
adc
pop
mov
add
sub
repnz
cs
gs
jbe
stc
sub
lock
mov
mov
xchg
js
loope
and
xchg
cmp
jb
pop
ss
test
or
clts
adc
cld
es
inc
inc
loope
push
inc
outsb
jne
push
test
out
add
popf
aad
xor
inc
fistl
mov
cld
iret
mov
inc
rorb
insb
jbe
dec
sarl
xor
cmp
sub
fsub
int3
aad
pushf
movsl
mov
pop
gs
push
jl
insb
xor
cmp
sub
fsub
int3
aad
pushf
movsl
mov
pop
gs
push
jl
insb
xor
cmp
sub
fsub
int3
aad
pushf
movsl
mov
pop
fs
push
jl
insb
xor
cmp
sub
fsub
data16
lds
push
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
sub
mov
jecxz
test
pop
push
loopne
xor
bound
inc
add
jo
hlt
rolb
loop
xchg
rorb
mov
adc
bound
and
jge
add
pusha
and
inc
jb
and
loopne
scas
mov
mov
pop
sub
xor
inc
cmp
ror
lods
mov
leave
mov
movsl
rorb
scas
lret
jp
push
xor
outsl
mov
and
ja
jl
pop
jl
xor
inc
jle
repnz
loopne
ja
adc
adc
jo
lahf
scas
outsb
rol
mov
roll
inc
filds
and
xor
xor
rclb
dec
pop
das
xchg
shr
dec
loopne
adc
ficomps
jno
pusha
jno
lea
nop
mov
dec
jnp
imul
mov
bound
and
adc
fsubrs
aad
add
repnz
and
sub
adc
std
jo
arpl
mov
mov
xor
inc
and
aam
test
adc
sbb
dec
cli
inc
xor
stc
xor
les
scas
in
test
loopne
adc
pop
push
push
inc
or
jge
jbe
jae
inc
fstl
rol
std
movsl
mov
fdivl
adc
pop
pop
add
sbb
dec
cld
test
test
mov
rolb
push
add
jb
bound
inc
add
pusha
and
repnz
xor
loopne
adc
inc
xor
bound
inc
add
pusha
and
push
pusha
into
pop
or
mov
jns
repz
or
int
movsb
adc
mov
out
xor
gs
sbb
inc
sbb
cwtl
sub
add
es
repz
jne
xor
xchg
mov
shlb
insb
mov
mov
mov
shll
imul
mov
or
daa
hlt
outsl
xchg
sbb
test
insl
adc
icebp
addb
and
loope
enter
mov
push
mov
or
or
mov
xchg
xor
cmc
arpl
loopne
add
aas
xchg
scas
xor
fisubl
push
xchg
fildll
loop
imul
pop
xor
test
sub
jo
into
in
sub
in
inc
jns
inc
cmp
adc
lods
ficompl
ss
ds
cmp
xchg
sbb
stos
adc
pop
sub
add
inc
rcr
jo
std
push
das
mov
js
fisttps
lret
out
cmp
insb
mov
adcb
mov
scas
and
shll
cmp
test
mov
addr16
push
loopne
lahf
fcoml
dec
decl
add
mov
ret
movsl
andl
sarb
xor
xor
aas
std
pop
iret
mov
xchg
addb
xchg
add
jo
mov
mov
daa
sbb
and
gs
cmp
mov
insb
add
repz
and
mov
dec
lods
xchg
xchg
jae
lahf
cs
imul
ss
and
sub
scas
adc
js
sbb
mov
out
xchg
repz
and
push
sbb
add
xchg
inc
jmp
inc
push
mov
sahf
stc
cmp
xor
pop
pop
dec
mulb
filds
mov
inc
jle
repz
pop
fwait
insl
pop
div
ret
or
enter
in
scas
xchg
ljmp
dec
loope
xor
jg
sahf
dec
xor
fisttpl
inc
xorl
test
pop
lock
sbb
xor
loop
mov
add
test
movsl
push
xchg
add
mov
int
cmpb
rclb
xchg
push
jb
pusha
dec
popf
popf
push
cwtl
mov
inc
mov
es
insb
stc
sbb
cmp
cmp
bound
or
mov
test
xor
adc
jp
andl
inc
cmp
push
xchg
jb
jp
stc
lock
pop
and
out
push
sbb
adc
fistpl
add
jl
arpl
outsb
shll
mov
subb
jbe
dec
pushf
enter
out
jb
jo
lcall
add
insb
and
adcl
xor
push
jo
pop
lds
pop
cmp
push
loope
add
movsl
dec
jo
insl
xor
mov
jae
adc
cmp
sar
push
sbb
mov
jmp
mov
dec
movsb
pusha
jg
imul
jb
cmp
loop
test
adc
xchg
mov
jp
sub
icebp
ss
cmp
jle
fs
mov
push
sub
mov
mov
xchg
mov
xorl
mov
mov
fiaddl
les
mov
daa
int
cmp
cli
xchg
imul
imul
int3
mov
sub
out
mov
and
imul
out
gs
dec
pop
push
add
shlb
aam
add
iret
aam
sub
es
test
test
push
mov
push
lcall
mov
push
insb
call
inc
stos
jne
push
andl
jg
push
int
loopne
dec
pop
and
inc
sub
jg,pt
negb
xor
ret
pop
sbb
hlt
xor
pushf
aas
aas
jne
mov
mov
xor
xor
test
jg
lret
inc
mov
xor
or
xor
not
imul
int3
push
mov
xchg
pop
sbb
clc
arpl
inc
into
movb
inc
and
adc
push
dec
cld
ja
cltd
ja
cld
imul
xchg
xchg
test
lret
sbbb
add
and
add
dec
or
jmp
mov
jne
mov
mov
sbb
dec
add
mov
imul
loopne
scas
xlat
add
adc
fnstcw
fbstp
mov
mov
xchg
sarb
cmp
mov
cmpsb
adc
inc
fs
pusha
inc
fucom
imul
mov
scas
pop
int3
sbb
jbe
push
repnz
xor
inc
je
cld
push
mov
adc
mov
and
adc
jecxz
adc
lret
insl
loope
or
int3
out
arpl
pop
xor
cmp
insl
pushf
inc
mov
movsl
cltd
xor
push
fs
outsl
fwait
xchg
insb
dec
shrl
ret
cmpsb
add
in
cltd
pushf
sar
addr16
iret
and
jo
pop
push
cmpb
and
xor
test
dec
pop
xor
repnz
pop
rcrl
push
cmpb
and
push
ja
shll
xlat
mov
gs
loopne
cmp
cmc
inc
or
lahf
add
ja
ret
sub
jnp
icebp
in
add
adcb
mov
cmc
mov
sarl
pop
addr16
xchg
lahf
sub
cmp
lds
insb
int3
in
push
gs
jae
rol
rcl
pop
and
inc
dec
popf
out
clc
subl
sub
scas
lret
xchg
stos
mov
pop
fcoms
mov
jne
pop
pop
xchg
inc
xchg
cli
lret
cmpsl
arpl
push
mov
testb
mov
cmp
lcall
test
or
aas
jg
shr
rcr
idivb
in
xchg
or
insb
lock
cltd
or
aam
enter
movsb
aas
xor
aad
neg
mov
stos
dec
xchg
sub
fadds
test
movsb
mov
mov
call
add
adc
lds
cld
clc
xchg
dec
pop
sbb
mov
call
inc
dec
popf
sbb
sbb
mov
ret
test
in
pop
mov
frstor
pop
tzcnt
rcrb
and
popf
in
lahf
outsb
fcoms
lret
inc
mov
hlt
dec
jg
in
int
pop
enter
mov
mov
or
cmc
sub
jle
push
jb
ljmp
lret
mov
shll
clc
js
cmp
mov
rcrl
add
movsb
xchg
int3
lods
mov
and
inc
test
lahf
idivl
scas
push
jb
pop
int3
rolb
fstpt
pop
inc
daa
jecxz
cwtl
inc
lock
int
sbb
mov
aam
pushf
and
or
out
ljmp
push
mov
xor
or
data16
fcompl
lea
jno
jg
mov
out
out
pop
dec
scas
mov
mov
push
sub
dec
outsb
fs
jns
or
xchg
cmp
xchg
fidivrl
pop
push
cmp
sub
xor
cwtl
dec
fimuls
mov
or
jbe
push
bound
aas
popf
cmpsb
xchg
mov
addr16
inc
gs
stos
sub
adc
jnp
nop
push
cmp
pushf
adc
in
mov
insl
scas
xchg
xchg
xor
xor
dec
push
or
xchg
test
push
pop
repz
int
stos
and
xchg
lods
aaa
push
js
jo
jne
les
mov
call
inc
fcmovnu
adc
or
cs
xor
xchg
jle
xor
je
mov
mov
dec
push
hlt
iret
incb
mov
inc
out
data16
mov
fidivs
mov
mov
in
fistpl
ret
push
icebp
popf
mov
add
pop
push
push
and
cld
pushl
sti
xchg
jno
xchg
sub
sub
fwait
lcall
call
hlt
mov
cmp
xor
adc
mov
in
adc
pop
mov
popa
subl
sahf
ja
push
in
cmp
xor
insl
push
mov
cmp
adc
stc
arpl
mov
mull
in
mov
rcrb
mov
lods
rclb
std
das
sub
jb
xchg
adc
cs
jp
mov
jle
scas
xchg
insl
lds
cs
fldl
mov
xchg
lahf
push
std
mov
ss
orl
and
in
jns
mov
fsubrl
and
ja
mov
push
js
ss
movsl
std
in
jecxz
wbinvd
and
xchg
push
mov
mov
inc
pop
sbb
mov
inc
and
xchg
jge
push
shlb
sbb
test
xor
out
xchg
sbb
adc
cmp
out
mov
jp
iret
jae
fwait
addr16
push
mov
add
push
scas
cmpsl
push
cmp
rcr
mov
jp
rol
xchg
arpl
jecxz
push
mov
push
mov
sbb
jmp
and
push
pop
push
jg
xor
ficompl
adc
push
mov
outsl
cs
xchg
xor
jne
mov
sub
pop
jne
adc
xlat
in
negb
mov
fildll
push
aaa
sub
loope
cs
cli
nop
adc
cmpsl
aas
mov
pop
pop
add
sub
popa
push
push
int
loope
and
or
cmp
pop
xchg
mov
jnp
adc
and
and
into
or
sub
or
jl
cmpsb
inc
adc
cmp
movsl
ret
mov
jmp
mov
push
dec
cld
stc
adc
fwait
es
out
fcomi
mov
out
ret
mov
loop
push
sub
les
jp
sub
push
cld
inc
and
popa
leave
xor
fwait
je
and
push
xorb
aas
cmp
and
push
mov
jmp
lcall
cmpsl
ds
imul
enter
mov
icebp
shlb
scas
jmp
push
mov
and
shlb
fldenv
enter
jp
and
daa
scas
dec
sbb
fcmovbe
and
sbb
xchg
mov
dec
jp
sti
mov
incl
and
push
aam
testl
in
test
inc
fidivrs
jb
out
out
std
push
js
stos
mov
shll
out
xchg
push
ss
cmpsb
pop
divl
repz
or
pop
cli
popa
pop
test
lock
icebp
lds
js
bound
rorb
lret
jbe
dec
cmp
fdivr
loop
push
ret
negb
jno
push
int3
mov
je
sahf
dec
lret
push
sbb
rcrb
cmp
popa
mov
pop
xchg
mov
push
inc
cmpsl
cmp
shll
popf
dec
xchg
sbb
mov
int
test
sti
mov
lea
jmp
sub
and
aaa
mov
int3
aam
and
bound
jnp
push
jmp
pop
cmpsb
js
adc
dec
push
mov
lea
stos
js
fcomp
mov
cmpsb
pop
rdtsc
pop
xchg
or
dec
jae
sub
xchg
in
fbld
push
jl
sub
dec
lcall
lret
fwait
mov
inc
push
in
sub
notb
mov
xchg
lcall
test
cmpsb
pop
cmp
jo
sub
outsb
jl
xchg
ret
or
add
jle
inc
scas
int3
jp
jo
cld
sub
mov
cmp
mov
cmpsl
lahf
mov
adc
dec
movsb
iret
and
mov
jmp
fsubr
cmp
jnp
test
push
lock
sbb
rcr
mov
mov
pusha
mov
cmc
int3
testl
fdivr
mov
pusha
stos
inc
cli
ljmp
loope
and
push
mov
jbe
cmp
out
cmp
test
dec
jmp
adc
inc
push
movsb
mov
outsb
out
fstpt
add
das
js
fs
shr
dec
jmp
dec
mov
pop
jl
and
out
pop
xor
out
xor
shlb
icebp
push
aad
movsb
aaa
sbb
lret
mov
cld
roll
jecxz
or
jo
jbe
inc
cld
lds
js
ds
sbb
in
inc
jg
sti
aad
mov
inc
mov
enter
pop
mov
movsl
ret
add
and
lds
pop
dec
or
push
sti
sarl
and
in
aas
ja
cmpsb
rcrl
cld
popa
cmp
mov
dec
jle
pusha
test
ja
enter
sbb
ss
jnp
rolb
nop
mov
orl
js
and
mov
sub
fidivrl
or
xor
ret
pop
xor
jne
fucomp
sub
mov
and
imul
out
adc
rcrb
cld
hlt
pop
in
stos
outsl
xchg
mov
cmp
mov
sbb
cmp
iret
pop
pop
push
xchg
aas
fstpt
xchg
inc
out
lods
scas
outsb
and
or
xorb
sub
fcoms
xchg
jo
in
js
outsl
imul
test
adc
dec
xor
bound
inc
mov
dec
jno
ja
sbb
icebp
inc
test
into
cs
call
shl
xor
sbb
adc
mov
lods
mov
stos
mov
push
out
sbb
push
stos
adc
loope
adc
cmp
inc
pop
ret
xchg
icebp
xor
mov
jmp
xrelease
mov
add
xchg
jg
fadds
push
push
sub
mov
adc
sub
pop
jo
cmpsb
in
mov
mov
sub
sahf
dec
out
pop
shlb
xchg
mov
mov
jns
mov
or
test
dec
push
jmp
xor
pop
sub
test
jbe
pop
add
cli
scas
cmp
sbb
push
cmp
cmpl
fildl
add
jns
roll
jnp
lret
inc
push
fs
lret
rolb
cld
cmp
test
mov
sbb
ret
mov
and
mov
in
push
or
push
movsb
push
or
pop
shll
cmc
insl
pop
push
or
push
daa
popa
out
adc
std
in
xchg
outsl
out
adc
sbb
pop
stos
rcll
ds
push
das
leave
cmp
lods
xor
cmp
rcrb
mov
test
xor
arpl
push
push
xchg
xchg
pop
or
stos
out
mov
idivl
xor
lea
push
add
int
xchg
sub
dec
adc
js
mov
adc
lret
lds
dec
je
in
dec
push
cmc
adcb
sahf
or
int3
and
or
fnstenv
aas
cmp
jle
out
int3
cmp
std
mov
mov
call
xor
jp
mov
xchg
xor
mov
pusha
pop
add
or
sahf
inc
bound
mov
fld
or
lea
fbstp
cld
repz
sub
iret
and
loope
push
add
add
int3
push
mov
clc
cmp
addl
in
fidivrs
movsb
pop
xor
out
jecxz
mov
fiadds
enter
mov
lret
out
aad
adc
fwait
shlb
xchg
ror
cwtl
pop
lret
jmp
jecxz
xorl
mov
cli
add
mov
mov
sub
adc
pop
jns
adc
push
mov
mov
hlt
xchg
rolb
mov
out
pop
dec
lcall
je
ds
lret
xor
jle
mov
push
mov
fwait
rolb
mov
jo
lahf
add
enter
mov
gs
lret
popf
cld
rclb
push
test
pop
jmp
dec
and
lods
scas
outsl
push
sub
gs
lock
aam
and
push
lods
push
pop
scas
test
ljmp
mov
xlat
scas
bound
ret
sbb
mov
xor
xor
jae
ljmp
movsl
xchg
xchg
out
adcb
mov
add
jg
fstps
cmp
and
lods
add
dec
lock
pop
jnp
inc
mov
add
xor
add
mov
inc
jo
mov
jno
sbb
sti
inc
adc
cs
repnz
mov
loope
jo
cld
pop
inc
ds
in
mov
xchg
push
dec
fsubrs
xor
xchg
mov
mov
bound
xor
pusha
shl
adc
sti
dec
orl
push
outsb
ret
push
cs
insb
jecxz
popl
shll
int3
movsbl
dec
push
inc
add
out
test
jg
popa
jmp
addb
jp
iret
sub
out
sahf
fs
or
push
cltd
mov
movsl
adc
and
push
sbb
aas
cmp
pop
mov
insb
bound
shrl
gs
mov
pop
jecxz
mov
mov
cmpsb
sub
lock
pushf
dec
sub
add
mov
pop
and
sub
pop
and
push
ret
inc
andl
mov
mov
mov
mov
ja
mov
sahf
inc
mov
cmp
clc
mov
adc
or
out
add
repnz
into
mov
push
roll
adc
xchg
fisubl
sbb
push
mov
fmul
popa
fildl
sub
bound
mov
fdivrl
xor
movsl
mov
xorl
and
test
cmp
dec
out
fisttps
rcr
andb
sbb
mov
jno
jecxz
mov
das
imul
loopne
rolb
pop
lret
inc
subl
mov
clc
xchg
gs
lea
xchg
loopne
jge
je
jecxz
pop
mov
in
sub
push
xor
stos
loopne
data16
lods
cmp
jge
loope
jl
push
adc
fs
xor
xlat
mov
stc
mov
push
adcb
push
cltd
jle
and
dec
out
and
xchg
jl
adc
jg
cmp
shll
js
adc
cmp
or
xchg
pop
mov
ljmp
repz
mov
fcompl
and
inc
mov
mov
cltd
je
pop
sar
mov
jle
sbb
out
pop
daa
mov
push
cmpsb
shll
les
mov
out
sbb
addr16
cmp
leave
lret
pop
cmp
mov
mov
dec
jns
xchg
inc
loopne
cs
pop
pop
das
bound
and
inc
sub
pushf
ljmp
call
xor
repnz
xchg
data16
sti
xor
imul
insl
sub
inc
inc
fistpl
jg
jmp
add
cltd
imul
outsl
cmp
jae
pusha
and
push
outsb
mov
jge
and
js
adc
push
cmpsb
inc
add
sub
pop
jns
popa
popf
hlt
incb
adcb
sbb
mov
pop
clc
push
push
imul
add
adc
mov
aad
rcll
xchg
pop
nop
mov
stos
fcomps
aaa
sti
and
notb
das
push
pop
movsl
and
ljmp
mov
xor
cmpsl
lds
cltd
jmp
mov
out
sbb
call
mov
test
pusha
jmp
icebp
push
bound
cmp
fadds
cmp
test
lcall
or
repnz
mov
add
adc
rolb
stos
lea
call
cmp
outsb
inc
repz
js
negb
push
add
test
test
mov
mov
jmp
nop
lcall
pop
dec
in
fwait
cmp
loop
jno
inc
scas
jno
sub
icebp
fdivr
fwait
xchg
pop
and
mov
add
dec
cwtl
pop
sub
and
cmp
icebp
sbb
in
jecxz
inc
ror
jg
xlat
sahf
jns
pop
ja
mov
mov
pop
sbb
dec
int3
dec
inc
sub
cmp
inc
pop
jnp
xchg
cmpsb
dec
mov
mov
jns
dec
jbe
rcrl
pusha
xor
inc
jno
fistl
dec
js
fisubrl
sub
mov
mov
push
sti
cmp
xlat
add
add
mov
cltd
leave
mov
jp
outsb
test
sbb
pop
or
out
ja
pop
mov
sub
inc
mov
pop
jl
ffree
rorl
push
xchg
jnp
inc
cmp
adc
call
ljmp
jp
dec
fsubl
fisubs
inc
xor
out
cmpsb
dec
in
cmp
negb
insb
sbb
add
sbb
push
imul
rclb
loopne
adc
inc
xor
bound
inc
add
pusha
and
repnz
xor
loopne
adc
inc
xor
bound
inc
add
pusha
and
mov
sub
mov
mov
shlb
push
adc
jo
mov
test
fadd
ljmp
xor
pusha
mov
lcall
std
int
fstl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
sub
sbb
or
mov
sbb
fadds
mov
mov
adc
mov
xor
and
shrl
rcrl
or
js
push
aad
pop
test
cwtl
jno
popa
cmp
add
xor
and
enter
jmp
push
mov
hlt
or
jne
inc
cmpsb
dec
addr16
dec
mov
xchg
xchg
push
mov
dec
bound
int3
pop
jo
mov
mov
loope
jb
dec
mov
inc
scas
sub
sahf
pop
jno
pop
pop
inc
fldcw
and
repz
cld
mov
sbb
test
xchg
mov
cmp
or
ffree
dec
and
mov
mov
pop
sub
std
xor
push
enter
notl
fstpt
mov
stos
adc
adc
xlat
mov
or
and
mov
icebp
out
cmp
mov
cmp
popf
xor
hlt
sub
sbb
or
js
push
mov
cwtl
push
call
and
pop
mov
xchg
popa
test
sbb
cmp
dec
les
jne
add
je
add
mov
mov
sub
xchg
frstor
mov
popa
xchg
mov
mov
shll
movsb
xor
push
mov
cwtl
jno
popa
clc
adc
add
xor
and
shrl
rcrl
or
js
push
mov
cwtl
jno
popa
clc
adc
add
xor
and
rorl
jecxz
sbb
mov
mov
mov
jl
cltd
ret
ret
push
add
mov
cmp
inc
ss
and
mov
jno
mov
fistpl
dec
dec
stos
out
lea
arpl
mov
xchg
testl
je
mov
aam
xchg
sbb
icebp
mov
orl
dec
lret
repz
or
rol
ret
jae
push
sbb
mulb
arpl
out
push
fdivrl
fsubrs
sbb
sbb
dec
movsl
mov
leave
das
dec
mov
pop
movsl
rolb
jae
lret
testl
xor
mov
jmp
adc
jns
xchg
repz
lea
jp,pn
and
adc
out
dec
int3
sub
setae
orl
int
lcall
ds
roll
cmp
shlb
lret
dec
test
idiv
cmp
push
mov
pop
mov
lods
jmp
lret
or
bound
or
inc
aas
dec
test
movsb
mov
lds
es
imul
jno
inc
and
cmp
cmc
adc
stos
push
in
mov
xchg
lret
pop
aas
mov
mov
lods
addl
inc
rcrl
icebp
xor
das
xadd
jbe
and
cltd
xchg
aam
push
mov
pop
rorb
sub
inc
inc
pop
enter
movsl
lods
mov
xchg
xchg
arpl
das
int3
and
xchg
mov
das
movsb
scas
xor
lods
adc
mov
je
cld
sarb
rcrb
pop
push
pop
jecxz
adc
call
mov
ja
fucomi
repnz
dec
mov
pop
fistps
shr
test
push
dec
loope
enter
cmpb
push
les
jmp
inc
movsb
ljmp
mov
repnz
pop
pop
mov
iret
cmp
movsb
leave
sti
sub
jge
cmp
call
sahf
nop
xor
jmp
xorb
aam
lret
pop
pop
insb
inc
mov
jmp
in
cmp
pop
js
inc
mov
lret
addr16
in
loop
mov
jle
nop
jnp
push
add
cmp
and
in
mov
sub
push
insl
dec
xor
int3
and
insb
sub
push
jecxz
add
test
filds
pusha
movsl
mov
and
lods
ds
lds
mov
in
repnz
into
mov
aad
js
cmp
imul
sbb
and
cltd
push
mov
jb
ret
stc
xchg
jg
jecxz
jg
push
xchg
add
das
test
sub
sbb
punpckhbw
negb
adc
ror
pop
leave
jns
inc
pop
cmpsl
adcl
setne
dec
icebp
pop
scas
inc
cli
jg
add
movsl
in
jno
xor
clc
cltd
pop
jecxz
addr16
push
dec
and
or
fnsave
xlat
shr
sbb
and
xchg
and
jl
lcall
dec
sub
dec
leave
ljmp
jmp
sahf
add
in
push
into
inc
sub
pop
fsubrl
mov
cmp
or
movsb
xchg
add
mov
test
push
movb
push
xor
mov
cmpsl
ds
rolb
xor
lcall
mov
insb
cmpsb
adc
rorl
in
cld
inc
dec
sbb
pop
xor
mov
mov
pop
mov
sbb
lcall
loop
rcll
pushf
repz
mov
clc
arpl
test
aas
sub
inc
add
lods
std
and
dec
pop
xorb
mov
pop
int3
divl
dec
inc
push
xor
inc
or
jae
cld
inc
jl
pop
inc
repnz
in
aas
call
adc
push
xchg
mov
cmpsl
mov
pop
mov
or
std
lret
push
push
or
xchg
cld
aam
push
pop
enter
jmp
popa
pop
ds
movsl
adc
cmp
scas
pop
es
jmp
jmp
sub
mov
mov
dec
int3
loope
movsb
adc
cmp
aas
aas
mov
mov
adc
insb
js
aam
sub
outsb
lret
cmc
adc
mov
mov
insb
mov
adc
cmpsb
imul
insl
adc
fcoms
rcll
adc
xchg
imul
adc
pop
cmp
inc
xor
les
add
cmp
icebp
insl
lret
es
dec
das
push
push
imulb
jae
test
sbb
push
inc
je
sub
cmp
push
out
sub
mov
enter
test
pop
add
push
adc
sub
sub
and
cmp
jmp
call
push
xor
dec
iret
mov
stos
mov
and
int
jge
sub
and
icebp
mov
jae
mov
popa
add
mov
xchg
cld
xor
xlat
xchg
gs
jecxz
je
shlb
adcl
xchg
ljmp
lods
aas
jnp
jae
in
inc
in
xchg
je
addr16
cmp
out
ja
jecxz
cmp
mov
pushf
test
jno
mov
jmp
mov
sbb
push
mov
out
pop
sbb
enter
add
hlt
call
add
jb
movl
xlat
imul
inc
cmpsl
loope
outsl
ror
insb
cmp
and
inc
push
push
sbb
or
popa
sub
in
cmpsl
pop
mov
cmpb
pop
ret
cmp
inc
cmp
xchg
data16
ljmp
mov
add
fldt
loope
ret
out
push
xchg
insb
daa
push
xchg
cwtl
enter
mull
sbb
adc
jp
jl
xchg
dec
cmp
shll
out
rorb
or
test
jb
xchg
scas
mov
push
test
mov
inc
mov
xchg
push
in
pop
cmp
push
add
pop
adc
pushf
in
and
jp
dec
sbb
pop
mov
movsb
pop
fistpll
cmpsb
leave
sub
loopne
daa
xchg
fdivs
cmpsl
or
xor
fists
stos
addr16
sbb
aam
or
sti
push
adc
or
pop
loope
mov
add
test
decb
enter
pusha
xchg
jbe
pop
fdivs
iret
test
into
and
mov
mov
xchg
js
xor
sub
dec
pop
xor
mov
addl
xor
test
js
test
mov
adc
mov
fwait
je
push
inc
les
and
das
lret
mov
mov
shrb
pushf
test
jno
sbb
pop
pushf
mov
pop
inc
inc
jl
daa
and
push
imul
push
jns
fbstp
out
arpl
pop
aas
les
mov
cmp
in
arpl
pop
shl
lahf
adc
ret
js
int3
insl
xchg
bound
lcall
jecxz
jle
or
pop
outsb
dec
decl
or
loopne
or
jo
fst
pop
cmpsl
movsl
mov
decl
nop
inc
xor
mov
loope
test
adc
lea
xor
pop
inc
fst
jns
or
or
gs
dec
push
sbb
mov
fiaddl
addr16
cmpb
aad
or
dec
jae
stc
push
icebp
push
jmp
or
movsl
and
or
scas
icebp
sub
or
subl
mov
clc
mov
es
push
insl
addl
and
rcrl
xlat
jmp
push
scas
adc
bound
jle
ljmp
fsubp
je
push
or
mov
mov
xor
add
dec
push
lret
stos
jns
mov
push
dec
int
stos
inc
jl
flds
movsl
sub
movl
notl
inc
push
cmp
out
subb
int3
in
cmp
inc
lds
xor
les
push
lret
fdivr
dec
jp
test
or
adc
cmpl
loop
in
sbb
and
sbb
fbld
push
outsl
loopne
xchg
dec
in
movsl
mov
push
scas
pop
loope
and
adc
and
dec
cmp
rclb
jl
outsl
pop
pop
das
andb
dec
lret
orb
cmpsl
ret
adc
sub
mov
pop
add
sbb
js
and
xor
loop
and
xor
jl
lcall
xchg
dec
mov
sub
adc
scas
or
in
jecxz
adc
andb
shll
adcb
cld
imul
addr16
bound
push
clc
fdivr
add
lret
sbb
cmp
popf
sar
lea
and
pop
jae
cmp
jo
into
repnz
mov
push
data16
xchg
insb
cli
jl
pop
and
imul
into
cmp
shr
adc
jae
inc
sbb
mov
imull
mov
lods
clc
lret
sti
cmc
cmc
aad
push
and
sub
bound
imul
jns
lcall
sub
mov
fisubrs
ljmp
mov
cmpsb
cmc
sub
push
insb
lret
or
xor
nop
ljmp
jnp
xor
fs
repz
inc
lea
testb
sbb
incl
xor
fwait
mov
lods
das
lods
jae
movb
outsb
scas
or
cmp
cmp
addb
push
lahf
fcoms
add
push
aad
fcmove
push
test
loop
pop
repz
out
push
arpl
stos
lods
outsl
pusha
mov
imul
sbb
shlb
aad
std
xchg
inc
sub
jbe
shrl
out
jns
sub
shll
mov
cmp
daa
clc
xor
popf
ljmp
ds
sub
hlt
pop
ret
pop
fcos
enter
movsl
cmp
aas
fmuls
xor
test
sqrtps
dec
jp
and
shll
or
cmc
mov
pop
xchg
outsb
popf
hlt
add
sbb
je
fs
and
xchg
int3
push
movsb
push
xchg
xor
or
leave
out
nop
fsubp
mov
mov
jecxz
shlb
stc
pop
mov
jne
jnp
int
bound
ret
adc
push
mov
roll
jno
les
or
popa
xor
clc
rcrb
enter
cmpsb
inc
aaa
leave
pushf
div
clts
push
mov
or
repz
ror
and
cmpsl
leave
or
add
add
out
int3
mov
clc
jae
daa
repnz
add
cmp
and
inc
fwait
repnz
xchg
mov
lret
into
into
xor
mov
movsl
adc
mov
inc
daa
out
pushf
in
push
or
push
sbb
adc
or
movb
inc
cli
add
jmp
dec
xorb
ret
sbb
add
pop
mov
aad
sbb
movsl
sbb
sti
sub
test
fiaddl
push
scas
lds
mov
loope
icebp
pop
jg
pop
or
ja
or
sub
leave
rcr
cmp
les
jg
cmc
loop
fldt
jno
or
out
fdivrs
add
sub
sbb
loope
mov
mov
mov
push
stc
and
frstor
mov
pop
push
rolb
lock
pop
jg
push
out
sub
mov
cld
jmp
lret
cmp
testl
bound
xchg
sub
push
xor
pop
sub
mov
push
mov
js
jmp
divb
push
jle
out
clc
mov
sub
pop
inc
lods
inc
mov
mov
jns
jno
ljmp
lretw
lock
pop
aaa
sub
pop
cmp
adc
sar
stos
push
lcall
lret
pop
dec
leave
cld
add
xchg
add
icebp
or
mov
stos
or
inc
fdiv
lea
ret
sub
sub
pop
and
outsl
movsl
outsl
loopne
dec
rorl
inc
pop
adc
jo
cmp
inc
loope
fnsave
fiadds
push
adcl
inc
mov
aad
pusha
cmp
les
and
xor
push
or
flds
or
sbb
pop
hlt
shrl
mov
in
into
inc
mov
popa
das
sar
incl
addr16
rcr
adc
je
ret
stos
add
and
pop
inc
call
cs
sbb
cmp
adc
scas
fisubs
repnz
roll
lods
cld
jno
and
push
addl
add
pop
mov
lds
and
scas
cmp
dec
add
rol
or
and
ret
dec
cmp
int
jp
mov
and
jbe
sarb
cmpsb
into
add
addl
insb
mov
out
sahf
imul
jo
pop
pop
push
xor
inc
or
adc
repnz
repnz
adc
dec
das
repz
push
xlat
xchg
test
xchg
scas
repnz
jo
scas
mov
inc
lret
add
shrl
jae
sub
int
sti
fstl
cmp
in
sahf
cli
or
cli
fwait
dec
inc
mov
sub
dec
adc
jp
into
je
in
xchg
dec
xchg
jnp
and
into
daa
mov
mov
dec
and
mov
lea
movsb
dec
das
out
add
cld
stos
clc
aad
inc
bound
icebp
in
movsl
push
call
jg
out
mov
mov
dec
mov
pop
fstps
ret
sbb
mov
jne
dec
mov
test
mov
sarb
adc
pop
or
flds
inc
cwtl
setnp
mov
or
pushf
movd
xor
movsb
and
call
test
xchg
es
icebp
push
sub
xchg
out
cwtl
adc
fld
outsb
dec
loopne
and
mov
fwait
es
adc
xor
add
loop
adc
push
mov
pushf
mov
ja
fadds
cmp
mov
dec
pusha
mov
cmp
adc
cmp
in
test
js
cltd
cld
mov
jl
hlt
xchg
add
inc
shr
aam
mov
and
push
shl
or
dec
add
sub
je
sub
ret
lret
sub
scas
push
fwait
pop
xchg
and
pop
mov
insb
push
xchg
adc
xor
loopne
je
push
cmp
adc
aaa
and
add
and
mov
in
mov
das
aad
xor
mov
push
mov
push
xchg
sub
jb
inc
outsb
test
out
xor
fsubs
lret
rcll
insb
jecxz
std
dec
sbb
sbb
fmuls
xor
jno
push
mov
lcall
dec
lret
lret
xor
js
push
andl
mov
iret
xchg
xchg
mov
push
pop
ja
add
insb
popf
aaa
dec
out
mov
cmp
jne
adc
and
cli
xchg
cmp
imul
push
psubusw
int
popa
sub
sbbb
pushf
sub
push
and
cmpsl
sarl
and
or
xchg
loopne
jmp
mov
mov
enter
movsb
sub
pop
arpl
adcb
es
mov
mov
movsl
dec
pop
flds
aaa
mov
stos
and
jl
mov
fidivrl
lahf
lds
xchg
pusha
aaa
mov
cltd
gs
pop
xor
mov
ja
and
inc
xchg
xchg
xor
in
and
cmp
mov
je
mov
jns
ds
hlt
sbb
fistpl
sub
push
adc
pop
xchg
add
and
rolb
adc
inc
es
jnp
and
lret
test
lcall
push
movsb
and
js
lret
pop
or
xlat
mov
sub
insb
das
imull
push
pop
scas
push
cltd
ljmp
aam
mov
in
pop
pop
aad
cmp
inc
add
pusha
stos
or
imul
push
cmp
mov
flds
arpl
xor
movsl
cli
jmp
sbb
in
and
adc
adc
mov
je
pop
jne
xchg
fsts
icebp
mov
divl
sub
imul
call
push
int
xor
aas
xchg
cmpl
sub
stos
mov
xchg
jmp
xchg
mov
out
jbe
sub
inc
out
or
stos
mov
push
mov
jg
push
jb
xlat
cmp
dec
clc
stc
outsb
lds
sub
lods
aad
jb
mov
adc
add
jno
inc
iret
push
mov
rclb
outsl
stos
pop
scas
push
rclb
mov
std
pop
dec
inc
mov
shr
push
sub
and
clc
push
in
or
push
stos
js
loopne
hlt
movsl
jg
cmc
pop
jmp
mov
push
icebp
outsb
jg
push
insb
insb
xchg
push
and
dec
jmp
es
mov
cmpsb
in
neg
or
add
jne
xchg
jnp
cmp
jno
lahf
in
daa
mov
pop
sbb
aas
pop
jge
dec
dec
pop
adcb
lcall
insl
xchg
mov
dec
jns
cmpsb
adc
popf
or
mov
pop
xchg
adc
aas
loop
pushf
xchg
mov
adc
push
pop
inc
aam
xchg
fnstenv
ss
mov
in
mov
fistpll
gs
add
pop
mov
mov
in
lret
jg
testb
adc
movsb
xchg
test
cltd
test
jae
lcall
out
jmp
fnstsw
cmc
test
iret
mov
pushaw
cltd
adc
pop
ljmp
push
fsubr
in
insb
mov
pop
jne
and
repnz
and
and
cmp
enter
push
jbe
stc
push
lret
cmc
jne
mov
push
ss
jns
cmc
cmp
or
push
mov
and
lret
js
xchg
or
aas
mov
lock
test
cmp
inc
xor
mov
fcmovu
xchg
fdivrp
icebp
and
jl
out
shrw
stc
inc
adc
call
call
jp
sarl
lea
or
iret
scas
popf
xchg
shll
and
shll
mov
sub
pop
inc
dec
ret
popa
or
cmp
ss
js
dec
inc
clts
adcb
lahf
jno
pop
mov
add
shll
push
jmp
xchg
das
ja
push
push
ja
ss
xchg
fistps
mov
daa
xchg
pusha
push
jl
xlat
mov
mov
gs
or
xchg
sub
out
leave
xor
xor
mov
or
mov
dec
int3
fidivrs
repz
repnz
ret
dec
xor
or
and
cmp
stos
inc
add
loope
popf
cmp
jno
sbb
push
dec
sbb
aad
inc
movsb
cld
or
stc
dec
mov
fwait
cld
add
loop
testb
rolb
push
in
xchg
dec
and
in
mov
mov
nop
push
dec
xchg
xor
sub
fcoms
xor
dec
and
in
fiaddl
mov
aad
pushl
out
mov
or
sti
or
pop
mov
jmp
inc
and
test
xorl
cli
add
inc
pusha
push
cwtl
mulb
push
sub
xchg
push
mov
jno
pop
test
mov
enter
xor
sbb
dec
fistpll
jne
sbb
and
insl
cmp
inc
adc
cmpsb
and
cmp
lret
jmp
push
rcll
testb
add
out
lds
push
lcall
mov
xchg
or
test
test
sarb
out
lahf
mov
pop
xlat
add
mov
inc
xchg
mov
loop
cltd
int
pop
mov
or
gs
in
mov
add
sbb
sub
sar
jecxz
outsl
gs
outsb
shlb
xor
dec
movsl
pop
loope
cmp
add
cmp
movsb
xlat
pop
iret
ss
in
mov
pop
adc
sub
jb
decb
dec
cmp
lock
fucomi
mov
fadds
cld
rep
add
dec
popa
xchg
lea
mov
mov
repz
bound
cmpsl
ja
nop
scas
addr16
cmp
xlat
mov
mov
inc
shll
xor
popa
mov
add
xchg
mov
mov
iret
push
aas
mov
dec
sbb
pushf
pop
mov
out
sbb
mov
ljmp
enter
pop
shr
outsl
out
add
sbb
or
js
push
mov
cwtl
jno
popa
clc
adc
add
xor
and
shrl
rcrl
or
js
push
mov
cwtl
jno
popa
clc
adc
add
xor
and
shrl
loope
xchg
push
mov
cwtl
jno
gs
adc
add
xor
sub
sbb
or
js
push
popa
mov
jno
push
mov
mov
jg
dec
rcrl
jnp
push
in
hlt
pop
popa
out
jno
inc
iret
push
fbld
scas
xor
add
icebp
jg
dec
rcrl
das
mov
orl
jno
xor
scas
xor
loope
icebp
jg
dec
rcrl
das
mov
orl
jno
xor
push
fisttpl
jg
test
icebp
or
jmp
push
mov
iret
add
mov
push
push
dec
aas
xor
pop
mov
mov
addr16
xchg
push
pop
lahf
int3
iret
aam
fisubrs
xor
out
arpl
jp
test
js
mov
or
popa
das
sbb
mov
scas
mov
sahf
movsb
nop
lock
dec
push
dec
mov
out
dec
popa
fsubl
int3
xor
pop
out
add
mov
stos
cltd
jmp
rolb
push
xor
in
lods
addr16
loope
add
push
ljmp
pop
in
cmp
les
lcall
adc
sbb
lcall
rorl
mov
setno
popa
out
jno
inc
iret
push
fbld
scas
xor
cmpsl
add
sbb
inc
clc
jle
push
outsl
and
cmp
movb
cli
loop
xorl
dec
fstl
andl
xchg
add
shlb
adc
mov
xchg
or
inc
mov
orl
jno
inc
iret
push
fbld
scas
xor
loope
icebp
jg
dec
rcrl
das
mov
orl
jno
inc
iret
push
fbld
scas
xor
loope
push
push
mov
sbb
popa
or
push
cmp
xchg
add
sarb
sub
loop
sub
les
adc
add
insl
aas
icebp
lock
mov
insb
jg
into
enter
mov
in
lret
mov
mov
fcoms
cmp
lods
and
mov
mov
fdivs
jnp
fcmovu
adc
and
mov
scas
jle
int3
mov
hlt
xlat
lds
xchg
aad
dec
and
ficoms
ror
cmpl
sbb
push
and
mov
lcall
and
or
stc
setp
lahf
aas
lret
subb
jae
adc
and
aas
pop
add
add
push
adc
das
lret
insl
sub
test
daa
imul
out
mov
sub
dec
das
fcmovu
pop
mov
scas
fs
xor
xchg
mov
and
inc
scas
orl
lods
out
jmp
out
fnsave
outsl
xchg
rcl
jno
mov
js
or
imul
push
aam
mulb
mov
add
dec
les
sub
xor
pop
inc
cli
fstps
call
add
push
rcll
outsb
xchg
lcall
xor
fdivs
insl
or
sahf
jo
dec
sbb
mov
xchg
cmp
add
out
push
lret
in
test
jnp
mov
outsl
inc
test
aaa
sub
enter
or
cmp
sti
mov
sbb
out
lret
out
xchg
fcmovu
test
call
das
mov
dec
pop
popa
add
jne
dec
sbb
and
pop
push
push
ljmp
mov
mov
cmp
in
pusha
or
cmpsl
xchg
daa
sahf
pop
mov
aas
icebp
cli
andb
inc
mov
jge
int
int3
fsub
xchg
cmp
daa
jp
ret
rclb
movsb
cltd
push
jno
xor
inc
or
in
orb
sbb
addl
flds
mov
lcall
inc
filds
movsb
inc
jg
xchg
lds
inc
mov
cmpb
mov
outsl
in
mov
lds
pusha
repnz
push
lods
push
mov
stc
xchg
lds
xchg
mov
leave
and
js
mov
lds
inc
decb
addr16
cmp
aad
adc
das
addl
xchg
add
xor
mov
cmpsb
sub
lods
rol
push
dec
add
mov
insl
sbb
push
movsl
adc
xor
out
xchg
lods
jp
sub
mov
and
stc
jo
in
lock
icebp
ficoml
test
mov
enter
cmp
lret
movb
test
aam
loope
shrb
repz
mov
lods
cmpsb
out
adc
adc
xor
push
test
jnp
push
dec
jle
adc
sub
push
xchg
or
orb
out
xor
repnz
shr
lret
mov
stos
jae
fisttpl
sbb
ljmp
test
push
fwait
daa
lods
aam
aaa
insl
stos
xor
add
andb
or
xchg
add
cs
repz
push
mov
push
inc
add
psubusw
scas
sahf
fadds
mov
xor
cmpxchg
test
loopne
pop
push
cmpsb
inc
cmpsl
test
fsubr
out
sbb
xor
sahf
pushf
add
rorb
cmpsb
insl
js
mov
jmp
xchg
xor
mov
mov
adc
adc
test
testb
flds
cmp
and
dec
fdivrs
sahf
imul
or
pop
mov
in
cmpsb
jg
pop
aad
mov
and
fsub
jmp
mov
xchg
and
je
les
jno
jae
cmc
popf
add
loope
jbe
dec
cli
xor
cmpsl
sbb
dec
imul
or
add
mov
fldln2
xlat
cmpl
dec
add
ror
andb
pop
fstp
jbe
out
push
xchg
pop
in
cmp
sti
data16
mov
or
push
and
jmp
push
out
enter
xchg
lods
xor
jle
mov
mov
lret
cmc
jg
pop
inc
cmp
mov
xabort
inc
popf
int
sub
push
mov
mov
jge
jg
jge
dec
sub
sbb
ss
sbb
cli
mov
cmc
mov
pop
inc
add
movsb
rorb
inc
jne
xchg
aad
jg
insb
inc
aaa
sbb
add
dec
push
mov
sbb
addr16
sbb
sti
cmc
sbb
enter
stos
jbe
mov
inc
push
xlat
mov
pop
insl
fldcw
xlat
jl
inc
cld
stos
add
les
je
loop
lods
pop
test
cwtl
pop
insb
add
or
popf
xchg
fsubl
aas
iret
sub
aad
xor
pushf
and
sbb
stos
outsl
push
stos
lods
or
add
adc
xlat
repnz
inc
dec
pop
movl
xchg
lods
stos
mov
push
roll
add
mov
bound
enter
shlb
or
insl
xchg
add
lcall
scas
in
dec
sub
pop
cwtl
dec
push
sub
stos
jns
pop
push
mov
mov
cmovnp
aam
cmp
gs
cltd
sbb
fistps
cmp
ja
cld
jg
bnd
dec
into
in
insl
sub
stos
sub
push
shrb
xchg
xchg
addl
cmp
orl
fists
xor
int
das
mov
and
outsl
cmc
pop
jbe
scas
jbe
and
into
icebp
lock
shll
imul
cmpsb
mov
int
out
sti
adc
jns
inc
aad
ret
fildll
jno
xchg
mov
pushf
sbb
jl
cli
fisubs
mov
loop
xchg
cmp
adcb
cmp
pop
lds
and
sbb
outsb
or
inc
push
clc
ja
xor
test
fs
rcrl
repz
arpl
add
and
jb
sbb
mov
jae
push
ret
fstpl
shrb
shrl
or
out
xor
push
pop
cmp
mov
or
inc
mov
jae
fsubl
xor
inc
aas
je
sti
stos
mov
xchg
mov
in
lds
mov
aad
int3
lea
dec
cs
ds
mov
mov
adc
fs
mov
cmp
xorb
dec
adc
jl
into
loop
cmp
pop
std
lea
push
outsl
cmp
add
lods
jmp
pop
cmovb
dec
subb
or
dec
dec
leave
jb
and
gs
pop
dec
int
rol
cli
pop
jmp
push
stos
hlt
dec
mov
pop
sbb
jb
stc
div
aam
add
fisttpl
sub
outsl
adc
mov
mov
lret
push
add
jbe
adc
int3
imul
xchg
orl
mov
xchg
sbb
add
mov
mov
test
inc
ret
popf
repz
jg
idivl
inc
dec
mov
lcall
jmp
sub
lret
arpl
in
aas
mov
sbb
push
or
adc
inc
hlt
inc
sbb
jecxz
scas
addl
outsb
add
mov
mov
sub
mov
pushf
out
and
inc
mov
xchg
jg
pushf
inc
sbb
push
xorb
ljmp
jns
sbb
loope
popf
in
add
pop
mov
mov
push
dec
in
mov
aad
fidivs
stc
ja
ficoml
mov
out
jno
outsb
lock
shll
inc
sbbl
xor
stos
orb
add
inc
les
sub
adc
out
push
iret
or
fwait
dec
loope
inc
push
aaa
mov
clc
or
xor
dec
dec
xchg
lock
sbb
mov
pop
push
fwait
push
jo
jp
xchg
inc
mov
adc
mov
sbb
sbb
and
pop
push
fwait
std
cs
jecxz
pop
fisubl
dec
dec
outsb
push
mov
test
movsb
jne
lods
cmp
fcoms
sbb
out
lcall
pop
fadds
test
mov
sub
cmp
pmulhw
bound
dec
or
data16
das
mov
loop
popa
add
rcll
notl
scas
mov
in
clc
and
jo
mov
call
out
pop
and
les
xchg
negl
cs
adc
mov
in
pop
cld
sar
lret
adc
adc
mov
mov
mov
sub
xchg
sub
inc
add
xor
cmp
call
push
xlat
jns
mov
arpl
sub
insb
or
ja
mov
mov
add
jg
cmp
push
movsb
out
xor
or
push
xchg
jb
inc
iret
les
shr
fistps
mov
mov
cmp
movsl
fcomi
jecxz
or
jge
jmp
push
pop
xchg
stos
sbb
je
pop
jle
mov
repz
shll
jb
mov
push
mov
popa
enter
imul
ss
jae
hlt
dec
jo
aad
mov
mov
cmp
jge
into
ja
mov
mov
mov
or
mov
sbb
dec
gs
add
jno
mov
pop
mov
add
or
sahf
adc
push
insl
add
or
cmc
mov
dec
add
addr16
adc
mov
insb
rcrb
or
adc
and
and
mov
gs
and
mov
mov
inc
loopne
push
sub
mov
push
and
dec
fnsave
jg
mov
out
inc
out
test
enter
lds
popf
push
or
sub
mov
mov
pushf
and
inc
cmp
push
imul
inc
rcrb
jo
jmp
int
jle,pn
mov
test
and
xchg
pop
stc
jp
xor
sbb
and
insb
pop
mov
jecxz
add
shrl
sti
ljmp
mov
in
in
fdivrl
das
jns
std
xchg
push
fisttps
jcxz
push
cli
pusha
lock
nop
in
cmp
sub
sub
sub
add
sbb
mov
xchg
xchg
push
sti
insb
in
jb
jmp
mov
into
imul
mov
or
je
in
mov
cmp
sub
xchg
outsl
testl
jmp
xlat
sub
mov
pop
pop
popa
mov
mov
lods
std
pop
sub
cld
call
cmp
xor
pop
adc
sub
imul
pop
aas
adc
push
jp
ss
loop
xlat
lea
ljmp
mov
lods
insb
xchg
dec
or
aaa
jbe
mov
pop
test
pushf
mov
es
adc
lea
jmp
mov
mov
dec
mov
mov
outsb
aam
xor
xor
imul
push
jl
call
lods
xchg
cli
rcrl
stos
mov
jle
cli
xor
pop
in
in
inc
bound
es
mov
jge
mov
dec
mov
aaa
xchg
loope
stos
jnp
sbb
aam
gs
push
fs
arpl
pop
mov
cmpsl
int3
js
roll
test
dec
into
push
sbb
int3
push
jg
fwait
mov
popf
mov
sub
jg
push
movsl
xchg
pop
scas
jns
push
fwait
aas
jae
pop
loopne
mov
icebp
aam
pop
lahf
mov
cmp
addb
jp
jl
movsl
pop
xchg
pop
push
mov
icebp
push
ret
aam
repnz
or
pop
das
call
insl
bound
sub
xor
mov
xchg
into
fchs
or
xchg
scas
test
xchg
repz
nop
add
adc
adc
out
stos
jnp
pusha
mov
das
dec
fmuls
in
pusha
mov
cli
aaa
bswap
inc
xchg
jae
mov
in
sbb
lods
int3
pop
jl
dec
sub
jp
and
mov
fistpl
sub
and
cltd
and
sub
add
sub
in
xchg
mov
pop
out
ret
lahf
xchg
aam
dec
cmp
sbb
pop
add
cmp
std
cltd
lds
inc
xor
jp
test
add
jnp
jge
lods
xor
pushf
lret
push
rolb
aam
repz
bound
dec
cli
fwait
lods
cmpsb
dec
sbb
fstp
add
movsb
mov
in
aas
adc
push
adc
and
sbb
test
fdivs
cmc
pop
mov
gs
inc
data16
dec
lcall
jp
jb
imul
sbb
dec
and
xor
mov
xor
shll
pop
xchg
xor
and
push
add
sbb
outsl
mov
das
insb
test
nop
cmp
stos
xchg
push
adc
mov
xchg
clc
push
inc
lds
ret
nop
cli
xchg
das
mov
ja
fdivs
push
repnz
and
dec
mov
roll
test
hlt
lock
mov
lret
icebp
add
pop
jmp
popf
mov
jnp
or
mov
mov
in
fldl
dec
inc
mov
adc
test
dec
fdivr
shrb
jmp
inc
xor
das
loop
xor
das
cwtl
pop
mov
add
pop
jge
xchg
sar
jb
mov
jle
fmuls
lds
add
inc
hlt
mov
jg
xchg
add
loop
rcrb
push
cmp
in
and
and
cli
mov
mov
mov
pop
aad
shll
fsubrl
gs
fcomip
fmull
pop
in
lods
xor
jne
sbb
enter
outsl
into
mov
cwtl
rorb
push
int3
or
movsl
data16
adc
push
mov
lods
lods
inc
out
jns
repnz
lea
aas
mov
push
lods
or
int
adc
enter
mov
dec
movsb
sub
add
and
outsl
ja
dec
std
stos
adc
in
arpl
adc
lods
or
cwtl
mov
pop
xchg
loopne
test
sub
xchg
out
addb
pushf
add
xor
ljmp
shll
dec
jle
je
lods
mov
mov
push
inc
lods
lahf
loop
xor
sbb
xchg
pop
std
dec
aas
not
arpl
sbb
push
xor
imulb
xor
jg
les
fs
sbb
pop
push
call
mov
xlat
subl
mov
push
mov
stc
sub
xchg
ljmp
inc
ja
movsl
or
jbe
bound
nopl
testl
or
dec
shr
pop
pop
ds
adc
add
stos
cmp
mov
mov
call
lods
mov
xchg
cmp
jp
fdivp
loopne
dec
pop
ljmp
pop
and
cmp
xor
insl
adc
leave
inc
mov
fsubl
shlb
mov
out
adcb
and
sub
and
pop
insb
aaa
lods
mov
sub
into
add
int
jno
xchg
cmp
movsb
lods
js
lods
pop
sarb
call
loope
shll
add
lret
idiv
cmp
and
clc
adc
pop
inc
pop
outsb
mov
jb
cmc
fs
dec
push
and
sub
cmpsl
cmp
mov
fnstenv
sahf
inc
ret
adc
dec
mov
sbb
xor
add
cmpl
or
rorb
and
mov
push
mov
xor
mov
adc
enter
mov
xor
mov
jno
loopne
push
rol
in
out
sbb
sbb
pop
xlat
mov
stc
dec
mov
add
mov
lods
enter
sbb
mov
mul
gs
dec
lret
adcl
sbb
pop
sbbb
lcall
int3
dec
xor
sete
out
adc
stc
cs
ja
je
add
insl
or
cmpsb
aaa
mov
sbbb
data16
cmpsb
insb
lahf
adc
add
xchg
int3
daa
add
fnstenv
shl
std
add
sub
xchg
mov
and
dec
fisubl
cs
push
or
loopne
loopne
add
mov
das
xchg
dec
xor
sbb
xchg
dec
dec
out
hlt
movsl
jno
dec
nop
pop
jmp
pushf
ljmp
rcrb
push
fcoms
test
xor
loope
mov
mov
sub
stc
in
daa
mov
clc
push
lahf
jl
mov
ret
fxtract
pop
cmpsl
lret
sbb
pop
lret
in
inc
push
movsl
or
loop
iret
ret
out
sub
mov
sahf
jo
ret
pop
mov
out
out
test
out
xchg
xor
decb
ret
stos
mov
xchg
mov
pop
add
popa
jle
sti
icebp
or
ret
pop
push
or
imul
push
fsubs
cltd
lods
and
jg
dec
mov
dec
add
gs
ret
sbb
xchg
rcll
add
lods
push
in
hlt
jae
popa
mov
sub
sub
mov
push
xchg
or
push
and
pop
std
in
je
or
insb
mov
mov
xchg
jb
sahf
jnp
shlb
jle
int
jl
cmp
lret
or
add
adc
cmc
dec
ret
push
out
pop
int3
xchg
clc
insl
jle
aas
and
outsl
sub
sub
lods
loope
divb
inc
xor
mov
add
dec
mov
xchg
push
fdivrl
sbb
notb
mov
push
cmp
in
adc
adc
xor
or
fs
lret
shlb
sbb
mov
scas
dec
shll
push
adc
mov
mov
mov
sbb
leave
mov
pushf
jg
testb
sbb
jae
jbe
in
ficoml
popf
pop
ja
lock
mov
imul
leave
mov
jae
push
add
aam
paddd
mov
and
lds
inc
fisttpll
cmc
fistpl
mov
in
jnp
sub
out
daa
ja
je
inc
bound
push
sbb
push
xor
fisubs
sub
add
inc
pushf
pminsw
inc
jp
and
sbb
jmp
inc
or
and
nop
mov
mov
lods
in
dec
xor
mov
cld
sub
inc
iret
pop
cmc
sub
cmp
lock
inc
xchg
add
stos
popf
cmp
inc
bound
xchg
pop
ss
pop
cld
fcoms
fstpl
cmp
pop
dec
int
pop
add
jae,pn
repnz
mov
rcrb
loopne
xchg
cltd
into
stc
test
rol
in
inc
and
or
inc
inc
sarl
inc
ret
dec
cli
inc
jae
addb
sub
pop
xchg
test
daa
adc
mov
sti
icebp
popf
and
movsl
ss
clc
mov
pop
lcall
fwait
mov
sub
loop
pop
jl
ret
ds
pop
adc
xor
call
stos
movsl
dec
outsb
sbb
add
test
ja
fisttpll
adc
mov
xchg
aaa
pop
lret
popa
jecxz
outsb
sbb
or
aam
jb
popa
push
out
pushf
mov
pusha
and
mov
xor
cmp
pop
mov
sbbb
lods
cmp
loope
or
popa
xor
out
in
jnp
lds
adc
sub
sub
mov
push
gs
pop
xor
fidivs
loop
xchg
add
and
mov
xor
cmc
test
mov
dec
xlat
mov
js
xchg
mov
je
les
andl
pop
cmp
pop
xor
mov
fcmove
add
cs
push
or
iret
dec
mov
push
inc
imul
and
call
out
xlat
xchg
jle
enter
push
mov
insb
movsb
loope
xor
ja
or
pop
shll
cmpsb
lcall
ljmp
and
mov
ret
add
lret
xchg
fstl
into
fcom
pushf
jnp
sub
shlb
ljmp
jmp
sbb
repnz
or
pop
addr16
addl
cli
dec
mov
cli
imul
push
loope
xor
cmp
add
push
andl
ss
jmp
or
pop
adc
add
cli
jne
dec
ja
mov
xchg
jb
fwait
jmp
in
pop
or
sub
jg
jg
dec
rcrl
das
mov
orl
jno
inc
iret
push
fbld
scas
xor
loope
icebp
jg
dec
rcrl
das
mov
orl
jno
inc
iret
push
fbld
scas
xor
loope
icebp
jg
dec
rcrl
das
mov
orl
jno
inc
iret
push
fbld
scas
xor
loope
icebp
jg
dec
rcrl
das
mov
orl
push
test
daa
mov
pusha
aas
xchg
das
xchg
mov
cmpsl
lret
mov
inc
out
pop
scas
pop
lahf
aaa
daa
call
ret
iret
addr16
xchg
das
xchg
mov
cmpsl
jg
outsl
pop
testl
lahf
aaa
andl
fbstp
xchg
mov
cmpsl
data16
ja
inc
testl
rclb
call
subb
add
inc
fcomps
fdivrs
sub
outsl
and
sub
push
movhps
mov
pop
jg
movsl
mov
shll
cmp
icebp
fisubl
arpl
jno
scas
and
stos
fbld
xor
ror
xchg
in
inc
dec
lret
mov
mov
or
ljmp
call
xchg
mov
out
cmpb
jnp
cmpsl
adc
mov
int3
scas
imul
out
mov
outsl
ja
js
xor
pop
adc
rclb
loop
fs
enter
inc
out
mov
xlat
add
js
shl
pop
andb
pop
inc
bound
pop
loop
fbld
mov
arpl
data16
xcrypt-ofb
cmpsl
push
notl
cmpsb
pop
mov
xchg
xchg
daa
out
testl
clc
dec
xchg
jnp
or
or
adc
ret
jae
pop
jmp
pushl
mov
xchg
dec
test
jg
adc
sbb
cld
outsl
lret
push
into
dec
pushl
sub
adc
aam
fbld
aaa
xlat
outsl
pop
testl
lahf
aaa
daa
call
inc
fbstp
addr16
xchg
das
xchg
mov
cmpsl
jg
outsl
pop
testl
lahf
aaa
daa
call
inc
fbstp
addr16
xchg
add
mov
sbb
and
scas
xchg
loop
movsb
mov
and
mov
mov
icebp
push
cmp
scas
sbb
xchg
inc
push
loopne
in
push
out
inc
divb
and
jecxz
popf
push
or
sbb
lds
and
mov
mov
insl
add
dec
loop
cmpsb
icebp
pop
and
mov
out
sbb
fchs
jmp
nop
pop
jmp
or
aam
fsts
popf
mov
sbb
in
dec
leave
aad
adc
adc
jae
or
bound
xchg
jae
test
xchg
andb
jp
and
push
fwait
das
and
fcmovnb
xchg
daa
add
push
sti
pusha
add
add
mov
stos
inc
dec
sti
fidivs
push
icebp
mov
lcall
mov
xchg
scas
xor
xor
sbb
call
in
adc
pop
mov
mov
js
inc
xchg
movsl
sub
xor
dec
test
jns
rorl
adc
fnstcw
cli
xor
inc
cmpsl
jl
loope
enter
pusha
std
cmpsb
imul
mov
xlat
mov
add
adc
mov
ret
repnz
test
rorl
cmp
xchg
rcrl
add
std
ficompl
bnd
sub
pop
pop
xor
xchg
add
push
inc
ret
xchg
loop
popa
or
mov
in
mov
jp
lods
rcl
pop
mov
cmpsl
mov
push
sbb
jle
mov
xor
fisubrs
pop
iret
outsl
es
mov
mov
das
or
je
je
mov
adc
mov
inc
dec
int3
push
lret
ljmp
movsb
lret
insb
jbe
mov
xchg
ret
arpl
cmp
push
lahf
push
xlat
flds
mov
lea
repz
mov
cmp
mov
add
sub
scas
inc
out
sub
outsb
loop
add
add
js
cmpsl
rcl
mov
push
cmpsb
push
inc
add
int3
sub
mov
std
out
push
push
loop
in
mov
or
pop
ret
ds
xchg
dec
std
pop
dec
test
and
xor
xchg
dec
jge
mov
das
cs
or
icebp
inc
mov
mov
push
and
jns
dec
scas
mov
sub
sub
test
repnz
out
mov
shlb
icebp
or
movb
cmp
aam
lea
inc
enter
and
mov
popf
ficomps
shrb
ja
dec
insb
sub
stos
pop
jl
and
scas
xchg
out
int
cmp
push
ret
iret
adc
scas
adc
shll
xor
cld
or
fcomps
adc
inc
mov
pop
das
sahf
inc
data16
xchg
push
flds
lcall
add
das
mov
enter
lods
cmpl
push
sub
xor
mov
shl
push
mov
push
pop
inc
xchg
push
loope
dec
bound
inc
out
test
jb
add
rcrb
inc
lock
jmp
ljmp
jl
cwtl
mov
enter
jg
test
jecxz
dec
lahf
out
push
jle
loope
sbb
repnz
sbb
sbb
and
out
mov
push
mov
sbb
push
add
stos
into
mov
push
insl
mov
and
mov
jmp
and
add
movsb
push
aam
sti
adc
fiadds
mov
sahf
insl
cmp
and
mov
dec
divb
mov
push
or
cmp
js
dec
push
inc
mov
rcll
inc
lret
sub
sub
inc
cli
jg
inc
sbb
in
mov
xor
sbb
xor
mov
gs
cmp
and
insb
jns
push
xchg
iret
cmp
push
mov
adc
xchg
lods
ljmp
xchg
mov
lahf
leave
xchg
jmp
ds
cmp
fs
inc
movsb
ret
pop
sti
pop
out
xchg
ror
and
outsl
dec
ret
addr16
or
rclb
and
in
clc
mov
repnz
adc
popf
mov
and
mov
mov
lods
lds
push
mov
push
out
stc
dec
mov
outsl
test
in
jne
xchg
mov
sub
aas
sub
xchg
pop
xchg
movsb
ljmp
call
dec
dec
inc
jp
jbe
or
rorl
mov
js
ds
std
subb
in
pop
mov
mov
ss
inc
addl
call
dec
xor
les
jl
fmul
xchg
and
jle
iret
mov
xor
jne
pop
sub
stos
int3
lea
cs
push
fisttps
pop
mov
loopne
fcoml
lods
mov
bound
data16
jno
push
shll
xchg
lds
xlat
push
out
sbb
adc
mov
pop
mov
leave
sub
pushf
pop
dec
mov
dec
adc
xchg
sub
cmp
in
mov
xchg
mov
sti
loop
gs
loop
xor
inc
popf
xchg
in
adc
fistpll
dec
lret
nop
pop
fidivrs
popa
push
pop
dec
mov
test
cmpb
roll
push
pop
into
fwait
rcll
mov
bound
in
lret
aas
clc
mov
dec
maskmovq
notl
push
xchg
pop
jns
pop
lret
xchg
pusha
push
jne
rol
jae
popf
aaa
dec
adc
pop
dec
adc
xchg
inc
push
in
sub
xor
xor
int3
call
int
arpl
pop
mov
in
and
xlat
data16
xor
pop
sbb
int3
pop
mov
pusha
mov
jg
dec
insl
dec
mov
ja
adc
adc
mov
jle
lods
sub
insl
mov
or
aas
test
incl
lea
arpl
test
xor
sbb
repnz
ret
movsl
and
hlt
xlat
out
jne
sbb
mov
cmc
ss
xchg
xor
dec
mov
jp
mov
pop
cmc
in
imul
mov
das
pop
jmp
lahf
jnp
sbb
xor
cmpsb
and
xlat
loop
lods
lahf
push
icebp
sbb
sbb
pop
nop
jle
pusha
ret
jecxz
call
ja
jge
mov
inc
popa
dec
lea
cmp
insb
fcmovu
ficoml
fdivs
xchg
or
test
sub
out
jecxz
bound
push
dec
dec
ror
test
scas
pushf
xchg
pop
js
frstor
sbb
push
loop
outsl
mov
repz
das
aaa
xchg
and
imul
mov
aam
fistps
adc
test
xchg
cmp
jbe
je
dec
pop
and
lcall
lds
push
mov
in
cmp
shll
ret
addr16
fldenv
xchg
sbb
sub
ret
inc
fucomp
ret
enter
arpl
adc
popf
add
inc
lret
out
cs
jle
dec
es
jae
clc
fs
enter
pop
leave
shrl
jp
mov
push
sub
pushl
out
test
addb
ds
ffreep
divb
lret
mov
shlb
cmp
inc
ret
in
mov
jl
mov
jmp
push
cmpsl
fidivrl
inc
cmp
aas
ret
jns
mov
scas
mov
mov
les
test
jecxz
mov
cwtl
rclb
add
repnz
imul
stc
movsl
ss
fcmovne
sbb
rclb
movsl
inc
aad
mov
pop
mov
sti
jne
out
fs
xor
add
loopne
pop
mov
jbe
pop
xor
cmp
sub
movsb
fmuls
mov
mov
ret
push
push
inc
jl
pop
xor
fdivs
shr
push
dec
push
sarb
fabs
stc
andl
dec
lods
shrb
add
shl
fsubrs
inc
push
push
xchg
aaa
cmp
jp
jne
sbb
or
leave
lods
mov
cmpsl
pop
jno
subb
push
dec
sub
xlat
loopne
int
and
scas
xor
and
scas
push
push
subl
lret
cmc
insb
push
dec
mov
add
sub
xlat
mov
mov
add
imul
xor
sub
cli
adc
aad
shlb
jge
fstpl
adc
xor
aam
addb
arpl
into
pop
mov
and
insl
and
in
jp
out
xchg
adc
mov
jle
adc
sti
jg
popa
pop
stc
pop
cltd
add
push
jbe
test
ret
enter
push
lds
aas
imul
out
jnp
xor
shlb
lods
or
mov
fsubrl
lret
xor
lea
ja
push
pop
cli
fimull
jl
into
loope
pop
or
cmp
cmpsl
das
mov
inc
add
inc
jg
dec
jmp
dec
je
pusha
fisubrl
ret
inc
call
test
mov
fidivs
cmp
out
push
std
dec
test
inc
subb
sbb
pop
shll
pop
mull
daa
int3
jo
cmc
mov
mov
xchg
jmp
xorb
cmp
pop
push
inc
les
out
mov
dec
je
xchg
mov
shr
daa
mov
push
divl
push
xchg
add
das
xchg
fimuls
jmp
scas
add
das
sti
mov
cli
in
mov
add
fdivrl
scas
aas
pop
lahf
push
cmp
push
sub
xchg
and
lret
pop
push
pop
fsubl
loop
xchg
and
pop
fsubrl
xlat
mov
andb
sbb
and
cmc
aam
ret
jmp
push
and
add
mov
imul
pop
jecxz
nop
ja
stc
jae
sbb
pop
inc
add
and
cmp
mov
rcrb
push
cmpl
push
mov
or
sahf
xor
lds
in
enter
in
orb
mov
addr16
cmpsb
dec
sbb
lds
and
hlt
scas
nop
cmp
pop
xor
and
loop
or
daa
ficoms
pop
pop
adc
push
pop
mov
enter
xor
rcrl
mov
fildl
jo
dec
lret
xlat
push
mov
out
and
rcrb
mov
xchg
mov
ret
call
call
pusha
dec
xchg
mov
pop
outsb
cmp
adc
inc
es
adc
in
test
add
jecxz
adc
insl
xchg
hlt
sbb
pop
sarb
rcll
bound
sbb
cmpsl
mov
into
aaa
into
xor
fs
dec
loop
push
test
sub
jne
or
in
pop
int3
inc
and
sbb
xor
mov
mov
rcrb
pop
adc
jno
or
rclb
dec
push
lods
lods
mov
push
push
dec
clc
jg
xchg
push
iret
neg
inc
mov
mov
arpl
shll
cltd
add
cmp
sbb
lcall
cli
xchg
jbe
mov
sub
aaa
dec
pop
aad
clc
inc
push
out
jge
pop
inc
push
mov
mov
popf
test
enter
add
push
shl
cwtl
pop
insb
mov
cwtl
mov
and
hlt
dec
es
out
inc
shlb
inc
aas
push
pop
rcl
pop
in
imul
cltd
pop
and
cmp
test
pop
rcrl
jbe
xchg
insl
dec
out
mov
mov
addl
shlb
pop
push
outsl
push
scas
cmpl
fstps
jb
mov
push
or
cmp
dec
test
mov
rolb
push
adc
sbb
or
add
xchg
xchg
dec
inc
sub
je
mov
mov
sub
and
and
xchg
jb
push
inc
add
outsl
cmpsl
xor
adc
cwtl
xchg
nop
xor
mov
cmp
aas
in
mov
mov
add
pop
shl
mov
adc
mov
dec
repnz
dec
outsb
mov
daa
sbb
pusha
dec
movsb
mov
sbb
jmp
in
int3
or
clc
cmp
ret
out
push
mov
push
add
out
dec
hlt
hlt
fadd
mulb
inc
sbb
pop
mov
testl
sbb
js
sub
adc
mov
ret
out
inc
ret
imul
dec
in
hlt
sbb
jge
loope
xor
notb
movsl
orl
aad
addr16
in
scas
adc
gs
xlat
sbb
popf
add
vfrczpd
or
shlb
pop
sbb
sbb
mov
call
dec
ds
lret
dec
add
cmp
jl
in
mov
sub
jno
cmpb
fcmove
call
adc
jae
out
ss
xchg
jp
testl
mov
fdiv
les
in
jb
repnz
xchg
xchg
lcall
add
mov
push
push
xor
mull
out
xor
cmc
dec
and
jp
hlt
xchg
inc
lret
pop
xchg
xchg
mov
les
mov
inc
test
mov
jns
ret
fdiv
inc
sbb
fldl
outsb
sub
fidivrl
jo
cmp
mov
dec
jg
in
pushf
mov
push
jecxz
movsb
sahf
dec
stos
cmp
xor
nop
stos
inc
daa
movsl
dec
call
xchg
aad
dec
cld
sub
jno
push
nop
ficompl
sahf
sbb
and
pop
xor
dec
fstl
inc
lods
nop
xchg
sahf
xor
icebp
push
mov
inc
xchg
mov
sbbl
cmp
sahf
mulw
and
dec
movsl
lods
jmp
push
insl
adc
xchg
arpl
insb
adc
pushf
xor
cmp
stos
jmp
loope
lahf
js
xor
jne
fmul
shr
or
or
in
sbb
cwtl
pop
adc
push
sub
popa
stos
and
ret
fistl
inc
nop
lods
fs
cmc
mov
sbb
inc
mov
adc
cmp
or
mov
cmp
mov
push
into
and
sub
enter
test
int
aad
ss
rcrb
pop
outsl
xor
fsubl
mov
les
cmp
aam
jl
sub
aas
and
dec
mov
push
mov
stc
stc
and
in
test
ljmp
icebp
pusha
sub
jle
mov
in
popf
cmp
dec
xchg
in
xorb
dec
pop
and
mov
outsb
pusha
in
jo
enter
loop
fcoms
test
push
jno
jg
pop
pop
sbb
xor
mov
js
add
sbb
out
pop
stos
mov
fs
in
sub
add
sbb
add
sub
jmp
jg
sub
ret
pop
inc
add
mov
mov
cmpl
arpl
mov
cld
adc
fisubl
mov
jbe
mov
test
les
or
sub
daa
adc
arpl
out
sbb
fdivrl
jo
xchg
movsb
rcl
movsl
and
inc
shl
nop
push
sbb
in
test
jp
sub
mov
ret
cmpsb
shlb
out
outsl
mov
jmp
mov
fbstp
fdivs
push
es
ja
mov
ficompl
test
adc
dec
push
jmp
mov
or
lea
call
aam
repnz
imul
int
bnd
pop
inc
imul
pop
xchg
in
jg
push
ret
ret
cmp
jns
xchg
pushf
pop
mov
cltd
shlb
push
pusha
out
outsb
mov
nop
pop
mov
push
mov
mov
jl
xchg
cmpsl
sub
pop
jg
call
in
adc
adc
rcrb
cmp
ljmp
cmp
jp
and
sbb
rcr
add
out
out
mov
lds
cmp
repz
push
add
mov
pushf
jmp
int
or
jecxz
loopne
and
cmp
add
sub
loope
sbb
xchg
lods
lods
and
jo
push
sub
pop
fmull
mov
sub
xor
je
rcl
leave
mov
out
mov
js
je
mov
jg
xchg
adc
xchg
sub
fdivs
std
jno
mov
push
and
movsl
ror
push
inc
lahf
push
loop
cli
subb
jmp
popa
and
cltd
icebp
cli
addr16
adc
mov
daa
repnz
pop
jge
insb
daa
shl
sub
mov
mov
fstl
in
lock
push
pop
movsl
cmp
or
jb
sub
push
lea
inc
leave
inc
scas
cs
out
inc
mov
and
add
jmp
ljmp
mov
push
in
cmp
xchg
arpl
mov
sbb
shl
test
dec
or
adc
ja
xchg
adc
hlt
je
je
add
dec
dec
fiaddl
shr
mov
jecxz
es
mov
cmp
jo
into
push
fnstenv
inc
mov
shll
xor
inc
sti
add
cmp
mov
outsb
mov
xchg
mov
add
cmpb
sarb
cmpsl
mov
into
jle
push
aad
insl
fcmovnu
adcb
hlt
cmp
pushf
fiadds
dec
dec
jg
dec
sti
fwait
out
hlt
movsl
insl
dec
fisttpll
in
call
int3
and
dec
fimuls
fwait
je
mov
rcrl
insl
rorb
dec
mov
xchg
sarl
ljmp
sub
jp
or
and
dec
mov
mov
cmpsl
cld
pop
je
pop
fimuls
mov
sub
adc
xor
cwtl
xlat
sub
push
cmp
std
push
jge
outsl
sti
mov
popa
popf
das
jae
fst
pushf
jns
out
std
lea
mov
xor
jae
mov
loope
inc
iretw
hlt
xor
jns
inc
jnp
std
pop
and
mov
stc
aam
daa
jg
outsb
mov
lock
in
mov
add
jae
rcrb
xchg
cs
mov
nop
in
adc
xchg
sbb
pop
xlat
in
adc
les
jge
imul
repnz
xor
sahf
and
out
mov
stos
sub
movsl
sub
xor
rorl
sub
pop
mov
test
nop
adcb
test
mov
mov
out
inc
lock
xchg
popa
dec
sbb
pushf
dec
into
xchg
mov
enter
pop
or
iret
jnp
push
pop
movsb
adc
cmpsl
pop
fs
arpl
out
and
pusha
pushf
dec
push
cmp
lret
jno
dec
jo
lret
call
pop
gs
pavgb
gs
xchg
stos
adc
cmpl
cltd
lods
addr16
mov
out
cmpsl
movsl
adc
call
and
int
insl
or
sets
pop
ja
xchg
jns
mov
push
das
ret
push
add
fdivrs
out
cmp
pop
pop
mov
ds
jbe
mov
sub
push
adcl
ljmp
inc
enter
lock
scas
out
pop
sbb
pop
out
lea
rolb
ret
mov
subb
ret
pushf
cmpsl
or
mov
mov
xchg
repnz
lock
dec
outsb
adc
dec
dec
mov
lret
inc
sbb
scas
mov
negb
mov
psubq
roll
mov
jb
fisubs
std
push
mov
test
jmp
aam
mov
dec
cmc
aad
stc
scas
clc
fcomps
cmp
sub
pop
add
arpl
insl
cld
adc
pop
loop
mov
hlt
sub
push
sbb
fbstp
leave
fs
imul
jb
xlat
ret
stos
shlb
dec
xor
scas
add
mov
push
out
sub
push
push
insb
in
xor
stc
jg
cmp
mov
adc
das
xor
repnz
out
faddl
loopne
mov
imul
ffree
xchg
pop
divl
inc
cmp
mov
mov
ds
push
lea
pop
inc
sub
out
mov
test
arpl
cmp
jnp
sbb
imul
dec
jg
lcall
into
ljmp
or
insb
mov
push
pusha
mov
lea
pop
jns
fcmovne
pop
smsw
inc
rclb
mov
sbb
xor
pop
sbb
stos
sbb
or
push
mov
clc
mov
inc
mov
into
adc
xor
int
xor
and
mov
outsb
shll
lret
adc
xor
pusha
pusha
or
inc
push
dec
out
mov
mov
mov
ret
std
pusha
mov
mov
sarl
sarb
repnz
stos
pop
xor
rclb
xor
pop
ret
xchg
xlat
outsl
pop
testl
lahf
aaa
daa
call
inc
fbstp
addr16
xchg
das
xchg
mov
cmpsl
jg
outsl
pop
testl
lahf
aaa
daa
call
inc
fbstp
addr16
xchg
das
pop
pop
aaa
jg
outsl
inc
pop
testl
lahf
aaa
daa
call
inc
fbstp
addr16
xchg
sub
cmpsl
jge
outsl
fcomip
iret
out
pop
push
lods
xor
fbld
and
rcrb
jmp
iret
clc
adc
cmp
adc
pop
xor
js
mov
cwtl
shrb
fdivs
or
adc
mov
mov
push
fstps
mov
cltd
shrb
dec
and
dec
ss
ds
js
mov
icebp
mov
daa
jl
xorl
stos
cmpl
mov
das
and
aad
f2xm1
and
inc
push
inc
jg
inc
bound
cltd
mov
cmp
lods
xor
mov
sahf
sbb
push
lea
mov
lcall
cwtl
adc
xchg
sbb
mov
out
enter
sbb
jo
leave
adc
mov
jns
push
xchg
pop
shr
and
mov
mov
cmp
push
sarb
insl
jae
repnz
push
rorb
or
cmp
adc
adc
mull
mov
mov
add
jns
or
dec
xor
sbb
in
movsl
cwtl
xchg
test
in
mov
test
xchg
and
inc
pusha
add
push
jl
or
inc
adc
xchg
fsub
mov
fmull
jns
pop
adc
aaa
inc
add
sbb
xchg
leave
loopne
call
call
inc
sbb
pusha
cmp
dec
add
push
rcrb
enter
call
inc
sbb
pusha
cmp
dec
add
push
add
test
cmc
lods
mov
jle
xor
mov
mov
cmp
mov
loop
js
push
pop
pop
dec
scas
lret
int
pop
sarb
sub
mov
cmpsb
fxch
add
xor
adc
xchg
sarb
fadds
push
sbb
push
out
fcompl
stos
adc
mov
int3
cltd
jmp
add
pop
loop
in
and
cmp
lahf
mov
mov
add
mov
adc
jg
mov
mov
rorl
divl
ffree
lahf
ret
and
enter
into
cs
sub
data16
add
mov
test
jp
sbbl
mov
inc
mov
ret
insb
xorb
add
cmp
adc
pop
xchg
call
icebp
xchg
jge
jl
aam
add
insl
mov
test
mov
daa
dec
jae
fstpt
cwtl
iret
test
add
sti
jo
dec
cmc
ror
pushf
arpl
gs
xchg
je
mov
int3
pop
xchg
mov
movsl
mov
xchg
mov
xchg
shlb
repz
xchg
icebp
int
data16
les
add
int3
xchg
fdivl
aaa
call
cmc
scas
sub
ds
jle
cs
repz
adc
pop
dec
pop
mov
xchg
mov
inc
xchg
out
ret
adc
pop
mov
pop
xchg
loop
push
and
sbb
fnsave
push
test
pop
fs
lret
fimuls
mov
jbe
daa
mov
daa
push
arpl
jb
xchg
pop
and
or
inc
rorb
insl
mov
loope
in
es
addb
mov
sahf
stos
imul
loopne
int3
pop
mov
and
jb
subl
scas
stos
scas
inc
jns
mov
sub
das
inc
stos
outsb
adc
popf
push
mov
stos
jb
loop
mov
jns
cli
loop
rolb
imul
aas
mov
imul
sbb
mov
mov
xchg
cltd
rcrb
ds
add
sbb
loop
sub
mov
xor
test
nop
outsb
in
stos
ret
insb
ret
cmp
xchg
sbb
mov
scas
iret
insl
push
loope
mov
push
ds
leave
ret
push
push
push
mov
sti
iret
push
test
andb
mov
int3
and
sub
mov
jmp
daa
sahf
xor
push
ja
ret
jb
aam
xchg
int3
xor
mov
xchg
add
mov
in
mov
pop
xchg
rolw
icebp
mov
cmp
push
jae
xor
enter
push
out
dec
jle
sbb
lret
sub
idivl
mov
push
and
in
jne
ret
pop
mov
xchg
test
div
roll
add
adc
pop
clc
fists
lret
loope
add
loope
jbe
fdivl
cltd
dec
movsl
sbb
je
xor
sub
jecxz
sub
ss
sahf
ret
mov
popf
sub
fwait
inc
dec
rcll
lcall
sbb
fists
push
cmpb
jmp
lds
dec
out
fcmovbe
push
xorl
pop
fisttps
test
sbb
sub
mov
imul
inc
mov
xor
xchg
imul
pop
orb
inc
add
sub
divl
fwait
push
pop
pop
cmpsb
mov
mov
add
arpl
push
hlt
shl
test
test
lahf
orl
jmp
or
fsubrs
push
repnz
jecxz
dec
and
loopne
or
movsb
les
jns
mov
ret
incb
add
mov
dec
dec
mov
movsb
fisttps
test
mov
icebp
aam
push
pop
aas
mov
lret
jb
cmpsb
addr16
shl
cli
dec
ret
sub
sbb
test
stc
sbbb
clc
es
icebp
jl
xor
daa
sysexit
inc
into
shr
sbb
sbb
repz
or
sub
sub
fistpl
cmp
fwait
or
sahf
xor
adc
daa
xchg
es
das
and
aas
mov
arpl
iret
cmc
sahf
jne
ja
fcom
jne
inc
cmp
xor
jb
jne
aas
aam
jo
mov
nop
add
add
movsl
adc
imul
imul
mov
fwait
mov
stos
inc
insl
push
adc
nop
jne
inc
cmp
or
push
jns
ret
rcll
xor
add
imul
mov
adc
xor
xchg
or
pop
dec
lea
and
adc
jmp
out
lret
fs
lea
mov
cli
jb
add
dec
jmp
cmp
popa
cwtl
ret
sbb
mulb
pop
sbb
fdivrs
add
pop
outsl
push
jmp
stos
andb
mov
fisttpl
repz
jb
xor
loop
sub
xor
jge
cs
decb
stos
dec
lcall
dec
mov
icebp
sbb
dec
mov
sbb
jge
sub
fisttps
mov
jge
xchg
mov
enter
movsb
call
xor
nop
lcall
xorl
pop
in
jge
addr16
add
rep
cmpsb
mov
fs
or
pop
push
adc
add
scas
pop
aaa
imul
insb
stc
sub
mov
inc
cmp
jle
or
sub
add
sbb
fidivrs
inc
and
inc
shll
push
mov
pop
xchg
xchg
push
ljmp
and
cmpsl
ss
push
shrl
shr
or
xor
jne
pop
add
ret
jle
pop
sub
bnd
xchg
xchg
push
dec
lods
insl
inc
and
jo
mov
pop
loope
sub
scas
or
out
outsl
pushf
inc
scas
loop
fs
call
adc
and
and
jno
cmpsb
aam
dec
and
hlt
mov
push
or
daa
mov
dec
inc
xorb
inc
repnz
test
mov
pop
loope
pop
pushf
push
push
pop
aaa
xor
push
cmpsl
pop
pop
lds
push
and
xlat
in
mov
pop
int
jo
faddp
mov
xchg
das
icebp
sbb
adcb
adc
mov
jo
sub
xchg
jp
cmc
fs
push
mov
push
mov
cmpl
js
push
testb
jecxz
cmpsl
es
sarb
dec
test
mov
jecxz
aas
repz
adc
lods
stos
xor
mov
imul
rcrb
rcl
mov
loop
jnp
and
loope,pt
rclb
add
outsl
or
pop
jge
lret
imul
aaa
lea
cmp
sbb
xor
pop
fs
push
xchg
lods
jnp
cmpsl
push
stc
push
push
insb
dec
dec
out
pusha
mov
add
inc
imul
mov
movsl
setl
cmp
jb
sbb
pop
dec
push
fisttps
jl
xor
inc
mov
imul
lahf
nop
popf
push
dec
insl
adc
stc
lods
iret
dec
push
aad
push
sbb
push
aaa
insl
inc
push
sub
rcr
push
pop
fdivrs
or
jne
mov
mov
je
sbb
shll
sub
sub
xor
fwait
adc
andb
push
push
das
fldcw
pop
jbe
les
xor
dec
jno
or
mov
iret
mov
push
stos
notl
arpl
cltd
cmpb
mov
movsl
jge
adc
cld
mov
fwait
push
or
and
das
insl
sbb
push
clc
insl
fdivs
dec
mov
cmovp
dec
sbb
addl
cltd
xlat
push
xorb
ljmp
add
out
or
or
or
sbb
mov
xchg
icebp
stc
sbb
jbe
xchg
adc
pop
lcall
es
ficoml
pop
dec
jo
cld
xor
cs
mov
sahf
jnp
subb
rcll
test
aad
jge
and
pop
inc
test
out
clc
ret
repz
adc
inc
pop
mov
les
jmp
inc
or
filds
ficoml
shrl
arpl
jno
dec
test
or
cmpsl
bound
fildll
fwait
out
cmp
mov
push
push
mov
cwtl
scas
out
scas
sbb
addb
and
sub
std
cmp
mov
repz
imul
andb
push
mov
adc
push
repnz
push
ljmp
out
mov
sti
movl
out
and
iret
int3
call
fidivrl
out
and
pop
aaa
cmp
iret
inc
xor
mov
adc
sub
and
fwait
or
xchg
popf
mov
and
add
fwait
int3
shlb
add
jp
push
xor
sbb
into
dec
sbb
pusha
gs
lods
test
je
jne
inc
push
in
sbb
fisttpll
adc
int
mov
lds
mov
cld
inc
or
mov
lds
outsb
push
jbe
stc
mov
daa
xor
gs
loope
ret
dec
sbb
cmp
mov
bound
and
aad
sub
aad
in
inc
addl
or
out
je
push
lods
fcmovne
xchg
adc
adc
mov
sub
mov
stos
lods
sar
mov
leave
in
xchg
sub
ljmp
int
dec
dec
jo
fstl
push
sbb
inc
icebp
test
push
and
scas
pop
ds
adc
cmp
adc
push
jmp
adc
in
xchg
inc
mov
jp
shrb
cwtl
mov
imul
xchg
cmp
cmc
xchg
mov
adc
jp
inc
inc
test
mov
aas
xchg
outsl
adc
gs
xchg
sti
cltd
pop
cs
js
andb
in
fwait
add
aas
cwtl
mov
push
lcall
push
dec
sub
dec
ss
loope
lret
cmp
jle
push
adc
sbb
dec
test
mov
or
push
stos
pop
lahf
jl
xlat
mov
in
sbb
push
mov
cmp
adc
mov
mov
inc
adc
nop
test
mov
or
lds
xchg
push
adc
pop
dec
stos
mov
add
sub
xchg
bnd
daa
gs
xchg
xor
add
cmp
and
lret
cwtl
or
dec
pop
test
out
mov
fwait
xor
pop
xor
lea
or
pop
dec
clc
leave
addl
fbld
shl
mov
sbb
sub
jbe
push
jbe
dec
add
jbe
idivl
clc
call
dec
mov
or
es
or
or
nop
sbb
cmp
rorl
insb
int3
xor
test
jae
fmul
sar
rcll
iret
in
and
jbe
rcrl
pminsw
jge
sub
adc
out
cmpsb
ret
cmp
or
adcl
xchg
cmp
daa
aad
loop
push
shrl
cli
jno
mov
fcompl
inc
fldenv
dec
sbb
outsl
in
stc
mov
cmp
into
js
sub
in
lcall
mov
popf
adc
jmp
pop
push
dec
gs
lahf
fdivrl
xor
mov
insb
mov
nop
inc
inc
mov
or
sbbl
mov
mov
ja
adcl
push
outsb
mov
arpl
xor
roll
xchg
mov
fs
test
fsubrs
adc
sbb
out
add
hlt
aad
int
pop
add
ljmp
movsb
adc
jge
sbb
lock
xor
jnp
loop
lret
xor
mov
jae
jl
pop
and
sbb
pusha
cltd
enter
aad
xchg
mov
jg
int
movsb
sahf
cld
dec
xor
xchg
roll
incl
cmpsl
addl
inc
lret
adc
in
push
inc
adc
and
and
add
mov
adc
outsb
jecxz
adc
inc
sti
rcll
pop
xchg
xchg
jg
and
or
inc
mov
xchg
repz
sahf
mov
test
or
jae
outsl
sub
loope
loope
cmpsb
dec
and
fdivl
ja
loope
pushf
or
shl
pop
nop
mov
inc
in
je
pushf
ja
test
in
mov
or
mov
dec
mov
data16
jmp
lret
hlt
mov
les
fdivrs
rclb
jb
fcmovne
add
cmp
add
fidivrs
test
lret
pop
push
loope
test
dec
mov
mov
jg
in
clc
adcl
mov
jnp
int
sbb
in
fsubs
mov
jmp
mov
int
lcall
lcall
push
xor
call
add
and
jg
inc
loopne
jo
testl
pushf
inc
fstl
inc
rep
and
xchg
icebp
jns
mov
dec
inc
fldenv
cmp
push
push
aad
xchg
popf
fsubr
push
jo,pt
lcall
rcrl
sub
add
push
imul
adcl
jle,pn
add
push
lods
cwtl
adc
data16
xor
cmp
out
adc
aad
sahf
mov
dec
das
icebp
lea
outsl
xchg
sbb
jns
mov
js
call
dec
lret
ud0
pushf
push
xchg
mov
adc
dec
mov
push
adc
jmp
repnz
fwait
add
loop
push
les
nop
ds
idiv
add
cmp
mov
adc
test
lock
adc
xor
mov
xor
popf
popf
pop
out
push
push
push
ret
mov
leave
fisttpl
sub
sti
jge
pusha
cmp
adc
cmpb
shl
mov
sub
xlat
add
fs
fs
cmp
sbb
xor
lret
push
mov
lock
push
mov
repnz
mov
mov
xrelease
inc
jns
clc
scas
lods
imul
jle
sub
pop
stos
dec
xlat
fs
cmpsl
push
fisubs
push
sub
push
loopne
arpl
dec
in
es
xchg
int3
cmpsb
adc
ss
pop
lds
out
jne
addr16
push
sti
xchg
mov
test
adc
ret
adc
out
and
decw
push
lret
mov
sub
ret
std
or
fnstsw
in
and
adc
rclb
xlat
ljmp
fstps
dec
dec
xchg
jmp
shrb
mov
push
sbb
stos
sahf
lret
sub
xor
das
push
inc
lds
sar
push
lcall
jno
cwtl
mov
mov
cmp
pushf
cmp
xchg
or
mov
jne
inc
cmp
xor
jp
jmp
jmp
dec
adc
loopne
aad
xchg
lock
and
mov
ss
addr16
push
sbb
test
sbb
xor
sahf
bound
dec
enter
aas
addr16
pop
mov
ds
insl
push
and
out
ds
mov
outsb
mov
icebp
fs
xor
fistps
loop
adc
in
iret
out
and
mov
into
ds
sub
sahf
popf
mov
push
es
mov
dec
aaa
inc
stc
dec
aaa
rcrl
mov
cmp
inc
push
mov
imul
sub
stos
sbb
cld
lock
int
inc
lds
jno
fs
stos
les
jae
push
xorb
leave
sub
cmpsl
jle
jbe
rclb
sbb
negb
and
mov
sbb
push
push
in
cld
dec
jno
push
sbb
ljmp
xchg
bound
adc
leave
or
rclb
loopne
cmp
test
add
cli
insb
lods
jo
adc
popa
inc
xor
int3
sbbb
mov
inc
sbb
aam
popf
movsb
push
sahf
push
xchg
nop
adc
leave
mov
xchg
jo
scas
lret
dec
jecxz
dec
xchg
js
decl
data16
jge
pop
xchg
fists
leave
lods
adc
pop
mov
cmp
in
mov
aam
push
and
mov
outsl
call
lahf
subb
cli
cmp
jle
push
pop
ljmp
mov
jecxz
mov
cmp
outsb
loope
xor
pop
inc
inc
add
loopne
jmp
lods
rcrb
pusha
popf
mov
and
jmp
mov
or
mov
in
lods
and
inc
in
das
fwait
std
mov
stos
xor
lods
sbb
fiaddl
lods
cmp
jle
mov
call
out
pop
pop
pop
add
cmp
cltd
shl
fildll
inc
into
adc
clc
and
fwait
sbb
push
ret
sub
movsb
push
jmp
fldt
dec
lahf
aam
nop
jecxz
ret
jns
bound
mov
and
mov
dec
fwait
and
xchg
jb
xchg
jne
dec
subl
jo
lret
lret
add
fnstsw
popa
inc
dec
shll
push
jl
jns
or
push
call
bound
mov
pop
shrl
or
xchg
gs
mov
fwait
idivb
add
nop
jo
int
test
cmpsl
mov
pop
in
dec
dec
adc
stos
or
pop
inc
stos
sbb
lcall
or
arpl
cmpsb
idiv
lods
jne
jecxz
nop
decl
fidivrs
jnp
jmp
push
pop
jb
mov
cmpsl
dec
bnd
xor
pushf
cltd
enter
sub
ja
outsb
sbb
and
repz
xor
jmp
flds
sahf
fcom
inc
jecxz
push
sbb
arpl
sti
xor
out
mov
loopne
imul
out
fwait
jmp
sub
sarl
adc
data16
sbb
mov
jge
ds
sub
popa
imul
xor
adc
ss
imul
jno
pop
addr16
jecxz
adc
dec
cmp
cli
cltd
pop
adc
mov
sbb
cli
pop
test
jg
mov
cwtl
imul
je
in
insb
and
arpl
addr16
into
cld
adc
divl
dec
cltd
out
xchg
lcall
mov
cmp
fldl
test
addr16
pushw
sbb
aad
add
mov
stos
loop
sahf
insl
icebp
loop
mov
xor
xchg
jns
outsl
add
cmc
mov
scas
push
mov
pop
out
sub
leave
xchg
sbb
pusha
push
xchg
xor
popf
shlb
fcoml
pop
scas
cs
arpl
or
bound
repz
leave
pop
nop
sub
imul
sahf
cmp
rcl
mov
mov
icebp
sub
icebp
outsl
adc
xor
cmp
lcall
adc
aad
cmc
push
sbb
mov
mov
jle
in
ret
lcall
out
xchg
aas
jl
pop
int3
lret
mov
adc
and
daa
fisubl
scas
aaa
mov
adc
sub
fimull
dec
test
loop
cmpsb
imul
std
inc
push
sub
mov
jge
in
repz
out
mov
shrb
sub
xor
lods
and
shll
jo
jecxz
add
movsl
in
jae
dec
xor
leave
and
mov
nop
mov
aaa
scas
enter
inc
push
pop
mov
jo
xchg
jg
js
xorb
ds
neg
out
subl
sbb
pop
add
jp
stos
mov
adc
rorb
test
mov
test
ret
pop
das
ficoms
cmpsl
dec
xchg
jno
lcall
adc
fcoml
sub
add
sub
iret
cwtl
push
outsb
ficomps
push
int3
je
push
in
mov
dec
and
xchg
sbb
es
test
push
faddl
es
mov
jbe
cmp
imul
cld
or
push
shll
xchg
mov
ret
lret
jecxz
sbb
pop
lret
testb
or
into
aas
fs
mov
pop
mov
sbb
jb
mov
cmpsb
lahf
or
je
add
fisttpll
movsl
push
cmp
jne
js
ret
icebp
push
aaa
fs
mov
fucomp
lret
decl
dec
ds
mov
jnp
add
xor
sbb
sahf
rcrl
or
jae
test
sti
cld
aad
rol
leave
iret
repz
int
out
xor
push
sti
outsb
insb
stc
fnsave
mov
jno
sbb
mov
and
movsl
insb
jb
jg
fildll
and
dec
or
mov
lret
add
lock
or
inc
xor
mov
xor
add
jmp
adc
mov
mov
xor
arpl
cmp
xchg
mov
das
xchg
or
frstor
mov
cwtl
push
inc
loopne
nop
enter
call
inc
sbb
pusha
cmp
dec
add
push
rcrb
enter
call
inc
sbb
pusha
cmp
dec
add
push
rcrb
enter
call
inc
sbb
cmp
dec
add
xor
js
mov
cwtl
test
mov
xor
and
scas
or
dec
rorb
filds
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
movsl
cmpsb
mov
test
xchg
mov
fcom
es
aaa
cmp
push
adc
ja
push
push
push
movsl
cmpsb
mov
test
cmc
test
aad
and
pop
adc
jbe
inc
push
push
movsl
cmpsb
mov
test
cmc
test
aad
and
arpl
and
sub
and
shr
aam
test
cld
repz
shr
movsl
push
lret
adc
out
incb
lods
mov
dec
cmpsb
jp
push
jnp
dec
cmp
leave
sti
stc
ljmp
incb
pop
mov
jbe
push
fcoml
stos
daa
cmp
sbb
and
adc
cltd
decb
lret
push
lcall
xchg
rorb
aad
aad
mov
xchg
xor
xor
push
mulb
dec
add
fwait
sbb
sbb
xchg
pop
and
cmp
push
xor
cs
mov
decl
mov
test
lds
es
cmc
jae
jmp
addb
data16
mov
test
cmc
test
aad
and
push
adc
jbe
inc
push
adc
cmpsb
iret
ret
rcl
andb
mov
jbe
push
data16
xor
and
into
aam
andb
clc
push
inc
push
inc
js
adc
loopne
and
add
out
in
jecxz
out
mov
aad
and
push
adc
jbe
inc
push
push
movsl
cmpsb
mov
test
cmc
test
aad
and
push
adc
jbe
inc
push
push
movsl
cmpsb
aam
sbb
ljmp
xchg
dec
xor
je
rorl
jns
in
cmp
xchg
fsubl
mov
mov
jo
pop
xorb
mov
hlt
pushf
add
adc
push
pop
pop
xchg
cmpsl
test
inc
sbb
movsl
out
xorb
lret
cmp
sbbb
jecxz
jns
fsubrs
stc
scas
sbb
jnp
cmp
loope
push
or
scas
pop
das
sub
mov
jge
xchg
cli
or
pop
mov
add
sbb
cs
sbb
push
bound
frstor
mov
dec
mov
loop
enter
icebp
adcl
not
add
sbb
sub
add
les
icebp
enter
mov
repnz
mov
mov
adc
in
enter
les
mov
mov
fildll
mull
addl
add
xor
movl
or
and
and
lahf
or
adc
fsubl
adc
ficoml
xchg
movsb
outsb
sbbl
popa
push
fadd
xlat
movsb
arpl
push
inc
cmpsb
outsl
push
inc
mov
add
ja
fsub
sub
and
iret
jnp
mov
ds
sti
arpl
jne
sahf
sub
negb
xchg
pushf
std
dec
icebp
xor
aaa
cltd
sub
adc
mov
shll
or
jecxz
ficompl
stc
fmul
push
jg
pop
test
data16
jle
xchg
pop
leave
insl
inc
lds
dec
movsl
jbe
test
in
sub
out
lods
mov
xadd
push
pop
pusha
fwait
fmull
test
in
inc
aad
push
jmp
push
cmp
push
dec
inc
mov
out
mov
xchg
shll
repz
test
dec
fdivr
pop
xor
mov
mov
push
mov
filds
mov
inc
jns
clc
add
sub
fs
cmp
push
insb
jmp
xchg
inc
mov
fsubrl
jg
mov
dec
and
xchg
cmpsb
sbb
out
cwtl
mov
mov
jbe
cltd
shl
cmp
popw
cmp
pop
jle
ret
notb
sbb
daa
cmp
gs
sbb
inc
mov
and
xor
inc
loopne
xor
arpl
ficomps
xor
xchg
test
test
lods
popf
ja
inc
push
cmp
xor
lret
lea
ja
les
aas
rclb
xchg
mov
ds
out
into
xor
fs
js
cld
std
jmp
sbb
xchg
cmp
pushf
push
sbb
test
push
into
cmp
incl
getsec
cmp
xchg
stos
incb
fimuls
int
push
mov
int3
movsl
or
maxps
adc
xor
ljmp
mov
cmp
push
fcomip
jge
cmpl
mov
jne
sub
data16
xor
cmc
add
bound
sbb
mov
lret
stc
pop
loopne
xor
ret
dec
ret
out
pop
stc
insl
mov
mov
sbb
cmp
jb
incl
aam
mov
xchg
imul
push
jnp
nop
pop
mov
mov
inc
xor
mov
jns
push
popa
scas
ds
pop
arpl
mov
in
jae
mov
jg
daa
cmp
rcrb
clc
aaa
or
orb
sbb
lock
mov
imul
subl
dec
in
inc
stos
repz
add
movsb
xchg
jl
or
adc
pop
sbb
push
xchg
sub
cli
cmpsb
ficompl
imul
add
pop
pop
dec
push
test
jno
mov
push
sbb
sbb
rcll
aam
mov
jmp
movsl
dec
mov
gs
nop
jne
outsb
xor
icebp
out
or
mov
cmp
cmpsb
push
dec
rclb
bound
push
std
sub
lret
mov
lret
iret
dec
xor
sub
rcrb
aam
mov
aam
or
adc
jae
mov
xor
out
push
cs
leave
dec
add
cmpsb
in
pop
in
movsl
ja
lret
hlt
dec
dec
adc
inc
stc
lods
cmc
aam
mov
jge
xchg
jle
dec
nop
int
sub
sub
xchg
xlat
cmp
test
stc
mov
orb
out
pop
dec
mov
dec
fisttps
jns
imul
mov
jnp
push
icebp
test
sub
cmpsb
inc
push
cmp
lahf
orb
data16
mov
jne
xchg
and
adc
pop
shll
jnp
pop
xor
and
or
das
mov
add
cli
das
mov
fsubrs
sti
fisubrl
shr
sti
sarb
xchg
rcrb
call
dec
jno
dec
xchg
xlat
imul
push
mov
outsb
dec
sbb
roll
addl
adc
jge
repnz
int
cmpsb
or
and
lea
in
add
sti
push
aaa
ret
sbb
sti
cmpsb
jle
pop
data16
mov
dec
out
xchg
mov
insb
sub
jmp
roll
repz
push
push
xor
enter
cmpsb
pop
jbe
mov
subl
enter
xlat
dec
int3
push
loop
xor
inc
lods
je
out
dec
push
pop
and
popf
loope
mov
or
push
adcb
adc
ret
sub
pop
add
loop
push
mov
and
push
pop
push
and
mov
popa
xchg
pop
add
pop
ss
ljmp
in
mov
incb
daa
and
jo
mov
gs
jb
sub
in
jnp
sarl
lods
inc
into
adc
sbb
pop
add
iret
sub
mov
es
pop
mov
cltd
pop
xor
inc
cmp
pop
mov
or
hlt
adc
mov
inc
int
cli
addr16
push
movsl
aas
lret
inc
in
mov
out
pop
mov
pop
shll
sbb
and
mov
je
adc
push
jne
jge
movsb
jo
aaa
add
push
add
inc
pop
mov
cmp
pop
sbb
subl
push
mov
cmp
push
popf
mov
push
xchg
movsl
sahf
data16
movw
mov
test
daa
sbb
xor
cmp
and
or
cmp
movb
pop
xor
mov
push
cmp
cmp
xchg
aad
mov
pop
in
jno
cmp
negb
inc
jg
cli
faddl
sub
bound
xchg
pop
jmp
test
jecxz
pop
lods
jno
xchg
xchg
cli
int
std
cmp
xchg
or
push
cmp
repnz
testl
scas
inc
fdivp
pop
push
test
bound
or
sbb
mov
dec
jmp
nopl
mov
mov
add
cltd
dec
roll
rolb
sub
mov
sbb
xor
sub
push
repnz
inc
sbb
xchg
loop
ret
inc
loop
icebp
xchg
out
xchg
pop
mov
ret
jg
sbb
into
inc
cmp
shll
mov
push
adc
addr16
push
push
scas
pushf
shll
mov
dec
hlt
jae
push
stos
mov
iret
lret
xchg
or
xor
arpl
push
mov
sbb
jmp
stos
mov
lret
std
inc
cld
mov
adc
mov
push
cmpsl
shrb
mov
imul
clc
cltd
pop
cmp
insb
mov
cmpsl
daa
pop
jae
jmp
sub
nop
ja
jo
scas
and
adc
xor
lcall
repnz
hlt
ja
jge
int3
call
mov
in
pusha
aaa
aam
fadds
ja
mov
out
inc
pop
sarl
aam
or
mov
test
or
cmp
and
js
lock
xorl
pop
insb
call
rcll
pop
cli
fistl
fs
adc
fcmovne
push
imul
std
shlb
fmulp
inc
inc
fwait
mov
mov
xchg
add
rcr
and
loope
push
push
outsb
fiaddl
sub
push
lock
fs
xchg
jg
adc
dec
enter
fs
cwtl
xor
sbb
in
hlt
inc
sbb
add
dec
scas
mov
mov
scas
gs
stos
mov
jge
mov
jp,pn
notl
and
insb
xchg
xchg
pop
jae
mov
mov
push
adc
sub
loopne
bound
iret
stc
clc
stos
mov
in
xchg
loope
in
or
mov
cld
pop
mov
and
adc
ds
mov
mov
push
rorl
enter
push
pop
and
pop
sahf
stos
pushf
or
cmc
divb
jnp
inc
jp
add
pop
jge
jo
inc
lods
xor
js
and
jmp
inc
cmp
rcrb
mov
in
or
dec
add
jecxz
daa
popa
test
int3
xor
fisttpll
iret
xchg
cmp
and
lret
movsb
mov
scas
inc
pop
loop
shl
ja
daa
lahf
xlat
pop
icebp
cmp
add
mov
xchg
insb
cmc
mov
sbb
mov
add
les
add
outsb
pop
adc
jle
js
push
addr16
test
roll
data16
scas
cmp
and
dec
out
movsl
xchg
xchg
fisubrl
fisubrs
xchg
out
cmpsb
push
hlt
mov
repz
sub
aaa
cmpsb
jb
inc
out
jecxz
ficoml
adc
lods
in
stos
xchg
jb
xchg
les
insl
das
imul
sub
arpl
jno
pusha
mov
pop
imul
popf
inc
dec
clc
sub
scas
enter
lret
iret
ret
movsl
cs
shll
push
xor
out
fnstenv
dec
inc
fisttpl
out
movsb
mov
lods
xchg
pop
sbb
leave
cld
aad
ret
cmp
cs
imul
in
or
jl
add
pop
int
or
inc
xchg
and
push
test
cmp
ret
enter
test
push
nop
data16
add
rolb
clc
hlt
add
and
insb
inc
push
adc
pop
mov
je
adc
hlt
andb
mov
push
mov
shr
lock
scas
adcl
dec
jmp
mov
repz
lcall
movsb
addr16
push
mov
push
xchg
mov
push
jge
popa
cmp
negb
xchg
jno
idivb
stos
test
cwtl
or
rolb
shlb
es
sub
add
mov
sbb
notl
or
sbb
loope
mov
sub
lcall
hlt
lea
loope
jbe
nop
mov
mov
mov
sarb
test
lock
call
ret
push
lret
dec
xor
addr16
addl
or
rcll
test
ss
lock
lods
push
push
sub
shr
mov
and
sahf
pop
push
push
jmp
add
pop
jo
mov
pop
aaa
jp
and
arpl
subl
in
mov
stos
dec
addr16
nop
int
daa
into
aam
lods
shll
les
lret
loop
dec
fdivrl
hlt
jns
pop
mov
jns
add
out
hlt
dec
or
or
jns
sbb
gs
int
leave
test
loope
cmp
push
add
ljmp
jne
or
sbb
inc
mov
push
aam
test
sbb
or
stc
pop
std
jecxz
loopne
jb
mov
inc
cmpsb
std
sub
loopne
dec
dec
mov
dec
dec
leave
repz
fistps
cmp
addr16
mov
lret
mov
enter
ljmp
mov
std
or
push
test
xchg
mov
xor
stos
inc
push
add
addb
fwait
loop
pop
adc
sti
mov
add
and
add
xor
int
fst
xchg
insl
leave
mov
out
arpl
outsl
inc
adc
xchg
idivl
sti
aas
dec
add
xlat
jb
enter
shrl
lret
sbbb
inc
clc
xor
add
lea
xor
jnp
adc
xorb
sub
or
loopne
mov
cmp
popf
adc
mov
mov
call
xchg
push
lcall
popa
insb
pop
nop
mov
fs
adc
xchg
and
testl
stc
vpcmpgtb
xlat
gs
mov
xlat
lcall
inc
dec
loopne
fnstcw
int3
or
xchg
je
xchg
and
int
push
lea
pop
xchg
fdivs
inc
bound
jg
or
inc
fmuls
pop
xor
or
adc
lea
sbb
in
mov
xor
jge
aaa
enter
inc
cmc
int3
cli
mov
js
or
jg
mov
jecxz
aaa
lods
fucomip
out
and
dec
jl
stos
jecxz
test
adc
jo
mov
mov
clc
ret
roll
or
xchg
ds
or
xchg
notb
pusha
jmp
into
fwait
adc
fwait
mov
inc
pop
les
adc
add
sub
es
add
cld
or
imul
ja
fdivrs
lds
pop
add
in
mov
cs
pop
xchg
es
fs
sbbl
test
mov
lcall
lods
ds
inc
and
fstl
inc
fildl
orb
punpckhdq
mov
mov
aad
je
stos
and
sbb
fdivr
pop
push
xor
jne
cwtl
xchg
cmpsb
hlt
push
sbbl
fisubrs
incl
sub
xor
push
ljmp
push
into
or
outsb
push
fldenv
sub
mov
fstl
fdivs
rclb
shll
dec
popf
bound
cvtdq2ps
clc
in
adc
insl
dec
bswap
clc
mov
shl
xor
sub
pop
scas
loop
outsb
pop
jl
test
es
xor
cmp
sub
xchg
pusha
mov
push
fwait
aas
repnz
ja
lock
mov
pusha
mov
mov
push
sbb
test
leave
aam
fwait
sahf
lret
jp
int
jmp
xor
inc
bound
sbb
mov
xorb
ljmp
das
test
jmp
or
pop
mov
push
jo
sbb
dec
mov
mov
sub
mov
or
lods
add
jns
pop
mov
icebp
loop
es
jmp
movlps
dec
movsl
inc
jmp
sub
push
mov
dec
pop
or
mov
and
dec
in
call
stos
pop
je
xor
mov
stc
in
loop
gs
rcl
sti
cs
mov
test
or
fdivrs
xchg
adc
loopne
addr16
xchg
sub
dec
scas
push
add
stos
divb
push
adc
jle
out
xor
add
sub
jb
rol
lea
movsb
std
mov
inc
imul
mov
and
insb
lods
pusha
into
test
loope
paddusb
sbb
pop
in
in
aad
xchg
jb
loope
leave
mov
inc
mov
lods
arpl
xchg
into
mov
xchg
es
mov
das
mov
push
xchg
and
lret
jp
lahf
jne
jge
popa
lret
into
jnp
cmc
jmp
xor
adc
adcb
push
cld
cmp
pop
gs
mov
xor
cmpb
adc
mov
dec
in
push
adc
jno
divl
sub
mov
adc
cmpsb
nop
jbe
push
testb
fistl
inc
adc
mov
jbe
outsl
out
dec
sahf
aas
pop
stos
xlat
cmpsb
sbb
dec
and
data16
mull
inc
jae
fwait
adc
sub
in
mov
or
test
jne
stos
lods
push
dec
push
fsubrs
mov
fwait
roll
fcomi
stos
in
mov
mov
pop
frstor
sub
cli
call
xor
out
cmc
subl
rcl
xchg
mov
in
lahf
sub
adc
xchg
dec
out
dec
loopne
mov
and
dec
adc
outsb
or
mov
push
rorb
jbe
fistl
xchg
jae
cmp
je
aas
roll
addl
jge
xlat
pusha
cmp
dec
lods
mov
dec
inc
stos
call
gs
adc
pop
test
orl
mov
xchg
out
jae
jg
jge
rol
mov
dec
or
addr16
adc
imul
stos
mov
imul
leave
fs
adc
ja
in
push
mov
rcr
rcll
dec
jmp
bound
daa
stos
pop
ja
push
push
cmpsl
cltd
or
cmpsb
js
cmp
xchg
lahf
arpl
xor
inc
stos
sbb
bound
jmp
bound
adc
sub
in
andw
loope
push
sti
jnp
add
ret
out
in
in
push
ds
mulb
mov
push
out
sub
inc
call
xchg
jne
es
rcrl
lret
lds
jb
int3
dec
and
or
and
in
dec
push
sub
push
into
fldl
cmp
testl
pop
in
enter
mov
sbb
fsubrs
sub
inc
push
push
xchg
push
mov
push
jmp
test
cmp
cmpsl
push
lret
jge
xchg
lea
fsubrs
movsb
orb
jp
xor
push
dec
pop
lods
xchg
xor
push
lds
push
js
push
jnp
xchg
rcrb
pop
inc
pop
xorb
int3
in
lods
sti
fwait
xor
lds
mov
and
gs
fisttps
hlt
lods
jnp
jmp
mov
lret
adc
or
pushf
cmc
pop
add
jo
mov
ror
cs
stos
std
jne
and
push
movsl
xor
sarb
inc
jb
cmpsb
cmpsb
mov
ljmp
xchg
sub
cli
clc
mov
in
in
loopne
in
loopne
scas
pop
sub
dec
pop
pop
add
add
dec
dec
xor
xlat
loop
add
scas
or
jbe
negb
sub
dec
in
sbb
and
clc
stc
xor
sarl
sti
lcall
jno
sub
mov
enter
mov
adc
psubusw
jno
push
lret
jno
jecxz
cmp
fidivl
rcr
mov
decb
into
inc
and
or
fcmovnu
ret
and
std
aas
pop
movaps
mov
dec
adc
in
adc
xchg
arpl
and
mov
fstpl
sub
add
icebp
cwtl
out
mov
push
or
lods
out
loope
pop
mov
sub
mov
pop
inc
cmc
sbb
push
out
fnstenv
or
repnz
xor
push
popf
mov
jle
push
cwtl
add
push
jle
lcall
jae
loope
xlat
inc
or
je
or
pop
push
hlt
push
sbb
push
fsubl
fdivs
jmp
ret
mov
div
dec
shlb
sub
daa
test
add
mov
fdivs
add
push
jmp
jno
cmp
sbb
mov
push
jmp
xor
pop
lcall
pushf
sbb
adc
popa
fwait
fs
xor
lea
daa
push
cmp
leave
and
push
cmp
push
stos
push
fimull
xor
insl
sub
push
fisubl
icebp
xchg
pop
out
cmp
mov
add
in
push
cmp
stc
shrl
cmpsb
and
inc
cld
rolb
push
push
xchg
mov
sub
adc
imul
mov
add
lahf
or
sbb
dec
cmp
pop
jo
adc
push
add
das
inc
and
cmpsl
icebp
and
or
push
add
or
subb
insl
mov
out
pop
dec
cld
repz
push
shll
icebp
cmp
xchg
sbb
loop
dec
xor
lahf
lcall
and
mov
movsl
xchg
jmp
loope
aam
mov
mov
fnsave
and
cld
inc
mov
sahf
repnz
lds
cwtl
mov
cmp
fsubrp
jp
lods
out
hlt
sbb
subb
lret
imul
pop
dec
icebp
cli
ljmp
jecxz
add
and
mov
in
setno
cwtl
and
push
decl
mov
jmp
dec
stc
pop
lds
cmp
ljmp
inc
and
jns
cmpl
js
roll
pop
or
adc
and
push
jno,pn
mov
jo
add
pop
xor
outsb
ret
lds
in
cmc
test
aad
and
push
adc
jbe
inc
push
push
movsl
cmpsb
mov
test
cmc
test
aad
and
push
adc
jbe
inc
push
push
movsl
cmpsb
mov
test
hlt
test
aad
and
xor
push
gs
inc
inc
push
push
movsl
cmpsb
mov
test
cmc
testb
push
fisubl
lret
push
adc
mov
stos
push
mov
jbe
jg
mov
repnz
sbb
cmp
imul
inc
stos
push
mov
add
adc
mov
repnz
and
cmp
imul
les
xchg
int
sti
jp
loope,pn
leave
loop
sahf
cmp
out
cmp
and
push
fiaddl
clc
and
and
push
icebp
in
imul
xchg
mov
pop
jp
fildl
int
sub
add
hlt
movntq
pop
and
loopne
ss
inc
repnz
daa
inc
and
sub
cmp
mov
int
daa
mov
fwait
aas
scas
pop
mov
add
adc
mov
cmp
pop
mov
xchg
xchg
insl
pop
out
mov
inc
mov
inc
sub
and
mov
lret
push
and
mul
je
fs
test
sub
pop
or
std
rclb
and
adc
jb
inc
fistpll
mov
add
stos
imul
sub
pop
ret
mov
jae
dec
adc
cmp
dec
outsb
inc
mov
sahf
jae
orl
xchg
mov
xor
pop
aad
int
fldl
cltd
push
mov
popa
enter
outsb
cmpsl
jns
or
add
pop
testl
inc
jnp
adc
xchg
fildl
jmp
sti
loop
repnz
sub
cmp
imul
inc
stos
push
mov
add
adc
loop
repnz
sub
cmp
imul
ljmp
shlb
jbe
mov
mov
and
in
xor
aam
mov
or
sbb
mov
mov
lods
mov
cmp
sub
dec
sbb
sbb
int3
xor
push
jmp
pop
stos
hlt
push
jmp
jns
ss
repz
pop
nop
movsb
sbb
jecxz
fs
out
adc
dec
adc
out
jecxz
xor
jmp
nop
popf
in
fstps
adc
inc
pop
shll
mov
ljmp
cmp
movsl
jl
iret
push
data16
push
sub
xor
cmp
mov
mov
out
roll
mov
jb
adc
sbb
bound
or
inc
xor
pop
dec
push
hlt
in
int3
sub
in
leave
mov
inc
addl
mov
add
dec
push
sbb
xchg
xor
gs
roll
das
jns
sahf
dec
inc
sub
mov
mov
xchg
dec
fwait
add
bound
sbb
arpl
mov
iret
dec
cmp
adcb
lds
pop
mov
mov
add
fstpl
int
in
lcall
enter
pop
jb
mov
lea
push
out
and
dec
or
xor
leave
lock
xchg
or
sub
ror
mov
inc
bound
ficomps
mov
sub
call
faddl
sbb
jbe
pusha
xor
adc
push
andb
ffree
lods
mov
popa
inc
cmp
aas
sbb
je
pop
and
outsb
inc
xor
pop
mov
rcl
lea
jle
xor
test
push
and
and
cs
test
push
adc
xor
pop
hlt
lock
fistpll
fidivl
fidivl
adc
pop
mov
or
fidivl
adc
pop
fdivr
or
fstpl
icebp
pop
loopne
pop
icebp
push
adc
push
adc
pusha
push
cmp
add
cmp
gs
and
lcall
in
mov
arpl
push
xor
es
sahf
cmp
enter
aas
movsl
cmpsb
ljmp
aam
js
inc
inc
inc
lods
jp
push
leave
roll
inc
inc
or
push
jae
cmpsb
push
cld
dec
xchg
pop
outsl
cmp
or
psubusb
push
lahf
jno
mov
lods
daa
push
push
or
pop
stos
scas
sti
stos
or
insb
aad
mov
mov
aaa
pop
add
mov
mov
lods
clc
xor
addr16
mov
xchg
shrb
mov
lds
push
cwtl
and
inc
push
das
int3
rcrl
lods
dec
inc
cmp
insl
stos
pop
fs
pushf
fmull
les
je
xor
mov
pop
ffree
icebp
pushl
repz
xor
pop
pop
xchg
mov
xchg
mov
rolb
enter
xchg
cmp
mov
push
lds
jno
push
dec
scas
sbb
sbb
add
pop
dec
fimuls
adc
lahf
js
lods
insb
aam
push
adc
sub
jnp
cmc
xchg
and
add
nop
scas
cmpsb
ljmp
rcll
scas
arpl
lock
lcall
int3
jb
jns
push
mov
bound
jb
jns
int3
repz
lds
push
xor
adc
imul
mov
cwtl
or
cmp
inc
mov
add
xchg
gs
pop
inc
pop
xchg
xchg
mov
jecxz
stc
cmpsl
push
subl
les
jbe
mov
push
imul
and
sbb
adc
jge
lret
push
popa
dec
mov
dec
dec
outsb
arpl
xchg
cltd
xor
cmpsb
mov
sbb
cltd
stos
add
pop
divl
js
jl
sahf
dec
jle
inc
xchg
stc
in
cmp
ss
xor
mov
testb
repz
lret
call
cltd
das
mov
adc
and
push
xchg
adc
lahf
ljmp
in
js
cmp
cmc
mov
xor
stc
push
bound
xchg
adc
jne
mov
cmp
arpl
js
xor
stc
push
add
adcl
xor
cmp
movsb
arpl
cmp
sbb
or
xor
sarb
sbb
or
ret
xor
aam
mov
mov
leave
pushf
sub
call
pop
in
mov
or
leave
jno
push
and
enter
in
jl
sbb
adc
and
sub
test
rcrb
mov
pushf
insb
andb
mov
jo
dec
and
imul
hlt
xrelease
mov
loopne
dec
mov
sbb
test
fcoml
jno
push
xchg
bound
sbb
and
rcll
mov
adc
das
mov
push
int3
sub
adc
leave
out
popf
paddusw
push
and
fadds
push
sub
jae
jp
push
cmp
dec
lcall
fs
dec
cltd
pop
pusha
leave
lock
pop
sbb
repz
mov
iret
sbb
xchg
insb
pop
mov
lcall
adc
adc
fnstcw
pop
arpl
push
mov
nop
pop
push
mov
dec
mov
lret
xor
jne
mov
jecxz
test
ss
pushf
lock
hlt
into
sub
or
mov
mov
push
fildl
adc
cmp
outsl
ja
shr
jl
mov
jle
pop
lret
cmp
push
dec
add
or
adc
or
shl
in
rol
dec
adc
out
and
sub
icebp
outsl
mov
pusha
or
cmp
mov
ret
fnsave
popf
fdivp
aam
cmp
aas
outsb
mov
mov
adc
clc
fidivl
pushf
insl
fnsave
cmp
sbb
ror
dec
sub
movsb
cmp
neg
xchg
or
or
pusha
cmpl
dec
ret
mov
cltd
xchg
add
je
insb
cmp
add
int3
test
jecxz
sub
jge
pop
in
cmc
repnz
das
lcall
jle
aas
gs
rolb
test
or
add
addr16
scas
mov
lock
mov
or
or
mov
lds
outsl
lea
std
gs
mov
lods
cmpl
cmp
mov
lods
mov
outsb
outsb
dec
arpl
jo,pt
lds
in
and
mov
mov
jo
pop
stc
mov
sbb
lods
mov
test
lcall
mov
sub
aam
adc
adc
cli
sub
sub
jb
inc
jge
jnp
cmp
jo
mov
pushw
in
lret
jle
cmpsl
add
pusha
cmp
test
loopne
mov
mov
out
push
mov
insb
popa
sub
and
adc
rcr
gs
fmulp
xchg
or
jp
xchg
jg
push
cmp
sub
iret
cmp
adc
out
or
dec
mov
cmp
or
imul
lock
adc
rcr
outsl
xchg
lea
addl
xchg
inc
gs
test
inc
dec
cmp
mov
ror
enter
xor
repnz
imul
mov
inc
mov
mov
std
xchg
loop
sar
mov
and
out
out
mov
mov
xchg
adc
mov
fldcw
imul
sub
pop
xor
ja
sbb
bound
mov
push
hlt
mov
out
and
push
scas
fistps
int3
fistl
mov
lods
fisubrl
sahf
dec
out
rcrb
call
pop
pop
ljmp
jle
xchg
sub
sbb
loope
int
gs
and
push
insl
or
aad
shrb
int
xchg
rcll
loopne
hlt
ret
dec
jmp
das
push
or
frstor
lahf
mov
test
addb
xchg
xchg
and
imul
pop
dec
pop
mov
inc
out
push
ret
sbb
and
imul
mov
jo
push
pop
cld
pop
pop
fmull
xchg
insb
push
sub
and
or
or
add
xlat
std
adc
xchg
sub
fadds
les
adc
gs
outsl
in
movsl
ja
pop
sbb
push
xchg
adc
pop
cmp
mov
insb
sub
or
int
jle
jnp
rcll
rcrl
push
leave
lea
lcall
push
jb
test
mov
cmp
push
bound
adc
xchg
xor
call
sbb
testb
xor
loop
push
sti
mov
or
loopne
sub
rcrb
xchg
rorl
sbb
stos
add
pop
lods
push
adc
subl
enter
xchg
into
test
jl
inc
stos
gs
icebp
add
inc
jno
or
add
push
adc
bound
scas
push
and
push
pop
xchg
fidivrs
adc
aaa
fs
stc
stc
and
cld
orl
bnd
nop
not
lahf
sbb
inc
jle
push
lods
xchg
repnz
or
ret
scas
stos
test
add
out
dec
cltd
xor
ficoms
rcll
pop
popf
loop
dec
inc
movsb
insb
popf
popf
test
or
push
lea
xchg
sub
movsb
jg
das
adc
loopne
xchg
mov
adc
inc
imul
jle
mov
stos
cmpsb
or
jge
push
lds
sahf
xor
mov
pop
ret
mov
adc
xchg
loop
outsl
jp
mov
add
stc
jbe
lahf
cmp
mov
aas
testl
xchg
adc
cli
scas
mov
mov
push
and
mov
outsb
fcmovu
push
push
and
sarl
add
cld
daa
push
mov
mov
sub
fnstsw
and
in
push
clc
or
push
cli
push
add
jbe
lea
ja
and
lret
hlt
and
inc
push
fcmovu
sub
lea
sub
cmp
lret
imul
cmp
inc
mov
daa
xchg
mov
sub
mov
pop
loopne
sti
mov
nop
leave
fidivs
xor
das
loope
pop
leave
pop
in
mov
scas
pop
rorl
cltd
jle
xor
lea
movsb
push
scas
jp
int3
cmp
fucomip
xchg
jo
sbb
jle
inc
repz
fisubl
idivb
jno
adc
and
setb
nop
or
pop
xchg
dec
imul
lahf
xchg
jmp
pop
adc
pop
mov
pop
mov
clc
lahf
xor
stos
shlb
xchg
dec
mov
jl
sahf
scas
xlat
sbb
test
mov
ficomps
or
enter
cld
adc
mov
lret
lret
orb
shll
icebp
cmp
mov
mov
inc
mov
pop
mov
jp
mov
insl
arpl
jne
iret
xchg
mov
xchg
and
mov
mov
aad
sub
inc
mov
mov
pop
fldt
repz
mov
mov
repz
notl
add
sqrtps
sub
popa
and
sub
test
in
push
out
das
inc
pushf
mov
lret
jno
inc
jg
add
sub
xchg
cmc
lods
mov
xchg
icebp
je
pusha
adc
sbb
add
cld
ret
mov
push
pop
xchg
pop
dec
xchg
push
adc
int
jmp
dec
jecxz
jns
push
mov
shl
je
jp
xchg
jge
push
pusha
cld
scas
scas
in
sbbb
lods
out
gs
movl
mov
mov
mov
and
in
imul
fdivs
pop
sahf
pop
cltd
dec
shl
lea
pop
adc
add
cmpsl
dec
cmp
push
repnz
repz
stos
or
push
pusha
fwait
or
pop
lahf
push
cltd
out
out
daa
mov
sbb
inc
sub
xor
mov
outsb
add
mov
test
cltd
addr16
xchg
es
xor
lds
mov
lock
dec
push
andl
xlat
pop
mov
mov
xchg
pop
add
pop
cltd
mov
xor
mov
xchg
jmp
mov
loope
cmpsl
ljmp
xor
or
dec
push
inc
mov
int
xchg
jno
cmp
xchg
lahf
inc
call
lret
rorb
stos
insb
es
out
add
mov
movb
mov
test
aam
pop
cmp
lods
xchg
scas
xor
sub
in
mov
jp
jnp
inc
jb
ja
add
sub
orl
mov
push
inc
sub
out
popf
sti
cmp
mov
xchg
xchg
cs
ret
xlat
xor
bound
ret
popf
and
movsb
jnp
jecxz
sub
inc
gs
arpl
scas
pushf
sub
ds
push
cli
aad
mov
or
mov
xor
leave
sub
pop
gs
ror
sub
fwait
cli
je
cltd
push
and
shl
mov
into
sub
mov
cld
add
lret
repz
imul
aaa
out
ds
or
into
and
cmc
test
cltd
or
gs
arpl
lahf
fdivr
cmp
cmpsb
mov
repnz
cmp
popa
ret
push
inc
or
inc
mov
or
shll
sub
xor
mov
and
out
mov
sub
inc
jnp
or
cmp
sahf
test
push
push
pusha
fcom
ret
pop
or
inc
and
stos
repz
mov
sub
and
repz
int
mov
push
cs
jp
test
push
xchg
ja
and
test
pop
mov
xchg
cld
dec
cmp
push
sti
mov
js
sbb
mov
mov
nop
hlt
sahf
ja
xchg
jnp
mov
imul
arpl
push
test
out
mov
push
lea
push
in
and
shlb
aad
movsl
pushl
scas
jb
sahf
pop
aaa
mov
inc
push
mov
pusha
roll
ret
leave
xchg
fdivs
mov
and
jp
test
lret
jo
rcr
mov
pop
int3
push
or
leave
rolb
and
enter
sbbl
shr
mov
aaa
out
xor
addr16
lcall
ja
out
in
mov
ret
xchg
xchg
iret
lcall
cwtl
rclb
neg
inc
ret
imul
add
jno
mov
jno
int3
or
sub
scas
aas
pop
adc
popf
das
js
push
mov
jnp
mov
out
add
jg
testb
xchg
shrl
mov
rcrb
pop
jns
inc
push
clc
test
sub
dec
fnsave
and
ret
pop
sub
pop
mov
push
jno
or
stos
push
inc
lods
jbe
add
lret
fmull
movsb
pop
daa
lahf
aad
jmp
jp
push
lret
das
jnp
xchg
xchg
fsubs
sub
xor
and
push
mov
xlat
fsubl
sbb
pusha
hlt
mov
insl
outsb
dec
in
imul
dec
mov
pop
mov
jbe
hlt
pop
cltd
cs
stos
mov
mov
aaa
add
dec
call
xor
imul
adc
jecxz
xchg
sbb
or
pop
cmpsb
jns
repz
mov
pushf
shll
loope
mov
out
std
lock
cmp
and
out
jl
push
es
xor
push
out
or
and
int3
ret
mov
rorb
ret
in
jp
push
push
and
idiv
jnp
jmp
or
out
inc
pushf
push
ljmp
inc
lock
jecxz
sub
or
jno
pop
lret
ljmp
jecxz
cmpl
cli
les
sbb
cmp
adc
test
pop
dec
and
mov
sub
jp
mov
adc
out
out
sti
inc
pop
int
push
test
rol
movsb
fidivrs
je
or
adc
test
lret
sub
jno
or
enter
mov
jle
add
in
pushf
daa
push
and
loop
stc
adc
sbb
jg
mov
jp
or
cwtl
xchg
shrl
js
subl
dec
scas
mov
test
push
jmp
xor
pop
ret
jns
inc
js
jecxz
or
cmpl
adc
pop
xchg
xchg
inc
inc
aas
dec
movsl
sub
ja
or
pushf
je
mov
frstor
nop
add
mov
loope
mov
ljmp
jbe
dec
sbb
jns
shll
inc
sub
lea
mov
popf
push
add
je
jbe
mov
jo
insb
ljmp
jg
arpl
push
sbb
ret
inc
subl
cs
or
push
xchg
xchg
or
shrb
pop
sub
or
daa
cmp
fisubrs
and
std
cli
mov
jne
addr16
outsb
fnstenv
pop
inc
mov
sub
imul
xor
aas
add
mov
in
add
pop
xor
mov
lods
lcall
cs
and
mov
mov
outsb
rcrw
sbb
aam
push
fsubl
incl
inc
add
or
jp
push
xchg
insl
icebp
cltd
daa
aas
or
push
push
sub
loop
mov
dec
rcrb
push
mov
movb
xchg
out
fidivl
rorb
mov
sbbl
addr16
decl
mov
ljmp
inc
jecxz
mov
push
outsl
sub
jbe
sbbb
push
stos
sbb
lcall
push
into
push
movsb
and
cmp
mov
xchg
inc
xchg
roll
push
pop
int3
mov
xor
mov
mov
jae
xchg
cltd
cmpsb
int
mov
repnz
sbb
xorb
push
pop
sbb
xlat
call
movsl
out
or
jl
xchg
xor
xor
popf
js
mov
mov
mov
xor
push
jnp
in
std
pop
dec
sub
pusha
das
mov
pushf
lods
into
mull
add
loopne
mov
xchg
cmp
addr16
jb
popa
imul
dec
iret
adc
inc
fdiv
mov
cmc
push
aaa
or
push
dec
or
and
xor
hlt
in
repnz
push
in
repnz
movsl
xor
push
and
aam
push
insl
arpl
mov
dec
rclb
in
das
movsb
outsb
add
mov
es
ret
outsl
and
sti
mov
mov
pusha
test
cmpsl
lods
add
shrb
insl
mov
cmp
stc
dec
jnp
cmp
or
sbb
popa
pusha
pop
test
inc
mov
lea
sahf
imul
outsb
test
adc
out
mov
arpl
rorl
fsubr
sahf
in
jp
cli
aas
imul
adc
pop
in
fsubp
pop
lds
loope
sub
push
subl
cmp
sbb
inc
xchg
dec
cmc
dec
stos
dec
test
stos
add
mov
mov
or
cmp
xor
js
pop
or
in
or
sub
insb
or
pop
sbb
pop
or
nop
mov
rcrl
add
movsb
sbb
jmp
cld
jne
mov
leave
jbe
das
das
mov
add
cs
test
std
dec
inc
ret
mov
and
push
inc
mov
pop
xor
insl
cltd
mov
cmp
cmp
push
push
jbe
dec
push
sbb
inc
outsl
fstps
ja
loopne
shll
cmp
adc
out
xor
cmp
xor
ss
mov
dec
shll
pop
adc
mov
lahf
sti
jecxz
aad
mov
xchg
mov
lds
pop
sbb
and
cmpsl
out
leave
dec
jge
lcall
jns
sbb
jecxz
nop
cmpsl
xchg
jne
inc
pop
adc
rcl
insl
movsl
mov
jle
sub
cmp
js
cmp
ds
aaa
clc
sbb
mov
inc
push
rolb
shlb
lock
xchg
mov
push
xchg
pop
xchg
jmp
lods
push
pop
lcall
xor
mov
stos
xchg
ss
movsb
pop
sarb
push
loopne
ret
mov
push
jne
push
inc
in
xor
jg
mov
test
mov
xchg
sub
adcb
scas
dec
mov
add
adc
loop
repnz
sub
cmp
imul
inc
stos
push
mov
add
adc
loop
repnz
sub
cmp
imul
push
mov
mov
add
adc
out
repnz
lret
sub
xor
bound
jg
dec
jp
and
and
add
cmp
hlt
or
dec
aad
cmp
jge
insl
add
ja
xchg
cmp
push
fiadds
add
add
pop
add
push
add
xor
add
add
out
add
add
enter
imul
add
add
push
add
cwtl
add
add
add
add
flds
in
add
add
add
add
add
add
add
add
or
xchg
add
je
add
add
add
add
fiadds
mov
or
xor
js
flds
das
add
add
add
or
add
pop
inc
add
cmp
addl
jb
dec
add
add
jecxz
jp
daa
add
add
imul
loopne
and
add
add
add
add
add
sahf
add
add
add
add
leave
add
add
add
add
add
add
add
jecxz
xor
das
add
add
add
fiadds
add
outsl
add
and
leave
add
mov
arpl
sti
add
add
add
add
add
js
add
add
call
add
add
mov
add
dec
add
push
add
add
add
add
add
add
iret
add
add
add
add
ltr
add
add
xor
add
add
add
add
add
add
scas
add
add
add
add
inc
add
add
add
and
jp
push
add
and
mov
and
stos
add
add
push
add
test
adc
in
int3
add
add
add
add
add
add
add
sub
jmp
arpl
loopne
add
add
add
add
add
into
add
add
inc
add
add
add
add
add
add
add
add
add
out
add
push
add
push
add
add
add
add
add
add
jecxz
push
dec
add
add
add
jecxz
jecxz
leave
add
add
add
add
add
loope
pop
add
add
add
add
add
add
push
add
cmp
sub
xor
mov
add
lret
add
add
jge
xor
dec
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
sbb
adc
mov
loope
or
jno
dec
add
imul
push
add
test
push
add
push
add
popa
add
add
xchg
add
jp
push
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
mov
ljmp
add
add
add
add
add
add
add
add
push
popf
add
add
add
push
sbb
push
add
add
inc
add
add
addl
mov
add
add
add
add
jecxz
push
push
add
xor
fiaddl
jecxz
dec
add
dec
add
add
add
add
add
add
addb
add
or
roll
pop
add
addl
xor
adc
ret
add
push
xchg
add
add
add
add
add
add
pop
cltd
bound
jge
xor
out
das
xchg
bound
addb
mov
xchg
adc
cmp
dec
and
movsl
push
lock
ljmp
sarl
test
loop
outsl
jecxz
ss
in
pushf
sbb
and
xorb
or
popf
jecxz
xor
mov
loope
jns
pop
pop
sbb
insl
xchg
rorb
sbb
jae
out
mov
in
insl
add
sbb
cmpsb
xor
sahf
mov
leave
mov
mov
sti
cmpb
cli
jb
into
movsl
cmpl
fwait
sub
gs
add
scas
les
test
add
movsb
mov
push
mov
xorl
or
xchg
dec
ljmp
jo
out
mov
push
sbb
stos
xchg
jg
in
stos
jmp
xor
xchg
push
icebp
cmp
or
sahf
rcll
aad
mov
xchg
notl
mov
push
jp
inc
jno
inc
mov
adc
push
fimuls
xchg
jle
insb
fcomi
outsl
push
push
cmpsb
and
ljmp
mov
je
rclb
test
mov
mov
popa
inc
jmp
jge
mov
out
inc
mov
sub
repz
mov
cmp
jns
cltd
pop
xor
jno
scas
xor
cltd
stos
xchg
mov
mov
jle
lea
loope
out
adcl
in
jmp
inc
hlt
or
xchg
add
mov
sarl
stos
jmp
mov
sar
dec
or
adc
push
cmc
jbe
out
clc
xor
shr
ffreep
jp
fisubs
mov
jmp
mov
cmp
ja
testl
push
sahf
mov
xchg
inc
ret
call
sbb
test
mov
lahf
push
rcl
imul
mov
push
sbb
vmovapd
push
xchg
pop
sbb
jp
ret
xor
dec
mov
inc
ret
sub
pop
mov
nopl
dec
sub
das
mov
subb
shll
shl
fcom
dec
jecxz
sbb
repnz
push
cmp
xchg
cmp
aad
rorb
xchg
adc
lods
and
in
adc
pop
pop
stos
daa
hlt
jns
push
and
jge
call
push
and
push
popf
adc
data16
and
xor
add
push
sub
adc
inc
mulb
mov
ret
inc
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
