adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
nop
pusha
xorb
mov
pop
test
adc
loopne
lock
and
push
mov
pusha
nop
nop
pusha
xorb
mov
xor
add
adc
loopne
lock
and
push
mov
pusha
nop
nop
pusha
xorb
mov
xor
add
adc
fisubs
lods
inc
mov
rclb
xor
xor
or
mov
leave
mov
sbb
imul
cld
sub
frstor
daa
pop
jl
jg
dec
push
pop
scas
rcr
ror
or
sbb
pop
pusha
inc
cmp
xorb
outsl
jne
cmpsb
fidivl
adc
scas
and
adc
lret
xor
pusha
xchg
nop
lahf
cmpsl
jno
inc
cmpsl
inc
mov
jmp
in
fildll
add
inc
loopne
jle
mov
std
add
lods
das
and
iret
or
imul
or
mov
push
pusha
shrb
and
push
lret
lock
push
pop
inc
loope
les
mov
adc
bound
mov
mov
xor
add
adc
loopne
lock
and
push
mov
pusha
cmc
or
out
mov
scas
jno
gs
pusha
mov
inc
scas
gs
adc
and
cmp
inc
loope
mov
mov
mov
movsl
adc
addr16
dec
xchg
and
cmc
or
divl
addb
lds
add
adc
loopne
lock
and
push
mov
pusha
nop
nop
pusha
xorb
mov
xor
add
adc
loopne
lock
and
push
mov
pusha
nop
nop
pusha
loope
sub
in
mov
stc
shll
fwait
dec
xchg
jns
jno
dec
jno
ljmp
mov
inc
xchg
dec
sbb
cmp
or
fistl
sbb
ds
test
loopne
dec
stos
dec
mov
loop
ds
mov
je
or
sub
adc
mov
repz
inc
push
int
stc
pop
adc
das
addr16
andb
fstps
mov
out
fwait
xchg
pop
add
pusha
and
push
lcall
ficoms
jle
push
leave
in
mov
and
push
out
loope
mov
in
inc
leave
rol
push
ljmp
es
push
inc
sub
inc
sub
clc
jbe
call
les
mov
mov
push
fwait
mov
vpshufd
pop
mov
popa
inc
and
es
or
outsb
lcall
ljmp
adc
fcoms
pop
scas
mov
mov
movsb
ret
mov
fcmovne
je
adc
lods
inc
inc
enter
adc
pop
lret
dec
dec
jb
shll
subb
mov
hlt
xor
lock
cmpsb
push
adc
sbb
jl
repz
in
lret
jno
cmc
scas
dec
xchg
push
jmp
cltd
out
fnstcw
mov
jmp
xchg
test
fisttpl
addr16
loopne
or
mov
loope
mov
adc
xchg
sti
arpl
fdivrl
xchg
add
enter
cmp
orb
mov
dec
jb
outsl
cmpsb
ds
sbb
faddl
xchg
lea
int3
dec
popa
out
das
jae
pushf
lcall
les
sbb
loope
hlt
cmp
pop
adc
ret
inc
fmul
mov
mov
icebp
cli
xchg
add
movsb
inc
push
sbb
mov
cli
jb
mov
mov
ja
xor
push
stc
sbb
idiv
fldl
pop
cwtl
jo
lret
cli
scas
scas
pop
fsubrl
xor
xchg
xor
sti
in
mov
mov
dec
mov
sub
inc
or
gs
call
jp
out
bound
mov
sbb
and
xor
adc
push
cmp
or
inc
arpl
fstp
ret
fsts
sahf
dec
fcompl
iret
aaa
test
mov
aaa
stos
pushf
xchg
outsl
and
loopne
jb
gs
popf
gs
cmp
fcomps
fadd
mov
xchg
mov
push
dec
xchg
mov
imul
inc
xor
add
mov
repnz
gs
push
sub
jb
xchg
sbb
jbe
mov
cwtl
ret
mov
enter
jno
jle
jle
xor
jnp
dec
xor
les
pop
mov
or
pop
stc
push
adc
jbe
aad
push
ret
xchg
out
pop
mov
cmp
jo
pop
frstor
push
loope
insl
aaa
fcmovnu
cmp
outsl
jge
mov
test
loope
fisttpll
pop
mov
popa
fsave
pushl
push
enter
xlat
jp
push
dec
add
fs
cmp
and
lods
test
and
fistl
sbb
mov
cs
jl
push
bound
pop
mov
fnsave
loop
xchg
aas
sbb
or
sahf
movsl
enter
fimull
ds
ljmp
inc
adc
push
push
xchg
cmpsl
lds
jnp
xor
cmpsl
push
sbb
sub
jbe
add
test
adc
gs
jmp
int3
mov
or
xor
cmc
sbb
pushf
neg
sub
je
jle
pop
inc
push
pushf
or
push
rorb
dec
sub
cmpsl
mov
and
jnp
mov
push
and
cmp
adc
push
fmul
cmp
xchg
scas
xor
or
imulb
popa
push
mov
sbb
or
imull
in
push
iret
es
mov
out
insb
outsb
movl
test
ss
sub
fisttpll
bnd
lods
inc
out
rolb
xchg
pop
dec
xchg
mov
push
mov
bound
imul
push
dec
mov
cmpsl
nop
xchg
jl
and
fimuls
cmp
icebp
gs
int
xchg
adc
shll
dec
repz
dec
pop
cwtl
jecxz
hlt
scas
pop
out
dec
sti
sbb
pop
dec
mov
pop
adc
rcrb
or
icebp
aad
inc
jg
mov
jmp
scas
push
sbbl
les
mov
jno
ds
sub
or
stos
push
dec
mov
test
push
dec
iret
outsl
adc
mov
add
inc
imul
in
push
cli
pop
mov
movsl
daa
mov
data16
mov
cmpsl
mov
and
sub
scas
popf
jmp
push
aas
frstor
adc
rcll
sbb
dec
push
popa
or
push
adc
xchg
mov
in
xor
cltd
xor
pop
or
gs
sub
pushf
sarl
popf
mov
movsl
pop
in
sub
push
mov
and
sbb
adc
xchg
std
aam
jno
sbb
imul
gs
ljmp
mov
xchg
jne
sbb
in
add
sbb
mov
pop
push
rorb
ret
cwtl
adc
ja
adc
mov
fcmovb
or
inc
cwtl
pop
int
subb
test
and
mov
mov
xchg
hlt
mov
shr
adc
xchg
add
sub
daa
mov
sub
insl
insb
js
add
popf
in
dec
pop
inc
divl
sbb
lds
lahf
imul
mov
fldenv
aam
std
loop
and
ret
movups
sbb
dec
popa
in
sub
lds
scas
pop
xor
mov
dec
add
mov
les
push
xchg
push
dec
jecxz
lds
inc
mov
pop
mov
xchg
dec
cli
inc
stc
lods
sahf
or
rclb
add
inc
call
and
lcall
stos
jecxz
push
cmp
dec
push
sbb
inc
hlt
add
inc
or
sub
xlat
test
jle
lods
neg
push
aad
mov
sub
fcmovnu
inc
xchg
int
xor
and
sub
outsl
popf
clc
sbb
add
push
xor
inc
ret
add
stos
rorl
sbb
les
popf
dec
mov
out
jo
inc
jns
inc
lds
mov
imul
insb
fs
ljmp
fbld
hlt
clc
pop
sbb
gs
pushf
ja
cmp
mov
add
cmp
mov
test
cmp
shr
push
xchg
fwait
nop
test
or
push
clc
push
add
push
out
ret
scas
jb
sbb
sub
mov
mov
dec
cmp
scas
mov
shll
mov
es
movsl
pop
pusha
xchg
mov
cmc
jecxz
xchg
ljmp
icebp
in
xorl
insb
push
xor
cmp
or
add
jne
mov
incb
dec
imul
fdivl
jp
in
fisttps
mov
xchg
and
xor
mov
push
pop
pop
stos
shld
daa
call
xor
aas
push
test
inc
adc
scas
sbb
and
xchg
push
fnsave
icebp
addb
and
ss
push
cmp
mov
adc
imull
adcl
or
xchg
add
push
fnstcw
pop
xchg
sbb
in
sbb
lds
cmp
dec
lods
sub
sbb
xchg
iret
icebp
clc
jle
fldcw
or
sar
xchg
enter
sti
fisttpll
imul
cmp
cli
and
sub
inc
xchg
jb
mov
and
push
idiv
sub
mov
add
mov
out
push
int
xor
imul
pop
mov
mov
push
cmp
je
push
and
or
lret
and
leave
faddl
mov
sub
mov
cs
lcall
out
mov
aaa
mov
pusha
sbb
arpl
or
jmp
inc
inc
stc
jmp
popf
sub
xor
mov
leave
xlat
cmpsl
or
pushf
jb
cmc
xchg
jl
lret
or
inc
fs
jbe
lods
test
or
stc
xchg
jle
leave
mov
mov
les
mov
cltd
or
frstor
mov
pusha
jp
mov
and
jnp
add
sti
call
std
sbb
fsubrs
and
xor
imul
pop
faddl
imul
mov
pop
arpl
fisttpll
fildl
cmpsb
xor
sub
sbb
loope
stos
inc
sub
outsl
inc
loope
mov
lahf
imul
inc
call
jne
in
and
lea
inc
pushf
lods
jae
lcall
xor
push
inc
ljmpw
push
cmp
testl
sti
orb
fcoml
fwait
jg
sbb
iret
andb
fsubrl
cmpsl
push
xchg
xorl
and
inc
xchg
inc
dec
in
cltd
cmpsl
xchg
out
or
rcll
aam
jno
cmp
cmp
mov
push
fadds
cmpsb
arpl
pop
leave
mov
jge
add
imul
test
andb
les
arpl
cmp
mov
mov
and
ret
push
mov
cli
mov
fnstcw
pop
mov
jge
xor
mov
lods
imul
cmp
xlat
pop
push
or
adc
aad
stc
dec
lock
leave
sti
mov
mov
mov
inc
cmpsl
mov
enter
mov
int
lds
cmpsl
icebp
incl
and
cmpsl
fists
add
fcmovnb
ljmp
sub
and
insb
cld
int
hlt
out
push
clc
sub
jmp
frstor
xor
and
and
sahf
fs
icebp
in
sar
cmpsl
mov
mov
mov
mov
inc
into
xor
repnz
cli
das
push
inc
pandn
dec
inc
test
scas
or
jmp
lods
pop
sbb
shlb
dec
xor
in
lods
adc
test
std
into
mov
mov
jb
pop
repnz
xorl
ret
aas
pop
arpl
xchg
data16
mov
mov
sub
add
inc
pop
stos
push
repnz
jecxz
sarb
cmp
mov
pop
jb
pop
add
mov
movl
or
lcall
in
je
ficoml
xor
jns
mov
dec
loop
js
in
outsb
out
shrb
in
jp
in
out
sbb
iret
add
in
outsb
push
jge
inc
fnstenv
xchg
sbb
iret
fmul
mov
and
fildl
inc
sbb
mov
jbe
cmp
add
sti
stc
sub
cltd
fucomip
dec
mov
dec
push
mov
test
pop
dec
ret
in
push
cmp
dec
jns
jg
test
cmpsb
jo
aad
push
jns
outsb
hlt
jle
sbb
dec
shlb
repz
jmp
fmul
clc
xchg
dec
jp
repz
enter
in
aad
xor
push
aad
loopne
push
sbb
outsb
mov
sbb
je
fnsave
mov
mov
jns
sbb
fildll
cmc
das
addr16
stos
movsl
xchg
popf
xor
add
xchg
push
push
or
jge
imul
mov
fmuls
lret
popa
mov
jns
shl
mov
push
andl
inc
add
or
fs
repnz
mov
insl
std
cmpb
dec
scas
jns
mov
pop
mov
lea
and
adc
adc
mov
outsl
iret
lods
add
jge
xlat
pop
and
call
push
mov
inc
mov
inc
xor
mov
pop
mov
dec
cmp
xor
sub
shl
lock
push
jb
addr16
fwait
jmp
sti
test
movsb
shl
int
clc
mov
or
enter
daa
mov
mov
pushf
in
xchg
rorl
inc
adc
mov
dec
dec
insl
stos
fs
xor
mov
mov
xchg
sub
jo
out
lea
sbb
cmp
loop
dec
jp
xor
mov
mov
add
test
int
jns
adc
add
mov
xchg
mov
ret
jb
inc
stos
mov
lcall
cli
fmuls
fs
jle
loope
inc
push
aam
call
add
mov
dec
cmp
and
cmp
lret
mov
jmp
into
aaa
mov
movhps
xchg
int
hlt
scas
sub
shll
jmp
sbb
mov
pop
addr16
mov
loopne
adc
popf
xor
xor
pop
xrelease
xor
iret
cmp
sub
dec
mov
dec
js
pop
rcl
inc
mov
xchg
dec
js
movsb
jecxz
pusha
dec
lods
lcall
mov
add
mov
lret
jge
xor
mov
fwait
movups
xchg
fildll
shlb
lods
loop
sub
push
push
add
lcall
notl
loop
inc
or
xorl
xchg
ljmp
fnsave
cwtl
jbe
loop
repz
jle
pop
popf
jge
mov
stc
ja
jecxz
xor
sbb
insw
xchg
dec
pop
mov
cmpsl
lock
rorl
jbe
sbb
mov
dec
sbb
mov
repz
inc
xchg
xchg
inc
insl
xor
decb
fwait
xchg
scas
jmp
xchg
ljmp
pop
data16
lret
dec
fists
sahf
push
push
mov
add
ret
xchg
xchg
mov
push
lret
mov
add
jno
sbb
lods
rorb
push
call
sub
pop
or
movsb
test
outsb
sbb
xor
subl
add
dec
icebp
cltd
xchg
std
loopne
jo
cmp
popf
jp
test
lret
mov
in
das
scas
repz
movsb
xor
js
js
adc
push
fsub
add
int3
dec
lock
push
fcompl
cmp
fiadds
and
jmp
clc
insl
stos
mov
jb
sub
and
pop
dec
dec
jb
mov
out
in
adc
out
xor
xchg
mov
out
inc
fmull
jp
adc
xor
mov
xor
xchg
rep
sti
int3
js
loope
movb
add
lret
sbb
xchg
dec
out
ret
out
and
pop
fidivrs
push
test
in
inc
xor
inc
mov
push
test
loope
fwait
jge
xchg
push
ja
inc
pop
mov
data16
inc
cmp
jg
fstl
pushf
faddl
push
mov
mov
mov
adc
mov
inc
leave
jmp
mov
pop
rcll
xchg
aad
mov
inc
cmc
leave
pop
out
inc
xchg
add
or
int3
jbe
rcl
icebp
mov
jmp
rcll
sub
sub
cmc
sub
mov
jg
mov
cmpsl
enter
jno
insl
mov
test
inc
mov
mov
mov
pop
adc
into
in
push
sub
and
or
add
js
or
jno
test
mov
and
ror
stos
fmuls
clc
sub
mov
les
int
addr16
mov
dec
and
pop
test
sbb
mov
sahf
inc
sbb
and
out
dec
pop
mov
jle
rcl
cwtl
int
leave
sbb
sti
cmp
sub
loop
movsb
loopne
mov
int
pop
inc
inc
pop
sub
out
or
mov
std
out
add
test
idivb
jg
pop
pop
jg
imulb
inc
imul
xchg
or
lods
dec
push
cmc
lret
sbb
sub
sar
xchg
hlt
loopne
mov
sub
mov
mov
cwtl
jnp
dec
xchg
outsb
dec
lret
mov
stos
cmp
add
fadd
test
stc
jae
sti
test
jbe
faddp
pop
xchg
mov
in
stos
cmpsl
cltd
pusha
test
shlb
xor
cltd
daa
std
and
cmpsb
stos
ja,pn
repz
add
mov
mov
aad
aas
testl
add
sbb
lret
sahf
sti
ja
xorw
mov
sbb
and
and
inc
push
into
push
sbb
mov
enter
push
popf
data16
adc
xor
mov
int3
stos
rcr
jg
push
add
or
or
jo
sub
pop
test
into
adc
push
mov
in
lds
stos
sub
jmp
xchg
inc
shlb
lret
cli
jae
jnp
dec
cltd
cmp
mov
mov
ljmp
add
sub
jae
add
add
mov
das
pop
lock
lods
daa
fnstsw
cmc
or
out
sub
mov
push
arpl
push
cltd
push
xor
mov
aam
std
mov
in
sub
or
fcmovnu
std
daa
cmp
nop
or
int3
jmp
jge
pop
pushf
andl
mov
orb
mov
xchg
popf
loope
call
pop
xor
lret
pushl
mov
cli
shl
sub
cmpsl
cld
fldcw
movsb
inc
xchg
pop
cmpsb
hlt
test
mov
aas
xlat
xchg
add
fnstsw
stos
jmp
mov
ds
mov
adc
lock
fs
sub
sub
jns
cmp
ret
adc
pop
out
clc
adc
bound
mov
add
xor
mov
testb
divb
sahf
clc
and
loopne
fidivs
adc
insl
scas
fwait
add
or
sub
add
pop
insl
dec
or
cwtl
sbb
mov
leave
add
andl
mov
mov
pop
call
inc
int3
adc
fisttpll
sub
fwait
iret
jle
rcrl
lods
bound
xchg
sbbb
out
mov
loop
push
add
fiaddl
mov
xchg
pop
in
rclb
fcmovb
mov
sbb
lods
cmp
add
or
data16
aam
sbb
jle
bound
sti
adc
add
mov
or
rolb
pop
pop
inc
and
or
cmp
xchg
pop
cltd
ret
mov
leave
mov
sbb
cmpsl
je
mov
mov
insb
sub
pusha
loopne
pop
test
gs
repnz
cmp
cmp
or
cmp
mov
mov
push
cmp
pop
push
incb
mov
mov
out
xlat
repnz
xchg
outsb
mov
push
push
ficoms
push
iret
scas
add
jg
or
cmc
mov
mov
stos
mov
cli
mov
mov
mov
jb
out
adc
adc
sub
adc
fldt
movsl
xchg
cwtl
stos
dec
mov
test
and
cmp
xchg
std
out
cwtl
outsl
jp
mov
xor
in
es
inc
xor
std
cwtl
mov
sbb
leave
std
pop
pop
mov
dec
rcl
ds
negb
fists
pushf
cli
pusha
and
dec
jo
pop
popl
aad
hlt
pop
pop
fcomip
pop
les
jge
inc
xchg
das
pop
xor
loope
jecxz
push
mov
lods
outsl
or
pop
rorl
mov
mov
fwait
jbe
push
add
ja
mov
bound
dec
shll
out
in
nop
mov
cli
xor
lret
sub
scas
arpl
sbb
iret
adc
test
cmp
mov
leave
aas
push
cli
fidivs
jbe
fucomi
lcall
mov
fildll
dec
jmp
adc
push
mov
xorl
sbb
adc
sub
repnz
mov
xrelease
and
lds
sub
mov
in
jmp
int3
add
dec
scas
cmp
mulb
mov
cmp
inc
mov
push
xor
jge
jl
push
bnd
mov
mov
push
jp
xor
xchg
mov
roll
and
incl
push
nop
lea
in
jecxz
adc
lods
xor
test
lcall
mov
adc
lods
or
sbb
push
add
bound
sbb
push
aad
and
jbe
pop
mov
adc
and
lret
jecxz
mov
push
jae
fiadds
and
call
xchg
sub
sub
sub
mov
out
inc
adc
lahf
inc
xchg
aas
jecxz
inc
mov
add
out
rcrl
icebp
and
fs
inc
mov
xor
add
adc
loopne
lock
and
push
mov
pusha
nop
nop
pusha
xorb
mov
xor
add
adc
loopne
lock
and
push
mov
pusha
nop
nop
xorb
mov
xor
add
adc
loopne
icebp
xor
and
push
mov
pusha
nop
nop
pusha
xorb
mov
mov
andb
pop
lcall
shlb
daa
sub
dec
mov
outsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
adc
je
add
data16
lds
lcall
hlt
pop
test
xchg
cmp
push
cli
or
je
add
adc
and
xor
les
jp
push
pop
les
ljmp
cmpsb
cli
not
lods
ret
sbb
xor
mov
aas
xchg
pop
out
imul
lock
call
xchg
fs
adc
adc
pop
and
icebp
mov
rcll
mov
mov
sub
xchg
inc
test
ljmp
jnp
enter
dec
push
mov
xchg
bound
sub
pop
jbe
out
aam
icebp
div
fists
mov
cwtl
mov
cwtl
ljmp
xor
lds
aam
pusha
stos
or
movsl
xorb
xor
pushf
inc
scas
fidivrl
jp
cmpxchg
inc
xchg
mov
or
sbb
mov
sti
nop
std
pop
shrb
pop
add
jns
dec
movsb
cmc
mov
pop
ljmp
loopne
insb
mov
add
bound
xor
jle
es
adc
or
imul
aam
out
test
pop
xchg
xor
int
shll
xchg
xor
push
mov
jno
shr
popa
mulb
mov
std
pop
sti
push
int
cmc
jg
stos
cmp
push
adc
and
xor
les
jp
dec
hlt
pop
test
xchg
cmp
push
cli
fs
add
adc
and
xor
les
jp
dec
hlt
pop
test
xchg
cmp
bnd
jmp
leave
lret
xchg
cld
fisttps
xchg
jb
cld
daa
adc
push
jo
jge
adc
xchg
ds
pop
push
jmp
test
sbb
mov
pop
mov
adc
out
mov
sub
lret
pop
pop
stc
mov
vpmaxsw
pop
test
push
fs
lea
xchg
and
inc
fisubs
test
enter
lcall
test
pusha
push
jmp
cmp
mov
iret
fcomip
nop
je
xchg
xchg
mov
cli
inc
push
and
out
insb
or
jle
cmpsl
sub
adc
imul
rol
stc
xchg
push
adc
fldl
add
push
test
jne
jmp
xchg
mov
dec
xchg
mov
xchg
mov
mov
xchg
outsl
sub
das
aam
jle
lea
xchg
inc
xchg
jge
lret
jmp
pop
popf
js
out
jae
out
out
mov
jge
into
js
ftst
xor
lods
mov
xor
data16
pushf
push
xlat
mov
xchg
cld
push
lods
mov
popf
or
enter
adc
dec
popf
xor
es
leave
jl
inc
pop
popa
or
inc
fcompl
pop
popf
jnp
pmulhw
fildll
mov
fistl
inc
cltd
sbb
mov
mov
jnp
in
mov
scas
das
sbb
mov
xor
jbe
mov
shl
imul
frstor
lcall
mov
fbld
pop
cld
jge
les
add
pop
int3
sbb
cmp
outsl
in
xchg
cmp
dec
cwtl
sub
mov
sbb
ret
and
sbb
adc
loopne
push
addr16
add
dec
xor
ds
adc
ret
add
inc
inc
inc
enter
aam
sahf
mov
push
pop
cmp
fimull
mov
mov
cmp
insb
jns
hlt
cli
shl
sub
imul
pop
cld
mov
aad
cmp
sbb
repz
xchg
pop
into
lea
mov
dec
inc
leave
cmpsb
outsb
lea
push
iret
push
pushf
and
sti
in
cmp
ret
gs
pop
pop
dec
js
pop
pop
cwtl
cwtl
mov
sub
pushf
bound
dec
xchg
loope
sub
out
out
pop
mov
lods
outsl
push
ds
test
je
into
mov
mov
mov
lret
cmp
mov
jmp
sub
and
roll
ficoml
xlat
jmp
imul
rorl
or
inc
inc
cmpsl
fisubl
divb
pusha
es
adc
jmp
faddl
pop
insb
cmp
adc
js
mov
mov
xchg
pushl
mov
and
aam
int3
ja
sbb
push
dec
mull
add
push
dec
inc
pop
inc
in
pop
outsl
sbb
int3
scas
out
scas
add
fisubrl
mov
jp
out
pop
add
mov
fcomps
nop
je
dec
daa
sbb
and
mov
push
sbb
lods
nop
jbe
inc
push
dec
pop
xor
daa
pop
inc
sbb
jne
add
rorl
inc
shl
movsb
and
fldcw
adc
stos
sub
mov
jmp
rclb
jg
xchg
jmp
sub
mov
test
mov
psubw
out
or
stos
or
rcrl
add
or
into
push
hlt
sub
test
mov
sbb
filds
inc
out
inc
enter
in
nop
jge
out
js
movsl
cs
ss
push
cmp
aaa
lock
fs
sti
push
sub
popa
and
bound
stos
pop
push
aaa
out
pop
in
movsb
scas
push
add
fsubrl
cmp
popf
fsubrp
dec
push
push
mov
out
lcall
test
xchg
pop
xlat
lcall
mov
sbb
test
xorb
pop
push
cmpl
js
cmp
pop
xor
nop
loop
outsb
sbbb
adc
add
test
dec
jp
or
push
and
ss
fists
das
jnp
adc
enter
lods
fldcw
sarl
inc
call
pop
loop
dec
sar
les
cmp
fcos
mov
push
sub
out
cmp
aas
sbb
and
pop
cmp
mov
mov
mov
fmuls
sbb
jmp
mov
dec
adc
fs
mov
aam
cmp
arpl
add
cmpsb
jge
cmpsl
push
and
pop
movsb
fsubr
lods
xchg
pop
sub
jecxz
mov
hlt
std
xor
movsl
in
leave
rcrb
push
adc
out
pushf
flds
push
shl
aas
ds
fdivs
int
mov
dec
aam
popf
mov
push
add
xor
lea
adc
adc
loopne
jg
pusha
mov
lods
lods
imull
adc
clc
xor
clc
mov
add
and
jl
mov
or
in
pop
movsl
paddsw
arpl
fisubrl
dec
outsb
push
mov
adc
pop
xlat
movsl
ret
adc
and
xorb
movsb
xchg
repz
stc
jo
and
pop
das
imul
lret
cmpsl
fidivrl
mov
pop
and
sub
in
sub
dec
dec
test
fcoml
pop
gs
cs
leave
jg
call
pop
sbb
push
mov
jns
pop
outsl
mov
movd
push
ljmp
arpl
out
loope
das
cmp
ja
sbb
add
cmc
push
xlat
pmulhw
int
sbb
jle
jae
iret
push
push
in
jo
cs
popa
sarl
fadds
test
icebp
sub
aas
in
outsb
mov
sub
lds
inc
push
fwait
inc
and
cmp
cli
or
inc
insl
aas
inc
xor
sbb
inc
pop
loope
in
rcrl
cwtl
xor
pop
scas
inc
aas
sub
insl
inc
xchg
ret
or
in
daa
adc
ljmp
inc
shl
sbb
sarb
ret
pop
aaa
sahf
out
jmp
inc
push
sbb
mov
jae
xchg
test
sub
sub
xchg
jae
or
aad
dec
test
pop
sub
daa
cmp
cli
stos
or
jg
call
mov
pop
test
mov
push
mov
mov
test
mov
sub
fxch
pusha
sarb
bound
and
adc
bound
mov
push
js
fistpl
adc
xchg
repz
arpl
loopne
ds
pop
shlb
or
push
and
negl
xchg
clc
inc
add
xor
out
push
scas
mov
aad
pusha
in
jmp
xchg
aad
arpl
mov
inc
arpl
nop
cmpsl
addr16
adc
movsl
js
pop
scas
jae
pushf
push
xchg
iret
add
xchg
es
adc
sbb
xor
xchg
jne
push
cld
not
xchg
cmp
sub
insl
lahf
adc
jp
dec
mov
cmpsl
je
loope
push
ss
aas
lret
lcall
or
stos
lret
js
push
ret
cmp
ja
xor
cmpb
lods
outsl
push
mov
imul
orl
dec
mov
or
push
inc
adc
pop
ds
xchg
popf
xchg
mov
lds
cmp
decb
mov
test
mov
xor
xor
cltd
mov
imul
test
xor
loope
insl
jmp
add
fwait
jle
xchg
mov
adc
int3
cmp
int3
sahf
clc
inc
jp
call
leave
cmp
repz
pop
add
xchg
sbb
pushf
sub
or
push
test
mov
xchg
gs
insl
js
movsl
push
mov
cmp
pop
orl
imul
or
fsub
xchg
adc
push
adc
loopne
jle
jb
mov
out
xor
sti
adc
mov
idivb
dec
ds
add
push
insl
test
je
ret
inc
sub
call
or
lea
jns
jae
cmpsb
dec
int3
fnsave
xor
and
mov
es
pop
nop
out
cmp
xchg
add
movsb
pop
shlb
push
imul
test
std
lock
test
jl
inc
or
push
push
pop
rolb
pandn
icebp
ror
mov
lcall
insb
fdivrl
or
adcb
or
dec
push
iret
loopne
lcall
push
shl
fdivrs
fmuls
andl
pop
sarb
icebp
out
cmp
push
mov
loop
cwtl
fidivs
ret
repnz
push
int
sbb
adc
inc
xchg
lods
adc
scas
or
fwait
sar
xchg
cwtl
cmp
ret
movzwl
adc
xchg
jbe
scas
aam
jle
rcrb
add
xchg
inc
repz
xchg
mull
push
inc
cli
insb
mov
mov
dec
sbb
push
and
and
into
imul
test
mov
jbe
into
jmp
mov
mov
cwtl
add
jmp
mov
pop
out
mov
mov
movsb
mov
inc
jge
ficomps
popf
nop
ret
and
shlb
cld
xchg
xorb
jmp
lret
jl
sti
outsb
notb
and
es
testl
cmp
mov
push
cmp
jnp
andb
sbb
cld
out
and
cmpsb
sub
dec
jo
jecxz
roll
ud0
inc
ss
or
inc
div
xor
adc
notb
pushf
add
cli
and
stc
xor
fwait
inc
int3
xor
mov
sti
inc
jb
pop
mov
xchg
popf
push
cwtl
xchg
push
nop
loope
cmp
mov
jle
cmp
and
adc
in
dec
sub
out
int
scas
sbb
or
repnz
push
or
repz
mov
out
enter
pop
push
scas
xorl
insb
and
rclb
push
mov
lcall
mov
add
and
add
cwtl
iret
lahf
fcmove
pushfw
ljmp
lods
add
aas
repz
subl
aad
push
push
mov
ret
in
iret
and
test
pushl
mov
mov
mov
les
clc
cmp
jge
mov
push
xchg
insb
das
push
jmp
cmp
int3
jnp
xor
fisubrl
push
repz
add
test
es
push
sahf
mov
and
xor
pop
ss
lock
pmuludq
lret
mov
add
loope
fmuls
cmp
int
pop
adc
xor
mov
setl
mov
xor
out
dec
aas
jge
pop
mov
sahf
or
or
or
icebp
cmc
ficomps
pushl
mov
dec
rcrl
mov
mov
pop
in
out
scas
movsl
dec
mul
jbe
leave
aas
int
sub
cmp
rcrl
or
and
and
cltd
imul
jo
jge
push
xor
lock
jle
outsl
jo
aaa
adc
mov
cld
ret
mov
sub
enter
mov
adc
adc
repz
push
cld
repnz
fadds
mov
idivb
iret
xor
cmp
dec
mov
bound
pop
jbe
jecxz
jno
notb
icebp
add
mov
jecxz
mov
imul
cld
sbb
rcll
adc
sbbb
sahf
push
xorl
fildl
jg
inc
and
inc
sbb
insb
into
pop
sbb
mov
stos
push
xor
dec
enter
push
fdiv
popa
cmp
faddp
mov
mov
sti
popf
mov
test
mov
xchg
mov
mov
dec
fisubrl
dec
scas
jmp
and
push
xchg
pop
mov
mov
sti
andb
cmp
mov
dec
repz
or
andl
outsb
stos
pop
mov
xor
scas
pop
fsubr
sbb
ja
cmc
or
xchg
mov
mov
mov
jge
andl
xchg
jns
adc
bound
fwait
pop
int3
jmp
xchg
xchg
in
mov
popa
adc
xchg
jb
arpl
mov
outsl
mov
cltd
pop
push
hlt
cmp
xorl
movsb
mov
mov
les
sbb
adc
mov
cmp
pop
icebp
cli
out
int
inc
imul
insb
or
mov
sbb
add
or
xor
add
mov
outsb
mov
adc
xchg
fwait
pop
mov
leave
roll
loopne
lcall
jmp
gs
lcall
inc
shlb
mov
test
nop
sub
dec
add
pcmpgtd
hlt
mov
in
or
out
outsb
out
cmp
test
jmp
sub
inc
cltd
movsl
dec
fisubl
mov
and
mov
adc
dec
sarb
dec
inc
popf
in
ljmp
pop
add
adc
mov
rolb
gs
xorl
xchg
arpl
sbb
sar
cmpsl
inc
daa
mov
movsl
dec
rorl
jecxz
jmp
jae
xchg
movb
push
addr16
and
inc
rcrb
in
or
pop
lods
int3
lods
mov
call
fs
dec
or
mov
iret
test
ljmp
adc
cmp
push
xchg
fstpt
inc
mov
xor
pop
adc
imul
push
sub
push
jo
pop
xchg
inc
loope
xchg
outsb
sbb
popa
pop
movl
xor
xorb
outsl
enter
sbb
cmc
jne
cmovge
cmp
rcll
fst
repnz
jmp
call
lret
push
xchg
adc
into
scas
xor
add
cli
dec
mov
sub
xchg
lcall
mov
or
nop
daa
aad
sbb
lock
cmpb
lcall
pushf
or
jns
xor
dec
or
inc
jbe
cmp
bound
push
xor
movsb
or
lods
push
dec
jl
pop
ljmp
push
fadds
popl
hlt
add
jne
nop
std
xor
ficoml
xor
mov
fistps
and
dec
mov
int
out
inc
sbb
xor
push
enter
lods
mov
int
adc
mov
mov
ljmp
fcoml
insl
sub
test
cmp
cmc
push
lods
mov
lret
lock
dec
mov
and
add
mov
and
push
pop
jge
mov
mov
cltd
sbb
ret
and
es
les
dec
addl
dec
mov
and
fstl
js
cmpsb
fisubl
scas
loopne
fdivl
or
shll
fucom
xor
jg
inc
mov
xor
out
and
lds
popa
mov
aad
out
mov
cli
adc
xor
adc
pop
or
push
add
sti
aaa
in
add
test
cli
sbb
jecxz
sti
sub
sbbb
or
add
xchg
mov
std
and
pop
in
sub
test
mov
pushf
and
dec
pop
scas
jo
aas
das
leave
or
pop
push
push
or
ja
out
xchg
mov
ljmp
mov
adc
or
sub
out
cmp
mov
mov
cwtl
xchg
stc
pop
and
outsl
mov
add
pop
mov
shl
jecxz
lock
dec
outsl
push
les
icebp
mov
push
fldenv
and
push
fwait
arpl
stc
ljmp
vmwrite
mov
dec
pop
in
out
pop
addb
enter
outsb
rcrb
xchg
cmp
jb
and
out
push
inc
push
divb
dec
sub
outsb
fdivrl
jmp
das
jmp
cwtl
out
lock
in
lea
cli
add
ret
push
test
pop
jg
scas
pushfw
dec
or
mov
inc
in
dec
lds
rol
bound
popa
pop
addr16
sub
das
jnp
repz
xor
or
cld
adc
cmp
popf
roll
bound
fs
decb
jg
mov
cwtl
aaa
cmpsl
mov
data16
movsb
add
pusha
test
and
popa
es
push
mov
cmpsb
dec
cmc
test
nop
mov
push
loope
icebp
xor
mov
xchg
shlb
adc
notl
pop
fnstsw
jle
ud1
test
inc
and
pop
nop
ljmp
test
mov
or
or
subl
or
or
cli
test
movsl
dec
pop
and
jnp
outsl
stos
xlat
mov
shrl
pop
das
add
vprotq
add
and
test
add
mov
inc
pop
sub
push
mov
sbb
shlb
lds
mov
adc
int3
outsb
arpl
mov
or
lret
repz
inc
or
into
es
loope
pop
pop
mov
in
das
lds
lds
popl
ficomps
jae
mov
or
gs
icebp
jno
push
mov
mov
and
cld
mov
dec
dec
jecxz
xor
sti
mov
stos
lahf
sbb
pop
fwait
pop
in
call
out
enter
lock
ror
loop
jb
pop
pop
fsubrl
inc
int
pusha
icebp
xorl
daa
das
fimuls
les
cltd
cmp
mull
jae
xor
cltd
out
mov
xchg
rdmsr
mov
inc
nop
ss
adc
mov
pop
div
lods
lret
sbb
dec
sub
or
mov
fisubs
fdiv
lods
es
or
sbb
lods
push
add
call
dec
out
cmpsl
int
aam
dec
mov
lea
imul
imul
sub
rorb
ljmp
adc
imul
cmp
test
je
cmp
test
jge
movsb
inc
addr16
imul
ss
and
fcmovnu
inc
jne
movsb
inc
adcl
xor
mov
jb
outsb
test
ja
movups
test
sub
pop
loopne
mov
shll
into
out
scas
or
pop
loopne
mov
into
pop
pop
sbb
test
xchg
inc
add
mov
in
mov
shrl
outsb
push
xor
popf
xor
add
int
sbb
add
pushf
fldl
dec
inc
push
shlb
pop
mov
icebp
cmc
or
ret
mov
inc
mov
adc
das
xor
daa
in
ficomps
fdivr
and
shlb
insb
adc
cmp
cmc
popf
add
lret
stos
mov
cmp
push
pusha
lcall
pop
enter
inc
stc
xchg
clc
jb
jbe
cmpl
xor
outsl
sbb
cmp
xchg
xchg
fwait
jo
sbb
subl
add
ret
dec
outsb
ljmp
jb
pop
xor
add
clc
mov
adcb
add
adc
pushl
push
mov
or
std
cwtl
push
mov
and
pusha
sahf
mov
scas
pop
adc
adc
sahf
loope
lret
out
sub
add
js
jp
sti
inc
repz
aam
inc
roll
mov
in
mov
aaa
clc
movsl
inc
loope
or
out
cmpsb
mov
or
push
es
arpl
push
shrb
das
sbb
add
pop
dec
movsb
mov
inc
daa
jecxz
imul
push
sbbb
or
pop
ja
icebp
sub
pop
push
sub
mov
jmp
sbb
loop
and
test
cmc
out
inc
jo
outsl
into
jnp
mov
stos
and
icebp
loope
lock
pop
pop
sbb
mov
mov
adc
cmp
inc
mov
and
inc
mov
inc
outsl
or
inc
scas
xlat
stc
pop
or
jl
pop
filds
pop
cltd
testb
xor
push
xor
orb
xchg
push
cmpsb
unpcklps
filds
lds
pop
daa
push
sub
add
adc
or
fld
sbb
test
in
scas
jmp
inc
and
jmp
inc
test
dec
mov
push
test
push
add
mov
ror
jge
inc
and
pop
sahf
xorl
or
int3
or
adc
push
and
push
or
out
and
xor
pop
mov
sti
inc
xor
mov
popf
pop
shlb
filds
xchg
cmp
pop
int
lret
add
nop
pop
pop
loopne
lcall
inc
arpl
sub
and
adc
and
xor
les
jp
dec
hlt
pop
test
xchg
cmp
push
cli
fs
add
adc
and
xor
les
jp
dec
hlt
pop
test
xchg
cmp
fs
add
je
xchg
stos
adc
and
hlt
lcall
hlt
pop
test
test
movsb
or
ljmp
add
add
and
mov
les
rorb
hlt
sub
pop
cmc
dec
in
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
sbb
sub
cmp
test
jle
add
mov
cltd
xchg
test
mov
fucomip
clc
decb
push
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
push
sbb
sub
cmp
dec
dec
pop
pop
push
mov
ror
mov
mov
jl
sub
pop
xor
cmpb
push
bound
cmc
jns
mov
stos
mov
push
xchg
push
je
mov
pop
pop
rcll
sahf
sbb
stos
aaa
fcompp
test
push
adc
das
cld
dec
stc
ret
add
mov
test
js
cwtl
xor
xor
sbbl
inc
cmp
push
in
data16
add
push
cwtl
imul
loope
rol
xor
lds
jmp
cmp
mov
popf
daa
into
mov
push
out
jmp
mov
mov
stos
aad
in
neg
mov
push
fistl
mov
push
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
push
insb
addr16
outsl
push
jg
or
sub
jp
mov
std
xchg
mov
mov
jb
push
pop
dec
or
sub
jmp
in
stos
leave
mov
dec
test
sbb
dec
push
inc
add
pop
pop
push
mov
mov
call
push
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
push
cmp
stc
mov
pop
fldl
sahf
test
imul
sbb
and
sti
xchg
fmuls
andb
nop
sti
je
push
pop
and
fadds
mov
or
std
iret
ljmp
add
arpl
sti
cltd
xor
mov
sti
inc
mov
jp
mov
mov
sbb
movsl
outsb
pop
imul
negb
xor
jl
int
ret
mov
xor
xor
pop
jmp
cmp
mov
lea
idivl
push
loopne
imul
and
fwait
fs
sub
lock
mov
lods
in
and
adc
sbb
hlt
push
pop
movsl
arpl
sub
les
jl
pushaw
xor
sar
stos
imull
mov
orl
sub
inc
or
pop
jecxz
sbb
popa
push
sbbl
jmp
inc
mov
mov
cmp
sbb
inc
sub
mov
push
test
popf
rorl
inc
in
icebp
pop
inc
cmp
sbb
fwait
aad
inc
sbb
push
mov
sbb
mov
xchg
jno
adc
lret
pop
cmpsb
mov
dec
xor
sbb
daa
iret
xchg
clc
dec
jge
or
mov
xor
imul
icebp
dec
das
sahf
fcomps
push
rcl
test
stc
pop
push
adc
cwtl
fnstsw
pop
xchg
lods
ds
xchg
cmc
pop
pusha
outsb
mov
pop
nop
mov
loopne
xchg
xchg
negl
or
xchg
mov
xor
or
mov
xor
mov
in
loopne
js
test
pop
test
mov
outsl
and
xor
mov
mov
jae
push
lcall
or
mov
cli
bound
enter
push
in
loopne
gs
mov
sti
pusha
pop
out
movsb
mov
pop
pushf
sbb
jecxz
jnp
xchg
jns
lds
pop
dec
outsl
shll
jb
mov
movsb
sbb
pop
dec
adc
das
push
rclb
inc
inc
push
push
aam
imul
and
push
and
mov
xchg
jge
out
adc
adc
pop
sub
iret
push
sahf
scas
inc
out
aad
dec
mov
push
or
add
sub
loopne
out
rorb
jns
lock
xor
out
roll
cmpsl
arpl
push
and
xchg
pop
dec
clc
push
pushf
test
addl
icebp
pushl
pop
jbe
imul
sub
call
push
and
pop
mov
mov
lret
lahf
mov
pop
dec
inc
dec
jne
cltd
mov
and
or
addr16
jmp
dec
aad
jp
inc
jb
mov
bound
push
add
and
inc
dec
adc
cwtl
fnstcw
lds
xchg
pushf
addr16
sub
popf
mov
jno
cmp
test
jne
loop
sub
les
dec
sahf
aad
sbb
fimuls
imul
loop
xchg
or
ss
and
mov
jp
add
test
cld
sbb
add
call
inc
and
inc
fwait
jl
cwtl
aas
icebp
and
jb
out
daa
int3
test
enter
and
call
push
enter
in
mov
adc
add
sbb
idivl
push
push
dec
stos
fstp
loope
inc
addr16
pop
mov
sbb
xchg
repz
in
sti
sub
test
mov
out
pop
insb
jge
js
cld
sbb
int
cmp
cmp
and
aad
cmp
push
loop
adc
ss
xor
push
stos
mov
in
rolb
jmp
icebp
dec
mov
add
scas
or
in
lea
fsubs
xor
shr
xor
inc
flds
jge
inc
pop
hlt
imul
iret
imul
jae
movsb
inc
fdivl
mov
mov
inc
insl
loope
lods
int3
dec
leave
and
add
add
mov
inc
xchg
push
pusha
and
sbb
test
rol
int
push
rolb
jge
test
mov
rorl
pop
loope
xor
outsb
cli
decb
jne
lahf
lret
mov
mov
decl
jo
xchg
adc
popa
pop
xlat
and
cli
fisubl
or
and
cwtl
jle
xor
insb
jns
and
std
mov
setb
jae
out
jg
push
inc
jnp
enter
sub
mov
mov
adc
movsb
mov
cltd
repnz
mov
in
scas
inc
mov
aas
xchg
sub
jle,pn
jns
lock
aaa
cmpsl
xor
sti
adc
dec
dec
sbb
dec
jno
mov
adc
sahf
dec
push
aaa
xchg
ljmp
aam
xchg
in
jae
lret
call
roll
xor
push
xor
into
pushf
cld
pop
lret
sbb
ret
out
push
add
clc
stos
pop
or
popf
mov
movsl
mov
jge
cmc
pop
cmpsl
in
adc
xchg
or
incl
mov
test
std
mov
mov
pop
push
inc
imul
outsb
repz
mov
or
fstl
cmp
push
mov
lods
arpl
mov
adc
and
dec
cmp
adc
test
and
addr16
lahf
xlat
fiadds
aad
cwtl
arpl
mov
test
mov
jnp
mov
xchg
outsl
outsl
test
pop
es
es
cmpsl
jmp
pop
lahf
mov
add
and
cmp
je
ss
fidivl
data16
jae
dec
adc
fsubr
dec
cmp
test
fisttpl
inc
sub
fcmovnb
aad
sti
call
adc
cltd
je
adc
loop
jp
jmp
xor
ret
xchg
inc
add
push
pop
sbb
push
push
movsl
dec
jns
cmp
nop
push
pop
pop
mov
xor
xlat
clc
scas
push
ret
jae
add
nop
hlt
shrb
cmp
mov
jp
mov
repnz
fs
sub
cld
xchg
dec
ja
or
bound
and
ss
mov
cmc
dec
jnp
inc
enter
enter
gs
std
xor
ret
cmp
lret
iret
mov
and
jbe
push
cmpb
int3
mov
inc
pop
pop
pushf
mov
lock
add
push
push
pusha
cmpsb
out
pop
push
insl
fldenv
inc
jmp
cmp
mov
in
test
fiadds
mov
sub
mov
mov
outsb
bnd
adc
lcall
sahf
daa
or
rol
pusha
sub
mov
outsl
int3
fdivrs
or
add
mov
rcl
or
and
lock
les
lahf
mov
cmpb
xchg
mov
or
push
mov
clc
int3
push
adc
insl
cmpsb
iret
jae
mov
and
sbb
je
adc
jle
or
xlat
shll
xchg
adc
fidivl
mov
inc
sbb
dec
out
leave
cmpsl
jno
add
and
xchg
movsl
sub
stc
add
into
mov
push
inc
mov
add
aad
std
les
xchg
mov
cmp
push
ds
jecxz
mov
and
xor
ret
pushfw
arpl
sarl
push
aad
add
pop
xchg
mov
jle
nop
inc
push
and
ret
push
ss
std
mov
insl
xchg
fwait
push
mov
pop
mov
pop
lds
stos
popa
test
in
ss
or
push
xor
add
out
mov
mov
mov
push
push
add
insl
loopne
add
mov
sub
mov
mov
bound
and
mov
pushf
rcrb
int
shl
mov
cld
jno
dec
out
scas
jmp
mov
jle
lret
in
cmc
aaa
add
push
add
je
push
lcall
xchg
ror
lods
jbe
cmp
divb
mov
pop
jb
outsl
rcr
imul
es
mov
in
sbb
sahf
in
jb
sub
jns,pn
sbb
xor
pop
data16
sbb
jg
movsb
add
inc
or
or
dec
mov
and
jl
and
insb
fisubs
jae
mov
daa
ja
fldlg2
pushl
mov
pusha
out
test
sti
jb
jge
mov
repnz
mov
xor
push
xchg
ja
jp
xchg
sbb
notb
adc
push
shll
cmpsb
dec
cmc
jmp
cwtl
xchg
lock
mov
pop
adc
adc
push
cld
mov
negl
pop
lea
sbb
push
insl
xchg
xchg
lea
mov
adc
add
inc
ret
xchg
lahf
testb
insb
cmp
xchg
cmpsb
cmp
test
sbb
repnz
stc
mov
cmp
in
push
or
mov
pop
mov
subb
or
xchg
subl
lahf
sbb
sbb
lods
ljmp
dec
mov
aam
adc
cmpsl
add
xor
sbb
adc
test
arpl
hlt
dec
fmull
adc
xchg
jmp
dec
hlt
rolb
ja
ret
repnz
arpl
fcomps
jg
dec
nop
nop
and
mov
or
jge
lods
xchg
cli
scas
inc
jmp
sub
and
jle
mov
inc
dec
xchg
and
mov
sub
lock
xchg
sbb
dec
int
pop
ret
lret
stos
jmp
lcall
sub
orb
fucomip
xor
add
cmp
ds
ljmp
hlt
xchg
or
add
jge
lock
out
enter
ds
enter
dec
dec
sbb
std
std
cmpsb
mov
in
les
iret
insb
mov
stc
rolb
pushf
pop
or
or
add
dec
in
fmul
jo
inc
xor
fcoml
pop
shll
sbb
sbb
mov
cmp
or
push
rcrl
test
xchg
jge
mov
xchg
add
scas
nop
mov
push
inc
cmc
pop
lds
pop
ret
push
fmul
loop
movsl
xor
sub
sub
outsb
inc
test
ficompl
pop
mov
cmp
clc
mov
xor
dec
rcl
inc
xchg
add
mov
mov
cmpsb
int
pop
pop
xchg
add
icebp
xchg
mov
xchg
int
pop
roll
adc
add
cmp
push
or
cmpl
test
inc
ja
popf
sbb
jge,pn
fwait
in
xchg
push
xchg
sbb
jbe
xchg
xchg
adc
inc
dec
inc
loop
cmp
sub
addr16
and
xchg
push
inc
int3
xor
ficomps
jne
mov
lock
loope
jno
push
adc
sbb
mov
in
shlb
jg
xchg
xor
leave
frstor
mov
repz
scas
cmpb
out
out
jmp
cwtl
js
inc
dec
fldcw
sahf
jae
mov
mov
aad
sbb
cmp
fmulp
rcrl
inc
dec
jl
and
jle
mov
das
loop
out
mov
sub
add
ljmp
out
imul
jmp
je
xchg
push
xchg
mov
in
test
notl
sbb
int3
xor
outsl
ss
xor
cltd
movsl
jmp
fnstenv
adc
or
jmp
lret
xor
outsl
xchg
sub
in
dec
inc
leave
arpl
lock
imul
rolb
cwtl
adc
int
fcmovnu
cmp
or
mov
and
mov
pop
imul
sahf
adc
sub
out
or
je
aaa
stc
cmp
jmp
scas
mov
clc
or
cmp
add
loopne
sub
repz
dec
sub
sbb
jo
imul
sti
push
pushf
adc
les
add
fmulp
stc
lods
out
mov
add
sub
fnstsw
adc
mov
xchg
xor
mov
fsubrl
xor
adc
jecxz
xchg
jae
mov
ret
shrb
test
arpl
inc
aam
xor
test
jae
cmpsl
cs
incl
lret
repz
mov
stos
test
cli
test
sub
ds
roll
subl
outsl
sub
add
adc
push
in
sbb
pop
int
mov
mov
ja
xchg
push
pop
lds
adc
mov
xchg
lahf
arpl
pop
in
inc
mov
repnz
xor
adc
divl
or
or
nop
add
popl
push
sti
daa
les
flds
sbb
js
adc
inc
les
int3
cmpsb
lcall
dec
push
inc
or
xor
mov
add
cltd
mov
ljmp
pop
mov
pop
jb
fnstenv
loope
mov
loop
stos
arpl
aas
adc
xor
mov
stos
push
aad
mov
sub
outsb
mov
cli
adc
mov
adc
out
cmc
mov
faddl
dec
ror
mov
mov
jnp
or
cwtl
push
call
dec
lcall
xchg
mov
mov
mov
dec
cmpsl
push
cmp
movl
xchg
cmp
loope
cmp
gs
adc
das
or
xchg
in
lret
cmp
or
aas
daa
popa
lods
sub
frstor
xchg
pop
int
fwait
sub
jo
mov
mov
je
xchg
xor
or
cmp
movsb
ljmp
dec
lcall
push
sub
push
pop
pop
jo
mov
test
mov
sub
iret
enter
adc
xor
or
adcb
pop
outsb
ret
test
mov
pushf
or
lock
mov
xor
jne
shlb
js
sub
jp
adc
and
cmp
addl
jne
pop
add
dec
add
cld
subl
dec
xchg
xor
or
shr
xor
sub
xchg
ret
jp
imulb
xchg
push
ficoml
inc
cmp
lret
jb
rcrl
cltd
push
or
nop
fwait
cmc
cld
cmpsl
xchg
cmpsb
orb
xor
xor
aam
mov
lret
dec
mov
lahf
sbbb
fldcw
data16
mov
cmpsl
inc
mov
es
mov
jns
push
lods
mov
pop
xchg
mov
lods
mov
or
aam
jae
dec
jg
das
fsubrs
and
int
ja
iret
repz
negb
loope
xchg
push
push
cmp
pop
pop
pop
pop
mov
pop
fisubrs
popa
outsb
add
push
hlt
daa
push
add
mov
cmp
inc
sbb
cmpsl
mov
bound
adc
popa
push
rorb
in
xchg
cmp
aaa
adc
rorb
mov
push
jbe
jae
out
cmp
or
test
sbb
test
cmpsb
int
mov
ret
mov
fnsave
imul
add
mov
imul
sub
xchg
adc
xor
and
mov
jmp
pop
fldcw
mov
faddl
mov
fistpl
jns
mov
enter
js
mov
js
cmp
mov
xchg
sbb
dec
or
adc
sbb
test
scas
jecxz
mov
pop
outsl
sbb
ja
mov
pop
outsl
xchg
xor
and
sarl
jmp
inc
mov
dec
xlat
ret
clc
fldt
push
jge
mov
cwtl
mov
lahf
bound
cmp
pop
cmp
ret
add
out
pop
movsb
pop
mov
xchg
push
ja
test
lret
ds
push
jp
add
lods
pushf
mov
sub
popa
jg
scas
das
inc
inc
xor
cmpsl
cmp
jae
jmp
rcll
loope
xchg
stc
rcl
cmp
push
loop
mov
mov
bound
arpl
sub
dec
jmp
test
cld
lret
inc
xchg
jge
xor
imul
pop
sbb
ret
jb
dec
test
ret
pop
sub
jno
adcb
mov
jno
xchg
loopne
addl
push
push
fsubrs
jl
pop
mov
pop
in
js
hlt
insl
nop
lods
push
xorb
in
pop
js
stos
or
stc
imul
cmpsb
adc
cmp
and
out
insl
push
dec
roll
adc
movsl
stos
fcoml
jne
push
stos
iret
dec
pop
scas
sub
movsb
inc
roll
push
add
daa
fs
push
into
call
xchg
or
sti
mov
repz
arpl
mov
mov
std
mov
jne
add
imul
mov
mov
and
adc
pop
sbb
mov
imul
xchg
cld
loopne
jl
cmp
lea
adc
lds
stos
dec
std
xor
call
pop
call
sub
sub
add
pushf
pop
fs
add
jbe
ret
pop
xchg
xor
dec
loope
mov
hlt
jl
pop
fstps
mov
push
out
das
and
or
cmp
pop
icebp
cmp
dec
inc
adc
mov
lea
fwait
int3
mov
sub
push
lret
jns
push
jnp
shl
adc
mov
dec
out
sub
xlat
ror
in
aas
xchg
mov
enter
mov
xchg
add
pop
adc
daa
adc
inc
cmpsl
bswap
ret
cwtl
jecxz
mov
aas
nop
jl
lods
jbe
jns
mov
sub
les
scas
out
xor
sarb
pop
mov
imull
jns
jns
movsb
test
adc
push
jns
shrb
pop
mov
xchg
inc
call
inc
sbb
movsl
push
inc
aaa
push
ret
mov
int
fnstsw
cmpsb
scas
push
out
sub
xlat
dec
or
test
fsubl
add
popf
dec
out
ss
rorb
jl
sar
leave
std
xor
jl
sub
stc
movsb
std
movsb
push
mov
or
iret
stos
es
filds
add
adc
and
je
and
lds
fcmovb
sbb
fisttpll
mov
jne
pop
ljmp
je
xabort
loope
jno
ds
push
or
std
cmpsb
and
inc
psrlq
setle
cwtl
or
pusha
pusha
push
repz
lahf
stos
dec
hlt
lds
cmp
fcomi
mov
and
sbb
lea
cwtl
sti
sub
lcall
inc
cpuid
int3
add
repnz
adc
cmp
pop
jb
jg,pt
push
andb
fcoml
pop
ljmp
or
stos
addr16
lea
cmp
add
inc
sbb
fnstcw
mov
filds
and
jl
and
add
gs
add
in
sbb
push
clc
repz
addr16
xchg
adc
lds
inc
xchg
test
inc
sahf
das
int3
in
enter
out
or
mov
mov
and
jns
xor
or
dec
ljmp
add
xor
cs
sbb
xor
jl
out
outsb
jle
xchg
jle
cmp
pop
mov
jmp
jmp
pop
cmc
bsr
loop
or
jg
fwait
push
mov
repnz
jno,pn
cltd
dec
push
lret
dec
or
mov
xor
ret
inc
xchg
xchg
iret
mov
dec
adc
xchg
subb
jb
sub
xchg
inc
shll
enter
xlat
or
imul
iret
sub
mov
stc
es
jl
adc
mov
pop
ffreep
clc
jecxz
movsb
mov
mov
pop
jae
ljmp
addl
fadd
imul
push
imul
pushf
sbb
pop
cmp
mov
push
xor
sbb
shlb
inc
fists
rcl
shll
adc
mov
pop
or
cli
jns
inc
mov
sbb
call
enter
das
add
add
rcrb
popa
cltd
ret
pop
in
andps
or
inc
and
dec
mov
and
cmpsb
addr16
mov
adc
xchg
in
insb
cs
pop
sub
sub
cmp
cs
cmp
xchg
dec
cmpsl
push
aam
mov
push
adc
filds
cmp
jp
test
pop
pop
test
dec
jb
bswap
inc
push
adc
cmp
push
pop
out
mov
jle
cmpsl
test
push
cld
push
cmp
xchg
fimuls
cmp
pop
xchg
lahf
jle
sbbb
jo
movsb
sub
pop
or
fisubrs
imul
std
push
jb
push
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
push
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
push
cwtl
push
test
cmp
enter
push
mov
mov
call
push
sbb
sub
cmp
dec
dec
pop
pop
push
mov
leave
mov
adc
and
sbb
sub
inc
in
mov
mov
clc
lock
gs
int
xor
adc
pusha
pop
push
dec
inc
in
mov
shlb
mov
fstl
lods
and
jo
pusha
jno
mov
mov
hlt
in
sbb
mov
stos
mov
or
push
divb
dec
inc
mov
scas
test
lds
add
cwtl
fdivr
add
data16
and
repz
lahf
jbe
leave
add
pop
push
pop
bound
jl
pop
addb
push
lea
sbb
sub
jne
std
dec
push
pop
bound
jge
icebp
pusha
and
das
xchg
dec
js
push
mov
jl
xchg
pusha
pop
fisttps
test
dec
lea
shlb
out
pop
enter
mov
xchg
int
xorb
sbb
ret
jge
std
mull
mov
loopne
sbb
das
mov
jbe
stc
lock
mov
inc
lds
pushf
orb
cwtl
ffree
push
xor
add
sub
push
cmc
inc
dec
mov
mov
popf
lock
shrb
and
arpl
sbb
pusha
dec
push
sub
in
aam
clc
in
xchg
xchg
adcl
xor
jb
cmp
xor
ds
test
in
aad
icebp
loope
mov
mov
insl
js
cmp
pusha
pop
push
dec
inc
mov
nop
lea
fst
int
cmp
adc
pusha
pop
push
dec
inc
mov
nop
lea
fst
int
cmp
mov
add
cmp
push
sbb
mov
add
mov
jle
test
mov
or
enter
pop
mov
aas
and
jmp
loopne
xchg
iret
jmp
dec
lock
push
subl
lahf
rclb
cmp
in
dec
data16
xor
test
fwait
insl
or
jns
push
push
jl
and
in
sbb
test
lock
es
xor
fsubrs
lds
movsl
or
or
mov
push
scas
jecxz
push
inc
mull
pop
and
in
ss
mov
mov
aaa
mov
xchg
xchg
jb
push
lcall
xchg
test
lret
push
mov
out
pushf
and
sbb
repz
ret
mov
addr16
ret
int
sbb
jo
xor
fistl
imulb
adc
idiv
cld
pop
scas
mov
rcll
loopne
orl
rcr
cmp
out
insb
mov
rolb
push
jl
stc
add
dec
push
dec
rol
pusha
out
inc
mov
jb
mov
or
xor
xor
pop
and
lods
cmpsb
inc
fildl
clc
cmp
cmpsb
add
shlb
jecxz
movsb
cli
inc
int3
lock
lret
cmp
adc
jno
mov
sub
dec
icebp
ds
daa
xchg
sahf
cmp
push
pushf
xor
popa
leave
loope
sbb
xlat
test
aam
push
cmp
cmp
mov
addr16
push
mov
div
jno
jb
std
fwait
sub
fst
pop
ret
insl
test
mov
or
fists
scas
test
and
sub
int3
mov
adc
inc
imul
jne
lds
and
in
push
lods
fdivs
dec
mov
cmpsb
push
cmp
sub
mov
daa
js
ror
pop
sarb
or
add
and
xor
cs
xlat
jmp
popa
and
sub
push
mov
pop
add
and
aam
pop
int3
dec
sub
mov
sbb
or
push
subb
xchg
int
outsb
das
xor
test
inc
testl
push
sub
arpl
mov
pop
arpl
ror
movsb
fsubs
pushf
sbb
inc
imul
mov
rcrb
cmp
imul
sbb
push
inc
int3
mov
outsb
cs
fldcw
insb
iret
insb
mov
inc
mov
cmc
push
xchg
cltd
and
repz
inc
push
lods
mov
cmpsb
cmp
mov
mov
cwtl
cmp
mov
daa
xchg
sahf
inc
cmpsl
pop
cmpsb
and
lret
out
jecxz
out
bound
pop
mov
sbb
out
jo
je
push
aaa
daa
mov
movsb
repnz
jecxz
das
arpl
inc
and
lock
pop
mov
adc
cli
mov
pop
inc
xchg
xor
test
or
decb
out
jbe
push
movsw
scas
test
mov
xlat
das
pop
out
mulb
inc
mov
sub
mov
mov
xchg
inc
cmp
jmp
dec
sarb
pop
fisttpll
push
push
or
jecxz
aas
jo
adc
inc
iret
and
cmc
bound
cltd
shl
icebp
push
xorb
js
push
push
cmp
mov
cmc
clc
push
icebp
popf
adc
pop
jmp
test
outsl
jecxz
loop
add
inc
sbb
cmp
or
daa
cs
cmp
std
aas
or
mov
xor
sbb
mov
xchg
ljmp
gs
imul
push
loop
movsb
adc
notb
out
out
and
loop
mov
es
cmc
inc
push
add
stos
add
jp
cmp
aas
repnz
imul
push
bndstx
pop
mov
push
xor
fcomps
rorb
fcoms
push
mov
adc
in
cmpsl
jae
mov
pop
cmpsb
jne
lcall
jbe
sub
fimuls
mov
lods
mov
or
add
pop
push
in
mov
mov
xor
stc
adc
add
mov
jecxz
nop
dec
sbb
sbb
mov
mov
xchg
aam
js
in
aas
push
repz
insl
rcl
rcrl
jne
xchg
aad
add
pop
mov
cmpsb
add
xchg
lea
lcall
negb
mov
xlat
scas
mov
xor
jmp
fdivl
mov
sar
pushf
dec
dec
jns
inc
or
in
and
jl
pop
pushf
mov
aad
xchg
xor
jb
hlt
data16
out
scas
xchg
negl
pop
ljmp
jno
mov
outsb
push
sbb
rsqrtps
sub
les
aam
orb
loope
add
shl
repnz
adc
outsl
push
and
push
xor
push
jle
push
in
daa
sbb
push
push
in
jg
inc
jg
insl
in
movsl
adc
int3
jl
cmp
pop
das
aas
and
scas
int
sbb
and
fstl
add
test
loop
in
jmp
and
mov
pop
pushf
jae
jno
and
ljmp
pushf
psubusw
in
mov
mov
repz
ret
dec
mov
pop
pop
in
test
out
addb
lods
and
add
push
mov
es
mov
mov
mov
movsb
push
movl
mov
mov
lock
lea
dec
xor
mov
inc
sub
nop
cmp
pop
stos
inc
cmpsb
and
call
jbe
sbb
jg
pop
test
std
cmp
movl
lods
sbb
mov
pop
dec
stos
xchg
lret
adcb
adc
outsl
jb
insl
xchg
mov
ja
pop
push
js
mov
ret
jl
fsubl
dec
xor
cltd
push
mov
mov
popf
dec
or
inc
and
nop
mov
inc
fimuls
push
stc
in
les
pop
data16
or
out
mov
das
or
rclb
mov
mov
lods
lret
jmp
movl
pop
lret
in
loopne
jmp
jecxz
and
sarb
mov
out
fildll
sti
divl
lock
or
shrl
adc
jae
clc
sub
in
or
or
sbb
mov
push
pop
fistl
jg
xchg
and
sbb
ficompl
inc
lods
mov
cmc
dec
icebp
fdivrl
jbe
pop
adc
fcomi
jl
fistpll
call
sbb
and
mov
dec
sbb
imul
mov
sahf
stc
jg
fidivl
sbb
lahf
push
test
int3
insb
orl
pop
movsl
cmp
repz
stos
mov
jae
pop
push
push
ret
aas
outsl
pop
mov
shrb
sub
out
xchg
and
and
mov
fsubrl
paddw
push
pop
push
mov
aaa
je
pop
in
dec
fwait
divl
pop
mov
sub
pushf
push
push
pop
lahf
pusha
cwtl
jbe
stos
leave
bound
daa
fwait
popa
and
mov
pushf
jmp
insl
or
push
imul
and
and
sbb
sub
ds
fimull
dec
inc
pop
dec
jl
sahf
mov
pop
shrb
inc
cmpsl
loope
mov
sbb
adc
sub
push
add
sub
lret
sbb
cmp
pop
bound
sbb
sub
ja
in
ds
inc
jbe
jae
inc
xchg
in
and
jmp
outsb
sub
xlat
insl
jmp
inc
mov
pop
test
jge
mov
jp
iret
jle
dec
aas
pop
fwait
inc
dec
push
fcompp
inc
mov
jle
cmpsl
sti
shrb
nop
sbb
and
sahf
test
jge
test
lret
sahf
or
xor
pop
popa
ds
ss
shr
and
sub
rep
add
rcrb
test
frstor
xor
mov
sub
inc
mov
pop
fwait
or
jmp
cmpsl
pop
push
out
and
add
jns
mov
fmul
cmp
mov
test
sub
mov
push
xlat
mov
cmpsl
jg
adc
out
out
xchg
sub
cmp
adcb
mov
in
insl
pop
or
adc
fucom
popl
cwtl
mulb
ret
pop
movsb
push
adc
jecxz
ffree
mov
cmc
wrmsr
in
test
or
aas
xchg
cmovae
sbb
mov
adc
repnz
jg
dec
mov
jno
cwtl
sub
js
mov
cmp
push
daa
jmp
cmpsl
sbb
ret
inc
add
xor
add
hlt
sbb
dec
sbb
aaa
stos
push
dec
mov
nop
dec
sbb
lahf
or
push
or
and
movsl
ds
xor
rclb
cld
dec
pop
mov
in
jae
jp
imul
add
lds
push
mov
adc
adc
xlat
mov
or
ss
xchg
xchg
scas
fwait
jmp
leave
mov
lds
cli
mov
or
sub
mov
inc
sbbl
jo
add
or
ja
cmp
xor
inc
stos
mov
adc
or
mov
fistpll
movsl
push
xor
cmp
ss
gs
inc
out
jb
fwait
nop
cmp
cmp
or
cmp
cmp
ret
out
mov
mov
aaa
adc
repz
in
push
sbb
xor
fcoml
push
fwait
jbe
andl
pop
rol
lret
rol
inc
push
jnp
ljmp
pushf
imul
hlt
inc
xor
lock
xlat
xchg
dec
imulb
pop
call
call
pop
inc
cs
leave
dec
lret
dec
nop
mov
dec
adc
leave
dec
movsb
inc
jne
js
pusha
cs
mov
movsb
inc
push
mov
and
sbb
lret
es
xchg
xchg
pop
repz
xchg
insl
inc
scas
test
clc
sub
push
mov
pop
mov
cs
add
inc
mov
push
xor
sub
pushf
loop
cmpsb
mov
jae
loop
mov
mov
ss
daa
enter
gs
sub
repz
hlt
ds
cmp
loopne
mov
in
out
xor
dec
shlb
stc
mov
mov
insl
cwtl
pop
loope
jle
inc
insb
push
mov
das
xorl
enter
cmp
cltd
and
push
push
xchg
scas
jbe
arpl
cmp
insl
mov
sbbb
sahf
jns
pop
testl
mov
clc
adc
sub
mov
les
or
sahf
in
in
iret
dec
push
in
xchg
push
out
mov
or
cmc
jmp
arpl
cmpsl
int
cmpsb
sbb
and
es
mov
add
inc
cmpsl
cld
jmp
cmp
dec
push
loope
ss
xchg
xor
mov
fistl
in
aas
xchg
fistpll
and
in
pop
inc
jmp
mov
scas
aaa
popf
xchg
and
insb
sahf
push
mov
pop
cmpsl
inc
les
adc
mov
mov
loope
lret
js
jb
sbb
inc
push
adc
mov
fwait
adc
xor
pop
sub
adc
icebp
inc
mov
xchg
dec
movsb
imul
mov
push
sbbb
out
sbbl
and
jo
pop
shrb
cs
mov
push
mov
jbe
pop
pusha
imul
filds
xorb
mov
sahf
inc
sub
mov
lea
pop
xchg
jg
or
out
shlb
nop
xor
hlt
nop
cmp
bound
xchg
cmpsb
imul
iret
cmc
fs
lret
sbb
outsl
pusha
adc
ljmp
mov
popa
hlt
mov
and
xchg
fbld
pop
fisttps
in
insl
fwait
jmp
nop
rcrb
je
leave
enter
fisttpl
test
adc
popf
pop
mov
pop
mull
xor
lret
ds
inc
mov
and
adc
inc
sub
and
sub
sub
add
cld
pusha
mov
cmp
fildl
je
dec
sub
test
ret
icebp
insb
cmpsl
mov
and
aad
push
mov
adc
mov
xor
xchg
dec
dec
outsb
push
in
lret
nop
xor
dec
lods
inc
test
loopne
lret
cmpsw
std
cli
add
and
and
iret
pushf
repz
pop
jmp
push
mov
push
leave
aad
cld
and
outsb
addr16
mov
out
inc
lcall
cmp
lcall
in
mov
sbb
mov
dec
mov
sub
sub
pop
or
lock
dec
add
in
mov
testl
xlat
gs
stc
push
popf
subb
dec
pop
sbb
jo
push
xchg
xor
jae
sub
mov
mov
pop
xchg
cmp
enter
mov
sub
enter
mov
mov
cmp
xchg
pusha
sbb
fs
outsl
cmp
and
dec
lcall
fstp
cmpl
bound
ja
icebp
jmp
andl
sub
stos
mov
xchg
jo
jp
repnz
mov
lods
subb
push
stc
mov
sbb
push
push
mov
cmp
arpl
aad
aas
sarb
push
pop
test
cld
rcrb
or
lea
push
mulb
test
push
add
cmp
adc
cmp
mov
and
xchg
sub
dec
enter
cmp
inc
or
scas
and
into
lods
pop
loopne
mov
stos
cmpsl
lods
mov
xchg
ret
fbld
push
push
or
push
sub
ss
lret
push
inc
or
pusha
dec
popf
xchg
fisubrs
push
mov
hlt
jle
mov
adc
and
pop
push
pushf
xchg
add
push
mov
shll
mov
mov
fdivl
jecxz
sbb
outsb
adc
loope
sti
xor
ret
out
lcall
push
mov
and
ss
mull
push
lret
cli
mov
or
jg
cmp
data16
or
jmp
pmuludq
jmp
mov
imul
jmp
fwait
repz
aaa
sub
fstpl
jmp
sub
xor
clc
int
push
mov
insl
xchg
mov
les
lods
lret
leave
in
cmp
mov
lock
cltd
int
mov
dec
mov
pop
mov
scas
int3
or
ja
lcall
mov
into
mov
es
jge
addr16
repz
ljmp
adc
jecxz
jge
out
mov
add
jg
std
sub
mov
xor
push
lret
jae
mov
adc
outsl
or
and
gs
scas
cmp
mov
cltd
dec
and
lds
mov
cltd
and
roll
mov
jne
lock
addr16
das
in
mov
or
aaa
aad
adc
mov
sti
mov
mov
and
dec
push
or
cli
stos
arpl
push
divb
sbbl
mov
pop
jmp
das
and
sub
add
test
mul
out
lods
sbb
loope
repnz
adc
and
push
movl
loop
jnp
pop
dec
loope
cmp
cmpsl
test
cli
cmp
sahf
popa
adc
cmp
cltd
sub
mov
mov
pop
pop
mov
ret
mov
and
out
int3
loopne
fmulp
xchg
icebp
mov
adc
les
mov
movsb
roll
arpl
ret
fsubrp
pop
out
push
int
push
lods
ret
cltd
add
mov
add
mov
xor
pop
sub
inc
xchg
pop
push
jmp
incb
ss
adc
or
pop
clc
xor
pop
add
rcl
cld
lods
pop
int3
lahf
pop
repz
jne
loope
decb
lret
or
fstpt
mov
inc
js
scas
sti
cmpb
ljmp
push
lods
mov
pop
in
sbb
insb
arpl
mov
pushf
xlat
in
scas
outsl
pop
pushf
cli
add
pop
pop
test
inc
push
push
nop
daa
in
lcall
int3
mov
pop
test
mov
sbb
fldcw
add
jnp
pusha
cmp
insb
icebp
push
adc
push
pop
mov
mov
or
or
mov
mov
lock
shl
jb
push
inc
push
mov
ret
mov
ss
sbb
push
popa
dec
add
inc
jmp
and
test
lea
jg
mov
push
call
call
cmp
ja
imul
or
test
mov
sub
cmpsl
push
int
xlat
push
or
push
jle
ret
int3
cmp
repnz
push
lods
cmc
pushf
cmp
cs
test
sbb
rcrb
pop
mov
mov
pushf
dec
bound
les
fs
xor
xor
popf
lds
outsl
adc
ss
call
repnz
inc
push
cli
mov
repz
cmp
mov
jecxz
mov
mov
xor
jle
cmp
pop
fbstp
in
cmp
mov
out
fcoml
imul
mov
lahf
or
scas
loope
mov
daa
dec
dec
in
sbb
push
mov
cwtl
and
inc
mov
lcall
icebp
arpl
jg
outsl
cmpl
sub
enter
insl
pop
sti
mov
mov
je
pop
mov
mov
rcll
push
leave
std
loope
pop
dec
pushf
or
add
arpl
scas
add
mov
es
insl
repnz
xor
es
sbb
jl
jmp
enter
sub
mov
xchg
ljmp
imul
out
test
jge
mov
fmuls
push
jbe
inc
cs
and
ret
pop
mov
jns
mov
or
lea
or
sub
lods
roll
ja
stos
mov
cmp
pop
jg
les
mov
loopne
add
lds
sub
or
loopne
out
int
cmp
lods
hlt
push
int3
pushf
orb
mov
ds
mov
mov
cli
ds
and
repnz
push
sub
lcall
xchg
mov
xor
jge
lods
nop
dec
lods
push
mov
push
pop
cmpsl
into
test
out
and
rcrb
xor
dec
dec
popf
mov
add
cmp
cltd
jmp
jbe
lahf
bound
xchg
push
xor
insl
dec
pop
mov
mov
mov
shl
inc
adc
mov
mov
cld
leave
push
je
aad
or
mov
mov
bnd
mov
sahf
mov
fcmove
testb
dec
insb
aas
test
mov
cmp
idivl
push
mov
dec
pop
push
sbb
sti
lahf
pop
movsb
or
imul
jno
repz
js
mov
pop
add
stos
mov
ss
mov
jle
pop
mov
inc
scas
dec
dec
stos
aas
pop
popf
mov
test
add
cli
ret
mov
jae
sbb
push
xchg
adc
xchg
jge
mov
lahf
pushf
inc
insl
les
notb
out
push
dec
mov
and
mov
xlat
fcmovne
cpuid
xorb
test
lds
mov
xlat
loopne
pop
adc
mov
lret
sub
daa
xlat
orl
push
dec
pop
lret
pop
adc
adc
jecxz
repnz
fcmovbe
cmp
push
icebp
test
push
cmc
mov
mov
push
test
cmp
mov
cmp
cmp
mov
jbe
mov
xchg
mov
sahf
add
rorb
mov
jmp
jecxz
test
and
and
sub
in
call
lea
adc
xchg
xchg
pop
or
fidivrs
mov
insl
cltd
outsl
iret
xchg
xchg
mov
xchg
mov
and
adc
ja
gs
or
sbb
addr16
ss
pop
loope
data16
or
xchg
shll
or
dec
mov
jnp
in
test
add
lret
cs
add
mov
shlb
cmp
cli
cmp
inc
dec
xchg
push
xor
cmp
adc
sti
movb
mov
sbb
push
test
jg
push
mov
mov
and
push
xorb
addr16
jno
xchg
les
out
xor
mov
fcomp
lea
jge
and
cld
out
cmpsl
jmp
xchg
orl
pushl
push
pop
add
jne
xchg
push
push
fmuls
push
pop
cmc
inc
std
imul
popa
dec
or
imul
into
adc
add
insl
pusha
pop
push
dec
inc
mov
nop
lea
fst
int
cmp
adc
pusha
pop
push
dec
inc
mov
nop
lea
fst
int
cmp
nop
or
loopne
push
dec
inc
mov
nop
mov
fnop
std
shlb
and
pusha
pop
push
int
mov
nop
testl
inc
push
lods
arpl
lea
cwtl
pop
int3
xchg
sub
sbb
or
jl
outsb
mov
mov
jae
add
adc
fdivl
mov
xchg
or
adc
dec
pop
cs
lods
jnp
imul
xor
ret
jecxz
dec
popl
jg
sub
add
xor
lret
out
addr16
lret
aas
sub
testl
fidivrs
std
in
adc
pushf
cli
mov
sbb
sbb
sbb
jge
scas
dec
pop
ds
push
test
dec
scas
adc
xor
inc
shll
cmpl
pop
xchg
jl
mov
es
push
test
daa
xor
test
scas
lock
jge
xchg
jecxz
pop
pop
mov
iret
pop
or
shrl
lret
outsl
sub
neg
repz
das
xchg
insl
cs
dec
mov
jl
adc
cwtl
outsl
ret
pushf
sbb
cmp
sub
sbb
repnz
jge
xchg
inc
pop
mov
cmpl
adc
or
and
sub
lret
ljmp
mov
out
lods
push
fists
mov
and
shrl
push
negl
sbb
push
in
push
std
jno
ja
jge
dec
mov
mov
cmpsb
jns
imul
loopne
sarl
popa
jmp
int3
jae
jnp
adc
and
xor
ret
cmp
sub
sbb
or
jl
insb
mov
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
jl
insb
mov
mov
sbb
pushf
subb
cld
mov
cmpsb
aas
push
and
push
iret
xchg
aas
fidivs
loope
mov
popa
frstor
std
int3
mov
cmp
or
dec
je
andl
cmp
add
inc
loop
js
lods
push
mov
mov
shl
mov
xchg
inc
ljmp
push
fwait
push
jae
add
ror
pushf
gs
jmp
mul
cs
or
stc
sub
push
ds
fldcw
sub
sbb
xor
dec
int
cmpsl
sbb
add
dec
xor
cmpsl
dec
imul
lock
sarb
push
enter
pushf
jne
in
push
pop
xorb
sarl
sbb
scas
mov
out
mov
and
lret
mov
and
mov
test
xchg
sub
iret
push
je
lahf
es
dec
insl
adc
pop
pushf
adc
mov
imul
dec
hlt
dec
shll
dec
pop
into
jne
outsb
mov
jecxz
aas
fwait
push
movsl
ja
jmp
jg
xor
out
inc
mov
stos
mov
cmp
sarb
jecxz
pushf
or
or
lcall
push
aas
add
iret
add
sub
sub
fidivrs
and
xchg
mov
jg
imul
mov
push
lock
scas
test
fcos
jge
push
cmpsl
xor
mov
mov
loop
gs
lret
inc
mov
jne
dec
and
rcrb
insb
jmp
outsl
xchg
sahf
jg
into
and
adc
jo
and
ret
mov
xchg
sbb
xlat
gs
xchg
inc
aad
in
xchg
sbb
call
loopne
gs
push
push
mov
jb
cmc
imul
insl
iret
inc
sarl
lcall
dec
aam
rorb
cmp
push
cmpsb
mov
bound
cmpsb
fs
adc
iret
in
cmp
enter
fstpt
cmp
mov
or
jecxz
push
xor
sub
xor
mov
scas
dec
call
cmp
push
xchg
ljmp
sbb
int3
or
fs
out
mov
jl
push
xor
inc
pop
gs
add
fwait
and
jo
sti
test
jne
int3
fsubr
xor
push
adc
xlat
cs
push
jb
mov
xor
mov
sbbb
mov
or
xor
mov
cmp
add
xchg
sbb
mov
mov
pop
inc
dec
dec
jno
inc
push
out
shll
les
cmp
std
pop
insl
jns
and
iret
push
adc
adc
xchg
ret
stc
in
push
mov
pop
aas
jae
xchg
loop
add
aad
incl
pusha
sub
pop
rorl
cmp
pop
mov
aas
shrb
jo
in
mov
mov
xchg
pop
cld
stos
aad
push
inc
xor
aam
add
sub
inc
and
jnp
out
cmpsl
sbb
shll
dec
xor
bound
or
ret
movsb
cmp
pop
push
adc
rcll
in
lahf
aad
mov
sti
sbb
aam
shlb
int
hlt
scas
into
add
jae
ljmp
jo
pop
popf
mov
repz
sub
ffreep
mov
or
pop
out
addr16
movsb
leave
imul
mov
lds
iret
ret
sub
es
and
push
pop
aas
jnp
xchg
insl
aas
sub
jne
mov
xor
mov
adc
push
dec
mov
in
jp
sbb
scas
ret
cmp
dec
and
add
pusha
sbb
iret
pop
shrl
scas
dec
aaa
xor
mov
nop
daa
in
cwtl
ljmp
mov
xchg
xchg
fildl
mov
mov
push
mov
push
test
xchg
xor
push
lahf
xchg
jbe
mov
cmpsl
test
test
push
fdivs
cmp
leave
pop
xchg
pop
in
sbb
shll
rcll
pusha
aas
pop
dec
inc
pop
sahf
imul
inc
push
aas
popf
or
hlt
pop
out
pop
cmp
scas
outsl
int3
xchg
and
and
sbb
cs
or
xchg
out
add
enter
jae
jo
jae
mov
cmp
test
mov
mov
addr16
jo
jge
xchg
cltd
xchg
inc
outsb
sub
cmp
xorb
out
adc
sbb
adc
dec
push
enter
push
in
lds
inc
inc
gs
push
lret
and
jbe
call
jb
inc
idivb
jns
xor
mov
mov
add
ljmp
add
sbb
std
jecxz
jecxz
xchg
sbb
ss
mov
aas
cwtl
bound
iret
xchg
push
mov
dec
lahf
movsl
sbb
push
push
andl
clc
xchg
mov
pushl
decb
inc
mov
pop
and
pop
pop
xor
adc
inc
and
xchg
mov
mov
in
mov
xchg
or
imulb
daa
stos
cli
testb
sar
cli
stos
sbb
inc
cmp
call
gs
icebp
pop
int
cmpsl
push
dec
ret
push
std
test
or
push
adc
aas
sahf
push
fistps
popa
inc
movsb
sarb
and
daa
mov
cli
das
daa
jmp
stc
rorb
shlb
adc
popf
jle
jecxz
push
lods
pop
mov
loop
or
sub
mov
xchg
push
inc
sub
loopne
aaa
mov
push
push
addb
cmp
loop
pop
lods
push
dec
jae
pushf
xor
inc
stos
in
aaa
or
mov
xor
inc
popf
xchg
pop
data16
pop
mov
xor
fdivrl
push
repnz
js
mov
jmp
adc
int3
inc
inc
in
jge
stos
mov
sbb
in
notl
xor
push
mov
stos
cmc
je
repz
jbe
and
fildll
pusha
mov
das
xor
or
in
jo
sarb
and
mov
fisubs
ret
js
lea
jp
jmp
mov
add
sbb
xor
cli
aam
pusha
clc
cli
cmpsb
les
xor
test
rclb
xchg
add
insb
movsl
dec
inc
adc
mov
or
incb
cmp
pop
jmp
psubusw
xchg
push
inc
adc
mov
pop
sarl
loopne
sub
frstpm(287
lock
and
inc
les
adc
mov
enter
iret
test
pop
shll
les
cs
rolb
dec
push
fisubl
pop
jecxz
sub
das
pushl
mov
or
adcb
push
outsb
cmp
push
outsb
std
lahf
xor
lock
fwait
adc
insl
fldcw
mov
add
sbb
add
mov
mov
push
mov
cli
xchg
xor
jbe
enter
mov
push
xchg
je
outsl
mov
imul
jge
in
mov
cwtl
dec
mov
sub
mov
sbb
push
mov
mov
stos
mov
mov
fcmovnb
pop
lret
adc
pop
sub
jge
push
daa
and
ljmp
jle
stos
jp
out
mov
pop
out
fs
scas
xchg
jle
cmc
or
sbb
mov
aad
push
jmp
or
jbe
jle
jecxz
frstor
movsl
lahf
pushf
mov
imul
icebp
and
mov
pop
repz
test
iret
mov
out
rcll
scas
jb
clc
push
xor
movsb
loope
sbb
adc
stos
ds
fsubl
lods
in
lcall
xchg
dec
test
push
mov
dec
rcll
test
push
mov
dec
mov
pop
les
xchg
add
xchg
les
shrb
and
mov
insb
mov
scas
add
sub
cmp
mov
fdivl
out
jle
and
lcall
insl
iret
sahf
and
xchg
fisttpl
jne
mov
insb
xchg
mov
dec
xlat
aaa
test
mov
push
int3
ss
loopne
ss
mov
push
clc
inc
test
adc
enter
lea
push
call
push
loop
outsb
dec
inc
pop
fwait
inc
rorl
or
gs
mov
push
es
cmpsb
sbb
int3
in
testl
adc
in
xor
sub
fcmovnbe
jnp
out
mov
dec
cmp
into
fs
cmp
jl
movsl
xchg
cltd
xlat
rorb
jno
rcrb
adc
pushf
jg
scas
jp
mov
stos
inc
outsl
dec
std
adc
xchg
call
dec
push
imul
js
push
mov
data16
pop
les
movsl
sub
loop
mov
cmpsb
lcall
in
leave
and
jne
adc
mov
jbe
and
je
xchg
mov
daa
pop
jle
jp
je
flds
jmp
aam
push
or
cmp
xor
rcll
mov
sbb
in
xchg
fwait
mov
jne
fwait
jecxz
mov
sub
sub
cwtl
push
pop
jns
outsl
mov
xor
or
pop
daa
clc
inc
cmp
shl
cli
lods
loopne
clc
adc
aad
push
cmp
pop
xchg
xchg
loope
loopne
mov
inc
int
cli
jl
mov
popa
adc
push
push
lahf
mov
sub
movsl
push
lods
xchg
fstps
popa
test
add
testb
std
negb
pop
fisubs
jo
sti
movl
jno
adc
add
test
dec
pop
in
popf
stc
es
mov
mov
cwtl
icebp
mov
or
jnp
mov
sar
sub
cmp
idivb
int
aas
pop
mov
xchg
repz
pop
sub
loop
cmp
jae
cs
and
sbb
push
mov
pop
inc
lcall
andb
cmp
add
xorb
mov
mov
inc
pop
test
out
inc
cmp
adc
fistps
mov
ret
adc
jne
mov
xor
inc
push
lock
aam
push
mov
fidivrl
push
and
sub
test
push
fs
repz
push
stos
jb
and
inc
xor
xchg
fmul
mov
push
std
inc
sbb
fwait
shll
ret
outsb
aaa
aaa
cmp
lret
mov
jb
xorb
mov
aam
lret
dec
jmp
and
xchg
jo
xchg
pushf
push
xor
pop
popa
ret
sub
sbb
mov
test
pop
add
aaa
mov
jg
mov
sbb
adc
jne
hlt
sbb
sbb
push
mov
std
jo
cmp
std
imul
adcb
jle
ds
inc
mov
mov
inc
out
cwtl
jge
push
xchg
push
dec
adc
dec
cmp
das
pushf
enter
xchg
adc
adcb
test
jecxz
cmp
out
pop
flds
sbb
cmp
inc
mov
and
shrb
mov
je
testl
mov
fnstcw
shrl
xchg
cmp
inc
push
bound
cmc
cmp
icebp
test
mov
js
pop
lcall
mov
xor
test
out
loop
pop
sub
fst
jnp
mov
push
mov
shlb
lods
mov
mov
nop
stos
pop
xor
inc
pop
fnstsw
jp
add
rcll
hlt
inc
decb
add
xor
sub
lret
mov
ja
sahf
lods
inc
inc
imul
testl
icebp
pop
xchg
push
sub
mov
xor
mov
and
inc
addr16
mov
jp
test
push
mov
pavgw
add
insb
push
nop
fists
or
pop
jge
and
leave
dec
pop
cmpsl
andl
xor
xchg
xchg
je
jns
es
jae
sbb
outsl
rclb
inc
add
mov
jns
repz
jns
fs
jb
mov
in
into
aaa
mov
push
pop
call
loope
adc
es
mov
scas
sub
imul
xor
push
in
adc
inc
xchg
scas
pop
scas
jo
xor
mov
mov
or
xsha256
sbb
mov
icebp
add
mov
aaa
inc
pop
xchg
aaa
aas
cmp
jbe
pop
adc
lds
fiadds
xchg
push
mov
jns
sarb
sti
xchg
sub
test
int
orl
fisubrl
adc
aas
adc
leave
decl
out
cmp
cmpb
clc
push
js
jmp
push
jns
in
sbb
lcall
and
in
mov
adc
mov
or
push
das
xor
test
xrelease
lock
push
loop
js
mov
mov
jo
call
and
imul
imul
stos
or
jno
xor
inc
sbb
mull
fidivrs
jne
loope
arpl
ja
out
enter
out
adc
adc
mov
repz
inc
or
imul
mov
nop
mov
jmp
mov
cmp
faddl
push
aaa
icebp
mov
or
stos
inc
nop
sub
nop
and
nop
stos
orb
mov
dec
imul
jle
sub
sahf
add
in
or
xor
cli
hlt
adc
out
cmp
jmp
and
push
loop
and
sub
mov
push
test
test
inc
xor
fisubrl
inc
mov
adc
cmc
or
lcall
jmp
cmp
jl
cmpsl
push
ret
aad
sbb
outsb
jbe
add
lods
mov
testl
sub
mov
je
mov
mov
fmull
hlt
jno
push
mov
pop
inc
les
mov
pop
fdivs
pop
imul
lret
test
dec
pop
andl
test
sbbb
out
push
insb
test
loope
lcall
and
mov
jle
test
cmp
test
loopne
lods
popa
push
mov
sbb
mov
adc
sbb
jmp
out
lret
inc
mov
pop
mov
ss
pop
repnz
std
test
aam
outsl
lret
jne
fwait
insl
test
out
incl
fadds
fdivrl
sti
pop
push
cmp
pop
jg
cmp
lahf
inc
cwtl
loop
out
jmp
test
push
mov
add
sbb
pushf
or
test
subl
sarb
arpl
and
in
ret
fidivl
ret
mov
add
xor
adc
jb
inc
xor
scas
mov
add
scas
pop
mov
int
lcall
subb
loop
bound
pop
out
adc
cmc
dec
lahf
sub
push
pop
addl
adc
jecxz
repz
mov
rorl
stos
mov
mov
cmc
mov
mov
cmp
sub
pop
jbe
cltd
cmc
add
frstor
arpl
add
jb
rolb
xlat
mov
das
mov
xchg
divb
and
sbb
and
jbe
cmp
lock
dec
mov
int
jbe
cmp
es
and
and
or
sub
dec
cmpsb
sbb
mov
push
adc
into
xchg
push
outsl
push
jecxz
xchg
loopne
imul
pop
cmp
push
inc
or
xchg
cld
addr16
add
push
jge
push
jge
jns
icebp
adc
jmp
mov
jb
leave
or
pop
movsb
pop
aas
add
out
xor
mov
dec
imul
push
xchg
and
cmpsb
jecxz
or
mov
mov
movsb
cltd
std
mov
into
fmuls
test
das
push
inc
or
in
mov
imul
xor
cmp
pop
fldt
aaa
addl
adcl
js
dec
or
sbb
adc
shll
ja
out
inc
fstpt
icebp
mov
es
jns
add
mov
xchg
repnz
sub
jecxz
daa
int
pop
pop
scas
ret
enter
and
push
dec
jnp
lock
pop
pop
loop
or
lea
or
test
mov
pushf
ljmp
mov
test
inc
loope
xchg
arpl
test
mov
fcmovnb
call
pop
or
jae
jmp
adc
outsl
cwtl
sbb
and
pop
in
lods
jne
xchg
jle
mov
int
js
test
push
jmp
push
ljmp
sbb
addr16
pop
dec
loopne
dec
xchg
or
cmc
fldl
push
cmp
outsb
mov
jp
hlt
add
aam
test
pop
push
ret
inc
addr16
inc
dec
nop
and
outsb
jno
int3
add
lock
jo
inc
mov
mov
outsl
push
iret
fidivrs
sub
dec
fldl
lahf
push
jae
inc
loope
aaa
subb
mov
or
pop
stos
sti
cmp
and
test
mov
icebp
dec
pop
or
add
out
lcall
insb
inc
cwtl
and
mov
mov
insl
xor
adc
test
mov
mov
dec
test
push
popa
xchg
adc
xchg
dec
movsl
sub
test
xchg
jae
mov
pop
test
inc
pop
pushf
sarb
push
mov
mov
lret
nop
sbb
hlt
sbb
sub
leave
icebp
sub
inc
pmulhw
movsl
xchg
daa
loope
adc
int
insl
lcall
mov
popa
or
popa
fiadds
test
cli
ret
loopne
test
ljmp
leave
sub
pushf
cmpsl
dec
mov
add
cmp
pusha
xchg
dec
sub
pusha
fstl
aaa
xor
jb
mov
add
int3
add
or
std
movsl
lods
pop
fcoml
mov
pop
test
cmp
push
out
pop
mov
je
incb
pop
outsl
inc
cmp
repnz
cmp
or
mov
sar
add
jae
test
sbb
xor
pop
cwtl
pop
push
stos
pop
pop
addr16
mov
leave
ds
lods
adc
mov
movsb
add
inc
push
imul
insb
cmp
or
lods
stos
jg
mov
jbe
mov
cmp
lret
and
lret
and
ds
add
xor
xchg
mov
dec
inc
mov
mov
cmp
loopne
jmpw
stos
test
aas
xor
std
push
aad
xchg
cli
xor
jl
add
fimull
fs
cmpsl
add
stos
call
push
lcall
pop
pop
mov
popa
pop
lcall
ret
jbe
js
inc
daa
xor
xor
aaa
add
ror
xchg
add
push
jecxz
and
aas
pop
add
xchg
mov
icebp
xor
pop
push
push
ret
jecxz
cmp
xchg
mov
lcall
mov
repnz
xchg
and
popa
lods
dec
fcoms
nop
xchg
inc
xchg
mov
lret
mov
pop
pop
lods
rorl
test
inc
pop
add
popa
in
xlat
fs
jecxz
xchg
call
lods
fstps
jge
push
inc
loope
shlb
push
jo
mov
and
mov
movsb
shrb
icebp
imull
cmp
cmp
lods
inc
add
std
adc
jg
inc
xchg
mov
or
mov
fmul
inc
popf
mov
cmp
xor
jle
dec
mov
std
mov
out
ljmp
stos
out
outsb
and
mov
pop
inc
or
sbb
clc
pop
xchg
daa
sub
std
mov
cmp
inc
cmp
jl
lds
decb
mov
in
xchg
adc
and
sbb
mov
cwtl
sub
dec
and
xchg
dec
jbe
mov
cmpsl
mov
aaa
js
rorb
ja
dec
push
cmp
mov
sti
cwtl
mov
mov
mov
imulb
ret
rorb
dec
jae
imul
sbb
mov
divb
push
push
jp
insl
mov
push
pusha
sbb
ret
xor
mov
lds
pop
loop
les
rcrl
xor
inc
adc
push
xchg
rcrb
loope
cmp
pop
pop
cmp
add
mov
arpl
daa
pop
stos
jbe
sub
icebp
adcl
jge
or
push
aas
ljmp
sar
ja
stos
cmpb
in
pop
adc
xchg
rcrb
lods
dec
in
dec
push
mov
fcmovne
in
add
inc
leave
jns
mov
movl
pop
adc
arpl
sti
test
inc
push
sbb
cmpsl
jne
test
cmpb
in
cmc
pop
out
subb
push
shlb
mov
movsb
push
lea
or
cmp
mov
sbb
cld
adc
and
xor
ret
cmp
sub
sbb
or
jl
insb
mov
mov
jae
add
adc
and
xor
ret
cmp
sub
sbb
or
jl
insb
mov
mov
jae
add
adc
xor
ret
in
sub
sbb
or
jl
insb
mov
mov
jae
add
adc
mov
ret
sub
dec
sbb
jnp
hlt
sbb
push
inc
rcll
jb
dec
mov
roll
xor
push
shlb
jae
add
xor
loop
repz
add
dec
inc
ret
add
jae
add
adc
ret
inc
rcll
jb
add
xor
push
icebp
add
jp
add
pop
shll
mov
pop
pop
test
push
cmpsl
insb
sub
mov
movl
ficoml
add
ss
sub
incb
lret
jecxz
inc
rcrb
or
xchg
sub
addr16
xchg
add
mov
rcll
add
shll
dec
pop
and
inc
dec
mov
push
cmp
fwait
adc
addb
test
mov
ss
mov
out
imul
adc
cmp
jae
push
sarl
cmpsb
mov
rcr
imul
ficompl
jne
mov
sbb
out
adcb
and
rcll
jb
add
xor
push
shlb
jae
add
xor
mov
xchg
adc
idivb
fs
sub
pop
xchg
pop
testl
nop
aaa
xchg
pop
mov
pop
mov
mov
stos
sbb
pusha
xchg
jae
sub
mov
std
sbb
sub
adc
ret
arpl
jae
add
xor
jecxz
repz
add
xor
push
shlb
jae
add
xor
outsb
mov
std
shrl
or
mov
inc
adc
nop
jns
out
or
mov
ja
hlt
fsts
ljmp
into
pop
repz
leave
dec
cmp
inc
mov
jnp
mov
xor
xchg
mov
sbb
sbb
mov
push
jp
bound
cld
cwtl
push
lahf
pop
sub
frstor
cmp
mov
fcomps
xor
push
adc
outsl
out
or
ja
fdivrl
jecxz
lret
xchg
cmp
sub
dec
push
mov
test
rcrl
jecxz
ljmp
jge
adc
xchg
push
xor
shl
daa
jb
sub
add
push
mov
mov
jg
shld
jnp
fs
into
nop
aad
movsl
or
imul
push
fs
insl
push
scas
jnp
push
fs
mov
mov
ja
gs
cltd
mov
inc
adc
fildll
cmp
adc
mov
jb
mov
out
dec
ja
jle
jmp
jmp
sub
popf
nop
iret
inc
pop
jl
pop
testb
mov
xchg
and
push
inc
scas
cmp
adc
lods
add
loop
dec
fists
lahf
cmp
addb
aad
pop
call
popa
or
into
stc
mov
cltd
xchg
xlat
fdivl
pop
xchg
dec
pop
mov
mov
lahf
add
xchg
dec
push
dec
mov
jge
into
stos
add
jge
mov
in
subb
aaa
sbb
cmpl
cld
int
push
xchg
pop
mov
in
iret
addr16
push
jnp
adc
inc
add
push
cs
cmp
shlb
inc
add
adc
popa
push
js
xchg
push
pop
mov
sti
mov
addb
jge
lret
pop
fildll
mov
daa
pop
push
adc
loope
cli
fisubs
sarb
vmovupd
insb
ret
hlt
mov
es
and
cmp
std
xorb
mov
into
leave
jecxz
mov
movsb
mov
adc
ja
pop
xlat
cli
dec
cs
mov
outsl
and
data16
mov
imul
sub
jl
fildl
hlt
and
adc
xchg
mov
ja
into
xor
test
xor
jge
aas
rcl
jbe
cmc
outsb
imul
adc
add
pop
das
cmp
shrb
xor
sbb
add
in
les
pop
data16
aas
cmp
in
xor
xchg
imul
add
push
mov
and
xor
pop
rorl
insl
push
loop
push
adc
jecxz
push
jb
call
sti
pusha
sbb
scas
xor
adc
jle
xlat
sbb
pop
scas
mov
push
inc
imul
and
stc
pop
and
pusha
sti
and
sbb
div
das
mov
dec
mov
push
lock
xchg
inc
ds
lods
rorb
cmp
mov
push
cmpsb
in
dec
in
fisttpll
repz
and
cmp
pop
out
cltd
pop
push
push
pop
pushf
das
daa
rcl
daa
flds
movsl
or
sbb
sti
jns
cmp
or
test
pop
sti
mov
xor
mov
or
or
xchg
imul
neg
pop
pop
repnz
mov
cld
xchg
ret
jecxz
dec
adc
and
fs
adc
insl
dec
decl
mov
insl
lods
sbb
push
movsb
xor
fstps
pop
ja
push
in
lds
dec
pop
loopne
push
shll
pop
or
imul
scas
cmp
sbb
push
add
pop
cwtl
xor
dec
pop
imul
ds
mov
fs
dec
testb
lods
call
cltd
stc
adc
test
ljmp
scas
and
lods
and
and
les
hlt
sub
ja
mov
cli
mov
adc
xor
iret
add
sbb
imulb
sbb
ficoml
imul
xor
inc
xor
or
push
fstpl
jmp
fcoml
push
aam
loop
testl
xor
clc
outsb
inc
shll
lret
hlt
stc
adc
test
inc
ret
jg
xchg
jmp
ds
sub
add
mov
bound
lret
ret
mov
push
adc
cmovne
ss
cmp
mov
inc
call
xchg
push
insl
add
mov
mov
sbb
fisttpl
inc
xchg
mov
adc
add
add
sbb
lret
pop
xor
sub
xchg
rorl
mov
out
jb
fidivrl
test
pop
xrelease
ss
int3
sarl
xchg
cmp
sbb
mov
jb
arpl
test
jns
mov
outsb
adc
mov
dec
sti
cmc
mov
mov
outsb
xchg
pop
jmp
ds
into
and
scas
xchg
test
pushf
std
cmpsl
test
xor
sub
shl
xlat
idivb
pop
mov
add
das
and
jge
push
stc
jbe
adc
scas
jns
outsb
adc
cmp
cmp
jns
inc
inc
adc
xchg
cmp
fucomip
pop
pop
call
in
sar
add
cwtl
add
mov
pop
xlat
daa
lock
call
or
imul
push
xchg
sub
jbe
popa
mov
mov
or
gs
fsubl
andb
rcl
mov
repz
aaa
cmp
repz
loopne
and
movsl
pop
out
jne
mov
ja
outsb
aas
std
dec
inc
nop
scas
fists
push
negl
jo
lret
arpl
mov
sbb
sbb
inc
or
out
jge
in
aam
push
cltd
cmp
scas
dec
mov
and
add
mov
add
and
or
mov
test
roll
mov
jp
pop
stos
push
cli
add
cmp
or
push
fcomp
popf
dec
mov
sbbb
sarb
loop
gs
dec
sub
popa
xchg
and
ret
add
push
iret
inc
aad
sub
mov
push
push
mov
mov
mov
inc
pop
je
cmp
sub
xchg
imul
ss
in
cltd
cmp
xchg
pop
mov
mov
pop
test
sbb
add
negb
inc
arpl
push
jne
mov
lret
in
or
imul
mov
jl
cwtl
pop
add
popf
loop
insb
adc
inc
add
scas
scas
fildll
sbb
sbb
dec
lahf
lock
pop
pop
imull
lds
cmpl
out
outsl
cmpsl
mov
dec
out
iret
repz
fldl
in
cmp
je
mov
xor
leave
es
insl
cmp
aas
leave
cwtl
hlt
adc
outsb
scas
stos
nop
and
mov
clc
pop
sbb
imul
je
jl
jbe
lret
orb
inc
stos
js
jecxz
cmpl
push
jne
idivl
mov
xchg
inc
lds
sub
sti
cmp
and
cmc
pop
cs
gs
mov
mov
add
add
and
sbb
push
and
imul
jmp
jge
mov
fistl
imul
int
mov
push
es
push
inc
shlb
cli
push
xlat
mov
mov
xchg
daa
sarl
outsb
scas
and
aad
cmp
sub
stos
push
mov
cmp
add
fidivrl
mov
ss
sti
add
in
popa
xchg
mov
ljmp
mov
outsl
movsb
dec
testl
icebp
push
pop
test
and
push
std
inc
scas
das
jl
cmp
fimull
out
inc
pop
mov
ss
loope
movsb
or
je
inc
lock
aam
or
xor
imul
sbb
mov
or
scas
pushf
cli
clc
stos
add
lods
mov
adc
dec
dec
mov
repz
add
aas
outsl
unpcklps
xor
jbe
jle
call
out
repnz
daa
icebp
cltd
sbb
pushw
push
push
jge
or
pop
ret
xchg
imul
in
mov
cwtl
andl
sbb
or
lret
aam
data16
dec
or
test
push
pop
scas
nop
int
push
xchg
movsb
aam
mov
fbld
adc
pop
dec
adc
data16
jb
aas
add
outsl
les
fdivs
leave
out
movsl
nop
or
mov
rorl
or
or
lahf
gs
xlat
loop
mov
fs
out
pusha
xor
movsl
mov
mov
inc
cmp
mov
mov
nop
aam
iret
imul
testl
jnp
out
or
and
dec
jg
int3
cmp
aad
adc
push
leave
js
dec
data16
dec
mov
xor
repnz
insl
out
cmp
rorl
ja
shl
iret
cmc
mov
bound
ret
sbb
sub
mov
and
les
cwtl
loope
dec
into
and
aam
jb
or
xchg
scas
jne
sub
sub
test
xlat
test
scas
ljmp
dec
or
imul
stc
jp
addr16
push
cmp
int3
loope
cld
fcompl
call
add
xchg
or
lcall
jmp
jne
and
mov
pop
lret
mull
xchg
lea
or
mov
int
mov
cmp
and
insb
notl
lock
or
xchg
clc
mov
in
call
adc
dec
pop
mov
cmp
das
xchg
test
fsubrp
call
dec
xchg
je
test
arpl
push
adc
mov
sbb
jns
and
inc
fisubs
and
or
pushf
lret
xchg
lret
sub
fsubs
push
jp
movsl
scas
rcrb
insl
mov
xor
popf
jl
enter
pop
fdivp
dec
negl
xchg
out
and
sub
fldcw
dec
push
cs
loop
xchg
out
enter
xor
cmpsl
inc
stos
mov
test
pop
mov
das
adc
stos
xchg
flds
and
and
sub
in
mov
lea
idivl
orl
mov
xor
mov
push
loop
rolb
pop
jne
stos
fwait
int
jmp
jb
inc
mov
sub
notb
stc
cmp
test
test
or
enter
xor
nop
push
push
pop
push
lods
ja
or
sbb
lahf
out
mov
mov
jno
add
imul
jecxz
dec
ljmp
inc
jne
cmp
rorb
movsl
mov
cs
jno
sub
aas
push
xor
jecxz
aas
inc
mov
sarb
and
enter
sbb
hlt
pop
out
push
es
int
xchg
push
xchg
cmp
daa
fsubrs
dec
in
roll
jo
movsl
cli
rclb
das
jae
pop
repnz
mov
adc
nop
pop
out
mov
fwait
in
outsl
inc
ss
add
adc
mov
pusha
xchg
arpl
mov
lods
sub
outsb
mov
movsb
xchg
lds
ss
dec
jg
add
pop
xchg
lfs
pop
mov
push
sbb
xchg
adc
mov
push
shlb
pop
lcall
and
pop
imul
sbb
int
les
add
aaa
pop
xchg
adc
push
daa
jp
cwtl
cmp
dec
and
lea
add
inc
mov
xor
cmp
fstps
or
lret
sbb
out
test
jl
test
subl
push
mov
test
lret
sbb
clc
fidivl
xchg
jns
jge
std
xchg
fs
and
imul
cwtl
jl
cmpsl
movsb
push
stos
add
cmpsl
and
inc
imul
xor
imull
xcrypt-ofb
ds
adc
loope
aaa
fs
jno
cltd
adc
sbb
jns
stos
scas
ds
or
xchg
arpl
dec
leave
or
popf
outsl
lods
pop
js
movsb
cmp
ret
sub
add
stos
stc
rcr
mov
push
insl
and
cmpsb
xchg
push
pop
lahf
cmp
dec
cld
inc
jmp
xlat
inc
stc
clc
imul
sbb
adc
inc
pop
out
mov
call
leave
or
stos
out
mov
ret
insl
ljmp
ja
xchg
pop
cld
loop
dec
dec
adc
es
push
xchg
sbb
xchg
sbb
mov
adc
jg
jo
mov
pop
mov
pop
xor
fcomps
pop
mov
insb
jb
cmp
adc
and
xor
lds
mov
push
cld
repnz
mov
push
sarl
and
outsb
pop
mov
mov
xor
dec
loop
ja
sub
or
mov
bound
push
cmp
dec
lock
jmp
ret
cmp
sbb
inc
pop
scas
daa
test
jecxz
lcall
aas
pop
fsubrs
sub
in
or
stc
pop
mov
mov
mov
adc
into
stc
push
xor
loope
popf
xchg
rcrb
mov
pop
ret
int
inc
inc
rcr
xchg
dec
adc
repz
jbe
xchg
ret
in
xor
xor
fbld
sbb
adc
xchg
or
push
inc
pop
imul
pop
nop
in
sub
lcall
stos
sbb
or
and
jne
xchg
testl
or
push
outsb
sbb
pop
daa
gs
inc
sbb
sbb
mov
loop
xchg
out
daa
icebp
mov
push
std
lret
xchg
lods
rclb
ja
flds
fmul
shl
out
push
xor
movsb
mov
jns
sbb
out
pop
inc
inc
mov
push
notl
push
sbb
dec
fwait
in
call
aad
bnd
orb
push
mov
ret
into
imul
or
push
mov
orl
repnz
lret
test
and
ja
stos
push
cld
inc
sub
incb
stos
add
stos
daa
lock
jle
gs
jge
jnp
insl
ret
dec
das
fisubs
inc
sbb
mov
adc
fiadds
sarb
cmpsl
lea
subb
scas
jae
insl
mov
into
sbb
xchg
cs
std
lcall
pop
stos
inc
imul
and
aam
test
pop
or
pop
xchg
fwait
icebp
dec
lret
fcmovnb
fstl
mov
pop
in
fldcw
out
push
inc
push
cmp
or
dec
jl
cmp
clc
cwtl
std
lds
shlb
fucomi
ss
test
ds
sub
pop
fistpll
mov
push
rcr
jae
mov
cmp
cwtl
insl
rclb
cmp
out
aas
cmp
test
out
insb
pop
push
icebp
mov
es
inc
test
cmp
mov
or
dec
mov
daa
in
outsl
repz
xchg
xor
stc
sub
cmp
sarl
cmp
arpl
inc
lea
xor
cmp
xchg
sbb
push
mov
test
fimull
stos
mov
sahf
mov
mov
cmp
lods
mov
push
jle
aas
int
inc
pop
push
pusha
cmp
pop
test
or
scas
cmpl
iret
fsubrl
lea
mov
push
and
adc
mov
aam
sub
lods
pusha
test
jp
ljmp
mov
ja
daa
xor
xorb
mov
xchg
and
ss
stos
sti
jo
jg
jl
into
loope
movsb
psllq
xchg
dec
cmpsl
xor
pop
iret
pusha
jb
and
mov
imul
pushf
cmp
push
leave
push
ret
xchg
jo
std
push
test
mov
aad
sarl
lods
nop
xchg
test
jp
push
clc
dec
xchg
jl
jmp
sarl
sub
popf
dec
les
dec
addb
fimuls
fisttps
lds
imul
or
test
pop
mov
int
int3
xor
mov
pop
fisubrs
push
mov
cwtl
mov
lret
sbb
xor
mov
push
pop
mov
inc
daa
in
or
sbb
clc
in
inc
rcrb
and
decl
imul
dec
addb
sub
mov
ljmp
mov
std
xlat
imul
adc
mov
inc
xchg
adc
sub
loopne
movsb
mov
xchg
out
pop
rorb
mov
insl
inc
mov
sub
shl
cs
or
inc
xor
xlat
inc
cmp
shrb
xchg
dec
jmp
add
dec
iret
cwtl
mov
pop
rorb
call
cmpsb
ficoml
dec
aad
ja
sbb
jo
pusha
out
repnz
cs
inc
leave
dec
xchg
mov
or
mov
add
idiv
into
rorl
int
cltd
clc
add
push
sub
add
pop
fs
lret
push
pop
shrl
jecxz
shl
pop
xchg
xchg
push
or
push
aam
mov
add
pop
dec
and
add
mov
into
negb
xor
dec
aam
jns
movsb
ficoms
adc
sbb
mov
jmp
push
mov
test
outsl
stos
mov
jmp
dec
add
cmpsb
cmpsl
js
lods
gs
lock
pushf
sub
xchg
in
pop
aam
xchg
lods
cmpsb
outsb
inc
ds
cmp
sub
iret
push
test
mov
fsubs
inc
test
mov
mov
jbe
jo
push
inc
rcll
mov
je
ss
in
cmp
xchg
inc
aad
mov
ljmp
popa
test
mov
ljmp
adc
mov
xor
dec
aam
and
lods
scas
push
mov
sbb
jnp
jecxz
popf
mov
lcall
mov
xchg
mov
fstpl
cmp
sar
frstor
flds
mov
call
add
aas
fnsave
daa
gs
test
sbb
push
in
and
mov
leave
popf
lcall
in
pop
pop
adc
je
jnp
aas
inc
sbb
xor
adc
add
int
xchg
mov
enter
mov
lock
sbb
repnz
fdiv
pushf
repz
cmp
jecxz
mov
jne
and
and
mov
or
mov
nop
in
cld
mov
aaa
stos
sbb
add
ss
imul
add
jle
add
mov
dec
int
loopne
das
pop
xchg
cmp
and
aaa
xchg
cmp
and
jne
push
inc
adc
insl
and
stos
out
adc
ss
xchg
xlat
pop
mov
adc
test
js
movsl
mov
scas
scas
stc
mov
jecxz
mov
ja
add
inc
icebp
sub
jo
popf
imul
jns
mov
xchg
nop
pusha
sti
lahf
pop
mov
mov
mov
movsb
dec
loopne
leave
pop
inc
stc
adc
sub
sbb
sti
xchg
in
xor
inc
mov
and
stos
mov
cwtl
mov
lods
ret
inc
fstpl
mov
xchg
out
pusha
loop
icebp
and
mov
xor
xor
imul
lret
ret
mov
aad
jle
xchg
push
cli
mov
scas
popa
xor
ret
push
loop
mov
subb
push
rclb
cmpsb
dec
inc
add
movsl
leave
xor
nop
mov
ficoms
push
dec
into
pop
inc
in
jl
data16
sbb
ja
jns
std
out
jbe
cmp
test
dec
dec
or
cmp
or
daa
push
daa
push
pop
dec
adc
outsl
cmp
or
push
pop
sub
sub
jp
popf
or
sbb
cltd
xchg
mov
in
dec
rep
jns
sar
in
pop
push
ret
mov
xchg
or
push
testl
dec
pop
mov
mov
xor
adc
cmpsl
push
cmpsl
pop
sub
or
mov
jecxz
sbb
into
inc
inc
movsl
sub
lods
cmc
adcl
add
mov
dec
jmp
xor
cli
aad
sub
push
sbb
push
xchg
es
clc
in
fsubrp
sti
cmp
xchg
dec
sbb
dec
or
sbb
push
fs
int
xlat
cmp
pop
mov
je
test
pop
out
xorb
mov
pop
xor
test
pop
push
outsl
clc
mov
ret
fistps
adc
jmp
lock
movsb
jmp
or
push
push
test
repz
add
xor
push
shlb
jae
add
xor
jecxz
repz
add
xor
push
shlb
jae
add
xor
jecxz
repz
add
xor
push
shlb
jae
add
xor
loop
repz
add
xor
push
js
loop
test
insl
fcompl
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
repz
jecxz
sarl
imul
push
mov
jb
arpl
push
in
inc
stc
xor
add
sarl
imul
aad
leave
push
stc
dec
jmp
adc
cli
push
lret
popa
add
xor
inc
ljmp
dec
std
dec
lret
push
lcall
push
loopne
mov
cmc
add
ljmp
xor
jb
sbb
stos
jo
cmp
push
mulb
dec
aaa
scas
test
xor
adc
push
or
pop
and
dec
test
jo
daa
and
or
and
pushf
leave
imul
xor
mov
repz
xchg
cmp
sbb
lods
clc
cmp
pushw
mov
or
inc
add
pop
xchg
sbb
fidivs
jae
jae
movsl
ss
add
cltd
in
ljmp
xchg
cmpl
pusha
cmp
mov
jbe
jo
adc
cli
pop
shll
imul
jnp
dec
loopne
lock
add
mov
mov
rcrb
push
jae
bswap
and
daa
mov
cld
inc
mov
outsb
lds
mov
fistps
mov
sbb
lods
push
lods
push
pushf
add
xor
dec
mov
fstl
dec
mov
sub
sub
arpl
push
stc
inc
jmp
adc
jecxz
sarl
imul
fldenv
push
stc
inc
jmp
adc
int3
pop
insb
mov
fists
inc
ss
inc
and
enter
pop
hlt
insl
ret
mov
push
ret
scas
push
xlat
adc
lahf
aad
jg
aam
fiadds
lea
mov
add
dec
add
dec
jnp
ds
add
leave
test
add
call
dec
ret
pop
cmpsb
data16
adc
inc
inc
xor
push
add
mov
jle
fistpl
inc
cld
xchg
and
push
js
shr
inc
pop
repnz
mov
mov
jmp
mov
cltd
jmp
sbb
xchg
imul
cmp
or
mov
pusha
stos
cmpsb
pop
sbb
add
or
dec
sbb
mov
loop
xchg
pop
cmp
iret
in
pop
jecxz
test
imull
pusha
push
jmp
aaa
out
test
mov
test
subb
into
shrl
pop
jnp
rcrb
arpl
scas
mov
outsb
scas
mov
inc
or
das
and
enter
cmpsb
pushf
fimull
xchg
lret
and
lret
cmp
and
inc
xchg
jge
mov
pop
popa
sbb
ret
mov
gs
push
into
inc
mov
or
ret
inc
or
dec
outsl
and
push
fidivl
negl
cmpsb
cmpsl
ljmp
pushf
inc
ds
adc
int3
xchg
xchg
fistl
rcll
mov
push
jp
lds
or
ljmp
ret
cmp
bound
and
xchg
push
hlt
clc
sub
repnz
pusha
aaa
ljmp
fists
jns
pop
or
bnd
mov
mov
sti
adc
push
xorb
pop
adc
sub
cwtl
jno
in
pop
mov
and
xlat
jmp
das
je
mov
push
sar
daa
mov
fisttpl
push
cmpsl
cs
push
cmp
int
or
fwait
mov
cmpsb
cmpsb
std
outsb
push
pushf
int3
stc
adc
jae
test
jns
test
mov
ljmp
ja
sub
fdivrs
lahf
outsb
mov
xchg
dec
pop
sbb
lock
sbb
nop
out
das
push
jb
lcall
pop
stos
sbb
push
mov
rcrl
push
stos
sub
subb
mov
out
aad
shlb
jae
sub
shlb
or
xor
xchg
or
mov
or
in
mov
inc
push
push
mov
mov
in
mov
dec
adc
pop
mov
add
push
in
cmp
ret
scas
das
dec
int3
in
adcl
aas
aaa
mov
sbb
mov
mov
inc
pop
mov
fidivl
iret
es
mov
jne
cmp
test
rorl
movsl
dec
sub
xchg
push
inc
movsb
pop
or
sti
or
int3
jne
ss
repz
jb
xor
aas
dec
jmp
pop
mov
sbb
clc
hlt
xchg
mov
pop
and
adc
inc
jb
repnz
push
stos
xlat
out
into
shl
or
mov
bound
les
xor
sti
int3
into
dec
scas
scas
lds
cmpl
push
iret
and
sub
xchg
das
push
xchg
pop
dec
popf
pop
enter
mov
add
es
or
ret
sub
jno
push
mov
fidivl
mov
clc
dec
int
stc
ljmp
cmp
sbb
fnstcw
dec
lds
sbb
mov
fstp
in
xchg
gs
aam
out
in
xor
pushf
or
add
jl
inc
mov
add
and
jb
hlt
cmc
push
cmp
mov
dec
jbe
push
xor
mov
cmp
push
dec
push
jno
mov
popa
movsb
adc
pop
clc
aaa
es
add
inc
sbb
outsl
das
jns
cmpsb
sub
arpl
jae
mov
test
dec
mov
outsl
jle
out
mov
dec
stc
xchg
int
in
cs
int3
test
ret
adc
add
mov
jle
leave
mov
pop
adc
clc
xchg
xor
adc
cmp
andb
test
jb
inc
rclb
xlat
lds
mov
cmp
mov
push
jns
push
pop
mul
cli
stc
inc
push
xchg
and
fidivrl
aad
stc
jge
xor
xlat
lahf
pushf
push
loope
xor
cmp
sub
lahf
out
or
xor
fwait
out
xchg
and
mov
push
jbe
xchg
hlt
addr16
dec
rcll
sahf
int3
lds
mov
aad
dec
lods
addr16
cmc
mov
xor
cltd
mov
inc
add
pushf
add
sbb
nop
pop
or
push
dec
into
lods
fdivrp
std
dec
ss
test
xor
movl
shrl
jmp
push
dec
loopne
sub
sbbb
pop
lock
cmpb
sbb
lods
and
pop
mov
and
jecxz
adc
mov
insb
scas
loopne
mov
pop
mov
aam
je
imul
xchg
sub
inc
jg
pop
mov
jbe
lcall
dec
hlt
inc
leave
fcompl
sti
mov
mov
push
lret
faddp
and
rcr
pop
cmp
imul
dec
arpl
cmpsl
out
fsubs
dec
pop
pop
jo
add
inc
jl
sbb
cli
pusha
leave
and
dec
mov
insb
cwtl
mov
in
inc
lods
jecxz
dec
insb
and
icebp
cwtl
pusha
das
in
shrl
nop
jns
test
xor
mov
jb
rcrb
ljmp
mov
ror
jno
dec
sbb
push
sbb
adc
adcb
jl
mov
push
jno
add
iret
and
mov
loopne
xchg
mov
imul
sbb
push
jl
mov
sub
mov
pop
sub
call
movsb
sbb
xchg
or
cmc
pop
dec
mov
das
iret
jmp
test
pop
inc
gs
pusha
fbstp
inc
cmp
loopne
xor
shlb
xchg
mov
shrb
adc
fsubrl
push
movsl
or
add
push
adc
jmp
inc
fwait
jle
rcrb
and
xor
and
mov
notl
or
idiv
dec
add
jne
push
test
jle
negb
and
mov
std
sub
roll
cmc
cld
inc
mov
cmp
movsb
bound
or
repnz
mov
stos
aas
das
stc
cmpsw
insb
das
pushf
xchg
sbb
ret
inc
in
mov
xchg
roll
jbe
sbb
inc
arpl
sub
jl
andl
les
test
imul
mov
inc
xchg
mov
mov
xchg
loope
cmp
pop
pop
cmp
imul
ret
scas
ss
je
mulb
shrb
addb
ror
ljmp
mov
add
sub
cs
andb
out
push
mov
pop
sub
inc
bound
mov
repz
xchg
mov
push
adc
sbbb
movsb
test
fs
or
xchg
xchg
xor
mov
out
add
cmp
std
mov
repz
cmpsl
leave
fsubrl
mov
ds
cs
clc
pop
xchg
aaa
testl
adc
lea
in
fistps
je
sub
add
inc
pop
cwtl
fisubrs
jae
jg
cmp
shrb
adc
mov
mov
mov
xchg
pop
add
xor
add
push
test
dec
adc
cmp
pop
sti
fnstcw
jbe
fninit
dec
popa
imul
pop
lret
sbb
outsl
or
jp
icebp
inc
add
out
clc
and
xor
sbb
jp
loopne
push
push
fimuls
pusha
xor
or
sub
xchg
adc
adc
shll
popa
push
cmp
pop
mov
pusha
or
lret
out
sbb
mov
lock
repz
enter
cmp
mov
popf
sub
imul
and
stos
std
imul
add
inc
lods
scas
jbe
test
xchg
and
push
sub
out
lods
mov
sbb
andl
adc
dec
and
jne
iret
lock
bound
jle
fisttps
cmp
push
gs
jecxz
add
xchg
push
cmp
mull
mov
movsb
adc
xor
or
fwait
mov
ja
mov
nop
adc
int
mov
add
scas
mov
loop
pop
stc
loope
xchg
push
push
push
jns
in
and
xor
aas
mov
xlat
clc
lock
cmp
push
aad
push
add
or
movsb
xchg
ja
nop
sahf
cltd
and
sbb
or
jb
mov
push
scas
xchg
push
mov
dec
fadd
mov
and
push
movsb
int3
les
bound
pop
stos
mov
mov
push
ljmp
and
sbb
pop
in
das
jns
cmp
jl
faddp
shr
jns
test
adc
lret
mov
lods
mov
xlat
mov
mov
xlat
and
sbb
sbb
into
mov
mov
fsubr
mov
out
mov
xchg
leave
dec
and
jbe
cmp
icebp
add
mov
inc
mov
addr16
xor
mov
lds
mov
or
mov
aad
aam
addr16
sahf
push
test
mov
pop
int
into
add
dec
fsincos
or
cli
push
insl
mov
or
jecxz
xor
mov
sbb
test
mov
xor
push
and
xor
aaa
jns
push
mov
in
or
mov
sbb
inc
mov
mov
push
inc
pop
arpl
pop
push
mov
sub
addr16
mov
shll
jb
jg
lods
popf
bound
mov
xchg
test
dec
je
out
loopne
mov
enter
mov
rorl
jg
rorb
pop
xlat
add
inc
ret
js
and
fsts
cmp
adc
cmc
sub
push
shll
dec
lods
in
out
inc
fwait
fsubr
iret
and
xchg
jo
pushf
leave
push
test
rclb
dec
pop
leave
jae
outsb
mov
fidivs
xlat
sub
xor
xor
jbe
je
mov
lea
dec
or
das
sbb
and
rorl
cmp
stos
andl
cld
dec
pushf
sbb
dec
add
or
inc
inc
shrb
aaa
cmc
sub
cmpb
push
stos
dec
inc
std
stos
xchg
imul
and
icebp
or
mov
lods
aaa
out
lock
ja
out
scas
pop
or
out
dec
scas
push
mov
add
mov
out
faddl
stos
sbbb
sbb
jae
dec
daa
push
jp
pushf
nop
add
or
mov
lock
dec
adc
mov
cltd
push
outsb
pop
shll
jb
pushf
lret
sbb
adc
inc
in
orb
repnz
outsl
sbb
cmpsb
into
jns
jne
test
lahf
sub
lods
push
pop
iret
imul
mov
push
xlat
fmuls
nop
mov
sub
dec
xchg
adc
fprem
in
out
fmuls
in
lods
xorb
mov
cmp
stos
adc
das
inc
jne
test
push
dec
cld
jns
out
clc
in
jg
xchg
leave
imul
ss
xchg
push
inc
lock
or
sbb
fsubrs
adc
sbb
mov
xchg
orb
add
je
xor
xor
push
add
out
shll
pop
popf
std
pmuludq
pop
mov
jl
add
je
sti
inc
out
insl
arpl
inc
add
xchg
dec
repz
inc
lods
adc
jle
imul
aaa
test
mov
add
stos
mov
xor
in
out
adc
inc
shll
jb
movsb
mov
xchg
rorb
jg
cmp
pop
adc
lret
int3
negb
out
sbb
add
iret
ret
inc
jle
nop
rclb
lret
decl
xor
push
aad
sbb
cld
ret
pop
mov
push
pop
out
jb
cwtl
inc
dec
sti
test
clc
mov
mov
sub
popa
test
push
mov
in
cmpsl
sbb
sbb
add
xor
adc
dec
sti
jo
dec
cmpsl
stos
pop
xchg
adc
cmpsl
lods
out
cmc
push
ret
jmp
lret
scas
cmp
mov
mov
js
mov
mov
outsl
xchg
sbb
adc
loopne
dec
iret
pop
addl
fsubs
repnz
test
add
lahf
xchg
andl
xchg
lcall
adc
movsl
movsl
push
jno
push
or
xchg
cli
jne
and
xchg
sbbl
mov
push
lea
dec
lods
push
jmp
aad
mov
cmp
aam
push
mov
sbb
push
insl
xchg
insl
insl
xchg
imull
lods
sbb
push
mov
mov
inc
sbb
sub
xchg
shrb
sti
mov
int
and
in
movsl
popf
sahf
rcrl
insl
mov
push
in
push
sbb
dec
pop
test
inc
jns
xor
or
hlt
test
pop
stos
push
and
jmp
js
mov
xor
enter
or
sti
adc
or
or
jae
jne
sahf
adc
xchg
cmpsb
popf
sbb
stc
or
fstp
stos
jge
jb
scas
mov
loopne
sub
dec
in
movsb
lcall
dec
xor
mov
inc
mov
aam
insl
push
leave
cmpsb
mov
push
push
push
xor
sub
adc
call
jns
inc
loopne
fcomps
mov
xor
xchg
jmp
xchg
or
insl
gs
icebp
dec
lds
sbb
scas
push
rol
cmpsl
insl
xchg
subl
mov
lods
mov
push
cmpb
or
mov
rcr
mov
adc
enter
mov
xchg
and
adc
adc
push
imul
lock
and
push
movsb
or
jmp
adc
pushf
cmp
and
adc
push
add
or
cmp
rclb
test
insl
outsb
ljmp
add
mov
jno
jmp
and
lds
pop
ficompl
cld
xchg
rep
pop
stos
push
aad
or
push
jno
in
test
test
lcall
xchg
mov
outsl
movsl
sti
imul
or
or
sbb
xor
push
dec
push
push
cmp
push
cwtl
xchg
stos
xlat
pop
fists
popf
lahf
popa
jp
rcl
imul
out
out
sbb
mov
add
pop
gs
adc
lods
stos
ret
daa
and
mov
out
jp
sub
cmpsl
pop
mov
jne
fisttpl
dec
cmpsl
aam
frstor
jmp
push
test
push
loop
fsubl
mov
mov
aad
and
add
idivl
cmc
out
js
pop
pop
or
xor
leave
dec
or
lahf
jnp
sub
fdivrs
add
aas
or
lods
cmc
data16
sbb
stos
mov
mul
js
mov
cltd
shrl
js
push
std
or
mov
mov
push
cmpsl
out
andb
dec
cld
push
add
and
xchg
pop
iret
je
daa
scas
fisubl
xor
into
in
xor
into
cli
aam
lods
sbb
jne
test
cmp
cli
test
and
pop
mov
sub
sbb
std
push
xchg
cld
mov
pop
subl
mov
xchg
pop
pop
adc
pop
imull
pop
in
icebp
gs
pushf
jle
mov
enter
fcomps
inc
fistpl
jbe
addr16
fstpl
mov
outsb
jo
sbb
lret
pusha
gs
div
jns
popa
jp
inc
xor
stos
out
sub
and
add
std
negl
movsb
sbb
xchg
and
xlat
leave
mov
cs
lods
fbld
lods
inc
cltd
adc
shlb
xchg
inc
adc
andl
je
jge
mov
sub
sarl
rcll
and
lret
stos
xor
or
aad
fsubrs
dec
cwtl
hlt
jle
xchg
mov
pop
pushf
insl
movsl
and
add
lahf
js
lock
stos
pop
std
mov
shrl
pop
adc
pop
push
add
mov
lds
jg
mov
add
and
loopne
push
pop
pop
mov
push
rcll
inc
lret
inc
movsl
cltd
fwait
jno
out
mov
aad
cmp
xor
je
push
mov
fstp
mov
mov
ffreep
and
push
push
aaa
push
and
hlt
pop
insl
adc
je
sub
call
mov
leave
sbb
shrb
xlat
mov
adc
hlt
sub
mov
dec
mov
roll
or
cmpsb
pop
inc
js
fimuls
and
daa
sub
mov
inc
test
add
arpl
sbb
aam
and
shl
pop
push
daa
jmp
jns
sbb
aam
lods
bound
bound
out
lea
mov
movsl
mov
scas
int3
inc
or
sub
dec
std
test
pop
sub
sub
cli
cmpsb
cli
roll
jae
and
gs
cmpsl
mov
addr16
sub
mov
push
jae
test
pop
jno
pop
push
test
cmc
lret
and
les
sbb
lods
divb
adc
aas
jae,pn
xchg
sahf
sub
jg
lret
inc
fnstenv
xor
sub
mov
imul
pop
xchg
jno
clc
dec
push
add
sbbb
add
and
lcall
lods
pop
scas
mov
insl
insb
push
fstpt
in
add
jmp
mov
fcomps
adc
test
in
push
mov
sub
pop
sub
mov
jns
inc
inc
mov
push
pop
repz
pop
mov
mov
imul
jecxz
push
mov
rol
pop
cltd
test
in
add
dec
mov
mov
cmp
mov
pop
icebp
loop
add
xor
filds
fistl
das
in
popl
or
imul
jns
ret
and
jg
xchg
subl
lret
ljmp
lret
pop
mov
ficoml
or
pop
and
mov
leave
clc
jae
out
adc
sub
test
out
and
test
bound
xor
addb
mov
pusha
daa
xor
mov
mov
jbe
pop
loopne
adc
push
or
or
sub
popa
jae
outsl
jae
ds
and
adc
sbb
lea
pop
stos
dec
repz
xchg
add
lea
jne
in
push
xchg
sbb
fcomp
out
jg
push
push
popf
pop
js
int
cld
jo
and
jg
jg
ja
clc
push
sub
xor
test
and
jno
stos
jno
dec
or
adc
sarb
lock
out
out
aaa
out
lret
idiv
loop
jne
cltd
sub
mov
ljmp
lods
mov
cmp
jmp
pop
and
loope
cmpsl
int
sbb
sub
push
cltd
bound
fcmovnb
sub
in
mov
sbb
cmpl
cwtl
sub
jmp
push
and
mov
into
loopne
in
and
xchg
inc
pop
je
fucomip
nop
xor
or
cmc
jo
dec
xor
push
f2xm1
or
add
mov
imul
fnstenv
sub
push
loopne
push
mov
insl
mov
ja
mov
cmp
dec
cmp
in
lock
inc
fnstenv
lahf
mov
add
stos
inc
mov
lret
push
cmc
shlb
jp
add
adc
sub
shrb
bound
push
aaa
xchg
dec
dec
bound
fs
je
mov
jns
fmul
jne
pop
nop
jnp
pop
xor
sbb
out
inc
hlt
sub
rorb
in
sub
sti
data16
loope
jg
fwait
je
xchg
fdivrp
and
loope
pop
orb
loopne
dec
xor
pop
inc
or
popf
lahf
inc
es
sub
daa
push
dec
jmp
insl
loopne
jle
or
fstl
mov
mov
jnp
ja
idiv
mulb
movb
mov
or
fwait
pop
ds
sub
mov
fidivl
sbb
mov
mov
mov
or
aaa
pusha
insb
mov
sub
push
xchg
bound
in
lahf
and
push
xor
dec
fnstcw
imul
fldenv
push
stc
inc
jmp
adc
jecxz
sarl
imul
fldenv
push
stc
inc
jmp
adc
jecxz
sarl
imul
fldenv
push
stc
inc
in
xor
add
sarb
imul
fstps
inc
adc
cltd
js
sub
pop
test
dec
pushf
cmp
sub
cmp
out
in
sub
pop
mov
imul
cmp
sub
sbb
and
cld
or
dec
aam
int3
pop
xchg
dec
lods
jns
imul
or
fs
push
jmp
iret
dec
mov
sub
aaa
out
pop
call
lret
sub
lahf
adc
adc
sahf
jp
shlb
hlt
arpl
adc
scas
dec
sub
repz
repnz
repz
add
adc
pop
repz
xchg
shll
xor
xchg
fcom
test
pop
push
sbb
arpl
fldl
stc
dec
rclb
test
insb
iret
pop
sub
fstps
faddl
or
and
int
test
imul
stos
std
xchg
shll
ret
fucomp
lock
cmc
mov
aam
dec
mov
xorw
and
filds
insb
bound
rorl
cmpsb
gs
jmp
lock
test
sub
sbb
sahf
sbb
or
sub
pop
orb
test
fistpll
fdivl
int3
and
imul
scas
cmp
and
cmp
cmp
sub
das
int3
and
jne
aas
jl
or
cmp
sbb
push
paddsw
jo
sub
sbb
or
cld
or
cmp
sub
pop
mov
imul
cmp
sub
sbb
or
cld
or
cmp
sub
pop
mov
imul
pop
gs
jo
jle
stos
dec
jnp
rcrb
pop
mov
sbb
sbb
jmp
daa
inc
push
lock
hlt
mov
or
fcmovnb
mov
insb
outsb
shrl
mov
rolb
aaa
rcl
and
or
aaa
test
idiv
pop
mov
mov
push
addr16
iret
add
sarb
ficomps
loope
fdivrl
inc
leave
adc
push
scas
dec
lock
inc
cmp
xor
sub
push
or
mov
jae
mov
cwtl
add
test
cmp
in
jnp
xor
andb
jno
addr16
jnp
and
incb
sbbl
shl
jp
lret
xchg
sub
jg
xor
fbstp
xchg
mov
pop
jle
pop
adc
divl
daa
scas
mov
je
push
inc
fldenv
jbe
inc
ljmp
rcl
shl
fdivrp
aad
sbb
jmp
pop
mov
ret
mov
sti
call
xor
repz
rcr
mov
jns
ret
js
and
int
mov
lret
stos
push
mov
mov
adc
mov
jecxz
jne
adc
cmc
cwtl
scas
int
dec
aas
loop
insl
inc
mov
test
xor
std
mov
pop
arpl
in
outsb
shrl
cmc
push
cld
rolb
xlat
or
es
adc
dec
sarl
jne
int3
fsub
popf
ds
shll
outsl
mov
popa
sbb
outsl
and
in
cmc
adc
cmc
adc
dec
dec
pop
notl
in
lock
clc
stos
sbb
arpl
adc
xchg
jne
outsl
aam
xor
inc
push
xor
ljmp
call
lods
adc
xchg
mov
stos
test
cmp
pop
out
call
sub
sub
stos
add
movsb
push
sahf
sbb
adc
imul
jecxz
testb
out
sub
add
std
ss
push
les
adc
push
jb
push
push
sbb
ss
sub
fst
cltd
cs
pop
inc
or
imul
pusha
test
dec
xor
push
fidivrs
jmp
jns
jecxz
lock
call
or
nop
inc
mov
jl
outsl
fs
movb
xchg
dec
das
insl
pop
ja
divl
pushf
daa
mov
je
inc
inc
fisubrs
js
jle
sub
pushf
xor
adc
lea
scas
dec
daa
int
bound
int
shll
sub
movd
push
push
js
jne
cmp
xor
xchg
cmpb
or
and
addr16
xchg
adc
daa
xor
call
popl
pushw
into
mov
jl
pop
pushf
push
pop
dec
stc
dec
orl
jb
mov
notb
jno
jns
lods
jmp
cmp
sbb
ljmp
adc
xchg
pop
add
mov
pushf
cltd
add
sub
xchg
insl
and
and
enter
int3
push
test
xchg
mov
js
or
jl
nop
lret
push
leave
out
push
push
ljmp
daa
addl
mov
addr16
mov
xchg
test
imul
cld
xor
jp
cmc
decl
lret
loope
pop
ja
sti
out
arpl
adc
add
ljmp
loope
insb
sub
adc
jge
sbb
call
and
jo
mov
push
jle
pop
and
out
cld
stos
pushf
cmc
mov
icebp
fldl
shr
mov
aad
sbb
mov
mov
mov
test
scas
out
mov
push
xchg
loope
jle
ret
lret
pop
int
ss
xor
push
mov
and
xchg
add
mov
fdivs
mov
sahf
ljmp
cmp
jp
push
fcompl
xor
mov
mov
sub
movsl
sti
mov
or
mov
push
cld
mov
mov
or
fcoml
popf
pusha
popf
daa
adc
mov
mov
cmp
jbe
mov
pop
adc
sbb
pop
pop
push
aas
scas
enter
inc
sahf
ds
sub
push
push
sub
xchg
xchg
sub
push
repz
filds
xchg
xchg
mov
sbb
adc
subl
and
mov
aam
xlat
jnp
add
lret
in
push
pop
in
mov
add
test
divb
fistpl
sub
mov
mov
rcrl
jge
pop
mov
jne
sbbb
xlat
adc
pop
test
pop
fidivrl
or
pop
add
arpl
sbb
jg
jnp
jecxz
js
imul
inc
rorb
clc
pop
pop
dec
fnsave
or
out
insl
inc
js
and
and
dec
jle
cmp
pop
adc
inc
lods
mov
xchg
test
jecxz
pop
jl
cs
dec
xor
outsb
or
or
test
ja
inc
cmp
fsub
xor
int3
jl
mov
dec
lcall
pop
cmpsb
push
push
jne
arpl
push
sub
push
test
inc
adc
and
fidivl
in
inc
fcmovbe
add
mov
push
cmp
pop
test
test
jmp
mov
sub
or
lea
out
movsl
stos
xchg
cld
fldcw
xchg
jne
mov
or
sbb
dec
out
repz
xor
fcmovu
xchg
add
and
lahf
daa
push
ficoms
and
rcll
sbb
add
cmp
loopne
mov
xor
aas
jbe
mov
loop
sbb
ror
sahf
fwait
in
add
jnp
lods
mulb
clc
mov
cld
lcall
movsb
mov
lcall
sub
ljmp
call
cmpsb
inc
loopne
sbb
lds
aam
cmpsl
xor
fldl
mov
in
or
imul
cmp
sub
dec
mov
enter
stos
sbb
xchg
lock
mov
aas
loope
scas
stos
mov
mov
jmp
cmp
dec
and
loope
dec
xchg
lret
adc
bound
mov
aam
mov
adc
dec
xor
dec
out
insl
push
inc
adc
fistpl
pusha
jecxz
imul
mov
jnp
lcall
jp
sbb
js
mov
pop
imul
fistpll
dec
and
test
repnz
hlt
lods
xchg
xor
mov
jmp
pop
shl
hlt
mov
ds
out
aaa
popa
test
sti
cld
push
sbb
test
shll
fidivrs
dec
out
adc
xor
sbb
das
dec
rcll
das
mov
push
icebp
add
xor
fwait
adc
lods
and
ss
cmp
mov
arpl
insl
ds
sbb
jo
dec
js
cs
cmp
stc
cli
loopne
xor
movsb
sbb
scas
leave
icebp
ja
xor
adc
inc
sbb
xchg
fsts
ffree
mov
and
xor
shl
mov
iret
or
sbb
ret
inc
inc
inc
xor
or
inc
mov
fdiv
push
loope
mov
clc
sub
mov
cmp
mov
pusha
inc
jno
and
out
scas
and
adc
mov
jge
out
loope
pop
add
out
not
lock
idivl
dec
loope
out
das
mov
dec
dec
xor
out
and
push
loope
inc
jl
sti
pop
fcmovnu
fs
and
mov
outsb
and
dec
adc
mov
lahf
and
outsb
pop
inc
jbe
push
cmp
jno
outsb
ss
sbb
sbb
jl
push
push
cwtl
inc
lock
adc
push
nop
sub
and
inc
loopne
pop
mov
jle
inc
pop
je
aas
and
cmp
and
bound
jno
dec
sub
jo
dec
sti
pop
jno
hlt
cmp
lret
mov
sub
jl
cmp
pusha
cs
xchg
repz
pop
mov
mov
cmpsb
xchg
out
or
pushf
mov
jae
aam
ja
and
push
or
shl
or
pop
loope
imul
dec
andb
mov
outsl
push
stos
fwait
jno
jbe
mov
outsb
out
icebp
pop
cmp
mov
mov
mov
cwtl
fcoml
sbb
jo
jle
sub
sbb
rcll
push
xor
mull
bound
stos
mov
lea
das
push
cmp
fucom
adc
mov
fs
pop
mov
aaa
addr16
xor
mov
jl
lea
jge
xor
add
adc
adc
push
dec
dec
jecxz
shrl
adc
or
cli
mov
mov
push
test
push
jg
imul
dec
and
and
sti
popa
cmpsb
push
enter
in
jae
jno
rcrl
mov
idivb
jecxz
cltd
or
insb
ret
pop
adc
shrl
sbb
insb
inc
cmpsb
add
sahf
push
mov
out
or
xor
xor
cmpb
aam
dec
fdivl
lcall
sub
std
ljmp
add
lcall
movl
xchg
lock
into
lahf
push
mov
sti
pop
jecxz
loope
mov
sub
adc
adc
out
filds
into
xchg
mov
sub
inc
sbb
adc
sub
adc
cmp
in
cs
pop
out
adc
fmulp
in
xor
xor
mov
call
push
addl
sbb
push
dec
test
mov
xor
cltd
rol
cld
or
outsl
enter
stos
fwait
inc
enter
dec
ljmp
shll
aam
xchg
scas
mov
and
add
sbb
insl
sbb
test
sub
pop
in
inc
mov
pop
mov
xchg
mov
mov
xor
addr16
mov
sbb
xor
ds
cmp
call
outsl
sbb
jp
lret
insb
push
cmp
xlat
push
mov
or
lods
loopne
add
push
mov
mov
fsubrs
cmp
mov
and
insb
das
xchg
nop
jecxz
or
arpl
sbb
sub
dec
call
int
ss
imul
je
arpl
test
pop
push
cld
xor
call
xor
test
iret
xor
or
movb
int
dec
ds
sub
and
or
out
jge
cli
repnz
sbb
cmp
xchg
imul
pop
pop
sub
add
jg
cltd
div
xor
pop
mov
cltd
pop
insl
aas
cmp
outsb
ret
dec
add
jne
mov
inc
dec
int
sbb
mov
stc
outsl
sub
gs
cmp
xchg
fnstcw
ret
out
pop
mov
je
ret
add
fwait
loopne
xor
test
jne
testl
jge
sbb
enter
lret
stos
sahf
mov
pop
or
stos
push
out
ja
mov
add
jg
out
hlt
mov
mov
push
xchg
jp
xchg
add
push
mov
mov
add
aad
adc
add
out
fistl
xor
rorl
adc
add
pop
sarl
inc
and
sub
inc
stc
lret
push
lahf
repz
cld
ja
push
lods
sarl
enter
mov
jp
adc
xor
shll
inc
lret
pop
ljmp
and
fxch
repnz
lret
je
loopne
and
dec
sub
sub
mov
pop
xchg
push
jne
sbb
pop
pop
arpl
jae
jbe
rcr
xchg
scas
sub
inc
or
mov
into
out
orl
ss
stc
subb
clc
loopne
pop
sub
jne
inc
or
js
out
adc
pop
push
pop
pop
mov
std
call
outsb
pusha
fcomps
bound
push
lcall
and
es
xchg
mov
fucomip
mov
xchg
loop
lret
inc
push
push
int3
sahf
ror
fs
add
int
es
adc
out
push
ret
packuswb
jo
pop
in
jge
inc
lods
or
xchg
mov
or
sahf
sbb
pop
and
enter
xor
cld
aaa
mov
xchg
int
xchg
call
andl
mov
imul
cmp
pop
jp
in
pop
jbe
lods
pop
sub
scas
outsl
jmp
scas
jecxz
inc
cmp
or
notl
jb
add
xchg
stc
cmpsl
adc
jmp
outsl
add
push
shlb
test
adc
xchg
xor
js,pn
pushf
mov
clc
fimull
gs
adc
out
mov
icebp
aaa
mov
push
jecxz
int
jmp
addr16
enter
inc
pop
adc
inc
mov
push
push
jl
mov
pop
imul
or
and
add
mov
mov
sbb
jno
loopne
fsubrs
mov
lea
inc
sub
fadds
jb
and
sbbb
std
std
jmp
fstps
adc
sahf
sub
loope
mov
fs
push
mov
add
repnz
outsl
push
aas
jae
mov
repz
mov
ds
nop
stos
add
lds
xchg
test
repz
jg
fimull
jne
sbb
jp
adc
add
lahf
lret
repz
or
xchg
popa
mov
dec
jmp
imul
es
jl
cwtl
dec
xchg
ja
lods
mov
push
dec
bound
mov
or
movsb
js
js
sbb
pop
stos
das
ret
mov
cmp
xor
loopne
pop
sarl
jmp
lods
movsl
sub
sahf
cs
jns
mov
jae
mov
cmp
mov
ss
push
fisttpl
aas
xlat
add
mov
shlb
in
js
aaa
addl
pop
push
pusha
lcall
add
or
ficoms
scas
mov
mov
jge
inc
or
inc
mov
mov
scas
mov
lcall
mov
js
movsl
repnz
xchg
in
fidivl
adc
mov
push
ret
pop
xor
xlat
dec
push
jle
push
or
in
cld
lret
inc
fs
ret
lods
mov
jne
push
pushf
pop
data16
mov
xchg
mov
mov
pop
cmp
push
sub
xchg
dec
jnp
repnz
fmuls
hlt
sub
dec
mov
push
fwait
xchg
lock
xchg
ror
lds
aaa
lcall
pop
rolb
je
repnz
xor
movsl
lds
fsubrs
sbb
stos
mov
mov
cmpsb
fwait
mov
add
dec
jne
push
mov
fsubr
push
insb
pop
das
pop
xor
jge
loope
and
loopne
lods
out
ja
popf
push
out
inc
jne
mov
std
mov
push
push
movsl
sub
movsl
lea
mov
jo
xchg
pushf
xchg
push
or
add
repz
mov
out
mov
ja
cs
mov
xlat
mov
adc
inc
jl
sub
add
mov
cmpsl
int3
jg
jmp
sub
sbb
jl
cmp
mov
add
xchg
inc
push
sub
or
fisttps
sti
mov
cmp
xor
sbb
and
aad
adc
sbb
insl
inc
pop
adcb
je
add
mov
jle
push
cmp
inc
push
outsb
scas
mov
xor
and
addl
inc
mov
cli
push
push
and
cmpsl
xor
pushf
movsl
test
jp
lahf
mov
pop
sets
subb
adc
orb
shll
mov
mov
bound
lods
mov
es
cmc
fcmovu
outsl
mov
fisubs
cs
inc
or
add
shlb
dec
in
ret
repz
fidivrs
testl
insl
fsub
out
mov
mov
fwait
dec
adc
stos
adc
insb
scas
sbb
and
xchg
in
aad
pusha
lods
ljmp
test
mov
mov
aam
repnz
or
stc
mov
xor
icebp
cmp
ds
repz
dec
xchg
xor
jae
cmpsb
adc
cmp
and
add
enter
popf
lock
jbe
jbe
pop
mov
stos
cld
xor
jl
ds
cli
dec
mov
adc
lret
in
std
xchg
test
test
fcmove
lods
rcrb
test
scas
das
xor
fnstcw
fsubl
movb
jns
mov
frstor
in
or
stc
in
push
pop
out
xor
xchg
push
movb
push
mov
nop
jo
daa
cmp
sbb
push
pop
dec
lahf
clc
fwait
loopne
lock
mov
aaa
pop
push
inc
pushf
and
lods
popa
dec
cmp
inc
sahf
sahf
insb
std
mov
popa
cmp
sub
mov
inc
adc
ret
add
cli
xchg
cmp
sub
test
mov
cld
jle
fisubrl
dec
inc
test
mov
lret
out
pop
fcmovu
mov
in
aaa
cmpsb
movd
jecxz
stos
jle
xchg
and
test
aam
outsl
insl
or
imul
fidivs
pop
push
xlat
iret
les
mov
movsb
lods
pop
call
js
fstps
and
pop
roll
lock
icebp
mov
sbb
or
sahf
fimull
xor
fs
das
or
stc
loope
nop
loopne
fs
dec
and
call
nop
and
hlt
jl
pop
in
mov
mov
daa
mov
test
dec
imul
movsl
inc
lcall
mov
and
cld
push
pop
mov
pop
icebp
jp
out
sbb
add
mov
mov
jecxz
lds
sbbl
xchg
scas
es
xchg
mov
and
mov
lods
push
test
mov
xchg
clc
imul
ss
xchg
mov
fmull
xchg
xchg
push
lea
sub
cmp
cmp
leave
dec
mov
and
je
mov
addl
or
jae
test
ret
fcmovnbe
push
xor
rolb
dec
add
insb
push
cli
cmp
sub
xlat
call
out
cmp
filds
into
test
dec
fsubs
fists
mov
and
stos
sbb
xor
mov
pop
rol
int
ljmp
xor
inc
xchg
xchg
fisubl
arpl
pop
cmpsb
xor
stos
lods
push
ret
xchg
mov
mov
cmp
testl
push
mov
hlt
mov
push
gs
pop
rcrb
or
stc
cmp
sub
fiaddl
in
rorl
mov
loopne
test
jno
popf
sbb
xor
xchg
cmp
iret
xchg
into
push
std
xchg
je
in
sub
jmp
mov
or
bound
mov
add
cmpsb
or
xor
pusha
ret
cmc
xor
daa
xchg
mov
std
mov
cmc
or
pop
jne
add
scas
add
mov
push
mov
scas
jno
pushf
or
fadds
cmp
mov
test
pop
out
sbb
ljmp
cmp
pop
out
add
adc
hlt
aaa
cwtl
daa
cwtl
sbb
jae
repz
nop
pop
shlb
cwtl
push
sbbl
mov
jae
repnz
aam
mov
dec
mov
imul
jl
mov
fs
sub
mov
inc
aaa
inc
mov
and
pushf
leave
pop
pop
jno
xorb
scas
call
sub
rorb
test
cld
mov
mov
imul
xor
cmp
jmp
arpl
daa
or
and
add
cmp
push
icebp
mov
xchg
or
inc
pop
mov
out
or
pop
xor
jo
sub
shll
imul
jp
dec
xchg
stos
cmp
mov
add
dec
out
bound
dec
mov
xor
mov
roll
xchg
mov
xor
les
aaa
mov
or
pop
mov
mov
sarb
cwtl
das
xor
enter
push
leave
imul
pushf
test
pop
xchg
push
jp
repz
jns
add
mov
pusha
jne
scas
cmp
jg
push
pushf
imul
aam
lret
dec
popf
pop
mov
imul
mov
inc
mov
popa
pop
call
jge
xchg
aam
xchg
fstpt
lret
pop
dec
sbb
and
fdivs
or
pop
pop
sahf
pop
pop
jne,pt
fwait
jge
aas
push
insb
std
pop
test
sub
sbb
or
cld
or
cmp
sub
pop
mov
imul
cmp
sub
sbb
or
cld
or
cmp
sub
pop
mov
imul
cmp
inc
stc
sbb
or
std
or
cmp
sub
pop
mov
imul
mov
leave
sub
pushf
jmp
inc
xchg
fsubrl
mov
xchg
xchg
hlt
cmp
notb
dec
mov
outsb
aas
add
push
or
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
add
adc
mov
sti
add
add
jne
popf
add
hlt
add
add
das
add
jae
rolb
add
add
add
add
dec
add
push
add
add
push
add
add
add
add
add
add
add
or
jo
imul
add
add
daa
add
dec
add
add
add
jae
and
hlt
add
add
sub
inc
add
add
add
mov
test
add
add
dec
add
pop
add
add
test
push
add
add
inc
add
xlat
add
add
add
pop
add
add
add
add
fildl
mov
add
add
add
test
add
add
ljmp
add
add
add
add
faddl
imul
add
add
add
xor
rolb
adc
or
inc
add
add
add
add
xor
scas
add
add
test
jmp
add
add
add
add
add
add
add
add
add
faddl
jnp
sahf
add
add
add
add
add
adc
jae
aas
add
add
add
add
add
add
add
aas
add
add
aas
add
add
add
add
mov
lds
scas
add
add
inc
add
add
test
add
add
add
add
add
add
or
int3
add
add
add
inc
add
add
sbb
push
add
imul
add
add
add
mov
add
add
add
add
add
add
cltd
add
add
verw
add
add
pop
test
add
add
add
add
add
add
mov
add
add
add
add
movsb
add
add
jl
test
add
add
or
pop
add
test
lret
add
lods
add
add
add
add
add
insb
add
add
add
and
dec
add
add
add
add
and
push
add
xor
dec
add
add
add
add
add
add
add
add
xor
add
add
add
sbb
fildl
push
add
add
add
add
add
add
popf
add
add
add
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
add
jae
xchg
add
push
add
dec
add
add
add
add
add
add
add
adc
pop
dec
add
pop
add
add
and
dec
add
add
add
add
fiaddl
dec
add
add
sub
mov
les
pop
add
push
add
add
lcall
pop
sahf
add
add
cmp
xor
add
add
das
sbb
or
mov
and
cmp
mov
fstpl
inc
sti
ja
xor
mov
jns
shll
popf
dec
mov
movsb
and
xor
and
sub
pushf
flds
cld
push
mov
mov
or
add
jg
sbbl
test
out
gs
in
xor
mov
lcall
jne
mov
add
loopne
sub
dec
xlat
lret
sbb
es
xchg
push
aas
cmp
das
and
mov
jp
in
mov
cmp
xchg
jb
outsl
mov
jns
outsl
jl
sbb
adc
sub
cs
push
or
mov
addr16
mov
imul
aam
add
lods
int
aaa
jbe
pop
jg
leave
inc
fsubrl
mov
mov
shr
divb
add
mov
lcall
and
nop
andl
or
xor
pop
jno
adc
lods
jmp
ss
lcall
in
mov
pop
pop
pop
scas
dec
adc
adcb
adc
fs
add
or
outsl
jp
clc
ret
insl
adc
mov
cmpsl
inc
push
fwait
in
mov
pop
push
sub
repz
cmp
rcr
pop
sub
std
cmp
cmc
icebp
inc
call
lcall
jno
xor
mov
push
arpl
repnz
cltd
popa
xchg
divl
xchg
add
mov
xchg
sarb
and
int
xacquire
or
or
mov
mov
xchg
gs
sbb
push
adc
cmc
call
sarb
inc
sub
jo
mov
inc
mov
dec
xor
jmp
xchg
mov
enter
repz
jl
push
mov
and
xchg
xlat
cmpsb
mov
mov
lods
jmp
adc
ficoml
sub
loope
lret
mov
test
inc
in
incb
aam
xchg
push
adcb
inc
mov
cmp
ja
xor
cwtl
int3
fsts
cmp
imul
mov
xchg
lock
and
negb
repz
sbb
cmp
adc
es
add
pop
dec
mov
sbb
push
sub
mov
pop
adc
sub
out
call
ret
sti
ds
adc
pop
dec
movsl
sbb
ss
aam
fwait
roll
stos
ljmp
shl
mov
sbbb
and
repz
subb
aaa
call
dec
in
mov
inc
sbb
das
jg
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
