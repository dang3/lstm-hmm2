call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fs
outsb
push
pop
push
dec
popa
aas
sbb
push
sti
inc
scas
in
fisubrs
scas
fimuls
outsb
cs
push
dec
jle
outsb
cs
push
dec
imul
into
fucomi
scas
ficomps
aaa
outsb
push
pop
push
dec
addr16
inc
push
pop
push
mov
mov
mov
stc
dec
xor
push
push
or
xchg
shrl
or
push
adc
bound
popa
rorl
mov
ret
mov
xchg
xchg
and
cmc
xor
inc
fbstp
mov
mov
jae
loopne
lds
mov
fdivs
add
xchg
je
or
repz
dec
test
pop
aas
jnp
mov
dec
out
mov
adc
scas
mov
mov
mov
jp
cs
rorl
push
mov
push
sti
mov
mov
push
in
out
mov
fisubs
js,pn
loopne
inc
ret
jno
movsl
mov
push
ljmp
ds
into
jno
jle
outsb
push
pop
sbb
je,pt
pop
push
push
push
cmpsl
mov
xchg
xchg
into
out
imulb
dec
jle
pop
jnp
push
sbb
pop
pop
jnp
jp
mov
mov
mov
adc
add
or
or
imul
or
mov
mov
popf
cmp
aas
sbb
jnp
push
ss
or
cs
push
dec
push
mov
fimuls
scas
ficomps
outsb
push
pop
push
dec
jle
outsb
cs
push
dec
push
mov
fimuls
scas
ficomps
in
inc
inc
xor
push
lret
inc
lods
loope
push
ljmp
mov
arpl
out
xchg
ljmp
xchg
sub
outsb
fsubr
filds
addr16
dec
aas
insb
adc
pusha
mov
cmpsb
popa
ret
inc
out
inc
push
int3
insb
aaa
add
mov
dec
arpl
rorl
test
mov
push
int
ljmp
ja
call
add
lret
mov
das
pop
out
in
iret
push
in
loopne
dec
mull
into
test
clc
stc
jne
cli
out
inc
mov
push
or
xor
leave
xor
mov
out
jne
push
xchg
dec
leave
and
sbb
push
mov
jge
push
orl
scas
pushf
fsubrl
adc
ficoml
cmp
rcrl
sub
cmc
nopl
inc
fistl
imul
xchg
mov
pop
iret
call
mov
xlat
and
jp
std
pop
in
shlb
ja
fcmovu
cs
mov
loope
out
or
or
xchg
push
into
xor
imul
adc
out
ds
or
sahf
mov
loop
inc
push
cmpsb
cltd
js
lds
lcall
sbb
pop
in
jmp
pop
mov
mov
jl
cmp
lret
imul
subb
aas
xchg
jmp
je
push
cmp
push
or
cmc
xor
cmp
add
rorl
mov
jl
lret
sbb
pop
test
mov
test
xchg
mov
push
cmp
hlt
and
or
repnz
popa
int
mov
adc
imul
lcall
xor
cmpsb
cli
andl
jno
pop
outsb
cmp
ficoml
pop
cmp
lahf
daa
jle
pop
mov
sti
movsb
hlt
pop
pop
sbb
les
mov
jle
jmp
nop
add
jmp
imul
cwtl
sti
adc
mov
pop
out
adcl
int
add
fs
stos
mov
out
xor
or
pusha
faddp
stos
xchg
push
pop
in
dec
jmp
jmp
addb
insb
loope
jno
int
push
adc
pop
xchg
pop
stc
adc
es
outsb
jo
xchg
insb
xchg
lods
cmp
popl
ljmp
fadds
add
xor
lods
hlt
xchg
stos
fwait
iret
xchg
push
mov
test
cmp
adc
rolb
xchg
icebp
dec
dec
cmp
mov
mov
not
in
mov
ficoms
sahf
or
push
pop
cltd
and
mov
cmp
dec
sbb
into
sub
adc
push
ljmp
and
xchg
in
fstl
pop
jecxz
jecxz
je
xchg
addr16
xchg
push
xchg
add
pop
out
mov
or
int3
mov
sub
cmp
pop
inc
sbb
sub
stos
xchg
imul
pop
mov
pop
cmp
cmpsl
pop
ja
data16
and
in
es
dec
sbb
push
insl
aam
mov
add
outsb
mov
dec
test
fs
outsb
xlat
pop
aas
ficompl
scas
lods
fcom
cmp
fwait
sub
leave
sbb
mov
mov
sahf
daa
hlt
out
aam
adc
jecxz
movsb
loopne
push
dec
icebp
and
push
and
lret
repnz
aad
test
cmp
out
shlb
jo
mov
imul
jae
fnstcw
imul
mov
jae
xor
cmp
iret
fwait
xor
dec
or
or
mov
into
jb,pn
xor
cmpsb
in
mov
jbe
sti
sahf
insl
sub
mov
xchg
jo
fistps
mov
push
jmp
or
adc
dec
inc
sbb
add
or
push
test
outsl
cmp
repz
fwait
icebp
jbe
xchg
movsb
xor
fsubl
push
mov
mov
bound
cwtl
pop
mov
les
cmp
push
jno
lock
xor
jbe
push
pop
pushf
or
rorb
into
repz
add
sub
push
jecxz
dec
or
aas
lahf
jno
mov
cmp
mov
insl
mov
out
add
lods
test
push
dec
out
or
inc
call
daa
push
nop
pop
xor
mov
jns
out
cld
pop
adc
mov
jle
fadds
loop
call
aam
push
or
push
nop
dec
in
mov
mov
push
or
lds
sub
push
movsb
push
add
cld
and
xchg
push
movsb
cmpsl
add
notl
push
stos
out
subb
movsl
lret
jp
icebp
test
pop
in
dec
inc
mov
mov
rorb
imul
aas
xor
sbb
lds
fcmovne
mov
gs
out
push
dec
sbb
and
loopne
mov
sbb
sub
inc
xchg
les
ret
and
push
jmp
orl
movsl
add
mov
testb
xor
pop
xchg
cwtl
add
add
cmpsl
cld
les
int
xor
jne
xchg
rorb
xchg
test
dec
dec
cli
xchg
xorl
loope
enter
sti
aaa
dec
mov
push
inc
pop
pop
loopne
xor
leave
sbb
mov
outsl
lock
sbb
cmp
xlat
pop
aad
sub
decb
test
movsl
cmpsb
int
fcoms
mov
out
pop
xchg
outsb
add
dec
or
sub
pop
jl
int3
stc
xchg
adc
xor
jns
adc
ja
adc
and
gs
ror
test
sbb
inc
xchg
jle
mov
insb
shrb
mov
push
call
lahf
je
xchg
mov
xchg
inc
mov
stos
neg
inc
in
jmp
bound
add
sub
push
rcr
sbb
xchg
jne
jae
lret
jmp
lret
mov
daa
rcr
idivl
push
push
xor
testb
xchg
rcrl
mov
lods
orl
jns
lcall
xchg
jp
outsl
out
int
out
cltd
rcrl
out
shlb
imul
data16
imul
icebp
fdivrs
add
add
ret
pop
cmp
mov
inc
dec
sbb
xchg
and
push
roll
outsb
adc
mov
loop
dec
mov
push
negb
test
adc
je
lods
das
dec
pop
jl
stos
test
ja
dec
adc
in
bnd
stos
or
in
ja
push
hlt
daa
jg
ds
in
mov
sub
mov
adc
sbb
sub
inc
mov
lret
pop
push
dec
cmp
cs
or
xlat
cwtl
lds
outsb
mov
add
outsl
inc
subb
mov
mov
jge
or
mov
xor
cltd
pop
test
aam
enter
mov
std
out
jge
repz
lds
mov
daa
inc
sbb
test
cltd
inc
sbb
jns
movsb
jo
add
jno
sub
addr16
cmp
sub
sahf
mov
push
outsb
mov
add
movsb
sbb
xchg
cld
fldt
mull
or
dec
push
loop
pop
mov
xchg
xchg
sub
sub
lret
fbld
or
mov
mov
pop
arpl
gs
ds
lcall
jp
fistpl
outsb
repz
movsl
fstps
out
and
inc
xchg
mov
loope
xchg
mov
out
push
adc
mov
repnz
pushf
movups
pop
outsb
adc
fidivrs
sub
pop
adc
adcb
xor
mov
xchg
push
push
sahf
dec
sbb
push
xorb
aaa
push
push
ds
and
mov
pop
insl
inc
push
adcw
loope
jno
cltd
cmp
xchg
sub
negb
xchg
out
xlat
xchg
movb
lds
lret
insb
arpl
jbe
and
jle
fsubr
sub
xchg
daa
ljmp
movsb
cmpsl
pushf
pop
flds
and
dec
int
ldmxcsr
bsr
loope
dec
pop
ret
inc
outsl
xlat
scas
insl
push
shrb
dec
jnp
fst
sub
stc
lcall
dec
ja
and
std
scas
mov
push
clc
adc
xchg
cltd
jb,pn
sahf
or
mov
inc
lahf
xor
mov
icebp
add
or
int
aaa
dec
out
clc
shlb
jle
push
shlb
outsb
sbb
mov
mov
insb
lods
out
enter
inc
inc
fwait
test
loope
add
in
add
lret
pop
iretw
mov
push
pop
or
pusha
push
and
nop
mov
sbb
aaa
jmp
dec
jge
push
mov
movsb
xchg
pop
repz
movsb
push
add
movaps
lret
jns
sub
je
into
mov
cmp
addr16
dec
and
cmp
mov
push
and
cld
lret
ret
add
arpl
gs
xchg
add
push
repnz
add
bound
ss
xchg
xor
sti
les
test
dec
cmc
xlat
and
xlat
pop
outsb
out
data16
loop
xchg
pop
cs
out
movsl
xor
and
sub
sahf
stos
addr16
sbb
mov
adc
imul
loope
sbb
lods
clc
ja
mov
adc
xchg
inc
jl
mov
jmp
adc
dec
mov
outsb
dec
lcall
rcrl
dec
icebp
xchg
jmp
inc
fisubrl
shlb
test
mov
loope
ret
fstps
mov
dec
pop
loopne
xchg
nop
sbb
adc
shl
js
inc
ljmp
sub
roll
jno
es
mov
cmp
fcom
out
adc
into
push
sbb
mov
add
out
sti
decb
popa
sahf
inc
cmp
inc
xor
scas
dec
adc
and
addb
push
push
mov
sbb
icebp
jo
and
daa
xor
mov
mov
ja
or
jnp
js
and
aas
in
mov
jecxz
cld
push
cmp
adc
mov
scas
mov
jmp
pop
faddl
adc
es
and
loop
mov
jae
mov
int
insl
int
and
jae
jge
or
adc
add
cmc
loop
xor
pusha
cmpsb
mov
push
mov
inc
cmp
addb
xor
aas
jns
jg
pushf
lret
arpl
add
dec
inc
xchg
cmp
pop
shlb
jecxz
push
xchg
imulb
add
lods
fs
mov
add
ljmp
cwtl
aam
test
dec
inc
adc
pop
repz
mov
jge
shlb
or
in
add
push
xor
dec
sbb
cmp
test
mov
jns
sbb
sbb
or
out
mov
xchg
sarl
jbe
and
mov
dec
out
aas
dec
xchg
out
or
xlat
clc
call
xor
aam
lods
loope
roll
and
lods
imul
sub
sahf
out
aas
inc
jbe
out
je
add
fidivl
cld
mov
cmpsl
nop
sahf
je
andl
and
hlt
aaa
int
cs
jge
push
sbb
mov
push
test
mov
decb
outsb
xorb
mov
shrl
mov
aad
mov
push
aad
out
jne
xlat
and
dec
push
pop
mov
mov
push
das
aas
and
repnz
xchg
xchg
sbb
mov
hlt
xchg
pop
cmp
fwait
pushf
cmpl
scas
dec
add
jnp
sahf
ja
jnp
mov
cmp
ja
shrb
sbb
out
jge
mov
ficoml
aaa
dec
add
xor
in
movsb
xor
repz
adc
jl
stos
dec
ret
clc
js
xor
repnz
scas
push
jns
pop
adc
or
adc
sub
xchg
xor
xchg
sub
jb
mov
cmp
cmp
lds
lret
daa
lret
mov
sub
out
aam
js
cmpsl
pop
lcall
lcall
movsb
movsl
and
mov
sbb
jmp
mov
lahf
lds
and
push
pop
addl
ds
addr16
inc
aam
cmpsb
xchg
icebp
push
push
inc
out
scas
inc
mov
mov
mov
sahf
mov
cmp
outsb
push
imul
nop
push
sbb
jecxz
pop
inc
lret
mov
rclb
sub
std
std
cltd
mov
adc
dec
mov
mov
push
mov
movsb
mov
lcall
mov
or
inc
insb
inc
add
in
pushf
or
ja
fdivrs
mov
jle
lret
ret
das
aad
pop
jae
adc
inc
add
lret
and
iret
je
jl
scas
add
aas
out
mov
pop
adc
xor
test
pop
int
es
fmuls
cmp
mov
fs
or
ret
mov
pop
xor
mov
adc
insb
loopne
addr16
loop
mov
sbb
pop
dec
fisttpll
jle
test
dec
xchg
ss
push
movsl
pcmpeqb
das
mov
jge
pop
mov
insb
pop
jl
mov
push
jno
mov
and
aam
aad
dec
shlb
in
iret
arpl
movsb
ret
jle
test
sahf
fmuls
mov
add
xor
xchg
xchg
xor
repnz
into
pop
in
aam
sbb
jp
loope
lds
jo
or
leave
add
mov
dec
jle
lods
sbb
pusha
inc
fistpl
jo
xor
out
adc
sahf
xchg
jne
pusha
jmp
or
into
cmpsl
or
out
mov
aam
test
ficomps
push
rcrb
mov
into
mov
pop
xor
jl
addr16
lods
inc
sub
movsl
es
and
xor
sbb
lahf
cmp
cmpsl
mov
add
adc
insb
jg
lea
cmp
or
imulb
xor
mov
and
jge
jbe
jmp
in
rorl
cltd
dec
or
xchg
outsb
enter
add
and
aad
lock
cmp
mov
or
and
sub
adc
lret
push
cltd
push
inc
xchg
push
int3
imul
pop
mov
mov
adc
scas
inc
jae
cmp
int3
mov
adc
push
fidivrl
fdiv
adc
or
incb
mov
xchg
and
sahf
jl
mov
cld
int
fadd
sbb
ud0
jae
xchg
fidivs
xchg
lods
add
inc
repz
sbb
movsl
mov
imul
add
xor
sbb
jge
repz
adc
mov
cmpsb
mov
fstpt
sti
daa
enter
adc
mov
xchg
mov
mov
cltd
repnz
push
push
mov
add
shll
push
daa
jl
aas
mov
cmp
cwtl
das
push
sub
sbb
leave
es
addr16
daa
add
push
je
ss
out
and
lret
cwtl
cmp
ss
xchg
push
popf
sti
cli
push
fidivrs
dec
sbb
std
in
insb
test
fnstsw
jnp
pop
pusha
add
repnz
cld
cli
stos
xchg
orb
mov
mov
jae
clc
dec
lret
dec
mov
rorl
cli
dec
jmp
jge
cmpsb
pop
or
cmpsl
adc
or
ret
cmpsl
xchg
ret
dec
jle
xchg
xchg
scas
mov
dec
mov
test
mov
shlb
xchg
aam
dec
divl
xor
inc
ljmp
sbb
mov
mov
jne
jno
xchg
jo
mov
mov
mov
push
ret
mov
add
fcmovb
std
enter
out
je
nop
out
iret
in
bound
mul
jo
xor
scas
insb
fbld
or
jns
pop
das
and
jae
dec
add
adc
call
int
pop
fsubrl
aas
sbbl
push
mov
cmp
add
xlat
and
ljmp
fists
add
adc
mov
or
and
mov
push
mov
xlat
push
cld
jg
ljmp
les
or
enter
mov
sub
or
mov
pop
jecxz
push
shrb
add
test
fimuls
pop
sbb
sbb
pop
jbe
adc
cmp
push
shrl
add
jg
sahf
sti
mov
testb
out
add
lcall
fdivrs
push
xchg
rclb
mov
xor
insb
jl
stos
adc
push
or
outsb
push
cmp
jnp
and
push
mov
xchg
in
jne
int
daa
enter
std
cmp
jecxz
fxch
lea
add
insl
pop
cltd
sub
mov
out
mov
ljmp
push
loop
iret
lods
sbb
adc
into
gs
pop
movsb
mov
or
mov
out
popf
popa
repnz
cmp
push
data16
arpl
pop
dec
and
jno
test
movsb
pop
andb
movsl
addl
push
scas
jl
lahf
int
in
aam
insl
jp
mov
movb
shrb
dec
adc
in
sub
pop
mov
sbb
cwtl
pop
pusha
fistpll
or
bound
jl
mov
cmpsb
sbbb
add
das
or
rcll
stos
inc
in
test
mov
add
fwait
ret
jne
push
pop
or
jo
add
or
dec
lock
jns
out
ljmp
push
enter
lcall
pop
jecxz
adc
arpl
loop
sub
int3
add
push
fcmove
xchg
leave
cs
in
aaa
dec
ja
push
cwtl
cmpsb
in
jbe
pop
dec
sahf
or
int3
lcall
jae
push
data16
mov
mov
fstps
push
dec
insl
in
jne
ret
or
int3
xor
adc
imul
fiadds
cwtl
sete
cmpsb
inc
inc
adc
xorb
and
ss
mov
mov
jecxz
mov
lahf
mov
pop
mov
add
sub
jbe
sbb
dec
push
aaa
adc
shlb
in
pop
push
sbb
imul
lods
xchg
lahf
add
sub
push
jl
inc
das
lock
or
cld
dec
scas
pop
fstps
mov
das
test
pusha
subb
sbb
int
lahf
divb
jae
loope
adc
push
popa
pusha
dec
dec
cmc
cmpsl
adc
mov
fisubrl
add
rcrb
out
and
aas
pushf
shrb
inc
xchg
pop
pop
pop
xor
adc
push
mov
rclb
adc
adc
sbb
sub
ret
sub
movl
xor
stc
repz
mov
adc
jne
lds
jns
xchg
into
andl
stos
push
dec
test
or
add
mov
mov
push
dec
call
or
pop
repnz
dec
push
jl
pop
iret
push
mov
out
push
and
inc
in
repnz
mov
add
movsl
xor
adc
pop
xor
aam
imul
leave
dec
cmp
adc
adc
mov
stos
mov
dec
and
or
adc
shrb
add
gs
add
dec
sbbb
lcall
mov
dec
jae
je
jno
mov
movl
push
lods
cli
sbb
jp
lcall
test
das
mov
and
mov
mov
lcall
xchg
pop
sbb
or
fists
enter
stc
cmpsb
mov
cmc
push
xor
data16
jecxz
sbb
push
pop
sub
xor
push
mov
lret
loop
imul
dec
jno
fs
ret
xor
xor
mov
pop
ds
out
fsts
rclb
jae
gs
mov
push
cmova
mov
xor
push
adc
ljmp
dec
outsb
lea
jo
fdivr
popf
popf
xchg
pop
movsl
rcr
jnp
icebp
ret
daa
adc
xchg
dec
sub
rorl
js
mov
sbb
insl
das
das
xor
jns
adc
inc
jne
xchg
mov
jge
lcall
cli
bound
les
pop
loope
mov
fwait
jp
cmpsb
movsb
shrl
or
pop
mov
ftst
leave
fwait
ljmp
push
jg
int
ficoml
inc
mov
cmpsb
lret
clc
mov
call
push
push
js
mov
jb
add
mov
adc
divb
cld
push
sqrtps
push
mov
sbb
lods
aad
cmp
adc
add
mov
f2xm1
cmp
mov
push
mov
ds
adc
cmp
add
fwait
popf
pop
xorl
push
dec
jle
outsb
cs
push
dec
push
mov
fimuls
scas
ficomps
outsb
push
pop
push
dec
jle
outsb
cs
push
dec
push
mov
fimuls
scas
ficomps
outsb
push
pop
push
dec
jle
outsb
cs
push
dec
push
mov
fimuls
scas
ficomps
sbb
pop
push
dec
jle
outsb
ficomps
into
into
inc
push
inc
xor
mov
and
jno
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jecxz
lock
mov
sub
nop
testb
frstor
test
push
add
lock
dec
rcrb
sub
nop
xor
jo
and
push
frstor
xor
pop
lret
add
mov
pop
nop
das
add
push
fisubrs
lods
xor
fistl
stc
mov
mov
cmp
mov
add
fnsave
gs
mov
jb
or
or
inc
cmp
mov
xor
xchg
adc
lds
lods
fistpll
out
rcrb
add
lods
imul
mov
in
push
int3
push
and
pop
jne
enter
cmp
cwtl
jge
dec
cmp
pop
cmp
nop
popa
push
scas
mov
adc
pop
mov
dec
mov
or
sbb
inc
into
rep
inc
sub
xor
pop
xchg
insl
add
lea
pop
into
jg
movsl
sbb
mov
movsb
mov
lds
add
idivl
cmp
pop
inc
sub
ss
cmpsb
in
ljmp
xchg
cmp
xchg
adc
mov
test
iret
mov
push
hlt
js
pop
pusha
scas
and
push
ljmp
lods
sub
xor
jg
outsl
jne
lds
pop
mov
mov
sub
pop
loop
mov
mov
pushf
popf
mov
popa
mov
orb
std
inc
int
frstor
lods
xor
loopne
lock
dec
rcrb
sub
nop
sbb
inc
int
frstor
lods
xor
loopne
push
sub
xor
mov
dec
pop
xor
movsb
xor
or
jnp
mov
aad
lods
pop
leave
int
xchg
add
pop
lea
mov
xchg
fdivrs
dec
jp
addb
ja
out
inc
push
bound
jnp
addr16
mov
cmpsb
pop
testb
out
bound
mov
cltd
xorb
cmp
pop
movsl
adc
enter
add
add
pop
rol
sub
push
push
add
fldt
mov
lods
imulb
test
xor
clc
icebp
push
cmpsl
int3
xchg
or
jnp
inc
inc
movsl
cmp
lret
imul
push
mull
sub
xchg
cwtl
jno
in
sbb
imul
movsl
fs
adc
dec
sbb
mov
shlb
fisubrs
jmp
or
xchg
insb
or
push
imul
sbbb
dec
push
mov
adc
fldl2e
mov
adc
pushf
dec
sub
je
shrb
sbb
fcos
loopne
sub
push
push
incl
cmp
adc
mov
ret
jg
cltd
add
lss
popf
push
sbb
push
mov
mov
insl
mov
xchg
cmp
pop
inc
xchg
fs
fildll
jmp
in
sub
jnp
mov
lds
test
lods
ljmp
repnz
mov
xor
pop
or
mov
jns
mov
leave
push
sub
mov
sub
in
loope
or
mov
push
sub
mov
out
cltd
test
sub
nop
sbb
fs
jae
in
pusha
jle
xor
iret
sub
je
iret
dec
pop
jo
add
pop
mov
jg
jl
push
pushfw
xor
and
inc
cwtl
in
mov
xorb
and
mov
xor
bound
and
sbb
roll
popf
iret
xchg
cmp
sub
jbe
sbb
arpl
fcompl
sbb
fwait
loopne
out
leave
push
arpl
push
push
add
sbb
outsb
in
pop
add
add
pop
mov
ficoml
bsf
cmpsb
push
lahf
pop
pop
and
cmp
xchg
sub
push
mov
xchg
mov
dec
ds
repnz
jbe
mov
jns
dec
jbe
std
dec
xor
jl
movsb
rorl
clc
dec
dec
sahf
rcl
mov
sbb
push
mov
shrb
xchg
out
std
inc
ja
mov
xchg
push
xor
add
mov
adc
insb
xchg
add
mov
je
sub
mov
sbb
xchg
push
mov
mov
clc
mov
icebp
add
ss
mov
and
add
push
xchg
repnz
fsts
jns
test
dec
xor
nop
mov
cwtl
pop
icebp
mov
ret
and
jl
push
dec
pop
pop
push
adcl
lea
pop
rorl
inc
xchg
adc
xchg
loope
sbb
testb
dec
scas
adc
push
cmpsb
mov
out
mov
into
xchg
xor
lock
or
xchg
push
lcall
dec
jns
cmpsb
int
aas
sbb
call
mov
cmp
ja
into
stc
lcall
pop
mov
imul
inc
mov
jmp
pop
and
cld
push
mov
stos
test
jmp
xchg
mov
into
mov
push
ljmp
and
scas
clc
cmp
mov
cmp
mov
mov
popl
push
vfrczpd
xor
ds
sub
pop
jp
frstor
pop
pop
jp
decb
sbb
imul
ja
sub
push
xor
enter
rcll
andb
mov
lea
js
mov
sbb
call
fisttpll
pushf
call
sub
cmp
test
pusha
in
insl
fwait
jmp
mov
frstor
push
movsl
and
xor
lock
mov
xlat
push
xchg
xchg
jb
and
out
adc
mov
clc
idiv
dec
pop
pop
mov
popl
push
dec
mov
mov
push
xor
jae
push
pushf
pop
scas
fdivrp
and
aaa
out
jbe
aaa
mov
lods
mov
lods
scas
mov
and
push
add
sbb
scas
dec
or
mov
mov
ljmp
mov
dec
sub
dec
popa
ret
mov
pop
cmp
mov
jnp
jae
cmovo
mov
inc
and
aas
insl
fwait
bound
aad
insl
cld
std
in
test
mov
cmp
mov
lmsw
sub
xor
sbb
das
pop
hlt
incb
dec
add
scas
je
sbb
insb
push
dec
push
shll
cwtl
inc
xchg
adc
jno
in
mov
or
inc
xor
dec
adcb
scas
js
das
xor
sbb
or
mov
pop
insl
jnp
xchg
das
aaa
imul
clc
repz
cld
jmp
aad
out
fldenv
mov
dec
addr16
mov
dec
ljmp
lret
fbstp
or
test
mov
sub
jl
mov
insb
xor
mov
xchg
dec
jmp
lret
xchg
sub
fistps
out
dec
mov
pushf
pop
and
sub
ret
es
ficompl
xor
jns
fcmovu
xlat
jnp
mov
scas
bound
aaa
adc
cs
add
push
inc
push
push
rcrl
in
xchg
pusha
mov
out
cmp
sbb
into
cwtl
ror
cs
fstpl
ds
inc
inc
stos
shlb
stos
nop
out
aad
hlt
jb
push
xor
mov
xchg
adc
rclb
hlt
lds
imul
pop
mov
jmp
mov
movsb
ja
adcl
lcall
fsubs
into
pop
dec
leave
lret
lods
fildll
mov
lock
jae
or
jae
jmp
jo
pop
jl
jl
and
dec
pmaddwd
jae
not
loope
popa
repnz
lret
mov
and
or
pop
aam
sbb
xchg
popa
fsubrl
lds
sbb
ja
jo
lock
ficoml
clc
mov
or
lret
pop
mov
fidivs
js
sbb
mov
xor
incb
sub
stos
ss
andl
mov
dec
adc
or
sub
aad
loope
push
ret
xor
or
in
mov
jnp
fndisi(8087
imul
stos
adc
push
sub
inc
dec
stos
lods
sub
mov
cwtl
pop
mov
flds
sbbb
sbb
inc
imull
jl
cmp
mov
das
or
add
pop
jns
fildll
imul
dec
jle,pt
ss
mov
sbb
mov
adc
outsl
push
xchg
call
xchg
lods
and
dec
mov
xchg
pusha
mov
sbb
sub
mov
mov
mov
sub
pop
jnp
lods
or
mov
adcb
scas
or
or
subb
or
pop
ror
adc
inc
xchg
sahf
les
out
adc
cmpsl
in
xor
int3
lret
out
mov
pop
lcall
pop
test
mov
dec
cmp
inc
test
mov
adc
sbb
xchg
fs
mov
jl
and
sub
scas
push
mov
xchg
mov
ret
lcall
cwtl
imul
stos
insl
sti
sahf
push
sahf
inc
pop
mov
pop
mov
lahf
sub
insl
std
addl
xchg
pop
fiaddl
dec
jp
mul
adc
sbb
frstor
bound
mov
psubusw
fisubs
mov
sub
add
out
cmpsb
hlt
xchg
aas
sbb
outsl
nop
int
lds
or
test
imul
enter
jne
sbb
push
xchg
repnz
jge
loop
add
in
inc
imul
popa
roll
lahf
adcl
out
jo
out
loope
sub
push
or
lret
jl
mov
scas
notl
sub
femms
xor
lods
daa
mov
lods
imulb
inc
or
and
gs
test
ret
dec
lock
sub
pop
ror
outsb
jae
int
push
sbb
dec
ror
jle
mov
dec
out
xchg
jno
test
dec
inc
aad
mov
xchg
cli
push
xor
cld
cmp
mov
dec
punpckhbw
mov
outsl
sub
pop
adc
dec
lret
loope
jo
je
adc
dec
cmp
stos
jmp
fmull
rorb
jae
rolb
add
and
mov
arpl
mov
ret
inc
int3
cmp
in
std
mov
cmp
rol
add
xchg
push
inc
lock
or
sub
add
fisttpll
arpl
mov
push
xchg
mov
mov
sub
xchg
mov
sub
adc
push
mov
xchg
movsb
jbe
adc
xor
adc
mov
adc
lret
mov
push
in
xor
mov
rolb
xchg
mov
cli
ret
les
lock
in
dec
sub
insb
mov
outsb
sub
xchg
pop
in
pop
inc
cmp
pop
shll
cmc
mov
decl
jns
subl
xchg
js
arpl
mov
push
inc
insl
ljmp
add
andl
dec
inc
mov
sbb
rorb
loopne
lods
adc
lea
xchg
pushw
lds
lea
pop
out
loope
cmp
ret
ror
je
jbe
sbb
test
mov
jmp
iret
aam
cmp
xchg
int3
or
mov
ror
cmp
sarb
rcrl
js
jbe
add
dec
cli
cli
popf
jg
add
popf
sub
lds
mov
dec
sbb
push
mov
cmp
aas
divl
ss
mov
lds
aaa
mov
inc
outsl
out
xchg
jl
gs
sub
mov
xchg
sti
mov
cmpsl
or
insl
pop
mov
aam
sub
sbb
in
in
mov
stos
lods
push
dec
add
cwtl
push
or
pop
addr16
cmp
push
lods
inc
add
sub
pop
or
imulb
mov
pop
stos
mov
pop
in
cwtl
pop
push
ficomps
pop
xchg
mov
sbb
xchg
jb
pop
mov
xchg
rorb
aam
mov
or
cld
lods
mov
jns
pop
lock
rcrb
xchg
inc
lods
lret
andb
adc
pop
out
cmpl
hlt
xchg
or
int
xlat
ret
idivl
pop
sbb
pop
jg
add
sub
stos
int3
sbb
ss
leave
outsl
adc
aad
shll
jge
push
out
prefetch
bound
mov
addb
dec
push
adc
adc
or
imul
inc
notl
ds
jecxz
xor
mov
mov
inc
aad
adc
enter
loope
imul
in
dec
daa
in
cli
mov
push
jmp
xor
lods
popf
leave
rcll
mov
outsl
pop
adc
dec
incb
mov
fnstcw
xlat
mov
loope
jo
ljmp
inc
or
xchg
pushf
aaa
dec
mov
pushf
jae
and
sbb
leave
ret
outsl
or
jb
xchg
gs
push
pusha
inc
cwtl
outsb
xchg
loopne
adc
mov
lret
sub
into
xor
mov
adc
xchg
cmc
add
jns
test
fildl
and
test
inc
arpl
sbb
or
xor
xor
aaa
out
inc
hlt
mov
add
popf
mov
push
test
lgs
xor
fs
das
pusha
out
mov
mov
inc
pop
or
xlat
out
xchg
sbb
js
or
mov
cmp
inc
and
inc
xor
movsl
push
out
xor
in
lods
pop
xor
jo
repz
xlat
mov
lcall
fisubrs
mov
loope
pushl
je
xchg
movsb
pop
int
data16
dec
rcrb
adc
mov
lods
push
xor
xor
lret
jne
lods
sbb
aaa
out
sub
aam
push
pop
mov
mov
push
mov
adc
cmpsb
dec
mov
push
insl
pop
xor
xor
enter
xchg
pop
mov
add
test
push
adc
inc
mov
sbb
mov
test
movsl
aad
lods
icebp
or
je
shrl
popf
xchg
loopne
sbb
cwtl
mov
xor
pop
into
ret
lds
push
out
out
jno
pop
adc
push
xchg
pop
inc
repz
call
pop
insb
lahf
or
iret
sbb
and
pop
dec
icebp
shlb
and
mov
fwait
dec
add
mov
add
sub
cltd
loopne
jecxz
jmp
imul
je
ret
aas
fists
sbb
cmp
add
push
enter
push
xorl
aas
test
imul
push
xchg
int
scas
leave
ret
rep
pop
ss
shl
test
mov
fst
fucomip
inc
lea
enter
fbstp
mov
fisttps
xor
mov
aad
cmp
fs
insb
sbb
popf
mov
push
arpl
dec
popf
push
dec
and
in
mov
stos
call
shll
push
pop
dec
xor
mov
pop
test
dec
mov
pop
pop
or
ljmp
call
in
sbb
inc
sahf
aaa
int3
cmp
xchg
mov
inc
dec
sub
cmp
and
or
sarl
mov
push
adc
inc
mov
mov
pop
mov
clc
ficompl
xor
xor
pop
div
cmp
stos
inc
inc
outsb
sbb
incl
sub
jp
push
test
popf
enter
push
add
daa
add
fnstsw
jmp
imul
xchg
jg
xchg
aam
orl
pop
xchg
inc
dec
inc
iret
ret
imul
xor
jne
addb
mov
mov
mov
mov
jne
imul
enter
out
mov
fisttps
fucom
movsl
call
mov
shrl
ror
jge
cs
test
out
lcall
push
movsb
leave
inc
jg
mov
adc
mov
mov
sahf
inc
mov
int3
mov
xchg
push
fldln2
mov
lods
fidivl
sub
adc
arpl
push
push
lret
and
mov
mov
in
pop
dec
ret
fidivrl
sbb
or
in
jns
fimull
ljmp
mov
cmc
jae
mov
pop
dec
in
mov
mov
test
gs
fidivl
mov
jbe
popa
pushl
xchg
mov
push
lock
mov
call
stos
int3
aad
cwtl
iret
cmc
rcrb
jae
das
cmp
add
call
fiaddl
sub
pop
sub
xor
or
and
xchg
xor
repz
xor
xchg
shrl
inc
cli
adc
cli
lret
xchg
lahf
jle
jb
jmp
gs
sub
xchg
pop
xor
test
inc
repnz
mov
movsb
cli
int3
fsubrs
scas
iret
xor
cmpb
dec
fcomps
lock
xchg
mov
test
pop
and
xchg
cmp
push
incb
and
mov
leave
adc
nop
push
inc
into
jle
mov
pop
leave
mov
pop
or
jle
fstps
jg
into
fst
cmp
das
inc
addr16
xchg
and
fisubl
cmp
enter
loopne
in
inc
dec
fdiv
inc
jle
andb
movsb
xchg
pop
je
jl
cmp
ja
and
xor
xchg
dec
push
or
jp
xor
and
mov
ss
in
shrb
je
ljmp
test
pop
xchg
daa
insl
adc
cld
ja
pop
xor
inc
add
cld
mov
sbb
mov
push
leave
imul
jnp
xor
inc
xor
mov
cvtps2pd
xor
and
aad
test
push
test
mov
cwtl
rcrl
ss
xchg
lret
mov
test
rcll
pop
mov
jb
mov
cli
adc
inc
cmp
push
dec
and
mov
jmp
xchg
xor
push
dec
push
mov
xchg
mov
cli
mov
adc
jnp
xchg
cmp
sub
mov
clc
jp
pop
dec
popf
sbb
inc
cltd
out
mov
sahf
dec
aad
inc
lods
xchg
xor
cmc
pop
popa
jno
test
lcall
adc
mov
jno
sub
iret
aas
push
adc
ds
xchg
jae
daa
incb
sti
ret
push
mov
je
test
pop
ds
popf
lods
fstpt
dec
adc
xchg
lret
movsb
mov
test
js
shll
mov
xchg
clc
add
xor
stc
sub
test
xchg
push
pop
mov
insb
jo
loope
ss
xchg
inc
js
cmpsl
add
insb
pop
lock
orb
xchg
icebp
int3
and
mov
cli
inc
jl
add
xchg
call
rclb
mov
fdivr
and
pusha
sbb
enter
clc
xchg
ds
xchg
roll
mov
sbb
mov
and
push
sub
dec
ss
mov
lcall
adc
add
inc
cmp
stos
inc
sbb
jmp
push
test
push
test
dec
fstpl
mov
adc
popa
aas
rcrl
cs
inc
mov
mov
sbb
inc
sub
mov
jl
sub
daa
jge
push
dec
out
and
repnz
out
out
or
adc
into
adc
sbb
mov
nop
btr
ds
cmp
pop
cmp
or
scas
jg
loop
sub
pop
mov
sbb
pop
mov
jmp
cld
stos
jecxz
xchg
dec
jge
cmc
lahf
std
ja
sub
adc
popf
mov
cld
and
inc
out
sahf
and
test
fistpl
es
jge
outsl
cld
sbb
mov
mov
stos
into
sarl
insl
aam
cmp
mov
inc
xchg
les
fcmovu
popa
xchg
dec
ljmp
pop
pop
fwait
xchg
mov
mov
mov
sbb
xor
adc
cmpsl
pop
imul
loopne
imul
jge
lret
int
add
test
test
movsl
fsts
pop
out
jo
aam
and
sub
stos
jbe
mov
xchg
shl
movsb
in
push
xchg
sub
add
xor
punpckhwd
inc
test
ss
jns
inc
dec
mov
hlt
xchg
or
fwait
or
out
or
hlt
inc
push
pop
xor
and
sarb
rcrb
xor
aas
add
jg
mov
int3
insb
add
orb
jnp
dec
and
out
cmpsb
out
ret
jo
mov
mov
mov
shl
or
testb
cmpsl
lret
xchg
cmp
jne
sub
push
mov
mulb
jmp
mov
outsb
inc
mov
adc
loope
cmc
mov
bound
jno
in
pusha
out
test
out
sub
sub
mov
push
bound
mov
int
xchg
adc
rcr
movl
aam
aam
xchg
lea
enter
mov
insb
pop
scas
pop
mov
daa
and
sbb
fwait
add
addr16
or
imul
enter
dec
mov
in
movsl
push
outsb
mov
andb
add
xchg
dec
int3
adc
sub
out
outsl
jbe
xor
add
jbe,pt
rcl
adc
mov
popa
cli
push
out
test
clc
and
xchg
cmp
jo
call
movsb
cmp
cs
fwait
rcr
push
fdivrl
arpl
lock
cmp
or
in
int3
jp
or
mov
xor
sti
inc
pop
xor
push
jno
fisubs
aam
int3
popf
bound
mov
arpl
mov
into
jnp
fsts
sbb
cmpsl
cmp
and
int3
jns
xchg
das
xor
orb
test
jno
stos
sub
inc
mov
loopne
push
lock
inc
rcrb
xor
cmp
lahf
hlt
loopne
pop
rolb
push
pop
js
pop
dec
push
movsb
cwtl
test
sahf
inc
cmp
push
call
mov
mov
lea
add
mov
xor
lds
loope
outsb
or
or
leave
loope
negl
cmc
inc
jge
dec
rcrb
sub
nop
sbb
inc
int
frstor
lods
xor
loopne
lock
dec
rcrb
sub
nop
sbb
inc
int
frstor
lods
xor
loopne
shlb
rcrb
sub
push
sbb
mov
push
aam
test
clc
jns
mov
mov
lea
frstor
push
ljmp
out
in
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lods
or
sbb
sub
cmp
add
aas
cmc
dec
cld
jl
ret
inc
lods
push
mov
add
adc
jmp
sub
cmp
dec
mov
subl
outsl
lods
push
mov
add
adc
cmp
sbb
sub
cmp
dec
stc
pop
lods
insb
imul
xor
add
bound
test
sub
test
xchg
notl
jb
dec
gs
cli
mov
and
cmpsb
xchg
stc
jo
mov
stos
fs
arpl
int3
mov
lods
mov
loope
roll
sub
cmc
lahf
test
adc
fnstcw
movsb
dec
mov
mov
out
dec
pop
addb
xorb
push
sub
and
out
std
fs
dec
jl,pt
mov
les
aad
push
fstps
and
mov
lahf
xor
push
in
add
xchg
ds
jl
dec
dec
xchg
add
push
iret
inc
push
push
test
inc
in
add
rorb
sbb
sub
cmp
dec
cmc
pop
subl
cltd
lods
dec
mov
add
jne
xchg
or
cmp
sub
xor
add
xor
dec
pop
mov
loope
jns
xchg
cmp
and
adc
add
xor
and
cmp
fnsave
xchg
xchg
dec
ret
pop
nop
pop
in
mov
subl
inc
lods
push
mov
add
adc
loope
icebp
sbb
sub
cmp
dec
mov
subl
inc
lods
push
mov
add
adc
loope
xor
in
cmp
mov
jecxz
and
pop
data16
mov
mov
mov
adc
in
xchg
test
test
hlt
fdiv
ret
push
mov
sarl
lods
pop
aas
cli
das
pop
xor
aad
call
es
add
pop
dec
imul
imul
repz
stos
imul
push
sbb
sbb
jno
lds
std
or
push
mov
mov
stos
or
call
test
fildll
cmp
in
mov
pop
or
inc
adc
push
lods
sbb
icebp
mov
outsl
stc
adc
dec
and
das
mov
mov
dec
jmp
jl
mov
loope
daa
inc
mov
jg
rolb
repnz
movsb
out
cmp
pusha
aas
xor
ss
ficoml
iret
repnz
jmp
roll
push
or
add
mov
repz
addr16
inc
test
jmp
sar
dec
fldenv
jecxz
popf
xchg
insb
add
arpl
mov
nop
xchg
xchg
aaa
mov
pop
sbb
adc
imull
cmc
mov
xlat
pop
pop
dec
jl
cmp
cld
sti
cmp
adc
cltd
ja
dec
mov
inc
inc
mov
push
into
arpl
dec
mov
pushf
andl
shll
rolb
xchg
out
mov
mov
js
jno
pop
adc
shlb
bswap
mov
pop
push
orl
movsb
inc
xchg
adc
cmp
dec
repnz
push
cmpsb
shl
outsb
imul
jne,pt
ret
jp
repnz
je
cltd
and
out
inc
pop
repz
repnz
dec
stc
imul
loope
xorb
mov
das
sti
loop
mov
dec
xchg
xchg
pop
stos
push
int
add
mov
mov
test
into
sbb
or
sbb
jae
xchg
fs
gs
adc
mov
ljmp
pop
adc
mov
repz
inc
sub
or
mov
push
es
mov
xchg
loopne
sub
outsl
push
out
in
cmpl
mov
xchg
cmp
rolb
and
int
cmpsb
pop
sub
faddp
mov
bound
std
outsl
fisubrl
outsl
imul
dec
mov
ds
je
rcrb
jbe
and
pop
out
pusha
inc
sub
lods
pop
mov
mov
vmwrite
mov
cmpsb
popa
dec
mov
push
outsl
cs
js
fldl
or
lea
fcmovne
add
fwait
mov
cmp
mov
pop
ror
jg
mov
inc
loop
lahf
xchg
lgs
ss
imul
jl
push
clc
iret
testw
xchg
jmp
faddp
jmp
xchg
xchg
mov
call
into
cli
call
out
pop
test
add
adc
pop
scas
insl
push
xchg
mov
push
jno
pop
aad
mov
rol
je
jle
lea
lret
xor
jne
imul
loop
popa
ss
popa
mov
scas
pop
ret
jmp
jmp
adc
pop
inc
jecxz
aas
add
mov
jg
test
call
es
and
xor
xor
gs
lret
or
xchg
push
xor
adc
ds
mov
xchg
mov
and
cmp
jb
lds
addr16
fwait
xor
in
mov
jns
out
mov
xor
mov
xor
xchg
int
push
inc
jno
insb
or
jl
imul
int
sbbb
or
dec
imul
jmp
and
push
mov
mov
stos
adc
shll
jae
xchg
jmp
cmp
or
stos
jnp
inc
mov
cmp
imul
xor
cmpsl
shl
repz
push
scas
pop
mov
std
jle
jge
mov
jg
jbe
sbb
mov
out
pop
movsl
sub
stos
fdivl
das
enter
popa
ret
mov
div
inc
lret
lods
pop
xchg
push
popf
enter
popw
mov
aaa
sbb
pop
cmp
jmp
adc
cmpsb
jl
xor
jp
out
sub
int
lea
jno
sahf
inc
clc
stos
addr16
mov
stos
daa
mov
push
bound
jnp
fldenv
lds
xchg
ror
xchg
icebp
mov
add
lock
mov
js
sbb
pusha
xchg
cmpsl
jge
xchg
xlat
add
sub
pop
in
mov
sbb
data16
les
cmp
jl
in
jp
jno
fstps
push
int3
imul
sub
popf
cli
mov
loop
mov
jp
enter
add
jle
roll
xor
test
movsb
fidivl
stos
roll
push
pop
xor
fsub
decl
subb
or
mov
lcall
stc
int
ljmp
jns
mov
adc
mov
cmp
leave
loop
pop
cmp
pop
sub
rol
lods
loopne
pop
push
aas
and
rcrl
adc
sub
adc
aam
lock
or
gs
push
arpl
pusha
jb
pop
icebp
or
sub
and
pop
mov
pop
shr
loopne
pop
sti
aad
insl
mov
dec
mov
cmp
mov
and
pop
xorl
add
or
inc
xor
insl
add
sbb
pop
es
les
push
les
inc
out
jmp
out
mov
stos
test
scas
in
daa
add
adc
mov
mov
push
out
jnp
outsl
push
xlat
sti
sub
test
rcrb
mov
outsl
xchg
cmc
lods
pop
rcrb
dec
lea
adc
fimuls
adc
pop
xchg
arpl
and
jg
inc
movsl
mov
cmp
imul
ret
loop
push
clc
dec
jbe
add
jp
pop
and
mov
lods
packuswb
jp
repnz
inc
shl
jmp
or
hlt
and
adc
xchg
cmp
cmp
dec
jle
aaa
mov
xchg
push
cmpb
xchg
pop
sbb
dec
push
mov
into
push
cltd
aam
push
mov
insb
fstl
subl
jmp
rcl
jmp
jge
cmp
xor
and
pop
cltd
div
mov
dec
filds
inc
inc
enter
scas
push
jns
pop
filds
dec
or
lods
mov
mov
cmc
xlat
or
sub
sbb
fistpl
imul
xchg
sub
inc
mov
gs
mov
lds
lret
mov
movsl
dec
inc
dec
or
bound
push
loop
je
in
add
cs
jo
pop
or
dec
inc
cmp
jne,pt
ja
imul
and
push
mov
xchg
js
in
dec
cli
lcall
repz
cmpsl
mov
enter
cmp
fnsave
cmp
cs
ljmp
mov
popf
jle
mov
mov
subl
into
cmp
hlt
sub
idivb
cmpb
inc
mov
testl
cmpsb
push
daa
sbb
xor
adc
xor
dec
ljmp
cltd
stos
inc
ret
xor
jcxz
es
lock
add
cmp
xchg
pop
fdivrs
inc
mov
fimuls
jmp
out
cmp
gs
stc
loop
xchg
add
in
stos
dec
mov
lods
lahf
stos
jbe
cltd
xor
fsubrl
pop
icebp
sbb
std
xor
loope
out
dec
clc
aaa
xchg
popa
push
mov
loope
cmc
cltd
mov
jo
inc
xorl
inc
mov
push
push
adc
push
or
mov
aaa
dec
in
aas
and
fcoms
enter
test
lods
jecxz
bound
pop
and
lock
dec
push
or
adc
repz
cmp
fs
jo
fidivrl
sub
popf
mov
mov
xor
mov
rolb
out
mov
cwtl
ss
cmp
aaa
andl
shl
mov
sarb
push
cltd
stc
mov
fists
sub
test
xor
jnp
bound
test
sahf
xchg
pop
scas
xchg
xchg
push
or
fbstp
push
test
jecxz
mov
mov
pusha
push
pop
pusha
ljmp
xchg
ljmp
cmp
and
ja
daa
adc
icebp
xchg
sbb
push
mov
mov
repz
outsl
or
mov
mov
lds
out
and
insb
cli
imulb
pop
xor
test
and
push
rcll
test
jge
push
mov
xor
addb
mov
pop
and
cmp
test
push
inc
flds
xchg
or
add
flds
cmp
jmp
cwtl
pop
dec
mov
adc
cmpsb
or
ret
loope
leave
into
rorl
inc
shll
iret
fs
loop
add
jnp
lahf
or
cmp
cmp
mov
movsl
cmp
mov
adc
shl
xor
adc
scas
xor
xor
decl
adc
ljmp
pushf
es
movsl
aad
sbb
daa
es
test
cmp
xor
orl
or
cmpsl
or
cli
mov
sub
sbb
pop
test
icebp
mov
dec
rclb
jb
mov
int
add
mov
nop
mov
imul
hlt
popf
mov
lret
inc
push
push
cmc
mov
jnp
push
lret
xor
test
cmc
sub
jno
mulb
sub
nop
xchg
lock
ljmp
fdivs
dec
jns
cmp
mov
out
pop
ljmp
sahf
repnz
jecxz
sbb
imul
loope
push
gs
lds
je
sbb
xor
xor
aam
cmpsb
cmc
jnp
xorb
sub
xchg
mov
or
addr16
push
icebp
testl
jnp
imul
aaa
and
or
mov
jg
lds
les
push
clc
mov
inc
popl
adc
xchg
lods
push
movsl
nop
add
loopne
mov
fisttps
jns
mov
push
jb
stos
lret
aaa
push
cmp
fildl
adc
lock
rcrl
out
out
jne
cmpb
sbb
cmp
je
cmp
clc
cltd
fsubrl
cmpsl
add
cltd
dec
push
inc
or
test
movsb
push
into
lret
or
sbb
push
ss
lahf
js
outsb
push
call
fildll
leave
mov
and
call
ja
xor
cmp
adc
and
scas
push
cmp
dec
pop
int3
rcr
dec
out
inc
jne
jle
sub
enter
adc
push
rorb
test
xchg
imul
out
pop
into
adc
mov
loop
stc
or
mov
cmpb
adc
and
xor
add
andb
mov
jae
inc
dec
push
push
cs
movsl
add
call
mov
nop
mov
add
add
push
push
mov
jle,pn
dec
movb
jg
pushf
add
in
cmp
cmpsl
aas
xchg
jle
inc
cmpsl
push
rol
out
dec
addl
xchg
pop
xor
pop
inc
cmc
cmpsl
mov
loopne
mov
cmpsb
xor
pop
sub
lods
daa
ljmp
mov
and
pop
fwait
pushf
sbb
lods
sbb
inc
loopne
inc
adc
push
jg
loop
jge
cmp
jns
pop
lret
jmp
aas
dec
lcall
push
cmp
adc
adc
les
xchg
xchg
mov
shl
push
imul
das
mov
mov
leave
testl
cwtl
pop
and
gs
inc
negb
repnz
pop
jecxz
adc
popa
outsb
cmpsl
dec
roll
lea
loop
mov
aas
pop
push
in
sbb
or
push
in
adc
pop
sbb
iret
dec
addr16
mov
sahf
jl
je
push
add
aaa
push
pop
int3
fwait
notb
mov
and
lahf
push
outsb
or
xor
scas
test
jge
jmp
add
sbb
pusha
mov
das
jbe
push
sub
mov
adc
mov
jg
mov
push
sub
icebp
into
dec
in
ljmp
mov
pop
pop
jae
push
adc
xchg
flds
inc
sub
iret
mov
cmc
std
cmpsl
add
enter
jp
adcl
xchg
dec
cmp
pop
cwtl
sahf
mov
adc
clc
add
int
mov
xchg
mov
jo
enter
cwtl
test
push
stos
aad
jae
cmp
jg
xor
mov
xchg
int
test
mov
inc
dec
jae
clc
inc
dec
or
les
repnz
and
lds
push
cmp
or
or
stc
in
fists
out
outsb
mov
mov
ljmp
fidivrl
jmp
call
fbstp
mov
mov
xchg
sbb
insb
repz
in
fcoms
pop
lds
xlat
test
add
mov
pop
or
cmp
dec
jecxz
mov
imul
fmull
orb
push
insl
jbe
into
inc
popf
jecxz
icebp
xchg
add
cmpsb
dec
out
fstps
shrb
movsl
or
jnp
xchg
mov
xchg
fists
and
pop
lahf
mov
inc
shll
pop
jns
sub
mov
lcall
out
dec
in
push
lahf
fstpt
in
adc
call
mov
loope
cmp
daa
clc
out
jl
jmp
mov
xor
inc
adc
sbb
xlat
sbb
add
dec
or
add
xchg
inc
push
cmp
clc
jae
in
cmp
pushf
cmpsl
ljmp
add
sbb
stos
and
xlat
jmp
and
jg
and
cmp
das
rorl
push
sbb
fdivl
loop
jle
mov
push
cli
dec
jle
sbbb
pop
js
pop
cmp
inc
mov
mov
inc
sti
mov
mov
inc
gs
cmp
les
dec
les
outsb
inc
sub
xchg
inc
loope
shl
divl
xchg
out
bound
adc
in
cwtl
rol
push
jecxz
fildl
sbb
and
xor
sahf
mov
xor
int
stc
xor
into
dec
mov
mov
mov
dec
daa
test
push
out
push
rolb
cltd
inc
movsl
movl
xor
adc
xchg
push
rcl
cmc
xchg
in
mov
xchg
mov
pop
ret
stos
call
ret
nop
xlat
and
mov
cmp
push
fstl
rcrb
leave
lods
jle
push
gs
jp
xchg
or
xor
cmp
xlat
add
and
push
ret
pop
in
or
inc
ja
test
jmp
and
out
lock
cmpb
lret
pop
loopne
jmp
xchg
add
inc
notb
nop
push
loop
ret
stos
loop
and
ret
aaa
mov
cmp
mov
sarb
adc
enter
leave
cld
es
dec
jle
repnz
inc
pusha
jns
cmp
cld
add
push
jmp
sub
jo
mov
jns
sbb
xchg
fidivrs
repz
mov
aaa
jmp
or
js
sahf
inc
and
jb
je
out
testb
subb
cmp
cmpsb
mov
push
loope
insb
lret
stos
xor
jle
lcall
popa
test
dec
fwait
test
mov
repz
push
inc
sbb
sbb
mov
mov
sub
shlb
stos
lcall
rcl
mov
and
aaa
in
push
dec
inc
jne
fsubs
inc
addr16
xor
stc
sbbb
fwait
je
or
add
jnp
int3
clc
adc
dec
sub
lods
jbe
out
shl
add
lock
js
lret
pop
cmp
in
push
xorb
xchg
mov
sbb
mov
fildl
lods
pop
pop
rcl
mov
pop
psraw
dec
mov
pop
add
jecxz
pop
push
xorl
ljmp
fdivrl
ljmp
pop
cld
dec
inc
mov
lret
mov
mov
ffree
leave
inc
push
sub
das
mov
cmp
jg
pop
jmp
pop
aas
ljmp
iret
dec
movsb
pop
scas
stos
lret
fwait
andl
repz
lea
jae
sbb
adc
dec
gs
pop
xchg
es
or
stos
stc
in
mov
add
cmpsl
sbb
mov
in
inc
shl
mov
mov
jmp
push
inc
push
lock
leave
mull
lock
out
cmpsl
sbb
adc
enter
lret
insl
xor
xchg
xor
lods
mov
data16
lds
cwtl
pop
imull
arpl
test
icebp
lods
mov
or
lcall
xchg
or
cs
movl
out
les
adc
add
jno
cld
mov
cmp
cmc
mov
push
ljmp
xchg
aas
dec
dec
and
lock
adc
push
and
int3
js
testb
push
sbb
mov
sbb
xchg
cmp
daa
leave
xchg
add
data16
xchg
mov
lock
add
adc
push
lahf
dec
rorb
mov
sub
cmc
mov
cmpsb
push
fcmovne
jle
nop
push
fwait
arpl
in
or
ja
mov
mov
aaa
mov
push
mov
das
popf
outsl
cld
scas
stos
lret
inc
jg
insb
leave
mov
daa
cmp
mov
dec
jo
push
adc
adc
xor
out
jecxz
imul
adcb
ror
popf
jnp
int3
das
in
push
dec
out
loope
roll
adc
call
addr16
fcompl
push
xchg
dec
inc
jmp
add
fimuls
or
mov
mov
pushf
sti
lahf
push
fdivrs
pusha
adc
idivl
mov
dec
icebp
mov
stos
push
pop
loop
jnp
xor
ret
insl
ret
jge
mov
or
into
inc
cmp
dec
fidivl
fcompl
mov
mov
push
mov
mov
inc
pop
and
and
add
xchg
jbe
pop
pop
repnz
push
push
psadbw
xchg
mov
and
xchg
add
fbld
push
out
cmp
pop
jge
fstp
loope
call
mov
lods
cmp
mov
shlb
jl
sub
inc
arpl
lods
fisubrl
fs
sbb
pop
pop
sub
pop
mov
jb
or
fidivl
arpl
and
xchg
mov
dec
popa
out
outsl
faddl
or
stos
jmp
inc
jnp
enter
daa
inc
sahf
jmp
adc
or
popf
iret
shlb
repz
mov
inc
imull
mov
pop
fistps
cmp
jle
mov
sbb
outsb
pop
sub
leave
arpl
dec
je
testl
popf
sub
jmp
idiv
jno
cs
inc
mov
sahf
dec
sub
xor
out
shl
xchg
jnp
jb
sub
cld
aad
test
into
cmpsl
xchg
push
push
cmpsl
les
push
or
cltd
fwait
mov
lret
rorb
fs
aad
cmp
test
mov
adc
xchg
xor
mov
cmp
mov
lds
mov
and
inc
lock
xor
mov
mov
adc
int3
adc
cmpsl
movsb
sub
push
jmp
sar
sub
in
popa
mov
mov
push
call
pop
push
lods
in
push
insb
or
popa
adc
imul
pop
fsub
dec
fdivl
ss
pop
sbb
xchg
fildll
int
int3
inc
xchg
fwait
call
adc
pop
mov
dec
xchg
xchg
dec
xchg
sub
sub
aam
and
push
mov
jmp
cli
adc
and
cmp
sti
nop
sub
add
pop
mov
lds
inc
push
movsl
jae
fisubs
sbb
xchg
scas
es
in
in
fmull
jnp
sub
inc
cmp
mov
loopne
cmp
mov
xchg
lods
mov
mov
clc
test
in
pop
mov
scas
xchg
xor
mov
jno
leave
push
xor
add
jno
iret
add
gs
in
cmp
and
out
sbb
outsb
sti
jle
fidivs
inc
mov
cmp
xchg
pop
out
nop
xor
and
std
jo
sub
pop
sbb
push
jge
icebp
lret
sub
adc
scas
aad
mov
lret
sub
cmp
dec
mov
subl
inc
lods
push
mov
add
adc
loope
icebp
sbb
sub
cmp
dec
mov
subl
inc
lods
push
mov
add
adc
loope
repnz
sub
cmp
dec
mov
subl
dec
lods
push
mov
add
or
sbb
sub
cmp
dec
mov
jl
mov
lret
push
inc
mov
add
es
adc
cmp
xchg
lcall
dec
jg
outsl
negb
es
filds
push
jmp
jbe
test
xchg
aas
xchg
mov
movsl
dec
push
jg
outsl
negb
ds
das
fistps
dec
jle
insb
pop
gs
push
shrl
mov
xchg
mov
rolb
jg
push
ret
mov
hlt
clc
pop
mov
or
out
loopne
sub
imul
scas
push
lret
iret
test
in
adc
loop
mov
mov
mov
inc
dec
subl
loop
iret
stc
xchg
push
adc
lcall
out
xor
xor
sbb
outsl
negb
es
push
clc
data16
xchg
mov
inc
inc
dec
mov
insb
pop
pushf
pusha
outsl
negl
push
xchg
stos
jl
stos
ja
or
mov
scas
mov
das
out
or
jo
jl
and
sbb
pop
out
sti
dec
xchg
add
pop
cmpsb
setne
mov
push
push
popl
mov
inc
iret
push
jg
outsl
pop
sahf
jle
pop
fimuls
jg
outsl
xchg
fisubs
push
daa
aaa
fists
mov
sbb
out
push
aas
repz
fstps
dec
test
sub
ficoml
xor
xor
mov
idivl
mov
mov
cli
inc
jae
inc
ret
inc
xchg
sub
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
pop
andb
ficompl
sahf
push
sub
mov
scas
lret
fs
cmp
jle
lahf
mov
out
jl
in
xlat
fwait
ds
rcrl
inc
insl
or
lock
or
bound
enter
dec
xchg
scas
mov
ljmp
scas
mov
scas
scas
mov
andl
jl
sub
mov
sarl
cmp
test
sbb
stc
jbe
lods
test
pop
dec
sbb
cmp
push
cmc
lods
lret
pop
je
cltd
nop
xchg
stc
popa
mov
mov
cs
lret
jbe
mov
mov
lock
xchg
adc
fsubs
popf
jbe
lcall
lock
xchg
mov
mov
sarl
imul
daa
mov
arpl
ret
iret
outsb
ja
clc
das
inc
sbb
mov
xlat
fnstcw
sahf
adc
jne
adc
inc
mov
hlt
or
jg
cmpsl
dec
and
pop
pop
fwait
adc
xchg
aad
jno
dec
lods
outsb
loop
ss
dec
shrl
std
mov
loop
popf
dec
fnstsw
lock
mov
fdivrl
xchg
cmp
scas
sub
dec
xchg
xor
aaa
adc
mov
push
push
xchg
dec
out
push
sti
daa
icebp
in
insl
add
lea
jmp
mov
add
mov
add
fnstsw
cmp
dec
gs
std
inc
mov
xor
andb
cmp
icebp
and
jb
add
mov
test
mov
movsl
es
jns
jl
lea
ja
cltd
mov
daa
cli
xchg
mov
je
or
sarl
ja
pop
fmuls
push
sbb
push
loopne
jmp
ds
xor
or
or
ret
in
jbe
movsb
add
xchg
mov
sub
dec
and
dec
mov
mov
push
fs
add
cmp
fwait
push
or
arpl
push
inc
fst
or
mov
mov
add
mov
fimuls
leave
test
pop
repnz
inc
mov
push
in
jns
xor
loop
imul
mov
cwtl
hlt
xlat
mov
imul
mov
mov
xor
div
loopne
dec
out
lahf
push
xchg
cs
aaa
mov
lods
sar
pop
inc
popf
in
call
or
dec
mov
movl
inc
call
loopne
aad
into
pop
lea
and
ja
dec
add
add
inc
loop
xchg
adc
iret
push
and
cmp
shlb
push
jae
jne
pop
sub
mov
int3
lea
mov
pop
scas
sub
fists
add
clc
mov
in
loopne
mov
rclb
and
add
add
xor
fldt
in
sbb
mov
xchg
fdivp
lcall
nop
dec
and
adcb
or
jle
fldt
inc
sub
lret
mov
xchg
rclb
cmpsb
pop
jo
lahf
xor
stos
cmp
nop
mov
xor
jo
dec
xchg
pop
je
aas
sahf
repz
pop
testb
addr16
jno
xchg
inc
cmpsb
cmp
cmp
pushf
fsub
xor
mov
mov
icebp
imul
lcall
loopne
dec
push
mov
xor
cmp
ss
rclb
into
inc
push
push
stos
ror
sbb
dec
scas
mov
in
pop
scas
loopne
add
nop
and
aam
cmc
insb
lret
sbb
movsl
mov
push
sub
iret
repnz
shll
aad
les
insb
pop
sbb
in
jns
fcompl
push
jl
ret
lea
frstor
lods
dec
insl
cltd
push
bnd
int
int
call
popf
out
xchg
pop
or
cmp
lret
pop
xchg
push
inc
test
rorb
push
into
jle
inc
std
test
sbb
inc
dec
jne
or
sbb
cmpsl
xlat
inc
shr
dec
pop
and
rcrl
pop
xor
lods
mov
fdivp
imul
lret
inc
jnp
jmp
adc
xor
xor
jg
inc
sub
jae
and
loope
ljmp
pop
jae
in
adc
pop
xchg
leave
push
push
inc
fsubrl
stc
add
adc
addr16
ja
in
in
and
add
xlat
gs
ja
out
mov
sub
dec
ret
sbb
inc
stos
mov
push
push
out
les
xchg
xlat
fcoml
jnp
or
pop
outsl
jbe
mov
mov
mov
dec
or
loop
add
mov
fimull
popl
ja
jle
ds
mov
cld
lcall
jns
insb
xor
pop
push
sub
shl
insl
shll
mov
inc
push
cmp
in
jecxz
jno
dec
push
fidivs
xor
add
or
cltd
jmp
cmpsb
xor
pop
js
aas
sbb
jo
mov
pop
aas
pusha
and
mov
adc
pushf
imul
stos
cwtl
mov
jp
pop
call
jne
ret
subl
gs
cmp
outsb
jo
mov
mov
cmpsl
xor
out
inc
loopne
sub
shrl
call
pop
adc
mov
xchg
call
add
loope
decb
adc
sbb
rcrl
cs
or
mov
adc
cmpsb
insl
sbb
xor
xchg
ljmp
sub
xor
stos
xlat
mov
and
mov
xor
cmp
aas
jmp
pusha
or
jg
das
push
mov
jb
sub
mov
into
aaa
mov
add
mov
iret
mov
addl
hlt
adc
jne
ret
loope
lret
pop
add
dec
stc
cld
mov
xchg
les
dec
loope
ss
and
call
sbb
and
aad
cmpsl
add
pop
test
sbb
sarl
imul
jmp
arpl
mov
movsb
jns
sub
subb
fdivl
in
xchg
js
mov
insb
movsl
out
into
mov
mov
sub
mov
mov
mov
pop
inc
adc
xchg
pop
mov
daa
push
lods
inc
dec
fldlg2
inc
loope
jecxz
ffree
aas
inc
mov
push
xchg
mov
mov
push
or
dec
xchg
pop
jo
mov
push
imul
dec
cmp
jl
cs
xor
mov
ret
into
mov
adc
mov
sub
mov
cmpb
mull
sbb
or
pushf
push
jbe
jno
fdivs
mov
sub
lds
ljmp
jmp
sti
sti
sbb
sbb
and
lds
pop
test
jge
and
sbb
mov
cmc
mov
adc
leave
push
flds
dec
cld
repnz
adc
pop
mov
mov
sub
pop
and
xchg
mov
fcmovne
inc
mov
hlt
test
jge
pop
outsb
lret
inc
out
push
mov
adc
das
pop
cmp
dec
xor
push
inc
lahf
dec
adc
push
addr16
pop
xor
rorl
mov
lock
jecxz
mov
fistpl
jl
mov
cld
or
xchg
shrl
cmp
mov
lods
lock
and
and
stos
sbb
xor
sti
pop
jne
jp
lret
sbb
das
das
push
sub
into
movsl
push
push
das
xchg
jmp
push
push
jl
fisubl
mov
ret
xor
cltd
aas
stos
cltd
sub
stos
aaa
leave
out
mov
dec
jl
and
mov
pop
adc
dec
pop
sbb
cmp
pop
inc
mov
das
inc
pop
and
ja
ljmp
mov
mov
dec
xlat
push
subb
xor
push
test
in
push
xlat
lods
sahf
sub
pop
sbb
xchg
push
mov
dec
mov
mov
ljmp
sub
lcall
xor
loope
gs
in
mov
popf
pusha
aaa
sbb
repnz
xchg
jo
xchg
mov
std
in
lea
popf
mov
cltd
dec
sub
js
and
out
xor
ss
enter
fidivl
inc
faddl
outsl
imul
stos
mov
scas
push
push
pop
fnstcw
xlat
pop
cwtl
adc
xor
xchg
xor
dec
inc
call
scas
xor
xlat
jg
pop
xchg
mov
adc
pop
in
insb
add
sub
ja
daa
adc
stos
into
outsl
pop
fucomi
adc
fcomps
cltd
sti
sub
xchg
push
enter
inc
or
or
test
test
das
movsl
pop
cmpl
push
push
std
adc
dec
and
imul
mov
or
push
sbb
js
xchg
pop
lods
push
mov
popl
mov
jae
mov
icebp
sahf
bnd
fbstp
cmp
mov
jg
jp
stos
int
lods
sub
fiadds
cmp
lds
cmpsl
mov
add
pop
mov
movsl
jne
and
fs
xor
and
scas
mov
in
in
mov
std
xor
push
dec
lea
sub
stos
jb
dec
mov
fidivl
lahf
xchg
xor
cltd
ss
pusha
jmp
mov
jmp
fistps
mov
mov
aam
xlat
icebp
mov
jmp
jge
es
jns
nop
dec
popf
imul
shrl
or
jae
pop
sbbl
push
imul
inc
out
xchg
jns
out
incl
add
inc
cli
shl
fwait
hlt
or
rorl
daa
adc
sti
xchg
das
sarl
adcl
fistpll
mov
xchg
test
sub
lcall
and
mov
loopne
mov
push
aad
std
scas
add
mov
xchg
ficompl
dec
dec
adc
ret
add
pop
pop
in
push
enter
sub
fwait
cmpsl
int
cmpsl
lods
add
lahf
cmp
movsl
inc
mov
dec
push
dec
xor
lahf
jb
xor
push
sbb
stos
leave
dec
jnp
pop
pushl
xchg
or
push
cmp
push
xchg
sbb
mov
sbb
repnz
mov
push
pop
pusha
add
lcall
or
fwait
sbb
jge
fwait
jns
pushf
push
inc
inc
inc
hlt
mov
xchg
fldt
mov
cmp
pop
lea
int
adc
xorl
jp
sarb
test
fwait
pop
push
mov
les
adc
call
adc
leave
jg
fisttpll
into
stc
sub
xor
mov
out
ljmp
mov
clc
push
lret
and
daa
cwtl
pop
cmpsb
jne
cmp
cmp
int
cmp
sahf
shll
sub
or
scas
xor
or
lret
sbb
jne
test
mov
jne
cmp
or
or
sub
mov
mov
shlb
and
xor
xor
mov
push
xchg
and
jl
icebp
fmull
imul
xor
loop
mov
dec
mov
test
or
sbb
fisttpll
sar
dec
jns
ja
sbbb
stos
sbb
in
sub
mov
mov
pop
inc
and
stc
pop
daa
cwtl
sub
insl
loop
inc
sbb
xor
lods
xchg
test
cmpsb
arpl
jge
mov
jo
mulb
cmpsl
sub
adc
adcb
es
sbb
imul
cmp
and
jmp
xchg
or
mov
jle
sbb
add
jb
shlb
adc
int
inc
add
add
mov
in
fldl
cmpsl
cmp
pushf
mov
mov
aaa
lds
push
punpckldq
jg
xor
inc
mov
comiss
in
pop
mov
add
xchg
ljmp
xor
andl
inc
fcompl
hlt
outsl
jecxz
imul
mov
mov
xor
pop
cwtl
je
inc
push
sbb
icebp
lret
emms
mov
dec
xchg
xchg
push
addr16
dec
nop
lods
je
dec
mov
xchg
sbb
inc
aaa
pop
dec
mov
ficoml
and
sahf
cmpsl
sbb
dec
iret
cli
pop
pop
ds
cld
popf
push
or
icebp
nop
push
inc
fistps
ljmp
xchg
mov
sbb
jbe
jbe
shll
add
mov
mov
movsb
test
xor
dec
sti
stos
outsl
pop
and
fdivrl
cmc
adc
inc
fwait
or
inc
data16
stc
stos
es
add
gs
lds
push
hlt
and
xor
addr16
cmc
mov
testb
or
sbb
mov
clc
jecxz
lcall
jp
sub
pop
cltd
cmp
sarl
fidivrl
lods
pop
mov
fcomps
mov
neg
cmp
lock
scas
jmp
xchg
mov
cmp
int3
popf
outsl
pop
int3
mov
int
in
mov
movsl
arpl
lret
cld
repnz
jb
or
push
imul
popa
test
fs
jg
cmp
xchg
or
or
mov
repnz
mov
nop
mov
rcrl
push
xor
repnz
or
lds
fisubs
xchg
adc
mov
mov
bnd
lods
and
lret
mov
and
arpl
xor
dec
pop
jne
adc
add
rcl
fldt
cmpb
dec
pop
cmp
fidivs
pop
mov
adc
in
cmp
mov
inc
pop
in
push
les
cmpb
lds
jns
mov
in
imul
out
bound
fiadds
pop
mov
add
fbld
mov
rcrl
mov
cld
sbb
loope
pop
mov
jg
add
je
into
xchg
dec
subb
bound
cmp
out
in
pop
jne
push
dec
pushf
bound
xchg
in
pop
scas
out
outsb
push
movsb
jno
and
ret
xor
nop
mov
add
jns
in
loope
sbb
scas
jge
push
adc
push
jbe
out
flds
mov
jo
int
dec
ss
fwait
mov
in
push
pop
testb
lea
cmp
in
inc
xor
aam
aad
jg
push
test
arpl
fistpl
mov
sub
imul
int
in
scas
out
sbbb
jg
adc
adc
mov
inc
rcll
sub
ret
cld
fdivr
adc
add
or
aas
dec
push
push
decl
dec
das
outsb
lds
repnz
cltd
mov
pusha
lods
out
cmpsl
arpl
jle
jg
pop
pop
push
ss
stos
xor
mov
not
mov
jge
mov
mov
nop
cmp
fwait
es
clc
cmp
cmc
aam
jge
test
iret
popa
cmp
sub
fadds
inc
cmc
mov
sub
lods
data16
in
jae
imul
push
lods
lahf
sub
mov
adc
pop
pushf
push
leave
fsubs
fdivs
mov
push
ja
fstl
les
add
hlt
int3
dec
push
sbb
dec
and
insb
mov
xchg
adc
mov
push
test
out
mov
mov
inc
xor
cmp
or
xchg
es
lea
and
stos
lret
push
dec
lcall
sub
jb
add
sub
jecxz
rcr
inc
dec
imul
sbb
into
lret
mov
ret
out
int
jb
mov
nop
dec
push
jecxz
insb
jns
cmpsb
je
enter
mov
mov
subl
jne
scas
inc
imul
outsl
sub
push
out
pushl
out
and
sbb
pop
jns
adc
jns
jo
lret
or
add
stc
out
bound
mov
or
xor
lock
mov
xor
rcr
in
push
loope
cmp
outsl
lock
fcomps
mov
outsl
push
xchg
push
scas
xchg
mov
cmc
test
cmp
out
test
imul
mov
lock
xchg
and
sub
cli
fstl
sbb
xchg
shlb
sbb
bound
xchg
hlt
mov
xchg
dec
inc
push
cmp
jge
push
nop
fwait
movsl
jo
mov
bound
aaa
enter
or
xor
jae
mov
jne
out
int
mov
cmpsl
xor
scas
mov
push
dec
outsl
addr16
sub
mov
push
push
push
mov
js
pushl
fwait
and
jmp
leave
fxch
shr
scas
andl
pop
mov
or
xchg
mov
loop
fisubrl
insb
sub
fwait
rolb
mov
inc
sbb
mov
xchg
notl
out
bound
and
or
dec
loop
ret
test
sub
popf
ja
jnp
test
inc
imul
jge
lock
addr16
mov
cmp
aad
jl
movl
xchg
leave
push
sbb
popf
flds
stos
pop
aam
and
push
int3
sti
roll
mov
sahf
cmp
pop
inc
sti
subb
pop
cmpsl
mov
fnstenv
push
lods
add
loope
pop
push
mov
xchg
scas
mov
jb
mov
jl
popa
or
popf
pop
or
sbb
push
andb
add
lea
fidivl
test
ds
inc
mov
add
outsl
mov
fs
movsb
nop
lds
or
and
xor
cmp
inc
ljmp
sub
lods
in
add
fdivl
fsubr
cltd
in
js
mov
shr
fistpl
fimull
sbb
adc
xor
roll
adc
lds
push
cs
cmp
adc
adc
sbb
lock
xor
fs
mov
or
or
mov
pop
cmp
mov
jp
in
popa
rol
popf
in
mov
jbe
jg
movsb
cmp
jbe
adc
mov
popf
std
leave
adc
push
fidivrs
stos
xor
fidivs
push
sbb
and
sub
xor
loope
loopne
sbb
push
arpl
inc
repnz
dec
jo
dec
mov
mov
push
dec
fcmovu
inc
or
mov
mov
or
sub
les
xor
cmp
pop
out
lret
push
cmp
push
into
jb
lahf
enter
insb
dec
inc
fnsave
sbb
test
jae
jmp
loopne
cmp
imul
hlt
mov
pop
into
fwait
into
mov
sub
ret
jae
cwtl
add
jmp
mov
jne
repnz
aas
std
dec
or
xchg
adc
scas
ds
test
sbb
stos
test
addl
je
pop
enter
popa
dec
repz
mov
sahf
dec
xchg
pop
and
xchg
aaa
cmp
mov
lea
out
sub
adc
pop
bound
pop
xor
xchg
xor
push
push
lcall
add
push
popf
jb
inc
test
ret
xchg
inc
repnz
jne
rcrl
sbb
lahf
pop
pushl
rcrl
jl
push
add
dec
hlt
int
inc
ret
pusha
mov
fdivs
cmpsb
scas
stos
neg
push
in
or
mov
xor
adcb
cmc
push
cmc
int3
mov
lret
mov
fwait
aaa
add
add
mov
hlt
inc
and
iret
jg
fldl
mov
mov
aaa
fsubrl
rcrb
xchg
adc
rorb
aad
fmul
sub
ret
sub
lcall
inc
mov
ds
movsl
cmp
out
cltd
xchg
ds
lods
and
sti
cwtl
xor
std
insl
push
aad
pop
sbb
push
aas
sbb
rol
mov
lahf
pushf
out
cs
mov
cmp
popf
movsb
jmp
addl
and
inc
icebp
dec
adc
and
add
jg
jecxz
or
into
ficompl
jne
push
fisubs
or
and
movsb
xor
mov
rorl
test
xor
aas
mov
xchg
mov
lret
push
gs
jp
cmp
cs
movsl
aas
and
insl
scas
lret
mov
fstpl
lcall
rorb
jl
sti
mov
adc
aas
repz
arpl
rcll
dec
cs
pop
test
sbb
cmpsl
leave
icebp
icebp
shll
sub
loope
movl
stc
cmp
sbb
xlat
pop
data16
movsl
mov
jbe
fs
loope
rcl
clc
sub
xchg
lahf
cmp
bound
js
push
mov
insl
das
out
jg
outsb
inc
or
sti
test
sub
sbb
mov
mov
push
fadds
mov
in
sub
repz
lea
mov
movsl
add
mov
mov
loopne
ss
and
in
cld
inc
daa
addb
adc
or
idivl
sub
mov
inc
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
ss
inc
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
cmp
cmpsb
das
shrl
aas
sub
sbb
or
mov
mov
rcrb
pop
shlb
xchg
add
jo
in
push
inc
es
mov
data16
inc
rclb
mov
mov
xchg
cwtl
add
jo
pusha
adc
inc
aas
mov
mov
jg
outsb
loopne
rclb
mov
je
add
xor
addl
jmp
xor
or
sub
inc
into
test
mov
jmp
pop
out
cmpsl
out
and
stos
jg
jae
pop
ret
ret
andb
lahf
fistpll
push
mov
add
adc
call
push
in
movsl
jge
xor
nop
xchg
sub
int
fistpll
jno
mov
daa
movsl
es
pop
xor
mov
jmp
dec
mov
imul
scas
int
push
mov
jg
icebp
outsb
cmc
or
cmpsb
inc
cmpsb
int3
jo
xchg
data16
negb
es
pop
inc
imul
jns
test
movsl
pop
and
cmp
sti
add
add
inc
inc
out
mov
mov
jno
data16
rorb
mov
adc
pusha
fcoml
sub
push
mov
adc
sahf
push
nop
cmpsb
push
ficoml
repnz
out
xchg
adc
push
mov
or
add
push
xchg
outsl
out
popf
or
stc
pop
repz
jle
lock
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
mov
data16
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
jmp
or
pop
inc
scas
xchg
push
xchg
idivb
mov
mov
mov
mov
add
jecxz
inc
decl
arpl
mov
movsl
mov
in
inc
stos
adc
cs
mov
cmp
out
lret
xchg
loopne
loopne
aas
push
adc
pushl
fisubrl
dec
mov
out
std
ret
scas
inc
lods
pop
cmp
insb
adc
lds
pop
lock
cmp
and
out
insl
adc
mov
sbb
jl
imul
mov
repz
push
movsl
inc
adc
mov
std
jg
mov
enter
cmp
add
inc
mov
insb
psadbw
adc
jbe
xchg
scas
inc
and
in
cmpsl
mov
nop
loop
popf
in
or
int3
xor
xchg
in
jae
push
fmull
das
mov
gs
pusha
jg
lds
add
cmpsb
jbe
stos
cmp
sub
dec
dec
cmp
adcb
adc
das
aas
mov
bound
cli
aaa
ss
xor
xlat
std
mov
cld
loopne
and
pop
jbe
dec
ja
shlb
sub
jmp
imul
sub
adc
or
mov
or
inc
and
push
push
ja
fs
mov
lret
aam
xchg
sbb
sarb
int
lock
out
punpckldq
push
push
aam
cwtl
push
arpl
dec
lcall
testb
mov
xchg
fwait
insl
test
scas
rclb
or
rcll
fidivs
outsl
divl
mov
adc
stc
xor
out
mov
mov
xlat
mov
cmp
inc
xchg
data16
push
orl
mov
adc
ficompl
jb
mov
mov
bound
pop
loop
fimull
xchg
lods
cltd
and
jmp
adc
adc
push
xor
into
sub
pop
into
shrb
jae
xor
subl
jno
out
stos
test
ds
cs
sbb
sub
sub
xor
filds
aam
idiv
cli
jnp
inc
scas
xor
insb
xchg
xor
ror
mov
ds
cwtl
and
xchg
mov
dec
push
jns
in
cmp
rorl
ret
and
inc
cltd
xchg
dec
mov
jp
mov
mov
outsb
fdivp
mov
or
fistpll
aad
in
pop
pop
or
jo
into
jl
leave
mov
push
loopne
stc
xchg
cmp
xchg
inc
imul
inc
test
push
sbb
sti
lods
hlt
jno
pop
sbbb
lods
adc
push
js
sbb
pop
push
xor
add
sub
fcmovbe
and
mov
ret
pop
pop
mov
pop
push
pop
xor
fdivs
out
sar
and
jmp
inc
sarb
mov
gs
loop
rcl
lds
push
mov
inc
subl
or
cmpsb
adc
lds
lcall
jmp
and
mov
mov
cltd
cmpsl
icebp
push
pop
fwait
push
addl
ja
arpl
xchg
and
inc
adc
jbe
or
or
stos
cmpsl
pop
test
jmp
lds
xor
add
clc
icebp
xor
aam
addr16
mov
mov
cmp
pop
data16
fnstsw
fnstenv
jne
mov
scas
fisttpll
jle
dec
cwtl
push
adc
push
cmp
adc
mov
and
lea
or
insl
add
insl
jns
jnp
daa
int3
sbb
sbb
scas
jle
or
add
xchg
inc
adc
pop
xor
lcall
jns
mov
cmp
mov
or
xchg
adc
popf
sbb
jns
xor
arpl
jle
pop
inc
leave
cmpb
pop
xor
xor
jns
xor
mov
fistpl
pusha
in
jae
pop
or
mov
ja
arpl
cwtl
push
xchg
sub
cmp
repz
jp
jno
mov
or
ss
mov
pop
jae
negb
jae
jmp
jno
int3
mov
imul
movsl
sbb
mov
mov
hlt
push
mov
leave
dec
sahf
adc
or
jne
subl
into
mov
xor
jge
sub
xchg
push
xlat
jp
andb
cmpsl
xlat
into
shl
push
shl
sbb
mov
push
in
add
scas
adc
addr16
movsb
xor
cmp
or
jecxz
rcl
push
mov
or
je
mov
pop
enter
mov
mov
enter
inc
xchg
mov
pop
je
mov
mov
repnz
mov
sbbb
push
out
mov
ljmp
data16
arpl
leave
pop
mov
push
pop
cmp
dec
popa
vcmpss
popa
mov
or
xchg
sti
jg
orb
add
psllq
cwtl
in
shl
lret
xlat
je
nop
shll
sbb
xchg
pop
loope
loope
sbb
mov
mov
or
fwait
and
xchg
dec
ds
jae
adc
repz
fstpt
loopne
aad
and
mov
fmull
pop
cmp
add
push
es
xor
jmp
jge
sub
movsb
ja
ljmp
adc
imul
or
sbb
cld
push
mov
xorb
lahf
xchg
insb
lods
sub
push
ja
mov
ljmp
sub
xchg
in
sub
pop
jle
jnp
js
aas
ss
dec
mov
pop
mov
mov
jns
pop
pop
mov
pusha
ret
insl
repz
sbb
in
mov
inc
xsavec
xor
int3
fnsave
into
xor
mov
inc
jle
daa
cmc
cmp
mov
mov
jne
add
test
aaa
ret
mov
and
popl
lcall
or
addr16
mov
adc
ficoml
rorb
push
xlat
sbb
rorb
xchg
repz
xchg
lss
je
out
mov
decl
fwait
jle
xchg
jbe
lahf
jge
mov
lods
cmp
or
arpl
lahf
adc
pop
dec
inc
scas
mov
sbb
mov
test
pop
xchg
sbb
fwait
int
push
lods
aam
inc
adc
gs
mov
fwait
dec
push
xor
add
data16
xchg
sub
xor
adc
adc
push
cmc
daa
push
jne
aam
ss
sbb
in
sub
mov
mov
arpl
mov
mov
sbb
and
das
call
les
dec
mov
in
jnp
pusha
insl
jg
mov
popf
mov
dec
pop
stc
addr16
sub
dec
xor
and
add
mov
pop
mov
cmpsl
cmp
adc
arpl
sub
mov
push
movsl
inc
js
in
mov
rolb
and
xor
fidivrs
sar
mov
and
cmpsl
dec
and
out
jp
pop
insb
mov
mov
xlat
push
fildl
and
outsl
and
and
lcall
jnp
arpl
push
popf
stc
xchg
dec
inc
jge
mov
fimuls
push
rol
cmpl
ret
les
jp
push
insb
pushf
xchg
dec
in
lahf
adc
dec
xchg
push
pop
xchg
sahf
jmp
insb
cli
scas
xlat
lods
cwtl
mov
add
add
pop
jg
fiaddl
xchg
xchg
xchg
aad
lock
shlb
test
inc
push
mov
in
xchg
pop
mov
movsb
leave
sub
cltd
and
sbb
cmpsw
cmp
mov
outsb
sbb
mov
mov
test
or
cwtl
sub
fstl
mov
loop
in
mov
jle
iret
mov
leave
xchg
sbb
add
xchg
aaa
inc
cwtl
and
gs
jg
testl
imul
and
cli
mov
inc
cmp
adc
test
mov
testb
outsb
pop
jmp
ficoml
mov
scas
push
sub
dec
mov
cmp
inc
adc
clc
mov
ds
mov
fcompl
loop
add
mov
sti
dec
cs
xchg
leave
adc
subb
push
mov
fsubs
dec
sbb
out
jnp
pop
pushf
sub
mov
hlt
cmp
dec
pushf
push
outsb
cmp
jns
jno
mov
add
lret
shrl
and
das
and
mov
pushf
jnp
mov
call
iret
les
imul
pop
addr16
and
fstpt
push
xor
push
adc
jl
cmp
adc
roll
cli
inc
mov
pop
lods
mov
push
adc
jnp
jo
xchg
insb
movl
cmpsb
xchg
or
lods
adc
loop
jge
push
arpl
xor
shll
adc
jne
jmp
fs
adc
cld
sub
std
pop
push
dec
mov
cmp
jg
mov
std
jo
add
out
clc
push
xor
fsts
stos
xor
jns
inc
fdivl
fucom
or
sbb
shrl
cmpsb
mov
sub
lds
and
dec
ja
pop
dec
mov
push
int
push
or
out
pop
fwait
ss
std
aaa
and
orb
data16
aad
dec
iret
mov
stc
stos
cmp
adc
imul
clc
and
jbe
push
in
mov
add
decl
pop
and
shrd
dec
pop
mov
jno
in
mov
cmp
sbb
push
mov
notl
in
in
dec
and
inc
pop
xchg
mov
ljmp
fdivrl
sti
test
cwtl
shlb
fwait
or
jmp
sbb
cmc
cmp
adc
dec
insb
mov
arpl
xchg
lods
loope
adc
mov
flds
dec
je
dec
mov
dec
mov
sub
ja
int
cmc
xor
lret
mov
negb
and
leave
into
dec
and
add
xchg
dec
aad
loopne
mov
or
js
test
lret
aam
inc
adc
outsb
jp
imul
mov
mov
mov
dec
push
xchg
mov
int3
insb
lods
dec
push
xor
xchg
clc
movsl
jb
push
push
cvtps2pd
cmp
ficoms
clc
push
enter
mov
bound
jle
mov
loop
jecxz
jg
push
push
ljmp
out
sub
pop
insb
xor
lods
mov
or
push
add
push
dec
dec
inc
sbb
mov
ss
movsl
xchg
fidivrl
aad
gs
inc
push
adc
cmpsb
inc
sahf
sti
out
ds
mov
mov
lret
scas
test
jno
add
xor
scas
xchg
ds
sbb
pop
cmp
lods
mov
test
xchg
push
cmp
xor
pop
cmp
pop
xchg
cmc
je
cmp
cli
jo
pop
dec
fs
cmp
cmp
dec
xlat
pop
stos
rcrb
dec
and
sub
mov
add
sub
sub
adc
cmc
sbb
adc
ret
add
cltd
ja
adc
mov
push
es
ss
push
pop
fucomp
jno
mov
inc
cmp
cmc
mov
insl
in
movsl
fldt
movsl
mov
mov
mov
xchg
stc
rcrl
dec
insb
int
mov
mov
ret
cmp
push
mov
inc
jo
lock
push
movsl
mov
lret
jo
mov
stos
xchg
stos
pop
js
addl
or
mov
xor
mov
jl
dec
cmp
jmp
sub
mov
sbb
dec
dec
jge
shl
out
sbb
push
sbb
inc
sti
mov
push
jne
rclb
adc
adc
add
pop
mov
jg
sub
les
adc
icebp
mov
jns
std
sbbl
sbb
mov
jne
sbb
icebp
nop
bound
clc
inc
lcall
push
xorb
rorb
aad
jmp
mov
insb
and
cmpsb
and
pop
daa
dec
dec
xchg
in
pop
andb
test
xchg
in
pop
jbe
in
mov
int3
outsb
movsl
inc
sub
jp
jo
shlb
fsubs
test
push
and
mov
repz
push
sbb
mov
cmp
pop
das
es
scas
jno
imul
cltd
inc
scas
inc
mov
lock
mov
sub
mov
or
lods
sub
xrelease
nop
mov
lods
int3
xchg
push
test
mov
aad
jmp
fsubrl
cmpb
push
in
pop
inc
jbe
fsubrl
subb
ficoml
insl
jg
xor
push
xchg
and
and
and
out
pushl
sti
xor
sub
and
loop
loopne
xor
pop
inc
out
push
cmp
and
xchg
mov
stc
scas
loop
mov
cmp
push
cmp
xchg
mov
sarb
pop
hlt
sub
pop
pop
jmp
cmp
mov
int3
push
popa
adc
or
push
xchg
xchg
sahf
jecxz
jae
mov
sub
cmpb
jo
adc
repz
add
inc
sbb
push
call
pop
and
inc
ss
cld
lods
cmp
lods
jle
icebp
xor
adcb
inc
sub
imul
xor
es
sub
nop
pop
sbb
mov
mov
mov
and
mov
lods
stc
and
pop
mov
andl
jge
lea
shl
xchg
jno
test
sbb
popa
jmp
sbb
js
push
adc
fwait
int3
inc
rol
stos
rolb
stos
dec
push
leave
lcall
ds
fucomp
shrl
pusha
cmp
insl
lea
test
xchg
andb
inc
roll
xor
sub
add
pushf
cmp
ffreep
jp
bound
in
lahf
pop
pop
rorl
cs
mov
and
ss
lahf
mov
cmpsb
mov
and
push
shlb
lea
lret
sub
add
leave
repnz
add
les
ficompl
jecxz
and
test
xchg
dec
call
out
into
jno
out
mov
pop
lret
mov
test
adc
jecxz
sbb
in
repnz
repnz
jbe
outsl
psubd
xor
inc
xor
sub
ffreep
aaa
jmp
shlb
or
aad
cmp
js
cmovo
push
xchg
repz
mov
dec
xor
inc
add
pop
mov
xlat
popf
jecxz
xchg
ja
mov
outsl
loope
fistps
push
arpl
data16
roll
ljmp
jnp
in
sbb
test
cmp
aam
sub
xlat
mov
push
std
adc
sub
jg
xchg
mov
fidivs
mov
out
mov
sbb
mov
rcrb
popf
mov
jp
sbb
mov
mov
out
pusha
mov
sbb
fidivs
popl
cmpsb
lcall
xchg
and
and
fidivrs
imul
mov
fsubs
insl
cmp
inc
lea
jo
mov
sbb
inc
dec
mov
ss
mov
bound
jecxz
cmp
mov
push
xchg
jle
lret
jl
aad
mov
xor
cmp
jge
movsb
fiaddl
call
lea
leave
push
and
icebp
test
xor
fadds
test
sbb
or
xor
fwait
jno
xchg
mov
jge
xor
xchg
inc
jl
imul
and
fmul
shll
xchg
push
cwtl
loop
test
call
js
mov
mov
dec
adc
sub
adc
dec
and
mov
xor
ret
mov
dec
fcmovne
das
mov
push
and
fsubs
rolb
push
xchg
dec
mov
sub
push
inc
xor
ret
mov
aam
out
push
scas
sbb
xchg
mov
cltd
repz
mov
call
scas
orb
outsb
scas
adc
sbb
enter
movsl
enter
leave
cwtl
iret
into
xchg
in
xchg
aad
sub
push
pusha
xor
xor
adc
stc
out
lods
sub
je
popf
popf
and
lret
fists
inc
adc
repz
xchg
aas
inc
shrd
andl
sub
cmp
addr16
std
ja
out
mov
jne
insb
ja
dec
pop
xchg
jp
inc
scas
decb
sub
bound
daa
xchg
mov
cltd
xor
inc
imul
imul
sbb
lcall
xor
outsl
mov
dec
dec
mov
int
jmp
addr16
mov
inc
adc
mov
std
aas
mov
and
mov
mov
xchg
mov
xchg
sbb
mov
push
aas
inc
xchg
lahf
testl
es
lcall
inc
cmpsb
ret
xor
mov
xor
lock
push
jbe
outsl
xchg
divl
ret
cmp
test
cmp
imul
call
push
fisttpll
mov
shrb
shr
or
cmc
rcrb
bnd
mov
fdivl
dec
aam
daa
nop
sub
xchg
and
pop
inc
jb
xor
in
test
fst
aad
dec
pop
sub
inc
sbb
pop
inc
fimuls
sub
xlat
mov
jne
mov
xchg
or
push
test
xor
inc
aaa
jge
test
ret
pop
dec
out
dec
mov
cltd
out
fwait
dec
inc
hlt
loope
inc
pop
xchg
roll
in
mov
repnz
push
lahf
cwtl
push
pop
nop
xchg
aaa
je
shll
jno
cmp
clc
ret
mov
jae
sbb
xchg
jb
fwait
ja
insb
insl
sarl
int
xorl
mov
or
bound
and
cs
test
clc
or
and
dec
int
mov
scas
xlat
xlat
fsts
daa
sarl
out
add
pushf
mov
test
mov
sub
xchg
pop
addr16
mov
scas
data16
lods
daa
dec
pop
orb
add
pop
adc
int3
jo
inc
inc
sub
jg
icebp
rclb
adc
inc
mov
enter
roll
and
mov
add
mov
sti
push
loopne
insl
es
enter
lahf
shrl
sub
inc
pop
sbb
pop
outsb
jmp
xor
or
lock
adc
mov
xchg
inc
or
lock
mov
xor
inc
mov
fstpt
iret
mov
xchg
in
inc
push
push
sub
test
outsl
adc
stos
xlat
cmp
sbb
pop
add
mov
scas
sub
outsb
outsl
or
cmpsl
add
mov
mov
cwtl
sbbl
or
js
insl
xchg
mov
lret
xchg
insl
insl
push
mov
cld
pop
in
jecxz
xchg
mov
pop
rorl
fcomps
fidivrs
sar
cltd
jbe
dec
xor
inc
add
lea
xor
dec
mov
sbb
mov
xor
xor
int
mov
cmp
in
pop
cmp
xchg
cmpsl
je
sub
iret
lahf
imul
nop
push
jo
fsub
sti
adc
iret
cmp
rorb
cmp
inc
mov
orb
test
sub
aam
loope
sub
jp
in
or
sub
jg
stc
in
xchg
cs
mov
call
test
push
mul
out
cmp
ljmp
xchg
sti
int
notb
rcr
stc
pop
fimuls
push
and
rol
mov
jo
mov
mov
xchg
add
lahf
outsb
imul
test
sar
push
inc
xor
or
dec
int
andb
cmpsl
adc
mov
fdivrl
pop
out
sbb
mov
mov
adc
push
jbe
or
pop
sub
cmpsb
dec
shlb
push
and
mov
cli
pop
xor
adc
ss
aad
pop
mov
iret
or
lds
sbb
cmp
out
xor
popl
sbb
pop
mov
data16
xchg
pop
xchg
mov
add
leave
cmp
cmp
aam
pop
add
adc
xchg
jp
testb
aas
mov
out
push
lods
sbb
shll
push
lcall
lret
cmp
mov
cmc
jg
sub
jbe
sub
out
lahf
inc
jbe
cmc
jae
jnp
add
xor
dec
pop
enter
or
inc
mov
xor
inc
add
push
test
cltd
add
cmp
push
xchg
mov
data16
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
mov
data16
inc
rclb
cmpsb
xor
add
jo
pusha
push
inc
es
and
adc
andb
pusha
inc
rclb
cmpsb
mov
and
jo
pusha
push
aam
es
mov
fs
rcl
rcrb
mov
xchg
ja
clc
jle
cmp
repz
stos
xor
mov
popf
sahf
leave
pusha
cmp
inc
sbb
and
imul
adc
mov
rorl
sbb
mov
inc
sbb
and
xor
sbb
dec
jecxz
repz
mov
aaa
xchg
shll
push
dec
xor
jp
cs
add
jp
xchg
mov
mov
bound
sbb
stos
cmp
dec
fistl
test
pop
rdmsr
or
cmp
cs
jg
jnp
fistps
jns
jno
sbb
stos
push
pop
inc
les
cltd
lods
test
stos
popa
rorl
int3
inc
fnsave
test
pop
mov
pop
jecxz
aam
add
dec
sbb
jns
sub
cmc
jae
xor
mov
jbe
inc
lret
pop
fstl
leave
bound
cmp
or
mov
cld
dec
adc
stc
mov
mov
xorl
out
adc
js
xchg
les
int
mov
roll
addl
dec
arpl
push
inc
and
xchg
add
daa
xchg
nop
test
faddl
adc
insb
xor
pusha
movsl
push
jb
data16
xchg
cld
xchg
mov
xchg
clc
fcmovb
mov
movsl
adc
jl,pt
outsb
aam
push
and
test
repz
test
mov
out
mov
sbb
leave
arpl
jae
inc
sbb
and
imul
mov
rorl
sbb
leave
arpl
jae
inc
sbb
and
imul
mov
lods
movsl
jae
inc
lret
or
sar
mov
mov
aas
int
mov
sbb
dec
popa
mov
fwait
cwtl
cmp
dec
pop
cmp
imul
aas
les
repnz
push
dec
cmp
and
jns
rcrb
fwait
pop
rcll
pop
int3
or
mov
aad
pop
mov
jecxz
das
mov
xchg
jo
pusha
pop
hlt
or
cmpsl
lods
btc
inc
mov
mov
jbe
in
adc
mov
imul
mov
adc
inc
jb
sbb
adc
mov
mov
in
jo
jne
icebp
jne
aaa
push
into
jmp
sbb
push
movsl
xorl
xchg
cmpsb
bound
ja
push
inc
dec
jecxz
out
sbb
nop
je
int
pushf
lcall
lret
jecxz
push
lods
call
add
jp
add
push
out
in
xchg
dec
std
pushf
inc
into
cmp
jb
popa
push
jns
in
pusha
inc
sub
mov
dec
lds
and
or
scas
jg
cmp
dec
inc
mov
pop
jmp
jnp
pop
jne
and
mov
push
inc
lds
pushf
mov
sub
lds
out
mov
sbb
ja
pop
les
rcl
or
aaa
xchg
xchg
leave
mov
mov
inc
push
shll
xchg
sti
test
cmp
fnstcw
adc
ss
and
and
mov
mov
imul
xor
insb
mov
adc
mov
xor
std
sub
jns
lods
cmp
mov
jb
mov
pop
dec
xchg
enter
mov
push
lock
out
pop
jmp
dec
fcompl
ljmp
cwtl
nop
in
out
sub
ja
pop
pop
jp
ss
rolb
roll
dec
outsb
mov
mov
push
jmp
mov
sub
aas
movsb
sbb
jle
sbb
popf
cmp
aaa
mov
xor
in
or
dec
dec
lcall
mov
mov
loopne
dec
adc
orl
outsb
gs
xor
mov
std
scas
and
push
outsl
shll
mov
mov
adc
in
movsl
push
js
stos
sub
inc
add
push
stos
dec
icebp
xorb
sbb
test
lea
iret
pusha
mov
gs
add
xor
gs
jnp
rclb
pop
leave
hlt
loop
loop
add
pop
xchg
movsb
inc
sbb
dec
mov
test
inc
adc
adc
adc
cltd
rorb
shl
aas
testb
iret
test
mov
int
and
and
jo
mov
in
xchg
dec
jb
cli
xchg
js
sbb
mov
cli
cmpsl
adc
push
and
adc
jmp
jnp
xchg
pop
xchg
mov
ja
cmp
adc
pop
cmp
enter
lds
lret
iret
std
ds
jo,pt
cmp
fidivs
mov
aam
cld
out
lcall
fistl
fstps
cmp
pushf
pusha
push
mov
inc
sub
or
aam
inc
pop
vmwrite
push
xor
sbb
xlat
sbb
sbb
std
mov
fistpl
lret
jne
sbb
test
shl
inc
shlb
je
cmp
cmp
xchg
ja
and
or
and
push
sub
je
adc
mov
bound
loopne
cmpsb
cmp
jmp
xlat
cmp
mov
or
push
xchg
sbb
pop
inc
sub
insl
pop
fbstp
cmpsb
pop
popf
pushf
add
pop
mov
stc
dec
lods
pop
outsl
sub
mov
add
movsl
and
enter
or
fidivl
mov
fistpl
movsl
push
jae
shlb
push
inc
push
mov
jle
or
popa
and
or
in
add
in
xor
xor
cld
movsl
fdivl
and
fdivs
sbb
and
imul
sub
inc
cld
imul
sbb
inc
push
xchg
int3
inc
shrd
jns
sub
pop
popa
sub
cltd
dec
hlt
je
cmp
lock
or
mov
mov
gs
popf
jmp
rcrb
lods
push
sub
aaa
cmp
lea
xor
mov
int3
xor
pop
mov
call
arpl
push
push
rorl
dec
adc
pop
or
in
imul
and
outsb
jo
adc
andb
inc
psubsb
loope
jns
adc
movsl
mov
jge
dec
push
fs
mov
mov
push
jcxz
mov
and
cmp
xchg
pushf
dec
jecxz
push
fadds
push
sbbl
int3
loope
mov
xor
fmulp
push
outsb
sub
push
mov
fchs
push
adc
popf
repz
imul
lret
push
inc
and
fcoml
imul
scas
mov
xchg
xor
jl
daa
cmc
in
jle
in
cld
jo
or
sub
fs
test
xor
loope
fisubl
imul
xlat
cmpsl
adcb
mov
int
pop
xor
push
loop
and
pop
movsl
das
mov
xor
rorb
gs
xorb
pop
sbbb
mov
xor
rorb
out
and
xchg
loopne
add
rorb
dec
adc
push
push
sti
dec
incb
dec
pop
loopne
in
push
push
sbb
mov
cltd
xchg
cmp
pop
paddusw
adc
movsb
xchg
push
outsl
movsb
mov
mov
je
jb
sbb
mov
sub
insl
xlat
jmp
shll
or
nop
jb
jmp
popf
fiaddl
bound
mov
shll
pushf
jb
cmpl
mov
cmpsl
jbe
jae
lret
inc
sub
lock
push
leave
int3
and
mov
jb
mov
dec
sub
sub
sub
sub
cmpsb
add
ljmp
insb
insb
add
add
adc
jae
fimull
sahf
inc
add
adc
sub
mov
pop
mov
fldenv
icebp
sbb
inc
mov
outsb
push
test
adc
push
mov
add
sub
adc
xchg
out
jo
sub
mov
jmp
and
mov
fcoms
xchg
jbe
daa
xchg
ror
jbe
jnp
push
sub
adc
xor
xchg
and
jb
fs
out
out
iret
cwtl
cmp
dec
and
mov
aad
hlt
shlb
sarb
stos
outsl
fyl2x
fnsave
xor
cld
es
jae
mov
sub
lock
in
sub
pop
loop
sub
arpl
or
sarb
dec
mull
in
jecxz
xor
xor
sbb
insl
hlt
pop
mov
mov
imull
adc
loopne
adc
int3
rolb
xchg
xchg
adc
pop
data16
cmpsl
rcr
insl
add
adc
notl
mov
lods
and
pop
add
cmp
mov
pop
je
lds
insb
add
shrb
out
pop
cmpsb
dec
pop
jnp
fldcw
cmc
or
das
dec
lds
push
push
mov
js
subl
mov
or
adc
movsl
xor
sbb
fmuls
adc
pop
mov
daa
addb
sbb
sbb
xchg
adc
push
pop
jecxz
or
lcall
scas
jle
push
fndisi(8087
testb
mov
push
cmp
in
cmovno
out
roll
fsubs
repz
dec
aam
jno
je
rorl
scas
xor
iret
jb
xor
dec
cs
fwait
push
and
repnz
aad
push
hlt
mov
lret
mov
lds
xor
in
test
jae
jl
repnz
xor
shlb
fdivrs
das
xor
sbb
pusha
mov
test
pop
jg
or
mov
add
mov
adc
jo
push
sbb
push
sarb
xlat
nop
xorb
and
jl
push
jp
sub
add
xchg
pop
push
in
push
stc
dec
adc
lods
cmp
or
lahf
insl
or
in
rcr
adc
leave
and
fwait
or
ss
pusha
lcall
jne
leave
mov
jecxz
pop
stc
das
push
lahf
cmp
lea
aaa
movl
add
cmp
inc
xchg
adc
loop
hlt
sbb
and
push
roll
pop
pop
inc
pushf
xchg
mov
sti
mov
out
jg
je
xor
arpl
in
mov
mov
xor
lds
cmpsl
pop
mov
push
data16
leave
adc
fdivrl
sbb
jl
repnz
test
add
pusha
mov
test
shlb
sbb
mov
pop
jecxz
fcomps
cld
stos
push
insl
in
iret
pop
pop
or
add
rorb
fcoms
jne
and
std
insb
adc
rclb
mov
sub
iret
loopne
push
sub
insb
mov
lret
jne
mov
aad
push
outsl
cmp
out
inc
js
daa
jo
fistpl
cld
mov
dec
jp
aaa
shll
pop
sbb
mull
fwait
pop
jbe
push
or
sbb
out
push
pop
jo
fmull
stc
pusha
ds
pop
std
pop
ret
outsb
adc
pop
daa
dec
push
in
pop
inc
shlb
sti
and
aam
dec
lock
push
xor
push
fcmovbe
lahf
add
mov
mov
aam
repz
mov
out
aaa
std
xchg
rolb
mov
lods
addr16
lods
mov
xor
pop
sub
and
lret
and
sbb
insb
daa
inc
xchg
rcrl
jp
les
mov
mov
inc
push
mov
sub
push
or
push
popl
dec
xchg
mov
dec
jae
pop
or
enter
adc
push
sbb
aam
mov
pushf
xor
aaa
hlt
push
dec
mov
push
int3
mov
mov
mov
sti
dec
jecxz
fcmovnbe
dec
pop
xchg
lret
mov
fwait
adc
iret
pop
inc
mov
shll
inc
shlb
xor
dec
dec
xchg
shlb
mov
lock
ds
mov
lods
add
inc
jnp
mov
fdivrp
repz
push
dec
imul
popf
cmp
pusha
fistpl
movsl
or
cmp
cmp
fwait
adc
dec
mov
push
and
aad
into
icebp
mov
js
pop
lock
mov
dec
xchg
into
mov
ja
jecxz
out
cld
pop
pusha
push
ud0
push
dec
stos
stos
mov
jbe
ret
cmp
jbe
dec
mov
lods
or
cmp
rcl
lret
das
jl
dec
loopne
in
cltd
arpl
repz
mov
push
lcall
negl
orl
leave
mov
mov
push
sub
push
inc
popa
je
hlt
aaa
mov
scas
popl
push
cwtl
mov
repnz
pop
sbb
imul
es
out
call
inc
and
call
hlt
inc
adc
mov
cld
mov
outsl
push
mov
ficomps
lret
aam
and
mov
dec
inc
sub
and
adc
popa
lcall
hlt
mov
out
lods
jp,pn
adc
scas
inc
dec
jno
out
gs
mov
cld
jnp
push
pop
xchg
add
bound
mov
shlb
or
push
pop
sbbl
dec
jle
push
lock
mov
lahf
sub
pop
add
fcompl
push
loope
and
cmpsb
sub
in
stos
out
outsl
pop
pop
adc
adc
rol
punpckhdq
out
lcall
dec
fcomp
sub
aaa
ja
pop
inc
nop
popf
les
daa
loopne
push
rcr
pop
push
or
cld
stc
jo
add
pop
rorb
sbbl
arpl
xchg
gs
hlt
inc
leave
mov
inc
in
mov
add
out
pop
lret
sbb
cmp
push
xchg
and
cmp
push
mov
repz
xchg
add
loopne
ja
add
mov
push
pop
dec
and
sub
in
fldenv
or
jl
xor
test
fs
andl
xchg
dec
js
scas
jnp
outsl
jno
out
lret
push
jp
imul
or
movsb
fnsave
sti
xor
fs
push
lock
push
sti
cmc
xchg
lods
mov
sub
push
mov
and
lock
xchg
fsts
sbb
push
imul
xchg
xor
push
movsb
sahf
dec
sbbb
cli
loop
mov
les
dec
jne
add
shr
xchg
sbb
and
mov
rol
mov
lock
enter
cmp
test
dec
lods
xchg
lea
push
std
lock
add
jmp
popa
rorb
xorl
aas
or
jo
dec
ret
stc
stos
call
add
xlat
lret
push
addr16
cli
cwtl
das
mov
lahf
icebp
mov
sbb
mov
stc
sbb
jae
inc
js
int3
add
das
fsubl
push
std
mov
repnz
adc
filds
jbe
out
cmp
sbb
jbe
sub
mov
pop
jecxz
xchg
push
push
sbbb
push
xchg
outsb
push
enter
repz
pop
adc
daa
or
pushf
sub
pop
ret
fnsave
scas
cli
arpl
mov
add
into
add
inc
xor
js
jns
lods
add
fwait
sbb
fst
jecxz
divl
cmpsl
das
inc
mov
or
popa
rorb
stos
mov
js
mov
in
imul
ret
pusha
lahf
xchg
sbb
outsl
pop
push
xor
sub
xor
mov
cli
cld
adc
adc
xchg
int
imul
xor
ret
test
clc
sbb
stos
lret
pop
xor
pop
cmp
daa
xor
jns
sub
push
cmp
cmpsb
sti
mov
jle
andl
xchg
xchg
scas
add
mov
mov
or
pushf
mov
leave
int
xor
inc
inc
adc
sub
pusha
xlat
dec
stos
push
mov
popa
test
out
mov
bound
bound
jg
xchg
dec
push
mov
pop
pusha
mov
loopne
dec
sbb
cmp
inc
add
lods
out
jno
cwtl
lret
pop
mov
or
call
mov
call
enter
and
dec
cmp
sarb
testb
mov
pop
orl
mov
test
mov
ss
cmp
mov
idiv
cmp
dec
sub
cli
and
dec
inc
hlt
cmp
pop
mov
jmp
dec
pop
add
fs
sub
xchg
movsl
sub
rol
imul
cwtl
aaa
xor
push
push
sub
and
lret
mov
xlat
mulb
loop
add
pop
ret
sbb
in
shlb
mov
mov
rcr
les
lock
lods
shll
bound
cmp
or
bound
std
outsb
xchg
cmp
add
aam
aas
lcall
or
ffree
repnz
imul
inc
repz
mov
lahf
sbb
test
jmp
or
mov
insb
jmp
gs
call
dec
mov
adcb
scas
jae
pop
cmp
arpl
sbbb
dec
push
movsb
pop
adcl
iret
stos
movsb
test
call
and
lds
and
inc
dec
adc
aam
cmp
pop
das
pop
sar
mov
aad
es
loop
cld
adc
repz
xorb
mov
dec
mov
imul
push
jnp
test
mov
mov
stos
mov
cmp
xor
cmp
and
pop
test
into
cwtl
cmp
push
and
adcl
test
stos
mov
jl
outsb
push
push
jns
and
cmp
mov
mov
dec
sub
sub
fisttpl
and
add
ljmp
sti
es
into
popf
fwait
clc
fidivrl
dec
cmpsl
mov
inc
scas
and
inc
jae
cmc
cmp
sti
sub
add
div
or
jle
out
and
inc
pop
aad
fs
cwtl
icebp
push
dec
cmc
lcall
jl
rcll
je
ja
mov
xor
mov
outsb
mov
test
xchg
pop
and
xor
stc
xor
mov
lret
jns
cmp
xchg
mov
xor
cmp
mov
adc
mov
lods
je
xor
inc
lock
push
sub
dec
fisubs
fs
mov
sub
jp
pop
int3
sqrtps
add
inc
push
mov
xchg
adc
incl
pop
pop
jns
test
adc
xor
sbb
mov
and
xchg
jmp
inc
push
movb
and
in
and
sar
les
jno
outsl
outsl
mov
push
xchg
loop
mov
in
xchg
push
and
adc
and
scas
pop
in
mov
adc
enter
out
ja
xor
xor
and
mov
add
orb
test
or
sub
adc
xor
pop
add
and
cs
cmp
in
inc
adc
cmp
mov
xchg
jmp
xchg
or
push
addr16
xchg
popa
jle
push
dec
inc
or
stc
pop
int3
add
sbb
sub
fdivrl
push
movsl
fwait
xorb
xchg
mov
pop
lcall
rolb
push
xorl
bound
lods
stc
bound
in
mov
mov
xor
gs
sub
push
dec
cmp
push
dec
cld
mov
int3
mov
out
sub
jecxz
adc
outsl
pop
sub
imul
or
cld
and
push
adcl
out
mov
push
int
xacquire
xchg
add
xchg
or
lcall
ret
enter
dec
divb
jae
lret
fisubrl
or
and
jge
movsl
out
jge
sahf
movsl
mov
mov
int
cmc
dec
pushl
sti
xor
je
add
mov
fld
pushf
int
lahf
mov
inc
xchg
je
popa
scas
fiadds
mov
and
rcr
addr16
and
aad
or
ret
or
pop
dec
ret
inc
popa
fbld
fimuls
sbb
pop
push
xchg
std
jg
sbbl
sahf
pop
dec
xchg
xchg
pop
push
subb
xorl
push
loope
xchg
mov
xor
dec
cltd
pop
jns
xor
mov
jp
push
jnp
xchg
fldenv
and
and
sub
loopne
outsl
mov
rclb
sbb
ffreep
cwtl
sbb
jp
fstps
ret
jno
aaa
adc
xchg
sbb
fildl
lret
cmpsb
push
std
mov
loope
popa
mov
js
add
repz
xchg
or
jl
clc
out
stc
sbb
sub
pushf
out
inc
jb
xor
adc
push
jbe
shrb
mov
movsb
pushl
xchg
out
jbe
inc
xchg
mov
xchg
dec
insb
mov
inc
pop
clc
dec
jecxz
std
orl
mov
in
mov
inc
cmp
fisubrl
pop
ljmp
mov
add
mov
pop
or
aas
mov
add
movsl
adc
mov
data16
jne
dec
vaddss
insl
fbstp
call
mov
stos
sbb
jmp
sbb
and
aaa
or
rol
in
clc
pop
adc
jo
icebp
into
fisttps
add
mov
pop
xchg
jp
sub
or
pushf
mov
ss
int3
pop
jno
sbb
xchg
push
pop
mov
pop
popa
js
sbb
inc
daa
std
pusha
mov
sub
mov
push
flds
arpl
push
xor
inc
xchg
xor
push
shl
mov
jg
xchg
sub
push
mov
mov
insb
fwait
jbe
shl
sbb
mov
sti
cltd
dec
bound
jp
xlat
sbb
push
mov
arpl
and
cmp
rcrb
rcrl
fcmovnb
in
cmpsb
ret
inc
add
stc
jns
pop
mov
push
and
dec
xor
cli
ds
movsl
scas
rcr
or
test
ljmp
in
jne
adc
mov
iret
aas
sti
xchg
adc
mov
mov
fmul
mov
mov
dec
push
cmpsb
in
mov
sbbb
es
sbb
in
xlat
push
mov
dec
jne
mov
dec
fadds
push
sub
aas
sub
jno
cmpsb
cli
sbb
sbbl
mov
sbb
dec
fsubrl
inc
adc
cmpsb
pop
in
adc
stos
push
ds
fwait
outsb
jmp
pop
jns
mov
in
sub
inc
add
cld
ret
nop
adc
shr
aas
jae
inc
fwait
inc
cmp
dec
adc
jg
repnz
add
mov
notb
sahf
dec
cmpsl
sahf
iret
cmpsb
in
push
idivl
cld
cmc
rorl
sbb
leave
arpl
jae
inc
sbb
and
imul
mov
rorl
sbb
leave
arpl
jae
inc
sbb
and
imul
mov
rorl
sbb
leave
jae
inc
sbb
and
imul
mov
rorl
add
leave
pushf
mov
push
icebp
mov
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
pop
std
cmp
pop
xor
add
push
iret
inc
fbstp
jae
jg
dec
ret
pop
xor
add
push
iret
inc
fbstp
jae
jg
dec
ret
pop
xor
sub
fwait
sbb
das
mov
repz
jecxz
pop
dec
cmp
push
enter
daa
fiadds
cmp
pop
jg
push
push
loopne
xchg
addr16
xor
fistps
das
jbe
push
iret
mov
jmp
lods
cmp
hlt
scas
dec
sub
inc
in
mov
shr
ljmp
shlb
or
outsb
rep
sub
pushf
xor
lea
decb
ret
stc
fnstcw
adc
ret
ljmp
daa
popa
mov
dec
stos
fwait
aam
arpl
movsb
and
dec
fisubl
dec
scas
jmp
inc
lahf
dec
adc
push
fisubrl
fucomip
das
mov
pop
rep
jecxz
rorl
pop
xor
add
push
iret
inc
cltd
cmc
inc
lret
dec
out
lahf
add
das
jb
daa
jo
outsl
icebp
push
orb
pop
dec
pop
mov
ret
dec
mov
push
shll
ret
pop
push
ljmp
push
xorb
and
dec
cli
jnp
imul
jecxz
rorl
pop
xor
add
push
iret
inc
fbstp
jae
jg
dec
ret
pop
xor
add
push
iret
inc
fbstp
std
cmpsl
into
sub
fsubl
pop
mov
jnp
aam
fsqrt
rcl
xchg
fimull
aas
in
jmp
cmc
xchg
popf
xor
rcrl
in
jle
in
pop
inc
jg
ret
xlat
imul
or
mov
sbb
cmp
push
fiaddl
dec
aad
add
inc
iret
push
fs
xlat
jo,pn
inc
aaa
out
pop
lahf
sub
mov
push
fmulp
sbb
js
mov
or
ds
mov
mov
xor
daa
jns
loop
outsb
mov
sahf
cmp
test
pop
call
ss
stos
jnp
sarb
fistpl
mov
fxch
or
repnz
add
xor
jnp
dec
insb
mov
xor
add
sub
inc
add
enter
pop
dec
push
dec
loope
lock
fucomip
sar
sbb
jbe
cltd
rolb
imul
mov
loop
movb
mov
sbb
addb
pop
lret
dec
insl
jge
cmp
and
ret
mov
and
xchg
dec
and
shll
dec
dec
scas
fmull
or
aaa
lret
in
ret
out
sub
rclb
dec
das
inc
leave
jecxz
data16
ds
xor
push
int
aaa
addb
jmp
mov
jmp
stos
dec
daa
ror
xor
je
adc
xchg
loopne
popa
xor
xchg
cmc
adc
addr16
ds
jmp
cmp
andl
xchg
push
dec
cmpsl
movsl
add
xchg
je
hlt
cmp
popa
fisttpl
push
ljmp
sbb
jge
pop
data16
mov
inc
xor
inc
jp
xchg
lods
cltd
bt
fs
cmp
cmove
fiaddl
cmp
push
pop
andb
or
and
push
sbb
ja,pt
das
push
inc
or
lea
cmp
iret
push
rcll
mov
adc
mov
cmp
jne
sbb
mov
xor
and
and
sub
xchg
push
daa
sahf
jl
push
mov
ljmpw
sbb
sbb
push
out
stc
out
pushw
movsb
dec
dec
ds
es
or
mov
jo
fstpt
in
push
ffreep
dec
imul
adcb
out
xchg
and
add
xchg
inc
sbb
dec
rcrl
fistpl
xchg
jbe
add
pop
inc
mov
mov
push
shl
or
or
sbb
out
shrb
ljmp
adc
push
mov
mov
mov
or
pop
mov
cwtl
push
sbb
nop
sbb
testl
call
jle
sub
stos
and
cmp
mov
aas
mov
cmc
push
inc
mov
sti
sub
jl
jno
je
in
idiv
sub
insb
call
rorb
mov
test
je
jmp
mov
movsl
test
mov
jp
push
pop
fimuls
or
enter
push
in
inc
rorl
sub
out
jae
mov
jb
jns
imul
jmp
sub
mov
cwtl
mov
xchg
std
sbb
into
mov
inc
fadd
das
loopne
and
jno
call
lock
cmp
js
rcrb
xchg
jp
pusha
pop
out
mov
jno
cmp
push
pop
sbb
xchg
in
fmuls
xor
push
mov
dec
in
mov
cmovo
pop
and
scas
ss
icebp
and
out
and
iret
xchg
adc
jnp
push
cmp
insl
pushl
lret
xchg
andl
faddl
inc
push
dec
pop
getsec
rcll
xlat
add
repnz
cmc
lret
test
jge
pop
sbb
adc
and
fisttps
or
xor
sub
fnstenv
jecxz
and
push
xchg
xchg
mov
sub
nop
test
decl
iret
cli
xchg
mov
clc
sti
fisttpl
out
jo
std
mov
sub
pop
lea
sub
js
jns
mov
shrb
mov
orl
arpl
sub
mov
in
push
add
mov
inc
push
sti
cmpsl
lods
mov
hlt
mov
push
pop
add
mov
aam
mov
aam
shrb
sbb
shll
mov
sbb
mov
out
js
lock
lea
sbb
fcomps
cli
mov
loope
cmp
aas
jmp
adc
cmp
out
mov
out
mov
sahf
push
mov
out
add
jmp
repnz
xor
push
stos
sbb
cli
and
pop
sub
pop
push
and
mov
sbbl
cli
push
call
push
sarb
addl
cli
int3
lret
hlt
popf
mov
fdivrs
and
mov
sbb
xor
aas
es
fisttps
das
push
inc
mov
xor
add
out
cmc
sarb
je
cmc
add
insl
mov
mov
mov
mov
leave
jno
stc
out
xchg
push
jecxz
xchg
cmp
jb
or
inc
xor
xor
in
xchg
leave
ret
iret
sub
xchg
repnz
add
lds
iret
test
nop
fildll
xchg
push
xor
dec
mov
je
cmpsl
fidivl
pop
clc
push
out
mov
xchg
mov
dec
adc
mov
push
inc
pop
stc
or
sti
mov
jno
sub
xchg
std
scas
jge
mov
lret
pop
enter
pop
cmp
daa
out
scas
insl
mov
leave
ss
bound
or
inc
or
scas
jo
insl
and
lods
popa
inc
pop
aaa
jbe
lods
aad
add
repnz
mov
js
mov
jno
xlat
push
jg
push
sbb
fptan
inc
sbb
cmpsl
dec
sahf
lea
lret
or
xchg
into
pusha
inc
aaa
mov
sbb
mov
arpl
loopne
nop
jmp
nop
lret
sub
fs
mov
aaa
sbb
xchg
jne
andl
pusha
lret
and
mov
sarb
sub
cmp
lds
xchg
cmpsb
test
xor
js
arpl
sub
es
stos
add
dec
sbb
xchg
out
jns
or
dec
fldl
push
jae
iret
xor
int3
and
int3
mov
cmc
or
cmp
inc
cmp
mov
push
or
jns
inc
aam
lahf
jmp
stos
adc
sbb
mov
jmp
sub
mov
fcomps
idiv
test
lds
xchg
xchg
pop
sysenter
pop
xor
pop
sub
popa
dec
mov
fidivl
pop
in
into
inc
inc
ret
nop
adc
inc
subb
mov
push
fcompl
adc
gs
fwait
into
xchg
fwait
jbe
mov
xchg
dec
lcall
sbb
aad
divl
pop
pop
and
fidivrs
insb
jo
push
fcmovnu
sub
mov
popf
fcompl
rcrb
icebp
sub
fnstsw
mov
pop
inc
mov
cmp
sbb
push
je
adcb
loope
adc
pushf
insb
rclb
mov
cmp
iret
xchg
movsb
pusha
fmuls
pop
andb
xor
and
mov
jnp
pop
mov
xchg
sbb
cmp
sti
xchg
movsb
les
mov
imul
pop
nop
pop
inc
hlt
ficoml
imulb
or
adc
out
test
fs
aaa
push
lret
cmp
jb
xchg
adc
test
xor
iret
or
mov
inc
fidivrl
fwait
test
fstl
jmp
add
adc
jbe
push
jb
dec
cmp
rcrb
jb
pop
test
or
mov
sbb
in
push
or
dec
and
cs
adc
call
gs
repz
lea
xor
fs
sti
lods
dec
cmp
pushf
fdiv
sub
push
mov
arpl
dec
testl
in
idivb
test
jbe
adc
repnz
sbb
xchg
inc
push
xchg
incb
or
pop
popa
stos
sarb
inc
faddl
mov
ljmp
xor
add
outsb
inc
jbe
fcomp
std
dec
jo
les
mov
xlat
rorb
shrl
and
adc
xor
cwtl
ret
stos
or
or
dec
rcll
lcall
xchg
xchg
stc
cwtl
testl
xchg
or
inc
loope
xor
jg
xchg
iret
dec
mov
jp
xlat
inc
cmp
fld
addr16
push
enter
fcoms
jns
test
test
mov
ljmp
mov
lods
out
shll
inc
jo
inc
pop
lret
insl
ja
scas
aaa
lcall
jbe
xchg
pop
xor
jnp
inc
push
icebp
and
outsb
cwtl
or
inc
push
cmp
xchg
push
data16
push
push
add
cmp
adc
cmp
lcall
andb
push
add
mov
mov
pop
hlt
outsl
cmpsb
cmpl
movsl
repz
loope
sbb
ss
ds
fistpll
mov
lret
or
cmp
call
jns
test
in
dec
adc
sub
pushl
mov
cld
ficoml
xchg
and
xchg
sbb
xchg
fnsave
xor
jb
je
jg
insb
test
loop
mov
cmc
and
les
test
dec
mov
cmp
jo
addr16
mov
push
shlb
sar
dec
mov
ret
pushf
scas
call
std
xchg
inc
jmp
pop
js
adc
test
jp
push
pop
or
out
dec
pop
repnz
in
sub
add
adc
mov
popf
mov
pop
cmpsb
xor
inc
inc
fistpll
xor
cmp
notl
in
cmpsl
inc
sub
frstor
xor
jo
data16
enter
fwait
mov
xor
nop
sub
out
jg
or
sub
adc
int
scas
push
jno
jge
cmpsl
inc
test
dec
add
push
cmpl
mov
sar
sub
xchg
push
adc
lods
adc
je
fidivrs
inc
mov
mov
xchg
pop
call
divb
sbb
and
cmpsl
std
xor
dec
js
icebp
or
inc
mov
jae
gs
jne
dec
mov
jnp
ror
adc
test
inc
push
xchg
xchg
jb
or
cmp
aad
mov
out
sub
jbe
adc
xchg
testb
subl
cmp
mov
inc
in
or
into
jb
jmp
adc
pusha
out
sbb
pop
insl
in
sub
movsl
push
in
dec
jb
popf
inc
inc
xlat
dec
fs
fisttpll
fisubl
ss
dec
addr16
lock
jl
dec
adcb
into
xchg
repnz
pop
adc
sbb
mov
mov
mov
es
cmp
addr16
dec
push
negl
jecxz
inc
mov
sub
imul
aaa
insl
in
add
ficompl
test
imul
adcb
clc
sub
adc
mov
test
pop
and
shll
xchg
in
jne
or
and
push
jecxz
push
push
inc
loope
push
or
hlt
das
in
das
sbb
ret
adc
decb
iret
paddd
outsb
pop
js
or
ret
inc
stos
pop
les
mov
pusha
roll
sub
adc
jmp
fidivrl
rcl
or
pusha
push
popf
mov
xchg
aas
and
inc
call
pop
jnp
mov
pop
neg
xor
and
jae
idivb
add
push
imul
in
mov
jbe
jno
negl
mov
out
mov
xorb
xchg
gs
repnz
cmp
cmp
pusha
push
pop
pop
ret
imul
cmc
lcall
push
mov
sub
push
aaa
rorl
sbb
adc
cli
pop
xor
xchg
ficoms
ret
mov
push
jl
sarl
mov
push
into
mov
mov
mov
and
incb
cmpsl
fsubrp
dec
push
xor
inc
mov
push
in
cmp
xchg
stos
add
aas
js
add
mulb
adc
jmp
dec
adc
and
pop
out
shlb
sub
fwait
xor
stos
inc
les
add
incl
cmp
mov
mov
sahf
stos
sub
adc
xchg
cmp
pop
divl
sbb
js
mov
push
lds
aad
pusha
xlat
aam
or
jmp
adcl
and
pop
xchg
inc
punpcklwd
cmpsl
in
sub
scas
xchg
sbbb
clc
dec
push
call
mov
mov
push
cmpsl
into
ljmpw
push
out
shlb
dec
jbe
sub
addl
dec
or
je
dec
inc
imul
iret
jl
lea
mov
xchg
cltd
sub
push
imul
mov
mov
pop
fstl
scas
cmp
pop
std
ljmp
lods
jmp
sbb
mov
xchg
cmp
fidivl
out
push
pop
fldcw
or
and
arpl
and
outsb
pop
mov
lcall
fisubrl
cmp
dec
and
jle
push
in
pop
dec
sbb
hlt
sub
xchg
mov
mov
xor
lods
movsb
clc
sub
pop
mov
sub
inc
sarl
sbbl
rcrb
jl
mov
mov
xchg
out
hlt
mov
ficoml
pop
xorb
hlt
inc
lock
xor
vpandn
add
das
cmp
sbb
das
fsubrp
add
lcall
cmp
int3
popa
in
sub
out
xlat
sub
or
and
cmp
sbb
lock
push
adc
popa
mov
fdivrl
rcll
int3
sbb
repnz
xchg
aad
inc
mov
add
sbb
add
jbe
jnp
xchg
mov
and
daa
int3
repz
push
incb
push
mov
cli
das
and
mov
xor
push
pop
xchg
adc
lock
push
cmpsb
or
push
out
sti
lcall
xor
cmpsb
or
push
mov
out
cmp
mov
sbb
dec
out
ror
pop
and
std
aaa
dec
aaa
sub
ja
dec
cmpl
push
jg
loopne
out
lret
orb
mov
in
aaa
inc
and
int
pushf
pop
fs
mul
ds
jl
and
mov
mov
lcall
xchg
jns
inc
mov
daa
nop
fistps
sub
and
xchg
xor
loope
test
cwtl
out
lea
jae
inc
push
and
sbb
mov
push
ret
mov
pushf
cmp
mov
sub
jo
push
jo
xchg
scas
sub
add
pop
stc
cmp
cwtl
lret
fdivr
mov
loope
in
mov
pop
inc
cmp
fisttpl
in
les
fcoms
sbb
dec
insb
lods
mov
rcl
xor
mov
push
or
mov
sbbl
aaa
cmp
jle
jge
lcall
mov
lea
mov
ja
je
es
outsl
sub
add
data16
or
nop
and
inc
mov
popf
cli
repnz
stos
dec
cmp
cmp
and
mov
push
sbb
jmp
or
dec
fcomp
adc
adc
adc
cmc
jns
shlb
imul
push
fwait
mov
ret
xor
rclb
and
int3
pop
cmp
ljmp
pop
nop
push
rorl
notb
cmp
test
ds
in
popa
test
xor
fidivrs
or
or
divl
xor
lahf
std
cwtl
mov
mov
dec
lcall
int
jae
gs
xchg
andb
xor
adc
pop
xchg
loopne
stc
cli
jno
inc
sub
arpl
je
rcrb
mov
orl
xlat
push
add
push
xor
lock
xchg
lcall
sbb
fwait
xor
sub
lea
jl
loopne
cld
xchg
sub
xor
jo
je
inc
jg
sbb
outsl
adc
jnp
push
mov
adc
in
sahf
popf
and
ror
ret
bound
sarb
iret
inc
popf
xor
pop
popa
les
xchg
push
enter
in
xchg
loopne
mov
aad
xor
dec
lods
pusha
push
push
iret
addr16
loopne
jns
jae
dec
lock
ja
fmull
in
outsb
add
imul
and
aas
cmp
dec
inc
addl
mov
jp
push
push
or
fnsave
jge
and
pop
dec
repnz
pusha
pop
repnz
mov
ds
xchg
mov
push
in
add
shr
lods
dec
enter
cmc
inc
outsb
and
adc
mov
movsl
pop
cwtl
and
incl
cmp
sbb
jb
xor
clc
dec
push
loop
aaa
mov
cmpsb
js
push
pusha
sub
test
pop
inc
xor
test
push
ret
pusha
sub
sbb
test
repnz
and
push
mov
test
daa
dec
roll
cmp
fnstsw
mov
push
xchg
ljmp
mov
adc
mov
xchg
and
jbe
imul
fwait
ret
fsubrl
int
adc
hlt
imul
push
divb
call
xor
sbb
xchg
out
dec
mov
insb
dec
jl
es
push
nop
arpl
orl
mov
loop
sbb
xlat
push
frstor
jmp
cmp
mov
enter
xchg
fcomps
sahf
or
jb
pop
jne
mov
mov
outsb
mov
inc
aaa
popa
mov
jmp
jg
mov
popa
aad
dec
sub
xchg
push
in
sbb
mov
dec
fdivl
mov
and
std
cmc
je
dec
mov
fbld
cli
out
inc
jnp
loop
cmp
cmp
mov
loopne
cli
pop
shlb
ret
in
ret
ds
push
mov
xchg
mov
inc
push
fiadds
push
inc
in
lahf
mov
xor
enter
push
jp
lea
ljmp
xor
push
fisubs
or
pop
je
fstl
test
xor
aas
sbb
push
test
insb
popa
xchg
lods
or
push
repz
fisttpl
dec
test
push
mov
mov
sbb
test
sub
outsb
imul
lods
pop
inc
mov
mov
mov
push
inc
nopl
ds
scas
sarl
sub
bound
sbb
test
gs
add
loopne
jne
loopne
push
inc
add
jecxz
xchg
aaa
xchg
rcr
jbe
ds
bound
out
sub
push
mov
rorb
inc
and
rorl
and
lds
enter
mov
add
rclb
testb
or
clc
sar
lock
out
push
push
cmp
pop
xchg
bound
ljmp
push
popa
pop
scas
in
shll
push
sub
xchg
in
shll
in
sti
dec
test
xchg
jne
inc
adcl
inc
adc
inc
cltd
and
shl
hlt
ret
mov
add
orb
inc
shr
pop
sarb
cwtl
mov
xor
js
cmpsl
lock
in
mov
pop
jmp
mov
pop
call
popf
in
jecxz
push
sarl
push
popf
sbb
call
xchg
sub
stos
int3
lcall
mov
mov
push
push
sub
popa
jo
push
cmc
fs
inc
xchg
fs
sbb
mul
inc
insl
pop
sub
jns
xchg
stos
inc
pop
xchg
mov
cmpl
cli
xlat
ss
or
cld
sub
jne
push
xor
xchg
sbb
mov
mov
push
bound
xchg
xchg
fidivs
cmp
pusha
mov
int3
xchg
lds
pop
sbb
test
hlt
int3
test
test
dec
or
addr16
lahf
aad
mov
or
iret
xchg
test
pop
push
je
int3
mov
movsl
pop
out
xchg
push
mov
pop
adc
xchg
mov
testl
jle
xor
cmpsl
mov
xor
pushf
daa
arpl
aas
pop
cmpsb
add
ffree
pop
mov
in
mov
jne
jl
mov
xor
call
mov
sbb
lcall
popl
push
pop
mov
stos
out
test
cmp
adc
xchg
stc
sbb
aas
stos
push
sbbl
outsl
jecxz
rorl
pop
xor
add
push
iret
inc
fbstp
jae
jg
dec
ret
pop
xor
add
push
iret
inc
fbstp
jae
jg
dec
ret
pop
xor
add
push
iret
inc
fbstp
jae
call
iret
ret
mov
mov
addr16
lods
xor
push
hlt
push
in
sub
jmp
cmpsb
popa
mov
xchg
je
adc
mov
xor
and
aam
les
hlt
push
in
xchg
jbe
inc
mov
shlb
je
fs
testb
xor
and
int
fldl
in
push
cld
lea
inc
lods
push
mov
out
repz
inc
mov
mov
xchg
inc
sub
push
inc
mov
mov
addr16
pop
jae
mov
mov
in
ja
dec
and
stos
dec
mov
sbb
into
les
fsubl
ja
bound
cld
scas
int
and
cmpsb
push
out
rcrb
imul
loope
cmp
or
mov
xchg
pop
xchg
cmpsb
rclb
mov
mov
push
sub
xor
push
leave
cmp
add
inc
mov
ret
mov
mov
sahf
adc
sub
ss
or
outsb
xchg
mov
hlt
pop
cmp
repz
fwait
xchg
cmp
in
xlat
and
ss
in
push
in
xchg
jbe
inc
mov
mov
xchg
jge
or
sbb
cs
and
push
pop
andl
cmp
jmp
jno
push
stos
pop
mov
lods
jb
pop
mov
xchg
adc
inc
shrb
hlt
and
and
adc
lods
test
push
leave
push
push
aam
les
mov
inc
mov
movsb
cmpsb
push
mov
xchg
out
testb
and
aam
les
hlt
push
in
xchg
jbe
inc
mov
movsb
cmpsb
push
mov
xchg
out
testb
and
aam
xlat
mov
out
pop
jge
xor
mov
mov
out
mov
in
lock
aam
in
or
dec
mov
push
repz
sti
jp
fs
sbbb
sar
insb
push
leave
xlat
fwait
lds
imul
repnz
add
mov
imul
fs
lds
and
clc
jge
mov
adc
outsl
cmpsb
push
mov
sar
xchg
and
xchg
xor
data16
in
fildll
pop
stc
cld
testl
push
mov
or
hlt
xor
xor
rcll
cli
dec
push
pop
mov
pushl
push
inc
jb
lea
jl
push
push
stos
shll
imulb
ds
fwait
inc
push
or
xor
out
mov
daa
divb
xchg
out
pop
and
inc
movsb
enter
in
jns
les
aas
and
loope
push
in
fimuls
imul
jge
jge
xchg
ret
stc
insl
data16
insl
mov
aaa
mov
dec
jns
sub
dec
mov
pop
loopne
arpl
and
or
pop
pop
inc
repz
repnz
add
add
scas
int3
repz
mov
mov
inc
mov
cld
dec
ljmp
fmull
push
test
inc
call
scas
loop
in
adc
jg
mov
inc
dec
mov
pop
inc
int3
loopne
and
pop
push
jae
scas
fsubp
mov
xor
scas
rcrl
sub
pusha
mov
in
and
daa
mov
add
xor
call
lods
outsl
test
and
lret
shll
push
jne
jo
push
xchg
test
add
int
sub
dec
jmp
or
rcrb
pop
fiaddl
xor
cmp
je
ja
mov
xlat
sbb
jne
xor
pop
mov
and
mov
ret
shrb
push
repnz
cmp
xchg
loopne
dec
sti
pop
lods
xchg
sbb
imul
jmp
cmp
dec
test
mov
out
addr16
mov
fidivrl
dec
add
es
cmp
outsb
shll
xchg
jmp
and
in
sub
pop
clc
and
pop
cmp
lds
out
test
xor
inc
sti
jne
mov
inc
mov
rol
loope
rol
shr
pop
xchg
movsb
jp
add
rclb
adc
mov
daa
stos
jnp
push
jbe
adc
pop
mov
adc
jns
divb
inc
imul
icebp
adc
test
inc
adc
mov
jmp
cwtl
sti
jmp
and
push
adc
imul
popa
ret
out
inc
and
cmp
sbb
popf
enter
push
cld
pop
aaa
ljmp
repz
outsl
cld
arpl
push
adc
cwtl
add
data16
or
and
and
fbstp
jae
jns
mov
cmpsb
mov
sbb
insb
pop
push
and
dec
mov
aaa
test
lods
push
and
test
mov
mull
xchg
pop
sbb
push
mov
pcmpeqd
push
jae
add
mov
das
movsb
mov
inc
je
repnz
jb
jle
fwait
sbb
imul
and
cmp
lcall
jnp
push
lahf
fiadds
out
or
xor
mov
lgs
lods
mov
dec
cli
test
pusha
addl
mov
js
rcrw
das
mov
shlb
sbb
test
pop
mov
fdivr
or
push
test
jbe
aas
jg
inc
lcall
inc
mov
bound
xchg
adc
fsubl
pop
sbb
mov
add
cmpsl
ficompl
aaa
pusha
aaa
pushf
mov
mov
sub
mov
cmpsl
mov
stc
xor
cmp
pop
mov
mov
pusha
and
xchg
fidivrs
mov
std
mov
hlt
pop
fidivrl
and
testl
pushl
mov
test
push
pop
pushf
stc
sbb
sub
dec
test
cltd
imul
push
mov
out
pop
enter
add
jecxz
aam
cmc
pop
in
push
pop
fadd
inc
jge
in
test
cmp
cmp
sbb
sahf
xchg
xchg
push
and
push
addr16
xchg
sarb
or
stc
je
cltd
adc
jne
push
scas
sahf
in
jle
pop
test
cmp
cltd
lock
bound
arpl
cmpl
mov
mov
rclb
add
mov
je
ss
insl
int3
pop
sbb
pop
nop
fsubrl
jge
push
fildl
fwait
je
pop
int
add
lcall
adc
xor
test
sub
pop
xlat
aaa
pop
jl
sbb
into
mov
add
mov
lahf
push
out
hlt
sub
mov
push
adc
sub
mov
adcb
pop
fisttpl
pop
stos
sbb
ret
mov
aaa
fs
fcomp
adc
in
mov
lret
push
mov
rorl
test
or
rcrb
xchg
loop
mov
pop
push
inc
push
mov
jg
rorl
popf
dec
pop
dec
jae
add
mov
lods
jp
out
repz
inc
sub
mov
adc
mov
mov
dec
notb
lods
push
jbe
sub
pop
cmpsb
or
xchg
ltr
repz
test
dec
or
push
sbb
mov
inc
and
push
enter
sub
cmpsb
mov
sbb
in
add
nop
ljmp
mov
jle
sahf
push
push
inc
loopne
arpl
mov
xchg
and
sub
in
out
xchg
stc
pop
lock
mov
pop
fimull
stos
ss
or
push
lods
dec
js
xor
pop
sub
mov
sub
xchg
je
mov
jge
in
xor
and
dec
and
jns
popf
scas
cmp
std
mov
jbe
jg
loope
shrb
in
sbb
xchg
out
ret
sub
fstl
repnz
and
jo
mov
cmpsl
add
jnp
mov
dec
jp
aas
daa
mov
xchg
negb
sbb
mov
push
add
ret
xchg
shrl
xchg
sbb
xchg
pop
mov
test
andl
cmp
or
test
and
nop
nop
and
inc
fstl
fcompl
jno
fiadds
mov
dec
mov
out
les
lds
inc
movsb
pop
push
pop
leave
lea
push
and
repz
adc
adc
xchg
test
mov
or
mov
dec
shrb
movsl
lret
pop
in
mov
int
jmp
jne
rol
stos
sbb
pop
and
sbb
add
in
inc
pushf
clc
pop
outsl
test
adc
out
mov
jle
adc
mov
addr16
std
dec
adc
movsl
dec
movsl
pop
lds
push
push
dec
iret
xor
add
imul
std
dec
sarl
jo
rorb
lods
inc
notb
fucomip
test
je
pop
test
ja
pop
or
sub
fwait
add
and
pop
out
mov
or
and
jbe
xchg
fwait
adc
pop
sbb
iret
dec
jge
in
sub
mov
outsl
pop
enter
fwait
dec
into
ss
mov
xor
jecxz
fs
sbb
mov
lods
pop
repz
pop
xchg
out
pusha
in
xlat
int
movsb
mov
nop
lea
outsl
pop
dec
pop
lcall
or
mov
jmp
pop
add
pop
popf
dec
jnp
shl
stc
mov
sub
rcrl
add
jle
push
sub
inc
push
and
xor
shrb
mov
mov
lods
pushf
outsw
xor
mov
and
xchg
jo
fidivl
pop
adc
cltd
ljmp
cs
xchg
dec
mov
jecxz
loopne
movsl
sub
cltd
or
cmp
inc
pop
or
and
rclb
stos
sbb
cmpsl
pushf
decb
fidivrl
xchg
mov
sbb
or
push
push
mov
lahf
adc
inc
xor
add
push
sub
or
mov
cmp
test
int
xchg
pop
test
subl
sub
add
pop
add
ja
mov
dec
xchg
in
test
pop
daa
sbb
inc
jnp
addr16
push
sbb
push
add
adc
mov
cwtl
sub
add
inc
adc
call
je
or
mov
push
je
pop
mov
or
inc
jne
push
test
mov
xchg
das
dec
in
adc
xor
loop
lret
loopne
inc
push
test
lods
sub
sub
and
aas
js
out
pop
dec
fsubrs
icebp
mov
pop
xor
jae
fsubr
push
lcall
mov
in
and
xor
sar
push
pop
loope
adc
jecxz
movsb
icebp
cmp
mov
loope
adc
pop
dec
sbb
jp
fwait
xchg
sub
mov
mov
aas
add
cmp
push
adc
mov
rcll
adc
jbe
inc
pop
popa
or
adc
push
ret
inc
inc
loop
ss
int3
mov
or
mov
lret
gs
sub
cmc
mov
mov
lahf
xchg
mov
jge
loop
cmpsb
xor
in
jmp
test
lods
lods
loope
jb
outsl
push
insb
aad
jp
dec
es
push
add
xchg
inc
xchg
sub
lds
rcrb
jns
sub
mov
sub
mov
fistpl
inc
xor
mov
xor
push
lret
cmpb
inc
xor
xorl
xchg
fwait
testb
fmull
xchg
fs
or
data16
rclb
inc
test
in
std
aas
sbb
aas
js
stos
cmpsb
addr16
sahf
inc
adc
xchg
mov
ljmp
rol
inc
leave
fsubrs
add
rcrb
push
mov
mov
hlt
xorb
imul
and
pop
xchg
lahf
hlt
sbb
xor
in
int
dec
push
gs
je
and
and
stos
xchg
les
ficoms
add
xchg
or
mulb
and
sarb
pop
and
push
add
cmp
stc
jecxz
hlt
push
jnp
mov
cmpsl
xchg
or
xlat
pop
adc
scas
add
jbe
cltd
and
pop
jmp
or
test
in
mov
sti
add
fistpll
js
outsb
cwtl
and
loop
les
aas
addr16
popa
dec
jl
jne
in
push
mov
clc
adc
out
push
pop
bound
jge
lods
dec
xchg
pop
ds
mov
les
test
add
adc
sbb
movsl
shlb
pop
sbb
flds
aas
ss
fwait
in
cmp
loop
mov
mov
jo
jno
fnsave
aaa
xchg
subl
es
add
sbb
or
inc
and
and
mov
shl
sbb
push
sahf
cmp
cmp
lret
repz
mov
ss
into
mov
test
push
mov
stc
pop
cs
dec
inc
int3
cmpsl
push
call
push
sbb
insl
jne
mov
imul
xchg
cmpsl
xchg
cmc
insb
out
push
jmp
stos
xchg
sbb
jmp
jbe
sub
xchg
in
inc
cmc
imul
in
dec
inc
add
mov
stc
insl
daa
adc
push
xor
or
sahf
add
ja
jb
cltd
xchg
jmp
pop
fwait
rcrl
xor
fs
test
hlt
insb
js
inc
xchg
rclb
adc
test
rorl
sbb
ljmp
push
or
dec
loopne
jg
add
adc
mov
out
inc
gs
pop
mov
mov
and
je
lahf
adc
lock
lret
movsl
mov
fisttpl
mov
loope
and
push
push
sahf
adc
imul
xlat
sbb
lea
cld
setnp
arpl
cmpsl
data16
adc
xchg
push
push
mov
pavgb
jl
out
jecxz
mov
sarl
stc
dec
loope
std
fwait
mov
orb
nop
mov
in
repnz
push
outsb
sub
cmp
or
aam
or
xor
data16
mov
mov
dec
mov
js
call
mov
or
cli
mov
adc
mov
pop
or
mov
outsl
adc
dec
pop
mov
xor
cltd
ja
inc
jg,pt
std
aas
and
cmp
dec
and
xorb
pandn
adc
ret
push
pop
or
mov
lahf
adc
xchg
lcall
sti
call
jbe
rorb
movsl
stos
add
imul
loop
mov
fdivs
out
or
imul
fdivrs
lock
xor
jle
xor
in
sub
push
mov
mov
fdivl
enter
je
out
pop
push
aam
xor
int
pushf
push
xchg
jg
fistl
cmp
jmp
notl
cmp
shlb
push
sub
lds
cmp
mov
dec
jg
mov
or
inc
jne
paddq
loop
and
and
mov
mov
xchg
sar
cmp
out
inc
push
sbb
jo
mov
ret
sub
and
ret
ret
and
jp
xor
push
addb
imul
clc
scas
scas
push
lods
xor
fyl2x
lahf
rclb
lret
adc
insb
xchg
add
jne
outsb
leave
movsl
pop
inc
inc
ret
outsl
stc
sbb
arpl
mov
and
test
jae
pop
lds
adc
mov
xchg
jmp
mov
sbb
mov
cmpsl
stc
sbb
fs
push
sahf
add
xchg
cmp
push
sbbl
or
int3
dec
push
xchg
mov
das
inc
and
xor
arpl
mov
cli
repz
add
or
pop
subl
les
xchg
je
mov
mov
xor
cmpxchg
stc
sahf
adc
aas
hlt
jo
loope
jo
lret
jle
pop
sar
cmpsb
aam
mov
scas
jns
fstps
outsb
fnsave
sub
jnp
fsubp
test
fmull
or
neg
mov
pop
mov
fcoml
mov
sti
pop
loop
mov
idivl
xlat
or
mov
or
ds
cmp
or
inc
stos
adc
dec
in
ljmp
fisubs
ja
movsb
push
push
jl
dec
in
dec
js
insb
pop
pop
test
xchg
lods
loopne
xchg
repz
js
dec
loopne
xor
rcr
mov
mov
push
cmpsl
sub
push
push
add
adc
sub
sbbb
sti
dec
add
out
in
xchg
mov
sbb
cmpsl
out
rcr
popf
inc
mov
inc
push
adc
fbld
lret
cmp
push
sub
xlat
sbb
int3
inc
mov
and
jle
fadds
fwait
push
leave
fld
movl
mov
push
mov
xchg
repnz
push
add
loope
sub
inc
shrb
inc
pusha
sbb
lods
lret
lock
addr16
in
nop
dec
xor
imul
cli
andl
stc
sbb
iret
mov
lret
pusha
pop
and
je
jecxz
out
mov
dec
pop
sub
fstl
push
popf
add
xor
loopne
int
cmpsb
xor
pop
push
lahf
lret
mov
inc
repz
pop
sbb
dec
mov
nop
adc
xor
xchg
pusha
hlt
roll
clc
or
xchg
xor
push
out
sub
clc
mov
add
aad
fisttps
and
xor
scas
dec
dec
mov
lods
mov
push
adc
and
dec
dec
xor
cmp
pop
inc
mov
xchg
int
jb
dec
test
filds
ret
insb
es
shl
imul
scas
push
shll
sbb
fsubl
adc
stos
pop
aaa
outsl
sub
push
addr16
jge
jb
ljmp
mov
pop
lea
cmp
notb
addb
aam
add
testl
int3
mov
dec
test
push
dec
push
jb
outsb
dec
outsb
adc
enter
push
shll
xor
lods
xchg
aad
mov
push
cs
fucom
sbb
jnp
inc
xor
pop
outsl
lds
test
movsl
test
rcl
leave
jbe
or
adc
enter
sarb
popf
pop
push
movsl
flds
ss
loop
dec
test
test
mov
stos
mov
js
xchg
dec
int
mov
cmp
in
bound
adc
lods
loop
test
lods
sbb
call
add
popf
neg
sbb
cltd
popa
jmp
mov
jmp
sar
int3
jno
push
sub
leave
call
je
xchg
cmp
cwtl
adc
dec
nop
xchg
data16
sbb
jo
dec
out
lahf
push
insb
or
mov
sbb
jmp
out
mov
pinsrw
inc
sub
outsb
pop
mov
jg
loop
mov
or
dec
aam
outsb
dec
push
in
inc
mov
sub
cmp
push
jecxz
int
rclb
shr
in
add
sub
movsb
jns
outsb
faddp
cs
mov
mov
and
divb
mov
loop
sbbl
nop
pop
xchg
adc
pop
jmp
pop
nop
push
pop
xor
loopne
nop
mov
add
loop
jno
and
xor
and
and
pop
xor
mov
mov
mov
ljmp
adc
or
inc
jg
lods
out
test
xor
jle
loopne
cmp
addr16
dec
bound
push
and
lods
es
pop
mov
cmpl
in
shll
cmovl
adc
leave
stos
test
lds
enter
ds
iret
dec
jbe
roll
lret
push
dec
mov
xor
out
aam
fs
loopne
out
xchg
inc
cmpsl
sbb
insl
jns
shll
clc
xlat
jo
js
sub
into
push
mulb
xchg
dec
push
test
movsb
jo
mov
push
sbb
jb
pusha
jmp
mov
hlt
sub
rcrl
mov
fsubs
mov
out
and
popa
add
popf
or
mov
fistpll
mov
xchg
lods
ret
leave
cld
mov
dec
aas
popf
add
das
sub
adcl
mov
lcall
out
lods
ret
jne
pop
rolb
push
mov
sbb
push
inc
imul
gs
mov
movsb
mov
sub
stos
mov
push
jp
data16
jle
rclb
cmp
push
sub
xchg
lods
sbb
test
lret
mov
roll
scas
jae
pop
movsl
call
xor
cmpsb
scas
ret
and
dec
rclb
je
and
pop
shll
inc
sub
out
mov
dec
std
adc
jge
lea
pop
mulb
xorb
jle
aad
int3
loop
mov
stos
pop
adc
pop
and
lcall
inc
ret
inc
mov
inc
and
dec
mov
xor
jmp
arpl
and
push
dec
inc
mov
adc
lret
repnz
fcmovnb
xor
daa
add
sub
cmc
jl
pushf
and
inc
and
repnz
cmp
sub
sbb
cmpsb
int
push
push
and
inc
adc
inc
dec
sahf
xor
daa
xor
out
dec
inc
jge
jb
lret
xchg
and
jo
pop
popf
aaa
sub
in
and
aad
daa
pop
popa
mov
dec
mov
or
jmp
adc
sbb
pushf
xchg
jne
add
pop
enter
pusha
ud1
int3
add
dec
fstl
sub
test
mov
add
fadd
aas
mov
cmpb
mov
sbb
inc
cwtl
mov
jge
jge,pn
jmp
or
and
push
xchg
push
repnz
imul
cmp
cmp
or
dec
or
dec
add
outsb
iret
aam
lock
imul
jb
sub
or
push
pop
aaa
aaa
add
mov
es
mov
std
mov
pop
fsubr
dec
fcoml
call
sub
aaa
xchg
xlat
sbb
fildl
pushf
daa
fimull
jns
mov
lret
push
ljmp
xchg
jbe
inc
mov
movsb
cmpsb
push
mov
xchg
out
testb
and
aam
les
hlt
push
in
xchg
jbe
inc
mov
movsb
cmpsb
push
mov
xchg
out
testb
and
aam
les
hlt
push
in
xchg
jbe
inc
mov
movsb
cmpsb
push
mov
xchg
out
testb
xlat
and
shlb
rolb
push
in
xchg
jbe
inc
mov
cmpsb
push
mov
sub
xchg
adc
dec
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
loope
and
in
in
fnsave
or
mov
add
add
push
add
add
and
roll
add
iret
add
add
xchg
add
add
add
and
or
add
add
add
sub
xchg
add
roll
add
add
add
sbb
xor
jo
rolb
or
add
add
add
add
or
add
add
add
add
add
add
pop
add
das
add
add
add
add
add
add
mov
das
add
add
dec
add
add
add
sbb
xor
and
adc
push
add
add
add
add
cmp
or
xchg
add
add
cmp
jmp
or
pop
add
mov
mov
sbb
addr16
add
popf
add
add
roll
add
add
add
add
pop
add
add
add
add
and
jnp
or
add
add
add
add
add
add
adc
mov
add
xchg
int
roll
add
add
sub
flds
mov
adc
xor
imul
sbb
mov
add
add
add
add
or
mov
cmp
jbe
inc
add
add
add
add
imul
add
add
stos
add
add
add
mov
loopne
pop
add
add
add
add
add
into
add
add
add
or
add
add
add
lds
mov
loopne
loopne
addl
add
cmp
push
add
xor
jmp
mov
xchg
leave
add
add
pop
add
mov
inc
add
cmp
pop
add
add
add
loopne
scas
add
and
fldl
add
adc
roll
pop
add
mov
roll
sbb
push
add
add
add
add
add
jb
xor
adc
add
add
fwait
add
addl
mov
loopne
pop
add
add
add
add
mov
dec
add
add
add
add
incb
jne
sub
push
add
lret
add
add
loopne
call
add
cmp
ja
sbb
mov
add
pop
add
add
add
roll
add
add
add
add
pop
add
add
add
add
mov
add
add
addr16
add
add
add
add
flds
cmpsb
add
add
jbe
int3
add
add
add
add
push
add
add
add
add
add
add
fldl
sbb
push
add
add
add
add
cmp
out
add
add
add
add
imul
add
or
cmp
add
add
loopne
cmp
or
sahf
add
add
add
add
add
add
sbb
leave
add
adc
mov
sbb
and
out
add
add
jp
inc
add
add
loopne
push
add
and
dec
add
ret
add
add
add
add
add
add
add
dec
add
add
add
add
add
aas
add
add
add
add
add
loopne
push
add
add
add
xor
jle
sub
incb
mov
add
add
push
xchg
mov
int3
outsb
or
fwait
addr16
enter
push
shr
les
ret
push
inc
or
cmp
xchg
lds
mov
inc
je
iret
jp
jnp
push
nop
pop
add
cmp
push
xor
or
pusha
adc
adc
jmp
sub
cltd
sbb
dec
ds
mov
movsb
icebp
sub
std
sub
or
nop
mov
int
jo
or
rorb
lret
pop
mov
stc
aad
xor
push
adc
dec
xor
movsl
sub
popf
in
add
inc
fadds
mov
repnz
inc
stc
clc
call
adc
mov
imul
add
mov
rcrl
je
adc
mov
lods
es
xor
int3
in
and
popa
bound
lds
lods
mov
sbb
test
jecxz
xor
mov
cmp
je
rcrb
in
sbb
aad
push
xchg
int
jg
adc
inc
add
scas
adc
flds
add
mov
in
lods
pop
in
or
std
outsl
shlb
out
mov
es
gs
mov
flds
mov
xor
push
cwtl
pop
test
outsl
dec
test
lock
pushf
sub
xor
sbb
jae
std
adc
leave
rcrl
fcoml
hlt
in
ss
adc
cwtl
cwtl
push
ljmp
mov
in
pop
inc
mov
ja
cmpsl
pop
lock
sub
jns
insb
push
aaa
out
subb
scas
fsubrl
mov
lcall
call
fildl
aad
fistps
lock
int
xor
mov
mov
insl
mov
jp
cltd
jo
jae
sti
mov
add
in
sbb
in
insb
mov
mov
cmpsb
es
push
jno
andl
dec
shll
xchg
outsb
sub
test
dec
dec
jb
jg
jb
sub
mov
dec
inc
js
movsl
sbb
fnstsw
inc
sub
addb
jns
cmp
sahf
lds
aaa
jns
insb
adc
das
inc
test
ret
sarl
lahf
xrelease
mov
cmp
xor
fiaddl
xchg
jl
add
or
push
mov
fsts
jecxz
inc
lea
mov
add
xchg
pop
push
xchg
sarl
jns
xchg
inc
fwait
xchg
pcmpeqd
mov
jae
mov
inc
movb
in
cmpl
stos
xor
stos
movsl
xor
xchg
imul
je
xchg
sub
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
