call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
decb
pop
fisubrs
jp
pop
fidivs
jmp
jle
outsb
ficompl
dec
cli
mov
ficompl
stos
push
mov
fisubrs
jp
or
cmp
outsb
fisubrl
ljmp
push
stos
push
mov
fisubrs
jp
or
cmp
outsb
xchg
fmuls
push
iret
pusha
mov
lods
push
mov
fistl
mov
xchg
ljmp
xchg
and
jne
push
sbb
jnp
test
js
mov
mov
rorl
pop
stos
lock
push
pop
mov
popf
inc
push
loopne
mov
mov
mov
mov
mov
test
dec
outsb
mov
ret
out
jle
jle
rcll
add
push
push
or
add
lcall
or
insb
outsb
xchg
fisttpl
leave
mov
sub
stos
sbb
add
mov
inc
shrl
loope
mov
cmpsb
out
or
add
outsb
push
mov
out
pop
fisubrs
jp
or
cmp
outsb
ficompl
dec
cli
mov
lcall
xchg
shlb
pop
sti
dec
iret
dec
aas
cmpsb
push
cmp
out
jecxz
sub
std
or
clc
outsl
ret
inc
mov
sbb
or
insb
fisttps
aam
sbb
push
mov
sub
ficompl
dec
cli
mov
lcall
out
pop
fisubrs
jp
or
cmp
outsb
ficompl
dec
cli
mov
lcall
dec
dec
gs
ljmp
jge
inc
pop
rcrl
push
int3
mov
mov
fistps
daa
pop
push
cmp
xchg
cltd
std
fidivrs
inc
int3
imul
lds
and
int
aam
mov
push
fsubrp
sti
dec
pop
iret
js
push
mov
push
and
cltd
mov
stc
lods
lret
mov
cmp
jns
mov
xchg
push
add
xchg
fs
out
mov
push
mov
xchg
clc
aaa
inc
and
inc
mov
mov
mov
push
cmp
cs
add
fwait
les
mov
arpl
sbb
cs
add
cmp
sahf
sbb
int
test
inc
mov
fmull
divl
mov
je
xchg
sub
adc
js
test
pop
cmpsl
mov
gs
mov
call
rorb
dec
mov
push
sahf
inc
cmc
cmp
insl
popf
fs
dec
es
scas
xlat
outsb
sub
adc
movsb
daa
fs
push
cmc
xchg
imul
push
popa
jecxz
xchg
lret
xor
rorl
push
imul
push
dec
gs
adc
cmp
nop
stc
sub
mov
jl
sub
int3
and
pop
push
lods
in
sub
pop
pop
pop
lret
std
outsb
pop
insb
mov
sbb
mov
xchg
cmp
leave
pop
in
cmpsl
movl
mov
aaa
push
popa
lock
mov
mov
jg
or
iret
arpl
xchg
or
mov
xchg
lds
add
or
rcl
ljmp
insb
sub
push
out
iret
testb
mov
shll
xchg
lea
cwtl
rcl
ja
cmpsb
lods
push
cmp
shl
mov
adc
mov
pushf
cmp
sbb
es
not
inc
rorl
cmpb
scas
and
pusha
and
clc
out
in
arpl
fs
pop
int3
xor
add
cmpsb
scas
mov
xchg
aas
shrb
shll
cltd
fidivrl
mov
in
loope
push
imul
mov
push
dec
mov
fidivrs
lds
iret
push
outsl
fs
scas
out
cmp
mov
push
stos
pop
fsubr
xor
imul
adc
sub
shlb
movsl
inc
pop
cmpsl
inc
inc
popa
cmpsl
or
jno
inc
xor
ljmp
add
push
shlb
daa
pop
jle
int3
add
jb
std
mov
mov
mov
dec
pop
fiaddl
cwtl
adc
adc
jl
jns,pn
andb
lea
out
mov
nop
dec
repnz
int3
xor
testb
pushf
cltd
mov
pop
leave
rcl
mov
xor
imul
pop
lret
clc
lret
fs
push
sbb
mov
fistps
push
xchg
sub
jb
push
out
pusha
dec
cmpsl
xchg
adcb
nop
mov
popa
sub
push
pop
fs
nop
outsl
js
cmp
fdivrp
insl
ljmp
imul
or
xchg
pop
cmp
in
inc
xorb
dec
inc
iret
mov
test
add
adc
and
xchg
mov
insl
imul
les
int3
xor
inc
mov
ret
orl
push
das
mov
fimull
ljmp
iret
sbb
stos
mov
xor
fsubs
mov
jle
adc
mov
pop
sar
mov
inc
fs
stc
or
dec
pop
movsl
add
in
test
rol
cltd
or
mov
popa
fcoml
push
push
mov
ret
aam
jecxz
inc
enter
lahf
stos
fs
adc
pop
test
fidivl
and
shll
in
xor
mov
jmp
mov
jge
stos
dec
xor
repnz
ss
and
lds
jno
sub
mov
dec
cmp
xor
pop
cmp
nop
adc
mov
sbb
or
movsb
pop
roll
rorl
mov
sbb
or
or
test
js
mov
testb
shlb
in
call
mov
xchg
fcoms
nop
fdivr
mov
aam
pop
in
lahf
dec
xchg
pusha
and
mov
or
daa
jmp
add
adc
das
testb
pop
enter
test
jbe
popf
xchg
mov
into
sbb
pop
iret
and
pop
fwait
inc
lds
cld
jae
inc
imul
sbb
mov
pop
adc
popl
stos
sarb
lods
in
xchg
jb
xchg
mov
fs
add
pop
adc
pop
lcall
and
xor
int3
mov
xchg
add
inc
sbb
push
push
cmp
cmp
stc
mov
xor
daa
ret
sub
mov
and
hlt
call
xchg
pop
cmp
jmp
jmp
aad
or
fs
jg
inc
jno
insb
fdivr
pop
adc
mov
dec
add
repnz
jo
xchg
pusha
jb
test
sbb
mov
push
pop
out
shrb
adc
cmp
into
cmpsl
adc
fwait
mov
outsb
pop
push
mov
aad
rcr
xorb
xchg
adc
sahf
or
or
es
and
fsubl
cmp
and
test
push
enter
inc
fisubrs
sbb
adc
dec
xchg
cmp
sarb
push
dec
xchg
dec
jno
fwait
cmp
and
cmp
aad
ds
lea
dec
std
pop
orb
movsb
push
inc
mov
dec
pop
cld
fnstenv
test
sub
cltd
mov
pushl
adc
jo
in
repz
adc
pminsw
jecxz
jo
mov
push
shlb
pop
lcall
cmp
sub
lcall
push
decb
lcall
cmp
fisubs
enter
imul
inc
and
push
fbstp
xchg
add
ja
lcall
cmpsb
adc
sbb
addr16
pusha
dec
mov
xor
push
jbe
pop
scas
fwait
addr16
mov
mov
popa
icebp
mov
les
mov
hlt
es
cmpsb
mov
push
dec
cmp
cwtl
xor
mov
cmp
push
mov
push
insb
push
cmc
movsb
mov
shlb
cltd
mov
test
into
addr16
jbe
jle
push
mov
add
cmp
fnstcw
lods
out
dec
sub
lea
lods
cli
pop
nop
ror
cmpsl
pop
movsb
sbb
insb
inc
adc
xor
aam
sub
sbb
and
ja
add
push
imul
sbb
testb
sbb
cmp
ret
push
enter
data16
jl
pop
aad
data16
push
aad
sbb
in
mov
sub
clc
aad
push
jb
stos
mov
pop
sbb
xchg
adc
cmpsl
andb
jnp
orl
das
lods
mov
cmpsb
adc
lret
jne
mov
push
and
pop
jecxz
dec
cltd
pop
popf
insl
fs
jg
pop
sub
ret
mov
cmp
in
mov
xchg
rcrb
pop
stos
push
mov
push
mov
bound
xchg
push
imul
sahf
stos
ret
push
arpl
inc
sub
shlb
xor
jne
jbe
adc
push
or
imul
sti
insl
mov
or
aas
fbstp
mov
mov
dec
inc
sbb
repnz
mov
cs
inc
mov
or
xchg
lds
xor
mov
xchg
mov
mov
lods
ljmp
out
and
xchg
fcoml
dec
push
dec
cmp
out
push
loopne,pt
and
mov
mov
mov
jbe
jbe
jb
repnz
decb
sarb
jo
fs
add
jg
outsb
aas
dec
jnp
rorl
inc
dec
fists
insl
dec
inc
add
arpl
fwait
xor
xchg
inc
push
sbb
pop
repnz
jmp
mov
mov
xchg
js
sahf
fimull
or
insb
adc
imul
lret
es
clts
add
popf
add
ljmp
xor
cmp
adc
xor
mov
xor
push
mov
xchg
adc
fildl
mov
sbb
cltd
sub
adc
and
push
push
pop
in
pop
in
pop
icebp
xchg
mov
repnz
lock
es
xor
sub
fwait
inc
enter
xchg
lcall
test
xchg
ds
fwait
pop
xor
cmp
ds
cmp
lds
int
mov
test
fs
jge
lahf
aad
lea
pop
repnz
xchg
fld
cmp
push
mov
jns
es
mov
xor
rolb
mov
int
cmp
xor
dec
mov
or
sbb
mov
subl
lcall
mov
dec
pop
or
lret
fisubl
mov
mov
xlat
lods
test
popa
jae
scas
iret
pushf
push
push
scas
cld
out
rcl
add
or
dec
pop
dec
test
dec
shrl
je
push
cmp
and
into
sar
fistps
je
rcrl
dec
adc
push
out
mov
jne
jp
ja
push
xor
sub
in
adc
mov
cs
jg
leave
xchg
mov
and
test
push
cmp
and
loopne
mov
clc
sbb
sub
fcompl
pop
push
sub
mov
dec
outsl
sub
adc
mov
jne
pop
jp
jno
daa
pop
dec
repnz
popf
pop
mov
imul
outsl
sbb
jns
mov
push
int
push
mov
std
push
mov
pusha
out
fwait
ret
push
xchg
das
jnp
sti
test
imul
jb
jb
push
push
cmpsl
out
lods
sub
jg
sub
add
jecxz
sbb
sbb
pop
fs
xchg
jnp
outsb
scas
call
mov
popf
sub
xchg
adc
daa
cmp
iret
jl
out
push
popf
xchg
pop
cmp
push
pop
push
dec
cmpl
scas
icebp
fisttps
inc
push
jecxz
sbb
xchg
cmpsb
mov
jnp
and
stos
fwait
call
in
es
dec
mov
in
jg
and
ljmp
icebp
push
aas
imul
pop
ja
push
jle
mov
sub
mov
loopne
call
push
fwait
repz
jle
test
mov
rcrb
aaa
fstpl
xchg
xor
out
scas
sub
rcl
rcll
sti
xchg
fcoml
cmpsb
xlat
adc
fcoml
push
mov
cltd
rcrl
call
xor
adc
jb
adc
pop
movsb
xlat
dec
stc
outsb
aam
sub
mov
mull
ljmp
xchg
imul
adc
mov
xchg
and
xchg
and
popl
dec
out
iret
sbb
shr
in
ljmp
dec
mov
filds
out
adc
aas
aaa
test
jle
clc
test
mov
adc
in
std
mov
sbb
mov
pop
cmc
hlt
jp
hlt
lock
stos
lret
push
das
outsb
mov
and
sbb
or
jno
shlb
push
popf
sub
jmp
xchg
stos
repz
mov
mov
pop
sub
aam
cmp
dec
in
add
or
mov
xchg
data16
adcl
jge
insb
stos
and
fldcw
pop
ret
ljmp
sbb
lock
jno
mov
inc
jno
inc
or
clc
mov
in
sahf
push
xlat
mov
adc
lahf
adc
mov
xor
push
out
mov
cld
sbb
lret
push
inc
inc
call
pop
js
add
fnstsw
jns
mov
mov
icebp
and
test
shll
xchg
insl
mov
mov
fbld
add
push
inc
sub
sbb
fadds
push
xlat
inc
loop
push
push
push
clc
jne
call
cmpsl
jns
jno
das
adc
scas
test
imull
sarb
es
je
cmp
mov
gs
outsl
pop
jnp
mov
xor
iret
mov
les
out
mov
cmp
cli
pop
inc
fnsave
loopne
and
test
push
fwait
sbb
push
inc
scas
mov
mov
call
jbe
dec
inc
dec
std
inc
pusha
repz
cmp
push
gs
insl
xchg
cli
das
pushf
sbb
frstor
subl
dec
xchg
lahf
iret
insb
inc
iret
sub
pop
cmp
imul
xchg
loop
fdivr
jne
sub
inc
push
test
sub
movsl
adc
cwtl
imul
aas
xchg
pushf
jbe
pop
movsb
imul
adc
es
in
pop
push
es
cmpsb
scas
into
cmp
dec
lret
mov
outsl
lea
jg
inc
stc
cmp
jae
cmp
mov
jecxz
je
mull
adc
inc
cmp
imul
push
lret
sarl
pop
test
sahf
jb
fsubs
cmpsl
out
mov
jae
cmp
or
add
pusha
lds
cmp
or
int
cmp
mov
test
lahf
mov
add
ljmp
or
fadd
fdivs
or
ret
jb
mov
imul
sti
inc
push
pop
xlat
into
ret
sbb
fsubrs
mov
in
aad
call
push
enter
leave
loopne
sbb
das
dec
add
push
push
push
cmc
add
mov
jno
xor
popa
mov
adc
adc
adc
add
popf
xchg
sub
push
add
jb
aad
add
cltd
cmpsb
scas
sub
push
xchg
lods
dec
inc
ljmp
xchg
jmp
out
das
or
lret
lcall
inc
mov
add
pop
out
inc
adc
out
sub
jae
in
jbe
ds
mov
jo
les
jmp
sub
add
clc
ss
notl
nop
int3
mov
ficomps
repz
sub
mov
mov
ljmp
imul
or
adc
dec
into
cld
push
mov
jl
xorl
mov
adc
movsb
sarl
xchg
jbe
mov
dec
jnp
xchg
scas
cmpl
popa
repnz
pop
lret
add
mov
outsb
xchg
mov
ljmp
popf
mov
mov
call
push
iret
insb
mov
mov
push
adc
sti
inc
mov
pop
inc
cltd
dec
bound
or
idivb
jne
aam
and
scas
ja
push
cmc
or
rcrl
jbe
aas
dec
mov
jg
inc
fcoms
fimuls
cmp
inc
insl
mov
adc
mov
ficomps
push
scas
pop
add
mov
incb
pop
or
push
push
xchg
sub
xor
mov
push
aam
push
xlat
jae
aam
lds
xchg
pop
or
pusha
push
outsb
int
imull
xor
pop
leave
test
mov
add
movzbl
loope
cmc
jo
add
incl
outsl
mov
ss
outsb
dec
mov
adc
add
test
repz
xchg
mov
xor
insl
cmc
sarb
daa
add
mov
aad
cwtl
xchg
mov
mov
inc
xchg
jae
stos
aaa
sbb
mov
icebp
int3
inc
mov
pusha
sbb
iret
or
add
dec
int
mov
inc
and
das
pop
dec
xor
add
hlt
mov
push
sbb
mov
jle
shrb
mov
push
in
jns
in
mov
out
test
inc
hlt
push
shlb
ret
mov
xchg
sub
fwait
and
sbb
outsb
or
pop
scas
aas
xchg
jle
add
movsl
cs
and
xchg
aaa
and
mov
fmull
das
test
shlb
ss
rcrb
mov
jae
jge
dec
loopne
outsb
ret
add
adc
mov
push
testl
repnz
fxtract
lds
mov
inc
nop
or
and
test
movsl
int3
cld
mulb
in
sti
adc
xchg
mov
xchg
xor
add
shll
sub
push
gs
dec
add
adc
cmp
stos
pop
test
mov
xchg
xor
push
pop
push
sub
xchg
push
or
mov
fs
mov
iret
test
jmp
jno
sub
js
ror
jmp
mov
decb
sub
push
xchg
leave
mov
adc
sbb
mov
pop
inc
je
mov
outsl
sti
std
movsb
xchg
and
rcrl
mov
push
daa
mov
lods
dec
pop
orb
pusha
push
lahf
adc
cld
ret
sub
mov
lcall
cmc
adc
or
scas
push
adc
scas
mov
gs
jb
push
or
pop
aad
lods
lret
mov
mov
lret
sub
fsubl
clc
and
xchg
ds
push
inc
cwtl
jecxz
push
es
and
adc
inc
push
jae
mov
push
fstps
mov
pop
xchg
mov
cltd
inc
sbb
mov
xchg
sub
loopne
mov
push
sub
call
cmp
adc
xchg
pushf
mov
pop
push
pop
push
pop
repnz
adc
out
in
iret
std
jmp
shrb
mov
push
insb
ror
popa
outsb
jmp
test
fadds
movl
jg
xchg
dec
add
shrl
repnz
shlb
push
add
leave
into
repnz
mov
sbb
xorb
mulb
and
mov
shl
mov
in
mov
test
jo
push
cmpsb
pop
out
insl
add
fisubs
dec
inc
mov
inc
jecxz
in
xchg
into
mov
adc
xor
push
mov
cltd
jbe
loop
hlt
jb
jmp
ret
xchg
cmp
lret
es
mov
cvtpi2ps
xlat
inc
jns
dec
sarb
dec
gs
ds
jecxz
bound
rclb
lcall
cli
mov
push
sbb
cmp
popf
popl
add
pushf
mov
push
mov
aas
mov
in
jb
adc
mov
mov
lock
lods
popa
stos
icebp
jmp
dec
push
sarb
lods
ljmp
lock
lahf
test
daa
jl
and
pop
fwait
xor
int3
dec
fstps
mov
and
cwtl
sub
insl
fcompl
mov
mov
jmp
push
push
aas
jae
mov
aaa
xchg
or
inc
pop
in
nop
dec
test
ljmp
icebp
inc
pop
ljmp
js
lds
mov
add
mov
sbb
iret
lahf
add
hlt
xor
aam
lds
neg
ss
pop
cmp
adc
mov
jecxz
mov
fwait
cmp
dec
push
fsub
dec
add
leave
ja
xor
jo
xchg
xor
bound
into
das
es
pop
icebp
xchg
ss
jae
mov
push
mov
cmp
in
push
sarb
adc
jge
das
in
mov
mov
xchg
insb
cmp
cmp
sti
adc
ret
cmp
adc
add
xor
add
xlat
jle
add
jmp
ret
in
pop
fwait
mov
xor
cmc
fidivrs
inc
xor
loope
cld
rorb
xchg
push
out
loop
xor
aaa
mov
std
cmp
jo
mov
bound
lret
sarl
test
mov
fs
fstl
cwtl
cmp
xlat
sub
repz
push
fcmovu
js
jns
aam
insb
dec
jns,pn
and
push
rorl
iret
stc
mov
mov
pop
dec
push
stos
jp
mov
mov
out
rorb
int3
pop
call
cmp
mov
push
push
inc
add
mov
cltd
shlb
std
cltd
dec
jne
mov
push
daa
ljmp
ljmp
sub
rcll
push
loop
imul
subl
les
cmp
xchg
sti
loope
out
jle
imul
cmp
nop
mov
sbb
insl
popa
lret
jae
je
mov
mov
fisubrs
out
ficoms
pop
pushf
dec
pop
adc
mov
and
jecxz
mulb
dec
insl
xchg
pop
cld
pop
shrb
roll
add
jge
cmp
jp
pushf
inc
lds
int
xchg
scas
mov
add
ret
repz
and
dec
inc
push
bound
or
repz
std
icebp
dec
orb
mov
sbb
mov
iret
nop
sbb
dec
adcl
test
lods
imul
sub
stos
jo
in
je
xor
mov
sahf
push
push
das
pop
dec
xor
loopne
push
sbb
jecxz
adc
idivb
pushf
bound
pop
inc
pop
add
or
cmp
outsb
ficompl
dec
cli
mov
lcall
out
pop
fisubrs
jp
or
cmp
outsb
ficompl
dec
cli
mov
lcall
out
pop
fisubrs
jnp
or
cmp
outsb
fistpl
dec
cli
mov
lcall
out
pop
fisubrs
jle
or
lds
outsb
jo
ljmp
loope
icebp
inc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ret
jg
dec
icebp
pop
subl
lahf
pop
or
iret
jno
add
and
lea
pop
subl
mov
inc
out
push
incl
into
jno
inc
lret
and
and
dec
sub
das
icebp
aas
mov
out
jb
or
arpl
jne
insl
call
loope
cwtl
cmp
or
sbb
insb
bound
ds
cld
xchg
inc
es
and
outsl
sub
shrb
xchg
in
lret
dec
in
aaa
into
into
aas
jg
mov
dec
shl
test
out
push
je
jno
adc
sub
or
push
pop
sbb
aas
pop
pop
mov
inc
adc
in
pop
mov
xor
shll
shrb
pop
cmp
popa
adc
ljmp
adc
ds
imul
pusha
js
pop
test
call
mov
xor
outsl
xchg
dec
icebp
pop
gs
jmp
pop
xchg
lret
call
iret
inc
fisttps
sbb
test
mov
push
out
push
mov
inc
lahf
add
add
adc
jae
jg
dec
std
push
cli
mov
mov
xchg
pop
nop
cmp
insb
hlt
jp
pop
in
mov
lea
or
dec
ljmp
subb
daa
rcrb
mov
inc
out
push
jmp
jno
add
xor
loope
icebp
pop
subl
mov
inc
out
push
jmp
jno
add
xor
and
xor
iret
pop
adc
sub
mov
or
xchg
jns
add
jp
and
mov
mov
div
mov
mov
push
ret
mov
pop
xor
pusha
jnp
cmc
cmp
bnd
outsb
movsb
fisubs
mov
push
and
push
sti
xchg
or
out
enter
adc
adc
test
mov
push
add
std
adc
std
push
sub
loopne
or
insl
dec
addr16
pop
sti
mov
fldcw
mov
stos
popf
in
fwait
push
repz
insb
and
push
dec
jle
jmp
xor
mov
inc
mov
in
jo
lods
mov
pop
rol
outsl
les
mov
inc
mov
sbb
cmp
or
ja
mov
and
in
outsl
incl
ret
or
in
fstpl
sbb
inc
stc
nop
sub
sub
mov
daa
mov
xor
push
std
ret
fsubrl
pop
test
jmp
stos
ds
adcb
sub
pop
cltd
addb
adc
ljmp
aas
and
iret
xchg
repz
call
bound
sahf
mov
sbb
mov
xchg
and
movsb
insl
ds
add
jae
fcmovbe
xchg
inc
mov
fadd
sahf
popf
jno
popf
xchg
add
inc
sbb
and
xlat
shlb
adc
outsb
lea
into
dec
into
and
jmp
or
push
out
adc
pop
inc
dec
ja
push
ja
pop
out
cmp
push
push
mov
mov
cli
ja
mov
mov
loop
pop
jmp
sub
stos
sub
mov
mov
cld
or
test
and
jecxz
mov
dec
jmp
mov
insb
les
xchg
add
or
or
ds
pop
inc
in
sbbb
dec
invd
cmpps
adc
mov
push
sar
sbb
sti
adc
repz
or
push
pop
sbb
dec
cmp
insb
sub
jge
movsb
jbe
aas
xchg
cwtl
mov
push
inc
xor
aad
mov
mov
adc
mov
inc
enter
inc
scas
sahf
push
dec
dec
and
pop
fiaddl
test
lcall
scas
mov
pop
xchg
and
sti
fwait
cs
into
cmp
mov
lds
jae
add
int3
test
xchg
shrl
adc
lahf
jo
mov
cltd
pop
mov
inc
movsb
iret
nop
mov
data16
jg
adc
sbb
sti
jne
insl
lahf
jge
movsl
cmpsl
sbb
jns
and
mov
or
in
xchg
stos
push
flds
xor
jp
call
pop
jge
ret
pmuludq
jecxz
pop
lret
inc
shrb
mov
pop
lcall
ds
movsl
das
pop
movsb
add
or
and
pop
pop
xor
mov
lahf
int3
dec
sub
repnz
nop
cmp
inc
sbb
mov
jge,pt
push
pop
jbe
sbb
ficomps
mov
mov
outsl
lods
cmp
mov
dec
jnp
xchg
pop
aas
std
xchg
push
or
cmp
sbbl
repz
xlat
leave
cld
mov
mov
or
sahf
fnsave
je
pop
mov
repz
inc
jl
loopne
cwtl
nop
lds
sbb
out
cmc
mov
jle
sub
sbb
sbb
cltd
hlt
insl
adc
call
inc
cli
and
xchg
aad
mov
adc
sbbb
mov
ds
lahf
sti
les
push
adc
cwtl
sarb
add
ljmp
div
mov
xor
push
in
pop
or
add
mov
cltd
push
hlt
mov
icebp
pop
daa
mov
dec
jae
mov
mov
int
push
or
xchg
push
lahf
das
mov
adc
inc
imul
dec
pusha
sarl
mov
ret
iret
add
cmp
lcall
add
mov
scas
jne
add
sub
pop
repnz
mov
mov
shlb
xlat
push
pop
icebp
cwtl
addb
sub
pop
ret
out
pop
inc
fwait
mov
xor
mov
in
inc
adc
imul
insb
out
or
pop
sbb
mov
test
call
xorl
inc
aaa
mov
lahf
popf
ja
out
outsb
inc
push
sbb
stc
popf
xor
sbb
je
cmp
test
insl
push
cwtl
adc
sub
rcll
inc
cmpsb
in
jecxz
aaa
fisubs
stos
add
rolb
mov
adc
or
pop
data16
push
adc
aaa
ds
jnp
outsb
mov
or
lods
adc
sbb
imul
adc
cmp
xchg
push
ss
sbbb
adcl
mov
inc
push
int3
cwtl
imul
add
cmp
aas
loop
icebp
rcll
mov
mov
push
loop
loop
xor
cmp
mov
cld
sub
sbbl
xchg
cwtl
mov
add
xchg
mov
xorb
dec
js
andb
mov
add
shlb
xlat
xchg
out
mov
addr16
out
push
ds
push
mov
jnp
scas
rol
mov
and
inc
sub
imul
rcrb
jb
mov
repnz
or
pop
inc
dec
push
test
push
stos
mov
pop
push
inc
ja
mov
dec
ss
inc
shrl
cwtl
pushl
pop
cmpsl
sub
xor
and
inc
and
pop
push
sub
out
push
nop
dec
jbe
imul
std
call
mov
mov
sti
sahf
push
mov
mov
inc
ficomps
cmp
scas
outsb
pushf
mov
pop
or
stos
inc
inc
test
out
push
mov
clc
pop
imul
dec
cltd
and
mov
cli
out
in
adc
js
cmp
jl
lret
movsl
mov
inc
dec
mov
scas
out
in
leave
mov
sbb
repnz
cmpsb
jg
je
cs
xchg
cwtl
dec
aam
sahf
xchg
and
add
lods
decb
int
fldt
xor
mov
xor
imul
sbb
mov
cld
cmp
je
aam
push
mov
fidivs
repz
inc
iret
repz
mov
inc
cltd
pop
add
mov
adc
pop
lods
ffree
cmpl
ret
lret
loope
inc
push
push
jo
cmpsl
jno
dec
out
or
inc
cmpsb
in
repnz
xor
lcall
and
fsts
shll
out
wrmsr
push
iret
pop
cmpl
subl
int3
rolb
mov
push
jne
xchg
fdiv
cmp
push
xchg
les
insb
adcb
or
lods
sub
leave
pop
mov
fs
sbb
fisttps
stos
push
and
repnz
aaa
jbe
movsl
mov
mov
pop
sub
jl
aam
cmp
mov
mov
add
push
mov
or
ds
sahf
loope
mov
inc
pop
push
pushf
dec
inc
jmp
cmpsb
arpl
loope
inc
test
insb
cmpsb
int3
imul
cmp
in
and
jo
imul
sti
adc
fstps
mov
cmp
xor
fcmovnu
pop
pmaxsw
push
lods
sbb
ds
stos
aas
pushf
or
push
sti
pop
call
rol
into
push
pushf
daa
sub
or
test
loopne
sub
mov
test
cmp
mov
outsl
imul
push
inc
jae
xchg
ret
loopne
rorb
sbb
sbb
xchg
inc
jl
mov
gs
mov
mov
ds
mov
push
mov
scas
xor
push
push
hlt
in
fnsave
mov
ljmp
xchg
push
xadd
mov
mov
jge
or
add
insb
or
inc
int
and
movsl
popa
imul
ret
shl
dec
sub
push
test
pop
sub
rcrl
ljmp
cmc
mov
dec
xchg
cltd
jle
or
jecxz
mov
out
jno
pop
rol
dec
ds
adc
ljmpw
xlat
hlt
int
xchg
cmc
cmpsb
mov
mov
mov
leave
push
xor
sub
out
call
jae
xchg
mov
push
and
loopne
js
mov
dec
push
jbe
xchg
add
xchg
cli
ljmp
jg
cmp
push
xchg
or
sbb
mov
or
pop
rclb
aam
mov
out
and
add
roll
jp
arpl
dec
aad
shr
movsl
aam
dec
push
xchg
add
jno
rol
iret
jne
inc
lods
sbb
mov
push
and
inc
cwtl
cs
adc
xchg
inc
and
mov
jb
add
lds
cmp
repnz
push
fsts
adc
cli
fninit
arpl
push
daa
cli
and
in
repnz
cmp
lods
adc
cwtl
leave
cmpsl
test
and
mov
push
shrl
push
adc
pop
shrw
xchg
test
dec
pop
push
adc
int
das
xchg
jbe
jne
aam
out
fmulp
mov
cmp
scas
filds
jl
dec
jno
ficoml
sbb
xchg
outsl
adc
iret
cmp
pop
cmp
pop
and
jnp
movsl
jp
imul
sarl
daa
in
and
mov
pushf
gs
fsubrl
loope
xor
shlb
and
xor
push
repnz
jbe
stos
dec
pop
outsl
in
push
sbb
xor
pop
add
push
cmpsb
or
or
mov
nop
sub
push
insb
cld
dec
push
mov
jno
mov
outsl
inc
lret
xchg
mov
insb
mov
addr16
ficoml
shlb
aad
xchg
add
and
mov
mov
aas
dec
xor
jb
mov
es
mov
aad
je
es
xor
fs
lret
adc
cmp
or
je
ret
stc
lods
gs
inc
clc
stc
mov
imul
pushf
out
jg
int3
jmp
aas
add
sbb
pop
cmpsb
dec
xchg
ret
add
psubusb
movsl
jns
je
cwtl
and
lcall
inc
nop
lods
cmpsl
sub
mov
movsl
push
jbe
out
adc
mov
test
mov
ret
cmpsl
xlat
sub
sbb
inc
cld
pop
rorb
inc
pop
or
xchg
pop
iret
xor
rorb
and
loope
sbb
mov
mov
les
adc
mulb
shlb
push
ret
shl
sub
mov
push
add
lea
in
jmp
ret
aam
fisubrs
pop
pop
inc
movsl
bound
loop,pt
dec
std
dec
sbb
mov
ret
iret
sti
push
cmpl
xor
ds
es
or
jo
mov
cmc
push
xor
fcmovnbe
popf
arpl
mov
or
mov
mov
add
cmpsl
popa
or
mov
pminub
inc
xor
pop
popa
sub
je
fidivs
and
mov
mov
scas
jns
or
leave
fildl
pop
push
pop
pop
data16
mov
and
mov
or
mov
data16
xor
in
jl
fsubp
inc
fistl
and
pop
cmc
test
mov
dec
mov
push
jo
pop
jo
push
jae
sbb
icebp
es
ja
jae
or
imul
mov
push
inc
repnz
fisubrl
mov
dec
shr
pop
fdivp
lret
and
rcll
pop
jno
push
std
push
imul
inc
push
enter
cwtl
out
push
push
movsb
stc
and
cwtl
movsl
push
mov
scas
test
mov
jmp
cmc
push
push
js
mov
es
aad
adc
push
push
jne
sub
fdiv
fsubrs
adc
outsl
sti
dec
lock
adc
xor
jb
mov
jle
mov
add
das
in
adc
fcoms
jnp
jecxz
test
sbb
popf
into
cmp
mov
mov
xchg
in
sbb
dec
sbb
fstp
ds
cwtl
inc
in
ret
pop
xchg
fsubs
sbb
jge
mov
jno
sbb
and
xlat
jp
or
popw
ljmp
ret
add
lods
int3
rcll
fld1
stos
out
insl
les
test
iret
ret
and
pop
orb
arpl
lret
lret
mov
in
mov
sti
bnd
mov
fbld
in
jp
cmpsb
adc
ds
jecxz
daa
inc
mov
call
dec
test
lods
enter
dec
adc
jle
mov
outsl
ja
sub
mov
pop
dec
dec
lcall
xorb
into
jle
mov
fidivrl
jmp
aaa
xchg
pop
sbb
lea
test
es
add
push
jmp
adc
sub
iret
xchg
mov
xchg
repz
loope
loop
rclb
push
test
scas
scas
sub
push
xor
shl
lahf
lcall
fsub
jg
push
xor
mov
cmp
dec
mov
addr16
push
out
sbb
cmc
or
sbb
inc
lcall
jns
aaa
scas
imul
scas
lock
mov
xchg
mov
fidivl
gs
and
int3
imul
add
lock
hlt
xchg
push
das
inc
sbb
cmp
push
pushf
pusha
dec
adc
xor
loop
add
xlat
and
xor
das
lea
xchg
mov
popa
cli
pusha
or
insl
sbb
dec
es
lcall
leave
mov
testl
fs
lods
je
mov
cmpsb
ror
fimull
and
cli
sub
test
movsl
ret
xorl
mov
mov
add
gs
cmp
mov
ficomps
ljmp
mov
inc
lret
inc
push
xchg
dec
int
mov
hlt
mov
pop
mov
dec
mov
jl
int
sbb
fsts
js
sti
cwtl
insb
pop
or
inc
clc
cmp
sahf
std
loope
push
adc
roll
cmp
dec
inc
lods
out
iret
xchg
das
out
loop
xchg
lock
dec
xor
mov
push
mov
xchg
lret
jns
cltd
fcompl
or
pop
mov
dec
jae
cltd
hlt
popa
xor
push
ljmp
xchg
mov
out
mov
xchg
imul
sbb
or
shrb
inc
xlat
pop
cmpsl
and
rclb
scas
mov
outsl
cmpsl
mov
jge
and
lcall
and
repnz
jne
push
pop
adc
inc
shr
jl
shll
enter
cmc
add
pop
adc
dec
or
leave
imul
mov
pop
mov
add
in
out
mov
popa
xchg
fistl
test
dec
mov
push
inc
fldcw
movsb
packssdw
mov
mov
adc
push
imull
and
rorb
ja
jns
mov
mov
mov
push
pop
cmc
fwait
int
cwtl
push
dec
xor
mov
pop
cmp
stc
adc
loopne
sbb
fwait
dec
jo
mov
insl
sub
je
int
out
lcall
sub
adc
mov
push
fs
cmpsb
nop
adc
add
xorl
pop
xor
xor
call
mov
mov
dec
jg
ror
call
jbe
cmc
inc
mov
cmp
mov
lahf
out
cwtl
xchg
cmp
mov
mov
js
dec
cltd
imul
ja
add
adc
bound
imul
or
pop
push
movsl
fsubl
mov
dec
jg
in
xchg
xchg
cmp
xchg
les
jg
insl
iret
cwtl
cmpsb
repnz
sarb
ja
lcall
and
add
xor
mov
out
std
or
gs
inc
inc
mov
xchg
mov
xchg
pop
stc
int3
fnstcw
fwait
xor
sti
loop
cmp
xchg
and
sub
or
mov
out
or
dec
adc
pop
jne
dec
popf
ss
aam
shlb
pushf
imul
inc
test
push
nop
popf
and
fldcw
clc
sbb
add
pop
and
pop
push
enter
sahf
sti
mov
lock
sahf
adc
arpl
in
lret
arpl
cmp
dec
fsubr
xor
cmp
scas
clc
mov
sbb
roll
sub
shlb
jno
sub
sbb
es
loopne
jmp
dec
cmpsl
pusha
sbb
bound
or
inc
mov
dec
roll
in
inc
imul
sarb
cmp
loopne
int
fdivs
insl
adc
test
insl
insb
insl
push
mov
scas
pushl
mull
loopne
xchg
push
test
inc
dec
movsb
add
rcr
dec
ja
scas
dec
pop
and
xchg
out
dec
mov
sbb
stc
jge
mov
out
ss
push
jb
repnz
test
ret
sub
call
out
ljmp
cmp
jae
cmp
inc
inc
insb
outsb
cmp
shlb
pop
pusha
jne
sbb
inc
aam
mov
in
xchg
mov
sar
leave
and
shrb
mov
adc
adc
mov
mov
mov
add
sub
dec
lods
and
sar
gs
subb
pop
jo
mov
mov
cmpsl
sbb
add
addr16
sub
push
jle
and
int
insl
sahf
rcrl
adc
mov
lret
scas
sub
mov
dec
faddl
push
add
addr16
fdivrs
mov
scas
push
dec
ja
inc
sbb
mov
idivb
or
dec
test
ljmp
les
cmpl
addr16
push
cwtl
pusha
nop
arpl
int3
es
mov
js
jns,pn
mov
nop
cwtl
sbb
sti
jae
dec
out
popf
clc
scas
fbld
in
in
setbe
lods
sti
popf
scas
push
adc
add
pop
or
fcoml
mov
mov
stos
frstor
mov
pushf
push
mov
adc
mov
cwtl
dec
fcoml
jne
loopne
aaa
jle
fldcw
ret
push
pop
into
insl
enter
insb
movsb
and
xor
aas
sub
xor
fildl
outsl
aad
rcrl
dec
ss
push
jb
fs
loope
xchg
andb
push
mov
fs
pusha
push
loop
push
cmp
mov
adc
jns
leave
sahf
adc
sub
dec
out
bound
jo
mov
pusha
inc
imul
sbb
dec
fsqrt
push
dec
sahf
rcll
repnz
daa
mov
sub
fwait
jg
xchg
sbb
scas
popf
xchg
cmpsl
ret
or
jnp
fs
xchg
lock
cmp
sahf
cmp
aas
xchg
push
xchg
fsubrl
sbb
xchg
mov
jl
adc
pop
rcrl
sbb
xchg
dec
add
sub
pop
push
jno
xchg
jae
ss
cmpsb
ret
lock
pop
adc
fiaddl
cmp
je
mov
adc
and
call
test
sub
mov
es
shll
xor
adc
dec
int3
add
fwait
rdtsc
leave
sahf
push
stos
and
xlat
xchg
stc
stc
shlb
sbb
pusha
jnp
insl
inc
sub
pop
lahf
push
jp
xor
push
nop
lahf
rclb
les
pop
push
jnp
sub
aam
aaa
jb
mov
or
push
stos
jmp
testb
jb
fidivrl
faddl
push
nop
sahf
xchg
fidivrs
dec
sbb
scas
outsl
fisttpll
js
fldl
mov
cmp
jge
sbb
rcll
test
ss
cmp
push
cltd
data16
jle
call
push
push
push
sbb
cld
inc
xchg
xchg
mov
or
add
lock
shlb
mov
sbb
enter
scas
fs
pop
ljmp
adc
stc
xchg
push
pop
mov
xchg
sub
mov
shll
jnp
jl
movsb
arpl
push
add
das
push
sub
xor
cmp
adc
lahf
inc
data16
mov
adc
mov
pop
mov
push
xor
add
popf
enter
or
or
lret
insb
sbb
inc
outsb
jge
pop
lock
lcall
jg
jbe
cmp
mov
nop
pop
pop
cmp
adc
xchg
and
xor
loop
xchg
mov
hlt
jl
cmp
loop
jmp
scas
icebp
xor
mov
or
jg
dec
icebp
pop
subl
mov
inc
out
push
jmp
jno
add
xor
loope
icebp
pop
subl
mov
inc
out
push
jmp
jno
add
xor
orl
aas
mov
out
push
call
scas
add
aad
lea
dec
rcrl
das
cmpl
inc
out
scas
push
lret
iret
jno
jbe
cltd
inc
fidivs
pusha
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
pusha
inc
xor
inc
arpl
insb
push
inc
and
xor
and
push
hlt
jecxz
xchg
mov
mov
je
inc
arpl
add
add
cmp
in
hlt
repz
in
aam
mov
xchg
dec
ret
imul
and
adc
jl
push
and
lret
xlat
lods
movsl
fwait
cmpsb
xchg
imul
shr
div
lock
sub
jae
adc
int
xchg
aad
outsl
cmp
jp
mov
mov
shlb
mov
xor
stos
cmp
add
push
sbb
or
cmp
jmp
subps
lods
or
sub
ror
xchg
mov
in
in
lds
xchg
push
jg
mov
mov
je
inc
inc
push
in
xor
add
les
cltd
pop
popa
ret
cmp
cmp
call
mov
sbb
rol
add
and
into
andl
fwait
mov
test
imul
shlb
mov
movsb
mov
mov
int3
shl
mov
mov
push
jae
arpl
adc
add
xchg
in
pop
jmp
cli
call
test
fs
sub
cmp
gs
jle
and
cmpsl
scas
test
jecxz
fcmovnb
lock
std
cmp
and
sbb
adc
jg
add
insl
jo
nop
test
in
jmp
mov
loope
out
pop
das
xchg
pop
sub
cmp
add
add
adc
in
hlt
repz
movsb
xorl
inc
je
inc
arpl
add
add
adc
in
hlt
repz
movsb
xorl
insb
and
cmp
mov
xor
orl
inc
xlat
psubq
int
add
andb
mov
push
cmp
cltd
mov
adc
or
xor
mov
and
shll
jno
aas
mul
cmpsl
xor
test
and
rolb
pushf
sub
jl
cmp
pushf
and
stos
imul
add
nop
jnp
mov
add
jbe
imul
mov
orb
adc
inc
sbb
fdivl
lahf
push
sub
xor
insl
js
inc
push
in
lret
jnp
pop
dec
sub
es
int
stos
pop
mov
mov
scas
dec
punpcklwd
stc
ja
push
push
add
popf
pop
mov
sub
ret
or
sbb
sbb
add
and
adc
mov
adc
inc
pop
mov
add
repnz
gs
ss
sub
dec
gs
cs
inc
movsb
aaa
inc
rcrb
aas
cmp
ss
cld
dec
xchg
dec
jg
pop
adc
mov
push
subb
insb
sub
inc
jge
enter
push
add
daa
or
ja
push
movl
addr16
and
fisubrs
in
data16
fs
mov
icebp
or
sub
pop
enter
xchg
pop
xchg
aad
testl
jae
lret
sbb
dec
inc
sbb
pop
aam
pop
mov
push
daa
lret
outsl
cmp
sub
pop
push
shll
sub
imul
sub
sub
test
cwtl
sbb
adc
mov
add
das
hlt
outsb
inc
mov
or
bnd
or
lods
xor
arpl
stos
cmpsb
adc
inc
and
push
push
or
insl
into
inc
jl
loop
mov
xchg
imul
fildl
stc
cmpsl
or
adc
mov
shrb
addb
mov
into
push
xor
mov
iret
jbe
pop
pushf
cltd
andb
xchg
mov
xchg
adc
pop
leave
pop
test
mov
and
or
pop
sbb
push
or
sbb
xchg
arpl
dec
push
sbb
jnp
xor
adc
xchg
jae
cli
jno
scas
pop
mov
and
faddl
insl
xchg
adc
inc
imull
cmp
add
std
xorb
popf
aam
xchg
pop
sarl
mov
dec
jl
rcll
sbb
jmp
mov
clc
jp
mov
je
repnz
xor
nop
add
scas
ror
sti
nop
ret
mov
imul
cmc
gs
jbe
mov
jae
add
pop
jb
fwait
out
in
mov
mov
nop
cmpsl
or
jae
rorl
mov
in
cmp
xlat
push
xchg
aam
inc
mov
add
lret
add
imul
inc
mov
sub
call
mov
outsl
mov
repz
xor
fs
dec
movsb
xchg
xchg
sbb
mov
pop
xor
push
xchg
or
daa
sbb
and
rcll
xor
mov
fbld
xor
push
dec
pop
imul
mov
subb
jecxz
mov
fidivrl
ficompl
mov
jo
fstpt
sbb
or
mov
dec
mov
dec
mov
bound
into
jne
push
jge
inc
or
push
push
fyl2x
popf
cmp
in
cmp
push
lahf
lods
mul
mov
std
inc
add
jle
imul
adc
inc
mov
dec
testl
repnz
or
test
repnz
jg
dec
ja
shll
lds
or
xchg
dec
movl
sub
repz
filds
dec
dec
nop
push
cmp
jle
faddl
push
xor
lods
pop
aam
adc
push
inc
cmc
mov
cwtl
cltd
inc
data16
sub
xor
cmp
mov
xor
sub
repz
xchg
lea
sub
inc
clc
scas
mov
sub
push
call
jecxz
adc
cmp
shl
mov
mov
sub
popa
push
mov
stos
cmpsl
sub
cmp
add
sti
jecxz
js
mov
shll
adc
scas
lahf
dec
mov
arpl
ret
sarl
cmp
mov
jbe
dec
mov
fmul
jns
outsb
scas
add
add
inc
js
push
cs
cmpsb
mov
xlat
in
and
cltd
adc
and
push
shlb
xchg
push
inc
add
pushf
pop
cmpsb
pop
scas
add
add
movsb
pusha
add
scas
mov
xchg
cld
insl
add
mov
les
scas
mov
pushf
mov
sbb
mov
xchg
stos
test
add
aad
or
dec
push
sub
imul
xor
and
mov
push
pop
push
xor
jg
jle
out
pop
push
out
ja
fldenv
mov
into
mov
in
cmp
or
dec
stos
adc
sub
fs
inc
inc
out
inc
add
jg
or
je
sub
sub
xor
out
push
mov
out
or
in
adc
pop
or
lret
into
adc
sti
jecxz
dec
movsl
pop
or
mov
inc
adc
push
sahf
dec
mov
sbb
and
pushf
int
inc
testl
bound
xchg
jne
ja
aam
mov
fsts
jne
add
inc
rcrb
insb
fs
sbb
add
pop
fwait
mov
sbb
lods
mov
enter
push
adc
jmp
test
jp
or
xchg
clc
mov
lods
popa
dec
insb
aam
pop
imul
inc
sbb
aaa
sub
lea
mov
jno
mov
add
cmpsb
inc
sbb
addr16
xor
dec
push
cs
icebp
ret
setbe
jmp
push
push
out
movsl
and
sahf
pop
jns
dec
inc
or
push
int
push
sbb
jl
fsubs
cli
mov
std
popf
mov
rcrl
xchg
dec
add
jl
add
inc
inc
les
pop
jnp
pop
lock
jae
sbb
add
lods
jae
pop
and
cld
xchg
nop
xchg
or
add
jle
movsl
pop
lds
ficoms
push
pop
lahf
aas
sub
lods
mov
insb
shlb
fstpt
dec
out
aad
shlb
jb
sysenter
pushf
jg
das
adc
addl
out
lock
adc
int3
cmp
andb
fldt
add
aas
push
jle
add
xchg
and
popf
mov
stos
mull
mov
pop
fcomp
mov
pop
mov
loope
lock
inc
mov
in
or
pop
dec
dec
pushl
jb
fcompl
pop
imul
push
int3
cmpsb
pushf
dec
aam
jne
fiadds
movsl
fimuls
jne,pt
fnstcw
inc
ljmp
pop
imul
inc
cmpsl
lods
arpl
rolb
xor
aas
push
jl
or
into
fsubl
sub
jg
imul
fsubp
mov
xor
adc
movsb
add
jno
insl
jecxz
popa
xor
fsincos
push
sbb
loopne,pt
push
inc
stc
shrb
push
jbe
push
adc
orb
sub
std
stos
jne
xchg
xor
aam
and
add
jae
inc
gs
cmp
lcall
mov
shll
adc
and
adc
das
sub
push
dec
imul
rorl
and
jo
and
xchg
mov
xor
mov
sti
jmp
sbb
pop
loopne
lea
cmp
or
and
pop
and
cmp
shlb
mov
out
outsl
adc
jl
mov
outsl
cmp
lock
jl
sbb
test
sbb
int3
cmp
xor
test
loope
fnstenv
push
in
int
mov
call
arpl
jle
mov
pop
or
ficoms
call
dec
fmuls
stc
imul
and
out
jns
jo
push
cmp
push
ja
xchg
jmp
mov
sbb
outsl
mov
xlat
fistps
push
mov
ja
bound
outsl
test
jbe
dec
xchg
aad
stc
jecxz
ror
sbbb
fmuls
test
xor
aam
and
mov
push
je
adc
mulb
ja
lods
aaa
inc
and
jp
iret
int
aaa
xchg
mov
gs
rolb
add
movsb
cmp
or
clc
shll
sbbl
lods
mov
test
lods
test
inc
jmp
test
stos
daa
mov
xchg
sub
add
xor
in
nop
outsb
sub
jns
xchg
clc
mov
inc
cmpsl
mov
jbe
das
xor
data16
add
xor
mov
add
sub
loope
divl
jp
sub
int
fsts
mov
fs
testl
push
je
add
popf
pop
pop
stos
pop
adc
and
cld
mov
mov
sub
inc
stos
and
shll
loopne
xchg
push
push
fidivl
adc
jmp
out
mov
mov
push
repz
jp
pop
pop
pop
lret
repz
lcall
mov
xchg
mov
push
jnp
cmp
push
mov
or
add
mov
xchg
mov
fwait
sbb
push
lret
and
push
and
sbb
pop
mov
dec
lea
push
out
or
std
jl
hlt
lock
les
scas
push
aas
adcb
arpl
push
clc
xorb
ljmp
xor
xchg
mov
out
enter
sbb
cmpsb
mov
shrb
add
sub
pop
dec
adcb
push
pop
xor
sbb
lods
pop
pusha
lahf
std
sbb
fldl
or
mov
push
ret
outsl
out
add
nop
cmc
out
xlat
imul
loope
pop
or
lock
and
xchg
cmp
dec
adc
mov
sub
fs
clc
mov
or
mov
fld
xor
sbb
jmp
ucomiss
mov
lcall
icebp
dec
xor
std
lahf
outsb
xchg
aad
jne
and
stos
dec
aam
fs
bound
shl
ret
jg
inc
pop
mov
xor
fsub
ret
mov
pop
fucomip
hlt
popa
sub
cmp
mov
iret
mov
pushf
dec
xchg
jp
aam
shl
hlt
cwtl
sub
lret
movsb
lods
dec
fisubs
sub
icebp
mov
xor
das
push
imul
add
pop
mov
lods
xor
lret
sbb
mov
xchg
es
jecxz
or
adc
push
mov
iret
int
adc
cmpl
mov
mov
xchg
mov
and
icebp
pop
dec
inc
and
cmp
xchg
cmp
sbb
enter
xor
and
jmp
cmp
mov
scas
inc
das
cmp
jge
jno
insl
insb
sub
test
cwtl
jg
fistps
lret
mov
cmp
jge
and
or
lret
scas
jb
ja
push
in
icebp
enter
enter
out
fidivs
scas
ffreep
lret
lcall
in
cmp
inc
popf
sbb
sbb
je
imul
adc
mov
jno
xchg
scas
js
dec
popa
into
cld
or
ds
push
cmp
push
bnd
int
inc
out
hlt
or
sub
repz
xor
sub
mov
jecxz
mov
mov
mov
pop
imul
xchg
xlat
stos
cmpsl
mov
add
xor
inc
xor
fsubs
int3
and
bound
xchg
dec
mov
jbe
outsl
adc
mov
mov
pop
inc
mov
pop
sbb
outsb
mov
arpl
insl
sbb
imul
sti
push
sbb
lods
dec
mov
aad
sub
mov
stos
repnz
fs
jae
lods
scas
ret
rcrl
js
and
mov
sbb
push
loope
add
rcrl
lret
pop
enter
lret
mov
insl
in
outsb
cmp
mov
jmp
iret
scas
hlt
adc
ss
or
data16
push
and
inc
imul
jae
mov
js
sub
adc
add
push
int3
dec
mov
cmpsl
mov
push
xor
and
adc
cs
cmp
sahf
xchg
jmp
lret
mov
cld
jecxz
mov
daa
adc
adc
push
test
orb
cltd
push
cli
inc
jns
cmpb
aad
ret
jg
inc
sub
sarb
push
add
divl
bound
push
mull
cli
inc
mov
inc
pop
loop
dec
ret
popf
sub
scas
or
ret
push
cmp
sti
mov
add
in
cmp
push
mov
push
or
adc
mov
testb
pop
xchg
lock
inc
jge
lds
lods
roll
or
int3
cmp
pop
rcll
mov
test
pop
sbb
cltd
pop
inc
into
push
adc
mov
push
clc
jno
stos
dec
push
movsb
pop
jb
ficomps
inc
out
push
dec
mov
pusha
ss
sub
int3
push
cmc
int
inc
xchg
int
lock
test
jge
mov
mov
and
pop
inc
notb
bound
in
inc
inc
inc
mov
fcompl
jle
mov
orl
adc
into
insl
xor
int
outsb
in
fiaddl
lods
mov
add
hlt
dec
lock
jno
pop
ret
sbb
adc
movsl
int3
inc
repz
push
jne
loop
scas
or
test
sbb
adc
adc
xchg
dec
cld
pop
jno
mov
xchg
adc
and
loopne
or
addb
ss
xchg
fcomps
inc
shrb
sbb
xor
add
out
lret
push
sub
xor
in
cld
je
je
push
movsb
sarb
jl
lods
enter
and
out
push
scas
int3
dec
shll
imul
xor
lcall
mov
xor
aas
or
testb
movsl
xchg
cmp
hlt
mov
and
mov
fisttpl
fnstenv
mov
dec
inc
in
mov
js
fmull
jge
xlat
add
or
push
lods
inc
cmp
xchg
and
stc
ljmp
es
or
mov
sti
in
and
rclb
jl
mov
xor
scas
icebp
mov
call
rcrl
bound
sub
sbbl
add
mulb
push
adcl
mov
inc
out
arpl
test
test
fidivrs
mov
adc
xor
out
xor
ret
sub
mov
outsb
fs
orb
mov
popl
movsl
dec
jno
cmp
sub
jmp
sub
xchg
lret
mov
xor
das
push
jne
and
and
in
mov
pusha
push
pushf
xchg
int3
repz
jno
push
pusha
call
fldl
ficoms
mov
lds
sbb
mov
stos
ret
enter
xchg
pop
jbe
cmp
pop
pop
add
inc
sub
pop
sbb
xchg
push
out
dec
fnstsw
xchg
jns
arpl
pushf
pop
fcompl
inc
cmpsl
rcrb
nop
or
das
mov
test
arpl
lods
bound
jbe
cmpsl
inc
or
movsb
add
pop
stos
icebp
push
sbb
dec
int
std
dec
iret
mov
movsb
push
divb
imul
insb
sahf
cmp
xchg
fmuls
mov
push
push
mov
inc
push
enter
test
mov
sbb
cmpb
sbb
lds
ljmp
cmp
mov
add
cltd
scas
fimull
pop
pop
cmpsb
repnz
mov
mov
xlat
clc
in
loop
cmpb
sub
das
loope
out
aam
xor
mov
test
stos
and
mov
and
imul
dec
ja
dec
mov
std
adc
mov
les
inc
mov
sbb
xchg
into
lret
repnz
pop
rol
sub
loopne
adc
leave
sub
push
jle
stos
jmp
cltd
cld
mov
movsl
adc
xchg
cmp
aaa
outsb
lcall
into
mov
jmp
imul
add
push
mov
daa
pop
or
mov
rcll
jecxz
lods
in
mov
add
inc
or
testl
out
push
lods
popf
imul
and
sub
jp
adc
cmpsl
loop
in
add
and
or
ss
fdivrp
shrb
outsl
xlat
sub
stc
inc
int3
sbb
jg
xlat
push
flds
mov
jns
push
push
dec
mov
xchg
dec
cltd
xor
mov
dec
adc
inc
lahf
stos
jecxz
pop
ss
xchg
fbld
ret
fldcw
lds
inc
push
lahf
shrb
push
in
push
cmp
stos
sti
mov
stc
xor
call
jo
pop
pop
in
sub
iret
inc
mov
fsubrp
adc
cmp
dec
data16
test
daa
pop
or
sahf
cmp
addr16
imul
into
loop
or
pop
lcall
popa
shlb
mov
pop
test
popa
xor
out
xor
jle
popa
stc
cmc
dec
outsl
add
mov
pop
lods
dec
mov
in
lret
add
inc
sarb
ret
je
inc
iret
sbb
imul
mov
xor
push
push
push
daa
clc
push
sub
repz
outsb
fsubs
cmp
add
outsb
xchg
mov
mov
jnp
shrl
push
ret
mov
push
insl
push
sbb
sbb
shlb
out
fnstcw
inc
das
add
leave
fistpll
das
mov
addr16
iret
cmpsb
aaa
pop
xchg
stos
aad
mov
cmpsb
imul
mov
insl
mov
cli
sub
inc
sub
dec
icebp
cmp
loop
mov
sbbb
push
jo
sub
mov
adc
push
or
mov
mov
aas
and
popf
mov
bound
adc
rorl
inc
cmpsb
pop
stc
xchg
xchg
dec
cmpsl
insb
lods
sub
fmuls
cmp
loope
loop
dec
loopne
addb
inc
scas
fs
movb
sti
jecxz
sub
in
add
mov
cmp
les
mov
inc
cmpsl
pop
add
xor
pushl
mov
nop
cmp
inc
mov
lahf
mov
jae
enter
iret
stc
rorb
lock
test
insl
jns
test
cmp
jo
fdivs
ret
lods
fucom
xchg
pop
adc
add
callw
or
pop
fnstenv
and
lcall
ret
in
hlt
dec
int
pop
movsl
cwtl
jo
inc
fldl
imul
add
rclb
pop
movsb
adc
repz
aad
mov
mov
add
sub
adc
xchg
pop
add
outsb
xchg
int3
xor
pop
fildll
fsubl
push
cmpsl
inc
cmp
mov
lahf
or
test
cmp
addb
mov
and
xchg
lds
fstpl
mov
ss
js
js
pop
cld
mov
mov
sbb
inc
dec
inc
sahf
sub
imul
or
aad
scas
sbb
ljmp
or
mov
aas
arpl
push
sbb
imul
dec
cmp
ret
pop
mov
das
rcl
and
mov
ljmp
lea
fcmovu
mov
sub
loope
std
xchg
jns
aaa
and
enter
mov
mov
rorb
sub
les
rclb
in
rcl
push
lcall
ss
pop
inc
jecxz
fcomps
or
int
neg
dec
inc
push
cmc
fs
add
lods
out
dec
popa
push
pop
test
jbe
sbb
repz
jns
dec
xchg
jno
scas
sbb
inc
hlt
std
stc
inc
aam
mov
out
cmpsb
fildl
xor
pop
insl
out
insl
dec
enter
xorb
pusha
mov
js
dec
lods
addl
fucomi
fs
std
xchg
push
mov
push
xlat
out
mov
leave
xchg
mov
loope
fs
adc
loope
pop
mov
dec
xorl
decb
adc
jae
in
ret
mov
es
mov
mov
mov
push
xor
inc
cmp
arpl
js
xorl
and
inc
jge
lea
arpl
add
add
adc
in
hlt
repz
movsb
xorl
inc
je
inc
arpl
add
add
adc
in
hlt
repz
movsb
xorl
inc
jp
pop
arpl
and
pop
xor
and
in
lock
mov
mov
nop
jb
arpl
and
xor
test
pop
pop
fmull
int3
dec
cld
pop
in
sub
stos
pop
fwait
aaa
mov
mov
xchg
sub
jp
push
dec
testl
lcall
lret
adc
xchg
sub
jnp
imul
mov
out
test
and
fistpl
sub
jp
outsb
aam
addb
jnp
and
lret
pop
stos
imul
pusha
lret
int3
and
mov
adc
pop
out
sub
dec
or
sarb
insl
lret
push
in
push
aaa
mov
xlat
inc
filds
add
divb
add
popa
jg
sarl
add
hlt
sub
imull
idivl
pop
mov
push
das
cmp
xlat
sbb
cmp
dec
pop
inc
mov
add
fs
mov
fstpt
addr16
les
dec
jo
cmpsl
sub
sbb
stos
mov
sbb
and
and
or
out
outsb
dec
xchg
pop
testl
fwait
mov
sub
fldt
sub
cmpsl
or
jnp
imul
testl
divl
mov
push
scas
add
cltd
ret
outsl
into
daa
mov
mov
xchg
push
call
add
sbb
shll
outsb
shlb
sbb
int
test
stos
inc
mov
ja
cmp
sbb
imul
testl
fwait
aaa
mov
sti
push
jmp
cmp
sbb
imul
testl
push
xchg
mov
loopne
test
push
jb
cwtl
rcll
jp
cmp
inc
arpl
ljmp
xor
setle
movsb
enter
jp
sbb
mov
add
push
fidivl
scas
insb
and
test
mov
pop
or
frstor
out
xlat
test
fld
rorl
mov
add
pop
xchg
or
xor
adc
dec
sub
leave
stos
scas
adc
pop
inc
xlat
mov
jno
daa
jns
rorb
arpl
xchg
push
xor
or
sbb
movsb
inc
jecxz
lds
hlt
pushf
dec
mov
cli
or
in
mov
aas
test
jl
pop
fwait
pop
pop
in
mov
pop
shlb
pop
shrl
aad
sub
dec
lods
divb
mov
lods
add
sub
pop
loope
mov
mov
lock
ss
mov
dec
mov
fs
mov
and
mov
sbb
sub
mov
loope
cmpsl
inc
out
dec
in
or
add
ret
aaa
stos
outsb
lcall
push
fadds
pop
lock
pop
inc
xchg
aaa
pushf
adc
adc
add
in
arpl
sub
dec
mov
in
pop
loopne
adc
popl
inc
sbb
das
xchg
sub
and
push
sbb
sub
andb
pop
addr16
dec
aad
jp
shl
pop
xor
push
mov
loopne
push
gs
or
xor
into
xor
push
adc
push
sbb
jecxz
sub
shll
dec
aad
addr16
cld
jecxz
imul
and
sub
mov
jl
mov
jl
sti
xchg
dec
pop
lahf
addl
cmp
and
sub
lods
push
jae
jp
jge
add
cmpsb
jb
cmp
sbb
lret
push
sub
xchg
pop
stos
daa
call
jge
mov
lds
out
xor
and
push
ljmp
adc
and
hlt
shll
jle
loope
sub
movl
mov
int3
pcmpeqb
push
inc
lahf
outsb
lret
rcrl
mov
push
mov
xchg
pop
push
subl
dec
lea
xorl
insl
xchg
add
xlat
jmp
stos
or
xor
pop
dec
cli
mov
jp
stc
in
or
inc
cwtl
stos
push
jo
sti
fsubrl
mov
pop
clc
inc
dec
lea
shl
arpl
push
adcl
jne
push
test
pop
and
loope
xchg
xor
inc
cmp
jne
add
xchg
xor
xchg
mov
popa
jns
jmp
jo
repnz
jb
outsb
push
movsl
push
cltd
faddl
insb
push
fcomi
lcall
ret
add
jo
fisubl
or
sub
inc
add
mov
dec
insb
sbb
jmp
movsb
push
aam
nop
das
ret
jecxz,pt
adc
mov
iret
cmpsb
jo
std
hlt
movsl
mov
mov
dec
mov
inc
pop
dec
sub
xor
xchg
test
adc
js
ficompl
ljmp
add
stos
xor
sub
testl
jbe
cmp
push
xorb
adc
rcrb
sub
cs
fstpt
inc
inc
and
and
and
pop
imul
fbld
jecxz
mov
dec
scas
in
popw
loopne
cli
and
adcl
push
or
jge
mov
or
cmp
adc
popf
sahf
lahf
dec
clc
mov
fdivr
xchg
idivl
mov
fnsave
dec
jae
rorl
jmp
fdivp
stc
je
and
push
loope
outsl
cwtl
sarl
xor
add
int3
ja
add
mov
je
add
out
or
stos
cmpsb
adc
outsb
pop
pop
clc
sahf
and
fiaddl
outsl
xor
add
and
and
cmc
clc
cli
ror
loopne
pop
push
rclb
pop
mov
jle
pusha
sbb
arpl
adc
xchg
or
adc
popa
mov
pop
ss
sbb
repz
notl
inc
inc
movsl
push
mov
dec
cmp
xchg
xchg
ljmp
movsb
mov
rorl
push
in
push
test
icebp
sti
notl
cmc
xchg
rcrl
in
inc
test
insl
pop
xchg
outsb
cld
pusha
add
dec
pop
out
pop
cmp
ficompl
test
shll
push
stos
lret
loopne
jp
inc
cmp
sbb
xor
or
inc
cmp
loopne
lret
mov
movsb
gs
push
adc
int
or
mov
adc
in
repnz
mov
mov
arpl
mov
fildl
and
pop
cmp
push
rolb
stos
and
inc
hlt
shlb
adc
iret
into
aad
push
mov
or
jecxz
enter
notl
sub
std
imul
lock
inc
add
test
sbb
stos
lea
cmp
sub
enter
jno
cmpsb
dec
sbb
fadds
pop
sarb
push
mov
mov
dec
xchg
outsl
adc
adcb
bound
stos
call
sbb
mov
or
lahf
std
jmp
mov
push
mov
push
aam
add
push
fmull
ljmp
pop
fs
ja
sbb
lret
pop
xor
sub
aas
dec
scas
fwait
fs
add
cmp
or
sub
pusha
sahf
lods
test
jns
mov
pop
cmpsl
and
sahf
xchg
jno
cmp
push
test
sbb
mov
testb
mov
push
lcall
in
xchg
and
outsb
mov
test
out
fxch
or
or
arpl
and
dec
cmc
cmp
mov
data16
or
cmp
add
lods
repz
lock
mov
add
dec
or
lock
gs
mov
push
adc
ficomps
dec
cltd
cmc
mov
enter
nop
inc
in
in
inc
mov
pop
jge
shr
std
js
pop
mov
and
sub
xchg
test
lds
pop
pop
push
scas
gs
cmc
cmpsb
mov
sti
ds
sbb
fidivs
call
popf
adc
into
lahf
jno
inc
xchg
jg
or
pop
xor
rorb
imul
pop
inc
cltd
and
inc
inc
rcr
add
aaa
pop
lds
pop
aas
push
repnz
cmp
xorb
mov
ss
adc
dec
cs
mov
xchg
dec
jg
add
bound
lcall
jecxz
mov
pop
rclb
jne
int3
jbe
fistpl
lcall
mov
fs
inc
pop
xchg
loop
mov
std
jge
adc
jns
mov
test
andb
pop
lcall
inc
out
loope
mov
sbb
cwtl
mov
leave
nop
insl
in
into
mov
ret
fsubrs
inc
shll
aam
sbb
loope
je
cmpb
pop
notb
push
jge
adc
ret
sbb
leave
dec
loop
cwtl
ljmp
adc
hlt
fildl
or
or
sarb
stc
repnz
in
inc
sbb
pop
lcall
popa
rcr
jb
jle
dec
stc
sub
je
out
mov
xor
sub
lret
fstpt
out
dec
nop
pop
leave
test
lret
jge
jge
jns
cmp
push
push
xchg
mov
lods
stos
aas
cli
jns
das
orl
sub
jl
ss
outsl
or
shr
jp
add
add
repnz
push
aaa
loopne
lods
push
push
lahf
push
dec
icebp
mov
insb
fsts
call
test
jnp
test
outsl
dec
test
cltd
leave
fisttpll
pop
dec
dec
adc
adc
sbb
sub
call
add
jg
add
pop
sbb
aas
lret
sbb
bound
xchg
mov
or
xor
sahf
sbb
fwait
jecxz
sarb
inc
or
rcr
sahf
or
mov
cltd
cltd
insb
fimull
stos
ljmp
dec
imul
clc
jp
cmc
repnz
cmpb
lret
cld
inc
mov
mov
clc
test
jnp
pop
cli
add
adc
adc
sub
pop
jl
and
sti
jne
aas
mov
mov
ret
jnp
int3
sbb
cli
fnstenv
xchg
das
ficomps
imul
in
rclb
sbb
aad
sbb
and
mov
pop
les
lret
cld
movsl
lea
jae
mov
add
inc
and
push
subb
enter
or
ss
mov
aaa
fsub
adc
mov
mov
push
jg
mov
repz
ret
les
das
jne
fsubrl
cmp
pop
sahf
ljmp
add
ss
stos
int
mov
mov
movsl
cmp
and
enter
pushf
dec
mov
cld
pop
aad
sahf
pop
push
push
stos
enter
int
sbb
inc
repnz
stos
mov
aam
das
imul
test
and
push
mov
cmp
mulb
sub
lcall
add
sbb
mov
xchg
rorb
dec
pop
inc
lea
cmpsb
fists
fcmovb
push
mov
push
inc
jo
add
xchg
lahf
xchg
xchg
daa
pop
mov
jnp
mov
dec
mov
lea
dec
sub
pop
xor
xor
jbe
jns
ficoml
sbb
sbb
fwait
cmp
jmp
arpl
data16
leave
dec
jle
add
cmp
xchg
je
fiaddl
pusha
into
xor
in
mov
mov
cmp
or
or
xor
push
mov
addb
push
add
xchg
mov
inc
mov
sub
and
mov
lea
cld
xchg
js
pop
cmc
and
dec
add
pop
addr16
lea
lods
bound
jle
push
dec
les
adc
xchg
int3
or
inc
or
sub
dec
test
mov
mov
mov
pushf
sahf
test
cli
cmpsb
int
call
lods
xor
ret
xor
mov
and
jnp
fwait
mov
aad
cmpsl
pop
inc
dec
jns
int
add
push
shl
xor
daa
push
push
cmp
rclb
xor
ss
mov
cmp
repnz
cmpsl
cli
ror
mov
mov
lcall
mov
das
movsl
and
fwait
pushf
loopne
adc
ja
dec
mov
cmp
fidivs
lock
dec
pop
adc
icebp
inc
push
push
scas
cltd
shl
and
mov
add
clc
jmp
cs
and
sbb
daa
or
cmp
daa
ljmpw
lock
sub
dec
fdivrs
push
cmp
mov
jno
leave
xchg
and
pop
or
stos
xor
jne
pop
push
ja
push
test
test
scas
adc
push
fdivr
pop
aaa
jecxz
push
jno
adc
push
inc
ret
in
mov
lcall
ja
cmovnp
loope
adc
mov
push
mov
mov
sbb
in
jae
push
or
push
sahf
lcall
mov
mulb
pushf
add
cmp
push
out
fnstcw
xchg
mov
pusha
jg
mov
negl
mov
insl
outsl
xchg
mov
or
mov
inc
cmpb
call
dec
popa
les
mov
jmp
and
pop
adc
fs
pusha
lock
add
sbb
pop
cwtl
push
mov
adcl
movsb
lret
loope
xor
add
sbb
pop
sub
xor
pusha
pop
int3
cmpsl
pop
pusha
pop
ret
fyl2x
lods
lahf
fdivp
loope
in
enter
cli
xchg
icebp
mov
dec
push
cmp
popf
xor
das
mov
aad
add
jge
lds
and
fdivs
into
xchg
pop
sahf
shrb
add
xchg
fwait
push
sbb
insb
mov
lret
dec
ret
cld
cmp
add
repnz
orl
inc
int3
sar
mov
jp
daa
and
and
test
mov
xor
cs
dec
push
mov
push
push
int
pop
loop
pop
mov
pop
push
pop
mov
test
pop
adc
fwait
mov
jg
pop
mov
xor
mov
in
pop
mov
push
bound
outsb
mov
inc
pusha
xchg
sahf
and
xor
mov
push
push
dec
shrb
pusha
lahf
imul
mov
sub
mov
sbbl
aam
push
popa
lret
mov
push
mov
or
out
cmpsl
cmp
mov
sbb
mov
xor
loopne
std
add
mov
push
das
pop
add
mov
gs
nop
call
sahf
or
out
mov
mov
add
nop
aas
jp
jae
push
inc
out
pushf
fsubrs
pop
jmp
jge
cmp
jbe
stc
push
add
sbb
add
and
rcll
pop
and
jmp
and
pop
mov
and
cmp
pop
enter
mov
lds
or
jnp
into
call
cld
ret
add
repz
jl
sub
mov
stos
cld
insb
scas
sbb
lret
mov
int3
mov
or
cli
and
jb
pop
insb
call
sub
sbbb
pop
sbb
inc
lret
jne
shrw
sub
push
sti
jne
adc
inc
nop
je
mov
fmull
outsl
inc
adc
jl
repnz
cmp
pop
and
pop
adc
in
scas
lcall
dec
mov
mov
xor
pop
les
xchg
out
mov
mov
loop
push
repnz
cmp
pop
xor
xor
nop
adc
loope
js
sub
pop
pop
outsl
jne
and
out
ljmp
cltd
xchg
test
and
ljmp
and
pop
cmc
mov
sub
xor
xor
mov
loop
arpl
inc
cltd
mov
pop
jnp
imulb
loope
shlb
or
mov
dec
sbb
js
gs
int
mov
pop
call
and
pop
cld
mov
rorl
movsb
mov
adc
in
jmp
jbe
inc
inc
mov
scas
pop
into
movsl
data16
sbb
pop
in
mov
cwtl
dec
fcompl
mov
mov
xor
out
call
inc
add
sbb
outsl
sub
leave
enter
lods
and
add
out
cmp
sub
add
sahf
pop
or
pop
sbb
adc
jle
mov
mov
ret
lods
sbb
imul
gs
aam
jg
ret
faddl
aaa
jecxz
add
mov
loope
das
je
jg
pop
jae
popa
lret
mov
popf
pusha
outsb
ds
pusha
inc
scas
mov
jb
push
mov
aas
mov
cmpsl
lods
xchg
pop
cli
fsts
pop
out
push
inc
dec
dec
lods
movsb
mov
sub
mov
mov
and
out
imul
dec
imul
cmp
xchg
dec
dec
shll
lods
push
jl
jno
sbb
push
xor
mov
hlt
adc
aas
inc
xchg
sbb
stc
mov
hlt
dec
stos
out
les
pop
dec
call
andb
pop
xor
and
cltd
insl
je
or
dec
mov
out
jnp
adc
xchg
jg
and
push
inc
dec
pushf
or
lahf
ds
imul
ds
jo
jns
jns
out
add
xor
jo
mov
test
test
je
pop
dec
mov
xor
push
push
call
mov
rcll
leave
pop
mov
pop
out
mov
out
push
mov
jmp
mov
mov
lock
sbb
mov
and
push
aad
add
mov
rolb
arpl
bound
js
fisttpl
adc
mov
push
mov
lcall
sbbb
test
repnz
pop
add
pop
cmp
pop
add
rolb
dec
fwait
mov
andb
jmp
loopne
cwtl
int3
cmp
test
add
fdivl
push
inc
adc
adc
xor
mov
subb
and
jg
inc
and
ss
in
xchg
push
cmpsb
fistps
add
mov
adc
ss
out
ret
add
sbb
add
out
cmp
mov
or
loop
hlt
xchg
loop
pop
sub
adcl
stc
jns
icebp
mov
push
test
mov
lea
pop
lret
daa
xchg
mov
fs
sub
sahf
adc
add
sub
lcall
les
out
or
mov
repnz
ret
mov
pusha
outsb
inc
mov
pop
jbe
cs
mov
cmp
cs
fdivs
mov
aad
and
xchg
sbb
push
jmp
lcall
xor
mov
sub
pusha
out
sub
out
xchg
leave
mov
or
inc
mov
or
adc
stc
xlat
fidivrs
add
adc
add
mov
or
pop
scas
xchg
sub
sub
pop
in
out
imul
je
cmp
pusha
xor
enter
jae
jb
jg
sahf
fmuls
movsl
rep
push
loopne
rolb
test
inc
outsl
and
adc
js
mov
cld
pusha
pop
rolb
pop
pop
mov
sbbb
cmc
inc
bound
sub
add
push
cmpsb
lods
sub
dec
loopne
shlb
in
gs
sub
pop
inc
inc
xchg
aad
fsubr
and
mov
or
pop
push
add
push
loope
jmp
lret
repnz
aad
cmpsl
movsb
xlat
mov
and
aaa
js
test
lods
shl
int
jmp
cmp
xchg
fdivrl
mov
int3
lret
sub
rorb
test
mov
jmp
into
ret
nop
in
and
dec
cmp
adc
jnp
inc
mov
inc
mov
test
mov
pop
lods
fbld
dec
fistps
test
mov
add
pop
sub
ss
loopne
xor
push
xlat
cmp
push
inc
lods
dec
inc
pop
fwait
mov
inc
aam
imul
or
xor
xlat
jnp
xor
repnz
sub
stos
test
cld
inc
cmp
paddusb
mov
jmp
fisubrl
jle
hlt
jle
loopne
mov
out
xchg
out
popf
mov
mulb
outsl
pop
push
adc
mov
mov
mov
imul
out
dec
pop
push
jno
xchg
movsl
push
or
mov
leave
shlb
mov
add
push
lds
test
cwtl
jns
lahf
mov
lcall
shr
addb
repnz
sbb
mov
and
pop
push
jns
adc
lods
sbb
addb
mov
xchg
push
sbbl
mov
or
jb
and
loopne
inc
imul
jnp
loop
ss
and
popf
xlat
add
xor
les
bound
les
test
jecxz
inc
ret
sbb
xchg
push
lcall
aas
mov
add
jl
push
outsb
xor
jmp
or
sti
cmp
lret
push
xchg
insb
mov
in
fdecstp
xchg
std
pop
and
stos
les
inc
sbb
xchg
daa
in
aam
dec
mov
jne
sbb
pop
out
add
mov
lods
pop
push
stos
inc
imul
lods
adc
ficoml
mov
push
bound
adc
stos
sub
and
pop
xchg
inc
sbb
rcr
inc
imul
movl
jno
sbb
dec
cmc
imul
pop
and
xchg
xchg
jp
mov
insl
les
popaw
jge
orl
jp
dec
and
fcoms
cwtl
adc
push
xchg
xchg
mov
cwtl
jbe
dec
ja
scas
faddl
jne
adc
jmp
push
cmc
imul
adc
xchg
or
adc
cs
leave
xchg
cmp
fistl
sbb
and
mov
pop
pop
inc
je
mov
shlb
shll
jp
out
pop
shll
shl
sub
dec
cmp
dec
jo
add
adc
loop
aas
jbe
inc
push
sub
out
and
loopne
pop
in
xor
or
pop
testb
rcrb
repz
or
or
rcrb
adc
sahf
adc
fsubrp
mov
daa
sti
push
jmp
cmp
sbb
imul
testl
fwait
aaa
mov
sti
push
jmp
cmp
sbb
imul
testl
fwait
dec
mov
sti
push
jmp
cmp
xchg
mov
cmpsl
jnp
imul
xlat
dec
out
pop
stos
pop
lcall
inc
fcomi
lret
cmp
sub
or
jecxz
movsb
or
fcomps
enter
iret
push
in
jns
dec
jnp
push
pop
cltd
dec
mov
stc
sub
or
clc
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
call
or
pop
mov
adc
sub
sub
xchg
popa
leave
mov
mov
jbe
pop
mov
decl
mov
inc
mov
mov
mov
or
pop
test
mov
pop
pusha
or
push
in
cmpsb
cwtl
mov
outsl
mov
add
pop
popa
cmpb
out
andl
sbb
movsl
movb
pop
int
cmp
mov
inc
clc
sub
stos
sbb
iret
or
js
imul
in
mov
xchg
sub
loopne
addl
pop
pushf
xor
jl
dec
add
jns
pusha
aad
ret
dec
push
or
adc
loop
aaa
lock
or
in
sub
test
test
and
or
cmp
call
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sahf
jo
pusha
fstl
or
or
or
iret
mov
fstpt
mov
pushf
sub
xor
or
or
paddusb
lcall
lahf
jo
jp
jno
insb
std
jns
imul
cltd
dec
mov
stc
sub
sbb
or
clc
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
clc
cmp
dec
push
daa
pop
lret
pop
mov
dec
adc
sbb
and
mov
dec
xor
jmp
rclb
xchg
push
mov
mov
mov
rclb
outsl
push
adc
sub
hlt
or
bswap
sbb
cltd
or
insb
sbb
aas
lcall
stos
mov
insb
pop
mov
je
lret
push
in
fcomi
sub
out
adc
xor
loopne
inc
outsl
hlt
add
jne
adc
pop
cwtl
cmpsb
fs
movsl
mov
fldt
push
dec
ret
cmp
mov
add
out
pusha
int3
mov
push
lahf
inc
int
daa
and
or
mov
xlat
mov
xor
lahf
hlt
push
scas
cltd
arpl
dec
pop
or
fldl
and
or
or
fsubrs
lahf
mov
int
outsb
sbb
ret
xchg
es
lock
lea
icebp
cmpsl
xchg
test
inc
lret
dec
je
stos
xor
cwtl
jp
in
sbb
or
pushf
shll
fs
bound
arpl
jg
sub
test
adc
pop
add
jns
ret
xlat
shrb
mov
imul
je
add
jg
inc
mov
and
mov
sub
xor
cmpsl
adc
paddsw
hlt
sub
mov
jae
ss
xchg
jmp
or
fisubs
jmp
push
mov
sub
jno
ret
popf
es
sub
inc
push
outsl
xchg
mov
in
sbb
inc
xchg
pop
jne
inc
inc
fcomps
mov
inc
sub
adc
faddl
inc
fistps
cmp
mov
add
xor
iret
insb
negl
popa
sub
imul
mov
mov
xchg
int3
scas
xchg
fndisi(8087
inc
stc
mov
loopne
sbb
add
mov
dec
mov
cmp
pop
in
test
scas
cmpsl
xchg
dec
incb
sbb
cmp
repz
push
and
repnz
jge
and
xchg
stos
mov
imul
push
es
call
out
pop
dec
imul
dec
cmpsb
imul
and
ret
fstps
mov
xor
inc
lods
pop
inc
in
sub
push
pop
mov
add
push
push
enter
fcmovnbe
and
sahf
sbb
cmc
adc
or
xchg
xor
sbb
sahf
push
das
dec
cmp
xchg
paddb
es
or
sub
sub
cs
mov
mov
dec
or
les
data16
cmp
or
sbb
call
xchg
sub
mov
sahf
sbb
sbb
out
pop
arpl
test
fwait
loope
shl
out
mov
add
rorl
xchg
sbb
cwtl
xchg
inc
in
add
in
cmp
movsb
out
popa
sbbl
mov
or
and
jmp
lcall
insl
pop
adc
sbb
mov
test
clc
mov
adc
orl
loopne
loopne
daa
sbb
pop
int
or
inc
test
rcrb
in
std
jo
xor
lods
dec
jp
pop
loop
pop
gs
cwtl
push
pop
inc
test
hlt
lds
movsl
pop
push
sbb
pop
mov
mov
int3
test
sub
cmpsl
fdivl
int
sub
xor
aam
clc
sbb
adc
insl
loop
movsl
aas
aad
push
outsb
mov
xor
outsl
aad
mov
sbb
xlat
gs
mov
ds
push
sahf
fbld
adc
insl
mov
pop
pusha
or
insb
mov
pop
jbe
cmp
test
shl
fwait
cmp
jnp
stos
fwait
test
in
sub
add
stc
in
leave
popa
pop
lahf
or
xchg
call
inc
mov
test
mov
add
nop
jne
arpl
jl
lods
adc
xchg
ljmp
inc
into
pop
jns
data16
dec
data16
stos
sub
xchg
dec
cmpsb
inc
push
cmp
mov
mov
imul
mov
fcoml
dec
inc
jle
popa
xchg
xchg
movsl
mov
enter
pop
mov
adc
jle
mov
mov
andb
loope
cs
test
mov
push
jbe
lahf
pop
and
pushf
ds
mov
jnp
push
xor
cmpsl
mov
in
test
add
dec
mov
cmp
fcompl
mov
ret
scas
shlb
push
xchg
out
popa
pop
imul
cmp
dec
inc
shrl
jmp
imul
addr16
js
ret
ret
xchg
mov
imul
dec
aad
cmp
push
lret
sub
push
cmp
jecxz
sub
jg
cwtl
addr16
push
dec
sbb
push
sbb
arpl
std
outsb
and
lea
testb
repz
dec
pushf
outsl
mov
cld
nop
cmpsb
dec
mov
sbbb
test
or
mov
dec
jmp
frstor
push
dec
fcomps
adc
dec
notl
ficoml
cli
out
shr
sub
cs
inc
add
xor
push
hlt
xchg
push
mov
test
and
push
or
rcr
filds
mov
pop
cwtl
shll
inc
xchg
lret
or
inc
daa
and
mov
xor
pop
jle
fs
in
lahf
cmp
xchg
push
mov
pop
mov
xchg
out
mov
ds
ja
mov
pop
loop
ja
cltd
dec
sub
or
lods
cmc
gs
mov
mov
fs
jb
xchg
bound
or
lea
add
push
and
sbb
sub
inc
cwtl
out
les
jno
cs
packsswb
insl
pop
sarb
inc
aas
inc
icebp
mov
and
lds
test
mov
adc
arpl
test
mov
inc
and
das
xor
data16
push
int3
jb
out
lea
cmpsl
shufps
mov
iret
dec
push
xor
xchg
jmp
cmp
repz
add
push
mov
sbb
scas
scas
xor
xchg
inc
cmp
data16
adc
fimuls
in
mov
xchg
adc
inc
cld
call
es
xchg
cmc
pop
lahf
mov
movntq
out
stos
mov
push
das
push
lret
mov
shrl
ja
inc
in
mov
out
in
sbb
mov
xor
cmp
adc
repnz
call
stos
movsl
arpl
jb
sub
add
fcmove
push
pop
iret
dec
sahf
popl
mov
fs
aaa
cs
xor
loopne
clc
pop
mov
test
int
pushf
mov
loope
imul
jo
jno
xchg
add
into
pushf
xchg
pop
push
sbb
cmp
pop
and
movsb
mov
jg
test
sub
pop
cmp
or
cmp
movsb
cltd
mov
inc
push
int3
es
lret
imul
cmpsb
adc
scas
xchg
cmpsb
dec
repnz
jns
jbe
ds
and
mov
inc
clc
inc
cmp
dec
and
jo
decl
dec
sub
in
imul
ds
inc
mov
pusha
pop
jne
push
xchg
pop
push
jmp
or
xchg
pop
cmp
xlat
dec
and
lcall
sahf
hlt
cmc
in
xlat
arpl
mov
xlat
in
fyl2xp1
sub
mov
xor
ja
push
pop
iret
add
shrl
call
dec
fildl
loop
xorb
shrb
addr16
sbb
lret
scas
xchg
loop
ds
lcall
push
sbb
in
bound
pop
inc
daa
addr16
out
clc
and
rorl
mov
stos
mov
cmpsl
jmp
rorl
mov
jbe
push
mov
jno
mov
popa
sub
int
imull
add
mov
dec
dec
sub
icebp
gs
dec
push
inc
adc
mov
xchg
dec
pop
mov
xchg
aam
test
mov
xchg
stc
inc
mov
adc
lret
add
xchg
sub
xchg
and
insb
ss
leave
sub
jns
cmpsb
cmp
xor
dec
mov
push
mov
pop
cld
or
mov
mov
pop
testb
inc
je
jno
and
ss
inc
jp
int3
dec
xor
pop
and
insb
mov
pop
cwtl
and
lods
cwtl
mov
mov
test
insb
test
loope
push
adc
xor
stc
sbb
sbb
cmp
dec
in
jne
testb
repz
pop
stos
stos
lcall
test
xor
in
lcall
adc
pop
test
push
test
mov
mov
leave
mov
ljmp
mov
aam
shr
int3
jne
mov
mov
outsb
enter
pushf
xor
cld
xchg
sub
movsb
popa
pushl
push
inc
mov
lods
or
outsl
cli
push
loope
jge
jl
in
xor
int
ret
pop
jns
mov
inc
jno
push
pop
pop
xchg
adc
jnp
aas
mov
sub
cli
mov
push
jno
jl
cmovle
jmp
jne
and
or
push
aad
lret
xchg
jne
xor
ret
stos
or
inc
das
jno
lods
ficomps
lods
out
aam
lret
cmp
xchg
mov
jnp
xchg
test
mov
daa
mov
shlb
jne
mov
cmp
inc
pop
les
fwait
cmpsb
arpl
cli
inc
xor
imul
roll
and
mov
and
les
popa
or
repz
daa
fdivrs
lods
and
arpl
or
inc
mov
out
sarb
mov
xor
pusha
sbb
or
cmpsb
push
jg,pn
or
ljmp
jge
daa
enter
jg
in
loop
repz
jle
dec
clc
adc
lods
jb
jl
stos
pop
div
lret
lahf
add
sbb
adc
ljmp
xor
pusha
cmpsb
cltd
push
mov
daa
gs
mov
cmp
mov
pop
add
ffreep
inc
fidivl
aad
test
add
arpl
dec
negb
mov
push
adc
dec
xor
nop
push
mov
int3
sahf
jg
mov
pop
pop
pop
inc
xorl
push
mov
mov
cmp
adc
xor
mov
icebp
inc
xlat
mov
or
loope
dec
mov
inc
movsl
jne
repnz
jge
mov
mov
fdivl
ret
ds
in
pop
iret
notb
cli
mov
or
cltd
xor
fisubl
mov
pop
inc
and
gs
pop
sbbb
add
push
jecxz
mov
lcall
fs
mov
popl
popa
scas
stc
xor
mov
ret
fs
and
in
popa
xor
cmp
pop
mov
in
sub
cltd
out
pushf
pop
cmpl
inc
mov
loopne
mov
mov
sbbb
movsb
cmp
ret
pop
mov
out
jnp
push
mov
cmpsl
pusha
imul
add
in
jae
jle
lret
imul
fstpl
adc
fisubs
add
int
dec
xchg
mov
inc
adc
xor
pop
js
lret
jb
fistpll
std
fisubrs
add
out
jecxz
cwtl
inc
shl
add
sbb
jp
and
inc
inc
and
inc
dec
adc
push
adc
push
loopne
daa
iret
push
pop
and
repz
push
popa
or
lcall
movsb
ret
fimull
dec
lahf
sbb
push
ljmp
mov
xor
lahf
icebp
adc
icebp
repz
jb
sbb
ficomps
xchg
inc
movsl
pop
jo
mov
lahf
test
jle
sti
gs
popf
stos
data16
fdivs
jecxz
aam
call
jne
popa
dec
adc
jnp
shll
fld
lds
xor
push
xlat
arpl
jno
stc
sub
dec
push
jle
lea
arpl
mov
cltd
test
sub
stos
iret
sbb
mov
outsb
cmp
pop
loop
xlat
mov
rolb
push
adc
push
push
insb
mov
inc
mov
popa
mov
mov
add
fxtract
pop
data16
xchg
mov
mov
dec
hlt
fisubrl
pop
stc
or
xor
clc
repz
add
jg
test
lret
shll
out
dec
lcall
mov
sub
xchg
lahf
xchg
xor
adc
enter
sti
jae
out
adc
sbb
or
push
jns
and
js
jne
inc
lahf
leave
pop
jbe
sub
xor
in
jecxz
mov
xor
jns
sub
rolb
inc
hlt
pop
or
sub
pushf
or
fwait
mov
mov
push
hlt
pop
aad
int3
shlb
movsb
aas
cmp
div
stos
add
ss
out
jp
bnd
sbb
mov
jne
int3
subl
rorl
and
mov
inc
daa
clc
mov
pop
stc
aad
in
mov
or
mov
xchg
adc
fnsave
cmp
in
in
ret
sarl
shr
aam
sub
xchg
shlb
sbb
dec
out
adc
inc
out
adc
repnz
bound
loopne
sub
inc
jp
std
inc
cmp
out
mov
psubsw
fidivs
imul
sub
pop
xchg
cmp
dec
pop
insb
push
and
fcomps
jae
loopne
leave
fistpl
mov
xchg
sbb
rol
xchg
mov
mov
daa
aas
dec
stos
sub
push
sbb
js
gs
aam
and
dec
sbb
lcall
lret
adc
shl
mov
loopne
xorl
std
mov
leave
sbb
iret
pop
mov
adc
add
leave
popf
cmc
lahf
leave
lcall
adc
jecxz
cmp
mov
les
jmp
dec
mov
mov
jge
cld
in
pusha
xlat
inc
ret
lds
mov
pop
add
add
cmc
jle
xchg
cmpsb
sbb
out
xchg
ljmp
jns
push
jl
dec
js
jne
enter
mov
xchg
mov
adc
call
push
outsl
out
add
jmp
jg
jo
xchg
push
pop
mov
flds
pop
push
cld
addr16
inc
lods
rol
data16
sub
pop
dec
xchg
dec
mov
jns
cld
lock
cli
in
xchg
imul
test
lods
imul
ret
js
rcll
xor
ret
jle
push
test
mov
stos
aad
hlt
stc
mov
jg
repz
pop
cmp
sub
ds
push
fwait
pop
mov
lahf
adc
mov
les
movsl
arpl
xchg
repz
xchg
movsb
xchg
sub
add
pop
in
fldcw
popf
xor
add
pop
cmp
jae
and
inc
clc
pop
xchg
mov
mov
or
xor
mov
and
xchg
sub
adcb
out
or
mov
mov
cld
dec
movsb
arpl
sahf
cmpsl
mov
push
add
xchg
mov
fs
cltd
mov
jecxz
cmpsb
mov
push
int3
xchg
hlt
add
shlb
cwtl
xorl
xor
lcall
xchg
daa
shl
es
mov
call
js
syscall
cmp
push
jp,pt
push
or
xchg
adc
rorl
or
fdivl
jge
pop
leave
in
inc
inc
fwait
xor
adc
cmpsb
mov
aaa
jl
xchg
jb
jne
fwait
in
add
dec
add
xchg
mov
loopne
mov
cs
sbb
jns
push
enter
or
fistpll
add
add
or
mov
jg
xor
xchg
mov
xor
in
int
jns
or
or
bound
nop
inc
sub
enter
aad
out
fsubrs
xchg
push
jnp
sub
pop
xchg
loop
lret
ret
jns
mov
push
das
inc
std
mov
pop
mov
insb
cmp
adc
dec
ds
andb
jge
sbbb
clc
xor
fsubs
mov
push
cltd
jl
jns
pushf
insl
lret
ret
leave
sub
add
cmp
rcll
aam
or
sub
jbe
out
das
in
push
sbb
flds
jmp
cmpsl
repnz
xchg
ja
jno
cmp
add
mov
cmpb
xchg
adc
push
aad
xor
xchg
gs
jge
dec
pop
adc
sarl
stc
mov
out
pop
out
jmp
xor
stos
fisubrs
jns
jae
filds
cs
test
jb
mov
in
mov
sub
fbstp
push
je
mov
jnp
or
dec
xchg
data16
aam
in
cmp
mov
or
iret
jno
pop
andb
loopne
mov
inc
test
mov
xchg
mov
mov
loopne
and
push
inc
pop
out
push
cmp
int3
xchg
jge
xchg
mov
mov
aam
or
inc
sbb
fsubrs
cmp
add
add
inc
es
fwait
adc
pop
lods
or
push
gs
xor
mov
fisubs
bound
mov
cmpsl
out
sbb
dec
lds
mov
push
sahf
pushf
int
fwait
cwtl
add
fiaddl
shl
sbb
jae
stos
xchg
push
fs
cmc
push
loop
mov
xlat
out
daa
shr
jmp
cs
loopne
lcall
mov
iret
push
xchg
mov
pop
bound
push
jbe
in
rcl
jae
push
jno
sub
daa
mov
cmpsb
xor
mov
xor
cmp
sti
mov
ja
pop
cli
dec
arpl
arpl
fwait
xor
and
pop
dec
cmp
pop
mov
fsubrl
or
enter
xchg
gs
mov
in
mov
lods
cltd
neg
sahf
cwtl
test
jle
push
sbb
sbb
scas
cmp
jp
mov
fistpll
cs
add
leave
pop
jns
das
pop
mov
hlt
inc
adc
outsl
inc
adc
fidivl
adc
sub
notb
shl
test
cmp
cltd
pop
cmp
pop
cmove
adc
cmpl
stos
jp
push
stos
ds
xor
int3
add
dec
push
inc
xchg
push
shrl
pop
lret
and
inc
lcall
gs
shll
xchg
fcmovbe
mov
test
xchg
mov
sub
pop
pop
rolb
shrl
aas
popa
xchg
jbe
xor
imul
sbb
pusha
adc
inc
add
dec
mov
shl
ss
aam
xchg
cltd
imul
jbe
testb
arpl
inc
cmp
icebp
push
jne
lea
jae
push
cmp
xor
mov
dec
pop
jne
xchg
movsw
into
inc
pushf
pop
jmp
pop
xchg
or
les
xor
data16
arpl
popa
int
popa
testb
or
dec
ret
inc
push
stos
outsb
adc
call
cli
sbb
out
jno
mov
incb
or
lods
xor
mov
out
test
pusha
mov
xchg
mov
xchg
inc
les
and
imul
sbb
sbb
and
adc
mov
dec
mov
adc
or
cmp
mov
push
fildl
test
cmpsb
fldl
inc
add
push
pusha
repnz
pop
shll
loope
fisubl
popa
testl
sub
or
xchg
orl
daa
dec
sbb
in
aaa
out
inc
mov
add
mov
mov
loop
aaa
or
or
gs
push
mov
pop
mov
fwait
cmpsb
and
out
lcall
jns
mov
pushf
insl
xchg
pop
js
mov
jns
push
mov
lods
into
push
sub
aaa
or
or
push
and
sarb
scas
xlat
or
jns
xor
mov
jmp
loopne
push
xchg
dec
sbb
jle
das
mov
insl
xor
mov
or
or
fadds
mov
dec
loope
mov
lret
mov
inc
adc
icebp
cld
or
inc
aam
pop
mov
mov
clc
fwait
push
out
lret
rorb
mov
lret
push
ss
adc
dec
loopne
xchg
loop,pn
mov
test
adc
scas
inc
inc
cli
leave
jle
fiaddl
into
mov
jg
cltd
cli
xlat
xor
je
insb
or
stos
arpl
dec
fisubs
mov
mov
or
jnp
mov
xor
jo
cltd
stos
das
mov
test
mov
add
pop
sbb
aam
add
stc
or
adc
iret
mov
pop
addl
push
xor
int3
hlt
addr16
and
cld
mov
aaa
mov
mov
inc
ret
push
dec
insl
js
inc
sub
and
xchg
loopne
sbb
lods
pop
das
mov
out
fs
mov
add
out
enter
test
cwtl
pop
mov
mov
dec
mov
stc
sub
sbb
or
clc
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
clc
cmp
test
mov
pop
mov
cmp
pop
cltd
dec
mov
stc
sub
sbb
or
clc
cmp
sub
sbb
or
pop
or
mov
dec
decb
mov
bound
mov
addr16
sbb
std
sub
test
clc
insl
test
fcomps
pop
das
lods
sub
js
push
fnsave
sub
jmp
pop
and
test
jno
inc
aad
mov
js
sbb
stos
sbb
aam
stc
pushw
jo
xchg
and
push
mov
inc
cmpsb
push
mov
or
xchg
shlb
movsl
cld
sbb
xchg
add
lods
push
aad
sbb
mov
adc
ror
stc
ss
push
xor
mov
cwtl
pop
jge
jge
mov
pop
call
lea
cmp
mov
ret
aam
jge
mov
aaa
fcoms
jl
sub
test
dec
popf
pop
fdivl
dec
mov
push
dec
xor
push
lea
sbb
mull
inc
sub
sub
mov
cmp
sub
push
aam
les
adc
add
jne
push
dec
sarl
dec
enter
mov
mov
and
inc
ljmp
cs
aad
mov
or
push
iret
xor
or
pop
fnstsw
pop
popf
pop
fwait
adc
in
sbb
jge
or
add
dec
fnstsw
or
call
pop
cmp
or
pop
int
fnstsw
or
call
pop
cmp
pusha
mov
inc
cwtl
out
adc
xchg
push
aad
gs
xchg
fwait
sti
out
xor
out
lea
xor
adc
adc
cs
jmp
pushf
mov
mov
lock
mov
outsl
out
dec
fisubs
pusha
cmp
ljmp
adc
jnp
inc
jmp
lock
mov
lods
cmp
and
cmpsl
xchg
pusha
adc
dec
lods
movsb
mov
fs
pop
clc
shlb
mov
in
imul
adc
incb
push
and
adc
imul
loope
sahf
mulb
mov
push
sub
mov
xor
and
mov
cmp
inc
fldcw
jle
jns
push
lock
sbb
pop
sub
aad
gs
cld
push
sbb
sub
add
xchg
xchg
ss
loop
fmul
neg
jg
cmp
sbb
fdivrl
movsb
in
fwait
dec
inc
loopne
cmp
pop
xchg
inc
sbb
aas
ja
pop
dec
cmpb
sti
inc
adc
rcl
movsl
icebp
mov
jl
clc
mov
or
shl
push
mov
outsb
xchg
and
lcall
mov
cmp
and
les
xchg
add
sti
dec
mov
push
mov
adc
out
cmpl
stos
js
inc
dec
sub
or
ja
outsl
cmp
out
or
mov
cwtl
pop
pop
adc
fbstp
push
fcoml
cmp
xchg
lahf
lcall
fistpll
xor
push
mov
fistps
pushl
add
push
dec
shlb
jnp
xchg
repnz
add
bound
ror
test
mov
test
xor
sahf
xchg
out
push
mov
push
adc
xorl
jne
dec
or
push
cltd
lahf
jo
add
dec
jmp
mov
adc
cltd
pop
outsl
aas
mov
repz
dec
sbbb
movsb
out
dec
adc
fdivrs
std
xchg
stos
ficomps
and
inc
in
xor
or
sbb
mov
in
popa
push
sub
xchg
dec
call
dec
ljmp
push
and
sar
orb
push
filds
jb
hlt
sub
cwtl
fsubs
in
popf
fsubp
adc
clc
sbb
mov
pop
subb
xchg
xor
inc
aas
dec
push
pop
inc
fcoms
mov
mov
lea
ss
in
test
ss
sbb
roll
popf
cmpsl
pop
fisubrl
and
lods
mov
or
daa
lds
sub
sub
sub
xor
lret
cmpsb
jle
push
imul
enter
mov
stos
jmp
push
mov
adc
loopne
cwtl
inc
pop
enter
fadd
add
add
loope
push
out
sbb
sahf
xor
and
mov
fsubrs
gs
divl
test
dec
shlb
cmp
aas
jbe
orb
sbbb
imul
add
sbb
mov
xchg
cmp
loop
cmc
push
cmpsl
dec
or
inc
mov
cmp
popl
pop
adc
sbb
push
jg
mov
xchg
add
fadds
ret
sub
gs
mov
pushf
mov
cwtl
and
sbb
push
lret
add
push
jecxz
cli
scas
adc
popa
add
movsl
call
cld
adc
leavew
add
notb
mov
in
mov
cmp
mov
dec
mov
rclb
adcb
out
stos
and
mov
cwtl
dec
mov
xchg
and
lods
or
add
xor
or
pushf
mov
inc
push
dec
das
push
fildll
loop
in
addr16
xlat
mulb
int
jo
ret
sub
lea
push
jge
pop
adc
gs
mov
gs
pop
fists
pop
and
xchg
int
jnp
ss
xlat
popa
fnstsw
xor
sahf
les
imul
fstl
inc
cs
repz
call
int3
jno
adc
mov
bound
fidivs
xor
stc
or
jnp
cmp
adc
int
jle
outsl
and
mov
cwtl
cld
es
jo
push
pushf
cmp
adc
cs
xlat
push
lret
xchg
mov
and
sbb
les
xchg
sub
jo
push
fsubl
lret
scas
and
mov
fidivrs
loope
daa
push
push
cmp
mov
pop
jno
bound
mov
or
nop
mov
push
pop
jmp
test
fistl
xor
in
in
jecxz
xchg
shrl
mov
scas
ss
das
pop
repz
in
mov
xlat
xchg
arpl
sti
inc
icebp
cmpsb
dec
out
adc
inc
pop
adc
inc
ljmp
push
pop
sbb
push
xlat
push
adcb
insb
aas
scas
mov
xor
movsb
fcom
xchg
es
repz
sbb
and
pop
subb
push
mov
stos
arpl
lods
jecxz
sub
ret
or
xlat
fsubrp
dec
and
popa
imul
mov
rcll
or
cmpps
insb
xlat
pop
ret
lock
ds
cmp
loop
int
cmpl
repnz
mov
xor
mov
push
dec
add
cmpsl
jle
mov
inc
dec
mov
jg
les
cwtl
mov
out
pop
sbb
xchg
fwait
pusha
mov
or
cwtl
cmpsb
aam
mov
jle
jmp
mov
movsl
mov
push
or
jl
sti
jb
and
xchg
imul
test
data16
mov
mov
fxch
jns
lahf
gs
popf
ret
nop
movsb
inc
xchg
icebp
nop
and
jp
mov
jle
gs
in
cmp
mov
cmpsb
xor
push
pushf
cmc
sti
and
test
xchg
in
push
je
jnp
and
fwait
sbb
mov
mov
out
push
fsubr
sbbl
mov
mov
xchg
jne
and
stc
inc
and
aam
in
dec
ror
es
ja
lods
xor
popf
fisttpl
inc
pushf
je
mov
incl
shlb
cmp
sbb
icebp
fdivrl
push
jo
shlb
shll
lcall
in
fcoms
add
dec
xchg
loope
lock
enter
push
inc
fsubrp
iret
sub
ds
ss
int
insb
ljmp
mov
mov
xchg
shll
fstps
push
push
mov
cmc
sarb
enter
mov
cmpsl
pusha
jns
inc
pushf
arpl
sar
push
mov
out
dec
ret
pop
lock
rorb
sub
std
pinsrw
out
or
push
pop
pop
fsubs
lods
push
and
loop
push
adc
add
mov
cli
nop
adc
loop
loope
and
repnz
repnz
xchg
pop
inc
xchg
dec
push
sbb
push
inc
pop
stos
loope
mov
mov
jmp
into
mov
adcb
ljmp
inc
sbb
jae
dec
push
sbbb
cli
push
insl
push
push
xchg
sub
cwtl
cwtl
out
cmp
into
enter
xchg
adc
or
out
mov
pop
pop
adc
sub
cmpsb
xor
xchg
xchg
aad
call
rcrl
ret
cmpsl
clc
sbb
aam
mov
adc
inc
clc
lahf
fisubs
pop
xor
pushf
fnstenv
cwtl
xchg
or
dec
negb
int
jmp
ds
fs
pop
sub
sub
jmp
mov
mov
fmulp
mov
add
mov
mov
and
clc
dec
dec
mov
dec
fs
paddsb
rcl
pushf
adc
jle
sub
add
pop
movl
ja
cmpsb
sbb
xchg
dec
cmp
icebp
les
and
sbb
mov
pop
push
fldenv
sbb
and
and
inc
inc
xor
sub
mov
sub
sbb
lea
pop
cmc
ret
or
mov
push
xor
adc
test
dec
cmp
lea
loopne
pop
add
in
push
lret
sbbb
daa
aad
push
jb
pop
dec
stos
pushf
pop
mov
push
popf
idiv
xchg
dec
push
scas
lcall
jns
lret
inc
addb
jne
loop
outsb
cmc
sbbb
stc
mov
jne
mov
rcrl
xchg
enter
movsb
pop
fwait
cwtl
add
mov
popa
fxch
cmc
xor
jmp
mov
repz
cmpl
test
xchg
cwtl
je
aam
adc
sahf
mov
loop
sbb
and
sahf
pop
pop
jno
pop
lret
jns
lods
sub
out
popa
jae
popa
shlb
pop
test
mov
into
nop
hlt
mov
std
rcrl
loopne,pn
pop
iret
repnz
data16
push
rcl
inc
call
outsl
fidivrl
lcall
inc
ja
mov
pop
iret
or
pop
gs
roll
lds
mov
cmp
mov
fimuls
repnz
mov
inc
icebp
xchg
addr16
adc
and
es
add
outsl
and
sub
jg
or
ja
rolb
push
jle,pt
arpl
int3
sbb
bound
enter
mov
push
add
jno
loop
mov
fmull
mov
jnp
xchg
xchg
aam
sarl
cmpsb
pop
dec
mov
in
xor
out
in
jecxz
lea
dec
test
pop
dec
mov
loopne
decb
bound
nop
add
into
ljmp
sbb
cmp
andl
cmp
push
pusha
orl
jge
mov
orl
rclb
gs
xlat
cmp
xchg
push
push
fdivs
mov
int3
jo
xor
cmc
inc
aad
inc
es
aad
mov
push
nop
mov
mov
in
pop
pop
lcall
sub
es
xchg
fsubrl
cmp
vmovaps
push
jl
fistps
jae
mov
call
push
add
fidivrs
mov
xor
pushf
int
push
mov
mov
lods
mov
cwtl
jmp
push
outsl
inc
push
and
inc
adc
xor
mov
inc
cmp
cmp
lahf
jecxz
mov
popa
std
aaa
mov
lods
int3
push
test
cmp
decl
inc
gs
mov
xor
aas
add
lods
shrl
xor
jns
mov
and
bound
lds
cmc
sbb
xchg
xchg
mov
dec
sub
push
or
je
xchg
add
popf
jnp
jo
add
movsl
dec
repnz
out
and
aad
jno
insl
popf
inc
and
and
push
pop
sbb
pop
sbb
pop
mov
push
mov
xor
jle
negl
adc
outsb
add
jns
push
repz
mov
je,pt
incl
xchg
data16
or
int3
push
jge
int3
add
rol
popf
add
sub
push
aas
out
mov
push
popf
xchg
xchg
nop
dec
sub
pop
dec
loop
stos
pop
ja
mov
push
mov
fldl
fld1
or
outsl
es
add
add
or
clc
pop
mov
cmp
adc
and
cmp
xor
dec
cmp
xor
push
lods
imul
imul
jmp
sub
lock
notb
repz
ja
and
pop
or
push
fildll
push
test
dec
fdivl
inc
dec
sbb
xchg
fiaddl
mov
add
sbb
pop
out
add
cmpsb
in
fisttpl
adc
pop
xor
std
ljmp
sbb
test
call
jo
out
repz
adc
jmp
inc
pop
sbb
int3
out
sub
imul
and
mov
aam
shlb
dec
movsl
cmp
jnp
sbb
mov
loop
pusha
sbbl
lods
jecxz
nop
jo
jne
jp
mov
scas
jno
outsl
lret
jmp
cmp
push
in
and
lahf
mov
je
fwait
inc
mov
out
jns,pn
mov
mov
ret
movsb
sahf
cmp
imul
lret
fistpll
xor
loopne
cltd
dec
adc
scas
and
mov
push
stos
movsl
mov
gs
imul
pop
xlat
inc
testb
das
leave
rcl
add
ja
or
add
xor
inc
dec
add
cmp
add
dec
pop
aas
pop
add
int3
negl
inc
push
or
cmp
stos
push
fimuls
sbbb
shll
aam
test
loope
scas
cwtl
int
pop
cmp
adc
cmpsl
loope
fs
mov
imul
inc
lods
out
testb
mov
cmp
cmc
jbe
enter
in
data16
fidivl
insb
cmp
fnstcw
loop
mov
out
cmp
stc
sub
xchg
dec
sub
xchg
shrb
rcrb
adc
add
pop
roll
insb
mov
push
sbb
xor
call
fisubrl
push
sbb
add
rol
hlt
sub
incb
push
and
dec
shrd
cli
cmc
mov
arpl
cmp
push
pusha
adc
jb
add
int3
arpl
xchg
inc
hlt
orl
ss
aaa
mov
popf
jne
in
push
ficomps
lds
hlt
imul
adc
mov
jo
inc
push
imul
leave
insl
cltd
mov
aad
ret
shll
ja
ret
insb
in
and
out
rcrl
fnstsw
sub
sbb
es
sub
sbb
xchg
rcll
aaa
xchg
push
out
xchg
push
jp
jbe
fistl
cmp
adc
jmp
xchg
push
mov
jbe
mov
daa
movsl
bsf
aam
mov
cmp
data16
popa
xchg
mov
adc
xor
xor
shll
lcall
ljmp
and
aam
jne
sub
movsb
je
mulb
mov
hlt
imul
push
out
sarl
cmp
enter
mov
xchg
aas
jg
xor
scas
not
sub
ljmp
addr16
xchg
sub
lea
push
jp
dec
int
lock
mov
gs
push
cld
add
out
je
or
add
out
cmpb
dec
pop
loopne
or
cmp
cmpsl
in
stos
sbb
mov
and
fisttpl
subl
push
add
jge
imul
pop
shrb
jl
idivl
icebp
cmp
sub
std
pop
pop
mov
sub
mov
jb
dec
out
scas
xor
fwait
sub
jb
sub
mov
sbb
or
fld
or
bound
popf
mov
hlt
dec
sub
mov
push
xchg
cmpsl
jne
mov
in
push
and
xchg
mov
gs
or
mov
adc
fwait
mov
and
sbb
adc
adc
or
adc
cmp
outsl
pushf
jbe
jmp
divl
xor
les
sub
in
aam
xchg
push
ljmp
jmp
call
clc
xor
popf
adc
fsubrl
xor
andb
cs
xchg
sub
cmpsb
pop
push
ret
adc
cmp
stos
inc
adcl
aam
push
repnz
sub
jl
movsl
bound
push
and
mov
sahf
test
dec
xor
iret
push
stos
inc
xor
out
in
int3
cmc
out
fdiv
cmc
push
lods
outsb
xor
adc
or
sub
xchg
aaa
sub
lods
push
pop
mov
pop
sbb
jno
pop
mov
cmp
mov
mul
scas
outsl
xor
or
add
xchg
dec
push
sar
jne
xor
je
xchg
add
pop
in
mov
lock
push
push
mov
ficompl
fwait
mov
sub
ret
fsubl
movsl
xchg
xchg
xchg
shlb
into
adc
rclb
adc
add
repz
jo
xchg
mov
insb
mov
mov
mov
movsb
or
mov
rolb
pop
out
inc
addl
ret
jp
sbbl
imul
mov
pushf
adc
das
ret
xchg
mov
fidivs
icebp
dec
movsl
ret
and
jp
rep
mov
push
sbb
adc
pop
mov
insb
faddp
rorb
jb
pop
jge
test
mov
into
pop
adc
scas
lret
jb
lods
ljmp
adc
jns
movsb
movl
cld
jge
outsb
sbb
mov
mov
addr16
push
cwtl
insb
lret
dec
andb
mov
cld
mov
adc
mov
lock
in
test
pusha
sahf
sbb
push
repz
outsb
frstor
push
push
out
sahf
loopne
and
dec
mov
insb
lods
cmc
aaa
dec
push
inc
add
inc
out
mov
sbb
loop
jnp
fwait
cmp
out
xchg
push
enter
sti
adcl
dec
mov
mov
sub
repz
into
out
outsb
xlat
cmpsb
mov
out
stc
and
jbe
das
out
push
ret
cmp
xor
inc
test
fisttpll
repnz
movsb
sbb
movaps
dec
adc
stos
push
jb
pushf
jnp
stos
addr16
cli
xor
andl
jne
dec
pop
lods
jnp
sbb
mov
push
jecxz
push
mov
jno
nop
dec
mov
insl
mov
shll
push
test
out
mov
out
cwtl
std
aas
adc
adc
mov
pop
fs
out
adc
repz
iret
stos
orl
lds
and
out
icebp
int
lret
mov
cmp
int3
aas
push
scas
mov
add
mov
mov
dec
int3
sub
xor
rcl
sahf
jne
xchg
adc
inc
adc
lahf
cmpsl
adcb
pop
jnp
pop
std
adc
outsb
sub
lret
jo
sti
std
mov
int
out
subb
push
dec
sbb
mov
stos
xor
mov
fwait
push
jge
pop
lcall
imul
filds
xchg
divl
jle
sbb
lahf
mov
stos
test
in
jbe
add
jl
pop
push
shlb
test
je
popa
add
arpl
mov
aaa
lret
adc
push
into
adc
cltd
pop
inc
mov
or
mov
xchg
dec
or
iret
lahf
mov
sub
push
pop
mov
arpl
sbb
jl
lods
hlt
mov
lods
rcrb
bound
or
mov
jnp
push
mov
std
hlt
sub
dec
and
mov
fstps
sahf
enter
rorl
sbb
and
inc
hlt
scas
jne
cmpsb
insl
out
pop
push
rclb
xchg
jmp
dec
jbe
lds
aam
loopne
xor
jmp
fisubrl
dec
js
push
pop
or
fmull
lret
scas
inc
shll
dec
dec
mov
pop
or
sbb
bnd
push
sbb
adc
aaa
add
cmp
dec
xor
popf
fnstenv
loopne
in
aaa
sub
js
mov
inc
scas
jnp
aaa
add
sti
sbb
jp
bnd
sbb
scas
test
jne
shll
jae
push
pop
aad
add
popa
adc
adc
push
pop
addr16
mov
adc
rdmsr
mov
xor
pop
sbb
mov
push
push
movsl
dec
add
dec
push
jmp
mov
popl
shlb
fisttpl
leave
mov
push
outsl
loope
mov
mov
ret
xchg
jecxz
and
data16
sbb
enter
push
mov
aaa
jl
subl
leave
and
jbe
test
add
data16
jge
es
fcomps
cmc
das
cmc
insl
shll
mov
testb
dec
out
decl
xlat
push
or
ja
sub
ja
adc
mov
xchg
cs
xchg
cmpsb
daa
mov
test
and
fisubl
mov
pop
jmp
lea
das
std
sub
in
cmp
inc
xchg
and
enter
ljmp
sarl
imul
inc
jl
repz
pop
xor
dec
or
adc
popa
negb
pop
and
mov
push
je
in
shl
inc
pop
nop
iret
mov
dec
sar
subb
stc
addr16
push
push
pop
push
sar
decl
push
adc
int3
dec
xor
imul
popa
jecxz
sub
and
push
pop
ljmp
mov
js
push
fnstsw
or
call
pop
cmp
or
pop
int
fnstsw
or
call
pop
cmp
or
pop
int
fnstsw
or
in
jge
dec
stc
pop
or
sbb
lea
popf
js
push
fldl
push
xchg
xor
pusha
andb
aaa
mov
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
gs
adcb
sbb
dec
adc
add
rorl
cmp
enter
and
push
or
jae
add
dec
and
clc
ret
mov
repz
mov
mov
jae
add
adc
xor
xchg
stc
xchg
enter
mov
xor
sbb
jae
and
mov
xchg
adc
lea
jmp
aas
xchg
idivb
add
cmp
inc
sub
divb
insl
subl
mov
sub
or
xchg
cmp
pusha
callw
pop
ja
mov
cmp
xchg
insl
push
inc
ja
dec
dec
and
mov
pop
int
cmp
sub
addr16
cli
insl
lds
divl
fdivr
xchg
mov
lcall
call
negl
sar
xchg
cwtl
mov
cmp
divl
xor
add
jbe
rolb
mov
cwtl
out
cmp
lea
cmp
arpl
add
dec
and
xor
sub
push
jecxz
xrelease
mov
adc
jae
or
cmp
mov
stc
xchg
ficompl
ss
push
shll
outsl
sbb
dec
sub
mov
stos
in
mov
xchg
fwait
in
popf
xchg
mov
pop
or
js
pop
push
sub
and
test
mov
repz
mov
cmp
arpl
jae
add
dec
and
test
mov
repz
mov
cld
cmp
ja
cld
sub
dec
scas
mov
imul
sbb
std
loope
jl
dec
sbb
push
cmp
mov
and
sbb
mov
rolb
or
jle
or
lret
xor
jns
jns
lahf
sub
jnp
popa
mov
clc
cmp
pop
bound
gs
jmp
or
fists
sub
je
sub
imul
push
out
mov
ja
push
cmp
push
cmp
mov
cmp
stc
fs
mov
mov
call
mov
outsb
lret
add
jmp
sbb
dec
out
ficompl
push
lcall
in
xor
bts
adc
negb
sub
cmp
cmp
sbb
sub
jnp
shrl
hlt
mov
sbb
fldenv
xlat
call
test
lea
pop
stos
and
test
leave
push
mov
je
aam
in
pop
outsb
lds
fcomp
jo
sbb
setne
pop
or
imul
adc
std
jmp
xor
xorb
dec
lret
push
popa
mov
pop
test
pop
jecxz
mov
sub
ja
icebp
mulb
inc
fldenv
inc
lock
cs
idivb
push
sbb
into
mul
inc
popf
test
push
mov
rol
incl
sahf
call
jb
cmp
movsb
xchg
sti
lds
iret
push
pop
ja
dec
shll
idivb
adc
testl
or
adc
nop
sub
in
mov
mov
movl
rcl
mov
add
lret
addr16
repnz
je
mov
rcll
filds
add
enter
sub
mov
mov
icebp
adc
mov
stos
dec
or
imulb
lahf
cltd
pop
leave
mov
push
and
andb
enter
les
shr
das
loop
xor
int3
int3
das
pop
inc
mov
out
neg
flds
mov
outsb
in
outsb
jb
iret
pop
insl
mov
sbb
mov
movsb
daa
cmp
push
push
icebp
mov
imul
movsl
sbb
push
mov
sub
xchg
je
mov
into
dec
adc
sarl
inc
mov
pop
nop
popl
fs
repnz
inc
mov
loope
sahf
and
xor
xchg
cmp
mov
out
lahf
sbb
push
test
scas
imul
les
filds
dec
xor
sbb
push
punpcklbw
xchg
dec
gs
sbb
call
lahf
xchg
test
jne
xchg
push
popa
and
imul
jbe
pop
popf
mov
inc
push
mov
jp
adc
mov
sbb
jmp
cmpsb
pop
adc
and
lods
test
loopne
stos
adc
mov
push
inc
mov
mov
stos
pop
jae
mov
add
add
call
mov
repnz
mov
add
adc
jno
mov
mov
scas
xchg
enter
push
and
stc
sbb
jbe
ror
jp
ret
aaa
pop
mov
in
cmpsb
sti
adc
ja
xchg
cs
je
bound
ret
jg
mov
cmc
xor
pop
and
jne
clc
ljmp
lret
xor
loope
fsubl
insb
cld
add
sbb
xor
ret
repz
inc
aam
repnz
jle
and
out
or
fisubrs
or
adc
push
imul
frstor
mov
aas
cs
xchg
adc
cmp
in
pushf
dec
push
lret
push
jb
adc
and
push
cltd
aas
iret
fsubr
in
sbb
cmpsl
and
xlat
aaa
repnz
push
insl
sti
fiaddl
and
push
jmp
lahf
lret
sbbb
inc
xor
push
pand
ret
dec
into
shll
or
adc
push
xor
pop
xor
lds
sbb
pop
xchg
cmpsb
and
cmpsb
xchg
dec
xchg
mov
xacquire
jnp
or
jb
mov
sbb
lea
or
mov
repz
cli
enter
jae
dec
shrl
xchg
scas
cmpsl
add
adc
out
push
loopne
je
pop
push
jno
outsb
outsb
dec
mov
inc
cmpsl
movsl
std
lret
push
lock
into
jbe
sub
gs
shl
sub
fsubl
pop
mov
pop
sarb
xor
mov
xchg
sbb
inc
push
stos
imulb
add
sub
xor
mov
or
jecxz
jne
xchg
cmpsl
adc
sub
sbb
dec
insl
sub
mov
jnp
mov
add
add
fmull
rcrl
pop
stos
inc
aad
adc
mov
pop
and
enter
xor
or
pop
icebp
push
pop
sbb
pop
subb
mov
subl
popa
cwtl
adc
insb
push
into
cltd
xchg
push
test
inc
dec
movsb
lea
sbb
test
andl
nop
in
cmc
gs
adc
xlat
push
xchg
insl
lret
mov
insb
lods
xor
sti
pop
sti
mov
loop
out
push
adc
lea
lock
les
or
inc
push
arpl
nop
adc
jl
xchg
insb
push
mov
or
mov
das
seta
sbb
dec
and
test
fcompl
fwait
push
push
inc
dec
ret
xchg
popa
add
fimuls
sub
test
jbe
mov
aaa
nop
jne
call
sub
test
les
in
dec
mov
cmp
jl
push
push
jecxz
nop
out
daa
or
jg
imul
outsb
xor
sub
pop
push
sbb
push
jg
sbb
sub
push
ja
push
fistpll
xchg
outsl
das
test
xchg
jno
push
icebp
loop,pn
decl
or
cmpsl
cmp
cmc
jnp
call
mov
lock
fucom
mov
sbb
aas
push
dec
and
out
mov
insb
aam
aas
jb
jns
jne
sub
xchg
test
cmp
daa
pushf
aaa
js
xor
stos
dec
aaa
push
jge
nop
jbe
xor
repz
pop
sti
inc
xchg
adc
sbb
xor
pop
fwait
std
xchg
loope
bound
outsb
div
and
mov
fimuls
test
push
xor
shr
and
cwtl
lahf
and
or
jns
mov
jb
mov
cmpsb
dec
sbb
or
bound
addr16
xlat
jecxz
lret
insl
jnp
mov
movsb
lret
push
popa
sbb
sbb
int
jg
adc
loop
sub
mov
pop
into
and
or
and
mov
rorl
add
adc
xchg
or
andl
into
mov
fdivrs
fmulp
fidivrl
data16
scas
stc
mov
scas
int
mov
mov
mov
mov
dec
icebp
push
stos
cmp
push
dec
add
or
in
in
add
aas
mov
dec
hlt
cli
xor
in
insb
or
and
add
add
repnz
pop
mov
data16
arpl
dec
testb
xor
loope
pop
mov
aas
pop
adc
jg
jb
dec
test
push
cmc
cwtl
add
add
icebp
int
and
inc
and
add
mov
xchg
out
fmuls
mov
in
sbb
jle
push
fxch
inc
in
sub
dec
mov
popf
in
pusha
mov
shrl
das
jle
push
sub
out
mov
cld
iret
scas
inc
iret
ret
insb
cwtl
dec
sub
test
xorb
loop
mov
push
jb
ds
or
mov
and
nop
rcl
ret
rorl
push
jo
xchg
xor
cmp
pop
sbb
fwait
xchg
inc
mov
imul
pop
mov
mov
or
xchg
sbb
adc
sahf
shll
loop
add
jp
outsb
aam
and
stos
push
ss
sub
push
shll
rorl
fwait
pushf
sbb
mov
mov
pop
andb
repnz
ror
shll
mov
mov
jg
push
pop
jp
imul
inc
cmpsb
subb
push
xchg
or
or
mov
jp
data16
push
cltd
out
ds
push
movsb
jo
mov
aaa
insb
mov
add
xchg
bound
rclb
pop
nop
cmp
clc
scas
dec
push
cmp
out
dec
stos
mov
mov
fnsave
cli
jno
push
pop
dec
jae
jae
rcrl
lods
and
sbb
push
jo
cmp
iret
sahf
and
stos
jnp
sub
jecxz
add
les
or
and
ss
dec
sub
test
mov
mov
mov
mov
jmp
push
sti
push
aaa
aas
pop
dec
mov
hlt
or
into
cli
js
sbb
xor
out
xchg
add
mov
mov
mov
mov
sub
or
push
xchg
rorb
shr
std
into
jge
or
cli
or
test
fcmovnbe
or
aad
pop
inc
jo
jbe
mov
pop
dec
jp
pop
xor
int
fs
mov
lretw
sbb
popa
ret
mov
es
mov
pop
push
adcb
fs
sub
in
xor
imul
in
std
jnp
inc
mov
pop
mov
ret
or
inc
dec
out
sbb
mov
push
fcmovnbe
insb
dec
sub
cmc
adcl
xor
iret
add
mov
mov
mov
es
mov
push
stos
push
sub
jge
fld
fwait
jmp
mov
ljmp
mov
sbb
inc
mov
jae
pop
loopne
cmpsb
cmp
jecxz
jmp
push
xlat
or
test
adc
fadds
jmp
adc
mov
xchg
shll
cli
ss
push
adc
xor
ret
aaa
jl
jecxz
neg
minps
jp
stc
add
sti
xor
in
mov
js
ret
or
xor
shll
inc
pop
clc
hlt
push
mov
fs
cmp
stos
dec
push
ss
jns
sbb
out
stc
push
cwtl
mov
mov
push
mov
add
loope
jp
dec
ss
add
adc
sarb
and
sub
es
sbb
icebp
xchg
mov
xchg
test
sbb
sbb
lret
pop
jb
addr16
pop
sar
sbb
cmpsl
imul
sbb
sub
imulb
xchg
push
push
sbbb
test
movsb
aaa
hlt
xchg
xchg
clc
call
and
push
fwait
int
fidivl
mov
loope
insb
sbb
mov
add
pushl
dec
lock
call
mov
add
xchg
scas
cmp
mov
ja
or
push
add
adc
pop
cmpsb
mov
xor
inc
and
sbb
sbb
out
and
sbb
mov
push
loop
add
sub
xor
sub
adc
dec
pop
adc
push
sub
rcr
sbb
cmp
push
imull
dec
adc
mov
adc
pop
imul
sub
shrl
lea
jmp
sub
xlat
inc
arpl
pop
ss
popa
mov
mov
sbb
jbe
cmpsl
in
es
push
cmp
loop
pop
inc
lock
cld
cli
mov
call
or
addr16
dec
push
mov
sub
mov
adc
insw
xchg
dec
mov
adc
cmp
mov
xchg
ss
xor
pop
lea
and
test
xlat
jmp
jbe
xor
jae
stc
lds
inc
or
sub
xlat
xor
push
mov
mov
adc
dec
sbbb
or
inc
xchg
shr
and
dec
sbb
inc
xor
test
cmpsb
jle
pop
mov
xchg
lock
leave
mov
daa
pop
or
stc
test
dec
test
out
daa
jmp
shll
inc
out
mov
pop
push
inc
jmp
push
xor
pusha
sbb
outsb
fdivl
and
or
pop
dec
iret
enter
jno
ljmp
hlt
push
mov
fsubp
enter
pop
out
jne
ret
push
sahf
popf
mov
inc
jg
nop
shlb
and
mov
movsb
sbb
jb
jb
add
pop
mov
outsb
pop
iret
mov
daa
data16
xor
mov
cmp
into
mov
xchg
in
pop
in
sbb
pop
jl
sti
incl
jmp
push
pop
aaa
imul
jl
rcl
ret
loope
sub
repnz
cwtl
cld
dec
outsl
stos
daa
daa
lock
mov
pop
fsts
jmp
xchg
jb
lea
push
fisttpll
xchg
je
aad
jb
inc
sub
or
mov
or
mov
push
mov
in
xchg
and
bound
cmp
push
imul
mov
push
sub
jo
stos
sahf
insb
push
pop
imul
repnz
int3
popf
fisttpll
testb
aad
in
pushf
xchg
xor
inc
mov
mov
cli
sub
pusha
jmp
decl
and
adc
mov
cmpsb
push
push
cmp
pop
imul
push
loopne
mov
xorb
or
iret
daa
lahf
xchg
push
adc
jbe
cmpsl
stos
mov
ss
or
xor
mov
adc
aaa
ds
daa
and
xchg
scas
sbb
sbb
repnz
sub
cmp
scas
jbe
dec
ficomps
sarb
inc
cmp
and
lea
lea
mov
mov
dec
jg
cmpsw
jmp
gs
out
inc
adc
lret
sbb
inc
mov
pusha
dec
pop
mov
aad
add
negb
mov
je
and
test
adc
adc
mov
pop
pop
into
adc
and
ficoms
rolb
add
addr16
push
push
and
or
or
cmc
or
repnz
sbb
subl
fwait
shr
push
or
sub
mov
jbe
mov
jmp
lods
sub
test
jne
std
sub
fistl
jp
out
push
xchg
fdivl
jnp
cmp
icebp
push
cmp
sub
sub
inc
jns
shld
adc
mull
test
imul
jmp
jmp
add
mov
cld
and
test
mov
ret
push
test
and
out
inc
ret
mov
sbb
sbb
and
jg
xchg
pop
add
xor
ret
into
shl
sub
in
pop
mov
pop
clc
into
das
dec
xor
mov
rorb
ja
mov
xor
xor
enter
xlat
ret
xor
in
inc
cmp
dec
jb
jno
outsb
test
int
xor
mov
jnp
lods
dec
ljmp
int
clc
outsb
xor
fmul
lods
add
aam
pop
and
push
outsl
mov
mov
out
jb
cmpb
daa
icebp
lods
fstpt
and
add
fcmovnbe
mov
xor
cld
aad
push
icebp
mov
sahf
add
pop
mov
inc
add
sbb
xchg
lea
out
lods
xor
rcrl
pushf
imul
push
mov
in
pop
push
in
lea
or
daa
xor
inc
je
xchg
lahf
stos
aaa
xchg
mov
pop
leave
insb
inc
shrl
adc
imul
inc
mov
fstpl
bound
div
sub
or
pop
push
and
mov
and
je
cli
mov
mov
fcomp
sub
outsb
outsb
aad
adc
sbb
adc
jne
stos
pusha
adc
jno
push
xchg
xchg
inc
leave
jp
ffree
xor
lcall
mov
popf
lods
push
daa
scas
cld
int
call
sbb
rcll
out
cmp
call
cmpb
dec
cmp
dec
pushl
cmp
dec
pop
add
test
lods
mov
mov
lods
lahf
pop
bound
iret
dec
insl
stos
shlb
adc
rcll
xchg
xchg
out
cmp
xor
ss
cmp
pop
scas
mov
es
xchg
jg
adc
enter
pop
into
clc
mov
test
pop
je
add
andb
sub
push
or
push
fcomi
push
add
aaa
dec
sub
push
pop
es
or
mov
sbb
popf
fidivs
loope
fwait
inc
mov
xchg
xlat
aad
xor
pushf
mov
xchg
out
or
lods
and
cmpsl
jmp
mov
cltd
inc
xchg
dec
out
test
or
mov
jnp
lret
inc
roll
pop
dec
and
xor
imul
pusha
lret
cmp
and
gs
inc
fwait
psadbw
mov
mov
mov
or
mul
rcrl
fidivs
sub
xbegin
mov
pushf
into
out
sbb
cmc
cltd
popa
or
mov
sub
imul
or
xor
mov
mov
cmpsl
rolb
push
jo
xchg
or
leave
add
sbb
and
push
push
inc
adc
js
add
cmpsl
inc
inc
ds
je
daa
inc
fwait
inc
cmp
dec
lret
jle
lcall
cmp
cmpsb
insl
cltd
ret
lock
mov
in
ss
ss
mov
or
test
les
pop
push
jge
fbstp
call
xor
inc
add
pop
dec
pushf
aas
enterw
scas
incl
inc
ret
push
not
sbb
cmpsb
sahf
jne
add
shlb
aad
mov
repz
push
add
int
mov
xor
sbb
dec
dec
repnz
js
sub
fstl
loopne
int3
push
outsl
lahf
mov
cmpsl
out
sub
imul
test
pop
shlb
dec
ret
xchg
sub
push
lods
inc
int
xlat
movsbl
lea
cmp
ret
mov
push
imul
pop
sbb
adc
negl
repnz
lods
push
es
sbb
fnstcw
dec
lods
leave
mov
xchg
negb
out
shrl
xor
test
ja
lock
adc
cld
pusha
xor
push
or
and
rclb
cmc
adc
loopne
mov
gs
add
and
fistl
inc
sbb
fidivl
xor
adc
xor
or
sbb
scas
insl
adc
or
pop
stos
stc
add
jbe
mov
push
pop
xorl
gs
lds
mov
sub
sub
adc
cwtl
sub
cmp
cmp
mov
mov
outsb
jle
lret
cmpsl
aad
out
aas
lcall
cmp
cmp
xchg
adc
hlt
pop
adc
xchg
jmp
fs
xor
jecxz
test
aad
bound
ja
ljmp
jb
mov
xor
and
jge
lock
cltd
inc
shll
hlt
mov
int
leave
scas
push
pop
call
imul
add
rcl
lods
cld
loop
adc
xchg
imul
cmp
cld
or
mov
cli
mov
lock
iret
inc
lret
sbb
test
clc
xor
dec
lods
in
push
mov
mov
cld
mov
fcoml
sub
push
push
or
xchg
lahf
in
out
mov
push
outsb
int3
sub
adcb
test
dec
mov
mov
gs
add
dec
dec
xor
movsb
push
or
aas
push
pop
adc
xor
sarb
pop
and
out
out
cmp
push
fadd
lret
add
lock
lock
add
sti
jg
xchg
int
adc
in
add
loope
out
mov
mov
gs
ljmp
add
cmp
adc
jecxz
rclb
cmp
xor
leave
je
xlat
repnz
enter
jmp
jns
sub
sub
push
clc
jp
popf
neg
push
jo
add
push
inc
or
dec
jo
push
or
sbb
sub
lcall
out
and
inc
lods
mov
or
add
inc
push
adc
lds
xchg
push
scas
lea
inc
test
fildll
mov
mov
aaa
sahf
add
sbb
mov
push
dec
repz
dec
dec
push
pop
jns
ljmp
sub
add
lock
jge
xlat
sub
add
int3
mov
cmpsl
imul
dec
jnp
fst
sbb
outsl
js
xor
jg
jb
pop
or
int
xor
int3
out
xor
insl
push
mov
lods
sub
inc
outsb
dec
adc
cmp
in
xchg
insb
leave
sbb
push
paddsw
hlt
jbe
lcall
sub
arpl
push
and
test
mov
repz
mov
cmp
arpl
jae
add
dec
and
test
mov
repz
mov
cmp
arpl
jae
add
and
lods
ret
mov
repz
mov
adc
andb
push
and
xor
jecxz
test
pop
daa
dec
outsb
pop
jle
dec
jp
push
mov
adc
out
out
dec
into
out
scas
lcall
outsb
pop
jle
dec
jp
push
sbb
sbb
cmp
pop
out
dec
into
cli
fsubrp
outsb
call
sahf
stos
outsb
inc
jle
dec
bound
add
adc
and
xor
fcmovu
jmp
scas
aad
sti
enter
push
sbb
dec
pop
xor
add
add
xchg
pop
jmp
filds
shll
pop
cmc
rclb
mov
stc
lock
adc
and
push
ds
jbe
dec
dec
sub
test
inc
ja
fisubrl
adc
jmp
sahf
out
outsb
add
mov
test
or
sub
mov
scas
arpl
jnp
xor
decb
or
fistps
push
ja
jg,pt
xor
push
es
dec
add
lcall
cmpl
in
nop
int3
scas
cmpl
jp
mov
mov
mov
push
mov
jle
dec
arpl
sbb
or
cmp
xor
ror
jecxz
repz
cmpb
das
pop
or
daa
pop
aaa
ucomiss
dec
imul
dec
out
mov
lret
cmpsb
scas
mov
or
sbb
sub
xor
jbe
dec
sbb
lahf
fsubrp
scas
ljmp
or
dec
and
xor
bound
or
cmp
sub
lret
fsubrp
scas
lcall
outsb
pop
jle
dec
jp
push
sbb
or
cmp
sub
lret
fsubrp
scas
lcall
outsb
pop
pop
pop
sar
jno
rclb
jmp
ss
out
sub
dec
pop
notl
sbb
jne
out
cli
jo
xlat
xor
int
cmpsl
loopne
in
into
outsl
pop
pop
lock
ret
lock
bound
imul
lea
xchg
or
ljmp
cmpsl
scas
pusha
mov
es
roll
pop
or
pop
outsb
adc
aad
outsl
sbb
into
fdivs
mov
add
cmpsl
loopne
test
scas
pop
inc
pop
in
add
jmp
das
lock
fdivp
hlt
cmpsl
cmp
sub
inc
mov
shl
or
cwtl
fnstcw
xchg
js
and
fnstcw
lods
xor
out
and
arpl
ret
fists
xchg
out
fidivl
push
fstl
dec
and
mov
movsl
add
scas
jmp
push
cmp
imul
gs
je
sbb
inc
scas
std
int
lods
icebp
imul
aas
scas
push
int3
push
roll
mov
scas
mov
xor
outsl
test
dec
pop
jns
insb
adc
testb
push
ja
cli
xchg
popf
push
dec
in
mov
sub
or
hlt
enter
rolb
mov
adc
insb
push
pop
notb
push
jbe
fucom
fists
mov
sub
repz
leave
cmpsb
dec
lret
lods
lcall
xchg
or
jmp
movsb
in
push
movsb
inc
ja
mov
arpl
mov
cmpsb
xchg
mov
push
push
sbbl
xchg
mov
mov
arpl
fldl
cmp
jg
imul
jp
fidivrl
popa
inc
hlt
in
test
mov
clc
ror
cmp
dec
repz
push
mov
mov
push
or
cmc
daa
mov
mov
push
or
sub
mov
movsl
jbe
repnz
cmp
dec
or
xor
out
dec
push
xchg
sub
aaa
repz
push
outsb
dec
jecxz
lea
mov
xchg
movsl
clc
dec
cli
rolb
test
and
cmp
imul
dec
or
mov
out
ja
roll
xor
xor
insl
cs
aaa
jl
cwtl
imul
int3
xor
nop
push
jb
jns
xchg
outsl
sub
mov
or
in
push
icebp
rorl
or
nop
lret
mov
sahf
xchg
xlat
out
xchg
add
mov
fcmovne
pop
mov
subl
mov
cmc
int3
loop,pn
out
iret
loope
addr16
in
btrl
xchg
and
out
or
push
pushf
pushf
cmpsb
cmp
mov
inc
jns
xchg
popa
mov
xor
and
jmp
push
dec
lret
inc
gs
movsb
je
jmp
subl
loop
hlt
aam
js
add
imul
xchg
pop
popa
sbb
movl
push
hlt
lret
sbb
sub
in
xor
lods
shrb
cmovnp
jl
cld
je
aas
mov
inc
les
push
mov
xor
xchg
je
sub
push
stos
adc
mov
xlat
mov
fisubrl
sub
cmp
sbb
mov
add
push
inc
mov
fisubs
pop
jmp
sub
leave
dec
ss
mov
jecxz
lcall
and
push
jecxz
adc
sub
into
adc
cli
data16
stos
mov
movsl
mov
aam
or
leave
adc
pop
or
vpmacswd
jbe
adc
jmp
fwait
cwtl
pusha
loop
adc
fistpll
adc
xor
xchg
movsb
daa
jecxz
jg
jle
rol
push
data16
sbb
xchg
loop
cmc
dec
adc
test
lret
or
pop
push
aaa
gs
add
stos
lret
xchg
int3
jl
sbb
popf
cmpsb
cli
popa
jmp
js
hlt
sub
push
ss
adc
ficomps
enter
pop
pop
loope
out
test
leave
lret
sbb
aaa
and
xor
xchg
shlb
popa
rclb
sbb
clc
jae
and
pop
leave
std
outsb
add
js
inc
push
pop
pop
sub
xor
push
ja
xchg
sub
push
popf
out
or
test
loopne
xor
pop
mov
xchg
or
arpl
data16
lods
lcall
xchg
mov
mov
data16
test
xchg
sbb
sbb
mov
data16
push
push
nop
je
daa
mov
xchg
cmp
dec
push
imul
mov
mov
jmp
jecxz
add
sub
push
xor
arpl
xchg
pop
pop
sahf
dec
push
push
xchg
push
bnd
sub
push
jb
jno
out
testl
test
pop
aaa
js
mov
sbb
mov
xchg
cmp
push
cmp
out
sub
push
test
cmp
inc
mov
mov
push
call
mov
sarb
fisttpl
cmpsb
mov
ret
push
and
sub
inc
addr16
mov
scas
fwait
adc
add
test
adc
mov
in
in
sbb
add
in
push
test
ror
and
ss
into
inc
push
sbb
rclb
mov
and
fdivl
inc
adc
lcall
addb
fs
pop
pop
push
push
cld
push
cwtl
cli
xchg
repz
and
fsubp
and
and
push
mov
cmp
lret
jne
ret
shl
aas
jno
lods
bound
test
jae
mov
add
jmp
in
addb
xchg
cmpsb
in
in
xor
xchg
or
inc
lret
mov
push
das
jns
cmp
aad
arpl
sub
pop
rcrb
sub
mov
cmp
fnstcw
scas
xchg
inc
xchg
jne
jge
bound
test
outsl
or
mov
sbb
stos
or
inc
loope
sub
jnp
pop
fldt
pop
std
in
xchg
sahf
leave
gs
push
icebp
xchg
std
hlt
mov
mov
dec
aaa
outsl
dec
jmp
clc
fisubl
jne
enter
data16
mov
imul
xchg
test
out
pop
jne
mov
dec
negl
sub
out
xchg
lds
xor
into
test
loope
test
xor
faddp
xor
pop
cmpb
orl
xchg
jle
jle
jmp
dec
pushf
pusha
adc
aaa
inc
xchg
jmp
mov
imull
sahf
fucomip
cs
enter
aad
enter
dec
jo
inc
lret
cmpsl
pop
xor
and
das
mov
loop
mov
mov
xor
pop
in
push
fwait
mov
pop
and
jmp
cmp
mov
mov
scas
cltd
imul
shlb
push
in
sbb
dec
mov
call
fstps
mov
xchg
dec
inc
push
jecxz
movsl
aas
dec
fstpl
pop
push
add
in
mov
sar
sti
cmp
mov
test
jne
mov
or
fcomip
jo
jmp
inc
adc
clc
add
scas
adc
test
mov
adc
insb
sarb
push
sub
or
cmp
jo
les
rorb
cmpsb
mov
testb
cli
xchg
push
insb
ljmp
rcrl
adc
pop
mov
test
mov
jno
mov
pushf
mov
fdiv
jbe
rorl
fdivrs
push
test
lock
cltd
and
leave
or
repz
fwait
call
out
mov
out
mov
cmp
mov
sub
xchg
mov
cmc
mov
into
iret
mov
ret
dec
repnz
setbe
idivb
dec
push
ss
pause
sbb
inc
mov
ficoms
fnstenv
mov
getsec
filds
dec
jp
inc
sbb
fwait
sahf
out
jge
das
inc
mov
xchg
jo
and
dec
cmpsb
cwtl
jp
xchg
xchg
sbb
daa
mov
sub
pop
adc
jecxz
pop
cmp
mov
into
stc
xchg
or
test
push
mov
lds
jo
stc
and
lock
in
cmp
scas
and
in
cs
fildll
movsb
cmc
mov
fldl
int
dec
fcoml
int
sti
mov
popa
adc
lock
hlt
enter
out
pop
repz
dec
inc
scas
fisubrs
ficompl
jnp
mov
leave
or
nop
cmp
push
or
in
bound
rorl
sbb
push
mov
cmp
push
mov
adc
cmpsb
sub
mov
cs
cltd
cmc
jle
ret
mov
adc
or
add
mov
outsl
adc
js
push
sub
cmp
or
out
andb
add
in
sub
mov
fwait
cmp
mov
pop
and
popf
outsb
xchg
xchg
sbb
fstpt
scas
sub
mov
push
jo
push
lret
push
das
out
cmc
push
in
or
jae
ss
xor
pop
shll
sbb
loope
stos
cmpsb
shlb
fs
das
inc
mov
mov
pop
jg
into
xchg
jo
ljmp
jecxz
sub
and
popa
push
inc
inc
inc
jecxz
or
cmp
push
inc
or
data16
jmp
inc
add
mov
push
push
cmp
ss
or
popa
mov
lret
mov
add
jg
scas
call
xchg
xchg
insl
dec
fstpl
popf
arpl
dec
mov
lret
jmp
cmp
xlat
insl
mov
add
xlat
fidivrs
xchg
clc
inc
cwtl
lret
and
sub
adc
and
adc
test
fisubrl
pusha
xor
shll
fldl
aaa
in
cmp
in
mov
movsl
sbb
sub
or
xchg
push
imul
data16
enter
outsb
xchg
int
pop
incb
lcall
jne
lahf
pop
cmpsl
adc
stos
or
jge
loope
jno
leave
pop
in
or
pop
les
push
pop
loopne
mov
sbb
cmp
or
outsl
popa
ds
js
cwtl
sub
int3
pop
loop
pop
push
sti
popf
push
xor
push
lahf
jle
mov
leave
mov
add
mov
inc
hlt
xchg
xor
cld
pusha
out
push
pop
and
popa
out
or
dec
dec
inc
in
adcl
push
jmp
xor
cld
mov
rcll
int
inc
sbb
jle
sbb
gs
lret
test
and
jns
mov
cmpsl
and
pop
lds
and
pop
out
cwtl
es
cmpsl
sbb
sub
inc
xchg
adc
pop
adc
popf
inc
dec
mov
fldcw
std
xchg
scas
inc
outsb
scas
xor
cltd
mov
lahf
mov
pop
sub
and
mov
adc
cmp
jp
sub
pop
push
popa
ds
xor
mov
push
and
sbb
sti
mov
je
aam
xorb
es
or
daa
cs
cmp
arpl
mov
jns
pop
je
roll
xchg
pop
jns
pop
xor
inc
mov
scas
cmp
sub
test
hlt
enter
pop
push
sbb
xor
cmp
add
shlb
jb
pop
mov
out
mov
fcompl
int
imul
scas
insb
pushl
xchg
fs
scas
loopne
jg
and
repnz
push
cmp
mov
mov
or
inc
outsl
mov
or
mov
sbb
rcrb
mov
lret
xor
pop
ss
cmp
mov
fsubrs
jp
push
push
subl
and
mov
fisubrl
lds
jno
push
lcall
lods
jno
into
mov
insb
inc
sub
cmp
stos
xor
mov
and
inc
pop
je
lock
push
push
jecxz
dec
jecxz
out
nop
mov
imul
mov
pop
fadd
mov
aad
and
ja
lods
aaa
inc
fadds
iret
pop
mov
popf
cs
mov
cltd
enter
loopne
ret
mov
push
xchg
adc
movsl
cwtl
mov
push
lret
gs
xor
mov
lds
cmp
add
imul
test
add
cmp
lahf
cmp
and
negb
jae
mov
xor
mov
pop
adc
es
scas
scas
scas
jg
cld
xchg
fs
push
lret
test
mov
es
cwtl
repz
jne
add
or
dec
vorps
rorb
or
negl
hlt
jp
inc
rorl
and
push
mov
mov
or
pop
pop
inc
jmp
outsb
pop
repz
xor
dec
inc
ss
xor
push
call
add
arpl
push
push
or
movq
pusha
mov
sbb
mov
ret
aad
sub
popf
xor
mov
cmc
push
test
sbb
sub
push
outsl
push
out
xchg
push
cwtl
repnz
sbb
push
jmp
dec
push
movsl
push
inc
jmp
ret
jae
pop
ret
mov
aad
cwtl
inc
xor
rorb
repnz
xor
iret
push
rdpmc
mov
and
and
xchg
xor
cmp
cmpsl
addr16
push
arpl
clc
sbb
jg
out
outsl
cmp
push
mov
sub
or
adc
addl
insb
push
lahf
lds
push
xchg
outsb
fdivrl
mov
add
ffree
mov
push
mov
in
andl
pop
push
lcall
sti
js
clc
or
cmp
pop
subl
ss
ret
xor
xchg
cmp
imull
xchg
dec
push
pop
inc
jbe
pusha
testl
dec
add
sub
adc
sub
fdivrl
sarb
pop
or
cmpsl
jae
push
mov
fisubrl
mov
sub
repnz
notl
test
inc
ds
mov
cmp
push
pop
jno
test
lcall
jle
loopne
in
or
xor
mov
roll
fbld
dec
push
cld
scas
jge
nop
xchg
xchg
xchg
cmp
inc
sub
fcomip
mov
mov
xchg
sahf
or
scas
sub
dec
js
repz
outsb
add
mov
inc
jnp
xor
inc
xor
sbb
mov
mov
fcompl
cmpsb
cmp
insl
aam
imul
pop
mov
ret
fisttpl
add
dec
or
xlat
sbb
lahf
inc
enter
bswap
dec
pop
push
punpcklwd
pusha
fs
push
push
movsl
push
cld
sbb
cmp
sbbb
pop
jne
mov
cld
jmp
out
adc
jb
add
jnp
popa
xor
fbstp
pusha
adc
xor
movsl
sub
mov
cmp
ds
fwait
das
and
ret
pop
aas
daa
loopne
and
das
sbb
decb
jo
mov
push
inc
stc
push
xchg
or
or
fimull
push
sbb
scas
in
test
cltd
dec
mov
sahf
pop
scas
and
and
pusha
mov
sub
mov
mov
mov
push
pop
xchg
jo
les
out
dec
sahf
out
stos
mov
fisubl
ss
into
and
lahf
cmp
pop
xchg
add
sbb
into
xchg
in
sub
add
sti
and
fdiv
ja
test
mov
dec
adc
popa
sbb
mov
lock
lahf
inc
mov
lret
in
inc
data16
sub
sub
out
add
repz
pop
mov
push
cmp
test
leave
mov
jecxz
cmp
cmp
mov
fwait
jmp
cli
mov
sub
xor
aaa
sub
loopne
test
aaa
insb
push
sbb
and
mov
lret
cld
in
cwtl
push
cmpsl
outsl
mov
mov
repz
int
pop
jb
mov
fnstsw
xor
or
aad
inc
dec
jns
push
pop
xchg
cmp
popl
jle
jb
out
and
lods
enter
enter
lcall
test
in
and
cmpl
mov
jae
sbb
jmp
movl
push
sahf
jl
cmp
aaa
sbb
ror
rcrl
xchg
xchg
ret
outsb
pop
adc
scas
enter
push
call
ret
daa
fbstp
lret
mov
xlat
mov
mov
push
xor
lds
xchg
in
xor
cld
add
dec
and
sbb
cmpsl
call
cmpsl
push
jge
mov
xor
lods
mov
cs
pop
pusha
jl
jmp
out
xchg
mov
movsl
xor
cli
sub
scas
cmp
insb
aad
pop
test
stc
xor
aas
cmp
pop
int
push
sarl
mov
push
or
into
int
xchg
xchg
dec
jb
dec
insl
sbb
data16
aad
push
dec
sub
shr
rcr
and
in
adc
mov
rorb
and
dec
inc
mov
scas
xchg
cltd
stos
stc
jbe
repnz
sub
cmc
pushf
cmp
sahf
sbb
mov
xor
enter
sahf
mov
inc
in
adc
cmpsb
mov
ret
mov
jmp
movl
cld
movsl
inc
sarl
fdivl
fisubrl
enter
int
es
rclb
mov
xor
mov
sbb
ret
fbld
jns
jns
data16
or
aaa
cmp
pop
dec
xchg
lret
xor
or
aaa
mov
push
out
fimuls
sub
push
pop
arpl
pop
out
ss
mov
add
aam
movsl
adc
push
cmp
idiv
add
je
nop
ficoml
and
lahf
add
out
add
stc
mov
outsl
rolb
pop
orl
movl
movsl
sahf
mov
call
push
fucomip
pop
mov
popa
je
and
mov
push
inc
push
inc
xchg
adc
arpl
push
sub
xlat
jnp
sbb
js
adc
mov
inc
dec
jge
xchg
aaa
jle
or
xchg
jb
mov
pusha
and
adc
aas
adc
mov
dec
jecxz
into
movsl
enter
test
adc
or
push
fs
cmp
outsl
cmpsl
out
fistpl
les
loope
aam
mov
adc
mov
pop
call
jb
aad
inc
std
ljmp
mov
rorl
inc
bound
dec
inc
mov
out
int3
and
sub
adc
loopne
shll
fsubs
fdivrl
and
lds
push
adc
xor
or
out
or
aam
jge
into
fdivs
push
jne
cmp
pusha
mov
out
out
jbe
fimuls
ljmp
dec
stos
jle
jae
fs
repz
nop
pop
mov
lock
sub
cmp
movsl
test
jg
adc
das
mov
xlat
lahf
inc
dec
daa
jl
mov
gs
faddl
cmp
pop
push
adc
adc
fldt
dec
hlt
add
outsb
adc
jge
mov
cltd
cmp
jg
cmp
inc
or
data16
mov
mov
daa
les
mov
std
int3
rcrb
stos
imul
iret
fwait
fs
mov
loop
push
mov
das
jmp
shr
lret
or
sub
pop
mov
xor
jmp
addb
push
aaa
adc
cmp
ret
sub
int
xor
cli
jg
mov
int
inc
sahf
ret
and
inc
dec
inc
ret
pushl
pop
add
mov
push
dec
test
aam
inc
pushf
popa
scas
cmp
stc
shlb
dec
or
addb
cltd
outsl
xchg
lcall
stc
pop
insb
push
and
sub
fdivrl
orb
ss
add
std
aam
pop
mov
mov
add
fcoms
cmp
in
push
jecxz
and
push
mov
xor
xor
clc
call
fstps
adc
xorb
icebp
outsb
cmpsb
std
pop
pop
cmp
scas
je
dec
popa
dec
sub
stos
int3
push
jo
loope
mov
mov
call
int
jbe
mov
jg
iret
or
mov
test
mov
cwtl
popa
add
push
mov
inc
fisubrs
dec
jae
cmpsb
cmp
adc
das
mov
mov
das
in
out
test
cwtl
inc
sub
push
loopne
popa
and
inc
adc
jae
pop
adc
pop
rcl
call
cli
stos
lods
xchg
pop
cmc
ret
mov
ror
xorl
mov
fcom
xor
cwtl
negb
mov
mov
xor
mov
stc
dec
fwait
shl
sub
jmp
lret
dec
mov
jecxz
scas
or
dec
dec
xchg
dec
inc
sub
outsl
leave
push
jae
xor
mov
sub
cmp
sub
and
sbb
ds
push
dec
dec
jp
push
sbb
or
cmp
sub
lret
fsubrp
scas
lcall
outsb
pop
jle
dec
jp
push
sbb
or
cmp
sub
lret
fsubrp
scas
lcall
outsb
pop
decb
jp
push
sbb
or
cmp
lret
fsubrp
scas
lcall
outsb
pop
jle
dec
jle
push
sbb
or
cmp
ljmp
ficomps
inc
out
aad
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
mov
imul
ss
push
add
add
add
pop
add
add
sti
add
add
add
add
sub
call
add
add
add
add
add
sub
add
add
add
rolb
into
add
add
add
add
add
mov
add
into
add
add
add
add
add
add
add
add
outsb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
test
add
push
add
add
add
add
add
add
sti
add
lods
add
add
insl
add
ljmp
add
add
add
mov
add
add
add
add
add
add
add
faddl
jle
les
les
pushf
add
add
add
add
addl
xor
add
add
add
add
add
xchg
mov
into
add
add
add
aas
add
add
add
into
add
les
xchg
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
pop
add
add
add
and
jg
jo
sti
add
les
mov
add
add
iret
add
add
or
xchg
add
lea
add
xchg
add
add
jo
les
les
insb
add
add
mov
add
insl
add
adc
ja
or
addl
add
add
addl
mov
add
add
add
add
add
add
mov
movsl
add
sub
mov
add
add
add
add
add
add
add
push
mov
add
add
lret
add
arpl
dec
add
add
add
add
mov
into
add
add
fwait
add
add
add
mov
add
mov
loop
aaa
add
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
fwait
add
repz
add
mov
xlat
add
add
add
lahf
add
add
imul
add
add
add
push
add
add
add
add
add
add
jmp
add
add
add
mov
les
inc
add
add
add
popf
add
add
add
movsb
add
add
add
ret
add
add
add
add
add
add
add
out
add
add
add
add
mov
in
rolb
jo
lret
add
imul
add
add
add
add
ret
add
add
cmp
push
add
add
pop
add
add
add
add
mov
and
push
add
add
add
add
add
push
jge
aaa
jae
push
lods
or
sub
fnsetpm(287
jbe
push
lds
inc
push
xor
cmp
into
repz
repz
sbb
aas
mov
or
sbb
inc
mov
aaa
mov
dec
jae
lret
addb
jae,pt
push
test
bound
inc
dec
shl
jb
into
mov
mov
repnz
repnz
push
push
data16
xor
xor
andl
loopne
xchg
push
dec
inc
ret
repz
mov
and
adc
inc
sarb
jl
jnp
push
in
adc
outsb
inc
push
les
andb
stc
divl
xchg
push
cwtl
jp
es
cmp
test
daa
icebp
fnstenvs
jnp
push
and
add
pushf
mov
adc
pop
mov
mov
push
leave
lods
lret
add
nop
imul
mov
jo
jge
pop
clc
in
mov
push
cmp
and
pop
mov
test
pop
dec
lods
inc
mov
aas
orl
fisubl
mov
icebp
cmp
mov
sbb
sti
in
dec
gs
adc
stos
and
push
cwtl
mov
in
insb
sbb
test
dec
js
mov
into
mov
into
rcll
push
pop
xchg
mov
test
into
sti
rorl
lcall
xchg
lock
add
pop
idivb
insl
and
adc
lret
outsb
rol
push
xchg
lahf
push
fdiv
pop
mov
xchg
push
inc
movsl
jecxz
mov
sahf
add
into
xlat
repz
scas
add
test
fmull
lret
or
xchg
call
mov
or
inc
xlat
push
cltd
sub
jae
mov
add
fidivrs
ljmp
ret
mov
imulb
xor
daa
push
pop
shll
lahf
in
call
testl
es
pop
repz
jns
loopne
lea
pop
fwait
ja
into
test
inc
sbb
lahf
pop
jg
mov
aaa
les
xor
mov
stos
sbb
jecxz
mov
jno
mov
dec
jbe
in
mov
aaa
mov
xor
sub
pop
and
push
lret
ljmp
jbe
xchg
adc
mov
test
pop
je
scas
sbb
int
nop
sbb
mov
push
mov
pop
fisubs
add
cwtl
mov
ret
mov
repnz
out
enter
xlat
cmp
mov
dec
repz
mov
jmp
ljmp
stos
lods
cmp
out
mul
cli
in
faddl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
