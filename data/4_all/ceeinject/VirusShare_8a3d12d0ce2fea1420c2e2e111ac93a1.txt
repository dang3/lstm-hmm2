and
add
add
cwtl
in
popa
sahf
pop
data16
in
popa
inc
std
sub
js
dec
loop
push
fistpll
push
pop
xor
loop
scas
and
in
stos
xor
scas
xor
add
jae
rcrl
out
clc
jecxz
add
js
add
push
and
insl
sbb
or
mov
mov
or
push
xchg
push
or
cmpb
idivb
push
pop
mov
mov
mov
push
fidivrs
mov
pop
or
sahf
test
cltd
mov
insb
pop
xchg
add
xlat
inc
xchg
mov
std
shrl
pop
jle
insl
ficoml
pop
or
aas
mov
mov
out
fwait
mov
addr16
movsb
ljmp
fdivr
imul
in
test
mov
and
sbb
popf
js
int
hlt
ja
mov
jp,pt
test
mov
pushf
xlat
push
cmp
sub
push
cld
enter
fisubrl
pop
dec
mov
int
nop
pop
arpl
adc
add
push
cltd
cmp
lret
movsb
movsb
and
in
add
fidivl
fstps
jmp
xor
jmp
inc
jp
daa
xor
iret
idivl
arpl
push
js
inc
fcmovnb
mov
push
mov
and
lods
movsb
push
jl
xor
adc
push
lcall
adc
mov
inc
std
enter
jle
cmp
sbb
aad
xchg
adc
js
jecxz
cld
xchg
pop
mov
movl
pop
mov
push
int
jge
push
ljmp
fcom
cli
push
lds
sub
push
lea
jg
nop
xlat
jns
xor
sub
lahf
mov
ljmp
dec
mov
cmp
fstpt
mov
scas
mov
cmpsb
xchg
push
lret
sbb
addb
gs
xchg
out
add
ret
inc
mov
push
jne
mov
andl
test
iret
ret
repnz
mov
mov
pop
imul
push
insl
push
mov
dec
ljmp
rorl
xchg
inc
or
cwtl
dec
addr16
mov
dec
movl
repz
mov
xor
push
xchg
test
add
cs
xor
out
ljmp
popf
push
das
sbbb
dec
push
lods
loopne
out
mov
sbb
dec
adc
add
cmpsl
fldt
mull
xor
ficomps
inc
dec
jbe
loopne
or
add
add
aaa
or
mov
enter
ret
inc
mov
pushf
cmp
pop
insl
fwait
roll
pop
sbb
lock
cmp
push
sti
clc
dec
pushf
inc
and
nop
rcll
enter
mov
jne
mov
fldcw
repnz
arpl
jp
mov
jnp
data16
outsb
clc
push
push
test
movsb
daa
nop
pop
sub
jmp
pop
or
mov
mov
inc
sbb
inc
fs
mov
dec
mov
jns
and
lret
ja
add
fbstp
xlat
daa
mov
scas
mov
dec
fisttpl
mov
lahf
sbbb
xchg
push
jp
add
test
lret
xchg
push
in
imul
mov
mov
jb
sub
pop
movsl
mov
adc
push
stos
adc
sbb
inc
dec
repnz
cmp
and
je
push
outsl
push
jno
pop
or
test
push
ret
mov
insb
js
pop
xchg
inc
jns
pushf
movsl
faddl
pop
xlat
xchg
stos
xor
lret
sbb
mov
sub
push
xchg
pop
inc
addr16
ja
mov
nop
mov
xor
mov
ret
inc
mov
into
sbb
sbb
popa
and
xchg
daa
sub
inc
pop
xchg
xchg
xor
jbe
push
mov
mov
mulb
pop
and
lret
mov
and
imul
push
fbstp
sbb
sbb
pop
inc
inc
mov
ror
out
dec
pop
enter
sbb
pop
push
xor
inc
cwtl
negl
outsb
and
mov
cmc
stos
mov
out
cs
inc
shrb
pop
fwait
les
je
ret
cmp
push
inc
sbb
nop
repz
adc
test
aas
pushw
outsb
adc
and
pop
call
ret
cmp
ds
add
pop
clc
sbb
aad
bound
mov
shl
mov
imul
in
inc
aas
ret
mov
hlt
cmp
ljmp
out
lds
sahf
cs
pushf
test
jne
adc
sbb
push
cmc
imul
lods
rep
cs
ret
icebp
mov
add
aas
nop
or
sbb
mull
push
mov
sbb
adc
mov
dec
dec
xorb
sahf
and
addr16
lret
xchg
xor
cli
mov
add
dec
xlat
fcoml
pusha
rcll
test
adc
movsl
or
mov
adc
sub
lea
nop
dec
fcmove
add
mov
sub
push
fistl
add
sub
add
outsb
addb
jmp
imul
mov
jae
push
pop
addr16
cld
leave
test
stos
push
cmpsb
jne
lock
mov
insl
imul
jnp
push
out
add
stos
mov
mov
jbe
add
mov
dec
outsb
jae
and
inc
xchg
xor
popf
sbb
out
adc
call
pop
mov
xchg
cmp
fcompl
ja
pop
or
sub
mov
pop
gs
sbb
mov
pop
pusha
test
jae
mov
xor
jp
push
icebp
xorl
mov
dec
mov
cli
or
loop
mov
cmp
sub
inc
lret
cmp
lods
mov
scas
jb
movsl
in
mov
test
or
cwtl
in
mov
lods
insl
rcrb
es
adc
xor
add
neg
sub
and
add
or
xchg
testl
ficoms
je
mov
inc
cmp
adc
push
sbb
or
divl
or
daa
jmp
pop
mov
push
xor
mov
clc
jae
inc
jns
in
int
in
addr16
insb
mov
pop
lcall
repz
lret
das
clc
jbe
jae
pushf
popa
aam
xor
shlb
xchg
sbbl
sub
loope
pop
incl
adc
xchg
daa
imul
dec
rol
loope
jb
fstpl
xchg
scas
addr16
popa
cmp
lcall
jnp
or
test
mov
pop
push
jl
jg
stos
jmp
je
xor
mov
jno
xchg
sub
out
pop
cmp
sub
jmp
mov
push
cmpl
std
pop
in
xor
fadd
inc
ss
inc
inc
inc
jl
sbb
push
inc
popa
sub
cmp
jmp
mov
push
aam
stc
xor
and
clc
test
mov
test
add
ss
out
daa
adc
inc
cmp
add
idivl
mov
mov
dec
cmp
das
inc
sbbb
dec
repz
mov
or
or
outsl
stos
outsb
xor
outsb
ja
insb
mov
lahf
cmpb
addr16
js
ljmp
mov
mov
mov
push
or
jle
mov
shrb
and
pop
fistpl
imul
mov
sub
push
insb
sahf
jl
paddsw
sbb
dec
jg
adc
inc
pop
inc
cmpl
out
lahf
mov
lods
pop
pop
xlat
mov
xchg
mov
add
pushf
mov
push
insb
mov
sub
scas
loope
mov
jp
and
jle
and
out
add
test
push
ljmp
test
mov
cli
push
fsubp
out
xor
mov
fs
popw
push
test
jb
inc
jae
xorb
and
sub
leave
mov
or
repnz
addr16
lock
pop
xor
dec
rorb
mov
jg
pop
cmpsb
or
outsl
mov
in
push
out
sbb
sub
xor
sub
push
aaa
and
xchg
fistps
add
push
iret
adc
rcr
rorl
test
dec
mov
lds
pop
lea
aas
mov
lods
outsb
cli
cmp
xorb
hlt
mov
movsl
xchg
test
cmp
pushf
pop
ret
dec
mov
mov
subl
xchg
mov
and
mov
jge
fcomps
dec
adc
insb
rcll
fisubs
pop
xchg
ret
and
and
subb
inc
mov
scas
or
shrb
lds
ret
mov
loop
scas
pop
mov
jecxz
xor
cmpsb
aad
xor
out
aaa
add
sbbl
hlt
stos
fwait
push
or
lock
inc
fidivrs
adc
pusha
xor
outsb
cmp
pop
or
and
pop
stos
dec
sub
test
and
out
or
call
mov
dec
xchg
aad
adc
fsubrs
lret
inc
shrl
xor
mov
or
cmp
cld
xchg
das
xchg
lret
inc
outsl
icebp
sbb
cmpsb
cmp
and
and
subl
sbb
jle
popa
pusha
inc
stos
js
mov
subb
js
rcll
cmp
clc
call
xor
or
and
aad
fstl
jecxz
cmp
stos
sbb
mov
mov
jmp
aam
cmp
rcrl
cmp
ds
add
sahf
and
imul
mov
xchg
ficomps
pop
pop
push
pop
arpl
outsl
imul
add
mov
xor
sbb
add
sub
enter
pop
add
cmc
sti
pop
repnz
outsb
inc
sbb
ret
mov
pop
imul
sub
mov
and
dec
addl
leave
pop
scas
xchg
out
push
pop
mov
popa
sarl
popa
hlt
int3
ss
sbb
dec
add
mov
stc
xchg
out
lret
enter
testb
shlb
test
sub
insb
pop
jl
cmpsl
movsl
sbb
das
add
lret
mov
fmuls
hlt
shlb
push
mov
inc
jmp
scas
cmp
add
or
leave
fidivrs
ret
xchg
push
outsl
mulb
add
rorl
dec
push
cmp
cmp
xlat
out
push
enter
aam
and
pop
mov
aad
mov
addl
or
fwait
mov
mov
cmc
daa
xchg
xor
mov
or
mov
push
fiadds
imul
sub
inc
shl
jmp
cmp
mov
pop
fisubs
sbb
add
pop
rcll
push
inc
push
mov
pushf
jae
mov
adc
mov
das
hlt
push
cs
add
lds
lds
jl
repz
clc
adc
stos
mov
jp
inc
cmp
sub
or
push
jl
mov
pop
xchg
xchg
and
lret
mov
or
in
mov
pop
sub
sbb
dec
stc
ret
daa
mov
dec
cmp
xchg
and
and
in
scas
popa
xor
fidivrl
addl
ret
or
iret
jmp
roll
jecxz
lahf
outsb
mov
xor
into
adc
into
dec
hlt
mov
imulb
mov
loopne
adc
inc
sti
pusha
sahf
dec
dec
lret
addr16
insb
jl
out
adc
fidivrs
jmp
iret
insl
and
xor
xchg
stos
out
inc
xchg
jo
or
notl
push
sbb
and
pop
pop
in
fidivs
mov
pop
push
dec
bound
jo
ja
push
jge
and
test
push
loope
fisubl
lret
adc
fisttpll
mov
repz
jecxz
pop
adc
mov
sub
mov
daa
ficoms
sub
add
mov
pop
lret
jge
icebp
dec
sbb
sbb
clc
pop
cltd
mov
xchg
xor
dec
pop
stos
clc
fucomi
daa
or
cwtl
inc
add
loopne
lock
jg
jno
ret
sub
jno
movsl
push
ja
roll
andl
sub
mov
mov
int
test
and
lret
adc
adc
fsubs
cmc
mov
test
aas
dec
mov
and
testl
jge
jge
jp
push
orb
cltd
adc
mov
sbb
lds
cs
mov
arpl
add
dec
stos
daa
test
and
pop
fmuls
lahf
lahf
jmp
add
in
pop
imul
test
or
fstps
xchg
outsl
enter
hlt
fadds
fnstcw
stc
not
sti
sbbb
rolb
or
mov
cltd
pop
jp
inc
dec
jle
cmp
in
pusha
mov
xor
push
das
es
or
push
and
popa
cmp
movsb
movsl
or
sbb
movsb
int
and
cltd
dec
inc
lds
pop
cs
sahf
leave
sbb
adc
inc
roll
out
push
xchg
lahf
lock
adc
lea
pop
testl
lahf
add
stos
xchg
xchg
mov
test
js
inc
test
cmp
in
rcrl
sbb
xchg
adc
aam
or
push
in
or
mov
xor
sub
ja
das
ds
jne
xchg
xchg
and
and
sub
sbb
mov
sbb
aam
movsl
aaa
jo
lods
lods
repnz
xchg
stos
in
xchg
mov
arpl
call
push
pop
mov
inc
sbbl
inc
outsb
sub
mov
mov
inc
movsl
pmulhuw
push
faddl
rorb
mov
or
lret
mov
punpckhdq
jle
fisubrl
std
pop
dec
fwait
cmp
inc
add
mov
mov
loope
mov
in
adc
mov
sbb
jmp
xchg
cmpsl
push
adc
imul
xchg
stc
xor
ds
lods
push
add
dec
and
and
test
mov
pop
jecxz
mov
int
and
test
pushf
mov
popa
cmp
movsl
mov
mov
pop
pop
out
jle
adc
loope
ljmp
imul
pop
push
lods
filds
cmp
sbb
into
dec
mov
out
les
ss
into
in
loop
fidivrs
int3
mov
lret
js
notl
mov
mov
cmp
scas
mov
icebp
xchg
mov
add
nop
mov
scas
cmpsl
negl
jmp
jb
stc
fimull
lods
jb
daa
jmp
pop
or
jl
or
rcll
push
jmp
aas
sub
sub
jecxz
shlb
popf
call
add
jg
xor
loope
sub
sbb
pop
testl
add
shlb
sub
stos
add
mov
sbbl
or
pop
les
jmp
pop
test
lds
jl
add
fnclex
mov
insb
mov
lea
enter
push
cmp
setle
je
cmp
sbb
jg
pop
or
or
xchg
sti
ret
mov
out
int
jge
test
jecxz
push
out
into
pop
rorl
hlt
scas
sbb
inc
test
inc
pop
inc
push
lahf
cmp
pop
into
hlt
imul
mov
pop
in
push
shrl
mov
xchg
adc
mov
lret
inc
into
dec
into
or
xor
cld
and
rcll
cmpb
das
test
mov
sbb
in
stos
stos
imul
inc
clc
dec
repnz
mov
sub
sub
daa
dec
push
fstps
movsl
sub
push
add
icebp
inc
ljmp
jge
or
into
mov
in
push
sub
imul
imul
jmp
jnp
inc
enter
mov
push
jp
rcrl
add
mov
rcrb
je,pn
sub
pop
lods
lahf
jg
xchg
xlat
xchg
pushf
inc
loop
push
mov
in
pushf
sbb
pop
data16
mov
es
bound
test
pop
sahf
and
cli
out
cld
int
and
mov
cltd
xchg
lods
or
test
sbb
mov
xchg
add
ret
sub
add
push
xchg
in
cltd
mov
test
add
mov
mov
xchg
add
outsb
sub
ret
lock
inc
shrb
scas
sbb
cld
test
mov
cmpsl
inc
jmp
adc
jle
and
mov
fcomps
scas
push
and
xchg
pusha
mov
cld
pop
cmp
inc
push
push
aas
addr16
or
adcb
in
lock
and
nop
arpl
pop
fsubp
push
adc
jnp
popf
fldl
lahf
jns
lcall
add
pop
or
inc
sbb
xchg
xchg
mov
cmp
ret
das
mulb
andl
ffreep
ds
or
cwtl
add
xchg
pop
insl
sbb
cwtl
pop
xchg
push
dec
pop
shrl
ja
jno
fsubl
loope
cwtl
inc
mov
xchg
out
push
sbb
xor
or
faddl
jle
faddl
cld
cltd
xor
xor
bound
hlt
adc
xchg
mov
or
iret
fisttps
loop
and
lods
xchg
mov
dec
out
inc
jg
or
mov
into
pop
clc
push
push
decb
in
shlb
jno
pop
mov
cwtl
add
sarl
xor
cs
shr
xchg
pop
push
pop
call
int
mov
ss
jnp
ja
xchg
fsub
adc
popa
enter
repz
fisubrl
shll
lods
push
inc
mov
sahf
pushf
dec
mov
pop
jmp
push
and
call
cmp
lret
fdivp
mov
pushf
sub
xchg
stos
add
and
daa
dec
adc
mov
movsl
mov
pop
mov
xchg
pop
fwait
int3
divb
add
int3
bound
sub
mov
hlt
pop
xor
inc
into
dec
loopne
lcall
cmpsb
addr16
lahf
mov
rolb
addr16
out
mov
or
xor
mov
es
sbb
dec
cltd
insl
inc
repz
xchg
shlb
fidivs
jg
dec
mov
dec
and
and
arpl
pop
adc
dec
jae
mov
sbb
jl
fstpt
push
xchg
fists
mov
mov
mov
cmpsb
jl
push
hlt
es
mov
cmp
push
sbb
mov
dec
aas
sarl
setns
repnz
hlt
in
lea
ljmp
or
push
sub
jbe
and
aaa
jns
rcrb
add
loopne
xor
pusha
popa
cmc
fwait
pop
sub
mov
es
xchg
imul
xchg
xor
sti
jle
pop
outsl
dec
je
test
or
dec
adc
add
in
cmp
orl
lds
das
inc
mov
jae
stos
int
in
jb
out
std
mov
rcl
fwait
adc
push
pop
jg
sbb
bound
imul
mov
mov
sbb
clc
sbb
arpl
fmul
jle
sub
inc
xchg
xchg
mov
sub
and
cmpsl
hlt
repnz
ret
fisttpll
sbb
dec
cli
ficompl
ds
ret
or
pop
div
scas
adc
popa
leave
xor
dec
mov
inc
cmp
mov
lret
loopne
scas
bound
sub
call
xchg
xlat
hlt
testb
pop
addl
xchg
jbe
push
sbb
fstl
sahf
mov
lcall
or
mov
icebp
mov
pop
or
sub
push
sbb
and
iret
scas
mov
jns
addr16
jp
xchg
jnp
jl
mov
arpl
or
bound
std
xabort
divl
adc
mov
dec
sbb
test
sbbl
push
push
cs
push
into
dec
mov
aas
mov
mov
add
mov
rcrb
push
int
push
xchg
xchg
mov
inc
test
lods
inc
add
sahf
ljmp
scas
clc
test
cwtl
jg
mov
sub
clc
add
sbb
orl
adc
ja
mov
sbb
and
add
addr16
leave
std
xchg
inc
and
iret
adc
xchg
mov
mov
xor
sub
shlb
pop
fistpl
add
fdivrs
out
fwait
repz
fs
mov
paddb
daa
in
ficomps
adc
inc
scas
movsb
xor
movsl
jmp
notb
and
inc
out
popa
cs
mull
jbe
adc
repz
and
pusha
daa
test
jb
aas
stc
push
pop
shlb
stos
dec
inc
stos
aas
cmpsb
fisttpll
or
mov
imul
into
inc
sub
adc
adc
mov
jmp
shll
inc
and
push
adc
xor
push
push
push
sti
test
mov
push
pop
xchg
addr16
jnp
movsb
cld
shr
dec
lret
mov
adc
xor
jb
out
ja
sbb
in
mov
mov
jecxz
push
cmp
imul
jecxz
lret
jno
mov
dec
outsb
stc
loopne
mov
ljmp
jnp
xchg
negb
jge
mov
cld
mov
mov
xchg
out
cmp
and
dec
arpl
push
loop
xor
or
mov
mov
sti
sub
scas
cmp
sbb
push
push
pop
aas
ljmp
ss
jmp
mov
test
cmp
rcl
adc
ficompl
inc
popf
aas
xchg
in
jae
mull
stc
ds
jge
mov
es
cwtl
vmovmskps
sbb
aaa
cmc
and
sbb
shlb
in
test
subb
jbe
adc
jg
subb
sbb
mov
push
shrl
mov
into
fnsave
repnz
addb
int
xor
fdivl
jmp
sbb
decl
add
insl
iret
push
std
push
sub
xor
pop
dec
adc
fisttpl
popf
mov
fldl
sub
stc
jbe
incl
sti
adc
pop
stos
mov
xchg
sbb
mov
sbbb
int
movsl
inc
in
bound
mov
je
andb
sbb
rcr
sahf
xor
cmpsb
sbb
mov
mov
xchg
in
cmp
nop
ror
sbb
outsl
jno
xchg
icebp
mov
cmpsl
nop
fisubrl
mov
pop
cwtl
mov
sbb
stc
add
and
divb
or
xchg
pop
or
loopne
xor
nop
mov
dec
push
push
cmc
popa
shl
xor
aaa
pop
leave
mov
divb
pop
fistpl
dec
repz
and
lahf
lahf
mov
mov
imul
sub
mov
out
xor
adc
aad
inc
imul
mov
xchg
bnd
gs
fs
jne
jl
xor
mov
adc
push
hlt
jp
pop
inc
mov
mov
xchg
in
or
jne
lds
mov
stos
xor
xlat
scas
shrb
push
lods
jg
mov
dec
sub
and
pop
cld
pop
mov
adc
push
xor
insb
add
fists
mov
cmp
xchg
std
in
dec
jne
out
add
inc
jne
xchg
push
hlt
mov
xor
shl
sbb
fbstp
leave
mov
retw
cmpsb
lret
addr16
jbe
sub
insb
pop
and
nop
adc
add
lds
lods
dec
mov
iret
cli
loopne
leave
push
dec
cmpsl
fcompl
inc
cmp
aam
insb
cmp
or
out
cmpsl
sub
sub
mov
mov
add
cltd
jns
lock
sub
dec
xor
push
adc
popa
sub
sbb
xchg
lcall
jns
jecxz
add
and
mov
add
in
mov
push
imulb
icebp
mov
fs
mov
cmp
jecxz
or
rclb
push
repz
push
pop
adc
cwtl
test
jle
movsl
dec
shll
or
or
fbld
outsb
sbb
jae
dec
push
and
cmp
and
mov
fst
lock
sub
test
loope
filds
pop
lods
rorl
push
int
jb
movsb
je
vfrczss
mov
sbb
orl
jmp
int
mov
pop
jo
inc
cmpsl
jmp
fstps
lea
cmp
jp
push
jg
adc
test
dec
idivl
add
jg
bound
mov
mov
or
inc
jp
out
aaa
int
inc
call
ss
inc
into
in
jno
es
sbb
inc
addr16
repnz
sbb
or
and
xor
ret
aaa
fstl
push
fisubrs
aad
xor
shld
fildl
xor
ret
ds
lcall
xchg
clc
stos
inc
adc
pop
pop
add
lods
call
jp
js
inc
test
in
aam
xor
mov
jae
mov
fcoml
jge
mov
sub
nop
or
rcrb
sub
aas
xchg
iret
mov
dec
jl
mov
push
imul
cmp
test
lret
and
movsl
push
mov
loope
jne
in
ret
pop
adc
adc
arpl
repnz
add
xchg
inc
lea
imul
cmpsb
or
lds
jmp
mov
test
adc
addr16
mov
insb
ret
sahf
fwait
adc
stc
jmp
pop
inc
xorl
xchg
sub
insb
lcall
stos
cld
mov
in
cmpsl
or
shl
into
pushf
pop
rolb
pop
xor
inc
and
inc
repnz
jl
nop
jns
out
mov
out
or
inc
mov
mov
js
test
or
xlat
lods
mov
xchg
gs
lahf
xor
pop
cmp
cmpsl
push
arpl
dec
xchg
je
out
clc
dec
or
pop
or
jg
pop
adc
mov
sub
insl
pop
cmpsb
dec
cmc
ds
and
stc
jmp
lds
cwtl
aad
into
cmp
ret
jne
jns
test
icebp
xchg
jnp
nop
test
xchg
mov
adc
dec
es
cltd
fwait
jp
mov
adc
jmp
mov
loop
sbb
fcoml
adc
or
mov
clc
ja
mov
pop
xlat
mov
outsl
pop
lods
cld
cmp
stos
sbb
in
push
out
scas
mov
ret
add
divb
or
iret
mov
daa
or
adc
lock
push
aam
stos
sbbl
add
and
mov
cmp
imul
aas
mov
lret
jbe
jle
pushf
xchg
cmpsb
dec
insb
fidivl
push
mov
mov
jle
cwtl
leave
xchg
and
push
mov
enter
shll
insb
mov
subl
xor
flds
mov
cmp
popa
jb
int
jmp
repnz
sahf
xchg
hlt
push
dec
insb
lret
cli
and
inc
pop
dec
decl
insl
sub
mov
rcrb
testb
out
and
lods
push
mov
xchg
filds
push
sbb
xchg
cs
dec
call
cmp
arpl
in
adc
xchg
arpl
mov
xlat
lds
out
jmp
inc
dec
add
insb
lahf
imul
test
sbb
outsl
xchg
aam
push
jae
mov
inc
jb
push
fwait
push
sti
fmuls
xor
inc
mov
sub
in
add
popf
fwait
pop
fldt
jle
mov
scas
jb
loop
in
mov
jbe
xor
adc
push
movsb
ret
sub
push
mov
shr
xor
ds
in
xchg
mov
dec
int
inc
test
push
lock
out
into
shl
mov
sub
add
dec
mov
push
addr16
sub
jb
inc
out
cmpsl
pop
sub
mov
mov
push
ds
test
inc
in
push
daa
data16
fs
mov
or
pop
mov
mov
dec
inc
cmp
arpl
xor
xchg
sbb
inc
xlat
call
jle
sub
lcall
xchg
fsub
ja
sbb
loope
jne
frstor
mov
jmp
lcall
test
ja
cld
int
sbb
inc
lea
mov
outsb
adc
add
andl
fstps
jbe
mov
bound
outsl
lret
sub
loopne
and
out
rolb
loopne
add
mov
fwait
gs
aaa
test
xor
cmp
enter
stc
jns
add
lcall
outsl
cmpsb
call
pushf
iret
cs
mov
in
jno
jne
hlt
pop
pop
ds
outsb
test
jg
cwtl
xor
into
mov
ret
je
fiadds
dec
mov
int
hlt
loopne
movsl
and
mov
sbb
or
inc
clc
out
add
adc
popa
inc
scas
fistpll
sarb
inc
addr16
aad
adc
fnstsw
dec
into
adc
fisttpll
flds
mov
xchg
pop
loopne
push
mov
test
push
movsb
jmp
sub
pop
loopne
in
call
andb
inc
cmp
pop
in
xor
jge
test
jle
loope
jmp
mov
xor
in
or
loopne
sbb
fstp
cmc
addb
shrl
mov
stos
adc
adc
insb
and
mulb
mov
add
cmpsb
lds
popf
shrb
aaa
add
pop
and
decb
mov
pop
push
sub
inc
xor
rcr
xchg
adc
cmp
mov
test
add
pop
inc
mov
and
mov
cvtps2pd
jecxz
test
dec
pop
ss
sub
arpl
mov
outsb
call
sub
jbe
lock
ljmp
pop
mov
inc
iret
xchg
dec
xchg
xor
fidivrs
mov
xchg
sti
cmp
fldl
xor
push
cmc
icebp
inc
xchg
lods
test
and
or
cmp
ljmp
or
fstl
clc
pop
mov
inc
mov
mov
add
cmp
and
mov
mov
repz
and
adc
fiadds
dec
js
gs
repnz
out
xchg
shr
mov
dec
sub
popa
dec
sbb
cld
xor
jmp
in
js
sub
nop
aaa
dec
movsb
xchg
das
ja
mov
sub
sbb
mov
jns
push
mov
mov
lret
mov
xlat
cmp
push
cli
xchg
cmpsb
sahf
adc
xchg
adc
and
fcomi
jle
test
and
int
xchg
fwait
inc
push
jecxz
mov
out
std
popf
mov
movsl
sbb
sub
cld
lock
cmpsb
cmpb
dec
sbb
insb
push
sbb
das
xchg
sbb
cltd
in
sub
mov
sbb
jb
cs
icebp
mov
icebp
mov
es
fwait
sbb
cmp
movsb
mov
dec
je
dec
mov
sahf
mov
dec
bound
add
shlb
mov
into
jmp
sbb
fnstenv
rclb
inc
cmc
ss
test
outsb
icebp
xlat
xor
loope
lret
aad
mov
pushf
divb
xchg
adc
ficoml
mov
push
xor
xor
push
stc
mov
adc
lret
xor
jbe
in
mov
push
fcmovb
test
xor
ds
and
dec
jae
push
push
add
cmpsl
out
xchg
mov
push
cli
aaa
aaa
test
sub
add
cmpsl
jmp
cmp
mov
mov
stos
and
adc
jnp
movsb
dec
mov
adc
testb
mov
mov
test
xchg
mull
out
insb
pop
mov
fbstp
mov
or
lret
stos
fimull
js
and
push
nop
fisubl
sub
cmc
xchg
andl
cmp
ljmp
enter
push
inc
dec
push
dec
cmp
pop
imul
imul
mov
push
push
bound
mov
addr16
and
jne
xchg
add
and
push
inc
cmp
or
fcmovu
loop
adc
jo
cmpsl
int
mov
sbb
out
std
sbb
cmp
iret
mov
sarl
mov
aad
in
imul
fcomp
and
cld
movsl
sbb
push
and
jg
orb
pop
xchg
jnp
xor
jb
fldcw
pusha
into
into
xchg
pop
sbb
mov
scas
in
in
sub
les
mov
cs
mov
daa
iret
leave
cltd
xor
mov
pop
imul
out
lock
push
xor
fstpl
loope
cmp
mov
mov
or
pushf
and
out
test
dec
cwtl
sahf
ret
cmpsb
xor
bound
mov
test
test
mov
icebp
jecxz
sahf
roll
rcr
lahf
out
add
xchg
mov
mov
pop
imul
push
sub
dec
add
push
lea
shlb
movsb
push
data16
movsl
sbb
inc
xchg
outsl
push
fidivl
ljmp
push
push
sub
aad
in
pop
push
int3
scas
pop
arpl
push
aam
daa
jns
mov
pop
jo
gs
jae
and
mov
sub
adcb
aad
js
rclb
dec
in
sbb
ret
pop
mov
pop
test
adc
cmp
xor
sahf
in
xor
je
dec
fimuls
js
xchg
imul
or
cli
int
je
out
mov
pop
adc
lea
mov
add
stc
sub
aad
dec
cwtl
aaa
and
test
stos
push
sbb
clc
imul
ret
movsb
js
movhps
aam
inc
cmp
push
ss
push
lock
pop
dec
cmp
xlat
repnz
pusha
mov
sbb
outsb
ljmp
mov
xor
sbb
jle
jle
push
inc
or
mov
jnp
mov
out
mov
adc
lods
xor
push
arpl
fcmovu
in
loop
mov
sub
aas
flds
inc
dec
loop
insb
rorb
daa
jge
popa
mov
orb
or
sbb
or
cld
test
sbb
sbb
push
loope
loope
xor
popf
dec
sar
cmpsb
sub
pop
and
les
std
cmp
lret
es
push
mov
lds
dec
divl
push
or
xchg
es
xchg
mov
int3
and
mov
pop
cmp
cmpsl
push
xor
shl
je
fdiv
call
adc
cmpb
cmc
lret
sahf
xchg
xor
ljmp
cld
or
mov
jo
loopne
loopne
addr16
enter
mov
push
shlb
add
fnstsw
insl
and
movsl
ljmp
pop
lock
in
out
outsl
dec
pop
push
dec
dec
sub
aas
mov
xchg
xor
popf
sbb
in
lods
mov
add
gs
mov
out
push
ficompl
adc
mov
sbb
jno
fidivs
sti
outsb
in
lcall
outsb
rolb
les
mov
orb
in
and
pop
mov
or
push
dec
ljmp
xor
sub
mov
or
outsl
aaa
int
cmpsb
jnp
shl
pop
int
adc
notb
dec
insl
mov
dec
pop
andl
dec
mov
imul
gs
stc
lcall
push
and
mov
outsl
mov
imul
adc
test
dec
jl
clc
mov
jp
ljmp
inc
fidivrs
sub
testb
repz
fwait
inc
pop
xchg
adc
inc
jl
addr16
sti
arpl
mov
jo
dec
add
mull
pop
add
clc
cmp
pop
fcmovnu
cmpsb
xchg
loopne
mov
jg
dec
cmp
mov
inc
adc
aas
mov
jp
pop
push
ret
jmp
imul
cs
stos
daa
jns
add
mov
mov
scas
loop
outsb
fcmovnb
cli
pop
lock
jno
pop
test
cmp
lcall
xor
jo
ds
mov
inc
jbe
xor
sti
call
ja
fistpl
mov
inc
mov
clc
adc
sub
roll
cmp
mov
inc
push
les
lock
ja
retw
int
inc
adc
sbb
fwait
cmp
or
mov
xchg
das
sbbb
pop
xchg
aam
pop
xchg
inc
movl
and
xchg
add
cmp
fbld
out
cmp
mov
stc
mov
fidivs
cmp
dec
in
lcall
gs
pop
std
movsb
scas
inc
movsb
in
fdiv
lcall
push
push
imul
sti
lret
sbb
push
mov
das
jae
sahf
lds
jl
hlt
stos
fstpt
lds
cmp
hlt
imul
shll
xor
jnp
inc
mov
lock
repz
mov
loopne
lods
or
mulb
data16
pop
les
inc
mov
mov
mov
and
push
insb
adc
movsb
lret
pop
fidivl
hlt
stos
lea
idivl
fprem1
lret
xchg
mov
mov
popa
in
mov
iret
mov
mov
jnp
adc
xchg
lcall
call
lahf
cwtl
push
inc
imul
and
inc
mov
xchg
push
roll
sahf
pop
fstpl
fstps
mov
stos
jge
dec
ss
and
inc
pusha
jo
in
jmp
les
pop
adc
les
stc
push
adc
xchg
mov
push
or
nop
fs
cld
push
sarl
movsb
mov
shlb
mov
jmp
push
push
mov
imul
sub
inc
push
push
lock
jg
xchg
and
cwtl
popf
data16
dec
es
dec
cmp
xchg
add
sub
stos
xlat
jl
sub
inc
cld
pop
sub
mov
dec
dec
ja
les
pusha
les
lods
jne
std
mov
push
or
lahf
mov
scas
lret
out
stos
adc
hlt
fwait
mov
mov
popa
push
subb
xchg
test
xor
mov
loope
int3
lock
hlt
pushf
bound
hlt
cmp
dec
adc
movsl
sub
xchg
pusha
xor
arpl
int
fdecstp
cmp
jge
std
mov
dec
hlt
stos
rcr
popf
nop
mov
mov
xchg
xor
inc
lahf
jecxz
cmpsb
into
pop
mov
inc
in
dec
int
cld
xor
stos
or
and
sub
sbb
stc
lcall
push
dec
pop
lea
stos
xor
call
jnp
into
test
inc
inc
or
pop
adc
repz
push
pushf
dec
sub
mov
or
add
lahf
psllq
call
ljmp
push
js
inc
insb
lock
or
nop
rcrl
cmp
or
dec
add
add
shl
iret
and
sbb
jmp
jecxz
ret
xchg
push
pushf
xor
jecxz
ljmp
cmp
enter
into
adc
push
js
js
inc
lock
jg
sub
movsb
jmp
popa
cmp
and
or
imul
push
jmp
push
sti
push
ficompl
repz
je
and
cli
add
lods
pop
test
imul
in
shr
pusha
in
jmp
xor
clc
test
cmpl
pop
xchg
xor
insl
xor
push
mov
movsb
mov
mov
loopne
inc
into
mov
loop
xchg
push
repnz
sub
mov
xchg
push
mov
test
mov
fadds
mov
std
leave
sahf
outsb
loopne
gs
lret
mov
loop
pop
and
mov
test
dec
in
jl
xchg
aas
lods
ja
faddp
shld
dec
test
out
outsb
xor
mov
test
push
sub
imul
divl
rcrb
pop
lret
and
cmp
divl
pusha
cmpsb
addb
sti
dec
ja
mov
push
adc
test
or
and
push
sub
sarl
shll
test
push
adc
mov
fbstp
cli
dec
mov
pop
mov
ljmp
fwait
mov
cmp
int
sub
and
cltd
insl
push
cmp
xchg
lock
aaa
mov
xor
in
xchg
push
mov
shrl
jbe
sbbb
xchg
out
insl
push
pop
test
sbb
push
inc
sub
pop
cmp
mov
cmp
xor
fdivr
sub
xchg
cmp
pop
ret
pop
sarb
adc
xorl
and
insb
pop
les
je
int3
stc
pop
pop
clc
sbb
mov
adc
sub
xchg
and
mov
cli
mov
pop
pop
and
mov
jecxz
pop
insl
mov
dec
negb
inc
nop
xor
sub
and
sbb
bound
popf
jnp
int
shr
sbb
mov
pushf
mov
xor
outsl
cmpsb
pop
mov
test
popf
sub
push
cmp
int3
rcrb
addr16
xor
cmpsb
insb
xchg
inc
rcrb
shl
jns
adc
scas
into
pop
dec
sbb
je
jno
adc
movsb
mov
mov
push
sub
jp
test
adc
push
mov
stos
loope
and
enter
lcall
or
cmc
not
iret
adc
xor
les
push
filds
lea
and
adc
pop
adc
adc
xchg
fdivs
dec
jno
cwtl
test
jle
jne
push
popa
or
mov
popf
push
mov
loope
dec
and
xchg
lahf
jnp
iret
call
pushf
mov
lahf
xchg
dec
pop
dec
pop
iret
shrl
mov
outsb
sub
add
shrb
stos
iret
mov
adc
add
les
push
mov
push
ror
lock
out
int
mov
mov
mov
icebp
clc
jne
adc
andb
adc
adc
cmp
inc
sbb
xchg
outsb
xchg
and
test
mov
mov
mov
fstps
jp
jecxz
lret
xchg
je
jbe
ja
decb
xor
xchg
and
jo
jbe
xchg
xchg
dec
loope
cmpsb
pop
jb
mov
nop
pop
jo
push
cmp
inc
mov
insb
sbb
fldenv
mov
jcxz
jno
inc
push
out
dec
or
test
xor
cli
jb
lret
dec
inc
mov
sbb
jecxz
fldl
adc
ds
mov
lods
insl
mov
lcall
xlat
mov
fwait
lahf
pop
out
jns
dec
push
xor
lods
mov
xor
out
mov
iret
cs
sbb
lea
adc
icebp
fildl
inc
pop
sahf
mov
jb
and
test
adc
rcrl
scas
std
add
xchg
or
cmc
pop
dec
mov
call
jno
rorb
jne
inc
adc
jl
push
sub
repz
negl
stos
les
add
jge
sub
fmuls
loop
or
iret
ljmp
add
xchg
roll
ss
pop
rcrl
jg
mov
xchg
lds
ja
lock
cmc
xchg
stos
clc
jecxz
lahf
jge
mov
inc
mov
cmpsl
and
pusha
test
push
std
cld
pushf
add
xor
push
lods
cmc
outsb
cmp
inc
sub
mov
repz
shll
mov
in
cmc
dec
push
cmp
sub
mov
fmul
fsubr
sub
mov
xchg
out
sub
arpl
jecxz
dec
mov
movsl
loope
ljmp
sub
and
jecxz
sbbb
addr16
lods
pop
call
mov
mov
in
mov
cld
cmpsl
push
mov
sbb
cmp
addl
fsubs
pop
hlt
enter
pop
cmp
pushl
movsl
cld
daa
call
ror
mov
xchg
sti
mov
icebp
imul
adc
xor
pop
cmp
lods
mov
fisttps
lahf
insl
mov
gs
rorl
jmp
gs
fstpl
pop
mov
mov
sti
repnz
mov
cmp
loope
lahf
dec
jmp
xchg
cmpsb
in
cs
add
pop
popa
aam
inc
ljmp
mov
das
lret
in
sub
and
xor
jg
imul
jl
push
sbb
cmp
xor
mov
pusha
popa
add
inc
enter
scas
pop
dec
mov
out
test
sub
pop
lds
mov
jns
aas
je
jns
jnp
test
ret
das
jne
xor
insb
pop
arpl
cmpb
call
mov
cmp
shl
aam
mov
hlt
rclb
shll
sahf
dec
cltd
jmp
into
repnz
test
inc
fsub
pusha
ret
sbb
roll
dec
mov
sub
mov
push
lea
sbb
in
xchg
dec
sub
loopne
ds
push
jno
cltd
push
cld
ficomps
fcompl
mov
adc
mov
inc
push
mov
sbb
inc
inc
xchg
cmp
adc
cmp
rcrl
xchg
imul
xchg
cmpsl
and
cld
outsl
cmpsl
inc
jl
jno
mov
sub
mov
jg
lock
inc
outsl
push
jle
mov
cs
bound
faddp
arpl
sub
mov
aaa
movsb
jl
and
xchg
sbb
and
lcall
mov
fadds
cltd
jb
je
sub
xchg
push
in
inc
pop
pop
adc
cmp
call
iret
sbb
and
enter
lcall
xlat
cmpsb
loopne
adc
push
fwait
adc
mov
imul
fadd
call
jge
fs
add
test
mov
out
inc
adc
les
bound
dec
adcb
cltd
incb
mov
test
xchg
pop
outsb
add
hlt
mov
dec
mov
pop
mov
pop
xor
push
filds
sub
movsl
aaa
pop
stc
in
mov
int3
adc
xor
es
push
inc
sti
cmpsl
ss
loop
sbb
test
and
lahf
or
xlat
mov
mov
mov
cltd
ret
out
ficoms
jg
inc
out
test
jbe
adc
popf
push
xor
orl
xchg
sbb
gs
fs
add
popf
sub
xor
mov
sti
cmc
jge
lods
enter
movsl
mov
insl
in
xor
mov
lret
imul
cmp
cmc
jb
add
or
inc
fldz
call
in
js
dec
jecxz
out
cmpsb
dec
loope
pop
xor
adc
stc
jge
adc
xor
pop
adc
dec
xchg
and
in
add
sbbb
cmpl
sub
fidivrs
xor
sbb
mov
sub
icebp
sti
push
imul
cs
shlb
add
sbb
fcompl
arpl
outsl
pop
mov
into
mov
push
pop
mov
mov
xchg
leave
push
cltd
lock
shr
dec
fnstsw
xchg
fs
cmp
es
mov
push
xchg
outsb
inc
push
sub
and
pop
dec
js
call
test
ret
push
enter
mov
dec
out
orl
loop
mov
mov
lds
stc
mov
mov
push
mov
fmul
lar
adc
por
lods
stos
xor
push
cmp
cmpsl
dec
stos
sub
imul
ficompl
pop
outsl
loope
mov
dec
xor
add
or
pop
jno
incl
mov
fimull
call
rcrb
jmp
add
lods
xor
mov
xchg
mov
arpl
or
push
enter
std
jle
pop
in
xor
inc
push
mov
aas
pop
jno
xchg
out
sbb
xor
xor
in
xor
test
push
pop
out
add
pop
pop
repz
inc
lahf
test
mov
out
inc
adc
and
dec
inc
cs
jno
or
inc
mov
mov
repz
fisttpl
pop
fdiv
mov
fildll
cmpsb
outsl
mov
lea
ret
cmp
rolb
adc
jmp
les
mov
pop
leave
sbb
ss
jecxz
push
inc
cld
cmp
push
fs
out
xor
pop
pop
xchg
sbb
xchg
xlat
ja
insl
enter
and
leave
shrb
mov
nop
or
nop
sub
pop
js
push
mov
mov
cmc
je
cltd
mov
xor
adc
cmp
pop
or
and
in
leave
and
dec
adc
ss
pop
inc
sub
inc
sbb
nop
fcmovnb
clc
xchg
stos
cmp
pop
cwtl
and
mov
xchg
pop
imul
mov
jns
cmpl
cltd
and
pop
loopne
xor
mov
add
dec
fidivs
lret
fldl
in
dec
mov
enter
fbld
push
mov
ljmp
sbb
loop
or
inc
lcall
add
inc
test
popf
cld
or
mov
push
jmp
add
outsb
test
inc
mov
popf
lock
cwtl
dec
stos
or
sti
insb
popf
ret
mov
mov
pop
cmpsb
icebp
stos
mov
js
and
push
jne
push
push
push
jno
add
bound
out
push
mov
fiaddl
xchg
add
insl
call
subl
mov
dec
xchg
mov
mov
push
or
cs
mov
adc
push
sbb
or
pop
xor
xor
sbb
out
mov
pop
popa
cmpsl
cmp
xchg
das
xchg
imul
and
add
lds
aad
mov
cwtl
cmpl
xor
lret
lahf
jp
xchg
cwtl
cmpsb
fsubl
loop
dec
dec
sahf
aas
mov
dec
pop
add
jno
lret
mov
add
fidivrl
in
push
sbb
push
inc
xchg
sbb
jmp
outsl
scas
in
ljmp
mov
les
sahf
sbb
aas
sub
cmpsb
sbb
es
inc
cmp
and
cwtl
std
mov
dec
mov
jmp
inc
fstp
dec
leave
stc
je
leave
pop
sub
or
mov
test
ret
shl
jp
cmp
cmp
outsb
int3
and
lods
cld
test
xor
mov
inc
shrl
sbb
gs
sbb
inc
dec
addr16
mov
cmp
xchg
mov
push
scas
scas
movsb
lea
icebp
int
add
add
adc
inc
mov
xchg
mov
mov
lds
sbb
cmpsl
sbb
mov
inc
push
outsl
cmp
cmp
xor
sti
stos
les
fs
or
clc
xor
xchg
add
cmp
cmp
subb
fucomp
mov
push
cmp
das
push
das
in
dec
test
leave
stos
cli
cmc
xchg
repnz
hlt
lahf
push
out
adc
insb
xor
add
xchg
mov
and
jl
or
inc
add
inc
jecxz
idivl
stos
mov
addr16
sbb
jb
stos
out
mov
loop
or
mov
dec
std
jp
loopne
push
and
fsts
negb
cwtl
mov
sbb
push
cld
sub
ds
sbb
xchg
jae
adc
test
sub
jl
dec
inc
jae
iret
fadds
fsubrs
adc
inc
xor
aam
pushf
adc
cmpsl
cld
lret
push
leave
sub
pop
stc
shrl
lods
jbe
fcomip
add
test
dec
ret
sbb
shlb
into
out
push
jo
xor
mov
rorl
out
notb
push
hlt
imul
mov
mov
icebp
pop
pop
movsl
cmp
adc
xor
and
insb
mov
mov
cld
andb
fcomps
test
fdivs
pop
pop
aad
ficoms
or
sbb
ret
aam
into
call
insb
sbb
stos
cmp
outsb
fdivr
push
mov
mov
leave
divl
iret
clc
inc
mov
imul
adc
lods
jbe
bound
mov
lock
das
addr16
inc
or
mov
je
mov
sahf
fcomps
scas
insl
div
sbb
mov
and
cmpsl
sub
or
js
bnd
imul
cmc
pop
mov
push
jno
pop
or
scas
fmuls
mov
popa
xor
nop
outsb
and
adc
sbb
sub
xchg
cmp
mov
aas
aas
dec
adc
cmp
mov
xor
mov
push
dec
cwtl
insb
popf
cmp
dec
stos
xor
sub
icebp
dec
xchg
pop
outsl
insl
lea
lcall
into
dec
movsb
lods
lahf
dec
push
and
fwait
or
push
sub
int
mov
iret
dec
sbb
jnp
in
mov
mov
or
xor
pusha
addl
sub
xchg
xor
pop
pop
xchg
je
pop
shrl
xor
icebp
add
mov
andl
xacquire
sbb
xchg
mov
adc
and
popa
insb
mov
jb
cltd
outsl
push
stos
out
or
cmc
mov
inc
or
inc
scas
loopne
shll
movsl
in
lcall
sub
push
mov
aad
test
pop
outsl
mov
hlt
and
orl
and
mov
and
test
push
shl
cs
imull
xor
mov
cld
arpl
jnp
mov
lods
fmuls
jg
negb
push
mov
sbb
ds
test
mov
div
xchg
jecxz
xchg
push
dec
es
sub
add
fadds
dec
pop
outsl
push
in
inc
xor
dec
cmp
ss
iret
aam
dec
mov
mov
lds
and
sbb
lret
and
shll
testl
leave
iret
mov
mov
fistpl
pop
dec
jns
sub
push
add
add
inc
xor
imul
fwait
insl
mov
cmpsl
lock
or
jno
icebp
sbb
fisubs
repnz
clc
jp
mov
repz
add
jno
cld
sbb
mov
mov
stos
mov
xor
jl
cmc
and
dec
les
sbb
dec
mov
add
popf
je
mov
mov
push
fs
dec
push
mov
sbb
jmpw
sbb
repz
fbstp
jno
je
lcall
xchg
sub
xchg
pop
inc
mov
subl
dec
shl
data16
jo
pop
sahf
icebp
cltd
movsl
mov
or
jecxz
xor
je
insl
push
inc
jp
sbb
push
fidivs
ljmp
mov
push
push
pop
lds
fstps
mov
add
jp
fs
test
scas
in
pop
test
mov
jno
pop
mov
xchg
pushl
cld
xchg
jb
or
xor
add
pop
pop
sbb
jnp
out
in
jbe
adc
mov
add
call
rcll
ret
and
or
lods
mov
fiaddl
mov
subb
mov
addb
push
mov
add
xchg
shrb
cmpsb
nop
insl
inc
xlat
sub
and
lock
outsb
adc
hlt
and
push
sbbl
pop
and
sbb
in
and
xor
mov
adc
int
mov
call
popa
mov
lret
inc
notl
insb
pop
into
out
adc
stc
cmpsl
loopne
ret
jecxz
push
mov
push
add
push
mov
add
or
sar
sub
leave
jmp
xlat
int3
mov
mov
sar
mov
add
inc
fdiv
sub
repnz
cmp
sbb
shr
testb
xchg
lods
test
sub
leave
fadd
cmc
jns
popf
mov
or
ljmp
fdiv
cltd
cmpsb
mov
test
jbe
dec
push
test
imul
mov
pop
cwtl
test
cmpsl
adc
jp
in
orb
push
inc
xchg
dec
popa
mov
cs
dec
jl
mov
std
and
ljmp
stos
hlt
sbb
dec
push
pop
sub
mov
arpl
movb
insl
test
addb
mov
adc
sbb
and
mov
cmp
jns
adc
ret
and
lahf
pop
pop
inc
cmpsl
dec
push
or
sarl
fs
inc
bound
jl
in
imul
sub
pop
jnp
mov
mov
xor
sbb
roll
lret
xchg
jle
jo
fwait
arpl
ret
and
dec
or
mov
inc
cmp
out
outsb
in
aaa
clc
add
repnz
jno
mov
and
push
movsl
add
or
outsl
pop
mov
xchg
mov
aaa
arpl
std
test
ret
cmpsl
mov
xor
adc
into
popf
and
or
fstl
les
cmp
xor
mov
jnp
mov
jnp
ss
lret
push
xchg
add
cmp
sbb
cld
mov
mov
js
js
inc
mov
jb
icebp
mov
add
sub
loope
adc
sub
add
xor
xor
cmpsl
cmp
aas
and
adc
in
cs
insl
aas
cld
sbb
cmp
dec
push
loopne
cmp
hlt
adc
fldenv
or
stos
mov
aas
clc
bound
or
aam
sbb
inc
pop
jecxz
sub
in
pusha
ljmp
fldcw
fildll
push
cmpsl
adc
in
arpl
fbstp
inc
ljmp
stc
xor
dec
dec
fwait
and
push
aad
out
xor
xor
pop
imul
cmp
mov
xchg
data16
fsub
in
xchg
mov
and
out
scas
sub
adc
sub
adc
sub
mov
call
mov
vmwrite
lret
into
adc
mov
out
and
filds
sub
imull
outsl
es
jg
popl
mov
xchg
push
data16
or
inc
stc
inc
loope
ljmp
inc
mov
mov
jle
jbe
leave
imul
lds
and
aam
mov
es
dec
adc
jmp
mov
mov
pushf
lods
scas
and
sbb
mov
xchg
out
or
mov
fisubl
lret
negl
sbb
xchg
or
fsub
daa
adc
frstor
jns
and
std
adc
dec
test
imul
mov
xchg
dec
xchg
outsb
push
shrl
cmp
inc
popf
je
bnd
aas
pusha
mov
scas
scas
stc
cli
mov
ss
push
pop
pushf
xchg
push
adc
push
fistl
in
mov
mov
lret
insl
lret
mov
inc
rorl
lsl
clc
xchg
adc
xchg
shll
mov
mov
pop
pop
aad
mov
inc
cmpl
mov
jae
ret
sub
imul
mov
and
mov
ljmp
fcmovnb
jns
in
pop
orb
inc
psrlw
in
push
addr16
out
jl
jnp
dec
repnz
inc
test
mov
in
cmpsb
add
outsl
sbb
gs
repz
int
int
pop
aad
jne
adc
push
sub
outsb
add
mov
mov
lds
leave
push
mov
pop
neg
nop
push
jmp
insl
rol
cli
repz
xor
lret
lea
imul
inc
insl
mov
inc
xchg
into
jno
popf
adc
xor
int
mov
sbb
jne
push
mov
sbb
sbb
push
dec
andb
dec
mov
cmp
gs
repnz
push
xor
add
xor
test
out
test
xchg
cli
pop
lcall
fxch
push
jmp
loope
push
pop
jnp
lods
lahf
mov
leave
popa
int
stos
lock
out
pusha
popa
and
xor
cmc
repz
and
xor
sar
lahf
xchg
jae
jb
jnp
sub
iret
jecxz
loope
test
adc
cltd
repnz
mov
movsb
test
test
inc
xchg
sbb
dec
adc
sub
inc
pop
sbb
ffreep
adc
addl
dec
push
cmp
divb
mov
movsb
nop
into
add
sbb
sarb
pop
mov
fwait
xchg
lret
cmc
xchg
das
pop
pop
clc
cmp
sbb
test
lods
outsl
add
stos
jmp
sti
lock
adc
lea
das
aad
fdivrs
out
adcl
lods
insl
mov
push
aad
out
mov
fsub
dec
adc
mov
cli
mov
enter
test
mov
fisttpll
test
xor
iret
sbb
and
and
popf
pop
dec
aaa
pop
hlt
xor
ja
or
inc
lods
jmp
subl
xor
daa
pusha
sti
repz
push
pop
inc
lock
scas
add
and
push
jge
sbb
adc
mov
push
imul
lods
dec
push
adc
test
mov
fwait
and
xchg
jl
addl
add
adc
or
aam
and
and
int3
out
stos
and
movsl
xor
cmp
lds
mov
jmp
lret
sub
into
jle
loope
add
add
pusha
ret
ret
or
imull
sbb
scas
xchg
cld
cmp
sbbl
ret
fwait
shl
dec
push
scas
cmp
int
or
stos
inc
daa
aas
xchg
lods
dec
mov
pop
mov
add
push
pop
ror
cwtl
add
sti
mov
sbb
xchg
xlat
dec
push
adc
mov
xchg
and
add
fdivs
inc
sbb
sbb
push
mov
lds
xor
std
outsl
mov
mov
dec
out
mov
shlb
cld
lea
dec
jb
insl
adc
mov
mov
jb
jns
loope
inc
imul
mov
xchg
popf
dec
aam
and
dec
add
and
imul
adc
sarb
es
mov
jo
sub
fsub
dec
outsl
adc
push
xchg
bound
rcrb
add
xlat
or
dec
jo
mov
sbb
insb
pop
xor
push
mov
roll
mov
add
mov
fwait
and
inc
pop
sbbb
add
or
leave
mov
insl
std
push
cltd
loopne
lret
push
add
rcr
ljmp
dec
aam
mov
mov
lcall
adc
lcall
cmc
jge
cmp
and
add
popf
inc
push
int3
daa
xchg
or
xor
pusha
cmpsl
cmp
inc
rcll
xor
mov
sbb
out
rol
xchg
sbb
or
adc
xchg
xchg
imul
cmp
ret
push
and
ret
movsb
nop
inc
je
jl
cli
ja
jle
std
cmp
insl
sub
pop
push
inc
popa
std
lret
mov
mov
push
xor
mov
adc
jg
fsubr
incl
pop
xchg
int
cs
out
push
adc
imul
xor
vcomisd
mov
push
xchg
scas
cld
xor
jne
lea
jbe
jno
dec
push
testl
mov
inc
mov
cwtl
push
jne
sti
xchg
xor
sub
ss
shlb
sti
icebp
lock
popf
insb
test
push
push
out
jo
pop
ja
cmp
pop
enter
pop
inc
movsl
mov
pop
add
inc
jbe
insb
sub
jno
adc
push
add
lcall
jmp
push
dec
push
lods
sub
aam
out
lea
out
xchg
jge
add
cld
pmaxsw
in
or
adc
jbe
hlt
pop
cltd
in
sbb
xor
stc
rcll
or
or
mov
push
mov
cmp
aas
inc
dec
push
lret
mov
pusha
adc
inc
dec
andl
mov
dec
sub
pop
xchg
iret
movsl
ret
idivb
or
inc
or
push
mov
add
and
inc
es
jg
addr16
je
xor
push
shll
test
xor
scas
lock
jb
fldenv
sbb
rcrb
es
dec
repnz
mov
jnp
not
add
or
lock
scas
add
cli
insl
mov
cltd
cwtl
cmp
or
aad
enter
cmp
dec
pop
mov
dec
and
inc
cwtl
pop
movsb
call
iret
movsb
fdivrs
jb
lds
jns
aad
out
lods
mov
cmp
data16
inc
or
xor
fdivl
xor
add
sahf
arpl
nop
inc
xchg
push
rclb
mov
jmp
scas
outsl
decb
mov
das
or
lcall
mov
inc
cmp
leave
andb
mov
cld
aam
mov
dec
repnz
into
adc
xor
scas
fwait
in
stos
mov
pop
xchg
imull
aam
adc
pusha
mov
fildll
xchg
sub
xchg
jne
or
pop
int3
adc
mov
and
jg
bound
iret
sub
loopne
adc
jmp
cs
mov
push
mov
aas
fstpl
setnp
aad
orb
cmp
jno
jns
pop
xchg
pop
mov
jno
push
jno
push
cmpsb
ja,pt
divb
xor
icebp
imul
add
imul
sbb
stos
sbb
inc
lds
push
mov
pushf
and
je
incl
push
lea
dec
sbb
jbe
xchg
aam
fldl
addb
js
shl
mov
das
sbb
sub
iret
les
dec
sahf
stos
pop
xchg
mov
pusha
loope
scas
sub
std
sbbb
xchg
ror
sub
sti
cmp
es
aas
cmpsl
ficompl
roll
or
inc
xchg
jl
and
std
mov
sbb
add
mov
mov
push
and
push
in
jne
pop
xchg
rolb
aad
cmpps
cmc
push
loope
cmpb
scas
sbb
inc
pop
aad
xchg
mov
adcl
mov
inc
adc
lahf
mov
test
shrd
cltd
xchg
subl
pop
pop
mov
or
xor
fcomps
int
mov
lds
das
dec
dec
pop
call
cmp
mov
dec
pop
push
int
in
icebp
adc
outsl
data16
xchg
sub
test
xor
roll
filds
push
xchg
mull
fistpl
test
aam
adc
in
fs
icebp
je
xchg
jmp
or
aas
pop
test
xor
cmpsl
inc
frstor
aam
icebp
inc
icebp
or
aas
cmpl
mov
mov
dec
xor
xor
dec
mov
sub
jae
shrl
inc
sbb
mov
sti
push
stc
jns
adc
mov
or
cli
add
dec
insb
push
icebp
int3
fwait
push
inc
adc
in
pop
sbb
mov
cltd
push
divb
movsb
arpl
nop
insl
mov
xor
sahf
int
push
test
lock
inc
xor
out
call
inc
add
jecxz
cmpsl
pop
ljmp
mov
scas
lahf
xchg
or
repnz
push
mov
orb
dec
add
sbb
mov
mov
pop
shll
in
dec
cmp
xchg
fimuls
dec
mov
push
pop
push
xchg
iret
rorb
movsl
xor
xor
call
or
sub
decb
push
pop
into
cmp
push
cli
fsub
sbb
and
rcr
and
and
test
add
fistl
push
mov
sub
out
mov
lcall
test
das
or
mov
sti
mov
jg
or
loop
or
aad
adc
mov
mov
jns
ficoms
sti
addr16
bound
mov
dec
xchg
and
xor
int
test
aam
inc
push
xor
cmp
xor
sub
dec
push
inc
sub
lds
aam
jnp
jb
xor
inc
add
push
gs
push
popa
jb
iret
mov
mov
cmp
sbb
in
pop
je
mov
inc
add
sbb
mov
xchg
and
es
jecxz
push
pop
ds
sbb
adc
push
call
addb
icebp
pop
push
movsb
jae
movsl
xchg
xchg
xchg
sub
adc
jae
stc
inc
mov
fisubl
xor
fsubs
call
pop
sub
bound
mov
rcrl
in
sbb
push
add
adc
jmp
mov
gs
leave
add
dec
clc
call
jecxz
jnp
inc
pusha
daa
adc
xchg
bound
jecxz
pop
mov
jge
ds
xchg
ds
out
inc
jge
divb
mov
inc
fxch
orl
adc
imul
and
leave
das
xchg
sbb
cmp
fs
shll
jl
scas
push
fcomps
or
push
cmp
add
pop
int
fs
mov
popf
pop
or
aaa
out
int3
dec
and
lods
sahf
ljmp
pop
lds
stc
mov
fidivl
mov
andb
mov
sub
inc
cs
inc
xchg
icebp
sbb
cmp
mov
fsubr
cli
cmp
mov
pusha
cmp
cwtl
mov
lahf
cmp
or
adc
call
jne
jmp
scas
xchg
pop
jp
push
add
cltd
fwait
xor
adc
loop
sbb
sub
jns
pop
sub
mov
xor
or
into
cld
jae
mov
sub
sbb
and
xchg
clc
pop
and
sbb
jmp
cmp
aad
andb
fwait
or
aaa
dec
icebp
mov
call
subb
iret
icebp
mov
pop
ja
fwait
pusha
add
cwtl
dec
mulps
nop
jg
xor
dec
repnz
xor
cmp
adc
cmp
adc
jo
mov
adcb
pop
sbb
jae
xchg
inc
mov
outsb
clc
std
xchg
push
lds
push
lods
data16
pusha
fstpl
in
scas
dec
insl
ljmp
or
in
pushf
testb
fs
loope
int3
inc
jne
jecxz
and
inc
loop
pusha
and
dec
jae
xorb
sub
into
pop
sub
les
shll
sub
in
adc
adc
pusha
push
inc
lds
fisubrl
scas
push
xchg
sub
and
stc
fstpl
push
into
clc
xchg
mov
pop
stc
or
add
insb
popa
in
mov
cmp
dec
push
jmp
mov
clc
fmul
flds
ds
das
js
insb
stos
jae
lock
pop
sbb
pop
ret
rcl
daa
or
shll
xchg
loop
shr
insl
push
fidivl
ficomps
mov
jp
jne
push
cmpsl
pop
fcomps
cltd
mov
mov
cwtl
inc
mov
mov
and
cmpsl
xchg
mov
cmp
inc
test
popf
push
mov
nop
loop
sbb
jns
adc
mov
call
dec
stos
mov
jae
daa
push
xchg
sub
sarl
stos
pop
icebp
dec
sbb
lock
adc
adc
pop
arpl
out
ret
cmp
shll
js
in
loope
rorl
out
insl
mov
ss
xchg
push
mov
mov
in
test
sub
arpl
cmp
jp
sub
and
sbb
pop
roll
lea
jp
lcall
add
xor
leave
es
sahf
push
cwtl
loopne,pt
inc
push
movsb
test
imul
xor
jnp
inc
scas
xor
into
rorl
cmp
dec
insb
xchg
ja
notb
or
pop
xchg
cmpsb
dec
pop
repnz
loopne
pop
xlat
fnstenv
pop
and
fstl
loop
sti
mov
cwtl
loop
mov
cmp
pop
xor
sub
mov
push
cmpsl
jg
jmp
cmp
sub
and
cmpsl
in
fs
add
imulb
out
xor
rcrb
push
shlb
mov
add
out
push
sub
cmpsb
test
jle
cmp
jb
inc
scas
or
mov
cmp
stc
xchg
adc
cmpb
out
mov
sbb
adc
iret
in
sti
or
mov
pop
sbb
daa
xor
cmp
and
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
clc
ret
xchg
cmpsl
std
into
fadds
push
subb
or
into
sbb
icebp
cltd
dec
std
rcll
push
mov
lret
loope
cmpsb
ljmp
cmc
cmp
lds
ret
push
pop
mov
sub
and
loopne
xchg
xchg
push
iret
lahf
shlb
push
ret
repz
int
iret
xchg
insb
add
pop
jb
push
nop
xchg
imul
sbb
sbb
aas
add
test
pop
popf
push
push
inc
push
xchg
jbe
ljmp
adc
int3
or
or
scas
fstl
cmc
and
xchg
or
jmp
xchg
xchg
xor
sub
outsl
push
lret
and
inc
shll
push
ret
repnz
or
cmpsl
aad
sbb
daa
les
shll
xchg
test
cmpsl
into
and
mov
and
inc
sub
arpl
mov
dec
out
out
sbb
sarl
dec
mov
inc
scas
push
xor
jns
stc
jmp
incl
mov
lahf
gs
sub
inc
mov
arpl
mov
pop
pusha
movsl
into
dec
xchg
je
sub
test
clc
cmp
bound
mov
loopne
mov
pop
ror
pop
imul
adc
sti
push
mov
cmpsl
fstl
dec
and
imul
mov
insl
jbe
mov
sbb
cmpsb
sbb
movsl
or
adc
inc
mov
aad
pop
test
add
sub
adc
pop
orb
or
jmp
std
outsl
dec
sub
pop
sub
sbb
stos
pop
mov
sub
outsb
nop
mov
inc
scas
or
xor
sub
jne
sbb
adc
push
loope
pop
rorb
les
adc
lock
cltd
jnp
jae
mov
dec
psubw
fcmovu
mov
shll
push
cltd
negl
aas
cmp
pop
push
ds
or
faddp
lea
pusha
popf
cmp
jecxz
outsb
mov
jb
out
insb
cmp
pop
repnz
dec
push
dec
cmp
sbb
clc
out
std
dec
xchg
cmp
xchg
icebp
adc
xlat
xchg
cmp
mov
test
xor
dec
jp
gs
dec
hlt
movups
cmpsb
mov
sub
pop
or
push
sbbl
cmp
add
xchg
adc
xor
dec
pop
outsl
push
push
pop
add
mov
dec
push
add
jne
cli
push
outsl
xor
decb
sub
mov
push
and
rorl
sbb
aam
and
iret
fdivr
out
iret
cmp
sub
cmp
sbb
mov
sub
push
add
faddp
cmp
push
aam
stos
or
lods
jl
movsb
arpl
mov
inc
add
mov
and
pushf
das
xor
fimull
push
popa
test
push
aas
mov
push
xchg
mov
ja
mov
loopne
sub
adc
sub
lods
mov
enter
ficoml
das
addl
jge
cmp
dec
mov
cwtl
xor
adc
sbb
adc
sarl
ret
test
repz
cmpsb
dec
adc
int3
mov
or
mov
mov
and
jp
std
xchg
shll
jp
mov
xchg
dec
imul
pop
ss
es
repnz
push
mov
and
cmpsb
neg
push
ficompl
std
rcrb
cwtl
notl
lds
ljmp
inc
je
test
insb
sub
pop
adc
dec
dec
out
jns
pusha
mov
inc
pop
sahf
mov
in
int
fcmovbe
sahf
push
inc
xrelease
jo
dec
in
in
fmul
fnsave
inc
mov
mov
cmp
in
addr16
daa
ss
shl
dec
dec
sub
sbb
pop
jle
inc
andb
push
xor
out
mov
in
enter
xor
sub
sbb
ret
fsubrl
push
lods
push
addr16
call
ja
pop
sub
inc
testl
sbb
mov
sbb
imul
xor
xorl
iret
xorb
in
loop
sbb
ss
jmp
lret
dec
pop
pop
jp
add
scas
shl
addr16
fdiv
cltd
cmpb
loopne
mov
push
xchg
imul
xchg
js
cmp
imul
add
daa
lds
xchg
dec
rcrl
push
jbe
pop
pushf
scas
sub
into
pop
adcb
xor
ret
xchg
repnz
jae
inc
and
jnp
xor
inc
outsb
jnp
sbb
insb
mov
enter
add
icebp
ret
add
fs
lcall
into
sbb
call
das
sub
mov
mov
sarb
orb
and
xchg
into
xchg
fidivs
sbb
lret
cmp
xchg
push
fisubs
stos
pop
cli
dec
jmp
popa
push
push
lret
push
sub
jbe
sub
mov
dec
test
outsl
push
cmp
mov
mov
mov
fmulp
leave
adc
out
pop
mov
and
into
cmc
xor
outsb
add
mov
jnp
mov
pop
stos
cld
lock
mov
add
push
data16
dec
movsl
mov
inc
roll
arpl
stos
stos
mov
jne
movsl
dec
xchg
mov
inc
popf
popa
stc
mov
ret
aad
jne
xchg
cs
jp
icebp
and
xor
xor
adc
icebp
xorl
pusha
pop
sbb
in
rcrb
dec
push
icebp
jmp
outsl
out
sti
pop
mov
mov
movsb
shlb
adc
jnp
or
les
hlt
jno
sbb
adc
insl
or
cmp
outsl
pop
fnstsw
stos
rcr
mulb
xchg
push
aas
jae
dec
push
mov
lods
arpl
sbb
sub
adc
testl
movsb
roll
jmp
inc
add
cmp
pushf
xchg
lods
mov
ret
lea
rorb
mov
mov
xchg
icebp
int
adc
ss
fwait
cld
repnz
jnp
in
mov
xor
mov
jecxz
into
dec
jne
lret
dec
xchg
mov
cld
mov
loop
mov
mov
mov
and
or
add
add
mov
aas
pop
aam
idivl
adc
sbb
or
push
in
in
lock
pop
adcl
xor
dec
fistpll
subl
repnz
xor
cmp
loope
pusha
wbinvd
rcrb
sub
pop
cs
pusha
dec
loopne
sahf
mov
pop
jmp
hlt
das
loope
sub
jne
cltd
sar
sub
jnp
inc
add
xor
push
add
sub
push
cmpsl
jae
popl
jp
jbe
sub
les
inc
out
lea
out
mov
mov
lds
popf
mov
rorl
jne
test
aas
cmp
adcb
pop
lock
push
mov
xchg
cmp
xor
out
mov
cmp
cmp
mov
sbb
xchg
test
insl
data16
xchg
stos
arpl
lret
mov
lret
nop
xlat
mov
clc
lds
cmpsl
add
dec
insl
fstps
mov
mov
dec
cmp
or
lock
fnstcw
sbb
mov
insl
hlt
cs
and
adc
mov
add
test
faddl
enter
lds
add
shl
in
aad
or
push
or
dec
fwait
cmp
stc
test
loopne
stos
add
jns
lcall
fistps
mov
enter
xor
or
inc
in
mov
mov
add
mov
ret
ficomps
and
sub
arpl
cwtl
inc
out
mov
fidivrl
sahf
xchg
outsb
sub
das
imul
add
and
sub
insb
pop
sub
cmc
test
stos
inc
rorb
dec
adc
lods
fcompp
dec
leave
mov
loop
sarb
add
xchg
divl
jbe
pop
scas
xchg
dec
pop
lods
out
test
cmp
mov
or
xchg
pushl
hlt
mov
xchg
sub
pop
sub
xchg
daa
adc
xchg
cmc
ljmp
mov
mov
add
sub
dec
jmp
bound
test
dec
xchg
int3
xor
sbb
enter
xor
in
mov
push
push
inc
cmovne
leave
sbb
ret
scas
je
shl
aam
lret
inc
fadds
dec
fstpt
lods
pop
out
adc
xor
mov
cmp
jp
sahf
xchg
jle
mov
xor
push
xor
aaa
lea
mov
or
mov
scas
std
les
cld
push
mov
aad
bound
fimull
je
divb
or
lods
enter
sub
and
lret
aam
pop
and
mov
xor
ret
lods
mov
cmc
popf
cmp
arpl
loope
or
mov
movsl
adc
std
out
scas
aad
push
dec
aam
inc
lahf
push
sbb
jae
sub
pop
cli
and
in
xchg
rcrb
or
inc
mov
pushf
xor
repz
mov
rcrb
inc
out
pop
pusha
hlt
mov
popa
stos
cmp
sbbb
gs
rclb
ret
sarl
jge
cmp
stos
fsubs
push
test
sbb
jle
adc
into
repnz
or
js
in
mov
pop
sub
pop
arpl
orb
test
xlat
pop
adc
aad
jno
cmp
punpckhwd
add
pop
int3
fucom
inc
test
fdivp
cli
test
xchg
jne
aaa
cltd
fstpt
add
les
scas
icebp
clc
fimuls
lods
xor
pop
and
popf
out
sahf
push
ret
xor
pusha
mov
fistps
pop
or
or
fidivrs
loop
nop
mov
aam
inc
dec
or
jmp
mov
or
mov
das
iret
mov
add
data16
popa
inc
dec
xchg
scas
dec
stos
xchg
lret
mov
loopne
outsb
push
push
lcall
add
nop
inc
or
xor
out
js
gs
out
cmp
sahf
add
aaa
pusha
mov
jp
lds
mov
lret
inc
add
loopne
fmull
loop
cmpsl
cmp
mov
sbb
xchg
lods
push
lods
js
test
sbb
sbb
das
or
loopne
loope
push
sub
mov
push
cmc
sbb
dec
jb
cmp
push
rclb
in
jns
sub
std
sbb
testb
jp
lea
loop
loopne
dec
mov
scas
cli
repz
jb
rorl
push
nop
outsl
aam
loopne
lds
sub
in
les
idivb
pop
daa
push
mov
movsl
lcall
sbb
add
loope
pop
cmp
clc
scas
mov
push
fldt
add
fsubr
jl
in
push
mov
jmp
fisubrs
jle
adc
aas
aas
xor
ficoms
cmpsl
cmp
mov
popf
ret
outsb
jg
pushf
mov
mov
loop
xlat
inc
inc
and
and
in
orb
bound
xor
adc
repz
dec
pop
jns
fbld
xor
lret
enter
ss
into
jecxz
test
fbstp
mov
inc
or
or
xor
js
push
mov
je
inc
jb
or
cwtl
lods
mov
movsl
in
jl
mov
pop
xor
mov
jno
mov
test
add
outsb
push
ja
mov
fwait
xor
or
lea
xlat
nop
shll
movsb
jg
xchg
sahf
jecxz
cmpb
xor
fnstenv
push
push
gs
test
aad
ljmp
popf
inc
leave
outsl
jo
dec
mov
repnz
jo
adc
iret
gs
cmc
test
mov
push
inc
je
pop
sbb
loopne
push
push
pop
cltd
sbb
cmc
popf
mov
xlat
lea
and
pop
fwait
xor
mov
shl
sub
out
pop
sub
hlt
adc
loope
das
mov
pushf
outsl
cltd
xchg
stos
xor
sub
ja
outsb
cli
cld
iret
shl
js
nop
cli
push
mov
jecxz
loope
push
push
xchg
sub
or
push
push
insl
insl
scas
inc
mov
push
imul
mov
pop
add
subb
pop
and
pop
jle
jl
inc
pop
sbb
cmc
adc
das
mov
cli
stos
rcr
sub
lds
hlt
and
cmc
inc
pop
mov
or
mov
inc
pop
or
dec
jle
sti
adc
mov
pushl
rcll
sub
enter
mov
add
stos
mov
xor
mov
dec
imul
js
imull
loope
fimull
inc
lcall
fs
xor
shrb
stos
movsb
cmpsl
xchg
lock
and
or
into
stc
call
ljmp
inc
inc
and
and
fwait
dec
sbb
xchg
mov
add
add
cmp
mov
mov
into
insl
test
and
add
dec
sub
xchg
push
xchg
imul
in
adc
sub
jae
dec
enter
shlb
les
idivl
icebp
aad
stos
pop
ret
adc
test
loop
inc
fcos
movsl
fidivrl
stos
push
in
pushf
jae
popa
xchg
insl
adc
in
addr16
sbb
insb
push
adc
sbb
mov
sbb
lock
xchg
gs
adc
lock
mov
cmp
sub
les
cwtl
mov
push
inc
mov
dec
pop
dec
jne
lret
sub
dec
mov
pcmpgtw
xor
orb
mov
push
out
push
or
xchg
mov
cs
sbb
insb
dec
and
mov
mov
test
push
cmpsb
or
lret
addb
push
pop
cs
xor
ret
ret
fwait
sub
push
dec
icebp
sbb
cmovp
push
hlt
pop
sarl
and
and
mov
fs
out
dec
and
mov
aas
lcall
addr16
daa
fs
js
inc
pop
leave
pop
lods
add
negl
lea
out
outsl
mov
push
or
mov
fldl
adc
mov
push
and
enter
sub
jb
iret
jne
cs
mov
xor
xor
push
add
push
lret
jae
mov
or
icebp
mov
aas
inc
jbe
mov
int
loope
dec
push
aam
cmc
subb
inc
jno
out
xchg
pop
xchg
mov
fiadds
rcrl
pop
add
aaa
je
cmpsl
scas
xor
stos
push
js
jp
push
addl
popf
ror
imul
imul
shl
mov
sub
jae
stc
jecxz
rcrb
imul
in
rolb
stos
scas
test
ja
cmp
arpl
test
popa
addr16
push
test
cmpsl
mov
adc
jne
fisubs
or
push
add
xor
shl
insb
cmpsb
pop
fwait
setbe
insl
notl
pop
push
mov
adc
popa
cmp
lcall
jg
pop
push
in
mov
test
leave
insl
cmp
and
hlt
push
out
mov
ja
fs
imul
icebp
push
pushf
pusha
and
pop
addr16
adc
das
jle
adc
mov
icebp
lock
inc
xchg
mov
je
insb
fnsave
mov
iret
or
jbe
and
aam
loopne
mov
xor
fistl
add
das
mov
test
inc
pusha
or
out
mov
mov
mov
lock
and
aad
icebp
jl
inc
cmp
hlt
enter
lret
add
insl
arpl
xchg
movl
iret
outsl
sbb
add
inc
sti
cltd
test
sbb
pop
dec
or
mov
out
push
lods
sbb
sub
sbb
mov
clc
int3
cmp
in
cmp
mov
sub
outsb
mov
or
arpl
push
mov
pusha
sub
adc
sti
stos
sbb
inc
lods
sub
sbb
mov
in
and
jecxz
xor
add
shll
xlat
push
dec
hlt
mov
stc
sbb
jecxz
add
sub
dec
fists
movsb
mov
aam
pop
mov
mov
fidivrs
scas
sbb
lea
scas
mov
sar
ds
clc
inc
or
sbb
adc
test
scas
pop
cmpsl
jp
or
cmc
adc
les
lcall
rorb
test
lods
xchg
in
sub
xchg
dec
aas
mov
clc
arpl
mov
test
jo
xchg
push
stos
push
fldenv
mov
rcll
leave
sbb
in
mov
mov
sub
inc
or
pop
pop
fnstenv
inc
cmpsb
push
jnp
shlb
mov
outsb
dec
pushl
inc
bound
jno
pop
fcomi
movsb
pusha
test
sbb
lret
pop
inc
add
jle
push
or
jmp
stos
es
insb
rcll
pop
cmp
mov
xchg
bound
psubusb
mov
or
jns
mov
lahf
in
mov
sub
jo
push
scas
sub
pushf
hlt
jp
sub
in
add
in
or
add
adc
push
iret
pop
sbb
xchg
ds
cmp
inc
or
add
push
mov
jnp
inc
inc
xchg
pop
inc
push
sbb
daa
addb
cmp
mov
mov
mov
xlat
inc
cltd
cmp
in
jnp
inc
sar
sub
sarl
popa
jle
out
xchg
out
sbb
fldenv
cltd
or
gs
mov
js
mov
hlt
dec
shrb
lds
dec
sbb
xor
test
xor
int
mov
jb
xchg
rcpps
mov
pop
pop
sbb
mov
in
out
jns
inc
call
dec
pop
mov
cmp
xor
addr16
mov
cs
cltd
jnp
pop
movsl
xchg
ss
and
shl
mov
cmp
cmp
push
inc
loop
mov
add
mov
stos
xchg
ljmp
nop
rcrb
mov
aam
sub
mov
repz
scas
pushf
mov
fisubl
cmp
loop
loope
sbb
fmuls
add
push
inc
ret
popa
enter
or
mov
xor
scas
xchg
add
subl
pop
add
out
pop
enter
push
xchg
and
adc
test
or
jmp
mov
pop
push
insl
mov
sbb
and
test
jmp
ljmp
and
fisubl
jl
rcll
cmp
je
cmc
mov
aas
sub
stc
mov
push
cmpsl
in
orl
sub
sbb
adc
pop
jo
test
and
mov
xor
mov
aaa
mov
mov
ret
mov
mov
outsl
sub
and
sbb
sub
rcll
dec
sub
push
or
aas
divb
sbb
jae
insl
fnstenv
ret
mov
pop
push
or
or
fisttpl
xlat
or
push
data16
ja
or
or
xchg
mov
lock
and
aad
sahf
addb
mov
jp
outsl
int
in
mov
mov
or
ljmp
dec
push
dec
jne
cld
iret
jg
jne
pop
pop
jmp
add
xchg
aam
cmpsb
int
out
cli
orb
or
dec
sub
fwait
cltd
ja
inc
in
int3
imul
mov
and
add
add
or
mov
pop
xor
mov
sbb
and
sub
mov
dec
and
decb
inc
or
fdivrs
and
xchg
stos
pop
aaa
and
or
and
xchg
movsl
fisttpl
aam
orb
jne
in
fisttps
push
adc
push
cmp
xor
ljmp
popw
xor
and
cmpsb
je
mov
cmp
loopne
xor
movsl
add
aaa
ja
lahf
mov
sbb
imul
inc
and
les
dec
out
shll
push
addb
test
xchg
aaa
daa
das
mov
fdivrp
mov
xchg
or
out
and
inc
aam
cs
sahf
daa
pop
lock
push
cmc
mov
sbb
iret
cmp
int
sbb
je
add
mov
call
jno
bound
fcoml
sahf
je
adc
dec
xor
ja
sahf
aaa
and
out
sub
and
pop
adc
push
xor
mov
push
insl
lret
xor
shll
dec
pop
leave
mov
mov
in
in
and
mov
adc
ficoml
jae
rclb
js
fimuls
jle
mov
fs
adc
loopw
fists
std
outsb
xchg
lea
mov
enter
repz
xchg
cmc
add
mov
sbb
sub
dec
cwtl
pushf
rorl
jnp
loop
and
inc
jo
sub
and
xor
mov
mov
out
jns
mov
into
lcall
jle
mov
fnstsw
cmp
loopne
inc
jb
imul
mov
push
cmp
xchg
jmp
ficompl
loope
arpl
adc
mov
cmpps
shr
mov
inc
inc
shrb
sbb
dec
pop
mov
mov
loop
sub
sub
and
or
xchg
mov
cld
push
loopne
xchg
rcr
add
mov
movb
and
outsl
loopne
cs
or
aam
mov
gs
sub
pop
sub
int
inc
test
imul
cmpsb
xchg
into
cmp
jbe
mov
sub
fistpll
inc
pop
ret
icebp
lods
gs
std
cld
mov
daa
push
movsl
sbb
lret
addr16
adc
dec
daa
insb
outsl
jg,pt
mov
loope,pt
pop
xor
pop
sbb
fbstp
in
mov
pop
mov
or
repz
pop
outsl
xor
dec
xchg
push
sub
repz
push
in
out
cltd
popa
out
sub
dec
mov
pop
xor
pop
xor
fs
pop
jno
adc
insl
sub
mov
adcl
push
mov
push
mov
data16
jp
imul
arpl
cld
inc
mov
sub
jecxz
mov
and
bound
xchg
je
and
lcall
sbb
inc
push
pop
xor
mov
sub
js
xor
test
icebp
clc
add
stc
rep
jmp
dec
les
sbb
dec
enter
enter
out
jae
adc
iret
nop
push
xor
call
mov
sbb
clc
in
cmpsl
cmpsl
cld
or
mov
and
xlat
fstl
out
adc
ja
icebp
pusha
repz
add
pop
js
enter
cmp
or
lret
daa
mov
call
frstor
add
mov
cmpsb
bnd
jecxz
ljmp
or
fistpl
xchg
testb
pop
pop
icebp
movsb
add
js
push
testb
pop
cmp
test
outsb
mov
sub
pop
pop
negb
aas
call
cld
iret
mov
jmp
ljmp
cltd
lret
in
in
pop
push
mov
adc
jae
or
call
add
outsb
pop
inc
and
cli
repz
jl
mov
call
hlt
fldenv
outsl
inc
or
xchg
jp
je
push
movsl
jg
enter
sahf
pop
mov
cmp
out
jecxz
inc
out
into
dec
jle
shll
mov
adc
aaa
xor
xorb
and
sbb
movsb
push
cwtl
inc
dec
xchg
fdivp
jmp
cmp
idivb
arpl
dec
adc
and
popf
pop
addr16
popf
roll
cmp
mov
pop
cmp
test
out
jp
test
repz
inc
cwtl
ja
xor
rcrb
xchg
fisttps
and
pop
je
in
pop
movsl
mov
adc
inc
aaa
mov
sar
push
enter
mov
sub
scas
rcll
dec
push
xchg
outsb
inc
lds
inc
ret
int
repnz
cmp
cmp
dec
dec
adc
sub
pop
mov
fimull
das
sbb
sti
pop
adc
or
pop
pop
lahf
adc
and
mov
mov
cmp
cmp
js
jne
les
in
sarb
idivb
cmp
mov
dec
popf
adc
aad
xor
xchg
stc
xor
fisttps
aam
std
add
mov
call
ljmp
aam
cmp
test
stos
ret
bound
notl
jns
mov
push
adc
mov
dec
testb
xor
mov
jmp
pop
mov
push
jl
and
push
shll
pop
mov
jns
mov
cmp
cmp
fldl
ss
cmp
outsl
fcoml
int3
mov
push
ret
inc
iret
adc
push
pop
mov
mov
mov
adc
mov
lds
pop
add
test
les
cmp
pop
outsl
sbb
nop
iret
sbb
das
fdivrs
cmp
call
insl
in
lods
cs
ret
mov
add
add
add
scas
mov
jns
test
push
mov
dec
out
mov
add
xchg
mov
jecxz
je
push
push
mov
sbb
cmp
shr
ja
mov
sahf
adc
scas
cmp
cmp
aas
pop
shl
ret
call
into
popa
test
js
and
cmp
inc
inc
add
or
fcoml
not
lahf
pop
jo
movsb
jle
jg
insb
enter
sub
mov
std
lds
cld
sbb
lock
cvtps2pi
adc
xor
xor
and
lret
xor
in
add
inc
sub
add
mov
sub
das
std
loopne
inc
add
dec
inc
je
sarb
es
subb
pusha
jnp
outsb
push
inc
add
dec
sub
mov
loopne
push
enter
cs
pop
xor
les
xor
sbb
sbbb
cmpsl
movsl
xchg
cmp
adc
mov
pusha
clc
inc
xchg
loope
inc
sub
jne
mov
lods
je
xchg
mov
mov
idivl
jb
aaa
cmc
inc
dec
bound
bound
adc
outsb
mov
pop
iret
jns
adc
xabort
lret
mov
or
xor
mov
fs
sti
leave
sub
in
adc
cmp
test
popf
aaa
pop
leave
in
shrl
xchg
fcmovnb
inc
mov
sub
adc
mov
push
pop
sbb
sub
enter
insb
cmp
and
mov
scas
pop
sub
arpl
pop
flds
enter
xchg
fidivs
lods
mov
and
adc
inc
mov
imul
or
outsb
dec
add
cli
ret
sbb
cmp
add
push
fldenv
sub
into
push
in
jns
loopne
pusha
sbb
xchg
xchg
pop
dec
inc
jo
inc
push
jecxz
mov
aam
dec
inc
push
into
aaa
and
movsl
data16
rcrl
ret
shrb
js
test
cmpsl
push
cmc
pop
mov
cmp
movsb
jno
stos
xchg
jp
inc
in
lret
pop
and
scas
and
mov
mov
and
jp
cld
enter
imul
pusha
popf
cmpsb
xor
push
mov
sti
xchg
out
mov
popa
sub
mov
pop
dec
popf
push
dec
leave
cld
adc
mov
add
inc
inc
ret
lret
sub
adc
and
push
pop
and
inc
sub
lea
test
cmpl
ja
movsb
and
outsb
scas
pop
fmull
leave
insb
adc
jnp
jge
rorl
inc
loop
xor
stc
out
inc
pop
std
mov
mov
rorl
or
lcall
add
aad
les
push
or
push
aaa
shll
adc
aas
jb
fadds
and
rclb
mov
cmp
jno
mov
incb
imul
filds
mov
jg
sub
pop
fstpl
and
or
in
arpl
cli
inc
cmp
xor
popf
cmpsb
shr
or
push
bound
rcll
xor
imul
xchg
stos
xlat
cs
push
cltd
outsl
aaa
stos
inc
and
sub
push
xlat
cwtl
aaa
insb
or
repz
dec
jg
repz
xchg
clc
fldenv
mov
enter
sub
dec
adc
cmpsb
shl
icebp
jmp
pop
dec
leave
adc
je
sbb
sbb
gs
mov
lcall
int3
mov
push
inc
and
aaa
in
jge
inc
cmp
xchg
outsl
jge
mov
adc
stos
inc
fadd
inc
fcoms
sub
dec
mov
ja
mov
in
jb
test
inc
and
mov
iret
enter
incl
test
iret
xchg
orb
cmp
mov
push
rcr
shll
test
jno
fsubs
loopne
jle
aaa
sbb
fwait
or
out
mov
push
cmc
xor
test
sbb
movl
pop
pop
mov
fwait
xchg
data16
lock
lea
xchg
sbb
xor
adc
fcmovnb
mov
cld
mov
aaa
insl
jge
and
jp
fidivs
xchg
mov
pop
add
jg
ja
pusha
mov
loop
mov
mov
mov
stos
sub
scas
ret
pushf
jg
cmc
insl
sub
add
mov
adc
mov
fadds
fcompl
loope
hlt
ror
dec
or
ljmp
add
lret
test
imul
or
in
pusha
sbb
jmp
mov
gs
loop
cli
jl
pop
shll
adc
je
sub
shrb
and
and
xor
fldl
xchg
mov
andb
jle
push
jo
xor
jae
inc
repz
push
xor
repnz
inc
and
pop
ss
cld
and
pushf
fisubl
out
mov
xor
push
mov
adcb
xchg
jb
jl
mov
nop
push
fnstsw
add
imul
xor
push
mov
jl
sub
mov
push
mov
or
clc
orl
inc
rorb
scas
adc
fldl
sbb
jge
movsl
xchg
inc
aad
arpl
cmp
adc
repnz
pop
das
adc
stc
and
adc
in
nop
adc
mov
arpl
outsl
cmc
adc
cmp
test
push
adc
lds
add
xchg
mov
jp
cli
js
or
push
popa
inc
pop
xchg
cwtl
dec
data16
add
fcomp
movsb
sub
out
or
xor
xchg
mov
push
or
sysenter
mov
sti
sbb
insb
adc
xchg
rcl
out
cli
scas
jb
add
cmp
testl
ljmp
pop
stos
adc
lret
cmp
xchg
test
stos
xchg
dec
rolb
idiv
add
push
insl
ja
inc
mov
cmp
mov
daa
mov
xchg
add
push
andl
mov
dec
adc
fidivl
sub
mov
cmovns
scas
dec
cmp
out
cld
pushf
xchg
lret
movsb
xor
or
cmp
sbb
sbb
mov
ss
out
imul
jl
xchg
hlt
popa
mov
stos
mov
push
jecxz
bound
leave
push
push
test
lret
shlb
pop
push
add
cmp
rol
sbbb
pop
sysret
push
lods
jmp
mov
lcall
jl
xor
push
gs
jle
mov
dec
jo
out
xchg
enter
push
addr16
inc
sarb
mov
popa
or
js
or
jp
mov
clc
xchg
xchg
cwtl
push
dec
push
ss
outsl
sub
mov
inc
fs
aas
fidivs
ds
mov
xchg
idiv
xchg
xchg
pop
adc
ds
mov
lods
dec
and
cmp
sbb
cmpsb
push
int3
xor
sub
lds
or
xchg
cmp
cmc
in
je
or
jae
mov
or
mov
mov
sbb
cwtl
add
cmp
aad
mov
rcll
mov
mov
roll
std
jo
in
adc
sub
testl
and
sbb
jne
pop
sbb
mov
movb
mov
lock
js
outsl
les
inc
insl
rclb
lahf
fcos
movsb
mov
adc
in
add
jno
pushw
sbb
inc
cmp
lcall
mov
imul
shl
pop
xlat
jo
add
push
cwtl
add
add
sub
int3
pop
xchg
mov
shlb
lahf
fbstp
cwtl
call
inc
ljmp
push
lods
dec
fcmovnu
pop
ja,pt
push
aaa
pop
mov
dec
fadd
aad
adcl
mov
iret
pop
xor
pop
imul
fadd
push
mov
or
fstpt
aaa
aam
xchg
jnp
call
je
out
mov
jl
mov
std
rolb
xchg
adc
lahf
fsubl
in
popl
icebp
jns
lret
test
rclb
mov
sbb
add
sbbb
push
dec
mov
xchg
lea
xlat
pop
in
hlt
adc
jl
sub
into
xchg
test
cld
cmp
mov
test
sub
push
fdivrs
inc
push
dec
rol
nop
ljmp
fldl
mov
insb
popf
and
pop
cmp
insl
je
mov
ljmp
or
incb
cmpsb
inc
dec
push
jne
mov
or
cmpl
mov
jmp
cmpsb
dec
insl
lret
or
mov
loop
jl
or
adc
pop
stos
dec
jmp
cmp
divb
inc
hlt
add
mov
jno
mov
mov
orb
stos
sti
jbe
jnp
or
dec
dec
movsl
cmp
mov
lret
lcall
push
in
sbb
xor
jns
jmp
jecxz
mov
inc
inc
sub
jo
rorl
pop
xlat
clc
mov
movsl
lods
les
shlb
mov
mov
pop
filds
adc
sub
out
clc
cmpsl
sub
dec
mov
shrl
adc
and
aam
call
mov
imul
sti
gs
std
je
ret
sub
fs
bound
in
fidivs
in
mov
cltd
sub
sbb
add
loope
out
pop
addb
push
cld
fstpt
mov
fildl
xchg
ret
cmpsl
mov
jbe
imul
arpl
and
aam
fnstcw
sub
fwait
lea
enter
lock
cmp
dec
lds
sbb
sub
inc
arpl
push
inc
outsl
mov
pop
int
sub
add
test
sub
or
lcall
xchg
mov
popf
inc
xchg
sti
cmp
cmp
andb
ds
loope
adc
sbbl
inc
mov
rcr
cli
and
fadd
push
dec
mov
stos
in
jb
jne
push
cwtl
pop
imul
sub
push
push
mov
sub
outsl
mov
insb
fs
daa
aaa
and
mov
jns
les
fnstenv
pop
mov
mov
and
addr16
ja
and
div
jb
mov
xchg
hlt
push
xchg
jb
push
std
in
rorl
sbb
loopne
orl
into
fldl
mov
ja
mov
fiadds
cltd
xor
bound
dec
into
cmp
jl
data16
aas
push
mov
stos
icebp
cwtl
leave
test
xor
aaa
jecxz
cmp
sbb
xchg
and
in
sbb
mov
out
mov
mov
pop
adc
adc
inc
hlt
adc
scas
test
scas
aad
pop
jecxz
push
bound
int3
jge
pop
icebp
fxch
cmpsb
outsb
int3
gs
sbb
cwtl
push
mov
stos
test
nop
cmpsl
faddl
sbb
sbb
or
jl
add
and
lcall
dec
or
dec
pop
in
mov
stos
mov
jp
push
psrad
test
outsl
dec
sbb
arpl
and
sbb
or
sti
and
sti
xor
xchg
jne
and
jnp
cmp
jl
jns
lods
in
mov
push
sub
cltd
cmpsb
cmp
xor
outsl
or
test
jmp
pop
adc
inc
scas
xchg
cmp
mov
pop
pusha
mov
adc
push
adc
rorl
mov
xchg
mov
enter
fwait
sbb
pop
inc
shll
adc
fimull
xor
sub
inc
loop
fsubrl
cmp
mov
inc
pop
repz
sti
pop
js
mov
les
add
sbb
and
dec
add
aam
dec
jecxz
push
dec
lea
imul
aam
movb
leave
dec
dec
lahf
fwait
or
and
jl
xchg
cltd
cwtl
pop
fldl
pop
es
xor
es
and
xor
inc
nop
in
aad
ud1
xchg
jmp
fwait
mov
stc
inc
or
roll
enter
cltd
gs
sbb
dec
jnp
fstpl
pop
jno
int3
adc
jge
ljmp
sbb
imulb
insl
sub
mov
cmp
xchg
mov
pop
jae
stos
out
dec
icebp
pop
imul
fs
cmc
mov
mov
adc
aam
pop
enter
cltd
xor
adc
loope
daa
or
sbb
xchg
push
mov
lret
and
push
int3
pop
inc
mov
jmp
and
add
add
test
lahf
mov
pushf
movsb
lea
sbb
test
cmp
insb
iret
shll
stos
hlt
ror
outsl
fwait
cmp
mov
push
das
xchg
dec
in
pop
leave
cmp
cmpsb
dec
lea
fistl
push
mul
int
jle
jne
sub
cli
fnsave
xchg
sbb
pushf
cld
popf
sti
jno
xchg
icebp
push
xchg
sub
pop
inc
add
mov
cmp
lods
aaa
fdivrp
pop
sbb
into
shrl
mov
and
xor
dec
hlt
pop
int
xchg
outsl
pusha
lahf
mov
xchg
inc
xor
inc
sahf
sub
adc
and
fnstcw
or
sub
mov
xchg
pop
cmpsl
mov
add
ss
inc
dec
adc
jmp
inc
iret
lock
cmp
inc
jmp
dec
dec
adc
adc
stos
out
cmp
data16
rclb
arpl
sub
int
xor
gs
sbb
xchg
lret
cmp
add
je
aad
int
sbb
cmpsl
xor
push
test
xchg
mov
fisubrl
xor
sbb
incl
jo
aas
into
aad
xchg
pop
push
insl
movsl
dec
stos
inc
cld
mov
arpl
imul
or
sbb
cmp
mov
outsb
adc
jle
mov
imulb
addr16
in
pop
and
sbb
xchg
inc
jbe
add
cmp
insl
xchg
sbb
xchg
jl
jns
push
dec
push
mov
loopne
les
mov
shl
into
pop
jle
lea
iret
std
cmp
pop
jne
pop
sti
es
mov
aas
dec
scas
leave
mov
add
add
dec
out
aam
adcl
in
mov
mov
cmp
out
pop
dec
push
pop
cmp
into
popf
sbb
insb
mov
mov
adc
sbb
xchg
stos
dec
or
jo
mov
out
push
stos
ja
sub
sar
lods
mov
sub
cltd
lock
or
lahf
mov
mov
cmp
and
pop
lahf
shrb
in
and
aad
fld
bound
push
push
jo
push
cmp
scas
mov
fwait
cli
inc
xor
in
sahf
addr16
sub
das
sbb
outsl
test
movsb
movsb
mov
sbb
jmp
stc
cmp
sbb
push
cmpsb
imul
cs
dec
mov
cld
dec
jne
cltd
insl
dec
mov
inc
lcall
push
lods
aad
pop
mov
and
sbb
push
mov
outsb
dec
mov
lods
jae
lods
jecxz
pusha
xchg
xorl
ja
lahf
fstl
ret
adc
xchg
and
sub
addr16
loop
in
push
leave
shrl
aam
lock
pusha
pop
dec
cli
outsl
fcmovnbe
das
push
stc
mov
das
scas
stc
imul
pushf
mov
xchg
repnz
push
pop
and
push
xchg
das
and
mov
ret
adc
add
pop
in
jp
lret
xchg
leave
daa
xor
mov
sbb
rcrb
std
sub
inc
imul
pop
push
pop
push
movsl
mov
pusha
lahf
jne
sbb
repz
and
inc
in
lcall
je
xlat
mul
and
push
decl
cmpsb
stc
xchg
sbb
leave
sub
mov
movsl
aam
inc
inc
lock
xchg
pop
or
xlat
arpl
pop
sbb
push
or
jbe
out
mov
xor
dec
faddp
stos
rcl
and
and
movsb
jg
aaa
pop
out
dec
fwait
rcl
cltd
stos
or
jnp
aam
xchg
out
adc
mov
xlat
lock
jb
pop
add
cmp
rcr
js
sub
mov
popa
pushf
lcall
mov
popf
pop
dec
dec
jb
mov
inc
jne
clc
jp
xlat
pop
enter
sbb
inc
mov
sbb
cmp
adc
mov
je
xchg
shr
pop
das
inc
psrad
or
pop
std
in
push
loopne
jb
dec
shll
mov
mov
pusha
lahf
mov
frstor
in
push
mov
mov
mov
mov
andl
lcall
push
xor
cli
sub
mov
ret
dec
push
jns
xchg
jno
mov
add
xor
rcrb
inc
adc
push
mov
out
cmp
insb
call
fldl2t
mov
cmc
enter
and
cs
pop
xchg
pop
jns
adc
orl
jo
and
daa
lock
cmp
cmp
adc
pop
rorb
das
or
add
xor
and
stc
test
xlat
or
mov
pusha
push
imul
jle
xor
lods
nop
orb
push
shl
mov
sbb
dec
sub
xchg
sub
mov
addr16
mov
nop
and
test
loopne
out
xor
iret
and
test
movsl
add
fmuls
dec
in
or
jno
xchg
les
xor
jl
or
cltd
push
cmp
idivl
dec
xor
pop
lahf
sub
xor
decl
pop
pop
repz
jns
lea
fdivr
mov
cwtl
xor
pop
cwtl
inc
in
push
jb
dec
xchg
int3
cmp
sub
lcall
mov
ficoml
mov
lds
test
pushf
sub
jbe
inc
adc
jge
filds
push
adc
cmp
dec
icebp
pop
push
inc
cmp
shll
fsts
jno
pop
aad
inc
sub
pop
jns
mov
dec
push
xor
sbb
mov
pop
xor
lea
jae
ret
fdivs
hlt
andl
fdivrl
test
push
dec
dec
pushf
into
dec
mov
mov
in
movsb
mov
mov
repz
imul
sub
out
pop
aas
sbb
callw
call
jae
xchg
sahf
xlat
testl
dec
test
int
ljmp
sub
push
loopne
arpl
hlt
xor
fsubrl
mov
mov
push
mov
ds
mov
roll
and
popf
inc
mov
lea
or
sub
inc
jp
and
stc
fucomp
pop
sub
sti
movb
xor
adc
xlat
sbb
lock
jnp
scas
cld
xor
inc
push
mov
sub
pop
fiadds
out
cs
cmpsl
sub
jge
mov
stc
push
jge
lods
mov
imul
pushf
test
pop
adc
mov
popf
nop
mov
arpl
aas
clc
or
mov
dec
arpl
test
jb
insb
icebp
push
or
jbe
pop
jns
shl
call
js
in
jge
aad
clc
or
or
mov
sbb
or
cmc
jcxz
push
dec
sbb
xor
jno
mov
dec
iret
dec
imul
sub
adc
pop
add
cwtl
insb
push
es
mov
mov
out
sbb
push
in
arpl
loope
and
cmpsb
test
faddl
bnd
mov
mov
xchg
add
inc
pop
int
push
push
mov
scas
mov
lret
pusha
inc
push
mov
jle
pusha
jb
aad
pop
js
mov
loop
cld
out
xchg
pushf
push
mov
jg
test
add
pop
out
repnz
mov
cmp
stos
mov
sahf
pop
or
rcrb
pop
mov
or
inc
test
je
jne
aam
mov
mov
ret
mov
pop
or
xlat
movsb
fsubrp
mov
inc
mov
lcall
mov
xchg
icebp
inc
mov
pop
daa
mov
ljmp
and
and
mov
sbb
mov
add
mov
or
xchg
lock
jo
push
in
push
mov
fisubl
mov
push
adc
cmp
sub
inc
mov
inc
int3
shlb
mov
testb
fidivrl
test
push
lcall
loope
mov
and
dec
jbe
popf
mov
xor
sbb
enter
movb
test
and
xchg
push
push
jmp
mov
xchg
push
jmp
mov
mov
sbb
test
int3
inc
sbb
nop
lret
gs
mov
inc
out
test
subb
adc
leave
cmp
jl
or
ss
or
movsb
stos
lret
push
mov
ja
or
dec
adc
shlw
or
sub
xorb
cmp
ret
or
mov
jo
xchg
cmp
clc
dec
aad
and
dec
fnstcw
mov
push
ret
bound
pop
xchg
xor
imul
movntps
pop
and
inc
icebp
sub
lea
cmp
movsl
aaa
adc
pop
daa
xlat
in
icebp
inc
insb
or
and
pop
aad
test
add
hlt
mov
sbbl
dec
imul
stos
mov
cmp
adc
mov
daa
mov
dec
or
aam
aad
jb
fdivr
adc
fs
mov
nop
cmpsb
inc
add
sbb
mov
jmp
pop
adc
adc
inc
int
fwait
inc
push
mov
lds
xchg
out
xchg
mov
add
pop
sub
pop
mov
iret
insl
adc
inc
pop
loope
mov
inc
repz
out
out
jl
popa
inc
xor
les
aas
push
arpl
enter
mov
mov
aad
push
les
test
push
lock
fs
popa
fsubrl
divb
cmp
mov
lret
and
dec
nop
inc
xchg
xor
shlb
dec
mov
and
or
pop
repnz
leave
ror
inc
popf
sbb
call
addb
mov
loope
int
jge
jp
xor
or
loopew
add
pop
les
outsb
xchg
mov
sbb
mov
enter
mov
hlt
stos
push
mov
out
jae
cmp
dec
dec
and
sub
lea
cmp
xor
xchg
jo
imul
ljmp
jmp
pop
mov
xchg
int3
rcl
or
xor
mov
fbld
push
cs
icebp
in
sahf
mov
push
lods
ret
sub
iret
fiadds
imul
dec
daa
dec
mov
jb
sarb
jmp
fildl
sub
stc
addl
js
sub
popa
xchg
push
fisttpll
rcl
aad
lahf
jg
sub
jl
cmpsb
or
mov
inc
mov
imul
sub
or
adc
clc
in
jnp
insb
mov
inc
lock
mov
test
int
mov
jmp
and
lds
jno
push
stos
pop
add
mov
in
pop
out
arpl
inc
outsb
jl
icebp
sahf
inc
ss
notb
mov
jo
fmuls
addr16
xchg
std
out
sbb
repz
or
in
pop
mov
jae
ss
sbb
inc
add
dec
mov
popa
btc
mov
xor
cmp
inc
outsb
or
je
mov
ret
dec
repnz
cmc
nop
push
push
jnp
jle
test
lret
fstpl
dec
pop
inc
adc
repz
loop
push
ja
daa
mov
dec
test
push
insb
mov
mov
xor
jne
push
test
enter
int
sub
dec
stos
test
pop
sti
or
dec
sarl
rorl
imul
xlat
icebp
in
outsl
cmpsl
fisttps
adc
outsl
add
rolb
or
sbb
cltd
adc
push
jp
fistps
push
xor
roll
pop
lods
into
mov
movsl
mov
adc
cmp
adc
fnsave
push
mov
dec
or
loop
adc
loope
dec
popf
push
andl
decl
mov
int3
pop
sahf
pop
mov
js
es
mov
sahf
leave
and
ret
mov
push
in
sarb
enter
jge
mov
movsb
add
xor
ljmp
sub
xchg
cmp
cmp
jg
sbb
pop
pushf
jp
enter
popa
push
xchg
ss
mov
add
cltd
mov
dec
lea
incl
jmp
cmp
or
pop
inc
fucomi
lahf
clc
or
in
or
sti
sub
add
scas
and
cmp
adc
mov
dec
add
lret
int
lret
mov
int
clc
popf
inc
test
lods
aaa
ds
rcrl
pop
mov
jbe
jns
int
ktestw
jmp
iret
adc
faddl
sahf
xor
nop
mov
enter
adc
dec
imul
rclb
cmp
ret
pop
aad
arpl
xchg
clc
dec
fcoms
dec
arpl
pushf
jge
jb
imul
jns
sbb
or
inc
scas
out
sub
pop
stc
ret
push
stc
adc
ficomps
insb
das
jno
int3
xor
xchg
xor
mov
xchg
and
bnd
jmp
roll
push
pop
mov
out
xchg
int3
daa
inc
sbb
mov
push
xor
adc
xlat
pop
popf
lcall
movsb
lods
mov
lds
jbe
add
in
jmp
xchg
and
negl
mov
mov
out
xlat
outsb
xchg
jmp
mov
pop
add
das
inc
xor
negb
aaa
daa
aad
mov
mov
mov
cmp
jb
cld
jg
ljmp
imul
dec
push
scas
sub
dec
imul
pusha
out
pop
subl
sahf
pop
pop
mov
mov
fsubrl
xchg
cmpl
dec
push
jmp
dec
push
jl
sbb
push
jae
mov
loopw
fnstcw
sub
push
add
pop
inc
jp
dec
mov
adc
int3
sbb
push
rcrb
outsl
daa
push
jb
repnz
and
aas
mov
call
into
adc
lcall
push
push
cmp
sbb
or
mov
pop
xlat
sbb
cwtl
sub
add
cs
cli
daa
scas
insb
mov
mov
fs
push
sub
cmpsl
sub
mov
mov
rcll
add
ljmp
inc
jp
push
leave
fldl
ret
mov
sub
ret
popf
das
jle
cmp
testb
dec
dec
jbe
icebp
xchg
xchg
test
scas
inc
sub
outsl
mov
insb
cmpsl
popf
cs
in
cltd
mov
mov
in
fisubs
lahf
inc
shll
xchg
xchg
les
inc
mov
mov
out
mov
fstps
rcl
cmp
xchg
push
std
daa
dec
add
lret
addr16
rorl
push
ficomps
pop
dec
loope
pop
pop
imul
push
adc
inc
add
and
lds
aad
mov
push
mov
pop
add
cwtl
or
pop
sbb
ljmp
push
ja
jno
xor
push
inc
push
sbb
or
mov
stos
js
cmpsb
push
push
cmp
jne
lea
ret
cmpsl
cmp
mov
cmc
xchg
adc
jae
cmc
insl
sub
adc
push
mov
stos
out
xchg
negb
popa
adc
xchg
testl
shl
inc
mov
testl
pop
push
data16
and
fst
stos
rcrl
mov
jl
gs
imul
movsb
sub
lahf
test
push
lods
mov
push
mov
movsb
int
mov
sub
js
xor
mov
push
nop
mov
loopne
popa
and
loop
ljmp
in
push
jmp
jne
xor
xor
test
pop
mov
inc
shr
mov
pop
cmpsb
inc
in
sbb
popf
das
daa
dec
test
xchg
scas
inc
jnp
test
test
jge
adc
mov
pop
shll
sbb
dec
lcall
in
or
loopne
cmpsb
and
dec
ret
push
adcb
imul
lods
push
mov
leave
push
mov
add
cmpsl
mov
cmpsb
decb
add
jmp
testl
sbbb
lds
insl
push
dec
or
fstpl
sbb
lea
test
push
or
jmp
lcall
in
out
or
cli
jbe
cmp
test
sar
mov
fwait
enter
fs
loopne
insb
pop
sbb
mov
push
mov
fnsave
sbb
insb
inc
mov
sahf
cmp
int3
add
sbb
ss
aas
repz
leave
cmpsl
loope
mov
jbe
pop
pop
out
dec
sbb
leavew
out
cmp
mov
mov
and
adcl
cmc
xor
addr16
dec
lcall
mov
sbb
das
mov
push
and
test
jg
jb
mov
cmp
inc
icebp
inc
pop
lcall
pop
adc
and
inc
sti
repnz
fwait
pop
out
rcll
adc
push
jmp
sub
and
shr
xchg
call
mov
mov
out
jns
out
cmp
shlb
xlat
in
xchg
sahf
mov
insl
rcr
iret
or
mov
add
loop
push
mov
sbb
mov
cmp
call
push
or
sarl
aas
cmp
insb
aas
xlat
adc
stc
cmpsl
leave
outsl
jnp
pop
mov
pushf
push
and
leave
cmp
pop
and
jle
cmc
and
ret
out
mov
lods
loopne
popa
and
mov
pop
mov
cwtl
lods
sbb
out
adc
loop
sbb
repnz
pop
mov
call
daa
mov
jb
mov
xchg
add
push
faddl
xchg
sub
bound
int
mov
jne
sahf
sbb
or
jo
sbb
push
popf
sbb
xchg
jecxz
insl
nop
mov
aad
icebp
outsb
shlb
add
pop
adc
mov
sbb
cmp
std
into
cwtl
ret
sbb
fabs
sbb
mov
insb
add
inc
cmpsb
lcall
push
inc
inc
std
popa
orl
stos
in
iret
iret
rclb
and
cld
repz
xchg
je
sbbl
pop
lock
sub
add
arpl
jns
xor
mov
xor
mov
or
jecxz
inc
jbe
aaa
sub
xlat
movsl
jns
repnz
fmuls
pop
out
or
ret
jmp
xchg
cmp
and
add
es
and
je
popfw
lea
inc
scas
outsl
je
mov
shl
or
sahf
xor
cmp
lea
or
mov
xorl
and
dec
leave
dec
cmp
or
ret
jne
clc
lret
cli
push
xor
aas
rcrl
addr16
xchg
xorl
bound
loope
mov
sub
xor
adc
test
pop
add
xlat
das
pop
data16
jns
in
lods
int
jg
outsl
lods
iret
xor
es
imul
inc
sub
sbb
and
fwait
adc
testl
adc
mov
pop
imull
add
xor
cltd
mov
rcrb
fsts
dec
xlat
mov
push
xchg
or
nop
adc
mov
add
pop
jno
lahf
outsl
popa
cmpb
jae
dec
les
dec
mov
rclb
and
xchg
and
jg
inc
sbb
pop
subb
hlt
sbb
in
cltd
fwait
inc
sbb
mov
mov
xor
mov
stc
mov
stc
or
adc
loop
xchg
pop
cmp
and
jmp
test
and
scas
dec
xchg
test
pop
cmp
imul
pusha
sub
xchg
in
push
xchg
sub
jl
pop
jnp
pop
shll
clc
stc
fsubs
sub
fidivs
mov
fldcw
jp
popa
jmp
leave
imul
xor
jg
ljmp
cmpb
push
adc
fidivrl
push
ljmp
sarl
sbb
adc
ds
les
insl
cmp
imul
pop
dec
add
mov
lcall
je
in
or
loop
lcall
test
push
push
in
test
jns
add
inc
pop
xlat
push
add
aad
pop
xor
mov
clc
mov
cmp
cld
mov
ljmp
out
or
repnz
xor
aaa
add
aas
pop
ret
insl
nop
daa
push
leave
mov
cmp
ret
aas
mov
inc
sub
mov
and
xor
add
jmp
subb
add
imul
xor
xchg
push
jo
popf
pop
add
jb
and
xchg
ret
push
inc
xchg
adc
sbb
inc
push
stos
das
xor
xor
lcall
cmp
stos
mov
xor
cs
sbb
sbb
int3
add
xchg
mov
xor
and
test
ljmp
jno
vmwrite
popf
out
addr16
pop
sti
lret
dec
push
mov
fcmovnu
loop
mov
adc
cvttps2pi
repnz
jp
xlat
shrb
pop
repz
out
push
mov
ja
sbb
mov
push
js
inc
cmp
xchg
dec
pop
lcall
repz
pop
imul
fwait
out
push
aas
imul
pusha
es
push
sbb
mov
sub
gs
xchg
out
adc
call
pop
mov
stc
fldenv
cmpsl
jge
push
add
les
or
call
subb
bound
sbb
cmc
xlat
jmp
stos
or
out
push
cs
adc
push
jge
arpl
or
nop
xor
inc
mov
test
cmc
mov
pop
sbbb
gs
out
ljmp
cmp
fidivrs
arpl
repz
cltd
jae
outsb
sbb
aad
imul
popa
sbb
xor
dec
pause
or
xor
jecxz
stc
mov
fadds
xchg
sub
adc
xlat
enter
repz
pop
fdiv
sbb
decl
test
shll
shll
push
inc
imulb
int3
jns
jns
push
mov
dec
push
push
arpl
js
mull
jns
sarb
outsb
xor
cmp
mov
push
dec
inc
cwtl
sbb
sub
xor
xchg
jne
sub
cmp
icebp
pop
fimuls
xchg
inc
push
stc
or
jne
jne
pop
fwait
mov
ljmp
and
lock
mov
xchg
xchg
dec
xlat
test
dec
pop
gs
push
push
xor
cmpsl
push
rcrb
dec
add
mov
xchg
in
pop
stos
adc
aaa
dec
push
std
ds
xor
or
insb
fistl
fimull
lods
loopne
sbb
jnp
movsl
in
cmp
dec
push
out
add
insb
rolb
jno
pushf
cmp
jb
xor
xchg
sbb
dec
fdivl
cmpb
andb
es
mov
or
push
xchg
test
outsb
cld
mov
sbbl
je
mull
adc
ljmp
jb
jae
sbb
cmpsl
dec
call
jmp
sub
ljmp
fs
xchg
adc
mov
dec
out
inc
cmp
inc
mov
mov
or
out
retw
inc
xor
inc
movb
mov
scas
cs
test
repnz
in
gs
xchg
in
sbb
int
aaa
adc
push
loop
jl
mov
fcmovnbe
popl
inc
jge
stos
rcrb
in
xor
mov
fcomi
push
or
push
jge
cltd
jl
test
xor
push
bound
push
sbb
nop
les
jge
ljmp
mov
out
js
push
loope
repnz
fs
dec
push
repnz
lock
lods
cli
ss
dec
and
mov
or
leave
pop
xchg
sbb
test
mov
push
dec
daa
fsubrl
mov
ret
insl
pop
sub
clc
lock
fst
shll
push
push
xor
and
loopne
cs
jo
or
push
adc
daa
iret
mov
cli
dec
cmpsb
add
add
xchg
cli
mov
mov
xor
fldl
adc
outsb
push
inc
jo
movl
stos
and
andl
cs
mov
mov
repz
cld
out
int
cld
dec
pushf
icebp
xor
scas
pop
xlat
adc
mov
adc
ja
mov
popl
mov
stos
stc
mov
and
mov
pop
clc
lcall
add
jecxz
push
pop
mov
jmp
push
je
outsl
xor
out
push
movsl
cmp
mov
fs
xchg
popa
faddl
hlt
cwtl
cmp
sub
das
daa
push
cmpsl
cli
or
mov
iret
popa
sahf
mov
sbb
xchg
inc
mov
loope
in
fimull
aaa
mov
push
das
sub
icebp
dec
dec
dec
shrb
hlt
punpcklwd
popa
addr16
jns
icebp
bound
js
sub
bound
ror
xor
nop
or
sahf
and
loope
mov
mov
mov
xchg
jno
testb
xchg
gs
ljmp
lret
rcr
loope
sub
leave
mov
stos
push
jo
test
lcall
mov
xchg
pop
lods
pop
sbb
cmpsl
scas
rcll
mov
iret
daa
fmuls
fmulp
clc
inc
push
filds
mov
add
aam
bnd
pop
in
hlt
and
int
std
addb
or
pop
dec
or
push
mov
stc
popf
and
stos
icebp
rep
cmp
cld
mov
inc
pop
push
dec
loopne
mov
fistpll
adc
xchg
add
push
ljmp
int3
nop
pop
adc
or
pop
xchg
lods
int
mov
jns
ljmp
mov
jns
or
jns
call
popf
pop
call
loope
xchg
mov
popa
adc
call
in
and
xorl
sbb
pop
mov
add
push
xchg
jnp
mov
imul
insl
dec
adc
xor
mov
ljmp
push
ja
std
mov
adc
insb
popf
adc
jmp
xor
jno
or
jno
cmp
jo
or
out
aaa
shlb
add
jl
or
call
dec
mov
mov
pop
sbb
aam
pop
push
imul
inc
lods
lret
gs
fdivl
mov
mov
inc
and
test
sahf
sbb
add
pop
push
ret
aad
push
jecxz
in
mov
pop
mov
dec
push
sub
out
push
out
sbbl
or
mov
add
inc
mov
pop
lcall
mov
mov
xchg
mull
outsb
pop
insb
cmp
sbb
jbe
adc
cmpsb
insb
jl
push
popf
jl
add
in
rcl
shll
pop
mov
fcmovb
and
in
pop
xchg
xchg
insb
sbb
aam
add
ret
xor
into
cmp
mov
sub
and
xlat
loop
cld
or
mov
push
orl
aas
mov
lds
fdivrs
aas
pop
cmp
mov
std
pusha
in
dec
dec
xor
or
jecxz
add
leave
mov
adc
dec
adc
mov
ja
mov
je
mov
xor
cmpsb
in
loope
mov
mov
das
decl
lret
push
adc
dec
insl
loope
stos
sahf
inc
rorl
sub
jo
pop
pushf
jns
xchg
adc
jo
mov
sbb
aad
inc
jp
dec
imul
les
pushf
or
mov
daa
jle
mov
out
into
dec
test
arpl
adc
pushf
int
adc
xchg
mov
xor
shlb
jnp
pop
and
add
xor
mov
popl
sahf
pushf
aad
fs
stc
lods
pop
in
push
fdivl
call
mov
sbb
mov
fadds
js
cmp
pop
stos
aas
sbb
mov
aam
test
dec
addb
in
jp
arpl
aam
sbb
je
jmp
aad
sub
mov
push
xor
jmp
fildl
mov
cmc
jmp
inc
rcl
xchg
jmp
scas
mov
adc
cs
fcomip
fwait
loop
xlat
mov
and
stc
shll
test
pop
cmp
cli
js
push
cmpsb
mov
jbe
sub
enter
sbb
jecxz
jb
ret
pop
daa
xchg
push
mov
jmp
mov
mov
mov
int3
inc
scas
dec
or
out
incb
mov
stos
rclb
mov
cmpsl
stc
rcll
jge
mov
in
lret
mov
cmp
gs
popa
xchg
and
mov
inc
cmp
jo
fldt
jo
icebp
ret
jp
test
mov
xlat
fdivrs
imul
ljmp
mov
mov
rclb
dec
fiadds
mov
std
test
push
xor
add
jnp
mov
dec
ret
enter
mov
loopne
ljmp
jmp
lock
lods
sbb
xchg
es
mov
jne
lret
and
cwtl
add
repnz
mov
lcall
or
int3
fbld
dec
inc
test
jp
orl
mov
loope
in
jae
out
scas
sub
add
out
jbe
sub
mov
scas
pop
pop
sub
jecxz
sbb
push
cltd
jle
inc
fisubl
mov
es
ficomps
push
inc
adc
cmpsl
iret
mov
ss
mov
aam
jnp
jae
dec
ljmp
loopne
fadd
add
scas
addr16
xor
out
aas
repz
std
or
adc
scas
lods
adc
sub
nop
cltd
xchg
push
or
and
xchg
movsb
lret
mov
ljmpw
aam
adc
or
cmpsl
mov
fwait
imul
or
out
leave
scas
fcoml
cld
cwtl
dec
adc
mov
in
xor
aam
adc
cmp
and
test
mov
dec
push
mov
loop
sub
test
rcrl
aaa
ret
jmp
out
cs
jle
add
int
aam
jne
out
or
out
xor
fmull
adc
jecxz
push
mov
add
test
arpl
adc
mov
push
push
mov
sbb
mov
out
in
sub
inc
test
push
mov
mov
sub
mov
icebp
pop
mov
out
iret
jo
mov
or
js
imul
mov
dec
leave
ds
xchg
fstps
out
and
daa
lret
stos
mov
loopne
lods
aam
push
inc
pop
test
fmulp
addl
sub
add
adc
shrb
ret
jl
jmp
rcrl
loope
cmp
and
mov
into
test
mov
mov
add
xorb
aad
jno
cmp
inc
or
icebp
dec
xor
sarl
xchg
jle
insb
das
cmp
or
xchg
pop
inc
loope
sbb
jecxz
popa
lods
sub
fistpl
xchg
gs
or
out
push
js
shlb
mov
xor
sub
xchg
and
add
xchg
push
scas
fs
push
cmc
mov
int3
pop
xor
flds
imul
adc
outsb
pushf
ja
je
icebp
inc
pop
inc
aas
sahf
ljmp
jge
push
push
ss
lret
dec
stos
sahf
mov
es
add
jmp
cltd
fwait
jb
dec
stc
loop
fcoms
loop
popa
daa
mov
mov
leave
pop
stos
das
xlat
xchg
mov
sbb
or
pop
das
shl
push
mov
cmpb
js
int3
mov
inc
ret
pop
sub
cmpl
xchg
lods
popa
sbb
fcompl
int
xor
mov
or
mov
push
imul
in
mov
fdivrl
mov
cmp
add
jo
sahf
inc
xor
out
adc
cltd
xor
cmc
xchg
inc
ds
ljmp
cmpsl
jne
movsb
adc
dec
cmp
das
pop
inc
test
ljmp
inc
or
jo
push
pop
pop
or
and
and
aas
daa
cs
stc
test
loope
inc
or
arpl
push
sbb
negb
sarl
sbb
popf
popf
mov
popf
notl
aam
ret
xchg
mov
sub
inc
push
gs
outsb
rclb
outsb
pop
es
xor
jle
dec
lahf
dec
cltd
cltd
movsb
mov
pop
fidivrl
insl
push
sub
repz
lcall
push
lock
lods
inc
stc
mov
in
loope
inc
ljmp
mov
mov
xor
in
or
lret
lea
mov
mov
push
clc
xchg
inc
xlat
sbb
and
sub
xor
cwtl
xlat
mov
jae
popa
adc
jae
mov
ss
inc
lret
and
jae
fwait
in
jp
dec
xchg
jae
sbb
insl
popa
cmc
sahf
cltd
fidivl
aaa
pop
ljmp
mov
shll
and
ret
and
rclb
mov
inc
test
fbstp
inc
roll
mov
jp
stc
pop
jle
mov
adc
or
xor
xchg
outsl
mov
inc
or
sub
in
or
sub
repz
adc
mov
rol
out
xor
inc
aas
mov
mov
dec
adc
push
adc
shl
pusha
test
mov
push
mov
imul
pop
jp
test
ja
push
mov
push
push
push
in
lods
mov
adc
pop
push
mov
cli
sbb
cmp
mov
lds
adc
dec
hlt
dec
scas
into
push
cltd
cmp
outsl
xchg
scas
lods
xchg
neg
xchg
out
push
and
inc
push
and
stos
push
jl
out
lods
mov
clc
sbb
nop
xchg
mov
push
cmp
pop
mov
mov
mov
push
pop
scas
outsb
push
faddl
test
imul
popa
negl
mov
jp
ja
adc
pop
pop
ja
hlt
fmulp
fdivs
mov
adc
push
and
dec
inc
jmp
icebp
sti
fmulp
or
push
mov
fiadds
xchg
adc
xor
sub
test
and
adc
push
adc
mov
lret
into
jmp
or
lcall
daa
fiaddl
jbe
ss
lcall
pop
cmpsl
mov
sbb
pop
jmp
push
mov
into
push
sub
sub
push
or
dec
pop
jl
jecxz
enter
lods
aad
lods
and
dec
jle
in
dec
add
xorl
inc
nop
sub
pop
xor
sbb
cltd
outsl
ss
push
xor
mov
mov
mov
jl
pop
scas
fistpll
scas
les
mov
xlat
cmpsl
inc
xrelease
nop
stc
jo
jne
ret
aam
or
jo
sub
rcl
cmp
jmp
add
scas
inc
mov
movsl
mov
js
push
mov
icebp
push
jp
pop
jnp
out
pop
orl
sub
mov
adc
inc
push
jb
jb
pop
jne
ret
pop
and
jp
adc
adcl
sti
mov
add
lcall
cmp
fsts
lret
enter
dec
ret
xchg
or
sub
jae
adc
sub
pusha
adc
stos
fcmovne
xchg
add
push
jg
mov
pusha
call
and
mov
xchg
sbb
mov
psubusb
enter
std
or
sbb
sub
xor
sbb
mov
outsb
add
mov
movsb
adc
xor
pop
shrb
mov
mov
loop
into
sub
mov
cmpsb
adcb
data16
insb
jne
daa
js
aas
or
push
je
adc
push
test
pop
mov
insl
cmp
repnz
test
movsl
dec
sbb
daa
mov
jo
std
fwait
push
mov
ficompl
mov
jecxz
push
cmp
pusha
insb
lahf
js
push
mull
in
es
mov
push
cmp
xchg
dec
push
cmp
inc
inc
mov
push
out
and
fs
aaa
add
rcll
xor
lret
and
insb
dec
outsb
jnp
jp
imul
cmp
jmp
jl
jnp
jp
and
lahf
icebp
pop
sub
test
jecxz
out
xchg
retw
je
sbb
je
sub
iret
adc
sbb
xor
inc
aam
sub
pop
test
sub
mov
push
sub
dec
mov
mov
shrl
es
in
cwtl
xor
cmp
rcrb
push
mov
adc
dec
mov
cmp
and
mov
mov
jo
hlt
xor
mov
jne
lret
ja
repz
aad
pushf
movsl
mov
insl
cmp
and
outsl
sub
arpl
js
sbb
inc
and
lcall
xchg
pop
xchg
pop
jp
je
or
mov
loope
adc
add
cld
lret
adc
bound
mov
inc
scas
inc
out
push
scas
inc
xor
sub
lahf
cmp
out
jecxz
or
jo
sbb
in
cmp
add
fiadds
add
icebp
add
mov
sub
inc
sahf
addr16
out
jno
jecxz
inc
fisttps
arpl
aam
ret
int3
and
shr
pop
cltd
cmpl
add
imul
or
mov
sub
mov
lret
xor
inc
mov
faddl
dec
mov
sbb
stc
add
dec
mov
shlb
inc
ret
pop
sbb
loope
data16
stos
and
or
lock
dec
imul
jp
in
imull
stos
sarb
lahf
sub
add
add
cwtl
pop
pop
xor
pop
data16
mov
in
mov
arpl
jo
pop
into
dec
loop
scas
add
dec
xchg
cs
lds
push
dec
cmp
scas
fdivrl
fs
mov
push
dec
aas
movsl
movsl
jmp
cwtl
ret
das
xor
mov
push
out
add
loopne
shll
arpl
fistpl
dec
pop
imul
xor
mov
imul
pushf
push
ss
js
dec
pop
mov
add
and
sub
sbb
jp
pop
mov
inc
and
or
xor
sub
jle
add
mov
dec
pop
cltd
imul
js
sub
jne
and
testl
pusha
sub
decl
mov
stc
jmp
pop
ds
mov
cwtl
or
add
enter
gs
inc
lods
bound
sub
js
cmp
clc
mov
shll
stc
enter
push
lret
iret
fildll
add
hlt
in
or
pop
mov
mov
aam
xlat
gs
stos
push
mov
push
insb
add
cs
out
cmp
adc
push
xor
mov
mov
das
xor
fnsave
pop
movsl
gs
push
outsl
sub
lahf
or
cmp
pop
adc
mov
adc
nop
push
lretw
stc
jnp
mov
loop
cmpsl
push
jecxz
in
mov
sub
gs
xchg
movsb
pop
mov
xor
mov
mov
repz
inc
xor
lock
xchg
orb
mov
mov
lcall
xor
lods
mov
in
add
aaa
and
push
push
mov
mov
push
xchg
fs
push
divl
mov
push
pop
scas
mov
add
push
inc
stos
data16
pop
push
lret
and
inc
cmc
push
repnz
push
sub
xchg
add
mov
loopne
ds
bound
dec
enter
or
rcr
popa
enter
enter
mov
xorl
lret
int
jg
mov
adc
ja
in
push
cld
fsubrs
stos
push
cmc
data16
and
and
mov
lret
ret
lret
dec
mov
in
sbb
add
scas
clc
pushf
ja
add
pop
mov
xchg
subl
jnp
lea
daa
insb
push
lret
mov
popa
push
or
js
test
cmp
cmp
cmc
mov
movsb
pushf
mov
jb
push
mov
fdivrs
addr16
add
sub
stc
mov
and
in
ss
mov
push
xor
mov
dec
incl
mov
cmpsl
push
shlb
adc
and
lods
aad
rcl
sbb
stos
pusha
and
mov
lods
and
outsb
scas
xchg
or
pop
sbb
les
dec
lahf
inc
movsb
adc
movsb
repz
adc
std
inc
pop
aam
bound
fs
outsl
addr16
movsb
pusha
das
inc
xchg
sbb
and
arpl
mov
int
int3
mov
add
frstor
mov
and
xor
in
pusha
xacquire
adc
scas
daa
push
sbb
xchg
adcl
cld
fwait
sbb
jecxz
dec
push
inc
mov
fdivl
fisubrl
mov
lahf
out
pushf
in
sub
aam
mov
popa
mov
outsl
push
inc
fcoms
fisubrs
jl
enter
mov
push
insb
and
and
xor
in
andb
push
lds
cmp
hlt
pop
mov
push
xchg
je
lret
cld
or
iret
push
jge
cld
in
sbb
imull
fnstenv
insl
cmpl
movsl
stos
lcall
adcb
lock
out
cltd
inc
testl
cltd
stos
jb
xor
ret
jae
testb
shlb
xor
clc
inc
cs
and
inc
test
stc
inc
inc
shrl
test
dec
sub
adc
inc
icebp
stos
inc
xor
jns
incl
mov
mov
jns
ret
scas
fstpt
bound
pop
mov
shlb
jmp
sbb
cli
add
hlt
lcall
add
xor
mov
stc
mov
aaa
cmp
mov
add
shrl
add
mov
jmp
int3
dec
mov
andb
fisttpll
je,pt
sbb
mov
scas
pop
clc
mov
sub
push
cltd
mov
push
jo
add
cmp
dec
push
cmpsl
aad
cltd
jl
add
push
fldl
movsl
std
push
dec
into
cld
subl
gs
inc
je
imul
inc
dec
pop
gs
mov
loopne
icebp
fimull
inc
fucomi
jmp
cmpsb
jae
in
jno
outsb
int
mov
adc
int3
mov
and
sub
xchg
aaa
or
cmp
daa
push
subb
xor
push
and
aaa
jae
pop
add
cmp
cmp
ror
sub
pop
js
hlt
xor
aaa
loop
popf
sub
xabort
clc
insl
lahf
pop
mov
sub
mov
repz
inc
dec
dec
jmp
add
data16
fstpt
lods
clc
sbb
jmp
jg
pusha
inc
mov
jmp
jmp
jbe
mov
mov
jl
int
test
cmpl
int3
imul
loope
inc
adc
negl
xlat
and
xchg
push
inc
cld
jle
fidivrs
in
adc
jp
mov
mov
jmp
mov
icebp
or
xchg
sti
pop
mov
in
js
xor
dec
test
flds
lret
sub
sbb
pop
cltd
dec
es
xchg
insl
sbb
xchg
inc
add
cmp
pop
hlt
push
imul
add
mov
sub
push
add
sub
popf
call
or
int
push
in
int
enter
mov
or
dec
mov
sarl
sub
xor
add
loopne
sub
and
and
test
adc
push
xor
and
push
movsl
xor
out
and
push
ss
idivb
rol
cltd
out
mov
jl
lods
leave
cld
cmp
dec
cmp
int3
jne
xor
dec
scas
xchg
mov
pop
lods
test
pop
ja
pop
lds
scas
or
lret
rep
push
mov
xchg
push
in
jp
stc
or
adc
les
out
es
das
daa
sbb
daa
lds
sbb
xor
fimuls
das
sub
xchg
test
int3
div
xchg
or
leave
rorb
and
dec
arpl
out
rolb
sbb
jne
mov
outsb
cmp
xchg
sahf
aaa
aad
fdiv
sbb
test
adc
xchg
push
adc
ret
scas
push
pop
inc
xchg
cltd
sti
mov
out
pop
stc
aas
jae
push
aam
jecxz
mov
push
fcompl
inc
xchg
out
negb
pop
in
in
cmpsb
inc
cmp
jmp
aad
jp
insl
outsl
mov
xlat
int3
mov
adc
stos
fsubp
sbb
push
popl
lock
dec
sub
cmp
mov
xlat
ljmp
outsl
push
mov
fsubp
push
sbb
xchg
mov
push
lea
or
outsl
testb
dec
inc
jl
xchg
div
push
inc
or
mov
out
ja
or
xchg
cmp
xor
psubsw
mov
and
mov
std
push
out
jae
fdecstp
mov
push
jnp
xchg
out
scas
movsl
fs
jge
int
mov
test
push
pusha
arpl
in
dec
sub
das
dec
and
or
cmp
cwtl
adc
jle
stc
outsb
iret
stos
dec
mov
push
outsl
lret
mov
mov
xchg
jg
lret
lahf
push
mov
jbe
dec
mov
pop
inc
jle
push
lock
push
jb
mov
sub
orl
mov
xchg
mov
dec
ret
les
push
xchg
rclb
out
test
rclb
fldenv
xchg
dec
out
popl
cwtl
xchg
hlt
pushf
sahf
sub
addr16
rcrb
add
lret
mov
aas
mov
sub
push
xchg
es
lahf
outsb
sub
pop
adc
jge
mov
frstor
cmpsb
test
jbe
imul
sbb
ret
mov
xchg
pop
hlt
mov
sbb
enter
outsl
xor
bound
dec
add
push
rcrl
in
or
pop
push
dec
jbe
mov
das
test
mov
xor
js
repz
adc
adc
mov
mov
popf
add
dec
adc
xorl
xor
scas
outsl
pop
cmpsb
mov
push
push
xlat
fstl
mov
out
lds
sbb
decl
push
enter
dec
pushf
pop
sbb
or
cmc
mov
outsl
cmpsb
and
enter
add
ds
out
je
lds
mov
lock
test
jl
test
mov
inc
idivl
rorb
fs
sbb
cli
mov
jo
pop
jnp
xchg
add
data16
ret
lahf
fisttps
push
fldt
ds
cmp
xchg
xchg
std
add
shll
mov
jp
std
arpl
fcmovb
sbb
cld
cmpl
sti
xchg
pop
and
mov
leave
dec
hlt
fistps
mov
sarl
xchg
xor
int
popf
test
cmp
ret
dec
iret
cs
adcb
es
push
sbb
jp
mov
icebp
cs
and
push
test
fstps
xor
xor
imul
call
mov
hlt
popa
xor
mov
shlb
leave
loop
push
test
sbb
push
push
cmp
xlat
jbe
mov
cmp
or
loope
lds
imul
in
call
fcomps
lcall
pop
add
xchg
add
fcompl
pushf
popf
sbb
fistps
sti
ljmp
testl
and
jg
lods
push
jno
mul
mov
cmp
jb
int
push
mov
cmpsb
js
cmp
test
aam
pushf
fld
outsb
lock
adc
add
dec
mov
or
negb
fsubs
mov
adc
xchg
xor
imul
add
mov
sti
xchg
call
cmp
movsl
lock
pop
sub
xchg
mov
cli
bound
shll
ss
imul
or
sbb
adc
rorl
mov
xlat
mov
jae
cwtl
mov
mov
mov
cmp
xlat
test
sti
push
insl
imull
fwait
xlat
mov
adc
jecxz
in
ret
jge
addb
pop
dec
sarb
jns
les
adc
sub
test
mov
push
adc
arpl
adc
and
add
cld
or
mov
mov
in
push
pop
ret
insb
daa
xchg
enter
in
or
pop
enter
or
mov
repnz
and
push
fistl
dec
hlt
adcb
int
fcomps
jmp
lret
push
mov
mov
cmpsl
int3
lahf
add
call
mov
out
dec
ret
cltd
jne
jb
loopne
aas
pop
test
mov
imul
loopne
xchg
ret
loop
add
push
dec
cmp
sti
xor
cmp
mov
stos
push
fucom
push
sub
push
fsts
jmp
idiv
xor
cmp
mulb
mov
sbbb
dec
and
cmp
jae
pusha
lods
pop
in
into
cmp
nop
loope
jb
cmp
or
ds
inc
aam
sbb
int
lret
dec
push
sbb
dec
push
sarl
pop
roll
aas
ds
and
test
push
andb
inc
jmp
jge
cli
dec
les
xchg
push
dec
out
jb
aas
lods
pop
fsubl
xor
rorb
and
inc
push
lret
jns
lcall
jge
pop
mov
push
jno
pop
jnp
xor
xor
push
sub
push
aaa
sub
rcll
repz
nop
or
cld
das
dec
sbb
jns
sbb
out
xlat
jns
shlb
scas
mov
xor
mov
lods
pop
inc
sub
xor
hlt
loopne
les
ror
aaa
dec
pop
sbb
push
int
iret
std
loope
push
ja
sub
add
inc
jbe,pn
push
test
popf
and
outsl
aaa
push
int3
xchg
outsl
jmp
jle
mov
test
mov
iret
inc
mov
cli
add
test
aam
fistpl
cmpb
dec
push
add
js
lock
js
lcall
pop
aam
add
lret
push
mov
sahf
and
add
std
push
mov
and
xor
mov
pop
std
jno
jnp
mov
loop
mov
sub
pushf
in
adc
ret
cmpsb
xor
aam
cmp
xor
into
xor
test
push
push
add
jg
aas
jl
test
pop
pop
xor
and
push
imul
sub
push
test
std
mov
in
mov
stos
fiadds
jo
mov
push
and
jg
in
jnp
or
jl
je
mov
popf
and
aas
cmp
hlt
mov
push
test
outsl
vorps
test
fistpl
scas
inc
hlt
cmp
xchg
daa
sbb
and
test
das
imul
inc
loop
add
sarl
xor
xchg
jb
iret
hlt
inc
cli
and
jmp
push
fadd
xchg
push
outsl
jp
mov
jecxz
fmull
cmp
add
adc
bound
pop
mov
dec
sbb
push
jmp
fimull
mov
shll
setnp
loope
das
scas
lock
xchg
mov
push
fsubr
dec
test
mov
fisttpll
shlb
cltd
subb
mov
sbb
sub
call
fcoms
mov
fists
hlt
fwait
cmpsb
decb
lcall
pop
cmp
jne
jl
mov
stos
inc
dec
cmp
or
fidivrl
add
scas
sbb
push
xor
ret
mov
and
ljmp
cmp
leave
or
mov
push
jle
cmp
dec
adc
xchg
stos
fildll
sbb
xor
push
divb
iret
lods
dec
mov
cli
sti
jge
mov
into
addr16
lea
test
xchg
push
mov
mulb
push
sbb
mov
ret
shr
mov
mov
cli
sub
or
mov
ss
sub
cmp
and
test
in
ss
les
xor
sub
adc
icebp
lds
iret
insl
sub
jne
or
xor
push
pop
jns
inc
data16
notb
mov
mov
cmp
addb
sub
dec
mov
cmp
test
out
pusha
stos
bound
jmp
xlat
data16
push
fimuls
inc
gs
pop
xchg
dec
imul
aaa
sbb
call
xlat
clc
sbb
pop
addr16
dec
cmp
int
dec
stos
xor
add
xor
adc
lods
jmp
insl
cs
mov
mov
outsl
stos
mov
pop
rorb
mov
sti
inc
fsubr
pop
insb
in
sbb
into
jg
fidivs
out
adc
sbb
sti
rcll
jae
inc
mov
cmpsl
cmpsl
cmc
pop
sbb
xor
insl
mov
arpl
xchg
hlt
data16
subl
mov
lcall
pop
dec
outsl
shl
push
insl
push
les
mov
rorb
stc
rol
push
mov
xchg
cmc
mov
sub
jle
xlat
jl
jb
inc
les
cwtl
dec
push
mov
js
orb
mov
sbbb
movsb
or
xor
cmc
jle
movb
push
push
sbb
scas
enter
les
xlat
je
sbb
and
ret
cs
out
xor
outsl
inc
int
pop
cmp
out
imul
jge
adc
clc
xchg
sbbb
add
cwtl
mov
push
cmp
pop
cmpsl
outsl
cmp
popa
pop
adc
xchg
cmpsb
arpl
xchg
aaa
add
push
mov
fdiv
mov
fcomps
or
addr16
test
shl
mov
scas
add
jnp
fisttpl
sbb
pop
jo
sbb
pop
cmc
dec
push
outsl
xchg
in
adc
rcr
sar
outsl
insl
pop
cmp
ret
mov
pop
divb
mov
fisubrl
pop
adcl
dec
fisttps
sub
or
inc
hlt
cwtl
jge
cmp
push
inc
mov
cmp
test
int3
add
repnz
sbb
mov
adcl
aad
ret
in
aaa
cmpsl
pop
pop
popa
sbb
push
push
pop
pop
shll
nop
test
cs
iret
ljmp
cli
jae
dec
dec
ja
dec
in
int
ja
movsl
lods
lds
or
lret
jp
jg
dec
push
sub
lods
incb
nop
outsb
add
or
insl
out
mov
and
sub
sub
shll
jecxz
in
or
pop
shr
fcompl
insb
sbb
push
hlt
pushf
aas
dec
or
mov
std
loop
aam
lret
faddp
or
mov
out
cltd
push
fs
aad
and
add
add
push
cmpsb
popf
dec
call
add
sub
jns
repnz
cs
mov
pop
test
out
les
and
fmull
pop
arpl
push
lret
xlat
pop
lret
fmull
movsb
and
sbb
lret
lret
outsl
push
popa
mov
scas
lds
idivb
sbb
pop
inc
push
mov
or
pop
test
mov
ds
ret
or
lock
inc
cltd
lcall
loopne
lock
int3
mov
in
mov
sub
cmpsb
arpl
sub
mov
xchg
inc
movl
jae
sahf
xchg
add
fs
fcomp
call
inc
imul
int3
jb
fsubrs
adc
fldl
sub
ret
jnp
cwtl
cmp
push
xchg
push
fstpt
fimull
xor
pop
inc
pop
in
jno
sbb
push
out
aad
fs
ljmp
cld
imul
sbb
inc
sub
push
outsl
xlat
test
mov
sbb
lahf
les
dec
ss
dec
sbb
push
es
stos
push
in
test
pop
mov
into
dec
psadbw
xchg
lahf
or
daa
or
insb
insl
jne
sub
iret
pop
or
aaa
mov
daa
lret
out
jbe
mov
mov
push
gs
sub
pop
inc
push
or
sbb
js
stc
sti
xor
dec
bound
std
lods
dec
iret
sub
nop
xlat
jmp
imul
inc
push
mov
faddl
pop
jle
mov
mov
push
sbb
sub
inc
mov
mov
and
mulb
cwtl
pushl
add
lea
or
fxch
shlb
shlb
lret
out
mov
aad
insl
sub
scas
pop
jmp
push
pop
sub
mov
and
fs
push
icebp
inc
inc
or
out
mov
pusha
in
loopne
les
mov
push
xchg
packsswb
jne
in
sbb
push
icebp
jns
lahf
fwait
lahf
rcl
icebp
aad
orl
mov
cs
ret
pop
push
xor
push
inc
out
fwait
pop
icebp
add
jo
jp
jl
cmpsl
jnp
xlat
xchg
ficoms
int
mov
cmpl
mov
sbb
inc
shlb
or
scas
sbb
mov
fldcw
inc
xlat
mov
fdiv
test
addb
mov
je
adc
nop
dec
adc
das
enter
xchg
shl
inc
push
mov
gs
ficompl
adc
aam
jl
mov
lods
jp
iret
aas
sbbl
fldcw
repnz
pop
jo
dec
push
popf
pop
adc
je
nop
pop
jns
dec
sbbl
imul
pushf
push
and
popa
nop
and
out
stos
outsl
and
xchg
enter
push
fsubrl
xchg
sub
cmp
cmp
call
add
xchg
cmp
std
dec
cmc
fs
xchg
mov
fimull
arpl
cld
test
test
fstpl
bound
jnp
cld
ds
mov
gs
mov
scas
and
pop
in
and
into
sub
dec
fmulp
or
lock
test
and
testl
inc
mov
cmp
sub
xchg
jno
nop
inc
mov
mov
xchg
arpl
jb
aam
cmpsl
jnp
jae
popf
xchg
jo
push
dec
enter
inc
push
imul
movsl
sarb
std
cmpsl
lock
jl
push
rcll
rcrl
dec
mov
icebp
jns
push
ljmp
pop
leave
xorb
fisttpl
inc
sbb
pusha
fimull
add
hlt
fs
cltd
or
ja
pop
repz
mov
dec
roll
mov
xor
mov
mov
and
mov
in
fstpl
push
push
add
and
stc
sbb
jb
dec
sub
mov
push
jns
mov
mov
sub
mov
mov
inc
adc
mov
lcall
pop
jae
xor
cmp
push
and
stc
fimuls
ja
jne
fistl
add
inc
outsl
call
popf
cmp
call
mov
hlt
das
cmpsb
mov
jmp
xor
jle
hlt
jo
xor
out
pop
repnz
push
pop
pop
sub
cmp
fldt
sub
xchg
ljmp
stc
push
xor
mov
pop
jmp
lahf
movsb
andb
pop
sbb
mov
int3
or
in
mov
mov
sahf
movsl
dec
sub
xchg
cli
push
sbb
repz
dec
dec
mov
cmp
pop
mov
jmp
sbb
stos
lret
pop
outsl
mov
mov
add
push
jmp
xchg
adc
scas
sub
mov
leave
mov
or
mov
cmc
mov
mov
cmpsl
rorl
xor
fldenv
pop
pop
mov
lods
aaa
mov
jo
fistps
push
pop
loope
insl
loopne
mov
mov
in
pop
mov
lret
sub
mov
scas
leave
jecxz
adc
xor
sti
icebp
stc
mov
loope
les
jb
sub
jno
aam
add
inc
mov
and
push
jbe
ja
mov
xchg
dec
les
icebp
mov
pop
cs
mov
cmp
dec
lods
jmp
ja
das
inc
xchg
pop
cld
adc
and
mov
aad
or
incb
in
in
mov
sbb
pop
add
rcrl
or
popa
jae
sbb
imul
cli
daa
mov
pop
ret
sbb
adc
hlt
mov
cmp
push
in
fcomps
nop
or
mov
das
in
stos
xchg
dec
iret
test
call
lcall
cmp
fwait
jg
xlat
in
fidivrl
dec
test
hlt
xor
scas
scas
jae
js
shlb
pop
sbb
jmp
test
imul
movsb
idivb
arpl
xor
lods
hlt
mov
dec
push
hlt
fs
inc
sbb
add
fwait
inc
mov
xchg
xchg
sti
dec
les
test
gs
cmp
lds
ja
js
add
sbb
inc
jnp
ret
cmpsb
mov
js
fildll
jns
negl
sbb
cld
hlt
pop
mov
dec
cmpsl
pop
iret
mov
imul
push
div
je
inc
add
rcll
stos
call
test
mov
mov
pop
pusha
and
movsb
pop
and
mov
jns
cs
test
mov
fcoms
mov
xor
sahf
or
push
push
lods
int3
mov
cli
cmp
inc
xor
repnz
rolb
lock
mov
inc
pusha
cmp
out
insb
cmp
scas
test
das
or
mov
and
and
jp
xor
cmp
mov
outsb
rcl
xchg
lret
push
mov
xchg
lods
ss
popa
leave
outsl
sti
in
jl
push
pop
xchg
fyl2xp1
nop
outsb
jno
cld
stos
and
jle
fldcw
push
imul
arpl
ja
arpl
xor
sbb
lahf
cmp
jae
xor
loop
xor
ja
mov
adcl
adc
cmpsb
mov
movsl
roll
mov
xchg
sarl
ljmp
cmc
ret
shl
lret
decl
mov
lea
add
pop
or
xor
addl
sbb
outsb
inc
loope
in
icebp
push
xorl
imul
ds
push
inc
rcll
out
push
sbbb
add
mov
mov
and
mov
sub
clc
adc
mov
mov
repnz
ret
xor
loope
std
pop
sub
jmp
push
jo
mov
ret
int
push
mov
and
adc
jae
stos
mov
or
insl
fidivrs
jp
add
repz
daa
cmp
jp
divl
movsl
out
rcrl
jns
jnp
push
xlat
repz
pop
ret
add
and
push
pop
ficoml
sbb
shrb
pop
xchg
inc
push
ficomps
aam
adc
mov
dec
or
int
or
nop
pop
arpl
cmp
push
pop
or
push
xor
ret
ret
call
cmp
movsl
xchg
add
jmp
cmp
fidivrl
cltd
mov
adc
inc
jae
add
movsb
mov
cmp
scas
cmp
les
jnp
clc
sbb
idivl
sub
in
clc
loope
popf
outsl
adc
sahf
or
xchg
mov
xchg
test
les
mov
dec
or
cmp
fnstsw
cltd
push
cmp
mov
mov
cmp
fmuls
jbe
adc
into
mov
sbbb
les
shrl
xlat
fdivrl
cltd
xlat
pop
sbb
dec
or
popf
jns
pop
jle
lret
mov
pop
dec
sub
sub
or
jb
xchg
outsb
repnz
dec
nop
xor
shl
mov
mov
sbb
mov
out
push
dec
loope
inc
adcl
sbb
cmp
fwait
lods
pop
iret
mov
stos
jns
jp
test
inc
dec
inc
pop
jne
push
xchg
push
aas
sub
xchg
aad
ljmp
mov
mov
cmp
jne
mov
pop
filds
adc
scas
scas
add
popa
mov
mov
sbb
cwtl
cmp
jb
push
jmp
xorb
inc
inc
je
mov
outsl
bound
mov
mov
sbb
mov
mov
in
dec
push
out
pop
enter
in
jns
or
fistpl
sbb
cltd
mov
sub
jae
mov
dec
or
mov
loop
cwtl
lock
out
pop
jle
adc
mov
hlt
mov
insl
jno
enter
inc
push
lea
repz
jmp
arpl
dec
xor
mov
ret
fcomp
or
je
push
adc
sub
pop
inc
pop
and
adc
ret
mov
ss
imul
ljmp
inc
clc
pop
iret
xchg
fcmovnu
push
mov
add
cmpsb
and
test
add
pusha
cmp
jns
cmp
fisubl
pushw
pop
sbb
xor
push
stos
lods
add
aad
fistps
aaa
or
push
adc
xor
loop
adc
stos
jae
inc
ja
mov
mov
jns
repz
daa
rcl
dec
pop
dec
aaa
inc
jp
cmp
js
inc
sti
pop
mov
imul
and
mov
bound
inc
outsl
mov
push
inc
or
adc
aas
adc
insl
push
pop
mov
mov
sub
mov
imul
sub
ffree
and
shrb
shr
mov
test
pop
daa
add
push
push
mov
inc
cmpsb
fdivrl
ss
test
pop
leave
pushf
aaa
out
ja
xchg
lea
push
data16
stos
repnz
subb
cs
out
call
out
mov
mov
or
mov
test
xor
test
ficoms
jge
rol
popa
pushf
sbb
mov
mov
mov
mov
test
mov
add
outsl
push
lcall
add
loopne
pop
clc
adc
or
mov
xchg
std
mov
enter
popa
ds
cmc
sbb
mov
and
mov
sub
fadd
cmp
pop
jge
mov
adc
or
xchg
les
gs
xor
adc
cmp
popf
dec
insb
icebp
test
fwait
push
ficompl
jp
jmp
push
mov
push
sub
xor
push
jge
cmp
mov
mov
clc
out
icebp
fwait
mov
xchg
dec
ja
mov
mov
mov
cmp
push
sub
and
xchg
or
adc
into
and
xchg
jns
into
repnz
push
jbe
pop
mov
je
test
cmp
xor
into
daa
push
push
out
ja
dec
sub
sbb
add
ret
enter
mov
adc
aam
test
das
xchg
stos
loope
cmp
pop
pop
vpmacsswd
pop
sbb
cmp
push
sbb
fnclex
mov
jge
add
xlat
push
std
sub
aaa
fcomp
arpl
push
stc
lret
inc
adc
mov
imul
push
xchg
sbb
pop
jecxz
and
sbb
inc
int3
dec
imul
fadds
into
push
jmp
fmuls
push
int3
sahf
xchg
push
leave
push
add
sahf
push
push
xchg
lret
int
aaa
jbe
pop
lret
fildl
cmp
add
bound
in
mov
or
sbb
jp
decl
daa
cmp
cmp
xchg
int
daa
bound
xchg
adc
adc
push
cmp
pop
andl
jnp
dec
push
dec
xor
clc
mov
rorl
mov
repnz
rolb
dec
test
out
dec
ficompl
lret
fiaddl
leave
rcl
cmpsb
dec
ss
xchg
push
insl
mov
adc
cmp
icebp
push
es
push
xchg
jo
sbb
xor
jmp
int3
mov
mov
dec
jae
sbb
insl
mov
es
inc
push
adc
lret
and
cmp
cmp
addl
inc
lahf
mov
fists
mov
stos
xor
lds
dec
push
in
das
xchg
jge
ret
cmp
xchg
pop
jae
jmp
lock
mov
inc
es
cmp
jo
mov
sahf
push
or
or
xorb
xchg
fisubrs
sub
mov
mov
xchg
sub
add
in
sqrtps
leave
mov
sub
into
xchg
in
movsb
push
gs
das
xchg
sub
fwait
outsb
test
aaa
pop
scas
mov
mov
nop
lahf
fmuls
xor
loope
nop
fcoms
fstl
pop
lock
fwait
push
xchg
addl
lock
dec
out
fcompl
insb
popa
adc
xchg
sbb
std
lcall
sub
lcall
insl
mov
lret
push
test
and
out
xchg
xchg
stos
push
popf
jp
xor
jmp
divl
xchg
inc
jle
nop
stos
adc
lea
dec
cmp
or
andl
jmp
mov
clc
push
xchg
sbb
data16
cmp
xor
jle
dec
xlat
sbbl
sbb
mov
out
iret
jp
jns
mov
mov
sub
movsl
lretw
jo
insl
rorb
inc
popf
mov
mov
ljmp
shl
mov
xchg
xchg
and
xchg
adc
pop
ss
adc
stos
fcoms
popf
in
shrl
push
mov
cwtl
mov
pop
orb
push
testl
sub
and
jns
mov
sti
loop
or
mov
sub
out
add
in
jns
out
inc
stc
leave
insl
add
test
xor
xchg
insl
movb
inc
sbb
mov
pop
lcall
and
mov
mov
icebp
rcl
fdivrs
sti
cmp
xor
sbb
stc
xchg
rcll
push
lock
aad
sarl
push
mov
inc
iret
jae
mov
rcrl
movsl
xchg
fmuls
add
mov
push
sbb
jnp
mov
dec
push
mov
fldt
push
xor
ljmp
das
fdivrs
or
ffree
push
fsts
add
pop
jae
xor
jmp
mov
fmuls
out
sbb
hlt
ret
pop
mov
inc
je
pop
add
lret
fcomps
inc
shll
adc
movl
xchg
rorb
mov
mov
es
inc
push
adc
stc
adc
xchg
xchg
ljmp
add
repnz
adcb
mov
and
popf
stos
ss
scas
and
mov
loopne
call
cmpsl
test
fcom
cmpsl
inc
mov
jnp
lods
inc
dec
lcall
xchg
movsb
cld
and
push
add
or
push
mov
test
ljmp
call
dec
mov
sarb
lret
stc
imull
push
and
repnz
out
dec
pop
mov
cltd
clc
fistl
sub
in
dec
adc
repz
jl
pop
in
fcomi
push
push
and
emms
cwtl
out
stos
test
out
arpl
inc
adc
mov
ss
push
mov
scas
int
mov
mov
mov
pop
lds
jmp
jae
notb
loope
dec
sbb
js
mov
push
pop
adc
stos
loop
insl
fwait
dec
daa
movsb
lcall
popa
mov
dec
sub
push
xchg
jne
add
push
adc
push
adc
inc
mov
cmpsb
leave
lahf
idiv
popf
xchg
xor
scas
xor
push
je
xchg
inc
hlt
mov
mov
sbb
push
sbb
jl
loope
cmp
push
sub
jne
pop
shrl
pop
scas
jae
push
ds
cmpsl
mov
xchg
loopne
fcmove
xchg
jp
jo
nop
loopne
aaa
into
leave
flds
pop
inc
push
or
mov
push
adc
loope
lret
aam
lahf
inc
push
pushf
sti
in
ljmp
pop
inc
jb
lahf
or
xor
call
push
jnp
add
xor
xchg
call
dec
xorl
mov
inc
ret
inc
dec
test
gs
mov
mov
loopne
mov
movsb
data16
movsb
mov
xor
movb
xchg
xor
fistps
loope
push
sub
pop
mov
mov
ficoml
mov
jmp
andb
mov
test
lret
adc
popf
mov
pushf
std
add
mov
lock
lahf
mov
mov
movl
lret
fdivrs
sub
in
loope
cli
jno
dec
out
clc
cmpsb
test
xchg
adc
mov
dec
test
push
cmp
jnp
jp
push
push
mov
jb
inc
sbb
sub
mov
je
mov
fwait
cmp
das
adc
jp
lock
int
or
gs
fisttps
inc
mov
dec
sub
push
dec
mov
test
fwait
mov
sahf
push
xchg
add
cmp
fisttpl
adc
pop
push
enter
or
push
lcallw
test
fidivs
sub
and
push
dec
inc
xor
xchg
mov
aas
jnp
mov
xor
nop
push
or
es
lea
push
inc
cmp
inc
mov
pop
das
jae
mov
lcall
and
loopne
lods
jno
adcb
fists
mov
xchg
push
sti
rcrb
aam
out
cmpb
jecxz
jne
add
stos
xchg
addb
incb
iret
insl
loop
sub
std
mov
hlt
in
cmp
dec
mov
mov
adc
not
mov
stc
dec
enter
and
mov
sahf
inc
and
xchg
sub
mov
std
fwait
int
adc
adc
fnstcw
imul
pop
sbb
add
sbbb
mov
ss
inc
out
dec
test
mov
cmc
fmuls
and
adc
insb
popa
jae
push
mov
lcall
or
sbb
mov
pop
lea
or
ss
mov
scas
cld
mov
inc
int
adc
pop
enter
lock
fisubl
xor
dec
cwtl
mov
sub
push
jnp
subb
mov
and
xor
jnp
test
std
stos
dec
rorl
sbb
loope
mov
dec
cmp
out
push
fs
les
sub
mov
pusha
out
and
push
pop
out
push
out
test
mov
jl
pop
cmpsl
shrl
andb
loope
or
jno
xor
out
ds
sbb
inc
mov
cmp
enter
mov
imul
lea
insb
cs
mov
push
iret
adcb
in
adc
das
sarl
into
mov
or
mov
lock
iret
clc
xchg
push
sbb
jb
mov
mov
jg
adc
shll
and
lcall
dec
jns
shr
add
jg
fdivrl
add
hlt
push
dec
xchg
or
outsb
scas
out
js
add
loopne
and
adc
imul
or
cmp
pop
leave
xor
mov
mov
in
adc
add
scas
dec
jns
cmp
pop
mov
push
jmp
and
dec
sbb
cmpb
and
js
ret
repnz
icebp
enter
sub
mov
mov
add
aam
mov
ret
test
hlt
jbe
mov
test
sahf
movsl
sub
and
fxch
jnp
sub
xorl
and
xor
fsubrl
in
adc
mov
inc
dec
js
aas
loope
pop
inc
outsb
push
mov
mov
scas
das
and
daa
push
fcmovb
fadd
scas
xor
mov
inc
scas
add
es
adc
iret
jmp
mov
pushf
dec
shlb
aaa
cmp
sbb
inc
fsubrp
dec
pusha
sub
ss
jae
sub
stos
mov
mov
pop
mov
stos
data16
loope
sti
dec
sbb
jno
nop
fsubrl
stos
fs
cld
xchg
lods
jmp
and
ljmp
pop
repnz
pushf
incl
repnz
cltd
push
jns
jnp
push
insb
add
imul
iret
in
in
pop
dec
test
jae
das
cmovno
pop
lret
das
fwait
dec
mov
or
outsl
inc
movsl
push
push
jns
cmpsl
jg
mov
cli
and
popa
xor
and
pop
xlat
faddl
sub
pop
cli
xchg
in
popa
fcoml
shll
pop
push
ret
pop
jae
push
nop
sub
das
or
mov
repz
aam
mov
add
push
jbe
lcall
pop
push
sbb
mov
testb
mov
sub
dec
stos
rorb
das
mov
mov
adc
jp
push
cwtl
push
dec
mov
lods
ja,pn
iret
mov
dec
into
in
adc
std
inc
cmovbe
int3
mov
push
popa
cmp
push
rcrb
xchg
xchg
dec
sarl
sub
or
dec
je
jno
push
mov
sub
sbb
sub
dec
adc
inc
test
mov
pop
mov
cmp
mov
cmp
push
push
or
xchg
shll
clc
mov
repnz
out
push
sub
fnstsw
dec
out
push
lds
push
pop
mov
mov
out
decl
out
sbb
jle
dec
mov
add
daa
outsl
inc
mov
and
mov
mov
push
sahf
loop
aas
ljmp
jecxz
aad
xor
and
stos
fucomp
jge
push
add
jne
adc
ljmp
not
xchg
sbb
mov
add
mov
pushf
ljmp
mov
xchg
dec
loop
xchg
in
pop
mov
mov
loopne
mov
adc
push
mov
cmp
sarb
cmp
xor
ror
xchg
mov
inc
fdiv
addr16
pop
jmp
fldl
loop
cmp
xchg
jp
icebp
xchg
mov
push
icebp
adc
ret
xlat
aad
xor
sub
xchg
das
inc
sbb
data16
mov
jg
in
lock
ja
push
cmp
testl
adc
das
jns
ss
arpl
scas
or
jo
sub
mov
inc
shr
sub
sbb
or
cmpsl
dec
aaa
data16
sbb
add
into
jge
data16
add
push
mov
mov
adc
push
or
in
mov
fcompl
and
stos
dec
loopne
or
loopne
push
rorb
jbe
mov
inc
add
ficompl
jbe
mov
mov
sub
nop
fistpll
lahf
push
out
test
je
jns
cli
and
inc
or
mov
mov
jmp
xor
fnsave
add
pushf
sbb
je
hlt
jle
fdivrl
icebp
pop
fidivrs
stc
lahf
aaa
sub
jg
int3
int3
xchg
and
mov
out
mov
or
inc
mov
push
adc
push
ljmp
pop
cmp
arpl
mov
jno
and
insl
test
in
push
les
jecxz
ds
addr16
in
xchg
adc
dec
fsubrl
sbb
sub
rorl
mov
and
cmp
cmpsb
xor
sub
lcall
pop
pop
cmp
xor
inc
sbb
idivb
dec
inc
or
test
xorb
js
and
outsb
imul
or
sbb
mov
mov
test
inc
sbb
xor
inc
lods
cmp
mov
mov
fcoms
adc
stos
aaa
out
aas
mov
mov
divb
out
repnz
pop
cli
loopne
jge
xchg
mov
mov
jecxz
mov
or
dec
jmp
ja
mov
lret
stos
cmpsl
and
dec
int3
sub
rcll
sbb
shr
fists
xchg
dec
dec
cld
inc
jle
mov
adc
jns
into
mov
mov
mov
jmp
sbb
movsl
xor
pop
cmp
push
pop
dec
mov
cmp
insl
mov
cmpsl
push
imul
repz
xor
ja
mov
inc
xor
mov
test
stos
mov
adc
ret
aaa
ret
jp
xlat
out
sahf
push
sti
mov
xchg
fisubs
test
push
arpl
pop
xorl
movsb
fwait
pop
push
sti
sub
hlt
es
pop
fnstcw
sub
les
int3
repnz
mov
ja
sbb
and
pop
mov
aam
push
jge
nop
push
mov
adc
mov
cmp
subl
ret
pop
aam
dec
pop
fdivrl
mov
cmpsl
std
lock
out
sbb
leave
or
mov
lahf
outsb
fbld
and
mov
aaa
aam
pop
cmpsl
sbb
pop
and
movsl
xor
pop
jmp
mov
lret
negb
jecxz
mov
inc
xor
adcl
dec
std
push
fimull
mov
popa
add
lcall
mov
mov
int
lret
ljmp
pop
or
xchg
cmpsl
dec
xchg
push
adc
or
adc
push
xchg
jl
mov
pushf
popa
popa
in
arpl
dec
loop
dec
pop
dec
test
xor
fildl
fnsave
dec
repnz
roll
jp
or
mov
cmpsl
jle
mov
cmpsl
ret
and
lock
int
cltd
xor
iret
repz
push
push
enter
cli
adc
pushf
pop
mov
mov
movsb
add
pop
repz
ror
popa
and
lock
shlb
pop
pop
rclb
sub
dec
cmc
ljmp
jl
mov
shrl
jecxz
cmp
pop
jno
adc
lcall
jmp
or
insb
add
ss
and
xchg
adc
scas
pop
mov
or
mov
dec
iret
sbb
or
add
mov
clc
and
push
ror
out
inc
mov
mov
push
ds
enter
inc
ss
testl
or
mov
aas
push
aad
dec
xor
loop
jp
test
sbbb
jmp
push
cmp
and
xchg
lea
lcall
sahf
cli
in
jp
push
adc
add
dec
mov
adc
mov
sub
push
call
into
mov
std
push
cmp
sub
inc
add
xor
fs
repnz
mov
push
fistpll
fstpt
mov
jbe
je
loopne
mov
rcl
cmp
orl
shrl
fimuls
dec
and
sbb
or
cli
mov
jmp
mov
mov
stos
sub
aas
jbe
mov
nop
xor
or
mov
dec
fs
inc
push
lock
stc
mov
sbb
nop
mov
mov
bound
movb
push
adc
or
pop
nop
mov
mov
je
mov
xor
cmp
adc
out
enter
nop
sbb
cmp
ds
loop
es
cmpsl
jp
int3
mov
cmp
dec
cld
adc
cmc
daa
and
cmp
out
mov
call
inc
mov
jecxz
cmp
mov
jge
xchg
jb
fnstcw
ja
cltd
idivl
out
add
loopne
jns
mov
push
pop
or
rcrb
jge
pop
movsl
jb
andb
xchg
push
fnsave
hlt
inc
icebp
fldt
mov
xor
repz
imul
and
in
movsl
out
and
push
add
icebp
sub
and
ds
data16
test
mov
hlt
jecxz
scas
lds
pop
ljmp
outsl
mov
pop
cmp
and
add
or
sub
int
jne
pop
jle
xchg
mov
imul
or
movsl
push
adc
dec
jmp
imul
push
lret
adc
add
cltd
sbbb
push
adc
scas
adc
jg
sbb
ljmp
jno
jno
mov
inc
pushf
mov
add
das
scas
ret
addr16
je
and
adc
sub
lods
out
insl
and
xchg
xor
dec
push
in
test
ret
pop
out
xor
lret
sub
mov
imul
xchg
loopne
or
jno
mov
pop
push
mov
rcl
and
je
or
add
lret
xor
lahf
mov
shrb
stos
and
aam
sbbl
inc
xor
call
xor
adc
shll
sti
inc
lock
jo
pop
push
jmp
stc
dec
cli
pusha
xchg
mov
test
push
push
dec
mov
mov
dec
lret
inc
out
inc
cwtl
push
aaa
or
sahf
mov
sub
xor
aas
and
and
lds
imul
popa
mov
hlt
stos
or
ret
hlt
xchg
push
mov
add
pusha
cltd
dec
inc
out
shll
mov
sbb
xchg
pop
aam
lret
into
sti
inc
and
test
pop
lahf
xchg
push
xchg
inc
js
cs
xor
cs
mov
push
sub
sarl
jecxz
sbb
inc
nop
lahf
xchg
ret
mov
push
sub
dec
mov
in
pop
fs
lods
pushf
enter
cmp
sub
jb
xchg
mov
mov
iret
je
mov
add
jns
xor
sbb
shlb
xorl
mov
insl
dec
rorb
inc
loopne
and
cmp
test
and
xchg
jmp
loope,pt
push
sti
leave
in
inc
mov
lahf
sub
sbb
scas
cmc
adc
mov
cld
mov
mov
stos
repnz
stc
mov
xchg
mov
lock
push
sbb
jle
test
xor
adc
lret
sbb
idivb
mov
xlat
push
and
aaa
test
ds
pop
pop
xchg
add
aaa
or
mov
fwait
xchg
xchg
mov
das
xchg
xor
pop
jns
pandn
or
xchg
push
mov
lret
or
mov
int3
xchg
into
dec
fldt
movsl
pop
xchg
push
mov
repnz
dec
dec
dec
mov
dec
pop
sbb
lcall
sub
icebp
fistpll
rcrl
ret
out
std
add
repnz
lock
sub
in
ss
fsubrp
imul
adc
xor
lret
add
mov
in
jns
in
mov
aam
mov
mov
pop
imul
jg
sub
xor
xchg
outsb
sub
push
lds
add
imul
mov
adc
cmpsb
out
xchg
adc
sahf
loopne
in
cs
pushf
add
or
int3
into
in
loop
bound
mov
in
je
sti
sub
gs
test
test
jp
xor
mov
sti
sarb
loope
add
rcrl
xchg
xchg
and
pop
and
addr16
push
loop
imul
adc
push
movsl
out
cmc
sbb
mov
rorl
xor
inc
xchg
xchg
dec
pusha
and
ret
mov
mov
lock
xchg
xchg
cmp
cmpsb
fsubrl
xchg
push
sbb
icebp
cld
das
xchg
pop
outsb
pop
fstl
pop
hlt
sub
mov
sbb
cmpsb
mov
sbb
cmp
push
mov
cwtl
ficomps
imul
mov
fsts
mov
imul
jb
dec
sbb
clc
data16
jne
jb
mov
clc
lcall
rorl
mov
idivb
xchg
shlb
inc
cltd
xor
mov
mov
in
adc
inc
push
insb
popa
popf
popa
push
cmpsl
mov
cmp
xor
add
gs
sbb
mov
lods
lret
xchg
sbb
jp
dec
stc
nop
loop
faddp
roll
rcll
stc
xchg
out
ljmp
inc
sahf
and
inc
and
mov
bound
out
jmp
lds
dec
and
mov
inc
xchg
jle
imul
and
mov
lds
cli
mov
push
mov
pop
repz
inc
arpl
cmp
mov
jg
inc
mov
and
lret
fstpl
jns
or
pop
aas
cmp
cli
arpl
sbb
pop
xchg
lahf
adc
xchg
xchg
repnz
sub
fdiv
mov
inc
xchg
int3
fsubrp
push
into
cmp
push
push
sub
enter
sub
in
or
add
cmp
jl
mov
sub
jae
push
daa
inc
ljmp
std
rclb
sub
pop
adc
test
xor
sub
out
mov
inc
push
in
dec
test
xor
or
mov
iret
out
pop
jne
inc
pop
verr
fmuls
movsb
and
int3
out
dec
pop
inc
or
and
shl
std
inc
add
sti
repz
mov
jp
outsb
mov
jmp
shll
push
repz
nop
lock
dec
scas
add
pop
sbb
add
outsb
jecxz
inc
or
pop
lds
sbb
mov
out
movsb
aaa
xchg
push
sbb
add
jp
mov
outsl
arpl
shlb
das
mov
outsb
jge
addl
in
sub
inc
testb
push
cmp
sbb
adc
mov
add
sub
in
popf
in
sub
mov
cli
push
rclb
inc
and
or
insl
and
mov
movsb
xor
leave
xchg
je
popa
mov
push
addl
pushf
js
roll
cmc
push
std
jno
jmp
outsl
push
or
mov
andl
or
mov
or
stos
faddl
jl
out
ja
scas
and
scas
or
int3
loop
hlt
mov
adc
mov
or
out
out
dec
inc
add
loope
mov
jp
dec
and
sub
or
push
mov
dec
mov
fxch
pop
and
cwtl
pop
add
push
icebp
lea
loope
clc
mov
test
add
pop
inc
sbb
aaa
pop
jnp
bnd
mov
xchg
dec
popa
mov
mov
and
fidivl
sbb
out
push
lahf
xor
or
push
sbb
sub
dec
enter
orb
inc
test
sub
and
pop
repnz
lea
and
mov
push
lret
mov
push
or
int
pop
clc
addl
xor
pop
or
andl
xor
sub
data16
or
sbb
push
adc
jno
inc
movsb
add
jb
jg
pop
mov
dec
cmp
addb
xorl
ljmp
sbb
push
sub
mov
sbb
mov
in
outsb
pop
cld
mov
lea
jb
add
cmp
xchg
pushf
inc
jecxz
fdivp
push
or
cmpsl
cs
stos
out
jno
pop
leave
sbb
cmp
xlat
pop
inc
mov
addr16
test
push
insl
js
inc
stos
pop
add
cwtl
add
pop
or
xchg
and
add
pop
jge
xor
mov
mov
lea
cld
iret
fbld
test
ss
movsl
mov
insb
push
mov
mov
pop
in
xchg
enter
outsb
mov
mov
sbb
sti
mov
lds
sbbb
lcall
push
test
repz
clc
jo
xchg
push
inc
sub
popf
lods
lods
ret
pop
ja
sub
and
jbe
pop
sti
mov
mov
cli
shll
or
cmpsl
mov
stc
sub
xchg
dec
adc
sbb
int3
notb
or
test
jge
mov
inc
add
jb
loopne
push
push
pop
lret
jne
xlat
add
hlt
ja
xchg
jbe
loopne
push
pop
filds
aas
xchg
cmp
mov
imul
pusha
push
das
insl
or
cmpsb
mov
test
outsl
dec
sar
out
out
adc
add
in
cmp
cwtl
mov
in
pop
cmp
inc
lea
ud2
xor
mov
test
mov
ret
lret
je
dec
mov
mov
sbb
lock
sbb
xchg
loopne
mov
test
or
notb
cmp
out
hlt
lds
lret
in
push
fimuls
lods
or
push
popf
push
fldcw
inc
push
adc
push
jne
rcl
xchg
aaa
sbb
imul
push
xchg
dec
push
andb
or
mov
adc
fmull
das
loopne
mov
clc
test
nop
xchg
adc
mov
lock
andb
icebp
mov
sbbb
sub
sub
push
pop
adc
or
pop
outsl
pop
adc
sbb
nop
fs
std
dec
in
aam
call
outsl
aam
clc
jae
mov
pop
xor
sbb
test
lock
mov
decb
lret
adc
fdivr
ds
repnz
or
xchg
push
push
jae
ds
push
push
pop
imul
jno
mov
or
cmp
jno
sub
mov
or
lret
movsl
mov
mov
int3
mov
mov
adc
insb
test
lahf
pop
lods
cmp
ljmp
sbb
and
shrb
sub
lret
xor
rorb
mov
les
jae
mov
inc
fcmovnb
mov
cmpsb
mov
mov
lcall
cmpsb
test
adc
sbb
or
adc
jg
mov
lock
and
cmpsl
adc
shr
inc
cmc
cmpsb
outsb
jne
ds
inc
add
cmpsl
pop
fwait
jnp
sti
push
jae
ftst
push
push
push
pop
mov
pushf
pop
sub
pop
jno
enter
mov
mov
cmp
mov
push
out
std
in
loopne
mov
adc
mov
cmp
loopne
sahf
out
sti
adc
mov
aad
push
into
ja
mov
adc
and
shlb
int
and
inc
xchg
sub
int3
arpl
movsl
xor
out
and
adc
mov
lds
push
xchg
pop
jge
mov
fsts
add
repnz
or
sbb
inc
filds
call
aas
cmp
push
int
jp
adc
addl
jb
sti
pop
scas
or
lea
sub
add
into
mov
pop
fbld
jb
movsb
les
movsb
mov
sub
jg
jbe
cwtl
test
jne
ret
push
lret
pop
xchg
repz
xchg
cmp
ret
xor
stos
imul
emms
and
sbb
out
inc
push
mov
lcall
addr16
xchg
add
inc
repnz
repz
pop
mov
ja
mov
stos
addr16
leave
xor
push
cmp
push
xchg
es
jnp
lock
or
add
negl
mov
sbb
push
inc
add
orl
adcl
fsubrl
cmp
xor
outsb
jecxz
in
das
in
sbb
jb
xor
cmp
sbb
lret
jbe
inc
arpl
mov
push
sbb
and
frstor
pushf
dec
jg
aam
arpl
mov
dec
sbb
inc
idivb
aaa
or
xorb
jbe
frstor
add
mov
jmp
mov
subb
dec
cld
push
or
lock
or
cmp
xchg
int
sbbl
pop
fsubs
push
mov
repz
push
lock
add
add
lahf
clc
lcall
xor
int3
test
lcall
xor
push
push
inc
xchg
mov
in
xor
out
add
jne
pop
cmp
in
push
or
sbb
and
daa
insb
xchg
pop
mov
pop
fsts
es
adc
movsl
jne
inc
dec
sti
sbb
stc
out
sbb
roll
fbld
add
test
dec
fs
mov
push
mov
aas
test
adc
fistps
xor
pop
sbb
loope
andps
push
dec
out
lahf
and
xor
sub
dec
cmp
push
dec
sbb
out
cld
cmp
jmp
mov
imul
popl
xchg
ljmp
cmp
lds
push
mov
imul
jp
sub
and
push
ficoms
mov
push
xor
cs
ret
push
mov
push
mov
push
jmp
xor
mov
xchg
lret
jmp
add
aaa
jo
sbb
pushl
sub
ljmp
and
mov
fs
ret
in
into
mov
out
mov
pop
ret
sbb
xchg
rcrb
mov
ds
imul
out
lcall
xor
dec
cs
xchg
push
pop
sbb
pop
fs
adc
sub
sbb
or
jb
in
insl
incl
and
adc
push
cmp
aas
imul
xchg
mov
and
sub
xor
mov
mov
inc
leave
lock
out
lret
test
test
icebp
and
fwait
pop
cmp
adc
inc
sbb
out
and
push
cmp
loopne
mov
fstpt
push
jnp
and
sub
pusha
scas
jne
ljmp
mov
add
adc
call
out
ds
hlt
lods
jg
jns
mov
cmp
addr16
jp
xchg
adc
and
test
jl
and
xchg
push
movsl
or
test
xchg
pop
test
cmp
imul
adc
pop
dec
inc
inc
and
cmp
mov
mov
push
js
mov
jmp
cmp
ret
cld
and
push
fwait
mov
sti
out
fisubrl
jge
sbb
cmp
cwtl
xor
xor
rcl
es
and
jge
push
and
xchg
push
jbe
cli
test
arpl
xchg
in
test
or
pushf
inc
lea
int
and
mov
sbb
sar
mov
jnp
mov
lahf
std
push
xor
loop
dec
fnstcw
adcb
imul
adc
inc
es
nop
ret
dec
xchg
jecxz
pop
cltd
dec
xor
xchg
push
mov
aam
sbb
mov
xor
dec
pop
inc
add
in
outsb
loope
das
jecxz
arpl
negb
cwtl
ss
out
dec
mov
bound
jl
adc
cmp
scas
daa
scas
pop
gs
cmp
jb
es
arpl
sbb
sti
and
fsincos
clc
ret
int3
adc
mov
mov
test
mov
jbe
fucomp
or
loop
push
and
sub
mov
mov
or
and
cwtl
outsb
icebp
jge
leave
in
addr16
jge
adc
jg
mov
lahf
movsb
in
jnp
outsl
pop
imul
inc
mov
lods
mov
repnz
jno
lock
movsl
push
out
rclb
std
mov
lahf
push
cld
jg
dec
sub
or
int
xor
mov
lock
mov
dec
mov
lods
arpl
pop
xchg
shl
jp
pop
test
cs
cmp
mov
repnz
jge
es
push
movsl
orb
adc
add
adc
shrl
fs
ljmp
or
adc
lods
mov
mov
cmp
or
mov
add
mov
mov
movsb
xchg
sub
cmp
lret
fisubrs
call
cmp
jno
out
cmp
loopne
dec
cmpsl
inc
in
xchg
dec
push
xchg
lret
sti
mov
sbb
sub
jmp
out
lret
stc
sbb
in
inc
or
daa
jg
jbe
mov
dec
pusha
jl
bound
jno
lock
mov
jl
inc
or
xchg
jne
jo
inc
idivl
mov
cmp
mov
shl
arpl
and
and
mov
fidivrs
hlt
adc
push
les
and
rol
mov
mov
push
inc
push
pop
leave
das
enter
push
xchg
rcl
jnp
or
in
sti
inc
and
outsl
pop
jmp
mov
std
mov
lods
xchg
fildll
mul
inc
xlat
xor
jne
fucom
adc
cmc
jbe
and
pop
ljmp
jecxz
fadds
pop
dec
testl
mov
mov
fistps
sub
mov
jecxz
inc
sti
pusha
mov
add
add
cwtl
cmpsb
jno
sbb
sub
inc
dec
xchg
cmp
popa
lret
iret
jnp
inc
or
imul
xorl
int3
in
jle
cmp
outsl
rcr
enter
mov
movsl
loop
xchg
dec
jp
xchg
call
loope
insb
mov
jbe
aad
shlb
dec
flds
jecxz
frstor
orw
int3
sbb
mov
jg
sub
jns
lret
pop
pop
mov
test
aad
insl
add
mov
jo
dec
sub
push
pop
mov
sbb
adc
imul
push
ret
cmpsb
dec
mov
push
js
dec
std
int
mov
xchg
adc
jno,pn
mov
pop
cs
jno
sbb
push
repz
and
insl
cmp
push
adc
cmp
mov
les
adc
fmull
dec
outsb
cmp
inc
sti
cmp
das
pop
push
mov
loopne
jno
aaa
es
aam
mov
jmp
xchg
lret
orl
cltd
test
enter
xchg
popf
jge
or
sbb
adc
mov
mov
arpl
pop
push
in
out
iret
and
jle
divl
mov
adc
mov
mov
sbb
inc
cmp
movsl
aas
cmp
aad
add
out
push
popa
addr16
add
mov
add
or
adc
jnp
xchg
enter
jmp
sbb
mov
test
and
sub
pop
popf
mov
shl
imul
or
lahf
out
loop
sub
testl
jo
mov
ret
sbb
mov
scas
frstor
push
fadds
outsl
cwtl
std
xor
aam
cmp
fists
popl
sbb
inc
arpl
loopne
sbb
aam
das
and
mov
stos
mov
je
mov
and
mov
inc
mov
jp
dec
dec
xorl
mov
mov
add
decl
mov
or
in
ljmp
push
jo
xchg
and
pop
fwait
dec
jl
js
into
hlt
sbb
jmp
dec
jge
fidivs
aaa
jg
lock
loope
cmp
hlt
out
sbb
fists
movsl
or
xor
xor
loopne
lret
jge
cld
daa
inc
push
xor
sbb
xchg
jl
push
in
pop
and
mov
sbb
inc
or
xor
cmpsb
jb
jnp
and
pop
mov
les
and
jae
push
int3
or
xchg
adc
lcall
test
decl
popf
or
in
mov
add
int
mov
mov
fldl
push
ret
and
mov
push
sbb
aaa
pushf
cli
mov
bound
ret
js
xchg
jg
jl
leave
sbb
xchg
cmp
mov
mov
add
adcl
out
or
pop
test
adc
inc
std
adc
aaa
imul
cs
and
push
outsl
in
xor
mov
ret
pop
out
xchg
pop
mov
jge
out
rcl
mov
mov
daa
addr16
add
sti
lret
ficoms
repz
lret
outsb
and
xchg
xor
and
sbb
int
dec
dec
fnstenv
pusha
cli
mov
adc
dec
push
sbb
pop
add
jge
lea
subl
mov
jno
das
inc
or
std
mov
and
sbb
jl
daa
repnz
movsb
sbb
cmpsb
mov
out
movsl
xchg
or
imul
sub
sub
push
xchg
shll
dec
xchg
mov
adc
je
out
push
imul
cmp
lret
fildll
mov
das
xor
mov
adc
sarl
mov
es
shr
push
imul
mov
mov
add
ss
add
sbb
sbb
sub
xor
jp
outsb
sahf
fwait
push
jbe
and
mov
jmp
dec
adc
or
in
pop
std
das
or
mulb
inc
inc
mov
ret
cmpsl
jae
jns
cltd
mov
outsl
adc
test
fcoms
loop
rolb
insl
jns
outsl
mov
adc
cmc
lret
fs
mov
jp
incb
inc
jmp
adc
test
lahf
dec
add
cmc
loopne
xchg
incb
mov
cmc
cmpsl
xor
inc
and
test
dec
push
xchg
mov
xchg
sub
arpl
mov
mov
fs
sub
arpl
push
insl
sub
nop
inc
or
and
iret
rcll
jecxz
xchg
mov
jne
add
pop
lods
std
xor
mov
testl
cmp
cmp
cmpsb
cmp
cmp
js
leave
mov
pop
jo
push
jno
sub
daa
sbb
xor
mov
dec
pop
pop
pop
push
cmpsb
dec
and
push
cmpsb
lahf
sahf
pop
in
sbb
int
rclb
jno
ror
mull
add
adc
lock
imul
and
jno
cmp
aad
stc
std
test
aam
push
je
ret
sub
and
xchg
pushf
stos
xor
inc
mov
lahf
xchg
mov
mov
aad
loopne
sub
push
xchg
xlat
sbb
adc
push
fildl
cli
xor
or
arpl
xchg
mov
push
fidivrs
out
pop
mov
sub
incb
xor
jno
faddl
mov
fdivl
addr16
dec
xlat
cmp
jno
pop
mov
push
dec
add
pop
xchg
cmp
adc
sub
inc
or
cmp
inc
pop
loop
out
inc
mov
hlt
jne
scas
push
adc
cmp
test
adc
jb
js
pop
adc
pusha
fdiv
inc
xchg
mov
jne
sarb
mov
loop
movsl
js
cmp
shl
std
mov
rclb
inc
sub
es
xchg
adc
outsb
push
cs
push
inc
lods
mov
test
out
mov
push
in
xlat
out
stc
mov
stc
or
fs
inc
mov
in
add
jecxz
repz
movsb
mov
pushf
addb
inc
add
out
jbe
fistps
dec
test
fimuls
or
pushaw
inc
adc
sti
lcall
jmp
sbb
ret
jp
or
or
shll
jne
aad
push
gs
orl
movsb
mov
adc
mov
adc
push
andl
ret
imul
mov
add
fstpt
and
test
mov
repnz
mov
lock
pusha
push
out
sahf
fsubrl
add
push
cld
js
sbb
inc
dec
and
add
fs
mov
xchg
xor
je
jg
daa
dec
jns
outsl
add
xchg
pop
xor
sub
bound
sub
repnz
xchg
jmp
and
imul
xchg
push
push
push
fstpl
ror
stos
cmp
sub
repnz
xchg
cmpsl
push
pop
mov
dec
xchg
jno
push
addr16
mov
fwait
pop
xchg
lea
cmc
in
push
insb
xor
movl
cmp
push
sub
push
mov
int
cs
add
fimuls
ret
arpl
xor
into
xor
ret
xor
lret
les
rcrl
addr16
aam
sti
lds
popf
jmp
insl
push
xchg
and
fldt
jno
sub
and
xchg
faddp
into
sub
lods
loopne
add
mov
push
les
cmpsb
mov
xchg
mov
or
fwait
jo
call
ljmp
arpl
sbb
mov
and
mov
push
xchg
jg
dec
repnz
jns
cmp
repnz
mov
clc
or
sub
iret
cmp
sti
rclb
push
or
jbe
cltd
shll
notb
and
dec
shl
mov
mov
adc
pop
push
xchg
loop
scas
fwait
mov
mov
in
mov
ljmp
pop
scas
lds
dec
loopne
push
fimuls
outsb
fcoms
mov
and
dec
movsb
sub
addb
ds
fadds
push
dec
push
adc
or
sbb
jge
add
in
xor
add
jae
stc
mov
inc
mov
mov
inc
adc
lods
xchg
test
pop
jg
bndstx
jecxz
push
stos
in
aaa
daa
dec
mov
in
test
mov
insl
clc
pop
push
in
mov
shrl
addr16
and
jmp
push
out
add
xor
dec
sti
jb
repz
lret
leave
out
sbbl
imul
or
sub
pop
dec
arpl
mov
sbb
mov
mov
divl
in
les
mov
mov
test
mov
jno
fdivl
dec
enter
push
jl
mov
inc
in
aam
add
daa
pushf
pop
jg
dec
repz
cmc
jmp
jo
cmp
inc
add
xlat
scas
mov
push
insb
jecxz
adc
aas
maxps
mov
xor
rorb
mov
adc
add
cld
mov
testb
dec
mov
fs
push
mov
das
hlt
int3
cmc
pop
icebp
inc
je
lcall
loopne
push
xor
pcmpeqb
xchg
add
inc
push
mov
ljmp
push
popf
dec
fwait
push
lret
add
xchg
and
mov
aam
sub
mov
sti
dec
aam
jno
push
jp
add
xor
mov
or
mov
rcrb
gs
jecxz
arpl
lds
adc
mov
mov
sbb
dec
imul
adc
stos
or
lods
inc
or
outsb
pusha
ret
ret
jecxz
xchg
cs
or
or
cmp
adc
push
jl
jge
imul
lods
cli
xchg
arpl
xchg
sarl
popf
es
fs
xlat
mov
cwtl
and
repnz
in
mov
xchg
cmp
dec
jo
repz
rorl
sbb
jmp
sti
insb
push
adc
ljmp
mov
aad
repnz
pop
jo
scas
jb
add
sti
xchg
lock
sbb
push
push
movsl
cwtl
pop
flds
push
jo
movsb
pop
stos
inc
daa
cmpb
mov
hlt
out
mov
outsl
mov
xor
inc
outsb
pop
outsl
stos
jae
jae
sbb
lcall
mov
sub
jge
push
jl
insl
xchg
and
and
mov
jns
aad
mov
adc
orb
shlb
dec
ret
outsb
ficoml
js
ret
push
mov
pop
fcoms
push
cwtl
mov
and
in
pop
std
filds
inc
mov
rolb
test
adc
xor
or
icebp
cli
inc
sbb
jge
cmp
ret
push
lahf
or
mov
xor
mov
sbb
push
rorl
jecxz
xlat
mov
into
decl
cmp
inc
and
outsb
adc
push
mov
xchg
cmp
sbb
jbe
mov
mov
dec
test
inc
ljmp
lret
mov
cmp
insb
aas
call
lret
push
mov
pop
xchg
xor
into
mov
push
xchg
lods
scas
mov
and
out
jp
pop
mov
jmp
gs
cmp
xchg
push
dec
lods
sub
sub
cmp
sbb
or
lods
adc
std
lds
xchg
ss
xchg
mov
call
mov
insb
dec
inc
sarb
paddusw
pop
jo
bound
mov
mov
in
and
inc
sbb
lods
roll
xor
cmp
jl
pusha
dec
enter
scas
lock
rcl
fsubrl
cmpsb
pop
fwait
shl
imul
cmpsb
je
push
loop
imull
gs
mov
jne
xchg
cmpsl
dec
add
push
lahf
stc
jns
nop
jnp
loop
pushf
insb
cmp
inc
out
dec
les
jmp
test
test
into
rcll
mov
popa
add
mov
sub
call
daa
insb
int
pop
loope
lahf
lds
mov
mov
int3
sbb
cmpsb
in
xchg
xchg
stos
push
dec
jb
das
mov
dec
ret
bound
sbb
or
cwtl
je
dec
jae
add
inc
sbb
mov
js
mov
mov
mov
add
outsl
insb
push
cmp
jno
ret
pusha
inc
shrb
add
xchg
cmp
pop
mov
push
out
fsqrt
test
aas
loop
xor
pop
scas
cwtl
or
jp
mov
cmp
cltd
ret
mov
push
xchg
inc
xchg
sub
push
pop
cli
xor
rcl
push
stos
add
sbb
movsl
xor
fcmovne
fistl
inc
lods
adc
jl
cmp
mov
sub
aaa
mov
mov
inc
insb
pop
dec
lcall
imull
lds
in
pop
loop
lret
call
js
test
inc
pop
lods
test
nop
add
mov
adc
mov
aaa
inc
push
sub
sbb
int3
mov
out
insb
mov
lret
cmpsb
xchg
into
mov
aaa
out
sub
push
setns
xor
jg
in
xor
nop
test
addr16
sti
inc
nop
fimull
test
out
xchg
fmull
push
imulb
add
lret
xorb
hlt
xor
jg
movsl
xor
icebp
out
jo
repnz
inc
sti
mov
pop
pop
outsl
xchg
push
mov
cld
daa
nopl
push
mov
adc
inc
sahf
dec
adcl
ficoml
jp
xlat
ss
mov
cmp
shll
gs
cs
icebp
xchg
in
jle,pt
cmp
movsl
push
adc
mov
fmull
inc
push
movsl
fsubl
inc
mov
bound
sbb
adc
mov
push
fs
sub
jns
or
fs
and
inc
jno
call
aaa
mov
pusha
shlb
into
lahf
add
dec
in
sbb
dec
lret
mov
ds
or
les
out
ret
jbe
xchg
pop
cmp
pop
pop
aam
lcall
add
into
test
add
or
pop
bound
pushf
jnp
dec
mov
aaa
inc
es
hlt
jb
inc
pop
or
mov
cmp
or
mov
inc
movsb
mov
sbb
iret
shrb
gs
movsl
mov
jo
cmpsb
ret
push
mov
popa
ja
push
test
lock
in
adc
cmpl
sub
fs
push
sahf
in
xor
js
arpl
xchg
or
imul
ret
and
insl
iret
push
push
push
pop
jb
xor
xlat
in
jmp
mov
ss
sti
mov
test
arpl
roll
inc
movsl
scas
sbb
sbb
data16
cld
out
sar
popf
mov
out
pop
or
xchg
and
pop
cli
into
dec
cmp
lahf
aaa
push
repz
or
nop
pop
sbb
cmpl
pop
add
leave
iret
shlb
inc
fldcw
add
xor
popf
rolb
xlat
xchg
xor
stos
scas
push
mov
jecxz
cmp
sbb
les
dec
rcrb
jle
cld
ret
adc
adc
jge
xor
xchg
cmp
push
sub
push
push
adc
inc
cmc
push
iret
icebp
int3
movsb
sub
push
jl
rorl
dec
movsl
jge
sahf
push
in
repz
imul
loopne
lret
mov
cwtl
or
ret
popa
mov
push
popa
arpl
xchg
mov
aaa
enter
mov
test
or
jo
and
addl
fstps
push
pop
sub
jl
mov
xchg
pop
icebp
jb
cmpsl
and
cmp
push
and
or
filds
add
subb
cmp
pop
jg
sahf
int3
fsub
scas
xchg
push
dec
fstpt
cmpsl
andb
repz
add
nop
mov
sbb
mov
mov
movsl
xor
xchg
mov
push
xchg
das
je
in
mov
pusha
or
in
ja
sub
xchg
push
and
fstpl
stos
and
pop
mov
fcomp
js
jecxz
in
mov
inc
mov
jg
icebp
out
xor
xor
push
pop
mov
jns
leave
adc
fdivl
or
jecxz
sub
lea
cmc
loope
jl
fwait
dec
mov
lds
mov
or
mov
repz
js
jnp
mov
jo
sbb
ja
call
jl
movl
jmp
nop
and
add
sub
dec
inc
and
aam
mov
pop
sbb
clc
mov
insl
xchg
inc
leave
das
imul
imul
pusha
ljmp
pop
adc
xor
enter
loopne
push
and
cli
repz
popa
call
sbb
jge
add
pusha
jle
pushf
jno
sbb
loope
mov
dec
xchg
hlt
fs
push
mov
and
pop
xor
aaa
and
sub
add
or
push
adcb
movsl
jo
std
mov
mov
addr16
push
ljmp
dec
xor
test
pop
test
mov
jge
pop
pop
movsb
call
xchg
jmp
imul
xchg
xchg
xchg
dec
cs
std
and
add
dec
push
addr16
imul
orl
fwait
das
sbb
xor
push
test
push
incl
push
or
cmpl
xchg
and
xor
jg
jo
test
xchg
mov
icebp
test
or
xchg
int
ljmp
pushf
mov
xchg
outsb
test
hlt
sbb
cmp
sti
lret
std
fwait
sbb
cmpsl
nop
mov
mov
es
jae
cmpsl
xchg
lcall
mov
and
mov
flds
adc
xor
flds
pop
popa
xlat
or
loope
ss
daa
and
dec
mov
aad
lahf
nop
les
xchg
or
mov
and
and
xchg
mov
push
pop
mov
xchg
pop
xchg
or
jne
xlat
shl
das
cmp
idiv
lock
das
imul
add
cltd
and
aaa
out
outsl
xor
pop
push
fbld
push
pop
add
lahf
lods
stos
add
pop
lods
dec
or
lret
push
adc
gs
outsb
insl
sbb
mov
popf
hlt
addr16
cmp
es
sub
sbb
jns
mov
mov
aad
pushf
cltd
shrb
je
test
bound
call
push
data16
sbb
adc
ss
jg
rcrb
out
cmp
and
cs
push
in
cwtl
pusha
mov
int
das
mov
int
ja
imul
adc
xchg
push
bound
inc
mov
push
fiadds
jo
das
js
pop
lahf
repz
jl
mov
loop
mov
mov
sti
sbb
and
adc
push
fs
mov
xchg
pop
sar
or
fld
jp
xor
imul
fistps
push
testl
or
mov
inc
lret
scas
adc
call
in
loopne
ds
notb
push
push
adc
push
xlat
cmp
data16
pop
in
dec
insb
dec
mov
sbb
xor
out
repz
push
outsb
stos
lea
dec
pop
xorl
mov
cmpsb
xchg
xchg
ret
dec
data16
mov
test
fucomi
movsl
scas
pop
sbb
push
push
cmp
pop
cmpsb
dec
lret
jmp
xor
aam
mov
inc
mov
sub
das
fs
push
cmp
xor
xchg
xchg
rcl
data16
insl
int3
repz
frstor
push
mov
js
pop
cld
push
xchg
pushf
shlb
shrl
sti
lahf
or
lcall
aaa
int
push
sbb
es
push
inc
aas
lret
xor
test
mov
mov
mov
adc
dec
rcr
jb
xchg
jg
ss
xchg
sub
ja
pop
daa
les
xor
jno
daa
push
int
mov
push
imul
jnp
inc
push
dec
and
lods
outsb
fsubr
dec
mov
popa
mov
push
jno
inc
or
out
scas
mov
pop
adc
xor
mov
xor
or
dec
xchg
je
push
test
jo
cmpsl
dec
faddl
sbb
stos
sbb
jne
ss
mov
push
lret
lea
adc
out
andl
xchg
adc
push
and
call
dec
mov
jmp
pop
mov
add
mov
mov
inc
repz
lds
pop
pop
inc
rcrb
cltd
push
cmp
stc
sar
mov
mov
sub
xor
imul
aaa
or
dec
test
aaa
jae
jno
xor
adc
test
lret
aaa
daa
push
lahf
sub
movsl
mov
pop
data16
cmpsb
jb
jle
xor
jae
sub
xchg
ds
mov
loopne
mov
dec
rolb
and
out
xchg
jae
adc
es
cmpsl
mov
addr16
or
jne
add
mov
ss
inc
dec
cmp
ss
loope
cld
and
fcoml
pop
push
test
mov
int3
mov
xchg
ret
sbb
push
frstor
adc
push
cmp
rolb
shrb
mov
mov
push
mov
sub
aad
mov
out
and
push
inc
sbb
test
psrlq
jmp
cmpsb
pop
popa
jle
pop
mov
outsb
sbb
dec
test
sub
inc
ss
loope
xlat
xor
xor
xor
movsl
jns
out
lods
lret
mov
pop
cltd
in
inc
lahf
push
out
cwtl
insb
mov
lret
xchg
cmp
mov
lea
out
or
jge
fdivr
out
mov
mov
cmp
stc
stos
sub
and
or
sbb
xchg
and
pushf
leave
aad
out
cmpsl
into
sahf
gs
mov
dec
xor
aad
xchg
mov
movsl
cmp
push
jne
and
or
call
jno
xchg
dec
jae
sub
push
add
add
jmp
in
lds
in
pop
add
mov
lea
adc
aam
cwtl
pop
sbb
stos
ja
mov
scas
mov
sbb
fwait
jns
push
repz
rcl
xor
ss
add
shrb
imul
push
out
int
push
daa
insl
pop
inc
push
push
mov
mov
lcall
add
xchg
push
adc
push
jge
xchg
jb
ret
mov
mov
add
and
xor
daa
pop
mul
daa
scas
xlat
cltd
cmp
jbe
sub
push
mov
xor
stos
jns
dec
fildll
sub
mov
lock
jno
cmpsl
jae
out
lea
test
mov
jne
sbb
jbe
and
imul
dec
pop
add
cmp
adc
scas
add
fmul
hlt
push
push
inc
mov
mov
jl
sarb
int
dec
hlt
lds
out
lret
cwtl
iret
adc
pop
cld
imul
outsl
es
mov
cmp
and
jp
das
sbb
cmpsb
cli
cmpsl
mov
mov
xor
dec
or
inc
or
xor
insl
mov
mov
jg
or
mov
filds
push
sub
pop
sbb
fists
jnp
lock
push
movsb
std
jnp
into
dec
es
mov
push
mov
push
or
pop
fistps
lds
cmpb
adc
outsl
push
mov
xor
cltd
inc
jge
cmpsl
pop
mov
mov
mov
shr
jae
pop
cli
cmc
jmp
je
sub
shr
inc
inc
xchg
adc
lret
stc
mov
push
in
int3
es
pop
iret
cmp
dec
xor
pop
out
arpl
je
aad
jmp
mov
mov
dec
push
xor
sbb
or
jmp
movsl
sbbl
cltd
test
int3
fsub
mov
push
mov
ds
ljmp
xor
call
mov
push
dec
fstps
cld
hlt
pushf
movsl
fwait
adc
push
mov
xchg
lock
add
xor
ljmp
repnz
dec
fistps
jns
cli
repz
push
and
jo
mov
bound
daa
mov
add
insb
ljmp
jg
add
xor
mov
xor
jg
mov
dec
fdivrl
cltd
sbb
jb
imul
faddl
cmp
aad
mov
clc
das
mov
lret
xor
jp
sbb
mov
cmp
push
in
in
xlat
dec
xchg
ss
sbb
unpcklps
adc
int
cmp
packsswb
ja
mov
cmp
xlat
fldenv
lods
inc
cmpb
push
out
data16
add
sub
push
in
mov
push
push
les
outsb
and
add
movsb
inc
xchg
or
frstor
test
pop
js
dec
ficomps
or
insl
cmp
pop
hlt
es
out
daa
mov
arpl
fisubrs
lahf
xchg
aaa
jl
out
mul
orb
or
xchg
mov
daa
xor
jge
out
pop
stos
and
mov
add
sbb
push
mov
push
lock
cmp
std
jecxz
push
push
cltd
int3
mov
leave
scas
xor
mov
roll
and
jecxz
sbb
imul
rolb
xor
sbb
insl
sahf
sarb
adc
xor
and
or
cld
mov
sub
lret
stc
pop
enter
xor
psllq
filds
inc
sbb
outsb
fwait
cmp
pop
or
dec
mov
out
repz
mov
inc
adc
setns
in
iret
inc
in
push
cmc
mov
mov
aaa
xor
sub
xchg
cwtl
in
fldcw
mov
and
cmp
adc
in
ljmp
fildll
addr16
sbb
inc
loope
cmp
dec
es
cmp
daa
out
xchg
cli
addl
ss
push
xchg
fs
ret
scas
or
mov
movsb
dec
cmp
jns
insb
nop
repz
lcall
sbb
test
jmp
dec
shll
adc
inc
dec
inc
aam
js
lahf
pop
aam
loop
adcb
pop
mov
jae
mov
insl
sub
add
daa
cmpsb
ja
outsl
adc
cmp
fsubr
stos
sub
sub
pusha
pop
sbb
stos
arpl
outsb
lods
gs
jns
mov
push
push
jnp
ljmp
pop
test
add
adc
jge
roll
loopne
mov
dec
sub
jl
add
int3
aam
mov
mov
mov
ljmp
dec
cwtl
cmp
inc
mov
mov
pop
push
adc
mov
scas
mov
pop
push
std
out
xor
dec
mov
mov
dec
mov
int3
fistpll
mov
jecxz
cmp
dec
jp
stc
stos
cli
mov
aaa
inc
movsb
xor
xor
jb
and
movsb
mov
flds
mov
lds
fcomip
dec
stc
addb
sbb
push
lock
and
xchg
cmp
loopne
out
xlat
cmp
pushf
ficompl
mov
and
popa
test
xchg
rcrl
movsb
cmp
outsb
add
dec
sbb
and
mov
lahf
ljmp
aaa
stos
mov
out
push
sub
in
subl
sub
and
out
pop
mov
insb
jmp
and
mov
mov
and
and
filds
xlat
mov
xchg
lods
faddp
das
stos
addr16
inc
pcmpgtd
push
fsubrl
mulb
sbb
mov
popf
fnstsw
shrb
andl
jmp
cltd
or
notb
dec
test
das
int3
and
dec
mov
add
sub
sbb
cmp
out
fisubrl
lret
out
stos
test
lds
cmp
imul
adc
push
sub
ret
insl
push
adcl
fstpl
fists
and
nop
cmp
cmp
or
cmc
xchg
push
aam
test
jg
sub
lea
push
inc
sub
push
jns
xor
push
arpl
jp
xchg
jae
inc
lcall
dec
ljmp
add
ret
cmp
ret
in
sbb
imul
xlat
sbb
scas
jae
add
and
adc
cmp
ja
sub
fisttpll
cmp
mov
mov
sub
push
repz
aad
push
sub
and
lahf
mov
jb
aam
push
sbb
bswap
xchg
or
cmp
jo
shrb
call
mov
and
repnz
sbbl
sub
into
es
ss
ss
sub
out
push
xchg
out
pop
mov
aad
jae
adc
lea
fmuls
push
int3
dec
scas
fcoml
cltd
icebp
inc
sub
mov
mov
mov
push
mov
lods
or
push
push
into
sbb
pop
dec
test
bound
lds
sahf
push
aaa
cli
adc
test
mov
shll
outsl
mov
cmpsb
jl
pop
movsb
push
pcmpeqb
mov
fildl
sub
adc
xor
pop
loopne
mov
rcrl
cmp
in
push
xchg
or
pop
sub
xchg
dec
test
fdivp
ljmp
cmpsb
popf
adc
jae
pop
lods
jp
pop
shrb
add
jae
fs
sbb
adc
popa
xor
gs
mov
imul
das
outsb
int3
pop
aad
mov
push
fs
aam
cltd
lcall
add
and
sbb
fisubl
jg
fucomp
xlat
fs
xchg
pop
popf
jns
mov
jg
dec
loop
cmpsl
fsts
ret
das
cwtl
sbb
pop
mov
addr16
sbb
cwtl
stos
loope
dec
adc
fs
ds
gs
js
adc
pop
faddp
rdmsr
push
jg
cmp
xchg
and
fwait
cmpsl
insl
lahf
push
insl
test
inc
pop
lahf
dec
adc
adc
cmpsl
test
cld
fcoms
mov
sbb
call
sahf
sub
rorb
adc
cmpsl
and
xchg
sarl
mov
test
sub
jae
jnp
cmp
out
scas
mov
add
inc
aam
xchg
fnstenv
int
xor
cmpsb
jle
cmp
push
mov
fsub
cs
movsl
outsb
cmc
pop
sbb
lods
mov
fxch
add
lret
mov
leave
push
stos
incb
aad
mov
push
lahf
or
pop
xchg
fldt
xchg
jmp
dec
xchg
sub
in
stos
pop
dec
popf
imul
daa
push
nop
outsl
xchg
dec
xchg
test
inc
outsl
add
mov
icebp
lret
cltd
clc
nop
lock
mov
lret
subb
pop
push
xor
out
dec
fnsave
sti
pop
inc
lcall
stc
cmp
jns
sarl
xchg
cltd
pop
push
faddl
shrb
in
ret
inc
pop
ss
xchg
or
imul
gs
scas
aaa
sub
mov
daa
cli
adcl
repnz
mov
pop
jo
sbb
in
hlt
fsubl
je
cld
mov
lods
xchg
jg
xor
jne
loop
xlat
pop
fmull
mulb
ficompl
addl
loope
ja
lahf
mov
int3
cld
repnz
inc
loop
mov
fstp
and
xchg
mov
pusha
sub
cmp
mov
mov
xor
ja
add
cmp
xchg
stc
lahf
jg
shll
popa
or
sahf
dec
and
pop
loope
sub
xchg
xor
pop
incb
add
and
jl
jb
call
xor
test
outsb
arpl
aam
cmp
sub
ret
in
cs
shr
inc
lds
jp
push
xor
lds
cmp
sbbb
xchg
add
mov
sbb
and
subl
lods
ret
lcall
mov
sbb
sub
cmpsl
fdivs
ds
add
jmp
cmp
xchg
or
jns
or
loopne
pop
repz
sub
outsb
scas
xor
jns
push
fsubr
sbb
popf
xor
jo
lcall
xchg
ret
loopne
xchg
sahf
in
xlat
out
mov
lock
push
or
and
jne
aaa
dec
adc
fwait
imul
dec
pop
mov
fisubrl
mov
xchg
mov
push
xchg
jecxz
adcb
ret
in
inc
pop
push
mov
push
mov
lea
xor
mov
inc
les
cmp
mov
int
cmp
int3
add
pop
mulb
sbb
dec
ds
jge
dec
cmpsl
xchg
cmpsl
mov
add
cmpsl
push
cmc
test
nop
inc
xor
mov
mov
imul
ljmp
or
jp
pop
orl
dec
inc
neg
call
ficoml
dec
dec
dec
or
sub
mov
mov
push
popf
imul
cmp
inc
nop
push
insb
xor
shl
ret
or
xor
jb
pop
pushf
xchg
mov
cmpsl
sbb
popf
fnstcw
lods
fs
insl
xorb
fistpll
and
enter
dec
hlt
out
jl
sub
outsl
push
cwtl
lret
repnz
cmp
adc
rcrb
ret
pop
push
adc
pop
pop
adc
rep
fimuls
aam
mov
xor
inc
xchg
sbb
xchg
pop
fcoml
lret
xchg
lret
inc
rolb
rclb
add
lahf
cmc
les
mov
fimull
sbb
push
sub
inc
test
hlt
call
xchg
mov
lahf
incb
mov
call
push
dec
addl
adc
inc
jl
je
mov
iret
add
xchg
cwtl
and
mov
mov
gs
inc
jg
and
inc
dec
shl
mov
into
push
sub
imull
sub
jecxz
and
pop
mov
fists
jg
cmpb
mov
xor
loope
add
xchg
sbb
xchg
insb
test
and
mov
or
sbb
cmp
mov
dec
lret
into
or
shlb
cmp
enter
push
sbb
cmpsl
xor
enter
sahf
lock
cmpsl
or
mov
xor
cwtl
adc
in
daa
mov
aaa
add
int3
sub
filds
cwtl
mov
mov
lods
rcl
push
loope
leave
push
pop
test
jle
or
mov
cli
cmp
rolb
into
cltd
daa
jns
insl
pop
cmpsl
repz
fsts
rcl
inc
test
int
fidivs
xor
adc
push
or
dec
test
mov
push
push
and
dec
stc
arpl
lds
mov
jle
in
add
sbb
add
sub
cmp
inc
jb
add
mov
rclb
push
mov
and
cmp
inc
adc
imul
cltd
frstor
push
fldcw
leave
adc
popf
mov
test
mov
lds
cmp
push
in
addb
pop
mov
jp
push
mov
xor
mov
rcr
mov
or
xlat
mov
shll
or
gs
aad
add
xor
divl
out
and
lock
xchg
cmc
xchg
test
pop
adc
mov
imul
orb
mov
add
cmpsb
rorl
inc
xor
xor
test
cwtl
xlat
sbb
and
bound
cmc
jg
pop
bound
fisubl
mov
rorl
push
rorb
mov
dec
mov
andl
incb
sbb
inc
pop
push
es
mov
or
fwait
lret
sbb
gs
push
push
or
cmp
js
js
dec
repz
cmc
pop
mov
call
cli
je
dec
xor
int
test
xchg
xchg
xchg
push
out
xor
cmc
fnstcw
mov
aam
addr16
adc
mov
shll
xlat
mov
movsl
sbb
pushl
mov
test
in
adc
inc
mov
add
mov
sbb
adc
testb
lret
fwait
aas
mov
jns
pop
inc
icebp
dec
pop
mov
push
xchg
cmpsl
dec
push
out
sub
lods
cmp
call
xchg
loopne
mov
jns
in
jns
bound
fcompl
fsubl
sub
push
jmp
cwtl
xor
dec
mov
aas
mov
mov
das
fldenv
add
sub
mov
add
leave
or
push
sub
cmp
cmp
leave
add
sub
and
clc
cmp
jbe
xchg
lret
pop
sub
fsub
xchg
push
and
jb
mov
ficoms
adc
inc
daa
pop
arpl
or
jbe
jo
and
mov
xor
adc
jo
cmpsb
icebp
loope
aas
sbb
and
dec
and
xor
mov
loop
int
shl
xchg
cli
out
jp
sbb
xchg
jo
sub
mov
pop
out
adc
repnz
pop
aam
sahf
push
lret
inc
inc
push
ficomps
out
add
push
pop
jmp
call
test
add
pop
pop
sub
add
xchg
ds
push
sub
push
pop
out
lods
stos
loopne
or
xor
sarl
pushf
xchg
lcall
or
jle
pushf
dec
fimuls
cli
push
mov
mov
mov
pop
insb
push
push
xchg
mov
gs
push
pop
push
sbb
xor
dec
and
iret
orl
adcb
das
popf
pop
std
inc
in
jle
es
jae
jbe
mov
negl
pusha
xor
imull
push
or
or
dec
out
fs
test
jno
leave
addr16
out
inc
iret
dec
xchg
mov
outsb
dec
jle
ret
and
adc
mov
into
stos
jl
adc
cmpsb
xchg
sti
cwtl
les
push
lea
cmp
repnz
aaa
test
mov
mov
cmp
sub
push
push
lock
cwtl
and
movsb
mov
and
inc
mov
insl
push
add
jp
push
cmpsw
push
call
shlb
adc
jmp
lock
cmp
pop
xchg
cli
stos
cwtl
cli
or
or
leave
in
or
inc
nop
mov
loope
adc
stos
fsubs
sbb
cmp
add
in
adc
cmp
push
insb
lcall
lods
inc
repz
jecxz
xchg
xchg
enter
subb
mov
sbb
js
test
fwait
xchg
dec
cld
adc
into
lcall
jp
and
out
movsl
js
and
xchg
rcll
nop
lret
or
push
roll
loop
and
ret
push
test
sub
and
xor
mov
inc
push
outsb
xchg
inc
push
fcomps
jae
in
mov
xchg
dec
pop
clc
adcl
pop
xchg
repnz
es
int
add
std
pop
out
jo
out
xor
mov
enter
shl
adc
mov
and
rclb
add
in
sbb
or
push
scas
jl
inc
popa
add
xchg
xchg
cmc
stos
iret
jl
clc
or
xchg
ret
fwait
mov
pop
int
push
jle
mov
xchg
mov
pop
add
scas
cmp
mov
cld
mov
gs
cmp
cmpsl
jecxz
test
inc
and
xor
add
fisubl
sbb
dec
jbe
xchg
or
and
add
int
insl
and
icebp
xor
rorl
jae
push
dec
mov
frstor
sbb
imul
mov
pop
jns
lock
shll
jg
pop
sub
cmp
adc
and
imul
and
sbb
cmpsb
cmp
add
add
push
xchg
hlt
rcr
cmp
aad
stos
pop
shll
mov
mov
ret
nop
xor
and
test
std
mov
inc
call
int3
jno
aad
call
aam
sub
jle
xlat
repnz
pushf
fstl
push
out
add
pop
negl
movsl
and
fs
xor
js
stc
dec
mov
xchg
pop
pop
psubq
dec
dec
mov
xorl
scas
mov
sub
xor
rcrb
mov
cltd
and
nop
pop
xchg
jo
pop
push
insb
mov
aas
aad
and
jnp
lods
repnz
mov
sbb
imulb
mov
push
mulb
push
mov
ljmp
xor
std
push
mov
and
cld
mov
cmpsl
mov
jae
pop
or
cmp
xchg
clc
xchg
sub
push
sbb
notl
aam
add
arpl
sub
jl
sbb
jbe
std
mov
addl
sbb
mov
mov
rorl
adc
mov
addr16
fdivl
loop
push
ror
aaa
fucomi
or
adc
inc
mov
push
xchg
imul
lds
jl
jle
test
hlt
push
mov
jecxz
inc
inc
mov
lods
jle
pushf
jle
jmp
sub
and
mov
mov
jl
and
dec
lcall
sub
push
cltd
and
pusha
mov
cmpsl
mov
inc
in
sbb
lahf
insb
and
xlat
mov
adc
daa
inc
mov
sbb
loopne
pop
jg
lea
ja
cwtl
aas
sub
repz
shrl
push
add
cmp
fsubs
push
sub
pop
pop
push
mov
pop
push
push
stc
jp
jnp
xchg
add
imul
lret
add
jno
jmp
cmp
popa
dec
leave
gs
pop
dec
jecxz
dec
test
shll
or
loopne
pop
sub
cmp
scas
pop
loope
adc
pop
das
dec
nop
in
add
xor
ja
js
sbb
nop
mov
or
xor
inc
das
xchg
sbb
iret
les
test
adcb
push
fnstsw
push
or
mov
sbb
jbe
sub
in
mov
ds
and
in
sahf
pop
cmc
jbe
idivl
sub
mov
das
addr16
testb
lcall
mov
add
xor
fistpl
jne
xchg
xchg
mov
or
push
jns
jmp
lods
pop
lret
mov
jle
cmp
mov
cli
es
fidivl
sub
out
rorb
sbb
ret
stos
mov
or
call
pushf
jns
inc
pusha
or
data16
jo
xor
loop
mov
dec
and
loop
push
bound
xchg
rolb
adc
xchg
pop
jb
sub
add
jp
cmpsl
dec
adc
jle
mov
mov
movb
push
pop
loopne
fnsave
xchg
nop
out
mov
mov
flds
jnp
mov
pop
xchg
js
sub
jb
cmc
ljmpw
scas
cli
shll
pop
pop
xchg
dec
push
sbb
mov
pusha
jno
jnp
mov
iret
fsubl
jo
fidivrl
pop
loop
insb
or
cld
mov
jp
and
mov
jne
ds
sbb
bound
ret
mov
xor
popf
mov
push
mov
push
mov
dec
js
mov
leave
xor
add
inc
fistl
push
loop
or
sub
push
sub
imul
xor
dec
rorb
mov
fdivr
or
cli
lods
aad
loop
pop
mov
pop
insl
jecxz
je
and
adcl
xchg
add
push
es
outsb
inc
repnz
jle
test
or
insl
cmp
xor
cmc
repnz
adc
rcll
ja
sub
or
stos
mov
mov
iret
jbe
xchg
inc
dec
or
lret
xchg
sbb
push
push
adc
movsl
inc
sub
push
xor
fldl
or
cs
lock
je
movsl
rcll
or
or
inc
stos
jns
xchg
jae
loopne
loopne
aaa
sbb
mov
pop
fdivs
jle
cmp
imul
jnp
lds
lea
ja,pt
add
cmp
xchg
mov
rolb
outsl
inc
movsl
icebp
mov
loop
mov
icebp
in
dec
cmp
dec
lahf
dec
jne
dec
aas
mov
and
inc
jmp
int3
lock
xchg
pop
and
mov
stos
popa
add
and
test
push
loopne
nop
xchg
mov
mov
pop
mov
xchg
xor
sbb
push
mov
jp
or
fs
dec
xchg
vmovlpd
sar
rclb
cmp
lods
addb
push
into
mov
xor
mov
dec
lods
jns
sahf
lock
mov
jecxz
mov
rorl
xor
out
mov
add
sahf
xor
pop
or
mov
sub
jbe
mov
jb
jmp
sbb
orl
sub
adc
xchg
aaa
xor
jo
jne
test
or
xchg
aas
xchg
inc
out
jl
xchg
sbb
int
jnp
xlat
popa
cs
fyl2x
pop
mov
push
inc
lods
scas
pop
mov
xchg
mov
stc
ljmp
cmp
fcomip
popf
icebp
xchg
adc
sbb
xor
push
lret
push
sahf
xchg
frstor
insl
in
ret
mov
sub
popa
ss
xlat
in
sbb
pushf
mov
xchg
scas
push
stos
in
xor
dec
xor
test
mov
aad
adc
mov
into
sahf
mov
in
addl
imul
addr16
adc
fucom
push
and
mov
jo
or
outsb
mov
push
and
ds
fwait
push
jbe
cmp
dec
mov
in
adc
push
mov
ret
cwtl
sub
adc
pop
pushf
sbb
add
xchg
jno
or
pop
add
mov
imul
test
mov
in
mov
cmp
xchg
mov
test
scas
cli
or
push
aaa
in
or
xor
dec
dec
jno
stos
mov
loopne
js
or
arpl
in
imul
mov
lret
jmp
sub
mov
pop
xor
mov
mov
cmpsb
mov
xchg
lret
dec
rorb
pop
clc
and
dec
sbb
mov
lods
push
jge
das
daa
adc
mov
imul
sbb
fldz
in
fisttpl
mov
xchg
ret
sbb
mov
mov
pop
imul
dec
sbb
ljmp
mov
test
mov
icebp
shr
enter
in
adc
or
add
cmpsb
clc
das
lret
mov
icebp
or
inc
cmpsb
mov
adc
dec
cmpsl
movsb
inc
int
repz
addr16
xor
pop
and
push
cmp
or
jp
cltd
mov
ja
imul
push
push
insl
repnz
inc
or
mov
icebp
out
adc
add
xor
or
iret
sub
add
fisubrl
jnp
sub
test
xchg
jae
mov
mov
jecxz
push
mov
out
push
xchg
out
xchg
push
cmp
aam
hlt
push
inc
in
push
cmpsl
add
ret
and
lahf
sbb
xlat
test
bound
sbb
outsl
add
mov
or
in
js
es
scas
test
loop
mov
pusha
mov
or
jns
dec
push
mov
mov
gs
jo
pop
rclb
data16
je
rorl
loop
pusha
movsl
cwtl
movsb
es
adc
incl
push
cmp
cmp
cltd
inc
push
popf
lock
jo
enter
sub
test
test
or
mov
xor
into
in
jnp
sub
cmpsl
jno
xor
shl
fisubs
add
lret
sbb
jmp
fimuls
repnz
idivl
popa
cmpb
scas
xchg
dec
mov
dec
inc
pop
xor
push
push
iret
gs
mov
xor
out
adc
shrb
out
pusha
xchg
mov
movsl
sti
test
pop
lea
stos
sbb
add
adc
inc
sub
ja
inc
sbb
mov
mov
jno
or
mov
int
repnz
pop
dec
movsl
mov
sbb
pushl
inc
pop
jbe
in
mov
jae
xor
and
fwait
push
mov
inc
xchg
jecxz
xor
inc
lock
mov
sbb
or
sahf
sub
adc
inc
orb
push
adc
xor
cmpsl
dec
aad
fiadds
xor
and
inc
sbb
or
ljmp
clc
add
xchg
mov
mov
je
mov
call
xchg
sub
int3
fbstp
test
pop
dec
nop
pop
aam
pcmpeqb
dec
jmp
hlt
das
inc
mov
inc
enter
loopne
inc
pop
cmpsb
subb
ret
xchg
fs
cmp
jecxz
mov
xchg
ret
cld
js
filds
sub
inc
imul
jbe
cmp
mov
mov
jmp
push
jg
sbb
cs
clc
dec
cmc
dec
dec
mov
sbb
dec
or
inc
cmc
jns
pop
lods
mov
js
je
push
ficoms
dec
out
xor
gs
jae
repnz
movsb
inc
orb
jle
in
imul
pop
enter
ljmp
mov
mov
icebp
popa
lcall
push
inc
fsubr
and
adc
jnp
adc
pop
mov
xor
int3
loope
leave
dec
in
jmp
xchg
hlt
cli
stc
cmp
out
dec
jecxz
xchg
and
mov
loop
pop
lret
icebp
pop
mov
mov
repz
out
pop
xchg
lret
fwait
add
mov
pop
and
mov
adc
and
mov
adc
mov
js
imul
test
or
clc
and
jno
mov
loop
into
das
fiaddl
test
lods
hlt
imul
xchg
xchg
stos
add
or
outsl
in
push
sub
mov
dec
push
aad
lea
stos
movsl
xor
pop
xchg
enter
das
mov
mov
sbb
test
jnp
aaa
psubusw
in
fdivs
dec
xlat
mov
xchg
xchg
push
sub
aaa
push
ret
test
dec
xlat
ljmp
xchg
in
add
add
sbb
jbe
sti
xor
push
lods
cmp
movsl
mov
push
mov
dec
int3
adc
stos
stos
cmpsl
jmp
rcrb
lret
inc
pop
hlt
xor
sub
popf
xchg
sbb
dec
fistps
aad
and
push
bound
test
cs
das
inc
and
sub
push
fwait
add
xor
iret
fildl
outsb
sbb
movsl
xor
mov
ljmp
mov
pop
enter
sub
push
mov
enter
push
enter
rcll
fs
jge
dec
mov
pop
ds
idivl
jbe
dec
dec
push
pop
int3
sbb
dec
stc
mov
cmp
jbe
ds
jl
cltd
pop
and
add
andl
xor
sbb
pop
dec
test
outsb
shll
adc
lcall
rcrl
data16
fmuls
add
bound
fcmovb
lcall
jg
pushf
ficompl
loop
push
mov
cmp
psubsw
fs
dec
ret
icebp
shll
sub
aaa
negb
fs
adc
sub
mov
testb
popf
push
cmp
js
popf
movsl
popf
cwtl
roll
xor
fisubs
lret
jno
push
enter
pop
cld
hlt
lods
data16
lahf
out
mov
jmp
mov
sub
sub
mov
daa
jle
in
xchg
repnz
xchg
mov
xor
mov
mov
jge
mov
mov
aad
lods
jmp
ret
jns
into
sub
faddp
insb
movsb
mov
jg
push
cltd
sub
mov
js
xchg
jae
sbb
andl
inc
sub
fsubp
fiadds
jg
sub
adc
loope
test
dec
out
xor
mov
ds
mov
sub
das
mov
clc
test
lret
sbbl
imul
daa
xor
inc
jo
hlt
adc
or
dec
and
push
sti
mov
or
ja
mov
inc
inc
int3
or
add
aas
adc
stos
mov
xlat
insl
nop
or
popf
out
xchg
mov
mov
lds
in
fs
stos
movsl
xchg
lock
mov
push
xchg
pop
mov
repnz
add
xor
pop
dec
mul
sahf
lds
inc
loope
xchg
ror
mov
ja,pn
push
cmp
push
adc
add
xchg
jle
fcomps
aam
js
mov
lock
mov
sub
cmpsl
xor
mov
test
out
sub
inc
push
imul
lods
cmp
xor
subb
dec
fsubrl
jp
neg
cmp
movsb
cmc
addr16
sti
mov
test
mov
lods
push
ss
adc
aas
in
jge
pop
sar
insl
inc
insb
push
xchg
in
movb
add
imulb
and
or
jge
mov
mov
frstor
pop
rol
jnp
rcr
pop
test
sbbb
sahf
mov
pop
js
test
cmc
push
iret
ret
nop
mov
in
inc
add
mov
cmp
fs
add
jmp
sub
inc
enter
cld
sti
sbb
mov
sub
in
in
xlat
mov
cmp
cmp
jbe
filds
push
xor
sbb
pop
daa
mov
jno
dec
inc
pop
jno
repnz
bound
lods
fstpt
loop
xchg
jl
testl
shll
insb
scas
out
nop
in
inc
mov
test
ror
outsb
dec
inc
jno
fcmovbe
add
cmpsb
adc
lods
sbb
inc
mov
lods
cwtl
sbb
ja
mov
movsl
stos
mov
or
movsl
cltd
push
aas
dec
sub
jno
dec
fadd
dec
inc
gs
cmp
outsl
ret
xlat
add
pop
cmp
adc
repnz
gs
movsb
adc
js
sub
sub
hlt
stos
xchg
pop
popa
iret
orl
mov
xor
sub
enter
adc
sub
push
divl
adc
inc
adc
jmp
mov
mov
add
sbb
test
lretw
mov
bound
xchg
fsubp
ljmp
pop
jns
js
popf
das
inc
mov
cli
push
push
insb
stos
popf
lahf
sbb
jb
or
cmpsl
cltd
mov
mov
mov
aam
fisttpll
adc
nop
jecxz
push
aaa
add
xchg
repnz
push
cmc
cmp
enter
or
clc
sbb
into
pop
xor
insb
mov
leave
xorb
add
mov
sahf
xchg
xchg
jo
pushf
pop
jne
xor
add
mov
out
push
call
shrb
dec
xor
xchg
scas
arpl
sub
test
jmp
sub
fists
mov
dec
push
hlt
cmp
mov
sbb
das
sbb
shld
daa
xor
clc
addr16
dec
adc
mov
test
or
sub
push
jmp
pushf
ret
inc
and
push
push
pop
dec
mov
xorl
sub
movl
sub
fisttps
test
xor
out
lods
add
pusha
sarl
mov
leave
mov
mov
cld
push
inc
fmull
imul
inc
xchg
int3
ror
inc
aad
scas
lods
faddl
pop
sbb
aaa
outsb
or
xorb
out
and
dec
dec
lret
aaa
xor
add
inc
jnp
clc
inc
lods
scas
test
mov
ret
inc
mull
pop
cmp
mov
pusha
pop
loop
loope
cmpsb
rolb
and
dec
ljmp
arpl
jle
lcall
cltd
fiaddl
xchg
icebp
cmp
lcall
xchg
dec
xor
mov
or
iret
push
pop
mov
jns
and
pop
xor
xchg
int3
lods
test
ret
inc
mov
add
mov
push
and
inc
mov
pop
icebp
jae
faddl
xchg
mov
outsl
out
ss
ret
repz
out
ja
idivb
inc
faddl
sub
loopne
shll
sbb
adc
push
enter
imul
les
ret
pop
mov
lock
popa
pop
ret
stc
and
push
outsl
insb
cmp
mov
sub
sbb
inc
pop
aam
ror
sti
jl,pn
fwait
in
int
jmp
xorl
pop
enter
add
pop
insl
xor
std
shrl
mov
jge
int3
test
mov
jle
push
push
jge
push
jp
inc
add
or
and
cmp
es
lock
rclb
in
jg
sub
pop
mov
pop
ja
lret
lock
push
mov
sub
lahf
jns
popf
out
mov
cmp
rorl
mov
pop
ljmp
xchg
inc
outsl
aam
ljmp
sti
je
mov
shlb
push
enter
fildll
or
xor
mov
push
sub
rcrb
icebp
dec
sarl
aad
inc
cmpsl
data16
pxor
xor
mov
into
dec
dec
cmp
es
mov
scas
xchg
sbb
nop
inc
lods
mov
stos
sub
cmp
addr16
std
cwtl
mov
into
enter
xlat
pop
mov
outsb
rcrl
dec
stos
daa
cmp
mov
mov
pop
cli
add
enter
and
push
in
shlb
bnd
pushf
inc
das
cmpsl
loopne
adc
fdivr
aad
and
pop
sub
or
xchg
sbb
mov
test
lods
xor
dec
xchg
notl
aad
pop
adc
test
xor
arpl
jmp
sahf
or
mov
aad
push
sarb
js
pusha
loop
notl
fsts
mov
xchg
sbb
mov
inc
bound
dec
push
jo
or
dec
cli
rorl
ss
cmp
mov
aaa
stos
pop
ss
cmp
out
sub
and
int
mov
dec
sbb
inc
fimull
pushf
add
sbb
popa
lods
jb
jp
inc
mov
cmp
dec
rolb
in
or
pop
shll
mov
stos
adc
mov
jmp
mov
pop
pop
dec
subb
add
or
aad
add
ret
ja
push
mov
jns
fists
rcrb
pop
mov
dec
pop
mov
jns
push
pusha
or
sarb
lret
dec
stos
cmp
pop
cmpb
xor
xor
dec
xor
inc
mov
sub
mov
mov
stc
sbb
push
negl
iret
push
jp
xchg
fidivl
in
dec
cmp
and
sub
mov
js
jecxz
movsb
push
int3
mov
dec
or
xchg
dec
or
and
into
inc
pop
jo
nop
scas
mov
jne
jp
xchg
orl
sbb
hlt
sub
sarl
fnstcw
imul
and
xchg
sti
dec
lahf
cmpsl
ret
clc
nop
jge
das
mov
sti
sub
jl
cmp
prefetcht0
xor
mov
jne
pop
sub
fbstp
test
pop
jnp
fs
sahf
mov
stos
adc
stc
test
xchg
push
sarb
inc
inc
sbb
mov
sbb
idivl
inc
test
xchg
add
or
sti
fisubl
fs
stos
popa
aam
mov
aas
jmp
pushf
out
sbb
push
push
sub
fisubl
mov
gs
in
scas
jecxz
cli
pop
push
push
js,pt
push
cmp
mov
in
sbb
daa
inc
inc
iret
test
ss
scas
enter
repz
xor
loopne
add
dec
or
pop
sub
pop
mov
scas
or
pop
pop
jp
xor
orl
imul
pop
jb,pt
enter
repnz
or
sub
jge
icebp
into
lret
xorl
rorb
outsb
ds
and
js
and
sbb
ret
mull
pusha
aad
dec
das
movb
shlb
imul
sbbl
leave
push
mov
fsubl
cmp
sbb
mov
enter
das
xor
mov
xchg
out
rolb
push
icebp
pop
dec
mov
cmpsl
sbb
arpl
ss
push
xchg
lods
adc
mov
setnp
dec
jg
add
jp
repnz
sbb
push
jno
or
mov
lcall
dec
dec
cltd
sub
add
and
mov
insb
pop
jno
fldl
fldcw
and
stos
pop
movsb
dec
add
popf
loop
or
add
aas
pop
add
mov
pop
cld
xchg
sar
cmp
cmpsl
sub
stc
pop
adc
xlat
std
inc
shlb
movnti
sub
jbe
inc
sub
shlb
repz
mulps
int3
shrl
jmp
xlat
movb
rorb
icebp
adc
push
xor
aad
push
xor
fwait
xor
xchg
mov
mov
mov
jp
nop
ret
cmpsb
dec
and
jne
out
dec
daa
xchg
add
push
lret
and
push
or
or
add
mov
sub
dec
sti
int
push
shll
repz
xchg
dec
pop
andnps
jecxz
jl
adc
pop
or
cmp
sub
loop
out
mov
ret
xlat
das
es
clc
shlb
mov
sub
xlat
fildl
push
xor
aas
jnp
push
testl
clc
push
in
jnp
pusha
and
fistps
stos
push
stos
sbb
mov
in
out
nop
in
bound
addr16
movb
cmp
pop
int
jb
vmovntps
inc
xchg
sub
jnp
jecxz
or
enter
mov
inc
popf
push
hlt
or
fwait
dec
cmp
add
inc
std
dec
pop
xor
or
jle
pop
lret
and
pop
call
out
jnp
xchg
xor
lcall
rolb
out
xchg
repnz
dec
adc
sub
lahf
xchg
int3
movsl
imul
aaa
sub
xchg
pusha
xor
jp
or
push
sbb
mov
out
nop
xor
adcl
add
push
cmp
dec
sub
out
dec
ja
pop
fwait
arpl
jne
inc
loope
rcrl
mov
mov
jmp
pop
fbld
mov
cs
aad
outsl
insl
dec
add
movsb
repz
inc
dec
xchg
cmc
adc
lods
movsb
inc
out
lea
add
pusha
xorb
int
jb
mov
xchg
loop
pushl
push
xchg
mov
adc
and
sub
and
cmpsl
inc
lods
or
out
pop
inc
in
mov
jnp
dec
mov
sbb
mov
inc
les
icebp
lcall
dec
int3
aaa
aas
lods
mov
ljmp
test
repnz
lock
int
pop
sub
imul
fildll
pop
sbb
addl
ss
movsl
jle
cmp
loope
das
int3
mov
ss
sarb
mov
hlt
movb
or
cli
jmp
stos
mov
ret
pop
in
insb
ljmp
mov
cmp
jg
inc
dec
call
xchg
idivl
inc
out
push
mov
push
stos
sbb
mov
dec
push
imul
jecxz
push
mov
push
inc
adc
movsb
sub
lds
jo
fsub
xor
in
dec
xchg
lret
mov
jecxz
roll
stos
dec
cmp
mov
test
int3
fwait
or
mov
subl
jb
dec
mov
es
call
jge
cmp
pop
jno
pop
dec
test
roll
das
adc
test
aaa
rorb
sbb
dec
aaa
and
jmp
bound
cmpsl
data16
mov
mov
inc
cld
mov
add
fcmovne
mov
pop
dec
mov
lds
xchg
daa
in
lods
mov
call
sub
sub
sahf
xchg
rclw
pop
push
pop
xchg
dec
cmpsb
inc
cmp
cmp
jns
jo
dec
pop
push
jo
aad
push
inc
cltd
jg
lcall
cwtl
xor
repz
lds
addr16
or
in
rcr
jbe
arpl
xor
cmp
jle
data16
mov
ret
fstpl
pop
ret
cld
jp
mov
jle
test
sub
fdivr
inc
xorl
rep
add
jnp
js
inc
push
mov
add
clc
xor
lcall
push
jmp
in
cwtl
cli
fists
test
jne
fstps
ror
pop
sub
push
add
orl
cmpsl
mov
mov
push
nop
andb
inc
idivb
lahf
testl
push
or
jbe
pop
mov
stc
push
gs
enter
stos
push
inc
movsl
xchg
ficompl
cmp
mov
cmp
in
xor
shl
sub
adc
add
repnz
data16
pop
lods
dec
aas
rol
movsl
stos
lods
mov
lret
mov
adc
fcom
inc
inc
jl
cmpsb
jbe
dec
mov
cmp
jle
mov
sarb
std
xchg
ljmp
mov
xor
ja
mov
push
xor
lds
test
jbe
jp
out
aas
out
push
and
pushw
sbb
or
jge
pavgw
mov
mov
mov
lcall
and
and
cmp
mov
sub
jns
xor
insl
sub
fs
aad
lock
jae
mov
lcall
ret
shr
xchg
scas
mov
je
push
movsb
and
dec
inc
jo
icebp
lock
orb
inc
lret
add
js
lds
out
scas
icebp
xlat
repnz
push
inc
mov
incl
jo
mov
mov
add
sarb
aad
inc
movl
push
inc
jl
inc
decl
xchg
xor
loopne
pop
js
or
je
fdivl
jmp
aaa
inc
jp
cmpsb
pop
sbb
stc
mov
and
or
mov
cmpsl
pop
cmp
out
xchg
push
popa
fdivs
sub
movsb
cmp
pop
jnp
adc
aad
or
pusha
outsb
mov
movsb
sarl
subb
insl
fwait
call
push
mov
repz
sub
leave
jmp
arpl
or
push
shll
popf
fildll
lea
idivl
aam
pop
lods
or
push
lcall
add
add
and
xchg
pop
test
sbb
and
mov
mov
repnz
adc
nop
je
out
iret
shr
arpl
jo
loopne
mov
das
cmp
mov
cld
push
and
subb
xchg
mov
push
xchg
xor
inc
aaa
clc
mov
dec
fdivs
mov
rclb
mov
call
xchg
jmp
rolb
out
es
in
mov
sub
xchg
and
cli
int
popf
test
xor
cli
push
scas
jo
jp
pop
loop
inc
in
mov
mov
or
inc
lods
sti
push
pushf
call
xchg
jbe
jmp
sbb
aaa
test
scas
gs
push
cmpsl
jns
loope
sub
xchg
test
inc
in
mov
loopne
sti
dec
test
hlt
ss
dec
sub
xchg
push
xchg
inc
adc
mov
or
insl
cmpsb
and
adc
inc
lcall
mov
pushf
dec
mov
jle
imul
dec
sbb
xor
pop
pop
inc
jmp
aam
repz
movsb
loope
mov
xchg
xor
int3
push
jae
dec
es
pop
lock
mov
mov
cli
pusha
adc
dec
movsb
shrb
push
xchg
movsl
rolb
les
test
dec
fwait
push
sbb
xchg
loop
push
fidivs
push
dec
jno
fwait
jae
mov
aaa
cmp
nop
pop
xchg
mov
fs
dec
dec
divl
out
in
sbb
or
sbb
mov
in
lcall
filds
xchg
push
lods
sar
idivb
popf
add
nop
pop
sarl
sbb
or
je
popf
xchg
ja
mov
std
ja
push
mov
jnp
xor
fdivs
out
sub
decb
cmc
push
jbe
imul
xchg
daa
jno
out
ja
pop
jp
flds
int
fisttpl
mov
push
inc
jnp
jg
int
fnstsw
test
leavew
mov
push
mov
lds
xor
in
sbbl
mov
or
sarb
sub
insl
push
jbe
sub
fildl
mov
leave
cmc
inc
ljmp
pop
mov
inc
int
xchg
mov
cmp
push
iret
push
fistl
add
js
pusha
push
hlt
pusha
sti
in
push
inc
dec
stos
js
shl
xor
outsb
jl
and
dec
cmpsb
cmp
test
sahf
sub
add
add
xchg
mov
and
mov
mov
incb
jg
scas
js
push
out
cmpsl
push
test
mov
test
mov
dec
xor
mov
leave
movb
sub
popl
sbb
gs
mov
push
daa
sbb
or
cs
xor
mov
scas
fucomp
jg
fucomp
lret
sub
push
movl
inc
lahf
iret
icebp
ficompl
xor
test
push
paddusw
imul
push
lret
jb
xchg
jp
das
or
xchg
cmpsb
mov
cs
scas
xlat
pop
push
inc
mov
xchg
ret
gs
imul
lret
test
nop
inc
loop
in
jns
jns
jg
lret
mov
dec
es
fstl
enter
sub
dec
fldcw
loop
pushf
fsub
inc
test
xor
push
pop
mov
pusha
adc
mov
mov
aas
cs
loope
pop
inc
xor
adc
sub
repz
jnp
or
hlt
test
nop
lods
imul
fnstenv
daa
mov
mov
jp
mov
sub
les
es
mov
iret
inc
jecxz
add
fisttpll
shlb
rep
push
ja
xor
cmpsb
jo
and
mov
xlat
mov
adc
cltd
iret
push
sbb
and
or
add
dec
cs
popf
pusha
aam
xchg
dec
push
xchg
es
movl
pushl
lds
add
inc
xor
xor
stos
lods
pop
dec
or
inc
cmpsl
inc
sahf
arpl
add
lds
dec
adc
push
sub
jmp
aad
xchg
test
jmp
pop
rorb
hlt
and
adcl
in
or
outsb
sub
fucompp
clc
les
pusha
jns
inc
lds
adc
adc
jae
dec
popf
lods
cmp
jmp
lret
or
mov
xchg
test
mov
pop
lret
sbb
inc
xchg
stos
data16
and
fnstenv
in
mov
xchg
adc
add
cmp
push
cmp
or
fcmovnb
jo
stos
sub
cld
int3
mov
out
jl
bound
fwait
inc
sbb
adc
fs
lock
stos
lcall
fdivs
sub
jp
push
dec
push
lds
xor
rorb
nop
inc
mov
mov
test
jge
mov
and
mov
or
lds
fnstenv
jae
mov
mov
fmull
jecxz
ds
pop
cli
lret
shrb
xchg
mov
adc
mov
addb
sbbl
aam
bound
pop
or
lahf
outsb
sbb
je
mov
icebp
stos
xor
add
in
int3
push
jo
sbb
cs
push
imul
sbb
stc
or
cmp
pushf
push
mov
lahf
jle
push
pop
cmpsb
xlat
mov
js
flds
mov
pop
pop
push
add
imul
call
lods
and
mov
jae
xchg
add
jl
mov
push
pop
dec
push
popf
ds
dec
pop
fnsave
lcall
sahf
mov
in
int
jecxz
sbb
js
rol
addb
scas
lods
fs
out
xor
add
pop
gs
adc
sub
aad
sbb
or
rcrl
cmpsb
hlt
jle
sub
push
stos
shll
repz
mov
aaa
xor
movsb
jo
sbb
inc
inc
and
sbb
mov
ficompl
insl
fs
mov
push
mov
cmp
cmpsl
out
xor
pop
cli
lods
sbb
popl
movsb
orl
pop
insl
out
cmpsb
cmpl
pushf
cmp
cmp
insl
or
cld
shrb
mov
subl
xor
lock
dec
repnz
js
and
rcr
inc
mov
int
aaa
sub
jl
fnstsw
sahf
pusha
loop
dec
ja
push
bound
aaa
inc
dec
fmuls
xor
push
xor
or
push
rclb
out
popl
stos
cmp
push
cs
in
loope
int3
jmp
les
notl
dec
xor
ret
jge
inc
jne
push
jecxz
sub
mov
test
push
mov
push
adc
and
mov
cmp
addr16
sbb
stos
popa
jbe
ds
dec
int3
ja
ljmp
std
je
cmp
adc
mov
cli
shll
xchg
mov
push
pusha
cmp
fcompl
gs
imul
rol
cmp
loop
popf
dec
xchg
lds
sbb
pop
fldcw
mov
dec
mov
cmpsb
mov
les
pop
and
jp
jbe
inc
rorl
ja
outsb
ja
mov
pop
lahf
lret
jle
fsts
clc
ds
mov
mov
ret
lcall
movsl
out
mov
mov
lcall
mov
and
stos
dec
imul
xchg
test
and
bound
sbb
addr16
aad
adc
xchg
mov
data16
fdivl
xor
fcoml
inc
xchg
or
jne
std
xorb
testb
dec
xchg
jno
out
in
std
adc
and
insb
mov
mov
xor
add
rcr
mov
fsubrl
add
pushf
add
push
fisubrl
popf
inc
push
cwtl
push
mov
sti
scas
inc
adc
test
mov
dec
add
ds
sbb
fnstcw
mov
or
pop
fimull
mov
pop
xchg
sar
push
cwtl
es
jbe
lea
or
xlat
shll
aaa
xlat
adc
into
shrd
push
scas
dec
push
or
cwtl
jp
cmpsb
push
lret
movsb
push
dec
clc
mull
cltd
sbb
lcall
cwtl
repz
push
mov
sbb
cmc
ss
sub
ss
mov
call
lds
jbe
das
sub
clc
cmp
pop
mov
div
mov
outsl
jbe
adc
cmp
out
push
adc
incb
jns
das
das
mov
or
dec
in
cmpb
sub
rcrb
leave
inc
sbb
xor
ljmp
insl
mov
imulb
sub
test
mov
mov
pop
std
lods
pop
fidivl
addr16
or
mov
xlat
add
pushf
pop
pop
gs
adc
cwtl
pushf
pop
into
dec
cwtl
mov
dec
push
push
mov
shrl
scas
mov
jle
lahf
sub
and
inc
push
pushf
imul
mov
mov
mov
fwait
lahf
lcall
stc
fdivl
std
ljmp
icebp
int
dec
ret
pop
dec
ficomps
call
mov
fstpl
lea
mov
cmovo
inc
jle
pop
inc
adc
ds
xor
repz
add
jno
push
or
lea
lods
jg
out
push
sahf
jl
mov
and
mov
xchg
cmp
cmp
outsb
fs
xchg
lcall
pop
jmp
or
cmp
test
jno
fisubs
lock
lea
ss
icebp
xor
sti
add
xchg
jae
sub
sbb
mov
dec
dec
dec
in
cmp
negl
xchg
xchg
hlt
sbb
add
or
push
adc
aas
xchg
cmp
cmpb
xor
sub
je
sbb
scas
insl
sbb
add
and
inc
ret
mov
mov
inc
cltd
jmp
jle
and
adc
or
ret
inc
imul
leave
add
sbb
inc
inc
mov
inc
inc
aam
je
loop
inc
cli
jecxz
out
and
sbb
push
push
stos
and
lock
popa
cs
shlb
cmp
or
enter
push
test
xchg
imul
mov
repz
lods
add
push
ss
or
mov
sarb
pop
mov
loope
shrl
jbe
jb
mov
mov
cmp
test
pop
mov
sub
xor
into
mov
lods
imul
jb
or
cmp
adc
xor
mov
cld
insb
mov
ss
mov
outsl
insb
inc
mov
xchg
shlb
je
test
pop
sbbb
pushf
push
daa
mov
test
flds
xchg
mov
or
cmpsb
xor
mov
mov
push
outsl
in
push
sub
in
jno
rcpps
data16
jge
aaa
mov
fidivs
push
aad
mov
aaa
lahf
push
xchg
push
lock
imul
ljmp
mov
mov
sub
pop
add
xor
mov
stos
int3
cmc
cmp
in
adc
enter
stos
adc
lcall
popa
das
shrb
push
mov
and
in
test
pop
nop
or
or
add
or
jle
rcl
insb
mov
sbb
mov
cmp
xchg
jae
sarb
fs
xor
out
gs
sub
dec
adc
xlat
cmp
inc
pop
call
xorb
sub
aad
sbb
mov
dec
xor
in
ret
dec
incb
in
fimull
xorl
or
adc
push
mov
cwtl
lahf
sbb
popf
lods
push
es
cltd
adc
dec
xchg
inc
sub
in
sub
lods
cmp
add
sbb
dec
xor
push
mov
sub
daa
push
jbe
mov
mov
mov
cmp
cmp
jmp
jmp
push
jmp
jle
dec
lret
add
imul
pop
push
std
int
sub
or
movsl
dec
mov
loope
sahf
ljmp
sub
clc
jmp
test
sub
jae
cmp
cs
mov
mov
inc
xor
sub
xchg
xchg
push
pop
or
movsl
out
ud1
out
mov
mov
push
std
mov
notl
or
jno
sub
pop
scas
pop
fisubl
cmp
adc
xor
and
pop
cmpsb
cmp
test
add
pop
sahf
adc
sub
mov
jl
dec
pop
nop
sub
call
gs
add
aaa
or
stos
jae
jg
adc
or
imul
mov
popa
daa
repz
adc
int
leave
scas
cld
mov
push
decb
cmpsl
pop
pusha
xchg
sub
out
addr16
cmc
jl
add
je,pn
jne
xlat
arpl
icebp
aas
xchg
inc
push
or
mov
iret
adc
push
test
xlat
push
lods
jle
and
jp
cwtl
inc
jge
leave
sbb
jge
sbb
fwait
lods
add
and
shll
ss
sbb
add
into
repz
sub
fldenv
stos
sbb
mov
and
lods
mov
cmp
mov
test
mov
fldcw
idivb
push
sbb
xchg
pop
daa
movsl
out
cltd
mov
lret
xchg
loop
icebp
imul
sahf
xchg
cmp
mov
fsubrl
insb
cmp
ja
callw
test
and
inc
push
cmp
push
inc
call
int3
addr16
ja
fnstcw
add
or
inc
ljmp
xchg
jo
xor
sbb
cli
ss
and
jl
mov
in
xchg
enter
dec
sub
jae
lock
sub
push
cltd
movl
hlt
push
loopne
int3
pop
jno
inc
cwtl
push
mov
inc
mov
jne
dec
stos
sbbl
push
mov
mov
xchg
mov
pop
movsb
insb
sub
sti
inc
in
jl
stos
aas
fmull
mov
divb
fidivrl
cmpsl
push
xchg
inc
jp
les
lods
stc
xor
add
and
xchg
out
repz
fcoms
and
int3
mov
lret
pop
out
xor
sbb
xchg
movsl
dec
or
cmpl
stos
sub
sahf
mov
cltd
mov
pushf
mov
push
mov
int
adc
fdivrl
imul
xor
xchg
pop
sbb
aad
int
in
xchg
nop
dec
cmp
or
inc
ljmp
popa
aad
loopne
pcmpgtd
aam
lock
into
repz
push
pop
aaa
sbb
js
mov
test
hlt
js
inc
xchg
or
scas
xchg
repnz
inc
out
jo
cmp
adc
test
imul
xchg
and
mov
xchg
jnp
rolb
mov
hlt
mov
mov
xorb
mov
lret
aam
fdivrl
aaa
pusha
jno
std
mov
mov
add
cs
push
scas
es
in
or
pop
enter
outsl
push
mov
adc
and
fidivl
in
imul
enter
cs
int3
into
je
or
push
js
jmp
dec
mov
xchg
arpl
mov
adc
adcl
out
xlat
popl
shl
cmp
sbb
imul
aaa
xor
mov
test
mov
aaa
adc
shlb
inc
mov
pop
pop
dec
mov
dec
push
or
in
sbb
outsb
inc
add
imull
or
mov
cmp
lret
sti
adcl
add
mov
in
imul
xor
cmp
adc
jns
fwait
js
sub
outsb
out
pusha
outsl
jno
clc
dec
pop
inc
fwait
test
lret
ljmp
fstpl
dec
mov
cmpl
mov
xorl
mov
sahf
jns
mov
mov
mov
daa
fbstp
mov
cmpsl
addr16
dec
fwait
sbb
mov
xchg
cs
lahf
mov
test
and
ja
scas
negl
xor
add
add
inc
dec
out
jp
pop
fwait
pop
nop
dec
add
arpl
jecxz
dec
push
adc
pop
dec
sub
add
mov
pop
leave
popa
dec
in
inc
fwait
nop
mov
xlat
stc
mov
mov
int3
sbb
sbb
adc
mov
aas
fildl
pushf
fstpl
push
push
add
bound
in
jnp
jge
jnp
out
scas
int3
fisubrl
mov
ret
mov
jg
push
and
nop
out
jns
movsl
jne
mov
aam
add
mov
mov
or
dec
outsl
loope
jno
test
or
cmp
ja
ds
shl
shll
fsubs
ret
mov
sub
mov
xchg
mov
mov
jns
lods
rcrb
push
mov
mov
repz
push
and
push
cmp
xchg
loop
or
or
jnp
in
cmpb
push
insl
shlb
xor
rol
cmp
mov
shrl
jp
adc
clc
stos
adc
sub
pop
movsl
lods
test
out
adc
mov
rcrb
pop
stos
jns
scas
outsb
push
xor
ret
and
fistpll
lahf
xchg
sbb
inc
aam
pop
mov
pop
loop
incl
cmp
mov
inc
sbb
jbe
dec
lock
add
es
shl
adc
jo
and
lds
test
mov
jmp
sbb
fcomps
std
or
pop
jg
jne
or
pop
adc
mov
cmc
adc
sub
jbe
bound
mov
jbe
jg
divl
mov
xor
movsl
mov
and
addr16
or
inc
hlt
cmp
adcb
scas
push
and
outsl
das
test
cmp
or
dec
mov
xchg
xor
and
es
call
or
pop
sub
and
lock
jl
adc
cwtl
add
sbb
ljmp
shlb
repz
int
js
jle
leave
sarl
rolb
xor
fwait
ja
push
loopne
lret
hlt
xor
jl
cmp
aas
test
es
es
fistl
sub
jge
sahf
xchg
js
inc
enter
ja
clc
jg
cmp
dec
xor
mov
scas
mov
pop
pop
add
insl
sbb
and
cld
push
int3
cmp
xchg
sti
les
adc
call
lret
fs
mov
mov
mov
or
push
lock
xchg
add
or
sbb
dec
inc
or
pop
int3
mov
stos
fstpl
in
push
dec
loope
xor
dec
adc
imul
ret
iret
aaa
iret
arpl
clc
cmp
daa
push
shl
out
xor
scas
push
int3
loop
jg
mov
mov
fisubs
and
push
sbb
mov
xor
inc
xor
jl
addr16
inc
pusha
ror
fdivrl
push
xchg
iret
movsl
and
push
loopne
orb
xor
mov
gs
pop
cmpb
mov
adcb
add
pop
nop
pop
enter
jno
mov
inc
inc
fistps
push
or
cmp
adc
push
push
or
sti
mov
mov
shll
mov
imul
fwait
int
shlb
adc
outsl
sub
das
jl
pop
out
repz
mov
shlb
sbb
or
test
sbb
mov
rcrl
sahf
flds
pop
shll
les
ret
cmp
add
sbb
jne
xchg
mov
mov
insb
cmovs
xchg
popf
cmp
sbb
cmp
dec
lods
aam
xor
xchg
jo
pop
cmp
mov
ljmp
dec
xlat
scas
pop
lds
sub
pop
or
push
mov
add
out
push
test
fbstp
mov
jns
hlt
pop
insl
lret
jno
lea
jno
pop
xchg
sub
push
shll
mov
daa
jecxz
lahf
push
xlat
ljmp
push
js
iret
insl
dec
scas
shl
test
sub
jb
xor
nop
sbb
xor
add
push
je
jle
jge
xchg
movb
lock
sub
movsl
inc
adc
add
aas
jge
clc
aad
or
stc
adc
cmc
cs
inc
cwtl
js
jge
stos
fdivrs
xchg
mov
out
pushf
jle
fldt
sub
repz
pusha
jae
stos
push
and
sub
ret
cmp
push
stos
sbb
inc
xor
pop
push
cli
inc
aad
inc
cmp
test
jge
mov
ret
test
mov
shlb
int3
dec
pop
push
orl
clc
scas
into
jmp
and
ja
and
sbb
or
lock
icebp
test
or
mov
and
jne
cmp
ret
mov
cmp
dec
xor
inc
stos
adc
mov
jmp
stc
xchg
out
scas
adc
xchg
mov
sbb
lods
jbe
daa
imul
cmp
lret
push
loopne
jno
icebp
mov
mov
mov
pop
push
enter
mov
scas
mov
leave
imul
or
sub
je
into
mov
push
mov
sub
push
jne
fldcw
lods
in
add
mov
push
andl
fldt
add
xor
push
jne
mov
push
daa
mov
out
cmp
and
testl
add
cmp
iret
mov
ljmp
and
aas
int3
mov
ficompl
mov
sti
ficompl
in
scas
xchg
xor
into
add
test
js
daa
outsb
bound
fisttps
sub
pop
lahf
and
divl
inc
pop
andl
cmp
lret
inc
insl
mov
lock
icebp
test
in
adc
xchg
out
push
roll
inc
dec
popa
inc
pushf
in
pop
jno
in
jbe
pop
mov
rorl
pushf
jne
xlat
gs
rcll
lea
hlt
push
mov
cmp
lods
mov
loop
push
out
xchg
or
arpl
mov
js
xor
jge
sarb
cltd
push
add
or
push
adc
adc
adc
xor
ss
cwtl
out
mov
mov
into
mov
stc
shll
add
xor
fbstp
stc
xor
add
add
cmpsl
in
cld
and
jb
xor
in
ret
or
xchg
pop
cli
push
jnp
sbb
cmp
xchg
test
sub
out
adc
xor
pop
mov
cmc
mov
sub
pop
fwait
or
mov
subl
testl
imulb
fisubs
inc
inc
outsl
fcmovbe
lds
mov
pop
xor
fistps
lods
mov
test
mov
mov
xchg
mov
inc
decl
or
mov
mov
mov
jmp
xchg
or
cmp
xchg
repz
rcrl
fdivs
test
mov
sarl
sub
inc
test
or
fimuls
add
outsl
dec
scas
scas
dec
in
rclb
push
stos
dec
cmp
sbb
aas
push
icebp
cmc
cmpsl
lods
and
repz
lds
bound
shrl
gs
mov
cmp
pop
mov
add
mov
push
loope
shll
jnp
pop
sub
xchg
test
xchg
outsb
inc
mov
mov
or
xor
scas
sub
or
fwait
mov
ss
push
mov
inc
roll
pushf
inc
cmc
clc
popa
sbb
inc
cmc
data16
lret
aad
fsubrs
jmp
adc
xchg
cmpsb
add
int
sub
fimuls
sahf
mov
insb
push
or
in
mov
push
fsubrp
loop
cmp
repz
scas
pop
mov
cmpsw
sub
movsb
es
into
lds
loope
jmp
leave
sbb
jae
cmp
push
jge
mov
gs
jne
loopne
xchg
xor
push
cmp
pop
aad
hlt
sbb
arpl
mov
inc
jecxz
and
es
jo
dec
push
xchg
pop
inc
inc
dec
mov
test
or
out
push
mov
xor
out
sbb
pop
fnstcw
push
cmp
sub
xchg
test
div
jo
ret
dec
mov
sti
ret
jae
js
pop
fcoms
mov
pop
stos
loop
lret
ljmp
ficomps
or
xor
orb
or
clc
out
pop
inc
adc
add
push
hlt
sti
out
mov
or
imul
stos
aaa
in
cmpsb
sub
imul
jl
movsb
mov
shll
mov
imul
add
mov
inc
jmp
lock
sub
aam
and
fdiv
fimuls
hlt
push
and
loope
daa
neg
faddl
adc
ffreep
sub
sbb
push
in
xor
jp
push
data16
adc
add
mov
fwait
xchg
cwtl
imul
cmp
pushf
push
cmpsl
nop
into
cmp
fidivrl
les
aas
das
lret
addl
test
imul
add
xlat
rcr
arpl
push
mulb
cmpsl
cwtl
jmp
mov
cmp
stos
dec
dec
dec
sbb
push
loopne
dec
sahf
inc
cwtl
movsb
sahf
hlt
xchg
push
mov
movsl
adc
mov
dec
in
test
insl
pop
mov
les
ss
pop
shll
and
and
mov
mov
or
jle
and
out
loop
outsl
mov
loop
adc
std
sub
jbe
mov
je
hlt
add
xchg
cld
cmp
jmp
xchg
ret
or
jns
xchg
mov
pop
arpl
dec
jbe
dec
rcrb
pop
dec
sarb
imul
sarb
clc
pop
shrb
imul
out
mov
jle
adc
cmp
push
and
imul
jge
push
sbb
xor
outsb
push
sbb
cmp
xchg
dec
in
and
outsl
mov
mov
test
push
test
push
push
push
lds
mov
jmp
push
cmp
sub
push
in
mov
add
push
sbb
nop
test
sbb
mov
lock
fs
xchg
call
int3
inc
mov
mov
pop
out
pop
fidivs
movsl
adc
xchg
sub
push
jns
xor
movsl
stos
stc
push
cmpsb
pop
xchg
fldcw
scas
push
xor
xchg
repnz
jmp
loop
cmp
sbb
pop
pop
jb
xchg
std
scas
es
sub
ljmp
pop
lret
xchg
jl
pop
jl
fcompl
xor
mov
or
and
lock
add
dec
lahf
lret
and
sbb
adc
dec
daa
mov
cltd
adc
mov
stos
mov
cmp
add
mov
imul
das
mov
sar
mov
push
jecxz
push
outsl
les
js
jmp
jne
pop
or
mov
inc
sbb
xchg
dec
test
xchg
pop
xchg
sub
dec
loopne
aaa
push
mov
pop
pop
inc
nop
and
mov
xchg
aas
in
mov
and
and
aas
roll
repz
mov
sub
hlt
push
cmpsb
js
out
and
add
dec
cmpl
fistpl
inc
enter
push
inc
mov
push
fidivl
push
cmp
cmp
cmpsl
arpl
and
call
fdivrl
push
pop
movsb
mov
movsb
mov
ljmp
add
addb
adc
pop
mov
mov
popa
mov
xor
mov
movsb
add
mov
scas
inc
std
push
je
jnp
adc
jbe
push
push
fimull
or
pop
push
ret
stos
shrb
fcomps
imul
add
mov
imul
push
movsb
sbb
xor
jo
rsqrtps
xchg
push
and
les
sbbb
jne
mov
pop
fists
in
dec
mov
imul
aad
lret
lock
mov
mov
lea
push
fwait
push
adc
cmpsl
xor
shl
mov
mov
inc
mov
sub
xor
xchg
mov
sbb
jle
imul
mov
in
andl
adcl
push
icebp
loope
out
adcb
clc
int
jl
insl
mov
cmp
mov
lods
outsb
jge
add
movl
lret
leave
dec
mov
pusha
shll
jo
pop
loop
adc
movsl
push
jl
bound
push
clc
add
fldcw
cmp
scas
push
dec
psllw
std
jae
dec
sbb
cmc
push
das
sub
xor
rcrb
movsl
cmc
divb
sub
and
sub
mov
jae
dec
or
push
xor
dec
popf
add
repnz
xor
in
stc
pop
aad
xchg
pop
in
test
sti
cmp
sub
xchg
les
leave
mov
inc
test
fstl
scas
inc
xor
push
mov
sub
sub
sub
ds
cmpsb
shl
leave
adc
cmpsl
ret
push
outsb
jo
or
pop
in
popf
fldt
dec
adc
jp
and
imul
out
lahf
push
ret
xchg
pop
pop
adc
xchg
mov
jb
nop
popf
mov
cs
in
adc
ret
ret
loopne
xchg
mov
dec
mov
xchg
cmc
ret
dec
and
jb
imul
popa
cwtl
and
pop
ret
cmp
mov
xor
or
stos
and
loope
push
idivl
jb
test
aad
pop
xor
xchg
push
jg
and
jmp
dec
mov
xchg
dec
nop
adc
movsb
inc
sub
mov
loop
rcl
in
and
push
mov
out
mov
sbb
addb
add
xchg
xor
fnstenv
xchg
dec
mov
jns
mov
ret
cmpsl
insb
jne
stos
push
lahf
pop
pusha
shll
xor
lret
add
jmp
fisubs
bts
lods
mov
dec
xor
fisttpll
mov
cmp
sbb
pusha
loopne
xorb
jmp
jne
loop
jb
mov
and
dec
xchg
add
pop
clc
dec
fistl
lds
jnp
lret
sbb
adc
mov
out
push
lock
jae
pushf
push
outsb
cmp
dec
daa
test
xchg
sub
xlat
jg
ss
sub
cmp
mov
stc
dec
out
mov
jns
jo
jo
jmp
int3
icebp
or
fbld
loop
mov
cmp
sbb
flds
xor
push
mov
js
into
mov
jl
fs
pop
xchg
inc
mov
out
mov
push
pop
pop
pop
inc
mov
mov
and
movsb
sbb
pop
lea
jo
in
push
gs
in
mov
fmull
paddsw
das
dec
xor
cmp
push
xchg
imull
mov
lahf
ficomps
bswap
xor
insl
mov
rolb
inc
dec
add
stos
lcall
sub
xchg
lret
fs
adc
push
out
add
ljmp
inc
push
pop
inc
dec
and
add
xor
pop
mov
xchg
dec
mov
xor
ljmp
inc
andl
mov
mov
prefetch
sub
arpl
add
pop
sub
xor
jmp
xor
das
and
clc
stos
shll
cmp
push
ror
mov
jle
test
lcall
inc
enter
mov
loopne
lret
or
xchg
dec
pushf
inc
hlt
mov
rclb
push
ss
daa
shl
inc
jno
sti
cmpsl
cld
test
xchg
pop
cmc
cltd
pushf
scas
nop
pop
enter
popf
mov
add
pop
fisttpll
sbb
lss
lods
pop
pushf
push
sub
and
adc
jg
and
test
dec
pushf
xor
packssdw
iret
shl
xchg
dec
leave
xlat
fisubl
jne
lret
jp
and
mov
dec
and
dec
shrb
mov
cmpsb
pop
ljmp
cltd
add
inc
sbb
mov
div
push
pop
roll
jns
int3
push
imul
or
inc
imulw
idivb
call
frstor
xor
pushf
sbb
pop
pop
xchg
sbb
lret
jb
xor
cmp
inc
mov
cltd
fnstsw
lock
mov
stc
and
sahf
cmp
cmpsb
xorb
sarb
adc
pop
pop
test
pop
push
fmul
cwtl
out
cmp
lds
or
mov
push
cwtl
sub
ds
dec
ljmp
sbb
push
outsb
and
jns
leave
sbb
jle
xlat
outsl
adc
jne
lahf
int
fiaddl
ljmp
inc
fisttps
lahf
inc
jl
not
out
push
fstl
ljmp
pop
push
jp
mov
imul
mov
push
int3
xchg
test
pop
ror
cmpsl
call
das
cwtl
mov
or
and
cmpsl
xchg
mov
cs
shlb
jnp
jno
icebp
cwtl
dec
xchg
lahf
es
aas
mov
adc
add
dec
out
ss
inc
cld
outsl
or
imul
mov
testl
dec
test
xchg
in
jb
inc
mov
dec
std
mov
xor
jno
fsubr
stos
cmp
inc
add
sbb
adc
mov
ret
nop
aas
adc
int3
fcmovu
out
sti
ret
popa
out
mov
cli
jl
imull
fdivrl
loopne
adc
xlat
aad
dec
mov
scas
shl
xchg
js
adc
loopne
mov
aaa
push
popf
mov
cltd
sub
mov
cli
out
test
int3
cmp
ret
scas
sahf
push
test
inc
pop
xchg
cmc
xchg
hlt
enter
xchg
dec
jns
push
notb
dec
cmp
push
push
adc
int3
pusha
dec
movsb
mov
sub
dec
inc
in
mov
xor
cmp
xlat
xor
pop
bound
xchg
sub
pushf
mov
mov
xchg
out
scas
push
xor
mov
xchg
pop
inc
add
xchg
fisttps
repnz
and
lret
test
mov
jle
call
pop
sub
or
mov
aam
ret
sbb
in
add
outsb
ror
xchg
mov
sub
loopne
push
push
scas
outsl
add
cltd
and
sbb
cli
mov
inc
mov
je
les
jmp
cmpb
jg
mov
cli
mov
mov
xchg
inc
and
mov
aad
inc
imul
sarl
xchg
xchg
test
mov
das
sbb
jb
mov
lods
pushf
and
pop
into
mov
sbb
add
out
imul
lret
pop
adc
lods
arpl
jl
rclb
mov
push
faddp
or
fbld
sub
rcll
dec
push
insb
add
mov
lret
or
mov
inc
inc
add
shrl
arpl
addl
lds
mov
xchg
xchg
mov
push
dec
in
fidivrs
lods
in
jl
adc
sbb
ficoms
push
popf
push
lcall
and
lods
xor
repnz
sbbl
je
addr16
and
shl
or
and
cli
jb
jne
xor
inc
sbb
sbbb
sub
int
std
inc
pop
inc
push
fmul
insb
std
jge
inc
cwtl
outsl
das
fwait
mov
aas
dec
xchg
aad
or
stos
pop
cwtl
or
xor
in
addr16
imul
mov
xchg
mov
test
lock
ljmp
pop
nop
mov
xchg
mov
push
mov
jmp
dec
mov
add
jg
inc
fidivl
and
pop
je,pt
ds
sbb
neg
cs
push
push
aaa
pop
in
mov
jmp
clc
adc
movsb
insl
out
dec
lret
in
push
cmp
xchg
rcll
inc
inc
push
jge
test
pop
adc
out
dec
test
stos
and
mov
xchg
dec
push
dec
aas
addr16
xor
daa
mov
loop
mov
test
out
xchg
lods
popf
jle
in
push
xor
or
out
pusha
sbb
mov
int3
repz
lds
and
sbb
nop
sub
out
push
push
mov
addr16
fs
dec
adc
loope
xchg
sub
loopne
push
gs
or
pusha
out
subb
ret
les
push
push
lea
sbb
lret
or
daa
jecxz
out
das
mov
mov
add
movsl
imul
jb
add
sub
jmp
lds
cmpsb
enter
inc
sahf
in
out
mov
or
jl
sub
mov
mov
fdiv
in
push
adc
addb
lret
adc
sarb
jmp
mov
jno
add
jo
ret
popl
rol
rcll
mov
fdivrs
mov
out
pop
mov
lods
mov
sub
psrad
dec
mov
lret
dec
sub
sbb
mov
dec
pusha
xchg
out
repnz
filds
lds
popa
mov
loop
mov
push
push
mov
xchg
jmp
sub
mov
fwait
dec
lcall
nop
xor
insb
stos
sbb
jno
cmp
cwtl
adc
xchg
cmp
xchg
shr
pop
movsl
outsl
cmp
andl
xor
sahf
mov
clc
nop
test
stos
jl
bound
sbbb
mov
xchg
mov
insl
pusha
cmpsb
negb
xchg
pop
ljmp
test
push
add
pop
dec
lret
xor
add
hlt
out
dec
inc
ret
pusha
mov
dec
imul
pop
fidivrs
aad
add
popa
add
inc
outsb
ljmp
pop
in
aaa
repnz
out
cmp
inc
pop
cmpsl
sbb
adc
sbb
frstor
and
jge
mov
mov
jl
inc
mov
mov
movsl
mov
push
add
cmp
jecxz
mov
push
mov
daa
insl
movsb
xor
pusha
fs
pop
cld
jle
cld
or
or
out
and
xchg
arpl
test
pop
in
cld
sti
fdiv
xor
push
gs
push
mov
outsl
xor
repz
mov
jl
test
or
imul
mov
jmp
pop
mov
data16
bound
inc
mov
das
inc
out
sar
out
push
sub
test
pop
mov
ss
loop
movsl
dec
cmpsb
inc
nop
movsl
dec
cmp
add
or
outsl
les
loop
andl
adc
aas
sub
sbb
mov
fidivrs
sbb
mov
ret
into
xorl
or
pop
mov
enter
dec
push
imul
xchg
ja
inc
jns
scas
pop
cmp
pop
mov
adc
pop
fidivl
sti
mov
mov
mov
pushf
out
mov
sbb
mov
xchg
movsl
scas
mov
pop
xchg
inc
nop
and
rorl
andl
mov
pop
imull
in
andb
daa
or
xlat
icebp
popf
pop
dec
sub
push
cs
add
jno
add
add
add
add
pusha
add
andb
add
and
add
add
add
add
add
add
add
add
add
addb
sbbb
sbbb
add
clc
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
or
add
clc
add
or
add
add
add
add
add
add
or
add
add
add
add
mov
add
in
add
add
add
add
add
or
add
add
add
bound
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
jo
add
pop
add
add
add
add
add
add
add
dec
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
sub
add
cmp
add
push
xchg
add
pusha
xchg
add
add
add
loopne
add
add
add
lcall
add
loopne
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
les
test
inc
fcoml
jl
inc
dec
xchg
scas
sbb
iret
pop
loopne
adc
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
adc
or
adc
mov
in
or
les
sbb
push
or
imul
sbb
dec
push
add
adc
sahf
adc
test
seto
push
in
inc
clc
push
or
mov
mov
sbb
and
push
or
rorb
into
or
inc
xchg
sbb
xor
or
js
and
sbb
mov
pop
push
lods
cmp
jmp
and
adc
sbb
pop
sub
lea
inc
cld
add
sub
fcmovne
push
inc
pusha
jbe
cwtl
sub
lods
push
stos
add
nop
cmpl
je
dec
jae
inc
test
push
mov
cmp
mov
rep
cld
repnz
sub
add
xchg
outsl
jae
mov
jmp
sbb
mov
test
das
sbb
push
or
add
fimuls
repz
and
call
push
test
sub
imul
std
sti
dec
push
stc
adc
nop
add
xchg
fstps
pop
xor
rorb
dec
sub
lea
popf
xchg
inc
xchg
push
inc
notl
test
push
cmp
movzbl
or
add
push
mov
test
xor
mov
cmp
or
jnp
mov
icebp
or
jl
mov
push
add
loope
adc
jg
lea
push
dec
xor
jmp
sbb
sbb
pop
push
aas
and
ficoml
xor
rcrb
inc
pop
or
add
mov
jo
icebp
add
test
popa
mov
add
nop
add
or
pop
rclb
icebp
sub
and
cmpsb
dec
push
pop
pop
push
pop
pop
ret
and
call
jmp
adc
add
add
push
call
nop
or
ret
shl
sti
nop
xchg
in
add
je
push
mov
pop
inc
xchg
inc
add
pop
add
jmp
mov
ret
lods
push
jne
aaa
scas
leave
push
or
clc
dec
int3
pushfw
inc
xorb
cmp
je
movsb
ja
sarb
push
add
repnz
sub
pop
psubb
leave
bound
test
sub
xchg
in
data16
and
lods
loop
push
jg
jg
outsl
add
mov
jnp
mov
and
sti
loope
call
pop
jne
mov
and
pop
dec
xchg
shr
mov
jbe
jae
shll
adc
sbb
pop
xor
ret
jmp
test
pop
add
push
loop
push
sbb
pop
cmp
or
and
xor
mov
movzwl
test
jge
jne
xchg
or
cld
pop
inc
pop
adc
testb
cmp
jge
shlb
lmsw
sub
and
cli
incb
enter
sbb
cmp
ret
pop
pushf
or
rclb
les
push
add
jle
addb
pop
pop
dec
mov
xor
dec
pop
cmpsb
pop
popa
jmp
jg
push
mov
sub
ret
add
jbe
push
push
and
cmpsl
nop
cwtl
pop
mov
mov
dec
push
out
loope
in
xchg
pop
pop
fistpll
fimuls
int
ss
dec
es
push
sbb
dec
or
stc
add
movsl
add
push
jnp
inc
push
cli
cmp
sbb
lret
pop
shl
cmp
cmp
ret
add
adc
std
adc
push
lcall
push
push
sbb
mov
jge
jno
test
dec
cmp
enter
push
pop
xor
stc
mov
hlt
push
xchg
dec
or
cmp
test
mov
lret
push
in
mov
adcl
mov
mov
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
outsb
loopne
sub
pop
jns
fcmove
or
xchg
sub
nop
add
jp
fwait
sub
cmp
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
push
call
sbb
mov
clc
dec
test
xchg
aad
or
addb
sbbl
mov
icebp
or
jno
adc
icebp
sbb
shlb
jle
popf
mov
ss
test
fsubr
inc
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
mov
or
inc
cmpsl
data16
pop
push
inc
sbb
inc
sub
pop
outsl
dec
popa
stos
leave
add
lods
popf
inc
pushf
lods
jb
mov
stos
pusha
div
mov
icebp
mov
movsl
call
dec
or
push
adc
hlt
ret
dec
pop
xchg
or
sbb
and
inc
cmp
inc
dec
adc
jl
add
add
mov
push
loope
push
lea
divl
iret
aad
das
mov
pop
test
cmp
cmp
sub
mov
sbb
xchg
mov
adc
mov
inc
and
jmp
inc
adc
dec
scas
test
sbb
mov
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
add
inc
fsubl
addr16
xor
inc
adc
inc
imul
mov
lods
dec
outsb
data16
insl
lea
push
jecxz
push
fs
rolb
jne
jns
sbb
mov
fildl
and
mov
notl
or
add
sub
xchg
or
lods
stos
enter
lds
lea
dec
xchg
cltd
xor
xor
jl
sbb
or
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
mov
add
jle
add
call
xchg
add
add
inc
add
xchg
add
in
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
inc
add
add
add
pop
add
xlat
pusha
add
shlb
enter
test
add
sbb
add
push
mov
add
dec
out
mov
add
add
add
adc
add
add
add
inc
xor
pusha
xor
