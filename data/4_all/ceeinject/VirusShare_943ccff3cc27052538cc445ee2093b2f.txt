out
add
add
add
add
addr16
stc
inc
ljmp
repz
pop
mov
adc
sub
scas
push
mov
es
jo
mov
push
mov
fs
or
psubusw
lods
add
xchg
push
xchg
movsl
xor
movl
pop
xor
mov
inc
movsl
dec
or
jp
adc
xor
dec
sub
dec
subb
mov
stc
adc
mov
fstpl
lret
outsl
push
aad
sub
jle
and
cmpsl
cmc
push
dec
imul
outsb
jns
fcomi
pop
inc
js
dec
xchg
fcmovnbe
push
mov
pusha
stc
cwtl
pop
ret
pop
mov
ja
fld1
push
or
fnstsw
out
mov
or
mov
pushl
dec
sub
xor
dec
jg
lods
cs
xchg
add
lods
push
fwait
adc
push
jne
popf
scas
ss
inc
fisubs
jb
sub
sub
mulb
push
pushf
fwait
cs
lock
mov
and
mov
and
movl
orl
int3
shrb
and
ret
adc
sbb
xchg
inc
xlat
inc
cmpsb
or
dec
xchg
ljmp
shlb
repnz
jne
xchg
ret
mov
cltd
shll
outsb
mov
jbe
sub
xchg
add
mov
mov
pusha
lret
mov
setge
in
xchg
imul
mov
lcall
jp
pop
jbe
dec
popf
std
or
rorb
dec
cmp
cld
dec
lods
bound
cwtl
cmp
cmp
lret
mov
jbe
mov
add
cltd
shr
ret
fdiv
sbb
rclb
icebp
sub
and
pop
sbb
fwait
adc
pop
imul
loopne
cltd
les
sub
xor
sti
pop
pop
mov
dec
addb
xor
lods
mov
mov
xchg
imul
or
enter
lahf
mov
push
xchg
aaa
or
repnz
and
pop
mov
sub
push
sbb
push
inc
ds
xchg
jecxz
add
mov
xchg
push
jmp
movsl
das
sbb
lods
cltd
jmp
xor
sbb
out
inc
mov
xor
aad
mov
add
sarl
movsl
and
sub
mov
push
rclb
int
das
stos
outsl
iret
jl
pop
push
fsubrs
adc
mov
sbb
pop
orl
lcall
loopne
nop
pushf
mov
push
sub
mov
dec
adc
add
ljmp
scas
inc
rcl
add
jp
shlb
mov
inc
jb
loopne
hlt
mov
ret
jl
jmp
and
mov
xor
ja
ss
cmp
ja
mov
push
movsl
xor
mov
pusha
sbb
cld
jo
scas
loop
mov
mov
adc
pop
shrl
cmc
aam
add
jl
lods
or
sahf
imul
insb
int3
out
push
push
jae
in
xchg
push
rol
jo
add
mov
es
inc
mov
inc
aam
inc
cmp
test
and
andb
dec
adc
cmp
in
mov
lods
xlat
mull
imul
aam
mov
push
inc
pop
icebp
pushf
xor
mov
mov
cmc
arpl
inc
inc
mov
test
stos
mov
push
sbb
mov
mov
mov
sub
insl
mov
lds
popf
stc
jnp
push
jle
xchg
jmp
xor
push
jmp
push
stos
adc
or
imul
pop
mov
cmc
popf
pop
mov
aam
jmp
shrl
cmpsl
cmpsb
sub
mov
lret
inc
or
aas
mov
imul
cmp
insb
imull
cmp
jns
test
std
jle
dec
adc
maskmovq
mull
lcall
jmp
or
stc
mov
scas
sti
sbb
xor
pop
mov
and
ror
mov
xor
shl
fidivl
sbb
or
sbb
jecxz
mov
inc
cmp
fnstenv
testb
mov
push
in
pop
rcr
pextrw
dec
lret
pop
fsubl
push
push
push
les
cltd
fcompl
pop
inc
cmc
test
out
pop
inc
mov
and
add
out
pop
arpl
out
dec
dec
mov
xchg
push
push
stos
ja
pop
mov
mov
sbb
shl
imul
imulb
mov
xor
pop
iret
adc
fadds
add
int
clc
cltd
fnstsw
jb
and
daa
dec
mov
xchg
pop
mov
cmp
mov
nop
jo
sub
scas
inc
pusha
xchg
sub
mov
xchg
xlat
sbb
fiaddl
mov
sub
imul
pushf
test
mov
lock
or
sbb
xor
nop
lea
nop
inc
popa
dec
sub
ss
mov
mov
clc
push
add
repnz
sub
ja
addb
push
jae
cmpb
push
jne
mov
mov
push
adc
add
movq
push
fs
mov
movsl
xlat
cmp
pop
push
ljmp
out
pop
sbb
pop
movsb
jmp
push
rclb
pop
aam
mov
jo
clc
inc
sti
ds
jg
dec
mov
out
fdiv
cmp
loopne
insl
sbb
mov
mov
cmp
pusha
int3
fmul
leave
clc
mov
repnz
cld
ret
cwtl
or
xorl
repnz
cmp
sbbl
hlt
jnp
and
popa
sbb
bound
add
sub
inc
sub
loop
xchg
loope
push
mov
aaa
pop
push
or
aad
mov
inc
dec
dec
jp
shrl
rcr
jmp
int3
mov
stos
repz
inc
shl
movsl
and
mov
mov
cmp
loopne
andl
xchg
mov
jge
mov
jae
mov
dec
mov
rdtsc
sub
hlt
loop
xchg
scas
repz
pop
mov
pop
dec
inc
int
into
int
lret
xlat
enter
scas
cwtl
and
repnz
xchg
xchg
jns,pn
hlt
xchg
or
mov
mov
adc
jmp
ret
xor
int3
fildll
xchg
adc
mov
pop
mov
das
test
jmp
pop
mov
push
and
ss
mov
jmp
out
int3
aas
or
repnz
inc
xor
arpl
mov
adcl
xchg
jnp
mov
sbb
in
jno
rclb
cli
shlb
fnsave
inc
aas
mov
and
push
pop
sar
and
cld
sub
out
sar
dec
mov
cmp
adc
jmp
or
xor
out
push
pop
arpl
mov
ret
jnp
cld
push
mov
mov
or
or
dec
jl
out
jne
mov
and
sub
push
sub
xchg
sbb
and
shrl
lds
ja
sbb
add
cmpsb
js
inc
cmc
mov
push
xchg
insb
sub
pop
push
imul
je
addr16
push
cmp
push
movsb
pop
push
stc
cld
pop
fldenv
or
cmc
jl
lret
out
cmp
in
fwait
cwtl
xlat
mov
dec
shr
cmc
das
aad
push
clc
les
mov
dec
outsl
testl
add
jnp
pop
push
push
addr16
outsb
and
mov
and
ret
repz
mov
dec
xchg
or
dec
push
popa
jae
adc
mov
data16
enter
int3
xor
mov
dec
xor
das
into
shlb
pop
lods
add
inc
iret
shll
mov
mov
mov
inc
mov
jnp
mov
lret
daa
cmp
arpl
sub
mov
jg
pop
xchg
scas
sahf
shrb
inc
popa
cmc
sbb
movsb
ds
mov
lcall
bound
mov
sbb
lds
test
fildll
xor
pop
cltd
int
jnp
and
pop
outsb
rclb
cmpsl
adc
std
fcos
stos
push
add
loop
cmpsl
syscall
daa
into
dec
test
add
cmp
sbb
adcl
push
mov
ljmp
call
faddl
add
mov
or
lds
call
sahf
stos
orl
sub
xchg
sub
outsl
mov
in
dec
sbb
mov
out
shrl
fdivrl
andl
and
pop
imul
add
insb
cltd
addl
push
inc
aad
and
xchg
dec
dec
push
gs
sbb
sahf
mov
test
sbb
lret
jle
xchg
arpl
mov
test
fisttpll
ret
add
inc
pop
or
fs
loopne
pop
inc
jge
mov
cltd
add
subb
icebp
iret
xor
clc
or
xchg
mov
and
js
movsb
mov
dec
adc
pop
leave
inc
inc
popa
adc
fnsave
ret
scas
imul
ret
jl
scas
pop
mov
ret
mov
int
xor
dec
xchg
add
imul
lcall
and
leave
popf
mov
lds
stos
jecxz
mov
je
pop
inc
out
jmp
shl
xchg
in
sbb
loopne
or
inc
das
lret
pop
sub
cmp
jne
add
adc
jne
nop
fcompl
push
push
jle
sbb
mov
inc
xchg
fsubr
add
insl
das
push
andb
xor
fwait
sub
lret
outsb
orb
xor
mov
dec
sub
or
adc
mov
cmpsl
fcompl
adc
repz
ljmp
test
mov
dec
orl
hlt
dec
mov
push
jae
in
out
lahf
xchg
pop
cmc
or
pop
xor
pop
xor
pop
inc
xor
or
ja
lret
jp
out
push
int
mov
sbb
and
mov
pop
fnsave
lods
das
lea
pop
mov
or
push
sbb
dec
push
int
adc
push
sub
xchg
dec
scas
pusha
sbb
dec
cmp
inc
mov
test
sarb
xor
mov
and
into
leave
sarl
mov
sbb
push
arpl
xchg
loope
xlat
mov
lods
out
add
pop
and
mov
and
xor
pop
les
or
mov
push
cmp
cli
jg
movsl
in
mov
pop
aaa
pop
ss
and
mov
repz
xor
ret
gs
subb
inc
push
push
lcall
pop
in
rol
cmpsl
fsubrl
test
push
loopne
jo
mov
dec
fisubrs
insb
mov
insl
stos
cmpsb
test
add
movsl
lock
pop
jg
push
add
mov
or
mov
fstpl
and
out
sub
lret
lods
or
and
popf
adc
jp
in
fdivs
jecxz
add
insb
mov
mov
push
outsl
sub
pop
pop
fneni(8087
ja
bound
rcr
cwtl
inc
sahf
or
aas
jp
mov
fcmovne
cmp
lahf
fisttpl
addl
pusha
out
sbb
lret
fsubr
lret
repnz
add
test
sbb
pop
mov
je
xchg
xchg
push
aad
pushl
scas
push
std
in
xor
dec
pop
pop
pop
mov
gs
sub
in
loope
cmc
out
lret
xchg
test
adc
aaa
jo
inc
filds
lods
int3
add
xchg
lods
js
inc
push
je
out
mov
dec
jno
cld
jne
add
lock
notb
es
mov
jecxz
sbb
xlat
test
lock
jle
jae
test
add
xchg
add
in
sbb
push
pop
and
mov
lds
or
flds
enter
out
fisubrl
pop
mov
es
xchg
jns
cmp
xor
jno
add
pop
xor
add
sbb
imul
scas
mov
cmp
pop
jg
xchg
xchg
add
out
iret
out
out
aad
imul
hlt
pop
fsubs
xor
out
xchg
les
pop
insb
rorb
adc
mov
push
sub
les
mov
jnp
cmp
loop
mov
popf
cmpsl
lds
icebp
out
xor
addb
stc
or
lock
cmp
cmp
icebp
ret
cmp
dec
sbb
pop
push
adc
scas
pop
xchg
clc
icebp
loop
in
mov
xchg
pop
sbb
and
mov
and
fucomip
push
fnstsw
pushf
movsb
int3
jp
lock
test
mov
or
dec
fists
jbe
jae
xchg
adc
push
movsl
sbb
int
into
or
jle
pop
adc
mov
stos
adc
lods
mov
sarl
xchg
push
mov
arpl
movsb
loopne
cltd
movsb
pushf
outsb
repnz
int
and
ljmp
push
dec
sbb
jbe
cmc
pop
aaa
mov
out
clc
shlb
sbb
int
push
ljmp
call
outsb
cmp
adc
jb
pop
incl
mov
lods
push
stc
mov
popa
or
xor
sub
xchg
mov
lea
movsb
test
pop
cmpsb
movsb
repnz
mov
jge
outsb
push
push
movsb
inc
xchg
jnp
pop
jl
xor
test
jecxz
mov
int
add
iret
mov
xor
das
lahf
scas
mov
aas
jmp
pop
and
xchg
adc
pop
popa
adc
sub
ror
fisttpll
and
push
sbb
add
inc
out
mov
inc
fs
jg
std
and
sub
adc
mov
lret
movsl
xor
es
jo
push
mov
pop
fisubrl
movsb
in
mov
xor
nop
or
aas
idivl
jle
dec
inc
sti
sti
pop
mov
xchg
adc
xchg
test
in
dec
xor
nop
test
push
int
sub
int3
add
stos
daa
jnp
aam
aaa
lock
or
movsl
push
xchg
pop
mov
fdivrs
and
jl
push
dec
cmpsl
and
pop
push
cmp
fucompp
dec
faddl
sbb
cmp
sub
xor
push
popf
dec
xor
sti
dec
xchg
sbb
pop
cs
inc
iret
sbb
cmp
and
add
int3
iret
xorl
loop
push
mov
jg
mov
mov
in
jl
lods
js
mov
ja
int
sub
mov
jne
cmp
roll
insb
mov
jl
pop
adc
in
sbb
icebp
lret
pop
and
jmp
xchg
sbb
stc
nop
mov
and
das
push
inc
push
jmp
popa
loope
stos
jb
mov
and
mov
test
ja
pop
and
movb
sub
inc
jb
pusha
nop
push
mov
push
xchg
push
push
mov
leave
inc
lret
or
dec
pop
mov
xchg
decb
sahf
xchg
addr16
mov
push
mov
or
or
enterw
jne
cmpsb
das
xchg
add
es
enter
cmp
sub
sahf
stos
pop
sbb
outsl
lods
or
mov
fisttpl
js
mov
pusha
pop
adc
insl
push
sbb
ja
mov
ret
push
ja
cmp
mov
mov
aam
mov
adc
and
inc
stos
or
add
stc
xchg
fbstp
dec
mov
ss
sbb
addr16
insl
orl
pop
pop
push
adc
inc
adc
lcall
rolb
xor
call
jns
arpl
dec
cli
and
xchg
std
cmc
push
xor
jb
mov
negb
rcr
xchg
xor
dec
and
push
rcl
fadd
cmp
insl
mov
push
out
jmp
js
sbb
jno,pt
loop
pop
push
xor
mov
fsubrp
xchg
popa
rcrl
add
roll
pushf
or
jmp
ficoms
movsl
push
out
dec
cmp
sbb
sbb
fdivrl
and
add
imul
sbbl
mov
push
lods
jmp
cltd
andb
mov
adc
cmp
imul
mov
cmp
jo
je
or
push
idivl
loope
cs
and
mov
leave
mov
into
xchg
cmp
in
xchg
mov
into
inc
pop
mov
xor
mov
push
mov
push
and
xlat
stc
out
movsl
push
add
ret
lret
loope
push
lret
sub
jae
fldenv
mov
mov
das
sbbb
fidivl
lods
sub
sbb
mov
sub
and
and
imul
push
or
repz
sti
lret
bnd
popa
or
in
hlt
inc
xchg
cli
fs
movsb
inc
fistl
jnp
clc
int3
lcall
shlb
dec
lcall
cmp
xchg
mov
movb
push
fwait
push
adc
sub
cmpsb
cmp
lahf
push
jno
or
lods
in
or
fstpt
pop
mov
jmp
dec
push
mov
loopne
and
inc
jmp
xchg
dec
addl
push
loope
test
and
out
les
mov
in
fisubrs
jo
jge
xlat
daa
inc
jle
fdivr
lds
cmp
pop
add
push
or
xorb
sub
or
mov
xchg
aas
xchg
inc
jecxz
das
fs
add
mov
imul
test
push
sub
lods
add
and
mov
push
jo
push
mov
aaa
dec
dec
mov
jecxz
sub
xchg
or
pop
nop
lea
xchg
pop
xchg
rcr
cmp
pop
push
dec
jb
pop
test
hlt
mov
dec
xlat
or
cmp
pop
js
inc
pop
cmp
cmp
mov
push
leave
and
xorb
mov
sub
ss
jl
sbb
das
clc
mov
jne
pop
icebp
xor
mov
outsb
pop
test
into
into
adc
or
seta
loopne
pop
outsl
adc
jne
mov
lcall
sub
sub
jp
push
ret
cs
mov
xor
cmp
clc
movsl
gs
bound
xor
add
or
aad
popl
push
mov
mov
int3
adc
pop
dec
addr16
flds
out
mov
ljmp
ljmp
sub
stos
jno
push
fildll
lds
call
cmp
outsb
pop
pusha
fisubs
cmp
and
inc
mov
inc
adc
xor
adc
scas
or
mov
dec
xchg
sbb
inc
jl
hlt
iret
mov
dec
jb
movsl
fnstenv
mov
mov
adc
sub
or
sub
mov
ficomps
movsl
fimull
pop
scas
mov
shlb
mov
or
lcall
pop
add
loopne
aaa
and
das
into
adc
add
xchg
fadds
mov
mov
pushf
aam
orb
xor
add
imul
inc
sub
pop
sub
sub
push
lea
imul
sbb
xor
cmc
in
test
push
lsl
mov
cs
push
sbb
testb
xor
xchg
fsubr
mov
jecxz
nop
mov
insl
in
xor
shrl
add
out
and
inc
test
mov
cltd
pop
xlat
sub
movsb
cwtl
addr16
test
push
mov
fistpll
les
push
sub
adc
stc
pushl
adc
pop
loopne
or
inc
leave
sub
ljmp
add
cltd
mov
push
les
inc
xchg
insb
fwait
outsl
add
push
pop
dec
jnp
subb
sub
shlb
add
out
push
add
in
push
sti
pusha
sub
ret
rcrb
aam
call
add
and
popf
cmpsl
sbb
imul
sub
push
rclb
stos
rep
jo
test
out
out
test
loop
add
rorl
cli
pop
imulb
cmpsb
bound
cmpsl
xchg
adc
dec
xchg
push
mov
mov
int
arpl
dec
fldcw
dec
insb
xor
dec
loopne
jg
lods
jmp
jmp
test
loope
ret
movsb
fsubrp
sbb
mov
inc
ljmp
push
in
scas
mov
outsl
int
dec
ss
mov
ss
push
sbb
dec
popa
outsb
inc
push
xchg
add
ret
inc
pop
push
in
dec
sbb
pop
je
movsl
add
mov
mov
lods
sbb
arpl
je
adcl
jg
sub
mov
das
fwait
out
popw
mov
lahf
jle
leave
inc
cli
lock
loope
popf
jge
test
shl
je
push
cmp
dec
fnstenv
flds
dec
sbb
fsub
sbb
add
mov
inc
inc
hlt
out
dec
mov
adc
mov
and
mov
adc
push
xchg
outsb
repnz
cltd
pushf
movsb
iret
push
sahf
test
add
mov
mov
fs
shlb
clc
adc
loope
push
xor
fidivs
cli
shl
dec
jg
add
or
cltd
int
pop
inc
pop
dec
lcall
add
pop
cs
xchg
lods
into
jp
pop
cs
test
sbb
mov
jne
clc
push
fyl2x
add
pop
lret
mov
jg
es
imul
xchg
leave
rcr
sahf
mov
inc
rolb
int
dec
rcrb
mov
or
push
add
sbb
sbb
repz
xor
pushl
push
cmpsl
sbb
push
mov
rorb
mov
and
rolb
sub
lcall
pop
enter
popa
cmp
and
shl
jecxz
mov
stc
popf
pop
orb
add
cltd
xlat
add
das
fstpt
add
outsl
xlat
imul
in
mov
cmp
into
mov
mov
jp
clc
lahf
ret
sbb
dec
cmp
cwtl
xchg
idivb
mov
or
and
jmp
pop
movsb
lods
push
inc
call
imul
sbb
add
lcall
and
dec
push
xor
pop
jae
mov
pop
pop
push
stos
out
and
cmp
adc
int
loopne
ud0
sub
pop
add
jnp
jbe
clc
jecxz
lock
push
jne
mov
xchg
in
cmp
pop
pop
nop
cltd
jae
cmp
or
ss
and
divb
mov
cmp
add
loope
bound
sub
inc
cmp
mov
adc
in
push
xchg
lock
inc
or
inc
and
aad
xor
jg
hlt
pop
mov
push
pop
jno
adc
pop
mov
fsubrs
loop
popa
js
inc
std
push
aas
cltd
jl
iret
addl
add
sbb
sub
sub
out
rcrb
or
leave
and
jno
test
jle
lcall
shrl
jecxz
dec
cmc
and
sarb
xor
ficompl
cltd
popf
dec
insb
jne
call
loope
push
mov
pusha
pop
inc
iret
cmp
iret
lret
sahf
icebp
fstps
sub
xlat
push
sub
cmp
cltd
adc
mov
ret
leave
dec
jmp
fwait
or
ret
inc
dec
in
jl
and
gs
inc
shrb
in
mov
gs
sub
ret
insl
pop
nop
xor
xlat
add
xchg
std
mov
or
inc
and
xchg
and
pop
and
xor
mov
mov
dec
gs
enter
loop
repz
sub
jecxz
int
cmpsb
shlb
pop
jl
aad
icebp
xchg
add
add
inc
out
pop
lock
sbb
sbb
js
clc
sbb
mov
aaa
xor
cs
mov
or
lret
int
loop
pop
inc
push
stos
and
push
loop
imul
aam
aaa
test
out
push
xchg
add
adc
jne
adc
xor
mov
xchg
sbb
mov
xchg
mov
movb
mov
cmp
pusha
lock
sub
rclb
scas
rclb
dec
xor
repnz
push
xchg
add
fstps
cmp
icebp
popf
mov
loope
insl
cli
push
mov
out
mov
addl
push
out
add
add
cmp
push
sub
aad
jne
cmpsl
popf
sub
into
push
popa
sbb
ss
inc
mov
into
fistpl
mov
nop
gs
pop
fcoml
push
scas
lret
mov
jnp
xchg
add
cmp
aaa
leave
cmp
lret
mov
xchg
mov
rclb
xchg
lahf
testb
decb
xor
or
adc
xor
mov
push
and
mov
dec
pop
daa
jle
inc
adc
imul
push
mov
stos
jnp
sbb
push
movsl
inc
xchg
std
inc
adc
adc
out
aad
lods
cmp
xchg
insb
dec
mov
adc
add
sbb
add
push
dec
mov
mov
ret
fldenv
sbb
fdivrp
lret
insl
adc
ja
scas
push
xor
xorb
lret
mov
clc
pop
popf
call
dec
cmp
or
adc
and
in
and
mov
fbstp
sub
mov
inc
jmp
mov
pop
jmp
mov
jnp
mov
imul
mov
pop
mov
mov
divb
shl
fwait
insl
add
push
rcr
xor
cmp
stos
cmp
rcrb
rcr
repnz
or
and
or
mov
lds
and
sbb
enter
pop
xchg
sub
in
cmp
mov
data16
mov
pop
faddl
lret
fsubs
insl
mov
in
stc
mov
or
push
inc
cld
pop
in
xchg
push
addb
adc
cmpsb
leave
mov
neg
sti
mov
cmp
in
mov
push
mov
xor
jbe
je
mov
lds
loopne
pop
pop
dec
ja
mov
cmpl
js
sub
lds
sbb
push
or
insl
test
andl
sti
xor
pop
adc
add
xchg
test
shrb
decl
iret
rcrb
adc
pop
mov
in
int
pop
es
and
xchg
mov
mov
push
std
and
or
or
test
repnz
pop
pop
adc
outsl
add
ret
daa
jle
fadds
inc
lds
aad
insl
leave
jl
les
jl
xor
xchg
in
ljmp
testb
imul
push
in
xor
pop
call
popa
ret
mov
adc
inc
cmc
or
and
pop
xor
push
sub
mov
imul
xchg
jbe
jmp
jbe
loop
adc
pusha
xor
fcmovne
dec
sub
xor
mov
ret
mov
xor
loopne
outsb
nop
mov
shlb
fldcw
enter
nop
cs
pop
jg
cs
movsl
mov
jecxz,pt
dec
sbb
stos
movsb
andb
sub
cmp
lret
xor
mov
sarb
mov
out
shl
repnz
jnp
loop
inc
jne
cmc
mov
outsl
xor
call
arpl
xchg
sbb
inc
movsl
int3
repnz
sub
cmc
push
jb
stc
xor
jnp
pop
xor
mov
imul
out
fdivp
xlat
add
mov
fsubr
pop
mov
cmc
ss
mov
arpl
jo
fdivrs
sub
ja
mov
push
loope
xchg
jp
xor
jne
xor
pop
mov
aad
pop
dec
xor
addr16
and
add
mov
stos
inc
fadd
sub
sbb
repnz
repz
fnstenv
adc
out
inc
mov
aam
inc
pushf
xchg
lds
jle
call
inc
mov
inc
stc
push
mov
jg
pop
and
out
fcmovbe
ret
jae
cmp
repnz
cmp
add
arpl
or
push
add
mov
fisubrs
movsb
clc
lods
or
cmp
xchg
or
in
jbe
cmp
movsb
mov
ds
in
add
pushf
leave
or
int3
push
pop
lahf
jp
stos
sbb
jle
testb
mov
jl
push
jbe
jmp
repz
cmp
in
mov
adc
fisttpll
xchg
push
pop
js
das
std
andb
push
fs
mov
out
mov
sbb
loopne
or
adc
test
xchg
ss
push
jl
sar
hlt
sub
xchg
subl
pop
in
mov
or
push
into
mov
in
pop
xor
cmp
pop
aaa
and
test
inc
ret
sub
push
jb
adc
jp
jb
repnz
dec
jecxz
xchg
sbb
add
shl
lods
addr16
xchg
sar
notb
fadds
xchg
mov
cs
dec
sub
jnp
xor
scas
sbb
in
clc
dec
jle
sbb
stc
das
push
icebp
push
cmpb
ja
adcb
cmp
sub
inc
lahf
sbb
std
ss
push
repz
add
or
sti
inc
popa
stos
pop
hlt
lret
xor
add
adc
lock
test
std
orl
mov
dec
mov
mov
scas
sbb
and
mov
insb
mov
pop
movsl
jno
enter
rorl
lods
in
and
xor
jae
mov
cli
lea
xor
mov
push
xchg
mov
or
and
dec
outsb
ror
and
pop
cli
or
lret
inc
mov
out
lahf
mov
xor
cmp
aaa
dec
inc
push
cli
dec
call
mov
movsb
inc
push
out
and
enter
out
cwtl
mov
leave
cmp
in
jl
sub
lock
jnp
and
in
sbb
fwait
aad
adc
pop
inc
mov
pmaxub
or
jae
icebp
loop
scas
lds
andb
dec
out
and
loopne
xchg
jecxz
packssdw
in
sbb
ljmp
sarl
out
pop
mov
sbb
push
sub
xchg
jnp
fidivs
dec
sbb
icebp
xlat
add
lods
xlat
out
ret
fcompl
hlt
mov
mov
and
lret
mov
sbb
cmp
sbb
test
push
aam
dec
jp
mov
sbb
cwtl
iret
xor
jle
jmp
mov
aam
cmpl
shlb
sbb
push
sbb
cmp
loope
mov
xchg
mov
jb
fstl
cmp
lea
cmc
mov
test
shr
pop
adc
jo
lea
sub
ja
test
imul
sub
mov
or
stos
cmpsb
cmpsl
sahf
push
pop
stos
fldenv
sub
xchg
cmpsb
test
lea
xor
cmp
popa
test
lods
mov
lret
sarb
in
inc
dec
sub
cltd
stos
rorb
lock
add
test
test
dec
xchg
jbe
test
and
pop
sti
cmpsl
sub
or
cmp
mov
sbb
jnp
fstl
or
insl
cmp
jecxz
scas
pop
aas
lds
test
jge
das
popa
es
test
cmp
jo
xchg
or
jbe
mov
jbe
fdivs
or
testb
int3
dec
movsl
jo
inc
push
dec
fisttps
loope
mov
rcrl
add
adc
das
jecxz
inc
dec
or
push
iret
jbe
push
loop,pt
ds
iret
push
push
push
pop
sti
clc
cmp
adc
sbb
push
bound
mov
mov
adc
and
adc
cmp
jno
ss
sub
mov
mov
jmp
cmc
jnp
push
push
add
pop
pop
hlt
mov
rolb
add
or
mov
packsswb
adc
idivb
mov
int3
fs
lret
in
je
test
or
push
movsl
repz
stos
xor
getsec
scas
mov
cmp
pop
jecxz
mov
add
pop
jbe
mov
rcr
sbb
mov
jmp
pop
push
leave
popa
pop
test
mov
in
mov
add
add
ror
mov
jb
scas
sahf
testl
dec
movsb
pop
xchg
inc
xchg
xor
mov
cltd
mov
and
cs
shll
rolb
mov
adc
mov
jp
sub
inc
test
test
lods
je,pt
pusha
inc
and
cmpsb
add
stc
test
nop
push
push
xchg
dec
push
movsl
mov
outsb
mov
into
inc
nop
mov
adc
dec
jmp
xor
push
lret
aas
mov
and
mov
lods
inc
xlat
pop
xor
or
movl
pusha
notl
jmp
and
mov
sbb
add
xchg
mov
mov
sub
jl
cmpsl
xor
sub
jns
es
jb
jo
cmpsb
push
test
inc
mov
sahf
mov
sbb
xor
mov
mov
xor
in
lret
shrb
maxps
cmpsb
fstp
and
jl
in
fldt
scas
mov
adc
imul
jg
or
bound
div
pop
sub
dec
jns
add
daa
lods
cmpsl
gs
jge
xchg
add
and
addl
sbb
dec
inc
xchg
dec
test
imull
jg
sbb
push
lcall
sub
cmpsl
jl
mov
push
aaa
cmovo
out
mov
fucom
mov
add
les
and
outsl
notb
and
pop
adc
adc
je
jg
lret
mov
xor
stos
mov
sbb
xor
arpl
jmp
fucomip
mov
mov
adc
cmp
mov
sub
cmp
aas
inc
mov
rcrl
mov
sub
test
sahf
hlt
in
or
loopne
jge
lcall
sub
push
ljmp
ja
and
lods
xchg
scas
inc
jg
pop
cli
and
jmp
xor
rcrb
scas
stos
rorl
imul
lods
or
cmp
push
cld
lods
inc
dec
xchg
lret
sub
daa
fisttps
inc
in
jbe
lock
inc
xchg
pop
fadd
jmp
inc
xor
insl
xchg
not
add
popa
mov
xor
or
push
das
push
mov
mov
dec
je
cld
dec
pop
dec
xor
cwtl
sarl
dec
mov
push
repnz
add
lds
xchg
or
and
push
ret
pusha
jb
cmpsb
out
popa
or
mov
lcall
add
aam
int
lret
loop
xchg
jae
cmp
xor
jbe
sub
mov
ret
pop
arpl
dec
mov
push
lahf
inc
jo
flds
xchg
mov
mov
inc
inc
add
inc
mov
cs
cmp
xor
insl
mov
pop
bound
push
scas
out
mov
and
jge
adc
xchg
scas
in
popa
or
ljmp
les
pop
push
pop
pop
mov
cwtl
js
movzbl
repnz
xchg
sti
popf
in
je
xor
fisubrl
sahf
xchg
ss
mov
lods
nop
arpl
pop
outsb
popa
push
in
pop
mov
cs
out
loopne
imul
inc
xchg
test
sbb
icebp
mov
out
xchg
pop
aam
ja
in
rcl
sub
sbb
cmp
xchg
movsb
jge
das
fdivl
sahf
push
lds
cmp
fs
pop
in
cmp
inc
dec
adcb
mov
push
lea
cmp
mov
ja
repnz
push
and
push
mov
mov
scas
popl
inc
dec
inc
fsubr
jecxz
scas
into
xchg
addl
push
add
fimuls
insb
jg
std
ficoms
mov
jecxz
jmp
pop
or
cmpsl
ja
loopne
aaa
mov
aas
fs
or
pop
fsubrp
xor
pop
test
in
psubb
out
out
inc
jecxz
jl
pop
xchg
jbe
jmp
in
std
add
sbb
mov
and
out
stc
xchg
nop
jno
inc
es
fwait
rolb
int3
mov
das
data16
ljmp
jl
dec
push
clc
mov
cltd
xor
cs
pop
in
pop
xor
shl
dec
pop
add
cs
arpl
pop
pop
lcall
pop
push
dec
sahf
mulb
js
xor
sub
std
insl
stos
and
inc
cmpsl
push
insb
push
dec
cmc
or
dec
fadd
and
jl
cmpsb
jle
arpl
sub
out
pop
jg
mov
inc
stos
aas
sub
out
mov
test
or
jge
call
aad
mov
imul
lret
pop
clc
sbb
xlat
bound
jle
arpl
es
fs
jle
jo
out
incl
test
jecxz
orb
pop
mov
pop
iret
jp
andl
pop
add
jp
insl
lret
and
cmp
mov
xchg
popf
xor
dec
stc
jl
inc
mov
dec
jle
gs
push
add
add
loopne
xor
or
xchg
stc
cmovno
add
push
rorl
xor
xor
daa
icebp
inc
push
sub
aaa
movsb
mov
adc
rolb
push
popf
push
xor
sbb
dec
insb
add
fldenv
push
popa
mov
fwait
leave
aad
pop
mov
jnp
jecxz
jae
mov
xchg
mov
jge
cmpsl
in
sbb
cmp
shrb
ja
je
mov
mov
sub
sub
sub
aad
repz
popf
pop
mov
jp
add
test
pop
push
push
lret
fidivrs
fcoml
dec
xchg
mov
push
lcall
mov
pop
push
push
pop
decl
mov
cs
inc
xorl
jl
push
xorb
aad
inc
mov
mov
insb
in
dec
loop
pop
stos
jno
mov
pop
int3
aam
pmulhw
cmp
add
cli
int3
adc
outsl
jp
adc
test
push
rorl
rdtsc
mov
aad
dec
shl
aad
and
lret
mov
outsl
adc
in
sub
inc
adc
lcall
shll
fdivrl
jle
stos
ret
outsb
outsl
aaa
nop
mov
lds
out
fistpll
jg
xchg
xchg
mov
mov
push
mov
rol
enter
sbb
fldcw
mov
stos
mov
mov
fwait
or
dec
lock
outsb
or
mov
mov
xchg
jle
jle
jecxz
ficomps
adc
adc
outsb
pop
pop
stos
outsb
fyl2x
mov
mov
sbb
xor
movsl
dec
loope
dec
fcomip
ffreep
ja
jbe
cmp
mov
and
lock
pop
jmp
out
mov
and
push
cld
xor
pushf
cmp
mov
hlt
not
sub
das
ja
shll
fnstsw
stc
popa
mov
jmp
sbb
xor
inc
loop
lret
fucomi
loopne
ret
mov
js
cltd
test
jae
adc
lock
adc
mov
push
daa
and
arpl
xor
inc
popf
icebp
jp
ret
jo
mov
mov
adc
cmpsb
shlb
loopne
push
xchg
jge
pop
and
xchg
sbb
insl
popa
lret
push
dec
mov
outsb
ss
adc
dec
enter
add
or
add
xchg
or
ror
movsl
lcall
pop
add
aam
mov
divl
scas
mov
jns
pushf
xchg
sub
dec
sbb
test
es
movsl
insl
shlb
pop
rol
push
fiadds
mov
and
mov
dec
sbb
and
mov
mov
mov
mov
pop
ja
adc
movsb
pop
or
loop
pop
sub
dec
jo
cmc
xchg
mov
sarl
xor
or
sbb
gs
std
xchg
xor
pop
jmp
fwait
mov
repz
addr16
gs
or
sbb
cmp
push
jle
insb
rolb
jo
xor
inc
dec
xabort
sub
in
lock
test
xchg
inc
icebp
jl
push
pushf
adc
push
int
das
pop
push
jle
or
je
push
int
push
outsb
pop
mov
pop
mov
stos
iret
sbb
mov
xor
jnp
mov
shl
xchg
call
pusha
xchg
dec
testl
xchg
mov
scas
pop
rcll
lods
cmp
pop
fsubl
cld
sbb
into
add
sub
scas
adc
xchg
pusha
mov
test
pop
adc
and
cs
insb
fcompl
cld
fbld
ja
insb
push
push
adc
lret
xor
scas
dec
push
out
push
add
lods
out
add
pusha
daa
enter
push
imul
je
xor
jo
push
push
and
mov
lret
cmp
pop
into
mov
testb
mov
sbb
dec
cmp
hlt
sub
mov
fwait
cmp
mov
mov
sbb
lods
ficomps
lret
les
pop
mov
pop
ja
shlb
add
mov
mov
nop
ss
sub
xor
in
sbb
movsb
sti
xor
aaa
shr
in
pop
jl
stos
std
imulb
jne
in
dec
push
sub
mov
xor
adc
lahf
mov
pop
mov
jg
pop
pop
js
cmp
jg
mov
mov
xchg
and
mov
push
jg
in
loop
ja
cmpsb
sub
dec
shrb
out
jno
mov
and
xchg
add
xor
mov
jnp
js
fnstcw
into
mov
and
xor
stos
cmc
push
fisubs
aas
mull
popa
and
xchg
inc
mov
rclb
lods
pop
add
xor
pushf
mov
push
mov
pusha
sbb
xchg
mov
dec
jge
cltd
pop
push
data16
xchg
pusha
push
ret
jae
cmp
fsub
push
adc
nop
out
sbbb
shll
in
mov
loope
xor
fmuls
xor
cltd
sub
pop
ja
dec
ret
inc
js
mov
push
xchg
fstl
packuswb
cmpsl
ja
dec
sbb
xlat
in
sarb
add
aaa
mov
jno
stos
lcall
mov
fxch
jge
xor
not
stc
add
je
clc
xchg
push
dec
add
outsl
ficoml
or
loope
sub
dec
cmp
sti
lahf
mul
andb
cmc
stos
push
cmp
icebp
sbb
xor
shrb
rcll
xor
ret
imul
mov
mov
mov
into
inc
outsl
jecxz
inc
out
in
add
push
sub
and
xchg
pop
decl
std
mov
cmp
test
das
dec
xchg
dec
adc
cmpsl
cmp
arpl
clc
packssdw
sub
inc
decb
jnp
inc
jb
outsb
js
mov
and
sub
cltd
in
sub
push
into
push
xor
dec
xchg
or
and
iret
mov
fsub
xchg
in
mov
popl
fcomi
dec
shrb
sti
gs
sbb
and
push
out
sub
repz
cltd
adc
xchg
out
loop
cld
or
push
addr16
cmp
push
leave
add
jbe
push
mov
loop
cmp
jle
out
mov
pusha
fucomp
mov
movsb
andl
mov
addl
xchg
in
sbb
xchg
insb
or
lea
mov
into
mov
or
push
leave
or
aas
clc
jmp
jp
fld
leave
xor
std
push
xor
push
pop
jb
sub
adc
std
decl
dec
adc
inc
xchg
jmp
xchg
adc
mov
push
pop
pxor
cmpsb
dec
aas
stc
inc
sub
mov
cmc
mov
jle
adc
inc
jbe
in
popf
pop
cmp
fcoml
movsb
dec
mov
and
es
les
add
test
add
fisttpll
shl
lods
cmp
ds
dec
push
push
div
jne
dec
adc
js
adc
or
sti
mov
pop
sub
mov
mov
in
shr
or
fldcw
out
jmp
cs
xchg
jnp
aas
ja
aaa
cwtl
cmpsl
sub
mov
jp
ja
mov
ret
es
in
pushf
inc
das
call
jecxz
mov
pusha
xchg
scas
mov
push
mov
ret
adc
pop
jle
adc
jns
lahf
lret
dec
in
push
clc
loop
lcall
fdivrp
imul
xchg
sar
int3
xchg
and
push
xchg
inc
addr16
jmp
mov
je
add
dec
inc
and
lock
mov
jecxz
stc
sahf
cmp
loopne
jbe
inc
scas
fimull
inc
jbe
mov
mov
sbb
lods
mov
inc
lret
fcmovne
xchg
mov
jle
cmovno
mov
inc
mov
xor
cmp
ds
popf
dec
std
lret
test
aaa
nop
mov
push
sbb
mov
movsl
mov
adc
cmp
fbstp
stc
mov
xchg
jbe
negb
cmp
fnsave
mov
movsb
fistpll
or
cmp
shrb
mov
xor
cmpsb
pop
sbb
pop
loop
scas
adc
add
movsb
or
or
sub
outsb
js
pop
loope
inc
cmpsl
cmp
or
mov
ret
mov
cld
mov
comiss
and
lret
cmp
jbe
jne
mov
mov
xor
std
jecxz
ror
out
insb
mov
in
xchg
jb
repnz
subb
cmc
xor
adc
mov
sbb
mov
loope
and
repz
dec
fidivrs
add
xlat
lahf
out
leave
enter
andb
popf
or
stos
push
mov
stc
and
aam
xchg
cmp
adc
sub
decb
lcall
lds
jp
aad
sbb
addr16
add
cli
pop
xchg
lret
push
xchg
jmp
idivl
dec
lods
adc
mov
out
sub
add
xchg
xor
cmpsb
popf
inc
xlat
js
in
dec
sub
push
mov
repz
lahf
and
xor
xor
sub
not
dec
fdivr
push
sbbb
int3
out
hlt
xchg
loope
cmp
outsb
ds
ja
fildl
mov
xorb
mov
cmpsl
dec
int
push
repnz
jmp
in
cs
rol
mov
jg
dec
xor
mov
xor
je
or
mov
xor
lods
lret
mov
cmc
fs
adc
xor
shr
cmp
mov
cmp
mov
jbe
and
aad
cmpsb
outsb
cmp
adc
int
push
mov
mov
aam
inc
test
in
jae
fidivrl
loop
cltd
jbe
in
add
dec
arpl
inc
push
or
nop
popf
ret
adc
push
loope
xorl
pop
mov
add
popa
stc
ss
mov
xchg
addb
mov
push
shrb
bound
adc
loop
push
mov
ljmp
jg
inc
inc
sbb
mov
mov
or
gs
adc
push
sbb
xor
and
addr16
sbb
mov
push
clc
cmp
pop
pop
jbe
add
shr
mov
and
dec
and
inc
clc
data16
add
jae
es
xchg
cmp
lret
in
jmp
dec
add
divl
inc
sbb
rcrb
cs
movsb
je
sahf
aam
pop
jb
out
xchg
xor
add
jno
rclb
les
inc
push
jle
push
mov
mov
sbb
xlat
dec
in
push
leave
loop
pop
add
sbb
jl
pop
or
movsb
gs
int
mov
lods
pop
push
nop
insl
and
aam
sbb
push
sbb
outsb
mov
in
add
cmc
mov
out
mov
xchg
ljmp
sbb
mov
or
std
sar
mov
ds
ljmp
mov
sti
and
jns
pop
dec
dec
les
mov
xchg
jle
jp
pusha
into
xchg
shlb
pop
or
jle
xchg
pushf
pusha
call
inc
jg
dec
adc
mov
mov
enter
add
adc
add
aam
sub
push
pop
loope
mov
sbb
jge
cmpsb
xchg
or
pop
xor
push
stos
inc
and
stc
cmp
pop
jge
scas
adc
sub
jp
push
dec
icebp
aad
dec
lret
es
iret
fisttpll
js
leave
inc
movsb
cmpsb
cmp
dec
xor
inc
or
adc
or
xor
inc
xchg
sbb
dec
leave
cmpsb
mov
fsubrl
mov
cmpsb
fdivr
cmp
outsb
push
jl
push
mov
xchg
jp
std
mov
pop
push
shll
push
adc
cmpsl
outsl
sarl
xor
pop
es
icebp
aaa
flds
push
xchg
ljmp
and
loop
aaa
sbb
mov
jmp
push
loopne
cmp
sub
gs
int
and
pop
sub
flds
cmpsl
outsb
add
stc
dec
xor
int
jge
mov
push
sbb
hlt
aam
dec
outsl
inc
stos
and
nop
dec
mov
cmp
test
xor
lock
push
sub
xchg
lods
xchg
pop
icebp
inc
and
fldl
mov
lods
mov
mov
outsl
or
jg
addr16
pusha
sbb
cmpsb
sub
mov
jle
and
aaa
jae
add
add
sub
lock
lret
mov
lea
add
negb
ja
lret
mov
test
jns
sahf
gs
addr16
lods
inc
pop
aaa
sahf
pop
jae
subb
test
cmc
jmp
add
mov
mov
inc
or
dec
dec
imul
push
pop
push
test
xchg
iret
addr16
dec
sbb
inc
push
repnz
lahf
aaa
movsl
cltd
xchg
cmp
lret
add
sbb
mov
insl
std
inc
xor
test
sbb
ds
adc
pop
or
rcrb
jb
imul
push
call
pop
inc
xchg
push
or
mov
sub
adc
mov
imul
sub
push
dec
fmull
adc
rclb
inc
std
ret
lahf
loopne
jecxz
inc
pop
fcmovnu
jge
or
in
js
subb
imul
jnp
xchg
in
xlat
lcall
dec
pop
loope
cmp
adc
mov
std
xor
push
sbb
cmp
lcall
arpl
sub
lret
out
jmp
xlat
sub
mov
shlb
xor
jae
movsb
fmuls
cltd
push
mov
out
es
push
cwtl
xchg
push
gs
je
lods
rolb
nop
dec
push
mov
mov
lcall
into
adcb
notb
sbb
mov
and
fmull
test
cmp
dec
push
lock
cmp
cwtl
xchg
mov
iret
pop
inc
mov
dec
sbb
fadd
adc
mov
mov
lea
and
lahf
repnz
rol
inc
xor
das
rep
scas
and
push
jbe
lahf
outsb
mov
mov
lock
inc
loopne
arpl
and
adc
inc
test
fs
or
jae
inc
pushf
pop
addr16
fwait
sbb
outsl
imul
xlat
push
jecxz
je
or
mov
adc
dec
or
add
sahf
ret
inc
addl
jae
xor
mov
pop
dec
cli
lcall
and
movq
sub
lahf
jne,pt
imul
xor
shll
scas
scas
jb
jg
scas
sahf
stos
std
mov
fwait
pop
movsl
sub
sbb
mov
cmp
imul
sub
dec
push
std
and
pop
outsb
pop
shl
sub
cmpxchg
loop
repz
movsb
faddl
mov
mov
jb
adc
mov
cld
xchg
mov
and
ljmp
jbe
std
imul
cmp
gs
push
mov
mov
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
ja
jae
bnd
mov
ja
push
adcl
jo
mov
mov
das
xchg
fldcw
sarb
rcr
xor
leave
cmp
sub
divl
std
lods
xchg
sbb
cmpsl
pop
into
xchg
test
rcrl
mov
add
or
cmp
pop
jmp
jmp
mov
inc
adcb
insb
jb
je
fldl
in
xchg
or
or
test
mov
imul
inc
movsb
sbb
mov
mov
add
push
inc
push
mov
xor
repnz
orb
fs
icebp
add
jne
pop
cltd
in
xchg
popa
mov
and
test
dec
sub
jp
and
push
ret
addb
mov
fiadds
test
pop
xchg
mov
pop
daa
adc
loopne
fs
out
jns
leave
xchg
adc
clc
xor
lahf
shl
sbbb
out
pusha
pop
dec
inc
int3
xchg
add
idivb
cwtl
push
dec
jae
push
es
into
pushf
subl
stos
ss
sub
mov
mov
cwtl
sbb
loope
idiv
ljmp
xlat
fiaddl
mov
mov
mov
cltd
cli
hlt
cs
stos
ss
inc
mov
inc
ret
push
scas
push
test
stos
add
cmpsl
icebp
andl
lock
lods
push
cmp
sub
ret
push
cli
cmp
ss
dec
inc
cli
pop
inc
popf
or
pop
test
data16
xchg
out
je
and
pop
add
fsubrl
loopne
rorb
inc
jl
push
mov
mov
repz
xlat
dec
xchg
mov
sub
pusha
cmpsl
adc
je
push
rol
pusha
sub
mov
ret
loopne
add
leave
xchg
cmpsl
xor
loopne
stc
ds
sbb
out
aas
lcall
pop
cmpsl
push
in
inc
cmp
repnz
mov
pusha
dec
outsl
lcall
mov
mov
add
jmp
jns
mov
push
and
jmp
adc
sar
push
pop
mov
mov
inc
loope
sbb
xchg
push
and
icebp
add
adc
icebp
addb
jae
outsb
int
outsl
and
sub
inc
push
jne
mov
push
xchg
mov
jge
int
jne
add
aas
sub
cmc
in
mul
adcb
sbb
aas
sarb
loopne
jne
insl
test
js
and
pushl
ljmp
test
xor
pop
push
scas
pop
cmp
xchg
inc
enter
fbld
push
pop
xchg
dec
add
mov
add
sub
xchg
addb
add
inc
mov
dec
fs
repz
push
iret
adc
xor
add
adc
jmp
lock
mov
push
xorb
pop
xor
adc
into
sbb
movsb
int
popf
lea
mov
or
hlt
pop
push
add
sbb
jbe
in
lds
gs
sub
jb
add
xchg
pop
iret
inc
inc
inc
xor
je
rorb
add
inc
pop
roll
xor
fildll
jne
dec
nop
dec
cwtl
xor
imul
mov
roll
jg
xor
es
fisubrl
jl
loopne
pop
cmp
or
add
bound
in
enter
sub
and
mov
xor
xor
adc
xchg
mov
cmp
cld
add
pop
mov
ret
add
mov
add
dec
adc
cwtl
movsb
js
adc
arpl
lret
xchg
aas
aam
test
pop
mov
ljmp
sub
add
xor
mov
jns
ljmp
movsl
cli
subb
or
sbb
faddp
stos
dec
push
and
dec
push
xchg
icebp
insb
add
jb
imul
in
fwait
jno
movsb
xor
js
clc
aas
ret
in
xchg
aad
cld
xor
outsb
ficoms
out
mov
divb
insl
push
lahf
push
push
xchg
out
fs
lahf
xchg
or
notl
cmp
loopne
mov
or
pushf
imul
mov
pop
test
xchg
xchg
arpl
xchg
mov
imul
rolb
jnp
es
add
loope
pop
mov
test
lahf
cmp
scas
push
addl
jl
fistl
faddl
loop
scas
sarb
fildl
inc
out
in
jl
bound
aad
in
rclb
hlt
sbb
lods
daa
add
sub
decb
xor
add
mov
mov
xchg
call
sysexit
neg
outsl
jne
mov
aas
lahf
iret
fldt
daa
fcomip
rcr
jle
mov
subb
jns
inc
mov
out
lcall
fmuls
mov
pop
lock
mov
nop
sahf
ss
cltd
rclb
ret
xlat
iret
dec
and
fcmovb
hlt
inc
sub
adc
fidivs
push
pop
int
fnsave
add
mov
adc
add
push
cmpsb
fxam
push
scas
pop
push
inc
sub
repnz
or
es
xor
clc
push
inc
les
pop
stos
nop
mov
inc
pop
add
sub
cli
sbb
mov
clc
cli
mov
mov
inc
movsl
and
iret
inc
or
dec
push
xchg
sub
mov
stos
push
roll
xchg
scas
cwtl
inc
xchg
or
jns
mov
add
aad
dec
xlat
in
mov
mov
fisubrl
pop
fistps
jb
xor
fimull
dec
cmpl
push
rol
add
mov
mov
fcomp
je
test
cs
push
xor
mov
mov
icebp
add
test
pop
into
popf
adc
rcr
push
push
mov
std
outsl
bswap
out
mov
sarl
dec
popf
lahf
adc
sub
repz
xchg
call
sub
cmp
stos
add
sbb
sbb
mov
or
lcall
mov
repz
test
pop
psllq
inc
and
dec
dec
mov
add
xchg
push
cmpsl
test
push
cmp
mov
fsubrl
inc
add
lods
or
xor
add
jmp
out
and
pushaw
jae
outsb
dec
js
aaa
mov
cltd
jno
mov
xor
rorb
dec
xlat
repz
dec
shrl
cmp
cmp
mov
inc
fsubl
jle
dec
mov
inc
dec
jp
out
ja
adc
mov
mov
aas
cmp
jns
mov
cmp
xor
lahf
js
push
flds
jle
add
sbb
dec
out
lods
xor
enter
cmp
add
sbb
lods
push
inc
fsubrs
push
jno
dec
rol
dec
pop
xchg
xchg
xchg
sub
dec
notb
lea
adc
mov
in
mov
pop
insl
pop
jp
pop
sar
xchg
les
ss
pop
inc
in
sbb
mov
jmp
sub
loop
pop
or
dec
scas
outsl
loopne
leave
xlat
or
pusha
enter
xchg
ret
loope
insb
push
or
push
push
test
out
gs
fildl
jo
cmpsb
in
aas
pop
stos
add
pusha
cli
pusha
mov
push
loope
cli
cltd
mov
insb
pop
daa
cld
ficoml
test
outsl
clc
add
jl
movsl
scas
lds
rclb
insb
inc
add
icebp
lods
cmpsb
mov
ja
cmp
dec
pop
push
stos
inc
pop
xchg
loope
dec
out
and
out
arpl
and
mov
sbb
mov
xchg
and
cmp
jno
jns
dec
cmpsl
mov
cmp
outsb
xchg
pop
imul
adc
movsl
fisttpl
dec
pusha
fnsave
sub
aam
lock
in
lahf
jge
fdivl
mov
adc
jae
das
sub
arpl
scas
pop
add
mov
push
push
fildl
adc
lret
mov
xchg
push
das
xchg
mov
xchg
cmpsl
aaa
inc
jno
and
pop
xlat
add
faddp
or
int3
nop
dec
and
arpl
lods
push
sub
inc
inc
leave
mov
test
mov
mov
adc
dec
sub
cmc
mov
clc
and
xor
cmpsb
sub
sub
out
inc
jnp
jmp
mov
sbb
out
aad
pop
mov
mov
in
and
fxch
rcll
ret
push
rorl
xchg
repnz
sbb
aam
sub
icebp
sar
in
dec
mov
out
imulb
lock
add
mov
xorl
push
push
xchg
adc
adc
push
sahf
out
mov
jmp
outsl
das
imull
fcompl
out
cmp
mov
mov
pop
fldcw
push
lahf
cld
mov
adc
ret
sarl
mov
xchg
imul
lcall
adc
cwtl
pop
push
lcall
incb
aaa
sub
cmp
pushf
mov
jbe
std
in
scas
xor
mov
push
arpl
daa
roll
push
push
or
cmp
sub
leave
push
js
mov
jecxz
fadd
lret
xor
hlt
fcomps
fcomps
stc
dec
sub
mov
dec
sub
mov
repnz
je
or
add
pop
sub
and
mov
lea
and
mov
jecxz
jae
mov
sbb
rorl
sub
xchg
mov
daa
ja
test
sbb
mov
fwait
jp
clc
pop
hlt
add
sbb
dec
xchg
fsubrp
subl
pop
rcll
pop
jbe
xorb
add
fs
sub
je
sub
popf
lret
leave
pusha
xor
jno
adc
mov
and
jne
dec
fldt
jl
mov
pop
xor
push
mov
cmp
push
sbb
push
cmpsb
imul
shrd
enter
fsub
aam
bound
out
in
mov
jge
pusha
lea
mov
mov
add
jns
cmp
pop
mov
repnz
lds
inc
jle
fs
sbb
dec
arpl
fists
add
repz
je
xchg
push
jg
inc
sbb
pop
jle
mov
adc
ds
adc
insb
fdivrp
mov
in
ret
push
inc
push
out
add
or
mov
nop
and
shll
mov
mov
add
mov
jno
jge
pop
pop
cmc
loope
add
test
daa
fwait
test
mov
mov
jnp
xor
sbb
inc
outsl
and
lods
inc
dec
mov
stos
orl
insb
xor
test
mov
sbb
rolb
clc
xor
movsl
xchg
popa
in
xor
jp
cmpsl
aas
mov
subb
lds
fcomi
add
sbb
ror
es
mov
int3
imul
or
popf
cltd
das
add
jg
iret
adc
pop
xor
out
negb
cmpsl
popf
cmpsb
xchg
les
mov
xchg
fnsave
sbb
arpl
push
pop
stos
mov
nop
cmp
add
fsubr
call
sub
stos
push
mov
push
adc
push
pop
cltd
xor
cmp
and
in
jmp
cli
pop
sbb
jno
add
lea
jp
cmp
inc
mov
daa
inc
xchg
lea
std
push
pop
les
lahf
daa
inc
jae
cltd
inc
stc
mov
test
gs
sbb
xchg
mov
gs
xor
jbe
sti
popa
addl
and
loop
push
cmp
ljmp
sub
jecxz
fimull
enter
mov
fwait
rclb
sbb
adc
adc
sbb
loop
sub
movsb
subl
add
addr16
scas
ds
jbe
mov
dec
lret
mov
lea
sbb
add
mov
pop
and
mov
cmp
mov
out
imul
mov
mov
cmp
xlat
cs
or
jp
jns
xchg
jecxz
ficompl
ja
popf
sub
mov
inc
jmp
cld
cmp
or
movsb
jl
scas
or
outsl
push
fcmovnu
xchg
sbb
sbb
setg
mov
fiaddl
cmpsl
jecxz
push
stos
lods
mov
mov
mov
pop
xor
dec
and
fstpt
xor
into
movl
mov
fisubl
mov
sub
scas
push
mov
ljmp
pop
pop
data16
add
jno
dec
je
sahf
or
xchg
sub
cmp
cld
jne
jbe
popa
add
sbbl
sub
sbb
or
inc
aad
les
mov
inc
fs
ficoml
data16
jae
icebp
movsb
inc
pushf
stos
cld
std
lret
adcl
dec
pop
scas
sbb
lods
rcr
nop
push
imul
inc
jle
shll
repz
push
push
adc
in
in
pop
hlt
icebp
or
inc
dec
jns
add
out
ret
xlat
or
ds
test
dec
test
rcrl
mov
mov
das
imul
jae
loopne
mov
push
mov
nop
enter
add
ljmp
jecxz
xchg
std
test
fwait
insl
cli
testl
push
in
cmp
lahf
or
insb
mov
and
xchg
std
je
mov
mov
das
jmp
jecxz
pop
popa
inc
add
pop
or
dec
ret
jo
cwtl
sbb
mov
outsl
nop
jo
ret
xchg
sahf
push
int
jno
mov
add
or
push
adcb
xor
addr16
insl
cmp
fdivrs
xor
sub
shr
dec
outsl
sub
insb
scas
or
cmp
fdivs
imul
mov
dec
cmp
sub
xor
pusha
mov
jns
mov
dec
cmpsb
mov
aaa
jmp
out
mov
cmpsb
shll
fsubrs
pusha
xor
xor
call
xchg
xchg
xchg
push
or
sbb
sub
lahf
test
js
mov
jl
cmp
xlat
inc
mov
fistl
sub
mov
or
cmp
inc
xchg
push
cmp
pop
sbb
jbe
xchg
cmp
ja
enter
out
rcll
and
lock
adc
sub
pop
jns
call
and
sbb
jae
stc
mov
sahf
sbb
mov
push
shll
adc
xchg
inc
and
cmpsl
cltd
por
mov
or
int
mov
pushf
pop
aas
test
es
xor
addr16
mov
dec
out
insb
mov
ficoms
cli
push
imull
leave
pop
out
loop
add
aad
je
imul
adc
insb
aas
rcr
push
insl
or
stos
adc
cmc
scas
sub
inc
pop
and
mov
retw
insl
hlt
xchg
stos
and
out
cmp
sbb
add
aad
pop
cltd
pop
sbb
imul
icebp
sub
push
inc
xchg
subl
mov
inc
pop
xlat
adc
xchg
push
js
and
jp
mov
mov
sub
lret
into
pop
mov
out
loope
data16
push
inc
sahf
mov
fimull
arpl
jno
sbb
mov
cli
cli
stos
and
lret
dec
xor
ds
pop
jno
es
scas
inc
aam
mov
rclb
sbb
jl
adc
pop
sbbl
mov
daa
mov
adc
mov
cwtl
mov
fwait
cmp
rcr
popl
insl
adc
in
inc
jae
jg
cwtl
into
test
adc
arpl
ljmp
add
jmp
mov
inc
mov
or
mov
xor
aad
and
xor
dec
pop
fisubrl
mov
or
ret
pop
mov
sbb
sub
jae
jge
loopne
cmp
lret
in
cmp
xor
lahf
arpl
filds
fwait
xor
jmp
inc
jne
mov
in
add
int
and
push
cmp
test
ret
add
lret
mov
jle
lock
sub
repnz
lods
lock
mov
mov
sub
xchg
inc
addr16
sbb
and
push
jle
pop
insl
jns
stc
adc
sahf
mov
push
iret
and
sub
mov
clc
testl
pop
adcl
int3
dec
xor
iret
jne
in
pop
pop
mov
cmp
xchg
addr16
add
out
push
mov
in
sbb
pop
pop
xchg
xchg
out
in
shrb
dec
mov
pusha
imul
mov
xor
pushf
ds
sahf
pop
ja
pop
jmp
adc
jb
add
sub
dec
jge
enter
not
push
scas
cmp
fsqrt
lahf
add
mov
pop
xchg
int3
adc
adc
jmp
mov
push
cmp
and
xchg
jne
adc
fidivs
adc
jmp
dec
push
push
test
inc
mov
mov
ss
mov
jns
pushf
negl
insb
cwtl
jecxz
jp
cltd
lret
stc
mov
out
in
xchg
imul
sub
dec
mov
adc
mov
and
mov
mov
push
add
xlat
imul
jb
jnp
pusha
sbb
pmaxsw
push
sbb
and
push
lds
adc
jnp
pop
imul
mov
mul
in
dec
dec
mov
bound
and
fimuls
scas
lret
add
mov
test
lods
fsubl
dec
push
ljmp
push
mov
movsl
jle
dec
cmp
jecxz
mov
mov
lahf
sub
jmp
jo
loope
mov
mov
sarl
mov
out
mov
pop
xlat
add
push
mov
dec
in
add
pop
pusha
pop
les
stos
inc
cmp
js
cld
pusha
push
xchg
mov
mov
loop
jmp
fucomi
mov
and
out
cmpsl
jne
out
ficoms
xchg
lea
ljmp
loope
jns
jg
sub
xchg
and
cld
xchg
jge
lahf
jno
inc
into
lods
test
es
insl
push
int
xor
cli
int
std
fstsw
sbb
sbb
or
mov
add
leave
jae
push
out
xchg
sarl
inc
sbb
xchg
add
xchg
mov
mov
imul
dec
or
and
ja
pop
mov
push
jl
lahf
in
insb
mov
cmp
leave
lea
and
pop
fmulp
lods
aaa
mov
and
mov
dec
ja
mov
adc
and
daa
inc
js
mov
cmp
cli
mov
out
jno
mov
xor
pop
or
loopne
push
fistps
cwtl
daa
adc
sahf
push
loopne
jmp
pop
push
cmp
insb
inc
imul
movsl
iret
hlt
shlb
xor
scas
sub
dec
mov
test
shl
cmpsl
imul
cmp
inc
rorb
push
scas
test
jmp
xchg
mov
lds
mov
mov
in
sub
sub
arpl
push
int3
fs
mov
clc
jl
mov
arpl
mov
sbb
push
in
ret
inc
int3
jb
test
stos
aas
or
and
add
out
loope
adcl
push
popf
out
inc
fidivrs
repz
adc
cld
cltd
jecxz
push
dec
lret
and
jg
fsts
and
jno
adc
push
jno
in
fwait
push
in
pop
negb
dec
mov
loopne
dec
and
xor
lret
and
sbb
cmp
call
cmpsb
mov
mov
mov
mov
fisubrs
sbb
sub
sbb
fmul
int
xor
sbb
sbb
and
adc
insl
and
push
out
ret
mov
mov
out
insb
les
fwait
jno
sbb
xchg
inc
std
jnp
movl
jle
or
jb
test
inc
jge
outsl
dec
cld
push
xchg
sub
test
jl
push
dec
jg
test
hlt
pop
jmp
test
jo
mov
and
ljmp
stos
test
jnp
faddl
mov
repz
idivb
xchg
cmp
inc
mov
stos
inc
ror
pop
lahf
sbb
mov
mov
jae
data16
jo
int
mov
pop
and
cmc
cmp
mov
scas
inc
cmpsl
mov
sbb
fs
leave
xlat
je
call
pop
adc
ja
jne
mov
inc
push
rcll
push
mov
pop
or
shlb
dec
sbb
mov
fisubrl
mov
jne
or
jne
pop
ds
inc
jecxz
push
repz
xchg
fsts
ja
sbb
lea
mov
mov
adc
in
push
rol
push
fmul
pop
mov
in
fisttps
sub
mov
pop
jo
or
mov
mov
cltd
sbb
jne
add
clc
je
clc
movsl
cmp
dec
int3
outsb
dec
shl
fistpll
mov
mov
dec
push
xlat
ds
ljmp
mov
mov
cs
orl
adc
stos
enter
pop
push
std
cmp
mov
pop
mov
mov
repnz
rorl
sub
mov
adc
gs
rcrl
andb
push
rcrl
sbb
push
stos
mov
cld
dec
sti
add
loopne
and
xlat
sub
jp
push
insl
jle
xchg
fwait
add
pop
pop
sub
scas
lahf
jmp
dec
fcmove
loope
in
xchg
and
and
and
stc
jnp
push
dec
out
jecxz
ret
notrack
cmc
xor
jp
jns
rolb
pop
inc
sbb
pop
mov
jmp
iret
or
mov
fstp
xchg
stc
adc
mov
push
mov
outsl
jp
stc
jmp
test
inc
cmp
leave
pop
xor
ret
cs
inc
mov
xchg
cmp
xchg
cmp
adc
pop
push
adc
outsl
aas
loopne
add
shrl
ljmp
inc
adc
adc
sub
out
push
out
jns
js
imul
cmpsl
or
inc
or
in
ficomps
ret
aad
or
lock
aad
mov
jno
in
aaa
xchg
cs
cmc
test
mov
push
adc
dec
dec
and
mov
js
movsb
scas
cltd
imul
stos
out
outsl
adc
jo
ret
inc
call
sub
lds
cmp
dec
mov
inc
sahf
pop
dec
in
jae
inc
pop
sbb
lret
mov
mov
imul
jns
testb
shl
lret
add
pusha
loop
mov
mov
pop
mov
xchg
jo
xchg
in
iret
add
call
les
lret
xchg
dec
inc
dec
cmp
add
out
mov
scas
push
cmovnp
lods
mov
gs
push
inc
loope
cltd
cmp
xor
dec
test
adc
xchg
test
mov
mov
sbb
in
mov
into
repz
sbb
and
jbe
push
add
push
adc
mov
sbb
jnp
lea
xchg
inc
cmp
jecxz
pop
push
bound
cmp
jne
or
cmp
xchg
inc
mov
adc
push
mov
pop
in
push
cmp
sbb
popa
aam
repz
sti
sub
push
pushf
xor
incl
and
dec
iret
push
clc
test
fidivrl
pop
adc
out
lock
or
lea
and
mov
cli
hlt
hlt
xchg
js
pop
mov
das
inc
sbbw
aad
movsb
sub
push
adc
data16
into
in
imul
lret
leave
cs
xchg
test
loopne
lock
out
inc
xchg
in
lds
hlt
or
stc
mov
hlt
sub
xor
and
ret
stos
addb
scas
adc
lcall
lock
sub
pusha
sbb
jb
repnz
rorl
fidivrl
fsub
cmp
push
loopne
cmp
jno
sti
dec
andl
test
test
cmc
sbb
push
mov
stc
adc
inc
push
cmp
adc
inc
mov
scas
or
or
cmp
fcom
lock
pop
popf
iret
jle
aam
in
and
jno
push
push
clc
mov
mov
mov
and
int3
xor
jmp
jecxz
adc
add
sub
jp
and
ret
inc
inc
shll
fiadds
out
pop
pop
xlat
out
jo
fisubrl
scas
inc
movsb
pop
pop
bound
and
cwtl
dec
push
std
sbb
xor
xor
pop
loope
mov
sahf
outsl
and
rorb
cmp
push
push
cmp
or
fwait
sub
out
push
xor
cmp
inc
add
jle
into
int
ljmp
cmp
mov
adc
popf
aam
outsb
xchg
stc
lods
lahf
push
add
and
and
fs
mov
mov
sub
mov
xor
xchg
push
lea
lcall
jae
mov
pop
and
lea
sub
sub
cmp
fnstsw
jp
clc
loop
mov
incl
je
dec
mov
data16
stos
sarl
add
ret
or
and
aam
jno
scas
jns
call
mov
sbb
cli
xor
dec
orl
scas
out
clc
popa
paddsw
or
mulb
pop
jmp
sbb
sub
ja
fldcw
cltd
fwait
dec
inc
lods
jb
mov
arpl
enter
adc
mov
cmpsl
jb
ds
imul
fmul
lods
inc
dec
jmp
dec
xor
lcall
sahf
mov
ret
cmpsb
mov
mov
and
mov
jbe
jecxz
mov
sbb
insl
icebp
pop
sbb
cmp
jne
cmpsl
or
div
dec
xor
imul
or
xor
pop
mov
test
rorl
pop
push
cmpsl
xchg
scas
jle
clc
loope
pusha
mov
insl
shll
xchg
orb
rcll
ljmp
icebp
sar
sub
mov
cvtps2pi
outsb
aam
adcl
push
push
fs
stos
mov
das
lds
rorb
aam
packsswb
scas
ds
js
push
and
std
pop
pop
stos
sbb
or
inc
push
addb
int3
push
stc
add
add
repnz
popa
ss
jno
mov
and
dec
iret
jnp
jg
cmp
pusha
jo
cmp
jmp
lcall
or
jl
sahf
jp
frstor
dec
lods
and
jae
jge
inc
rcrb
js
ret
lea
dec
mov
sub
mov
sarl
or
dec
flds
es
push
orl
and
mov
jle
mov
xor
test
bound
or
inc
jecxz
push
cli
adc
lods
sar
nop
bound
sub
int
inc
outsl
pop
xchg
bound
sti
out
jae
mov
dec
pop
xchg
sub
loopne
int
add
jno
imul
and
push
mov
cltd
pushf
rcll
addr16
mov
dec
lea
jb
sbb
lock
ljmp
fisubl
repz
repz
jmp
negl
into
push
mov
aaa
lds
sub
test
lds
pop
inc
or
xchg
mov
in
lods
mov
outsl
xor
xchg
mov
jle
out
lahf
jb
test
push
rorb
mov
imul
mov
out
or
icebp
iret
in
outsb
icebp
loope
int
aam
ret
les
int3
outsb
or
mov
pop
loopne
cmp
add
mov
adc
gs
sbb
push
sub
repz
cwtl
aam
leave
jg
sub
and
dec
ret
or
lea
into
pop
sbb
in
call
test
int
mov
add
mov
int
stc
jbe
pusha
mov
es
xchg
ret
dec
test
popf
push
shr
cmp
mov
pop
or
jmp
test
out
in
aas
and
dec
pusha
pop
cli
cmp
xchg
outsl
insl
dec
into
push
sub
out
out
fnstsw
sub
push
inc
jae
scas
dec
xchg
loope
scas
mov
pop
pop
mov
or
mov
popf
pop
jp
cmc
je
sarb
mov
jmp
and
mov
negl
push
cmpsl
les
xor
cli
adc
xchg
adc
sbb
sub
arpl
jne
xchg
jo
loope
leave
push
xchg
int
adc
in
xchg
xchg
mov
or
mov
les
mov
aaa
xchg
out
xor
fnsave
mov
pop
mov
fcoms
pop
cltd
sub
push
cmp
es
and
sub
push
xchg
pusha
dec
xchg
je
gs
mov
push
mov
shrb
cmpsl
hlt
mov
es
xor
cmp
mov
popa
imul
dec
fcoml
lods
leave
xor
into
mov
pop
scas
push
lahf
loope
mov
stos
mov
bound
mov
lret
add
sbb
ds
dec
and
sbb
test
mov
imul
idiv
enter
dec
pop
adc
or
push
or
and
inc
ds
pop
push
xchg
out
cmpsb
popf
push
les
test
fwait
scas
cmp
iret
fstpl
pop
mov
push
mov
pop
mov
arpl
push
or
fadd
inc
push
and
mov
outsb
and
mov
push
xor
loopne
push
test
movsl
xchg
iret
mov
and
movsl
lea
push
test
mov
dec
pop
jbe
in
pmullw
or
mov
add
stos
ret
jecxz
adcl
dec
arpl
dec
inc
les
dec
lret
mov
jmp
mov
mov
outsl
dec
cli
push
daa
mov
rcrl
inc
xchg
iret
adc
mov
push
mov
mov
arpl
and
int3
test
add
cmp
jne
xor
ljmp
shlb
dec
pushf
aas
sahf
movl
test
pop
pop
add
outsb
mov
rcrb
test
sbb
movsl
lcall
inc
mov
orb
dec
pop
jg
cmc
sbb
adcb
out
fwait
pop
pop
popf
adc
pop
inc
jbe
xor
sbb
xchg
pop
mov
cmp
push
in
sbb
sub
sub
leave
sbb
push
popa
pop
add
inc
scas
xor
ss
loope
sbb
push
or
xor
dec
in
mov
shlb
mov
jno
xor
ja
mov
out
adc
shrb
push
std
scas
lret
inc
mov
pop
add
test
mov
pop
ja
lahf
insl
loop
sti
mov
mov
xchg
sti
loopne
div
and
test
xchg
fwait
lret
fldl
and
or
push
je
data16
or
scas
xchg
not
test
outsl
fisubrl
bound
xchg
xorl
mov
xchg
inc
pop
sbbb
pop
ret
push
popa
pusha
bound
lahf
mov
movsb
lds
sub
sub
ficompl
sbb
xor
cmc
loope
inc
insb
pop
inc
cwtl
movsb
sub
jb
xor
outsb
sbb
sub
jo
icebp
les
fs
and
scas
jb
xchg
movsl
sbb
aad
out
cmpsl
bound
cmp
mov
or
jae
js
inc
fs
mov
jne
jne
lret
xor
ja
jp
add
test
ss
pop
in
mov
lahf
jp
sub
add
xchg
test
sbb
push
xchg
sbb
insb
mov
je
les
jmp
pop
push
add
pop
jbe
jle
mov
pop
sub
ret
adc
jb
dec
hlt
cmp
loopne
enter
repz
or
jo
jo
mov
dec
int3
dec
cli
add
xor
pop
pop
pusha
icebp
xchg
cld
sbb
ds
cmc
xchg
popf
add
push
pop
xor
and
mov
sahf
lds
andb
lea
or
cmp
fsts
ljmp
outsb
jbe
stos
xchg
iret
sti
sub
sub
test
lret
pop
mov
es
or
cmp
sbb
add
test
imul
fs
mov
mov
xlat
sub
test
leave
adc
lds
add
push
popa
mov
ss
mov
cmc
adcb
fisubl
dec
fisubl
push
test
cmp
dec
push
jb
arpl
push
ret
js
imul
repz
jno
cld
in
dec
jb
test
xor
jb
loopne
pushf
filds
popa
ss
inc
dec
jmp
pop
push
ljmp
mov
fisubrl
test
xchg
aaa
push
jo
into
mov
rorl
sbb
clc
mov
fbld
cwtl
jbe
jne
loop
mov
or
test
js
mov
sti
xchg
pop
movsl
fdiv
test
test
mov
xchg
jg
push
dec
inc
mov
stc
into
shll
sbb
mov
stos
mov
loopne
push
add
lock
fcoms
orl
inc
dec
jmp
push
inc
mov
mov
cmp
bound
sahf
pop
into
or
sub
out
dec
cmc
out
mov
lods
ficoms
imul
push
mov
mov
loopne
and
sub
xchg
jg
repnz
fldpi
dec
mov
je
jp
sbb
dec
fisubrs
sbb
push
pushf
sub
mov
xor
div
cmp
xor
aas
push
add
stos
pop
sbb
sbb
xchg
sbb
rcrl
inc
mov
out
dec
mov
pop
sar
bound
adc
les
push
jp
out
data16
xchg
cs
sar
jl
movsb
jne
mov
int
or
or
sahf
sbb
adc
xchg
mov
scas
mov
ret
fwait
jl
aam
mov
or
jo
scas
outsb
lock
push
mov
lods
out
pop
lahf
lea
or
jne
inc
jns
mov
jno
add
test
pop
leave
into
loopne
sub
repz
popf
jp
scas
mov
call
sqrtps
adc
and
pop
gs
test
sbb
dec
mov
std
inc
and
mov
push
sti
sub
jg
lea
aaa
push
xor
into
scas
test
push
es
mov
mov
cmp
mov
push
cs
insl
iret
cmpsb
xor
outsl
sbb
fidivs
in
test
mov
dec
rcr
mov
sbb
lcall
bound
cmpsl
fidivl
hlt
pop
push
pop
fxch
jp
sub
cltd
add
push
mov
cmp
and
lret
lock
call
sbb
loop
cmp
movsl
pop
test
add
repz
xchg
mov
pop
sub
out
jne
adc
or
loope
sub
cmpsl
orl
push
aaa
sbb
push
cwtl
icebp
enter
or
and
outsb
aad
aam
icebp
mov
cmpsb
imul
and
push
inc
jecxz
aas
in
dec
inc
dec
adc
adc
xchg
mov
xchg
fldt
jae
sbb
aad
loope
jle
xor
cli
stos
in
xor
jecxz
cs
scas
rorb
ljmp
mov
add
jno
xchg
xor
das
dec
sub
cmp
mov
sarl
stc
jl
outsl
dec
mov
jl
sarl
test
xchg
mov
insl
xor
ret
sub
fcmovnb
adc
fwait
insb
mov
mov
or
iret
xchg
insb
jge
jne
cmp
bound
xor
cmpsb
pandn
fisubrl
scas
insb
aad
arpl
test
adc
aam
sbb
clc
pop
cs
or
mov
imul
std
jle
test
sbb
mov
fwait
add
andl
lock
push
insl
xor
fdivs
out
push
mov
imul
jo
add
ja
jns
xchg
rcll
idivl
in
fpatan
jns
into
pop
mov
hlt
loopne
add
cmp
mov
sub
jl
sub
stc
or
lret
mov
iret
push
mov
lcall
add
mov
and
lahf
in
pop
pop
scas
ja
into
mov
pop
dec
add
mov
lret
in
push
dec
andl
gs
jns
fcmovbe
scas
ds
or
jmp
push
adc
jno
fwait
jae
mov
cmp
out
sub
sub
jns
les
aam
dec
adc
xchg
pop
insb
cs
or
push
dec
inc
subb
pop
jno
aad
add
repz
popa
xchg
and
loop
pushf
and
dec
dec
inc
jae
add
psrad
rcl
ror
cltd
leave
sti
cmp
bound
adc
adc
lods
mov
cmpsb
lods
cs
ret
imul
inc
aam
pusha
sti
mov
xor
push
push
cld
pop
mov
insl
jg
dec
mov
mov
icebp
xchg
movsl
jp
test
add
loop
std
imul
jl
cltd
sbb
inc
pop
inc
out
inc
xor
cmp
jne
and
cmp
lret
scas
ret
inc
sarb
fnstsw
mov
addr16
fists
stos
popf
aad
xor
out
dec
adc
xor
mov
in
pop
push
xchg
mov
mov
mov
pop
pop
pop
xchg
cs
in
clc
fistps
and
mov
pop
fcmovb
jne
sbb
nop
mov
addr16
in
or
sub
and
xchg
mov
data16
je
enter
jne
add
leave
add
out
push
dec
mov
mov
pop
sub
mov
insl
xchg
in
stos
mov
addl
mov
push
mov
and
or
hlt
movsb
aam
aam
jecxz
mov
pop
in
mov
xchg
out
js
sub
mov
ss
mov
dec
test
mov
or
lret
data16
hlt
psllw
adc
xchg
lcall
gs
cwtl
or
cmpsl
stos
dec
adc
into
jle
mov
mov
aaa
jne
xor
scas
cli
dec
lret
push
inc
test
sbb
mov
mov
sbb
dec
call
pop
pop
out
jb
dec
jecxz
pop
mov
nop
fwait
in
pushf
push
xchg
aad
jp
mov
mov
inc
lret
lods
arpl
xor
pop
test
mov
mov
adc
dec
in
add
dec
jnp
xchg
pushf
mov
ret
cmp
mov
rcrb
hlt
loop
je
pop
mov
lahf
and
inc
add
or
test
mov
jae
jno
adc
sub
imul
pop
cmp
test
mov
ljmp
leave
jle
sti
mov
or
jns
dec
dec
call
clc
insl
push
mov
xchg
jb
mov
mov
add
mov
divl
cltd
insl
jmp
add
or
out
fwait
imul
lods
in
sbbb
mov
dec
or
out
mov
int3
loop
lahf
sbb
mov
and
sub
mov
push
test
dec
jno
dec
and
adc
inc
pop
jmp
or
sahf
insl
insl
rcrb
adc
cld
mov
lods
mov
sub
xchg
add
lea
imul
or
popf
and
xor
pop
pop
xchg
sub
gs
cmp
dec
lcall
lods
xchg
or
outsb
xlat
sbb
push
mov
inc
push
hlt
cmp
mov
pop
dec
into
icebp
push
mov
sbb
addr16
and
cmp
lock
jle
push
mov
xorl
stc
je
sti
stc
push
mov
rcr
data16
mov
push
mov
movsb
idivl
leave
dec
sbb
icebp
loop
cmc
inc
jne
gs
pmuludq
repz
pop
push
es
xchg
out
add
cmp
and
lahf
iret
ljmp
cmp
jno
jecxz
push
dec
les
stos
mov
std
cmp
sarl
xor
dec
jmp
push
call
push
pop
inc
mov
push
cmp
jnp
mov
aaa
xchg
dec
pop
aaa
popa
xchg
push
shlb
sbb
stos
addr16
fwait
or
int
or
mov
add
cmpsl
xor
xchg
sub
test
fsts
mov
int3
test
outsb
cwtl
out
sub
andl
dec
mov
xchg
pop
dec
shlb
xor
adc
xor
rorb
or
jmp
and
mov
idivb
imul
sbb
push
mov
and
jp
mov
int
popa
mov
or
ljmp
pop
ss
lahf
ljmp
cmp
mov
and
int
aad
into
data16
add
mov
shrl
arpl
sbb
mov
repnz
leave
popf
not
lahf
push
and
fs
sub
xchg
cs
add
loope
dec
into
sbb
adc
outsl
add
mov
jae
lods
cmp
mov
cltd
pushf
outsb
mov
push
cmpsl
imul
lds
call
sbb
pop
cmpsb
je
adc
pop
cmpsb
sbb
mov
and
fldl
lock
dec
jnp
into
sub
push
xor
dec
dec
mov
fwait
scas
rolb
xchg
inc
cmp
xor
out
adc
mov
pop
popa
in
mov
lret
arpl
shlb
and
jl
fstpt
shrb
insb
and
sub
pop
repnz
add
aad
fiaddl
in
xchg
jnp
push
dec
cs
lods
mov
mov
mov
fwait
adc
subl
call
ficompl
jg
or
lcall
aas
call
xchg
push
and
shll
cli
andb
lea
mov
or
lahf
pop
inc
jne
dec
xchg
and
xchg
adc
push
xor
bound
mov
in
push
repnz
loop
lock
sti
addr16
subb
test
insb
push
rolb
sub
hlt
xchg
dec
mov
fisubs
push
jns
mov
das
pop
dec
mov
popa
jno
mov
mov
les
and
sub
dec
jmp
adc
xchg
dec
lds
lcall
out
ds
addl
or
mov
xor
inc
gs
into
in
sub
popa
sti
testb
rolb
mov
in
aad
pop
fs
adc
ja
and
in
in
cmp
and
mov
jns
sbb
pop
mov
idiv
mov
data16
mov
mov
jb
insb
cmp
ret
or
movsl
rcrl
inc
inc
xor
or
fmul
ljmp
mov
push
mov
xchg
cli
push
xlat
ljmp
rorl
pop
sub
cli
cltd
mov
mov
sbb
mov
test
pusha
push
cmpsl
dec
inc
or
ja
int3
lods
jae
std
xchg
sub
cmp
xor
jle
out
xlat
dec
mov
dec
adc
orb
sub
addr16
inc
sbb
mov
outsl
popa
aaa
pop
dec
mov
inc
xchg
stos
xchg
inc
movsb
sbb
jb
repnz
sub
imul
ds
das
cmp
push
repz
sti
shrb
or
mov
xchg
and
mov
imul
pop
dec
sub
inc
xchg
sbbl
stos
outsl
mov
arpl
jb
insl
test
icebp
les
shlb
stos
cmp
insl
jmp
loop
adc
xlat
hlt
add
das
ljmp
inc
lret
sbb
mov
les
push
incl
jne
adc
jl
jl
and
lock
out
inc
test
cmpsl
add
popf
push
cwtl
mov
sti
mov
ret
pop
push
cli
xor
lock
jle
push
sahf
mov
mov
sbb
and
loope
jne
mov
jmp
push
in
fiaddl
or
cmpsl
leave
pop
scas
xchg
ret
adc
xchg
and
scas
jmp
xor
in
sub
in
fs
stos
xor
xor
push
addb
sbbl
out
mov
js
popa
ret
cmpsl
sbb
call
movsb
mov
repnz
sbb
cs
out
shll
push
and
cmp
adc
adc
mov
mov
gs
or
int3
pop
in
loopne
or
pop
cmp
lret
cmc
icebp
adc
stc
rorl
mov
popa
pusha
push
dec
leave
lret
loop
fwait
bound
fimuls
fcompl
pop
shrb
popf
xchg
or
pop
movsb
xchg
nop
frstor
inc
dec
add
dec
test
test
jo
mov
mov
pusha
or
sbb
xor
int3
mov
popa
jno
pop
cmpsb
cmc
sub
iretw
aas
sbb
xchg
bound
jbe
sbb
je
cmp
orb
push
bound
ds
dec
push
lea
add
or
imul
insb
cmp
push
or
sbb
adc
pop
xchg
mov
aas
push
inc
adc
cwtl
xchg
mov
das
loope
call
adc
es
scas
fidivs
aam
loopne
pop
xchg
sbb
aaa
movsl
mov
lret
or
cmp
and
fidivrs
and
jle
mov
or
and
mov
xchg
out
in
mov
or
and
dec
xchg
cmp
dec
pop
adc
mov
mov
add
xor
aaa
dec
in
fnstenv
cs
and
ds
xor
sbb
xchg
fbld
dec
mov
dec
mov
xor
xchg
pop
dec
cwtl
push
mov
out
and
lea
out
dec
xchg
pop
into
fcomi
iret
add
shrl
ret
lock
xor
mov
sub
mov
inc
call
sahf
dec
js
ljmp
cltd
fisttpl
push
or
xchg
add
pop
push
mov
mov
cmp
xchg
cmp
repz
add
mov
jp
cwtl
mov
or
arpl
shrl
jmp
xlat
jp
mov
pushf
repnz
movsl
sti
sub
adc
loopne
std
subl
aad
adc
js
sub
addb
or
movsb
testl
lret
and
insl
push
sbb
in
dec
clc
push
xchg
loopne
jno
push
pushf
jmp
roll
add
add
dec
xchg
push
adc
bound
xchg
cmp
outsb
insb
cmp
push
mov
pop
pop
sub
and
or
out
push
sti
in
hlt
sub
clc
aaa
cltd
pushf
push
shlb
rcl
daa
shl
adc
fs
fcoms
test
add
dec
sub
xchg
mov
arpl
lcall
fwait
or
movb
stos
lret
sbb
xor
mov
dec
adc
dec
clc
mov
fcompl
jge
mov
popa
jecxz
xchg
jp
mov
inc
insl
addb
jo
xchg
xchg
test
jnp
shrl
mov
xor
xor
mov
jo
repz
movsb
mov
sub
and
test
test
aas
sbbb
outsl
push
push
add
inc
add
cmp
std
ret
dec
gs
push
andl
jne
mov
mov
movsl
lods
xchg
push
mov
ds
mov
shl
add
ljmp
dec
cmpsl
push
jg
xchg
adc
and
jmp
jae
xlat
dec
pusha
jl
cli
pop
jmp
push
lahf
insl
xor
push
sub
cmp
jge
pop
fisubrl
mov
cltd
outsl
xchg
cmpsl
int
pop
js
ret
setae
int
cli
das
jbe
inc
push
and
jnp
ja
aad
add
and
and
add
jmp
lock
sahf
xor
pop
pop
dec
cmpsb
and
inc
movsb
or
stos
cmp
push
test
std
jb
cld
cld
icebp
lcall
or
xor
pop
data16
jne
nop
jnp
or
das
dec
dec
mov
popf
xchg
inc
aaa
xchg
sbb
sub
xchg
aad
cmpsb
cld
rcl
sub
mov
sbbl
xor
mov
imulb
orl
enter
jp
dec
add
jnp
sbb
inc
movsl
in
xor
cmpsb
fdiv
mov
je
push
sahf
jg
mov
js
cld
out
fcom
jecxz
rclb
fmul
lock
inc
inc
shl
or
add
mov
add
outsb
mov
mov
pop
test
addr16
andb
xchg
sahf
in
cmp
cmp
push
mov
push
mov
loop
popa
loop
cmp
jne
xlat
repnz
inc
scas
std
leave
sub
push
out
or
xor
mov
fisubl
jmp
mov
pop
pop
adc
ljmp
sbb
and
cld
movsl
mov
mov
pop
mov
fld
enter
pop
inc
cwtl
xchg
adc
mov
jp
lods
int3
ljmp
cld
inc
sbb
or
pushl
repz
mov
scas
aaa
pop
insl
dec
cli
inc
stos
jns
mov
mov
mov
inc
cld
mov
and
sub
inc
imul
call
cmp
mov
pop
fidivrs
fistl
cwtl
adc
adc
pop
xlat
icebp
mov
and
mov
outsb
cmpsb
icebp
add
bound
fs
jl
sbb
fistpl
mov
mov
pushf
cmp
cmp
testl
repnz
jo
daa
aas
cmp
stos
push
push
adc
jbe
push
pop
mov
jbe
ljmp
movsl
push
out
fsubs
xor
por
push
aad
dec
jb
pop
sti
push
xchg
les
scas
mov
outsl
add
sbb
pop
cwtl
or
cltd
fisubs
pop
imul
mov
or
mov
cs
int
sbb
ficompl
scas
push
sbb
into
lea
fildll
addr16
sbb
mulb
je
or
arpl
insl
hlt
data16
popa
fldcw
popa
daa
clc
aaa
loope
mov
push
mov
push
pop
out
outsl
dec
in
lahf
daa
outsb
sub
adc
sbb
ds
inc
sub
adc
mov
hlt
outsb
jp
sbb
cs
outsl
mov
add
in
jb
xor
hlt
cmp
je
int
push
or
sbb
rorb
pop
inc
add
cmc
lods
test
pop
lret
cmpb
pushf
mov
mov
aad
movsl
sbb
inc
adc
mov
clc
or
aaa
js
movsb
mov
mov
push
add
xchg
mov
ja
jnp,pn
pushf
push
mov
add
mov
pop
inc
cmp
cmc
movsb
into
imul
bound
pop
add
or
sbb
sarl
addr16
mov
mov
aad
mov
cmpsl
sub
jbe
lret
dec
sbb
jnp
lret
les
lods
add
dec
cmp
vpunpckhwd
mov
jecxz
sbb
or
cmpsb
xchg
xor
sbb
xchg
mov
aas
mov
mov
dec
out
aas
push
xor
xorb
push
mov
rcr
nop
xchg
daa
or
fwait
cs
or
and
aaa
fldlg2
dec
fisubl
jp
bound
pop
insl
pusha
or
add
cmc
mov
hlt
dec
push
or
adc
inc
or
dec
aam
xor
inc
lds
jp
call
mov
cmp
pop
add
push
sti
pop
les
push
mov
push
popf
mov
gs
pushf
push
adc
nop
jnp
call
mov
in
cs
jae
mov
sub
insl
cld
dec
xchg
dec
xorb
aam
ret
jne
in
out
pop
jle
aam
loope
ljmp
jge
xor
movsb
lret
ss
es
icebp
or
pop
cmp
ss
push
aad
jbe
sbb
loop
cmc
stc
je
mov
andnps
jl
ficomps
adc
notl
pop
jb
pop
jae
or
out
cwtl
fimuls
xor
push
cmpsb
adc
addr16
push
push
pusha
pop
imul
mov
in
mov
jne
xor
sbb
test
std
pop
aad
mov
wrmsr
mov
sub
mov
inc
js
enter
das
popa
cli
xchg
pop
icebp
mov
xlat
pop
in
dec
inc
std
mov
xorb
sub
lock
xchg
incb
lahf
in
lahf
sbb
cwtl
sub
push
mov
or
arpl
adc
mov
fcomps
ja
outsb
sbb
icebp
aas
mov
scas
cmpsl
add
sub
pop
push
add
decb
jo
enter
sbb
fists
fmul
imulb
mov
scas
fnstcw
sub
arpl
pushf
mov
stos
xchg
push
adc
nop
in
sbb
jle
js
imul
nop
add
push
cmpsb
jg
sub
inc
push
add
xchg
ljmp
dec
iret
cmpsl
xchg
and
push
sbb
jo
xor
push
mov
jb
jmp
inc
push
ss
adc
push
fsubl
notb
fstl
mov
xor
add
jl
out
sbb
inc
imul
int3
divb
add
xchg
xchg
and
xor
outsb
out
mov
lahf
mov
daa
sbb
push
xor
mov
popa
int
fcmovne
out
mov
cmp
xor
addr16
je
in
add
mov
cli
movsb
add
push
daa
loope
sbb
repz
and
pop
mov
sub
ret
dec
inc
call
cmp
cmpsb
cmpsb
inc
lods
cmp
cmp
insl
and
push
dec
sbb
cmpsl
adc
push
std
fsubrs
stc
dec
subl
dec
xor
xlat
int
gs
add
and
push
push
loop
test
jns
sub
inc
movsb
sub
xchg
adc
mov
push
cmp
push
push
sub
mov
sub
ds
gs
cmp
jnp
xchg
nop
push
push
ljmp
repz
pop
imul
mov
mov
in
and
push
inc
push
in
jbe
add
xchg
xorl
mov
in
das
mov
cmp
sbbl
je
sti
inc
xchg
push
out
ret
mov
and
cmp
push
leave
xchg
xchg
dec
mov
or
fwait
mov
stc
lahf
ja
cwtl
sti
adc
pop
int3
push
inc
xor
add
push
mov
mov
test
cwtl
pop
outsb
out
scas
scas
xchg
push
into
push
out
iret
xchg
sti
hlt
inc
insb
cmc
add
aas
ja
sbb
or
es
sub
pop
fsubrp
inc
rcrb
inc
xchg
add
imul
jecxz
fldl
mov
dec
sbbb
adc
push
add
jnp
jne
mov
int
jnp
and
ja
arpl
inc
repnz
aaa
add
sub
loope
icebp
and
lds
jmp
sar
outsb
out
cmc
ret
inc
stos
add
push
dec
sub
jnp
mov
inc
xchg
sub
test
mov
fimull
mov
cmp
mov
or
mov
mov
jo
aam
data16
cmpsb
cmpsb
pop
xchg
mov
es
push
cli
jge
dec
xlat
xchg
mov
add
mov
inc
int3
loope
xor
xor
mov
mov
andb
dec
mov
mov
mov
mov
and
jbe
dec
mov
lods
lea
daa
push
adc
mov
faddp
pop
cmp
jno
cmp
and
repz
lods
pushf
lock
scas
add
clc
push
xchg
movb
int
imul
pop
ljmp
cmpsl
stos
push
repnz
lret
enter
pop
sub
jne
int3
or
rolb
scas
mov
jbe
call
add
scas
ret
outsl
xchg
rorb
xchg
xor
mov
shll
scas
mov
fs
dec
fildl
ffreep
jnp
sahf
into
js
adc
idivl
stos
inc
jbe
out
shlb
pusha
data16
test
mov
lods
adc
je
xchg
cmp
iret
add
ret
jl
lahf
cld
andl
lds
sub
mov
insl
cmp
adc
or
add
xor
and
mov
or
pop
movlps
sbb
in
sub
fbld
incl
out
cmp
sti
cmp
jne
fs
push
out
outsb
dec
xchg
jne
fsub
sahf
sub
and
vmwrite
cmc
push
cmp
jb
push
sbb
ja
lock
out
mov
cmp
mov
mov
mov
mov
jp
cmp
loope
sahf
outsl
arpl
push
push
stos
adc
je
jmp
push
inc
loope
inc
lret
adc
sub
mov
test
aad
sbbl
inc
out
aas
mov
shl
jg
cld
imul
mov
adc
fcom
test
inc
cwtl
mov
decl
pop
mov
mov
test
fwait
xor
dec
ret
imulb
ficompl
orb
cmp
addl
imul
scas
loope
fidivs
shrd
and
jg
shll
pop
fstpl
push
cmp
mov
adc
cwtl
nopl
jb
icebp
xlat
shr
or
cwtl
cwtl
je
aaa
repz
test
stos
cmp
cli
lock
das
sbb
or
shrb
pop
jb
sub
repnz
fcomi
mov
inc
and
cwtl
std
mov
fisttpl
cmp
je
add
stos
cmp
hlt
jle
cmp
outsl
into
fnop
rorl
xor
pushf
mov
jge
loop
sbb
add
in
stos
cmp
in
jl
cli
mov
lret
xchg
cmp
jnp
push
sbb
je
into
adc
mov
shll
mov
scas
xor
clc
test
mov
sahf
pop
pop
mov
and
mov
push
shrb
inc
lahf
pop
or
mov
out
push
outsl
aad
xchg
push
arpl
xor
cli
pushf
nop
sahf
cmp
push
dec
icebp
aaa
rcr
pop
mov
aam
in
insb
cli
xchg
sbbb
xchg
jno
mov
movsb
add
push
orb
add
cs
mov
mov
cmpsl
jle
jecxz
jge
cmp
xchg
popa
arpl
clc
movsl
jns
inc
adc
push
test
pop
cmp
aaa
dec
nop
jns
mov
int
jae
lret
jmp
jo
lods
cmpsl
or
cmp
mov
xchg
cmpsl
mov
mov
lret
jbe
fistpl
push
popf
xchg
pop
bound
xchg
sti
shll
test
sub
cmp
das
mov
aam
pop
and
mov
nop
out
xor
test
add
out
bound
xchg
sbb
fidivs
ds
out
mov
popf
jne
imul
sbb
adc
add
leave
incl
cmp
push
push
addb
scas
dec
out
mov
pop
in
push
jmp
sub
xor
pop
xchg
sub
adc
sbb
fadd
dec
pusha
adc
pop
mov
lock
dec
gs
nop
and
mov
inc
clc
std
cwtl
jne
xchg
mov
out
pop
inc
mov
xor
leave
inc
fadds
in
inc
addr16
lret
dec
pop
repz
dec
sbb
dec
out
add
aaa
sbb
hlt
inc
push
fidivrl
movsl
mov
and
push
rol
mov
or
sub
sbb
sub
cli
shlb
popf
mov
pop
xchg
aam
jnp
outsb
push
mov
and
jecxz
jne
test
stos
faddl
pop
jl
dec
test
add
adc
outsl
or
divb
xchg
xchg
push
push
push
shll
stc
push
adc
fs
mov
jl
push
adc
push
repnz
ds
and
pop
jno
inc
fnstenv
popa
stc
les
incb
sub
sub
cmc
or
ror
fnstcw
mov
and
cs
xlat
mov
pop
data16
iret
push
shlb
dec
into
gs
cmp
in
aad
or
out
jle
popa
imul
push
inc
andb
aaa
mov
loop
repnz
adc
sub
inc
fldenv
leave
or
fsincos
sarl
pop
in
xor
lcall
sbb
inc
add
test
adc
add
leave
sub
movsl
dec
aas
dec
mov
test
dec
push
cs
rcll
mov
pop
sbb
lds
add
shll
in
ficomps
cmp
mov
mov
push
inc
adc
fmull
ljmp
inc
leave
rcrb
daa
fidivrs
cmpb
cmp
lahf
inc
xor
jl
xor
ret
lahf
testb
mov
out
fdivrp
push
dec
and
lret
iret
movsl
adc
inc
cmp
insb
aaa
jnp
out
movsb
call
lcall
mov
fidivrl
sub
sahf
rcrl
outsb
dec
mov
ret
loop
fcoms
jb
sub
xchg
ja
stos
pusha
fptan
lret
mov
test
adc
xor
fwait
add
jb
nop
add
mov
scas
dec
imul
insl
sbb
jb
dec
shlb
pop
cmp
xor
shlb
mov
in
cmpsl
pop
dec
mov
stos
mov
arpl
inc
jle
mov
cmpsl
adc
or
add
mov
sbb
xchg
pop
outsb
and
lret
jecxz
adc
sub
mov
mov
pop
mov
pop
lods
mov
push
loopne
pushf
sbb
je
rorl
mov
sub
jno
aaa
jnp
and
out
inc
fcmovnbe
sub
lcall
mov
call
jnp
cmp
sub
pop
int3
imul
es
xor
sbb
shl
int
push
sbb
dec
xlat
pop
or
mov
cmpsl
in
push
xor
inc
or
mov
cmpsl
pop
movsl
jg
cmp
pusha
cltd
or
dec
jnp
cmpsl
xchg
lds
enter
pop
shl
xchg
xor
jle
lea
cwtl
pusha
out
ja
jp
adc
xchg
add
inc
ret
pop
push
inc
into
data16
cltd
dec
pop
in
push
xchg
in
xlat
inc
lock
mov
mov
cld
dec
or
mov
push
dec
ds
dec
jmp
or
cmp
out
fwait
and
in
and
mov
jle
js
cmpsl
test
daa
lahf
dec
adc
jmp
push
and
sub
inc
roll
xor
lock
mov
push
cld
push
pop
adc
jb
jg
cmp
rcl
popf
and
mov
cmpps
jecxz
call
out
pop
mov
out
xor
xchg
sahf
mov
nopl
int
jno
inc
movsb
addr16
fwait
sub
cmc
jb
cmpsb
lods
jle
leave
lret
enter
push
jg
stc
les
or
or
adc
andl
pop
in
fcmovnu
jns
mov
aad
pop
lods
insl
movsl
insl
scas
or
std
ret
out
dec
js
adc
mov
dec
inc
push
js
xor
movl
stos
mov
pop
jo
adc
out
insb
stos
jmp
dec
inc
add
mov
fstps
test
aam
push
ljmp
xchg
gs
sub
in
cs
jecxz
outsb
mov
pop
mov
inc
jl
inc
fcomps
sti
and
stc
jmp
std
sbb
mov
xor
jbe
mov
add
xchg
test
div
lahf
popa
inc
stc
js
fucomip
stos
sbb
data16
push
mov
add
sarb
scas
std
xchg
int3
sbb
sbb
cmp
push
sub
cmpsl
fcom
or
pop
aad
test
adc
adc
inc
cmp
jo
add
xchg
sbb
js
and
shlb
jp
les
fldcw
lods
xchg
or
add
addl
mov
jo
or
in
imul
js
mov
add
dec
or
jne
add
inc
in
imul
loop
fcos
cmpsb
es
sarl
mov
mov
dec
fsubl
insb
add
enter
mov
dec
or
dec
out
repz
lods
iret
aaa
mov
add
cld
adc
mov
dec
clc
and
and
mov
mov
aaa
or
stc
lea
in
loope
xchg
cmp
aam
adc
cmp
jg
pushf
pop
mov
mov
mov
test
aam
shl
jae
xchg
popf
dec
inc
ss
je
and
insb
sub
dec
jno
sbbl
push
cmp
mov
lock
scas
inc
inc
jecxz
inc
and
clc
test
sub
adc
adc
mov
xchg
pop
fwait
and
loopne
or
cmp
in
insl
aaa
addr16
push
inc
call
fldcw
inc
test
add
mov
jg
cmp
mov
cli
std
das
ss
pop
loop
or
inc
and
adc
aam
arpl
sub
cmp
daa
rcrl
dec
or
sub
xlat
jle
fisubs
ret
ficompl
xchg
mov
int
push
jne
je
sub
inc
or
cmpsb
lcall
add
aad
cwtl
pop
jmp
inc
ss
jo
pop
aad
cld
test
xor
stos
inc
or
sbb
jge
mov
cmpsl
xchg
data16
nop
cmpsb
scas
aas
iret
jl
in
sbb
cs
sbb
dec
mov
in
frstor
aad
insl
out
or
pop
imul
mov
xchg
ljmp
xchg
lret
cld
sbb
stc
mov
push
ffree
cmpsb
movsb
xlat
xor
push
adc
stos
in
inc
imul
sub
scas
jp
jns
mov
sbb
inc
jg
xor
add
sub
insl
ja
mov
mov
loope
cmpsb
nop
aaa
inc
sub
jb
mov
cwtl
xchg
out
fdivrl
add
jg
leave
sti
into
xchg
pop
mov
xor
lret
jb
cli
dec
in
data16
mov
loopew
push
pop
addb
scas
loopne
ss
inc
adc
push
mov
stc
rclb
fsubrs
add
aad
xor
insb
jle
aaa
repnz
mov
dec
loope
lcall
pop
push
mov
cmp
mov
mov
push
lds
mov
xlat
push
shrl
call
jge
add
outsl
das
ja
add
adc
in
xchg
ljmp
mov
adc
das
out
and
mov
add
sub
inc
mov
mov
xlat
push
jbe
mov
adc
lods
push
push
pushf
inc
cmp
pop
loopne
cmp
or
mov
mov
push
out
out
jne
test
or
push
xor
in
imul
int3
xor
jae
or
aas
adc
and
ds
inc
ja
lods
pushf
out
in
sub
ret
pop
adc
mov
or
movsb
xor
les
icebp
push
cmp
lret
out
subl
jmp
cmpsb
and
fptan
cmpsb
pop
fsubr
push
jns
ret
jo
push
loope
out
mov
ret
mov
int3
jg
push
gs
loope
fdivrs
cmc
ja
inc
lcall
jp
enter
jnp
push
xchg
or
sbb
lahf
scas
lahf
sub
pusha
and
nop
pop
xor
clc
push
int3
loopne
fnstsw
lcall
jne
xor
leave
mov
jecxz
aas
xor
jle
jecxz
xor
dec
dec
aam
pusha
xchg
and
lret
pop
adc
cmp
out
jo
inc
enter
xchg
aas
mov
roll
repz
push
adc
shl
cmp
dec
das
and
stos
sti
sahf
adc
lea
and
in
dec
inc
sub
arpl
vphadddq
push
push
fadds
push
adc
mov
mov
mov
pop
xchg
cmp
push
cld
nop
mov
cmp
and
sub
cli
movsl
mov
mov
xchg
add
cmp
xchg
dec
arpl
sbbb
nop
mov
ja
and
push
int
fistps
test
and
adcb
shrl
push
dec
aam
mov
mov
pop
loope
pop
daa
mov
aam
pop
pop
les
mov
mov
inc
sub
sbb
loope
loopne
and
xor
stos
adc
pop
jmp
cmp
sbb
inc
mov
push
ret
xchg
and
jne
cmc
xchg
jge
jne
enter
push
sahf
mov
cmp
sbb
cs
ljmp
adc
inc
dec
inc
pop
rcr
push
add
push
or
mov
ret
arpl
and
test
push
pushf
sub
cmp
in
call
mov
lds
arpl
cld
ret
sarb
jns
mov
dec
jb
adc
pop
iret
cmp
push
xchg
or
popf
pop
mov
in
outsb
inc
test
dec
ret
ret
arpl
inc
mov
xor
adcl
pop
or
mov
in
inc
cmc
xchg
adc
and
insb
and
and
xlat
xchg
call
lods
mov
mov
push
cli
out
notb
dec
xchg
mov
js,pt
test
ret
sub
movsb
loope
mov
mov
mov
insl
fs
test
ljmp
cmpsl
das
xchg
cltd
jg
dec
shl
jle
out
fisubrs
jae
mov
or
push
rclb
cmpsb
and
das
out
negl
xor
fmul
lea
pusha
mov
adc
sub
xchg
adc
out
jp
inc
rcl
or
fnstsw
js
or
mov
sbb
or
or
add
and
jns
mov
ret
insb
lods
adc
pop
in
lea
arpl
leave
or
sbb
inc
pop
sbb
add
or
inc
dec
lcall
in
jecxz
xchg
jp
ds
xor
cvtdq2ps
pusha
outsl
pop
xor
push
push
push
aad
cmp
mov
inc
xor
adc
aaa
insb
iret
js
jecxz
xor
call
test
fs
hlt
repz
int
jge
into
test
decl
lods
inc
add
repz
mov
arpl
hlt
cmp
js
and
push
int3
cwtl
or
xor
cmp
dec
sahf
mov
iret
push
outsl
imul
adc
pop
push
push
out
lret
push
inc
and
incb
jecxz
ss
push
insb
aas
push
jmp
sahf
adc
inc
cmp
and
jnp
or
mov
das
xchg
adc
subb
dec
pop
nop
jp
inc
and
xor
xchg
shll
jg
pop
xchg
or
dec
adc
mov
inc
sti
les
push
jmp
enter
mov
xor
mov
aad
imul
push
push
dec
dec
mov
sahf
mov
mov
pop
test
adc
leave
push
add
jns
movsl
jbe
enter
movsb
adc
outsb
aam
jmp
add
xchg
stc
bound
popl
inc
and
aaa
dec
jl
nop
lods
daa
jge
push
mov
call
mov
sti
sub
or
loope
xchg
mov
pop
lahf
or
scas
and
push
clc
xchg
xor
add
daa
jge
sub
inc
jge
cmp
cmp
mov
inc
outsl
daa
pop
addr16
mov
mov
cli
dec
mov
adc
pushf
xchg
aam
xlat
stos
adc
push
pop
sahf
inc
ret
push
incl
sti
cmp
xor
cmc
mov
mov
repnz
test
mov
jns
mov
cmp
daa
inc
jmp
lea
rolb
cs
mov
mov
sbb
sub
xchg
cmp
in
cmp
outsb
in
mov
test
xor
rcll
xchg
push
ja
mull
je
push
sbb
out
xchg
gs
mov
subb
adc
out
fs
nop
mov
daa
arpl
mov
inc
mov
call
jb
sub
movl
loope
mov
mov
jb
mov
outsl
pop
mov
sub
inc
xlat
cmp
stos
faddp
out
xchg
sub
ljmp
int
testb
test
push
jg
ljmp
imul
add
sbb
push
push
or
daa
pop
push
mov
inc
sti
add
lret
mov
ret
push
in
xchg
inc
pusha
mov
and
mov
je
mov
enter
shll
lds
jae
lahf
fmuls
xchg
fistl
cld
jo
push
xlat
xchg
mov
push
fimuls
divl
or
insl
int3
dec
push
mov
repz
loope
xor
jnp
jns
pop
adc
and
fldcw
mov
mov
xchg
cwtl
jg
ds
push
inc
push
inc
mov
sub
int3
rorl
sub
mov
push
adc
test
jmp
mov
cmp
mov
cmp
mov
add
jl
adc
pop
pop
add
push
xchg
sub
outsb
push
in
shlb
sbb
pop
xor
xchg
aas
mov
outsb
rorl
push
clc
out
dec
shrb
pop
xchg
inc
in
in
in
dec
jg
jmp
jnp
sbb
insl
adc
mov
insb
in
fsubp
lahf
idiv
xor
ss
fidivrl
in
jae
fadds
or
or
mov
jns
xor
enter
inc
jle
loop
sbb
addr16
jae
jmp
push
stos
in
xlat
adc
and
push
push
lret
pop
jns
int
shrb
pop
jg
lods
fimull
shrl
sbb
fisttpll
or
inc
adc
jo
push
lcall
mov
mov
aas
xchg
mov
dec
pushf
pop
ret
mov
roll
mov
icebp
sar
mov
enter
stos
lock
push
push
iret
push
xor
std
gs
fimuls
mov
fsubl
and
enter
iret
es
aaa
cmc
or
mov
mov
cmp
jnp
xchg
adc
mov
dec
sti
aad
or
xchg
fs
cwtl
aad
clc
pusha
jle
sub
into
loopne
cmp
adc
int3
ds
es
sub
mov
repnz
andb
adc
inc
cltd
jns
or
pop
lds
stos
subl
mov
cmpsl
pop
jbe
inc
icebp
adc
sbb
sbb
fisubrs
lcall
mov
cmp
or
test
into
adc
xchg
lods
int
repnz
test
movl
cmp
dec
testb
idivl
push
sub
or
adc
pop
lret
pop
and
ret
out
js
addr16
mov
ret
fst
cmpsb
pop
pop
ja
aaa
out
into
push
mov
mov
ja
into
pop
addr16
movsb
push
or
out
jp
movsl
add
jno
popa
cmp
mov
jmp
cmpsb
andb
fsubrl
leave
popa
outsb
sti
cmp
xchg
loope
sarl
mov
xor
adc
pop
mov
das
fwait
xchg
add
test
adc
movsb
ss
mov
fstpl
stos
and
xchg
dec
ljmp
adc
jp
jle
lret
nop
pop
cmpl
add
lods
neg
push
jl
mov
mov
mov
inc
jp
mov
shrl
mov
int
inc
shrl
lahf
and
jno
test
cmp
pop
inc
mov
arpl
popf
push
in
enter
ljmp
push
pusha
mov
push
dec
inc
cwtl
mov
adc
clc
sbb
jb
cltd
notl
dec
rclb
into
in
stos
inc
pop
mov
jo
cld
ret
rol
sbb
fdivs
in
lret
psadbw
sbb
and
sbb
jns
outsl
fbstp
test
hlt
jbe
xor
into
mov
cli
push
test
lods
add
sub
clc
mov
rcrb
std
imul
andl
sub
sub
decb
jg
ss
ror
xor
insl
daa
and
pop
setl
xchg
fnsave
lods
add
inc
shlb
xor
in
sub
bound
cmpsl
lock
stc
lods
aaa
inc
mov
mov
or
in
adcl
and
fadds
rcl
adc
pop
inc
loop
adc
outsl
jb
jle
xchg
xchg
dec
andb
shl
mov
push
push
mov
xor
mov
sub
or
add
shrb
cs
cmp
or
pop
sbb
push
aaa
push
iret
pop
icebp
pop
or
xchg
jnp
sbb
pop
cmpsl
adc
mov
jmp
daa
nop
xor
pop
push
cmp
ds
mov
xor
sub
jb
push
push
add
sbb
pop
lret
cmp
ss
sbbb
imul
sbb
lods
mov
dec
sbb
lods
mov
into
xor
dec
stos
add
jo
loopne
rcr
jmp
mov
jge
cli
push
pusha
pushf
fdivrp
addl
jne
cwtl
adc
and
jl
jnp
mov
enter
leave
mov
mov
cmp
shl
test
push
mov
ds
cmp
dec
sbb
and
mov
cmp
push
xchg
sub
push
dec
sahf
mov
hlt
jno
add
imul
fwait
mov
lods
push
pop
fdivrl
lods
push
jg
shll
into
daa
cld
push
jecxz
fdivrp
loope
das
ljmp
and
leave
add
fmul
xor
cmp
xchg
dec
pop
or
pop
adc
enter
in
sub
lods
dec
xor
mov
ss
enter
in
push
push
stos
sbb
mov
popf
push
data16
iret
jecxz
scas
dec
mov
jl
mov
and
xorb
arpl
in
sub
jb
jmp
sub
cmpsb
mov
cli
addr16
jo
jb
mov
adc
les
cmpsl
cmc
adc
cmc
pop
outsl
dec
mov
loop
jno
sbb
jo
xchg
fs
fcmovnbe
out
pop
sub
jns
mov
stos
mov
call
jno
fistl
adc
inc
aad
test
mov
adc
out
pop
or
add
mov
les
adc
fisubrl
and
dec
jmp
sub
pop
mov
add
arpl
loope
push
out
inc
and
into
sbb
outsl
adc
scas
sbb
jbe
cmpl
mov
push
jnp
mov
xchg
xor
ret
jnp
push
sub
aad
or
ds
mov
mov
and
movsb
subl
dec
sbb
mov
push
sub
or
xor
mov
dec
push
nop
xchg
lahf
aas
test
push
mov
mov
les
in
or
jno
loope
lahf
nop
pop
add
outsl
jge
jp
not
cltd
ret
repz
dec
lcall
loopne
inc
je
cmpsl
leave
mov
dec
std
xor
cmp
cltd
sub
xor
out
sub
mov
sarb
dec
dec
ds
jo
je
push
and
adc
mov
mov
pushw
cwtl
dec
jno
dec
pop
ficoml
aas
jmp
dec
in
outsl
mov
jle
clc
imul
xlat
sub
mov
arpl
or
sbb
ss
jmp
aaa
jp
mov
movsb
pusha
nop
or
outsb
add
jbe
ret
push
xchg
jecxz
enter
mov
sbb
mov
out
and
repz
push
xor
push
fsubrl
mov
scas
movsl
mov
cmp
add
cmpsl
mov
push
mov
dec
inc
mov
movsl
inc
repz
push
enter
out
jnp
stos
mov
outsl
call
cmpsb
sbb
imul
sub
jp
inc
jl
fdivl
fcomp
push
stc
fs
mov
adc
lds
mov
jecxz
loope
push
out
add
daa
and
push
loop
or
repz
aad
loope
out
cmc
and
lods
xor
mov
push
xchg
cltd
pop
push
jo
xchg
jmp
clc
jno
out
mov
ja
hlt
rcrb
insb
mov
je
lahf
imulb
jp
cmp
jb
in
je
mov
pop
arpl
mov
divl
idivl
lret
cmp
mov
enter
jl
cltd
scas
mov
loope
push
xchg
fistl
add
fcmovne
fstpt
jl
lock
jge
cmp
iret
repnz
jg
or
xchg
outsb
lret
sub
addr16
pop
addl
icebp
test
adc
mov
cmp
stos
scas
ds
dec
loope
pop
loop
loope
mov
out
test
inc
or
push
rorl
pop
add
daa
or
shlb
fmulp
pop
call
fwait
pusha
nop
test
mov
iret
fstpt
insl
je
or
stos
fisubs
test
inc
fcmovnb
shlb
ss
add
or
inc
stos
jb
aam
lock
stc
push
ret
jne
lahf
jecxz
sub
and
xchg
stos
lret
push
testl
enter
jecxz
jno
call
inc
mov
fidivs
ret
rcrb
cld
inc
movsl
pusha
or
xchg
pop
jg
mov
in
ficoms
mov
out
popa
pop
mov
mov
pop
icebp
test
mov
or
out
in
jecxz
repz
test
ljmp
jle
mov
je
test
std
push
adc
xchg
mov
cs
rol
add
stos
in
bound
push
push
roll
mov
lods
pop
add
es
dec
mov
das
mov
subb
or
fwait
repnz
push
ffree
loopne
int
test
jp
cwtl
test
in
stc
and
cltd
sbb
inc
lods
cmp
ljmp
cmpsb
ror
icebp
dec
jns
inc
fs
and
pusha
aam
icebp
xchg
pop
movsb
cmp
mov
in
push
pop
push
pop
outsb
fwait
adc
add
js
fldcw
das
test
inc
stc
or
pop
shl
mov
add
push
and
cld
cwtl
mov
into
add
das
dec
push
push
push
std
add
xchg
cli
pusha
add
cmp
jl
sbb
or
popa
push
filds
jg
mov
fisubs
clc
pop
mov
repz
pop
and
adc
sub
imul
adc
cmpsl
cld
sahf
movups
push
cmp
inc
push
cwtl
cltd
int
xor
or
cmc
shrl
test
aam
in
sbb
lods
repnz
push
lcall
andw
test
cmp
or
int3
inc
push
fs
loopne
mov
xchg
mov
dec
addr16
dec
nop
pop
sarl
cld
popa
or
xchg
adc
sub
xchg
xor
fwait
mull
adc
push
xchg
das
push
outsb
inc
mov
dec
jmpw
fisubl
aaa
mov
lds
lahf
dec
mov
ljmp
sbb
inc
push
leave
out
push
or
cmp
leave
and
aas
clc
into
sbb
adc
jb
daa
xorl
in
dec
or
xchg
fmull
or
rcrl
les
es
loope
stos
push
push
jge
movsl
movsl
sar
lods
pop
push
or
push
xor
test
or
lds
ds
lds
imul
mov
cmp
loopne
dec
xchg
std
inc
dec
and
js
paddd
sub
test
inc
idivb
pop
push
cmpsl
jecxz
or
mov
jl
and
ljmp
outsl
outsb
mov
movsl
mov
imul
hlt
dec
inc
popf
jb
inc
mov
adc
lcall
mov
add
push
pop
shlb
std
call
in
xor
mov
xchg
les
mov
cmp
das
xchg
add
fld1
mov
and
push
psraw
scas
stc
adc
arpl
pusha
mov
das
mov
dec
push
lds
mov
pop
test
pop
divl
adc
mov
enter
mov
mov
xchg
fiaddl
shr
add
jle
push
xchg
loop
mov
jne
je
dec
sub
aas
inc
lds
cmpsl
inc
sub
test
lret
dec
sbb
mov
aam
enter
dec
jg
sbb
push
pop
bound
mov
cmp
mul
dec
mov
dec
adc
out
das
in
imul
stos
pop
test
ljmp
out
xchg
xchg
mov
jbe
push
jge
mov
mov
dec
dec
cmc
mov
mov
ja
add
bound
fsubp
xchg
into
imul
out
add
rclb
xlat
jl
adc
lods
outsl
sbb
enter
ds
cmpsb
outsb
cmp
sub
in
jmp
xlat
fsubrl
xchg
sarb
icebp
ret
shrb
xchg
add
sub
mov
xor
movsb
pop
lods
sub
mov
mov
in
adc
ja
cmp
stc
jnp
lods
roll
clc
cmp
dec
or
ss
pop
pop
jg
push
rcrl
aas
xchg
jmp
loope
push
mov
and
sarb
flds
mov
in
cmc
push
nop
mov
push
jecxz
lock
arpl
push
out
push
shll
and
sub
jns
push
or
fwait
mov
sbb
or
loop
ds
out
sbb
fistpl
out
mov
lret
mov
sub
dec
call
add
cld
shll
fcomps
mov
repnz
and
ljmp
adc
pop
or
repnz
sti
fdivs
test
fnstenv
lea
shlb
test
pop
addr16
pushf
movb
cmpsl
jecxz
and
fbstp
sub
xchg
out
pop
mov
imul
aam
mov
nop
mull
inc
lods
sbb
inc
sti
mov
adc
pop
ljmp
jbe
sub
cmpb
fs
sub
aam
sarb
les
idivb
shll
dec
mov
push
add
pop
fwait
rep
lret
mov
loope,pt
and
push
fldcw
cmp
jmp
ja
orl
pop
xchg
orl
jns
gs
add
movsl
cmpsl
xchg
inc
je
and
fsubrp
cwtl
sbb
jno
gs
jp
cld
out
scas
cmpsl
push
data16
les
jne
lods
or
in
inc
sub
pop
pushf
movsb
repz
and
sub
adc
push
xor
xlat
inc
scas
mov
mov
je
and
dec
mov
movsl
or
dec
stos
in
ret
pop
lea
pushf
mov
leave
add
movsb
jnp
out
push
mov
cli
out
dec
inc
xor
out
push
outsb
mov
pusha
rolb
mov
cltd
std
in
xor
dec
xchg
into
pop
xchg
adc
popf
jne
inc
sbb
in
ret
sub
gs
xchg
dec
in
in
loopne
inc
jle
xor
hlt
or
rorb
sbb
clc
adcl
sbb
stos
add
lods
stos
cmp
jno
outsb
daa
push
bound
popf
push
mov
pop
clc
dec
sub
xor
enter
cli
sbb
lret
scas
ja
push
sbb
lods
pop
nop
dec
or
out
inc
cld
cmp
popf
jb
adc
cmpsl
push
std
adc
lods
sub
movsl
call
mov
jl
sbb
inc
ret
lods
incl
mov
imul
adc
inc
mov
jmp
sti
out
push
loopne
popf
sbb
push
je
adc
cli
js
cmp
repnz
lea
insl
adc
pusha
mov
xchg
push
and
int3
xor
repnz
mov
jecxz
mov
or
add
and
nop
xor
inc
pusha
push
mov
sahf
add
testb
hlt
cmp
in
mov
cmp
mov
gs
lcall
test
mov
adc
pop
rcrb
xor
mov
or
jp
xchg
lock
int
std
jg
jo
mov
lcall
popa
les
mov
xor
inc
jmp
mov
mov
and
inc
fimuls
mov
jmp
cmp
push
cmpsl
leave
adc
jnp
jmp
cmp
add
and
or
pop
call
andl
and
out
cmpsl
xor
pop
loop
call
mov
pop
ret
or
repz
insb
pushf
in
inc
in
fbstp
movsb
mov
ret
mov
add
into
shll
loope
xor
jle
inc
sub
add
push
pop
repz
jno
dec
frstor
cmpsb
popa
or
ficoms
in
or
inc
rorl
das
cmp
inc
lods
lds
popa
adc
lock
jnp
add
es
mov
sahf
jmp
ret
mov
data16
dec
out
dec
mov
jns
jle
imul
push
bound
mov
ret
ret
adcl
push
std
xor
imul
pop
push
cli
pop
clc
movsb
icebp
or
add
je
and
xchg
and
sbb
jns
push
adc
lods
and
mov
fstps
push
adc
das
repz
mov
mov
test
bound
inc
jnp
push
enter
dec
ret
out
je
jno
movsb
dec
sahf
push
cmp
and
xor
setp
popa
xor
dec
daa
loopne
jge
gs
push
and
test
sbb
iret
arpl
push
push
das
xchg
mov
xor
cltd
std
out
push
loope
mov
loop
scas
inc
subb
les
bound
cltd
mov
jno
cltd
cmc
pusha
popf
and
aaa
pop
lds
pop
sub
xchg
mov
cmp
inc
pop
xor
fcoms
push
into
jmp
cld
dec
pusha
sub
adc
jecxz
and
loope
pop
int
mov
cld
popa
cmp
xor
dec
daa
add
test
xchg
cld
je
call
jg
mov
orl
popa
push
cmp
sbb
inc
pop
xchg
push
repnz
mov
sbb
mov
test
stc
jge
test
pop
out
push
hlt
cmp
sbb
pop
cmp
out
xor
orl
and
mov
inc
jne
adc
pop
add
xchg
scas
test
dec
or
adc
pop
xchg
pop
sbb
cmp
cmpsl
inc
dec
call
push
rcr
dec
sbb
mov
push
mov
or
sub
push
pop
mov
icebp
clc
call
add
scas
lock
mov
rolb
shl
add
sub
dec
ds
out
pop
cld
or
push
fsubrl
imul
in
subl
call
mov
cwtl
lret
sub
dec
scas
xor
mov
push
push
popa
jle
cmpsl
or
adc
push
adc
inc
pop
ds
jle
sbbl
push
nop
sub
mov
ss
mulb
dec
and
loope
iret
in
xchg
xchg
cmp
add
stos
outsl
cwtl
mov
mov
sub
std
in
repnz
push
std
inc
push
mov
inc
setp
push
sub
xor
xchg
mov
inc
mov
add
add
mov
mov
fcmovnbe
mov
xchg
in
mov
test
jb
mov
or
stos
inc
loope
sub
flds
repnz
movlps
dec
pop
aam
sub
cmp
pop
mov
xor
dec
jl
stos
rclb
mulb
stos
mov
aas
loop
xlat
das
lock
pusha
jmp
int3
outsl
cmp
ljmp
or
sub
mov
mov
sbb
or
inc
mov
fmull
add
mov
fbstp
xlat
bound
cmc
fldt
pop
fbstp
scas
jmp
das
mov
addr16
pop
push
mov
jae
gs
test
push
data16
mov
pop
fcmovnb
lea
jns
icebp
test
jns
sti
popf
pop
repz
mov
cmc
out
xchg
lods
pop
mov
scas
in
cmpsl
sbb
lcall
sbb
ret
orb
sbb
lock
loop
jae
push
push
in
sub
gs
icebp
or
sbb
jecxz
or
imul
mov
inc
add
repz
inc
dec
jp
jmp
push
out
test
jb
in
inc
mov
add
das
lock
dec
mov
cs
daa
out
cmpsl
shrl
bnd
xor
jnp
into
mull
lea
scas
addr16
adc
cs
mov
shll
mov
push
sub
cmp
xchg
add
and
xchg
mov
xchg
leave
mov
lods
xchg
lods
out
addr16
pop
push
dec
or
cwtl
pop
and
clc
adc
adc
push
inc
mov
adc
dec
xor
ret
pop
inc
fmul
sub
adc
cs
out
adc
jmp
jno
imul
sbb
sahf
inc
inc
loope
sbb
test
or
pop
push
add
jge
pop
lods
or
subb
test
repnz
xorb
aaa
aam
pop
cmp
imul
xchg
cmpsb
pop
or
adc
test
popf
outsb
cmpsl
hlt
addps
lret
in
stc
inc
dec
rcl
lret
push
mov
repnz
ret
pop
inc
push
rclb
mov
push
mov
hlt
call
inc
cmp
std
xor
in
call
cmpsb
mov
int
dec
inc
pop
mov
xor
pop
addr16
es
aad
cltd
and
enter
sub
sub
and
adc
loopne
mov
and
mov
xlat
adc
xor
jecxz
cmp
inc
xor
iret
bound
xchg
sbb
jl
jle
mov
pop
dec
decl
push
mov
mov
lret
xor
push
cs
xchg
and
das
inc
rclb
das
xor
jecxz
cmp
das
les
insl
lock
jae
test
icebp
add
or
jge
push
jne
sub
inc
lahf
shlb
icebp
or
inc
xchg
clc
ror
or
sahf
call
test
std
mov
pop
test
aam
mov
roll
mov
inc
lea
dec
mov
cwtl
fs
in
xchg
cmpsl
test
lcall
sahf
mov
xlat
sbb
adc
mov
ss
nop
in
nop
negl
lcall
dec
xor
cmc
mov
add
int3
andb
push
cmp
gs
and
and
ss
inc
rolb
loopne
cmp
aaa
jno
imulb
mulb
fdivs
pop
push
insb
mov
cli
je
sub
ror
rolb
lock
pop
les
imul
push
jno
fwait
xchg
adc
frstor
pop
in
jbe
lcall
daa
mulb
push
or
dec
pop
pop
out
add
imul
push
xchg
pop
mov
insl
cmp
notl
pop
cmc
and
fs
cmovl
icebp
jae
mov
inc
rcrl
lret
adc
cmpsl
add
adc
xchg
jae
or
ffree
sub
enter
test
dec
xor
lods
xor
push
dec
in
lds
mov
ljmp
add
dec
add
dec
xchg
es
lret
sti
repz
out
xchg
nop
jnp
dec
cmp
xor
mov
pop
inc
pop
dec
in
iret
push
inc
mov
mov
shlb
jle
nop
inc
mov
inc
and
pushf
push
in
mov
repz
xchg
cld
add
sbb
out
inc
stc
mov
push
push
mov
in
cmc
or
int3
add
inc
ds
xchg
sub
loop
xchg
divb
pop
test
jns
mov
mov
ficompl
xchg
aam
push
loop
mov
inc
mov
mov
popa
and
imull
dec
sub
cli
loopne
sti
aam
xchg
and
cmpsb
jno
cmp
ret
push
mov
and
xlat
insl
jb
mov
arpl
pop
push
dec
lds
leave
es
lcall
das
add
mov
or
scas
ds
adc
sti
arpl
addb
dec
shlb
xchg
and
xor
daa
mov
out
xor
ds
pop
mov
addr16
jo
test
ret
xchg
mov
icebp
mov
es
cmc
pop
sbb
shlb
rolb
push
fadds
pop
shlb
inc
sbb
icebp
xchg
cmc
pop
xchg
cmp
js
fisubrl
outsl
into
insb
icebp
add
sahf
jno
or
daa
outsl
push
movsb
mov
mov
push
addr16
push
fwait
push
outsb
adc
es
mov
loope
movsbl
insb
jmp
iret
cmp
pop
adc
jns
jne
pop
inc
sub
std
dec
ja
cltd
mov
push
inc
mov
xor
andl
fimuls
or
sub
dec
fisubl
adc
and
stc
bound
ljmp
out
adc
add
mov
faddl
fnsetpm(287
adc
into
cmp
in
aad
cwtl
bound
aad
ret
les
rcrl
fs
pop
rcll
dec
xor
mov
pop
loopne
jno
mov
je
pop
mov
aam
leave
xor
icebp
out
dec
inc
adc
xor
es
mov
dec
test
aam
stos
cmp
cmp
ljmp
lret
mov
in
sbb
popa
jg
rolb
sarb
mov
aam
icebp
divl
sbb
fldpi
inc
jp
cmp
and
jle
pop
or
xchg
out
push
mov
mov
rcll
jecxz
in
icebp
sbb
jae
aaa
jnp
push
pop
and
xchg
xchg
pop
xor
jp
mov
mov
mov
add
xchg
xchg
push
pop
jle
inc
push
fcomps
arpl
inc
cmp
sub
test
jnp
dec
movsl
inc
mov
in
jne
fldl
jo
out
int3
sub
sbb
push
into
cmp
pop
mov
adc
pop
mov
or
cmp
jecxz
shl
movsb
push
mov
push
cmp
or
push
hlt
adc
repz
sti
sub
mov
add
std
je
xchg
jl
icebp
cmpsb
aad
ss
mov
mov
pop
cmp
test
mov
test
cmp
test
in
jge
cmp
sti
sub
mov
loopne
lods
out
dec
mov
scas
ds
call
into
push
xor
outsl
lahf
pop
mov
fimull
sahf
jbe
xchg
std
das
ljmp
daa
pop
dec
roll
sub
inc
inc
and
mov
fbstp
jp
and
loop
test
int3
insl
and
push
adc
pop
pop
dec
inc
loope
cmc
lcall
mov
sub
ret
sbb
push
pop
xchg
sbb
aad
lcall
icebp
in
mov
fsts
push
das
sbbb
mov
adc
and
cwtl
outsl
cmp
imul
cmp
mov
jg
insb
aas
mov
jle
mov
es
mov
lea
push
les
repz
jo
test
inc
xor
jno
pop
inc
add
rclb
push
xor
int
call
dec
add
test
sub
and
push
lods
testb
xlat
fldt
pop
add
loope
mov
pusha
lret
mov
jae
adc
adc
mov
and
or
je
lahf
les
sub
jns
or
dec
sbb
loop
dec
repnz
cltd
mov
mov
and
cli
mov
push
or
push
dec
xchg
sbb
inc
js
rcll
inc
mov
sub
dec
pop
test
sbb
popa
ret
mov
sbb
subb
jmp
cmpb
aam
adcl
push
clc
mov
jb
xchg
cmpsb
stos
mov
dec
sub
or
dec
pop
sub
stos
js
pusha
sub
cwtl
fs
jmp
int
dec
ss
adc
cmc
mov
add
icebp
or
add
adc
lahf
lret
dec
jle
pop
cld
jmp
pop
cmp
xchg
pusha
imul
in
roll
insb
frstor
sub
and
jge
or
cmpsb
push
aaa
xchg
rcrl
inc
push
add
movsl
test
add
jno
jae
es
int3
mov
rclb
push
pop
sbb
icebp
popf
incb
add
dec
add
roll
cmpsl
xor
stos
ss
cli
jmp
lahf
rorl
xor
dec
fistpl
jle
add
dec
jb
popf
cmc
jmp
mov
xorl
addr16
outsl
pushf
xor
pop
bound
aam
aam
add
or
adc
js
cmpsl
mov
pop
movsb
daa
adc
adc
inc
ret
lret
mov
adc
mov
push
lds
mov
jbe
stos
sub
xor
add
adcl
mov
mov
fisubrs
je
into
cmp
dec
pop
pop
dec
stos
dec
sub
aam
adc
lea
jmp
xchg
pop
jo
movsl
xor
or
imul
pop
fidivrl
repz
mov
into
adc
or
push
inc
lock
cmp
jl
or
jl
jl
dec
orl
ss
jae
add
sbb
arpl
cmp
mov
adc
jle
fdiv
mov
icebp
addr16
cld
sahf
sub
cs
xchg
or
pop
cli
xor
ljmp
pop
pushf
push
jne
push
pusha
xchg
xor
fildl
jp
sub
outsb
mov
cmp
in
dec
stos
sbb
jb
arpl
cmp
lds
dec
cmpsb
adc
xor
push
mov
xchg
movsl
test
mov
jecxz
out
pop
adc
dec
push
sbb
adc
push
aad
push
daa
and
in
sub
pusha
mov
lock
sub
and
ret
push
dec
xchg
pop
test
lds
xchg
mov
lds
jmp
dec
push
inc
cmc
push
fisttps
arpl
iret
int
stos
adc
loope
add
cmc
add
cmc
push
add
sub
ret
out
mov
adc
out
das
addr16
jae
fisubrs
aaa
aam
scas
rcr
jne
sub
xor
push
xor
movsb
push
mov
xchg
cli
outsl
xor
or
fsub
add
je
sub
add
js
push
jbe
sahf
xchg
inc
inc
call
jae
mov
in
lock
scas
js
lea
cs
lcall
mov
xorl
mov
mov
icebp
sub
mov
mov
mov
rcrb
leave
test
je
incb
adc
int
jbe
in
in
mov
inc
jns
iret
mov
inc
aam
inc
fdecstp
cmp
push
sub
cmp
and
rorb
jle
fdivr
sbb
jecxz
sbb
lock
fnsave
scas
aad
data16
adc
lock
pusha
data16
cltd
in
rolb
pop
pop
xchg
xor
pop
lret
or
cmp
jb
xchg
test
or
dec
dec
cmp
mov
jne
xchg
mov
cmp
sub
push
push
idivb
jecxz
and
sbb
sub
lahf
or
sbb
incl
sub
icebp
inc
cmp
in
fnstsw
pusha
and
out
xor
ljmp
aad
xor
in
daa
dec
jle
or
sub
shr
fistpll
mov
cmp
xor
add
test
rcl
or
iret
pop
orb
iret
sahf
incl
mov
add
add
sahf
dec
sub
sahf
scas
inc
push
addl
xchg
mov
aad
push
lods
outsb
mov
test
mov
ljmp
lret
mov
mov
mov
fsub
push
pop
rcll
xor
enter
xchg
inc
adc
pop
into
insb
cmpsb
out
xchg
xchg
push
or
int3
pop
call
fistl
fadd
mov
mov
jg
aam
je
adc
loopne
imul
mov
lds
popa
jmp
lahf
sbb
xchg
lahf
subb
add
lds
bound
popl
out
push
aas
xor
sbb
mov
and
into
adc
pop
scas
cmp
arpl
out
push
mov
add
jae
dec
and
sbb
sti
or
loopne
add
sbb
fldl
test
stos
mov
cmp
popf
sub
jmp
mov
xchg
xor
into
leave
pop
testb
imul
mov
xchg
push
ret
pop
rorl
inc
mov
inc
sbb
rcrb
push
nop
fistpl
jg
dec
mov
cltd
jmp
cltd
pop
inc
gs
xor
pop
testb
loopne
inc
adc
sub
add
mov
dec
pop
push
fdivl
jnp
sbb
ja
sub
mov
rclb
js
roll
xorb
and
dec
jle
outsb
push
push
and
push
je
aam
shr
xor
lods
repz
loopne
into
pop
push
dec
xchg
aad
dec
fbld
pop
call
sahf
movsl
add
push
sub
or
dec
sub
imul
inc
out
scas
inc
roll
nop
ret
sbb
mov
fldt
pop
addl
inc
jg
sub
push
jb
iret
ljmp
and
div
xchg
pop
push
movsl
dec
test
pop
xor
dec
lods
pop
rcr
mov
and
mov
add
mov
add
add
out
or
insb
out
and
push
lahf
fwait
cmp
mov
xchg
sbb
cmpsb
test
mov
push
test
dec
andl
into
xchg
cmp
addl
jg
mov
std
inc
pop
mov
or
jecxz
dec
outsb
js
mov
shrb
sub
cltd
aam
or
test
daa
imul
aad
cltd
fs
and
dec
ror
lahf
pop
jecxz
xchg
xchg
sub
arpl
fildl
cwtl
testb
xlat
or
add
neg
cmpb
pop
ja
inc
loop
pop
mov
inc
or
icebp
jo
xlat
cld
out
and
scas
pop
sbb
or
and
dec
mov
rcrb
pop
lahf
dec
mov
aas
scas
out
dec
pop
in
cmp
mov
add
pop
cmp
cmc
insl
into
push
ret
icebp
sub
xor
and
insb
pop
xchg
ja
jecxz
cmp
sbb
push
testb
scas
lcall
mulb
loopne
sub
ds
loope
xchg
jmp
ja
data16
scas
sbbl
add
mov
movsl
mov
ss
pop
loope
sahf
fs
clc
fmull
xor
push
mov
xlat
insl
cvttps2pi
movsb
xchg
pop
mov
outsl
out
std
add
icebp
cmp
mov
bnd
iret
icebp
xlat
mov
loop
orb
cltd
cmp
inc
cmp
xchg
or
mov
in
mov
push
fbld
test
test
inc
jle
jmp
and
lret
xchg
mov
ret
push
xchg
pextrw
scas
dec
icebp
hlt
and
test
mov
xchg
cmpsb
sbbb
jo
pusha
movsl
sahf
jmp
subb
cwtl
mov
out
popa
nop
jmp
push
sbb
add
ja
xor
xor
ljmp
pop
xchg
mul
scas
jae
inc
cmp
jecxz
js
icebp
test
pop
popa
addr16
shlb
push
rorb
cmp
dec
mov
cs
and
adc
aas
out
pop
loope
lcall
xchg
pop
call
outsb
inc
movsb
aam
add
dec
out
xchg
stos
fwait
gs
cmp
mov
clc
mov
mov
mov
inc
jo
in
xchg
xor
sbb
cmp
sub
aas
push
int3
or
jnp
xchg
add
push
ret
popa
lock
data16
pop
jmp
cld
fldenv
inc
pop
mov
add
outsl
mov
fcomp
es
mov
mov
inc
imul
pop
mov
rolb
fstl
loopne
rcrb
mov
sbb
mov
and
dec
lds
pop
cli
lcall
xchg
lea
hlt
clc
enter
add
popf
jp
mov
mov
push
sub
roll
test
dec
adc
mov
nop
sbb
sub
ret
lret
mov
dec
or
fadd
fists
call
mov
mov
adc
into
xchg
jae
sbb
ret
cmp
jg
dec
test
inc
sub
xchg
data16
lret
xchg
std
lahf
shr
cld
and
ja
in
or
rclb
sbb
xorb
das
flds
bound
mov
jl
enter
mov
cmp
cmpsl
jg
stc
cs
sbb
outsl
xor
mov
stc
xor
ljmp
dec
into
mov
mov
aaa
xchg
pop
insl
xlat
ret
mov
jmp
leave
in
addl
xor
inc
sbb
add
pop
loopne
fwait
push
push
aad
out
mov
sbbl
loop
pushf
in
lds
and
fwait
push
fcmovbe
fistl
je
dec
cli
fiadds
ficoml
outsl
int3
push
push
scas
xchg
jge
popa
mov
repz
sub
lret
push
mov
fidivs
inc
jle
or
sbbl
hlt
ja
in
popa
ret
in
add
adc
mov
and
mov
jnp
mov
insl
inc
scas
lcall
xchg
fdiv
mov
lods
cs
out
jb
fisubrs
jno
sub
int3
scas
jns
push
je
or
sbb
push
sbb
jbe
mov
repz
xlat
mov
ret
stc
cmpsl
repnz
mov
jmp
shrb
test
out
push
mov
popa
fwait
hlt
ja
inc
aad
aad
jp
leave
nop
pop
sub
in
jnp
aam
jne
jmp
push
scas
jae
and
mov
and
xor
mov
movsl
mov
or
and
std
jp
sbb
sub
add
jg
cmp
ja
push
in
fwait
insb
jne
adc
mov
rcl
lock
mov
push
mov
xor
jl
scas
ucomiss
lea
pushf
rcr
pop
fisubs
push
ds
fadds
xchg
add
into
sub
pop
cli
push
cmpsl
out
xorl
jo
arpl
fistpl
rorb
imul
mov
dec
aas
or
dec
loop
loope
adc
clc
stc
mov
sti
mov
xchg
mov
xchg
add
mov
andl
and
adc
mov
push
lret
in
stos
sbb
push
xchg
mov
mov
icebp
or
ficompl
or
and
pop
xchg
in
xchg
and
in
call
mov
or
xchg
rcrl
and
and
inc
xchg
outsb
and
or
lret
pop
movsl
add
iret
xor
jecxz
push
loopne
mov
mov
cmp
mov
dec
hlt
inc
sbbl
jo
cmp
mov
sbb
xchg
xchg
or
movsl
or
mov
aaa
enter
lahf
xor
pop
mov
xchg
dec
mov
pop
sti
lock
repnz
mov
inc
adc
fdivl
or
mov
outsb
mov
xchg
insb
ds
imul
sbb
jmp
and
sbb
bound
add
pop
xchg
ja
sbbl
xor
sub
clc
add
adc
push
mov
push
xor
fs
icebp
jg
jnp
mov
movsb
aaa
cmp
jns
push
cwtl
ror
sub
fsubrp
loopne
sub
inc
loop
js
pop
insl
mov
push
ret
rclb
andl
in
adc
lahf
xchg
xchg
lcall
xor
mov
outsb
sahf
dec
insl
add
sarb
ret
add
gs
xchg
leave
cmp
sbb
std
and
dec
add
or
cld
icebp
outsb
lods
mov
rcr
in
mov
test
scas
js
adc
out
call
std
and
loopne
pop
cs
sbb
mov
aaa
in
jle
jno
in
in
jo
xchg
push
jns
lahf
dec
or
in
cwtl
mov
xorl
pusha
xor
push
fldt
add
fwait
mov
xor
mov
adc
mov
bound
pop
inc
fcmovne
fldcw
add
push
cwtl
adc
xchg
mov
lcall
scas
mov
push
dec
add
std
push
inc
lcall
dec
sub
mov
sbb
fsubr
or
lahf
out
adc
push
or
pop
clc
xor
negb
mov
cs
std
adc
pop
in
push
jae
mov
xor
addl
scas
mov
cwtl
dec
decb
mov
xchg
inc
xchg
fdivrl
icebp
xor
jae
andl
fstpt
jo
push
ljmp
push
adc
cmp
push
push
mov
pop
mov
sub
into
inc
testl
call
push
repz
or
add
jmp
fildl
movb
fcmove
jmp
sbb
mov
out
adc
xlat
daa
mov
mov
gs
movsl
ret
xchg
mov
xor
sbb
mov
pop
lds
lds
push
enter
or
call
dec
sub
sbb
mov
cli
cs
push
push
xchg
sbb
xchg
stos
mulb
mov
icebp
lcall
xchg
mov
imul
inc
fstpl
fwait
lcall
ss
out
push
outsb
cli
stc
and
cmp
push
mov
ret
push
sub
divl
jo
push
fdivrl
jnp
xchg
push
mov
icebp
inc
dec
cmp
push
mov
xlat
hlt
hlt
xchg
imul
pop
stc
js
sbb
hlt
dec
frndint
xlat
arpl
and
in
mov
push
sti
jge
pop
fcmovnu
sbb
test
pop
push
jo
mov
fcoms
mov
jnp
push
sub
add
jmp
jae
fisubl
dec
mov
xchg
mov
cli
jl
roll
xchg
sbb
shrb
mov
push
xor
push
push
xchg
in
fwait
call
cli
mov
or
xchg
cmpsb
mov
xchg
lcall
pop
add
mov
lods
mov
popa
xchg
stc
adc
xor
lock
outsb
inc
rcr
xchg
add
mov
xor
aad
push
cmp
adc
push
cmp
fs
in
fisubrl
out
jns
iret
rcr
mov
and
out
stc
mov
pop
jmp
add
cltd
sti
xlat
jo
andl
push
dec
out
orb
jnp
rolb
push
xchg
ds
shl
loope
xchg
rorl
in
fisttpll
inc
jg
insl
outsb
int
mov
mov
push
xchg
fimull
idivl
clc
hlt
frstor
out
ja
mov
or
out
dec
icebp
pop
cwtl
iret
cmp
clc
out
mov
pushl
add
jbe
shlb
mov
push
sbb
dec
ret
sbb
and
fcomps
inc
dec
push
adc
aas
jns
push
cs
mov
or
cltd
push
pop
out
imul
jne
and
adc
cwtl
ss
mov
add
stos
ljmp
xor
inc
mov
outsl
pop
and
or
or
mov
pop
jg
test
dec
lret
pop
push
mov
push
arpl
in
xchg
inc
mov
fldcw
cmp
fisubrl
je
fsubs
add
cmpsl
xor
sbb
sarb
aaa
jle
inc
movsl
adc
into
stc
inc
dec
leave
pop
sahf
jmp
inc
xchg
rcr
push
adc
cmp
mov
push
enter
jb
jmp
repnz
dec
mov
test
ja
es
fidivl
leave
in
push
scas
movsb
out
xchg
push
outsb
out
inc
int3
idivb
xlat
popa
je
aam
imul
fs
push
xchg
inc
data16
mov
pop
and
sub
jg
lcall
sarb
cs
pop
popa
daa
mov
xchg
adc
jg
mov
subb
idiv
cltd
lret
fcmovu
test
outsl
add
cs
inc
imul
adc
jb
mov
andl
jnp
push
je
dec
loopne
jecxz
mov
hlt
sahf
out
jno
mov
shlb
outsb
stos
int
and
pop
imul
sbb
or
loope
je
adc
lock
mov
out
sub
stos
into
aaa
xchg
cs
mov
add
mov
outsb
jg
and
pop
jae
mov
mov
xchg
mov
roll
clc
push
test
fwait
pusha
inc
int
jae
or
xor
mov
mov
and
mov
mov
mov
mov
in
inc
and
addr16
scas
or
dec
ja
mov
fsubs
cmpb
pop
pop
mov
xor
je
repnz
mov
cmp
adc
dec
insb
sub
out
push
rolb
loopne
loopne
in
cmp
or
int
cmp
dec
xchg
and
idiv
pop
add
push
jge
test
mov
clc
popf
in
scas
add
fisubs
mov
out
lcall
lock
fcmovnb
push
mov
int3
push
cmp
add
jle
fnstenv
pop
jle
jmp
adc
repz
jb
ret
rcr
cmp
aad
mov
insb
xlat
fwait
mov
popf
pop
jle
sbb
xchg
jecxz
jbe
loope
mov
mov
pop
jmp
ljmp
xor
loopne
test
and
mov
in
pusha
cwtl
iret
mov
mov
andl
cmp
jnp
fstl
shll
icebp
jp
addr16
sbb
add
arpl
jae
sub
jno
aaa
sub
push
cs
orl
push
loop
in
push
out
shr
lahf
inc
and
or
clc
cmp
inc
mov
mov
cmpsb
daa
mov
mov
je
xchg
call
ficoms
and
dec
call
in
xlat
mov
push
lahf
fists
and
jns
ja
mov
add
xchg
test
movsb
pop
out
repnz
decl
call
sub
mov
jns
jb
loopne
mov
jl
test
in
in
jmp
cmpsb
inc
inc
pop
outsl
test
and
shr
es
jmp
outsb
lds
sbb
dec
seto
imul
push
or
mov
jbe
sahf
movsb
jge
pushf
in
icebp
adc
sbb
add
orl
xor
mov
and
push
mov
adc
sti
sbb
shll
mov
ficomps
and
js
and
inc
or
imul
ja
lods
dec
jne
xor
int3
adc
lret
ja
out
mov
jecxz
cmp
das
xor
adc
jle
in
movsl
loop
mov
jmp
loopne
das
jge
inc
pushf
add
lahf
mov
push
mov
lcall
mov
imul
lock
in
test
test
fwait
inc
ret
in
cmp
dec
and
xchg
jmp
aad
nop
mov
xchg
jmp
in
xor
mov
inc
popf
pop
loope
sub
in
test
loop
vcvtss2sd
xorl
stos
cmp
lahf
ret
jns
xchg
cmc
sub
adc
or
insb
ret
cmp
or
in
push
xchg
xchg
adc
mov
cmp
das
sub
inc
and
lods
cs
stos
rolb
in
jb
lods
xchg
repz
fcmove
bound
jbe
jge
dec
sub
jae
add
mov
dec
dec
test
es
in
cltd
push
mov
out
cld
fimull
cmp
loope
jnp
jo
inc
ja
push
mov
mov
mov
cli
nop
or
mov
pop
aad
neg
adc
stos
cli
jl
mov
xor
mov
xchg
scas
xchg
cltd
mov
jae
in
pop
xor
and
ja
push
cmp
out
repnz
mov
popf
pop
mov
sbb
pop
add
xchg
sub
mov
test
imul
dec
push
icebp
arpl
xor
pop
aad
std
mov
sub
stos
faddl
in
sub
pushf
fdivrl
jae
lret
mov
clc
sbb
insb
popf
out
xor
or
lea
mov
in
insb
add
outsl
imul
lahf
adc
idivl
fcompl
and
ljmp
mov
testb
insl
jne
jle
pop
js
outsb
pop
cmp
dec
cmp
mov
add
insb
sbb
out
pop
leave
pop
mov
or
and
out
inc
lret
xor
or
fbld
lds
add
test
cwtl
mov
shlb
ljmp
push
ss
push
fcompl
ds
jno
je
std
xchg
out
push
dec
cmpsl
mov
cltd
out
jnp
inc
inc
fcomip
cmp
ficoms
lods
movl
repnz
int3
push
mov
and
mov
push
scas
and
push
addl
in
or
push
xchg
mov
cli
cld
dec
jb
inc
pop
and
pop
fcoml
add
mov
aad
and
mov
add
into
out
sbb
test
shll
shl
cld
xor
inc
fbld
mov
pop
cmp
jno
xchg
xor
xchg
into
and
push
and
int
clc
inc
sub
pop
loope
loopne
jne
xlat
mov
push
pop
cmp
jle
aam
inc
pop
push
sti
or
push
push
dec
add
jp
mov
mov
fwait
scas
inc
dec
pop
incb
in
pop
sub
jp
jae
pop
scas
jnp
adc
inc
mov
fwait
aad
imul
pop
push
stc
out
push
test
adc
lret
sar
clc
cltd
fcoms
dec
fstl
pusha
mov
push
sub
loop
push
aad
mov
fwait
jns
sbb
dec
adc
mov
jecxz
add
stc
mov
loop
and
push
dec
test
pop
fs
pop
jl
and
or
std
clc
jge
mov
iret
xchg
fiaddl
invd
das
shll
mov
data16
inc
jecxz
jge
push
sub
test
xlat
mov
and
push
test
and
push
jb
dec
popa
das
xchg
fsubr
add
jnp
mov
lcall
mov
jge
stc
insb
decb
in
imul
adc
into
xchg
movsb
shll
jg
outsb
push
int
sub
sub
ret
jb
shll
xchg
aaa
fadd
or
out
decb
out
xchg
mov
lcall
cmc
dec
cltd
add
mov
loope
leave
or
pushf
orl
add
outsb
push
repnz
xchg
mov
aas
and
push
pop
inc
adc
call
mov
ror
mov
jle
stos
jecxz
pusha
adc
xor
mov
stc
addr16
push
out
add
push
hlt
das
inc
popa
popf
dec
outsl
into
dec
xchg
ljmp
jle
data16
pop
and
adc
scas
mov
fisubs
xchg
fstl
mov
out
mov
mov
sub
pop
fbstp
outsl
sbb
push
in
test
mov
data16
adc
mov
dec
cltd
jbe
test
fwait
loopne
inc
or
int3
adc
mov
repnz
cmp
add
cmpsl
mov
inc
gs
inc
dec
sub
stos
and
mov
jge,pn
loopne
inc
jl
dec
xchg
subb
mov
rclb
cltd
inc
nop
pop
xchg
mov
mov
lds
jl
jmp
lods
jb
push
leave
mov
mov
pop
mov
push
sahf
xor
or
aas
push
seta
sbb
jns
repnz
jbe
xor
sbb
mov
mov
and
or
nop
jbe
mov
hlt
mov
enter
cmp
fiaddl
rcrl
clc
inc
mov
xlat
js
xchg
dec
sbb
dec
mov
jo
xor
sbb
addr16
aas
popa
xor
je
jl
jg
scas
xor
rcrl
push
push
xor
jb
subl
into
into
xor
sti
aas
inc
out
jb
push
pop
fsubl
je
lock
stos
push
push
and
or
sbb
popf
add
loope
jmp
jbe
adc
mov
lea
push
popf
popa
lds
dec
testb
daa
mov
aad
xor
add
mov
pushw
dec
pop
cld
pusha
mov
add
pushf
dec
push
inc
pushf
inc
test
aad
push
out
mov
mov
mov
or
rorl
mov
lret
pop
or
dec
out
stos
jo
fdivrs
shl
add
imul
mov
sub
nop
mov
test
jno
shlb
aad
inc
out
imul
jnp
xchg
and
jmp
jno
aaa
notb
mov
xor
pop
es
jge
mov
cltd
fsubp
push
mov
arpl
xchg
mov
mov
ljmp
pushf
leave
ret
push
test
and
mov
xlat
inc
test
dec
repz
adcb
push
push
jmp
int
sub
ljmp
je
push
cmp
and
push
enter
xchg
mov
mov
mov
push
shlb
ret
pop
lret
mulb
je
inc
jnp
sbb
dec
daa
rcrl
insb
push
cmp
test
dec
mov
pop
stos
hlt
cwtl
xchg
mov
jmp
push
aas
lret
fldt
out
dec
icebp
adc
jno
mov
dec
int
jnp
fcmovb
js
cld
scas
xchg
lods
lods
int
rcrl
cmp
push
push
lret
pop
out
shll
leave
and
xchg
mov
test
cld
test
lods
adc
and
inc
push
enter
mov
pushl
add
xchg
nop
aaa
fwait
mov
sub
pop
add
int
adc
clc
pushf
mov
mov
js
popa
ret
xor
pop
ficoml
test
xchg
pop
out
mov
fcoms
xchg
adc
incl
rcrb
or
sub
mov
adc
mov
lret
pop
mov
and
mov
push
fldl2t
ret
test
and
or
scas
aad
cld
cld
pop
ja
inc
inc
cmc
aaa
inc
and
cld
mov
and
mov
test
jo
adc
addr16
pop
and
dec
ret
shl
pushf
sub
jle
stos
shll
test
xchg
xchg
sbb
sti
jge
aaa
and
jb
jecxz
xchg
mov
pusha
adc
mov
xor
mov
js
inc
jge
jl
or
nop
mov
lret
decl
mov
into
andb
cs
enter
fs
insl
scas
lods
cmpsb
push
cmc
adc
pushf
les
cli
shll
xchg
pop
mov
lods
jbe
pop
push
andb
adc
add
xor
addl
lcall
sub
loopne
in
xor
repz
loope
sahf
sbb
ret
or
aas
out
ret
or
xchg
jbe
aas
xchg
dec
add
out
mov
sar
shr
rclb
aaa
mov
mov
add
inc
js
pop
dec
xchg
stos
inc
into
sbb
mov
pop
fldl
xabort
bound
sub
hlt
pop
fstps
fwait
cmp
pushf
mov
add
bound
push
out
adc
cld
lret
cmpsl
rcl
fs
cmp
cmp
xor
pop
xchg
xchg
mov
mov
fsts
dec
outsb
xchg
jle
dec
bound
fdivl
jo
pop
pushf
jbe
cmp
fcoml
testl
gs
pop
jnp
subl
pusha
pop
mov
outsb
stc
or
cltd
pusha
adc
out
inc
mov
pop
setp
cwtl
in
sbb
filds
push
nop
cwtl
sub
jo
enter
adc
xor
mov
or
in
ficompl
addb
test
out
fistpl
es
cmp
test
in
jge
or
mov
in
pop
sbb
push
xor
xor
cmpsl
repnz
add
hlt
test
mov
mov
add
inc
add
dec
leave
es
scas
rorb
sbb
addr16
lea
inc
nop
jnp
inc
dec
loop
push
push
inc
inc
bound
cli
mov
lock
inc
shll
sahf
in
test
jl
test
or
in
lcall
jle
add
pop
sbb
ljmp
int
fwait
stc
rcl
cmpsl
stos
ret
mov
sub
lret
das
mov
dec
jbe
ret
mov
in
jne
adc
pushf
sub
add
cmp
xchg
in
dec
jno
xor
sub
jnp
mov
sbb
xor
push
add
mov
repnz
xchg
inc
fadds
xchg
inc
pop
jmp
mov
xchg
xchg
repnz
adc
rorl
addl
ficoms
pop
push
out
dec
push
mov
xchg
inc
lods
mov
mov
adc
into
xor
ret
lret
scas
cmp
dec
cs
popa
lea
inc
into
adc
lods
sub
jl
and
xchg
aam
and
pop
sbb
or
inc
inc
cld
into
mov
cld
cwtl
rcl
adc
pop
shll
and
jbe
fists
sub
test
in
out
jbe
pop
xchg
hlt
aaa
je
mov
pop
je
fucom
cmp
inc
pop
mov
cld
cmp
rolb
fadd
fbstp
lea
jp
sbb
sahf
xor
mov
enter
mov
and
mov
pop
xor
inc
sub
fucomp
iret
xchg
movsb
xlat
xor
cmp
dec
xchg
mov
fs
mov
pop
bound
js
cmc
mov
andl
sub
jae
fld
xchg
rorb
mov
lods
call
xchg
xor
xchg
mov
out
mov
push
and
icebp
pop
mov
ret
scas
movl
sbb
out
std
push
rorl
mov
mov
xor
cmp
dec
mov
or
icebp
push
orl
xchg
fcmovnbe
sub
mov
arpl
stc
pop
lods
mov
xor
lret
test
outsb
jb
inc
imul
xchg
xor
outsb
jg
bound
pop
arpl
adc
fstl
mov
jne
inc
lret
jge
push
pop
pop
xor
filds
or
inc
sahf
pop
iret
mov
sbb
in
xor
sarb
jp
aad
loopne
hlt
mov
xchg
ficoms
mov
insl
sbb
xchg
or
inc
arpl
pop
pushf
add
mov
shl
pop
push
pop
pusha
lret
cmp
adcb
mul
sahf
sti
stos
rol
sbb
mov
xchg
mov
fldl
mov
std
xchg
ret
lock
aam
das
ffreep
into
push
int3
inc
mov
popa
adc
adc
jecxz
movsl
xchg
mov
fstps
aaa
cmp
cmpsb
xchg
xor
dec
mov
pop
ret
jae
adc
mov
inc
jle
mov
inc
add
jmp
adc
icebp
jnp,pt
aas
aam
inc
es
mov
dec
sbb
imul
jb
mov
add
sbbb
xor
or
out
shlb
nop
out
push
jns
or
rorb
ret
adc
add
inc
pop
outsb
cmpsl
stos
inc
cmp
std
push
sub
pop
repz
les
je
in
and
sub
sub
subl
sub
xchg
dec
lock
hlt
mov
test
test
cmp
out
int3
icebp
cli
es
fadds
icebp
xchg
pop
jnp
sub
aad
subl
lds
aam
pop
loope
stos
mov
mov
and
or
loope
hlt
dec
lea
or
xor
sub
aam
dec
push
xchg
xor
cld
ror
outsl
or
xchg
xchg
xchg
jl
lret
movsl
dec
gs
roll
dec
sarb
xchg
mov
hlt
pop
sbbb
add
and
push
sub
xor
inc
arpl
je
jbe
jne
pop
into
mov
leave
loopne
jmp
mov
mov
sbb
out
repz
iret
sti
mov
pop
push
dec
mov
stos
jno
aas
aad
scas
lret
fistpll
call
adc
subb
xchg
sti
sub
repz
sbb
sub
push
inc
push
cltd
fwait
or
push
mov
pushf
mov
and
mov
xchg
push
bound
or
lock
mov
jb
nop
rclb
sarl
jo
mov
jl
aad
js
jne
jle
stc
clc
cmp
xor
or
dec
das
adcb
arpl
push
mov
lret
jg
ss
sbb
outsl
ljmp
add
mov
mov
adc
pop
cmpsl
fstpl
mov
sbb
jg
pop
and
cmpsl
push
xchg
xchg
in
or
sbb
rcrb
sbb
xchg
mov
dec
js
xchg
nop
push
cmpsl
cld
jecxz
inc
add
mov
hlt
insl
cvtpi2ps
in
dec
or
in
mov
or
gs
sub
rorl
pop
inc
jnp
fiaddl
repnz
sub
das
sti
fwait
push
ret
pushl
mov
out
shrb
hlt
xlat
inc
or
out
inc
outsl
or
jnp
pop
es
cmp
adc
daa
jne
mov
std
pop
push
dec
dec
mov
cmpsl
fucomi
lcall
xor
jl
addr16
inc
mov
sbb
lods
or
and
or
stos
cmc
inc
stos
pop
and
xchg
ss
adc
adcb
sub
ret
pop
mov
hlt
xor
mov
lret
aaa
clc
cmpl
cmp
mov
icebp
scas
lret
push
repnz
shl
rcr
sbb
cmpb
mov
fstpt
cmp
sub
xor
test
xor
std
incl
cmp
xchg
sti
xlat
mov
lods
js
xor
in
pop
bound
int3
sub
xchg
push
and
push
mov
movsb
jnp
cmp
sub
mov
jmp
mov
fimull
jmp
jp
divb
incl
loopne
ret
add
cmp
dec
cmpsl
and
loopne
sbb
xchg
push
inc
andl
jecxz
sahf
cli
out
cmp
pop
sbb
ret
mov
pop
in
popf
or
mov
lcall
in
pop
out
jb
push
mov
fldenv
pop
in
jns
xchg
fs
pop
inc
shl
outsb
mov
das
pop
xor
cmpsl
dec
movsl
pop
cmp
mov
mov
icebp
jp
push
leave
push
cmp
lahf
mov
mov
cmp
pop
cmpsb
test
lods
cmp
mov
xchg
pushf
cltd
sbb
daa
mov
jle
pusha
call
shrl
jno
or
aas
int
adc
or
cltd
adc
scas
sbb
jle
xlat
or
mov
lcall
jmp
cmpsb
pop
out
std
aam
lock
mov
shl
mov
jb
scas
mov
cmp
fdiv
lods
sub
pop
outsb
mov
pop
mov
inc
lcall
mov
inc
enter
rolb
xchg
add
xor
add
push
lock
xchg
mov
fisubrs
rorb
inc
inc
push
jns
and
push
lock
push
rorl
stos
xchg
gs
movl
xlat
xor
jns
cld
jb
mov
mul
int
cwtl
aad
xchg
fcoms
repnz
jae
mov
adc
mov
repz
aad
sub
sub
orb
gs
cmpsb
imul
shll
fcomps
shlb
xchg
push
arpl
mov
push
mov
or
iret
enter
push
test
mov
fs
mov
add
adc
xor
xor
push
push
mov
pop
dec
jge
dec
push
int
stos
pop
adc
push
push
jmp
jp
add
pop
test
test
mov
lret
mov
dec
out
or
out
lock
mov
adc
mov
aad
push
testb
jl
pop
fs
add
scas
jg,pt
cmp
ds
dec
push
lods
and
sti
mov
ja
adc
xor
or
imul
jle
mov
iret
adc
adc
push
ret
xchg
jl
adc
cmp
and
icebp
sub
mov
lods
pop
imul
inc
xor
ds
rorl
lret
pop
pop
into
loope
mov
sbb
movsl
and
setnp
push
scas
test
sub
mov
jno
sbb
out
stos
sub
and
pop
sbb
mov
mov
xchg
test
out
aaa
inc
cli
jmp
lcall
dec
leave
in
pop
in
fldt
mov
test
mov
inc
fucomi
cmp
mov
pusha
or
or
mov
push
leave
cmc
fsubl
jns
fiadds
jae
imul
ret
in
pop
xchg
ja
dec
dec
insb
cmp
xchg
sahf
ret
mov
sbb
cmpl
js
fdivp
lahf
fiaddl
addr16
add
xchg
in
rorb
shrl
shll
aam
xchg
lds
pop
shr
insb
inc
cmp
sub
jge
sub
insl
xchg
jnp
enter
and
push
inc
jle
mov
xchg
and
mov
fldcw
mov
imul
cli
int
jns
mov
rcl
insl
jmp
sbb
repz
push
inc
mov
ja
push
xor
and
or
repnz
lods
jp
std
scas
jb
jno
sti
xor
outsb
nop
and
les
seta
out
rcl
cmp
sub
dec
xchg
adc
jmp
cmp
xchg
jg
pop
mov
sahf
xchg
je
sbb
adcb
adcb
and
mov
outsl
mov
cmc
xchg
add
xchg
or
xlat
shl
or
movsl
jbe
sbb
call
push
adc
and
test
xor
in
shlb
sbb
jne
fdiv
mov
popa
jbe
fsubrl
enter
xor
leave
pop
mov
sub
shrb
cmp
imul
sbb
and
cld
fwait
sub
fnstenv
pop
loopne
push
mov
sahf
mov
mov
leave
xchg
in
sbb
nop
mov
or
jg
lret
adcb
mov
inc
in
pop
test
xor
mulb
sti
inc
mov
dec
sbb
adc
cmp
mov
lods
shll
outsl
jnp
loope
stos
pop
in
cmp
add
js
pop
xchg
fnstcw
out
and
push
cmp
ss
arpl
cmpsl
mov
out
push
jo
mov
cmp
mov
pop
fcoml
sbb
xor
int
into
dec
push
insl
mov
adc
adc
aad
lock
jle
adc
add
icebp
in
jo
jge
dec
lahf
mov
xor
inc
dec
es
std
int3
or
and
add
inc
dec
sbb
jno
ss
fiaddl
das
jecxz
add
cs
fistpl
mov
mov
mov
into
pop
pop
dec
enter
jne
mov
insl
cmp
cmp
mov
cmpsb
mov
loope
aam
insb
cmp
stc
sub
lcall
outsb
enter
mov
scas
movsl
jno
sbb
jo
mov
pop
or
and
test
orl
icebp
inc
out
addr16
mov
or
test
jnp
jb
out
cmpsl
and
mov
add
and
adc
sbb
jno
adc
xchg
fsubr
mov
in
jnp
inc
inc
cmp
rol
aaa
aas
dec
mov
mov
shrl
scas
lret
mov
dec
popf
or
cltd
sub
jmp
xchg
and
adcb
imul
andb
xchg
or
xchg
test
andl
aad
into
out
sub
jnp
mov
not
leave
or
xchg
hlt
sysret
das
push
adc
xchg
imul
lret
sbb
shll
je
dec
push
mov
push
cltd
daa
pop
cmpsb
scas
pop
sbb
fistps
push
dec
imul
ja
lock
mov
enter
loopne
outsl
gs
sub
sbb
lret
daa
or
pop
rolb
jo
jnp
sub
cmc
or
jecxz
and
sub
sbb
and
lahf
pop
mov
mov
add
mov
sbb
mov
sbb
or
add
xor
pop
addl
mov
sub
je
dec
fiaddl
cmp
add
inc
js
scas
dec
out
xchg
add
pop
rorb
adc
dec
or
je
ds
mov
daa
rorb
popf
mov
lret
pop
rcrl
lock
ja
fwait
movsl
rcrl
jne
sbb
xchg
mov
ret
sub
dec
addr16
jge
dec
pop
mov
mov
xchg
dec
jno
mulb
jo
xchg
inc
or
adc
lret
mov
mov
jnp
adc
shrb
or
pop
mov
ret
inc
xchg
jo
bnd
pop
jecxz
iret
xor
jne
pop
fdivr
mov
mov
addr16
cwtl
pop
fsubrs
adc
cltd
aas
out
add
test
lret
in
lcall
sub
inc
jp
lock
jge
stc
add
mov
jae
jbe
loope
outsb
icebp
adc
push
mov
jne
addr16
or
aas
int
aaa
fwait
setl
insb
fdivr
out
and
and
mov
mov
call
les
into
in
jmp
jl
or
mov
in
lret
out
sub
call
sub
scas
sub
addb
cmp
jl
adc
in
ret
mov
sub
add
shll
ret
bound
adc
pop
cmp
cmp
adc
xchg
mov
xor
lods
in
mov
pop
arpl
push
jno
xchg
popf
cld
jbe
fnclex
inc
fildll
test
movsl
push
fwait
jge
nop
mov
jecxz
sbb
xorb
add
jne
mov
fidivrl
movsl
aaa
mov
push
dec
inc
mov
icebp
movsb
add
mov
aaa
stc
inc
rcll
es
aam
adc
mov
jg
inc
xchg
mov
fisttpl
push
iret
in
or
xchg
adc
rep
jmp
push
push
pushf
or
sub
outsl
mov
push
pop
add
add
cmp
movsl
mov
lods
fcmovb
ja
cld
xchg
push
and
fiadds
mov
mov
xchg
cli
in
pop
repnz
adc
int3
xchg
aad
sbb
stos
loope
sbb
jae
xchg
jmp
pop
scas
jo
pop
fwait
test
and
dec
aam
loopne
adc
adc
mov
pop
call
in
je
aad
in
outsl
adc
cltd
jle
sub
or
and
sbb
repnz
push
push
mov
sbb
cmpsl
xchg
notb
cmp
sbb
dec
call
cmp
jecxz
fdivs
jecxz
or
jae
dec
mov
clc
and
rorl
repz
lret
stos
jmp
cmp
fs
jb
inc
andl
fistpl
sub
js
pushf
adc
fcmovbe
loope
dec
cmp
rol
inc
mov
inc
imul
jb
pop
sub
xchg
adcl
out
mov
cmp
sub
fwait
stos
push
insb
pop
mov
push
bound
xchg
pop
mov
or
sub
jb
adc
cmp
mov
repz
sahf
xor
cmpsb
insl
fwait
lret
icebp
je
ds
adc
sub
lods
sarb
add
jno
mov
inc
push
leave
jecxz
js
jle
xlat
and
dec
fnstsw
lods
roll
dec
lds
lcall
mov
mov
insb
inc
movsb
jp
add
int
test
cs
fwait
cmp
arpl
adc
jns
mov
push
xor
and
mov
sti
leave
daa
mov
sbb
cmp
pop
fnstenv
sbb
daa
xchg
cmpsl
sahf
pusha
xor
xchg
data16
sbb
in
imul
addr16
lcall
mov
and
inc
pop
xor
sbb
in
pushf
xor
fwait
dec
imul
movsl
adc
ret
fsubrl
movsl
clc
ljmp
addb
leave
loopne
pop
cmp
or
push
repnz
fsub
test
jg
stos
add
loope
ss
add
cltd
pop
cli
mov
cmp
loope
je
test
mov
sbb
xchg
dec
and
sbb
movsb
xchg
nop
push
mov
sub
add
push
movsb
or
sti
inc
into
and
adcb
std
dec
mov
push
push
push
mov
cltd
pusha
iret
popa
loope
dec
inc
jno
sbb
cmc
movsl
ss
cmp
mov
out
jbe
fs
aaa
dec
cmp
xor
jmp
xor
into
inc
stos
pop
push
cmp
int3
fbstp
mov
mov
add
jno
sub
mov
mov
loope
ja
or
mov
in
movsb
or
push
rorb
jne
hlt
jecxz
mov
nop
mov
sub
mov
xchg
movsb
cltd
icebp
push
stos
daa
or
lret
pop
cwtl
shll
out
cmpl
jecxz
adc
sbb
stos
pop
addr16
xchg
jbe
es
loop
xor
mov
mov
ja
add
arpl
popa
adc
lcall
cmc
push
cld
loope
sbb
shrb
lds
jno
and
test
adc
jbe
subb
inc
xchg
das
sbb
cltd
pop
lock
and
add
test
inc
and
inc
dec
pop
fiaddl
aad
sbb
adc
jae
stos
or
inc
adc
cmpsb
sub
imul
and
outsl
inc
cltd
adcl
jno
adc
out
xchg
xor
dec
jo
in
fwait
mov
xor
pop
sub
cmp
push
cld
hlt
adc
in
dec
out
sub
or
insl
pop
inc
jnp
cmp
mov
sub
jp
lds
and
jb
and
xchg
ret
pop
arpl
mov
notb
cltd
loope
pop
adc
jmp
sbb
sbb
or
sub
loop
cs
mov
xchg
cmp
mov
xchg
mov
inc
dec
fisubrs
push
jae
aaa
sbb
jae
jbe
mov
sbb
push
je
in
push
and
js
test
orl
push
ss
mov
and
movsl
sub
rolb
jle
xor
movsl
push
pop
cmp
xchg
cmpb
pop
repnz
push
mov
mov
jo
mov
and
aaa
inc
sar
and
pop
and
inc
into
in
push
in
outsl
fnstcw
pop
fistl
jl
das
pop
and
outsl
test
or
cmp
sub
insl
in
inc
xchg
pop
mov
cld
pop
popa
mov
inc
lcall
sbb
jbe
loop
jns
cld
jecxz
or
pop
sbb
sbb
pop
testl
sub
fsubrs
daa
movsb
sub
out
outsl
xchg
daa
mov
sub
out
lods
dec
jo
out
and
loopne
sbb
incb
out
out
push
fistpll
mov
int
es
mov
rolb
repnz
outsb
ret
fistpl
dec
mov
and
lock
mov
lcall
or
cmp
loope
pushf
or
jno
cmp
ja
push
loope
sarl
loopne
shl
dec
insb
xor
push
pop
adc
mov
or
mov
or
xlat
jecxz
add
pop
lret
lcall
leave
cs
mov
ret
out
test
push
popf
push
scas
loop
imul
out
cwtl
mov
int3
adc
aam
insb
in
pushf
int3
les
xchg
add
pop
mov
mov
shrl
nop
pop
in
bound
lds
scas
stos
pop
and
or
js
aas
push
sub
jmp
insb
xchg
jns
and
mov
cwtl
aad
sbb
rclb
loopne
outsb
popf
shlb
decl
fistpl
or
scas
inc
imul
push
push
jle
ss
xor
sub
arpl
pop
mov
out
cmp
repnz
push
and
lds
jmp
shlb
pop
arpl
icebp
xchg
mov
jb
ret
lret
test
mov
out
rorb
push
test
loope
ret
outsb
mov
xor
fdivp
mov
push
mov
stos
inc
lcall
dec
dec
call
jb
or
cltd
cltd
stc
repz
xchg
lcall
add
mov
and
mov
inc
mov
popa
xor
nop
or
dec
jg
mov
aad
xor
mov
clc
stc
inc
or
cli
pop
mov
mov
mov
insb
stc
inc
xor
enter
inc
insl
sbb
add
sub
shlb
inc
lret
add
mov
fidivs
imul
adc
push
jns
cwtl
xor
mov
xchg
mov
sbb
insl
mov
ret
mov
outsb
jne
sbbb
sahf
into
add
inc
and
push
adc
cmc
or
cmp
sub
add
std
orl
mov
shll
cmp
mov
lods
in
cmp
jb
inc
cltd
into
push
ficoms
je
pushf
test
push
out
cmp
pop
movsb
fcoml
push
roll
and
cmp
add
stc
mov
dec
movsl
add
repnz
cmc
jp
ds
insl
cmc
pop
jbe
xchg
push
lea
cltd
push
aas
lods
inc
sahf
mov
mov
jmp
mov
mov
mov
ds
cli
add
xlat
jle
dec
decl
jns
dec
xchg
xchg
xchg
dec
jnp
lret
out
fimull
test
sbb
cmp
and
sub
imul
inc
adc
sbb
bound
dec
lods
inc
add
gs
mov
rclb
mov
lea
xchg
inc
dec
and
dec
mov
popa
jb
and
inc
fidivrs
xchg
pushf
test
fidivs
sbb
scas
insl
cli
pop
push
inc
fadds
cmp
inc
push
xor
sub
enter
aam
push
sub
iret
push
imul
sbb
out
mov
cld
in
pushf
sbb
rcl
repz
cmpsb
outsl
mov
fsts
push
xchg
adc
push
mov
mov
cltd
dec
lods
mov
sbb
jmp
lea
push
not
ret
cmp
and
es
xor
repz
and
ja
out
lret
xor
in
push
xchg
fnstcw
fisttps
pop
out
jne
jbe
push
clc
rol
sub
sbb
stc
js
icebp
pop
xor
sbb
arpl
add
gs
gs
cmp
inc
add
sbb
jmp
and
fucomp
cmp
fwait
jg
addr16
sti
icebp
add
mov
int
cld
dec
inc
jbe
fcomp
push
push
in
and
daa
jnp
mov
mov
mov
aam
fstpt
aaa
and
mov
and
mov
pop
mov
xchg
dec
cmp
cs
js
push
cs
adc
imul
pop
dec
cld
pop
pop
mov
sub
rep
pop
sub
fs
js,pt
push
sub
gs
xor
fdivrl
adc
adc
cltd
mov
or
inc
push
sub
xchg
cmp
xchg
sub
mov
xor
lret
push
sbb
fcoms
scas
dec
xchg
pop
and
lods
and
andl
or
lret
jecxz
es
sub
push
fisubs
out
mov
sbb
sbb
jne
push
add
sahf
mov
sbb
pop
inc
xchg
lods
imul
mov
cld
inc
xor
jl
or
repz
add
adcb
sbb
lret
arpl
imulb
popf
leave
cld
rcrb
leave
stos
in
pusha
add
sbb
mov
dec
xchg
in
sahf
out
pushf
paddw
xchg
adc
pusha
cmp
push
imul
xor
fwait
insb
cmp
jno
cltd
stc
xchg
enter
adc
outsl
test
shl
pop
out
sub
jne
fnsave
movsb
inc
push
addr16
push
push
and
inc
fcompl
enter
and
and
add
sub
cmp
inc
out
jmp
in
subl
lods
and
repz
in
push
loopne
or
mov
sub
mov
fisttpl
jmp
pop
jl
test
sarl
mov
cltd
jo
loope
mov
add
mov
jmp
jne
inc
xchg
xchg
fcomps
subb
sub
pop
and
into
pushf
adc
ljmp
dec
push
jns
mov
and
inc
push
imul
xchg
mov
rorl
popf
movl
fisttpll
fwait
adc
ja
jg
into
sub
mov
ss
ss
bound
rclw
pushf
std
ret
lcall
out
iret
or
cs
push
mov
sbb
stos
and
dec
sub
es
in
sbb
repnz
jl
popa
sub
mov
imul
nop
pusha
fistpll
hlt
mov
rorl
stc
shll
cwtl
addl
lcall
ficompl
push
mov
mov
je
inc
fisttps
sar
push
cli
fs
xchg
scas
xchg
int3
in
inc
out
out
out
not
fistl
std
hlt
mov
or
ja
xchg
xchg
sub
movsl
and
pop
sbb
inc
rclb
inc
gs
leave
xchg
push
and
sub
sbbb
ja
lahf
inc
daa
loopne
add
cld
mov
aas
clc
adc
sub
cmp
out
fcompl
aaa
rcrb
sbb
add
cmp
adc
loope
test
lcall
fildl
push
ss
lret
clc
movl
pop
sub
jle
xchg
ret
pusha
inc
adc
fisttps
mov
shll
stc
psadbw
movsb
testb
xlat
or
jbe
dec
push
sub
icebp
filds
push
adc
cmp
mov
mov
fwait
mov
pop
ja
loop
fwait
xchg
mov
dec
or
cmpsl
sub
and
inc
or
and
push
xchg
fldl
xor
and
push
jl
xlat
pop
aad
lcall
lea
cmp
xchg
sub
mov
pop
mov
xor
cld
jo
shll
ljmp
and
lds
or
push
sarb
aaa
sbb
in
push
pop
fstpt
xchg
xchg
lcall
leave
popa
pop
adc
js
xor
arpl
shl
xor
pop
adc
popl
imul
movsb
jp
movsb
adc
imul
mov
cmp
push
cmp
lret
dec
clc
sub
pop
icebp
push
mov
cmpsb
jae
test
cmp
pop
icebp
out
dec
mov
and
out
pop
xchg
test
shrd
xor
repz
push
mov
jb
push
inc
gs
or
aaa
xchg
lock
sahf
xchg
shll
enter
lret
sub
hlt
inc
cmp
push
rcrb
xlat
shr
cmp
pop
add
dec
jns
cltd
mov
out
push
add
dec
adc
sbb
add
push
and
xor
mov
inc
daa
mov
test
adc
mov
mov
daa
sahf
push
sbb
imul
test
fnsave
sbb
pop
sub
mov
movsl
jge
je
push
push
dec
pop
aam
int3
imul
fldenv
jb
inc
stc
cmpsl
dec
mov
ds
and
jmp
pusha
lahf
ss
dec
inc
cmpb
out
inc
das
jne
xchg
testb
cmpb
rcrl
movsb
mov
daa
ficomps
dec
pusha
lahf
xor
repz
push
ret
push
mov
fwait
cmp
fdivrp
popf
scas
mov
sbb
xchg
dec
pop
xchg
or
pop
iret
xor
dec
fucomi
cmp
adc
cmc
addb
sub
cmp
adc
xor
lret
xor
loope
ljmp
xchg
fwait
sbb
cmpsb
pop
mov
pop
mov
xor
js
adc
loop
into
inc
leave
add
cmpsb
pop
outsb
scas
lds
push
leave
daa
int
sarl
push
inc
push
adc
cmc
push
lods
sub
cmp
xor
addb
incl
rcl
dec
jne
ljmp
ret
or
or
leave
jle
fimull
push
cld
sub
insb
scas
push
in
xchg
mov
hlt
jno
pop
fnstcw
mov
and
or
pop
filds
cld
in
xor
sub
das
icebp
test
or
xchg
inc
push
xor
repnz
adc
jb
sti
xchg
pop
dec
fidivl
inc
cmp
and
xor
mov
mov
sahf
mov
push
push
sub
ds
sub
push
insl
aam
sub
repnz
jmp
pop
jo
dec
or
fs
mov
in
push
cmpsl
jp
xchg
inc
add
mov
mov
adcb
pop
adc
xchg
mov
mov
push
sub
cs
push
sbb
out
sub
push
mov
gs
sbb
aam
bound
inc
push
cmp
mov
push
mov
insl
cmc
lods
mov
xor
jmp
adc
adc
popa
add
and
lods
into
xor
in
insl
int
jge
push
push
sub
pop
pop
and
loope
in
mov
mov
je
fidivrs
daa
push
cmpsl
sub
add
mov
or
xchg
xchg
mov
xchg
sbb
out
aam
jmp
lods
frstor
sbb
popa
shlb
pop
iret
std
fstpt
lock
push
sub
cmp
mov
inc
jge
mov
xor
jmp
inc
sbb
and
cs
pop
cmpsb
cmp
das
dec
pop
jecxz
aam
sub
fdivrl
push
cld
adc
mov
fs
loopne
sti
jo
sahf
mov
nop
mov
push
sbb
jne
or
fs
das
add
sbb
jbe
gs
mov
sbb
dec
icebp
jns
ret
and
test
inc
jae
jb
adc
mov
js
xchg
sbb
xchg
insb
jg
cmp
fiaddl
sub
pop
pop
sub
fisubs
out
testl
mov
add
mov
outsb
pop
scas
sti
nop
mov
test
sub
mov
cmpsb
dec
test
cmp
in
cltd
adc
in
jne
mov
xchg
and
lahf
outsb
inc
jmp
scas
popf
fmuls
mov
add
jge
mov
jae
or
mov
cmc
ja
test
fstps
adc
xchg
push
cmp
loope
or
ficompl
jle
cli
cmpsl
arpl
pop
cmp
je
aam
sub
mov
mov
push
adc
sbb
dec
mov
sti
cmp
std
inc
or
or
lahf
mov
stc
mov
dec
dec
cmp
cmp
mov
int3
cmp
jmp
jle
test
imul
xchg
imul
lock
cli
stc
adc
sahf
push
cmc
loop
imull
fistl
hlt
or
addb
push
xchg
adc
push
adc
out
enter
ficoml
and
cmp
addr16
jge
or
dec
jge
scas
ss
loop
and
addl
mov
jecxz
into
mov
add
push
icebp
pushf
loopne
cmpl
jl
and
xor
fs
icebp
and
push
jl
stc
iret
adc
inc
and
nop
xlat
stos
fisttpll
mov
mov
xor
sub
dec
sbb
push
fistl
scas
jmp
into
pushf
push
negl
and
or
xchg
adc
and
scas
fmul
pop
outsb
cmp
adc
sbb
outsb
xchg
leave
cli
lea
cmp
or
mov
or
fdivrs
int3
mov
enter
jne
xlat
rcrb
adc
ja
adc
into
sub
push
jl
inc
dec
sbb
ja
ljmp
or
cmp
sti
pop
pop
sub
lods
aam
leave
xor
sbb
sbb
shll
sahf
jge
cmp
mov
mov
mov
sub
dec
add
and
idivl
call
loopne
jbe
mov
add
loope
icebp
aaa
mov
adc
cmpsl
rolb
or
js
test
lret
rorl
jae,pt
enter
add
mov
push
cld
xor
loop
ds
into
sub
pop
pop
and
insl
ss
push
mov
in
out
iret
pop
jle
or
cmp
outsb
xchg
dec
movups
jnp
jmp
loopne
sub
add
daa
ja
push
dec
xor
insb
add
movq
sahf
sbb
movsl
ja
in
xlat
pop
cmp
sbbl
aad
push
ror
cltd
pop
push
scas
int
loop
or
mov
insb
jns
popf
sbb
es
ljmp
cmpsl
icebp
fsts
out
pop
mov
mov
sub
scas
in
sbb
lods
test
repnz
and
rcrb
jge
add
push
data16
stos
std
enter
loopne
loop
or
cwtl
imul
mov
pop
scas
pop
mov
xchg
mov
outsl
sub
inc
lods
mov
mov
rclb
loopne
inc
lcall
mov
jecxz
cs
cmp
cmpsb
popf
rcrb
lahf
pop
sarb
je
add
sbb
out
pop
xor
sub
enter
test
cs
and
data16
sub
mov
push
jo
mov
fstpt
pop
imul
cmc
hlt
mov
icebp
ficoms
push
fisubrs
fwait
jg
notl
mov
sub
mov
cmp
hlt
and
push
push
xchg
outsb
jne
mov
xchg
ja
or
mov
lods
xchg
or
aaa
jl
leave
out
dec
call
mov
mov
std
test
sub
xor
cmp
xor
movsb
adc
outsb
int
xchg
and
mov
lods
and
add
mov
popa
nop
xchg
mov
jb
xchg
push
jmp
and
adc
push
mov
jbe
push
clc
and
adc
mov
xor
pusha
push
inc
or
xor
out
dec
jmp
out
out
sbb
dec
lods
stos
jp
out
loope
jne
xor
inc
sub
into
inc
fidivl
inc
push
out
ds
inc
jno
add
push
inc
mov
jl
test
cli
adc
add
sub
lock
aas
aam
sarl
mov
dec
mov
jns
cmpsl
xchg
push
sbb
inc
mov
cltd
iret
rolb
or
loope
push
and
and
pop
test
cwtl
lock
loope
jbe
scas
and
mov
js
lret
int3
push
fld
push
push
les
sahf
in
jne
insb
mov
jle
es
lret
pop
int
stos
nop
shll
std
movsb
push
pop
je
mov
out
sahf
rol
xlat
add
sub
addl
repnz
fsub
int3
movsb
sbb
addb
imul
test
adcb
pop
cwtl
jne
test
outsb
fmuls
and
in
sbb
je
mov
in
stos
scas
lahf
sarb
dec
mov
incl
loop
repnz
outsb
fiaddl
repnz
js
cmp
jne
imul
test
mov
fidivrl
add
adc
mov
push
repnz
inc
iret
mov
xchg
out
dec
ret
in
scas
dec
fisttpll
cli
sub
or
roll
xor
fisttpl
call
jle
outsb
adc
insl
inc
xchg
pop
fsubs
inc
fldenv
sub
cltd
or
mov
in
and
inc
lock
popf
xor
cmp
in
push
inc
test
js
and
iret
addb
pushf
loop
mov
test
stc
xlat
jns
in
mov
das
xor
mov
mov
mov
xchg
jns
jno
cli
sub
mov
lods
iret
fs
pop
cmp
mov
xchg
arpl
jo
lret
les
test
daa
mov
js
or
shlb
in
add
cmp
aas
cmp
pop
stos
xor
jne
in
pop
xchg
pop
jbe
push
daa
insb
inc
push
pop
cld
sub
das
pop
bound
ja
jne
and
dec
dec
inc
ror
jl
inc
xchg
rcrl
and
mov
sbb
fdivr
pushf
push
xchg
call
enter
mov
xor
aas
lock
in
mov
divb
mov
pop
es
out
cmpsl
testl
js
fwait
outsl
xchg
fsts
scas
xor
lea
movsl
mov
test
sbb
jbe
sbb
leave
jg
mov
lock
fists
mov
fwait
mov
clc
mov
aaa
cmp
push
inc
mov
addr16
sbbl
mov
inc
pop
mov
mov
xorb
xor
jg
add
sbb
xchg
mov
dec
cs
xlat
pop
push
lds
inc
push
mov
add
scas
cmp
lret
cmpsb
and
outsb
cwtl
in
test
sbb
adc
push
aam
cmp
sbb
paddw
xchg
pop
lds
call
pop
test
test
lahf
xchg
lahf
inc
xchg
cmp
inc
xor
roll
js
out
scas
popf
enter
les
dec
loop
xchg
movsb
mov
add
fdivrl
or
dec
push
jne
inc
fistl
in
cmc
stos
cmpsl
mov
inc
cmp
and
cmc
stos
subl
jecxz
std
lods
cli
push
fiadds
daa
insw
fidivs
mov
idivl
mov
lods
outsl
loope
cmpsl
push
call
js
xor
adc
in
addr16
sub
cmp
xor
insl
dec
aas
adc
push
mov
aas
push
adc
add
rolb
orl
xchg
jecxz
push
mov
nop
pop
pushf
inc
test
jecxz
sub
test
xchg
inc
bound
mov
pop
xor
out
cld
rcrl
push
data16
mov
mov
out
and
je
ret
lret
add
nop
cli
js
subl
enter
jne
pop
adc
out
ret
lods
sub
sbb
cmp
mov
xchg
mov
xor
rol
xor
inc
enter
push
mov
and
sbb
fs
jb
add
es
xchg
pop
jne
add
push
addr16
mov
xchg
sbb
push
adc
xor
sub
pop
mov
pop
rolb
sub
fistpl
or
imul
or
shrl
jge
add
data16
imul
xchg
leave
or
and
sbb
add
nop
jae
test
movb
pusha
hlt
mov
cmc
leave
mov
jmp
sbb
arpl
int3
inc
dec
jb
in
sbb
pop
xchg
std
dec
mov
out
data16
lcall
jmp
fcomps
inc
and
rcrb
int
sahf
pushf
xor
addr16
adc
adc
fs
and
repnz
cmp
pop
or
insl
sub
jbe
adc
inc
pop
inc
fwait
jbe
jg
lahf
test
ss
movsl
mov
dec
into
inc
lock
xor
pop
dec
jl
jmp
xor
imul
cmp
insl
out
cwtl
cmp
add
dec
fwait
sbb
push
adc
jmp
leave
outsb
arpl
sub
mov
cltd
das
lods
call
xchg
sub
jecxz
inc
sti
sub
lret
addr16
inc
or
mov
cwtl
movsb
push
push
add
ss
sub
leave
lock
dec
and
lods
push
lret
and
fistpl
les
cltd
orl
out
rcll
jbe
cmp
icebp
push
pop
mov
out
or
enter
insb
and
push
dec
pushf
popa
and
pop
into
cmc
into
jno
lcall
int
pop
clc
push
cmp
push
dec
leave
and
pusha
fwait
subb
test
int
pop
xchg
lea
insb
mov
adc
cmp
lea
out
je
scas
fdivrl
mov
mov
adcl
or
mov
mov
mov
mov
and
rclb
jns
je
jb
mov
and
jmp
fucomp
or
ja
add
xchg
mov
add
and
pop
cli
mov
jnp
bound
pop
pop
jo
adc
dec
pop
push
jae
push
push
xchg
cmp
popa
jge
xchg
add
sbb
fcmovne
pop
stc
push
daa
pop
sub
or
sbb
sub
mov
push
in
out
fdivr
repnz
fsubl
lods
dec
pop
aam
scas
das
incb
inc
and
ljmp
lock
aaa
mov
icebp
int
shll
adc
pop
xchg
xor
jae
push
dec
cmp
rclb
sbb
pushf
outsl
pop
cmp
mov
jb
mov
inc
das
sti
in
jp
popa
mov
pop
and
ret
or
xlat
insl
mov
clc
and
jno
adc
add
jae
pop
sbb
sti
les
jb
test
outsl
lods
enter
or
fwait
lret
inc
mov
ss
rcr
imul
test
xchg
cmp
sub
out
dec
out
sarl
fs
fsubs
lret
shll
movsb
fidivs
dec
inc
hlt
outsl
sbb
mov
and
lahf
test
scas
and
arpl
add
sbb
lcall
std
andb
pop
mov
jo,pn
fdivs
jg
mov
xchg
sub
outsb
repz
mov
mov
mov
and
mov
cmc
xchg
sahf
sub
add
js
std
lret
imul
shlb
jno
lds
push
xor
ret
inc
jecxz
push
or
pop
dec
outsb
test
push
inc
ljmp
jecxz
sbb
dec
outsl
in
sti
ret
leave
popf
ja
or
ja
enter
lods
cmp
add
test
mov
nop
jb
mov
stc
xchg
in
gs
mov
push
xlat
jmp
ret
push
sbb
movsb
je
pop
mov
divl
or
xchg
cmp
add
inc
adc
mov
in
scas
fcompl
int3
aaa
mov
test
dec
pop
fstpt
das
sarl
scas
icebp
pop
mov
sahf
jne
outsb
inc
inc
arpl
fisubrl
jne
push
call
pop
movd
mov
int3
pop
xor
push
cltd
aas
dec
sub
dec
mov
jmp
aas
adc
add
ret
das
mulb
shrl
mov
push
pop
or
add
aas
aad
pop
dec
dec
lea
inc
ljmp
inc
adc
dec
aaa
lret
mov
lods
adc
lds
jns
jmp
dec
popf
xlat
movsb
and
arpl
fdivs
cmpsl
ljmp
dec
mov
sub
adc
mov
xchg
mov
scas
mov
pushf
sti
push
dec
push
push
dec
aaa
aam
inc
and
add
in
lret
sub
lret
and
xlat
pushf
sbb
mov
loopne
fs
ret
mov
adc
js
push
push
pop
lahf
aaa
sbb
in
punpckhdq
xorb
pop
or
mov
sub
xlat
adc
cmpsl
mov
fucom
mov
pop
imulb
pop
xor
add
test
adc
cmp
pop
mov
jp
in
mov
adc
scas
leave
pop
xchg
push
xchg
mov
jne
add
jp
inc
fsubrl
out
out
mov
or
mov
push
pop
jge
iret
js
cli
mov
pop
out
adcb
push
fs
pop
mov
sti
test
pop
dec
mov
dec
and
cmpsb
push
dec
jg
in
cmp
or
adc
pop
lret
fpatan
or
dec
xchg
mov
fdivl
xchg
cmpsl
icebp
pop
subb
dec
dec
xchg
mov
sub
lock
mov
xor
xchg
mov
sarl
mov
inc
ljmp
jecxz
mov
leave
mov
mov
aas
mov
jl
sub
mov
dec
or
adc
das
or
push
je
and
out
sbb
shlb
sub
lds
aaa
cld
and
loope
mov
jl
mov
push
stos
jo
stos
loopne
bound
sub
push
or
push
dec
push
inc
dec
lahf
inc
std
mov
dec
adc
cli
mov
mov
popf
test
inc
daa
movsb
sbb
xor
pop
in
mov
sbb
pop
aaa
les
push
pop
notb
mov
jae
cmp
cmpsl
lret
jmp
ljmp
fwait
mov
cmp
int
jns
pop
in
rcll
in
dec
jne
test
xor
cmp
cmpsl
mov
rcr
sub
jae
pop
xchg
push
movsb
aaa
ret
add
push
popa
push
rorb
jl
jg
add
pop
xchg
adc
fistpl
jl
out
aaa
jb
jmp
enter
outsl
mull
hlt
inc
jmp
mov
mull
pop
cmp
pop
dec
int3
xor
dec
lods
stos
sub
xor
scas
push
push
jl
pop
out
add
scas
and
push
dec
outsb
cmp
subb
sub
int
mov
lods
mov
lock
pop
mov
mov
fisubrs
pop
roll
mov
sub
cld
stc
sbb
scas
leave
cmp
inc
mov
lahf
adcl
idivl
xlat
push
cmp
push
mov
hlt
cmp
test
rorb
inc
xor
enter
insl
outsb
mov
insb
cwtl
lock
ret
jns
sbb
push
push
mov
and
enter
jne
xor
add
sub
inc
sub
pop
sbb
movsb
aas
adc
inc
testb
lcall
rolb
imul
cs
xor
add
fisttpll
fistpl
push
cmp
pop
push
fistl
push
inc
xor
lock
pushf
aam
insl
jecxz
scas
sub
mov
in
std
mov
shrb
cmpsb
xchg
and
loope
mov
sub
cmp
pop
lds
push
leave
hlt
xchg
insb
int
mov
jecxz
sbb
mov
inc
mov
xor
std
xchg
aam
or
sahf
sub
dec
cwtl
aaa
ja
lods
push
mov
jne
fidivs
mov
incb
int3
in
pop
pushf
outsb
sbb
fdiv
mov
in
test
inc
mov
xlat
pop
xchg
push
sub
nop
cmp
cmpsl
cmp
mov
adc
jns
movsl
push
push
fs
insl
in
mov
fdivs
gs
test
add
insl
jns
pop
cs
ljmp
in
lds
mov
jo
cmp
out
pop
and
ret
or
push
scas
cmp
xor
call
imul
pop
sbb
insl
test
adc
shrw
imulb
inc
sbb
add
mov
ss
mov
adc
push
fcomps
repz
jne
mov
xchg
xor
int3
pop
aam
inc
movsb
cmp
dec
mov
xchg
mov
jae
fsubl
xchg
and
nop
out
cwtl
sbb
sarb
or
inc
jle
jecxz
cmpsl
and
dec
insl
aad
mov
cmp
sub
mov
fsubr
dec
dec
incl
push
arpl
lods
push
sbb
loopne
ficomps
out
sbbl
int3
leave
xchg
in
cltd
test
or
add
pop
push
imul
add
les
mov
addl
fs
push
repz
add
out
in
jno
inc
out
sbb
xor
iret
out
cmpl
mov
insl
ja
ss
movsl
sbb
pop
mov
mov
cwtl
mov
std
jno
iret
cmc
adc
or
and
sbb
sub
push
repnz
lahf
pop
add
jecxz
push
das
push
test
cmp
inc
test
dec
dec
ret
cli
popf
nop
fidivs
cmp
mov
pop
sahf
cmp
mov
loopne
pop
out
adc
mov
mov
push
ret
inc
das
nop
cld
or
test
inc
or
mov
ljmp
dec
pop
in
inc
fldt
xchg
add
or
push
push
incb
jge
xchg
cli
mov
insl
clc
pop
xchg
pop
popf
inc
xor
xchg
clc
pop
xchg
ss
mov
das
imul
mov
cmpsl
sbb
test
fsub
mull
int
push
ss
add
sub
hlt
adc
add
or
inc
scas
lea
push
ja
push
sub
sub
sub
and
jge
xlat
xor
sub
push
outsb
cmp
aas
pop
push
xor
ljmp
bound
mov
and
cmc
dec
mov
pop
jo
mov
jecxz
xchg
test
xor
mov
push
cmpsb
jle
in
pop
jge
inc
inc
rorl
sbb
xchg
xchg
int
enter
jb
je
pop
sbb
andl
fsts
popa
ret
cli
xchg
inc
andb
pop
enter
loope
cmpsl
adc
inc
xor
lret
dec
shlb
jg
incb
cld
in
loop
push
call
xchg
out
fsubp
daa
lret
jp
pop
xchg
xor
cmc
dec
and
push
pop
ljmp
bound
out
stc
cmp
jbe
fldl
inc
dec
ret
shrl
dec
int3
imul
aas
repz
sahf
jnp
leave
xchg
jne
lahf
std
push
xchg
rol
xchg
push
int3
iret
sbb
jb
mov
orb
inc
xchg
push
enter
mov
push
pop
incl
xchg
loop
movsb
cwtl
int3
or
pop
mov
pop
dec
popf
xchg
mov
push
fidivrs
ret
leave
pop
insl
xor
mov
insb
loope
cmp
adc
shr
mov
push
or
sub
popl
enter
push
jle
lods
insb
shrb
fcmovne
lods
pushf
inc
jle
jl
jl
out
xor
sbb
push
out
into
xchg
cmp
aam
mov
jns
sub
mov
jmp
jg
sbb
pop
or
out
aas
and
xchg
jns
lcall
dec
add
out
jnp
test
xchg
ja
adc
lret
clc
jnp
cmp
dec
orb
int
int3
adc
add
lret
out
mov
jl
nop
ret
sub
and
mov
sahf
pop
lock
das
sub
cwtl
push
jnp
inc
xchg
in
xor
incb
mov
and
dec
cltd
adc
daa
enter
test
adc
push
xchg
cmp
cmpsl
and
and
rcll
int3
je
movsb
cld
add
mov
cmp
and
sub
inc
aad
pop
xchg
lock
insl
inc
pop
dec
dec
lcall
adc
fsubrs
icebp
sti
jmp
hlt
pushf
iret
add
pop
aam
stos
mov
jecxz
sar
insb
mov
lea
test
mov
ret
shlb
outsl
hlt
mov
ffreep
push
or
push
push
std
push
sub
jne
rorb
and
mov
dec
sti
loop
inc
inc
xchg
mov
xor
mov
pop
mov
adc
loopne
arpl
pusha
mov
and
inc
or
push
adc
xchg
dec
or
sbb
mov
xchg
test
sahf
fistpll
mov
dec
xchg
pop
sahf
test
mov
mov
xlat
mov
cs
mov
sarl
and
sbb
jb
loop
and
sub
sbb
jg
addr16
push
mov
mov
adcl
lret
cld
sub
cltd
sub
jl
mov
pop
mov
push
cmpsb
fimuls
fs
sub
pushf
adc
sbb
loopne
xchg
cmp
sbb
xor
mov
hlt
dec
inc
das
repz
jbe
cmpsb
in
stos
xor
mov
mov
or
nop
adc
fs
push
dec
jg
cld
xchg
mov
roll
int3
push
int3
pop
push
xchg
fcoml
pop
xor
call
pop
jo
add
adcl
mov
xchg
lahf
rcll
fcompl
mov
dec
jno
and
or
dec
sbb
imul
test
ljmp
iret
adc
aas
je
xchg
inc
pusha
fmulp
subb
xchg
insb
push
mov
inc
jne
fisubrs
fldt
pop
test
and
inc
test
int3
cmp
sub
push
or
adc
adc
xor
push
rorb
test
in
hlt
push
mov
dec
dec
xchg
ds
dec
jbe
xchg
or
test
and
jle
cmp
mov
mov
mov
xchg
mov
scas
adc
mov
test
bound
jmp
dec
nop
shrb
popf
lods
ret
sbb
mov
add
mov
adc
push
cwtl
stc
and
add
arpl
test
popl
push
cwtl
jnp
push
in
cmp
adc
sub
cmp
enter
jo
shll
sub
add
and
xlat
jl
add
pop
nop
and
js
ljmp
ret
testb
dec
mov
mov
test
iret
push
jecxz
pop
mov
stos
ja
adc
mov
cwtl
adc
test
xchg
lret
pop
stos
mov
leave
push
dec
xchg
cmp
dec
dec
dec
enter
and
aas
out
cltd
in
mov
push
leave
das
or
or
ror
xchg
jns
iret
xor
mov
sub
icebp
pop
mov
add
movsb
or
shlb
push
mov
sti
mov
sbb
jb
xor
arpl
xchg
xchg
fsubrl
movsl
loope
adc
rol
sub
jl
bound
cltd
int
rcl
pop
pop
mov
cwtl
sti
push
out
out
adc
fbstp
xor
orl
loop
push
push
sub
lahf
ja
and
clc
in
mov
and
adc
jo
and
stos
inc
lea
mov
fwait
jl
cmc
mov
rcrl
jecxz
loope
dec
test
imul
or
popl
xor
mov
subb
leave
mov
shl
das
or
rclb
xor
mov
xchg
nop
inc
xchg
cwtl
jbe
jae
sbb
hlt
arpl
in
outsb
push
fisubrs
out
dec
insb
mov
js
or
xchg
mov
add
int3
repnz
popf
das
jno
mov
lret
push
cmp
pop
cltd
adc
add
mov
fisubs
push
push
jnp
rcr
xchg
sbb
adc
add
or
mov
jne
movsb
xor
jno,pn
hlt
xchg
xchg
imul
js
ljmp
bound
cmpsb
daa
movsl
in
arpl
popf
jb
arpl
inc
movsb
leave
int
sbb
jb
sbbl
push
xchg
cs
mov
stos
cmp
pop
icebp
sbb
mov
es
int
ficomps
jae
pushf
das
cmp
lods
out
add
cwtl
jns
cmp
insb
in
ljmp
cmc
popa
and
push
sbb
fwait
popa
fsubp
rclb
scas
push
repz
mov
popl
or
andb
xchg
mov
shll
sbb
sbbl
push
push
pop
lods
adc
ds
inc
cli
add
jb
jnp
gs
inc
and
xchg
xorb
iret
or
data16
mov
push
mov
add
call
sub
lods
cmc
xchg
push
push
adc
cmp
les
or
shrl
push
dec
jnp
js
sub
push
testl
int
subl
repz
and
and
xchg
test
loop
jae
sub
xchg
mov
aad
jns
cmp
pop
sub
jmp
sbb
jmp
cmp
jo
xor
pop
mov
aam
push
adc
mov
mov
ret
push
cmp
imul
or
mov
ds
insb
pop
xor
cld
xchg
sub
dec
leave
fwait
shll
inc
mov
cmp
sbb
mov
inc
cmpsl
add
xchg
push
jno
mov
scas
leave
push
or
addr16
sbb
arpl
push
ret
xchg
sarb
dec
into
adc
add
andps
ds
test
das
mov
or
mov
or
andb
and
push
lods
aam
cltd
ret
in
mov
adc
and
push
sub
inc
scas
jecxz
aaa
xchg
dec
js
out
mov
push
jnp
sub
cli
and
loopne
pop
shlb
or
xchg
mov
push
orl
nop
test
inc
rclb
into
lds
mov
repnz
cmpsl
dec
and
mov
dec
dec
bound
adc
repz
push
iret
mov
roll
mov
mov
aam
jnp
pop
imul
sbb
sub
sub
cmp
loopne
inc
adc
ljmp
sub
fwait
insl
or
mov
jg
test
fcoml
sub
mov
dec
scas
mov
call
enter
mov
repz
and
in
jmp
out
cld
jmp
loop
icebp
stos
sub
insl
test
jp
ja
push
push
aas
roll
inc
inc
push
inc
mov
dec
insl
repnz
insl
push
mov
idivl
nop
mov
insb
pop
adc
push
clc
ljmp
subl
mov
and
repnz
aaa
into
std
mov
gs
xlat
add
scas
adc
jecxz
pop
jo
rcl
jno
movsb
jne
dec
cs
jge
dec
xchg
fistpll
xor
adc
cmp
cltd
lret
lret
inc
xor
test
inc
loop
cmp
dec
xchg
push
call
call
sbb
subl
fldl
popa
cmp
movsb
nop
dec
int
sbb
fimuls
mov
mov
hlt
push
or
imul
jp
fcomps
popa
jge
jno
mov
ss
stc
outsb
mov
insl
int3
sub
push
mov
pop
loope
cmp
addr16
sbb
ret
cli
jl
rolb
ret
leave
pushf
cmovnp
arpl
sti
cmp
ret
mov
xlat
mulb
test
mov
shll
scas
rcrl
inc
lods
cltd
pop
add
and
cmp
arpl
in
cmp
repz
ss
mov
mov
inc
int3
cmp
xchg
xor
pop
inc
add
dec
shll
sub
std
mov
sub
adc
fisubl
push
fwait
xchg
push
lds
push
sub
fdivrp
inc
adc
adc
mov
mov
mov
mov
imul
mov
lret
add
subl
leave
pop
ja
imul
fs
es
fwait
xor
cld
cmpsb
jnp
mov
dec
push
jg
sahf
pusha
call
fbld
pop
fwait
imul
add
adc
scas
sub
add
push
adc
lret
xlat
mov
jmp
test
pop
stc
icebp
lahf
mov
mov
or
inc
ja
sub
and
nop
pop
outsb
add
mov
dec
repnz
mov
cmp
sub
or
sbb
lock
in
cmp
movb
mov
out
jb
xchg
aad
pop
xor
and
fs
sahf
and
loop
pop
cmp
data16
and
js
mov
dec
mov
inc
dec
or
jbe
sbb
dec
lods
mov
std
rol
data16
adc
fists
outsb
outsb
mov
mov
add
mov
sub
cmp
sbb
fnstenv
inc
int
test
push
cmp
or
es
out
shll
adc
ret
sbbb
adc
inc
push
xor
adc
test
jmp
xchg
and
pop
jno
insb
cmp
sbb
cmp
movsl
mov
adc
arpl
jne
shll
movsb
fisubs
xchg
mov
xchg
jb
inc
pop
cli
stos
test
inc
stos
aaa
hlt
or
cmovo
jbe
xor
popf
pop
std
add
adcl
cltd
test
pop
in
ret
adc
or
dec
xchg
mov
push
pop
xor
iret
ja
adc
mov
pushf
fstpl
mov
rcll
repz
ret
shrb
dec
add
rclb
pop
sub
jmp
lds
mov
outsb
test
jg
in
pop
lcall
insl
loope
xchg
mov
andl
xor
sbb
in
in
cmp
movsb
mov
jp
pop
push
and
ds
loope
mov
mov
adc
add
loopne
cld
shlb
mov
lahf
popf
push
mov
push
mov
pop
outsl
push
fisubs
adc
sub
jmp
pop
std
sarb
jge
xchg
mov
inc
xchg
sbb
push
pop
xchg
rcrl
xlat
xor
aas
adc
cmp
ljmp
scas
mov
pop
pushf
leave
add
imulb
xor
inc
aad
mov
or
cld
sbb
cmp
mov
mov
xchg
sahf
xchg
push
negl
push
xchg
lcall
cld
aas
pop
xchg
push
cwtl
mov
lahf
dec
push
dec
lock
add
mov
shlb
fistpl
inc
loope
push
outsb
mov
mov
cmp
out
mov
lcall
push
rcrb
inc
mov
mov
out
mov
and
popa
aaa
dec
push
fucomi
in
adc
add
inc
push
rcl
test
insl
mov
sub
mov
and
out
or
pop
fsubrl
mov
cli
iret
adc
fdivs
in
push
shrl
into
fisttpl
mov
movsb
imul
test
jne
push
xor
cs
ss
and
std
dec
xchg
clc
das
int
cld
add
jne
sti
mov
aam
jo
fmulp
cli
mov
ror
sbb
outsl
lahf
mov
jb
or
rcll
sbb
pop
insb
inc
push
push
cmp
jmp
inc
xchg
pushf
cs
cmp
fisubs
jb
pusha
cmp
mov
adc
inc
dec
push
or
jne
pop
adc
inc
fcomps
add
dec
mov
push
repnz
adc
push
pop
mov
loop
or
pop
pop
shlb
out
les
cmc
inc
or
xchg
jecxz
mov
cmp
out
sbb
arpl
sbb
jo
cwtl
pushf
inc
lcall
add
dec
loopne
std
insl
push
outsb
loop
in
jg
subl
popf
push
mov
xlat
xchg
aas
aas
cmp
xchg
out
and
loop
fdiv
dec
sahf
or
pusha
icebp
push
jmp
testb
add
pop
and
adc
inc
fimuls
ljmp
sbb
fdivl
pop
pushf
test
into
loope
xchg
xchg
and
daa
loopne
ja
dec
and
imul
push
jbe
insl
stos
sub
clc
inc
fwait
jmp
leave
push
sub
jl
in
lods
aam
jp
lea
flds
lock
inc
inc
repnz
packuswb
jne
addl
mov
mov
popa
repz
pop
xchg
xchg
iret
inc
dec
pushf
and
test
pop
jg
cmp
mov
jl
roll
adc
cwtl
movsl
nop
and
pop
xlat
mov
dec
insl
sub
repz
cmp
sbb
sub
mov
mov
and
incl
xchg
dec
sub
sub
mov
adc
sbb
test
popf
fdiv
cltd
mov
jb
popa
mov
mov
xchg
inc
and
adc
test
jns
aas
sub
sub
pop
inc
cmp
mov
fsts
mov
das
push
pop
fwait
icebp
inc
cmp
ret
fidivl
add
in
and
cmpsl
xlat
inc
sbb
mov
cmp
pop
cmp
push
loopne
mov
inc
dec
or
or
dec
popa
adc
in
fiaddl
mov
push
add
and
xor
jmp
movsl
dec
jns
jg
gs
lcall
dec
lret
in
mulb
push
fucom
adc
xor
mov
sub
push
xor
pop
xchg
mov
push
inc
popa
enter
xor
gs
lea
push
xchg
push
mov
shll
mov
sbb
shrl
sarl
xchg
jo
addr16
ja
push
sbb
and
data16
stc
sbb
mov
fadds
xchg
out
lods
cltd
and
into
jle
jl
cmp
mov
xor
adc
insb
testb
lcall
loope,pn
aaa
mov
pushf
inc
enter
sbb
xchg
jecxz
in
adc
test
jae
jmp
sub
movsb
lock
pop
cmp
push
shlb
mov
dec
xor
outsb
insb
cltd
and
out
and
sti
jge
lea
test
xchg
rcr
loopne
xchg
lods
imul
into
mov
inc
push
js
mov
cmpb
xchg
std
imul
mov
sarl
sbb
daa
pop
int
cmpsb
mov
ljmp
mov
pusha
test
push
insb
push
neg
shll
ljmp
add
add
lea
push
xor
icebp
icebp
sahf
xchg
orps
and
push
jecxz
insb
or
xor
sti
jp
pop
xchg
rep
dec
mov
int
lods
dec
fcomi
add
jecxz
sub
mov
mov
repz
test
push
outsl
mov
icebp
nop
imul
add
arpl
sbb
movsb
inc
rcr
movsl
or
addb
sbb
in
es
adc
xor
push
mov
aaa
pop
cmp
jns
mov
insb
and
lock
jb
fildl
inc
sub
cmpsb
cmp
mov
stos
cli
xlat
push
fwait
xchg
call
clc
pop
bound
pop
imul
pop
cli
iret
or
aaa
fs
xorb
pop
fwait
mov
arpl
and
xchg
jno
sbb
pop
scas
sbb
mov
and
dec
xchg
insl
xlat
mov
pop
lret
aas
leave
lret
sbb
add
jae
mov
mov
in
lret
sti
stc
shll
pop
xchg
add
insb
outsb
adc
or
adc
mov
pop
xchg
or
ret
pusha
push
scas
jmp
fidivs
sbb
out
add
out
lret
mov
mov
cli
cmc
sub
cmp
ljmp
mov
jmp
adc
xchg
adc
cwtl
jg
je
or
sahf
or
mov
or
jg
clc
cld
test
enter
mov
push
add
subl
push
dec
pop
adc
lods
cmc
movsb
ret
ret
std
out
sbb
jne
ret
sub
jo
mov
cli
push
sub
in
and
pop
fs
scas
ljmp
mov
cmc
mov
repnz
cld
push
insl
sub
fdivs
imul
in
es
scas
stos
jns
adc
sub
push
cmc
loope
or
loop
inc
and
or
mov
or
insl
int
fsub
jg
and
insl
jnp
ja
inc
lea
inc
stos
push
xchg
incl
jmp
lock
push
xchg
mov
cmp
mov
jb
inc
in
cwtl
ja
or
jl
imul
fldt
std
fadds
fsubrs
sub
pop
xlat
push
lcall
out
insl
loop
jecxz
mov
mov
bound
add
pop
xchg
mov
pusha
jmp
inc
int
movsb
ret
es
xchg
sbb
mov
push
push
lret
lods
inc
scas
mov
mov
jno
pop
dec
mov
pop
dec
mov
lods
cmpsb
adc
pusha
sub
bound
push
pop
add
jae
std
mov
pop
cs
repnz
gs
mov
adc
test
cli
mov
aaa
push
addr16
test
mov
lea
dec
in
shll
out
stc
addr16
pop
lret
mov
cli
clc
jo
jp
lret
inc
mov
aam
outsl
add
test
pop
repnz
and
frstor
pop
popf
ljmp
xchg
mov
jne
xchg
aad
mov
ja
and
cmp
aas
ja
test
stos
push
adc
cmpsl
ret
call
add
jnp
add
cwtl
jnp
xlat
lret
outsl
std
in
jecxz
dec
adc
jmpw
adc
test
mov
in
je
andl
pop
xlat
addr16
shl
movsl
iret
fidivrl
inc
movsb
lods
xchg
maxps
pop
fildll
js
enter
inc
icebp
test
lahf
stc
out
dec
divb
sbb
leave
sbb
xor
inc
adc
mov
fldl
movsl
cmp
nop
mov
test
jg
xchg
pushf
push
outsb
jg
mov
xor
mov
or
lds
push
and
and
or
clc
mov
pop
out
cmp
adc
in
dec
insb
roll
xchg
lods
or
repz
mov
stos
push
add
test
dec
into
stos
inc
and
adc
movsl
push
out
mov
es
xchg
sub
in
mov
pop
cmp
lock
shll
push
xchg
incb
scas
int3
fsts
pop
call
add
and
lock
jns
fldl
add
addr16
mov
outsl
pop
xchg
cmpsl
std
imul
xchg
out
mov
xchg
lret
cmp
jmp
loopne
xchg
xchg
add
rclb
adc
pop
mov
and
dec
sbb
xor
cld
ret
jmp
cmp
aam
push
notl
test
dec
js
sbb
or
pop
jge
mov
aas
jns
gs
inc
adcl
pop
aas
daa
cmpsb
cmp
jbe
adc
dec
test
cli
scas
repnz
add
aad
push
leave
push
stos
cmpl
mov
and
pop
int3
xor
sbb
push
sub
xchg
cmpsl
jmp
cmpsl
jmp
stos
test
jnp
xchg
std
lea
push
test
mov
push
xlat
and
lret
sub
fldl
cld
in
lds
xorl
in
in
inc
negb
add
push
nop
mov
pop
sub
inc
sbb
popf
bound
bnd
cltd
lods
or
jbe
mov
add
movsl
add
loope
push
mov
popl
or
std
das
repnz
and
mov
leave
insb
pop
sbb
imul
mov
nop
imul
sub
mov
mov
dec
imul
jo
out
mov
insl
xor
mov
idivb
test
mov
scas
bound
mov
push
dec
test
pop
pop
push
dec
push
pop
sbb
xor
jg
inc
jnp
loop
ret
test
push
jmp
mov
xchg
cmp
movsl
aam
rclb
inc
mov
outsl
push
ss
clc
stc
push
dec
jo
addr16
mov
xor
fwait
repnz
movsl
aam
sti
pop
jmp
bound
loope
popa
insb
out
inc
inc
xchg
and
out
lods
inc
test
fcomp
xchg
pop
adc
and
inc
movsb
ljmp
xchg
in
xor
jmp
xchg
add
and
jno
in
mov
cmpsl
mov
cs
loopne
mov
xchg
jl
jg
rcr
push
jle
arpl
aas
and
dec
mov
cmpsb
aam
jnp
rclb
mov
mov
mov
scas
jge
push
sub
push
xchg
iret
sub
test
hlt
mov
daa
inc
xchg
sbbb
jo
ds
gs
jae
insl
stos
pop
adc
add
mov
arpl
push
repz
mov
loop
cmp
and
cmp
mov
xor
sbb
lcall
scas
ret
out
xor
hlt
aad
cmpsl
add
mov
stos
cwtl
add
lret
int3
inc
sbb
fisttps
pop
dec
pushl
mov
mov
jne
dec
and
dec
cmp
popa
push
xor
dec
sbb
stc
dec
iret
xor
mov
aad
movsb
jb
lock
adc
fnsave
dec
insl
jl
sub
xor
pop
fsts
inc
xchg
ds
enter
sbb
mov
int3
loop
push
adc
lods
xor
push
subb
lcall
sbb
ljmp
aam
lahf
fidivs
or
test
mov
cmovnp
inc
das
mov
or
and
mov
test
in
jo
dec
push
jne
mov
jmp
or
mov
adc
mov
push
lods
jle
sub
pop
adc
pop
jnp
lock
xor
xorb
out
in
push
dec
in
test
and
stos
and
lods
dec
jbe
jno
dec
and
mov
jmp
sbb
test
in
dec
test
add
cs
mov
mov
jbe
cmp
pop
sahf
sbb
ja
insb
into
inc
inc
rcrb
add
ss
popf
push
lret
add
mov
fdivl
int3
jp
push
and
je
jmp
mov
clc
jbe
stos
cltd
ja
int3
inc
xor
jmp
ficomps
cmp
mov
pop
sarl
push
sub
dec
mov
and
mov
jg
or
dec
xchg
ljmp
jmp
mov
pop
push
lret
pop
lahf
pop
dec
testb
das
mov
push
lds
call
adc
addr16
mov
fwait
cmp
aaa
inc
dec
enter
push
sti
jp
repnz
xchg
adc
mov
adc
bound
das
enter
push
fsubr
vpaddusw
xor
jle
mov
or
lcall
xchg
jns
cld
cmp
mov
call
and
adc
jns
xchg
cmpsb
out
or
into
insb
add
or
xor
pop
push
add
mov
scas
notl
ret
mov
add
in
int3
dec
adc
adcb
fistl
aaa
test
movsl
cmc
test
jbe
dec
or
aas
int
add
bound
xchg
cmp
mul
out
cmp
cmc
inc
cld
mov
pusha
aad
movb
cmp
imul
cmpsl
mov
das
call
insb
cli
and
in
shll
xor
js
subb
pop
jge
fisubrs
sbb
push
pop
jo
pop
testl
mov
mov
cmp
imul
adc
mov
aaa
inc
dec
sbb
fcoml
and
std
out
jo
pop
xorb
inc
jmp
adc
push
mov
cmp
imul
dec
shr
lds
sbb
popa
jmp
xchg
push
out
sbb
pop
cmp
dec
push
sbb
loopne
mov
nop
cmp
or
dec
fstpt
cmp
es
std
mov
jmp
inc
fsubs
sub
inc
int
ret
out
jmp
clc
push
repnz
lcall
fstp
mov
pop
rcll
stos
cmpsl
aam
pushf
and
add
call
jno
ds
sbb
mov
inc
xor
loope
xchg
shr
xor
pusha
xchg
xchg
inc
lret
ja
out
pushf
add
and
xchg
xor
jno
adc
pop
jns
xchg
loopne
or
in
lret
lret
jmp
pop
dec
js
jg
test
ret
xor
lds
movsl
shrl
and
shl
mov
fsubrs
jo
cli
cmpsb
mov
xor
xor
cmpsl
jbe
ljmp
stos
cmp
ljmp
jmp
std
adc
cmp
sub
idivb
adc
ljmp
cmp
daa
das
or
push
sbb
subb
pushf
add
cli
adc
nop
addr16
cli
out
inc
ljmp
cli
mov
verr
mov
call
sbbb
xchg
and
jbe
mov
pop
scas
mov
or
xchg
xchg
mov
mov
cld
add
mov
and
das
push
test
repz
push
cmpsl
cmpsl
sahf
and
push
gs
xor
in
mov
int3
jge
imul
in
popl
loope
in
mov
popa
ja
push
sbb
or
test
popf
mov
lock
jecxz
in
pop
jne
or
cltd
das
scas
pop
push
xlat
test
insl
rcrl
push
das
scas
cmp
jle
lds
inc
int3
push
inc
aam
inc
cmp
mov
mov
ret
push
cmpb
test
mov
out
xor
je
into
cmp
rcrb
add
jg
rorb
mov
fidivrs
push
dec
lcall
or
or
inc
dec
add
sahf
dec
movsl
add
mov
dec
inc
xor
and
push
jno
ret
push
sub
insb
dec
jl
and
push
das
dec
dec
sub
cwtl
ficoml
les
adc
cwtl
mov
sub
inc
shrb
scas
arpl
pop
mov
ljmp
repz
cmp
jge
mov
in
rcrl
sbb
pop
mov
or
push
push
sti
fnstenv
mov
imul
gs
lock
xchg
dec
call
pop
and
pop
movsb
sahf
andb
imul
movsl
push
into
push
insl
ficoml
lea
pop
cmpsb
popf
out
js
in
mov
sbb
stc
pop
push
cmp
pop
inc
push
movsl
jecxz
dec
mov
loopne
jno
mov
jno
or
fistl
push
imul
sbb
add
pusha
mov
lods
imul
test
cltd
dec
pop
js
or
in
add
sub
fcmovnbe
test
sahf
add
cli
xchg
jle
test
pop
sahf
aas
xchg
and
ss
flds
addr16
push
cmpsb
dec
fdivrs
xor
lcall
dec
dec
jno
dec
std
das
sbb
popa
cmp
jecxz
xor
clc
sbb
sub
sbb
scas
stc
cwtl
push
mov
aad
into
orb
mov
jecxz
xchg
cmp
or
icebp
jle
roll
xchg
push
mov
xorl
jge
add
lock
addr16
in
imul
dec
loope
ljmp
test
mov
aad
or
ret
aas
icebp
cmpsl
add
test
and
outsb
cmp
leave
dec
add
mov
mov
push
pop
lock
cmp
pop
push
aad
pop
movb
sub
add
test
loope
and
hlt
aad
lcall
xchg
mov
push
sbb
dec
push
aam
icebp
dec
mov
inc
cli
pop
scas
mov
fisttps
cmp
add
mov
xor
xchg
cmp
inc
push
iret
cmp
push
xor
dec
enter
dec
push
push
mov
mov
lret
fwait
push
push
adc
and
movd
adc
scas
daa
xchg
lahf
aam
inc
dec
movsl
fs
into
cmpsl
or
fildll
lock
dec
xor
aad
cmp
pop
add
inc
rorb
in
js
clc
test
addr16
iret
test
push
and
and
and
jae
sbb
shr
imul
adc
mov
dec
jl
shrl
lods
xor
sbb
sub
ucomiss
mov
and
xchg
sti
incl
lock
mov
cmpsb
mov
xor
or
lods
jo
jle
mov
das
nop
sbb
push
out
push
arpl
dec
movsl
imull
mov
add
sub
and
push
jle
test
dec
shlb
sbb
nop
mov
xchg
dec
ss
xchg
clc
mov
mov
mov
pop
lds
aaa
popf
sbb
cmp
pop
mov
out
ret
xor
lahf
push
sbb
es
push
mov
sub
inc
xchg
sub
mov
lea
push
mov
xor
sub
add
es
sbb
fsts
sub
adc
push
inc
mov
and
add
inc
xchg
rorb
mov
icebp
cmpsb
xor
shll
cltd
sbb
fst
lods
sbb
mov
add
push
pop
popa
ret
mov
arpl
out
push
push
ret
mov
iret
cs
or
cmc
call
adc
data16
push
fs
call
imul
std
xchg
dec
movsl
test
jne
mov
das
notl
mulb
stos
xor
push
in
rorb
and
xor
push
inc
dec
mov
xchg
ja
negl
mov
jl
out
and
les
test
jmp
mov
sub
xor
rcrb
mov
stos
pop
jmp
xor
cld
js
lahf
push
fsubl
mov
jo
mulb
sub
inc
sbb
jbe
jb
imul
stos
dec
xrelease
in
scas
into
dec
rolb
cmp
cmp
iret
cbtw
lods
rol
mov
ret
or
pusha
and
xchg
cmp
xchg
pop
cmp
jb
in
adc
ds
lahf
mov
pop
call
in
or
sbb
xor
aam
add
mov
adc
jno
xchg
aam
aas
mov
mov
fldenv
push
rol
aas
jns
pop
out
les
sahf
cmc
pop
std
mov
sub
sbb
stos
jnp
aas
mov
loop
adc
cld
stos
insb
stos
cvttps2pi
jle
xchg
cmpsb
cmp
add
add
mov
inc
lods
mov
fcoml
pop
mov
mov
test
sub
arpl
inc
enter
mov
std
or
addr16
jae
repz
out
scas
push
push
xor
into
cmp
jo
rcr
sub
adcl
or
xorl
ret
mov
pop
xor
mov
or
rcll
imul
mov
inc
push
inc
repz
mov
jnp
add
mov
lods
pop
pushf
cld
adc
sbb
sub
aaa
cli
ret
mov
jle
pushf
xchg
out
aad
clc
fdecstp
adc
dec
xor
push
fs
outsl
les
jo
push
repz
aas
sbb
sarb
movsb
xor
scas
add
jmp
xlat
mov
sbb
rorb
cmp
jp
mov
enter
and
cmc
dec
push
mov
xor
lret
push
mov
pop
imul
sti
js
xor
add
sbb
jle
xchg
leave
sbb
loopne
stos
inc
arpl
stos
mov
mov
mov
push
jl
loop
add
sbb
adc
mov
inc
jae
fldt
mov
push
bound
adc
mov
popa
xor
inc
notb
push
sbb
stc
xchg
or
test
sub
and
jo
jo
imul
lcall
xor
mov
mov
pop
scas
xor
push
movb
call
mov
in
or
pop
mov
scas
jne
loope
lahf
push
or
mov
pop
rclb
jmp
jmp
sub
mov
dec
pop
int3
pushf
jecxz
jg
lds
cs
pop
es
cs
cmpl
das
mov
sbb
scas
pop
hlt
outsb
stc
stos
mov
fstl
shll
into
push
cmpsb
mov
ss
jp
pop
gs
inc
mov
cs
inc
inc
fcomp
add
xchg
and
out
jecxz
xchg
cmpl
jg
imul
outsb
inc
ficoml
addr16
mov
movsb
arpl
mov
lea
cmpsb
sarl
jo
pop
test
jl
pop
push
fstps
inc
mov
mov
xchg
out
dec
lret
mov
shr
inc
jmp
shl
push
push
orb
in
mov
cli
lock
dec
pop
xor
inc
add
pusha
cld
cmp
pop
jno
push
lock
jnp
mov
mov
add
push
ja
mov
or
mov
xchg
stos
icebp
andb
sbb
repz
jbe
in
cld
xor
les
int3
mov
jmp
pop
pop
neg
int
sarb
sub
hlt
enter
movsl
stos
push
loopne
ficoml
push
xchg
and
push
inc
inc
pusha
mov
lods
cs
mov
repz
dec
cli
imul
hlt
xor
rorb
sub
jo
movsl
sub
sbb
push
xor
lret
roll
mov
jno
mov
push
lret
dec
loope
fs
add
call
add
add
sbb
js
ja
mov
nop
cmp
dec
gs
cs
mov
xchg
mov
loope
pop
inc
leave
aam
loopne
or
rcl
and
cmpsl
cmp
sbb
ficompl
je
sbb
xor
stc
mov
enter
adc
jns
mov
popa
jae
loope
imul
test
hlt
out
cmp
pushf
mov
mov
push
stos
add
daa
mov
sub
pop
push
shlb
lahf
fdivs
mov
and
in
mov
jle
nop
fs
sub
insb
jae
daa
hlt
movsl
in
push
add
cltd
xchg
or
add
imul
lcall
les
push
adc
add
out
insl
lret
cmp
pop
push
out
sub
xor
and
cs
xchg
aam
cld
ret
pop
fcmove
add
stos
andb
mov
mov
xchg
mov
mov
dec
jb
fidivs
test
add
mull
jb
xchg
push
into
rolb
int3
xchg
xor
imulb
pop
mov
cmp
out
pop
and
sbb
sbb
daa
xchg
xchg
pop
xor
xchg
jge
push
pop
movsb
xchg
sbb
ds
movsb
mov
test
and
les
xchg
lret
push
mov
adc
cmc
add
aas
movsl
or
inc
inc
sbb
xchg
and
inc
dec
sub
push
mov
xchg
cs
pop
shl
rorl
add
add
push
add
or
xchg
mov
addl
sbb
inc
lcall
xlat
std
les
mov
icebp
in
insl
sub
sti
cwtl
aas
repz
mov
into
jo
mov
shrl
inc
sbb
cmpsl
mov
xchg
lahf
mov
stc
std
adc
adc
std
cmpsl
jge
scas
jg
cmpxchg
aad
push
scas
sbb
bound
cld
enter
sub
enter
insl
adc
aam
xchg
lret
daa
loope
call
repz
out
mov
in
in
pop
push
mov
test
adc
and
inc
jno
lcall
loope
mov
xchg
push
sbbl
cltd
rcrb
mov
shrl
sti
testb
lret
mov
mov
sbb
cmp
xor
mov
inc
dec
test
jnp
adc
das
add
outsl
push
imul
sarl
inc
pop
push
int
sub
jle
int
cmp
and
popf
mov
push
dec
rcrl
into
push
movb
add
out
out
pop
bound
jb
cltd
pop
adc
and
cmc
and
sub
push
sbb
fldl
stos
mov
push
push
mov
pop
sahf
cs
xchg
in
xor
out
push
popa
push
dec
sti
decb
add
ror
pop
xchg
xor
inc
xor
out
clc
pop
in
sti
sbb
repz
stc
and
sub
sbb
je
push
jns
push
in
sbb
push
inc
jecxz
jge
into
scas
pusha
cmp
xor
xchg
adc
mov
popf
xchg
repz
cmp
ds
push
daa
push
add
inc
pop
mov
scas
hlt
pop
sub
and
push
xor
das
pop
xchg
mov
xchg
ret
cvtps2pi
lods
shll
and
popa
jo
popf
mov
xor
xchg
je
xorl
lahf
inc
out
orb
mov
and
jp
lret
push
jnp
jb
loope
mov
mov
sbb
out
pushf
mov
fsubr
test
insl
dec
mov
negb
jne
pop
dec
push
dec
gs
std
push
aas
imul
aad
push
jb
mov
adc
leave
in
out
jns
cld
jo
sbb
ljmp
sbb
sbb
mov
mov
insl
repnz
xor
lret
and
xchg
rclb
jo
inc
into
push
fcompl
xchg
xchg
les
sbb
repnz
jo
lea
lea
mov
lret
fistpll
jne
daa
dec
stos
dec
cltd
or
and
push
mov
subl
or
or
ja
sbb
xor
into
mov
sub
push
sbb
fadd
sti
in
pop
pop
out
cmp
mov
mov
push
lcall
jle
sub
ficompl
sbb
jo
push
aaa
cld
ret
das
inc
pop
mov
dec
shr
sbb
sub
sbb
je
cmpsl
push
mov
jmp
ret
cmpsl
push
call
pop
pop
adc
mov
mov
cmp
insb
in
adc
xchg
adc
xlat
add
outsl
adc
dec
jo
xor
repz
cmpsl
push
or
push
xor
cmpsl
int3
lahf
push
sub
push
mov
mov
fildll
rcr
dec
lcall
int3
mov
call
popl
push
mov
movsb
dec
stos
data16
or
std
jb
mov
jb
lret
fbstp
out
int
pop
mov
push
mov
aad
xchg
inc
inc
adc
in
push
out
jo
in
std
aaa
rcrl
lods
mov
add
jnp
pop
fsubl
shl
dec
outsb
or
rcl
push
inc
lods
lahf
stc
lds
scas
test
xchg
push
mov
mov
dec
pop
sahf
loop
xchg
repnz
shlb
add
das
xchg
shr
cltd
in
jl
scas
and
std
pop
cmp
loope
sbb
sbb
dec
add
inc
adc
ret
cmp
inc
and
iret
or
and
add
xchg
orb
mov
gs
push
mov
sti
hlt
sbb
out
cmc
enter
fsts
pusha
loope
add
les
lea
inc
jp
push
mov
fwait
mov
dec
fadds
outsl
push
push
xor
movb
fldl
insb
orl
aam
dec
fstl
mov
popa
pop
popf
cli
add
dec
sub
clc
mov
jle
sbb
mov
arpl
xchg
cmpsb
jl
ljmp
pop
fdivr
out
xchg
xchg
jae
jle
xor
add
ret
adc
iret
daa
cmp
push
cmpsl
sbbb
adc
cltd
bound
pop
mov
mov
jae
lock
cmpsb
add
call
add
test
imul
pop
mov
xchg
fisubs
dec
iret
adc
and
int3
jo
xchg
sahf
inc
in
fs
shlb
repz
add
push
push
or
push
sub
xor
and
dec
nop
sub
mov
out
popf
inc
xor
push
add
cmpsb
call
pop
daa
xchg
xchg
jnp
cmpsl
imul
test
andb
and
subb
push
mov
js
mov
mov
je
lods
call
and
inc
data16
out
cmp
jne
in
jno
mov
loopne
mov
fisttps
adcb
das
sbb
cmp
mov
xchg
loopnew
incb
xor
insl
jmp
cmp
add
xchg
je
scas
sbb
pusha
mov
push
dec
imul
gs
lret
xlat
mov
mov
repz
nop
fcoms
popf
jg
sbb
sbb
cmovno
inc
xchg
mov
lahf
jne
adc
or
out
xor
xchg
pop
jge
cmp
inc
xchg
dec
push
cmp
hlt
imul
mov
rcll
or
xchg
pushf
adc
seta
inc
sbb
mov
cmp
inc
and
mov
iret
mov
jbe
jecxz
push
xor
or
cld
pop
jge
mov
sti
ficompl
and
ljmp
in
cmp
adc
cmp
or
pop
jae
mov
pop
lret
mov
pop
add
inc
xchg
mov
inc
mov
xchg
das
mov
xchg
pop
pop
js
sbb
imul
pushf
cmp
cmp
pop
mov
das
or
or
idiv
adc
add
cmpsl
iret
cmc
inc
jl
mov
das
imul
jg
dec
jno
mov
add
mov
cmp
pop
out
sub
dec
ret
sbb
lret
inc
jmp
jp
push
imul
xchg
ds
cmp
sarb
sahf
mov
loopne
pop
pop
ret
push
sub
sub
adc
sbb
lods
push
lret
jecxz
sub
and
hlt
addb
jle
mov
dec
popa
jp
mov
xlat
out
dec
and
movsb
sarl
cld
shlb
daa
jg
jge
daa
cmp
dec
push
sarl
push
out
dec
call
ret
negb
sbb
pop
mov
fidivrl
inc
inc
pop
stc
mov
pop
pop
jno
push
mov
ret
test
sub
inc
stos
jne
dec
lret
xchg
enter
sti
cmpl
mov
cli
and
call
fists
sub
push
xor
xchg
xorb
push
fnsave
add
dec
insl
xor
cltd
xchg
icebp
ljmp
shr
repz
ret
scas
push
ficoml
lahf
cmp
mov
aaa
imul
xor
adcb
xor
int
shlb
inc
mov
cwtl
mov
xchg
push
notrack
or
push
bound
mov
pop
pop
mov
fwait
push
rcrb
fists
dec
outsb
aad
fimull
rcl
adc
jle
call
jae
adc
or
sti
mov
lods
mov
fcomps
or
push
dec
jns
cmp
and
dec
fxch
jne
add
repz
outsb
sub
imul
and
add
dec
stos
adc
sbb
push
hlt
add
orl
inc
jp
and
xor
dec
subb
dec
push
jae
dec
jmp
jo
dec
cmc
sbb
mov
out
xchg
add
icebp
stc
lahf
ret
mov
push
movsl
pop
push
inc
cs
loope
cli
or
push
cmp
ljmp
movsl
bound
lahf
or
xchg
or
icebp
lods
pusha
rclb
lods
in
inc
sar
andl
pop
shll
and
inc
inc
popf
and
or
addr16
jb
fimuls
aas
add
pop
insl
test
mov
cmc
inc
mov
cli
int
inc
sbb
in
dec
sbb
lahf
daa
mov
and
push
jp
aad
popf
mov
subl
pop
addr16
rorb
dec
xchg
scas
mov
cltd
pop
xor
sub
xor
rcrl
inc
jno
dec
mov
test
data16
fcmovnu
inc
fs
into
push
mov
insb
and
subl
imul
sbbb
pop
add
aas
lods
pushf
sbb
dec
jnp
out
bound
cli
cli
lock
mov
dec
or
sbb
dec
outsl
jnp
jl
xchg
lds
inc
btr
in
jae
mov
test
pop
dec
fidivl
xor
enter
push
adc
dec
mov
out
pusha
mov
out
mov
movsl
ret
xchg
xor
nop
into
jb
or
scas
pusha
aas
adc
mov
int
inc
mov
lods
out
dec
mov
pop
out
dec
out
js
jbe
mov
add
call
addl
mov
lahf
mov
test
cs
aam
test
adc
fwait
add
sahf
push
stos
lock
add
daa
mov
lahf
cmp
pop
xor
orl
out
hlt
xchg
xchg
add
cmp
out
enter
adc
mov
in
sub
loop
test
daa
mov
xchg
icebp
push
int3
jcxz
and
aam
jge
js
hlt
xor
mov
xchg
xchg
cltd
mov
addr16
subl
sub
sbb
xchg
cmp
mov
int3
ret
or
movsb
mov
sahf
ja
lock
arpl
imul
xchg
cmp
popf
sub
jae
in
sub
pop
mov
push
ljmp
push
mov
push
fdivrs
and
andl
mov
sbb
mov
in
adc
je
pushf
popa
dec
xchg
lds
dec
pop
in
cld
fisubl
sarl
adc
xchg
xchg
jae
ja
pop
dec
pop
aas
fdivr
push
stc
aad
dec
cmp
mov
js
into
or
sub
stos
or
outsb
mov
ret
fidivs
push
enter
pop
inc
or
inc
mov
adc
pop
jne
jmp
lcall
test
cmp
dec
sti
sti
fistpll
addr16
push
cs
sub
pop
add
mov
bound
dec
aaa
mov
fs
test
lea
cltd
jno
out
jmp
pushf
push
ss
push
enter
inc
push
test
stc
dec
adc
ret
mov
mov
or
jo
mov
push
std
popf
mov
push
mov
sbb
int3
shrl
cmpsb
or
cs
inc
movsl
out
stc
pop
cli
mov
inc
and
push
fwait
inc
sub
out
les
mov
adc
inc
add
pusha
pop
mov
jns
faddl
popf
arpl
aam
lret
push
call
xchg
aam
push
push
jl
jmp
leave
pusha
out
outsb
fnstcw
xchg
imul
xchg
mov
fprem1
fdivp
mov
test
mov
test
fimuls
cmp
pop
negl
mov
out
push
push
add
or
in
mov
loopne
jo
lds
fbstp
cmp
aam
mov
out
pop
ss
sarb
cmp
inc
je
fldcw
sub
mov
mov
das
pop
push
std
push
add
inc
pop
sub
push
pop
mov
xchg
sti
mov
aas
outsl
mov
or
repz
push
arpl
cld
xchg
push
inc
enter
xchg
jmp
lcall
aam
bound
gs
aad
pop
lret
jnp
ja
xor
aam
jecxz
pop
xchg
pushf
xchg
dec
ja
mov
lds
and
mov
les
shlb
inc
dec
sbb
sti
push
inc
test
xchg
inc
pop
loop
add
scas
call
into
push
inc
loope
ja
mov
mov
or
lcall
frstor
insb
addr16
enter
test
sbb
cmp
or
push
outsl
pop
xchg
lods
int
dec
gs
repz
cmp
sbbl
orl
sub
sbb
jae
sub
out
js
mov
cmp
cs
cmp
mov
lods
ss
xchg
cs
repz
lcall
sbbl
or
repnz
outsb
movsl
cmp
jb
aas
das
outsb
mov
clc
lret
cmp
in
dec
into
sbb
mov
repnz
dec
adc
ret
pop
sbb
pop
mov
and
arpl
mov
cmp
imul
iret
filds
jle
test
and
push
imulb
pop
adc
dec
shlb
add
mov
addl
pop
jno
jge
test
push
sub
xchg
bound
push
ficoms
pop
add
sahf
sub
push
scas
outsb
and
pop
cmpsl
pop
pop
ss
jmp
inc
ret
fsub
mov
cmpsb
outsl
in
es
adc
dec
adc
xor
sbb
push
movsb
xchg
dec
in
mov
lahf
stos
mov
pop
mov
rorl
mov
inc
push
icebp
es
xlat
xchg
add
sub
push
and
sub
cmpsb
mov
outsb
inc
and
sbb
sub
out
insb
dec
mov
xlat
loope
push
std
mov
int
mov
notb
push
push
cltd
shlb
sub
into
lret
aaa
cmpsl
fldcw
insl
sbb
sbb
cmp
movsl
sbbb
mov
jnp
jg
ret
or
xor
in
ficompl
daa
mov
mov
lret
and
ds
aas
ret
xchg
popf
cli
negl
mov
and
sbb
and
adc
dec
sub
cmc
pop
test
adc
mov
push
pop
stc
xchg
into
imul
fs
push
outsl
bound
xor
sub
jne
cwtl
test
dec
xlat
loope
cmpsl
jnp
mov
adc
mov
xor
pop
aaa
or
mov
ret
repz
mov
mov
mov
adc
test
inc
loope
xor
inc
or
cld
jo
or
pusha
imul
daa
arpl
add
xor
andl
data16
scas
bound
inc
ret
stc
fmull
imul
pop
dec
pop
or
mov
int
bound
inc
mov
fs
push
sub
xlat
in
sti
pushf
pusha
or
std
adc
xchg
fisttpl
xchg
out
xchg
popf
cmpsb
mulb
xor
fsubrs
sbb
insl
cli
xor
int3
or
lea
icebp
or
xchg
jg
push
adc
popf
mov
or
or
jmp
bnd
add
add
adc
pop
shl
add
add
mov
popf
ja
cmpsb
lea
jb
inc
add
nop
adc
icebp
and
sbb
inc
lret
movsl
adc
and
mov
sbb
push
rolb
xchg
adc
shrl
mov
ds
out
ja
cwtl
add
decb
ret
mov
and
sub
cmp
push
push
ret
ja
mov
adc
clc
or
pop
mov
pop
pop
or
loop
xchg
out
cltd
outsl
outsl
push
shl
jns
out
cmpsl
mov
sbb
and
lods
and
mov
sahf
cs
daa
test
push
adc
xorb
scas
aaa
add
inc
enter
add
xchg
fistpll
repnz
push
inc
pop
loope
imul
sbb
push
xor
add
int
cmp
inc
out
jb
into
dec
push
fisubrl
push
xor
into
cmp
sahf
aad
rorb
sbb
sbb
pop
and
cmp
addl
pushf
mov
sub
repnz
push
or
test
stos
aad
daa
sub
cmp
jnp
arpl
pop
outsb
xor
adcb
sbb
jno
cltd
xor
hlt
sub
dec
sahf
stc
test
aam
cmc
fwait
dec
and
mov
fs
and
subl
pop
inc
xor
xchg
pop
dec
in
shll
popf
pop
nop
sahf
mov
pop
xchg
push
and
sub
sbb
xchg
push
int3
std
in
xlat
bound
and
test
sbb
cs
push
jno
daa
lret
inc
aad
dec
mov
jl
mov
xor
sub
xchg
inc
pop
cmc
lret
repz
mov
or
jl
frstor
fcoml
iret
xchg
popf
mov
sbb
dec
int
dec
add
adc
jecxz
or
add
mov
cmp
or
aaa
xlat
xchg
push
mov
sub
lods
rcr
cmp
ftst
fdivrl
and
jo
mov
rcrl
jmp
imul
daa
lock
push
cld
and
mov
out
in
mov
test
xor
sti
sbb
add
mov
loope
outsl
push
repz
sahf
idivl
push
pop
outsl
fistpll
rorl
adc
test
imul
shll
cld
jno
aam
dec
negl
jae
and
and
arpl
rcll
xlat
loopne
test
jle
inc
cmp
popa
mov
mov
out
adc
push
jp
mov
inc
push
sbb
pop
mov
test
rolb
bound
popa
sub
aas
or
push
hlt
or
xchg
push
add
fnstenv
and
and
insl
push
mov
jecxz
xlat
in
gs
push
mov
stc
mov
fidivl
push
sbbl
push
jge
push
pop
imul
pop
mov
jecxz
add
sbb
jo
sahf
loope
sbb
dec
xlat
iret
jl
cmp
push
mov
repz
call
xchg
pusha
pop
lret
dec
cmp
mov
and
sub
and
lods
and
mulb
mov
pop
mov
aam
cmc
test
dec
dec
les
ret
push
and
xchg
pop
sbb
jp
cmpsb
out
lock
cltd
sar
or
add
dec
mov
rorl
jne
push
xchg
cld
cmc
popa
push
inc
cmp
pop
jle
cli
mov
cmp
das
rcl
out
adc
insl
das
pop
xchg
and
pop
gs
idivl
lahf
std
push
insl
xor
push
shrl
es
lcall
adcl
shr
popf
mov
stos
roll
cmp
out
mov
sub
push
add
mov
test
inc
xchg
sub
sub
mov
pop
xchg
out
adc
jne
mov
fdivrs
lcall
fistpl
inc
inc
jnp
test
push
pop
xchg
insl
or
sbb
pop
outsb
jbe
je
pushf
jns
out
push
pop
xorl
cli
aad
pop
sub
jno
lret
add
xchg
pop
sub
insb
loop
jg
jb
nop
aas
cld
mov
cmp
fld
andl
loop
scas
call
pop
inc
lock
push
icebp
sbb
pushf
mov
aaa
or
scas
lds
cmp
adc
mov
or
pop
jecxz
mov
jne
sahf
dec
mov
xor
pop
and
jecxz
in
xor
fistps
push
push
add
xchg
shlb
outsl
cmp
adc
xchg
dec
mov
lods
xchg
orl
mov
jae
xchg
inc
sub
mov
push
pop
jge
mov
movsl
fwait
sbb
fnsave
insb
xchg
jge
ss
mov
xor
arpl
sahf
dec
adc
out
adc
cmp
roll
lea
in
cmc
and
outsl
loopne
sub
pop
jb
mov
insb
xor
movsb
cmpsb
fsubrl
aaa
and
mov
shll
js
clc
faddl
mov
nop
dec
and
jle
imul
loope
in
dec
mov
loope
or
jo
mov
lret
sub
outsl
mov
rorl
or
aas
xor
pushf
repz
insl
cmp
add
fidivl
aaa
or
sub
pop
mov
lret
pop
mov
iret
es
push
pusha
test
push
fdivrl
jne
mov
ss
hlt
mov
mov
jo
out
fwait
jl
cmpsl
pushl
adc
and
outsb
xchg
mov
mov
lds
scas
insl
fwait
jo
lea
inc
sub
sbb
push
cmp
pop
adc
aas
mov
idivw
lret
pop
loop
adc
decb
popf
mov
pop
lahf
rorw
xchg
mov
movsl
out
outsl
out
pop
sub
dec
jns
xchg
in
mov
sub
dec
push
dec
push
add
test
and
or
lret
mov
ss
shrl
shll
jmp
jmp
lahf
imul
icebp
mov
scas
fs
lret
add
mov
insb
loop
xchg
sbb
cmc
jns
rcll
xchg
loopne
call
mov
xor
pop
popf
push
mov
cltd
jno
pop
les
ja
ss
cwtl
mov
push
lahf
fsubl
aam
js
les
xchg
aad
loop
lret
aad
inc
push
out
fs
lods
xor
or
arpl
mov
cmp
push
adc
negb
movl
out
or
vmread
fisubrl
xchg
dec
les
sub
test
and
in
sbb
cmp
mov
jne
rcr
cmc
sub
push
sahf
jnp
mov
cmc
fstpl
dec
dec
mov
push
in
jmp
mov
mov
aaa
xchg
or
ffreep
fcompl
mov
inc
xor
addl
mov
mov
lret
arpl
pop
adc
jmp
and
sub
inc
scas
out
idivb
jbe
push
inc
cmpl
test
sbb
in
test
ja
pop
adc
mov
out
inc
pop
push
loop
idivb
and
mov
mov
and
mov
ss
cs
dec
lock
mov
fwait
sbb
adc
sub
xor
jno
mov
mov
mov
pop
outsl
sub
jae
fsubrl
push
clc
scas
cltd
mov
sbb
xor
cmp
sub
fcoml
adc
inc
rorl
mov
or
insb
arpl
orb
and
jnp
xchg
xchg
lcall
fadds
cmp
ds
or
adc
jo
lret
pop
mov
adc
and
push
inc
cmpl
jg
lea
mov
sbb
subl
push
jmp
adc
sbb
int3
mov
xchg
mov
adc
rol
fstps
test
and
sahf
pusha
xor
test
xchg
push
stos
jp
and
out
mov
mov
outsb
shlb
sbb
fisttpl
nop
mov
xor
popf
jo
sbb
dec
push
push
push
jg
movsl
pop
inc
ja
xor
test
cwtl
jecxz
pop
icebp
enter
out
enter
cwtl
shll
int3
adc
in
data16
sub
adcl
add
rorl
testl
dec
xchg
orl
mov
mov
popa
es
xchg
enter
into
dec
xor
ret
dec
pop
test
adc
jns
jp
fucompp
addr16
mov
push
cs
cmc
outsb
arpl
mov
jl
mov
aad
xor
das
aas
movsl
xor
mov
push
mov
frstor
ficomps
sti
sub
mov
and
mov
xchg
adc
jecxz
sub
jo
dec
xchg
push
js
or
nop
popa
mov
dec
das
sti
dec
test
mov
leave
xchg
jge
xor
xor
fs
jmp
aaa
daa
lea
mov
insb
add
sub
mov
into
incb
sub
xchg
in
xor
scas
mov
aaa
mov
lods
ss
inc
roll
test
jg
outsl
jle
dec
cld
jmp
push
and
mov
mov
loope
xchg
data16
jns
add
imul
pop
aaa
add
push
nop
outsb
xchg
push
test
mov
jne
out
mov
lods
jmp
call
shr
mov
sub
jb
cmp
fimull
lcall
lret
push
xor
andb
ja
cmp
xor
scas
cli
xor
dec
jne
mov
insl
std
pop
icebp
xchg
rorb
mov
incl
dec
adc
lahf
dec
push
je
sbb
or
sti
dec
push
cmp
sar
aas
xchg
cmpsb
out
mov
cli
testb
popa
outsb
jle
jg
or
loopne
xor
mov
or
out
pop
pop
jmp
mov
or
aaa
xor
dec
or
or
push
ss
call
cmovns
push
ret
popf
jge
fadds
cmc
pop
cli
rclb
test
scas
jecxz
out
aad
jae
dec
inc
xchg
out
inc
mov
pop
icebp
dec
xor
sub
loopne
inc
das
sub
jge
hlt
pop
jle
xlat
and
inc
je
jbe
pop
mov
and
repnz
xor
fwait
or
inc
fadd
out
sub
insl
in
fcmovu
int3
xchg
mov
push
test
add
xchg
in
iret
pop
or
iret
into
add
add
mov
push
inc
mov
pop
call
push
iret
sbb
inc
push
ljmp
sahf
push
gs
movsl
inc
mov
jmp
fiadds
popa
push
pusha
mov
push
xor
xchg
iret
loope
dec
mov
aaa
fstpt
aaa
minps
rcrb
std
adc
jno
mov
mov
mov
xlat
iret
inc
mov
mov
mov
push
sbb
sbb
pushf
jmp
push
sub
jle
ror
in
stos
pop
std
shll
addb
xchg
ja
dec
dec
mov
mov
inc
dec
sub
jecxz
mov
pushl
pop
pushf
fucomp
jne
shlb
xor
addr16
loopne
mov
lret
xor
push
insb
cmp
mov
hlt
addr16
jae
pop
mov
mov
dec
fsts
add
pop
addb
ljmp
les
adc
outsb
or
fs
iret
clc
pop
inc
and
int3
lahf
dec
fbld
lret
fstps
inc
mov
push
aaa
aad
call
xor
jns
xchg
andl
mov
xchg
jmp
ds
or
xor
mov
fld
push
xor
cltd
cmpsl
sbb
pop
sar
flds
out
xor
call
mov
ds
shr
xchg
mov
and
enter
cwtl
ljmp
xor
or
jle
jl
cld
arpl
xor
mov
inc
cmp
stos
out
sub
push
pop
sbb
test
repz
mov
sub
lret
xorb
cmp
dec
mov
sbb
jno
or
fldl
push
jge
pushf
in
mov
xor
mov
pusha
pop
sbb
pop
fdivr
imul
cli
outsb
push
setge
sub
test
pop
add
mov
sbb
xchg
lock
mov
and
shrb
es
jne
aam
cld
or
dec
imul
lcall
fldt
bound
pop
mov
js
mov
rolb
fwait
or
mov
shll
cmpsb
fidivs
dec
int3
pop
mov
mov
mov
add
ss
ret
sbb
mov
mov
outsl
repz
push
aas
jns
mov
sbbl
inc
leave
add
test
pop
mov
cmpsl
sti
mov
lcall
xchg
mov
dec
adc
scas
lea
sub
sub
mov
cld
nop
subl
int
pop
ss
cld
inc
add
adc
pop
sar
push
movsl
rcr
mov
js
lds
int
out
cmc
jns
dec
mov
cmp
lret
fstpl
jno
push
cltd
movsb
dec
sbb
insl
adc
inc
mov
js
add
mov
pop
push
adc
and
shlb
outsb
pop
and
jns
xor
test
xchg
stos
lds
xor
xchg
adc
sub
mov
lea
ljmp
rolb
ret
cld
pop
dec
sti
cs
mov
es
jns
stos
sub
and
dec
push
xchg
push
add
adc
test
xchg
push
out
neg
scas
ds
int3
lahf
pop
iret
nop
mov
out
test
pop
stc
stc
test
mov
mov
out
inc
ljmp
mov
lret
scas
arpl
sbb
ficoml
jnp
inc
sbb
mov
lret
lods
cmp
ja
jmp
movsb
jae
push
out
dec
mov
jne
in
pushf
cmc
cwtl
clc
cmpsl
in
popa
insl
adc
ret
mov
hlt
and
clc
es
leave
mov
test
cmp
cld
push
sbb
rcll
sbb
out
inc
loop
ss
popa
jne
pop
pushl
ds
jnp
mov
mov
mov
pslld
lret
imul
xor
sub
dec
dec
lret
mov
sub
xor
push
jmp
fisubs
push
test
jae
mov
cli
test
test
jecxz
and
icebp
je
push
cmp
sbb
iret
cs
xchg
jne
sub
ljmp
xor
std
popf
hlt
mov
and
jge
repz
jmp
xchg
leave
repz
adc
inc
das
xor
cmp
pop
icebp
std
adc
test
sub
mov
loop
das
add
fnstsw
xor
rcr
sti
bound
xchg
xor
mov
cmp
push
xchg
insb
pop
dec
push
fldt
mov
dec
lods
mov
mov
sub
pushf
imul
dec
inc
pop
fbld
sub
adc
dec
test
push
test
pusha
mov
rcrl
xchg
inc
mov
inc
pop
dec
or
mov
xlat
test
fcmovu
mov
data16
rcll
fsubrl
icebp
jmp
std
dec
lods
inc
out
clc
shrb
in
mov
sub
or
cmp
and
xor
mov
push
sbb
hlt
xor
popa
pop
fldt
xor
mov
repnz
ret
and
and
or
jmp
adc
and
loope
stc
popl
decb
jo
arpl
sub
xchg
xor
ja
mov
popa
loope
add
stc
xorl
rcll
xor
xchg
jg
and
pop
clc
mov
adc
popa
push
and
or
dec
enter
xor
sbb
out
test
scas
push
fdivr
push
cmpsl
xchg
push
cmp
adc
fdivrp
rcrb
dec
jo
pop
cwtl
lods
jmp
jno
fs
and
dec
sbb
xor
icebp
insb
andb
loop
call
test
sbb
test
imul
bound
lods
xor
jb
mov
mov
inc
pop
frstor
xchg
jp
dec
outsl
fsub
fnstenv
pop
sahf
je
jmp
push
add
das
and
jae
dec
out
add
or
fistpl
and
sbb
lds
jecxz
xchg
in
shlb
loope
sub
dec
idiv
sub
repnz
lahf
nop
dec
gs
xchg
inc
fwait
repz
cwtl
ljmp
xchg
test
dec
cmpsl
mov
xchg
push
and
xchg
xor
jle
imull
dec
ficompl
lahf
movsb
jmp
in
pop
sub
jle
mov
imul
xchg
roll
vmovq
push
cmp
int3
adc
imul
or
jle
popa
mov
push
push
sub
aam
cwtl
jl
rorl
jp
out
adc
sahf
add
xor
sbb
push
dec
add
jo
addb
ljmpw
in
loop
xchg
mov
inc
test
inc
add
push
jns
push
mov
mov
movsb
mov
inc
scas
popf
dec
jecxz
lahf
sub
cmp
mov
movsb
xorl
push
repnz
cld
mov
mov
bound
sbb
stos
mov
rcrl
out
test
mov
int3
pop
sub
mov
mov
jmp
push
pushaw
lds
cmp
and
pop
pop
push
cmp
imull
sub
sahf
add
popa
clc
popf
es
jecxz
mov
movsl
rcrl
das
aas
rol
pop
rcrb
inc
mov
hlt
nop
push
arpl
mov
test
jb
fstps
inc
roll
xchg
inc
insb
mov
cmp
sub
lret
mov
movsb
mov
cmp
mov
movsb
das
add
pop
xchg
fwait
sarb
adc
push
xor
jl
push
loope
int3
cmpsl
shlb
lcall
sahf
pop
lret
or
ja
fdivl
jge
in
in
call
lods
pop
push
into
and
add
push
push
lock
dec
fcomi
push
or
ja
sub
outsl
pop
into
loopne
and
adc
mov
pop
sub
adc
push
enter
or
ror
lret
xor
sub
into
loop
mov
in
into
orl
fisttps
daa
ret
cmp
pop
scas
or
mov
cmp
add
push
lods
cmpsb
addr16
xor
add
rorb
gs
dec
cltd
xor
mov
push
outsb
xchg
pop
lcall
inc
cmp
push
mov
fs
jge
je
push
sub
sbb
jmp
arpl
repz
or
pusha
lds
sub
xchg
lcall
out
adc
push
addr16
das
cmp
jae
jne
fsubrl
mov
cwtl
push
leave
fucomp
xor
out
lods
imul
out
sub
inc
push
push
jp
loopne
xor
and
mulb
imull
xchg
jl
out
push
mov
push
add
stos
fs
in
inc
pop
dec
mov
out
addr16
cmp
std
repnz
jl
out
cmp
cmp
sub
sub
int
fcoml
ret
jb
cltd
lahf
push
inc
or
test
pushl
pusha
jne
out
cmpsb
aam
std
inc
sbb
jae
repnz
push
fnsave
pop
dec
sbb
cltd
in
adc
jo
daa
and
pop
neg
xor
mov
fadds
dec
fs
add
mov
mov
or
movsl
jnp
inc
test
ljmp
add
fcomps
in
cmpsb
push
scas
cmp
call
lahf
cmp
fildl
mov
out
dec
and
pop
mov
outsl
sbb
inc
sbb
hlt
or
fldl
inc
movl
shll
mov
mov
cmp
lahf
popf
leave
cs
loopne
out
add
xchg
into
jmp
inc
add
cmpsl
cmp
jg
xor
push
sbb
fdivrl
mov
stc
xor
mov
int
push
mov
pop
inc
add
lahf
les
sbb
push
push
scas
inc
sahf
andl
mov
mov
cmc
out
mov
popf
repz
mov
inc
insl
fsubl
jbe
push
xor
and
and
js
ljmp
ficoml
ficompl
scas
sub
sbb
ror
call
fiadds
mov
adc
sahf
adc
xor
sub
ds
or
popa
mov
test
cltd
mov
push
jo
js
aad
je
data16
orl
inc
fsub
sbb
mov
rorl
aas
jl
cltd
out
add
sti
adc
gs
cmp
cmc
inc
jbe
dec
push
es
aam
push
push
int
das
jmp
fisttps
cmpsb
cli
mov
dec
das
das
fdivl
mov
inc
rcrb
popa
aad
xor
xchg
js
addl
sbb
loopne
sbb
xchg
sub
shrb
mov
mov
gs
mov
mov
cltd
sarb
push
dec
iret
in
in
fbstp
data16
daa
fisttpll
cmc
loop
sub
push
out
lds
sub
js
rep
daa
jo
sarb
insb
dec
in
orl
sub
mov
sahf
xchg
xor
out
lods
mov
push
loope
inc
loope
je
xor
movl
pop
imul
inc
mov
out
pop
mov
add
js
sbb
inc
mov
rcrl
fsubp
int3
lret
sbb
nop
pop
push
xchg
xor
inc
pavgb
pop
leave
add
dec
mov
loop
add
into
leave
cs
xlat
dec
xor
mov
out
and
loopne
loopne
cmp
addr16
pop
test
mov
ljmp
push
lds
pop
ret
cmp
jle
insb
inc
test
fsubrl
out
and
jl,pn
fnsave
sub
stos
push
xor
add
out
pusha
call
lds
adc
aam
lods
inc
mov
xorb
aad
push
sbb
and
movsl
mov
mov
dec
xchg
jmp
mov
stc
sub
mov
pop
xchg
call
out
out
dec
sbb
loope
push
gs
push
or
inc
popf
scas
jmp
cmp
mov
sbb
notl
cmpsb
inc
mov
bound
jle
add
lcall
rcll
cwtl
cld
push
pop
pop
jne
pop
cwtl
jne
sub
aam
in
sti
adc
in
jg
pop
sarl
sbb
mov
xchg
mov
sbb
into
cmpsl
pop
cltd
xchg
imul
jge
pop
add
addr16
gs
jg
xchg
fwait
in
mov
jmp
ds
insl
nop
jmp
test
pop
rcrl
aaa
inc
pop
cltd
sti
shrl
lods
xchg
add
push
inc
repz
push
repz
mov
jg
add
jo
jp
and
icebp
cmpb
pushf
lods
and
cmpsl
clc
pop
pop
xor
pop
pop
je
xor
mov
xchg
add
xchg
hlt
xchg
fcomip
or
testb
aad
and
and
scas
jmp
sbb
pusha
xchg
push
in
xchg
das
xchg
xchg
ljmp
outsl
mov
mov
add
cmc
cmpsl
cmpsl
and
add
dec
sbb
mov
data16
scas
and
cmpsb
cmp
pusha
sbb
movsl
es
jno
aaa
jmp
and
in
mov
std
jmp
ret
loopne
imul
and
adc
mov
adc
and
mov
fucomp
inc
dec
jns
pop
gs
push
lods
mov
push
aad
cmp
insb
test
pop
xchg
xor
inc
cmp
jbe
xor
push
add
lds
cmp
dec
loopne
shll
fwait
and
int
jae
in
fisttpl
pusha
cmp
lea
push
fsub
loopne
mov
pop
inc
orb
bound
adc
pop
sbb
in
sahf
and
dec
gs
or
xchg
aad
lods
sbb
add
leave
mov
out
js
enter
add
and
jno
and
mov
mov
unpckhps
adc
popl
and
sbb
xor
dec
loope
icebp
out
cmp
ret
aas
add
int
jnp
mov
and
inc
add
movl
mov
xor
pop
fadds
negl
push
sub
scas
jno
push
pusha
mov
inc
xor
cmp
push
and
pop
dec
fs
dec
repz
lods
rcll
add
push
jp
sbb
scas
add
inc
jno
push
fidivl
push
into
push
or
ljmp
xchg
xchg
xor
out
add
cmpsl
push
lret
sub
sbb
mov
sub
imulb
jbe
fldl
push
pushf
das
adc
mov
in
addr16
dec
mov
and
sbb
jle
imul
sahf
jo
dec
ficomps
jle,pt
inc
cmp
cltd
daa
xchg
push
mov
loop
fsubr
sbb
xchg
popf
sbb
sub
cmp
jle
inc
shlb
rorb
ds
popa
lret
aad
sbb
fadds
fists
pushf
daa
or
jns
mov
test
inc
cwtl
imul
jmp
or
push
dec
sub
mov
push
inc
jle
jo
popf
pop
mov
loop
mov
adc
lods
and
insl
in
cmp
shl
sbb
test
lock
movsb
inc
js
xor
dec
lret
cmc
dec
data16
into
or
xchg
jns
fs
enter
jne
push
add
pop
std
push
push
test
or
jb
out
jbe
adc
pop
mov
in
adc
cmp
rorl
pushf
sbb
out
js
pop
adc
lret
mov
jmp
push
push
test
add
outsb
add
rorb
sbb
int3
mov
scas
iret
js
in
push
push
mov
mov
out
daa
insb
inc
mov
inc
out
jne
inc
jg
xor
adc
es
bound
inc
mov
out
xchg
enter
ja
cltd
jae
pop
and
outsl
scas
jns
mov
roll
in
mov
pop
in
jbe,pn
and
stos
xchg
pop
test
adc
stos
pusha
mov
out
push
xchg
mov
push
mov
sbb
cltd
pop
adc
push
ss
xlat
mov
sti
xchg
dec
arpl
mov
mov
mov
lock
sub
sbb
sbb
and
fildl
sub
cmpsl
loope
rolb
xorl
xchg
lods
push
xchg
clc
dec
loope
es
inc
outsl
lea
add
movsb
shl
inc
mov
in
dec
cltd
lahf
icebp
sub
fdivrl
dec
popl
mov
out
mov
mov
fsubl
aad
push
xchg
jg
je
jbe
push
fcmovbe
movb
decb
mov
jecxz
push
or
lods
pop
push
bound
sbb
push
sbb
scas
jl
mov
repnz
or
cs
or
xlat
ss
mov
outsb
loopne
pop
add
jmp
ss
cli
sbb
sub
xchg
into
pop
push
in
or
jmp
popf
push
mov
or
lcall
jp
cld
in
divl
out
lods
imull
in
enter
jb
or
pop
jo
add
jg
push
jg
xor
sub
mov
decb
cld
sub
test
inc
and
pop
or
mov
inc
push
in
xor
adc
in
mov
lret
push
push
ja
jo
jge
adc
xlat
jp
cmpsl
xchg
das
mov
push
int
sbbl
shll
push
data16
fdivrl
bound
call
xor
aas
pushf
cwtl
orl
aam
push
push
or
dec
aad
jg
xchg
inc
push
in
mov
test
pop
je
arpl
mov
aam
outsb
insl
jo
push
xchg
sub
cld
add
sbb
cwtl
cmp
add
xor
lret
sbb
jl
xor
jae
mov
jb
orl
dec
add
add
clc
jmp
cltd
leave
xor
xor
push
test
mov
dec
jecxz
cmp
popf
ds
mov
into
insb
call
pop
adcl
and
add
and
pop
int
test
out
dec
aaa
pop
int
decb
cltd
andb
repz
mov
cmpsl
pop
push
jge
pushf
gs
rcr
push
xchg
pop
push
int
je
sbb
shrl
bound
jp
lahf
jle
push
inc
cmp
dec
mov
icebp
nop
bound
lods
clc
xchg
push
loopne
stos
imulb
out
add
mov
jecxz
jno
jp
sub
mov
jg
test
or
mov
leave
jns
out
adc
or
rorb
ficomps
xor
fimull
jb
mov
inc
cmc
jle
cli
xor
inc
xor
jne
stos
pusha
xchg
and
imul
add
rclb
fldl
ds
xchg
sbb
ss
mov
jecxz
push
pushf
les
sahf
mov
mov
sub
xchg
xchg
clc
popa
pop
icebp
xor
aam
jnp
nop
xorl
movb
push
mov
ffree
and
lods
or
push
lds
shll
dec
cmp
mov
lds
jge
and
hlt
lods
adc
xor
shlb
inc
adc
and
adc
push
in
mov
jo
int3
adc
pushf
or
fisubl
push
test
into
data16
pop
lods
out
xor
pushl
adcb
insb
or
cli
xlat
orb
fbstp
and
in
adc
push
push
sub
in
pop
jae
mov
sbb
imul
and
ja
cmpsb
aaa
sub
and
imul
in
xor
bnd
aam
faddp
xchg
xor
or
loope
aas
sbb
inc
cmp
jmp
push
data16
mov
push
jns
pop
mov
add
rorl
mov
and
imul
pop
mov
xor
int3
pushf
lret
add
mov
aad
jle
xchg
aas
cmpsl
das
pop
imull
pop
cmpsb
in
inc
mov
cmp
sbbl
and
mov
test
inc
das
nop
test
mov
push
pop
bsr
mov
pop
sub
push
repnz
hlt
sub
cmpl
push
cmp
pop
sti
stos
sub
mov
push
adc
in
addr16
add
cmp
sbb
jge
add
in
xchg
shrd
inc
bound
scas
dec
imul
jbe
mov
fldt
and
dec
add
mov
sbb
out
add
out
mov
push
fnstenv
pop
cmpsb
andb
dec
mov
dec
loop
shr
loope
mov
sub
dec
pushf
cmpsb
mov
or
mov
mov
xchg
mov
jno
shlb
pop
fwait
into
dec
xor
imul
fs
add
jno
repz
lret
js
dec
aam
or
addr16
xchg
ret
xchg
mov
or
movsbl
dec
sbb
in
sub
mov
lcall
stc
insb
jno
aad
pop
xor
push
jns
dec
gs
sbb
cmp
pushf
clc
cmpb
cmp
inc
add
test
jns
sub
shll
cmp
inc
pop
push
xchg
mov
mov
cli
rcl
sub
lcall
insb
add
mov
in
arpl
and
jae
outsb
mov
fucomip
dec
nop
call
sub
mov
pushf
movl
fiaddl
les
repnz
das
cmpsb
outsb
push
aas
aas
sbb
cmp
mov
js
nop
push
ds
xchg
push
pop
cld
xchg
das
and
lds
rcrb
cmp
mov
stos
lds
jae
cmp
inc
add
or
push
add
dec
xchg
lea
scas
push
scas
aas
sbb
test
aas
subb
sbb
sahf
jmp
arpl
mov
mov
decb
jbe
mov
mov
lock
sub
int
add
rolb
adc
mov
sub
frstor
adc
xchg
int3
movsb
rolb
push
pushf
inc
and
iret
dec
inc
cmp
or
mov
mov
outsb
sahf
mull
push
insb
pusha
and
mov
dec
hlt
sbb
cmp
ret
dec
add
mov
sbb
pusha
in
fisttpl
ds
je
sbb
aaa
daa
or
inc
das
loope
icebp
addr16
insl
inc
repnz
enter
test
dec
xchg
jbe
ds
adc
std
rcrl
xchg
enter
in
cld
shlb
js
lahf
jnp
mov
xchg
loope
mov
into
imul
sub
mov
test
fadds
shlb
push
fiaddl
movsl
sbbb
sbb
inc
cld
jmp
leave
aaa
fs
repnz
cmpsb
sbb
scas
mov
inc
sub
push
pop
xchg
lock
pushf
sahf
cmc
adc
cs
sub
push
inc
add
stos
push
mov
mov
or
cmp
outsl
mov
jns
in
fs
fldenv
xchg
cmpsb
xor
xor
fisttps
fwait
mov
cmp
in
mov
test
imul
inc
jns
pop
in
iret
mov
pop
xchg
push
test
xchg
aad
aad
jg
mov
sub
mov
mov
in
push
movsl
scas
pop
push
inc
gs
push
notl
lods
stc
mov
adc
adc
stos
add
mov
add
cwtl
cmp
fsubs
adc
xor
shll
pop
jp
pop
std
xor
testl
enter
ja
xor
ja
mov
jo
mul
js
test
pop
mov
sub
sbb
mov
out
jecxz
cmpsl
mov
pop
xchg
push
fiaddl
sub
je
fs
scas
ljmp
push
and
cld
push
fcmove
idivb
jb
cwtl
ficomps
cld
sub
pushl
fucomip
xchg
loope
lahf
or
es
dec
filds
mov
roll
pop
call
mov
xchg
push
push
lds
int3
dec
xor
jmp
test
xchg
or
jle
mov
clc
cmp
ja
sbb
mov
aad
jne
lock
inc
sbb
es
imul
dec
call
cwtl
pusha
pop
sti
leave
dec
sahf
or
fdivp
in
insl
jns
imull
xchg
ret
insl
arpl
mov
pop
adc
stos
push
sbb
mov
jae
cli
inc
pop
jmp
ljmp
pop
lock
cmp
mov
dec
fnstcw
or
push
mov
bnd
test
mov
outsl
aad
in
or
out
and
push
sti
data16
mov
cmpsb
cwtl
pop
xchg
flds
mov
cmp
mov
xchg
jno
ja
stc
pusha
jne
mov
mov
adc
xor
cli
rol
subb
shl
pop
dec
adc
pop
sub
push
ror
cmp
jge
push
inc
aaa
sub
ret
pop
lahf
lea
sbb
les
or
in
in
cld
test
mov
jae
popf
cs
jge
sbb
inc
xor
inc
ss
jno
lds
mov
xlat
loope
out
xor
push
icebp
push
pop
ljmp
iret
jnp
and
mov
aad
mov
ret
mov
push
sbb
je
inc
ss
push
mov
enter
mov
jae
jmp
js
cwtl
sub
xlat
rcl
out
cs
and
jae
cmp
divb
mov
inc
and
pop
adc
and
scas
ja
inc
sti
push
loop
gs
sbb
push
xchg
les
sub
out
mov
adc
inc
mov
les
movl
inc
pop
in
dec
pop
mov
jmp
enter
fwait
xchg
inc
into
sub
ss
sbb
scas
add
push
pusha
stos
test
and
dec
and
mov
mov
nop
adc
adc
pushf
cwtl
stos
sti
mov
add
mov
lock
test
addl
cltd
lret
xchg
cmc
mov
add
push
sbb
xor
icebp
js
shll
push
fwait
inc
int
jb
popa
dec
mov
ret
in
adc
enter
in
add
lea
adc
mov
pusha
pop
inc
push
mov
lods
rclb
das
dec
lret
in
xchg
mov
lock
or
jl
idiv
psadbw
insl
cmp
mov
les
cmpsb
scas
sub
loopne
ljmpw
addb
add
add
stos
add
sub
scas
movsb
push
enter
push
ja
arpl
sbb
inc
loope
push
shl
loope
jmp
cltd
scas
or
pop
sub
push
push
cmp
movsl
stos
cmp
cmpl
mov
test
xor
inc
bound
sub
je
ret
popl
mov
loop
sti
into
push
loop
fildll
pop
mov
jns
in
mov
mov
adc
ljmp
add
mulb
mov
dec
out
imul
mov
lahf
mov
xlat
fsubl
cmpsb
out
pop
and
or
cmpsl
pop
adc
sub
stc
mul
in
sub
insl
sbb
push
gs
fistpl
or
mov
movsl
enter
xlat
pop
sar
je
aas
scas
add
jmp
inc
cli
sahf
or
in
mov
shlb
sbb
pop
int3
cmpsl
mov
std
sarb
mov
push
xchg
xchg
jecxz
aas
dec
sub
addb
cmpsb
and
lcall
pop
into
sub
and
mov
dec
xchg
insb
or
sahf
cwtl
repz
mov
xchg
pop
into
dec
xor
ficompl
aad
orb
into
into
pop
rcll
sbb
xchg
mov
ds
int3
jb
sbbl
test
data16
jo
pop
add
xchg
ja
adc
sub
pop
stos
stos
jb
lock
mov
loop
mov
push
and
popa
jnp
cwtl
daa
mov
roll
test
lahf
jg
xor
int
mov
adc
std
mov
je
pushf
les
cli
insl
mov
sub
inc
sbb
inc
shlb
push
scas
aas
aas
aam
xor
mov
pushf
aam
mov
imul
in
xchg
xchg
pop
cwtl
pop
push
push
sbb
shlb
inc
rorl
repnz
jno
in
dec
push
cmpsl
pop
movsb
lret
shlb
dec
lret
sub
mov
incb
jne
orl
push
test
add
jecxz
cli
mov
xchg
lds
cld
daa
mov
js
pop
adc
sbb
int3
cld
dec
or
push
inc
ljmp
pop
daa
pop
aam
sbb
aam
xchg
lcall
adc
nop
push
xchg
or
jo
sub
sbb
push
enter
xor
inc
mov
or
jg
jo
in
in
push
in
xor
popf
arpl
mul
sarb
jmp
sbb
sub
int
das
mov
adc
dec
das
add
mov
and
nop
testb
dec
push
cwtl
mov
in
cmp
rorb
cmpsb
or
popf
cmp
add
mov
ret
aad
xchg
mov
cs
out
fiaddl
mov
jp
and
sarl
push
adc
inc
adc
or
push
xor
fxch
jne
mov
pop
sbb
lret
dec
fs
cmp
dec
dec
test
or
sub
rclb
mov
dec
mov
out
ljmp
mov
pop
xor
getsec
shrb
xor
mov
ficompl
sub
and
orb
jecxz
jbe
inc
cltd
push
jno
cld
push
shrl
push
pushf
fs
dec
pop
cmc
inc
or
sub
lds
imul
jecxz
call
cli
cmpsl
jmp
mov
out
xchg
hlt
mov
mov
add
into
mov
mov
xor
push
adc
fwait
mov
aam
insl
jge
sbb
inc
insl
les
mov
out
rorl
xchg
push
cmp
adc
and
inc
jge
enter
add
xor
out
adc
ja
popf
testl
les
pmaxsw
ss
repz
sub
aad
daa
out
mov
decb
out
xchg
outsl
adc
dec
aas
inc
sahf
mov
in
test
xor
pusha
imul
inc
push
hlt
pop
pop
mov
jns
push
fldcw
cs
pop
adc
mov
and
testl
cltd
fimull
int
inc
outsl
testl
adc
cld
xor
out
sbbl
ficompl
dec
cmp
nop
jle
xchg
mov
or
nop
iret
sahf
push
pop
inc
xchg
cmpsb
sub
int3
and
in
mov
jmp
fmulp
jns
sbb
iret
jnp
cli
dec
xor
js
stos
fisttps
shr
cmp
js
fs
hlt
dec
pop
inc
adcb
sahf
and
adc
pop
aad
sahf
lret
ljmp
inc
or
lahf
mov
das
xor
cmpsl
bound
test
jg
ljmp
add
mov
jno
xor
loopne
mov
push
jmp
sbb
mov
lock
mov
cmp
insl
cmc
push
mov
jb
fdivl
push
ss
adc
cmpsb
fwait
mov
and
mov
add
xchg
mov
outsl
lahf
fistpll
jno
and
cli
push
pop
test
jae
icebp
push
cmp
cmp
mov
sahf
out
cmpsl
lahf
movsl
jno
shll
lods
jmp
xor
cmpsb
imul
arpl
mov
idivl
lds
sbb
or
call
cmpsl
mov
or
idivl
movsl
fwait
jle
pop
mov
lods
inc
xchg
in
mov
out
das
jp
mov
cmp
mov
cmp
cli
lock
loop
out
stos
mov
mov
push
lods
lahf
xor
incl
xor
test
sbb
xchg
sbb
in
inc
mov
sub
mov
icebp
loopne
test
aad
test
in
lods
aaa
call
cmpsb
pusha
cmpsb
mov
imul
pop
lods
cwtl
push
in
mov
dec
cwtl
jno
cs
dec
inc
pop
sbb
mov
cmp
lock
lods
jb
lret
dec
pop
stos
inc
cwtl
pop
repz
int3
into
in
scas
sbb
test
inc
or
xchg
ret
bound
idiv
mov
jne
mov
lcall
jae
xor
test
test
sbb
addl
bound
mov
data16
jg
int
xchg
pop
bnd
repnz
mov
fcomps
arpl
pop
data16
xor
aad
xchg
cli
jne
in
xchg
mov
stos
popf
scas
addr16
dec
mov
push
push
aas
out
xor
push
movsb
adc
mov
fnstsw
imul
lret
mov
xchg
adc
and
lock
insb
pop
adc
cmc
mov
lods
inc
iret
addl
cli
shl
out
cmpsb
sbb
ret
je
and
push
xchg
push
mov
sbb
mov
xchg
stc
divl
and
aaa
dec
bound
mov
and
xchg
dec
into
jle
inc
icebp
fists
loop
mov
scas
xor
ljmp
into
and
mov
or
xlat
sub
push
movl
push
fwait
dec
je
push
adc
xor
rcl
adcb
fcomps
shll
lret
jmp
inc
jno
stc
lods
out
or
out
lea
dec
fs
fstpt
stos
cmpsb
push
sarb
pop
adc
add
pop
inc
loopne
push
in
jne
jbe
clc
pushl
ja
xor
jecxz
add
pop
adc
pop
fadd
in
mov
inc
outsl
sub
sub
sbb
sbb
cmp
pop
repnz
jno
add
imul
pop
stos
divps
imul
cmpsl
xor
push
xchg
sahf
pop
pushf
int
jb
mov
dec
fwait
ds
loop
mov
dec
notl
inc
loope
leave
add
loopne
jmp
push
iret
lock
fistps
les
mov
xchg
mov
xchg
push
popf
fisubrs
push
dec
les
push
mov
jmp
outsb
xor
mov
or
push
mov
dec
in
sbb
xor
push
dec
cmp
sbb
inc
sub
lret
inc
or
mov
orb
xor
hlt
sub
mov
out
jge
sbb
xor
cmpsb
mov
mov
push
loop
data16
mov
sbb
nop
add
or
sahf
movb
repz
mov
xor
mov
sbb
nop
rcrl
ss
mov
fs
jmp
pop
mov
aaa
add
test
add
xor
xor
cmpsl
test
hlt
jge
fwait
adc
pop
push
stc
push
insl
push
mov
popf
xchg
int
jecxz
movsl
jno
mov
out
dec
push
popf
stos
aas
movsl
inc
inc
mov
out
pushf
cmpsb
daa
mov
test
adc
sbb
repnz
jns
sbb
sub
dec
mov
jb
cmp
mov
insl
mov
mov
xlat
xchg
jge
nop
insl
adc
addr16
jge
negl
jecxz
insb
xchg
repz
enter
insl
and
jmp
fidivrl
mov
out
movsb
in
cwtl
and
pop
fsubl
cltd
mov
rcll
xchg
sub
mov
add
leave
sahf
ffree
xchg
popa
and
sbb
xchg
cmp
shll
out
int
mov
cld
cmp
out
fs
clc
lock
and
mov
dec
sub
scas
sub
mov
push
fistpll
ljmp
or
rclb
mov
lcall
fstl
xor
cwtl
lods
sbb
dec
scas
cmp
add
inc
movsl
test
movsb
or
test
sbb
dec
sub
fdivrl
xchg
push
imul
mov
dec
test
jbe
into
sbb
adcb
fldcw
and
je
dec
sub
add
mov
and
fwait
adcb
sub
sub
aad
mov
les
push
movsb
push
and
jl
inc
push
jl
movsl
mov
add
mov
adc
xor
popf
xor
in
push
int3
insb
ficompl
aad
stos
fs
imull
lcall
mov
ret
scas
repz
pop
int3
and
xor
test
inc
sahf
xor
push
stos
mov
xor
in
adc
test
aaa
lret
shl
out
ret
xor
pop
iret
pop
jp
adc
mov
setl
test
xchg
outsb
dec
addr16
jae
loop
adc
ficoms
jle
mov
jg
mov
push
aam
pop
cmpsl
sub
pop
pop
stos
inc
cmp
cwtl
out
lret
mov
sar
inc
aad
pop
xchg
cmp
daa
push
fisubs
enter
sbb
addr16
push
add
xor
push
loopne
pop
jbe
jmp
shll
dec
sub
or
repnz
ja
push
or
test
jo
inc
cmp
mov
out
mov
test
adc
out
and
addr16
jmp
aaa
call
in
fidivrl
sbb
xchg
in
jle
fadds
lea
fisttps
cli
pushf
loopne
and
push
mov
push
add
sarl
faddl
stos
and
pop
enter
mov
daa
inc
stc
mov
mov
clc
jmp
jmp
push
lods
test
lock
xlat
mov
and
xchg
je
mov
jns
inc
dec
divl
dec
fbld
inc
aaa
incl
jbe
xchg
rcrl
aas
jnp
mov
lahf
int
cmp
clc
popf
int
sbb
mov
jp
iret
or
mov
or
nop
iret
jle
loop
xchg
fcmovnbe
ss
xchg
ds
out
rcrb
rol
jbe
mov
jbe
push
cmpb
jae
mov
sbb
xor
fsubl
cs
lock
inc
sub
fs
hlt
rcll
cmovo
cmp
inc
pop
bound
adc
pop
shlb
push
pop
je
sub
idivb
inc
jae
and
dec
ret
push
data16
jl
lods
fstpt
pusha
add
xchg
or
das
les
jl
test
xchg
mov
adc
aam
dec
std
jo
imul
jbe
jno
jp
rcl
cmp
add
cli
loope
adc
shlb
inc
xlat
mov
dec
loopne
mov
int3
ret
pop
push
push
dec
sbb
push
and
and
add
shll
das
fcomps
mov
jno
outsb
inc
xor
push
repz
mov
data16
into
xchg
mov
sbb
aad
mov
and
and
sub
add
into
xchg
ss
dec
enter
jne
arpl
addl
and
lea
adc
inc
or
or
or
test
dec
aaa
push
out
out
bound
iret
fcomp
xlat
testb
sub
lret
and
andw
cmpsl
scas
js
sbb
sbb
fidivrs
mov
mov
jb
js
or
add
mov
jo
push
or
leave
pusha
cwtl
dec
mov
mov
je
dec
leave
aas
jge
cmp
arpl
loopne
inc
nop
gs
scas
cmp
arpl
mov
xorb
xor
scas
js
lods
jmp
mov
xchg
imul
cmpsb
or
bswap
inc
adc
add
and
lods
adc
out
iret
rolb
in
inc
jp
jne
mov
jge
mov
jmp
dec
cli
sub
inc
jmp
gs
xchg
jmp
mov
test
es
out
sti
xor
mov
sub
cwtl
sbb
mov
ja
cmp
int3
scas
cmp
xchg
xchg
subl
roll
stos
out
into
mov
push
rcl
cmc
dec
add
push
pop
fcomp
push
pop
dec
lret
push
jae
pop
adc
test
cmp
test
inc
xchg
fucomp
outsl
mov
subb
sub
iret
test
mov
mov
cmovs
sub
sbb
scas
xchg
xor
pop
jnp
push
in
cltd
push
mov
pushf
and
inc
push
fisttpl
inc
rcll
inc
in
or
mov
in
fisubrs
mov
mov
or
fwait
or
jge
adc
cmp
popa
push
adc
sub
push
mov
mov
mov
xor
loope
push
loope
pop
cwtl
cltd
mov
mov
pop
jo
cmp
in
jae
pop
sbb
sbb
scas
or
pop
jl
jecxz
rcrl
popf
pushf
cwtl
add
inc
arpl
jle
mov
mov
es
lret
loop
in
rorb
arpl
pop
inc
and
inc
push
loopne
sahf
sub
inc
push
xlat
jecxz
les
sbb
leave
outsl
jmp
lahf
jmp
call
js
stos
push
push
mov
sbb
mov
sub
xchg
aas
enter
faddp
pop
movsl
or
das
jae
sbb
pop
cmpsb
xor
jae
int3
rcll
or
js
sahf
push
jbe
sub
notb
jnp
shl
mov
arpl
ja
pop
add
xchg
inc
ja
nop
sub
xor
loope
pop
or
test
pop
lret
sarb
push
stc
in
and
mov
sbb
cmp
push
lcall
sti
fldt
inc
and
mov
pop
mov
add
mov
pop
and
and
pop
mov
inc
add
lods
dec
lret
or
das
push
xor
ret
movsl
imul
dec
fildl
xor
pop
or
out
aaa
cwtl
add
dec
jge
or
stc
orl
mov
mov
das
add
dec
dec
ret
dec
stos
xchg
je
inc
cmp
out
cwtl
neg
test
xchg
mov
adc
xchg
mov
xor
or
repnz
push
xor
dec
cmp
xchg
lcall
arpl
aad
das
jl
jb
dec
mov
mov
sbb
pop
push
stos
lods
pop
jge
divl
or
jl
jmp
int3
dec
scas
xor
fwait
arpl
popf
mov
je
mov
jo
pop
loop
mov
scas
fimull
insb
mov
jp
push
sub
sub
pop
fnsave
adc
test
clts
jecxz
insl
inc
jecxz
mov
pop
mov
xor
adc
je
daa
sarl
sub
cmp
scas
cs
sahf
fisubl
test
movsl
iret
dec
dec
push
xor
in
rolb
in
and
out
sub
std
movsb
sbb
pushf
rcll
cmpsb
xor
mulb
lds
mov
jp
mov
xor
cmp
stos
ljmp
mov
lds
lods
js
out
sbb
sbb
sub
shll
cld
jb
in
adc
add
hlt
xlat
jns
ds
fistl
jp
mov
pop
mov
cmp
dec
js
xor
mov
in
ret
sbb
jg
sbb
ss
sahf
add
cs
inc
lahf
testl
xor
aas
and
push
and
mov
and
push
push
or
ljmp
dec
jo
or
jo
dec
mov
pusha
aad
add
cwtl
aaa
sub
cmc
icebp
imul
dec
jge
pop
int3
in
xor
jno
cmp
cld
cmp
inc
pop
cmpsb
cli
jmp
js
test
sbb
dec
push
int
jg
push
insb
push
je
lret
jmp
cmp
xchg
dec
jmp
mov
adc
mov
lret
adc
in
lcall
daa
add
repz
loope
imul
jbe
jg
pop
pop
ja
xchg
daa
or
xchg
add
inc
insb
xor
cli
pop
fdivrp
sub
cmp
push
dec
xor
imul
loop
or
pop
jbe
mov
or
jecxz
movsl
out
sub
push
ret
sub
mov
xor
mov
xor
mov
jmp
cmp
bound
sub
mov
inc
pop
mov
or
cltd
subl
out
mov
in
fidivrl
sahf
or
dec
xor
aas
js
mov
xchg
lock
or
mov
xchg
push
push
lret
loope
jns
cltd
orb
mov
jno
call
aam
push
mov
popf
mov
pop
mov
popf
pop
xor
push
and
cltd
xor
mov
mov
xchg
pop
repnz
cmp
lods
push
cmp
loopne
aas
mov
inc
lahf
sahf
inc
jo
rclb
addr16
xchg
mov
das
rcll
xor
es
shrl
out
mov
sub
dec
test
mov
pusha
sub
mov
sbb
lds
ljmp
aas
xorb
fs
xor
sbbl
jne
pushf
push
xor
pop
cli
insl
xor
insb
mov
fldt
xor
std
pop
shlb
fdivl
or
dec
xor
jle
adc
outsb
scas
or
cmp
popf
punpckhwd
repz
jp
sbb
insl
sbb
sti
mov
mov
pop
sub
fsubrs
xor
movl
int
leave
ljmp
cmp
pusha
js
adc
in
in
sbb
mov
inc
fidivs
jl
fcoms
outsb
pop
les
fs
ljmp
push
in
inc
dec
cmp
pop
scas
sbb
mov
xchg
sub
test
jge
lret
jbe
sti
add
sub
lock
rcrb
test
scas
jmp
mov
mov
push
and
imul
lock
loope
je
xchg
mov
pop
imul
sbb
dec
push
jo
std
cmpsb
jecxz
xor
mov
inc
jmp
stos
jle
iret
ljmp
sbb
popa
mov
lock
hlt
mov
cmpsl
imull
sbb
mov
cmc
jnp
add
fwait
and
xor
sbb
mov
bound
mov
aaa
dec
mov
jns
in
out
xchg
sti
pop
sub
pop
call
lods
fmuls
fwait
loopne
call
cmp
shll
sub
cmpsl
scas
lods
es
mov
test
popa
and
sub
jle
mov
fst
nop
enter
js
pop
mov
mov
cmp
ds
inc
xchg
jne
aaa
pop
shr
xchg
sub
loopne
outsl
xchg
mov
fisttpll
jb
pushf
pop
dec
push
dec
jae
add
aas
fcomps
rcll
fs
fists
push
cltd
aaa
sbb
ljmp
pop
test
movsl
sahf
pop
pop
inc
pushf
aas
cmp
sbb
insl
les
pop
movsl
sbb
xchg
fcomps
pushl
sti
imul
sbb
lock
adc
xchg
rol
pop
adc
stc
mov
in
lods
adc
lret
fnstcw
or
inc
mov
lock
cmp
xorl
sbb
or
fwait
test
sahf
call
jno
jg
dec
pop
dec
mul
je
lods
inc
cmp
xor
lods
mov
orb
out
mull
lcall
addl
xchg
or
ja
sbb
cmp
xor
in
ret
ds
fldl
add
xchg
cmpb
xor
fistl
xchg
pop
mov
sub
add
xchg
jle
cmpsl
repnz
aaa
and
jo
shll
lea
pop
sti
mov
les
jns
sbb
loopne
icebp
lds
fisttpll
push
push
ret
xchg
mov
push
pop
fnstenv
insb
fwait
adc
sub
mov
or
fs
adc
lahf
jmp
es
push
jo
xchg
inc
push
xor
mov
jle
pop
xchg
inc
mov
adc
sbb
mov
fsubr
mov
mov
stos
dec
mov
and
mov
xor
adc
dec
mov
not
jmp
mov
sbb
out
mov
pop
pop
xchg
or
in
pop
xchg
ret
imul
adc
add
loop
add
das
in
sahf
inc
add
sbb
pop
cmpsb
mov
das
divl
in
add
sbb
and
sub
ljmp
inc
inc
add
adc
or
push
push
mov
mov
movsl
mov
sahf
push
adc
push
ljmp
or
and
call
dec
and
xchg
dec
ja
dec
inc
mov
ljmp
inc
lds
out
mov
push
call
mov
cmc
xor
lcall
pop
add
scas
ss
rolb
cmp
movsb
mov
push
fbld
mov
xchg
mov
test
int3
sub
xchg
adc
add
nop
in
xor
push
cmp
popa
push
int3
clc
sarb
jae
jbe
fwait
inc
xchg
jge
xor
movsb
ljmp
loopne
jnp
inc
lock
push
inc
leave
adc
xlat
or
push
push
das
imul
outsb
mov
imul
mov
jno
gs
rcrl
cli
ss
mov
out
test
xlat
push
jno
sub
and
dec
shr
outsl
pop
lea
mov
xchg
scas
hlt
cmp
or
ljmp
fisttpll
jo
dec
cwtl
out
xor
jno
sub
shrl
loop
lods
mov
inc
adc
lods
push
sbb
and
inc
jne
aad
dec
sub
dec
xchg
test
push
popa
sbbb
sub
dec
ljmp
fcoms
decl
mov
jmp
rcrl
dec
and
mov
loopne
jnp
ljmp
cld
jg
dec
les
or
push
push
lret
insb
dec
push
push
push
push
test
cmp
ds
push
sub
fwait
icebp
push
mov
imul
push
xchg
lret
loope
xor
dec
icebp
jge
mov
sub
xchg
xor
lahf
push
cmpsl
xor
xchg
scas
adc
or
mov
sub
sbb
pop
stos
repnz
in
fnstsw
jge
test
popa
and
bound
xchg
xor
stc
testl
lods
movsb
cltd
bound
dec
jl
mov
int3
adc
int
popa
fiaddl
js
pop
stos
xchg
or
or
or
cmp
test
add
push
push
push
leave
and
sub
lods
in
testb
dec
roll
xor
mov
lock
push
clc
xchg
divb
jle
mov
mov
rolb
cmpsl
addl
stc
dec
xlat
mov
xchg
xchg
push
in
sar
mov
lahf
jnp
adc
subl
fistps
jp
push
mov
lea
sarb
out
add
int
subl
movsb
pop
dec
test
dec
xchg
leave
cmp
sbb
pop
xor
std
addr16
mov
mov
test
sub
test
lock
push
repnz
sar
mov
jecxz
scas
testl
jbe
imul
rcrl
stos
dec
mov
dec
dec
lock
push
push
cs
mov
push
ljmp
pushf
insl
daa
das
cmp
popf
mov
divps
loop
and
mov
popf
mov
inc
add
lods
and
xchg
fsubrs
fistpl
push
and
or
clc
jp
lods
scas
adc
dec
mov
ret
jo
test
push
int3
in
mov
ficomps
gs
shll
in
cmp
mov
aaa
int
dec
loopne,pn
mov
insb
nop
aad
ret
pop
add
jl
mov
fldl
int3
lahf
insb
enter
xor
in
mov
test
mov
cmc
lret
movsl
sbb
les
fistl
jo
cmc
outsb
jnp
in
mov
push
lea
push
pop
pop
push
cwtl
mov
sub
pop
in
jae
lcall
sub
pop
jge
mov
in
xchg
inc
pop
ljmp
dec
lcall
test
cltd
xchg
in
xor
or
push
cmpsb
push
pop
clc
iret
hlt
mov
mov
xchg
mov
jo
or
outsb
cmp
and
cltd
xchg
add
sarb
fsubs
xor
sbb
mov
mov
sbb
inc
adc
xchg
xchg
mov
pop
ret
adc
sub
mov
dec
enter
mov
scas
mov
pop
adc
popf
imull
daa
jne
aad
dec
mov
pop
xor
pop
mov
mov
mov
jae
std
push
pop
out
mov
aad
popf
addr16
inc
dec
dec
ret
add
imul
sbb
iret
fmuls
cs
rorl
jecxz
fisubl
insb
movsb
xchg
outsb
dec
out
fdivrp
jge
xchg
jnp
or
mov
pop
out
sub
je
xchg
scas
insb
xchg
test
sarl
cmp
leave
jle
jle
fildl
xor
jle
shlb
loop
imull
int
fs
mov
mov
mov
and
insb
push
inc
lods
ss
inc
inc
inc
mov
mov
out
xor
cld
pushf
les
jo
movsb
rcll
stc
mov
inc
call
fbld
jbe
push
rcrl
imul
and
push
add
mov
ret
popf
dec
mov
aaa
arpl
scas
fwait
mov
xlat
dec
test
xchg
push
loope
fisubl
xor
push
in
imul
addr16
lods
sub
dec
test
lahf
ror
pmaxsw
rcpps
ds
cmp
rcrb
mov
and
movsl
das
mov
dec
outsb
fstl
lret
in
daa
or
loopne
mov
push
xor
test
lea
sub
fwait
clc
or
clc
pop
mov
lcall
push
push
aad
fistps
add
hlt
sbb
int3
inc
cmp
and
lods
xlat
xor
adc
aam
out
xchg
pushf
push
ret
cltd
and
xchg
sahf
test
xor
js
stos
sahf
mov
popf
cmp
add
daa
cs
sub
mov
fucompp
mov
adc
push
pop
inc
inc
insb
fiadds
inc
in
movsl
xor
repnz
bound
insl
cs
ja
sbb
std
xchg
jbe
xchg
mov
mov
dec
pop
test
lods
cmpsl
leave
repnz
mov
mov
cltd
mov
js
mov
cmp
gs
xor
sub
mov
adcl
mov
inc
les
inc
mov
fildll
scas
mov
sbb
xchg
push
cmp
popa
mov
push
stos
stos
or
or
add
jno
xchg
stos
cwtl
loop
aad
mov
pop
xlat
in
dec
jl
push
xchg
cmpsb
cmpb
sub
les
and
push
mov
push
ret
rcl
push
mov
fst
rorl
pop
jns
pop
fucomp
mov
mov
sbb
lock
mov
pop
test
fstl
call
hlt
pop
sbbl
mov
jge
ret
xor
lods
hlt
jbe
dec
pop
mov
stos
subb
std
jb
xor
in
mov
sbb
imul
jmp
sbb
xchg
add
xchg
xchg
out
pop
bswap
shll
xor
xor
hlt
test
push
lock
mov
push
pop
pop
and
mov
cmp
cwtl
aas
jnp
rorb
mov
into
outsl
int3
in
nop
into
cwtl
or
inc
es
popf
xchg
jns
std
and
fistps
sarb
hlt
mov
fwait
or
insl
orb
testl
aam
or
sub
lahf
dec
dec
test
ss
mov
stos
jae
pop
mov
sbb
repz
mov
stos
and
adc
push
repnz
cmpb
push
ret
cwtl
mov
sub
sbb
adc
mov
mov
jg
lahf
mov
adc
daa
aam
aas
mov
es
pop
das
popa
mov
mov
and
dec
and
hlt
or
cld
lret
mov
sub
inc
fcoms
gs
gs
and
and
xor
and
pop
mov
add
popa
xor
lret
subb
push
sbb
aaa
inc
xlat
lahf
jno
push
mov
stos
mov
shll
pop
ret
mov
xor
inc
ret
dec
jge
push
out
jecxz
dec
add
sub
sbb
xor
and
inc
dec
jns
xor
aas
es
andl
das
adc
sub
pop
repz
xor
leave
imul
push
dec
in
mov
inc
inc
stos
adc
mov
jmp
mov
xchg
and
and
jge
cli
xlat
or
pushf
jnp
aad
adc
insb
ljmp
paddusb
xor
ret
aam
pop
sub
pop
sahf
cld
mov
pop
addr16
dec
push
mov
mov
loope
jle
xchg
pop
lods
adc
adc
fstps
mov
adc
lds
aad
jo
sti
jge
pushf
or
les
adc
or
clc
adc
dec
sahf
in
orb
xlat
xchg
mov
push
lock
add
mov
out
jae
mov
rcrl
xchg
repnz
cwtl
popa
or
or
lds
iret
xchg
sbb
xor
adc
and
xchg
xor
jp
test
add
xchg
out
push
pop
jmp
pop
cmp
pop
fildl
div
test
jl
pop
xchg
lods
hlt
jne
dec
xor
test
lods
push
into
filds
lock
cmp
xchg
cwtl
add
sub
sbb
orl
mov
sub
add
push
jle
xchg
lods
adc
sahf
and
push
xchg
aaa
pusha
dec
stos
xor
dec
adc
xor
pop
push
cmp
mov
add
stos
jno
in
add
movsb
pop
mov
pushf
push
cli
and
aaa
lcall
jo
stos
sub
fwait
sbb
hlt
pusha
mov
jle
jmp
cmp
add
insb
fldenv
and
loope
xor
orl
push
lea
sbb
pop
aam
negl
mov
xor
stc
or
fs
adc
sub
xor
jns
dec
xchg
xchg
ss
mov
mov
cmc
fsubrs
jbe
sahf
into
and
imul
jl
add
sbb
fstpl
loope
notl
arpl
mov
dec
in
mov
add
cli
mov
ljmp
mov
mov
dec
inc
dec
mov
inc
es
push
aas
xchg
sti
cmp
les
cli
cmp
sub
xor
xor
inc
mov
iret
push
mov
cmpsb
mov
loop
sub
dec
cmp
mov
popaw
mov
jns
rcr
mov
sub
mov
cld
cli
arpl
daa
adc
jnp
pop
jae
pop
xor
sahf
cltd
and
mov
not
inc
adc
loop
aam
sbbb
inc
popa
sbb
aas
adc
pop
dec
popa
cmp
mov
addr16
xor
fwait
rcrb
out
jg
mov
xchg
add
shll
movsb
cmpb
ret
mov
cmp
cmp
mov
or
dec
mov
sahf
adc
or
rcll
mov
xchg
rclb
lcall
bound
and
xchg
push
xor
mov
push
push
jmp
pop
xor
adc
adc
adc
lods
sbb
das
or
jle
xlat
jg
and
dec
dec
or
imul
add
or
mov
pop
lock
ret
out
aas
rolb
dec
xor
and
lock
cwtl
mov
pop
xchg
and
xor
fstl
ret
adc
dec
icebp
test
xor
or
inc
push
sub
shll
mov
cmp
adc
ss
in
out
aaa
ss
jb
lahf
jb
cmp
out
xlat
mov
cmpsl
push
push
into
loop
push
jge
or
es
call
insb
mov
push
jnp
sub
inc
cwtl
mov
stos
test
dec
dec
adc
fucomp
notb
dec
out
mov
nop
adc
jb
fisttpl
jg
jb
push
imul
icebp
out
popf
aad
mov
adc
add
aaa
and
dec
adc
jno
and
loop
inc
pop
add
mov
es
imul
xchg
xor
xor
adc
rorl
adc
test
xor
push
xor
jb
loopne
jb
dec
cmpxchg
xchg
ss
inc
mov
add
loop
fdivrl
mov
test
outsl
hlt
fists
dec
fcomi
and
jno
mov
mov
pop
mov
nop
add
mov
movsl
inc
pop
stos
add
and
shlb
test
fs
mov
mov
dec
jns
stos
sub
push
scas
sub
lahf
imul
lahf
aaa
bound
xchg
lods
cmp
les
xor
push
negl
fildll
mov
adc
sbb
mov
inc
and
xchg
loopne
shlb
cld
mov
jae
push
dec
rcrl
das
mov
push
sub
lods
xchg
lock
push
xor
test
int
pop
cmpsb
ljmp
mov
int
jae
cmp
cmpsb
inc
insb
inc
enter
mov
jo
xchg
ret
jno
sbb
jl
fidivrs
cltd
mov
pushf
add
cmp
mov
pop
lds
xchg
mov
cmpsl
dec
adc
out
inc
adc
push
add
cmpsl
mov
cs
sbb
dec
push
in
or
fistl
movsb
fisubl
adc
call
push
popf
push
fsts
aaa
out
pop
xchg
popf
bound
lahf
stos
dec
pusha
mov
ret
in
jle
mov
lahf
xor
add
nop
adc
cmp
outsb
jno
xchg
scas
cs
and
repnz
dec
mov
dec
fwait
outsl
add
sarl
mov
sub
clc
rcll
adc
pushf
sbb
pop
or
cltd
sbbb
stos
hlt
push
sbb
ljmp
xorb
fnstsw
xchg
roll
add
ret
insl
popa
test
pop
int3
add
lds
pop
lods
mov
pop
xchg
adc
popf
dec
push
dec
sub
mov
dec
lret
cwtl
fwait
dec
inc
jg
and
dec
jb
mov
out
clc
push
stc
xlat
pop
aaa
jle
lock
and
lods
xchg
adc
sbb
mov
testb
enter
inc
mov
sbb
dec
in
repz
in
xor
movsl
mov
out
push
loopne
or
sub
jl
dec
or
push
int
repnz
jbe
cmp
pop
xor
mov
adc
push
xchg
sub
jb
stc
stos
out
push
dec
mov
mov
and
dec
and
adc
mov
mov
lock
adc
adc
xchg
push
fistpl
xchg
aad
sbb
or
mov
mov
scas
mov
fildl
mov
andb
das
cmpb
in
push
shll
adc
es
in
jne
aad
out
inc
movsb
add
pop
ret
add
filds
push
dec
test
push
push
fildll
movsb
sti
addl
testb
pop
lock
fisubrs
push
cmp
aas
or
inc
in
loopne
mov
aad
iret
repnz
add
jge
sub
lods
mov
and
add
lock
nop
mov
stos
push
outsb
xor
cvtdq2ps
out
adc
bound
jns
outsl
lock
pop
lods
stos
adc
cmpsb
test
imul
mov
clc
out
les
pushl
lods
lret
leave
pop
subb
mov
push
dec
mov
mov
or
sar
add
sub
test
pop
dec
ss
mov
sbb
adc
or
adc
test
xchg
popa
cld
sbb
into
ss
sbb
outsb
pushf
xchg
mov
fucom
mov
push
imul
pop
shrl
jg
jo
roll
mov
xor
xchg
push
pushf
dec
pop
shl
loopne
cmp
fildl
cmpsb
sbb
scas
mov
cmp
icebp
enter
testl
jmp
loope
push
stos
push
outsl
ret
jnp
jge
sahf
jbe
leave
push
xchg
cmp
push
out
rclb
dec
adc
addb
mov
push
nop
je
pop
sub
cmp
jecxz
adc
bound
push
das
and
jmp
jge
loop
or
popf
mov
mov
rclb
and
fstpl
or
mov
cld
ss
mov
adc
lcall
sub
sbb
icebp
ret
or
cmp
jae
pop
adc
bound
cwtl
iret
xchg
sbb
outsl
push
test
cmpsl
xor
jns
jmp
mov
int3
or
dec
roll
and
repz
bound
aam
or
sub
mov
das
xchg
sbb
gs
sbb
cmpsl
push
rorb
mov
push
in
inc
ret
movsl
je
mov
mov
pop
fiaddl
or
xor
in
mov
in
outsl
ljmp
mov
adc
lds
ss
ret
movsl
inc
or
adcb
jae
xor
insb
sub
pop
inc
lahf
out
fcmovnbe
jne
stc
jle
inc
push
leave
in
insb
pusha
hlt
in
push
pop
mov
bswap
icebp
jno
adc
call
cmp
push
pop
fbld
cli
and
and
imul
push
jbe
jb
leave
fdivl
sub
mov
cmp
or
mov
xlat
stc
mov
push
and
add
clc
or
addr16
push
ja
arpl
hlt
icebp
sub
movsl
pop
xor
mov
pop
test
and
sbb
jge
jle
push
aam
lods
stc
cmpb
push
in
ds
test
in
pop
lds
push
test
jle
mov
add
sti
insl
inc
sub
mov
es
loope
pop
cmp
push
mov
jle
stos
mov
cs
xor
xchg
into
js
mov
push
out
cmpsl
mov
ss
pop
add
stos
mov
fdivl
cld
fistps
xlat
jg
xchg
inc
xchg
testb
fildll
mov
inc
dec
mov
pop
test
dec
jnp
push
mov
iret
dec
or
cmpsl
pop
and
loopne
clc
pop
icebp
push
rcr
add
addl
cmpsl
shrb
fwait
lods
gs
dec
and
sti
sub
mov
js
or
pop
or
sahf
inc
test
int
mov
sub
mov
mov
sub
sub
pop
stos
mov
mov
xlat
frstor
mov
mov
jmp
cmpsb
pusha
mov
jl
jb
in
cld
scas
inc
or
aas
xchg
sahf
sbb
ljmp
mov
enter
cmp
lds
mov
movsl
sbbb
mov
repnz
or
adc
rcr
sub
ja
ret
add
arpl
inc
fisttpl
mov
mov
shl
faddl
sbb
out
mov
iret
sbb
stc
and
clc
sub
scas
push
std
adc
rcll
or
cmp
jecxz
push
das
daa
or
fldl
mov
ss
or
lcall
repnz
inc
add
shlb
adc
ret
idiv
testb
and
sti
sarl
and
mov
sub
repnz
adc
mov
pop
push
stos
sub
das
sub
test
jecxz
loope,pn
jo,pt
sbb
adc
call
fstpt
jae
sub
nop
bound
stos
add
das
xchg
and
xor
add
scas
jge
dec
ja
addr16
mov
pop
mov
add
jge
in
jg
sbb
adc
pop
leave
jecxz
sub
int
mov
mov
sub
jg
push
cmp
add
stos
jmp
loop
rorb
scas
xchg
pop
dec
rol
pop
arpl
imul
add
xchg
adc
jnp
jo
jb
pushf
mov
shrl
and
inc
imull
ds
std
add
and
enter
add
cmp
adc
stc
mov
out
cmpl
mov
cmpsl
push
lcall
mov
hlt
sarb
mov
mov
adc
test
sub
dec
dec
mov
ret
arpl
push
lret
mov
cmp
pop
out
testb
out
inc
ljmp
stc
aad
cli
arpl
pop
leave
pop
sbb
aas
in
fmull
ja
xor
ja
push
mov
fucomi
pop
sbb
mov
testl
bound
and
push
sahf
pop
jecxz
aad
push
je
in
push
jge
cmpsb
int3
dec
aad
dec
ljmp
fists
dec
lar
mov
add
push
daa
pop
add
lcall
xor
dec
mull
pop
insb
push
or
es
pop
mov
xor
inc
mov
mov
fwait
ljmp
sbb
shlb
inc
mov
psllq
cmp
lods
push
aaa
fisubl
push
scas
cmp
js
jnp
mov
jnp
push
inc
movsb
mov
lock
ds
pop
jbe,pn
dec
mov
call
aaa
mov
daa
sbb
dec
cmp
jne
fbstp
in
pop
test
mov
mov
xor
hlt
add
add
cmp
and
mov
orb
push
clc
pop
and
repz
jmp
mov
xchg
push
sti
sbb
xchg
jmp
jge
out
insl
dec
cmpl
pop
mov
out
adcb
and
mov
outsl
sti
daa
test
int
aaa
xchg
pusha
sub
push
push
sti
ret
sbb
test
stc
gs
add
and
push
popa
sub
cmp
inc
and
out
lods
sub
lcall
inc
push
cmp
jmp
cs
mov
inc
outsl
cmpl
xlat
pop
adc
enter
shrl
push
imul
dec
mov
push
icebp
enter
dec
lret
xchg
mov
popf
cmp
mov
sbb
data16
leave
lret
aam
mov
mov
in
lods
sub
fisttpl
call
inc
jl
mov
fcmovbe
add
cmp
push
adc
sbb
stos
or
sub
and
or
movb
mov
dec
inc
jo
addr16
adc
mov
js
xlat
insb
in
loop
js
mov
lea
inc
in
insl
jecxz
dec
add
add
add
leave
bound
jmp
cwtl
mov
popa
mov
and
int
lea
int3
nop
pushf
xor
mov
or
mov
mov
test
mov
arpl
cwtl
adc
cmp
popl
push
mov
sbb
inc
je
pop
out
sub
popf
enter
sub
mov
ffree
mov
loop
xchg
in
jno
pushl
sbb
jo
fs
shll
bound
js
rcll
xor
and
mov
lcall
shlb
and
push
push
dec
test
dec
shlb
das
in
ss
mov
pop
push
inc
sbb
mov
lock
jbe
pushf
inc
sbb
cmc
xchg
xchg
sbbl
movsl
cmp
adc
xorb
sbb
je
enter
mov
stos
fcmovnu
outsl
mov
xor
movsb
fnstcw
rcll
shrl
push
stc
cmc
and
scas
shrb
popa
lea
cmpsb
and
xor
mov
pop
imul
es
cmc
xchg
mov
sbb
outsl
sbb
xchg
mov
int
sub
jbe
pop
cld
movsl
dec
push
fdivrs
roll
sub
test
in
or
or
pop
icebp
adc
jle
mov
push
sbb
js
pop
jmp
mov
int3
shll
daa
inc
call
jge
lret
push
jge
mov
iret
and
or
mov
mov
dec
mov
mov
xlat
or
in
jg
push
movsl
jg
adc
mov
mov
add
add
push
jmp
mov
fadds
lret
pop
push
jne
and
rorb
mov
pop
lds
xor
sahf
ss
pop
cmp
into
mov
sub
jb
iret
jo
xor
sbb
and
hlt
add
rcl
add
cwtl
push
fistl
out
jbe
mov
sub
push
adc
xchg
jno
loope
inc
mov
out
mov
into
push
mov
mov
outsb
insl
pop
push
movsl
clc
scas
imul
loopne
jnp
fs
sub
minps
add
test
shll
adc
mov
daa
adc
and
mov
subl
out
lods
mov
cmpsb
pop
int3
cwtl
xlat
stc
cli
aas
ret
repnz
lret
add
push
fisubrs
data16
and
pop
pop
fcomip
pop
aaa
push
cmc
lock
mov
sbb
push
test
pop
jge
bound
cmpsl
pop
mov
les
push
lahf
or
gs
mov
adc
mov
ja
and
jl
fucomp
icebp
dec
scas
mov
mov
arpl
cmc
ljmp
adc
movsb
dec
fisubl
push
adc
or
loop
sti
cli
stos
mov
xchg
add
xacquire
stos
mov
daa
cmp
test
mov
jno
loopne
in
incl
jns
jne
mull
lock
lcall
or
lods
in
in
cmpsw
xor
fsubl
fisubrl
dec
pop
jecxz
jmp
cld
sub
sub
sub
jno
inc
sti
aad
scas
add
aad
mov
cmp
jno
pop
lcall
ds
dec
cwtl
es
xor
and
das
hlt
xchg
repz
xor
mov
mov
mov
cltd
adc
inc
inc
sbb
mov
inc
cmp
xchg
inc
cs
fcomi
and
test
pop
add
inc
sub
mov
popa
sbb
jnp
jb
daa
out
pusha
and
cmp
xor
or
mov
lcall
adcb
adcb
xor
xchg
inc
daa
ret
out
mov
xchg
jno
push
pusha
out
mov
test
and
dec
aaa
cmp
movsb
mov
pusha
test
xchg
push
mov
popf
mov
xor
jle
jb
and
outsl
push
cmp
ficoms
test
sbb
inc
mov
push
ret
jb
fsub
testb
jecxz
in
gs
ds
push
or
out
aad
push
jecxz
cmp
iret
push
push
mov
pop
outsl
sbb
outsl
dec
mov
or
push
cmp
popa
test
pop
in
jl
leave
cmp
push
xchg
or
mov
loopne
inc
cmc
push
loop
aas
mov
psubq
pop
mov
push
shr
jmp
mov
inc
mov
sbb
sti
sbb
mov
fnstsw
cmp
inc
loopne
jns
rorl
sbb
cltd
ret
vpminub
sub
push
fs
adc
and
cs
out
xor
jp
fst
js
test
jl
stos
jb
mov
inc
inc
push
fcmovnbe
pop
inc
xlat
cmp
js
lds
adc
jmp
daa
lcall
mov
jp
lea
mov
adc
mov
mov
pushl
cli
push
imul
ret
xchg
lret
sbbb
imul
addl
pop
test
adc
fs
xchg
lahf
jg
xor
mov
sub
jo
push
mov
int3
xor
mov
xchg
imulb
loope
or
pop
cs
jle
adc
pushf
dec
jns
imul
add
sbb
rolb
or
xchg
std
pop
pushf
sub
clc
mov
fadds
xchg
data16
cs
les
roll
mov
les
fmul
icebp
or
std
mov
xchg
xchg
mov
sub
loope
subb
fmull
inc
loope
xor
mov
xchg
xlat
outsb
out
mov
andl
push
hlt
lods
fisubrl
mov
in
cltd
xchg
pusha
lods
jns
inc
je
decl
inc
mov
jl
or
mov
popa
stc
mov
adc
mov
int
mov
and
jbe
pop
fsubl
ret
mov
fs
movsl
adc
dec
inc
and
xchg
dec
imul
inc
andl
adc
call
inc
sub
jns
cwtl
aam
dec
sbb
lods
cmc
jmp
aam
cmpsl
and
stos
cltd
sbb
push
out
push
pop
mov
stc
sub
ljmp
lods
cltd
push
jo
jnp
push
nop
pop
les
shrl
push
or
popa
test
lock
clc
movb
jle
push
cmpsb
sub
ljmp
int
mov
dec
shrb
in
shll
jo
test
insl
and
pop
es
repz
xchg
scas
test
or
push
in
fistps
mov
mov
int3
push
arpl
outsl
cltd
and
mov
push
xor
inc
mov
sbb
testl
mov
and
out
push
add
es
and
fnstenv
adc
testb
fistpll
mov
xorl
xchg
jb
and
xchg
fimull
fs
add
mov
mov
cmp
push
fsubp
mov
mov
call
xor
add
xchg
daa
js
push
or
mov
lahf
sbb
lock
repnz
ljmp
fwait
inc
xor
lods
ret
fsin
sub
es
nop
mov
repz
push
sarb
mov
fwait
cmp
pusha
adc
dec
fistpl
mov
mov
fwait
jne
in
in
lock
in
fwait
mov
push
shrl
mov
pop
cmp
jg
cmc
insl
mov
mov
mov
repnz
mov
int
dec
popf
aas
out
push
sbb
pop
jo
inc
pushf
shr
mov
outsb
sbb
inc
add
cs
and
inc
adc
sahf
and
lods
and
xorl
arpl
inc
sbb
push
mov
dec
iret
jg
cmp
adc
cvtps2pd
pusha
inc
stos
cmp
sbb
cmp
adc
aam
cmp
stc
test
jae
dec
jl
jmp
bound
cmp
scas
sub
insl
int
stos
mov
int
or
inc
stc
ds
mov
dec
test
pop
jg
mov
mov
cmp
and
rclb
insl
insl
add
ja
xchg
pop
sarb
mov
push
lods
cld
xor
bound
and
pop
adc
push
mov
pop
jae
std
data16
and
inc
inc
pop
rclb
inc
stos
imul
add
divl
lahf
jnp
dec
jle
outsl
jb
jg
hlt
and
repnz
jnp
rorl
mov
daa
add
push
repnz
cltd
lock
arpl
std
stc
jge
insl
adc
inc
mov
jle
dec
push
pop
mov
sbb
sbbl
enter
mov
sub
push
fwait
jo
dec
cmp
fidivs
ja
jecxz
pop
xor
cmp
or
dec
and
adc
dec
sub
mov
rolb
xor
sub
pop
fnsave
add
out
jo
lods
mov
fs
pop
mov
lods
and
adc
push
sbb
bound
or
aad
adc
dec
outsl
xor
arpl
icebp
inc
and
ja
jno
sbb
cmp
pop
push
es
call
jp
pop
scas
xor
cmp
push
aad
rcr
xor
sbb
test
mov
sti
sub
js
mov
cs
adc
dec
or
cmp
mov
jnp
add
and
pop
xchg
rcl
push
adc
mov
insl
fwait
gs
lods
push
adc
inc
mov
cwtl
out
push
mov
lods
add
jecxz
push
adc
mov
xchg
xor
xchg
js
orl
sbb
hlt
push
pusha
loopne
mov
int
push
sub
rclb
xchg
xor
push
push
and
mov
inc
sub
cli
dec
imul
lods
mov
out
fidivs
sbb
sarb
sbb
xchg
mov
mov
loop
ret
addl
push
cmpsl
cmc
ds
mov
sub
call
jne
pusha
in
out
jnp
sub
mov
xor
cs
mov
mov
lea
push
test
xchg
int3
aas
test
sbb
adc
int3
in
push
mov
stos
loopne
add
mov
hlt
jmp
ret
inc
inc
cs
cmpsb
fistl
mov
mov
add
inc
fbstp
or
xchg
test
mov
fildl
das
outsl
sbb
es
inc
and
sub
cmp
mov
xchg
xchg
call
jge
xchg
dec
xlat
ret
sbb
nop
cmp
jecxz
mov
push
in
subb
adc
je
and
mov
lods
in
aam
add
mov
rclb
adc
bswap
setnp
hlt
xor
pusha
inc
shlb
rcrb
je
shrb
mov
sub
sbb
push
jmp
loope
push
pop
addl
xchg
jecxz
xchg
push
or
xor
sub
inc
shl
inc
adcl
aad
xor
pop
xor
iret
xor
push
cmp
sub
lods
stc
fimuls
loop
push
add
push
mov
popa
and
ljmp
cwtl
outsl
mov
xor
std
jno
cmp
fwait
pop
inc
pushf
and
int3
jl
or
adc
push
dec
int3
shll
arpl
pushf
xor
lds
or
repnz
add
adc
push
cmp
outsb
incb
outsl
pushf
pop
mov
pushl
inc
add
mov
xchg
xchg
add
insb
flds
add
test
push
pop
adc
loop
lret
xorl
enter
adc
scas
dec
cmp
mov
xchg
xchg
mov
and
adc
pop
or
or
je
test
sub
lods
mov
into
pop
stos
push
fst
xor
xchg
mov
es
lock
pop
fimuls
mov
mov
insl
dec
rcll
lods
ret
subb
jbe
cli
adc
popf
jo
jmp
cltd
or
inc
arpl
lods
pop
jne
mov
mov
jle,pt
les
sbb
ljmp
mov
in
test
cmp
pop
int
add
mov
push
clc
mov
pop
testl
pop
bound
out
mov
fcomps
dec
push
outsl
pop
aad
data16
lds
decb
stc
shlb
fstl
or
cmp
mov
xchg
mov
xchg
pmuludq
add
movsl
and
push
and
mov
cmpsl
pop
icebp
movsl
lahf
push
std
shl
outsb
pop
jmp
cmp
or
mov
xchg
push
jmp
cmpsb
inc
xchg
inc
das
fdivr
pop
rcrl
push
push
jnp
add
out
jmp
mov
cmp
push
imul
sub
mov
adc
fidivl
push
mov
jle
dec
repz
jb
mov
imul
scas
add
cmpb
fnstenv
pop
stos
sub
xchg
call
push
stos
jnp
add
fsubl
ret
repnz
out
jl
test
cltd
stos
sbb
jge
inc
addb
hlt
loopne
or
out
in
ret
mov
inc
mov
xchg
pop
adc
xor
testb
clc
adc
dec
insl
inc
subb
sbb
into
or
cmp
ss
sbb
pop
out
cmp
movsb
push
mov
inc
mov
in
cmp
rorl
aaa
push
add
out
std
inc
and
cmp
pop
mov
ret
cmc
or
jle
dec
push
cmp
add
out
mov
enter
pop
and
mov
repnz
mov
aaa
cmpsl
cmpsl
mov
xchg
test
out
sub
xor
data16
les
pushf
pop
les
test
cli
ret
xchg
icebp
xorb
lea
jmp
adc
hlt
pop
mov
dec
rol
jl
fsubrs
cmpsl
add
or
lds
inc
cld
bound
mov
and
cmp
fcmovnb
inc
pop
push
push
mov
lcall
mov
rclb
sbbl
and
loop
fisubrl
hlt
mov
fadd
enter
jae
int
jns
lea
fsubrs
add
pop
outsl
fdivs
jns
cltd
adc
mov
fisttps
dec
inc
xor
jmp
fwait
mov
ret
es
cmpsl
fs
outsl
mov
loope
mov
hlt
lret
or
cltd
dec
sub
pushf
fadd
scas
int3
sub
imulb
clc
xchg
xchg
aam
add
mov
dec
imul
rcrb
popa
fwait
add
imul
and
sbb
js
jbe
xor
mov
xchg
gs
xorb
jno
bnd
cmp
dec
pop
and
lods
fwait
inc
sub
or
ja
pop
pop
icebp
or
push
and
out
fwait
bound
adc
lret
cwtl
hlt
mov
jbe,pt
mov
fwait
gs
sub
mov
outsl
sti
test
mov
fs
addr16
mov
push
xlat
mov
out
mov
lret
lret
nop
inc
jp
loop
and
in
cmpsl
js
mov
lods
pop
jnp
mov
test
mov
fisubs
cs
test
daa
pop
mov
addr16
jl
mov
imul
bound
mov
inc
cmc
sbb
fcoms
cmpb
mov
or
pop
inc
pop
mov
jbe
les
sub
sub
xlat
jp
outsl
mov
or
mov
into
mov
push
cwtl
stos
loop
nop
dec
cmp
dec
lea
fcompl
sbb
adc
sub
cmpsl
ljmp
repnz
and
dec
and
lds
stos
jmp
sub
mov
repz
mov
roll
out
ret
lret
popa
inc
fcoml
push
gs
sti
sub
pop
loop
lods
sub
mov
adc
fcomps
xchg
jbe
push
adc
cmp
shl
xor
mov
or
jb
lock
jns
dec
push
mov
pop
out
test
popa
adc
xchg
and
sbb
lret
xlat
test
inc
dec
in
aam
cltd
icebp
fstl
sbb
outsl
cmpsb
pop
push
push
std
cmpsb
cmp
test
sbb
notl
in
popf
mov
jb
mov
sbb
insb
and
xchg
jno
jno
repnz
inc
mov
cmpsb
cmp
mov
cmp
lock
mov
xlat
sub
or
push
cmpsb
mov
jmp
jae
test
orb
push
popl
inc
mov
jle
dec
and
scas
sbb
mov
lcall
jp
xchg
repz
and
push
andb
cwtl
add
bound
mov
clc
mov
jno
dec
sahf
and
ror
adcl
daa
sbb
xchg
mov
mov
push
inc
adc
push
imul
xchg
adc
mov
lret
pcmpgtw
js
mov
cli
or
dec
inc
dec
adc
xchg
jl
rcl
jne
sub
jecxz
mov
pop
pushf
jge
adc
testb
fwait
xchg
sbb
inc
sbb
das
les
cld
jb
inc
xor
rolb
and
addr16
jle
gs
jo
mov
and
and
pushf
add
sub
dec
or
adc
or
and
mov
imul
addr16
push
out
pop
add
cmpsl
sbb
adcl
test
in
loop
pusha
lret
ss
int
sbb
ljmp
inc
mov
or
xor
popf
xchg
lret
into
and
jo
loope
jae
in
stos
cmpsl
xchg
movsl
mov
dec
out
push
data16
mov
ret
inc
cmpsl
push
xor
inc
xlat
lcall
mov
or
out
mov
pop
add
jge
imul
xchg
shrl
fldenv
pop
inc
xchg
outsb
std
loop
dec
test
fnstsw
sub
push
fdivs
or
andb
stos
mov
or
out
push
mov
mov
mov
ljmp
stos
ret
cli
and
fxch
push
xchg
push
loope
movsb
out
sub
testl
dec
mov
xorb
dec
cmp
int3
hlt
ret
push
mov
mov
sti
cmp
push
jbe
dec
sti
imull
inc
lea
fdiv
daa
sbb
cs
fbld
jg
dec
cs
fdivl
ljmp
or
pop
popf
aaa
aad
nop
push
push
dec
or
sub
mov
sub
sbb
imul
or
loop
jb
mov
lcall
mov
cmp
xchg
loopne
cmp
loope
dec
xchg
js
jmp
jne
dec
jmp
rcrl
mov
out
cmp
push
push
jnp
outsl
scas
cwtl
pop
mov
or
es
cmp
lahf
cmp
inc
sbb
adc
jge
rorb
xor
adc
sub
int
dec
or
pusha
mov
cli
lahf
mov
xchg
cmpb
sahf
inc
push
adc
xor
xor
pop
pop
xorb
hlt
mov
xor
sub
adc
dec
je
jg
pop
add
sub
inc
imul
mov
clc
in
scas
pop
cmpsb
xchg
xchg
movsb
lods
ret
cmp
sbbb
stc
movsl
sub
hlt
add
cli
xchg
js
push
xchg
scas
aaa
in
frstor
push
testl
dec
and
lock
cmpsl
mov
xchg
js
cmp
enter
push
push
pop
aam
mov
jecxz
rcrb
inc
lds
add
add
dec
push
pop
jge
lret
lcall
xor
sub
mov
sub
xor
repnz
insl
ljmp
ds
stos
daa
clc
inc
sub
jmp
inc
adc
add
add
mov
pop
ficoml
mov
mov
jge
js
lret
pop
sbb
mov
sahf
mov
dec
rorl
pop
adc
and
mov
out
cmp
aas
out
je
inc
daa
test
mov
pop
push
mov
arpl
out
dec
mov
clc
movb
jecxz
xchg
mov
repnz
inc
and
test
or
pop
loopne
fistpl
cmp
lret
jb
xchg
xlat
pop
dec
jmp
push
insb
sub
pop
pusha
pop
addb
shll
lret
sub
mov
sub
js
inc
leave
imul
test
lret
mov
stos
rcl
xchg
cmp
add
mov
mov
dec
pop
push
aam
add
fmull
jbe
mov
pop
dec
fs
xchg
imul
test
and
mov
rcr
cld
inc
ret
lds
add
repnz
cmpsl
addr16
iret
lds
add
lea
testb
cmp
into
sub
and
or
ja
ss
popa
mov
add
lcall
add
mov
dec
mov
in
jle
iret
push
or
stos
xlat
sub
sbb
dec
ret
mov
xchg
mov
lods
xchg
mov
xchg
lods
lret
push
xor
roll
add
jno
add
icebp
and
aas
or
cmp
or
shl
add
mov
orl
leave
adc
ret
mov
sbbl
mov
lea
xchg
shlb
inc
outsb
cmpsl
rcrb
mov
sbb
fildll
xchg
pop
mov
scas
jae
rorb
ret
loope
mov
xchg
pop
adc
imul
mov
and
test
call
xor
or
ds
inc
add
or
test
cli
cmc
xchg
int
lret
in
stc
jecxz
or
or
inc
sti
dec
insb
or
dec
pushl
aam
xor
add
sbb
jp
sub
mov
stos
pop
jl
cmpl
sahf
stc
mov
fcmovnbe
mov
addl
out
call
mov
pusha
pop
pushl
or
stos
out
ficoms
or
jg
aaa
lds
andb
jg
dec
jbe
das
and
fcmovb
out
in
mov
js
sub
sbb
sub
inc
das
inc
mov
inc
sarb
jg
ja
aad
mov
pop
add
pop
out
andl
adc
notl
cmpb
bound
ret
sub
pop
fcomps
cmpsb
movsl
mov
sub
adc
pushf
js
mov
sub
jmp
dec
mov
aas
sub
lods
jnp
push
sahf
popf
inc
imul
adcl
mov
adc
std
punpcklwd
sbb
loope
leave
add
stos
es
int
cld
data16
mov
dec
test
dec
or
jb
call
or
das
inc
subb
mov
jg
stos
xchg
pushf
adc
inc
inc
adc
int3
into
mov
mov
repz
insl
pop
push
inc
nop
enter
cmp
gs
dec
mov
sub
leave
repz
in
pusha
xchg
lods
sbb
loope
or
out
xor
jmp
and
xor
cmpsb
pop
in
mov
cmp
idivl
sub
int3
arpl
fisttpll
and
jbe
push
lret
push
scas
ficoms
gs
cmpsb
and
decb
out
mov
sahf
out
jmp
in
lret
mov
xor
ss
pop
inc
jno
xor
dec
clts
push
aaa
adc
gs
cmp
push
push
pushf
jo
push
inc
popf
cmp
ds
push
xor
push
xor
outsb
add
sar
rcl
pop
sarl
insl
jnp
inc
mov
ja
mov
stos
lcall
cmp
ljmp
xor
int3
xchg
jl
rdmsr
pop
leave
call
outsl
sbb
pop
test
scas
sbb
jecxz
outsl
add
stos
xchg
xchg
push
adc
mov
pop
lock
mov
mov
movsl
data16
clc
mov
scas
cmp
jne
pop
in
mov
mov
aaa
ljmp
cmp
aaa
add
sbb
aaa
mov
cwtl
aam
jge
xor
fbstp
mov
jge
sbb
out
cmpsl
mov
ja
add
mov
push
push
scas
xor
mov
mov
pusha
scas
aam
ret
test
sbb
rcrl
and
xchg
aam
ds
ds
mov
ja
jbe
mull
aad
mov
outsl
ljmp
inc
push
pop
and
cld
leave
jl
int
hlt
xor
mov
scas
xor
sub
jne
aas
sbb
mov
cltd
dec
je
loope
insl
xchg
adc
lods
cmpsb
pop
cmc
dec
mov
lds
or
mov
push
or
mov
jle
int
or
scas
aam
popa
dec
shrl
sub
lods
sbb
inc
inc
adc
xor
pop
addr16
adc
movsb
push
jbe
rclb
inc
dec
in
mov
enter
sti
jno
fwait
in
or
mov
pop
pop
xchg
out
mov
bnd
hlt
cmpl
xlat
movsl
test
and
pushf
xchg
push
in
and
mov
push
inc
ret
fldl
cmp
in
cmp
aad
cmp
popf
mov
call
popf
pop
outsb
xchg
push
popf
int
sub
sbb
adc
dec
sarb
sub
jno
inc
cmp
pushf
test
add
cmpsl
int
call
filds
js
in
outsb
cmp
mov
xor
ljmp
in
test
inc
ljmp
jecxz
shrl
loope
xchg
and
in
fnstcw
inc
sbb
repz
xorl
jno
pop
mov
popf
inc
daa
insl
mov
pusha
hlt
pop
lods
mov
dec
jne
mov
decb
push
fistps
js
test
and
jb
push
sti
sub
mov
clc
push
mov
stos
jns
js
xor
addr16
push
adc
cld
mov
and
loop
outsl
pop
les
jmp
roll
push
imul
jmp
in
mov
xor
out
and
pop
mov
adc
int3
push
gs
mov
pop
mov
jmp
add
xor
push
inc
xchg
sbb
rcrl
dec
mov
pop
dec
in
adc
mov
pop
pop
ret
mov
push
add
stc
mov
shl
xchg
mov
es
pop
dec
gs
shlb
inc
cmpsl
rorb
xchg
pop
je
xchg
and
and
leave
sbb
inc
loope
decl
out
mov
rcll
insb
and
stos
xchg
outsb
push
int
add
cmp
mov
out
pop
lock
fdivrs
jb
add
imul
xchg
dec
out
dec
push
aam
filds
gs
sysexit
cli
movb
imul
hlt
dec
sti
mov
inc
mov
jecxz
push
test
jl
popf
mov
fsubrs
iret
insl
iret
sub
pop
stos
jb
push
pop
enter
push
add
mov
adc
sbb
out
mov
mov
inc
pop
cld
int
pop
cmc
fsubrs
es
movsb
inc
mov
jnp
rcrl
aam
insb
xchg
adc
mov
je
cmp
lahf
dec
call
into
outsl
lahf
and
jae
cwtl
jmp
add
mov
test
pop
pop
jo
jl
out
mov
pop
jg
xchg
aad
xor
enter
int3
add
out
in
mov
pusha
jnp
inc
push
sbb
adc
int
mov
dec
imul
jne
pop
jg
xchg
test
outsb
je
ucomiss
cwtl
sbb
testl
sarl
add
mov
jno
fisttpl
pop
push
cltd
loope
pop
icebp
cmp
xor
ja
js
mov
xor
aam
jle
or
inc
push
dec
inc
scas
lret
pop
daa
fwait
cld
mov
nop
mov
loopne
sbbb
inc
jge
sbb
dec
add
jl
fstl
dec
jbe
cmp
mov
mov
push
xor
testl
repz
pop
mov
outsl
inc
or
cmp
je
aaa
sbb
add
pop
cmp
sub
out
test
mov
clc
jmp
or
sub
pop
test
mov
imul
lret
test
or
xchg
nop
es
adcl
cmp
movb
xor
rorb
mov
mov
jne
test
fdivrl
mov
insb
sbb
mov
fisttps
inc
sbb
out
arpl
dec
cli
or
lea
adc
outsb
xor
loope
rcr
sbb
xor
and
cmpsb
xor
and
push
xorl
xor
pop
shrb
cwtl
push
sub
push
fstpl
mov
pop
mov
inc
sub
adc
inc
mov
add
je
cli
gs
cmpsb
inc
adc
popf
andl
stos
inc
pop
sbb
sbb
sub
cld
jl
inc
leave
in
out
push
mov
inc
loope
sub
cltd
cltd
jb
flds
pop
cmpsb
jp
mov
fnstenv
test
mov
sub
and
pop
lcall
daa
addb
dec
out
mov
jo
adc
add
dec
rol
jnp
push
in
adc
mov
cmpsb
mov
lds
loopne
inc
sbb
fdivrl
lret
stos
ret
and
add
ret
aam
dec
jp
push
cmp
and
and
lods
push
fists
ficompl
out
mov
or
lods
pop
fidivl
push
clc
ljmp
adcb
sbb
das
testl
minps
dec
inc
xchg
inc
push
int3
outsl
jmp
xchg
cmp
inc
mov
aas
loop
xor
cmpsl
mov
decb
add
loope
xor
lds
lret
cwtl
xor
int
xchg
push
mov
lods
int
imul
es
pop
das
shlb
rcl
sub
adc
nop
imulb
add
lret
push
aaa
dec
push
pop
mov
test
sub
jl
or
mov
cmc
out
popa
adc
xchg
lret
or
outsl
insl
jl
cmove
mov
push
scas
clc
ds
mov
loop
sbb
shll
inc
cwtl
cmp
dec
pop
cmp
mov
and
pop
pmulhw
cwtl
cmc
hlt
lods
loop
inc
repz
add
jnp
jmp
mov
adc
imul
add
mov
aas
sub
push
inc
imul
jmp
push
mov
mov
sbb
add
add
subb
sbb
aad
enter
or
pop
push
jl
test
scas
sbb
jg
sti
loope
mov
push
adc
sbb
jo
cld
adc
out
mov
arpl
dec
outsl
sbb
mov
in
push
ret
or
and
inc
jne
sub
and
pop
xor
mov
stos
mov
aas
loop
fildll
pop
lock
test
mov
mov
dec
shll
push
lods
insl
ljmp
mov
fcomps
pop
shlb
das
insl
cmpsl
int3
cmp
ds
push
cmpsl
pop
not
mov
sub
cmp
xchg
mov
movsl
mov
pop
cmp
mov
mov
push
jecxz
imul
ja
add
cwtl
pop
jo
addb
mov
mov
xor
xchg
leave
scas
add
dec
popa
lds
das
sub
daa
ret
mov
pop
jae
or
or
insb
xlat
and
mov
inc
loopne
cltd
inc
push
icebp
leave
and
adc
mov
div
movsb
sbbl
sbb
lcall
sub
je
jg
lcall
shrl
imull
sub
bound
pop
stc
push
movsl
sti
push
mov
ss
dec
add
fdivrs
mov
add
push
mov
push
and
cmovle
push
sub
gs
aam
inc
lock
cmp
cmp
jmp
adc
dec
jb
sbb
mov
pop
or
mov
in
xchg
mov
push
cmp
adc
ret
jbe
mov
mov
mov
rorl
pop
lods
aaa
inc
jmp
pop
xorl
rorl
sub
mov
adc
or
stc
mov
std
push
fistpll
mov
rorb
cmpsb
fnstcw
je
mov
lret
ds
dec
xchg
aam
mov
cmc
mov
js
push
inc
fistpll
andb
jno
xor
lret
mov
data16
loope
push
fwait
mov
call
loop
cmpsl
jle
sub
dec
dec
push
xor
dec
xchg
or
enter
enter
push
dec
pop
pushf
dec
adc
loop
and
inc
pushf
xor
or
pop
adc
jae
cmp
test
inc
fldl
xor
ja
fstp
data16
flds
ss
mov
jo
add
mov
cltd
mov
xchg
or
and
das
enter
dec
int
cmpsb
or
sub
jl
icebp
add
xlat
test
or
scas
sbb
lock
sub
jno
xor
adc
and
insb
pop
test
jecxz
dec
repz
xor
jns
mov
repz
push
mov
inc
aaa
lret
int3
sub
pushf
scas
je
dec
cmp
mov
cwtl
push
lods
fldt
xor
cmp
sbb
jecxz
mov
xchg
xor
mov
pop
inc
fsubrl
inc
jp
ja
outsb
pop
pushf
pop
divb
cltd
popf
cmpsl
outsl
inc
xchg
fwait
inc
pop
mov
xchg
jnp
pop
mov
xor
movsl
xor
or
mov
dec
mov
insl
nop
adc
insl
mov
sbb
lahf
pop
jmp
or
daa
popf
mov
sbb
or
out
rorl
fbld
mov
mov
sub
jne
pop
pop
or
js
adc
dec
jb
daa
inc
and
jge
in
adc
test
xor
aad
xorl
sbb
jg
lds
and
pop
mov
cmp
push
cmp
sti
dec
xchg
aaa
jmp
mov
add
jne
or
fistpll
mov
xor
sub
jmp
out
stc
fs
inc
rcl
cmp
inc
add
mov
pop
cmp
xor
cmc
loopne
jae
out
push
rcrl
cli
fstps
outsb
insb
sbb
stc
jne
pop
test
xchg
movsb
push
ss
push
mov
add
movsl
nop
cmp
cmpl
ret
ds
imulb
cli
mov
and
fbld
into
dec
and
push
xchg
push
int
pushf
pop
arpl
jns
adc
bound
out
out
leave
dec
std
push
pop
into
push
push
sub
fsubrs
frstor
xchg
test
adc
stos
adcl
stc
inc
fisttpll
mov
test
inc
and
lahf
sub
fs
rclb
stos
mov
rcrl
leave
int3
jae
sub
ds
mov
cs
push
rcpps
inc
enter
mov
rolb
cwtl
test
mov
xchg
loope
das
xchg
test
mov
aad
mov
and
in
mov
inc
ret
add
xchg
mov
and
outsb
dec
lcall
mov
xor
cmc
and
ja
dec
xor
je
xor
mov
add
or
out
lret
addr16
xchg
push
mov
pop
sar
and
inc
jecxz
cmpsb
sbb
loop
mov
pop
pusha
lcall
xchg
add
add
add
add
mov
add
sbbb
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
rolb
pop
add
add
add
add
add
add
add
inc
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
insb
ret
jl
add
nop
ret
mov
add
add
ret
add
add
lcall
add
ret
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
test
mov
mov
add
jp
test
push
dec
jae
loope
jne
arpl
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
movsb
add
dec
push
sub
add
ret
push
out
add
xchg
xor
imul
add
adc
stos
fs
cmp
seto
push
xchg
dec
mov
or
mov
lock
adc
push
push
sbb
xor
jo
test
rorb
mov
sbb
cs
add
arpl
and
jg
lods
xchg
and
mov
adc
sbbl
push
loop
add
adc
mov
orb
add
sub
jns
fimuls
pusha
adc
add
lea
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
push
cli
rep
fistps
jb
outsb
outsl
int3
jbe
mov
popa
sbb
in
test
pop
cmpl
shlb
or
add
dec
fistpll
cmp
and
call
test
cmpl
enter
mov
cmp
adc
dec
add
call
add
sub
lea
popf
cmp
and
xchg
popa
inc
and
call
mov
cs
setnp
or
add
dec
adc
fmuls
or
and
ror
mov
icebp
int3
mov
rcll
push
push
sub
jg
lea
push
hlt
xor
lods
jmp
sbbb
les
push
nop
aas
and
push
test
sub
xor
lds
mov
xchg
js
jne
inc
mov
dec
add
add
movb
jmp
les
nop
xchg
add
rcrb
push
sbb
sbb
adc
dec
mov
add
pop
pop
pop
pop
ret
bound
push
call
jmp
adc
push
add
push
and
xchg
cld
dec
test
xor
dec
sti
push
xchg
roll
push
push
sti
scas
rol
push
les
xchg
inc
inc
stos
pop
orl
add
in
subl
jo
test
int3
pushf
addr16
sbbb
ret
je
cli
ja
cmp
rsqrtps
repz
sub
loopne
clc
lods
icebp
fninit
fisubrl
sub
or
cs
jmpw
sbb
push
aaa
adc
add
add
sti
inc
test
decb
xchg
cwtl
jle
sbb
call
jne
mov
add
pop
dec
stc
adc
jmp
jbe
adc
data16
adc
ret
or
hlt
and
nop
cld
leave
call
push
test
in
cwtl
pop
push
cmp
or
pop
incb
pop
jmp
pop
mov
movzwl
pop
test
jns
jne
xchg
insb
xor
inc
pop
adc
ss
idiv
cmp
sub
xor
add
mov
add
cld
sub
cmovp
enter
arpl
cmp
mov
dec
pop
or
rclb
xchg
push
mov
add
cli
movb
cwtl
inc
jmp
and
pop
mov
xor
xor
push
dec
pop
mov
pop
jmp
notb
mov
sub
jg
add
push
push
call
mov
push
aad
imul
pop
std
sti
ljmp
inc
repz
jae
push
jge
sub
cmpsl
dec
rcll
add
movsl
mov
ds
push
adc
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
pop
rcrl
push
lock
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
orl
ret
mov
pop
das
and
fldcw
mov
hlt
pop
push
dec
or
cmp
in
push
in
mov
inc
je
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loop
add
out
out
sti
test
pushf
pushf
fimull
mov
or
and
nop
popf
add
fwait
push
shl
xchg
orb
mov
push
je
and
or
mov
push
dec
or
ror
jle
test
and
push
push
push
push
dec
call
sbb
mov
test
cltd
aad
or
mov
and
mov
adc
xchg
inc
adc
dec
sbb
shlb
je
enter
mov
jmp
push
inc
adc
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
adc
push
jmp
pusha
pop
add
jns
lock
jno
xchg
cmp
pop
push
dec
sbb
xchg
add
inc
xchg
lods
jmp
inc
popf
push
xlat
sub
mov
sbb
sub
mov
shr
push
add
sbb
dec
or
push
inc
jmp
pop
ss
pop
and
pop
jmp
sbb
loopne
inc
cmp
mov
jl
sbb
iret
shr
push
loope
push
lea
push
je
add
aad
add
add
mov
sbb
dec
mov
dec
decb
imul
and
xchg
or
and
hlt
scas
mov
mov
mov
fidivs
pop
cmpsb
mov
sub
push
push
fsubrs
cmp
jne
inc
jno
pop
insb
imul
and
jb
into
sahf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
shll
xchg
xor
popa
addr16
outsl
js
loopne
divl
fwait
adc
cmp
ss
aas
add
push
es
dec
loopne
fcomps
outsb
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
sbb
bound
lret
and
mov
and
inc
adc
inc
dec
jne
xchg
pop
dec
pop
or
dec
push
lods
dec
sub
xlat
dec
insl
and
jecxz
addr16
or
sub
mov
cmp
movsl
std
xorb
mov
xchg
notl
or
and
cltd
push
inc
or
xor
stos
cltd
mov
je
mov
in
cmc
xor
mov
or
sbb
pop
push
test
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
add
pushf
daa
add
mov
add
mov
ret
sub
add
add
inc
add
ret
and
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
rolb
or
add
jo
add
or
add
cwtl
add
mov
add
shrl
add
iret
add
add
add
dec
out
mov
