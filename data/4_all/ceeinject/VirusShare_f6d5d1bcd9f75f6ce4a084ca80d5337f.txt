call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
incb
fisubs
push
je
push
testl
hlt
dec
in
xchg
test
push
incb
fisubs
mov
and
aam
les
pop
in
xchg
dec
test
push
movsb
push
push
out
divl
adc
add
xor
and
aam
les
daa
lret
jno
pop
cli
insb
lret
mov
sahf
pop
mov
add
mov
movsb
push
and
mov
pop
xchg
movsl
cmp
in
clc
fs
sbbb
shlb
sub
mov
pop
xchg
jo
out
pop
imulb
in
xchg
dec
xor
lret
jle
outsb
or
mov
fwait
or
dec
adc
in
adc
adc
lret
or
sahf
aam
jns
ret
add
stos
mov
cmpsb
push
stos
jnp
adc
and
jle
cmpb
in
insl
negl
cmp
ds
dec
mov
stos
add
test
lds
lret
lahf
scas
fiadds
mov
into
mov
int3
or
jmp
fs
adc
add
xor
and
aam
les
inc
in
xchg
test
mov
movsb
movhlps
sub
stos
js
dec
iret
push
bnd
adc
outsb
xchg
pop
mov
icebp
pop
in
sub
jno
bound
xchg
push
mov
mov
mov
cs
jns
jp
and
sbb
lea
xor
and
aam
les
pop
in
xchg
test
mov
movsb
push
push
incb
fisubs
mov
and
aam
les
pop
in
xchg
test
mov
movsb
push
push
loope
iret
pop
inc
int3
into
xor
cmp
inc
mov
sbb
push
cmp
bound
mov
sub
cmc
mov
das
aam
je
sub
sbb
or
inc
pusha
xor
jmp
mov
or
cmc
pop
pop
notb
pop
fs
push
mov
xchg
mov
movsb
sbb
leave
cwtl
sahf
sub
bound
test
jle
jnp,pt
pushf
repnz
pop
test
or
scas
push
mov
mov
je
mov
imul
inc
or
rorb
mov
iret
movsb
int
loopne
popf
xchg
lahf
mov
inc
mov
sti
mov
aas
fwait
inc
pop
sub
inc
aad
lcall
scas
rcrl
jp
xor
orb
call
iret
ror
xor
popf
ret
xchg
dec
dec
aad
push
enter
fisubrs
test
and
popa
xchg
pop
pop
xor
jno
xor
adc
cmp
outsb
sahf
addr16
lret
ljmp
je
inc
addl
popf
mov
pop
sbb
in
std
mov
inc
or
aaa
in
enter
add
dec
ror
outsl
test
stc
movsl
cmp
xor
notb
fs
and
stos
fstpl
aas
jo
adc
adc
in
pop
out
mov
pop
lds
loopne
popf
cltd
faddp
jne
xchg
loope
es
jl
xlat
movsl
test
out
inc
cwtl
sbb
jle
popa
imul
aas
fdivs
addr16
inc
int3
std
sbb
outsb
adc
xchg
jbe
popf
push
imul
cmp
xchg
sub
test
clc
nop
testl
mov
pop
fs
popa
add
pop
rcrb
or
stos
fcmove
cmc
jg
aam
fstl
test
push
jp
aad
test
pop
sbb
mov
pop
mov
add
shrl
sub
and
out
push
cmc
mov
lock
push
mov
jg
and
ficoml
push
push
inc
pop
lcall
scas
enter
add
jns
aaa
mov
jge
iret
insl
idivl
adc
aas
jns
adc
cmp
xor
je
in
sbb
xor
loope
in
jns
add
sub
cmp
adc
out
cmp
roll
cltd
notl
pop
mov
xchg
inc
add
cmp
lret
add
and
mov
push
nop
mov
ja
mov
imul
jmp
in
ret
gs
ret
nop
mov
aam
and
fdivrl
cmc
sbb
and
in
pop
dec
in
adc
jecxz
repnz
faddp
test
xor
or
hlt
gs
in
pop
push
xchg
push
clc
add
push
nop
mov
push
sub
jno
inc
ja
adc
lcall
sub
lods
dec
sarl
mov
ret
jnp
xchg
push
or
cli
fldl
jo
into
mov
test
je
out
in
push
cltd
cmpsb
dec
lods
jb
jge
stos
push
and
mov
xchg
das
mov
fsubl
aam
fdivrs
push
fdivrl
sahf
arpl
das
enter
pushf
loopne
jb
xchg
mov
gs
xchg
inc
fisttpl
in
add
cmpsl
in
std
in
rcrl
mov
out
lcall
add
push
or
dec
fisubs
mov
mov
jnp
test
adc
push
lods
inc
mov
ss
fcmove
outsb
ss
hlt
andb
sub
adc
cmpsl
sub
push
mov
int
sahf
rorl
xlat
add
xchg
xchg
mov
scas
cltd
and
mov
push
push
dec
ljmp
bnd
cmp
ret
adc
mov
mov
adc
dec
std
pop
imul
cwtl
pop
ja
cwtl
mov
mov
imul
push
js
mov
lahf
cmc
mov
pop
iret
lahf
pop
cs
daa
add
jg
adc
mov
insl
xchg
rcll
mov
push
dec
faddl
xlat
aas
sub
into
pop
in
movsl
hlt
outsb
xor
icebp
shlb
ds
xor
xchg
lock
aam
movsb
or
icebp
lods
std
pop
popa
lock
and
dec
cld
cmpxchg
outsl
xchg
ss
dec
xchg
mov
in
arpl
cmc
lret
call
neg
pop
fiaddl
bound
inc
test
and
int
jbe
dec
mov
arpl
pop
iret
in
es
pushf
xchg
imul
scas
out
gs
push
mov
mov
stos
stos
clc
xchg
int
xor
mov
inc
push
test
mov
incb
sub
mov
jp
dec
les
iret
adc
shl
popf
pop
pushf
jno
pop
in
xchg
fidivrs
xchg
mov
dec
lods
mov
sbb
lock
icebp
insl
sbb
push
xchg
pop
mov
add
lret
mov
mov
sub
mov
cmpb
dec
ja
loop
and
mov
enter
add
test
jnp
out
jg
sbb
mov
and
xor
pop
shrl
imul
les
mov
adc
fisttpl
dec
sti
or
mov
rcll
mov
cmp
xor
xor
pop
xchg
out
pop
adc
movsl
and
cmp
or
and
inc
das
iret
and
sbb
push
test
and
test
xchg
cltd
inc
cltd
movb
jp
test
shlb
insb
pop
cmp
fucomi
xchg
jmp
aad
rcrl
cs
sbb
pop
push
cwtl
xchg
adcb
mov
popa
lret
movsl
mov
ret
mov
leave
cmp
cmp
or
mov
jg
lds
jge
xchg
xchg
lcall
mov
das
andb
call
push
imul
ret
add
lahf
bound
jns
fwait
jo
xor
adc
or
stos
jp
bnd
and
aad
cmp
in
andl
jge
mov
adc
jle
inc
test
ds
add
das
mov
mov
push
xor
pop
ret
aas
cwtl
cltd
push
push
rol
cs
rep
dec
mov
or
lret
and
push
pop
mov
mov
lret
popa
mov
out
mov
out
pop
out
popf
subb
push
cld
mov
fiaddl
out
les
adc
leave
push
pop
pop
xor
pop
cwtl
adc
rcrb
sbb
fldenv
notl
lods
mov
fnstsw
sti
movsb
ljmp
loope
adc
das
mov
in
gs
mov
xchg
addl
adc
into
fwait
push
push
mov
ljmp
cltd
mov
lahf
in
repnz
jl
gs
dec
mov
leave
jge
adc
cmp
fnstsw
jl
dec
or
inc
dec
xchg
jbe
fildll
insl
dec
fwait
inc
scas
loope
icebp
pop
jbe
dec
pop
test
jmp
and
pop
cmp
dec
add
jae
mov
icebp
rorl
lods
iret
scas
dec
cmpsl
arpl
cwtl
fldcw
xchg
cmpsb
mov
push
mov
xor
mov
insb
xor
aam
pusha
enter
xchg
jns
push
push
fimuls
push
adc
call
cmp
xor
lret
out
mov
xchg
shl
out
mov
push
or
call
loopne
pop
cmpsb
jb
or
push
arpl
mov
xchg
xchg
jecxz
ret
and
xor
jnp
pushf
adc
movsl
ds
lock
jle
xchg
mov
cmc
xlat
mov
mov
lcall
add
inc
aam
andb
push
sbb
cli
rclb
push
int
jle
mov
roll
int
push
xchg
scas
or
wbinvd
aaa
push
adc
mov
pop
xchg
test
pop
cmp
aam
imul
adc
lds
jns
and
jae
and
push
dec
mov
add
push
xchg
mov
sbb
test
clc
jmp
fisttpl
daa
aas
fwait
sbb
scas
mov
ret
cld
push
push
adc
xchg
imul
mov
mov
mov
in
je
bound
es
test
dec
jle
push
add
jmp
mov
sbb
fldcw
or
aaa
in
jmp
fwait
enter
jge
aaa
or
inc
mov
outsb
fwait
notl
in
fs
jge
insl
adc
push
push
mov
inc
jecxz
aas
loop
outsb
out
or
dec
pop
mov
fdivrl
lods
and
stos
out
add
stc
pop
jg
stc
sbbl
lds
out
inc
in
mov
push
sub
ds
icebp
cmp
cmpsl
lcallw
pop
pop
add
shrb
adc
cmp
and
and
dec
repz
xchg
pop
sysenter
mov
inc
mulb
xchg
loop
cmp
jb
aad
add
cs
xchg
xlat
and
fmul
or
sbb
clc
shlb
rorb
mov
ja
aad
aaa
mov
dec
cwtl
jnp
scas
pop
and
addr16
fildll
mov
daa
inc
movsb
popa
sbb
and
and
fcmovb
add
push
clc
js
repnz
push
xor
or
or
cmc
fistpll
jg
push
sti
rcll
sbbl
jnp
std
xchg
ds
sbb
dec
push
lods
mov
adc
fadd
cld
mov
push
fs
enter
or
lock
cmp
shll
sti
dec
pop
test
mull
fcom
inc
sub
jbe
xor
addl
mov
mull
adc
xchg
or
pop
mov
add
int3
adc
push
mov
mov
imul
rep
iret
inc
mov
insl
inc
in
xor
scas
loop
mov
rcll
inc
in
cli
in
fimull
inc
out
jp
cmpsb
rcl
lea
xlat
std
bound
xchg
leave
addr16
jecxz
xchg
add
push
inc
roll
rcrb
sbb
dec
int3
pop
in
cmp
out
mov
addb
xor
or
xorl
movsl
popa
sbb
test
xlat
in
repnz
sbbl
test
lock
jmp
dec
mov
jge
fxch
leave
mov
nop
mov
jae
cmp
push
fadd
out
mov
and
jp
or
fwait
xlat
mov
inc
rcrb
pushf
test
imul
or
out
jns
ret
or
negl
movsl
fidivs
popf
mov
lock
test
nop
aad
imul
mov
push
outsl
xchg
xor
clc
jecxz
arpl
ljmp
push
stos
push
sahf
mov
dec
xor
dec
cmpsb
jecxz
mov
js
sub
cmpsl
inc
mov
mov
pop
or
into
cmp
or
add
cmc
mov
std
mov
jae
cmpsb
dec
iret
js
aad
lock
mov
xor
sbb
stc
in
mov
sub
inc
and
rorb
xchg
pop
xlat
push
and
pop
out
or
add
inc
aaa
in
cmp
mov
cwtl
adc
data16
sarb
shrl
pop
dec
movsb
sub
dec
and
mov
inc
sbb
or
stos
xchg
add
sbb
aam
js
sbb
adc
cli
int
dec
out
lea
add
fadds
orl
cs
stos
adc
sahf
adc
sub
div
xchg
in
push
add
cmp
cmpb
jbe
lret
adc
enter
ret
or
dec
pop
xchg
push
inc
lcall
push
pop
rclb
jg
sub
call
dec
leave
pushf
add
fimuls
sbb
jg
scas
mov
repnz
stos
cwtl
inc
ret
mov
ss
sbb
add
outsb
daa
jmp
xchg
sub
cmp
adc
mov
lods
cmp
xchg
jnp
outsb
rcr
jmp
nop
lods
sbb
imull
stc
cmp
sbb
aam
mov
lods
mov
inc
xor
iret
adc
mov
xor
inc
call
xor
mov
dec
neg
mov
cmp
and
in
xchg
lods
adc
dec
lea
icebp
add
mov
orb
aaa
jp
fs
xchg
arpl
jl
imul
adc
add
addr16
arpl
scas
leave
dec
out
xchg
cmp
xchg
dec
jle
rcll
xchg
dec
cmpsl
xchg
out
ficoml
outsb
adc
shlb
pop
ljmp
sbb
push
cs
dec
out
mov
fistpll
adc
js
xor
xlat
cli
jecxz
cld
insl
lea
fildl
push
sub
movsb
inc
fld1
ret
inc
inc
pop
sti
test
sub
cli
pusha
cltd
rorb
mov
mov
or
pop
add
fnstenv
sub
jg
ret
cwtl
sbb
pop
and
push
mov
dec
pop
sbb
adc
pop
pop
sbb
lods
pop
cs
aad
mov
cld
leave
hlt
mov
insl
call
mov
out
subl
sarb
aas
mov
mov
add
shrl
sahf
adc
push
jmp
ja
fwait
pusha
test
push
fwait
or
fs
imul
popa
dec
mov
mov
push
xchg
cmpsl
push
mov
mov
push
dec
sbb
out
shrd
fisttpl
ljmp
sbb
adc
mov
ret
lret
fmuls
mov
sbb
int
ds
sub
iret
push
add
scas
cmp
je
mov
mov
and
mov
cmc
ret
std
lods
fwait
xchg
mov
jle,pt
mov
mov
xchg
jecxz
mov
pop
sub
sub
push
insl
and
stos
mov
insb
iret
enter
jmp
shll
cwtd
mov
sbb
imul
jecxz
call
lock
pop
push
fscale
pop
inc
mov
jb
ljmp
enter
or
sub
shlb
imul
adc
nop
sub
dec
stc
mov
lods
mov
jo
mov
mov
pop
int3
decb
cmp
mov
fstpt
imul
int3
in
pop
mov
cmp
stos
xchg
data16
dec
test
cmp
or
daa
push
cmp
and
out
xor
or
or
sub
into
lret
xchg
mov
mov
mov
in
lret
movsb
repz
insl
ljmp
clc
in
lret
aaa
lds
adc
sbb
das
pushl
fbld
push
adc
nop
movsl
es
and
inc
add
cmp
test
scas
pusha
test
fnsave
jnp
dec
inc
repz
cli
cmpsl
xchg
js
aaa
mov
iret
lret
push
push
pop
fisubl
test
fnsave
and
lods
mov
add
mov
adc
test
xchg
shll
leave
push
fs
cltd
add
sbb
sub
cmp
and
sti
dec
sti
mov
fucomi
loopne
lods
mov
test
jo
dec
rclb
xchg
xchg
das
in
inc
int3
loop
and
sub
mov
sarl
mov
and
or
mov
cwtl
fisubrs
sub
mov
pop
shll
push
iret
add
dec
xchg
dec
fisubrl
daa
xlat
dec
test
jge
sti
dec
pop
jnp
mov
scas
movsl
mov
mov
lahf
paddq
scas
std
push
mov
mulb
aas
cmp
les
dec
loop
sarl
inc
or
aad
mov
cwtl
push
sub
cmc
xlat
mov
call
xor
jp
push
add
inc
inc
ds
data16
xor
mov
push
jns
push
cltd
cmp
push
jno
popf
imul
movsl
movsb
jnp
fstpt
test
pop
out
inc
inc
mov
bound
pop
sar
add
lahf
jns
dec
pop
fsub
mov
inc
int
jne
ret
xchg
xor
and
sbb
xchg
jge
rorl
imul
mov
lret
jns
pop
inc
mov
or
pop
pop
jae
mov
pusha
sti
pop
xor
movsb
jbe
les
hlt
push
sub
out
cmpl
mov
mov
mov
push
enter
lahf
or
dec
fcomps
mov
aaa
shrb
pop
pop
jno
mov
cs
adc
mov
xlat
xchg
insb
mov
out
ds
mov
pop
mulb
pop
lret
push
into
push
sahf
pop
mov
test
inc
repz
mov
inc
leave
adc
ljmp
sarl
mov
push
jne
jle
std
pop
mov
test
xchg
loope
arpl
jg
fwait
mov
nop
int
jb
aaa
pop
and
push
inc
popa
mov
insl
adc
inc
mov
sbb
adc
and
cmp
daa
adc
or
dec
and
xor
dec
jecxz
cwtl
sub
mov
sahf
adc
shlb
fldenv
sahf
fisttps
jo
out
call
ds
sahf
cmp
push
dec
pop
bound
mov
xchg
sub
dec
scas
jns
enter
loope
sub
cmp
and
inc
dec
pop
cwtl
fmulp
dec
bound
push
fs
and
xchg
jp
mov
adc
mov
cld
inc
jb
xchg
add
lahf
in
mov
aad
mov
jecxz
pushf
push
outsl
bound
sbb
mov
lea
push
inc
ret
mov
sbb
inc
js
mov
in
jae
in
idivl
sub
outsb
xor
leave
xchg
fadds
ja
add
aaa
rorb
xor
dec
push
dec
in
and
bound
addr16
leave
jp
arpl
out
std
adc
hlt
test
push
xchg
dec
mov
mov
loopne
les
popf
lret
iret
iret
and
fs
fwait
adc
mov
jge
push
shll
sarl
pusha
jns
lcall
sbb
adc
shlb
mov
and
pop
jg
cs
insb
stos
std
cmp
fld
adc
cmp
jo
adc
mov
out
js
inc
add
addr16
je
sahf
pushf
addr16
xchg
inc
stc
jb
mov
cltd
sub
fiaddl
in
add
cltd
inc
and
mov
icebp
or
fdivrl
lock
jnp
mov
dec
testb
push
jecxz
ljmp
rol
bound
loopne
test
stos
in
xchg
or
jo
adc
fbld
adc
enter
mov
jmp
ljmp
and
mov
cmp
push
enter
movsb
mov
into
jle
jb
xchg
jge
stos
and
mov
and
js
bswap
dec
lret
insl
lods
arpl
mov
or
mov
push
aad
test
loope
dec
stos
inc
pop
std
repnz
xchg
out
push
ss
dec
sub
mov
jmp
ret
fcoms
cwtl
jno
aam
out
stc
or
xor
pop
dec
fiaddl
fisttpl
pop
and
sub
mov
cs
pop
mov
jg
and
inc
inc
stos
sbb
inc
mov
ds
sub
ja
jnp
lods
imul
sbb
mov
cmpl
insb
ss
movsb
pop
or
sbb
mov
popf
jge
fldt
xor
add
inc
into
cltd
jb
jp
les
or
mov
xchg
sbb
fdivl
and
mov
sbb
mov
loopne
pop
add
popa
imul
sbb
adcb
sub
and
mov
and
in
std
dec
mov
punpckldq
mov
rclb
xor
dec
push
dec
in
fnstenv
fwait
xor
loopne
je
aaa
scas
pop
pusha
add
adc
xchg
push
int
cmpsb
push
inc
call
pop
pop
dec
lock
jne
clc
and
xor
pusha
xor
or
cld
sti
xlat
add
shll
shl
jae
in
xlat
adc
int3
dec
cmp
lods
pop
mov
xchg
fwait
pop
add
and
cmp
adc
mov
shlb
hlt
sub
jle
fidivs
xchg
pop
and
mov
push
test
jl
mov
mov
insl
subl
mov
mov
xchg
les
and
cmp
cmpsl
in
mov
xchg
inc
sub
rolb
mov
int
out
mov
fs
adc
add
xor
and
aam
les
pop
in
xchg
test
mov
movsb
push
push
incb
fisubs
mov
and
aam
les
pop
in
xchg
test
mov
movsb
push
push
incb
fisubs
mov
and
aam
les
pop
in
xchg
test
mov
movsb
or
ljmp
add
xor
and
aam
les
in
jecxz
or
dec
popa
pop
jno
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
adc
and
xor
or
aaa
fadds
dec
lret
push
jp
or
sbb
cmp
cmp
lret
adc
and
xor
inc
lcall
test
push
je
or
cmp
roll
adc
and
xor
inc
adcb
je
test
xor
nop
jne
jbe
insl
xchg
dec
mov
fs
addr16
insl
and
add
or
xchg
js
mov
inc
lcall
lock
xchg
mov
rcrb
or
xor
dec
mov
aam
xchg
jp
sbb
std
mul
or
out
sub
dec
lret
inc
lret
or
arpl
fwait
push
push
push
mov
imul
push
cmc
les
sub
jo
inc
addr16
mov
out
dec
push
dec
jnp
fsubrs
mov
aad
sub
and
add
pushf
pop
insb
mov
mov
xlat
pop
pop
sub
sub
cmp
add
adc
and
xor
inc
mov
mov
xchg
jb
arpl
in
popf
cmpsb
add
xor
and
cmp
dec
std
ss
sbb
push
rorb
jg
pop
popf
push
mov
test
xor
sub
adc
iret
aas
in
push
cmp
or
pop
fwait
scas
inc
mov
xchg
push
ret
push
stos
fs
xchg
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
inc
lcall
test
push
jp
or
sbb
sub
cmp
lret
jl
leave
mov
out
clc
mov
imul
xchg
addr16
sbb
bound
mov
fwait
and
inc
dec
jge
lods
sub
mov
dec
ret
icebp
mov
adc
rcrb
ljmp
push
aam
xor
mov
stc
iret
cmp
test
mov
mull
dec
fwait
sbb
adc
cmp
push
fisttpl
enter
adc
sbb
mov
jmp
int3
test
mov
jl
cmp
push
xor
push
xor
xor
xlat
jl
push
cli
mov
mov
pop
dec
mov
stc
pop
jl
mov
xorl
gs
stos
sti
imul
xchg
xor
inc
in
pop
shr
dec
inc
dec
mov
pop
jae
stos
jg
pop
or
cmp
sbb
mov
in
std
sbbl
lea
rcrl
mov
std
or
pop
js
aaa
xchg
popf
ja
ds
jnp
mov
xor
mov
ljmp
xchg
xchg
adc
pop
add
addr16
stos
adc
xor
push
js
cltd
pop
rcrl
imul
andb
test
ja
outsl
sub
mov
push
or
dec
data16
les
dec
idivl
push
jle
mov
and
xlat
hlt
dec
je
outsl
pop
lea
outsb
pop
scas
jnp
cmpsl
inc
push
shrd
push
repz
cli
xchg
mov
movsl
or
inc
imul
repnz
dec
popf
fdivl
jmp
mov
in
loope
push
repnz
xor
and
insb
jle
sbb
lahf
imul
je
aad
inc
sbb
push
inc
hlt
dec
inc
fsubrs
rcr
xor
repz
sub
cmp
std
stos
add
jmp
mov
pop
dec
insl
xor
push
or
inc
pop
push
hlt
push
arpl
jns
pop
orb
push
mov
cs
push
aam
and
jbe
cs
fimuls
je
xor
and
movsb
push
mov
push
xor
mov
repnz
imul
push
bound
call
mov
add
in
sahf
cmp
in
loope
leave
adc
cmp
pop
pop
adc
or
or
jbe
jge
enter
sub
mov
jle
out
lea
push
and
test
xchg
sub
pop
dec
add
mov
jno
sub
xchg
dec
jl
popf
test
jne
bound
shll
loope
fwait
mov
jecxz
cltd
add
jo
cmpsb
ficompl
push
scas
daa
notb
mov
les
out
jmp
sbb
cmp
cmp
add
lahf
test
pxor
dec
clc
adc
js
or
adcl
jl
enter
xchg
shrl
pusha
ljmp
push
inc
push
add
imul
fnstenv
rcrl
xchg
fwait
rcr
pushf
outsl
ljmp
push
lret
pop
sbb
fldl
fisttpl
stc
adc
xor
inc
orb
jecxz
xlat
sbb
inc
outsb
loop
sbb
cmp
mov
xor
xchg
or
mov
movsb
cmpsl
dec
outsl
inc
sbb
and
sub
mov
cs
into
enter
faddl
adc
inc
jno
loope
jl
add
sub
cmp
dec
imul
adc
shlb
outsl
pop
add
pop
xor
adc
adc
loop
mov
xchg
add
dec
ss
xchg
mov
cwtl
add
notl
repnz
outsl
in
add
jp
push
outsl
mov
cltd
lock
cmpsb
xor
or
enter
adc
mov
movsl
push
int
jnp
cmp
pop
leave
xlat
xor
lds
jb
lahf
decl
aaa
push
push
sbb
outsl
push
test
mov
aad
push
mov
dec
ja
sbb
inc
inc
pop
push
and
push
mov
xor
mov
or
cltd
mov
sbb
lahf
inc
out
push
rorl
sti
aam
test
dec
mov
movsb
push
lea
call
or
gs
test
mov
xchg
clc
push
mov
ljmp
mov
mov
sub
fwait
cmpsl
jmp
push
push
mov
in
adc
mov
cli
xchg
das
xlat
hlt
adc
or
push
lds
mov
cmpsl
jbe
out
cmpl
jo
xchg
xor
jbe
das
or
inc
cmp
dec
or
mov
mov
and
inc
das
xor
cwtl
imul
or
out
sbb
cmp
pop
pop
xlat
xchg
out
adc
dec
push
push
sub
pop
inc
jmp
fldcw
fsubs
fidivrs
icebp
lret
sbb
fs
jo
ja
sub
test
add
cmp
in
inc
jmp
fsqrt
leave
sub
sub
pusha
je
mov
pushf
sbb
fadd
xor
sub
push
sbb
jmp
mov
dec
out
cs
aad
ja
xor
jns
cmp
gs
adc
xchg
loopne
push
pop
pop
pop
clc
dec
dec
xlat
jbe
inc
jecxz
jb
ljmp
pusha
push
push
inc
add
and
jp
pop
imul
xchg
stos
mov
mov
pop
mov
and
cmp
or
popa
xchg
lods
cld
aam
pop
insb
lds
sub
popw
jmp
dec
jmp
je
push
scas
add
js
sti
je
loop
fildl
push
jecxz
xor
sbb
cli
aaa
mov
adc
jge
repnz
hlt
ljmp
icebp
jo
sub
jmp
lcall
push
mov
push
jo
sahf
mov
lret
std
jge
pushf
int
je
adc
ja
mov
push
cmpsb
pop
pop
add
mov
out
test
jl
sub
add
mov
or
add
jle
cltd
mov
movsl
jo
mov
mov
mov
sub
mov
add
xchg
scas
mov
or
imul
sub
icebp
pop
inc
mov
xchg
mov
loopne
adcb
cltd
sbb
xlat
pop
mov
push
outsb
addl
aaa
test
out
dec
and
push
roll
pop
xchg
out
into
or
js
mov
mov
or
shlb
mov
imul
addr16
lret
jns
mov
mov
pusha
scas
jbe
sub
popf
inc
pop
shlb
loopne
and
mov
cmp
shll
stos
ja
rorl
mov
jl
pop
adc
cmp
or
in
cli
clc
cmpsl
icebp
mov
lock
aad
or
or
sub
inc
int3
add
int3
cmp
and
or
sub
or
mov
ret
xor
adc
mov
push
cmpsl
fcoms
fnstenv
pop
jp
not
arpl
jno
rorb
mov
jns
push
jbe
sahf
jns
cmpb
adc
ds
or
cmp
movsb
mov
or
dec
loope
loop
xor
jle
and
fwait
push
push
enter
adc
jl
out
mov
xchg
jl
xorl
push
adc
push
in
test
leave
dec
mov
cmp
mov
popa
push
mov
push
xor
pop
pop
mov
xor
mov
jecxz
repz
push
mov
stc
lret
and
jg
data16
pop
inc
mov
mov
pop
std
mov
arpl
xor
lock
dec
sar
ret
daa
mov
int3
pop
ja
jp
cmp
mov
scas
sbb
out
mov
inc
push
jle
mov
ja,pn
sti
scas
je
add
sbb
addb
pusha
in
mov
lea
rcrl
cmc
push
rcll
mov
sub
inc
leave
ja
fcompl
sar
scas
mov
jo
and
cmpsb
push
push
addr16
cmc
hlt
mov
mov
xchg
aaa
pop
insl
int3
cli
mov
fistpl
xorl
pusha
push
dec
push
xchg
scas
je
fnsave
into
les
ret
adc
push
cmp
jecxz
xchg
sbb
dec
das
mov
jno
icebp
stos
ljmp
in
popf
push
sbb
sub
clc
mov
mov
int
data16
mov
inc
mov
mov
outsb
sbb
loope
and
xchg
or
push
fmuls
mov
ja
cmpsl
and
add
dec
jge
push
outsb
push
sub
mov
cltd
jns
int
call
lcall
sub
test
pop
in
inc
test
adc
cvttps2pi
test
dec
mov
jo
fadds
rolb
lods
mov
pop
jo
push
jae
jge
add
leave
fstpl
push
js
sub
dec
xchg
xchg
lret
stos
sahf
int
scas
les
xchg
mov
push
lods
mov
je
or
lret
aad
roll
outsb
icebp
sub
imul
dec
mov
and
rclb
lods
jp
push
enter
repz
sbb
push
sub
ljmp
and
mov
mov
sub
pop
mov
int
std
cmp
in
int
divb
lret
icebp
repz
mov
sub
daa
scas
das
cmp
mov
inc
and
push
sbb
cmpsb
aas
stos
cmpsb
clc
fcoml
in
xorl
xor
jns
push
sahf
lret
fstps
ficoms
pusha
out
das
jno
addr16
jns
aaa
cli
and
lret
fildll
inc
shl
rcrb
lods
imul
loopne
mov
mov
sub
push
adc
test
mov
jns
jnp
imul
inc
icebp
clc
test
push
and
and
rcrl
mov
push
std
fucom
fwait
pop
js
mov
inc
xchg
add
lods
xchg
imul
inc
cwtl
xchg
pop
push
push
inc
xchg
sbb
cmp
stos
int3
pop
aam
mov
fistl
pop
addb
sti
fistpll
negl
loop
in
loope
fs
xor
pushf
mov
jl
adc
xor
dec
mov
dec
movsl
mov
repnz
std
stos
adc
xor
rorl
ljmp
lods
mov
out
adc
roll
adc
lds
push
orb
rcr
sbb
xor
pop
outsl
jno
mov
mov
popa
cmp
adc
addl
out
data16
inc
dec
cld
nop
mov
mov
divb
std
mov
lcall
pop
loop
cmpsl
xchg
or
push
sbb
out
cmp
inc
ljmp
ja
sub
movsl
daa
fwait
sub
loop
ret
js
cmp
test
push
pop
pop
mov
fwait
rorl
add
sub
pop
adc
pop
rcrb
sub
aam
icebp
mov
out
pop
fadds
dec
sbb
jne
mov
ror
in
imul
inc
cwtl
hlt
jp
mov
pusha
sub
pop
pushf
push
ficompl
cld
lods
push
sub
xor
push
cmpsb
icebp
sbb
jg
cmp
push
inc
leave
push
mov
mov
lods
mov
jo
inc
sub
out
rcr
push
mov
in
gs
roll
out
xor
imul
test
js
insb
ret
pop
cmp
inc
sub
jno
jecxz
sbb
les
sbb
mov
mov
pmullw
jmp
mov
ficoml
cwtl
mov
scas
sbb
stc
jmp
imul
xor
int
xchg
call
fdivrs
mov
das
ja
mov
ret
leave
xchg
mov
mov
repnz
mov
bnd
out
and
add
sbb
rolb
sbb
leave
js
lret
rcll
xor
and
adc
lret
cmp
push
in
jl
sbb
mov
adc
jmp
dec
cmpl
or
and
jle
add
push
add
mov
movsl
popf
jge
repnz
sbb
cmp
xor
pop
cs
data16
addr16
inc
ret
sub
rol
xor
aad
cmp
mov
mov
enter
xchg
fsub
lcall
or
out
dec
in
imul
lods
addr16
mov
cmp
and
cltd
mov
inc
push
sbb
cmp
pop
loope
dec
stos
xor
arpl
jge
test
push
lret
ja
imul
testl
enter
sub
dec
xchg
in
mov
fcoml
xchg
or
adc
shll
xchg
or
mov
cmpsb
add
rolb
roll
jo
mov
sub
mov
das
inc
or
aad
les
xor
pop
jnp
dec
scas
std
mov
stos
push
ss
lods
cmp
ret
test
adc
test
lods
imul
sub
inc
nop
stos
mov
pop
into
jne
and
lcall
jl
aam
loopne
daa
push
xchg
movsb
jl
push
mov
clc
and
mov
jns
ret
cmc
sbb
out
jmp
std
cmp
sbb
pop
jb
lret
lods
or
mov
sub
push
pop
and
gs
ret
cmc
mov
push
faddl
pop
xchg
mov
js
cli
add
jecxz
inc
sbb
ljmp
xor
hlt
and
scas
test
pushf
test
inc
xchg
and
push
jl
mov
ret
or
dec
or
cmpsb
pushf
inc
orl
inc
ret
lea
lock
std
neg
into
mov
mov
pop
adc
mov
jne
jo
jb
xchg
gs
lock
sbb
repz
push
test
mov
call
stos
sahf
mov
int3
fnsave
lods
pop
out
je
repz
bound
std
dec
adc
je
adc
rcrb
push
scas
cmp
les
add
dec
lods
dec
mov
jp
inc
leave
hlt
popf
sarb
pusha
das
cmp
adc
adc
lea
dec
stos
or
leave
call
loope
adcl
ja
imul
imul
test
test
jle
add
jno
mov
aaa
les
pop
testl
xor
test
mov
cmp
sub
test
loope
out
push
adc
lock
addr16
cmp
in
pop
in
xor
in
test
push
adc
adc
mov
fmull
or
jl
divl
xor
dec
scas
cltd
stc
dec
insb
jo
dec
push
test
js
sub
or
addr16
ror
cwtl
jns
mov
sub
mov
sub
push
push
mov
pop
cmp
mov
dec
bound
push
mov
out
insl
imul
and
cltd
xchg
repnz
pop
repz
scas
adc
xor
imul
out
and
jp
fwait
pop
sbb
fisubs
xchg
and
wrmsr
cmc
aad
lahf
push
cmpl
jne
jo
aaa
test
or
cwtl
cmp
mov
pusha
stos
push
push
ljmp
das
and
xor
mov
lret
push
jl
mov
in
in
fsts
cli
hlt
mov
loopne
add
dec
inc
cmp
iret
and
fiaddl
gs
jmp
aam
mov
mov
sub
cwtl
ljmp
ds
dec
fs
push
cmp
leave
decb
leavew
dec
jmp
jo
cmpsl
lret
mov
fwait
mov
stos
scas
push
incl
jg
xchg
pop
fnsave
dec
pop
clc
or
pop
mov
andl
jno
rclb
lret
or
and
loop
inc
lods
movsl
cmp
imul
push
jns
cmp
js
rcl
push
out
mov
and
xlat
and
push
inc
out
sub
cmpsb
pushf
jge
add
jmp
popf
test
sub
pushf
jb
cmpsb
popa
outsb
clc
shll
push
cmp
push
mov
mov
les
push
mov
mov
pushf
stos
je
add
inc
inc
hlt
push
cld
mov
loopne
xchg
imul
out
xchg
sbb
inc
pop
cli
cmp
sbb
aas
cltd
mov
data16
out
clc
cmp
and
in
popa
je
dec
lds
ss
cmp
dec
jno
jg
sbb
cmc
scas
aaa
jecxz
test
jne
test
cli
add
push
insl
gs
xchg
jb
daa
adc
push
sub
mov
shl
hlt
mov
xchg
xchg
dec
mov
adc
sbb
pushf
loopne
inc
js
cmp
mov
sbb
sbb
mov
decl
mov
mov
cmp
mov
popf
fcomi
sbb
rorl
lcall
sarb
dec
push
mov
dec
sbb
xor
jge
adc
mov
sub
bnd
jnp
and
sub
sub
xchg
fists
cmc
cmp
cmp
rcll
push
test
test
cmpsl
sti
jecxz
inc
data16
daa
leave
ret
cmp
testb
repz
incl
adc
mov
pop
je
mov
cmp
jo
out
test
inc
ss
lea
scas
add
lcall
add
loope
gs
add
xlat
pushf
imul
in
xor
ficompl
orb
cmp
cmp
adc
loope
cmc
mov
idivl
int3
mov
sbb
dec
jmp
and
mov
and
add
or
clc
jne
outsb
mov
arpl
add
sub
adc
out
or
jmp
xchg
inc
mov
push
shr
loop
jne
sub
lods
or
std
sbb
cmp
pop
jecxz
into
mov
or
sahf
repnz
cmp
nop
jo
frstor
adc
mov
dec
and
pusha
sarl
mov
adc
adc
sbb
xchg
rcrb
scas
push
inc
lahf
cmp
sub
pop
and
loop
ss
xchg
fistpl
lret
rclb
lds
test
bound
out
lds
stos
fnstsw
jns
jg
mov
jle
add
ljmp
adc
jmp
mov
adcb
mov
clc
ljmp
dec
in
mov
repnz
sub
sub
sbb
add
test
js
xor
fwait
cmp
mov
sub
in
ljmp
pushf
or
call
scas
mov
sahf
mov
pop
scas
cmc
jo
push
adc
mov
pop
adc
pushf
stos
outsb
arpl
fisttpl
gs
mov
jge
jbe
filds
lds
sbb
das
inc
lret
add
in
xchg
pushf
add
addr16
adc
test
aaa
mov
fistpl
mov
loop
sub
outsb
pop
std
or
adcb
and
lods
shrl
push
loopne
jne
cmp
cmpsb
or
jmp
scas
sub
lods
jge
mov
daa
bound
add
mov
subl
out
sbbl
fcom
adc
inc
and
adc
popa
mov
adc
and
mov
cli
outsl
fdivs
and
pop
jmp
inc
mov
push
jb
es
cmp
pop
inc
and
sbb
xor
addr16
xlat
cs
and
jo
xor
sub
sbb
xor
adc
rcl
fs
or
popf
sahf
adc
lea
cmp
pusha
and
mov
pop
sbb
mov
or
insl
cwtl
repz
pop
stos
addr16
sub
jns
add
fldt
movsl
sub
std
mov
out
jb
push
and
fistpl
xor
lret
jo
lahf
mov
mov
push
movsb
cwtl
ljmp
test
mov
sbb
addb
mov
subb
pop
dec
lahf
loop
lret
or
inc
fldt
cmp
mov
sti
es
pop
repnz
in
pop
dec
xchg
cmc
xor
sub
push
cmp
mov
jae
inc
pop
mov
movsl
repnz
adc
je
cmc
pavgb
jg
cld
dec
add
jns
push
adc
mov
fistpll
sti
movswl
fisttpl
cld
sub
push
aam
ja
cmp
mov
mulb
mov
xor
inc
fs
jno
rcrb
xor
int3
mov
test
dec
add
xchg
or
in
jne
daa
or
jbe
ja,pt
pop
inc
push
pop
lds
mov
pushf
adc
and
push
adc
add
xor
loopne
cli
xor
inc
lcall
test
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
inc
lcall
test
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
inc
lcall
test
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
inc
lcall
test
ret
jge
xchg
sub
sbb
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jo
pusha
in
push
faddl
cmp
inc
ret
gs
loop
rcrb
mov
mov
or
cld
pusha
in
push
faddl
xor
mov
jl
or
pop
rorb
sub
pop
orb
pusha
in
push
faddl
xor
mov
aam
insb
mov
jns
inc
shrl
or
cld
add
aas
jnp
dec
sti
inc
mov
fimull
leave
cmp
adc
into
pushf
stos
lahf
insb
scas
mov
and
lcall
cs
aas
shl
mov
pop
movsb
or
cmp
or
fcmovu
pop
pusha
dec
xor
mov
cmp
addb
adc
pop
mov
add
cmpsl
insl
add
mov
mov
andl
pop
mov
mov
icebp
sub
pop
mov
and
outsl
jecxz
orl
xor
mov
adc
movsl
insb
and
push
sub
jmp
or
in
push
faddl
xor
mov
jl
insb
rcrb
mov
mov
gs
mov
movsl
push
rorb
jg
test
sbbb
sbb
pop
loope
cmc
push
lock
push
cld
adc
xor
add
push
jmp
mov
cmp
lds
jns
pop
pop
mov
mov
jne
and
jl
insb
rcrb
mov
mov
or
cld
pusha
in
push
faddl
xor
mov
jl
insb
rcrb
mov
mov
or
cld
add
loopne
rclb
inc
loop
dec
inc
sahf
xor
out
lds
sub
inc
pop
loop,pn
xchg
xchg
pop
sub
je
adc
mov
mov
rcll
mov
push
mov
pusha
cs
mov
push
xor
frstor
cmp
in
mov
dec
mov
hlt
lods
sbb
push
js
out
push
adc
outsb
cmp
stc
int
xor
mov
adc
mov
and
mov
jae
dec
xor
pop
inc
out
shrl
testb
pop
arpl
pusha
inc
dec
dec
mov
or
cmp
repnz
jmp
nop
pop
clc
dec
sub
sub
out
imul
insl
mov
sbb
pop
sbb
xor
mov
add
add
or
outsb
adc
mov
and
mov
outsb
push
ljmp
bound
pushf
xor
js
adc
mov
add
cwtl
jmp
xchg
mov
add
jl
lods
jno
pushf
jae
cmpsl
sub
es
daa
xlat
inc
and
leave
jg
jnp
xchg
shr
or
cltd
jns
cmc
dec
xchg
xchg
sub
jno
push
roll
mov
push
pop
aas
lahf
cmp
sbb
outsl
push
mov
sub
sbb
jbe
loope
xor
dec
cltd
adc
mov
dec
sbb
fucomi
xchg
xor
out
pushf
out
add
in
aad
dec
inc
xchg
pushf
adc
inc
rclb
cmc
adc
in
les
arpl
ss
sbb
int
shlb
movsb
lcall
push
fimull
fldt
xor
imul
xchg
lahf
fwait
pushf
xor
imul
hlt
pop
inc
sub
cmp
das
les
sbb
rolb
inc
jl
lds
mov
and
ja
push
push
xor
sub
push
adc
rclb
scas
inc
in
cmpsl
and
mov
pusha
pop
int3
and
sarl
cwtl
xor
inc
arpl
pop
mov
adc
inc
sub
push
adc
mov
push
sbb
gs
mov
xchg
jmp
fimuls
xor
jecxz
int
sbb
push
sbb
call
xor
cmp
dec
movsl
xchg
fcompl
sbb
icebp
mov
sbb
mov
cs
push
push
leave
nop
and
popf
lret
xchg
cs
mov
in
xchg
cmpsl
sub
jl
fnsave
pop
cli
xor
mov
xor
sbb
stos
sub
addr16
and
sbb
ds
dec
inc
roll
and
scas
ss
jno
sbb
add
inc
mov
enter
ljmp
stc
mov
pop
mov
shll
cmp
xchg
shll
adc
sub
ss
inc
dec
mov
fcoms
cwtl
and
xchg
cmp
mov
call
pop
sub
fcmovbe
add
mov
jns
xor
pop
adc
xor
adc
mov
cmc
out
cmp
mov
mov
ja
movsl
add
in
push
mov
push
or
pop
xchg
insb
sub
enter
popf
ja
xchg
scas
xor
and
ffreep
add
add
cmpsl
mov
mov
ljmp
cmp
sub
mov
movsl
mov
fldt
stc
icebp
ds
cmpb
les
mov
icebp
nop
pusha
out
dec
mov
mov
sbb
nop
icebp
or
sahf
test
ret
sub
ds
insl
push
nop
test
pop
and
inc
adcb
hlt
in
push
xor
xchg
fdivrl
loop
or
mov
dec
iret
adc
and
adc
rcll
std
test
in
pusha
xchg
pop
int3
sbb
mov
push
jge
add
add
jnp
outsb
mov
pop
or
rcrb
push
mull
ret
mov
ficompl
fbstp
daa
mov
push
sbb
xchg
sbb
movl
fdivrl
test
cwtl
jnp
out
mov
pop
cmp
loop
sbb
or
push
cmc
sahf
pop
dec
push
fistpll
mov
out
xchg
jp
mov
aam
mov
jno
cld
lea
repz
jbe
cltd
jbe
scas
aam
lea
fistl
dec
push
hlt
jno
mov
lcall
or
ret
push
push
sbb
jne
pusha
int
fistps
repz
sub
fimuls
in
lods
stc
mov
lcall
mov
mov
test
sarb
test
pop
xchg
fwait
pop
xor
loop
addb
mov
mov
test
mov
jmp
sub
mov
scas
fidivl
fisttpl
xlat
ret
jmp
add
cwtl
in
cmp
cmp
pop
sbb
jge
stos
scas
push
mov
sbb
xor
lock
js
sub
push
popa
pop
xchg
shrb
fbld
std
imul
jmp
adcw
jecxz
fcmovb
jecxz
jmp
dec
daa
or
sbb
addr16
clc
cltd
cmp
fcomps
jns
sub
mov
shlb
adc
dec
lcall
pop
sti
jp
lock
lea
or
mov
and
dec
repnz
jl
cmp
inc
xchg
cmp
and
add
jo
cli
dec
loopne
push
inc
xchg
cmp
aaa
dec
iret
xor
jbe
add
sti
ficomps
or
sbb
outsb
cmp
sbb
add
ds
scas
jl
out
shl
sub
xor
hlt
add
sub
mov
adcb
subb
test
or
push
sbb
pop
push
test
xchg
jb
push
mov
xchg
ret
pop
inc
hlt
jno
popa
stos
pop
lahf
out
jl
sub
ljmp
andl
jg
jecxz
je
daa
insb
scas
inc
call
dec
out
xor
rcrb
mov
sahf
clc
pop
pop
and
in
pop
repnz
and
pop
test
aam
adc
das
adc
cmp
or
leave
ficompl
mov
push
push
sbb
imul
dec
cmpsb
cli
jns
rorb
cmp
push
das
sahf
sbb
repz
cs
fsubs
int
pop
pop
sub
push
fbstp
and
push
sub
loop
fwait
or
das
sbb
std
icebp
xor
fmul
push
into
mov
negb
cmp
arpl
mov
pop
lret
imul
sbb
shll
mov
fwait
xchg
fnsave
out
call
pop
subl
std
ss
inc
adc
loop
mov
fisubl
pop
adc
jne
jb
outsl
rorl
xchg
mov
cmc
shl
lods
pop
and
mov
add
addr16
js
jge
inc
mov
adc
add
xlat
sub
lret
jnp
es
fdiv
pop
jmp
mov
and
xlat
outsb
pop
cmpsb
push
xor
aam
xchg
adc
fcmove
dec
call
roll
in
lods
cmpsl
shrl
stos
gs
es
movsl
sub
pushf
jecxz
cmpsb
mov
fxch
ficoml
ds
and
push
orl
fstpt
inc
push
call
roll
test
xchg
adc
leave
rol
push
repz
mov
out
insb
adc
adc
movsb
sub
rolb
sub
loopne
inc
xchg
sub
repnz
popf
fld
loop
int3
sahf
jg
cwtl
ss
stos
push
imul
xchg
mov
je
test
movsb
dec
mov
add
push
enter
cwtl
std
test
sbb
addr16
cmc
shrd
jb
ljmp
test
stc
adc
add
cmp
loope
jp
notb
call
mov
dec
dec
xor
testb
fcompl
int
mov
lcall
sbb
jne
mov
lods
add
loopne
push
and
push
imul
rclb
ficoml
push
neg
lcall
imul
clc
jmp
lods
stos
mov
xchg
test
rorb
sbb
jne
ret
pusha
mov
leave
cmp
sbb
adc
ja
sti
xor
mov
daa
cli
xor
inc
fmul
mov
cmpsl
scas
cltd
in
pop
rolb
or
mov
inc
jmp
inc
pop
push
aad
jo
xchg
sub
in
loopne
lock
repnz
sbb
aas
xchg
popf
dec
dec
or
iret
stc
arpl
ljmp
or
out
mov
ja
mov
add
cmpl
loop
xor
rcll
icebp
pop
push
fsubs
cmp
xchg
dec
outsl
or
cli
push
and
jno
rcll
mov
push
adc
push
mov
jl
xchg
and
scas
cld
out
aaa
imul
inc
fimuls
pop
mov
or
test
pop
rcrb
push
jge
and
nop
cmp
leave
ss
sti
mov
sub
xor
pop
mov
mov
scas
lds
push
punpckhbw
xchg
mov
push
fcompl
test
xchg
sbb
pop
xor
adc
loopne
mov
leave
je
pop
test
mov
call
cmc
nop
dec
inc
imul
ret
movsb
in
cmp
mov
xor
aam
pop
inc
ds
pop
xor
scas
mov
push
mov
push
aaa
std
enter
push
inc
psubsw
jae
inc
mov
call
and
enter
aaa
out
loopne
push
xchg
jae
jg
inc
push
lahf
das
cld
scas
push
inc
js
loope
pop
jo
sub
bound
mov
xor
es
sub
jecxz
add
aad
dec
call
cmc
sbb
xor
push
pop
lret
pop
int3
clc
mov
xchg
push
add
push
sub
cld
or
sahf
push
cmp
and
notb
push
scas
rorl
into
cmp
pop
shl
and
xchg
shlb
movq
xlat
xchg
negb
inc
jo
push
pxor
jns
jmp
mov
dec
ret
out
jle
xor
pop
inc
shll
enter
push
jg
push
dec
scas
fnsave
pop
xlat
dec
imul
adc
outsb
sub
imul
add
add
sub
mov
or
rclb
in
mov
push
jge
adc
imul
inc
icebp
push
enter
and
dec
arpl
test
in
stc
jl
stos
lock
inc
inc
dec
jecxz
arpl
pop
pop
inc
dec
xchg
jne
mov
push
mov
xor
pop
andl
std
mov
fcomps
mov
jmp
int
jmp
into
sub
enter
arpl
aas
push
call
xor
leave
push
pop
push
sub
out
es
es
dec
push
push
shrb
ficoms
outsb
xlat
js
das
imul
mov
sbb
mov
xor
loope
fadds
jno,pn
xchg
ret
sbb
jnp
pop
xchg
push
cmp
add
jns
push
in
mov
inc
pop
das
lret
lret
ja
les
or
mov
mov
jecxz
orl
mul
xchg
xor
cmpsb
cmpsb
lahf
jmp
sbb
mov
push
jno
addr16
pushf
cmp
sub
fistps
xchg
cmp
cld
sbb
outsb
xchg
inc
cltd
enter
in
scas
loope
scas
icebp
pop
lret
scas
inc
xor
add
into
mov
loop
aas
std
lds
out
clc
xor
dec
sbb
xor
pop
jge
in
stc
punpcklbw
dec
pop
or
or
cmc
or
sub
repz
adc
jns
push
sub
cs
sub
dec
jns
sbb
mov
inc
rorb
repnz
rorb
test
enter
pop
in
rclb
out
scas
in
inc
push
inc
push
sbb
out
pop
mov
cmp
xchg
and
lea
xchg
jbe
jnp
and
addl
pop
iret
outsb
das
jns
xchg
xchg
fnstcw
movsl
mov
cmp
mov
out
adc
add
pusha
out
pusha
push
sahf
mov
aaa
insl
or
cs
mov
aad
sbb
add
paddsw
pushf
ja
push
sbbb
subl
in
adc
push
out
mov
and
fsubrl
test
aad
mov
inc
or
xor
mov
sbb
xchg
negb
nop
in
lcall
int3
and
aad
movsl
fmull
xchg
mov
pop
lock
call
es
out
xor
out
daa
data16
daa
enter
aad
aad
jmp
sub
xchg
mov
add
sbb
mull
sbbl
mov
test
fcoms
cmp
jl
shll
gs
cmc
add
dec
cmp
xchg
dec
loopne
movsb
add
subl
mov
orb
push
and
jmp
gs
mov
add
data16
jg
daa
shlb
add
test
sub
mov
mov
lea
push
push
mov
dec
cmpsl
movsb
ss
leave
jge
into
rcrl
sbb
sub
into
push
or
int3
push
stc
fisttpll
or
and
push
movsb
mov
push
arpl
xchg
and
adc
sub
cs
das
cltd
inc
cmp
jecxz
addb
std
shll
push
push
sbb
pop
mov
icebp
pop
and
and
imul
add
movsb
loope
ljmp
or
pop
push
jle
mov
jns
cmpsb
push
or
sub
out
notb
mov
cwtl
adc
sbbb
mov
jno
lcall
test
and
xchg
jns
rclb
notb
push
mov
xchg
mov
xchg
jge
xchg
dec
lds
mov
cmp
push
inc
xor
xchg
fldl
mov
jmp
lds
inc
into
mov
mov
ret
arpl
cltd
sbb
adc
repz
mov
jbe
loope
inc
outsb
mov
cli
shlb
add
add
pop
insl
aad
outsb
or
loope
push
out
xlat
xor
xor
mov
fisttpll
sub
outsl
inc
sub
cmpsb
int
test
dec
sbb
das
addr16
mov
xchg
dec
stos
and
insl
outsb
fcmovbe
add
inc
pop
inc
adc
xchg
lfence
push
call
cmpsl
ds
or
sbb
das
adc
xor
mov
test
clc
bndstx
pop
rcrb
push
mov
mov
mov
push
ds
js
cmp
dec
jo
cmp
jae
movsl
ret
mov
or
pop
subb
mov
jle
movd
sbb
mov
les
mov
jl
pop
js,pn
mov
sti
scas
clc
nop
mov
fwait
lods
mov
sbb
popf
mov
scas
std
addb
add
test
in
jl,pn
lcall
xchg
push
std
icebp
mov
or
pop
sub
sub
or
sahf
cmpsb
mov
dec
dec
repnz
pusha
fcomps
and
inc
je
cmc
push
cmp
adc
sbb
fadds
cmp
mov
js
arpl
mov
push
les
push
sub
aas
mov
sub
sbb
push
imul
or
or
popf
arpl
pop
subl
jno
out
test
sub
jo
and
popa
shrl
mov
in
filds
push
jmp
lds
aam
lret
hlt
jmpw
or
iret
add
xchg
mul
inc
xchg
xor
xorb
pop
add
mov
inc
pop
pop
shll
inc
pop
les
ds
lret
pop
addr16
jp
adc
sti
movsl
jmp
test
in
ret
xchg
xchg
xchg
adc
int3
ret
push
sbb
add
clc
push
mov
pop
xchg
movsl
xchg
or
push
and
adc
iret
mov
mov
popa
nop
outsb
filds
xchg
bound
jmp
or
adc
mov
icebp
and
inc
sbb
jge
subl
mov
outsb
das
ljmp
pop
ficoml
mov
sti
sti
es
dec
xchg
or
sub
mov
stos
mov
add
push
in
loop
xor
lds
jb
loopne
cli
mov
push
or
sarb
test
aam
adc
movsl
jg
xchg
cld
adc
sarl
lahf
jmp
enter
sbb
pop
ja
loope
movsl
cwtl
lret
js,pn
push
sub
jae
out
das
imul
invd
scas
mov
or
sbb
dec
cmp
hlt
dec
loope
xor
mov
push
mov
push
pop
out
push
push
jno
mov
scas
jle
test
fadds
cltd
sub
pop
sti
jge
iret
sarb
cltd
or
jecxz
pop
divl
or
outsb
mov
jmp
insb
test
sub
sbb
ja
fiaddl
cmp
in
cs
call
xor
jge
adc
mov
sub
pop
dec
mov
gs
inc
mov
cwtl
inc
adc
sbb
test
fcomp
aaa
ss
jmp
rcll
pop
outsb
vpmullw
add
outsb
shl
dec
mov
mov
ss
jo
sub
pop
aas
das
mov
inc
dec
shll
add
imul
lahf
out
xchg
pop
add
jp
add
jg
aaa
pop
mov
lahf
das
ljmp
in
jl
cmpl
xchg
les
ljmp
add
push
aad
dec
movsb
push
mov
jle
jae
cld
pop
mov
mov
in
sbb
sub
sbbl
in
mov
scas
fnclex
cmc
sub
stos
dec
xchg
js
pop
js
cmp
imul
dec
lock
nop
nop
pop
out
enter
ror
js
adc
xchg
mov
repz
jmp
insb
orb
aam
daa
in
lret
lock
adcl
or
stos
sbb
mov
shlb
rol
repz
addl
jp
gs
xchg
pop
and
jle
fiaddl
test
in
push
mov
ret
sarb
cltd
jae
lea
jb
iret
sbb
das
xor
sub
hlt
push
imul
loopne
push
jmp
inc
or
pop
sbb
mov
xchg
sahf
iret
fwait
ja
push
iret
xor
xchg
push
in
and
push
int3
lret
fistpl
stc
pop
inc
lcall
add
fst
inc
ja
nop
dec
jge
aaa
mov
sti
xchg
inc
lret
shl
sub
sbb
pop
aam
add
lock
test
movsb
mov
push
push
pusha
xchg
mov
push
mov
mov
and
loope
mov
in
lret
mov
push
ja
push
mov
adc
imul
or
xor
les
dec
in
mov
xor
inc
mov
pop
cmp
sbb
popa
je
cmc
or
mov
inc
mov
rol
push
pusha
into
sub
neg
bound
shlb
mov
nop
pop
cli
push
mov
adc
loopne
fstps
ret
es
xchg
cmp
jb
int
push
jl
adc
mov
mov
sbb
iret
xchg
imul
adc
inc
xchg
jb
sbbb
out
ljmp
push
mov
add
push
bound
pop
xorb
sub
mov
je
movsl
cmp
call
outsl
inc
xchg
shlb
cmp
lahf
loopne
imul
xor
pushf
pop
xchg
adc
push
lods
les
mov
inc
cmp
fidivs
cmp
cmpsb
shl
dec
ja
and
sbb
testb
add
imul
jno
xor
mov
hlt
sub
sbb
imulb
jg
ja
xor
and
test
xor
sbb
subb
push
push
js
test
test
shl
and
sbb
cmp
aam
fcoml
call
pop
bound
ret
loop
in
in
sub
pop
pop
icebp
rcll
mov
bound
and
adc
enter
xlat
adc
movsl
aam
repnz
in
outsl
faddl
xor
mov
jl
insb
rcrb
mov
mov
or
cld
pusha
in
push
faddl
xor
mov
jl
insb
rcrb
mov
mov
or
cld
pusha
insb
push
pop
inc
int3
xor
mov
cld
loopne
rcrb
mov
mov
or
cld
pusha
in
push
faddl
xor
mov
jl
jp
sarb
mov
shrl
js
pushfw
orl
adc
sti
sbb
or
cmp
sub
pop
sti
or
jl
insb
and
lods
imul
int3
dec
cld
pop
in
sti
sbb
or
cmp
sub
pop
lahf
dec
lret
jl
insb
icebp
pushf
mov
lods
jnp
xor
addr16
mov
push
in
dec
cli
sub
push
cmpsl
sub
sbb
dec
fsubrs
sbb
or
cwtl
add
jnp
pop
mov
movsl
daa
xchg
insb
int3
xor
test
pusha
lock
das
mov
jo
outsb
pushf
push
dec
jl
nop
jnp
sub
dec
fwait
shl
or
sti
arpl
faddl
cmp
adc
jbe
cmp
inc
lea
dec
mov
dec
adc
call
shll
stc
sbb
andb
push
push
xchg
fdivr
xor
add
mov
je
cwtl
pop
sbb
cmp
sbb
je
mov
or
aaa
mov
sbb
outsb
mov
lret
insb
sbb
lods
imul
int3
dec
cld
jecxz
pop
sbb
or
cmp
sub
pop
in
lret
jl
sub
dec
pop
dec
cli
jne
add
cltd
cmp
push
cli
inc
xorb
xor
sub
mov
dec
mov
sbb
daa
xchg
sub
xchg
pop
cli
pusha
out
push
inc
cwtl
xor
add
or
jnp
pop
fsubrs
mov
int3
dec
cld
pop
in
stos
sbb
or
cmp
sub
pop
sti
dec
lret
jl
insb
sub
lods
imul
int3
dec
cld
pop
in
stos
sbb
or
cmp
sub
pop
sti
dec
lret
jl
insb
sub
jge
sbb
sub
or
lods
addr16
push
jb
push
movsb
lea
aam
adc
enter
loop
jb
mov
xchg
jp
dec
bswap
mov
cwtl
sarl
les
sub
xchg
adc
mov
addr16
sarl
or
ret
mov
mov
addl
repz
mov
mov
dec
data16
xor
mov
sarb
add
popl
or
push
leave
pop
addr16
dec
add
xlat
insl
jge
bswap
jge
leave
fmulp
dec
in
lock
xchg
dec
orl
adc
jmp
orb
iret
fstps
lods
mov
pop
stos
dec
fcomps
mov
inc
mov
cmp
repnz
lcall
mov
dec
lcall
mov
repnz
data16
xchg
xchg
lahf
mov
cmp
mov
adc
push
push
repz
mov
mov
pop
sbb
jl
test
xorl
pop
push
push
out
push
popf
cs
inc
cltd
ljmp
add
sub
test
cmpsb
jae
push
push
xchg
mov
dec
mov
in
pop
out
pop
clc
popa
loop
inc
adc
sub
stc
mov
ss
mov
stos
leave
push
jb
pushf
mov
push
daa
sbb
mov
cs
xor
add
and
adc
pop
push
lock
fsubs
in
inc
cmc
sub
push
and
int3
scas
mov
repnz
int3
push
in
inc
data16
push
ret
sahf
push
jmp
loope
pop
add
xchg
jle
cwtl
push
pop
lcall
xchg
mov
jmp
ljmp
ja
fldt
dec
sbb
push
xor
outsl
dec
jg
gs
shl
daa
cs
nop
loope
or
loope
leave
test
jecxz
mov
mov
push
mov
jne
mov
popf
cwtl
mov
add
mov
jmp
out
popa
dec
mov
push
and
and
sub
clc
mov
or
mov
loopne
xchg
mov
adc
jg
mov
xchg
and
pop
add
or
mov
add
movsb
mov
push
mov
es
xchg
mov
test
or
jns
call
adc
ss
sahf
add
orb
dec
and
movsl
jbe
xchg
mov
cmp
loopne
shlb
movsl
mov
aaa
adcb
insb
mov
pop
dec
stos
push
stc
xchg
jp
pop
cmp
out
stc
or
daa
mov
and
data16
fwait
jmp
push
mov
mov
addl
js
sub
inc
arpl
lock
test
or
idiv
push
mov
loopne
in
mov
jo
stc
sahf
subl
sub
xlat
adc
scas
rorl
out
lret
cmp
dec
sub
cli
lsl
mov
lahf
inc
sub
adc
xor
bound
stos
pop
gs
rolb
dec
leave
pop
sub
les
xchg
jbe
repnz
mov
shlb
mov
jecxz
pop
pop
xchg
mov
lret
push
jo
mov
ds
adc
mov
add
cmp
inc
pop
fisttpll
dec
lds
cmpl
pop
mov
mov
push
or
inc
jecxz
adc
jnp
test
push
xor
xorb
stos
mov
jae
add
adc
inc
adc
movsl
pop
push
ljmp
pusha
cmpsb
xor
in
je
test
clc
cli
es
xorl
shlb
mov
cwtl
je
xor
bound
xsavec
addr16
inc
sub
incl
xchg
adc
test
les
inc
in
and
out
inc
imul
mov
lods
fists
mov
shl
cmc
aas
sub
lahf
adc
pop
loop
clc
mov
xor
sahf
leave
mov
jge
enter
addr16
mov
xchg
fs
mov
mov
push
jmp
xchg
adc
sub
ficomps
pop
xor
mov
push
mov
cld
jb
sub
mov
ret
adc
push
add
inc
andl
jne
and
dec
adc
mov
adc
xor
lods
movsb
in
sbb
cmp
sub
mov
ljmp
std
add
cltd
jge
pop
in
or
lock
pusha
shl
xchg
cmp
ss
inc
mov
mov
xor
xchg
dec
cmp
scas
loop
out
inc
cmp
inc
mov
xchg
std
jo
pop
and
inc
repnz
sub
pushf
rcrb
sub
test
outsl
inc
ja
gs
nop
xor
adc
mov
and
cmpsb
into
imul
fldcw
cmp
jle
adc
enter
stos
mov
out
fidivs
push
jae
pop
sbb
in
adc
fstpl
mov
mov
sete
xchg
in
push
inc
iret
call
arpl
push
push
ret
push
add
and
cltd
arpl
mov
arpl
mov
add
stos
fcomps
jge
xor
aam
sahf
sahf
push
pop
push
xor
or
std
ja
cmc
push
adcb
shr
xchg
cmp
movsl
or
test
out
das
ja
mov
imul
scas
test
sub
and
jne
arpl
dec
push
mov
mov
int
adc
and
inc
mov
out
popa
push
inc
adc
cmc
push
mov
lret
int
loopne
sar
mov
sub
testb
xor
pop
mov
out
adc
lods
cmp
cltd
rolb
cmpsb
pop
dec
stos
enter
xor
fnsave
or
push
mov
lea
inc
scas
fsubs
dec
add
sbb
repz
inc
dec
push
sub
adc
mov
push
add
fldcw
cmp
arpl
adc
add
movsl
and
iret
out
pop
and
into
pop
mov
movsb
lods
xor
ljmp
lahf
or
mov
dec
inc
pop
sub
imul
push
aaa
inc
pushf
jo
xchg
cmp
lods
xchg
imul
inc
movb
dec
pop
fisttpl
icebp
in
jecxz
lods
roll
cli
xchg
xor
jno
lret
adc
ret
int3
out
dec
repnz
scas
xor
pusha
pop
ss
and
cmc
testl
mov
jae
movsb
sbb
push
nop
inc
ret
lds
cld
sub
nop
insb
xchg
sub
push
jg
or
sbb
mov
cmc
and
push
add
sti
loope
inc
sub
ficomps
rorb
iret
adc
sbb
inc
jae
sbb
loop
add
pop
aaa
or
shlb
and
imul
pop
cli
cmp
dec
xchg
xorl
cmp
das
jmp
addr16
inc
sub
mull
xlat
mov
pushw
lock
je
scas
add
cmp
mov
cmpsb
mov
cli
loop
mov
jg
test
jmp
out
xor
or
pusha
enter
insb
out
fnsave
xor
movsl
mov
pusha
test
mov
enter
mov
add
dec
inc
or
adc
scas
hlt
or
or
pop
fcmove
pop
loopne
add
rcrl
fcoms
popf
test
or
nop
in
repnz
sub
cwtl
fmulp
jge
jmp
nop
insb
xor
xchg
jmp
cwtl
clc
test
incl
pop
or
shlb
std
sub
movl
dec
negl
pop
pop
int
xchg
ss
in
ja
aaa
cltd
add
push
jmp
push
push
or
push
push
rcl
testb
cld
jmp
adc
subl
mov
mov
and
mov
inc
adc
jo
sbb
fbstp
in
ljmp
sub
fdivs
addr16
or
movsl
mov
mov
leave
adc
repnz
inc
or
and
sub
xor
jbe
mov
adc
out
loope
mov
mov
gs
ror
pop
fidivrl
mov
pop
or
mov
and
call
cmp
or
in
xlat
out
bound
ss
int
sub
repnz
xchg
inc
push
lods
adc
clc
pop
cmp
sahf
loope
pusha
dec
dec
das
xchg
pusha
lret
sub
mov
sbb
jae
outsl
sbb
sbb
jl
jns
aaa
lahf
add
jo
xchg
sbb
adc
into
rorl
jecxz
sti
mov
mov
xorb
int
pushf
pop
jne
jge
push
clc
xor
in
repz
into
inc
subl
test
adc
leave
xor
sbb
test
rcrb
and
cltd
es
ja
xchg
add
mov
mov
out
pop
inc
xlat
jo
adc
imul
test
test
call
stos
fisubl
xchg
lret
stc
invd
adc
popa
ja
gs
push
repnz
adc
push
dec
push
clc
arpl
lods
xlat
enter
sub
scas
or
mov
cld
lea
dec
int
mov
dec
pop
pop
mov
rcll
stos
ds
pop
arpl
fidivrs
lret
mov
mov
mov
stos
xor
aad
imul
inc
std
mov
mov
idiv
adc
pushl
test
inc
popf
inc
bound
out
cmp
clc
fsubrp
clc
dec
cld
cvttps2pi
xor
js,pt
cld
bound
pop
push
pop
repz
sbb
xor
outsl
arpl
daa
dec
sub
inc
mov
inc
jnp
or
ja
sbb
sarl
jb
das
roll
shll
inc
mov
popf
adc
out
rep
ss
out
pop
sub
repnz
call
mov
xchg
pusha
jmp
clc
push
xchg
cmp
sub
pop
lahf
inc
pushf
inc
sbb
fs
fcomps
ficomps
pop
call
or
mov
in
fdivs
cmpsl
sub
pop
cltd
xor
das
jae
sbb
clc
fsubl
jp
ss
xor
mov
mov
aas
ret
ficomps
aam
test
daa
or
int3
xchg
fdivrp
cmp
lock
lret
lock
pop
dec
mov
cmpl
cld
jmp
mov
push
lret
jge
mov
fcompl
popa
add
sub
fwait
addr16
test
pop
and
mov
ja
adc
add
scas
push
lock
mov
adc
pusha
inc
or
test
mov
enter
scas
xor
sar
hlt
pop
sbb
or
mov
scas
jl
int3
aad
mov
loope
mov
cmpl
std
cmp
pushf
gs
inc
sti
aad
mov
std
mov
outsb
mov
loope
xchg
clc
sbb
jbe
pushf
test
orl
and
ficompl
into
push
push
jle
je
loope
test
sbb
jo
inc
enter
subb
imul
add
or
test
push
dec
imul
xor
pop
cmpb
cs
pusha
mov
add
sbbb
sbb
and
adc
rcll
sub
jae
fimuls
ds
xor
test
roll
mov
mov
loopne
or
xchg
mov
std
jo
mov
cli
int
lret
insb
cmpb
idiv
xchg
dec
test
lcall
jge
pop
lret
mov
or
inc
cli
or
xor
push
andl
out
imul
xor
stc
pop
cmpsl
popf
or
cmpsb
mov
shll
cld
sub
dec
jle
imul
ljmp
jns
sub
out
inc
out
xchg
outsb
enter
mov
jmp
movsl
loop
lcall
mov
and
sbb
push
and
nop
rolb
stos
lret
mov
jne
les
lds
cmp
mov
mov
leave
mov
push
dec
mov
lock
mov
push
cmp
lods
mov
shll
clc
aaa
repnz
leave
dec
shll
lods
out
rcll
xchg
out
mov
add
clc
test
lds
mov
adc
iret
dec
jne
mov
cmpsb
fnsave
pushf
jge
test
sahf
xor
mov
hlt
pop
fnstsw
push
add
orl
pushf
mov
dec
js
dec
and
dec
jl
push
adc
pop
push
movsb
test
shrb
push
sarb
leave
dec
jbe
jmp
je
xchg
sti
das
leave
pop
mov
loop
std
ss
repnz
jg
repnz
cmp
push
and
call
aas
outsb
mov
in
mov
lods
dec
xchg
cwtl
mov
out
aam
mov
push
xchg
lods
enter
jbe
cmp
aam
mov
mov
in
add
xchg
xchg
jnp
mov
add
hlt
xchg
dec
pusha
loop
push
mov
or
xorb
outsl
rorb
inc
xorl
adc
bts
scas
mov
shlb
jl
inc
lret
lods
cmp
adc
mov
xchg
mov
adc
sbb
cmpsl
mov
xor
les
sti
dec
mov
jmp
xor
cmpsb
adc
and
sub
or
hlt
fsubp
pop
inc
mov
push
dec
xchg
mul
loope
call
push
shlb
aad
inc
sbb
js
fistps
adc
test
je
jne
mov
adc
pop
flds
call
in
movsb
inc
lods
leave
ljmp
add
cld
xchg
dec
jne
mov
lds
jbe
sbb
mov
leave
xor
cmp
std
test
cld
decb
push
lds
shr
and
xchg
out
and
mov
in
xor
cld
sbb
flds
movsl
dec
lds
cli
loope
mov
sbb
cld
push
adc
pop
outsb
stc
inc
enter
xor
jl
ret
xchg
lea
inc
int
shlb
daa
mov
jbe
mov
inc
adc
int3
add
aad
movsl
mov
or
daa
popa
jae
dec
fisubs
push
pop
jp
jp
scas
loopne
jl
lahf
cmp
or
andb
mov
ficompl
mov
xchg
fcomps
push
stos
das
mov
addr16
movsb
mov
pushf
movsb
pop
cmp
incb
data16
jge
icebp
cwtl
lods
adc
imul
cld
xchg
lea
mov
test
int3
jmp
rcrb
ljmp
lods
mov
or
or
out
cli
out
jl
jl
sbb
jns
push
test
int
dec
dec
inc
loopne
push
out
mov
push
inc
gs
lret
out
or
dec
sub
sub
add
mov
pop
jb
cmp
lods
mov
sbb
inc
ss
outsl
clc
cmpl
lret
movl
idivl
add
push
cmp
adc
pop
add
lods
lds
das
in
das
dec
dec
fmull
inc
push
nop
aaa
aas
push
int
pop
xchg
cs
push
add
mov
daa
cmp
jecxz
int3
stc
iret
mov
and
ss
xchg
mov
cmp
pop
mov
sahf
adc
and
adc
dec
cmp
add
pop
test
jl
leave
pop
clc
push
lret
sub
imul
test
sbb
loopne
pop
pop
inc
cs
lods
pop
cmp
jb
roll
dec
mov
inc
dec
mov
mov
sbbb
aaa
sub
test
mov
iret
and
or
fwait
arpl
fwait
rcrl
adc
xchg
imul
dec
andl
mov
xchg
daa
jnp
push
lret
jbe
xor
or
mov
mov
aad
imul
imul
dec
mov
adc
push
sahf
sbb
lods
push
loope
ljmp
inc
jmp
movsl
xchg
xchg
outsl
dec
and
mov
pop
add
fidivs
cmpsb
mov
and
les
es
jmp
in
dec
scas
movb
adc
ret
mov
sbb
dec
in
inc
out
in
xorb
xchg
ror
cmp
jne
rclb
push
sub
loop
lret
sub
jae
js
popl
mov
int3
hlt
sub
sahf
inc
jnp
push
js
mov
ficomps
sahf
pop
cmp
pusha
fwait
sub
mov
pop
mov
xor
push
xor
xchg
cmpsl
js
sub
loope
daa
mov
fisttpl
mov
sub
and
out
xchg
jo
lods
mov
dec
stos
gs
loope
daa
or
jecxz
sbb
inc
and
loope
repnz
ret
imul
daa
shl
sbb
lds
rcrl
mov
dec
mov
or
xor
pop
dec
lods
jnp
pop
scas
fstpl
in
loop
jmp
push
imul
mov
pop
xchg
cmp
inc
fcmovnb
jl
jmp
fwait
rcl
cmpb
pop
jbe
test
insl
and
fstp
stc
loope
inc
xor
mov
pop
cld
push
mov
popf
dec
xchg
test
fisubl
je
lds
lcall
cmp
adc
cmp
mov
adc
fstpt
pop
jnp
fsubrl
cld
sbb
mov
add
jne
mov
sub
mov
and
sbb
aad
lds
jb
enter
sub
lock
pop
mov
cld
iret
mov
jmp
stos
cld
add
sbb
jle
inc
dec
sbb
push
and
cmp
add
arpl
imul
stos
lock
jmp
popf
ljmp
cwtl
fwait
xchg
inc
ss
pushf
xor
in
loopne
mov
fsubrl
mov
sub
and
ficompl
or
repnz
fsts
cs
shl
mov
enter
mov
iret
and
cld
mov
or
xor
clc
shr
lret
cmp
push
rolb
xor
adc
aad
and
rcll
inc
xchg
int3
or
dec
push
lock
adc
jp
rcrb
icebp
jo
cltd
je
iret
mov
cmp
movsl
mov
lret
sbb
jmp
jl
outsl
lret
xor
pop
mov
mov
xor
into
subb
inc
pop
int3
enter
xor
dec
repz
jae
mov
or
fisubs
ljmp
sbb
imul
mov
adc
in
xor
scas
jp
sub
sub
xchg
pmaxub
push
daa
ja
adc
mov
daa
leave
xchg
jb
lret
mov
ret
xor
mov
dec
insl
ret
fstpt
insb
popa
rcrb
add
sbb
push
repnz
enter
mov
mov
adc
mov
iret
pop
in
inc
adc
fistps
sbb
aam
sbb
inc
jmp
fidivl
push
cli
mov
sub
lock
psubusw
xor
lock
test
pop
xchg
int3
jno
repnz
sbb
aam
ljmp
add
push
ja
lods
mov
jo
sub
jne
xchg
pusha
sub
andb
call
mov
jp
inc
lds
leave
ja
xchg
add
clc
jne
pop
pop
jle
incb
sti
test
sar
mov
mov
xchg
sbb
es
adc
mov
jnp
xor
cmc
lods
iret
jne
add
mov
mov
xchg
xchg
xor
push
mov
pop
lea
cwtl
sub
addr16
push
sarb
nop
fistps
jmp
xchg
in
sbb
rcr
rclb
phaddw
mov
mov
xlat
push
pusha
ror
hlt
push
data16
xor
xchg
ret
loopne
sbb
pop
rcll
and
mov
shl
mov
and
cs
test
imul
push
cmp
mov
shl
or
rclb
adc
jbe
and
and
sbb
lahf
or
das
and
mov
xchg
sbb
xor
lahf
ja
test
jmp
jne
mov
jo
fdiv
push
mov
in
arpl
bound
sub
cmp
ret
daa
sbb
filds
pop
mov
xchg
pop
nop
inc
push
fisttpl
dec
jno
or
or
cmp
add
sbb
xchg
es
xchg
inc
js
jb
jae
push
loopne
cwtl
push
pusha
incb
out
dec
xor
pushf
cmpsl
xor
test
mov
jnp
dec
cld
pop
in
stos
sbb
or
cmp
sub
pop
sti
dec
lret
jl
insb
sub
lods
imul
int3
dec
cld
pop
in
stos
sbb
or
cmp
sub
pop
sti
dec
lret
jl
insb
sub
sbb
dec
std
pop
in
scas
sbb
or
jmp
loop
iret
jl
insb
xor
test
fsubrl
dec
jl
adc
cmp
pop
pushf
aam
mov
andl
xor
out
sar
scas
xor
jno
popa
push
push
jg
jge
mov
add
add
icebp
iret
loope
shr
sar
mov
mov
xor
jg
insb
and
adc
add
icebp
loope
shl
shl
xchg
mov
movsl
jno
popa
xor
and
push
dec
dec
jno
jns
aas
or
xchg
je
pusha
addl
les
pop
imul
cmp
rorl
sahf
movsb
addb
add
popa
sbb
sahf
mov
jg
jg
mov
dec
sbb
stc
jb
xor
pop
fidivs
sub
jno
xor
pop
loope
xchg
roll
lahf
loope
icebp
out
sub
pop
jno
addl
vphaddubw
add
push
adcb
pop
pop
scas
test
mov
add
inc
jg
addr16
xchg
xchg
das
inc
or
loope
pop
out
inc
xor
mov
jle
xchg
inc
xor
jp
outsl
inc
pop
and
rolb
das
scas
iret
loope
sar
shl
mov
cmpsb
jno
popa
inc
push
jbe
xor
and
adc
add
stos
movsl
fistpll
fld
icebp
ret
in
sbb
shll
cmp
dec
jl
jne
scas
mov
fbld
cld
lds
and
or
sub
and
jp
push
jo
inc
push
pop
xchg
loope
lock
lahf
xchg
scas
cmpl
xor
and
adc
add
icebp
iret
loope
shr
sar
mov
mov
push
outsl
inc
jg
mov
adc
add
icebp
iret
in
pop
into
xchg
in
ret
cli
jecxz
jne
data16
xor
in
jae
jne
lar
addl
cwtl
xor
or
fxtract
fstl
rcrb
ljmp
sub
pop
mov
out
loopne
and
cmp
mov
sbb
jns
sub
imul
mov
outsl
and
or
lcall
lret
cltd
push
scas
test
fsubrs
sbb
mov
cmpsl
jb
mov
testl
add
loopne
jecxz
sub
lock
fnstenv
stc
or
xchg
std
outsl
sub
push
sahf
lods
adc
pop
scas
adc
stos
sub
sbb
scas
inc
pop
lret
push
pop
rorb
sti
dec
mov
ljmp
or
sub
ljmp
fimull
psubq
pop
sub
stos
dec
mov
xor
mov
mov
push
test
inc
fiadds
fwait
sub
add
dec
adc
inc
stc
aad
imul
stos
cmp
jl
jp
mov
pop
out
sbb
outsl
jns
int3
rcrl
testl
repz
insw
xchg
out
popa
insb
xchg
or
cmpsb
jbe
test
call
aaa
imul
sbb
data16
mov
jl
push
push
shlb
dec
aas
movsb
add
fsubrp
enter
jno
push
inc
lds
ret
mov
outsl
lods
popa
fidivrl
daa
cltd
repnz
or
jno
inc
sti
adc
ret
xor
loop
outsl
inc
shl
xchg
xor
into
add
mov
or
enter
or
lahf
dec
and
in
outsb
pop
xchg
sub
mov
lea
adc
ljmp
xlat
int3
jecxz
ret
ret
mov
cmc
lods
aaa
out
data16
mov
cmpsl
inc
outsb
and
push
faddp
pop
fs
loop
and
mov
pop
loopne
pop
pop
fldenv
leave
adc
in
or
ror
dec
cmc
jl
jmp
ja
pop
pop
push
pop
and
mov
pop
push
dec
imul
inc
into
xor
adc
jge
adc
mov
out
adc
jo
add
mov
xor
push
int3
mov
xor
pusha
out
pop
in
gs
dec
into
enter
push
jle
jbe
lds
mov
iret
push
xor
aas
movsl
mov
out
bswap
add
pusha
sbb
xchg
mov
in
xor
sub
sbb
sbb
cmp
orl
shlb
pusha
hlt
jl
xchg
fwait
icebp
sub
mov
mov
imul
jnp
shlb
add
sahf
add
into
cmpsb
outsl
mulb
rcrl
jge
rcll
dec
jecxz
int3
and
and
dec
out
sbb
mov
sub
test
ret
loopne
sbb
sbb
mov
loope
nop
pop
xor
dec
xor
dec
jnp
mov
aam
mov
cmp
shl
jbe
jbe
jae
add
sbb
pop
sbb
jg
lock
test
mov
rcll
les
inc
jmp
jge
cmpsl
mov
cli
rcll
adc
inc
push
xchg
xchg
lret
and
mov
sbb
in
xchg
push
push
fs
cltd
push
daa
dec
jo
cli
push
lret
sub
test
les
sbb
and
xchg
mov
xor
pop
mov
jge
cli
pop
cmc
cs
test
mov
pop
movsb
xor
or
outsl
pop
into
mov
js
xchg
sbb
mov
lods
jge
mov
mov
out
lods
stos
xor
xchg
sbb
jbe
inc
daa
sbb
iret
inc
cwtl
clc
adc
lock
jns
test
push
xor
inc
push
jnp
xor
or
and
sbb
mov
daa
fsubs
xchg
pop
jae
pop
fucomip
and
mov
pusha
mov
inc
scas
inc
std
not
loopne
fwait
cli
js
cli
dec
ret
sub
aam
aas
mov
mov
sub
xor
sub
shlb
sarl
dec
lahf
lods
or
test
cs
add
cmp
das
mov
insl
sub
arpl
in
jb
pop
and
pop
sbb
cmc
cmp
push
mov
loope
inc
sub
lods
loop
leave
loopne
cwtl
fstpt
icebp
repnz
aam
shl
adc
pop
scas
sbb
scas
rcll
ffree
mov
jle
mov
in
xchg
sbb
jne
jmp
loop
repz
or
scas
jge
and
shlb
jae
movsl
sarb
mov
mov
sbb
call
sbb
popf
cmpsl
in
mov
cli
test
ret
mov
lods
lret
push
xor
out
jb
fstpl
flds
ss
pop
pop
sbb
inc
jbe
or
add
rcll
or
cmpsb
ds
dec
aaa
pop
pop
popl
pop
enter
sahf
pop
ret
mov
dec
dec
bsf
aam
lods
sti
cmp
icebp
iret
shrl
adc
int3
or
es
jbe
vmovaps
shrl
mov
adc
in
lcall
scas
sbb
sub
xchg
movsl
and
aaa
test
test
sub
xchg
xchg
jl
fs
inc
jno
lods
xor
inc
pop
jne
jbe
cmp
xor
adc
fldcw
imul
adc
mov
pop
fs
pusha
fs
mov
add
xchg
mov
push
test
pushf
ss
sbb
xor
and
pop
or
inc
sub
or
sahf
xor
mov
sbb
out
sub
scas
pop
adc
dec
lea
mov
and
sarb
data16
adc
clc
enter
xchg
xchg
xor
mulb
sahf
mov
cmc
in
add
and
or
sbb
mov
sahf
and
mov
pop
stc
fwait
outsl
in
or
push
mov
pop
mov
cld
ficoml
in
cld
xchg
and
mov
cmp
sub
arpl
sbb
cmp
addr16
imul
call
shll
xchg
fbstp
pop
push
cmpsb
out
testl
lea
rcll
push
popa
inc
cli
out
lahf
ret
ja
scas
and
jg
bound
adc
repz
fildll
or
lods
xchg
lock
add
syscall
adc
jle
pop
gs
jne
test
icebp
js
testb
cli
shll
andl
test
dec
push
xchg
sbb
int3
sbb
jmp
push
mov
ret
cmp
loope
js
data16
jne
js
and
add
jbe
add
cmp
mov
add
test
jns
jae
hlt
insl
cmp
xor
mov
push
mov
lret
cmpsb
dec
jo
cmp
lahf
stos
dec
ds
enter
stc
sub
cs
or
mov
popa
hlt
mov
adc
sbb
insb
jmp
cmc
int3
push
in
jo
jmp
sbb
sub
mov
ljmp
push
dec
in
push
leave
sysret
inc
dec
test
push
sbb
lret
pushf
test
or
ljmp
jns
sti
mov
or
mov
in
inc
in
push
fidivrs
out
pop
jmp
fnstsw
ret
mull
inc
outsb
add
imul
fwait
shrl
test
bound
jnp
adc
jle
sub
adc
stc
lods
mov
int
aam
fbstp
jo
jl
lret
in
das
gs
xor
sahf
daa
cmp
mov
je
jp
sti
aam
in
movsb
adc
jp
or
or
ljmp
pop
ljmp
dec
shll
test
outsl
cwtl
jbe
inc
iret
aam
mov
push
add
ds
push
mov
adc
xlat
cmpsl
imul
into
or
out
xor
jecxz
cwtl
adc
inc
jo
xor
lret
pushf
mov
aad
jp
mov
js
push
mov
add
pop
sub
adc
scas
andl
pop
push
add
sarb
test
sbb
pop
push
or
clc
aad
loopne
shr
mov
loop
jmp
add
dec
imul
mov
pop
in
mov
in
aas
adc
dec
adc
dec
fcomps
mov
cmp
loopne
add
pop
cltd
jp
cmp
fiadds
sub
fbld
pop
out
clc
fs
out
addl
adc
hlt
lds
push
jl
or
nop
out
and
mov
pushl
xchg
push
xchg
dec
sbb
and
imul
shlb
mov
sarb
mov
sbb
mov
push
and
mov
testl
ss
and
insb
adc
or
inc
adc
repz
rcrl
and
inc
lahf
push
jno
or
or
insb
mov
frstor
aaa
test
push
sarb
mov
or
add
mov
jbe
cmpl
and
mov
cmp
push
sub
pusha
inc
pop
cmp
xor
adc
aas
bound
jbe
cmp
mov
pop
xlat
mov
mov
repnz
sub
xchg
lret
and
icebp
sbb
adc
cmp
inc
jb
dec
push
gs
mov
pusha
je
xchg
cmpsl
inc
cmc
mov
push
pop
mov
sub
mov
pusha
sahf
and
mov
adc
fcmovnbe
repnz
jo
xlat
aad
ret
loope
gs
in
adc
enter
lds
addb
mov
or
sub
xor
popa
xchg
in
mov
add
stos
mov
out
out
xor
loopne
adcb
mov
mov
cld
in
mov
mov
scas
push
xchg
rol
mov
xor
cs
cmp
sti
fldt
push
flds
and
in
inc
lahf
pusha
daa
jb
jg
mov
dec
gs
movsb
pop
mov
or
inc
scas
pop
mov
add
mov
mov
aam
dec
fdivl
shll
mov
push
jne
lret
dec
loopne
stos
mov
imul
stos
ret
int3
sbb
xchg
xchg
ror
mov
ss
fsubs
addl
repnz
movsb
jno
fsubp
mov
jge,pt
lock
xor
add
shlb
or
idivl
clc
stos
hlt
daa
pop
popa
xor
sub
dec
add
std
dec
or
mov
cli
scas
popa
pop
cltd
fildll
movb
add
sarb
movsl
mov
test
mov
mov
pop
or
pop
sbb
sahf
aam
jbe
sub
jl
jo
push
sub
mov
jb
dec
push
cmpsl
cli
dec
mov
push
xlat
mov
subl
ja
or
or
shr
fcmove
xor
push
int
cld
ret
sbb
push
cld
inc
adc
outsb
jmp
inc
mov
push
fcoms
and
out
pop
add
and
leave
lret
pop
xchg
cmpsb
call
sub
xchg
aam
sbb
test
in
sub
xchg
mov
and
mov
jno
mov
lret
pusha
cmp
sbb
fidivrs
loopne
and
popf
in
sti
and
push
aas
adc
pop
roll
cmpw
std
lahf
adc
push
add
in
dec
jne
insb
and
xor
bound
mov
aad
xor
hlt
xchg
pop
ss
add
sbb
je
popf
mov
fdivrl
mov
mov
fstl
mov
mov
pop
fcmove
mov
fcoml
das
jecxz
jmp
cmpsl
ss
out
add
ljmp
stc
mov
jbe
fwait
adc
ja
mov
std
sub
xor
mov
scas
inc
dec
loopne
jb
ljmp
rcrb
pop
hlt
push
imul
jne
repnz
rcll
ljmp
rcr
push
repz
xchg
jnp
jbe
fmul
in
pop
repz
fldcw
shll
shl
pop
add
in
lcall
or
icebp
stc
pop
jae
xchg
xor
mov
lcall
add
xor
mov
das
xor
jp
and
and
dec
mov
scas
inc
xor
jle
iret
insb
cli
push
sbb
shrb
sbb
test
stos
shll
cmp
jecxz
lock
adc
ss
aad
sub
cmpsb
xlat
dec
inc
dec
mov
aam
cwtl
ljmp
adc
out
test
aas
mov
dec
jge
push
xor
push
jns
inc
fnstenv
xor
push
jge
imul
imul
adc
xchg
mov
loope
add
jmp
or
pop
sub
inc
call
sub
or
mov
add
jno
repz
xor
insb
lret
scas
mov
cmp
and
das
jne
pop
xchg
out
mov
rcrb
adc
in
push
pop
lds
add
jne
xor
xor
dec
mov
sbb
jbe
mov
loope
enter
sbb
faddp
icebp
push
xchg
mov
pop
pop
fs
enter
aad
jmp
cltd
in
aam
out
sbb
rclb
outsl
inc
aam
sbb
jge
inc
inc
in
incl
xchg
push
push
dec
sub
insb
shl
lcall
sbb
pop
sbb
jmp
jo
and
test
sub
mov
sbb
fdivs
icebp
pop
mov
mov
imul
stos
repz
mov
xchg
add
inc
or
aad
jno
adc
inc
mov
movsl
aaa
loopne
push
push
leave
mov
xchg
pop
ljmp
xchg
lds
cwtl
inc
repz
cwtl
dec
jae
push
cmp
push
pop
inc
adc
test
lods
push
mov
cmp
adc
in
push
jecxz
mov
daa
testl
mov
repz
pop
outsb
into
jb
inc
jns
loopne
jno
shll
jle
pop
out
sarb
cli
sbb
xchg
clc
push
popa
arpl
sbb
push
gs
fadds
arpl
push
nop
push
push
ljmp
inc
ret
xchg
mov
push
mov
or
mov
mov
cwtl
sar
sbb
jno
push
leave
cmpb
iret
aam
inc
dec
sahf
lret
int3
cmpl
fbld
fimuls
pop
add
mov
loop
shr
repnz
ficoml
inc
push
adc
mov
or
test
and
jno
fstpl
cwtl
push
jl
sub
sub
fisttpll
inc
andb
cltd
mov
mov
dec
or
add
loopne
dec
fwait
pushf
sti
jle
pop
xor
mov
push
xchg
push
dec
add
lds
fwait
cmp
lret
out
cld
ret
cmpsb
ds
dec
sub
js
ret
or
push
adc
add
sbb
add
mov
adc
pushf
loopne
in
insl
je
add
or
cmpsl
jbe
adc
jg
aas
out
lret
pop
and
push
add
mov
test
mov
mov
sti
or
push
push
jae
inc
pusha
push
andb
shll
and
sbb
push
scas
jb
pop
fsubrl
cmp
sti
scas
das
out
pop
jnp
scas
hlt
push
scas
xor
mov
xlat
push
dec
jg
jnp
arpl
push
jp
into
cmp
and
mov
setp
enter
mov
imul
jnp
adc
cmp
cmp
jno
cltd
shll
movsl
xchg
sbbb
pop
leave
icebp
pop
push
mov
sub
push
lcall
data16
and
xchg
and
shrb
dec
add
sahf
or
scas
cmpsb
lock
shlb
cmp
hlt
mov
add
xchg
out
orb
sbb
push
jne
ret
stos
inc
arpl
jo
pushf
pushf
cmc
lock
out
mov
dec
ret
mov
pop
shlb
es
fs
mov
cmpsl
lcall
outsb
mov
pop
mov
xchg
mov
sahf
rol
sbb
movsl
dec
lock
sub
sbb
stc
insb
mov
mov
or
sub
lahf
icebp
jnp
loope
xor
test
shll
mov
push
pop
or
sub
push
dec
xor
mov
cmc
dec
rolb
or
andl
outsb
mov
jmp
xlat
adc
rol
int
popf
push
mov
mov
cmpsb
pop
xchg
inc
sub
outsl
xchg
fs
mov
icebp
aad
out
lea
sub
popa
repz
mov
dec
rcrl
ret
adc
adc
decl
outsb
sub
and
daa
mov
add
lcall
push
shrl
nop
lcall
push
lahf
lret
fisubs
shrl
push
dec
push
jbe
inc
sub
out
repz
jnp
jge
fwait
clc
dec
lods
insl
lock
fldenv
or
test
stos
shrl
pop
and
mov
rolb
dec
sub
cwtl
mov
adc
rcr
les
inc
popf
rcll
cmp
xor
pop
sub
add
lods
pop
adc
aaa
jns
add
sarl
ss
movsl
les
pusha
push
add
inc
in
fimuls
cmp
dec
shrb
nop
add
test
int3
es
or
out
lods
outsb
mov
in
test
inc
xorb
and
add
pop
fstpl
add
inc
mov
mov
mov
adc
repz
inc
xor
stos
xchg
insb
insb
mov
cs
gs
cmp
xor
push
push
in
adc
inc
or
sbbb
cmpsl
popa
mov
dec
test
loop
fwait
or
inc
pusha
imul
enter
mov
outsl
fdivr
and
ja
jnp
add
pop
jg
pop
xor
stc
in
mov
mov
cltd
adc
js
mov
imul
fidivl
sti
fdivl
out
loopne
gs
mov
or
imul
shrb
push
test
and
dec
out
push
and
ret
push
sbbl
mov
out
cmp
rol
adc
pop
lods
push
push
lock
ror
cmp
mov
push
lods
std
lods
push
add
xchg
adc
test
outsl
out
pop
adc
test
sbb
mov
jnp
jg
das
add
sub
outsb
mov
xchg
jmp
testb
push
in
hlt
lahf
adc
aad
push
je
xlat
push
cs
push
rcrb
aaa
mov
xchg
adc
sub
pop
dec
adc
jno
loope
pop
into
pushf
push
mov
pop
adc
sub
adc
xor
pop
mov
jo
xor
movsl
pushf
sbb
jo
idivb
pop
dec
loope
mov
jne
push
pushf
inc
pop
mov
dec
out
popa
dec
divb
xor
loop
leave
pushf
aaa
fdivrl
sbb
int
leave
or
mov
xchg
mov
jle
popf
jg
fdivrs
nop
mov
jns
stc
jg
addl
mov
movsl
mov
insl
in
arpl
les
loopne
mov
push
faddp
adc
outsb
add
push
xlat
jl
xorl
sti
stos
xchg
mov
rolb
scas
lcall
fwait
inc
cs
iret
pop
jno
pop
lahf
pop
pop
cs
scas
inc
push
fcomps
inc
ss
shl
jno
insl
adc
aas
and
pop
dec
es
imul
xor
rcr
rcll
movsl
aaa
xor
aas
push
aam
xchg
loop
jbe
shrb
adc
xor
fstpt
int3
adc
aam
rcr
mov
movsb
xchg
xor
cmpsb
push
loop
mov
sbb
mov
mov
stos
mov
mov
xor
sti
arpl
sbb
push
sbb
fldz
jae
jl
in
lcall
or
cmpsb
insb
xchg
add
popf
lcall
push
pop
jbe
fldt
out
adc
pop
call
cmpl
rorb
dec
sub
movsb
adc
push
inc
cltd
fdivrp
sub
pop
jns
jo
imul
cmp
mov
ja
int3
dec
mov
mov
fwait
aas
push
mov
jle
fdiv
jge
sub
ret
or
xchg
xor
jnp
fs
jl
dec
sbb
cmp
sbb
dec
sub
mov
sbb
cltd
xor
push
add
mov
mov
push
cld
ja
fsub
bswap
lods
mov
mov
sti
repnz
loopne
popf
rcrl
add
pushl
scas
cmpl
xor
and
adc
add
icebp
iret
loope
shr
sar
mov
mov
push
outsl
inc
jg
mov
adc
add
icebp
iret
loope
shr
sar
mov
mov
push
outsl
inc
jle
mov
adc
add
lock
loopne
shr
sar
mov
mov
sti
outsl
inc
or
test
shrb
xchg
dec
in
hlt
out
dec
cmc
test
nop
jmp
cli
pop
lret
push
fidivl
mov
xor
les
dec
in
hlt
sub
lcall
mov
xor
bound
dec
jle
subb
cmp
or
fdivs
add
aam
push
cmc
push
xor
pop
xchg
dec
mov
xchg
loop
mov
add
jecxz
mov
xor
inc
sbb
fcmovu
lahf
jg
lock
pop
nop
movsb
or
xchg
cmp
cmc
pop
out
push
mov
and
push
adc
jns
lods
jae
dec
mov
dec
insl
adcb
inc
scas
inc
lret
sbb
out
lock
repz
aam
loopne
hlt
or
movsb
mov
sarw
fwait
mov
push
adc
cltd
or
scas
dec
xchg
adc
or
cmp
add
add
cmpsb
test
outsb
inc
add
ja
mov
mov
leave
addr16
sbb
xor
repz
sti
insb
ss
into
enter
dec
jnp
dec
nop
pop
hlt
sub
es
sti
cld
lret
data16
cmp
push
sub
btc
mov
cwtl
sub
dec
stc
outsl
rcrl
repz
sahf
and
shll
call
sbbb
cs
aaa
cwtl
sub
jle
jae
dec
xchg
fildl
aad
out
out
inc
push
mov
xor
mov
cwtl
addr16
movsb
sbb
mov
xor
les
dec
in
hlt
sub
mov
inc
sti
push
lret
mov
xor
les
cltd
je
aad
cmp
pushf
or
cs
das
loop
scas
pop
jl
sub
or
je
scas
lea
or
push
mov
xchg
popa
push
pop
dec
sub
jnp
xchg
mov
xchg
inc
jmp
sub
xchg
mov
shll
repz
mov
jge
sahf
test
dec
inc
mov
addb
dec
mov
sbb
out
mov
scas
mov
sbb
mov
fistpll
sub
arpl
push
hlt
ffree
icebp
mov
stc
or
jns
sub
addr16
adc
mov
stc
jnp
fisubrl
cltd
insb
xor
adc
push
mov
jp
xlat
sbb
sub
scas
int
mov
inc
lret
push
dec
jle
cltd
shrb
ljmp
out
push
fnstcw
mov
and
add
dec
inc
loope
bswap
adc
aas
dec
int
jg
iret
sbb
lret
neg
jb
in
and
or
jge
push
shlb
push
pop
scas
sahf
mov
mov
and
xor
movsb
push
jns
ror
and
int
orb
xchg
mov
outsb
rclb
cld
stos
sti
sbb
push
xor
and
inc
dec
push
ret
jl
movsl
pop
mov
int
xchg
adc
fs
add
in
cmp
lea
push
cmp
fildll
mov
pop
and
out
add
cmp
and
iret
fucom
mov
jl
jp
xchg
scas
repz
ljmp
dec
iret
pop
sub
sub
jns
add
xchg
outsb
leave
xor
jnp
mov
push
hlt
scas
mov
xchg
aaa
scas
std
aaa
and
insl
jle
cmp
pop
in
xor
add
mov
sbb
enter
in
call
sub
cwtl
pop
xorb
std
out
sahf
stos
imul
loop
add
push
int
adc
inc
popf
out
lcall
xchg
out
mov
ds
jp
or
int3
mov
stos
adc
pop
scas
rorl
scas
inc
inc
mov
pop
mull
inc
pop
pop
shrl
and
sub
push
andl
inc
aas
int3
movsl
lds
test
jecxz
xor
cmp
insl
mov
clc
sti
jno
sub
xlat
andl
add
scas
outsb
jo
jle
stc
pop
mov
aaa
push
cmp
xor
pop
imul
cmpsl
sub
pop
pop
lds
divb
xor
fcmovne
xchg
add
leave
mov
mov
inc
imul
mov
jl
xchg
cmpsb
test
mov
push
dec
cmp
xchg
lds
mov
ljmp
dec
pop
pop
push
aaa
lcall
movsl
mov
leave
bound
cmp
lcall
out
stos
or
es
lea
leave
mov
push
mov
loopne
and
inc
inc
mov
jns
mov
push
ss
stc
imul
mov
enter
fwait
fs
adc
pushf
test
jle
shll
sbb
mov
dec
xor
mov
dec
add
lds
push
and
sahf
daa
popf
loop
push
mov
stos
sti
push
xchg
push
add
pop
cmp
or
nop
test
int3
nop
sub
or
adc
mov
pop
flds
test
mov
pop
lock
and
ret
add
jnp
push
stos
fistl
mov
out
cli
lock
dec
jbe
xor
negl
cli
test
pop
ja
push
call
js
cmp
clc
sahf
dec
add
pop
jmp
aad
dec
xor
push
dec
sub
popf
scas
xor
dec
inc
xor
out
hlt
sbb
fldenv
cmpsl
or
xchg
xchg
outsl
cs
sbb
xor
inc
ficompl
xor
inc
pop
fsubp
pop
or
int3
into
and
mov
scas
cmp
xchg
xchg
dec
lret
or
movsl
das
test
aaa
mov
cmpsb
roll
push
mov
mov
pop
sahf
add
rcl
fs
mov
and
mov
inc
sub
mov
pop
sbb
arpl
sub
fwait
pop
push
inc
push
lea
adc
aad
jae
xchg
jle
mov
ds
arpl
shlb
out
cmpb
cmp
xchg
xchg
mov
mov
cmpsl
dec
nop
out
mov
mov
call
mov
mov
mov
fstpl
test
js
cltd
jecxz
lock
jae
arpl
cmpsl
pop
push
inc
cmpsl
in
scas
cmp
mov
sub
popl
shl
shlb
js
cmp
lahf
fisubrl
dec
mov
mov
sub
jecxz
int
out
sti
aad
insb
repz
and
rcr
add
and
inc
mov
pop
and
dec
mov
xchg
xchg
sbb
shl
lea
inc
cs
inc
test
andb
and
lahf
mov
or
pop
xchg
jge
inc
sahf
mov
shll
push
sub
mov
adc
test
dec
ret
decb
mov
loop
orl
jne
mov
and
cltd
sub
insb
shrl
mov
mov
push
fdiv
dec
loope
and
cmpsb
dec
inc
and
mov
stc
jg
pop
cld
mov
mov
ja
stos
ss
cmp
lods
sbb
pop
ret
mov
jle
icebp
aad
stc
jl
and
sub
mov
jmp
ljmp
dec
and
call
xor
mov
cltd
loop
scas
lods
jmp
mov
xchg
inc
roll
inc
cltd
mov
mov
out
pop
lock
icebp
pop
sub
decl
fwait
call
jmp
frstor
adc
or
xchg
rcrb
fnsave
sbb
push
js
lea
sbb
hlt
sbb
mov
cmp
push
shr
in
lret
xor
mov
inc
mov
sub
adc
rcrb
fs
movsb
pop
sub
push
in
jb
xor
insb
bound
cmp
push
movsb
cwtl
js
sub
jb
scas
and
subl
push
sbb
push
mov
sub
and
or
adc
pop
fstl
xor
xor
xchg
je
sbb
sbb
or
mov
xchg
fcom
add
mov
sbb
push
pop
sub
pop
sar
addr16
pop
scas
add
movsl
mov
sub
addr16
mov
int
xor
push
es
negb
xor
adc
xor
lods
dec
dec
xchg
xor
ret
inc
sti
mov
out
and
cmp
xchg
stos
cmpl
cwtl
test
push
out
adc
xchg
jnp
in
sbbb
sub
or
jne
inc
test
push
push
xor
mov
jo
jmp
inc
inc
jb
fistl
cmc
pop
ret
rorb
jecxz
push
enter
into
sbb
add
adc
lahf
out
add
xchg
scas
sbb
sbb
jge
or
fisubs
jnp
popa
aad
ficoms
inc
addr16
push
or
pop
andb
sub
pop
and
jb
vhaddps
es
jl
add
inc
xor
gs
cs
inc
jmp
lock
mov
xor
rorb
enter
mov
outsb
and
mov
mov
pop
int3
lahf
in
mov
aas
add
cld
inc
cmp
cli
push
push
call
in
in
popa
and
inc
xchg
stos
lods
mov
aaa
sbbb
dec
clc
imul
test
add
mov
xor
movsl
shll
xchg
sbb
add
outsl
adc
push
ret
push
inc
pusha
out
and
pop
and
dec
shlb
inc
sbb
stos
fistps
js
jl
nop
mov
xchg
and
int3
dec
mov
scas
push
adc
jl
dec
add
out
fidivs
inc
movsb
mov
ret
inc
stos
and
sbb
clc
je
in
mov
dec
repz
insl
jne
sti
leave
pop
sbb
orl
mov
push
movsb
pop
in
es
pushl
and
aam
loope
push
test
test
outsl
sarb
jns
test
inc
in
cmp
sub
popf
jl
pop
mov
lds
cltd
into
imul
mov
push
cmc
movsb
cmp
scas
ret
inc
ret
insl
mov
popa
or
ss
mulb
test
es
add
push
dec
fwait
push
mov
cmc
notb
mov
fistl
out
inc
cmp
test
xor
cmp
cli
nop
lods
inc
subb
fidivrs
daa
ds
mov
sub
cmp
test
stc
xadd
lock
aaa
sbbl
cmp
std
pop
iret
mov
jae
clc
aas
and
push
xchg
testl
mov
mul
mov
jns
dec
pop
mov
mov
jbe
jb
mov
lods
enter
jecxz
daa
std
cld
movsb
push
jle
scas
or
pusha
fistps
and
inc
or
and
sub
inc
xchg
jmp
xor
xor
mov
xor
sbb
push
sti
mov
mov
pop
dec
and
sub
out
mov
mov
jle
int3
outsl
jae
sbbb
mov
out
fs
and
jne
mov
xor
lea
adc
loope
movsb
data16
les
push
lds
lret
jne
mov
push
in
int3
leave
lret
pusha
push
pop
and
stos
cld
adc
cli
add
mov
out
inc
in
ja
shll
movsl
aas
addr16
mov
lea
and
je
jns
in
push
fisubrl
mov
push
pop
mov
pop
fcmove
scas
sbb
inc
jb
inc
sbb
or
xchg
pop
adc
clc
mov
ret
lret
cmpsb
mov
pop
in
bound
dec
cmpsb
add
jno
insl
popf
jmp
hlt
and
pop
lea
outsl
stos
or
sti
xlat
pop
sbb
fwait
call
jns
pusha
stc
mov
xchg
add
push
int
pop
lock
push
sub
aam
pop
orl
stos
sti
jl
je
loop
mov
ljmpw
cmp
loopne
adc
adc
and
hlt
aad
cmpsb
adc
sahf
mov
mov
out
mov
add
ficoml
xchg
cltd
push
imul
scas
mov
fptan
js,pn
js
js
inc
outsl
scas
mov
sbb
lcall
into
test
push
shrb
bound
xchg
sub
lret
imul
mov
fimuls
adc
mov
inc
sub
lahf
cwtl
sub
xchg
gs
pop
lds
inc
lock
rol
mov
data16
xlat
dec
in
in
xchg
loop
outsl
xor
jnp
ja
repnz
pop
mov
clc
mov
rorb
or
push
sbb
inc
scas
sub
dec
int
push
mov
outsb
xchg
add
jecxz
insl
mov
jmp
shl
repnz
stc
jmp
pop
add
icebp
jg
jae
sbb
dec
icebp
icebp
add
lret
lahf
xchg
lock
xchg
popf
push
dec
inc
jae
sti
cmpsl
mov
les
testb
sbb
jnp
push
mov
fsubrl
add
sub
push
in
mov
scas
lret
in
jle
in
frstor
push
mull
sub
dec
outsb
cli
and
pushf
out
lods
inc
push
dec
test
cld
stos
les
stos
jb
xor
pop
movsb
inc
sub
mov
mov
fiadds
cwtl
lcall
xor
xchg
mov
test
out
xchg
ficoml
cmp
jb
push
sbb
dec
js
nop
mov
nop
dec
pop
jp
fiaddl
cmp
repz
and
fstl
mov
inc
pop
xchg
out
push
xchg
dec
ffree
or
jmp
lods
daa
sbb
xchg
test
imul
in
lods
and
xlat
sub
in
in
xchg
dec
test
push
fidivs
pop
mov
lret
xchg
vorps
aaa
mov
outsb
loop
lret
adc
jbe
push
shrb
mov
cmpsl
jae
mov
stc
sti
fwait
fs
jmp
push
mov
lods
dec
mov
mov
les
outsl
outsb
cmp
daa
aas
lret
je
cmpsb
stc
fsubl
es
movsl
push
mov
lds
xor
in
inc
sti
xor
mov
leave
mov
les
mov
jmp
jb
mov
lret
xor
dec
in
daa
pop
lahf
rol
std
repz
aaa
pop
xor
adc
cmpsl
push
outsb
in
leave
dec
outsl
ljmp
push
cmp
xchg
sbb
outsb
rcr
pop
mov
mov
xlat
notb
lods
cltd
pop
dec
jbe
subb
mov
movsb
mov
xchg
in
cmp
sarl
test
stos
push
inc
mov
leave
adc
add
outsb
push
out
dec
adc
pop
int
ss
or
xor
daa
or
jo
in
sub
sub
pop
jnp
sub
das
stc
mov
hlt
movsl
sub
movsb
lret
pop
pop
adc
test
ja
imul
in
pop
shrb
push
adc
sub
jb
xchg
faddl
mov
cmp
sahf
cli
roll
gs
jp
mov
pop
adc
add
lahf
sub
xor
and
out
xor
xchg
loopne
push
shlb
cmp
inc
ja
dec
popa
xor
add
pushf
xchg
inc
insl
icebp
mov
xor
mov
push
cwtl
sub
dec
and
popa
cmc
dec
popa
lahf
mov
mov
and
ja
cmp
mov
je
cmp
loope
fiadds
lods
repnz
or
push
hlt
xor
icebp
jns
jae
sub
lds
ds
or
fsubrl
adc
xchg
in
mov
sub
pop
xchg
jnp
pop
pop
push
pop
lock
mov
xchg
aad
push
jnp
sub
pop
pusha
xor
mov
push
jae
rcll
cmp
sbb
mov
cmp
mov
sbb
ljmp
xchg
mov
mov
lods
sti
ret
mov
pop
xchg
push
jbe
enter
ljmp
xchg
dec
stc
xor
cwtl
pandn
test
dec
xchg
int3
push
out
daa
ss
jb
push
or
push
jge
ljmp
xor
adcb
clc
adc
mov
jno
imull
gs
xor
daa
push
sub
or
je
push
jl
cltd
dec
lods
test
sub
add
xchg
movsb
clc
pushf
sbb
jbe
enter
xor
or
cmp
imul
pusha
push
mov
inc
pop
nop
adc
rcr
sti
pusha
popf
popa
mov
flds
and
out
or
sub
daa
inc
mov
push
jne
push
jns
cmovnp
adc
xchg
jecxz
xchg
xchg
jecxz
cmp
xor
test
stos
and
rcrl
pop
out
sub
in
outsl
cwtl
and
sahf
loopne
sbb
lock
or
idivb
mov
icebp
mov
mov
aad
shl
pop
jns
or
push
or
inc
mov
xchg
cwtl
inc
sbb
aad
cmp
pop
frstor
in
mov
popf
mov
pop
xor
mov
jo
jno
sarl
mov
add
sbb
cltd
enter
icebp
mov
xchg
fistps
pop
xor
test
test
lock
and
mov
aas
xchg
movsb
push
nop
ret
push
push
xchg
fnstenv
dec
test
fldl
jns
lcall
fldl
xor
adc
std
or
add
xlat
cmc
jle
scas
bound
mov
and
pop
enter
add
cmc
ret
fmul
push
xchg
and
fisttpll
mov
sbb
add
cld
movsl
mov
mov
sbb
stos
nop
jecxz
outsb
test
movl
mov
daa
or
or
push
out
inc
mov
jnp
inc
jo
popa
inc
dec
cld
shrb
arpl
xor
test
in
and
fisttps
mov
push
cmp
movsl
add
cli
cmpsl
cmp
adc
push
mull
js
sti
and
arpl
push
stc
aad
data16
cmp
jge
incb
xor
nop
loop
into
xchg
repnz
outsb
insl
or
or
rclb
inc
cmp
ljmp
push
mov
and
out
xor
push
jb
cmp
or
xchg
lds
mov
not
leave
add
hlt
pop
xchg
jns
lea
cmp
jne
dec
lahf
lret
ret
push
cmp
adc
mov
cmp
pop
add
pop
xor
fwait
cmp
ret
ret
jecxz
xor
divb
push
cmp
mulb
and
sub
scas
ja
push
mov
adc
cld
sarb
mov
xor
cmp
cmp
loope
subl
mov
and
imul
lock
mov
je
sub
mov
ret
fs
loop
mov
lahf
popf
rorl
jmp
lods
fistpll
cmc
enter
ds
and
and
xchg
or
push
xlat
adc
imul
push
jge
mov
mov
arpl
jecxz
dec
inc
aaa
stc
imul
adc
jbe
test
inc
or
jl
js
and
mov
mov
adc
test
xor
imul
lea
and
lock
das
push
push
outsb
fadd
sub
cmp
push
aad
jo
jno
movsb
mov
aad
or
push
movsl
cmp
inc
push
divb
pop
adc
gs
enter
add
push
cmpsl
jmp
mov
aaa
xchg
adc
int
lods
jnp
push
cmc
jl
lret
loopne
clc
mov
cltd
in
rolb
jbe
push
mov
sahf
imul
ja
mov
push
imul
or
sbb
jbe
das
inc
popf
dec
loope
inc
sub
aaa
dec
mov
pushf
data16
loop
or
mov
mov
xchg
in
scas
loope
fisubs
and
and
xchg
pop
es
inc
je
sti
jb
or
shlb
insb
sub
dec
imul
mov
ficomps
lds
leave
andb
adc
call
insl
jp
movsb
mov
add
loopne
xchg
aas
xor
inc
pusha
pop
ret
cmp
lds
dec
inc
push
pushf
sub
push
arpl
aad
pop
movsl
dec
fs
xchg
add
mov
enter
or
repz
rclb
inc
lock
mov
mov
idivb
jmp
in
out
and
xchg
imul
jne
fs
ljmp
call
dec
out
pop
shrb
xor
aam
js
push
loope
iret
outsb
or
sbb
or
adc
das
outsl
xorb
in
push
roll
out
ljmp
pushf
scas
inc
mov
pop
jp
adc
and
stos
sahf
inc
test
fwait
add
fs
xchg
cmp
pop
mov
xchg
inc
hlt
loop
popl
dec
jae
xor
cmc
mov
mov
jne
and
dec
mov
jecxz
data16
push
add
dec
or
je
cmpsb
fsts
loopne
sub
sbb
fdivrs
in
mov
aad
mov
jb
or
fdiv
fimuls
push
ljmp
adc
push
addr16
gs
enter
mov
es
mov
xchg
sti
jne
sub
out
inc
lret
out
in
mov
ds
mov
leave
out
scas
dec
adc
mov
jge
fs
xor
or
movsb
stos
out
jns
xor
lods
cmp
lds
insl
or
imul
stc
add
pushf
or
push
push
mov
call
xlat
mov
pop
into
std
mov
mov
lret
push
fs
cmp
cmp
out
push
jbe
xlat
adc
and
pandn
cs
push
mov
daa
movsl
or
push
adcl
jne
add
mov
or
add
xchg
in
cmp
xchg
dec
push
sbb
inc
adc
xchg
xchg
fcoms
cwtl
xchg
inc
insb
pop
xchg
inc
les
sbb
mov
aad
fidivrs
mov
sbb
loope
mov
fbld
stos
daa
jmp
cld
in
clc
int
aad
js
mov
adc
fs
sub
or
add
insb
cltd
fwait
div
sbb
std
outsl
or
ja
pop
xor
out
jbe,pn
aam
sub
out
mov
das
ret
arpl
lret
push
data16
push
fdivrs
dec
mov
leave
orl
sbb
jnp
imul
mov
ja
inc
xchg
adc
mov
cmp
cmpsl
inc
inc
jle
pop
pop
mov
xchg
xchg
mov
xchg
repnz
loope
hlt
sub
mov
inc
sti
push
lret
mov
xor
les
dec
in
hlt
sub
mov
inc
sti
push
lret
mov
xor
sar
lret
cld
pop
lock
test
decl
mov
sti
push
lret
fstpt
add
shrb
jnp
dec
add
sub
je
mov
fildl
fstpt
sti
pop
jmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
aas
pop
shrb
jo
dec
outsb
icebp
or
adc
in
pusha
cld
jo
add
sub
pop
rolb
loopne
lock
sbb
sub
cmp
int3
inc
fdivl
pusha
cld
jo
outsl
pushf
adc
scas
sar
dec
movsb
repnz
test
lahf
pushl
test
cltd
add
push
out
jns
push
loopne
and
adc
or
pop
push
mov
jno
leave
cld
pushf
popf
test
mov
shr
stc
dec
and
mov
cmp
add
add
add
shrl
sbb
sbb
push
vminsd
lcall
std
pushf
and
adc
and
lock
dec
repz
pop
cmp
int
faddl
push
add
mov
push
cmp
jne
movsb
xchg
aad
test
mov
adc
in
cmpsl
mov
adc
iret
mov
shrl
or
cmc
adc
loopne
dec
incl
cmp
or
add
out
lods
and
and
cli
call
jp
xor
movb
jo
cmp
sub
call
and
mov
jb
pop
leave
cmp
int3
push
adc
outsl
repnz
push
add
sbb
mov
stos
and
test
cmc
push
repz
lds
pop
and
das
xchg
pop
in
nop
sub
cmp
int3
inc
fcoml
pusha
cld
jo
add
dec
rcrb
jl
or
sbb
sub
cmp
int3
inc
fcoml
pusha
cld
jo
add
dec
sar
scas
inc
mov
mov
sahf
sti
movsl
subb
popl
xlat
ficoml
bound
jne
sbb
cmp
mov
ss
sub
in
bound
test
js
lret
fisubs
inc
ljmp
xchg
push
outsl
sbb
jb
dec
mov
add
ret
ss
pushf
sub
xor
decb
xchg
icebp
in
and
test
mov
dec
sbb
jmp
call
cli
xor
shlb
push
add
pushf
dec
jns
pop
or
test
scas
cli
movb
and
push
outsl
sbbb
push
cmp
sub
fbld
dec
cmp
lcall
lods
leave
push
je
dec
push
dec
xchg
push
in
xor
mov
pop
test
scas
xchg
push
enter
ss
hlt
lds
out
mov
dec
and
adc
inc
scas
mov
jg
stos
cmp
mov
xor
inc
fcoml
push
neg
or
fnsave
jge
pop
out
inc
inc
pop
movsl
aad
pop
into
or
inc
int3
mov
orb
icebp
xor
push
stos
icebp
xor
sbb
loope
or
pop
mov
cmpsl
or
dec
mov
scas
push
stos
add
outsl
loop
js
aam
lea
cs
sbb
out
clc
cmpsl
scas
mov
push
jnp
popa
in
push
inc
sbb
mov
mov
sub
ja
pop
repnz
dec
pop
mov
aam
sbbl
or
shrb
push
lahf
and
dec
jb
mov
jecxz
das
sbb
jle
scas
test
stos
shrl
jle
xchg
push
sub
pop
cmp
mov
jge
xchg
or
mov
inc
or
imul
fistpl
adc
or
rolb
mov
xor
aas
push
shlb
cs
out
fwait
pop
arpl
inc
mov
shlb
mov
mov
mov
mov
js
cmp
dec
jne
lock
xor
mov
inc
stc
fcom
lret
fldt
mov
sti
sub
add
xchg
ret
das
xor
or
or
lret
dec
fdivrs
adc
lahf
cld
cmp
out
test
nopl
or
shrl
cmp
and
pop
inc
rolb
dec
xor
cli
cmp
push
lea
loop
fsubl
lret
std
out
popa
push
mov
ret
aad
sbb
xor
xor
lea
add
clc
je
hlt
int
sbb
outsl
mov
mov
mov
stos
jb
mov
sub
or
imul
pop
and
dec
inc
jns
and
fdivrs
xchg
inc
adc
jo
movsb
push
lcall
int3
scas
adc
xlat
ja
pop
add
adc
push
mov
fimuls
add
lret
hlt
mov
daa
testl
das
sti
xchg
mov
ja
or
jg
scas
push
xor
jns
test
scas
cmp
movsw
pop
loopne
ds
dec
fisubl
pushf
add
xchg
stos
push
lods
inc
sbb
or
in
add
cmp
repz
dec
add
adc
mov
inc
imul
sar
jb
ror
sbb
fs
or
and
and
fs
inc
enter
faddl
sub
aaa
outsb
iret
jne
mov
pop
adc
mov
sbb
mov
call
negb
jge
loop
sbb
mov
cmc
or
and
jecxz
iret
adc
mov
xchg
test
loopne,pt
ret
inc
xor
jno
mov
push
and
iret
add
jbe
sub
mov
out
cmp
jp
mov
imul
movsb
sub
or
cmp
imul
pop
push
jmp
ret
in
mov
adc
add
packsswb
pop
lcall
mov
mov
scas
push
inc
add
mov
lea
fbstp
xlat
lock
jmp
movsl
in
inc
cwtl
mov
aas
imul
test
cmp
adc
mov
push
and
xchg
or
xlat
xor
aad
insl
out
subl
int3
jae
pop
hlt
dec
lahf
cmpsb
loopne
or
pop
pop
mov
sub
adcb
lods
xor
jecxz
xchg
repnz
jmp
ja
xor
xchg
sti
xor
and
cld
ret
mov
add
fisubs
cmpsl
inc
mov
lret
mov
pop
lcall
mov
arpl
notb
bound
add
cmpsb
fcoms
xor
loope
jae
fistpl
xchg
push
pop
inc
push
pushf
jo
shlb
pop
test
adc
mov
arpl
jge
idivb
nop
sub
push
mov
mov
imul
loop
dec
xchg
pusha
cli
inc
arpl
pop
mov
loope
add
inc
pop
test
and
sub
jg
je
mov
and
mov
inc
mov
jl
xor
dec
lock
adc
dec
mov
jns
push
sub
dec
xchg
dec
lahf
bound
xchg
ds
or
in
loopne
inc
nop
std
adc
and
shll
adc
pushf
add
jl
repz
jae,pn
sub
pushf
lret
mov
ret
fstl
push
mov
mov
jo
push
sub
sbb
rcrl
stos
sbb
xlat
repnz
inc
iret
dec
fs
xor
mull
dec
add
or
orb
mov
movsb
cmpsl
inc
addr16
in
cmp
jno
push
mov
cld
mov
adcb
adc
pop
js
in
lret
xchg
jg
sbb
dec
adc
stos
movsb
rolb
movsb
imul
xor
sub
shlb
push
inc
lods
ss
popf
sub
pop
jmp
push
push
push
addr16
icebp
loop
mov
lods
jno
pop
xchg
repz
pop
push
call
outsb
in
pop
sbb
cmpsl
pop
gs
in
and
push
fmull
pop
push
rol
int
jbe
adc
js
mov
ja
xor
sub
int
pop
enter
idiv
outsl
mov
lret
jne
clc
jbe
fs
adc
xor
push
loopne
xchg
in
push
or
mov
add
mov
xor
mov
aam
sbb
pop
mov
fstpt
adc
outsb
xchg
mov
and
cmp
arpl
push
scas
enter
push
andl
jg
sbb
testl
int
ljmp
cld
lods
jge
dec
aad
addr16
mov
subl
int3
fs
and
lcall
movsl
fidivrs
jge
sahf
shlb
fisttps
lock
inc
push
dec
rclb
int3
clc
out
std
pop
add
xchg
dec
and
mov
dec
jns
cmp
jo
mov
jecxz
shl
and
cwtl
push
jnp
sbb
lcall
cmp
xchg
push
std
mov
inc
shll
fwait
cmpsb
std
es
xor
std
js
jne
pop
test
dec
jo
lahf
mov
pop
pop
lret
adc
dec
daa
shrl
mov
mov
mov
fidivs
in
and
or
inc
and
push
push
xor
xchg
bound
out
jmp
fimull
fistps
cmp
test
mov
js
mov
out
xchg
shrl
cli
cmp
jbe
jl
xchg
mov
and
shll
sets
imul
push
dec
lret
cwtl
or
sub
dec
inc
in
adc
lock
in
out
shlb
pop
bound
insl
mov
dec
add
mov
pop
jo
rclb
jb
inc
add
cmc
pop
jb
pop
jle
sbb
sbb
or
adc
cmpsl
cmp
push
rcl
xchg
shrl
pop
ret
hlt
mov
lock
cld
scas
mov
jecxz
dec
sbb
or
adc
mov
jp
xlat
pushf
mov
arpl
nop
jno
imul
push
lcall
push
mov
jp
fs
xor
sbb
mov
xorb
mov
loope
lock
incl
into
jbe
mov
push
aad
pushf
inc
pop
xchg
scas
fwait
daa
mov
xor
xchg
repz
addb
ret
ds
mov
aam
adc
clc
cmp
jae
dec
loopne
hlt
pop
xchg
adc
cld
push
lods
dec
divl
jae
mov
and
mov
jg
mov
cmp
gs
shlb
subl
and
push
or
inc
mov
cli
or
push
outsl
and
test
call
cmp
mov
mov
dec
inc
sbb
xor
mov
sarb
pop
and
stos
mov
and
mov
jae
and
add
pop
mov
jb
fcmovu
ss
out
mov
cmpsl
xchg
xchg
ds
inc
cmpsl
int
lods
sahf
dec
decb
lds
call
imul
movsb
xchg
pop
jp
in
ss
xor
nop
std
cmp
sbb
push
nop
ss
out
jns
inc
leave
mov
fsubs
loop
in
mov
addb
add
out
jb
and
sub
call
fimuls
adc
mov
test
lods
out
mov
aad
mov
and
add
imul
stos
mov
cmp
sbb
in
mov
shlb
mov
jmp
adc
lahf
pop
jae
inc
and
cmpsl
or
out
mov
pop
jno
mov
mov
mov
pop
and
lret
dec
add
mov
mov
rcrb
out
sub
lret
loop
or
and
inc
sarl
mov
add
sub
jae
lahf
pusha
out
jl
pop
aas
fcoml
or
gs
call
sub
andl
ljmp
mov
jmp
jl
jb
cmp
aad
cli
dec
inc
push
nop
cmpsb
push
bound
movsl
xchg
or
addr16
shll
cmp
ret
ljmp
loopne
sub
fisubrs
dec
pop
mov
and
cmp
rcrb
outsb
out
cmp
cmp
movsb
sahf
xor
jl
xchg
mov
loope
ss
xchg
out
push
mov
or
sbb
iret
lock
sub
cs
popa
lea
cmpsl
add
jg
rcrb
mov
push
lcall
sbb
cs
lcall
jecxz
dec
xor
sarl
insl
outsb
adc
push
test
push
cmpsl
je
xor
or
ds
and
movb
cli
pop
mov
pop
lret
or
jmp
iret
sbb
and
das
adc
lea
mov
idivl
xchg
adc
test
fsubl
push
cmpsb
pop
fists
inc
mov
arpl
shrb
push
xor
mov
lds
add
inc
arpl
inc
pop
ja
jb
and
rcr
hlt
mov
into
mov
pop
dec
stc
int3
inc
das
cmp
lods
push
cltd
mov
negl
adc
mov
addb
xchg
jns
hlt
sub
or
hlt
push
mov
cmp
scas
lods
insb
pop
into
in
and
enter
jo
ss
rcrl
add
outsb
xchg
shll
lea
pop
test
mov
fdivl
xor
outsb
adc
mov
in
mov
icebp
inc
or
sahf
cmp
push
add
jecxz
push
int3
sarb
imul
jge
pusha
push
add
push
test
mov
xchg
dec
cmpb
jb
outsl
into
scas
cmp
call
jo
scas
mov
lods
lret
subb
iret
jmp
sub
or
or
les
mov
and
femms
xchg
inc
popf
xor
in
cmp
stc
lock
lcall
in
mov
test
ds
push
orl
stos
cmpb
into
test
add
mov
and
loop
imul
xchg
mov
dec
lret
pusha
and
sbb
lret
clc
dec
cmp
ss
test
fiadds
andps
popa
movsb
div
adc
stos
cmpsb
sub
dec
jecxz
hlt
sahf
movsb
lahf
out
dec
xchg
dec
xchg
rcrl
pop
int3
sti
inc
xor
jbe
cmp
add
into
lea
cmpsb
outsb
mov
out
addr16
xchg
pusha
jbe
mov
jnp
leave
mov
inc
sbb
aad
imul
push
mov
adc
stc
loop
add
imul
negl
in
cmpsl
dec
mov
cmp
sbb
jg
inc
xor
movsl
pop
pop
jmp
inc
mov
or
sbb
jge
push
mov
loop
je
xchg
push
mov
inc
mov
mov
and
mov
es
nop
fldenv
aas
pop
hlt
sbb
in
lss
aam
cmp
cmc
je
dec
mov
adc
lods
js
into
lods
fstp
mov
add
cmp
sub
mov
jo
sbb
adc
push
ror
mov
roll
hlt
inc
push
pop
or
inc
mov
nop
test
lds
adc
push
je
push
add
test
xor
push
mov
adc
test
data16
add
sbb
cmc
movsb
cmp
xchg
pop
mov
add
inc
bound
jnp
xor
xorb
stos
jmp
jmp
bound
clc
pop
pop
jp
std
cmpb
ja
rcrb
iret
outsb
mov
fdiv
mov
test
ror
adc
mov
mov
ds
or
sub
jecxz
and
out
repnz
andl
sahf
orb
andnps
aam
mov
popa
pop
test
out
inc
negl
int3
cmp
imul
xchg
inc
jl
cmp
call
pop
imul
lods
movsl
lret
pop
jo
adc
jg
dec
loop
and
or
fwait
add
and
hlt
mov
in
or
movsb
das
sub
repnz
sbb
pop
aad
jp
inc
add
mov
test
jbe
iret
aad
insl
dec
xchg
push
xchg
jp
push
arpl
push
call
fistl
cs
jbe
or
fcomip
ret
repz
sbb
push
inc
imul
into
mov
jmp
les
mov
scas
pop
mov
out
adc
sub
xchg
js
jnp
mov
test
inc
out
mov
sbb
cmp
enter
push
mov
sub
imul
nop
adc
mov
pop
sbb
mov
loop
ljmp
adc
cmp
dec
jo
xor
dec
xchg
lret
mov
xor
cmp
push
push
push
outsb
lret
pushf
shll
imul
pop
adc
jmp
sub
icebp
sbb
movsl
cli
dec
insl
adc
insl
rcrb
jo
in
or
jl
aam
jo
aam
movsl
sbb
mov
insb
mov
movsl
scas
addr16
xor
fmull
and
nop
sub
xchg
dec
fnstcw
or
insl
orl
fldenv
push
popf
pop
stc
test
sbb
hlt
jns
xchg
jge
add
mov
cmpsl
pop
cmp
orb
jl
adcb
adc
inc
mov
lcall
lret
push
push
pop
sbb
out
xchg
and
xor
jae
jo
add
jge
roll
sub
repz
push
loopne
sub
aaa
push
ljmp
fsubl
push
jne
ja
andl
psllw
scas
adc
enter
push
xor
or
add
xor
mov
sbb
dec
and
das
sub
add
add
out
push
pop
into
xor
inc
lahf
jnp
fcompl
pop
stos
dec
cmp
das
sbb
inc
jbe
adc
mov
xchg
cmp
mull
aam
rcrb
lret
les
lahf
dec
mov
or
jb
clc
nop
adc
insl
and
faddl
jecxz
dec
cmc
call
mov
push
aam
adc
pop
xor
adc
sarb
and
xchg
fwait
mov
push
cli
dec
adc
add
mov
movsl
in
mov
test
std
mov
jmp
mov
aaa
popa
push
mov
mov
test
scas
mov
dec
lds
xchg
jnp
inc
repz
mov
add
push
mov
mov
ss
xchg
sub
outsb
in
lods
outsl
dec
test
aam
lcall
mov
data16
or
pop
jg
sub
loop
push
sub
cmp
dec
inc
sahf
mov
jle
imul
mov
mov
in
stos
ds
mov
adcb
add
mov
imul
adc
jl
jmp
popf
mov
xor
filds
sbb
add
sbb
out
pop
mov
add
outsl
scas
cmpsl
jo
and
cmp
adc
cmp
push
lcall
imul
sub
add
call
or
cwtl
xorb
push
es
pop
ret
cld
cwtl
and
arpl
icebp
sahf
cmp
into
aaa
sbb
out
pop
rcl
push
in
gs
adc
add
xchg
test
outsb
pop
cmp
sbb
mov
pop
je
or
sar
aaa
and
int
mov
lahf
jp
pop
inc
lods
sbb
icebp
or
pop
mov
cmp
push
jmp
dec
daa
or
repnz
ss
test
add
sbb
stc
lds
adc
movsb
repz
mov
data16
in
dec
push
xchg
xchg
mov
jg
mov
pop
jbe
pop
in
js
adc
roll
scas
aas
ret
test
out
shl
shl
outsb
cmp
adc
xchg
in
fimuls
ret
pop
sub
imul
imul
xchg
xchg
lret
push
or
inc
inc
mov
ror
stos
mov
clc
add
dec
dec
daa
mov
lret
rolb
mov
sbb
bnd
and
inc
pop
lret
fidivl
sub
mov
xchg
ret
mov
aam
pop
ficoms
repnz
mov
les
mov
xchg
xchg
negl
push
movsb
lds
push
push
out
fsub
adc
js
jo
rcl
lds
js
mov
lret
shll
loopne
mov
xchg
loopne
mov
cmp
mov
push
test
shl
inc
sar
inc
mov
mov
mov
pop
adc
ret
sbb
or
scas
mov
sub
jp
xchg
lret
outsb
notb
pop
jnp
jnp
fwait
mov
xchg
mov
clc
mov
rcrb
mov
jmp
and
insb
cwtl
arpl
sbb
addr16
lahf
das
rcrb
ss
pop
ret
movl
stc
pop
shl
inc
inc
xlat
or
les
ljmp
subb
fisubrs
xchg
jge
mov
fwait
repz
ret
enter
jno
es
sti
sarb
imul
lret
das
out
xor
adc
out
jae
dec
mull
push
jno
cmc
push
mov
inc
out
faddl
daa
lock
out
pop
ljmp
cmp
jns
lods
popa
xor
push
mov
jmp
mov
inc
pop
sbb
sti
je
and
jnp
fldenv
mov
fsub
mov
push
push
ret
lret
ss
sub
ss
cs
clc
out
mov
dec
pop
adc
inc
jp
arpl
jmp
push
xor
adc
xor
inc
dec
mov
inc
jne
cmova
xchg
cmp
pusha
ret
faddl
dec
stos
popa
hlt
cmp
addb
mov
xchg
enter
outsl
adc
xchg
fwait
out
cld
test
clc
mov
xchg
mov
outsl
push
shlb
mov
jnp
insl
push
scas
dec
mov
xchg
pop
and
push
mov
xor
jno
iret
pop
icebp
fisubrl
fadd
rorb
xchg
clc
dec
xor
pusha
cmc
or
xchg
mov
pop
les
sarl
arpl
mov
pop
daa
cli
test
stos
in
sub
push
mov
data16
adc
pop
outsb
ficompl
in
adc
iret
mov
imul
subl
sahf
and
fwait
inc
cmp
shlb
in
scas
stc
or
aas
test
push
ficomps
or
adc
adc
repnz
aaa
pop
iret
pop
fdivrl
into
push
mov
popa
out
sbb
dec
pop
shrb
mov
sbbb
mov
fcoml
pusha
cld
jo
add
dec
rcrb
jl
or
sbb
sub
cmp
int3
inc
fcoml
pusha
cld
jo
add
dec
shrb
jl
pushf
sbbb
mov
fcoml
pusha
cld
jo
add
pop
rolb
ss
icebp
or
or
sub
mov
cli
inc
pusha
cld
pop
sti
mov
push
filds
or
add
or
push
pop
sub
push
xchg
sbb
mov
xchg
jecxz
repz
cmpsl
rolb
inc
xor
adc
bound
jb
inc
daa
aaa
frstor
and
repnz
cmpsl
rorb
pop
xor
jg
push
bound
jb
inc
xor
mov
xchg
cld
mov
cmpsl
into
movsl
daa
outsb
inc
inc
cmp
ja
fdivr
popf
add
ficoms
and
dec
imul
cmp
lret
push
clc
inc
lret
push
mov
dec
or
xchg
repnz
fidivl
inc
repnz
mov
aad
cmp
push
dec
pusha
push
xchg
in
inc
xor
jb
dec
daa
mov
pop
scas
dec
testl
divl
mov
pop
inc
jmp
aaa
push
fistps
cmpsl
loop
out
cmp
stos
pop
xor
mov
mov
xlat
enter
mov
out
push
repz
mov
xchg
and
ja
jo
pop
bound
push
into
mov
xchg
loop
repnz
mov
dec
adc
push
jae
push
xor
rol
stos
test
mov
sti
xchg
jecxz
shlb
inc
pop
adc
jno
and
pop
adc
mov
repnz
fs
cmpsl
cmpsl
xchg
arpl
adc
push
push
pop
jb
inc
daa
push
xlat
mov
out
xchg
loop
repnz
cmpsl
rclb
inc
xor
adc
bound
jb
inc
daa
push
xlat
mov
out
xchg
loop
repnz
cmpsl
rclb
test
cs
pmullw
xchg
sub
mov
mov
or
rolb
xorl
adc
notl
sbb
sbb
cli
or
imul
nop
pop
je
scas
insl
rclb
mov
inc
in
ss
mov
call
test
pop
inc
test
cmp
or
pop
cmp
jae
mov
daa
jge
fcoml
mov
xlat
inc
in
mov
mov
mov
adc
sub
sbb
je
pop
xchg
or
pop
mov
sub
sbb
mov
lcall
jno
mov
sti
out
or
dec
sahf
dec
or
add
xchg
xorb
dec
add
mov
inc
icebp
cs
sub
mov
inc
movsl
mov
adc
addr16
imul
divb
scas
add
fistps
mul
mov
pop
aaa
stos
les
add
pop
or
mov
push
fwait
insb
push
rol
pop
dec
fistpll
xlat
call
add
shl
loop
cmp
fs
rorb
fs
out
pop
mov
shl
jmp
stos
xchg
mov
sbb
loope
and
xchg
test
fisubs
lds
cmpsl
dec
and
cmc
aam
fadds
or
add
add
orb
pop
sub
pop
lcall
fimull
mov
xchg
inc
xor
out
fs
sarl
aaa
icebp
cld
or
xorb
mov
gs
mul
in
sbb
sub
fwait
add
dec
xchg
cmpsb
int
cmp
mov
xor
cmpl
test
sub
aad
or
out
jo
sbb
mov
mov
es
inc
mov
cmpsl
pop
scas
jne
mov
push
into
paddsb
push
imul
inc
pop
rcrl
add
fldcw
test
cltd
ffree
mov
ret
mov
stos
ret
popf
adc
mov
rclb
jmp
pop
jg
jne
lock
data16
sbb
insl
push
mov
int3
subb
xchg
jecxz
movsl
adc
in
pop
and
xor
push
testb
pop
xor
or
loope
push
loop
subb
scas
mov
xchg
lds
push
aad
inc
mov
sbb
aaa
stos
repnz
aas
scas
lcall
lods
int
push
xchg
pop
icebp
sbb
and
and
adc
stos
loop
or
xchg
jle
sub
sub
adc
lds
add
imul
ret
and
scas
test
dec
pop
sbb
loope
out
sbbl
sub
into
lods
xchg
push
jne
xor
lret
je
add
daa
lahf
and
sub
dec
sub
rcrl
ret
or
leave
push
fs
mov
adc
mov
int
pop
mov
sub
jp
test
pop
ds
nop
daa
outsl
lcall
outsb
mov
lds
insl
xor
insb
push
cmp
imul
inc
subb
fsts
std
dec
ret
add
jg
sbb
mov
cs
jne
out
loop
push
hlt
ret
pusha
xor
xchg
cld
fcomi
mov
int3
test
fwait
mov
dec
adc
test
mov
mov
lds
adc
fsubs
addr16
dec
aam
lahf
movsl
lret
push
pop
lret
push
call
dec
push
scas
pop
dec
test
xchg
je
es
in
push
hlt
stc
mov
jge
pushf
rcrl
lock
sub
iret
mov
ret
pushf
mov
stos
lea
ret
dec
aas
enter
call
loopne
and
sahf
xchg
push
imul
idivl
mov
jecxz
mov
aam
mov
inc
rorb
sar
arpl
adc
mov
es
mov
pop
imul
dec
add
aad
sbb
add
loope
and
fwait
adc
ja
xor
pop
mov
cs
test
or
loopne
lret
cmp
scas
pop
or
adc
xchg
mov
aam
daa
daa
cld
mov
cli
xor
fiaddl
jns
dec
out
nop
inc
mov
inc
rcrb
xchg
enter
imul
jne
jne
aas
std
add
stc
aas
dec
rcl
jl
nop
lods
pop
outsl
sbb
cmp
mov
mov
fstl
notl
adc
aaa
sub
out
adcb
imul
inc
inc
mov
lcall
and
or
sbb
fcoml
je
int3
lock
sbb
or
cmp
and
push
mov
and
scas
fs
shl
sbb
xlat
push
push
mov
fcomps
push
jmp
fcoms
pop
pop
mov
ja
lret
scas
mov
cmpl
shlb
pop
push
or
mov
ds
inc
push
jne
cmp
in
pushf
loop
or
idivl
std
jg
jge
insl
es
in
add
pop
add
add
mov
sub
add
pop
cmp
in
mov
cmp
ficomps
jmp
jle
clc
mov
scas
xor
sub
call
jne
adc
xchg
sbb
loopne
cltd
jmp
mov
push
push
cmp
jne
xchg
enter
loop
int3
cwtl
ror
dec
out
pop
rol
mov
add
mov
negb
lds
imul
out
mov
push
cli
push
aaa
movsl
jb
cmc
test
daa
test
push
or
or
js
push
push
jg
iret
jbe
mov
addr16
loop
sbb
dec
dec
je
xchg
jb
aad
stos
out
jle
cmpsl
lods
adc
mov
mov
sahf
push
push
add
cmpsl
outsl
cmp
enter
cwtl
loopne
inc
push
pusha
pop
lds
lds
imul
mov
cmp
sar
jle
dec
mov
inc
xor
fmull
push
mov
jmp
lods
cmp
imul
out
sti
cmpsb
jl
das
stos
fs
cmp
xor
mov
imul
jbe
out
push
insl
out
je
pushf
fiaddl
lock
insl
push
pop
cmp
lahf
loope
mov
mov
cmpl
inc
lcall
xchg
neg
push
cmp
fcmovnbe
mov
sub
nop
movsb
xor
adc
inc
mov
xchg
xchg
jle
addr16
mov
ss
mov
push
dec
ret
jl
loope
scas
and
lock
addr16
popf
cmp
pop
pop
mov
xor
inc
adc
int3
pop
mov
add
lahf
daa
xor
dec
and
cwtl
push
jg
xchg
xchg
cmc
sub
ret
negl
add
std
clc
pop
repnz
lock
in
ret
fcoml
in
jb
shlb
add
xchg
sub
xchg
push
mov
pop
mov
or
sbb
scas
fcmovbe
inc
sbb
sub
jecxz
jecxz
or
insb
xchg
test
stos
dec
bound
imul
jp
rorw
and
pop
fisttps
bound
sub
sahf
popl
adc
jle
sbb
pop
out
add
xor
in
mov
xor
or
rol
pushf
xor
cmpsb
sahf
add
js
jae
imul
enter
pop
loopne
inc
popf
adc
call
xchg
mov
dec
pop
cmp
jno
xor
andb
adc
xchg
mov
aas
addb
xor
negl
daa
mov
test
sbb
or
loopne
repnz
mov
mov
mov
mov
sub
mov
add
push
cmp
lcall
cmp
xor
mov
clc
test
ficoml
dec
aam
shl
xchg
arpl
jae
push
push
adc
lock
mov
pop
jp
test
popf
data16
cmp
xlat
dec
scas
out
push
push
repz
xchg
xor
std
icebp
enter
cmpl
cmpsl
mov
sbb
push
add
sub
push
mulb
xchg
lahf
cmp
lret
cmp
aad
xchg
call
push
push
xor
enter
ds
jns
scas
arpl
xchg
mov
and
xchg
in
addr16
cmp
cmp
mov
fldt
ja
inc
xor
stos
push
push
mov
cmp
xchg
push
mov
imul
in
dec
cmpsl
push
loopne
push
pusha
outsl
cmp
xor
ret
or
sbb
jg
adc
dec
scas
jae
xchg
cmp
clc
scas
xchg
les
fwait
out
mov
aaa
adc
mov
push
repz
add
sbb
dec
or
sub
adc
loope
xor
jae
fs
ljmp
or
cmc
dec
push
icebp
stos
cmpsl
mov
scas
mov
mov
push
xlat
int
jne
pusha
stos
das
jp
in
xor
mov
mov
xchg
sbb
scas
faddl
dec
out
std
int
xorb
imul
inc
or
stc
loopne
mov
cmpsb
stos
xchg
add
mov
mov
xlat
loop
xorl
sarb
lcall
addl
cmpsl
test
push
mov
lock
bound
mov
test
sub
into
clc
mov
stos
sub
lods
and
push
out
mov
sub
shlb
jle
cs
add
sbb
mov
test
xchg
data16
orb
imul
dec
dec
mov
or
lret
outsb
les
cs
fildll
sarl
cmp
stos
cs
sbb
iret
mov
mov
lret
je
les
repz
insb
mov
cs
fsubrs
fs
push
adc
inc
imul
cwtl
lea
ja
mov
and
hlt
iret
decb
lret
aad
mov
sbb
add
dec
and
in
lea
arpl
dec
addb
lock
out
inc
mov
push
ret
ret
loop
fnsave
orb
and
fbld
xor
insl
sahf
ret
cs
jb
xor
imul
fstpl
jae
adc
subb
aam
sub
ljmp
test
popa
fcompp
into
mov
iret
call
std
iret
or
jns
dec
push
mov
pushf
aaa
int3
push
xor
inc
adc
mov
push
adc
lods
pop
xor
sub
push
insl
sbb
dec
inc
cli
outsb
jo
pop
mov
add
mov
inc
mov
mov
pop
pop
fsubl
mov
insb
push
filds
jmp
aas
das
and
sub
or
cmpl
fs
stos
flds
lods
jp
insl
sub
mov
mov
inc
mov
call
sahf
cwtl
xor
scas
cli
loope
enter
cwtl
xchg
push
arpl
pop
fneni(8087
mov
inc
dec
je
aad
test
push
xor
nop
sub
jno
mov
daa
pop
insl
add
loopne
stc
pop
js
sbb
dec
imul
rcr
lds
sbb
int
xchg
rcll
dec
xor
lds
roll
or
mov
sbb
sub
push
mov
mov
int3
int3
sbb
fs
mov
popa
dec
push
dec
data16
sub
das
mov
fisubl
insb
and
mov
dec
aam
cmp
sub
add
mov
pop
fisttps
enter
lock
mov
mov
lret
jae
and
xor
mov
inc
mov
dec
in
push
mov
xchg
dec
pop
xchg
mov
outsl
add
call
pop
loopne
sub
cmc
gs
int3
movsl
inc
icebp
bound
fisubs
mov
and
mov
mov
outsl
mov
stos
mov
mov
js
sbb
mov
iret
mov
cmp
shll
or
add
pop
outsl
sub
leave
xorl
in
push
dec
imul
xchg
cmc
jg
inc
popa
mov
test
nop
std
cmp
insl
adc
mov
int3
lea
xchg
sbb
push
xchg
fwait
sar
in
in
or
sub
aaa
aad
mov
rcrl
cmpb
push
jno
mov
push
cmp
sub
mov
push
cmp
icebp
test
icebp
outsl
and
mov
adc
maskmovq
dec
fildll
gs
popf
add
mov
pushf
sub
mov
xor
test
cmp
jbe
lds
pop
stc
jb
fcoms
cmpsl
popl
lret
ja
movsb
fidivrs
mov
push
push
jnp
fisttpl
and
pop
cmp
fstpt
pop
je
xchg
xorl
inc
mov
cld
mov
imul
fadd
pop
jg
mov
mov
arpl
loope
inc
icebp
xorl
fbld
jnp
ret
scas
sbb
pop
icebp
jnp
dec
imul
aaa
out
hlt
sbb
ficompl
inc
mov
je
sbb
add
cmp
mov
jge
pop
pop
jle
cmp
mov
or
cmp
and
fwait
mov
sbb
in
aaa
aas
adc
gs
cmpsl
and
lret
outsb
mov
mov
mov
cmp
sarl
aad
xchg
dec
insb
sbb
fisttpl
aam
call
std
mov
sub
std
inc
int
int
add
jne
lcall
incb
enter
int
stos
pop
mov
insb
gs
xlat
leave
pop
mov
js
shlb
adc
in
jmp
cmc
in
cs
inc
mov
mov
or
movsl
test
cmc
out
xor
ret
inc
movsb
rcl
in
pop
mov
lods
movb
xor
push
add
cli
cs
sub
call
sbb
and
dec
insb
es
push
or
aam
icebp
shrl
aam
mov
in
scas
adc
add
inc
cmp
daa
sbb
push
stos
cwtl
jns
jmp
add
gs
cld
imul
mov
negl
in
imul
outsl
adc
adc
in
shrl
js
test
imul
xchg
ret
jbe
and
and
movsl
sbb
and
inc
sbb
ficompl
sbb
and
out
cli
insl
in
and
repnz
jmp
xchg
or
testl
aam
in
lahf
pop
es
inc
sti
and
cli
pop
adc
je
dec
pop
or
fists
pushf
push
push
jmp
nop
mov
or
outsb
push
loope
inc
jae
leave
out
sub
sbb
fsubs
ljmp
xchg
sti
xchg
xor
mov
je
add
fimuls
mov
jo
mov
enter
cmp
lock
out
and
xor
cld
jle
mov
xchg
sub
and
cmp
pop
mov
in
sbb
fiadds
notb
pop
xchg
fnstsw
sarl
sub
push
in
pop
ja
xor
stc
mov
out
pop
mov
cltd
mov
push
jnp
pop
fucom
inc
arpl
loop
imul
mov
clc
ljmp
push
pop
es
popa
xor
adc
call
icebp
loop
insl
jp
xabort
inc
je
icebp
in
ljmp
and
arpl
cmpsl
cmp
cs
mov
xor
or
clc
mov
push
andl
add
rol
cmpsl
xlat
pop
dec
sti
sti
jmp
or
push
adc
cmp
push
out
xor
jp
test
pop
jb
push
dec
enter
stos
mov
js
das
les
iret
pushf
push
and
mov
mov
ja
sbb
ljmp
sbb
test
aas
rcrl
popf
mov
xchg
in
inc
add
je
jg
inc
xor
pop
loope
jno
jne
xchg
imull
add
lea
insb
push
xchg
pop
rol
cmpl
les
fwait
sub
jae
hlt
das
mov
fldcw
mov
sub
out
arpl
push
shll
push
mov
cmp
jg
iret
lahf
es
fbld
push
test
loop
jp
insl
jle
jp
es
jae
lods
outsl
adc
adc
popa
je
cmp
ds
enter
and
ljmp
sarb
daa
lret
test
mov
push
xor
xlat
lock
je
xlat
xlat
push
add
lea
shrl
flds
sbb
sub
adc
push
xchg
push
mov
push
ja
outsb
dec
jb
leave
int3
and
mov
dec
mov
adc
bound
int
repnz
push
push
arpl
mov
movsl
jo
cmp
aad
jecxz
add
adc
sbb
cli
rcr
sub
add
push
mov
clc
add
add
jecxz
dec
push
lcall
mov
mov
cmp
jo
xchg
or
jp
cmc
mov
mov
sub
push
push
movsl
out
pop
adc
sub
mov
and
shll
insb
bound
jnp
sarb
cwtl
adc
sbb
jb
xor
test
and
aad
sub
jbe
sbb
popf
jae
sub
lret
jns
outsb
movsl
shll
aam
mov
mov
xchg
push
repz
xchg
fbstp
test
pop
loop
mov
outsl
adc
push
rcrb
lcall
pushf
orl
popa
push
fwait
shll
sub
add
xor
mov
or
jge
inc
mov
mov
fwait
push
cwtl
xchg
fisubrl
xchg
inc
or
je
popf
adc
pop
fcomps
add
clc
xchg
es
imulb
fldt
mov
jo
dec
lret
les
ja
and
frstor
push
movsb
mov
movsl
dec
mov
cmpsl
jo
add
fimull
add
mulb
into
fdiv
push
out
and
ljmp
mov
and
adc
fldt
mov
xor
in
clc
pop
inc
lahf
icebp
sarl
or
push
mov
fdivrs
sbb
pop
lods
cmc
push
xor
scas
gs
inc
dec
addb
inc
adc
push
cmpsl
sbb
or
add
mov
pop
scas
jge
cli
inc
push
xchg
or
mov
cli
aad
inc
pop
jle
mov
inc
cmp
sbb
in
xchg
jle
mov
push
cwtl
and
dec
sbb
stc
cmp
mov
inc
lds
shll
ja
xor
inc
adc
xchg
push
imul
rclb
stos
scas
imul
sbb
int
jno
add
fs
lea
sub
mov
das
sbb
lea
cmpsl
hlt
cld
jb
insl
mov
cmp
mov
lcall
roll
pusha
incl
shrl
jle
dec
and
addb
aad
out
das
xor
je
xchg
inc
xorb
pop
add
pop
aaa
jle
dec
add
scas
cmp
int
insl
dec
stos
or
jle
out
insl
push
jo
aaa
test
adc
inc
mov
sti
test
stc
pop
js
popf
seta
mov
mov
cmp
cmp
pavgb
xchg
mov
pop
outsl
mov
into
cmp
lahf
out
lds
in
aaa
or
imul
call
fwait
arpl
mov
into
outsb
in
sbb
frstor
xor
add
jbe
leave
int
push
test
cmpsb
jge
rorb
and
xchg
out
jae
mov
arpl
ljmp
sbb
mov
insl
data16
leave
and
push
sbb
mov
mov
mov
dec
fistpl
xchg
ja
outsl
sahf
xchg
jmp
ljmp
popf
sbbb
ret
adc
xchg
test
push
cmp
stos
dec
ljmp
jg
sbb
imul
adc
pop
popf
mov
xchg
gs
sbb
jl
bound
jge
add
mov
push
int
pop
lret
xchg
mov
adcb
scas
mov
adc
push
jns
icebp
enter
sub
adc
lods
jecxz
scas
notl
mov
cmp
cmp
and
rcrb
or
adc
and
fbld
fwait
jge
bound
in
arpl
fdivrs
cmp
mov
dec
ror
insl
fs
sub
je
test
daa
nop
insl
cmpsl
js
test
pop
enter
and
sbb
mov
add
jg
dec
sbb
mov
shl
jmp
and
adc
dec
fdivrl
cmp
cmp
and
xchg
mov
xchg
lcall
and
sub
xchg
and
adc
fdiv
jb
adc
adc
cmp
out
mov
int3
mov
rclb
mov
dec
mov
mov
xor
call
lea
mov
out
xor
add
pop
bound
jb
inc
daa
push
xlat
mov
out
xchg
loop
repnz
cmpsl
rclb
inc
xor
adc
bound
jb
inc
daa
push
xlat
mov
out
xchg
loop
repnz
cmpsl
rclb
inc
xor
adc
bound
jb
inc
daa
push
xlat
mov
out
xchg
loop
repnz
xchg
shlb
jae
inc
add
pop
bound
jb
inc
cmpsl
xchg
sub
out
loopne
prefetchw
pop
sub
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
push
dec
iret
jbe
int3
imull
bswap
ret
add
add
push
push
add
add
add
stos
add
add
add
add
test
add
push
add
add
mov
add
add
add
stos
add
push
adc
add
add
add
mov
add
fadds
xchg
add
popf
add
add
add
add
dec
add
add
add
pop
add
add
add
sub
add
add
mov
adc
add
add
add
add
add
add
enter
sub
xchg
add
add
add
add
add
add
add
adc
add
add
dec
add
add
add
add
mov
add
cmc
add
add
add
add
add
add
add
add
jo
jb
pop
add
fadds
scas
add
add
add
add
add
add
add
add
add
add
add
inc
add
enter
addl
push
add
enter
inc
add
add
add
add
add
add
push
add
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
pop
push
fadds
cs
add
add
xchg
add
add
mov
add
dec
add
pop
inc
add
add
sbb
in
cmc
add
add
add
sbb
stos
add
add
add
add
add
add
add
cs
add
jno
enter
aad
push
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
int
flds
push
add
add
add
add
fiaddl
or
add
add
add
add
add
out
sbb
cmp
sbb
add
add
in
stos
add
enter
imul
push
add
add
add
add
add
add
add
pop
add
add
inc
add
add
test
push
add
add
add
add
mov
add
add
lret
add
add
add
out
add
add
add
add
out
add
add
add
addl
out
add
add
add
mov
add
add
add
add
add
mov
or
jne
testb
add
add
dec
add
add
add
in
ljmp
add
add
add
add
add
mov
add
add
inc
add
add
add
add
add
sbb
push
add
add
xor
enter
es
add
add
inc
add
add
sub
adc
daa
add
add
movsb
add
add
enter
addb
add
add
add
mov
add
add
add
jle
sbb
cs
cmc
iret
fdivr
sub
pop
jno
out
push
adc
xor
push
aam
hlt
mov
inc
sbb
fwait
out
xchg
sbb
in
cmp
mov
xor
test
mov
cwtl
xor
shll
daa
movsb
jg
mov
imul
les
aas
test
ficoml
std
mov
addr16
jp
test
test
and
mov
lods
and
cltd
test
fildll
pop
mov
add
subl
cmc
cmp
jmp
and
icebp
lods
pop
xchg
lahf
jl
or
shrl
jo
daa
insl
push
mov
xor
xlat
cmp
and
xchg
lock
jle
jge
or
cmpsb
mov
popa
fstpt
lahf
mov
lods
orl
xor
call
cs
ret
push
shlb
jo
cltd
push
and
inc
mov
cld
dec
push
push
xlat
sub
pop
cli
add
cli
andb
xor
add
or
sbb
mov
sbb
sub
jge
movsb
int
pop
cmp
add
scas
dec
enter
out
mov
lock
sbb
jne
pop
jecxz
fstl
cmp
ds
lcall
dec
cmp
cmp
arpl
mov
loop
sbbl
push
mov
push
dec
jbe
jo
je
les
xchg
push
ds
sarl
adc
lcall
loop
in
or
cs
mov
sbb
push
mov
cmp
mov
xor
jmp
imul
lret
adc
ss
es
xchg
or
mov
mov
icebp
stos
bound
pop
add
or
sub
jle
fdivl
les
adc
lock
inc
fistps
sbb
xchg
shll
call
push
dec
in
stc
cmpsl
fucomip
leave
ficompl
sahf
lret
sbb
dec
rolb
cld
outsl
pushf
xchg
inc
push
popf
dec
cmpb
or
int3
mov
pop
fdivs
pushf
adc
sub
stos
adc
pop
scas
cld
ja
lods
rcl
mov
pop
mov
sub
xor
adc
inc
std
popa
add
adc
pminsw
mov
pop
iret
in
sti
fidivl
lahf
mov
addr16
pop
mov
xchg
mov
mov
rclb
inc
loopne
imul
push
pop
xor
call
adc
popf
mov
push
and
int
sub
out
push
dec
mov
inc
outsb
sbb
ret
mov
pop
mov
jg
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
