fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
popa
push
push
push
shll
push
add
rcrl
mov
jno,pn
popa
push
push
push
inc
outsb
xor
dec
adc
scas
icebp
mov
shrl
mov
jecxz,pn
popa
push
stc
push
inc
outsb
or
pop
sbb
mov
enter
xorl
jb
cmpsl
push
cmc
stos
inc
or
jno
pop
adc
stos
dec
mov
fbld
mov
push
or
std
xchg
xor
mov
mov
mov
mov
jmp
nop
push
or
jo
or
outsl
in
or
lds
ljmp
xchg
andl
mov
jno
inc
push
stc
dec
xor
lret
ljmp
jo
hlt
cmp
dec
jns
rcl
fimuls
aaa
adc
sbb
inc
mov
jecxz
mov
sbb
shll
xchg
jnp
jbe
mov
stc
icebp
dec
mov
mov
mov
xchg
pop
add
push
aad
dec
outsb
xor
dec
lret
pop
subl
popf
pop
into
xchg
fsubrp
outsl
and
adc
outsb
inc
or
sub
fs
mov
movsb
mov
aad
rcrb
and
jb
outsb
pop
cmp
ss
insl
lret
xchg
out
mov
mov
cmpsb
out
loope
in
mov
daa
ds
add
and
and
pop
add
rcrl
mov
jno,pn
popa
push
push
push
inc
outsb
xor
dec
adc
scas
icebp
mov
shr
mov
jno,pn
mov
repnz
test
add
xor
imul
mov
add
add
insb
jb
jmp
and
mov
mov
out
arpl
lcall
mov
mov
in
fistpl
cmp
pop
in
cld
repnz
in
stos
sbb
jg
int3
xchg
js
loope
test
add
imul
fistl
aas
call
adc
xchg
sub
fists
scas
xor
sub
push
aaa
iret
out
lahf
stos
idivl
xor
test
fmull
and
movsl
lret
lock
arpl
dec
push
or
clc
mov
xchg
int3
dec
mov
movsl
std
test
xchg
cmpsb
cmp
xor
dec
mov
mov
sub
icebp
mov
addr16
cwtl
push
aas
and
push
lret
jg
hlt
fdivl
jo
cmp
outsb
sub
cmp
add
adcb
test
cs
add
out
pop
loop
rclb
jne
sbbb
lock
and
pop
mov
sub
loope
gs
mov
add
fsts
dec
ss
or
mov
dec
mov
push
add
js
dec
mov
mov
dec
gs
call
fisttpll
je
and
jns
hlt
cmpsb
test
in
add
or
dec
mov
cmp
add
dec
cld
pop
pop
sbb
ja
es
sub
jle
in
jge
dec
mov
add
xor
fwait
and
ljmp
idivl
iret
or
mov
xor
in
dec
pop
xor
enter
dec
aas
leave
dec
test
fiadds
inc
dec
xchg
lods
addr16
in
xor
je
adc
push
adc
adc
sbb
test
mov
sub
xchg
insl
inc
sbb
mov
jmp
dec
enter
xor
sub
add
in
out
or
filds
rolb
fimuls
jmp
rcr
pop
jl
jae
mov
out
enter
sbbb
imul
mov
jg
addb
dec
arpl
add
mov
sarl
pop
sub
xor
jmp
pop
arpl
adc
out
dec
jae
ret
repnz
roll
andb
jle
cmp
push
test
add
sbb
dec
pop
in
repnz
cmp
outsl
xor
and
push
arpl
call
jg
dec
mov
cltd
aas
imul
or
mov
mov
add
xor
mov
mov
push
push
enter
cmpsl
ljmp
int
adc
ds
xchg
imul
shlb
dec
lcall
add
in
add
cmp
dec
ljmp
inc
inc
lods
imul
jo
push
xor
mov
mov
xor
int
outsb
lea
outsb
test
out
sbb
or
or
ret
mov
and
cmpl
mov
push
adc
jmp
add
or
pop
pop
fildll
stc
fidivrl
dec
fsubrs
xor
sbb
xchg
xchg
dec
sub
loopne
sbb
imul
sbb
mov
jo
mov
add
sub
leave
clc
xchg
mov
jb
adc
mov
test
inc
repz
stos
in
fbld
push
mov
ljmp
cli
push
push
jle
imul
xchg
outsl
ret
popf
xlat
inc
cwtl
movsl
ja
in
stc
popa
fstpl
mov
cmp
xchg
test
jecxz
lret
js
cmp
sahf
dec
dec
out
mov
xor
and
dec
jg
in
inc
xor
aaa
loopne,pt
ljmp
jecxz
jecxz
push
inc
mov
push
das
fcompp
xor
imul
push
xor
xor
mov
or
icebp
sub
xchg
sbb
sub
mov
divb
pop
hlt
mov
or
mov
or
test
pop
nop
xor
xchg
ficomps
stos
popa
sti
dec
pop
sbb
pop
dec
cmp
aam
retw
incb
ss
sub
push
shl
jo
cli
sbb
inc
xchg
mov
xor
jle
cwtl
int
cmc
mov
and
cltd
lea
cmp
pop
les
pop
stos
cmpsb
xlat
pop
mov
pop
push
xchg
push
push
and
out
jne
popa
rcrb
adcb
movsb
push
jb
mov
popa
mov
aas
cmpsb
adc
jno
sbb
jo
fisubs
fcmovbe
mov
call
js
dec
flds
add
add
cs
inc
mov
cmpsl
xlat
lods
adc
mov
or
int3
daa
testb
es
adc
dec
stos
dec
mov
shr
out
andl
leave
or
xor
aaa
out
cmp
mov
mov
dec
addb
sub
out
rolb
lcall
push
jns
outsb
pusha
insb
xchg
test
cltd
mov
lock
dec
and
jb
jnp
nop
jne
pop
popf
or
scas
mov
mov
divb
xor
stos
mov
add
or
adc
sub
sbb
mov
fadds
dec
insl
pop
add
sbb
cli
stos
jmp
and
jno
mov
xor
xchg
movsb
push
pop
pop
in
inc
movsl
sahf
dec
nop
mov
jbe
push
movsb
ret
je
movsl
rcrb
jno
jns
mov
jl
addr16
pop
lock
fs
and
pushf
dec
inc
mov
push
cwtl
lods
pop
or
add
pop
imul
sahf
punpckldq
fisubl
xor
std
jbe
inc
adc
mov
faddl
negl
pusha
jl
test
fcmovbe
dec
jne
inc
aaa
jp
mov
loop
ds
or
mov
fistpll
adc
fs
mov
jp
cmp
xchg
jns
push
push
jp
and
test
xor
imul
cmp
and
adc
xchg
dec
pop
xchg
shrb
lea
lea
dec
pushf
adc
in
add
mov
jmp
lcall
lods
xor
loopne
sbb
repz
jle
xor
sub
call
adc
jne
mov
pop
ret
cltd
push
push
repz
decl
pop
jge
pop
xchg
pop
insb
jnp
pushf
xchg
out
mov
cmp
adc
hlt
call
add
js
std
push
out
jnp
in
sbb
jae
sub
popa
int
test
xchg
aad
out
sub
push
fildl
lods
cld
push
stc
ret
lret
icebp
pop
dec
es
jne
sbb
mov
fdivr
ret
in
dec
and
cs
xor
jge
ret
xchg
pop
inc
dec
mov
sbb
pusha
insb
xchg
mov
imul
movsl
pop
fwait
mov
aas
das
std
mov
and
xor
mov
loopne
dec
in
enter
sub
adc
inc
mov
cmc
xchg
push
cld
mov
xchg
or
icebp
xchg
jbe
jge
imul
or
adc
push
or
outsl
xor
inc
jge
fwait
sbb
and
int3
adc
enter
cmp
fists
and
pop
fcompl
or
out
add
shr
mov
data16
mov
or
sbb
cld
enter
mov
push
daa
std
sub
insl
movb
jmp
and
jo
cwtl
icebp
mov
inc
int
sarl
xchg
js
nop
insb
jne
pop
xor
loope
insb
addr16
pop
pop
add
jmp
das
mov
add
sbb
or
sub
dec
xchg
pop
repz
mov
mov
cmp
sub
icebp
out
loope
dec
mov
mov
push
cli
jae
mov
testb
inc
mov
dec
jb
orb
nop
imul
cmp
stc
imul
sub
scas
insl
pop
into
sbb
int3
fnstsw
xchg
fwait
xchg
dec
inc
dec
sahf
les
pop
int
mov
stos
jno
cmpsl
cmpsl
dec
pushf
je
adc
xor
jl
lret
pusha
mov
mov
or
add
testb
cwtl
add
fwait
fwait
push
sahf
rol
or
rolb
idivb
pop
jp
push
ret
jle
les
icebp
sub
lds
push
pop
loopne
daa
ss
cld
aad
push
mov
fidivrl
dec
jle
cmp
xlat
inc
loopne
lcall
mov
and
movsl
mov
ljmp
push
inc
pop
iret
push
mov
test
hlt
pop
inc
pop
shlb
iret
inc
jns
scas
in
add
gs
cwtl
mov
jno
or
jne,pt
cli
jle
loopne
jmp
xor
sub
into
xor
shrb
jnp
lods
pop
aad
in
adc
sbb
jmp
dec
pop
mov
in
sub
adc
imul
xchg
lods
shll
lods
xchg
mov
add
dec
sbb
popa
cli
or
hlt
xchg
add
adcb
aad
mov
aam
insl
xchg
cmp
push
rorb
lahf
fwait
lods
adc
popf
cs
fimull
sub
dec
into
cwtl
dec
movsb
arpl
cmc
xor
add
inc
stos
in
std
push
dec
push
jno
shrb
loope
mov
pop
jp
pop
in
xorl
jo
mov
cmp
shll
xchg
xchg
cld
mov
mov
xor
fldenv
adc
clc
int
sub
stc
sti
inc
inc
or
lret
cmp
pop
js
in
fdivrl
and
lahf
fs
fmuls
fimull
pop
xchg
cmp
dec
xchg
adc
inc
aad
xor
cli
mov
dec
ljmp
pop
add
mov
xchg
push
out
mov
nop
inc
addr16
pop
leave
add
pop
jg
stos
lret
sbb
test
xor
mov
es
jmp
inc
mov
push
xor
and
dec
inc
add
mov
fsubs
scas
or
xchg
test
pop
ja
sbbl
test
test
pop
pop
sbb
movq
or
sbbb
xor
and
push
rcll
xor
addr16
and
pusha
xchg
insb
push
sbb
mov
stc
cmp
or
pop
stos
cmp
shrl
rcl
jne
in
jno
mov
pop
test
and
cld
cli
mov
faddl
repnz
cmp
cwtl
test
push
pop
gs
pusha
hlt
pop
add
and
xchg
test
sbb
pop
pop
imul
dec
orl
test
icebp
stos
lds
xchg
stc
dec
jecxz
add
loopne
test
xor
inc
push
mov
lcall
adc
dec
stos
pop
fcompl
inc
stos
push
mov
fisubs
jns
pop
or
fiaddl
orl
and
xor
sbb
xchg
adc
outsb
sub
popf
divb
and
rorb
gs
shlb
push
cmp
fsub
repnz
fs
out
stos
fwait
dec
push
or
or
adc
xor
add
mov
push
out
das
das
aas
push
mov
insl
cmpb
adc
dec
ja
sub
push
mov
orb
push
xor
mov
mov
add
mov
int
push
shll
mov
dec
mov
push
xchg
mov
pop
les
mov
or
fisubrl
pushf
sarb
stc
jb
and
sub
pop
push
and
fimuls
adc
mov
ds
adc
fsubr
mov
negl
bnd
mov
movsl
sahf
mov
arpl
and
push
fs
rclb
mov
loope
test
repnz
outsl
add
xlat
cmp
mov
sub
rcll
pop
push
dec
fistl
lods
sub
inc
push
lock
stc
mov
xchg
mov
bound
cmpsb
cwtl
inc
push
push
mov
adcl
cld
mov
mov
popf
jge
sub
mov
mov
movsl
shrl
xchg
xor
inc
lret
das
jno
ss
sbb
ljmp
inc
and
fmul
mov
mov
bound
xchg
fisttpll
shlb
xor
adc
xchg
stos
add
clc
push
and
pop
lods
shlb
test
sub
popa
stos
xchg
arpl
sub
sahf
in
in
cmp
xor
xchg
call
fdivrs
jbe
lock
or
es
add
jb
sub
movb
sub
lahf
add
inc
loopne
sbb
push
aam
outsl
ds
test
mov
mov
adc
sbb
xor
xor
stos
pop
ret
xor
hlt
mov
pop
cmpsl
cmp
xchg
sbb
and
xchg
movsb
fsubrs
shl
in
popa
repnz
ljmp
adc
mov
int3
and
js
loope
xchg
pop
adc
lahf
mov
loope
movsl
mov
or
jmp
sbbb
mov
dec
pop
mov
pop
shrb
in
ficoms
cld
mov
mov
or
std
or
hlt
ror
push
push
out
xlat
stc
add
or
xchg
add
mov
cmp
test
js
sbbb
cmp
xchg
pop
inc
aas
pop
add
testl
cmpsb
push
dec
jmp
pop
call
in
inc
dec
sbb
pop
push
dec
mov
mov
push
fmuls
push
dec
push
mov
cmp
out
xchg
or
pop
lret
out
scas
add
shlb
mov
test
jae
lret
or
shlb
xor
push
mov
loope
fdivrl
loope
cmp
xor
jbe
std
jmp
jno
or
jb
mov
add
shrb
mov
xor
pop
pop
pop
sub
and
into
lahf
mov
xchg
push
orl
imul
push
sub
ret
jno
les
push
xchg
scas
jl
std
mov
pop
push
pusha
add
mov
cmp
mov
add
add
int3
scas
fstpt
xchg
xorl
jnp
jo
mov
xchg
clc
lahf
push
aam
push
in
mov
lds
jmp
scas
iret
xchg
mov
fs
and
std
sti
xor
mov
cmc
mov
sbb
inc
mov
or
insb
jb
aad
add
lods
in
jecxz
aaa
sahf
lcall
mov
xor
psubd
push
aam
lods
sarl
lcall
inc
push
jmp
xchg
insb
in
mov
std
jle
jns
shrl
push
mov
lods
mov
cli
mov
pop
stc
or
mov
iret
add
je
mov
fisttpll
incb
repz
jnp
pop
stos
addb
fildll
lcall
fldcw
insl
cli
cli
xchg
ds
ret
stos
push
mov
xor
test
out
ss
iret
mov
cmp
lret
daa
jle
adc
push
push
mov
int3
mov
scas
outsl
pushf
mov
das
or
out
mov
push
xlat
repnz
add
fisubs
das
jge
dec
sub
mov
lahf
mov
dec
and
xchg
hlt
add
ss
mov
negl
and
faddp
push
jmp
iret
push
out
je
sahf
cmp
aad
incb
xchg
xor
xor
and
push
mov
iret
jp
cltd
js
popa
fldcw
jne
mov
mov
js
xor
mov
mov
icebp
cmp
jecxz
add
add
lahf
andl
iret
jbe
sbb
and
leave
dec
pop
mov
cmp
das
fisttps
outsl
jmp
fiadds
fdivrl
sub
mov
pop
lcall
mov
ja
cld
pop
adc
pusha
sahf
cmp
sub
cmp
xchg
sti
icebp
inc
lods
jmp
mov
cwtl
inc
fsubs
xchg
icebp
data16
cli
mov
test
lret
pop
out
add
mov
lods
push
jmp
jl
push
add
mov
fxch
ds
xchg
das
add
pushf
test
scas
mov
loope
cmp
mov
lret
sbb
push
pusha
mov
jl
adc
sbb
enter
mov
arpl
in
stc
pop
fcoms
mov
cli
inc
rorb
adc
sbb
in
lods
enter
push
popa
mov
stos
test
mov
std
jmp
adc
inc
popa
adc
pop
arpl
sbb
in
mov
push
lcall
mov
mov
movsl
add
cli
jno
sbb
cs
fnstcw
add
fs
inc
jbe
in
cmp
test
xor
jg
or
imul
aas
mov
push
add
adc
popa
aaa
das
dec
and
push
pop
xor
xor
mov
jg
lea
push
and
test
inc
imul
mov
movsb
enter
daa
pop
loope
sahf
push
xor
mov
jecxz
mov
adc
ss
push
dec
dec
jg
sbb
mov
inc
les
fimull
pop
dec
pushf
fstl
and
mov
inc
jl
pop
rcll
clc
loopne
push
repnz
repz
imulb
mov
gs
cmp
bound
aad
add
loop
lock
adc
and
loopne
test
mov
pusha
ss
leave
in
cld
push
fwait
inc
pop
in
cltd
or
mov
iret
ljmp
and
jno
add
push
ljmp
jno
mov
mov
call
jl
inc
fs
ret
and
or
out
adc
outsb
mov
jo
das
pop
cmp
jne
xor
cmp
add
iretw
int3
and
outsb
inc
push
mov
insb
aam
rol
xor
mov
add
xor
iret
sbb
es
pop
lret
psllw
jmp
test
xlat
nop
icebp
stos
jge
mov
xor
push
enter
mov
sbb
repnz
pop
cmc
loopne
call
fdivs
jmp
lret
push
push
popf
cmp
adc
mov
mov
mov
mov
push
mov
push
in
lret
into
fiaddl
insl
xchg
cmp
or
pop
jne
popa
repz
sbb
hlt
int
jl
xchg
adc
sub
insl
pop
es
lods
aad
pop
cltd
jecxz
xchg
sub
sbb
push
xchg
dec
mov
in
and
mov
fstl
andb
mov
cld
cld
inc
or
daa
ds
xor
dec
mov
sarl
sbb
cmpsl
fcmovne
sub
adc
cmp
or
movsl
stos
stos
cwtl
bswap
jbe
push
cli
sbb
xchg
int3
xor
js
jle
mov
push
and
aaa
or
pusha
les
popf
sbbl
jle
int
mov
dec
jo
rclb
fsubp
fdivrs
movsb
scas
addr16
js
ja
fistpl
movsb
imul
fs
xlat
sahf
in
in
arpl
or
xor
loope
addr16
int3
add
xor
leave
shll
xor
xor
xor
sahf
adc
dec
mov
fadds
or
mov
insb
addr16
dec
stos
mov
lods
pushf
xor
das
dec
je
ret
inc
rorb
rcrb
cmpb
dec
inc
fimuls
adc
movl
xchg
aaa
pusha
push
out
bound
into
dec
dec
shll
jb
movsb
xor
pop
and
and
ret
ds
cmp
test
mov
mov
pop
int3
sub
cwtl
lahf
mov
sbb
and
push
mov
cli
scas
stos
xor
cwtl
popf
loopne
and
xor
cmp
movsb
sbb
pop
jp
dec
arpl
mov
push
iret
push
adc
and
mov
sub
xchg
outsb
fists
idivl
pop
jae
push
in
inc
mov
iret
cli
pop
outsb
repz
dec
pop
cmpl
sbb
ficompl
xchg
in
in
sbb
dec
clc
push
je
mov
pushf
dec
xor
xor
lret
mov
loope
mov
ret
xchg
mov
lcall
pop
aas
jl
push
xchg
arpl
mov
in
adc
jmp
adc
ret
fldt
js
je
pop
sti
scas
sub
mov
and
cli
out
loop
fdiv
xchg
enter
aad
das
pop
mov
dec
mov
pop
mov
adc
bound
ret
push
inc
sahf
lods
mov
mov
jmp
es
push
inc
outsb
xor
dec
adc
scas
icebp
mov
shr
mov
jno,pn
popa
push
push
push
inc
outsb
xor
dec
adc
scas
icebp
mov
shr
mov
jno,pn
sub
xor
dec
adc
add
rcrl
mov
jno,pn
popa
push
push
push
inc
outsb
xor
dec
xchg
pop
add
rcrl
pop
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ret
pop
inc
pop
jae
arpl
test
sbb
shrl
ret
repnz
cmpsl
xchg
add
out
out
pop
inc
pop
jb
arpl
adc
inc
xor
add
xchg
ret
xchg
mov
mov
mov
pop
jae
arpl
adc
inc
xor
rcll
xchg
rolb
fwait
xchg
xchg
int3
nop
and
ja
xor
in
and
push
adc
jnp
in
mov
lahf
pop
pop
mov
or
and
pop
into
pop
push
pop
and
mov
xchg
stos
dec
outsb
mov
jl
mov
pop
inc
jl
add
pop
sbb
movsb
rcll
sbb
sub
jp
sub
jno
push
das
inc
sarl
xchg
imul
jae
shlb
mov
xlat
mov
sub
fmull
test
and
push
jecxz
rolb
stos
dec
inc
adc
mov
das
repz
int3
lret
std
in
sub
adc
pop
out
adcl
pop
inc
pop
jae
arpl
adc
inc
xor
rcll
repz
cmpsl
xchg
xlat
add
mull
jle
jbe
push
adc
je
inc
adc
in
xlat
out
iret
sbb
xlat
orb
imul
sub
add
and
xor
xchg
fdivs
mov
push
adc
pop
push
add
ja
rcll
repz
cmpsl
xchg
xlat
add
mull
pop
jae
arpl
adc
inc
xor
rcll
repz
cmpsl
xchg
xlat
add
mull
das
pop
xor
pusha
mov
xlat
add
lcall
mov
lods
lods
dec
pop
clc
bound
int
adc
mov
cmc
inc
daa
js
mov
ljmp
xchg
push
xor
cmp
popa
lahf
fwait
popa
push
pop
out
inc
mov
mov
lea
imul
push
xlat
xchg
mov
cmp
push
test
fiadds
ja
jle
xor
enter
jmp
div
mov
push
fcmovnu
xor
imul
sbb
add
repz
push
shl
sbb
fcoml
sbb
stc
scas
xchg
xor
pop
je
xor
jle
das
cmp
imul
sub
scas
cmc
xor
enter
push
dec
dec
in
xor
or
leave
mov
jmp
in
cmpsl
jmp
gs
mov
xchg
dec
cmp
add
or
gs
sbb
dec
imul
dec
lods
fisttpl
roll
jbe
add
or
ret
ss
mov
insl
or
xchg
arpl
mov
out
push
std
aam
push
inc
sbb
data16
sub
insl
push
cwtl
cli
call
js
rcrb
adc
stos
stc
dec
push
xorb
add
cmpsl
stc
mov
fmull
std
jno
mov
add
xchg
mov
xchg
cltd
lret
lahf
push
xor
jmp
jge
mov
jge
mov
testb
lcall
dec
ljmp
je
cltd
test
inc
push
xor
mov
jmp
mov
and
rclb
cwtl
add
iret
in
xchg
mov
sarb
cmp
fwait
les
add
adc
lds
test
int
sahf
fs
ljmp
push
push
incl
or
lret
add
scas
push
xchg
mov
icebp
and
push
mov
push
loop
aaa
aaa
push
dec
mov
pop
adc
call
inc
ja
loop
mov
add
xchg
stos
or
and
fistpl
lret
mov
in
stc
pushf
cltd
xor
ret
mov
pop
fdivrl
add
pop
sub
mov
mov
fadds
pop
or
cwtl
pusha
test
int
mov
popf
inc
mov
push
xchg
sbb
adc
push
lret
fnsave
fnsave
cmp
inc
imul
jmp
popa
aas
enter
cmpsb
fldenv
fwait
mov
sti
out
jnp
add
or
xchg
jns
aam
xchg
pop
xchg
mov
fists
daa
mov
cmp
aas
sbb
orb
iret
out
cmpsl
mov
mov
push
fdivrl
jl
repz
das
ret
mov
cwtl
fs
into
add
pop
mov
jle
jbe
push
loopne
xchg
xor
xor
stos
pop
inc
mov
shrl
insb
cmp
popf
cmc
xchg
js
arpl
call
outsb
jecxz
aam
or
pop
adc
inc
aam
pop
inc
mov
mov
xor
mov
inc
xor
xchg
xor
insl
fistps
mov
subb
adc
imul
inc
sbb
mov
mov
lea
pop
pop
add
cltd
ss
pop
add
xor
add
lods
jmp
xor
in
sbb
xlat
xchg
pop
stos
inc
nop
shll
sub
cmpsl
insl
or
mov
cmpsb
sbb
cmc
cmp
sarl
rcll
jl
adc
imul
or
fs
xor
dec
lea
outsb
or
mov
add
out
negb
into
incl
jmp
int3
jno
mov
negl
sbb
mov
jmp
pop
daa
inc
cmpsb
int
icebp
or
lret
loop
jns
mov
jno
pop
inc
sbb
out
std
mov
repnz
lods
cs
popa
int3
jmp
dec
xor
pop
add
and
mov
jl
xor
or
jne
dec
mov
jbe
out
pop
sahf
js
add
and
aad
scas
sub
les
mov
pop
das
or
cli
or
push
and
inc
fs
das
jp
fstpt
lea
mov
popf
adc
aad
addr16
scas
mov
mov
lea
or
sbb
lods
movsl
dec
add
cmp
or
jge
jge
pop
fmul
pop
test
mov
lcall
popa
fwait
pop
mov
out
cmp
fildl
lcall
ret
out
repnz
inc
repz
mov
sub
lret
add
int
xor
outsb
fisttpll
dec
std
iret
jg
inc
movsl
xor
adc
and
lret
lods
mov
pusha
adc
jge
xchg
push
iret
fstps
fisttpll
in
sahf
inc
mov
xchg
loopne
pop
insb
jmp
mov
or
xor
xchg
mov
add
xchg
sub
not
sahf
or
push
pop
jns
das
mov
xchg
mov
js
mul
clc
xlat
push
push
test
push
pop
scas
fs
or
mov
sbb
mov
rcr
enter
push
sub
sub
mov
test
cmp
pop
into
pusha
clc
fiadds
fists
pop
pop
ja
int3
sbbb
fstps
scas
push
adc
sbb
push
add
sbb
in
cli
mov
mov
nop
sbb
or
loopne
dec
pushf
repz
ljmp
jb
ljmp
mov
bound
test
dec
stc
jmp
es
mov
jp
or
lret
xchg
push
rorb
movsl
int
cmc
xchg
gs
aas
xchg
xor
or
jge
push
add
jle
cltd
shl
dec
movsb
inc
mov
lret
push
in
sub
sahf
mov
adc
mov
outsb
scas
arpl
test
push
shrb
movsb
ds
pop
das
mov
sbb
adc
adc
out
inc
add
out
mov
mov
inc
cld
dec
out
ljmp
js
les
mov
jg
push
movsl
scas
mov
xchg
mov
cmpb
test
push
or
dec
mov
leave
into
jmp
arpl
aad
add
cmp
out
jb
mov
in
jo
fs
pop
scas
pushf
into
sub
jp
outsb
cmp
push
lahf
pop
dec
pop
lock
mov
push
adc
xor
add
push
xor
leave
repz
jne
inc
xchg
repnz
cltd
xchg
xor
inc
lods
imul
test
push
and
popa
mov
fstpt
std
das
cltd
pop
stc
inc
mov
push
inc
ret
sub
sub
incb
mov
rorl
xchg
mov
push
mov
sbbl
push
add
inc
leave
cs
sub
pop
in
mov
decb
aam
jbe
movsl
icebp
lds
je
shll
cld
sub
dec
leave
cmp
add
stc
mov
cmc
in
js
fsub
les
shrl
or
dec
arpl
push
pop
mov
inc
pop
mov
push
aam
jns
jecxz
test
adc
lret
mov
jbe
jns
jmp
inc
mov
push
bound
xor
mov
es
or
rcll
and
push
pop
xchg
push
out
enter
xchg
mov
pop
call
cmp
outsl
jo
xor
cmp
jbe
lahf
mov
and
aam
test
xchg
inc
and
imul
loopne
sub
shrd
mov
cmp
enter
stos
add
das
ds
add
jmp
and
xor
int3
jmp
sti
test
fists
mov
sub
sarl
or
mov
jo
aam
xor
movsb
jle
popf
nop
dec
or
aaa
aaa
sub
cmpsl
xchg
sub
xlat
pop
dec
lods
mov
inc
testb
fdivl
inc
lea
sbb
or
icebp
fdivs
rorl
jne
in
rol
daa
cmp
ja
arpl
mov
and
pop
inc
mov
mov
mov
jg
popa
stos
push
pop
xor
pop
dec
sbb
sahf
pop
hlt
sbbb
or
push
cs
int3
cmp
sub
in
ss
push
movsb
inc
dec
pop
insb
enter
push
or
out
pop
pop
pusha
sbb
mov
pop
in
imul
or
push
clc
add
icebp
into
push
in
mov
or
ficompl
sub
push
mov
addr16
popf
sub
adc
roll
dec
cmc
cmp
inc
ljmp
shr
pop
mov
call
cmp
fwait
std
hlt
xchg
sub
inc
and
jbe
test
icebp
pop
sti
into
push
hlt
popf
std
rorl
or
lds
fs
shlb
popf
jb
cmpsl
scas
inc
push
pop
test
inc
mov
fadds
xchg
or
ja
pop
jle
inc
inc
insl
pop
cmp
push
and
fbld
insb
loop
ja
xor
in
cmp
mov
outsb
inc
pusha
data16
mov
add
jge
jnp
out
stos
shrl
in
cld
into
divps
sbb
xchg
cs
push
out
dec
shrb
imul
shl
fcmovnbe
movsb
sarb
mov
lret
xchg
into
sti
es
sbbb
and
xlat
ja
push
sub
fcoml
test
sbb
add
xor
jae
sbb
or
adc
push
push
inc
rcrb
ret
lahf
mov
mov
pop
ja
subl
scas
in
mov
dec
stc
and
xchg
arpl
lcall
xchg
dec
pop
lds
imul
lahf
adc
out
pop
insl
cwtl
sub
and
je
mov
add
pop
call
mov
jg
shlb
aad
test
cmp
lea
sbb
push
jo
out
push
add
xor
subb
pop
sbbl
xor
lahf
ljmp
sub
and
inc
inc
inc
lcall
mov
push
fidivs
arpl
movsl
push
push
jb
cmpsb
fmul
adc
in
jecxz
in
add
push
adc
push
imul
push
and
pop
stos
push
mov
mov
les
xor
cltd
test
inc
lds
sub
mov
and
in
mov
xchg
mov
jne
pushf
data16
mov
sbb
fcoms
inc
iret
push
idivb
imul
aam
xor
cmpb
adc
ret
sbbl
sbb
imul
sbb
pop
int
cmp
outsb
mov
adc
xor
adc
insb
divl
pop
ret
jle
lahf
add
push
pop
roll
cs
pop
pop
cmp
aam
sahf
xchg
push
mov
loop
repnz
subl
lret
notb
pop
inc
adcb
js
out
xor
in
jb
hlt
cmp
xchg
sbb
push
push
and
push
int
xchg
and
jle
lods
sbb
add
pop
mov
test
pop
cmp
and
push
jge
mov
insb
mov
mov
lret
xchg
push
cmpl
xchg
test
mov
setnp
outsl
xor
test
jo
std
fnstsw
mov
ss
or
sbb
xor
inc
mov
jmp
add
jne
mov
sub
dec
lea
sub
push
ja
mov
in
push
sbb
mov
mov
inc
inc
das
cmp
dec
add
test
xor
xor
or
push
mov
xchg
iret
pusha
into
jns
or
stc
sbb
pop
cmp
add
jo
fmuls
inc
jp
mov
inc
stc
jg
rcr
jl
cmp
scas
out
repnz
es
pop
dec
pop
mov
test
jns
orl
mov
ss
cmp
add
jnp
aaa
mov
sub
mov
inc
out
filds
ret
rcl
mov
rcll
inc
sbb
inc
xor
ss
lea
pushf
pop
and
in
jb
arpl
bound
push
mov
sbb
or
mov
cld
daa
and
mov
addb
daa
jmp
outsb
cmp
sub
pop
mov
shll
ds
repz
imulb
shl
gs
test
cmp
cld
sbb
pop
sbb
or
pop
mov
xchg
rorl
push
jne
pusha
fisttpl
push
rcll
daa
repnz
popa
lret
repnz
and
dec
stos
imul
test
ja
xor
push
inc
shlb
dec
mov
pop
pop
push
add
pop
movb
ror
pop
sbb
lds
mov
std
dec
ficoms
call
scas
cmp
outsb
sub
mov
cmp
inc
mov
es
movsl
jmp
fwait
push
inc
mov
mov
jmp
sbb
leave
pop
pop
adc
xlat
mov
sbb
pushf
fwait
pushf
call
ja
jae
outsl
mov
inc
add
cmp
sub
pushf
dec
sub
test
fnstcw
jns
lahf
xchg
inc
iret
push
xchg
xor
pop
mov
mov
repnz
jne
mov
pop
ds
mov
lahf
aam
push
insb
or
pushf
mov
hlt
fisubrs
mov
jae
pop
xchg
icebp
pusha
les
stos
subb
adc
testb
test
daa
rol
pop
fxch
sbb
outsb
cltd
rorl
aam
pushf
dec
ret
incl
jl
pop
sub
jp
daa
mov
orb
pop
add
sahf
inc
sar
and
push
mov
mov
xor
mov
insb
inc
or
lds
mov
cld
push
cmp
test
fld1
adc
jg
xchg
sahf
ret
daa
lock
push
loope
mov
rcr
pop
jne
push
bswap
push
mov
mov
push
lock
mov
xlat
sti
bound
jmp
subb
and
dec
inc
les
iret
std
adc
fiadds
int3
ja
and
mov
out
cmp
out
popa
or
pop
fbld
insb
adc
pop
sub
xlat
inc
xor
or
insb
ja
test
cmp
leave
or
mov
dec
push
addr16
push
in
mul
xchg
cltd
or
xlat
bound
dec
mov
into
and
adc
adc
fcmove
xchg
lods
dec
notl
and
xchg
xor
out
cmpsb
cmp
out
call
cmpsl
scas
fs
insl
repz
or
pop
jb
jne
pop
in
lods
push
and
sbb
movsb
xchg
jecxz
fstpt
dec
pop
sub
cmpsb
xlat
dec
dec
push
imul
cmp
mov
iret
out
push
pop
imul
incb
push
int3
push
movsl
xchg
sub
mov
jg
push
cmp
fcomps
xor
sbb
ss
dec
popa
and
jle
push
cmp
pop
lods
sbb
add
std
jns
stos
aam
or
and
and
jnp
cmp
inc
testb
loop
scas
test
inc
ficoms
inc
jnp
add
jns
and
jae
mov
mov
mov
pop
cmp
lock
mov
mov
mov
sub
cld
jp
imul
mov
push
mov
inc
lea
mov
xlat
push
xor
pusha
xor
mov
cmpsl
mov
or
outsl
dec
push
mov
bound
cmpsl
out
or
lahf
xchg
nop
or
std
add
adc
dec
dec
out
mov
dec
mov
int
cwtl
xor
xor
inc
aas
mov
jbe
xchg
add
pop
clc
hlt
clc
in
outsb
aaa
cwtl
orl
mov
clc
mov
add
and
inc
clc
or
das
inc
jns
repnz
sbb
lret
fisubs
and
ljmp
movsl
cmp
js
stc
out
loopne
xor
enter
cmp
pusha
add
in
lcall
jnp
cmpsb
stos
cs
sub
int
out
ret
clc
xchg
xor
rcrb
xchg
test
lods
ja
or
push
fdivrs
test
jmp
ss
ret
scas
stos
mov
mov
cmp
or
adc
jecxz
or
mov
sahf
in
sub
outsl
or
mov
rolb
sub
xchg
test
test
pop
mov
push
sti
sbb
jno
mov
mov
push
das
xor
xchg
fimull
adc
insl
fbstp
xor
bound
add
subl
add
mov
jecxz
roll
jmp
cmp
jno
testb
or
stc
icebp
stc
jb
pushf
loopne
outsb
mov
stos
imulb
int
mov
xor
adc
sbb
fucomp
inc
call
mov
sahf
push
arpl
je
mov
hlt
addr16
fwait
mov
lret
hlt
int
mov
jb
cmp
int
ret
lods
mov
ds
dec
test
cmp
nop
lcall
fwait
dec
jo
call
sub
push
jecxz
addr16
jnp
inc
push
movsl
cmp
sbb
jne
mov
sbb
mov
adc
push
sbb
rorb
pop
sti
out
mov
inc
inc
pop
test
out
lret
dec
cwtl
mov
push
call
js
add
push
push
sub
and
pop
push
add
movsb
mov
in
xor
cmp
xlat
dec
xor
xchg
shrl
add
jns
es
mov
inc
pushf
roll
jle
sbb
popf
negb
je
add
adc
adc
sbb
inc
mov
pop
xchg
jecxz
out
xchg
or
add
hlt
push
mov
pop
sbb
imul
leave
btr
and
lahf
cmp
xchg
and
rcl
mov
adc
mov
in
xor
iret
mov
add
inc
js
dec
hlt
jbe
pop
inc
push
in
or
jge
fisubrl
mov
push
test
jb
pop
xchg
add
cwtl
mov
je
rclb
cltd
adc
in
sbb
loop
rorb
mov
cmp
add
cmovs
pop
add
sub
mov
xchg
icebp
bound
pop
adc
xacquire
or
xor
push
sub
frndint
out
lret
pop
mov
sbb
fists
adc
fucomip
xor
popf
icebp
neg
xor
je
mov
mov
cmc
mov
or
and
hlt
jb
movl
xchg
outsl
fs
fisttps
pusha
aam
cmpsl
shlb
mov
andl
cli
es
jno
popa
loopne
les
push
arpl
icebp
and
lahf
lds
inc
ja
pop
daa
jmp
lret
jns
mov
xchg
hlt
stc
lock
lods
lds
push
sahf
outsl
jmp
cmpsl
mov
repz
in
test
pop
pop
mov
xor
inc
lret
aam
xchg
es
xchg
xlat
mov
mov
ret
pop
mov
jns
inc
add
fildl
lds
adc
jne
push
adc
fimull
insb
les
loope
dec
sbb
cmp
addr16
dec
jecxz
fcom
in
or
loope
fstpl
out
cmc
mov
or
clc
dec
jg
popa
or
loopne
insl
mov
dec
incb
loope
mov
sub
stos
aam
into
push
dec
xor
mov
sbb
jecxz
leave
mov
inc
push
xor
hlt
scas
and
cmpsl
adc
sbb
idivl
es
dec
add
cmp
cmp
sahf
aas
push
adc
add
lods
sub
shlb
xchg
push
xchg
cmp
cmp
pop
sbb
loop
pop
adc
inc
sub
cmp
je
test
fisttpll
and
std
cmove
push
cmpb
nop
shlb
sbb
insb
loope
flds
divb
leave
lret
loope
scas
out
out
loopne
xchg
fisubl
pop
insl
xchg
xchg
ja
mov
push
fisttpll
scas
fildl
xor
push
sub
add
pop
adc
not
push
lret
sbb
inc
es
add
in
xorl
inc
sub
rcr
out
and
aaa
push
mov
ljmp
cld
xor
jo
in
movsb
add
gs
and
xchg
pop
rcr
shlb
iret
push
cmp
pop
lret
call
imul
cmp
cmp
xchg
aaa
arpl
adc
inc
xor
rcll
repz
cmpsl
xchg
xlat
add
mull
pop
jae
arpl
adc
inc
xor
rcll
repz
cmpsl
xchg
xlat
add
mull
pop
jae
arpl
adc
inc
xor
rcll
repz
cmpsl
xchg
xlat
add
mull
pop
jb
arpl
adc
inc
xor
cmpsl
rcll
jecxz
in
or
dec
or
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
cwtl
test
mov
in
xchg
cmc
cmpsb
or
sbb
jbe
dec
push
pop
push
push
cwtl
test
mov
xchg
mov
fimuls
push
sbb
jbe
dec
jp
push
push
cwtl
test
mov
xchg
mov
cmpsb
or
gs
add
pop
dec
inc
sub
pop
adc
movsl
stc
out
mov
addl
jae
shlb
push
lds
push
cmpb
dec
push
stos
inc
arpl
xchg
fadds
adc
adc
arpl
add
push
pop
iret
ds
repnz
ret
loopne
sahf
or
and
repz
or
ss
add
push
jmp
js
mov
mov
xchg
test
movl
inc
imul
clc
unpcklps
jae
or
mov
sbb
push
xchg
ss
mov
pusha
dec
xchg
out
cmpsb
jecxz
push
dec
dec
mov
pop
adc
lods
push
or
ss
dec
cwtl
test
mov
xchg
mov
cmpsb
or
inc
sub
dec
push
pop
push
push
sar
xchg
idiv
out
repz
xchg
jl
js
jge
pop
adc
into
push
sbb
dec
or
mov
mov
lods
cli
xchg
lret
mov
aas
push
and
cmp
dec
out
xchg
cwtl
mov
test
orl
clc
cmpsb
or
inc
sub
dec
push
pop
push
push
cwtl
test
mov
xchg
mov
cmpsb
or
inc
sub
dec
push
pop
push
push
stc
scas
xor
loop
imul
ss
add
imul
sub
cmpsl
fdivrs
mov
shll
call
int3
das
mov
jmp
mov
jo
jae
test
jg
leave
fisubrl
icebp
sub
mov
pop
mov
and
stos
loop
lret
popa
popf
inc
pop
addr16
xchg
test
xchg
mov
jnp
sub
inc
adc
fistpll
jmp
push
mov
fadds
loope
xor
mov
call
aas
iret
lods
sbb
cmpsl
in
push
aad
push
adc
jmp
daa
add
call
mov
or
gs
stc
pop
loopne
push
icebp
lock
aad
xchg
mov
insl
xor
jl
scas
stc
sarb
inc
mov
addr16
pop
test
mov
popa
mov
fldt
jecxz
inc
sbb
mov
push
dec
sbb
mov
mov
add
xchg
negl
jb
lock
cltd
dec
dec
sti
and
sbb
setno
xchg
mov
rol
scas
cld
mov
dec
ffree
repnz
xor
sbb
fdivs
push
mov
push
shrl
mov
mov
mov
xor
lods
pop
fidivrs
mov
xor
orl
fcomps
add
int3
sbb
popa
outsl
add
jecxz
addr16
pop
or
enter
fisubl
pop
xchg
push
inc
sub
mov
cld
addr16
into
nop
adc
dec
rolb
sub
xchg
pop
sbb
jle
lock
push
jne
push
add
jg
aam
mov
arpl
pop
test
pop
jle
push
fisubs
mov
mov
sbb
pusha
imul
and
mov
jbe
test
mov
iret
pop
xor
or
and
mov
add
pop
sub
sub
fistpll
sub
scas
pop
lods
pop
fs
scas
lcall
inc
lods
fistpll
push
mov
pushf
or
orb
sub
sub
cwtl
scas
jae
sbb
cli
mov
push
cmp
cmp
fs
sbb
dec
gs
aam
fidivl
fwait
jecxz
pop
insb
test
inc
mov
push
ret
ret
adc
je
sar
popl
sarb
cli
nop
inc
lea
dec
test
arpl
mov
push
cs
inc
lea
stos
stos
push
pop
cwtl
loopne
mov
lcall
dec
aaa
enter
iret
imul
ljmp
jo
mov
jp
pop
stos
pop
lret
ret
dec
cltd
pop
inc
pop
cmc
shll
mov
mov
push
push
das
and
xor
aaa
sbb
enter
add
scas
sub
adc
fdivr
sbb
adc
xor
into
and
or
or
mov
xlat
jmp
cmp
lret
add
push
sbb
fcmovnb
pushf
push
pop
pop
push
fmuls
jge
hlt
cmp
ds
fstps
pop
jb
insl
xor
je
aad
rcrl
daa
bound
shlb
pusha
xchg
or
ret
out
dec
push
xor
jmp
jg
sbb
jmp
cmp
imul
in
mov
das
push
push
stos
cld
sub
mov
icebp
inc
push
repnz
adc
lahf
push
data16
fistpll
aas
jo
jae
inc
adc
scas
loop
decb
sbbl
lcall
adc
rcrb
pushw
push
mov
adc
mov
pop
dec
sbb
push
fwait
popa
pop
clc
jns
adc
xchg
add
ret
lahf
in
mov
pop
jno
mov
test
or
inc
mov
inc
jb
pusha
loopne
mov
or
mov
std
add
sub
inc
push
jg
lcall
fs
jnp
lret
adc
push
inc
aam
std
stos
sub
repz
popa
pop
out
lcall
lahf
mov
into
test
cld
and
insl
push
xchg
aas
cmpsl
das
xorps
lea
adc
jl
and
cmpsb
dec
mov
xor
add
jecxz
std
divl
inc
mov
cmpb
arpl
push
cmc
inc
loopne
mov
ljmp
xchg
scas
fidivrl
cli
mov
xchg
sbb
test
xchg
ds
mov
pop
loopne
mov
jae
imul
and
mov
icebp
jo
mov
sub
xlat
test
lcall
or
and
aaa
lahf
add
test
mov
loopne
sahf
lods
and
mov
lock
dec
mov
int3
fsubl
xor
mov
pop
shrl
mov
nop
stos
popa
cs
xlat
add
inc
pop
in
push
scas
pop
inc
mov
lods
xchg
mov
lods
adc
test
dec
pushl
adc
adc
cmp
ljmp
pop
cmp
xor
lea
add
in
sub
dec
mov
mov
movsb
loopne
xor
push
adc
sbb
inc
test
inc
rcrl
push
es
mov
and
and
fs
jbe
xchg
ret
push
xchg
mov
std
push
mov
sub
fwait
clc
mov
and
aas
inc
and
mov
sub
stos
push
pop
hlt
xchg
sbb
cmp
xchg
cwtl
jno
icebp
push
jecxz
or
pop
cmp
pop
sbb
jg
sbb
and
dec
adc
imul
xchg
mov
mov
xlat
xchg
lock
and
inc
fists
orl
dec
push
repz
iret
push
pop
loopne
int
pusha
popa
adc
data16
add
div
data16
add
daa
insb
inc
mov
pop
push
inc
lcall
xchg
lods
sbb
cs
push
xor
rcrl
adc
orb
div
sbb
ja
lret
shrb
loope
xchg
xchg
flds
push
in
dec
jne
imul
ds
and
sbb
cmp
push
jnp
xchg
scas
push
in
daa
sbb
out
mov
inc
jns
xchg
std
pop
cmpl
or
xor
lods
and
sub
cs
popf
lea
ffree
je
movsl
sbb
test
in
cmp
sbb
pushf
dec
clc
nop
sarl
pop
imul
jg
cmp
mov
mov
icebp
cli
call
pop
andb
pushl
mov
lret
loop
aad
pop
data16
push
jne
or
push
cmp
xchg
enter
jne
repnz
cld
std
inc
repnz
sub
adc
xlat
add
xor
add
test
or
fwait
xor
add
dec
popf
lods
cmp
ljmp
loop
sbb
test
push
stos
mov
xlat
test
jmp
mov
int3
sbb
sub
cld
push
xorb
sbb
nop
xor
inc
std
xchg
test
int
sbb
and
lods
dec
psubd
shll
iret
mov
cmc
inc
jnp
out
dec
mov
sti
xchg
cltd
lret
shll
das
push
mov
jns
aad
je
xchg
push
mov
sub
cli
dec
cli
cli
cmp
lods
pop
or
scas
cmp
or
sub
jp
out
pop
dec
and
or
adc
out
dec
fcos
pop
cmp
js
lret
cltd
push
iret
in
pop
mov
scas
ja
xor
dec
mov
mov
xchg
arpl
jae
inc
loope
pop
pop
jp
push
dec
xchg
sbb
xor
push
jno
hlt
clc
mov
pop
rcl
mov
sbb
pop
int
or
sub
cs
jns
fistpll
enter
sbb
mov
adc
aad
pop
dec
scas
sub
push
les
mov
inc
in
ljmp
cmpb
sub
rorl
jae
out
dec
push
hlt
mov
sub
inc
and
pushf
xor
popf
push
std
das
xchg
push
jl
std
adc
stos
add
mov
add
or
aam
cmp
ljmp
push
bswap
aaa
push
add
ret
scas
xor
sub
bound
pop
sub
repnz
ja
and
cmpsl
jnp
sub
lret
inc
fwait
inc
sbb
hlt
or
pop
mov
jne
cmpsb
ss
addr16
sub
add
fistpl
jno
sti
pusha
sti
in
orb
sbbb
sub
mov
dec
sub
out
loope
xor
adc
sar
lret
inc
jp
sbb
xchg
test
dec
pop
arpl
mov
mov
inc
frstor
xchg
cmp
sbb
pusha
jo
daa
lret
push
adc
nop
cmp
loop
ret
dec
inc
push
scas
lock
mov
mov
adc
stc
xor
int3
jp
mov
bnd
mov
lods
add
mov
add
jns
jno
insb
out
movsb
xchg
sub
adc
mov
jmp
push
sub
mov
xchg
dec
je
push
je
fists
flds
std
lea
xchg
loop
pop
mov
lock
sub
cld
xchg
ret
sar
jno
pop
sub
jo
repnz
lods
xchg
jnp
cmp
dec
and
inc
outsb
dec
addr16
cs
or
jbe
aas
gs
mov
out
cld
jnp
inc
aas
xor
mov
push
fcoml
popa
xlat
inc
aam
out
mov
push
and
push
inc
mov
xchg
mov
mov
push
or
test
int
jns
cmp
scas
inc
jmp
sub
or
dec
mov
adc
xchg
cs
cmp
cs
rclb
jno
andb
sti
aad
fsubr
and
sti
inc
dec
mov
rorl
into
mov
push
scas
insl
out
pop
sub
lahf
out
jp
sbb
inc
enter
js
mov
adc
cmc
dec
or
push
pop
cmc
xchg
xchg
loopne
inc
inc
std
aad
jb
adc
mov
fcoms
faddp
cmp
xchg
jl
adc
enter
xor
in
scas
test
mov
mov
mov
jb
in
add
cmp
imul
sbb
or
fstpt
pop
ret
in
jle
repz
pop
sbb
stc
and
or
xlat
in
jl
or
add
mov
cmc
scas
add
lcall
xchg
insl
rcrl
jg
jbe
inc
das
test
sbb
ss
pop
outsb
test
rcr
mov
repnz
mov
inc
ljmp
xchg
adc
repnz
cmp
mov
sub
push
jge
in
std
je
pop
dec
neg
stc
arpl
cmp
mov
ret
cli
push
or
jae
pop
out
lds
fstl
jl
or
aam
sub
in
inc
mov
movsb
shrl
sbb
addr16
xchg
lods
sub
fs
cmpl
add
jl
testl
insl
test
shl
test
dec
xchg
xchg
imul
div
pop
jg
fnstcw
jae
lcall
in
leave
xor
es
xchg
xor
pop
gs
add
fadd
js
std
push
push
pop
inc
outsb
mov
int3
shll
inc
cmp
ret
jl
jmp
shrl
aas
inc
stos
inc
push
std
ds
push
sbb
rolb
mov
add
dec
mov
and
adc
mov
movsb
adc
rorl
mov
cmpsl
adc
jne
xor
scas
inc
jg
movsb
rorl
or
outsl
test
cmp
jns
jnp
lahf
dec
and
lods
int
enter
sbb
dec
daa
lcall
mov
sbb
push
das
ds
mov
repnz
push
jbe
iret
movsb
fs
stos
xchg
ret
sbb
jno
test
clc
fcmovb
stos
sub
lret
dec
push
push
ret
pop
std
lea
mov
mov
mov
xchg
xor
sub
cmpl
add
lret
ficoml
rcrb
arpl
jae
mov
mov
and
ds
dec
sbb
push
setp
fcmovnbe
iret
aas
or
imul
fistps
xor
lret
push
cltd
cmpsl
inc
sbb
jle
xchg
mov
je
cmp
scas
es
fnstenv
cmp
sbb
popf
subb
xor
aam
mov
add
pop
les
loopne
sbb
pop
out
fcompl
mov
and
lds
les
in
mov
mov
ss
xchg
dec
jb
jbe
and
jl
inc
cmp
stc
cmc
in
mov
sub
in
pop
inc
mov
xor
in
scas
sub
arpl
add
xor
sbbb
add
cmp
idivl
jo
jb
scas
in
cmp
dec
scas
out
dec
add
mov
pop
and
lock
mov
pop
movsb
lret
push
popa
mov
push
std
push
push
or
adc
loop
cmc
push
orb
xor
lret
ss
pop
daa
jg
fwait
stos
adc
outsl
fstps
shr
and
ds
push
cmp
jno
aas
in
pop
sub
insl
adc
mov
xchg
movsb
sbb
jle
xlat
stos
sub
jg
lds
pop
test
shlb
push
sub
dec
cmpsl
pusha
adc
add
xchg
mov
cmc
fs
lods
add
out
pop
dec
mov
cmpsl
sbbb
fbld
adc
loopne
stos
sahf
rcll
dec
inc
sub
shrb
dec
icebp
mov
sub
stos
pop
mulb
inc
xchg
outsl
sbb
jle
sbb
out
add
sbb
lds
inc
int
in
xor
mov
xchg
xchg
out
imul
into
cmp
jmp
dec
sub
or
out
into
out
popa
sbb
mov
test
rorl
into
push
std
cmp
lret
roll
mov
adc
dec
cwtl
jmp
push
and
sbb
ss
mov
addr16
fwait
imul
ljmp
inc
sahf
leave
shll
icebp
adc
fistpl
jns
cmp
and
inc
sub
fldcw
or
sbb
ret
sbb
push
jnp
es
adc
jl
rolw
sub
mov
push
pop
sub
scas
adc
adc
mov
inc
xor
mov
jg
pavgb
shr
sub
stos
addr16
push
mull
insl
jge
push
jp
ljmp
in
scas
xlat
xor
ret
enter
push
int
jbe
sti
subl
pop
jno
mov
jmp
add
push
lcall
icebp
ffree
jmp
test
sub
cmp
push
test
fbstp
jbe
mov
cld
dec
pop
icebp
xor
cld
insl
lret
dec
imul
jmp
xor
mov
and
jmp
jo
imul
xor
mov
mov
cmp
push
dec
mulb
inc
sub
mov
sub
stc
jg
sub
xchg
lds
in
mov
out
cmp
fstp
int
sbb
sarl
or
hlt
gs
jg
subb
cltd
xor
xor
bound
cmp
cmp
in
sub
addr16
nop
xchg
js
test
or
inc
push
pop
adcb
inc
add
pushf
movsb
inc
aam
sub
jmp
adc
fst
mov
mov
pcmpeqw
xchg
lahf
cmp
adc
jbe
adc
xlat
scas
lret
inc
pusha
or
mov
mov
lds
fmull
ljmp
addl
push
lds
cmp
gs
push
jnp
arpl
stc
stos
leave
scas
mov
lds
outsl
pop
sbb
xchg
das
dec
lods
cmp
repz
or
test
push
cmp
or
jno
mov
dec
mov
mov
les
and
pop
pop
xchg
rorl
sbb
js
xor
repnz
mov
sub
pop
aaa
push
sub
xchg
jno
or
xchg
addr16
ret
xchg
dec
out
and
jg
stos
mov
xor
push
inc
popf
sbb
loope
mov
mov
stos
sub
inc
pop
test
mov
mov
sbb
xchg
fisubs
stos
push
mov
lahf
out
cmp
stos
add
and
sahf
lret
jo
or
jecxz
nop
cmp
adc
addr16
mov
lret
cltd
jnp
es
pushf
aam
cld
push
push
in
sub
shll
pop
mov
adc
fdivr
pop
xchg
or
mov
mov
dec
xlat
int3
sub
sub
push
or
out
fistpl
lea
jl
cmpsb
mov
popa
mov
arpl
push
cmp
andl
push
loope
ljmp
scas
mov
xchg
shrb
rcrb
add
and
push
stos
int
in
fwait
mov
in
lret
ffreep
es
add
sub
clc
jne
adcl
xor
sbb
insb
lahf
std
jl
lds
divl
push
jg
pop
or
mov
lock
sub
shll
dec
cmp
in
filds
push
nop
dec
mov
sbbl
mov
mov
test
sbb
mov
mov
fdivrs
and
cmp
push
jp
loop
ss
adc
es
jo
dec
test
imul
xchg
stos
jl
or
lods
pop
imul
lock
fiaddl
js
inc
dec
cmp
sbb
dec
repz
push
jecxz
sbb
insb
push
mov
aaa
movsl
test
push
adc
add
movsl
notb
jge
or
fsubrs
push
cmp
or
and
int3
xchg
jbe
fidivrl
into
mov
or
cmpsb
loop
ficompl
ret
cmpb
repz
pop
and
mov
push
popa
out
inc
aaa
jecxz
cmc
enter
aad
mov
push
fidivrs
testb
sarl
add
cmpsb
push
fwait
add
mov
push
out
or
and
and
push
inc
insl
mov
sub
sub
pop
sbb
mov
push
xchg
test
sub
mov
cmp
leave
pop
gs
mov
aaa
movsl
sub
mov
cld
add
stos
aaa
jecxz
cmpsb
fiadds
cmp
arpl
dec
add
shl
push
ds
xchg
ror
mov
pushf
fs
dec
add
jns
rcrl
xlat
cltd
stos
movsb
dec
fbstp
cmc
pop
das
movhps
push
dec
xchg
cwtl
icebp
test
xchg
push
ja
data16
push
in
mov
popf
mov
jle
mov
movsl
sub
push
adc
int
or
push
ljmp
rorl
mov
jae
xor
lcall
mov
idivl
mov
cli
push
pop
xchg
stos
inc
xor
mov
sub
xchg
test
mov
fwait
pop
inc
mov
popa
or
mov
pop
and
ds
or
lret
aaa
jle
jg
add
add
push
xchg
sub
test
sbb
sub
mov
jo
jns
cmp
sarl
lock
aas
jmp
fisubrl
push
or
clc
aas
mov
or
test
or
inc
add
sbbl
jmp
cmpsb
loopne
aam
punpckhbw
in
adc
inc
aad
das
fwait
xchg
loope
mov
in
pop
jg
cwtl
int
std
pop
fisttpll
loop
cmp
push
jecxz
inc
test
mov
push
jmp
aad
cmp
int
mov
outsb
or
out
push
shlb
lock
xor
adc
sbb
mov
dec
into
and
lret
sahf
stc
aaa
sub
cs
cli
sub
nop
out
jp
inc
add
pop
xchg
data16
push
std
pop
mov
mov
scas
iret
sbb
dec
adc
jno
insl
mov
mov
lret
jae
push
out
jne
popa
ds
push
jl
add
ja
nop
push
push
insl
push
jne
mov
or
pop
jnp
jbe
outsb
mov
test
mov
jp
es
aad
push
cmpsb
lahf
adc
mov
int3
xchg
shl
and
adc
mov
fstpl
in
cld
adc
pop
adc
push
adcl
das
lods
push
icebp
loope
cmp
cmpsl
jge
aaa
and
dec
cmpsl
pop
adc
or
xchg
idivb
xchg
mov
cmpsb
or
inc
sub
dec
push
pop
push
push
cwtl
test
mov
xchg
mov
cmpsb
or
inc
sub
dec
push
pop
push
push
cwtl
test
mov
xchg
mov
cmpsb
or
inc
sub
dec
push
pop
push
imul
cwtl
test
mov
xchg
js
notl
in
xorb
aas
sahf
sar
nop
leave
sbb
dec
or
cmp
sub
call
jl
aas
popf
iret
mov
mov
into
fucomip
scas
in
mov
cmp
sub
pop
cmovl
jl
insb
aas
mov
mov
mov
cld
lahf
cld
scas
in
mov
and
xor
inc
andps
fs
insb
aas
test
scas
and
aam
mov
mov
cmp
pop
xchg
bswap
dec
fidivrs
shll
xor
mov
inc
and
fnsave
inc
repz
inc
jle
xorb
loopne
and
aaa
sbb
mov
mov
adc
scas
adc
pop
lock
cwtl
push
lahf
pop
enter
lods
mov
test
and
fmull
in
mov
cmc
outsb
or
push
dec
jae
cld
lret
push
add
fmul
iret
ja
in
sahf
dec
rolb
andb
pushf
imul
int3
fiaddl
scas
cld
out
hlt
lret
jnp
rorl
mov
in
mov
shr
lcall
mov
adc
jg
subps
jl
jne
test
xchg
fbld
aam
out
in
stc
jo
imul
dec
insb
dec
pushf
mov
enter
test
fidivl
insl
adc
xor
xor
aas
fisttps
in
xchg
fsub
cmpsl
lock
mov
jns
pusha
sub
inc
or
dec
pop
jl
insb
aas
pushf
iret
mov
mov
int3
lahf
cld
scas
in
mov
cmp
sub
pop
cmovl
jl
insb
aas
pushf
iret
mov
mov
int3
lahf
cld
scas
in
mov
sbbl
or
test
sbb
mov
daa
mov
or
scas
xchg
andl
fs
dec
mov
shl
lahf
and
stc
in
xchg
fsubrl
loop
scas
jl
sahf
imul
fwait
mov
imul
out
mov
sub
pop
adc
outsl
sub
shrl
and
aam
stos
sub
jb
inc
push
push
mov
sbb
adc
xor
sbb
std
loopne
test
jp
pop
fldenv
push
rcll
mov
dec
cltd
sub
mov
mov
and
ret
loope
test
fisubrs
pop
addl
jae
jo
sub
or
cmp
mov
bound
mov
mov
movsb
sub
insb
and
push
ret
or
add
mov
inc
and
out
xor
fdivl
inc
test
xchg
jecxz
push
xchg
out
lahf
daa
and
push
cld
out
in
scas
dec
xchg
pop
scas
jno
pushf
adc
jno
adc
mov
add
mov
jp
int3
jg
jg
lret
xor
mov
loopne
gs
inc
pushf
scas
pop
xchg
add
stos
insl
xor
xchg
aad
sub
sub
push
ret
popf
inc
decl
aas
and
add
dec
js
mov
gs
dec
cs
sbbl
sub
mov
push
mov
inc
daa
pusha
inc
pop
pop
sahf
jno
cltd
pop
mov
mov
sub
fldl
lods
daa
adc
dec
out
add
test
and
adc
xor
call
dec
sub
pop
adc
xor
xchg
fsqrt
imul
dec
insl
mov
lds
int
sub
into
or
lods
daa
cmpsl
and
push
sbb
bound
mov
hlt
sbb
ret
jae
ljmp
setg
and
mov
and
loop
int3
jmp
and
fbstp
test
adc
and
gs
loope
popf
pop
xor
mov
push
jge
adc
stos
and
mov
imul
testl
pop
xlat
adc
mov
pop
cld
add
shr
push
mov
xchg
pop
stos
popa
loope
mov
dec
dec
mov
mov
inc
ljmp
ret
jp
test
push
mov
dec
inc
sbb
lds
push
jnp
jmp
call
xor
fs
clc
push
and
cmp
stc
out
in
mov
lahf
cmp
jno
subb
add
sti
dec
add
lahf
sahf
lea
dec
cs
pop
in
cmpl
pushf
fs
ret
add
push
rcrl
icebp
cmpsb
sbb
ss
test
out
es
aad
lcall
adc
fsubs
xchg
loope
xchg
jne
mov
jmp
cs
xlat
xorl
add
loope
aaa
inc
cmp
test
es
mov
mov
lahf
add
mov
push
aas
mov
lea
ret
lret
sbb
rcrl
mov
out
cmp
push
pop
sbb
stos
loopne
and
pop
pop
insl
ss
fbstp
rolb
or
in
jecxz
mov
jge
inc
rorb
in
cwtl
inc
mov
and
xor
sbb
int3
ljmp
mov
mov
mov
fwait
repnz
push
xchg
add
insl
repnz
mov
sub
stos
push
adc
mov
pop
ds
repnz
mov
push
mov
or
imul
int
fists
or
movsb
dec
xor
sub
jbe
popf
pusha
jnp
cld
jl
je
xor
dec
or
inc
mov
xor
test
test
mov
daa
addr16
mov
mov
xor
call
mov
idivl
add
add
out
push
jnp
pop
or
popf
inc
out
xor
add
or
rolb
divb
add
mov
or
movzbl
pusha
dec
adc
mov
repnz
mov
call
bnd
fadds
xchg
clc
cmp
jno
inc
aaa
ja
cmp
mov
test
pop
dec
dec
call
ss
icebp
data16
std
adc
xchg
test
sarb
xor
les
and
repz
add
sahf
jg
mov
movsl
mov
sahf
cmp
les
cmp
push
in
ja
cmpsl
es
xor
dec
xchg
fcmovnbe
xchg
dec
sbb
cmc
aam
imulb
sbbb
push
adc
add
xchg
and
test
push
cmpsl
inc
add
cmc
cli
mov
sarl
mov
xor
pop
test
inc
stos
pop
fwait
je
cld
push
mov
mov
xchg
ret
sahf
inc
fcompl
ror
addl
aaa
shll
scas
and
dec
subb
xor
daa
ljmp
ja
sti
fisttpll
pop
icebp
andb
mov
push
ffreep
fadds
sarb
lahf
or
fisubrl
mov
jge
cli
test
xor
push
arpl
xchg
sahf
ret
dec
and
push
push
into
sub
jbe
movb
jns
ljmp
cltd
and
dec
cmp
dec
jle
or
push
cltd
in
imull
jb
mov
adc
popa
xor
cmp
xchg
xchg
mov
push
xor
xchg
adc
js
fistpl
popa
pop
js
jl
sbb
inc
lcall
loopne
insb
dec
lods
and
lea
inc
test
jb
push
rcll
or
das
pop
aam
dec
hlt
dec
dec
loop
cmp
adc
stos
cmp
addb
cltd
shrl
loopne
or
mov
outsb
lock
outsl
movsb
pusha
js
push
das
scas
mov
cmc
jb
inc
add
icebp
leave
mov
cmp
in
cmp
sbb
xor
loope
xor
push
ja
mov
lods
fisttpll
push
or
xlat
stos
adc
xor
insl
popf
mov
sbb
lea
lret
adc
push
fdivl
out
mov
cmpb
subb
add
cmp
fisttpll
push
fucompp
mov
jle
das
aas
jnp
mov
int
ret
pop
pop
add
mov
or
xchg
ja
stos
jns
out
dec
addr16
cmc
aam
leave
fildl
test
cmp
jne
sahf
popf
daa
icebp
lret
xor
cmpsl
pop
xorl
mov
pop
ss
in
add
or
jnp
push
xchg
repnz
dec
push
movl
jmp
sub
inc
mov
sbb
mov
sub
and
fidivl
push
xor
or
out
jns
push
cs
xchg
dec
je
and
cmp
xchg
aaa
mov
cltd
addr16
push
xor
out
add
stc
pop
icebp
out
outsl
jmp
out
cmp
test
pop
pop
lock
loop
aad
cs
stc
lret
sub
jecxz
shlb
mov
xor
and
movsb
sti
xorb
aas
push
std
ja
pop
xor
cmpsl
testb
cmp
jp
inc
popa
lahf
mov
jno
xor
and
inc
jmp
xor
leave
mov
iret
lock
sbb
roll
dec
adc
mov
xchg
pop
dec
in
loopne
cmp
std
mov
fmuls
cli
stos
mov
and
rcrb
sub
mov
mov
dec
inc
mov
sbb
xor
shl
jp
fsubr
sub
jnp
mov
add
stc
adc
push
push
divb
jecxz
aam
scas
xor
cmp
xor
mov
nop
inc
cltd
loop
daa
mov
dec
sahf
xchg
xor
hlt
bound
push
jp
fs
push
popa
movq
int3
and
mov
cmc
sub
pop
in
adc
mov
loopne
add
push
leave
lods
mov
inc
addr16
in
xor
xchg
dec
jp
shrb
xor
adc
add
das
in
jl
mov
mov
dec
lods
mov
movsb
test
dec
sub
loopne
jle
push
inc
mov
into
shl
out
dec
sbb
sti
in
addr16
mov
mov
js
outsb
dec
cli
aas
dec
push
rclb
ljmp
das
outsb
adc
push
jno
push
sbb
pop
inc
pop
or
xchg
mov
mov
fists
inc
or
dec
pop
push
in
hlt
xchg
ret
std
inc
xor
cmc
mov
lods
rcrl
les
cmp
in
dec
call
add
scas
movsl
inc
mov
lret
jno
push
cmp
lods
int
push
out
in
push
xor
insb
insl
push
dec
xchg
int
fldcw
idivl
or
lods
lcall
je
cmp
lret
xchg
xor
mov
pop
mov
mov
ja
jbe
in
push
xor
xchg
cmp
mov
test
or
out
es
shr
mov
into
movsl
pop
sub
shll
dec
ret
pusha
add
inc
aaa
gs
cmp
cmp
in
ljmp
ljmp
stos
outsl
jno
pushf
scas
test
xor
sub
mov
push
popa
js
icebp
or
fdivl
mov
hlt
fdivl
sbb
aad
nop
test
loope
lock
add
jnp
je
push
inc
stos
cltd
popf
inc
mov
ljmp
fisubl
push
cld
mov
and
adcb
int3
fldcw
xor
repz
loope
mov
lock
xchg
inc
icebp
aas
push
mov
jle
cld
loope
cmp
jne
jle
sbb
add
repnz
fisttpll
dec
scas
pop
cwtl
inc
xchg
lock
add
jecxz
int
addl
jae
fdivrl
ret
ret
add
fsubrs
mov
and
mov
add
xchg
ja
js
jnp
stos
inc
xor
bound
xor
sbb
mov
cmpsl
or
pop
or
and
stc
aad
mov
cmp
pop
add
pop
mov
cltd
inc
xor
popa
shlb
cwtl
jne
or
mov
push
repz
aam
xchg
xchg
test
ja
inc
popf
andl
dec
mov
pop
movsb
push
dec
rolb
adc
sbb
rcll
shlb
xchg
jg
push
nop
repnz
fcomps
imul
mov
cld
arpl
test
jb
mov
adc
push
pop
mov
jno
js
and
mov
mov
push
or
ds
movb
test
ds
inc
adc
ja
jnp
adc
and
or
push
outsl
in
pop
push
sub
cld
mov
xchg
mov
insb
ja
xchg
loope
out
mov
xor
xchg
pushf
push
shll
sti
sbb
sub
or
cwtl
sub
push
sarl
push
jle
dec
jle
add
sbb
xchg
mov
test
sbb
jae
test
sub
movsb
sub
test
jmp
in
xor
adc
mov
out
cmp
xor
repz
loop
adc
dec
cmpsb
sub
mov
jbe
sbb
fucompp
inc
and
loop
bound
cmp
jle
sbb
in
push
enter
xchg
add
sbb
mov
jmp
push
xchg
mov
sub
ret
dec
inc
sub
fildll
inc
mov
and
int
mov
adc
pop
push
sub
addl
sti
lahf
push
push
mov
add
mov
aam
dec
mov
push
sub
cltd
nop
cmp
push
insb
cs
stc
push
fdivs
mull
cmp
xor
pop
jp
dec
jno
pop
dec
popf
insl
sub
pop
call
lcall
pop
rolb
mov
rcrl
add
pop
outsl
sbb
xor
cwtl
push
aas
cltd
leave
das
sub
add
hlt
push
data16
jp
sahf
int
add
pop
mov
adc
dec
adc
test
jmp
xchg
pop
dec
jmp
push
mov
dec
adc
outsb
sub
jb
mov
nop
xchg
inc
push
arpl
xchg
mov
and
jmp
xor
loopne
mov
call
jmp
fs
imul
into
xchg
in
push
into
push
in
xchg
jg
inc
test
movsl
jo
dec
cs
popf
cmp
std
add
push
cmpsl
out
xor
out
dec
jo
xchg
adc
fsubs
idiv
mov
dec
es
mov
es
or
jns
pop
pop
xchg
inc
jge
and
xor
sub
aas
xor
adc
jb
fwait
pop
addb
lret
lods
xchg
loopne
les
jge
ficoms
clc
cmpsl
test
ds
dec
mov
in
adcb
sub
enter
push
lds
cmp
sbb
adc
int3
mov
inc
pop
mov
cmp
pop
pop
rcll
aam
mov
mov
jne
xor
cmp
push
push
je
sbb
sbb
xlat
adc
push
movsl
jmp
sbb
arpl
imul
sub
fldt
xlat
lea
test
movsl
fistps
aas
push
mov
out
ficomps
mov
test
lock
cmp
sahf
jo
xchg
cltd
adc
call
out
in
fidivrs
adc
jp
ja
dec
mov
lea
xor
lahf
dec
adc
jmp
or
mov
adc
cmp
adc
arpl
rcll
sbb
jge
jmp
add
pop
xor
dec
cmp
or
scas
fisttps
push
pop
mov
fdivr
xchg
sbb
fildl
pop
adc
aaa
mov
or
pop
mov
movsl
cmp
lahf
test
negl
decl
jp
sbb
stos
movsb
cmp
xor
call
icebp
sub
push
sar
mov
push
xchg
add
popf
aad
add
push
aaa
xlat
push
mov
ljmp
xchg
push
clc
movsl
xor
enter
and
imul
sbb
shr
cli
aad
pop
push
jg
stc
push
inc
lock
repz
or
sbb
mov
pop
sub
jl
cmp
stos
and
add
jne
sub
inc
addl
sub
into
sbb
cmpb
outsb
dec
fstl
add
in
fs
icebp
xchg
and
mov
arpl
mov
push
cmpsl
shll
das
xor
aam
add
or
or
test
aaa
daa
out
push
cmpsb
dec
loopne
repnz
cmp
mov
inc
xchg
in
fucomp
sbb
push
and
dec
push
pop
test
and
shlb
adc
inc
add
test
sub
aas
hlt
daa
out
sbb
jno
divw
rcl
mov
sub
inc
stc
andl
inc
pop
push
mov
add
mov
inc
push
call
addr16
out
dec
and
les
push
mov
push
insb
repz
repnz
rolb
in
dec
xor
int3
gs
or
icebp
pusha
aas
xchg
jecxz
aaa
and
inc
cmp
mov
lods
fldl
jae
mov
into
xor
mov
mov
flds
js
push
lds
add
xlat
jnp
ret
jb
add
xorb
mov
enter
lcall
add
or
jb
js
mov
adc
and
xchg
jmp
daa
pop
pop
pop
repnz
ret
adc
movsb
outsb
add
frstor
lret
fwait
loope
cwtl
jnp
or
xchg
add
or
sti
lcall
mulb
xchg
xchg
or
repz
or
and
sub
int3
mov
pop
inc
pop
fnstsw
add
dec
outsl
mov
mov
mov
add
pop
inc
fstpl
rcll
insl
sub
lcall
rcrl
mov
movsl
cmc
push
lahf
and
pop
or
outsl
add
lahf
adc
or
xchg
scas
mov
aam
or
adc
stos
cs
mov
push
push
gs
in
xchg
fisubl
cwtl
inc
decb
xor
mov
test
mov
push
xorl
jl
mov
xchg
test
es
ret
sbb
int3
cli
lcall
mov
pushf
jnp
push
pop
and
popa
aad
push
out
xchg
xor
adc
lret
cmp
xchg
insl
push
xchg
shl
mov
mov
aam
lock
cmpsl
push
pop
push
dec
lcall
xor
nop
and
ss
jno
ret
popf
sub
imul
add
dec
pop
pushf
popf
inc
mov
jge
insl
xlat
add
adcl
adc
fs
push
xor
lret
push
jo
push
mov
mov
loope
mov
ret
mov
ljmp
dec
jo
lods
lahf
movsb
xor
push
pushl
push
shlb
test
shlb
xor
xchg
sbb
sbb
notl
xchg
out
cmp
sbb
in
push
sub
or
ret
lods
insl
cli
and
rorb
inc
pop
sbb
scas
fbstp
push
xchg
lahf
pop
movsl
push
pop
movsl
lfs
jp
insl
ss
cmp
je
jmp
push
xchg
mov
popa
lcall
rcl
pop
sub
jbe
lret
push
mov
sbb
push
int3
mov
lds
arpl
outsb
shrl
icebp
xchg
mov
xchg
cmc
push
aaa
inc
out
lock
jge
roll
mov
jecxz
lahf
cmp
data16
dec
cmp
mov
hlt
adc
xchg
or
jno
out
loopne
sbb
pop
enter
stos
mov
push
cmp
test
fisubs
stos
test
out
inc
out
iret
pop
pushf
dec
push
sti
subb
mov
jne
fildll
aaa
dec
repnz
out
fs
test
pop
push
pop
inc
mov
adc
adc
xchg
push
cld
pop
jle
mov
mov
push
push
and
test
pushl
sti
es
jbe
leave
cld
inc
pop
pop
xchg
mov
icebp
pop
int
andl
mov
test
inc
push
and
push
out
out
out
pop
mov
push
pop
xchg
cld
sbb
fwait
push
lods
mov
mov
inc
pop
xlat
xchg
sti
test
push
cmpsb
fsubl
stos
cmp
xor
cwtl
call
out
sti
pcmpgtb
in
fs
push
xchg
je
shl
insl
push
pushf
cmpb
push
cs
dec
cmp
cltd
cmp
fistpll
ss
xchg
adc
aas
mov
adc
adc
sarb
jnp
xlat
dec
pop
roll
sbb
mov
pop
in
enter
imul
inc
dec
adc
clc
dec
lret
sub
int
dec
scas
sub
dec
inc
ret
and
push
je
and
mov
push
jb
xor
imul
mov
push
push
popl
stos
outsb
stos
iret
cmp
fisttps
add
into
fdivl
js
pop
mov
dec
ds
jl
lret
mov
inc
inc
push
sahf
mov
or
mov
fidivs
js
jo
push
mov
stc
js
clc
jle
call
rsqrtps
mov
out
mov
pop
mov
dec
push
ret
lods
adc
andl
push
shl
adc
mov
aas
lods
xor
and
test
sbb
push
cmp
fisubl
dec
fst
ret
push
xchg
mov
test
in
leave
pushf
jl
rclb
pop
outsb
ja
push
stos
xchg
pop
cmc
jo
and
or
aad
cs
inc
fstl
inc
enter
push
ds
dec
test
add
inc
imul
adc
rorb
or
movzwl
xchg
sub
add
addr16
aas
or
or
outsb
inc
pushl
ret
mov
leave
adc
push
movsl
xor
push
cmc
jle
push
scas
jns
xchg
inc
mov
and
out
sub
push
dec
jns
jne
mov
imul
test
lcall
inc
lods
pop
dec
pop
xor
xchg
sbb
jmp
mov
call
inc
xlat
jmp
cmpsl
mov
aas
xchg
arpl
push
call
js
cwtl
lock
sub
test
pop
shl
adc
sub
adc
ret
mov
jp
dec
test
push
cmp
in
insl
in
jo
sbb
inc
mov
imul
dec
jg
cmpsl
into
mov
gs
pop
and
xchg
and
aaa
out
or
mov
mov
hlt
stc
loopne
out
xchg
ja
lret
adc
or
fwait
mov
daa
sbb
xchg
jg
loopne
pop
jbe
stc
xor
cltd
in
test
cwtl
cmp
rcrl
stos
jae
movsl
mov
jp
pop
and
add
pop
movsb
andps
sbb
fidivs
pop
outsb
sub
pop
cmovl
jl
insb
aas
pushf
iret
mov
mov
int3
lahf
cld
scas
in
mov
cmp
sub
pop
cmovl
jl
insb
aas
pushf
iret
mov
mov
int3
lahf
cld
scas
in
mov
cmp
sub
pop
cmovl
jl
insb
aas
pushf
iret
mov
mov
mov
lahf
cld
scas
out
mov
cmp
cmovl
arpl
jae
push
out
lods
mov
push
adc
xchg
jecxz
shll
shrl
aas
adc
and
push
and
adc
bound
mov
mov
xchg
repnz
adc
xor
inc
and
and
xor
bound
adc
lods
rol
ret
and
mov
and
push
sub
popf
xchg
scas
fst
and
test
xor
push
or
into
cmpsl
jbe
and
pop
jp
mov
push
aam
pop
popf
push
and
test
pop
std
xor
scas
adc
cld
xor
inc
aad
jp
loop
fwait
mov
push
and
repnz
fbld
push
data16
aas
jmp
xchg
mov
insb
jge
sbb
xlat
int
jb
cmp
mov
or
out
jge
aaa
pop
pop
dec
shrl
xlat
sbb
or
out
loopne
push
int
loop
inc
and
or
jle
rcl
cmp
dec
insb
xchg
add
and
test
data16
xchg
mov
shll
fcmovnb
xchg
repnz
add
push
sub
jb
or
fstpt
ret
xorl
pop
es
xor
jp
and
mov
rcr
lcall
adc
xor
push
cmp
xor
pop
inc
xor
ficoml
ret
and
adc
push
xor
xor
inc
adc
xchg
jecxz
shll
mov
loop
adc
push
xor
xor
inc
adc
xchg
inc
lret
adc
add
jl
dec
jle
mov
and
lock
pop
xor
movl
or
ds
stos
push
aas
inc
pop
arpl
sbb
xchg
sub
ds
push
add
fdivp
or
daa
jl
pop
pop
repz
insl
fsubs
jmp
xchg
add
mov
pop
fildll
sub
cmp
jp
lds
xor
sub
mov
mov
jae
push
lret
repz
js
je
sub
rclb
es
ret
push
sub
mov
push
xchg
cld
sub
out
mov
call
dec
mov
mov
pop
xchg
cmp
or
lock
in
push
addr16
je
rcr
push
in
push
xchg
popf
push
pop
jl
bound
inc
add
and
xor
dec
jbe
aam
sbb
push
lods
call
outsb
cmp
dec
fs
or
mov
fdivs
xor
adc
lea
cs
pop
mov
out
pop
cmp
orb
sahf
cmp
hlt
jmp
xchg
push
lock
fwait
insb
outsb
mov
lods
sar
xchg
and
push
lods
push
sbb
sub
or
test
mov
sbb
cmp
stc
cmc
mov
add
mov
pop
les
adc
negl
cmp
inc
push
mov
repnz
aas
imul
push
dec
outsl
and
aas
push
ss
fisubs
pop
xor
xchg
repz
jne
xorb
setno
push
xor
dec
or
cmp
sbb
insb
or
je
or
adc
in
adc
pusha
push
outsl
test
sub
cmpsl
push
lods
adc
add
and
cmp
pop
ljmp
push
ds
mov
xor
sub
xor
inc
cmp
je
lahf
mov
inc
jecxz
lret
negb
add
jp
fadds
inc
ficompl
adc
xchg
push
push
xor
cltd
sbb
inc
data16
xorb
push
stos
nop
push
test
lds
lds
jno
dec
gs
add
add
cmp
scas
xor
subb
adc
jp
js
add
lock
fcoms
sbb
std
cmpsl
icebp
cli
int
jbe
pop
rolb
cmpsl
fisubs
ds
add
mov
add
movq
das
jno
xchg
sub
imul
xor
cwtl
mov
jbe
lds
fldt
fmull
jmp
xor
dec
scas
add
jmp
cwtl
add
cld
divl
add
push
in
lea
push
push
faddl
pop
orl
push
lcall
jb
sbb
mov
mov
sahf
idivb
jl
stc
popa
sub
or
lcall
jge
ret
push
and
in
lods
mov
or
adc
leave
jo
mov
faddl
cmp
inc
jnp
insb
jnp
add
xor
ss
jno
mov
pop
pushf
dec
pop
std
popf
jnp
and
test
sub
xchg
ror
and
in
xchg
in
or
mov
cli
loop
lods
es
push
inc
mov
add
dec
xor
cwtl
xchg
lret
adc
or
jne
je
ret
pop
mov
adc
sti
aam
cmp
gs
jge
xchg
leave
dec
push
mov
addb
call
xor
cs
leave
pop
arpl
pop
inc
mov
rcr
add
xchg
mov
sbb
push
and
pop
fsubrs
iret
inc
adc
jl
adc
mov
sub
pop
add
mov
dec
xchg
hlt
fdiv
cmp
test
in
add
pop
rdtsc
scas
mov
lret
in
xchg
mov
cmp
mov
out
push
loope
call
loop
dec
sbb
add
mov
push
cld
xchg
xchg
cmp
loop
push
and
cmp
cmp
lcall
imul
cld
push
js
lret
dec
xchg
int
frstor
add
insl
aaa
push
cld
insb
jle
jno
push
sarb
xchg
sub
mov
std
sub
rorl
sarb
adc
inc
aad
jmp
lret
sub
push
adc
pop
mov
jmp
ss
dec
clc
daa
xchg
aad
inc
xor
pop
insl
push
or
mov
mov
inc
loopne
jae
dec
adc
test
iret
sbb
sbb
fistpll
imul
mov
pop
xchg
cmc
sbb
aam
jbe
loope
sbb
mov
lods
fmulp
jmp
jne
outsl
and
or
aaa
movsb
push
pushl
pusha
lahf
stos
push
and
push
cmp
mov
stos
xchg
lods
das
and
std
dec
cld
inc
lcall
push
into
push
lock
or
outsl
inc
inc
lea
cs
push
fmuls
jns
push
pop
mov
cmpsb
sub
sub
xor
fnstcw
xchg
inc
leave
pop
sbb
loopne
adc
out
outsl
nop
sti
hlt
add
cld
mov
or
push
mov
xlat
cmp
leave
adc
and
iret
pop
add
xchg
xchg
rclb
cmp
push
sub
lcall
xchg
movsb
cmp
mov
dec
add
test
sub
popa
int
inc
mov
sub
mov
mov
mov
inc
mov
sahf
movsl
dec
loop
fdivrp
cmp
lods
inc
enter
xchg
mov
pop
add
aaa
cld
xchg
into
dec
cmp
push
fs
mov
inc
ret
ret
push
pop
add
stos
stos
loopne
and
in
pop
int
cmp
in
push
jno
push
push
jecxz
mov
mov
cltd
mov
push
lret
jno
cmp
push
stos
dec
jg
insb
sub
fcoml
imul
add
test
lods
mov
sub
add
nop
ljmp
lahf
ret
lods
dec
in
dec
sbbb
lock
bound
pop
cmc
inc
lea
cmp
adc
push
mov
mov
sbb
jg
sbb
jno
lock
pop
or
jg
cs
mov
xchg
sub
leave
imul
pusha
cmc
movl
aam
dec
or
jo
and
aaa
inc
jae
add
inc
mov
popf
add
es
mov
or
mov
jnp
sbb
lahf
jnp
in
fisubrl
xchg
sbb
ds
xchg
jo
mov
sub
push
int
pop
mov
adc
mov
in
mov
dec
daa
xchg
adc
outsb
and
imul
and
in
mov
addl
jbe
mov
shlb
ja
jbe
push
out
push
dec
andb
ljmp
fbstp
fs
lods
xchg
nop
je
cmp
aam
in
jmp
pop
aaa
dec
js
jo
adcb
aaa
test
add
and
or
adc
inc
or
or
loope
xor
sbb
dec
push
or
aaa
pop
and
add
push
pop
push
std
imul
xor
add
ja
shll
dec
push
cmp
ret
sub
cmc
add
cmp
andb
icebp
jb
lock
fistpll
push
xchg
pop
mov
icebp
aaa
rol
cltd
pop
jmp
xlat
sub
into
movsl
sahf
test
pop
mov
movsb
push
arpl
movsl
cmp
cmp
iret
je
or
lcall
mov
xor
ljmp
in
cwtl
jg
arpl
adc
mov
push
repnz
int
and
jnp
jnp
inc
mov
mov
mov
js
or
mov
sbb
idivb
iret
test
aas
mov
jbe
add
dec
xchg
test
xchg
jle
in
xchg
sub
mov
jae
shlb
cmp
mov
xchg
scas
or
nop
cli
mov
pop
faddl
xor
pop
or
dec
cld
sub
call
subl
cltd
les
sahf
test
mov
ds
cltd
sbb
mov
insl
adc
test
mov
iret
add
out
inc
mov
pop
pop
jns
xchg
xor
mov
les
rcr
jo
in
pop
fcmovne
sti
inc
std
and
mov
fsts
jp
movsl
mov
push
sub
fcmovb
sub
mov
testb
movsl
adc
adc
lahf
scas
stos
jle
cmp
sub
lea
push
imul
mov
out
or
xor
jo
fildll
cs
jmp
mov
lret
jp
jecxz
bound
nop
or
sbb
add
jg
sbb
in
push
gs
ret
add
hlt
pop
gs
push
mov
sbb
add
inc
xchg
fdivrs
cld
sbb
pushf
fs
mov
iret
cltd
enter
or
hlt
jp
mov
xor
insb
or
into
pop
or
pop
pop
std
test
shrl
adc
loopne
loopne
roll
inc
sbb
lahf
sahf
push
adc
cli
adc
cs
aad
inc
std
xor
mov
int
lahf
loop
shlb
dec
sbb
clc
ss
loope
cmp
fstpl
je
xlat
inc
aam
xor
inc
add
mov
mov
nop
xor
dec
jmp
add
mov
insl
cmp
js
arpl
push
lods
in
stc
shll
fists
mov
out
fldl
lret
or
jg
sti
add
mov
fisttps
jns
hlt
jg
out
jo
push
int
or
add
mov
addr16
mov
mov
xchg
adc
pushf
mov
dec
jb
xchg
scas
into
xor
push
mov
sub
in
cmpsb
mov
stos
ljmp
mov
sub
jg
repz
scas
inc
hlt
cmp
repnz
lahf
cmp
mov
std
jb
sbb
scas
and
dec
fmul
sbb
xchg
data16
inc
aam
sub
mov
sbb
xor
mov
scas
mov
cs
sbb
adc
fwait
out
mov
leave
lcall
mov
cwtl
cmc
and
xchg
mov
xor
cli
dec
cwtl
ret
ja
and
dec
lahf
add
or
pminub
push
mov
enter
test
cwtl
pop
pop
sti
xor
das
out
dec
xchg
es
mov
push
aam
mov
imulb
pop
and
call
out
js
daa
testl
imul
idivb
dec
mov
and
in
add
out
mov
jecxz
lods
mov
pop
in
pop
xor
dec
sub
lds
sbb
sub
mov
shlb
push
lods
sbbl
or
xchg
push
andl
in
add
push
cli
out
daa
or
mov
mov
test
fisttpl
pop
sub
sbb
jl
push
jae
push
jge
and
and
fwait
mov
pop
xchg
leave
push
sub
lock
inc
ds
pop
add
movsl
cmpsb
lcall
dec
in
mov
xor
mov
bound
mov
mov
shrb
mov
or
or
data16
iret
cmp
out
lahf
fadds
scas
cli
jmp
enter
mov
in
adc
sbb
mov
ret
and
rcll
push
test
test
inc
fwait
or
aas
in
mov
repnz
lock
cmp
add
inc
into
cltd
dec
pop
js
push
xchg
ds
jl
xchg
outsb
mov
xchg
jmp
add
mov
pop
push
insl
insb
jg
cmp
call
xchg
add
xlat
push
clc
shll
shrl
dec
adc
mov
push
in
fwait
mov
push
or
cmp
jle
push
ljmp
fs
insb
lret
mov
fstps
out
scas
mov
sbb
cmpb
adc
dec
ds
xor
push
cmp
mov
xor
test
cmp
push
mov
adc
push
and
in
jmp
pop
lahf
mov
xor
jl
int
and
cmp
mov
mov
icebp
inc
es
pop
test
inc
lcall
mulb
stc
jns
lret
push
leave
shrb
pusha
xchg
leave
push
sti
addl
push
sbb
jnp
les
push
pop
sub
sub
jl
loope
push
pop
pushf
in
aas
add
sub
test
int3
lret
dec
outsb
lods
popa
testl
mov
aaa
dec
out
jbe
ss
mov
jae
mov
sti
rcll
push
stc
cld
popa
pop
imul
out
xchg
test
hlt
jge
lods
andl
jge
inc
adc
jae
push
leave
push
add
mulb
jmp
pop
push
jecxz
cmpsb
cmp
popa
push
or
jns
aam
icebp
pop
push
sbb
movsb
cli
dec
das
popf
jb
je
enter
jp
ljmp
fstpl
push
scas
mov
mov
xlat
push
and
pop
icebp
jge
scas
inc
out
mov
mov
jge
shll
or
cmp
cwtl
mov
ss
insb
pop
stc
push
nop
nop
jmp
xchg
lea
fisubrl
js
hlt
jnp
ja
daa
imul
ret
xchg
ja
aas
jge
mov
mov
mov
es
pop
dec
pop
in
aad
xchg
ja
lods
sbb
xor
clc
jno
es
mov
in
mov
mov
stos
xor
add
xor
cs
pop
adc
and
ljmp
sub
repz
test
clc
stc
add
xorl
sub
xchg
jno
in
adc
push
xor
push
sub
jo
add
int3
cmp
xorps
and
popf
xchg
jg
cmp
lock
push
adc
or
mov
iret
repnz
push
jnp
jge
push
iret
lds
rcll
or
inc
test
faddl
cmovnp
lods
lods
and
jmp
ret
cmp
scas
xor
pop
jnp
mov
xor
aad
mov
adc
dec
mov
nop
push
in
test
sarb
xchg
fs
inc
xchg
sub
lock
push
push
aaa
popa
hlt
scas
inc
cmc
lret
jl
mov
std
pusha
dec
movsb
add
mov
sbb
mov
out
sub
lds
cli
sti
sahf
push
mov
ja
pop
mov
gs
mov
jb
xchg
jg
mov
pop
fildll
testb
ds
test
outsl
repz
mov
dec
test
imul
inc
insb
dec
push
outsb
shlb
dec
invd
cltd
int
stos
mov
jl
js
inc
cmp
sbb
add
out
scas
lret
pushf
test
mov
fcompl
or
add
imull
rcrl
pushf
and
pushf
in
hlt
add
adc
fildl
mov
add
pusha
fidivrl
add
xchg
xchg
rcrl
dec
jge
xlat
js
lahf
sub
in
pop
out
and
jne
andb
add
out
jns
or
subb
pop
xlat
stc
xchg
stos
inc
or
dec
ja
jecxz
pushf
lret
outsb
popf
or
testb
pop
fldl
dec
jecxz
stos
insl
push
std
scas
roll
inc
jl
ret
jp
cmp
data16
inc
pop
in
and
mov
jp
cmpsl
sub
push
and
repz
inc
test
iret
in
test
lret
inc
push
sub
call
mov
mov
sti
mov
test
xchg
jmp
pop
stos
imul
rcrl
mov
xchg
movsl
nopl
pushf
test
fwait
mov
or
nop
popf
xchg
xchg
notb
add
movsb
fidivl
xchg
subl
rorb
sti
xor
mov
cs
les
mov
out
add
xor
inc
sub
add
scas
xchg
out
mov
stos
nop
xlat
fdivrl
pop
cwtl
add
sbb
xchg
stos
cmp
lods
fildl
adc
add
out
sbb
push
pop
shll
add
cltd
xor
mov
test
sbb
xchg
mov
je
or
xor
jge
cli
jmp
out
je
dec
sbb
add
jg
pushf
jle
pop
aad
insb
lods
negb
jmp
push
ds
sub
popf
pop
mov
dec
rclb
push
bound
cmp
mov
xchg
lcall
cmp
inc
add
jl
cmp
mov
xor
stos
sbb
mov
dec
mov
adc
pop
xor
push
jns
cmp
mov
sub
pop
adc
dec
pop
or
mov
xchg
xor
insl
int
in
lods
out
push
sbb
in
fsubrl
mov
clc
lret
mov
cmc
xchg
inc
dec
sub
mov
sahf
fadd
dec
add
jmp
push
adc
pop
testl
or
sarb
aam
xor
aaa
adc
movsl
sbb
dec
ret
test
inc
xor
sahf
cltd
or
xor
pop
pop
dec
and
stos
pop
jl
ljmp
ret
aas
mov
mov
out
lcall
push
push
mov
sub
pop
nop
or
fsubrs
sbb
rclb
ja
lea
addr16
pushl
shrb
adc
adc
xor
arpl
add
sbb
test
andl
test
jl
push
dec
or
mov
popf
stc
out
insb
adcl
testb
add
push
test
pop
out
add
sbb
inc
pop
xlat
das
inc
jne
sub
mov
aam
ret
iret
push
xchg
ljmp
cs
test
das
push
adc
movsb
clc
imul
pop
xlat
pop
lea
lahf
repz
test
sahf
adc
cmpsb
repz
cmp
sub
leave
jb
cmp
fbstp
addl
inc
sub
jge
loopne
adc
aam
mov
and
xor
or
sub
cli
sbb
jg
clc
xor
into
jae
imul
xchg
scas
push
scas
insl
mov
xlat
fnsave
pop
jo
lret
outsl
test
call
shrl
xchg
push
add
hlt
js
fwait
lock
test
mov
sub
pop
imul
cld
or
orl
lret
orl
adc
dec
cltd
adc
or
mov
sbbl
in
pushf
pusha
xor
addr16
jl
inc
aad
ret
jb
mov
out
ds
into
movsb
xor
and
mov
sub
inc
sahf
sub
push
cld
xor
sbb
sub
inc
or
aad
mov
cwtd
inc
dec
sub
jb
push
aad
test
jae
or
stos
pusha
pop
push
sub
cmpb
mov
stos
mov
loopne
xchg
xlat
dec
mov
pop
and
inc
insb
push
jmp
fdivrl
jae
test
hlt
rcll
and
out
ret
xchg
and
psllq
and
xchg
or
pop
aam
nop
cmpsl
sti
test
jns
aaa
xchg
dec
mov
sub
pop
adcl
ficoml
in
add
cmp
dec
mov
lret
dec
pop
push
out
push
sbb
addr16
aaa
push
nop
das
call
mov
scas
push
sbb
shr
xor
adc
insb
xchg
fiadds
adc
xchg
pop
test
mov
xor
lods
or
cmp
out
dec
xor
popa
popf
addb
inc
icebp
xor
inc
dec
xchg
mov
into
xchg
mov
loopne,pn
sbb
int
or
sub
dec
fsubrs
les
dec
ljmp
incl
les
aaa
xchg
jno
pop
inc
aam
jmp
xor
stos
xor
cwtl
outsl
jp
xchg
jl
xor
xchg
pop
push
jns
lahf
inc
pop
xchg
rcr
adc
mov
repnz
pop
and
lds
notb
mov
xchg
out
dec
fisttps
movsl
mov
dec
or
repnz
cwtl
jo
fldenv
add
add
sarl
pop
sbb
rcr
daa
dec
push
ror
sub
inc
rolb
xchg
hlt
inc
add
xchg
mov
mov
xchg
repnz
adc
push
xor
xor
inc
adc
xchg
jecxz
shll
mov
loop
adc
push
xor
xor
inc
adc
xchg
roll
mov
ret
mov
xchg
repnz
loop
xchg
arpl
mov
push
xor
jb
out
mov
mov
xchg
repnz
jae
pushf
test
xor
inc
fisubrl
popf
pop
mov
and
xor
pop
adc
dec
inc
pop
sbb
shl
in
cmpsb
rcll
xor
popa
adc
xor
inc
xor
adc
repz
loope
icebp
jbe
rcl
jno
xchg
hlt
sbbl
sub
jl
arpl
test
lahf
fcmovne
movsb
rol
lock
iret
xchg
popf
xorl
lret
test
push
sarb
push
aad
xchg
mov
sub
add
cltd
and
and
cmpl
mov
imul
sarl
or
adc
insl
push
mulb
jbe
insb
in
xchg
hlt
insl
dec
inc
cmp
xor
les
jno
adc
mov
mov
cld
push
movsb
xor
ds
loop
pop
movsb
sbb
cmpb
mov
je
add
mov
outsb
sub
xchg
or
in
adc
imul
stc
or
rolb
cmc
pop
les
aam
outsb
hlt
xchg
les
jbe
inc
and
xor
or
popf
jmp
lods
fcomp
test
in
in
adc
popa
inc
push
push
inc
and
dec
data16
insb
lock
xchg
cltd
test
scas
test
mov
adcl
ss
xor
adc
jne
insl
xchg
roll
std
hlt
in
xor
add
xor
cmp
push
and
add
mov
les
hlt
addl
xor
inc
xor
adc
icebp
xchg
loope
shll
in
hlt
addl
pop
push
imul
fldt
out
pop
pop
or
lret
fs
mov
fdivrs
pop
popf
mov
sbb
adc
out
jb
lock
adc
aas
xor
sbb
xor
sbb
add
imul
xor
dec
ret
movsb
and
or
dec
ss
xorl
xor
mov
ret
jmp
pop
pushf
or
cmp
xor
fdivr
pusha
push
inc
arpl
sbb
mov
mov
outsl
sub
mov
fmull
imulb
stc
aas
shrb
jl
aaa
or
fisubrs
notl
negb
add
adc
push
xchg
popf
fcomps
or
jp
mov
fldenv
push
fldcw
ror
push
inc
rcrl
loopne,pt
neg
lcall
dec
loop
jae
insb
mov
jmp
push
sahf
jbe
sbb
mov
cmc
xlat
lods
ror
pop
cmpsb
das
adc
lahf
or
adc
mov
ljmp
pop
mov
sub
push
hlt
xchg
jg
add
xorb
pop
xlat
int
adc
sbb
push
test
icebp
and
pop
faddl
popl
fdivl
sti
inc
dec
add
insl
xchg
in
je,pn
jo
and
adc
mov
mov
xchg
jmp
mov
push
adc
adc
sbb
es
clc
pop
cmpl
xorl
push
imul
mov
and
add
loop
and
xor
or
dec
in
test
xor
and
inc
scas
std
outsb
push
ljmp
push
aas
int3
xchg
in
dec
scas
pusha
jmp
xor
decl
mov
ljmp
mov
mov
pop
mov
test
mov
push
xor
jae
pop
inc
push
jge
arpl
push
dec
sub
cwtl
iret
cmp
xchg
push
imul
addb
or
pop
lea
icebp
xor
data16
mov
mov
push
adc
in
xchg
cwtl
fmuls
or
adc
int3
push
mov
std
int
ret
sub
cld
xchg
lock
rorb
push
mov
ret
inc
mov
ljmp
sub
stos
and
in
jb
mov
add
jb
or
jns
xor
dec
xor
cmp
or
xchg
test
xlat
inc
fwait
xchg
das
rcrl
lods
frstor
aaa
test
addl
es
pop
es
inc
fisttpl
add
mov
ret
cld
stos
or
or
add
xor
push
mov
fisttpl
movsb
imull
scas
inc
sbb
pop
push
mov
cmpsb
dec
shll
sbb
cmp
pop
test
mov
ret
xor
ja
jmp
push
xchg
cmpsl
adc
jb
xor
or
pop
mov
cmp
test
add
js
and
xchg
cmp
or
jge
dec
mov
mov
sub
outsb
adcl
cmp
shrb
xor
test
push
je
lret
mov
scas
mov
mov
clc
popf
mov
sbb
push
push
daa
xchg
or
lcall
push
lret
mov
popa
cmpsb
mov
daa
inc
push
sbb
mov
inc
out
loop
ljmp
popf
aam
jge
out
sahf
xchg
pop
sbb
dec
pop
sbb
mov
or
sub
sbb
out
jecxz
mulb
cmp
outsb
daa
out
pop
cmpsb
xorl
jg
fidivs
aas
movsl
xor
mov
jno
popa
adc
shlb
jecxz
imul
pop
lcall
mov
sub
sbb
test
es
jb
out
aaa
xlat
lods
fucomip
cld
pop
int3
mov
dec
dec
fistl
shrl
lcall
popa
sbb
imul
fbld
cmpsb
adc
aas
repz
das
loop
dec
sbb
leave
dec
sbb
test
mov
or
or
pop
lods
push
add
dec
mov
add
push
lock
mov
pop
pop
stos
xchg
and
add
lock
mov
jle
inc
cli
loop
mov
das
aas
mov
lods
rcr
xchg
mov
out
aas
stc
pop
jp
js
dec
mov
mov
repnz
rcll
adc
push
in
jge
sbb
pop
in
rcr
jb
in
out
pushf
jbe
jg
mov
shl
adc
sub
adc
push
jns
dec
sub
or
shll
fldenv
imul
imul
lea
jne
int3
sbb
in
das
call
pop
and
jg
aad
daa
jb
nop
add
lahf
stos
hlt
mov
adc
mov
faddl
js
lret
je
repnz
xor
popa
jb
push
adc
jb
xchg
arpl
dec
push
into
shll
loop
shr
cmpsb
push
das
adc
and
jo
xor
add
push
lock
cs
push
xor
popf
jnp
inc
aam
jne
fcomps
xor
sub
cs
jnp
aaa
dec
lcall
inc
mov
nop
cmp
and
jge
jb
ds
sub
or
sbb
mov
out
inc
mov
dec
pavgw
mov
inc
mov
mov
cld
idivb
jp
loope
xchg
xor
inc
idivl
call
mov
flds
pop
xor
jle
pop
or
add
pop
dec
push
lcall
or
xchg
mov
inc
jl
fidivrl
add
adc
adc
aad
push
sbb
insl
pop
lret
cmp
sbb
lahf
addr16
cmp
addr16
mov
add
pop
sbb
mov
mov
cwtl
loopne
call
insb
fisubs
imul
fisttps
add
mov
add
sbb
push
imulb
dec
imul
sub
jne
and
imul
stos
dec
push
das
mov
mov
mov
lods
call
lret
ljmp
cmp
pop
dec
gs
cld
push
lods
push
stos
mov
iret
sti
clc
std
cmp
and
or
popa
das
sarb
inc
dec
push
arpl
jl
inc
pop
mov
lods
or
jnp
push
cmp
std
lcall
ds
push
stos
push
jbe
jl
cmp
push
lods
mov
inc
jns
pop
jle
xor
jbe
int
xor
rol
lea
mov
in
cmp
push
sub
xor
or
fildll
xchg
pop
mov
loopne
fwait
push
sbbl
mov
jge
les
dec
dec
cmp
xor
shrl
outsb
push
add
xchg
pop
and
or
xchg
lahf
lods
dec
fstpt
dec
push
scas
std
cmpb
cmpsl
ret
lds
mov
and
les
cmpsb
pop
pop
pop
scas
les
arpl
test
and
push
mov
movsl
nop
xor
mov
mov
lea
sahf
push
outsb
xor
gs
jmp
xchg
pop
jb
insl
or
aaa
dec
sub
cwtl
enter
xor
xorb
lea
mov
cmp
daa
xor
fwait
pop
mov
mov
hlt
negb
sub
xchg
test
adc
mov
or
inc
sbb
lcall
mov
cmp
outsb
and
rorb
push
repz
imul
bound
inc
push
shll
std
jno
sahf
test
in
fcmovbe
adc
add
pop
push
xchg
enter
shll
jl
mov
lods
push
in
pop
push
add
pop
add
es
inc
or
lods
pusha
inc
xacquire
ss
cmp
les
sahf
add
dec
insl
ds
xchg
insl
pop
lock
jbe
stos
mov
jo
jmp
popf
mov
jge
mov
and
push
imul
and
jg
movb
cli
push
push
scas
add
or
fldl
inc
sbb
cmp
push
dec
fcmovb
xlat
insl
mov
cltd
xor
pop
enter
in
shrl
popf
mov
sub
pushf
add
or
les
dec
mov
sbb
dec
test
test
mov
int
aas
cmc
xor
or
dec
aas
mov
pop
gs
cs
mov
fmulp
add
add
push
xchg
ret
mov
jnp
and
imul
outsl
pop
push
and
int
adc
mov
or
mov
jbe
in
jmp
repz
cmp
mov
add
fcoms
push
adc
and
mov
leave
push
call
inc
loop
sahf
sbb
pop
test
push
mov
fdivrs
into
xor
pop
pop
mov
cmp
or
sub
in
jno
jne
push
xchg
lahf
cmpsl
cmp
loopne
test
lods
out
dec
call
fimull
jb
les
mov
outsl
notb
mov
icebp
ss
mov
inc
pop
hlt
loope
cmp
lods
in
enter
add
pop
adc
jp
in
fdiv
xchg
popa
clc
fsubl
inc
xlat
xchg
inc
addr16
adc
mov
adc
cmp
lcall
rclb
jae
cmc
pop
and
xchg
sub
ror
or
sarb
inc
add
out
outsb
jmp
notb
or
addr16
xchg
push
add
ds
cld
pop
sbb
push
call
daa
mov
push
test
in
repnz
imul
sub
push
jns
orb
sub
ljmp
xor
gs
shrb
imull
cwtl
data16
stos
adc
mov
sahf
jne
ret
pop
sub
pop
sarb
jecxz
pushf
mov
xor
out
adc
mov
outsb
mov
aaa
lods
je
jbe
mov
or
add
mov
stos
push
jmp
pusha
in
insl
sbb
mov
lret
sbb
dec
xor
loopne
in
sbb
repz
xchg
das
std
negb
dec
divl
shlb
stos
mov
mov
loopne
pop
pop
mov
call
fldt
inc
outsl
test
xorl
mov
jecxz
iret
test
mov
lods
je
dec
jmp
mov
das
jg
testb
xor
and
rolb
lds
ret
mov
in
sub
jmp
pusha
test
adc
in
paddb
jle
iret
lea
fcmovne
jmp
xor
mov
or
mov
adc
mov
push
push
mov
call
ja
mov
xchg
jle
ret
sbb
mov
das
cli
xchg
mov
cmp
and
inc
jle
scas
dec
or
push
mov
lret
mov
mov
jle
clc
pop
movsb
clc
xor
and
scas
mov
lds
mov
scas
dec
sub
xor
adc
test
mov
rorb
lcall
dec
add
lahf
inc
ror
xorl
into
and
movb
je
stos
xor
lret
test
push
pop
sub
fistps
rcll
scas
stos
inc
lret
sbb
xchg
out
sub
cwtl
sbb
imul
fwait
jge
fidivrs
push
inc
pop
cmp
imul
and
inc
push
dec
dec
mov
insl
and
ss
xchg
sbb
rclb
xchg
adc
inc
test
jns
jne
xchg
pop
xor
sbb
out
into
sbb
dec
hlt
adc
mov
js
int
adc
adc
dec
aas
inc
jecxz
out
call
jp
sbb
pop
repz
cmp
jl
push
jb
pusha
pushf
addr16
adc
and
iret
or
mov
lahf
orb
cmp
gs
mov
and
in
adc
cmpsl
movsb
or
jecxz
inc
pop
cmp
add
jl
loopne
xchg
leave
xchg
sub
lea
xchg
aas
sbb
aas
int3
xchg
movsb
push
leave
xchg
faddl
out
sbb
loope
sti
inc
gs
xchg
sbb
xlat
xchg
gs
jmp
test
adc
sub
aam
fcoms
daa
mov
test
enter
jno
test
mov
xchg
mov
mov
or
fidivl
push
sti
push
les
mov
jb
dec
shlb
or
jecxz
xchg
mov
out
adc
sahf
rorl
pop
je
push
sub
loopne
stos
leave
cmpsl
es
cmc
jns
cmp
mov
lock
cmc
jg
imul
test
add
sub
movsl
jge
pop
jbe
pop
cwtl
popf
imul
hlt
push
inc
jno
cld
mov
test
sarl
mov
ficoml
cld
xchg
dec
loop
adc
nop
add
fs
rsqrtps
pop
mov
repz
adc
frstor
mov
jns
fldenv
aaa
and
xorb
test
mov
in
stc
inc
xor
out
dec
and
sub
mov
jl
pop
jnp
insl
pop
orl
inc
fisubs
or
mov
leave
ret
push
pushf
sbb
inc
aaa
pop
fsubs
fwait
mov
mov
add
inc
or
adc
out
cmp
or
mov
pop
gs
int3
dec
enter
test
cmp
xlat
iret
sahf
insb
xor
popa
lods
xchg
cmove
popf
or
sbb
cmc
push
stos
das
xorl
sub
movsl
inc
jl
jmp
ja
or
ret
mov
pushf
test
and
ds
adc
es
cmp
imulb
rcll
repnz
adc
or
leave
pop
sub
inc
pop
and
sbb
fwait
ja
fwait
xchg
jnp
xlat
pop
jb
cmpsl
cwtl
xor
or
pop
movlps
or
dec
inc
dec
dec
ret
scas
aas
shll
mov
pop
push
and
inc
mov
cmp
inc
fisttpll
imul
in
mov
ljmp
adc
jmp
or
fidivs
sub
push
stos
imul
test
or
lods
out
dec
mov
popf
in
push
xor
push
dec
dec
imul
adc
xchg
jb
stos
jle
pop
incb
pop
jp
cmc
fldcw
loop
movsb
push
push
add
ret
lret
repnz
and
leave
push
dec
xchg
xchg
fisubrs
adc
xchg
insb
dec
jno
jle
int3
mov
movswl
into
jnp
negb
xchg
add
addr16
sbb
pop
push
ret
out
mov
mov
pop
lds
lret
or
jle
push
out
cmp
add
xlat
sahf
push
cmpl
jno
iret
dec
and
fcmovu
int
jmp
fnstsw
dec
jle
mov
dec
xchg
fbstp
mov
xchg
testl
lds
addr16
scas
and
xchg
test
dec
idivl
jne
shrb
inc
inc
inc
in
xor
ss
push
fnstcw
mov
pop
add
rcrl
mov
scas
mov
cs
xor
stos
sahf
cli
sbb
inc
in
pushf
out
mov
in
das
inc
test
call
jbe,pn
jo
mulb
mov
adc
fnstcw
jp
push
hlt
pop
push
inc
test
inc
pop
jo
lahf
nop
pop
push
pop
divl
in
mov
cmpsb
testl
ffreep
orb
fmull
rcrb
mov
and
aas
sbb
mov
mov
inc
jmp
lret
fisttpl
inc
cli
imulb
pop
jns
ds
pop
push
xor
stos
sub
stc
jmp
mov
lea
add
cmpsb
pop
out
push
fstpl
call
push
mov
cmp
xchg
rolb
push
and
or
pop
push
add
pop
gs
adc
add
repz
in
ds
pop
and
dec
mov
es
mov
mov
xor
cmc
out
outsb
mov
pop
sahf
popf
loopne
ss
mov
mov
sahf
push
push
jge
jp
sbb
scas
sub
cwtl
cwtl
adc
cltd
pop
inc
daa
andnps
push
xchg
dec
repnz
jno
jmp
bound
insb
shlb
fstp
lock
pop
lret
aaa
jg
fistps
aad
mov
fwait
dec
and
aam
inc
fstpt
inc
cmp
cmpsb
ljmp
adc
cmc
jge
mov
scas
jecxz
mov
sahf
pop
fnstsw
jecxz
adc
or
pop
mov
sarb
stc
insb
adc
sbb
pop
mov
enter
loope
gs
xchg
and
pushf
sbb
inc
lea
sbb
mov
daa
mov
mov
rcll
cli
movsl
dec
aad
rol
outsb
mov
inc
push
xchg
mov
es
push
cmp
jge
lock
lcall
xor
add
mov
cltd
mov
or
cmpsb
lods
add
movsb
je
cmp
sarb
loope
jne
xor
fdivr
fidivrl
nop
call
std
mov
cmpsl
pop
adcl
imul
stc
cmpb
sti
lahf
stos
stc
icebp
cltd
inc
mov
imul
mov
mov
in
xchg
mov
cmp
ret
mov
bnd
add
shlb
dec
jge
stos
dec
adc
push
cmp
adc
outsb
add
or
pop
xor
dec
imul
mov
mov
pusha
xor
decl
in
cmp
pushf
cmpb
inc
push
fistpl
gs
rorb
jle
and
xchg
pop
enter
mov
xchg
pop
sbb
sub
loopne
insb
mov
pop
gs
fisttpll
cmpsl
pushl
pop
mov
mov
xchg
out
das
adc
andl
pop
rolb
daa
fsubs
xchg
push
and
and
fmul
push
sbbl
sbb
popa
mov
pushf
cmpsb
sub
addl
mov
out
mov
cmp
push
add
dec
mov
cltd
aam
imul
jne
es
sti
cmp
adcb
mov
xchg
or
pmullw
mov
add
push
mov
cmp
cld
sti
int
incl
pop
add
jae
pop
jae
xchg
fstpl
fcmovne
loop
fadds
cmp
ja
or
lret
sahf
push
cmp
jecxz
and
push
mov
and
andl
mov
mov
and
mulb
gs
mov
lret
pop
mov
mov
mov
fdiv
jns
andb
xlat
rolb
mov
cmp
call
push
je
pextrw
js
into
stos
fabs
je
sub
jae
sbb
or
ja
xchg
out
flds
outsl
mov
jg
mov
xchg
movsb
pop
xchg
fsts
lds
nop
pop
push
mov
sbb
cmp
inc
out
jg
shr
adc
lahf
out
int3
or
addr16
dec
xor
cmpsl
popa
pusha
xchg
dec
lcall
and
or
insb
fistpll
pop
rcrb
adc
std
xchg
cmp
mov
rcll
adc
xor
jle
push
imul
std
fldenv
ja
icebp
xor
inc
xchg
adc
xchg
xchg
inc
gs
insl
xchg
push
lods
lcall
inc
ret
addr16
cs
pushf
outsb
pop
lret
sub
loopne
inc
sub
out
dec
mov
adc
push
loope
insl
loopne
clc
ret
or
jae
fwait
ffree
pop
loop
inc
loop
xchg
test
pusha
jo
pushf
pop
mov
leave
fidivrl
mov
pop
cmp
repnz
inc
dec
xor
clc
orb
iret
in
add
int3
jns
lcall
lock
dec
cmp
fs
repnz
mov
jae
pop
jle
pop
inc
fsubs
scas
jp
icebp
movsbl
addr16
scas
fs
mov
icebp
neg
adc
jmp
sub
xor
es
sahf
or
addr16
flds
pop
arpl
cld
cmp
ljmp
jb
ja
adc
ljmp
rcl
das
cmp
popa
and
xor
adc
icebp
xchg
loope
shll
in
hlt
addl
xor
inc
xor
adc
icebp
xchg
loope
shll
in
hlt
addl
xor
inc
xor
adc
icebp
xchg
loope
shll
in
lds
adc
inc
inc
xor
adc
add
imul
mov
mov
pop
pop
sbb
jle
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
arpl
aaa
out
notb
push
out
ret
daa
shll
inc
and
divw
push
mov
ss
addr16
ja
inc
notb
daa
xchg
aaa
cmpsb
pop
mov
inc
out
notl
iret
jbe
push
mov
mov
xchg
xchg
mov
mov
and
or
push
aam
cmpsb
pop
movsl
outsb
hlt
jne
push
and
ss
adc
xor
sub
test
scas
test
mov
dec
fs
adc
jnp
lods
xor
mov
mov
js
jmp
repz
mov
call
minps
cs
jle
fmul
xchg
fcomi
pop
dec
inc
out
out
sbb
cmpsb
push
lahf
dec
inc
push
notb
xlat
ja
inc
ja
xchg
xchg
pop
ficomps
jmp
push
clc
mov
cmp
js
jmp
mov
mov
popf
cmpsl
mov
push
les
daa
mov
adc
aam
sbb
cwtl
out
mov
push
cmp
cmpsl
sahf
adc
mov
imul
jmp
push
out
notb
daa
xchg
aaa
cmpsb
pop
mov
inc
out
pop
lds
push
fwait
push
pop
es
movsl
andb
subl
cmp
sbb
ret
jb
push
pop
movsb
push
xchg
loopne
fsubs
inc
and
shlb
cmpsb
outsb
mov
and
xor
arpl
inc
mov
loop
in
adc
xchg
sub
cmp
pop
mov
inc
out
mull
jbe
push
cmpsl
push
mov
xchg
xchg
addr16
ja
inc
notb
daa
xchg
aaa
cmpsb
pop
mov
inc
out
mull
jbe
push
cmpsl
push
mov
xchg
xchg
addr16
pop
cmp
mov
pop
scas
test
hlt
push
and
popl
or
fildll
inc
shl
hlt
out
filds
test
add
aad
and
ret
repnz
pop
adc
and
mov
mov
lahf
fildll
jmp
std
cwtl
mov
ljmp
sub
xor
jns
in
add
inc
jb
ss
sub
jl
pop
jo
mov
push
iret
push
inc
sbb
push
fcoms
mov
cltd
mov
jecxz
out
ficoms
imul
movsb
jle
lret
inc
repz
cmp
fnstenv
repnz
nop
inc
test
rcl
inc
xchg
cmp
cli
cmp
insb
sbb
xchg
add
fadds
mov
push
mov
outsb
jae
mov
psubd
mov
dec
or
push
dec
bound
outsb
jecxz
xchg
shl
add
and
xchg
loopne
pusha
addr16
loope
je
push
clc
xchg
xchg
adc
inc
testb
sbb
leave
pusha
sbb
in
jnp
mov
daa
jle
jbe
fisubl
cmp
fimuls
aam
loope
cmp
inc
mov
cmp
aas
mov
mov
sub
lahf
rorl
push
push
inc
lret
bound
push
arpl
movsl
cld
shlb
push
xchg
jg
fisttpll
jbe
sbb
in
add
sub
adc
cmp
pop
lods
and
pop
lahf
add
jb
dec
inc
sarb
add
movsl
inc
jecxz
push
ret
xchg
jns
adc
in
fistpll
stos
lea
arpl
sub
xchg
movsl
cld
adc
outsl
mov
fisubs
clc
jno
hlt
aad
mov
rcll
insl
cwtl
add
inc
xor
hlt
aam
sub
add
loope
lock
cld
sub
aad
rcrb
movsl
mov
xchg
or
mov
stc
and
inc
iret
scas
pop
jns
leave
mov
or
xchg
inc
dec
sbb
xchg
jne
xor
inc
cli
lcall
adc
push
or
push
jle
mov
pop
notb
xor
icebp
mov
mov
adc
mov
sbb
add
cwtl
fsubr
cmp
jbe
lcall
dec
fs
sbb
xchg
push
negl
cmp
outsl
xchg
out
loope
mov
or
inc
jne
lea
inc
sbb
ss
pop
sbb
jno
pop
test
aaa
lcall
xor
sbb
xchg
jmp
add
xchg
mov
jae
cmp
lea
aas
aas
leave
dec
sarb
mov
mov
jg
mov
out
cmp
push
fisttpl
ljmp
and
dec
mov
mov
jnp
addr16
and
insl
push
and
xchg
add
and
sbb
js
dec
insb
rcll
loop
ret
les
jge
push
fldl
lds
repz
dec
mov
xchg
jge
pop
jle
jge
arpl
sub
pushf
dec
leave
inc
in
pop
mov
mov
in
pop
dec
pop
cli
int3
sub
cmp
jb
inc
push
je
xchg
mov
adc
mov
fldcw
std
push
push
aam
or
mov
cmp
ss
push
sub
int
cmp
cmpsl
lds
mov
lahf
test
inc
movsb
mov
adc
test
aad
inc
rolb
insl
sbb
test
rclb
cmp
je
jmp
and
fstpt
loopne
push
inc
rorb
inc
rcrb
sti
inc
ljmp
mov
or
test
mov
push
jno
inc
fsubl
mov
xlat
push
ljmp
pop
add
inc
cmc
dec
push
repz
les
outsl
xchg
icebp
cmp
dec
pop
push
out
shll
push
testb
sti
mov
subb
hlt
ja
push
fildll
sub
jle
mov
adc
xorb
mov
outsb
adc
push
aaa
push
jne
arpl
inc
cmp
mull
test
hlt
jns
dec
mov
mov
xchg
dec
cmp
and
mov
cwtl
out
xor
and
sahf
insb
mov
loop
in
pop
xor
pop
mov
mov
outsl
inc
mov
data16
push
xchg
imul
test
add
pushf
loop
adc
aas
data16
sbb
mov
mov
pop
ret
movsl
fistpl
shll
mov
outsb
ret
cmp
sub
inc
icebp
imul
xlat
jns
mov
mov
cltd
inc
icebp
ljmp
jo
sarl
popf
ret
mov
dec
lock
pop
in
dec
stos
fiadds
repnz
enter
sbb
lret
sahf
jg
jge
sub
sub
mov
shll
mov
add
decl
ljmp
stos
xchg
cltd
pop
mov
bnd
sub
sbb
sbb
adc
lcall
aad
imul
jecxz
cmp
lods
adc
push
and
or
dec
jle
imul
add
sub
pop
or
lea
sti
and
icebp
stc
repnz
sarl
incb
xchg
xchg
mov
inc
jae
mov
lea
inc
arpl
leave
lret
sbb
pop
scas
push
scas
push
ficompl
adc
or
in
movsl
inc
fstl
movsb
or
or
in
orb
loop
rcrl
test
aad
fdivs
push
int
mov
sub
out
nop
mov
shr
inc
rolb
sub
fildll
and
shrl
ss
xor
xchg
pusha
lret
xchg
stc
or
cmp
mov
data16
stc
std
mov
sbbb
dec
mov
fwait
or
cmp
inc
ss
or
pop
jg
outsl
inc
jle
gs
adc
loop
aad
adc
xchg
add
nop
inc
ret
imul
aaa
push
push
adc
dec
pop
out
and
shl
fcmovne
xchg
jo
xor
dec
pop
vpsadbw
arpl
sbb
lret
jp
add
icebp
repz
jl
sbb
loop
cld
scas
dec
lock
sarb
push
rcll
and
mov
stos
dec
fisttpll
mov
push
rcll
ret
es
lods
jae
sbb
pop
aas
leave
in
test
mov
adc
loope
outsl
xchg
sbbb
sub
jmp
xchg
cmp
aas
fiaddl
repz
mov
outsb
push
cltd
and
jecxz
loopne
dec
test
xor
and
mov
sbb
movsl
ret
inc
mov
mov
je
add
lret
mov
jb
enter
and
ja
add
in
mov
push
xchg
mov
je
cli
dec
push
jmp
xlat
xchg
cmp
and
subb
mov
ss
add
xchg
or
inc
xor
cmp
sub
xchg
je
fiadds
adc
jp
or
out
fwait
rorl
mov
sub
test
and
fisttpll
aad
out
jmp
mov
mov
push
jecxz
outsb
sub
mov
ja
je
idiv
test
out
mov
xchg
pop
repz
cmpsb
dec
mov
into
adc
sbb
add
xchg
mov
sti
les
outsl
mov
adc
xchg
sub
sub
cmp
mov
aad
mov
cmp
cwtl
mov
dec
jg
pop
or
orw
lret
leave
adc
mov
and
inc
push
cmp
fildll
pop
int3
jp
ljmp
push
mov
lods
mov
xor
inc
popf
xor
imul
es
repnz
mov
pop
xorb
ss
mov
movb
adcb
and
mov
add
js
loop
xchg
movsl
scas
shll
dec
dec
jmp
repnz
fstp
cltd
aas
push
icebp
lret
add
ss
jmp
fwait
out
ss
pop
ror
call
push
ficoml
bound
sbb
test
fsubrs
jmp
lds
pop
fwait
push
dec
cmp
cmpsl
pop
mov
fstpt
je
ds
pop
fmull
ror
mov
jns
xor
pop
adc
sub
stc
das
push
ret
jl
addb
scas
xor
test
insb
stos
dec
mov
in
pop
aam
icebp
pop
xchg
adc
cmp
dec
frstpm(287
aam
add
jo
lods
pop
call
push
ja
jae
dec
inc
aaa
xchg
lahf
loopne
pop
mov
xchg
inc
out
xchg
jl
mov
in
daa
int3
pop
push
jno
or
jnp
mov
sahf
out
notb
push
mov
jecxz
not
ror
stos
and
add
push
jg
test
test
cmpb
pop
cmpsl
fisttpll
std
mov
lea
ljmp
pop
dec
mov
mov
cmpsb
cmpsl
jo
movsl
and
mov
dec
call
pop
dec
cwtl
xlat
in
inc
pop
sub
orb
loop
jecxz
mov
test
inc
mov
sbb
xchg
clc
lret
inc
js
enter
lods
insb
aaa
in
inc
inc
xchg
ds
and
ds
mov
jecxz
ds
outsl
loopne
mov
xchg
sub
inc
inc
add
pop
adc
rorb
xor
add
push
mov
incb
mov
push
into
lods
lock
jl
mov
adc
bound
inc
xorl
nop
out
mov
mov
mov
sbb
mov
pop
mov
cmp
and
les
pop
arpl
inc
out
cmpsl
pop
pop
mov
stos
cmp
daa
aad
fwait
pop
sbb
arpl
std
lret
jae
fsubrl
sbb
aaa
push
in
cmpsb
loope
clc
and
int3
fisubl
add
ret
or
xchg
pusha
outsl
mov
sbb
cmp
and
adc
addr16
add
adc
mov
scas
or
xchg
pop
sti
std
test
xchg
je
jno
mov
in
add
sub
xchg
pop
sbb
cld
movsl
sahf
pop
inc
lock
inc
lret
dec
push
aas
sar
add
sbb
out
cmpsl
and
stos
xchg
loope
mov
adc
jbe
jl
or
adc
add
cltd
and
jo
xlat
std
xor
xorl
out
icebp
ret
loope
mov
testl
xchg
lock
adc
jns
add
cld
rcrl
and
stos
sbb
stos
mov
hlt
ret
xchg
roll
add
push
dec
add
icebp
and
push
ret
je
jae
push
xlat
lcall
sub
lods
mov
xlat
out
iret
jge
test
cmp
mov
fbld
cmp
imul
mov
jb
addl
loope
xor
dec
jo
or
fdivrl
fmuls
ljmp
adc
scas
jp
cmp
lahf
aad
out
cld
inc
mov
sbb
fdivr
shll
mov
push
sbb
pop
mov
push
mov
test
outsl
jno
pop
not
sbbb
lods
sarb
nop
xor
test
cmpsl
arpl
int3
and
mov
dec
push
sbb
inc
lss
add
mov
cld
pop
inc
rol
in
mov
test
enter
mov
xor
xchg
xor
aam
sub
shll
push
adc
sub
outsl
add
and
pop
aad
adc
inc
inc
popf
shlb
hlt
aad
or
push
iret
daa
test
sarl
mov
jmp
jp
pop
jle
xchg
dec
push
pop
push
xchg
adc
mov
adc
shll
jo
jo
shrb
push
mov
adcl
mov
mov
jmp
sbb
mov
aas
mov
mov
or
pop
jno
bound
sbb
btr
and
mov
xchg
push
or
push
jae
cs
mov
fxch
mov
fadd
mov
ficoms
repz
jge
pop
mov
sub
pop
dec
outsl
ss
movsb
in
dec
in
arpl
cmp
jl
push
arpl
jns
aad
insl
push
add
cmpsl
inc
dec
fsubr
xor
je
or
jmp
add
inc
push
xchg
push
jo
aam
xchg
mov
inc
xor
cmp
icebp
aaa
adc
pop
jbe
in
adc
jecxz
add
mov
add
mov
or
push
add
or
mov
dec
cmpsl
push
mov
pop
loope
and
outsl
dec
imul
push
push
cmp
lea
sbb
mov
or
xor
jle
stc
mov
pop
inc
data16
lcall
repnz
fsubrl
xor
push
imul
pop
mov
and
popf
xlat
loope
into
add
outsl
sbb
imull
cmp
mov
mov
or
pusha
jmp
pop
es
push
inc
loopne
mov
sub
fstpt
pop
imul
out
adc
pop
es
ljmp
mov
push
lcall
inc
jp
and
jmp
outsb
cli
cmpsb
inc
xchg
jb,pn
cli
pop
fsubl
mov
mov
adc
xchg
pop
or
das
repz
pop
ret
divl
dec
adc
mov
xor
movb
clc
xchg
test
scas
xchg
xor
aad
jne
mov
xor
pop
and
sbb
adc
mov
les
movsl
push
mov
lods
mov
ret
sub
outsb
and
call
mov
cli
push
movsl
test
pop
jbe
add
add
push
jge
xor
das
xchg
mov
cmp
mov
das
loopne
sub
les
xchg
rdmsr
and
fwait
mov
xchg
fstps
pop
sahf
cmp
mov
push
pmulhuw
jmp
jb
jns
shlb
adc
test
jns
gs
test
mov
and
jns
adc
sahf
adc
mov
lahf
aam
mov
cmp
clc
stc
int
xor
clc
fs
mov
fstps
sub
pusha
and
cmp
add
dec
rolb
icebp
cs
jns
lea
jno
inc
ss
idivb
adc
pushf
jp
push
outsl
dec
add
add
inc
or
xlat
ja
loopne
adc
inc
lock
data16
hlt
dec
push
xchg
mov
arpl
push
jae
mov
adc
leave
shr
lods
rcrl
dec
jo
clc
bound
aad
arpl
sti
mov
add
cmp
or
shr
xchg
add
cmp
and
cmp
jnp
pop
aad
adc
out
icebp
xchg
lahf
and
and
pop
jo
and
sti
adc
lds
jae
insl
adc
xor
aaa
inc
and
in
or
testb
pop
das
xor
cmp
jno
jnp
mov
and
dec
out
pop
out
pop
cmp
sarb
shl
or
mov
adc
neg
repnz
into
inc
mov
insl
cmp
inc
enter
repnz
pop
dec
cmpsb
daa
mov
inc
add
sbb
pop
int
jmp
dec
movsb
add
or
lods
xchg
std
data16
cld
fwait
jmp
push
or
push
mov
add
jmp
arpl
inc
add
in
mov
shr
push
sbb
ds
sub
xor
or
aaa
or
lds
popf
in
lret
or
aad
leave
ret
es
adc
push
or
dec
enter
ret
sahf
cmp
xchg
mov
fwait
mulb
enter
push
push
or
cmpsb
xor
cmpsb
das
fcompl
sahf
add
inc
movsl
shrl
imul
mov
vandps
idivb
push
aas
xchg
cmpsb
int
add
jg
and
ficoms
sub
cmp
mov
clc
push
add
jle
mov
push
pop
fistps
loopne
insl
inc
cmp
jg
iret
mov
mov
jge
add
aas
pop
pop
add
sub
cs
sub
jno
fnsave
fwait
mov
cmpsb
xchg
fstps
add
into
sbb
jg
mov
sbbb
mov
in
aad
stc
cmpsl
xchg
in
jb
lods
lods
push
add
enter
push
add
jne
sbb
iret
sarb
push
popf
mov
adc
aaa
inc
mov
mov
inc
aad
fld
fisttps
push
inc
adc
xchg
inc
dec
push
mov
mov
repz
shl
jo
in
scas
and
adc
fsubs
pop
hlt
cmp
unpckhps
jb
sbb
sar
lds
dec
push
jne
jle
jo
aaa
sub
sub
mov
xchg
xor
icebp
js
add
xor
cmp
or
fisubrl
cli
mov
jno
mov
cmpb
add
rorb
pusha
cmp
xor
test
repz
push
fs
cltd
in
addl
les
sbb
mov
pop
mov
imul
push
pop
cmp
mov
cmp
nop
psadbw
dec
cmp
xor
xor
lcall
fildll
lds
fs
fimuls
jnp
das
jbe
mov
test
sbb
mov
or
sub
loopne
dec
andb
push
fadds
jnp
shlb
lods
in
push
add
fdivs
or
iret
loopne
shl
test
mov
jns
mov
hlt
loop
imul
fisubl
lds
cs
or
cmp
and
sub
rclb
inc
xchg
jno
aad
adc
xchg
mov
sub
jge
aaa
add
stos
mov
push
lret
fwait
sbbl
xchg
xor
mov
ss
inc
test
push
stc
mov
icebp
mov
lahf
mov
rolb
cmpb
das
dec
cld
les
out
cmp
das
jo
pop
call
int
mov
sbb
jg
faddp
push
cmp
dec
inc
enter
aam
fcom
leave
sub
insl
mov
sti
fidivl
pop
clc
ret
sub
inc
mov
pop
mov
push
xlat
xchg
fistpl
dec
xor
iret
adc
out
in
lods
loop
xchg
nop
into
xchg
or
pop
mov
cmpsl
loopne
bound
fisubl
mov
fsubrl
jae
mov
dec
add
repz
pop
or
shl
xor
xchg
fldcw
push
sbb
xchg
push
push
pop
fistl
aam
push
dec
pop
cmp
dec
in
mov
dec
push
cmp
cmp
mov
jle
sub
pop
sub
jb
imul
cltd
pop
dec
and
sub
testb
inc
sarb
orl
jle
leave
pop
test
mov
lods
icebp
fucomp
push
andb
aaa
mov
mov
push
and
cmp
in
jns
leave
pop
cmp
nop
lret
popa
push
mov
mov
ret
clc
mov
iret
dec
adc
push
stos
repz
xchg
js
mov
push
xchg
loop
xchg
xchg
enter
push
cmp
jae
push
mov
sub
loop
paddb
jb
xchg
pop
scas
xor
and
ljmp
dec
gs
add
mov
into
push
pop
sub
push
lea
sbb
not
insl
add
or
pop
lock
lcall
cwtl
pop
aad
xlat
mov
addr16
cmc
call
jmp
leave
push
nop
in
sub
cwtl
sub
out
outsl
push
rcll
loop
pop
push
jmp
jecxz
fwait
gs
cmp
ficompl
xor
fimuls
pushf
dec
pop
insb
dec
dec
mov
popf
push
jb
aaa
dec
ret
xor
std
mov
sti
mov
dec
mov
outsb
dec
push
or
add
imul
sbb
gs
lods
sub
add
sbb
fs
jb
jmp
cmpsb
mov
push
daa
jge
cmp
dec
into
inc
rcl
push
shll
clc
sub
mov
scas
mov
lret
dec
mov
pop
cmpb
push
push
mov
push
inc
stc
clc
test
xor
cmp
inc
movsb
push
mov
ja
jl
dec
jbe
xchg
adc
fisubrl
push
sbb
daa
jp
jge
dec
push
fnstsw
add
add
hlt
push
inc
iret
int
pop
cmc
push
adc
fucomip
xchg
leave
pop
out
fisubrl
sbb
adc
push
cld
jg
jmp
flds
sub
mov
cmp
fildll
mov
sbb
adc
outsb
mov
addr16
and
into
stos
dec
insl
lea
mov
orl
insl
fcmovb
call
and
ret
shll
inc
notb
daa
xchg
aaa
cmpsb
pop
mov
inc
out
mull
jbe
push
cmpsl
push
mov
xchg
xchg
addr16
ja
inc
notb
daa
xchg
aaa
cmpsb
pop
mov
inc
out
mull
jbe
push
cmpsl
push
mov
xchg
xchg
arpl
jns
pop
notb
daa
xchg
pop
cmpsb
add
repz
jbe
push
mov
ss
adc
out
notb
xchg
xchg
aaa
cmpsb
xchg
pop
int3
jbe
jno
sahf
iret
fcos
leave
out
push
shll
push
cmp
cld
bswap
push
mov
je
push
mov
add
sahf
sti
and
xor
rorl
cmp
sub
pop
orl
lret
dec
mov
popa
stos
jno
jae
adc
and
xor
fmuls
jmp
push
mov
out
fstpl
lret
dec
xchg
mov
pop
pop
lea
mov
rorb
push
jg
push
sbb
and
stc
mov
pop
rcrl
mov
bound
out
dec
pop
mov
inc
mov
pop
dec
jp
leavew
dec
pop
sbb
rorl
cmp
fildl
push
inc
or
and
inc
test
and
inc
push
jle
pop
xorl
stos
sahf
push
cld
push
cmp
adc
sahf
inc
imulb
les
jmp
movsb
inc
enter
and
pop
mov
test
sub
lret
add
or
or
loope
sub
mov
sub
icebp
mov
or
cmp
inc
icebp
pop
orl
test
inc
sbb
js
push
sti
cmp
mov
xor
int
aam
cs
gs
movsl
adc
test
mov
xor
sbb
fiadds
jae
jno
adc
sarl
dec
test
push
mov
xchg
jnp
imul
popa
stos
jno
add
adc
and
xor
rorl
cmp
sub
pop
orl
fwait
inc
mov
popa
stos
jno
add
adc
and
xor
ror
xchg
data16
pop
or
sbb
scas
fcomp
cmp
dec
lock
rclb
movsb
sbb
jg
pop
mov
xchg
aas
sub
mov
cltd
mov
inc
xchg
test
push
jnp
jle,pt
xchg
cmp
xor
les
lods
add
add
jl
insb
push
sbb
mov
stc
xor
push
imul
adc
xor
jmp
movsl
or
add
xor
fists
sbb
mov
lods
sbb
inc
and
cmp
dec
and
pop
adc
sbb
push
es
dec
push
out
rcrb
loop
mov
push
mov
arpl
fldenv
aas
adc
xchg
sti
jge
and
cmc
aas
rcrb
aas
jnp
add
cmpsb
arpl
pop
inc
inc
sbb
add
sub
mov
das
xchg
pop
inc
adc
ret
and
cmp
sti
sbb
or
pop
stc
pop
xor
sbb
sbb
mov
mov
std
loopne
xchg
das
jp
jge
inc
fcmovbe
lds
jmp
mov
pop
js
xchg
inc
mov
aam
pop
push
adc
push
jnp
push
scas
std
push
cmpsl
jle
jno
dec
cli
iret
mov
out
insb
lret
xlat
inc
push
cmp
or
push
test
lock
dec
loope
or
cmp
and
test
cmpsb
adc
loopne
mov
test
cld
addb
leave
push
aas
jle
outsl
dec
jbe
fidivs
add
mov
xchg
push
jle
mov
imul
push
cmp
mov
pusha
cltd
out
js
add
pop
xlat
mov
outsb
fsubl
inc
sbb
mov
cmp
pop
ret
dec
xor
dec
push
sub
ss
sub
push
inc
dec
notb
ja
xchg
mov
mov
pop
mov
xor
sub
test
mov
ret
in
mov
and
jge
cmp
push
int
mov
dec
dec
rolb
in
pop
lret
cmp
addl
mov
andl
push
inc
add
mov
cld
xlat
xchg
xchg
inc
dec
adc
mov
xchg
mov
cmpsb
or
fiadds
add
popf
push
orb
fwait
nop
push
adc
outsb
cld
stc
push
mov
add
mov
test
push
inc
cmc
xchg
mov
movsb
in
jl
ret
sahf
test
sbb
leave
scas
pop
fnstsw
sbb
sub
repnz
mov
imul
ret
sbb
xchg
out
mov
xor
repz
stc
nop
pop
push
lcall
jp
sbb
xchg
cmpsl
or
call
jnp
inc
inc
scas
rcr
sub
or
push
out
xchg
pop
mov
pushf
jnp
xor
loop
int
mov
sub
pop
adc
ss
es
inc
push
imul
leave
xlat
and
mov
fldln2
xor
gs
pop
cmpsb
movsb
push
movsb
out
push
dec
push
cmp
fs
sarl
mov
mov
es
cli
cwtl
arpl
or
and
data16
jecxz
arpl
rorb
inc
inc
lods
mov
cmp
mov
fnsave
jle
lds
popf
and
xchg
cmp
cmp
aam
or
or
repnz
or
scas
out
movsb
push
pushf
in
fidivrl
xchg
sub
mov
gs
push
gs
pusha
dec
mov
dec
sbb
adc
adc
in
lcall
mov
pop
push
vmwrite
add
pop
pushf
mov
push
cli
add
pusha
aaa
shlb
push
sbb
int3
xorl
mov
jb
fadds
push
sub
addb
sub
push
stos
push
stos
cmp
jge
xor
jbe
push
nop
inc
sub
lock
and
addb
pushf
clc
push
sti
dec
mov
or
cmp
xchg
decl
cmp
mov
mov
sahf
insb
stos
cwtl
enter
xorb
test
iret
cltd
aad
rolb
sub
test
xchg
pop
ja
adc
sahf
bound
shlb
jecxz
add
mov
ret
inc
or
inc
popf
popf
jae
jno
xlat
dec
pop
sub
int
push
mov
scas
ljmp
ds
popa
fisubrl
xchg
adc
cmpsb
and
dec
jmp
out
xchg
rorl
mull
xor
roll
cwtl
xchg
hlt
inc
mov
pop
fbstp
aad
push
popa
fbstp
ret
dec
mov
fildl
insl
data16
outsl
insb
dec
xchg
pop
aas
out
cltd
pop
add
sub
jmp
inc
lret
mov
lods
inc
mov
lret
inc
mov
or
out
repz
cmp
inc
aaa
orb
sbb
mulb
mov
push
sbb
leave
or
or
sarb
jl
cmpsl
lds
iret
dec
mov
fisubs
mov
movsb
enter
addr16
jmp
shll
ficompl
xchg
test
loop
in
out
mov
imul
ss
add
lock
mov
test
push
cmp
lret
outsl
popa
ret
int
mov
mov
push
add
add
icebp
fcoml
subb
leave
adc
inc
cmp
xchg
movsl
sub
mov
push
cmp
or
outsl
icebp
mov
je
jns
mov
mov
scas
push
fwait
stos
out
shrl
shlb
adc
or
mov
sarl
jne
pusha
push
jae
jae
cmpsl
ds
cmpsb
dec
sbb
stc
mov
dec
bound
cwtl
push
scas
call
lret
sbb
sub
or
js
mov
scas
cltd
dec
sbb
jl
ljmp
sub
push
xchg
imul
xchg
stc
xor
jb
pop
imul
fnstcw
lret
pushf
dec
push
sbb
mull
movsb
inc
outsb
adc
inc
call
lcall
imul
leave
pop
cmp
sub
push
sbb
insl
adc
pop
and
lock
in
mov
inc
mov
mov
lcall
int3
add
data16
xchg
arpl
xchg
movq
add
cmpsb
or
cmp
sbbl
std
push
add
imul
std
int
cmp
adcl
push
push
hlt
stos
enter
stc
mov
jns
or
push
cmp
mov
ljmp
or
jbe
pop
ss
fcoms
cwtl
das
cmp
js
dec
out
sbb
lret
scas
push
shrl
lcall
jecxz
or
jle
rorb
leave
fists
fcoms
sbb
xor
popf
jp
rol
aam
cli
rol
mov
popa
mov
loopne
lock
outsl
jns
jl
shrb
sahf
jno
icebp
xchg
into
ds
mov
outsb
dec
inc
xchg
das
js
sub
insb
sbb
sarl
out
mov
aad
scas
add
out
pop
xlat
outsl
enter
lahf
aas
into
mov
sbb
pop
dec
in
adc
dec
jl
les
gs
std
sub
pop
fcmovnu
enter
je
in
pop
daa
lods
aam
cmp
aaa
mov
mov
or
leave
test
or
mov
and
dec
mov
ja
xor
sbb
fldl
hlt
imul
mov
iret
inc
mov
mov
insl
push
xorl
inc
or
out
fcmovnbe
iret
loop
inc
aad
inc
mov
mov
xchg
sbb
xchg
mov
or
popa
pop
adcl
add
and
shlb
xchg
jmp
loop
inc
inc
dec
sub
jg
mov
cmpsb
inc
movl
ds
or
mov
clc
mov
cmp
aad
loop,pn
jmp
ret
sbb
mov
inc
and
and
hlt
pop
cmp
pop
ja
adc
dec
ficoms
sbb
mov
jne
fcomi
rolb
iret
faddl
dec
fisubrs
hlt
xlat
pop
pop
xchg
ja
mov
lret
fisubl
fxch
push
fmuls
mov
xor
sbb
icebp
les
test
sbb
mov
lea
or
icebp
jae
pusha
xor
lahf
in
ljmp
stc
std
fcmove
or
jecxz
ret
pop
in
das
jge
sbb
movsl
and
sub
js
insb
lahf
push
shrb
mov
movsb
pop
inc
mov
fcmove
or
iret
or
or
pop
ss
pop
popf
cmp
data16
in
test
jmp
add
nop
lahf
aas
ret
pop
rcll
mov
or
sbb
pop
dec
and
mov
iret
cmp
jno
cmp
sub
mov
mov
pop
adc
jmp
nop
and
mov
adc
xor
rclb
xchg
xor
xor
stc
test
scas
arpl
cltd
inc
mov
pop
pop
pop
pop
in
pop
loope
or
xchg
pop
sub
mov
pop
popa
frstor
push
notb
inc
pop
jecxz
incl
shll
mov
sub
push
push
lahf
jg
mov
push
ja
idivl
push
pop
mov
stos
repnz
aaa
mov
stos
rcrb
add
jns
sub
mov
pop
inc
fistl
jnp
scas
xchg
inc
mov
mov
repnz
out
outsl
xorl
sub
sbb
popf
pop
push
mov
inc
enter
adc
negb
sub
loop
jnp
loopne
mov
cmc
div
xor
mov
repz
pop
jecxz
push
in
xchg
fldl
fbstp
in
add
fidivrs
adc
jae
pop
mov
in
or
shlb
das
and
xchg
sbb
cwtl
xor
mov
test
ja
xor
add
lahf
aam
xlat
and
cld
fdivp
inc
dec
sub
pop
and
ret
inc
mov
sbb
xchg
dec
scas
push
data16
sahf
mov
adcb
out
mov
mov
xor
mov
sub
inc
push
inc
inc
faddl
dec
sub
repnz
fxch
in
jnp
fs
lea
or
mov
ljmp
out
push
mov
xchg
jns
push
imul
mov
fcmovnbe
add
stos
cmp
sbb
jp
mov
lds
and
fsubrs
pop
xchg
inc
andl
push
int3
xchg
aaa
sbb
lods
pop
pop
jno
addb
test
clc
outsb
or
push
or
imul
fcompl
movsl
into
outsl
gs
xchg
cmpsl
or
pop
nop
xor
pushl
xor
xor
pop
lcall
mov
push
insl
sbb
jge
inc
xchg
cmp
add
in
adcl
adc
or
je
int
mov
sbb
xlat
mov
cwtl
mull
ret
fcom
mov
sahf
sbb
sbb
sar
jne
push
sbb
sbb
mov
loop
pop
or
test
push
out
cs
lock
lea
pop
test
and
adc
pop
xchg
pop
pop
in
call
cmp
mov
stc
inc
aas
mov
stos
mov
lret
inc
dec
and
xchg
and
jg
dec
les
push
dec
adc
mov
scas
xor
sbb
lcall
lods
push
dec
cmc
es
hlt
imul
fldenv
xor
jp
es
jne
adc
add
dec
js
xchg
xchg
push
movsl
sbb
clc
jbe
pop
jbe
bound
out
cwtl
add
push
cld
pop
mov
pop
add
jg
xchg
inc
pop
sbbl
in
jb
imul
shrl
mov
sti
inc
push
pop
pop
sti
ljmp
dec
jmp
jp
imul
mov
out
bound
mov
add
xchg
push
sbb
popf
mov
xchg
inc
pop
and
lods
leave
rol
sbb
out
into
inc
and
cli
xchg
sub
ffreep
ror
sbb
negl
pop
mov
pop
loopne
out
es
and
or
push
mov
mov
pop
shl
push
cmpsl
mov
xchg
push
or
xchg
scas
pop
lcall
stc
mov
pop
fs
loopne
xor
fmul
jo
cs
xchg
cmp
xor
lahf
fbld
ret
lea
lret
int
xchg
stc
js
xchg
adc
inc
clc
gs
sub
loopne
insb
mov
in
xchg
data16
test
enter
pushf
sahf
pop
mov
fistpll
cmp
test
cmpsl
xor
xor
bound
mov
pop
jg
sahf
movsb
test
jno
cmp
sbb
mov
adc
imul
or
daa
fisubrs
stc
adc
shll
push
add
dec
outsl
jmp
mov
incb
je
push
dec
mov
mov
dec
xor
scas
in
dec
xchg
ret
enter
sahf
mov
adc
sub
pushl
mov
fucomp
jmp
ljmp
cmp
mov
clc
xlat
sbb
push
pop
push
pop
subb
loope
test
insl
xor
pop
loopne
sbb
in
stos
and
add
push
push
popf
aas
push
add
push
mov
push
lods
inc
rorl
mov
arpl
enter
in
sbb
xor
pinsrw
mov
or
pop
bound
cmc
push
lret
and
jns
fwait
clc
xchg
sahf
ret
jae
repnz
int3
das
ja
jno
or
cmp
sti
pop
push
imul
daa
pop
xchg
sti
stos
movsl
repz
mov
and
dec
testl
negb
sub
out
or
push
inc
mov
sbbl
mov
mov
sub
jge
repz
sbb
aam
mov
loope
int
jae
mov
insl
je
pop
or
add
dec
mov
pop
pop
in
out
jne
les
dec
xchg
jmp
adc
leave
adc
sbbb
push
xor
inc
inc
popw
loop
cs
mov
fwait
mov
pop
shlb
int3
adc
add
sbb
adc
lea
or
shl
insl
pop
xchg
xchg
loopne
dec
dec
das
nop
sub
jle
test
add
jle
mov
jle
or
loop
rolb
pop
mov
cmpsb
mov
pop
inc
or
mov
shll
fs
lds
add
fsubp
lret
sub
test
stos
mov
sbb
adc
mov
cs
mov
pop
mov
fldenv
push
push
adc
sbb
jae
or
jnp
push
gs
or
jnp
inc
add
out
aad
xchg
push
pop
ds
add
sbb
inc
fisttps
popf
xchg
xor
popa
jecxz
aam
fstpl
jbe
leave
out
fidivrl
add
xchg
insb
sub
ficomps
icebp
leave
lret
js
dec
dec
sbb
adc
sub
xor
les
decb
xchg
adc
lea
mov
mov
cmp
insl
cmp
add
imul
ljmp
repz
insb
jp
ss
or
daa
jp
ret
mov
dec
insb
rclb
and
jnp
popf
xchg
and
out
les
push
sti
sbb
pop
ljmp
fidivs
fisttpll
mov
lret
aas
jge
imul
mov
clc
fists
lods
mov
push
xchg
addb
stc
xor
push
popl
shll
ret
in
ret
adc
fisttpll
jmp
out
push
mov
mov
sahf
sbb
fs
fmuls
pop
pop
dec
sbb
xchg
push
shlb
xor
adcb
inc
mov
cmp
cwtl
add
mov
xchg
fildll
int3
cmpl
jmp
or
sub
mov
fs
push
pop
sti
enter
dec
es
mov
popa
dec
sub
orl
jge
pop
fsubrs
das
movsb
jns
cmp
mov
lea
gs
xchg
adc
mov
pop
cmp
outsb
xlat
loop
mov
pop
mov
aad
call
xor
movsl
insb
fxch
xor
or
call
repz
mov
mov
jmp
mov
pop
pushf
xor
sub
push
stos
add
sub
sbb
xor
pop
dec
cld
jecxz
push
or
rclb
pop
cld
xor
xchg
inc
jns
mov
jbe
cld
fucom
mov
cmp
sbb
xorl
sbb
adc
inc
cmp
aad
call
inc
int
lcall
or
push
jns
sub
and
pop
mov
cmp
pop
enter
dec
fs
jns
lods
ret
sti
pop
sbb
jmp
aad
sbb
stos
jl
sbb
sbb
xchg
lods
cmp
pop
inc
inc
dec
scas
and
fsqrt
adc
out
xchg
push
enter
or
add
dec
add
pop
mov
sub
mov
pop
xchg
sbb
mov
push
std
ja
xchg
fwait
or
inc
int3
and
dec
shrl
sbb
cld
jb
cmp
push
xchg
fs
push
pop
lcall
xchg
pushf
out
and
xchg
sti
dec
push
pop
and
mov
push
ficoms
fildll
xorb
std
pop
insl
insl
ljmp
inc
push
add
bound
and
enter
pop
mov
push
dec
subl
inc
push
sets
imul
add
loop
xor
jmp
dec
inc
imul
dec
xchg
out
xor
mov
aam
cmp
cmp
sbb
dec
push
mov
imul
lret
inc
add
lods
sbb
or
sbb
push
cmc
iret
inc
sub
daa
lret
or
aas
enter
bswap
ficoms
ret
push
dec
add
mov
mov
sub
dec
adc
pop
outsb
sarb
add
les
js,pn
fnstsw
insb
adc
jg
aaa
jmp
dec
aad
insl
in
jecxz
adc
and
fcompl
adc
ffreep
push
jb
lret
daa
inc
xchg
dec
sbb
push
in
xlat
into
or
jns
push
xor
xlat
inc
pop
push
cmpb
inc
sub
and
daa
and
and
mov
dec
pop
std
enter
sub
ret
in
cmp
fmull
jle
cltd
cmp
xchg
sbb
dec
pop
xor
in
pop
jp
xor
push
psubusw
lods
je
xor
sub
test
cmpl
lcall
test
in
fiadds
and
lds
les
xchg
lea
dec
inc
add
and
aad
mov
mov
jnp
inc
pop
xor
xor
xor
je
cmp
inc
cmp
inc
clc
add
into
push
push
das
pushl
inc
out
and
jns
inc
xchg
popf
loop
outsb
xchg
push
imulb
sahf
mov
sbb
or
arpl
add
pushf
daa
dec
sbb
push
adc
cmp
hlt
pop
mov
in
cltd
and
mov
xor
ss
cmpsl
cmpsb
and
jbe
jae
std
dec
push
jecxz
xchg
xor
std
dec
mov
sub
mov
mov
and
movsl
repnz
les
into
cmp
push
or
hlt
add
pop
pop
fnstcw
pusha
iret
inc
outsb
das
js
mov
push
pop
mov
add
jns
xchg
xchg
mov
sbb
fdivrs
int3
ficompl
popa
pop
mov
pushf
xor
seto
jge
cld
pop
add
leave
inc
xchg
mull
add
push
test
mov
fucom
int
icebp
and
inc
adc
cmp
in
cld
hlt
fisubl
jnp
outsl
adc
push
push
sahf
sub
popa
jmp
sub
out
sbb
call
xor
cld
je
getsec
cmpb
push
jae
mov
sbb
sub
fstpl
test
fsubrl
mov
push
inc
xchg
dec
pop
jne
cmp
or
xchg
icebp
inc
adc
int3
imul
mov
jg
adc
mov
hlt
mov
cmc
mov
fdivp
sahf
jo
pusha
lds
out
sbb
insb
mov
jb
cmp
and
inc
imul
das
lret
jge,pt
das
insl
jmp
inc
mov
imul
sbb
mov
scas
test
sub
out
or
clc
or
pop
int3
pop
sbb
decb
shll
orl
fwait
inc
mov
popa
stos
jno
add
adc
and
xor
rorl
cmp
sub
pop
orl
fwait
inc
mov
popa
stos
jno
add
adc
and
xor
rorl
sub
sub
pop
orl
lahf
inc
mov
popa
scas
jne
add
adc
and
daa
aad
in
icebp
pop
sbbl
fwait
inc
je
adc
push
lods
mov
add
adc
sbb
mov
outsl
enter
jl
popf
or
add
add
or
add
push
add
sti
add
rolb
add
add
add
add
push
add
add
addl
mov
add
sti
add
cmp
cmpsb
add
add
add
add
add
add
mov
popa
add
add
add
add
add
add
mov
add
add
inc
add
add
add
stos
add
add
add
or
or
movsl
add
sub
fadds
popf
add
add
in
add
add
add
add
add
add
in
push
add
add
add
add
and
xchg
add
add
add
add
add
add
insb
add
cmp
push
add
add
add
add
add
or
dec
add
outsb
add
add
add
add
add
add
add
add
or
cmp
pusha
add
add
pop
add
add
add
add
add
add
add
add
movsl
add
add
add
pop
push
add
push
add
pop
add
add
add
add
lahf
add
add
add
cmp
adc
add
add
ljmp
add
add
add
add
add
add
add
add
add
dec
add
add
lret
add
add
add
add
add
add
add
add
mov
push
adc
enter
outsb
add
add
add
and
ja
cmp
mov
add
add
add
add
add
add
add
add
jbe
inc
add
add
add
add
jbe
imul
xlat
add
add
add
add
add
add
add
add
jl
outsb
add
add
add
add
add
add
js
out
add
add
add
and
or
push
add
xor
add
add
add
add
add
add
enter
or
jns
jbe
iret
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
or
mov
enter
data16
add
cli
add
add
add
add
or
xchg
add
add
add
add
add
or
inc
add
add
cs
add
add
push
add
lea
sub
enter
jne
jnp
addl
add
add
add
add
add
add
add
add
icebp
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
pop
jl
cltd
add
add
add
add
add
add
add
add
add
add
adc
add
out
mov
add
add
add
add
add
add
add
mov
imul
pop
inc
jno
xchg
sbb
jecxz
cmp
ss
pop
xchg
repnz
sarl
into
movsb
fisttpl
xchg
mov
jg
faddl
aas
sub
out
mov
enter
adc
out
daa
pop
push
adc
sub
cmp
loope
or
fs
xchg
mul
pusha
cmc
shrb
push
push
icebp
repz
jo
mov
insb
clc
or
icebp
mov
icebp
mov
or
mov
adc
loopne
in
adcb
sbb
das
cmpsb
lcall
ret
sti
insl
pop
mov
xor
mov
loopne
lock
add
or
inc
xor
repnz
mov
adc
sbbb
cltd
mov
aam
adc
jmp
cmpsl
sub
ffree
cld
adc
sahf
notb
shrb
sbb
fdivrl
scas
nop
dec
outsl
inc
xchg
adc
push
repnz
xchg
jge
enter
mov
std
lds
cmp
jg
call
push
lret
arpl
mov
jl
jp
pushl
pop
inc
lcall
mull
xor
push
push
cld
mov
fmull
and
sti
je
mov
xchg
jl
lds
cld
jmp
adc
js
outsb
stos
mov
gs
in
mov
sub
aad
ss
or
and
adc
enter
daa
stos
push
jecxz
sbb
testl
lcall
in
jnp
xchg
lea
test
bound
mov
scas
dec
xchg
sub
dec
xorb
int
cmc
pop
scas
mov
jae
sbb
push
mov
jmp
out
gs
pop
push
add
andl
mov
in
rclb
mov
push
into
fwait
sbb
cs
pop
sub
sbb
mov
nop
cmp
push
das
cmp
into
insl
insl
mov
int3
jne
push
sbb
dec
xor
je
xchg
sbb
repnz
adc
psadbw
mov
jbe
rorl
adc
divl
int3
ret
sub
adc
xchg
jl
into
jae
push
dec
out
adc
sbb
inc
push
pop
mov
mov
loopne
jnp
dec
mov
in
daa
in
push
push
jb
ret
push
pusha
pop
dec
or
rorb
loop
mov
test
and
clc
in
sahf
loop
mov
mov
fstps
xchg
enter
mov
lea
and
lret
insl
mov
and
mov
test
vpsadbw
mov
das
stos
repz
pop
repnz
push
cltd
xchg
rolb
test
xchg
dec
loop
int3
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
