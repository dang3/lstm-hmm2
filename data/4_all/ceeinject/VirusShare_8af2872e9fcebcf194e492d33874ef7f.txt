call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
jle
dec
lret
pop
decl
fdivs
stos
imul
int3
dec
pop
scas
sub
jnp
or
sti
jle
pop
fldt
stos
ds
in
jnp
dec
sbb
scas
sub
sbb
addr16
push
lret
inc
stos
daa
mov
out
push
cmc
daa
mov
jns
pop
std
outsb
negl
push
jmp
popl
scas
xor
es
ret
mov
js
ja
cs
dec
xor
sub
jecxz
adcb
dec
fimull
jmp
xchg
xchg
daa
add
xor
pop
adc
jmp
out
jle
pop
cmp
mov
cld
aas
xor
push
sbb
stos
add
push
sub
or
pop
sbb
lret
or
push
lret
ficompl
outsb
into
mov
movsb
sub
imul
ja
mov
pop
pop
sbb
incb
push
int
add
mov
push
add
dec
mov
add
lret
xchg
pusha
mov
out
inc
xor
push
dec
fistps
aam
iret
outsb
push
sahf
sbb
lret
dec
fstpt
stos
and
push
mov
fwait
imull
jnp
dec
pop
mov
cmpsb
cmp
xchg
sub
lea
popf
dec
les
or
jae
lcall
xor
jmp
sti
jle
stos
jle
sub
pop
mov
push
xchg
in
fwait
in
cs
pop
mov
int
jle
jne
mov
pop
scas
push
ds
out
imul
into
dec
ficomps
sub
sbb
jle
dec
lret
pop
fldt
stos
ds
out
imul
into
dec
ficomps
sub
sbb
mov
or
outsb
adc
shlb
xor
jmp
imul
adc
incb
push
daa
fstl
cmpsl
fcoml
adc
sarb
inc
xchg
mov
adc
mov
fs
lcall
repz
adc
pop
stos
daa
adc
lret
add
es
inc
fcoms
mov
mov
addr16
icebp
imul
ret
jmp
or
loope,pn
mov
xor
cmpsb
pop
lret
sub
stos
mov
and
lcall
es
push
addr16
dec
lahf
loope,pn
adc
push
fimull
push
imul
pop
stos
xor
lods
xchg
loopnew
xchg
rcrb
call
sahf
pop
push
and
lret
jmp
imul
mov
inc
push
mov
add
in
lcall
ret
fldl
mov
aad
sbb
pop
gs
dec
outsb
and
pop
xor
in
mov
rorb
mov
andl
xchg
roll
push
sbb
outsb
sub
insb
sbb
or
lea
adc
push
xor
cli
adc
test
loop
fmuls
mov
cmp
push
and
xor
ljmp
fnstenv
js
icebp
hlt
aaa
in
ffree
mov
jnp
sub
lret
cmc
mov
inc
sbb
out
push
jno
jno
sub
sbb
outsl
xor
inc
rolb
adc
hlt
aaa
stos
jecxz
ds
xchg
pop
adc
inc
mov
fcoms
je
add
sbb
mov
jnp
test
sub
lods
push
test
shrd
jns
cmp
add
mov
repnz
shlb
jg
daa
jae
pop
sti
jl
jge
cmp
jns
movsb
nop
pop
dec
test
pop
out
adc
in
out
gs
mov
xorb
cmpl
sub
sbbl
mov
test
or
push
mov
pop
xchg
push
call
push
push
test
je
push
fstpt
xchg
gs
add
stos
repnz
add
sub
lods
leave
fdivrl
sbb
sub
mov
sbb
jmp
popf
lret
jp
push
aad
adc
ficomps
and
cmp
dec
inc
pop
scas
pop
or
jmp
xchg
inc
mov
mov
xchg
pop
jl,pt
mov
into
adc
add
inc
adc
adc
mov
mov
test
mov
out
ljmp
dec
xor
and
pop
out
lock
or
call
mov
pop
ja
outsl
jl
test
lret
cmp
push
dec
mov
dec
test
ja
sbb
jge
pop
in
sbbl
stos
loopne
inc
xchg
mov
cld
jne
fmull
mov
negl
add
mov
pop
insl
jg
testl
loope
loop
addl
sahf
mov
dec
push
push
ficompl
inc
xchg
xchg
fcomp
imul
or
js
stc
jecxz
cmp
sub
adc
cmc
cmp
fists
lock
mov
stc
pop
repz
clc
andb
arpl
popf
cmp
jmp
xchg
fiadds
data16
fbld
push
inc
xor
sub
scas
stos
push
es
mov
hlt
scas
out
xchg
testl
push
push
mov
xchg
insb
mov
jne
xor
mov
ja
pop
pop
sti
dec
stos
clc
jae
add
fcmovnb
pushf
xchg
scas
test
adc
inc
mov
loop
scas
pop
mov
pop
int3
ja
in
std
cmp
in
mov
adc
sbb
mov
add
outsl
lds
arpl
scas
sub
push
stos
rcr
fcomp
pop
push
into
cmp
sub
cmc
pop
push
aas
insl
dec
lock
lret
cmp
fwait
mov
jl
lret
roll
lret
xchg
mov
das
ds
stos
cmp
push
int3
rcll
test
inc
xlat
cmp
xchg
mov
mov
imul
xor
lret
sub
jno
cmpsb
adc
repz
inc
and
cmp
andb
ljmp
stos
jmp
in
add
add
ja
and
pop
adc
mov
xchg
xor
cmpsb
push
in
dec
xor
iret
inc
push
or
idivb
xchg
fwait
ja
cs
xor
sub
jae
shll
bound
icebp
adcl
add
adc
inc
pop
gs
jle
push
xchg
sub
mov
or
push
and
clc
dec
xchg
pop
fdivrs
rclb
and
adc
jae
dec
ds
mov
repnz
dec
push
bound
imul
sbb
aas
popa
loop
into
arpl
mov
aad
jns
jle
mov
push
inc
push
push
sbb
xor
pop
xor
aas
pop
int
sbb
cmp
into
stos
dec
pop
xadd
lock
sbb
scas
adc
aas
les
inc
fbstp
loop
sub
cmc
out
inc
fstpl
add
lea
fcompl
scas
sub
xor
imul
xor
mov
cmp
xor
outsl
leave
xor
add
cmp
shll
pusha
sti
dec
mov
shlb
in
push
jae
xchg
push
enter
call
sub
jb
sahf
inc
mov
scas
into
jb
loop
push
mov
add
pop
mov
jmp
lods
mov
loopnew
lock
push
xor
dec
idivl
dec
lods
call
jmp
mov
add
xchg
in
cmp
addb
or
popf
aaa
hlt
lock
inc
jno
nop
inc
xchg
icebp
daa
stos
and
aam
fnstenv
push
push
pop
je
inc
adc
cmp
loope
into
js
sbb
jns
jbe
xor
jp
clc
sub
mov
popf
fdivrp
ljmp
mov
mov
mov
mov
fistps
cmc
inc
test
out
lods
xorb
jb
mov
sbb
in
inc
loop
jg
pusha
pop
out
adc
mov
sub
mov
outsl
adcl
pushf
ss
fmul
idivb
or
ret
inc
inc
mov
aaa
inc
gs
cld
gs
sbb
dec
xor
shrl
or
lret
imul
lahf
inc
sahf
xchg
lods
shrl
or
jmp
addb
lods
mov
xchg
addb
mov
mov
push
cmpsl
fcmovnb
jo
pusha
lret
rolb
and
pop
xchg
std
and
push
jp
loopne
mov
lret
into
xor
mov
lea
imulb
out
scas
loopne
mov
inc
jg
or
movsb
xor
and
cmp
cmp
mov
punpckhdq
leave
testb
xchg
je
mov
mov
jnp
sbb
mov
push
ret
rclb
add
jne
cmpsl
sub
inc
outsb
pusha
push
xor
add
test
sbb
int3
adc
jbe
push
andl
cltd
or
cmp
and
test
dec
jo
xor
out
lock
cmp
xchg
inc
data16
arpl
sub
popa
aad
dec
iret
push
leave
cmpsl
push
inc
in
lods
xchg
dec
enter
sub
fimull
ficomps
xlat
cmp
mov
mull
mov
in
jmp
fs
cltd
cltd
rorl
test
add
repnz
add
clc
inc
and
mov
cmpsl
js
test
addl
sarb
mov
xchg
stos
push
dec
popf
pop
mov
hlt
xor
cwtl
adc
lods
addr16
out
sahf
call
sarl
loopne
xor
scas
test
bound
xor
jne
movsl
jmp
pop
mov
jbe
inc
sub
sbb
arpl
push
loope
inc
int
repz
ret
adc
inc
pop
add
insl
iret
inc
dec
ds
jno
cs
fidivs
jp
lods
lret
popf
fsubl
imul
push
fnsave
xchg
pop
fimull
or
js
inc
mov
ja
cmpsb
popa
sbb
stos
cmc
or
sbb
adc
dec
push
shlb
sub
pop
dec
push
push
xchg
loopne
adc
sub
addr16
js
jo
xor
ret
test
mov
arpl
out
push
push
pop
sub
jmp
jle
and
out
mov
loopne
insb
icebp
fsts
lock
repz
jg
sbb
stc
jnp
push
into
scas
cltd
push
cmpl
dec
sub
push
clc
aam
push
repnz
xchg
mov
rcll
jbe
or
popf
mov
xorb
xchg
pop
repz
loopne
jp
aad
xchg
cs
and
test
or
or
cs
movsl
test
orl
stos
cmp
and
push
lock
xchg
cltd
stos
or
je
sub
outsl
or
jp
pop
inc
rorb
movsl
imul
pop
lds
jne
push
cmpsl
arpl
arpl
mov
scas
call
in
dec
stc
sbbl
mov
sbb
adc
dec
and
into
lock
jnp
ret
xchg
mov
adc
jmp
cmp
push
in
mov
push
mov
insl
add
dec
loopne
dec
cmp
adc
sbb
imul
jp
test
push
jnp
mov
cwtl
mov
jae
inc
adc
arpl
or
insl
mov
out
mov
call
rcr
pop
rcrb
fst
xorl
jge
push
negl
dec
fistpl
aaa
jl
mov
xor
mov
imul
dec
add
bound
mov
shl
inc
sub
mov
mov
cmp
mov
adc
xchg
xchg
and
hlt
fmuls
mov
test
lds
cmc
dec
adc
sbb
jmp
push
or
mov
rol
in
adc
push
insl
cmpsb
aam
mov
push
pop
mov
insl
sbb
xor
sbb
mov
movsl
das
lds
inc
push
sub
je
test
hlt
bound
xchg
ds
ret
in
push
push
pop
iret
imul
pop
int
sysenter
stos
or
sahf
lods
cld
or
xor
xchg
inc
push
and
cmp
subl
loopne
xor
inc
pusha
inc
mov
ds
pop
insb
dec
xchg
enter
mov
xlat
lea
insl
shl
mov
cmpsb
sub
adc
xor
xor
jae
mov
push
push
ss
xor
fs
jb
mov
cmp
push
pushl
dec
sahf
test
cmp
or
jne
sbb
call
imul
out
inc
sub
jo
push
lods
inc
mov
outsl
test
shr
dec
lahf
mov
inc
clc
aas
xchg
mov
enter
xchg
and
repnz
mov
and
cmp
cs
repz
aas
or
inc
mov
lahf
jecxz
mov
mov
push
sbb
inc
ljmp
ljmp
popf
xor
insb
dec
int3
mov
or
pop
add
clc
cmp
mov
call
cmp
loope
inc
push
pop
mov
mov
das
mov
jge
test
sbb
lds
test
mov
pop
mov
jbe
aas
inc
jo
fcmovb
int3
mov
jns
and
lret
adc
outsl
jmp
sbb
sub
push
cmp
mov
fidivs
sarb
mov
dec
lret
adc
inc
aam
scas
mov
idivb
outsb
das
insb
mov
xor
inc
and
or
out
mov
ljmp
mov
aam
xchg
sbb
cwtl
mov
lcall
sub
stos
sub
jo
push
fisubs
pushf
adc
mul
sbb
push
mov
adc
jne
dec
inc
jmp
sub
and
scas
add
and
sub
push
mov
and
loope
es
pushf
fucomi
mov
jo,pt
mov
outsb
in
push
sbb
sub
xor
testb
bound
cmp
call
add
jp
loope
adc
repnz
and
addl
lods
mov
hlt
shlb
fbstp
push
cmp
mov
sub
fiaddl
xor
fsubrs
aam
ljmp
xchg
mov
mov
jp
sbb
ds
jne
cmp
fstpl
sbb
fwait
dec
inc
sahf
mov
jg
mov
les
dec
icebp
push
rcrb
jbe
cmp
push
push
push
into
idivb
push
cmp
dec
mov
sub
pop
fildll
cmp
adc
lods
dec
xchg
cmpsb
jae
dec
inc
mov
jne
sbb
enter
imul
stos
in
jp
in
jle
loopne
mov
mov
sub
in
lock
sub
mov
or
movsl
push
add
std
add
mov
je
fdivrl
rcrl
pop
xor
scas
lret
ficoms
dec
ja
scas
sbb
xor
push
jno
or
repz
xor
int
jle
imul
test
mov
pop
popl
xchg
push
mov
adc
or
mov
dec
push
fsubrl
imulb
es
mov
mov
and
adc
insb
stc
xor
jns
pop
mov
fcmovnbe
xor
mov
out
loope
lock
pop
or
lret
js
test
movsl
inc
push
jmp
int
pop
mov
pop
pushf
push
cmp
cmp
ljmp
jo
int3
in
inc
xor
lret
ja
mov
dec
fwait
jmp
andl
cs
movsl
mov
push
sub
mov
pop
cmp
mov
xor
push
push
test
popf
sub
push
mov
dec
lahf
jecxz
int3
ljmp
clc
xor
mov
ret
inc
in
xchg
mov
mov
push
push
les
orb
jne
and
xor
jnp
cmpl
sbb
cmp
aaa
popa
subl
mov
fwait
cmpsb
inc
dec
sahf
pop
push
cmc
xor
jle
in
mov
and
sar
xchg
inc
into
aaa
and
push
mov
cmp
mov
jecxz
arpl
push
cltd
xchg
and
lahf
fsubr
mov
mov
pop
arpl
loope
mov
or
mov
lahf
inc
call
add
ja
jecxz
jns
daa
mov
inc
out
mov
dec
cltd
inc
scas
arpl
loop
mov
jnp
xor
clc
pop
aas
loop
shll
lcall
dec
mov
adc
jle
mov
jo
outsb
jns
popa
sub
rcl
and
mov
adc
jmp
jns
sub
pop
cmc
mov
fidivrs
jp
sahf
push
lret
cmp
xor
and
ret
out
push
adc
pop
jns
mov
push
stos
aam
add
xor
stos
pop
jmp
push
int
aam
je
scas
jg
xchg
push
loopne
int
add
jnp
mov
in
sbb
mov
mov
pop
insl
push
lret
push
mov
outsl
and
movsb
push
and
lcall
pop
mov
sarb
add
sbb
mov
mov
sub
fmuls
lock
fmull
add
jbe
mov
sub
xor
jecxz
iret
push
cltd
jns
int3
int
test
ja
inc
loopne
ds
lea
ret
adc
inc
mov
mov
lea
inc
or
imul
test
stc
mov
mov
inc
cmp
pop
mov
insb
pmaddwd
fstpl
pop
cpuid
mov
out
fwait
arpl
dec
and
sbb
rclb
jmp
out
dec
scas
ss
enter
fisttpll
lret
inc
out
das
inc
pop
lods
lock
pop
push
iret
ljmp
xchg
cltd
jecxz
jle
in
pop
scas
test
push
add
sbb
adcb
cld
add
addr16
pop
enter
loop
cmp
inc
leave
pop
mov
push
xchg
andb
add
push
mov
pop
adc
in
in
xchg
and
push
scas
ss
add
pop
or
xor
es
test
scas
pop
dec
and
sub
xor
fimuls
lret
xlat
adc
lahf
mov
ds
or
add
insl
popf
xlat
mov
xchg
xchg
and
mov
cmp
sbb
xor
lods
pop
insl
int
mov
rclb
test
fildll
sub
pushf
pop
push
pop
cmp
in
or
bound
fisubs
sbb
jecxz
sbb
mov
inc
jnp
shll
sbb
sub
sahf
cld
cmp
sbb
mov
aad
ds
loopne
out
pop
lods
push
xor
outsb
pop
fsubrp
sub
mov
mov
dec
shrb
push
or
fisttps
adc
dec
or
andb
addb
cltd
imul
fwait
rorb
mov
inc
jge
psrlw
outsb
pop
fwait
cltd
sbb
xchg
inc
dec
pop
pop
in
cmc
sbb
ret
xchg
xchg
and
icebp
pop
test
stc
xor
inc
and
outsl
dec
stos
js
mov
imul
push
jg
outsb
in
xchg
lcall
shll
inc
mov
or
adc
repz
cmpsl
and
push
mov
mov
jmp
adc
not
fildl
mov
lods
aaa
cmp
sbb
sub
lock
or
js
cltd
mov
ds
cmp
test
std
std
clc
in
lret
inc
fisubl
test
pop
mov
cltd
adcb
pop
xor
mov
xor
clc
jecxz
loopne
fstps
pop
cltd
in
or
or
mov
dec
sub
pop
pop
scas
scas
jns
cwtl
xchg
dec
pop
loopne
xor
int3
int3
jbe
jno
andb
mov
cmp
cmc
lret
push
test
jno
sub
je
bswap
mov
or
dec
adc
inc
mov
bswap
inc
popa
lss
outsb
mov
shlb
lods
push
aam
add
movsl
inc
loopne
inc
dec
shll
dec
addb
push
mov
mov
out
mov
scas
pop
rcrl
mov
xchg
cmpsb
jecxz
addr16
fst
jbe
inc
loop
xor
std
mov
loope
fwait
lock
xchg
adc
pop
gs
fwait
or
adc
daa
dec
xor
jno
add
sub
xor
popf
incl
and
mov
push
ret
inc
sub
aam
fstpl
mov
dec
mul
loope
rclb
sbb
imul
sbb
xchg
stos
filds
outsb
xor
dec
jae
sub
xchg
popa
sub
jp
in
jne
adc
sub
in
mov
movsl
sbb
shrb
inc
fimuls
jne
inc
rcll
jo
sahf
icebp
sub
and
jne
shrl
mov
or
ja
adc
pop
mov
xor
add
lods
and
xchg
and
fdivs
es
es
nop
bound
sub
mov
jae
popa
jne
and
insl
movsb
out
add
rolb
mov
or
or
movb
inc
or
lret
imul
stos
mov
daa
and
shlb
addr16
stc
mov
stos
or
cmpsl
mov
in
jbe
and
pop
in
xchg
xchg
push
dec
dec
imulb
jl
mov
out
sbb
dec
add
jno
pusha
popf
mov
xchg
cld
jnp
cld
adc
mov
inc
xchg
and
leave
mov
movsb
pop
cltd
dec
jge
je
lock
jl
and
loop
int
push
xchg
js
data16
rcll
nop
jbe
xchg
gs
push
dec
mov
mov
call
lods
mov
movsb
lods
pop
add
cmpsl
jb
inc
cltd
jge
gs
dec
or
add
adc
push
add
out
dec
sub
or
sahf
cmpsl
jno
mov
int
aam
clc
popa
and
dec
iret
ss
xor
xchg
lret
mov
ljmp
lcall
cmp
stos
jp
es
xchg
inc
aam
mov
mov
xorl
dec
pop
add
or
pop
xor
sbb
jg
aaa
sub
lock
in
addr16
inc
pop
mov
mov
aam
pop
fcompl
clc
dec
cmp
lcall
adc
std
test
and
das
adc
out
cld
iret
add
inc
mov
pop
fldt
stos
ds
out
imul
into
dec
ficomps
sub
sbb
jle
dec
lret
pop
fldt
stos
ds
out
imul
into
dec
ficomps
sub
sbb
jle
dec
lret
pop
fisubrl
stos
ds
out
imul
lret
pop
scas
sub
sbb
dec
sti
js
pop
fildll
stos
cmp
xchg
add
fs
fisubrs
mov
popa
in
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
into
sub
jle
outsb
sbb
dec
pop
ficomps
out
mov
lret
pop
sub
jg
outsb
sbb
push
push
dec
cs
out
lcall
scas
ficompl
dec
and
outsb
add
jae
bound
push
cs
fisubrs
mov
std
movsl
out
sahf
mov
dec
dec
xor
jge
mov
sbb
div
mov
jno
xor
ret
mov
add
dec
pop
sbb
mov
xor
arpl
mov
mov
push
and
mov
push
jno
cmovne
loope
push
mov
pop
pop
fisubrs
adc
dec
dec
inc
cmp
je
lds
orb
and
ds
dec
or
push
pop
jle
fnstsw
xor
mov
sub
stos
push
inc
xor
jb
and
call
push
pop
cmpsb
aad
dec
hlt
bnd
loopne
ffreep
dec
call
rorb
ret
mov
cmp
outsb
sbb
push
jp
dec
cs
fisubrs
out
sbbl
scas
fldt
sub
dec
adc
jg
push
dec
aas
mov
jl
xchg
mov
clc
shll
or
jne
push
xor
ds
push
xchg
mov
out
lods
mov
sub
pusha
cmp
pop
push
jp
dec
cs
fisubrs
out
lcall
scas
ficompl
dec
cmp
outsb
sbb
push
jp
dec
cs
fisubrs
out
lcall
scas
ficompl
dec
sub
lea
insl
loope
in
test
inc
leave
xor
int
sbb
cmp
mov
popa
bound
ss
pop
xchg
mov
mov
frndint
vphaddbd
mov
jp
loop
and
xchg
jle
mov
xchg
test
inc
iret
jb
lcall
sbb
loopne
aaa
inc
rclb
sbb
jns
fcompl
scas
stos
mov
les
test
mov
fsubrs
out
mov
xlat
je
lcall
aad
push
xor
or
or
call
out
aas
shrb
int3
cmpb
cmc
mov
xor
fimull
pop
hlt
adc
imul
sub
pop
push
or
dec
lcall
inc
clc
sti
lock
ror
addb
lret
push
lsl
xchg
fldl
popf
jne
pop
adc
das
push
das
add
adc
jbe
xchg
lods
mov
sub
data16
jl
sarl
aaa
mov
pop
mov
fadds
adc
pop
lds
mov
aaa
mov
out
push
push
mov
xchg
xor
xchg
imul
add
cli
out
cmp
les
xor
and
push
push
shll
shrb
call
lock
and
rcrb
push
cli
xor
inc
out
notb
push
inc
mov
push
cmp
dec
adc
nop
pop
ror
stc
and
dec
mov
inc
xor
dec
add
es
addl
add
movsl
fcomps
lret
out
inc
jae
jle
adc
repnz
scas
cmpsb
sbb
not
inc
scas
cmp
cld
popf
mov
sbb
push
mov
or
popf
jge
push
cmp
sti
fsubp
cmp
pop
or
jb
dec
pop
pop
cmpsb
sub
test
jp
jnp
jecxz
popa
pushf
insl
gs
jnp
pop
insb
sysret
jg
icebp
loop
pop
movsb
into
scas
push
rcrb
cmpl
daa
xor
adc
pusha
push
xchg
fstl
adc
jns
ret
leave
divl
jecxz
jbe
jae
nop
dec
test
clc
pop
or
cmc
cmpsl
mov
xor
xor
lds
lret
add
insl
mov
adc
clc
dec
adc
leave
rorl
inc
lods
cld
test
xchg
push
cmp
sub
fs
jne
ret
rol
aas
mov
push
jl
xchg
pop
push
mov
gs
in
std
xchg
inc
out
sahf
inc
dec
push
mov
mov
mov
in
and
iret
and
insb
stos
or
test
xor
or
cmpsl
dec
sub
fwait
pushf
adc
pop
lock
or
sbbl
lcall
fwait
adc
pop
xor
mov
push
insl
xor
subb
mov
out
addl
jmp
mov
inc
orb
decl
gs
push
aas
shlb
mov
xor
mov
xor
call
faddl
inc
pusha
lods
dec
sbb
xor
sub
add
dec
inc
subl
call
rclb
push
xchg
cmp
push
adc
inc
andb
cld
aas
js
call
xor
inc
cmp
xchg
mov
pop
sbb
cld
mov
add
es
sub
xchg
in
xchg
push
or
jne
test
pop
pop
hlt
pop
jl
sahf
add
arpl
mov
frstor
cwtl
stc
jecxz
xor
repnz
jns
lcall
add
sub
int3
inc
sub
pop
cs
fcmovbe
aam
mov
add
cmp
test
mov
adc
pop
dec
jb
pop
push
sub
mov
testb
push
mov
cltd
jae
cmovnp
xchg
loop
les
mov
push
mov
repz
jg
out
inc
mov
mov
out
dec
dec
pop
dec
jno
xchg
jmp
push
jbe
hlt
stos
cmp
and
sub
mov
fwait
and
rcll
lds
fs
or
cltd
inc
ds
jnp
inc
sub
jbe
in
jns
dec
es
push
mov
mov
and
cwtl
mov
sub
inc
jno
jmp
mov
push
xor
jne
and
add
jle
cmp
shl
stc
mov
pop
add
mov
std
cmp
sbb
push
and
pusha
imul
sahf
outsl
insl
gs
xlat
outsb
push
enter
insl
loope
or
shrl
xlat
stc
cmp
outsl
stos
test
lea
das
mov
mov
jecxz
mov
mov
cmp
test
aaa
cmpsl
lods
fwait
cli
xorb
in
xchg
push
out
dec
into
pop
loope
rcl
pop
fmull
lods
jb
int
mov
and
addb
mov
out
sbb
xchg
notl
fs
adc
or
dec
add
xchg
inc
mov
lds
mov
and
xchg
dec
xor
cmp
lea
jbe
cmc
imul
inc
xchg
inc
in
jb
mov
jecxz
jg
stc
es
mov
popa
and
pop
jle
les
pop
rclb
and
mov
pop
pushf
test
add
push
mov
in
sbb
inc
stos
jb
test
test
sbbb
out
jmp
sub
lret
or
push
mov
leave
and
jecxz
mov
add
jae
sbb
xor
xchg
mov
push
loopne
out
or
mov
push
fcomps
repnz
mov
mov
call
sub
push
mov
mov
mov
xor
mov
sbb
lea
xchg
and
mov
stc
pop
jnp
push
out
push
fsubl
cmp
or
sarb
jo
push
sbb
test
sbb
xor
xchg
pop
mov
js
cmc
sbb
xor
jno
mov
test
repnz
sbb
jle
das
mov
fs
add
sbb
and
adc
mov
mov
in
mov
outsb
sbb
push
sbb
ds
mov
leave
mov
shlb
loope
adc
mov
inc
inc
mov
and
sbb
jl
sub
mov
sub
pushf
nop
test
mov
mov
outsb
xchg
and
sar
push
insl
xor
out
dec
mov
mov
inc
fucomip
les
scas
test
pop
adc
push
test
stc
push
js
mov
and
mov
jmp
sti
dec
std
add
push
lds
mov
xchg
add
push
inc
lods
rorb
lcall
sbb
mov
clc
popf
mov
icebp
or
daa
cmpsb
xchg
mov
xchg
into
int3
xchg
test
mov
xchg
stc
push
xchg
mov
psllw
movsl
add
jbe
outsl
rorl
pop
arpl
adc
scas
add
cmp
push
hlt
js
inc
mov
or
rclb
imul
adcl
vrcpss
jmp
push
pushf
nop
sub
add
fstpt
ljmp
sbb
negl
imul
xor
cmp
push
std
std
cmpb
sub
mov
add
jmp
or
ss
mov
pop
lods
outsb
movsl
push
xor
fdivrp
cmp
hlt
xchg
shll
inc
mov
das
jb
add
xor
outsl
cmp
test
aaa
push
outsl
xchg
mov
jge
cltd
mov
jnp
pop
and
out
or
xor
pop
cmp
xchg
ja
mov
mov
mov
jne
pop
test
xchg
fidivrl
push
scas
out
cmp
aaa
xchg
mov
jmp
repz
jo
mov
filds
or
push
push
lret
int3
cmp
addb
xor
jg
aad
pop
iret
inc
leave
xor
sbb
push
mov
jnp
ja
pop
dec
rcr
les
stos
add
insl
in
mov
popf
iret
test
sbb
insl
mov
je
imull
test
xlat
pop
pop
or
sbb
aad
popf
into
cmp
mov
arpl
repnz
xor
test
mov
addr16
cmp
iret
bound
cmp
pop
adc
pop
push
ss
xor
jmp
stc
mov
ljmp
dec
pop
hlt
mov
or
jp
scas
jecxz
test
push
add
cmp
imul
inc
adc
cmc
mov
jecxz
fwait
cmp
sbb
push
xlat
xchg
xchg
jnp
lds
dec
dec
fwait
rorl
pop
outsl
fs
orb
sbb
aad
sbb
push
stos
mov
dec
pop
inc
lcall
and
pop
ja
xor
mov
lds
mov
cmc
outsb
repz
sub
mov
roll
mov
icebp
pop
call
adc
sbb
adc
dec
sub
sub
pop
mov
mov
mov
outsl
pop
dec
pop
mov
movsb
add
or
push
jo
push
lcall
mov
jp
or
xchg
inc
pusha
cltd
movsb
pusha
mov
scas
and
inc
testb
int
ss
imull
arpl
mov
call
iret
adc
or
mov
std
lock
pushw
adc
dec
imul
cltd
pop
pop
mov
inc
sbb
lds
mov
mov
das
xchg
dec
and
imul
aas
pushf
cmp
addr16
out
xchg
jecxz
jo
out
xchg
ljmp
cli
xchg
stos
dec
aas
push
jb
xor
cwtl
jbe
loope
mov
inc
aad
xor
jp
mov
cmp
js
ret
xor
mov
xchg
std
xor
inc
daa
and
popa
xlat
ja
cmpsl
mov
leave
push
pop
repnz
or
rcl
push
outsb
or
jecxz
xchg
sbb
loope
cmc
aad
lret
std
sahf
cmp
xchg
inc
push
sub
xor
aas
addb
cmpb
mov
fcmovb
into
push
call
mov
out
xchg
xchg
ds
testl
pop
out
mov
pop
fsts
inc
lret
push
push
add
lahf
xchg
mov
add
movsl
lea
lock
inc
loop
cltd
ret
nop
test
ror
cli
pop
fisubs
push
sahf
subl
adc
fisubs
scas
xchg
dec
pop
jb
imul
addr16
push
add
xchg
lahf
cld
pop
jp
data16
cli
enter
lods
cmp
divl
inc
hlt
inc
adc
shr
ss
cmpsl
fnstcw
xchg
jle
mov
lea
pop
ss
cmc
leave
inc
mov
sbb
faddl
xor
xor
mov
out
stos
jae
dec
or
in
dec
pushf
cmp
int
mov
mov
pushf
loopne
xchg
push
insb
rcr
std
repz
dec
aas
mov
sub
mov
in
call
jl
or
or
cmp
adcb
hlt
lahf
sub
and
cmp
push
mov
dec
imul
push
sub
nop
lret
or
add
push
aad
sbb
sub
pop
pusha
mov
or
and
or
gs
mov
pusha
dec
jle
lret
adc
sub
scas
cmp
xor
js
cmpsl
dec
push
sahf
or
push
lock
mov
push
rdmsr
jecxz
aas
inc
push
fadds
ss
fs
sarb
fimull
loope
out
scas
dec
mov
mull
adc
xchg
fs
les
dec
fisubl
fucom
or
mov
jns
adc
and
adc
sub
cmc
ds
ja
stos
sub
mov
xor
int
adcl
push
popa
adc
mov
add
mov
mov
repz
mov
sbb
loope
rol
insl
push
add
vphaddwd
ja
in
decl
push
and
pushf
imull
jae
test
add
test
lcall
sti
inc
enter
add
and
and
sub
ss
cmpl
jg
xlat
push
pop
cmpsb
aaa
in
addr16
lret
insl
shrl
cmp
clc
cmp
inc
daa
inc
aaa
sub
call
jne
or
mov
dec
ss
jnp
jmp
push
mov
and
jecxz
jbe
jae
lods
cmp
sbb
addr16
in
cltd
mov
jo
dec
xor
xor
fcmove
mov
mov
loopne
sbb
andb
or
adc
cmpsl
fisttpl
xchg
cmp
lock
into
cs
movsl
or
dec
xchg
push
xlat
inc
mov
mov
xchg
in
inc
icebp
pop
xor
scas
push
jnp
add
mov
pop
or
aad
dec
add
sarb
sbbl
pop
lds
mov
das
loopne
test
push
xchg
or
sar
cmp
and
pop
mov
cmp
clc
pop
xor
and
xchg
adc
jno
rcr
aaa
add
xor
testl
stos
in
push
outsb
sahf
int
rcrb
daa
test
or
push
mov
cmpsb
sub
dec
dec
adc
inc
jp
jge
in
or
push
sub
sbb
fsts
mov
ds
inc
shll
lahf
adc
aad
mov
insb
or
or
dec
and
dec
mov
mov
push
pop
jne
shl
or
fistpll
clc
leave
jns
xor
lds
push
cli
out
cmpsl
enter
cmp
mov
and
divl
jecxz
jns
push
pop
lods
data16
jge
in
push
add
or
repz
stos
mov
and
add
mov
in
repnz
push
sahf
mov
sbb
mov
mov
mov
and
shl
push
dec
sub
insl
mov
adc
les
jnp
mov
into
xchg
data16
pushf
xchg
ret
aas
test
ds
in
add
insl
test
sbb
push
push
push
push
daa
clc
in
cli
cli
testl
fnstsw
pop
sub
cltd
imul
daa
dec
sbb
xor
cld
push
mov
imul
add
cmp
mov
ret
mov
inc
insb
inc
addr16
loope
ds
cwtl
mov
xchg
out
enter
mov
int3
xchg
int
dec
aad
xor
mov
mov
or
xor
push
repz
mov
mov
lret
lea
outsl
sbb
inc
es
scas
in
popf
stos
mov
add
iret
ja
mov
dec
pop
scas
mov
mov
dec
sbb
lods
lds
dec
mov
xor
cmp
aam
cmpl
push
cmp
pop
inc
subl
pop
call
dec
loope
in
push
movsb
cltd
in
mov
mov
enter
and
shr
xor
rcr
xchg
call
loopne
rclb
mov
notb
cs
cmpsb
fldl
ja
push
movsl
je
adc
inc
jno
insb
pop
or
sbb
push
cld
xchg
and
cmc
cwtl
or
pop
lret
mov
mov
loop
or
cld
lock
and
xor
aad
loopne
jmp
mov
faddl
xor
imul
add
sub
mov
rcl
popa
orb
or
mov
subb
mov
sub
jbe
sub
mov
sbb
add
sahf
add
mov
sbb
imul
pop
aaa
or
lahf
das
stos
mov
rcrl
push
enter
in
out
int3
insb
mov
jnp
popf
out
push
outsl
repz
push
cmp
aad
inc
mov
dec
lock
imul
add
push
mov
push
je
sub
roll
cmp
xchg
sub
pushf
insb
loope
inc
or
and
cmp
dec
xor
xor
es
add
sub
pop
push
hlt
and
mov
shlb
xor
in
lods
jno
ljmp
add
or
mov
loope
mulb
ss
sbb
lods
pop
cmp
jecxz
loope
testl
cmp
call
jg
sbb
pop
mov
jecxz
ds
daa
adc
nop
movsb
imul
nop
in
jno
mov
test
outsl
push
sub
out
stc
jnp
lcall
mov
jbe
dec
xchg
push
test
push
push
push
das
xor
pushf
push
fimull
xor
roll
lods
inc
dec
lds
fwait
jge
push
add
jae
sbb
and
push
lret
inc
gs
aad
pushf
cmp
xor
push
mov
jl
mov
sub
aam
or
lcallw
pop
mov
xor
sub
into
mov
dec
aaa
mov
inc
inc
adcb
jmp
mov
bound
fsubr
stc
add
fiadds
dec
push
ds
xor
pop
adc
cmp
cmpsb
hlt
pop
mov
xorl
mov
fists
lret
mov
daa
std
pop
insl
mov
xor
lds
xor
sahf
cmp
imul
push
mov
cli
pop
int3
mov
lods
xlat
rcll
xchg
loop
add
test
leave
scas
mov
push
out
adc
xor
lea
aad
rorl
repz
add
and
sti
xchg
lcall
loop
or
mov
mov
inc
rorb
mov
xchg
adc
lock
jb
push
test
stos
sub
clc
shr
xorl
mov
jge
ret
test
ljmp
test
out
out
dec
xchg
ret
adc
dec
shll
es
sarb
adc
sahf
push
stos
mov
adc
mov
inc
jb
into
dec
xor
in
ret
dec
rep
pushl
cmp
mov
out
pop
fdivrl
repnz
mov
xor
fcmovu
jl
jne
adc
and
and
repnz
sbb
and
leave
and
into
mov
arpl
adc
xchg
test
or
mov
mov
sub
inc
icebp
adc
xor
outsl
lods
cwtl
or
xchg
push
push
test
test
inc
mov
pop
in
mov
jnp
in
sub
inc
icebp
test
ret
cld
adc
je
cli
push
int
inc
mov
xchg
lods
js
stos
sbb
sbb
inc
xchg
jge
push
push
add
adc
dec
push
in
test
jmp
dec
dec
push
insb
xchg
aas
faddp
popa
imulb
cmp
inc
add
out
push
push
loopne
loope
xorb
inc
jle
shrd
test
icebp
leave
mov
adc
xor
std
dec
insl
loope
add
mov
outsb
popa
in
inc
rcr
xchg
push
or
pushf
add
int3
adc
add
dec
xor
xchg
les
test
inc
loopne
adc
lock
jne
scas
dec
rcrl
adc
in
out
jb
dec
and
mov
je
adc
pop
les
test
fcompl
adc
inc
ficoms
push
sub
stos
daa
stos
mov
movsb
and
cld
jbe
mov
inc
mov
out
fists
push
test
cld
push
inc
test
and
js
jp
movsb
cmp
push
jo
adc
sub
add
sbb
cmpsl
jge
fcomps
mov
and
mov
enter
test
arpl
pop
fwait
dec
xchg
mov
aad
jne
push
or
movsb
lds
outsl
cli
push
outsl
pop
jl
inc
pop
outsl
cmp
jle
in
aaa
movsb
jno
pop
mov
jge
fdivrs
sbb
jp
push
jmp
or
outsb
testl
cwtl
addl
testl
setge
mov
popf
sbb
add
jnp
fistps
jp
sub
rorl
scas
xchg
ds
std
repz
push
jge
popa
ss
xchg
sbb
xor
lahf
pop
mov
xchg
lcall
mov
mov
xchg
popa
mov
lods
push
and
dec
test
sbb
pop
mov
out
dec
cmp
add
mov
dec
xor
movsl
sub
daa
leavew
xor
ljmp
stc
lds
xchg
outsb
sbb
push
jp
dec
cs
fisubrs
out
lcall
scas
ficompl
dec
cmp
outsb
sbb
push
jp
dec
cs
fisubrs
out
lcall
scas
ficompl
dec
cmp
outsb
sbb
push
jp
dec
cs
fisubrs
out
sahf
sahf
ljmp
pop
cs
jg,pt
outsb
sbb
push
jp
dec
cs
out
in
jmp
mov
movsl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
data16
inc
idivb
inc
adc
jg
cmpl
mov
shlb
add
data16
inc
inc
ss
bound
jb
xchg
notb
mov
loop
loop
xacquire
jbe
data16
inc
pop
ss
es
jb
fwait
divb
cmpsl
ret
icebp
mov
add
inc
inc
adc
push
and
adc
ljmp
sbb
in
out
pop
or
mov
pop
cmpb
xchg
mov
outsl
loop
or
imul
je
cmpl
mov
aad
insl
imul
cmpsb
loop
repnz
add
jle
adc
jl
clc
or
xchg
sbb
mov
pop
imul
lret
mov
jl
orb
stos
mov
in
cmpsb
sbb
repz
inc
int
mov
push
jp
jge
pop
mov
loop,pn
xchg
repnz
lret
jbe
data16
inc
push
ss
bound
imul
testb
fidivl
repnz
outsb
jb
daa
inc
push
inc
inc
xor
dec
das
push
jb
orb
mov
cmc
mov
nop
out
lahf
enter
add
inc
inc
cs
push
push
jg
mov
fdivrs
jmp
dec
and
and
sbb
bound
jb
xor
out
mov
ret
cmpsb
loop
xacquire
jbe
data16
inc
inc
ss
bound
jb
xor
out
mov
ret
cmpsb
loop
xacquire
jbe
push
popf
mov
xor
pusha
cltd
mov
mov
xchg
scas
mov
stos
sub
xorb
fists
dec
sbb
push
scas
dec
jp
lcall
or
add
inc
jbe
jmp
test
stos
hlt
sbb
mov
push
ret
pop
fwait
add
cmc
fnstsw
sub
jno
rolb
call
fidivl
cltd
lods
ret
mov
popf
sub
mov
lret
jl
push
lret
cmp
push
mov
shrb
rorb
xchg
es
sub
icebp
daa
ret
arpl
sbb
into
mov
mov
fwait
dec
cwtl
sub
push
or
pop
mov
pop
outsl
imul
repz
out
test
mov
add
or
xchg
jbe
push
adc
sub
mov
leave
mov
das
cli
ds
inc
inc
loopne
push
xchg
mov
fwait
sti
xor
add
pop
inc
out
xorl
pushf
dec
insl
call
pop
mov
repnz
rcr
fmul
xchg
mov
repnz
push
dec
xchg
mov
inc
and
pop
dec
jle
clc
cmc
arpl
xchg
mov
stos
pop
xchg
scas
inc
mov
imul
int3
dec
mov
cmp
push
shll
or
dec
mov
popa
mov
or
sub
data16
add
in
adc
testb
add
pushf
pop
or
enter
push
mov
add
dec
xor
add
das
fisubl
sbb
into
test
pop
andb
fwait
in
push
jae
sub
popf
pop
dec
inc
push
pop
and
push
push
repz
fcomps
or
mov
xchg
dec
adc
inc
in
xor
sbb
mov
sub
cmp
fsubrl
inc
fstps
xor
xchg
or
pop
repz
pop
pushf
sub
xor
cmp
das
and
sub
int3
sbb
pop
scas
lods
sub
test
lea
push
les
adc
sbb
mov
pusha
out
ret
iret
cltd
pop
lahf
jno
js
mov
adcl
add
and
add
or
sbb
cmpsl
inc
rorb
cmp
cmp
cmp
addl
mov
jmp
dec
jno
xchg
or
outsb
sub
lea
aas
in
mov
ss
lods
mov
inc
testb
loopne
cmpsb
out
dec
in
es
lcall
adc
mov
lret
push
cmp
sub
xor
out
mov
sets
sub
xchg
add
gs
sub
sbb
adc
xor
mov
sbb
mov
mov
add
adc
mov
xor
rorb
int
add
ss
dec
dec
stc
sub
fwait
jl
pusha
jecxz
fwait
daa
add
outsb
pop
mov
push
or
lcall
dec
mov
adc
cltd
inc
movsl
mov
in
in
ljmp
mov
pop
popa
jle
dec
subb
das
xchg
mov
movsb
stc
dec
lods
push
int
xor
in
cmpsl
enter
mov
shll
dec
shrl
lock
cltd
mov
rolb
rol
or
pop
aas
lds
test
xchg
inc
sub
imul
cli
fmull
xor
jle
stc
das
lods
mov
lods
cmp
jge
jecxz
pop
leave
jge
int3
cltd
roll
rorl
sarb
or
clc
cmpsl
sarb
arpl
push
fwait
mov
in
or
pop
ret
mov
mov
ret
sub
adc
push
roll
mov
and
outsl
jmp
fldenv
inc
mov
gs
dec
shlb
cmc
call
xchg
test
pop
test
cmp
add
and
and
sub
push
mov
in
or
pminub
mov
in
shll
repz
jbe
mov
add
push
repnz
orl
jne
jg
xor
cwtl
jb
and
enter
daa
and
xchg
sbb
in
sub
int3
cmc
cmp
xchg
loope
ret
fmull
dec
pop
mov
cmc
inc
xchg
add
sub
xor
fisubs
loopne
in
push
stos
in
pop
fwait
lods
sub
testb
mov
push
dec
xchg
cltd
les
xor
and
sbb
mov
cltd
ljmp
mov
pop
int
ja
mov
pop
xor
stos
andl
jecxz
rolb
fs
pop
jl
push
insl
jbe
push
sbb
push
mov
div
inc
or
pushf
jo
shll
imul
aam
std
pop
jp
es
stos
out
dec
mov
jns
xchg
stc
cmp
bound
arpl
sub
hlt
mov
add
pop
sbb
ds
movsl
sbb
rep
mov
lcall
mov
pop
adc
das
sub
jno
or
dec
cld
xor
add
lcall
das
test
push
mov
aas
cwtl
and
pop
mov
xchg
fs
ret
rcr
insb
mov
cltd
cltd
ret
sbb
sub
sbb
bndmov
cmp
jp
jp
add
mov
in
or
jne
stos
pop
mov
add
cwtl
mov
sub
cmp
mov
add
sub
jo
outsb
pusha
mul
aad
cli
mov
js
xor
or
enter
mov
dec
clc
xchg
or
loopne
notl
sbb
push
cwtl
push
sbb
push
cmp
fwait
mov
dec
bound
inc
rcrl
cltd
aad
scas
mov
jno
jbe
xchg
push
cmp
jmp
push
inc
popa
shlb
pop
xor
jmp
push
jb
testb
cltd
and
xchg
cmp
inc
ds
lea
or
xchg
ds
mov
lock
add
out
adc
mov
add
or
jl
stos
daa
js
shl
xchg
cmp
daa
scas
lods
mov
cmpsl
mov
pop
js
ljmp
dec
mov
push
and
xor
scas
cld
push
cmp
pop
in
ss
xchg
repnz
clc
mov
add
or
push
int3
cli
in
nop
call
cmpsb
push
rcl
inc
notb
mov
movsl
leave
je
pop
inc
popa
cmc
js
jg
pop
mov
in
pop
inc
das
ljmp
ds
shl
out
test
sub
cmp
repnz
scas
in
xchg
outsb
mov
iret
adc
xchg
mov
jecxz
iret
adc
leave
jno
aam
adc
xchg
inc
mov
adc
dec
sbb
imul
adc
xchg
mov
lahf
pushf
dec
cmpsb
pushf
push
hlt
adc
cmp
xor
cmp
pushf
mov
fwait
jne
test
in
stc
sbb
cmp
sub
mov
xchg
add
and
imulb
leave
mov
rep
cmp
pop
sti
pop
cwtl
push
shll
out
pop
ss
xchg
or
dec
imul
sbb
shlb
xor
insb
in
es
push
add
pop
xor
lods
sbb
sub
lods
mov
out
inc
test
dec
lret
xchg
push
cmc
stos
pop
push
andb
jg
mov
mov
xor
and
fstps
mov
xor
test
push
call
pop
jmp
hlt
adc
add
fs
mov
mov
xor
xchg
xlat
outsb
pop
sub
in
dec
jo
in
xchg
cmpsb
mov
xchg
add
push
cld
or
imul
sub
xor
xor
mov
cltd
test
ficomps
or
jo
scas
dec
enter
jmp
adc
jecxz
sub
arpl
inc
iret
testb
xchg
and
mov
jne
cmp
mov
cmc
outsl
xor
mov
sarl
dec
or
adc
mov
hlt
cmpb
leave
nop
aam
and
xchg
test
cwtl
lods
iret
mov
lret
mov
inc
int
aam
pop
ror
cmp
lret
jg
mov
leave
lds
mov
sahf
mov
ss
out
sbb
pop
or
inc
xor
dec
in
mov
push
dec
or
out
pop
or
fnstenv
popa
add
xchg
scas
fsubp
xlat
dec
jno
jle
jg
ret
cmp
xchg
insb
jb
mov
stos
sti
fisubrs
hlt
xchg
dec
jo
mulb
scas
sub
sbb
in
jge
test
inc
addb
cmp
mov
dec
outsl
sub
jge
xor
xchg
add
mov
notl
dec
mov
mov
dec
jbe
push
popa
lahf
add
rcrb
xorb
jnp
clc
mov
sub
in
pop
add
scas
jo
in
fisttps
int
cld
push
sub
inc
sysret
xor
scas
insl
sti
stc
jne
and
mul
loope
push
mov
es
fcmovnbe
lcall
adc
test
jb
popf
lds
pushf
jle
add
xor
add
lret
nop
pushf
lods
xchg
imul
pushf
lahf
and
mov
fiaddl
push
dec
mov
pusha
cmp
stos
pop
xor
push
icebp
stos
std
ljmp
mov
xchg
jg
cs
test
neg
loopne
adc
push
out
lock
test
push
adc
mov
dec
add
ret
pop
mov
add
scas
aas
imul
mov
xchg
dec
jbe
lret
push
call
fdivs
aad
repz
fs
pushl
shll
inc
pop
aaa
clc
sbb
xchg
flds
push
call
hlt
lods
into
lret
pusha
aad
lods
sub
fstpl
dec
mov
inc
xchg
cmc
dec
push
js
loop
jmp
negb
rcrl
pop
clc
mov
daa
mov
sarl
pop
push
pushf
sti
fidivrs
jo
or
icebp
icebp
inc
push
clc
outsl
in
xchg
sub
loop
cmp
xchg
dec
ficomps
adc
jns
mov
movsb
push
add
loope
daa
cltd
push
rorb
adc
lret
call
dec
gs
arpl
dec
adc
sbb
mov
repz
jmp
add
push
outsb
jecxz
mov
lcall
scas
sbb
add
sahf
bound
mov
daa
movsl
or
stc
pushf
adc
pop
xchg
pop
or
add
sub
bound
and
ss
pop
sub
adc
mov
scas
push
das
mov
inc
mov
int
outsb
bound
test
sbb
inc
xchg
push
fstl
fs
pop
repnz
cltd
cmp
mov
mov
and
cmp
adc
mov
jb,pt
loopne
test
cld
aam
scas
rcl
insl
lcall
or
adcl
test
cmpsb
jb
stc
sub
mov
jno
andb
bound
clc
push
addr16
int
sbbb
sbb
push
shll
mov
popf
addb
aad
mov
pop
imul
rorb
push
mov
mov
cmp
cmp
sbb
pop
xlat
xchg
es
shll
jne
sub
xchg
call
and
divl
and
xorl
add
cmc
push
mov
xchg
out
jnp
andb
jne
xchg
sbb
test
loope
ret
cmc
push
ja
fsts
jle
clc
lret
fiaddl
lret
jmp
in
fstpl
add
inc
mov
xchg
push
clc
adc
sbb
fnstenv
mov
push
inc
in
fisttpll
push
movsb
cmp
sub
and
xor
inc
add
mov
or
movsl
jns
aam
jl
lret
or
pop
fisubrs
cmp
pop
push
pop
sbb
sbb
add
mov
scas
lock
out
gs
jl
xchg
mov
push
cmp
pop
sbb
pop
in
shll
or
stos
lea
push
je
js
dec
daa
push
pop
or
inc
shrl
push
mov
inc
or
icebp
add
lret
movsl
lret
rorl
rcrb
cld
xor
test
sbb
inc
loope
cli
xor
arpl
and
dec
cld
sub
dec
and
and
jne
push
fcmovbe
cmp
ficomps
loope
jb
pop
stos
sbb
negb
sub
adc
shlb
and
loopne
mov
loop
mov
jle
mov
popf
xchg
loop
jle
push
xor
pop
push
ljmp
dec
je
sbbb
ss
push
xchg
int
mov
inc
fs
nop
test
inc
add
cmp
jno
scas
fsubrp
xor
fdivrl
fmull
pop
mov
mov
sbb
jl
incb
adc
mov
movsb
cmp
pop
sub
repnz
mov
lahf
stc
pop
dec
xor
les
adc
loop
pop
sub
xor
outsl
sti
imul
xchg
or
in
insb
mov
std
dec
ja
or
inc
repz
mov
xor
jecxz
enter
mov
lods
testl
pusha
mov
push
pushf
stos
xchg
loop
imul
ret
pop
sbb
adc
push
cmc
push
push
mov
lods
push
iret
ret
mov
push
icebp
dec
divl
adc
dec
fnsave
xor
repnz
mov
setno
psadbw
mov
adc
or
bnd
mov
or
rorb
mov
int
test
push
mull
into
loopne
iret
insl
enter
sbb
stos
insb
pop
in
push
jne
cmp
loopne
push
iret
push
es
clc
adc
xor
stos
sub
dec
adc
sbb
add
mov
addb
cli
repnz
sti
test
and
imul
sbb
push
and
cmpb
dec
adc
cmp
aaa
aas
dec
inc
mov
cmp
out
add
subl
mov
push
sbb
push
nop
popf
mov
gs
into
cld
mov
add
lret
div
cmpb
or
xchg
mov
rorl
mov
push
jmp
cmovae
inc
xchg
int
xor
out
jno
shlb
insb
gs
adc
iret
xchg
push
lret
add
int3
scas
stos
jp
mov
pop
adc
das
or
popa
adc
inc
je
dec
inc
daa
jecxz
pushl
adc
inc
xor
xchg
out
addr16
xchg
sub
out
jns
js
xlat
pop
cwtl
xchg
and
sub
or
push
jne
test
popf
jns
pusha
sbb
ret
scas
jb
pop
add
enter
mov
in
into
lods
push
mov
shll
inc
and
lds
add
fcomi
jae
mov
je
nop
loop
and
notb
and
rorb
lock
enter
cwtl
cs
mov
test
or
mov
call
push
lea
lock
and
inc
cmpsb
dec
pop
jne
mov
sbb
jmp
dec
or
sbb
dec
sbb
xlat
mov
pop
les
fildll
inc
popf
stos
pop
dec
lods
add
outsb
xor
sti
rorl
push
ret
imul
aad
push
push
add
sub
cld
sarl
fs
stos
jo
ljmp
hlt
lret
cld
int3
idivl
xchg
push
outsb
daa
and
std
data16
adc
out
sub
lea
xlat
xchg
dec
and
imul
mov
daa
pop
sbb
sar
mov
mov
adc
cmp
mov
pop
jo
push
ret
cmp
negb
lret
dec
daa
cmp
cmp
incb
xchg
pop
sahf
jmp
xchg
jmp
fcompl
out
pop
push
aas
leave
cmp
inc
or
sub
sub
cmp
or
sarl
jge
rclb
pusha
pop
adc
std
ret
stc
les
mov
sub
fnstcw
loop
adc
jns,pn
cmp
movsl
push
add
push
testb
pop
jb
loop
outsl
sbb
add
push
cmp
testb
aas
movl
movsl
jmp
cld
icebp
popf
jo
jnp
dec
xchg
stc
jmp
mov
inc
nop
cmp
orb
mov
pusha
sbb
jae
adc
mov
mov
inc
fdiv
aaa
fwait
pop
icebp
xor
lods
pop
pop
rorb
jle
fildl
sub
inc
pusha
pop
jmp
shrl
mov
cmc
or
cs
popa
mov
mov
mov
fs
add
pop
inc
adcb
insl
addr16
pop
ffreep
adc
in
test
test
fldcw
aas
imul
inc
sub
xor
dec
psrlw
mov
dec
fdivrl
call
es
or
or
mov
jecxz
fmuls
shlb
mov
cltd
mov
bound
push
scas
xchg
jno
jo
and
repz
adc
or
dec
sti
les
sbb
iret
ja
test
cmpsl
jb
and
cmp
inc
push
jo
mov
mov
pop
sbb
daa
xchg
in
fwait
es
mov
insl
pop
xchg
fcomps
cmp
jnp
fucom
pop
sub
ja
cltd
mov
cli
shll
imul
lea
and
inc
xchg
cmpsb
inc
in
cmp
pop
clc
out
and
xor
fs
mov
int3
push
mov
mov
jne
sub
je
xchg
lods
sbb
xchg
jle
xchg
fs
loopne
pusha
andl
or
stc
lret
mov
in
pop
lcall
vcvtpd2dqx
xlat
cli
out
push
dec
sub
and
add
out
lea
pusha
jne
dec
mov
inc
jno
sub
sub
out
int3
rcrb
sbb
jmp
ds
push
rcl
adc
push
xlat
inc
sbb
jbe
sbb
mov
arpl
clc
inc
inc
lock
aaa
xor
lahf
mov
gs
std
jne
and
mov
pop
shrl
xor
push
out
and
sub
scas
stos
xchg
pop
sahf
cmc
jle
xor
mov
sbb
mov
add
push
mov
xchg
arpl
imul
pop
fcmovne
add
dec
and
je
jne
push
cli
ret
lods
test
movsb
sbb
loopne
push
add
imul
xor
lock
clc
adc
imul
sbb
outsl
mov
mov
scas
fwait
aad
mov
movl
inc
outsb
mov
mov
das
dec
popf
mov
in
imul
dec
in
imul
sbb
rcr
in
ror
mov
das
pop
adc
fsts
push
fstl
les
adc
test
test
gs
lock
dec
icebp
push
fists
and
aas
out
daa
ret
mov
add
and
pusha
iret
sub
test
iret
cld
enter
hlt
sub
jbe
jp
shll
fs
andps
cmp
bound
mov
in
xchg
mov
cmp
push
push
jno
cmc
cmp
stos
into
sub
daa
push
xchg
and
nop
icebp
in
fldcw
divb
jno
cmp
aad
adc
sbb
sub
test
movsb
xor
adc
js
rcr
and
roll
mov
jne
hlt
daa
aam
xlat
js
pop
int3
repnz
xor
cmp
lods
rcll
mov
ds
fsubl
fsts
add
sbb
push
jp
adc
test
imulb
and
into
out
pop
and
aad
pusha
das
jmp
stc
movsl
mov
loope
jnp
dec
ds
cmp
push
push
pop
adc
cmpsl
xchg
fnstcw
mov
mov
push
sub
shr
fstl
inc
xor
popf
faddl
and
xchg
pop
sub
call
mov
xor
xor
fisttpll
addr16
lret
add
repnz
mov
enter
dec
push
sbb
push
mov
and
in
lods
mov
mov
data16
xor
adc
adc
cmc
aam
stos
inc
in
inc
nop
cmpsl
dec
dec
divl
inc
mov
leave
movsl
inc
sarb
dec
mov
push
push
loope
cmpb
out
fwait
bound
or
fisttps
adc
mov
dec
popf
sub
ss
ss
scas
idiv
push
mov
jno
jb
cld
sti
and
sub
bound
pop
cltd
test
test
bnd
pop
shll
icebp
adc
pop
shr
mov
xor
and
orb
jle
negb
ret
jp
in
jne
shl
out
mov
xchg
mov
movsb
inc
xchg
cs
data16
inc
inc
ss
bound
jb
xor
out
mov
ret
cmpsb
loop
xacquire
jbe
data16
inc
inc
ss
bound
jb
xor
out
mov
ret
cmpsb
loop
xacquire
jbe
data16
inc
inc
ss
bound
jb
xor
out
mov
ret
cmpsb
loop
lock
jbe
and
inc
inc
ss
es
repnz
jge
insl
dec
or
mov
mov
pop
pop
sbb
scas
inc
mov
push
out
je
push
mov
es
xchg
outsb
xchg
pop
mov
xor
data16
push
out
push
pushl
iret
es
xchg
push
out
or
pop
out
scas
mov
in
mov
ljmp
iret
fbstp
push
jno
sub
and
sub
sub
jecxz
iret
jbe
psubd
push
push
adc
int3
or
ret
test
out
or
scas
mov
adc
incl
push
and
mov
jae
sbb
imul
push
test
add
pop
jo
fbld
adc
jecxz,pt
out
xchg
lcall
lcall
leave
es
xlat
rol
shlb
lcall
cmpsb
pop
test
jo
xchg
ljmp
fcomip
rolb
div
mov
outsl
dec
daa
stos
mov
ja
cwtl
xchg
jmp
inc
adc
das
ret
jp
loopne
jle
das
mov
movsl
mov
jbe
data16
repnz
jle
ss
sbb
das
pop
aas
orb
pop
fisubrs
jg
dec
cmpsb
sbb
scas
xor
add
push
fidivrs
push
stos
pop
xchg
es
pop
subl
call
cmp
ret
and
add
pop
cld
jg
arpl
mov
xchg
dec
imulb
dec
out
or
jmp
cmp
sub
pop
ljmp
ss
es
das
aas
testb
pop
xchg
outsl
xchg
dec
cmpsb
pop
push
scas
inc
mov
push
out
push
pushl
iret
es
das
aas
testb
pop
xchg
outsl
xchg
dec
cmpsb
pop
push
scas
loopne
mov
cmpsb
pop
fstps
out
jl
cwtl
test
mov
jge
enter
adc
hlt
add
adc
sbb
mov
sbb
andl
mov
pop
ljmp
add
xor
mov
xchg
pop
icebp
mov
mov
jne
or
dec
les
sub
mov
leave
cli
ret
ds
and
fwait
mov
xchg
into
mov
inc
push
in
xchg
inc
mov
push
iret
vpunpckhbw
dec
cld
inc
insl
adc
push
sub
jle
movq
cmp
xchg
push
in
pop
xor
add
cmp
adc
scas
xlat
in
xchg
sbb
cmpsb
jl
inc
sbb
cmpsl
es
sub
divl
dec
cltd
inc
fwait
pop
outsb
cmp
cmpsb
sub
cli
sub
adc
mov
repnz
inc
mov
popf
movsb
lds
pop
mov
inc
cwtl
rcrb
inc
dec
add
jmp
idivl
inc
je
adc
mov
mov
or
and
or
gs
jns
mov
xchg
repz
cmp
pop
xchg
cwtl
xor
pop
mov
jp
imul
jne
xor
jno
pop
sub
or
cmpsl
icebp
or
out
or
stos
call
jg
nop
in
pop
rclb
xchg
cmp
pusha
mov
addr16
fs
pop
cmp
ds
scas
les
push
inc
mov
or
fsubrs
jbe
sbb
stos
xchg
mov
adc
pop
out
push
aaa
inc
sbb
fistps
test
shl
enter
movsl
dec
sbb
mov
sbb
mov
aad
das
adc
xlat
and
adc
scas
cwtl
sbbl
int3
lahf
push
mull
push
lret
xchg
xchg
mov
pop
push
mov
dec
push
dec
inc
inc
outsb
cmp
cmp
push
fxch
sbb
imul
out
sub
dec
orb
and
push
push
lock
inc
sub
out
adc
mov
in
ja
xchg
mov
clc
in
outsb
jnp
mov
mov
and
ds
pop
movsb
popf
jb
sbb
hlt
xor
push
frstor
test
cmp
je
and
icebp
mov
out
popf
into
and
mov
stos
jge
fwait
cmpsl
pop
mov
test
mov
cmp
xchg
ss
sub
xchg
std
sub
cmp
add
fistpll
xor
aaa
and
es
mov
dec
inc
sbb
movups
dec
jp
xor
out
mov
stos
roll
jmp
mov
jmp
lds
daa
clc
sbb
mov
dec
mov
aas
push
fcmovnb
outsl
bound
cmp
inc
shlb
jo
movsl
mov
pusha
mov
movsl
pop
daa
lahf
sbb
dec
and
scas
int
pop
add
sbb
dec
shrl
pushf
mov
jl
and
mov
xor
int
pushf
jmp
mov
and
mov
dec
outsb
mov
mov
aam
sti
cmp
popf
shll
push
std
cmp
nop
imul
or
push
push
jecxz
out
adc
dec
push
mov
mov
adc
mov
test
fcoms
cs
sbb
push
xor
je
dec
test
ficompl
mov
cmp
cmpsl
fdecstp
lcall
cltd
test
gs
xchg
jno
scas
mov
fstpt
outsl
pop
inc
mov
aam
aad
test
mov
mov
push
divb
add
xor
mov
in
jo
aaa
inc
gs
inc
cmp
aas
int3
pop
test
or
dec
outsb
inc
shll
and
sub
mov
cmp
jnp
jmp
loop
sti
dec
push
dec
lds
mov
les
adc
enter
lret
fcmovu
or
pop
insl
cmp
dec
sbb
stc
fcmovnbe
sbb
xchg
pop
rcr
mov
ja
lea
adc
ret
call
insb
and
pop
fwait
pop
out
mov
xor
loope
out
mov
xchg
jns
shrb
sbb
jg
pop
cmpsb
cmc
inc
pop
aam
lcall
push
rol
out
cld
mov
stc
sub
and
jbe
mov
cmp
cmp
scas
adc
cld
dec
idivb
mov
shlb
push
mov
sbb
mov
push
mov
or
lds
pop
out
mov
nop
xor
scas
mov
dec
push
aad
jl
mov
pop
icebp
xchg
jle,pt
pop
mov
pushf
in
pop
dec
fstpt
jp
ja
insb
mov
and
jle
pop
mov
cwtl
arpl
pop
mov
jge
jecxz
mov
roll
in
call
stc
sub
mov
mov
fildl
loopne
scas
les
xlat
sahf
jo
popa
add
push
out
js
sbb
mov
mov
test
fs
sub
imul
sub
and
bound
outsb
cmc
cmp
mov
out
pusha
call
outsb
stos
enter
xchg
cmp
fimull
jno
insb
pop
js
pop
inc
push
out
sub
and
sbb
mov
aam
mov
push
mov
test
cmp
xor
mov
xor
sarb
shr
in
jb
int3
neg
icebp
ss
lock
jmp
mov
adc
inc
in
push
mov
mov
lcall
lock
pop
popf
movsl
fisttpl
scas
stos
xchg
ja
jne
inc
sbb
xor
sbbl
pop
pop
idivb
sub
cld
push
lods
stos
repz
adc
mov
or
and
test
inc
jge
enter
ss
jle
or
push
negb
lret
sbb
xlat
rcrb
leave
jl
xchg
pop
mov
cmp
insl
mov
mov
aas
ja
jp
imull
dec
adc
mov
adc
out
adc
cmpsl
aad
sub
jno
mov
and
clc
xlat
mov
je
or
fidivrs
out
mov
sbb
cmp
fildll
out
mov
sbb
xlat
loopne
loopw
dec
mov
lods
aam
pop
popa
sub
mov
je
add
xchg
sahf
and
cwtl
adc
cmpsl
xchg
lea
push
call
sub
into
xor
mov
pusha
jg
jp
cli
fsubr
pop
push
inc
aam
test
xor
int
pop
mov
popf
jbe
fsubrl
adc
negl
mov
cli
mov
je
mov
dec
ror
out
pop
movsb
jge
test
inc
xor
gs
addr16
stc
mov
cmc
pop
aam
sub
jmp
add
rorl
sub
movsl
mov
and
mov
outsl
ret
pop
push
add
mov
test
loope
sbb
addb
fdivrs
cs
cwtl
mov
pop
push
dec
cmp
mov
adc
imul
cltd
in
pop
icebp
cmp
jp
push
jge
mov
dec
shrb
or
add
dec
jne
out
xchg
loopne
out
adc
mov
push
fiadds
inc
mov
scas
push
pop
cmpsb
jnp
push
pop
sahf
adc
push
popf
sahf
lods
lahf
mov
cmpsb
imul
sbb
adcl
shrb
enter
push
pop
add
fsubr
mov
adc
push
xchg
add
sub
sti
leave
mov
jnp
insl
cmp
fdivrs
shlb
sbb
dec
repnz
int3
dec
arpl
and
xor
xor
dec
out
std
movsb
sub
push
xlat
xor
leave
jns
mov
pop
ljmp
pop
ret
adc
pop
arpl
xchg
mov
repnz
pop
movsl
repnz
push
data16
pop
lea
out
stc
mov
jne
cmp
cmp
icebp
add
pop
push
test
or
cmp
rorl
cmpsl
and
jg
outsl
ret
enter
jge
movsl
sbb
mov
inc
push
xor
imul
xor
jl
das
shll
loope
xor
xchg
mov
fistl
rcll
ds
lcall
das
pop
inc
jg
loope
rolb
inc
sbb
add
adc
popa
stos
or
daa
sub
outsb
pop
repnz
inc
cmp
inc
ds
cs
aam
or
add
mov
sub
outsb
mov
pcmpeqw
add
xchg
or
cmp
push
adc
pusha
and
addr16
inc
call
pop
inc
xchg
pop
sbb
mov
dec
rcrb
xor
inc
negb
pop
push
popa
mov
sarb
aaa
mov
cmp
clc
add
dec
je
jp
aas
aam
loope
inc
xchg
fwait
add
mov
jo
sub
jbe
push
sbb
lret
fiaddl
scas
xchg
call
lds
jns
sub
fidivrs
daa
xchg
dec
or
mov
lret
inc
hlt
lock
mov
jle
fistpll
imull
jne
sbb
and
sub
fimull
pop
xor
mov
mov
jno
les
loope
enter
sahf
or
mov
cmp
scas
dec
loope
add
imul
jbe
pop
popf
inc
stc
sub
push
cltd
pop
andb
icebp
ljmp
fadd
and
lods
inc
or
movl
jle
aas
ds
mov
or
adc
jno
sbbb
push
xor
je
inc
adc
aas
movsl
dec
dec
jl
xor
es
inc
mov
xchg
into
shlb
shll
cmpsl
fistl
scas
aad
jl
add
cwtl
bound
jg
imul
daa
repz
add
push
lds
idiv
cmpsb
sbbb
or
push
jno
cmp
arpl
movsl
loopne
lea
test
ss
movsl
repz
loop
mov
pushf
sub
adc
lcall
test
or
scas
repz
lret
rorl
adc
push
repnz
inc
in
dec
out
das
in
lret
aas
xchg
cs
xchg
cmp
adc
incl
cmpsb
enter
or
xchg
lret
or
mov
mov
stos
xchg
dec
std
xor
pop
cmpsb
pop
and
or
js
xlat
mov
xor
xchg
pop
imul
fcoms
stc
lret
arpl
outsb
fbld
sub
jp
inc
mov
lods
pop
in
jns
push
xor
adc
and
jo
stos
sub
mov
rcrb
stos
pop
push
fisttps
cmp
jno
lea
ss
pop
and
pushf
outsl
shr
popf
mov
loopne
and
sbb
dec
jbe
xchg
sti
jmp
mov
add
sti
xor
and
pop
mov
dec
faddl
mov
xchg
movsl
push
cmp
int3
pop
sub
xchg
sti
movsb
inc
jbe
pop
mov
cmp
icebp
mov
jb
mov
ret
sbbb
fidivs
fnsave
push
adc
jmp
mov
xor
dec
lret
push
repz
lock
mov
jbe
sub
xor
pop
aam
xchg
pop
sub
scas
outsl
loopne
xor
xchg
out
test
or
in
xor
inc
ljmp
inc
ret
sahf
mov
in
and
cmp
xchg
jae
insl
and
insl
std
fcoml
mov
sbb
push
or
popa
sbb
adcl
cmpsb
pop
xchg
jmp
jle
aam
xchg
mov
pop
mov
push
addr16
pop
xchg
movsb
shrl
push
adc
repnz
inc
push
ffreep
xor
xor
adc
add
insl
cmp
mov
or
enter
xchg
js
xchg
jmp
push
push
sub
add
mov
mov
fiadds
adc
jg
pop
inc
icebp
push
outsl
jp
arpl
inc
jg
inc
push
imul
mov
fistpl
out
jl
mov
jp
and
ja
xor
mov
imul
pop
jne
mov
and
fwait
mov
lds
clc
jae
jmp
mov
sub
je
clc
std
push
xchg
call
mov
movsl
cmp
add
pop
mov
fcoml
aaa
ss
sub
ds
fsubrs
movsb
mov
mov
mov
mov
and
imul
mov
or
cmpsb
pop
insb
int
xor
popf
fistl
pusha
xor
push
mov
flds
in
sbb
jecxz
cmpl
add
dec
stos
xlat
fstl
jo
sub
push
or
jge
in
je
mov
mov
lods
pop
xchg
inc
mov
je
sbb
and
sbb
imul
ljmp
sbb
inc
aad
bound
lods
leave
daa
outsl
fcomps
push
repnz
mov
xchg
jno
gs
mov
pop
push
cld
xor
add
jl
sbb
dec
cltd
cmpsb
enter
inc
insl
jmp
test
bound
mov
imul
mov
sbb
xchg
adc
mov
out
sub
in
jnp
push
jbe
sub
pop
repz
repnz
std
lret
fbstp
or
and
sbb
scas
repz
mov
cli
gs
mov
jbe
fldl2t
orl
lds
dec
jmp
jne
cs
loop
pusha
mov
mov
jg
fidivl
jecxz
fsubrs
imul
addr16
cmp
sti
lods
adc
pop
or
and
sub
repnz
rcll
adc
inc
inc
call
inc
pop
inc
rcl
jp
enter
or
das
nop
mov
dec
xchg
xor
dec
fisubrl
mov
rcrb
mov
mov
outsb
jb
int3
inc
adc
lods
mov
call
xchg
loopne
add
subb
in
lods
or
and
mul
sub
ficompl
mov
addb
dec
and
shrb
or
les
xchg
fsubs
repnz
daa
pop
add
pop
pop
xor
daa
rcrb
or
mov
push
dec
push
push
idivb
pusha
pop
cli
aaa
cwtl
pop
fisubl
imul
popa
daa
mov
pop
mov
or
dec
mov
jmp
scas
jnp
jmp
test
and
imulb
inc
ljmp
cmp
adc
movsl
lods
or
dec
mov
cmp
sbb
inc
mov
arpl
es
gs
push
lods
jle
dec
pop
dec
leave
popf
in
mov
cmc
negl
les
clc
sub
xchg
mov
jae
test
test
mov
movsb
jp
adc
and
sahf
pop
inc
imul
mov
sbb
jno
xchg
push
cmpsl
loope
fs
ss
jg
xor
mov
in
imul
shll
inc
cld
or
and
dec
xorb
push
in
mov
sbb
mov
ljmp
jns
lock
xor
mov
inc
mov
addb
dec
sbb
stos
sbb
sar
and
dec
sub
cmpsb
dec
pop
or
cmc
aas
sub
out
jp
sbb
dec
adc
lcall
stos
lock
mul
fs
jo
cmp
ret
push
js
push
mov
xor
mov
mov
hlt
xor
cld
push
xor
inc
mov
pop
and
jecxz
or
lods
jecxz
adc
mov
mov
and
xor
ja
jmp
jg
or
popf
pop
xor
lds
movsl
out
je
dec
mov
cmpb
call
test
sbb
sub
sub
pop
mov
adc
fwait
inc
pop
xchg
dec
push
outsl
das
imul
dec
fcmove
xchg
decb
jmp
in
xorl
sbb
adc
es
daa
adc
rcl
jnp
les
add
out
ja
dec
insb
xchg
push
push
fistpll
pop
scas
aam
loop
outsl
push
sbb
cmp
enter
jne
push
les
insb
ss
jbe
sbb
jne
add
pop
in
outsl
cwtl
loop
jge
mov
mov
sub
and
je
mov
dec
mov
push
xchg
les
js
cmp
leave
cmp
loop
mov
shll
ss
and
aad
xor
or
xor
or
push
sbb
cmpsb
repnz
xchg
pop
dec
movsb
pop
call
roll
dec
enter
mov
mov
add
shlb
jb
or
sbb
adc
xchg
into
test
cltd
enter
jbe
push
leave
and
xchg
addr16
adc
mov
in
push
pop
jne
fnsave
lea
push
rcl
movsb
and
mov
mov
mov
push
jb
fistpl
xchg
adc
arpl
inc
xchg
jnp
xor
ret
jae
call
xchg
pop
lods
mov
aaa
mov
xsha1
cmpsb
dec
cltd
dec
add
clc
hlt
roll
imul
sub
or
enter
sbb
xchg
adc
push
jb
sbb
fcomip
cmp
jno
call
xor
faddl
xchg
inc
out
xlat
jno
xlat
inc
pop
lock
mov
or
and
mov
inc
test
cmpsl
jle
mov
out
pusha
push
lahf
xor
dec
mov
add
aam
ret
sub
mov
orl
addb
rcrl
xchg
jbe
test
sarl
rcll
mov
mov
movsl
scas
enter
cmpsl
sub
cmp
sub
rorl
sub
aad
cmp
jno
popf
mov
leave
ret
mul
xchg
cmovo
add
xchg
mov
mov
jp
dec
mov
ffree
iret
int3
pop
cmp
test
out
add
sbb
scas
aad
test
pop
sbb
cmp
test
aaa
shl
sub
cmp
repnz
popa
rorb
xor
stos
xlat
adc
bound
dec
mov
cmpsb
sub
sub
rcll
fimull
daa
jae
movsl
insb
insb
incb
push
mov
pop
mov
out
dec
mov
mov
frstor
xchg
lds
add
inc
xchg
mov
popa
add
xchg
sbb
mov
mov
xchg
mov
add
push
or
adc
clc
add
jno
lahf
cs
and
push
mov
int3
mov
aam
push
lock
cmp
xchg
aam
mov
xchg
adc
ret
popa
or
xchg
dec
sub
sahf
mov
xchg
push
adc
out
sub
push
pop
lcall
add
push
int3
leave
mov
push
push
pop
outsb
inc
xor
mov
sbb
ffreep
out
fistps
test
jl
out
xchg
add
pop
inc
adc
das
arpl
shll
push
ret
xchg
mov
xchg
shl
push
lods
fcomi
pop
push
repz
in
xor
cmpsb
mov
push
jnp
fcompl
cltd
cli
add
ret
xor
ja
xchg
and
or
mov
adc
add
addr16
sub
sbbb
in
ficoml
in
pop
out
sub
icebp
cmpsb
jo
ss
test
mov
cwtl
mov
xor
add
cmpsl
pop
add
mov
orl
mov
je
stos
add
or
fsubrl
fcompl
push
jo
addr16
repnz
sbb
mov
or
les
aas
inc
and
adcb
test
mov
daa
int
cmpsl
mov
cli
pop
pop
test
out
pushf
add
ret
add
jle
repz
add
jge
daa
mov
xchg
ja
inc
sub
lcall
enter
scas
cmc
out
mov
add
xchg
lret
rcl
xor
out
xchg
jmp
cmpsb
sub
loop
repz
jmp
aad
push
or
xchg
or
clc
add
mov
in
aam
pusha
loop
test
outsl
stos
push
push
insb
cmp
or
push
cmp
int3
out
sbb
shlb
cltd
in
pop
pop
xor
adc
mov
mov
inc
rcrb
lret
sbb
icebp
pop
mov
les
mov
fnstcw
das
adc
popa
dec
sbb
mov
xor
cli
leave
ret
popl
sbb
repz
divl
lcall
mov
shl
shr
mov
pop
movsb
fisubl
inc
xor
imul
in
xchg
adc
test
cmp
jo
dec
add
push
xor
mov
insb
xchg
mov
add
push
out
push
pushl
iret
es
das
aas
testb
pop
xchg
outsl
xchg
dec
cmpsb
pop
push
scas
inc
mov
push
out
push
pushl
iret
es
das
aas
testb
pop
xchg
outsl
xchg
dec
cmpsb
pop
push
scas
jbe
push
data16
xchg
push
pushl
iret
out
das
aas
push
pop
xchg
outsl
xchg
jg
dec
dec
pop
inc
scas
sbb
push
out
push
pushl
iret
cmpsb
pop
das
cmp
loope
push
orb
mov
jp
push
adc
arpl
mov
lret
and
xor
bound
xchg
jp
push
sbb
or
loop
xchg
and
xor
and
xchg
cld
or
push
or
ljmp
mov
adc
fnstenv
subb
xlat
sbb
pop
ds
sub
jmp
loopne
jb
mov
fwait
sub
or
push
dec
ret
cmc
adc
aaa
inc
add
inc
sbb
or
ljmp
inc
adc
xor
mov
dec
mov
xor
sbb
cmc
mov
iret
std
cltd
inc
ljmp
lods
scas
mov
fists
stos
aaa
in
mov
sbb
add
adc
filds
das
test
repnz
mov
add
jp
fucomp
sub
inc
mov
imul
dec
sarb
cmp
aam
xor
jp
outsb
xchg
stos
mov
sarb
loope,pt
pushf
je
jg
sub
mov
push
mov
sub
in
adc
ret
ret
mov
loope
mov
loop
mov
xchg
adc
push
iret
add
sbb
aam
aad
repnz
pop
cmpsb
or
cmp
sub
fiaddl
lret
and
xor
bound
xchg
jp
push
sbb
or
cmp
sub
fiaddl
lret
and
xor
bound
inc
rolb
xor
icebp
pop
mov
jnp
fldl
push
and
inc
aad
sbb
shrb
sbb
jb
test
xor
loopne
sti
inc
es
mov
jo
lock
shrl
add
xchg
es
lahf
pop
out
in
test
jmp
sub
cmp
addb
gs
bnd
push
cmp
or
pmaddwd
loopne
stc
lahf
ss
sbb
in
clc
daa
test
fistl
aas
sbb
fdivrs
adc
push
int3
test
jo
inc
inc
jb
negb
fidivrs
imul
sbb
push
adcb
scas
sub
ljmp
pop
sbb
aas
shlb
dec
addr16
arpl
call
je
lahf
sbb
enter
push
jbe
movsl
cmpl
test
mov
shr
adc
and
mov
cs
push
jecxz
mov
jle
mov
aas
mov
pop
mov
loopne
subb
leave
inc
cmp
lcall
pop
inc
lret
jb
pop
inc
cmp
hlt
sti
inc
into
cmpsb
or
adcl
push
aaa
or
ss
mov
mov
cwtl
adc
test
cmp
shl
into
inc
or
call
xchg
jp
repnz
popl
sahf
add
clc
or
push
rcl
in
cmc
mov
jno
and
ret
or
movsb
outsb
mov
cmpsl
or
mov
fsubrl
rolb
rcrb
jae
sub
das
and
push
cmp
or
inc
jp
in
aad
cli
lret
push
stc
adc
and
rorb
jnp
jne
xchg
xchg
adc
or
or
sti
cmp
test
pop
daa
and
addl
jmp
lods
cmp
fisubs
sbb
testb
das
xchg
mov
or
xor
lods
xchg
mov
push
int
inc
mov
dec
add
in
out
out
push
cmp
pusha
mov
dec
inc
jl
xchg
popa
std
add
cmp
lret
pop
mov
fwait
sub
mov
cmp
and
and
mov
and
scas
sbb
loop
mov
ret
pop
sahf
in
call
inc
lods
sub
add
dec
stc
mov
jae
xchg
jecxz
adc
add
in
and
mov
lds
lahf
mov
icebp
scas
enter
popf
int3
push
data16
add
cmpb
rcr
andb
dec
in
push
js
push
adc
inc
sarb
adc
ret
pushf
pop
lcall
pop
mov
hlt
mov
pushf
pop
stc
push
stc
jno
shl
add
js
aad
lret
je
test
sti
shl
dec
addr16
aam
dec
pop
xchg
xchg
out
fcmovne
and
mov
pop
mov
or
push
add
clc
repnz
sbb
mov
or
scas
fs
mov
aad
or
fistps
pop
arpl
mov
pop
push
out
cmpsb
and
jl
cmc
pushf
cld
mov
mov
rorl
mov
dec
leave
push
jg
pop
dec
sub
mov
jp
or
sub
fisttps
adc
mov
or
lret
hlt
lcall
inc
imul
inc
dec
mov
xor
xchg
or
push
test
test
mulb
sbb
je
pop
out
mov
adc
or
inc
dec
call
jb
ja
in
std
or
movsl
pop
jg
mov
sub
dec
inc
mov
stos
cmp
pop
fisttpll
insl
or
hlt
cmp
cmpsb
outsb
push
jmp
rorb
jg
xor
arpl
ja
push
ja
jne
push
js
xor
push
sahf
push
pop
mov
movsb
xor
sbb
inc
cli
and
fadds
pop
daa
mov
inc
movb
inc
rorb
xchg
xor
or
insl
or
mov
push
push
mov
outsl
add
lret
mov
out
adc
stc
add
mov
nop
push
rol
mov
sarl
pop
repnz
ljmp
rcll
add
repnz
shr
shrb
movsl
in
cmp
ss
movsb
lock
push
fldcw
xlat
add
jmp
or
test
inc
adc
in
add
jecxz
push
mov
aam
and
ret
xchg
clc
jecxz
adc
fs
fisubs
insl
call
jno
loope
fcomps
into
adc
test
inc
inc
negl
pop
or
cltd
cmpsb
cmp
add
xor
stos
std
je
ror
movsb
push
clc
test
push
sti
xor
mov
fucomip
addb
fdivs
adc
push
mov
mov
cmp
outsl
jo
cmpsb
inc
rcrb
pop
insl
call
pop
jl
data16
inc
arpl
mov
push
mov
nop
push
pop
and
mov
decb
xorb
fstps
dec
or
xchg
ret
loopne
mov
ret
mov
cmpsl
mov
or
cs
cld
mov
xchg
ljmp
and
gs
lret
cmpsl
cli
mov
ss
sub
mov
mov
cmp
in
cmpl
pop
xchg
cmp
stos
xlat
and
mov
arpl
imul
addr16
stos
sbb
xchg
push
sti
and
cld
add
imul
ja
and
lds
push
fmulp
es
push
cmp
aas
lods
and
int
hlt
sbb
adc
mov
stos
xchg
jle
mov
pop
divb
fldenv
add
mov
add
xchg
mov
or
out
or
sbb
dec
mov
xor
scas
pop
arpl
fimull
fcmove
push
and
inc
sbb
mov
mov
loopne
cld
sbb
xchg
pop
xchg
mov
adc
out
xor
jmp
xchg
int3
imul
insl
push
xchg
les
pushf
movsb
mov
insb
sub
mov
sbb
daa
orl
mov
jmp
cs
mov
xor
cmp
mov
fwait
scas
push
adc
cmp
test
jne
imul
fiaddl
cs
daa
sub
arpl
movsb
in
cmc
jg
cmpsl
sti
jno
xchg
das
xchg
out
xchg
addr16
xchg
pop
jbe
xchg
imul
dec
mov
add
or
lock
pop
inc
and
push
sub
and
cld
loop
push
ljmp
rcrb
in
fnstcw
mov
or
pop
stos
and
loop
testb
sbb
std
sbb
xor
or
js
and
push
int3
add
cmc
jnp
loope
pop
push
ret
mov
ljmp
adc
mov
mov
mov
lret
push
jecxz
adc
inc
lods
in
pop
fstps
xor
xchg
repz
shl
inc
call
outsl
mov
adc
inc
mov
call
inc
adc
scas
sti
int
ficompl
sub
imul
sbb
and
jge
lea
and
cmc
push
call
add
inc
xchg
cmp
fbld
enter
lods
repnz
or
mov
and
stos
pop
sti
rcrl
addr16
push
je
jp
jns
aas
mov
lods
loopne
cmp
iret
out
adc
repz
shll
dec
xchg
in
sub
dec
in
fmull
sti
sbb
mov
insb
and
xor
insl
pop
cltd
imul
icebp
popa
mov
jbe
push
jge
gs
repz
cwtl
mov
add
or
sahf
sbb
adc
dec
sbb
int3
jae
es
add
xchg
out
cmp
add
xchg
pop
idivb
mov
pop
mov
ret
testl
push
cs
adc
jmp
inc
addl
test
dec
fidivrl
xchg
cwtl
push
call
dec
add
inc
dec
cltd
shlb
out
pop
xchg
jbe
in
jne
mov
mov
mov
cmpsl
inc
push
aad
les
xchg
xor
dec
mov
adc
jl
mov
fcmovnb
ficoml
in
insl
out
adc
pushf
cmp
movsl
pop
dec
inc
scas
inc
sar
mov
jbe
inc
pop
shl
fwait
cmp
dec
mov
sbb
or
adc
in
cltd
fistl
xorb
stos
addr16
mov
pop
lahf
add
subl
pop
movsb
stos
sbb
je
out
insb
icebp
inc
jg
out
push
add
or
pop
xchg
inc
outsl
pop
or
mov
mov
popf
pop
push
dec
sub
stos
mov
xchg
mov
and
add
sub
ret
cmp
test
or
dec
jle
movsl
mov
popf
sub
sbb
sub
cmp
mov
sahf
and
lret
push
fmuls
jne
mov
clc
and
arpl
cmpsl
jle
lahf
inc
imul
aaa
mov
dec
fldln2
sbb
mov
pushf
cs
inc
pushf
ror
test
add
out
sub
push
sub
dec
lret
jo
je
sub
mov
push
fistpll
sahf
jge
dec
xchg
dec
mov
adcl
inc
clc
add
lds
and
pop
sub
add
sbb
sub
xor
stos
adc
or
pop
push
out
lea
push
jae
push
aaa
scas
popf
in
pop
mov
ret
pop
cmp
stc
lret
jns
jecxz
ljmp
cli
dec
adc
sub
lods
mov
jl
dec
sbb
cltd
pop
pop
add
inc
ss
add
fwait
sbb
out
out
mov
mov
mov
lret
ja
jmp
mov
test
pop
pop
xchg
aad
jp
in
popf
std
push
in
gs
call
into
or
mov
mov
cmpsb
adc
cli
icebp
inc
bound
mov
push
dec
inc
ret
gs
jg
subb
insl
andb
jl
outsb
cmp
lods
iret
lahf
mov
data16
add
popa
out
push
sahf
xrelease
jecxz
jecxz
std
sarb
js
jecxz
jle
sub
mov
jp
sahf
or
fisubs
xor
out
call
data16
fdivs
mov
adc
in
mov
sbb
lahf
cltd
inc
insl
xchg
xor
cltd
inc
pop
mov
lods
dec
in
scas
mov
sbb
xor
rcrb
and
sub
das
lock
divl
sbbl
icebp
aam
push
inc
jecxz
mov
adc
js
xor
pop
cwtl
cmc
cltd
scas
pusha
xor
in
loopne
jmp
fcoml
pusha
outsl
fisttps
push
scas
pop
aad
cmp
sub
cwtd
jge
std
mov
cmp
cwtl
jns
test
mov
loope
stc
cmp
sti
mov
add
cmp
xorb
in
cli
clc
mov
sub
xor
in
jo
push
mov
gs
xor
dec
test
xorl
or
dec
nop
scas
dec
sti
mov
and
add
cwtl
fistpl
sahf
mov
aas
pop
nop
es
mov
fwait
or
stc
inc
int3
ret
fidivrs
lods
jl
out
xor
or
jno
cmp
mov
out
or
xchg
push
jle
xor
or
mov
cmp
lcall
sahf
push
in
repnz
cs
or
imul
push
lar
jo
push
fwait
jmp
lock
insb
shll
in
and
or
and
outsl
scas
addl
inc
out
add
icebp
and
xchg
test
push
imul
cmp
sti
add
scas
fs
sti
cmc
add
pop
sub
mov
icebp
in
fwait
cld
mov
mov
dec
xor
mov
mov
std
push
push
push
and
jmp
mov
inc
and
xor
bound
cmpsb
jle
cmc
mov
imul
loopne
mov
loopne
sbb
jecxz
adcl
icebp
xorps
sahf
add
aas
xchg
pop
icebp
pop
jne
add
inc
xchg
lds
fimuls
jno
test
inc
jne
inc
aaa
dec
in
add
filds
xchg
dec
repnz
adc
jae
sub
sub
ljmp
movsb
das
adc
mov
cwtl
cmpsl
or
cmp
lea
fists
sub
sahf
mov
popa
std
xor
mov
inc
add
fisubs
adc
mov
adc
xchg
pop
cmp
test
add
cmp
xchg
mov
vrsqrtps
cmp
xchg
pop
inc
pop
mov
inc
fsubrs
fdivs
jne
js
lods
push
xor
xchg
pop
push
std
dec
mov
dec
data16
add
mov
mov
mov
icebp
pop
cs
lock
mov
popa
xchg
jnp
pop
inc
add
out
or
adc
dec
adc
jns
cld
bound
xlat
adc
mov
mov
fnstcw
mov
xchg
out
shrl
pop
dec
les
mov
ss
aaa
push
sbb
push
cmp
fldt
shlb
mov
jbe
xor
xor
or
roll
xor
dec
push
call
out
enter
mov
repnz
push
mov
arpl
out
mov
jecxz
repnz
ficoml
addb
push
jbe
dec
add
jecxz
pop
arpl
outsl
enter
cltd
rclb
fsubl
jbe
mov
test
call
add
xchg
push
add
push
mov
daa
sub
mov
pusha
jmp
and
mov
iret
add
push
dec
orl
pop
xchg
in
xor
cli
mov
outsl
push
sub
adc
mov
ret
out
adc
push
sub
mov
lcall
fs
pop
mul
xchg
outsl
sahf
push
or
hlt
pop
cli
es
push
add
shll
sub
sub
mov
pushf
in
loopne
sub
or
lock
icebp
clc
or
mov
xor
cmp
aam
mov
outsb
fwait
insb
cld
and
and
or
int
ret
mov
roll
out
push
push
in
or
mov
loop
mov
mov
push
mov
jb
pop
js
lret
push
add
lea
sarl
sub
stc
mov
push
cmp
sbb
or
mov
adc
sub
inc
xchg
jl
or
jbe
mov
or
xchg
mov
jb
mov
xchg
je
inc
mov
int3
mov
lods
sub
jnp
or
lds
aaa
xchg
sub
gs
imul
mov
and
mov
pushf
popa
push
test
fldt
xchg
push
mov
or
adc
sbb
dec
ss
adc
sarl
mov
aas
in
xchg
arpl
jp
xor
xchg
xchg
xor
repz
sbb
idivl
fisubrs
inc
lods
out
push
sarl
adc
cwtl
mov
and
addb
cmp
stc
stos
out
addb
outsb
push
bound
sbb
nop
cmp
clc
pop
add
xchg
add
or
shlb
js
sub
push
pop
data16
xor
rcr
jle
mov
in
subb
pop
movsl
dec
jbe
in
and
or
gs
jecxz
pop
imul
mov
or
fcmovnbe
adc
inc
or
jne
pop
insb
push
repnz
lods
ret
int
lahf
pop
sub
cli
aam
in
nop
aam
call
bound
dec
mov
mov
sbb
mov
leave
shl
inc
push
icebp
mov
fcmove
test
xchg
mov
sbb
jge
xchg
sub
xor
mov
cld
or
mov
ljmp
daa
cmp
lock
or
fwait
sarb
repnz
out
cwtl
add
mov
and
adc
push
pop
iret
mov
ret
orl
ds
push
mov
push
jge
adc
inc
dec
fs
ds
fldt
push
pusha
out
xchg
repnz
mov
pusha
xchg
repz
sbb
adc
cmpb
fisubrl
test
xchg
insb
cli
and
mov
mov
adc
jge
dec
fs
sub
icebp
pop
xchg
aam
lcall
f2xm1
fmull
push
jp
fwait
jb
push
sahf
outsl
sub
gs
sub
nop
xchg
addr16
inc
mov
and
icebp
mov
fistl
dec
bound
mov
into
sub
loopne
pop
int3
pop
lds
enter
xchg
jecxz
mov
into
push
push
insb
pop
addr16
add
inc
int3
and
inc
nop
fsubrl
sub
pop
test
jno
aaa
dec
add
dec
push
xor
xchg
push
xchg
xorb
mov
push
sub
dec
in
and
ds
ret
ret
dec
nop
xchg
and
jno
mov
cmp
or
mov
in
jp
neg
xor
pop
clc
les
mov
pop
std
sub
add
outsb
pop
jl
mov
and
xor
in
lea
mov
adc
lcall
sbb
dec
or
lds
xor
or
jne
notl
and
ljmp
inc
cwtl
pop
shr
add
rol
adc
out
jae
fdivl
and
mov
mov
js
add
bswap
fstl
cmp
test
jecxz
scas
pop
xor
ljmp
outsl
mov
sub
js
flds
xchg
lcall
mov
xchg
and
pop
sbb
push
mov
mov
int
xor
out
sbb
lea
mov
sbb
incl
addl
add
in
js
xchg
sbb
pop
loopne
aam
cmpsl
mov
ds
mov
pop
lods
dec
mov
and
mov
pop
xchg
push
jae
ss
cltd
filds
xchg
pushf
adc
sub
push
cmp
mov
inc
pop
cmp
mov
xor
rcr
jno
cmpsb
pop
cltd
jb
inc
sub
rcl
pop
push
sbb
cmp
gs
incb
mov
cs
es
inc
sbb
out
adc
loop
sti
dec
or
dec
test
addl
xchg
sbb
adc
nop
push
enter
aaa
shl
fidivl
jb
out
jne
mov
xchg
push
jne
sbb
pop
push
mov
inc
sbb
jl
dec
mov
push
sti
into
aas
pushf
std
cmp
jb
test
sbb
js
pop
call
push
xchg
fisubs
cmp
popa
sub
push
xor
dec
imul
stos
inc
push
loop
cmp
leave
jb
jns
imul
fstps
rclb
xor
mov
inc
push
xlat
call
lcall
pop
jecxz
and
mov
outsl
data16
jns
mov
data16
pusha
je
mov
aam
xchg
cs
xchg
ret
jnp
lea
jae
adc
sub
mov
pop
aas
fcoml
stos
cltd
add
fwait
test
push
cmp
lods
or
sbb
cmpsl
and
add
pop
shlb
movsl
in
sub
std
pusha
pop
das
mov
mov
daa
scas
and
fidivs
rcll
inc
cmp
xlat
mov
lret
or
repz
sahf
and
or
mov
imull
or
cld
mov
jns
leave
xchg
es
popa
mov
lcall
or
jp
test
mov
mov
xchg
mov
cmp
sub
ret
cmpsl
loope
and
push
add
sbb
mov
xor
mov
icebp
sahf
xlat
insl
push
cmp
mov
or
mov
in
add
add
mov
lret
addl
sbb
pop
sub
ret
sbb
test
or
jecxz
scas
loope
outsl
and
in
stc
fsubp
sub
cmpsb
mov
mov
pop
nop
add
push
out
shrb
hlt
stos
add
loope
daa
jno
add
iret
inc
cmp
mov
cld
sub
cmpsb
loopne
sbb
jle
jo
mov
mov
nop
cmp
imul
mov
and
push
and
jp
mov
dec
js
and
jle
push
mov
in
popa
cwtl
jns
std
cmpsb
dec
xor
push
fs
stc
lcall
jne
lahf
jns
and
pop
dec
pop
push
pop
lret
das
shlb
and
mov
fsubrp
repz
call
cmc
dec
push
loop
push
into
out
ja
fbld
jno
xlat
cmp
jecxz
adc
loope
add
cwtl
std
scas
inc
jge
out
xor
mov
push
sub
ret
push
cmp
or
mov
shl
adc
lea
cmpsl
fistl
inc
ss
adc
lds
push
and
inc
lods
push
xchg
push
into
jbe
sbb
or
cmp
sub
fiaddl
lret
and
xor
bound
xchg
jp
push
sbb
or
cmp
sub
fiaddl
lret
and
xor
bound
fisubrl
push
sbb
push
jp
loop
repnz
lret
and
xor
inc
lcall
mov
sbb
cmp
repnz
xor
inc
in
lret
inc
popf
push
std
add
in
fstp
int
mov
lret
roll
pusha
pop
dec
dec
dec
cmp
or
or
cld
in
in
fstp
int
mov
pushf
lea
jl
dec
cmp
sbb
or
in
in
ffree
int
mov
test
push
sub
jge
inc
pop
dec
fs
cld
mov
mov
cli
jne
add
dec
mov
inc
out
pop
dec
sbb
loopne
push
adc
xor
mov
push
gs
cld
loopne
mov
mov
pop
inc
add
xchg
addl
call
js
dec
loopne
leave
cmp
cmpsb
sub
loop
or
lods
lret
fmul
cld
aad
push
insb
les
xchg
mov
outsl
sub
data16
les
pop
and
sub
pushf
lea
int3
push
lea
insb
rcrb
dec
insl
push
lods
mov
shl
or
fdivl
pop
xchg
xchg
dec
cmp
sub
dec
daa
pop
fldcw
pop
nopl
cld
in
sti
int
mov
test
je
inc
dec
push
cmp
sbb
push
fisttpll
ret
or
or
or
and
sbb
popa
mov
leave
fmul
out
fdivr
enter
or
lret
inc
je
imul
mov
popf
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
mov
std
mov
insl
sbbl
into
ljmp
adc
sbb
and
mov
outsl
mov
jno
bnd
bound
push
or
jns
jnp
mov
rcrl
ret
xchg
rorl
outsl
popf
jbe
xchg
sub
mov
sub
mov
test
fldcw
and
sbb
jle
hlt
pop
jmp
adc
xor
pusha
inc
adc
inc
icebp
xor
das
fdivrl
sbb
or
mov
push
lea
div
lods
xchg
adc
mov
fwait
stc
jl
add
sbb
pushf
sahf
rcrl
fdivrl
cmpsb
push
aaa
outsl
jno
sbb
popa
out
add
mov
inc
push
outsb
out
outsb
sub
pop
popf
pop
jno
dec
inc
or
mov
pop
mov
inc
jb
arpl
repz
aas
int3
pop
fmul
push
inc
orl
xchg
mov
andb
outsb
mov
add
pop
outsl
sbb
mov
xchg
stos
call
aas
inc
mov
cmp
push
mov
imul
imul
loopne
add
xor
fbstp
and
and
sub
pop
adc
lods
gs
push
xor
ja
and
push
jns
jnp
stos
fs
cmpsb
inc
xchg
jmp
test
in
adc
mov
jmp
sub
aas
or
cwtl
ret
pop
dec
pop
or
test
push
into
xor
mov
mov
ret
fldenv
test
lods
mov
or
cmpsb
mov
scas
fbld
test
insl
and
aaa
orl
mov
mov
pop
sub
lea
push
cs
in
push
cmc
mov
inc
xchg
stos
js
pop
enter
aad
jae
and
rclb
clc
mov
test
pop
add
lock
dec
adc
pop
out
push
mov
icebp
xchg
dec
std
clc
mov
inc
dec
mov
xor
aam
push
fisubrs
jbe
xchg
jge
arpl
mov
lea
and
cmp
push
addl
cltd
in
arpl
lock
shlb
enter
loope
test
repnz
jmp
or
inc
dec
dec
dec
jae
pop
stos
jge
inc
mov
jnp
inc
gs
loop
arpl
rolb
scas
lock
xor
or
out
xchg
or
aaa
xorb
cmp
imul
mov
sbb
mov
adc
push
jne
ja
aam
insl
and
in
imul
dec
push
adc
mov
icebp
in
inc
jne
aaa
push
and
inc
cmp
adc
mov
jg
clc
cltd
hlt
and
fisubs
in
test
nop
jg
test
mov
push
icebp
inc
or
mov
xor
xchg
addb
sbb
or
fisttps
repz
sub
adcl
pop
adc
loopnew
sbb
ficoms
cld
mov
mov
and
sbb
dec
aaa
dec
jnp
sub
insb
push
insb
shl
push
or
add
movsl
jb
insb
imulb
shlb
sub
xor
dec
cmc
jo
adc
sarl
fdivl
das
push
orl
pushf
je
popa
jg
pop
or
es
push
sarl
add
stos
and
fisttpl
bound
cld
lahf
add
cmp
sahf
add
jb
imul
lock
sub
dec
out
loope
dec
lods
int
lcall
cmpsl
add
xor
popa
insl
pop
mov
movsl
ja
ret
lea
aaa
in
cltd
fsubr
and
arpl
pop
mov
mov
inc
and
pop
cmp
xor
fidivs
push
insb
fmuls
push
bound
repnz
xor
jbe
jg
pop
daa
dec
scas
mov
cmp
jmp
gs
ret
std
flds
pop
mov
mov
pusha
cmp
scas
bound
cmp
dec
mov
cmp
mov
sbb
cli
push
push
int
and
movsl
lds
inc
xorl
popf
divb
xor
ret
mov
lods
dec
sti
subb
fsub
mov
xchg
mov
lods
repnz
pop
mov
mov
adcb
sahf
outsl
int
jg
pop
pop
js
ficomps
out
ja
jecxz
and
mov
cmp
stos
dec
es
or
and
fidivrl
mov
jge
push
mov
sbb
xlat
in
arpl
sbb
pop
lahf
out
int
into
mov
stos
dec
push
or
pusha
cmpsl
out
call
push
sbb
ret
in
mov
cmp
mov
xchg
and
sub
dec
mov
scas
jecxz
xchg
add
pop
ret
ljmp
sbb
jns
dec
and
xchg
ss
xlat
add
das
xchg
dec
js
test
rol
mov
push
pop
rcr
icebp
lret
jl
adc
mov
lcall
sub
mov
mov
imul
adc
push
popa
fwait
xor
popf
je
mov
int
loop
pop
inc
cmpsb
push
xchg
jno
mov
sbb
jb
cmc
cmp
fwait
sub
push
xlat
fwait
jns
js
push
add
xchg
jp
xor
inc
xchg
xchg
or
push
into
or
jne
cmovs
xchg
ja
out
mov
mov
xor
or
rcrb
mov
pop
push
dec
push
mov
lods
ljmp
sub
stos
xor
repz
fnstcw
mov
dec
sahf
ds
mov
testl
js
fs
shl
mov
push
daa
movsb
stos
scas
mov
mov
popf
cwtl
subb
lret
pop
ds
outsl
mov
inc
pop
add
sti
in
xlat
inc
jns
and
lcall
jns
jg
mov
xchg
cwtl
jo
xor
inc
mov
fnstenv
sbb
bound
shl
pop
cmp
and
mov
fsubrl
push
orb
adc
popf
mov
mov
int3
hlt
testl
pusha
or
xlat
sbb
fnstenv
mov
data16
mov
cmpsl
lea
fists
ss
js
and
lods
xor
icebp
inc
xchg
scas
push
adc
call
cmp
stos
in
push
adc
inc
dec
sbb
mov
or
int3
pop
into
shlb
das
lock
adc
mov
aaa
jno
sahf
aam
mov
push
sbb
je
popf
shl
cmp
cmp
add
pusha
addl
sbb
sarb
test
add
xchg
fimuls
adc
das
int3
aad
add
cmp
ret
xlat
jns
sub
or
es
mov
int
dec
mov
mov
daa
dec
rolb
cltd
rcrl
lret
push
lret
cmp
mov
ret
ljmp
lcall
hlt
and
sub
push
aad
sbb
andb
stc
das
dec
lock
stc
fdivrs
mov
in
cltd
shrb
test
pop
arpl
mov
das
call
int3
iret
push
sbb
inc
xor
cld
inc
mov
bound
mov
call
adc
enter
inc
mov
loope
sbb
push
incl
sub
pop
dec
shl
sbb
cli
lock
pop
dec
sahf
lods
fiaddl
sarb
lcall
in
fwait
jp
mov
jge
std
jne
cmc
and
lahf
xchg
stc
adc
lock
jmp
insb
xor
sbb
sbb
gs
inc
repnz
adc
addr16
aas
mov
ror
push
dec
pop
adc
mov
dec
fnsave
and
inc
in
cmp
mov
cmpsl
cld
out
icebp
sub
inc
cmc
ret
dec
aas
loope
push
jbe
fmuls
dec
cmp
negl
mov
mov
push
and
push
pop
shl
aas
rorl
xchg
xchg
inc
pop
dec
out
jmp
inc
cs
pop
dec
or
mov
mov
or
mov
jnp
xor
xlat
adc
mov
and
adc
sub
and
adc
add
sub
shrb
fld1
call
ja
fistl
mov
xchg
mov
hlt
inc
adc
dec
add
les
mov
sar
pop
sbb
ljmp
jecxz
hlt
add
push
cmpsb
clc
fcmovb
les
dec
push
adc
push
test
mov
xchg
or
push
loop
pop
std
test
in
xor
and
popa
ja
enter
add
jnp
in
fs
and
add
sub
mov
cltd
pop
mov
outsl
sbb
sbb
push
dec
shlb
stos
sbb
dec
out
inc
mov
gs
jp
popf
or
or
test
lock
orl
sti
xchg
dec
pop
sbb
cmpsl
mov
scas
ret
or
jp
jnp
repz
xchg
out
insl
mov
int3
imul
inc
inc
add
cmp
shlb
adc
pop
pop
cld
mov
cmpsb
lahf
fcoml
pop
pop
mov
dec
out
add
mov
or
lret
or
xchg
mov
mov
pop
lods
loopne
pusha
sbb
popf
clc
cltd
pop
stc
jp
repnz
adc
lock
mov
xlat
ja
mov
iret
sbb
mov
addr16
xchg
repz
mov
lret
pop
test
rol
repnz
mov
mov
cwtl
sbbl
jno
fcmovb
daa
repnz
lahf
or
sbb
ds
loope
sub
adc
sub
pusha
dec
jge
adc
fnstenv
pusha
sbb
insl
ret
push
fisubs
inc
mov
jno
lods
mov
pop
add
lcall
or
popf
pusha
jo
jo
add
xchg
push
and
xlat
mov
icebp
add
push
fcomps
fcmovbe
xchg
push
jo
add
fsubs
inc
push
orl
push
push
ds
xchg
js
aad
in
adc
in
pop
inc
inc
sub
fisttpll
out
mov
stos
jmp
les
sbb
xor
jno
sbb
into
shlb
inc
fs
fs
call
cmp
jecxz
outsl
jno
jno
inc
aad
es
jmp
dec
push
pop
in
hlt
xchg
jl
pop
sbb
aaa
xchg
inc
and
inc
mov
roll
fidivrs
adc
dec
lcall
pop
cltd
fmuls
js
add
mov
hlt
xlat
lods
mov
sub
repnz
scas
sbb
push
xchg
mov
mov
lcall
cli
inc
in
stc
jp
push
push
adc
pop
stos
xchg
notl
mov
hlt
jge
lea
add
cmpsb
jnp
fsubl
cmpsb
pop
mov
cmp
add
ret
out
mov
pop
outsl
shl
adc
jmp
aaa
xchg
adc
xor
inc
dec
and
mov
repnz
fcmovu
xor
jb
jle
cmpb
rcl
orb
jae
ret
in
cld
lods
out
vcvtss2si
dec
es
and
test
push
adc
faddl
aas
ror
mov
into
adc
out
aas
mov
sbbb
icebp
in
pushf
pop
mov
pop
ja
das
icebp
shll
or
pop
mov
add
dec
push
jnp
testl
dec
iret
leave
jbe
xor
imul
ss
ret
dec
and
popa
inc
std
arpl
pushl
test
cmc
xor
push
pop
es
push
adc
pop
and
push
orl
int
mulb
or
mov
insl
cld
into
jge
mov
and
or
jmp
push
cs
idivb
xchg
sub
mov
cmc
mov
call
pop
cmpsl
mov
sbb
in
scas
inc
lods
pop
lcall
fs
inc
fstl
dec
cmp
cmp
repz
insb
mov
inc
cld
or
or
jno
repz
mov
sub
imul
mov
cli
outsl
or
cmp
jg
test
xchg
xchg
push
pop
mov
jo
mov
out
aaa
mov
mov
fldt
aaa
outsl
inc
lods
and
aas
sbb
jl
or
lds
jl
cwtl
pop
xchg
jle
sbb
imul
shlb
dec
arpl
stos
lcall
pop
enter
xchg
mov
jne
icebp
out
dec
rcr
into
jl
fisubrl
mov
push
inc
lea
ret
imul
jno
push
ja,pn
cmp
fucom
inc
fbstp
lock
addl
pop
je
jb
jb
aaa
popf
adc
pop
imul
xchg
pusha
adc
hlt
lock
sahf
or
mov
and
mov
fwait
daa
dec
shrb
iret
in
pcmpgtw
sub
jl
pop
jle
adc
cld
inc
dec
sbb
arpl
mov
js
js
mov
rorb
es
mov
adc
cmp
lret
mov
lret
jl
fsubs
in
test
cld
mov
pop
pop
mov
sub
ss
sub
mov
les
and
dec
jp
pop
pusha
lret
mov
inc
movsl
mov
add
movsb
xor
mov
mov
sahf
jmp
cli
xchg
notb
sbb
popf
xchg
adc
cld
aaa
iret
test
sub
dec
mov
sahf
imul
sub
insl
pop
inc
inc
fs
xor
xor
cmp
jmp
loopne,pn
dec
test
adc
ja
sbb
add
pop
bound
adc
sbb
fs
lahf
lods
jl
mov
or
or
and
ja
fiaddl
les
ret
push
in
shrb
fdivrs
aam
mov
fistpl
xchg
sub
gs
sub
pushl
sub
and
int3
sub
rol
in
mov
movsb
loopne
jmp
mov
cmp
pusha
mov
pop
and
inc
sahf
popa
sub
lea
jmp
jle
lock
dec
lcall
sahf
adc
or
les
jne,pt
jae
repnz
inc
stc
pop
jmp
xchg
dec
jge
mov
push
mov
adc
lahf
adc
scas
mov
gs
cmp
mov
fnstenv
jns
fistpl
ds
lret
aaa
push
int
in
jbe
sub
flds
outsb
stos
pop
or
mov
mov
lret
add
shrl
fcompl
mov
jae
pop
pop
or
add
test
sub
insb
inc
adc
jns
push
sub
popf
sbb
add
jno
imul
insl
add
mov
pop
and
xchg
jg
cmp
pop
repz
insb
imul
std
imul
push
call
test
push
sahf
pop
mov
add
sub
xchg
mov
sbb
push
dec
rolb
xor
mov
inc
sub
aam
jns
fwait
adc
inc
das
add
add
jnp
fdivrl
xlat
push
les
add
mov
sub
mov
roll
testl
sub
or
inc
int
sbb
add
popf
scas
inc
dec
sbb
cmc
mov
jecxz
inc
sbb
xor
adc
inc
and
xchg
filds
push
js
lret
pop
sti
jle
mov
mov
lods
mov
cs
sbb
mov
jbe,pn
out
jmp
and
push
popf
push
cltd
iret
mov
push
pop
negl
or
inc
in
mov
addl
loop
xor
mov
sar
push
ret
add
divl
fimuls
int3
hlt
add
cmp
sti
cltd
mov
scas
clc
push
insl
fcmovnu
or
xchg
push
outsb
loop
push
add
push
add
mov
es
shrb
adc
add
ljmp
sub
adc
aaa
ret
mov
mov
cwtl
xchg
adcl
dec
outsb
insl
shll
ja
cs
sbb
pop
xchg
lahf
add
mov
dec
push
nop
scas
push
gs
mov
pop
mov
inc
mov
or
jl
jo
mov
mov
adc
mov
jno
xchg
xchg
adc
push
xchg
repnz
test
and
hlt
fcomi
xchg
cs
jle
mov
mov
cmp
lds
jmp
dec
cwtl
cmp
pop
push
mov
int3
leave
dec
loope
xchg
mov
xor
sti
or
pop
xor
iret
ss
hlt
pop
mov
clc
mov
inc
mov
inc
test
sub
fdivrl
daa
hlt
lds
ja
xor
imul
mov
xlat
inc
pop
mov
mov
out
mov
lret
sub
push
jo
loopne
in
add
leave
notb
mov
mov
pop
lea
pusha
inc
dec
test
daa
stos
mov
movsl
fists
dec
outsb
adc
lret
fdivr
cli
int3
dec
and
pop
mov
lcall
ja
divb
out
js
sub
loopne
repz
jnp
push
mov
imul
out
divl
and
stc
pop
adc
and
out
sbb
pop
lea
push
xor
mov
aad
or
test
das
dec
dec
stc
sub
xor
in
mov
sbb
jb
movhps
sub
sub
cwtl
mov
lods
add
pushf
mov
addr16
daa
in
jno
xchg
fwait
and
fsubp
push
push
inc
dec
jbe
lods
xchg
jle,pt
cmpsb
pop
addb
add
push
in
int
xchg
sbb
das
cmc
lret
out
gs
pop
aam
xor
insl
mov
daa
xchg
clc
je
in
ret
aas
pop
test
or
data16
daa
push
insl
rclb
jmp
dec
mov
ds
outsb
fistpll
pop
inc
and
sbb
push
cmp
ds
push
inc
test
pop
daa
dec
push
shrb
lock
jg
inc
out
ds
lea
sub
sub
sbb
inc
enter
mov
out
or
inc
test
lods
and
cmp
mov
add
jecxz
lods
icebp
cmpb
loope
in
sub
inc
xor
and
dec
mov
fiadds
and
scas
gs
int3
subl
adc
js
dec
adc
push
sub
push
sti
iret
int
inc
stc
ja
xchg
jnp
shrl
subb
cli
nop
mov
cmp
je
push
out
push
mov
xchg
add
jnp
mov
aas
sbb
fists
stos
cmp
loopne
sbb
push
cli
bound
xor
cmp
jb
imul
out
pushf
movl
dec
push
movsb
sbb
or
fimuls
push
lret
aas
adc
es
jns
mov
negb
mov
pcmpgtd
pop
mov
nop
mov
dec
js
xchg
add
inc
in
dec
and
xchg
cli
and
pushf
push
scas
cli
push
xor
repnz
stos
mov
or
testb
imul
decl
jne
jo
xchg
push
push
out
shl
cld
mov
popf
fs
sbb
jbe
xchg
mov
les
aam
dec
dec
mov
mov
adc
sub
mov
xchg
pop
cmp
mov
les
xor
dec
or
xor
rep
out
add
add
imul
mov
sbb
cmp
jp
adc
jl
push
out
popf
scas
out
arpl
in
jmp
cmp
ficompl
lods
jbe
imul
pop
push
aam
jle
scas
sub
add
sar
icebp
sub
dec
push
push
dec
sub
int3
jge
ljmp
push
into
aaa
pop
mov
xchg
push
test
pop
inc
and
cmc
leave
dec
roll
dec
repnz
xchg
push
cwtl
int
in
loop
add
dec
push
mov
sub
jmp
and
ss
lahf
and
inc
push
lods
adc
jg
popf
xor
mov
aad
jge
nop
dec
aaa
inc
push
cmpsb
xchg
add
inc
sub
fsubrl
out
and
cmp
das
pop
lds
mov
rol
adc
and
xor
shr
shlb
push
hlt
jmp
mov
scas
jbe
outsl
adc
jns
aaa
stos
int3
repnz
mov
imul
sarb
pop
add
test
xchg
adc
mov
or
out
rol
loopne
jge
daa
dec
add
ss
dec
lcall
addr16
sbb
sbb
stc
outsl
imul
out
push
pushf
jno
repz
ljmp
out
cmp
cmp
dec
jmp
pop
mov
and
fdiv
lahf
and
xchg
or
add
xchg
pop
push
shlb
int3
sbb
jmp
mov
push
rolb
jmp
notb
imul
mov
ret
lret
dec
in
sub
mov
psrlq
or
adc
lahf
sti
jecxz
sub
scas
cmp
in
loop
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
or
cld
in
in
fstp
int
mov
pushf
lea
pop
dec
dec
cmp
sbb
in
in
fstp
int
mov
pushf
or
negl
dec
mov
shl
jecxz
repz
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
dec
push
pop
fs
je
leave
gs
or
aad
in
cmc
std
test
mov
inc
dec
push
pop
fs
je
add
adc
and
xor
int
mov
inc
lea
inc
dec
push
pop
fs
je
add
adc
and
xor
les
fisttpll
enter
mov
add
sub
lret
das
test
aad
mov
rcll
cmc
movsl
mov
or
cmp
mov
fisubrl
leave
jge
and
or
clc
xchg
jno
std
cmp
adc
pop
dec
arpl
popa
int3
scas
insl
push
les
andb
sub
jmp
xor
pop
push
fimuls
mov
add
dec
push
push
mov
adc
bound
push
xorl
test
mov
cmpsl
cmp
sub
orb
popf
imul
mov
mov
or
test
js
nop
test
mov
fdivr
aam
sbb
mov
push
pop
fs
je
add
adc
and
xor
int
fucom
in
hlt
std
test
mov
add
add
adc
popa
sbb
ss
les
mov
scas
repnz
and
pop
add
inc
push
jns
pop
cmp
test
test
cli
test
shr
add
push
or
adc
and
xor
int
fucom
in
hlt
std
test
mov
inc
dec
push
pop
fs
je
add
adc
and
xor
int
fucom
in
hlt
std
test
mov
inc
dec
jno
stc
fistps
cli
rcll
iret
push
ret
sti
mov
in
out
int
add
cwtl
je
mov
xchg
lock
pop
mov
bound
xor
in
fnsave
dec
push
and
xlat
or
vmovss
adc
jecxz
push
cmp
hlt
xor
cwtl
push
and
f2xm1
cli
xor
in
addr16
fisubl
adc
loopne
sbb
pop
adc
mov
je
loopne
or
mov
cmp
jge
fbstp
sub
cmp
jae
inc
fistpl
in
addl
sub
loope
cld
test
outsl
lds
test
nop
leave
les
leave
mov
repz
cmpsl
ret
das
or
jno
in
outsl
and
sub
je
hlt
pusha
inc
lock
les
adc
add
jae
adc
out
jns
sbb
xchg
cmp
movsl
mov
out
push
pop
rclb
push
lret
mov
subb
pop
mov
adcl
push
sub
aas
jmp
mov
fimull
mov
push
jb
xchg
pop
or
cltd
mov
sbb
pop
mov
in
push
aam
mov
jl
nop
mov
adc
stos
mov
sbb
mov
inc
or
mov
mov
pop
lahf
aaa
fcmovb
mov
inc
cmpl
pop
pusha
sub
push
sub
cmp
mov
iret
sti
ljmp
lds
mov
push
jmp
sbb
adc
ss
ret
lahf
insb
cwtl
jb
push
daa
xor
cmp
dec
loop
loope
lcall
add
add
xchg
add
mov
pop
adc
sub
loopne
push
out
dec
enter
ss
or
xor
sub
icebp
sbb
sbb
xor
cmp
cmp
add
fnstsw
sbb
loop
pop
in
dec
and
or
ret
adc
repz
jb
ja
enter
or
dec
add
cmpsl
inc
rorb
insl
je
dec
mov
jno
loop
ret
dec
in
or
shl
push
lock
xor
divl
pop
pop
stos
scas
sbb
ss
stc
hlt
into
scas
sub
add
mov
stos
mov
rolb
cmc
std
fisubl
pop
add
sub
mov
mov
out
mov
in
sub
les
bnd
and
outsb
jnp
push
cmc
scas
outsb
insb
xchg
sub
adc
pop
mov
mov
imul
test
mov
daa
mov
xlat
push
aad
repnz
out
or
out
idivb
xor
shr
imul
mov
data16
and
daa
lret
or
lret
mov
loopne
sti
stos
push
mov
fmull
aaa
call
test
fcoms
mov
adc
ficompl
fwait
sbb
nop
movsl
aad
js
mov
dec
jmp
push
add
out
push
push
xor
sbb
add
sahf
xchg
xchg
ret
push
jp
sarl
std
ja
dec
xor
movsb
not
pop
enter
rclb
inc
popf
hlt
clc
jge
pop
xchg
adc
enter
sub
and
inc
insl
xchg
lret
sti
in
pushf
cmp
push
xchg
push
mov
out
pop
mov
add
dec
push
int
test
testl
and
dec
push
roll
xchg
test
and
cltd
or
loop
in
dec
add
into
lods
sub
mov
in
stos
jb
push
sarb
sub
cmpl
sbb
in
sbb
mov
les
xor
push
inc
gs
call
pop
lret
push
dec
ficomps
add
xor
mov
fldenv
fistpl
out
dec
inc
shll
ds
shlb
movsb
dec
and
shrl
xchg
mov
mov
jecxz
fstl
inc
movsl
orb
mov
inc
bound
test
xor
addr16
adcl
cmp
adc
rcl
cwtl
stos
and
stos
sub
sti
fstpl
rolb
push
lret
das
int
cmp
outsl
inc
mov
sub
ljmp
and
inc
cmp
pop
sub
nop
insb
fistl
sbb
fidivrs
movsl
pop
ljmp
lret
jl
pop
pusha
repnz
jnp
iret
xlat
inc
fstpl
inc
xorb
popa
int3
jb
lret
mov
jp
mov
cmp
mov
dec
jmp
inc
push
cli
sbb
mov
out
push
mov
push
or
pop
add
mov
test
cld
cld
mov
outsl
push
int3
add
stos
mov
dec
inc
cmpsl
lock
xlat
fists
es
dec
imul
add
movsb
dec
into
cs
and
adc
xchg
ja
test
out
sbb
clc
out
mov
xor
hlt
cmp
scas
outsb
mov
jp
mov
lods
andl
inc
jb
test
push
outsb
das
hlt
es
lds
idivl
xor
lret
inc
fidivl
and
mov
push
mov
jb
jp
imul
stc
dec
fidivrs
add
add
and
and
test
imul
cmp
mov
xchg
push
in
inc
mov
inc
xor
sahf
ret
ror
and
jle
and
insl
cmpb
popa
mov
xchg
xor
in
adc
mov
outsb
xchg
or
mov
ret
jo
push
testb
add
and
push
orb
and
ds
rorl
aam
mov
and
xor
cmc
idiv
jl
movsb
inc
sub
cmp
pop
cmp
rolb
cltd
cmp
sbbl
mov
mov
ljmp
loop
mov
mov
mov
movsl
addr16
cmp
ror
inc
movsl
xchg
jge
leave
inc
jge
mov
adc
mov
lret
sub
out
sub
adc
jecxz
and
pop
dec
xor
pop
inc
out
add
out
mov
cs
stos
pop
adc
jne
jmp
pop
adc
aas
hlt
jle
sbb
cmpsl
popa
xchg
cmpsb
cmc
jns
mov
mov
leave
dec
xchg
repnz
xor
cmp
push
cli
sarl
push
aad
test
push
scas
and
xchg
outsl
xchg
jg
je
dec
movsb
stc
or
sbb
out
cs
cmp
rcrb
jecxz
sub
out
mov
les
popa
inc
outsb
jb
xorl
insb
repz
shll
inc
jge
in
pusha
sub
xchg
shll
aad
out
xor
repnz
jecxz
stc
dec
arpl
stc
push
aam
fcmovnb
sbb
out
jno
mov
fisubl
js
stos
cmp
add
ljmp
jmp
lret
or
cltd
aas
pop
cmp
lret
mov
lret
push
sub
cld
push
pop
rorl
int3
loopne
dec
scas
jg
jno
ljmp
ret
clc
jns
mov
test
jno
lods
jns
scas
cmp
les
dec
pop
aam
inc
xchg
lock
and
inc
push
add
inc
push
lret
jecxz
pop
push
cltd
add
popf
jb
fsubrs
add
pop
dec
or
add
divl
push
inc
outsb
mov
add
cmpsl
xorb
jne
dec
jne
popf
out
jg
cwtl
pop
test
dec
push
gs
mov
cmp
pop
pop
sbb
cltd
sbb
into
fmull
pop
dec
test
pop
in
sub
rcl
sahf
ja
pop
arpl
xchg
inc
mov
icebp
outsl
or
jp
push
lret
add
xor
lods
cli
pop
cmp
call
ja
add
ficomps
push
cwtl
sbb
je
test
pop
mov
sbb
sti
mov
out
mov
les
data16
fisubrl
cmc
aas
fnstsw
adc
stos
mov
repz
cmpsl
cmpsb
cmp
loope
in
or
push
cmp
andl
mov
ljmp
daa
pushf
and
or
orb
mov
add
aas
movsl
adc
mov
fcoml
cmp
cmp
int3
lds
mov
js
mov
mov
jns
lods
cmp
push
push
out
adc
pop
jecxz
jmp
adc
pop
mov
push
aas
mov
inc
test
and
inc
push
test
aad
jecxz
fdivl
in
lret
lock
mov
add
sti
aad
movsl
arpl
push
ljmp
xchg
jp
mov
call
add
sub
call
xchg
mov
and
dec
and
mov
enter
lods
loopne
and
iret
enter
int
daa
pop
or
out
jno
cmpl
aas
adc
cmp
sub
sbb
push
insl
psubw
bts
push
add
test
jnp
lock
shrb
jb
addr16
and
mov
cmp
pusha
jo
push
push
imul
adc
nop
negl
jne
lret
cs
add
mov
les
jo
mov
xchg
inc
pushf
mov
dec
xchg
pop
add
aas
sub
int3
inc
int3
dec
sub
xor
popa
test
cli
add
int
js
outsl
xchg
push
cmp
in
sbb
mov
rorl
cltd
mov
aam
push
addr16
fsubp
lea
jp
and
stc
insl
test
push
pop
insl
and
xor
sub
sbb
push
or
mov
pop
ds
and
lods
adc
cmpsl
cltd
jne
and
sub
outsl
pusha
fnstsw
inc
dec
cmpsb
xchg
or
and
aaa
sbbb
push
gs
xchg
outsb
inc
imul
mov
jle
pop
cltd
push
lret
outsl
xor
mov
inc
mov
shll
adc
into
mov
daa
scas
push
insl
test
pushf
daa
in
cmpb
mov
rol
jecxz
movsl
push
fsubrs
daa
inc
push
and
mov
add
pusha
dec
add
sub
dec
js
add
fcoms
inc
test
dec
adc
mov
mov
icebp
push
sbb
addr16
fildl
mov
or
lock
jbe
iret
sti
ds
dec
dec
mov
or
inc
sub
jecxz
sub
xor
add
ret
pop
lret
fwait
sbb
cmp
dec
jmp
rcr
dec
pop
fdivp
sub
xchg
les
jecxz
out
lcall
jge
ja
sbbl
mov
mov
sarb
rolb
ret
mov
sbb
aaa
js
mov
sbb
sub
out
scas
pop
inc
cmpsb
mov
out
mov
dec
push
sub
mov
jle
fxch
out
adc
cmc
test
je
insb
and
cli
in
xchg
mov
das
mov
ret
in
std
loopne
xchg
pop
mov
jl
pop
add
xor
clc
icebp
xchg
mov
lea
adc
lea
xor
pushf
ret
lds
mov
and
xchg
rcr
adc
cmpsb
add
into
mov
sti
insb
add
dec
stos
sub
daa
push
lea
pop
mov
add
and
cmp
das
pushf
mov
dec
xchg
ljmp
adc
lods
out
stc
mov
mov
sub
fbstp
sub
cmc
fdivs
lods
shll
pop
mov
mov
pop
fidivrl
push
sarl
push
push
xor
mov
sti
push
mov
stc
mov
xchg
fldcw
jae
cmp
cmp
mov
dec
xor
mov
pusha
outsb
ljmp
and
sti
sbb
or
adc
movsb
out
xchg
xchg
xor
ds
inc
jge
mov
pop
mov
xchg
loope
mov
push
inc
leave
out
out
std
pop
push
sbb
xchg
push
mov
mov
inc
cmpb
xor
inc
push
push
mov
in
arpl
movsl
push
inc
shll
ret
jnp
xorb
mov
inc
pop
aaa
jo
mov
mov
int
cmp
adc
in
cmpsb
dec
std
add
stos
mov
mov
in
ja
mov
xchg
inc
inc
int3
add
or
aam
push
lea
jle
in
xchg
aaa
mov
adc
inc
cltd
inc
dec
sub
inc
xchg
xchg
and
or
sarb
pop
popa
out
cmp
xchg
lods
leave
mov
mov
cwtl
insl
fisttpl
adcl
inc
lcall
inc
call
or
out
add
xchg
sbb
ds
mov
test
sbb
jb
sub
lcall
mov
ret
test
test
pop
fldcw
or
leave
lcall
decl
repz
xor
std
add
xor
psubusb
sti
jae
loop
insl
imul
in
push
lods
mov
mov
pop
je
push
dec
adc
cmp
mov
stos
rolb
aaa
lds
cmp
push
mov
repnz
hlt
daa
jnp
dec
pop
lock
sbb
repnz
jo
jae
inc
dec
xor
mov
add
cltd
cmpsb
mov
rcrl
jnp
cli
lret
push
insb
ret
test
sbb
inc
testb
mov
push
xchg
cmp
aaa
lret
mov
and
adc
sub
inc
mov
mov
cmp
or
inc
xchg
repz
arpl
scas
dec
gs
inc
fsubp
jbe
in
shl
push
out
cmp
sbb
scas
movsb
sub
faddl
or
pop
inc
mov
mov
testb
stc
jp
xor
arpl
out
in
in
pushl
mov
or
int3
inc
loope
out
scas
mov
jns
push
inc
mov
lods
fcoms
inc
cmp
cli
mov
jmp
dec
cmp
aad
sub
ds
test
mov
std
push
test
daa
lods
jl
inc
and
cld
cwtl
jb
push
lcall
iret
cmp
pusha
pop
cmp
push
cwtl
or
jae
jg
mov
fsubs
add
addr16
inc
leave
scas
icebp
cmp
bound
push
push
mov
fstp
bound
inc
sub
mov
push
add
ret
push
pop
xor
stos
add
or
sub
adc
addb
dec
andb
mov
push
mov
cmc
lahf
or
xor
jl
sub
je
inc
icebp
cmc
in
mov
mov
subb
hlt
arpl
loope
fs
xor
sbb
roll
test
cmpsl
mov
fnstsw
xchg
mov
iret
sti
ds
out
shr
outsl
ret
lock
push
pop
cld
sahf
les
scas
jle
cltd
dec
stc
add
or
xor
fcomp
mov
or
push
fs
fwait
test
sub
sbb
in
sar
mov
inc
jbe
call
push
xlat
clc
mov
mov
imul
test
mov
popf
in
in
out
mov
sub
shll
mov
sub
repz
lret
fstpt
xchg
pop
pop
mov
fstps
pop
dec
dec
int3
sub
jge
sbb
sub
xchg
or
idivl
mov
enter
mov
rcrl
cmpsb
cmp
int3
adc
jo
pop
jnp
sub
mov
aas
mov
and
jns
divl
sbb
push
jns
popl
adc
inc
mov
ret
xlat
jo
jge
je
xchg
es
mov
sub
add
dec
pop
nop
fnsave
rcl
movaps
mov
mov
aas
cmpsb
lcall
cmpsb
popf
icebp
lea
enter
lret
push
xor
out
lods
cli
pushf
xor
mov
arpl
xor
jns
ret
call
lock
mov
imul
insb
iret
lcall
bound
pop
mov
add
cmp
mov
and
test
out
shrb
or
daa
pop
sbb
push
cli
pushf
xchg
adc
rorb
jecxz
or
pop
shl
add
xchg
notl
cli
sub
scas
adc
mov
sub
loope
test
jns
and
dec
pop
stos
xor
iret
outsb
cld
nop
jecxz
jp
loope
xor
bound
aam
cmp
scas
pop
pop
cmpsb
jns
xchg
test
insl
inc
pop
loop
ret
ds
sbb
push
inc
fwait
push
outsl
mov
add
cmp
arpl
jbe
or
insb
mov
fistps
push
push
fstpt
cmpsb
testl
fistpll
jb
movsl
and
inc
shl
mov
sbb
ja
sub
mov
pop
fistl
incb
push
fidivrs
mov
sbbl
popf
push
lcall
ds
mov
jb
out
jns
in
fisubs
xor
popa
mov
pop
jle
xchg
jp
icebp
adc
js
test
cs
jp
loop
jge
sub
shl
lret
inc
and
cltd
insb
fildll
push
adc
lcall
mov
push
push
fs
mov
add
xchg
imul
sbb
push
es
ds
add
out
and
sbb
clc
mov
pop
xor
lods
int3
pop
xor
xchg
push
mov
adc
pushw
push
out
push
jno
xchg
repz
das
cmp
add
cs
push
mov
out
out
imul
in
xor
push
outsb
and
add
dec
outsb
out
in
sub
push
push
stos
out
sub
movsl
popa
add
bound
cmp
icebp
xlat
ljmp
sub
dec
push
sub
outsb
jecxz
dec
mov
lret
scas
lods
fistps
and
push
inc
add
dec
mov
lods
aad
lods
insl
sbb
fwait
push
lahf
cmpsb
insb
pop
jo
jb
shll
sub
xchg
adc
leave
pop
sbb
jae
sub
add
outsb
push
fmull
mov
mov
mov
sub
push
inc
cmp
test
imul
mov
xchg
dec
popa
pop
or
cld
mov
sbb
push
jle
dec
int3
cwtl
icebp
xor
jae
sbb
out
add
xchg
std
cltd
in
dec
mov
jb
push
xchg
popa
push
mov
and
jg
jo
mov
or
add
cmpsl
mov
lock
sub
dec
add
pusha
std
dec
adcl
cmpsb
push
in
jg
les
loop
cmp
test
sub
jne
nop
jmp
sahf
cmp
dec
or
jo
out
adc
mov
inc
inc
add
sub
lea
int
in
pop
jno
pop
test
push
shlb
out
lods
or
pop
insb
loopne
pop
shll
mov
out
sbb
pushf
push
jp
or
aad
jp
fcmovnb
ja
cmpsb
push
enter
rcrb
dec
mov
push
fbstp
out
and
mov
sub
jne
push
add
cmp
roll
loop
cld
scas
lcall
pop
in
or
xchg
adc
dec
dec
cs
ja
fadd
mov
fcmovne
inc
adc
fcmovb
data16
pop
jae
fnstcw
loopne
jp
mov
xor
dec
dec
push
outsb
mov
rorb
mov
mov
push
fs
sub
icebp
je
inc
push
mov
out
mov
fwait
mov
push
sti
jg
push
xorl
or
mov
inc
clc
push
shrb
js
shl
mov
aam
pop
sahf
pop
fmull
outsl
mov
xchg
jle
and
sbb
sub
adc
pop
sbb
jg
rolb
sub
jg
cs
ja
or
mov
mov
aam
and
std
ja
lods
lods
jmp
cmp
arpl
lock
inc
mov
rclb
inc
and
mov
fwait
jl
mov
and
js
test
or
test
fimuls
data16
popa
cmp
jl
cmc
inc
repz
adc
rolb
inc
fcmovbe
add
dec
sub
push
out
aas
cmp
mov
test
dec
mov
xchg
and
rorl
pop
loopne
jmp
push
dec
adc
in
std
and
jle
or
adc
cmp
mov
pop
or
lcall
and
cmp
in
mov
dec
xchg
pop
push
push
push
or
call
jbe
in
add
in
sbbl
cmp
nop
test
adc
fstps
mov
and
fstpt
sub
sub
int
adc
mov
xchg
sbb
lahf
mov
mov
push
push
jo
pop
emms
and
ja
mov
loope
or
inc
xchg
adc
add
adc
lahf
push
stc
punpckldq
cli
mov
cmp
pop
xor
jmp
jge
or
xor
int
fucom
in
hlt
std
test
mov
inc
dec
push
pop
fs
je
add
adc
and
xor
int
fucom
in
hlt
std
test
mov
inc
dec
aam
in
je
test
mov
les
fucom
in
hlt
std
test
mov
inc
dec
push
pop
fs
je
add
adc
and
xor
int
ja
in
hlt
mov
add
les
aad
addl
xchg
mov
and
adc
adc
in
inc
xor
mov
icebp
xchg
loope
xchg
repz
push
xor
jns
popa
arpl
jae
inc
xor
mov
imul
ret
mov
xor
adc
addr16
xchg
mov
lock
repz
xor
pusha
loope
jmp
mov
leave
arpl
sub
lar
push
push
leave
test
enter
aad
sbb
xor
lods
insb
pop
mov
sbb
mov
inc
cmp
push
cld
jo
lahf
ret
loop
std
es
out
shll
loope
test
mov
jno
sub
aam
mov
popf
add
mov
push
pop
pop
pop
cmp
or
push
pop
mov
rcrb
jb
push
adc
jno
mov
mov
les
jb
rcrl
add
sti
cmpsl
push
or
jb
inc
fnstsw
dec
std
pop
mov
addl
add
push
xor
add
pop
arpl
push
adc
rcr
scas
out
testb
les
xor
jg
push
push
sbb
inc
pop
dec
mov
xor
movsl
ret
lahf
rol
fcom
xchg
inc
xor
xor
and
push
pop
daa
add
push
push
push
lret
and
popf
xchg
jecxz
repz
push
xor
jno
popa
arpl
jae
inc
xor
mov
icebp
xchg
loope
xchg
repz
push
xor
jno
popa
arpl
jae
inc
xor
mov
mov
mov
int3
sahf
dec
push
inc
cmp
test
mov
or
jae
inc
mov
in
mov
jg
sbb
roll
rcr
or
popf
mov
mov
aad
cmp
pushf
or
mov
mov
das
pop
call
les
jl
addb
xor
shrl
inc
push
movsl
pop
testl
fisubrl
cmp
adc
pop
mov
std
pop
mov
mov
jecxz
mov
adc
testb
and
jg
leave
cmp
sbb
xchg
fs
aas
xor
xchg
pop
dec
dec
adc
cmp
in
lea
xchg
adc
adc
cmp
and
sub
cwtl
jae
push
pop
xlat
sub
mov
ds
pop
addr16
jl
cld
insb
jnp
mov
mov
jbe
or
inc
cmp
inc
add
adc
test
mov
dec
ds
lock
jae
inc
mov
test
or
or
orl
mov
sub
push
in
lea
pop
repz
cmp
or
xor
notl
mov
mov
cmp
repz
shll
xchg
mov
jge
mov
push
sarl
mov
out
es
fwait
inc
lock
mov
mov
daa
mov
rorb
mul
mov
lret
sub
sti
inc
xchg
rorb
popf
lea
dec
ja
add
lods
stos
xchg
aam
dec
mov
leave
mov
sbb
mov
mov
in
mov
sub
cmpsb
add
lea
popl
int3
into
or
shlb
mull
test
inc
xchg
push
dec
push
push
cmp
sbb
int
push
jge
mov
mov
lods
mov
mov
and
adcl
or
aas
add
pop
sub
inc
imul
xor
scas
jns
add
adc
test
insl
sbb
dec
jp
lret
mov
sub
push
xchg
adc
pop
fucomp
inc
or
test
es
adc
clc
sbb
adc
out
icebp
mov
ficoms
inc
outsb
shrl
mov
push
lea
xchg
lcall
lcall
pop
js
jle
xchg
stos
mov
es
shll
sbb
andl
xor
pop
adc
fstpt
addr16
sbb
inc
mov
and
nop
inc
add
sarl
fsubrl
mov
sbb
cmp
insl
ljmp
ss
popf
and
inc
fsubl
lcall
outsb
cli
adc
lods
mov
mov
sub
movsl
sbb
mov
dec
dec
inc
mov
sub
outsb
cmovbe
sub
pop
lahf
hlt
mov
ret
xchg
lea
sub
and
rcll
jns
adc
adc
sub
adc
popf
xor
and
pop
pcmpgtd
xchg
mov
mov
mov
mov
xor
dec
mov
or
ss
and
push
adc
mov
and
lret
hlt
push
call
and
out
test
xchg
sub
movl
xchg
mov
xchg
inc
ret
inc
cmpb
mov
mov
and
adc
or
test
jge
loop
pop
decl
inc
sar
pop
adc
add
mov
out
push
mul
and
insl
mov
sbb
aad
adc
or
dec
cltd
call
sahf
cltd
in
cmp
sub
rcrl
iret
into
xchg
in
mov
lahf
cs
fs
inc
ja
movsl
jg
push
ror
xchg
or
fdivrs
je
dec
jecxz
js
mov
adcb
inc
ja,pt
hlt
hlt
repnz
sub
sub
mov
xor
dec
sub
dec
scas
into
rcrl
test
fnclex
cmc
in
mov
outsl
xchg
jbe
pop
mov
movsl
inc
mov
push
push
enter
push
mov
push
jl
in
jp
fisttps
outsb
pop
popa
xchg
iret
mov
or
test
scas
imul
test
or
sbb
xchg
jnp
jb
pop
aam
mov
inc
mov
sub
dec
adc
cmp
mov
adc
repz
dec
and
mov
push
fiaddl
filds
repz
lcall
mov
in
iret
into
or
cmp
lea
mov
dec
push
sahf
test
ficoml
stc
mov
stos
sahf
mov
and
mov
dec
call
jnp
mov
or
in
cmpsl
nop
sbb
xchg
cmc
hlt
jae
sub
adc
adc
adc
out
ds
sub
mov
push
add
sbb
ret
dec
ret
testl
xor
jbe
nop
sarb
ss
jb
dec
mov
xor
sub
insl
psrld
jns
mov
mov
xlat
js
pop
movsb
or
scas
jns
jecxz
cmp
xor
mov
movsl
dec
sub
movsl
xchg
inc
mov
or
mov
push
out
cmp
fwait
inc
cli
leave
data16
daa
dec
ret
js
fcmovnb
stos
pop
das
mov
jecxz
cli
cmpsl
dec
dec
pop
sub
movsl
scas
mov
ret
mov
adc
sub
mov
sub
or
testl
int3
jp
xor
in
push
pop
adc
xor
rcl
adc
cli
lret
outsl
pop
push
int
mov
xor
scas
daa
jo
pusha
addl
cld
repz
push
stc
push
movnti
jne
cli
lret
push
jbe
sub
inc
push
popf
cmp
mov
scas
add
inc
mov
int3
push
out
lock
les
add
pop
pop
cmp
mov
sbb
xchg
push
imul
mov
lods
bound
fcompl
add
push
mov
push
movswl
push
stc
out
push
push
jns
cli
and
sub
scas
in
out
out
movsb
gs
mov
pop
mul
xchg
ficomps
push
faddp
stos
out
dec
mov
dec
jb
imul
inc
data16
imul
add
and
pextrw
jne
out
sub
dec
xchg
add
or
je
pop
inc
out
push
adc
and
cmp
mov
xchg
dec
repnz
movsl
cltd
cli
insl
daa
shl
adc
addr16
scas
mov
cmpsl
shll
jnp
jle
cli
mov
fstpt
cmpsb
hlt
mov
popf
adcb
cs
cmp
dec
push
rorl
ja
add
lock
fisubrs
mov
pop
xchg
shl
mov
sub
cmc
insb
popa
ds
scas
daa
cwtl
fstpt
push
mov
int3
setns
or
aad
fs
add
fdivrs
out
jl
test
test
lods
leave
push
jno
mov
inc
dec
xor
fwait
dec
outsb
test
cmp
xor
repnz
arpl
addr16
jmp
insb
mov
int3
stos
imul
sub
icebp
test
jmp
subb
enter
bound
push
iret
sbb
jns
xor
lret
mov
insb
andl
shrb
dec
scas
xor
add
xor
comiss
mov
jno
pop
or
inc
jae
enter
cmpb
cld
mov
dec
enter
fwait
or
dec
mov
jns
call
and
out
adc
cwtl
mov
or
loope
sub
aam
push
jno
and
xor
fbstp
mov
inc
rcll
lcall
xor
ret
cmp
jbe
shl
xchg
and
int
cmp
sub
lea
out
xor
inc
inc
sub
mov
cmp
cmpsl
and
mov
movsl
mov
fucomi
mov
pop
and
outsb
mov
leave
push
dec
lds
xor
lret
mov
fldenv
ds
mov
lea
and
mov
les
out
cmp
mov
xor
mov
jbe
out
adc
inc
sub
xchg
addb
sub
cwtl
mov
js
scas
stc
xor
in
add
mov
or
cwtl
mov
add
xor
test
push
sub
pop
lret
cwtl
sti
nop
sbb
add
sbb
int
sub
mov
fsubrp
mov
fiaddl
jbe
mov
in
mov
pop
push
lea
loopne
mov
imul
ss
popf
int
sbb
in
sbb
mov
cmp
clc
add
iret
push
jnp
leave
mov
pop
xor
insb
cwtl
mov
mov
mov
sub
test
sub
pop
adc
xor
movsb
dec
dec
push
xor
sahf
inc
add
lds
xchg
movsl
hlt
or
dec
pop
imul
jnp
lret
mov
pop
pop
mov
outsl
arpl
mov
gs
je
call
mov
call
cmp
outsl
push
aad
pop
sub
sti
sbb
cmp
xor
insl
mov
xchg
push
imull
and
push
push
jnp
sbb
bound
dec
push
mov
inc
mov
insb
jecxz
mov
jb
inc
fisttpl
inc
stc
mov
sbb
inc
and
push
lods
lret
fsubrs
int
repnz
cmp
test
xor
push
mov
jge
pop
add
sbb
xchg
pop
xor
dec
xor
jmp
outsl
scas
xor
sbb
jl
loope
je
pop
ret
xor
loop
mov
test
mov
pop
dec
jg
mov
cmp
xchg
lea
jg
fnstsw
scas
xlat
mov
mov
daa
aas
add
loop
jne
adc
js
cmp
inc
lods
fsubrs
ljmp
movsb
sub
loopne
fdiv
mov
pop
mov
mov
ret
mov
aas
js
iret
or
xor
aaa
mov
aas
mov
lods
imul
outsl
gs
mov
repnz
push
cs
sub
dec
adc
sti
enter
iret
push
adc
adc
push
pop
inc
add
pushf
imulb
push
xchg
test
adc
mov
idivb
mov
push
jae
jno
dec
pusha
lahf
cltd
sub
and
test
pop
iret
or
cmp
subl
out
and
les
mov
jns
lcall
nop
je
fistl
fwait
push
ljmp
fcompl
jne
shrb
xchg
sbb
enter
sbb
out
adc
loopne
aaa
cmp
cli
and
outsb
mov
xchg
xor
mov
jbe
xor
nop
adc
in
mov
and
gs
call
mov
pop
repnz
movntq
in
mov
jmp
outsl
sub
push
outsb
mov
test
ja
out
fwait
stos
sbbl
inc
pusha
cmp
xchg
cmpl
jmp
or
and
push
mov
dec
mov
movl
sbb
jnp
and
push
addr16
les
lods
shr
inc
push
jnp
das
aaa
sbb
xor
sub
ss
pop
jmp
sub
imul
in
call
jle
jbe
call
es
pop
push
push
jae
mov
xorl
push
bound
mov
xor
jne
pushf
xlat
cmp
shrb
ss
cmpsl
lret
push
sbb
loop
scas
mov
lcall
cmc
xlat
ja
mov
add
ds
clc
test
imul
adcl
inc
xlat
sub
mov
pushl
aam
arpl
pop
sub
in
jns
jge
push
fs
sbb
push
ret
fadd
jmp
mov
loop
imul
cmp
orb
dec
and
sbb
call
rorb
or
cmp
cmp
and
jae
lret
jbe
jmp
mov
fs
mov
add
aaa
or
daa
bound
xor
push
cltd
ss
xchg
pusha
fwait
mov
lahf
ret
repnz
inc
insl
les
mov
test
inc
sub
rcll
inc
out
pop
lds
and
mov
inc
ljmp
inc
int
fistl
ficoml
cmp
loopne
dec
stos
xor
sbb
jne
xchg
out
lds
into
mov
js
sub
nop
insb
out
das
adc
jno
ss
cmp
jae
arpl
jge
sbb
mov
int3
pop
ficompl
pop
leave
adc
inc
cmp
shrl
xchg
pop
mov
and
lret
stos
data16
dec
xchg
movsl
pop
sub
pop
repz
mov
mov
jnp
push
mov
push
mov
push
aad
mov
xchg
dec
imul
aas
mov
jl
jnp
jno
pop
mov
push
push
or
insb
mov
test
orb
jnp
ret
xor
mov
mov
pop
cmp
imul
popa
pop
jo
push
aad
adc
loope
xchg
fdiv
lret
test
jo
mov
ret
add
mov
cmp
pushf
insl
push
adc
mov
fs
loop
push
jecxz
xchg
xor
sub
test
mov
adc
dec
imul
mov
loop
cmc
push
inc
outsl
insb
adc
enter
dec
in
jmp
xor
out
dec
pop
mov
dec
pop
std
movsl
pop
out
mov
jae
adc
fistpl
push
aas
pop
pop
in
es
scas
in
dec
das
insl
mov
lods
fistpll
imul
xchg
jo
pop
rcrl
jmp
sub
inc
inc
push
popf
mov
adc
divb
pop
lret
jl
cmp
cld
xchg
popa
mov
imul
sbb
push
es
dec
mov
push
push
in
mov
hlt
gs
dec
add
lock
in
fwait
jne
bnd
je
pop
mov
pop
mov
mov
lret
nop
or
xchg
pop
aas
or
cmp
jnp
or
icebp
iret
jo
test
push
dec
insl
stos
repnz
dec
push
sbb
shrl
dec
nop
lahf
mov
xchg
xorb
mov
cli
dec
and
sbb
ja
xchg
clc
jne
xchg
pop
movsl
mov
pop
adcl
adc
cs
std
ret
iret
mov
push
xchg
leave
jle
clc
cltd
inc
xchg
jg
dec
or
dec
and
mov
dec
push
and
push
pop
scas
lods
sar
push
insb
es
cmpl
out
xor
out
arpl
ss
xor
push
or
mov
inc
fnstsw
inc
xor
repnz
add
inc
push
aad
or
leave
cmp
popf
cli
fbstp
sub
js
int3
repnz
cs
adc
adc
and
xchg
es
and
scas
pop
daa
or
cld
cmp
mov
pop
test
jmp
fs
push
ret
pop
lret
mov
jmp
pushf
sbb
add
sti
sub
cs
aaa
xor
popa
add
sub
pop
mov
call
iret
fistpl
adc
mov
or
pop
cmp
ljmp
test
dec
push
xorl
dec
out
mov
testl
adc
pop
loopne
mov
pop
sbb
mov
out
add
pop
hlt
cmpb
pop
cmc
in
mov
cmp
pop
add
les
push
pop
enter
inc
ljmp
stos
nop
dec
insl
repnz
jns
pop
add
icebp
sbb
push
dec
mov
inc
test
xor
cmpsb
sub
push
dec
clc
mov
cmpsl
xchg
rorb
mov
dec
pop
aad
pop
fdivrl
mov
xchg
mov
int
inc
js
sahf
int
stos
add
addr16
cwtl
pop
dec
ficoml
sbb
imul
add
scas
jl
testl
cmp
fimull
adc
loop
out
sbb
xchg
add
cmpsb
push
push
xchg
jle
pop
test
addl
lods
movsl
sbb
scas
sbb
movsl
or
mov
imul
iret
pop
movsl
push
mov
movsb
mov
sub
shll
out
push
cmp
mov
stc
inc
scas
cmp
jnp
mov
dec
pusha
fildl
sbb
shll
xchg
xchg
sub
aaa
cmp
jmp
ret
pop
mov
cmpsb
jns
mov
push
mov
sahf
popa
and
insl
mov
jno
cmp
dec
mov
aaa
add
push
inc
adc
and
sbb
push
popf
ljmp
sbbl
repz
cmp
aas
jecxz
aaa
push
xchg
fs
stos
add
mov
xor
or
popf
jnp
mov
rcrl
into
xchg
scas
and
fs
jle
xchg
cmpsb
sbb
ss
das
pop
icebp
jno
data16
fcoms
push
das
mov
add
shlb
push
pop
cmpsb
roll
fcmove
push
cwtl
clc
mov
and
hlt
add
arpl
and
jns
push
mov
pop
pop
pop
mov
fadds
push
jmp
je
cmpsl
adc
stos
ss
cmpl
dec
mov
outsb
pop
push
xlat
pop
aam
aas
sub
mov
fiaddl
xor
icebp
adc
test
out
jmp
dec
lret
xor
cmp
jnp
or
mull
mov
leave
fisubs
out
jge
cmpsb
les
call
shl
scas
cmpsl
jecxz
adc
int3
jo
std
xchg
mov
cwtl
push
imul
cmp
imul
sub
out
mov
pushf
jns
insb
clc
jbe
adc
cmpsl
and
fwait
rcrb
push
lods
jae
pop
roll
or
outsl
mov
fwait
add
iret
insb
ret
sbb
mov
cmp
cwtl
adc
dec
cwtl
inc
pop
sbb
inc
rolb
data16
stos
mov
ror
push
in
xlat
mov
inc
dec
aaa
outsb
mov
jae
in
cvtdq2ps
inc
lods
xchg
push
stos
lock
fwait
mov
fcoms
cwtl
pop
push
je
sbb
in
push
cli
sub
xor
push
out
mov
push
repnz
mov
mov
mov
ds
jg
ret
neg
push
sub
mov
push
test
jg
imull
lock
aad
jb
lret
mov
pusha
cli
cs
test
cli
pop
or
adc
gs
das
aaa
mov
xchg
gs
das
cmp
jl
dec
std
jno
sub
clc
fistl
adc
in
mov
cmp
stc
and
les
leave
inc
push
fsub
adc
sub
jnp
mov
inc
xchg
and
dec
push
test
andl
movsb
repnz
or
out
cli
pusha
icebp
insb
xor
inc
stos
cmp
mov
or
dec
sub
cmc
stos
aaa
ja
jle
mov
scas
clc
sarl
xor
mov
sub
fcmovu
pop
pop
movsl
push
xor
pop
xor
push
push
and
dec
andb
aad
pusha
xor
sub
iret
push
fsubl
add
pop
cmpsl
and
mov
pop
imul
mov
push
adc
mov
xlat
fldt
push
inc
mov
mov
daa
pop
jo
into
inc
and
and
popa
sbb
fcomp
sbb
test
push
mov
jns
neg
lahf
sub
add
cs
scas
jne
sti
xor
cmp
clc
jo
mov
xchg
shlb
je
add
inc
fs
stc
sbb
push
outsb
inc
ljmp
dec
mov
scas
pop
rcll
xchg
jne
test
icebp
adc
mov
mov
mov
lahf
sub
add
enter
or
sub
movsb
or
cmp
ds
mov
cmp
mov
mov
mov
xor
test
sub
mov
mov
xlat
push
xor
ret
inc
and
and
fimuls
pop
leave
inc
enter
push
dec
shlb
ficomps
scas
jl
xchg
mov
and
cmp
les
lds
ja
cltd
push
lcall
pop
jb
sbbl
inc
mov
hlt
pushf
xor
pop
dec
mov
cld
or
xchg
sub
inc
and
pop
movsl
cld
add
subl
cmp
out
stc
xor
ja
mov
movsl
popa
cs
out
inc
shll
push
mov
push
mov
xchg
mov
ret
pop
push
insb
ja
rol
adc
or
insb
hlt
shr
jb
in
push
add
cmp
jb
xchg
es
lret
shlb
movsb
dec
xchg
pusha
jg
xchg
add
test
stos
and
fsts
inc
dec
sub
mov
into
stos
jecxz
and
popa
and
xchg
lds
xor
leave
sub
cmpsb
jbe
jmp
and
add
ss
pop
mov
fwait
lahf
icebp
adc
sub
mov
and
pop
popa
pushf
mov
xchg
loope
xchg
repz
push
xor
jno
popa
arpl
jae
inc
xor
mov
icebp
xchg
loope
xchg
repz
push
xor
jno
popa
arpl
jae
inc
xor
mov
jmp
repz
xor
jno
push
inc
cmp
mov
adc
repz
scas
xor
test
imul
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
outsl
pop
mov
fldenv
movsl
jge
icebp
in
add
add
pop
or
add
add
add
xchg
add
add
add
add
add
popf
add
add
add
add
popf
add
add
add
add
add
add
stos
add
add
add
add
repz
add
push
add
add
add
add
add
int3
add
lods
add
dec
add
add
lods
add
add
add
cmpsl
add
mov
add
add
imul
fadds
fadds
add
add
add
out
lea
push
add
add
sldt
add
add
add
scas
add
adc
cmpsl
add
add
dec
add
jno
test
inc
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
pop
add
add
add
add
lods
add
outsl
add
add
fadds
dec
add
outsb
add
add
add
add
add
stc
add
add
add
addb
add
add
add
add
aad
addb
add
lcall
add
add
add
or
add
add
add
lret
add
add
add
add
add
add
add
add
add
push
add
add
add
popf
add
outsb
add
add
add
scas
add
add
add
add
fadds
gs
add
add
add
push
repz
imul
xchg
add
add
flds
in
add
add
add
add
add
lcall
add
add
lcall
add
add
add
add
add
or
cmpsl
add
mov
int
pop
add
add
add
add
fadds
iret
add
add
add
dec
add
add
add
add
add
xor
add
fadds
cmpsl
add
add
add
add
mov
dec
add
add
outsb
add
add
outsb
add
add
jecxz
inc
add
add
add
addb
add
add
loop
out
inc
add
add
lret
add
add
outsb
add
add
add
add
sub
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
cltd
add
add
push
add
add
add
add
lock
add
add
add
add
add
addr16
add
add
add
add
jns
ja
addb
add
add
bound
scas
add
add
sbb
add
add
fadds
push
add
inc
add
add
dec
add
add
add
add
add
in
and
jns
std
mov
stos
dec
pop
sub
xchg
fdivrs
sub
dec
test
int
js
arpl
push
cmp
and
xor
mov
ror
mov
push
mov
cmp
ds
movsb
pop
dec
jmp
divl
dec
mov
insl
nop
gs
fs
inc
push
sbb
roll
rcll
jb
addr16
pop
and
pop
out
xor
stos
mov
push
cmpsb
mov
inc
mov
mov
mov
les
mov
nop
out
inc
stos
stc
adc
out
cmp
jnp
sahf
roll
pusha
push
push
clc
push
outsb
cmpsb
jne
and
pop
dec
add
push
imul
sbb
or
mov
cmpsl
cwtl
or
test
stos
add
dec
cmp
adc
and
pushf
popf
lods
xchg
and
mov
shll
bound
xor
std
iret
mov
lods
mov
cmp
lds
loope
scas
dec
mov
icebp
sbb
dec
jae
push
push
cmp
insl
imul
rcr
aas
jb
jl
cs
scas
push
leave
mov
pop
sbb
pop
aam
cmp
push
lods
clc
in
aaa
imull
xor
bound
dec
push
lahf
pop
cmpsl
ds
xor
lds
arpl
insl
mov
jns
xchg
adc
push
inc
sarl
insl
mov
cli
loope
and
repnz
sbb
test
fsts
mov
pop
mov
fisttps
stc
div
cld
imul
repz
mov
mov
movsl
jle
xor
cs
cmp
std
bound
mov
push
in
stos
add
roll
mov
leave
or
inc
std
xchg
cltd
xlat
loopne
sbb
ret
or
mov
je
popf
fdivrl
xchg
adc
xor
lahf
pop
xor
iret
sbb
push
dec
add
lcall
mov
jecxz
andnps
fisubs
mov
push
bound
jmp
and
je
lret
pop
rcll
aas
mov
stos
sub
xlat
cltd
dec
push
sub
repnz
inc
outsb
adc
mov
mov
pop
lea
jge
adc
mov
cwtl
xor
jo
push
das
das
std
int3
in
pop
jecxz
push
lds
add
inc
push
dec
out
pop
shlb
ss
push
dec
out
int3
cmp
loop
roll
stc
add
leave
fdivr
frstor
cmpsb
mov
fstl
sub
into
pop
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
