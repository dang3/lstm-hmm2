call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
jp
dec
mov
pop
scas
jg
pop
lret
clc
add
stos
pop
mov
outsb
push
jp
dec
mov
cmp
or
sbb
ljmp
cs
jo
dec
mov
outsb
push
jp
dec
and
fsubrs
out
cmp
ljmp
pop
stos
or
repz
ficompl
iret
dec
in
xor
and
jge
das
and
ffree
daa
xchg
inc
bound
test
lret
sub
cmp
add
adc
ja
xor
and
adc
cmc
lret
and
out
pop
jg
call
mov
pop
out
push
fidivrl
pop
shrb
stos
lcall
mov
vrcpss
sbb
fwait
ja
sub
and
ret
jb
adc
cmp
jae
inc
cmpsl
push
aad
sbb
idivb
xchg
adc
cmp
push
fdivrp
xor
pop
jne
lcall
lret
movsl
jle
xchg
mov
scas
mov
out
lods
dec
mov
inc
dec
ss
add
adc
dec
lret
sub
cmp
or
sbb
cli
cmpsb
lret
adc
lcallw
loope
rcrb
dec
jnp
mov
lcall
dec
sub
sti
and
or
pop
sbb
push
enter
ret
jno
dec
xchg
pop
fstpl
insb
ficompl
pop
adc
dec
jecxz
lock
or
aas
ret
cmp
or
sbb
ljmp
cs
pop
mov
outsb
push
jp
dec
mov
cmp
or
sbb
ljmp
cs
pop
mov
outsb
push
sbb
xlat
ret
and
pop
push
test
pop
push
sub
mov
cmpl
mov
push
and
movsl
mov
es
les
fs
jbe
pop
mov
sub
and
mov
cltd
in
jg
incb
jbe
mov
lret
jbe
std
ds
push
lret
icebp
mov
sti
mov
sub
hlt
and
xchg
push
push
mov
mov
cmp
je
inc
mulb
lods
lret
fmull
push
sub
idivb
and
cmpsl
inc
pop
dec
ret
mov
cld
enter
add
sbb
sbb
add
xchg
dec
insb
in
jg
nop
mov
outsb
fwait
adc
ds
mov
xchg
add
je
mov
stos
out
inc
daa
xchg
jecxz
jg
xchg
xchg
cmovne
mov
lds
jb
cld
sub
dec
or
xor
test
push
xchg
jns
push
inc
mov
push
or
and
add
int3
or
clc
inc
jecxz
xchg
inc
jmp
pop
les
jae
mov
orl
cmc
push
dec
pop
jae
lret
push
std
outsl
insl
inc
repz
dec
popa
jno
aas
outsl
jo
out
sub
jae
adc
mov
ljmp
dec
in
movl
sbb
cmp
sahf
out
jmp
mov
inc
mov
test
stos
pop
dec
and
and
movsb
loopne
and
jg
cwtl
jl
movsb
dec
xor
js
xchg
cmpsl
lahf
stos
js
mov
push
int3
lcall
lods
loopne
je
aam
xlat
stos
dec
test
xchg
adc
gs
inc
mov
les
jl
push
pop
cli
pop
sti
dec
scas
mov
movsb
jg
pop
aam
hlt
inc
push
data16
dec
sub
or
jbe
clc
out
movsl
jo
jbe
mov
xchg
jmp
jmp
mov
mov
pop
cwtl
rcll
mov
mov
mov
add
andnps
push
movsb
push
or
lods
adc
icebp
sbb
fisubrl
xor
pop
add
out
testl
push
fsubrs
inc
xor
lods
xchg
mov
mov
pop
in
arpl
fs
add
jno
jb
add
into
dec
push
pop
cwtl
dec
sub
adc
add
push
cmp
fnsave
mov
add
clc
xor
cmpsl
pop
jo
lea
inc
or
xlat
push
daa
in
dec
add
stc
popa
lock
std
mov
jb
nop
add
cmp
adc
xchg
loop
mov
lcall
xchg
adcb
stos
ss
ljmp
andb
ss
xchg
jno
or
popf
jbe
out
sbbb
push
aad
icebp
daa
test
push
mov
xchg
xchg
daa
mov
pop
inc
jg
sub
repnz
jb
xlat
mov
and
xchg
sub
call
sbb
cmp
out
pusha
jb
xchg
or
outsb
stos
push
pop
pop
into
and
cli
outsb
mov
in
sbb
insb
mov
lret
ret
aaa
add
ds
mov
xchg
and
dec
stos
lods
cwtl
pop
or
sub
je
lock
lock
jbe
adc
sbb
adc
push
ret
loope
cmp
popa
xor
ljmp
push
vcvttss2si
call
cwtl
xor
bt
cmp
inc
cmpsb
in
rclb
sbb
jb
mov
fldl
xchg
inc
pop
mov
push
jge
jg
cmpsb
adc
mov
mov
mov
ret
sub
fucomp
push
call
pushf
ljmp
insb
jp
lahf
xchg
mov
lods
cmc
arpl
jne
gs
inc
ds
stos
imul
xor
add
cltd
addr16
loopne
add
add
iret
push
sbb
inc
sysret
and
cmp
cmpsl
xor
mov
mov
mov
iret
mov
xchg
pop
lds
mov
sahf
fimull
add
inc
shr
jmp
scas
out
insl
xchg
pop
jecxz
add
mov
mov
mov
sbb
and
xor
sti
lcall
je
pop
inc
mov
enter
out
push
xor
loopne
inc
jbe
add
test
or
subb
movsl
sbb
pop
add
movsl
out
sbb
andl
repz
in
dec
mov
and
popf
mov
pop
or
lea
sub
lcall
or
adc
sarb
lahf
push
fistpll
in
lret
push
icebp
into
dec
or
in
sbb
fisttpll
out
adc
mov
adc
cmp
sti
xchg
and
mov
pushf
lods
je
in
lods
sub
ret
xchg
dec
jg
les
lret
int
repz
dec
cmp
cmp
mov
cmp
jnp
or
mov
inc
jo
fs
pop
lods
push
and
push
push
imul
repnz
mov
adc
pushf
mov
or
xchg
movzbl
das
mov
ljmp
cmp
bound
push
test
cmp
loope
lret
jl
daa
nop
jp
imul
mov
rcrl
pushf
inc
sbb
adc
pop
ret
roll
push
rcl
push
and
clc
xor
in
pop
shl
inc
push
ljmp
aad
jae
xor
mov
fsubrl
xor
and
sbb
js
mov
add
adc
scas
scas
xchg
sarl
nop
inc
incb
adc
xchg
arpl
mov
jne
ficoms
mov
cmp
push
rol
int
insl
and
in
cmpl
xchg
or
xchg
mov
insl
xor
test
xchg
xchg
cmp
lea
int3
test
mov
mov
fwait
dec
add
mov
ror
push
in
push
jmp
icebp
jae
sbb
adc
addr16
mov
sbb
sub
jmp
subl
loope
test
sbb
adc
xchg
mov
mov
inc
cwtl
push
mov
scas
mov
ror
fimull
mov
cli
cmp
aas
mov
and
xchg
fdiv
or
xor
or
or
jl
fmull
cmpsl
xchg
push
pop
std
mov
repnz
adc
sti
mov
push
decb
scas
aas
aas
repnz
cwtl
ljmp
and
rcr
jmp
and
cmpsl
rcll
popf
stos
jp
icebp
sub
mov
fcomi
rorl
pop
pop
popf
jmp
mov
jne
cmpsb
sahf
aam
jmp
cmp
add
jbe
sbb
xor
cmc
cmp
mov
push
adc
dec
popf
fprem1
pop
lret
xchg
adc
ja
int3
int
mov
addr16
dec
bnd
addr16
add
or
push
and
xor
adc
xchg
mov
das
rclb
mov
push
ror
ss
jl
loope
cwtl
and
fwait
lret
mov
add
adc
xor
in
xor
dec
inc
cmp
inc
jecxz
add
push
dec
push
adc
aaa
scas
int
sub
xchg
push
test
cmp
jno
inc
andb
jae
gs
pop
int
daa
nop
arpl
enter
sbb
ret
cmpsl
pop
fistpll
xchg
jno
xchg
loop
adc
sbb
fisttps
push
inc
insb
cld
mov
filds
inc
lea
push
mov
jle
sarl
sti
jmp
jp
adc
into
xor
inc
inc
inc
mov
cli
dec
sbb
int
nop
mov
inc
xchg
div
pop
inc
mov
rorl
xchg
mov
movsl
cmpsb
insb
dec
xchg
pop
lret
test
pop
add
bound
jmp
iret
mov
mov
add
mov
std
xchg
test
push
or
inc
fisttpll
jp,pt
jle
mov
std
loopne
mov
cmp
int
sbb
pop
sub
popf
and
xchg
push
mov
jb
cli
pop
mov
cmp
cmp
call
fcoml
inc
lods
xor
jb
flds
out
sbb
dec
pop
pop
mov
sub
pop
pushf
bound
mov
mov
cs
xor
pop
sbb
xor
adc
add
push
fwait
push
xlat
or
jnp
mov
out
mov
mov
hlt
cmpl
mov
sub
push
jl
loopne
jno
out
and
adc
add
lcall
ret
add
sbb
xor
jmp
cmp
mov
mov
dec
xor
inc
mov
push
sti
cmpsl
movsb
jecxz
and
mov
mov
xchg
jns
xchg
inc
mov
nop
jecxz
idiv
sub
cld
cmc
inc
xor
xchg
mov
sub
adc
fdivl
test
dec
dec
or
dec
in
das
pop
shll
inc
sti
je
clc
or
cwtl
aas
nop
xor
mov
lea
cmp
dec
insb
push
sbb
jecxz
and
jnp
cmp
mov
aad
movlps
add
mul
jmp
push
mov
mov
scas
jne
jmp
adc
icebp
in
mov
mov
mov
jmp
dec
lcall
mov
data16
mov
pusha
fldl2t
aad
fwait
pop
sub
and
fcmovne
jmp
adc
push
or
rcll
je
loop
mov
sbb
jne
movsl
xor
push
add
ds
mov
ret
adc
call
mov
jbe
and
lret
add
xlat
mov
sbb
inc
rorl
rcrl
fdivr
pop
jbe
or
popf
or
out
cmp
inc
jge
cmp
jns
decb
pop
fistpl
push
mov
mov
stos
fsts
notl
rorl
clc
stos
sbb
mov
hlt
pushf
insb
dec
daa
je
or
ss
std
pop
andl
pop
jecxz
mov
push
mov
shrl
push
adc
bound
sbb
fisubrs
and
mov
pop
fcomps
inc
adcb
push
jns
int3
sbb
repz
dec
fnsave
out
adc
pop
inc
scas
test
sbb
pushf
pop
mov
push
cmpsl
outsb
jmp
ret
cmp
dec
stc
push
lea
push
xchg
cmpsb
sbb
sub
in
lahf
pop
mov
sbb
push
pop
mov
pushf
mov
call
mov
popl
sarl
shlb
test
call
cwtl
mov
pop
inc
add
mov
dec
int3
sbb
ds
scas
adc
push
stos
or
push
cltd
rcrb
aas
jecxz
negb
fs
mov
sub
inc
es
xor
aas
aaa
jmp
aad
sub
push
pop
xor
popf
and
loopne
or
dec
mov
fidivs
adc
push
and
lcall
jb
inc
lea
out
push
sub
xor
fmull
fsubrl
pop
mov
mov
outsl
sbb
movsl
pushf
push
cld
mov
pop
push
in
andb
push
sbb
jo
mov
cld
fnstenv
mov
mov
push
mov
and
sbb
cmpsb
sahf
jge
not
cmp
loope
mov
cld
mov
adc
xchg
fistps
xor
addw
lods
ljmp
icebp
ja
xor
xor
mov
ud2
idivb
inc
mov
pusha
or
stc
mov
mov
repz
inc
or
movsl
push
mov
jle
xor
loop
xor
xchg
mov
mov
adc
push
add
mov
add
out
pop
xchg
data16
shll
stc
jnp
push
sarl
mov
out
je
jbe
sbb
mov
repz
aaa
and
xor
enter
or
push
add
aaa
xor
mov
sbb
xchg
xchg
das
fcmovbe
inc
mov
add
jge
mov
es
cmp
fidivs
adc
jp
xor
scas
lahf
cmc
outsb
out
adc
add
lcall
leave
sub
addr16
fidivl
or
lods
dec
adc
inc
xor
cmp
sub
push
adc
movsl
jp
push
outsl
test
jno
jle
push
aas
xor
fcmovnb
ljmp
imul
scas
cli
xor
scas
mov
scas
xchg
fdivrs
inc
jle
test
dec
adc
rclb
xchg
cld
sbb
imulb
outsb
test
cmp
lea
into
aam
mov
dec
sbb
and
xchg
jmp
popf
jmp
xchg
ljmp
xchg
jb
call
iret
pop
mov
and
sbb
mov
xchg
out
sti
adc
lret
mov
pop
lcall
adcl
lcall
out
arpl
out
sarl
aad
dec
cli
inc
fists
or
add
sub
jns
jnp
dec
xchg
pop
popf
fcom
add
jo
xchg
arpl
loope,pn
in
or
test
add
xchg
in
cltd
pushl
xchg
dec
jb
mov
popf
sbb
jbe
xchg
hlt
and
adc
xchg
add
sbb
into
test
sbb
aaa
lret
imul
push
sub
push
aam
cmp
pop
repz
push
and
adc
jns
dec
loop
movsl
int
mov
mov
setnp
sbb
mov
pop
push
fdivrs
lea
mov
xor
ret
lods
movsl
ljmp
push
pop
inc
and
push
mov
sbbb
cvtdq2ps
gs
inc
mov
les
popf
push
das
sar
jno
dec
cmp
mov
lock
pop
pop
push
cmc
and
mov
pop
cmpb
rorb
xchg
enter
cmp
cmp
lds
sbb
es
in
loopne
cli
adc
push
cmp
outsb
data16
es
cmp
or
test
je
shrb
lds
mov
dec
fdivl
xorb
cmp
inc
mov
test
pop
xor
xchg
insb
iret
pop
mov
mov
cmp
out
loope
add
inc
pop
mov
mov
xchg
hlt
cmc
push
jne
stos
or
cmp
cltd
mov
call
gs
cmp
scas
fwait
orl
idiv
and
jle
shll
rcrl
adc
dec
or
test
or
nop
loopne
stos
leave
icebp
aaa
andb
xchg
inc
aas
jle
cli
mov
lret
mov
adc
dec
test
adc
ficomps
fs
out
sub
pushf
mov
cmp
or
das
xchg
mov
clc
das
test
dec
lcall
and
sub
ret
gs
ds
pop
sbb
dec
sbb
ss
push
fmuls
loopne
xchg
sbb
es
addr16
icebp
and
ljmp
repz
jge
push
sbb
add
imul
jae
ret
iret
push
jmp
sti
mov
xlat
addr16
sub
mov
xor
push
lahf
dec
push
or
mov
and
mov
popf
out
sbb
inc
addr16
fstps
int
mov
adc
or
les
adc
inc
push
negl
mov
leave
out
jno
pop
inc
xchg
push
popa
xlat
mull
xchg
push
mov
inc
adc
movsb
shufps
into
sbb
popa
insb
das
cmp
pop
cli
outsb
jb
cwtl
clc
std
or
std
fstpt
hlt
xchg
roll
dec
dec
xchg
mov
shrb
outsb
jb
pop
sbb
inc
push
xchg
and
lret
xchg
pop
out
or
push
neg
out
jp
add
rcll
adcl
jbe
or
in
div
push
inc
ss
std
je
in
add
adcb
jle
cmp
in
cld
jne
mov
std
cmp
dec
or
mov
mov
int3
ja
outsb
jl
idivb
push
push
into
adc
inc
pop
ret
les
ja
lods
xchg
mulb
loop
test
movsb
loope
lods
in
pushf
jbe
scas
iret
sbb
call
movsl
cli
jecxz
mov
xchg
mov
popf
aaa
jns
push
push
sbb
jo
neg
insl
roll
pop
xchg
bound
subl
dec
fwait
jp
les
lock
ljmp
call
cwtl
jg
pushf
mov
sub
enter
mov
xchg
mov
data16
sub
sbb
fisttps
cs
fimuls
jp
inc
shlb
sarl
xor
inc
cs
cmp
fnstsw
sub
sub
aam
lcall
sub
loopne
mov
mov
ret
jg
push
movl
subl
frstor
jo
rcrl
push
add
sub
andl
jne
pop
jp
adc
push
mov
ret
inc
xor
dec
jns
mov
stc
int3
mov
push
inc
sbb
stos
mull
jb
jb
or
stos
xchg
pop
gs
cli
ss
lret
lahf
mov
fidivs
cs
jae
enter
mov
clc
aam
sub
lods
pop
sub
add
dec
lahf
shll
jp
inc
adc
mov
jns
fcmovu
mov
pop
push
pop
es
lret
fdivrs
adc
leave
mov
mov
push
or
pushf
xor
add
sbb
push
dec
dec
mov
js
inc
imul
lcall
ret
hlt
adc
addb
mov
imul
pop
jg
js
outsl
mov
lret
ljmp
adcb
movsb
stos
dec
aas
in
adc
loop
data16
and
jl
xorl
push
hlt
mov
xchg
xchg
dec
and
pop
iret
std
movsb
cmpsl
cmp
popf
aaa
aas
cmp
sarl
rcrl
ljmp
xor
mov
pop
aaa
call
sahf
sbb
push
add
repnz
jbe
call
das
mov
and
out
sub
les
sub
fidivs
int3
insl
and
sub
ret
fidivrl
stos
cli
lods
push
lea
inc
mov
jl
and
sbb
jg
fdivs
movsl
das
repnz
pop
inc
jmp
ds
pop
les
pusha
shll
push
pop
cwtl
mov
jl
aam
pop
mov
add
mov
shlb
and
and
out
xor
and
dec
mov
shrb
imul
cmp
xor
add
sub
adc
mov
dec
adc
call
data16
sbb
jle
test
xchg
and
xor
jne
pop
test
insb
lret
jecxz
loope
adc
je
mov
aas
jle
inc
mov
test
mov
or
lea
out
loope
mov
and
push
push
adc
inc
lea
mov
sub
je
in
cmp
or
std
jo
imul
and
or
sub
cmp
icebp
xchg
aas
arpl
sub
flds
mov
push
in
jecxz
sbb
rcr
sub
iret
das
ds
ret
adc
or
fstl
jb
lods
jnp
pop
inc
int3
jnp
lods
jae
xchg
or
sub
std
into
out
lea
test
dec
mov
adc
and
sub
xchg
in
sarb
sub
adc
outsb
rcll
and
mov
mov
mov
cmc
stos
mov
ja
inc
and
push
lea
jno
dec
add
pop
pusha
pop
movsl
daa
aam
dec
loop
ljmp
mov
or
push
or
dec
jnp
mov
fiadds
lret
jge
mull
add
pop
test
test
mov
sub
lods
mov
xor
fwait
ss
pop
xchg
arpl
lods
test
mov
xchg
stc
outsb
xor
jl
cwtl
fisttpll
sbb
sti
xchg
test
jbe
mov
xor
std
adc
pop
mulb
mov
mov
cmc
mov
push
mov
xor
sti
ret
inc
mov
mov
mov
inc
imul
push
repz
jge
mov
push
jg
and
lods
mov
jg
shlb
add
mov
loopne
imull
xchg
enter
fstps
aam
lods
xchg
jae
subb
mov
cmp
pop
xchg
rol
sbb
test
and
and
repnz
scas
push
bound
cli
jno
insl
fs
mov
sahf
imul
jno
cmp
insl
add
jne
sbb
cmp
sub
fwait
in
dec
int3
dec
data16
jg
inc
pop
jo
mov
mov
or
jno,pn
mov
outsl
daa
push
or
jb
data16
cli
jmp
xchg
stc
mov
iret
xlat
adc
fisubl
fstps
inc
imul
sub
cmp
or
sbb
ljmp
cs
pop
mov
outsb
push
jp
dec
mov
cmp
or
sbb
ljmp
cs
pop
mov
outsb
push
jp
dec
cmpsb
pop
stos
sub
cmp
jmp
cli
or
stos
pop
mov
mov
jp
dec
pop
pop
out
sub
cmp
mov
cs
ficompl
xor
jb
bound
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
sub
outsb
or
add
push
dec
sbb
into
test
mov
mov
sahf
mov
dec
sub
outsb
or
push
push
ds
into
test
mov
mov
sahf
clc
scas
enter
sub
outsb
or
push
push
ds
into
xchg
fsubp
popf
clc
rcrb
loopne
rcr
pop
sub
sbb
scas
push
mov
or
add
mov
and
inc
adc
and
js
sbb
out
nop
lcall
adc
jnp
jno
mov
enter
cmp
divb
psllq
rcr
into
push
xchg
pop
cs
jle
or
pop
cmp
or
or
imul
or
fwait
into
lods
arpl
addr16
imulb
mov
sub
add
inc
in
push
aas
push
fsubrp
and
add
pushf
mov
mov
data16
sahf
insl
mulb
mov
sahf
push
mov
push
mov
or
fst
fcoms
sub
outsb
or
push
push
ds
into
test
mov
mov
sahf
clc
scas
enter
inc
aaa
jmp
dec
sbb
pop
push
cmp
jg
pop
fcmovbe
out
imul
test
sub
imul
dec
or
ds
stos
in
scas
fidivrs
xchg
fdivrl
cmp
jg
push
add
js
dec
ds
into
test
mov
mov
sahf
clc
scas
enter
sub
outsb
or
push
push
ds
into
test
mov
mov
sahf
clc
scas
enter
sub
sub
aam
mov
xchg
pop
and
cmpsl
mov
jl
shrl
outsl
cmp
iret
dec
mov
loopne
push
lds
mov
push
adc
pusha
mov
insb
fists
shl
imul
add
push
jb
cmp
xorl
cli
push
icebp
jmp
pop
push
cltd
enter
jne
adc
in
pop
dec
xchg
fistpll
cmp
shrl
or
lea
adc
mov
and
test
test
pop
test
stos
jge
cmp
pop
xchg
test
push
pushl
fiaddl
leave
sahf
jbe
jecxz
jno
xlat
push
aad
mov
push
pop
xchg
fcmovu
adc
cmp
in
call
cmp
sub
fstpt
lds
push
push
vsqrtss
pop
or
add
adc
cmc
add
mov
jb
lcall
fisttps
sbb
push
xchg
out
cmp
test
mov
pop
ret
inc
xor
and
push
fistl
jne
mov
add
shl
jp
loop
ret
cmc
mov
addr16
xchg
loope
jge
jnp
aam
test
lock
cmp
mov
sbb
add
cmp
rorb
push
sub
mov
subb
ret
sub
jmp
cmpsb
mov
jl
jbe
loop
mov
and
cmpsb
addr16
push
mov
add
pop
out
sbb
sarl
divl
movsl
clc
mov
out
in
test
pushf
sbb
lret
or
ss
addb
lret
pop
mov
pop
aas
test
lahf
pop
pop
inc
pop
pop
dec
sub
ret
jnp
adc
cmp
orl
sbb
imul
scas
dec
xor
sub
sarb
and
cmp
pop
sub
ficompl
imul
nop
cltd
daa
sub
cmp
je
jmp
ret
clc
pop
popf
sarw
scas
inc
std
sbb
bound
addb
push
xchg
iret
cmp
rcrl
pop
sub
jle
push
mov
cli
mov
cmpsl
idivl
aam
push
pusha
mov
fimull
or
fsts
aam
in
test
push
mov
pop
pop
lret
mov
jo
xor
mov
add
stos
loop
xor
inc
xor
xor
int
xor
bound
xchg
out
sti
adc
outsb
and
jae
jae
pop
or
push
test
inc
ret
adc
mov
jmp
inc
add
mov
mov
push
mov
push
add
ja
test
jns
aam
out
hlt
and
or
data16
gs
in
pop
hlt
dec
lods
add
sbbb
test
fs
cmpsl
inc
xlat
push
sbb
sahf
pop
insb
mov
movsl
and
push
pop
inc
leave
roll
push
stos
jp
or
pusha
mov
push
push
ds
out
in
imul
xchg
adc
xor
and
fwait
sub
mov
pop
push
cmp
lret
mov
out
jmp
mov
mov
stc
cmp
bound
mov
inc
add
arpl
jl
movsb
jg
pop
add
push
popf
cltd
arpl
or
xor
or
je
fsts
mov
push
add
mov
push
imul
mov
fnstsw
cmp
pmaxsw
add
push
rep
xchg
andps
and
pushf
push
sbb
ficoml
push
stos
add
leave
int
aaa
mov
dec
add
sbb
push
out
sbbl
xlat
dec
leave
add
cmp
sarb
pop
pop
push
dec
repz
shrb
and
xor
insl
rcrl
sbb
inc
pop
not
cmp
inc
ds
pushf
outsl
adc
mov
into
fildll
sbb
jns
fildll
addr16
jp
mov
cmpsl
test
out
sti
jns
inc
add
sbb
in
clc
fbld
movsb
enter
fmul
in
std
outsb
std
ja
fldt
fcomps
lret
inc
jo
test
sbb
loop
push
sub
fistl
sti
cmp
mov
imul
cld
xchg
and
scas
in
or
loope
inc
jnp
inc
xchg
jbe
cs
adc
movsb
aas
fdivrs
lcall
and
test
pushf
shlb
xor
dec
add
mov
mov
mov
pop
jno
stos
push
sbb
imul
jo
ds
mov
aad
and
push
enter
inc
pop
lock
dec
mov
xchg
fucomi
xor
out
mov
ss
xchg
pop
in
ss
test
or
push
xchg
loope
nop
test
cmp
inc
in
stc
inc
rclb
je
lds
xchg
add
stos
xlat
jl
sbbl
adc
mov
dec
jge
jae
insb
jg
lret
das
idiv
lea
call
mov
cmpb
push
cwtl
jmp
mov
dec
in
negb
sbb
push
loop
sarb
bound
sub
fists
jnp
mov
pop
or
or
pop
pop
stc
test
pushf
pop
insl
xor
add
pop
sbb
jbe
xor
add
addr16
push
pop
rolb
mov
popf
add
test
jno
mov
or
ret
js
jne
pop
mov
addr16
or
mov
mov
cli
dec
lret
aas
push
xchg
cmp
repnz
push
repnz
sub
lahf
push
cmp
jbe
push
test
cmp
xor
test
jle
add
rcrb
and
sub
jecxz
scas
nop
adc
ljmp
cmpsb
iret
test
xor
clc
jne
repz
aas
fistpll
and
sub
aam
subl
les
repz
pop
dec
mov
dec
dec
sbb
lods
out
movsb
mov
addl
sbb
push
add
pop
sbb
adc
shl
cwtl
pop
sbb
test
test
ss
inc
addr16
xor
pop
test
jg
push
push
mov
xchg
inc
scas
mov
mov
leave
daa
repz
xor
je
enter
mov
cs
push
jnp
mov
in
fs
dec
xor
mov
movsl
dec
stos
add
bound
mov
fsts
ss
sub
cli
mov
loop
ds
lcall
ljmp
outsb
pop
sbb
dec
and
into
adc
mov
push
cmp
aam
hlt
test
mov
push
lahf
push
fmuls
pop
fildll
repz
jae
sbb
adc
dec
xchg
jb
iret
iret
push
mov
or
in
or
stos
sub
out
mov
push
ficoms
bts
mov
sub
cmpsb
lods
test
jl
xchg
pop
xor
das
push
rcll
mov
fistpll
jo
lret
cmp
fwait
sahf
mov
jge
jnp
fisubrs
sti
cltd
sti
rol
ds
inc
scas
pop
xchg
das
loopne
cltd
and
ret
xchg
imul
add
lret
fwait
add
lret
mov
pop
xchg
cmp
nop
or
sbbl
and
inc
mov
fcoml
adc
inc
sub
hlt
out
in
inc
test
jnp,pn
inc
leave
xor
test
movsb
shrb
adc
test
iret
clc
fcmovu
scas
push
stos
cmpb
outsl
pop
ret
lods
inc
mov
dec
pop
std
xor
sbb
iret
jno
inc
orl
jae
ret
rcll
mov
push
js
mov
loope
arpl
lock
mov
jmp
in
cmp
pop
iret
out
jle
dec
dec
movsb
ljmp
stos
ds
sub
rol
adc
sub
push
mov
sbb
mov
xchg
mov
sbb
mulb
push
jo
adc
or
jmp
dec
xor
lret
pop
movsl
stos
es
or
mov
sub
arpl
pop
cmp
scas
mov
mov
mov
into
in
push
xchg
dec
jnp
push
stc
dec
mov
dec
xchg
rclb
and
out
mov
cmpsb
scas
jne,pt
movsb
adc
mov
xor
aam
faddl
add
mov
jno
pop
das
xchg
insb
inc
mov
sub
adc
roll
out
or
pop
lret
pop
mov
sub
inc
mov
push
mov
sahf
enter
xchg
in
sarb
xchg
and
aaa
or
mov
sarb
push
sub
jb
out
mov
cmp
lahf
fucomip
add
pop
push
cwtl
lret
push
outsl
lds
leave
inc
jnp
lret
inc
popa
pop
jle
mov
cmpsl
sub
inc
jnp
adc
ds
leave
mov
leave
popl
out
in
push
lret
loope
mov
add
inc
adc
nop
mov
jnp
inc
mov
js
scas
lods
xor
data16
jb
mov
pop
add
and
lcall
outsb
pushf
popa
imul
pushf
adcb
in
push
dec
jae
sub
adc
adc
pop
xlat
mov
loopne
sarl
xor
call
inc
pop
push
fsubr
lds
dec
mov
push
jp
imul
movsl
repnz
jae
add
pop
xchg
xor
push
sub
in
cli
addr16
les
push
mov
aaa
fistpll
icebp
sbb
lea
dec
mov
adc
icebp
aaa
ds
scas
cltd
jb
push
push
mov
jge
xor
or
pop
lahf
or
xor
dec
mov
add
sbb
call
add
mov
jne
dec
jbe
or
sbb
jb
fwait
xchg
cmp
xorb
adc
pop
imul
inc
jae
lret
test
popf
pop
and
xchg
sysret
sub
push
mov
and
rclb
inc
push
stos
call
int
addr16
outsl
fimull
and
adc
jnp
and
and
in
push
sub
add
xor
hlt
push
pop
cwtl
testb
jb
daa
mov
mov
push
adc
lods
sub
mov
add
mov
out
xchg
mov
cmp
aaa
scas
mov
mov
sub
push
shrl
lahf
sub
in
push
and
inc
jmp
loop
or
jge
nop
dec
mov
mov
mov
jmp
out
sbb
repnz
jbe
jl
jae
mov
adc
repnz
push
dec
inc
in
scas
push
push
mov
xor
mov
mov
and
inc
jne
mov
repnz
cwtl
jne
sbb
lods
mov
adc
loope
jae
jne
mov
pop
jbe
sbb
popf
xchg
subb
xor
rclb
rolb
xchg
xchg
cmpsb
sub
or
add
cmp
adc
test
jp
xor
repnz
sub
jecxz
sbb
and
inc
cmp
cmpsb
in
or
aam
sbb
or
adc
aas
shrb
fbstp
stos
dec
divb
pop
cmp
ljmp
mov
push
and
add
dec
adc
or
dec
mov
movsb
jmp
int
sti
rol
or
xchg
push
mov
addr16
jmp
mov
add
clc
mov
xchg
test
lods
mov
jl,pt
push
inc
xchg
das
cs
imul
or
enter
jg
pop
push
jmp
sub
lods
sbb
xchg
dec
aaa
js
cmp
leave
xchg
nop
xchg
test
mov
mov
call
les
sbb
or
xchg
iret
shrb
pop
js
ret
sub
push
jl
aad
inc
data16
xchg
sbbl
inc
cmpb
xchg
jns
mov
lcall
jno
dec
xorps
out
push
mov
std
add
inc
enter
lds
icebp
jl
mov
pusha
lds
or
stc
jg
push
adc
xchg
fstl
push
push
pop
in
pop
ljmp
shlb
push
xchg
or
xchg
dec
xchg
push
imul
in
roll
repnz
add
pop
icebp
int
es
sbb
data16
mov
lods
push
adc
push
mov
data16
mov
mov
les
pop
clc
out
mov
int
xor
dec
cmp
imul
mov
addr16
popf
jle
mov
out
call
adc
sbb
sub
xchg
or
sbb
adc
aaa
sbb
or
rorb
insl
and
fnsave
shll
mov
xor
ljmp
sahf
stos
sub
jbe
enter
jl
aas
dec
sbb
aas
inc
out
hlt
jno
cmp
stos
jecxz
dec
loope
dec
ljmp
movsl
dec
lods
sbb
or
mov
cmp
or
inc
fisttpl
into
daa
xchg
fldt
cmp
cmp
cmpsb
pop
imul
inc
sbb
imul
ret
adc
jecxz
es
lret
mov
call
sbb
and
rorb
pop
inc
js
es
in
cld
mov
and
adc
mov
ljmp
pop
mov
push
into
rcrl
pop
popf
push
sbb
andl
add
mov
and
pusha
ret
push
loop
std
jmp
sub
xor
scas
lea
xor
data16
popf
xchg
jns
dec
mov
mov
dec
fimuls
sub
mov
jns
and
mov
movb
mov
es
pop
sub
testl
sbb
jecxz
mov
mov
pop
int
inc
pop
inc
jg
mov
push
lahf
out
lcall
fwait
and
mov
cwtl
bound
je
or
pop
test
arpl
into
jns
imul
adc
stc
jbe
jb
add
adc
mov
and
pop
xchg
cld
and
sarb
out
dec
testl
xor
push
push
test
dec
cmc
subb
xchg
inc
or
cli
cwtl
pop
jp
and
out
insb
ljmp
xorb
inc
fsts
std
xchg
sahf
pop
arpl
push
push
push
jecxz
lcall
adcb
xorb
leave
dec
bound
int
adc
jo
mov
add
jns
lahf
or
leave
xchg
push
in
mov
es
test
xchg
lahf
mov
sbb
testb
and
mov
mov
stos
inc
pop
add
in
addr16
js
jb
mov
pop
lock
jecxz
xor
mov
dec
cmp
sti
mov
mov
in
fwait
mov
mov
mov
sub
dec
or
adc
nopl
mov
cmp
shlb
sbb
pop
lods
test
push
int3
adcb
sub
icebp
inc
add
sub
data16
jnp
or
imul
dec
js
cmp
mov
inc
jge
repz
stos
cltd
ret
pop
xchg
xchg
push
stos
xor
fdivrs
scas
movsl
jl
mov
cmp
inc
push
jg
and
jg
enter
xor
test
adc
mov
push
sub
cmc
shll
in
mov
mov
iret
repz
aaa
fnstsw
jge
hlt
fwait
xor
jmp
or
mov
orb
jne
sbb
movsl
shrb
aad
mov
adc
cmp
pop
cmp
mov
jle
adc
push
test
or
add
sbb
xchg
insb
pop
inc
pop
push
test
pop
cmp
cli
mov
adc
fsubrp
pushf
mov
pop
mov
imul
jl
gs
lods
add
mov
mov
call
jmp
xor
push
sub
mov
mov
mov
lcall
sub
aam
cmp
bound
ds
cmp
xor
cs
cmpsl
cwtl
pop
negl
xchg
aad
xlat
repz
and
sub
sub
mov
xor
xor
xor
mov
clc
dec
cld
mov
jo
adc
ss
je
mov
aaa
fdivs
jo
or
cmpsb
repz
repnz
xchg
inc
in
push
sahf
adc
or
imul
lcall
jl
fdivrl
int3
jg
data16
imul
sub
mov
cmp
push
clc
das
ficomps
lgs
pop
dec
pop
lret
out
adc
mov
mov
stos
cltd
es
sbb
cmpsl
or
mov
jo
mov
sbb
xchg
test
xchg
mov
cmpsb
mov
lock
inc
cmc
and
jbe
push
in
and
out
jne
sbb
sub
inc
cmp
cmp
xor
lods
shlb
jno
bnd
out
jbe
pop
fprem1
mov
scas
mov
mov
rolb
daa
mov
or
mov
sbb
mov
mov
js
jno
push
mov
xchg
imul
ret
cmp
sti
and
push
scas
ret
int
orb
pop
cltd
leave
mov
push
xor
movsl
add
xchg
stc
mov
add
in
loopne
sbbb
ror
rcll
arpl
jmp
int
imul
pop
mov
mov
mov
xor
and
mov
stos
mov
mov
jecxz
xor
iret
mov
mov
mov
lret
leave
test
testb
pop
rcll
jne
idivb
mov
arpl
dec
loope
dec
sahf
pop
pop
mov
mov
je
cmp
iret
jns
and
das
pop
fsubl
mov
orl
clc
ffreep
pop
xor
fisubs
in
ds
test
sbb
outsb
mov
je
xchg
sub
or
call
xor
push
cmpb
jb
rorb
xor
loopne
lods
stc
orb
fadd
or
into
push
jne
mov
xor
pop
sub
xor
mov
repz
pop
popf
add
repz
push
call
cmp
testl
ficomps
jne
mov
add
jae
mov
xor
pushf
dec
imul
daa
push
imul
icebp
stos
int
mov
fldt
out
jnp
and
push
sbb
loopne
popa
mov
pop
dec
inc
xor
push
or
into
push
xchg
xchg
sub
adc
outsb
xchg
lock
or
aad
xor
nop
daa
arpl
fisubrs
and
stos
shlb
xchg
pop
insl
inc
push
mov
mov
fiadds
inc
ret
dec
push
xor
cmpsb
shr
imul
jecxz
rcr
adc
fimull
pop
insb
cmpsb
xor
in
jb
sbb
add
pop
inc
in
outsl
scas
stos
inc
sub
inc
insb
cld
subl
inc
adc
sbb
data16
out
push
fsts
mov
adc
ss
in
dec
divb
pop
movsb
cmp
mov
outsb
add
inc
pop
cmp
push
lods
idiv
sahf
imul
clc
icebp
pushf
sub
lds
add
enter
lods
aaa
lods
lret
sub
cs
jmp
mov
int
scas
add
pop
push
sub
scas
mov
xor
jb
in
jle
push
mov
mov
stc
rcll
dec
test
aas
stos
add
jns
inc
in
mov
sub
cs
push
pop
and
arpl
cmpsb
sbb
hlt
fcompl
mov
xor
test
pop
pop
xchg
incl
int3
mov
pop
push
adc
pushf
test
dec
fisttpl
mov
into
sub
lahf
divl
stos
outsb
adc
jne
jne
push
inc
mov
xlat
and
pop
addr16
filds
gs
or
adc
aaa
sbb
push
fcoms
mov
mov
and
mov
mov
mov
stos
cmp
add
adc
in
mov
repnz
cmpb
sub
nop
xor
dec
daa
jg
lds
sbb
add
aam
push
dec
insb
and
adc
lds
lods
jo
xchg
into
xchg
cltd
scas
out
xor
dec
cmp
push
fldl
xchg
xor
jge
xchg
mov
sub
and
jp
push
xor
in
adc
movsb
add
inc
jo
ret
cs
jno
inc
pop
inc
fisttps
fsubrp
and
div
and
orl
rcrb
xor
rcl
mov
mov
mov
jmp
aam
test
inc
push
ret
cmp
cmp
inc
mov
rcrb
gs
sub
shlb
sbb
test
push
notb
jo
sub
fcmovbe
stos
cmp
sbb
push
ds
into
test
mov
mov
sahf
clc
scas
enter
sub
outsb
or
push
push
ds
into
test
mov
mov
sahf
clc
scas
enter
sub
cmp
jle
push
push
ds
into
test
mov
mov
sahf
clc
scas
enter
sub
outsb
or
push
push
cmpsl
into
push
ficoms
inc
mov
out
stc
pusha
push
pop
push
aaa
inc
daa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ficoms
pop
outsb
into
jle
mov
fisttps
sahf
into
outsb
fidivrs
dec
pop
cs
cmp
push
mov
outsl
into
jle
push
scas
push
xor
mov
ljmp
pop
mov
ds
dec
mov
outsb
data16
push
xchg
push
subb
ds
mov
sbb
in
jns
push
mov
push
ds
pop
nop
and
ds
dec
insl
ffree
loope
scas
push
adc
mov
dec
xor
out
sbb
inc
movsb
into
dec
fdivrl
es
jae
popa
std
cmpsb
cmovbe
popa
aam
lock
xchg
xchg
jecxz
sti
mov
push
pop
ds
cs
out
dec
ficoms
into
jne
popa
ficoms
push
mov
mov
sti
mov
pop
out
push
sti
xchg
sahf
cmpsb
cmp
pop
fnstsw
aas
sub
inc
loope
cs
inc
in
sti
in
jmp
clc
bound
outsb
or
fwait
mov
inc
cli
das
sahf
shrl
pop
push
outsb
dec
jle
push
scas
push
mov
into
call
push
mov
sahf
scas
push
mov
incb
lea
lock
fidivrl
imul
insb
cmp
inc
rorb
dec
lret
stos
sbb
sti
imul
lea
loopne
repnz
or
cmp
jle
jb
outsl
mov
mov
dec
lret
mov
sahf
into
outsb
fidivrs
dec
pop
mov
sahf
ds
push
mov
outsb
into
jle
push
scas
push
mov
into
outsb
fidivrs
dec
pop
mov
sahf
ds
push
mov
sub
insl
sub
jge
adc
aad
scas
xchg
insl
sub
cs
sbb
sbb
mov
loop
or
faddl
mov
jne
rorb
jb
jbe
cmp
and
jno
or
mov
push
and
imul
push
arpl
nop
cmp
push
idivb
jb
daa
mov
sub
mov
sbb
mov
add
inc
cmp
fstpl
sub
ljmp
inc
jg
jg
cmc
bound
xor
mov
es
xchg
xor
sbb
dec
push
sub
cmp
push
mov
js
mov
aas
test
push
jle
jl
adc
cmpb
inc
rcrb
xor
test
outsl
aas
push
and
aad
adc
jge
fs
mov
sbb
jne
ja
mov
add
fdivrs
jle
xchg
jle
in
repnz
xorb
ror
fbstp
push
xchg
xchg
ljmp
lret
cmp
cs
fnstenv
insb
push
xchg
and
pop
add
xchg
test
dec
scas
shlb
insl
inc
stos
mov
movsl
aam
or
lret
or
hlt
cmp
or
push
xchg
int3
les
call
nop
xchg
mov
fistps
mov
cli
pop
sahf
or
leave
lods
hlt
add
inc
xor
dec
push
addr16
sub
xchg
cmp
add
push
ret
enter
adc
inc
push
imul
pop
loopne
mov
push
arpl
cmp
ljmp
daa
jne
in
popf
pop
cmc
ret
sub
xor
add
inc
int3
std
inc
adc
or
lds
adc
jns
fsubs
mov
lds
cmp
sbb
lock
imul
ret
xchg
or
fs
xor
addr16
inc
lea
or
repz
stos
pop
xchg
js
hlt
adc
mov
pop
int3
das
ljmp
add
ret
mov
ljmp
adc
adc
sub
sub
scas
leave
push
mov
divb
pop
std
xchg
cmpsb
insl
cmp
jmp
mov
int
stos
sbb
ss
fildl
andl
dec
aaa
ds
scas
fwait
imul
pop
sbb
xor
xor
lods
mov
test
shrl
test
dec
test
xor
enter
xor
pop
nop
push
mov
popf
ss
xchg
sti
iret
shrb
out
testl
mov
cmp
push
push
out
das
loop
lahf
jle
roll
and
inc
fsubrl
sbb
jae
xor
push
stos
cwtl
adc
aad
clc
addr16
fildl
pop
jmp
mov
repnz
inc
cmp
pop
dec
dec
mov
push
psrlw
inc
mov
mov
jecxz
movsb
shl
add
stos
jo
mov
fs
mov
inc
shlb
xor
nop
xchg
lea
xchg
mov
adc
iret
rcl
repz
out
je
inc
lods
int
adcl
sbb
mov
jge
xorb
repz
and
jbe
push
out
rorl
inc
lret
stos
gs
inc
idiv
add
imul
sub
mov
movsb
sub
mov
xor
fimuls
insb
and
inc
jecxz
hlt
sbb
add
push
mov
movsb
aad
mull
js
cmp
xchg
cmp
outsl
inc
mov
xlat
pop
test
xor
sbb
roll
insl
enter
dec
mov
add
mov
test
repnz
les
stc
mov
add
add
in
cmc
test
out
cld
outsl
bound
jae
sbb
or
or
pop
hlt
mov
subl
daa
data16
pop
or
or
sbb
push
xchg
dec
in
mov
enter
jge
stos
push
pop
jmp
add
test
cmp
sbb
repnz
in
testl
fldl
fisttpll
int3
cmp
repz
shll
pop
lods
sub
cmp
mov
jns
outsb
sbb
aaa
movsb
scas
test
and
xor
mov
push
cwtl
data16
stc
mov
jbe
xor
loopne
mov
cltd
dec
jl
xchg
fistl
pop
ljmpw
popf
and
xchg
push
jle
adc
stos
push
mov
or
mov
ljmp
mov
pop
mov
dec
call
cmpsb
je
push
fsubl
es
cmp
in
xchg
test
repz
or
imul
mov
mov
dec
data16
data16
mov
pop
inc
cmp
adc
jecxz
icebp
mov
fisubrl
add
in
pop
lea
add
icebp
mov
xor
aas
lret
push
imul
cmp
lret
fs
rol
test
pusha
push
xchg
test
jmp
jg
jle
push
xor
xor
dec
mov
out
jge
enter
sub
sbb
push
bound
push
mov
cmp
add
and
jne
jecxz
push
int3
xchg
aam
cmp
mov
jecxz
aad
sbb
jg
xchg
push
lret
or
into
xchg
push
outsl
bound
adc
cmp
ja
hlt
lahf
aam
out
jns
sub
xor
cmp
cmpsl
les
mov
cmc
sub
fbstp
dec
in
scas
stos
pop
cmc
aad
mov
inc
mov
fldlg2
jne
stos
cli
ss
pop
call
xor
or
pop
arpl
sbb
inc
es
sti
xchg
rorl
sahf
sbb
or
sarb
mov
lds
mov
pop
incb
sub
xchg
push
jmp
push
pushf
fcomps
out
xor
hlt
pop
lcall
out
iret
stc
cwtl
icebp
mov
addr16
int3
popf
ds
pop
or
pop
inc
inc
loop
adc
in
lods
mov
dec
xor
lcall
sahf
mov
dec
pop
in
push
test
jnp
scas
test
inc
data16
mov
pop
adc
jp
jns
and
pop
mov
mov
xchg
lret
jne
sub
test
jg
adc
aam
or
jle
adc
and
gs
push
fldcw
jmp
pop
ds
sub
sbb
pop
std
jg
test
insl
dec
repnz
test
int3
mov
movsb
jno
ds
stos
cmp
mov
push
stos
mov
xor
movsl
add
mov
idivb
scas
mov
cwtl
mov
push
loop
imul
sti
add
xor
dec
mov
sbb
mov
shrl
cmp
test
in
xchg
lahf
dec
aas
push
add
std
hlt
cli
hlt
adc
push
push
loopne
dec
add
inc
aaa
mov
sarl
inc
lret
repz
mov
or
push
jle
or
lret
dec
xchg
adc
cmp
pop
jns
adc
sbb
test
inc
sahf
in
ret
pop
cmp
loopne
insb
shlb
test
inc
cmp
es
paddd
or
jo
add
lret
sub
cmp
push
cltd
mov
scas
fisubrs
sub
inc
and
fidivrs
push
mov
scas
mov
fidivl
or
inc
jle
sbb
lods
xor
dec
dec
cwtl
cmc
add
loop
mov
push
pop
aaa
ja
sub
add
lret
pop
mov
shll
and
loope
mov
int3
call
jne
push
into
inc
sub
xchg
repz
cmp
jle
sar
je
fcomi
jl
add
mov
push
enter
sbb
ljmp
stc
mov
dec
cmp
inc
loope
fs
shll
push
cli
out
lods
imul
sub
outsl
pusha
or
subl
popa
sub
sub
xor
mov
dec
jbe
inc
dec
jno
sbb
sahf
in
ljmp
add
mov
rolb
dec
add
push
sbb
add
xlat
jp
inc
stos
fistpl
jnp
or
repnz
or
adc
or
cmp
jmp
jb
aam
stos
push
mov
xchg
rolb
pop
add
and
jns
mov
add
in
xchg
pop
xchg
adc
pop
xchg
lods
or
das
insl
push
int
xor
repnz
and
cli
jno
add
xlat
lds
jge
dec
incl
in
sub
push
mov
mov
nop
mov
sub
xchg
or
and
js
push
fdiv
rolb
jnp
push
dec
fnsave
ficoml
pushl
mov
jbe
adc
and
subl
lods
lcall
lock
dec
or
adc
sub
cmp
dec
scas
imul
mov
adc
fiadds
sahf
in
dec
aad
mov
out
ljmp
mov
add
pop
fdivr
mov
pop
cs
dec
int
outsb
test
dec
mov
shlb
xchg
andl
mov
add
es
insb
shl
mov
out
sbb
mov
sbb
push
stc
cmp
xor
cmp
cmpsb
mov
cmp
mov
cmc
inc
and
inc
icebp
and
fsubrl
sbb
push
xchg
xchg
jbe
dec
iret
addr16
push
pop
out
dec
xor
outsl
out
sub
das
pop
cmc
ds
in
orl
add
lret
mov
out
dec
stos
push
adc
in
lahf
dec
jle
mov
lret
lods
test
push
push
xor
call
es
loop
adc
aad
sbb
test
aas
outsl
add
pop
jle
aaa
dec
inc
pusha
bound
dec
shrl
lcall
movsb
mov
inc
xchg
outsl
mov
xchg
lods
or
dec
sub
stos
fstp
xchg
mov
sub
pop
mov
into
decb
sbbl
inc
xor
fninit
and
push
out
xchg
sbb
xchg
mov
push
pop
in
jmp
aam
fadds
dec
cmp
mov
sub
adc
jbe
int
roll
ds
jnp
dec
adc
inc
and
into
mov
pop
cmp
xor
xchg
mov
dec
movsl
lods
add
aas
ja
mov
aas
enter
loope
pop
adc
mov
cmc
ffreep
inc
lods
mov
mov
jns
dec
int3
push
pop
adc
sbb
pop
mov
imul
movsb
popa
xchg
push
xchg
sbb
mov
mov
xchg
aas
mov
stc
cmp
jmp
lea
or
sbb
subl
lods
xchg
or
sbb
adc
js
mov
nop
es
and
rcl
mov
popf
sbb
aaa
pop
adc
ljmp
jb
mov
cmp
mov
rcl
or
call
pushf
mov
int
xchg
pop
scas
pushf
jo
sbb
insb
mov
scas
divl
xchg
and
stc
and
or
adc
cmp
ret
addr16
iret
sbb
sti
mov
bound
pop
mov
jg
cli
adc
imul
int
push
and
ljmp
dec
inc
dec
add
mov
pop
cmp
pop
pop
popa
les
mov
cmpsb
stos
sub
cmpsl
add
pop
mov
fdivs
cmp
or
push
jg
sbb
fcomps
pop
in
xchg
xchg
stos
pop
je
shrl
jle
scas
cmpsl
and
sarb
sarl
xchg
lcall
std
and
inc
jae
jl
or
int
arpl
pop
test
sub
test
mov
xor
or
push
sbb
cli
inc
sbb
or
js
ror
jbe
decb
or
roll
aas
cmp
bound
or
out
mov
or
sbb
jnp
fldt
aas
pop
pushf
cli
mov
and
iret
fisubrs
sbb
inc
cltd
aaa
adc
dec
mov
insl
outsl
jb
in
lcall
dec
flds
mov
movsl
test
jp
sbb
sbb
dec
movsb
sti
cmp
sbb
jge
fisubs
adc
movsb
push
adc
loop
pop
shrb
push
xchg
cmpl
test
ret
jno
mov
fisubrl
loope
add
inc
ret
cmp
cltd
jp
pop
cmp
sbb
fwait
jge
mov
cmp
xlat
dec
out
lahf
lea
pop
push
ficoms
inc
adc
fucomip
push
pop
push
testb
rcll
aas
sbb
jns
dec
inc
xor
xor
mov
cmpsb
movb
push
test
inc
pop
out
mov
into
rorl
mov
xor
push
jmp
or
sbb
in
test
in
fbld
lcall
call
mov
lods
aaa
mov
jl
or
mov
repz
mov
push
push
inc
xorl
jmp
pop
orl
push
pusha
icebp
int
roll
lods
push
lds
push
dec
jp
enter
jp,pt
shll
jecxz
mov
fiaddl
imulb
lcall
dec
incl
dec
mov
mov
xchg
bnd
push
sbb
ss
xor
mov
sub
or
add
les
call
int
xchg
xchg
dec
cmc
mov
btr
and
aam
or
dec
test
mov
rcrl
pop
jp
push
add
pop
pop
aad
or
xchg
jnp
push
mov
roll
fucomip
xor
adc
mov
fdivrp
movsb
cmp
mov
and
stc
and
sbb
std
pop
mov
xor
xor
mov
mov
sahf
andb
popf
loop
add
mov
icebp
shlb
mov
sbb
lea
out
and
je
jp
stos
lcall
and
popa
flds
pop
sbb
jg
dec
jmp
jl
mov
lret
and
sub
sub
mov
push
dec
xadd
and
aas
sarl
xchg
mov
repnz
or
cmp
fisubs
fwait
fwait
hlt
and
sub
push
pop
or
dec
sbb
xchg
xor
addb
push
out
pop
mov
adc
and
mov
xchg
adc
dec
mov
mov
inc
xchg
push
mov
test
push
jbe
das
cli
testl
pop
in
or
cmp
xchg
shlb
rorb
shlb
sub
cs
inc
xchg
jno
pop
aam
mov
mov
lods
filds
jg
loope
test
sbbb
cmp
jmp
dec
push
mov
cmp
movsl
pop
or
lahf
sbb
rorb
ljmp
add
and
sbb
dec
outsl
pop
jno
mov
cli
mov
repz
loop
int3
push
mov
je
mov
pop
dec
imul
or
mov
jecxz
fidivrs
mov
out
push
mov
outsb
repz
dec
sub
jne
jb
and
mov
outsl
push
lock
jmp
mov
mov
or
push
jbe
out
movsl
jno,pn
and
rorl
inc
pop
icebp
sbb
in
push
arpl
addb
aaa
leave
std
mov
out
jns
push
aam
int3
lds
xorl
lods
lahf
lods
inc
cmp
das
and
cmpsb
add
xor
jno
or
mov
add
add
inc
mov
jecxz
daa
test
pop
mul
xor
ss
sahf
lcall
mov
xchg
xchg
mov
bound
shll
sub
dec
and
inc
dec
inc
aam
icebp
sub
rclb
aam
dec
cli
daa
cli
jmp
add
adcb
jb
push
addr16
mov
in
cmp
add
outsl
jl
add
mov
add
xor
cmp
nop
jmp
add
and
rorl
jb
es
mov
lods
sub
dec
bound
mov
adc
push
mov
sbb
inc
fwait
jecxz
inc
pop
push
iret
icebp
mov
lret
pop
sbb
jnp
in
adc
xor
mov
mov
sub
mov
mov
pushl
lds
push
xchg
inc
aad
pushf
mov
inc
xor
cmc
dec
add
arpl
shll
stos
mov
test
sub
stos
push
lret
hlt
xor
xchg
lods
and
fnsave
or
leave
sti
das
push
jecxz
cmp
mov
pop
cmp
test
push
cmp
xor
aam
hlt
enter
inc
popa
clc
shl
sbb
pop
shlb
mov
fsubr
inc
push
stc
in
loopne
xchg
sbbb
out
lret
roll
movsl
mov
cmc
mov
push
ret
out
daa
push
stos
into
add
sti
mov
mov
fimull
ja
imul
add
outsb
or
and
add
movsl
shrb
jb
pop
int
xchg
dec
jns
mov
sub
inc
insl
xchg
push
xchg
add
loopne
bound
cmpl
imul
mov
sub
sub
or
aas
icebp
test
push
pop
out
jecxz
out
pop
push
shll
xchg
push
jge
iret
imul
mov
or
adc
dec
dec
lea
sub
mov
ja
movsl
jg
pusha
push
repnz
jmp
sahf
aam
push
jnp
or
mov
xchg
loopne
fwait
test
xor
adc
cld
insb
rcrb
std
mov
lods
iret
nop
popf
pushl
pop
sarl
xor
lret
pop
in
cmp
rorb
mov
cmp
jo
imul
or
fcoms
or
aas
cmp
mov
ds
pop
cmp
mov
mov
mov
out
jne
in
rclb
addr16
fyl2x
in
rolb
arpl
and
andl
out
cs
sub
ds
or
shlb
gs
sub
into
js
add
out
in
mov
dec
and
mov
mov
mov
add
jp
jge
shrl
lock
rcrl
shll
cli
and
xchg
scas
iret
cmp
fldenv
imul
mov
sbb
daa
inc
mov
cs
pop
scas
rorl
decl
adc
mov
outsl
cwtl
mov
jecxz
mov
dec
jl
adc
push
ljmp
xor
cmp
mov
sbbb
sbb
push
orl
fwait
sub
inc
pop
pusha
mov
insl
dec
sbb
sbb
int
mov
outsb
xor
inc
and
jae
jb
sub
mov
dec
imul
mov
push
or
push
xchg
mov
rcl
cmc
mov
aaa
insb
fwait
sub
pop
dec
cmpsl
sub
push
push
mov
in
push
shlb
jl
jl
inc
mov
movsb
mov
lret
and
popa
jne
xchg
sbb
jno
add
push
mov
arpl
shl
iret
mov
repz
cltd
divb
fs
cmp
add
and
mov
ss
pop
pop
aaa
pop
sbb
sub
divl
flds
xlat
xor
fiadds
xchg
insl
or
mov
push
outsl
push
sub
xchg
stc
fnstenv
xor
xchg
push
add
shll
outsb
retw
mov
aam
cmp
adc
or
nop
loope
in
or
adc
sahf
test
bound
or
and
mov
js
arpl
gs
shrb
das
inc
pop
mov
popf
xor
and
out
cmp
pop
mov
clc
ja
lret
jle
xlat
cltd
mov
mov
mov
jo
pusha
loop
loop
cmp
mov
sub
mov
xchg
pop
pop
shl
lret
pop
dec
js
adc
js
lea
js
xor
mov
int
xchg
mov
xor
ret
iret
rorb
lds
mov
pushf
cmp
movsb
test
adc
ljmp
in
roll
insl
daa
lahf
cmp
mov
dec
int3
pushf
test
bound
add
jmp
test
push
ret
imull
rcll
inc
jb
cli
pop
aad
pusha
shr
arpl
and
sub
scas
dec
mov
sbb
xor
pushf
cmpsl
jmp
mov
mov
sub
mov
std
xchg
les
imul
mov
inc
fmuls
mov
movsl
cmp
jo
mulb
in
icebp
mov
push
mov
into
outsb
fidivrs
dec
pop
mov
sahf
ds
push
mov
outsb
into
jle
push
scas
push
mov
into
outsb
fidivrs
dec
pop
mov
sahf
ds
push
mov
mov
mov
fimuls
scas
push
push
mov
sahf
into
mov
jle
dec
pop
mov
sahf
ds
cs
outsl
into
jle
push
scas
push
mov
into
xchg
inc
dec
sub
cmpsb
push
rcll
loope
pop
sahf
dec
scas
jns
imul
push
shrb
inc
addr16
cs
ds
outsb
test
sahf
dec
ret
imul
cmp
dec
push
fstps
leave
dec
clc
ds
outsb
mov
insb
dec
cmp
imul
or
cmp
sub
cmp
xchg
fsubl
fsubp
adc
xlat
or
mov
aad
dec
pop
sub
mov
push
jp
bound
pop
adc
in
or
arpl
push
stos
push
ret
mov
shrb
cmp
fldt
lahf
out
int
pop
fstps
enter
push
pop
sbb
push
aam
pop
dec
insb
push
aas
xor
fimuls
adc
dec
push
ss
aas
shrb
imul
xchg
mov
xchg
xor
jne
cs
fsubrl
push
jnp
or
pop
cltd
xchg
shll
jno
add
movl
adc
sbb
cmpsl
mov
push
ret
mov
push
aad
enter
mov
or
cmp
enter
pop
stc
push
jmp
pop
mov
in
xor
cmp
sub
pop
pop
push
test
pop
cltd
cmp
xor
pop
lret
sbb
ret
xor
fisttps
cmpsl
pop
mov
pop
imul
pop
pop
fdivrl
std
loop
repnz
sbb
adc
cmp
sub
fstps
leave
cs
ds
outsb
mov
sahf
dec
scas
jns
imul
cmp
sub
fstps
leave
cs
ds
outsb
mov
cmp
push
jle
add
mov
leave
in
xlat
dec
mov
loop
add
sub
inc
es
xor
in
cmpb
or
dec
inc
dec
sti
xor
lahf
inc
inc
mov
push
sbb
cmc
mov
dec
or
sub
dec
nop
xor
sahf
jmp
mov
fs
sub
adc
jbe
fs
add
arpl
mov
jle
adc
ds
lock
cmpsl
jge
jb
sbb
pop
xor
mov
loope
jo
pop
xchg
mov
jl
in
and
mov
cmpsl
jl
shl
pushf
add
push
jl
in
push
repnz
sbb
sub
xor
ss
rorl
xor
lock
sub
add
mov
jmp
fldcw
enter
out
or
push
das
fs
divb
cmp
mov
adc
insl
push
or
cmpsb
ficomps
out
mov
push
rcrb
shll
shll
movl
imul
cwtl
stos
loope
xor
lods
inc
cmpsb
sub
xchg
dec
movsb
sub
roll
mov
fadds
add
je
jo
das
sub
add
sbb
xchg
push
sbbb
imul
cmpl
mov
scas
scas
cli
mov
ret
mov
pop
insb
daa
push
mov
fstl
inc
dec
mov
cmp
jno
mov
call
and
push
mov
xchg
jb
adc
add
mov
int
cmp
loope
data16
and
test
lret
xor
pop
psrlw
sub
or
call
add
fidivs
push
push
inc
jg
mov
out
mov
popf
mov
mov
lods
mov
mov
les
push
xchg
sub
push
or
mov
in
mov
movsb
and
scas
icebp
pop
sbb
frstor
int
mov
mov
pop
lcall
lock
filds
pushf
popf
push
pop
adc
pushl
cwtl
imul
xchg
jle
sub
out
jl
mov
and
xchg
in
outsl
stos
cltd
adc
mov
xor
ret
xlat
mov
jg
sub
lret
sbb
or
inc
das
and
pop
push
cmpsb
jo
into
fneni(8087
mov
xchg
outsl
push
xor
dec
add
mov
outsb
test
adc
xor
popf
or
adc
mov
cltd
int
cmp
inc
mov
jb
sub
scas
adc
cmp
add
mov
jno
es
mov
xor
inc
scas
jg
andb
jle
sub
iret
adc
dec
push
sub
aaa
mov
test
insb
xchg
jno
or
adc
loop
sbb
outsb
fistpl
sub
sbb
rcrb
jbe
jp
sbb
out
inc
in
dec
add
dec
xchg
fwait
jmp
sar
into
nop
mov
or
nop
add
xor
in
out
stc
pop
mull
mov
popa
pop
xor
cmp
jmp
adc
imul
sbb
xlat
rcrl
pop
js
aaa
sbb
iret
test
movl
push
mov
or
pushf
adc
inc
xchg
sbb
outsl
lds
dec
sub
sub
jbe
dec
jne
xchg
out
cltd
lods
add
lods
hlt
adc
filds
test
outsl
mov
and
xor
jae
mov
xor
pop
andb
lret
das
mov
mov
jl
addr16
or
bound
jp
sub
mov
repz
xor
add
sbb
decl
mov
inc
jbe
in
in
pop
push
loopne
je
xchg
jg
addr16
inc
loop
stc
pushf
adc
add
fidivs
xchg
popa
and
mov
mov
lock
outsl
dec
sub
nop
pop
cmpsb
mov
mov
push
lock
mov
push
xor
andl
stos
jl
dec
lret
xchg
xorl
xchg
mov
cltd
repz
call
insb
inc
std
mov
cmpsl
cmpsl
pushf
mov
fldcw
mov
add
xchg
sub
xor
fdivl
cmp
cmp
imul
out
pop
icebp
jno
fs
xchg
les
mov
xchg
pop
push
mov
inc
sbbb
adcl
pop
dec
rorl
in
movsb
push
popa
sarb
cmp
adc
and
dec
ss
jnp
pop
sbb
xchg
mov
out
aam
call
jmp
push
cmp
movl
adc
call
fcomp
ss
ret
and
and
stos
add
insl
or
xchg
mov
sub
aaa
mov
jl
test
ret
mov
mov
jb
call
jno
push
shll
arpl
int
ss
push
push
lods
test
pop
fisubl
dec
xor
dec
movsb
jge
mov
cmp
jo
jecxz
mov
fadd
mov
inc
ljmp
cmp
mov
pop
mov
mov
add
xchg
in
pop
push
lods
arpl
loope
int3
insb
loop
daa
sbb
or
test
pop
add
nop
mov
cmpsb
cli
in
push
pop
mov
or
xchg
xor
fmuls
push
rcll
add
cpuid
repnz
fnstenv
add
arpl
and
mov
add
xchg
inc
mov
bound
sub
mov
dec
sbbl
enter
or
add
dec
insl
mov
adc
mov
loopne
jnp
rcll
lret
push
ss
sbb
inc
jo
push
std
cmp
jo
mov
mov
xlat
xchg
mov
setnp
adc
subl
cmc
repnz
movsl
xchg
sbb
mov
outsb
push
inc
pop
ja
imul
pop
imull
sbb
cmp
adc
sbb
dec
flds
jl
push
mov
push
and
cli
add
imull
jno
adc
push
xor
pop
stos
jb
imul
or
sub
lea
xor
lds
sub
sub
push
lods
jmp
insb
ja
lds
mov
jne
fsubrs
scas
mov
outsl
loopne
xchg
jo
pop
fstp
gs
dec
xchg
pushf
jp
aad
fnstenv
xchg
pop
inc
cmpsl
pop
jae
shl
push
std
data16
or
push
stc
cltd
jnp
orl
mov
pushf
xor
inc
sbb
xchg
xchg
pop
push
ret
div
jecxz
icebp
das
xlat
lods
mov
xchg
in
lcall
cmpsb
lahf
dec
jecxz
fdiv
xchg
dec
inc
addr16
adcl
sub
out
push
out
cmpsl
hlt
es
pop
sub
outsb
pop
inc
pop
out
scas
ds
in
push
call
ds
sbb
pushf
sti
stos
dec
xchg
roll
mov
sahf
stc
imul
ds
rolb
add
jnp
and
les
call
mov
daa
cmp
jp
xchg
push
push
push
sbb
fmuls
icebp
cwtl
leave
data16
jnp
cmp
xor
int
or
or
jmp
aas
xor
inc
outsl
data16
mov
push
push
aas
in
xlat
addr16
push
pop
dec
mov
mov
xchg
add
cmpsb
sbb
cmp
rcll
xor
xchg
mov
mov
lock
push
mov
jae
dec
iret
cmp
icebp
and
dec
add
data16
pushf
or
std
aas
lret
ljmp
je
pop
je
pop
adc
sbb
fimuls
out
enter
test
sbb
mov
lods
pop
leave
mov
mov
nop
pusha
mov
cmpsl
xlat
jo
push
and
repnz
add
ret
rdmsr
insb
mov
xchg
inc
dec
cmpsb
repnz
sbb
mov
fstl
cmpsl
xor
sbb
loop
aas
in
lds
inc
xor
push
mov
cltd
movsb
cmp
jp
and
adc
and
add
sahf
pop
jg
iret
push
pop
ret
or
mov
addr16
movb
jp
mov
sti
push
lea
xor
loopne
sbb
jo
adc
xor
mov
insl
daa
cmpl
xlat
mov
pop
adc
mov
pop
mov
shll
fsubrl
or
dec
mov
daa
mov
ds
into
les
lds
adc
movsb
push
jecxz
or
aam
cld
dec
test
dec
cmpsl
lcall
test
insb
inc
movsb
or
sahf
sbb
adc
test
aaa
or
lret
xchg
pop
into
add
mov
hlt
out
fxch
clc
in
xor
or
cmp
shll
aad
dec
push
lock
xor
setp
add
push
fcmove
mov
pop
fs
adc
pop
push
ret
stos
ret
or
es
iret
in
fdivrs
mov
pop
xchg
mov
adc
dec
in
add
add
in
add
outsb
fwait
push
adc
xor
int3
xchg
aad
dec
inc
mov
ja
sbb
in
sbbl
xorl
dec
ja
mov
hlt
das
repz
ds
loop
jg
cmp
inc
cmp
in
repz
and
pushf
cmpsb
mov
clc
xchg
push
aad
jo
rclb
or
in
pusha
or
lods
cltd
int3
push
or
pop
add
push
stos
fwait
loopne
xchg
je
mov
jae
xchg
pushf
stos
ret
inc
mov
out
popa
test
ja
into
insl
and
fcmovb
cmp
mov
jp
jl
and
pop
into
dec
mov
mov
jbe
gs
rclb
push
insl
aad
mov
notb
jnp
jae
add
into
loope
imulb
jo
insb
fildll
fstl
xlat
fs
hlt
cmpsb
aaa
mov
es
jp
test
xchg
adc
insl
inc
and
fwait
adc
adc
flds
sbb
sbb
pusha
rclb
cltd
inc
ljmp
mov
cli
sti
or
aas
inc
jae
mov
add
cmp
leave
sahf
pop
and
or
pop
mov
push
int
or
or
sub
mov
repz
fdivrl
outsb
mov
int
pop
lods
mov
inc
cwtl
push
cmp
cmp
xchg
nop
aas
push
jge
ss
cmp
xchg
push
std
ja
dec
ret
or
push
jle
sub
push
in
into
xor
inc
lods
fsubr
dec
mov
jno
dec
mov
cld
repz
inc
out
not
and
subb
jbe
adc
jno
mov
push
das
lock
pavgw
cli
cmc
shrl
push
add
jmp
push
mov
lret
sub
mov
gs
and
popa
ja
xchg
push
xorl
addr16
mov
cmp
or
movsl
mov
shll
add
test
out
lods
mov
ja
clc
sub
outsb
mov
mov
cmp
fmul
sbb
inc
imul
add
pop
lahf
jp
js
cmpb
and
addr16
ss
repz
mov
stos
test
sbb
pop
mov
ja
out
clc
cwtl
adc
hlt
lds
jp
jl
mov
adc
push
in
jl
mov
adc
mov
dec
push
mov
push
adc
leave
popa
in
lret
pop
jo
mov
mov
test
or
cmp
inc
xor
push
out
jmp
dec
adc
sub
cmp
pop
adc
aad
outsl
lock
out
into
pop
js
mov
push
insb
sbb
inc
adc
sub
dec
inc
loope
stc
xchg
fldl
testb
gs
fisttpl
dec
lds
push
movsb
jb
sbb
push
xor
sbb
or
mov
push
lods
lret
out
jmp
adc
arpl
jb
insl
filds
shl
sub
xchg
sbb
pop
aaa
pop
mov
fildll
fwait
adc
jge
out
or
add
int
or
ds
fiadds
pop
in
xchg
dec
jp
mov
arpl
hlt
pop
out
pop
push
lds
in
push
adc
jmp
out
jae
or
out
push
or
sub
jae
nop
pop
movsl
pop
pop
insl
mov
cwtl
cmpsl
jae
lcall
lock
in
push
push
movsl
inc
xchg
sub
fcompp
add
sub
xor
ja
mov
sbb
jb
inc
jnp
cld
gs
mov
inc
jg
xchg
lcall
movsb
bound
jle
not
ljmp
repz
in
loop
fcmovne
gs
mov
dec
cld
ljmp
push
or
inc
ret
loope
pop
cmpsl
cmp
fxch
sbbb
dec
sbb
cmp
dec
test
xchg
push
rorb
sub
add
fidivrl
xchg
insb
mov
roll
insb
mov
rcl
xchg
fstpt
push
ljmp
mov
lret
iret
cld
lock
lret
push
pop
das
push
dec
test
loopne
ret
and
adc
aam
and
inc
mov
stos
sbb
xor
cwtl
adc
dec
lret
outsl
jbe
and
outsb
xchg
sbbl
cli
ds
clc
cmp
push
and
sahf
test
hlt
cwtl
imul
das
leave
mov
mov
roll
fcmovnbe
popa
push
ret
xchg
and
jnp
pop
fs
mov
adc
cmp
les
push
stos
push
ret
std
push
leave
xor
adc
sbb
loope
xchg
xchg
fcomp
xor
sbb
loopne
dec
jbe
adc
dec
test
fisubl
lods
mov
inc
pop
pop
pop
mov
xchg
mov
mov
in
mov
push
or
sub
fwait
push
xchg
test
inc
sub
cmc
hlt
out
scas
outsl
push
imul
mov
dec
in
fimuls
mov
xchg
pop
pop
adc
dec
lds
xchg
inc
or
adc
and
test
cmp
and
enter
jo
fdivs
adc
std
je
dec
cli
aad
addb
cmp
jp
sbb
jne
push
ret
pushf
into
mov
loope
aas
jecxz
imul
fsubrl
fld
psubq
ljmp
jecxz
inc
inc
mov
jmp
dec
fucomip
cld
aad
loopne
mov
test
jo
pop
pop
xchg
arpl
inc
mov
adc
shll
inc
cwtl
lock
pop
jb
inc
push
dec
jg
outsb
adc
insl
lds
fdivrl
mov
dec
mov
mov
lcall
or
je
push
jp
movl
je
mov
rorb
dec
inc
in
lods
add
pop
xor
xchg
sub
stos
push
push
adc
jge
add
jmp
xlat
adc
mov
rorl
jl
jle
jbe
dec
lea
inc
fdiv
outsb
repnz
out
inc
inc
mov
pop
mov
adc
or
dec
aad
int3
mov
das
jne
adc
jmp
sub
fiadds
lods
dec
dec
push
and
call
and
cmc
add
mov
ret
cld
fnstsw
push
subb
mov
or
arpl
aas
add
jb
jp
pushf
xchg
nop
mov
or
jl
aad
push
aam
sarb
jge
cmp
cwtl
jb
mov
mov
or
rorl
mov
xchg
dec
adc
mov
xor
adc
mov
xchg
cwtl
and
mov
push
push
mov
das
inc
in
push
repz
cld
push
nopl
leave
jge
jnp
xchg
pop
inc
jge
adcb
mov
imul
add
popf
das
ds
fildll
je
pop
sbb
sub
dec
or
stc
pop
adc
iret
sbb
push
dec
mov
mov
ja
pop
jmp
std
and
insb
xor
and
sbb
mov
push
negl
shrb
aad
mov
pop
sbb
and
mov
and
ficompl
out
pop
dec
mov
mov
leave
mov
add
adc
lcall
sub
loopne
xchg
pop
sti
dec
int3
stos
push
fistl
cmp
sbb
sbb
sub
xchg
and
mov
xor
sahf
gs
mov
int3
xor
aam
or
push
aas
pop
jb,pt
add
outsl
mov
jg
and
jb
mov
notb
lcall
int3
arpl
xchg
dec
gs
jp
add
fidivrs
out
mov
cltd
popf
ja
stos
lcall
and
adc
xchg
and
xor
and
jne
lock
dec
sbb
test
in
jecxz
test
pop
into
orl
std
cld
and
scas
daa
or
cli
daa
mov
sbb
sbb
mov
ds
mov
adc
add
pop
filds
mov
inc
mov
loope
pop
stos
or
pop
or
adc
inc
push
add
pop
add
aad
pop
add
fsubr
mov
sub
es
push
cli
stos
sub
sub
jecxz
aam
les
outsl
xor
fmulp
pop
push
mov
aaa
xorl
arpl
jb
cmp
xchg
inc
dec
faddp
add
jmp
bound
shl
mov
gs
jno
inc
nop
adc
into
out
pop
fbstp
lock
loop
ja
les
or
xor
jae
gs
mov
mov
js
pushf
fistpl
aas
and
in
push
mov
int3
loope
aam
inc
call
sub
pop
lcall
inc
lret
out
int3
lods
scas
sub
in
dec
jmp
dec
jg
dec
xchg
mov
adc
rorb
cmc
imul
add
pop
stos
pop
aas
fidivrl
jl
sub
inc
bound
mov
loope
and
xor
mov
dec
pop
mov
loope
jle
lea
mov
mov
cltd
or
lahf
mov
lea
jnp
dec
fldl
add
jl
pop
stos
and
xor
jmp
xchg
fdiv
ss
jle
das
cmp
lods
or
addr16
sub
mov
xor
cli
mov
xchg
mov
pop
xchg
pop
int3
pop
cs
push
mov
popa
inc
push
add
add
pusha
movsl
fdivl
dec
movsl
inc
cmp
add
jb
xchg
fbld
xchg
daa
out
push
out
sub
data16
addps
je
ret
add
clc
push
pop
cmpsl
pop
mov
fdivr
lods
inc
jp
mov
xor
inc
leave
aaa
xchg
jae
movsl
insb
lret
dec
cmpsw
pop
imul
dec
or
mov
out
xlat
push
cmp
mov
mov
outsb
cli
orb
or
insl
mov
movsb
jns
mov
adc
add
pushf
mov
xor
push
fs
mov
mov
cmp
jne
xchg
mov
pop
pop
mov
nop
lods
xor
xchg
add
insb
push
out
shlb
aam
adc
cmp
fdivl
xor
ja
and
jg,pt
mov
adc
add
push
insl
outsl
add
movsl
les
aad
lea
xchg
sub
dec
loope
stos
pop
xor
ja
mov
je
aad
pushf
divb
aad
repnz
inc
int
popa
mov
adc
dec
iret
repnz
adc
and
pop
and
test
sub
cld
fldenv
and
les
lock
ljmp
jle
aad
lea
les
sbb
mov
int3
push
mov
out
sysexit
cmp
das
push
aad
mov
call
mov
sub
loopne
lea
cmp
popf
jle
adc
repz
shrb
sbb
sub
mov
fisttpl
das
mov
dec
pop
popf
adc
xchg
ds
scas
sbb
ljmp
mov
ret
cmpsb
or
cmpb
push
fwait
cmovne
mov
ljmp
addr16
fldl
scas
jae
push
mov
das
sub
and
jne
addr16
ljmp
hlt
aas
pop
push
es
inc
lods
inc
push
in
imul
fisubs
rorl
cmp
std
fcomps
push
xor
and
push
cmp
imul
dec
xor
pop
fistpll
mulps
mov
fs
popa
mov
imul
data16
call
cmpsl
mov
xorl
in
dec
push
jno
or
push
and
mov
lods
pop
cwtl
stc
inc
fisttpl
adc
pushf
and
xor
lcall
ret
push
in
xor
lock
lret
cwtl
test
jb
stc
test
mov
je
xlat
xchg
es
dec
pop
fcomps
add
daa
mov
scas
mov
jbe
adc
lds
imul
cmp
sub
fstps
leave
cs
ds
outsb
mov
sahf
dec
scas
jns
imul
cmp
sub
fstps
leave
cs
ds
outsb
mov
scas
dec
into
jns
imul
sub
fstps
leave
fdivrp
ds
outsb
mov
ret
jns
imul
cmp
push
fabs
arpl
jbe
inc
adcl
jo
pusha
movsb
js
outsl
mov
shrb
pop
lock
nop
imul
push
jmp
jmp
lret
pusha
mov
xor
mov
cmp
or
ret
jo
pusha
mov
xor
aaa
xchg
aas
loopne
aad
out
push
push
jmp
xchg
pop
movsl
xor
ljmp
xchg
movsl
cmpsl
gs
push
xlat
or
mov
data16
fistpl
imul
pusha
mov
xchg
aas
movsb
icebp
inc
insl
xchg
jl
mul
xchg
jbe
jmp
xchg
xchg
or
popf
stos
rorl
sub
mov
les
int3
sub
inc
sti
ret
cmp
add
mov
dec
or
lods
pop
movhps
pop
dec
loop
sbb
mov
adc
jae
xchg
xchg
dec
cmovnp
xchg
subb
xchg
dec
repz
xchg
push
inc
cltd
push
and
test
dec
loope
test
inc
sti
movsb
or
pusha
stos
adc
and
jae
inc
lock
loopne
nop
xor
mov
mov
sbb
add
mov
mov
cwtl
and
repz
outsb
loope
push
jmp
mov
pop
lds
into
and
imul
repz
jmp
aad
lock
sbb
adc
adc
and
imul
lock
loopne
nop
sub
sti
push
jmp
pusha
mov
xor
rcrb
loopne
nop
sub
sti
push
sub
add
daa
xchg
faddl
out
xor
sahf
movsl
imul
cmpsb
popa
arpl
pop
popa
cmc
aam
and
xchg
cmp
sbb
jle
pop
les
mov
cwtl
fimuls
hlt
mov
in
or
popf
push
addr16
decl
jbe
or
push
push
call
out
mov
and
sub
hlt
mov
pop
test
push
aas
imul
icebp
jl
xchg
lods
insl
imul
xlat
adc
xor
rolb
sbb
cld
scas
movsl
loope
mov
sub
imul
shlb
test
stos
push
inc
inc
pop
mov
outsb
ret
mov
adc
cmpsl
mov
das
add
insb
xchg
adc
mov
xor
sub
iret
ljmp
subl
shll
push
lahf
and
jnp
fnstcw
pop
or
clc
mov
sti
cmp
mov
xlat
push
cmc
mov
jno
mov
xchg
addr16
movsl
inc
sti
int
xchg
cmpsl
and
in
cmp
adc
sub
xor
fcoml
xor
bnd
pop
movsb
jbe
aas
hlt
adc
sub
aam
xor
jne
xor
mov
and
es
sar
addr16
js
and
in
and
test
push
cltd
push
out
adc
test
xor
and
add
lock
aad
jnp
sub
mov
stc
pusha
and
pop
xchg
cmp
push
pop
mov
push
pop
jns
insb
mov
jp
mov
shr
loop
dec
into
insb
test
icebp
rolb
jae
call
cmp
shll
stc
push
xchg
scas
and
sbb
xbegin
pop
jge
adc
fldt
data16
add
int3
xchg
xor
stos
or
mov
mov
enter
lret
xor
dec
adc
mov
adc
mov
imul
adc
dec
jmp
inc
test
push
stos
jns
push
data16
xor
fnstsw
mulb
ret
jne
outsl
mov
rolb
rorb
inc
ljmp
xchg
sub
mov
xlat
and
fbstp
sbb
add
inc
or
cmpsl
xchg
insl
cli
inc
cvttps2pi
movsl
imul
ficoms
pop
ja
invd
bndldx
out
das
das
xchg
mov
xchg
jo
stos
movl
dec
ret
test
pop
arpl
mov
fdivrs
push
or
inc
andb
jae
and
mov
or
inc
pop
pop
mov
gs
sbb
push
mov
popf
cltd
int
cmp
jno
jno
add
xor
lcall
out
xchg
add
shl
pop
add
orl
mov
fcmovbe
push
and
sbb
sahf
dec
mov
jecxz
les
mov
add
dec
pop
push
adc
arpl
or
rcrl
mov
mov
fdivrl
pop
repz
sub
fdivl
and
int
mov
loopne
mov
or
cmp
mov
cmp
cs
int3
fmuls
dec
fsubl
inc
call
push
and
jge
cltd
ret
dec
add
or
jno
inc
mov
or
testl
dec
flds
test
imulb
mov
sbb
dec
mov
inc
mov
repnz
jge
xor
int
iret
sub
sub
pusha
pop
fcoms
call
repnz
nop
dec
jle
shlb
iret
insb
inc
lret
jb
aaa
into
xchg
xchg
pop
inc
scas
cmp
push
movsl
dec
cmc
lock
test
lds
movsb
test
and
out
xchg
xchg
mov
push
dec
xchg
xlat
mov
cmpsl
cs
pop
jne
xor
inc
in
jg
sbb
add
pop
and
add
rol
cmp
mov
fldt
mov
outsb
mov
mov
out
sub
lea
xchg
outsb
out
xchg
test
jle
dec
mov
mov
rcrl
jmp
sub
mov
or
pop
dec
add
cmp
insb
vunpckhps
xorb
jp
mov
push
dec
inc
test
dec
jne
pop
leave
js
mov
mov
jg
outsb
jbe
jne
jle
mov
or
lret
pop
pop
dec
in
call
pop
xchg
rclb
ss
addr16
or
fistpl
pop
arpl
mov
sbb
lcall
xor
je
add
mov
mov
jg
pop
ficoms
push
inc
lcall
lods
ja
push
jnp
and
scas
cwtl
jecxz
and
aas
mov
adc
shlb
mov
add
cmp
lds
repz
jo
popa
mov
repz
push
cwtl
test
xor
sub
int3
jl
xor
mov
mov
pop
or
int3
jle
test
push
inc
leave
lds
mov
xor
lods
pop
clc
int3
cmp
sbb
mov
shr
push
mov
mov
mov
mov
xchg
cmpsl
lods
mov
shll
jns,pn
mov
mov
clc
insb
push
xchg
jb
movb
testl
popf
sbb
cli
or
mov
mov
mov
add
mov
sub
adc
mov
sahf
push
ret
xor
push
outsl
inc
movsl
fisttpl
rclb
enter
inc
mov
dec
shll
insb
in
push
jp
dec
jg
jae
cwtl
inc
pop
pop
inc
jge
shll
add
sub
or
loopne
sub
aad
rcll
pushf
mov
inc
leave
sar
jg
dec
fnstenv
cmp
inc
cmp
push
xchg
fmuls
cmp
jmp
icebp
imul
gs
push
cld
xor
lds
and
nop
push
insl
int3
clc
pop
cmp
pop
mov
repz
ds
insb
decb
repnz
inc
push
pop
ss
hlt
test
lcall
push
repnz
js
mov
stos
mov
icebp
pushf
or
es
add
pop
out
sub
scas
pop
pop
pusha
xchg
cld
jge
fnstcw
test
xor
push
aas
add
mov
jmp
push
rorb
or
xor
test
push
in
add
aad
in
movl
lcall
inc
lock
das
repz
jg
sbb
adc
add
sub
lds
mov
enter
lret
jo
or
push
ljmp
or
add
ja
cmp
imull
scas
mov
fldl
fistl
aam
cmp
repnz
lret
fwait
mov
inc
loop
lret
scas
xor
add
clc
add
xor
xchg
je
pop
inc
int
mov
std
and
pop
lret
dec
testb
stos
fwait
dec
mov
sub
ss
cmp
ss
xchg
xor
and
mov
iret
scas
loop
pop
lret
shll
mov
add
inc
jbe
gs
dec
cmp
mov
push
ror
or
xor
jb
arpl
mov
xor
sbb
clc
or
mov
push
jb
sbb
popf
jbe
lahf
mov
inc
sbb
and
and
mov
add
sbb
and
call
add
lret
mov
push
jmp
push
ja
mov
xchg
out
dec
fidivrs
mov
pop
daa
scas
testl
dec
das
roll
jno
xchg
jmp
aas
xor
ljmp
jle
jns
dec
je
int3
sbb
pop
fidivl
pop
gs
mov
pop
sub
xchg
fistl
inc
adc
dec
inc
clc
pop
push
inc
test
icebp
sbb
push
mov
cmpsb
leave
push
cmp
push
mov
pop
int3
jge
and
addr16
inc
xor
out
mov
mov
roll
fldenv
test
incl
mov
lds
jo
out
add
mov
mov
lock
mov
xchg
and
out
xor
push
push
inc
mov
test
cli
push
into
adc
insb
shrl
sbb
xchg
jmp
sti
and
mov
xchg
mov
das
mov
xchg
loop
inc
and
cli
in
or
pop
fsubrl
movsl
lahf
mov
sbb
adc
in
fs
sbb
push
cltd
in
scas
cmpsl
repz
fidivl
enter
cld
or
mov
sbb
and
xchg
rcll
cmpsb
repnz
and
imul
bnd
mov
test
scas
and
insb
mov
or
adc
jmp
jecxz
and
mov
fidivrs
dec
mov
add
aaa
js
mov
ja
jbe
insb
loop
int3
loopne
push
mov
jnp
and
jns
sub
cmp
mov
jno
in
jbe
pop
stos
clc
andb
in
pushf
insl
sub
loopne
jmp
xor
pop
xchg
ja
mov
inc
pop
sbb
push
sub
pop
in
in
ret
outsl
inc
pop
push
scas
adc
or
inc
cld
inc
enter
lods
aad
pop
or
les
shlb
jl
push
in
mov
in
sbb
enter
mov
adc
stos
addr16
addr16
mov
xor
pop
pop
movsb
pop
incl
cmpb
popf
xor
jnp
fisubrl
fcoml
cwtl
icebp
in
out
mov
cmp
rcl
add
inc
mov
cmp
test
rcrl
jmp
add
int
lods
mov
sub
popf
ss
push
mov
imul
pop
or
adc
sbb
sub
xor
add
dec
xor
adc
mov
push
or
sub
insl
xchg
icebp
ss
cmp
adc
fldt
or
test
lds
nop
adc
loop
cmpsb
fldt
ljmp
mov
xor
jbe
mov
xor
xchg
out
push
mov
xchg
testl
sbb
bound
arpl
jno
or
cmpb
mov
divb
cltd
add
fwait
jecxz
cmp
mov
int
or
arpl
and
ret
movsl
and
push
add
dec
adc
jno
lds
ja
imul
clc
inc
jle
xchg
nop
cltd
pop
jnp
cs
lret
das
adc
lcall
xchg
or
movsb
push
add
mov
mov
out
mov
or
outsl
pop
jmp
jbe
mov
imul
xchg
or
jecxz
adc
mov
xchg
mov
je
bound
xchg
xor
push
andl
popf
mov
test
outsb
dec
mov
sti
mov
mov
fldl
xchg
loope
sahf
add
cmp
ret
popf
shll
mov
add
cli
test
jecxz
dec
cs
pop
lahf
je
push
or
call
add
pop
inc
cmp
fadds
pop
clc
mov
or
popa
or
ss
mov
lds
mov
mov
jb
add
add
hlt
xor
and
cs
sarb
jle
fcomp
xchg
pop
cmpsb
inc
in
into
inc
xor
outsl
add
mov
mov
sub
adc
cli
mov
push
jae
mov
mov
xorb
popa
pop
iret
mov
sub
push
push
mov
inc
iret
xor
aad
dec
inc
pop
fwait
xor
orb
mov
test
lahf
lock
mov
jno
cmc
adc
fcmove
sub
aad
mov
adc
lock
test
xor
out
das
inc
fstl
push
add
inc
stos
mov
xchg
dec
je
loop
out
subb
push
xor
fwait
sub
dec
rcr
seta
push
or
je
shl
xchg
imull
inc
inc
dec
jnp
test
scas
dec
outsb
jp
cmpsb
lds
jbe
cmp
outsb
leave
mov
mov
pop
xchg
and
pop
icebp
sbb
test
add
xor
shll
shll
xchg
dec
sbb
jg
add
mov
jg
cli
sbb
pop
sbb
in
xor
sub
mov
push
imul
sub
into
dec
sahf
xchg
subb
ret
lods
in
pop
out
add
sti
sub
enter
fwait
and
dec
into
sub
push
les
in
in
loop
sbb
and
xchg
and
test
loop
xchg
mov
mov
sub
test
inc
push
arpl
inc
push
icebp
mov
in
lock
enter
fistps
push
dec
ss
mov
in
cltd
pop
dec
cmpsb
ficomps
jmp
mov
lea
imul
outsb
add
int3
out
stc
iret
mov
loopne
lret
add
sbb
push
imul
cwtl
sub
push
dec
push
sub
xchg
in
lret
xorl
outsb
jmp
lods
sar
fdivrs
xchg
mov
outsl
cmp
xchg
mov
adc
mov
outsl
sbb
shlb
cltd
xlat
mov
mov
mov
sahf
sbbl
inc
stos
aaa
mov
pop
push
mov
and
dec
iret
sbb
mov
cli
jne
jge
stos
or
xadd
pop
mov
jae
sub
iret
mov
mov
je
jns
inc
mov
hlt
sbb
push
dec
pop
push
pusha
push
movsl
sbb
jb
cmpsl
rorl
mov
int
add
xor
dec
aad
pusha
lcall
mov
sub
push
test
call
outsb
les
cltd
pusha
fldcw
mov
scas
xlat
dec
xchg
mov
fnstenv
sub
sti
xor
popa
mov
sub
adcl
inc
leave
loop
push
movsl
jae
mov
cltd
fwait
xchg
loop
dec
dec
cli
xor
mov
dec
stc
xchg
fdivrl
and
stc
test
iret
mov
inc
shll
sbb
xor
sbb
fstps
pop
hlt
imul
cli
pushf
sbb
rcrb
lret
insb
jecxz
addb
das
xor
cltd
bound
arpl
dec
and
xlat
aam
adc
adc
jmp
mov
ja
ret
in
ss
lea
rclb
imul
xor
jp
mov
pop
cmpsl
pop
push
enter
int3
mov
xchg
iret
dec
mov
lret
push
scas
cmp
dec
dec
mov
fbstp
movsl
out
xchg
pop
arpl
icebp
data16
add
dec
cmp
dec
repz
xchg
and
and
jmp
icebp
into
aas
rorl
sbb
bound
lods
in
xchg
jbe
and
xchg
sti
iret
xor
jnp
iret
add
push
clc
adcl
cld
jno
sub
mov
mov
pop
in
iret
cmpsl
out
and
inc
dec
add
xchg
sbb
fsubrs
call
fdiv
push
or
adc
jnp
incb
xchg
mov
enter
pmullw
in
out
js
test
mov
add
pop
or
dec
subl
out
jecxz
adc
lret
loope
out
shll
or
pop
mov
test
loopne
out
mov
xchg
sbb
add
or
pop
cltd
cmp
call
dec
mov
push
popf
aaa
mov
les
jl
add
int
cld
sti
push
mov
popa
pop
int
notl
mov
lret
pop
into
mov
mov
in
add
xchg
dec
cmp
jnp
fldl
leave
inc
mov
repz
xlat
das
xor
fs
clc
mov
scas
ljmp
or
fwait
xor
lods
fcmovnbe
dec
test
cmp
bound
iret
andl
sti
sbb
stc
sbb
mov
wrmsr
push
jp
xor
iret
push
dec
mov
jmp
cmc
add
push
cmp
xor
mov
xchg
arpl
pop
ljmp
imul
sub
mov
add
pop
jge
std
mov
mov
sub
aad
mov
push
jne
in
stos
cmp
das
std
add
cwtl
dec
rcrl
insb
mov
leave
xlat
clc
push
leave
clc
adc
pop
sbb
or
mov
mov
mov
mov
mov
leave
and
arpl
inc
dec
fwait
cmpsl
addb
dec
xchg
mov
add
sub
cmp
push
inc
fs
or
out
das
adcl
and
add
mov
popa
xor
push
sbb
ret
sub
dec
mov
sbb
std
pop
popa
jp
lcall
sub
add
stos
jl
in
test
xor
jl
push
leave
push
addr16
icebp
cltd
imul
loopne
daa
int
pop
push
pop
sbb
fcom
imul
inc
clc
iret
add
ja
nop
or
ret
add
ret
ljmp
in
imul
insl
imul
in
stos
ret
dec
or
cmpsl
mov
and
mov
cmp
jb
dec
cmp
es
push
mov
xchg
in
and
xor
lcall
xor
lret
rorb
push
out
adc
mov
mov
insl
loop
pop
jg
jno
jae
shrb
mov
add
jg
fdivrs
add
fwait
ds
lods
lahf
mov
stos
int
mov
fidivrl
scas
xchg
add
out
cmp
push
and
jno
lahf
inc
fisubrs
push
sub
and
jo
fcoml
ds
xchg
xchg
and
ja
xchg
xchg
out
push
movsb
rorl
in
inc
out
push
out
mov
ja
lock
ret
dec
and
mov
insl
push
sub
sarb
sbb
popa
mov
popf
adc
dec
fnstenv
or
outsb
mov
and
arpl
aaa
add
mov
int3
outsb
sbb
movl
pop
mov
adc
outsl
xchg
fistps
xor
ljmp
mov
xchg
push
lcall
cld
fdivrl
push
daa
mov
mov
dec
mov
aas
mov
sbb
daa
push
pop
and
inc
push
mov
icebp
movsb
or
xchg
arpl
lcall
xchg
repz
mov
shll
pop
mov
pop
sub
jnp
pop
sbb
add
dec
jae
repz
lock
popf
pusha
inc
dec
sub
test
jo
cmp
jmp
call
pop
cmp
mov
inc
loope
mov
iret
ja
jnp
sbbl
mov
out
cmp
loope
adc
dec
or
ja
dec
mov
lret
mov
xchg
ljmp
cwtl
fdivr
push
pop
jbe
adc
xor
inc
aam
daa
mov
pop
cmp
testl
add
pusha
xchg
pop
aam
jne
dec
cmp
mov
jge
andb
sbb
pop
mov
in
jne
repnz
fstl
mov
shrl
push
dec
mov
dec
andl
in
psubq
adc
insb
sub
xor
inc
mov
push
cmpsb
lock
pop
and
insb
rcrb
inc
jbe
xor
cmp
je
ljmp
xchg
add
imul
ret
mov
imul
daa
mov
jecxz
jnp
sbb
sub
jp
add
push
lds
sbb
lret
std
in
sub
mov
inc
loopne
iret
fcmovu
insl
mov
test
fidivs
pop
sub
loope
loopne
mov
add
jge
ljmp
les
popf
leave
sarb
jge
cld
loop
or
leave
sub
outsb
push
mov
dec
inc
adc
cld
push
inc
shll
xor
cmp
iret
icebp
pop
gs
stc
add
movsl
xor
adc
pop
or
mov
mov
inc
test
or
gs
movsb
je
jae
and
fmuls
cmpsb
cs
fstps
ljmp
push
call
aas
sbb
pop
cmp
cli
out
and
or
jl
movsb
movsb
or
negb
dec
pop
and
xor
mov
jb
add
push
mov
scas
jo
xor
lret
sub
fnstsw
lea
loop
fsin
mov
rclb
jg
pop
mov
pop
mov
fistpl
jecxz
test
imul
jo
xchg
jp
mov
xchg
push
sbb
je
mov
out
mov
daa
push
mov
lock
pusha
mov
xor
rcrb
loopne
nop
sub
sti
push
jmp
pusha
mov
xor
rcrb
loopne
nop
sub
sti
push
jmp
fcomi
lret
pusha
mov
xor
rcrb
loopne
nop
das
sbbb
cmp
in
jo
pusha
mov
xor
and
dec
xchg
dec
sbb
pop
mov
pushf
sbb
scas
xor
or
sbb
test
enter
call
pushf
sbb
fmull
push
sbb
sub
cmp
mov
jl
mov
pushf
add
faddl
jo
bound
aas
mov
dec
xchg
lods
sbb
clc
push
add
mov
insl
push
rcl
movsl
lods
std
mov
cmp
or
xchg
lock
xor
fsubrl
icebp
ja
sar
ret
inc
mov
pop
xchg
sbb
add
xchg
xchg
jae
sbb
addr16
ret
test
and
sub
cld
inc
sbb
and
call
pushf
out
xlat
mov
dec
imul
data16
xor
out
pop
dec
call
dec
xlat
inc
dec
xchg
mov
sub
in
dec
addr16
lret
cmp
jge
jno
arpl
aaa
mov
ret
popa
imul
repnz
inc
sbb
sarl
sub
cld
incb
pushf
or
fcompl
push
sbb
sub
cmp
dec
rcrb
bnd
int
call
pop
int3
dec
scas
cmp
out
cwtl
sub
inc
fisttpll
pop
fimull
xchg
xchg
jmp
pop
rclb
dec
cltd
push
xchg
sbb
dec
imul
cmp
dec
mov
or
dec
sarb
jnp
pop
in
push
sbb
sub
cmp
dec
enter
call
pushf
sbb
fcompl
push
sbb
sub
cmp
dec
enter
call
mov
cmp
ret
faddp
pop
cmpsb
or
adc
out
enter
mov
mov
fildl
test
or
out
inc
lret
nop
js
sahf
lret
into
js
sub
inc
push
enter
xor
shlb
cmc
mov
pop
jg
movsb
add
add
jge
mov
pushf
mov
aaa
jb
rcrl
or
daa
push
jno
xchg
pop
fstpt
xlat
cmc
out
decl
dec
sarb
adc
cltd
test
xchg
mov
dec
pop
pop
cmpsl
in
sbb
mov
call
leave
fnstenv
cmpsb
inc
test
cmp
mov
stos
cmp
xchg
and
mov
out
sahf
xchg
repz
xchg
or
mov
adc
lods
movsl
adc
dec
les
mov
dec
leave
push
fstps
mov
mov
icebp
pop
sahf
dec
rcr
ret
pop
inc
pop
int
movsb
setnp
sub
fwait
ljmp
sub
lods
in
clc
mov
cmp
dec
or
fisubrs
sbb
cmp
xchg
or
sub
pop
iret
inc
int
xchg
call
and
rcrb
or
xchg
pop
cmp
mov
aaa
iret
cs
loop
in
sbb
cmp
mov
nop
clc
aas
pop
xor
cmp
cmp
imul
or
or
test
test
loopne
addr16
imul
incl
pop
mov
pop
es
adc
outsb
je
ja
jmp
jmp
mov
xchg
dec
repz
push
xorb
int
test
scas
roll
xor
inc
inc
cmc
loop
sub
pop
xlat
dec
sub
sub
gs
mulb
push
es
inc
popf
dec
fisttps
outsb
mov
loopne
add
cmc
in
sbb
call
daa
pop
or
or
ja
popa
pop
adc
in
xchg
rorl
imul
in
add
push
test
imul
out
pop
outsb
loope
or
pushf
call
daa
cs
call
jnp
loop
sub
shrl
int3
je
fldl
dec
int3
xchg
sahf
jnp
mov
das
int3
push
xchg
mov
add
addb
dec
jl
int
call
loope
cmp
xchg
cmp
mov
add
inc
insl
out
enter
dec
pop
pop
mov
outsb
mov
outsb
xchg
push
jle
push
jmp
push
shlb
stos
outsl
pop
jbe
push
xchg
sbb
sub
outsb
or
pop
jge
leave
in
adc
das
pop
add
addr16
stc
mov
or
ja
inc
dec
add
sbb
sbb
sub
xchg
fnstenv
xor
lods
xor
imul
fmul
pushf
test
jg
insb
stc
cs
test
enter
or
cmp
lcall
orb
or
aaa
inc
test
shll
loope
sbb
inc
dec
rorl
jl
imul
rol
sbb
sar
jns,pt
jae
sbb
push
mov
push
aam
clc
nop
jl
addr16
repz
jecxz
call
in
loopne
gs
arpl
cmp
fsts
in
cmp
stc
adc
lods
and
mov
out
ficoml
sbb
mov
icebp
pop
pop
or
mov
in
inc
jg
inc
mov
in
rcrb
test
sbb
aas
jne
add
loopne
inc
lea
rcrb
daa
push
mul
stc
inc
data16
push
mov
jnp
test
int
outsb
mov
fwait
popf
cmp
cmp
cs
mov
int
jg
in
or
ja
fs
xchg
fstps
sbb
jno
add
test
out
fistps
sbb
inc
xchg
test
test
nop
cmp
dec
ljmp
mov
add
rcll
mov
or
xchg
and
or
and
and
push
cs
rcl
jo
or
jb
dec
cmpb
enter
nop
cs
and
into
dec
adc
out
gs
xchg
pushf
cmp
insl
dec
in
or
enter
bound
mov
xor
push
xchg
out
sub
out
daa
pop
jne
lods
or
xchg
in
insb
stc
adc
sub
and
jp
ret
adcl
ja
mov
mov
xor
lcall
and
cmp
xlat
mov
aam
ret
mov
xor
lahf
sahf
lret
dec
out
out
mov
pop
test
es
mov
lock
pop
into
lock
loopne
rorb
jmp
push
mov
mov
xchg
jl
dec
cwtl
mov
xor
mov
mov
xchg
xchg
in
mov
in
hlt
andb
mov
ror
adcb
mov
push
rol
mov
rolb
pop
jl,pn
push
outsb
cmp
jle
mov
scas
or
mov
and
mov
icebp
pop
fists
jecxz
stos
mov
adc
repz
dec
push
or
jo
adcl
daa
dec
or
xchg
shl
imul
out
sub
mov
jmp
xor
movsl
jbe
arpl
sbb
jge
mov
adc
pop
sub
ljmp
jp
rcr
jbe
popf
pop
popa
scas
or
or
dec
in
add
aam
jl
pop
pop
loope
mov
jno
roll
fwait
add
jmp
popa
mov
mov
xor
xchg
outsb
adc
add
xor
out
lods
push
jnp
es
jl
xchg
in
mov
popf
dec
call
and
xchg
cmp
je
arpl
arpl
cmc
cmp
lea
lcall
out
jo
and
and
mov
aaa
jle
add
icebp
addr16
into
cmp
xlat
out
in
pusha
cmpsl
add
test
or
pop
into
ret
loopne
dec
pop
scas
cmpl
lods
lods
popa
imul
pop
std
leave
es
cld
stos
clc
mov
or
sbb
out
push
lds
mov
mov
mov
jb
loop
add
sbb
mov
pop
dec
sub
cltd
stos
cmp
hlt
jo
mov
xchg
jge,pt
xchg
xor
test
xchg
add
insl
sarb
rcrl
jae
xchg
inc
mov
add
sbb
dec
out
jo
pop
mov
mov
inc
addr16
cmp
fs
movsl
push
add
xor
lock
mov
jl
pop
out
mov
mov
cmp
mov
cmp
pop
pop
push
out
xor
add
in
addb
stos
adc
adc
sbb
push
push
mov
jmp
and
dec
and
fimull
bound
out
je
cmp
pop
shll
insb
sahf
xchg
cmp
jns
ficompl
push
cwtl
mov
mov
out
iret
imul
xor
lods
or
and
out
pop
mov
dec
in
mov
lret
adc
jge
pop
inc
push
test
call
popf
mov
scas
push
addr16
out
shrb
sub
push
sbb
push
inc
mov
mov
movsb
hlt
inc
xchg
pop
jae
sub
xlat
or
test
cmc
sub
mov
dec
movsl
sbb
test
sbb
xchg
mov
pushf
movsl
add
adc
in
iret
stos
arpl
test
sarl
mov
inc
imul
dec
xor
mov
sbb
mov
cld
jnp
adc
dec
fidivl
loop
pusha
or
mov
jo
adc
je
je
add
rol
in
sbb
add
pushf
mov
in
das
pop
mov
ret
lock
loope
or
or
pop
xor
js
mov
sar
xchg
lahf
mov
ret
ret
pop
cmpsl
loope
add
fdivp
test
inc
pop
dec
push
cmpsl
subb
fwait
xchg
out
mov
push
movsl
lcall
pop
jo
dec
shrl
fisubrs
or
fisttpll
dec
scas
lds
into
push
lea
mov
in
cmpsb
sarb
push
outsb
xlat
add
push
inc
addb
sti
shll
test
add
dec
jne
and
sub
mov
xor
dec
or
dec
std
and
xor
mov
inc
insl
cmp
adc
fwait
and
sub
lret
js
stos
test
ret
fbld
into
dec
pop
mov
cmp
popa
cmp
roll
xchg
lea
add
xchg
xor
imul
adc
jo
fwait
maskmovq
notl
dec
dec
mov
imul
xchg
add
xor
jae
adc
or
cmp
push
sub
ret
pop
cmp
imull
or
push
insl
sub
test
mov
lock
xchg
xorb
mov
icebp
inc
loop
mov
or
dec
test
dec
int
jp
ljmp
std
push
mov
movsb
rcr
jns
aam
dec
and
jnp
hlt
std
mov
dec
dec
sarl
push
out
xchg
jle
and
jne
out
ljmp
ret
repz
fldt
sarl
lock
xor
int
push
add
js
mov
rcr
push
jae
and
imul
xchg
hlt
mov
pushf
dec
inc
hlt
insl
adc
pop
push
cmpsl
pop
sbb
pop
dec
sbb
inc
push
scas
xor
push
cmpl
in
shl
xchg
and
push
out
lds
sbb
std
lcall
sub
pop
fsubs
out
xchg
sub
lock
inc
sub
lret
out
loopne
mov
adc
outsb
and
sbb
adc
repz
ja
xor
aam
pop
cltd
faddl
test
jae
inc
negb
mov
fdiv
in
aas
lock
call
mov
lahf
in
jnp
rcr
fidivrl
mov
or
stc
jno
bswap
push
rorl
hlt
fcompl
iret
jne
mov
xor
mov
lret
jo
dec
lret
adcl
loop
aam
stos
jecxz
sub
outsb
sti
xchg
push
mov
mul
mov
mov
cmc
lock
xlat
out
jecxz
xor
pop
sub
cltd
jns
fmulp
mov
mov
dec
arpl
mov
jecxz
out
lret
loopne
pop
jnp
lds
test
mov
aaa
jne
daa
mov
inc
imul
adc
jo
aam
inc
inc
push
fs
adc
pop
xchg
pop
arpl
mov
loope
mov
lea
push
mov
sti
insb
mov
in
cmpsl
out
mov
and
jne
mov
push
js
push
adc
mov
cmpsb
and
rcll
sbb
sub
rorb
stc
cmpl
ret
into
xor
addb
out
into
imul
test
imul
icebp
cmp
xor
xchg
sub
insl
call
xchg
add
push
les
negl
and
or
rcrb
add
mov
fldl
xor
in
outsl
pop
jmp
movsb
and
add
in
out
fcmovnb
mov
sahf
mov
xor
cmp
movsb
or
adc
fdivrs
mov
add
lea
lcall
jbe
sbb
popa
and
ss
rorb
add
es
sbb
stos
mov
mov
int3
aad
jle
gs
dec
xchg
jmp
cmp
out
xor
scas
cmpsl
and
test
lea
pop
fistl
sbb
je
cmp
xchg
mov
into
adc
ficoml
rep
es
in
js
arpl
cmp
cwtl
adc
daa
add
scas
jp
sti
sbb
pop
sub
test
mov
mov
push
cmp
in
xchg
ds
imul
jg
mov
cli
fmull
jecxz
shlb
fnstenv
sub
push
dec
fcom
mov
mov
jg
arpl
cmp
mov
cmp
pop
pop
rcll
mov
imul
test
jecxz
pop
xlat
mov
test
jge
sbb
pusha
shll
push
dec
push
test
add
fmull
mov
mov
std
adc
xchg
scas
pop
popf
and
push
fadds
or
sbb
pop
xor
movsl
mov
pop
mov
das
fsubs
pop
divb
mov
and
xchg
and
and
fwait
add
sbb
sub
mov
inc
out
xchg
mov
data16
xchg
mov
jo
aaa
inc
push
and
mov
frstor
pop
push
lcall
roll
call
dec
mov
outsb
adc
mov
sbb
arpl
inc
lret
pop
hlt
mov
pushf
sbb
cmp
aad
in
iret
mov
loope
jmp
xchg
repz
and
je
sbb
add
adc
cltd
fwait
lret
insb
int3
sbb
lds
xor
adc
push
mov
fimuls
mov
add
add
xchg
inc
inc
inc
or
xor
push
adc
cwtl
lea
into
fs
pop
test
jl
pop
int
add
cmpl
cmp
dec
add
sbb
push
xchg
mov
pop
andb
adc
pop
pop
movsl
sti
cli
push
ficompl
les
pop
adc
pop
jl
lahf
popf
jbe
repz
push
inc
push
pop
loop
addr16
xor
add
out
rcll
xor
inc
jae
call
call
je
and
insl
or
mul
daa
sub
mov
daa
adc
aaa
add
xchg
adc
jae
in
stos
sub
pusha
xor
into
and
mov
jns
cmpsl
push
sub
add
ret
sbb
fcoms
sbb
imull
movb
scas
inc
push
mov
fadd
adc
push
outsb
pop
mov
loopne
stos
imul
test
ja
aam
xchg
xor
dec
lds
push
push
sbb
pusha
add
pushf
aam
out
mov
mov
add
or
push
das
test
into
cmp
add
mov
js
jg
aas
pop
push
int
push
jge
fwait
dec
mov
jg
mov
push
push
xchg
dec
and
fsubp
sub
push
dec
in
dec
cmp
dec
es
pushf
stos
ret
pushf
and
int
and
lahf
dec
test
jp
inc
hlt
repnz
mov
in
dec
ds
aas
and
jmp
xchg
inc
test
pop
pop
fbstp
lahf
xchg
test
xchg
inc
dec
insb
js
mov
lods
lock
or
sbb
shll
mov
jl
mov
add
push
xchg
cmc
jbe
sub
sbb
fldl
pop
push
or
inc
adc
xchg
stc
sti
sbb
movb
bound
repnz
jns
roll
dec
jns
jno
push
push
and
fiaddl
lret
rcl
push
ret
imul
loope
pop
lea
push
dec
jmp
push
and
jmp
into
cmp
or
shrl
inc
icebp
jbe
or
inc
ja
rol
std
test
loope
dec
or
test
cld
jb
push
jge
mov
repnz
fcmovnbe
fs
arpl
mov
fistl
ficoms
lock
push
pop
sahf
fdivrl
mov
and
jb
std
and
cs
fs
or
mov
inc
bnd
shrl
mov
and
xor
call
cmpsb
cmc
mov
cmp
xor
in
fisttpll
daa
clc
in
cmp
stc
xchg
insl
dec
sub
pop
popl
xchg
cmp
adc
add
stos
nop
fisubrs
jecxz
xor
shrb
jae
and
leave
inc
sbb
in
dec
shrl
pop
mul
sub
mov
pop
in
jns
adc
cmpsl
or
shll
adc
movb
xchg
pop
dec
jmp
xchg
rol
jecxz,pn
lret
and
add
adc
hlt
inc
std
jb
ds
in
rcr
push
adc
adc
scas
pop
xor
push
lretw
xor
mov
dec
xor
enter
push
rcrb
and
jnp
lock
pop
mov
mov
pop
dec
jns
mov
pop
ss
leave
test
dec
adc
inc
push
rcr
dec
add
xor
sub
adc
xor
xchg
mov
and
lret
adc
lods
shrb
push
xor
gs
push
or
insl
mov
inc
aaa
cmovae
jecxz
sahf
rorb
out
les
loope
out
pop
adc
pop
and
mov
push
shr
icebp
dec
shlb
lahf
iret
jg
push
cmp
add
test
addr16
fs
sub
sbb
test
inc
call
fadd
push
in
jae
jle
outsb
ds
sbb
xor
int3
jns
repnz
dec
mov
popa
js
mov
adc
fildl
filds
mov
inc
dec
jbe
aad
vphadduwq
xchg
lea
subl
xchg
or
lret
xorb
fildl
aas
push
sbb
int3
cmp
cltd
dec
and
mov
xchg
push
xor
out
push
sub
aam
sbb
gs
or
fisttpl
test
aad
rorb
mov
cmp
mov
int
ljmp
mov
stos
inc
adc
xor
and
inc
mov
mov
sbb
hlt
mov
mov
mov
arpl
adc
rcr
pop
cwtl
cli
sbb
dec
shr
sub
dec
xchg
jmp
and
loop
aaa
push
push
adc
push
and
popf
mov
pusha
xlat
xor
or
divb
push
add
xor
dec
push
mov
xchg
decb
les
inc
les
mov
xchg
sub
or
jo
inc
pop
shll
aas
lock
outsl
leave
das
pop
test
push
mov
sub
jbe
call
push
clc
sahf
gs
test
hlt
inc
iret
push
mov
and
sbb
mov
sub
and
jae
jo
stos
cmp
sub
add
cli
pop
push
pop
inc
add
mov
flds
lods
sbb
mov
mov
xor
movsb
inc
sub
mov
dec
out
and
mov
inc
xor
fcomp
cwtl
jg
shll
xchg
and
int3
movsb
lea
sub
loope
sbb
pop
sub
loope
mov
mov
pop
and
cmpsl
mov
pop
mov
push
and
shr
enter
pop
inc
jl
xor
shrl
rcrb
jns
inc
jo
jmp
fdivrl
sub
cmc
js
neg
or
int
testb
nop
notl
test
jne,pt
adc
cmpb
addr16
test
jmp
cld
stos
mov
pop
xor
push
pop
inc
lods
fisubrs
mov
sbb
cltd
add
popl
xor
xorl
cwtl
push
insl
mov
popf
sbb
dec
ds
mov
mov
push
and
push
xchg
push
jno
and
push
mov
mov
into
scas
fldenv
mov
cltd
orb
sub
sub
cs
mov
jnp
leave
push
jmp
sub
daa
add
xchg
gs
mov
maskmovq
imull
add
inc
push
add
sub
add
cmpsl
adc
iret
insb
aad
lea
add
pop
inc
shll
aam
and
loopne
xchg
cmp
and
or
fstp
xchg
mov
adc
lds
pop
sub
mov
sti
push
or
and
mov
inc
and
sbb
mov
mov
xchg
mov
xor
scas
icebp
sti
clc
adcb
sti
scas
sbb
sbb
mov
loopne
lds
dec
sbb
mov
scas
sbb
sbb
or
cltd
test
aam
aas
inc
inc
jl
mov
pop
or
out
imul
adc
fisttpll
jp
decb
ret
mov
aas
aas
mov
or
sbb
push
or
push
dec
cmp
ss
idivl
xor
mov
scas
faddl
jnp
ja
cmp
cmp
mov
stc
xor
outsl
andl
pushf
xor
xchg
fdiv
sub
out
adc
push
push
mov
pop
arpl
outsl
outsb
pushfw
sbb
dec
fcompl
push
sbb
sub
cmp
dec
enter
call
pushf
sbb
fcompl
push
sbb
sub
cmp
dec
enter
call
sbb
sub
mov
pop
in
push
sbb
sub
cmp
dec
enter
in
jl
mov
sbb
sub
cmp
dec
fcompl
push
sbb
xchg
sub
sbb
or
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
cmp
or
sbb
fistpll
and
stos
fwait
mov
test
fucomi
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
xchg
stos
jmp
lret
sbb
sti
fucomi
xor
and
adc
add
jb
arpl
arpl
mov
cwtl
mov
into
jecxz
jmp
xchg
movsl
xchg
lods
mov
inc
sbb
dec
insl
mov
mov
pushf
stos
sub
mov
cli
notl
pop
ljmp
mov
xlat
inc
sarb
into
icebp
into
jecxz
sbb
stos
mov
sti
and
aam
mov
fs
dec
test
decl
setnp
mov
push
cs
pop
lret
lret
add
sub
ret
sbb
pop
xchg
and
mov
push
adc
sti
xor
jno
cmpl
sti
lret
xchg
jnp
mov
sub
mov
mov
inc
xor
lret
adc
adc
jmp
cmp
loopne
popa
jns
mov
lcall
scas
mov
sti
loop
and
sub
xor
dec
dec
bound
mov
mov
mov
ret
jecxz
sar
fisttpl
outsb
cmp
sbb
pop
push
stos
repnz
repz
out
inc
jmp
sahf
cwtl
mov
arpl
fs
imul
sub
dec
pop
or
call
iret
jmp
nop
movsb
mov
pop
push
outsb
addr16
jae
and
jnp
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
adc
mov
push
cs
sahf
orl
xchg
adc
xchg
dec
rcrl
jl
pop
jb
add
cmc
xchg
adcl
cmp
js
pushl
add
adc
sub
push
push
push
aam
push
icebp
call
outsl
push
loopne
xor
sti
jnp
clc
dec
lea
les
insb
inc
jecxz
adc
fsubrs
pop
inc
push
adc
cs
xchg
push
pusha
adc
sub
imul
popf
add
mulb
inc
inc
jecxz
aaa
inc
dec
loopne
mov
insb
shlb
or
mov
into
hlt
pop
mov
and
popf
sbb
mov
incl
lods
aas
mov
sbbl
xor
rorb
fcmovne
aam
or
sub
mov
out
jp
ss
adc
xchg
ds
cmpl
mov
std
imul
mov
cli
or
push
mov
pushf
dec
cltd
adc
lret
icebp
ret
outsl
stos
xchg
cmp
sub
mov
pop
sub
xchg
push
jle
sub
into
std
jmp
sub
dec
mov
gs
movsl
mov
add
cs
call
cs
mov
ljmp
mov
jle
lahf
fs
test
iret
sub
sbb
mov
xchg
mov
mov
dec
lahf
mov
cs
pop
xchg
jnp
mov
sub
popf
icebp
push
mov
and
mov
push
dec
in
jns
jmp
jp
adc
popf
inc
mov
mov
lods
pop
call
aas
fisubs
jae
or
dec
inc
fisubs
aam
xor
mov
sbb
inc
int3
inc
and
outsb
mov
fiaddl
in
dec
sti
sub
lods
xchg
mov
daa
sub
ficompl
hlt
cmp
cwtl
inc
sbb
mov
imul
xor
mov
add
loop
add
call
ljmp
jmp
test
ror
dec
pop
dec
push
lret
inc
pop
mov
dec
outsb
sbb
stos
pop
push
lods
cltd
les
movsb
pusha
mov
notb
xlat
lods
jae
sub
push
xor
dec
stos
xlat
pop
adc
sbb
pop
and
loopne
push
cltd
in
iret
icebp
in
add
and
loope
xlat
hlt
out
mov
adcl
inc
sub
fs
inc
pop
lahf
bnd
ja
mov
roll
inc
out
mov
dec
pop
sbb
jmp
in
cmc
roll
inc
lret
xchg
lret
inc
ja
movsl
cwtl
enter
rcr
pop
test
mov
dec
or
jmp
mov
mov
lods
xchg
cmpb
out
rcrl
mov
dec
int
loopne
push
cmp
add
adc
adc
daa
sbb
adc
push
ds
ficomps
mov
pop
call
pushf
push
or
pushf
out
cli
xorl
pop
mov
retw
mov
jmp
push
fsubp
into
gs
add
bound
push
lea
adc
movsb
insl
mov
cmc
mov
lret
cwtl
pop
cltd
aam
jecxz
scas
testb
sarl
jp
inc
inc
sarl
leave
scas
bound
xchg
mov
repz
and
or
cld
pop
jbe
xchg
sbb
into
mov
jb
scas
xor
sbb
test
lods
daa
cli
lds
and
ss
jne
out
fxch
in
push
insb
cmp
jns
mov
in
cltd
push
sti
in
shrb
adc
fildl
or
cs
ja
inc
iret
mov
jbe
add
add
pop
ret
into
std
push
scas
adc
popf
xchg
or
subb
sub
sub
and
and
icebp
and
cwtl
stos
cmp
push
adc
sbb
sbb
add
mov
ret
jno
rcrb
xlat
xchg
in
sub
fimull
pusha
data16
dec
mov
into
enter
jbe
addl
mov
xor
add
iret
sbb
sarl
xor
int
sti
stos
adc
xor
rorb
jnp
mov
insl
xchg
inc
mov
pop
cmp
or
test
ja
iret
cmpsb
or
int3
iret
pop
sub
repz
pop
stos
pusha
sarl
push
aad
gs
stc
int3
sbb
adc
sbb
add
mov
mov
loop
or
and
test
mov
add
les
fisubrs
push
xchg
jecxz
fnstenv
int
test
testb
insb
push
sbbb
jb
lahf
roll
sahf
cmp
dec
cli
int
imul
lfs
repz
dec
fs
shlb
dec
pop
sahf
mov
sbb
loopne
fbld
sbb
jge
das
shlb
pusha
mov
mov
gs
outsl
ds
dec
push
pop
xchg
test
notl
fldt
imul
xor
mov
ss
lods
pop
out
inc
test
dec
xor
iret
dec
outsb
dec
mov
in
jp
fwait
push
dec
lock
mov
std
out
out
pushf
xchg
mov
hlt
pop
pop
scas
mov
subb
aaa
ja
or
sbb
das
aad
jnp
push
imul
or
adc
sub
sub
sub
test
dec
jmp
cli
mov
push
inc
add
outsb
inc
dec
cmc
jg
test
roll
fnstenv
xchg
mov
and
cli
push
pop
out
lods
pop
adc
fldenv
pop
jns
lock
xor
add
call
ja
xchg
mov
pop
push
jg
jmp
sbb
jne
ss
imul
popa
movsl
or
mov
imul
pop
loop
sbbb
dec
scas
or
push
pop
pop
stos
rcl
add
lods
fimuls
dec
push
icebp
sbb
mov
lahf
not
pop
in
scas
inc
orb
dec
pop
xchg
testb
aaa
icebp
movsb
fs
push
push
mov
cmp
pop
jge
cmc
adc
fdivr
mov
gs
jo
add
or
test
lret
pushf
imul
pop
sub
or
or
and
js
sub
int
inc
xchg
sbb
mov
enter
mov
cmp
push
jge
dec
out
loopne
xorl
enter
shlb
cmp
sbb
and
mov
jp
inc
mov
cltd
jae
repz
pushf
dec
mov
pop
inc
es
xchg
lret
mov
add
fmull
dec
jecxz
add
push
xor
mov
and
in
cwtl
jmp
or
inc
push
mov
xor
subl
addr16
aaa
cwtl
mov
jae
dec
dec
mov
lahf
jae
mov
gs
mov
xchg
sub
fsubl
push
repz
pop
fwait
aas
mov
adc
or
or
ret
push
mov
xor
adc
inc
and
push
mov
aas
push
mov
aam
data16
insl
mov
aad
inc
sbbb
mov
and
sub
nop
pop
mov
aam
imul
mov
dec
test
or
mov
ret
scas
cmp
jg
jo
sub
jg
fs
inc
repnz
popa
pushf
or
dec
lahf
jo
popf
out
jne
sbb
ljmp
cmp
pushf
add
call
ret
data16
in
cmp
in
dec
inc
sbb
jle
jne
push
jmp
ja
popf
mov
xor
pop
shlb
pop
and
sbb
outsl
sar
push
mov
loop
jns
mov
sub
loopne
inc
push
stc
add
in
lods
push
outsb
call
adc
ror
add
sub
cmp
aam
push
or
mov
mov
jae
cmc
call
pop
sub
dec
xor
fwait
cmc
and
sbb
pop
mov
std
dec
push
mov
mov
mov
ret
lds
dec
mov
xor
xchg
nop
loopne
pop
and
pop
enter
xabort
xchg
in
push
sbb
mov
movsl
jmp
int
mov
cmp
push
add
or
popl
push
push
jg
jge
pop
pop
nop
pop
cmp
jp
mov
pop
scas
jo
or
hlt
popa
ret
xlat
fs
xor
cmp
ja
push
dec
or
jnp
add
popa
rcl
pop
sahf
lret
mov
mov
jne
jl
xchg
test
mov
out
aam
negl
mov
dec
outsl
popf
pop
cmp
xor
mov
push
add
inc
movsb
sub
pop
lret
xor
loop
fwait
mov
es
jne
jbe
or
push
add
xor
adc
out
popf
roll
out
cmc
mov
dec
in
scas
inc
inc
inc
jl
pop
lret
fistpll
mov
cmp
out
sbb
cli
clc
or
in
lds
jo
test
inc
add
push
js
push
sub
popa
push
les
out
jg
cmpl
jg
push
ret
push
xor
push
loope
sub
outsl
cld
jno
sahf
mov
testl
js
add
lcallw
dec
sub
inc
pop
add
sub
ficompl
leave
cmpsl
mov
jp
sub
lock
push
aas
scas
push
and
inc
sub
stc
lret
jmp
mov
xchg
fiaddl
xchg
sub
out
fnstsw
sbb
push
push
sbb
sub
push
xlat
mov
inc
in
cmp
or
loopne
out
xorl
mov
stos
xlat
imul
jge
pushf
mov
js
lahf
sub
pusha
repz
mov
repnz
push
cmc
inc
xor
cmp
cmp
in
shl
push
lock
push
and
mov
imul
pop
mov
out
xchg
ret
nop
lods
sti
or
sub
inc
daa
add
mov
jmp
push
and
inc
cmpsl
jae
inc
mov
xor
mov
jp
add
cmpsl
or
inc
mov
adc
out
loope
imul
repnz
imul
fists
pushl
cmc
xor
push
cmp
nop
xor
jmp
ds
sub
call
xor
lea
mov
imul
push
aam
lcall
cmpsl
test
xor
sarb
pop
in
sbb
lods
es
jmp
imul
push
mov
cwtl
push
add
or
popf
mov
mov
dec
add
cmpsl
dec
add
sub
pop
lock
sbb
ficoml
xchg
inc
in
and
jg
loop
jno
mov
lret
icebp
mov
xor
int
fisubl
test
push
xor
fsts
push
icebp
cmp
push
mov
mov
dec
cs
inc
stos
sub
or
push
xorl
shrb
pop
push
and
adc
or
and
mov
icebp
hlt
cmp
cmp
movsb
mov
loop
cmp
mov
test
or
push
adc
mov
pop
adc
jle
packssdw
adc
stc
push
frstor
int
stos
pop
inc
inc
sbb
sbb
xchg
mov
rcr
ljmp
mov
xchg
inc
imul
push
jecxz
in
mov
lcall
cmpl
adc
test
xor
inc
movsb
mov
addr16
sub
mov
mov
rorb
dec
shlb
cwtl
xor
stos
lods
cmp
push
mov
add
cs
push
imul
mov
in
xchg
ficompl
and
mov
pop
push
xor
cwtl
inc
and
mov
xor
out
lods
push
cmp
sub
pop
in
push
cmp
in
xor
inc
pusha
in
lea
ljmp
aam
add
jo
add
jg
in
mov
pushf
push
fwait
lret
dec
push
cwtl
les
push
sub
in
enter
cmp
inc
test
arpl
xor
and
or
sbb
fstps
adc
das
sbb
loop
xchg
xor
repnz
out
insl
popa
jb
cs
mov
rclb
pop
mov
push
and
in
or
push
bound
xor
sbb
sbb
or
repnz
pop
jae
lods
cmp
jp
fldl
cmpsb
mov
divb
sbb
mov
imul
mul
push
les
outsl
lds
pushf
lds
dec
mov
xchg
mov
mov
mov
dec
mov
int
test
insb
insb
push
xor
sub
mov
mov
call
lcall
lods
sub
shl
jo
pop
xchg
sub
mov
test
jmp
dec
sub
xor
hlt
cltd
loope
test
adc
mov
ss
xchg
pusha
inc
mov
xor
cwtl
loope
fstpt
sar
jmp
fwait
push
repz
addr16
cmp
pop
cltd
xor
cmp
mov
mov
or
pop
popf
inc
pop
test
test
add
fwait
jo
mov
aad
lahf
push
sub
pop
add
pop
sub
mov
mov
or
adc
jns
inc
popa
mov
add
cmp
cmpb
cmpsl
add
xor
and
lock
rolb
mov
sti
cmp
push
push
xor
fistpl
lock
inc
fwait
scas
pop
leave
push
les
je
push
pop
std
es
xor
cmp
sti
mov
testl
fisubrs
jl
mov
mov
jo
std
dec
push
xlat
js
inc
leave
and
inc
das
test
sbb
mov
mov
movsb
fisubrs
mov
mov
fisubrs
ret
movsl
pop
lahf
dec
popf
ja
xor
pop
xchg
inc
mov
pop
lret
xchg
aam
push
push
pop
fcmovb
add
addr16
jmp
xor
or
inc
push
lock
iret
addr16
inc
xor
in
push
add
lret
pop
xchg
inc
xchg
sbb
lret
xchg
xchg
mov
movsl
dec
pop
stc
sbb
jb
addb
push
sarb
xor
mov
repnz
inc
ja
test
add
test
cmc
and
call
pop
lds
ret
fmull
repnz
pushf
out
xor
sti
and
pop
or
push
sbb
sub
shlb
mov
ret
out
dec
lods
or
inc
xor
inc
dec
push
push
or
and
dec
sbb
xchg
popa
add
jae
push
add
fidivrl
in
pop
sbb
jo
fidivrs
inc
outsb
push
inc
mov
sbb
in
ljmp
push
add
pop
notb
jo
or
xor
push
xchg
sub
mov
xchg
or
ret
dec
add
add
pop
push
lock
idiv
or
int3
jge
leave
addb
jge
sub
outsb
push
sbb
pop
fcompl
aas
data16
push
nop
out
jmp
nop
ljmp
insb
imul
inc
inc
mov
push
repnz
adc
push
xor
ret
push
push
mov
push
ss
jb
mov
and
dec
cmpsl
add
jp
stos
imul
mov
loop
loop
add
jmp
jmp
push
xor
dec
mov
adc
xor
xchg
adc
pushf
out
inc
mov
push
cltd
stc
nop
mov
lock
sub
divb
out
rcl
mov
adc
inc
sbb
repnz
add
push
pop
xchg
inc
cld
jp
push
sbb
mov
inc
fs
jno
dec
mov
test
push
sbb
call
adc
mov
adc
orl
push
test
add
xor
mov
cld
inc
pop
scas
adc
test
cmpsl
cmpsl
add
push
jno
mov
inc
lods
cs
fsubs
mov
enter
repz
sub
scas
mov
pop
lret
adc
dec
arpl
mov
pop
mov
call
cmp
cli
mov
jle
dec
and
out
ds
push
push
gs
inc
popa
cmp
lret
stos
ss
pop
mov
in
psubb
push
add
adc
sbb
repz
loope
add
cmp
sbb
loop
jo
rcrb
xchg
pusha
ss
bound
pusha
or
cmp
xor
decl
mov
mov
hlt
adc
mov
stos
inc
xor
adc
mov
cmpsb
sub
clc
movsb
add
pop
fs
push
pop
add
ljmp
sti
cmc
lods
cmpsl
jg
std
outsl
dec
adc
enter
popa
adc
ret
in
mov
lret
mov
in
push
lock
jg
mov
je
loopne
cmc
mov
ja
cmp
out
sbb
test
add
inc
inc
cmp
sahf
ja
sub
jl
jp
scas
jg
lret
jecxz
adc
mov
and
lahf
mov
add
jle
mov
mov
sarl
jecxz
inc
jnp
cmp
popf
jmp
adc
out
or
or
jo
ret
fcomi
mov
and
scas
call
inc
mov
mov
scas
mov
ficoms
xor
test
jle
jmp
cli
fcmovnbe
hlt
push
divb
loop
popa
pop
xor
mov
rclb
lds
mov
lds
add
jne
xchg
pandn
fcmovu
rcll
out
dec
lds
jmp
fwait
das
mov
adc
xchg
add
push
xchg
orb
pop
jp
jb
loope
jl
and
stos
shrl
cmp
sbb
fldcw
and
sbb
adc
inc
scas
push
in
pop
popa
hlt
fs
mov
pushf
cmpsl
sarl
sbb
push
sub
mov
ja
pusha
in
insl
int
es
adcl
xchg
adc
and
hlt
cmpsb
cmp
jle
and
adc
push
ffree
sub
lcall
jmp
call
cmpsb
jo
faddp
xchg
in
add
xor
insb
loope
xor
sbb
jp
jb
enter
dec
lods
std
cltd
lret
outsb
addb
int
add
mov
les
es
gs
pop
pop
mov
mov
js
mov
imul
xchg
inc
rclb
xchg
mov
or
arpl
sub
in
iret
arpl
repz
js
test
and
in
push
inc
cli
outsb
push
mov
sbb
cld
inc
movsb
imul
mov
sub
int3
clc
inc
mov
outsl
dec
sub
sti
divb
jae
cli
incl
and
test
lds
sarl
jae
icebp
mov
enter
xchg
inc
sub
cld
or
cmp
insb
jne
arpl
std
dec
add
int3
rcr
imul
test
pop
fadds
sti
mov
sti
out
push
movsl
and
or
sbb
js
aam
repnz
std
adc
jne
adc
int
pop
adc
xchg
adc
sahf
das
jecxz
leave
aaa
addl
std
stos
sbb
xchg
mov
loop
mov
mov
pop
shr
jb
xchg
push
sahf
xchg
push
push
dec
test
out
or
out
adc
sub
pop
adc
sub
inc
rol
xchg
mov
fmuls
or
push
xchg
or
sbb
or
cld
adc
adc
xchg
dec
push
jmp
aam
pop
add
out
sahf
mov
mov
pop
popa
pop
popf
add
loop
negl
in
repz
popf
add
jmp
xchg
push
adc
inc
icebp
in
notl
push
aam
dec
fwait
mov
xor
mov
test
fcomi
mov
xor
fildl
lahf
fisttps
xchg
cmp
mov
movsb
mov
lcall
inc
je
adc
and
sub
loop
mov
lea
out
xor
jo
dec
sub
inc
or
aad
in
fwait
sbbb
adc
stos
cmc
push
cmp
imul
push
mov
ret
ret
and
cli
and
jecxz
mov
pushf
xor
pop
loop
lret
and
cli
mov
mov
hlt
dec
ja
inc
jno
pop
icebp
pop
stc
stos
pushf
add
xchg
push
sahf
fistpl
or
jg
and
test
stos
mov
mov
mov
lret
push
push
scas
psubd
fadd
add
js
inc
pop
dec
push
mov
lcall
das
dec
or
and
sub
and
popf
push
xor
sbb
jp
test
fisttpl
insb
sbb
inc
addr16
dec
cld
dec
stos
clc
sub
aam
sub
jnp
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
cli
lret
lret
cli
fldpi
sub
cmp
or
sbb
imul
imul
and
jae
xor
and
and
pop
mov
js
jno
mov
xor
and
jb
bound
orb
sub
cmp
or
sbb
mov
xor
and
pushf
bound
mov
mov
and
in
in
adc
inc
mov
loopne
sti
sbb
adc
fisubrl
mov
or
imul
sti
push
pop
ja
stc
push
leave
stc
lods
cmp
je
aad
jl
ret
inc
daa
cli
cwtl
call
xor
aaa
inc
sub
mov
xchg
insb
dec
fcomp
movsb
movsb
fimull
js
and
lods
inc
add
push
inc
xor
test
cmpsb
xor
ret
ret
or
in
scas
std
fdivl
mov
arpl
out
shlb
pop
mov
ret
lods
dec
xor
fbld
pop
add
jmp
mov
les
mov
in
adc
add
int
fdivl
sub
adc
jb
ja
xchg
jl
dec
mov
mov
or
movsb
loop
adc
adc
ret
push
mov
or
xchg
or
or
dec
stos
pop
mov
mov
imul
lds
shlb
clc
or
sub
div
out
xlat
xchg
mov
pusha
fwait
outsl
xchg
pop
mov
inc
fistpll
inc
stc
and
or
cmp
sbb
ret
sbb
in
adc
add
xor
and
pushf
bound
orb
sub
cmp
or
sbb
in
adc
add
xor
and
pushf
bound
ljmp
push
sub
scas
sti
dec
cltd
jmp
add
mov
shl
das
xor
call
in
insb
arpl
inc
push
mov
add
lahf
fwait
xchg
dec
je
fdivs
inc
ds
lea
jns
fptan
mov
ljmp
pop
mov
jmp
mov
sub
leave
sbb
pop
xchg
incb
outsl
and
push
lret
jl
pusha
mov
insb
mov
rorl
xorl
mov
call
sbb
mov
mov
push
iretw
xor
lds
lcall
cmc
xchg
scas
les
popf
push
imul
add
into
xchg
jp
pop
sbb
push
arpl
xor
loopne
fisttpll
xchg
jo
neg
cmp
cltd
mov
add
push
sti
xlat
or
pop
outsl
in
adc
add
sub
loop
pop
mov
popf
out
push
mov
ret
loope
push
outsl
push
mov
fxch
cwtl
daa
dec
test
jbe
iret
adcl
test
filds
sub
seta
dec
cld
int
lret
int3
in
or
lods
fistpl
mov
and
mov
loop
jl
jne
std
outsl
faddl
test
jmp
cwtl
js
outsb
mov
popf
dec
bound
andl
loopne
sub
sbb
mov
mov
fisubl
es
movsl
fdivrl
jecxz
scas
and
sub
push
push
push
xchg
or
mov
rorl
hlt
mov
mov
jb
in
mov
jbe
subb
fidivrl
sub
jmp
sahf
repz
and
mov
xchg
scas
cltd
adc
jae
insl
std
push
or
test
adc
ret
into
push
andl
rclb
add
test
push
movsb
insl
movsl
movsl
dec
stos
jmp
jl
xlat
fisubrs
pop
fnstcw
inc
xchg
cmp
dec
fsub
or
jb
gs
pop
imul
lret
scas
dec
pop
gs
inc
add
push
xor
mov
ds
or
mov
inc
or
or
jmp
arpl
and
xchg
and
jge
arpl
adc
shrl
xlat
insb
push
jbe
test
sbb
scas
shll
rcr
fistl
cmp
test
cli
lcall
xchg
pop
fidivrl
dec
test
mov
cwtl
divl
add
movsl
int3
cs
int
mov
mov
inc
xchg
jnp
mov
enter
clc
std
push
js
lds
or
in
push
sub
sbb
imul
and
jl
fsubr
inc
test
ret
js
repnz
push
add
adcl
into
rol
mov
xchg
andb
fcoms
gs
insb
dec
push
push
push
sar
sub
push
outsl
push
jae
cmp
std
sbb
les
sti
push
mov
movsl
sbb
ffree
mov
lahf
pop
popf
push
cmp
and
mov
movsb
jge
and
mov
iret
or
adc
mov
add
sub
sub
inc
insl
scas
insb
sub
lcall
cs
xchg
ret
inc
and
cwtl
int
mov
adcl
mov
push
cmp
imul
xchg
int
mov
aam
pop
outsb
fs
je
out
imul
popa
jg
outsl
jle
inc
or
dec
cltd
in
mov
lock
sti
mov
in
jae
lahf
add
add
loopne
dec
in
mov
pushf
shll
xor
add
stc
cmc
scas
neg
lahf
sub
cmp
out
out
hlt
js
lds
jl
das
push
adc
sbbb
clc
cmp
outsl
fmul
jae
mov
mov
test
push
dec
aam
movsl
loop
cmp
lods
shrb
mov
hlt
sbbb
xchg
push
cs
movsl
mov
loopne
mov
cs
cmpsl
in
and
fwait
push
pusha
mov
jle
jp
sub
aam
cld
push
sti
or
into
es
dec
loopne
nop
cmpsl
cli
dec
call
xor
add
cmp
sar
or
jecxz
add
dec
in
mov
cmpsb
subl
add
mov
popf
fprem1
divl
jge
popa
sbb
repz
movsb
loopne
push
testl
mov
in
adc
movsb
pop
out
gs
btr
push
bound
xchg
pusha
cmp
inc
cwtl
xor
pop
xchg
lods
pop
adc
add
jne
xchg
sti
cmp
ljmp
insb
into
push
sbb
cmp
rorb
mov
ss
es
sub
cmc
xchg
add
lds
gs
pop
mov
sub
push
inc
mov
jmp
in
fcompl
test
insl
bound
subb
xorl
cltd
fmul
sbb
les
adc
and
pop
adcb
sbb
movsl
inc
fcmovu
mov
inc
pop
sub
lock
fimull
mov
mov
adc
mov
mov
pop
jmp
add
push
loop
int3
xchg
inc
push
leave
mov
insb
cld
mov
scas
jle
cmp
femms
xchg
lock
mov
xor
cmp
js
in
and
fimull
push
cli
nop
sbb
mov
rorb
aaa
in
xchg
lahf
cmp
and
inc
aad
jns
sub
dec
gs
loope
push
cmp
pop
adc
arpl
jo
adc
iret
aaa
dec
pop
fisubs
inc
nop
sub
push
std
pop
fidivl
mov
adc
fnstenv
cmp
icebp
and
hlt
shlb
push
movsl
pushf
or
je
inc
sub
lock
mov
push
lods
xor
in
push
fwait
hlt
loopne
jmp
jnp
pushf
incl
sbb
lds
jae
cmpl
aad
sub
jnp
cwtl
repz
push
sbb
pop
nop
mov
mov
cltd
xchg
push
imul
iret
into
adc
mov
or
jge
mov
pop
repnz
nop
mov
push
cmpl
das
push
in
and
movsb
pop
imul
or
scas
xchg
inc
sbb
stos
in
adc
mov
popf
xor
jle
aad
loope
daa
jae
negb
daa
xchg
ret
icebp
mov
lret
mov
push
pop
rorb
addl
mov
in
fistpl
imul
shlb
std
fs
sub
arpl
adc
cmp
pop
out
vmulpd
lret
push
dec
mov
dec
add
mov
cwtl
jns
lret
add
mov
les
addr16
push
jno
leave
pop
call
or
jl
lcall
cmc
pop
mov
in
divl
mov
inc
push
jle
mov
push
les
and
dec
and
pop
mov
rcl
xchg
lret
in
xor
add
out
mov
and
add
xadd
sti
jmp
leave
lock
lods
push
xlat
mov
cmp
mov
jp
or
mov
and
sub
add
jne
sti
in
push
in
xchg
in
push
enter
fnstsw
stc
es
adc
es
xor
or
dec
insl
cmp
stc
push
pop
mov
xor
add
mov
mov
loopne
dec
shl
js
cmp
dec
lods
sub
imul
lss
mov
ret
mov
dec
or
pop
push
sbb
push
into
inc
or
push
mov
call
insl
std
bound
lea
fiaddl
loope
scas
out
or
and
test
mov
or
shl
ljmp
push
sbb
mov
sti
push
cmp
ss
lds
mov
xchg
dec
sub
cmc
pop
stc
in
dec
mov
jno
fwait
out
imul
cmpsb
bound
pop
iret
outsl
leave
sub
pop
mov
rcl
lock
and
sub
jo
iret
lea
ja
cmp
add
cmp
cmp
push
lods
cs
out
ss
xchg
push
sub
sbb
loopne
scas
and
lods
sub
mov
xor
inc
sub
jecxz
jae
xchg
or
insb
and
add
mov
pusha
out
inc
pop
ret
jne
sbb
inc
pusha
pop
lret
and
mov
or
mov
inc
fwait
cmp
into
jns
lods
icebp
and
xchg
cld
cmp
dec
xchg
jbe
imul
pop
hlt
push
push
sbb
fs
lea
imul
test
repnz
ficomps
jmp
xchg
and
dec
sti
mov
ja
xchg
xor
or
outsl
std
push
push
push
mov
inc
mov
insb
jmp
pop
mov
enter
cmp
adc
in
jecxz
cmp
push
jge
arpl
aas
sub
adc
jecxz
mov
lcall
push
out
mov
jecxz
sbbb
lret
repz
and
inc
sbb
pop
in
sbb
sbb
leave
popa
stc
push
inc
jge
jle
pop
sahf
sbb
into
hlt
roll
add
and
mov
insl
adc
and
pusha
das
outsl
or
adcl
mov
mov
add
push
int3
aad
test
inc
adc
cli
inc
fwait
jns
stc
sub
fwait
insl
je
jo
push
nop
outsl
cmpsb
bswap
push
jnp
arpl
pop
mov
push
push
fisttpl
ljmp
sar
ficoms
in
push
pop
shrd
add
push
sbb
hlt
lds
fisubrs
pop
xchg
call
push
aam
rolb
mov
sahf
inc
test
popa
xchg
push
pop
aam
clc
aam
fistl
mov
aas
or
test
dec
adc
lods
add
lods
insb
add
add
fbld
nop
lds
nop
mov
insl
jnp
out
lahf
addr16
push
adc
movsl
and
push
sti
cltd
inc
lret
iret
cwtl
iret
xor
adc
data16
adc
cmp
fstpl
inc
lods
xor
xchg
mov
lds
add
adcb
div
adcl
xor
cmp
lods
xlat
jo
mov
sub
rcr
xchg
aas
jae
je
cmpsl
shl
xor
cli
pop
xchg
sub
lds
sub
mov
leave
mov
js
stc
test
cmc
jae
pusha
ljmp
stos
stos
or
adc
adc
xor
mov
cmpsb
fistl
push
push
sbb
xorl
adc
mov
pop
xchg
mov
ret
gs
mov
mov
sarb
cmp
test
pop
push
and
and
mov
loop
rorl
adc
jae
or
pop
lods
incb
xor
sub
mov
shl
mov
movsb
addr16
dec
test
repz
fmuls
dec
sarb
xlat
in
stos
cmp
or
aad
sahf
mov
mov
clc
xchg
ja
xchg
mov
pop
pop
adc
shlb
inc
xlat
pop
dec
popw
fwait
dec
sahf
push
shll
pop
lcall
pop
ret
in
lds
or
push
lret
ja
and
jbe
sbb
mov
dec
nop
mov
insl
clc
hlt
xor
mov
or
sbb
add
int
mov
aad
adc
cmp
pop
sbb
subb
sub
div
or
cmp
sti
push
jno
xchg
mov
add
outsb
pop
and
xor
pop
loope
pop
inc
cmp
int3
xchg
fidivrl
xchg
out
sub
adc
or
push
jne
inc
inc
cmp
dec
cmc
mov
pushf
jg
xor
aad
sbb
rep
cmp
mov
pop
lret
and
cwtl
leave
pop
dec
jnp
xchg
inc
or
aam
jo
shll
sbb
fcmovnbe
das
jno
jo
cmp
dec
cmp
pop
jecxz
out
out
les
dec
ret
jecxz
insl
cmc
xor
subl
mov
scas
sahf
scas
push
mov
or
lcall
pop
and
ljmp
or
data16
sbb
aam
lahf
lcall
fwait
ss
hlt
push
aam
mov
dec
ja
fs
ds
or
add
mov
push
frstor
jmp
arpl
mov
xchg
rcrb
lcall
movsl
out
adc
adc
insb
in
push
jmp
movsb
test
pop
ficomps
pop
stos
movb
mov
sub
repnz
icebp
dec
lods
je
xor
ljmp
xlat
inc
cmp
sub
mov
mov
fs
fcmovbe
mov
xchg
scas
movsb
push
add
jle
xor
pop
scas
push
jmp
test
xorb
xchg
dec
fisubl
jae
add
lcall
ja
popf
pop
inc
out
inc
data16
out
movsb
sub
sub
mov
dec
adc
xchg
std
inc
je
pushf
or
push
dec
stc
seto
repz
adc
jno
pusha
inc
dec
or
pushf
inc
jl
outsb
mov
ss
cs
je
adc
rcr
popf
in
hlt
iret
sbb
cli
sbb
push
sbb
out
sbb
cwtl
dec
shl
iret
cmc
les
pop
aaa
pop
sbb
je
dec
outsl
pushf
sar
in
sbb
ss
jl
jecxz
test
fs
inc
push
cmc
movsl
pop
decl
mov
fwait
xor
xor
movsb
into
jmp
push
mov
dec
sub
iret
inc
jb
sub
add
push
push
stc
dec
leave
outsb
or
jbe
xchg
pop
subl
jnp
mov
mov
pop
mov
adc
sbb
into
or
stc
sbb
sti
xor
sbb
shlb
out
cmp
sub
jo
pop
mov
pop
mov
jae
popa
xchg
test
sbb
pop
add
and
pusha
jg
xchg
sbb
dec
inc
stos
and
mov
xor
pop
jp
clc
mov
iret
xor
mov
xor
xor
push
sbb
mov
mov
outsb
sub
inc
out
jno
mov
in
fwait
add
fisubl
jcxz
dec
nop
xor
or
jle
repnz
fnstcw
adcb
test
lods
push
arpl
sub
sub
out
fs
sub
pop
and
loopne
fs
aas
jmp
pop
xchg
xchg
push
rcll
jae
push
outsb
jmp
dec
mov
cmp
fmul
xchg
pop
enter
push
mov
push
pop
mov
xlat
adc
ja
sbb
mov
or
lret
fists
sub
ss
lcall
mov
mov
pop
push
push
loope
jb
popf
ds
sti
sub
pop
inc
lock
and
mov
out
shl
xchg
inc
ret
inc
test
inc
sub
fldt
dec
or
filds
ss
adc
jp
les
repnz
xlat
push
xchg
pop
das
repz
mov
mov
and
cmp
enter
pop
mov
out
dec
xchg
lret
mov
adc
lret
pop
das
mov
push
sbb
inc
mov
test
push
jns
mov
in
notb
cmc
into
sbb
cmp
sti
pusha
push
popa
and
data16
mov
lods
mov
and
lock
jns
aaa
adc
push
xor
mov
dec
test
in
cld
sub
cmp
mov
jp
inc
test
fsub
out
add
add
sub
sub
setg
shr
xchg
scas
test
fidivrs
and
int
roll
push
mov
cmp
pop
movsb
icebp
rorb
std
test
aaa
scas
adc
pop
and
push
outsb
icebp
fiaddl
out
mov
mov
scas
shll
xor
and
leave
push
mov
aas
sub
mov
clc
shrl
pusha
andb
test
and
pushf
xchg
jns
mov
scas
in
dec
cltd
fbstp
xchg
in
xchg
test
je
fnsave
push
into
pop
adc
sbb
sbb
fidivrs
lods
jo
lret
test
dec
sbb
pop
xor
and
ret
lods
push
aam
aam
repz
dec
pop
and
xor
add
mov
movsl
xor
icebp
or
jns
les
mov
add
test
pop
xor
dec
insl
inc
gs
int
cmpsl
adc
push
ljmp
icebp
inc
adc
sub
jno
sbb
jl
repz
push
mov
ret
sub
jne
cmc
loopne
out
in
fwait
mov
stos
adc
out
cmp
adc
mov
push
in
mov
mov
imul
and
xchg
dec
mov
leave
pushf
sbb
mov
pop
ficoml
test
mov
push
mov
test
mov
and
jb
arpl
and
out
sub
mov
jno
dec
leave
mov
cmp
test
jae
xor
sub
push
ja
cwtl
mov
notb
fdivl
into
cwtl
mov
hlt
shrb
add
daa
or
cmp
xchg
sbb
mov
popa
xor
sub
mov
iret
rolb
inc
push
pop
jnp
test
pop
insl
push
adcb
xor
sub
pop
fsts
inc
push
sub
mov
scas
xor
fidivrs
bound
call
data16
lret
addr16
pop
mov
pop
dec
push
adc
sbb
xchg
mov
add
je
movsl
pusha
notb
es
ret
out
lcall
arpl
sarl
xchg
fucomip
or
lock
add
insb
lcall
test
out
pop
inc
sbb
ret
add
mov
in
inc
std
jg
es
inc
jb
dec
dec
call
push
jo
pop
jmp
add
mov
cmp
inc
repnz
add
jo
pop
aad
xchg
orb
cld
adc
in
enter
in
mov
rorl
loop
xchg
cltd
sbb
or
sbb
mov
mov
fldt
xchg
inc
sbb
mov
in
data16
mov
ret
push
push
shl
mov
mov
jge
xor
scas
icebp
test
jp
sti
cmp
sbb
aaa
call
xor
push
lret
stos
dec
sbb
cmp
jo
cltd
jg
jle
adc
sbb
test
sti
shll
jle
pop
cmp
jb
repnz
bound
cld
shll
jg
in
add
and
xchg
mov
repnz
xchg
cmpsb
sbb
frstor
shll
cmp
mov
test
je
repz
and
add
adc
das
jg
pop
and
lods
mov
dec
stc
movsb
call
jecxz
int3
xor
imul
popf
int3
xchg
lcall
aam
push
or
outsb
add
add
push
ss
clc
xor
xchg
out
stc
cmp
xor
test
dec
lds
icebp
roll
filds
mov
and
and
loopne
cs
xor
data16
dec
push
mov
jmp
pop
adc
adc
sub
mov
add
imul
stos
pop
je
xorb
inc
js
adc
out
adc
sbb
stos
pop
push
pusha
popf
sbb
xchg
dec
es
sbb
pop
xchg
or
fs
xor
rcrb
rcl
and
gs
ret
mov
test
add
jne
out
ss
stos
lahf
jmp
jle
notb
cli
push
ret
push
or
mov
jb
pop
mov
add
out
jns
push
cmp
jae
add
push
mov
lcall
ja
jecxz
fimull
cmpsb
dec
push
push
aas
adc
pop
sbb
cmp
out
repnz
aas
loopne
or
fnstcw
int
sub
int3
in
dec
sarb
or
jns
mov
rcrl
fmulp
sub
std
adc
repnz
xor
pop
sub
fsubp
idivl
int
jb
mov
aam
mov
push
and
xor
movsl
lcall
movsb
inc
pusha
leave
add
dec
inc
sub
adc
shlb
push
push
cs
nop
jle
dec
ret
pop
dec
sub
ljmp
cmpsl
and
inc
mov
or
sbb
in
adc
add
xor
and
pushf
bound
orb
sub
cmp
or
sbb
in
adc
add
xor
and
pushf
bound
sbbb
sub
repnz
add
xor
and
lods
bound
add
je
sub
sub
or
pushf
loop
adc
test
xor
push
fcmovnu
xor
jae
arpl
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
insb
cli
dec
dec
mov
insb
mov
push
es
or
add
add
add
add
add
lahf
add
sbb
push
add
add
add
add
add
add
add
lahf
add
add
add
roll
out
dec
add
add
add
add
add
push
add
stos
add
out
pop
add
add
add
add
outsl
add
add
add
add
add
add
add
dec
add
add
add
add
iret
add
add
add
push
add
add
add
add
add
inc
add
fwait
add
add
add
add
add
add
add
add
add
add
mov
sbb
xor
scas
add
add
pop
add
add
or
lcall
add
add
push
add
inc
add
add
push
add
add
add
insl
add
add
add
add
xchg
arpl
and
push
add
out
fwait
add
add
pop
add
ss
add
add
add
add
add
dec
add
movsl
add
sbb
je
push
scas
add
add
xchg
sahf
add
add
add
add
and
add
add
add
add
add
add
je
add
sbb
incl
lahf
add
inc
add
add
add
stos
add
add
nop
add
add
add
add
add
add
add
add
inc
add
xlat
add
add
add
je
sbb
ret
add
aas
add
add
add
add
add
add
mov
scas
add
add
add
add
add
add
outsl
add
add
add
add
add
pop
add
add
insb
add
scas
add
mov
imul
push
xchg
sbb
add
add
add
pop
add
daa
push
int3
add
add
add
xchg
xlat
add
mov
add
add
add
test
add
add
adc
js
testl
mov
movb
add
adc
inc
add
mov
insl
add
add
push
cwtl
add
add
add
inc
add
add
inc
add
add
add
mov
movsb
add
add
add
add
movsl
add
add
add
add
add
dec
add
add
add
add
add
pop
push
sub
xchg
add
sbb
or
iret
add
add
pop
push
mov
add
add
add
add
add
add
add
add
add
mov
movsb
add
scas
add
add
add
int3
add
add
and
aas
add
add
fadds
pop
add
or
add
lcall
add
add
inc
add
insl
add
add
pop
push
fadds
pop
add
daa
push
inc
add
sub
fildl
inc
add
sldt
add
add
out
test
adc
add
xchg
add
add
add
cmp
movsb
add
inc
add
sub
aas
add
add
add
add
add
jo
int
dec
loope
xchg
pop
nop
sbb
insb
mov
dec
hlt
aas
or
test
or
pop
sti
aaa
insl
xchg
dec
sbb
bound
idiv
jmp
push
loope
mov
les
sub
fmull
lea
in
stos
push
dec
push
fisubs
sbb
inc
ds
push
movsb
push
sbbl
pusha
lods
lods
cmp
fdivl
push
ds
pop
sbb
outsb
loopne
sub
pop
sbb
lcall
repz
movb
jnp
dec
orb
sarb
es
lea
pusha
shr
mov
loop
imul
nop
arpl
mov
jo
or
movsw
xchg
adc
aas
rcrl
push
inc
push
les
shll
pushf
xchg
mov
pop
sub
mov
jmp
or
jb
mov
stos
insb
out
jb
jmp
push
ret
lock
pop
insl
bound
cld
aad
adc
or
jge
pop
mov
mov
xchg
pop
push
ficoms
or
pop
cmp
std
rcrb
ds
xchg
adc
mov
and
mov
cmp
dec
je
test
inc
adc
mov
add
addr16
js
mov
negb
and
pushf
xchg
mov
das
pop
xor
out
fldenv
in
mov
mov
sahf
mov
ss
xchg
push
std
cmp
xor
shrl
jb
sbb
fisubs
dec
mov
ljmp
in
int3
imul
iret
movsl
sahf
shlb
mov
cld
pop
cs
call
shl
rorb
mov
adc
addr16
mov
test
lret
idivl
jo
mov
xchg
inc
out
ljmp
in
mov
sbb
fbld
mov
test
dec
lods
mov
cmp
fbstp
sti
mov
sub
xor
out
out
xchg
mov
sbb
adc
and
frstor
ret
push
addb
out
add
mov
or
adc
jnp
pop
pop
in
adc
sbb
das
push
and
push
test
fisubs
out
cmp
inc
push
mov
mov
stos
and
lds
out
adc
sarl
pop
sbb
mov
push
cmp
in
loopne
push
cld
cli
cmp
divb
lea
repnz
out
pop
xchg
xlat
das
lret
int
or
lods
aam
outsb
int
jle
loop
sbb
stos
shrl
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
