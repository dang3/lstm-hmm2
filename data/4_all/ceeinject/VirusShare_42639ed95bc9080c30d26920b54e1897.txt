call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
bound
jl
insl
mov
fimuls
sbb
xchg
pop
mov
mov
inc
mov
jb
add
adc
and
xor
ret
insl
loope
inc
dec
mov
mov
imul
std
or
cmp
sub
xchg
js
push
ret
adc
insl
hlt
xor
rcll
stc
in
ss
ds
add
dec
movsb
popa
imul
jmp
clc
ljmp
inc
test
mov
push
repnz
repnz
pop
add
mov
mov
push
jmp
push
test
sub
pop
loop
rcll
sbb
lods
bound
in
and
shrb
xchg
sti
sub
shrl
insl
pop
sub
push
jp
mov
popf
mov
int
fnsave
inc
dec
dec
rcrb
sbb
pop
enter
push
dec
mov
mov
xor
ret
jmp
js
nop
loop
sarl
dec
pop
pop
mov
lea
push
int
sub
sti
sbb
test
pop
fldenv
stc
push
loope
shll
push
cwtl
jl
dec
mov
stos
bound
xor
and
push
stc
adc
ja
jno
and
inc
movsl
pop
jg
push
mov
xchg
js
es
std
sbb
add
pop
lods
outsb
std
adc
and
xor
loop
repnz
cmpb
mov
mov
jb
add
adc
and
xor
loop
repnz
cmpb
mov
mov
popa
sahf
aas
divb
sahf
sub
cmp
mov
insb
clc
sub
std
pop
out
fidivrl
add
in
pop
cmp
sbb
push
fwait
test
sub
pop
mov
mov
outsl
add
xlat
nop
push
outsb
mov
ret
or
lahf
int
adc
jae
inc
repz
pop
and
push
shlb
mov
ficoms
imul
dec
cli
or
add
jo
mov
ss
inc
dec
mov
adc
lods
pop
inc
sti
and
add
lods
idivb
cmp
shrl
jmp
aad
and
mov
movsl
pop
xor
mov
mov
xchg
sahf
daa
aas
sub
xlat
cmc
add
fsubrl
xor
cmp
add
sub
push
pop
cwtl
pop
iret
mull
jno
or
xchg
pop
addr16
xor
das
out
sarl
int3
jno
xchg
add
scas
push
mov
cwtl
jbe
fwait
add
pop
add
pop
shll
inc
lods
mov
add
xchg
and
popf
fildl
cmp
aad
movsb
dec
jbe
shrl
scas
insb
cmp
adc
inc
dec
sub
jg
xor
stos
es
xor
movl
out
js
rclb
sbb
clc
dec
xchg
xor
loope
pop
push
fistpll
or
aam
mov
fidivrl
fldenv
data16
in
in
movsb
mov
push
and
fwait
fwait
mov
mov
xchg
mov
and
and
iret
dec
or
flds
pop
mov
fwait
adc
lods
lds
push
inc
test
fldenv
mov
js
add
push
add
sbb
lcall
fistpll
xchg
xchg
pop
xchg
jnp
inc
outsl
or
daa
iret
arpl
test
jmp
mov
push
pop
sbb
fsubrp
rolb
fldt
and
imul
test
xor
je
sti
jp
xor
fdivl
inc
iret
xor
ror
mov
sub
mov
mov
pop
outsb
mov
sbb
in
andl
int
cmc
or
jne
mov
cmp
fs
cmp
and
lcall
and
movsl
andl
mov
pop
shll
and
popa
mov
in
jg
xor
and
push
push
popf
stos
mov
scas
test
fwait
shrl
mov
outsb
test
or
dec
out
scas
sub
bound
stc
cmp
dec
lcall
subb
clc
fcmovu
add
enter
in
mov
xor
das
int3
pop
cs
loop
nop
out
xorb
test
xor
scas
cmp
rcr
lcall
std
mov
or
faddl
xor
cmp
fadds
fildl
std
imul
sbb
and
dec
and
js
mov
inc
test
js
adc
and
into
repz
inc
xchg
adc
jno
pusha
lcall
loopne
dec
cmpsb
int
es
push
js
push
jo
mov
push
ss
jecxz
adc
cli
push
lret
inc
inc
push
fcomi
loop
mov
mov
jge
xchg
push
out
sarb
xchg
push
xchg
divl
or
push
int3
fbstp
pop
test
xchg
test
int
out
and
inc
pop
hlt
lock
imul
add
out
hlt
ljmp
or
shl
repnz
or
xchg
sub
popf
inc
push
or
jmp
push
clc
je
lret
loopne
dec
cmp
pop
nop
xor
pop
subl
pop
mov
mov
sub
lods
xlat
shlb
push
repz
add
mov
dec
fistl
inc
inc
push
popf
mov
push
rcrb
mov
cwtl
pop
jne
aam
addb
sbb
test
sbbl
xchg
in
jmp
mov
sahf
mov
cmp
jbe
jo
inc
mov
stos
clc
jle
xor
xor
cmp
rclb
adc
sti
dec
dec
ficoml
xor
push
pushl
cmpsb
scas
mov
outsb
mov
cltd
in
frstor
inc
loope
add
dec
aas
xchg
gs
pop
dec
adc
fwait
nop
pop
mov
adc
sbb
icebp
dec
rcl
in
test
inc
jp
and
fstpl
cmpsl
jns
pop
push
lcall
scas
pushf
mov
cmpsl
adc
jecxz
out
mov
pop
push
loop
scas
loopne
repnz
stos
push
cmp
xchg
insl
js
cmp
inc
push
pushf
jbe
out
xchg
clc
xor
fstps
outsl
pop
cmp
lcall
mov
cmpb
pop
movsb
inc
scas
xor
popa
mov
or
adc
outsb
xor
cmp
xchg
jle
mov
jb
sub
inc
mov
idiv
xor
sub
mov
pop
and
mov
xchg
out
cmpl
inc
out
jbe
pop
cmp
lods
cld
fsubrl
pop
scas
and
hlt
scas
xor
lcall
movsl
cmp
repz
cmp
mov
mov
cmp
dec
mov
inc
outsl
sub
sarl
cli
test
cmp
test
mov
mov
mov
xor
mov
inc
out
inc
out
and
cmc
ret
or
push
ljmp
repz
mov
bound
push
in
mov
ljmp
or
push
rolb
push
es
and
mov
fstl
pop
mov
push
popa
pop
ss
xchg
movsb
mov
popf
pop
and
mov
daa
sbb
xor
stc
push
popf
jl
fs
negb
std
pop
and
in
jbe
cmp
bsf
cmp
jns
rep
or
lea
push
add
inc
scas
shll
pop
push
ja
into
push
jle
xchg
lcall
jmp
jmp
repz
icebp
or
push
jb
cs
xchg
push
xchg
dec
in
push
repz
int
popf
repnz
hlt
popa
in
pusha
add
xor
popf
rcrl
inc
enter
sub
mov
fcmovne
sbb
push
fwait
push
int3
in
aad
loope
in
cmp
push
ds
popa
fnsave
imul
mov
push
sahf
repz
jno
inc
push
push
loope
push
in
negl
cli
sbb
mov
fucomip
jmp
add
int3
js
mov
and
scas
xchg
or
movsb
lret
ja
push
xor
andb
mov
dec
inc
std
fcmovnu
test
inc
inc
cld
dec
nop
cmp
stos
lret
mov
inc
popf
and
scas
jle
jns
mov
enter
std
bound
movsl
lds
aaa
out
or
mov
notb
mov
xor
std
gs
cli
adc
insl
sub
mov
pop
lods
or
out
stc
push
movsl
lock
pushf
pusha
jecxz
sahf
aaa
pop
stos
in
inc
gs
inc
sub
movsb
daa
mov
adc
push
std
pop
inc
add
out
scas
sbb
sub
rorb
test
scas
and
test
dec
addr16
or
push
andl
xchg
push
adc
xor
or
push
mov
aam
ljmp
roll
in
cwtl
adc
cmp
in
ret
add
lea
pop
idiv
dec
ficomps
out
push
sbb
leave
stos
push
sub
sbb
pop
fs
mov
insb
add
push
jne
gs
push
loope
andl
xchg
scas
in
lods
pop
lods
mov
add
mov
ds
sbb
mov
xor
int3
mov
insb
aaa
sub
fdiv
call
pop
adc
push
fisubrs
rcr
leave
stc
pushf
loope
data16
cwtl
fcoml
repnz
jl
mov
push
dec
popa
push
lahf
and
push
sbb
ret
dec
rcrb
or
cli
enter
and
cmp
mov
jbe
leave
mov
lock
lods
fistps
in
in
fnsave
fnsave
push
loopne
lahf
imul
push
data16
and
arpl
rcr
les
jl
mov
fstl
aaa
mov
mov
mov
stos
or
dec
dec
mov
and
insb
je
clc
mov
cmp
test
jmp
lret
dec
fwait
decl
les
mov
mov
es
mov
xchg
out
mov
fisubrs
xlat
jbe
js
es
sub
loopne
mov
sbb
es
call
stos
xor
lods
jecxz
ds
sbbb
mov
in
loope
jl
or
test
and
cwtl
or
pop
xor
adc
jg
test
inc
enter
sbb
xchg
mov
push
mov
test
push
ret
dec
std
sbb
or
ja
and
pushf
faddl
sbb
cli
mov
lret
push
pop
push
inc
loope
ja
sti
popf
ret
xchg
movsl
repz
neg
es
fbstp
jg
gs
mov
add
cld
mov
stc
add
cmpsb
and
loope
nop
mov
insb
add
test
add
ret
mov
jecxz
adc
jge
popf
push
jne
shrb
mov
add
cmp
adc
mov
adc
fisubs
aaa
push
and
cmp
outsl
aam
in
test
inc
dec
prefetcht1
mov
push
insl
push
jo
xor
sbb
add
fs
cmp
stos
je
mov
mov
pushl
sbb
inc
sahf
shl
mov
leave
aaa
pop
adc
add
mov
push
jmp
ficoms
add
push
mov
or
push
jg
arpl
and
sub
jno
dec
ds
dec
inc
sbb
dec
fcos
and
jle
shlb
call
push
mov
push
pop
add
cli
icebp
xor
cmpsb
test
lds
addr16
mov
add
xchg
das
test
mov
pop
mov
cmpsb
cmp
xchg
add
jbe
or
jb
add
dec
cltd
cmp
inc
dec
xchg
cmp
daa
mov
lock
mov
adc
inc
sub
and
das
add
jg
clc
les
sarl
inc
pop
cld
xchg
mov
push
push
insb
sahf
cld
mov
inc
scas
cmpsb
mov
add
pop
jnp
sub
mov
push
inc
mov
lahf
movsb
mov
fcmovnb
fadds
enter
pusha
por
adc
jle
lcall
pop
lea
xchg
adc
dec
arpl
daa
ret
lock
test
xlat
jmp
fcoml
xchg
stos
adc
stos
into
or
aaa
bound
mov
inc
outsl
pop
imul
scas
xchg
fmul
popf
stos
imul
icebp
dec
xchg
lods
dec
and
jnp
mov
mov
hlt
fmul
push
pop
les
mov
push
ret
imul
hlt
pop
add
xor
stos
push
dec
movsl
push
cmpsl
mov
in
cmp
stc
jle
je
sub
data16
sub
das
or
lock
loop
xor
dec
cltd
sbb
push
cwtl
jecxz
sub
jg
fcomps
dec
sbb
dec
lock
dec
loopne
orb
sub
mov
rorb
mov
jecxz
jmp
mov
sbb
cld
shll
sahf
push
mov
xor
jecxz
sti
inc
inc
test
in
fs
imul
dec
fwait
push
sarb
idiv
jae
pusha
dec
hlt
fldt
sahf
cli
loope
push
clc
jmp
mov
adc
enter
rorl
adcl
push
es
mov
shlb
test
dec
push
pop
jnp
mov
mov
inc
mov
aaa
jp
cmpxchg
outsb
cwtl
in
insl
and
or
sub
pop
ja
pop
adc
mov
call
and
clc
loopne
add
jecxz
es
mov
xchg
shll
sbb
mov
fwait
js
jae
xlat
jecxz
mov
cmpl
in
push
repz
into
fwait
lret
out
loopne
cld
mov
loopne
lahf
jp
adc
xor
mov
jo
ja
ljmp
mov
mov
dec
outsl
fwait
scas
daa
jp
scas
sub
inc
addb
and
inc
sub
loope
faddl
dec
es
and
sbb
movsl
pop
and
fwait
imul
insb
mov
or
lods
sbb
sub
mov
jnp
cmp
xchg
push
dec
aas
es
das
dec
mov
clc
xchg
jbe
mov
inc
mov
and
leave
adc
iret
out
popa
or
fisubs
cli
scas
in
and
and
iret
add
mov
xchg
addr16
sub
or
test
pop
mov
push
out
mov
sti
test
daa
pop
mov
inc
rorb
push
sahf
jne
aad
sub
cmp
imul
gs
jge
jp
xor
lcall
negl
jecxz
xchg
mov
lea
mov
mov
stos
mov
pop
cltd
mov
jbe
push
mov
jae
mov
imul
sahf
call
ja
test
sbb
dec
inc
jo
and
jns
and
sub
xchg
push
aad
mov
mov
shlb
dec
push
jbe
bound
sub
push
sbb
sbb
imulb
stos
mov
sarb
arpl
jecxz
mov
stc
sbb
stos
mov
xchg
xor
mov
push
mov
add
jl
ss
cs
loope
jbe
mov
adc
in
pop
pop
lret
ret
adc
lcall
testl
jmp
or
cmpsl
call
fiadds
mov
flds
pop
lds
sub
jo
xlat
dec
out
iret
pushf
insl
dec
pop
dec
div
sub
in
push
pop
cmpl
das
fwait
mov
les
jnp
or
imul
xchg
in
cld
jmp
insl
inc
fwait
repz
nop
cmpsb
inc
push
cltd
es
sbb
pushl
sarb
andb
sub
or
mov
pop
outsb
insb
cwtl
nop
add
mov
ret
dec
lret
jg
cld
adc
cltd
scas
mov
pop
jae
xchg
pop
or
mov
push
jne
adc
lods
daa
sub
xchg
jge
xchg
push
outsb
rorl
pushf
mov
lea
cmp
cld
push
loope
jge
mov
shlb
popa
jp
xor
dec
fs
jne
xor
repnz
cmp
in
scas
repnz
push
xchg
mov
out
shlb
mov
and
xchg
adcb
mov
gs
aaa
rcrl
mov
jle
and
mov
mov
push
dec
xlat
cmpsl
fisttpll
cmp
add
lret
and
mov
xchg
mov
ficomps
cwtl
cmp
fcomps
dec
sub
movsb
xchg
ljmp
adc
in
negl
call
jnp
mov
mov
fcomps
lret
inc
or
xor
dec
xor
push
lret
fisubrs
fdivrs
lods
jae
inc
cmp
inc
inc
dec
test
jnp
add
cwtl
cld
fldl
push
add
insb
dec
fcomps
xor
aad
adc
dec
xchg
filds
icebp
out
test
iret
clc
cmp
imul
xchg
loopne
gs
add
shrl
stc
mov
shl
push
mov
fidivl
sub
movsb
dec
pop
pop
out
imul
ljmp
jg
movsl
sub
fsubrs
test
ljmp
pop
push
in
int3
lock
ja
aam
fildl
mov
and
in
jnp
pop
sti
xchg
inc
xchg
div
mov
icebp
pop
loop
adc
pop
inc
pop
rolb
mov
mov
out
sub
push
test
pushf
sub
dec
rcrl
add
fisubrl
jae
imul
xchg
cmp
loop
xchg
mov
in
dec
and
arpl
sbb
dec
fs
ljmp
or
popf
inc
lcall
orb
movnti
dec
in
add
pushf
div
add
dec
xchg
imul
or
xor
mov
and
pusha
fwait
adc
mov
stos
dec
adc
inc
movsl
ds
jp
mov
ljmp
aaa
xchg
jae
jg
xchg
fs
popa
loop
cwtl
aam
ret
sub
jl
xchg
xorb
js
ja
jecxz
inc
fcmovb
lret
int
jge
adc
in
rcrb
add
push
lock
or
dec
push
push
divb
mov
lea
jecxz
xchg
nop
mov
mov
cmp
pop
stos
push
cmc
dec
cmpsb
out
cltd
mov
mov
sar
cld
cmp
icebp
or
mov
jecxz
cs
repz
adc
fwait
push
pop
iret
test
in
cmpsl
testb
cmp
stos
mov
mov
mov
ret
aaa
inc
lret
mov
xor
nop
and
and
or
adc
push
loop
neg
jge
gs
outsl
loope
testl
out
aaa
shrl
and
xchg
push
dec
shr
stos
imul
jecxz
xchg
aaa
mov
jne
adc
in
out
cmp
add
and
shl
stos
push
mov
test
mov
data16
mov
dec
xor
test
in
jg
fmulp
pop
dec
xchg
xor
mov
jecxz
imul
cmp
ds
popf
pop
or
out
xchg
inc
mov
xlat
or
int3
cmp
push
mov
bound
jne
dec
pop
cs
enter
dec
or
pop
stos
cmp
xor
int3
push
ja
jbe
and
popf
jle
aas
js
xor
ret
inc
lock
in
pop
xor
scas
dec
lcall
pop
dec
xchg
mov
dec
inc
add
push
repz
cli
loop
mov
daa
mov
xor
sub
mov
sub
cwtl
mov
mov
jmp
jl
xlat
push
add
arpl
mov
xchg
mov
jmp
mov
insb
enter
jge
sub
jno
xchg
movsl
pop
cmp
or
enter
arpl
pop
pop
fistl
ljmp
sbb
inc
mov
sti
mov
push
push
sub
jo
add
push
push
adc
sub
mov
xchg
test
sbb
adc
jg
inc
shll
cwtl
and
pushf
jae
pop
or
cli
mov
sub
mov
pop
pop
rcrl
pop
push
cs
dec
adcl
addr16
rorb
or
sbb
insl
nop
and
aaa
stc
dec
into
jnp
sahf
dec
pushf
push
fadds
fdivl
mov
push
roll
jge
push
outsb
fidivl
add
adcb
jmp
pop
jl
inc
xor
gs
sbb
cmovno
icebp
jmp
ss
mov
mov
nop
push
mov
shrb
stc
lcall
mov
add
cmp
sbb
or
cwtl
movsl
iret
add
push
lods
and
mov
test
inc
into
xor
and
test
test
icebp
jmp
xor
mov
jmp
add
push
repnz
incb
or
ss
cltd
je
sbb
push
mov
test
iret
push
lds
lods
nop
mov
sbb
addb
sbb
sbb
jbe
data16
aam
cli
inc
andb
add
or
jl
mov
jns
nop
mov
cmp
lret
je
fs
inc
fsubs
rcrb
xor
mov
dec
in
cmp
mov
xor
push
xchg
push
aas
inc
out
lret
jae
aas
sbb
es
sahf
ss
jbe
insb
mov
in
push
xchg
loop
idivl
shl
movsl
enter
jae
enter
lea
xchg
scas
insb
lea
and
lret
add
push
jb
aas
jno
mov
mov
iret
mov
xchg
xlat
shll
test
dec
mov
jo
xor
push
add
pop
jl
cmp
mov
loope
mov
push
scas
cmovnp
xor
and
in
xchg
add
add
jecxz
add
lret
pusha
dec
fwait
inc
das
scas
lea
sar
cwtl
pop
adc
push
int3
pop
jge
pop
in
pusha
jg
stos
sub
lds
pop
push
sbb
adc
mov
std
adc
and
xor
loop
repnz
cmpb
mov
mov
jb
add
adc
and
xor
loop
repnz
cmpb
mov
mov
jb
add
adc
and
xor
loop
rep
cmpb
mov
mov
jb
add
adc
and
xor
loop
test
or
insl
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
les
hlt
push
in
mov
negl
xchg
adc
inc
mov
xchg
out
mov
and
ret
les
les
in
xchg
data16
inc
movsb
push
pop
cmpsb
inc
mov
xchg
divb
and
int
fnsave
in
push
cld
push
lea
jbe
inc
mov
push
cwtl
dec
ljmp
dec
xchg
inc
mov
les
bound
mov
inc
pop
mov
mov
mov
pusha
loope
cs
sub
aam
dec
jbe
pop
hlt
jmp
inc
dec
insl
pop
popf
sbb
xchg
test
push
jge
test
loopne
icebp
es
xor
xlat
push
mov
sbbl
sahf
cmp
xlat
add
aam
adc
outsl
add
scas
movsb
push
pusha
xchg
sub
je
cmp
mov
cmpsb
je
int
xor
cmp
lods
rclb
mov
mov
movsl
mov
faddl
mov
lods
pcmpeqw
shrl
andb
sbb
aam
and
adc
les
hlt
push
repz
test
jbe
inc
mov
mov
xchg
or
sbb
xor
cmp
in
inc
adcb
jmp
es
inc
filds
call
pusha
push
inc
inc
mov
les
push
out
loopne
ljmp
jecxz
fidivl
rclb
cli
jno
ja
inc
mov
mov
xchg
jb
in
or
push
cmpsb
inc
mov
xchg
out
divb
and
aam
les
hlt
push
in
xchg
data16
inc
movsb
push
push
cmpsb
inc
mov
xchg
out
divb
and
aam
pop
and
mov
cld
sub
aaa
jb
fstl
test
mov
cmp
mov
mov
push
cmp
push
notl
jl
mov
sub
pop
lcall
xor
sub
mov
xlat
jmp
mov
mov
mov
dec
shlb
adc
cmpsl
clc
sbb
pop
push
pop
iret
dec
push
popf
xlat
mov
cmp
inc
rcrl
gs
mov
lahf
mov
cs
testb
xor
push
jge
repnz
jns
pop
mov
xor
xchg
push
cmpsb
fcompl
jp
into
addb
repz
lods
inc
aam
scas
jo
repnz
movsb
push
rorb
mov
and
in
jnp
cld
mov
push
adc
cs
xchg
adc
lahf
jg
out
push
popa
mov
push
ljmp
jle
enter
sbb
cmp
lock
mov
mov
psrlq
lock
imul
dec
jge
std
mov
divb
hlt
outsl
jl
push
sti
jmp
icebp
mov
mov
ffreep
lcall
xchg
push
stos
inc
fmulp
add
pop
mov
xor
enter
leave
sbb
mov
gs
dec
jmp
mov
sti
sbb
test
je
sub
dec
in
push
shll
shlb
dec
mov
sbb
push
stos
lret
push
ds
lahf
xchg
sub
lahf
repz
in
loop
adc
aam
lea
pop
jno
in
sub
pushf
popl
imul
testb
mov
pusha
xor
ss
sbb
pop
push
push
repnz
aad
pop
xor
sub
aad
ja
xor
in
jbe
xchg
mov
xor
ss
or
sub
and
xchg
and
dec
push
add
sub
pusha
xchg
fst
cmpsl
es
outsl
add
setns
cmp
mov
cs
test
sahf
xchg
fsubrl
cltd
aam
enter
ljmp
movl
fnsave
mov
scas
or
aaa
int3
or
orl
into
cltd
stos
mov
xchg
imul
adc
jae
push
push
xchg
jge
and
pop
stos
jns
negl
adc
cmp
dec
cwtl
inc
dec
fdivl
add
sub
inc
aaa
xor
leave
xor
and
mov
out
lea
je
jmp
loop
or
in
jb
mov
cmp
jns
adc
out
int
mov
hlt
mov
loopne
mov
push
lret
adc
dec
jo
cld
js
sub
lret
movsb
dec
push
lcall
outsb
xchg
mov
lods
push
cltd
aas
mov
nop
push
push
pop
filds
jg
sbb
mov
cs
mov
pop
imul
adc
cwtl
aas
mov
and
cmpsl
sbb
jno
pop
jmp
adc
test
aam
mov
imul
loopne
sub
cmpsb
outsl
outsb
nop
andl
mov
addl
mov
and
dec
enter
or
mov
enter
jl
out
and
xlat
mov
jl
xor
lods
mov
lahf
loopne
rolb
xchg
pop
sbbl
adc
roll
jne
pop
rolb
fnstenv
xchg
jecxz
loope
adc
inc
test
jge
inc
add
push
aas
jb
inc
cmpsl
cltd
mov
enter
mov
test
mov
movsb
inc
xor
fisttpl
sarb
mov
in
inc
cmp
push
outsl
testl
mov
cmp
hlt
into
cltd
inc
cld
fstpt
pop
lahf
push
scas
arpl
lods
adc
mov
cmp
xor
fucomi
push
imull
sbb
or
les
scas
lock
mov
adc
push
ret
inc
lret
and
clc
jns
test
fists
sbb
and
sub
fisttps
adc
mov
pop
pop
adc
push
dec
sbb
or
mov
mov
inc
mov
loope
pop
lret
test
adc
jne
mov
jnp
cmpsl
xor
xchg
adc
pop
sahf
xchg
imul
mov
dec
xchg
xchg
cltd
in
jbe
rclb
push
adc
shll
sbb
cmp
and
rcrb
push
xchg
dec
arpl
push
sbb
xor
lock
mov
and
mov
mov
imul
arpl
xchg
out
pop
xlat
jb
nop
addr16
pop
rcll
or
lea
pop
xchg
test
or
xchg
int3
mov
push
nop
or
inc
adc
lds
dec
inc
jl
pushaw
je
hlt
sar
inc
jp
or
movsb
stc
loopne
std
jbe
xchg
popa
add
lods
jp
test
xor
sahf
dec
push
clc
lods
pusha
test
xor
pinsrw
push
aam
shll
xchg
sub
iret
jmp
xor
inc
pop
jmp
pop
cltd
push
jns
and
in
jmp
cld
pop
xchg
outsl
mov
out
xchg
pop
adc
inc
mov
pusha
push
mov
mov
imull
enter
aam
or
shll
sub
xor
pop
movsl
xor
add
xchg
push
aas
lret
push
rcl
pop
xchg
jg
jmp
out
pop
rorb
dec
lds
mov
test
jbe
lret
stc
add
adc
inc
int
push
cmc
mov
rol
lods
icebp
pop
pop
mov
mov
pop
stc
xchg
sub
push
or
inc
mov
test
cmp
loop
outsb
jg
insl
adc
loopne
xlat
lock
pop
inc
jno
xchg
push
push
pop
adc
nop
loopne
sbb
jle
fisubrl
xchg
jae
dec
mov
aas
sbb
cmpsl
movsb
dec
pushf
pop
int
lahf
mov
lock
push
mov
adc
lcall
xchg
xlat
loop
push
mov
es
in
inc
push
pop
fcoms
lock
ljmp
outsb
mov
adc
aas
neg
mov
jle
cmp
sub
xchg
add
lds
fdivrs
and
jns
push
pop
dec
in
cmpsl
cmp
lea
sbb
and
icebp
lret
and
mov
sub
into
aas
xor
push
push
out
mov
js
arpl
lss
arpl
or
inc
dec
sub
lea
clc
lcall
fsubr
loopne
lea
jbe
out
fwait
mov
setns
or
dec
es
filds
cwtl
ror
jb
outsl
pop
mov
and
add
xor
test
pop
add
xor
shlb
arpl
adc
mov
cmp
or
in
dec
push
aad
cmp
sub
cltd
cmc
xchg
mov
fadd
sub
mov
pop
shrl
jne
mov
stos
xchg
gs
ss
lock
orb
aam
jbe
jns
frstor
or
clc
sbb
pop
xchg
scas
mov
jno
sbb
enter
mov
jne
pop
pop
ja
clc
jbe
cmp
pop
out
mov
roll
pop
std
inc
push
lock
sub
subb
ror
aam
dec
dec
adc
inc
mov
adc
mov
pop
pop
mov
aaa
inc
sbb
insl
inc
cmp
push
addl
sbb
xlat
or
lea
xchg
mov
sub
addl
sub
jle
pop
inc
mov
dec
or
movsb
mov
fwait
arpl
inc
cmp
test
movsb
sub
rolb
jle
jmp
repnz
cmp
adc
and
sbb
add
mov
push
lods
sub
inc
movsb
lock
hlt
or
outsl
loopne
xor
mov
add
mov
jo
cli
jmp
adc
pop
sub
scas
lret
js
inc
add
aaa
add
lea
mov
and
inc
shlb
push
sub
sbb
loopne
xor
dec
clc
arpl
add
inc
dec
sbbl
sub
in
ret
sub
les
push
dec
xor
sub
incb
popf
das
pop
inc
or
dec
lcall
fmull
aas
out
into
stos
push
popa
push
aam
push
int3
inc
push
lea
gs
xor
bound
stos
jns
push
and
mov
sbb
adcl
mov
or
je
push
stos
mov
movsl
xchg
in
adc
fdiv
inc
in
push
jns
add
mov
ds
push
inc
cmpsl
fstpt
lcall
mov
add
fstpl
jo,pn
rorl
or
sub
movsb
dec
dec
mov
push
jno
ds
pop
jne
stc
add
nop
jecxz
sub
pop
leave
fwait
dec
cmp
and
fdivs
inc
cmc
mov
test
push
dec
cmpsb
popf
loopne
push
pop
jno
add
lcall
mov
jle
jno
sub
incb
clc
fcompl
outsb
test
mov
cld
pusha
mov
js
bound
in
and
xor
inc
mov
shrb
and
cltd
mov
and
pop
loope
ret
add
sahf
inc
inc
jp
lcall
inc
push
cmp
lea
mov
xor
popa
cmp
jbe
test
push
adc
jecxz
lret
xchg
xchg
popa
addr16
in
mov
sbb
push
mov
arpl
notl
mov
insb
and
mov
je
xchg
dec
dec
dec
jns
lret
rorb
orl
jge
jmp
scas
test
iret
adc
stos
and
jae
xorl
repnz
rcrb
pop
push
subb
jg
or
ja
ss
jg
and
pop
mov
int3
xor
sbb
das
sub
hlt
add
pushw
inc
std
pop
inc
in
arpl
bound
mull
mov
dec
mov
fbstp
sti
stc
adc
je
sti
adc
setg
add
popf
sahf
data16
mov
xchg
or
das
and
cmp
jmp
pop
enter
jno
loope
out
in
adc
xchg
xor
int3
inc
cwtl
test
add
dec
mov
mov
ljmp
sbb
xchg
addr16
imul
aam
mov
stos
add
push
movsl
out
fdiv
pop
sti
xor
jmp
mov
loopne
mov
cmp
lea
mov
int
mov
rcr
test
ljmp
outsb
insb
adc
dec
aad
and
mov
pop
es
dec
fisttps
mov
lods
and
cwtl
sub
inc
dec
sbb
or
testb
fldenv
es
int
xchg
enter
mov
andl
inc
inc
or
cltd
cmp
adc
push
aaa
pushl
jno
sub
jb
mov
sub
call
repnz
inc
sbb
pop
adc
pop
in
dec
aas
cmp
mov
push
pop
fistl
adc
sarl
sub
adcb
mov
test
adc
sub
clc
inc
inc
ffree
notb
lods
push
into
mov
jge
xorb
subl
and
movsl
dec
xchg
cmc
enter
push
xor
insb
pop
or
mov
popl
ss
cmpsl
xchg
imul
pop
pop
es
outsb
xchg
fs
inc
fldt
enter
cmp
outsb
pop
sbb
pop
test
mov
aas
int3
fmull
sti
fsubrs
fwait
cmp
shlb
test
inc
push
imul
pop
push
dec
or
gs
dec
inc
pop
jns
fdivl
ljmp
cmp
hlt
cltd
in
dec
xchg
aam
in
and
in
adc
fmulp
enter
push
push
in
mov
dec
fs
adc
push
jge
fldt
pop
or
sbb
popf
push
sub
inc
test
pusha
mov
not
fidivs
push
jl
inc
out
inc
stc
movb
jo
and
mov
test
fcmove
jle
data16
mov
sbb
repnz
in
dec
xchg
fwait
aad
sub
xchg
aas
push
jb
aas
inc
mov
in
mov
push
cmp
xchg
mov
push
stc
lds
and
and
outsb
jnp
sbb
cmp
xchg
adc
mov
mov
hlt
inc
push
dec
or
lahf
or
add
dec
add
mov
lea
fcomps
xchg
aaa
push
add
or
adc
add
xor
push
call
mov
into
sbb
mov
or
jmp
pop
and
orl
mov
lahf
notl
push
lahf
and
dec
push
sbb
jne
sti
xor
push
or
addr16
sbb
mov
dec
inc
pmaddwd
ret
repnz
out
addr16
aaa
pop
orl
js
lea
jno
adc
push
or
ret
cli
scas
pop
fimull
jne
movsb
adc
adc
mov
push
lahf
sub
repz
jg
aaa
xor
mov
dec
pop
dec
sub
push
xchg
inc
xor
gs
push
jne
and
mov
xchg
movsb
inc
int3
adc
aaa
pop
fbstp
rcll
pop
arpl
xor
or
fsubl
aas
sbb
mov
pop
xchg
test
sub
pop
call
dec
dec
cwtl
stos
repz
mov
lock
xor
insb
push
adc
and
mov
outsl
sub
mov
lret
pop
pop
enter
cltd
xorb
inc
adc
pop
mov
push
repz
loopne
sub
mov
mov
arpl
add
aad
fmul
cmp
mov
or
popf
cwtl
lcall
insl
dec
in
jmp
lock
jns
loope
push
addr16
lock
sti
mov
cmp
int3
inc
add
mov
inc
jp
xchg
cmp
mov
aam
mov
dec
sbb
lods
inc
mov
add
mov
daa
pop
sub
cmp
testl
aad
cmp
jg
clc
mov
inc
dec
push
pop
mov
add
pop
fidivs
out
sahf
dec
rcrb
sbbb
push
inc
lret
out
inc
push
inc
rcrb
or
js
ret
es
fwait
imul
mov
and
cmp
repz
daa
cmpsb
push
xchg
mov
inc
in
mov
push
shlb
pop
mov
add
cld
jg
cmp
mov
sbb
flds
flds
add
ss
out
enter
pop
xchg
or
orb
lea
mov
or
and
pop
pop
repnz
xor
push
cli
mov
jmp
mov
fstpl
adc
mov
gs
xor
mov
mov
int
add
dec
int
icebp
je
daa
lock
out
rol
fiaddl
pop
inc
popa
fwait
addr16
ror
scas
inc
mov
cmp
fdivl
fs
enter
mov
push
dec
pop
leave
int3
push
or
xchg
dec
xchg
mov
pop
push
ss
xchg
sahf
iret
lea
out
pop
pop
cmp
mov
fiaddl
mov
pop
dec
lods
dec
sub
sbb
pop
xor
pop
popa
inc
cmp
mov
mov
bsf
mov
loope
xchg
jb
sbb
cmp
lock
call
push
xor
push
or
and
andl
mov
xchg
and
push
int3
xchg
ret
cmp
gs
shll
pop
add
mov
sbb
jp
mov
pop
pop
fs
xchg
in
or
pop
test
or
gs
movsl
jge
jne
push
shlb
fs
dec
and
xchg
add
push
dec
jns
xor
fiadds
and
je
push
pop
test
test
lret
push
jbe
sbb
outsb
ss
xchg
iret
ret
in
pop
add
dec
sbb
mov
xchg
mov
cld
rclb
lods
and
xchg
clc
inc
xor
mov
push
fs
in
or
outsb
out
cmpsl
dec
in
clc
in
mov
fwait
ret
mov
xchg
ja
cld
pop
lret
add
in
sub
xchg
xor
cs
jg
xor
adc
fldt
dec
sbb
jo
ret
insb
xor
mov
and
jecxz
and
outsl
inc
loope
pop
out
out
mov
mov
mov
outsl
pop
add
push
mov
xor
sbb
inc
popf
call
cmpsb
mov
inc
or
sub
xor
sti
ret
shl
jp
mov
test
enter
xor
es
jae
in
movsb
and
clc
inc
mov
dec
sub
mov
dec
and
jne
lcall
bnd
es
addr16
lea
loop
xor
jge
pop
cmp
or
sub
add
loope
enter
dec
add
ss
inc
pop
xor
arpl
lea
sti
mov
dec
test
fnsave
pop
mov
push
sbb
movsb
pushf
push
mov
insb
sbb
bound
test
xor
mov
leave
fadd
sub
fidivs
aas
cmpsb
call
insl
ret
inc
and
pop
xor
sahf
mov
sbb
jns
aad
mov
rcll
pop
sub
lcall
test
subb
pop
scas
cmc
add
nop
pop
sahf
xor
addr16
and
out
or
lcall
adc
aas
jecxz
push
enter
xchg
daa
mov
lret
and
add
cwtl
hlt
into
pop
fbld
test
lahf
movsl
sbbb
pop
js
jl
popf
pop
int
sbb
pop
jnp
xchg
cmp
mov
ds
jbe
cmp
sbb
inc
insl
stc
pusha
cmpsb
test
outsl
sbb
mov
pop
mov
lds
jle
dec
imul
das
fdivrs
mov
repnz
or
mov
int3
inc
sbb
sbb
mov
mov
add
rcrl
inc
mov
jns
outsl
push
jo
addr16
cli
mov
fcomps
aaa
mov
xor
aaa
and
dec
xchg
cmp
repnz
inc
jns
xchg
and
aam
shl
add
fisttpll
test
mov
iret
out
imul
call
mov
in
mov
jnp
cmpsb
push
mov
push
pop
fisttps
cmp
xchg
cmp
xchg
in
push
sbb
inc
movsl
or
dec
xor
push
push
dec
int
gs
sub
repnz
sub
dec
jb
out
adc
sti
jns
lret
adc
das
and
out
jg
pop
inc
xor
in
cmp
or
mov
aam
or
sbb
lds
or
dec
rolb
mov
pop
ljmp
fnstcw
xor
sub
rolb
call
imul
arpl
jne
sbb
cltd
mov
lds
mov
mov
add
loope
xor
mov
xor
fmuls
nop
pop
js
movsl
aaa
vxorps
cmp
stc
test
ds
cmpsl
cwtl
movsb
adc
lret
pusha
insl
mov
int3
aad
and
fs
inc
push
cmpsl
out
xchg
int
aaa
pop
hlt
mov
xlat
js
ret
cs
sub
sbb
loopne
addl
in
test
or
and
pop
icebp
in
or
mov
jge
xchg
xchg
xor
outsl
cli
leave
leave
test
or
mov
add
push
and
orl
test
arpl
imul
mov
jns
loop
out
xor
push
iret
mov
outsl
mov
arpl
jbe
dec
test
pop
pop
mov
push
aam
lcall
cwtl
add
sbb
rcl
mov
lret
pusha
mov
and
nop
lock
out
out
sbb
pop
adc
les
out
inc
mov
push
out
ret
mov
mov
mov
xchg
in
or
xchg
test
dec
cli
inc
outsb
out
mov
mov
dec
jb
push
les
pop
iret
in
add
cmp
and
push
cwtl
out
sub
push
in
aam
jmp
dec
mov
jae
adc
pop
scas
pop
inc
lods
xchg
sbb
mov
lahf
popa
cmp
sti
jns
mov
mov
mov
jl
out
push
fdivs
in
pop
xor
pushf
adc
jecxz
in
xchg
data16
inc
movsb
push
push
cmpsb
inc
mov
xchg
out
divb
and
aam
les
hlt
push
in
xchg
data16
inc
movsb
push
push
cmpsb
inc
mov
xchg
out
divb
and
aam
les
hlt
push
in
xchg
data16
inc
movsb
push
push
cmpsb
inc
mov
xchg
out
divb
adc
ss
adc
and
stos
pop
mov
loope
outsb
mov
lret
cmp
sub
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
incb
jb
into
adc
or
sahf
shlb
repnz
loop
xchg
aas
subb
push
mov
incb
push
fisubs
adc
and
sarb
outsb
xchg
pop
loop
rcrb
cs
mov
out
loopne
mov
scas
sub
and
lcall
jb
jnp
jns
mov
sahf
jb
or
call
std
icebp
xchg
lods
add
sbbb
cmpsb
lret
mov
inc
cmp
andb
push
scas
add
outsb
mov
ja
push
pop
insl
fidivs
cmpsb
pop
pop
lods
out
pop
cs
or
or
repz
pusha
cmp
dec
test
outsl
out
loop
add
adc
sahf
ret
sub
xchg
lret
mov
int
and
add
jbe
sbb
insl
cs
imul
push
and
ret
out
xor
test
jnp
mov
cmpb
jbe
out
lods
cmpsl
jae
pushf
in
icebp
jmp
int
pop
pop
loope
push
sub
mov
das
sarl
push
mov
out
jb
into
idivb
test
test
dec
fidivrl
mov
sbbb
dec
cmp
xor
jge
insb
fiaddl
and
rorb
xchg
ja
or
in
imul
xchg
daa
addb
add
leave
ja
mov
nop
sbb
cmp
mov
ds
xor
xor
ret
pop
loop
xchg
subb
push
mov
out
jb
into
adc
and
repnz
loop
xchg
subb
push
mov
mov
mov
sub
mov
sub
cltd
minps
imul
xchg
and
aam
lcall
and
sub
xor
scas
ja
sub
lret
add
fisttpl
or
divb
inc
jl
shrb
xor
cmpsl
dec
ret
rorl
icebp
push
into
pop
sahf
out
stos
inc
arpl
movsb
in
mov
popa
bound
push
sti
inc
pop
pusha
pop
outsb
pushf
sub
add
mov
mov
idiv
lahf
xchg
movsl
repz
mov
xor
fwait
adcb
imull
rorb
jb
push
jns
jg
dec
adc
mov
mov
inc
lret
lret
lahf
das
add
shll
out
pop
lods
enter
add
hlt
cwtl
cmp
cmp
mov
pop
mov
mov
fists
aaa
jg
das
sti
aaa
scas
push
call
std
sub
lret
cmp
cmp
and
and
inc
push
out
add
mov
int3
fucomip
push
addr16
imul
out
inc
in
mov
outsl
int
sbb
jp
xor
movsl
scas
sar
fdivrp
mov
in
dec
cmp
data16
cltd
push
sub
mov
mov
rolb
fimull
xchg
xchg
movsb
sub
cmc
sbb
test
cmp
mov
jle
cmc
pop
cmovge
sbb
mov
cld
insb
sbb
stc
sub
mov
into
in
sbb
dec
dec
test
add
or
pushf
jecxz
adc
pop
adc
push
mov
mov
lret
fdivl
cmp
repz
cli
sub
mov
cmp
push
and
mov
cmpsb
dec
pop
dec
lods
movsl
inc
xor
mov
dec
mov
inc
xor
jp
adc
sub
les
roll
movsb
push
aam
cmp
lret
adc
inc
cli
test
cli
outsb
subl
iret
clc
push
test
push
aam
or
lods
mov
mov
bound
sub
scas
inc
loopne
scas
scas
lock
inc
xor
jne
push
fdivs
cltd
push
mov
imul
push
ficoml
imul
add
lea
mov
lds
add
movsl
fldcw
push
in
pop
push
mov
push
and
lods
pop
mov
cmp
jae
cwtl
xor
sub
cwtl
repz
in
adc
je
xor
push
into
mov
nop
xchg
jns
rorb
lods
decb
into
fsubrl
xchg
xchg
addb
jbe
mov
scas
mov
inc
fidivrl
mov
and
add
cmpsl
insb
cmp
out
adc
popf
sub
and
hlt
mov
cmp
shlb
mov
dec
sbb
leave
les
push
lret
insb
subl
adc
out
xchg
inc
cmp
add
mov
xchg
jge
aad
cs
decl
sti
adc
fstpl
stc
mov
cmp
cmpsl
dec
pop
jp
inc
fidivs
in
xor
push
ja
loop
xor
addr16
mov
sub
sbb
je
fisttpl
movsl
fstl
mov
push
cs
aas
push
out
les
aas
mov
inc
inc
pop
jbe
pop
addb
pop
je
loopne
mov
daa
je
dec
aaa
shr
sub
aad
xchg
cmp
pop
or
inc
ljmp
mov
pop
inc
aad
push
xchg
sub
or
cmp
dec
out
add
fimull
add
cwtl
sbb
insb
pusha
leave
out
cmp
push
stos
icebp
add
mov
and
out
push
push
mov
cli
xchg
sub
cmc
mov
imul
jns
adc
jbe
sbb
pop
aaa
outsl
mov
iret
nop
mov
cli
dec
pop
push
mov
cmp
sbb
out
insl
pusha
mov
lea
mov
mov
push
daa
fsubl
xchg
xchg
push
xor
jnp
xchg
push
ret
adc
pop
into
sub
mov
imul
cli
mov
mov
mov
sahf
mov
scas
jl
jge
test
sti
cmp
jg
aam
lock
test
jae
and
and
adcb
sub
in
loope
pushf
rorb
lods
and
mov
das
jne
mov
mov
outsl
xchg
daa
sub
or
in
imul
gs
inc
sti
scas
pop
and
test
in
mov
stos
loopne
xchg
in
xchg
dec
clc
mov
cmp
cld
pushf
lods
jns
data16
ljmp
clc
inc
outsl
xlat
mov
push
inc
std
jecxz
lods
imul
or
pop
test
fadd
inc
test
sbb
push
or
imul
xchg
ficompl
sub
lret
popa
push
or
xchg
mov
clc
sbb
cltd
mov
lret
lods
faddp
or
es
out
fs
sahf
out
jl
cmp
repnz
enter
inc
pop
insl
push
lcall
repz
std
insb
mov
scas
not
jmp
sub
rcrl
jb
jg
negb
test
mov
lret
test
lds
int3
inc
cld
aad
mov
addr16
addb
js
loope
inc
cs
insl
jae
inc
loop
push
out
data16
out
lahf
xchg
xchg
sub
aam
xchg
sbb
push
cmp
push
icebp
mov
jmp
xchg
nop
addl
mov
in
add
mov
xor
fsubrs
cltd
aaa
aaa
daa
xor
pop
lret
icebp
lods
call
push
cs
in
dec
leave
xchg
sti
push
inc
ja
pop
add
mov
pop
cmp
xor
cmp
adc
lret
mov
sub
cmp
inc
push
cwtl
push
dec
lods
add
cmp
fildll
mov
into
cmp
arpl
out
in
and
jno
leave
das
decb
out
xor
pop
mov
test
inc
fnstsw
mov
push
sbb
cmc
mov
mov
cmp
sti
ss
in
jmp
adc
pusha
sbb
jle
push
clc
testb
je
xchg
cmpsb
add
stc
xor
into
push
sbb
or
in
adc
pushf
iret
cmpsb
pushf
in
lods
xorb
lea
jecxz
xchg
mov
add
cmp
jb
popa
sbbl
dec
lods
xchg
mov
leave
daa
jae
aas
outsb
jge
pop
xlat
lret
aaa
pusha
in
adc
test
push
cmp
mov
mov
lcall
subb
sub
xor
aad
xchg
sbb
jecxz
arpl
icebp
lea
sti
push
cmp
jb
inc
cmp
stos
adc
xchg
xchg
pusha
stos
inc
adc
mov
or
jmp
sub
bound
add
or
pop
or
packuswb
bound
xchg
push
mov
movsl
or
iret
xchg
pop
mov
cmpsl
xchg
lds
aad
in
mov
lret
sub
loop
fistpl
bound
gs
ret
fs
jp
arpl
pop
dec
xor
jb
outsb
rcrl
insb
aas
adc
bound
add
jb
jp
cmove
xor
pop
lret
sub
fucom
cld
cmpsb
out
pushf
jge
ficomps
or
rol
sti
movsl
mov
cs
in
fs
in
mov
xlat
sub
pop
test
inc
and
mov
xchg
mov
lods
cmpsl
push
imulb
aas
fcmovu
cld
sub
lret
icebp
jmp
dec
push
push
mov
movsb
jns
dec
ret
mov
cmp
inc
jg
lock
stos
jnp
jecxz
clc
psubd
aaa
add
xor
sub
and
pop
ljmp
and
mov
bound
sub
cmpsb
mov
loopne
xchg
mov
ret
inc
pop
in
xchg
or
sub
clc
fnsave
lahf
gs
cmp
js
outsl
jp
xor
or
push
xchg
loope
pop
data16
jnp
cmp
or
ss
sahf
frstor
jmp
mov
in
loopne
pop
add
outsb
xchg
mov
or
cwtl
jle
psubsw
into
pop
test
ljmp
ror
in
dec
pop
xor
xor
psubusb
test
fidivrs
mov
out
pop
orb
leave
pop
adc
lock
and
or
mov
lock
je
push
mov
out
sub
push
xor
jle
xchg
xor
or
mov
pop
out
dec
testb
inc
dec
shll
rclb
ss
inc
jns
cmpsb
jp
pop
das
dec
fnstcw
lods
outsb
cmp
pop
and
dec
aam
add
add
jo
adc
aad
in
inc
push
test
fstp
pop
pop
or
ss
jle
test
push
pop
cs
lret
js
mov
push
mov
xchg
popa
add
sub
je
testl
mov
nop
mov
push
xlat
push
xchg
stc
xchg
mov
pop
jb
iret
in
lahf
ret
or
rcll
fmul
adcb
fs
mov
repnz
loopne
lret
sbb
cmc
ret
jae
jno
sbb
or
push
mov
push
insl
lret
lea
xchg
icebp
or
mov
outsl
inc
pop
or
pop
add
or
ret
lods
ss
sub
xchg
dec
fs
in
adc
in
sub
jnp
or
sub
in
pop
out
cli
cmp
aas
pushf
js
icebp
popa
or
out
cmp
das
pushf
jb
sbb
dec
fcomps
jl
movsb
hlt
jle
lods
leave
push
jo
stos
scas
add
outsb
in
push
or
arpl
mov
add
mov
pop
push
push
push
xchg
xchg
dec
test
inc
push
cmpsl
shll
mov
test
sbb
jg
cmp
fucompp
ret
adc
push
mov
push
in
jmp
repnz
pop
stc
test
cmp
push
add
cmc
out
mov
clc
repnz
ja
dec
mov
pop
xlat
mov
xlat
cli
rorb
cmp
lods
mov
push
out
insl
cmp
sub
inc
jecxz
inc
ret
int
sbb
std
pop
add
in
push
pop
mov
imul
push
cmp
or
mov
adc
xor
sarb
pop
xchg
add
mov
in
stos
fs
inc
mov
mov
jbe
nop
call
mov
or
cltd
xor
mov
push
jl
inc
in
aas
adc
out
push
shll
pop
lcall
in
clc
out
sub
pop
xorb
push
cmpsl
lods
insl
xor
xchg
inc
into
dec
mov
out
out
xor
inc
jmp
jmp
xchg
dec
cli
or
jmp
xchg
repz
dec
mov
or
rcrl
mov
jnp
cwtl
adc
inc
sub
fstp
push
push
enter
in
mov
out
sbb
imul
stos
mov
fcmovnbe
mov
add
or
mov
add
or
jge
jge
cmp
bound
push
cmpb
not
or
in
adc
imul
lods
rcll
daa
pop
hlt
xor
jbe
mov
bound
jg
enter
jp
add
xor
fsub
push
into
mov
sbb
dec
xor
adc
push
xchg
sti
in
push
inc
add
inc
mov
push
sub
mov
int3
inc
mov
jl
xchg
mov
jnp
int3
push
xor
ret
ja
in
test
out
cmp
and
or
mull
fs
inc
es
nop
lods
sti
mov
test
pop
fnsave
js
mov
xchg
dec
ss
popa
adc
outsb
sbb
stos
sub
mov
movsl
sub
mov
loopne
fsubrp
jbe
data16
push
fcompl
or
outsb
in
inc
mov
sbb
dec
decl
insl
lods
mov
push
push
mov
xor
lock
mov
es
data16
insl
pop
lods
sub
push
test
push
popa
lea
pop
dec
mov
dec
xlat
mov
ror
nop
sarl
mov
mov
les
bound
hlt
cmpsb
mov
and
mov
add
cmpsl
jo
xchg
adc
nop
mov
paddw
xchg
cltd
xor
push
lods
frstor
pop
sbb
add
xor
cmpsl
xchg
mov
pusha
test
mov
enter
gs
imul
add
iret
out
jecxz
push
dec
dec
orl
popf
and
jge
sbb
lret
test
ud1
xor
mov
insl
mov
aaa
mov
sbb
push
sbb
xchg
popa
aad
cmp
mov
jge
and
add
int
sbb
out
movsl
icebp
pmuludq
movlps
xor
xchg
test
ffreep
iret
xor
pop
decb
gs
cs
push
sub
mov
out
rcll
jg
addr16
sub
fsubl
dec
xchg
jp
lret
sahf
or
jmp
and
sbb
sbb
push
std
enter
nop
or
jmp
cmp
cmovns
lds
jle
dec
cs
or
or
ja
or
cmp
lret
icebp
push
movsl
ret
or
or
xchg
stos
jmp
out
imul
decl
and
repnz
cmp
and
inc
orl
popf
repz
inc
lods
mov
loopne
call
mov
adc
in
or
fcompl
stc
pop
dec
pop
add
sub
mov
adc
xchg
sub
xchg
fwait
clc
lock
ds
push
sti
mov
pop
call
jmp
ljmp
lret
adc
popa
and
or
out
frstor
outsl
sub
cmpsl
bound
sbb
add
loop
xor
sbb
sub
outsl
xor
jnp
movsb
jg
mov
pop
jecxz
jnp
out
popa
repz
popf
loopne
mov
sbb
in
mov
mov
movsl
sqrtps
add
push
push
fdivrs
or
cmp
sbb
xchg
dec
push
lret
aaa
cs
push
inc
jecxz
fidivs
int3
push
loop
bndstx
int3
and
mov
nop
jo
xchg
mov
outsl
call
pushf
in
jl
xchg
lret
cmp
ss
pop
xchg
mov
xor
dec
bound
fiaddl
scas
test
pop
pusha
outsb
and
jne
in
int
mov
repz
dec
mov
sub
lcall
push
call
mov
mov
mov
lar
xor
mov
out
lret
iret
fistps
and
iret
mov
or
adc
mov
sub
mov
scas
add
xlat
jno
sbb
adc
scas
push
lods
add
in
pop
inc
sahf
mov
lds
xchg
iret
int
ss
mov
lret
add
aam
or
iret
stos
enter
or
add
mov
sbb
test
movsb
sbb
cmc
cmp
pop
cmpl
fsub
ror
sbb
mov
xchg
dec
sbb
mov
xchg
int
jle
ret
mov
outsb
lock
fs
sub
fiadds
aas
ret
fcomps
adc
mov
jecxz
test
loop
lods
mov
xchg
and
cli
dec
jp
cmp
cmp
xor
pop
mov
aas
pop
das
ja
sub
xorb
push
rorb
sbb
pop
int3
dec
sbb
scas
jl
mov
popf
or
push
fwait
ret
in
test
std
fists
scas
fadds
xor
test
or
xchg
jge
cmc
pop
in
pop
inc
add
jnp
stos
add
xorb
inc
imul
mov
fs
mov
std
mov
jnp
adc
add
fisttpll
adcl
pop
push
lcall
mov
stos
sbb
and
dec
sbbb
jecxz
jg
mov
dec
pop
mov
rcr
repnz
and
xchg
inc
hlt
sar
sub
push
imul
mov
cs
push
xor
sub
xlat
add
test
sbb
mov
test
mov
cmc
and
mov
out
mov
arpl
jp
cli
or
cmp
jne
cmpsl
notl
xchg
cwtl
inc
fwait
jae
repnz
mov
push
sarl
adc
sub
cmp
lods
clc
ret
cmc
jp
dec
xchg
std
lret
lret
xlat
jo
gs
inc
dec
dec
jb
xor
lea
adc
xor
dec
out
icebp
mov
push
repz
sbb
inc
jg
sbbl
outsb
addb
mov
dec
push
sbb
in
dec
inc
nop
movl
call
mov
cmp
inc
jns
clc
push
push
jo
xchg
out
dec
mov
xchg
fwait
mov
jmp
adc
mov
xor
xor
and
insl
dec
jmp
adc
sbb
push
loop
ficompl
pop
es
iret
fs
movsl
jb
fxam
ja
add
mov
xchg
jno
inc
arpl
lahf
stos
ud0
int3
inc
ficoml
fxch
mov
popa
cltd
or
pop
pop
cmc
scas
data16
fnstenv
addr16
aas
xchg
ret
lahf
aad
pop
jmp
fdivr
test
sbb
add
mov
sbb
xchg
stc
cmp
lcall
jp
cmp
in
add
fsubs
lods
test
adc
dec
lods
cmp
and
push
xor
lods
fildll
lods
jnp
imul
mov
push
inc
xchg
mulb
sahf
shll
fwait
stos
push
lock
mov
icebp
les
jno
icebp
mov
cmp
cmp
mov
jbe
int3
test
cmp
nop
pop
xor
dec
arpl
iret
arpl
sub
jo
std
cmpsl
or
clc
daa
mov
add
cmp
xchg
and
and
in
int3
mov
xchg
jbe
lret
loop
mov
addb
dec
sbb
cli
cmp
or
pop
test
movsb
movsb
shl
lcall
enter
push
add
dec
inc
aam
pop
inc
cli
loope
push
scas
mov
in
mov
loopne
sbb
addr16
outsl
mov
xchg
leave
mov
popa
sub
movsb
jbe
repnz
hlt
sbb
in
add
pop
outsl
jge
push
inc
dec
dec
mov
add
cmp
mov
test
loope
xchg
mov
scas
cmp
sub
iret
iret
xchg
push
mov
into
adc
sub
dec
sti
inc
sub
and
js
test
inc
xor
or
inc
or
repz
or
dec
dec
hlt
dec
clc
in
pop
jns
repz
fsubs
pop
inc
pushl
in
fdivs
add
ss
dec
les
sahf
dec
ret
jge
xchg
cmp
ficomps
mov
aad
jl
push
into
repnz
shrb
mov
jg
mov
push
fdivr
mov
aas
mov
movsl
pop
lods
rclb
cmpsl
movsb
shrl
sub
xor
mov
add
or
push
out
pop
inc
orl
xchg
sarb
pandn
cmc
jae
pop
int3
xchg
flds
or
divl
mov
mov
sub
sbb
adc
mov
adc
push
sub
jno
addb
sbb
lahf
dec
mov
mov
stc
inc
push
fisttpl
lcall
xor
test
rcl
ljmp
movsl
aam
pcmpeqb
movsl
insb
adc
mov
sub
add
addl
sahf
xchg
or
mov
out
inc
add
stc
int3
mov
loop
shlb
mov
pop
push
addb
and
xor
repnz
nop
xchg
or
sti
icebp
lea
orl
shrl
jbe
pushf
aas
jecxz
inc
push
or
xchg
rorb
nop
add
dec
cmp
repnz
and
out
movsb
pop
ds
pop
dec
orl
jg
shr
lods
inc
pop
fnstenv
jle
test
xor
mov
pop
dec
cmp
scas
ret
bound
ror
cli
mov
cmp
push
mov
sub
fdivs
dec
call
test
and
insl
jbe
fadd
mov
push
jle
loop
push
popf
dec
cwtl
ret
jns
test
dec
dec
dec
clc
dec
jecxz
mov
push
fsubp
enter
testb
fisubs
pop
dec
sbb
lahf
mov
cmp
dec
das
gs
mov
lock
in
sub
mov
xchg
pop
push
add
mov
rorb
sbb
cmp
insb
fmul
imul
xor
mov
and
repnz
loop
xchg
subb
push
mov
out
jb
into
adc
and
repnz
loop
xchg
subb
push
mov
out
adc
into
cmpb
mov
jle
outsb
add
dec
xchg
ds
cs
dec
push
inc
push
out
sub
inc
into
adc
mov
les
loop
in
or
dec
loope
icebp
or
out
push
inc
fidivrl
cmp
push
xchg
push
sahf
inc
out
ss
and
push
fiadds
idivb
out
push
outsb
mov
sub
pop
repnz
push
nop
inc
out
pop
into
es
push
fiadds
aaa
fs
out
jle
les
lcallw
mov
popf
add
out
popa
xchg
dec
xchg
bound
mov
mov
jle
sub
faddl
xchg
movb
lret
push
push
out
pop
scas
jge
divl
mov
pop
lret
lret
les
push
xchg
ss
pusha
push
mov
pop
and
std
int3
pop
call
lds
sahf
or
mov
adc
out
push
add
into
ficoms
das
ss
cmp
mov
into
mov
pop
jns
mov
mov
inc
ficoms
jecxz
push
addl
jecxz
sahf
scas
xchg
xchg
outsb
inc
push
gs
daa
xor
into
stc
ficomps
loope
xchg
icebp
jl
mov
jbe
push
repz
lods
fxch
push
fiadds
push
push
push
int3
jns
outsb
cmpsb
dec
dec
inc
push
mov
cmpsb
mov
negb
out
aam
fisubrs
movsb
pop
out
xchg
push
sbb
lcall
scas
xor
and
and
das
out
pop
fwait
push
mov
mov
cmpsl
popa
mov
jecxz
fnstcw
dec
clc
or
xor
xchg
push
ja
insl
dec
mov
jbe
sarb
dec
xchg
pop
xchg
push
sahf
inc
out
ss
es
push
fiadds
idivb
out
push
outsb
mov
cmpsb
dec
xchg
pop
xchg
push
sahf
inc
out
ss
es
push
fiadds
notb
xor
das
sbb
dec
enter
mov
push
bound
sub
push
stos
xchg
sarl
fiaddl
mov
test
lock
mov
mov
ja
lea
pop
and
mov
inc
and
enter
xchg
int3
jg
scas
xor
out
push
cmp
loopne
pushl
aas
out
iret
je
scas
clc
inc
and
ljmp
vmovsd
bound
call
loope
mov
enter
testl
and
test
pop
outsl
icebp
adcb
scas
push
je
add
into
bswap
aas
jg
shr
sub
scas
ss
data16
push
cld
stos
sub
pop
mov
lret
lret
shl
push
or
ffree
aaa
loop
das
cwtl
in
cmpsb
out
lock
jg
mov
mov
jp
dec
and
bound
faddl
ja
sahf
pop
and
push
or
sbb
pop
adc
sahf
or
jl
mov
and
adc
jmp
and
pop
dec
xlat
mov
mov
arpl
and
insb
dec
or
xor
xorb
repz
in
ja
in
mov
or
gs
mov
fnstsw
mov
mov
leave
xchg
push
outsb
add
mov
addb
jmp
xchg
daa
stos
dec
repnz
mov
dec
loope
aaa
popl
sub
pop
or
xor
adc
ds
cmpps
call
inc
fidivl
add
rclb
pop
inc
stos
testb
test
adc
mov
jl
stc
leave
mov
fdivl
jl
sbb
mov
mov
jg
mov
cmp
xor
adc
sub
sub
gs
pusha
mov
jl
pusha
sub
or
and
xor
sub
decb
pusha
stos
dec
inc
shrb
adc
mov
mov
lods
sbb
scas
pop
xor
cmp
pop
test
ss
cmpsb
pop
dec
mov
xlat
push
jo
adc
pushf
inc
xor
iret
shl
pop
addb
cmp
jno
cltd
sub
fcomi
outsb
stc
loope
mov
inc
add
xor
cmp
lea
movsb
aad
sub
mov
gs
or
jne
and
test
or
in
sbb
repnz
pop
and
rol
lock
out
push
fimull
out
pop
sub
scas
cli
pop
popa
xorb
hlt
jnp
or
movsl
outsl
xchg
test
cmp
inc
jle
xchg
or
push
bound
cmp
jg
mov
in
xchg
mov
ficoms
repnz
cwtl
and
ljmp
push
call
inc
popf
push
inc
aaa
cmp
cmpsl
sub
mov
mov
dec
push
ffreep
inc
iret
sub
cmp
ds
pop
mov
mov
mov
clc
and
rcll
aaa
mov
mov
xchg
shrb
cwtl
cmp
cmp
arpl
cmpb
mov
sub
mov
pop
aam
xchg
dec
push
stos
in
lret
mov
xchg
loope
lea
lea
or
insb
sub
pop
lea
out
mov
outsl
lds
pop
push
pop
out
push
lods
mov
inc
imul
mov
push
pop
out
sti
inc
adcl
mov
aam
cmp
les
dec
xchg
inc
fbld
inc
inc
ss
or
roll
clc
add
jno
inc
repnz
in
movsb
addb
sbb
sysret
addr16
add
add
xchg
js
daa
stos
iret
mov
psraw
push
scas
add
add
into
and
in
rcrl
push
call
stos
in
std
movsl
shlb
mov
rcll
lret
shll
adc
cld
rcl
push
xor
daa
ret
imul
mov
sub
adc
fstpt
pop
lock
mov
add
xchg
jl
mov
orb
mov
dec
cld
xchg
adc
in
sub
mov
mov
sub
jmp
into
and
std
mov
jbe
les
fidivs
sbb
and
pusha
jge
jmp
sub
pop
cmp
inc
adc
aaa
push
pop
jecxz
mov
adc
jae
lods
fincstp
xor
aas
stos
subb
lock
aam
mov
sbb
push
and
push
test
popf
mov
push
and
xchg
lods
dec
adc
jmp
icebp
pop
jp
mov
mov
add
cmc
jp
lods
iret
add
incb
mov
add
jbe
mov
cli
adc
dec
mov
daa
jecxz
out
dec
and
out
fmuls
xor
mov
pop
xchg
std
inc
fdivs
data16
cmp
push
repnz
iret
add
lcall
xor
pusha
lcall
add
sub
push
sbb
pop
push
rorl
lods
outsl
repnz
mov
jecxz
xchg
adc
pop
mov
dec
sub
aad
test
lods
dec
fmull
scas
cltd
std
adc
adc
cwtl
pop
push
adc
imul
loope
mov
adc
pop
cli
arpl
mov
push
jns
jge
xchg
daa
int3
out
data16
iret
jb
js
mov
inc
xchg
leave
cmc
cmpb
push
popa
add
push
psllq
cs
or
popa
inc
mov
int3
aam
je
icebp
call
and
push
jp
pop
pop
lods
mov
add
pop
iret
dec
pop
push
test
test
or
fstps
mov
push
ficoml
adc
cmp
out
daa
loop
repz
add
mov
movsl
mov
lds
dec
jmp
mov
lods
dec
sbb
dec
xchg
pop
or
and
mov
in
gs
pop
and
sbb
movsb
cmp
dec
inc
leave
imul
stos
sub
push
aam
push
jmp
inc
adc
in
dec
stc
sbb
sub
fld
dec
sbb
push
sub
add
jge
fdivrl
xor
mov
push
push
xlat
loopne
mov
fwait
push
fisttps
sbb
jmp
test
inc
fdivr
int
fs
mov
aam
scas
aad
lds
in
lret
gs
mov
sub
inc
sub
cmc
xlat
cmpl
int
pop
lahf
out
xchg
jns
jp
lock
xor
movsl
scas
dec
icebp
pop
test
push
ja
into
testl
jl
xchg
push
shrl
mov
xor
sahf
insb
inc
sub
cli
popf
jbe
mov
mov
mov
push
xor
sub
outsl
sbb
mov
divb
test
in
add
ret
push
jle
mov
push
pop
jnp
sbb
lea
lds
lret
push
fwait
jl
pop
int
popf
aad
push
int3
imul
stc
inc
incl
pop
nop
in
xor
pushf
in
inc
lahf
push
xchg
mov
mov
push
cmp
ljmp
rorb
xor
add
and
leave
icebp
gs
jle
dec
jl
fsubrs
notl
jnp
push
call
dec
out
mov
push
stos
xor
sbb
incl
jno
rep
cmp
add
add
pusha
pop
int
inc
shr
pop
addb
inc
or
test
mov
shl
xor
mov
leave
pop
push
xor
push
mov
dec
cld
icebp
mov
and
mov
xor
pop
xor
mov
jb
cmpsb
push
mov
mov
jmp
repz
cmp
jns
fadds
dec
mov
loopne
stos
das
xor
pushf
outsl
xor
push
inc
and
cmp
jmp
insb
inc
lret
mov
pop
outsl
sbb
mull
rolb
repz
out
add
daa
cmp
or
clc
jl
dec
iret
pop
dec
pop
clc
and
mov
fs
jp
sbb
xlat
cltd
pop
sbb
pop
adc
jo
arpl
iret
jns
les
test
scas
inc
test
pop
or
jnp
les
mov
jae
sub
mov
mov
xchg
jecxz
add
cltd
push
imul
or
daa
int3
das
jno
aaa
ja
in
pop
sarb
push
leave
shlb
bound
cmp
pop
ficompl
fidivl
push
lret
adc
sub
popf
mov
pop
add
cmc
xor
push
sbb
out
sbb
stos
in
vmwrite
inc
inc
mov
adc
pop
roll
fninit
fcoml
push
jge
leave
shl
add
jae
add
sub
nop
scas
push
imul
bound
test
or
add
jns
push
loope
adc
scas
test
or
aaa
mov
push
out
push
mov
pop
or
dec
aam
push
sub
cli
cltd
mov
test
dec
adc
movsl
sbb
loop
rol
stos
jns
nop
add
fadd
sub
xchg
cmp
icebp
mov
sbb
mov
mov
inc
or
pop
scas
je
cmc
test
sysenter
sbb
add
xchg
clc
dec
popf
inc
jbe
mov
popf
negb
mov
add
outsl
icebp
insb
add
add
lret
mov
repz
imul
pop
out
fwait
dec
js
xor
add
adc
stc
sub
or
bound
fwait
jmp
jle
aam
jecxz
jecxz
cmpsb
adcl
xor
pop
add
roll
insl
outsl
sub
lea
imulb
sub
jl
fnstcw
cmp
jns
leave
fcomi
ffreep
fcompl
dec
std
lods
dec
jle
aaa
cmp
aam
cltd
sub
arpl
pusha
test
aad
incl
dec
stc
in
ds
dec
xchg
xor
push
cmp
pop
inc
push
and
mov
inc
rcrb
xchg
lret
je
arpl
mov
xor
fucom
sti
inc
inc
sbb
mov
mov
jo
push
out
ja
test
fisttps
jmp
sbb
pusha
mov
dec
enter
mov
pop
jbe
lock
cmp
sub
clc
sbb
mov
test
xor
jo
scas
cmp
sbb
lahf
icebp
rolb
pop
mov
fcoms
arpl
mov
sub
sbb
dec
leave
push
push
sbb
subb
lea
int3
mov
repz
sub
cmp
cmp
roll
call
mov
xchg
adc
inc
sbb
lock
int3
jne
adc
std
mov
add
or
les
mov
cmp
jo
cltd
add
aas
mov
addl
je
adc
aam
and
pop
loop
xchg
cmpsl
dec
ss
push
jmp
cmp
dec
leave
jae
shll
jl
dec
xchg
jg
mov
mov
dec
mov
jno
mov
roll
inc
out
jmp
mov
mov
add
jne
push
js
movsl
andb
int3
adc
inc
cli
or
out
pop
es
bound
ljmp
rorb
jae
pusha
lea
pop
ret
inc
imul
scas
pushf
insb
aaa
add
mov
test
jb
add
das
dec
sub
lock
cltd
or
jb
push
outsb
jbe
adc
sub
das
popf
ret
jne
lock
lret
add
dec
pop
xor
inc
paddsw
jle
in
outsl
sbb
cmovp
int
xor
shlb
push
roll
pop
pop
pop
cmc
fwait
int3
fcoms
jns
cld
push
popa
push
lock
popa
out
jbe
and
and
iret
mov
mov
push
xchg
mov
xor
sahf
scas
sarl
cmc
pop
jo
fstl
mov
xor
cli
cwtl
or
sub
or
add
pcmpgtw
sbb
jle
outsb
fistl
ret
jnp
push
lret
mov
pop
push
or
mov
in
sub
mov
dec
jg
add
bound
mov
xchg
or
daa
out
bound
jp
xchg
aas
addb
ljmp
fstl
jle
mov
dec
lock
dec
data16
jno
xor
clc
xchg
jg
mov
ret
notb
push
jmp
leave
mov
loop
jne
push
inc
and
pop
rcll
je
lods
add
repz
lcall
jp
fmul
daa
mov
mov
ret
add
cs
or
mov
cmp
iret
inc
and
data16
jnp
adc
add
cmp
xchg
dec
lcall
sub
fdivs
mov
js
fdivp
rolb
iret
cmpsl
sbb
lret
add
stos
and
outsl
jl
pop
or
scas
dec
mov
jp
imul
mov
push
bound
pop
pop
mov
mov
adc
ror
mov
aam
sub
sub
xchg
shlb
mov
push
xchg
sbb
imul
imul
fisubrl
test
popf
int
popl
xchg
iret
ds
pushf
inc
cmpsl
cmp
push
scas
lret
mov
mov
sub
adc
push
cmp
push
xchg
or
inc
lret
mov
icebp
fimuls
rol
push
lods
xor
dec
inc
cmpl
adc
lret
sub
aas
cs
out
fs
jp
outsl
inc
lahf
clc
test
cmc
or
or
mov
stos
add
test
jecxz
enter
and
int
pop
sti
and
in
jb
or
push
rorl
inc
pop
jne
cwtl
inc
push
fadd
xchg
push
jnp
xchg
add
test
sti
loope
xor
adc
mov
xchg
movsb
repz
jg
mov
pop
mov
and
out
or
outsl
jmp
add
cltd
push
aas
and
mov
mov
inc
and
sbb
dec
rclb
cmp
test
sub
fadds
out
lock
cltd
jge
mov
loopne
popl
in
pop
dec
ds
xchg
pop
xor
cmp
pop
pop
mov
pop
sbbb
push
xchg
jbe
xchg
inc
jp
or
cs
mov
mov
dec
and
repz
xchg
mov
mov
pop
adc
xchg
add
lods
in
fdivrl
data16
mov
pop
sbb
loop
mov
pushf
into
adcl
daa
mov
mov
push
imul
jne
jl
aas
push
and
push
xor
addr16
test
shl
inc
mov
mov
dec
or
sbbb
jb
push
mov
ljmp
stc
cmpsl
rolb
fisubrs
mov
sbb
adc
mov
pop
mov
cld
inc
jmp
xor
sub
fadds
iret
lds
cmc
fcompl
mov
mov
mov
mov
loope
outsb
jne
aas
mov
notb
cs
pop
insl
push
inc
dec
inc
and
lcall
pop
cmp
aas
and
loope
xor
test
adc
add
mov
mov
stos
xor
add
lock
and
maskmovq
test
push
xor
pop
dec
cmc
gs
lock
sahf
mov
mov
jne
in
ljmp
sub
insl
ret
dec
pop
cli
xorl
pop
add
fnstsw
add
jbe
outsl
inc
inc
cltd
push
sbb
lds
jo
xchg
inc
lods
int
dec
add
clc
dec
dec
xchg
les
fldcw
jae
fildl
fstpt
sbb
jnp
lods
mov
xchg
jne
testl
out
fisttps
or
pop
or
mov
xor
into
push
adc
sub
data16
and
mov
jb
xor
jmp
call
les
outsl
fadd
outsb
popa
out
pusha
jmp
adc
push
insl
xchg
orl
push
sarl
fstp
dec
and
stc
xchg
dec
sbbb
out
enter
cmc
hlt
mov
mul
cmc
jge
add
shll
in
ret
les
adc
out
adc
push
addr16
push
push
sbb
test
mov
mov
dec
adc
movsb
adc
mov
dec
test
gs
fdivrs
xchg
std
cmp
cltd
xchg
jno
xor
push
adc
jbe
mull
sub
mov
push
xor
pop
xchg
cli
scas
dec
push
dec
cmp
sub
and
push
in
dec
dec
mov
rcrl
mov
aad
mov
ficoms
jge
sub
mov
sarl
scas
aad
push
lret
mov
notl
or
outsl
addr16
xor
scas
cmpsl
adc
scas
cmp
pop
dec
ds
stc
push
adc
mov
and
ja
repnz
jmp
imul
addb
mov
pop
das
xchg
push
test
fnsave
jae
mov
popa
mov
adc
cltd
xlat
sbb
rorb
cmp
inc
fnstcw
mov
imul
push
ljmp
int3
jae
mov
rol
mov
inc
repnz
mov
test
lahf
cmpsb
pusha
les
pop
loope
rcrb
out
push
cmp
rcrb
adc
loope
mov
sbb
or
leave
sub
mov
int3
sbb
xchg
cltd
pop
out
push
divb
adc
mov
dec
imul
and
jno
push
push
cmc
lea
fmull
inc
movsb
int
jge
hlt
js
pop
lock
mov
jecxz
mov
and
aad
loopne,pn
dec
mov
xchg
inc
repnz
mov
jmp
dec
cwtl
out
or
mov
sub
cmp
fstpl
cmp
fld
inc
pop
sbb
cwtl
push
outsl
icebp
mov
or
push
push
sbb
repz
in
and
push
lds
pop
mov
movsl
jne
jge
adc
cld
ret
mov
mov
xchg
in
rcrl
fcomps
je
lcall
das
sub
sub
adc
clc
pusha
out
push
sbb
rcr
mov
fiaddl
jno
out
icebp
mov
iret
and
mov
clc
std
data16
sbb
push
ret
cld
cmp
jno
cmp
lcall
scas
cli
in
mov
push
int3
pop
pop
jno
aad
cmpsl
add
aad
jg
idivb
mov
stos
mov
sbb
addr16
mov
lret
pop
and
lea
and
mov
stc
jo
pop
dec
cld
dec
loopne
loope
out
sbb
aaa
add
bound
pop
mov
xchg
jbe
divb
xor
loopne
sbb
loop
bound
cmp
adc
push
ffreep
lahf
in
ljmp
sbb
dec
xchg
push
fldl
pop
ljmp
loopne
push
incl
dec
cmp
int3
enter
sbb
push
xor
icebp
and
inc
int3
mov
das
xor
sbb
lret
pop
cmp
arpl
je
repz
add
jnp
xor
pop
stc
cwtl
sbb
divl
lea
sarb
xchg
cmp
cmp
xchg
add
mov
and
xchg
ret
enter
lds
aam
pop
sbb
jg
sbb
out
ds
jb
les
cs
rorb
int3
add
out
mov
sbbl
mov
jbe
sub
xchg
inc
cli
push
push
inc
mov
in
fcoms
stos
sub
icebp
mov
jno
les
scas
outsl
mov
adc
ret
mov
pushaw
xor
movsl
inc
test
fwait
mov
nop
adc
push
in
idivl
fdivrs
adc
mov
pushf
lret
daa
inc
insl
pop
push
adc
mov
movl
cmpb
pop
dec
movl
dec
add
inc
push
xchg
xor
mov
mov
je
lods
fdecstp
xchg
xchg
in
xor
jp
or
ds
sub
shlb
sub
push
test
repnz
gs
pop
loope
sar
dec
popa
mov
test
cmpsb
mov
imul
data16
jo
mov
cmp
stc
ds
and
sub
add
lds
fiadds
imul
push
insb
outsb
fbstp
repz
cmc
decl
subb
fcoml
fisttpll
or
scas
outsl
out
xchg
and
loope
jmp
add
jbe
imul
jmp
xor
sub
mov
push
mov
popf
inc
pop
pop
jecxz
lds
xchg
inc
jg
pop
jp
movl
xor
sbb
sbb
and
negl
fwait
pop
loope
sbb
test
push
add
ljmp
jbe
push
adc
and
in
rorl
dec
scas
popf
pop
or
in
pop
mov
xor
mov
mov
sub
inc
insb
lret
jmp
movsb
scas
inc
add
dec
test
mov
pusha
cli
hlt
fnsave
jg
mov
dec
jnp
insl
mov
int
ret
gs
mov
xor
out
xchg
jbe
fistps
ljmp
outsb
mov
cmpsb
dec
xchg
pop
xchg
push
sahf
inc
out
ss
es
push
fiadds
idivb
out
push
outsb
mov
cmpsb
dec
xchg
pop
xchg
push
sahf
inc
out
ss
es
push
fiadds
idivb
scas
push
scas
push
outsb
mov
push
dec
xchg
pop
xchg
push
sahf
inc
out
jmp
into
faddl
idivb
push
insb
mov
cmpsb
into
push
fiadds
and
sahf
xor
jmp
sbb
sub
cmp
inc
xor
je
mov
fwait
test
leave
stc
fldl2t
jmp
cmp
sub
sbb
or
pop
imul
cltd
test
leave
xchg
fsubr
jmp
cmp
sub
sbb
or
pop
imul
mov
call
stos
mov
mov
sub
or
push
insb
adc
ret
mov
mov
mov
mov
mov
dec
jns
in
xchg
push
xchg
inc
xor
mov
sahf
stc
fldenv
mov
cmp
inc
jae
nopl
jmp
aaa
out
mov
sarb
in
push
jmp
or
ljmp
push
jns
adc
dec
sbb
fsts
adc
jb
pop
dec
pushf
jns
dec
les
xor
imul
stos
pop
jmp
xor
or
dec
bound
mov
into
test
cli
pop
popa
rcrl
fsincos
fmul
cmp
sub
sbb
or
pop
imul
cltd
test
leave
stc
fldl2t
jmp
cmp
jg
sub
add
pop
std
sbb
cld
std
dec
mov
mov
dec
jl
or
cmp
sti
repnz
rcl
lret
ds
mov
cmpsb
outsb
jge
popa
outsl
imul
pop
imul
cltd
test
leave
stc
fldl2t
jmp
cmp
sub
sbb
or
pop
imul
cltd
test
leave
stc
fldl2t
jmp
cmp
mov
inc
lret
cltd
or
out
cmp
xor
daa
call
xchg
int
sbb
imul
xchg
and
sub
jbe
test
sbb
xor
hlt
xchg
pop
arpl
mov
ror
lcall
addr16
gs
cmp
imul
mov
sub
jecxz
rcrb
pop
stc
adcw
and
push
inc
fildll
scas
je
mov
sbb
nop
out
push
pop
in
or
jne
test
sub
imul
test
out
sahf
add
push
mov
mov
cmp
sti
or
stos
mov
or
movsl
jle
das
mov
rol
xlat
xchg
mov
in
out
cmp
xchg
fcmovnu
fmuls
jns
mov
adc
inc
es
int3
push
cmp
jno
mov
mov
sti
out
pusha
int
cltd
int
mov
cs
int
mul
sti
sbb
lods
pop
lods
insb
add
jbe
repz
in
jp
rolb
psubb
cmpsl
cmp
pop
xchg
stos
mov
and
scas
sub
jno
repz
mov
xchg
add
call
cli
call
add
push
jl
add
imul
xchg
mov
add
cmp
push
mov
ret
xchg
and
repz
xor
fldt
insb
mov
ds
jmp
lods
cltd
scas
mov
mov
lcall
mov
mov
sbb
lea
cmp
insl
aad
push
mov
lea
inc
or
or
aad
popa
add
adc
inc
mov
dec
sub
das
mov
sub
or
sub
xchg
sub
shl
cmp
iret
xchg
and
clc
sti
mov
cmp
sbb
pop
dec
cmp
lahf
scas
and
shlb
xor
clc
stos
lods
test
outsl
fcompl
inc
scas
jo
int
aas
sub
jae
jno
stos
in
int
ja
cld
add
repz
fstl
mov
mov
daa
shrb
loopne
mov
xchg
or
push
int
rclb
add
sbb
testb
push
pop
xchg
inc
sahf
jp
in
aad
sahf
sbb
mov
mov
daa
pop
idiv
or
pop
rcr
cmp
std
sub
dec
inc
lock
insb
sub
pop
arpl
mov
mov
mov
adc
in
test
cmc
stos
or
mov
pop
inc
cmp
sbb
sub
push
insl
std
xchg
mov
outsb
sbb
lock
je
std
addr16
test
call
mov
xchg
clc
lods
jns,pn
sub
cmpsb
nop
fidivl
addr16
xchg
push
jo
sarl
and
das
xor
ret
lcall
in
aaa
xchg
popa
dec
pop
sbb
in
xchg
cmp
testl
mov
std
or
push
andb
cmp
dec
push
daa
insb
data16
and
push
sahf
aad
inc
jp
ss
xor
mov
mov
xlat
cmpsl
xchg
and
or
fs
xlat
sub
jle
and
incb
push
cmp
ret
xlat
jecxz
ret
push
add
or
popa
pusha
das
loopne
xchg
mov
popf
lea
adc
sbb
inc
sub
add
and
or
lcall
xchg
inc
xor
add
insb
out
in
mov
mov
jmp
adc
popf
inc
fstpl
mov
mov
or
out
push
enter
data16
rorl
mov
mov
inc
xchg
movsl
iret
jb
mov
lds
add
jg
flds
jne
pop
jo
or
testl
movsb
xor
lods
cs
jg
fsts
rorb
jnp
daa
test
adc
pop
lods
aas
movsl
dec
daa
sahf
roll
cmc
mov
adc
pop
fisttps
cmpsl
test
pop
nop
fisttpl
ficoms
shll
fdiv
jae
ret
jmp
and
mov
in
and
sahf
adcb
jbe
pop
push
das
cmp
jae
mov
sbb
pop
cmp
std
hlt
orl
add
push
jbe
push
dec
les
movsb
jbe
imul
pop
inc
mov
sub
push
jbe
cmp
dec
pop
xlat
sbb
add
lock
sti
mov
push
dec
pop
and
jge
mov
cmp
pop
mov
enter
je
cmpsl
scas
cmp
pushf
push
lret
push
pop
cmp
outsb
add
pop
iret
mov
fstpt
imul
pop
or
shrb
and
in
xor
mov
aad
test
jg
fnsave
mov
sahf
xchg
roll
mov
cli
lods
rclb
pop
adc
mov
jecxz
jg
insl
enter
cli
dec
adc
and
daa
aas
or
push
jle
loope
imul
jcxz
xchg
mov
shlb
packssdw
mov
sub
lcall
lock
jae
loop
filds
jb
jge
mov
dec
enter
lock
orl
sub
lahf
add
pop
mov
in
out
pop
jae
push
call
out
mov
flds
or
sub
jae
shrl
xchg
sbb
js
adc
sub
jle
pop
arpl
mov
inc
sbb
xor
clc
stc
aad
jns
push
and
je
xor
fucom
or
jo
rcr
sub
je
pop
gs
lea
jle
rcrl
pop
and
sbb
xor
or
frstor
mov
cmpxchg
sbb
xor
mov
orb
aas
sbb
shl
jnp
mov
dec
xor
test
mov
and
scas
jnp
jecxz
gs
addr16
jo
jb
xchg
loope
in
outsb
pop
mov
pushw
or
sbb
jp
rorb
mov
mov
lahf
mul
test
int3
shrb
mov
test
or
stc
adc
pop
cmp
xor
aad
and
jmp
xchg
popa
pop
and
repnz
imul
mov
gs
xor
add
out
xchg
aas
out
xchg
ret
out
mov
ds
inc
xchg
repnz
mov
test
inc
loope
push
push
dec
rolb
test
pushf
shll
pop
fdivs
jmp
jp
lods
rcrb
adc
or
cmp
nop
das
pop
lods
repnz
leave
jbe
or
adc
sbb
sub
sbb
repz
das
push
add
xor
xlat
and
adc
mov
aam
repz
mov
test
bound
fnsave
push
jp
out
cmp
loope
mov
dec
xlat
aam
cli
cmpsb
out
mov
std
jnp
mov
icebp
aam
dec
xchg
mov
icebp
and
fcom
xor
push
cld
sarl
ljmp
iret
mov
sub
jbe
subb
scas
add
ja
pop
and
mov
movsb
mov
jns
mov
insl
add
xchg
fwait
rcll
or
sub
test
mov
jo
pop
in
jne
je
je
das
fs
fisubs
push
cwtl
or
mov
or
jno
mov
icebp
mov
mov
cmp
lea
js
inc
pusha
add
sub
inc
rorb
pop
outsb
mov
add
ret
daa
stos
pop
dec
ret
mov
loopne
repnz
mov
clc
out
gs
pop
shlb
cmpb
jmp
push
xchg
jp
fwait
leave
jb
movsb
jl
add
in
outsb
xor
int
xchg
sub
add
dec
adc
inc
daa
cmp
sbb
out
dec
lahf
popf
add
mov
mov
inc
mov
out
mov
ret
das
adc
scas
das
xlat
jl
xchg
int
cli
inc
int3
lret
repnz
xor
sbb
jmp
in
insl
int
push
mov
fwait
lahf
inc
fbld
leave
xchg
and
fcoml
rcr
pop
jl
es
sbb
loopne
adc
push
push
addl
pop
cmpsl
or
iret
inc
sbb
adc
or
push
out
scas
aad
jl
push
js
jo
shr
leave
mov
int3
mov
lret
inc
push
outsl
mov
test
xchg
popa
mov
icebp
mov
rolb
jle
and
add
in
lods
push
add
test
in
mov
xchg
scas
int3
les
cmp
add
movsb
gs
inc
add
loop
fcmovb
sar
mov
jae
rol
test
leave
bound
mov
or
jmp
std
sarb
ja
sub
inc
imul
mov
dec
ds
lock
pop
cli
mov
fsubrl
imul
or
mov
cmc
imul
sub
jge
ss
mov
cmp
mov
jmp
jp
mov
and
fwait
dec
pop
test
dec
in
cmc
push
repnz
mov
ds
ljmp
push
stc
mov
jo
into
sub
rorl
xchg
mov
fucomi
into
sub
scas
stos
aaa
xor
inc
cmp
xor
leave
and
loope
arpl
mov
dec
scas
xor
xor
mov
xchg
add
mov
bound
jecxz
aas
sub
arpl
push
pop
xor
lahf
add
pop
pop
inc
movsb
push
xlat
mov
fsubr
pop
push
dec
roll
nop
xchg
fs
cmc
iret
dec
call
sahf
shlb
rclb
nop
and
fcmovnu
sti
mov
shlb
jl
fbld
mov
out
inc
dec
fisubl
fcomi
adc
test
xchg
jnp
sbb
add
xchg
insl
movsl
add
push
fcompl
test
mov
inc
jge
and
fwait
mov
sti
inc
mov
push
push
xchg
out
mov
adc
aad
popa
xor
dec
fcmovnbe
and
add
lds
jns
repz
mov
aas
lahf
adc
sbb
in
sbb
inc
pop
scas
adc
mov
lods
out
sbb
addr16
imul
clc
imul
lds
sbb
jmp
movsb
dec
pop
cmpsb
idivb
arpl
hlt
mov
ds
cwtl
inc
sbbb
arpl
loop
push
jle
in
in
push
push
and
jnp
cmp
ret
in
inc
jnp
pop
xchg
cmp
pop
outsl
push
mov
inc
stos
movsb
fistpl
outsb
int
mov
inc
push
jge
xor
leave
pop
or
xchg
incb
push
out
dec
inc
push
adcb
insb
or
jnp
outsb
mov
sbb
aaa
or
cwtl
mov
loop
dec
repnz
insb
cmp
arpl
lock
inc
ret
aad
repnz
pop
xchg
lds
adc
aam
fists
pop
sahf
cmc
pushf
dec
xchg
test
iret
sub
adc
dec
in
shl
fidivs
notl
mov
fsubl
shlb
movsb
test
jecxz
leave
inc
mov
sbb
stos
scas
push
ja
and
movsb
repz
cwtl
pop
notb
cmpsl
test
xchg
aad
sbb
sub
lock
icebp
ljmp
lods
insl
inc
cmpsb
pop
add
cvtpi2ps
xchg
lret
mov
sbb
loopne
fxtract
cmp
cwtl
filds
inc
in
jge
cmpsl
dec
inc
dec
or
sti
mov
mov
xchg
jns
and
out
jb
jb
xchg
test
imul
or
stc
cmp
cs
add
sbb
jbe
sti
sub
mov
dec
xor
ds
mov
mov
out
inc
mov
fs
psubusb
roll
in
ja
push
fisubrl
and
popf
ja
test
mov
test
dec
push
add
inc
xchg
xlat
mov
dec
mov
lea
bound
cmpsb
imul
xchg
fdivr
mov
mov
push
mov
je
insl
ret
lds
pop
dec
xor
sub
cmp
cs
pop
lods
popa
sub
mov
mov
fucomip
inc
inc
adc
push
outsl
sbb
insb
in
sub
std
idivb
popa
mov
ljmp
xchg
pop
test
jae
add
js
lahf
movsb
les
sub
cmp
dec
loop
int
in
negl
cmpsl
lahf
adc
push
adc
dec
insl
mov
ss
push
loop
mov
adcb
inc
nop
stos
pop
adc
xchg
jecxz
pusha
sub
cmp
mov
mov
or
dec
adc
out
daa
mov
lods
sbb
lret
popa
sbb
or
mov
push
add
rorb
or
addr16
fldenv
jmp
movsb
fidivrs
stc
fcmovnu
ret
adc
push
in
and
jb
pushl
push
mov
js
lods
popa
adc
pop
mov
mul
mov
cltd
aaa
test
movsb
lea
in
int
mov
jb
sub
push
negb
push
pop
mov
repnz
test
push
or
cmp
loope
pop
push
popf
xchg
inc
loope
into
enter
pop
push
hlt
xchg
fdivrp
sbb
aad
push
mov
lds
push
clc
shlb
push
dec
add
sbb
fcmovne
daa
loopne
lret
push
lret
sbb
scas
inc
incb
icebp
int
and
mov
aad
sub
add
aas
sub
pushf
rcrb
sbb
jp
push
push
les
jno
mov
test
cmc
sbb
fisubl
xchg
imul
cmc
and
mov
pop
mov
hlt
push
stos
loope
mov
hlt
and
mov
xor
scas
lods
add
xchg
cmc
in
add
aaa
xchg
push
movsb
lods
rcrl
ja
das
movsl
pop
dec
js
mov
in
push
mov
js
inc
jp
insl
push
mov
inc
and
and
leave
bound
xchg
repnz
enter
dec
xchg
pop
fidivl
mov
and
jl
xchg
idivl
dec
mov
mov
dec
xchg
test
test
adc
in
or
push
loope
lods
hlt
sub
inc
and
stc
in
dec
movsb
in
sub
mov
mov
mov
mov
jmp
mov
adc
pop
xchg
mov
pop
adc
btc
les
pop
cli
cmp
cmp
seto
mov
shll
dec
ss
iret
push
lret
add
das
xor
mov
das
imul
inc
dec
outsb
xor
mov
call
jmp
out
and
inc
in
inc
shlb
fidivrl
or
test
pop
lret
jae
dec
inc
cld
xor
mov
in
and
std
test
mov
dec
sub
xchg
inc
mov
jge
shlb
sbb
xchg
xchg
xor
inc
mov
push
stos
call
in
aas
movsb
fwait
mov
loope
push
aam
cmp
jg
loope
imul
xchg
add
int
scas
cld
popf
add
mov
sbb
loopne,pn
xchg
add
cmpsl
dec
insb
sub
aad
jns
add
mov
jb
insl
data16
sbb
xor
sbb
add
push
xchg
xchg
inc
lea
mov
sub
inc
repz
mov
mov
push
or
or
call
jbe
dec
test
outsb
out
out
in
lods
or
lods
addr16
push
shrb
iret
xchg
loope
mov
ret
mov
insb
insb
mov
popa
jb
mov
xchg
cmc
inc
sbb
es
jae
fsubr
nop
inc
mov
sbb
addr16
push
les
mov
loope
push
gs
mov
xor
pop
pop
ds
rclb
sub
pop
adc
lds
outsb
je
dec
sub
dec
sar
aad
add
and
fs
imul
pop
mov
pop
jb
jae
aam
or
pop
test
mov
aam
fbstp
dec
enter
mov
mov
lea
cmp
and
adc
out
sbb
loop
mov
test
dec
outsb
lods
pop
inc
call
cs
mov
cmp
in
and
adcb
fcmovu
xchg
mov
add
jae
sti
dec
test
xlat
lahf
mov
aam
and
stos
mov
cmpsb
outsl
add
jo
sub
and
shl
xor
mov
xor
adc
push
inc
call
addr16
inc
sbb
xlat
stos
jl
cwtl
inc
mov
add
push
insl
fbstp
shl
leave
test
in
fnsave
stos
jns
rcr
outsb
je
cli
and
pop
xchg
xchg
xor
xchg
sbb
lds
popf
push
push
je
orb
cld
and
clc
out
adc
mov
popf
xor
fdiv
imul
gs
aaa
bound
cld
inc
push
sub
mov
inc
cwtl
int
cmp
adc
xchg
imul
jmp
mov
mov
mov
xor
adcl
scas
sti
testl
mov
push
lock
xchg
sbb
cmp
add
jg
cmp
dec
adc
icebp
mov
push
aam
add
insb
outsb
das
and
gs
dec
xchg
jge
dec
pop
aad
adc
inc
dec
je
mov
jmp
mov
and
stos
push
push
mov
outsl
fnstcw
xlat
ja
ret
jl
loope
mov
or
in
xlat
lret
gs
pushf
psubb
add
and
pushf
sarl
push
into
mov
bound
in
adc
and
stos
and
mov
adc
dec
ds
sbb
xor
and
dec
gs
test
out
sti
scas
lock
adc
sbb
sub
popa
sbb
idivl
sub
inc
lcall
scas
outsl
rcr
mov
push
xor
cld
mov
sbb
or
mov
adc
cs
inc
cmp
out
mov
adc
cmp
clc
push
stc
pop
inc
push
in
insb
push
lahf
test
mov
xchg
daa
std
dec
push
ret
mov
cmpsb
jae
dec
jp
cmc
insb
outsb
adc
pop
dec
andb
pop
dec
lock
lahf
jg
add
icebp
dec
in
loope
lods
shll
sbb
push
fcmove
pop
mov
inc
cmpsb
add
jg
mov
idivb
mov
pop
hlt
sti
dec
mov
cmpb
cmp
or
notb
pop
mov
cmovb
sbb
push
push
enter
sahf
lret
in
xor
pop
cld
mov
pop
gs
pop
cmpsb
mov
adc
jg
push
lret
sub
sbb
jbe
push
ljmp
xchg
lds
sbb
mov
das
mov
lahf
xchg
jb
rorb
out
repz
mov
push
mov
sbb
addl
fdivrs
pop
addr16
scas
add
leave
insb
pop
icebp
sahf
ja
mov
xor
fbstp
xchg
mov
sub
int3
mov
jl
cs
sbb
lock
sti
jmp
lret
adc
or
aas
mov
jne
xor
sbb
mov
sub
mov
frstor
inc
stos
xor
adc
repz
xchg
mov
jle
jno
adc
xchg
outsl
popw
jmp
pop
inc
fstpl
mov
jg
inc
add
lock
sbbl
dec
add
mov
mov
movsl
mov
sbb
mov
mov
idiv
stos
lods
fmulp
jge
scas
enter
data16
in
dec
lahf
fidivrl
xchg
jmp
ds
lahf
out
std
das
sti
leave
and
sti
dec
sub
pop
mov
test
sbbl
adc
popa
fnstsw
aas
in
push
subb
test
insl
sub
cmp
pushf
cmp
mov
xchg
dec
push
dec
nop
cmpsl
cmp
and
movsl
mov
pushf
inc
frstor
push
mov
jnp
ss
idivl
inc
push
cmp
gs
jae
jl
daa
mov
lcall
adc
xlat
dec
jecxz
js
push
scas
data16
outsb
lock
pusha
pop
movsb
add
jne
mov
push
inc
jmp
jno
ljmp
rcl
pop
js
movl
dec
stos
fisttps
loope
mov
cli
ds
movsl
pop
fs
je
aad
das
out
pop
cmp
push
jl
sub
addr16
adc
pop
cld
xor
lods
inc
mov
in
mov
sub
mov
movb
jl
into
cli
mov
inc
fstpt
test
lea
mov
es
and
ljmp
js
or
jl
push
sbb
or
pop
imul
cltd
test
leave
stc
fldl2t
jmp
cmp
sub
sbb
or
pop
imul
cltd
test
leave
stc
fldl2t
jmp
cmp
sub
sbb
or
pop
imul
cltd
test
leave
stc
fldl2t
call
cmp
sub
sbb
or
pop
imul
mov
mov
push
adc
add
cmp
sub
sbb
or
mov
sbb
aaa
ds
inc
mov
orl
leave
cmp
sub
sbb
or
jns
imul
mov
mov
leave
cmp
sub
sbb
or
jns
imul
mov
test
out
mov
stc
mov
cmpsl
test
jnp
push
sbb
pusha
mov
loop
push
mov
test
insl
ljmpw
mov
sub
mov
inc
push
notb
pop
imul
jbe
push
xchg
call
aas
imul
sbb
shlb
mov
std
dec
js
push
xchg
pop
mov
imul
push
pop
ja
ja
and
xor
sub
addr16
test
xlat
mov
fdivr
call
imul
push
dec
lcall
outsl
hlt
ds
cmc
push
testl
out
orb
push
dec
pop
out
fistps
pushw
test
aad
shl
sub
sbb
or
jns
imul
mov
mov
stc
out
jmp
js
pop
push
jo
pusha
bound
sbb
cmp
fmul
cmpsl
cltd
xchg
icebp
loop
xchg
jmp
stos
pop
pop
dec
dec
jl
gs
and
sbb
ret
clc
ret
mov
mov
mov
daa
jbe
gs
xor
push
dec
inc
mov
xchg
mov
leave
cmp
sub
sbb
or
jns
imul
mov
cmpsl
cltd
xchg
mov
leave
cmp
or
test
imul
cltd
mov
pop
lcall
and
lcall
mov
pushf
xchg
xchg
daa
shl
mov
push
jo
test
nop
push
xchg
mov
dec
mov
jb
sbbl
sbb
inc
loopne
jno
mov
mov
dec
xchg
insb
mov
ljmp
push
xchg
popa
mov
in
in
clc
cld
arpl
loope
adc
out
inc
mov
ds
pop
mov
add
and
gs
add
out
les
dec
jbe
outsl
push
hlt
mov
sti
or
testl
out
and
xchg
mov
mov
loop
and
aam
stos
mov
shll
cltd
jae
fs
les
es
outsb
mov
fisubs
ror
push
dec
in
xchg
xor
or
mov
iret
popf
jo
negb
jbe
gs
or
popf
fsubs
sub
mov
push
jg
cltd
jl
jecxz
push
sub
movl
cmpsb
cld
jmp
iret
fwait
adc
pop
and
jge
scas
cltd
xor
push
std
stos
in
mov
lds
mov
jmp
mov
insb
and
int
in
cwtl
mov
add
or
mov
push
mov
iret
add
mov
insb
imul
xor
lret
lods
gs
push
clc
and
leave
mov
add
cmc
mov
lods
test
ljmp
je
out
sub
lock
jno
push
or
adcb
mov
cmc
inc
cltd
leave
add
shlb
jbe
dec
lret
mov
pop
notb
outsb
movsl
xchg
sbb
fldcw
sahf
mov
sub
gs
push
jecxz
push
lods
xor
orl
iret
out
sahf
cmp
jae
mov
adc
inc
hlt
sub
push
mov
pop
out
inc
fwait
pop
xor
mov
pop
in
out
imul
icebp
sub
mov
sahf
lret
mov
dec
fiadds
inc
xor
into
and
xchg
fimuls
dec
adc
sub
je
jbe
clc
into
loopne
xchg
test
test
adc
sahf
mov
adc
ljmp
push
in
fs
lock
jae
lea
repz
and
das
and
lea
dec
mov
inc
mov
aad
sarl
pop
out
and
outsl
jle
pop
pop
out
std
fmull
cmp
inc
mov
dec
mov
in
incl
xchg
xlat
cmp
mov
inc
adc
jmp
cwtl
push
inc
adc
je
mov
push
push
sbb
cmp
sub
add
inc
jbe
out
das
push
popa
shll
dec
cltd
adc
push
add
rcll
nop
lret
nop
mov
push
sahf
fs
loopne
rol
mov
mov
mov
push
cltd
stos
push
xor
lahf
jg
stc
dec
add
ficompl
cli
in
and
dec
xchg
daa
push
sbb
cmpsl
adc
pushf
push
cld
lock
ror
mov
lea
adc
xchg
add
test
mov
inc
out
mov
mov
cli
testb
push
xchg
jg
scas
bound
lods
jnp
add
das
ja
mov
aam
lret
icebp
jns
into
mov
add
aam
jge
push
insb
dec
inc
mov
sub
jecxz
mov
inc
arpl
mov
das
push
movsl
test
stc
rcrl
clc
jnp
jl
aaa
sbb
out
lods
je
mov
push
sub
ljmp
add
rolb
add
ss
roll
mov
dec
or
dec
rcr
ficoms
pop
fcom
sub
inc
int
cmp
lcall
sub
stc
fistps
cmp
sub
push
sub
sub
pop
bound
pusha
pop
fildll
jmp
arpl
mov
push
insb
movsb
inc
push
cli
scas
push
scas
sub
ljmp
int3
mov
pop
inc
cmpsb
shlb
and
aaa
popf
xor
adc
cmc
push
dec
cltd
fwait
add
cmp
xchg
or
in
imul
std
dec
fsts
pop
popa
push
adc
lock
adc
std
cmpsl
add
mov
scas
mov
insl
push
push
outsl
rcll
mov
cmp
sub
xor
sub
dec
insl
cltd
mov
pop
adc
sbb
or
sub
fidivrl
movsl
jae
repz
sbb
insb
xor
in
sub
rcll
sbb
pop
out
xor
push
cltd
mov
push
xchg
popa
or
cmp
or
add
xor
shl
jo
push
and
dec
movsb
mov
cs
xchg
mov
add
pop
in
push
mov
or
jle
xchg
adc
rorb
data16
dec
cmp
dec
aad
cs
mov
in
push
jge
pop
int
lods
icebp
xchg
nop
sbb
xor
ljmp
xor
outsb
adc
inc
cmp
xchg
mov
xchg
inc
mov
jp
adcl
sub
cmp
unpckhps
push
nop
mov
aad
mov
inc
xchg
jmp
push
xchg
push
add
adc
or
mov
aaa
and
mov
data16
or
xchg
scas
pusha
ss
cld
lret
fnstcw
mov
xor
add
test
jno
push
xor
movsb
sarb
add
mov
arpl
int
data16
enter
in
sbb
insb
cli
ss
xchg
xchg
notb
or
push
mov
pop
mov
mov
push
push
push
push
jo
jge
sbb
jle
sti
push
jb
es
add
mov
push
push
xchg
mov
lds
lret
mov
ret
jnp
fsubl
and
or
cmpsl
popf
je
xchg
pop
loop
fisubs
cltd
popa
xor
cmp
rcrl
inc
sti
shlb
xor
ja
pop
jns
aam
hlt
xlat
jp
lret
cli
jae
and
scas
aaa
push
or
mov
inc
dec
sub
jg
scas
fwait
mov
aam
lock
cmp
subb
jge
mov
jmp
sub
push
lods
jge
pop
repnz
mov
sbb
jp
lea
jmp
mov
jne
movsl
es
jmp
add
movsl
mov
test
mov
pop
js
cmp
push
sahf
jae
push
lods
or
js
aaa
loop
cmp
pushf
or
ret
inc
xor
push
addr16
testb
push
push
loop
inc
push
dec
sbb
pop
add
dec
lret
mov
mov
push
add
lcall
cli
mov
lret
ret
jmp
inc
and
fnstenv
jle
dec
sbbb
sbb
loope
outsl
sbb
lods
dec
cltd
iret
xorl
xor
fcoml
clc
dec
push
bound
negb
xchg
or
cmp
repnz
ss
sub
vcomiss
cmp
mov
pop
jno
xchg
inc
leave
ret
mov
mov
jno
mov
dec
adc
xchg
xor
xchg
ret
mov
fndisi(8087
jb
xor
les
loope
pop
lahf
mov
orb
pop
mov
test
sbb
arpl
xchg
popf
scas
push
xchg
sub
daa
dec
cmp
adc
inc
into
mov
fnsave
pop
mov
subl
insb
imul
popa
mov
mov
gs
ret
test
xchg
add
in
cmpl
test
sbb
fmuls
sti
int
hlt
test
dec
push
or
call
push
mov
pushf
add
sub
cli
cmpsb
push
jle
fxam
lods
int3
adc
xlat
lcall
mov
sbb
in
mov
les
mov
shlb
push
mov
add
xchg
int3
cltd
xor
out
imul
sub
pop
sub
jecxz
je
test
cmc
or
fldt
jnp,pt
imul
out
mov
mov
jp
or
ljmp
or
xor
fisttpl
sbb
xor
insb
popa
fadds
pusha
aas
ds
out
mov
nop
push
jb
sbb
mov
sub
mov
add
sbb
test
cld
fisubl
push
rcrl
mov
imull
cli
leave
fisttpll
ljmp
sbb
arpl
ja
pop
aaa
fstpt
mov
popa
sub
push
push
pop
xchg
cmp
or
cwtl
push
jle
adc
daa
out
mov
adc
ret
dec
xor
ret
into
mov
pop
inc
loop
out
mov
popf
sbb
lahf
nop
push
jb
std
adc
frstor
pop
sbb
lods
cmp
cmp
cltd
ja
js
dec
aam
into
mov
fwait
jns
inc
and
inc
call
adc
outsb
lahf
cmpsb
ds
jecxz
and
test
xchg
inc
cmp
add
addr16
movb
andl
test
or
inc
xor
and
sahf
out
xchg
jg
shrb
xchg
popf
pop
loop
data16
aam
mov
adc
loopne
xorb
sub
pop
mov
lods
cmp
fmuls
xor
add
jo
or
fstpt
adc
mov
fnstenv
pop
push
xor
sbb
mov
lods
pop
push
inc
das
fcoms
inc
inc
inc
je
repz
repz
dec
call
fwait
cltd
xor
or
mov
and
jo
and
lahf
push
xchg
jae
sbb
mov
adc
jmp
xchg
pop
push
subl
adc
test
and
push
bound
ret
fcomps
ss
and
pushf
pop
inc
adc
jnp
and
aam
in
movsb
imul
jnp
outsb
outsl
jle
insb
mov
sar
jae,pt
cmp
pop
inc
test
or
mov
mov
sahf
negl
jne
rcrb
xchg
or
repnz
icebp
imul
ja
test
mov
inc
xchg
test
fldcw
stos
aad
or
mov
add
mov
jae
sub
jmp
xchg
stos
mov
and
push
nop
mov
divb
xchg
lods
ja
js
push
fsts
xchg
outsb
push
add
jbe
stc
in
pop
fisttpl
stos
add
jnp
mov
movsb
pop
mov
dec
mov
adcl
add
in
jb
je
adc
xor
popa
imul
lds
sub
inc
pop
jmp
lcall
fnstenv
or
xor
xor
jns
fistpl
xsavec
or
mov
popa
ss
jg
dec
and
jns
ret
std
mov
mov
or
testb
pop
jns
fwait
orb
std
aas
jae
test
push
adc
adc
cmc
addb
popf
shlb
loop
cmpsl
inc
fmull
push
inc
jbe
enter
das
dec
mov
and
jmp
sub
pop
xchg
movsl
pop
js
lret
ja
cmp
lahf
imul
pop
negl
push
adc
cmp
pop
mov
cld
fadds
sub
mov
pop
mov
jge
fistl
lahf
and
repz
add
popf
pop
push
cli
mov
pop
mov
ljmp
xlat
imul
mov
lcall
pusha
lahf
dec
push
xchg
jecxz
inc
inc
scas
xor
mov
test
and
and
arpl
pop
cmc
mov
stos
dec
pop
lret
das
ret
mov
pop
outsb
mov
lods
out
inc
add
lock
or
dec
decl
adcb
out
mov
rolb
xor
mov
cld
and
mov
cmp
lds
sti
ret
sbb
cmp
sahf
xor
test
std
lcall
lds
xchg
jns
add
mov
dec
das
fadd
aam
jnp
jp
in
mov
fs
sbb
sbb
jle
and
xor
pop
inc
das
movsb
sbb
mov
mov
dec
mov
sbb
test
xchg
cmpsl
and
push
push
pushf
or
lahf
sbb
sub
mov
push
cmp
push
pop
repz
jl
pop
rcr
and
fistpll
xchg
lds
sbb
jp
dec
fstpt
les
rcrb
popf
and
push
rcrb
cmp
sub
cs
adc
fwait
push
or
jo
in
ficompl
mov
mov
inc
cs
dec
jge
lret
inc
imul
rcl
inc
into
mov
fcmovnbe
insb
and
out
push
sub
pop
and
and
adc
sbb
shrl
mov
aaa
int3
add
jae
arpl
dec
insb
jnp
cmp
je
mov
sbb
add
adc
push
std
jnp
push
jmp
ds
pop
add
cbtw
xchg
push
scas
add
adcb
sti
inc
fwait
dec
fstl
outsb
push
setle
cmp
pushf
push
mov
sbb
pusha
movsl
mov
cmpsb
pop
add
push
adc
cmp
adc
dec
sub
or
and
cmpsl
jno
cmp
pop
sbb
push
xlat
jb
scas
daa
jae
or
cmp
inc
iret
push
std
mov
sbb
jb
hlt
mov
cs
in
sahf
int3
push
pop
pop
loope
cwtl
in
dec
dec
push
cmpsl
decb
loope
fisttps
jecxz
inc
pop
mov
mov
add
adc
je
jb
add
add
dec
jbe
xchg
sbb
inc
pop
fidivrs
xchg
mov
pop
dec
mov
movsb
and
out
pushf
cmpsb
scas
push
jb
push
pop
stos
add
xor
jmp
aas
call
es
push
bound
loopne
jnp
mov
jle
rcrb
cmp
dec
sarl
jmp
ret
in
lret
int
into
insl
fldt
jg
xchg
lcall
mov
addr16
push
jo
test
lea
das
js
sbb
ljmp
out
lcall
ljmp
dec
xchg
jg
testb
addr16
mov
repnz
fwait
push
push
out
movsb
xor
sub
icebp
iret
cmp
sbb
aaa
cmp
out
icebp
test
and
rorl
mov
cmp
je
inc
add
sti
arpl
movsl
pop
jnp
inc
in
cmpl
inc
rcl
lret
loop
lods
enter
pushf
mov
shrb
sar
and
insl
jo
push
fidivl
cmp
js
sub
repnz
sub
arpl
mov
dec
mov
out
dec
xchg
jnp
add
out
out
jge
int
mov
pop
pop
arpl
ret
scas
stos
rcrl
and
fcompl
pop
dec
dec
jb
sbb
xorl
sbbb
adc
ja
insl
cmpsb
fsubl
mov
add
xor
cmp
pop
fisubl
adc
xorl
mov
ds
pushf
ret
rolb
push
pop
push
andb
iret
dec
fisubrs
sbb
mov
cld
call
mov
cmp
push
and
jnp
push
popf
adc
popf
fdivl
dec
pop
lahf
xchg
and
push
sysret
add
pop
jb
mov
popa
mov
jbe
adc
adc
lods
sub
jmp
int3
mov
mov
xlat
aad
fstps
movsb
inc
cmpl
pop
and
rcll
aam
xor
lds
mov
test
xor
mov
cmpsb
mov
insl
mov
dec
inc
test
mov
adc
add
adc
repnz
xchg
iret
sbb
sub
lock
je
jbe
sub
into
adc
cmp
or
cs
xchg
mov
cld
popf
movsl
adc
jmp
xchg
fadd
or
xchg
mov
imul
fadd
stos
or
ljmp
test
adc
xchg
inc
push
xor
dec
dec
xchg
xchg
add
call
inc
jo
scas
dec
enter
movsb
adc
call
lcall
jl
jmp
mov
jge
lcall
rorb
adc
mov
mov
fadds
in
mov
mov
pop
lock
lds
fs
cmp
dec
push
jb
xchg
mov
addr16
jae
pop
push
and
scas
inc
movsb
sti
mov
pop
in
hlt
jnp
lods
movsl
movsl
mov
mov
cli
pusha
cmc
xorb
stc
lds
fidivrl
mov
cltd
cmp
in
push
loopne
cmpsb
cmpsl
mov
lcall
add
xchg
stos
inc
aas
sarl
fwait
or
jl
pop
stc
sbb
adc
imul
inc
jecxz
mov
push
or
shll
iret
lahf
ret
inc
dec
jo
sti
cmp
mov
pextrw
dec
call
cmp
xor
sub
insl
pop
add
fstps
pop
jg
xchg
scas
out
fldl2e
xor
js
dec
adc
add
ret
jo
fcom
push
xchg
and
push
add
sbb
ret
fcoms
ret
ficompl
lods
lcall
push
outsb
and
test
mov
mov
and
adc
mov
and
or
or
pop
icebp
jl
sub
mov
xchg
in
push
push
adc
sti
jns
test
pop
push
xchg
test
sub
mov
les
sub
inc
iret
sub
inc
xor
adc
lea
in
call
roll
pop
je
cs
sub
push
scas
mov
sbb
jns
fnstenv
cld
inc
jmp
iret
into
nop
mov
mov
cld
cmpsl
sbb
add
mov
cltd
xchg
sub
out
repz
dec
std
mov
pop
sbb
or
xchg
rol
pop
push
dec
in
fdivl
shl
xchg
push
mov
adc
pop
or
in
mov
cmpsb
in
cltd
add
cmc
or
sbb
cs
xchg
orl
and
nop
pop
loope
insl
imul
lret
mov
mov
cs
ja
jno
imul
and
lahf
mov
jl
iret
into
sbb
bound
lds
mov
inc
aas
fimuls
cwtl
test
jmp
adc
mov
sub
roll
jg
fdivrs
pusha
dec
cmpsl
movsb
lret
cmp
or
incb
insl
mov
xor
lret
movsl
movsl
scas
add
ja
sub
lcall
ret
xchg
aaa
and
aaa
outsl
push
fmull
mov
and
and
out
fs
std
sar
mov
ja
and
loope
mov
adcl
sbb
mov
jno
ja
add
and
arpl
inc
out
dec
or
je
ljmp
xchg
jbe
xchg
mov
jbe
dec
and
mov
roll
clc
ret
push
cmp
mov
pop
orl
push
in
mov
mov
xchg
dec
enter
and
mov
mov
pop
fildll
repnz
inc
aad
jecxz
xor
cmpsl
pop
push
test
dec
ret
dec
insl
mov
sbb
inc
adc
pop
jl
jecxz
xor
xor
mov
es
xor
rcr
pop
push
aam
push
pop
mov
rorb
push
and
cmp
dec
cltd
adc
dec
mov
or
fnstsw
adc
popa
and
mov
enter
out
add
cmp
rcll
mov
mov
movsl
xchg
pop
cmp
push
or
call
mov
fstl
sub
out
inc
in
movsl
mov
repz
out
aas
aaa
or
push
push
data16
xor
add
outsl
insl
les
addr16
movsb
test
dec
pop
das
inc
je
das
test
sub
xchg
vmovmskpd
getsec
mov
jle
fldenv
xor
pop
sub
sub
sbb
push
jl
imulb
cmp
lahf
data16
xchg
ret
fcompl
sbb
aaa
push
ret
ja
rcr
cmp
jge
add
mov
pop
jg
sbb
stos
ss
sbb
fs
mov
arpl
sbbb
and
push
sbb
and
insb
adc
ret
bound
inc
xchg
inc
mov
xchg
push
xchg
sbb
enter
push
push
pop
mov
aas
cmp
test
mov
std
mov
adc
mov
test
insb
cmc
add
ljmp
repz
push
pop
xlat
mov
xor
gs
jo
int
cmc
mov
mov
jge
or
leave
imul
xchg
ss
sbb
or
jns
imul
mov
cmpsl
cltd
xchg
mov
leave
cmp
sub
sbb
or
jns
imul
mov
cmpsl
cltd
xchg
mov
leave
cmp
test
pop
stc
ja
addr16
push
leave
inc
mov
xchg
mov
leave
ret
cmp
sub
sbb
or
jns
imul
mov
or
mov
cwtl
test
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
jge
adc
mov
mov
push
repz
mov
add
adc
loop
repnz
add
jae
arpl
mov
mov
push
repz
xor
inc
ret
adc
loop
repnz
add
jae
arpl
mov
mov
push
fwait
sbbb
lods
adc
and
xor
push
fcomps
xchg
jno
jns
pop
pop
rcl
js
repz
mov
movsb
mov
pop
test
lea
inc
push
fisttps
neg
rclb
inc
lret
mov
mov
cs
mov
leave
lea
scas
push
and
mov
add
gs
adc
mov
sub
mov
movsl
add
std
rcrl
inc
cmp
push
xchg
inc
adc
mov
loope
xor
lahf
int3
je
or
mov
mov
jb
pop
leave
jb
push
push
iret
aaa
loop
rcll
stos
adc
and
adc
add
jae
arpl
mov
mov
push
repz
xor
add
jnp
lea
jbe
mov
sub
repnz
cmpsl
push
lock
adc
inc
mov
add
lock
ret
xor
cmc
inc
xchg
sbb
cmp
mov
stos
inc
mov
jae
arpl
mov
mov
push
repz
xor
add
adc
loop
repnz
add
jae
arpl
mov
mov
push
repz
xor
add
adc
loop
mov
test
cld
pop
push
fiaddl
rcll
adc
ret
popf
and
mov
inc
push
mov
out
or
xor
push
lock
pop
les
pop
xchg
and
pop
insl
sbbl
xor
or
pop
js
adc
lock
aad
pusha
cmp
aad
in
xchg
and
pop
add
addr16
mov
xlat
test
ret
cld
add
adc
push
in
xchg
cmp
outsb
and
fiaddl
cmp
stc
repnz
insl
outsl
adcl
mov
lock
loop
das
xor
adc
lret
and
xchg
andl
lods
mov
mov
mov
sbb
or
int3
and
add
mov
fbld
inc
jl
inc
aam
call
outsb
stos
into
fs
xor
pusha
repz
lock
xchg
orl
mov
sahf
xor
or
cmp
inc
cmp
mov
sbb
sub
adc
add
addr16
orl
cmp
fwait
cmp
xor
enter
outsl
pop
jno
into
adc
shr
cmp
popf
sbb
pop
mov
fs
loope
pop
xor
shll
in
roll
out
mov
sub
cmpsb
je
jae
push
push
aaa
sbb
pushf
data16
shrl
jnp
pop
add
jp
push
xor
nop
icebp
pusha
and
jecxz,pt
add
rcrb
and
in
push
mov
mov
mov
sub
imul
and
imul
cld
into
mov
aad
jbe
fs
cmpsb
stos
push
inc
jmp
cmp
jno
rclb
mov
ret
sti
mov
xor
repnz
cli
push
sub
dec
and
fiadds
sti
outsb
fstp
adc
lds
sub
add
or
xor
enter
int3
push
mov
dec
mov
cmpsb
jecxz
rcrl
xchg
cmpsl
jle
sub
lods
movsb
clc
sahf
mov
test
pop
rorb
add
xchg
loope
call
jmp
lahf
hlt
push
test
mov
out
out
xchg
jbe
dec
mov
sti
add
loopne
lods
daa
bound
test
jg
and
xchg
fsubrl
out
xor
outsb
xor
imul
gs
jno
jmp
sahf
mov
push
test
xchg
cld
ret
cmp
mov
cmp
and
cwtl
aad
dec
pusha
xor
mov
rcll
jbe
inc
xor
rcrl
out
cli
xor
hlt
or
in
fmulp
dec
mov
adc
mov
aaa
loope
aam
test
rcrl
hlt
or
push
mov
jmp
dec
or
jle
adc
scas
and
sbb
adc
push
adc
sub
dec
les
shll
xor
dec
ret
fistpl
mov
sarb
clc
out
jae
mov
js
arpl
insb
aad
dec
call
mov
sbb
test
imul
lret
mov
sbb
fs
call
es
repz
fs
push
insl
mov
adc
mov
cltd
jp
loopne
mov
pushf
enter
push
xor
xchg
or
cld
push
add
andnps
push
jp
stc
and
arpl
dec
bound
lods
leave
push
mov
hlt
js
lods
scas
imul
insl
out
push
jnp
inc
push
add
jp
movsb
js,pt
pop
mov
cmp
cmpsb
xchg
je
shlb
inc
insl
rcrb
das
and
dec
je
out
push
lods
stc
scas
push
iret
inc
sbb
jne
xor
jecxz
cli
in
stc
shrb
jmp
jecxz
lds
stos
mov
ss
insb
out
adc
es
enter
dec
push
pop
sti
mov
and
add
leave
fidivrs
or
sbb
add
xor
int
stos
inc
lcall
sub
fidivrl
rdpmc
out
mov
cmp
mov
and
mov
dec
cld
push
inc
push
ljmp
aam
inc
ret
pop
inc
push
adc
lods
jo
push
cmp
mov
nop
push
hlt
mov
ljmp
or
out
js
adc
pop
xor
inc
mov
mov
mov
cmp
pop
mov
rorl
xor
pop
cli
shr
sub
out
add
mov
test
xor
call
mov
pop
xchg
fsub
push
lea
rcrb
mov
push
xchg
push
mov
cmc
dec
rcr
je
test
cmp
sbb
scas
je
mulb
add
out
xor
icebp
xor
enter
add
sub
int
mov
mov
mov
pushf
data16
push
insl
lea
loopne
xchg
test
movsb
rolb
mov
insl
inc
cmp
ds
xchg
loope
cwtl
mov
ret
pop
rorb
addr16
sti
lea
arpl
xchg
lret
mov
lods
cltd
xlat
push
aaa
and
enter
cmp
mov
push
loopne,pt
loope
arpl
jge
lret
add
lds
xor
cli
sub
push
pop
cld
mov
ret
adc
pop
add
add
fucomip
push
subb
cwtl
adc
cmp
pop
dec
jle
push
cmpsb
bound
lcall
xor
mov
mov
pop
xchg
repz
mov
sbb
cltd
mov
test
fistl
into
call
sub
jle
and
jp
push
add
push
push
imul
iret
mov
sbbl
sbb
dec
xchg
push
mov
cmpsl
negl
fisubrl
icebp
inc
fdivl
pop
pop
outsl
insl
sti
lret
int3
test
test
cld
rorb
inc
dec
sahf
aam
or
sbb
xchg
js,pn
clc
repz
aas
cltd
jge
aas
and
sti
dec
jg
insb
jbe
cmc
sarl
aaa
rcrl
shrb
ret
stc
jg
leave
mov
push
mov
xor
xchg
and
pop
enter
pop
cld
nop
les
cmp
pop
neg
mov
hlt
stos
pusha
out
mov
je
pop
sbb
jl
mov
mov
jns
mov
cmp
push
jmp
inc
outsb
aas
inc
sbb
dec
ss
push
mov
in
add
out
insb
sbb
mov
push
sbb
push
fisubrs
outsb
jmp
imul
pavgb
adc
lods
std
lock
aam
into
add
test
sub
stos
ror
and
mov
sub
repnz
movsb
inc
lahf
push
and
xchg
rclb
sub
and
inc
mov
fcmovnbe
popf
in
addr16
pusha
sbbl
fld
test
in
call
rorl
dec
aaa
aas
mov
ret
and
jnp
mov
xchg
mov
shr
test
ss
push
call
into
push
daa
or
mov
xchg
out
shll
or
je
xor
insl
and
xor
jo
into
xchg
mov
cld
aam
jne
xchg
inc
jmp
xchg
das
hlt
lret
sbbb
add
add
and
inc
fldcw
xlat
xchg
lods
or
outsl
in
cmp
mov
fbstp
cmp
jl
js
jg
inc
cli
sub
xchg
xor
das
cmp
inc
shll
call
call
xchg
cltd
int
rcr
movd
gs
mov
dec
sbb
pop
lret
pop
push
sbb
push
xlat
icebp
xor
mov
test
sub
push
call
dec
xchg
push
push
mov
xor
movsl
out
xchg
scas
ljmp
outsl
jb
pop
scas
lcall
cmp
mov
and
adc
sti
mov
aaa
and
cwtl
mov
test
mov
sub
mov
sub
test
xor
inc
and
mov
xchg
xchg
cwtl
dec
sbb
sarb
idivl
add
xchg
adc
mov
enter
inc
loopne
daa
push
cs
ds
sbb
push
adc
cmp
and
and
mov
xchg
std
xchg
sub
and
loope
and
xorb
mov
cmpsb
insb
icebp
sub
leave
insb
lock
stc
scas
inc
leave
aas
orb
cmp
push
dec
inc
lcall
xor
push
arpl
jl
cmpsl
push
stc
fnstenv
in
inc
mov
push
fwait
scas
lods
lahf
stos
sti
popf
add
rcll
addr16
out
nop
xchg
push
jb
rcrl
lret
mov
ss
outsl
stos
sbb
mov
pop
ret
fwait
pop
out
sbb
cmpsb
jle
and
push
push
or
shlb
push
cmpsl
insl
call
sbb
out
xchg
sub
repz
or
in
mov
rclb
mov
pusha
cmp
fs
lds
or
dec
xchg
inc
int
inc
cmp
mov
push
mov
int3
nop
pop
rol
out
imul
mov
xor
sbb
xor
add
je
push
pop
scas
mov
cld
repnz
and
jp
outsb
fcompl
sahf
test
mov
pusha
icebp
sbb
jbe
imul
xor
shr
push
mov
mov
rcrl
jecxz
mov
cmpsl
pop
mov
jmp
cmpsb
sub
sub
fcomp
sbb
scas
lods
add
stc
dec
pop
repnz
jle
xchg
shl
or
imul
loope
or
mov
jle
pusha
cmp
and
inc
inc
dec
aad
pop
adc
jecxz
fistpl
jp
dec
mov
enter
adc
mov
xor
mov
mov
lret
inc
sbb
adc
hlt
pop
lods
mov
jno
xchg
mov
mov
fsubr
dec
sti
cmpsl
jb
inc
inc
cmp
jno
inc
out
mov
test
or
cmc
cli
ljmp
pop
mov
pop
mov
fisttps
test
push
xchg
fsubrl
xor
push
cmp
add
in
cmp
rorl
aam
add
xor
aaa
push
push
cmp
lea
and
je
adc
adc
or
lea
repz
mov
fmull
and
lret
dec
in
push
lea
in
or
scas
imul
mov
movsb
repnz
add
and
xchg
xor
cmp
xchg
outsb
fnstcw
sbb
or
sub
subb
mov
push
in
cmpsl
les
scas
movsl
push
out
cli
push
ja
inc
cmp
cmp
daa
lea
nop
push
mov
mov
sbb
dec
out
loopne
into
mov
mov
or
lods
and
mov
mov
cltd
fisttps
add
mov
xor
mov
dec
and
repnz
jnp
mov
repz
pop
rclb
mov
adc
sbb
xchg
sub
or
cmp
xchg
sbb
cmp
push
pop
mov
lret
rorl
movsb
jl
xor
repnz
add
into
je
inc
jbe
jl
dec
mov
les
push
scas
call
xchg
fistpl
stos
dec
sbb
xchg
mov
push
cmp
push
bound
push
add
add
stc
push
popa
rcrl
testl
xor
ficomps
xor
mov
push
mov
movsl
cmp
sbbb
nop
mov
inc
pusha
leave
shll
iret
stos
jae
ljmp
das
dec
and
sbb
mov
dec
or
outsb
int3
lea
cmp
ss
adc
roll
add
inc
lcall
fwait
jmp
mov
adc
ja
fisttps
loope
adcl
mov
ljmp
loop
cmc
inc
sub
add
stos
fisttps
fwait
jns
mov
xchg
movsb
jecxz
push
sbb
inc
mov
popf
cmp
or
mulb
push
cwtl
into
mov
mov
fdivl
inc
shll
lret
movb
push
scas
cmpsb
sub
loopne
jnp
xlat
test
jl
inc
aaa
or
push
ds
add
jg
mov
dec
in
out
and
flds
jo
add
inc
push
rcrl
cmp
je
lret
icebp
mov
dec
lcall
pop
mov
dec
lds
out
pushf
enter
push
add
leave
bound
jg
subl
sub
int
push
sbb
out
cwtl
pop
push
and
out
add
dec
int3
pusha
jno
inc
aam
xchg
pop
inc
fisubl
scas
jecxz
js
pop
jno
xor
and
int3
add
int3
sbb
cmp
and
call
cwtl
hlt
insb
jne
imul
jns
push
jmp
xchg
test
xchg
sub
dec
outsb
and
pop
insl
dec
adc
xor
adc
lock
aad
xlat
cmp
clc
jb
inc
dec
repz
cmp
cltd
adc
insl
or
mov
fnsave
xchg
push
call
sbb
sbb
xlat
stc
aas
iret
xor
xchg
ds
add
jno
stos
push
pop
or
cld
xor
pop
push
ret
pop
in
cmp
add
and
pop
jg
jl
pop
push
movsl
fwait
addb
stos
pop
ror
xchg
mov
and
sbb
xor
in
dec
out
stc
push
jb
push
xorl
cmc
fsts
cmp
addl
int3
int
jbe
and
adcb
shrl
dec
out
enter
mov
lods
shlb
mov
inc
xchg
cld
repz
xor
cmc
jle
pop
stos
xor
das
cmp
mov
xchg
and
jg
pop
mov
stc
push
jb
js
adc
adc
leave
pop
int3
fcomps
imul
iret
scas
xchg
iret
fwait
ret
scas
lds
inc
push
adc
data16
aaa
cli
add
in
shl
sbb
sbb
subl
ljmp
adc
repz
sbb
testl
outsl
xchg
pushl
pop
clc
cmp
add
sbb
je
loopne
add
aam
in
sub
push
mov
iret
inc
sbb
gs
mov
cmp
cmpsb
add
fldcw
aas
xchg
lea
adc
sub
adc
cwtl
loope
sahf
add
mov
jb
jne
sbb
repz
sahf
es
pop
test
adc
add
dec
divl
outsl
scas
das
jp
jge
push
jns
mov
stc
pop
cwtl
or
lret
movsb
daa
push
js
mov
int
add
call
test
xor
mov
out
xor
bound
daa
cmc
or
jecxz
sti
xlat
cmpsl
in
sarb
sub
arpl
jno
sbb
ljmp
push
xlat
mov
xor
pop
cld
add
outsl
cmp
or
leave
mov
jmp
loopne
cwtl
dec
mov
imul
clc
lods
mov
int
fidivl
stos
ljmp
bound
push
push
loopne
pop
xchg
dec
loopne
xor
jge
mov
pop
cmc
stos
jmp
outsl
push
lret
push
pop
add
and
ret
fbstp
stc
and
cli
add
mov
pop
sbb
adc
clc
push
enter
pop
cmp
daa
movsb
mov
mov
iret
mov
insl
fistps
mov
inc
outsb
jnp
cmpl
cmpsl
jnp
push
mov
jne
push
xchg
cli
mul
mov
cmp
xchg
xchg
xor
jbe
mov
mov
xchg
into
sbb
outsb
lods
xchg
jmp
xchg
rcr
jl
pop
mov
lcall
std
fldt
jnp
or
mov
stc
sub
stos
std
clc
adc
pop
inc
mov
add
bound
lcall
inc
push
dec
jmp
mov
pop
mov
loop
loopne
inc
and
and
xchg
fisttpl
inc
int3
or
sbb
out
nop
ret
cmpsl
out
add
cmp
repz
dec
cmp
xchg
push
jne
dec
jbe
fisubrs
cmpsb
push
sub
dec
inc
sub
shll
cmc
jge
ret
int3
outsb
sbb
push
jg
pcmpeqb
jo
jecxz
inc
mov
ret
push
mov
scas
xor
mov
test
inc
lods
call
mov
scas
sub
loope
mov
cmp
ljmp
aam
jg
xorb
sbb
aam
pop
xchg
mov
or
sub
adc
data16
inc
adc
shlb
and
or
loop
jo
lcall
xor
push
add
aam
movsl
adc
sub
pop
sub
test
adc
incl
popa
inc
mov
dec
inc
scas
xorb
sbb
sbb
push
sub
arpl
lret
mov
or
fsubrs
inc
dec
mov
mov
dec
fldl
shlb
xor
push
lds
fstpt
pop
adc
lods
inc
dec
sub
fcmovu
add
push
dec
andb
cwtl
sarb
out
rolb
push
es
enter
imul
fisubl
mov
aaa
pop
adcb
mov
mov
add
test
mov
inc
loope
mov
in
and
add
aad
mov
mov
bound
jge
rcl
mov
aaa
sub
push
in
sbb
fildl
stos
mov
into
enter
ret
orb
or
push
jnp
cmp
inc
sbb
lea
mov
into
fdiv
mov
or
xchg
push
out
pusha
pop
adc
fistpll
cmpb
jg
push
insb
lcall
or
cmp
hlt
and
fdivp
ret
lahf
mov
or
in
mov
pop
cmpsb
mov
fwait
jl
sbb
scas
ret
gs
sub
popf
std
adc
jge
mov
fwait
mov
aad
nop
shrl
ljmp
jo
test
scas
das
sbb
addr16
inc
movsb
sbb
xchg
inc
dec
and
xor
jb
insl
stc
int
frstors
js
fistps
and
mov
pop
stc
push
xchg
cmpsl
cmp
pop
adcl
push
ret
fisubs
outsb
cmc
pop
dec
mov
or
mov
lods
and
push
and
and
cmp
push
ljmp
out
jecxz
int
mov
xor
pushf
fucomi
divb
push
stos
xor
pushf
adc
scas
out
add
test
imul
arpl
cmp
sub
adc
out
and
mov
push
lret
push
fdivrs
icebp
js,pt
loope
in
fbld
pop
xchg
pop
push
push
inc
call
or
inc
xor
push
mov
sti
xor
pushf
mov
inc
push
inc
mov
push
out
and
jle
sti
lcall
aaa
cltd
mov
bound
sbb
es
adc
popa
adc
push
push
adc
out
frstor
cmc
ljmp
jmp
mov
add
nop
shrb
push
or
repz
inc
and
call
pop
push
push
and
or
adc
xor
adc
stos
cmc
add
cli
out
mov
pop
inc
pop
xor
rclb
xchg
xor
mov
lea
cmp
xor
pop
ljmp
fidivrs
pusha
hlt
mov
test
sbb
cmc
sub
mov
inc
or
in
aaa
sbb
cltd
pop
daa
test
fidivrs
adc
ds
pop
cli
lahf
mov
movsl
dec
push
add
pop
push
test
dec
adc
enter
mov
xlat
add
mov
dec
and
mov
imul
mov
jno
push
adcb
xor
xorl
xor
sbb
std
movsl
iret
pusha
mov
mov
inc
inc
iret
jb
cmp
inc
or
xlat
stos
sbb
lods
rclb
mov
or
outsl
dec
loope
add
inc
outsl
or
sub
rcrl
pop
cs
cmpsb
cmp
inc
into
xor
pop
jg
call
nop
cmp
int3
ud0
mov
sub
mov
inc
lds
in
pop
sti
std
mov
into
cmp
jle
or
push
pop
push
shlb
and
lea
xor
sti
push
jl
hlt
mov
mov
push
lret
sub
xor
insl
xor
xor
ficomps
cmpsb
in
xorb
icebp
fstpt
or
lods
dec
popa
pop
pushf
repnz
add
jae
arpl
mov
mov
push
repz
xor
add
adc
loop
repnz
add
jae
arpl
mov
mov
push
repz
xor
add
adc
loop
jb
inc
add
jae
arpl
push
addb
loop
jb
inc
adcl
jecxz
roll
ret
adc
loop
repnz
add
jae
arpl
mov
mov
and
sub
cmp
jmp
push
sub
sbb
sub
cmp
jecxz
call
jbe
inc
cwtl
push
mov
pop
xchg
dec
out
imulb
sbb
es
ss
xchg
adc
jl
ss
add
push
testb
pusha
ljmp
lret
pusha
mov
sub
xor
and
sub
or
sub
ret
leave
adc
lcall
add
ret
stos
jnp
stos
mov
sub
push
mull
daa
std
cwtl
jecxz
out
adc
vmovss
add
mov
mov
out
push
data16
leave
clc
stc
fld1
ss
dec
sti
push
mov
or
js
push
out
or
fcom
test
jge
or
daa
jmp
and
and
push
mov
or
sbb
hlt
out
mov
adc
mov
and
xor
inc
push
into
mov
jecxz
jbe
add
xchg
hlt
mov
xchg
dec
out
mov
sbb
aam
movsb
inc
or
push
test
inc
xorb
aam
rolb
xor
and
popf
addl
mov
inc
mov
ja
ud0
xor
adc
cmpsb
ds
and
push
jp
jno
cmp
cltd
ja
arpl
adc
aam
test
mov
sbb
or
clc
ss
mov
inc
cwtl
push
mov
pop
xchg
dec
out
imulb
sbb
or
clc
ss
mov
inc
cwtl
push
mov
and
cltd
and
mov
xchg
and
pop
repnz
in
sub
in
into
pop
cmpsl
popa
jbe
inc
mov
in
inc
xchg
fwait
push
sbb
loope
jecxz
je
xor
inc
dec
mov
jne
test
orb
fcoml
pop
into
adc
rcrl
push
and
pushf
sbb
jmp
mov
xchg
xor
mov
push
shrb
dec
lds
mov
out
ja
es
dec
incl
ljmp
mov
cmp
dec
fadds
jg
clc
push
push
push
mov
sub
jmp
mov
mov
cmp
push
stc
and
and
cmp
inc
adc
mov
outsl
mov
sbb
mov
jo
xor
mov
cld
inc
pop
or
or
and
outsb
inc
stos
jae
adc
in
in
mov
in
icebp
jmp
and
pop
add
xor
mov
mov
dec
out
mov
add
sti
pop
aaa
aad
pop
add
add
pop
lock
out
and
hlt
xchg
imul
popa
pop
in
stos
insb
mov
es
fldt
rorl
mov
pop
pushf
jne
mov
dec
nop
dec
jo
imul
out
pop
sub
xchg
leave
lret
adc
popa
mov
push
and
or
or
test
push
pop
xchg
insl
cmc
inc
aad
sahf
frstor
pusha
divps
test
and
pop
insl
xchg
mov
fstpt
xchg
sub
mov
pusha
jmp
push
arpl
sahf
out
lret
pop
xchg
mov
push
arpl
std
lock
int
jg
rcrb
dec
or
xchg
push
mov
add
push
rcrl
rorl
andb
notb
add
lods
adc
shll
sub
sbb
lods
in
movd
mov
cmp
mov
je
movsb
sub
testb
cld
push
ss
xchg
xchg
in
pop
dec
outsb
fidivl
pop
test
ror
fldl
pop
xchg
xor
xchg
stc
push
test
clc
ret
mov
mov
xor
ret
push
int3
sub
xorl
adc
imul
lea
lods
or
std
lret
mov
repnz
in
in
mov
aaa
sarb
aas
mov
fcoml
popa
je
adc
pop
int
sbb
dec
push
cmpb
push
lods
mov
es
jmp
cwtl
mov
pop
enter
cltd
test
adcl
cld
call
data16
mov
mov
int3
add
dec
xchg
test
and
sbb
lds
shrb
mov
push
das
das
sub
movsl
adc
leave
dec
in
jge
ss
mov
call
std
addl
int
shl
repz
rcrl
lock
enter
std
popa
xchg
inc
dec
scas
arpl
jmp
pusha
cwtl
insl
mov
mov
mov
std
in
addl
mov
and
jnp
adc
arpl
push
add
xchg
xor
xor
icebp
das
mov
jecxz
bound
scas
pop
jae
sub
imul
or
push
je
and
xchg
inc
cltd
ljmp
mov
inc
imul
popa
fadds
shlb
or
inc
jp
pushf
imul
adc
cmpsl
lret
ds
stos
and
sbb
cmp
sbb
fcmovu
test
add
sub
repnz
pop
or
cs
mov
fwait
xor
or
popa
clc
add
loop
mov
jbe
cli
add
push
mov
fildl
test
loopne
decl
aaa
pop
fwait
addl
xchg
xor
xchg
push
jne
enter
dec
mov
cld
out
gs
push
andl
jg
jb
imul
push
xchg
andb
js
inc
pushl
cmpsb
movsl
decl
scas
dec
loope
pop
add
xchg
xor
aam
sbb
or
cmpsl
jp
pop
dec
mov
cmp
lock
jmp
mov
push
push
mov
mov
lahf
inc
jp
into
test
pop
rolb
and
mov
mov
nop
mov
jge
and
into
stos
push
clc
sbb
mov
decb
data16
aad
idivb
ss
pop
xor
adc
mov
xlat
mov
repz
sbb
sbb
int3
sbb
cmp
add
les
mov
dec
xor
pop
cli
jl
xor
cltd
bound
mov
in
fwait
dec
push
andl
mov
xchg
pop
mov
lods
call
inc
cmpsl
hlt
pop
push
or
cmpsb
out
pop
sub
inc
popf
pop
adc
or
jo
addr16
popa
rcrb
insb
outsb
sbb
lds
push
frstor
js
pop
add
or
pop
das
push
jl
fs
cltd
xchg
lret
mov
inc
jmp
and
bound
inc
dec
cli
mov
and
xacquire
xchg
lds
insb
mov
scas
sahf
shrb
mov
push
fisttpll
ljmp
adc
cmp
movsl
iret
sub
lcall
pop
pop
mov
dec
push
scas
leave
lret
lods
mov
push
xor
aam
adc
lret
insl
cmp
in
adc
repz
dec
pop
rcr
leave
cmp
jns
add
dec
jb
mov
rcl
add
push
mov
in
cmc
mov
aad
popf
push
jmp
mov
lcall
insb
decb
xor
or
adc
fdivrs
leave
lret
lds
inc
dec
mov
push
adc
cmpb
or
cltd
mov
add
mov
pop
aaa
cs
iret
mov
inc
or
insb
push
cmp
outsl
mov
mov
jnp
xor
leave
clc
out
sub
or
inc
popf
sub
cmp
loope
mov
and
aas
in
shll
xchg
xchg
mov
or
cs
mov
test
mov
sub
or
mov
shrb
je
jmp
pop
push
loopne
xchg
stc
outsb
inc
mov
mov
aam
ss
rcll
test
cmp
and
fdivl
sbb
out
and
adc
scas
push
inc
xchg
out
pop
pop
jns
push
in
lods
jmp
mov
sub
mov
pop
lock
test
fmuls
xor
sar
add
fimull
pushf
add
or
ret
push
pop
dec
cs
lret
test
addr16
movsb
and
pop
data16
and
lahf
movsb
cmpsb
das
push
mov
scas
in
xchg
fcomp
xor
or
xchg
push
mov
xlat
aad
xchg
pop
stos
jnp
out
xchg
cmp
frstor
cmpsb
fisubrl
mov
jle
add
inc
js
push
xchg
pop
ss
leave
ret
mov
lret
sub
and
out
add
adc
and
bound
inc
and
mov
xor
movsb
mov
cmp
push
and
js
insl
cmp
xchg
inc
push
sub
ljmp
cmp
test
pop
sub
inc
cltd
jne
mov
push
movsl
dec
xchg
adc
into
xchg
inc
insl
dec
ljmp
ret
dec
out
sbb
jmp
pop
adc
mov
cmp
leave
psllq
leave
pop
icebp
or
fidivrl
call
cmp
hlt
loope
mov
pop
je
xchg
mov
pop
lcall
pop
shrb
jl
mov
notb
sbb
cli
in
lret
sbb
into
aas
sbb
push
cmp
imul
sbb
gs
shrb
test
and
in
fidivrs
sbb
imul
mov
inc
cli
adc
mov
and
fimuls
ljmp
fimuls
in
mov
sub
lods
cmp
inc
xchg
loopne
dec
mov
sbb
lret
into
mov
push
mov
xchg
mov
pop
mov
les
sub
mov
mov
shll
dec
out
mov
dec
sub
lock
pop
subl
cli
add
das
cmp
adc
xchg
scas
ucomiss
xchg
lods
jne
inc
push
enter
jns
mov
lea
jb
sbb
lret
push
fiaddl
les
mov
leave
push
insb
xchg
sbb
ljmp
jbe
aad
enter
xor
push
jl
mov
mov
pop
ss
sub
and
mov
push
rolb
or
cmp
test
sbbl
into
insl
add
inc
and
fwait
shrb
addr16
lods
mov
pop
mov
rcrb
sbb
adc
scas
loope
lods
ret
scas
pop
jecxz
xchg
sbb
inc
mov
in
inc
lret
not
mov
cmpb
fistpll
aad
sbb
out
pop
push
ret
test
rcrb
pop
xor
jno
out
arpl
mov
adcb
fwait
hlt
movsb
prefetch
imul
xchg
cmp
stos
mov
bound
sarl
push
xchg
inc
jbe
or
pop
push
mov
in
adc
add
xor
rcr
xchg
loop
fcmovnbe
jge
xchg
mov
and
rcll
xor
scas
outsb
aam
sbb
pusha
or
js
scas
in
push
mov
insb
ret
lods
add
loop
out
dec
mov
insb
imul
inc
loop
xchg
pop
das
imul
sbb
inc
pop
mov
fbld
std
shrb
negl
jnp
mov
psubsw
test
subb
mov
dec
clc
mov
into
mov
nop
sarb
dec
outsl
sbb
rol
xchg
pop
dec
ret
cs
mov
or
insl
mov
das
das
jns
pop
mov
mov
fnstsw
fsubrs
repnz
or
ret
mov
jl
lods
out
mov
xlat
inc
mov
mov
es
lahf
cmpsb
outsb
push
mov
add
xlat
lahf
cmpsb
add
add
stos
pop
aad
jnp
addr16
das
pusha
in
into
mov
lock
xchg
add
push
das
inc
sub
and
aas
dec
in
jo
push
stos
mov
stos
sahf
stos
sbb
jns
call
or
cmpl
sbb
add
ret
sti
pop
mov
mov
jns
pusha
cmp
xor
push
bound
sbb
push
inc
sbb
cmp
jb
sbb
sub
add
pushf
mov
inc
lods
sub
mov
es
mov
mov
pop
cmp
fsubr
mov
fimull
add
jl
testb
jb
xchg
fucomp
bound
mov
outsl
pop
pusha
dec
rcr
pusha
pop
repnz
cwtl
dec
jle
mov
mov
callw
leave
in
cwtl
xor
aad
fidivrs
insb
xchg
sahf
mov
mov
shrb
push
or
and
leave
jne
insb
imul
push
aaa
xchg
arpl
sub
push
dec
in
scas
scas
jecxz
sbb
cmp
push
mov
aaa
pop
xchg
subl
adc
int3
js
dec
shll
sbb
jmp
xor
repnz
jae
mov
cmp
add
xchg
sbb
lcall
pop
aam
test
jbe
cmp
scas
add
cmp
unpcklps
cmp
movsb
sbb
dec
fwait
int3
and
xchg
scas
and
fistpll
adcb
mov
xor
fldl
sahf
lret
sbb
dec
lahf
jno
sti
insb
scas
jns
add
sbb
pusha
dec
xor
sub
adc
subb
ficompl
mov
jbe
shlb
js
dec
and
pop
jno
sub
pop
and
ja
jmp
fidivl
inc
sbb
sahf
stc
sbb
sbb
dec
fists
loopne
sub
jecxz
pop
pushf
add
xchg
out
inc
enter
xchg
frstor
pop
and
mov
xchg
lahf
lret
sbb
mov
mov
add
inc
cmp
adc
cmpsb
push
repnz
push
pop
mov
push
add
xor
mov
mov
outsl
aaa
or
test
jb
into
sti
or
inc
in
pop
lcall
outsl
js
or
push
jno
in
inc
jbe
dec
jne
sbb
push
sub
popf
mov
gs
call
das
inc
push
cmp
clc
mov
clc
sbb
ja
lods
push
into
xlat
jo
mov
mov
cmpsb
mov
mov
mov
cmpsl
in
mov
push
and
add
dec
jecxz
pop
test
and
das
jp
idiv
lahf
dec
mov
push
sbb
imul
dec
pop
not
dec
fmull
cmp
sub
mov
push
ss
jns
test
imul
mov
loop
cmpsb
ret
inc
jnp
dec
fsubrl
push
outsl
ret
mov
lock
cmpsb
mov
scas
test
scas
rorb
int
aad
mov
cltd
xchg
ret
addr16
lret
idivb
fwait
cli
jbe
fmull
shll
loope
or
flds
jp
xlat
jle
outsb
scas
jb
pop
push
int3
push
loope
shl
lea
pcmpeqw
repz
fdivp
mov
leave
push
or
pop
stc
cmpsb
xchg
cmp
jl
ret
add
decb
scas
mov
mov
xchg
popf
mov
push
into
pop
scas
aad
popf
fstl
jne
sbb
sbb
shl
xchg
cmpsl
inc
cmc
inc
js
xchg
frstor
aad
fstps
outsl
or
lods
xchg
out
outsb
mov
inc
inc
in
inc
cmp
sub
jnp
sub
outsl
pop
cmp
test
dec
inc
pop
or
mov
dec
xchg
jg
cmp
jl
jbe
icebp
pusha
xchg
out
mov
xchg
sti
les
mov
jne
mov
sub
test
mov
mov
or
push
mov
jne
sub
pop
mov
xor
enter
and
outsl
push
in
nop
or
insl
aam
ss
lret
adc
enter
in
add
call
sahf
ds
mov
sbb
dec
rcr
push
xor
pop
fwait
xchg
sbb
sub
mov
sbb
js
insl
stos
sub
icebp
pop
stos
mov
or
out
xor
mov
aad
push
push
sub
mov
popl
push
dec
add
call
repz
movsl
into
daa
andb
sub
aaa
xlat
ftst
and
addr16
fmull
xchg
pop
subb
ret
push
push
jo
push
lahf
test
pop
dec
fisubrl
pop
faddl
das
repz
cmp
pop
jp
call
push
idiv
scas
mov
sbb
jae
jne
testl
xchg
push
orl
int
out
hlt
int
in
sti
lock
aam
scas
push
rclb
sbbb
rcrb
push
xor
stos
adc
call
sub
cli
cmpsb
movsb
int3
dec
push
xor
repz
call
das
and
adc
addr16
mov
pop
je
adc
cmp
xchg
std
hlt
in
das
or
sar
shr
xchg
fwait
rcl
add
jg
pop
jae
insl
and
sub
insb
fdivrs
mov
xchg
xor
or
stos
xchg
push
icebp
and
fdivs
adc
test
adc
mov
inc
sti
dec
pop
ret
call
push
stc
std
mov
out
jp
repnz
fdivs
jbe
pop
adc
mov
inc
cmpsb
push
loop
dec
mov
add
scas
repz
in
sbb
cs
loope
daa
pop
je
cmp
in
and
mov
dec
fdiv
test
adc
inc
pop
aaa
scas
rol
cmc
int
xchg
jmp
mov
adc
cmpsb
jg
dec
aaa
sbb
gs
inc
or
jne
rcl
std
jae
sub
fdivrp
lcall
cltd
inc
adc
and
lds
bound
icebp
jle
cmp
testb
sbb
fwait
mov
xchg
cmp
imul
xchg
mov
adc
icebp
loop
notb
xor
jle
out
cmp
xchg
and
cmp
push
mov
xchg
mov
stos
in
jo
push
fs
in
pop
pop
lods
clc
fcmovnu
inc
push
cmp
and
mov
inc
push
movsl
cmp
inc
sub
jnp
in
fs
bound
cmp
fs
scas
insb
adc
das
cmp
xor
divb
push
pop
mov
sbb
scas
mov
and
jmp
pop
and
mov
fistpll
jne
dec
pushf
sub
push
xchg
jae
sub
dec
cmp
dec
inc
pop
or
int
incl
sbb
es
sub
dec
dec
mov
scas
and
insl
aaa
pop
stos
arpl
sub
sub
shll
pop
cwtl
inc
nop
pop
mov
or
stc
insb
add
scas
arpl
sbb
and
mov
cli
das
dec
xchg
mov
and
fidivs
mov
mov
dec
add
mov
popa
lods
dec
cltd
sbb
push
fdivl
add
popf
ss
cld
imul
dec
xchg
cmpsl
and
out
cmp
add
insb
push
xlat
mov
push
and
push
fwait
fs
bnd
add
and
push
mov
in
inc
dec
lds
mov
push
jae
cmp
imul
out
out
mov
sahf
cmp
push
js
xor
mov
push
push
lods
mov
pop
dec
jno
xchg
cmp
adc
shrb
int3
stos
sbb
stc
xchg
jge
xchg
inc
sbb
gs
xlat
sahf
stos
lcall
push
shl
xchg
in
sub
ljmp
mov
dec
mov
pop
mov
hlt
sahf
or
mov
lret
sbb
call
inc
popa
in
add
pushf
sub
iret
sti
clc
push
lods
xchg
icebp
scas
xchg
mov
dec
add
inc
xchg
ficoml
jg
adc
mov
xor
push
idiv
iret
xchg
in
into
in
sti
xchg
push
loop
xor
jle
mov
xchg
xchg
test
outsb
mov
fidivs
jno
jg
shl
add
mov
sbb
sub
test
pop
xor
stos
jno
mov
adc
ss
sub
jp
fcmovbe
mov
loop
lock
fbld
push
add
adc
adcb
or
dec
stos
push
sbb
mov
call
je
xchg
xchg
lahf
mov
xchg
xchg
outsl
in
cmpb
mov
fisttps
shll
repz
out
jb
aad
arpl
and
pop
daa
ja
pop
pop
adc
aas
sub
mov
sbb
xor
adc
jns
test
fistpl
cwtl
jbe
ret
int3
ss
mov
jno
dec
adc
dec
push
inc
fisubrs
mov
jle
leave
jle
mov
enter
filds
push
sub
or
pop
movsl
ret
imul
cmp
pop
outsb
outsl
mov
cmpsb
xlat
and
mov
dec
mov
lock
cmpb
xchg
ja
pop
flds
daa
push
inc
cmp
insl
outsl
inc
jg
mov
cmpsb
push
lea
or
xor
push
jbe
call
stos
js,pn
ja
or
sti
arpl
fldl
out
xor
and
sub
mov
pop
imul
sbb
lds
lea
mov
push
mov
xchg
pop
pop
cmp
fwait
int3
xchg
ret
test
outsb
lea
or
sbb
inc
fsubrl
mov
mov
jno
rcll
negb
es
ja
mov
push
testb
dec
fadds
sbb
push
mov
jb
add
xor
fisttps
mov
enter
jae
mov
loope
cmpsl
mov
daa
xor
bound
jns
adc
rcrb
adc
push
pop
shlb
pop
and
fwait
sti
pop
in
adc
and
sub
pusha
jno
test
int3
pop
push
cwtl
and
xorl
imul
lret
push
cltd
fistl
pop
lcall
mov
cli
push
jecxz
insb
repz
sub
cmp
jne
xlat
leave
pop
inc
jns
adcb
jge
or
xchg
in
mov
pop
mov
cmp
sub
sbb
or
clc
ss
mov
inc
cwtl
push
mov
pop
xchg
dec
out
imulb
sbb
or
clc
ss
mov
inc
cwtl
push
mov
inc
xchg
dec
out
repnz
sbb
or
stc
ss
psubusb
shll
test
xchg
data16
mov
mov
out
cwtl
push
enter
inc
lods
fcoms
mov
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmpsb
aad
xor
jo
hlt
xor
dec
sub
or
add
add
add
pop
add
mov
or
or
add
add
push
add
inc
add
outsb
add
flds
mov
movl
pop
add
add
xchg
push
js
jle
out
add
add
fiaddl
adc
add
add
push
movl
jne
pop
add
add
xchg
enter
mov
xor
aad
movl
outsl
add
outsb
add
add
add
add
mov
xchg
add
add
add
add
mov
and
inc
add
add
add
add
add
add
add
add
add
gs
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
out
out
mov
add
add
add
push
add
add
add
add
add
fwait
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
sub
pop
add
add
add
inc
add
add
add
add
mov
add
mov
add
nop
add
add
add
mov
xor
add
jne
aad
test
sub
pop
add
mov
dec
add
add
add
add
push
movl
aad
inc
add
add
add
add
dec
add
add
add
add
add
clc
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
popa
add
rolb
add
add
add
add
add
add
add
dec
add
add
add
add
out
add
mov
dec
add
add
add
add
add
add
xchg
out
add
push
and
loope
movsl
add
add
mov
add
add
add
add
add
add
add
mov
add
sbb
insl
add
add
addb
add
add
add
add
add
add
inc
add
add
add
add
add
xchg
bound
jne
xor
mov
add
roll
add
lock
add
add
add
add
xchg
add
add
mov
mov
push
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
das
add
icebp
add
roll
add
add
add
aad
movb
add
add
add
add
add
add
add
add
xchg
add
dec
add
add
add
add
add
out
out
xor
sbb
add
add
add
roll
and
sub
push
add
adc
add
add
add
add
push
add
add
add
add
add
pop
inc
mov
dec
cmpb
mov
inc
data16
xchg
add
ja
sub
fnstenv
outsb
loop
and
shll
cmp
push
xor
add
lret
rclb
out
fbld
or
and
cmp
hlt
jl
imul
push
push
in
in
xor
cmp
xchg
das
push
stos
jecxz
aaa
sahf
add
add
dec
pop
pop
sbb
fstl
outsb
mov
pop
jns
bound
sbb
mov
je
scas
adc
lret
dec
idiv
cmp
jmp
mov
gs
lcall
outsl
std
cmp
adc
outsl
lret
out
or
push
xorl
leave
insl
and
aad
jo
or
mov
jl
mov
push
in
outsl
arpl
push
mov
push
mov
out
int
sub
push
and
adc
outsb
cmp
or
ja
repnz
dec
movsb
fisubrs
and
mov
iret
std
icebp
jne
jb
rcl
fcmovne
int
shl
xor
mov
mov
jge
mov
lods
and
xchg
pop
sti
sbbb
jg
mov
shl
xchg
fs
inc
cld
icebp
add
xchg
testb
mov
and
pop
xor
rorb
adc
or
mov
inc
inc
jp
add
popf
xchg
sbb
xor
lahf
cmp
inc
notl
inc
mov
xchg
cld
mov
mov
dec
insb
test
cli
lea
filds
imul
push
xchg
lea
mov
mov
fnstenv
inc
sub
inc
aad
mov
pop
cmc
ss
pop
jo
or
out
das
jmp
int
enter
ficompl
sbb
out
into
mov
fcomps
sub
jae
mov
shll
pop
call
cmp
inc
mov
sti
and
jmp
mov
xchg
cwtl
int3
mov
sbb
and
les
jp
dec
inc
orb
sahf
jno
sbbb
or
jle
mov
jp
inc
jbe
xor
and
sub
cltd
jbe
push
shl
xor
fldcw
cmpsb
imul
cwtl
mov
pop
xchg
or
nop
jbe
pop
mov
sti
xor
mov
fisttpll
mov
dec
shll
inc
js
jno
repz
inc
or
icebp
xchg
jmp
in
cmc
and
and
pop
xchg
movsl
mov
ss
push
add
pop
mov
inc
ficomps
stos
repz
scas
mov
jne
mov
mov
fwait
andl
cmpsb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
