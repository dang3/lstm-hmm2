decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
inc
cmp
pop
scas
cmp
pop
inc
xlat
jecxz
mov
xchg
lret
or
mov
cmpsb
jg
or
jbe
pop
push
dec
push
jnp
imul
mov
stos
out
in
test
mov
cmpsb
mov
outsb
repz
movntps
gs
test
rorl
mov
leave
jne
inc
cmp
inc
add
dec
mov
or
mov
repnz
outsb
lret
or
notl
int3
mov
lretw
cmc
test
fldcw
cmp
cmpsb
push
sbb
xchg
fdivr
inc
adc
in
dec
sub
xchg
popf
or
int
mov
scas
pushf
stos
sbb
xor
jecxz
or
fimuls
dec
push
test
mov
aas
or
and
lret
add
dec
jmp
in
push
mov
cmpsl
ret
jae
loopne,pt
mov
push
out
pop
sahf
xchg
lret
xchg
add
out
in
xchg
xor
mov
in
movsb
pushf
mov
jbe
mov
pop
sbb
cwtl
data16
mov
mov
cmp
mov
push
jnp
int
pop
adc
int
fwait
call
lods
jmp
jb
jns
dec
adc
xor
and
inc
fwait
mov
into
subl
mov
push
aas
outsb
das
dec
add
cs
mov
adc
mov
shl
mov
shrl
inc
pop
adc
or
imul
mov
mov
xchg
lret
xchg
mov
cmpsb
sbb
inc
cmp
pop
push
dec
push
jnp
imul
mov
mov
xchg
lret
xchg
mov
cmpsb
sbb
push
stc
icebp
jmp
xchg
popf
mov
cmp
dec
js
fsubr
xorb
sti
dec
push
push
xchg
xchg
mov
daa
xor
fcmovnb
nop
mov
imul
pop
clc
pop
and
aas
int3
mov
cltd
mov
cbtw
hlt
outsb
push
loopne
jmp
movb
pop
dec
push
push
mov
cli
push
popa
out
ret
jmp
cwtl
stos
xchg
lcall
pop
cld
sti
add
add
sub
sub
andl
push
push
pop
aam
jb
ja
test
cmp
adc
jp
mov
cmpsb
pop
pop
pop
dec
ret
movsb
test
int
adcb
dec
sbb
jo
jnp
repnz
stc
xchg
aam
mov
mov
data16
data16
das
push
mov
mov
das
lret
aas
fstps
and
insb
ja
arpl
dec
loope
jmp
into
pop
mov
out
jge
sbb
adc
dec
xchg
lret
xlat
lcall
jge
leave
push
loop
das
rolb
mov
addr16
add
outsl
adc
dec
push
adc
fs
jg
arpl
in
xchg
outsb
hlt
iret
ror
cmp
cmp
xacquire
adc
push
inc
push
loopne
jmp
mov
arpl
addb
subb
clc
popf
or
fists
leave
mov
dec
push
pop
ljmp
test
jo
jbe
jp
bound
rol
add
dec
xchg
lret
jge
lret
ret
push
sti
sub
popf
fiadds
jns
mov
push
push
jbe
movsl
push
sub
lods
push
mov
dec
push
push
arpl
roll
aaa
sbb
and
dec
jne
inc
xor
mov
inc
pop
test
cmp
and
fsubs
leave
or
sbb
inc
ret
sarl
mov
shrl
jge
push
and
in
shlb
pop
xor
mov
adc
mov
scas
inc
adc
aad
loopne
das
push
dec
jns
pop
pop
test
mov
cmp
inc
test
pop
inc
and
scas
sahf
scas
insb
test
aam
fisttps
scas
cmp
lea
xor
shr
in
mov
out
jmp
dec
mov
scas
leave
jae
paddsb
je
pop
inc
cmp
inc
xchg
push
jle
add
nop
or
pop
pop
adc
rolb
sbb
addr16
add
mov
les
add
movb
ret
inc
adc
fsubrl
faddl
ss
xchg
cmp
std
aam
std
lcall
shlb
in
push
mov
mov
cmp
add
and
dec
mov
dec
out
cmpsb
fwait
call
icebp
pusha
ret
ds
mov
ss
xchg
or
jb
sbb
add
lea
jmp
or
iret
inc
pop
cmp
sub
mov
fmulp
inc
cmpsl
mov
cmpsb
jmp
mov
mov
and
nop
gs
ja
in
dec
pop
mov
call
fbld
cmp
pop
lcall
push
stos
mov
xchg
mov
mov
push
adc
or
or
jl
xchg
lret
mov
and
dec
insb
jmp
pusha
cwtl
sbb
cmp
add
xlat
scas
adc
add
cltd
inc
rorb
jbe
jl
lods
jmp
insb
mov
test
lds
insl
mov
jl
ss
xchg
bound
inc
mov
int
pop
rclb
pop
push
mov
gs
fs
add
or
adc
jg
push
push
dec
adc
test
push
mov
and
loop
xchg
mov
cmp
mov
jns
add
mov
mov
mov
fdivs
mov
mov
shll
or
mov
insb
std
clc
xor
sbb
mov
lret
jo
mov
data16
repz
and
add
add
sbbb
push
outsl
mov
push
pushf
aaa
xchg
loopne
inc
sbb
jne
add
repnz
cmpsl
sahf
fldcw
cmp
lock
fmuls
das
orl
lahf
mov
inc
or
and
dec
gs
mov
test
cmp
mov
stc
mov
xor
je
iret
clc
add
clc
xchg
or
ret
xchg
push
test
fimuls
mov
sub
mov
out
ficompl
fimull
push
in
push
sbb
mov
or
jae
mov
out
inc
mov
add
pop
mov
add
cmp
push
mov
jle
dec
scas
repnz
cld
push
insl
sub
bnd
enter
scas
pop
dec
test
dec
out
or
lea
test
out
sbb
dec
jl
xchg
dec
dec
cmpsb
jne
lcall
leave
fsubrl
aad
xchg
lahf
jb
fildl
js
push
in
jge
shlb
or
push
scas
in
push
adc
dec
or
hlt
add
stc
popa
jge
inc
jl
dec
mov
mov
mov
mov
xchg
lock
sub
mov
stc
xor
std
jg
clc
cmpsl
adc
xchg
dec
push
mov
adc
xchg
pop
fs
ljmp
mov
mov
loop
pop
pop
pop
das
xchg
aas
push
mov
fistl
stc
fwait
pop
adc
addb
or
cmp
loope
inc
pushf
and
scas
add
imul
movsb
xor
rcrl
xor
cmpl
lock
sbb
sbb
dec
lods
jo
loopne
sub
mov
push
mov
xchg
psubsb
in
jo
test
ret
aad
imul
or
dec
cwtl
adc
fidivrl
or
xor
adc
mov
push
ret
into
push
pop
popf
daa
sahf
mov
insb
jle
js
xchg
sahf
xchg
cld
dec
std
dec
jbe
cmp
aas
xchg
fisubl
xchg
daa
or
aaa
jne
xchg
enter
aad
mov
fisubs
addr16
pop
leave
lea
xchg
xchg
inc
mov
int3
jg
outsb
cmc
mov
mov
pop
jg
mov
in
test
add
dec
lods
cmpsb
dec
xchg
cli
outsl
insb
divl
or
cmp
mov
inc
sahf
aad
out
jmp
sub
mov
loopne
js
xchg
addr16
aaa
mov
xchg
pop
jo
jp
ja
xchg
mov
mov
std
and
push
jge
outsb
es
sbb
mov
loopne
push
xlat
fimuls
push
fmuls
fmull
bound
sub
adc
add
dec
inc
pop
mov
test
sub
popa
arpl
xor
sbb
icebp
cmp
lret
stos
xchg
push
push
loop
mov
mov
imul
xor
push
xchg
dec
lea
fwait
popa
xchg
out
loopne
jbe
pop
jbe
inc
cltd
dec
inc
in
and
jbe
mov
enter
data16
pop
sbb
sbb
sub
mov
in
shlb
cmp
xor
mov
lret
dec
call
or
push
daa
ret
cmp
cmp
sbb
int
pusha
push
movsb
test
leave
xchg
out
mov
xchg
sar
dec
inc
push
sbb
jnp
fisttpll
sbb
in
jae
ja
jg
mov
cs
mov
inc
jmp
pop
and
fstl
popf
or
es
add
imul
mov
shl
pop
nop
or
push
sbb
in
testb
fcmovu
push
ret
mov
or
or
jecxz
aas
xor
pushf
shlb
shlb
stos
fsts
jge
sub
xchg
das
fisubrs
xor
adc
ljmp
xor
mov
call
pop
pop
jae
xchg
push
loopne
sbb
add
loop
repz
push
xchg
add
adc
pusha
cmp
xchg
mov
or
pop
pop
js
add
dec
dec
jle
jno
mov
pushf
dec
sub
xorb
xchg
mov
int
push
test
stos
mov
in
fmulp
aad
in
enter
cmp
repnz
push
in
aad
mov
and
lods
push
mov
xchg
push
stc
push
adc
push
and
mov
fiadds
daa
inc
xor
cmpsl
sub
inc
dec
stc
sbb
lock
push
mov
dec
std
xor
lds
cmpsl
fwait
pop
cli
adc
cwtl
pusha
out
inc
int3
roll
jbe
lds
inc
fsubs
cmc
mov
push
out
stos
lea
push
push
data16
sarl
cli
mov
jle
dec
fdivrs
lods
dec
test
pop
int3
dec
sbb
test
push
fnsave
xor
fiadds
and
dec
sub
pop
xchg
popl
sbb
sbb
sahf
out
cmp
loopne
hlt
sbb
jecxz
popf
fadd
aaa
adc
xchg
adc
pop
push
push
mov
or
dec
and
cmp
pop
jne
cld
push
sbb
and
stc
repnz
dec
sahf
or
pop
and
inc
les
enter
and
test
cmp
movsl
pcmpeqd
or
cmp
xor
sbb
test
mov
inc
mov
cmpsl
pop
sub
jg
pop
and
push
or
jb
sbb
sbb
jge
inc
cmp
loope
dec
push
add
jnp
push
inc
push
ljmp
and
movsb
mov
ja
enter
pop
iret
add
mov
gs
loop
mov
xchg
pop
jns
lret
mov
cs
push
bound
rol
jmp
jl
into
negl
rorl
xchg
cmp
call
enter
jne
sbb
fstpt
test
sub
cmp
std
jl
sbb
ds
inc
imul
shrl
mov
xor
push
roll
push
rcr
inc
pop
fstl
pop
stos
outsb
mov
and
clc
arpl
dec
mov
jge
add
out
mov
mov
xchg
xchg
dec
dec
xor
add
dec
out
stc
test
mov
xchg
xchg
mov
jl
sbb
int
pushf
int3
jne
ficoms
aad
jp
dec
mov
add
sahf
out
or
fwait
xor
and
call
xchg
add
shll
je
cmp
pop
jecxz
pop
notb
jmp
sub
test
out
hlt
lds
lea
aas
mov
sub
psadbw
jae
xor
arpl
fwait
mov
iret
and
push
orl
hlt
test
mov
shlb
gs
icebp
shll
mov
test
ss
jl
cld
and
in
cmpsb
mov
jno
sub
sub
dec
lods
jmp
into
jb
pushf
hlt
push
fwait
cmp
inc
pop
subb
sarl
push
pmuludq
or
and
inc
inc
lcall
repnz
outsb
sub
push
out
mov
pop
inc
xchg
insb
pop
outsl
push
jge
sub
mov
jne
sbb
mov
gs
mov
jp
pusha
mov
lea
mov
inc
in
dec
ret
ljmp
aaa
cli
stos
inc
rclb
daa
adc
inc
push
mov
dec
inc
jl
xor
rorb
testb
rcrb
addr16
rorl
push
or
xor
cmp
shl
mov
lret
pushf
mov
sahf
pop
jg
cmp
push
push
xor
loop
push
lahf
jl
pop
cmp
jae
dec
mul
xchg
ja
pop
and
lahf
push
cmp
into
push
ja
fldcw
push
sbb
cmpsl
je
push
adc
pushf
aaa
rcl
addr16
mov
inc
test
xchg
call
test
scas
mov
cmp
lea
mov
iret
and
pushf
cmp
and
cmp
aaa
decl
inc
das
aas
aad
pop
and
outsl
loopne
mov
popf
xchg
xor
mov
and
mov
js
mov
sub
and
movl
pop
out
lcall
arpl
lods
xor
dec
cltd
sahf
cld
and
mov
or
in
xchg
pop
pop
inc
dec
mov
and
lret
add
outsl
insb
adc
das
stc
fucomi
arpl
jg
mov
jns
repz
aad
mov
push
pop
scas
in
cmpl
ds
inc
lea
add
xchg
jne
push
mov
sahf
mov
pop
mov
jno
fwait
into
jb
mov
bound
stc
mov
imul
leave
and
sub
lea
shlb
cs
sub
jnp
repz
cltd
je
rolb
push
sbb
mov
xlat
push
mov
inc
or
cwtl
sbbl
imul
pushf
es
sbb
jae
lahf
lods
sahf
mov
inc
inc
call
adc
popa
aaa
push
mov
dec
cmpsb
add
xchg
xchg
mov
xorb
xchg
outsl
pop
push
test
xor
xchg
sbb
add
popf
cmc
getsec
mov
mov
out
dec
and
jg
pop
pop
popf
jo
js
adc
pop
fcmovnbe
jns
jne
lods
lahf
mov
jae
into
ljmp
jns
outsb
inc
and
stos
pusha
je
and
aas
out
xor
fisubs
mov
dec
xchg
add
shlb
dec
daa
xor
mov
add
mov
mov
mov
xchg
dec
xchg
into
xchg
push
stos
loopne
into
jne
or
adc
xchg
adc
movsl
jo
je
jge
fidivl
nop
mov
jle
cs
push
mov
clc
xchg
and
sub
push
push
icebp
gs
or
shr
sub
scas
daa
scas
inc
in
scas
push
sbb
inc
stos
sub
movsb
imul
insb
sbb
xchg
cmp
jb
inc
mov
das
sub
fnstenv
push
std
add
scas
pushl
mov
js
popa
mov
cwtl
loop
mov
jg
jo
or
or
mov
test
mov
dec
adc
leave
push
cld
pushf
sbb
scas
or
loop
mov
pushf
cmp
xor
push
cmpsl
add
adc
data16
lds
ss
sahf
push
adc
pop
mov
add
push
and
stos
lcall
inc
add
fs
pop
out
mov
xorl
loope
jae
daa
pop
mov
push
mov
pushf
mov
rclb
sbb
pop
inc
ljmp
mov
add
fadd
jg
jnp
add
fstl
mov
std
jno
mov
sub
push
mov
enter
inc
fcomps
jnp
hlt
fisubs
add
push
stos
add
xchg
dec
dec
jae
pushf
int3
push
sbb
jb
and
mov
inc
or
fwait
pop
iret
and
js
in
and
pop
dec
add
js
push
and
adc
xchg
xor
arpl
push
adc
pushf
stos
mov
and
mov
scas
lock
dec
sti
xchg
jne
dec
inc
inc
iret
xchg
inc
shrb
fcoml
insb
mov
xchg
enter
jg
mov
sbb
imul
mov
cmp
xchg
mov
pushf
popf
inc
inc
mov
das
and
xchg
sub
and
bound
dec
adc
push
jmp
jbe
push
dec
daa
ss
scas
add
sub
call
lds
out
cld
xchg
pushf
popa
popw
imul
adc
repnz
cmp
and
push
xchg
cmp
out
test
dec
out
cmp
out
pop
out
mov
fwait
loopne
push
sub
fwait
adc
sub
mov
das
inc
dec
sub
inc
jbe
in
bound
inc
mov
cli
inc
pop
insl
fisubrs
sub
ss
fs
in
push
lcall
sub
ficoms
popf
cmp
je
dec
dec
pop
push
out
xchg
dec
cmovge
scas
cmp
scas
sub
mov
mov
sbb
call
les
adc
js
cs
ds
test
cmpsb
mov
push
lods
jns
push
pop
push
xlat
push
lds
add
icebp
pop
fisubrl
lods
xchg
dec
inc
divb
mov
stos
scas
enter
std
fmuls
std
fcmovnbe
loop
jecxz
and
js
pop
inc
add
fsubrl
jb
mov
push
outsl
pushf
in
fdivrl
repnz
push
inc
push
mov
push
fdivrl
adc
imul
enter
iret
add
jp
jmp
cmp
loope
push
mov
or
and
scas
pusha
or
outsl
repz
cmpsl
push
mov
out
push
test
popf
jge
push
xchg
mov
adc
push
test
sbb
sbb
mov
push
test
aaa
icebp
shlb
mov
and
adc
fs
cmp
rcll
cld
mov
shl
dec
dec
lods
push
hlt
aaa
adc
xchg
xchg
pop
cmc
je,pt
sahf
call
cltd
or
pop
scas
inc
hlt
jp
aaa
dec
call
dec
xor
icebp
xchg
cmpsb
js
stos
push
adc
in
test
jg
adcb
mov
push
arpl
push
push
xor
sub
or
clc
cld
or
cs
gs
dec
sbb
leave
pushf
mov
pop
mov
sbb
pop
mov
mov
xor
sub
outsl
mov
pushf
xlat
sbb
dec
cmp
cmp
and
mul
mov
frstor
jle
adc
jae
mov
aam
sahf
cmp
sbb
dec
adc
scas
adcb
ret
enterw
js
add
mov
daa
mov
sub
test
das
mov
shl
orb
adc
inc
xor
push
mov
cmp
cli
insl
jo
insb
insl
lret
scas
sbb
rcrb
sbb
inc
adc
mov
aas
aam
xor
in
inc
mov
out
data16
dec
pop
cs
lods
push
or
mov
cltd
insl
fwait
out
addl
test
sbb
imul
dec
filds
test
pop
fisubrl
sbb
sbb
pop
fwait
in
mov
mul
fimull
inc
xchg
mov
add
dec
mov
call
lret
add
fsubrl
xchg
ja
lea
in
out
decl
cmp
jo
rolb
mov
push
sub
cmp
das
repnz
mov
or
jp
mov
xor
jmp
stos
mov
fstl
mov
jecxz
inc
xor
cmp
xchg
mov
add
mov
pop
stos
stos
scas
outsl
es
pusha
xor
lods
mov
aam
push
mov
fmuls
inc
xchg
loope
mov
or
add
sub
int
imul
outsl
cld
les
mov
adc
int
cli
imul
imul
lods
xor
or
jae
adcb
mov
lret
mov
jno
jnp
jne
jbe
jno
pushf
dec
fwait
add
cmp
jle
lea
push
xor
lods
jns
mov
popa
cld
mov
fildll
scas
add
mov
jo
adc
loope
push
fwait
push
mov
xor
in
jg
xchg
xchg
andl
mov
lea
fs
dec
dec
aas
sbb
out
cmp
or
jb
movsb
push
mov
fisttpll
out
push
pop
and
es
or
les
out
xchg
mov
inc
sub
mov
aaa
push
test
mov
repz
sub
in
lods
push
lcall
dec
or
and
lahf
sbb
pop
sbb
in
pop
aaa
outsb
pop
aas
out
gs
or
call
mov
testl
push
fnstsw
addr16
sub
pushf
cld
in
cmc
fucomi
dec
imul
mov
sahf
jl
lock
fnstsw
ret
push
adc
mov
mov
clc
pop
xchg
bound
out
cmp
or
jbe
push
add
and
or
shrl
clc
ret
jne
add
mov
into
jg
cld
jns
scas
aas
sbb
cmp
fstl
addr16
ret
lods
dec
sbb
pop
cld
ret
in
dec
adc
loope
mov
and
negl
fcoml
and
daa
or
ja
jbe
pop
stos
in
and
test
dec
jg
in
sub
mov
sbb
dec
jae
mov
repz
mov
cmp
push
jnp
dec
pop
and
mov
lahf
sub
push
in
inc
jl
sub
push
dec
push
jnp
imul
mov
mov
xchg
lret
xchg
mov
cmpsb
sbb
inc
cmp
pop
push
dec
push
jnp
imul
mov
mov
xchg
lret
xchg
mov
cmpsb
sbb
inc
pop
jbe
lretw
push
dec
push
jnp
stos
es
mov
dec
imulb
xchg
mov
mov
popa
jb
pop
push
pop
push
jnp
jmp
fwait
je
adc
stos
xchg
lods
push
inc
stc
add
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
jbe
imul
pushf
mov
bnd
inc
sub
or
jns
adcl
mov
mov
fcoml
sub
adc
or
push
ss
push
pop
push
dec
out
imulb
push
cli
cmpsb
int3
mov
xchg
xchg
data16
jge
jle
das
pop
or
jns,pn
xchg
clc
imul
mov
xchg
sub
pop
movsl
or
dec
pop
pop
out
movsb
mov
pop
mov
jnp
mov
xchg
jae
jmp
jecxz
adc
mov
pop
jecxz
pop
fldt
xor
xlat
out
add
div
leave
lds
adc
cmp
adc
notb
and
mov
sbb
inc
jbe
mov
inc
jecxz
or
push
mov
or
popa
ret
jae
iret
mov
xor
pop
add
cld
push
cld
jne
pop
jns
psubsw
push
inc
notb
jmp
jle
jle
push
int
outsl
mov
push
adc
sub
mov
es
call
mov
xchg
xchg
pop
data16
test
push
xor
inc
addb
push
jle
mov
cwtl
loopne
pop
roll
push
jg
pop
sub
jp
imul
and
mov
sahf
loopne
scas
sarb
xor
sbb
dec
xor
cmp
aas
nop
iret
fmuls
mul
out
mov
xchg
xchg
int3
data16
sub
sbb
or
jl
insb
push
pop
push
dec
out
imulb
cld
mov
xchg
xchg
int3
data16
sub
sbb
or
jl
insb
push
pop
push
dec
out
repz
dec
loope
aad
mov
repz
das
push
lds
popa
xlat
sbb
mov
adc
xchg
ret
test
sub
push
movsb
and
jns
sub
fs
dec
jns
movsl
mov
xchg
sub
js
mov
lahf
leave
lcall
stos
jns
lret
pop
sbb
popl
aad
pusha
mov
scas
inc
xor
mov
jecxz
mov
cmp
das
lea
out
push
int3
test
lahf
nop
dec
mov
out
cmp
pop
out
push
aaa
cmpsb
mov
clc
sarl
leave
pusha
cmpsb
imul
cmp
add
test
dec
mov
adc
mov
jne
xor
cmc
test
cli
lret
pop
daa
out
xor
sbb
cmp
pop
xchg
or
jne
rcrb
jmp
test
adcb
lret
xor
int3
lret
pop
xchg
add
dec
fisubrs
adc
xor
in
or
xorb
psubsb
mov
jns
mov
leave
insb
shl
int3
xlat
sub
lret
push
movsl
les
sub
push
outsb
test
cwtl
add
cs
adc
and
pop
pop
push
or
leave
or
repnz
fs
test
dec
out
push
in
fidivs
jns
call
rorl
mov
call
mov
xchg
ror
inc
xchg
std
shl
sub
mov
dec
loop
sub
mov
push
fbstp
push
xchg
cmp
shrl
sbb
mov
popa
outsb
mov
fnstcw
aas
int
movsl
pop
test
push
inc
cmp
bound
jl
insb
inc
and
xchg
adc
sbb
mov
pop
aam
or
sub
es
popf
clc
adc
popa
mov
xchg
cmp
dec
imul
imul
pop
sub
mov
adc
and
std
bound
pop
addr16
or
nop
mov
adc
adc
fmuls
cmp
stc
xlat
out
pop
fsubp
pushf
xchg
int3
lods
orl
bound
mov
dec
aad
or
das
test
orl
mov
jecxz
push
push
mov
in
xchg
ret
xchg
dec
repnz
add
or
shl
mov
imul
adc
sbb
add
mov
call
js
cld
adc
xchg
or
cmp
jo
or
cmc
or
jbe
push
push
outsl
inc
sbb
mov
out
sahf
sar
dec
in
cltd
sahf
fidivs
fsubl
and
insl
mov
push
call
xchg
jno
in
lcall
adc
ficomps
bound
mov
mov
xchg
sub
push
cwtl
loopne
enter
jmp
push
aad
mov
aas
lcall
sub
adc
dec
in
cmp
jns
and
push
leave
sbb
mov
leave
test
loopne
ret
incl
repnz
rcr
rorl
push
adc
or
loope
inc
movsl
imul
ret
or
shrl
cmp
or
popf
sub
sbb
sarb
cmc
push
rclb
mov
aam
loope
cmpl
pop
les
mov
jp
icebp
rep
popa
out
pop
inc
outsb
stos
cld
inc
fstl
mov
or
jns
jp
pop
aas
inc
movsl
mov
sub
mov
pop
fcompl
push
in
add
ja
xor
inc
or
jl
xor
out
or
fildl
in
inc
addl
mov
lods
movsb
lret
xchg
xchg
sbb
and
mov
dec
ja
adc
jbe
add
cmp
and
ret
sbb
and
int
ds
push
in
jbe
and
xchg
lcall
test
jns
jmp
lcall
push
into
jo
popa
pop
pop
jge
ret
xor
ret
pop
mov
mov
das
xor
jg
dec
sar
shrl
adc
jne
jnp
lret
xchg
push
pop
mov
push
into
into
xchg
and
sub
jb
pop
mov
out
outsl
ja
sarl
cli
sub
mov
xchg
fildll
notb
xchg
rorb
orb
rclb
sbb
jecxz
shl
push
xchg
adcb
sbb
outsl
mov
push
outsb
sbb
sbb
and
clc
mov
sbb
iret
insb
xor
and
or
and
lock
cmp
ss
lret
testl
insl
mov
fcoml
test
xor
cmp
cmp
mov
dec
push
cltd
sbb
out
inc
out
cmp
or
cmp
add
movsb
or
icebp
ljmp
nop
movsl
daa
dec
insl
fstl
loope
fsubrl
in
ret
in
lcall
leave
mov
adc
les
lcall
mov
jmp
inc
out
cli
lret
sub
or
loop
popf
dec
sar
jecxz
std
sbb
xchg
mov
scas
fwait
cmp
xchg
ds
sub
dec
loop
xchg
mov
mov
dec
jns
push
xchg
shlb
cld
mov
pop
jno
dec
jecxz
push
repz
pop
push
aad
inc
xor
or
xor
inc
push
dec
test
dec
daa
sub
push
popf
in
sbb
mov
stc
jl
pop
sub
xchg
je
mov
mov
fidivs
pop
jmp
movsl
test
cli
mov
or
mov
ljmp
iret
cli
les
lcall
imul
sub
inc
adc
inc
mov
call
cmpsb
fbld
jne
fs
inc
adcl
lret
les
call
xchg
pushf
jge
shr
popa
and
cld
stos
lock
add
or
adc
push
xchg
xchg
push
aam
xorb
xor
iret
cmp
mov
test
xlat
popa
shll
arpl
sbb
lods
rorl
data16
sti
inc
add
mov
aad
fwait
pop
test
inc
xchg
cmc
mov
jbe
cmc
imul
fs
lds
mov
roll
jmp
clc
js
push
dec
cmp
push
icebp
and
jecxz
mov
mov
dec
pop
cmp
inc
lock
dec
xchg
aas
mov
add
test
orl
jle
test
mov
je
add
loope
lahf
leave
mov
cmp
lds
popf
aaa
dec
cmpl
les
mov
scas
xorb
adc
pop
push
inc
in
cltd
xchg
jecxz
sbb
test
sbb
cmpsl
adc
fisttps
mulb
scas
lahf
clc
out
rol
rcll
pop
push
in
sub
out
mov
sub
data16
les
fildl
call
stos
lea
jecxz
mov
adc
inc
repnz
shlb
jb
outsb
jg
mov
sub
call
icebp
sbb
mov
aad
loop
mov
cwtl
mulb
xchg
mov
fmull
jge
mov
mov
imul
xchg
jb
sarl
test
dec
in
dec
mov
pop
mov
das
inc
pusha
sub
dec
or
insb
adc
pop
or
cmp
sahf
fnstsw
jl
insb
fs
inc
fisttps
orl
or
push
mov
adc
inc
sub
sub
mov
loopne
mov
xchg
mov
idiv
shll
xlat
pop
adc
cltd
adc
out
push
xchg
adc
jb
push
inc
dec
pushf
push
out
jno
push
mov
in
inc
repz
pop
pusha
pop
lds
jmp
push
jp
out
imul
sar
xchg
cmc
jg
cmpb
push
and
xchg
addl
cmp
xor
imul
dec
mov
xor
fdivs
push
cmp
dec
jecxz
sti
mov
cmpsl
jp
mov
mov
std
sub
data16
inc
adc
int3
jg
loope
cmpb
mov
je
out
lret
loopne
add
dec
pop
push
mov
daa
push
bndldx
xor
sbb
icebp
or
adc
jo
fadds
inc
jo
xor
and
cli
repz
adc
xor
jne
cmp
icebp
push
cmovl
inc
lahf
iret
data16
inc
test
adc
mov
arpl
or
pop
add
out
fists
cwtl
jnp
fldenv
mov
add
fnstcw
add
ds
inc
xor
cltd
shrb
pop
cs
dec
push
xchg
fisttpll
pop
test
xchg
push
xlat
xchg
sbb
out
je
inc
addr16
cltd
test
and
jno
loope
xchg
in
rolb
in
xchg
int
fsub
rcll
sbb
mov
pop
dec
cwtl
repnz
popa
sbb
dec
lods
imul
sbb
outsb
xor
bound
ret
xor
sahf
js
pop
lds
clc
jb
rolb
sbb
das
inc
mov
mov
rcrl
out
mov
bound
js
or
pop
ja
dec
push
mov
stos
lret
lods
mov
xchg
mov
and
adc
sbb
negb
dec
sub
adc
stos
fwait
loop
xor
repz
aas
mov
scas
sahf
add
imul
jne
push
mov
or
adc
or
sub
mov
mov
pop
adcb
cwtl
cmp
mov
sub
mov
cmp
clc
inc
inc
shl
inc
push
gs
rorl
mov
mov
ljmp
sub
mov
sub
andb
cld
popf
add
adc
fists
ret
pop
jl
dec
enter
testl
inc
cli
les
jp
and
fisubs
mov
push
mov
imul
sbb
dec
sarb
add
adc
pop
cld
lea
in
ja
in
insl
popf
lcall
sti
mov
mov
push
lret
xchg
aas
daa
inc
mov
dec
pop
pop
mov
out
bound
fs
push
mov
sbb
out
call
pushf
fwait
push
icebp
cli
in
mov
jle
outsb
mov
rclb
sub
push
jb
mov
cmpsl
dec
push
cmpl
lea
imul
andl
push
lods
les
repz
leave
pop
inc
test
mov
cmpsl
cmp
xchg
rolb
popa
aas
cmp
push
mov
loopne
xor
out
mov
punpckhdq
cld
outsl
mov
lods
inc
mov
loope
js
out
mov
shr
mov
or
ret
sahf
mov
fiadds
mov
xchg
rorb
dec
cld
pop
push
lods
jae
scas
aad
cld
pop
loope
aas
adc
dec
mov
rclb
or
mov
cmpsl
sbb
mov
nop
xor
or
stos
mov
adc
lahf
sub
push
bound
add
sbbb
sub
add
mov
lods
xchg
xor
dec
cli
movsl
les
aaa
aad
pop
lods
dec
jae
pop
repnz
add
ficoml
loop
ljmp
sti
out
out
xor
mov
cmpb
adc
mov
in
loop
mov
cld
jmp
add
out
xchg
inc
sti
mov
xor
pop
mov
sub
mov
sub
ljmp
cmp
jns
jo
gs
dec
lahf
add
cli
rcrl
or
pop
pushf
idiv
imul
ret
inc
hlt
jmp
dec
pop
sti
cmc
mov
xchg
sub
sub
pop
cld
pop
lods
inc
sub
mov
cltd
dec
pop
jno
jecxz
shl
add
cmp
ds
xor
loopne
enter
lods
outsb
adcl
pop
sahf
mov
xor
xchg
mov
scas
cmp
mov
pop
std
add
int
mov
mov
mov
leave
movsb
pop
es
push
cmpsl
cmp
adc
sti
and
sbb
ror
in
push
cld
jge
xor
dec
mov
or
jb
insb
add
cmp
jg
int
pop
or
loope
pop
mov
addr16
mov
jecxz
pusha
mov
aad
addr16
andl
jecxz
jmp
loop
inc
sti
sbb
sub
push
cli
xchg
nop
mov
mov
adc
negl
out
push
fdivs
fistl
and
push
or
xchg
push
das
sahf
es
subb
inc
test
jp
sub
ss
inc
addr16
sub
insb
sub
mov
test
adc
xchg
test
xor
aad
or
in
cmp
cs
ror
nop
addr16
scas
sbb
sbb
ja
push
jecxz
out
xorb
stos
jecxz
je
sbb
jne
jl
jbe
ss
test
push
jnp
xchg
push
push
aaa
jp
idivb
stc
out
add
inc
daa
mov
inc
ret
stos
rcll
std
int
cli
fucomp
or
push
add
mov
sub
arpl
test
das
push
dec
cmpsl
inc
push
prefetchw
pop
and
jle
adc
add
sbb
lock
scas
mov
push
xchg
push
divb
mov
test
fldt
dec
dec
dec
pushf
call
or
neg
lgs
frstor
cmp
mov
mov
int3
cld
sub
add
xchg
ja
push
xchg
mov
dec
out
scas
mov
cmp
leave
rclb
add
int3
pusha
clc
pop
int3
popf
add
cmp
call
inc
dec
sub
daa
sbb
dec
or
mov
aas
hlt
and
mov
addr16
jo
jns
in
inc
or
subl
jnp
push
outsl
jbe
push
sbb
js
pop
sbb
idiv
test
xchg
xchg
call
xor
dec
fcmovb
mov
adc
out
ss
insl
scas
arpl
icebp
dec
pop
adc
xor
push
shrl
mov
mov
adc
into
cwtl
pop
xor
shrl
mov
sub
fisubl
xchg
es
out
push
push
rorl
add
out
lds
js
add
out
loopne
pop
or
adc
movsb
sbb
jns
cmpsl
xorb
jecxz
cld
call
into
aaa
call
imul
and
addb
xor
or
lock
add
sbb
jb
out
aam
mov
pop
sarb
stos
jae
mov
lds
add
lods
jmp
cmp
mov
sahf
xchg
cmpsb
ljmp
lcall
adc
push
repz
push
pop
push
cmp
pop
insl
cli
add
mov
xchg
sahf
std
stos
sub
insl
in
cli
xor
add
int
cmpsb
xlat
jmp
push
adcb
xchg
mov
jg
cs
mov
popa
cli
imul
mov
sub
mov
pusha
adc
adc
xchg
lds
leave
add
addr16
loope
movsl
and
hlt
mov
fldt
or
out
xor
pop
xchg
mov
add
jno
and
xor
mov
sarl
lds
adc
loop
cwtl
cmp
fdivs
xchg
sbb
pop
push
mov
or
cmp
insb
mov
imul
sub
and
pop
movsl
sbb
flds
cs
aam
arpl
es
pop
push
dec
lcall
jge
and
daa
divl
jecxz
mov
or
lret
popw
mov
add
add
jne
xchg
push
ret
mov
sti
mov
inc
es
adc
dec
jmp
pop
add
pop
sbb
jl
add
mov
ja
pop
sub
loop
lret
mov
psubb
cmp
sub
orb
and
lods
icebp
cmpsb
fs
pop
adc
in
cmp
adc
mov
mov
cmp
sbb
cmpsb
test
jne
or
daa
jmp
or
fiaddl
jae
or
test
setne
lock
jno
add
push
mov
xchg
jnp
sahf
sbb
testl
push
je
cmp
push
cli
iret
inc
pushf
mov
data16
lods
enter
les
dec
test
mov
xor
adc
dec
test
addr16
and
jmp
test
test
cmp
in
cmp
rclb
aad
lret
jns
lahf
cmp
add
pusha
add
stos
xchg
insb
into
pop
lahf
fisubs
inc
out
fisubs
lea
inc
fidivs
lods
lds
nop
xor
aaa
mov
lret
repz
xchg
add
push
int
push
push
mov
popa
cmc
ret
ds
test
clc
inc
aaa
jmp
mov
pop
pop
mov
scas
xlat
popf
loopne
push
lods
dec
inc
hlt
mov
add
fdivr
jno
rcrl
lea
jne
or
add
mov
inc
mov
xlat
add
jge
dec
cmp
inc
test
insb
dec
add
or
pop
mov
inc
add
pop
enter
mov
jle
push
rcr
ror
in
pushf
imul
sbb
jg
aas
pop
adc
mov
mov
mov
loop
lret
or
dec
jecxz
sub
int
aad
sub
hlt
mov
dec
mov
or
mov
push
and
push
sahf
rolb
cmpsb
leave
movsb
ss
add
dec
mov
lea
cmp
ret
mov
movsb
jp
pop
jns
mov
sar
push
test
mov
pop
cmp
or
pushf
outsl
mov
fdiv
inc
sbb
xor
add
pop
push
xchg
mov
pop
cmp
mov
nop
sub
xchg
aaa
mov
stc
shlb
dec
iret
pop
mov
jmp
or
push
add
fdivl
mov
popl
sub
stos
stc
mov
push
je
mov
push
mov
lahf
cmp
pop
pop
faddp
in
xchg
inc
fdivrl
fs
or
cmp
dec
fmuls
cmp
lret
jge
xchg
enter
je
xor
bt
iret
xchg
push
dec
jb
push
repz
scas
mov
xor
subl
rorl
das
mov
aam
add
pop
mov
xchg
outsl
inc
call
shrl
xor
sub
sub
sarl
imul
push
mov
jp
inc
sahf
scas
into
repnz
jge
add
mov
push
pop
or
negb
sub
stos
adc
cld
mov
mov
xchg
lret
loope
imul
cmc
jmp
sub
mov
jge
cli
jp
sbb
aaa
mov
ljmp
stos
dec
lcall
test
jp
dec
push
xor
pop
push
mov
xor
cmc
dec
mov
mov
mov
int3
push
sbb
gs
cwtl
pop
or
xchg
aaa
dec
jmp
jp
mov
scas
cmp
popa
dec
fs
inc
or
mov
or
inc
inc
movsl
inc
or
ret
cmpsl
lcall
bound
sbb
dec
jp
stc
and
shl
add
fimull
mov
leave
loope
jno
push
cmp
fcompl
xor
fisubrl
or
aas
imul
mov
xlat
repnz
fwait
ror
ss
cltd
movsl
sub
or
or
sahf
jb
sub
add
cmp
into
inc
dec
mov
push
sbb
xchg
icebp
xchg
loope
loop
stos
push
aam
fcompl
and
xchg
aad
xor
inc
mov
mov
adc
mov
in
notb
adc
mov
daa
aas
fistpll
adc
mov
jae
adc
dec
xchg
cmp
sub
mov
sbb
arpl
sbb
loop
fildll
or
bound
xor
sub
out
in
xchg
inc
mov
push
cmpsb
add
fdivrp
lcall
jo
les
pop
sub
lret
and
sub
leave
adc
xor
pop
ficompl
add
addl
daa
xchg
lret
add
mov
icebp
cmc
add
mov
jge
push
lret
je
inc
mov
loop
push
lock
gs
daa
sub
cmpb
push
test
dec
xor
mov
xchg
ret
or
cmp
out
cmp
and
sub
inc
test
dec
mov
scas
hlt
fst
inc
cmp
in
pshufw
pop
jnp
in
push
sub
fildl
push
xchg
inc
in
movsl
cmc
sbb
ja
sbb
inc
xor
das
inc
mov
mov
les
dec
push
outsb
dec
dec
movsl
lods
nop
push
push
out
scas
roll
jg
aas
fnstenv
in
mov
adc
xchg
inc
subl
lcall
bound
dec
fisttpll
mov
es
test
ret
adc
jmp
ret
inc
dec
xchg
pop
pop
sub
xchg
xlat
pusha
popf
aad
lods
clc
cltd
mov
fcoml
sub
sbb
or
jl
insb
push
pop
push
dec
out
imulb
cld
mov
xchg
xchg
int3
data16
sub
sbb
or
jl
insb
push
pop
push
dec
out
mulb
cmpsb
cld
mov
xchg
xchg
int3
cmp
inc
sbb
add
push
push
pop
test
pop
testl
cld
mov
xchg
retw
jbe
in
sbb
jnp
add
adc
and
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
call
mov
call
pushl
push
push
call
add
push
call
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
iret
cs
mov
movsl
popa
lret
loopne
cmc
mov
aaa
jno
popa
push
adc
and
icebp
movsl
loope
xchg
lds
pop
push
add
popa
push
jle
add
and
mov
mov
adc
cs
adc
or
inc
or
in
test
frstor
sbb
out
push
std
sti
cld
mov
and
in
mov
jg
pop
or
mov
mov
adc
sub
fdivl
lret
jno
adc
ret
call
cld
jmp
iret
fwait
ret
out
std
sub
fdivr
les
stos
xor
add
icebp
mov
rcll
cs
lock
shr
sbb
scas
insl
adc
adc
xor
les
in
mov
add
mov
and
inc
add
and
jl
loopne
fldt
dec
add
push
cli
sub
mov
xchg
adc
xchg
xor
push
roll
jmp
xchg
filds
or
sbb
sub
pop
stc
jne
jl
out
loopne
shlb
test
neg
mov
popa
pop
add
or
jle
jne
jo
inc
xchg
xchg
test
mov
fbld
pop
jo
push
push
xor
dec
add
xchg
subb
in
adc
jno
popa
push
adc
jne
and
icebp
movsl
loope
xchg
lds
adc
jno
popa
push
adc
jne
and
push
int
cli
or
mov
cmp
adc
jmp
movsl
enter
aad
cld
repnz
cmpsb
or
in
fimuls
xor
jp
jle
sub
pop
ret
sarl
xor
push
pshufw
hlt
rclb
add
jbe
ljmp
into
cmp
dec
bswap
decb
jnp
orl
testl
std
pop
jo
and
or
sbbb
cmp
out
jo
push
das
popf
jg
jecxz
inc
mov
sahf
jns
loopne
test
icebp
xchg
loope
mov
push
lea
imulb
lods
je
call
test
mov
test
push
pop
mov
leave
lret
push
or
rolb
adc
jge
pop
ds
mov
jbe
out
or
out
adc
iret
cmc
sub
cmp
inc
xchg
dec
or
iret
push
dec
arpl
aad
push
dec
adc
leave
jmp
jmp
mov
lahf
xor
xchg
cmp
aas
jb
cmp
push
roll
mov
aad
pop
inc
out
pop
in
pusha
dec
jp
xchg
sub
inc
push
jp
mov
adc
ljmp
mulb
jg
lods
mov
imul
in
xchg
jno
xchg
ficompl
cmp
jno
push
sub
mov
mov
lock
fisubs
mov
mov
test
push
cmp
out
loopne
jmp
push
xchg
adc
adc
xchg
mov
mov
popf
inc
add
adc
xor
aaa
es
or
mov
sarl
cmp
loope
inc
inc
mov
fxam
jle
jne
sbb
loope
je
xor
into
out
adc
adc
or
aam
jbe
mov
cltd
je
les
fdivs
rcl
movsl
loopne
xorl
mov
adc
out
push
in
jge
dec
mov
xor
lds
fildl
faddl
mov
mov
imul
or
aaa
call
dec
mov
addr16
sub
dec
ret
std
jl
cmc
xlat
or
iret
jnp
mov
clc
jle
sbb
cmp
mov
lea
ret
lea
pop
xchg
inc
pop
mov
or
push
mov
jne
ja
xor
mov
es
mov
push
pusha
pop
orl
js
push
push
or
rorl
clc
push
lret
mov
push
and
adc
xchg
leave
fs
sbb
pop
lea
and
lods
inc
jmp
hlt
je
mov
jne
enter
lods
movl
std
xor
ret
add
jns
xchg
push
aam
std
pop
sub
jmp
pop
outsl
ljmp
loope
and
xorl
mov
iret
inc
mov
ds
lods
int3
xchg
dec
or
inc
inc
popa
insb
fisubl
test
mov
fmuls
push
mov
mov
push
movsl
ret
test
shrl
sarb
int3
pop
sbb
push
sahf
and
fstpl
test
mov
mov
movsl
repz
filds
sub
ret
clc
pop
mov
fistpll
inc
or
shlb
mov
movsl
and
inc
or
pop
addl
sbbl
adc
jmp
inc
out
mov
fistpl
shrb
xchg
cmpsl
jb
pop
mov
lret
jg
fisubrs
hlt
dec
addr16
adcl
in
repnz
dec
stos
es
push
ficoml
lock
je
dec
and
xchg
dec
sahf
ds
xchg
ss
call
push
subl
mov
lods
out
xchg
icebp
mov
je
mov
pop
add
fildll
push
jg
pop
icebp
outsl
icebp
xchg
xor
fscale
subb
popa
adc
push
and
mov
mov
xchg
scas
sub
call
add
mov
lea
pop
sti
push
and
xor
lea
decl
add
leave
in
add
clc
sbb
and
jmp
iret
imull
in
jne
lods
sarl
in
and
lea
inc
xchg
dec
gs
imul
cmp
lret
out
push
inc
jns
xlat
adc
into
mov
test
xchg
mov
cmc
push
divb
popa
jns
adc
cltd
push
popa
or
add
stc
jecxz
mov
fst
fnstsw
or
mov
push
fnstenv
imul
mov
cli
js
adc
repnz
mov
aam
mov
mov
adc
mov
adc
add
fbstp
mov
lds
rcl
push
adc
push
inc
pusha
imul
xchg
addl
arpl
pushf
mov
arpl
jne
inc
jo
jecxz
inc
outsb
inc
int
adc
mov
inc
sbb
ret
mov
jne
arpl
sti
push
inc
bound
sbb
adc
stc
dec
stos
sbb
push
adc
out
add
mov
fisubl
test
ss
mov
repz
xchg
xchg
or
jg
xor
lock
push
popa
test
jne
cmp
dec
mov
rorb
mov
aam
sahf
mov
and
mov
subl
pop
push
adc
insl
ret
dec
jl
pusha
ret
push
in
fadds
and
xorb
fbld
ret
repnz
test
lods
movb
enter
lret
test
cltd
add
inc
push
inc
xor
push
push
inc
xor
sarl
lcall
push
in
mov
mov
mov
fwait
jno
imul
sub
popa
mov
jo
add
adc
mov
xchg
or
ja
fdivl
xchg
lock
or
cmp
sbb
and
cmp
es
lcall
into
arpl
mov
push
pop
pmulhw
popa
cli
mov
into
cld
and
dec
xor
xchg
push
scas
dec
inc
xor
sub
fwait
add
das
xchg
xchg
outsl
xor
xlat
add
pop
mov
lcall
in
rcll
cmp
and
stos
cmp
gs
in
stos
jmp
leave
xchg
mov
lret
lea
imul
fcoml
adc
les
imul
out
sbb
sbb
mov
dec
add
add
mov
jge
add
loope
in
inc
xchg
xor
dec
fildll
ja
add
or
repnz
arpl
dec
jge
pop
call
xchg
inc
aam
lods
lock
ficoml
sub
pop
in
adc
mov
lcall
sti
push
sub
fsts
sbb
les
jp
pop
pop
mov
xchg
jg
adc
xchg
aam
outsb
ss
js
addr16
insb
and
push
ret
lret
les
push
dec
jmp
ret
dec
divl
and
jae
imul
in
inc
mov
sub
cld
mov
and
xchg
lret
add
sahf
lock
xchg
add
pop
cld
icebp
lock
in
pop
mov
xchg
push
fwait
shlb
div
rol
aaa
sbb
push
pop
in
push
add
jae
dec
movsb
push
lock
lahf
je
inc
jnp
sbb
or
dec
jmp
cmp
loope
add
ret
xchg
push
or
jg
pop
adc
cmp
push
test
fcomps
lahf
shrl
jg
sbb
aas
outsb
dec
pop
jge
mov
mov
repnz
mov
outsl
pop
leave
jno
mov
push
lret
gs
cmp
leave
int3
push
mov
adc
mov
xchg
inc
test
out
pushf
pop
pop
or
loopne
and
testb
roll
ficomps
jns
mov
xor
inc
aad
xor
pushf
int3
xchg
cmp
aaa
add
sti
hlt
inc
and
add
iret
inc
lock
mov
inc
mov
and
sub
pop
mulb
addr16
or
das
out
push
cmpsl
scas
mov
jl
inc
mov
cltd
mov
insl
mov
jb
aas
and
clc
xor
add
push
sbb
push
and
pushf
ret
pop
mov
mov
leave
and
jl
xor
js
mov
cs
and
mov
or
xor
mov
cmp
adc
lock
inc
lret
and
and
insb
or
adc
sbb
in
mov
push
push
mov
mov
fs
push
adc
pusha
rorb
shrl
mov
mov
xor
mov
sti
stc
cmpsb
leave
mov
enter
pop
cmp
fbld
pushf
jmp
sbb
sub
icebp
cmpb
cltd
cmpb
sub
pop
mov
loopne
pop
lahf
insl
jns
push
je
insb
aam
jg
sub
inc
pop
jo
js
adcb
aaa
cmp
mov
out
movsb
clc
xchg
dec
xchg
fwait
xchg
js
int3
or
scas
filds
pop
outsl
fmuls
dec
xchg
mov
aas
push
dec
idiv
sub
mov
xlat
jb
dec
jo
push
or
jns
dec
shr
mov
daa
je
or
aas
fwait
ret
cmp
xchg
inc
je
lock
pop
and
dec
jns
loop
pop
mov
idivl
jnp
xchg
roll
int
dec
sub
push
out
movsb
inc
insl
jmp
lahf
dec
sbb
lods
xchg
push
inc
adc
jp
dec
push
lcall
arpl
cmc
inc
aam
push
jnp
movsb
jne
and
ljmpw
jg
stos
dec
std
in
ss
add
or
sbb
or
out
movsl
pop
cmp
sub
jmp
sbb
aad
pop
adc
imul
imul
popf
cltd
mov
loopne
idiv
cli
xchg
jnp
dec
out
rolb
div
jp
push
xchg
mov
lds
test
arpl
mov
shrb
sahf
test
in
sub
andl
insb
push
and
push
aas
mov
jg
loop
mov
in
adc
xlat
xor
jle
push
xlat
in
add
lods
jle
push
scas
clc
push
movsl
sub
leave
or
sbb
pop
sbb
int3
pop
repnz
xor
in
push
daa
and
and
movsb
sbb
sbb
pusha
mov
aaa
out
adc
sub
adc
rolb
sahf
into
add
or
dec
sub
push
mov
in
sbb
jmp
popa
dec
mov
daa
or
sub
inc
mov
mov
clc
out
icebp
push
dec
in
inc
xchg
and
pop
int
sbbl
inc
cmpb
inc
or
clc
add
lcall
or
sub
movsb
jne
mov
sahf
jge
xlat
lret
cmc
push
push
sub
push
jmp
cs
test
mov
pop
add
lret
shll
fidivs
pusha
pushf
fs
push
sub
sbb
xor
call
and
pusha
pop
dec
push
or
stos
ror
insl
jl
add
icebp
test
lock
sub
hlt
dec
push
fldenv
test
adc
jg
push
mov
cmp
sarb
sarb
test
mov
add
push
adc
push
push
jne
jge
test
mulb
icebp
scas
jge
ret
sbb
pop
xchg
int3
cmp
xchg
pushf
adc
jns
xor
or
xorl
mov
pop
sarb
stos
fsubl
mov
or
xchg
jo
xor
pop
pushf
test
cli
dec
inc
mov
jnp
cltd
in
xorl
xchg
xor
pusha
pop
adc
pop
lcall
sti
sahf
js
loope
cli
cmc
mov
inc
cmp
aaa
lods
dec
clc
sbb
push
add
and
mov
daa
aad
and
mov
dec
mov
mov
rsm
dec
xchg
push
xor
jmp
push
popf
out
mov
jle
dec
pusha
mov
or
hlt
bound
mov
sbb
mov
stc
push
sub
xor
sub
xor
mov
jge
xor
dec
sub
ljmp
clc
push
or
or
inc
jb
xchg
movsl
pop
adcb
rcl
mov
push
out
and
addl
fs
mulb
push
cld
add
outsl
out
xor
data16
jne
ljmp
jns
dec
mov
xchg
push
or
daa
cmpsb
int
xor
je
ss
cmp
call
or
add
xchg
adc
in
push
je
and
inc
cmp
jo
clc
mov
xchg
push
test
xorl
sub
mov
pusha
out
cmpsb
mov
mov
dec
or
into
mov
jae
sbb
negb
or
mov
stc
sar
lds
mov
pop
inc
cs
mov
movb
jmp
or
loope
cmc
es
push
push
loopne
and
scas
call
jmp
lret
adc
aam
push
mov
fcomi
stos
mov
xor
mov
cwtl
inc
das
ret
adc
cmp
pop
dec
and
hlt
mov
fwait
pop
ss
pushf
scas
jbe
test
xchg
xor
cs
or
iret
push
push
pop
jns
lcall
bnd
xchg
mov
rclb
lods
push
or
fs
paddsw
jne
data16
inc
push
movsl
mov
stos
stos
cmp
into
push
rorb
idivl
push
jbe
pop
xor
subb
sbb
mov
mov
pop
scas
dec
mov
dec
push
cmp
mov
mov
xor
dec
inc
inc
mov
lret
pop
pushl
adc
popf
pop
sbb
sti
dec
xchg
xor
ret
shrl
add
mov
inc
sbb
jbe
cmpsb
scas
ficoml
add
mov
mov
inc
mov
lret
sbb
add
jmp
mov
mov
or
push
or
xor
mov
jle
push
shrl
data16
mov
jne
xlat
icebp
xor
cli
lds
in
mov
xor
cmp
mov
lds
xchg
add
cmp
mov
jp
push
stos
xor
push
orb
aad
ficoms
jno
dec
clc
arpl
mov
cwtl
inc
mov
push
incl
lods
xchg
sbb
mov
fxch
xor
out
daa
es
push
cld
xchg
push
cmp
xchg
test
sti
pop
les
lods
inc
xchg
je
xor
cmp
push
scas
insb
mov
pushf
push
popa
adc
mul
repnz
repnz
xor
or
xorl
push
int3
sub
scas
arpl
jmp
adc
jo
and
adc
rorl
data16
mov
jne
iret
jo
or
and
xor
das
jmp
cmp
andb
into
inc
jo
movsl
dec
push
pop
jbe
enter
sti
or
add
push
test
push
push
addr16
insb
repz
push
cwtl
push
clc
pop
jne
ret
pop
fs
jl
loop
cmp
inc
xchg
dec
shlb
daa
in
sbb
sbb
pop
xchg
cs
cli
pop
mov
loop
mov
push
cmp
aad
lea
out
sbb
cmpsb
ret
es
mov
scas
jb
jae
inc
push
adc
std
dec
inc
or
lret
sbb
add
dec
pusha
ja
or
mov
and
insl
fdivrl
loope
cs
mov
test
inc
xchg
nop
divb
cmp
hlt
aam
mul
mov
jmp
jl
fldlg2
mul
stos
jno
call
cs
jp,pn
test
aam
cli
mov
dec
pop
adc
lahf
mov
out
loop
in
jae
pop
into
shl
push
sub
pop
adc
jge
lss
orl
pop
in
shlb
add
push
lcall
inc
aaa
mov
adc
sti
push
into
push
icebp
or
clc
push
cmc
loopne
and
push
xor
xchg
push
je
repnz
in
mov
jnp
adc
inc
testl
inc
fs
and
cmp
mov
int
jno
fs
loope
imul
out
pop
and
xchg
sti
pop
scas
call
mov
into
bound
dec
inc
pop
pop
jnp,pt
and
xor
int
sbb
pop
repz
loop
pop
jae
pop
adc
cmp
lret
sub
lods
es
inc
les
pusha
dec
bound
dec
ret
fisubl
xor
mov
and
and
dec
aas
jnp
jo
xchg
push
mov
scas
mov
lret
lock
and
dec
shlb
inc
ljmp
push
out
pop
push
mov
daa
xor
jmp
push
call
xchg
adc
sub
fwait
jb
mov
cmc
aad
insl
xor
push
xor
pop
test
mov
xchg
iret
and
mov
stc
xchg
scas
rcl
orl
push
push
inc
or
pop
add
cmpsl
movsb
push
cld
mov
insl
rcr
out
add
inc
mov
pop
paddsw
or
push
dec
add
test
test
xchg
dec
add
jne
push
imul
icebp
pop
mov
xchg
add
add
push
mov
and
loopne
call
repz
inc
sbb
mov
mov
es
dec
mov
lods
out
xor
jno
cmp
std
imulb
cwtl
and
pop
jne
xor
inc
sub
mov
add
data16
mov
adc
out
adc
add
jge
sti
push
jo
jnp
stos
lret
push
js
aaa
cwtl
and
popa
jg
add
adc
xchg
call
lds
sti
fbld
adc
fwait
popf
xchg
pop
popa
push
jno
sbb
sbbb
push
push
fwait
or
or
imul
daa
lcall
inc
jne
and
loope
cli
lock
shll
or
sub
loop
lcall
das
and
jmp
mov
xchg
push
mov
aaa
sahf
nop
lods
aad
jecxz
test
jl
cmpsb
mov
push
mov
outsb
cwtl
add
cli
pushf
inc
or
or
xor
add
aaa
push
das
mov
add
add
pop
sub
mov
pushf
mov
fcom
test
cmp
lcall
nop
sub
xor
cmpsb
ret
icebp
xchg
or
cmp
xor
fcomps
jmp
psllq
in
mov
push
iret
pop
or
popf
dec
outsb
cmp
jmp
pop
jp
push
or
dec
jo
call
call
repnz
fcmovnbe
test
addb
pop
dec
xchg
pusha
sbbl
lock
frstpm(287
xor
fdivrl
push
adc
icebp
lods
jp
outsl
into
mov
pushw
cmp
inc
fwait
cmpsl
mov
xor
add
cmp
pop
into
movb
fsubrs
loope
pop
add
sti
xchg
push
es
jmp
in
add
xlat
xor
sahf
int3
inc
jb
dec
dec
push
xor
cmpsl
adcb
data16
scas
push
xor
repz
mov
popf
aas
pop
andb
cld
mov
sbb
test
pop
jne
sbb
dec
sub
push
mov
mov
mov
scas
and
pusha
sub
pushf
xor
cmp
mov
jne
adc
mov
mov
int3
andb
push
inc
mov
sub
adc
xor
sbb
jp
jbe
pop
xchg
sbb
push
push
testb
and
div
pop
add
ret
xchg
and
and
aas
test
add
inc
push
sub
ret
das
arpl
loopne
shlb
dec
dec
sbb
inc
jmp
mov
lcall
dec
mov
fimull
das
xor
dec
ja
jno
sbb
sahf
push
clc
pushf
scas
push
les
gs
xchg
aam
repnz
push
push
mov
in
cmc
hlt
jb
fists
js
adc
insb
lret
aas
xor
stos
pop
movsl
test
inc
xchg
jo
mov
dec
mov
and
push
pop
outsb
mov
cwtl
daa
pushf
aas
cli
add
subb
push
scas
pop
ja
jge
dec
mov
test
push
inc
jbe
cld
xchg
inc
jo
gs
sahf
push
xchg
movsb
shll
ret
xchg
cmp
push
xchg
je
pop
xchg
rcrl
sbb
fisttpll
xchg
xor
rorb
sarl
or
roll
cmp
rcrl
movsl
loope
xchg
lds
adc
jno
popa
push
adc
jne
and
icebp
movsl
loope
xchg
lds
adc
jno
popa
push
adc
jne
and
mov
sub
mov
mov
xor
popa
push
adc
jne
push
and
icebp
movsl
loopne
xchg
lds
ljmp
push
and
lcall
sahf
jns
add
jle
pop
xchg
xor
lret
and
push
stc
or
jle
outsb
test
mov
jns
or
sbb
sub
cmp
leave
cmp
cs
sbb
mov
scas
imul
cmp
leave
adc
imul
or
dec
cmp
ljmp
ret
lmsw
pop
add
adc
mov
cmpsb
out
xchg
push
test
jne
adc
push
roll
mov
push
push
fdivrp
cltd
cmp
pop
call
sub
shll
pop
test
out
jecxz
data16
int3
out
stc
mov
adc
mov
jle
stos
sahf
jle
popa
fsubp
jo,pn
cmp
cmp
rorl
incb
icebp
fldcw
xor
xchg
dec
in
popa
test
fidivrs
adc
mov
cs
jb
fsts
sbb
push
pop
mov
dec
push
sahf
xchg
les
inc
mov
pushf
cmp
or
sbb
mov
mov
or
sbb
sub
cmp
leave
fnstenv
jmp
cwtd
jns
pop
mov
scas
das
lahf
aas
insb
test
addb
mov
lcall
cmp
aas
sub
mov
fsubrl
mov
xchg
push
dec
jle
cld
add
xor
sub
lcall
das
lcall
dec
xchg
sbb
sub
cmp
leave
fldcw
jmp
jle
outsb
test
mov
jns
or
sbb
sub
cmp
leave
fldcw
jmp
jle
outsb
test
mov
push
popf
fld
jmp
jns
cmpsb
es
or
xchg
xchg
add
jae
dec
push
mov
and
mul
cmp
add
xor
jge
mov
aam
push
sti
fs
mov
push
push
ret
add
push
inc
add
mov
cmp
mov
fadd
jl
mov
dec
clc
cmp
sti
outsl
jmp
mov
les
adc
cli
addb
mov
bnd
pop
mov
jnp
hlt
and
jmp
sbb
aam
in
mov
int3
jecxz
nop
popf
mov
pop
inc
jmp
jp
pop
push
xlat
lock
pop
inc
sub
pop
mov
mov
mov
in
idivb
inc
add
arpl
mov
mov
int
push
adc
fimull
sbb
cwtl
mov
sub
xor
arpl
adc
std
insl
clc
xlat
addr16
push
fnsave
pop
fmuls
test
in
movsb
ret
sub
sub
sbb
mov
and
xor
xchg
pop
inc
cwtl
sub
cmp
xor
cmp
in
push
les
cli
lret
icebp
lahf
repnz
repz
mov
and
test
add
pop
xchg
int
and
sbb
push
das
pop
or
movsb
jmp
xor
std
dec
lods
fdivl
movsb
jmp
fdivrl
fcompl
push
cmpsl
test
push
and
or
jp
push
mov
push
lea
adc
int3
and
adc
xchg
sbb
add
imul
sbb
mov
call
in
sub
push
gs
pop
xchg
insb
mov
xchg
mov
ficoms
sti
int3
mov
xchg
mov
aas
test
xchg
push
pop
push
shrb
inc
jl
test
lea
adc
cltd
testl
in
aaa
popa
mov
lock
fdivr
add
fcomip
fstpt
dec
mov
daa
arpl
sbb
aam
sbb
mov
mov
lods
jg
out
enter
adc
cmp
cli
xchg
sti
stc
xchg
sub
shlb
stos
pop
bound
fwait
test
loopne
inc
xchg
mov
push
in
pop
adc
jne
lahf
fisttpll
jnp
jle
in
imul
es
mov
xchg
mov
dec
inc
xchg
lcall
inc
cmpsl
cmp
ret
bound
mov
add
loop
cmp
push
scas
or
das
fcmovnbe
es
sbb
out
sbb
das
mov
stc
stc
adc
mov
jae
pop
or
cmp
sbb
iret
sub
and
push
stos
orb
jno
jp
test
test
inc
sti
cld
jmp
fwait
es
pop
pop
movsb
aad
mov
cwtl
aas
push
adc
jbe
imul
call
das
add
push
cmpsl
dec
mov
mov
mov
ljmp
fs
shl
ss
mov
stos
sub
in
fwait
je
ficompl
xor
in
xchg
xchg
je
sbb
mov
test
int
andnps
mov
add
ds
dec
add
leave
dec
out
mov
cld
mov
int3
test
repz
mov
mov
jp
xor
and
out
and
push
mov
mov
mov
fisttpll
or
out
fiadds
shlb
psrlq
inc
lods
xor
clc
jb
mov
insb
leave
xchg
in
mov
in
jle
sub
mov
idiv
adc
inc
lahf
mov
fstl
cmp
fsubrs
add
fistpl
jge
push
out
imul
bound
inc
push
inc
push
mov
adc
clc
sahf
in
pop
jae
in
jb
inc
repz
mov
sbb
inc
mov
insl
rcr
jmp
xchg
xchg
int
addl
dec
add
sub
xchg
push
filds
dec
sahf
into
xchg
mov
bound
push
pop
pcmpgtb
sbbl
adc
inc
std
scas
mov
lret
daa
cmp
push
lret
or
insl
repz
daa
mov
add
pushf
repz
bound
mov
or
movsb
lahf
jge
or
pop
std
aas
sub
adc
mov
jp
jne
loopne
icebp
pushw
repnz
stos
cs
iret
in
test
insb
xchg
ljmp
lret
ljmp
icebp
cli
fwait
dec
rolb
mov
pop
jae
push
test
jbe
mov
out
and
aas
push
loop
loope
das
sbb
sbb
add
loopne
pop
jne
mov
xor
les
sub
adc
sarb
xchg
sbb
adc
push
dec
cmpsb
adc
xchg
pop
xor
cwtl
in
shl
negb
dec
nop
dec
push
xor
scas
clc
inc
dec
mov
push
mov
ljmp
adc
icebp
sbb
cs
xchg
sub
cld
push
popa
fcomps
and
insl
mov
xchg
loope
hlt
fs
sub
mov
push
dec
test
jns
test
pusha
outsb
sti
dec
add
and
fbld
imul
decl
push
aaa
das
mov
sbb
flds
stc
xchg
rolb
mov
cmpsb
xchg
lret
xchg
push
lods
loop
cmp
mov
lods
pop
imul
insl
sar
pop
mov
dec
push
jmp
mov
push
and
fbld
xor
movsl
dec
lods
adc
cltd
mov
push
mov
inc
int
xor
mov
push
sbb
xchg
mov
jns
xchg
inc
aaa
lods
fdivrp
arpl
and
mov
xchg
cld
mov
mov
add
jo
xor
imul
jo
lock
scas
dec
or
fisubrl
dec
xchg
repnz
scas
pop
subb
js
pop
xchg
xor
sti
sbb
push
scas
or
mov
dec
mov
xlat
movsb
adc
and
call
ret
mov
aad
gs
data16
int
ret
jns
mov
cmpb
sbb
lods
xor
ja
inc
loop
call
out
in
shlb
imul
sbb
negb
jnp
adc
cmc
mov
push
lret
int
adc
shrl
mov
je
xchg
jge
test
and
jg
mov
sbb
xchg
imul
dec
in
sub
xchg
cmp
or
rorl
lods
mov
sahf
mov
xchg
mov
cli
in
jno
ret
and
movsb
scas
out
cmp
scas
jnp
jnp
cld
or
xor
decl
fnstsw
mov
sbb
scas
loop
push
cs
pop
ja
pushf
jge
mov
xchg
xchg
jmp
mov
sub
nop
test
int
rcr
sub
jl
cmpsl
ljmp
ljmp
outsb
enter
fstpl
xchg
sbbl
inc
jb
mov
es
cmpsb
pop
push
popa
sub
pop
mov
fstl
and
xor
clc
mov
enter
insb
push
fstpl
incb
push
inc
sti
lret
inc
loope
sbb
mov
cmpsb
call
out
hlt
rolb
and
fcomps
and
out
mov
pop
xor
adc
cmp
jmp
jns
addr16
jbe
mov
mov
cmpsb
or
les
mov
cli
jae
adc
and
out
sbb
repnz
jns
mov
loop
push
mov
sbb
mov
fsubr
add
mov
mov
push
lods
xlat
in
nop
pop
rcl
pop
xor
aas
nop
adc
lret
jns
fidivs
push
jno
cmc
stos
aas
jbe
js
cmp
and
xchg
ret
or
pop
mov
pop
cltd
fs
pop
xchg
sahf
add
sub
ss
mov
inc
jnp
and
mov
pop
sti
cli
push
jmp
xchg
inc
xchg
sti
dec
sub
sarl
iret
out
mov
xchg
es
test
sahf
pop
xor
fidivrl
stos
lds
int
xor
inc
xlat
jns
inc
outsb
dec
pop
push
mov
mov
push
jmp
xchg
and
pusha
dec
pusha
add
les
test
xchg
fsubr
pop
cmp
adc
jecxz
idivl
jl
xor
jp
popa
cmp
mov
xchg
or
mov
inc
and
fidivs
cmp
mov
pop
jne
sbb
out
adc
insb
outsb
flds
jns
cli
add
xchg
jae
jge
xlat
outsb
sahf
cltd
cmp
popa
jo
iret
jns
push
lock
xchg
add
int
cmpsb
xchg
shl
addr16
pop
outsb
fiaddl
icebp
div
pop
in
add
lock
daa
dec
shl
or
subl
pop
xor
cmp
les
clc
cmp
cmpl
adc
mov
xor
data16
and
or
imul
fidivrs
cld
or
mov
xchg
loope
inc
leave
mov
cltd
xchg
or
js
shlb
jnp
dec
cmp
jmp
mov
roll
mov
jmp
loopnew
cmp
loope
dec
cmpl
mov
cmp
test
cmp
jl
lahf
cli
in
addb
jl
cmp
push
jmp
sbb
mov
push
cmc
and
ja
aam
test
or
push
andb
pop
xlat
and
xor
push
sbb
cmp
sub
jbe
ss
jbe
call
ficoml
cmp
fnop
fisubs
add
xchg
push
or
pop
jle
imul
fimuls
jno
aam
jmp
mov
out
notl
lods
mov
les
or
dec
imul
sbb
fdivrs
push
mov
lcall
dec
cmp
and
data16
push
adc
notb
xchg
dec
xchg
scas
pusha
nop
jno
stos
lret
xchg
push
add
lods
lds
inc
loope
pop
dec
test
cmpsl
mov
pop
mov
divl
lods
rol
rcll
mov
sti
inc
out
movsb
mov
jo
mov
outsb
sub
jne
outsb
lret
aaa
rclb
and
jl
cmp
pop
cwtl
adc
in
xchg
aaa
mov
cmp
xchg
or
femms
add
icebp
adc
fnstcw
jo
stos
lret
je
in
test
stc
sbbb
adc
push
jmp
dec
fwait
mov
sbbb
aas
lret
mov
pop
fnsave
int3
popa
clc
mov
mov
jg
and
jle,pn
mov
mov
mov
xchg
mov
js
fdivrp
sbb
cmc
incb
bound
cld
xchg
sbb
insl
scas
inc
mov
es
fidivs
rcr
sbb
cmpsb
sbbl
ret
cs
jp
insb
fcoms
mov
out
mov
rorb
mov
xor
adcb
cli
les
and
mov
popf
scas
ret
jp
mov
lret
ja
fldt
or
jl
ljmp
subb
inc
ficoms
stos
sbb
das
ljmp
popf
aaa
ljmp
mov
jl
mov
jno
fld
cmp
fisubl
jp
jl
xchg
inc
and
push
push
adc
stos
sub
icebp
ret
dec
add
cmc
cli
loopne
addr16
stos
mov
movsl
pop
imul
fimuls
or
jbe
adc
push
add
jge
or
cmpsl
aaa
clc
ljmp
int3
mov
cmp
jno
or
add
mov
mov
ds
mov
loop
ljmp
jl
es
fiaddl
enter
jle
jg
outsl
xlat
movsb
test
inc
outsl
push
lret
data16
fldt
jg
xchg
xchg
jno
mov
mov
and
nop
mov
sub
push
and
push
pusha
cmp
sub
mov
push
dec
mov
push
mov
jae
js
int3
out
jb
cwtl
cmp
mov
push
or
insl
sub
sbb
adc
xor
push
sbb
jp
cmp
add
ss
popw
js
out
push
mov
push
push
out
adcl
lds
fmuls
or
pushf
mov
cmp
shlb
jae
fldenv
add
lods
xchg
shlb
pop
jecxz
outsl
mov
iret
data16
bound
out
out
sub
adc
insl
outsl
cld
fwait
sub
insb
or
inc
int3
jbe
add
adc
sub
push
jb
cltd
add
adc
dec
sbb
mov
ja
cwtl
mov
testb
insb
push
cmpl
cmp
mov
test
cmc
push
push
into
xchg
push
mov
jb
clc
scas
mov
add
lahf
icebp
and
shl
cwtl
stos
shl
adc
xchg
sub
or
js
nop
add
aad
add
fimuls
lret
in
sub
and
jo
xchg
adc
addr16
mov
pop
fdivl
pop
adc
inc
aas
jl
inc
test
outsl
xchg
jmp
cltd
shll
les
js
and
xor
mov
or
ret
sub
adc
cltd
sub
je
dec
and
inc
sahf
pop
inc
loop
out
dec
mov
imul
mov
jg
bound
pop
das
sbb
jg
in
scas
and
mov
xchg
outsl
fistps
push
ret
push
inc
jge
and
dec
stos
mov
pop
inc
mov
push
leave
mov
xchg
mov
push
adc
xchg
push
leave
inc
popa
sbb
sbb
js
and
in
inc
or
lds
psrld
jle
leave
shl
mov
ds
jae
aam
mov
test
cs
lods
mov
and
clc
and
repnz
and
dec
xor
sbb
fnstenv
shll
jno
or
hlt
fisubrl
add
hlt
xor
int3
mov
or
adc
aas
cs
clc
push
pop
lods
shl
sub
ljmp
add
sti
inc
mov
pop
xor
cmp
pushf
jb
sub
ljmp
push
xor
js
jge
in
cmp
cmp
xchg
lds
sbb
mov
sub
repz
lods
lcall
nop
sub
dec
pop
imull
enter
ficompl
es
push
pop
dec
mov
pop
adc
fidivrl
inc
sbb
into
int3
sbb
pop
xchg
jle
inc
shll
pop
gs
sbb
xor
sub
or
arpl
cmp
out
adc
daa
add
mov
jne
adc
insb
push
sub
inc
mov
adc
adc
push
jae
xchg
push
test
je
push
les
and
mov
mov
out
decl
sub
imul
jge
xchg
nop
sub
mov
fcoml
or
fdivs
mov
push
push
jnp
pop
mov
mov
mov
mov
mov
mov
xchg
jo
pop
mov
ljmp
inc
ret
popf
mov
notb
outsb
add
mov
loope
aas
divl
xlat
dec
arpl
sbb
popa
xor
dec
sub
mov
sub
fsubrp
sbb
fsubrp
xor
jle
push
sets
cwtl
repnz
fs
or
lods
dec
les
xor
cmp
sarl
mov
inc
movsl
lret
cmpl
fwait
test
popf
mov
lods
lods
test
out
inc
lret
leave
jb
inc
pusha
int3
sub
outsl
in
jmp
int
out
in
pop
lods
push
xchg
aam
js
aam
jle
movsb
pop
dec
arpl
xor
pop
xchg
pop
jno
sub
ljmp
icebp
loop
inc
fadd
mov
push
dec
adc
inc
mov
dec
inc
xor
pushf
cltd
adc
js
addr16
and
ret
push
sbb
xchg
inc
imul
ficoms
mov
inc
addr16
sti
sahf
or
bound
or
rolb
pusha
insb
xor
adc
out
jns
push
decb
insl
lods
cmp
mov
or
inc
and
sti
lods
adc
stc
in
xchg
mov
push
gs
cmp
mov
ljmp
sub
jp
sub
out
sbb
cmp
test
xor
pop
sub
ret
int
lahf
sub
adc
or
mov
lds
aaa
cmp
mov
push
jl
es
jae
mov
sbb
adc
add
inc
or
pusha
mov
xchg
incb
cmpsl
dec
fidivl
loop
cmpsb
arpl
add
push
jle
pop
hlt
cmp
inc
aaa
cld
xchg
lahf
add
cmp
dec
or
cmp
out
lods
dec
ret
sub
xlat
mov
notl
jns
push
repnz
cmp
jg
or
insl
lret
xchg
hlt
jne
jp
adc
ja
mov
aaa
bnd
sbb
add
jge
cmp
jle,pt
in
faddp
lret
mov
test
imul
loope
jbe
cmp
or
loopne
add
imul
es
sbb
inc
shlb
inc
dec
adc
pusha
data16
and
stc
popf
out
jle
jle
sbb
inc
cmpsb
mov
ds
and
push
sub
xchg
mov
and
daa
xor
push
and
add
jns
aas
adcb
dec
imulb
movsb
rcrl
sbb
pop
cld
arpl
adc
nop
add
jl
and
xor
scas
mov
bound
js
jbe
cmp
fsts
xchg
xchg
mov
movsb
and
pop
cmc
sub
add
out
push
and
xchg
jl
stc
or
jl
lahf
push
dec
gs
add
lock
stos
adc
aaa
mov
rolb
push
loope
mov
lret
push
in
out
jge
out
mov
add
xchg
ss
call
mov
aas
js
jo
add
test
jnp
jecxz
loopne,pt
pop
inc
and
sbb
cmp
add
repz
push
popa
push
aas
lahf
jle
xlat
jnp
fwait
inc
add
xlat
pop
outsb
insb
fistl
or
sub
jno
ror
adc
mov
pop
popa
jbe
add
dec
ret
xor
cmp
je
sti
dec
cs
outsl
aas
xchg
inc
ljmp
mov
xor
imul
push
incl
mov
push
mov
sbb
das
subl
test
cmp
inc
imul
fists
in
pop
and
out
adc
jb
lret
mov
lds
xchg
jmp
jno
loope
adc
inc
cmp
lods
mov
sbb
pop
xchg
or
loope
in
sbb
jnp
mov
adc
inc
adc
xor
xchg
dec
jb
or
inc
cmp
sub
ret
das
cs
mov
mov
hlt
enter
js
nop
shlb
xor
xchg
pop
cltd
cmc
popa
cs
fcomp
xchg
jne
in
fldl
pop
bound
lret
fldl
bts
sbb
lds
pop
push
enter
or
adc
jnp
arpl
fdivl
arpl
cmc
pop
jmp
faddl
aam
outsl
fmull
mov
jg
in
xchg
cwtl
mov
xchg
cltd
pusha
or
aad
je
sub
cmc
push
xchg
push
pop
test
mov
outsl
in
repz
pushf
inc
mov
cmpsl
add
jo
pop
jo
ret
imul
and
pop
mov
mov
push
imul
push
xchg
in
lock
nop
cli
dec
popf
mov
lock
pop
xor
repz
push
ja
popa
sub
xchg
push
pop
hlt
out
lods
jmp
cmpsl
cmpsb
inc
es
leave
push
inc
nop
pop
sarl
mov
push
add
loopne
jne
rol
or
mov
lock
lea
inc
cwtl
clc
movsb
loope
je
daa
sub
aaa
mov
dec
dec
dec
and
dec
nop
in
or
addr16
mov
test
jnp
andb
in
ret
mov
sub
out
xor
xchg
addr16
pop
inc
hlt
cli
jbe
xchg
dec
out
out
push
repnz
mov
mov
or
stos
xor
inc
and
imul
xor
pop
lea
pop
pop
popf
mov
cwtl
mov
jge
lods
add
xor
pop
add
or
xor
sbb
out
adc
imull
scas
pop
mov
adc
jb
sti
jb
and
inc
mov
jg
mov
cmp
xorl
xor
daa
mov
pop
das
sbb
add
push
dec
cwtl
out
mov
cmp
ss
mov
jmp
iret
mov
fadds
mov
repnz
testb
mov
sbb
sub
cmp
leave
fldcw
jmp
jle
outsb
test
mov
jns
or
sbb
sub
cmp
leave
fldcw
jmp
jle
outsb
test
mov
jns
or
sbb
sub
cmp
enter
jmp
jle
outsb
test
mov
scas
imul
mov
test
stc
jns
notb
xchg
push
mov
out
leave
fdivrp
into
jmp
in
cltd
subl
jns
imul
cmp
sub
fldz
leave
fdivrp
into
jmp
sahf
mov
outsb
dec
pop
jns
imul
cmp
sub
fincstp
leave
stc
jmp
xchg
dec
push
or
or
dec
inc
pop
inc
push
pop
pop
xchg
stos
addl
pop
xor
clc
mov
push
adc
pop
das
sbb
mov
jbe
mov
inc
cmpsb
movsl
jb
xchg
cltd
scas
or
mov
mov
mov
sbb
rcrb
icebp
js
fsts
les
xchg
sub
adc
setno
data16
cmp
or
or
mov
in
pop
shr
mov
popa
rorl
mov
std
mov
rcrl
notl
lods
arpl
inc
adc
mov
test
pop
xchg
or
cmp
xlat
push
pop
push
inc
cltd
jmp
lods
inc
insl
mov
in
orl
jl
sbb
push
cmp
cmp
fincstp
leave
fdivrp
into
jmp
sahf
mov
jbe
inc
jns
imul
cmp
inc
xchg
fisttpll
jmp
sar
mov
jle
add
sbb
sbb
insb
inc
arpl
mov
mov
lds
adc
xor
ja,pt
or
push
fwait
popf
addb
mov
mov
pop
outsb
dec
pop
jns
imul
cmp
sub
fldz
leave
fdivrp
into
jmp
sahf
mov
outsb
dec
pop
jns
imul
cmp
sub
fld
mov
shr
int3
pushfw
ss
jmp
mov
shlb
jp
push
andl
xor
and
mov
dec
stos
cmp
jg
mov
lods
out
dec
outsb
mov
adc
fcoml
cli
icebp
pop
add
mov
outsb
mov
cld
xchg
and
dec
xchg
pop
shll
fidivl
data16
out
cltd
cmp
push
fwait
in
push
mov
movlps
dec
dec
inc
lret
cmp
out
lods
fistps
icebp
jl
dec
jbe
xlat
mov
dec
cmp
jbe
lahf
je
movsl
xchg
les
ret
dec
ljmp
pop
sbb
ret
shlb
imul
dec
mov
jecxz
js
xchg
mov
dec
jp
test
popf
adc
jg
lock
lods
push
pusha
lds
sbb
xlat
add
mov
addb
inc
pushf
imul
pushf
mov
sub
pop
cmp
stc
push
cmc
mov
pop
iret
shll
les
mov
adc
dec
loope
sbb
cltd
mov
pushf
mov
xor
add
adc
ja
push
sbb
xchg
pusha
iret
adc
icebp
or
push
in
sub
dec
sbb
loopne
jge
sbb
or
sub
sbb
fcmovnbe
xor
xor
xchg
fsubs
rcr
xchg
aad
mov
sub
jnp
mov
xor
xchg
mov
mov
int3
mov
and
and
test
loopne
add
sbb
lea
sbb
fwait
enter
add
icebp
loop
dec
pop
xchg
in
and
icebp
outsb
pop
arpl
and
fnstcw
mov
out
int3
xchg
movsw
outsl
and
call
lea
jle
pop
clc
mov
pop
add
icebp
jb
pushf
sbb
jno
sbb
scas
dec
sbb
popf
int3
adc
pop
out
xor
cmpsb
test
jno
sub
mov
lret
fiadds
cmpsl
dec
and
flds
movsb
push
push
xchg
lods
out
lahf
dec
roll
xchg
or
sbb
adc
cmp
xchg
lahf
repnz
jnp
pop
pop
movsb
sahf
push
lret
xchg
mov
push
mov
mov
and
jae
cs
mov
les
and
push
call
andb
lods
gs
fcom
out
imul
mov
or
sarb
add
or
pop
std
test
call
sub
and
loope
sbb
mov
icebp
xor
sar
push
repz
movsl
hlt
or
aam
sbb
scas
lcall
cmp
ja
ret
lret
cmpsb
es
in
dec
jb
mov
mov
rcl
sub
push
outsl
or
sub
filds
dec
repz
movsb
std
das
dec
mov
faddl
mov
and
cmp
inc
ss
adc
daa
push
sar
fs
pop
js
imul
xchg
jno
xlat
jecxz
xor
pop
cli
sub
push
mov
and
stc
in
pop
xlat
imul
or
arpl
pop
es
out
cmp
dec
and
scas
push
out
adc
cli
shll
xchg
and
dec
pop
jl
les
inc
adc
adc
stc
pop
dec
test
push
lret
lods
iret
adc
mov
int3
push
outsl
xchg
ds
outsb
or
test
fs
leave
rclb
mov
fs
in
inc
pusha
popa
push
push
leave
push
mov
xchg
out
add
dec
fimuls
jb,pn
in
add
xor
xchg
pop
mov
int3
mov
int3
mov
scas
jg
jbe
jno
cltd
rol
fstpt
mov
imul
sbb
scas
lahf
add
fdivr
adc
add
pusha
mov
mov
xchg
mov
fstl
mov
stos
js
or
mov
cmp
inc
lods
xchg
xchg
sbb
xchg
shrb
sbb
mov
popa
js
adc
gs
addr16
cmpxchg
mov
jbe
les
and
cwtl
les
pop
ljmp
cmpsl
ret
negb
loop
mov
mov
ds
fs
xchg
hlt
cmpsb
andb
push
jle
mov
in
sbb
divl
sub
ljmp
adc
xchg
pop
mov
shlb
pop
enter
push
in
dec
pop
sbb
jle
aam
jl
insl
jmp
cmp
push
ds
imul
repz
push
pushf
clc
or
and
push
push
and
movsb
jg
add
jg
subl
mov
xor
sub
jae
shlb
in
jecxz
or
mov
inc
cmp
dec
in
add
inc
add
int
mov
fs
lahf
jp
and
push
adc
jmp
cmp
pushf
fwait
int
mov
push
or
incl
pop
sub
je
ds
sbb
push
mov
adc
push
cmp
inc
clc
add
ret
push
pop
and
orl
cmp
push
xchg
fdivl
fadds
int3
xchg
jmp
imul
pop
adc
fcmovne
mov
lcall
call
pushl
loop
push
insb
jecxz
cmp
popl
mov
ret
fld
jbe
out
idivb
mov
lcall
mov
cmp
test
insl
jns
fmull
pusha
inc
xchg
and
gs
push
dec
mov
jnp
fcmove
fxch
and
fmull
imul
lods
jp
or
fsubs
lret
xchg
pop
mov
imul
lret
lret
mov
adc
sub
cmp
mov
loop
xchg
sbb
mov
fsub
mov
shll
or
in
fstpt
xchg
mov
movsl
xchg
mov
into
inc
push
mov
les
jb
inc
sbb
adc
mov
jae
ljmp
mov
imul
inc
add
lea
inc
pop
insl
int
aam
mov
ja
insb
xchg
push
jno
repnz
in
add
or
clc
jecxz
pop
xchg
lret
add
rorb
inc
cs
cld
sarb
sub
add
test
adc
inc
push
cmc
push
nop
jbe
jb
mov
aas
clc
mov
sbb
add
xor
lock
sub
jae
mov
add
inc
add
insl
inc
pop
mov
xor
loopne
sti
xor
rcl
popa
mov
mov
xorl
mov
sarb
sub
add
das
jne
xchg
sbb
popf
movsb
iret
inc
loopne
adc
daa
jp
test
push
ret
faddl
xor
pop
out
adc
inc
hlt
cmp
dec
pop
xchg
cmp
push
push
sbb
sbb
mov
jno
pop
imul
repz
loop
call
sub
mov
and
cwtl
stos
and
repz
out
push
sub
arpl
mov
pop
sub
sub
pop
dec
xor
movsb
push
sbb
adc
ds
pop
add
mov
mov
push
push
loop
mov
in
arpl
or
push
aad
xchg
lcall
cmpsl
cmpsb
popa
dec
xchg
adc
iret
inc
or
inc
xorl
fs
inc
fmul
xchg
imul
lcall
movb
push
xor
adc
dec
lcall
push
sarl
mov
jmp
or
dec
clc
scas
popf
in
mov
sbb
out
js
pop
dec
cwtl
in
cmpsl
jns
xorl
sbb
ljmp
enter
lea
pop
sbb
lahf
test
imul
in
and
xor
sub
notl
adc
cs
sbb
popf
nop
divb
xor
dec
loop
cmp
movsl
dec
sahf
decl
movl
test
pop
inc
or
fldenv
cmp
add
jp
aaa
jecxz
jle
test
dec
cld
ret
cli
push
out
jne
xchg
push
in
sbb
movsb
int3
lods
mov
mov
dec
aas
jb
pop
mov
bnd
arpl
sti
pop
sub
add
pop
adcb
and
and
push
cmc
adc
jae
movsl
jno
fwait
int3
ljmp
shlb
insl
dec
pop
ret
and
stos
add
into
cs
add
xchg
lods
inc
sub
mov
gs
lcall
dec
mov
rep
xchg
pop
cmpsb
push
gs
and
xchg
pop
xchg
icebp
std
in
daa
jno
cmp
jge
xchg
dec
xor
fidivrs
push
add
sub
or
out
mov
ret
mov
inc
bound
cmpl
add
sbb
je
cs
inc
add
push
mov
and
lret
cmpsl
xor
pop
mov
repz
dec
jne
stos
inc
inc
aam
jno
mov
rorl
pop
push
mov
mov
mov
leave
adc
adc
push
mov
push
ret
hlt
mov
pop
shl
repnz
and
imul
nop
adc
out
add
stos
mov
in
pushf
mov
cmp
icebp
pusha
cmpsb
imul
mov
lret
pop
xlat
fwait
lods
orb
outsb
or
xchg
xchg
dec
nop
test
stos
js
push
and
mov
jp
pop
fwait
mov
inc
cmpsb
sbb
nop
jl
clc
pop
fdivl
or
mov
jnp
mov
repz
or
inc
jle
rcr
bound
pop
outsb
and
xchg
add
mov
mov
xchg
lea
xchg
cmp
aaa
push
cmpsb
inc
daa
les
fists
xchg
xor
sbb
test
es
movsl
je
scas
cmpsl
stos
test
out
lods
loope
addr16
jno
sub
push
pop
test
in
jmp
pop
jno
insb
andb
fadds
cwtl
dec
enter
add
jnp
sbb
int3
cwtl
lahf
cmp
sbb
mov
jb
clc
and
daa
fisttps
xchg
inc
pop
ficoml
and
lods
xor
fnstenv
int3
push
ret
imulb
je
aam
int3
insb
ficoms
pushf
negl
or
imul
fwait
dec
lret
add
fscale
sbb
cwtl
aad
jno
mov
mov
sub
mov
lcall
mov
dec
push
dec
pop
mov
insl
in
push
arpl
lock
jb
mov
mov
in
rorb
and
or
fcompl
dec
int3
lcall
prefetch
pop
adcb
cmp
cmpl
lds
xor
imul
hlt
mov
mov
fstl
cmp
and
and
mov
dec
xchg
push
adc
push
inc
loop
inc
sub
xchg
adc
push
test
inc
push
icebp
movsl
mov
sahf
xor
imul
iret
adc
lahf
decl
mov
and
push
hlt
in
cld
ffree
or
mov
movsb
mov
mov
and
mov
mov
xor
mov
pop
jge
dec
movsb
inc
dec
mov
pushf
push
jl
jle
fdivr
and
movsb
xor
fisttpll
add
sbb
mov
jecxz
inc
aam
cltd
aas
lea
loope
inc
fdiv
xor
andb
lock
inc
push
aam
and
sbb
call
lcall
or
gs
pop
out
cmp
sbb
lret
movsl
leave
ret
enter
aas
sbb
cmp
shrb
sarb
push
push
pop
pop
inc
outsb
jnp
je
mov
movb
cmp
out
popa
or
push
in
test
fstpt
in
cmpsb
imul
sub
loope
mov
inc
xchg
insb
iret
cmpsl
loop
sahf
pop
sbbl
or
fldt
mov
jnp
js
in
xchg
mov
lods
jge
and
movsb
scas
aam
jp
inc
jle
mov
cwtl
imul
xchg
adc
lea
pop
push
scas
push
and
jecxz
sbb
loope
mov
insb
inc
test
test
jno
les
fidivrl
xor
pop
daa
xchg
ret
mov
dec
mov
leave
jns
cli
pop
int
popa
and
jmp
bound
xchg
xchg
push
cld
cwtl
ret
cmp
std
pushf
mov
inc
loope
popf
xchg
sbb
sbb
popa
lahf
jno
out
rol
mov
cmc
and
xor
call
rcll
bswap
jns
lcall
add
rcll
stos
cs
outsb
mov
fcomps
jns
fisubrs
scas
mov
jo
gs
shlb
sbb
add
cltd
push
mov
jno
push
and
les
xchg
shlw
xor
sbb
push
and
xchg
and
enter
out
in
jecxz
cltd
out
fsubp
xchg
int3
cmp
addr16
xchg
in
test
and
mov
mov
cmpsb
xchg
cmc
dec
cmp
call
cmp
inc
and
pop
or
xchg
and
clc
push
jae
pop
sub
aad
mov
and
xorb
int3
mov
mov
lahf
lods
jge
pop
or
xor
xchg
lock
arpl
icebp
shll
push
mov
scas
mov
add
ds
fidivl
or
insl
pop
pushf
mov
adcl
scas
add
fnstsw
jns
lods
scas
movsb
xor
fcoms
sub
addb
mov
addl
imul
xor
push
aas
test
pop
adcl
mov
clc
cmp
movsl
xor
jb
mov
jb
jne
jnp
push
test
in
mov
cmp
push
adc
jl
addr16
xchg
inc
mov
ffree
or
inc
loop
js
xor
xor
xchg
dec
movsl
jns
push
andb
xchg
lods
fstps
push
sub
cmp
sbb
push
lahf
cmp
add
test
jae
push
adc
leave
jle
or
popf
sahf
ret
or
fwait
mov
jp
or
cmc
cmp
ljmp
pop
pushf
test
or
mov
scas
jo
adc
inc
cmp
imul
sbb
pop
outsb
shll
aas
inc
imull
jbe
loopne
pop
mov
orl
xchg
cmpl
insb
push
xor
xor
ljmp
mov
outsb
stc
js
movsl
dec
mov
clc
adc
add
and
xchg
xor
gs
jg
cmp
xor
pop
iret
or
mov
xor
sub
test
inc
fidivs
xchg
mov
jp
cmp
in
std
mov
push
bound
mov
fmull
std
stos
sbb
add
sub
orb
sbb
and
das
pop
xor
aaa
push
call
and
mov
cs
repnz
inc
add
repnz
lcall
mov
addr16
and
gs
test
int3
jp
cltd
pop
push
ss
sbb
xor
xor
pop
popf
push
daa
xchg
adc
int3
jecxz
repz
sub
and
mov
fs
xchg
in
mov
cwtl
rolb
sub
dec
stos
sub
int
test
gs
jno
xchg
sbbb
lret
cmpsl
or
aas
mov
sbb
xor
es
xchg
iret
pop
test
aas
ds
pop
inc
clc
mov
sbb
adc
and
adc
mov
pop
out
popf
stos
dec
add
mov
inc
rcrl
movsl
pop
mov
out
iret
lahf
das
lret
lret
rorb
loopne
xchg
inc
add
clc
lret
add
push
jbe
adc
das
je
outsl
fldl
push
ret
sbb
sahf
rcl
iret
fisttps
addr16
xchg
ret
lods
pop
mov
out
dec
scas
loopne
sbb
jb
repnz
out
push
pop
pop
jg
mov
cmp
frstor
scas
mov
xsave
gs
sub
sbb
push
xor
out
jb
mov
xorl
imul
sti
mov
fwait
mov
push
or
jns
ficoms
stos
add
sub
mov
mov
aas
or
jno
addr16
and
pop
pop
cmp
and
cmp
xchg
fwait
inc
pop
das
cmp
pop
imul
popf
mov
xor
jnp
adc
sahf
pop
jge
cmpsl
xor
cmp
outsb
das
sub
loope
pop
adc
push
push
inc
daa
sbb
and
push
xor
adc
xor
lods
stos
push
test
aaa
ss
xor
cwtl
push
xchg
mov
pop
les
mov
in
je
popa
arpl
sub
js
mov
mov
inc
dec
xchg
js
jmp
cld
jbe
mov
mov
testl
ja
and
rorb
jno
das
popa
xor
bound
pop
push
ror
ret
insl
lods
adc
push
dec
mov
popf
fcom
xor
mov
out
jbe
jg
dec
ret
xor
repnz
ret
or
jnp
xchg
fs
mov
xorl
fstpt
mov
outsl
lahf
sbb
imul
movsl
pop
xchg
dec
jmp
adc
cld
fbstp
sbb
cmp
jno
jae
mov
jne
push
clc
push
out
inc
pop
inc
sub
fcmovnb
or
cmpsl
das
mov
insb
pop
inc
out
mov
aad
movsb
in
sbbb
sbb
adc
shrb
sahf
and
or
sub
pop
addr16
push
inc
pop
mov
xchg
in
dec
call
test
xchg
cmp
test
enter
sub
loopne
or
sbb
or
sub
inc
mov
add
movsl
test
mov
aaa
stos
or
ljmp
int
cmc
imul
scas
lcall
repz
push
mov
roll
dec
xchg
sbb
sbb
loopne
add
aam
stos
dec
dec
wbinvd
outsl
cmp
in
inc
cwtl
xchg
mov
sub
lods
xchg
outsb
fidivl
pop
xor
add
inc
and
jns
xor
lret
jp
ja
das
leave
or
hlt
push
mov
jl
inc
scas
lea
cmc
aad
cmp
icebp
and
pop
test
mov
lret
sub
fs
mov
push
call
shr
sbb
fistpll
popa
lret
cs
iret
mov
negb
inc
dec
dec
xor
xor
and
fld
cmpsl
inc
cli
sbb
test
test
and
arpl
sub
mov
sbbl
or
test
into
adcb
faddl
push
notl
mov
stc
xchg
sub
scas
mov
sbb
sub
mov
int3
add
cmp
pop
dec
js
adc
sbb
test
imul
in
jbe
adc
inc
scas
and
iret
push
cmp
stos
add
adc
fs
mov
test
add
dec
and
pop
cmp
cmp
cmp
jl
nop
pop
std
xor
arpl
out
or
push
cltd
cmc
int3
in
rcll
cmp
pop
adc
cmp
sbb
cmp
cmp
arpl
rolb
sbb
lret
and
jle
add
ret
punpckhwd
or
in
and
test
daa
dec
mov
shrl
out
mov
pop
xchg
mov
inc
addr16
loop
cmp
cmpsl
imul
ljmp
pop
add
inc
sub
mov
and
jbe
stos
push
insl
rcll
into
int3
movb
sbb
and
cmpsb
jmp
std
xchg
mov
in
call
movsl
inc
cld
arpl
fisttps
daa
shll
lods
and
and
pop
push
addr16
sub
popa
pop
ljmp
cmpsb
cmc
dec
push
andl
pop
out
xor
sbb
push
jmp
push
fcompl
repz
fildll
lods
pusha
jo
mov
inc
pushf
xorb
xor
mov
test
dec
jecxz
inc
lock
loop
cmp
cmp
dec
lret
clc
pop
or
dec
les
pop
mov
outsl
xchg
dec
pshufw
fadds
lods
ret
rolb
mov
mov
mov
js
mov
xor
push
adc
jo
mov
sbb
jecxz
inc
faddl
mov
inc
faddl
xlat
add
cmp
inc
into
out
test
inc
mov
int
loopne
stos
add
leave
aam
into
jmp
sahf
mov
outsb
dec
pop
jns
imul
cmp
sub
fldz
leave
fdivrp
into
jmp
sahf
mov
outsb
dec
pop
jns
imul
cmp
sub
fldz
leave
fdivrp
into
jmp
sahf
mov
outsb
dec
pop
jns
imul
cmp
fldlg2
leave
into
jmp
push
mov
xchg
jecxz
jns
push
dec
xchg
cmpsb
mul
icebp
adc
insl
mov
xchg
fs
lea
in
xor
mov
test
jge
insl
mov
lds
cmc
lea
in
xor
mov
test
xchg
sti
movsl
stos
mov
lds
adc
aad
fnstsw
mov
xor
lret
jne
test
cmp
sbb
add
cmp
cs
out
sbb
inc
repnz
enter
pushf
mov
inc
mov
dec
dec
cmp
test
jne
and
sbb
cmp
and
jge
in
fsts
loop
je
lds
jmp
and
cmc
bound
dec
lcall
add
lds
das
movsl
enter
in
fistl
lret
popl
fcomps
mov
xorb
loop
mov
jns
mov
add
out
push
outsb
lea
and
andb
mov
cli
xor
xor
clc
jo
jne
test
jge
add
cmp
add
repz
mov
call
add
jae
js
orb
mov
mov
sub
sub
out
adc
movsl
cmpsb
loop
mov
pop
cmc
in
mov
jae
pop
out
sub
cmp
adc
sbb
aad
loope
shrl
pop
test
sub
adc
popf
inc
lea
lods
jne
test
jge
insl
mov
lds
cmc
fldl
in
xor
mov
test
fs
add
pop
mov
mov
jle
jae
imul
rclb
ljmp
dec
mov
sbb
pop
dec
cmp
mov
dec
mov
dec
mov
sub
arpl
pusha
imul
xchg
cmc
std
cmp
popa
xor
and
aaa
push
mov
adc
and
mov
jne
lret
scas
inc
jae
enter
mov
stos
or
jge
scas
aaa
std
test
or
scas
add
lcall
xor
call
cld
cmpsl
xor
push
enter
add
sub
enter
or
fldcw
out
push
inc
xchg
sbb
fistpll
dec
je
mov
and
pop
into
add
sub
sbb
test
and
adc
jnp
add
psrlq
push
mov
outsb
dec
ds
rolb
stos
faddl
aas
ljmp
ret
pop
inc
pop
int
fwait
test
ret
add
out
mov
xchg
loope
adc
ret
push
xor
dec
shlb
cwtl
ljmp
imul
lret
out
xor
xor
in
repz
movsl
inc
jbe
xchg
stos
outsl
lret
and
pop
xor
mov
daa
or
outsl
cmc
and
mov
gs
paddd
imul
rcrb
push
lock
xor
push
mov
gs
int3
aad
mov
aad
ret
and
int
int
imul
dec
mov
cmpsl
mov
imul
ds
arpl
fstps
jb
and
xor
mov
out
mov
or
test
aad
loop
stos
pop
jg
jne,pt
icebp
ret
inc
mov
dec
outsb
mov
addr16
lret
movsb
push
addr16
xchg
sub
push
jg
fmuls
xchg
mov
popf
push
xor
clc
push
add
and
in
pop
mov
int3
cmp
iret
adc
inc
or
cwtl
mov
push
shll
pop
pusha
mov
fimull
ret
fstp
loopne
lcall
dec
dec
gs
jge
sahf
or
pop
xchg
sub
mov
lods
rclb
in
push
xor
sub
aad
cli
sti
sbb
jne
push
jl
fimuls
sarb
pusha
mov
insb
je
push
movsb
lahf
jp
sub
pop
sub
les
and
dec
inc
in
and
iret
mov
test
inc
out
mov
or
or
sbb
lret
ja
push
pop
outsb
lods
push
test
mov
mov
or
mov
sahf
mov
fwait
inc
lahf
int
outsb
cmpsl
lahf
xchg
stos
out
ret
inc
sbb
sub
jmp
cmc
pop
dec
push
cmp
and
cltd
loope
xchg
jne
push
jecxz
pop
push
jb
iret
add
xchg
idivl
mov
pop
mov
sti
es
sti
xchg
mov
jle
fwait
enter
pushf
test
lock
lcall
fsubrl
xor
shr
imul
insb
mov
ret
adc
mov
cwtl
hlt
and
in
and
pop
psubusb
push
jp
in
lds
add
or
maxps
push
sbb
pmaxsw
out
mov
push
fwait
pop
dec
push
push
aam
rol
jge
mov
xor
adc
mov
test
pop
mov
mov
dec
pushf
stc
xor
mov
pop
shrl
jmp
scas
nop
adc
cmp
ds
mov
cwtl
mov
insb
jg
into
testl
sbb
push
outsl
push
mov
imul
and
sahf
mov
insb
loop
cmp
xor
rcrb
int3
scas
out
xor
xor
loope
adc
stc
ss
jle
sub
jnp
int
dec
stc
incb
push
gs
push
push
and
clc
sbb
mov
enter
stc
inc
adc
mov
je
add
xor
pushl
and
stos
loop
nop
int3
cmp
mov
bound
adc
xlat
adc
push
jp
mov
cmpsl
sub
xchg
test
xchg
mov
ljmp
jb
popa
scas
das
neg
pcmpgtb
pop
adc
rol
test
mov
lods
insb
repz
mov
call
mov
add
imul
push
ljmp
sbb
icebp
cmpsb
arpl
sbb
pop
jl
mov
xchg
cmp
aad
cmp
ret
pop
popa
stc
loope
inc
add
les
cltd
roll
xchg
out
jp
orb
push
add
fsubrs
into
or
in
cmc
pop
insl
lret
mov
adc
cmc
add
push
iret
xor
and
icebp
push
push
and
cwtl
sbb
fsubrs
push
add
or
push
fistpll
and
jae
pop
xor
adc
repz
sub
stos
rorl
xlat
xor
icebp
jmp
adc
aas
cmpb
xchg
sub
jb
mov
jmp
mov
add
cltd
xlat
loope
daa
jne
outsl
mov
insb
outsb
inc
out
ret
lret
or
les
test
inc
xor
stos
mov
imul
or
shll
pop
ja
fxch
scas
inc
sets
rorb
cmp
adc
insl
xchg
mov
push
jecxz
in
mov
push
incl
neg
cmp
mov
jbe
imul
xchg
das
pop
orb
std
push
pop
clc
in
sbb
or
loopne
add
sbb
cltd
cmp
and
repnz
push
test
pop
dec
pop
in
jns
xor
scas
rolb
xchg
gs
sbb
fistpl
mov
or
lcall
push
lock
fiaddl
cmp
and
das
loop
rorb
in
mov
dec
pop
mov
scas
stc
mov
jmp
adc
xor
cmp
lret
fmull
icebp
imul
cmp
mov
stc
push
mov
aam
jns
cmp
das
pop
fidivrs
or
push
les
negb
mov
adc
lods
cli
lahf
aaa
mov
rolb
cmp
mov
ret
push
push
sbb
dec
xchg
repnz
mov
mov
imul
sub
mov
fnop
rcrl
cmp
push
jle
js
cmp
inc
and
loop
mov
cmp
ljmp
mov
and
out
shll
imul
xchg
jno
mov
fildl
dec
mov
cmp
adc
loop
xchg
lea
mov
or
rol
in
lods
mov
push
and
js
in
xchg
push
xchg
pop
pop
push
push
lock
and
rcrb
mov
pop
inc
movsl
mull
into
mov
cmp
idivl
orb
mov
add
cmp
mov
pop
lahf
lea
xchg
push
ret
insb
mov
push
xor
std
inc
and
loope
lret
sbb
test
inc
pushf
mov
mov
or
andb
mov
mov
in
mov
out
jae
sbb
hlt
mov
loopne
and
push
adc
push
divl
dec
or
sahf
mov
jg
repz
out
in
inc
mov
dec
push
test
sub
shl
dec
gs
mov
mov
test
add
movzbl
push
xchg
push
addr16
sbbl
ror
clc
dec
std
aad
and
hlt
cwtl
scas
setle
mov
stc
or
add
adc
nop
dec
jmp
mov
insb
ror
pop
pop
mov
nop
push
or
xlat
mov
mov
cmpsl
lcall
mov
and
inc
cld
xor
mov
mov
stos
jecxz
and
sbb
movsl
icebp
aas
push
js
loope
cwtl
sub
divl
call
imul
mov
mov
popa
xchg
int
mov
sub
adc
sub
repnz
outsb
jmp
jecxz
jbe
xlat
pop
mov
call
subl
loope
xchg
popl
inc
fisubl
inc
pop
mov
cltd
adc
inc
dec
div
xor
gs
push
cmp
mov
xlat
xchg
cld
inc
in
jecxz
sbb
dec
sub
stc
xor
stos
iret
ljmp
jl
dec
cs
mov
test
xlat
dec
fisubrl
lahf
rclb
divl
inc
xchg
gs
cmp
jp
inc
fsubs
pop
push
mov
in
xchg
xor
lods
mov
enter
pushf
popf
dec
add
sbb
lds
ss
aaa
lock
sahf
xor
idiv
insl
dec
iret
push
adc
mov
popa
sbb
cltd
out
mov
or
cmpsb
mov
arpl
jne
push
data16
pop
push
repz
push
fldl
sbb
push
jecxz
jns
pop
imul
pop
xchg
pop
icebp
in
push
mov
sbb
pop
insl
jae
in
ret
out
subb
sub
movsl
gs
arpl
add
fwait
cmp
jmp
adc
test
movsl
nop
dec
adc
jbe
mov
dec
mov
std
add
xchg
nop
pop
jecxz
sbb
xchg
or
adc
pandn
daa
mov
cmpsl
insb
faddl
push
cwtl
and
addb
cmpsl
jns
aaa
pop
push
mov
sbb
push
pop
insl
push
push
mov
fists
sub
xchg
jmp
mov
fldenv
mov
pop
pop
mov
push
or
sahf
ret
cli
pop
out
imul
in
pop
movsl
or
mov
and
xchg
popf
push
cs
inc
xchg
popa
and
divl
mov
cmp
add
sub
mov
dec
xchg
push
cmpsb
inc
dec
xor
imul
adc
pop
lret
cmpb
loope
and
pushf
mov
push
popa
loop
les
pop
aad
mov
out
les
mov
bound
adcl
int3
aam
gs
push
mov
pop
mov
push
fcmovnu
filds
ds
mov
adcl
test
mov
lret
xor
jns
cmp
mov
push
repnz
push
jecxz
push
xchg
push
cmpsb
push
inc
cltd
add
mov
pushf
cmc
out
pop
jb
rolb
pop
adc
pop
fbld
les
ja
shlb
and
int3
lods
push
cmp
xor
out
ret
call
cltd
sub
push
adc
ret
sub
les
lcall
inc
mov
sub
push
pop
repnz
jecxz
mov
mov
ljmp
jns
jl
pusha
pop
mov
sbb
jns
jmp
mov
ja
cmpl
aas
cmp
js
pop
dec
ss
dec
stos
mov
jo
jge
jle
sbb
lods
fidivl
fistpll
loop
idivb
cmp
aas
and
mov
icebp
je
push
inc
jo
out
or
loope
test
test
add
mov
xlat
mov
jno
in
cmp
mov
daa
test
jbe
sub
xlat
scas
lea
pop
and
fcomip
icebp
or
or
pop
mov
loope
push
jmp
mov
cltd
inc
mov
lods
in
in
and
mov
push
xchg
sub
fcom
push
cwtl
fwait
dec
push
jae
lret
sahf
int
jle
push
sbbl
test
xor
push
aaa
sahf
jae
mov
inc
mov
xor
push
inc
or
lcall
lods
mov
rclb
dec
mov
ja
xchg
lret
cli
push
xorl
daa
push
hlt
scas
in
subl
push
imul
repz
xchg
add
pushf
or
push
and
mov
movsb
and
pop
and
mov
popa
jae
fwait
xchg
test
add
addl
int3
jns
push
mov
in
rorb
fildll
inc
repz
xchg
add
mov
inc
push
addr16
mov
cwtl
inc
mov
cmc
fdivr
stos
push
mov
les
cld
pop
pushf
xor
add
sbb
dec
aaa
mov
por
repnz
sbb
lea
test
mov
fldcw
cmp
pop
lret
sub
cmp
insb
cmp
leave
xchg
dec
mov
shlb
mov
sahf
insl
inc
ret
in
lea
cwtl
test
fistl
xor
loope
outsb
add
sbb
cmp
sub
mov
xor
push
mov
lret
outsb
or
lcall
add
ss
fucomp
or
mov
mov
popa
cmp
pop
pop
std
fs
jp
fsts
mov
xor
xchg
pop
adc
pusha
xor
cmc
sahf
and
sbb
or
ss
jae
xor
ret
sub
xor
xor
icebp
add
imul
dec
fistl
mov
xor
cld
push
addb
xchg
xchg
xchg
cwtl
fildl
roll
dec
icebp
pop
test
xchg
jnp
inc
ja
or
mov
inc
jb
pop
cmp
call
scas
mov
out
cmpsl
jnp
sub
xchg
adcb
mov
orl
pop
test
insb
pop
jp
push
mov
push
lcall
js
pop
mov
sub
sub
mov
mov
push
adc
xor
and
std
sub
lret
adc
pop
pop
pusha
fcompl
dec
jge
pop
pusha
int3
mov
dec
push
fwait
cmp
popf
pop
pop
bound
loop
mov
mov
lods
lds
jne
push
inc
mov
push
outsb
jb
jns
cmp
clc
pop
or
inc
imull
test
test
sahf
jl
or
addb
ja
or
add
mov
cli
je
jmp
mov
or
lock
movsb
test
nop
mov
in
arpl
ljmp
loopne
pop
addr16
adc
mov
adc
dec
jg
xor
mov
jle
or
cmc
pop
iret
notl
mov
or
xor
push
fwait
xchg
mov
mov
cmp
out
pop
jmp
mov
mov
lea
in
into
jecxz
pop
or
xor
mov
out
fimuls
pop
and
or
inc
rcrl
mov
or
xor
inc
fwait
movsb
hlt
iret
push
repnz
pop
mov
das
and
aas
std
lds
push
or
ja
fldl
mov
pop
xchg
fdivl
es
leave
cmc
pop
adc
inc
jle
lret
pop
loope
fisubl
addr16
test
notl
cmp
mov
and
lods
pop
out
insl
out
adc
jb
mov
xor
dec
out
lret
mov
pusha
xchg
mov
push
cmc
sbb
inc
dec
mov
mov
js
shlb
mov
sbb
xor
jg
xor
push
cmp
movsl
or
sbbl
inc
xor
mov
cmc
stos
pop
test
jne
xchg
cmpsl
ret
stos
movzbl
arpl
in
pop
cmp
inc
int3
mov
sbb
arpl
cmp
mov
mov
mov
mov
into
repz
pop
je
push
sub
rclb
lea
mov
sti
cld
mov
adc
lcall
jmp
pushf
fldl
inc
gs
add
out
cmp
mov
cmc
mov
es
add
sub
add
xlat
inc
adc
incb
mov
adc
push
xchg
icebp
imulb
xchg
mov
mov
lods
in
outsl
mov
outsl
jnp
xchg
mov
jnp
std
xlat
mov
mov
jns
aas
fdivs
mov
gs
jge
fimull
fimuls
or
shlb
ror
test
xchg
clc
or
inc
mov
pop
sub
repz
adc
mov
xchg
mov
jl
ret
and
test
lods
int
dec
ds
popa
int
mov
cwtl
int3
stos
cwtl
mov
inc
sti
aas
movsb
andl
jmp
mov
lahf
sub
jp
lahf
rorl
push
test
int3
cmp
in
mov
fucomp
aas
pop
arpl
testb
jnp
mov
mov
ljmp
lock
ret
push
dec
arpl
sbb
and
pop
cmp
pop
and
mov
pop
lret
test
cmp
mov
push
test
clc
sbb
or
pop
ret
ja
xchg
dec
jle
xchg
das
mov
dec
cmpsb
ret
insl
sub
fistl
inc
repz
mov
push
xchg
dec
adc
and
enter
lahf
ja
fwait
aaa
es
or
push
bound
das
out
mov
cmp
push
scas
push
repnz
sub
jmp
or
iret
sub
mov
imulb
rcr
ret
xchg
out
imul
test
rorb
cli
scas
inc
shr
aad
jns
sbb
dec
popa
test
xchg
mov
out
xor
rol
pop
js
stos
sub
jno
sbb
and
rcll
cli
fwait
aam
xchg
inc
fsubl
js
dec
push
pavgb
scas
or
cmp
sahf
mov
jae
push
ret
pop
dec
outsb
mov
cmp
cmp
mov
fadds
call
fwait
int3
mov
push
out
cltd
xchg
pop
call
gs
repnz
ret
fdivs
sub
mov
hlt
mov
push
shl
sub
pop
rolb
sbb
out
xchg
adc
mov
sbb
push
dec
fstpt
xchg
push
pop
inc
vpcomuq
int3
push
cmp
fs
push
sbb
jno
dec
dec
jp
or
inc
sbb
popf
cmp
xor
fbstp
xchg
xor
rol
int
or
repz
fbstp
pop
jae
dec
aam
mov
cs
cwtl
sbb
add
int3
or
js
movsb
sbb
scas
mov
adc
sbb
and
ds
ds
xchg
xchg
adc
pop
mov
enter
idivl
testb
aad
jnp
sub
in
insl
cmp
cmp
mov
pop
mov
jne
and
pusha
add
sbb
movsb
adc
push
mov
insl
scas
pop
dec
jnp
fildl
das
adc
cmp
bound
or
mov
out
push
add
fbld
int
daa
imulb
es
dec
lods
add
xor
imul
cmp
in
out
and
fildll
icebp
int3
jmp
cmp
shlb
outsl
cmp
gs
dec
push
mov
fsubrl
xor
bt
fwait
or
dec
xchg
movsl
xchg
adc
imul
mov
movsl
mov
pop
lahf
adc
mov
lds
push
repnz
push
fidivs
stos
xchg
test
fistpll
pop
shll
cld
lret
cwtl
mov
addr16
dec
fcomps
das
in
adc
cmp
mov
add
xchg
sub
scas
test
xchg
fwait
mov
push
pop
xorb
push
mull
push
cmpsb
dec
sub
and
xlat
xchg
mov
inc
lock
adc
andb
dec
push
cld
adc
add
mov
jg
pop
mov
or
xor
cwtl
jbe
mov
lods
sbb
cmpsl
push
ret
dec
pusha
xchg
scas
inc
enter
jp
shlb
xchg
inc
mov
sub
mov
push
jae
mov
mov
icebp
pop
int
pusha
sub
out
push
fs
inc
pop
scas
out
sarb
fistps
fsubl
fnstenv
mov
sbb
loop
xor
ja
lcall
stos
aad
jmp
or
mov
push
jecxz
sbb
jnp
mov
push
stc
cmpsl
testb
outsl
aam
shr
rorb
jmp
push
pushf
andl
xchg
out
mov
enter
shlb
imul
inc
push
repnz
xchg
pop
push
sbb
rolb
gs
xor
mov
out
movsl
push
add
mov
and
lea
mov
cmp
and
call
pop
add
mov
jle
inc
inc
cmpsb
and
jl
sbb
stos
jle
cs
jno
repnz
push
lahf
sbb
std
inc
insl
faddp
mov
ds
testb
icebp
movb
mov
out
inc
sub
lock
imul
cs
in
mov
mov
xlat
add
cmpsl
xchg
cmpsl
sahf
sbb
adc
les
xchg
adcb
jg
fisttpl
sbb
incl
mov
or
inc
in
push
inc
adc
jo
jmp
xchg
movsb
jno
sbb
in
cmc
fldl
in
xor
mov
test
jge
insl
mov
lds
cmc
fldl
in
xor
mov
orl
sbb
or
cmp
add
jmp
push
mov
test
cmc
movsl
inc
mov
lds
or
cli
xor
ljmp
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
mov
mov
xlat
fadds
push
cmp
jb
add
std
and
pop
ret
mov
sub
clc
mov
sub
push
or
add
js
or
pop
ret
mov
sub
clc
mov
adcb
insb
pop
sbb
jno
insb
cmp
test
out
out
leave
ret
sbb
adc
xorb
popf
mov
jb
dec
outsb
cmp
out
jg
test
push
pop
test
sarb
notl
and
int3
or
lock
stos
sub
hlt
fsubl
sub
mov
aad
popf
enter
imul
cmp
cmp
inc
fisubl
inc
repz
push
out
notl
add
and
cmpsb
inc
mov
cltd
in
mov
aam
outsl
jb
sti
fmuls
mov
aad
ds
popf
push
jne
mov
cmp
lcall
mov
pushf
test
mov
sub
clc
mov
sub
bound
jb
add
js
dec
xor
test
mov
icebp
out
test
clc
movl
push
pop
or
dec
sbb
test
mov
les
mov
daa
push
push
dec
and
ja
or
push
sub
mov
mov
repz
sub
clc
mov
sub
bound
jb
add
js
dec
xor
test
mov
sub
clc
mov
sub
bound
jb
add
js
dec
xor
test
icebp
pop
cmp
fistps
ds
sbb
and
fisttpll
ds
xchg
mov
cld
mulb
mov
out
mov
xchg
sub
ficomps
sub
vcvttpd2dqy
shll
stos
ds
scas
out
dec
lods
push
aam
ret
fs
popa
push
pop
adc
mov
sub
leave
call
stos
pop
fs
mov
test
repnz
and
ss
lods
push
mov
scas
mov
xor
outsl
daa
loopne
int
jo
adc
aam
js
data16
cmp
xchg
ljmp
jbe
les
inc
or
idivb
js
inc
nop
sub
add
movups
ss
das
std
push
ja
fs
mov
or
xor
lods
rclb
adc
fnstcw
push
je
xchg
mov
and
roll
sub
addl
xchg
dec
and
and
rorb
mov
out
out
mov
sub
rcrb
sbb
cmp
sti
fcmovu
add
jno
cmp
fsubs
repz
dec
and
call
push
jmp
sub
movsl
xchg
fwait
jns
aaa
xchg
repz
sbb
mov
aas
or
stc
shll
out
ljmp
dec
mov
or
pop
cmpsl
xchg
negl
pop
adc
mov
cmp
mov
call
lcall
stos
or
cmp
inc
int3
in
mov
aas
push
sub
mov
adc
and
xor
jmp
test
sub
es
xor
add
jp
push
stos
rcrl
lock
sbb
or
push
mov
stc
or
mov
dec
movsb
xor
sbb
pop
fnsave
ficoms
test
outsl
mov
jle
mov
xchg
sub
fldcw
in
daa
mov
data16
mov
xchg
cld
adc
pop
or
das
jb
dec
push
dec
pop
sahf
jecxz
std
imul
pop
dec
stos
jno
push
lods
ret
mov
cld
mov
push
es
out
xchg
icebp
cli
jle
dec
xor
dec
pop
xchg
aam
sub
mov
xchg
adc
sbb
icebp
xor
pop
xchg
jle
jge
imul
pop
pop
pop
inc
sbb
outsb
rclb
mov
mov
sub
push
int
mov
adc
pop
jne
stos
out
and
mov
push
mov
inc
in
aad
push
mov
sub
clc
shrl
jbe
xorb
jp
pop
adc
xor
and
scas
jp
lahf
sbb
xchg
push
ficomps
adc
in
mov
push
clc
cmp
sbb
push
mov
imul
scas
in
cmp
xchg
scas
add
xchg
pusha
mov
and
stc
das
sbb
dec
or
sbb
dec
xchg
imul
pushf
sub
jge
testl
cmpsl
in
jg
stc
scas
leave
insl
mov
sub
pop
or
push
mov
outsb
pop
jae
pop
jnp
push
aam
not
pop
aaa
loop
jge
iret
lds
mov
mov
lea
sbb
sub
jg
shl
pusha
popa
in
xlat
outsb
xchg
cmp
mov
push
fcom
cmpsb
rorb
scas
dec
cltd
pop
lret
daa
das
ret
mov
stc
daa
sub
daa
mov
mov
leave
fcmovne
jno
incl
lret
push
dec
stos
jns
imul
jbe
lods
shl
movsl
push
cwtl
les
push
roll
inc
lea
cmpsl
jno
and
dec
ret
and
cld
sbb
repnz
movsl
adc
test
shrb
aas
xchg
pop
pusha
push
mov
bound
xor
test
pop
mov
cmp
push
dec
ds
fadds
outsb
sbb
push
lcall
mov
hlt
or
stos
call
inc
mov
lret
mov
das
gs
cmp
aam
cmpsl
arpl
incl
adc
or
test
mov
nop
add
shlb
mov
imul
sub
arpl
fimull
dec
xor
in
mov
sub
movsb
push
dec
test
sbb
xlat
test
imul
dec
mov
cs
mov
mov
mov
cli
jns
dec
test
add
popf
scas
adc
push
xor
mov
in
inc
outsb
enter
out
mov
fists
mov
cltd
add
mov
jno
pop
push
in
or
jp
xchg
pop
push
dec
fdivrl
inc
push
test
cmp
jbe
push
cmpsl
push
push
inc
loop
or
pusha
xor
pop
aam
sub
fsubr
outsb
jg
jno
cmpl
push
push
jle
or
ljmp
xchg
out
enter
icebp
pop
les
dec
push
sti
cmp
ds
ss
pop
jecxz
xchg
pushf
xchg
frstor
and
cmpsl
sbb
clc
cmp
sbb
inc
mov
pop
inc
lds
ss
push
jne
cmc
sbbl
mull
mov
and
mov
sub
lods
jl
scas
cli
and
or
mov
jecxz
leave
mov
shrb
repz
outsl
lea
int
ljmp
xchg
and
pop
sub
inc
mov
and
pop
inc
xchg
add
pop
lret
ljmpw
lea
loopne
push
arpl
ret
out
cmp
jp
mov
dec
dec
push
adc
movsb
outsl
pusha
idivl
mov
jl
adc
mov
in
je
bound
dec
or
sti
jle
mov
addb
fldt
xchg
lcall
into
pop
mov
xchg
xchg
jge
and
xchg
fdivr
scas
mov
push
mov
arpl
cltd
and
leave
mov
loope
shlb
mov
addr16
cli
adc
sub
lret
popf
out
fwait
mov
pop
test
sti
fwait
daa
mov
cmc
jle
mov
jbe
xor
fs
lret
pop
arpl
and
jp
into
cmc
out
orb
jo
mov
je
push
add
hlt
pop
data16
push
lea
inc
popf
sbb
int3
insl
out
bound
and
fs
lods
outsl
cltd
mov
addr16
dec
ret
clc
xchg
sub
dec
scas
push
inc
test
jmp
cmp
sbb
or
add
mov
push
dec
clc
mov
push
fsubrp
cmp
dec
cmp
fcmovnb
push
and
sarb
gs
fldt
jmp
or
imul
or
popf
add
push
insb
cwtl
mov
mov
notb
push
fldz
xchg
in
testl
cld
movsl
into
adc
mov
stos
aaa
test
mov
xor
lods
pushf
cmp
test
or
mov
xchg
fcmovb
test
add
mov
pop
movsl
icebp
jl
nop
daa
repnz
stos
cmc
xlat
adc
sbb
cwtl
or
dec
pop
jl
pop
insl
gs
bound
inc
fbld
or
jmp
mov
test
add
jno
or
mov
loope
js
out
dec
outsb
pop
dec
lret
lea
int3
andl
add
orl
int
or
fs
mov
pop
lahf
mov
inc
pushf
push
push
movsb
xchg
shrl
add
rcrb
xor
sbb
mov
scas
in
xchg
out
xchg
jle
insl
push
subl
xor
mov
push
insb
inc
lock
roll
jp
insb
test
fwait
mov
rcr
xchg
pusha
sub
push
inc
and
push
adc
in
iret
repz
daa
rolb
pop
inc
and
idivb
loope
inc
mov
pop
xor
and
nop
sbb
or
push
and
jnp
pop
add
in
imul
or
push
out
cmp
movl
cs
sbb
pop
fnstcw
in
rorb
xchg
add
movsb
cmpsl
xor
push
push
leave
or
mov
lods
xor
jp
push
cmc
in
cmp
int3
int3
or
mov
cmc
mov
xchg
faddp
inc
or
xor
aas
int
imul
orb
test
insb
pop
sbb
inc
ja
sub
mov
test
xchg
jecxz
sub
lret
mov
push
loopne
mov
call
cmpsb
and
push
in
pop
push
inc
out
sub
cmpsl
sub
scas
mov
mov
xchg
psubusw
mov
pop
or
in
push
mov
inc
mov
xchg
jae
add
sbb
xchg
jb
test
mov
dec
cmp
sub
add
mov
jg
mov
push
pop
lcall
cli
xorl
xchg
ja
adc
pop
fbstp
mov
test
jl
cmp
lock
mov
push
cmp
ja
jno
idivl
aaa
xchg
and
ret
movsb
jge
mov
ja
sarl
pop
mov
pop
lcall
push
adc
sbb
mov
mov
xor
loope
adc
push
or
mov
stos
push
lcall
pop
aaa
std
fstpt
lret
in
mov
jbe
jo
punpckldq
imul
ljmp
xchg
mov
mov
jge
jp
sub
mov
adc
cltd
or
inc
xchg
xor
add
hlt
mov
xor
lods
jbe
pop
or
push
xchg
sahf
aaa
mov
cmpsb
loop
cmpsb
aad
inc
and
push
pop
cmp
pop
jne
adc
js
jg
loope
fdivl
mov
cmpsl
push
inc
cmpsb
xor
arpl
adc
loopne
mov
fs
inc
pop
mov
test
jl
adc
bound
dec
mulb
test
push
fiadds
inc
lods
mov
clc
popa
dec
add
dec
xchg
jns
adc
ret
cli
popa
lret
js
fisubrs
sbbl
jg
fisubrs
sbb
push
out
or
sbb
add
pusha
push
shlb
xchg
adc
dec
jnp
push
jns
sub
xchg
cmpsl
into
sbb
xchg
mov
inc
mov
fsubl
xchg
add
jl
fldenv
and
adc
mov
xlat
jl
test
sti
dec
dec
jle
dec
adc
out
cmp
xor
test
bound
fsub
inc
lahf
popf
out
add
out
cmp
faddl
lods
xchg
loope
xchg
test
dec
jl
sub
add
mov
jbe
decl
insl
out
and
cmp
xchg
mov
jge
pusha
lret
movsl
popf
xor
leave
cmpsb
push
lea
cs
cld
push
mov
je
push
pop
movsl
arpl
adc
inc
mov
cmpsb
loope
sub
sub
shr
gs
and
add
in
ljmp
adc
sub
push
sahf
adc
mov
test
test
cmp
addr16
gs
fcoml
push
xchg
lea
xchg
add
sahf
lret
add
das
cli
loope
push
outsb
inc
lods
pand
sarl
xor
jl
nop
jbe
int
sbb
int3
pop
faddl
add
push
ficoml
sbb
xchg
dec
pusha
ss
cmp
outsl
cmp
nop
mov
test
loop
mov
into
lds
jmp
out
add
dec
inc
aas
stos
dec
or
mov
daa
cmp
outsb
push
mov
inc
or
xchg
or
mov
mov
int3
hlt
and
std
mov
inc
fs
je
popa
or
add
rcrl
loopne
dec
push
push
and
mov
push
loopne
mov
inc
cmpsl
stos
daa
addr16
lea
iret
dec
cmp
pop
adc
ficoml
call
testl
xchg
fs
fwait
fwait
and
cltd
or
enter
xchg
lock
es
pop
call
loop
adc
stos
pop
xchg
jmp
pop
jbe
sbb
fnsave
or
sub
lahf
adc
call
mov
mov
fisttpll
test
stos
fdivrl
mov
xor
adc
shlb
stc
shlb
adc
mov
pop
mov
outsl
call
pop
outsb
push
jo
jae
lret
sahf
xor
mov
mov
or
not
jge
xchg
mov
xchg
popl
cmp
push
inc
jmp
adc
xchg
cmp
pusha
xor
pop
mov
js
sub
xchg
adc
outsb
fstpl
xor
rcll
ljmp
jns
rorl
hlt
cli
dec
adc
adc
or
cli
mov
imul
ds
xchg
pop
adc
mov
inc
inc
and
lds
or
add
ss
jl
adc
fisttpl
inc
pop
dec
mov
pusha
fincstp
es
popf
dec
ljmp
push
jp
lods
clc
ror
jno
jecxz
stos
clc
int3
shl
pop
inc
mov
enter
add
sbb
out
xor
loope
cs
push
push
jp
lea
push
arpl
cmp
movsl
mov
nop
loopne
cwtl
mov
sub
pushf
mov
insb
lcall
cld
and
or
in
or
pop
xor
enter
pop
pop
loope
lahf
stos
pop
dec
cli
and
cs
xor
jecxz
push
pop
outsl
mov
test
adc
fists
or
out
cmp
xor
sbb
cmpsb
pop
mov
mov
mov
mov
mov
xchg
inc
cmp
cmp
sbb
sbb
lea
pop
out
or
push
lock
pushf
sub
and
ljmp
sub
int3
mov
out
add
add
lret
mov
sbb
out
sbbl
fs
lea
outsb
lea
or
jb
xor
xchg
cmp
ds
mov
je
adc
arpl
out
dec
or
dec
or
scas
sub
pop
adc
es
add
into
xor
test
add
pop
into
add
cmp
insb
jge
out
mov
fwait
sub
rcll
xor
addb
mov
clc
push
hlt
sahf
hlt
fsubrp
adc
mov
inc
jmp
negb
xor
imul
lahf
lret
mov
cmp
jge
lret
rorl
jno,pt
pop
bound
sbb
mov
add
pop
into
mov
clc
sbb
jg
rcrl
mov
ss
xchg
add
xchg
and
jbe
sub
mov
repnz
out
aas
dec
xor
aam
mov
inc
mov
pop
jge
movl
scas
cli
es
sbb
sbb
jp
jl
imul
pop
sbb
inc
dec
nop
dec
icebp
jae
mov
mov
mov
lahf
sarl
sub
cmpsl
mov
inc
test
int
aad
fbld
inc
rcrl
lcall
and
fdivs
dec
fstpl
pop
inc
lret
cltd
mov
ds
in
mov
jns
stos
scas
push
jb
leave
nop
out
jecxz
sub
and
cmpsb
dec
loopne
ret
or
push
mov
jae
push
mov
arpl
cli
repz
sbb
lods
xchg
push
and
sbb
add
or
push
out
dec
mov
jmp
lea
cmp
xor
jnp
rclb
in
ds
repz
shll
mov
shrb
mov
xchg
inc
leave
bound
jb
mov
std
test
pop
xchg
lods
lcall
jge
sub
push
cmpl
call
push
sbb
outsl
xchg
inc
sbb
mov
mov
arpl
mov
jle
sub
insl
mov
insl
xchg
es
aas
fdivrs
fsts
or
test
cmp
pop
jae
jne
mov
mov
pop
adc
scas
cld
pop
fistpl
or
test
aam
fs
xchg
push
jge
or
cmp
lret
or
xorb
js
xchg
push
xchg
push
inc
imul
dec
sub
out
lret
xchg
push
in
ljmp
int
ret
imul
test
into
pop
into
push
sbb
jno
cmp
ret
bound
js
inc
scas
push
cmpsb
ret
pop
daa
rorb
xchg
dec
aam
sbb
xor
mov
lock
into
arpl
jecxz
cmpsb
pusha
lock
add
mov
stos
jae
sbb
stos
pushf
cmpsb
and
les
popa
lds
lahf
jp
xor
or
cmp
bound
and
inc
ret
lret
fwait
sbbl
jecxz
adc
cmpsl
fnsave
jns
stos
inc
xor
or
bound
test
repnz
adc
movsl
fwait
movsb
mov
adc
mulb
or
ss
jl
mov
jbe
xor
inc
ficomps
ret
fimull
or
adc
pop
lcall
jg
iret
test
add
xchg
mov
push
clc
lret
xor
sahf
mov
adc
pop
dec
cld
loop
xchg
jno
jb
push
lea
xor
movl
test
dec
lahf
aad
call
out
imul
test
inc
mov
les
or
adc
lret
arpl
or
ljmp
pusha
xchg
cmp
cli
mov
or
enter
push
xchg
push
push
push
jg
mov
insb
mov
adc
in
imul
push
filds
jbe
cmpsb
add
lock
cli
adc
mov
lods
sbb
lret
les
addr16
pushf
or
pop
lds
out
jb
test
inc
add
sub
sbb
mov
sbb
fisubrl
dec
mov
out
iret
mov
outsl
js
cwtl
xor
int
mov
pop
mov
dec
jbe
push
xchg
push
arpl
inc
inc
mov
push
into
shll
jp
xor
mov
ret
xchg
xchg
jb
or
jl
mov
cmp
sub
jge
clc
jecxz
push
stos
nop/reserved
ss
push
add
inc
mov
insb
jns
lcall
inc
loope
add
sti
lcall
test
mov
hlt
mov
sahf
in
mov
pop
dec
dec
jbe
sbb
push
inc
out
pop
pop
in
orb
push
sbb
unpcklps
lds
fildll
pushf
cmp
xor
clc
iret
in
pop
adc
or
lds
mov
test
lock
adc
sbb
sbb
mov
in
std
jne
push
rorl
sub
aam
test
movsl
bound
adc
fwait
setge
cmp
xlat
mov
rclb
in
dec
sbb
pop
js
stos
inc
inc
int
mov
inc
nop
in
mov
int
sbb
sbb
dec
cmc
cltd
inc
cmp
scas
lret
jle
mov
mov
jno
sub
sbb
pop
jb
rcll
mov
bound
mov
jo
xchg
jae
xor
or
jns
or
ret
call
jae
es
or
fwait
sbb
shl
scas
xchg
bound
ret
xchg
jg
xor
aad
sub
cmp
addl
fsubl
dec
daa
repz
adc
mov
dec
in
jmp
jp
and
xor
or
xchg
push
ds
scas
push
xor
and
sahf
loopne
in
inc
mov
mov
inc
or
pushf
test
stc
ljmp
push
out
sahf
sub
push
push
ja
adc
ss
push
gs
insb
xchg
mov
sbb
loopne
xor
push
shll
dec
sbb
sub
pop
dec
gs
and
repz
xor
mov
push
mov
insb
bnd
bound
les
repnz
gs
and
sbb
ja
mov
cmp
pop
std
xchg
popf
mov
and
arpl
xor
dec
xchg
sbb
imul
fdivl
shll
idiv
or
lcall
add
cli
adc
mov
jge
dec
ret
mov
leave
adc
movsb
sub
mov
push
jp
aad
into
sub
pop
mov
loop
mov
sti
push
std
add
ds
mov
movsl
jl
out
sub
stos
add
mov
lret
sbb
in
push
or
fisubrl
movsb
add
push
xchg
lea
mov
sub
clc
mov
sub
bound
jb
add
js
dec
xor
test
mov
sub
clc
mov
sub
bound
jb
add
js
dec
xor
test
cmp
or
cwtl
sub
js
enter
test
cmp
jb
add
js
dec
xor
test
mov
sub
clc
mov
sub
enter
jne
lcall
fcomps
enter
call
pop
jae
mov
cwtl
inc
test
sbb
or
sub
sub
fcomps
enter
call
imul
mov
or
cmp
sub
fcomps
enter
call
imul
mov
push
pushf
pop
xchg
pop
push
xchg
jge
sub
shlb
mov
push
mov
and
lea
std
in
inc
fcoms
gs
pop
add
je
sbb
push
xchg
ss
push
mov
enter
sub
aad
inc
loop
daa
imul
jns
cltd
out
xor
mov
in
push
sbb
inc
in
cmp
in
mov
dec
add
sbb
push
mov
cltd
call
negb
stc
aaa
leave
pop
in
adc
ljmp
pop
sub
les
dec
sbb
and
loopne
xlat
stos
add
xor
ficomps
dec
push
or
push
pop
lods
cmp
enter
call
imul
mov
or
cmp
outsb
dec
fsubrs
inc
mov
sub
or
sub
push
test
insb
dec
mov
movsb
dec
mov
mov
sbb
adc
sub
stos
pop
mov
sahf
test
jl
cltd
sbb
add
mov
cltd
dec
test
sbb
or
cmp
sub
fcomps
enter
call
imul
mov
or
cmp
sub
fdivrs
mov
push
das
mov
pop
or
dec
test
stos
or
arpl
xor
bound
dec
and
lods
cld
push
fistl
loopne
inc
adc
sub
xor
inc
adc
scas
aaa
push
push
mov
xor
mov
pop
pop
out
push
xchg
xor
mov
popa
loop
call
dec
xor
dec
jl
inc
or
mov
cltd
popf
push
jbe
sahf
not
std
inc
cmp
sti
addr16
xor
lret
sub
test
and
imul
lods
aas
pop
mov
xor
cltd
or
xchg
sub
xor
cmp
movsb
dec
xlat
pop
mov
pop
add
jge
rclb
cmp
test
dec
imull
pop
andl
popa
lods
add
enter
xlat
xchg
sbb
call
orb
mov
cmpsl
and
push
nop
das
inc
mov
xchg
dec
pop
jbe
adc
push
insl
out
sub
stc
mov
scas
dec
shll
bound
lods
push
insl
pop
test
cmc
int3
mov
fidivs
std
cli
mov
cmp
sbb
inc
popf
loopne
jg
mov
outsb
lcall
and
cltd
stc
dec
leave
jb
xlat
inc
mov
aas
jne
pop
shrb
cltd
cmp
cmpsl
pop
xor
inc
aaa
gs
fs
sbb
mov
in
jecxz
mov
sbb
inc
inc
mov
shl
arpl
xor
fwait
dec
or
aaa
push
shlb
sub
xor
jns
mov
fistl
jo
ret
inc
aas
jle
mov
jg
stos
ja
lret
shll
mov
dec
push
cmp
sub
pop
cwtl
add
xor
pop
fnstsw
inc
test
int3
lods
and
shrl
sti
mov
dec
popa
push
mov
xor
jl
movsl
std
or
sti
mov
movsl
fidivs
mov
dec
mov
push
out
imul
movsb
push
fwait
xchg
insb
outsb
pop
mov
inc
bnd
cmpsl
rcr
and
scas
jg
in
call
repz
cmp
xorl
jmp
xlat
sarl
pop
sbb
out
or
cli
xor
pop
mov
test
mov
insl
jbe
sub
pop
aas
sbb
pop
pop
into
pop
and
sar
mov
cmp
out
mov
cmp
cmpsb
ljmp
sub
andl
mull
shl
mov
fstps
xchg
xchg
xchg
cmpsb
scas
cltd
aaa
pop
pop
inc
jp
push
push
outsb
aad
push
push
jno
dec
push
outsl
cmp
xchg
add
ds
clc
pop
xchg
mov
stc
inc
sti
les
adc
stos
mov
je
dec
mov
push
int
fmuls
xchg
jnp
push
mov
rcrb
cmpsb
dec
and
mov
push
int3
push
add
lahf
mov
nop
pop
fimuls
aam
daa
loop
movsb
pusha
fildl
cmp
push
mov
test
into
stos
mov
pop
sub
mov
and
lret
jb
mov
sub
adc
lret
inc
ret
xchg
mov
fsubs
push
adc
xchg
cmp
lcall
call
mov
mov
rcl
mov
inc
adc
lret
cmpsb
in
push
test
jae
push
xchg
ljmp
add
adc
pushf
mov
adc
rcll
adc
dec
jp
sub
xor
push
int3
ficoml
dec
pop
mov
lea
jns
into
shlw
adc
jns
jnp
dec
xchg
jl
pop
adc
push
in
cmp
out
pop
in
add
dec
dec
in
ret
pcmpeqw
sar
sub
xor
fnstenv
inc
cmp
insl
add
adc
mov
sahf
repnz
rcrl
bound
adc
jg
int
aaa
lods
rorl
sbb
dec
mov
dec
ljmp
out
xchg
jo
mov
mov
push
adc
mov
cmp
xchg
in
int3
cs
sahf
rcr
jp
std
push
sbb
xchg
mov
dec
dec
outsl
xchg
arpl
jno
dec
inc
popa
icebp
mov
mov
andb
es
stos
dec
mov
cmc
insb
lods
outsl
push
mov
push
mov
or
add
outsb
and
rcl
mov
xchg
sub
aaa
mov
mov
int
imul
cmp
jnp
push
jmp
mov
mov
adc
fiaddl
push
pop
or
iret
jle
lods
rorl
jl
inc
ljmp
ret
xchg
pop
aad
dec
stc
rolb
mov
and
xor
xchg
mov
fwait
pop
and
insb
cmpb
test
sub
inc
pop
fwait
xchg
test
sub
and
in
xchg
jns
dec
sub
pop
int
sub
adc
test
js
xor
push
jae
sub
cs
mov
pop
incl
xchg
dec
sub
lds
sbb
imul
test
call
icebp
inc
scas
ja
sbb
push
les
aad
push
lahf
shlb
test
dec
test
cmp
xlat
hlt
jns
pop
mull
or
push
mov
pop
cmpsl
clc
xchg
xchg
xor
ret
push
andb
out
push
add
repz
lds
lahf
and
add
adc
mov
int3
mov
xor
fs
xor
and
icebp
dec
xlat
sarb
xchg
mov
add
cmc
xchg
push
movsb
js
push
push
out
out
enter
sub
xchg
les
ret
pop
xchg
xor
std
push
push
push
mov
cmp
jbe
lds
dec
movsb
mov
fidivrl
fildll
mov
imul
std
stos
lahf
fadds
mov
xchg
or
fucomp
lret
push
push
mov
push
shll
xchg
jnp
inc
or
cmpsb
nop
enter
inc
shr
repz
sbbb
outsb
fisubrl
mov
push
cmpsb
xchg
mov
jnp
cmc
test
movsl
call
hlt
out
or
stos
cmc
shl
mov
adc
mov
jecxz
adc
xchg
mov
push
pop
pusha
arpl
bound
mov
xchg
xchg
push
aaa
mov
pop
push
push
xchg
repz
and
jnp
fs
lods
jae
rorb
es
insl
dec
pop
jne
push
aad
push
call
sbb
shlb
lds
mov
scas
cltd
adc
sbb
or
cmp
dec
movsl
cs
xrelease
nop
mov
mov
adc
test
cmp
push
sarl
cmp
xchg
call
js
ja
sbb
test
sbb
sub
sub
push
push
mov
sub
jb
testb
jns
ret
xchg
mov
dec
outsl
lods
mov
rcl
dec
cmp
or
xchg
jo
push
mov
xchg
stos
test
les
out
mov
mov
daa
push
iret
in
lret
cmp
mov
pop
cli
jecxz
cmpl
dec
cmp
xor
adc
insl
xor
adc
push
rcll
or
add
mov
fidivrl
jle
mov
dec
movsb
fdiv
push
xchg
mov
leave
add
mov
mov
fs
cmp
inc
add
mov
push
faddl
clc
push
and
sub
cwtl
test
mov
nop
je
fwait
aas
insl
pusha
push
cltd
rcll
xor
imul
fwait
ja
mov
test
cmp
mov
cmp
aad
xor
aaa
or
insl
mov
ds
lahf
outsl
and
loopne
xor
pop
out
mov
xor
movsb
adc
stc
push
inc
xchg
inc
pop
mov
and
xchg
push
lcall
pop
mov
cli
or
mov
dec
ret
and
cwtl
sbbb
icebp
out
addr16
fimuls
jae
jae
dec
jns,pt
nop
push
dec
mov
sbb
pop
imul
mov
xor
push
adc
data16
mov
aam
aaa
cld
ffree
sub
mov
inc
imul
or
jo
xor
shrb
pop
js
add
jae
pop
shr
ret
sarl
push
mov
insb
cmpsl
dec
cmp
cmpsl
add
sub
pop
ret
add
sbb
subl
cmpsb
adc
scas
sub
inc
adc
stos
inc
ja
repnz
adc
pop
test
xchg
movsb
imul
nop
add
dec
dec
aas
dec
xchg
int3
aas
out
aaa
mov
out
cmp
into
rcl
jp
jp
xor
xchg
fs
sbb
add
int
dec
jge
xchg
enter
int
jg
add
or
insl
adcl
lahf
mov
test
test
cltd
adc
gs
or
push
pop
or
rcrb
mov
lret
sbb
and
repnz
sbb
cmp
in
jno
std
in
sbb
insb
das
stc
mov
lcall
sbbl
arpl
fildll
pop
mov
out
lods
sbbb
jnp
test
call
cmp
negb
sbb
shl
fcmovb
arpl
popa
jmp
mov
je
movsl
and
pop
jmp
stc
add
dec
jbe
les
xor
lret
jecxz
pop
pop
dec
cwtl
xor
inc
push
clc
orb
fistl
into
jmp
shlb
mov
cmp
adc
add
outsb
js
or
bound
inc
sub
in
lea
in
iret
dec
or
insl
jp
aam
dec
pop
xchg
mov
ds
fidivrs
movsb
or
test
and
jmp
std
fsubp
cmc
jle
push
cmc
loop
push
daa
in
sub
cmp
mov
jbe
jnp
mov
pop
xor
inc
sub
pop
pop
loop
jmp
pop
mov
sbb
mov
push
sti
mov
mov
aam
push
je
movsl
xchg
xchg
mov
subb
push
lret
mov
out
scas
lret
enter
fs
sub
test
in
leave
scas
das
roll
leave
or
sbb
xchg
xor
outsl
pop
outsl
sub
lret
xor
scas
stc
push
or
enter
sbb
and
call
loopne
dec
sub
cmp
xlat
add
addl
cld
jecxz
adc
mov
in
cmp
cmp
inc
add
add
ret
or
int
pusha
xor
fs
loope
sub
fs
mov
in
xor
inc
cld
mov
jbe
jne
in
arpl
pop
sbb
inc
cli
pop
test
adc
push
les
mov
xchg
sub
jnp
or
and
movsl
mov
movsl
fistpll
cwtl
mov
ds
out
cwtl
cmp
pop
sub
stos
mov
add
mov
pop
mov
lock
or
xor
push
mov
mov
lds
aaa
icebp
je
mov
inc
sub
aaa
inc
cld
and
mov
pop
sbb
pop
mov
cmpsb
ret
jnp
dec
movsb
subb
loop
fildll
jecxz
orb
and
movsl
mov
mov
mov
sbb
jp
mov
aaa
movsb
mov
jl
mov
jo
insb
mov
in
push
push
stc
jbe
sahf
stos
xlat
pop
mov
xchg
out
subl
fnsave
or
pop
xor
testb
fcomp
and
mov
jo
ljmp
stos
repz
scas
jae
inc
outsl
mov
dec
jge
inc
les
pusha
mov
adc
aam
xor
aaa
cwtl
lods
or
ret
push
js
jmp
jnp
push
cmp
mov
imul
xor
rol
mov
inc
jmp
cli
push
pop
or
lahf
daa
dec
mov
mov
aad
lds
jae
push
insb
sbb
pop
out
imul
push
pop
mov
test
or
int3
cmp
daa
sub
or
mov
test
mov
mov
adc
inc
xor
movb
testl
inc
mov
inc
cs
imul
mov
int3
sbb
jl
cmp
aam
imul
jge
in
mov
xor
inc
enter
sbb
push
jp
mov
cs
lods
pop
ljmp
add
pop
fwait
cmc
xchg
pop
jae
mov
jmp
xchg
mov
or
inc
mov
popf
adc
fists
insl
mov
pop
jno
in
insb
jae
or
xchg
jb
fwait
cmpb
test
daa
cmp
nop
in
push
test
and
or
stos
je
mov
aas
into
xchg
ds
outsl
inc
push
xor
jo
add
enter
and
loopne
iret
adc
int3
mov
push
cwtl
xchg
inc
int3
jp
int3
mov
jae
add
fcomps
sub
je
push
jg
in
xchg
nop
cmp
push
shlb
cmp
push
call
repz
pop
mov
fs
xorb
push
out
stc
sbb
push
enter
scas
sbb
inc
pop
lds
daa
and
and
push
mov
into
hlt
repz
out
jo
ja
repz
popf
cmpsb
sub
xchg
shll
outsl
pop
mov
mov
xchg
or
roll
inc
sub
daa
cmp
test
push
xchg
adc
mov
pushf
xchg
cld
inc
test
lahf
movsb
mov
fwait
mov
mov
stos
cmp
shll
outsl
dec
dec
jl
cld
hlt
clc
in
cmpsb
pop
jo
lret
xchg
scas
jns
cmp
dec
stc
fldz
pop
pop
int
lahf
dec
mov
popf
xchg
jle
stos
lods
test
imul
cld
into
mov
scas
popf
mov
inc
stos
cmp
add
inc
scas
inc
lods
loop
mov
sub
addb
jmp
dec
inc
adc
mov
lcall
lea
loopne
stc
cltd
jp
lods
xchg
dec
cmpsb
scas
test
mov
push
dec
nop
dec
shl
aam
sub
xor
cmp
cltd
or
jnp
mov
mov
test
xchg
fidivrs
xchg
das
stos
test
sbb
sbb
sti
fwait
movsb
add
int3
out
repz
sbb
xchg
jno
icebp
rcrl
add
jge
pushf
movsb
cltd
jecxz
push
in
aam
cmp
cwtl
pop
push
jo
test
sarb
mov
mov
enter
add
fwait
arpl
dec
jne
rcl
fisttpl
inc
rcl
into
mov
sbb
mov
xchg
cld
int3
scas
in
mov
addr16
inc
add
insb
mov
adc
mov
or
leave
insl
int
rclb
aas
dec
and
in
es
cmpsb
mov
aas
ja
in
out
sahf
mov
mov
sub
pop
das
imul
adc
dec
xorl
addr16
adc
test
inc
push
movsb
mov
jbe
iret
stos
sbbl
mov
inc
or
loope
cs
test
cmp
cld
inc
cmp
rol
rclb
inc
push
pop
cmpsb
sbb
push
repz
in
lahf
adc
or
imul
mov
sub
jle
mov
cmc
jecxz
sbb
je
and
cltd
imul
mov
sbb
insl
mov
dec
leave
add
outsb
push
ds
test
add
enter
ret
stos
ret
dec
ja
adc
adc
or
push
mov
dec
sbb
xchg
sub
and
sub
scas
jo
or
mov
adc
testb
push
nop
in
mov
out
das
pop
andl
lods
sarb
iret
xchg
cli
xorb
outsb
mov
cmc
inc
gs
hlt
dec
xchg
rcll
mov
movsb
and
rorl
push
popa
daa
lret
fldt
pop
mov
mov
inc
xchg
stos
xchg
test
inc
sbb
pop
or
mov
mov
jg
inc
pop
addl
lods
mov
out
lcall
sub
sarl
adc
sbb
cmc
aad
fsubrl
lret
inc
mov
pop
and
aaa
add
dec
mov
cs
or
ds
jge
cmp
push
gs
and
les
nop
in
cmp
or
negb
repz
int
sub
out
xor
loopne
lods
bound
dec
inc
add
icebp
fs
pop
movsb
mov
lret
mov
gs
xchg
repnz
repnz
mov
jmp
mov
mov
add
stc
popf
das
push
push
rol
cmpsb
dec
or
or
xor
jl
loop
cwtl
dec
adc
sahf
jle
idivb
or
bound
lahf
lock
mov
into
sbb
sbb
sub
jb
pop
pop
loop
outsb
sbb
inc
cltd
shll
xor
mov
and
xor
out
xchg
pop
aad
or
test
lods
loop
inc
in
sub
dec
and
mov
sbb
jbe
movsb
sarb
mov
into
lret
mov
mov
fdivrp
jno
push
pop
inc
clc
gs
mov
mov
add
insl
sub
cmp
stc
call
xor
sbb
sub
mov
inc
push
imulb
dec
sbb
int3
push
sbb
sbb
loopne
cs
xor
jb
push
imul
xor
lods
leave
loope
rclb
add
adc
arpl
xchg
icebp
je
sbb
cld
stos
mov
xchg
add
cmp
cli
dec
out
jmp
xchg
bound
xor
pop
js
xor
mov
xor
mov
inc
mov
xor
lahf
xchg
pusha
rcrl
sub
adc
mov
xor
imul
aaa
shrb
and
cmpsb
jge
pop
lcall
sarb
ror
mov
xor
pop
mov
push
popa
jmp
add
inc
loope
jecxz
icebp
lahf
jns
insb
add
xchg
subb
push
push
push
and
adc
adc
in
jae
jnp
mov
mov
mov
mov
xor
mov
xor
pushf
xchg
movb
push
pop
push
xor
clc
mov
dec
sub
rcll
mov
and
in
sbb
pusha
fildl
lcall
rolb
lds
rcr
in
sbbl
jle
cmp
out
outsb
sahf
cmp
add
cmp
fcomps
and
sub
mov
and
lods
insl
pushaw
stc
pop
mov
inc
repz
or
in
sbb
rcr
mov
ds
repz
arpl
xchg
fsubr
lret
insb
les
and
sti
lret
jnp
jno
cmp
movsl
dec
mov
popa
sbb
xchg
sbb
push
and
or
xchg
mov
rorl
push
pushf
xor
sbb
lret
mov
sbb
and
cmpsb
pop
dec
test
ror
out
idivb
pushf
repz
pop
add
mov
loope
push
push
xlat
sub
pop
movsl
push
addb
pop
leave
cmpsl
sahf
movsb
fs
andb
jecxz
xor
insb
cmp
pop
and
xchg
fwait
adc
movsl
inc
pop
dec
mov
bound
iret
sub
cmp
andb
push
popf
mull
inc
cmp
popa
scas
xchg
out
dec
jbe
stos
je
sarb
xchg
pop
add
jle
mov
int3
cmp
mov
cmp
mov
sbb
sub
xor
stos
jmp
or
adc
scas
mov
ret
nop
pop
pop
sbb
sahf
or
xor
cmp
lea
sbb
movsl
ss
jno
imull
push
aam
pop
clc
sbb
stos
jno
jnp
cmp
lea
mov
or
jae
xor
stc
sahf
sbb
mov
or
add
pop
pusha
cli
mov
jge
nop
movsb
xlat
sub
jns
mov
pop
loop
dec
push
cmp
jno
or
jmp
adc
cmp
iret
or
or
cmp
mov
ljmp
dec
xor
fcoml
clc
mov
push
arpl
sub
stos
xor
or
cmp
adc
mov
add
loopne
sub
mov
push
insb
and
scas
cmp
cli
pop
or
push
adc
xor
mov
das
sahf
and
cs
inc
jmp
mov
adc
mov
clc
push
inc
jg
fcomp
mov
test
sbb
or
sbb
pop
push
xor
xchg
sub
cmc
enter
call
imul
mov
or
cmp
sub
fcomps
enter
call
imul
mov
or
cmp
sub
fcomps
call
imul
mov
or
cmp
sub
fcomps
enter
call
imul
mov
negl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
xchg
in
pop
sti
dec
push
mov
rcl
fnsave
add
add
or
imul
jno
xchg
add
add
add
mov
add
mov
nop
add
add
add
add
add
add
add
add
add
hlt
add
inc
add
add
add
add
xchg
add
add
add
daa
add
add
add
imul
cmp
add
mov
or
pop
add
mov
cmp
loop
or
xchg
test
ret
add
mov
add
add
add
add
cwtl
add
mov
sbb
lea
fiaddl
das
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fiaddl
cmp
test
adc
test
push
add
add
add
add
add
add
add
add
mov
add
add
mov
in
sub
jne
sbb
sbb
add
add
add
add
in
add
add
dec
add
add
add
add
cmp
push
add
add
xchg
add
add
dec
add
add
add
add
add
jge
or
cld
add
or
mov
add
add
syscall
jl
popl
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
popl
add
add
add
sbb
jne
jmp
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
scas
add
xchg
add
add
lods
add
add
add
add
dec
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
push
add
add
add
or
lahf
add
add
add
aam
das
add
add
add
add
add
add
add
jl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
xchg
or
adc
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
les
mov
add
add
add
add
dec
add
inc
add
mov
add
add
add
add
add
add
add
lods
add
add
add
les
in
add
add
add
add
dec
add
inc
add
in
add
xchg
add
add
das
add
add
or
inc
add
add
inc
add
add
add
das
add
add
add
add
add
add
cmp
loopne
jne
mov
stc
add
add
add
add
add
add
push
add
add
push
or
lcall
in
lds
fldt
push
enter
int
andb
sub
jns
adc
imulb
insl
mov
jnp
ds
in
cli
jmp
cmc
sub
mov
lahf
fnstsw
sub
std
cmpsb
cmp
or
sub
inc
sub
and
mov
mov
sub
inc
adc
sbb
cmp
sub
sbb
add
add
adc
sub
cs
jne
mov
in
push
jge
hlt
int
imul
dec
sbb
loopne
xor
hlt
xor
outsb
sub
push
mov
adc
fs
inc
push
je
fidivs
jno
cmpsb
fisttpl
dec
or
jbe
lcall
fdivl
divl
mov
xchg
fstp
inc
jle
dec
and
fistl
push
shrl
sbbb
test
lret
cmp
lds
test
jno
enter
jmp
jne
xor
iret
push
xor
lods
repz
xchg
dec
push
dec
test
sbb
shll
add
mov
xor
inc
fnsave
cmp
push
cmpsb
arpl
add
lret
and
xchg
or
rcr
int
sti
cmpsl
sbb
pop
dec
and
mov
push
or
repz
mov
test
pop
push
popf
int
mov
aas
and
in
jge
fistps
jp
ret
ljmp
sub
add
jge
adc
push
mov
pop
inc
imul
add
adc
jp
jmp
xor
sub
jg
sub
adc
cli
cltd
adc
cmc
dec
out
and
mov
mov
or
rolb
xor
sbb
test
jnp
test
sub
rorb
pop
stos
bnd
jecxz
popf
mov
addb
mov
dec
jns
in
lcall
jmp
shrb
gs
std
subl
inc
dec
fsubp
and
outsb
roll
mov
xchg
lods
in
sub
std
fimull
sub
pop
sarb
sub
int
in
push
push
ret
punpckhwd
int
mov
cmp
out
sub
shrl
aas
add
cmp
sbb
lret
cmp
jbe
pop
in
adc
ja
adc
sub
stc
xor
lea
insb
lret
and
iret
adc
pop
mov
out
push
push
pop
add
add
jmp
rcll
sub
sub
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
