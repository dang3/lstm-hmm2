call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
movsl
mov
mov
cmc
aas
dec
das
adc
jg
outsl
push
pop
gs
jne
test
mov
iret
lea
add
sysexit
jg
outsl
push
pop
gs
jne
test
mov
iret
cmc
aas
add
and
or
adc
and
div
scas
fsubr
int
mov
in
rclb
jle
out
pusha
xlat
in
pop
dec
hlt
add
shr
cvtpi2ps
adc
aad
imul
cmp
leave
jno
ljmp
jp
pop
gs
inc
test
push
iret
pop
mov
int
push
mov
push
inc
cwtl
loopne
gs
push
cmp
int
shrb
jmp
aam
cmpsl
or
cli
aas
ljmp
pop
stos
pop
outsl
dec
je
icebp
fcmovnb
cmc
cmc
mov
inc
dec
in
fimuls
rcrl
fiaddl
push
mov
add
cmc
pop
les
sbb
outsl
adc
inc
out
dec
and
outsb
push
pop
gs
pusha
loope
scas
xchg
lahf
movsl
mov
iret
cmc
aas
add
sysexit
jg
outsl
push
pop
gs
sbb
add
mov
mov
mov
jl
arpl
push
push
xor
sbb
cmp
ljmp
mov
xchg
pop
dec
sub
push
sbb
cmp
dec
sbb
ror
not
mov
jmp
aad
in
cmc
aas
add
sysexit
jg
outsl
push
pop
gs
jne
test
mov
iret
cmc
aas
add
sysexit
jg
outsl
push
pop
gs
jne
test
std
and
stos
ja
mov
cmp
shlb
lea
push
negb
cmp
in
call
mov
adc
dec
add
pop
movsl
adc
fcoms
mov
xchg
daa
test
nop
lea
popf
push
add
dec
xchg
pop
sub
ret
pop
pop
inc
mov
mov
or
ljmp
sbb
or
xor
shl
mov
sahf
lret
cmp
lahf
jne
lock
aas
addl
cmpps
addr16
cmp
mov
iret
jmp
xchg
bnd
adc
push
push
mov
xchg
pop
lods
sti
rorb
cmp
push
add
add
pop
jmp
jne
stos
sub
pop
mov
mov
or
inc
std
sbb
inc
pushf
sbb
aad
cmp
int
sub
nop
int3
sub
and
jecxz
fwait
cmpsl
dec
arpl
xor
cltd
fcomps
jbe
sub
out
push
loop
int3
addr16
mov
mov
sahf
sbb
mov
sub
add
fsubl
cld
sub
les
sbb
add
je
data16
divl
jp
sti
mov
andb
fbld
xchg
cmp
enter
jp
mov
je
adc
adc
jns
lods
int
xchg
lcall
stos
xor
aam
cmp
stos
mov
out
std
push
lods
popa
xchg
leave
adc
lcall
cmp
jbe
dec
cwtl
add
adc
cmp
xor
push
lret
mov
xor
in
lods
test
hlt
sbb
pop
push
hlt
adc
aam
rcll
mov
sub
les
fbld
adc
lods
subb
sbb
loope
stos
js
in
imul
jg
imul
out
je
mov
lahf
xor
jp
pop
aas
cmp
ret
add
xchg
or
out
sub
cltd
cld
mov
in
or
mov
testb
ss
fucomi
add
cmpsl
mov
pop
adc
movsl
inc
jecxz,pn
dec
shll
sub
xor
and
or
sub
mov
mov
mov
jno
mov
inc
pop
jg
adc
cmp
mov
mov
mov
ja
cmp
inc
sub
call
inc
rcrl
cmp
sti
bound
insb
movb
pop
pop
mov
pop
pop
inc
loope
insl
pushf
adc
icebp
push
test
sti
insb
lea
adc
mov
outsb
fiadds
aam
jnp
iret
pop
mov
push
cmpsb
arpl
jl
outsl
and
pop
add
mov
push
add
imul
jb
lods
out
xlat
outsl
jp
mov
lds
loopne
pop
jnp
mov
outsl
mov
movsb
cld
call
jge
movsl
adc
sarb
sbb
popf
push
mov
lahf
jno
inc
cli
ret
enter
and
roll
and
mov
sbb
push
sahf
ja
popa
xchg
scas
int3
xlat
cmp
popf
test
das
xorb
xchg
or
cmc
mov
repz
sbb
dec
jge
sub
sar
shll
out
stos
inc
cmp
mov
xor
mov
adc
mull
rcl
inc
xor
xor
popa
in
sbb
and
fwait
add
mov
or
outsb
ficoml
mov
mov
or
xchg
sub
std
jp
icebp
cmc
or
adc
jp
into
loop
fcompl
cmpsl
insl
or
pop
out
mov
lock
fwait
testl
repnz
cli
fcomps
adcb
jne
jge
jmp
rcr
cs
test
cltd
ja
dec
xor
test
andb
lret
jns
mov
lahf
xor
sub
xchg
mov
pop
loop
inc
rcll
pushf
rol
sbb
aaa
push
test
scas
adc
aam
lods
bnd
int
and
mov
dec
mov
lods
xchg
sub
cmp
ja
push
jl
stc
clc
mov
out
dec
fsubs
mov
sbb
mov
fldenv
test
and
shl
movl
in
lcall
mov
cmp
ret
mov
outsb
out
fmull
int3
movsb
push
mov
roll
pop
inc
or
lods
das
mov
lock
mov
xchg
popf
loop
bound
jecxz
or
fstl
cmp
xchg
lret
int
std
add
and
pop
ljmp
inc
into
or
mov
lods
int3
aad
outsb
inc
pushf
sbb
cmpb
clc
xchg
push
test
addr16
xchg
lea
sbb
bndstx
addb
mov
ret
jne
push
fs
push
jbe
cmp
mov
aad
push
outsl
insl
outsl
arpl
add
scas
popa
inc
outsl
mov
in
cli
fcoms
jp
add
clc
dec
jmp
sub
in
fwait
add
cmpsl
sub
cs
push
insb
inc
jle
sub
add
cmp
mov
add
aas
arpl
xchg
xor
test
mov
mov
mov
dec
mov
lods
adc
stc
jo
sbb
lock
fcmovnb
push
lahf
xchg
pmaxub
rorl
xchg
or
jl
nop
jge
mov
push
fidivrs
fsubr
aaa
in
mov
sar
icebp
mov
xor
add
xor
mov
fsubr
mov
lods
int
rclb
dec
dec
int3
leave
sub
inc
mov
dec
push
imul
dec
fldcw
outsb
rcll
lahf
lea
mov
rcl
cmp
jbe
fldl
jecxz
inc
add
sbb
adc
fcmovnb
subb
mov
aam
out
jmp
push
cmpsb
jae
and
and
int3
outsb
jo
or
loopne
or
pop
fs
mov
lods
fisubs
xor
in
lcall
xor
xchg
xlat
cmp
stc
lret
scas
xor
sub
inc
imul
push
sahf
mov
fidivs
aam
repnz
dec
and
jecxz
xor
imulb
stos
inc
stos
jnp
cmpsb
shll
sub
dec
add
mov
hlt
mov
push
mov
bound
push
fildll
and
mov
push
cld
dec
outsl
mov
ss
das
push
cmpsb
cmp
cld
mov
jle
jmp
nop
sbb
sbb
mov
pop
dec
dec
and
xor
ss
test
and
hlt
out
sub
aad
daa
push
cltd
ds
daa
psubq
pop
and
and
mov
jecxz
ja
xchg
cmp
inc
add
or
test
pop
pop
xchg
and
and
cs
enter
push
vcvtsi2sdl
ror
dec
das
repnz
out
jnp
arpl
mov
int3
das
mov
lds
in
sub
jnp
sbb
xor
adc
add
fsub
or
mov
js
out
shrl
test
dec
imul
jge
negb
push
call
les
push
aaa
push
mov
je
xor
mov
dec
adc
das
aaa
test
stos
ret
test
add
mov
orl
pop
dec
jo
inc
xchg
and
add
cmp
mov
imul
andl
add
add
lods
pop
cmpsl
jnp
pop
and
aam
xor
mov
pop
adc
out
add
test
jne
int
pushf
jmp
mov
jnp
sti
dec
mov
mov
sub
jno
insb
jge
adc
pop
loope
mov
adc
dec
mov
sbbb
icebp
cwtl
andl
sbb
jg
mov
rclb
adc
icebp
mov
mov
inc
dec
cmc
jecxz
jns
pop
adc
lods
mov
cli
xchg
insl
and
xchg
imul
outsl
das
repnz
and
mov
lret
into
fidivs
addr16
outsl
hlt
lahf
cmpsl
popf
xchg
xchg
jne
mov
add
push
cmpsl
lret
les
push
push
mov
or
cld
xor
xchg
rcrb
lcall
add
jge
mov
das
xor
mov
xchg
mov
jl
cmp
xor
xor
push
mov
repz
jge
mov
or
mov
subb
call
test
push
andl
stc
xchg
jecxz
shl
mov
mov
jg
push
fimull
pop
jmp
mov
push
jne
das
test
or
or
mov
xchg
sarl
test
adc
sub
arpl
ror
iret
out
int
inc
imulb
fmuls
testl
xchg
add
imul
lcall
mov
mov
movsb
push
addr16
cmp
push
rclb
out
add
adc
lcall
mov
dec
pop
repnz
inc
in
xor
adc
mov
pop
movsb
mov
mov
and
cld
sub
mov
xor
add
test
and
mov
dec
int
and
push
mov
repz
mov
inc
es
and
fildll
add
clc
xchg
in
push
pop
sarb
jns
xchg
std
sbb
sbb
std
pop
jb
mov
ljmp
sbb
cwtl
pop
lods
bound
sub
pushf
sub
xor
cs
adc
inc
neg
add
or
rorb
mov
ljmp
sahf
mov
sub
add
addb
jb
push
sar
stos
mov
mov
movsb
sbb
pop
mov
pushf
cwtl
mov
mov
aaa
mov
call
jle
fisttpll
sahf
mov
xchg
test
nop
outsb
movsl
mov
pop
gs
mov
mov
leave
negl
xor
ja
add
push
mov
stos
daa
scas
mov
fadds
push
addr16
jle
dec
popa
out
into
mov
and
jnp
rclb
xchg
rcr
or
pusha
hlt
sub
dec
scas
subl
adc
subb
xchg
mov
test
jle
stc
imul
cmp
into
dec
dec
in
test
loop
mov
test
stos
cmp
mov
cmp
mov
jbe
and
xor
sbb
adc
mov
dec
stos
test
xchg
pop
insb
jl
cmp
xchg
adcl
dec
add
and
js
or
rorb
pop
mov
push
popa
mov
test
or
mov
jbe
jecxz
or
push
ja
jg
inc
in
jecxz
inc
aaa
cltd
insb
jnp
sbb
jns
sbb
and
xchg
loop
jmp
sub
or
pop
mov
ret
mov
jle
cmpsb
and
pop
mov
scas
lret
mov
cmp
aad
movsl
sub
xchg
aam
lea
imul
inc
dec
mov
aam
pop
sbb
jl
add
pop
jecxz
mov
ret
shrl
aas
mov
sar
cmp
pop
adc
icebp
loopne
dec
add
movsl
mov
inc
fists
jmp
pop
fsub
adc
insb
out
jns,pt
pop
gs
mov
push
push
push
lds
cmpsb
lds
jp
inc
dec
push
xor
jl
mov
mov
cwtl
jge
fistpl
and
pop
push
call
inc
sbb
cwtl
int3
in
mov
out
adc
fucomp
aaa
pop
fistl
fstps
out
xor
gs
push
adc
out
sahf
into
scas
jo
inc
loop
dec
adc
popf
xchg
adc
pop
adc
push
ja
mov
fldcw
xorl
mov
inc
and
xor
xchg
xchg
daa
pushw
daa
push
cmp
jnp
out
cli
dec
and
outsl
xchg
push
xchg
pop
cmc
adc
loopne
mov
seto
movl
push
mov
aaa
rorl
mov
sbb
cwtl
sub
pushl
pop
mov
pop
push
enter
fiadds
add
test
bound
aam
mov
lret
push
movsl
insb
je
lahf
shll
push
fmull
add
and
xorb
les
xor
cs
daa
xchg
xchg
loopne
jecxz
xor
and
push
cmp
xor
dec
cli
inc
aaa
lock
outsl
inc
push
xor
mov
jge
mov
pushf
cld
inc
ret
leave
sbb
pop
test
lea
idiv
add
loop
loope
inc
decb
jecxz
sub
sbb
sahf
scas
xlat
insl
mov
mov
xchg
test
jp
out
mov
inc
fldenv
push
push
xor
pop
nop
insb
loope
cmp
ljmp
lock
xchg
lahf
outsl
mov
fcmovnu
push
push
fbld
jge
mov
mov
push
cmp
pop
sbb
inc
inc
sub
fsubl
xor
mov
sub
xor
cmp
pop
xchg
testb
sti
divb
scas
inc
dec
mov
test
daa
mov
in
inc
and
mov
mov
sub
add
pop
jno
sub
js
cmp
dec
js
mov
leave
aas
aad
fnstsw
xchg
dec
pushf
adc
popa
sbb
in
xchg
adc
add
cmp
insl
push
fcoms
cmp
and
mov
pop
mov
in
jne
xchg
sbb
and
lods
aam
push
test
sahf
pop
imul
jmp
jnp
mov
dec
mov
adc
dec
mov
jae
adc
ljmp
lcall
sarl
xchg
xchg
cmc
lcall
insb
push
adc
and
dec
lods
and
add
sub
mov
ret
je
cmp
push
inc
fsubr
std
cld
mov
or
push
outsl
negb
js
mov
xchg
cmp
xchg
incb
cmp
pushl
mov
inc
push
loope
shlb
cld
addr16
sub
stos
cmpsb
dec
gs
sti
pop
mov
dec
mull
jnp
shrb
mov
fsubs
rcll
clc
fsubr
add
shr
loope
ja
out
sbb
les
adc
jmp
jle
mov
or
push
add
add
js
cmp
stos
inc
ss
xchg
pop
mov
or
and
test
es
inc
lret
aas
mov
jns
jmp
mov
aad
imul
push
mov
mov
out
cmpsl
lret
push
cmp
jl
dec
cmp
popf
out
mov
std
and
dec
add
jne
jge
add
pop
xor
jae
add
movsl
pop
dec
fcoml
and
mov
lcall
lods
cwtl
subb
xchg
int
sbb
lock
js
sti
jle
aas
mov
mov
xchg
test
jmp
fwait
pop
add
int
lds
or
fistps
mov
cmovne
jb
xchg
sub
pop
pop
call
fcmovnbe
mov
sub
jecxz
dec
lods
shlb
and
xchg
dec
jl
sbb
fsubr
inc
call
xchg
push
jns
or
int
pop
cmc
add
lods
push
sub
into
xor
jno
xchg
outsl
test
daa
rolb
fwait
lcall
cs
pop
push
popa
rolb
mov
xor
test
inc
pop
call
mov
out
xor
pop
sub
fsubrl
jns
mov
filds
inc
pusha
out
pop
scas
pop
jno
mov
inc
push
push
mov
inc
pop
cmc
pop
dec
sbb
jo
jmp
fcoml
xor
cmp
jbe
loop
fwait
push
cmp
cs
xor
pop
fcompl
add
xchg
bound
add
sub
push
bound
jno
mov
sub
in
test
mov
cmc
add
mov
dec
xor
sbb
mul
daa
sub
xor
mov
lcall
push
mov
es
add
ljmp
mov
aas
xorl
xor
push
in
add
fwait
test
add
into
mov
sub
rclb
sub
repnz
jmp
jae
cld
loope
add
out
push
fldcw
imul
cmp
adc
arpl
decl
sbb
jmp
pop
js
push
push
adc
sbb
mov
xor
inc
cmp
jmp
call
lcall
imulb
fbld
cmc
cmp
and
or
mov
sbb
pushf
lret
sahf
xchg
cmp
test
ret
inc
clc
inc
adc
xor
mov
lock
push
cmpsl
push
icebp
dec
or
or
and
in
dec
add
pop
xchg
shlb
xor
das
adc
push
inc
pop
mov
adc
pop
enter
xchg
adc
mov
jp
test
popf
je
ds
mov
jp
loop
xor
add
movsl
dec
ret
in
fcoml
insl
in
cmpl
or
negb
and
cmp
pop
adc
sbb
das
inc
jns
dec
outsl
pusha
xlat
jl
insb
enter
add
dec
sbb
or
cmp
shrl
dec
ja
pop
push
ds
and
clc
cmp
sbb
es
mov
imul
push
pop
leave
sub
int
outsl
pop
mov
xchg
cmp
push
jle
cmp
xchg
mov
push
mov
xchg
stos
fwait
lods
loop
into
fcompl
sbb
int3
inc
ret
fsubrs
adc
call
inc
lret
test
jecxz
dec
call
add
add
dec
loop
mov
jae
sub
mov
dec
xchg
in
and
imul
inc
mov
das
outsb
aas
mov
jmp
pop
sarb
push
sub
jle
mov
cltd
or
out
inc
loopne
fwait
loop
scas
mov
fidivl
inc
inc
mov
dec
adc
adc
mov
push
lret
popa
adc
call
xchg
in
push
loopne
jae
inc
outsb
call
push
dec
dec
fbld
push
aas
adc
stc
shrb
sbb
push
mov
and
mov
scas
jge
cmp
pop
inc
xchg
push
lret
pop
cmp
out
jmp
xor
rcr
fsubl
pop
dec
push
mov
jbe
sarl
scas
daa
dec
or
nop
sub
dec
out
insl
addr16
jbe
es
pusha
pop
andb
fnstcw
mov
scas
jne
cld
push
scas
and
xor
int3
shll
sub
or
cmpsb
testb
fsubrl
xchg
and
cmp
aaa
shrb
je
stc
and
mov
xor
mov
gs
outsl
xchg
cwtl
call
popa
inc
sbb
leave
out
popl
and
add
jmp
rep
lds
sbbb
movsb
inc
in
into
les
lock
into
ret
xor
sti
outsl
adc
sub
imul
push
stos
andl
push
sbb
test
inc
push
jae
sbb
nop
adc
mov
cmpsb
adc
aaa
fistpll
pop
jne
lods
fwait
inc
pushf
gs
mov
and
sbb
jecxz
mov
das
aas
xchg
xor
adc
outsl
pop
outsl
mov
add
std
jl
mov
pushw
inc
arpl
sarb
sub
sub
lods
je
mov
sbb
sub
add
es
pop
jle
mov
incb
repnz
pop
xchg
je
pop
outsb
jmpw
cwtl
xchg
mov
cmp
shr
jge
les
mov
adc
test
jge
xchg
sbb
into
sbb
adc
adc
mov
cld
pop
jle
stos
out
and
inc
add
ja
mov
mov
xchg
push
in
cmp
ds
xor
jp
xchg
call
mov
ret
and
sbb
jne
mov
mov
dec
ljmp
rol
mov
and
mov
hlt
and
lods
repz
push
add
xor
xchg
sbb
fisubl
sub
adc
movsl
imulb
popf
outsl
ja
adc
xchg
fnsave
adc
data16
pop
or
or
pop
sbb
jecxz
inc
and
movsb
mov
adc
push
lea
insl
mov
jnp
iret
std
add
divl
sbb
mov
dec
jae
dec
std
jmp
ljmp
mov
mov
jmp
adcb
in
push
adc
pop
out
push
fs
insl
or
mov
setne
iret
cmc
aas
add
sysexit
jg
outsl
push
pop
gs
jne
test
mov
iret
cmc
aas
add
sysexit
jg
outsl
push
pop
gs
jne
test
mov
iret
cmc
aas
add
sysexit
jg
outsl
push
pop
gs
jne
test
mov
iret
cmc
aas
add
cmovb
int
stos
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
mov
and
xor
pop
popf
daa
mov
mov
xchg
sbb
dec
xchg
sbb
imul
cltd
adc
xor
inc
leave
push
fldenv
stc
mov
xchg
sbb
sub
les
pop
in
hlt
jns
mov
mov
jl
arpl
test
lahf
inc
enter
jmp
cltd
cmp
je
adc
push
push
sbb
lea
jg
insb
dec
insl
sub
mov
sub
add
cltd
fldenv
and
xorl
es
in
icebp
dec
mov
jns
sub
rorb
imul
insl
pop
not
or
insb
js
leave
imul
sub
stc
cmp
push
xchg
xor
jbe
cwtl
les
inc
leave
mov
je
mov
cld
or
xlat
call
or
jmp
jge
inc
inc
adc
xchg
es
fs
mov
mov
mov
outsb
adc
sub
or
popa
imul
fiaddl
imul
sub
les
les
and
fs
mov
mov
dec
int3
pop
in
in
aas
ja
jno
inc
out
push
jmp
cmpsb
cmp
lock
jo
inc
ficoml
and
and
enter
test
cmp
or
xchg
jne
jg
push
mov
sbb
pop
insl
fldenv
in
inc
fnsave
fs
xchg
sbb
aam
in
hlt
jns
mov
and
xor
inc
leave
push
fldenv
stc
test
xchg
sbb
aam
in
hlt
jns
mov
mov
pop
push
fstpt
out
pop
jb
jg
addr16
cwtl
pop
cwtl
sub
jg
jno
leave
andps
ds
mov
push
icebp
mov
mov
sub
pop
xchg
out
mov
popa
sbb
mov
movl
xor
jle
jo
nop
or
in
faddl
xor
sub
out
cmp
into
ret
andb
sarl
push
mov
aam
mov
push
or
mov
mov
nop
cmp
stc
aas
sub
push
xchg
pop
sbb
nop
sbbl
mov
mov
mov
sbb
loope
jecxz
push
lods
leave
js
pusha
fwait
sbb
nop
outsb
add
data16
add
xchg
push
cmpsl
int
lcall
std
xor
lcall
mov
lcall
push
or
icebp
and
sahf
or
sub
sti
fnstcw
xor
outsl
pop
psubd
lret
mov
xchg
sbb
insb
stos
mov
loope
sti
lret
insb
bound
hlt
and
and
fstpt
inc
sbbb
mov
sub
mov
mov
mov
and
mov
lcall
ss
add
push
jo
loopne
ds
push
nop
sarb
fsubp
inc
xchg
out
pop
popf
aas
sub
and
icebp
stos
or
repnz
cwtl
sti
add
jb
jo
mov
dec
fsubrl
jl
leave
fnstenv
or
adc
adc
aad
hlt
lds
mov
push
or
pop
lret
jge
xorl
xor
push
ja
cmp
popf
push
xchg
cltd
sbb
pusha
ljmp
das
push
mov
and
movsl
adcl
fnstsw
out
std
jb
shll
jecxz
fadd
dec
mov
jp
xor
jbe
into
add
iret
or
and
push
inc
and
cltd
sbb
xchg
insl
mov
inc
cltd
xchg
inc
pushf
scas
add
and
push
lods
std
sub
addr16
shrb
add
test
or
jg
mov
in
mov
ja
repz
pop
sbbl
ja
pop
sti
jecxz
pusha
roll
scas
fmull
jg
xchg
lret
adc
mov
ret
adc
je
rol
out
addr16
movsl
mov
mov
xchg
sub
fs
adc
add
repz
int
aas
pop
push
stos
cltd
stc
or
xchg
dec
sbb
aam
sbb
inc
fisubs
bound
mov
das
popa
jo
dec
shrb
loope
and
test
jo
mov
stos
add
jecxz
inc
mov
ljmp
mov
pop
jne
jmp
outsb
fstps
ja
add
jno
push
or
add
adc
and
jmp
push
hlt
shlb
popa
adc
jno
mov
xor
jmp
add
inc
mov
sub
sbb
into
mov
int3
xchg
call
sbb
dec
jmp
dec
add
stos
js
addr16
xchg
mov
sub
adc
nop
mov
adc
xlat
mov
jno
lahf
daa
arpl
inc
rol
divb
fldcw
mov
mov
xchg
sbb
cmp
fs
and
test
jmp
mov
fstpt
mov
shlb
xorb
mov
push
inc
pop
out
jae
mov
pop
or
mov
rcl
in
cmc
jmp
adc
dec
cmp
bound
or
cmc
xchg
mov
adc
dec
iret
pop
mov
aaa
fcom
cmp
mov
adcl
add
out
and
mov
cmp
sahf
lahf
push
add
add
dec
add
push
xlat
xor
cmp
es
dec
xor
mov
out
adc
add
mov
loope
fsubrl
or
mov
sbb
cwtl
mov
mov
in
cs
negb
sbb
jmp
loop
mov
mov
clc
lds
xchg
lods
push
loope
es
xchg
adc
out
jae
push
xchg
or
cmp
pop
pop
push
insb
inc
lret
cmp
mov
lds
roll
testb
or
push
cmp
ficompl
adc
jno
js
cli
cmpsl
dec
das
call
adc
lods
xlat
mov
adc
xchg
dec
mov
popa
ficoms
in
dec
adc
call
insl
or
push
xchg
add
xchg
test
and
iret
dec
mov
jp
sub
addr16
aas
cmc
xlat
les
mov
por
mov
jae
jns
inc
push
pop
pushf
jge
pop
lock
push
or
mov
iret
sub
or
shl
mov
ja
ret
fidivs
in
push
pop
out
mov
cld
popa
lock
ss
or
iret
jnp
mov
and
cmp
jae
daa
sbb
sub
cmp
dec
xchg
xor
inc
push
fs
mov
add
add
push
inc
enter
add
push
mov
test
ficomps
insl
or
or
or
cmp
jecxz
les
call
or
jb
test
or
ljmp
cmp
cmpb
stc
sub
cs
sub
push
call
stc
and
std
pusha
sub
into
dec
outsb
cltd
xor
adc
pop
subl
lcall
and
cmp
add
cmp
mov
mov
mov
int
or
xor
sti
cmp
or
push
cmc
or
xchg
ret
in
and
xchg
negb
mov
clc
cmp
test
sbb
addr16
rclb
push
or
clc
js
push
mov
adcl
jle
xchg
sar
mov
ljmp
js
scas
jle
cmpsl
xchg
pop
jns,pt
out
and
dec
sti
xchg
lods
fbstp
mov
clc
push
push
sub
jle
cmp
pop
lahf
ret
in
inc
enter
iret
sti
and
mov
orb
mov
lcall
mov
lret
lea
pop
outsb
xchg
in
or
pusha
mov
jle
mov
mov
dec
or
jmp
dec
rorb
sub
sub
cmpl
xchg
push
pop
pushf
pop
mov
movsb
or
mov
int
insl
cmp
bnd
cmp
int
js
push
add
ss
push
mov
xchg
mov
xrelease
pop
fs
fwait
sbb
out
in
xchg
sub
add
mov
fcoml
dec
stos
out
mov
jno
testl
jge
jmp
and
pushf
pop
fistpl
xadd
sbb
cmp
sub
cltd
dec
push
or
psubb
out
into
adc
push
xchg
gs
orl
sti
push
fsubrs
jp
lcall
mov
and
mov
dec
jl
push
aad
xchg
fidivs
sub
jmp
mov
push
imul
sub
mov
mov
adc
jp
mov
and
jo
fmulp
mov
cmp
xchg
push
cmp
in
test
push
mov
cmc
cmp
out
mov
push
xchg
jno
ljmp
andb
lea
add
std
xchg
int
loop
ja
jg
jg
or
test
stc
enter
add
adc
insb
out
fsubr
pop
data16
repz
cltd
fs
ret
fcoms
lods
into
cld
mov
out
fistps
loope
fwait
movsb
pop
sub
lock
ror
stos
js
je
mov
mov
hlt
mov
js
ret
xlat
mov
clc
mov
test
push
fdivp
in
mov
leave
addr16
lods
lods
dec
add
call
lea
jmp
push
jnp
lods
std
outsb
push
addb
mov
fadd
inc
pop
mov
pop
dec
adc
decb
outsb
cmpsl
dec
pop
mov
cmp
mov
inc
add
js
or
dec
xor
sbb
or
push
mov
ret
in
fcompl
pop
arpl
pop
addl
and
cmp
inc
dec
sbb
dec
imul
shll
push
jns
pop
dec
iret
jmp
dec
lret
inc
push
push
mov
arpl
or
test
xchg
dec
xor
mov
ss
pop
jge
push
repnz
jne
and
push
inc
movsl
mov
adc
mov
fimull
in
pop
and
xchg
push
addr16
das
cmp
jnp
aad
dec
push
cld
sub
fwait
out
testl
xchg
dec
or
lahf
rcl
ljmp
gs
mov
xor
inc
aaa
aas
out
ds
int3
pop
push
mov
movb
add
xor
ficoms
cmpsl
mov
xor
sarb
or
mov
jo
sbb
mov
or
adc
jg
inc
bound
dec
les
and
leave
repnz
pop
xchg
mov
sbbb
push
insl
call
adc
and
rcll
cmpsb
xor
xchg
xor
push
call
popf
sbb
mov
add
mov
jg
lods
dec
sbb
push
adc
mov
mov
sbbl
stos
sub
fstpt
rolb
mov
int
jnp
aas
jmp
or
push
ja
cwtl
or
push
lcall
adc
fadds
sub
movsl
in
fsubr
jb
popa
in
mov
dec
in
icebp
jg
sti
pop
int
lahf
nop
jp
push
dec
insb
xchg
sbb
inc
add
sub
add
bound
sub
mov
cmpsl
mov
mov
dec
adc
inc
inc
pop
inc
and
lds
jnp
sbbl
or
dec
inc
mov
je
fsubrl
ljmp
lock
test
int
leave
iret
add
aad
xchg
or
stos
xchg
in
lret
lret
adc
sbb
add
dec
hlt
pop
push
push
cld
xchg
call
rcrl
sub
dec
dec
inc
dec
sub
sbb
sbb
mov
mov
sbb
repz
sbb
jno
sarl
jmp
fcoml
jno
push
lods
pop
push
mov
pop
fsubl
jle
mov
ret
in
repz
cmpsl
cmpsl
in
xor
pop
and
sti
stos
mov
inc
sub
add
jl
lods
test
popf
xchg
sbb
mov
stos
inc
loop
mov
mov
xor
add
subl
sub
leave
and
out
inc
fcoms
aam
scas
add
fldt
mov
pop
aas
negl
adc
mov
and
fsubr
cmc
add
cmpsl
daa
bound
adc
jge
out
or
mov
push
xchg
push
pushf
pop
mov
xor
mul
mov
loopne
scas
les
ret
rep
cmp
es
mov
mov
jbe
jo
pop
sub
xlat
cltd
rolb
push
movsb
pop
fildll
fadds
jg
das
out
lock
cli
jno
dec
cltd
cwtl
int
fbld
push
loop
or
adc
lds
stc
or
repz
inc
pop
pop
xor
pop
imull
xorb
test
loop
jo
inc
js
into
dec
mov
mov
xor
xchg
outsl
cli
lods
sbb
or
xor
sbb
lcall
jne
in
pop
or
cli
repz
mov
sub
dec
insl
pop
mov
fsubp
jg
scas
mov
sub
loop
cmpsb
jbe
dec
test
je
fdivs
mov
jnp
shl
and
lods
xor
xor
inc
pop
dec
push
test
cmp
shrl
lret
fs
addr16
dec
fstl
bound
std
mov
and
movsb
jb
xchg
xchg
or
pop
and
jne
fdivrl
call
push
and
mov
mov
mov
call
push
hlt
loopne
mov
ret
cld
loope
sub
out
cltd
sub
in
sbb
adc
repnz
jecxz
add
ljmp
aaa
movsb
dec
pop
enter
jle
loopne
movsl
fadds
aad
xchg
ljmp
pop
mov
test
cmc
test
jle
daa
imul
adc
jg
fiadds
xchg
mov
cli
or
scas
movsl
out
mov
hlt
out
sbb
test
pop
inc
cmp
jge
xchg
or
sarb
jb
fucomp
jae
or
mov
in
aad
sti
jmp
das
cmc
push
dec
or
mov
fisttps
aaa
fildll
addl
inc
xchg
jo
push
mov
cmp
dec
in
daa
mov
test
mov
jb
push
sub
lods
in
cmpl
sar
push
je
add
enter
xchg
popl
rclb
inc
icebp
xchg
push
push
xchg
lcall
pusha
xchg
subb
pop
mov
push
mov
add
mov
pop
pop
mov
movsb
mov
mov
push
pop
dec
xor
push
cmp
mov
mov
mov
mov
push
cmp
imul
stos
inc
jo
jle
dec
xchg
and
sbb
jmp
xlat
inc
inc
or
and
es
and
dec
mov
shrl
out
fwait
gs
rorl
dec
imul
xchg
inc
jb
aaa
xchg
adc
mull
pop
mov
xor
add
add
pop
stc
mov
cwtl
push
cmc
loop
movsb
loopne
add
cmp
mov
call
rcr
pop
loopne
cli
jns
jmp
push
movsl
int
mov
scas
pop
sbb
jl
pop
lods
idivl
jb
pop
lahf
mov
add
jg
in
mov
out
shrb
inc
jo
roll
push
icebp
in
std
pop
dec
sti
sahf
stos
shrl
and
push
push
sbb
xchg
repnz
mov
pop
jbe
sbb
inc
mov
in
int
jle
inc
jle
enter
push
sbb
push
dec
loopne
xchg
pop
sub
and
jbe
or
mov
leave
out
dec
lds
loop
push
popf
mov
xor
loopne
sub
or
cmpsl
push
jae
in
mulb
xchg
clc
push
mov
imul
dec
bound
cmpsl
sub
inc
xchg
xchg
iret
mov
jnp
jno
and
inc
pop
rorb
mov
mov
pop
xchg
adc
mov
aas
mov
data16
fistpll
pop
insl
cmp
filds
jg
lcall
lods
lea
jne
add
xchg
pop
out
dec
lahf
scas
ljmp
xor
cmp
mov
ficompl
push
mov
call
sbb
mov
into
rcrl
xchg
cltd
inc
sahf
popf
sbb
jne
aas
mov
cmp
pop
icebp
shlb
clc
popf
push
adc
push
bound
sbb
mov
mov
xor
inc
xor
lock
int
mov
ret
rorb
jo
out
clc
aad
mov
push
mov
enter
out
push
popf
mov
push
fimull
xor
pop
iret
sbb
inc
or
loope
mov
pop
or
push
mov
scas
push
sbb
and
xor
inc
cmp
pop
jmp
les
or
push
outsl
cmc
sbb
ss
and
add
inc
sbb
insb
lcall
aas
arpl
push
dec
mov
or
and
loope
ds
out
mov
xchg
je
movsl
pusha
pop
fnsave
out
dec
dec
iret
sarl
jae
mov
lahf
outsb
cmpsb
cld
xor
adc
or
add
insl
pop
shlb
inc
shrb
jl,pt
mov
loope
out
dec
fdivl
add
xchg
sahf
enter
xchg
je
mov
and
fiaddl
mov
push
mov
aam
mov
mov
fwait
paddsb
stos
cmp
addr16
mov
pop
inc
xor
insl
sbb
jnp
ja
cmpsb
sbb
fcomps
adc
push
xor
lcall
or
mov
cmp
xchg
stos
mov
mov
xchg
mov
iret
mov
sub
cld
adc
and
das
mov
sar
loope
add
pop
cld
mov
mov
test
cmp
mov
into
fcoms
les
pusha
in
xor
scas
inc
mov
ja
sbb
insl
dec
fisttpl
fwait
or
push
sub
cmp
mov
adc
movsb
pop
pop
mov
pop
popf
mov
sbb
xchg
add
mov
jmp
xchg
cmp
cld
clc
ret
sub
ja
and
or
cmp
or
in
sbb
push
getsec
sahf
mov
rcrb
insl
xor
movsb
out
fs
in
loopne
sbb
mov
hlt
imul
xlat
mov
cmp
sarb
cmp
lods
jb
jp
xchg
cwtl
jne
inc
inc
inc
mov
fstps
data16
cmp
je
std
pop
cmp
mov
pop
inc
jecxz
scas
sahf
pop
mov
sbb
test
add
xchg
adc
enter
pushf
into
cld
add
pop
dec
ds
mov
scas
sbb
lds
pop
push
adc
pop
cmp
mov
in
aad
pop
jge
sub
mov
orb
rcrb
mov
fwait
dec
sub
sub
push
add
mov
in
in
loope
pusha
fsub
inc
faddl
fcmovnu
xchg
jb
mov
pop
daa
repz
hlt
adc
sbb
fbld
ja
adc
mov
mov
jae
pop
loop
decl
cwtl
movsl
push
dec
xlat
int3
jp
out
xchg
popa
dec
in
pop
jp
mov
inc
push
ss
xor
cmc
lahf
inc
outsl
mov
push
sbb
inc
lds
dec
jge
out
push
pop
add
shll
cwtl
popa
shlb
ljmp
ds
cmc
pop
test
and
bound
mov
int3
sub
inc
pop
std
int
dec
push
sbb
loop
adc
test
xchg
int3
decl
out
das
fbstp
pop
sub
xchg
xchg
es
ss
ljmp
js
mov
cld
mov
adc
in
outsb
jmp
fwait
lret
das
push
sar
xor
inc
mov
in
xchg
and
in
ja
rclb
scas
out
jne
cmp
mov
iret
dec
and
es
cld
xlat
push
daa
adc
adcb
mov
sub
arpl
test
push
je
mov
std
movsl
enter
divb
pop
mov
repnz
dec
popa
adc
call
fs
lret
je
ss
push
mov
jb
mov
inc
jg
mov
loope
into
shll
out
clc
aas
mov
std
xor
xchg
int3
and
mov
pop
add
push
add
iret
mov
lret
test
das
stos
out
jp
xor
cmpsl
ljmp
ficomps
je
xlat
lods
fcompl
sbb
jnp
stos
mov
leave
out
lods
std
sub
jae
imul
push
int3
addr16
sbb
stc
popf
por
jo
push
rcrb
cltd
inc
int
add
insl
fadd
push
adc
lods
loope
inc
xor
ret
and
cmpl
mov
mov
cmpsl
push
lods
js
loope
xchg
cld
in
mov
inc
mov
xlat
push
test
test
push
xor
pop
jp
or
clc
sbb
icebp
jge
sahf
mov
jnp
out
insl
or
pop
sub
call
test
push
rcll
cmc
stos
pop
dec
insl
push
jge
dec
xlat
push
das
mov
arpl
pop
xchg
push
call
mov
movsl
in
je
pop
dec
add
push
xchg
xor
clc
pusha
jp
jg
in
and
mov
and
pop
mov
mov
popa
loop
jl
dec
ror
cmp
adc
jge
xor
pop
mov
dec
push
test
lahf
enter
inc
aas
sub
mov
xchg
popf
xor
pop
add
mov
push
ds
sub
sahf
and
mov
dec
mov
add
movsb
call
hlt
loop
fsubs
jge
mov
push
and
pop
cmp
outsl
scas
pusha
imul
adc
push
lcallw
enter
mov
jbe
mov
inc
and
popa
icebp
andw
add
cwtl
xchg
fwait
subb
cmp
insb
adc
cwtl
fsubr
mov
clc
cmpsb
xchg
cmp
push
sbb
add
lods
mov
xchg
data16
push
lods
xchg
pop
mov
insl
icebp
and
test
out
mov
into
adc
fildll
mov
in
call
xchg
test
mov
fs
xchg
sbb
aam
in
hlt
jns
mov
and
xor
inc
leave
push
fldenv
stc
test
xchg
sbb
aam
in
hlt
jns
lea
and
xor
inc
leave
push
fldenv
stc
test
xchg
sbb
dec
rcrb
imul
cltd
adc
push
pop
in
hlt
push
jnp
imul
rcrl
or
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
addr16
push
inc
jbe
pop
pop
ss
arpl
idivl
out
divb
mov
mov
inc
addr16
push
inc
jbe
push
daa
push
pop
es
push
test
divb
cmpsb
xchg
push
inc
jbe
push
daa
push
pop
es
ss
mov
lret
call
sbb
pop
stc
in
and
in
fdivrs
xor
rcrb
and
inc
and
sti
ss
sub
adc
sub
xchg
pop
int
push
jg
repnz
xchg
pop
mov
mov
dec
lods
fcomps
mov
and
stos
adc
ret
lret
addr16
ja
stos
and
pop
or
imull
pop
out
and
and
jae
xchg
hlt
jbe
rorl
test
fisttps
pop
ss
cmp
mul
aad
xchg
into
js
pop
addr16
fstp
ret
dec
out
popf
out
lods
sarl
xchg
dec
or
xchg
cmpsl
xchg
cmpsb
xchg
inc
addr16
push
inc
jbe
push
daa
push
pop
es
ss
divb
cmpsb
xchg
add
das
cmp
or
je
inc
bound
bound
mov
iret
mov
bnd
cli
aam
shrl
sub
and
unpckhps
inc
push
pop
jno
sbb
andl
loop
pop
dec
add
jbe
daa
push
pop
es
ss
divb
cmpsb
xchg
push
inc
jbe
push
daa
push
pop
es
ss
divb
cmpsb
xchg
fimull
adc
xchg
gs
shl
mov
and
sbb
popa
dec
pusha
popf
in
fsts
call
int3
jo
xchg
inc
fldcw
jne
int3
push
repnz
decl
test
or
mov
ja
jbe
ljmp
dec
insl
jmp
lock
in
push
and
jge
outsl
mov
dec
xorl
sbb
cltd
icebp
sahf
addr16
imul
mov
inc
in
lds
pop
mov
int
or
movsl
or
mov
popa
int
fimuls
push
lahf
inc
inc
mov
test
sub
cmc
sti
mov
and
sub
out
dec
insl
inc
sbbb
pop
int
sar
mov
jmp
imul
in
push
xor
decl
jmp
rcr
pop
or
sbb
xchg
xor
add
sti
cmpsl
aaa
into
popf
mov
in
mov
fildl
pop
rcl
cmp
dec
lret
lahf
das
adcb
pop
out
push
mov
adc
outsb
mov
ficoms
ja
in
scas
xor
mov
jne
cmp
js
cli
mov
sti
push
data16
lret
mov
clc
dec
cmp
dec
pop
sub
mov
popa
popa
aas
push
jl
add
cmp
outsl
lods
add
test
mov
push
xlat
in
rcll
mov
push
cmp
scas
aas
mov
lock
lock
stos
xor
fldln2
rolb
popf
test
dec
into
movsl
icebp
dec
icebp
mov
cmp
jge
jmp
pop
and
and
adc
leave
dec
dec
pop
in
jmp
sbb
adc
mov
roll
pusha
ja
fwait
ret
sbbb
les
mov
insb
adc
dec
xchg
mov
fstpl
mov
pop
test
push
or
dec
jnp
sbb
mov
stos
lahf
pop
sbb
lods
jne
into
jge
mov
cmc
je
push
or
add
inc
mov
adc
test
sti
pop
popf
jge
sbb
out
pop
cmpsb
movsl
flds
mul
lahf
lret
xor
cmpsl
in
decl
jmp
mov
jp
test
pushf
cmp
sahf
adc
pop
scas
push
ret
xor
in
outsl
inc
xchg
add
sahf
add
loope
fmuls
pop
xchg
leave
mov
leave
inc
or
test
mov
add
in
or
hlt
in
xchg
sbb
dec
rolb
xchg
jae
pop
xor
sar
bound
int3
or
outsb
fadds
lods
xor
rorl
das
mov
jle
bswap
test
sbb
xchg
aad
push
jecxz
pop
mov
mov
pop
inc
and
stos
sbb
je
xor
stc
clc
push
subl
out
sub
fisubrl
inc
xchg
add
mov
mov
mov
inc
sub
leave
repnz
mov
ficompl
imul
push
and
adc
and
push
fsubrs
push
mov
xchg
mov
pusha
sti
call
cs
outsl
and
and
xor
cli
xchg
and
loop
inc
jecxz
repz
jmp
mov
dec
stc
or
out
cs
ret
pop
pop
pop
fs
jmp
sti
push
in
dec
push
push
icebp
in
jnp
or
mov
and
jmp
xor
fidivrl
test
lret
lahf
pop
popa
and
imul
xlat
cmp
fsubs
sub
xlat
cmp
ljmp
leave
test
outsb
or
push
test
sub
out
xchg
xchg
jle
aad
dec
jl
lcall
ret
in
or
mov
sbb
jnp
push
sbbl
mov
in
mov
mov
aas
das
rcl
popf
xchg
popa
inc
sub
dec
lret
mov
pushl
lds
mov
ret
mov
push
rcrb
add
mov
mov
jecxz
sub
ljmp
inc
jge
sub
pop
mov
xchg
dec
fistpll
shr
scas
xor
popf
out
repz
fbstp
adc
or
fdiv
ret
mov
test
adc
lock
insl
xchg
xchg
mov
es
sbb
push
push
lcall
mov
dec
or
or
ljmp
adc
mov
cmp
fs
inc
clc
lods
mov
or
jecxz
push
fcomps
sbb
and
ja
dec
and
mov
inc
xchg
adc
sub
in
inc
jg
pop
iret
cmpb
cmp
pop
mov
add
lods
out
inc
leave
lahf
add
cld
jle
mov
xor
jns
mov
movsl
push
cmp
in
test
adc
aad
rorl
fcomip
call
inc
test
xchg
psadbw
out
aaa
loope
jo
dec
mov
sbb
xor
cwtl
aas
ljmp
adcb
pop
call
pop
mull
mov
xchg
add
jo
inc
addr16
sub
jnp
setge
xchg
lret
mov
sub
sub
and
arpl
sub
fcomps
cmp
stos
repnz
call
out
sbb
push
in
jno
cmc
or
push
jo
jnp
insb
jmp
iret
jp
or
sub
pop
xor
fiaddl
jne
jle
add
shl
lods
aad
mov
cmp
popf
aam
cs
cmpb
add
pop
fsubrs
xor
jle
push
sbbb
dec
inc
and
popa
xor
in
decl
jg
adc
mov
jg
dec
jo
dec
cs
mov
add
cltd
notl
rdpmc
push
repnz
sub
mov
hlt
pushf
push
popf
and
inc
xchg
jmp
mov
hlt
sub
mov
popa
add
push
pop
je
xlat
mov
inc
or
push
pop
outsb
and
ljmp
lds
in
xchg
hlt
ja
cwtl
mov
es
int3
add
addr16
cmp
xor
mov
jge
inc
push
add
cwtl
mov
shl
mov
cltd
push
xlat
jnp
stos
int
and
lock
push
jbe
stc
pusha
call
dec
xor
not
repz
test
in
daa
add
daa
add
push
lret
in
sub
mov
cmc
dec
jle
mov
int3
jns
lcall
std
fwait
int3
xor
mov
nop
jbe
xchg
test
aas
add
mov
or
shll
jp
ret
fstl
add
lds
cmpsb
mov
aas
pop
hlt
and
rorb
movsb
inc
inc
push
rolb
aas
dec
popa
insb
insl
lcall
repz
dec
lahf
mov
dec
loope
fstp
fcmovu
bound
test
imul
mov
push
xchg
sub
movsl
cmpsb
and
ja
scas
pop
test
enter
lea
int3
cwtl
dec
add
lods
jbe
sbb
loop
cmp
jo
cld
aam
out
imul
pop
mov
xchg
movsl
xchg
loopne
pop
xor
aam
cwtl
rorb
mov
in
aas
mov
das
mov
push
rolb
sbb
test
ret
pop
dec
out
push
push
addr16
clc
fnsave
test
lock
pop
xor
push
lret
dec
sub
push
cs
dec
pop
push
inc
je
call
aad
out
mov
push
stos
pop
xchg
or
pop
cmp
fs
movsb
std
inc
imul
mov
push
sub
out
dec
xor
pop
aas
push
pop
push
lods
stc
aaa
mov
mov
push
add
add
push
jbe
xlat
cwtl
jbe
jge
mov
aad
outsl
inc
in
xchg
xchg
xor
ss
sub
mov
jecxz
cmpsl
inc
popa
xor
xchg
mov
jmp
adc
xchg
jg
test
inc
mov
in
nop
pop
cmp
dec
in
jmp
mov
mov
sbb
dec
fwait
dec
ret
fimuls
test
sbb
aad
mov
inc
pop
cmp
sbb
sub
xchg
loopne
test
add
dec
push
mov
xor
and
cmp
cld
ret
js
sub
and
addb
push
and
xchg
insl
cmpsl
imul
mov
sahf
lret
xchg
add
inc
imul
xlat
pop
push
jmp
or
add
cwtl
pop
sbb
xlat
ret
out
or
pop
inc
add
mov
adc
dec
in
xor
imul
mov
pop
nop
jmp
lcall
cmp
cmpsb
das
jbe
jb
adc
decb
add
xchg
inc
and
sbb
idivl
roll
aas
lods
or
leave
sbb
mov
mov
aas
add
loope
dec
mov
jge
repz
xchg
mov
dec
cmpsl
ljmp
les
int3
je
xchg
rclb
jge
out
imul
sub
mov
add
mov
jnp
ret
addb
dec
filds
lock
push
sub
aaa
jae
aam
mov
aaa
sbb
fimuls
fs
add
lcall
mov
mov
sbb
mov
mov
fucom
out
inc
outsl
mov
add
xchg
mov
and
cltd
mov
jle
xor
xchg
sub
sbb
mov
and
cld
repz
fdivs
xchg
mov
sti
adc
imul
pop
jle
inc
daa
add
fcmove
fmul
pop
int3
sbb
cmp
filds
aam
lods
add
into
outsb
inc
cmp
mov
shrb
aas
sub
enter
in
lods
xchg
jmp
test
pushf
out
dec
mov
jo
inc
dec
in
or
xchg
mov
xor
pop
add
ja
fwait
jle
inc
sarl
jae
add
loop
shll
dec
mov
sub
ret
push
mov
xor
pop
js
lret
fcompl
pushf
out
xor
mov
push
and
loop
mov
push
sahf
ds
push
push
aas
enter
mov
out
leave
stc
mov
loopne
inc
mov
fistpl
push
mov
push
lret
lock
xchg
dec
jecxz
xchg
or
dec
arpl
or
mov
xor
mov
shr
push
cmc
pop
gs
int
addr16
cmpsl
jb
mov
scas
ret
xor
decl
sbb
mov
js
out
sbb
lret
jns
add
out
cmp
cmp
data16
fbstp
fbstp
lods
outsb
bound
xor
adc
sbbl
pop
pop
aad
mov
mov
arpl
in
cltd
idivb
sahf
dec
jmp
push
cmc
test
jmp
aad
idivb
mov
sbb
xchg
aas
leave
pop
cmpsb
rcll
out
adc
arpl
push
xor
or
inc
add
sub
stos
jge
cmp
insb
mov
addr16
pop
shlb
mull
je
mov
sub
repz
inc
push
ret
mov
pop
in
push
fcmovnb
in
dec
mov
mov
xchg
xchg
cmp
aam
lods
cmp
inc
lahf
xor
add
insl
aam
inc
sahf
mov
mov
pushf
jle
je
ss
and
dec
scas
pop
cmp
xor
ljmp
xchg
adc
aaa
add
int
jns
loop
push
xor
push
mov
test
adc
pop
jl
cmp
sub
adc
cmp
mov
movsl
mov
lcall
aaa
add
enter
cmp
sub
aaa
push
sbb
mov
and
cli
mov
dec
sbb
loopne
bound
nop
adc
out
loopne
cmp
arpl
push
sbb
out
daa
fldenv
add
cmp
or
pop
fistpll
loop
jae
scas
and
inc
movsb
mov
out
jg
aas
ret
or
inc
js
dec
adc
xor
ret
xchg
out
es
test
push
mov
cmp
jmp
xchg
pop
enter
push
inc
adc
jae
mov
push
repz
pushf
mov
sahf
sbb
jns
rorl
dec
xchg
sub
mov
adc
push
jno
push
pop
xchg
fstl
shlb
pushf
je
mov
adc
in
sub
mov
jmp
iret
adc
jnp
inc
std
xchg
outsl
in
pop
adc
sub
out
jae
bnd
mov
divb
stc
rorl
test
xor
jecxz
jne
scas
xchg
enter
or
mov
clc
mov
pop
jmp
inc
fistl
fwait
cld
in
jp
sbb
js
mov
sbb
cwtl
fwait
pop
jmp
or
push
mov
fs
hlt
lcall
cld
xchg
ds
cltd
and
and
mov
jp
xchg
cli
fstsw
mov
add
test
ret
outsb
or
mov
cltd
fisttpl
into
xchg
mov
testl
fidivs
xor
sub
push
xor
dec
xor
out
or
les
cmp
or
add
cmp
aam
cltd
movsl
and
mov
std
jge
loope
mov
sahf
int
cs
pushf
stos
fwait
sbb
fwait
sahf
push
xchg
sub
roll
sbb
fmuls
insb
sub
fcoms
ret
int
push
jp
ja
daa
call
out
push
js
add
loopne
dec
mov
out
xchg
aaa
push
outsl
aaa
dec
mov
movsb
cmpb
jno
xchg
outsl
xchg
test
jecxz
push
lods
mov
sbbl
ja
mov
jl
xchg
mov
ficoml
add
test
repz
scas
fwait
sbb
sbb
int
xchg
mov
mov
adc
mov
daa
jmp
add
daa
mov
mov
and
std
testb
mov
enter
clc
sbb
jne
dec
inc
aaa
imul
dec
stc
xor
inc
sub
mov
repz
mov
fstl
push
add
cmp
pop
jmp
jne
pop
inc
imul
std
je
lahf
call
shl
sbb
daa
sbb
pop
sub
inc
sub
sbb
jno
mov
dec
pushf
mov
sub
adc
pop
dec
dec
cmp
cli
jmp
mov
jecxz
lcall
pushf
in
sub
cli
fxch
mov
stc
push
js
enter
stos
mov
icebp
dec
and
and
or
aaa
icebp
push
dec
test
adc
ss
shll
xchg
xchg
fistpll
fldt
insl
lret
adc
mov
cmp
rclb
repz
inc
outsb
xchg
jle
sbb
fcoms
sbb
or
and
adc
loope
xor
fldl
cmp
xchg
xlat
add
shlb
outsb
add
test
xchg
out
in
ficoms
ja
xor
or
test
scas
leave
jae
or
inc
icebp
xor
cs
je
pop
push
movsl
repz
and
dec
xchg
sbb
add
sahf
xor
gs
adc
sti
jno
xor
jl
sub
mov
cli
add
fwait
shrb
xchg
pop
jle
add
add
xchg
add
shr
scas
adc
incb
iret
mov
xor
or
andb
scas
inc
js
insl
and
push
js
xchg
dec
add
popf
outsb
int
or
rcl
fwait
cmp
std
lods
push
jp
fisttpl
clts
cld
push
mov
push
roll
sbb
cltd
movsl
and
push
push
cmc
adc
sub
jge
mov
cltd
pop
jns
loopne
js
pop
push
inc
ds
out
ds
test
jne
and
jae
out
add
negl
adc
and
shl
add
jns
lret
fwait
notb
and
mov
cmp
cld
mov
dec
push
inc
adc
sahf
xor
ljmp
outsb
stos
xchg
cld
stos
jle
xchg
sahf
inc
adc
pop
hlt
push
push
sbb
dec
xchg
into
ljmp
dec
fs
ss
push
or
lods
in
test
jae
mov
repz
pop
leave
popf
mov
pop
bound
dec
inc
jmp
mov
repz
bound
pop
jae
mov
ret
lds
lcall
leave
out
jb
in
dec
hlt
jno
cmp
daa
mov
add
cs
add
lret
pop
xchg
fcomps
mov
fistpl
fwait
mov
pop
pushf
out
daa
inc
mov
cmp
lea
mov
sbb
mov
ret
outsb
sahf
popa
mov
push
test
push
es
movsb
movsl
subb
js
xor
push
sub
xor
xor
add
test
movsl
jno
cwtl
jo
and
dec
cmpsb
xor
sbb
sub
ljmp
xchg
les
ret
mov
cld
les
movsb
mov
inc
cmp
sub
clc
pop
jecxz
xor
adc
mov
inc
or
mov
sub
lea
fwait
in
sbb
loopne
orl
jnp
mov
dec
outsb
ret
out
lods
mov
insb
mov
add
daa
dec
loope
fsubrl
ds
stos
push
into
xchg
add
adcl
arpl
xchg
xor
insb
outsb
xchg
repz
shll
test
jg
jg
jae
and
lret
mov
loopne
aam
add
test
sbb
xor
sbb
popf
push
jne
data16
inc
lcall
aaa
icebp
lcall
lcall
stos
pop
stos
pop
stc
test
add
push
test
or
les
adc
push
jne
sbb
fwait
lret
mov
pop
adc
pop
scas
cltd
xor
mov
mov
xchg
in
es
mov
in
scas
movsb
cs
add
bound
jmp
xchg
xor
mov
shrb
out
leave
sub
xchg
push
inc
inc
mov
ret
push
inc
add
pushl
push
les
insb
and
arpl
sahf
pop
mov
jl
xor
push
inc
fxsave
and
and
mov
dec
ss
and
mov
repnz
inc
popa
adcl
xchg
cmpsb
mov
scas
inc
fcomip
sbb
sbb
hlt
inc
push
xchg
aad
mov
int
adc
dec
sti
inc
rcl
or
insl
push
xor
ljmp
cmpsb
lds
push
hlt
test
mov
xchg
mov
clc
movsl
mov
sbb
rcrb
adc
pusha
push
imul
in
adc
pop
pop
xchg
jnp
test
scas
cwtl
sub
dec
inc
xor
inc
les
outsb
je
sub
aas
aas
xchg
sahf
addb
addl
fcompl
mov
cmp
dec
push
jno
ret
aaa
pop
push
pop
and
jbe
ds
cmpsl
stc
dec
out
xlat
xor
out
mov
xchg
ret
js
clc
js
sub
out
xchg
sbb
sub
push
inc
and
sub
jg
lds
std
jbe
sti
mov
adc
lret
leave
cs
out
push
mov
mov
xchg
outsb
dec
popl
mov
pop
xchg
jg
cmp
test
insb
fadd
clc
mov
jecxz
sets
fdivrl
mov
mov
rolb
in
cld
jmp
mov
push
sub
or
negb
add
and
jle
enter
or
insb
movsl
aaa
xlat
lock
dec
sub
sbb
jmp
out
dec
xor
inc
push
aas
gs
movsb
sbbb
pop
adc
mov
jno
loope
push
pop
inc
scas
push
mov
inc
cmc
js
jp
cmp
mov
mov
add
mov
and
sbb
sbb
cmp
test
adc
stos
scas
pop
sbb
pop
call
add
lcall
fiaddl
add
push
mov
test
lods
xchg
xchg
movsb
stos
sahf
scas
jge
dec
cli
into
repnz
ret
jp
movsb
xlat
inc
mov
sub
test
jle
mov
push
imul
mov
mov
adcb
js
cmp
rclb
andl
popa
movsb
or
sti
or
fsubs
fadds
push
mov
std
stc
ds
mov
add
or
add
in
stos
adcl
das
das
and
arpl
enter
push
pop
clc
int3
inc
jno
inc
dec
hlt
scas
sub
push
fistpll
rol
test
inc
cmpsb
daa
cltd
sub
sbb
mov
sbb
add
dec
and
movsb
pop
xor
loope
mov
or
imul
pop
cmp
push
dec
inc
jbe
push
daa
push
pop
es
ss
divb
cmpsb
xchg
push
inc
jbe
push
daa
push
pop
es
ss
divb
cmpsb
xchg
push
inc
jbe
push
daa
push
pop
es
ss
divb
cmpsb
xchg
push
inc
jbe
push
daa
push
pop
es
div
out
jge
movl
push
jp
dec
lcall
js
pop
lret
cli
sub
push
ficompl
stos
jp
in
pop
lcall
lcall
or
sbb
lret
or
pop
lcall
addb
jecxz
repnz
sbb
repz
or
xor
int
add
adc
in
jns
cmp
lret
cmp
and
inc
push
orb
cmpb
jmp
test
xor
cmp
and
rcl
ss
and
cli
sbb
mov
es
mov
jno
roll
add
cmc
stos
filds
mov
packssdw
push
andl
aad
cmp
cmc
scas
sbb
aam
in
xchg
mov
pop
cmp
notl
gs
lahf
inc
shr
mov
lret
loop
mov
js
jp
or
fimuls
jo
dec
stc
fistl
lcall
mov
out
push
jmp
dec
mov
sbbl
cli
sub
or
add
repz
xor
add
adc
inc
lcall
ljmp
out
pop
clc
pop
mov
sbb
mov
pop
fildll
xor
sbb
and
cli
cmp
dec
lahf
dec
lret
or
cmp
push
stos
es
xor
leave
cmp
or
sbb
ljmp
or
pop
lcall
lcall
or
sbb
ljmp
or
pop
lcall
sbb
pop
je
adc
aad
mov
pop
push
mov
test
or
mov
cmp
inc
sbb
fwait
xlat
pop
mov
loop
push
arpl
ja
loope
in
out
in
adc
push
fstpt
jbe
jb
ret
xchg
mov
fidivrs
and
shlb
and
iret
test
cmpsl
jge
inc
test
adc
arpl
ret
xchg
idiv
int
adc
and
push
mov
fimuls
roll
dec
cmpsl
jae
stos
scas
cmp
or
or
shl
fnstenv
and
jnp
jb
je
movsl
aaa
cmpsl
pop
mov
mov
push
iret
pop
push
inc
ljmp
aas
cmp
dec
xchg
and
arpl
insb
adc
cmpsl
jl
pusha
addb
pusha
loop
mov
mov
imul
test
sbb
sub
aam
in
lods
sti
push
dec
sub
dec
data16
or
pop
push
dec
push
movsl
mov
insb
xor
fsubrp
call
sarb
aad
je
sub
pop
pop
adc
in
ss
mov
into
sbb
aad
push
pushl
pushf
xor
fidivs
or
xchg
sub
sub
sub
sbb
gs
cmpsb
fiadds
xor
dec
cmpsl
sub
xor
push
push
and
jo
lds
popa
ljmp
and
mov
cmp
lcall
inc
fdiv
xchg
int3
leave
nop
sub
xor
gs
psllq
mov
pusha
adc
int3
andl
xor
sub
shlb
ret
std
aaa
shlb
jmp
sub
fs
mov
or
nop
inc
cmp
es
push
sbb
ret
jl
bound
mov
imul
or
add
ljmp
test
lahf
sbb
imul
cmp
std
outsl
pop
mov
add
xor
das
ds
push
int3
xor
clc
or
outsb
aas
icebp
mov
mov
adc
cltd
pop
jne
movsl
std
mov
in
mov
in
xor
smsw
lds
cmp
subb
adc
pop
fs
and
dec
jg
adc
sub
aaa
out
dec
dec
sub
pop
sbb
jmp
push
popa
sbb
xor
mov
clc
mov
dec
enter
stos
into
pop
lea
or
push
dec
sbb
jns
fdivr
bound
inc
cmpsl
jg
dec
mov
leave
cli
mov
insl
out
repnz
mov
punpckhwd
scas
mov
mov
pop
or
sahf
jbe
jl
inc
cmc
add
ds
outsb
les
loope
lods
imul
push
and
fnstenv
lods
or
fldenv
jae
add
push
adc
xor
dec
pop
in
push
xchg
inc
mov
sahf
and
cld
jnp
addl
cld
inc
jne
push
xchg
adc
bound
andl
dec
loope
inc
sub
jg
ret
mov
imul
pop
test
xor
push
jb
push
loope
aam
xchg
mov
xor
or
out
adc
sti
fnstcw
sub
adc
xorl
sub
inc
mov
insl
xlat
enter
dec
xor
fidivrs
xor
xor
aaa
push
mov
lock
outsl
aad
bound
push
mov
outsb
gs
addr16
iret
lods
xchg
inc
int3
les
cmp
addr16
inc
pop
xor
mov
es
sarb
mov
mov
dec
shlb
inc
pop
lret
hlt
rorb
insb
jae
or
cli
xchg
mov
xor
add
or
xchg
es
mov
xchg
mov
loope
fdivl
jge
lret
outsb
jp,pt
test
sub
adc
inc
repz
lahf
jmp
dec
sub
xor
cld
mov
orl
jle
mov
les
mov
or
jbe
stos
jecxz
xchg
jns
sbb
sub
negl
ja
stc
pusha
add
xor
testb
stc
mov
cmp
sub
inc
push
ret
and
cld
addl
jl
cmp
dec
or
dec
xchg
xchg
stos
loop
shlb
insb
lea
mov
ds
dec
pop
xchg
and
push
pop
in
mov
sub
frstor
imul
add
xchg
mov
cs
int
push
push
sbb
in
pop
mov
fstps
pop
mov
push
cmpsl
mov
xchg
lods
jae
sbb
push
and
cmpsb
nop
addb
rorb
xchg
cli
dec
cmp
loopne
lock
add
mov
pushf
sbb
nop
std
fwait
popa
or
jns
lea
xchg
sub
mov
pop
inc
pop
mov
inc
jl
sbb
mov
and
inc
dec
xor
js
lods
rcll
ja
in
xorb
or
ret
fucomip
outsb
test
cs
sub
ss
adc
mov
js
gs
data16
xor
loop
cmpsb
xchg
and
cs
daa
popa
dec
dec
xchg
push
dec
and
and
adc
cmp
xor
inc
andb
les
pop
mov
es
in
dec
mov
test
add
jne
fmull
aad
movsb
sub
test
gs
inc
stos
test
sub
and
inc
insb
sarb
adc
rcr
or
xchg
jae
xor
sbb
jge
in
stc
sbb
sbb
cltd
int3
fs
lds
xor
mov
sbb
test
gs
test
cmpsb
cmc
mov
fstpl
xchg
adc
ret
das
int
in
aaa
gs
adc
in
pop
jecxz
daa
and
data16
sahf
loop
or
ljmp
push
les
and
inc
cmpl
pop
loope
or
iret
iret
das
hlt
inc
jb
push
fst
push
and
shlb
xchg
out
or
sub
and
cwtl
scas
xchg
pop
testl
cmpsb
jl
enter
leave
cli
loope
cmpsb
pop
add
jns
jmp
shll
xchg
je
jg
mov
sub
jg
xchg
icebp
pop
mov
leave
pop
xor
das
divb
data16
sbb
addr16
int
and
cmp
sti
std
jno
mov
mov
stc
fwait
cmp
stos
mov
mov
rorl
mov
jge
pop
xchg
cwtl
mov
shrl
mov
or
arpl
jecxz
lcall
ds
pop
sub
fcom
mov
mov
pop
into
lcall
mov
jns
mov
mov
or
and
adc
add
xor
les
push
popf
pop
adc
into
hlt
lea
inc
xchg
mov
xchg
in
pop
and
fucomp
xchg
or
loop
push
imul
pushf
movsb
test
shlb
pop
ficoms
cwtl
sub
lds
pop
cmp
xchg
hlt
sbb
sbb
add
adc
ret
dec
push
cltd
fucom
xchg
shlb
repnz
and
mov
jg
arpl
cmpsb
cwtl
lods
pop
push
out
or
out
cmp
cmpsl
fwait
sbb
sub
pushf
rclb
dec
pushl
cwtl
int3
add
lahf
cmp
adc
sbb
adc
mov
jmp
mov
mov
xor
pusha
push
sarl
jmp
icebp
jb
lret
fldcw
push
or
in
lock
js
jmp
dec
scas
push
push
lret
mov
test
scas
cmpsb
mov
mov
push
out
push
test
adc
subb
and
cld
movups
sbb
lret
jne,pt
stos
and
xor
pop
xor
pop
fdivl
mov
inc
stos
and
pop
or
sub
repz
xor
lds
outsb
cmp
dec
inc
std
inc
dec
and
xchg
pushf
xchg
mov
aam
pop
mov
test
pop
pop
sahf
cmc
lods
pop
jle
xchg
lcall
lmsw
mov
aam
aas
mov
out
fsubrl
scas
sub
imul
popf
adc
mov
xor
test
push
or
jnp
mov
and
mov
fisttps
push
xchg
push
repnz
rcll
pop
push
call
or
cltd
popa
push
xor
fdivp
jbe
jmp
fldcw
or
mov
mov
sbb
ljmp
xor
fnsave
imul
mov
add
cltd
ja
dec
das
and
es
aas
sub
fwait
add
jb
cmp
jl
cmp
and
pusha
sbb
push
sbb
xchg
lcall
xor
ret
mov
aaa
inc
out
cmp
repnz
xchg
rcll
test
pop
sub
in
pop
pushl
hlt
xchg
adc
pop
pop
or
xchg
out
xor
test
push
or
aam
mov
movsl
dec
pop
xor
dec
xchg
cmpl
add
pusha
shrb
sbb
mov
xchg
mov
out
iret
pop
cmp
in
jns
dec
or
call
xor
movsb
cmp
inc
in
lods
pop
orb
stos
frstor
es
ja
call
jo
fsubp
stc
lds
xor
sbb
rcr
subl
int
mov
mov
subb
sbb
movsl
in
enter
mov
adc
cmp
mov
int3
mov
movsl
mov
adc
pusha
jne
mov
push
nopl
clc
out
sbb
leave
cmp
push
popa
push
stos
mov
add
mov
in
push
ja
repnz
push
mov
mov
xchg
cmp
add
jbe
mov
out
inc
inc
add
in
jo
mov
sub
sahf
cmc
add
push
rcll
loope
jne
loope,pt
push
pop
rclb
add
mov
lds
js
cmp
or
and
add
ljmp
in
popf
push
fisubl
roll
dec
in
cmc
add
mov
jno
std
xorl
call
subb
cli
mov
clc
jo
cmpsl
jl
mov
fwait
das
mov
inc
cmp
cmpsl
mov
mov
cmp
add
lret
inc
push
push
scas
cmp
outsb
inc
cltd
dec
in
sbb
jne
mov
ja
outsb
cmp
inc
test
cmp
test
or
sbb
rclb
mov
cld
dec
fwait
or
lods
push
scas
dec
push
lods
daa
mov
lods
xor
or
jnp
xchg
push
lcall
lea
sbb
jne
inc
cmp
jmp
mov
mov
pusha
dec
xchg
mov
inc
xor
mov
ljmp
jecxz
popa
lods
dec
xor
jmp
icebp
sub
sbb
std
leave
ljmp
outsb
lods
sub
xchg
inc
fadds
jno
adc
enter
or
or
pop
lods
loop
pop
lock
mov
out
add
testb
pop
icebp
repz
hlt
xchg
lret
in
dec
push
cmc
call
lret
adc
and
mov
aad
sbb
mov
jnp
jg
aam
pop
test
mov
inc
rorb
add
cs
out
xchg
addr16
or
jo
inc
decb
fildll
popf
shrl
sbb
xor
nop
jg
dec
je
repz
pusha
aas
sbb
push
fdivrp
mov
mov
and
push
scas
and
outsb
push
bound
cmpsb
jmp
jecxz
mov
mov
bnd
imul
ror
push
mov
and
les
insl
dec
movsl
cs
pop
cmc
push
xchg
dec
xor
out
push
scas
jae
push
cmp
bound
enter
adc
dec
repnz
and
xchg
fdivs
leave
pop
and
lods
pop
fsubrl
in
inc
push
addl
enter
imul
cbtw
je
loop
xor
outsl
pop
dec
inc
xchg
pushl
inc
pop
pop
jo
add
and
lock
xor
fadd
mov
or
das
dec
cltd
sbb
enter
and
mov
lods
insb
clc
popf
imul
inc
mov
hlt
js
pop
push
sub
xor
xchg
xchg
push
inc
pop
shrl
xor
sub
push
mov
addr16
icebp
mov
and
test
xor
dec
pop
jnp
sbbl
mov
mov
iret
shl
mov
loop
mov
test
inc
or
or
cmp
and
inc
xor
or
cltd
sbb
adc
cmp
dec
or
out
ljmp
mov
addr16
jge
push
fsub
sub
xor
jmp
in
sbb
push
hlt
mov
gs
test
imul
xchg
add
mov
test
jg
mov
sahf
mov
pop
lea
xor
ds
iret
scas
sarb
lods
test
jnp
xor
jp
cmp
clc
push
and
jmp
mov
mov
sub
shrl
mov
dec
ret
movsl
fnstcw
lock
xchg
sbb
cmp
sbb
mov
pusha
lds
cmp
ret
sbb
rcl
in
popf
xor
push
loope
movsb
je
pop
dec
test
jbe
and
pop
cld
dec
enter
push
inc
xlat
sub
insb
sub
dec
aad
xchg
or
xchg
addr16
aas
jge
subl
data16
cmp
mov
ljmp
adc
add
loopne
and
and
adc
shlb
add
jae
adc
out
jg
test
cwtl
xlat
mov
adc
andb
cmpb
mov
and
xchg
scas
adc
sbb
xchg
jmp
dec
je
jmp
xlat
or
daa
and
aad
or
aas
lret
fwait
pop
imul
out
loop
faddl
push
es
js
or
clc
mov
aam
push
or
leave
iret
mov
rcll
pop
inc
pop
jecxz
add
inc
fwait
cmp
jns
fwait
loop
repnz
mov
shlb
pop
xor
leave
lahf
js
mov
int
xchg
hlt
subb
add
nop
test
push
jecxz
das
xchg
scas
popf
mov
out
pop
lock
fs
xor
pushf
cwtl
cmpsl
push
call
leave
dec
push
pop
fldcw
imul
scas
xchg
jg
sbb
sub
xor
and
insl
fadds
xchg
adc
out
xchg
data16
and
mov
lahf
xor
mov
in
repnz
je
sub
inc
mov
jo
pop
fstp
mov
mov
cmpsl
add
mov
cs
lret
pop
and
aas
in
cmpsl
push
xor
repz
arpl
or
xchg
loop
or
or
mov
flds
push
fld1
icebp
clc
scas
adc
outsb
out
pop
insl
jecxz
cmp
and
xor
pop
aaa
add
outsl
jnp
mov
rcr
fcmovnb
push
rcll
sub
mov
xor
data16
or
or
push
mov
test
test
sub
jb
jmp
adc
jmp
iret
mov
push
xor
negb
das
mov
sub
or
into
pop
xchg
or
xchg
mov
cmpsl
bound
loopne
int3
sub
dec
sbb
mov
jns
mov
or
mov
ja
shrb
mov
fcomip
repnz
cld
or
sub
mov
test
loope
jp
loopne
pop
cmp
pusha
cld
add
xor
cli
cmc
pop
outsb
ss
aam
push
sub
test
fldl2t
add
ficomps
test
push
aad
lret
and
lods
jle
xchg
insb
push
xchg
stos
sbb
int3
dec
repnz
pop
shrl
bound
imul
sub
mov
popf
dec
jge
pop
icebp
xor
loope
pop
ja
lret
pushf
sti
mov
sbb
push
xor
insb
xor
cld
test
rolb
adc
roll
cwtl
rcll
mov
data16
lods
add
adc
jmp
aam
sbb
xchg
mov
adc
dec
push
jns
or
mov
adc
xchg
sarl
rdmsr
dec
in
pop
pop
rcll
lcall
mov
and
pop
pusha
pusha
fisubrl
in
pusha
cmp
cltd
inc
lods
enter
pusha
mov
fists
fistl
mov
cltd
mov
xor
mov
out
push
popf
cmpsl
xchg
ja
mov
andl
xchg
popa
mov
js
xchg
stc
fidivs
pop
pop
adc
in
fsubrs
lods
inc
in
repnz
cmp
fstpt
out
jmp
or
into
cmp
mov
shl
fdivrl
lret
push
pusha
cmpl
pop
push
mov
slwpcb
test
cs
pop
jmp
mov
scas
sbb
les
into
lock
xor
pop
pusha
adc
inc
cmp
adc
gs
mov
lret
mov
inc
fincstp
pushf
ds
add
push
pop
cmc
mov
fmuls
shll
cld
roll
in
repz
add
xchg
mov
pop
cmpsb
mov
or
push
fs
stos
jecxz
pop
pusha
inc
lods
iret
sub
loopne
dec
xor
dec
shll
xor
sub
mov
jge
pop
push
leave
mov
lds
scas
or
mov
arpl
cmp
addb
xchg
rolb
lods
mov
lea
cwtl
dec
or
cld
mov
lahf
jo
push
int
mov
adc
push
movsb
cs
aaa
mov
daa
sti
gs
add
cmpl
push
jbe
jbe
lds
loope
dec
imul
cmovge
cwtl
mov
outsb
inc
jge
xchg
ss
mov
aas
mov
lds
mov
pop
push
jmp
movsb
test
mov
sub
jns
jge
loope
jmp
cmpb
add
mov
cmp
shlb
loope
xchg
push
xchg
cmp
cmp
pop
mov
addb
push
lods
add
sbb
mov
mov
xor
adc
shl
jl
lods
dec
es
icebp
mov
pop
or
pop
cld
je
cmpsb
fisttpl
add
daa
xchg
sahf
adc
sahf
ljmp
pop
pop
add
mov
rclb
adc
daa
dec
sbb
orl
xchg
mov
add
cmp
pop
out
dec
mov
movsl
mov
stc
arpl
stos
sti
lcall
jb
cwtl
cmp
lret
in
pop
push
or
cmpsb
xchg
or
aas
lret
adc
push
call
add
hlt
sti
sub
shlb
dec
clc
pop
loop
and
sub
je
clc
jne
jmp
sub
cmp
clc
and
in
cmp
mov
nop
jecxz
std
icebp
cmp
enter
or
js
sahf
or
add
xchg
rcll
popa
push
test
sahf
cmpsb
xor
arpl
mov
mov
mov
jae
ljmp
ret
xorl
sbb
popf
xor
cmpsb
sbb
cli
icebp
inc
push
push
sbb
clc
lret
scas
inc
cmp
dec
cmpl
and
fidivrl
push
rcl
add
lods
fcmovnb
stos
fldenv
jp
sbb
bound
fldenv
rorl
loop
xchg
rorb
adc
dec
shr
dec
in
xchg
xchg
cmp
or
mov
fimull
pop
and
arpl
ret
jb
pop
push
push
cld
dec
dec
icebp
jle
pop
mov
xor
sub
aaa
pop
les
and
das
push
xchg
xor
pop
imul
stos
insb
cwtl
xor
jge
cmp
or
adc
sbb
xchg
cmpsl
or
movsl
fwait
sub
inc
ds
out
loopne
adc
push
je
sub
or
jo
dec
inc
lea
sbbb
iret
sbb
aas
mov
sub
ja
mov
pop
add
mov
aas
inc
mov
imul
pushw
adc
inc
add
pop
mov
inc
dec
jecxz
lea
in
test
pop
repz
push
jne
inc
or
les
sbb
push
iret
jg
call
cmp
mov
adcb
fsubs
sti
cltd
add
scas
mov
js
fadds
cmpsl
mov
xor
test
adc
loope
or
add
xor
sub
cmp
or
sbb
ljmp
or
pop
lcall
lcall
or
sbb
ljmp
or
pop
lcall
lcall
or
sbb
ljmp
push
stos
jp
push
pop
cwtl
dec
push
js
dec
sahf
pop
mov
cli
cmp
mov
lcall
sbb
jge
repnz
icebp
into
loop
shr
ret
out
icebp
mov
lods
mov
push
outsb
inc
jle
push
and
xchg
into
loop
mov
mov
mov
xor
jle
push
and
adc
dec
into
adc
inc
out
sbb
lods
mov
sahf
mov
inc
pop
cmp
daa
jle
dec
push
jno
pop
pop
ds
into
scas
adc
dec
mov
mov
or
leave
and
push
cwtl
push
pop
push
mov
pushf
or
paddd
mov
repnz
outsl
or
cmpsl
int3
cmpsl
sbb
xchg
jnp
jecxz
lcall
mov
and
addr16
sarl
mov
fisttpl
decb
mov
inc
jae
bound
xchg
mov
loope
roll
mov
cs
and
imul
mov
loope
push
xchg
pop
mov
ljmp
and
mov
dec
sti
dec
adc
mov
inc
cmp
fstpt
jg
sbb
adc
add
test
out
ret
mov
sahf
xchg
scas
and
mov
clc
pop
and
jb
jp
sub
and
add
mov
mov
sahf
out
sub
sub
sub
push
daa
cmp
dec
insl
jnp
addr16
into
xchg
mov
mov
addr16
mov
push
dec
insl
dec
jne
dec
inc
outsb
sahf
xchg
fwait
loope
mov
mov
push
outsb
inc
jle
push
and
adc
add
repnz
loop
shr
ret
mov
mov
push
outsb
inc
jle
push
and
adc
add
repnz
inc
xchg
adc
jge
dec
and
shlb
js
lods
xchg
add
imull
scas
std
sbb
pop
movsb
push
lds
mov
outsb
data16
xchg
jg
mov
mov
sub
inc
inc
hlt
popa
loopne
pop
cs
cmp
or
xor
repz
int
int
fisttpl
jp
jns
xchg
cmc
fistpl
jbe
push
sahf
pop
sub
mov
add
or
repz
mov
ja
pop
in
push
mov
es
pop
mov
xor
and
lds
cmpsb
add
int3
xor
es
or
out
xchg
leave
ds
insl
popa
test
xchg
inc
out
dec
lock
and
mov
clc
call
xor
mov
or
inc
xchg
xchg
fwait
xchg
cli
sub
mov
sub
jle
cmpsb
int
rorb
sbb
adc
mov
and
aaa
xchg
push
mov
push
mov
mov
ret
arpl
mov
sub
aaa
pushf
inc
cmp
in
pop
push
push
inc
pop
negb
out
cli
stos
imul
sbb
fildll
fcmovu
inc
je
scas
bound
inc
adc
push
in
pop
jbe
cmp
push
arpl
jnp
fcompl
out
inc
or
add
pop
mov
pop
push
stos
sbb
push
sbb
pop
stos
xchg
inc
inc
mov
lret
push
pop
movsb
sbb
sbb
cmp
xor
push
xchg
sub
sarl
jmp
xchg
ds
xchg
rcll
outsb
aad
ficomps
outsb
mov
scas
shrl
xchg
stos
push
inc
cmp
movsb
sbb
dec
les
scas
leave
adc
pop
pushf
dec
mov
pop
xor
sub
outsb
std
push
mov
pop
insl
mov
pop
cmp
mov
sbb
jle
lods
lea
mov
icebp
push
pop
and
mov
mov
outsb
rol
mov
mov
push
aas
fcmovb
mov
imulb
sbb
push
pop
scas
xchg
mov
scas
or
sub
popa
cmp
or
mov
sbb
sub
mov
adc
sbb
enter
jle
cwtl
xlat
popf
and
ret
xchg
ror
inc
mov
std
das
cmc
or
loope
bound
pop
mov
cmp
test
imul
jns
pop
and
out
lret
and
sahf
push
jecxz
test
aas
add
sbb
xchg
mov
adc
sub
rclb
mov
adc
xlat
jns
repz
adc
mov
ret
mov
sahf
loope
push
inc
iret
cmp
addr16
in
fxam
push
adc
and
testb
jecxz
dec
dec
xchg
xchg
shlb
jns,pt
xchg
pusha
fmull
hlt
aad
xor
inc
scas
outsl
sbb
jo
push
test
jbe
sti
inc
ljmp
jo
cmc
inc
push
pop
pop
jbe
push
pop
jo
imul
adc
pop
pusha
fstl
out
xor
das
les
mov
loopne
test
xchg
std
and
sub
jns
ljmp
jmp
enter
imulb
push
pop
xchg
pop
cmc
and
int3
push
xorl
bound
push
dec
cwtl
in
popl
sub
int
inc
into
push
push
jmp
cmp
jns
jg
repnz
leave
inc
sub
add
or
push
sbb
out
sti
dec
adc
pop
lock
inc
cmpsb
mov
mov
pusha
gs
jnp
leave
pop
adcb
ljmp
cmp
fmuls
je
clc
enter
or
jnp
ficoml
mov
addr16
jecxz
test
lahf
loope
shlb
cltd
lret
adc
stos
loop
push
jne
xor
mov
push
fisubs
fisubl
and
add
and
mov
out
mov
mov
adc
or
ljmp
or
pop
dec
divb
lcall
enter
jnp
mov
or
mov
mov
bound
xor
mov
jno
and
jno
cmp
arpl
std
adc
repnz
jg
inc
cmc
adc
mov
jne
leave
and
pop
xlat
sbb
outsb
jbe
sub
or
adc
cmp
sbb
cltd
jge
adc
ljmp
jne
popa
shlb
mov
sbb
ret
repz
in
xchg
sub
sub
insb
pusha
gs
fists
ror
imull
xchg
adc
or
out
jge
lds
gs
je
dec
mov
push
xchg
jo
jge
jbe
or
add
daa
push
push
mov
retw
sti
or
fdivl
jmp
jp
sbb
call
push
andl
sbb
pop
fsubs
jl
xchg
ja
sbb
hlt
mov
mov
xor
pop
sahf
mov
mov
push
iret
pop
or
outsb
cmpl
sahf
xchg
or
and
es
jno
and
jle
pushf
inc
stc
mov
mov
movsb
mov
or
sahf
pop
fisubl
stos
in
sbb
andl
call
ret
pop
lds
xorl
addr16
pop
je
jg
push
or
rorb
stos
std
cmpsl
dec
add
fwait
adc
addb
adc
mov
sti
mov
add
and
outsb
pop
lahf
xchg
divb
fcomps
popf
cmp
and
and
popf
movsl
cmp
add
ja
xor
push
sti
and
sub
dec
dec
mov
add
js
pop
sahf
addr16
leave
or
mov
add
nop
sub
adc
mov
imul
push
out
dec
pop
mov
pop
and
adc
ljmp
repnz
cmpl
pop
subl
cmpsl
add
shl
jne
arpl
or
push
outsl
mov
xor
lea
aaa
aad
jecxz
mov
sbb
mov
add
cmp
jns
addr16
push
jae
push
lcall
stos
out
out
jg
mov
push
xchg
and
jmp
jmp
fcoml
cmp
push
nop
cmpsl
daa
notl
mov
jae
jae
out
push
outsb
ret
sbb
jge
shr
cmp
or
lea
sub
nop
stos
xchg
xor
imulb
mov
jbe
sbb
xor
ret
cmp
xchg
push
sti
enter
xchg
mov
mov
mov
dec
in
out
inc
mov
dec
sbb
lret
cmpsb
push
movsl
test
out
sbb
leave
je
mov
push
mov
lret
rol
xchg
push
pop
adc
in
jl
negb
jl
mov
xchg
sub
movb
xchg
in
clc
sub
xor
js
mov
inc
lock
dec
fwait
xor
mov
fmull
jo
cltd
jl
pop
sbb
cltd
xchg
xchg
push
stos
lcall
or
or
sbb
test
jnp
dec
or
lods
adc
cmp
fwait
insb
xlat
mov
or
repnz
cmp
push
adc
jb
mov
fcoms
dec
js
cmp
in
adc
clc
mov
adc
ret
dec
add
vpmacsdqh
scas
xchg
mov
leave
inc
jo
add
negb
ret
in
cmp
out
inc
and
fadd
lods
sub
mov
mov
addr16
fidivrs
mov
adc
xchg
mov
xorb
sti
inc
jp
out
repnz
fiadds
cltd
adc
movsb
scas
mov
lods
sbb
mov
sbb
jno
aaa
addl
pop
jle
push
mov
sahf
outsl
sbb
outsl
arpl
je
dec
loope
in
aaa
pop
mov
daa
sub
pusha
jp
cmp
cli
dec
sbb
das
and
jg
jb
jo
adc
jle
incb
dec
xor
mov
pop
mov
adc
dec
sub
and
scas
faddl
dec
enter
aad
sub
ja
xchg
jnp
mov
fnstcw
jbe
rcll
push
fisttps
push
arpl
sarb
insb
push
dec
inc
das
sbb
jle
sti
andl
repz
pushf
negb
shr
cmp
lods
jb
fs
mov
sub
movsl
pushf
xlat
xchg
rcll
jae
loope
mov
ljmp
shlb
dec
add
mov
jbe
or
sub
fmull
scas
push
cltd
dec
sbb
adc
cltd
ljmp
and
cmp
aam
cmp
call
rcll
ljmp
lcall
push
and
pop
jmp
in
icebp
cmpsb
sbb
cmp
mov
aad
cmp
out
dec
pop
mov
repnz
test
mov
out
inc
cmp
outsl
rol
mov
push
cmpsl
stos
mov
pop
imul
pop
inc
and
aam
scas
mov
das
pop
loopne
add
sub
mov
jl
sbb
insb
fisubrs
aas
dec
pop
mov
in
scas
cmpsb
sbb
aas
mov
xchg
cmp
or
dec
cmpsl
loop
sbb
inc
and
jecxz
mov
mov
mov
setno
pop
push
scas
push
adc
mov
das
inc
mov
or
sti
jle
inc
mov
or
mov
insl
mov
xchg
add
je
xchg
xor
cmpb
sbb
push
dec
cmp
mov
jp
xor
xor
add
mov
and
dec
lcall
scas
or
pop
cmp
and
push
inc
jo
lods
stc
push
push
daa
out
mov
ret
push
xchg
inc
xchg
dec
push
sub
subb
shrb
bswap
outsl
push
sti
jmp
jns
stos
xor
sbb
xchg
jecxz
pop
adc
xchg
outsb
cmc
add
pop
pop
push
jbe
jbe
xchg
vpaddw
xor
push
push
sbb
jl
push
sbb
insl
pop
test
sub
mov
push
movsb
mov
stc
sub
mov
push
stos
sti
jg
jmp
sbb
mov
adc
mov
cmp
lret
xchg
fisubs
call
icebp
push
push
sub
inc
add
mov
jp
or
movsl
out
sbb
ljmp
nop
loopne
gs
mov
mov
call
mov
std
roll
std
lods
and
lret
mov
loopne
mov
jb
fildl
je
dec
sbb
dec
sar
in
rcrb
fadd
xor
xchg
movsb
arpl
sbb
test
je
adc
xchg
cld
loope
mov
jno
mov
mov
gs
out
pop
xchg
loop
test
or
lret
iret
aas
and
push
push
push
or
lods
mov
adc
or
cwtl
fwait
jns
mov
mov
sbb
push
addr16
and
aad
shll
rolb
jge
and
mov
or
sahf
js
sbb
sub
mov
xchg
pop
mov
adc
sbb
mov
ret
outsl
pushf
stos
cmp
test
push
lock
mov
jg
mov
lahf
test
mov
push
mov
in
mov
dec
and
aad
fbstp
or
jle
cli
test
push
decb
rdtsc
jno
repz
sbb
jo
loope
in
mov
shll
icebp
enter
push
clc
sub
and
movl
js
aas
or
sub
ret
sub
iret
out
mov
repnz
xrelease
lods
push
mov
jecxz
mov
xchg
jmp
xor
push
std
pop
in
mov
pop
mov
or
and
sbb
xchg
mov
and
dec
xor
pushf
jecxz
popa
inc
bound
push
add
rcrl
cmp
les
daa
jne
jo
test
pop
cli
insl
or
popf
mov
push
lea
cwtl
rorl
or
fcom
mov
sbb
stos
lret
jecxz
mov
rolb
notb
jae
jns
or
push
push
stos
imul
das
xchg
stos
nop
ds
hlt
mov
xor
adcl
int3
repz
cmp
pop
jl
cmp
movsl
pop
repz
filds
add
jmp
jmp
or
push
arpl
cltd
fwait
mov
jo
push
sbb
jmp
nop
and
inc
dec
imul
sub
ja
sbb
leave
aam
cltd
add
push
cmpsl
popf
lods
inc
mov
cltd
pushf
adc
push
repz
push
jg
inc
push
dec
or
test
inc
push
mov
jmp
mov
push
inc
xchg
lahf
lods
mov
aam
xor
lods
xor
xchg
adc
dec
xor
xor
insb
sar
xchg
and
daa
mov
fnop
mov
xchg
and
jmp
add
mov
movsb
mov
or
pushf
push
or
mov
fistl
inc
aam
les
sbb
mov
imulb
mov
mov
xchg
cmpsb
jg
aad
hlt
jle
jnp
js
int
leave
das
js
cmp
in
clc
jmp
aam
pop
mov
push
or
bound
sub
pcmpeqd
xchg
xchg
lods
aas
xor
mov
mov
jle
pop
out
test
jl
imul
imul
pop
dec
dec
pop
mov
mov
inc
clc
popa
test
aas
pop
and
cmp
inc
xor
adc
leave
popa
mov
out
xchg
sub
push
fadd
pop
loopne
shlb
or
sarl
cwtl
stos
inc
out
enter
adc
rorl
and
mov
jle
or
xchg
rcrb
mov
push
mov
push
sbb
inc
popa
push
pop
scas
dec
andb
sub
mov
dec
popa
in
sbb
add
leave
icebp
loopne
es
sub
push
popf
add
lock
outsl
and
and
lods
jbe
xor
out
and
rol
aad
push
dec
push
rorl
cmpsb
dec
pop
hlt
xlat
jno
popa
cld
jecxz
adc
or
ljmp
cmc
xchg
sbb
sub
and
push
pop
into
inc
and
or
jmp
arpl
push
mov
sar
mov
jne
jmp
bound
sub
out
jg
adc
mov
dec
inc
cmp
sub
sbb
mov
out
xor
mull
cltd
fnstenv
xchg
jb
sbb
mov
inc
xchg
int
mov
and
adc
inc
lret
inc
shrl
loopne
dec
add
xor
and
insb
xchg
dec
pop
inc
out
xchg
push
add
cmp
inc
mov
or
imul
repz
mov
mov
mov
and
das
ret
mov
sub
rcll
and
xor
icebp
test
push
jns
sbb
jl
inc
push
psraw
mov
sub
push
pop
shr
fwait
add
jns
ret
cmp
daa
cmp
scas
add
fdiv
testl
jecxz
ljmp
adc
jnp
xchg
loopne
jmp
inc
es
shll
xor
jmp
movsl
sub
xor
and
push
repz
rol
and
cltd
movsl
sarb
fimuls
mov
es
sub
cmpsl
or
xchg
xor
pop
out
mov
xchg
hlt
dec
sub
adc
lret
cmp
movsb
dec
xchg
mov
mov
or
or
xchg
sbb
fcomps
cmpsl
fimull
xchg
jg
adc
lahf
xor
pavgb
cmp
das
xchg
cmpsl
in
add
add
rorl
mov
insl
sbb
or
addb
aam
test
lret
xlat
mov
jp
faddl
es
or
orl
das
jmp
lcall
aad
dec
mov
jp
inc
lret
pushf
xlat
mov
enter
cltd
arpl
rcll
das
add
push
push
pop
idiv
cmp
pop
lcall
sub
cmp
cmp
jne
subb
xor
es
lea
cmp
xchg
xor
int3
popf
cmpsl
dec
es
pop
cmp
add
cmp
or
in
repz
inc
in
lock
fwait
shlb
mov
push
fisubl
push
xlat
add
in
es
inc
mov
sbb
repnz
mov
mov
mov
jg,pn
sub
jp
jae
cmp
pop
repnz
lods
inc
and
adc
cmp
nop
in
cltd
and
nop
mov
test
stc
xor
sbb
dec
lods
mov
fwait
push
nop
fdivrl
mov
or
push
or
and
sar
mov
rclb
mov
push
jne
push
in
fistpl
hlt
mov
insb
mov
dec
loopne
push
sbb
mov
imul
fidivs
enter
pop
out
lcall
repnz
lods
xor
roll
and
mov
leave
jno
mov
add
das
pop
mov
ds
add
xchg
ret
out
dec
sbb
ficoml
out
xchg
add
cwtl
int
out
dec
or
jmp
movsl
add
adc
add
jo
fldt
jecxz
outsl
outsb
out
adc
out
stos
dec
and
imul
popa
dec
stos
or
aad
dec
shll
aaa
subl
inc
cmp
es
mov
inc
in
cwtl
scas
mov
xor
push
jno
push
xchg
iret
xchg
enter
lcall
push
ret
out
fldt
out
shl
adc
sbb
cs
sti
ss
fsubrp
dec
clc
lds
out
push
mov
push
jne
pusha
lret
adc
cmp
push
ds
xchg
daa
lret
gs
sti
je,pn
icebp
sub
in
mov
xchg
sub
xlat
aad
sbb
out
scas
sub
ds
daa
sbb
out
icebp
test
cltd
scas
dec
das
dec
cmp
fisttpl
push
movsb
and
mov
sbbb
mov
push
imul
loope
and
jb
lahf
lret
insl
cmp
dec
lods
popa
pop
setl
cmp
stos
lahf
sub
inc
jecxz
dec
cmp
call
jnp
out
jae
mov
cmpsb
nop
mov
mov
mov
cmc
js
xor
scas
andl
xchg
xrelease
mov
insl
outsl
pusha
push
xchg
andl
divl
movq
adc
push
sbb
add
mov
shlb
xchg
adc
lcall
sub
leave
sub
aam
jb
insb
test
xor
add
xor
push
stos
scas
jne
mov
pop
sbb
scas
js
inc
mov
push
aas
inc
addb
clc
repz
mov
jae
cmp
pop
mov
lea
orb
dec
pop
arpl
inc
movsb
or
out
cmc
xor
dec
and
loopne
xchg
int
addr16
loop
mov
mov
clc
jno
mov
mov
nop
aas
jno
inc
and
xchg
inc
mov
shl
insl
jg
iret
xlat
outsb
xor
mov
fs
xchg
pop
push
les
dec
push
je
js
or
dec
xor
test
jl
syscall
bound
data16
xor
into
stc
dec
loop
testl
cmp
test
push
adc
jns
cmp
xchg
pop
into
sti
scas
es
pop
push
das
lods
movsb
dec
fldcw
and
bound
rcr
out
xor
repz
mov
xchg
xchg
lret
fdivl
std
out
lcall
mov
push
fsub
icebp
dec
or
xchg
sbb
pop
jl
xchg
push
pop
loope
cmp
shl
loop
dec
sub
in
jle
test
pop
push
xorb
pusha
aas
dec
mov
lods
mov
cltd
mov
out
out
dec
adc
dec
sbb
inc
jle
addr16
mov
inc
sub
pop
pusha
push
push
pushl
mov
leave
out
fisttpl
sub
imull
cmp
test
lods
sub
gs
jo
rcl
dec
test
mov
icebp
jo
outsl
addb
mov
ret
test
bound
or
test
add
sbb
inc
loope
mov
push
mov
pop
fs
inc
mov
jbe
jnp
rcll
or
xchg
fisubs
mov
aam
ficoms
mov
mov
push
outsb
inc
jle
push
and
adc
add
repnz
loop
shr
ret
mov
mov
push
outsb
inc
jle
push
and
adc
add
repnz
rcrb
outsb
ret
mov
mov
mov
push
xor
adc
ljmp
out
loop
mov
mov
xchg
scas
add
clc
outsb
inc
or
stos
loope
sar
rorl
insb
xor
and
jne
sub
ss
xchg
fisttpll
mov
pushf
les
pop
add
xor
and
push
sbb
sub
cmp
int3
xchg
faddl
mov
adc
hlt
mov
add
sub
cmp
sub
cmp
int3
ja
mov
mov
shl
adc
insl
insb
inc
adc
daa
ljmp
gs
repnz
std
or
inc
xor
mov
xor
insb
adc
xchg
sti
hlt
xor
imul
xchg
imul
mov
cmp
fadd
loope
leave
or
push
xor
adc
je
test
les
adc
jae
fdivrl
das
jle
mov
lret
add
je
mov
and
mov
mov
mov
in
xor
out
into
outsb
out
movsl
mov
xchg
sub
adc
adc
adcb
insb
and
ds
sbb
sub
cmp
int3
mov
pushf
in
lods
cld
mov
lods
hlt
mov
add
xor
outsb
sub
ds
std
mov
lret
lea
cli
mov
insb
cmp
inc
adc
or
pop
jbe
adc
test
sar
lea
leave
subl
push
adc
cmp
sub
cmp
int3
xchg
faddl
aam
les
pop
add
xor
and
push
sbb
sub
cmp
int3
xchg
faddl
aam
les
jns
icebp
adc
push
and
enter
add
out
out
lds
jl
mov
sub
js
push
loop
icebp
test
push
mov
movsl
cs
mov
test
pop
aas
sub
push
cmp
clc
movsl
out
cmpsb
and
mov
sub
int3
push
xor
mov
in
or
mov
clc
pop
jl
sub
je
cmpsl
shlb
jns
fwait
add
push
xchg
inc
fdivrp
out
std
fisubrl
xchg
or
push
popf
jo
pusha
jp
dec
inc
jbe
xchg
dec
pop
data16
or
fistpl
cmpsb
fs
pusha
iret
pop
inc
lahf
mov
mov
adc
pop
gs
jmp
mov
shr
fwait
pop
inc
dec
loop
jbe
adc
sahf
jbe
loop
mov
sarb
test
sets
stos
test
mov
std
insl
mov
fsubrs
sbb
inc
loop
mov
pop
xchg
add
pop
js
adc
inc
hlt
pop
xchg
mov
pop
add
test
je
scas
test
imul
fdivrs
and
es
gs
ror
pop
loopne
fs
gs
inc
das
addl
daa
dec
daa
add
adc
aad
sbb
push
ret
lea
mov
jmp
jg
push
outsl
stc
das
call
add
mov
pop
sti
loop
jmp
enter
add
push
and
pop
sub
cmp
mov
sub
cwtl
jl
scas
inc
pusha
ficomps
push
ljmp
inc
loopne
and
push
scas
push
das
jmp
daa
mov
insb
or
clc
jb
xor
fldt
into
dec
fistpll
cmp
les
add
push
bnd
sbbb
scas
dec
xor
sarb
hlt
aaa
pcmpeqw
movzbl
pushf
dec
fildll
test
mov
push
scas
push
in
mov
test
cmpsl
xchg
mov
pop
xchg
icebp
xchg
pop
popa
out
stc
idiv
sub
stc
andl
iret
rcrl
ljmp
sub
sub
add
or
lock
push
jle
and
aas
stc
xchg
inc
ret
fldenv
dec
in
and
lods
test
shll
dec
mov
pusha
fs
inc
fidivrl
out
jp
mov
call
mov
repz
ret
gs
xchg
dec
in
pop
xor
ds
repz
mov
mov
loopne
stc
sbb
into
push
sub
inc
pusha
cmp
shr
mov
adc
sub
sbb
xchg
fldl
mov
cmp
shlb
push
not
or
mov
lock
dec
aas
shlb
call
and
shlb
cmc
cmp
jecxz
sbb
cmpb
mov
mov
pop
daa
jge
popa
es
arpl
xor
lcall
pusha
pop
mov
aaa
cmp
ja
ljmp
into
ret
sub
xor
pusha
sti
into
mov
cs
sub
pop
xor
mov
xchg
es
dec
or
fisubrl
mov
in
cmp
push
xor
scas
idivl
jmp
or
lock
popf
cs
jl
movsl
xor
mov
enter
xchg
dec
insl
pop
ficomps
pusha
sbb
out
sbb
rcrl
add
pop
ret
sahf
bound
nop
mov
cwtl
sti
push
lock
add
bound
neg
repnz
movsb
arpl
shl
sub
jmp
xor
xor
push
push
in
imul
ss
shll
gs
rol
push
or
sub
dec
mov
ret
adc
arpl
sti
roll
xchg
mov
mov
pop
push
push
mov
jne
mov
cmp
inc
mov
stos
shlb
pop
das
push
aas
sbb
sbb
and
scas
fs
mov
das
jecxz
mov
jns
outsl
in
mov
gs
jp
add
ss
dec
sbbb
mov
cmp
adc
xor
xor
mov
int
mov
int3
or
ficomps
xor
in
arpl
xlat
xor
jge
inc
jbe
frstor
push
es
mov
stc
ret
mov
jne
inc
pop
xchg
inc
inc
lret
xor
rcr
pop
push
aam
int3
jnp
sub
fmul
inc
or
addr16
dec
fadd
test
movsb
xchg
xchg
cmpsl
dec
test
sbb
fdivs
shlb
dec
and
xchg
xchg
das
mov
xchg
pop
daa
jmp
xchg
cwtl
mov
sub
sti
mov
cs
inc
out
adc
rcl
mov
fwait
add
cmp
adc
nop
je
or
or
or
loop
push
lret
push
pop
mov
inc
mov
push
loopne
pushf
faddl
repnz
sub
push
or
int
addr16
sbb
jbe
test
outsb
pop
out
das
xchg
push
push
cmc
bound
mov
mov
subb
test
call
dec
iret
cmp
jmp
sarb
mov
imul
stos
cmp
fbld
cltd
call
and
add
inc
movsl
notl
stos
xlat
gs
popf
in
imul
rclb
sbb
jg
mov
out
lahf
xchg
xchg
or
shl
adc
nop
pop
out
sub
jecxz
push
aad
jae
mov
ds
fistpll
xchg
inc
test
in
mov
pop
mov
push
std
dec
js
ss
fsubs
cmp
mov
add
xor
or
mov
sub
sbb
mov
ja
push
out
loop,pn
stc
mov
inc
cli
fmuls
pusha
mov
add
lret
bound
add
jne
fsubr
scas
mov
jge
movsl
cmp
adc
aam
push
scas
mov
xor
inc
xor
test
push
dec
dec
scas
cmp
sbb
push
dec
jo
dec
sbb
xchg
push
fwait
out
test
dec
dec
testb
loope
jg
jbe
mov
pop
sbb
jae
js
push
in
pop
data16
sbb
mov
mov
push
mov
lds
rcrl
cmp
mov
scas
dec
jmp
pop
imul
mov
pop
loope
sub
push
shlb
stos
sbb
pop
fwait
xchg
push
lods
push
pop
imul
ljmp
sub
mov
cmp
xor
hlt
out
ss
jno
xchg
jno
inc
add
mov
fdivr
arpl
xchg
or
test
xchg
mov
maxps
int3
jg
sub
pop
js
or
imul
sbb
lock
xor
pop
cli
sbb
inc
add
jb
xor
sbb
sbb
dec
xor
and
or
and
jp
lcall
push
out
hlt
xorb
scas
das
dec
xchg
mov
adc
lods
pop
mov
sub
adc
xchg
and
testb
addl
cs
ljmp
jl
rorl
pop
dec
sbb
pop
lods
fdiv
ja
xor
fptan
pusha
in
xchg
sub
pop
call
nop
sub
inc
fiadds
mov
jb
int3
dec
dec
lock
or
dec
aas
dec
std
jge
push
cmp
outsl
jg
into
adc
rcl
xorl
lea
dec
fisttpl
hlt
shll
flds
imull
neg
in
push
add
cmc
or
into
or
sbb
cld
repz
cmp
xchg
dec
inc
incb
and
push
jo
addr16
test
pop
fisubrs
dec
push
push
dec
cmpsl
sbb
shrb
fistpll
lods
push
dec
push
loop
insb
dec
or
dec
mov
mov
pushf
cmp
jns
std
popf
imul
cmpsb
cmp
test
or
iret
dec
cmp
add
push
cwtl
inc
loope
sarb
lods
mov
rcll
pop
xor
outsl
and
dec
adc
xchg
icebp
mov
push
repnz
cmp
xlat
add
lds
push
jmp
push
mov
lret
xchg
pop
mov
pop
inc
lds
fwait
mov
in
dec
fcoms
sub
out
mov
iret
imul
push
push
div
or
inc
push
push
sub
ror
ret
or
pop
push
xlat
xchg
sbb
and
mov
lcall
outsl
ja
test
orb
mov
shrb
push
out
cwtl
mov
fsts
mov
dec
push
jp
and
dec
sar
inc
adc
nop
aam
pop
insl
divl
adc
xorb
shrl
imul
or
sub
pop
or
push
fcomps
and
sbb
jge
and
inc
mov
lret
sbb
cmp
enter
and
cmp
cs
repnz
xchg
ja
and
jo
mov
leave
aam
lock
pop
lret
push
xor
inc
push
mov
cmp
mov
cs
dec
and
pop
nop
mov
sarl
ret
fcomps
cltd
imull
es
out
and
mov
lock
sub
jne
divl
sub
cmc
pop
mov
jecxz
lds
sarl
ret
test
mov
jbe
mov
das
cmp
daa
mov
gs
and
push
or
adc
push
cmp
ret
mov
push
mov
scas
push
test
out
inc
push
std
lods
lock
sub
mov
ja
sbb
push
push
aaa
dec
jnp
icebp
fwait
sti
mov
cld
pop
in
shlb
lret
mov
test
subl
or
adc
mov
std
push
enter
jmp
mov
stc
int
imull
imul
sbb
cld
push
xchg
andl
push
stos
mov
clc
flds
mov
orl
jp
pop
out
mov
cmpsb
xchg
inc
dec
pop
add
dec
mov
jge
or
sub
inc
mul
mov
mov
jae
jnp
cmc
inc
mov
mov
jnp
insl
xlat
orl
and
jmp
stos
js
cmpsb
adc
xchg
aam
iret
je
pop
sub
cmp
push
rclb
test
pushf
dec
xor
cmp
nop
adc
nop
setne
sahf
cmp
xchg
das
fisubrl
imul
cmpsb
add
pusha
and
movsb
push
lcall
pop
fstl
out
pop
arpl
inc
jbe
jp
mov
sbb
add
jne
jge
aaa
jge
int3
jl
pop
into
jle
sbb
jecxz
loopne
std
adc
testb
mov
out
push
out
sbb
cmp
push
add
cmpsl
movsb
lods
mov
insb
push
mov
adc
lcall
in
cmp
cmpxchg
cwtl
push
push
push
xor
and
inc
lock
fs
push
xor
je
out
push
and
sub
stos
xchg
dec
ret
pop
push
push
jae
and
sub
sub
mov
insb
iret
jp
jbe
movsl
lods
xchg
sahf
sarl
and
jecxz
test
or
imul
lds
xchg
sub
sarb
ja
loopne
adc
push
jne
or
mov
out
ret
adc
mov
pxor
ljmp
inc
mov
mov
pop
out
stos
outsb
pop
dec
push
fidivrs
or
cmp
xchg
je
aad
adc
call
ljmp
lahf
orb
xlat
loop
or
mov
ljmp
in
out
ficoms
movsl
fmulp
push
lret
test
addl
or
lret
add
xor
sbb
inc
loopne
mov
idivb
subb
pop
std
inc
and
xor
cs
lods
leave
or
mov
mov
scas
xlat
cltd
nop
movsb
aaa
mov
popf
ds
shll
sbb
insl
sbb
js
popa
sub
lret
sub
testb
inc
insb
das
fistpll
addr16
movsb
and
in
dec
mov
push
cld
dec
out
aaa
sbbl
sbb
adc
lret
fisttps
stos
mov
add
mov
jp
dec
xchg
sub
mov
sbb
insl
mov
femms
inc
mov
loope
aam
cmp
pop
mov
mov
out
cmp
xchg
int
xorl
hlt
pop
add
mov
mov
pop
mov
scas
fidivrl
mov
sub
jne
test
aas
mov
call
push
outsl
mov
mov
xchg
outsb
in
dec
fiaddl
sahf
xchg
mov
notl
cmp
adc
xchg
and
inc
aam
pop
fildll
stos
das
addr16
dec
cmp
dec
das
sbb
xor
clc
inc
add
inc
loope
les
ret
cmc
mov
scas
fildl
sub
pushf
stc
jo
xchg
movsb
call
xlat
jmp
mov
dec
adc
xorl
bound
pop
shl
mov
insl
fidivrs
imul
xchg
push
lcall
loope
data16
stos
mov
inc
xlat
lret
xlat
mov
nop
hlt
inc
xchg
mov
push
in
xchg
call
push
and
int
cli
cmp
lret
lret
pusha
pusha
call
inc
rcrb
adc
int3
mov
out
std
shlb
insb
ret
mov
ss
data16
cli
popf
jne
pop
into
clc
icebp
mov
in
mov
shl
into
aad
inc
movsl
pop
sub
test
lea
jmp
mov
ljmp
adc
jle
cmp
stos
xchg
mov
aaa
jmp
dec
xchg
nop
cs
xchg
leave
mov
mov
jnp
mov
xchg
add
loope
aaa
xchg
inc
xchg
aaa
lahf
lahf
in
cld
data16
popa
mov
div
cmp
sbb
mov
data16
std
mov
mov
inc
dec
add
push
jl
insb
movsb
sub
out
push
mov
add
je
cmp
imul
sbb
xchg
xchg
xor
jb
js
icebp
cmpsl
mov
adc
rcr
fdivl
xchg
sub
mov
xchg
jno
scas
call
mov
sub
adc
mov
sbb
int
icebp
inc
movsb
pop
jbe
enter
rorb
jl
mov
and
addr16
fcomp
aas
decb
add
cli
xchg
push
sahf
mov
cltd
call
add
aaa
mov
add
cmp
and
or
cmp
outsl
xor
popf
or
pop
mov
in
out
mov
aad
pop
xor
jle
popl
out
jb
xchg
mov
jno
mov
pop
inc
cld
repnz
mov
std
xor
and
in
fildl
iret
das
adc
sub
mov
lods
mov
push
clc
sub
xchg
shrb
call
in
aas
leave
fistpl
sub
pop
inc
or
in
gs
cmp
add
test
and
enter
in
mov
test
sti
repnz
push
xor
pop
xor
inc
sar
jl
add
inc
sub
adc
sub
and
rclb
stc
cmp
xor
jecxz
icebp
jae
push
xor
xor
fldt
imul
ficoml
shrb
mov
aam
ret
loope
xor
out
cmc
std
or
std
xlat
jbe
push
lods
or
mov
inc
push
dec
je
addb
fwait
push
push
xchg
out
test
cli
jne
lcall
ja
outsl
ljmp
mov
xlat
xor
mov
push
sub
push
adc
cmpsb
jmp
ljmp
enter
or
repz
inc
mov
and
adc
fsubrl
xorl
jge
dec
test
daa
cli
xchg
movsl
bound
test
fsubrp
dec
fwait
hlt
cld
mov
push
xlat
adc
sar
dec
test
scas
out
ljmp
dec
pop
outsl
jg
xchg
xchg
orl
lea
scas
or
xor
mov
push
test
outsl
ret
push
pop
add
pop
test
mov
mov
fadd
clc
bound
ficompl
ret
cmpl
pushf
jno
dec
jp
addb
sub
orb
push
mov
int3
dec
xchg
jo
testl
adc
pop
cmp
dec
push
inc
mov
sub
xchg
rol
cltd
out
out
nopl
nop
mov
fisttpll
inc
pop
cwtl
fstpt
push
jbe
loopne
insb
loop
xchg
gs
lock
fnsetpm(287
adc
pop
pop
ficompl
dec
and
mov
std
fdivp
gs
ret
sbb
cltd
jle
push
pop
cld
movsb
cltd
testb
mov
les
pop
loop
mov
sub
repnz
push
and
mov
mov
pushf
or
mov
sbb
scas
iret
mov
faddl
in
pop
sti
xchg
sbb
adc
sub
and
movsl
jb
or
and
sbb
xor
shrb
out
sbb
sbb
test
push
mov
xchg
push
inc
bound
fadds
mov
pop
mov
outsl
pop
jb
inc
jle
in
inc
int
mov
pusha
pop
in
int3
add
pushf
int
mov
cmp
and
jmp
fs
push
js
jnp
fidivl
push
add
addr16
dec
loop
lret
inc
outsb
lahf
jle
ss
imul
stos
sub
cmp
enter
or
xchg
push
xor
ljmp
mov
add
into
in
jae
or
mov
mov
add
sti
adc
inc
fiaddl
cs
imul
sbb
mov
rclb
call
push
ret
xchg
mull
lret
jl
cltd
jns
icebp
mov
and
add
jae
das
mov
push
sbb
mov
popf
test
enter
aas
cld
xchg
mov
ret
divb
push
loopne
cmp
fs
cmp
dec
pop
sub
xor
adc
movsl
lea
mov
adc
outsl
addr16
ret
pop
sahf
xchg
sub
or
dec
pusha
sub
mov
adc
and
flds
sub
xor
mov
jp
pusha
lods
insb
mov
in
and
xor
mov
and
mov
or
icebp
mov
mov
push
push
in
repnz
in
pop
lds
jmp
sarl
pop
int3
mov
cmp
jne
and
popf
pop
xchg
test
ljmp
pop
inc
dec
mov
mov
push
fbstp
test
xlat
ja
sti
dec
mov
scas
in
lcall
loope
shr
test
or
push
push
inc
pop
ret
push
mov
repnz
lea
arpl
push
jle
mov
jmp
or
iret
hlt
nop
scas
xlat
dec
xchg
push
repz
sti
ds
pushf
ret
push
push
inc
scas
pop
push
das
enter
pop
pop
or
call
outsl
xor
lods
cld
jmp
cli
mov
jmp
xor
pop
add
cs
pop
shll
mov
mov
adc
push
divb
arpl
cmp
dec
loopne
mov
mov
test
hlt
pop
jae
insl
pop
insl
jg
les
mov
dec
popf
push
and
sti
jg
xchg
js
xlat
les
data16
fdivrp
xor
cmpl
fcomps
inc
std
int3
cwtl
ss
test
jecxz
cld
pushf
push
push
das
mov
add
push
ficomps
int
outsb
or
pop
addr16
in
pop
in
or
xor
push
and
cmovb
lahf
dec
and
xchg
mov
adc
out
xchg
cli
dec
mov
push
das
test
jo
movsl
sub
add
mov
jnp
push
adc
inc
jno
in
pop
jnp
pop
adc
ds
jl
sub
bndldx
mov
mov
sti
push
outsb
and
dec
sahf
adc
inc
fnstsw
pop
and
lods
mov
aam
mov
sti
decb
sbb
je
xchg
insb
in
xor
sub
mov
pusha
es
fsubs
bound
repz
daa
filds
xchg
inc
inc
adc
and
push
mov
or
jno
jnp
gs
ljmp
sbb
daa
add
xor
push
xlat
mov
das
movsb
inc
jo
or
xor
adc
lcall
and
sub
xor
fmulp
enter
ss
mov
adc
jl
or
sbb
sub
cmp
int3
xchg
faddl
aam
les
pop
add
xor
and
push
sbb
sub
cmp
int3
xchg
faddl
aam
les
faddl
xor
and
push
sbb
sub
mov
test
mov
movsl
mov
pushf
les
pop
add
xor
and
push
sbb
sub
cmp
int3
xchg
fsubrl
inc
mov
sar
pop
in
cmp
or
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
sbb
les
imul
fbld
cld
inc
in
push
pushf
and
ss
in
hlt
jl
insb
aam
movsb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
dec
lea
inc
lods
adc
jbe
hlt
jl
insb
sbb
or
cmp
sub
fdivrl
mov
pushf
jae
pop
pushl
adc
in
lcall
pop
aas
xlat
cwtl
cmpsl
dec
adc
out
testb
mov
mov
mov
sbbl
dec
rol
pusha
inc
inc
and
sub
inc
lret
and
std
cltd
mov
fisubs
mov
and
jmp
imul
aas
les
mov
movsb
repz
sub
sub
inc
and
jno
test
and
daa
inc
psllw
sbb
xchg
xchg
push
jecxz
sub
rorb
jno
addr16
int3
ja
xor
pusha
and
dec
inc
aad
out
aaa
jecxz
aaa
cwtl
les
fwait
mov
mov
jnp
scas
nop
lahf
in
add
inc
insb
ficomps
or
cmp
sub
fsub
int3
mov
push
in
sbb
or
cmp
sub
jns
arpl
push
in
test
lods
and
cmp
flds
jne
mov
sub
xchg
imul
andl
jmp
jg
mov
mov
xchg
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
hlt
jl
insb
aam
movsb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
and
addr16
int3
cmp
mov
outsl
movsb
pop
sbb
and
and
nop
sbb
or
xchg
and
inc
mov
stc
jle
jmp
mov
std
push
mov
jns
or
out
inc
outsb
ret
pusha
aad
test
fs
dec
cmpb
shlb
pushf
idiv
lds
and
mov
inc
cmp
fwait
push
mov
add
lock
push
xchg
shr
mov
dec
pop
mov
mov
inc
test
push
dec
sbb
in
in
in
or
push
out
cmp
mov
cmp
popf
or
inc
mov
mov
lods
mov
jle
fcompp
insl
mov
mov
ret
push
shl
repnz
xchg
jmp
sub
xchg
sahf
rolb
bound
pop
loopne
mov
cmp
mov
lods
mov
push
rcrb
jae
lds
or
cmpsb
stos
js
dec
fs
in
push
daa
mov
nop
sub
sbb
sbb
mov
jno
xlat
lcall
loopne
xor
into
je
push
add
insl
popf
push
xchg
xchg
loope
rcrl
lcall
fldt
js
inc
scas
lret
inc
call
shlb
cli
lods
mov
lods
lods
dec
jl
outsb
or
ret
out
in
cli
sbb
insl
movsb
adc
add
pusha
pop
int
xchg
xchg
sub
xchg
mov
sub
inc
lret
cmpsb
add
add
cmp
les
pop
mov
ret
xchg
rcl
pop
dec
add
mov
push
pop
mov
imul
daa
loop
xchg
pop
pop
sub
mov
inc
cmpsb
repz
ds
leave
ret
mov
add
scas
hlt
mov
xchg
test
es
notb
ret
punpckhbw
push
or
and
outsb
js
lcall
bound
iret
adc
mov
mov
pop
into
lods
pop
leave
push
adc
and
and
movsl
das
inc
mov
hlt
jmp
dec
mov
xor
ret
pop
xchg
les
and
jge
adc
cs
aam
sbb
ja
cmp
nop
popf
jle
pop
paddusw
subb
pop
jns
outsl
and
imul
mov
outsl
scas
cmp
xchg
test
das
inc
xchg
stos
jo
jle
pushw
mov
push
ja
add
je
mov
cs
mov
aaa
idiv
pushf
sbb
int3
xor
xlat
add
adc
cltd
cltd
imulb
stc
jge
addr16
mov
mov
jmp
mov
mov
push
add
jae
leave
int
push
inc
xor
mov
rorb
jle
movsb
sbb
test
aad
cmp
and
cmp
pop
and
dec
cwtl
push
cmp
jle
test
stc
jnp
popa
movsb
cmc
inc
sti
pop
pop
lock
scas
sub
adc
add
cltd
repnz
lock
pop
push
add
test
pop
imulb
xor
outsb
fisubs
js
xchg
jmp
push
ret
inc
arpl
jno
pop
lea
daa
inc
push
ss
sbb
sub
punpcklbw
pop
push
outsl
stos
dec
lods
mov
push
fdivs
aas
xor
jl
pop
inc
push
popf
add
push
pop
push
fisubrl
std
cmp
lods
test
xor
push
dec
call
push
pop
push
ret
or
aad
icebp
bound
lods
xchg
xchg
cmpsl
add
jne
pop
insb
sub
xor
lcall
and
icebp
mov
jnp
leave
pop
dec
xor
add
sub
xchg
sbb
sahf
pusha
leave
shlb
pop
movsl
xor
arpl
inc
cltd
mov
pop
pushf
push
loop
cmp
sbb
xchg
aad
xor
push
jne
testb
add
lods
jecxz
sbb
lods
mov
test
xchg
or
sub
adc
push
mov
pop
movsl
fdivrs
mov
pop
das
fmull
jg
dec
cltd
out
insl
pop
mov
shrl
jle
repz
push
setnp
pop
jge
jno
pop
lret
inc
movzwl
int
xor
jg
mov
mov
xor
inc
mov
cmc
aaa
push
hlt
scas
or
pop
loope
cmp
stc
xchg
ljmp
sub
je
mov
and
repz
jl
pop
push
sbb
outsb
mov
out
pop
jae
mov
adc
xor
lea
push
push
iret
or
push
lcall
ljmp
jg
test
notb
in
pusha
js
jmp
jg
movsb
adc
inc
movsl
nop
test
shlb
push
fistpll
gs
daa
jecxz
add
inc
andl
push
mov
ds
addr16
mov
lods
and
mov
bound
in
fmull
or
xor
and
jne
rdmsr
push
in
mov
das
fwait
enter
jmp
sub
mov
out
xchg
out
sahf
jecxz
xchg
icebp
cwtl
sub
incb
inc
xor
dec
shrb
adc
lret
lods
sbb
fucomp
cmp
cmp
jnp
pop
lock
add
pop
jb
push
ja
ret
pop
insl
insl
leave
xor
ss
mov
es
adc
pop
bswap
cmpsl
dec
inc
mov
outsl
int3
cmpsl
mov
or
xor
repnz
fcmovnb
clc
lret
push
lods
pop
nop
jmpw
int3
jbe
jle
fnstcw
or
or
das
iret
daa
int
sub
pushf
cs
mov
cmpl
mov
add
fdivp
jb
loope
xor
movsb
lcall
mov
jmp
test
cwtl
aam
pop
cmpsb
sbb
push
push
out
push
and
test
repz
pop
jns
jmp
in
out
lahf
into
rep
imul
outsb
and
or
mov
movsl
mov
ret
flds
call
or
icebp
lret
xchg
add
movsbl
pop
inc
ja
mov
push
incb
fidivl
pop
or
jecxz
mov
movsl
pop
int
push
cmp
leave
sbb
imul
cmp
jmp
push
out
xor
push
push
dec
add
push
aad
jmp
mov
dec
mov
sbb
mov
sbb
in
mov
popa
push
adc
loope
add
mov
dec
push
repz
repnz
adc
addr16
pop
sub
insb
sbb
and
fiaddl
icebp
notb
stc
adc
and
adc
mov
mov
push
leave
and
jecxz
fcomi
std
xor
mov
loop
xor
loope
jnp
aam
iret
mov
or
xchg
push
inc
in
push
popf
push
add
mov
divl
ja
sbb
cmpsb
or
inc
push
add
xor
sub
dec
ja
test
in
mov
mov
test
and
cmp
out
adc
xchg
or
push
stos
jp
adc
cmp
test
loope
xor
jbe
xchg
pushf
adc
or
cmp
fsubl
cmp
adc
or
xchg
pop
xor
rclb
pop
sub
cmp
cmp
mov
cmpsb
dec
lods
fldenv
sbb
cmp
inc
adc
xor
notl
imul
fistps
xchg
test
or
ss
or
sub
jge
push
mov
ja
pop
dec
xchg
out
mov
push
idivl
outsb
cmc
js
ffreep
pop
stc
movsb
stc
arpl
and
js
jl
mov
cld
je
xchg
xchg
stc
shlb
sbb
inc
sub
xor
jae
jbe
jecxz
in
inc
mov
sub
add
frstor
inc
xor
cli
and
mov
xor
stc
faddl
jle
fs
inc
mov
push
xor
jbe
ss
sub
jae
ja
adc
add
aad
push
sbb
stos
push
addb
aad
aas
xorl
mov
xor
mov
mov
and
int
test
test
mov
jecxz
push
inc
loopne
loop
roll
mov
sub
and
or
or
sbb
pop
lahf
mov
and
xchg
or
push
mov
test
test
and
das
sub
enter
fildll
mov
addr16
repnz
dec
fisttpll
scas
mov
imul
inc
fimuls
addr16
xchg
cmp
out
push
mov
mov
push
outsb
mov
adc
and
add
pop
out
rcll
mov
nop
and
push
out
jg
dec
enter
jmp
stos
movsl
xor
in
mov
insl
addb
mov
sub
scas
insl
mov
loop
scas
lahf
aaa
mov
popa
hlt
xchg
andb
or
lods
xlat
cmp
sbb
pop
cmp
inc
sbb
ss
gs
rorb
or
pop
adc
mov
pusha
ss
in
jae
dec
xchg
add
out
mov
add
cmp
or
dec
jb
aam
push
leave
fidivrs
int
xchg
out
fmull
out
mov
inc
mov
cs
cmpsb
sbb
jmp
jae
aam
dec
ljmp
std
lret
ficoml
pop
lods
inc
dec
pop
ret
shr
mov
jnp
pop
push
test
adc
cmp
jnp
aam
clc
testl
es
or
mov
cmp
js
mov
mov
mov
pop
mov
js
ret
xlat
out
divb
push
sbb
push
xchg
jge
cs
xchg
repnz
incb
inc
sbb
cli
hlt
loop
xor
mov
out
jne
lock
cs
push
pop
nop
clc
rep
insl
inc
pop
cld
fistpll
push
mov
lock
lds
adc
jmp
inc
lret
and
imul
das
scas
out
sbb
sbb
testl
repnz
or
or
or
repz
adc
push
dec
push
add
popa
mov
cmp
push
pop
stos
into
mov
mov
push
shll
mov
in
imul
daa
or
fiadds
scas
clc
iret
inc
inc
mov
cli
push
xchg
fwait
mov
jo
es
aad
das
lahf
in
mov
xor
mov
daa
and
out
aaa
dec
ret
xor
sub
mov
mov
inc
jns
add
xchg
mov
ja
xchg
xchg
xchg
lock
xchg
pop
rcrl
push
cmp
push
incl
cmp
sub
sbbl
and
pop
jecxz
or
xorl
mov
aas
inc
sub
or
insb
or
stc
addb
aas
or
inc
push
inc
add
push
int
dec
push
dec
or
cs
pop
mov
fimull
loope
add
mov
js
xchg
daa
xchg
cmp
xor
xchg
jne
xchg
insb
fs
jno
pop
mov
pop
in
sti
hlt
callw
pop
cmpsl
imul
mov
push
lret
test
lea
jns
imul
aas
insb
or
xor
lahf
mov
and
jecxz
aam
sub
add
repnz
cmp
loopne
pushf
data16
cmp
popf
cwtl
jp
repz
jp
data16
or
jns
fbstp
mov
divb
sbb
ja
push
cld
int3
lret
ficomps
addl
jns
add
out
xor
out
mov
sbb
mov
and
fdivrs
int
lods
xchg
cmp
fstpl
je
sti
mov
ret
push
dec
pop
fimuls
jl
push
push
push
lret
orb
fld
pusha
mov
mov
xor
jbe
js
push
mov
xchg
sub
popa
sti
jmp
xchg
mov
mov
jle
lret
out
jg
test
inc
fstpt
cmp
clc
lods
push
pop
adc
orl
dec
outsb
jmp
test
repz
cmpsl
into
push
into
cld
sahf
push
outsl
jns
adc
and
dec
mov
stos
stos
adc
scas
mov
mov
nop
adc
pop
mov
mov
xor
sarb
lret
ret
pop
popa
mov
movsb
add
xchg
fistpl
test
in
adc
or
mov
movb
lock
sbb
xchg
jp
stos
pop
sbb
adc
mov
pop
gs
mov
data16
push
lret
fisubl
cmc
popa
out
fisubrs
scas
and
rcl
imul
cltd
fildll
xor
std
pushf
mov
and
sub
xlat
mov
sub
dec
push
xor
ret
dec
mov
outsb
mov
cwtl
mov
jl
xor
aam
loop
sarl
sahf
out
cwtl
es
andl
jae
cmp
dec
mov
sub
push
stos
mov
lods
outsb
push
add
or
idivl
testl
dec
dec
shll
or
xchg
adc
ja
pop
f2xm1
sbbl
jnp
popf
jno
mov
push
dec
arpl
cmp
add
mov
test
mov
gs
pop
push
popf
ljmp
movb
push
imul
mov
lea
jmp
sub
lods
iret
push
insl
inc
aad
enter
push
sub
inc
add
mov
jl
xchg
xchg
shlb
sub
or
xchg
std
sub
ret
lods
pop
lea
mov
sub
fistpl
int
pushf
fmuls
or
jnp
js
jge
mov
fsubrs
enter
ror
inc
jmp
mov
enter
lea
into
jbe
add
sahf
xchg
pop
inc
mov
dec
sub
or
lds
adc
jg
xlat
popf
mov
jne
pop
loop
xchg
outsl
jmp
in
cwtl
stc
jg
mov
push
xor
mov
mov
adc
stc
xor
add
lock
jo
cmp
adc
in
bound
and
push
pop
popa
xor
xchg
rcl
std
adc
pusha
mov
mov
and
or
call
and
test
data16
pusha
sbb
sbb
push
dec
or
call
aam
cli
and
jmp
cs
lahf
jle
pop
popa
aad
ljmp
lds
sub
add
imul
out
or
sub
cld
push
fwait
popf
cli
cmp
cmpb
add
jp
lahf
lds
cmp
adc
lods
stos
stos
out
jle
mov
push
push
nop
mov
or
and
popf
out
mov
out
cmpsl
cmc
xchg
mov
int3
orl
fisubl
imul
out
or
imul
inc
sub
mov
dec
mov
fstps
dec
stos
mov
mov
sub
leave
mov
lds
lds
daa
push
cmp
stos
cmp
push
test
adc
xchg
fsub
sahf
mov
cmc
sbb
jle
lret
out
pushf
mov
sub
add
add
icebp
mov
outsl
dec
dec
dec
mov
and
out
popf
pop
cmp
jge
mov
outsb
sub
pop
std
mov
push
pop
rcrl
jecxz
ja
sti
out
repz
inc
inc
ss
inc
push
and
cwtl
ret
enter
cmpsb
test
cmp
mov
adc
addr16
daa
aaa
adc
mov
fistpl
loopne
push
push
or
imul
test
test
stos
lods
testw
ljmp
sub
sbb
popf
pop
shll
xchg
je
cs
cltd
and
mov
test
push
inc
ffree
lret
movsl
inc
dec
fnstenv
mov
xorb
arpl
push
or
inc
xchg
or
mov
inc
outsl
pop
pop
mov
xor
insb
adc
pop
mov
in
or
ds
mov
fidivl
xor
pop
sbb
aas
das
pusha
test
sub
and
cltd
or
call
or
or
shl
xchg
mov
or
cmp
mov
xor
and
lret
in
test
xchg
das
fcoml
pop
fsubrl
sbb
fstpt
pusha
sbb
mov
and
xor
or
push
call
idiv
push
repz
pop
cmp
cltd
les
imul
xchg
aas
test
stc
pop
pop
xorb
lea
inc
lods
xorb
scas
mov
jne
xchg
cld
out
sub
loope
nop
jmp
pop
mov
loope
aaa
jg
sbb
or
arpl
call
lds
jecxz
or
sbb
pop
jl
testb
shl
dec
or
sbb
je
mov
jnp
inc
mov
push
aaa
jmp
movsb
cmc
jne
cltd
mov
sub
xor
mov
sub
test
rcll
ja
aas
lea
mov
xor
mov
fstl
andb
test
jae
jecxz,pt
inc
adc
ret
cmpsb
cmpsl
out
xchg
jle
mov
mov
jmp
outsb
pop
adc
sbb
sub
or
add
je
in
add
xchg
adc
mov
clc
ja
xchg
jl
inc
mov
inc
test
loope
jle
inc
out
pop
je
daa
ror
xchg
jmp
arpl
imul
shl
movsl
test
pop
mov
cmpsl
fnstenv
sar
xchg
xchg
mov
mov
pop
push
popf
xchg
sti
add
bsr
pop
and
hlt
jns
cli
scas
loopne
aaa
jecxz
sti
iret
mov
bound
inc
cmpb
inc
sub
ss
mov
mov
pop
rcrb
xchg
mov
loopne
fisubrs
rorb
push
cld
sub
sahf
cmpsl
fbld
ja
out
push
test
icebp
ds
pop
ficoml
out
pop
or
xor
adc
and
in
or
loope
xor
nop
push
and
ss
imul
mov
sub
ljmp
out
outsb
push
test
clc
push
sbb
aaa
xchg
imul
xchg
stc
or
fbstp
mov
xchg
xor
mov
fisttpll
clc
movsb
jnp
insl
test
dec
jp
push
mov
sub
stos
adc
and
xor
popf
enter
mov
lods
pop
call
std
jle
mov
jecxz
testl
movsb
cli
jge
adc
test
pop
mov
js
cli
in
pop
push
push
cltd
testb
out
jp
jne
mov
sti
ds
popf
mov
pop
sbb
lock
mov
dec
xchg
or
lcall
loopne
gs
adc
imul
sub
and
mov
adc
fidivl
leave
sub
std
imul
popf
gs
mov
push
les
loop
jle
repnz
and
je
jne
cmpsl
adc
jb
pop
jae
fists
decl
mulb
push
ret
nop
aaa
pop
add
sbb
ja
and
sub
int
ss
lods
int
imul
adc
fnstcw
jge
loope
pop
jecxz
test
xchg
jl
iret
and
ja
dec
push
push
loop
xchg
dec
or
mov
movsb
and
sub
je,pn
push
std
enter
mov
aam
popa
movsb
or
sub
repnz
mov
mov
lds
jbe
xchg
or
dec
mov
jmp
mov
faddp
call
out
sbb
arpl
into
inc
fs
sbb
mov
push
lahf
jbe
inc
fldt
jmp
push
sti
xchg
ror
sub
inc
jbe
jl
aas
xchg
push
add
sbb
jle
xor
dec
sbbb
test
xchg
mov
xchg
int3
xorl
mov
stos
mov
pop
icebp
pop
clc
dec
cli
pusha
loope
or
jbe
pop
mov
das
nop
mov
push
sbb
inc
insl
lods
push
lods
pusha
inc
popa
jb
inc
cmpsl
mov
xor
sarb
dec
dec
push
cmpsb
push
nop
sbb
push
mov
jl
mov
cmp
divb
pusha
inc
insw
outsb
and
pop
mov
insl
pushf
pop
ja
push
push
jae
cmp
jne
mov
das
adcb
adc
lock
es
or
ljmp
test
mov
ss
and
push
sub
pop
xor
test
nop
xchg
mov
xchg
out
adc
adc
repnz
leave
scas
jmp
jo
inc
ffreep
adc
xor
xchg
fidivrl
xlat
mov
or
sbbb
dec
cmp
jns
popa
jnp
dec
xor
mov
xchg
stc
js
sub
scas
push
int
sti
dec
mov
mov
cmp
aas
mov
arpl
inc
add
mov
test
into
xor
pmuludq
insb
aam
movsb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
hlt
jl
insb
aam
movsb
or
cmp
sub
fsubl
cld
inc
in
push
pushf
and
xor
add
adc
in
mov
sbb
or
xchg
fnstsw
push
pushf
and
xor
and
adc
in
hlt
jl
insb
aad
movsb
or
mov
fwait
xor
push
inc
in
and
lods
add
inc
sti
push
jmp
stos
jbe
lretw
sbb
dec
scas
xchg
out
xchg
ds
mov
cmpsb
or
inc
jmp
push
mov
movsl
xchg
imul
out
xchg
adc
cmpsb
or
mov
jecxz
xchg
fidivrs
nop
cmp
dec
shrl
pop
mov
adc
xor
and
xchg
stc
sbb
dec
jecxz
daa
repz
inc
pop
clc
adc
dec
scas
out
xor
scas
stc
and
test
xchg
or
je
nop
sub
xchg
push
mov
and
sahf
push
ja
inc
imul
xchg
jp
jnp
pop
sbb
inc
iret
stc
int3
adc
ds
fbstp
lret
pop
scas
stc
fwait
aaa
pop
and
ret
xchg
mov
movsb
sbb
test
shrl
cmpsb
xor
mov
ja
pop
xchg
cmp
mov
xchg
out
roll
mov
pop
mov
fisttps
testl
mov
gs
lret
jbe
or
push
mov
sahf
sbb
push
ret
cs
clc
ja
pop
cwtl
lds
sti
xor
push
jae
and
cmp
sub
jl
inc
ret
bound
into
lods
xor
addr16
pop
repnz
mov
xchg
or
sub
jle
js
mov
push
mov
cmpsl
push
testl
mov
jnp
imul
out
xchg
cmp
or
inc
jmp
push
mov
es
jnp
imul
out
xchg
cmp
or
cmpb
fsubrl
push
xor
xchg
xor
adc
lret
add
adc
jp
rorl
ret
sub
lret
movb
sub
pop
imul
rcl
cmp
test
daa
push
nop
and
movsl
sub
addb
pshufw
sarb
cmp
out
jecxz
dec
movsl
leave
or
mov
fwait
sti
cmc
es
jecxz
cwtl
adc
mov
cmpsl
mov
cmp
call
sub
sub
lods
out
xor
out
insb
jb
mov
inc
and
mov
jl
dec
jbe
pushf
xchg
lret
push
daa
fxch
bound
inc
add
cwtl
dec
dec
lahf
aas
and
jnp
enter
stos
out
aam
sbb
iret
lock
xlat
test
addb
outsl
scas
pop
mov
or
sti
and
jb
and
mov
push
cmc
push
icebp
lea
push
popa
push
and
xchg
aad
jmp
test
gs
insl
cmc
scas
cmp
inc
or
stos
lahf
inc
add
push
repz
jge
daa
rorb
aas
or
push
jmp
incl
test
aaa
test
jb
dec
jp
lcall
inc
loope
rclb
cltd
mov
testb
loop
lret
pop
add
push
inc
or
test
sbb
push
sar
mov
cwtl
mov
ljmp
or
or
iret
dec
push
cmc
ret
inc
or
push
aaa
mov
int
jp
leave
rclb
cmpl
rep
cld
or
add
pop
repnz
jbe
push
add
data16
imul
dec
mov
mov
rorl
in
insl
mov
sub
imul
loop
cli
ret
ret
dec
rclb
mov
movl
dec
pop
ja
out
jg
mov
int3
mov
movsb
pop
mov
xchg
pushl
push
ljmp
mov
addb
xorl
enter
jb
out
cltd
jo
dec
xchg
mov
xchg
jns
pop
data16
es
pop
es
mov
ret
loop
fisubrs
out
xchg
jno
jle
sahf
cmp
dec
cmp
xchg
addr16
mov
scas
adc
into
loopne
fdivrs
leave
gs
xor
jp
mov
ret
xchg
mov
rcl
rolb
lods
xchg
rol
sub
sub
add
ret
mov
mov
not
dec
cmc
stos
repz
add
add
movsl
mov
repz
fisttps
sub
daa
push
sarl
in
in
xchg
pop
in
int
loope
inc
je
icebp
mov
lahf
int
and
rclb
test
xor
out
and
dec
add
mov
shrl
je
pushf
hlt
add
arpl
out
into
mov
jno
cmpsl
inc
inc
mov
xchg
mull
sbb
mov
sub
in
insb
in
xchg
data16
shlb
sub
pusha
nop
mov
fisttpl
add
out
loop
stos
mov
sbb
test
adc
jecxz
cmp
out
fs
jl
std
mov
xor
mov
cmp
jl
call
inc
mov
mov
hlt
cld
xchg
sti
inc
sbb
mov
in
cmp
cmp
addl
popa
sbb
js
sti
cmp
pop
sub
mov
adc
push
rcr
ror
int
dec
mov
imul
xchg
dec
frstor
mov
ja
sub
push
mov
repz
in
addr16
into
aad
in
in
daa
scas
test
in
in
push
iret
cmp
pop
sarb
sub
icebp
add
testl
or
shrl
mov
pushf
adc
cmpsb
mov
sub
pop
iret
cmp
mov
fcoms
xchg
pop
inc
push
or
mov
mov
int3
es
push
jmp
lods
sub
cmc
fmul
shrb
std
rorb
xchg
add
jne
mov
mov
cmp
cmpsb
aad
lds
fistps
and
push
dec
push
xor
scas
inc
test
push
sti
int
or
xor
inc
shlb
fimuls
popa
jo
movsl
mov
loopne
repz
std
sub
adc
and
fiaddl
sahf
lods
ret
es
cmp
aaa
mov
or
je
xchg
mov
mov
cmpl
inc
imul
xchg
add
data16
std
adc
mov
dec
pop
ds
shlb
in
jo
out
mov
outsb
cld
add
pop
enter
mov
push
shll
adc
shl
loop
push
mov
ret
out
insl
mov
or
inc
lea
or
nop
mov
pop
pop
loope
fldcw
xor
aas
cmc
and
mov
mov
adc
fnstsw
pop
xor
pop
cmc
ret
push
sti
fldcw
les
push
cwtl
roll
pop
out
out
pop
in
rcll
jnp
add
fxam
jmp
xchg
or
cmp
dec
jns
inc
inc
inc
inc
and
pop
sub
rcrl
xor
ror
sub
inc
adc
push
mov
jno
shrb
imul
push
pop
pop
inc
cmpsb
push
add
orb
fmulp
xor
notb
cmp
dec
fcoms
into
xor
aaa
adc
addb
sarb
popa
pop
mov
add
in
xor
addb
add
mov
cmp
fstpl
push
test
or
pop
xchg
pop
jbe
jno
addr16
jnp
lock
cwtl
xor
leave
pop
push
cmp
lea
jmp
xchg
mov
fmull
cli
outsl
ret
xchg
lock
fdivrp
push
mov
cmp
mov
mov
sbb
lds
insl
pop
jnp
arpl
adc
push
adc
pop
add
mov
cmp
mov
adc
push
pop
inc
pop
jb
loopne
in
jbe
jle
cmpsb
clc
test
jns
sub
sbb
fdivrs
sub
cwtl
inc
jle
andl
icebp
cmp
nop
rclb
adc
dec
das
jns
fnstcw
xor
mull
adc
xor
inc
repz
loopne
repnz
bound
jne
inc
fwait
imul
js
pop
xchg
sbb
repz
shll
rorl
fbld
sub
pop
inc
xchg
xor
outsl
xchg
inc
shl
jl
hlt
mov
mov
leave
cmc
dec
outsb
and
mov
insl
sbb
push
cmp
out
adc
test
std
push
fnstsw
xlat
jne
push
add
std
pop
jae
add
push
cmpsb
cmp
cmp
dec
out
cmpl
or
xor
cmpsl
jo
pop
mov
adc
popa
cli
push
cmc
fldl
or
add
xchg
jl
cltd
dec
fiaddl
jge
popf
sarl
mov
fcmovbe
fdivr
cmp
push
lds
push
imul
pop
cmp
dec
jge
mov
cmpsl
pop
shl
push
cs
adcb
dec
sub
rcrb
and
jge
mov
ret
dec
jns
mov
in
flds
out
cld
jne
iret
stos
andb
jecxz
lret
mov
inc
call
in
movsb
pop
adc
mov
call
mov
cld
mov
rol
lahf
notb
mov
add
testl
test
bound
add
xor
fldl
cmc
mov
mov
pop
or
push
mov
ja
xchg
jge
adc
sub
loopne
lret
gs
idiv
std
aaa
fstps
loope
stc
and
sub
mov
xor
decl
nop
iret
and
popa
inc
aam
sbb
mov
pop
aas
mov
or
or
xor
mov
and
or
cli
and
mov
mov
in
scas
push
sbb
dec
mov
sbb
push
sub
mov
ror
or
scas
stc
cmp
dec
pop
inc
mov
sub
cmp
xchg
lods
insb
rcrl
movb
clc
in
mov
sbb
and
scas
jb
inc
outsl
xchg
sti
mov
dec
cmp
ja
orl
push
xchg
mov
int
scas
andnps
adcl
push
mov
sbb
jne
pop
dec
push
rcrl
mov
xor
jecxz
add
jecxz
mov
jp
push
push
arpl
dec
sti
cltd
icebp
and
cmp
adc
addb
xchg
pop
mov
insl
ficoml
repnz
out
inc
arpl
in
xor
mov
inc
and
aam
add
test
mov
xchg
mov
or
mov
stc
mov
out
fs
in
cmp
add
sahf
sbb
mov
adc
push
xlat
jl
jnp
ret
pop
fcomp
shlb
xchg
test
imul
mov
fsts
pop
add
cmp
or
popa
faddl
mov
adc
icebp
push
in
sbb
daa
jb
sbb
sbb
cli
sbb
pop
repz
lds
setl
mov
xchg
sub
subb
testb
data16
in
dec
stos
jbe
pusha
adc
in
xor
clc
sti
dec
sbb
push
nop
es
xchg
lds
pop
cmp
xorl
jnp
cmovno
iret
cmp
jne
gs
or
jb
add
dec
ret
mov
adc
in
pop
repz
cmp
xchg
jg
xlat
stos
dec
outsl
push
addr16
xchg
pop
lret
aad
ss
push
xchg
inc
adc
sub
sahf
and
or
je
data16
in
notl
js
cmpsb
aad
fwait
stos
test
or
push
cmp
mov
adc
out
icebp
xor
ret
shll
into
fadds
inc
call
pop
inc
cli
or
inc
pop
mov
cmp
mov
or
imul
lods
sbb
push
fdivr
adc
leave
jae
cmp
xchg
xchg
loopne
aas
roll
sbb
xor
cmp
addr16
xchg
mov
mov
mov
ret
fldt
data16
js
pop
fidivl
js
aad
int3
imul
adc
mov
mov
mov
sub
clc
mul
dec
popa
flds
fwait
lcall
adc
mov
or
in
jp
subl
cmp
fistl
das
lods
xor
cmp
bound
jns
sub
repnz
sahf
mov
imul
cmp
loope
imul
mov
cmp
stc
jo
mov
shll
cmp
push
fists
lret
push
cmp
std
lds
dec
rcrl
in
outsl
add
jnp
divl
bound
jmp
loopne
jl
lret
ret
pop
cli
ds
and
cltd
mov
loop
push
mov
call
xchg
inc
bswap
sbbb
arpl
sub
adc
xchg
push
repnz
daa
pop
js
ror
into
xchg
dec
sub
stos
jo
or
mov
cli
outsb
inc
popa
popf
repnz
push
inc
cs
notl
mov
adc
jne
iret
cltd
or
scas
xor
xchg
and
scas
jb
bound
or
ds
pushf
inc
out
adcb
mov
cwtl
push
jmp
dec
or
clc
dec
outsb
xchg
paddd
sub
imul
lret
add
sarl
mov
mov
add
in
dec
movsl
gs
dec
out
imul
lds
addb
jno
mov
xchg
sbb
ret
cmp
push
pop
xchg
fistpl
cmc
sahf
jb
xchg
fdivrp
cld
movb
adc
or
addl
int
jns
sbb
lock
loop
inc
fdivrp
or
pusha
push
fisubl
cmovnp
jae
xor
jecxz
loopne
xchg
jecxz
out
pop
mov
add
fldt
test
aad
xchg
adc
pop
in
mov
insb
or
sbb
jg
fwait
movsb
jae
dec
sbb
lock
gs
cmpsb
lds
xor
mov
ret
outsl
out
cmpsl
adc
mov
insb
lret
mov
xchg
pop
mov
adc
cmpsb
mov
xchg
test
jo
jns
icebp
mov
repnz
stos
sbb
fs
mov
inc
fnstenv
test
add
mov
aam
xchg
or
pop
sbb
push
js
leave
mov
mov
subl
movsl
les
mov
scas
call
adc
imulb
rorb
cmp
mov
bound
adc
dec
lea
pop
mov
xchg
cltd
inc
jns
les
xlat
jecxz
xchg
cld
fsubl
mov
es
fs
es
out
mov
fnsave
xor
orl
lcall
iret
jg
jecxz
ret
idivb
inc
push
lods
sbb
inc
enter
xlat
sbb
pusha
jmp
in
test
or
jmp
lret
mov
subb
xchg
ds
shll
enter
pop
repnz
hlt
mov
cmpsl
fistpll
dec
and
pop
xchg
inc
daa
inc
fistps
dec
fwait
or
mov
jne
lods
stc
xor
push
pop
aad
jne
ficoml
insl
std
sub
or
in
das
mov
push
or
xchg
jle
add
or
pop
pop
mov
test
fisubrl
or
push
das
and
or
jg
lret
mov
aaa
cli
xchg
cmp
lret
pop
insb
js
pop
jge
cmpb
jmp
clc
jnp
ljmp
push
xchg
push
inc
xorb
sbb
push
adc
fstpt
mov
add
fwait
pushf
inc
mov
xor
loop
sbb
test
inc
jnp
outsl
pslld
cs
test
outsb
les
jle
xchg
fcmovbe
mov
xor
cld
mov
jp
popa
cli
aaa
cmp
jecxz
mov
shlb
mov
fsubrl
mov
pop
mov
sbb
sti
dec
add
cwtl
sbb
aam
dec
cmp
inc
out
sub
xchg
movsb
sbb
xchg
xchg
cmp
xchg
sub
xchg
nop
cmp
imul
mov
cwtl
xchg
xor
mov
sbb
mov
xchg
inc
out
dec
lock
cmp
lcall
dec
jo
into
cmp
test
test
jbe
in
das
adc
mull
cmpsl
scas
adc
mov
imul
pop
xlat
jecxz
leave
test
vandnps
scas
add
ficomps
mov
adc
fucomi
insb
test
cmp
cmpsb
cmpsl
jbe
movsb
and
imul
sub
push
push
fnsave
jnp
push
fmuls
mov
pop
out
es
out
mov
repnz
mov
push
adc
std
mov
and
mov
subps
pop
sub
add
test
cltd
jne
cs
sub
adc
fldl
popf
sub
xlat
pop
ret
je
dec
push
js
add
add
mov
xchg
aad
add
xor
test
push
jle
test
mov
addr16
mov
adc
or
mov
cs
cvtps2pd
inc
jno
mov
add
mov
jg
rorb
jmp
dec
add
das
sub
pop
loopne
pop
sub
cld
xchg
and
cmc
ds
dec
leave
icebp
xor
pop
out
cmpb
shrl
push
push
xchg
subl
cltd
xor
pusha
idivl
mov
jae
js
dec
int
or
push
mov
add
pushf
jp
push
cmc
insb
and
daa
xchg
arpl
sar
xchg
sbb
jno
cli
fsub
pop
inc
sbb
dec
cmp
inc
frstor
divb
sbb
aas
scas
rcll
mov
js
repz
jp
imul
fmull
adcl
stos
leave
push
pop
js
data16
dec
cmp
xor
js
daa
dec
dec
sar
loop
loop
sti
insl
lods
push
xchg
dec
lahf
and
and
sub
sbb
rclb
iret
insl
lret
jo
mov
sub
dec
cmp
lods
jmp
mov
cmp
xor
mov
inc
popf
shl
into
jecxz
jo
aas
add
jmp
ljmp
cwtl
mulb
out
adc
popf
mov
scas
jmp
stos
or
sbb
or
jmp
adc
mov
sbb
in
aas
loopne
push
ss
fbld
stos
inc
xchg
mov
xchg
ljmp
sub
out
and
cmp
add
into
adc
add
je
jmp
insl
sbb
jp
sub
cs
ret
inc
push
int3
or
cli
movsl
stos
test
fsts
pushf
adc
inc
je
fs
or
pop
imul
loope
pop
xchg
add
ljmp
shll
loop
mov
mov
xorl
dec
xor
lret
lock
inc
loop
jb
xor
in
xchg
iret
cs
push
popa
repnz
loop
adc
jnp
arpl
cmp
jb
or
cmp
add
lret
or
sub
mov
push
mov
fwait
push
xlat
or
pop
sub
je
psubb
das
insb
out
inc
cmpsl
mov
movsb
pop
in
bound
add
or
mov
std
out
push
push
stos
dec
shll
repz
out
rcl
bound
or
sti
es
sbb
lds
cwtl
push
roll
add
das
lods
jo
pushf
pop
push
inc
ja
or
adc
shl
lret
lret
fistl
out
icebp
mov
imul
scas
inc
fsubrl
xor
into
sbb
mov
and
mov
push
xchg
cltd
lret
add
cs
mov
pop
xor
das
push
test
push
mov
lcall
mov
mov
leave
lods
xchg
add
iret
jns
and
outsl
std
call
add
xor
aad
or
pop
iret
or
sub
xor
mov
push
xor
fs
jg
ds
mov
inc
sbb
test
lret
xor
pop
sbb
pop
imul
test
add
sub
xchg
lds
pop
mov
loop
mov
scas
shrl
mov
sbb
pop
xchg
stos
arpl
shlb
fsubr
mov
push
pop
addr16
lds
test
mov
lds
lods
push
mov
insb
outsb
mov
pushf
jmp
xchg
add
add
cmp
dec
inc
rorb
cmp
out
push
mov
jo
jl
stc
add
xlat
cmp
stos
or
sbb
test
fcmovb
lret
lds
in
pop
mov
jbe
xchg
movsb
sub
cmc
dec
jl
cmp
stos
mov
and
enter
mov
jb
push
clc
sbb
nop
add
cmc
loopne
or
add
lret
sub
bts
pop
ret
push
sub
jne
push
cmp
xor
push
rcl
dec
add
imul
and
push
into
add
stos
cmpsb
pop
add
shlb
into
jns
sub
pushf
sahf
add
pusha
cwtl
cmp
jecxz
cmp
mov
mov
jb
bnd
rcr
mov
and
sbb
into
idiv
jb
push
mov
or
adc
fs
andb
jmp
cs
or
adc
fmull
call
mov
sbb
push
pop
or
or
ljmp
xchg
ds
mov
pushf
sub
xorl
lods
es
mov
enter
lahf
out
adc
sbb
jle
adc
xorb
rclb
xor
rorb
pop
subb
inc
adc
dec
adc
sbb
arpl
lcall
iret
test
add
adc
cwtl
and
mov
dec
jne
test
jae
sti
mov
xchg
add
int3
push
insb
mov
repnz
pop
fneni(8087
pop
out
pop
jno
xchg
jmp
mov
int3
push
test
fcmovu
in
jge
jne
jbe
aad
add
xor
inc
in
cmp
lods
test
ret
or
xor
or
inc
sub
pop
push
jmp
or
xor
in
je
or
mov
enter
sub
aam
sub
in
dec
mov
inc
xchg
jns
and
pop
into
xchg
lcall
iret
mov
xchg
and
dec
aad
adc
hlt
repz
jne
push
jb
mov
jmp
fidivrs
push
mov
es
jnp
imul
out
xchg
cmp
or
inc
jmp
push
mov
es
jnp
imul
out
xchg
cmp
or
inc
in
ret
iretw
pop
mov
daa
mov
jp
outsl
lcall
inc
xchg
aas
lahf
sub
pop
push
aas
dec
mov
mov
cmpsb
dec
test
rcrl
loope
push
push
dec
arpl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
add
pop
dec
repz
mov
sbb
add
add
add
push
add
insb
add
add
add
add
add
cwtl
add
push
add
add
add
add
cwtl
add
add
add
cmp
hlt
add
add
add
add
add
jle
add
add
inc
add
pop
add
add
adc
popf
add
add
add
mov
jb
push
add
add
sub
jp
sahf
add
add
push
add
lret
add
add
adc
pop
add
add
add
add
add
or
add
hlt
add
out
add
add
jle
sub
xchg
add
add
add
dec
add
add
add
lret
add
add
pop
add
movl
repnz
add
add
add
push
add
add
add
xchg
add
mov
cmp
daa
add
add
add
add
pop
add
add
outsb
add
xor
mov
xchg
cmp
hlt
add
add
mov
mov
xor
add
add
add
xchg
add
add
dec
add
add
add
add
and
outsb
add
add
add
add
add
add
add
push
add
add
add
add
xchg
add
or
push
add
add
xor
insb
add
add
add
add
xchg
xchg
add
add
jne
sbb
cltd
add
add
add
mov
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
xchg
add
dec
add
mov
add
popf
add
add
add
add
adc
popf
add
add
add
dec
add
clc
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
popl
mov
or
dec
add
add
add
dec
add
leave
add
push
add
add
add
add
add
or
add
add
data16
add
add
add
add
jp
dec
add
add
add
add
add
add
adc
add
xchg
add
add
add
popf
add
add
add
add
add
xor
dec
add
add
adc
lret
add
add
push
add
dec
add
add
jb
test
xchg
add
sbb
insb
add
add
add
add
or
add
xchg
add
add
add
cmp
and
push
add
add
cmpsl
add
add
add
filds
flds
and
dec
add
add
or
push
add
add
add
add
fwait
cmp
push
xlat
or
jmp
leave
into
push
inc
fcomps
pop
mov
ror
repnz
pop
rorb
push
fisttps
cld
data16
push
xchg
fs
jae
mov
push
cmp
in
jae
and
adc
aaa
mov
jge
pop
sub
out
mov
pop
push
insb
enter
jl
mov
iret
mov
sub
loope
leave
mov
mov
push
das
imul
mov
xchg
int3
push
cs
jo
test
jecxz
jl
out
xchg
xchg
test
cmp
pop
rorl
into
aam
push
divb
or
mull
int
inc
add
scas
cltd
mov
add
mov
nop
and
fistpl
push
cmpsb
outsb
adcl
mov
dec
cmpsb
xchg
scas
inc
ja
ds
mov
xor
mov
cmovp
or
fisttpll
xchg
pop
cmpsb
inc
inc
dec
insl
xor
in
push
imul
adc
std
jno
fldl2t
sbb
push
xor
adc
out
gs
and
pop
insb
or
lcall
mov
mov
scas
mov
push
jbe
mov
cmpsl
push
pop
mov
adc
xchg
or
int3
fisubrs
and
outsb
fisttpl
daa
mov
mov
lret
aaa
loop
dec
mov
lods
inc
inc
mov
das
loop
int3
mov
jp
inc
pushf
or
into
xchg
loopne
lcall
adc
jg
aad
in
fbstp
leave
out
aas
lret
cs
xor
rclb
stc
jecxz
and
lret
aam
and
bound
push
cmp
mov
shlb
mov
test
or
jns,pt
fistpll
mov
push
dec
sti
rolb
aam
fsubl
dec
mov
inc
pop
push
or
adc
lret
fistpl
fsubr
in
push
mov
out
movzbl
mov
jp
jmp
and
das
adc
jmp
out
nop
mov
adc
jbe
or
out
aad
sbb
jmp
cmp
rol
je
jnp
sbb
icebp
mov
lea
add
dec
sub
jns
enter
push
pop
xchg
xlat
mov
pop
pop
pop
xor
mov
sbb
jb
and
scas
lea
xor
dec
jle
lods
lds
inc
lret
lock
push
jmp
jl
mov
jmp
xor
mov
jl
test
es
mov
leave
outsl
or
or
or
cmp
aad
sbb
sbb
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
