call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
insb
es
push
stc
push
jmp
jbe
sub
xchg
imul
sub
fldenv
leave
es
push
jmp
push
mov
cmpsb
dec
repnz
inc
imul
cmp
sub
sarb
push
loope
lock
cmpb
mov
lods
jae
or
imul
outsl
scas
sub
mov
jle
lcall
rcrb
pop
jge
aas
xor
xor
test
adc
cmpsb
xor
mov
dec
pushf
mov
cmp
dec
fs
cmpsb
les
inc
int
inc
mov
pop
mov
lds
or
mov
sub
mov
leave
idiv
fsts
jae
mov
or
mov
cltd
ficoml
xchg
mov
inc
loope
sub
jb
es
push
test
aam
dec
cmpl
pop
jno
test
ds
sub
mov
lret
mov
insl
and
pop
pop
pop
imul
ss
neg
ficoms
jmp
jl
push
mov
mov
jo
add
push
cmp
dec
inc
mov
call
push
aad
xor
sub
push
lcall
inc
mov
add
add
or
mov
cmpsb
sub
or
xchg
data16
push
dec
pop
cwtl
adc
jae
push
pushf
push
cmc
mov
inc
test
xchg
jns
imul
cmp
sub
fldenv
leave
push
stc
push
jmp
push
mov
cmpsb
dec
xchg
jns
imul
cmp
sub
fxam
dec
dec
fsubrs
pop
movsb
dec
in
jmp
iret
aad
push
arpl
fistl
push
cli
add
into
aam
arpl
mov
jbe
add
jae
jecxz
stos
cmp
dec
shrb
push
divl
cmp
les
sbb
sbb
jmp
dec
cmp
push
cmpsb
cltd
adc
mov
push
xor
scas
sub
test
cmp
je
fmuls
es
fst
dec
sub
xchg
pop
mov
mov
pop
inc
xor
push
pop
sub
popf
fsubl
add
loop
repz
xor
lcall
pop
lea
pop
addr16
icebp
pop
mov
xor
ljmp
inc
fwait
dec
and
mov
push
clc
jns
out
lods
int3
cwtl
sbb
lods
and
pop
cmp
or
dec
push
xchg
pop
jns
mov
dec
dec
test
add
iret
jp
sub
inc
xchg
movsl
mov
repnz
or
loope
push
xchg
popa
fwait
add
cmpsb
inc
int
outsb
decl
add
int
dec
xor
mov
and
jge
sub
jne
sarb
sbb
or
jbe
stc
pop
sub
dec
rcr
loop
in
adc
push
add
jne
xlat
sub
sbb
scas
fcompl
xchg
clc
jecxz
popf
sub
std
push
shrl
and
lcall
scas
push
push
cmp
outsb
std
pusha
fadd
or
or
popf
cmp
push
and
cmp
jl
fs
add
imul
clc
dec
ja
xchg
pop
faddl
xor
xor
imul
mov
inc
jno
divl
or
jo
aam
adcb
leave
jmp
sub
bound
or
adc
int3
testb
xorb
mov
cmpsb
or
out
rcl
mov
mov
in
mov
loop
or
ret
inc
js
aam
mov
mov
inc
xchg
cwtl
hlt
inc
and
inc
mov
iret
mov
mov
inc
push
std
daa
imul
pop
ffree
scas
pusha
inc
or
xchg
fcoml
lahf
outsb
pop
sqrtps
and
out
pop
add
stos
jl
jmp
adc
push
insl
stos
cmp
out
sub
movl
add
cmp
mov
inc
mov
jbe
dec
pop
orb
lds
jno
andb
add
adc
mov
xchg
xchg
push
pop
dec
out
ds
jne
iret
pop
or
jo
push
add
add
pop
sub
sub
fs
xchg
or
push
dec
jbe
push
lods
and
std
inc
push
and
push
nop
xchg
jnp
pop
cmpsl
mov
roll
cmp
stos
adc
mov
push
fidivs
ja
mov
mov
fcompl
dec
and
jl
mov
xchg
mov
shll
jle
aas
mov
outsb
mov
orl
int
scas
xor
xor
inc
out
mov
jmp
mov
daa
fdivp
aaa
dec
sahf
xor
xchg
jp
jl
inc
movsb
vorps
ss
pushf
push
lock
scas
cmp
aad
fadd
mov
stos
ret
xchg
int
loope
dec
mov
xchg
sub
mov
mov
cmc
sahf
cmp
leave
and
dec
fnstcw
dec
jno
mov
mov
pop
or
adc
inc
pop
mov
jbe
movsl
out
hlt
and
sti
add
adc
xchg
loop
mov
daa
or
jle
lahf
leave
mov
mov
add
sti
sahf
push
loope
lret
push
and
push
and
mov
lahf
arpl
lahf
sub
jge
sahf
xor
inc
rclb
add
cwtl
movsb
test
xchg
jge
shlb
mov
inc
movsb
xchg
jge
cwtl
shl
in
sahf
addr16
mov
push
mov
fimull
iret
and
push
cmpb
fiadds
ja
dec
lods
xor
cltd
movq
sti
sub
hlt
add
push
scas
addr16
and
dec
repz
rolb
xlat
sar
pop
insl
sbb
mov
scas
mov
sar
mov
xchg
and
add
or
ficoms
sbb
sub
cli
cmpsl
cmp
bound
imul
xor
sbb
push
stos
movsb
jne
jns
inc
sub
add
mov
in
pop
mov
inc
stc
incb
xchg
imul
pop
inc
push
pop
mov
fbld
je
jmp
xchg
mov
cmpl
fnstsw
jns
sub
push
xor
cs
lods
push
shrb
iret
mov
out
jae
dec
mov
adc
sbb
jecxz
dec
test
or
mov
mov
mov
lods
inc
into
scas
sub
mov
cltd
repz
mov
mov
aam
int
dec
leave
scas
xchg
mov
sbb
out
popa
adc
pop
jmp
lock
repnz
ret
or
pop
mov
inc
inc
out
inc
out
arpl
adcl
cmp
gs
pop
inc
insl
ds
inc
xchg
inc
fstl
sbb
cs
cs
jp
or
ja
in
cs
dec
dec
pop
pop
into
dec
lahf
jns
jle
push
pusha
add
jg
jge
jecxz
mov
sub
je
and
fists
sbb
jl
jmp
mov
adcb
sahf
repz
sub
ja
mov
sub
xorl
pop
adc
insb
or
test
into
cmpsb
or
lahf
add
in
cwtl
xchg
dec
sahf
arpl
push
push
cmpsl
nop
jb
jno
es
pop
lcall
movb
daa
ret
pop
adc
xchg
aaa
ret
sbb
nop
js
aam
je
xchg
cmp
insl
cmp
repz
les
mov
cmp
je
and
cmp
test
mov
int3
movsl
leave
ss
pop
lret
push
fwait
rcrl
push
mov
pusha
mov
xchg
push
and
hlt
setns
cmp
xchg
mov
jge
xor
stos
arpl
cmpsb
inc
inc
dec
adc
lods
push
out
push
roll
lret
sbb
movsl
jmp
push
test
xchg
add
jae
sbb
rcl
out
js
pop
and
dec
ret
outsl
jl
pop
xor
fcoml
andl
mov
mov
js
insb
fmul
xchg
iret
fwait
stos
jae
out
or
cwtl
sub
inc
xor
jb
aaa
cmp
dec
movsl
fbstp
in
out
and
pop
loope
add
enter
mov
fs
push
add
and
shlb
ud0
push
mov
xor
cmpb
pushf
sub
dec
or
mov
and
add
cmp
and
mov
inc
pop
push
rcll
cld
sbb
mull
jmp
adc
or
mov
ljmp
repnz
fists
fcompl
sarb
jmp
test
sub
fwait
inc
scas
bound
pusha
lds
inc
cmpsl
fs
inc
sub
and
mov
cmpsl
or
mov
lret
dec
out
pushf
dec
inc
or
add
daa
data16
fldenv
cmp
arpl
out
mov
les
gs
push
cmp
mov
addr16
xchg
xchg
fsubl
inc
roll
jg
cltd
sbb
push
scas
gs
loope
insb
pop
or
mov
adc
dec
mov
and
mov
iret
std
ljmp
jg
or
aas
or
cli
inc
mov
and
push
in
jo
js
test
cmpsl
dec
fs
jns
xchg
sbb
daa
xlat
push
sarl
jg
sub
ljmp
scas
sti
aad
enter
lods
dec
sahf
mov
hlt
add
in
cmp
cmpb
mov
pop
lcall
fstl
xchg
bndstx
insl
imul
ss
mul
jge
cmp
or
stc
cli
shll
insl
mov
adc
mull
insl
xor
adc
lock
or
inc
xchg
es
inc
and
sbb
xchg
hlt
cmp
js
jne
lahf
outsb
sub
jb
inc
ds
push
mov
jmp
xchg
aad
xchg
out
sbb
inc
mov
jmp
test
push
das
and
insb
or
jns
inc
xorb
stc
or
xorl
insl
push
loopne
xchg
pop
push
dec
outsb
inc
push
pop
sahf
inc
out
adc
cmp
cmc
loop
sbb
movsl
pusha
xor
scas
rorb
mov
mov
push
clc
cs
add
or
scas
pop
fstpt
cmovp
jp
sbb
push
and
cli
lods
lret
daa
mov
adc
mov
mov
fcomps
insl
lahf
pop
cmp
fisubrl
mov
stc
inc
or
filds
sahf
mov
lock
dec
jmp
into
push
xor
dec
push
fs
sbb
ret
or
nop
ror
rcll
or
cmp
pusha
mov
jno
pop
adc
mov
std
fiadds
in
add
add
gs
out
outsb
xchg
je
push
cmp
sbb
mov
popa
pop
in
and
fmulp
sub
xor
outsb
push
mov
push
ret
and
mov
dec
cld
push
fwait
xchg
imul
cmpsb
les
push
ja
shll
scas
aam
pop
and
push
cmpsl
xor
mov
mov
lahf
movsb
fwait
es
jmp
mov
adc
out
les
jb
cs
mov
dec
addr16
push
lds
xchg
mov
adc
sbb
jge
dec
sbb
imul
call
pusha
cmp
cmc
mov
jecxz
push
jmp
mov
xchg
dec
repz
jl
jge
es
jp
sbb
cs
adc
push
mov
or
enter
and
xor
dec
cld
adc
inc
mov
jg
mov
inc
pop
ss
or
adcl
stos
iret
cmp
mov
add
shrl
lods
std
add
dec
sub
xor
xchg
jge
jnp
or
cmp
shlb
mov
mov
sub
movsl
ja
stc
adc
push
cmc
rclb
xor
negl
mov
jo
pop
push
dec
rcrb
in
call
mov
jecxz
pop
ret
push
mov
mov
jns
dec
mov
mov
push
rcl
outsb
fdivr
push
jnp
loope
mov
cltd
lcall
mov
inc
fcmovnu
mov
aas
pop
mov
jmp
xor
insb
inc
mov
nop
repz
aad
fildl
rcll
js
or
mov
fs
mov
enter
andb
pop
mov
mov
stos
mov
cmp
addb
jae
ret
and
fbstp
jb
jae
jns
cmp
fs
pop
push
mov
imul
lods
sbb
add
lret
sub
push
mov
ds
out
dec
jb
roll
insb
mov
out
mov
pushf
outsl
cmp
lret
xor
and
sub
dec
mov
xor
aam
cld
sub
jns
psubb
nop
nop
fmull
pop
cmp
cmc
insb
dec
fwait
sbb
inc
push
repnz
jbe
pusha
mov
lret
xchg
shrb
data16
movsl
lods
mov
enter
adcl
mov
lret
add
imul
sub
adc
les
sub
std
in
xor
dec
adc
cmp
adc
jnp
lods
xchg
mov
js
sbb
xchg
jae
push
sahf
adc
push
mov
call
mov
xor
cmovnp
ret
inc
add
pop
sub
stc
vmwrite
xor
cli
or
adc
fs
pop
fisttpll
dec
xchg
or
out
pushf
fisttpl
pushf
jno
loopne
dec
jns
pop
jle
cmp
repz
out
xchg
movq
push
push
and
ss
repz
cmp
pop
pushf
push
cld
sub
test
sub
add
negb
insl
pop
mov
fnstsw
adc
mov
pushf
jmp
push
xchg
shl
lret
and
pop
jns
out
popl
pushl
mov
fsubrl
ljmp
arpl
cmc
dec
xchg
lahf
inc
adc
jo
rorl
or
inc
pop
cmp
xor
inc
jb
pushl
cwtl
and
insl
pushf
fisttpll
outsb
push
sbb
dec
cmp
cmp
aas
sub
add
mov
sahf
pop
or
fidivl
data16
jnp
pop
and
push
mov
xchg
popa
stc
in
imul
mov
mov
add
and
faddp
jno
pop
leave
lahf
jo
gs
hlt
xlat
adc
lret
xchg
mov
faddl
mov
fstpt
mov
les
cmp
cmp
mov
mov
mov
or
lock
mov
jno
aaa
mov
jne
fs
int3
es
out
out
popf
addr16
loope
push
loop
pop
push
scas
mov
subl
nop
hlt
mov
loopne
jae
or
fildll
lcall
mov
pop
inc
mov
lea
out
into
pop
mov
std
stos
in
decb
stos
cltd
pop
xchg
jo
mov
sbb
xor
nop
pushf
or
inc
imul
mov
xchg
rcrl
push
inc
out
mov
add
push
cltd
sub
mov
fldcw
scas
pop
fnstcw
mov
int3
lret
movsb
sbb
fs
mov
outsl
ja
xchg
mov
test
fcomp
int3
in
pop
adc
andl
mov
xchg
pop
rcr
cmc
and
test
neg
out
mov
and
incl
movsb
pop
mov
repz
jge
cmp
xchg
cmpsl
fnclex
xor
fldt
jb
out
mov
mov
negl
lds
mov
jle
in
xlat
repnz
mov
mov
incl
imul
cmp
xchg
and
sbb
mov
adc
jb
lods
aaa
int3
jecxz
mov
xchg
jg
mov
cmpsb
out
hlt
aas
test
mov
xor
pop
mov
jmp
xor
pop
leave
dec
push
sbb
aam
daa
scas
pop
pop
call
and
mov
mov
jae
divb
xor
xchg
or
mov
outsb
and
inc
mov
popf
repz
sti
sub
popa
arpl
lcall
outsb
mov
das
leave
pop
or
and
jno
jne
pop
les
xchg
xlat
cld
cmp
out
mov
push
sub
leave
pop
lret
dec
sbb
lret
jns
and
lock
push
ret
sub
dec
xchg
xlat
mov
testb
movsl
inc
call
int3
adc
fnstcw
lock
ljmp
daa
push
cmpsb
rcll
inc
dec
xchg
inc
js
fld
aaa
lods
inc
or
or
dec
and
arpl
sbb
imul
out
push
shrb
hlt
scas
test
out
fwait
addb
sbb
xor
cmpsb
fsub
push
inc
lods
test
mov
fcoms
int
je
mov
jnp
cmpsl
add
add
outsl
repz
push
fidivrl
outsb
imul
pop
ret
test
lods
mov
sub
sarl
mov
xchg
adc
push
push
and
lea
ljmp
cmp
push
mov
outsb
pop
mov
pop
mov
test
rclb
pop
xchg
ret
xor
int
mov
xchg
dec
lcall
mov
inc
cld
mov
dec
sub
ret
mov
call
mov
lcall
inc
lods
addb
cmp
cmp
jmp
sbb
enter
stos
scas
rcl
fwait
subb
xchg
and
mov
mov
mov
mov
cld
adc
dec
leave
pop
subl
shrb
pop
xlat
flds
jno
fnstcw
cmc
gs
call
ret
mov
xor
pop
or
call
dec
mov
or
mov
lahf
mov
shl
fisubrl
jo
mov
mov
scas
add
jne
sbb
mov
dec
xor
inc
pop
out
insl
pop
out
vminss
mov
leave
repz
mov
int3
fldt
in
out
fsubs
fnsave
mov
arpl
les
push
test
movsl
inc
or
lds
sbb
mov
arpl
scas
mov
cmp
in
or
mov
and
mov
pop
pop
and
fwait
in
cld
addr16
cmp
sbb
push
push
ja
xchg
push
test
mov
test
cwtl
or
add
xchg
sub
or
mov
and
in
xchg
xorps
imul
jb
outsl
aam
jae
cwtl
cld
cld
leave
add
mov
adc
fildll
pop
cli
pop
or
jo
adc
push
je
xchg
mov
in
sub
jmp
pop
push
cwtl
stc
push
dec
out
xchg
movsb
lret
scas
xor
xor
movsl
xlat
dec
pop
mov
sbb
cs
xor
clc
sbb
inc
cs
lock
cmp
jne
loop
xchg
sub
cmp
jae
jmp
or
mov
cwtl
jbe
lret
xor
inc
dec
and
pop
xor
std
mov
sub
imul
jmp
cmp
adc
aad
loop
pop
nop
xchg
sbb
pop
xchg
add
rclb
mov
or
out
xchg
sbb
fdivs
mov
insl
hlt
mov
push
xor
movsb
mov
cwtl
push
jo
xor
popa
in
sub
subl
faddl
fidivl
push
xchg
lods
adc
test
bound
xchg
movsb
dec
fildll
cwtl
and
ret
or
mov
push
push
or
mov
lods
aam
test
dec
pop
sti
das
in
cltd
inc
inc
arpl
je
aad
outsl
fwait
rorb
mul
sub
push
fists
ja
dec
xchg
pop
adc
movsb
loop
dec
push
jl
xor
rcll
mov
shll
mov
xchg
jp
dec
ja
pusha
jg
push
rdpmc
mov
dec
aas
cltd
push
jge
les
lcall
add
loope
xlat
xor
loop
clc
dec
ss
xor
jmp
push
push
jns
and
subl
into
pusha
notl
or
call
and
xchg
mov
out
jo
inc
js
movsl
fidivl
loopne
mov
fs
or
dec
sbb
bound
adc
sub
jbe
dec
dec
in
xchg
pop
and
mov
aaa
enter
xchg
sub
adc
rcrl
cwtl
call
jmp
loop
cltd
inc
inc
popf
push
push
nop
inc
jg
pop
mov
or
mov
orl
cmp
fwait
mov
xor
adc
push
dec
mov
lret
aas
mov
cli
test
cmp
std
rorb
scas
cli
pop
int
xlat
pusha
jno
mov
or
mov
xor
int3
scas
dec
pop
jmp
dec
ljmp
jae
mov
insl
pop
add
cmp
dec
dec
cmp
jb
cs
mov
jg
clc
outsl
hlt
ror
push
out
jns
out
out
les
hlt
jmp
or
insb
jl
enter
jg
push
test
sub
mov
dec
daa
mov
add
js
jge
pop
adc
pushf
jnp
jle
jge
push
cmc
push
std
mov
icebp
mov
dec
sub
subl
push
mov
insl
cs
fildll
sbb
push
daa
fmull
mov
repnz
xchg
push
repz
mov
aaa
fstp
add
fwait
pop
add
not
fcoml
pop
or
sub
lret
rclb
popf
mov
sbb
mov
push
push
incl
jb
mov
fidivrl
hlt
int
not
out
jge
push
test
sahf
mov
lods
out
ss
je
arpl
cmp
pop
dec
push
push
ljmp
mov
jne
mov
jl
inc
jns
scas
xchg
mov
repz
add
cwtl
adc
mov
jne
sbb
sub
cmp
ja
adc
cmp
aam
in
movsb
xchg
int3
lods
inc
outsl
call
cmp
fdivrs
mov
js
adc
inc
pushf
cli
mov
inc
push
pushf
mov
inc
dec
pop
pop
ljmp
out
jae
sbb
xchg
pop
pop
pop
cld
es
adc
rcl
push
push
dec
xchg
imul
push
aaa
sbb
push
dec
adc
push
rorl
enter
leave
insb
push
jg
jns
jp
addr16
fisttpl
dec
movsl
clc
add
or
inc
add
loop
mov
mov
test
mov
mov
fidivrs
test
leave
inc
push
push
jmp
push
mov
cmpsb
dec
xchg
jns
imul
cmp
sub
fldenv
leave
push
stc
push
jmp
push
mov
cmpsb
dec
xchg
jns
imul
cmp
sub
fldenv
leave
push
stc
push
jmp
push
mov
cmpsb
dec
xchg
jns
push
cmp
sub
fsts
leave
and
push
jmp
mov
pop
jecxz
jns
push
adcl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
add
jb
insb
cwtl
inc
cmp
push
adcb
loopw
rclb
push
push
cmpsb
and
jb
notb
inc
mov
mov
push
mov
loop
rolb
push
mov
ficoml
dec
movb
adcl
xchg
sahf
and
adc
imul
pop
bound
mov
imul
int
minps
mov
fisubs
pop
mul
jnp
dec
iret
pop
inc
ss
leave
pop
stc
jle
or
cmp
jbe
push
adc
mov
sbb
mov
jmp
sbb
lcall
out
rorb
inc
ss
mov
xchg
or
xor
push
int
das
dec
xor
fwait
mov
sbb
xchg
leave
xchg
fldenv
and
xor
into
mov
mov
sahf
lea
ja
andl
jbe
jg
mov
rolb
test
adc
sbb
push
in
je
cmp
in
mov
mov
inc
ret
cmpsb
push
iret
data16
jp
sbb
mov
icebp
das
notl
data16
xor
lret
pusha
into
arpl
sbb
pop
clc
aad
lock
xchg
popa
cli
inc
mov
loopne
and
in
jecxz
out
and
notb
inc
mov
mov
push
repnz
rolb
push
xor
add
push
movb
mov
push
repnz
rolb
push
xor
ret
adc
xor
ss
sub
je
shrl
sbb
inc
sar
push
fidivrs
rcr
pusha
cmpsb
or
xor
out
aad
push
dec
jae
mov
sub
xchg
leave
sub
cmp
sbb
and
dec
in
pushf
inc
sub
mov
sbb
mov
sbbb
dec
loop
or
lods
mov
popa
rolb
dec
jmp
pushf
popf
psrld
dec
lahf
cmp
test
aam
mov
divl
inc
push
repz
inc
fneni(8087
pop
imul
aam
stos
mov
sub
pop
popa
in
movsl
sarl
jae
jecxz
xchg
rolb
fiaddl
stc
loopne
xchg
xchg
sub
inc
outsl
idivl
popa
sub
adc
lret
fnstenv
in
and
mov
enter
test
cwtl
pop
sbbb
adc
mov
fcmovnb
lock
jmp
adc
stc
jp
sub
mov
jg
or
jo
mov
aam
mov
push
jno
mov
andl
or
mov
pop
fisubs
cs
mov
je
push
out
adc
fisubl
xor
xor
nop
ds
in
jb
push
insb
mov
xlat
mov
mov
ss
xor
pop
sbb
pop
test
das
pop
pushf
sub
cltd
jg
fisttpll
pushf
pop
out
cmpsl
imul
repz
inc
out
jo
xorb
jg
sub
icebp
repz
subb
jge,pn
pop
xor
lret
fidivrs
out
nop
into
push
addr16
mov
push
pop
xchg
cld
std
ljmp
imul
and
insb
dec
jne
aas
dec
shlb
popl
jle
cltd
cli
sub
mov
and
arpl
xchg
rcrl
xor
jmp
cmp
dec
adc
cmp
mov
pop
jno
and
lret
pop
mov
jl
pushf
add
int3
dec
insl
pusha
or
inc
loop
fmuls
adc
adc
mov
lds
inc
xor
cld
mov
mov
repz
jns
pop
pop
jecxz
jnp
ljmp
xor
into
adc
lret
xlat
cmp
lods
aaa
adc
rcr
rsqrtps
mov
push
cmp
mov
outsl
and
pop
jno
push
subb
or
mov
mov
fsubrs
lock
cmp
out
or
sub
or
dec
xchg
push
mov
mov
shrb
ret
xor
pop
loope
cmp
push
dec
dec
mov
sub
sub
sub
mov
repnz
popl
dec
and
stos
int3
jne
addr16
cmp
fwait
lods
int
mov
sub
cld
clc
loop
scas
in
sub
add
aas
push
das
fstp
pop
mov
push
jbe
jecxz
cmpb
push
push
xchg
frstors
pop
pop
enter
and
xchg
lods
std
cmc
jno
cmp
pop
ret
pop
sbb
rolb
in
jl
sub
mov
jae
cmp
insl
sbb
mov
and
aad
mov
imul
mov
test
jo
mov
std
mov
sub
adc
repz
xchg
stc
xchg
push
mov
pushf
sti
movsb
adc
push
ficompl
add
mov
add
mov
insb
lock
stc
push
out
pop
and
pushw
mov
fnstcw
fsubl
xchg
xchg
or
xor
or
js
rcll
arpl
dec
mov
in
loope
jl
add
mov
scas
cmp
out
dec
adc
cmpsl
add
addr16
dec
loope
cmp
lods
dec
roll
mov
mov
cli
loopne
dec
add
inc
mov
mov
sub
sbb
or
scas
cmp
fadds
and
push
adc
xor
mov
xor
notb
jb
push
dec
imul
pop
jno
hlt
inc
pushf
mov
out
mov
pop
add
dec
test
mov
mov
pop
sub
push
pop
test
xlat
xchg
dec
in
jae
jno
mov
cmp
pop
jmp
lahf
cld
bound
sbb
fdivs
lods
clc
roll
sbb
movsb
pop
xchg
pusha
jp
icebp
add
dec
lret
push
ret
clc
pop
iret
sub
test
and
fisubrs
lea
sbb
jae
scas
test
push
cmp
push
in
mov
dec
push
outsl
fdivrs
repz
sbb
out
shll
js
repnz
or
das
orb
cmp
adcl
mov
xchg
aam
outsl
dec
mov
dec
test
sub
lock
xchg
push
cmpsl
mov
cltd
out
fidivs
decb
pusha
andnps
std
cmpsl
add
cltd
inc
mov
clc
jl
jg
sub
je
jecxz
repnz
out
arpl
or
outsl
pop
aam
clc
repz
aaa
hlt
jl
call
les
iret
xchg
push
inc
fistpl
add
push
xchg
shrb
leave
ja
sahf
stos
sahf
imul
loop
adcl
xor
xor
jns
or
dec
outsl
scas
int
adcl
add
mov
cli
push
mov
dec
addr16
sub
shll
cmp
cmp
mov
xor
jmp
fldt
imul
jmp
add
cwtl
aam
or
lahf
jbe
xchg
outsb
nop
mov
adc
roll
sbb
push
pop
pop
pop
xchg
add
je
int3
push
jns
cmp
sbb
mov
sub
mov
loop
dec
fwait
sub
in
mov
icebp
bound
ljmp
syscall
and
lods
jno
xorl
xchg
pop
jecxz
sub
push
cmp
adc
dec
jae
repz
and
dec
stos
mov
aam
popf
inc
dec
push
jae
pusha
lods
ret
pop
cld
daa
sbb
push
xchg
pminsw
cs
jle
js
jge
popf
jbe
rclb
aad
arpl
or
fildll
repnz
dec
adc
mov
out
pop
mov
ret
lea
sub
shrb
jnp
ljmp
in
stc
inc
cs
jnp
gs
inc
cmp
pusha
xchg
xchg
int
xchg
mov
mov
push
add
ljmp
add
ds
xchg
mov
jns
dec
xchg
xchg
push
cmp
sarb
cmpb
push
mov
xchg
loop
xchg
leave
xor
je
inc
sub
cltd
dec
xor
pop
arpl
adc
mov
ss
jne
mov
push
push
lods
add
jo
ljmp
cwtl
imul
jno
and
insl
sbb
add
sbb
out
push
js
ljmp
jae
push
es
out
nop
stos
inc
mov
outsb
cmc
cmc
push
cmp
adc
and
xor
je
call
fistps
pusha
inc
lret
cmc
sub
pop
lock
stos
push
popf
jl
xcrypt-cbc
cmpsl
xchg
test
mov
leave
mov
popf
stos
sub
mov
jo
outsl
dec
daa
push
mov
jg
iret
rol
fnstsw
pop
push
inc
mov
mov
clc
fsubl
or
xor
pop
adc
repz
out
test
icebp
and
mov
push
dec
sub
stos
cmp
jle
mov
pop
and
adc
outsl
ja
or
imull
popa
test
es
mov
shrb
ret
outsb
outsb
ljmp
xchg
pop
mov
iret
inc
cli
xor
rolb
push
inc
mov
xchg
xchg
cmp
std
xchg
stos
cmp
mov
sbb
sub
sbb
ja
sbb
or
cltd
out
aaa
outsl
pushf
dec
loopne
movsb
push
push
mov
sbb
clc
inc
xorb
out
lcall
inc
mov
in
inc
in
loop,pn
jl
sub
data16
pslld
and
je
mov
fadd
stos
dec
pop
push
add
iret
push
stos
bound
iret
sahf
mov
ret
rcrb
ror
cmp
mov
in
shlb
shll
cmpsb
clc
fsubl
lcall
out
mov
jmp
ss
cmpsl
adcl
xchg
jmp
mov
mov
out
inc
xchg
or
stos
mov
or
or
push
cmp
mov
ss
jae
xchg
jae
jp
jae
pop
out
outsl
add
cli
xor
ret
sti
mov
jb
iret
mov
movups
or
xchg
outsb
push
add
fcomp
js
jp
xorl
dec
cmpsl
mov
je
daa
fadd
cmp
test
xor
cmc
dec
push
or
out
pop
adcb
cmp
test
xor
xor
ja
pop
fcmovu
sbb
xor
testl
pop
cmp
inc
inc
call
pop
lahf
pop
mov
stos
cmpb
mov
mov
dec
arpl
jo
arpl
mov
orb
jle
les
push
xor
add
xor
in
xchg
data16
inc
xchg
push
sti
inc
imull
bound
dec
inc
decb
jo
repnz
xchg
in
sahf
jmp
in
xorb
jge
mov
inc
loopne
fs
push
push
scas
cmp
push
aam
xchg
jp
jge
sbb
push
adcb
mov
mov
and
dec
std
bound
inc
xchg
mov
ja
xor
stos
cwtl
cmpb
fs
aaa
ret
ss
dec
test
and
push
insl
int
je
xor
out
push
adc
je
mov
out
xchg
leave
sar
lock
adc
add
push
fs
mov
jb
stc
push
enter
mov
ss
out
jo
cmp
inc
and
mov
test
sub
push
rorb
pop
shll
ret
addr16
dec
mov
pop
sbb
sub
sub
hlt
js
repnz
jl
jbe
sbb
lods
ret
xor
jge
popa
push
jp
and
hlt
pop
inc
fwait
xchg
ret
std
mov
xor
xlat
js
mov
sbb
outsl
les
fistl
xor
push
scas
stos
dec
popf
inc
gs
adc
int
push
flds
jge
sahf
out
inc
hlt
dec
pop
sti
fsubl
and
popa
pushl
cmpsb
jns
pop
test
rcr
ja
xchg
xchg
iret
repz
hlt
into
jbe
dec
out
xchg
lds
dec
add
jle
xchg
mov
adc
dec
jmp
xor
sub
pop
inc
ljmp
fdivrs
sbbb
xchg
pop
popf
and
jle
popa
pop
dec
cmp
repz
add
sarb
mov
lcall
pushf
mov
push
pop
adc
xor
mov
lahf
outsl
fistps
pop
pop
cld
jne
fs
jns
les
mov
ficoms
aaa
or
ja
and
incl
push
rol
inc
ss
xor
int3
outsl
push
cld
and
sub
push
add
xchg
call
das
subb
xor
int
push
jecxz
cmp
inc
adc
rcrb
lcall
cld
mov
cmpsl
movsl
mov
ja
test
mov
leave
mov
pop
lods
sub
stos
stos
pop
mov
iret
xor
inc
lds
adc
add
fidivl
push
dec
mov
ja
sarb
jge
fsincos
pop
shrl
sbb
mov
lods
push
mov
lods
fidivs
xor
sbb
inc
cmp
and
test
in
adc
mov
mov
jmp
push
icebp
pop
test
adcl
add
imul
lods
lea
xchg
and
movsl
in
dec
pop
jge
scas
and
test
daa
jnp
push
xor
cmp
ja
jo
andl
inc
js
inc
stos
inc
pop
cmpsl
pushl
xchg
addr16
aad
decb
mov
fucomi
add
testb
jmp
aam
sarl
mov
lea
lock
mov
xor
daa
fucomp
popa
addr16
push
xchg
mov
mov
in
fldl
push
and
inc
pop
jbe
out
lret
int3
dec
aas
push
mov
fs
xor
mov
or
repnz
cmp
pop
pop
es
xor
insb
pop
cs
imul
sbb
push
fdiv
mov
adcl
pop
cwtl
arpl
sahf
sbb
jae
enter
insl
adc
arpl
bnd
loop
mov
mov
dec
icebp
jno
and
fldcw
pop
and
out
jo
inc
xor
pop
xchg
icebp
push
and
fldt
jo
sbb
adc
in
mov
stos
aaa
pop
mov
add
icebp
movsb
mov
ss
push
sub
sub
ss
mov
add
or
pop
in
pop
mov
pop
mov
xor
call
cmp
sub
daa
xor
adc
pop
sub
popa
jne
movl
push
mov
fbstp
imul
daa
sbb
push
testl
mov
xor
jg
cltd
xlat
dec
xor
cld
inc
pop
adc
jecxz
aam
mov
push
jg
gs
xchg
push
sbb
aas
call
adc
lret
jbe
push
pop
push
movsl
outsb
mov
enter
and
ficomps
jb
gs
or
jmp
movsb
push
and
dec
sbbl
stos
testl
sub
cmc
mov
aad
mov
sahf
cmpsb
push
insb
add
imul
jnp
addb
aas
and
jecxz
imul
dec
popf
jp
adc
in
xchg
pop
sti
ret
push
mov
cmpsl
gs
nop
sahf
jp
add
or
daa
repz
int
jge
cwtl
dec
push
xlat
stc
xor
pop
rorb
xor
or
test
test
jnp
call
mov
lret
sub
sbb
dec
push
mov
imul
jg
or
xor
imull
clc
or
in
sub
out
ds
stos
cmp
push
inc
fistpl
push
enter
push
or
int
fadd
imul
test
fsubs
lock
add
adc
pop
out
in
mov
add
mov
jb
and
rcl
frstor
sub
in
push
xor
sbb
fstl
xchg
daa
addr16
sbb
mov
push
or
mov
mov
cs
mov
and
pop
movsb
fwait
ljmp
cs
push
mov
clc
mov
ret
xchg
xor
cwtl
cli
add
test
icebp
pop
push
mov
inc
dec
jae
push
mov
mov
std
gs
jecxz
iret
mov
sahf
fwait
ds
sbb
and
mov
fsts
and
js
loope
imul
mov
rcrl
ljmp
and
jne
xchg
or
stc
pop
daa
add
cmpsb
xor
jnp
movsl
xor
inc
or
pop
jmp
xchg
nop
dec
mov
jae
jb
popa
je
mov
mov
cli
and
sbb
push
rolb
out
mov
push
fwait
nop
xchg
add
aam
and
mov
sub
adc
dec
pop
xor
adc
push
cmp
xor
cld
es
xor
jo
mov
clc
add
out
mov
xor
mull
cltd
scas
jp
ret
xchg
push
test
jae
pop
push
negl
mov
mov
in
jmp
sub
inc
pop
div
popf
leave
cmp
mov
scas
mov
lcall
je
fidivs
cli
into
stos
mov
loope
cmp
out
push
mov
aas
adc
mov
gs
test
pop
test
loopne
dec
or
and
push
jp
inc
adc
add
fdivp
sub
movsl
outsb
fcomps
push
daa
adc
pop
mov
inc
cs
aaa
jg
jmp
pusha
jae
dec
mov
out
mov
outsl
cwtl
fisttps
ss
fmull
sahf
shlb
lcall
xchg
and
pop
and
lret
xchg
popf
adc
add
mov
imul
pop
dec
sub
fnstsw
cwtl
mov
fcmove
ljmp
sahf
pushf
int
insb
mov
sbb
shll
mov
cmp
shrl
cmp
fcmovnu
int
xchg
mov
xor
mov
mov
in
jp
roll
cmp
scas
adc
sub
inc
out
lret
repnz
scas
or
cmp
inc
add
push
mov
fists
lcall
mov
push
into
sbbb
cmc
cmpsl
mov
mov
or
aaa
dec
cmp
scas
or
dec
xchg
inc
in
test
mov
loop
pusha
outsb
in
dec
scas
push
sub
dec
xchg
mov
sbb
adc
push
loopne
in
notb
mov
loopne
mov
push
cmp
aaa
xor
pop
inc
add
inc
dec
shlb
in
sbb
jecxz
fimull
shr
adc
fstps
outsb
stos
ds
cmpsb
out
xchg
loope
scas
or
lret
mov
jp
sbb
mov
addr16
roll
dec
dec
or
enter
mov
mov
in
xchg
out
shll
imul
push
add
aad
int
adc
mov
cmpsl
pop
sbb
not
cmp
push
jg
lret
mov
push
mov
adc
stos
mov
fldt
add
cmpsb
mov
lds
lcall
hlt
xchg
sub
mov
fwait
add
sbb
outsb
mov
jb
ret
jecxz
scas
mov
popf
insb
stc
popa
outsb
sub
dec
test
mov
movsl
jge
jo
xor
cmp
cmp
lret
xchg
push
ret
jnp
pop
mov
push
test
pop
in
pop
cmp
lods
aaa
inc
pop
or
aaa
or
sub
xchg
pop
stc
movsb
out
dec
jg
fwait
pusha
btc
push
dec
dec
xchg
aaa
sbb
stos
ds
dec
jb
mov
dec
addr16
dec
ljmp
xchg
js
push
daa
ret
sub
loopne
xor
repz
inc
push
in
jge
cltd
dec
sarb
cmp
sub
sar
jg
out
inc
sarb
xorl
dec
divl
addr16
sarb
andl
inc
mov
jmp
mov
insl
pushf
push
dec
mov
sub
cmp
adc
add
mov
jne
scas
mov
dec
xchg
xor
test
lahf
lock
loopne
xchg
sbbl
imul
mov
inc
add
push
xor
and
sbb
push
outsb
scas
push
cmp
add
inc
cltd
mov
or
sub
mov
mov
and
pop
push
jmp
xchg
subl
testb
movsl
sub
jno
cmp
xor
adc
inc
xchg
pop
scas
dec
or
or
movsl
adc
mov
imul
sbb
and
je
pop
xor
mov
lea
cmc
iret
addr16
adc
mov
iret
in
mov
imul
in
ret
dec
imul
mov
aas
xor
std
jno
sbbb
dec
jle
lret
int
jns
repnz
xor
push
xchg
cmp
mov
in
cmp
movb
dec
out
dec
jo
push
lods
ds
jmp
xchg
and
leave
pop
divb
cltd
jae
fdivl
cli
hlt
test
jl
add
pop
jae
dec
push
mov
in
mov
aam
push
divl
or
inc
xlat
lods
js
mov
xor
je
add
push
push
decb
jnp
into
std
iretw
dec
mov
test
dec
push
jae
xor
out
xchg
jle
cmp
push
lahf
or
mov
pop
icebp
pushf
mov
push
mov
xchg
stos
mov
mov
lea
xchg
je
xor
aam
xor
mov
xlat
inc
into
jle
out
jmp
sbb
mov
lods
jbe
out
mov
push
lcall
add
cmp
enter
sbb
sbb
mov
jge
aad
xor
popf
scas
jmp
enter
stos
jecxz
fmull
aas
adc
lods
dec
jnp
lock
inc
movsb
gs
and
xchg
aad
pop
aad
test
xor
and
pop
mov
lret
rolb
ja
outsl
les
addr16
std
sub
dec
leave
mov
call
lret
pop
stos
sahf
js
lret
push
jmp
in
pop
dec
cmpsb
inc
and
jp
aas
sub
andl
outsb
cltd
loopne
stos
call
rcrl
jne
lds
cld
cmp
push
mov
xchg
xchg
jb
notb
inc
mov
mov
push
repnz
rolb
push
xor
add
push
movb
mov
push
repnz
rolb
push
xor
add
push
movb
bound
adcb
data16
inc
sub
cmpsb
jle
dec
xchg
xchg
jb
jb
push
mov
mov
pop
pushf
cmp
andb
push
sub
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
in
cmc
pop
cmp
add
mov
movsl
gs
lds
adc
in
cmc
push
test
jne
rcll
movsl
jne
ja
pop
cmc
and
add
in
push
pushf
inc
lea
gs
xchg
inc
test
sbb
add
push
mov
mov
xchg
adc
inc
sahf
pop
push
lahf
pop
sbb
divb
std
aad
js
movsl
dec
sahf
lds
movsl
jg
shll
xchg
dec
arpl
and
hlt
aad
int
pop
mov
or
push
mov
xchg
inc
out
push
dec
bswap
mov
dec
lods
nop
and
add
inc
sbb
mov
or
stos
cmp
lods
nop
cmc
and
pop
sbb
loopne
lods
fldl
popf
sub
pop
pop
movl
jb
lds
je
in
sub
loopne
jmp
daa
lea
dec
rolb
cmc
push
test
jne
lods
xchg
inc
test
jl
insb
aad
lds
push
lds
addb
xchg
adc
and
aam
adcl
pusha
lods
pop
mov
mov
push
lods
ja
gs
inc
lcall
gs
xor
ja
jne
adc
jl
popa
aad
andl
jne
gs
inc
test
movsl
jne
add
in
adc
in
cmc
push
test
jne
gs
inc
test
movsl
jne
add
in
adc
bound
testl
fdiv
test
pop
hlt
je
xor
jl
in
and
cmpsb
test
fldl
scas
or
sub
call
dec
add
xor
in
cmp
cmpsb
in
pop
mov
inc
cmp
in
aad
pop
scas
std
inc
rol
adc
push
pop
movsb
jne
fstps
sbb
cmp
in
cmc
jmp
sub
lods
jnp
sbb
fisttps
fadds
or
jb
xchg
pop
enter
sub
adc
xchg
inc
and
xchg
push
loop
push
int3
test
sbb
xchg
jae
repnz
cmp
testl
mov
xchg
pop
fstpt
bound
nop
sub
mov
fs
add
cmc
std
add
jecxz,pn
xchg
ja
pushf
add
cmp
test
xor
ds
mov
sbb
int3
adc
daa
rorl
sbb
daa
xor
mov
andb
cmp
enter
neg
jmp
nop
test
adc
jae
sahf
test
cli
push
cmp
add
cwtl
or
adc
sti
pop
call
jmp
ja
cmp
sarl
adc
push
dec
cmp
loope
movsl
mov
cmp
shrb
xor
inc
lcall
jmp
fwait
mov
or
mov
jmp
hlt
jecxz
das
mov
roll
lock
inc
and
mov
outsl
xor
outsl
ror
test
mov
jae
push
mov
dec
mov
xor
gs
pop
push
data16
aam
and
test
sub
push
jae
out
add
ja
lea
clc
pop
popf
inc
int
imul
mov
ljmp
in
sti
or
loopne
add
gs
adc
test
add
ljmp
sbb
outsb
mov
out
popa
popa
inc
xlat
xor
mov
pusha
cs
ret
in
in
pop
lahf
xchg
test
lahf
pop
and
js
rorl
fmull
push
jb
fxch
gs
std
cmp
cmpl
test
insb
leave
adc
push
outsb
out
or
mov
test
int3
mov
dec
sub
mov
fisubrl
mov
int3
mov
jg
push
pop
je
inc
ja
mov
and
sub
pop
push
mov
test
mov
test
add
mov
and
cmp
jge
pop
adcl
loope
pop
add
lds
cmp
fistps
mov
lds
cmp
mov
pop
ljmp
data16
sbb
push
jmp
push
ss
jns
mov
sbb
mov
aam
sub
fmuls
pop
sbb
cmpsb
xchg
add
imulb
stos
out
inc
inc
lods
cmpl
lods
cmp
inc
in
mov
mov
fstps
xchg
mov
xchg
adc
shrl
pop
fists
in
daa
cmc
mov
jl
xchg
int3
push
fistl
and
push
das
and
xchg
jne
inc
cmc
jl
xor
push
out
pop
jns
sbb
nop
inc
mov
adc
roll
lret
inc
inc
or
sbb
into
std
fadds
or
xor
adc
jo
adc
sbb
push
stos
ss
repnz
dec
cmp
xchg
int3
mov
faddl
jl
xorb
enter
mov
push
jmp
xchg
push
mov
and
lds
rcrb
dec
xchg
adc
or
push
push
fdivs
lahf
push
in
in
inc
dec
hlt
stc
cmp
cmp
lock
ljmp
cmp
mov
mov
aad
divb
push
mulb
popa
jmp
sub
movsl
or
pusha
dec
pop
dec
and
repnz
inc
push
dec
xchg
aad
add
lret
or
fistpl
dec
ficompl
cmp
mov
cld
mov
cmp
sbb
inc
inc
or
add
push
out
and
adc
push
cmp
xchg
cmp
cmp
dec
jecxz
dec
adcb
cmp
out
adc
pop
mov
jbe
les
mov
enter
pushf
lcall
inc
mov
inc
cli
imul
popf
sbb
stc
xor
out
mov
xlat
adc
xchg
cmpsl
mov
shlb
fwait
push
inc
scas
in
test
inc
fcomps
movb
out
sub
inc
adc
or
push
jg
xor
ret
cmpsb
and
xor
ret
cmp
inc
jnp
jge
movsb
out
scas
pop
sti
mov
sbb
push
lahf
pop
push
jns
sub
stos
insl
or
dec
test
fxch
lock
jg
or
test
xchg
bound
dec
add
shrb
out
cmpl
jl
add
pushf
aaa
mov
out
adc
xor
sahf
gs
pop
mov
adc
dec
sarb
sub
add
adc
jo
or
iret
arpl
dec
sbb
pop
xchg
rol
loop
lods
frstor
mov
dec
xorl
mov
nop
das
ja
imul
xlat
inc
clc
add
cmp
cmp
push
xchg
push
dec
fsqrt
lea
lods
xchg
mov
dec
pushf
mov
xchg
inc
dec
pop
push
mov
adc
inc
leave
inc
inc
xor
in
sub
pop
repz
lods
push
jne
mov
jnp
stos
mov
mov
pop
and
cmp
fisttps
scas
lret
iret
int
stc
inc
mov
jp
nop
pop
jne
lcall
xchg
jl
movsl
loopne
and
jbe
pop
or
inc
fdivrl
aaa
add
arpl
popf
xor
sarb
shll
enter
adc
dec
popa
and
arpl
nop
scas
jb
pop
cmp
and
inc
ja
cmp
adc
int3
mov
mov
hlt
jnp
das
adc
ret
and
fldcw
mov
cs
and
fisttps
out
lahf
shrl
add
es
test
ja
push
cmp
push
and
sbb
clc
movsb
stos
add
jle
loop
adc
sbb
clc
mov
test
xor
and
or
adcl
leave
mov
sub
xchg
in
fimull
clc
test
mov
ds
subb
enter
daa
and
adc
mov
leave
sahf
bound
push
add
rclb
and
or
into
mov
daa
xor
lret
bound
js
add
sbb
insb
lret
cld
fisubrs
out
xor
mov
scas
stos
rorb
pop
xchg
mov
test
mov
xchg
jmp
pop
imul
pop
popa
jmp
popf
inc
jno
shl
jo
mov
xchg
enter
push
jbe
push
fistpl
stos
cmp
aas
cmc
in
pop
orl
mov
mov
xor
aaa
jb
lret
dec
or
dec
xor
faddl
cmp
jmp
adc
sub
push
popa
in
clc
lock
insb
jnp
ret
aaa
add
lods
adc
adc
xor
push
rolb
testb
fdivs
sub
movsl
inc
fists
mov
decl
inc
and
mov
data16
push
jb
jb
mov
mov
ficoml
mov
call
in
inc
pop
icebp
jae
dec
dec
jne
cmp
aaa
lea
sbb
jb
pushf
pop
pop
fs
mul
cwtl
adc
adc
lds
stos
in
adc
xchg
inc
ret
call
add
data16
dec
in
mov
jge
pushf
fldt
sbb
adc
ljmp
cmp
cmp
cli
sbb
inc
aad
lcall
popa
jp
and
fistps
clc
jle
jnp
aas
fcomps
pop
test
sahf
jp
jno
mov
fmull
shl
les
mov
es
mov
inc
in
loope
lea
sub
sbb
push
xchg
stc
mov
xchg
dec
pop
cmp
pop
mov
imul
jg
ja
mov
lahf
inc
xor
imulb
push
mov
icebp
jb
test
mov
roll
sarb
lds
js
lock
add
fisubrs
mov
jl
pusha
in
push
je,pn
cmp
and
adc
fdivr
or
ret
jle
inc
leave
adc
ficomps
mov
and
mov
icebp
loop
lcall
outsl
scas
mov
or
pop
insl
push
xlat
mulb
sbb
jg
std
cmp
lods
enter
cli
out
mov
iret
test
movsb
js
add
jae
pop
lret
and
and
mov
rolb
xchg
test
int
cmp
push
lahf
test
jecxz
sub
cmp
inc
xlat
sahf
repnz
out
mov
leave
mov
xchg
stos
orb
sbbl
mov
mov
into
sub
dec
push
cmp
mov
mov
cltd
add
mov
mov
and
and
mov
mov
adc
incb
stc
aaa
xor
outsb
cmp
roll
loopne
cmp
mov
rcrl
into
cs
mov
and
mov
or
mov
sbbl
jp
dec
out
movsl
leave
fdivrl
stos
fisubrs
cmp
sbb
cs
lods
push
lock
daa
loopne
and
inc
and
mov
dec
sbb
add
add
add
fwait
out
int
cmp
xchg
mov
jp
jno
pop
sbb
and
popf
inc
sbb
or
outsb
push
and
jb
les
in
sub
mov
mov
ss
jne
aam
xchg
sar
jae
fisttps
xchg
ljmp
adc
ret
sbb
mov
clc
pop
lcall
and
mov
xlat
adc
mov
jle
pop
mov
test
push
jge
out
xchg
ss
es
das
data16
aaa
push
sub
pop
fs
imul
xor
aas
fwait
xchg
lock
xchg
js
cli
inc
sahf
xchg
adc
and
cs
dec
scas
je
and
ficompl
hlt
daa
lds
push
in
icebp
mov
popa
loopne
pop
enter
xchg
lods
or
out
or
fimuls
xor
inc
test
fidivs
test
xlat
icebp
jbe
xchg
scas
push
pop
sbb
push
cmp
ja
in
mov
int
and
movb
fcmovnbe
sti
mov
cmc
stos
push
xor
mov
xchg
mov
aaa
daa
mov
cmp
sub
dec
jge
xor
pushf
ret
mov
pusha
jns
out
adc
in
push
out
test
js
or
cmp
cmp
mov
mov
cmp
faddl
mov
out
les
das
push
iret
aam
and
cmpsl
inc
sub
addb
leave
pop
xchg
sbb
push
push
imul
sbb
xchg
cld
sahf
or
dec
mov
push
in
xorl
incb
pusha
loop
subl
and
mov
jmp
mov
out
adc
jle
or
pushf
ss
cmp
sbb
push
mov
sbb
cs
jle
pusha
dec
dec
xchg
mov
sub
fmuls
mov
jmp
jns
sbbl
pop
add
pusha
mov
sti
sbb
push
mov
shll
out
add
xor
fwait
pushf
and
xor
jp
mov
test
in
cld
loop
pop
roll
out
adc
jno
fwait
adc
push
sbb
jl
or
sti
out
fistl
lret
cmc
fstpt
mull
clc
lcall
das
cmp
inc
push
cltd
leave
pop
pusha
add
leave
add
inc
outsb
and
mov
xchg
jns
sbb
cmp
inc
out
dec
dec
fnstsw
ret
cmp
mov
xor
outsb
ds
pop
les
lret
ret
nop
imul
push
inc
mov
xchg
sbb
pop
ret
in
jmp
adc
mov
pop
adcl
leave
lahf
jecxz
aad
and
outsl
xchg
jns
aas
xor
data16
aad
xchg
bound
or
or
loop
jbe
inc
in
bound
cmp
cwtl
inc
push
icebp
ds
sarl
sub
pop
mov
cli
mov
sub
xchg
jno
pusha
mov
arpl
pop
in
cli
sbb
sub
add
dec
punpcklbw
lods
aas
inc
jns
or
cli
xlat
cli
and
push
pop
mov
add
sub
popf
mov
jl
into
push
adc
add
sbb
mov
lahf
sbb
outsb
jg
adc
rolb
and
cmpsb
shll
shlb
mov
dec
pop
and
fsubrl
pop
xchg
sub
pop
mov
jle
imul
mov
pop
cli
loopne
iret
pop
jns
scas
test
dec
jecxz
pop
data16
push
repnz
xlat
in
dec
pop
xchg
dec
dec
movsl
sub
dec
fldt
adc
hlt
ret
push
mov
fcomps
mov
insb
outsl
add
jnp
sbb
insb
sub
das
cltd
es
ja
jmp
push
sbb
pop
push
movsb
stos
sub
addr16
cmpb
ljmp
lret
inc
data16
mov
sbb
loope
fs
fbstp
pop
mov
stc
icebp
sub
mov
sub
xorps
fisubrl
push
rcr
insl
inc
in
cs
mov
frstor
xor
test
loop
sub
push
jl
loope
jecxz
xor
int3
in
out
push
or
inc
outsl
fwait
das
into
pop
sbb
fdivrp
fcomp
push
or
jns
push
aas
ja
pop
loope
push
mov
scas
stc
mov
shr
popf
adc
cmp
sub
pop
ret
push
insb
or
aas
pop
or
pop
mov
adc
adc
pop
mov
lcall
adc
mov
mov
and
shll
in
xchg
push
jle
mov
sarl
pop
fs
mov
jmp
loop
or
cmp
outsl
ss
sahf
push
loope
mov
bound
cmpsl
inc
dec
cmc
lods
push
xor
pop
push
push
iret
fcmovu
leave
push
jl
mov
cmp
mov
add
mov
shll
push
mov
je
aam
mov
xor
mov
in
dec
out
mov
sub
dec
mov
mov
xchg
xchg
js
xchg
xchg
addl
pop
mov
addr16
shl
sbb
ds
mov
push
out
add
mov
sbb
xorb
lods
push
add
les
in
fidivrs
mov
mov
cwtl
lock
loope
jo
xchg
jae
mov
std
rcrl
mov
sub
fimull
call
mov
xchg
lret
out
aas
push
mov
idivb
arpl
mov
jp
pop
pop
movsl
push
dec
pop
adc
clc
inc
push
pop
stos
push
cmpsl
frstor
outsl
fs
cmp
jl
cmp
pop
jecxz
and
outsb
out
ror
orl
fwait
lea
push
sub
mov
push
lea
push
js
and
adc
jmp
jnp
nop
xchg
repz
aam
aad
jg
stc
pop
add
out
xchg
jecxz
mov
mov
js
mov
int3
pop
imul
stos
or
sub
jne
cmpsl
movsb
and
loopne
lods
scas
push
xor
ffree
jecxz
cs
pop
lret
cmp
hlt
adc
sbbl
mov
out
mov
fidivs
push
cmp
pop
nop
xchg
into
in
fs
xchg
pop
mov
lods
hlt
gs
sbb
mov
inc
pop
xchg
or
jae
dec
shrl
cltd
xchg
mov
sub
add
xchg
sbb
aaa
cmp
aas
or
sbb
aaa
loopne
mov
sbb
rol
and
pop
add
sbb
add
and
push
push
add
sub
or
xchg
add
repz
xor
cmpsb
movhps
inc
add
lods
mov
int3
and
pop
sahf
jmp
inc
jbe
leave
jns
ss
jno
xlat
pop
cmp
mov
push
and
ret
lods
lret
or
xor
aas
cmpsb
ja
mov
and
mov
daa
jmp
dec
mov
inc
scas
jae
or
push
roll
adc
inc
push
cmc
call
lret
pop
cmp
sbb
in
daa
or
shrb
dec
jae
jnp
jae
dec
mov
nop
jns
sub
add
push
adc
ret
shrl
int
mov
mov
push
xchg
lret
inc
cmp
push
in
adc
xor
jp
mull
push
mov
fbstp
or
stc
push
andb
gs
hlt
popa
mov
inc
mov
push
fldenv
pop
push
out
cmp
pop
adc
mov
inc
lret
adc
inc
arpl
movsb
out
ja
jne
jecxz
sub
addl
mov
inc
fisttpll
and
dec
outsl
gs
fwait
push
in
fwait
test
movsl
adc
movsl
add
fmuls
xchg
out
lahf
cltd
repz
and
test
push
cli
jmp
mov
push
sub
sub
pop
arpl
push
pop
int
fsubrl
jb
in
ss
inc
ret
adc
arpl
cmpsb
push
push
in
fs
jae
xor
push
jb
imul
jmp
iret
sarb
push
jns
loop
cmp
jnp
ficoms
aam
add
lock
jle
out
pop
xchg
outsl
xchg
fcoms
les
sahf
loope
fwait
xor
mov
xor
add
mov
mov
in
mov
xchg
jno
dec
push
push
lret
roll
sbb
xor
popf
inc
inc
inc
pop
sub
push
imul
lret
mov
mov
lods
add
push
xlat
push
fwait
cmpsl
lahf
cmp
cmp
dec
movsb
mov
xor
jg
insl
inc
aam
mull
jnp
sarl
into
addr16
aad
shrd
test
inc
jl
cmpl
test
adc
cmpsb
inc
ds
enter
outsb
lds
push
xor
mov
jno
dec
loop
mov
daa
pop
xchg
and
sahf
add
enter
and
aaa
cmpsl
es
push
and
mov
push
dec
add
add
or
cmp
adc
in
test
pushf
mov
mov
xlat
push
in
fdivrl
ss
push
ss
inc
push
adc
bsr
inc
jnp
dec
lods
xchg
cmp
movsl
sbb
sub
shlb
hlt
ss
out
in
mov
imul
xchg
pop
fimull
add
imul
outsb
dec
fwait
sahf
int3
adc
jg
repnz
mov
xor
pusha
xor
xchg
dec
dec
mov
ret
mov
xor
xchg
xor
jge
out
sub
pop
jo
mov
stc
mov
mov
sarb
xchg
aas
xchg
cmc
jmp
jae
add
xorb
cltd
mov
scas
in
orb
xor
adc
add
cld
fs
mov
int3
fcoms
imul
push
add
repz
sbb
mov
push
mov
mov
out
sbb
or
repz
aaa
sbb
pop
insb
sbb
inc
and
mov
pop
int3
shrl
scas
sub
inc
std
mull
arpl
sahf
sbb
sbb
cltd
or
cld
mov
scas
jae
adc
push
iret
sub
and
pop
jae
xchg
push
push
mov
jecxz
or
insl
sub
push
mov
adc
cmpsl
jle
or
adc
fld
jge
sbb
cltd
insb
in
out
add
fstl
lock
add
std
inc
mov
push
jb
push
in
addr16
lret
adc
mov
mov
leave
pop
out
subl
cwtl
hlt
subl
movsb
mov
shlb
std
cwtl
pop
dec
push
outsl
je
daa
mov
mov
xor
ja
bnd
std
lret
mov
iret
aas
cwtl
jge
pop
xor
push
loope
push
jge
mov
aam
xchg
and
mov
lea
or
inc
pusha
mov
push
sub
fcomps
lahf
mov
loopne
adc
lea
mov
adc
pop
test
lret
es
sub
stos
leave
jae
pop
fnstcw
xchg
mov
sub
addr16
mov
mov
sbb
iret
cmp
fdivl
outsb
mov
pop
cmp
insl
inc
jae
mov
cltd
mov
imul
scas
cmp
cwtl
shrb
mov
dec
dec
ret
mov
xor
add
jmp
cwtl
push
dec
lret
gs
int
ret
mov
outsb
or
xor
data16
lahf
push
lcall
add
cmpsb
iret
jle
sub
sub
and
out
stc
adcl
xchg
icebp
cmp
popf
in
lcall
mov
and
scas
iret
clc
mov
sbb
in
cld
push
xchg
jnp
mov
sbb
repz
pop
std
cmc
cli
out
xlat
mov
testl
and
xchg
jne
gs
inc
test
movsl
jne
add
in
adc
in
cmc
push
test
jne
gs
inc
test
movsl
jne
add
in
adc
in
cmc
push
test
jne
gs
inc
test
movsl
jno
add
in
adc
loope
cmc
push
test
jne
gs
inc
test
pop
movsl
add
pop
sbb
lahf
rorb
mov
mov
push
pop
inc
aas
pusha
das
adc
lret
and
lahf
rorb
filds
out
push
pop
inc
outsl
adc
pusha
das
adc
dec
xor
rorb
filds
out
push
mov
movups
das
jae
imul
mov
shlb
sub
and
inc
pop
jg
xor
addr16
lods
test
dec
jne
pop
xor
stc
aad
and
ds
mov
cmp
fdivrs
push
mov
ret
xchg
push
or
cmp
adc
lcall
mov
gs
mov
or
jae
scas
nop
fisubrs
inc
les
jg
xor
sub
sub
cmp
push
js
mov
mov
mov
pop
and
pusha
out
inc
dec
push
loop
or
jo
fldenv
jo
dec
inc
dec
mov
scas
push
syscall
das
in
cs
add
lahf
rorb
filds
out
push
pop
inc
pshufw
das
adc
dec
xor
push
movsb
lock
shll
lds
pop
push
add
fs
cmp
jge
cs
lahf
orl
xchg
in
mov
fsubr
add
jp
pop
add
and
sbb
aas
cmpsb
out
fcoml
filds
out
push
pop
inc
pshufw
das
adc
dec
xor
outsl
rcrb
loopne
nop
filds
out
push
pop
inc
pshufw
das
adc
dec
xor
outsl
rcrb
mov
jecxz
mov
adcl
cmpsb
cmp
dec
or
sbb
stos
inc
int
inc
lods
pop
adc
mov
xchg
js
mov
enter
jae
sub
std
or
inc
arpl
jno
push
arpl
cmp
icebp
xchg
or
mov
sti
sbb
inc
fists
mov
movsl
mov
clc
jno
out
pop
mov
stc
inc
gs
into
int
xor
lock
lret
mov
ret
dec
pop
lock
movsb
push
mov
test
mov
icebp
outsb
adc
movl
push
cs
dec
cltd
mul
popf
mov
lcall
mov
lds
fstps
fnstsw
xchg
mov
je
mov
inc
out
xchg
idivl
inc
adc
out
fstl
xor
int
xchg
cmp
push
adc
andl
xchg
jmp
fistpll
add
int3
push
repnz
in
fdivrl
cmp
test
sub
repnz
cmp
das
cwtl
in
lret
push
addr16
cli
push
mov
divl
cmp
xchg
lahf
icebp
test
dec
or
dec
adc
pop
xchg
loope
pop
sub
ret
movsb
jns
lock
lret
insb
aam
rcrl
jb
sbbl
movsb
mov
push
inc
sbb
in
aaa
adc
jae
add
cmp
xchg
enter
lods
std
dec
jbe
mov
stos
inc
sbb
shlb
nop
in
jns
cmp
lods
sti
adc
mov
sti
cmp
roll
and
int
rcrl
jbe
popa
loopne
cli
xchg
cmp
in
mov
movsb
xor
push
rolb
pop
sub
sbb
test
mov
stos
jns
sti
sbb
or
dec
negl
in
addr16
scas
dec
sbb
jmp
arpl
inc
shll
inc
fcompl
shr
mov
push
xor
cmp
push
cmp
mov
mov
leave
xchg
xchg
jle
and
or
xchg
pop
xchg
xchg
ret
aam
scas
out
dec
or
lret
mov
xchg
adc
mov
dec
mov
dec
mov
pop
shlb
push
sti
or
sbb
movsb
fwait
mov
mov
cmpsl
ljmp
dec
mov
shlb
pop
std
popf
cmp
loopne
in
scas
jns
pop
mov
loopne
enter
sub
xchg
xlat
mov
jne
mov
loop
in
aaa
nop
add
out
outsl
pop
imul
jle
or
xor
fiaddl
aas
sbb
cli
xchg
sub
jo
fdivs
shlb
test
ds
sub
cmp
mov
jge
xcrypt-ofb
cmpsl
sub
sbb
jmp
ljmp
jns
subb
sbb
int3
les
loopne
pop
sar
mov
jbe
adc
cs
adc
sbb
xchg
cli
adc
in
bswap
pop
adc
sti
adc
js
jae
pop
and
or
sbb
xor
xor
dec
cli
pop
cmp
fists
ljmp
test
loop
fmuls
lds
repnz
ds
lods
inc
lahf
lods
xor
push
xchg
sbb
or
fmul
stc
jae
out
jns
jns
xchg
inc
jbe
cmpsb
ror
jo
fstps
and
loope
push
jnp
movsb
lret
or
mov
test
and
rcrb
inc
mov
das
xchg
and
outsb
xlat
mov
es
add
mov
outsb
hlt
inc
cmc
mov
sahf
cmp
xchg
divl
fistps
imul
cwtl
stc
cmc
pop
clc
enter
xchg
adc
and
sbb
aas
aas
mov
ret
push
lcall
dec
or
outsb
fcompl
or
rcrl
leave
lock
out
into
jle
arpl
xchg
cmp
mov
shl
aaa
cmpsb
cmp
cmpsb
jge
fucom
fwait
mov
inc
cmp
negl
dec
std
pop
and
adc
mov
lods
jnp
sarb
xor
push
in
mov
popa
cmp
xor
mov
ror
cwtl
and
and
arpl
fsubr
into
mov
push
or
pop
xchg
stos
mov
mov
xchg
jmp
jns
cmp
std
xlat
mov
out
dec
xchg
sub
cmp
pop
aaa
lods
rcrl
sub
jmp
and
rorb
dec
adc
insb
xorb
push
lds
fidivrl
cmp
rorl
js
rorb
iret
inc
clc
mov
cltd
sub
xlat
add
sbb
adc
cli
hlt
daa
cs
je
shr
es
lret
scas
adc
data16
into
dec
add
testb
scas
jecxz
inc
imul
inc
mov
dec
jecxz
xchg
sub
inc
aas
aas
arpl
push
push
jno
orb
push
ljmp
dec
add
mov
adc
pop
xlat
mov
and
sbbl
lahf
adc
inc
fcoml
fchs
push
ljmp
popa
pushf
dec
repz
dec
movsl
xchg
inc
cmp
cmp
pop
ret
cmc
dec
sub
lret
test
test
dec
jae
cli
or
fldcw
push
add
xor
repz
shll
pop
cwtl
xor
push
mov
outsb
mov
cwtl
pop
jle
ret
fiaddl
inc
cli
int3
fimuls
shll
mov
jg
test
jno
adc
orb
aam
xor
movsb
daa
sahf
into
inc
adc
xor
pop
cwtl
pusha
xor
mov
lds
cmpsb
aas
adc
lods
fs
mov
and
and
fwait
jl
test
in
mov
jl
and
lods
incl
ljmp
xor
mov
mov
mov
dec
add
or
or
inc
sarl
out
sub
cltd
xor
and
adc
imul
xchg
add
aad
stos
addr16
lcall
sbb
xchg
add
push
sbb
mov
add
subb
lahf
mov
xchg
mov
fcmovbe
rolb
out
cmp
push
dec
and
add
push
movsl
sub
pop
popf
daa
inc
out
sbb
pop
std
icebp
cmpsb
mov
xchg
jb
xchg
mov
sub
xor
mov
xchg
sti
mov
insb
aad
nop
fsubp
push
mov
inc
test
cmp
ret
sbb
dec
pop
cmpsl
sbb
mov
test
cmp
cmp
cmp
mov
data16
push
cwtl
push
cmp
in
pop
pop
pusha
pop
cmp
pop
mov
xor
lock
popa
xlat
frstor
fmull
push
icebp
rcrb
xor
xor
inc
enter
pop
xchg
nop
cmpsb
imul
cmp
inc
leave
sub
xchg
int
and
jmp
pop
add
les
leave
imul
inc
popf
mov
xchg
mov
shrb
stos
pop
mov
stc
cld
fcomps
fcmovne
mov
je
imul
push
rorl
xor
hlt
and
mov
popf
inc
loopne
jno
pop
in
scas
in
mov
stos
shrl
lock
daa
or
adc
sbb
inc
sahf
fs
fdivl
jno
sub
mov
and
jne,pt
pop
in
jge
xor
arpl
mov
inc
sbb
int
xchg
xlat
ds
out
rcrl
movsl
cld
fmull
out
imul
mov
imul
dec
addr16
mulb
fdivr
inc
sbb
ret
imul
mov
mov
cmpsb
mov
mov
test
fimull
in
sti
lret
jb
std
push
mov
sub
repnz
dec
and
adc
mov
imul
movl
jg
inc
pusha
pop
cs
dec
stos
sub
enter
sbb
cmp
scas
xchg
jnp
mov
mov
std
lods
mov
bound
jg
mov
negl
stos
adc
cwtl
test
mov
popa
pop
sub
mov
cltd
add
add
mov
inc
mov
addr16
idivl
sub
hlt
xchg
js
divb
mov
fstpl
scas
stos
outsl
push
jne
insb
and
push
std
jmp
mov
pop
ja
outsb
xchg
lret
jo
ret
inc
ret
sub
pop
popf
mov
push
cmc
mov
inc
or
inc
stc
out
adc
jp
push
mov
ret
ret
push
lods
inc
scas
pusha
and
mov
lea
mov
sbb
add
les
popf
test
in
push
xchg
adc
dec
add
outsl
mov
mov
lds
push
addr16
and
push
mov
rcl
inc
jecxz
das
test
inc
mov
jg
pop
insb
ss
sbb
jae
adc
mov
sbb
jge
sbb
cmp
loope
imul
frstor
cltd
lock
push
pop
xchg
daa
push
imul
out
dec
and
lahf
enter
int3
movsb
das
ds
or
mov
nop
pop
inc
push
xor
data16
lret
mov
ret
or
mov
int3
jns
popa
lea
cli
jno
jg
cmp
movsb
iret
mov
out
add
mov
adc
jg
inc
push
push
filds
push
lods
fwait
sub
xchg
out
ret
out
shlb
sahf
pop
clc
push
dec
jge
inc
sub
aam
push
fs
push
dec
test
mov
mov
in
cs
orb
gs
lods
ret
pop
mov
xchg
adc
scas
into
out
pop
cli
pop
out
push
iret
sahf
mov
push
jge
or
notl
daa
fstps
xchg
fmull
ss
pop
outsb
mov
rolb
mov
jne
and
imul
pop
sbb
pop
repnz
into
mov
nop
fldenv
xor
fdivrs
inc
xchg
ss
stc
insb
mov
xchg
fwait
xchg
sub
adc
in
inc
jg
xor
fstpt
push
push
jns
mov
das
adc
mov
andl
cmc
cmp
insl
fldcw
and
mov
adc
ljmp
sub
jmp
sbb
pop
fsts
mov
dec
lods
dec
lods
jo
cld
and
pop
or
mov
mov
xor
in
test
cmpsl
pop
push
out
nop
imull
mov
sbb
push
movsb
iret
das
imul
cmp
jg
inc
repnz
pop
adc
mov
sub
sbb
dec
or
mov
je
and
lret
les
enter
inc
and
pop
lret
int
jbe
hlt
push
mov
xor
cmpsb
fildll
rcll
int
or
stc
push
jo
xor
mov
add
push
stos
lret
mov
mov
mov
mov
popf
sbb
test
ror
dec
inc
lds
dec
add
pop
push
iret
pop
lea
ficomps
cmp
lods
sub
xchg
mov
ficoms
testl
pop
inc
mov
or
and
mov
fildll
jne
cmpb
and
fbld
sahf
aad
insb
adc
cs
mov
push
sub
fadd
mov
mov
sbb
xorl
cs
mov
jae
push
int3
cld
cmpsl
iret
and
lods
scas
ret
jle
add
pop
jp
push
frstor
cmp
jae
sbb
or
add
sub
mov
mov
xor
xchg
lret
js
in
fnstsw
adc
addl
sub
jge
lods
std
mov
loopne
arpl
adc
cmpsb
fsubrl
sbb
dec
outsl
test
cmp
jnp
jecxz
out
mov
sub
add
aaa
insb
aam
test
imul
dec
pushf
mov
adc
xchg
xor
and
lock
je
es
sub
sbb
push
lds
mov
xchg
pop
or
cmp
stos
jnp
pop
imul
cmp
lds
mov
mulb
sti
inc
mov
fimull
push
stos
and
mov
out
mov
push
sbb
ss
pop
inc
icebp
sub
jbe
repnz
sbb
inc
sub
call
xlat
aas
sahf
cmc
into
sub
pop
xor
jecxz
xchg
cwtl
test
mov
shrl
add
xor
jecxz
sub
les
int
mov
mov
sbb
add
pop
sbb
shll
sub
outsb
inc
popw
push
cmpsl
test
xor
cmp
ret
mov
fmuls
jno
xor
ret
push
mov
ljmp
loope
inc
mov
push
sahf
pushl
xlat
jg
dec
pusha
sbb
add
adc
dec
dec
popa
je
lahf
jecxz
mov
xor
jl
das
int3
mov
pop
cli
sbb
jb
xchg
lret
sub
pop
or
int3
ja
repnz
mov
or
ljmp
xor
ret
mov
scas
ds
and
pop
fimuls
adc
sbb
sbb
scas
or
mov
in
xor
nop
data16
jle
scas
pop
iret
fs
sarl
cmpsl
sub
mov
addr16
rolb
je
xor
adc
sbb
and
sbb
repz
add
ljmp
mov
cmp
in
loop
sbb
cmpl
cmpsl
adc
inc
mov
cmp
insb
add
xchg
mull
bound
mov
xchg
push
notb
or
fildll
into
dec
pop
mov
adc
aaa
mov
faddl
sub
inc
jg
inc
sbb
sbb
mov
xchg
or
jo
jmp
or
shll
in
popf
int3
cmpsb
call
loop
mov
scas
push
movsb
filds
sti
in
sti
dec
pop
or
insl
xor
xchg
pop
loope
jecxz
or
in
push
xor
inc
stos
sti
aad
mov
push
fadds
int3
stc
stos
ret
aad
push
xor
jno
andb
sbb
push
test
and
js
cmp
and
pop
cmpb
and
rol
lods
rorl
sub
pop
mov
xor
mov
lods
mov
or
setp
int3
into
pop
or
cmp
and
push
sbb
popa
push
inc
mov
xchg
mov
fists
cmp
movsb
orb
fwait
mov
repnz
mov
arpl
cmp
mov
jp
adc
add
in
dec
ja
xchg
ljmp
scas
add
cwtl
push
jmp
push
aas
pop
push
xchg
xchg
jl
out
xor
adcl
ljmp
sti
movsb
push
pusha
inc
fiaddl
test
xor
cwtl
scas
out
mov
rcrl
lods
sbbb
fsubrs
jg
dec
inc
ss
push
imul
clc
add
movsl
out
adc
les
hlt
daa
pop
xor
icebp
popa
ds
inc
ror
jo
ja
adc
or
addb
xor
mov
push
cmpsl
mov
or
mov
add
xchg
cmp
sbb
mov
ja
in
out
mov
repz
js
jmp
jno
dec
sbbb
fdivl
and
sbb
jno
pop
ljmp
shrl
in
mov
cmp
lea
push
jo
add
std
jae
sahf
fwait
push
push
push
pinsrw
test
mov
pop
pop
xchg
mov
rcll
cmp
mov
push
and
ljmp
add
add
les
mov
rcl
lods
xlat
push
or
ss
das
and
mov
mov
sbb
cmpsb
in
pop
mov
lds
dec
js
aad
pop
arpl
popa
push
push
xchg
mov
ljmp
xor
add
adc
ds
lods
dec
stos
mov
fincstp
into
xor
pusha
mov
add
add
mov
push
sbb
cmp
xchg
aas
js
jne
push
pop
out
pop
add
movaps
cmpsb
and
loope
xchg
sbb
outsb
dec
std
fs
push
fisubrl
rcl
adc
lods
cmp
sbb
or
cltd
out
pop
ror
xlat
mov
jno
mov
adc
mov
dec
mov
movb
push
lret
jg
sbb
ficomps
push
add
adc
add
orb
adc
push
inc
push
fs
or
mov
mov
scas
jbe
testl
mov
imul
iret
notl
jge
ror
add
sub
jge
dec
insb
mov
push
repz
aaa
stc
inc
fbld
into
cmp
loop
int
cmp
add
test
rcrb
orb
xor
pop
sbb
sbb
xor
add
cmp
mov
jmp
fists
andb
adc
mov
andb
pop
inc
cs
xchg
int
cmp
sub
inc
or
dec
shrb
aam
pop
in
push
adc
orl
in
ret
clc
xor
ss
leave
add
hlt
inc
mov
iret
sahf
dec
lods
push
divb
sbb
push
cld
dec
mov
push
mov
int
inc
ss
mov
gs
rolb
ffreep
popf
xchg
adc
addr16
push
cmp
std
pop
mov
dec
lret
sarl
in
ret
jo
mov
fwait
call
push
js
mov
add
ret
cmpsl
cmp
sub
push
sbb
or
lcall
outsb
jnp
xchg
outsl
popa
dec
jg
hlt
fs
leave
jno
js
gs
cwtl
adc
mov
mov
cli
xchg
push
push
add
cmp
mov
in
add
test
adc
ljmp
aas
div
lcall
inc
mov
xchg
dec
xchg
pop
jnp
mov
xchg
push
sbb
dec
mov
enter
jmp
jp
aad
les
sti
ror
cmp
loope
push
cmp
cmp
cmp
add
daa
xchg
push
push
adc
daa
push
arpl
into
sub
sbb
movsb
xor
lcall
mov
xlat
out
mov
sahf
and
jg
xor
jmp
xlat
push
fldt
add
stc
adc
mov
adc
dec
and
xchg
mov
pop
insl
cmp
outsl
pusha
pop
sbb
popf
pop
adc
ret
xorl
jnp
sahf
popf
scas
idivb
or
movsb
imul
sub
push
or
mov
adc
scas
mov
mov
inc
test
inc
mov
jne
jecxz
ret
gs
jno
push
gs
std
xchg
or
dec
xchg
add
pop
mov
sbb
cmp
inc
orb
push
dec
pop
insl
sub
test
popf
ds
mov
les
lock
shlb
jl
or
cmp
jno
jp
ds
lret
sbb
pusha
popa
jmp
lock
popf
cli
xor
into
add
push
in
pop
movsb
aad
jg
bound
jp
pop
pop
jge
xor
inc
mov
addb
loopne
sbb
bound
lods
and
lods
sub
andl
sub
pop
cmpsl
mov
sbb
ret
int3
repz
in
xlat
pop
lods
gs
add
sub
imul
inc
mov
xchg
sbb
mov
sbb
stc
into
sbb
mov
or
mov
xlat
out
dec
cmpsl
pop
ret
xchg
xchg
fimuls
shll
push
jo
pop
cmc
insb
cmp
xor
push
pop
ja
scas
and
and
or
push
repz
adc
into
outsb
mov
stos
mov
xchg
into
cmp
lods
sbb
adc
je
fs
jnp
jmp
scas
xor
shlb
and
inc
pushf
pop
movsb
and
fadds
inc
push
push
loope
movsl
inc
push
adc
dec
aas
or
stc
mov
fwait
loop
insl
xchg
xchg
dec
mov
ja
sub
lret
mov
pop
jle
lea
xchg
incb
aam
aad
shrb
jecxz
mov
xchg
xor
cmp
sahf
xchg
cmp
daa
and
rolb
push
imul
dec
mov
sbb
addr16
dec
orl
xor
lcall
or
imul
hlt
add
adc
insl
rorl
inc
mov
jmp
adc
mov
pop
loope
cltd
push
stc
dec
das
xlat
jne
cmp
mov
mov
adc
stos
mov
movsb
mov
mov
cltd
sub
shlb
loopne
nop
filds
out
push
pop
inc
pshufw
das
adc
dec
xor
outsl
rcrb
loopne
nop
filds
out
push
pop
inc
pshufw
das
adc
dec
xor
outsl
rcrb
loopne
nop
filds
out
push
lahf
inc
pshufw
das
adc
dec
xor
outsl
rcrl
loopne
nop
filds
out
push
pop
inc
movsl
fidivrl
pusha
pop
xlat
mov
imul
pop
stc
and
pop
cli
jl
adc
ljmp
jns
or
cmp
jns
dec
jmp
cmp
jmp
imul
sbb
leave
jns
dec
jmp
cmp
jmp
sbb
lret
dec
sbb
xorl
pushf
loop
xchg
xor
stos
shrb
mov
xor
popa
mov
xchg
mov
jl
mov
sbb
mov
je
aaa
jl
sbb
fildll
enter
adc
and
jmp
ret
pop
inc
in
push
pop
in
aam
xor
sbb
sbb
lods
cltd
subl
pop
scas
inc
sub
cwtl
push
ret
sbb
mov
cmpsb
sub
es
stc
or
cmp
mov
movsb
je
add
adc
ret
xchg
cltd
call
xchg
push
jge
pop
cmp
jbe
cltd
push
dec
adcl
mov
lods
mov
mov
insb
dec
or
dec
dec
sub
pop
stc
sub
sbb
leave
imul
sbb
int
cwtl
psubsw
stc
dec
in
push
lock
popf
in
cltd
xor
das
dec
clc
jl
push
jmp
mov
dec
in
aad
rcrb
sahf
and
fcompl
loopne
repz
push
lea
setnp
insb
cmpsl
cmp
jmp
imul
sbb
leave
jns
dec
jmp
cmp
jmp
imul
sbb
leave
sbb
stc
std
lret
jbe
es
pop
mov
mov
adc
fwait
mov
sub
sbb
jbe
or
icebp
xchg
lcall
jmp
ss
cmp
scas
flds
push
aad
cmp
cmp
out
add
adc
clc
or
rorl
sbb
inc
mov
pop
pop
jnp
or
adc
dec
jae
out
and
jge
xlat
adc
pop
xor
push
cmp
mov
mov
loop
mov
xor
push
inc
mov
lahf
cmpsb
jae
cmpsb
data16
mov
lds
pop
out
int3
sbb
adc
int
std
jae
push
mov
out
adc
pushf
sbb
les
iret
jae
stc
push
call
fbstp
ficoml
mov
pop
mov
sahf
cwtl
sub
out
pop
daa
shlb
pop
add
lea
xchg
jbe
jl
int
mov
cltd
push
sub
and
adc
push
std
push
rolb
push
rcll
add
js
in
inc
data16
xor
out
inc
sub
add
cld
cmp
cmp
mov
jne
push
cmp
push
fiaddl
xor
ds
test
sbb
jle
je
pop
push
mov
loope
loopne
mov
ja
pushf
jge
inc
dec
xchg
mov
xlat
sti
xchg
icebp
xor
and
sbb
pop
add
out
ror
cmp
push
or
imul
xor
sbb
je,pt
mov
arpl
inc
rorl
sahf
outsl
movsl
mov
and
leave
or
adc
add
popf
subb
ljmp
or
inc
sbb
adc
insl
adc
mov
imul
into
rorb
test
shl
inc
loop
in
push
mov
pushf
shrb
and
sub
popf
dec
inc
mov
and
les
push
shrl
dec
dec
cs
out
jg
xchg
loope
scas
pop
shrl
adc
int
std
jns
sbb
popf
sbbb
outsl
dec
dec
push
scas
push
sbb
pop
in
bound
addb
pushf
push
insb
mov
insl
sbb
aam
ja
fiadds
adc
mul
mov
std
jmp
cmp
xor
cli
add
jmp
out
scas
data16
rolb
out
movb
mov
ret
std
adc
into
or
nop
adc
push
sub
jp
sbb
push
xchg
leave
pop
mov
xchg
hlt
fistpll
add
or
jl
jb
jecxz
jmp
lock
scas
mov
insl
mov
mov
jne
pushl
push
out
scas
add
or
push
dec
inc
xor
lods
lcall
les
jae
xor
adc
sti
and
lret
xor
call
mov
mov
mov
call
pusha
push
ret
cmp
mov
mov
sub
xor
mov
jns
cmp
rcll
cmp
xchg
or
xor
movsb
dec
cmpl
lds
mov
mov
jae
ljmp
jp
mov
loop
in
jo
xor
or
shrl
shlb
iret
jns
xchg
iret
pop
popa
rcrb
adc
js
ja
fiaddl
pop
pop
jg
push
xchg
push
rcrl
iret
sub
dec
iret
push
push
lret
adc
movsb
mov
mov
xchg
scas
mov
jle
jb
icebp
sub
xor
pop
js
gs
leave
dec
addl
xor
orb
addr16
push
adc
adc
xlat
xor
in
in
aad
aas
cmp
fidivrl
jnp
imul
dec
ss
sahf
cmpsb
sub
cmp
or
add
xor
andl
shlb
cmc
adc
lods
rcrb
fs
and
adc
roll
sub
mov
iret
ret
lock
sub
jae
add
xlat
xor
stos
aad
sbb
sub
adc
clc
imul
or
xchg
push
fidivs
out
enter
dec
in
outsl
cmp
xor
add
nop
in
test
jle
mov
js
push
adc
sahf
les
cmp
cmovo
test
pop
sbb
sbb
pop
dec
and
add
xchg
cmp
bound
and
mov
shrb
bound
dec
inc
js
addl
inc
lret
insl
sahf
inc
sbb
not
pop
mov
addr16
push
arpl
mov
cmp
pop
jno
outsl
mov
mov
xchg
inc
sub
cmp
xor
jecxz
dec
mov
push
sbb
jo
mov
repz
and
stos
mov
sub
sti
fcom
and
sbb
nop
sub
inc
ds
jb
xlat
xchg
daa
fbstp
ret
scas
mov
sub
call
into
cmp
sbb
inc
cmp
dec
cmc
or
xlat
pop
aas
adc
jbe
ljmp
fisttpll
mov
stc
jg
stc
or
setnp
mov
inc
xchg
dec
inc
ds
imul
mov
mov
daa
movsl
daa
mov
sub
xor
pop
out
jne
scas
or
mov
sub
leave
rclb
shrl
ret
icebp
mov
and
push
jno
icebp
pop
dec
xchg
xchg
sbb
loop
add
xchg
gs
hlt
sarb
dec
shlb
push
fistpll
or
testb
shlb
lods
out
lret
mov
insb
notl
or
xchg
js
ljmp
insl
cmc
mov
mov
jo
cli
movsl
sahf
cmpsl
cmp
sub
xchg
xor
and
jo
pop
sbb
test
movsb
inc
mov
adc
inc
sti
ficoms
daa
sub
pop
imul
push
push
faddl
mov
sbb
movsl
out
jmp
fsubs
mov
and
jo
adc
nop
lret
xor
sbb
insb
cmp
mov
fimull
jmp
fstpt
ret
jecxz
pop
fsubr
cwtl
ja
enter
xor
pop
mov
pop
enter
inc
repz
push
jecxz
rcrb
xchg
fdiv
jo
xchg
adc
div
lods
mov
jge
pop
das
aam
arpl
xor
int
or
pop
or
sbb
std
mov
pop
es
in
push
xor
movsl
in
data16
cs
cmp
and
xchg
inc
int3
mov
shlb
and
adc
out
adc
cmp
xchg
aam
cmp
pusha
stos
add
pop
dec
movsl
pop
cwtl
cmp
shrb
jnp
jno
popa
lcall
loop
rorb
adc
dec
pop
lahf
or
fdivs
pusha
test
outsl
fildll
sbb
insl
adc
and
lea
rorl
add
mov
test
lret
inc
xchg
mov
outsb
cmp
scas
out
push
fiaddl
xchg
pop
call
sarl
loopne
es
xchg
test
push
xchg
fidivrs
movsl
popf
int3
stc
and
sbbl
nop
and
sahf
push
jg
or
ljmp
popf
insb
stc
and
call
pop
lea
cli
fisubrs
js
mov
cltd
rcrl
sub
and
push
lahf
xchg
scas
and
xchg
mov
loope
push
cmp
stc
or
ret
jmp
sbb
mov
add
clc
enter
cmpsb
inc
shld
xchg
push
lahf
cwtl
mov
jns
dec
sub
lret
jecxz
adc
dec
sbb
sub
sbb
pop
pusha
xor
sbb
mov
pushf
nop
cld
nop
mov
fnstenv
or
into
outsl
jmp
pusha
das
add
xchg
mov
lahf
aam
jmp
pop
cmp
xchg
pop
repnz
fisttpl
icebp
push
adc
xchg
es
dec
js
jnp
mov
ljmp
dec
rep
mov
xor
cwtl
dec
stos
jg
or
or
mov
scas
xorb
xchg
lcall
jae
pop
add
lret
test
fxam
and
ret
push
pop
scas
xor
ja
adc
ss
stc
xor
push
dec
and
inc
pop
push
or
and
xchg
or
aad
inc
ss
lret
jge
fbld
fsubl
rcrl
pop
cmp
test
sbb
pop
loop
enter
negl
nop
pop
push
pop
repnz
inc
pop
adc
adc
cmp
push
push
roll
pusha
cmpsl
xor
push
bound
pop
fmull
add
dec
loope
dec
repz
shll
gs
js
mov
add
andl
or
sbb
arpl
int
es
outsl
fists
add
xchg
icebp
xlat
pop
add
jmp
ja
aad
cmpb
mov
js
js
enter
rcrl
jne
xlat
dec
inc
stos
lahf
aam
cld
or
clc
pop
adc
out
mov
push
call
pushf
lds
cmp
repz
pop
sahf
nop
insb
dec
popf
cmc
xchg
lea
mov
loop
cwtl
subl
push
inc
inc
mov
sti
push
push
mov
outsl
mov
push
test
fstpl
mov
lods
int3
mov
movsl
repz
push
push
xor
outsb
cmp
pop
mov
sarl
mov
jg
push
fldenv
in
and
cmp
xor
lods
test
cmp
divl
rcl
mov
into
shlb
insb
icebp
sbbl
push
test
xchg
adc
jmp
popa
jp
push
mov
pop
ret
inc
push
push
xchg
push
shl
jge
xor
mov
andl
cmc
lret
sub
or
test
popf
fiaddl
pop
ds
out
push
pop
or
nop
add
out
testl
in
mov
rcl
arpl
loopne
leave
icebp
into
add
cmp
inc
push
addb
mov
shll
xchg
notl
roll
adc
out
lods
add
push
pop
mov
clc
in
mov
mov
das
bndstx
xor
hlt
mov
add
cli
push
jp
mov
or
or
mov
scas
clc
adc
clc
mov
cmp
data16
xor
jmp
lcall
xor
add
jne
inc
out
imulb
stos
cmc
leave
pop
out
jl
test
orb
scas
addr16
cmp
jmp
and
xlat
insl
daa
jge
mov
test
inc
xchg
lock
arpl
fistps
xchg
mov
iret
jl
mov
jb
das
mov
daa
add
ss
mov
mov
iret
negb
test
inc
call
push
scas
lods
int3
or
sti
movsb
fwait
dec
mov
jno
bound
js
jbe
inc
stos
mov
xchg
jns
mov
dec
mov
inc
pop
pusha
pop
xchg
or
fs
cld
in
push
clc
push
pop
bound
dec
sub
movsb
mov
fistpll
cmp
adc
int3
cld
ss
jmp
pushf
insl
scas
mov
push
pushf
sbb
pop
and
cltd
fneni(8087
mov
lock
sti
jle
imul
mov
xchg
jmp
pusha
aam
pop
and
pop
mov
and
jae
mov
jno
jle
loopne
stos
sbb
dec
mov
adc
mov
imul
dec
insb
cs
jnp
jg
push
adc
lods
push
lahf
outsb
leave
mov
cwtl
sbb
inc
dec
fldl
clc
push
aaa
push
xchg
jae
xchg
repz
push
mov
out
push
add
clc
inc
sbb
xor
arpl
mov
repnz
rcrb
jge
cli
pushf
adc
pop
fidivrl
filds
mov
pop
int3
pushf
xor
movsb
push
lea
lds
in
insb
iret
les
shll
jl
or
cmpb
ja
inc
adc
pushf
jg
xchg
shrb
imul
sub
and
sarl
adc
mov
cmp
lock
in
sub
aam
push
ja
dec
inc
dec
enter
mov
das
idivb
hlt
and
pop
int
mov
sub
call
mov
pop
inc
les
xchg
call
pop
dec
mov
shrb
js
xchg
and
or
aam
shrl
mov
push
into
jmp
lahf
outsl
cmp
mov
faddl
stos
lcall
mov
mov
xchg
repnz
mov
cwtl
push
add
and
in
add
push
add
jo
into
int3
lods
rolb
shrb
daa
sbb
arpl
inc
and
and
outsb
or
pop
dec
cmp
jmp
pop
movsl
adc
in
add
mov
enter
lods
cs
adc
arpl
cld
cmp
pusha
adc
jb
int3
add
jnp
or
pop
ja
ljmp
push
pop
mov
rcll
push
stos
inc
dec
inc
dec
in
lret
push
es
faddl
loop
gs
dec
dec
out
pop
aaa
jmp
push
fcmovnb
enter
outsb
pop
xor
fdivrp
add
addr16
aam
je,pn
lds
xchg
xchg
cmp
stos
adc
dec
jae
jle
dec
or
imul
xor
inc
dec
and
adc
push
push
sbbb
call
imul
outsb
push
mov
or
jmp
mov
mov
xchg
pop
jle
ret
pop
shld
xchg
stos
shll
gs
xchg
mov
outsl
loopne
jnp
sbb
das
iret
fisttps
or
jecxz
icebp
push
cmp
dec
mov
cmp
mov
inc
nop
outsl
pusha
in
movsb
jnp
pop
ret
mov
and
mov
out
cmc
jmp
cwtl
aam
jae
inc
out
mov
push
sbb
add
mov
pop
add
je
sahf
ret
mov
call
daa
fdiv
adc
jo
dec
add
push
dec
add
push
scas
ret
sbb
mov
sbbb
jno
out
add
add
fistl
loop
or
rorb
dec
cmp
test
out
dec
or
push
outsb
and
ret
out
or
out
cmp
and
cwtl
out
mov
loopne
test
pop
mov
xchg
pop
mov
push
cmc
mov
gs
add
xchg
and
shll
fadd
fsubl
and
inc
pop
lcall
push
setno
nop
cmp
fiadds
cli
in
iret
je
mov
xchg
xor
fidivrs
pop
cli
jne
jne
ror
daa
rcl
xchg
data16
and
aaa
les
jp
clc
and
pop
test
adc
insl
push
test
bound
data16
cmp
bound
ret
cmpsl
cmc
dec
and
test
push
js
push
popa
addr16
scas
add
jecxz
rorb
out
mov
call
push
test
lods
sbb
imul
mov
in
lods
cmpsl
pop
or
movsl
mul
push
add
nop
jnp
mov
fldenv
dec
sbb
jg
fmuls
sbb
es
xor
clc
cltd
inc
int
jmp
mov
mov
mov
dec
aad
popf
js
out
jecxz
into
je
nop
pop
mov
enter
in
outsb
xor
pop
loopne
pop
fsubrp
dec
pop
lea
jns
cmpsl
shrb
sbb
mov
in
push
mov
iret
pop
clc
repnz
jmp
mov
iret
mov
mov
sbb
bound
inc
int3
and
mov
in
and
xchg
insb
xor
mov
sti
ds
imul
imul
popa
cmp
lods
daa
div
adc
hlt
cld
adc
adc
in
cld
loope
lods
pop
lds
cs
sub
pop
dec
dec
stos
repz
sub
fdivrs
adc
sti
mov
jl
cwtl
gs
xchg
rorl
inc
jno
push
push
cltd
repnz
fcomps
sub
mov
add
movsb
adc
outsb
lds
pushf
mov
jnp
clc
jne
and
sub
sub
mov
sbb
jb
andb
fcmove
clc
sub
sbb
dec
xor
and
or
mov
xchg
adc
dec
sbb
das
push
jo
stos
addr16
ret
sub
mov
cwtl
movsl
push
cwtl
jns
int
inc
jle
mov
jae
xchg
xor
xchg
mov
mov
rclb
cmc
pop
scas
push
outsb
and
mov
outsl
jb
jmp
fstpl
mov
push
sub
arpl
xchg
out
int3
sti
cmp
xor
or
cmpsb
je
inc
sub
imul
or
lds
test
cli
lods
std
inc
jbe
mov
leave
and
jno
je
lock
pop
jo
inc
or
sub
adc
out
or
pop
cmpsl
lret
data16
mov
inc
mov
les
out
or
jnp
aaa
loope
ss
adc
add
jp
and
mov
mov
pushf
fisttpll
hlt
stos
sbb
fstpl
xlat
cmp
movsb
sub
out
nop
and
add
inc
int
inc
clc
mov
cmc
mov
push
cmp
add
inc
cli
das
aas
or
popa
inc
fsubrp
js
dec
mov
mov
stos
repz
and
mov
les
mov
mov
test
pushf
dec
inc
lcall
mov
rorl
rcrl
xchg
pop
xchg
lret
dec
out
mov
or
sahf
sbb
pop
jbe
xchg
jo
and
inc
pop
sbb
divl
xchg
mov
mov
cmp
std
jge
popa
pushf
jne
dec
stc
push
cmp
gs
outsb
sbb
cwtl
add
jae
js
add
xchg
xor
sti
lret
and
sbb
imul
and
iret
push
adc
call
dec
jmp
mov
or
jmp
mov
sbb
mov
test
cmp
push
pop
sbb
ret
xchg
push
ds
push
insb
push
dec
jns
push
rcrb
ja
ja
or
push
xchg
sti
lods
sarl
adc
lock
xor
sub
or
adc
jg
cld
in
push
cmp
xlat
lods
into
cmp
sbb
int3
inc
pop
mov
movsl
pop
and
popf
mov
mov
pop
inc
mov
aam
aam
mov
mov
dec
sbb
cltd
data16
into
sbb
gs
cmp
cmp
sbb
les
mov
mov
xor
rcll
dec
js
fldt
decl
rclb
mov
stos
imull
mov
lret
adc
dec
push
insl
push
xchg
dec
mov
decl
ljmp
mov
push
sahf
jmp
mov
ds
cmp
fmull
clc
sarb
loope
add
out
fstpl
in
repnz
lcall
mov
sub
xchg
dec
sub
nop
and
je
mov
and
bound
das
jl
out
ljmp
xchg
sarb
mov
mov
pusha
dec
push
popf
imul
sbb
mov
cmp
clc
cltd
outsl
dec
pop
fxch
mov
mov
movsl
js
loopne
sub
push
push
and
mov
dec
test
mov
lea
lods
sbb
jae
inc
scas
lcall
dec
adc
data16
ss
mov
jl
lods
lods
shll
out
mov
push
in
ret
stos
call
mov
bound
dec
es
or
fwait
sbb
mov
rcrb
bound
sahf
fwait
xchg
loope
push
into
or
push
sub
ret
ficompl
pop
sub
add
pusha
push
cmc
xor
inc
vpacksswb
lahf
out
push
sbb
lcall
mov
and
and
gs
in
mov
sahf
mov
rclb
hlt
arpl
test
arpl
pop
push
and
or
pop
cmp
bound
adc
dec
xchg
or
stc
cld
mov
mov
push
jnp
xchg
sti
sub
adc
mov
js
stos
pop
dec
movsb
push
jne
lods
aaa
lods
push
stos
leave
stc
cmc
xlat
int
pop
mov
adc
adc
sbb
shll
andl
mov
notl
inc
loop
int3
jg
or
fidivrl
mov
cli
gs
or
jne
in
add
xchg
movsl
pop
aad
mov
outsl
or
mov
loopne
jmp
test
jb
cltd
pop
fcompl
repz
mov
lret
sbb
out
pop
inc
jle
pop
inc
stos
icebp
jmp
cltd
cmp
add
mov
inc
pushf
adc
dec
xchg
bound
inc
add
fistps
sbb
xor
cmp
pop
xor
and
scas
cltd
xchg
sbb
xor
lods
and
out
sbb
mov
orb
pusha
pop
movsl
in
adc
shll
jb
cmp
add
fbld
jle
enter
arpl
imul
inc
pop
pusha
fnstenv
pop
stc
sub
sbb
leave
imul
sbb
leave
jns
dec
jmp
cmp
jmp
imul
sbb
leave
jns
dec
jmp
cmp
call
imul
sbb
leave
jns
dec
jmp
cmp
push
dec
push
repz
push
fiadds
popa
movb
push
loop
shlb
ret
and
or
jl
xchg
bound
xor
out
testb
repnz
loop
shlb
ret
push
mov
xchg
bound
xor
and
adc
add
repnz
loop
shlb
ret
push
mov
xchg
lret
inc
pusha
mov
add
jb
es
cs
je
arpl
mov
outsb
pop
aaa
das
push
ja
xorb
lret
dec
cli
popf
mov
mov
sahf
mov
pop
push
dec
inc
cmp
xlat
test
push
out
xor
and
and
in
xchg
sub
xchg
jbe
xchg
xor
add
or
ss
popa
mov
mov
jnp
rorb
inc
adc
lods
fdivrl
gs
ret
and
outsl
negb
movb
pop
mov
pop
in
xor
outsb
aaa
shlb
lret
jno
cli
sub
adc
push
sti
ja
sbb
sarl
mov
rorl
sahf
inc
xchg
int
mov
repnz
loop
shlb
ret
push
mov
xchg
bound
xor
and
adc
inc
inc
lahf
bound
dec
xchg
pop
test
and
add
je
xchg
repz
pop
pop
test
jae
inc
rcrb
inc
xlat
adc
aaa
push
movsb
add
cs
pop
mov
insb
arpl
pop
mov
ficoms
xchg
jbe
xchg
bound
xor
and
adc
add
repnz
loop
shlb
ret
push
mov
xchg
bound
xor
and
adc
add
repnz
mov
ja
mov
lds
cmpsb
movsl
or
jo
jecxz
add
lods
mov
mov
mov
jns
cmp
pop
mov
or
test
mov
xor
and
stc
cli
mov
or
test
subl
into
dec
push
adc
jmp
orl
inc
rcl
arpl
xchg
fcompl
icebp
lods
rcll
das
or
orl
out
inc
cwtl
lret
adc
add
xchg
jnp
fsubl
jae
push
cmp
loope
add
stos
push
outsb
add
divb
adc
mov
add
mov
daa
adc
dec
mov
dec
sub
stos
add
pushf
sub
jo
out
cmpsl
sbb
sbb
stc
mov
xor
push
int3
inc
dec
pusha
cmp
jg
dec
xor
xor
add
addr16
cwtl
ds
jp
sti
adc
mov
pop
push
imul
dec
int
mov
cmpsl
xor
push
into
daa
xchg
inc
jmp
addb
inc
aas
xor
aad
pop
and
mov
test
pushf
lret
ret
push
sub
xchg
adc
mov
daa
xchg
push
fsubr
mov
adc
out
js
and
sub
jno
jbe
inc
sub
push
xchg
jl
sbb
mov
movb
lods
lret
cmpsl
jbe
cmp
xor
pop
daa
pop
pop
leave
adc
ret
loopne
cmp
fcomps
xchg
fildl
jmp
or
dec
pop
adc
inc
shlb
inc
cs
mov
mov
sarl
push
mov
adc
popf
fsts
sub
dec
sub
jns
in
int3
loope
ljmp
movsb
mov
shrb
scas
xchg
ficomps
cmpsb
and
cs
das
jle
push
ret
js
cltd
cmp
lret
lcall
xchg
loope
js
pop
std
in
or
jmp
jge
inc
loope
lea
inc
inc
cmpsl
lds
outsb
int
les
sub
dec
rorb
aas
or
movsl
push
aam
push
adc
insl
mov
adc
mov
call
das
sbb
push
and
sbb
call
and
jmp
push
test
mov
xchg
cmp
lods
bound
mov
xchg
stos
push
xor
js
loopne
xor
cmp
ds
jmp
fucom
mov
aaa
jg
minps
adcl
ss
xor
in
jmp
test
lods
es
lret
mov
lahf
sbb
shlb
push
aad
fwait
inc
sbbb
jne
xlat
loop
jl
std
test
sahf
jb
in
pop
lods
sub
imul
cmp
add
shld
dec
jecxz
inc
ffreep
and
flds
subl
je
dec
dec
sub
cmpb
lret
jle
xadd
pusha
xor
loopne
ja
mov
inc
inc
loopne
and
in
adc
shlb
xor
bound
dec
lods
pop
mov
add
test
jnp
insb
dec
outsb
lahf
aam
repnz
bound
pop
or
ljmp
arpl
push
hlt
push
les
loop
arpl
fwait
add
or
mov
cmp
add
les
daa
loopne
popf
mov
pop
and
mov
mov
push
shll
inc
dec
xchg
clc
lret
repz
ret
pop
add
inc
stc
xchg
into
mov
adc
and
iret
stc
add
jb
xor
pop
mov
mov
fwait
lods
jmp
dec
and
add
mov
fs
dec
mov
outsl
and
repnz
xabort
divl
lea
fadd
aas
push
into
sub
push
jp
mov
ss
scas
popf
push
fcomps
lods
dec
sbb
leave
and
loopne
stos
mov
filds
xchg
jle
scas
pop
imul
stc
mov
test
rorl
cli
xchg
and
mov
lret
loopne
cmc
mov
repz
lahf
lea
mov
scas
imul
stos
inc
xlat
and
or
out
jnp
movsl
ret
xchg
mov
sbb
cmp
insb
mov
lods
add
outsb
xor
andl
jmp
jae
in
jle
sbb
out
stc
jb
fimuls
inc
pop
dec
pushf
js
mov
loopne
pop
jl
shll
pop
inc
dec
xchg
inc
cmp
leave
fwait
add
pushf
mov
pop
je
in
mov
pop
mov
fldenv
dec
sub
stc
enter
test
pop
mov
ret
mov
aad
dec
inc
mov
loop
nop
adc
mov
xchg
mov
insb
std
pop
icebp
mov
jl
lahf
test
jns
pushf
jp
jmp
not
push
mov
stos
loop
xchg
insl
in
cmp
mov
loop
into
mov
xor
mov
inc
clc
pop
or
leave
mov
jl
xor
or
loope
adc
xchg
dec
sbb
jno
test
lea
cmp
adc
dec
push
xchg
push
add
sbb
bound
inc
xchg
mov
adc
in
call
int
xchg
sbb
ret
push
pushf
and
and
inc
push
mov
push
push
dec
std
sub
adc
clc
jns
lods
in
arpl
xor
mov
rol
aaa
push
mov
loope
lea
test
jb
jmp
inc
mov
shlb
out
mov
imul
jb
int
fwait
or
xchg
jae
mov
mov
mov
jno
popa
cmp
fnstcw
jae
stc
aad
mov
mull
jo
push
popf
shll
xor
mov
sub
mov
and
jnp
rorl
sub
jle
or
xor
shrb
jl
adc
incl
adc
mov
push
add
mov
mov
enter
in
jo
and
ficompl
lods
mov
push
pushl
mov
rclb
mov
and
inc
or
push
ljmp
xchg
rcrl
cltd
popf
fnclex
xor
mov
loopne
sbb
imul
daa
lds
aam
divb
xchg
cmpps
inc
mov
cltd
sub
aaa
jb
pop
xchg
mov
mov
cmp
dec
pop
test
dec
pop
jmp
pop
lcall
fldcw
adc
jno
lock
lret
jl
mov
push
int
or
ss
loopne
scas
repnz
out
iret
mov
push
xor
pop
daa
call
das
inc
rol
je
dec
imul
adc
das
jp
in
mov
addr16
stos
cmc
push
jbe
fucomi
out
popa
arpl
fldl2t
outsl
les
mov
lds
mov
mov
stos
xor
lods
jecxz
andb
mov
jg
mov
inc
jl
cld
add
pop
aad
mov
mov
shl
inc
das
nop
sbb
out
in
sub
lret
movb
pop
popa
jne
loop
push
in
xchg
inc
aaa
je
dec
hlt
rcrb
pop
int
pop
pop
sbb
mov
sbb
pop
pop
lahf
pop
add
pushw
dec
popf
arpl
pop
jb
jle
inc
jl
sbb
jne
pop
bound
or
add
cmpsb
pusha
xor
fwait
lret
popa
jl,pt
xchg
dec
mov
cs
pop
pusha
insl
dec
rol
dec
dec
jg
dec
pusha
jno
or
popa
ds
cmp
mov
cmpsl
push
aas
cmp
inc
jp
aam
sub
bound
xor
sahf
sahf
dec
push
sub
xchg
pop
and
or
pop
out
js
ja
push
mov
mov
cmp
cmp
pop
inc
push
test
sti
js
mov
outsl
sub
dec
imul
stos
cli
cli
push
test
inc
sti
mov
dec
sub
fnsave
jbe
pop
push
cmp
insb
loopne
cmpsb
push
into
mov
mov
pop
sahf
dec
or
mov
dec
push
imul
adc
lea
pusha
and
out
repz
xchg
cmp
pop
adcb
mov
data16
xor
add
pop
or
mov
jns
pusha
movb
adc
call
dec
insl
push
loop
out
subb
pop
cmc
add
push
out
scas
pop
xchg
cmp
mov
rolb
mov
inc
lds
stos
xor
and
xor
adcl
mov
pop
xor
cli
es
fidivrs
lahf
pop
dec
jmp
cld
xor
add
in
push
jno
jnp
pop
xchg
jcxz
mov
mov
jl
in
or
jno
mov
out
xor
popa
or
in
cmp
jbe
cmpsl
and
add
pop
repnz
sub
rcll
xchg
sbb
mov
in
push
es
shrb
sub
sbb
push
mov
fcmovb
test
subb
and
stos
inc
lock
dec
adc
push
mov
push
sbb
fiaddl
outsl
push
inc
sub
sbb
fisubrl
xchg
push
outsl
loope
lret
nop
dec
inc
mov
push
adc
movsl
or
ljmp
pop
test
or
mov
adc
dec
cmpb
push
or
inc
dec
orb
or
insl
mov
push
inc
lret
add
jle
xor
sub
gs
adc
cld
leave
leave
test
sbb
xchg
xchg
push
aas
sub
daa
dec
sub
repz
outsl
push
das
pop
int
addr16
int
mov
ret
popa
pop
cmc
cmp
loope
jp
pop
ds
cmpsb
pop
scas
dec
popa
hlt
push
dec
test
dec
push
gs
inc
outsl
pop
inc
dec
push
mov
jbe
in
xor
jo
out
push
loope
test
das
xchg
int3
add
sbb
mov
sarb
adc
popf
sbbl
rorl
xchg
mov
jns
xchg
cltd
test
pop
add
fldl
adc
pop
xchg
xor
mov
dec
pop
cmpsb
mov
cmp
jno
adc
add
push
push
je
dec
adc
in
jae
inc
xor
push
mov
cmp
sbbb
sub
mov
int
int3
adc
shr
mov
negl
add
xor
test
pop
mov
notb
icebp
xchg
js
lcall
jno
push
pop
stos
imul
lock
sbb
or
sbb
mov
adc
cld
adc
xchg
aad
in
inc
dec
mov
xor
or
inc
cmp
lret
sbb
xor
lea
repz
mov
xchg
in
lea
in
inc
sbb
mov
stc
aad
cmp
jle
into
xchg
imul
out
faddl
jp
sbb
cmp
pop
shlb
arpl
cltd
add
xorl
insb
jb
add
rolb
jnp,pt
mov
push
xchg
pop
sbb
lcall
xor
push
shrb
pusha
ret
cwtl
or
push
sbb
mov
xor
sub
cmpsl
iret
rcr
jne
mov
sub
pop
sbb
repz
inc
sub
pop
mov
cwtl
push
inc
or
xor
arpl
jb
fists
push
cli
out
and
inc
xchg
or
cbtw
jecxz
bound
inc
ret
js
or
inc
dec
je,pn
mov
les
mov
ficoms
sbb
mov
dec
inc
jecxz
jg
sbb
jno
addb
movsb
lock
fsubl
out
xor
pop
out
push
stc
orb
popa
ds
ret
int3
cmp
scas
add
insb
popl
insb
inc
or
mov
push
xchg
lock
add
jb
out
dec
subb
push
or
test
roll
xor
and
jmp
std
ss
call
popa
loope
xchg
pop
outsl
into
xor
push
push
push
jns
jne
sub
ja
fisubs
push
mov
shlb
push
pop
out
mov
xchg
jo
sti
cmp
push
cmp
imull
and
fs
mov
sub
jl
inc
out
pop
sbb
inc
imul
int3
and
sbb
fistpl
dec
jle
inc
icebp
dec
in
fldl
cmpsl
mov
int
dec
adc
cmp
or
hlt
inc
push
pusha
aas
insl
sti
pop
fwait
inc
scas
loop
arpl
sub
pop
lahf
int3
mov
jle
and
adc
mov
popa
push
ficompl
nop
pusha
xor
les
cs
daa
jno
movsb
xor
mov
sub
out
pop
xchg
mull
adc
jg
push
mov
cltd
xor
enter
push
inc
cwtl
sub
mov
sbb
adc
sbb
dec
mov
sub
outsl
mov
jb
push
mov
loope
jmp
push
jp
mov
adc
clc
insl
cmc
sbb
jbe
sbb
xor
push
and
sub
cwtl
movsl
mov
push
xorl
lods
outsl
cmpsb
in
pop
iret
cmp
xor
lahf
push
cs
sbb
xchg
push
loop
outsl
jge
loopne
sti
test
shll
scas
rcrl
push
testl
ds
fisttpll
or
push
or
or
sahf
mov
dec
aas
lea
and
je
out
mov
push
icebp
popf
aam
dec
test
inc
insl
dec
das
test
sbb
cmp
cmp
int
mov
dec
ret
js
sahf
dec
shr
stos
or
xchg
fcoms
lods
sub
movl
in
insl
mull
cmp
xchg
stc
push
and
and
stos
mov
fiadds
mov
pushf
jl
nop
cwtl
and
push
jle
test
test
xchg
mov
add
add
mov
xor
ds
pop
rcl
ror
lret
jne
dec
outsb
mov
xor
cmp
fnsave
inc
scas
sti
lea
mov
xchg
sub
xlat
jnp
lret
mov
loope
stos
xchg
je
adc
sub
decb
pop
dec
out
lea
inc
jae
in
jle
mov
pusha
outsb
insl
sbb
cltd
insl
cmp
inc
adc
add
lods
mov
jne
xchg
mov
jmp
push
cmc
mov
ja
ja
bound
pop
lods
ja
and
mov
insb
repnz
mov
lea
div
and
in
cli
xor
clc
aas
psubsb
inc
popf
cmp
pusha
adc
mov
mov
sti
sub
les
scas
xor
pop
xchg
in
arpl
mov
data16
mov
test
jbe
ljmp
push
loop
push
lea
loop
inc
xor
xor
and
lcall
fdivrs
out
jecxz
xlat
sbb
ret
mov
push
mov
test
pfcmpge
pop
lcall
jns
fwait
sbb
mov
stos
mov
and
ljmp
jo
movsl
cmp
pop
shlb
jmp
jle
push
lods
cmp
adc
cmpsb
stos
movsl
pop
fs
mov
jns
js
andl
mov
mov
xorb
data16
rcrl
outsb
sbb
out
xor
adc
pop
mov
jg
add
xchg
xchg
outsl
push
xor
fnstsw
adc
aas
bnd
jb
repz
or
sbb
lret
mov
or
hlt
test
sub
jecxz
push
adcb
clc
mov
rorl
mov
or
cmp
add
outsl
push
pop
or
add
sbb
icebp
jl
mov
push
cmp
and
xor
insb
xchg
add
aad
jge
pop
sub
sbb
sbb
jae
jns
xchg
mov
jae
test
xchg
and
fistpll
inc
sti
mov
cmp
fdivrs
inc
push
mov
popa
sbb
fidivrs
fiaddl
sbb
pusha
in
push
cld
pop
mov
fwait
mov
test
lahf
nop
movzbl
xchg
xor
pop
cs
cmpsb
fadd
push
lret
popa
pop
push
jl
test
dec
cmp
test
ljmp
fs
fistpl
fs
jecxz
bound
xchg
mov
ljmp
adc
test
popa
in
mov
daa
imul
pop
push
shll
int3
and
pushw
mov
cli
out
cmp
xlat
int
mov
xor
popa
dec
mov
adc
pop
inc
mov
jb
push
pop
adc
cmp
xor
inc
imul
push
std
dec
mov
or
sbb
xor
push
xchg
xchg
dec
dec
jno
ror
aaa
pushf
push
es
popa
xchg
pushf
push
ret
cmpsb
flds
push
das
es
jne
mov
out
xor
mov
repz
rep
jnp
std
sbb
out
and
add
out
out
xor
popa
mov
sbb
xchg
cmpsb
loopne
in
xor
fdivs
into
icebp
in
fwait
ret
or
mov
fucomi
or
mov
jo
fs
jge
add
sbb
mov
out
sar
xchg
mov
int
jo,pn
das
mov
adc
mov
mov
clc
or
cmp
xchg
xchg
in
jbe
pop
mov
out
xchg
mov
mov
sbb
inc
jo
cwtl
daa
test
pusha
fiaddl
popf
gs
lret
mov
and
icebp
sarl
jg
xchg
scas
inc
jb
mov
and
cmp
pop
push
jle
imul
mov
mov
pop
cmp
clc
push
inc
stos
inc
jbe
dec
movsb
movsb
or
jg
sahf
hlt
pop
jnp
fmull
push
out
lods
mov
cmpsb
lods
mov
sbb
out
push
outsb
jge
push
cli
adc
cmp
cmp
faddp
insl
mul
adc
fwait
mov
sbb
lods
out
loop
jl
mov
test
jl
arpl
fidivrl
cmpsb
ffree
xchg
mov
xchg
leave
mov
lods
push
daa
incb
push
sbb
dec
pop
insl
and
mov
push
cld
scas
sub
xor
mov
add
mov
std
ret
rolb
andb
adc
pop
mov
and
mov
outsl
nop
gs
aam
cmpsb
xchg
pop
arpl
popf
add
std
notb
inc
lcall
mov
out
xor
leave
dec
xchg
movsl
fldl
jo
xchg
jecxz
pop
lds
pop
cs
pop
call
int3
imul
mov
call
ret
out
in
sti
or
dec
lea
or
popf
scas
add
jge
xor
cli
aam
sbbb
xchg
pop
ret
inc
lea
imul
cmpsb
push
sahf
fwait
and
std
pop
sbbb
sub
out
lods
sub
sub
das
dec
dec
add
imul
adc
pop
and
mov
jg
or
sub
dec
rcrb
inc
sub
or
adc
insb
mov
loop
xchg
lret
dec
aad
mov
popl
sub
js
add
icebp
and
push
mov
sub
cmpsl
test
mov
pop
ds
cmp
cmpsl
lret
inc
test
imul
mov
jmp
xchg
and
mov
add
lds
shrb
xchg
xchg
cmc
nop
lds
jle
mov
mov
dec
lcall
mov
adc
imul
cmpsb
fidivrs
in
add
sub
push
or
jno
dec
inc
mov
jno
mov
das
sub
cmpsb
jae
je
dec
leave
in
sbb
push
mov
out
hlt
inc
jne
push
aad
jmp
pop
xchg
pop
or
mov
sub
inc
inc
jne
test
leave
inc
outsb
iret
lret
pop
mov
xor
xchg
int3
cli
adc
rorl
shrb
sti
ror
add
lret
cmpl
push
faddl
lods
lds
repz
or
lods
or
sbb
push
imul
inc
test
cmp
mov
mov
add
popa
mov
jmp
popf
jle
scas
outsb
or
cmp
adc
std
push
jle
inc
ja
repnz
in
push
lock
mov
loop
shll
ret
push
mov
xchg
bound
xor
and
adc
add
repnz
loop
shlb
ret
push
mov
xchg
bound
xor
and
adc
add
notb
ret
mov
mov
xchg
arpl
xor
and
adc
add
repnz
loop
shlb
movb
and
jbe
xchg
mov
mov
cmpsb
fstl
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmc
inc
in
aad
lds
xor
out
mov
je
gs
sbb
or
jl
outsb
add
mov
lds
faddl
or
sbb
or
adc
dec
in
cs
lods
int
fisttpll
lea
test
insb
jecxz
dec
or
jg
sub
dec
sub
pushf
mov
mov
out
movsl
addr16
rolb
aas
sahf
xchg
sbb
loope
sbb
je
sbb
lahf
std
movsl
adc
pushf
adc
test
jge
scas
adc
mov
andl
jp
inc
and
enter
fldcw
add
mov
dec
cld
movsb
test
test
inc
fs
sub
xchg
sahf
mov
pop
movsl
test
and
test
jne
mov
or
das
and
mov
jl
adc
mov
lea
mov
inc
sub
adc
xchg
adc
mov
lds
xchg
push
pushf
dec
insb
mov
pop
inc
sub
pop
add
lods
mov
mov
mov
sbb
test
es
inc
sbb
push
in
mov
xchg
movsl
fists
pop
add
jns
imul
popa
daa
nop
ljmp
std
cwtl
movsl
in
xchg
faddl
sub
sbb
or
jl
insb
adc
mov
lds
faddl
sub
sbb
or
jl
insb
adc
mov
mov
fldenv
iret
xchg
addb
cld
and
cmpsb
into
push
jno
pop
enter
sbb
jge
or
in
push
test
xlat
inc
imul
sbb
jne
jg
mov
lahf
or
xchg
adc
imul
dec
jg
mov
fcmovnb
sbb
xchg
inc
pop
rolb
adc
and
in
cltd
mov
ret
jge
add
xchg
jg
sub
adc
push
or
loope
sub
leave
js
aad
imul
inc
and
jno
add
mul
mov
inc
mov
mov
cmp
or
add
outsl
cmp
sarb
adc
jmp
insl
fucom
int3
adc
lret
mov
int3
mov
dec
cmp
fnstsw
jle
insb
out
jbe
repnz
daa
jnp
lods
dec
mov
fs
test
xchg
cmc
mov
xor
movsl
xchg
movsl
rorb
lock
in
mov
xchg
rcl
jl
in
lds
pop
mov
in
stos
scas
and
insl
sub
and
jo
and
int
in
cwtl
vpcmpgtd
push
dec
fmul
gs
mov
scas
mov
add
sub
stos
cli
inc
mov
int
pop
lcall
lret
add
pusha
scas
daa
daa
iret
inc
sti
mov
bound
inc
jg
xchg
fdivs
add
daa
dec
outsb
mov
iret
mov
int3
ljmp
pushf
iret
test
jg
test
leave
out
fiaddl
enter
mov
aad
mov
js
push
movsb
leave
int
xchg
icebp
iret
or
xchg
scas
xorl
push
xchg
hlt
fsts
gs
insl
or
test
shrb
jl
dec
jecxz
cwtl
or
sub
sub
repnz
pop
stc
or
scas
call
daa
enter
sub
lea
stos
shll
leave
pop
xlat
pop
in
push
mov
dec
inc
cmpl
cli
mov
ljmp
jae
jo
cmp
and
dec
and
adc
lds
xchg
test
jle
in
xchg
mov
xchg
add
cmp
jnp
movsl
pop
pop
shl
mov
xchg
sbb
gs
inc
xchg
inc
inc
sti
bound
hlt
and
cld
sbb
push
divl
rorl
xchg
mov
dec
imul
mov
jg
lahf
pop
jns
dec
popa
pushf
push
std
jne
xchg
imul
xor
lods
fidivs
mov
pop
pop
inc
popa
hlt
jns
mov
cmp
xchg
jnp
sbb
sbb
sbb
test
push
cltd
sti
jecxz
push
mov
lods
incb
cmp
and
mov
add
out
ficoms
xlat
mov
in
pop
out
jl
jbe
repz
adc
mov
dec
popf
aam
movsl
jno
xchg
mov
test
or
fldt
jecxz
dec
cmp
jge
and
stc
xor
cli
push
and
and
xlat
sub
sbb
adc
pusha
gs
rorl
pop
mov
xor
xchg
repnz
mov
push
and
cmp
cmp
xchg
inc
es
xor
sub
clc
mov
inc
lret
inc
imul
push
cmp
cwtl
add
sahf
pushf
mov
imul
xlat
dec
popf
jo
or
pop
arpl
test
cmp
icebp
xor
or
adc
mov
popa
pop
ljmp
cli
mov
xchg
std
sub
into
mov
cwtl
cli
mov
outsl
push
pop
cmp
repz
insl
mov
push
pop
scas
notl
popa
es
lds
sub
loopne
insl
inc
in
mov
icebp
push
xor
add
pop
jle
sbb
push
hlt
add
push
inc
rcll
sub
arpl
out
mov
sbb
or
in
repnz
in
jmp
pop
stos
mov
out
and
cltd
dec
fwait
mov
jmp
orl
and
gs
inc
out
outsb
xchg
out
cmp
inc
or
cs
aam
sub
pop
cmp
stos
mov
xchg
and
cmp
adc
xorb
sbb
gs
mov
mov
lea
jbe
sahf
out
push
mov
arpl
dec
xchg
cmp
inc
jmp
dec
pop
mov
or
adc
mov
jle
add
cmp
testb
push
lods
push
insl
add
xchg
in
das
push
lods
fmuls
mov
fcoml
fsubs
lret
push
in
sbb
adc
sub
int
cs
lcall
loopne
cmp
shrb
cmc
iret
sub
cmp
add
sub
inc
lock
push
mov
arpl
or
mov
fld
imul
cmpb
jge
je
xchg
push
mov
into
pop
cmp
push
xchg
movsb
ja
ror
jecxz
cmpsb
mov
add
sbb
jmp
cmp
pop
fwait
inc
and
mov
inc
lahf
int
push
daa
mov
sahf
icebp
repnz
rolb
add
in
sarl
mov
addb
movsl
in
andl
push
mov
dec
mov
sbb
pop
cltd
movsl
push
bnd
or
xor
ljmp
int3
les
xchg
pop
jb
add
repnz
shrl
push
testb
rcrl
pusha
dec
sbbb
cli
stc
loope
fistl
dec
mov
mov
jmp
into
out
xchg
je
push
je
and
ret
push
les
fmull
icebp
xor
sbb
or
pushf
stos
ret
adcl
cmp
cltd
into
out
sarl
mov
or
jo
jecxz
and
mov
pop
fists
and
scas
test
in
int3
or
or
sbb
shr
data16
imul
and
push
sub
jbe
mov
dec
pushf
xlat
cmp
loope
js
pop
mov
mov
pop
movsl
ror
mov
int3
loopne
mov
mov
out
mov
xchg
sti
dec
jmp
and
and
scas
pop
repnz
hlt
popa
fcmovu
dec
icebp
pop
sarb
lcall
xchg
mov
dec
pop
or
lcall
pop
lahf
fwait
imul
mov
xor
and
and
lcall
push
scas
stos
jmp
ror
jecxz
adc
movsl
pop
fldt
pushl
test
aaa
inc
sarb
shrb
pushf
and
or
xchg
cld
mov
push
mov
stc
xchg
mov
ljmp
jp
jb
xor
add
aam
daa
out
pop
jecxz
adc
out
add
inc
xor
add
jg
jmp
lahf
filds
xor
shlb
xor
jle
in
pop
roll
mov
push
mov
jmp
and
sub
mov
stc
aaa
lcall
lret
xchg
or
mov
lods
out
iret
jo
sahf
lret
and
mov
movsl
xchg
orb
add
repnz
inc
mov
aaa
loop
inc
add
call
pop
ja
sub
pusha
mov
je
jmp
test
negb
das
test
mov
lret
lock
mov
mov
pop
in
and
ficoml
dec
orb
xor
cmpsl
pop
push
mov
xchg
fstl
xlat
test
test
dec
loopne
xchg
push
xchg
hlt
iret
inc
jp
out
ss
and
insl
push
mov
out
mov
sub
in
lret
sbb
add
adc
fldenv
pushf
mov
and
icebp
mov
rcll
pop
fs
push
adc
adc
dec
xchg
jno
test
sub
pop
faddl
test
imul
jecxz
lcall
aaa
xor
dec
test
es
dec
lcall
push
adc
cmpsl
sahf
jns
bound
cwtl
sbb
inc
pop
dec
fcmovne
inc
jge
add
sbb
xchg
adc
pop
insb
loop
repnz
push
ret
jno
push
cmp
pop
push
dec
fdivp
test
pusha
lods
repnz
xchg
mov
sub
sbb
lret
mov
aad
sbb
subb
dec
mov
int
lds
dec
inc
fcoml
sbb
sub
inc
loopne
jns
cmpsl
and
xor
incb
jmp
rorl
sub
mov
push
push
flds
jae
out
or
std
lcall
add
aas
loopne
cs
js
pusha
adc
faddl
insb
mov
daa
sbb
push
xchg
or
in
movsb
push
das
dec
mov
xchg
sbb
flds
cltd
sarl
cmpsl
fsubrp
in
fstpl
and
and
mov
jae
xchg
and
pop
inc
dec
add
out
adc
mov
movsl
mov
mov
iret
fwait
jnp
pushf
cmpsl
pop
jl
dec
xchg
leave
fwait
rcr
mov
lods
arpl
cmp
addr16
mov
cmpl
scas
fwait
jns
imul
lods
jmp
dec
out
addr16
push
test
icebp
scas
and
insl
nop
idivw
sbb
loop
outsb
sbb
data16
jle
mov
cmc
lock
in
xchg
adc
cmc
xchg
inc
popa
test
adc
cwtl
or
pop
mov
pop
xchg
scas
ficoml
xchg
cli
imul
push
rolb
cltd
movb
fimuls
mov
mov
push
stc
or
les
out
std
imul
stos
xor
call
shll
sbb
add
stos
add
ss
pop
adc
pop
xor
hlt
test
sub
stc
jecxz
xchg
cmp
push
lds
mov
mov
addr16
xchg
sbb
xor
das
ret
mov
xchg
jmp
xchg
push
mov
sub
sti
inc
sti
mov
and
jae
lea
pop
sbb
mov
loopne
rorl
ret
fnstenv
ljmp
push
aaa
dec
inc
lret
lock
push
push
pop
lret
dec
jmp
out
repnz
inc
push
or
lods
fsts
cmp
jmp
push
loope
xor
mov
test
fwait
push
sti
pop
adc
push
adc
loop
pop
mov
data16
loop
and
add
stc
aam
mov
sbb
out
mov
es
ss
lods
jno
cwtl
popa
negb
and
xor
fcmovnb
pop
in
fsubr
hlt
add
ljmp
dec
add
mov
leave
jno
andb
out
hlt
push
es
xchg
sbbb
nop
inc
jmp
adc
push
cmp
mov
xor
movb
adcl
stos
push
ja
loop
pop
insl
adc
and
pop
lds
dec
mov
mov
lea
adc
xor
insl
sti
cld
add
imul
push
test
rcr
mov
lcall
roll
cld
mov
shll
shll
jle
sbb
cmp
dec
insb
fstl
decl
xchg
or
xchg
mov
mov
xor
pusha
xchg
in
ljmp
test
call
cs
je
or
inc
in
adc
gs
iret
lcall
mov
dec
mov
int3
mov
mov
xchg
arpl
xchg
add
xchg
out
push
mov
jo
xchg
test
xchg
icebp
pop
movsb
nop
sbb
shll
cltd
dec
roll
lcall
cmp
adc
cs
insl
push
test
pop
and
inc
inc
jmp
cltd
sbb
push
sub
add
fdivrl
cmp
xchg
addb
outsl
mov
mov
sbb
addb
popa
push
jmp
push
mov
xlat
rol
pop
aad
mov
mov
pop
pop
pop
sti
or
and
jmp
aas
add
dec
into
push
pop
adc
inc
enter
out
dec
test
push
es
push
xchg
fxch
cltd
jmp
cld
pop
dec
or
mov
fcomi
ret
xor
clc
inc
fsubrs
cmp
fists
adc
cmp
and
mov
aaa
cltd
push
add
cmp
mov
sub
jmp
push
pop
xor
inc
cmpsb
jle
ss
push
push
jns
or
ds
mov
stos
pop
sarb
mov
movsl
add
cs
lret
lods
popa
call
xor
enter
lds
testb
pop
popa
lods
aad
cmp
jp
or
movl
mov
add
aaa
rcrl
dec
ror
sbb
repnz
cmc
or
xchg
mov
scas
mov
cmp
scas
int3
cmp
and
jb
ja
mov
sbb
loop
add
sub
xor
jb
jae
sahf
fmulp
cmp
ds
popf
lret
sbb
popf
sub
loop
add
repnz
jne
fstl
mov
push
aas
sbb
mov
loope
pop
mov
inc
adc
insb
cmp
pop
sbb
testl
lods
mov
lret
ljmp
or
jne
fisubrs
inc
mov
sbb
cmpsl
lret
test
and
mov
movsl
lds
xchg
mov
out
pop
enter
add
out
inc
mov
loop
lods
adc
push
stos
imul
inc
hlt
fsubl
lods
sub
push
loope
leave
xchg
stos
cmp
pop
rcr
push
xorb
or
cmpb
aam
push
enter
push
push
xchg
jbe
popf
mov
out
xchg
icebp
xor
adc
and
jb
sub
mov
in
xchg
nop
mov
jecxz
cwtl
gs
out
sub
jge
das
cmp
xchg
into
dec
loopne
ss
js
adc
mov
inc
cli
in
rorl
mov
leave
insb
int3
aam
jl
insl
les
ds
push
push
and
fdivl
es
xchg
out
push
mov
es
icebp
mov
lret
lods
out
es
jbe
mov
mov
insb
jecxz
add
nop
fsubs
stc
rorl
sar
push
sub
sub
push
adc
jne
xchg
adc
cs
push
pop
aad
xor
fistps
dec
ret
sbbl
andb
dec
sub
xor
mull
mov
repz
outsl
out
xor
gs
ds
aas
stc
or
int3
loopne
out
add
xor
cltd
lods
push
shl
mov
xchg
pop
add
ja
movsb
xlat
adc
mov
in
popf
inc
aam
movsl
mov
xchg
lcall
sub
and
xor
pop
xor
ret
mov
loop
test
sub
mov
xchg
xor
in
scas
outsl
inc
mov
xor
mov
fdivl
sbb
sti
les
in
jbe
dec
fldt
xchg
sbb
cmpsb
jo
insb
jbe
mov
mov
xchg
jnp
sbb
jp
imul
mov
adc
aaa
or
mov
xchg
imul
mov
xor
fcmovne
es
inc
mov
jle
shl
add
loop
sbb
and
adc
xchg
inc
je
iret
or
adc
xchg
sub
faddp
xchg
aas
jle
out
inc
in
add
fdivs
pop
and
iret
ret
imul
nop
fldl
lock
fisubs
fimull
stos
sub
push
push
add
jne
mov
daa
mov
mov
ljmp
aaa
stos
cmp
int
jnp
out
popa
shl
cmp
fidivs
mov
test
out
iret
cs
mov
push
cmp
idivb
je
mov
or
fstpl
mov
jg
and
movsb
adc
add
xchg
sbb
inc
mov
adc
inc
xchg
shll
jge
adc
into
sub
add
inc
fldz
imul
ljmp
cmpl
lds
jae
mov
sarl
lods
mov
sub
and
mov
mov
pop
gs
leave
add
loopne
cli
pushf
dec
ror
adc
iret
adc
xor
in
mov
xchg
mov
xchg
mov
call
sbb
jbe
addr16
inc
xchg
pop
push
mov
xchg
les
lret
jbe
inc
pop
call
push
sub
stc
in
sub
popa
and
mov
jae
addl
data16
lahf
cmpsb
mov
lock
fsubr
sbb
fcmovnu
leave
pop
and
or
or
jle
jge
xor
mov
or
je
dec
in
cmp
data16
sahf
fidivrs
pushf
sbb
push
push
imul
jle
out
stos
cs
lods
pop
loopne
xor
lock
repz
scas
aam
ss
sub
addr16
addr16
scas
xlat
pop
filds
cmpsb
sub
pop
dec
xchg
enter
lock
mov
inc
cmpsl
adc
pop
mov
mov
es
aas
sbb
cmpsl
inc
repz
sahf
add
or
sbb
scas
lods
lods
push
in
xor
cmp
mov
jnp
cli
mov
je
push
fcompl
xor
sbb
push
add
std
enter
sub
lds
and
cmp
jg
nop
or
hlt
ret
inc
or
xlat
ljmp
pop
subb
jmp
sbb
sbb
xor
add
xor
xchg
push
sti
xlat
mov
aad
stc
lcall
add
push
je
ret
shl
mov
push
and
pop
push
in
test
hlt
jg
outsl
push
sub
enter
pop
std
sbb
imul
add
ret
pop
aam
icebp
xchg
pop
fisttpl
mov
cmp
and
call
mov
aas
dec
icebp
pop
shl
ret
xlat
aad
mov
mov
pop
std
addl
or
xorl
rdtsc
aam
shr
ret
in
out
cmp
add
xchg
pop
xor
cmp
arpl
iret
xor
sahf
test
sahf
movsl
adc
aad
push
and
inc
cli
faddp
or
mov
push
repnz
cmpsl
test
adc
adc
repnz
in
ret
das
mov
arpl
outsl
inc
lock
cmp
sub
dec
mov
arpl
push
out
or
mov
iret
repz
movsl
sbb
out
pusha
lcall
movsl
rorl
mov
mov
cltd
repz
xor
xor
mov
stos
aam
es
pop
add
addl
mov
xchg
das
sbb
shrl
popa
jbe
out
or
pushw
repz
xlat
jne
adc
adc
outsb
xor
into
es
sti
cwtl
dec
bswap
fcompl
arpl
adc
ds
and
lea
mov
mov
ret
xlat
std
jbe
shll
inc
mulb
scas
stc
cld
mov
roll
or
mov
pop
outsl
cs
and
sti
adc
enter
mov
je
mov
sub
subl
and
in
pop
cli
jp
mov
movl
lahf
outsl
shlb
rorl
push
mov
dec
pop
jo
scas
outsb
std
xor
lcall
dec
push
call
sbb
aas
inc
push
mov
hlt
clc
movsb
sar
lret
outsb
bound
popf
inc
pop
cltd
fmuls
mov
adc
sub
pop
repnz
sub
iret
lret
mov
inc
cld
mov
test
dec
lret
dec
cmp
gs
jp
mov
or
test
mov
rcrl
mov
xor
lcall
leave
mov
in
rcl
xchg
cmp
loopne
and
adcl
inc
fucomip
out
add
mov
loope
pop
push
rcr
dec
mov
xor
clc
loopne
rorl
out
xor
and
loop
ljmp
fildll
inc
mov
cmp
je
int3
inc
ret
adc
push
out
xchg
mov
pop
int3
push
jo
data16
push
mov
movsb
lea
sbb
test
mov
cmp
mov
ror
lahf
imul
sub
jmp
fdivp
sbb
int3
xlat
inc
jnp
cmp
cmp
popa
aas
xchg
or
rorl
ss
xor
in
fstps
out
mov
dec
add
stos
jge
hlt
add
inc
cwtl
and
lret
push
int
ljmp
pop
push
dec
cmc
ret
fucomp
les
sbb
push
add
mov
or
out
sti
fcmovne
cmp
push
mov
and
mov
mov
ss
ret
jbe
or
imul
shrl
icebp
cmp
jl
fwait
pushf
icebp
mov
xchg
cmp
sbb
adc
sarb
jb
pop
push
pop
jb
xchg
mov
lods
fcomip
lds
faddl
sub
sbb
or
jl
insb
adc
mov
lds
faddl
sub
sbb
or
jl
insb
adc
mov
lds
faddl
sub
sbb
or
jl
insb
adc
mov
lds
adc
ret
lcall
hlt
lods
xchg
ljmp
popa
add
adc
outsb
push
sbb
xor
cmp
stos
andb
or
rcl
shrl
xor
add
adc
pusha
jno
popa
inc
push
push
outsl
lock
mov
loopne
xchg
loope
rcl
sar
mov
xchg
cmp
insb
pop
test
mov
lock
repz
movsl
popa
jne
pusha
inc
inc
addr16
xor
adcb
sbb
sub
mov
loopw
gs
xor
imul
pop
jg
jnp
gs
mov
jo
and
dec
nop
icebp
call
mov
dec
mov
nop
outsb
jg
add
xor
dec
and
inc
add
push
inc
xchg
push
int3
mov
jecxz
nop
outsb
outsl
subb
insb
aad
das
mov
in
sar
lahf
inc
repz
add
sbb
jg
xchg
jno
fwait
lock
nop
andb
jmp
in
mov
pop
loop
icebp
addl
movsb
test
xor
add
add
xor
inc
push
call
or
mov
ror
repz
xor
inc
jge
insl
push
aam
or
and
push
shl
rcl
xor
loop
mov
mov
mov
insl
or
adc
sub
and
shl
aam
ret
cld
mov
mov
xchg
mov
inc
add
jo
push
insl
and
push
push
inc
mov
xchg
nop
and
rcl
shll
xor
add
adc
pusha
jno
popa
inc
push
push
inc
mov
xchg
nop
and
rcl
shll
hlt
ja
insb
dec
out
sub
pop
push
jecxz
add
cmpsl
add
je
arpl
mov
leave
pop
jmp
adc
std
and
cld
lahf
scas
aad
mov
inc
test
fcmovnbe
nop
loop
stc
sbb
test
loop
int
and
aam
add
mov
pop
pop
enter
adc
mov
push
cmpsl
nop
jmp
lcall
stos
into
push
jmp
into
icebp
cmp
add
rol
cmc
enter
leave
call
adc
pop
xchg
sbb
daa
cmpsb
mov
insl
imul
mov
outsb
jl
ja
mov
fdivr
lret
and
push
xor
xor
mov
jmp
mov
call
shll
jno
ror
jb
push
je
pop
popa
push
ficoms
adc
push
push
test
cwtl
test
push
hlt
mov
mov
and
push
jb
sbb
or
mov
rcr
mov
and
mov
scas
xchg
sbb
jns
jle
scas
cmp
mov
clc
and
or
mov
xchg
jno
mov
out
subb
fldcw
jmp
out
pop
cmpsl
cmp
pusha
pop
das
cs
dec
xchg
mov
mov
and
cltd
push
int
outsb
sbb
js
inc
loop
mov
xchg
addr16
adc
mov
xchg
fwait
ret
notb
jb
mov
mov
hlt
sahf
insl
arpl
aas
fimull
dec
pop
pushf
or
or
add
xchg
test
loope
jmp
pop
pop
fidivl
aas
ret
ret
sbb
xchg
push
and
or
adc
mov
stos
hlt
cli
jecxz
jnp
inc
fnstcw
mov
mov
faddl
xchg
push
and
decb
adc
rcll
xchg
bound
sub
add
mov
fcomps
inc
jb
jno
pushf
nop
adc
outsl
loop
add
enter
inc
dec
daa
addb
cmp
push
xor
add
inc
loope
pop
mov
mov
cmp
cwtl
sub
jne
fimull
push
in
cli
negl
xor
lods
ret
les
jbe
fisttpl
xor
fdiv
outsl
inc
mov
adc
fmuls
lods
enter
mov
dec
jb
lret
and
ret
mov
sbb
mov
or
jo
or
mov
sbb
jns
in
mov
loopne
cmpsl
xchg
xchg
int
mov
cmpsb
xchg
mov
addb
fsubr
leave
push
push
dec
and
std
mov
or
sahf
arpl
loope
lcall
hlt
aas
in
cmpsb
xchg
sub
ds
int
sbb
je
js
xchg
pop
adc
sbb
adc
pop
xor
adc
fistl
xlat
ret
rorb
mov
mov
sbb
incl
movsl
and
in
inc
adc
test
repnz
pop
subb
add
jp
pop
or
cli
xor
pop
mov
push
stc
jbe
cs
iret
ret
or
es
aad
pop
add
inc
mov
pop
loope
xchg
xlat
xor
mov
sahf
push
jl
scas
mov
cmp
fisubs
or
scas
fldt
push
cmp
jmp
stos
fcoml
insb
mov
sbb
pop
int
cwtl
adc
add
push
sbb
jns
pop
pop
push
popf
dec
scas
xchg
inc
or
mov
ds
fwait
cmpsb
or
adc
mov
js
movsl
nop
daa
mov
pop
ret
push
dec
push
out
adc
jmp
imul
mov
sub
mov
add
loope
shll
je
adc
loop
adc
punpckhbw
aas
mov
add
or
repnz
sub
mov
mov
adc
insb
push
roll
mov
and
jmp
out
dec
jge
scas
insb
xchg
cmpsl
mov
jl
das
mov
into
mov
je
pop
das
jle
add
or
push
in
les
mov
sub
dec
lods
push
iret
mov
push
xadd
sbb
push
jl
or
int
or
lahf
xchg
shrb
cmpsb
mov
sbb
push
stc
fcmovbe
inc
ds
jg
sbbb
jo
sub
iret
int
addb
pop
xchg
add
sub
cs
negl
xchg
adc
sysret
xchg
fiadds
out
sbb
cmp
cmp
sub
into
ss
and
mov
sub
mov
adc
popa
addl
sti
xor
pop
ret
or
mov
sbb
mov
jmp
mov
arpl
mov
and
setno
mov
jb
loopne
je
mov
add
pop
mov
jmp
fnstcw
jle
jp
out
mov
lret
pop
sub
inc
cmp
bound
mov
cmp
jbe
decb
into
xchg
mov
push
xchg
cmp
sbb
push
ret
xor
aaa
or
int
outsl
sub
sbb
xlat
fildl
dec
pop
jmp
mov
jno
dec
adc
cmp
arpl
xor
out
cld
scas
int
adc
xor
sbb
jbe
ljmp
fdiv
ds
xchg
movsb
lods
cmpsl
sub
test
in
adc
mov
stc
sub
sarb
inc
stos
jle
test
stos
jne
jns
sub
jecxz
lret
push
jae
stos
sub
int
inc
fsubrl
insl
scas
clc
pusha
shrl
lcall
pop
dec
mov
into
dec
push
inc
ficompl
cmp
add
enter
orl
int3
in
jns
jno
xchg
mov
orb
dec
addl
sahf
adc
andl
lods
jnp
mov
jg
add
je
out
push
addr16
xchg
adc
pop
lret
mov
mov
dec
ss
mov
aaa
jmp
ficompl
pop
mov
xchg
jns
rolb
rcr
mov
jl
sub
ljmp
push
xor
and
ja
lods
dec
outsl
test
fldenv
add
jo
mov
outsl
imul
add
add
lds
mov
xor
push
call
ds
jecxz
pop
das
xchg
ja
jae
sub
std
inc
in
xchg
cmpsb
jmp
faddp
and
cmp
cmpsl
sbb
scas
in
rcrl
mov
ret
cmp
fs
enter
das
mov
dec
pop
lcall
aam
fcmovbe
in
std
outsb
xor
in
pop
insb
cmp
cltd
or
cs
cmp
dec
add
out
test
fwait
test
cli
cmc
arpl
imull
or
fs
ja
psrad
imul
sub
add
mov
xor
pop
and
push
xor
mov
mov
mov
or
repnz
jo
or
xlat
scas
scas
adc
xchg
push
mov
in
xchg
sahf
scas
imul
xor
mov
lret
sub
popf
fisubrs
ret
inc
mov
xor
outsb
xchg
stc
jae
jl
scas
mov
xchg
xchg
jl
mov
insl
mull
sbb
pusha
push
xor
and
lahf
xor
inc
iret
and
pop
aam
jp
jae
inc
gs
sti
test
cmp
jno
jnp
push
push
je
or
adc
sahf
in
inc
out
push
mov
sbb
pop
stc
mov
ficompl
xchg
scas
inc
repnz
es
shlb
or
mov
sbb
aad
mov
mov
loopne
jl
jmp
hlt
ss
icebp
push
push
and
xchg
fisttpl
cmpsb
lret
call
dec
sbb
aas
pusha
xchg
pushf
cmp
aaa
mull
pop
mov
scas
lret
cmp
jns
xchg
int3
jnp
jo
ret
stos
or
sub
sbb
xchg
pop
stc
sbb
jns
fs
mov
ljmp
aad
scas
insb
mov
outsl
cmp
mov
cltd
daa
jno
push
fcompl
cmc
cs
clc
out
inc
aas
xchg
push
push
xor
mov
xlat
mov
xor
adc
loopne
xchg
movl
js
and
mulb
lods
insb
dec
inc
sub
stc
cmp
js
sbb
in
xor
test
pop
js
pop
out
fnstenv
fmull
loope
jae
stos
imul
loop
in
ljmp
xchg
in
add
jne
shl
pop
rcr
ret
or
movsl
pop
dec
cmp
xchg
jl
out
pushf
nop
pop
stos
dec
inc
in
cli
sub
std
insl
imul
sub
add
insb
cmp
jecxz
add
nop
or
std
mov
sbb
and
push
sti
push
or
mov
jns
test
xchg
mov
xor
xor
loopne
in
fcompl
cmp
xor
adc
pop
or
jae
fisubl
das
pushf
loope
pushf
std
pop
lods
push
cmp
scas
jne
fistpl
or
test
mov
inc
loopne
jle
and
hlt
dec
mov
add
mov
mov
jns
nop
push
and
cld
xchg
shrl
ret
sbb
shlb
es
pop
test
or
movsl
adc
test
jbe
or
sahf
imul
call
aam
sti
sbb
adcb
jle
test
mov
jno
lock
mov
pop
push
ss
jns
jb
sti
mov
lock
ja
mov
insl
cmp
movsl
shrb
inc
lcall
add
adc
dec
xchg
into
fidivrl
sbb
filds
sub
mov
jne
sarl
in
sub
fwait
xchg
dec
push
or
sbb
mov
scas
sbb
push
pop
adc
or
adc
cmp
jecxz
addr16
clc
loop
fsubl
lret
pop
cmp
out
cmp
mov
adc
das
stc
bound
or
movsb
ss
mov
jmp
notl
test
arpl
mov
and
adc
subl
sbb
and
loope
sub
lahf
dec
or
dec
fsubrs
push
mov
stos
outsb
push
ficoms
iret
jne
shlb
adcb
cltd
insl
sbb
mov
jge
movsb
in
push
jle
pop
pop
in
add
xor
jmp
add
xchg
mov
rcrl
repz
inc
dec
or
sbb
push
les
mov
popa
cmp
jmp
and
lds
xchg
xchg
stos
push
mov
xchg
xor
mov
jle
stc
push
insb
into
shrb
stos
and
xchg
jne
pop
jno
mov
movsb
and
shr
fldenv
pop
mov
fisubrs
pop
push
scas
jnp,pn
dec
mov
inc
popf
push
cltd
jo
mov
mov
inc
out
xor
out
pop
inc
outsl
sub
add
outsl
sbb
out
push
jmp
dec
arpl
imul
push
cmp
dec
xlat
cmp
sub
sbb
insb
pop
aad
push
lcall
gs
or
aad
dec
xlat
and
mov
xchg
adc
inc
xorl
sarb
xchg
add
push
and
frstor
loope
outsb
and
aas
mov
aam
sub
insb
gs
popa
and
jnp
rcrl
out
nop
dec
cwtl
sub
xlat
scas
xchg
stc
push
xor
push
mov
xlat
cmpsl
dec
js
mov
repnz
mov
into
jnp
shrl
xchg
pop
in
inc
xor
sbb
addb
mov
cmp
int
mov
push
jb
aad
outsl
iret
dec
or
and
mov
sbb
roll
aaa
stos
fsubl
sarl
test
stos
scas
movsbl
sbb
fcompl
pop
jg
clc
fs
sub
push
je
lea
add
mov
aad
out
inc
cmp
pop
cwtl
cmp
sub
sub
mov
repnz
pushf
cltd
dec
fwait
sbb
push
jns
and
jb
fwait
cwtl
dec
pushf
mov
and
fmull
out
push
rcrl
sbb
arpl
push
xlat
add
mov
dec
test
sbb
sub
lret
inc
enter
xchg
inc
arpl
push
fwait
push
add
mov
mov
loopne
jmp
loop
cmpsb
mov
mov
mov
dec
imul
pop
dec
rclb
push
cmp
lods
ret
mov
mov
and
sbb
dec
jp
jecxz
jo
pop
pop
sub
mov
sbb
test
mov
insl
mov
xchg
movsb
repnz
iret
out
in
rorl
cmp
repnz
pop
fdivr
push
pop
mov
sub
xchg
ljmp
je
repnz
xor
jno
in
nop
or
mov
cld
mov
cs
aad
or
mov
stos
dec
test
lcall
sbb
inc
pop
xor
push
inc
push
fdiv
push
xor
mov
movsl
cmp
mov
pop
xchg
rcll
gs
inc
ja
inc
lret
sti
rclb
push
add
add
xchg
or
or
test
lods
clc
xchg
js
xlat
cld
pop
mov
sbb
push
jmp
fdivl
sbb
test
inc
loopne
insb
sbb
outsb
test
mov
and
or
mov
cmp
jle
push
jb
mov
arpl
fisttpll
js
scas
es
inc
sub
inc
shr
xchg
dec
inc
push
mov
ss
std
ret
in
cld
or
fiadds
shl
flds
xchg
push
cwtl
inc
jg
push
jmp
into
sbb
fst
adc
pop
dec
xchg
and
dec
negb
jl
inc
mov
jecxz
push
iret
pop
jmp
enter
hlt
pop
data16
jle
xchg
xchg
in
rorb
mov
pusha
and
adc
xlat
mov
mov
mov
or
jg
pop
bound
jl
lock
jge
jb
dec
mov
pop
mov
add
add
xor
push
loopne
sahf
aam
lea
stc
nop
jle
ds
cmp
icebp
scas
cmpsl
adc
mov
sbb
jnp
dec
decl
or
mov
mov
cltd
iret
jp
sbb
or
push
inc
lods
push
cmc
sbb
pop
add
pop
sbb
rorb
xchg
shrl
and
jmp
call
mov
mov
aas
aad
sub
add
js
sub
add
adc
gs
je
gs
out
leave
jo
push
mov
fidivl
push
pop
push
jge
inc
jbe
and
push
loopne
imul
pusha
adc
inc
fwait
popa
outsb
fs
add
jo
es
xchg
in
ret
arpl
in
sub
xchg
cmp
lret
scas
call
add
mov
nop
mov
or
mov
ret
jae
pop
int
pusha
jno
cmpsb
bound
add
dec
subl
lcall
dec
and
lret
out
daa
and
ret
test
dec
jl
mov
sub
lods
cmp
push
inc
cmp
lret
shrl
lods
mov
or
add
jp
and
pop
dec
pop
shl
ret
mov
push
fidivs
outsb
or
or
sbb
xchg
jb
cmp
testb
adc
inc
adc
leave
sub
mov
xor
dec
inc
xor
in
mov
rcll
data16
insb
cmp
add
ds
or
jae
mov
xlat
in
push
fnstenv
ret
adc
arpl
sbb
or
ret
stc
pop
jno
cmp
loop
nop
test
lcall
ror
cld
andb
mov
pop
jns
cmpl
adc
aad
stc
inc
testb
in
fwait
adc
xor
fcompl
nop
popa
subb
mov
test
and
lods
pop
lahf
sbb
push
push
insl
pop
add
xchg
ss
stos
pop
movsl
pop
imul
in
aad
out
ss
popf
xor
sub
loope
cmp
or
sub
scas
xchg
sub
xor
jecxz
in
sub
fldenv
mov
pop
sub
je
out
sbb
jl
cmpsb
cwtl
ret
fisubrs
cltd
push
mov
xor
pop
pop
aam
sahf
int
lahf
jb
aam
mov
push
shlb
imul
in
xchg
add
pushf
pop
sub
vphsubbw
mov
outsb
arpl
dec
mov
repz
leave
popa
fistps
loopne
dec
mov
sub
popf
push
aad
and
ss
fucom
push
std
data16
push
and
jmp
imul
pop
test
lods
dec
lods
cmp
add
subb
mov
faddp
cmp
aad
ds
or
ja
sbb
mov
push
inc
cld
cmp
jno
imul
in
ret
dec
xchg
jg
jle
jno
jb
imul
mov
inc
add
js
sbb
stos
sub
test
sub
and
leave
sub
jo
push
outsl
cmp
pop
nop
dec
lahf
pop
or
and
in
inc
imul
and
sbb
sub
call
movsl
sti
das
out
out
or
scas
cmpsb
icebp
outsl
add
pop
jecxz
in
adc
inc
bswap
enter
or
ljmp
mov
sub
in
pop
test
lret
and
imul
push
jecxz
cmp
ss
jmp
xlat
jnp
fildll
fcomps
push
loopne
scas
push
add
movsb
pop
imul
cltd
xchg
testb
lret
push
sarb
pop
jnp
jecxz
add
in
je
ljmp
xchg
mov
xor
xchg
push
in
cltd
je
repz
cld
aaa
inc
sbb
inc
andl
divb
inc
inc
ror
popf
push
push
hlt
xor
push
add
pushf
in
add
push
jge
cwtl
stos
lea
and
add
pop
fldt
pop
andb
icebp
in
pop
sub
push
xchg
mov
or
out
xor
or
mov
sub
negl
xorb
ljmp
scas
jle
lahf
mov
rcrb
xlat
adc
xchg
jle
mov
mov
mov
sbb
sbb
cmpsl
mov
shrb
outsb
icebp
ficompl
xchg
sarl
jecxz
xchg
inc
mov
out
cs
mov
mov
inc
or
jecxz
aas
push
push
imull
loope
add
cltd
lods
loope
and
xor
mov
sub
clc
sub
xor
insl
bound
aas
xchg
push
cmp
out
bound
cli
xor
data16
and
adc
outsb
sbb
push
and
or
cmp
adc
pop
add
ljmp
in
xchg
adc
cmp
cmpb
jmp
outsl
scas
add
popf
push
push
data16
cmp
test
cmp
mov
add
insb
into
inc
and
cmc
movsl
sbb
in
stos
insl
leave
mov
es
stos
or
rcll
mov
das
adc
sbb
sarb
pop
push
xor
movsb
or
es
adc
mov
repz
cltd
or
test
cwtl
push
adc
arpl
cmp
lods
pop
call
fs
outsb
test
fmuls
pop
lcall
mov
arpl
mov
xlat
sub
pop
ficomps
lock
int
pop
leave
pop
jle
addr16
inc
mov
in
jmp
enter
push
outsb
cmp
icebp
push
aam
adc
test
sbb
vmovq
dec
negl
decl
scas
dec
orl
cmp
push
fs
inc
mov
andb
fs
pop
mov
xor
iret
insb
xchg
jo
jae
push
ja
cmp
arpl
cmc
add
jae
adc
cli
icebp
pop
pop
mov
sub
cmp
mov
daa
xor
pusha
js
pushf
sbb
ja
mov
mov
iret
and
push
cmpsl
pop
mov
dec
into
int3
pop
lods
push
jp
addr16
pusha
cmpsl
inc
inc
pusha
fs
jno
fildll
xchg
pop
mov
or
aaa
push
insl
ficoml
mov
and
sub
jbe
jg
hlt
push
or
jp
lret
pusha
les
int
ret
dec
mov
ret
cmc
inc
outsb
inc
pop
and
pop
cmp
mov
icebp
or
dec
ja
mov
icebp
xchg
jno
gs
call
pop
stos
test
sahf
pop
push
and
or
pusha
jno
popa
inc
push
push
inc
mov
xchg
nop
and
rcl
shll
xor
add
adc
pusha
jno
popa
inc
push
push
inc
mov
xchg
nop
and
rcl
shll
xor
adc
adc
inc
push
push
inc
movsb
mov
movsl
mov
jmp
and
mov
cmp
jno
popa
inc
rcl
andl
mov
aas
test
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
rclb
lock
add
int3
lods
ret
cld
nop
or
add
add
add
add
add
add
add
adc
filds
or
add
add
add
add
add
add
add
popa
add
pop
add
add
add
add
add
mov
add
mov
xor
adc
enter
sub
add
push
add
add
add
push
add
add
add
mov
sub
jno
mov
or
mov
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
jb
call
add
add
add
add
add
dec
add
add
jl
jns
xlat
add
add
jle
and
adc
cld
add
add
inc
add
or
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
fadds
jecxz
lret
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
jecxz
addl
xchg
add
jnp
xor
imul
add
add
stc
add
add
add
cld
add
add
jo
outsl
add
add
adc
or
cmp
adc
iret
add
insb
add
add
add
add
flds
fiaddl
add
add
dec
add
add
add
add
addl
add
add
imul
add
add
add
cmp
roll
jbe
mov
sub
cmp
add
js
repnz
add
add
imul
add
add
add
add
add
add
add
add
add
jge
ljmp
add
add
add
inc
add
and
lahf
add
add
add
add
add
xchg
add
add
or
cmp
sub
insl
add
add
add
dec
add
add
pusha
add
add
add
add
inc
add
mov
add
add
add
add
add
add
adc
add
add
sub
mov
adc
add
popa
add
pop
add
add
push
add
add
add
add
add
int3
add
sub
add
inc
add
and
add
add
inc
add
jbe
and
hlt
add
pop
and
sub
out
add
add
push
add
add
add
push
add
jge
repnz
add
add
add
add
pop
add
and
insb
add
add
add
int
scas
add
add
inc
add
add
out
insb
add
add
add
add
int3
add
add
and
call
add
out
add
or
sbb
inc
add
sahf
add
add
add
add
add
add
or
movl
push
add
add
add
add
test
add
sahf
add
xchg
add
add
add
add
add
add
fadds
push
add
or
add
add
add
add
dec
add
add
cmp
ficoms
lock
mov
mov
and
xor
rorb
mov
sti
inc
mov
cmc
add
pop
jno
mov
pop
lods
adc
mov
inc
xor
test
pushf
mov
inc
cmp
es
imul
xchg
adc
loopne
test
gs
jle
int
jecxz
add
arpl
add
dec
in
and
adc
inc
enter
sbb
cmp
mul
lret
sbb
leave
sbb
cmpb
xchg
int
ss
sbb
cmp
dec
jmp
dec
popf
jecxz
lods
fsubr
jb
mov
or
jecxz
push
loope
les
mov
out
push
jae
movsb
stc
adc
jae
add
sub
cmp
sbb
test
cli
pop
pop
xchg
test
je
sbb
adc
icebp
xlat
adc
jo,pt
add
aad
mov
push
stc
imul
inc
xor
test
roll
mov
jae
test
aad
pushf
fidivrs
jl
pop
inc
pop
js
add
scas
pusha
jbe
sbb
es
mov
icebp
mov
jo
shrl
bound
cmpsb
ljmp
testb
jg
xchg
or
push
mov
inc
jne
pop
sub
les
jns
pop
pop
jp
hlt
jp
pop
clc
push
push
idivl
add
xor
adc
adc
stc
cld
mov
les
repz
xor
add
lea
dec
repnz
mov
push
fidivl
push
push
jns
das
push
movsb
mov
push
and
arpl
jg
and
out
mov
and
sbb
inc
dec
fnstenv
es
in
xor
je
hlt
xchg
and
shlb
push
adc
sbb
xor
cmpsl
ja
xchg
xchg
mov
adc
lret
dec
mov
adc
jge
mov
jns
and
or
ljmp
aaa
mov
xchg
mov
mov
push
popa
clc
rcr
cltd
jge
loopne
mov
fcoml
or
and
mov
in
stos
and
mov
in
mov
lock
and
in
mov
outsb
lret
fcomps
orb
pop
add
mov
lock
stos
sbb
push
push
mov
daa
or
push
rorb
xlat
divb
mov
or
mov
bound
popf
imul
sub
movsb
push
fdivl
or
sub
xchg
adc
xor
aas
js
sbb
inc
loope
mov
and
das
dec
jno
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
