call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
inc
xor
sub
inc
sub
in
cmc
add
aad
movsl
shll
jecxz
adc
inc
xor
and
jae
arpl
xchg
cmc
xorl
mov
test
xchg
jecxz
adc
inc
xor
and
jae
arpl
lods
cmc
fbstp
adc
jecxz
adc
ss
daa
iret
gs
xor
andb
das
or
aam
sbb
js
sub
sbb
inc
mov
fcomp
bts
imul
fninit
dec
mov
mov
test
imul
push
aad
fisttpll
add
enter
loop
push
lahf
jge
mov
arpl
or
loop
in
je
xor
aam
and
lcall
dec
dec
repz
pop
sbb
test
add
das
in
ficomps
mov
aad
pop
nop
sub
mov
repnz
xor
inc
cli
mov
lahf
xchg
cmp
sub
aaa
test
std
jecxz
adc
inc
xor
and
jae
arpl
xchg
cmc
add
aad
movsl
shll
movsl
and
shlb
jne
gs
cmp
add
push
adc
mov
mov
push
pop
dec
adc
ss
insl
add
imul
test
nop
iret
sarb
or
adc
inc
push
push
and
jae
arpl
xchg
cmc
add
aad
movsl
shll
jecxz
adc
inc
xor
and
jae
arpl
xchg
cmc
add
aad
movsl
shll
jecxz
adc
push
inc
jno
call
or
push
call
add
inc
add
or
movsl
mov
stc
jmp
jno
pop
lock
cmp
dec
xrelease
aas
insl
jecxz
jmp
xchg
cli
fsubl
or
sub
inc
out
hlt
cs
adc
test
mov
aaa
cmpsb
push
xchg
xchg
or
das
lahf
outsb
jge
pop
loop
cmp
fsubrs
test
aas
xchg
subl
mov
push
dec
fcmovbe
cltd
xlat
call
mov
sub
outsb
cmp
mov
push
sub
mov
arpl
mov
imul
mov
push
idivl
repnz
mov
daa
push
and
mov
pop
jp
repz
push
push
repnz
es
add
jle
sbb
pop
push
mov
cs
pushf
pop
push
add
pop
popa
in
fbstp
push
mov
fidivrs
cli
flds
out
fcmovnbe
add
mov
addl
adc
sbb
or
pop
imul
xor
out
out
das
push
sub
push
or
test
std
jp
or
add
adc
addl
lods
fdivl
fldenv
popa
add
in
nop
mov
rcrb
jg
or
add
lret
fidivrs
shrb
xchg
std
cmp
cmc
andl
cmp
pop
stc
cltd
mov
lods
clc
movsb
dec
dec
sar
add
arpl
cld
mov
call
ja
test
fcoms
dec
daa
pop
mov
enter
add
or
cmp
mov
and
xchg
jae
xor
jns
add
cmpsl
adc
lret
in
jbe
out
mov
cmc
or
pop
fidivrs
cltd
cmp
movsl
loopne
fldln2
js
mov
mov
fstpl
and
out
ss
ss
fildl
je
inc
mov
xchg
or
ss
mov
scas
adc
xchg
pop
cltd
repz
sbb
mov
cli
scas
fwait
dec
lock
push
es
xchg
imul
outsb
push
ret
add
jbe
negl
lret
popf
push
jecxz
xlat
cmp
add
out
add
inc
mov
mov
test
into
or
inc
pop
test
dec
mov
add
outsb
lret
aam
adcb
fs
mov
lods
xchg
outsl
pop
push
stos
sub
mov
cmp
cs
daa
sbb
jnp
repnz
sub
lods
ja
or
shlb
push
sbb
and
int
aam
mulb
adc
cmpsl
test
jp
aas
adc
ret
mov
or
lods
sti
imul
push
aad
xchg
aaa
subl
cwtl
sbb
cmp
jle
cs
daa
mov
mov
add
js
cmpsb
ret
cmpsw
inc
add
and
dec
aad
cli
pop
into
mov
lret
loope
call
sub
fisubs
out
dec
incl
aaa
mov
rorb
outsb
stc
ret
popa
mov
pop
pop
and
int3
mov
jmp
inc
mov
push
push
pop
add
mov
inc
cltd
pop
inc
mov
mov
push
sub
stc
mov
inc
jae
lret
xor
daa
shll
push
fcmovb
dec
je
out
mov
gs
push
jbe
cmp
test
insl
dec
jmp
sub
fmuls
aas
bound
mov
jno
in
xchg
jno
cli
push
push
push
lock
scas
sub
sbb
daa
fldcw
flds
mov
ss
insb
push
ss
divb
mov
sbb
pop
out
nop
jl
repz
push
and
lret
xor
and
loop
test
mov
cmp
mov
adc
lods
cmp
loope
push
mov
ret
xor
lds
sti
xor
sub
xlat
fsts
mov
leave
test
lods
lds
repz
ss
lea
and
or
ret
and
das
dec
cmpsl
cmp
fs
sbb
sbb
jle
cmpsb
pop
gs
and
fildl
test
fdivs
hlt
xor
and
outsb
dec
pop
adc
adc
pop
sub
pusha
out
in
mov
popa
aad
test
aam
xlat
cmp
inc
ljmp
leave
les
popa
fildll
xchg
rcrb
jnp
gs
ds
cltd
cmc
enter
xchg
push
arpl
call
test
xor
movsb
lahf
scas
cmc
int3
add
nop
xchg
xor
inc
push
add
inc
fcomi
cmp
shlb
mov
adc
xchg
jnp
pop
push
es
push
outsl
xchg
push
ds
mov
imul
imul
or
fs
popf
shll
cmp
pop
ja
inc
shlb
sub
nop
out
movsl
addb
int3
je
loop
mov
inc
xor
ret
mov
jo
sbb
sbb
xchg
int
adc
mov
inc
flds
sti
jnp
loope
mov
pusha
sub
in
shll
mov
mov
js
adc
sbb
pop
xor
mov
incl
mov
or
jne
and
xor
push
out
scas
fstpt
jo
rcl
pop
xor
xor
stos
cs
jg
imul
testl
sub
cmp
inc
jo
and
jbe
and
aas
push
lea
lahf
xchg
xchg
int3
stos
sti
sbbl
aad
cmpsl
adc
cmc
push
test
pop
jne
cmc
je
cmpsl
push
fs
out
clc
jmp
scas
mov
pop
hlt
pusha
jbe
cmc
xchg
scas
dec
dec
jno
aad
aad
pop
in
dec
loopne
repz
mov
pop
fists
stc
dec
fcoms
xor
cmp
jbe
xor
mov
push
and
jne
mov
rcl
push
push
nop
fcoml
mov
push
push
testb
inc
mov
mov
ficomps
das
pop
jge
and
mov
mov
inc
or
sbb
test
jle
or
adc
mov
jo
jmp
shrl
pop
cwtl
jge
or
dec
dec
imul
fs
pop
lret
cmp
mov
mov
popf
test
lcall
repz
cwtl
pop
dec
jnp
int
fwait
xchg
test
cwtl
test
push
xor
cltd
add
fimuls
or
fcoms
push
mov
pushf
fucomip
push
ss
xor
push
xchg
sub
das
pop
mov
mov
sub
push
out
bnd
mov
dec
adcb
into
push
mov
adc
jge
and
dec
pushf
das
dec
out
inc
xor
les
push
pushf
mov
cmp
pop
imul
and
imul
push
mov
cmp
mov
iret
stc
scas
dec
dec
insb
and
fs
mov
sub
xor
mov
or
mov
in
push
arpl
xchg
lea
in
popf
sub
incl
cld
cmp
push
jmp
jp
push
out
inc
aad
fisubrs
sub
shrl
xor
mov
add
jg
push
jno
mov
jno
mov
sbb
jmp
enter
xchg
stc
push
mov
shlb
adc
mov
xchg
scas
pop
xor
popa
xor
aaa
aas
mov
rcrl
hlt
lret
mov
lret
out
fcoms
cmc
push
sbb
icebp
sbb
dec
scas
cmp
xor
stos
out
pop
or
bound
add
inc
jg
sbb
in
sub
mov
push
mov
push
xchg
mov
mov
shlb
pusha
push
adc
cmp
pop
mov
jmp
wrmsr
shl
jle
in
ljmp
ja
pop
mov
insl
dec
sbb
ret
cmp
insl
and
test
arpl
jbe
pop
call
notl
shr
or
xor
push
mov
jne
test
cltd
jns
cmp
lcall
jmp
jnp
add
lds
inc
movsb
loope
cmpsl
mov
mov
stos
jnp
add
stos
adc
sub
sahf
cwtl
add
and
cmp
push
loopne
aam
ja
fldt
insl
and
dec
lods
int
pop
adc
and
adc
jl
pop
or
rorl
fs
std
jae
int3
loop
inc
xchg
xchg
mov
mov
xchg
or
add
pop
cmpsb
adc
das
xor
dec
and
lods
push
add
inc
addl
cmpsb
into
out
icebp
mov
out
xor
mov
fdivl
stos
out
lret
inc
call
loopw,pn
mov
sub
jp
hlt
push
stos
lcall
gs
notb
sub
mov
cs
outsl
xchg
sbb
mov
xor
and
fidivl
pop
outsl
add
xchg
inc
arpl
pop
pop
insb
adc
pop
movsb
fistpll
mov
and
pop
fdivp
shr
push
jmp
arpl
subl
call
xchg
cwtl
into
cmc
je
mov
xchg
and
mov
fstpl
push
and
dec
mov
cmpsl
and
dec
fs
xchg
stos
pushf
sub
imul
and
and
mov
dec
subb
cmp
cli
enter
jb
sub
and
cwtl
aaa
mov
xor
push
std
xchg
pop
sbbb
jns
icebp
mov
xchg
jbe
mov
int
jo
lods
mov
xor
mov
inc
dec
aad
into
lock
jnp
imul
cmc
and
fbstp
dec
lods
in
out
loop
test
fcoml
push
jbe
mov
adc
and
push
xor
bswap
ret
push
lods
sbb
int
icebp
lret
stos
in
arpl
xchg
arpl
in
jne
ror
stc
pop
ficomps
xor
cmp
lds
icebp
int3
push
cmp
aam
jge
sub
jne
mov
sti
sbb
shrb
js
add
test
jns
push
fs
jns
mov
jl
arpl
xor
sub
rclb
in
jge
mov
fildll
movsl
fs
mov
rclb
jns
cltd
mov
xor
adc
lea
push
inc
pusha
addr16
xor
mov
hlt
adc
or
scas
jg
testl
imul
mov
pop
pop
pusha
scas
aam
jle
lret
cmpsl
and
bound
jb
sub
pop
push
push
int3
es
stc
xor
xlat
scas
cmpsb
inc
adc
stos
in
enter
arpl
fisttps
aaa
sbb
and
stc
xlat
mov
pop
cmp
jp
jbe
inc
cltd
cmp
out
mov
cmpsb
dec
push
inc
adc
insb
and
mov
push
inc
pop
getsec
fs
and
je
pop
insb
mov
nop
push
psrld
mov
lea
push
dec
mov
repz
jno
jle
mov
js
movsl
adc
pushf
cmpsb
popf
mov
jb
movsb
xchg
mov
aad
pop
andb
dec
mov
sub
mov
testb
rclb
ficoms
cmpsl
mov
adc
xor
aaa
fcompl
xchg
int3
pop
cli
popf
stc
call
and
shll
or
rcll
andl
mulb
shrl
jae
fwait
lock
hlt
add
les
push
push
adcl
scas
sbb
adc
mov
or
ss
xor
pop
roll
xchg
inc
mov
pop
pop
imul
popf
pop
inc
sub
push
in
mov
and
sbb
nop
shlb
sub
insb
gs
out
cmp
ret
in
decb
sbb
inc
adc
scas
adc
fcmovb
pop
dec
loope
add
scas
imul
sbb
adc
in
outsl
movsb
push
push
leave
rcr
popa
stos
adc
in
imul
mov
inc
loop
mov
mov
mov
mov
ljmp
adc
sbb
leave
cmc
or
dec
jae
jnp
orb
and
scas
es
out
pop
sub
lock
repnz
aas
pop
inc
or
pop
mov
pop
lahf
xor
sub
dec
out
stc
ds
dec
rclb
das
sbb
addr16
shlb
in
int3
inc
cmp
lods
dec
stos
add
ds
fisubl
lret
sbb
sbb
jno
inc
sub
out
fwait
and
xchg
adc
or
or
dec
sub
push
xchg
sub
pop
mov
mov
loope
shrb
std
or
jmp
rcrl
js
xchg
cli
pop
scas
in
in
pop
or
into
fisubs
aas
lods
stos
sbb
push
mov
test
lahf
ja
xor
push
xchg
mov
jge
push
jo
cwtl
push
xor
int3
enter
stos
inc
xor
adc
cmp
sbb
mov
jmp
arpl
stc
mov
xor
call
cmp
mov
mov
jecxz
mov
insl
movsl
lock
pop
mov
inc
mov
orl
pusha
xorb
adc
icebp
fdivrs
xor
nop
adc
sahf
dec
sub
pusha
sub
adc
icebp
xchg
xchg
fidivrs
sub
sbb
sub
xor
push
ljmp
les
and
in
mov
insl
pop
mov
mov
mov
jns
ljmp
push
jnp
and
arpl
jmp
add
inc
fcoms
aas
gs
test
jno
jne
test
insb
xchg
imul
and
addl
pop
cmpsl
ret
mov
jl
movsl
clts
or
bnd
and
sub
daa
rorl
lea
xchg
sar
push
or
mov
popa
pusha
mov
sbbl
shrl
mov
mov
jle
movsl
pop
mov
out
movsl
push
rclb
outsb
fwait
mov
jecxz
out
scas
cmc
jnp
sub
jb
imul
in
insl
and
iret
imul
lods
push
loop
fdivrs
and
add
cmp
icebp
rorb
ja
hlt
jp
and
pushf
insb
fadds
mov
inc
xor
out
xor
or
jmp
dec
fsubs
out
sub
xor
cmp
push
pop
and
and
cmp
cmp
inc
sbb
jae
pop
xchg
cmp
jns
mov
in
xor
cmp
jle
jmp
inc
sub
test
cmp
divl
scas
xor
sbb
iret
jo
inc
enter
lods
lcall
sbb
push
in
faddl
enter
repz
out
in
inc
lods
out
push
pop
je
in
lods
cs
mov
fimull
inc
adc
jne
fistl
aad
inc
pop
adc
mov
pop
xor
sub
out
addr16
sbb
mov
push
dec
cwtl
outsb
sub
iret
subps
data16
ficoms
xchg
fbld
cmc
icebp
cmp
add
cmp
mov
sub
scas
push
out
push
xchg
push
push
stc
push
int
adc
or
and
sub
int
aad
dec
jl
sub
shl
or
cmpsb
xor
xchg
or
sbb
or
mov
inc
xor
lahf
mov
pusha
lods
mov
xor
insb
cmp
push
icebp
lret
xchg
roll
push
push
adc
test
xor
repz
scas
test
xlat
jno
and
in
push
xchg
test
xchg
test
or
adc
nop
or
cmp
sub
nop
lret
loop
inc
xor
stos
test
movsl
adc
and
dec
xor
push
scas
lret
testb
clc
dec
aaa
fisttpl
lea
gs
add
mov
jmp
popf
dec
enter
inc
push
or
inc
jae
and
mov
jmp
inc
ficoml
xchg
movsb
xor
or
ret
ss
adc
lods
pop
subl
out
scas
pushf
cmc
addr16
cmpsl
push
lock
mov
fistpl
fimuls
sbb
dec
aad
jp
push
imul
enter
daa
outsb
jg
mov
xchg
fbstp
mov
mov
mov
add
std
fisttpl
imul
and
aaa
jb
rcrl
push
in
out
ja
mov
mov
dec
push
xor
je
xor
daa
inc
fsub
sub
rclb
jbe
pop
push
shrl
push
roll
das
mov
mov
push
loop
inc
sti
dec
pop
pop
xchg
fwait
in
xchg
rorl
push
sub
pop
jle
adc
sbb
xchg
insb
and
lcall
leave
call
and
push
pop
or
insb
xor
mov
cmp
dec
and
push
xor
add
adc
xchg
fadds
into
aad
notl
aas
dec
stc
ret
cmp
pop
out
pushl
aam
xchg
pop
sub
sub
inc
push
push
jecxz
lret
pop
cs
daa
mov
ret
xchg
dec
loop
es
sub
sbb
addr16
mov
insb
xor
and
test
stos
pop
jge
cli
dec
gs
mov
imul
aad
xor
adc
jb
mov
lea
xchg
cmpsl
dec
sub
jg
sbb
or
lods
repnz
es
mov
jp
pusha
push
mov
rcrb
loope
lcall
les
mov
adc
inc
dec
push
or
mov
data16
lods
mov
pop
iret
dec
inc
push
jb
leave
add
aad
jle
mov
jne
xor
push
push
cmp
pop
pop
aas
inc
xlat
lahf
jns
fistpl
iret
ss
sbb
jle
das
mov
xchg
push
bound
inc
jl
mov
pop
int3
push
pop
adc
dec
pop
cwtl
pop
mov
jns
pop
dec
xchg
mov
iret
popa
int
adcl
adc
pop
add
push
lcall
jle
into
addb
add
jne
sub
sbb
xor
mov
adc
mov
and
call
scas
enter
inc
lods
add
jl
cmpsl
adc
daa
pop
inc
filds
repnz
andnps
fnsave
imul
cmp
and
jmp
jmp
inc
cld
push
pop
mov
or
add
pop
mov
in
lcall
adc
inc
les
pop
xchg
outsb
inc
dec
xlat
cli
rcrl
daa
outsl
jb
add
pop
pop
repnz
and
push
lahf
insb
fwait
xor
dec
cli
fs
or
mov
xchg
jne
pop
mov
notb
push
shlb
sbb
pop
jo
xor
jp
mov
mov
lret
lods
les
dec
and
loop
push
pop
je,pn
mov
aad
int
jne
jno
or
dec
xor
fcoml
shr
xchg
sti
fwait
popf
lahf
cmpsl
aaa
xchg
fnsave
inc
jmp
jnp
adc
cmp
aad
rol
scas
pushf
jns
pop
outsl
fcmovnb
ret
stos
fwait
scas
xor
iret
xchg
scas
mov
and
call
lahf
pop
xlat
inc
fldenv
cmp
int
cmp
mov
pop
adc
imul
cli
dec
sub
cltd
roll
add
shrl
mov
push
stos
int3
fs
scas
push
sar
cmp
dec
call
insb
daa
xor
mov
mov
cmpsb
out
lret
xchg
adc
int
jns
shll
push
jns
fwait
add
pop
lods
rcrb
in
in
insb
popa
test
jl
push
jg
mov
xchg
aam
mov
mov
xlat
lret
jnp
aad
xor
cmp
insb
loope
lock
aad
and
shr
fwait
rorb
pop
xor
les
xor
iret
xor
fadds
imul
mov
jae
add
mov
mov
add
test
cmp
out
push
aaa
mov
push
inc
int
push
push
mov
adc
ja
popf
scas
xchg
cmp
je
and
xchg
pop
and
xor
push
mov
sar
xchg
test
fsubrs
dec
mov
xchg
xor
js
nop
inc
lret
pop
push
sbb
pop
test
mov
or
aad
ds
enter
dec
jnp
push
fucomp
pop
push
aad
mov
roll
jecxz
andb
in
out
sub
xchg
xchg
dec
cmp
inc
mov
xor
jle
inc
add
ljmp
scas
out
cli
out
rclb
and
not
orb
sub
jno
cmp
and
ja
cld
jnp
aas
cmpsl
sub
cmp
xor
mov
inc
inc
pop
pop
pop
movsl
shufps
mov
add
ja
cltd
es
adc
sub
add
push
xor
arpl
xchg
cmc
add
aad
movsl
shll
jecxz
adc
inc
xor
and
jae
arpl
xchg
cmc
add
aad
movsl
shll
jecxz
pop
jne
inc
xor
and
jb
arpl
xchg
cmc
add
aad
movsl
shlb
jecxz
adc
inc
xor
and
repz
sub
aad
rcrb
cmp
or
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
imul
pop
add
xchg
mov
cmpsl
fst
test
push
testl
daa
pop
push
sub
addr16
in
xchg
cltd
lds
mov
int
xchg
inc
sbb
lahf
das
xchg
in
jmp
shrl
fildl
sub
cmp
push
push
cmp
and
les
fsubl
sub
or
xorb
outsb
push
mov
pop
cmp
loop
adc
dec
xor
mov
push
inc
add
cmpsl
lods
ffreep
les
std
pop
inc
xlat
in
js
dec
int3
pop
and
pop
dec
inc
add
mov
jge
dec
jb
push
cmp
nop
subb
cmpsl
xor
pop
mov
sbb
xchg
mov
out
test
les
int3
das
loope
into
xlat
stos
dec
sub
test
ficoms
or
orb
jge
sbb
mov
cmpsl
mov
mov
div
and
pop
pop
aaa
cmp
push
sub
fisttps
outsl
iret
mov
push
notl
jno
jae
dec
xor
mov
push
fs
pop
imulb
mov
cmp
hlt
pop
sub
xor
jg
outsl
sbb
scas
mov
mov
lahf
lret
in
movsb
loop
mov
gs
xor
inc
and
adc
cmp
xchg
in
xchg
mov
cmpsl
fst
lods
mov
pop
insl
pop
jge
dec
daa
pop
push
sub
addr16
mov
cmpsl
fst
lods
mov
pop
insl
ret
sub
dec
sub
movsb
add
aam
xchg
dec
push
push
cwtl
aad
xchg
iret
les
gs
pop
and
iret
stc
adc
sbb
mov
pop
shl
xor
cmp
jecxz
adc
daa
inc
sti
sti
pop
fistpl
dec
jno
adc
mov
jp
gs
leave
out
lods
mov
std
and
test
jmp
cmp
sbb
xor
inc
adc
or
fisttpll
mov
in
cmpsl
mov
iret
fistps
mov
sub
into
hlt
push
vandnps
jmp
mov
lds
mov
adc
ss
sub
pop
fs
cltd
aad
or
cwtl
push
stos
popl
push
roll
cmp
push
mov
call
outsl
mov
mov
mov
adc
movsl
test
sbb
mov
imul
pushf
pop
jo
jl
pop
test
sbb
jns
incl
push
lock
xlat
xor
rcrl
repz
dec
pop
sbb
xor
cmp
cwtl
cmp
jp
add
out
into
push
jns
lea
mov
in
clc
dec
dec
and
sub
scas
dec
sbb
out
stos
xor
aaa
lret
sbb
jmp
lods
sbb
rcrb
pushf
mov
add
add
lret
lret
in
jge
sbb
ret
hlt
icebp
inc
push
insl
pop
sub
pop
nop
dec
ss
mov
test
pop
cs
ss
lahf
aad
jne
or
mov
push
shll
out
adc
inc
sub
xor
jmp
mov
jecxz
inc
lahf
push
sub
aad
jns
cmp
test
mov
lds
inc
nop
clc
add
scas
pop
fisubl
jae
daa
cltd
adcl
mov
cmp
xchg
outsl
xor
fstps
stc
sbb
xchg
pop
mov
push
into
ret
pop
aad
iret
test
icebp
xor
add
pop
mov
aas
clc
add
push
push
xchg
sahf
lods
mov
lock
in
sbb
bound
mov
xor
mov
jg
mov
sub
sub
mov
lret
ss
leave
or
mov
repnz
dec
negb
aad
xchg
push
push
roll
imul
push
ds
es
movsl
gs
cmp
mov
cld
sub
push
xchg
out
or
enter
imul
ja
js
inc
or
add
jle
sub
mov
push
stc
add
scas
cmp
sub
sbb
inc
fs
data16
push
add
and
xchg
add
cltd
xor
xorb
es
lock
inc
cmc
cmp
dec
mov
cmpsl
mov
cwtl
les
adcb
out
loopne
repnz
pop
cmp
icebp
fcomps
in
out
or
xor
jns
popa
jle
add
into
push
mov
repz
fstps
cmp
sub
sub
test
mov
adc
lret
into
mov
mov
dec
pop
xchg
insl
sbb
push
scas
xchg
dec
xor
xchg
out
pop
add
cmpsl
inc
scas
add
push
xor
jno
rcrl
push
mov
cmp
inc
push
add
cltd
jecxz
ljmp
jae
mov
xchg
mov
jp
aaa
adc
mov
lds
inc
mov
xor
sti
popf
loope
jae
push
pop
cmpsb
jl
pop
push
scas
sbb
ljmp
leave
pop
icebp
sbb
ja
aas
mov
mov
aas
add
loope
adc
mov
fwait
insb
bound
xor
cmp
fstpl
add
mov
mov
sub
add
push
mov
out
outsl
daa
test
outsl
in
dec
dec
xor
and
call
mov
das
mov
out
adc
and
push
outsb
nop
pop
dec
mov
dec
cltd
mov
push
cmp
pop
lret
cs
mov
lret
push
orl
cwtl
adc
jb
jecxz
imul
jle
sbbb
fwait
daa
push
fsubs
push
jo
jle
cmpsl
lods
pop
and
sub
xor
sub
lcall
data16
fisttpl
inc
mov
sub
shll
dec
mov
andl
loopne
pop
mov
ss
mov
stos
xor
sub
das
jecxz
xchg
mov
ljmp
xchg
outsl
inc
jnp
sahf
inc
dec
out
sub
mov
cli
xor
aad
or
mov
cmp
mov
mov
lock
push
and
arpl
mov
pop
or
mov
add
scas
lcall
push
pop
xchg
das
mov
repz
imul
sbb
fcomp
fildll
popf
or
stc
jle
or
jle
sbb
cmp
mov
ror
nop
lods
pop
andb
cwtl
mov
mov
pop
mov
daa
push
inc
cmp
mov
fistps
idivl
test
shlb
rcl
sbb
std
rclb
leave
xlat
out
mov
xor
mov
push
out
inc
xchg
pop
iret
lss
daa
out
aad
aas
int3
cmp
mov
pushf
jmp
pop
lods
xchg
aad
sarb
dec
insl
sbb
or
in
xor
jo
pop
push
sub
dec
pop
adc
jb
jns
adc
inc
jo,pt
movb
dec
xchg
rclb
xlat
sbb
mov
or
push
xchg
adc
mov
sub
or
cli
mov
push
cmc
js
mov
mov
push
sub
and
mov
das
jl
lahf
mov
int3
les
cltd
inc
sbbb
adc
cmp
rcrl
cli
popa
jle
lods
movsl
mov
xor
clc
sub
jmp
cmc
push
jae
lock
out
aas
xchg
cltd
xchg
leave
mov
jecxz
cmp
shll
adc
dec
dec
rcll
pop
enter
pop
int3
aad
cmp
bound
push
cli
fstpt
or
shll
lock
scas
mov
fwait
sbb
das
aaa
hlt
out
iret
cmc
lret
in
sub
add
jnp
ficompl
lahf
addr16
add
popf
iret
lret
pop
fcoms
sbb
out
inc
pop
push
test
mulb
push
jne
jl
sbb
pshufw
sbb
adc
sbb
or
in
xlat
and
popa
pop
dec
fsubrs
outsl
mov
cmp
cmc
sbb
lret
and
jb
jnp
mov
mov
je
push
mov
add
sahf
outsb
sub
fwait
cmp
push
pop
out
add
dec
adc
pop
cmpsl
push
adc
imul
sub
popa
cmp
mov
ds
sbb
pushf
test
cli
xor
loop
ret
add
xchg
dec
sub
fistl
imull
jae
lret
sbb
mov
adc
adc
mov
or
xchg
rcrl
aas
out
mov
lahf
shll
aad
add
lock
in
cmp
sbb
imul
aas
aad
ds
push
mov
and
in
loope
push
add
icebp
pusha
cmp
in
mov
test
lds
inc
add
dec
pop
dec
add
movsl
loope
rol
mov
jecxz
int3
jle
inc
clc
cmpsb
add
test
mov
fbld
es
inc
imul
inc
lret
loopne
xchg
jg
sub
push
jge
push
call
in
sub
inc
mov
pushf
mov
ret
pop
or
add
test
jmp
jp
mov
dec
dec
addr16
xor
add
popa
inc
add
add
insl
adc
hlt
mov
les
in
iret
sbb
mov
xchg
pop
pop
dec
mov
xchg
scas
pop
fcoms
ret
xor
lds
cmpsb
das
jmp
ret
cwtl
jbe
ljmp
mov
mov
cmpsl
and
sbb
mov
mov
fs
lods
je
xor
push
add
and
imul
stc
fnstsw
shr
nop
rorl
cmc
lock
jno
lcall
je
popf
clc
fcomps
stos
dec
aaa
je
test
das
arpl
or
sub
add
pop
shll
dec
add
pop
cmp
js
stos
fisttpll
jmp
ret
jne
dec
popa
movsl
and
adc
fs
rorb
push
dec
jmp
push
aad
sub
in
std
out
cmp
roll
push
pop
icebp
negb
repnz
out
mov
jnp
cmpsb
cltd
nop
jo
pop
outsb
lea
inc
scas
mov
cmp
gs
xor
adc
add
sbb
push
movsb
inc
mov
add
lea
fistps
mov
xchg
jb
sub
sub
arpl
cmpb
mov
pop
adcl
inc
fsubrp
xchg
daa
cs
and
push
xor
pop
pop
int3
push
xchg
dec
fwait
ds
push
jp
sub
lds
pop
cld
adc
push
enter
xor
int3
sub
mov
jae
imul
jo
mov
xor
push
dec
mov
rcll
fidivrs
test
sub
xor
adc
inc
mov
das
jp
fwait
jle
mov
inc
dec
cmpsl
popa
adc
inc
adc
popl
cwtl
outsl
es
inc
cmpsl
sub
or
stos
enter
rcr
das
inc
mov
in
or
iret
jge
sti
pop
jno
jns
out
mov
call
ljmp
pop
push
mov
rcrb
pop
js
stos
xchg
sub
divl
sti
and
rolb
fsubr
sti
dec
jno
push
pop
xchg
cltd
adc
loopne
mov
sar
mov
lret
mov
cmp
data16
in
jp
mov
shrl
insb
mov
notb
iret
xchg
rcrb
jno
dec
mov
cltd
ret
mov
jne
xchg
inc
adc
movb
or
add
repz
addb
ret
ret
ds
pop
das
cmp
cmpsl
ss
xor
xor
dec
push
es
dec
jl
inc
xchg
jge
adc
dec
aad
rcll
cmp
push
jo
sbb
stos
lods
scas
pop
les
int3
pop
dec
fadd
ljmp
test
repz
xor
sarl
sbb
filds
add
leave
push
mov
and
icebp
add
stos
pop
jmp
xchg
outsl
mov
std
push
fsubrp
ja
mov
push
cmc
aaa
adc
pop
push
xchg
repz
adc
xor
inc
jmp
lret
fcoml
mov
fmul
jp
jl
in
in
fnstsw
int3
mov
inc
or
cmp
mov
nop
mov
and
mov
mov
movsl
inc
lret
adc
cmpsl
mov
popa
xor
mov
adc
inc
mov
xor
push
in
dec
out
pop
mov
mov
or
xor
dec
inc
fbstp
insb
shrb
fsubl
jecxz
xor
cmp
loope
add
jle
ja
cmc
or
adc
gs
popf
mov
mov
xchg
stos
or
imul
inc
adc
repz
pop
int
pop
insb
mov
jnp
adc
xchg
loope
dec
and
sahf
adc
and
mov
sub
or
jmp
mov
xor
loop
xor
xchg
xlat
sbb
in
popa
aaa
add
jg
addl
and
jg
fsubrs
cmpsb
push
or
mov
cmpsl
sbb
sub
jnp
scas
in
cmp
mov
aas
mov
xchg
and
cmpsb
imul
lds
xchg
cmp
in
insb
lods
mov
pop
jmp
bound
rorl
arpl
shrl
ds
es
push
push
sbb
add
imul
cmpsl
dec
mov
jp
test
or
xchg
inc
fistl
sub
lret
movsb
sub
sub
outsb
push
nop
sbb
popfw
jg
sub
test
or
xchg
int
xchg
cmp
xchg
inc
ret
cmpsl
xor
ficoms
imul
cld
push
mov
mov
test
push
outsl
jg
sbb
xor
lahf
push
push
ficoml
dec
scas
dec
jbe
sub
lea
out
mov
or
jb
inc
imul
mov
rolb
mov
in
adc
pop
add
pop
mov
movsl
xchg
jne
jb
adc
mov
cmp
xor
mov
cli
push
pusha
test
cmp
push
lcall
aam
push
inc
dec
push
push
arpl
dec
push
jle
jmp
and
xor
inc
bound
addb
jae
adc
sbb
pop
out
dec
push
dec
sahf
and
stc
sbb
adc
rolb
jmp
and
loope
dec
cld
sbb
xor
lea
mov
sarb
pop
inc
pop
mov
inc
aam
fs
outsb
sub
and
pop
push
or
call
add
sar
mov
fistl
shl
jae
js
mov
cld
jmp
dec
push
faddp
test
jne
inc
sbbl
push
dec
imulb
popf
push
jns
lahf
xor
fs
js
insb
and
sub
mov
cmp
lahf
and
pushf
cmp
mov
xchg
cltd
repz
xchg
mov
movsl
dec
hlt
jl
cmp
stos
add
cmc
call
sahf
pop
dec
popl
dec
inc
mov
movsb
cwtl
add
rcrb
cld
cmp
adc
mov
popl
or
enter
test
xor
push
mov
mov
popf
test
sarb
loop
push
xlat
sti
mov
fcomps
dec
jo
fwait
pop
test
addr16
jg
pusha
lea
mov
sbb
jne
outsl
shll
cmp
cmpsl
adcb
push
and
jae
cltd
adc
stos
cmpsl
jmp
leave
and
dec
mov
sbb
aaa
push
jnp
mov
insb
call
movsb
pop
jb
int
inc
cmp
aam
xchg
out
out
jg
inc
xor
in
pop
in
das
xchg
les
jg
movsl
into
repnz
shrb
jle
dec
lret
lods
repz
dec
int3
sub
loope
add
jge
ret
in
popf
testl
popa
fld
daa
mov
xchg
mov
xor
call
cwtl
rclb
shlb
dec
or
pop
mov
push
mov
jg
adc
sub
mov
mov
cmpsl
popa
movsb
sbbl
imul
insl
sete
dec
add
mov
ret
jmp
test
sti
jmp
inc
ljmp
push
int3
out
jbe
mov
aad
sub
data16
adcl
loopne
dec
sbb
ss
jecxz
pop
and
xchg
cmp
jp
or
int
aad
sub
mov
lods
lahf
pop
inc
xor
cmc
mov
ret
pop
sbb
lret
sub
call
mov
addl
jo
push
jle
xlat
insb
jae
loop
and
dec
inc
cmc
mov
in
call
xchg
lds
xchg
cmpsb
and
pop
cmpl
in
popa
jbe
sbb
out
mov
inc
jge
xchg
or
sbb
lods
and
repz
jns
xchg
or
add
or
aad
xlat
sub
xchg
mov
scas
cmp
inc
mov
push
cmpsl
fcoms
xchg
pop
imul
std
push
lcall
hlt
lods
repz
xor
loopne
sbb
and
add
int3
mov
push
push
int3
hlt
push
mov
imul
and
and
xlat
fsub
fadds
gs
sub
mov
cltd
xlat
inc
rcrl
ljmp
push
outsl
fldcw
stos
mov
jecxz
inc
xchg
ljmp
lods
out
stos
mov
push
or
or
sub
sbb
fstl
mov
mov
add
dec
sub
ds
pop
push
je
loopne
adc
loope
pop
jo
cmp
loop
pusha
icebp
fucomp
dec
out
pop
xor
lret
xchg
ds
sbb
cwtl
inc
shll
fwait
inc
jl
push
incl
and
cmp
push
dec
sub
mov
lock
insb
dec
insb
scas
add
or
sbb
dec
fildl
dec
arpl
sub
inc
fcoml
jl
jns
lock
in
add
test
mov
push
mov
pop
cmp
js
call
loop,pt
out
pop
push
cmpsl
and
lds
sub
addr16
pop
loopne
shl
bound
and
repnz
pop
push
sbb
lcall
addl
mov
repnz
es
xchg
push
fadd
jnp
pusha
fmul
fistpl
jl
out
xrelease
sbb
adc
out
in
mov
mov
push
popa
pusha
sbb
and
scas
loopne
and
or
xor
insb
loop
lock
push
mov
xor
or
jbe
cmc
jno
adc
nop
xor
pop
test
hlt
push
add
test
mov
sub
xchg
xor
jno
leave
push
mov
push
test
jno
sbb
pusha
push
test
and
repnz
xchg
push
sub
in
shr
aas
or
ljmp
stos
es
cmp
jno
mov
add
xor
push
fdivl
in
orl
sti
xchg
push
and
push
mov
mov
push
fsubs
cmp
or
mov
mov
test
push
arpl
inc
mov
add
push
pop
movsl
ret
and
daa
dec
and
lret
mov
in
addr16
movsb
mov
loop
xlat
leave
ficoms
pushw
adc
fists
icebp
in
nop
mov
push
mov
xchg
push
push
mov
lea
out
lret
addr16
push
push
mov
std
add
cmp
jmp
sbb
daa
mov
leave
lods
add
fs
fcomps
pop
jne
aas
xchg
ret
test
test
xor
jg
mov
xor
imul
inc
mov
ljmp
sub
enter
ret
hlt
imul
xchg
cmp
push
test
es
cltd
scas
movl
sub
mov
inc
inc
mov
das
cmc
ljmp
push
push
les
or
iret
imul
jmp
scas
pop
adc
sbb
inc
aas
testb
out
ret
sbb
inc
lahf
fxch
icebp
in
push
flds
jnp
outsb
pop
lcall
sarl
js
push
repz
subb
sbb
loopne
pop
push
sub
jns
jge
pop
in
ret
pop
cmp
jl
gs
or
adc
mov
in
jae
mov
pusha
ret
out
rcr
sub
jl
add
sbb
cmpl
mov
in
fwait
sbb
shl
push
in
pop
outsb
jmp
test
dec
or
fisttps
mov
mov
hlt
bound
sti
push
pop
lret
and
sar
aad
lds
repz
das
add
xchg
test
xor
sahf
adc
fcoms
sbb
sub
xor
cs
mov
js
mov
and
mov
and
pop
fwait
push
mov
imul
ss
addr16
test
cmp
popf
and
arpl
cltd
and
pop
stos
dec
out
dec
xor
imulb
and
ds
pop
mov
popf
jle
mov
cmp
xchg
mov
in
dec
jp
sub
insb
push
cltd
mov
or
or
movsl
jnp
xor
sub
dec
icebp
sbb
test
xchg
jecxz
dec
mov
pop
or
xchg
dec
mov
ret
mov
inc
dec
adc
push
cmp
xchg
out
cmp
lcall
iret
mov
arpl
outsb
sbb
out
xor
pop
rorb
adc
clc
mov
sub
cwtl
lahf
cmp
ja
aad
xor
push
jge
outsb
mov
add
shrb
add
pop
out
mov
jns
iret
mov
adc
imul
pop
inc
icebp
and
dec
xchg
test
in
cmp
dec
lock
xor
mov
enter
out
jb
mov
mov
xchg
pop
nop
push
std
es
mov
fisttpll
jge
nop
push
sub
cmp
adc
xchg
sub
and
insb
xchg
sbb
das
and
call
xchg
or
fmulp
js
sti
xor
mov
pop
stc
fwait
les
add
aas
ret
jge
and
mov
add
sbb
repnz
lea
xchg
mov
jnp
scas
xrelease
les
dec
cmp
sub
addr16
mov
cmpsl
fst
lods
mov
pop
insl
pop
jge
dec
daa
pop
push
sub
addr16
mov
cmpsl
fst
lods
mov
pop
imul
push
sub
sbb
xchg
mov
test
xlat
jns
mov
cltd
mov
sub
out
xchg
adc
sbb
aad
lds
cmc
sbb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
insb
sahf
jl
dec
mov
push
mov
sbb
fstps
std
das
fdivrs
int3
dec
lods
pop
xor
jle
mov
scas
dec
mov
sub
or
push
dec
int3
fmull
pop
mov
mov
gs
push
mov
and
adc
push
push
in
push
fisttps
pop
test
dec
adc
and
cmp
std
adc
ss
filds
lret
jae
in
insb
adc
fildl
or
pop
ror
fs
jnp
loope
ja
mov
mov
mov
fs
lahf
pop
mov
cmpsl
push
pop
gs
mov
in
dec
cld
js
shll
or
sahf
orl
repnz
js
cltd
push
or
add
xor
push
scas
nop
or
mov
popa
cmp
stos
sub
in
dec
out
add
je
adc
jle
ds
filds
or
cmp
cmpsb
push
cltd
push
or
enter
mov
cmp
lcall
mov
cmp
or
add
cs
lds
pop
movsb
outsb
xchg
jle
cli
insb
fimull
ret
cmp
pusha
fwait
jns
subl
leave
adc
roll
divb
stos
sub
jb
js
cs
cwtl
jae
push
test
sub
call
int
sahf
sbb
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
and
in
pop
mov
ret
sbb
add
pop
or
rcr
xor
add
in
and
jnp
xor
jne
nop
test
mov
pop
sub
pop
push
stos
pop
dec
movsb
pop
mov
stos
jmp
jle
push
decl
mov
and
mov
mov
jle
or
in
push
movsl
xor
fisttpll
loope
ds
and
mov
jl
add
xor
jnp
outsb
int
repz
gs
outsb
jp
das
je
lds
sbb
xor
ficoml
mov
andl
push
jne
push
mov
push
xchg
movsb
jns
loop
add
pop
and
xor
mov
push
push
mov
sbb
inc
cltd
xor
and
mov
sub
mov
leave
push
mov
icebp
ret
xchg
pmaxsw
adc
inc
and
fwait
negb
xchg
and
xor
mov
pop
push
adc
movsl
fldt
fisubs
rcrl
in
fwait
add
or
mov
and
mov
shrl
fldenv
push
mov
push
xchg
and
sbb
and
add
sti
aam
jb
clc
xor
fsubp
sahf
repz
dec
add
cmc
mov
and
sbb
pop
rcrl
fs
cmp
sbb
xor
add
sbb
pushf
inc
shrl
sbb
pop
je
lea
mov
jbe
mov
clc
xlat
jecxz
or
stos
mov
shl
adc
inc
pop
jnp
lret
xor
mov
add
inc
daa
sub
push
cmp
mov
cmp
cld
shll
ljmp
and
loopne
das
xor
adc
js
in
loop
or
dec
test
arpl
hlt
xchg
pop
cmp
into
xor
push
sbb
mov
push
xchg
mov
out
aad
je
bound
mov
test
mov
and
fsts
test
push
jge
data16
mov
fmuls
dec
inc
fstpl
popa
pop
cmpb
or
pop
jb
aam
mov
leave
mov
ljmp
fcmovnu
inc
faddl
scas
mov
dec
or
xchg
fmull
pop
xchg
add
aam
pop
add
in
ja
jno
hlt
xchg
or
dec
adc
push
or
mov
mov
test
ret
xchg
fisubrs
aam
rolb
push
jne
lea
std
mov
imul
fldl
add
pop
mov
cmp
loop
and
pop
leave
nop
jg
mov
push
out
and
mov
cmp
push
in
push
sbb
orb
jecxz
notb
push
bound
rcl
test
cwtl
mov
ds
imul
push
bnd
adc
and
push
fs
cmpb
xchg
shlb
or
and
and
inc
pop
hlt
cmp
int3
das
movsl
scas
sub
push
push
mov
pop
mov
aad
push
bnd
mov
push
xchg
add
lahf
xchg
mov
adc
jecxz
outsb
jb
jge
aaa
loopne
sbb
pop
adc
mov
psraw
dec
xchg
jne
add
and
jb
mov
movb
imul
mov
mov
lock
lcall
jl
pop
nop
mov
pop
arpl
jbe
cltd
and
xor
mov
sbb
mov
add
lahf
test
mov
fstl
push
mov
outsl
int
sbb
call
in
outsl
jg
out
sti
lods
fucomi
fs
add
jle
xchg
cmp
ds
dec
lods
xchg
rorb
xchg
cs
push
pop
cli
scas
mov
lds
or
loope
nop
add
jno
xlat
shr
push
nop
lcall
notl
pop
jae
lds
jge
ja
pop
xor
cmpsb
dec
ret
pushf
scas
mov
shll
in
mov
sbbb
stc
push
jg
gs
clc
mov
jp
popl
jnp
sahf
out
loopne
dec
mov
sub
sub
or
test
sbb
mov
sub
out
mov
loope
lds
jb
push
shrl
mov
je
testb
outsb
jno
ret
pushf
xor
lds
testb
jbe
int
cmp
dec
in
mov
dec
mov
scas
cmpsl
hlt
rcr
ja
movsl
mov
push
inc
inc
sbb
xchg
xchg
jns
xchg
pop
imul
sti
insl
fwait
int
loop
arpl
sahf
sub
leave
mov
inc
outsb
sbb
das
fdivl
jbe
insb
sti
adc
sub
aad
cmpsb
loop
ljmp
push
mov
imul
into
or
pop
push
adc
bound
into
pushf
icebp
int
push
cmp
sub
dec
hlt
adc
stos
loope
mov
das
cmp
movb
pop
hlt
int3
dec
fdivrl
inc
fdivr
jne
add
xchg
rol
push
push
inc
push
out
int
shll
leave
psllw
clc
fisubrs
push
std
cmp
test
jne
dec
and
xchg
test
inc
fsubs
insl
sub
outsl
cld
push
int
and
xor
dec
jmp
jp
int
mov
mov
mov
xchg
jp
int3
or
or
lock
lret
mov
dec
les
fbld
movsl
adc
xor
loop
dec
movsl
popf
aaa
jns
rcrb
and
sbb
in
les
into
jno
jmp
adcb
inc
sub
gs
dec
cmp
push
jg
out
repz
stos
stos
jle
cmp
dec
mov
or
and
int3
notb
pop
rcrl
in
inc
out
loop
push
icebp
fsubs
aaa
sbb
test
pop
xor
lods
sbb
paddb
mov
xchg
push
iret
aaa
mov
mov
cld
data16
push
fs
xor
xchg
sub
nop
inc
mov
sbb
push
loopne
gs
bound
out
test
stos
push
dec
out
lahf
push
xchg
cmpb
mov
leave
in
jno
idivl
cltd
jecxz
ljmp
mov
add
fwait
sahf
pop
stc
xchg
sbb
cmp
dec
cmp
test
stos
nop
xor
inc
xchg
lods
loopne
xlat
pop
push
xor
insl
lret
in
rcr
test
popa
lods
mov
jl
mov
orb
jp
mov
mov
movsl
sub
cwtl
jecxz
int3
aad
sbb
dec
dec
mov
adc
outsl
mov
adc
cmp
inc
seta
sub
stos
inc
jmp
cmp
mov
jnp
jbe
cmp
dec
pop
push
mov
jne
xor
test
and
cmpsb
dec
push
clc
or
das
bound
pop
cmc
mov
scas
rcll
out
mov
cmove
pop
pusha
inc
push
fsubl
or
aam
rolb
dec
pop
lret
int3
sbb
dec
sbb
sub
rcll
dec
shlb
push
outsb
cmp
loope
or
sub
or
mov
popf
stc
and
jl
pop
jl
jge
loop
insl
inc
cmp
add
das
pop
mov
xor
mov
insb
fs
dec
xlat
fstpt
ret
or
and
mov
nop
mov
add
dec
dec
fucomp
pop
mov
bnd
cwtl
fldt
test
xchg
movsb
sti
das
cltd
or
cmc
movsl
pusha
xchg
sub
hlt
push
xor
loop
dec
out
cmc
in
inc
jae
pop
popf
add
fcmovbe
sbb
int
outsl
inc
pop
inc
push
inc
test
xchg
mov
dec
pop
jge
frstor
hlt
cmp
cs
xor
xor
lds
cs
notb
cli
divps
and
nop
sub
sbb
lods
cwtl
pop
pop
jl
vsqrtss
push
clc
bound
out
les
pop
push
push
popa
sahf
or
fidivrl
jmp
dec
cmc
je
in
jmp
inc
cmc
pop
xchg
int
inc
mov
add
mull
enter
dec
les
add
and
out
movsl
and
incb
mov
mov
inc
arpl
out
dec
fdivrs
dec
add
sub
adcl
aaa
inc
cmc
inc
pop
scas
adc
sub
fcmovne
or
rcr
cmp
cld
sub
arpl
into
jge
loope
mov
lret
in
adc
rolb
jb
xor
ficomps
mov
add
xchg
nop
mov
adc
lods
sbbl
sub
xchg
roll
pusha
gs
or
sub
mov
test
add
enter
or
add
les
push
dec
xchg
sub
adc
or
sbb
ffreep
aaa
jne
mov
dec
dec
rorb
out
cmp
mov
gs
imul
out
or
cmc
imul
jnp
loop
rolb
sub
mov
mov
in
data16
es
shl
scas
cwtl
loop
mov
out
cmp
dec
xlat
stos
push
sub
pop
add
ficoms
pusha
test
sub
xor
jno
sbb
jmp
jecxz
inc
inc
lods
insl
cltd
mov
xlat
jle
add
inc
pop
mov
pop
mov
and
mov
ss
pop
popa
inc
das
xor
daa
test
ja
cmpsl
xchg
cmp
sti
shlb
add
add
cmp
cs
jg
mov
gs
mov
cs
lock
mov
repnz
arpl
pop
inc
int
cmp
test
lods
dec
shl
mov
pinsrw
jns
pop
adc
push
call
or
les
pop
xchg
mov
xchg
dec
pop
call
outsb
scas
lret
das
add
dec
mov
mov
test
or
mov
mov
pop
xchg
add
mov
lahf
mov
add
out
ret
dec
loope
jnp
rol
inc
or
jle
cld
inc
cmp
jmp
inc
jp
nop
mov
mov
cmp
or
out
lea
xchg
mov
push
add
call
jnp
mov
inc
cwtl
cld
cwtl
jb
pop
in
dec
gs
cmc
mov
adc
out
pop
mov
xor
lahf
clc
scas
insl
push
jns
sbb
xchg
jmp
icebp
ljmp
xor
jecxz
jge
xchg
sub
stos
test
hlt
icebp
fbstp
cwtl
xor
pop
repz
add
repz
int
sbb
aaa
sub
push
push
shl
inc
push
mov
pop
cmp
cmp
sub
pop
int
out
jo
test
dec
lock
and
pop
adc
mov
mov
popf
dec
mov
in
insl
push
mov
stos
add
lahf
std
pop
cwtl
in
lcall
inc
mov
or
cmp
xorb
add
clc
fstpl
popf
push
sub
adc
dec
pop
imul
mov
pop
and
dec
xchg
adcl
rolb
push
push
inc
xchg
lock
inc
int
cmp
int
into
or
push
push
mov
or
jns
dec
cwtl
push
in
jecxz
xor
out
lods
popa
xor
mov
sub
repz
fmul
mov
push
or
jo
call
jmp
jge
cmp
dec
mov
shl
loope
and
xor
mov
nop
outsb
push
push
sbb
pop
pop
mov
xchg
dec
cld
dec
in
repnz
fsubr
lahf
testb
sub
stos
lret
fisttps
movsl
xchg
xor
push
clc
mov
gs
sub
lret
lock
jecxz
mov
outsl
rcrb
call
sub
mov
test
into
std
jmp
lahf
lret
sahf
jl
dec
sbb
jno
divl
imul
add
push
push
mov
test
jns
dec
xor
pusha
rcll
shrb
je
xchg
ss
mov
sti
in
mov
pop
rcrl
add
out
out
aaa
fldenv
or
fimull
jnp
lods
shr
jbe
sarb
cs
jno
movsb
sub
jmp
inc
imul
fnstsw
mov
cmpsl
jno
iret
mov
fs
das
clc
rolb
mov
adc
dec
insl
jb
pop
andb
negb
imul
cmc
hlt
mov
cmpsb
in
cmp
dec
or
sub
sub
xchg
ffree
bound
fcoml
insl
mov
cmp
mov
js
test
mov
push
jmp
pop
push
adc
inc
fdivl
xchg
jnp
jl
sar
cmp
mov
cmp
test
mov
es
and
jmp
cs
or
out
push
rcrl
enter
or
pop
sub
dec
mov
sti
sbb
arpl
sbb
add
roll
mov
jne
loopne
pusha
mov
rcrb
fnstenv
out
addl
jmp
mov
pop
cmp
shll
mov
mov
stos
test
ljmp
fnstsw
mov
jle
lcall
int
in
loope
jns
movsb
pop
mov
sbb
mov
add
scas
mov
dec
pushl
push
cmp
cld
push
xchg
adc
ja
cli
push
sub
loopne
out
mov
dec
adc
adc
int
aas
bnd
lods
test
push
fisubrs
das
in
out
fimuls
sub
leave
fwait
push
push
cmc
imul
stc
fninit
adc
mov
jae
push
mov
popa
sbb
orl
mov
sbb
das
mov
and
lcall
jo
outsb
lock
sar
lret
pop
pop
push
xchg
test
inc
jge
jb
xor
add
pop
lret
pusha
dec
and
cmp
mov
jne
push
orl
push
in
sbb
adc
jmp
dec
aaa
mov
shl
add
in
ret
pop
es
stos
or
xor
mov
sub
lods
xor
push
mov
outsl
lods
into
aaa
add
sub
sub
jl
stos
jle
mov
mov
add
push
int3
xchg
dec
cmp
bound
sahf
pop
xchg
add
iret
stos
pushf
es
and
jne
push
jmp
mov
popa
and
stos
xor
movsb
add
jg
pop
rclb
jno
sahf
pop
fadds
pop
mov
movsl
popa
xor
enter
imul
and
jo
lds
dec
jo
mov
push
pop
cmp
and
cltd
mov
scas
dec
pusha
xlat
imul
daa
dec
out
in
es
ret
stc
mov
int3
sbb
mov
inc
jnp
stos
cmp
xor
jns
mov
cli
push
xor
pop
pop
push
lret
fidivrs
or
mov
push
mov
adc
mov
sarb
or
popfw
cmpsl
mov
addr16
gs
mov
lods
stc
cltd
sub
xchg
mov
and
pop
adc
add
lds
jbe
cmpsb
int3
pop
js
push
cld
iret
scas
in
inc
lret
dec
jmp
int
inc
popf
jle
mov
jmp
jnp
add
pop
sub
cld
arpl
pop
pop
xchg
scas
es
cmp
scas
xlat
mov
push
test
mov
mov
add
enter
jg
add
arpl
aas
cld
out
jmp
jo
and
lahf
jo
jne
sahf
addr16
je
lock
das
pop
jbe
adc
mov
mov
mov
mov
fmuls
test
int
mov
pop
xchg
xlat
nop
cltd
xchg
jns
mov
lret
fsub
sbb
dec
mov
mov
pop
sarb
cmp
shrl
into
dec
ja
xchg
inc
xor
shll
cmpsl
mov
dec
xor
jle
mov
aas
ljmp
xor
xchg
sub
adc
xor
mov
sbb
dec
mov
out
iret
mov
imul
mov
push
adc
int
ja
pushf
add
and
in
adc
popf
cmp
test
clc
rolb
insb
mov
add
insl
imul
jnp
aaa
jno
jmp
cltd
fs
cmp
xchg
jae
sahf
lret
cmp
jl
outsb
scas
sub
outsl
jg
jp
push
dec
popf
fdivr
push
lods
xor
mov
rcr
jno
pop
xor
xchg
mov
mov
jg
push
jge
aam
add
dec
xchg
jecxz
xchg
pushl
jns
pop
out
push
cltd
lds
cmp
rcrb
adc
sub
outsb
orl
jo
pop
shrb
xchg
movsl
test
jle
xchg
sub
popa
stc
xor
int3
cmp
arpl
mov
inc
mov
faddl
jno
adc
pop
xor
push
hlt
data16
ret
or
js
push
push
daa
ret
adc
fiadds
loop
xor
lods
xor
mov
arpl
mov
xchg
mov
jmp
out
push
roll
outsb
inc
cmp
adc
mov
fwait
push
clc
cli
bound
mov
sub
push
cs
xor
sub
xlat
sbb
jge
mov
mov
mov
nop
int3
cmp
mov
fcmovu
lahf
fsubrl
mov
or
jno
clc
notb
stos
bound
push
sub
ja
lods
lods
xchg
lods
scas
jae
sti
push
pop
mov
pop
js
in
xor
loop
sub
insb
xchg
jns
adc
pushf
repnz
xor
fsts
out
fcoml
sbbl
loopne
mov
rcll
mov
add
push
or
push
push
adc
mov
nop
xor
lret
frstor
cmovb
push
push
and
lcall
cmp
cmp
jmp
inc
sbb
push
test
sbb
adc
xchg
aas
pop
loopne
xor
lds
js
test
cmc
inc
les
cmpsl
nop
aam
inc
cmpsb
ret
pop
xchg
pop
addr16
movsl
fdivrs
jp
sbb
inc
sub
dec
enter
test
lods
rep
sbb
test
data16
push
pop
ret
and
mov
dec
adc
aaa
and
sbb
inc
xor
loope
gs
leave
add
subb
add
loopne
icebp
jg
les
cli
push
fsubl
out
sbb
test
cmp
add
cmpsl
sub
outsl
push
mov
push
cli
pop
mov
test
fs
pop
addb
xor
ret
out
lea
mov
mov
loop
ljmp
dec
es
shl
jge
aas
dec
cmp
adc
and
add
pop
mov
pusha
lds
pop
dec
repz
outsl
fs
sti
jl
sbb
push
clc
aam
or
ja
rolb
xor
ficoml
mov
xor
cs
lds
lcall
or
mov
and
jmp
out
sti
into
mov
lahf
out
dec
fsubrs
pop
call
adc
jo
pusha
pop
sbb
divb
clc
sub
add
iret
pusha
das
lds
movsb
gs
loop
dec
pop
pop
add
adc
mov
jmp
mov
adc
cmp
nop
pop
and
mov
dec
repz
mov
sahf
sahf
add
jbe
ds
fsubl
cmp
push
adc
xchg
repnz
xchg
push
jbe
dec
scas
adc
test
mov
ss
adc
or
xor
out
dec
cmp
aam
fs
into
js
dec
pop
jmp
fcomps
jb
les
mov
add
movb
sti
inc
push
mov
stc
int
fdecstp
loopne
enter
mov
add
add
sub
xchg
in
dec
mov
sub
pop
rolb
movsb
mov
inc
lahf
or
out
mov
cmp
les
push
and
lea
pop
fcmovnbe
xchg
push
mov
outsb
push
ja
mov
pop
jae
dec
pop
mov
jns
aas
cmp
je
mov
xchg
xor
imul
lcall
aam
out
cmp
es
pop
jp
sarl
cmpsb
jbe
decb
or
push
cmpsb
stc
inc
and
push
push
mov
mov
pushw
mov
pop
js
in
outsb
xorl
jge
loopne
dec
pop
xchg
jle
shlb
mov
inc
out
push
mov
hlt
shlb
pop
cs
xorb
jl
mov
movsb
mov
into
ficoms
ds
fldl
loopne
cli
rol
push
pop
ret
cli
push
jl
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
cld
cs
fmull
pop
mov
mov
scas
dec
mov
cmp
or
sbb
in
push
cld
cs
fmuls
pop
mov
scas
dec
mov
cmp
or
fmull
in
push
push
test
ds
cmp
ret
xchg
repz
mov
cmpsl
xlat
mov
mov
dec
iret
pop
jno
das
aaa
pop
daa
xorps
outsl
ja
ja
repz
cmpsl
xlat
inc
out
neg
out
pop
aas
pop
das
push
pop
daa
movhps
inc
outsl
ja
addr16
das
mov
jg
leave
jmp
iret
jae
and
pop
insl
inc
outsb
cmp
xor
cmp
int3
lret
out
test
ljmp
xor
push
cmp
jae
arpl
jnp
jnp
aaa
ret
and
stc
incl
jp
push
loope
jae
mov
fldt
jg
cmpsb
ja
cwtl
push
imul
xchg
sub
lcall
daa
pop
inc
push
outsl
mov
cli
out
mov
dec
fsubrs
pop
out
or
pop
shlb
jg
xchg
jbe
addr16
push
iret
cmp
sub
data16
insb
out
aaa
rolb
sub
outsl
pop
imul
pop
iret
sub
cs
or
rorb
mov
jg
cmp
pop
fs
int3
mov
cmpsl
xor
mov
iret
sarl
popf
das
inc
pop
pop
nopl
outsl
inc
pop
addr16
mov
fisttps
sbbl
cs
jp
jnp
cmp
or
add
fcmovu
loop
vshufps
mov
stos
jo
push
push
aaa
dec
pop
push
adc
outsb
push
or
and
sti
jmp
in
hlt
ljmp
out
pop
aas
pop
das
aaa
pop
daa
xorps
outsl
ja
addr16
xchg
mov
cmpsl
xlat
inc
out
neg
out
pop
aas
pop
das
aaa
pop
daa
xorps
outsl
ja
addr16
xchg
mov
addr16
sbb
inc
lea
hlt
mov
pop
or
lret
in
scas
in
xor
leave
jns
leave
jg
jbe
mov
xchg
or
cmp
pop
fcmovnb
inc
inc
dec
pop
pop
ret
int3
jns
les
push
rep
sbb
lds
clc
cmp
out
sub
xlat
mov
das
sahf
dec
loop
lea
in
mov
lock
sub
pushf
and
cmpsl
imul
popf
in
popf
push
aas
roll
negb
ret
jae
push
scas
in
out
jl
mov
xor
roll
cmp
jns
inc
jg
inc
aam
orb
push
push
outsl
mov
mov
test
out
outsl
test
jecxz
jge
xor
jmp
gs
jle
mov
stos
dec
pop
mov
and
inc
xchg
mov
add
repnz
ret
jle
imul
jle
mov
xor
movsb
mov
bound
sub
push
jae
inc
xchg
push
inc
mov
lret
and
popf
cld
pop
lret
sbb
sub
roll
jecxz
cs
push
fidivs
mov
shr
aad
dec
in
adc
xchg
movsb
jno
xchg
out
cmp
add
xchg
xchg
pop
rolb
out
stos
jno
adc
sub
xchg
mov
adc
adc
mov
int3
xchg
sub
mov
shll
sub
jne
jno
lds
dec
push
xor
sub
xchg
cmp
xchg
stos
jle
cmp
js
outsl
loopne
push
cmp
outsb
jae
mov
leave
aad
fisttps
sub
es
nop
mov
test
lret
ss
mov
gs
jge
push
mov
out
cmp
ret
mov
ret
ficoml
shl
ljmp
add
inc
adc
and
adc
addr16
jge
lahf
pop
sbb
cmp
jno
rcr
shll
insl
insb
decb
or
mov
int
or
mov
arpl
stos
or
inc
mov
fidivrl
adc
mov
pop
pop
push
dec
xor
mov
sub
sbb
out
fwait
mov
pop
pushf
lret
inc
out
popa
out
in
sbb
aas
test
movsb
popa
fsubrs
add
xor
addr16
out
sbb
das
setb
adc
adc
mov
xor
out
aaa
pop
leave
loopne
scas
fiadds
jl
push
inc
movl
mov
subl
decl
movsb
sbb
iret
xchg
xor
outsl
sub
xor
mov
fwait
lods
test
cmp
roll
addr16
adc
cwtl
fstl
lock
in
cmpsl
and
inc
cmp
or
inc
mov
xor
inc
add
jl
sbbb
cmp
dec
fwait
insb
rol
test
xchg
sbb
je
pop
repz
push
jle
sar
imul
lahf
cs
xor
mov
lahf
and
fsts
in
clc
xor
imul
fisttpl
pop
xchg
push
mov
pop
sbb
cmpsb
fwait
add
push
cmp
jmp
jbe
cmp
shl
sub
jne
in
fcmovnu
jne
outsb
jbe
repnz
cmp
lret
cmpsl
aad
inc
icebp
push
pop
lret
scas
xchg
xor
jge
push
frstor
xor
ret
in
bound
stos
ret
sub
pop
and
add
adc
sub
aaa
add
in
pop
mov
in
mov
loope
js
adc
mov
or
stos
xchg
and
fnstcw
sub
test
dec
add
inc
jge
pop
cmp
push
xchg
fnstcw
hlt
movsb
push
sub
pop
jl
movsb
pusha
sbbl
pop
in
jmp
jge
movsb
mov
xorb
lret
and
jge
movsl
xchg
cltd
fwait
sub
sbb
and
out
cld
add
xchg
push
and
sub
ret
lahf
pop
rdtsc
ja
push
in
or
scas
add
fstpl
adc
jno
out
es
in
aas
loop
hlt
enter
notb
ds
sub
mov
clc
mov
aam
shll
pusha
sbb
dec
out
sbb
inc
movsl
xchg
xchg
stc
imul
gs
out
cmp
pusha
fwait
movsl
push
cld
sbb
shll
in
lret
jae
roll
pop
or
cmp
fnsave
stc
adc
int
inc
nop
xchg
lret
mov
xchg
cmp
les
jmp
push
movsl
dec
sub
xchg
and
jb
and
jecxz
in
and
and
ds
pop
popa
adc
jg
in
enter
loopne
lret
loope
mov
rorl
in
push
flds
jnp
sbb
mov
push
xchg
push
paddw
mov
gs
sub
push
flds
pop
shlb
pop
sub
pop
ja
mov
subb
inc
hlt
xchg
jmp
adcb
jo
jno
sbb
inc
inc
sbb
xor
sub
xchg
gs
inc
cmpsb
outsl
cmp
loope
iret
shlb
popf
push
imul
push
in
clc
fsubs
push
lahf
and
pop
test
and
insl
mov
int
xor
ss
push
es
cmp
mov
lahf
sarl
sarl
in
fbld
xchg
cmp
bswap
sbb
stos
sub
pop
xor
and
sbb
daa
pop
pop
pop
pop
andb
out
ja
push
ja
fstl
lret
lea
pop
jne
mov
hlt
sub
stc
push
icebp
sarl
fisttps
ds
and
pushf
xor
cwtl
pcmpgtw
push
xchg
mov
inc
out
sub
rcl
sarb
dec
fcoml
sbb
insb
test
push
ret
stos
mov
movsb
mov
pushf
add
push
les
lea
fisttps
inc
push
xor
mov
leave
enter
push
inc
pusha
jmp
jmp
lahf
sbb
mov
xor
in
adc
xor
das
jge
xchg
jb
ja
lret
push
loop
lods
repz
cmp
mov
jecxz
loopne
cmpb
lods
lret
arpl
cli
int3
mov
push
push
hlt
jnp
or
mov
es
pushf
xlat
adc
mov
cmp
or
cmpb
loopne
aam
aam
test
inc
es
mov
pop
pop
fdivl
inc
adc
test
test
cmp
adc
jbe
adc
adc
adc
dec
sbb
repz
mov
imul
mov
test
xchg
jno
add
pop
jge
cmpsb
xor
cli
in
mov
rcll
inc
push
dec
sub
mov
mov
pop
faddl
sbb
xor
fs
pop
or
or
mov
inc
cmc
aad
jl
xchg
call
fildll
push
hlt
jne,pn
mov
out
sahf
fs
mov
imul
mov
pop
lcall
jge
paddusb
sbb
cmp
test
lret
aam
insb
push
cmpsl
sbb
dec
test
rcrl
sti
sub
sub
xchg
cmp
cwtl
pusha
lret
test
call
int3
nop
push
ss
pop
iret
shlb
test
fidivrs
bound
clc
shrl
les
icebp
addl
out
dec
popa
lret
or
jle
imul
ret
mov
mov
sbb
lret
and
decb
mov
js
fdivrs
xchg
mov
push
das
roll
mov
jns
ret
push
pop
xor
in
cmp
xchg
xchg
and
or
aam
cmp
stos
or
pop
fcmovbe
pop
pop
push
out
dec
and
enter
jbe
stos
cmpsb
sub
in
iret
add
out
xchg
push
push
push
inc
dec
push
sub
mov
out
cmp
jns
aad
dec
jle
icebp
cld
test
in
aad
rcr
adc
gs
cli
std
loop
mov
or
dec
add
cmp
out
inc
lret
mov
mov
stos
push
mov
inc
jno
add
inc
out
ficoml
xor
inc
mov
loopne
xlat
test
or
and
pushf
mov
dec
bound
xchg
mov
cltd
nop
es
pop
mov
stc
xor
xor
sbbb
xlat
pop
jae
mov
push
xchg
test
dec
mov
pop
sub
or
mov
mov
ficoms
rcr
out
sbb
out
stc
jno
movsb
nop
iret
xchg
mov
bound
loope
pop
or
cmp
cwtl
bound
test
adc
stos
sbb
pop
sti
pop
pop
scas
leave
sahf
dec
test
out
inc
or
mov
push
cwtl
icebp
daa
insb
stos
inc
lahf
xchg
xor
sbb
jae
mov
and
out
cmc
rorl
out
sbb
cmpsb
push
fsubr
cwtl
adcl
ret
mov
les
ljmp
add
int3
mov
mov
mov
filds
dec
popa
lret
ss
cmp
xchg
sub
xchg
inc
testb
addb
cld
adc
add
inc
out
mov
inc
mov
sub
pop
repnz
loope
movsl
in
jle
lcall
dec
cli
sahf
jecxz
or
or
push
imul
in
or
and
lock
fadds
inc
or
repz
mov
lcall
jnp
jmp
pop
iret
jns
adc
xchg
adc
xlat
fidivs
in
xor
clc
repz
pop
xor
fcompl
sbb
cld
xchg
push
and
sub
cmp
les
jmp
or
std
das
xchg
mov
mov
popa
mov
loopne
mov
adc
cltd
imul
push
pop
xor
aas
jecxz
lea
pop
push
or
ja
lock
and
fildl
inc
jns
ficoms
mov
mov
mov
cmp
repz
in
loope
std
and
inc
push
mov
xchg
in
xchg
test
push
mov
mov
lods
lock
cmpl
fcmovnu
jb
mov
imul
xlat
loop
in
nop
and
mov
pop
inc
in
xorl
push
mov
mov
movsl
and
jno
insb
jno
mov
mov
hlt
push
jl
inc
pop
adc
addr16
roll
mov
xchg
fcoml
jmp
aad
push
out
jmp
ret
cltd
pop
rcrl
cmp
push
push
adc
pop
js
pop
shrb
adc
sbb
mov
lea
sbb
sub
add
into
aaa
stos
push
mov
cmpsb
or
inc
mov
adcl
push
movsbl
dec
outsb
lret
lds
xchg
push
pop
gs
call
and
xchg
or
push
es
loopne
popf
mov
fwait
dec
jg
imul
out
sbb
sahf
lods
outsb
and
xchg
mov
call
dec
dec
add
stos
mov
mov
add
and
fidivrs
mov
push
mov
ret
iret
dec
pushw
inc
stc
rcr
add
add
pop
xor
stc
out
and
ss
data16
insb
iret
sbb
or
add
adc
mov
scas
dec
xor
in
and
sbb
dec
adc
cli
xchg
add
add
xchg
in
addb
je
sub
addr16
sub
mov
fists
mov
xor
pop
dec
cli
lock
movsl
and
adc
xchg
insl
leave
int
mov
shl
repz
inc
imul
stos
sbb
test
push
cwtd
jno
fwait
xor
push
cmpsl
daa
pop
stos
pop
jne
push
cmpsl
in
icebp
loope
jg
cmp
inc
mov
jo
and
lret
jnp
sbb
lahf
sti
aaa
add
dec
addr16
dec
push
mov
adcb
pop
sbb
shrb
or
and
jp
loopne
inc
sti
pop
fnstenv
sub
push
fdivr
and
cmpsb
and
dec
push
loopne
data16
sbb
sub
enter
jle
ret
lds
sub
xchg
inc
or
lods
inc
inc
out
repz
aad
pop
xchg
scas
pushf
mov
sbb
pop
and
or
test
popa
jns
clc
sbb
push
movsl
xchg
xchg
lods
loop
cmp
data16
mov
xchg
inc
mov
xchg
lret
jg
mov
xor
es
arpl
and
movsb
or
jecxz
stos
xchg
cmp
ret
and
sti
cwtl
mov
mov
xchg
aad
xorl
inc
push
ss
fisttps
das
sub
mov
nop
fdivrs
cld
push
aas
push
adc
loopne
cmp
shll
mov
mov
fldt
fnstenv
ret
stos
inc
pop
jns
xchg
jmp
and
mov
cmpsb
mov
icebp
icebp
movsl
jle
sti
cmpl
mov
cmp
pop
ss
loop
or
ror
lahf
mov
in
cwtl
adc
fdiv
push
bound
xchg
mov
mov
orb
outsl
dec
dec
jne
js
xchg
pop
and
push
or
mov
pop
stos
adc
scas
decl
xor
pop
cmp
cli
repz
cmpsb
jp
js
push
and
inc
pop
and
xchg
push
lret
in
in
xor
mov
inc
cmpb
lods
aaa
xor
push
je
cltd
sbb
mov
fs
dec
and
inc
push
enter
daa
push
jge
sub
lea
or
stos
mov
jg
push
shrb
push
fstpl
cmp
lcall
rcr
sahf
and
dec
push
in
inc
and
xchg
rol
add
sub
mov
adcl
jmp
pop
jg
jno
dec
lahf
lea
call
xorb
mov
xchg
cmp
mov
xor
pusha
in
or
mov
hlt
call
pop
mov
jge
xor
push
push
dec
je
cmc
pop
enter
inc
pop
clc
sub
push
scas
lods
ret
mov
loopne
stos
inc
xchg
and
cmp
mov
cs
pop
pop
sahf
or
shufps
mov
test
fldenv
sub
ret
push
sarb
mov
inc
out
inc
nop
push
in
sbb
mov
lea
inc
push
push
xchg
or
jl
sbb
jno
sar
daa
pop
fistps
cmp
or
mov
mov
push
mov
in
add
cmpb
push
addr16
loop
xlat
jnp
push
cmpsl
fsts
xchg
adc
xchg
outsb
cmc
jno
rcrb
push
push
ds
lret
jnp
out
es
xchg
movsb
jae
mov
or
std
pusha
test
jae
shlb
xchg
pop
or
or
adc
xor
ret
pop
loope
enter
adc
adc
sub
enter
aaa
mov
ja
aas
and
pop
movsl
or
movsl
mov
mov
jne
mov
and
or
adc
jecxz
pop
ds
dec
cwtl
and
sbb
pop
out
int3
mov
add
mov
cmp
pop
add
jnp
cmp
add
cmp
and
cld
pop
fnstcw
shlb
sub
sbb
hlt
sti
iret
jge
xor
mov
jg
sbb
mov
inc
push
imulb
or
cmpsb
jns
push
pop
jmp
ret
add
xchg
nop
sbb
icebp
sbb
aaa
inc
xchg
jb
sub
sbb
addb
jge
out
xor
fldcw
push
dec
loop
jge
outsl
cltd
clc
add
cmp
mov
or
adc
jl
in
mov
fwait
fs
xchg
ret
jmp
xor
int3
sbb
insb
sub
sti
leave
ljmpw
sbb
pop
lahf
in
mov
or
add
sti
inc
into
andl
lods
int
icebp
xor
movsl
push
cli
adc
cmp
setbe
or
cmc
out
pop
mov
inc
xor
add
mov
add
fisubl
mov
enter
xchg
cmp
ret
jle
sbb
pushf
in
pop
insl
ret
not
xchg
nop
movsl
sub
push
mov
insl
xor
sbb
dec
inc
xor
scas
dec
imul
xchg
mov
xor
xchg
mov
or
stc
cltd
in
leave
rcrl
enter
pop
sbb
sub
sbb
xor
fstpl
and
inc
inc
mov
popa
adc
adc
movsl
or
cwtl
inc
nop
aam
sbb
pop
mov
jecxz
cmpsb
sbb
lods
adc
and
mov
ret
insb
testl
addr16
xchg
movsl
xor
aad
cltd
mov
xlat
inc
xor
stc
add
sbb
andb
cwtl
fcmovb
xor
mov
sahf
aas
push
jle
faddl
adc
daa
xor
orb
inc
adc
pop
nop
push
push
movsb
cmp
xor
shll
mov
in
flds
loope
mov
sbb
lahf
imul
jns
stc
hlt
mov
stos
std
lret
insl
lret
cwtl
dec
stos
enter
and
lret
jo
xor
int3
jg
mov
mov
mov
mov
cmp
je
cmp
and
out
inc
lods
mov
shlb
push
pop
fdivl
ljmp
jne
sbbb
pop
sbb
call
nop
xor
push
push
sub
add
lahf
jo
shlb
movsl
cs
aas
cmp
or
add
jecxz
cltd
cltd
push
lret
mov
rolb
aaa
xor
aam
mov
mov
lret
sub
loope
xor
push
les
daa
mov
and
fwait
stos
or
adc
mov
mov
outsl
hlt
fldcw
in
jmp
jge
outsb
dec
xor
arpl
movsl
sub
push
lds
loop
mov
xor
add
gs
je
sbb
out
ficomps
pusha
movsb
mov
inc
adc
test
stos
xchg
xlat
xchg
sub
out
cmpsb
cmp
adc
iret
or
int
jle
lods
in
pop
inc
stos
jbe
add
stos
lcall
int
sbb
jle
lods
push
fucomip
popl
out
int3
pop
fists
adcl
popa
fildll
push
shrb
sub
mov
and
aas
sahf
mov
fmulp
pop
mov
aaa
ljmp
push
aaa
xor
cmp
jne
mov
jb
xor
push
sbb
xor
inc
pop
ljmp
insb
mov
sub
out
es
dec
mov
cmp
mov
jmp
and
sarl
orl
vcvtsi2ssl
mov
das
and
ss
sub
add
sub
jmp
scas
dec
loopne
pop
inc
xchg
mov
xchg
mov
jns
mov
daa
jbe
mov
fsubl
into
xor
add
jmp
mov
out
popf
jp
fiaddl
cwtl
andl
mov
jmp
inc
pop
les
sti
out
sbb
sbb
jl
les
inc
xchg
das
mov
jno
aaa
sbb
repnz
fmul
popa
repz
leave
in
imul
xor
pop
addl
nop
sahf
sub
fcomip
pop
cmp
mov
sub
movsl
xorb
decb
jo
data16
ss
aam
mov
cmp
lea
je
dec
idiv
out
pop
js
pop
push
sbb
mov
fnsave
push
or
push
jnp
sbb
mov
dec
and
jle
imull
imul
lds
pop
ljmp
call
sbb
aaa
mov
into
mov
int3
and
cmp
jecxz
int3
inc
or
cmpsb
stc
dec
incl
arpl
adc
ja
bnd
dec
cwtl
push
dec
das
inc
push
sbb
xchg
ljmp
insl
or
cmp
es
fists
cld
fidivrs
pop
inc
stc
iret
add
add
fwait
test
mov
mov
lds
pop
movsb
jb
pop
jecxz
arpl
cmp
cmc
dec
xlat
cmp
xchg
or
test
outsb
or
cltd
or
inc
and
mov
mov
pop
imul
lea
xor
aaa
add
lock
lock
mov
cmc
lock
lret
dec
aas
into
je
lock
jo
stos
pop
leave
and
adc
xchg
cmp
faddp
in
outsb
call
les
mov
sbb
in
sbb
jns
xchg
mov
dec
add
push
sbb
jmp
scas
lock
cmpsl
xlat
inc
out
neg
out
pop
aas
pop
das
aaa
pop
daa
xorps
outsl
ja
addr16
xchg
mov
cmpsl
xlat
inc
out
neg
out
pop
aas
pop
das
aaa
pop
daa
xorps
outsl
ja
addr16
xchg
mov
cmpsl
popl
out
neg
daa
iret
pop
aas
pop
das
pop
daa
xorps
outsl
ja
dec
cmpl
xlat
call
out
neg
addr16
pop
aas
clc
test
test
mov
call
mov
es
xor
seta
mov
cmpsl
dec
xlat
pop
lds
jle
mov
sahf
pop
scas
aaa
mov
lret
out
ja
adc
xchg
push
cmpsl
cs
cmpsl
dec
mov
jle
xchg
test
and
negb
cmp
aam
xorb
xor
icebp
imul
imul
mov
out
sub
mov
dec
mov
insl
add
imul
and
rcr
shlb
testb
pop
sub
pop
jg
sarl
in
pop
sbb
add
cmp
outsb
aaa
jle
xlat
mov
addr16
lcall
mov
cwtl
test
xlat
sbb
pop
cmp
pop
jle
fiadds
adc
and
xor
add
fcoms
mov
pop
xchg
out
sbb
jle
jmp
adc
les
xchg
xchg
out
push
dec
outsb
mov
outsb
idivl
inc
pop
xchg
scas
mov
sub
out
lods
out
pop
adc
inc
cmpsl
daa
out
push
sti
inc
aas
je
jle
loop
sti
pop
lret
je
or
push
incb
push
shll
pop
ret
pop
into
dec
mov
adc
rcll
mov
sbb
shrl
sarb
dec
xchg
mov
inc
repnz
ret
inc
xchg
fiadds
ja
addr16
xchg
push
xchg
mov
cmpsl
dec
xlat
pop
outsb
idivl
mov
sahf
pop
scas
aaa
mov
inc
out
ja
addr16
xchg
push
xchg
mov
cmpsl
dec
xlat
pop
outsb
idivl
mov
mov
adc
fs
sub
sub
push
pop
out
ret
or
arpl
rorl
enter
out
add
lret
cmp
lock
sbbl
dec
xlat
inc
inc
push
sti
int3
rcrb
adc
mov
jne
fldl
xchg
aas
aad
cmp
std
leave
and
stc
push
pop
das
mov
dec
mov
je
in
lret
add
cmpb
mov
lds
inc
push
dec
add
insb
sarl
and
dec
cld
pop
push
add
sbb
sub
loopne
out
dec
inc
clc
imull
xchg
aam
and
pop
lods
fdivrl
jnp
sub
push
test
dec
data16
push
dec
cmpb
imul
dec
shll
sbb
ds
mov
jg
push
dec
inc
xchg
cli
ljmp
in
mov
fs
jp
scas
pusha
push
push
push
in
into
inc
lea
outsl
and
lods
int3
add
mov
cmp
or
push
fwait
cltd
jb
adc
arpl
xchg
hlt
call
adc
mov
cmc
sbb
pop
pop
dec
cwtl
mov
lret
push
and
sbb
arpl
mov
test
sub
mov
in
and
sti
out
or
jecxz
lcall
push
das
sub
jb
mov
std
jmp
ljmp
lds
aaa
cmpsb
test
or
aas
pusha
and
aas
cmp
imul
cwtl
jns
test
sub
fs
xor
jae
mov
pop
pop
mov
into
pop
jns
xor
inc
stos
sahf
arpl
mov
repnz
lods
es
int
shrb
inc
pop
mov
fcomp
fildll
dec
sub
bound
jo
pop
mov
sub
cmp
lods
loope
sub
mov
dec
sti
iret
rorb
inc
xchg
sbb
xchg
mov
cwtl
aad
jge
nop
fstpl
das
sbb
cmp
ss
rcll
repnz
jp
outsl
cmpsl
mov
adc
bound
test
push
inc
lret
stc
dec
mov
xchg
sarl
or
lods
xchg
sub
lcall
and
mov
ds
mov
js
mov
gs
movsb
fidivrs
or
aaa
ljmp
push
xor
mov
es
or
inc
and
lret
out
lahf
dec
pop
cmp
push
movsb
aaa
mov
cmp
mov
ret
loop
and
outsb
mov
insb
or
icebp
scas
cmp
xchg
icebp
cld
add
loope
cmpsb
stos
hlt
in
popf
and
and
mov
jge
int
test
sbb
pop
les
loope
add
cmc
lret
test
cmpsb
stos
ds
test
push
xchg
rcrb
pop
jmp
inc
scas
mov
inc
add
into
jge
lods
insl
adc
scas
rorb
push
or
fstpl
mov
call
sbb
mov
xchg
ljmp
std
test
in
out
or
popf
lea
or
shlb
push
or
sbb
mov
fdivrs
dec
mov
jle
aaa
push
aam
xchg
movsb
addr16
cmp
and
jbe
jl
sbb
loop
fwait
jbe
or
rcrl
jl
pop
push
sbb
adc
mov
leave
scas
and
negb
je
popa
cmp
in
or
lock
push
and
mov
cltd
pmuludq
mov
cmc
fsubl
add
adcb
cmp
pusha
xor
rcll
cltd
xor
jmp
cld
pusha
test
mov
dec
lahf
or
enter
cmp
xor
mov
xor
mov
or
mov
mov
call
hlt
icebp
outsl
sbb
or
in
xchg
cltd
test
and
and
sahf
ljmp
jmp
and
popf
jle
call
mov
leave
cmp
inc
out
stos
xor
cli
loop
ret
push
sti
ja
adc
sti
adc
add
and
add
jo
inc
jmp
mov
test
cmp
arpl
outsl
and
fsubs
xor
subl
mov
mov
mov
js
sbb
pop
clc
cmp
dec
aas
enter
call
fwait
rolb
mov
sbb
sti
mov
dec
adc
leave
dec
xchg
pop
mov
push
jo
push
mov
jp
adc
add
mov
sbb
push
loop
adc
jmp
jl
lret
cmc
xchg
jno
inc
mov
cmp
sub
orb
scas
mov
in
adc
movsl
xchg
or
pop
push
xchg
lret
ljmp
imul
mov
pop
sti
lods
stc
xlat
xchg
xor
push
ror
cmp
sub
std
lea
leave
sti
xchg
out
mov
xor
and
cmp
fcompl
mov
inc
push
pop
mov
xchg
into
pop
repnz
jno
dec
adc
dec
mov
les
cmp
xor
add
and
fs
mov
shlb
int3
std
sbb
lcall
leave
jg
mov
lods
add
pop
mov
cmpsl
add
or
mov
mov
jo
icebp
jmp
in
arpl
cli
xchg
push
fs
daa
lret
and
pop
dec
shlb
leave
mov
or
loop
add
repnz
inc
daa
mov
decb
pusha
xchg
in
inc
jb
sbb
or
push
fldl2t
push
cmpsb
mov
cmp
ss
sub
ficompl
add
fcmovnbe
fwait
mov
sarl
aam
stc
and
jbe
pop
mov
arpl
and
pop
jno
rorl
xchg
or
cli
call
lahf
jmp
adc
push
in
lock
pop
sbb
idivl
xor
daa
inc
rcrb
ret
inc
push
xor
xchg
nop
sbb
into
jecxz
data16
ja
dec
pop
cltd
jo
sbb
push
aam
fwait
es
xchg
gs
push
insb
jbe
in
adc
push
lcall
lahf
xor
sti
cs
mov
incl
push
dec
push
sub
lods
xchg
adc
in
aas
push
ret
mov
clc
jne
lahf
mov
lahf
mov
cmp
sub
js
pushf
in
sbb
pushf
popf
xor
loop
pop
or
pop
push
wbinvd
arpl
test
repnz
lahf
inc
or
sub
xchg
mov
xlat
stc
dec
call
fcmove
jae
scas
dec
sbb
push
cmpb
mov
je
mov
cwtl
xor
adc
test
imul
daa
lock
mov
pop
movb
stc
ljmp
xchg
mov
out
je
sbb
std
fs
jbe
shll
mov
or
das
dec
cmp
ja
popa
ljmp
mov
cmp
mov
jnp
ret
cmp
sbb
pop
fnstenv
mov
out
pop
cmc
int3
pusha
cli
jae
daa
mov
fsubp
rorl
mov
and
test
in
push
push
int
mov
fmuls
dec
enter
fldt
xchg
cmp
xchg
and
test
sbb
inc
mov
cmpl
stos
daa
push
adc
pop
fcoms
xchg
ret
repz
shl
xchg
mov
mov
xchg
cmp
xchg
add
jb
addr16
cmp
loop
in
cltd
mov
push
xchg
cmp
out
mov
movl
add
gs
cmp
lods
push
xchg
dec
lret
xchg
in
xchg
pop
pushf
xchg
repz
movsl
jp
in
push
or
add
test
sbbl
push
gs
flds
mov
sahf
stos
mov
jecxz
xlat
lahf
push
xchg
das
je
mov
lods
test
xchg
out
push
or
add
add
sub
cld
ret
jb
mov
mov
adc
xlat
xchg
insb
in
pusha
je
dec
mov
js
outsb
adc
cmpps
sahf
test
mov
testb
jnp
in
out
jb
sbb
jb
lock
push
pop
dec
addr16
cmp
scas
stos
loop
jmp
sbb
add
fadds
add
fmul
pop
pop
out
pop
mov
bnd
addr16
out
int
sub
scas
jmp
stos
jl
enter
fs
js
aad
addr16
cmpsl
mov
mov
cli
pop
sub
xchg
movsl
mov
fcompl
mov
inc
mov
mov
add
out
mov
ret
pop
jl
pushf
ljmp
jecxz
or
decl
dec
push
outsb
xor
xor
lods
xor
fcomip
xchg
sarb
cmp
mov
adcb
sub
add
bound
sub
lock
cmpsb
mov
cmpsl
hlt
lea
push
and
and
push
movsb
sub
mov
mov
fisubrl
inc
sub
push
or
cltd
sbb
inc
and
dec
add
out
call
jecxz
jns
xor
or
loope
mov
outsb
mov
cs
mov
test
push
ds
cmp
xor
outsb
shll
push
xchg
xor
je
orb
inc
popa
push
mov
add
out
es
pop
add
xorb
add
lret
aam
clc
push
adc
out
lea
mov
shlb
daa
add
ja
cli
hlt
stc
pop
movsb
push
push
xchg
daa
cmovg
lahf
fstpt
arpl
mov
mov
pop
or
sti
push
mov
xchg
ja
pop
or
jb,pt
add
push
lods
jo
and
orl
xor
dec
pop
push
sahf
adc
sub
dec
push
sbbb
inc
mov
mov
out
xor
stos
mov
mov
mov
repnz
cmpsb
stc
jge
push
repnz
and
inc
sbb
nop
xchg
push
ret
stos
in
cmc
sub
pop
dec
mov
jge
mov
pushf
sbb
pop
pop
dec
rorb
outsl
das
int
call
xor
mov
xchg
filds
out
pusha
icebp
lret
mov
mov
call
push
inc
fnstsw
js
xchg
loopne
xor
out
out
push
xor
sbb
scas
out
xchg
dec
sti
sub
add
fadds
mov
fwait
dec
loop
mov
scas
inc
jg
xchg
scas
xchg
insb
inc
mov
cld
shrl
repz
into
inc
stc
jecxz
jle
jmp
sbb
mov
and
add
test
add
aam
out
or
jmp
push
mov
push
or
and
or
xchg
loop
adc
mov
or
push
lret
push
sbb
jnp
dec
ret
cmc
push
rcl
pop
fsubrs
pop
xor
lods
xor
in
test
in
aas
test
mov
or
sub
insb
xor
mov
xchg
icebp
aaa
imul
subl
inc
js
mov
push
fistps
cmp
dec
sbb
pop
pop
pushf
adc
or
mov
push
fwait
lods
ds
movsl
sub
jbe
fsubl
stos
adc
pop
mov
mov
inc
sahf
ret
push
gs
pop
divl
push
test
rcl
jo
and
xchg
fidivrl
iret
mov
insl
sbb
pop
and
lock
pop
add
dec
mov
pop
push
mov
leave
xchg
scas
pushf
xor
fldz
out
xchg
jb
pusha
and
or
fisttpl
cltd
fcomps
push
inc
sub
or
mov
mov
cs
mov
sub
cmp
inc
test
mov
ljmp
psubq
iret
js
xor
aam
push
leave
stos
lret
dec
cmpsb
pop
mov
shlb
add
mov
mov
xchg
popf
pop
lods
push
leave
add
mov
loop
mov
jp
push
ficoml
xlat
pop
jnp
mov
inc
inc
mov
sbb
test
lods
movsb
enter
in
subb
test
dec
inc
pop
mov
dec
sub
jns
mov
and
and
divb
adc
mov
xchg
mov
xchg
outsb
stos
mov
enter
push
xchg
cmp
jne
aaa
sbb
adc
fcompl
fwait
into
call
or
cmpsl
cltd
rcrl
mov
xor
pop
and
push
sub
sub
sbb
add
popf
lret
mov
enter
jns
rorb
fucomp
stos
mull
insb
sbb
inc
outsb
outsb
pop
int
dec
cs
mov
jmp
js
mov
mov
mov
outsl
xchg
pushl
popa
mov
cmp
decl
outsl
std
inc
push
mov
iret
xor
xchg
cmp
jo
dec
push
cmpsl
xchg
stos
std
xchg
scas
stos
movsl
ror
jo
cmp
add
cmpsb
leave
pop
rorb
je
fdivp
in
mov
lret
js
std
nop
adc
outsb
call
lods
mov
movsb
mov
lock
icebp
adc
call
sti
or
pop
cmp
insl
adc
icebp
mov
pop
loope
xor
mov
sti
stos
cli
xchg
push
mov
adc
dec
out
jnp
es
and
adc
sbb
adc
pop
aam
add
pop
mov
inc
out
add
and
mov
cmp
imul
mov
mov
xor
mov
fcomip
pop
ja
cmp
jb
jge
mov
ret
or
push
testb
daa
mov
addr16
sub
cmp
out
dec
test
cmpsb
insl
pop
pop
xchg
or
inc
push
mov
and
call
inc
add
push
cmp
in
repnz
in
sbb
push
mov
jnp
aam
pusha
sbb
add
inc
inc
ret
sti
test
push
jbe
inc
push
out
mov
in
dec
jmp
and
scas
add
std
xchg
add
xchg
and
jb
cmp
add
xchg
lock
xchg
pop
hlt
aad
and
imul
xchg
out
inc
and
push
push
push
adc
fnstenv
or
out
mov
adc
test
mov
shl
mov
lret
dec
in
in
sbb
cmp
xor
sbb
mov
dec
pop
repz
sti
imul
daa
mov
sub
push
xor
push
lds
and
dec
push
mov
les
add
ja
jge
cmp
les
sbb
and
jmp
jp
nop
mov
xor
adc
ss
and
pusha
jecxz
ret
or
push
and
leave
fistpll
hlt
mov
dec
dec
mov
dec
push
gs
mov
adc
repz
mov
lret
mov
and
or
add
cli
add
and
lcall
fimuls
xchg
push
push
dec
pop
mov
inc
push
cli
pop
mov
jmp
sbb
aaa
jp
mov
push
es
neg
popa
cmp
orb
sub
frstor
sahf
outsl
cmp
lret
or
and
leave
mov
dec
push
insb
mov
pop
cmpsb
push
std
push
les
dec
repnz
jo
sbb
lret
repz
popa
fs
pop
adc
popa
pop
adc
sub
inc
shrl
fstpl
sbb
add
mov
in
adc
inc
cmp
and
imul
pop
imull
jge
inc
sub
cltd
flds
mov
sbb
dec
out
mov
andl
jg
push
in
out
data16
sub
xchg
add
xchg
xchg
mov
pop
jb
clc
addr16
xchg
mov
push
ret
das
sahf
ret
jg
xchg
xchg
adc
es
shrb
sbb
sub
add
cmp
mov
add
bound
inc
push
dec
inc
and
imul
pushf
sub
add
and
lcall
dec
notb
jae
pop
inc
push
movsl
sbb
fs
cmc
pop
fisubrs
bound
addb
inc
aaa
pop
nop
jp
jb
scas
dec
push
mov
jge
push
mov
pop
push
cld
movsb
stos
add
or
jecxz
jae,pt
dec
sub
dec
mov
jmp
adc
and
loop
lret
lods
fst
ljmp
mov
int
popa
in
dec
jp
or
push
call
sahf
sti
and
mov
jmp
jbe
mov
add
mov
mov
inc
mov
cmp
je
neg
mov
pop
pusha
nop
dec
mov
sub
repz
mov
std
push
xor
mov
bound
bound
pop
mov
xor
pop
insb
mov
dec
xchg
lahf
adc
out
mov
push
xor
cltd
mov
scas
and
xchg
pop
cltd
mov
jae
enter
cld
mov
leave
out
jmp
xchg
jge
mov
mov
jge
ficomps
popa
add
cmp
les
jg
mov
into
popf
mov
jns
adc
into
imul
cmpsb
repnz
ret
mov
mov
ja
sub
lods
fwait
sbb
outsb
xchg
mov
mov
call
aam
mov
jb
nop
std
cs
xchg
ret
mov
push
dec
jge
sub
aad
inc
sub
mov
adc
jbe
ret
mov
sahf
mov
and
jp
jecxz
mov
fcomps
adc
imul
mov
inc
pop
pop
repnz
outsl
out
insb
and
cmp
or
add
int3
rolb
mov
and
mov
sbb
and
test
add
cmp
das
outsb
in
pusha
xor
std
cmp
push
icebp
and
sbb
lods
sbb
mov
jg
sarl
adc
test
ss
mov
aam
cmpsl
es
jnp
sarb
sub
add
jg
adc
xchg
adc
jae
xor
adc
dec
jmp
fwait
in
xor
cwtl
add
mov
lds
loop
or
and
popf
nop
mov
fisubrl
dec
mov
lcall
jmp
test
shlb
push
push
bound
int3
mov
sti
or
cltd
mov
xchg
imull
jo
aam
jnp
or
and
add
push
xchg
mov
rcll
mov
js
shrb
mov
jnp
cwtl
lret
daa
and
or
dec
andl
jl
test
decl
je
push
bound
dec
lds
cmc
mov
xlat
ja
addr16
into
pop
adc
mov
aad
inc
pop
scas
cld
push
bnd
lret
xor
mov
add
stc
scas
push
cmp
pusha
imul
push
push
xchg
out
pop
ljmp
cmpsb
dec
add
adcl
sbb
sub
notb
js
jno
and
and
outsl
push
jnp
mov
out
lods
ret
idivb
pop
xchg
xrelease
fstps
jmp
dec
adc
cld
pop
dec
mov
ds
mov
mov
dec
and
test
imul
icebp
jae
adc
mov
or
cmp
cmc
repz
aam
sarl
xchg
add
hlt
lcall
nop
cmp
int3
pop
inc
xor
xchg
je
xchg
sti
pminub
ja
pop
ficomps
add
xor
ss
push
loope
pop
or
ret
sub
inc
mov
les
inc
pop
outsl
and
cmpsl
addr16
sbb
addr16
js
adc
mov
mov
mov
xchg
inc
and
movsb
imul
xchg
outsb
inc
push
shlb
xchg
insb
test
push
add
rol
pop
add
cs
pop
xchg
cli
adc
fidivl
lahf
mov
mov
das
fsubr
push
mov
dec
pop
jbe
jp
mov
mov
dec
mov
add
adc
sbb
sub
aas
outsb
jne
scas
cmp
add
into
clc
imul
mov
xlat
and
dec
sub
or
jns
ret
mov
push
cmpb
mov
ds
in
push
lcall
arpl
mov
dec
mov
sub
rcrb
pop
out
loopne
das
int
jge
imul
mov
psrlq
in
repnz
pop
movsb
pop
mov
inc
out
ja
addr16
xchg
push
xchg
mov
cmpsl
dec
xlat
pop
outsb
idivl
mov
sahf
pop
scas
aaa
mov
inc
out
ja
addr16
xchg
push
xchg
mov
cmpsl
dec
xlat
pop
outsb
idivl
mov
sahf
dec
scas
dec
mov
out
out
ja
addr16
dec
push
xchg
mov
cmpsl
dec
xlat
pop
outsb
xlat
jl
mov
pushf
pop
scas
aaa
mov
inc
outsb
idivl
icebp
push
sarb
pop
cmp
push
or
ja
addr16
jg
push
fwait
xlat
mov
mov
xchg
lret
add
mov
cmpsl
sbb
inc
cmp
addr16
pop
dec
pop
jnp
imul
xlat
mov
sbb
jmp
sbb
inc
cmp
addr16
pop
dec
pop
jnp
imul
jg
xlat
xchg
stos
out
shlb
inc
push
outsl
sbb
sbb
xchg
rol
in
in
xchg
and
dec
inc
iret
xor
mov
mov
add
adc
cwtl
movsb
xchg
dec
clc
test
xchg
addr16
push
cmp
push
loop
imul
push
cmp
pop
or
lcall
fwait
sub
cmp
xchg
mov
sahf
dec
jmp
sbb
les
sub
push
pop
pop
mov
push
stos
inc
or
mov
std
mov
dec
fisubrs
in
jmp
fcomi
aam
add
dec
adc
and
movsb
jae
fstl
mov
ljmp
adc
mov
inc
imul
mov
and
addb
mov
or
ja
addr16
pop
dec
pop
jnp
imul
xlat
mov
mov
xchg
lret
xchg
mov
into
pop
cmp
push
push
inc
push
pop
jnp
pop
pop
jns
ja
mov
mov
lahf
shll
cwtl
mov
out
push
outsb
inc
pop
ja
adc
add
daa
scas
fidivl
movsl
in
xchg
rcrb
adc
pop
inc
add
pop
dec
pop
jnp
imul
xlat
mov
mov
xchg
lret
xchg
mov
cmpsl
sbb
inc
cmp
addr16
pop
dec
pop
jnp
imul
xlat
mov
mov
xchg
lret
xchg
mov
cmpsl
sbb
push
cmpsb
lds
movsl
fisttpl
nop
dec
pushf
loope
xor
xchg
and
mov
fstl
add
jecxz
mov
jb
pushf
fdivs
cwtl
cld
jns
cmp
cmp
std
ja
or
packuswb
inc
add
or
fwait
push
arpl
inc
mov
rcrb
lea
sub
stc
push
out
popa
push
jno
sbb
mov
push
mov
xlat
mov
mov
xor
shll
sbb
enter
dec
xchg
jno
into
or
pop
and
js
cmc
ret
out
cld
push
adc
cld
aam
jg
popa
mov
lahf
and
addl
sarb
sarb
fwait
dec
in
cmp
leave
notw
rorb
pop
fcoml
stmxcsr
enter
in
cmp
lcall
out
inc
xchg
scas
xor
faddl
ja
jle
lahf
dec
lret
adc
shrl
inc
jo
mov
and
je
add
aas
insb
xchg
mov
rcr
rcll
adc
aad
adc
lcall
lods
pop
sbb
jne
xor
jge
xchg
and
sub
push
ds
pop
mov
mov
xchg
shlb
mov
cmc
sbb
and
dec
sub
pop
cwtl
xchg
stos
adc
inc
push
or
dec
adc
das
add
loope
xlat
jns
cld
xchg
or
push
out
or
iret
fsubrp
fdivrp
xor
or
mov
loopne
pop
inc
movsl
jb
cld
in
enter
push
shlb
fwait
test
lret
jno
nop
xchg
in
xor
inc
outsb
mov
cvttps2pi
lods
or
xor
inc
hlt
cmp
and
mov
inc
add
addb
add
lret
mov
clc
push
outsb
movsl
mov
jns
add
mov
sbb
adc
jns
sub
mov
in
rclb
inc
in
cltd
sbb
dec
cmp
js
mov
sbb
mov
mov
scas
mov
movsl
cs
ret
imul
addr16
in
mov
test
fsub
out
pop
inc
jg
push
out
push
or
and
xchg
lahf
fistpll
and
cmp
mov
data16
les
sub
adc
fimuls
divl
subb
jge
imul
shlb
loop
push
mov
icebp
jge
mov
cmp
sub
push
icebp
outsl
push
mov
sub
ret
push
stc
out
push
stc
shrb
aaa
test
insl
test
sub
cmp
mov
rcrb
fsubrl
cmp
sub
inc
xchg
adc
mov
out
mov
shrb
mov
dec
adc
ds
jo
lahf
in
jp
and
fsubrs
mov
xorl
out
pop
adc
into
sbb
and
cmp
addr16
add
dec
xor
dec
fsubl
jg
test
inc
jnp
push
pusha
scas
xchg
push
in
jp
sbb
push
psadbw
xor
pop
movsb
out
mov
xchg
pop
or
loopne
push
enterw
cmp
mov
insb
mov
stc
out
pusha
jge
lahf
add
cmp
test
xchg
loop
push
shr
and
fsubrs
mov
cli
push
es
fisubl
xor
adc
sbb
addb
mov
xor
dec
icebp
testb
pop
xorl
cltd
insl
ret
inc
xor
movb
jbe
daa
xchg
sbb
inc
sub
and
push
pop
sbb
fnsave
ljmp
add
and
and
xlat
lcall
shl
mov
iret
cltd
je
sarb
loope
dec
sub
fiadds
xchg
and
mov
and
imul
pushl
loop
repz
rcrl
mov
fidivrs
popa
mov
xchg
push
jge
cmp
aad
xchg
xor
cmc
outsb
or
rcrl
insl
jecxz
inc
lret
dec
test
iret
outsl
or
and
leave
jmp
sbb
jb
xchg
ret
sub
jbe
mov
dec
adc
rcl
cltd
rorb
xor
xor
xchg
test
mov
cmp
rorb
mov
xor
daa
repnz
sbb
or
jl
sbb
dec
cld
mov
sarb
cmp
daa
and
test
push
ret
mov
sbb
pop
lock
sarb
adc
or
dec
das
sets
shll
mov
lock
fwait
data16
dec
data16
clc
push
stos
sub
adc
cmc
mov
dec
mov
add
cltd
ds
rorb
add
fsts
cmp
je
movsb
pop
out
lock
pop
jns
rolb
push
pop
lret
pop
fadd
or
aaa
sub
and
xor
cmp
pop
jp
mov
ja
adc
cmpsb
andl
lds
and
stc
sbb
mov
orl
fmul
jmp
insb
imul
or
push
push
dec
sarl
lods
ror
cmp
inc
adc
hlt
addr16
pop
leave
push
cmp
or
popf
rcll
dec
test
or
xchg
imul
mov
movsl
or
add
scas
addr16
sbbl
pushf
mov
arpl
in
sbb
push
mov
mov
push
inc
jmp
sub
shl
cmp
pop
mov
push
sub
rcrb
dec
push
cmpsb
enter
jne
inc
imul
shrb
gs
xchg
bound
movhps
mov
int3
push
jmp
nop
cmpsb
sub
inc
jl
jns
orl
sub
xchg
mov
push
xchg
das
lea
adc
mov
shll
push
clc
lret
add
dec
sub
jae
dec
push
rcrl
xchg
xor
jmp
andb
pop
adc
mov
popa
push
sbb
sbb
stos
jl
test
or
test
add
stos
popa
push
cli
out
push
jae
mov
sahf
mov
daa
pop
gs
addr16
dec
jmp
mov
add
pop
push
and
mov
movsb
pop
mov
lods
xor
rcll
dec
ja
divl
mov
in
stc
xchg
mov
or
rcrb
cmp
pop
jg
lret
lret
jnp
aaa
in
mov
andb
sbb
fbstp
cli
sbb
and
pop
cmpsl
or
mov
rcll
push
imul
movsb
in
jg
dec
in
loop
aam
lea
push
mov
pop
sbb
mov
sahf
in
fld
mov
mov
out
out
mov
sub
pusha
shl
imul
dec
inc
iret
dec
xor
fcoms
push
in
mov
adc
mov
scas
inc
call
aaa
fcomip
mov
mov
or
lahf
mov
fs
jle
jge
mov
sbbb
jne
sbb
jmp
jg
push
iret
and
sti
jl
cld
icebp
mov
shlb
fcomip
add
jb
cmpb
push
mov
dec
and
ds
jmp
pop
insb
out
out
xor
daa
pusha
out
mov
xchg
cmp
push
mov
insl
loop
ja
jg
int
lahf
inc
int3
add
push
push
int
ljmp
daa
aaa
sbb
xor
into
lods
jb
and
rcrl
gs
lret
fs
adc
xchg
dec
stc
cld
push
mov
push
pushf
stos
sub
sub
pop
add
in
int3
repnz
adc
xchg
mov
mov
inc
pop
decl
adc
cmp
in
fdivs
jbe,pn
xor
inc
cmp
ja
xchg
add
xchg
aaa
enter
cmp
or
imull
movsb
lds
jb
cmp
and
outsl
push
sbb
push
dec
mov
aas
push
in
xor
test
dec
lret
imul
pop
test
push
jecxz
jb
push
loopne
stos
cmp
xchg
fucomp
xchg
add
jp
add
cmpsl
or
fdivrp
lds
cmp
test
cltd
in
xor
fisubs
cmp
int
pop
subl
add
cltd
xchg
movsb
push
lcall
sub
sbb
loopne
cmpsl
daa
dec
dec
nop
sbb
dec
cld
xor
arpl
in
adc
inc
enter
outsb
mov
into
fimull
xor
scas
push
cwtl
jecxz
pop
jae
jecxz
jl
daa
xchg
inc
aaa
shr
sub
cmpsb
movsl
mov
xchg
mov
sub
pop
lock
lret
sahf
outsb
or
add
mov
aad
rcrb
and
sbb
inc
pop
out
jg
call
push
and
nop
adc
push
pusha
lahf
ret
lcall
mov
push
push
push
jb
jge
lods
inc
mov
and
fbld
in
mov
les
lock
mov
ds
int
ss
dec
ljmp
add
cmp
dec
repnz
jne
loope
xor
push
sbb
xchg
movsl
insl
sahf
js
insl
push
ja
and
cmp
nop
ljmp
jae
pop
xor
pushf
and
mov
sgdtl
loopne
jg
pop
push
xchg
xabort
pushf
push
xor
push
jmp
mov
aaa
daa
and
fcomi
arpl
sbb
and
and
mov
and
xchg
or
inc
mov
pop
sub
lcall
fwait
es
lcall
out
xchg
jno
stc
fldl
scas
in
jae
lods
jno
loop
cli
xor
mov
dec
cmp
xor
loop
in
mov
sbb
sbb
xor
fnstsw
cli
icebp
lods
aad
pop
jmp
out
mov
testl
push
add
add
je
jns
xchg
lcall
inc
fsubr
mov
lds
and
mov
es
fimull
icebp
pusha
pusha
orl
std
push
fwait
into
fwait
shll
into
iret
pop
sub
sbb
or
gs
add
sub
lds
pop
jecxz
and
mov
fs
xchg
les
fcomps
or
inc
dec
push
sbb
or
push
aam
lea
scas
fildl
mov
push
xchg
push
int
div
and
or
lods
icebp
inc
popa
xlat
lock
lea
addr16
rol
gs
mov
inc
mov
mov
sbb
aam
mov
cmp
loop
xor
hlt
cmp
push
ret
cwtl
pusha
lret
out
sub
sarb
js
add
push
dec
cmp
insl
xorl
std
mov
fisttps
push
dec
je
dec
xor
pop
jmp
mov
pop
roll
dec
xor
xchg
pop
pop
push
or
adc
jecxz
pop
pop
jle
inc
cmp
dec
sahf
pop
sbb
mov
inc
pop
fcoml
into
or
mov
adc
in
in
je
shl
out
dec
cltd
sub
xchg
ss
test
movsb
xor
adc
sub
addr16
nop
repnz
sub
cmp
into
lret
fildll
cmp
dec
sbb
sbb
out
adc
sub
jl
pop
mull
bound
jae
enter
clc
push
out
dec
jne
out
lock
or
das
lods
std
lods
ret
inc
arpl
or
cmp
rorl
cmpsb
iret
mov
rcrl
orb
push
shll
push
ljmp
add
push
repz
js
sbb
into
or
arpl
mov
push
sub
and
ljmp
loopne
xor
scas
sub
sbb
std
push
mov
sbb
jp
das
mov
jns
sub
sbb
mov
mov
shl
mov
shrl
cltd
mov
push
in
cmpsl
adc
and
jae
sti
into
mov
mov
sbb
push
fdivs
inc
lcall
mov
xlat
ljmp
dec
test
pop
repz
sbb
fildl
sti
into
cmpb
mov
sub
sub
aad
xor
nop
stos
iret
sub
movb
lret
mov
cmpsb
inc
fwait
shrb
and
je
sbb
mov
enter
pop
inc
leave
or
or
fstpl
mov
pop
or
adc
insl
test
xchg
aad
pushf
mov
xlat
inc
lret
cmpsl
xor
enter
inc
mov
fldenv
add
frstor
push
dec
sti
pushf
inc
inc
das
ja
sub
mov
mov
lods
jno
in
imul
and
xchg
push
cmp
sbb
adc
push
jno
lret
repz
xchg
repnz
pop
lods
sti
push
and
jne
dec
outsb
sahf
ret
push
pop
cmp
lds
jno
into
pop
lret
xchg
cmpb
pop
aad
push
fsubrs
mov
adc
cwtl
pop
adc
fcoms
mov
movb
ja
xor
out
jbe
pop
outsb
sub
ds
fcoml
ds
movsb
and
and
daa
jbe
outsl
daa
sub
rcrb
pmulhuw
cmp
sbb
icebp
addr16
pop
push
adc
loope
sub
inc
add
jne
sub
fimuls
das
mov
addl
and
dec
scas
mov
stos
sti
jmp
or
cmp
bound
pop
sbb
pop
aaa
scas
push
sbb
xchg
mov
pop
xchg
daa
sub
movsb
loope
push
enter
mov
mov
mov
push
pop
jbe
ljmp
mov
add
out
xlat
cmpb
push
xchg
fwait
dec
ret
ja
cmp
mov
mov
mov
ss
fwait
leave
cwtl
and
dec
mov
in
jo
ljmp
mov
imul
push
and
divb
inc
jmp
das
les
popa
std
aaa
int3
inc
or
jg
stos
imul
push
stos
pop
add
ds
push
inc
cmp
jp
icebp
inc
cmp
mov
jmp
lods
cmp
mov
pushf
dec
sahf
clc
sbb
lcall
lahf
xchg
popf
jns
std
or
adc
lds
int3
hlt
imul
subl
add
cmp
js,pn
imul
jg
jle
inc
push
pusha
fwait
loop
int
xchg
repz
pop
popf
out
mov
sub
jp
iret
mov
cmpsb
pushf
popa
fwait
repnz
lcall
cltd
or
sbb
pop
jno
or
loop
andl
jae
inc
jp
jmp
shll
mov
dec
jle
out
loope
sahf
sub
dec
ja
xchg
cmp
push
clc
stc
mov
ja
fidivl
sahf
dec
es
xchg
push
dec
nop
lods
pusha
inc
cli
popf
addr16
mov
ja
adc
xor
cmpl
mov
pop
jl
xlat
gs
insl
mov
sub
into
into
pop
add
inc
or
in
dec
stos
jp
mov
mov
mov
adc
shl
dec
xchg
das
cmpl
cmc
jne
insb
imul
mov
jp
xchg
fnsave
lock
fcoms
cwtl
ficompl
pop
add
pop
outsl
xchg
add
pop
jle
rcrl
jecxz
repnz
mov
repz
fistps
fidivl
jl
leave
jmp
push
inc
fcoml
xchg
mov
das
xchg
lods
cs
and
fwait
movl
aam
mov
xchg
add
pop
subps
cmp
daa
sar
mov
pushf
push
call
dec
bswap
ja
jg
push
mov
push
pop
test
test
mov
cwtl
xor
jl
ror
pusha
jecxz
jg
add
push
add
or
cli
negl
addr16
sub
daa
xor
test
jp
push
sub
pop
pop
inc
jns
ret
sbb
shrb
leave
adc
and
pop
daa
popf
lods
sbb
dec
movsl
mov
out
mov
cmp
fstl
mov
xlat
push
xlat
out
test
xchg
adc
or
in
movsb
lahf
in
mov
dec
negb
cmp
adc
pop
push
mov
int
int3
sub
pop
rcl
mov
sbb
rcrb
mov
out
jmp
pop
jnp
cmp
sbb
das
jecxz
mov
and
add
ret
push
dec
test
lcall
add
xor
add
adc
add
insb
lds
mov
cltd
push
rolb
loop
dec
cmp
mov
sahf
jnp
cmp
jb
cwtl
outsl
movsl
mov
cli
add
sbb
es
aam
push
adc
mov
daa
mov
mov
ret
scas
dec
or
jecxz
fdivl
in
pop
aad
lret
xor
mov
out
pop
int
sbb
jecxz
push
push
das
andb
sti
xchg
mov
mov
test
iret
and
aad
pop
es
scas
rorb
mov
jae
inc
out
ljmp
imull
dec
test
std
aaa
push
aam
pop
xor
andb
aam
fldl
dec
inc
cmp
inc
lcall
int
mov
and
popf
lcall
cs
pushl
jbe
pop
and
push
cmp
mov
jne
mov
dec
pop
sub
jo
jmp
add
shrb
std
icebp
test
push
inc
lahf
aad
xor
sahf
dec
pop
adc
ss
hlt
sti
pop
fucomip
test
dec
cmc
or
pop
test
add
add
inc
mov
jo
sti
call
or
mov
jne
and
mov
pop
inc
arpl
or
lret
xor
mov
fisttpl
stos
sub
push
xchg
xchg
and
jb
cmp
cmp
mov
addl
jno
xchg
add
pusha
mov
dec
outsl
mov
stc
mov
stos
stc
or
jns
push
inc
out
pushf
cmp
gs
xchg
loope
pop
sub
mov
fs
pop
clc
jge
pop
leave
jle
sti
push
jne
push
jge
mov
gs
jle
cmp
out
xchg
mov
aad
in
and
movsl
les
mul
sahf
call
or
popf
add
lds
cmp
loope
push
ja
jae
mov
and
xchg
jnp
dec
sub
sarl
ficoml
in
cmp
jb
mov
xor
pop
enter
movsb
jle
nop
test
fimull
mov
aam
jno
mov
xchg
adc
and
and
loop
div
xor
jl
dec
pop
or
icebp
bound
sahf
js
or
mov
or
ja
clc
or
cld
add
pushf
fsubrp
std
or
lock
out
xlat
sbb
stos
cmpl
push
jecxz
lea
mov
test
lahf
xlat
pop
icebp
mov
ljmp
lds
out
das
jge
test
push
jns
push
lods
jle
add
fimuls
xchg
mov
add
sbb
int
inc
dec
out
jmp
mov
cmp
sub
mov
cmpsb
mov
test
fsubs
xchg
ret
cli
fnstcw
aam
push
inc
sar
lods
jp
push
mov
pop
loop
mov
cli
mov
in
mov
mov
inc
stos
and
mov
push
push
jnp
cmpsl
jmp
mov
fwait
jge
jg
cmpb
mov
test
lods
adc
lock
popa
xchg
xor
xchg
insl
xchg
pop
js
xchg
cmpps
xchg
leave
mov
int
fwait
imul
mov
pop
ds
push
cmp
push
jle
sbb
call
inc
sub
dec
in
mov
fsubl
icebp
call
shll
cmpsb
pop
mov
mov
scas
mov
mov
xchg
mov
inc
stc
or
jmp
fsub
stc
cmp
imul
push
xor
mov
inc
xchg
inc
xchg
lea
mov
jp
push
xchg
mov
xor
loopne
icebp
daa
testl
test
lds
mov
mov
sbb
das
fmuls
andl
rcr
outsb
mov
les
sub
repnz
cwtl
push
add
add
push
pop
std
stos
jge
xor
out
ds
mov
mov
testl
pop
fiaddl
aam
xor
sbb
jle
out
inc
pop
stos
movl
or
and
cmp
hlt
imul
mov
addr16
pop
dec
pop
jnp
imul
xlat
mov
mov
xchg
lret
xchg
mov
cmpsl
sbb
inc
cmp
addr16
pop
dec
pop
jnp
imul
xlat
mov
mov
xchg
lret
xchg
mov
cmpsl
sbb
mov
pop
dec
xchg
jmp
fwait
push
mov
mov
xchg
lret
xchg
mov
cmpsl
sbb
inc
cmp
addr16
pop
dec
pop
jnp
imul
xlat
mov
imull
js
dec
fwait
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cwtl
pushf
mov
inc
test
roll
scas
pop
lea
sbb
or
cmp
sub
pop
mov
push
jae
inc
test
fsubs
enter
call
repz
sub
pop
rorb
subl
jp
jae
pop
test
fdivrs
enter
call
leave
dec
mov
rcrl
cmp
cmp
add
mov
int3
lahf
ljmp
and
das
test
dec
ret
nop
jg
enter
xor
push
scas
fsubrs
add
rcl
rorl
es
out
cmpl
addr16
loop
rcrb
aaa
lea
xor
ja
jmp
jg
push
pop
mov
mov
jge
xchg
cwtl
xor
arpl
pop
call
or
and
sub
lock
dec
orb
stc
lret
pop
or
mov
add
iret
add
arpl
sbb
repz
mov
xchg
jo
addb
repz
pop
cmp
sahf
pop
loop
out
inc
ret
mov
jl
sbbl
fs
and
xor
sbb
or
sti
or
cmp
sub
pop
mov
push
jae
inc
out
push
mov
outsl
insb
jle
mov
dec
xchg
insl
mov
sbb
sbb
jae
xor
push
mov
lods
jg
lcall
scas
shrl
idiv
and
es
dec
enter
call
repz
sub
pop
mov
push
jae
inc
test
fsubs
enter
call
repz
sub
pop
mov
push
hlt
and
push
cmp
mov
fistpl
jno
jns
inc
scas
lret
stos
popa
jno
sbb
test
rorl
mov
jns
mov
fabs
lcall
jmp
push
std
add
sbb
lods
fs
cmp
scas
lcall
push
addb
and
push
mov
roll
sub
or
mov
ds
mov
xchg
es
jmp
mov
je
js
cmpsl
lods
enter
dec
pushl
test
ret
aaa
mov
scas
mov
test
dec
cmp
decl
addr16
mov
insl
xchg
dec
scas
mov
mov
mov
xchg
sbb
shlb
mov
or
gs
push
clc
mov
nop
test
xchg
insl
pop
push
fldl
or
iret
mov
ret
sub
adc
ljmp
jle
jle
std
loope
and
cmp
loop
call
cmp
stos
cmp
push
inc
inc
loopne
in
scas
add
pop
aam
sbb
xor
sbb
lods
mov
in
int
outsl
jne
and
add
inc
xor
call
mov
fs
rorb
cmpsb
bound
cmpsb
notl
inc
fld
inc
push
sbb
sub
cmp
sub
or
bound
xor
ret
jl
jp
out
mov
insb
dec
fldenv
adc
sub
cmp
or
pushf
mov
jg
mov
push
call
pop
xchg
leave
dec
cli
jns
adc
les
cmpsb
movsb
aad
add
mov
ret
outsl
push
js
test
sahf
ret
mov
das
sub
pop
push
cmpsl
aad
cmp
fisubs
xor
pop
stc
mov
das
into
int3
mov
or
movsb
and
jae
lahf
cmpl
sub
sub
addr16
jle
repz
xor
jbe
gs
xchg
cmp
test
movsl
aam
insl
inc
int3
pop
insl
aad
cli
scas
xchg
xor
dec
adcl
xor
nop
adcl
cld
test
jno
cmpsb
out
inc
mov
sub
or
push
push
cmp
jmp
cmc
rolb
jb
addl
pop
dec
cmc
cmp
jnp
cmp
fcom
cmpb
mov
xchg
repnz
cmp
inc
add
adc
sbb
shrl
flds
por
bound
pop
adc
xor
les
outsb
jb
sub
popf
or
cwtl
push
jmp
push
lock
mov
adc
inc
shll
ss
sbb
push
arpl
jmp
sub
mov
lea
and
pop
xor
mov
xor
jne
xor
imul
std
pop
idivb
fstps
xchg
aad
loop
test
fdivr
test
test
mov
in
daa
cmp
mull
pop
in
push
out
lods
inc
inc
cmc
push
repz
sbb
repnz
sub
mov
jae
ja
outsb
mov
push
orl
push
and
xchg
push
push
mov
lret
push
pop
sahf
adc
push
xor
or
push
loop
ret
push
mov
cmp
imul
jge
dec
jo
sbb
fdivrl
fs
andb
adc
rol
xor
jcxz
lods
xchg
icebp
or
ljmp
jns
xchg
movsl
rcr
pushf
xchg
rcrl
xlat
xchg
sbb
xor
addr16
cmp
xor
sbb
xchg
mov
adc
xchg
add
cmpsb
adc
and
xchg
clc
push
imul
mov
lds
cmp
sbb
push
jae
mov
cli
or
mov
xlat
in
pusha
popf
mov
iret
jp
or
scas
cmp
xchg
nop
mov
adc
loop
xchg
sar
push
lcall
fsts
jnp
add
ds
and
mov
xchg
cmp
lahf
lods
mov
daa
dec
xchg
in
stos
fadd
add
inc
imulb
mov
fwait
mov
or
sub
bound
lea
add
sbbb
adc
xchg
hlt
in
push
es
jg
insb
pop
sarl
pop
out
subl
or
das
push
pop
sub
xor
xor
pop
scas
clc
lea
xchg
mov
leave
pop
push
sbb
add
ret
push
es
add
cld
push
movb
leave
inc
push
pop
mov
inc
lods
repz
cmp
inc
pop
pop
mov
and
mov
push
xlat
fwait
stc
in
imul
lods
js
fsincos
jo,pn
pusha
sbb
sbb
cmpsb
stc
movsb
pop
pop
add
push
stos
insb
in
and
and
rcll
andb
sub
push
repz
mov
mov
test
bound
xor
negl
in
ja
cmp
lret
cmp
mov
sbb
mov
sbb
jmp
add
sub
mul
lods
mov
pop
pop
inc
or
shll
popa
xor
outsb
stos
mov
inc
sar
xorb
stos
std
nop
push
mov
enter
adc
mov
dec
cmp
add
adc
cmp
movsb
enter
inc
push
and
mov
mov
mov
imul
rorl
mov
mov
popa
repnz
shrb
popa
sbb
test
lahf
jne
movsl
outsb
push
push
lea
cmp
test
gs
in
cmp
pop
roll
jne
sbb
scas
outsl
ret
add
cli
pop
or
data16
in
dec
aad
push
lret
rorb
outsl
sub
stos
int3
sbb
push
or
cld
cli
lahf
arpl
rcl
jo
out
inc
repnz
inc
mov
icebp
xchg
mov
clc
xchg
addl
jmp
xchg
addl
mov
stos
push
orl
test
aaa
ret
jecxz
cmp
movsb
fildl
jne
dec
sbb
fadds
add
jns
dec
nop
lret
sbb
and
repnz
idivl
cli
ss
cmc
mov
shll
scas
and
cld
xchg
and
negb
cmpsl
mov
fists
and
xor
push
enter
or
push
pop
sub
fnstcw
inc
lret
aad
push
and
ret
gs
jbe
in
xchg
inc
rclb
and
or
cwtl
aaa
fdivs
cs
test
mov
mov
and
mull
ja
jo
movsb
sub
jmp
int3
mov
fwait
mov
or
std
fs
lods
popa
insl
aas
fwait
out
xchg
jnp
outsl
adc
rolb
xchg
xchg
cmc
xchg
adc
jge
shlb
jno
sti
pop
cli
xchg
and
dec
mov
or
push
dec
mov
sbb
fsubs
mov
imul
xchg
ficoms
xlat
xchg
push
mov
lahf
std
mov
push
dec
mov
pop
out
sub
mov
fstpl
sbb
mov
jae
sbb
into
ljmp
bound
lcall
sbbb
mov
push
dec
cwtl
jecxz
cmp
dec
mov
sub
sub
inc
dec
cmp
jle
out
adc
out
dec
shrl
sub
mov
into
sub
inc
std
enter
mov
xor
xlat
mov
push
les
nop
pop
test
enter
repnz
mov
enter
lds
jle
xor
into
push
pushf
fs
out
scas
ja
shll
bound
xor
mov
inc
push
cvtdq2ps
jmp
mov
fs
dec
in
cwtl
pop
pop
push
mov
lret
call
aas
std
in
out
movb
jp
enter
popl
sbb
int3
jns
insb
push
or
sub
mov
movsb
cmp
sbb
jle
xor
xor
rcll
jns
jge
aad
xchg
in
mov
inc
jl
inc
in
in
mov
repnz
add
and
cmp
mov
ret
jmp
sarl
lret
pop
out
movsl
push
xor
outsb
in
xchg
jl
mov
push
mov
cld
int
imul
mov
pop
jp
scas
gs
inc
dec
or
mov
enter
jne
mov
out
pushl
pop
jg
mov
in
push
into
sbb
cs
adc
adc
cmc
cmp
mov
pop
dec
mov
xor
mov
pop
jg
jmp
jns
and
sbb
repnz
adcl
and
or
mov
ficompl
stos
imul
shll
sub
push
bnd
cmp
dec
movsl
scas
mov
shll
lds
jp
pop
push
push
test
cmp
popa
mov
dec
in
inc
jae
and
insb
ss
sbb
mov
jge
or
sub
push
lcall
or
inc
xchg
adc
mov
daa
adc
push
test
inc
add
insb
sbb
idivb
cmp
out
popf
inc
mov
cld
fcomp
dec
inc
cwtl
repnz
or
ja
dec
arpl
js
push
pop
cmp
call
mov
je
out
lods
sbb
out
fsubrl
pop
data16
ret
jmp
arpl
xchg
cwtl
or
mov
sbbl
jae
test
lret
or
hlt
test
xlat
xor
lods
leave
inc
adc
mov
jnp
or
inc
jnp
pop
mov
mov
addr16
xchg
pop
and
dec
flds
mov
jecxz
and
imul
add
dec
sbb
movups
mov
fsub
popw
lahf
adc
mov
add
adc
pop
jae
aam
xlat
incl
jnp
xor
test
aad
bound
pop
adc
imul
cmp
cs
leave
xchg
repnz
xchg
dec
test
loope
and
fsubp
loope
pop
cmp
cld
es
lea
lcall
push
jo
or
push
jno
sbb
jle
pusha
sub
sbb
bound
push
scas
dec
mov
dec
jle
cmp
push
cmp
sbb
ficoms
gs
jne
mov
xlat
fwait
gs
cmpsl
out
jg
jo
daa
les
fs
mov
hlt
mov
jmp
out
xchg
lods
push
cmp
in
rcrb
mov
mov
les
sub
insl
jno
xor
inc
pop
push
push
adc
sub
insb
addb
ja
pop
dec
lahf
mov
pop
fldl
xchg
lret
dec
mov
sbb
clc
cwtl
arpl
adc
jl
cmp
into
insl
dec
pusha
lret
adc
jno
or
add
mov
addr16
fucomp
cld
loopne
lea
xor
and
xchg
js
iret
mov
lods
adc
shrl
sub
fwait
dec
int3
stos
mov
nop
iret
sub
pop
push
mov
filds
bound
call
faddl
mov
in
xor
xchg
jge
mov
mul
sahf
sbb
outsl
and
outsl
imul
jne
cs
jl
clc
call
mov
xor
xchg
push
jnp
sub
imul
out
fcoms
out
xchg
test
fisttps
push
int3
jge
shll
dec
or
frstor
adc
push
frstor
dec
dec
adc
xchg
data16
and
inc
sbb
popf
inc
lods
cmpsb
mov
cmpsl
jnp
mov
add
mov
out
cmp
addl
push
lods
ret
add
les
movsl
test
mov
sarl
pop
xor
mov
in
test
ret
jg
cwtl
lahf
jae
sub
rcll
outsl
into
es
pop
sbb
repz
cwtl
movl
in
insl
mov
mov
mov
xor
fildl
imul
xchg
or
xchg
and
sbb
shr
xchg
nop
lods
jmp
aad
adc
int3
cmp
call
xor
stos
lcall
mov
sti
cli
daa
cmp
fsubl
inc
daa
enter
dec
sbbl
lea
out
iret
hlt
leave
imul
push
cmp
mov
daa
fisubrs
sbb
shlb
jne
stos
push
mov
xor
adc
fdivrs
cld
hlt
or
dec
dec
push
add
or
add
out
push
std
mov
mov
mov
cmp
shrl
inc
and
dec
rorl
jo
mov
mov
mov
jmp
pop
insl
lock
push
dec
dec
cwtl
nop
sarl
mov
cmpsl
and
loopne
pop
add
jg
lret
cs
or
mov
mov
or
lret
es
dec
jne
jg
jno
pop
xchg
stc
mov
inc
loopne
dec
pusha
insl
pop
add
lret
fists
arpl
inc
pushf
jne
ficoms
shld
and
loop
add
add
clc
push
push
mov
push
fiadds
sub
jl
sub
jnp
adcl
lock
xor
pop
loope
dec
add
sti
sbb
and
jo
jne
adc
mov
push
lods
andb
sti
in
jmp
mov
cmp
out
jnp
sbb
cltd
daa
sub
dec
mov
xchg
aam
cmp
data16
sbb
fidivrs
stc
dec
push
je
shll
mov
in
cld
lods
scas
dec
mov
push
les
test
aad
popf
gs
jl
jl
sbb
dec
mov
add
cmp
popf
push
cmc
rcll
int
push
pop
pop
lods
out
adc
imul
jbe
xchg
dec
out
xchg
mov
add
into
xor
add
lcall
push
cltd
std
xlat
sub
daa
fdivs
xchg
je
pusha
or
movsb
sbb
insl
jmp
mov
test
mov
fwait
pop
mov
cltd
aam
lret
das
sbb
add
add
push
es
out
test
scas
sub
add
sbb
outsl
enter
ds
movsb
pop
test
push
repnz
jnp
xlat
push
and
jno
push
adc
test
sub
sahf
jbe
xchg
pop
mov
push
loope
or
jmp
fimull
cmp
mov
jmp
ret
and
movsb
ret
clc
mov
push
hlt
adc
and
or
sub
mov
pusha
dec
pop
add
jns
adc
das
add
pop
xchg
xchg
push
mov
and
xor
mov
inc
lahf
xchg
test
aaa
xchg
mov
es
xor
add
stc
fstpl
cltd
into
subb
and
add
sbb
sub
mov
jle
mov
push
mov
inc
jbe
xchg
test
mov
aaa
or
scas
jb
xchg
cs
aas
movsl
pop
stos
pop
sahf
cmp
xchg
add
movsl
cld
adc
xchg
lret
out
xchg
inc
xchg
mov
cmovb
jae
jmp
lcall
loope
or
test
push
pop
cmpsl
mov
mov
add
lods
out
call
and
add
rorb
cmp
and
movsl
inc
call
and
inc
mov
out
jecxz
mov
mov
adc
add
dec
loop
mov
inc
lods
nop
sbb
adc
and
pop
outsl
cwtl
dec
push
andb
push
testb
jg
and
sub
fnstenv
cltd
or
lds
sbb
mov
mov
pop
test
push
cmp
mov
pop
insl
xorl
ret
std
hlt
dec
idivl
cmc
inc
mov
cmpsl
mov
adc
shlb
mov
out
movsb
mov
fsubrl
push
xor
xor
and
rcll
test
iret
add
add
mov
idiv
jb
cmc
pop
into
jecxz
dec
lcall
sbb
testl
lds
pop
mov
subl
data16
popf
hlt
leave
subl
cmp
dec
xchg
test
xor
sub
popf
dec
mov
les
les
pushf
dec
pop
sbb
out
hlt
cltd
popf
in
lods
fisubl
fisubs
mov
xchg
lahf
push
pop
push
mov
dec
dec
push
aas
jge
cmp
jecxz
inc
inc
out
jle
dec
inc
add
in
sbb
lock
in
mov
aam
jb
js
inc
mov
int3
decb
sbb
dec
adc
push
rcrl
cmp
int3
push
xchg
cli
pusha
pop
in
xchg
in
and
push
iret
popa
sub
sub
nop
repz
bound
insl
imul
shr
push
int3
outsb
sbb
pop
cmpsb
hlt
rol
mov
mov
or
fs
clc
inc
sti
inc
aad
test
push
add
adc
lcall
nop
enter
mov
movsl
xchg
jne
sbb
test
mov
sbb
inc
push
call
fs
add
jp
jecxz
add
xor
negl
push
xor
xchg
adc
inc
js
mov
and
lret
add
sub
rolb
sti
or
inc
pop
and
out
cmpsl
movsb
pop
fwait
loop
mov
test
inc
push
js
cmp
mov
mov
daa
xchg
push
cmp
inc
dec
push
call
dec
xchg
mov
stos
add
aad
inc
xchg
xchg
aad
lock
mov
adc
pop
shll
stc
jb
mov
mov
aad
rorl
gs
add
out
jp
cltd
loope
or
iret
enter
xor
xor
stos
mov
mov
xchg
jo
xor
sbb
jno
add
xchg
jnp,pn
and
arpl
pop
lret
cmp
mov
inc
out
jecxz
jecxz
ds
or
xchg
sub
lret
pop
cmc
cwtl
jg
dec
push
xor
push
mov
jb
and
pop
dec
lock
jle
push
stc
dec
adcb
out
loop
sub
adc
xlat
lahf
add
fwait
iret
inc
dec
add
sub
or
scas
lods
imul
and
lds
fcmovne
inc
inc
cmpl
pop
fidivl
mov
mov
jb
jmp
aad
pop
pop
push
and
adc
ss
mov
xor
add
mov
lods
lods
out
daa
mul
sbb
scas
add
subb
xor
xor
jp
sub
xorb
jae
jne
lret
in
adc
push
push
or
fldenv
push
mov
and
aaa
fwait
mov
mov
leave
cli
iret
scas
call
sub
fcomp
loop
or
jns
xchg
enter
daa
pextrw
add
fldcw
sbb
mov
push
stos
pop
inc
jns
fistpl
fdivrl
sub
and
jge
fwait
add
es
cmp
pop
or
inc
out
cmp
adc
in
jmp
adc
cmpsb
push
jno
in
in
xor
out
mov
out
jle
call
in
je
mov
push
lcall
cwtl
or
add
dec
int
xchg
sbb
das
pop
stc
pushf
inc
imul
mov
mov
lds
adc
sub
pop
mov
vrsqrtps
xlat
cmp
fsub
mov
jg
xor
cld
sbb
adc
xor
xchg
cmp
je
ret
shll
cmc
das
pop
xlat
pop
in
mov
bound
cltd
add
and
call
xor
into
call
scas
stc
pop
inc
mov
adc
lahf
repz
in
dec
sub
cltd
int3
gs
jmp
int3
sbb
lods
and
loop
pop
in
aad
mov
popf
imul
cmc
xor
mov
iret
push
dec
lret
mov
bound
out
mov
mov
push
xor
out
test
sbb
sub
outsl
add
fistl
jp
aad
pop
popf
xor
jae
je
sbb
sbb
imul
inc
mov
sub
lret
sbbl
orl
pop
jnp
dec
lea
xchg
adc
loopne
pop
imul
aas
je
stc
repnz
inc
lret
loopne
jo
adc
fwait
jae
jns
loope
mov
repz
or
mov
xor
push
xchg
frstor
cmp
dec
add
sbb
inc
adc
insl
or
add
fdivrs
add
sub
jb
jmp
out
mov
subl
xchg
jecxz
mov
aam
fisubs
js
scas
sbb
xchg
xor
add
adc
jecxz
repz
sub
pop
mov
push
jae
inc
test
fsubs
enter
call
repz
sub
pop
mov
push
jae
inc
test
fsubs
leave
xor
add
adc
jecxz
repz
sub
pop
mov
push
jae
inc
test
fsubs
enter
push
pop
xchg
ret
sub
jl
insb
inc
rorb
cmp
sub
inc
xchg
aas
mov
fldlg2
mov
jb
fcoml
mov
cld
and
and
rorb
or
sub
pop
xchg
dec
cmpb
xchg
push
mov
jae
fdivl
add
xor
and
repnz
inc
xchg
push
andb
pushf
push
xchg
pop
fmuls
push
sbbl
sahf
or
jo
inc
xchg
insl
dec
mov
cmpsl
shll
jne
inc
sub
int
out
rolb
outsl
fwait
xorb
push
inc
jae
inc
lea
pop
adc
or
jne
out
and
outsb
imul
je
popf
and
mov
push
mov
sbb
fsub
cmpsl
mov
xchg
pop
adcb
mov
pop
add
and
adc
cmp
or
mov
jecxz
mov
test
inc
int
jno
adc
cld
mov
jae
mov
or
jae
inc
pop
lods
popf
sbb
fcoml
xor
fstp
rorb
cmp
cmp
dec
xchg
push
cmpb
test
inc
movsb
jb
les
aam
cld
xor
outsl
shrb
pop
mov
mov
jle
add
call
and
adc
inc
mov
mov
subl
in
mov
adc
mov
jbe
xchg
ds
pop
xchg
sub
and
dec
cmpb
pushf
push
mov
jb
fcoml
int3
add
xor
and
or
cmp
sub
pop
xchg
dec
cmpb
pushf
push
mov
jb
fcoml
int3
add
xor
and
iret
ljmp
pusha
add
in
inc
mov
lcall
fwait
mov
jno
imul
cmpsb
insb
mov
push
mov
mov
xor
movsl
cld
pop
dec
push
adc
xchg
das
mov
ret
mov
movsb
xchg
add
rcr
and
mov
push
mov
pop
and
sub
and
je
mov
movsb
xor
mov
sbb
pop
lods
xorb
jge
pop
or
adc
sti
testl
sbb
adc
xor
aad
jne
scas
das
call
dec
or
ret
ljmp
fcmovnbe
xor
in
push
cmp
push
mov
sbb
jp
mov
xor
or
cwtl
sub
into
test
jbe
jg
cmp
push
pushf
push
adc
or
mov
repnz
test
inc
das
mov
mov
lock
dec
aas
and
dec
dec
dec
jmp
aad
jae
jnp
sti
repz
cmp
iret
inc
mov
ret
imul
jne
or
dec
lods
or
pop
mov
xchg
pop
negl
stos
sub
adc
sbb
cmpsb
out
pop
aaa
fucomip
dec
or
leave
add
xor
in
xor
out
das
cmpl
in
add
jno
mov
push
xorb
cmpsl
add
inc
lds
add
push
std
sbb
jecxz
repz
repz
jo
ret
aad
cmp
ds
sub
sub
mov
out
or
xchg
cmp
sbb
sbb
lock
js
js
mov
inc
dec
fs
sbb
add
push
popa
movsl
pop
fcmovb
xchg
sub
adc
mov
push
mov
jnp
out
mov
mov
hlt
jg
repz
adc
lods
jp
sarl
sub
jae
cmpsl
ja
inc
pop
cmp
dec
sub
sub
aas
rorl
ss
cltd
fucomi
jg
movsb
pusha
xor
or
push
sti
mov
xchg
out
xchg
inc
subl
cmp
lret
push
mov
aas
imul
jns
dec
sbb
imul
call
adc
vpunpcklbw
popf
loop
lock
imul
clc
xchg
mov
movsb
cmc
xchg
subb
dec
sarl
inc
mov
and
mov
push
push
and
insb
add
mov
push
push
jp
jl
pop
clc
push
sbb
mov
jnp
sbb
sbb
jne
aas
subb
jecxz
mov
gs
int
and
loopne
add
int
cld
scas
iret
mov
sbb
sahf
rclb
addl
jle
dec
xchg
sahf
aad
imul
and
mov
data16
jle
jb
icebp
lea
inc
and
adc
call
int3
xor
mov
fcomps
xchg
sahf
call
ds
imul
sbb
jo
xor
mov
fdivrp
cmpsl
cmpsb
jle
and
sub
lcall
mov
push
push
jge
mov
ret
std
mov
mov
js
mov
test
leave
sbb
mov
divb
jbe
pop
in
aaa
cmpb
pop
push
call
pop
push
in
add
push
sub
mov
lea
jle
mov
add
nop
aaa
roll
pop
jmp
mov
adc
pushl
push
cmpl
out
loope
pop
imul
pop
cmpsl
add
mov
jp
testb
adc
xor
jb
not
iret
xor
call
mov
and
sub
ss
or
jno
fadd
mov
mov
ret
inc
movsl
enter
dec
std
mov
pop
daa
sub
and
call
xchg
jecxz
or
dec
cmpsb
or
mov
and
mov
aaa
aas
iret
out
fsubrs
push
sbb
add
xorb
sbb
roll
cmp
loope
clc
loope
pusha
sub
jle
repz
lcall
lds
fdivs
fmull
push
je
fdivrp
dec
lods
pop
cwtl
bound
outsl
jne
out
lahf
mov
in
pop
and
jmp
jg
jbe
mov
dec
ret
leave
add
cmp
ret
add
testl
cmp
fnsave
or
pusha
cltd
fs
jmp
inc
data16
je
scas
iret
mov
pusha
inc
and
fptan
std
inc
stc
imul
movl
jae
mov
jmp
clc
aaa
ds
sbb
add
xorb
mov
mov
pop
mov
jg
shlb
jbe
mov
cmp
sbb
gs
and
adc
xchg
push
addl
dec
jb
lret
adcb
test
or
sbb
movsb
add
sbb
in
cmc
jb
loopne
lret
outsb
pusha
jnp
popf
clc
jbe
dec
mov
repz
int3
out
les
mov
dec
xor
xchg
jns
pusha
ja
mov
cmp
add
jb
divb
scas
push
xorb
cmp
popa
clc
mull
adc
cmp
dec
sub
or
pop
jmp
addr16
sub
adc
add
movsl
sbb
jno
je
sbb
cmp
lock
sub
or
inc
push
push
cmp
lock
arpl
dec
pop
mov
xchg
inc
stc
jo
sahf
pop
lods
jle
mov
pop
cmpsb
cmpsl
mov
pop
call
push
xchg
data16
inc
mov
std
and
push
movsl
xlat
call
xchg
mov
jl
mov
jecxz
pop
pop
jno
xchg
pop
dec
cmpsl
idivb
push
jge
mov
ret
cmp
mov
jp
icebp
pop
loopne
aad
jno
or
or
jns
jp
outsb
mov
mov
shl
jge
std
pushf
pop
js
stos
mov
cmp
cmp
mov
adc
in
jle
outsl
mov
jbe
std
push
sarb
sbb
sbb
add
jns
jmp
bnd
sar
dec
push
fdivrl
movsl
jb
adcb
xor
inc
xor
mov
popa
mov
sarb
icebp
mov
int3
les
xchg
ficoml
insb
push
mov
les
movsb
jno
cmp
mov
push
ret
mov
sub
mov
jo
cli
cmp
push
loopne
push
xchg
repz
in
loope
xchg
add
mov
vmovupd
xorl
dec
xchg
sub
and
mov
test
and
inc
push
adcb
je
fwait
sub
xchg
orb
mov
xchg
xchg
ficoml
aad
jnp
adc
shrb
icebp
movsl
xor
xchg
xchg
mov
cmp
scas
std
pop
or
arpl
lock
mov
xchg
icebp
popa
into
dec
arpl
xor
frstor
enter
dec
mov
hlt
movswl
sbb
out
scas
jl
lret
icebp
lahf
sbb
jg
mov
loop
mov
pop
mov
addl
mov
and
mov
pop
sbb
inc
fwait
and
xchg
mov
push
lcall
in
mov
leave
fs
shl
jmp
jae
lret
dec
in
fwait
imul
jle
nop
dec
aad
or
pop
sub
dec
jb
in
xor
push
push
mov
lea
cmp
ljmp
jle
shr
inc
push
cwtl
mov
les
mov
int
movsl
pusha
lahf
call
or
repnz
ljmp
xchg
loop
jno
loop
mov
push
xchg
pop
and
mov
push
dec
add
sbb
cmp
or
aad
xlat
aam
inc
call
and
mov
sbb
stos
xchg
push
int3
lret
mov
addl
inc
bound
inc
pop
sub
aas
je
push
mov
cs
pop
imul
ds
jb
dec
lea
scas
dec
clc
inc
insl
ret
mov
cmc
xchg
xchg
push
adc
cmpsb
or
insl
inc
popa
rcr
mov
adc
mov
imul
xchg
or
mov
inc
mov
out
xorl
sbb
mov
outsl
inc
jne
cmpsb
inc
lods
jns
push
out
mov
addb
xchg
aad
test
sub
in
imul
scas
xlat
cld
mov
push
cmc
sub
enter
add
sti
enter
and
push
pop
fwait
es
mov
popf
sub
das
cwtl
int3
fsub
xor
pushl
xor
aaa
insb
or
test
sbb
push
jne
xor
sbb
pcmpeqd
dec
jp
arpl
addr16
mov
test
test
movsl
test
mov
lret
test
xor
test
and
push
xor
jo
outsb
movsl
es
pop
popf
adc
mov
addl
scas
mov
fldl
mov
mov
gs
mov
imul
sub
scas
mov
repz
pop
push
xchg
push
pop
push
mov
mov
push
lods
add
mov
inc
inc
pusha
sub
sub
scas
mov
mov
mov
das
sub
iret
scas
push
mov
test
push
hlt
jno
push
mov
test
mov
push
out
pop
xor
lret
sbb
fsts
mov
mov
dec
push
mov
mov
inc
mov
adc
jge
out
dec
xchg
in
test
push
cmp
xchg
orb
mov
mov
push
in
inc
jo
out
scas
and
and
or
or
or
xor
lret
mov
enter
arpl
js
sub
xlat
mov
push
xorb
push
les
inc
xlat
imul
push
mov
arpl
or
jle
jno
add
out
std
daa
and
dec
cmp
mov
addr16
mov
jno
pusha
loopne
sarb
cltd
fwait
mov
cmp
and
ja
insb
bound
movsb
loopne
jno
popa
add
adc
aaa
dec
add
mov
jne
and
push
mov
push
and
dec
pop
push
popf
push
leave
into
ss
dec
gs
loopne
stos
out
hlt
adc
mov
popa
mov
inc
adc
mov
lcall
push
push
mov
mov
dec
hlt
jbe
scas
dec
sub
loop
fwait
test
mov
movsl
pop
sub
rcl
in
mov
sub
sahf
je
inc
rorb
jp
test
movd
call
xor
xchg
jmp
push
loopne
lret
fimull
jno
xchg
shr
repz
mov
lods
add
cmp
aas
lcall
mov
andb
mov
jmp
popa
sahf
adc
add
mov
mov
sbb
inc
movsb
mov
sub
loop
xor
pop
stos
push
push
out
push
mov
mov
or
sbb
cmc
and
xchg
or
fstpt
adc
loope
mov
add
aad
adc
int3
das
mov
lds
fnstenv
pop
add
imulb
aam
push
and
popf
aaa
leave
mov
and
jecxz
insl
jo
stos
push
inc
insl
out
xchg
outsl
pop
inc
pop
mov
jp
inc
jne
jb
push
mov
pop
jmp
sbb
test
sub
out
cmp
push
out
mov
lret
lcall
xor
sbb
jb
jns
sub
jmp
pusha
out
andb
push
call
aam
je
lahf
dec
jb
dec
fcmovu
xchg
dec
jg
sbb
out
lods
xchg
test
out
adc
icebp
inc
test
add
cmpsl
int3
into
ja
das
in
loope
xor
and
inc
daa
je
popa
mov
rcrb
cmp
stos
fistps
mulb
lods
pop
adc
jno
popa
cmp
cmp
xchg
adc
lcall
ljmp
jne
aas
out
fsub
sub
in
lret
aad
hlt
pop
dec
or
lods
push
scas
jmp
cmp
pusha
dec
dec
rcl
and
pop
mov
das
aaa
insl
cs
fdivrs
sub
inc
mov
out
cmp
cmpsl
add
add
push
jecxz
sarb
outsb
stos
repz
lcall
call
mov
sti
out
cwtl
mov
fadds
mov
shll
sahf
and
pop
testl
call
loope
mov
adc
and
sarl
cmp
jp
mov
mov
dec
outsl
loop
xchg
sbb
jo
outsb
jmp
test
inc
and
leave
rcr
adc
or
xor
cltd
dec
or
or
pop
sub
pushl
sub
lahf
gs
push
xchg
lea
sub
shll
adc
setne
add
enter
stc
stos
loop
out
ljmp
lods
nop
cmp
aam
enter
jp
insb
rorb
test
push
cs
jns
fisubl
sbb
mul
push
mov
cmpsl
jle
loop
stc
xor
xor
adcb
inc
rcll
mov
pop
sub
cltd
xchg
pop
xchg
add
lods
cmp
jno
addr16
mov
shlb
or
scas
enter
ss
push
sbb
lret
jno
xchg
mov
pop
out
and
inc
ds
push
lds
mov
inc
lahf
fcmovnb
mov
or
ret
icebp
imull
and
outsb
pop
addb
cmp
andb
jmp
mov
push
pop
inc
test
xchg
test
xor
mov
dec
cmp
fs
cmp
xrelease
xor
fcmovnb
outsl
test
mov
mov
bound
add
inc
push
mov
andb
dec
dec
adc
sub
xor
lret
lcall
xchg
or
mov
dec
inc
xchg
jmp
out
xchg
push
cmp
mov
cltd
add
xchg
cld
pop
xchg
pop
mov
ja
cmpsl
call
pop
iret
in
pop
mov
pop
add
push
adc
rcrb
xor
ljmp
or
xchg
aad
xchg
pop
inc
lahf
test
roll
jg
in
int
cmp
mov
je
dec
cmp
mov
mov
rcll
ret
and
rclb
mov
movsb
xor
push
jbe
mov
imul
enter
call
pop
aad
lds
mov
and
pop
sbb
data16
sbb
push
aad
icebp
inc
and
adc
lds
movsb
sahf
jp
outsl
sub
lret
out
add
jge
out
mov
mov
push
setg
cmp
jb
adc
popf
dec
mov
xchg
jno
sbb
sbb
pop
jg
sbb
repnz
mov
andps
in
ret
rcrb
lock
or
je
push
test
inc
jae
fcompl
cli
xchg
in
jg
das
sbb
adc
cmpsb
mov
pop
jg
stos
out
jb
pop
repz
ret
clc
inc
adc
hlt
stos
xchg
xor
leave
dec
and
inc
nop
jecxz
mov
jge
clc
adc
dec
push
jb
mov
shlb
js
jmp
xchg
lcall
pop
fstpt
mov
push
out
or
add
push
fiadds
xchg
push
dec
pop
sahf
orb
and
lock
pop
xor
jne
fwait
ds
in
movb
stc
xor
int3
pop
pop
mov
push
std
je
xor
inc
sbb
adc
mov
leave
mov
test
leave
lahf
mov
xor
mov
rcll
icebp
mov
cmpsb
ljmp
das
sbb
xor
es
inc
mov
or
nop
movsl
lret
fsubs
clc
loope
popa
out
das
lds
xor
pop
sub
loop
or
push
mov
imul
sar
adc
lcall
fisttpll
ret
xchg
sbb
je
outsb
jle
push
in
cmp
jp
pop
jl
scas
xchg
sarl
adc
jo
jnp
jg
aam
outsl
sahf
cmp
fstl
lock
and
call
xor
and
bound
jno
lds
mov
or
arpl
stos
add
mov
pop
dec
add
ret
xchg
int
int
cld
add
test
ficomps
jo
push
or
fbld
dec
ja
sbb
je
nop
mov
mov
lods
adc
xor
or
pop
adcl
sbb
mov
sub
fstl
and
addr16
xchg
sbb
mov
or
lea
jg
push
pop
pop
les
insb
cs
adc
pop
or
sbb
mov
jge
mov
adc
adc
pop
lret
out
shll
mov
push
icebp
aaa
xchg
fstps
sub
xorb
insl
aaa
xor
lods
inc
xchg
shrb
xchg
mov
enter
push
push
data16
cmp
mov
movsl
sti
insb
outsl
inc
fsubs
aam
inc
jbe
mov
sub
pop
mov
out
ret
sub
sbb
mov
and
ja
mov
xchg
insb
cli
cmp
imul
movl
lret
popf
fwait
gs
cltd
cld
dec
sbb
push
dec
int3
jb
cmp
rol
fadds
and
test
incb
sbb
clc
psraw
inc
shrl
dec
xor
aaa
lea
add
sbbb
testl
cmp
stos
and
inc
cli
je
adc
outsl
idivl
push
xor
jmp
scas
cmp
dec
fwait
leave
fnstenv
dec
jp
and
cmc
jge
mov
mov
add
mov
mov
xor
aam
test
das
pop
ljmp
dec
pop
ds
sarl
mov
ss
adc
das
das
nop
fidivs
push
ret
jns
int3
or
mov
sub
mov
jle
rol
xor
mov
push
pop
mov
adc
sti
adc
lcall
fsubs
cmp
jge
rcr
add
adc
addr16
mov
stos
jbe
dec
test
out
xchg
aas
jle
into
push
sbbb
add
lcall
loope
adc
ficoml
xor
fimuls
xchg
adc
xchg
mov
xor
pushw
pop
inc
stos
sbb
push
movsl
jg
hlt
out
mov
mov
jae
lods
imul
in
mov
and
pusha
ret
icebp
xchg
fisttpll
sbbb
sahf
shr
ror
push
jbe
cwtl
cld
sub
push
movsb
out
std
fs
incl
and
test
sub
or
cmp
add
inc
mov
mov
fmull
xor
jns
ja
or
mov
cmc
out
dec
das
lahf
nop
push
sti
jp
pop
push
mov
cld
mov
jl
add
fdivl
or
xchg
pop
cmp
imul
fiadds
rcrb
dec
push
in
les
ret
cmp
mov
icebp
cli
adc
push
inc
std
jg
lahf
outsl
or
stos
clc
aad
or
out
loop
xor
ds
sub
or
mov
jecxz
icebp
sahf
push
fdivrs
push
addr16
jg
xchg
jns
addb
push
dec
ja
loop
je
mov
aaa
or
jp
cmpsl
jle
repnz
sub
add
sbb
jae
in
in
sub
imul
int
cmp
pop
ja
jb
pop
pop
mov
push
dec
mov
jns
outsl
dec
insb
mov
xchg
je
repnz
cmp
shlb
mov
fs
scas
and
pop
pop
jecxz
shl
lret
push
movb
stos
dec
data16
push
push
movsb
xlat
mov
shll
jo
loopne
in
lods
push
inc
jecxz
or
jl
xor
lea
std
add
mov
shrl
pop
test
aaa
fwait
stos
mov
xlat
inc
lds
data16
xchg
xchg
imul
dec
insl
dec
cmp
mulb
sbb
out
inc
mov
scas
out
mov
aam
cmp
xchg
fcmovbe
adc
iret
inc
adc
in
bound
jbe
cmp
in
mov
ret
insb
pushl
ret
loope
insl
out
jo
shrl
scas
jo
push
push
cmpsl
sbb
cmp
mov
dec
cmp
loope
rcrl
ficomps
cmc
push
push
mov
sub
pop
xchg
dec
cmpb
pushf
push
mov
jb
fcoml
int3
add
xor
and
or
cmp
sub
pop
xchg
dec
cmpb
pushf
push
mov
jb
fcoml
int3
add
xor
and
or
cmp
sub
pop
xchg
dec
cmpb
pushf
push
mov
jb
fcoml
enter
frstor
sub
cmp
or
sub
pop
xchg
dec
cmp
in
bound
jae
push
jb
adc
add
adc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
sbb
sahf
sbb
fdivs
or
add
or
add
add
add
push
add
add
add
add
add
add
add
add
arpl
fwait
add
add
dec
add
add
add
add
add
add
add
add
rolb
xchg
add
sti
add
add
jge
jle
pop
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
rolb
ljmp
add
add
add
pop
add
int
push
add
clc
add
add
mov
cmp
pop
add
add
add
add
add
pop
add
add
add
add
pop
add
add
dec
add
add
xchg
add
add
add
add
rolb
mov
add
add
add
add
mov
sbb
clc
add
add
add
add
imul
add
lea
cmpsl
add
movb
add
arpl
ret
add
add
inc
add
add
add
add
add
add
add
jmp
insl
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
testb
add
add
add
add
add
add
add
pop
add
add
add
add
cld
add
add
testb
add
add
add
mov
add
add
mov
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
roll
leave
add
add
push
add
add
add
push
add
repz
add
add
add
add
add
add
add
add
push
add
out
arpl
leave
add
testb
add
add
add
rolb
xchg
add
xlat
add
add
inc
add
add
add
add
add
test
rolb
fwait
add
add
cltd
add
add
adc
testb
add
jbe
mov
add
add
add
mov
loopne
xchg
add
imul
add
add
add
add
into
add
cmp
insl
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
roll
xor
dec
add
add
out
out
dec
pop
roll
mov
add
add
add
add
add
add
add
add
add
add
push
add
fs
add
add
pop
add
add
add
dec
add
add
add
xchg
add
sbb
aad
aaa
add
add
add
add
add
pop
add
jle
mov
testb
add
add
add
add
jecxz
add
add
testb
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
jns
add
inc
xchg
out
ljmp
and
push
pop
pop
and
stos
mov
mov
enter
movsl
scas
test
les
push
pusha
loope
gs
cmp
fsub
dec
push
std
xor
add
and
dec
jp
xlat
pop
test
cmp
push
dec
into
bound
sub
jmp
iret
adc
jbe
push
cli
mov
cmp
cmp
or
call
lcall
push
push
ficoms
fstpt
fmuls
jo
fadds
rorl
or
cmp
push
xchg
or
jp
sub
cwtl
and
xchg
add
pushf
xchg
test
adcb
fs
pop
out
das
aad
ss
cmp
ret
xor
pusha
mov
dec
lret
jp
std
and
fdivs
xchg
mov
or
xchg
out
dec
push
lods
loopne
jbe
outsl
xchg
imul
nop
xor
push
jno
adc
lock
push
inc
jg
push
mov
in
dec
mov
es
ja
fnstcw
scas
adc
pop
inc
push
in
cmpsb
xchg
push
dec
push
daa
inc
dec
pop
and
inc
add
psadbw
clc
lock
or
addb
jbe
out
mov
sub
dec
fwait
sub
rorb
push
push
sbb
sub
lods
jp
fcmovu
fcomi
aas
jbe
xchg
or
std
lods
mov
cmp
outsb
cmp
imul
pop
jecxz
in
xchg
gs
push
sub
imull
jle
inc
das
ja
xlat
lds
ror
cli
lret
inc
add
jl
jmp
add
or
dec
jl
sti
cmp
adc
in
ja
out
fsubrl
aad
xchg
lret
insl
decl
rolb
pushf
inc
mov
add
orb
mov
cmp
cmp
into
or
mov
sbb
inc
inc
jno
push
scas
push
rcr
and
and
jg
loopne
test
lods
xchg
push
pop
test
out
fsubl
test
andl
dec
mov
shrl
xchg
and
out
loope
clc
pop
xchg
loop
out
aaa
ljmp
in
call
outsl
xchg
cmp
lahf
shrl
test
popf
iret
lahf
push
insl
leave
imul
shr
shll
xor
ret
call
cli
push
cmpsl
push
dec
dec
lea
xlat
out
mov
shll
das
xor
rol
sbb
cmc
mov
flds
sub
scas
mov
ljmp
cld
outsb
aas
sahf
stc
faddl
xchg
ret
xchg
mov
sub
push
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
