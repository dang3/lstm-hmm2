call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jle
outsb
cli
pop
lret
xor
fstpt
imul
dec
into
pop
mov
or
cli
pop
lret
ds
cs
mov
out
push
pop
stos
dec
into
pop
mov
dec
mov
jle
outsb
cli
pop
bound
ds
xchg
fs
cmp
out
sbb
jge
push
sarb
sbb
ljmp
jle
xor
imul
xor
dec
into
inc
cmc
popa
shr
stos
nop
ret
data16
stos
inc
adc
dec
shrb
and
inc
sub
xchg
xchg
in
xchg
rol
hlt
pusha
stc
aas
andb
adc
out
jmp
movsb
xlat
push
or
cmp
lret
cmp
outsl
ljmp
ds
jno
gs
xchg
sub
call
lds
lcall
adc
jbe
test
setp
cmp
push
lea
xor
cmp
fwait
in
sub
sbb
scas
loopne
in
out
cmp
lret
scas
push
adc
mov
inc
subb
lds
ljmp
ds
cs
in
out
mov
mov
or
cli
cmp
addr16
jecxz
mov
mov
dec
fimull
jnp
scas
sbb
push
stos
sub
js
inc
mov
in
negb
das
mov
in
imul
aaa
lcall
push
mov
lcall
into
pop
mov
or
cli
pop
lret
ds
cs
push
jp
dec
into
pop
mov
or
sub
in
sbbb
stos
cltd
adc
lock
dec
pop
sub
pop
xchg
jl
xor
ret
sub
bound
sub
mov
lods
mov
out
inc
outsl
andb
jae
movsb
fcmovbe
icebp
sbb
cmc
je
mov
arpl
and
push
jge
inc
pop
adc
dec
insb
fldt
cmp
or
ljmp
jo
and
xchg
stc
cmpsb
subl
and
sbb
cmp
xchg
mov
cltd
dec
lcall
sub
addr16
lock
insl
je
insl
loopne
jne,pn
mov
dec
xchg
fdivp
enter
fldenv
gs
jp
add
sbb
sti
sub
imul
sahf
in
lret
mov
popl
and
xchg
and
push
jne
stos
mov
mov
cmp
pop
ret
fistps
in
mov
repz
insl
mov
xor
pop
cmc
dec
push
jmp
xor
cmp
cli
pushf
xchg
popf
fwait
out
cmpl
pop
xor
mov
nop
stos
cs
cs
je
icebp
xorl
test
mov
dec
push
dec
cwtl
popf
js
xchg
insl
mov
insl
stos
and
push
orl
outsl
movsl
fmull
insl
sbb
lcall
push
ret
dec
ljmp
pop
ss
sti
jbe
ja
jg
out
xchg
pushf
aam
inc
out
jb
hlt
repnz
jne
cltd
pusha
lods
jb
lods
xlat
jne
mov
in
xor
jmp
fmuls
xchg
and
out
jle
dec
jne
mov
pushf
cmp
jne
je
scas
pop
cltd
cmc
pop
mov
dec
loop
repz
les
insl
xor
test
xor
push
aam
sbb
xor
pop
movsl
lret
sbb
ret
pop
mov
in
push
add
xor
xchg
sbb
jne
jmp
jns
xchg
imul
fcoms
mov
pushf
jl,pn
test
mov
and
call
jns
jp
mov
mov
xchg
inc
aam
push
mov
sub
cwtl
push
inc
in
movsl
add
int
add
mov
addr16
inc
pop
or
push
mov
sbb
jns
mov
imull
dec
xor
cmp
leave
mov
and
sub
sub
xchg
push
xlat
fsts
jmp
out
pop
ljmp
jno
leave
pop
mov
mov
addr16
jl
mov
adc
imul
pop
inc
mov
and
mov
scas
dec
test
dec
addr16
addl
xchg
je
outsb
push
jge
fimuls
xchg
lahf
loope
and
arpl
inc
lret
and
insb
lret
inc
lock
jns
in
ss
ss
lahf
int
jae
jnp
jne
push
mov
mov
mov
xchg
addr16
jbe
xchg
push
mov
sbb
push
jge
sbb
popa
popf
out
nop
fildll
or
ret
popf
arpl
aaa
fnsave
xor
inc
subl
mov
rol
pop
imul
es
xchg
addr16
stos
jne
aas
insb
sbb
push
mov
xchg
xor
test
xor
in
cmp
out
loope
imul
out
rclb
mov
subb
adc
cmp
mov
sbb
test
xor
mov
into
sub
and
shrb
test
repnz
push
lds
add
mov
mov
inc
and
test
mov
btr
jno
xchg
mov
lods
add
jl
fsubr
rolb
test
aas
test
xor
cmpsb
fisubl
stos
rcr
pop
mov
fucomi
in
and
mov
imul
iret
jbe
mov
push
mov
inc
cmpsl
or
stos
js
cld
call
sahf
or
cmc
inc
imul
dec
sbb
in
add
shrl
addl
pop
cmp
mov
cmp
jnp
inc
sbbb
imul
pop
lcall
in
and
pop
hlt
lock
xchg
addr16
add
les
jno
add
cwtl
int3
mov
push
int
shll
rcll
or
inc
xchg
and
sarl
fiadds
daa
repnz
or
xchg
data16
enter
xchg
sub
mov
jno
and
xchg
stos
and
inc
jmp
js
pop
sarl
xchg
out
add
insl
cmp
xchg
das
mov
push
push
jae
cmp
ljmp
in
push
pop
pop
cmc
and
xchg
and
mov
push
fucomp
frstor
push
xchg
add
push
add
rolb
in
adc
add
add
and
pop
and
hlt
out
dec
leave
mov
mov
test
inc
dec
mov
sbb
rclb
mov
cmpsl
pop
testb
push
mov
insl
dec
outsl
imul
pop
pop
pop
sbb
mov
push
inc
sbb
xchg
cmpsb
pop
daa
cmp
sub
shlb
mov
mov
or
pop
push
pop
rcr
xor
mov
inc
mov
ret
mov
fdivs
jno
or
inc
jl
mov
shll
sbb
mov
cmp
adc
add
sbb
push
add
sub
repz
lds
test
pop
pop
enter
out
mov
imul
sbb
fcomi
cmp
sbb
lods
or
ds
test
add
inc
sub
in
mov
lahf
fnstcw
in
push
mov
test
mov
xlat
subb
sub
dec
mov
mov
jbe
xchg
add
mov
sub
lea
jp
cmc
inc
pop
call
out
xor
bound
addr16
fisttpl
mov
int
popf
or
das
xor
in
add
dec
ds
loope
icebp
mov
ret
repnz
outsb
movsb
aam
icebp
inc
cmp
das
bound
jmp
push
enter
pop
mov
mov
cmpsb
cmpsb
push
fwait
and
cwtl
lret
popf
aad
jl
and
mov
xor
rcrl
fs
ret
in
ror
popf
jmp
imull
and
rcl
adc
dec
ficoml
sbb
sub
shlb
fwait
int3
xor
mov
xlat
add
test
shrb
fwait
pop
in
lods
push
dec
dec
mov
int3
jg
and
lock
scas
fwait
or
call
jo
jg
testb
jmp
cmp
xor
repnz
outsl
pop
mov
or
aaa
sub
xor
insb
fisubl
mov
sbb
xorl
and
idivl
shll
xor
lret
imul
push
jb
pop
out
adc
add
outsb
push
xchg
xor
aas
jge
pop
stos
mov
cmp
hlt
call
stos
jne
jne
imul
fdivp
fwait
xor
mov
sub
push
inc
cli
or
ja
out
repz
popf
or
dec
pushf
or
cwtl
cltd
add
pop
mov
rcrb
orl
clc
jb
lds
in
mov
int3
or
inc
ss
push
sbb
bound
pop
fs
cmpsb
mov
mov
and
pop
das
bound
cmp
mov
pop
incb
out
out
mov
cmpsl
jns
mov
jecxz,pn
cmpsb
int3
popa
mov
adc
jne
mov
arpl
jns
mov
cwtl
sahf
int
sti
mov
mov
mov
or
scas
shll
rcr
nop
dec
sbb
mov
faddl
hlt
lcall
loopne
xchg
jne
sbb
push
mov
lock
iret
enter
in
ficompl
mov
mov
fwait
cmp
ficomps
les
mov
ret
decl
ret
in
xchg
sbb
pop
dec
mov
aam
aad
repz
stc
add
fistl
jo
push
or
jb
inc
pop
stc
dec
nop
dec
bound
test
arpl
sub
jp
jmp
jl
mov
xchg
stos
test
int3
vrcpss
add
and
gs
cmp
js
cmp
dec
fildl
xor
sbb
stos
movsb
jno
loope
mov
inc
jnp
test
xchg
and
xchg
stos
fstp
inc
inc
add
mov
clc
jge
cld
pushfw
mov
es
sbb
cmpsb
add
dec
mov
xlat
fildl
int
mov
fists
insl
jbe
adcl
idivb
aam
xor
repz
ljmp
xor
jmp
ret
jns
ret
in
push
push
or
ds
and
dec
cmp
sub
leave
mov
add
psrlq
adc
xor
cmc
scas
lcall
mov
ret
sar
lret
test
mov
repz
fwait
pop
add
dec
in
xor
push
mov
call
xlat
daa
sbb
adc
push
lods
and
in
ficoml
ds
fdivs
dec
jb
mov
fsts
cmp
dec
das
adc
pop
dec
xor
mov
pop
xchg
mov
mov
mov
ljmp
jecxz
rorb
pop
pop
and
addb
and
push
adc
jbe
jns
popf
out
cmc
push
decb
insb
loope
or
and
sarl
jp
sarl
lcall
out
jp
xor
add
int
mov
imul
stc
ficompl
loop
stc
rorl
xchg
lea
loop
out
js
sub
mov
xchg
inc
mov
or
sub
imul
push
pop
or
mov
pusha
xor
mov
out
ret
insl
mov
pusha
pop
je
imul
cmp
pop
mov
roll
aas
aam
adc
cmp
sub
push
mov
or
rcll
hlt
cmp
push
add
inc
repnz
cmc
rcll
push
adc
mov
adc
pop
push
add
mov
pop
imulb
out
scas
lcall
out
push
iret
xchg
xchg
push
fistpll
repnz
sbb
push
xchg
loope
push
sahf
xor
mov
inc
dec
sub
les
into
jne
adc
scas
jge
xchg
lahf
mov
jne
das
jle
xchg
dec
nop
cwtl
or
adc
stc
fdivrl
testl
loop
imul
bound
xor
inc
sbb
pop
sahf
leave
adc
jl
cmp
xor
sub
adcl
hlt
xor
mov
out
fcomps
adc
xchg
fldcw
pop
sub
lods
incb
pop
xchg
int3
pushf
or
enter
adc
lods
loopne
movsb
imul
jae
hlt
jnp
adc
push
inc
mov
or
jg
jl
mov
pusha
xor
jb
cmpsb
xchg
xlat
sahf
push
imul
mov
push
lods
fdivp
add
pop
fwait
inc
cld
jl
mov
insl
sbb
loopne
std
jns
lahf
adc
lret
scas
lcall
mov
xlat
sbb
xchg
xchg
aas
pop
mov
inc
mov
jmp
daa
dec
fldl
fmull
sbb
outsb
in
jmp
sti
push
outsb
cmp
fistpll
mov
cld
or
mov
adc
lock
mov
sbb
sahf
mov
jle
or
out
iret
mov
dec
aad
mov
sub
int
leave
pop
dec
push
pop
lret
and
inc
sbb
out
rcll
push
ss
push
out
stc
pmaddwd
loopne
notb
hlt
movsb
clc
cmc
or
lock
push
lea
xchg
lods
fs
fildl
fnstenv
loope
pop
nop
movsl
and
scas
add
jp
xchg
mov
repz
shll
aaa
hlt
addl
pushf
fdivp
mov
add
xor
push
filds
mov
outsb
pop
xchg
mov
push
jb
pop
push
js
cwtl
fisttpll
decb
sbb
dec
mov
cmp
test
call
gs
js
dec
jecxz
lock
xabort
pop
xor
sub
or
insl
lcall
xchg
leave
fcmovb
gs
bound
int
rol
cmp
add
dec
add
nopl
xor
mov
rolb
stc
cmp
jns
jecxz
fdiv
sub
push
sti
imul
mov
xchg
or
mov
in
inc
ret
inc
sbb
das
jne
mov
or
pop
mov
add
and
lret
outsb
mov
pop
fwait
mov
push
mov
cmp
mov
icebp
sub
hlt
ror
dec
testl
mov
in
xchg
push
es
mov
test
or
or
cld
sbb
and
enter
adc
and
repz
sub
call
xchg
pop
addr16
aad
rcl
xchg
push
aad
ja
fcmovnu
fsts
lret
cmpsl
das
lret
add
cmp
lahf
fwait
dec
rclb
xchg
sub
cmpsl
outsb
jmp
sbb
mov
cmpsb
aas
inc
sbb
das
sub
jae
mov
loopne
cmpl
fsts
mov
jns
mov
dec
hlt
jne
mov
std
mov
mov
or
movsl
test
sbb
push
js
outsb
outsl
ret
negl
stos
scas
aaa
lret
clc
das
xchg
negl
int
pop
sbbl
cwtl
xor
inc
test
mov
in
adcb
scas
xchg
dec
rcrb
into
addb
xchg
insb
cmp
int3
mov
ret
jb
hlt
inc
in
in
xor
movsb
push
jnp
movsl
popf
icebp
ficomps
in
xor
nop
mov
enter
stos
jp
lods
ja
lret
repnz
loop,pt
or
mov
into
pop
mov
imul
xor
cwtl
mov
lods
out
sbb
and
mov
lea
out
adc
sbb
adc
lcall
and
add
dec
bound
or
sbb
lcall
test
and
jle
inc
xchg
fimull
outsb
addb
scas
xchg
pop
scas
cmp
shll
hlt
fmull
int3
push
xor
data16
adc
xchg
xchg
sbb
insb
or
not
dec
cmp
cmpl
mov
jg
sbb
je
ds
add
and
add
push
sti
aam
dec
out
movsl
pop
sub
push
mov
mul
mov
dec
jno
das
cmpsb
add
dec
dec
ror
inc
int
mov
jae
and
movsb
outsl
pusha
jae
push
in
aas
repnz
xchg
mov
imul
outsl
test
nop
jae
sub
imulb
or
rep
lret
mov
mov
stc
mov
clc
pushf
and
mov
shrb
daa
aas
fisubrl
pop
lahf
enter
sub
pop
test
xor
dec
mov
mov
and
mov
popa
adc
add
push
int3
dec
mov
or
rolb
push
cltd
js
jo
nop
fdivl
enter
cmpsb
js
pop
out
pop
dec
jecxz
out
ret
jae
xchg
lea
add
pop
aaa
cmp
xchg
cmpsb
mov
je
js
add
lock
sub
shl
jbe
cwtl
data16
jp
lds
cltd
test
jno
adc
jmp
shl
int
pop
push
adc
cmp
xchg
push
sbb
or
jb
or
cmp
dec
das
clc
in
cmp
ljmp
pop
cli
and
lahf
fsts
cli
mov
fwait
es
hlt
xor
push
jns
and
fistps
movsb
push
loopne
test
add
mov
push
dec
addl
pop
lret
clc
jne
cmp
insl
cmp
in
push
xchg
add
pop
popa
lds
scas
jl
push
in
cmp
sti
mov
gs
jne
jmp
cld
cmp
fnstcw
shr
stos
sbb
out
sti
sti
mov
jo
dec
jl
arpl
rorl
clc
stc
adc
jne
xchg
cmpsb
repz
repz
mov
dec
xchg
inc
and
icebp
stos
repnz
fdivs
es
das
jmp
add
mov
cld
xchg
xchg
inc
in
ss
pop
enter
bound
call
xor
inc
stc
xor
sub
cmpsl
add
dec
cltd
mov
and
addr16
sub
jl
or
xor
daa
mov
cwtl
or
adc
xor
jl
enter
mov
test
sub
dec
push
cmp
inc
stos
cmp
cmp
test
pop
mov
mov
imul
push
jns
sub
fidivrs
shr
loopne
pop
xor
push
xchg
sbb
pop
jns
jbe
inc
imul
cld
shll
int
fdivrl
dec
repnz
xchg
dec
lea
push
jecxz
fs
addr16
fcomi
cli
sub
cmpsb
or
push
pop
roll
testb
push
mov
roll
sub
stos
dec
in
and
push
lods
xchg
and
mov
test
call
push
ret
mov
pop
pop
and
jns
out
divl
push
fstp
imulb
xor
addl
xlat
push
sub
pop
loope
and
lock
fcmovu
sbbb
hlt
shlb
mov
xor
push
stos
push
aas
int3
xchg
loopne
sub
inc
push
push
daa
movsl
out
gs
mov
int
aad
mov
insl
cmp
sbb
leave
jl
xchg
or
cwtl
mov
into
adc
stos
pop
cmp
ficoml
pushw
cli
out
push
xchg
sbb
xchg
mov
mov
in
loopne
xchg
loopne
xchg
cmpb
adcb
in
fiaddl
addr16
addr16
mov
jecxz
jns
add
aas
addr16
cmp
movsl
mov
push
push
fisubrs
push
push
test
shll
sbb
pushf
inc
imul
or
imul
testb
repz
addl
stos
push
jns
adc
fistps
imul
mov
pushf
cltd
call
xchg
dec
movsb
mull
mov
insl
lea
stc
fs
ret
mov
sti
adc
je
push
mov
sub
mov
mov
mov
int3
ror
push
popf
movsb
mov
xor
dec
jg
pop
andb
pop
sbb
adcl
mov
test
sub
repnz
cmp
xchg
dec
or
adc
cwtl
add
faddl
push
rcrb
pop
xor
clc
or
mov
lds
and
cmpsl
jmp
shll
inc
jbe
subl
xor
iret
mov
xchg
je
mov
mov
jae
pop
cmpsb
popf
pop
sub
ja
inc
mov
jecxz
cltd
sub
enter
push
sub
jo
mov
push
imul
fcoms
dec
leave
mov
xchg
xor
inc
mov
hlt
loope
push
mov
pop
std
jg
pop
popa
xchg
jecxz
cmpsl
pop
aas
out
jae
xchg
xchg
mov
adc
mov
ds
pop
xchg
lahf
ret
cltd
mov
aas
mov
imul
pop
adc
cmc
test
xor
cmp
mov
pop
mov
push
cmp
jno
popa
ret
xchg
mov
push
lods
call
sbb
jge
jo
pop
jns
dec
repz
icebp
mov
jge
mov
sbb
out
sbb
push
es
mov
imul
je
push
dec
int3
inc
and
push
push
cltd
push
sbb
popa
lcall
cli
pop
shll
sbb
lcall
mov
xor
clc
cmpsb
cmp
dec
ret
ret
mov
pop
push
push
sub
std
outsb
xchg
xchg
dec
jne
aas
sbb
sub
xor
push
mulb
cmp
adc
testb
movsl
push
movsb
cmp
jb
mov
push
adc
or
aas
rclb
addr16
xor
fdiv
xchg
outsb
bound
jmp
pop
lods
in
adc
xor
test
pop
mov
jmp
jl
xchg
popf
mov
inc
pusha
je
insl
popl
cmp
lods
cmp
adc
test
rcrl
dec
popf
push
pop
addr16
ljmp
movb
and
jp
int
xchg
out
outsb
clc
dec
sbb
push
fisubrl
lahf
fstp
xor
dec
and
fwait
xchg
daa
cli
cmc
cmpsb
dec
fidivrl
stos
cs
push
jp
dec
into
pop
mov
or
cli
pop
lret
ds
cs
push
jp
dec
into
pop
mov
or
mov
mov
fidivrl
stos
adc
mov
lcall
into
pop
mov
sub
cli
pop
lret
ds
cs
xchg
out
shlb
sub
popa
cmc
jno
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
xor
and
sbb
jb
inc
mov
mov
add
adc
cmc
adc
add
xor
and
jae
push
push
mov
mov
add
adc
sti
adc
add
xor
and
jae
arpl
jns
cs
es
xchg
jg
jno
jnp
xchg
pop
bnd
pusha
mov
lods
mov
imul
mov
call
into
mov
or
daa
loop
jg
ret
scas
gs
dec
into
jb
pop
jmp
mov
ret
gs
out
dec
lahf
mov
add
ret
mov
adc
in
push
mov
nop
test
mov
adc
ja
test
aad
xor
pop
jne
push
cmpsl
inc
push
xchg
adcl
jl
jne
cmpsl
ret
popa
and
sti
jecxz
rorl
repnz
xchg
and
xchg
push
dec
push
mov
fwait
ljmp
lea
pop
sbb
enter
ljmp
push
pop
loop
and
and
repnz
xor
and
jae
arpl
push
pop
mov
mov
add
or
cmpsl
jb
adc
aaa
adcb
pop
push
jecxz
lcall
push
test
ja
loop
repnz
cmpsl
jnp
inc
adc
push
out
and
dec
pusha
divb
pop
aam
icebp
inc
mov
push
jb
adc
cmpsl
push
rcrb
popa
mov
xorb
bound
push
mov
add
adc
loop
repnz
xor
and
jae
arpl
jb
inc
mov
mov
add
adc
loop
xor
fwait
pop
mov
sarb
add
sahf
mov
test
dec
mov
jecxz
into
imulb
bound
fincstp
dec
mov
push
lods
cmp
cltd
mov
div
inc
cmp
fsubp
push
js
jl
xor
adc
inc
or
popa
notb
popf
out
and
mov
data16
push
adcb
fcoml
mov
int
clc
dec
xchg
pop
lret
sub
cld
inc
out
jnp
lahf
pop
xchg
fldz
pop
jns
shl
in
jmp
cltd
sbb
sahf
push
mov
mov
jae
fisttpll
in
jae
dec
movsl
mov
dec
mov
out
push
rorb
xchg
fildl
push
jns
cmp
mov
inc
xor
aaa
cmc
and
xchg
inc
test
and
pop
or
je
or
cmp
fwait
imul
mov
sbb
adc
sbb
inc
outsl
iret
xor
test
jnp
inc
cmp
push
cltd
push
xor
test
data16
int
movl
xor
xchg
daa
call
arpl
mov
dec
lret
imul
scas
pop
adc
jo
stc
sbb
add
sysenter
mov
xchg
jecxz
mov
adc
mov
insb
pusha
lds
pop
cmp
xor
cltd
add
and
lahf
xor
lahf
sbb
or
fstpt
lock
push
std
lock
xchg
jae
roll
pop
cs
mov
femms
adc
and
ds
mov
dec
ficompl
add
lock
dec
pop
je
adc
xor
ss
jmp
fldcw
dec
push
fs
adc
pop
js
movsb
add
xchg
inc
pop
mov
jno
lret
lea
imul
test
jno
lock
int
test
js
lods
sub
out
adc
xchg
imul
jmp
cwtl
std
mov
rorl
sub
hlt
cwtl
mov
sbb
and
test
xor
xchg
mov
stos
xchg
xchg
mov
stc
mov
pop
mov
gs
pop
add
jmp
repnz
jle
xchg
sbb
nop
sub
fildll
mov
mov
pop
mov
ret
insl
add
stos
jmp
nop
rcrb
sub
mov
cs
cmpsb
xor
jbe
les
cmp
stc
fidivs
dec
mov
data16
jne
adcl
je
data16
and
fcoms
cmpsl
mov
rolb
xchg
test
inc
pop
sti
add
pop
xchg
lods
out
push
jnp
sbb
xchg
sub
cld
adc
inc
xor
fiaddl
lcall
or
jg
dec
in
insb
out
jne
arpl
outsb
inc
sahf
dec
mov
fnstsw
scas
xchg
inc
sbb
outsl
sbb
xchg
fbld
fs
cld
ficompl
je
pop
ss
sbb
and
lcall
repz
ljmp
jmp
call
in
push
jg
jo
sub
inc
repz
ret
in
xlat
popf
mov
shlb
inc
sbb
cmc
mov
xlat
mov
mov
test
in
in
lahf
stos
mov
adc
lods
sub
sbb
ret
pop
scas
in
and
push
gs
jne
daa
fisttpll
gs
faddl
mov
mov
inc
sub
inc
adc
rcrb
sub
push
jbe
fidivl
xor
negb
add
push
mov
scas
push
leave
lcall
sbb
mov
data16
pop
xor
pop
aas
push
fwait
jg
dec
jnp
outsl
aaa
dec
add
loop
pop
sub
sbb
cmp
daa
decl
cltd
sub
xchg
mov
out
xor
push
jecxz
dec
sub
xchg
daa
lods
gs
les
and
and
mov
sahf
pop
cmpl
jns
push
shrb
mov
insl
or
stc
xchg
dec
mov
mov
movsl
pop
jmp
push
dec
les
and
fwait
xchg
in
insb
ss
out
ret
add
adc
mov
or
and
adc
int
fmul
int
or
push
mov
sti
pop
cld
or
in
push
mov
enter
mov
aad
xor
pop
cmc
push
xchg
clc
filds
test
rolb
xchg
ljmp
mov
xor
adc
aam
sub
add
mov
xchg
jno
aaa
or
es
dec
ja
inc
repz
daa
js
testb
mov
shlb
mov
adc
mov
dec
cwtl
jg
repz
mov
in
dec
cli
nop
dec
pop
sbb
mov
testl
cmc
mov
push
inc
xor
or
xchg
pushf
or
shll
popf
inc
mov
pop
push
aaa
ljmp
mov
and
js
cmp
lea
xchg
lahf
out
dec
mov
push
push
iret
mov
jns
cmp
in
gs
arpl
imul
adc
movsb
data16
jmp
push
mov
sarl
jecxz
int3
lret
jle
xor
insb
lret
ljmp
mov
cmp
jecxz
imul
fstps
loop
mov
lea
nop
aaa
sarl
lods
jne
sbb
sub
in
mov
cs
mov
test
add
lahf
sub
mov
pop
jle
and
sub
and
inc
insb
push
or
sub
leave
sar
cld
or
repz
pushf
and
pop
mov
je
xchg
pop
inc
mov
or
pop
movsb
dec
out
js
cmp
xchg
lcall
insb
cwtl
mov
add
jno
gs
popf
stc
stos
lds
add
insb
xlat
cmc
out
outsl
mov
mov
mov
push
cmp
add
jge
cli
adc
rorl
pop
add
fstpt
cltd
lds
das
jo
inc
push
jb
cli
pop
in
hlt
jl
aam
stc
adc
jge
cmpsl
jbe
push
and
in
cmp
mov
and
add
cmp
jbe
std
adc
int3
imul
mov
mov
xor
out
mov
rcr
loope
pop
enter
dec
mov
ljmp
lcall
pop
jnp
mov
in
test
int3
xor
rorl
lock
pop
add
addr16
lods
lret
lret
mov
cld
aad
sbb
ret
fsubs
enter
nop
out
decl
stc
hlt
push
clc
mov
outsl
pushf
cmp
fnstsw
push
nopl
out
cmp
cs
ficompl
movsb
daa
push
jne
adc
pop
push
push
mov
les
dec
stos
out
insl
mov
jg
cmp
insl
sahf
dec
shl
xchg
aam
cmpsb
rclb
fwait
xchg
iret
inc
mov
sub
xchg
mov
fxtract
adc
jge
iret
inc
push
outsl
stos
in
mov
loopne
inc
xor
fdivrl
div
jbe
push
sub
push
rcl
push
push
xchg
mov
call
repz
lret
insb
lcall
in
psrad
ds
jle
mov
and
push
sbb
nop
pop
aaa
mov
push
mov
jl
pop
aam
inc
or
sbb
rorl
xchg
push
test
fsubrp
mov
adc
popf
pop
push
mov
sbbb
jnp
pop
loop
fldl
mov
jne
outsl
adc
cmp
sbb
cmpb
cmpsl
ljmp
repz
into
pop
adc
int3
lods
sahf
add
in
fimuls
out
divl
or
fstpt
aam
shrb
cmc
pop
mov
push
jb
mov
in
cmp
sub
sbb
push
scas
mov
popf
mov
add
push
xor
lods
sbb
test
xor
mov
push
cltd
stos
lods
xor
js
aad
stc
mov
loope
push
push
jnp
cmpsl
icebp
xor
rcrb
push
cmpsl
inc
out
andb
es
dec
insl
mull
scas
inc
mov
cvtps2pi
stc
int
mov
mov
rclb
cmp
or
outsb
mov
mov
adcb
jne
aad
loopne
pop
xchg
mov
mov
jmp
sti
xor
in
sbb
xor
out
imull
outsb
inc
mov
and
adc
mov
cmp
call
mov
jno
sbb
xlat
call
js
cld
into
mov
in
sbb
test
nop
cmp
pop
lods
push
clc
fildl
xor
pop
adc
pop
out
or
dec
pop
repnz
push
push
mov
aam
jae
sbbb
popf
shl
fsubl
mov
pushf
push
dec
push
push
sub
outsb
imul
notl
repnz
leave
hlt
out
inc
inc
stos
adcl
xor
mov
lcall
lea
sub
sub
sbb
xchg
lods
adc
lea
jns
sbb
jno
dec
push
inc
mov
dec
xlat
dec
fldenv
mov
cmpsl
in
mov
jmp
pop
sbb
mov
data16
mov
add
mov
sbb
fildll
int3
mov
dec
loop
je
insl
lods
dec
xchg
and
mov
inc
icebp
sub
aaa
cld
shrb
insl
cli
into
mulb
xchg
aad
cmpsl
jp
xor
shlb
adc
jbe
jmp
es
daa
cmp
mov
push
repnz
in
int3
and
cmpsb
in
dec
popa
ficoml
mov
sbb
add
les
cmp
outsb
aad
imul
inc
clc
outsb
dec
shlb
mov
movl
loope
sbb
mov
sub
inc
or
dec
mov
lea
scas
or
push
arpl
out
cmp
in
push
jno
mov
test
and
cld
test
xor
sahf
push
push
jns
adc
jns
mov
jl
dec
sbb
fbstp
jge
lcall
mov
sub
lods
mov
gs
dec
push
movsl
jns
push
imull
pop
cmp
or
scas
and
mov
and
sbb
scas
inc
orb
fldt
lea
rcr
insl
push
js
mov
imul
mov
cmp
and
sub
adc
jno
cwtl
out
jle
scas
xor
outsb
dec
ljmp
pop
insb
mov
daa
cmp
sub
inc
or
jne
mov
xchg
cli
cmp
sub
mov
mov
addr16
cmp
pop
sub
scas
outsl
repnz
or
testl
inc
jmp
push
fs
hlt
inc
std
hlt
dec
mov
fstps
jl
ret
test
xchg
inc
pop
pop
aad
ds
ds
out
fsubrs
pop
jmp
sbb
aaa
inc
out
xchg
adc
repnz
lcall
fsts
jp
lahf
rep
mov
adcb
sub
jne
pop
or
int
cmp
lahf
inc
pop
xor
rcrb
inc
idivb
add
add
inc
dec
push
std
cmc
js
add
xchg
inc
mov
dec
sub
js
jp
in
jb
mov
inc
insl
das
imul
stc
test
in
leave
sub
jl
aad
and
or
ds
hlt
dec
adc
adc
xorb
push
jne
and
adcb
daa
ja
repz
push
popa
inc
mov
and
inc
xor
cmpsb
ficompl
arpl
test
adc
stos
sub
mov
icebp
jmp
mov
adc
aam
shrb
mov
xor
adc
sbb
pop
enter
loop
enter
jns
imul
mov
fwait
mov
sarl
cmp
movsl
les
cmp
add
fs
jb
adc
jle
pushf
push
jp
xor
mov
dec
insl
sub
cmp
sub
push
out
sub
mov
dec
jne
mov
shr
add
xchg
adc
dec
sub
arpl
add
andl
outsl
test
rol
push
sbb
sbb
pop
cwtl
xchg
mov
xchg
push
js
push
ja
inc
cmc
xchg
fucomip
data16
inc
jge
ds
sti
lods
inc
push
inc
jnp
push
lcall
or
enter
jo
mov
push
dec
shlb
xchg
dec
das
sub
scas
sub
xor
adc
sbb
inc
cmp
dec
jae
push
lea
mov
shlb
xchg
add
adc
push
xchg
std
enter
jg
sbb
stc
into
pushf
shr
pop
ja
test
sahf
arpl
stos
sub
pop
jb
mov
ljmp
jle
push
add
jns
in
or
imul
mov
clc
out
mov
aam
sbb
imulb
push
sub
pop
dec
pop
lea
add
cmp
push
lods
test
rep
std
push
push
xor
aaa
sub
sbb
cli
cmp
push
xlat
adc
push
dec
ljmp
adc
xchg
popa
enter
fidivrs
psllq
scas
out
cmpsb
jnp
test
add
jle
push
in
aad
jmp
jg
jmp
leave
lods
mov
xlat
test
or
ficompl
lds
fnsave
addr16
xchg
push
add
sub
mov
cmpb
nop
inc
add
pop
sub
jg
add
sbb
mov
leave
mov
dec
adc
cmp
jecxz
stc
jnp
jno
push
in
mov
idivb
push
dec
adc
lret
sub
push
fmull
call
dec
sbb
mov
std
imul
or
insb
mov
mov
rcrb
pop
pop
dec
xlat
mov
inc
adc
xor
inc
fucomip
sbb
sub
mov
gs
enter
popf
fists
cmpsl
repnz
je
add
jae
dec
sahf
mov
outsb
xchg
cmp
dec
int
fstpt
insb
and
iret
in
add
cmc
gs
hlt
fwait
test
clc
xchg
cmpsl
sub
cmp
sbb
insb
mov
jae
pushf
ret
mov
jecxz
xchg
cmp
xlat
mov
insl
fdivrs
xor
test
jae
daa
add
mov
and
add
mov
add
cmp
jns
cmp
mov
and
add
pop
mov
call
xchg
mov
inc
or
mov
insb
aaa
mov
jecxz
sbb
aam
xor
iret
adc
pushf
std
jnp
pop
cmp
shll
jo
imul
mov
and
aad
cmp
in
push
hlt
jns
adc
sbb
xchg
rorl
mov
pop
out
push
pop
ret
xor
imul
pop
jne
std
cmp
sbb
or
hlt
xchg
jo
xor
inc
or
adc
and
dec
inc
out
pop
andnps
xchg
xor
fcomps
aas
inc
std
inc
sub
sbb
pop
insb
mov
movsl
in
and
sahf
sub
pop
into
add
test
ds
movsl
cmpsl
sub
xor
and
stos
pop
push
pop
out
jge
sub
mov
fisubl
jge
ror
sbb
mov
push
sub
push
mov
push
cs
xchg
stos
adc
repz
xor
xor
dec
lods
jmp
js
sti
mov
or
adc
cmp
cwtl
pop
xchg
mov
dec
mov
loop
mov
lret
or
xor
mov
and
fcomps
mov
fld
imul
mov
push
pop
dec
pop
arpl
mov
pop
scas
fiaddl
aam
adc
sub
add
add
daa
cmp
pop
je
scas
push
push
or
lds
out
inc
imul
dec
jg
movsl
add
lods
push
jae
push
push
add
popf
push
mov
or
out
xor
outsl
pushf
je
push
inc
pop
test
sarl
xor
and
movsl
lahf
movsl
and
or
test
cltd
push
and
repz
xor
mov
jo
cmpsl
aam
rcrb
push
out
sahf
or
dec
pop
inc
jns
dec
xchg
dec
adc
pop
jecxz
mov
inc
stos
sbb
xor
adc
push
dec
mov
mov
xchg
xor
scas
outsl
dec
push
negb
sti
js
leave
outsl
in
add
dec
sub
psubsw
push
xor
pop
imul
repz
mov
mov
push
sbb
mov
insb
test
adc
lods
jmp
testl
pop
cmpsb
arpl
mov
bound
leave
cld
ss
mov
push
add
aad
test
imul
xchg
cmp
imul
mov
and
jnp
scas
imul
sub
or
pop
cmp
fbstp
inc
mov
jae
dec
push
or
sbb
and
or
cs
inc
xchg
stos
ljmp
hlt
adc
pushf
mov
in
daa
arpl
cmpsb
pop
rorb
mov
aaa
lret
in
mov
ss
mov
lahf
cmp
ss
push
hlt
into
inc
decb
add
mov
add
sub
push
xor
fsub
mov
add
cld
popa
loopne
sbb
sub
xor
adc
xchg
adc
cmpsb
cmp
in
das
fmull
adc
lock
adc
push
and
lods
lcall
push
les
fists
rcll
in
cld
pop
int3
push
loopne
cmp
aas
lahf
mov
and
add
add
imul
test
mov
lret
add
bound
mov
and
or
nop
and
into
insl
inc
aad
mov
jle
lcall
pop
mov
mov
xchg
pushf
push
mov
jns
call
dec
dec
add
dec
adcl
faddp
std
lahf
mov
lret
into
jbe
adc
andb
mov
nop
push
adc
test
cli
js
in
mov
out
mov
and
mov
test
pop
pop
mov
inc
pop
dec
addr16
mov
jne
mov
push
loopne
add
dec
idivb
mov
into
adc
std
mov
inc
push
sbb
and
stos
push
mov
popa
aam
ljmp
sub
divb
rcrb
sub
test
test
movl
pop
xorl
test
fsubrl
shlb
shlb
gs
aad
ret
add
mov
ret
outsb
cmp
ljmp
jns
push
ljmp
jg
add
out
lcall
adc
outsl
lock
outsl
pop
mov
out
rcr
nop
cltd
in
sbb
sahf
mov
hlt
push
fldl
nop
jo
xchg
movsl
sub
jne
mov
mov
cmovae
imul
inc
bound
in
xchg
mov
lods
xchg
lods
or
pop
pop
mov
pop
mov
jno
mov
pop
push
push
cmp
mov
push
xor
fwait
orb
nop
test
cmp
fcomp
mov
jp
cmp
daa
pop
xor
cs
jp
loopne
xchg
sbb
sarb
data16
cmc
and
test
lds
adc
cltd
push
insb
pop
pop
outsb
pop
sub
push
mov
xchg
lods
push
repnz
mov
mov
daa
xchg
dec
mul
xchg
xorl
dec
adc
xchg
and
dec
mov
test
repnz
lods
xchg
or
cmp
das
cmp
aam
cmp
out
dec
xlat
mov
sub
dec
in
cmp
fistps
dec
cmp
sahf
xchg
mov
jae
mov
xchg
leave
popf
inc
push
and
cld
mov
rorb
or
mov
mov
shll
pushf
mov
je
or
outsb
push
push
pusha
and
stos
add
lret
jmp
lods
lods
repz
jg
loop
popl
clc
mov
dec
insl
mov
ret
add
les
out
dec
add
mov
and
sbb
xchg
sub
ss
xchg
pop
shll
add
dec
cld
pop
jge
jns
icebp
ljmp
lds
or
imul
pushf
adc
cmpsb
mov
cmpsl
ret
shll
test
lret
jo
fcmovbe
add
lcall
hlt
dec
dec
xor
aas
inc
cmp
add
cmp
mov
push
and
ja
or
and
in
mov
jne
stc
cmpb
adc
ja
mov
in
in
out
gs
mov
icebp
push
sti
inc
and
sbb
xchg
adc
cld
dec
loope
mov
ja
mov
xor
and
jae
arpl
jb
inc
mov
mov
add
adc
loop
repnz
xor
and
jae
arpl
jb
inc
mov
mov
add
adc
loop
repnz
xor
and
jae
arpl
jb
inc
mov
mov
add
and
adc
add
xor
and
jae
mov
call
pop
mov
sbb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
xchg
adc
pop
icebp
cmp
add
xor
jno
jno
addl
mov
roll
loope
icebp
jae
adcl
inc
mov
push
shll
jno
addl
mov
roll
loope
icebp
jae
mov
push
mov
xchg
cmp
icebp
add
fisttps
icebp
xchg
sbb
nop
sbbb
in
lds
ss
sbb
aam
lock
sarb
jnp
ds
repz
mov
pop
imul
nop
lds
adc
fsubrs
test
add
insl
ja
into
jae
ret
xchg
loopne
sbb
repnz
cld
xchg
adc
inc
std
inc
add
xlat
xchg
pop
add
jl
outsb
out
repnz
movsb
into
sub
lods
loope
icebp
and
jno
xor
in
mov
sub
xor
and
aaa
idiv
jl
adcb
xor
divb
fiadds
xchg
adc
inc
rcll
arpl
jae
adcl
and
push
shll
jno
cmc
outsb
aad
int
pushl
sub
adc
out
mov
fnsave
popa
add
pop
aad
stc
movsb
es
loope
mov
jl
pop
cmc
push
fisttps
lods
and
push
mov
inc
subb
push
loope
icebp
jae
adcl
and
push
shll
jno
addl
mov
roll
loope
icebp
jae
adcl
and
push
shll
jno
addl
jecxz
mov
fiaddl
xor
or
mov
in
push
cmpl
mov
sbb
cmpsb
cmp
push
mov
pop
dec
adcl
pop
or
leave
sbb
pop
aam
or
xor
cmp
jmp
mov
imull
out
inc
outsb
mov
jl
movq
xor
je
mov
pushf
pop
sbb
mov
xchg
inc
jecxz
pop
sub
jns
push
ror
fcomip
test
decb
test
pop
inc
insb
push
cmpsb
pop
imull
enter
loope
shll
shrl
clc
sahf
lods
xor
lods
cld
loopne
insb
mov
mov
pop
insb
mov
add
rcrb
and
pop
popf
mov
jae
data16
stc
pop
shl
sti
cmp
imul
lea
mov
cmp
xor
push
and
push
cwtl
dec
mov
mov
xor
mov
mov
sub
adc
xor
push
enter
bound
xor
je
fwait
rcll
dec
dec
dec
jl
dec
lds
imul
test
out
cmpsl
sbb
add
pop
loopne
jmp
pop
inc
jb
scas
jnp
cmp
aad
iret
shll
inc
xchg
adc
int3
nop
mov
fcoml
push
sti
mov
loopne
stos
jnp
mov
push
or
xchg
pop
xchg
stc
mov
int3
inc
ret
sti
cmpsb
lock
shlb
mov
push
outsl
jae
leave
lcall
fnsave
adc
dec
in
fisubrl
jl
inc
lds
repz
inc
cmpsb
adc
inc
pusha
popa
pop
daa
or
fisubs
in
sub
imul
adc
aam
or
outsb
std
loope
shrb
and
sbb
mov
or
es
or
push
gs
push
aas
lods
pop
shl
jle
negb
je
sub
push
adc
pusha
jno
jmp
add
fdivrs
jo
pop
sbb
jl
arpl
jmp
int3
in
mov
add
rolb
pop
adc
xor
jbe
in
shlb
jg
hlt
ss
ljmp
xchg
and
inc
mov
lds
sbb
jb
mov
jae
pushf
add
daa
decl
mov
xor
adc
push
in
fs
es
add
in
xor
ret
div
mov
mov
dec
inc
sti
mov
test
mov
in
mov
outsl
clc
xchg
fpatan
pop
js
dec
pop
xchg
add
ds
addr16
mov
and
arpl
es
or
xor
xchg
pushf
or
lds
bound
xchg
push
and
push
inc
or
mov
mov
cmpsb
push
inc
or
xchg
mov
adc
enter
sub
ja
imul
aad
addr16
mov
xor
dec
shr
mov
andb
pop
jb
fidivs
movsb
cmp
push
adc
dec
add
lock
outsl
arpl
enter
dec
mov
aas
xor
pushf
std
cmp
sti
mov
mov
into
mov
in
mov
je
push
rcrl
notb
add
es
pop
or
int3
add
fisttps
inc
jp
pop
mov
jp
inc
cmp
stos
push
stc
xchg
iret
and
jmp
addr16
mov
sbb
ret
imul
shll
cmpsb
sbbb
xchg
sbb
add
and
arpl
sub
push
adc
push
insl
cs
add
loope
rcrl
adc
inc
sti
dec
dec
xchg
xchg
imulb
es
pcmpeqw
xlat
cmp
movsl
rorb
push
jg
jmp
push
leave
dec
cli
or
int3
adc
popa
lea
in
xchg
push
jo
movsl
jbe
outsb
xlat
pop
mov
repz
daa
pop
movsb
dec
ret
stc
jns
push
xlat
fdivrs
rorb
dec
xchg
fwait
jge
mov
fsubr
dec
cs
out
stos
cmp
mov
fidivs
and
adcl
clc
push
push
stc
test
pop
sbb
cmp
mov
lock
mov
push
add
or
lds
or
dec
jbe
aam
inc
cmpsl
je
daa
out
push
popw
sub
mov
cwtl
test
lock
out
enter
push
fstpl
stos
rol
xchg
or
cltd
in
xchg
xchg
jp
sbb
das
stos
test
mov
bnd
cli
pusha
inc
pop
push
sbb
xchg
fsts
imul
icebp
xchg
pop
adc
mov
jg
jmp
ja
jecxz
adc
leave
test
sub
push
aaa
mov
fwait
mov
mov
faddl
popa
cli
neg
dec
shl
test
or
sub
sub
je
inc
stos
adcl
stc
add
js
test
xor
cmpsb
fwait
sub
mov
movsb
int3
jae
push
das
mov
into
incl
mov
test
pop
shrl
dec
and
sub
inc
ret
ret
mov
stc
xchg
arpl
mov
or
sbb
insl
jne
shll
inc
mov
scas
test
jns
ficoml
xor
jns
fninit
lcall
mov
jge
lret
jno
bound
mov
cmpsb
scas
jge
inc
divb
inc
cmp
dec
out
js
rclb
jge
sub
cmp
jns
loop
push
xchg
call
and
dec
dec
test
fwait
andl
imul
cli
pop
fnstsw
pop
ja
loope
mov
sbb
mov
mov
outsb
outsb
outsb
mov
fadd
sub
fisubl
push
fdivl
jge
lods
cmp
out
arpl
push
adc
shrb
out
mov
pop
mov
xchg
imul
fcmove
cltd
js
sti
mov
orb
mov
dec
lods
cmc
xchg
xor
cmpsb
iret
rorl
mov
lock
add
lods
loopne
inc
add
sbbl
data16
adc
dec
dec
imul
shlb
xchg
movsb
add
mov
jge
cmp
mov
mov
ja
scas
sub
out
inc
xchg
insl
pop
mov
enter
cmp
lods
movsl
xor
lret
or
adc
insb
aam
call
jnp
das
ret
out
mov
inc
xor
cmpl
enter
in
add
aaa
and
out
or
dec
and
dec
cs
mov
call
push
inc
inc
jo
mov
xchg
rcr
pushf
fnstenv
push
mov
xchg
stc
xor
hlt
icebp
jns
adc
xor
pusha
cmp
das
or
inc
pushf
xchg
js
lea
mov
mov
and
add
ret
push
dec
aam
cmp
adc
inc
xorb
out
std
js
pusha
movsl
pop
xorl
bswap
insb
int
xor
add
mov
sub
mov
stos
fwait
push
and
jg
aas
cmc
xchg
xchg
pop
out
jns
xor
fisubl
daa
or
cmp
jge
push
or
xchg
adc
mov
lcall
stos
repz
xchg
or
vmread
pop
sub
dec
and
mov
insb
pop
or
or
gs
inc
cmp
dec
roll
test
mov
fld
adc
mov
mov
cmc
adc
and
rolb
pop
mov
cli
loopne,pt
cmp
mov
test
sub
push
int3
lea
pop
mov
cs
loopne
push
out
test
out
cmp
loop
lods
pop
mov
in
std
jns
pop
push
xchg
aaa
mov
xchg
pop
inc
test
fs
pop
leave
fldcw
cmp
adc
sti
xchg
fisttps
xlat
xchg
dec
inc
incb
jge
dec
or
or
enter
insb
sub
xor
inc
je
xchg
sbbb
je
lret
add
mov
mov
imul
adc
adc
xor
outsb
sub
and
iret
call
sbb
push
je
inc
mov
ljmp
notl
cmpsb
cld
cmp
dec
mov
xor
mov
int3
sub
mull
stos
stc
adc
sarb
in
or
cwtl
mov
bound
scas
shll
adcb
inc
push
xor
push
insb
aad
or
insb
test
mov
mov
inc
and
fdivrs
mov
test
cmpb
mov
stos
les
push
shrl
push
mov
imul
sbb
or
test
push
ss
and
mov
ret
out
int3
outsl
pop
jl
mov
std
push
std
fsub
ret
das
popf
add
jp
inc
jge
stos
test
sbb
movsl
mov
jp
cmpb
mov
xchg
fadds
mov
nop
add
mov
or
scas
xor
test
add
stos
mov
pop
pop
lcall
arpl
enter
or
push
iret
test
pop
div
fnsave
sahf
jmp
lret
fnsave
ss
xor
insl
mov
dec
ficompl
push
fcompl
cmp
pop
loop
loopne
cmpsb
sbb
pop
loope
arpl
cmpsb
sbbl
ror
jle
lret
lods
hlt
sbbb
add
push
xchg
daa
pop
pop
test
enter
or
adc
popa
lret
jmp
ss
mov
inc
xlat
fcmovnb
sahf
test
jmp
mov
jno
aad
popf
popa
xchg
mov
xchg
sbb
inc
cwtl
lock
sub
dec
pop
cmpsl
mov
sbbb
mov
adc
mov
mov
mov
inc
push
push
xchg
lret
push
mov
lahf
mov
js
or
inc
loope
pop
push
sub
stc
in
sahf
mov
jmp
add
xchg
jno
jae
mov
jbe
xor
mov
add
mov
sbb
mov
lods
fdivrs
xchg
je
mov
insl
jns
sub
insb
js
sub
cld
repnz
out
add
adc
out
add
loop
dec
cmp
jmp
jne
xchg
push
pop
mov
lods
or
add
cmp
roll
mov
sub
or
sbb
xchg
sbb
mov
enter
dec
pop
cltd
or
mov
clc
push
stos
xchg
scas
pusha
adc
adc
andps
xor
lea
mov
or
arpl
lds
adc
adc
and
dec
dec
icebp
mov
mov
dec
lods
ja
push
mov
dec
add
inc
mov
inc
mov
js
clc
dec
pop
aam
pushf
cmpsb
clc
cmp
push
jbe
mov
or
hlt
mov
or
sub
js
pop
xor
ja
jp
repz
sahf
push
fcom
in
jp
cltd
mov
addr16
pusha
pop
dec
lock
mov
add
std
aam
jb
stc
arpl
xchg
push
push
mov
arpl
pop
or
sti
jno
dec
sbb
adc
dec
sbb
test
repz
sar
and
xor
xor
jbe
push
push
adc
mov
mov
fwait
in
jae
pop
pop
sbb
push
stc
call
aam
loope
or
pop
push
mov
mov
mov
mov
dec
adc
sahf
movq
xor
je
subb
aad
jge
push
stc
inc
decl
pushf
scas
adcb
dec
xor
adc
jo
lods
jp
dec
jns
or
cmpsb
mov
pop
cli
mov
in
adc
push
mov
push
test
dec
nop
frstor
push
xor
push
push
mov
sbb
xor
std
loopne
pusha
push
and
xchg
xor
inc
pushf
shrb
addr16
das
repz
adc
mov
xchg
loopne
mov
dec
inc
sbb
lahf
ljmp
mov
fldln2
pop
dec
dec
add
pushf
rorb
mov
push
adc
xor
xchg
leave
xlat
ret
jge,pn
sub
imul
add
inc
scas
inc
and
mov
adc
aas
mov
cmp
stos
scas
outsb
sub
push
loope
and
lock
inc
adc
movsb
mov
das
clc
std
pop
pop
mov
movsb
js
mov
dec
mov
addr16
jae
mov
xchg
sbb
data16
in
lods
lcall
jl
repz
xor
mov
push
sbb
pusha
clc
pop
rcrb
rcr
dec
dec
jg
or
in
andb
mov
push
and
nop
jle
mov
test
lods
add
push
push
push
js
and
or
aaa
repnz
add
dec
sbb
jp
inc
mov
inc
mov
mov
xchg
imul
insl
inc
sahf
mov
sbb
loop
call
test
lock
adc
repz
adc
je
cld
je
leave
lods
notl
popf
pop
ret
add
mov
xor
leave
push
scas
es
push
mov
push
sarl
pusha
dec
mov
into
mov
scas
sub
cs
outsl
sbb
scas
dec
sti
xchg
sbb
int
sub
mov
xor
mov
adc
push
lds
adc
jns
sbb
mov
adc
and
cli
mov
fs
jge
xlat
cwtl
pop
dec
loop
stos
mov
jge
mov
inc
ljmp
stos
sti
push
mov
pushf
adc
mov
in
inc
pop
loope
or
lea
mov
xchg
mov
or
or
inc
roll
lcall
add
mov
push
mov
daa
inc
pusha
es
push
xor
xchg
jo
xor
les
mov
lcall
fstpl
cmp
xchg
pop
enter
mov
inc
lds
dec
jno
clc
lods
icebp
jge
sbb
out
pop
test
cmp
mov
or
dec
jnp
stos
jb
das
lret
pop
nop
pop
pusha
je
pop
stc
int
outsb
jb
ljmp
insl
sub
aam
xchg
iret
lret
sbb
lret
int3
test
sub
push
fstl
lods
pop
mov
xor
or
addr16
add
cmpsb
xlat
std
in
push
mov
pop
mov
push
and
jmp
rcrl
lods
inc
adc
sbb
outsb
sub
pop
pop
scas
in
push
test
jno
jmp
repnz
stos
sti
test
enter
mov
xlat
pop
cli
push
mov
ljmp
xchg
in
sub
decb
mov
scas
jbe
cmc
int
mov
jo
adc
xchg
insl
leave
out
fisubrl
in
cmp
mov
fldcw
sbb
loopne
adc
rcll
xchg
and
hlt
aad
pusha
sbb
or
fcomi
in
push
psrad
mov
sub
inc
add
shr
fwait
pop
dec
ljmp
aam
or
loope
lds
arpl
and
gs
push
adc
fsubl
lret
push
gs
xchg
mov
and
enter
sbb
dec
inc
out
and
movsb
sub
xor
push
shlb
adc
push
cmp
je
aaa
mov
das
or
fwait
daa
pushf
out
add
mov
pop
sarl
add
cmpsb
cmc
loope
adc
dec
sbb
mov
and
out
adc
xchg
inc
mov
sbb
inc
inc
mov
cwtl
lret
pop
int
shll
loop
mov
stos
mov
mov
dec
notb
scas
jns
pushf
rorb
sbb
sub
in
sti
xchg
dec
lcall
dec
ret
ja
insl
pop
fistps
push
pop
sub
xchg
adc
int
or
stos
cs
sahf
fs
in
pop
cwtl
pusha
or
fwait
cmp
cltd
sub
call
clc
dec
pop
call
inc
je
arpl
stc
out
cmp
movsl
hlt
js
mov
mov
out
jmp
jp
sarb
movsl
stos
jmp
push
pop
aas
loop
sbb
jle
pusha
lock
push
or
and
lock
push
icebp
lcall
mov
xor
or
loope
cmc
sbb
and
jne
mov
mov
jnp
lock
scas
sbb
or
jge
int3
fcomi
dec
bound
popf
mov
add
jp
pop
mov
subl
jmp
push
mov
mov
ret
mov
aad
mov
mov
xchg
inc
xchg
lods
sahf
sub
xchg
test
adcb
out
add
push
pop
push
jp
test
sub
dec
adc
and
cmc
clc
jge
jae
add
orl
mov
xor
sub
cmpxchg
or
sub
enter
dec
outsl
dec
mov
push
cmp
insl
ret
pop
ja
aaa
lret
mov
pop
call
rorb
mov
idivl
push
mov
int
mov
lahf
sbb
jge
mov
inc
pushf
in
sbb
dec
adc
push
and
push
cmc
sub
dec
rol
sbb
sub
add
bound
lea
mov
ds
popf
cmpsl
xor
push
ret
ret
sub
xchg
xor
testl
stos
les
pop
mov
sub
divl
icebp
outsb
fnstsw
dec
loope
nop
mov
sbb
mov
lret
inc
mov
pushf
aad
mov
mov
mov
mov
fstl
repnz
add
je
push
pop
aas
add
fptan
mov
popf
test
mov
in
push
sub
jp
in
subl
loop
das
pop
js
adc
iret
pop
push
or
inc
movsl
setae
inc
pop
add
scas
push
lahf
ret
add
movsb
imul
fisttps
xchg
mov
fstpl
adc
jmp
daa
cmpsb
or
mov
vcvtsd2si
imulb
stos
jg
jno
pop
push
test
test
xchg
xor
xor
out
imul
popa
fs
dec
adc
insb
jnp,pn
pop
daa
rorb
pop
cmp
adc
into
xor
mov
clc
xor
int
mov
ret
mov
loopne
sub
scas
sbb
into
out
int3
jb
adc
cmp
xchg
mov
inc
sbb
add
movb
aad
aas
loop
imul
push
gs
aam
add
push
das
jno
inc
daa
js
cli
mov
dec
inc
cmp
mov
xor
inc
lods
xchg
pop
lret
jo
daa
movsl
add
lahf
ljmp
mov
push
sti
sbb
inc
shlb
dec
pusha
gs
pushf
xor
push
xchg
insb
fs
dec
outsb
push
push
aas
add
pop
adc
xor
loop
ja
dec
add
jne
aad
push
or
adc
push
xor
jo
cmp
out
jbe
popa
mov
push
and
out
mov
movsl
pop
rclb
add
add
xchg
in
imul
out
rcrb
mov
insb
gs
das
int
sub
or
insb
iret
bndmk
jae
pop
xchg
mov
push
int
jns
loop
mov
xchg
mov
js
mov
stc
mov
icebp
daa
mov
and
cmp
out
lods
mov
mov
xchg
aam
std
stc
divl
and
lock
xchg
mov
jp
xchg
scas
daa
in
scas
out
adc
loope
mov
stos
cmp
sbb
sub
aad
adc
jle
mov
notl
inc
pushf
inc
and
sbb
inc
jp
pop
pop
or
jg
stos
outsb
add
mov
outsb
dec
out
cmp
mov
dec
sub
imul
jle
push
inc
fists
adc
dec
jl
inc
xor
repz
fcompl
aaa
jb
mov
xor
mov
flds
jmp
movsb
outsb
push
pop
inc
add
aaa
fsub
and
dec
int
xrelease
mov
aas
lods
jo
jg
dec
xchg
push
mov
xchg
lods
jnp
dec
xchg
hlt
push
stc
adc
lret
add
mov
fcmovne
lahf
test
cmp
loopne
lock
and
mov
fstps
mov
rcr
mov
dec
pop
mov
out
arpl
adc
imul
mov
cltd
in
pop
pop
xchg
js
addb
stos
outsl
cmpsl
loopne
pop
fxch
sbb
mov
and
sub
pop
bound
in
push
and
lds
and
inc
test
cmp
sbb
pop
cmp
negl
sbb
outsb
mov
push
xor
dec
lea
cli
rcrb
sbb
adc
mov
roll
loope
icebp
jae
adcl
and
push
shll
jno
addl
mov
roll
loope
icebp
jae
adcl
and
push
shll
jno
addl
mov
roll
loope
icebp
jae
adcl
and
push
shll
jo
addb
adc
inc
rcl
loope
icebp
mov
jl
cmp
dec
fldcw
sbb
or
push
lods
pop
aad
stos
push
mov
loope
pop
call
sub
pop
test
cmp
pushf
push
lods
pop
fsubrl
int3
cmp
or
sbb
or
cmp
sub
pop
test
mov
pushf
push
lods
pop
fsubrl
int3
cmp
or
sbb
das
clc
dec
lods
dec
fcomps
xlat
aas
cli
add
daa
mov
out
fistl
shlb
aam
daa
lock
sub
outsl
xor
jae
inc
cs
cmpsl
fsubrl
add
mov
leave
rcll
fisttpll
fdivrs
push
mov
push
jmp
mov
or
js
ja
adc
stos
pop
mov
xor
movsl
xchg
out
xor
mov
dec
inc
test
adc
cmp
push
cmpsl
and
in
sub
sbb
aaa
cmpsl
sbb
int3
inc
xorl
mov
cs
mov
pop
jge
clc
pop
popf
dec
clc
int3
fadds
mov
pushf
outsb
cltd
pop
push
lods
pop
fsubrl
int3
cmp
or
sbb
or
cmp
sub
pop
test
mov
stc
pop
out
js
and
xor
inc
push
mov
imul
ljmp
sub
jg
sbb
imul
lret
sub
adc
and
cltd
sub
cmp
or
sbb
or
cmp
sub
pop
test
mov
pushf
push
lods
pop
fsubrl
int3
cmp
or
sbb
or
cmp
sub
pop
test
mov
pushf
push
rcrl
or
test
fbld
jne
jge
inc
fucomp
pop
ja
dec
jg
dec
pop
mov
add
les
jl
sub
test
adc
push
push
push
sbb
mov
ret
jecxz
xchg
mov
and
add
movsl
jge
xchg
movsb
dec
cmp
push
js
sbb
pop
add
outsl
sbb
xlat
and
cmpsb
mov
lods
push
mov
out
add
mov
in
scas
dec
cmp
and
pop
mull
adc
stos
inc
inc
pop
xlat
rolb
pushf
scas
sub
pop
stos
jmp
movsl
loopne
loop
andps
fcomp
push
shlb
push
dec
mov
xchg
mov
jmp
out
outsb
fwait
pusha
cmpsb
iret
das
sub
mov
call
popf
loop
fwait
push
add
sub
cli
inc
push
sahf
mov
push
jae
mov
mov
int3
out
outsl
pop
mov
push
dec
cmp
inc
inc
out
mov
test
adc
into
push
pop
test
dec
cltd
mov
in
and
shll
sub
cltd
or
out
pop
mov
xchg
enter
dec
push
ljmp
fwait
sbb
mov
das
out
add
cmpsl
in
ret
xchg
outsb
fsubrl
and
rol
mov
mull
lds
push
call
cmpsl
jns
or
rolb
imull
insb
sbb
stc
das
inc
lcall
mov
out
aas
and
adc
out
je
jnp
inc
dec
shr
fcoms
sub
sub
cmpsl
push
lods
hlt
dec
ret
in
pop
cmp
xor
dec
and
sbb
aam
scas
sti
inc
sahf
cmpsl
fildl
jns
popa
ficoml
jl
loop
pop
mov
andb
inc
and
push
fisttps
fnsave
lds
imul
out
in
sub
mov
mov
repnz
in
cs
sbb
mov
lret
cmpb
adc
addl
aaa
adc
loope
sbb
imul
lds
mov
xchg
add
cwtl
enter
aad
xor
in
lds
icebp
loop
add
fwait
loopne
xchg
movsb
icebp
out
cmpsl
lret
test
mov
outsb
xchg
mov
mov
lods
jb
mov
fldenv
inc
add
push
jg
fldenv
or
bound
mov
lcall
scas
xchg
int
jle
inc
scas
mov
mov
in
push
lods
sbb
es
mov
test
or
mov
push
sub
arpl
pushf
jbe
jae
repz
in
jp
js
arpl
sti
adc
jl
sub
int3
mov
mov
push
pop
scas
movsb
mov
rorb
pop
push
pop
test
xor
lods
sbb
pop
and
in
sbb
filds
xchg
in
inc
xchg
arpl
mov
rorb
cmpsl
jns
out
inc
sub
mov
jge
pop
inc
mov
stos
aas
into
in
stos
pop
mov
sub
loop
ret
dec
and
and
mov
xlat
xlat
sub
jge
loopne
push
stos
pop
inc
pop
sbb
push
scas
cltd
inc
fdivs
xchg
das
mov
xor
rorb
movsb
test
push
pop
jae
push
xor
mov
inc
pop
pop
jae
les
cli
jo
adc
dec
in
adc
std
stos
xor
add
or
jp
add
ja
push
aas
jmp
repnz
test
sub
fists
pushf
cld
std
mov
jecxz
push
and
cmc
rcr
sub
mov
aaa
shr
lods
mov
lock
fstps
mov
lret
int
repz
jge
lods
aam
jb
pop
jg
jnp
inc
xor
xchg
inc
inc
out
mov
lea
sub
jns
fwait
popa
loop
mov
mov
or
scas
add
aad
inc
and
sbb
sbb
inc
xor
js
jge
mov
jge
std
adc
jecxz
fdivp
jp
sbb
adc
movsb
lods
jg
jo
push
dec
mov
rorl
xchg
cwtl
cwtl
sbb
cmpsl
dec
and
adc
and
sbb
les
jb
cs
add
mov
xor
xlat
mov
test
rorb
imul
icebp
imul
xor
sti
call
jns
pop
mov
dec
out
ss
xchg
out
pop
push
mov
mov
mov
pop
outsl
push
outsb
mov
aas
out
push
and
xchg
sbb
popf
pop
loopne
arpl
jl
jl
jmp
lods
cli
test
lcall
fwait
icebp
rcll
testl
aad
adc
sbb
inc
ja
inc
repnz
mov
push
test
xor
aaa
sub
xor
gs
nop
roll
jb
add
repz
mov
loop
inc
mov
js
cltd
inc
rorb
mov
out
add
cltd
add
mov
or
sti
das
insl
add
pop
je
add
xchg
jmp
inc
aam
call
mov
mov
fadds
inc
fdivrl
mov
jae
outsl
sbb
or
pop
lods
je
xor
push
mov
das
je
lods
stc
adc
push
stc
js
jo
and
cltd
xchg
cwtl
adc
not
loop
jmp
pop
push
pop
sbb
rcrb
mov
shrl
push
aas
loop
and
test
sahf
out
push
aam
xor
insl
mov
fwait
pop
pop
sub
jo
jecxz
rcrb
dec
and
jmp
js
cs
adc
cmpsb
jnp
int
mov
shl
mov
sahf
mov
sub
fildl
dec
sub
scas
dec
jecxz
push
out
sub
outsb
in
sbb
or
push
jmp
stos
dec
cmpsl
ljmp
dec
dec
fdivr
test
add
testb
sbb
fdivl
aam
xor
add
lds
mov
loop
adc
ret
and
push
jo
inc
and
pop
addr16
out
imul
ffreep
bound
push
pop
mov
cs
fisttpl
out
push
aam
pop
and
mov
rorb
shlb
and
push
jmp
addr16
imul
scas
cmpsl
adcl
ss
addr16
or
add
and
std
mov
test
outsb
mov
mov
sub
mov
and
stos
flds
das
addl
sub
out
cwtl
enter
dec
xor
dec
push
or
scas
jo
idivl
popa
dec
outsb
mov
dec
sahf
inc
inc
cli
jb
outsl
sbb
push
adc
out
jnp
fildll
fcmovnu
in
add
scas
sarl
inc
gs
sbbl
adc
jecxz
mov
cmpsl
push
and
jbe
adc
pop
imul
add
loope
xchg
inc
pop
clc
mov
cmpsl
sub
test
adc
xor
inc
cmp
jmp
cs
dec
xor
leave
mov
xor
cli
adc
movsb
sbb
sbb
addr16
xchg
mov
push
fmuls
addr16
sahf
orb
mov
xor
mov
lods
invd
xorl
sbb
push
ja
mov
mov
mov
inc
xlat
int
pusha
jne
call
aas
xchg
in
jno
je
mov
gs
pop
jbe
push
and
fsubrs
vmovlps
ljmp
pop
push
sub
mov
clc
xor
cli
cmp
mov
or
pop
loope
negl
lods
cs
repnz
push
dec
jl
pop
push
sbb
call
out
into
out
repz
divb
popf
bound
pop
pop
xchg
push
popa
call
int3
ret
aas
push
mov
adc
add
sbbl
add
adc
pusha
sub
add
cmp
mov
xchg
scas
jmp
pop
shlb
leave
hlt
jae
loop
and
jge
xchg
pop
jnp
fwait
std
int3
sbb
rcl
push
and
repnz
into
jbe
mov
fadd
mov
push
cld
int
jne
add
popa
dec
call
clc
cmpsl
fs
or
dec
jae
in
mov
cld
push
cmpsl
adc
loopne
jge
cmp
je
jle
rcrb
ds
or
and
push
inc
inc
sbb
jbe
loope
mov
or
popa
push
push
xlat
push
cwtl
mov
and
lods
cmpsl
rcll
lods
jne
call
dec
ljmp
and
sbbl
dec
mov
lock
sbb
loopne
ss
data16
shrl
leave
lret
cmp
lahf
mov
loopne
mov
insl
fbld
iret
sub
add
sar
and
mov
and
aaa
mov
cmp
adc
jo
lret
dec
mov
out
pop
or
and
add
pusha
int
jne
cmpsl
cmp
cltd
mov
pop
test
dec
ficoml
add
mov
ss
adc
inc
xor
push
cli
jo
add
icebp
xchg
or
xor
testl
pop
icebp
mov
lret
fisttpll
movsb
pop
sbb
xchg
cmp
inc
jns
scas
mov
sbb
std
sbb
sub
iret
sbb
orl
mov
sub
push
cmpb
call
popa
mov
jbe
pop
adc
lds
out
fs
sarb
dec
and
add
push
mov
insl
fs
xor
negb
sahf
fwait
push
pop
iret
gs
lret
jbe
push
test
inc
xchg
mov
dec
rorb
mov
test
mov
sbb
mov
jmp
test
insl
enter
dec
dec
mov
inc
pop
call
call
pusha
stc
aaa
pop
jbe
sub
repnz
loope
in
lret
or
inc
popa
push
push
mov
add
jae
jmp
lahf
scas
rcrb
mov
pushf
stos
and
add
fldcw
dec
mov
lcall
decl
sub
sub
or
mov
ds
lock
push
fistps
icebp
sbb
and
push
dec
mov
adc
mov
cmpl
push
sti
push
pop
lahf
out
jp
xor
xor
sbb
adc
cli
and
js
xor
movsw
xor
push
xor
lahf
cmp
loop
test
xchg
adc
jbe
inc
cmpsl
jae
or
dec
scas
in
and
es
leave
aam
jp
aam
cwtl
shlb
orl
insl
push
andb
mov
mov
jge,pt
loopne
shll
add
pop
pop
pop
out
fs
int
shl
mov
mov
gs
xor
push
xor
dec
xchg
fcmovnbe
idivl
adc
ja
lds
and
andb
pop
mov
frstor
or
adc
ret
notb
rcll
scas
cmpsl
inc
xor
jp
lret
imulb
pop
xchg
jmp
and
push
stc
sub
adc
pop
pop
fnsave
jle
scas
and
repnz
movsl
push
sahf
or
mov
add
sti
test
loop
mov
dec
fmuls
push
lods
xchg
adc
test
lret
popf
fs
ss
xor
jmp
fnstenv
mov
inc
outsb
cmpb
and
icebp
adc
pop
loope
in
adc
test
cmp
add
cmc
sub
test
jmp
dec
mov
pop
pop
or
pop
push
jno
daa
imul
adc
repnz
jmp
loope
sbb
cmp
pop
sbb
jge
mov
popa
addb
ss
mov
loopne
dec
cmp
ret
push
movl
mov
mov
scas
lock
fnstcw
ljmp
fs
in
push
xor
sbbb
sub
stc
inc
test
scas
mov
out
adc
push
jne
adc
and
push
xchg
cmp
imul
es
imul
je
imul
mov
sbb
sub
imull
fisubrs
sub
pshufw
repnz
in
das
mov
test
mov
xor
rorl
add
mov
jmp
push
shrl
sbb
xchg
sbb
inc
iret
adc
xor
mov
jno
dec
mov
mov
add
es
adc
mov
out
imul
sbb
push
clc
jecxz
mov
xchg
pop
cld
sub
pop
lods
out
mov
outsl
mov
imul
fdivrs
int3
repz
pop
xchg
aad
out
pop
loopne
aaa
testl
and
daa
pop
ror
out
leave
out
loop
pusha
sub
xchg
fs
jmp
sub
ret
mov
mov
je
jne
data16
dec
mov
mov
fwait
nop
mov
repz
arpl
mov
jge
cmp
adc
insb
cmpsb
mov
mov
cmc
sub
mov
push
push
xchg
add
mov
lods
mov
outsl
mov
mov
sahf
cmp
jmp
mov
div
mov
int3
or
aam
flds
jle
imul
and
sbb
imul
sub
or
in
mov
dec
aad
inc
std
fildll
sub
or
repnz
enter
pop
fnsetpm(287
adc
xchg
sbb
add
mov
xchg
loopne
or
sar
or
inc
dec
mov
dec
in
sarl
sbb
cwtl
aam
lds
mov
sbb
add
lea
inc
setnp
fs
mov
pop
mov
dec
lret
pop
sbb
mov
adc
fisubl
or
sub
fs
imull
adc
sbb
in
fs
dec
aas
cmp
sahf
in
cmp
push
or
jae
mov
in
out
aam
flds
sub
and
repnz
inc
pop
outsb
sbb
test
sub
adc
xchg
jnp
adc
mov
dec
ljmp
cmp
and
sub
pop
loopne
mov
imul
outsb
cmpsl
xchg
fwait
icebp
rcrl
pop
jmp
pop
fsubl
sub
mov
inc
mov
mov
or
clc
in
rcrl
pop
sbb
cmp
notl
aam
das
pusha
push
jp
or
mov
ffree
cmpsl
ja
ja
or
mov
dec
push
or
fsub
adc
mov
pop
xchg
adc
xchg
or
cmp
jne
pop
xor
push
and
sbb
sub
fstpl
push
xlat
mov
je
cwtl
and
jmp
mov
dec
mov
adc
xchg
and
sub
sti
out
aaa
lods
fcoml
push
add
scas
pusha
ja
cmp
mov
stos
out
cld
mov
xchg
push
test
iret
movsl
imul
push
cmp
push
lods
loope
fs
xor
push
mov
and
test
pop
loop
adc
decb
out
jbe
lcallw
xchg
mov
add
push
addb
xchg
mov
data16
ds
int3
or
xor
xor
adc
dec
fnsave
call
and
shlb
adc
mov
inc
imul
clc
pop
mov
sbb
jne
mov
mov
fdivs
and
push
dec
inc
std
and
pop
cmp
push
imul
shrb
pop
clc
mov
xor
jmp
mov
cmp
lds
xor
leave
mov
or
jns
jo
mov
mov
dec
shl
adc
stos
imull
sbb
mov
cmp
xor
js
ret
push
out
sub
mov
lret
cmp
cmp
mov
int3
mov
sub
push
cmp
lret
pushf
and
jb
pop
ret
stos
lcall
test
call
push
lret
adc
push
insb
scas
insb
jp
frstpm(287
ret
inc
jne
xchg
out
push
in
bound
icebp
jbe
shr
and
jbe
pop
push
pop
fwait
mov
jg
ljmp
pop
pop
push
jne
ror
mov
lods
xorb
outsb
fcoml
orb
jne
cmp
jp
pop
mov
or
mov
xor
xor
cmc
xor
call
fistps
fcomp
cmp
inc
imulb
mov
lock
iret
add
int
pop
fisubrl
and
mov
sub
xor
xor
xchg
mov
lds
cmp
stos
mov
sbb
or
bound
mov
inc
fs
pop
insl
sub
cmp
adc
mov
push
sbb
loopne
xchg
and
cld
pop
cmp
xor
or
add
cmpl
inc
in
jnp
ja
cmp
inc
jl
adc
inc
arpl
cwtl
sub
push
cmp
movsb
neg
loop
dec
push
es
mov
sahf
mov
aas
and
dec
fidivl
loopne
xor
mov
jmp
mov
cmp
pop
clc
push
int3
cli
enter
sbb
pop
pop
rorb
cmp
test
push
sahf
pop
movsb
add
dec
jle
mov
sub
loopne
mov
out
jge
ret
jl
out
repz
and
sbb
mov
xor
outsl
xchg
scas
push
movsb
ss
out
pop
pop
inc
fistl
pop
xchg
push
fld
adc
push
gs
mov
and
outsl
jmp
jo
xchg
inc
dec
and
fwait
and
rcr
dec
sbb
add
dec
lock
daa
lods
or
mov
sbb
imul
xchg
sub
lock
int3
into
scas
pusha
or
arpl
cli
push
mov
jo
xchg
stc
push
xor
mov
or
outsb
sbb
mov
aaa
fnstcw
fdivr
sub
push
fcoml
int
mov
and
mov
inc
fxch
leave
in
push
addr16
loope
das
lods
jns
outsl
mov
int
jo
jne
loopne
in
shr
mov
in
pop
sub
add
jo
push
ds
daa
lock
popf
lahf
lahf
cmc
mov
cmpl
adc
push
outsb
fwait
cmp
test
mov
jle
shll
xchg
in
shll
mov
xchg
testb
inc
cmc
add
mov
xor
arpl
mov
add
out
jns
lods
jo
lret
inc
or
mov
jae
ret
leave
jno
idivb
movl
xlat
int3
enter
and
push
mov
and
dec
sarl
inc
ds
xor
fistpl
or
sbb
lock
js
cmp
ret
leave
into
mov
adc
and
arpl
inc
push
mov
sbb
lods
cmp
dec
and
rcll
add
out
adc
cmpb
loope
test
lods
not
leave
jbe
aad
loope
test
ss
add
lea
push
bound
sbb
push
movsb
divb
faddp
mov
cmp
inc
sbb
xor
pop
cmp
std
push
cwtl
stc
popa
lahf
sarl
xor
movsb
xchg
and
sbb
push
sbb
mov
lds
insl
dec
addl
data16
xor
dec
shll
adc
mov
sbb
leave
sub
jb
inc
mov
pushl
push
xchg
outsl
ss
mov
hlt
inc
daa
inc
incl
mov
ja
aad
into
lret
mov
call
or
call
jnp
jecxz
xchg
jno
lds
in
adc
jle
jmp
sarb
sbb
dec
dec
outsb
xchg
stos
jg
cmpsl
sarl
stos
rcr
ja
xchg
mov
jnp
mov
imul
adc
adc
lock
dec
adc
or
dec
bound
jne
pop
push
fucomip
pop
add
sub
mov
aam
fldenv
shll
in
push
nop
cltd
xchg
add
xchg
cld
imul
loope
popa
inc
push
aas
push
aam
cmpsb
xor
mov
jge
jbe
ds
icebp
test
mov
jg
lahf
xchg
sbb
jmp
dec
mov
jo
mov
inc
dec
jo
adc
mov
sbb
cmp
movsb
enter
or
add
leave
jae
cltd
je
je
jmp
push
mov
mov
pop
and
adc
push
out
test
mov
sbb
stc
pop
inc
and
lods
pop
fsubrl
int3
cmp
or
sbb
or
cmp
sub
pop
test
mov
pushf
push
lods
pop
fsubrl
int3
cmp
or
sbb
or
cmp
sub
pop
test
mov
pushf
push
lods
pop
fsubrl
int
cld
or
sbb
enter
test
mov
pushf
push
lods
pop
fsubrl
int3
cmp
sbb
call
sub
sub
les
ja
adc
xor
xor
fidivs
mov
fcomip
pusha
bnd
addb
pop
mov
inc
shlb
test
and
push
repnz
loop
stos
cltd
lock
fldenv
enter
ljmp
movl
adc
loopne
lds
push
or
test
dec
pop
aad
mov
in
and
xor
lahf
out
incb
cmpsl
loopne
mov
and
pop
out
pcmpgtb
imul
aaa
jo
iret
sub
nop
sbb
sti
inc
xchg
xor
fwait
dec
add
jp
push
lods
les
adcb
dec
mov
jmp
into
fisubrs
xlat
pop
into
jecxz
rolb
xchg
bound
loopne
out
fistps
jl
aad
lahf
loop
in
add
mov
movsl
stc
call
add
mov
out
xchg
inc
ret
xor
cmc
in
jg
in
pop
fdivrl
lods
dec
stos
jne
loope
mov
cmp
push
iret
pop
push
loope
dec
xchg
push
xorb
and
jb
jmp
les
xchg
sub
jp
jno
xorb
lds
cmp
mov
xchg
outsl
rcll
xlat
and
push
mov
ja
stc
inc
roll
cmp
daa
sahf
xchg
jne
inc
fidivl
stos
xor
add
subb
les
add
inc
shlb
lock
add
xor
inc
ret
pusha
loop
adc
and
jb
lock
add
xor
inc
ret
pusha
loop
adc
loop
popf
dec
stos
dec
sbb
shr
cltd
jno
sarl
mov
mov
xchg
sub
jecxz
add
jne
jnp
lret
iret
fisubs
lock
aam
pop
xor
xchg
loop
dec
xor
js
add
cmp
out
arpl
push
pop
rol
xor
mov
fistpll
out
mov
mov
push
push
insl
mov
addb
stos
pop
inc
mov
xor
out
dec
aaa
icebp
adc
mov
fwait
xor
mov
lcall
and
es
dec
cmp
jnp
cmpsb
and
mov
dec
sbb
mov
notl
xor
jmp
test
pop
loope
xchg
sbb
fcoms
push
jae
lcall
cmp
dec
mov
and
mov
push
fistps
push
cmp
mov
jo
incl
mov
pop
scas
dec
xchg
inc
jb
xchg
mov
repz
sti
lods
xchg
in
mov
push
mov
mov
cld
push
sub
insb
sub
xchg
aas
sub
loop
mov
or
aaa
sub
and
mov
lock
xor
pop
fs
add
add
fnsetpm(287
sbbb
shl
out
or
sub
cs
push
mov
ffree
adc
jl
sub
adcb
jnp
in
stc
shlb
stc
mov
cwtl
sbb
xchg
es
call
adc
inc
aas
jecxz
nop
enter
dec
daa
test
dec
lret
mov
mov
adcl
insl
in
cld
mov
inc
dec
xchg
dec
dec
adc
mov
mov
xor
pop
xor
mov
imul
enter
shlb
leave
mov
popa
jne
aaa
push
push
sub
mov
leave
push
movsb
in
subb
andb
mov
mov
fdivs
mov
sub
out
cld
add
out
mov
rorb
fwait
mov
into
mov
rcl
mov
dec
aas
pop
popf
dec
or
out
mov
ret
and
mov
jne
pop
call
scas
lahf
cmp
nop
outsb
cld
fmull
sub
sbb
es
movsb
test
sbb
adc
push
mov
fsubrl
xor
xchg
rcr
xor
pop
outsl
dec
stos
xchg
sti
pushf
sub
je
rclb
fdiv
rcll
adc
out
inc
cmpsb
pop
aam
push
xchg
fwait
rcrl
aaa
adc
xor
bound
daa
pop
stc
cmp
and
outsl
cmpsl
add
ja
xchg
nop
pop
dec
out
pop
cmpsl
jle
subl
jmp
mov
cli
jnp
pop
xor
pushf
pop
mov
movl
adc
loopne
stos
xchg
out
iret
cs
das
out
fs
dec
lahf
jg
into
test
lods
xchg
mov
test
mov
lret
add
enter
insb
rorb
test
lds
and
mov
out
fdivrl
sbbl
xchg
push
movsl
push
lret
and
push
xor
pop
mov
jbe
fnstsw
push
fcomip
sar
lods
push
jno
mov
sbb
ret
in
jmp
xchg
lock
imul
cmp
lcall
mov
gs
dec
mov
ljmp
jmp
pop
stc
enter
adc
insb
push
test
push
stos
jle
mov
push
popf
jmp
jg
shl
dec
push
mov
fwait
inc
fistps
inc
addr16
add
jl
loop
adcb
pushf
out
cltd
hlt
mov
les
sbb
fs
mov
mov
push
jb
es
gs
in
xlat
adc
pop
movsb
js
cmp
mov
and
imul
shrb
test
in
mov
out
sbb
xchg
jns
out
data16
imul
cmp
sub
loope
push
test
test
dec
add
test
jae
repnz
cmpsl
enter
div
je
push
pushf
dec
leave
loope
into
jmp
push
jo
add
inc
and
pop
popa
adc
scas
mov
adc
movsl
out
dec
mov
adc
push
pop
mov
mov
rol
adc
lods
push
mov
lods
dec
or
das
fdivs
mov
stc
in
rcll
fcmovnb
scas
add
xchg
cmpsb
insl
mov
cltd
or
or
push
jge
mov
ja
frstor
xchg
push
adc
jne
ret
push
cmp
jmp
repnz
mov
xchg
shll
cmp
cmp
mov
cmp
mov
hlt
fadds
xchg
loope
mull
cmp
push
dec
jmp
cmp
rcrl
jnp
xchg
lods
jnp
mov
and
scas
sbb
cmp
cmp
les
rcll
movsb
fisttps
adc
jp
cmp
pop
push
push
lahf
mov
mov
nop
lods
cli
test
fmuls
push
jecxz
jg
roll
sub
sbb
inc
daa
daa
pusha
and
sbb
ja
xor
gs
loopne
add
and
pop
in
ss
mov
pop
jno
shll
movzwl
dec
mov
sub
test
xchg
push
cmp
inc
loopne
inc
dec
js
adc
negb
nop
lds
fidivs
inc
jge
lret
pop
shrl
cli
pop
lods
ljmp
cmp
rcrl
push
sbb
adc
or
mov
aas
popa
mov
pop
lcall
outsl
pop
aam
add
addr16
pop
lods
ret
lock
test
sbb
xor
adc
and
mov
pop
jp
jo
and
out
sbb
mov
scas
pop
aaa
out
aam
jl
dec
out
lret
mov
sbb
rcl
psraw
sub
aaa
in
insb
scas
mov
sub
push
insb
mov
fs
sub
sbb
clc
xchg
dec
cmp
rol
mov
xor
nop
aad
mov
mov
mov
outsb
cmp
sub
push
xor
add
in
in
xchg
xchg
sbbb
or
mov
fdiv
push
gs
daa
outsb
mov
jecxz
mov
push
in
add
jb
cmp
stos
pop
imul
sub
lock
and
xchg
inc
dec
enter
jecxz
cmp
xchg
pop
push
pop
repnz
jne
cmpl
push
in
xor
xlat
jg
xorl
mov
ret
add
fidivs
push
pushf
jp
mov
or
popa
aaa
push
bnd
cltd
mov
xor
popl
mov
jnp
inc
mov
repnz
int3
pop
ljmp
sub
jnp
add
shlb
add
rcrl
inc
gs
test
push
cmpsl
inc
inc
leave
dec
xchg
or
adc
repz
aad
popa
cmp
push
mov
addr16
popa
fwait
clc
mov
add
test
jg
or
fsts
mov
div
mov
call
ljmp
add
orl
loope
jmp
and
jg
out
scas
sarb
mov
pushf
adc
enter
mov
cli
dec
push
orb
pop
and
call
lods
sbbb
or
jne
xchg
std
in
adc
xor
cmp
inc
add
stos
data16
movb
add
bound
mov
lea
test
insl
xchg
mov
insb
dec
movsb
inc
inc
add
popa
pushf
push
push
sbb
sti
cwtl
jle
popf
ror
or
shrb
mov
fnstenv
in
hlt
mov
mov
pop
jo
add
or
cmp
cwtl
fisubrl
lods
dec
pop
scas
pop
cmpsb
sub
outsl
inc
inc
outsl
xchg
and
pusha
pop
and
jb
shll
push
mov
cs
loop
push
mov
clc
shrb
ficomps
mov
sti
inc
add
fdivrs
hlt
dec
aaa
out
xchg
inc
sti
aas
jmp
fisttpl
stc
xchg
adc
xor
mov
jge
leave
jb
pop
xchg
mov
cwtl
aam
int
inc
fdivl
lcall
test
loope
test
xchg
loop
mov
inc
xchg
push
push
arpl
pusha
sbb
xchg
iret
in
jl
lahf
mov
sbb
push
mov
bound
rolb
dec
xchg
rcll
inc
lock
enter
shlb
dec
stc
xor
rol
xchg
popa
test
ljmp
test
stos
xor
pop
aaa
or
jecxz
fsts
jmp
out
mov
loope
sbb
pushf
xchg
test
adc
faddl
das
xlat
adc
xchg
sub
mov
cmc
ja
mov
mov
lea
pop
mov
inc
and
xchg
ffreep
ret
lahf
ffree
xor
addl
inc
inc
and
sbb
or
lahf
xchg
shl
adc
clc
pop
pop
jge
pop
sub
cmp
test
movsb
mov
stos
mov
fs
test
cmp
leave
push
push
pop
ret
out
jns
add
test
or
xlat
mov
cmp
ja
adc
into
in
sbb
je
movsb
aas
repnz
mov
cmp
dec
adc
push
mov
xlat
sahf
pop
jl
push
lcall
mov
jno
adc
daa
fdivr
cwtl
imul
or
mov
pop
fnstcw
outsl
lods
cli
add
movsb
xor
adc
sbb
mov
insb
pop
cli
add
or
ret
xchg
xor
lret
mov
into
mov
imul
or
xor
ret
cmp
and
ja
iret
lock
leave
loopne
stos
shll
popf
jmp
inc
mov
iret
jno
add
mov
or
std
push
testl
iret
sbb
xchg
out
ret
pop
jp
push
inc
ljmp
push
push
imul
pop
ret
insb
mov
notb
sbb
dec
inc
int
out
add
inc
lret
lea
pop
cmp
lods
fstps
mov
push
sbb
mov
jl
add
popa
push
lods
add
jae
cmp
outsb
mov
push
stos
pop
lods
lods
es
out
jb
sti
add
xlat
in
int
movsl
shll
out
xor
jmp
pop
mov
incl
cmp
inc
push
push
xor
loopne
das
pop
jno
push
es
fldenv
jecxz
xchg
aaa
add
jle
pop
testl
push
dec
scas
out
mov
jbe
pop
fsubs
push
mov
adc
sbb
sub
inc
idivl
int3
pushf
xchg
push
dec
cmp
movsb
sbb
imul
add
add
mov
mov
xchg
push
xchg
lock
sub
sub
inc
call
inc
cmp
xchg
mov
sbb
insl
cli
mov
mov
stc
sub
and
divl
les
jl
lret
sti
es
sbb
into
repz
push
or
jg
xorb
jge
mov
mov
lods
lahf
sahf
icebp
push
into
neg
mov
das
mov
mov
lock
add
negl
mov
mov
jb
test
adc
pop
push
test
xor
jae
mov
sbb
imul
adc
pop
push
fstpl
add
dec
gs
jno
xchg
out
jg
jno
mov
sub
outsl
fidivrl
jne
dec
dec
mov
rol
lahf
mov
xchg
dec
or
ret
outsl
andb
addr16
xchg
test
mov
lock
cld
fwait
xchg
ljmp
pop
or
xchg
push
dec
mov
ja
push
cli
negl
dec
mov
cmp
jge
lods
ljmp
bswap
lds
inc
mov
hlt
insb
popa
je
das
sub
dec
addr16
loop
and
mov
and
add
int
jge
mov
mov
repz
test
and
and
push
jbe
pop
das
ret
imul
out
aad
ret
xchg
test
xor
push
or
mov
ret
pop
movsb
nop
adc
push
and
mov
mov
cmp
clc
xlat
and
sbb
icebp
mov
sbb
mov
push
or
pop
cwtl
fisubrs
cmpb
xor
sub
jecxz
aas
xchg
xchg
push
pop
sub
idiv
subl
inc
xor
push
in
mov
sub
cmp
mov
ss
sbb
add
lds
mov
inc
xchg
movsl
fimuls
push
fidivl
imul
sub
notb
xchg
mov
notb
jle
imul
push
mov
or
adc
divb
fldcw
pop
pop
mov
in
insl
out
mov
add
cmp
cmp
or
fisttps
in
jg
inc
pop
add
jl
es
fwait
gs
push
popf
push
out
jne
in
ficoms
mov
xlat
lcall
dec
pop
int3
lret
sub
jecxz
test
or
jb
nop
gs
sub
sbb
sbb
mov
inc
stc
xor
fbstp
pop
or
cmp
lds
and
cwtl
das
adc
sbb
add
lea
iret
rolb
and
jle
sbb
leave
mov
leave
inc
dec
mov
pop
sub
push
rep
and
pop
shl
sub
call
mov
sahf
jle
push
dec
test
clc
std
inc
or
rcrl
ds
mov
stos
xor
sti
ljmp
mov
pop
das
popf
inc
cmp
lods
stc
xor
sub
arpl
or
dec
fisttpl
test
repz
push
xchg
int
add
mov
lret
out
jne
inc
std
jae
sub
sbb
or
fdivs
mov
sbb
insl
repz
in
incb
fidivs
ret
xlat
mov
inc
jnp
sahf
lods
mov
cs
lods
movsb
rolb
sbb
mov
das
repnz
mov
jge
sub
push
bound
xchg
dec
bt
mov
test
cli
repnz
jnp
and
insl
test
cmp
cmp
movb
imul
mov
push
xchg
ds
mov
scas
adc
mov
test
dec
test
xlat
sub
js
dec
outsl
in
mov
popa
enter
push
shlb
jl
pop
inc
push
lea
ret
mov
mov
jmp
jl
xor
push
arpl
addr16
jg
imul
adc
push
add
jmp
xor
xorl
pop
sbb
pop
data16
bound
mov
push
inc
adc
and
loop
nop
dec
push
movsl
push
cmp
cld
ss
pop
repz
imul
adc
sub
inc
hlt
xchg
xor
imul
jp
test
jno
jae
fimull
push
pusha
sub
ret
push
inc
loope
mov
adc
dec
and
outsb
bound
xor
popa
lahf
inc
test
or
pop
int3
add
adc
pop
and
push
mov
cmpsb
out
js
stos
sbb
pop
and
pushf
stos
jo
loop
mov
pop
or
sbb
add
lock
mov
add
ret
fisubs
dec
movsb
cmpsl
mov
sbb
dec
ja
sub
out
sbb
cmp
imul
lret
jmp
repnz
stos
cltd
movsb
xor
out
idivb
lret
fstp
sbb
sbb
and
shlb
fs
pop
dec
jg
ret
pop
in
adc
cmp
push
adc
ret
mov
je
sbb
cmp
fstp
int
cmp
pop
lods
mov
test
mov
test
ljmp
fsub
cmp
int
in
sbb
xor
xor
cli
add
cli
pop
testl
adc
pop
jns
in
add
jge
daa
or
xchg
and
stc
mov
push
mov
xchg
inc
and
mov
add
pop
fnsave
movsb
add
imul
sub
push
insl
pop
jmp
pop
je
push
pop
dec
inc
push
pop
mov
test
ljmp
in
push
pusha
mov
bound
cmp
iret
add
xor
mov
jmp
add
cmp
or
adc
mov
cli
xor
mov
jecxz
das
loope
inc
call
jp
in
add
lret
or
mov
ret
test
filds
sub
sub
ss
movsb
xor
call
mov
mov
ficoml
arpl
jg
xchg
sub
jmp
xor
pop
lret
jb
mov
xor
es
aaa
stos
push
daa
push
test
js
in
test
pop
cwtl
jmp
jo
xchg
sub
mov
cmc
xchg
arpl
idiv
push
cli
sub
or
mov
lret
outsb
fisubl
das
add
mov
aad
pop
or
push
popf
bound
stc
xor
fwait
insb
xor
scas
adc
fsubrs
lcall
shl
popa
sbb
sbb
pop
jecxz
push
jns
cmp
dec
fwait
inc
icebp
jl
xchg
sbb
jb
sbb
jecxz
hlt
mov
js
rep
push
sbb
push
out
xor
int3
fcmovnbe
and
sub
xchg
cmp
mov
jnp
xchg
inc
jo
dec
inc
stc
outsl
lcall
pusha
fnstenv
flds
fisubs
push
sbbl
jne
add
mov
ret
xchg
add
inc
repz
ficoml
cmpsb
das
lea
dec
sbb
shrl
out
mov
or
leave
es
xchg
out
cmp
lods
mov
iret
jns
int
push
pop
mov
hlt
adc
mov
push
mov
int3
xor
mov
dec
leave
leave
lock
rorb
scas
pop
dec
xchg
or
sub
rcl
dec
xchg
sub
adc
xor
pop
adc
cmp
cld
and
out
aam
scas
mov
push
mov
xchg
dec
mov
sti
pop
rcrl
xor
je
pop
ss
mov
mov
stos
int3
aad
xchg
jecxz
mov
stc
test
filds
jle
mov
pop
out
int
arpl
shufps
popa
shrb
lds
aas
and
push
test
fistl
lret
xchg
push
inc
daa
pop
push
cs
mov
jno
xor
fdivr
push
mov
repz
sbb
aaa
cltd
das
aaa
xchg
out
sbb
mov
jge
dec
xchg
and
mov
leave
stos
aaa
aam
lahf
mov
das
dec
dec
inc
xchg
xor
xlat
xchg
adc
pop
pusha
cmp
jecxz
cld
test
jl
dec
les
pop
outsb
fs
stc
jg
sbb
dec
jg
inc
mov
and
cwtl
dec
or
add
sahf
lods
dec
dec
fs
sub
addr16
pop
lret
scas
ja
mov
push
pop
inc
stos
addb
lret
pop
mov
inc
mov
xor
outsb
test
fldt
loopne
push
icebp
sbb
test
gs
loop
rclb
shll
inc
jnp
mov
movsb
fcmovnbe
hlt
es
outsb
out
and
fidivrl
inc
pusha
cmp
sbb
fdivrs
insb
adc
orl
pusha
dec
add
imul
int
mov
xchg
add
and
std
sbb
and
fistpl
lahf
stos
imul
jae
pusha
mov
rorb
ret
cmp
loopne
push
dec
movsb
add
or
mov
and
cltd
push
cli
pop
push
inc
pop
ret
loop
cltd
fwait
mov
adc
fcom
sbb
jne
xchg
or
mov
fisttpll
aam
pusha
xor
or
dec
test
stos
mov
pop
or
ja
stos
or
ss
jmp
mov
fmuls
rcll
pop
aam
negl
enter
mov
mov
jbe
push
into
icebp
js
mov
hlt
mov
cmp
cld
sbb
scas
arpl
cmp
xchg
pusha
outsl
stos
mov
mov
jo
stc
movsl
jmp
dec
lahf
xor
out
mov
outsb
jb
popf
jno
and
leave
mov
divb
and
ljmp
mov
shlb
adc
xor
dec
addl
aaa
xor
repz
dec
orb
das
or
loopne
lods
jg
pop
adc
sbb
xchg
lods
or
cmp
push
inc
cmc
pop
sub
in
sub
xorb
ss
push
xchg
sub
jne
test
nop
jne
and
jb
lock
add
xor
inc
ret
pusha
loop
adc
and
jb
lock
add
xor
inc
ret
pusha
loop
adc
and
jb
mov
adc
mov
push
repnz
pop
xchg
push
rclb
loopne
xor
and
das
or
ret
mov
mov
mov
mov
pop
outsb
std
jle
dec
int
int
cmp
sahf
or
into
pop
fimuls
mov
push
lea
fstpl
scas
and
sub
out
fs
jne
inc
ficoms
pop
sbb
lea
adc
icebp
cmp
xacquire
xchg
jne
mov
icebp
xchg
cmp
pop
and
out
xor
icebp
adc
xchg
xor
and
sarl
loope
xchg
js
mov
inc
mov
mov
imul
andb
and
or
in
add
sub
pop
int
insl
mov
cmp
dec
add
mov
jb
scas
ds
push
imul
loop
in
mov
xchg
dec
or
push
lea
fstpl
push
xor
dec
sbb
or
inc
addr16
jns
into
mov
ds
repz
or
bound
sahf
pop
out
jge
insl
into
inc
ficoms
ds
test
xchg
outsb
in
cli
dec
fstpl
out
pop
lret
sbb
or
sub
cs
aad
enter
nop
jle
sub
inc
fldt
out
push
mov
and
outsl
int3
or
push
into
outsl
adc
lret
jl
dec
loope
bnd
adc
insl
into
pop
fimuls
mov
push
lea
jle
dec
fstpl
scas
cmp
sahf
or
into
pop
fimuls
mov
push
lea
jle
dec
fstpl
scas
cmp
mov
adc
or
sub
or
xchg
les
movb
xor
xor
push
adc
cmpsb
jno
sahf
or
das
and
xor
call
sub
xor
jle
jp
push
out
dec
neg
gs
sti
out
pop
je
roll
xchg
jge
push
cmp
lret
dec
inc
and
das
mov
dec
hlt
sub
cmpsl
fwait
cs
and
and
fisubrs
xchg
cmp
push
inc
sbb
cs
fs
test
pop
int
sbb
sub
add
pop
or
imul
push
das
int
je
sbb
mulb
mov
push
or
dec
add
inc
jns
ss
jg
out
sbb
test
fstpt
ret
pop
loop,pn
into
fdivrl
cld
sbb
shlb
ljmp
aam
movsl
pop
mov
imul
sar
mov
mov
notb
and
xchg
mov
sub
jge
fcmovbe
das
loopne
sbb
lahf
or
mov
sbb
test
je
jo
pop
notl
jg
jp
inc
mov
aam
jae
cwtl
stos
push
addr16
jecxz
cmp
outsb
sti
shr
add
mov
daa
pop
pop
xchg
jle
shrl
push
lock
mov
repz
shlb
inc
inc
icebp
cmpl
xchg
push
cmpsl
sub
jnp
les
dec
nop
cltd
sub
jno
inc
loope
cmp
jecxz
xchg
fmull
mov
sub
xor
rcrl
fcoms
jae
ljmp
push
pop
adc
xor
pop
mov
mov
or
dec
xor
fdivrs
gs
cltd
cltd
lea
xchg
repnz
mov
mov
fsubl
jg
pop
fs
xchg
mov
aaa
popf
sbb
in
push
pop
test
ljmp
in
hlt
xor
gs
out
nop
jnp
fiaddl
inc
push
mov
fmull
loopne
push
add
sub
xchg
jecxz
jecxz
push
inc
mov
dec
ret
subb
jb
je
test
aad
dec
fincstp
gs
mov
adc
sub
xlat
popa
xor
pusha
pop
sub
repz
rclb
jo
sub
out
or
test
nop
xchg
sub
xchg
mov
stc
mov
in
js
out
lcall
aam
mov
lret
sbb
xor
ret
in
int
push
cltd
leavew
mov
mov
sub
add
in
mov
and
inc
inc
js
enter
add
ss
mov
ficoms
lret
mov
mov
dec
push
cs
mov
pushf
or
sbb
out
jnp,pn
dec
stc
inc
dec
inc
xchg
jmp
cmpsl
or
iret
or
subb
lahf
sub
jno
les
dec
push
mov
lods
push
jg
mov
mov
mov
or
leave
imul
sbbb
leave
adc
sub
lret
mov
push
sub
xchg
pop
and
cmp
adc
sbb
outsb
cmpsb
out
scas
lea
jns
adc
divb
sbb
je
push
push
mulb
repnz
sti
jge
xor
push
xchg
adc
int3
ret
cli
inc
dec
xor
enter
lcall
add
loopne
add
dec
nop
rcr
mov
dec
int3
jb
lcall
or
sarb
mov
adc
push
int
inc
dec
add
mov
inc
movsl
es
inc
call
and
xor
sbb
pop
pop
mov
std
pop
sahf
cmc
ret
clc
mov
jmp
pop
jns
ja
int3
push
and
mov
pcmpgtd
and
mov
xchg
test
xchg
out
adc
out
mov
repnz
inc
mov
ret
jae
shll
addb
in
push
sbb
dec
add
scas
out
push
xchg
xchg
cltd
xchg
rclb
and
mov
test
out
test
and
movsb
lock
jg
jns
push
xchg
jmp
ret
sahf
dec
mov
in
ljmp
in
or
bound
mov
lods
in
pop
dec
mov
fs
nop
xor
jmp
push
std
test
and
mov
cltd
push
enter
jle
push
dec
pop
jo
stos
loope
insb
mov
leave
sub
mov
add
sbb
insb
xchg
add
jmp
cpuid
xlat
inc
xchg
std
pop
stos
jl
es
jp
mov
stos
in
pop
das
mov
sub
pop
out
mov
inc
fistpll
jno
addb
lods
mov
cmp
je
incl
pop
popf
in
inc
xchg
out
mov
bound
aad
out
mov
mov
jmp
in
mov
es
out
jno
daa
push
lret
mov
jle
call
jb
jae
lahf
out
sub
adc
nop
mov
inc
inc
add
ja
test
pop
les
movsl
cltd
lcall
pushl
mov
in
sbb
leave
inc
pop
dec
pop
loopne
inc
loope
and
ficompl
subb
arpl
mov
outsl
jmp
jne
mov
push
ret
mov
movsb
sti
add
repz
loop
popf
insb
stc
sti
lods
lock
das
add
std
imul
mov
lods
cmpsl
cmp
pushf
sbb
dec
rorl
mov
popa
jl
cmp
in
mov
cmc
xchg
loopne
cli
scas
pop
pop
outsb
divb
mov
sbb
cwtl
mov
lods
mov
cltd
je
stos
sbb
and
setb
in
inc
mov
in
pop
leave
mov
stos
stos
sarb
push
push
adc
sbbb
mov
push
outsb
add
loope
in
cltd
inc
out
add
lea
outsb
jge
mov
fdivp
jecxz
pop
mov
leave
sar
cli
mov
cmp
mov
cmp
mov
imul
xorl
fsubrs
shrl
fnstcw
pop
in
frstor
ret
imul
clc
pop
and
cmpsb
xchg
fwait
les
dec
dec
inc
imul
js
stos
and
notl
xchg
data16
cmp
lods
xor
fs
cmp
orl
or
jne
or
test
dec
cli
mov
xchg
ss
je
push
fwait
out
inc
xor
mov
subb
dec
gs
out
addr16
insl
nop
les
pop
ss
jmp
add
or
sub
inc
jbe
mov
int3
push
and
mov
test
mov
push
hlt
cwtl
or
pop
fcmovnb
adc
mov
dec
dec
pop
movsb
mov
xchg
add
jecxz
cmp
cmp
mov
pop
scas
inc
out
orb
in
xor
cmc
xchg
mov
mov
mov
jecxz
mov
clc
push
sti
inc
inc
add
repnz
dec
jb
daa
daa
dec
pop
or
sbb
mov
fidivl
and
jp
jp
stos
mov
push
add
push
loopne
dec
jg
ja
inc
rorb
and
sbb
pop
in
jp
outsl
orb
push
hlt
incb
mov
adc
mov
xchg
bnd
sub
shl
jo
jecxz
xchg
jle
aam
clc
xor
pop
out
loope
into
hlt
or
js
pop
in
add
jo
dec
jmp
mov
scas
loopne
xlat
mov
mov
mov
mov
sbb
mov
out
aam
arpl
mov
imul
dec
mov
repnz
sahf
stos
movsl
jae
pop
test
lcall
xchg
mov
inc
je
dec
daa
jge
add
es
mov
mov
cli
push
cmpsl
ja
xchg
add
mov
sub
jmp
mov
jle
push
sbbb
les
cld
mov
cs
dec
mov
mov
icebp
lock
in
movsl
jmp
setl
push
pop
jp
xchg
mov
aaa
pushf
test
jge
push
push
push
in
movsb
add
imul
xlat
jp
aam
inc
pushf
mov
sbb
in
into
xchg
stc
loope
push
movsl
push
aam
pop
push
addr16
sbb
mov
jecxz
cmp
and
mov
dec
pop
jl
movsb
push
adc
push
jecxz
and
push
jp
movl
push
imul
lcall
mov
cmp
or
mov
inc
sub
or
std
push
stos
les
mov
add
adc
mov
arpl
push
mov
test
jo
add
lea
pop
test
test
test
js
pop
adc
jae
sbb
adc
pushf
xchg
js
test
mov
ds
negb
leave
cmpl
sarl
mov
fstps
repnz
and
icebp
hlt
adc
cs
pop
cwtl
lret
push
rcrb
pop
cs
sbb
xchg
cmpsb
repnz
sti
les
mov
cmpsb
mov
push
and
and
adc
stos
data16
jp
fsubr
and
and
xchg
pop
insb
cli
sub
push
mov
cmp
mov
or
jno
pop
scas
mov
orl
mov
dec
stc
dec
sbb
icebp
mov
xchg
mov
sahf
and
sub
loopne
mov
xor
mov
inc
add
fisttpl
loope
cltd
sbb
push
mov
or
xor
and
push
mov
lret
mov
cmp
ss
int3
pop
loopne
ds
sti
push
push
cmp
add
gs
mov
jae
je
jmp
call
xor
mov
mov
cmc
out
mov
push
call
movntps
loop
test
test
dec
pushf
test
mov
cmp
adc
mov
xchg
icebp
in
push
mov
lock
movsb
mov
push
test
xchg
mov
lea
outsl
in
test
pusha
jbe
push
mov
xlat
dec
lods
loop
and
fsubs
out
adc
lret
sub
shrl
scas
cmp
icebp
int3
js
into
imul
pop
xchg
or
inc
xchg
jns
incb
pusha
mov
mov
pop
ficomps
mov
dec
add
hlt
jl
out
mov
mov
repz
fwait
movsl
mov
adc
imul
into
loop
dec
xchg
dec
xor
jl
push
popa
xchg
cmpsb
out
cld
mov
sti
add
arpl
repnz
mov
mov
addr16
outsb
add
fdivrs
dec
dec
ds
xlat
sbb
inc
iret
fistl
dec
mov
ficompl
mov
mov
xchg
mov
sarb
dec
jo
hlt
add
inc
lock
push
test
sub
cmp
cld
xchg
jl
out
sub
fucomi
and
test
mov
cmp
and
out
sti
push
pop
cmp
adc
xor
in
fcomi
mov
xchg
lret
or
sbb
jbe
subl
test
stos
fisttpll
inc
push
cltd
dec
sbb
fstpl
mov
cmp
test
xor
or
or
sbb
enter
cmp
pop
pop
insl
mov
sbb
sbb
in
mov
fs
cmp
nop
sarb
jnp
int3
loopne
loop
or
pop
pop
sub
push
int
dec
pop
xor
add
aas
adc
jno
repnz
mov
mov
add
scas
mov
cld
xlat
push
adc
in
ret
pusha
scas
lcall
jp
pop
fldcw
aaa
arpl
negl
sbb
inc
add
sub
mov
xchg
addr16
data16
addb
sub
shll
add
insl
lock
jmp
sub
cli
ret
sbb
mov
pop
je
movsb
hlt
or
push
push
es
je
mov
jne
pop
sbb
xor
shr
add
sub
repz
adc
and
xchg
rclb
or
and
lahf
mov
test
fistpll
ds
cmpsb
mov
jno
out
mov
xchg
inc
dec
int3
mov
lock
add
aam
xchg
fisubl
mov
stc
int
push
jnp
push
sub
add
scas
pushf
sbb
dec
xchg
sub
bound
xchg
das
dec
sti
in
push
push
mov
in
movsb
out
in
js
dec
in
inc
loop
std
xchg
pop
pop
sbb
fisttpl
jb
adc
arpl
pop
inc
jns
jle
push
orl
inc
fnstsw
sbb
mov
iret
cmp
arpl
cmp
insb
inc
mov
jae
pop
push
mov
pop
jne
sarl
orl
add
lahf
mov
test
push
sahf
in
push
aas
iret
push
add
or
in
mov
sub
xlat
adc
cmpsb
test
orb
in
xor
jae
jnp
push
add
mov
idivl
or
dec
stc
mov
movsb
mov
dec
addl
sbb
out
sbb
xchg
clc
cs
xlat
mov
mov
leave
and
push
push
pop
shll
addr16
mov
sub
test
sub
mov
lahf
mov
in
cmpsl
into
mov
aaa
pop
scas
icebp
out
stos
aad
inc
jp
sbb
jne
cld
jmp
fadds
imul
jno
addr16
cmpsl
xchg
mov
xchg
jbe
mov
or
test
mov
or
lahf
and
adc
or
lahf
aam
out
jle
stc
push
cmp
sti
sub
int
add
scas
xor
jb
mov
xchg
cmc
out
les
jecxz
popa
mov
pop
mov
mov
insb
cmc
or
mov
cs
inc
jmp
repnz
adc
rcrb
das
mull
sub
sbb
jbe
dec
fistpll
lods
jle
rcrb
or
or
mov
mov
xor
popf
or
jmp
adc
or
pop
ret
mov
push
daa
aaa
in
pop
xchg
into
jae
adc
cmp
aas
out
pop
arpl
in
jg
xchg
outsl
mov
pop
lea
imul
sbb
adc
mov
and
shll
adc
fmul
push
loope
scas
sahf
lds
jns
mov
int
and
mov
js
lds
cld
jae
ud2
cmp
cmp
and
mov
sbb
inc
loop
scas
pop
xchg
xchg
fimuls
mov
rorb
rclb
int3
mov
mov
dec
inc
cltd
sbb
or
adc
and
das
inc
test
or
lcall
or
enter
arpl
sti
xlat
cs
mov
fldl
and
inc
call
inc
mov
fadds
adc
jnp
roll
pop
jle
in
orb
dec
inc
aas
xchg
incb
ja
fistps
jae
pop
mov
rcrl
stos
cld
pop
lea
pop
aad
or
xchg
loop
xchg
cltd
pop
xchg
ss
mov
insb
and
sahf
pop
popf
mov
jmp
and
mov
push
mov
sbb
cmp
jb
adcl
jae
loope
lcall
add
hlt
cmp
mov
xor
call
lret
scas
and
lcall
test
inc
insb
stc
std
in
mov
clc
leave
shrl
dec
out
and
sub
add
xlat
jno
fs
out
fs
xchg
cli
outsl
cmp
mov
in
xchg
dec
cmp
das
sub
aaa
push
roll
in
xchg
cmc
mov
into
jmp
dec
push
iret
int
cmp
dec
insl
jge
jmp
in
jmp
ficoml
inc
xor
cs
push
mov
sub
sbb
stos
pop
push
push
and
cld
inc
jge
pop
scas
xor
jns
xchg
and
aam
je
lcall
imul
dec
lds
inc
movsl
push
cli
adc
dec
push
xor
loop
sub
or
imul
cwtl
pop
pop
es
sbb
test
mov
or
inc
es
psrlw
pop
lret
lds
xchg
movsl
repnz
aam
push
into
dec
outsb
out
xor
fdivrl
xor
or
mov
dec
aam
jp
xchg
jle
push
inc
and
cmp
jl
cmc
add
pop
iret
outsb
fnsave
mov
mov
cltd
cmpsb
mov
cmp
pop
push
pop
jl
ja
xchg
gs
pop
cmp
sub
or
lods
add
mov
es
in
inc
fs
sbb
mov
mov
dec
dec
push
sub
and
mov
xchg
adc
out
jne
decb
sar
std
aad
ret
cmpsl
cmpsl
bound
ret
pop
jae
mov
jo
outsl
mov
ja
jge
loopne
xlat
and
lahf
test
cmp
pop
cmp
xchg
mov
and
adc
xchg
cmp
out
in
adc
aam
add
in
iret
pop
iret
push
out
imul
mov
adcl
popf
call
fcomps
je
cli
test
out
adc
mov
js
add
cmp
je
adc
xor
push
icebp
mov
add
mov
aas
stos
fbstp
or
and
xor
add
lds
lds
cmp
push
cwtl
push
add
xor
mov
xchg
inc
scas
adc
sbb
ljmp
adc
and
or
aaa
mov
mov
cld
bound
and
aam
inc
or
les
push
gs
iret
xor
popl
adc
xlat
into
fldcw
mov
shlb
xchg
or
pop
aaa
or
dec
icebp
mov
test
pop
and
test
push
movsl
lods
hlt
or
xchg
mov
push
fildl
sub
mov
fildll
xchg
dec
add
jle
movb
xlat
cli
rcll
inc
lock
xchg
xor
push
aas
fildll
and
pop
cld
dec
hlt
cltd
pop
lcall
sti
nop
stc
push
xor
jb
shlb
scas
pop
dec
push
rolb
mov
xchg
jmp
dec
rorb
sub
es
push
and
cmp
inc
cltd
leave
mov
dec
jo
lea
cmpl
xor
pop
or
and
cld
int3
sub
inc
sub
pusha
in
frstor
sub
inc
mov
sahf
mov
out
mov
inc
mov
xchg
sbb
cmc
mov
in
data16
or
xor
dec
cmpsb
orl
daa
pop
int
or
enter
sbb
push
jge
pop
popa
inc
leave
jne
or
pushf
loop
pusha
imul
push
xchg
push
or
test
addr16
sbb
and
inc
lcall
xchg
icebp
in
sahf
lods
ret
and
pusha
rcr
fistpl
xor
sbb
push
test
lds
call
push
enter
mov
mov
pusha
decl
push
lea
jne
dec
in
and
cmp
mov
push
clc
jnp
mov
mov
cwtl
jmp
aas
or
in
aas
add
dec
hlt
movsl
ret
icebp
enter
sbb
cmpsb
in
es
fisubl
out
arpl
push
jg
stos
sub
mov
fsubl
ds
test
lods
stc
xor
dec
insl
es
adc
push
in
fs
add
dec
gs
or
jl
ljmp
mov
cmc
inc
mov
cltd
mov
test
pusha
pop
push
clc
mov
mov
outsl
jl
cwtl
test
inc
push
push
push
inc
mov
psllw
xor
xor
divb
mov
popa
sbb
jae
sahf
mov
les
test
pop
sub
std
xor
pop
lock
lock
jno
popf
jmp
lret
mov
dec
lret
cs
mov
xchg
push
inc
mov
pusha
rcr
push
sbb
orl
fs
xchg
xor
mov
addr16
aas
mov
sbb
into
in
inc
fists
outsl
xor
gs
jecxz
cwtl
scas
mov
pop
add
xor
sti
xchg
outsb
mov
addr16
sahf
cmpl
jge
test
jge
push
pop
rcr
popa
mov
lods
scas
mov
add
fcmovbe
call
bound
shrl
mov
sub
cltd
inc
sub
jge
aaa
pop
fsubr
das
mov
std
aaa
push
jb
enter
xchg
adc
cmp
or
sahf
popa
mov
repnz
xchg
pusha
imul
xor
cs
push
and
imul
jle
cli
mov
in
pop
adc
jl
repnz
or
into
pop
fimuls
mov
push
lea
jle
dec
fstpl
scas
cmp
sahf
or
into
pop
fimuls
mov
push
lea
jle
dec
fstpl
scas
cmp
sahf
or
into
pop
pop
dec
cs
push
mov
jle
dec
fcompl
scas
cmp
sahf
or
into
pop
fimuls
mov
push
cli
push
jne
adc
and
xor
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jge
insl
jmp
fisttpl
mov
inc
enter
mov
xor
int
mov
sbb
jmp
fisttpl
cmp
fwait
or
imul
ret
dec
mov
sbb
jmp
fistl
and
xor
mov
jnp
dec
subb
sub
jne
js
mov
mov
outsb
fwait
sub
add
push
push
push
xchg
xchg
xor
nop
mov
arpl
mov
cwtl
cmpl
xor
in
cmp
pop
cmp
out
mov
int
mov
sub
sub
inc
sbb
sahf
lea
xchg
repz
test
xchg
call
cmp
or
mov
and
std
stos
std
test
daa
fsubl
sub
popf
cmc
xchg
jle
data16
mov
ret
arpl
xchg
add
cmp
cmp
js
sbb
jmp
fisttpl
sub
adc
in
cmc
imul
aam
movsl
cmp
bound
decl
stos
cmp
cmp
dec
fimuls
push
fisttpll
push
ds
dec
out
loopne
adc
cmp
out
repnz
out
mov
or
jmp
jmp
mov
jne
sub
mov
jnp
imul
int
mov
sbb
jmp
fisttpl
cmp
fwait
or
imul
int
mov
sbb
and
or
dec
inc
pop
adc
leave
fcoml
shrb
inc
in
test
insl
jno
sub
jo
out
sub
jl
push
cmc
lds
jnp
inc
xchg
out
arpl
ja
xchg
je
insb
je
dec
pop
int
stos
sarb
movsb
cmovo
inc
and
lret
add
lods
rorb
scas
add
or
add
xchg
leave
mov
outsl
fadd
sub
lahf
and
add
jg
and
mov
divb
mov
jge
inc
ja
add
nop
xlat
enter
dec
repz
lods
outsl
ret
jne
addr16
sarl
test
divl
enter
adc
xor
push
icebp
xchg
loopne
xchg
movb
and
mov
adc
mov
imul
fistpll
pop
or
inc
and
sub
xchg
in
bnd
xchg
aad
repnz
push
jl
dec
xor
adc
cs
or
mov
mov
sub
les
mov
sub
or
sbb
iret
rclb
lods
mov
std
stos
in
xchg
cmpsl
mov
sti
xor
inc
cmp
or
add
xchg
sbb
jnp
repz
insl
in
int3
jne
scas
or
dec
sub
adc
out
movsl
mov
test
sub
add
stos
xchg
stos
pushf
and
fstpt
pop
sub
les
lods
push
sbb
addr16
scas
mull
pop
enter
sub
test
dec
fs
adc
push
mov
jp
sub
imul
dec
dec
jo
outsl
outsb
test
scas
jp
popf
js
xor
mov
stos
rcr
push
pop
je
xor
xchg
adc
je
iret
bound
cmp
das
loop
scas
mull
push
push
inc
push
cmp
xor
mov
push
fsubrp
and
xchg
stos
xor
daa
mov
xor
jae
add
icebp
mov
lahf
mov
or
out
sub
fmull
push
add
imul
lds
fmuls
outsb
aad
pop
stos
aaa
ds
jmp
dec
mov
sbb
adcb
pusha
stos
pop
and
in
loopne
loope
add
insb
inc
adc
mov
pop
and
movsb
rolb
insb
scas
loopne
dec
jmp
mov
jle
aad
inc
das
inc
stos
scas
das
std
mov
nop
sbb
mov
fdivrl
jecxz
push
fsubp
fcomp
lret
pop
inc
sub
mov
clc
sub
push
popa
xor
adc
add
idivb
test
leave
dec
push
lcall
mov
mov
mov
in
leave
insl
jmp
jbe
xchg
pop
dec
ss
inc
fldenv
sub
subl
and
imul
inc
or
mov
xchg
jle
cmp
inc
and
clc
and
mov
and
lods
jae
pop
je
sbb
fldl
fmull
cli
insb
dec
push
in
ja
jne
enter
data16
or
in
test
std
xchg
imul
mov
imul
inc
aaa
pop
xor
aaa
adc
jns
push
enter
jle
jno
mov
pushf
mov
pushw
popf
add
jl
pop
shrl
orl
xchg
aad
loopne
popf
mov
and
xchg
push
cmp
std
enter
outsl
out
xlat
dec
aam
push
sbb
jp
xchg
or
outsl
xchg
out
push
cmpsl
push
shll
and
add
pop
push
fsubr
nop
push
pop
jns
or
sbbb
stc
and
lods
cs
fisubs
adc
xor
fildl
xchg
dec
inc
mov
xor
sbb
xchg
stos
or
xor
mov
or
sub
loopne
jle
lahf
inc
ss
cmp
popf
movsb
mov
daa
mov
jae
jo
out
mov
das
arpl
icebp
inc
fidivrl
and
sbbl
test
hlt
and
lahf
in
mov
lretw
lahf
cmp
cmp
cmp
push
adc
sub
push
or
gs
sub
push
push
shll
jl
andl
xchg
andl
pop
and
les
rcll
or
pop
and
dec
arpl
xchg
or
imul
pop
pop
repz
sub
mov
pop
inc
ficompl
call
pushl
mov
adc
or
mov
rorl
pop
mov
ret
xchg
push
sub
inc
stos
lds
xchg
pop
mov
incb
data16
mov
test
pop
sbb
xchg
or
ret
bound
cmp
or
add
mov
mov
dec
mov
jmp
jge
adc
xlat
xchg
mov
sub
sub
repnz
xor
push
xor
mov
lods
popf
ret
icebp
outsl
lds
fwait
out
sahf
in
mov
test
jle
cwtl
test
xorl
das
scas
cmc
dec
push
dec
jae
aas
std
xchg
subb
push
jo
xlat
dec
pop
lsl
movl
xchg
sbb
icebp
nop
insb
jnp
pop
ljmp
fldt
mov
push
sbb
sbb
push
in
pop
ja
pop
cmpsl
stos
ret
inc
leave
scas
mov
imul
sahf
mull
in
adc
stc
jno
push
push
mov
sub
dec
adc
inc
rcll
inc
push
mov
icebp
cmp
or
lret
mov
andl
xchg
in
cmpsb
loopne
push
or
dec
add
push
cltd
xorl
ror
mov
mov
push
into
lds
out
ljmp
addr16
sbb
pop
sbb
jbe
shl
mov
cmp
in
cmp
push
pop
or
in
or
push
outsb
mov
jmp
jge
cmp
les
pop
insl
in
sbb
or
lret
sub
pusha
sbb
mov
out
roll
jno
loope
arpl
pop
add
out
imul
mov
add
mov
jecxz
pop
sti
insl
jle
jns
pop
lret
sub
ja
cmc
shl
push
shll
js
jmp
mov
or
mov
clc
cmp
sub
add
movsb
orb
push
pop
adc
lds
aad
adc
shll
push
cmp
mov
add
fimuls
sbbb
push
ss
insl
out
stos
push
dec
xchg
sbb
rorl
bound
and
push
xrelease
rorl
stos
or
dec
xchg
push
out
sets
add
or
ss
ret
mov
cmp
mov
mov
sbbb
pop
arpl
dec
mov
mov
loop
addr16
ja
cltd
jmp
cwtl
xchg
imul
cltd
dec
jbe
pop
lds
xchg
pop
inc
clc
adc
xor
xor
add
inc
hlt
rcr
xor
adc
cmp
dec
imul
fwait
inc
std
jl
xor
add
fcompl
jp
repz
lret
out
int3
scas
xchg
and
in
mov
pop
xor
mov
je
dec
cmp
dec
sub
push
ja
bound
add
icebp
das
and
je
mov
mov
push
cmp
sbb
xor
test
cmp
cs
loopne
xchg
inc
dec
jns
and
inc
push
ret
pop
jecxz
lds
pop
mov
notl
pop
adc
push
cmpsb
jp
adc
jns
cmc
mov
mov
in
sub
jns
dec
push
dec
in
mov
cmc
push
mov
push
dec
mov
out
mov
loopne
and
adc
out
sbb
xchg
xchg
adc
icebp
push
xchg
in
push
ficomps
mov
es
sub
je
roll
out
push
fsubrl
arpl
lods
sbb
add
mov
add
jl
mov
inc
sub
js
sbb
inc
dec
or
dec
loope
and
jno
push
pop
sbb
pop
fistpl
js
les
jge
cmp
lds
fisubrl
mov
mov
lods
pop
nop
dec
fucomp
mov
adc
dec
push
int
gs
pop
sbb
rcll
lods
dec
lods
fidivl
and
lahf
pop
push
jb
into
xchg
loop
cld
sbb
mov
mov
subl
test
adc
mov
adc
push
mov
xchg
mov
int
mov
pop
mov
cmpsb
push
mov
jecxz
sbb
mov
push
inc
std
jmp
fidivrs
inc
in
nop
adc
imulb
inc
cmpsb
fldl
push
mov
mov
es
adc
inc
inc
popa
jg
push
mov
lock
cmpsb
imul
pop
stos
shlb
mov
in
leave
jnp
fidivrs
sub
add
lret
sub
and
sub
nop
xorl
jne
fildll
push
xchg
cmp
les
or
xchg
add
dec
in
imul
push
sub
mov
lret
iret
sti
divb
xchg
push
push
int3
cmp
cmp
out
pusha
mov
mov
mov
jmp
mov
push
loope
mov
push
cmpsb
push
cmpsb
cmp
cli
cmpsb
shll
pop
add
sbb
pop
inc
popf
test
pop
mov
std
push
jecxz
loope
lea
mov
sub
ds
lods
mov
jle
scas
pop
sti
or
in
adc
mov
outsb
imul
cmp
pop
ret
pop
jg
xor
lret
mov
mov
lcall
adc
loop
andl
shrb
sbb
adc
pop
loope
jle
jmp
fwait
pop
loop
insl
repnz
out
mov
push
pusha
xor
cmp
jbe
mov
shlb
test
sub
cmp
adc
jmp
sbb
test
cmpsl
or
jmp
dec
jns
cli
outsb
test
mov
popf
test
fwait
push
xor
mov
data16
cmp
in
push
fisttps
loopne
popa
clc
add
xchg
cmp
movsl
push
jae
or
fstps
repnz
loopne
orb
pop
in
pop
mov
repnz
aas
add
outsb
push
pushf
jb
sub
das
jbe
arpl
xchg
mov
int3
push
mov
fdivrl
mov
xchg
cli
inc
xchg
pop
fisttpl
jns
call
and
xchg
hlt
mov
xchg
mov
das
notb
mov
rolb
push
out
push
scas
pop
sahf
xchg
mov
xor
leave
outsb
and
sahf
insl
add
mov
mov
push
xor
pop
cltd
or
inc
cs
arpl
mov
aam
xchg
and
or
cmp
lock
sub
outsb
mov
mov
sarb
aas
mov
call
movsl
sbb
out
push
and
and
jbe
sti
jle
ror
mov
inc
lods
push
dec
sub
lea
cmp
push
add
in
push
clc
push
mov
adc
fs
pushf
pop
test
daa
mov
add
add
insb
jg
xchg
scas
add
add
mov
aad
pop
ljmp
fidivrs
xchg
sbb
push
movsb
fmulp
mov
outsb
add
add
repnz
add
mull
loopne
aaa
push
push
jne
add
jmp
scas
adc
pop
xlat
xchg
imul
das
jnp
mov
shll
sahf
adc
ss
testb
sub
pusha
pop
cld
subb
pop
jne
push
pop
xor
lock
sbb
xchg
mov
gs
scas
test
jl
fstpt
cwtl
lea
mov
pop
inc
je
push
xchg
rcrl
hlt
jnp
cmp
mov
adc
call
jg
leave
push
jns
mov
mov
jg
cld
imul
loopne
insb
pop
mov
test
adcb
les
push
addl
sbb
xchg
jl
outsb
inc
sbb
mov
cs
rorb
mov
xchg
mov
into
inc
push
and
or
xchg
xchg
fsubrs
push
std
add
addl
mov
cmp
add
mov
xchg
insb
xchg
xor
setae
mov
rolb
jae
lahf
mov
mov
pop
xor
hlt
push
inc
cmpsb
dec
mov
rcll
and
push
in
xor
jl
mov
xchg
lahf
inc
ss
push
shrb
and
lea
cmp
pop
imul
stos
lods
loopne
pop
test
arpl
cmp
or
dec
and
jmp
adc
add
mov
lea
jge
test
or
mov
repz
jecxz
stos
cmc
push
hlt
outsl
pop
pop
in
jbe
popa
aas
xor
test
push
in
cmpsl
jns
int
fidivl
lds
inc
xchg
lea
movsl
add
push
xchg
sub
insl
mov
pop
or
les
icebp
sahf
nop
cmp
xchg
std
cmp
test
push
sbb
cmp
call
or
popa
js
daa
stos
js
mov
stos
movsl
jo
push
cmp
sbb
mov
jb
int
push
fldlg2
jp
pop
hlt
mov
sahf
scas
cmc
arpl
fiaddl
shl
ja
movsb
sti
test
outsb
insl
add
nop
in
push
test
pop
sbb
jge
jae
xchg
andb
push
lahf
in
adc
lock
xlat
add
stos
icebp
pop
bound
xor
adc
mov
adc
inc
shlb
scas
pop
adc
and
imul
fs
inc
xor
hlt
imul
sbb
pushf
pop
push
imul
enter
sarl
repnz
add
les
mov
jbe
and
dec
int
pop
pushf
or
push
int
mov
std
push
cmpsl
incb
cmpsb
inc
lock
xchg
sahf
adc
out
pop
repz
mov
xor
jecxz
insb
movsb
add
repnz
std
cs
test
sub
cmp
emms
xor
jmp
jbe
mov
sbb
or
sub
sbb
xlat
dec
in
and
push
sbbl
cmpsb
sbbb
cli
jne
mov
push
pop
int
aad
mov
cmpsb
aas
test
lahf
sub
fisttpl
ja
stc
and
loope
movsl
mov
imul
sub
sarl
insb
es
outsl
test
add
lds
pop
xchg
rorl
adc
fisttps
pusha
inc
and
shlb
bswap
mov
add
std
sbb
outsb
mov
call
xchg
dec
mov
mov
mov
dec
mov
fs
and
and
int
stos
out
loope
std
daa
fs
loop
xchg
mov
iret
icebp
in
sub
add
idiv
or
pop
mov
xchg
ljmp
imul
loope
xor
dec
mov
lock
test
out
lcall
push
adc
cmpsb
cmpsb
mov
inc
or
mov
inc
add
icebp
pop
gs
sbb
je
adc
js
in
xor
loopne
fwait
jp
ljmp
or
push
adc
push
std
out
arpl
cld
das
cmp
fs
cmpl
mov
inc
pushf
sbb
ja
mov
sub
mov
lcall
dec
fcomps
cwtl
idivb
das
pop
ja
push
xchg
cmc
popa
mov
push
insl
daa
mov
jle
mov
dec
jae
outsb
sbb
adc
fsubr
mov
sbb
lahf
iret
pop
fwait
shrb
cmc
in
push
sbb
sti
cmp
gs
dec
imulb
xchg
jnp
test
or
adc
xchg
adc
outsl
lcall
mov
mov
frstor
cmp
test
popf
cmpsb
push
aaa
push
dec
lahf
mov
push
iret
jl
xchg
dec
data16
lds
ljmp
fsubrs
fsub
add
xchg
mov
fistpl
sbbb
xor
popa
pop
sbb
xor
mov
sub
aad
inc
pop
xlat
xchg
addb
fdivrl
imulb
mov
iret
adc
out
add
or
inc
inc
sub
insb
sub
shll
push
mov
mov
inc
popl
addr16
fldl
add
jo
and
fstps
int3
fwait
inc
nop
or
stos
sahf
out
sub
test
push
shl
inc
testl
or
fwait
xchg
push
insl
fidivrs
pop
and
fstpl
mov
jmp
mov
mov
flds
pop
or
cmp
jns
cmp
pop
inc
call
popa
les
hlt
pop
and
xchg
mov
jecxz
sar
pop
adc
dec
dec
xorps
sbb
cli
mov
sti
addr16
mov
xor
mov
add
jae
or
mov
mov
es
inc
xchg
mov
repz
push
dec
push
cwtl
push
sahf
mov
mov
pop
sar
jge
call
adc
loop
insb
mov
movsb
lds
sub
add
push
aas
sub
out
mov
sbbl
cmp
fcmovnbe
cmpsb
fdivl
dec
xchg
es
sub
stos
sub
adc
sbb
ret
adc
enter
inc
test
dec
mov
inc
jle
icebp
data16
insl
popa
jo
enter
insl
xor
mov
cld
cmp
nop
add
mov
mov
fisubrl
push
mov
hlt
adc
xchg
adc
lods
pop
dec
jae
repnz
mov
fld
or
enter
or
inc
dec
mov
jnp
mov
jnp
scas
dec
cmp
mov
mov
jb
lcall
fisubrs
jmp
xor
lahf
push
adc
bound
sti
add
nop
out
test
jno
sbb
sbb
call
repz
adc
imul
mov
mov
sbb
iret
out
xchg
jmp
iret
in
jecxz
ss
stos
dec
call
jmp
dec
xchg
xor
inc
testl
shl
cmp
ss
pop
dec
adc
enter
jae
cmp
xchg
xor
mov
sbb
loopne
cmp
push
pushl
rolb
mov
test
ljmp
jg
xchg
test
and
adc
add
je
outsl
es
pop
xchg
lahf
or
sbb
sbb
call
mov
xchg
push
dec
mov
rorb
sti
jge
cmc
dec
shlb
clc
call
push
sarl
cmpsb
sub
and
inc
imul
mov
cmp
sbb
and
mov
adc
sbb
scas
jecxz
mov
and
jns
popa
jb
pop
dec
cmp
add
push
aam
ret
sub
ficomps
sar
xchg
push
test
sub
repz
mov
imul
lock
bound
or
mov
sub
loopne
lock
lock
icebp
push
lret
jb
xchg
fstps
scas
mov
pop
leave
std
pop
dec
or
lcall
mov
cmp
scas
stc
pop
push
mov
in
dec
mov
xor
daa
insb
add
inc
push
mov
mov
or
mov
jns
lods
pushl
and
push
es
fcomip
or
add
cmp
addr16
mov
pop
jns
inc
mov
xorl
out
or
int
dec
sub
fsubrs
jg
xchg
jb
iret
pushf
pop
xchg
xor
js
jl
adc
cs
jnp
sbb
iret
xchg
xchg
jb
push
xchg
mov
pop
or
or
xchg
aas
mov
xor
pop
push
xor
rorl
stc
cmp
mov
push
shll
sub
add
dec
clc
cmp
or
inc
push
push
cmpsl
push
lods
xchg
jno
fstpl
jg
test
das
cmpsl
xchg
je
xor
mov
jns
je
test
inc
push
sti
add
xchg
inc
jns
movsl
mov
cld
cwtl
push
lcall
ret
cmp
arpl
cwtl
mov
es
popa
xor
stos
pop
js
dec
int
movsl
mov
dec
inc
mov
add
pop
sbb
sbb
sub
cmp
test
lcall
mov
int3
lods
ss
xor
mov
dec
popf
call
mov
or
fimuls
fildl
movsl
lods
mov
xchg
xchg
mov
xchg
inc
out
xor
jno
cmp
cmp
ret
les
std
idiv
aas
data16
loope
pop
xchg
mov
stos
sub
push
inc
dec
mov
fs
pop
std
fimull
and
enter
movups
dec
stc
cli
inc
pop
lods
bound
decb
inc
push
in
mov
arpl
les
into
fmuls
sbb
idivl
push
fisttpl
cmp
fwait
or
imul
int
mov
sbb
jmp
fisttpl
cmp
fwait
or
imul
int
mov
sbb
jmp
fisttpl
cmp
fwait
or
imul
int
mov
sbb
jmp
fisttpl
aas
mov
lea
ja
int
lret
aam
in
hlt
aam
xor
mov
int
popf
in
test
dec
call
sub
imul
xchg
lods
mov
in
leave
cld
stc
int3
jmp
cmp
add
sbb
inc
sub
pop
inc
or
jp
push
outsl
ljmp
adc
sbb
outsb
jns
adc
cmp
call
fdivrp
push
jecxz
add
sub
mov
jo
mov
pop
xchg
scas
fidivrs
clc
and
stc
ss
xor
popf
shl
rol
ret
jns
and
in
leave
les
insb
push
add
xchg
imulb
or
les
fsubrl
pushf
fdivr
ss
clc
or
push
or
pop
fsubrl
repz
sbb
insb
mov
and
je
inc
jno
arpl
fisttps
mov
mulps
in
sub
stos
push
dec
imul
push
mov
stc
or
push
mov
adc
loope
icebp
insb
cmp
sub
add
cmp
jns
stos
and
pushf
fldlg2
cld
stc
int3
push
dec
jmp
fwait
xchg
loope
aaa
and
push
push
xchg
jns
or
sar
loopne
lock
mov
fwait
js
dec
dec
imul
cs
jmp
mov
test
xchg
movsl
lcall
pop
inc
sub
and
or
sub
jmp
mov
lock
mov
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
test
cld
stc
int3
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
divb
mov
jecxz
arpl
mov
mov
push
adc
fstl
inc
mov
and
xchg
xchg
xchg
int
cmp
jo
adc
or
test
shl
jg
sub
add
push
bound
jg
ret
rcrb
lods
lret
push
inc
decl
subb
iret
sbb
fwait
mov
daa
xor
mov
lcall
pop
sti
xor
popa
push
mov
sub
pop
adc
pop
mov
jbe
ljmp
aam
push
jg
data16
repnz
dec
inc
sbb
mov
adc
mov
sbb
clc
or
lcall
into
clc
js
in
repz
sub
popf
std
pop
fstpl
call
mov
sub
inc
mov
ja
pusha
and
adc
imul
mov
in
dec
outsb
loope
movsb
inc
push
inc
jo
xchg
mov
xor
cwtl
dec
outsb
nop
xchg
pop
mov
cmpsl
jnp
push
push
fsubs
inc
mull
xor
fmuls
mov
adc
mov
lods
cmp
fiadds
lock
stos
fidivs
and
push
dec
rorl
sbb
cmp
lods
add
rcl
inc
jmp
loope
and
jne
lret
divl
mov
cwtl
je
jge
push
movsl
lods
mov
shll
movsb
push
mov
call
mov
popf
out
packuswb
jo
sbb
xor
dec
push
or
and
nop
sbbl
cld
pop
or
add
ret
movsl
push
push
dec
lock
shrb
mov
push
jmp
aas
and
xchg
insb
add
in
mov
daa
adc
movsb
lods
or
add
inc
test
je
push
out
and
cltd
ss
mov
mov
jp
lcall
xor
cwtl
in
or
sti
push
fdivs
dec
jne
rcrb
inc
int3
push
pop
sub
call
stos
mov
sbb
int3
icebp
imul
out
dec
dec
mov
ds
out
sti
movsl
bnd
adc
cmp
rorb
add
shlb
nop
data16
sahf
fbstp
and
sub
xchg
loope
pop
and
lret
cmp
sub
mov
pop
xor
jl
push
sbb
leave
dec
sub
add
stos
sbb
xchg
mov
jl
sbb
mov
dec
clc
jns
lock
jnp
cmp
xor
jmp
stos
in
adc
dec
mov
dec
or
mov
lret
jns
loopne
and
lock
cmp
push
push
cmc
xchg
pop
popf
inc
push
dec
cmp
sub
hlt
ds
mov
ljmp
rorb
ja
ret
adc
loop
jge
pop
pop
sbb
or
add
pop
xlat
cs
test
int3
pop
loop
movsb
jg
stos
test
sbb
lods
fnsave
xor
dec
sub
stc
add
lret
outsl
cmp
fs
add
mov
outsb
lock
and
xchg
repnz
inc
xor
and
rorb
xor
scas
jmp
jnp
push
fcoml
sbb
lret
dec
jg
insb
push
jmp
cmp
mov
loopne
das
inc
jl
sbb
xchg
call
dec
stc
jnp
filds
mov
mov
dec
iret
imul
out
xchg
lahf
inc
scas
mov
ds
or
push
repz
mov
mov
in
insl
out
mov
mov
sahf
ret
xchg
dec
sbb
mov
sub
shl
adc
mov
sub
mov
lcall
sub
mov
scas
rcrb
add
dec
test
test
mov
cmpsb
adc
repnz
sbb
push
sbb
cmp
lcall
sbb
aaa
jae
xchg
sub
cmp
inc
mov
aad
mov
mov
xchg
xlat
enter
clc
and
xor
daa
and
jns
test
scas
jecxz
push
ljmp
xchg
cmc
mov
mov
lods
loopne
pop
xchg
lret
ljmp
loope
data16
adc
mov
sub
or
dec
and
data16
xchg
add
xor
sub
loop
pop
iret
outsl
xor
push
pop
mov
push
add
mov
and
in
insl
add
aaa
lods
pop
loop
mov
lea
pop
loop
into
mov
rclb
or
das
mov
xchg
cwtl
dec
mov
dec
cmp
pusha
jp
adc
jp
and
sub
adc
mov
cs
or
test
jg
inc
cmpsb
mov
adc
cwtl
sbb
pop
sbb
mov
mov
mov
sbb
push
pusha
sub
pop
jns
or
cli
push
or
xchg
ja
mov
lcall
mov
lcall
clc
inc
dec
faddp
xchg
push
leave
mov
inc
mov
dec
jns
push
int3
cmp
mov
std
add
dec
daa
push
std
cmp
or
lods
bnd
dec
nop
add
xchg
adc
push
pop
addl
gs
cs
push
pop
in
xlat
repz
fisubs
mov
mov
pop
xchg
subl
lods
mov
cmp
imul
cwtl
ljmp
lods
mov
sub
jl
and
lods
outsl
dec
js
movsb
add
lock
dec
pop
mov
adc
rol
mov
rclb
divb
cmp
popa
pop
push
add
adc
stc
dec
cli
push
push
je
cmp
and
idiv
push
jp
mov
jne
ljmp
mov
push
pushf
jbe
ss
adc
sbb
out
pop
loope
push
incb
cwtl
mov
aas
xchg
add
mov
pop
add
or
inc
xchg
imul
sbb
out
jmp
das
data16
dec
mov
fisubs
rcrb
xchg
and
jge
sbb
sub
inc
xorl
shll
cmpsl
imul
adc
mov
xchg
outsb
dec
imul
loopne
cmp
pushf
pop
loopne
push
and
stos
clc
insl
dec
adc
loope
jo
sub
in
fisubrs
and
cwtl
loopne
sbb
inc
or
push
cld
cmp
and
pusha
test
xchg
adc
add
ja
sbb
jmp
push
loopne
mov
and
aas
test
addl
icebp
push
cwtl
fstl
mov
inc
movsl
and
out
mov
dec
orb
adc
lret
dec
pop
and
dec
loope
mov
stc
test
mov
or
addr16
inc
test
adc
xor
xlat
ficomps
cmp
test
dec
sbbl
inc
mov
jge
test
addb
inc
in
or
xchg
dec
jnp
dec
movsb
mov
cmp
fidivl
xchg
adcl
dec
mov
jne
in
push
pop
pop
or
adc
icebp
mov
mov
xchg
adc
and
gs
fisubrs
mov
pop
stos
sarl
outsl
adc
sahf
xchg
add
push
out
or
shll
ror
sub
stos
aam
loop
cmp
add
data16
test
out
in
jnp
xchg
outsb
dec
jns
mov
bound
shl
xor
pop
or
jno
lret
enter
test
mov
loope
and
xchg
js
sbb
jg
or
call
jecxz
pop
jle
jecxz
jb
adc
xor
mov
out
lods
out
leave
ss
inc
ds
pop
jns
push
rcrb
faddp
aad
sub
icebp
or
test
inc
sbb
addr16
sub
or
ja
push
mov
dec
out
mov
aad
push
cwtl
mov
jns
cs
xchg
sbb
in
pop
cmp
mov
adc
sbb
pushf
movsb
adc
sbb
rcll
loopne
inc
pop
shl
sub
jl
push
mov
mov
xchg
mov
pop
fstpl
dec
push
shrb
xlat
insb
sub
shlb
mov
push
push
dec
rorl
dec
rorl
subb
cltd
ss
shrb
pop
test
insl
pop
mov
mov
test
push
push
inc
inc
and
mov
stos
xchg
lods
push
outsb
movsb
xchg
lds
mov
add
mov
xor
movsb
jo
mov
inc
std
cmp
imul
sbb
popf
ret
fs
dec
cs
in
sub
or
les
bnd
stc
ss
popf
inc
popa
rcl
xchg
jne
sub
call
stc
sub
fsubrl
add
sahf
rcrl
add
into
aas
mov
sub
mov
in
addr16
daa
add
fstsw
orl
loopne
lds
jno
call
xor
popa
inc
stos
nop
xchg
mov
pop
push
lcall
inc
fidivrl
insl
mov
outsb
in
mov
xor
inc
push
mov
dec
int
enter
lea
pop
movsl
into
push
adc
pop
and
jmp
mov
push
pop
mov
lods
cmc
push
xor
xchg
mov
fistps
aam
cmp
arpl
jne
cmp
mov
int
stos
cmpsl
sub
insb
arpl
imul
jno
dec
test
xchg
sub
sahf
mov
mov
negl
out
lea
lds
iret
lcall
out
roll
dec
stos
fucomip
mov
div
ljmp
call
xlat
adc
pusha
jmp
leave
enter
cmp
pop
gs
mov
cmp
pop
and
xor
test
addr16
mov
pop
or
nop
shrl
mov
cmc
or
sbb
test
arpl
dec
push
or
sbb
add
pushf
or
insb
xor
adcl
lods
jl
mov
icebp
mov
es
push
adc
pop
lods
rcrb
sub
xor
cmp
subl
or
dec
and
inc
loopne
scas
jns
jg
adc
or
leave
js
cli
fidivl
push
xchg
jg
and
sbb
outsl
or
add
sub
jg
stc
mov
mov
lea
inc
jg
bnd
or
es
jae
lcall
pop
xlat
scas
out
sub
lds
sub
sti
lea
pusha
jnp
addr16
in
pushf
push
and
sub
into
lods
sbb
mov
push
sahf
mov
cmp
inc
mov
xchg
pop
setne
sub
mov
push
neg
pop
xchg
dec
dec
aaa
xlat
cld
repnz
lock
jbe
fdivrs
xor
popf
push
rclb
into
sbb
call
inc
inc
cmpsb
push
xor
mov
push
aas
pop
jmp
pusha
fisttpl
ret
push
mov
jbe
adcl
sub
out
pop
stos
sub
lret
fisubs
jo
jae
outsb
jbe
cmp
sub
push
jge
ret
adc
cmpb
jmp
movsb
ret
repnz
icebp
aad
cmp
inc
pop
sub
aam
in
std
adc
pop
dec
mov
dec
mov
cmp
jnp
dec
push
test
scas
movsl
sub
push
iret
rcr
dec
dec
icebp
clc
bound
lret
sub
es
adc
movsl
mov
aaa
test
add
add
and
and
xorl
js
data16
xor
xchg
mov
pusha
lcall
repnz
xchg
xlat
jl
and
jmp
fisubs
mov
je
cmpsb
or
add
in
jge
test
sbb
cmp
fildl
mov
inc
mov
out
pop
add
mov
sub
and
jge
popf
lds
jmp
andb
es
xchg
mov
sbb
mov
mov
shlb
jbe
je
mov
pop
jp
fwait
cmpsb
lret
loope
enter
sbb
nop
adc
lods
mov
cmp
test
inc
adc
sub
outsb
mulb
push
std
int3
xor
push
jbe
into
jnp
and
add
aas
fbstp
mov
xchg
and
std
jns
mov
xchg
scas
mov
and
bswap
adc
or
push
pop
loopne
lret
mov
mov
inc
cmp
out
in
ret
add
ds
test
addr16
les
movsb
pop
xchg
outsb
inc
movsb
std
push
movsb
jne
add
out
aas
movsl
leave
mov
xor
ret
sub
mov
loope
mov
cld
jmp
mov
lea
lret
pushf
push
and
lret
fildll
jg
adc
push
add
fwait
mov
nop
adc
ljmp
xchg
out
inc
pop
addr16
int3
dec
adc
lods
call
add
xchg
cmp
sbb
mov
movsl
push
dec
out
andb
call
add
xor
or
pop
imul
lock
inc
xchg
mov
sbbb
push
sbb
test
jo
mov
bound
add
dec
lock
dec
shlb
sbb
mov
sub
fnstcw
and
in
pop
pop
dec
gs
fincstp
and
shll
adc
mov
mov
out
and
imul
pusha
icebp
mov
adc
clc
stos
cmpsl
and
fs
xchg
in
mov
cmpl
and
and
xchg
sub
pop
stos
push
mov
mov
std
iret
out
mov
adc
and
std
jmp
jns
add
push
sub
mov
xor
dec
inc
jae
dec
mov
and
mov
fisubs
cmp
or
ss
mov
repz
cmp
divb
inc
mov
mov
ss
arpl
loopne
jmp
repz
adc
sub
in
loop
shlb
add
mov
aad
mov
mov
jae
push
ret
scas
ja
mov
cmp
lret
js
sbb
jo
popa
inc
sar
pop
mov
xchg
cmp
xchg
lock
arpl
pushf
xchg
imul
lret
js
mov
cltd
pop
lods
pop
loopne
push
insb
pop
imul
les
mov
mov
repz
xor
rcrl
test
mov
test
xchg
mov
ret
lret
clc
out
sbb
xchg
lods
daa
cmc
bound
inc
dec
xchg
jg
push
adcb
rcrb
cmp
les
les
lods
mov
pop
pop
xlat
insb
xchg
cmp
outsb
mov
dec
push
insl
sub
aad
fdivl
lahf
sarb
mov
inc
push
sub
add
xor
push
push
daa
jbe
sub
aas
sbb
dec
mov
fstpt
inc
test
sbb
adc
nop
mov
ds
ss
test
jmp
cli
pop
or
jbe
xor
shl
subl
dec
xchg
cmp
push
dec
mov
add
aaa
mov
imul
jmp
loopne
mov
les
in
jg
sbbl
xchg
push
inc
adc
in
out
andl
mov
adc
lcall
lds
xchg
lret
inc
loope
xor
flds
and
pop
arpl
das
or
stc
or
add
add
lret
dec
in
in
mov
addb
xchg
push
xorl
push
cmp
mov
les
add
mov
mov
sarb
call
sub
sbb
cmp
xchg
adc
dec
cwtl
in
ret
test
xchg
pop
inc
jne
jae
addr16
in
out
addr16
cs
mov
mov
adc
fsub
ss
rcrl
insb
sub
inc
sti
scas
mov
jnp
incl
lods
push
mov
jb
jne
rorl
or
adc
imul
jne
mov
pop
rcll
cmc
sub
mov
add
ja
data16
jb
insl
fcomip
mov
lds
sub
ds
lcall
cli
pushf
jmp
xchg
arpl
in
cmp
fcomps
xchg
cli
mov
xchg
jge
bound
fmull
pop
xchg
add
loope
sbb
and
cmp
mov
out
fnstsw
test
das
xor
imul
loop
push
xor
cmp
sbb
cmpsb
pushw
mov
lock
out
sar
data16
mov
adc
pop
and
sahf
xchg
sub
mov
loopne
add
call
jecxz
enter
sub
adc
cmp
mov
jns
out
das
dec
mov
outsb
call
daa
cld
and
stos
cmp
bound
ljmp
test
pop
loop
mov
pusha
insb
jae
pop
je
sub
jnp
dec
loop
fmuls
push
out
lcall
iret
inc
addr16
sbb
out
aas
or
cmp
or
add
xor
push
in
sub
inc
loop
lds
xor
and
sti
jne
shrb
inc
cmc
fnsave
sti
in
mov
sahf
repz
dec
outsb
xchg
jl
ret
mov
in
push
or
lcall
mov
add
lret
or
jge
push
xor
mov
cmp
xor
adc
loopne
sbb
fstpt
in
inc
add
add
out
xchg
insb
jo
xor
cmp
pusha
sbb
int3
pause
dec
jl
imul
roll
mov
inc
sahf
pop
jg
push
push
dec
sahf
js
fwait
pop
adc
gs
fucom
ret
test
shl
stos
xchg
pop
mov
hlt
scas
pushf
jge
sub
std
insb
adc
sub
pop
ljmp
or
cmpsb
sti
add
or
bound
cmp
add
and
add
mov
xor
sbb
add
in
adc
pop
adc
or
sbb
jnp
addr16
test
or
dec
aaa
push
adc
daa
jo
pop
imul
mov
jno
test
mov
das
ret
dec
mov
pushf
mov
push
inc
aam
sti
xchg
dec
xchg
fwait
addr16
or
jno
push
std
out
addr16
fwait
ret
xor
mov
ret
cltd
adc
enter
bound
lret
mov
xor
decl
push
incl
out
push
aas
imul
add
jmp
aad
xor
and
mov
incl
mov
cmp
in
mov
adc
inc
mov
sub
xor
daa
into
push
fdivrl
sti
jge
das
dec
pop
in
fisttps
and
inc
push
outsl
adcb
jmp
jg
incl
gs
mov
je
rcrb
inc
clc
nop
cmpsl
add
push
dec
lock
gs
xchg
mov
mov
in
outsl
push
lock
fscale
jl
rcr
cmp
xor
jg
xchg
fsts
push
cs
inc
in
add
sbb
and
or
cmp
setp
clc
jle
jb
mov
popf
inc
jp
mov
mov
pop
xchg
into
movsb
aam
fistps
fwait
or
mov
mov
insb
lahf
test
jge
pop
rorb
into
push
jp
leave
cltd
xchg
movsb
jne
pop
bnd
fnstcw
rcl
jmp
iret
loop
mov
mov
lock
xlat
lds
or
xor
and
cwtl
push
popf
add
pushf
ds
sarl
in
shll
inc
sub
dec
out
addl
inc
jmp
add
pushf
cmove
cmp
lods
shlb
pushf
int
lret
leave
pusha
mov
adc
or
mov
sbb
or
cmp
stos
cs
pop
out
jno
xchg
stc
imull
sub
test
xchg
push
stos
out
pop
xchg
jl
push
mov
das
or
add
lds
out
or
enter
rclb
sbb
data16
sbb
call
in
sub
scas
lds
bound
fildl
mov
push
outsb
es
mov
mov
push
or
sbb
xor
mov
outsl
lret
jg
popa
mov
mov
pop
lods
inc
out
clc
pop
pop
mov
dec
loope
das
dec
sub
mov
xor
frstor
jmp
mov
int3
movsl
adcl
mov
dec
inc
or
xor
adc
ja
in
jecxz
xchg
and
sub
jmp
sti
in
dec
clc
fcomip
dec
lret
mov
pushf
fldlg2
leave
cld
stc
int3
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
test
cld
stc
int3
jmp
cmp
or
sbb
insb
dec
jl
dec
imul
test
xchg
stc
enter
sub
sub
jl
inc
pop
mov
xor
in
frndint
stc
dec
imul
or
imul
roll
xchg
and
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cltd
jecxz
jge
js
test
out
or
add
add
add
add
add
add
jo
mov
jnp
jmp
add
add
jmp
pusha
add
add
add
mov
mov
adc
insb
add
add
add
add
add
add
add
pop
add
insb
add
add
add
add
add
jl
dec
add
add
pop
add
add
add
add
add
add
add
add
add
cs
add
addb
add
into
add
dec
add
add
add
xchg
add
add
xor
add
mov
inc
add
add
popa
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
addb
add
add
add
add
pusha
add
add
add
add
add
add
imul
add
add
cmp
add
addb
add
add
aas
add
add
add
add
add
add
lea
popf
add
add
inc
add
xor
adc
cmp
jo
mov
add
add
add
add
fs
add
dec
add
add
add
add
leave
add
add
add
add
add
add
sbb
add
add
and
hlt
add
add
add
faddl
sub
mov
inc
add
add
xchg
add
cmp
add
add
add
add
fs
add
add
popf
add
add
add
add
lahf
add
add
add
add
xor
inc
add
addl
add
add
xor
pop
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jns
push
add
add
add
and
flds
stos
add
add
add
jo
addl
aaa
add
add
add
xchg
add
add
add
add
add
and
outsl
add
addb
add
add
inc
add
add
add
add
fs
add
add
pop
add
add
cmp
add
add
jo
cmp
add
add
add
add
add
add
add
add
xor
sahf
add
insb
add
add
add
add
add
pushf
add
add
add
out
add
add
add
add
add
add
cmp
add
imul
add
add
add
ss
add
add
inc
add
add
test
add
add
add
add
add
add
inc
add
add
add
add
leave
add
add
inc
add
add
or
add
fs
add
add
add
add
imul
mov
cmp
cs
aaa
pop
mov
sti
lods
mov
leave
sahf
and
flds
jne
pop
test
mov
xor
lret
sbb
mov
fdivr
mov
stos
sub
sub
sub
push
xor
blsic
mov
mov
cltd
push
push
or
pushf
fisubrs
push
adc
pop
jae
inc
out
mov
lcall
ds
xchg
mov
add
add
xchg
je
mov
stos
notb
out
inc
xchg
fsubs
mov
fsts
pop
int3
in
imul
lea
mov
aas
ljmp
jb
fmuls
cmc
imul
rcl
pop
sbb
sbb
inc
jno
pop
in
mov
xor
std
ja
pushf
and
imul
mov
xor
mov
xchg
lods
sbb
or
cld
arpl
inc
out
js
dec
stos
and
int
dec
lods
call
push
mov
pop
fldenv
shrl
mov
shrl
mov
inc
inc
rcrb
and
lea
jae
cld
inc
fwait
in
jle
mov
std
mov
push
xlat
shrl
adc
jge
cmc
sbb
data16
in
sarl
in
or
cmp
jl
xchg
and
add
sub
les
cmp
sbb
das
fstpl
out
add
add
inc
dec
xor
loope
call
ret
fs
mov
or
dec
mov
test
jmp
ds
jb
imul
ljmp
sbb
lods
ljmp
xchg
push
aas
push
sub
and
cmp
mov
mov
pop
cmc
sbb
mov
fsts
push
lock
mull
mov
xor
es
or
mov
inc
jo
ja
fmul
out
mov
push
mov
jb
cld
dec
mov
pop
arpl
out
mov
mov
adc
and
jae
or
dec
popf
je
insl
test
cmpsl
das
adcl
clc
in
loop
lcall
orl
jno
dec
stos
fwait
mov
xchg
add
mov
dec
inc
int3
aas
aas
out
fmuls
dec
xor
cmpsl
fdivl
das
add
pop
sub
xor
test
sub
jl
lods
dec
pop
mov
adc
mov
cmp
cmp
xorl
add
loop
adc
sub
xchg
fs
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
