call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
scas
aad
in
cmc
loope
popf
idiv
test
push
sbb
jne,pn
add
dec
xor
scas
in
cmc
incb
into
int
inc
cs
jp
int3
jne
imul
cmpsl
lds
cmc
out
notl
ds
and
adc
push
and
dec
daa
inc
into
mov
pushf
rorb
adc
lds
loop
or
add
mov
mov
adc
lods
pop
mov
loope
add
ret
fdivl
lds
repz
out
adc
cmp
rcr
dec
cmp
and
hlt
mov
mov
mov
ss
into
dec
or
push
xchg
sti
add
cmpsl
xor
mov
test
mov
js
or
ficoms
or
outsl
adc
pop
inc
scas
pop
shl
add
lods
in
rcll
popf
punpcklbw
and
scas
aad
in
cmc
out
test
xchg
fisubs
ss
push
gs
jne
add
push
pop
int
lret
xchg
sti
in
cmc
lcall
loope
cmp
push
insb
add
adc
jo
pop
sub
mov
mov
mov
sbb
int3
mov
cmp
cs
ss
sbb
adc
jae
pop
xlat
sbbl
fisubs
cs
push
gs
jne
add
dec
xor
sahf
in
cmc
incb
into
mov
inc
cs
push
gs
jne
add
dec
xor
or
aaa
shl
ret
sub
into
loopne
cmp
ret
xchg
push
lahf
jecxz
int
mov
fmul
popa
mov
flds
cltd
jo
es
nop
stos
mov
mov
push
ficompl
xchg
mov
lods
lcall
aam
jbe
cli
pop
cld
jb
ret
push
push
aas
push
insl
inc
and
xchg
mov
loope
xchg
shr
fwait
insl
inc
icebp
add
jp
mov
in
mov
sub
mov
xor
sti
inc
das
fidivl
jno
fcoms
jnp
add
scas
or
and
inc
movsl
mov
stos
xchg
mov
sub
jo
adc
movsl
das
outsl
xor
lret
mov
inc
or
dec
fildl
imul
xlat
std
nop
shrl
loopne
cld
jle
daa
dec
push
addr16
loopne
mov
sahf
xchg
scas
sub
lods
cmp
enter
jl
sub
push
inc
aas
stos
sbb
sti
jl
xor
add
das
push
xchg
in
test
jp
daa
enter
push
mov
lea
add
stos
adc
mov
add
pop
les
movsl
fistps
mov
out
enter
nop
sbb
jns
pop
adc
mov
jb
loop
je
aam
jl
xor
xchg
jg
jns
fadds
and
js
sub
divl
shrl
ds
out
push
jle
std
stc
mov
pop
in
jne
push
jb
ret
jae
jmp
loope
and
hlt
sub
es
pop
ljmp
sbb
mov
mov
mov
jl
mov
int3
test
in
fwait
stos
mov
cmp
jne
dec
adc
mov
mov
dec
sbb
aaa
loop
ret
push
int
mov
push
popl
fsubp
ret
sbb
shrl
iret
mov
xchg
clc
add
jg
add
icebp
testl
popa
les
mov
fs
mov
push
or
dec
hlt
addl
stos
pop
mov
adc
icebp
adc
xchg
push
xchg
orl
jmp
into
xlat
mov
mov
stos
xchg
pop
add
je
inc
xor
jp
pop
and
cmpsb
out
fs
inc
aas
add
or
out
sbb
bound
inc
xor
inc
loopne
pop
aas
test
aaa
dec
sarb
fmul
jg
cli
xchg
add
call
pop
gs
and
daa
mov
popf
xchg
cwtl
aam
loopne
pushf
xchg
aad
xchg
sub
xchg
ret
in
lock
loop
popa
ss
push
add
fstpt
fwait
fs
add
pop
mov
push
insb
jge
in
sub
or
sbb
or
sub
dec
lcall
aad
cltd
cld
push
and
test
leave
xor
mov
ss
push
dec
mov
inc
mov
popl
je
mov
lahf
or
sbb
add
hlt
int3
pop
ret
sub
pop
int
add
loop
movsl
mov
mov
inc
or
adc
repz
stc
adc
test
aad
aaa
aam
xchg
mov
das
push
addb
cmp
fsts
pop
jmp
addb
pop
jbe
lcall
in
add
sbb
vhsubps
cmpb
stos
in
xor
pop
mov
sbb
pop
sub
cli
mov
xchg
into
jecxz
mov
cmpsb
icebp
lock
ljmp
mov
hlt
mov
and
loopne
test
les
push
xchg
aaa
jecxz
stos
cmp
xchg
cmc
jmp
mov
mov
add
in
push
sahf
fucomp
fldenv
dec
mov
push
pop
sbb
movsb
mov
psraw
push
sub
cmp
mov
lret
mov
cmpsb
and
nop
call
seta
pop
jnp
sbb
out
and
pop
pusha
sbb
and
adc
pushf
lds
jle
push
sub
std
lea
dec
xorl
call
xor
jnp
push
sbb
imul
inc
xchg
cmc
and
loopne
test
sbb
jp
inc
and
push
aam
in
into
imul
or
push
insl
call
das
outsl
pop
faddl
mull
repz
andl
sub
lds
dec
adc
std
shl
sahf
dec
cld
stos
cwtl
dec
mov
cmpb
sti
out
pop
movsl
jmp
mov
pusha
xor
pusha
adc
and
fs
in
xorb
push
je
inc
hlt
bound
xor
cmp
xor
hlt
and
movsb
bound
lock
scas
and
mov
nop
in
sbb
insb
leave
hlt
pop
jmp
addb
test
or
push
stos
pop
mov
out
mov
ja
je
int3
fbstp
pop
fs
adc
cmpsl
adc
mov
fildl
ds
mov
and
cmpsl
insl
cs
add
rcl
cmp
mov
push
lcall
ret
repz
and
pop
pop
test
inc
sahf
fcmovne
pop
fldcw
js
pop
jl
and
jmp
or
lea
mov
icebp
or
fdiv
rcrl
jmp
mov
jb
or
mov
subb
xchg
push
push
dec
xlat
sub
fisttps
sahf
mul
lret
pop
pop
mov
push
jbe
inc
mov
stos
mov
ds
ret
cmp
call
or
dec
add
xchg
sub
xorb
into
lret
pop
lods
test
push
inc
out
scas
add
push
arpl
cmp
aad
jg
mov
push
decl
push
and
imul
sti
cmp
arpl
xchg
lcall
insb
cmpsl
mov
outsl
icebp
or
sub
pop
ret
int
call
jg
jle
adc
mov
orl
mov
test
test
mov
jmp
sub
cmp
cmp
xchg
mov
leave
and
adc
pop
lcall
pop
fisubs
addr16
das
dec
sbb
js
fs
int3
jbe
xchg
inc
scas
scas
lret
add
push
add
jnp
jmp
jno
js
dec
ret
ja
jl
mov
sub
xchg
out
pusha
lret
or
dec
divl
fisttps
loope
pop
jb
mov
movq
lds
cld
cmpsl
in
lods
inc
not
cmc
fiaddl
dec
sub
sbb
out
dec
and
lret
mov
icebp
test
mov
cmp
mov
shl
testl
push
sar
mov
sbb
mov
loope
jno
push
loope
and
jnp
add
repz
outsb
dec
mov
xchg
push
andl
dec
dec
adc
into
in
in
mov
xchg
pop
xor
inc
adc
and
cltd
ds
cmp
jmp
sbbb
dec
xchg
insl
insl
mov
imul
out
mov
shlb
mov
push
sti
push
movsl
and
imul
xor
xchg
sbb
adc
push
fs
repnz
jecxz
push
sub
sbb
xor
sub
add
xor
adcb
loop
mov
leave
ljmp
pop
testw
cmpb
push
fwait
jb
inc
into
mov
idivl
push
and
mov
inc
mov
shlb
test
or
in
flds
lea
movsb
mov
lea
into
daa
mov
popf
jle
loop
ret
das
addr16
mov
cli
jecxz
mov
adc
popa
dec
jns
mov
push
sarb
xlat
fwait
adc
mov
fwait
les
leave
daa
js
jle
sbb
pop
sbb
lahf
cmp
jg
and
fwait
test
mov
idivb
imul
pop
mov
inc
test
push
adc
mov
pop
or
push
xchg
push
cmpsb
add
jb
mov
pop
add
xchg
call
sbbb
push
ret
pop
add
cmp
mov
sub
cwtl
sbbl
inc
mov
sbb
outsl
cld
dec
mov
adc
sub
clc
fs
cmp
mov
stos
pop
jmp
int3
jnp
adc
scas
and
push
adc
or
xchg
inc
sahf
fldcw
mov
fildl
sub
and
inc
mov
add
inc
stos
leave
test
and
jno
aam
fcomp
inc
test
mov
add
pop
cmp
iret
and
divl
bound
cmp
ljmp
add
fwait
sbb
movsl
mov
push
and
pop
or
inc
stos
cld
out
jecxz
jae
stc
pop
lods
int3
movsl
outsb
dec
pop
pop
jb
xor
and
xchg
cmp
xchg
or
repz
dec
xchg
mov
loope
aas
mov
test
inc
frstor
cli
or
jl
mov
aaa
movsb
push
in
aaa
stc
add
cmp
arpl
or
add
xor
call
sbb
and
mov
xor
xchg
pushf
cmp
cwtl
cltd
push
jecxz
cwtl
outsb
out
mov
mov
add
cwtl
sub
std
push
in
mov
je
rcrb
test
add
push
mov
les
rclb
or
dec
add
aaa
mov
pop
daa
inc
enter
and
ret
push
adc
and
mov
xor
adc
pop
fsubrl
ret
or
pop
ja
inc
imul
jge
int3
mov
call
add
nop
sbb
lds
xor
xchg
cs
push
add
in
cmp
popf
inc
ljmp
cld
mov
push
ret
dec
jbe
popa
insl
insl
cmpsb
adc
xor
and
repz
paddsw
std
xchg
fistpll
pop
in
mov
fdivl
inc
adc
cmp
rcr
leave
nop
jbe
sbb
dec
push
test
ja
mov
mov
shlb
sbb
data16
and
cmp
imull
pop
push
xlat
mov
lods
divb
ja
ficomps
add
jp
in
sbbl
xchg
xor
mov
adcb
in
out
mov
mov
repnz
fnsave
icebp
lcall
jno
test
mov
test
mov
in
or
or
stos
add
and
sub
ss
dec
dec
call
xchg
xchg
insl
loopne
aas
mov
mov
jge
xor
jle
lret
aas
pop
fcmovu
adc
enter
test
es
gs
into
add
insl
jge
xorl
add
push
cmc
shlb
andl
das
or
mov
jg
mov
jp
and
ficompl
xor
fcomi
and
fnsave
jle
cmp
addb
xchg
dec
push
jl
jmp
scas
subb
mov
shlb
xchg
pop
lock
dec
mov
test
movsl
lahf
je
and
sbb
loop
mov
sbb
into
scas
flds
dec
sbb
pop
mov
sub
inc
fldcw
cmp
das
dec
fistps
lret
pushf
out
bound
pusha
test
outsl
xor
mov
adc
jge
jno
push
inc
adc
bound
mov
dec
mov
and
imul
adc
repnz
and
mov
lods
push
fistpl
mov
repz
xor
clc
xchg
fbstp
repz
adc
push
or
inc
adc
push
cmc
dec
shrl
pop
push
rclb
jo
lock
sbb
call
rolb
in
out
mov
jb
popa
sti
mov
inc
adc
sti
adc
stos
fs
add
xor
jmp
adc
sbb
mov
adc
out
xor
xor
push
rcrb
movsb
pop
adc
pop
mov
pop
add
loop
mov
cmpsl
fwait
bound
insb
sub
aad
shr
dec
loope
call
gs
into
mov
push
shll
push
cmp
push
mov
loop
lock
sbb
xor
cmp
mov
cmp
jb
jne
fnsave
insb
into
xchg
rcll
lock
mov
nop
sub
imul
mov
repz
inc
add
fldenv
xchg
call
sub
jb
int
adc
insl
je
repnz
add
mov
test
inc
dec
mov
popf
mov
lcall
dec
sub
js
test
arpl
adc
mov
jne
add
and
mov
push
inc
outsb
ret
lock
xlat
mov
movsl
dec
jmp
jns
out
push
orl
lea
aad
repnz
mov
sti
flds
cmp
inc
dec
es
xor
xor
xor
xchg
idivl
dec
outsl
cmp
push
cmpsb
pusha
nop
test
xor
mov
cld
std
xor
out
sti
ljmp
mov
shlb
lret
dec
dec
adc
cmpsb
sub
daa
nop
xor
lea
icebp
jge
sbb
inc
push
push
orb
mov
cmp
dec
cltd
mov
subl
lods
insb
insb
pop
pop
and
inc
push
mov
in
pushf
out
cmc
inc
cmp
push
cwtl
and
mov
test
or
mul
repnz
mov
inc
add
and
adc
jl
rol
cmp
cli
mov
cltd
div
icebp
inc
inc
dec
shl
mov
pop
scas
call
jg
xchg
and
pop
icebp
das
or
pop
mov
fucomi
jmp
or
fsubrp
adc
cmp
bound
shlb
and
imull
out
or
icebp
add
push
push
or
push
push
inc
out
push
aaa
xchg
add
int3
dec
lret
test
pop
cld
outsl
xor
pop
shll
add
stos
xor
fistpll
add
stos
cmpsb
and
sub
jb
adc
out
push
ret
adc
mov
or
pusha
cld
mov
mov
push
pop
in
jecxz
pop
and
ret
push
fisttps
lcall
call
sahf
aam
xchg
jecxz
mov
lcall
push
ja
cmp
jl
xchg
xchg
bound
aam
add
sbb
add
inc
and
or
fcompl
idivb
shll
add
inc
mov
or
in
outsl
cltd
out
out
stos
rcll
sub
mov
repnz
pop
cmp
cmp
popf
test
rclb
cmp
pop
ret
add
pop
insl
mov
mov
lods
rcrl
xchg
sbb
fsubrs
jo
js
lret
mov
mov
mov
dec
mov
sub
mov
pop
cmpsl
popf
xchg
je
in
push
pop
or
das
xchg
dec
sbb
cwtl
inc
in
aas
sub
push
aad
cmp
hlt
cmpsl
pop
sbb
pushf
addb
addl
cmp
enter
mov
ljmp
mov
popf
xor
mov
mov
fisttpl
rcrb
add
scas
outsl
push
add
fdivr
mov
andl
cltd
imul
jecxz
add
adc
xchg
xlat
lds
ret
mov
ror
scas
xor
jno
scas
int3
shr
dec
shlb
int3
and
xchg
jecxz
into
xchg
mov
mov
fs
js
dec
jo
pop
lret
sbb
dec
inc
push
mov
or
hlt
jge
popl
shll
cmp
jmp
std
retw
mov
adc
cmp
ljmp
outsb
mov
mov
mov
mov
lock
xor
sub
lds
mov
push
aas
cmpsl
cmp
insb
cmc
push
femms
outsl
stc
mov
fldl
cmp
inc
mov
push
push
ret
jmp
and
jo
test
sub
roll
test
sub
mov
int
cmp
lret
fldcw
outsb
outsl
cmp
jnp
add
fsubp
test
add
adc
lret
or
mov
xchg
jg,pt
repnz
fstl
int3
clc
mov
nop
call
push
int3
xor
mov
xchg
dec
inc
call
je
fwait
sbb
add
cwtl
clc
int3
and
int
xchg
cmp
adc
dec
pop
inc
pop
sarb
mov
gs
xchg
inc
in
dec
bound
mov
fbld
jmp
jle
lahf
push
out
push
popa
cmc
mov
mov
lret
stos
jns
mov
fwait
xorl
xor
or
and
sbb
nop
nop
aas
scas
dec
pop
inc
iret
shl
push
out
mov
mov
lds
inc
mov
add
sub
ljmp
lcall
pop
shlb
rcrb
adc
sti
fs
jnp
or
ficomps
jnp
cmpsl
sbb
sub
sarl
icebp
push
fcoml
inc
push
mov
sbb
pop
pop
push
sti
cltd
pop
push
cltd
push
or
lock
fnstsw
aad
or
xorb
repnz
cltd
xor
scas
je
xchg
add
movb
enter
sbb
adc
movsb
add
std
cmp
pop
xchg
sbb
inc
test
sub
outsl
lret
jne
or
scas
test
and
out
imul
mov
xchg
out
fs
sarl
hlt
mov
xchg
push
xor
popf
cmpsb
test
push
addr16
les
lea
fwait
push
mov
sub
sbb
xor
inc
sub
push
sbb
mov
int3
rolb
cmp
jnp
sub
adc
out
mov
mov
jle
lods
das
fldcw
adc
cmp
and
mov
cltd
cmpl
mov
push
imul
cmp
imul
xor
and
xchg
test
jecxz
xchg
repz
outsb
lret
push
sub
arpl
mov
fs
lret
sbb
stos
jle
or
mov
imul
and
push
scas
es
lahf
fstpt
push
add
insb
lret
sbb
insb
inc
repz
mov
lds
lods
or
cmp
sub
pop
jne
sub
ret
mov
cwtl
xor
push
jno
dec
cmpsl
mov
sbb
or
sbb
or
imul
stos
out
psubsw
inc
pop
adc
mov
pop
fbld
mov
std
cmp
inc
popa
loop
dec
pop
loop
scas
jge
test
cmp
mov
jecxz
push
rep
test
shrb
sbb
inc
shlb
pop
pushf
rorl
test
aas
es
xchg
sub
mov
push
shrb
mov
or
lea
mov
stos
mov
test
js
push
adc
xchg
xor
mov
or
into
lret
pop
cmp
push
push
dec
sbb
cmpl
pop
bound
cmpsl
xor
pusha
inc
cmpb
jmp
mov
mov
leave
pusha
cmpsb
ret
loope
xlat
addr16
arpl
push
flds
aad
cwtl
push
xor
ja
or
cmpsl
and
outsl
push
jl
pop
mov
loope
in
out
leave
pushf
mov
jae
jb
xchg
arpl
pop
sbbl
mov
dec
adc
mov
out
sarb
sub
mov
and
lods
shl
and
dec
cmp
fistps
push
pop
fsub
outsb
mov
rcll
sarb
dec
or
push
inc
test
inc
push
pop
push
pop
inc
addr16
out
cmp
sbb
adcb
gs
loop
mov
add
mov
leave
dec
test
push
loope
or
mov
mov
add
dec
mov
mov
sti
sub
inc
aam
push
int3
in
jae
cmpsl
add
popa
mov
mov
cmc
out
or
xchg
inc
fcmovb
inc
mov
cld
mov
lcall
in
jle
or
add
adc
xchg
push
imul
popa
stc
mov
jo
pushf
nop
push
imul
scas
sbb
jg
sbb
pushf
popf
inc
scas
cltd
xchg
dec
hlt
push
mov
fwait
insl
rep
lcall
dec
out
xchg
orl
stc
or
push
cmpsb
mov
scas
inc
and
inc
outsb
cltd
loop
shll
xor
mov
mov
sbb
push
or
push
iret
mov
rcrl
jge
loop
xchg
cmp
adc
adc
nop
sbbb
lods
movlps
jns
pop
pusha
mov
imul
adc
and
in
cmc
incb
into
mov
inc
cs
push
gs
jne
add
dec
xor
sahf
in
cmc
incb
into
mov
inc
cs
push
gs
jne
add
dec
xor
sahf
in
cmc
incb
into
mov
inc
cs
sbb
jne
add
jg
mov
lcall
test
xchg
pop
movsl
dec
mov
inc
sar
mov
push
add
out
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jb
push
loope
jno
dec
dec
lock
in
mov
inc
loop
shlb
jno
add
xor
push
loope
icebp
xor
add
loop
loop
shlb
jno
outsb
xchg
adc
push
jnp
dec
dec
pop
repz
add
lea
mov
js
push
aad
sbb
or
movsb
popa
mov
sbb
mov
sbb
pop
mov
mov
outsl
repz
popf
shrb
decb
andb
xchg
loope
repz
lret
add
or
loop
mov
xchg
and
rcrb
icebp
shlb
cmp
in
dec
cld
mov
pop
adc
add
fwait
icebp
dec
int
and
in
pop
add
mov
cmp
out
sbb
andb
out
cmp
mov
je
movsl
cmp
pop
test
and
shll
mov
into
lcall
lret
int
and
loope
or
inc
outsl
cmp
add
out
xchg
and
and
inc
sti
and
jnp
xor
cli
xchg
lret
cmp
and
shll
mov
inc
pop
enter
pop
mov
adc
gs
out
push
sbb
xorb
pop
out
and
mov
xchg
rolb
push
mov
leave
pop
in
out
pop
xchg
push
xchg
ds
xchg
jp
and
repnz
loop
shlb
jno
add
xor
push
loope
icebp
xor
add
shlb
jno
add
xor
dec
push
in
inc
xor
pop
sbb
adc
cli
roll
dec
arpl
add
mov
fwait
xor
in
pusha
fcmovbe
test
inc
cmp
scas
cmpsl
add
xchg
loopne
mov
adc
hlt
cmpb
mov
inc
and
mov
outsl
cmpsb
mov
in
jge
shl
or
insl
iret
adc
imul
jb
in
xor
sub
ficomps
insl
adc
jne
sub
or
cs
hlt
push
fneni(8087
lcall
mov
sub
pop
out
pop
ret
dec
mov
movsb
sbb
xchg
arpl
sub
jno
jo
dec
and
pop
and
repz
pop
mov
mov
cmp
or
or
xchg
fbld
sub
gs
imul
rcrb
inc
jb
loopne
clc
inc
pop
push
lods
test
fcomps
scas
stos
mov
rclb
movsl
int3
insb
mov
imull
push
mov
add
jb
stos
inc
add
jbe
das
push
jb
inc
sub
mov
xor
xlat
pop
mov
in
sub
push
aas
and
jbe
cmp
push
je
adc
lods
into
clc
dec
cltd
or
push
inc
jmp
insl
mov
nop
into
test
mov
and
or
daa
pop
and
push
jb
loop
sub
add
mov
in
cltd
mov
icebp
or
pop
loop
mov
ret
popa
mov
mov
mov
push
sbb
and
adc
icebp
out
fs
push
pop
mov
and
mov
in
nop
pop
inc
cli
and
push
popa
xor
test
or
das
imul
xor
scas
cmpsl
adcl
cmpsl
cmp
xchg
fs
cli
mov
addr16
pop
add
mov
mov
and
iret
ret
std
pop
cmpsb
repnz
sahf
loopne
add
jnp
push
pushf
jne
adc
mov
call
movsl
sbb
lret
dec
push
dec
fstl
jns
pop
subl
push
xlat
or
cmp
mov
push
push
in
lea
aas
in
lods
fsubs
nop
sbb
xor
mov
ficomps
add
mov
push
fwait
jne
iret
les
stc
cmpsl
mov
out
jns
sub
mov
xchg
mov
nop
cld
add
mov
xchg
jmp
pop
out
mov
inc
jle
jns
in
stos
outsb
loopne
mov
xchg
rorb
movsl
mov
sub
jg
lret
add
adc
icebp
int3
jae
mov
std
insl
xchg
scas
mov
fists
sahf
sahf
mov
cmp
jmp
fcoms
das
push
pusha
push
sub
sub
mov
repnz
je
mov
test
mov
cmp
or
push
xchg
xor
lods
xchg
or
sbb
popa
jg
int
daa
xchg
stc
lret
rorl
hlt
cltd
inc
cmp
hlt
or
jae
xchg
jmp
lods
sahf
stos
cltd
call
push
mov
fnstsw
aas
arpl
xor
inc
or
mov
sbb
or
and
and
icebp
pop
lods
jne
and
inc
adc
int3
out
push
jne
stc
ret
xor
cmp
lds
in
ljmp
xchg
xor
xchg
mov
cmp
mov
imul
adcl
mov
cmp
les
stos
dec
in
out
stos
pushf
and
inc
movl
mov
lea
xor
jae
fsubl
jl
in
cmp
ret
inc
loopne
cmpsb
out
or
inc
stos
orb
or
jl
sbb
frstor
mov
add
stc
jnp
cli
xor
add
jge
jne
pop
pop
test
sbb
mov
jbe
xor
xchg
lcall
mov
mov
cwtl
dec
mov
xor
adc
test
hlt
div
pushf
les
es
mov
scas
mov
or
xchg
les
inc
cmc
add
jae
xchg
loop
clc
adc
add
sti
stos
or
push
out
lcall
cmpsb
xlat
out
and
repnz
mulb
pop
mov
and
ret
cmc
loop
cmp
mov
mov
jmp
addl
mov
lds
in
xor
inc
enter
dec
pop
stc
mov
fnstenv
jnp
mov
cmp
push
xorb
dec
push
sahf
sbb
push
sub
adc
mov
mov
shr
lea
test
je
into
adcb
dec
in
add
repnz
or
mov
pop
add
ds
or
lds
rcrl
movsb
push
and
popa
mov
xlat
subl
add
jne
jo
test
loop
mov
addl
daa
ficompl
sbb
ret
aaa
push
inc
inc
out
push
out
or
test
imul
fstpt
rep
nop
fsubl
jle
movl
popf
andl
in
out
jle
cmc
stos
mov
sbbl
test
pop
mov
cmp
ja
xor
stos
add
cmp
out
setns
pusha
push
mov
pusha
dec
sbb
inc
cltd
pop
ds
pop
sub
sti
push
adc
mov
mov
les
mov
das
out
dec
test
insb
sahf
xchg
push
loope
lret
leave
pop
xor
cld
icebp
rclb
movsb
mov
call
ds
dec
sub
jg
cmc
xchg
dec
jle
in
adc
mov
aas
out
orb
testb
inc
xchg
aam
outsb
add
hlt
xcrypt-ofb
cmpsl
push
cmc
add
out
sub
mov
sbb
je
sarl
add
jo
and
rorl
popa
dec
mov
int
ja
push
loopne
lret
sbb
jbe
push
lret
repz
pop
mov
mov
xchg
sarb
xor
jl
mov
mov
clc
push
lcall
cmp
outsb
fstpt
loopne
es
jbe
xchg
in
sub
pusha
mov
or
pop
jnp
outsb
or
mov
loopne
mov
cwtl
int3
jbe
cwtl
dec
xchg
and
rorl
insb
andb
mov
add
stc
mov
pop
test
out
cmp
pop
xchg
add
lock
xor
fmulp
push
add
push
and
popf
pop
push
ds
jp
add
pop
add
out
out
mov
mov
in
xor
inc
out
rolb
sbb
jecxz
movsb
pop
adc
mov
pop
insl
xor
lods
andl
mov
jge
ret
fsub
dec
sarb
fisttpl
cmpsb
xchg
fdiv
pop
adc
leave
mov
pushw
into
xchg
test
jno
cwtl
movsl
lds
mov
in
incb
adc
push
adc
cmpsl
mov
xor
sbb
mov
aas
insl
pop
push
out
je
inc
in
mov
ss
addb
and
jns
mov
jbe
inc
outsl
push
add
test
dec
jne
test
imul
sub
fimuls
pop
popf
ds
loope
movsl
cwtl
push
dec
mov
enter
mov
clc
jge
xchg
int3
mov
dec
in
inc
xchg
or
push
cmp
out
jae
andb
and
arpl
imul
fwait
lock
jp
mov
subl
dec
dec
pop
scas
push
lds
repz
out
jae
adc
pop
pop
push
addr16
inc
test
es
sbb
xchg
mov
xor
jmp
push
fneni(8087
mov
mov
cwtl
sti
push
adc
jbe
arpl
dec
push
js
sub
loope
imul
xorb
add
fidivrs
imul
xchg
imul
sub
nop
loop
fs
cmpsb
fsubs
dec
xchg
bound
and
cmp
lea
movsb
jecxz
mov
aam
jae
pop
pop
mov
insl
add
jg
mov
pop
or
testl
dec
mov
mov
pop
leave
mov
les
addr16
add
notb
inc
cmp
cmp
cmpsl
movsl
icebp
les
repz
push
jge
sarb
adc
push
fsts
bound
js
pop
fcomip
sarl
adc
fists
add
fistpll
mov
sbb
cmp
iret
mov
xorb
push
ret
test
add
push
ror
xor
lds
push
inc
xor
jmp
add
mov
lods
dec
xorl
push
pop
mov
pop
jnp
dec
lea
mov
aas
lea
das
or
in
fwait
aam
test
xorb
stos
outsb
lock
fsubr
mov
xor
jne
inc
xor
lahf
imul
ja
icebp
push
mov
xor
sbb
popa
cmp
xor
sub
mov
flds
aaa
or
sarb
inc
das
fnstenv
and
dec
mov
idivl
ja
push
loop
es
and
rolb
scas
mov
push
lret
mov
cmp
adc
mov
addr16
jmp
clc
das
gs
aaa
cwtl
daa
pusha
shll
or
cmp
addb
mov
lret
setno
push
inc
and
cmc
les
out
lcall
mov
loope
mov
std
mov
mov
sbb
dec
jp
mov
fistl
jnp
cmp
push
imul
or
scas
push
xchg
arpl
lret
test
and
roll
not
push
mov
fistps
mov
repz
push
gs
add
fiaddl
lea
mov
sub
mov
dec
sub
xor
cmp
repnz
jns
push
inc
icebp
ljmp
dec
adc
hlt
add
pop
aad
hlt
imul
mov
pop
adc
cmp
xor
sub
jb
jb
std
xchg
mov
cmp
xorl
iret
mov
cld
lret
test
push
sub
scas
fs
push
ljmp
dec
lds
cld
aam
push
bound
imul
push
pop
xchg
ja
mov
add
sbb
inc
mov
fwait
cmpsb
sbb
mov
fnsave
mov
cmp
lcall
cli
lret
inc
xlat
sbb
faddl
mov
shrb
and
lods
jns
push
xchg
and
fistps
add
int3
xor
mov
mov
pop
lds
mov
imul
fcomi
aam
mov
ss
dec
sbbb
add
aad
xchg
cltd
mov
cmc
cmp
adc
insl
ficompl
pusha
dec
lcall
and
inc
scas
cmp
mov
sub
inc
lret
enter
sbb
adc
les
rcll
fildll
add
lea
aaa
into
or
lods
call
int3
bound
scas
orb
or
xorl
lret
push
iret
dec
xor
add
lret
dec
dec
jb
mov
mov
fsts
mov
repz
dec
mov
imul
adc
mov
adc
les
xchg
pop
cmpsl
sub
ss
outsb
push
push
clc
inc
fnsave
xchg
popf
xor
hlt
adc
test
sahf
lret
jae
xlat
sub
jns
cmp
mov
pop
aad
push
push
push
in
aas
adc
cmc
scas
push
mov
fimull
inc
std
push
cmpsl
out
hlt
xchg
imul
lea
dec
das
cmc
ret
dec
push
nop
nop
xchg
pop
ds
lods
rcrb
mov
jno
movsb
add
sbb
pop
std
push
or
int3
push
add
inc
loop
pop
sbb
pop
push
push
mov
pop
cmp
sub
popl
adc
pop
adc
out
lahf
add
jnp
jg
aaa
out
adc
xor
or
cld
repnz
les
inc
pop
sbb
sbb
mov
mov
xor
insl
push
mov
sbb
cmp
and
sub
incb
loop
ljmp
or
rcll
outsb
repnz
in
jle
jbe
gs
cmp
inc
pop
xor
and
sub
outsl
ret
rclb
and
or
xchg
dec
shlb
rcr
subb
pop
jp
arpl
test
dec
insl
pop
je
push
push
dec
pushf
sbb
lret
push
jmp
call
test
rclb
ret
push
in
or
jno
ljmp
addr16
sbb
in
push
and
test
pop
movsl
insl
jg
xor
jmp
or
lods
xor
sbb
neg
xor
popa
push
inc
inc
push
or
in
jb,pt
in
loope
loopne
je
mov
leave
test
mov
dec
push
mov
ret
jl
addb
dec
mov
xor
hlt
mov
test
dec
outsl
cs
aad
mov
stos
out
xor
rclb
movups
dec
pushfw
xchg
or
inc
lds
mov
mov
daa
jbe
adc
lds
push
inc
mov
ds
jecxz
loopne
xor
inc
sub
cmp
stos
or
ja
je
and
adc
rcrb
insb
test
pop
xorl
pop
lret
imull
mov
movsb
and
stos
call
in
push
popf
sti
ret
sub
subb
cmp
lea
push
mov
popa
pop
shlb
jecxz
repnz
mov
push
cwtl
fs
out
cmp
scas
cmp
sahf
dec
pop
das
xchg
ljmp
rcll
cmp
pop
inc
es
xchg
pmaddwd
adc
mov
adc
xor
outsl
xchg
pop
xchg
jmp
or
sub
jbe,pt
jnp
and
adc
mov
lcall
cmp
sarl
sbb
ret
mov
mov
push
cmpb
stc
icebp
je
xchg
nop
addr16
adcl
and
xor
mov
xchg
lret
movsl
lea
fwait
aas
sbb
xchg
xor
fdivrs
sbb
ljmp
adc
repnz
push
test
add
xchg
shr
xchg
jns
cli
xchg
int
mov
and
out
pop
in
lea
sub
fsubrs
dec
sub
add
repnz
out
in
xchg
push
push
addl
mov
sti
xor
push
enter
adc
les
aaa
loopne
shll
dec
mov
inc
sbb
dec
lock
aad
jbe
arpl
enter
push
dec
push
stos
loop
les
rorb
movsb
fsubrl
and
ds
outsb
xchg
cmpsb
rclb
jo
mov
loope
bound
cmp
jmp
xor
xor
out
shll
pop
mov
push
mov
mov
sbb
push
xor
dec
pusha
daa
sbb
sbb
adc
and
iret
inc
push
mov
adc
addb
stos
incl
inc
inc
xchg
imulb
or
cli
push
inc
jae
jmp
mov
repnz
lahf
into
mov
adc
add
cmp
pop
xchg
lret
mov
mov
int3
inc
movsl
adc
xchg
int
pop
dec
cmp
idiv
push
push
cmpb
sbb
dec
adc
pop
addl
pushf
or
xlat
shr
out
test
push
add
push
out
jg
jae
addr16
xor
enter
pop
popf
xorl
jmp
lea
lods
mov
push
mov
jae
fnstsw
imul
dec
divl
inc
cs
sbb
inc
fwait
scas
mov
hlt
test
mov
jge
push
sub
and
daa
loopne
dec
rcrb
cmp
adcl
xchg
mov
cmpsl
shrb
and
test
add
pushf
mov
push
sarl
inc
inc
and
popf
cs
mov
cmp
mov
or
mov
mov
push
test
xchg
pop
pop
aas
fisubrs
jg
cmp
ja
push
xchg
add
aaa
or
in
add
inc
pushf
cmpsl
dec
xchg
push
and
adc
leave
add
pop
sahf
jmp
imul
arpl
fnstcw
or
scas
pop
outsl
sub
push
ror
xor
jge
cmpsl
aas
and
mov
push
sub
xchg
or
cmc
sub
mov
jle
jno
scas
stos
iret
cltd
pop
jno
aas
mov
sub
sbb
cmp
les
dec
push
lock
xor
repz
push
cltd
sti
mov
pop
sub
cmp
loopne
into
mov
loope
mov
pop
data16
xor
mov
xchg
cld
pop
push
inc
stos
mov
mov
mov
inc
inc
lret
push
xor
mov
leave
icebp
inc
jae
in
fildll
sub
adc
push
mov
add
xchg
scas
jnp
daa
std
adc
jmp
out
mov
jp
and
pop
movsb
sub
sub
mov
jb
xor
cmp
aam
sub
jbe
test
dec
xor
out
dec
arpl
dec
mov
stos
inc
sti
out
std
push
ret
mov
fildl
mov
lret
pop
push
and
imul
sbb
mov
shlb
fdivr
jp
xchg
repz
sbb
movsb
xor
jl
mov
scas
add
fcmovnb
cmp
jp
cmp
cmp
inc
push
mov
in
cmp
jo
push
pop
jg
sub
aam
repz
inc
lods
rep
sbb
inc
cmpb
mov
dec
cs
mov
inc
inc
add
jge
xchg
shlb
push
jp
mov
xor
pop
xor
pusha
adc
mov
mov
loopne
xchg
jnp
enter
mov
push
xchg
jecxz
jmp
in
popf
xchg
es
push
pop
mov
sub
decl
add
lods
rolb
stos
fs
pop
push
sub
adc
inc
shl
jb
mov
xchg
std
or
mov
mov
lcall
xor
add
mov
popf
shlb
repnz
into
sub
shll
frstor
inc
push
enter
mov
jns
sbb
xor
cltd
adc
push
cmpsl
addr16
scas
cmp
lcall
cli
or
cmp
jns
mov
loop
sub
pop
sub
mov
ss
test
pop
insb
sbb
push
and
mov
mov
out
push
inc
mov
cld
cltd
in
scas
push
lahf
cmpl
xchg
into
pop
and
push
icebp
in
sub
dec
mov
fcomip
stc
lret
fdivrs
or
aaa
iret
sbb
mov
adc
mov
pusha
sbb
or
mov
or
shlb
mov
addr16
and
cmpsl
add
add
mov
and
mov
mov
add
fidivl
out
add
iret
fwait
in
push
dec
mov
test
cmp
mov
xor
pushf
and
mov
in
stos
lret
out
lock
leave
pop
pop
jbe
leave
push
pop
sub
jns
clc
mov
sub
sbb
cmpsb
ljmp
pop
aad
subb
vpmulhw
imul
xchg
fs
fbstp
and
sub
jg
mov
and
sbb
jmp
or
xchg
xor
cwtl
mov
cld
sub
xchg
adc
jl
cmc
in
jle
imul
mov
cmpsl
push
mov
add
js
ret
repnz
sbb
mov
adc
mov
inc
jmp
mov
out
inc
mov
fwait
scas
loopne
mov
imul
mov
mov
adc
stc
fidivrs
and
sbb
rcrl
push
insb
jno
ffreep
mov
out
adc
or
inc
out
int
gs
das
and
int3
cmpsl
sub
inc
in
ljmp
dec
cmc
stos
movsb
and
pop
divl
xchg
cmp
fdivrs
test
cmp
add
adc
pusha
fldt
cmp
xchg
imul
sub
jl
cld
in
mov
pop
pop
push
popf
push
sbb
js
dec
dec
jns
xor
push
mov
out
sub
xor
nop
mov
cmc
push
and
inc
push
mov
jle
mov
and
data16
mov
and
mov
xchg
mov
stc
inc
mov
out
mov
std
sub
mov
loop
xchg
stc
push
sbb
xor
daa
rcrl
inc
icebp
xor
add
shlb
jno
add
xor
push
loope
icebp
xor
add
shlb
jno
add
xor
bound
xor
add
shlb
jno
add
xor
pusha
rcll
inc
lock
xorb
popa
ret
mov
out
insl
fidivrs
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
and
xor
lea
jp
and
inc
mov
sbb
or
sub
sub
fcoms
enter
call
pusha
mov
nop
dec
mov
jge
or
cmp
sub
fcoms
enter
call
pusha
mov
mov
int3
sbb
mov
pop
pop
xchg
je
and
mov
pop
mov
and
test
hlt
in
dec
fcomps
gs
xor
mov
xchg
aas
or
push
mov
jge
push
enter
sub
lret
aad
inc
jmp
imul
jo
nop
out
xor
mov
in
push
adc
dec
in
xor
in
jo
or
mov
nop
call
lcall
lock
rolb
in
adc
jecxz
xor
pop
and
dec
das
sbb
sub
loopne
xlat
mov
and
pop
pusha
dec
pop
or
pop
pop
movsl
cmp
int3
fcoms
enter
call
pusha
mov
nop
dec
mov
sbb
or
cmp
outsb
inc
fsubs
mov
and
add
jb
subb
push
mov
insb
rorb
dec
mov
gs
movsb
inc
mov
mov
adc
xchg
cmp
mov
sarl
mov
jl
cltd
adc
or
push
mov
jo
sbbb
mov
sbb
or
cmp
sub
fcoms
enter
call
pusha
mov
nop
dec
mov
sbb
or
cmp
sub
fdivs
das
mov
out
xchg
mov
mov
xor
jl
dec
scas
add
xchg
js
jb
inc
and
fisttps
jp
pop
sti
pop
pop
orl
push
or
in
xor
inc
xor
ja
xor
and
in
pop
pusha
cs
sub
es
mov
or
push
cmp
clc
cli
lret
out
jmp
cmp
sbb
or
popf
xchg
jnp
or
pop
inc
daa
push
xchg
insb
inc
cli
mov
mov
mov
les
mov
dec
pop
roll
cwtl
mov
mov
pop
pop
jmp
ret
xor
loop
fmuls
cmp
or
popf
cwtl
out
fbld
lods
cmpsl
cmp
push
mov
in
inc
ss
pushf
lahf
push
xchg
pop
add
inc
inc
mov
clc
or
mov
lret
in
call
jbe
cs
in
adc
add
pop
sub
adc
fstpt
push
ficompl
fcmovnu
mov
stos
mov
clc
sub
lcall
jno
sub
insb
gs
xchg
scas
lds
cmp
mov
mov
push
add
std
add
dec
mov
test
jae
add
dec
mov
popa
cmp
repz
xor
gs
divb
jg
fs
cli
mov
xor
xchg
add
popf
fsubl
test
push
add
mov
in
ljmp
cs
out
and
xchg
xchg
add
jns
ret
ljmp
mov
in
repnz
pop
sub
xchg
pop
aad
leave
pop
lret
leave
xor
aam
jle
xchg
iret
xchg
jmp
cmp
xchg
pop
mov
test
scas
aaa
sbb
notl
out
sub
rcrl
mov
movsl
js
in
imul
xchg
js
imul
dec
mov
mov
jbe
jo
adc
stos
sbb
cmc
push
shlb
mov
add
adc
faddl
fwait
testb
addr16
je
lods
roll
push
jbe
inc
jp
out
test
es
mov
dec
sti
repz
jg
pop
sarl
call
mov
aas
test
push
adc
pop
stc
push
mov
das
insb
xchg
sub
push
push
mov
mov
int
push
movsl
subb
fsubr
loope
dec
loope
in
and
leave
js
lods
rcrb
dec
fabs
and
in
cltd
and
sti
repz
call
decl
shrb
loopne
fdivrl
xor
mov
stos
int
movsb
pop
insl
or
dec
xor
je
mov
ja
and
cs
in
jns
out
inc
xchg
mov
add
sub
movsb
ljmp
jmp
push
dec
cmpsb
loope
icebp
pop
bound
popf
int
xchg
ret
scas
sbbb
in
aas
pop
mov
addr16
inc
pop
lahf
fisttpl
jnp
iret
jl
repnz
into
or
aas
call
fldt
add
mov
lea
scas
push
into
or
jp
adc
scas
arpl
xor
cmp
xchg
xchg
xchg
sbb
xor
sbb
test
push
call
xchg
stc
outsl
imul
adc
jge
stc
cld
cmc
push
pop
sub
adc
loope
cmp
push
lahf
fldcw
sti
lcall
sbb
dec
test
dec
fucomip
loope
pop
repz
xor
clc
fnstcw
and
mov
lods
ds
das
push
fwait
xor
inc
dec
pop
fwait
cmc
in
mov
or
mov
mov
fisubs
shrl
xchg
addr16
cwtl
xor
push
aaa
fbld
jmp
xor
insl
mov
and
je
lret
fimull
outsl
pop
out
daa
fst
adc
test
test
cmp
jae
out
les
push
pop
leave
sub
push
xor
sub
mov
mov
rclb
inc
data16
push
xchg
rorl
aad
xchg
rclb
push
xor
xor
fwait
pop
add
daa
mov
rorb
adc
xchg
sbb
negl
or
pop
sub
outsl
jl
mov
add
lods
xchg
mov
mov
sub
jne
rcrb
fldt
aad
mov
out
mov
test
jne
cwtl
inc
out
mov
enter
test
cmpsb
sub
in
cmp
mov
inc
add
xor
jp
add
popa
stos
adc
or
outsb
xchg
cltd
xchg
lret
dec
rep
out
in
jg
enter
xchg
inc
mov
out
cmp
out
pusha
xchg
outsl
cmp
es
xor
xchg
and
mov
int
and
jns
mov
cs
mov
xor
clc
mov
andb
jno
pop
mov
mov
mov
dec
int
sbb
sbb
movsb
sub
cwtl
out
push
adc
pop
jge
mov
mov
lock
andb
ja
aad
mov
xadd
stos
notl
js
sbb
pop
dec
push
dec
dec
jns
mov
jge
add
popa
repnz
les
out
mov
xchg
push
fsts
ja
aaa
push
cld
stos
cmc
test
jmp
insb
shll
outsb
cmp
push
adc
pop
jo
push
dec
inc
shll
jb
sub
aaa
jp
repnz
add
push
aad
add
test
lret
orl
inc
lahf
adc
adc
push
adc
cmc
nop
jno
jl
aad
push
dec
dec
mov
jns
lods
shlb
push
stc
xchg
lods
adc
call
mov
shlb
bound
pop
xchg
mov
enter
or
xor
xor
mov
add
mov
dec
jle
mov
pop
push
push
out
stos
push
pop
mov
in
hlt
sbb
adc
and
push
daa
adc
aad
jno
divl
ja
mov
int
repz
ljmp
mov
cmp
push
fcmovnb
mov
arpl
int
and
mov
jns
push
sub
mov
mov
pop
jne
mov
test
sub
adc
daa
sbb
fldenv
jle
fstl
aaa
xor
scas
into
jg
fwait
sbb
insl
sti
int3
aam
lcall
das
mov
shrb
or
rorl
inc
adc
ss
jmp
adc
lret
xchg
cld
fisubl
dec
push
jne
popa
add
aaa
loopne
cmpsl
add
bound
test
aas
fwait
mov
lret
data16
mov
mull
test
cmp
outsl
pop
fcompl
add
dec
bound
xchg
sarb
mov
call
nop
fsubrl
jecxz
mov
push
push
mov
bound
punpcklwd
mov
push
stos
loopne
dec
cmpl
addr16
xor
pop
mov
aaa
test
lret
sub
mov
leave
clc
ret
inc
daa
rolb
sbb
jp
in
mov
stos
gs
int
adc
cwtl
sub
ja
pop
scas
jle
mov
mov
or
add
dec
das
pop
int
mov
test
sbb
mov
aaa
xor
in
into
pop
mov
shr
pushf
in
mov
aaa
add
aas
mov
aaa
xchg
add
and
popa
sbb
fsubl
jbe
dec
and
adc
mov
in
jecxz
gs
dec
orl
aad
jmp
mov
or
pop
shll
aad
popf
pop
xchg
inc
mov
popf
cwtl
je
cmp
fwait
dec
pop
pop
add
pop
rcr
or
insb
sahf
sbbb
mov
sbb
fiaddl
push
pop
xchg
xor
gs
mov
push
adc
fs
xchg
dec
std
adc
fwait
push
sbb
and
aaa
cmpb
insb
mov
xlat
sub
mov
mov
movsl
mov
mov
cbtw
lea
cmpb
repnz
mov
mov
sbb
lret
pop
in
adc
inc
push
adc
sub
jmp
arpl
adc
or
test
jmp
mov
in
dec
fcoms
ljmp
imul
out
cld
lods
je
hlt
xor
sarl
ss
fstp
and
icebp
push
xchg
fbstp
mov
xor
sarb
scas
lea
cmp
jmp
out
push
ss
mov
fisubrl
sub
js
mov
js
rcl
jl
shl
scas
ret
lock
adc
cld
popa
pop
popa
test
sahf
repnz
pop
add
sbb
arpl
arpl
mov
mov
push
in
mov
xchg
mov
lret
lods
xchg
jnp
popf
cmpsl
into
dec
in
mov
pushf
mov
add
jl
or
mov
enter
scas
arpl
push
stos
mov
in
dec
ret
and
mov
negb
xchg
sahf
or
pop
sbb
mov
xor
shl
xor
in
push
mov
cmp
mov
mov
ljmp
cli
cld
mov
or
xor
adc
leave
mov
cmpsb
test
mov
inc
dec
rcrl
fucomi
inc
dec
std
xor
cmc
or
pop
rcll
sbb
inc
cmpsb
jp
sahf
stc
cli
xchg
stos
dec
fisubrl
or
mov
sub
aas
cs
mov
and
push
fstpt
fstp
adc
sbb
das
mov
dec
ss
adc
mov
xchg
mov
mov
lret
ja
test
sbb
sbb
cwtl
pop
push
dec
push
sbb
iret
scas
xchg
push
push
mov
int3
ret
sbb
cmpsb
lcall
lcall
push
lahf
repz
clc
sbbb
roll
cmp
jo
movsb
testb
mov
cwtl
mov
pop
negl
sub
jge
xor
mov
addl
mov
cltd
loopne
and
jne
shlb
xor
int
scas
sub
mov
lds
mov
pushf
shll
pusha
push
cmp
mov
jns
add
sub
les
and
pop
push
mov
rclb
je
shlb
cltd
sub
pop
add
xchg
xlat
rcrl
in
mull
push
and
add
xlat
aam
jl
jmp
scas
or
mov
movsl
std
sub
sbbl
xchg
inc
movsb
xchg
insl
sbb
or
sub
pop
pushf
and
dec
cmc
out
adc
sti
or
add
test
jo
xchg
jg,pt
rcr
bound
loop
jno
xchg
add
sub
je
xor
movsb
dec
mov
push
repnz
or
gs
subl
push
push
dec
popf
sbb
jb
mov
dec
adc
ret
mov
pushf
mov
and
iret
jmp
sahf
lret
xchg
push
cld
push
sahf
add
les
cmc
out
cmp
dec
js
ss
dec
loope
pushf
adc
sahf
mov
aad
and
adc
shlb
bound
add
sti
lret
dec
mov
inc
pop
outsl
out
aad
hlt
out
sbb
add
xor
push
mov
lahf
nop
das
stos
and
cs
mov
pop
cld
aam
sar
gs
jge
and
mov
cmp
cmp
pop
adc
out
dec
sub
and
mov
scas
jb
aaa
xor
lock
cmpsb
xchg
xchg
sahf
add
scas
jb
sar
pop
es
push
sub
faddl
dec
int3
dec
adc
pop
sbb
or
movsl
rorb
pusha
jo
lret
icebp
mov
repz
mov
and
xchg
out
fbld
movsl
sbb
aad
sti
push
or
pop
mov
sti
mov
pop
ss
fstps
jl
fadds
sbb
sarl
fsubrl
xor
in
pop
cli
mov
pop
test
lods
in
mov
jl
adc
pop
mov
xbegin
mov
int3
data16
out
mov
in
aam
js
iret
in
fisubs
lret
insl
stos
sahf
fisttpl
ror
mov
loope
mov
test
jno
pop
mov
bound
push
xchg
sub
std
jns
incl
cmc
pop
shl
jmp
aaa
jo
rclb
sbb
inc
call
dec
imul
movsb
addr16
sub
addl
imul
leave
popa
push
fwait
cmp
and
scas
add
inc
sub
inc
icebp
sub
dec
adc
stc
cmc
mov
sbb
inc
insl
mov
xchg
sbb
shlb
dec
push
inc
imul
dec
and
mov
sub
jae
mull
fisubrs
and
and
sub
push
pop
ret
cmp
outsl
add
in
and
pop
dec
mov
lods
jo
jne
adc
dec
mov
es
lcall
sbb
xchg
in
push
xchg
out
std
lea
lods
push
push
or
clc
push
mov
test
xchg
mov
outsb
cmp
pushf
and
mov
insb
psrlw
pop
mov
mov
adc
fstp
fisubs
iret
pop
out
lods
enter
ret
ret
push
repz
mov
inc
pop
ret
jmp
add
addr16
arpl
movsb
dec
push
pushf
adc
jb
xor
sbb
fnsave
aas
lods
cmp
sti
pop
dec
cmp
push
rclb
js
loope
test
and
scas
scas
and
lds
ds
add
fwait
test
mov
or
or
jo
popa
das
push
push
call
outsb
and
arpl
mov
in
bound
push
pop
add
aas
fxch
mov
cmpsl
xchg
loopne
sbb
or
jl
pop
in
daa
lea
icebp
sub
nop
xchg
js
rolb
inc
mov
fnstsw
pop
mov
jns
sub
xor
inc
shll
or
sahf
js
sbb
mov
adc
test
inc
dec
pop
jae
iret
sub
mov
and
or
and
push
popa
rcrb
pop
js
out
xchg
ss
push
dec
aas
shrb
outsl
ds
and
push
sub
cmp
push
shlb
shll
or
test
xor
mov
xchg
or
cltd
jle
mov
cmp
dec
xlat
mov
mov
lock
pop
mov
ret
xlat
mov
sbb
mov
imul
inc
adc
push
int3
jp
pop
xchg
lret
enter
into
dec
mov
outsb
push
or
inc
or
lea
dec
push
xor
idivb
rorl
mov
cld
rolb
shrb
pop
int3
pushf
in
ljmp
es
mov
iret
push
imul
mov
xor
jecxz
mov
or
imul
push
mov
dec
or
jle
shl
pop
mov
mov
jge
inc
daa
xor
sbb
dec
cmp
pop
ds
pop
rcr
je
and
xchg
mov
orb
pop
std
mov
out
xchg
and
gs
adc
mov
js
into
testb
nop
dec
hlt
setge
test
mov
add
lret
xor
dec
rolb
popa
les
int
popf
inc
and
xchg
in
sahf
lods
mov
push
fdivrl
cmc
lods
jg
icebp
fs
lods
stc
int3
stos
loopne
in
orb
lea
fisubs
push
cwtl
std
mov
mov
ljmp
pushf
ficomps
dec
mov
add
dec
xchg
xor
adc
fisttpll
xor
into
mov
in
fs
mov
jle
cmp
jae
xchg
ljmp
inc
push
adc
jle
imul
lret
rorb
push
es
fnclex
pop
cmc
push
sahf
icebp
divl
sub
cmp
dec
sbb
xchg
adc
push
cli
ret
rcl
cltd
nop
push
lret
outsb
dec
imul
mov
pop
fistps
pop
and
out
fnstenv
pusha
in
inc
cwtl
sbb
xor
xor
and
sub
or
lret
cs
and
bound
pushf
int
js
xchg
mov
stos
adc
or
lods
inc
pop
andb
fdivrs
pop
inc
je
into
shll
add
fdiv
mov
xchg
cli
push
out
push
add
in
sbb
sub
mov
and
dec
inc
push
bound
sbb
or
shrl
bswap
jns
jge
jecxz
pop
and
inc
std
lock
daa
flds
fldl
lea
loopne
sbb
test
mov
and
lahf
cmp
ljmp
adc
test
sub
jb
repz
pop
adc
lret
and
sub
jo
iret
insb
jp
aas
pop
add
scas
fstp
fisttps
pop
nop
add
mov
inc
hlt
sbb
shll
push
cwtl
pop
in
jmp
stc
mov
xchg
push
fcmovne
daa
lds
pop
xor
movsl
lds
test
andl
mov
in
shrb
iret
pop
mov
mov
rcl
inc
ja
arpl
mov
pop
add
test
outsb
xchg
sub
movsb
inc
popf
lods
cs
cmpsb
xor
adc
jecxz
pop
stos
cld
jmp
out
xor
xchg
inc
aaa
dec
lock
mov
sbb
mov
out
shrl
stos
xchg
pusha
jmp
dec
mov
loope
imul
test
lods
jbe
repz
sbb
push
cltd
aaa
jl
fsubp
pop
push
jmp
test
stos
inc
push
and
stos
gs
pop
or
dec
mov
sub
scas
shrl
jp
mov
push
inc
lcall
cmpsl
xchg
and
popa
mov
mov
int
cld
out
lret
addr16
cs
xor
xchg
shll
pop
mov
pop
push
scas
mov
push
cmp
loop
daa
das
test
fcmovb
cmp
and
movsl
shl
bound
pop
jg
loop
test
xchg
and
out
add
pop
pop
xor
dec
loope
sub
out
sub
mov
dec
cmpsl
xchg
or
mov
and
aas
dec
fsub
xchg
enter
cmpb
sti
xor
stc
mov
in
addb
fucom
mov
cmp
scas
jnp
rorb
shrb
js
xlat
out
sub
or
lret
push
popa
adc
lahf
fnstcw
in
xchg
test
xor
sti
ret
sub
stos
jp
xchg
mov
inc
addr16
lock
std
rcrb
push
dec
fbld
ljmp
pop
push
and
sarb
and
inc
int
jmp
movsl
jnp
mov
pop
fsubrp
sahf
push
sub
add
aaa
dec
test
inc
lds
clc
dec
dec
adc
ss
mov
adc
jl
mov
mov
pop
fsubrp
notb
ljmp
mov
ds
ret
cmp
jmp
clc
cld
xor
iret
pop
xor
push
in
push
les
loopne
push
stc
int3
aaa
dec
adc
inc
aam
xchg
call
jo
cmp
insl
pop
sub
inc
cltd
mov
mov
mov
ror
bound
and
push
pop
or
jmp
xor
out
lea
ret
lcall
pop
in
xor
jno
cmp
cmp
dec
cmp
mov
mov
in
jg
jbe
popa
cld
int
fs
shl
stc
pop
insb
stc
int
js
sub
gs
stc
xchg
inc
xchg
add
mov
push
xchg
aad
aaa
nop
loopne
subl
int
test
push
adc
jo
or
inc
mov
insl
xchg
stos
outsl
jbe
mov
sub
push
sbb
push
pushf
ljmp
sahf
int
lods
mov
shrl
lods
das
jl
mov
rcrb
push
in
and
call
mov
int3
cmp
orl
adc
fimull
popf
jo
mov
gs
mov
fninit
pop
and
inc
sub
pop
lahf
pop
loopne
in
mov
pop
cmpsb
das
lea
inc
enter
dec
lods
add
sbb
fcomps
jge
cli
or
cwtl
in
xor
jne
xor
test
or
xchg
sbbl
stos
push
nop
cmpsb
xchg
sub
and
xor
fidivl
idiv
mov
outsl
in
out
xchg
or
pop
jbe
mov
adc
cmp
ljmp
pushf
lods
pop
cmp
stc
int3
sub
add
mov
insb
cwtl
imul
leave
shll
push
sub
mov
cmp
les
xor
push
inc
inc
push
loopne
repz
mov
in
lret
xor
mov
fwait
sbb
inc
lea
adc
mov
cmc
pop
xchg
clc
jo
pushf
in
adc
in
push
mov
out
sbb
push
mov
bound
bound
mov
and
push
or
addr16
in
scas
xchg
push
je
dec
lods
sub
insl
cmpsl
enter
call
pusha
mov
nop
dec
mov
sbb
or
cmp
sub
fcoms
enter
call
pusha
mov
nop
dec
mov
sbb
or
cmp
sub
fcoms
call
pusha
mov
nop
dec
mov
sbb
or
cmp
sub
fcoms
enter
call
pusha
mov
nop
loop
js
pop
mov
mov
xlat
mov
cmpsb
ja
inc
xchg
jae
pop
notb
jp
notl
movl
notl
push
xchg
shlb
ja
inc
xchg
daa
out
pop
pop
ss
divl
push
xlat
cmpsl
data16
xchg
push
addr16
ja
inc
pop
push
call
pop
pop
push
flds
xlat
sbb
loop
xchg
fsubs
add
loope
testb
hlt
jno
adc
xorb
outsw
push
or
pop
pop
outsl
pop
aaa
push
push
add
pop
or
rcrb
xchg
cli
mov
cmp
xchg
mov
aas
jo
mov
pusha
daa
or
ret
cmpsw
and
cwtl
into
jbe
inc
push
or
out
sub
movb
es
cmp
sub
jns
mov
cli
stos
mov
daa
outsb
enter
inc
push
mov
inc
in
outsl
data16
xchg
dec
loop
xchg
inc
js
or
sysenter
sub
repz
add
ret
repnz
sti
pop
xor
xchg
in
addr16
inc
xchg
daa
sahf
aaa
pop
pusha
pop
lock
mull
xlat
cmpsl
insb
mov
xchg
fisttps
aam
loop
adc
mov
jae
arpl
aas
add
ret
cmp
lahf
inc
sbbl
push
je
push
xchg
jle
bswap
or
aas
repnz
stc
fidivl
lret
xor
and
pop
pop
ss
notl
movl
mov
xchg
mov
cmpsb
ja
inc
xchg
daa
out
pop
pop
ss
notl
movl
mov
xchg
mov
add
mov
xchg
loop
and
aad
jne
sub
in
jbe
mov
mov
filds
aaa
fs
mov
stos
int
subb
aas
or
fistpl
shll
jae
mov
test
inc
inc
popl
add
test
cmc
or
js
jns
push
add
xchg
ljmp
rcr
pop
jmp
mov
lret
pop
popa
jae
adc
leave
mov
inc
dec
pop
shll
or
clc
pop
icebp
sub
adc
and
pop
pop
negl
outsl
lret
jmp
mov
test
insb
dec
sbb
cmp
push
mov
lods
lret
je
js
cmp
mov
sbb
mov
inc
out
mov
inc
sbb
insl
pop
add
movsl
movsl
sbb
xor
sub
pop
insb
mov
imul
ret
jnp
xchg
and
xchg
mov
inc
push
sbb
loope
cmpsb
subl
cmp
pop
pop
mov
orl
out
stc
push
daa
insl
sarb
xor
mov
push
rolb
cld
or
inc
jbe
jmp
cmpsl
xchg
push
jecxz
adc
imul
mov
sub
jg
jns
jle
mov
push
scas
xchg
jge
or
and
call
lock
inc
sbb
pop
aad
rol
andl
sub
sbb
addr16
cli
dec
lcall
rclb
jge
scas
and
dec
nop
cmp
inc
dec
sbb
push
popf
cli
push
enter
cwtl
lods
or
sahf
ss
fstl
dec
ficoms
and
lock
mov
push
out
out
push
pop
out
ds
rcr
push
jl
mov
fidivrl
sbb
sub
add
js
out
test
cli
jbe
sub
testl
jne
shrb
aaa
fists
into
sahf
mov
shll
pop
adc
imul
dec
add
sub
cld
adc
or
outsb
stc
adc
and
and
in
sbbb
dec
mov
sti
xorb
dec
popa
sahf
out
lahf
loop
cmp
mov
push
mov
mov
add
repnz
lods
mov
mov
int
and
jns
cli
or
push
mov
sub
jae
rorb
hlt
xchg
out
sbb
add
adc
into
mov
jg
fnstenv
insb
mov
sbb
ss
xchg
nop
loop
pop
imul
xor
xlat
push
subb
sub
loopne
mov
jmp
xchg
and
xor
scas
les
cltd
into
aaa
sub
loope
fidivrl
lret
add
pusha
inc
rcll
push
inc
insl
xchg
fwait
mov
in
mov
sbb
mov
cltd
insl
andl
xchg
sahf
mov
pusha
sbb
scas
inc
jle
xchg
xchg
test
loop
les
aaa
lock
sbb
mov
dec
jnp
mov
push
jb
pop
rclb
loop
cld
jo
cmp
iret
mov
sub
push
cltd
jns
jmp
mov
js
hlt
push
xor
cmp
out
dec
xchg
jg
add
mov
inc
jo
xchg
in
in
into
sub
dec
push
int3
mov
gs
fldl
scas
mov
movsb
push
lea
sahf
shlb
or
movsl
lcall
mov
pop
mov
push
leave
stc
or
call
ss
pop
mov
adc
push
loop
int
pop
nop
ds
andb
mov
adc
gs
pop
jmp
inc
or
push
mov
notl
mov
xchg
add
mov
or
outsb
mov
push
mov
jno
dec
push
push
xchg
xchg
xchg
jge
jp
and
fwait
les
mov
xor
ret
mov
out
clc
dec
movsl
add
inc
imul
jbe
in
push
mov
call
mov
aam
pop
cmp
popa
mov
push
icebp
push
xor
iret
lods
lahf
mov
arpl
inc
dec
movl
pop
into
or
out
push
push
jle
loope
cwtl
call
cld
sub
movl
cmp
out
iret
jae
pushf
setb
push
and
clc
in
xchg
clc
scas
in
add
xchg
xchg
and
xchg
inc
stc
mov
inc
mov
ret
jl
dec
test
repz
imul
cs
inc
aam
mov
adc
ret
rcrb
or
fnstcw
xor
pop
mov
ret
mov
andb
clc
mov
sub
loop
dec
hlt
or
fstpl
xchg
mov
fidivl
adc
std
sbb
adc
add
cs
les
test
jno
pop
mov
je
mov
stos
jp
add
sbb
sbb
push
push
insl
fcoms
add
push
jbe
testb
orb
outsb
cld
push
ficompl
dec
push
mov
pushf
pop
fsubs
xchg
pop
andl
outsl
pop
inc
sti
ret
stc
mov
test
pop
or
arpl
call
mov
dec
fdivrl
fstps
leave
mov
inc
ret
out
add
je
adc
adc
push
jbe
sub
addr16
xchg
insl
and
mov
add
xchg
fnstenv
add
dec
sbb
in
xchg
push
mov
jns
loope
pop
ja
push
andb
aaa
cld
dec
jmp
js
push
pop
cmp
xor
fwait
xchg
out
cmpsb
inc
mov
inc
outsb
mov
sub
cmp
sub
xchg
xchg
dec
out
mov
movsl
add
or
or
jg
jmp
push
subb
or
inc
mov
sub
dec
inc
ror
outsb
and
int
pop
push
aad
int3
jmp
pusha
js
cs
inc
stos
push
or
pop
pusha
int3
or
jle
pop
and
pop
adc
cmp
push
cmp
and
call
bound
cwtl
mov
mov
pop
cwtl
xchg
or
push
push
js
insb
hlt
stos
icebp
rorb
das
jae
les
mov
repnz
push
or
pop
mov
testb
ror
or
push
in
int
sub
mov
jnp
push
mov
pop
shll
je
aam
out
call
sti
mov
xlat
inc
mov
jae
aad
arpl
dec
hlt
cli
lcall
jle
push
jecxz
icebp
pop
inc
push
or
mov
and
into
lret
popf
lahf
fldenv
jmp
sub
sahf
pop
push
pop
movb
in
rclb
leave
xlat
lods
popf
push
sub
sub
inc
push
imul
or
and
xchg
mov
sahf
aad
cmp
in
cmp
sub
ret
leave
jns
lds
jbe
call
pop
ja
inc
js
push
xchg
cld
xchg
shl
std
mov
iret
ret
filds
int
jo
daa
mov
in
sti
sub
jge
push
incb
das
mov
sub
ds
push
aad
fisubrl
mov
shll
inc
dec
cmp
loope
xor
lods
push
pop
push
jnp
push
mov
xchg
jl
mov
cmp
mov
dec
fs
lods
scas
sahf
in
cli
test
adc
icebp
call
cwtl
push
mov
mov
mov
scas
int3
push
push
push
inc
jle
fidivl
iret
add
jg
fdivrp
push
cltd
add
sub
sbb
nopl
jp
es
sbb
push
add
mov
dec
ret
inc
iret
into
xchg
push
insl
adc
jle
in
sbb
jb
mov
push
mov
sbb
cmpsl
pusha
jmp
add
out
pop
in
sub
cmp
push
adc
loope
dec
or
cmc
pop
jne
icebp
inc
hlt
js
shrl
push
outsb
mov
inc
jmp
lahf
cmp
enter
inc
and
cmp
incl
insb
js
loopne
push
add
ficoms
das
icebp
push
add
popa
mov
sbb
fdivl
ficoml
jnp
imul
mov
or
xor
shll
in
xchg
or
add
add
dec
leave
popf
pop
cli
xchg
pop
xor
ret
sub
dec
cltd
or
add
push
rcr
jbe
mov
pop
adc
sbb
push
inc
cltd
dec
add
sub
inc
xchg
cwtl
add
push
or
xor
es
fsubrl
mov
ror
ret
pop
les
mov
sub
fisubs
add
ret
add
lock
sub
gs
mov
adc
in
mov
sbb
dec
sbb
mov
lret
adc
push
push
mov
dec
ret
xchg
rcr
nop
dec
out
jns
jns
mov
sbb
fsts
push
aaa
insl
push
jmp
mov
adc
dec
das
mov
mov
ror
data16
mov
mov
imul
mov
insl
mov
frstor
mov
mov
add
adc
sbb
jecxz
sbb
orb
mov
mov
outsl
mov
mov
popa
mov
stc
movsb
lcall
lret
xchg
adc
jns
punpcklbw
pushl
inc
inc
cwtl
push
cmp
jge
or
dec
paddusb
leave
cmp
or
pop
add
ljmp
or
and
test
ffreep
cmc
fdivl
rcll
shrb
and
inc
push
jecxz
cmp
das
insl
inc
pop
push
inc
pop
mov
mov
cmc
mov
and
movzbl
js
mov
scas
sbb
leave
push
test
ljmp
les
shll
loope
and
test
mov
mov
mov
sub
inc
dec
add
cmp
mov
in
xlat
cmp
stos
outsb
movsb
daa
leave
cld
stos
sub
rorl
fmuls
fdivl
mov
mov
cmp
sub
out
or
sub
ficompl
and
push
adc
adc
push
jbe
jmp
cmp
mov
lock
mov
mov
jp
pop
in
lss
jns
leave
icebp
push
adc
imul
fs
xor
movsl
mov
xchg
xchg
rcll
jmp
push
hlt
daa
adc
out
adc
pop
pop
jne
sub
and
sahf
xchg
adc
pop
jne
inc
clc
adc
xchg
fcomps
retw
or
dec
inc
cmp
push
fcmovnb
pop
jl
mov
test
insb
icebp
adc
pop
movsb
jg
jnp
adc
lods
fprem1
cli
cwtl
enter
mov
dec
or
adc
and
in
pop
cmpsl
mov
das
ss
out
sub
xchg
dec
or
xor
dec
push
lcall
hlt
fnstenv
add
pop
test
mov
leave
ret
adc
dec
sbb
dec
xor
inc
addl
adc
mov
test
fcoml
mov
mov
jmp
addr16
mov
pop
mov
fidivrl
xchg
inc
adc
sbb
xchg
icebp
mov
sub
lock
into
fcomps
dec
cmp
sbbl
add
lret
add
xorb
sub
mov
pop
cltd
popf
jno
jo
mov
ja
sbb
scas
jae
sahf
lock
sub
ficompl
iret
leave
sbb
subl
cli
jg
push
sub
jge
push
ds
or
sbb
stos
stos
dec
and
xor
aas
sub
cld
ja
popa
mov
sar
xor
mov
imulb
pop
mov
addr16
inc
add
fucomp
jns
cmpsl
pop
fsubr
int
cs
dec
dec
int
jmp
in
push
xchg
loopne
out
lock
insl
cs
adc
pop
pop
xrelease
mov
repnz
push
jmp
loop
loopne
pushf
mov
adc
pop
popa
ret
or
mov
dec
jmp
sarb
daa
cmpb
or
push
or
test
dec
jo
cmc
ret
divl
xchg
ja
and
or
repnz
fisubrl
push
enter
and
shll
mov
test
cli
out
adc
adc
cmovg
adc
push
out
add
adc
inc
push
gs
loopne
sbb
je
pop
aad
out
cld
jge
cmp
xlat
xor
popa
je
int3
jno
shrl
mov
lret
movl
mov
repnz
pop
daa
std
es
mov
xchg
aad
jle
inc
std
fistps
test
xor
enter
push
mov
push
xchg
inc
adcb
inc
movsb
scas
int
sbb
adc
jecxz
sbb
fs
lds
stos
pop
push
insb
dec
test
cmp
mov
adc
sub
dec
push
sbb
xchg
loop
mov
cmp
out
adc
inc
inc
inc
xchg
mov
lret
std
mov
jecxz
in
xchg
inc
mov
xor
sub
mov
adc
pop
shr
jp
arpl
pushl
data16
loopne
push
fdivl
mov
gs
cld
sbb
jns
popf
and
nop
fistl
sbb
sbb
rcr
in
rcrl
shll
jnp
sbb
cmpsl
dec
xor
jo
mov
jg
data16
pop
shll
mov
loope
stos
mov
push
lods
push
insl
dec
mov
fwait
leave
add
push
inc
fs
pop
ret
pop
pop
adc
mov
ffree
mov
movsl
xor
jmp
jno
sub
pop
fnstenv
je
stc
and
sbb
bound
inc
icebp
daa
xor
ja
hlt
in
inc
test
fistpl
mov
sbb
xor
fwait
iret
out
mov
mov
cmp
imul
cmpsb
jecxz
imull
ret
movsb
data16
cmp
inc
xchg
jle
int3
sub
hlt
sbb
out
sbb
es
int3
sub
sarb
dec
or
lds
and
xchg
clc
sbb
mov
pop
mov
popf
inc
jl
mov
sbbb
repnz
dec
jge
xchg
lock
inc
sbbl
fildl
jl
icebp
sbb
push
push
and
test
imul
sahf
adc
add
push
xrelease
out
add
mov
mov
cmovno
cmpsl
ret
xchg
ret
adcb
lret
add
add
push
leave
loopne
push
je
leave
shll
loope
and
fiaddl
inc
pop
push
test
shlb
xor
fdivrs
add
cli
push
mov
fisubrl
cmc
mov
pushf
push
clc
out
add
sub
adc
sbb
push
cmp
nop
movsb
mov
xchg
mov
and
cmpl
je
vunpckhps
mov
mov
out
jmp
mov
imul
insl
jo
sub
lret
inc
push
pop
pop
push
mov
sbb
stc
xchg
xor
test
jg
mov
add
cwtl
inc
ret
push
jmp
insl
pop
mov
pop
jecxz
sbb
inc
and
in
mov
lock
gs
pop
fcomps
cmp
int
jae
mov
std
push
fcmovb
repz
mov
je
jae
pushf
lds
mov
dec
les
inc
int
mov
test
in
inc
leave
mov
xor
jp
mov
xchg
mov
fucomip
xor
xor
int
pop
jne
adcl
sbbb
dec
mov
mulb
fistpl
pop
les
dec
and
ret
push
add
fisttps
xorb
dec
adc
in
clc
xor
push
mov
daa
cmp
fisttpl
std
out
cmpsl
or
dec
and
movsb
pop
xchg
mov
xchg
push
test
push
fsubl
or
sbb
gs
inc
mov
setbe
add
loope
rcrb
shlb
jnp
add
fs
lods
add
lods
ja
cli
data16
pop
lret
stc
call
pop
es
xchg
hlt
pop
cltd
adc
mov
pop
xchg
fwait
pushf
sub
scas
dec
push
fwait
cwtl
push
mov
stos
xchg
sbb
shll
popf
lcall
sbb
sarl
jb
stos
fisttpl
xlat
mov
adc
mov
cmpb
lea
repnz
cs
jnp
xchg
int
jl
fwait
aam
test
and
cld
out
jecxz
ljmp
lea
push
mov
cmpsl
xchg
pop
push
pushf
stos
adc
shrl
adc
add
push
daa
push
jb
test
and
jg
lds
jg
mov
nop
xchg
aaa
mov
or
leave
subps
loop
loope
adc
nop
mov
and
sahf
int
jge
sub
xchg
pop
inc
jge
sbb
inc
popf
add
imull
divb
mov
pop
popf
jge
pop
mov
mov
stos
les
cmp
dec
add
cs
mov
jecxz
mov
dec
test
mov
gs
test
cmpl
or
sar
or
push
loop
and
xchg
cld
push
xor
lcall
imull
jecxz
loopne
repnz
fdivp
lea
mov
rcll
inc
add
mov
mov
scas
jno
sbb
jo
lods
rcr
jge
loope
hlt
pop
pop
ret
out
shr
push
pop
cmpsl
add
das
sbb
xor
cmc
shl
cmc
pop
in
aas
push
mov
arpl
pop
lahf
popf
testl
fwait
or
das
lods
mov
pop
cmp
mov
aaa
sarb
add
add
mov
sub
mov
jae
xor
adc
and
addr16
arpl
dec
rcr
outsb
push
mov
mov
or
lds
jno
mov
aam
jle
sub
adc
movsb
mull
push
sub
aas
xor
jp
jno
add
pop
jnp
roll
add
mov
popa
mov
or
fldt
adc
sti
cmp
fnstcw
mov
inc
aas
pusha
sti
popa
mov
test
push
jp
inc
xchg
lods
scas
sub
cmp
xchg
repnz
inc
fstpt
stc
pop
pop
xlat
pop
mov
mov
xchg
xor
stc
cltd
jnp
cs
jecxz
les
call
testl
cmp
sbb
scas
push
cld
cmpl
sti
lret
shrb
mov
scas
or
pop
enter
cmp
ficomps
pop
sarb
push
xchg
dec
sbb
cwtl
out
inc
xor
pop
sahf
fsubrs
lods
mov
xor
btc
popf
sub
xor
fists
daa
pop
test
leave
push
scas
xorb
hlt
addr16
stc
ret
push
push
and
shlb
test
jns
push
jne
lret
leave
jne
pushf
outsl
in
cmpsb
mov
test
mov
inc
mov
decb
xchg
test
fs
fcomip
das
loopne
shl
scas
inc
xor
xor
push
xor
ds
add
lods
or
and
pusha
lock
sahf
ja
int3
cmpsl
push
inc
cmp
sbb
mov
push
repz
push
pop
mov
fcmovnb
loope
dec
xchg
test
or
adc
adc
cmc
adc
dec
jae
jl
jae
or
jmp
xchg
fwait
movsb
dec
mov
adc
mov
jo
mov
scas
imull
ja
ljmp
rclb
not
outsl
push
mov
dec
cld
mov
shrb
aam
xchg
xor
mov
std
fldl
pop
mov
mov
test
or
and
int3
add
addr16
cmp
and
dec
roll
aaa
cmc
mov
push
ja
jmp
das
mov
ja
mov
rol
js
and
sahf
lahf
add
mov
in
stos
push
shrl
mov
fwait
sbb
add
das
loope
insl
mov
adc
sbb
mov
stc
or
xchg
and
inc
and
mov
cmp
rol
mov
in
xor
mov
dec
jbe
fwait
psllw
push
cmp
adc
push
adc
roll
and
in
sbb
dec
aad
ss
sub
stc
pushf
stos
jns
fisubl
cmp
push
loope
and
jo
cld
out
xchg
xchg
jbe
jo
adc
push
cmc
add
pop
das
mov
bound
cmp
subb
mov
jle
hlt
lods
sti
lds
xor
mov
push
push
lret
mov
pop
fimull
sub
inc
addr16
or
or
cmp
jl
cltd
out
pop
js
andb
cli
out
jne
in
loope
lret
add
pop
push
sti
rorl
leave
push
adc
xchg
push
call
sub
jg
adc
mov
roll
push
mulb
out
pop
pop
ss
notl
movl
mov
xchg
mov
cmpsb
ja
inc
xchg
daa
out
pop
pop
ss
notl
movl
mov
xchg
mov
xchg
ja
inc
xchg
daa
out
push
push
pop
ss
mul
movl
mov
xchg
ja
inc
cmpsb
push
mulb
divb
ss
pop
mov
das
out
dec
test
pop
clc
dec
enter
cmpsb
jae
fs
sbb
sub
js
dec
sti
pop
jmp
fwait
cmp
or
clc
dec
enter
test
mov
sub
js
cmp
pop
jmp
fwait
cmp
call
jnp
imul
cwtl
sub
js
cmp
pop
in
leave
jbe
mov
adc
cmp
fdivrl
das
stos
inc
mov
outsb
mov
mov
imul
push
xchg
sbbb
imul
frstor
out
sub
cli
adc
jae
add
jnp
push
cmp
push
mov
fsubs
lods
dec
stc
enter
imul
lock
add
lds
mov
or
pop
mov
loopne
adc
mov
mov
cltd
test
daa
test
mov
ja
inc
or
mov
sbb
jns
ja
adc
cmp
sbb
dec
or
clc
dec
enter
test
mov
sub
js
dec
sti
pop
jmp
fwait
cmp
scas
xor
dec
lods
adc
or
jne
jnp
mov
xor
dec
cli
push
clc
dec
mov
mov
jnp
sbb
push
aam
mov
or
lcall
jp
sbb
adcl
test
mov
sub
js
dec
sti
pop
jmp
fwait
cmp
call
jnp
imul
cwtl
sub
js
dec
sti
pop
jmp
fwait
cmp
call
leave
cld
sub
xlat
adc
xor
in
add
setne
bound
mov
int
shll
cld
cli
scas
jns
movsl
sbb
test
scas
shrb
mov
pop
mov
sti
pop
sub
call
mov
jb
and
div
xor
mov
push
stos
ljmp
pop
loope
repnz
add
push
and
push
in
fwait
dec
inc
xor
cmpsl
iret
dec
int
jne
xchg
xlat
addr16
enter
xor
push
mov
ljmp
test
sub
push
or
jnp
mov
push
aad
and
outsl
cmpsl
nop
dec
inc
into
mov
loop
stos
je
sub
loope
mov
ret
push
cmpsl
rcl
into
ja
cmp
sub
xchg
lahf
pusha
fisubrl
fdiv
add
pop
fmull
lods
inc
mov
stc
aad
clc
add
and
push
mov
movsl
pop
jle
stos
mov
mov
aaa
mov
enter
loop
aam
push
pop
filds
aam
movsb
notl
iret
jg
arpl
std
lret
add
cltd
ret
cmp
lret
rcl
fld
ja
push
dec
xchg
mov
loop
pop
cli
nop
mov
mov
xlat
jne
pusha
inc
pop
jp
mov
add
dec
adc
inc
and
shlb
cmp
in
es
into
inc
mov
add
mov
cmp
mov
scas
push
cmc
or
fstpt
push
jo
insb
inc
test
mov
cmp
pop
fdivrl
sbb
push
push
in
int
lock
dec
imul
sbb
jle
and
jge
jecxz
sub
and
dec
push
shr
sahf
es
jb
lcall
inc
clc
dec
test
cmpsb
mov
das
push
jl
pop
bound
fwait
push
ja
adc
lcall
aaa
xlat
lock
sbbb
cmp
jnp,pn
ja
jmp
mov
push
loop
jo
push
pop
xchg
adc
jmp
dec
cwtl
xchg
ja
push
xchg
stc
push
sub
insb
mov
xor
ljmp
jae
test
cwtl
test
into
jmp
pop
dec
push
fdivrp
adc
adc
fnstcw
jno
das
aam
cmp
adc
dec
popf
mov
repz
push
fsts
sti
and
or
addr16
jmp
ss
lods
out
test
and
cmp
mov
stc
jns
nop
jle
or
je
sub
xor
ffreep
rcrl
movsl
out
push
push
sub
cmc
cltd
sub
loop
mov
push
cs
pop
xor
test
xchg
adc
mov
adc
sbb
fucomi
mov
cltd
inc
pushf
ret
push
inc
popa
outsl
js
sub
inc
mov
dec
rolb
rolb
ret
xlat
dec
or
xchg
push
lds
sbb
sbb
std
and
mov
xor
push
cmp
aad
out
cld
dec
ljmp
cmp
clc
fadds
enter
enter
in
add
repnz
adc
inc
mov
fistps
push
daa
pushf
pop
sbb
cwtl
scas
sub
aam
repnz
mov
add
push
or
gs
clc
fimull
testb
pop
push
xchg
push
push
shll
push
enter
sarl
addr16
icebp
iret
and
jmp
jge
cli
and
lret
fiaddl
adcl
dec
mov
pop
out
or
ret
jo
jo
test
jne
or
fs
pop
pop
test
inc
jbe
mov
pop
out
and
test
push
arpl
popa
lret
std
push
sub
rcll
gs
popf
sub
pusha
mov
in
roll
cmp
aas
jnp
fstps
sub
mov
add
cmpsb
aam
xchg
jno
inc
jle
push
push
gs
lret
push
xor
lods
mov
sbbl
mov
inc
pop
xor
or
mov
int3
pop
mov
pushf
out
icebp
xor
cwtl
push
vmaxps
mov
aam
mov
dec
iret
fsub
movsb
sub
push
mov
aaa
movsb
fsubs
aam
mov
mov
push
outsb
pop
filds
xor
sbb
dec
mov
mov
mov
mov
or
std
dec
adc
push
cmp
cwtl
iret
inc
movsb
das
fmuls
pop
cmp
icebp
mov
push
mov
xchg
jno
jb
daa
sbb
adc
mov
or
adc
inc
repz
dec
ss
dec
lds
mov
inc
add
or
movsb
push
inc
push
or
add
in
outsb
out
inc
jnp
hlt
lds
and
out
jmp
mov
xlat
xchg
sbb
fmul
pop
int3
pop
sub
mov
sbb
pop
les
notl
loopne
dec
lret
or
add
add
mov
fmulp
xchg
add
or
dec
add
test
push
bound
cmp
test
adc
xlat
jge
xchg
in
fldcw
es
outsb
jp
in
jge
nop
pop
xchg
mov
cld
imull
hlt
int3
mov
pop
loopne
pusha
test
jg
xor
std
push
mov
into
movsl
or
imul
jno
pusha
stos
xor
cmpsb
and
jmp
or
push
xchg
outsb
jl
fsubs
mov
pushf
cld
aaa
std
imul
xchg
sub
test
jnp
push
cmp
fiadds
mov
cmpl
daa
jmp
sbb
lcall
sub
in
cmp
mov
push
arpl
push
bound
xchg
cmp
int3
push
cmc
and
sub
movsb
scas
sub
mov
in
lods
test
shrb
enter
xor
testb
in
push
aas
out
cmpsl
jle
and
xchg
push
pop
jmp
mov
mov
fs
fadd
pushf
xchg
xlat
in
cwtl
adc
push
enter
pop
xchg
subl
xorb
popf
mov
adc
or
test
inc
cmp
or
sbb
sbb
adc
jno
push
in
xchg
jb
pop
imul
mov
addb
xchg
lahf
mov
imul
sti
pop
fisttps
cld
and
cwtl
addb
fsubrl
xchg
std
fisttpll
icebp
arpl
or
mov
ljmp
jnp
out
fldl
cs
xchg
ret
popa
pop
sbb
je
cmp
enter
cmp
xchg
das
roll
inc
inc
pop
int
movsb
ljmp
ret
adc
mov
int
push
cmpsb
mov
in
lea
sub
movsl
popf
dec
jmp
push
adc
stc
dec
cmp
cld
push
mov
sub
jmp
dec
stos
scas
test
into
mov
shll
loope
dec
push
out
and
fistl
fisttps
sbb
sti
shl
sub
popa
data16
std
sbb
dec
test
push
in
mov
cli
arpl
add
inc
xchg
mov
sbb
cmp
lds
insb
pop
mov
icebp
arpl
dec
daa
xchg
test
out
sbb
jmp
sbb
in
imul
add
les
dec
stos
sahf
lods
ss
out
pushf
jno
leave
mov
orl
mov
inc
clc
addl
lds
add
cltd
daa
test
sahf
aam
add
sub
cmp
gs
or
insb
enter
cli
inc
adc
pop
dec
xchg
outsb
sub
dec
imul
test
in
fld
mov
neg
js
pop
or
test
inc
int3
cld
jne
leave
cwtl
mov
sbb
and
daa
adc
cmp
xlat
andb
xlat
ret
clc
lods
mov
pop
repnz
mov
stos
sub
popa
movsl
stos
call
repnz
rolb
mov
jo
mov
stc
hlt
jne
pop
sbb
js
sbb
lahf
icebp
inc
scas
cmc
adc
jns
dec
scas
sub
pop
loope
mov
into
imulb
xchg
addr16
clc
pop
mov
scas
js
pop
inc
xor
negb
out
addb
nop
fwait
bound
jecxz
fildl
mov
mul
jbe
dec
jecxz
and
push
xchg
pop
pop
lds
mov
cmpb
sbb
xlat
mov
push
gs
aad
jnp
cmpsb
sbb
push
inc
mov
sti
inc
insb
rclb
idivl
call
mov
popa
push
scas
nop
int3
push
roll
cltd
cmc
lods
dec
push
rolb
dec
out
and
push
lahf
sarb
sbb
ret
mov
sub
mov
jbe
pop
push
jae
je
jns
out
jne
outsl
pop
jno
add
aad
xchg
pop
sbb
or
out
inc
les
inc
mov
cmp
fwait
and
xchg
push
fiaddl
fucom
lock
test
lret
insl
sub
fistpll
inc
fdivr
mov
mov
and
loopne
sbb
xor
xor
int3
mov
xor
sbb
cmp
xchg
pop
icebp
xchg
jne
aad
cmpsl
loop
sti
mov
xor
mov
adc
fadds
and
dec
cs
jnp
cltd
setp
out
inc
aam
adc
dec
out
lcall
mov
xor
mov
fiaddl
xchg
int
rcll
int
aad
push
addr16
inc
add
mov
bound
data16
lret
cld
fsubrp
mov
xchg
fstpt
sub
rcr
loope
xor
cmp
pop
jnp
cwtl
sti
sub
mov
std
mov
cmc
dec
stos
jae
leave
stc
mov
push
dec
jb
fxch
sub
sbb
pop
in
test
dec
mov
inc
rorl
fsub
pop
xchg
negb
lods
fistpll
into
repnz
dec
shll
or
das
or
aas
xor
fidivrs
daa
add
sbb
cmc
and
inc
js
repz
enter
dec
test
mov
cmpb
add
sub
pushf
add
and
sti
ror
call
into
outsb
and
orb
js
fs
xchg
stos
cld
or
mov
pop
dec
lret
ss
jmp
mov
cmp
ljmp
sub
jg
inc
jmp
mov
pop
repz
cmovns
lods
scas
sub
mov
and
mov
mov
lods
sbb
sbb
push
pop
push
mov
call
inc
jo
add
mov
stos
or
and
push
es
aam
push
mov
sub
test
jmp
inc
cmpb
mov
orb
add
addr16
adc
inc
fists
push
dec
lret
rcl
mov
loopne
cmc
js
push
xchg
out
ja
popf
notl
sub
adc
inc
fnstsw
cmpsb
je
in
in
mov
imul
xlat
and
mov
xchg
and
int3
ljmp
and
lret
test
loopne
ljmp
flds
inc
push
inc
lods
out
mov
pop
xchg
jo
pop
xchg
out
notl
sbb
inc
and
mov
iret
sti
mov
jb
dec
mov
test
cld
and
push
xchg
mov
fabs
outsl
and
aad
roll
icebp
int
and
pusha
mov
mov
mov
sbb
cmp
mov
pushf
insb
icebp
and
pop
mov
mov
fcoml
test
push
in
scas
imul
int
pusha
fdiv
int
mov
jmp
adc
aam
out
push
lods
imul
dec
ss
stos
stos
data16
cmp
dec
xor
mov
repnz
hlt
stos
aad
inc
mov
push
lcall
popf
fstl
dec
adc
shrb
cwtl
ds
mov
mov
lahf
push
dec
std
hlt
push
inc
rorl
push
cltd
enter
sbb
mov
bound
sti
out
and
mov
push
loope
gs
mov
pop
mov
mov
cmpsb
mov
test
xchg
rcrb
sub
out
pop
xor
jle
fisubrl
cmc
inc
fcmovnb
pop
shlb
mov
xchg
scas
loop
shlb
inc
sti
sbb
out
xchg
dec
jo
mov
xor
arpl
sahf
pop
sbb
gs
fwait
cli
or
pop
outsl
or
mov
cmp
cmc
jmp
add
sti
icebp
out
add
cvtpi2ps
fistpll
aam
mov
or
fwait
iret
fsubrl
outsb
out
cmpsb
test
push
sbb
sbb
cltd
adc
inc
pop
rorb
inc
mov
imul
orb
mov
mov
cld
cmp
add
lods
and
xor
test
orb
das
lods
mov
es
cs
ss
shr
jno
mov
cmp
mov
in
hlt
imul
mov
sbbb
sarl
das
pop
or
pop
aaa
jecxz
lret
mov
fucomi
mov
cmp
mov
aam
inc
sub
adc
mov
sub
ljmp
sbb
sbb
ljmp
daa
push
add
inc
xor
sarl
clc
lret
mov
insl
jb
movl
aam
insb
mov
sbb
iret
jne
xchg
inc
repz
mov
add
out
cld
ret
dec
std
sarb
xchg
insl
mov
inc
in
test
insb
fs
rolb
lods
ljmp
js
test
mov
cmp
push
pushf
push
pop
insl
pop
es
lods
daa
jecxz
loop
test
loop
daa
mov
dec
sti
cmp
mov
and
out
pushf
dec
aaa
mov
test
adc
subl
dec
testl
jp
sti
lods
xchg
or
fwait
add
out
lock
inc
repz
push
xchg
aad
mov
cmp
push
popa
mov
sbb
cwtl
mov
xor
imul
add
cltd
sbbl
push
ror
cmpsl
sub
dec
adc
sub
dec
in
lock
mov
gs
insb
dec
negl
sub
mov
ror
pusha
scas
inc
sub
cwtl
xor
mov
mov
cmp
out
sub
test
pop
pop
jnp
xchg
xlat
push
iretw
sbb
stos
cs
shlb
hlt
call
test
sub
out
inc
adc
popa
mov
shrl
jecxz
cmpsb
sub
js
lret
iret
dec
cmpsl
jno
cmp
mov
ret
xchg
adc
ja
jnp
or
inc
push
in
xchg
sarb
add
scas
inc
mov
push
in
in
shll
faddl
ljmp
or
ljmp
dec
dec
das
repz
pushf
and
mov
adc
pop
scas
into
pop
fisttps
or
pushf
stos
mov
aam
data16
dec
add
pop
aas
mov
push
xchg
pop
jge
fistpll
ror
xor
fldl
stc
movsl
in
aas
movsl
iret
shlb
loopne
arpl
clc
add
jge
jecxz
std
pop
jbe
fnstcw
mov
pop
xor
mov
outsb
aas
cwtl
mov
es
xor
iret
jno
int3
mov
dec
jp
enter
mov
inc
out
and
hlt
aaa
lahf
shlb
sub
fadds
adcl
xchg
xor
push
dec
ret
inc
or
aad
xor
pop
fsubl
push
es
lahf
jle
insl
scas
ss
or
sbb
push
pop
pop
dec
scas
cmpb
scas
sar
outsb
dec
mov
mov
cmp
xor
stc
pushf
sti
push
mov
enter
roll
cmp
dec
popf
cmp
jmp
sbb
mov
pop
ret
cmpsl
xchg
and
and
loope
ret
add
data16
push
cmpsl
sub
sub
inc
sbb
das
adcl
adc
icebp
nop
imul
insb
mov
xchg
dec
pop
xchg
idiv
adcl
pop
adc
stc
test
scas
jmp
fxtract
add
xchg
cmp
sub
sbb
stos
xlat
or
push
add
addl
imul
jp
pop
loopne
cmpsb
xchg
jle
lret
inc
dec
jo
fwait
enter
loope
in
lahf
cmc
movsl
lret
mov
mov
mov
scas
xor
cwtl
loop
cmpsl
std
dec
mov
pop
lods
fcomps
mov
inc
jbe
aad
mov
insl
mov
sub
or
mov
loopne
inc
icebp
adc
fcomps
aas
dec
mov
fildll
fcompl
fsubs
dec
xchg
aam
cwtl
insb
ficoms
fwait
pusha
cs
sub
addr16
dec
repz
push
mov
inc
divl
mov
outsl
mov
mov
sbb
daa
mov
int
xlat
sbb
xchg
xchg
insl
lahf
outsl
cld
out
pop
int
dec
add
add
dec
push
lock
jmp
inc
lods
fistpl
es
sbb
ss
hlt
sarb
mov
mov
mov
jl
into
test
jmp
out
loop
pop
add
mov
inc
cltd
inc
cli
or
mov
ret
and
adc
push
jno
scas
lods
mov
jg
sub
jecxz
add
into
movsb
mov
xchg
xor
hlt
jns
inc
fstl
jb
testl
and
adc
jne
inc
cmpsb
fcomps
pop
push
cmp
dec
imul
nop
ss
add
iret
aam
pop
jbe
sbb
scas
adc
sbb
rol
or
push
fidivs
mov
mov
das
and
mov
das
cmp
ss
pop
mov
jo
jne
mov
xor
mov
sbb
mov
addr16
aad
cmp
jne
shl
test
jg
test
pop
mov
fnstenv
cmp
filds
in
test
adc
iret
add
in
push
insl
testb
adc
sbbb
lahf
imul
ret
testb
data16
push
ret
out
int3
std
outsb
or
lahf
into
mov
and
xor
jo
sbb
dec
adc
jle
xor
imul
movsl
push
pop
les
sbb
push
das
stc
dec
ss
sub
xchg
mov
sbbb
xor
add
cs
push
enter
adc
jecxz
push
sbb
lods
cmc
cmpsl
or
push
lods
inc
adc
or
lea
fcomp
cmp
mov
into
add
mov
sar
or
iret
jb
xchg
mov
mov
xor
dec
mov
js
mov
dec
xor
ja
sbb
or
cmp
push
gs
loope
je
ss
cld
push
lods
stos
add
bswap
adc
repz
adc
out
sub
push
inc
xor
cmp
test
or
mov
adc
div
sub
and
lret
xor
adc
mov
jp
loope
jge
add
clc
pop
ret
outsb
sub
pop
lock
push
lea
test
cmc
dec
clc
ret
ret
fcoml
mov
mov
xor
push
ficompl
fisubrs
push
cltd
in
sarl
sbb
dec
pop
pop
cmpsb
mov
dec
cmp
cmpsl
out
lahf
sbb
mov
inc
inc
xchg
xchg
mov
dec
shlb
xchg
ds
add
test
xchg
pop
inc
iret
test
mov
cmp
add
lock
xchg
or
add
sbb
dec
xor
pushf
inc
or
jo
mov
sahf
scas
pop
push
bound
out
movsb
adcl
aaa
add
dec
in
pusha
mov
cltd
insb
loopne
or
popf
sub
xor
and
out
xor
out
and
lahf
fiaddl
jg
pop
adc
push
pop
cwtl
aaa
cmp
adc
ficompl
mov
pop
sbb
pusha
push
int3
lahf
ret
insl
lret
mov
or
lds
cmp
aam
pop
in
repz
adcb
pop
in
pop
loope
dec
cmpsb
cli
testl
push
push
push
dec
lret
jns
xchg
push
call
adc
fcomip
clc
outsb
stos
jmp
fdivl
popf
mov
cmp
popf
xchg
jecxz
in
push
dec
imul
rcrl
push
push
jnp
mov
insl
adc
jnp
or
movsb
test
jns
js
pop
cmp
fldcw
dec
stos
and
pop
lahf
xor
loop
shl
ret
lods
pop
cmp
push
jg
leave
out
jns,pn
fcmove
jp
pop
negl
xchg
cwtl
fs
outsb
mov
dec
sub
cs
and
cmpsb
jmp
outsl
clc
xor
pop
in
inc
cli
push
xchg
jmp
gs
insl
cli
outsb
cmpsb
push
push
sahf
cmpl
cmp
xor
inc
sbb
rcrb
and
test
mov
sti
pop
dec
adc
nop
imul
add
cmp
pop
outsb
xchg
push
clc
nop
push
dec
dec
mov
dec
jbe
fsubrs
sbb
sub
js
dec
sti
pop
jmp
fwait
cmp
call
jnp
imul
cwtl
sub
js
dec
sti
pop
jmp
fwait
cmp
call
sti
fsubrs
sbb
sub
js
dec
sti
pop
jmp
fwait
cmp
call
jnp
imul
cwtl
sub
js
loop
pop
pushf
pop
adc
push
repnz
loop
ror
ret
mov
out
cwtl
jno
pusha
je
pop
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
push
and
adc
add
repnz
loop
rcl
ret
mov
mov
jb
inc
inc
and
push
push
push
pop
imul
call
stos
push
mov
push
or
jecxz
repz
dec
inc
push
mov
hlt
inc
inc
push
mov
mov
mov
mov
adc
call
mov
insl
inc
or
or
xchg
mov
cld
fnsave
ja
inc
hlt
fnsave
cmp
sbb
mov
mov
lret
rolb
xchg
jnp
ljmp
sbb
aas
cmp
addb
cltd
jae
push
fisttps
mov
out
out
sbb
enter
xchg
sub
mov
adc
mov
jnp
dec
aad
add
xor
loop
rcr
ret
test
mov
jb
bound
push
inc
inc
xor
and
adc
add
cmp
xlat
dec
std
in
cmc
add
pop
add
sbb
arpl
or
test
sbb
fucomi
mov
in
hlt
add
add
sbb
pop
inc
push
jnp
push
popf
xchg
test
mov
cwtl
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
mov
ffree
xor
jo
mov
insl
ret
sbb
adc
and
dec
xchg
andl
scas
fdivrl
mov
cld
pop
stc
cs
adc
jnp
lds
adc
sbb
xchg
xor
dec
in
xchg
mov
pop
xor
pop
aad
jbe
and
mov
in
mov
aaa
pop
insl
mov
adcl
and
cltd
dec
cltd
jp
aas
lcall
popf
test
mov
stos
shl
lahf
push
cmpsb
test
mov
in
adc
sbb
loope
add
push
xchg
adcb
jmp
add
repz
js
ss
pop
iret
pop
push
mov
cs
inc
add
cmpsl
jl
mov
or
fsubs
arpl
nop
ret
movsl
jbe
cmp
outsl
xchg
call
call
lretw
loop
fcmovnbe
repnz
ret
sub
movsl
xor
pop
arpl
jg
out
out
jge
popa
inc
jp
shl
sbb
or
icebp
jns
or
idivl
repz
fisttpl
lock
add
add
test
xchg
loop
es
shlb
pop
dec
in
sbb
inc
cli
jp
loope
outsl
sub
jns
in
mov
das
jle
jb
into
lock
icebp
aam
ljmp
imul
sub
xlat
jge
push
mov
sub
mov
adc
or
sbb
or
mov
sti
sbb
enter
aam
lock
or
inc
mov
push
rcl
sbb
lcall
mov
adc
xlat
shl
adc
cmp
xchg
dec
jb
mov
ja
ret
inc
or
arpl
sub
mov
test
mov
jl
mov
cmp
push
jne
adc
cltd
mov
push
and
pop
pop
mov
sub
cmc
ljmp
dec
sub
jb
adc
repz
mov
insb
sbb
scas
cltd
adc
repz
dec
outsb
add
xor
in
sbb
xchg
lret
ljmp
ror
cmp
sub
cmp
into
push
mov
xchg
and
ds
leave
out
dec
add
shrb
sub
mov
mov
mov
cli
add
test
lods
sub
xchg
sbb
and
cmp
mov
fsubrl
cmp
lods
into
sbb
or
mov
sub
sbb
cmp
push
sbb
jl
ss
and
pop
icebp
dec
stos
xchg
and
loopne
jno
adc
cmp
aas
xchg
adc
int
enter
cs
push
pop
out
mov
xor
adc
fs
and
data16
jg
or
cmpsb
xor
loope
mov
test
cmp
mov
xor
sbb
int3
psubsb
lret
int3
imul
sbb
movsl
fisttpl
test
repnz
dec
sarl
mull
fstpl
ror
int
sub
leave
adc
pop
sbb
imul
adc
je
in
ret
mov
test
je
bound
mov
in
std
xchg
cmpsb
jae
out
xchg
xlat
jmp
ds
pop
dec
jns
mov
pop
pop
and
cmp
pop
fbstp
xorb
roll
adc
mov
orb
cmpsl
mov
icebp
fisttpll
or
fisubs
cmp
push
and
in
lcall
mov
in
pop
sub
cmp
xchg
jae
add
inc
jb
negb
push
xchg
adc
outsl
sbb
xor
xor
imul
popa
sub
test
inc
adc
adc
loope
inc
sbbb
int3
cwtl
xchg
mov
xchg
repz
jbe
jl
out
lgs
test
out
test
mov
sahf
js
mov
out
push
mov
out
and
xchg
shrb
push
cwtl
outsl
xchg
lods
or
jecxz
dec
pop
aam
sub
xchg
daa
pop
inc
lds
test
adc
stos
push
xchg
int
into
or
add
andl
jmp
fwait
in
adc
cs
ss
dec
bound
sub
push
jl
and
xchg
push
cmc
daa
pop
idivl
xor
add
lahf
lcall
mov
repz
cmp
loop
stos
xchg
insl
push
mov
dec
dec
mov
in
jb
movsb
mov
or
push
rolb
mov
sarl
jo
leave
push
lods
adc
push
test
dec
sti
mov
mov
lahf
or
mov
out
pusha
lds
inc
jmp
inc
jg
fimuls
cmp
xchg
mov
aad
add
jae
mov
outsb
rcll
int3
in
mov
pop
push
fistps
adc
mov
xchg
and
mov
dec
pop
rol
jo
aaa
nopl
sbb
bound
dec
push
pop
xor
pop
aad
xlat
sub
xlat
xchg
bound
loopne
inc
inc
cmp
jae
mov
push
and
mov
jns
inc
outsb
push
and
xor
push
imul
push
mov
cwtl
les
les
xchg
in
jnp
out
sub
pop
pop
cs
pop
jge
push
add
addr16
lahf
bound
sub
and
mull
jge
out
adc
mov
push
mov
cmp
mov
adc
ret
dec
jmp
popf
adc
jbe
mov
pop
cmc
cmp
clc
dec
shll
movsb
mov
cmp
scas
pop
jge
mov
xorb
js
hlt
stos
adc
mov
push
ret
test
push
adc
stos
ljmp
ja
scas
arpl
adc
daa
xchg
loop
aam
shll
cld
xor
xchg
rorb
mov
lods
jb
lods
mov
popf
push
inc
jmp
ret
cmpsl
stc
pop
adc
or
jb
mull
shr
lock
pop
pushf
dec
sbb
sbbl
push
notl
negl
push
push
test
cmp
das
sub
aad
aad
out
test
inc
sub
mov
push
or
add
clc
movsl
mov
and
adc
imul
push
insb
push
jns
rcrb
outsl
sahf
jno
push
aad
adc
inc
push
iretw
lods
add
int3
sbb
repz
or
dec
out
cmp
sbb
cmp
xchg
out
nop
popa
std
jp
test
ror
insb
push
cs
out
and
push
and
enter
std
ljmp
out
sub
in
daa
push
test
push
push
scas
mov
test
sbb
mov
mov
loope
inc
test
sbb
call
or
mov
movsl
lods
and
out
jae
fs
mov
sbb
or
cmpb
cmp
xor
cmpsl
cmp
in
sbb
iret
shll
outsb
jl
jge
jecxz
xchg
in
xchg
loop
push
bound
movsl
cmpsb
mov
test
add
jg
int
ret
jnp
inc
push
or
rclb
pusha
sti
repnz
test
ds
or
popl
sub
fdivrl
pop
inc
pop
xor
cmc
pushf
pop
mov
xchg
add
dec
inc
test
mov
in
mov
les
mov
push
gs
addb
bound
or
xlat
xor
pop
dec
jle
das
sbb
test
sub
xchg
popa
in
aaa
adc
xor
mov
jo
inc
sub
fs
adc
icebp
daa
mov
pusha
aad
xlat
sub
lods
jb
outsl
xchg
jns
imul
icebp
test
jp
sbb
adc
inc
aad
or
push
cmp
sub
inc
inc
rolb
inc
addb
movsb
es
dec
jnp
cmp
scas
aam
pavgb
mov
jge
jmp
negb
mov
in
mov
mov
lods
dec
cmp
lods
xor
shrl
mov
ret
xor
stos
and
or
jns
out
shll
nop
cmpsb
mov
repz
lahf
cmpsb
jne,pt
pop
sbb
dec
pop
pop
cmpb
xchg
fadds
das
cmpsb
jle
xchg
mov
imul
fmul
repnz
add
fdivl
mov
js
pop
fcmovnbe
jmp
push
xchg
loopne
sahf
xchg
pop
cltd
sbb
dec
mov
mov
sarb
push
cmp
pop
jecxz
jg
les
mov
xchg
add
dec
hlt
mov
push
lea
adc
cwtl
add
xor
jp
repz
ljmp
insl
mov
mov
inc
xor
mov
aam
movsl
nop
and
js
inc
test
fsubl
enter
movsl
and
scas
not
mov
mov
xor
in
loopne
ja
adc
and
in
jbe
mov
mov
xchg
pop
insb
jno
push
adc
xor
or
cltd
inc
inc
adc
in
xlat
jp
aas
scas
sub
loopne
ficoms
add
icebp
mov
mov
mov
dec
std
push
jae
clc
mov
sbb
mov
aam
mov
inc
mov
and
out
xor
mov
fisubrl
push
pop
stos
sbb
mov
push
mul
hlt
jge
aam
divl
xor
mov
sub
adc
mov
repz
xchg
jb
aam
xchg
mov
lds
out
add
xchg
mov
ficomps
sti
xor
insl
mov
sbb
dec
call
push
cli
sub
nop
leave
scas
in
push
cmp
cs
mov
icebp
rorb
test
mov
and
gs
jp
imul
sub
push
dec
xor
rcrl
sub
int3
push
insl
fstpt
fincstp
pushl
fs
dec
push
cmpb
aad
jnp
leave
pop
mov
stc
and
sbb
xor
sahf
add
xorl
push
clc
add
xlat
out
aaa
sti
mov
stos
jo
pop
pop
call
adc
push
sbb
mov
scas
mov
pop
test
test
mov
test
mov
arpl
mov
push
or
xchg
xchg
mov
outsb
pop
mov
clc
dec
fwait
xchg
push
and
adc
push
mov
sub
push
mov
mov
adc
nop
sub
add
loop
js
jecxz
loopne
ljmp
cmp
mov
and
or
mov
and
cmp
jp
cmp
outsb
and
call
or
call
xchg
or
add
push
mov
clc
pop
stos
dec
adc
xorl
popa
adcl
push
xor
idivl
dec
enter
addr16
inc
arpl
push
or
push
mov
jp
lcall
lds
pop
movsb
in
int
push
sub
and
push
pop
mov
push
xor
test
xor
dec
and
and
test
push
push
nop
add
lods
sti
dec
shll
sti
add
aam
mulb
adc
sub
sub
aad
fmull
rol
fdivp
addr16
xor
test
scas
xchg
fisttps
dec
mov
adc
xor
cmp
loope
add
mov
xor
ret
enter
xchg
inc
jbe
in
add
pop
and
push
sub
and
js
mov
xchg
mov
testl
mov
pushf
lods
sbb
stos
leave
pop
arpl
lretw
mov
stc
ljmp
xchg
cmp
dec
mov
or
cs
or
pop
push
xchg
jo
lret
cmp
lods
shl
dec
in
dec
sbb
or
lock
or
stc
cmpsb
jae
mov
cwtl
aam
mov
add
call
sub
movl
in
mov
repz
rcr
sbb
pop
subl
mov
shlb
iret
inc
mov
pop
mov
adc
xchg
movsl
xchg
jne
mov
cltd
or
in
and
out
clc
or
jne
cmc
stc
fidivrl
ljmp
scas
dec
lret
pop
fwait
test
out
cmc
xor
popa
xor
jns
iret
mov
imul
and
sub
sub
out
cmpsb
ficoms
int3
imul
inc
mov
push
ja
lea
jns
popa
mov
shll
test
jne
cmp
xchg
xor
push
push
xchg
xchg
inc
mov
mov
ds
cwtl
cmp
fldt
stos
insb
stc
push
out
ret
cli
lcall
dec
cmpsl
sub
mov
ss
std
or
pop
lret
mov
hlt
sub
test
repz
pop
lods
pop
pop
ucomiss
lcall
lret
ret
loopne
imul
or
test
fnsave
shll
push
mov
ljmp
xchg
pop
int3
sbbl
in
cmc
divl
aas
jmp
data16
cmovle
xchg
inc
inc
ret
push
and
test
sbb
dec
mov
or
int
cwtl
push
or
pop
dec
mov
jge
fsubrs
int3
add
je
dec
je
shrb
jb
jp
cmp
dec
lods
xor
fnstenv
das
stc
adc
dec
out
xchg
or
outsl
sbb
sbb
and
add
test
lahf
cmp
js
cltd
repz
insl
or
stos
jns
insl
sar
dec
and
lret
out
sahf
push
inc
mov
fmulp
push
mov
aaa
jb
cmc
rcll
lods
repz
jo,pn
or
out
insl
adc
outsb
or
icebp
cwtl
mov
mov
adc
xchg
std
ficoml
ret
cmp
mov
push
lea
push
inc
fisubrl
dec
test
jnp
testb
jle
sbb
xlat
adc
xor
jecxz
push
xchg
ror
popa
cld
les
lock
ds
neg
sti
cmp
jg
scas
les
into
out
pushf
inc
iret
mov
or
mov
dec
inc
popa
jnp
push
iret
rorb
cli
and
mov
movsb
cmp
imul
jns
mov
arpl
call
push
outsl
xchg
dec
mov
or
pop
lret
insb
mov
jb
pop
stc
sbb
data16
insb
cmp
xchg
mov
xchg
test
inc
out
jae
lds
aad
hlt
xor
sar
out
xchg
enter
in
lcall
dec
jbe
scas
and
je
scas
idivl
mov
jg
or
fdivrs
test
cmp
flds
ljmp
fwait
test
jb
adc
aas
push
and
sbb
or
adc
sahf
sub
and
adc
cmpsb
sahf
push
shlb
inc
clc
push
inc
hlt
imul
push
es
ljmp
xchg
and
in
xchg
cmpsl
int3
dec
movsl
dec
imul
pop
inc
loope
lods
xor
push
jge
out
pop
cltd
xchg
xchg
jae
push
sti
xor
xor
loop
scas
clc
jbe
push
ret
leave
sti
cmp
out
jecxz
pop
ss
cwtl
hlt
outsb
ret
xor
js
rolb
and
pop
ja
push
jae
sbb
test
push
in
dec
xchg
cmovg
or
and
xchg
mov
ja
out
leave
inc
je
aad
int
lret
mov
popa
icebp
xor
jne
mov
jecxz
inc
push
xor
dec
aam
shlb
add
aad
hlt
sub
mov
cltd
jge
scas
xchg
aas
subl
mov
mov
decb
mov
and
aaa
xchg
mov
loopne
and
les
jge
mov
push
inc
and
repz
addr16
out
popf
mov
adc
inc
nop
fstl
stos
movsl
ljmp
and
dec
test
push
aam
mov
cld
fwait
imul
sbb
int
cmp
movsb
in
popa
jae
outsb
rorb
popa
adc
cmp
cmpsb
ret
mov
pop
stc
adc
mov
and
and
jl,pt
xor
inc
or
sub
mov
pop
ror
pusha
add
fistpll
dec
pop
dec
mov
mov
es
jp
out
loop
push
stc
std
add
clc
cs
in
xchg
cmp
aas
xor
int
sub
mov
pop
stos
loope
mov
xchg
mov
push
imul
test
pop
sbb
cmpsl
subl
jnp
cmp
sub
lds
add
pop
cmp
pop
cld
mov
add
adc
sub
mov
xor
loope
jp
xor
cmp
xor
mov
fsub
xor
lods
pop
mov
ja
sahf
dec
xchg
sti
sbb
imul
int3
mov
mov
and
xor
xchg
and
ja
push
sub
xchg
dec
cmp
and
sub
dec
jno
push
stos
bound
jae
std
pop
jl
xor
sub
gs
xor
jae
pushf
pop
ret
sub
or
dec
leave
out
xor
xor
lods
mov
jecxz
jmp
incl
xchg
mov
dec
pop
test
jne
mov
ss
mov
pop
clc
fsts
mov
cwtl
jecxz
jge
pop
ret
cs
inc
loope
xor
es
inc
mov
gs
fists
mov
rorb
icebp
dec
ljmp
cmp
push
arpl
stc
push
pop
xchg
xchg
mov
pop
inc
cs
cmp
mov
popf
shrb
cmp
push
or
or
xor
hlt
push
xor
inc
cmp
jo
out
loope
sbb
xor
jl
dec
aaa
hlt
in
sbb
and
call
xchg
or
inc
xchg
rcl
or
bound
loop
stc
jno,pn
and
adc
es
and
xor
cmp
xor
je
dec
adc
and
xchg
or
outsb
dec
pop
inc
ret
std
mov
outsb
test
loopne
ss
fcomi
cli
das
cld
pop
dec
je
pop
cltd
mov
jle
xchg
xchg
jmp
jl
add
iret
jns
inc
jae
mov
loop
mov
dec
outsb
cmp
inc
and
mov
and
test
push
cmpsl
or
scas
cmpsl
dec
or
int3
push
aas
mov
pusha
das
push
outsb
sub
mov
pop
jo
cmp
mov
rolb
inc
adcb
arpl
notb
mov
push
cli
cmc
fdivs
sbb
jbe
insl
mov
push
mov
pop
idivl
and
popf
imul
cli
xor
add
jl
add
les
cs
dec
addr16
mov
jbe
dec
out
insb
sbb
fstps
test
pop
cmp
insl
nop
pop
in
or
je
or
es
lcall
mov
lea
or
or
adc
cmc
jp
cmpsb
or
movb
scas
mov
cli
lcall
test
mov
pushf
or
sub
jg
or
aam
mov
fsubl
pop
insl
xor
or
dec
cmpsb
in
or
jb
aas
lahf
ror
fistpl
test
loope
sub
inc
dec
xchg
inc
mov
mov
idivb
adc
aas
pop
loope
mov
repnz
add
inc
rolb
mov
es
jp
dec
mov
add
jl
jecxz
loope
or
stos
dec
sub
cmp
mov
push
mov
or
mov
incl
lock
xchg
pusha
xlat
scas
je
ds
xor
xor
dec
mov
jne
or
call
shlb
mov
roll
fldl
xchg
fisubs
lcall
dec
lea
jp
ret
push
lods
out
fs
repz
jge
mov
mov
lds
leave
or
je
jnp
outsl
test
fs
lret
and
add
imul
push
enter
iret
fdivs
psubusw
adcl
xchg
ret
sbb
scas
dec
stc
inc
imul
pop
cmp
add
sbb
or
sahf
sarb
aam
pop
add
and
addr16
or
loop
jg
jae
cmpl
lahf
test
arpl
fsub
jns
push
push
cltd
xor
shl
rep
mov
stos
imul
rcrl
cwtl
clc
in
daa
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jae
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
lea
sar
dec
inc
das
inc
mov
cli
out
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
mov
mov
cmp
sbb
jp
push
dec
insb
dec
jl
mov
mov
fucomi
lret
mov
add
sbb
sub
cmp
imul
dec
jl
xchg
stos
test
aad
fcomi
lret
out
or
aas
jp
outsb
dec
sbb
add
jnp
and
lret
shrb
jo
lret
sbb
mov
sub
ja
call
or
rolb
movsl
lret
mov
mov
loop
jl
ret
xchg
add
mov
adc
jecxz
inc
popa
notl
mov
sbb
inc
hlt
ret
in
insb
push
cmp
arpl
int3
int3
cmp
in
loop
shl
mov
jo
inc
insb
inc
or
push
sahf
enter
test
push
lock
jecxz
aam
test
dec
add
mov
inc
jae
call
sbb
jns
in
or
jbe
roll
mov
in
stos
mov
int3
jmp
fucomi
lret
in
or
add
xor
imul
jge
mov
out
test
mov
push
arpl
pop
movaps
pop
add
adc
in
cmc
out
ffreep
rcrl
cwtl
mov
imul
xor
pop
or
push
or
mov
stc
mov
in
lret
cld
cmp
sbb
sub
cmp
dec
imul
jl
mov
mov
fucomi
lret
cld
cmp
sbb
sub
cmp
dec
imul
jl
mov
mov
test
xchg
jb
cwtl
xor
imul
lahf
inc
and
pop
mov
cmp
daa
xchg
hlt
xor
imul
subl
mov
cmp
inc
jns
push
or
mov
outsb
in
iret
push
xor
jne
inc
in
xlat
les
xor
cmp
lock
push
movb
es
push
ds
or
push
pop
jl
ljmp
dec
and
mov
mov
aam
fsubl
and
pushf
fildll
out
push
imul
xchg
add
adc
push
std
mov
shll
mov
and
mov
add
aaa
arpl
out
aas
cli
xchg
cmp
xor
dec
std
and
out
jae,pn
push
std
mov
push
and
jmp
push
movsb
push
stos
or
cli
mov
mov
mov
stos
mov
dec
mov
mov
add
sbb
repz
mov
xchg
push
cmp
ficoml
scas
jl
adc
mov
mov
addr16
cmp
enter
xor
fstpl
jle
mov
dec
lods
xlat
xlat
out
inc
addr16
aaa
fistl
cld
cmp
mov
subl
lret
mov
cld
pop
test
scas
stos
inc
or
ds
mov
pop
aam
test
pop
iret
std
fsts
sub
popf
loope
into
cmp
clc
loop
sti
jmp
aam
adc
inc
pushf
xchg
or
push
mov
mov
adc
xor
call
xor
jns
shll
or
xlat
mov
std
cltd
mov
ss
push
fs
icebp
and
insb
sub
cmc
arpl
xor
aam
sbb
je
push
and
dec
call
xor
enter
popa
mov
inc
std
mov
in
dec
push
push
imul
mov
loope
xor
in
jbe
push
in
dec
jae
outsb
mov
pop
xor
cmp
mov
in
lcall
daa
sub
int3
adc
sbb
test
inc
sbb
call
fistps
sar
jbe
fistps
cld
mov
aaa
push
push
test
mov
dec
cs
pusha
int3
loopne
popf
sbb
shl
pop
pop
aam
andb
mov
fiaddl
push
add
sbb
shll
sbb
cmpsl
scas
push
add
lcall
cmpsl
ss
pop
mov
test
mov
and
lret
daa
mov
sub
cmpsl
rcr
int3
fistps
xor
clc
stos
gs
adc
jl
arpl
fisubs
es
adc
mov
jbe
mov
imul
xchg
aam
pop
cwtl
or
cmpsb
xorl
aam
mov
sbb
movl
fsubrl
xchg
and
or
lds
mov
scas
inc
sbb
mov
add
gs
or
mov
inc
fs
adc
push
mov
cmp
and
and
push
or
jns
pushf
push
ja
arpl
enter
add
dec
xchg
ja
jg
outsl
insb
fsubr
aaa
std
sbb
leave
sti
or
aam
ret
pop
js
rcl
adc
sbb
enter
imul
and
scas
out
aad
imul
push
aas
inc
cltd
inc
or
xor
inc
rolb
cli
mov
push
and
repz
jnp
call
les
andnps
addb
add
cmc
xchg
cld
xchg
sti
stos
push
pop
mov
sti
mov
pusha
cmpsl
pop
lahf
mov
and
js
call
and
in
xchg
jne
stc
pop
repz
popa
sbb
mov
lret
outsl
and
fdivrl
inc
daa
movsl
inc
mov
adc
lcall
sbb
adc
cltd
data16
gs
push
and
mov
negl
movsl
xchg
scas
popa
add
and
push
sub
push
xchg
data16
cmp
cmp
pushf
or
subl
aad
mov
mov
push
sbb
sbb
jp
popa
popl
inc
push
push
sbb
mov
jno
cmp
and
in
bound
xchg
mov
pop
jmp
ret
adc
and
aas
fimull
xchg
xor
adc
lahf
out
fsubrl
add
inc
inc
movl
mov
ret
adc
pop
out
daa
push
movsl
outsl
add
cli
push
mov
dec
leave
add
jle
imul
bnd
arpl
mov
adc
es
adc
lock
faddp
cmp
xor
arpl
popa
xchg
and
daa
mov
lods
das
jns
inc
sub
jne
loop
jecxz
lcall
cmc
add
push
sbb
mov
bound
xchg
outsb
xchg
or
cmp
lahf
repz
test
xchg
gs
sarb
and
testb
js
push
pop
pop
and
into
mov
push
lret
mov
dec
and
movsl
fadds
cmp
loop
sbb
scas
push
mov
pop
sbb
adc
in
xchg
mov
scas
js
pop
push
icebp
insb
inc
lret
loop
daa
lret
dec
pop
loope
xor
addl
sub
test
out
outsb
mov
sub
sub
arpl
repnz
dec
test
lret
jmp
sbb
fidivs
inc
cwtl
or
pop
test
es
aad
cmpsl
adc
cmp
adcl
xchg
dec
adc
call
addr16
out
int3
push
aaa
mov
mov
xor
add
andl
lret
ja
scas
jb
or
xchg
lret
in
jle
out
daa
xlat
pushf
rorb
mov
xchg
xchg
movsl
dec
inc
shlb
mov
lret
nop
xchg
cwtl
and
sbb
rorl
nop
jns
out
dec
aas
repnz
sbb
pop
data16
adcb
sbb
iret
xchg
cld
and
cld
repnz
testl
scas
test
jo
testb
sub
loope
push
push
icebp
pusha
aas
pop
shll
push
pop
stos
dec
jecxz
cmpsb
leave
popf
scas
popf
mov
and
std
subl
into
jecxz
mov
jo
sbb
fs
mov
sub
faddl
sub
sarb
imul
mov
cs
fcomip
xchg
out
sub
sahf
adc
movsb
lahf
jle
push
shll
ret
sti
add
push
lods
push
mov
push
or
adcb
lds
fsubrl
mov
xchg
cmp
pop
or
cs
pop
cmp
add
stc
ret
test
jl
xchg
sub
std
push
fdivrl
inc
sbb
push
mov
ss
out
test
lods
dec
jno
lock
repz
pushf
push
xchg
cld
sbb
movsl
test
and
xor
mov
dec
int3
out
adc
adc
xchg
out
stc
ja
fnstcw
int3
adc
pop
push
jns
popa
pop
mov
inc
push
mov
jno
test
sbb
orb
pop
adc
cmp
add
or
mov
out
pop
push
pop
stc
or
pop
test
loopne
inc
cmp
jge
test
test
ds
inc
and
push
and
out
gs
imul
cmp
movsl
mov
out
dec
test
icebp
sub
rorb
ss
aas
js
jno
stos
inc
scas
jnp
cmp
mov
adc
sub
test
push
lret
jne
nop
add
dec
es
adc
sbb
xchg
sbb
addr16
jg
sbb
ficoms
daa
pop
add
jg
adc
sbb
in
mov
mov
add
pop
pop
negb
adc
xor
sbb
or
pop
fs
add
scas
jle
outsl
es
jge
fcomps
fildl
mov
mov
rolb
cwtl
sub
push
mov
mov
and
xchg
pop
jo
lea
sbb
loopne
stc
push
bsr
jge
dec
push
or
arpl
aad
cmp
lret
jno
push
mov
push
add
push
aas
xor
adc
add
lahf
scas
int
adcl
mov
xchg
cltd
jb,pt
mov
cwtl
adc
xlat
push
subb
lret
sbb
shll
inc
iret
pushf
aaa
mov
xchg
dec
fst
in
gs
mov
aam
and
rcrb
adc
movl
test
jo,pt
pushf
ret
jb
jle
fcmovnbe
mov
mov
das
insb
popa
rol
xlat
xchg
or
pushf
cmp
int3
cmp
mov
adc
test
into
sub
xor
inc
movsl
sub
xchg
das
xchg
es
jno
fisttps
ljmp
dec
in
and
stos
mov
and
push
mov
sbb
fstpl
pop
rcrb
mov
pop
sbb
xchg
daa
xor
sbb
xor
rcrb
fists
jle
rorb
pop
loop
out
fwait
jmp
cmp
movsb
mov
aaa
pop
sbb
leave
sub
add
icebp
add
xor
adc
daa
mov
cmp
or
movsb
jae
fadds
dec
scas
lret
push
adc
cmpsb
jne
scas
sub
adc
jo
mov
jmp
enter
gs
repnz
jae
insl
aam
popl
sub
aam
or
xchg
inc
out
pop
stos
subb
icebp
and
xchg
jmp
xor
das
fiaddl
or
inc
mov
xor
adc
add
lcall
inc
and
and
into
aad
pop
and
in
popa
push
dec
cmp
in
rcrl
sbb
ja
aas
xchg
loope
mov
push
cmp
dec
imul
test
add
out
dec
mov
test
in
bnd
loop
scas
jae
push
lret
pop
dec
sbb
cli
movsb
popf
repnz
repnz
and
mov
xchg
je
inc
jmp
jmp
mov
adc
push
inc
mov
lcall
mov
movsb
mov
pop
pop
push
fisubrs
adcb
adc
push
out
jns
addr16
sbb
ret
icebp
push
cmpsl
mov
mov
in
cmp
rorb
or
adc
dec
adc
clc
das
test
iret
sub
sti
xchg
addr16
test
pop
sub
test
iret
fs
jnp
inc
fcomp
test
xchg
in
cld
add
pushf
add
jmp
imull
jle
mov
dec
jb
js
jmp
mov
clc
mov
inc
fs
jle
leave
cmp
sub
sub
cmp
pop
mov
imul
jns
sub
addl
jo
test
pop
out
test
sub
fidivl
mov
ds
push
add
pop
mov
xchg
mov
fisubrl
xor
lcall
call
mov
or
sub
ljmp
cmpb
call
cmovs
call
pop
pop
lea
jl
arpl
mov
sbb
inc
and
test
fnstenv
push
pop
lea
cmp
or
mov
mov
dec
pop
add
scas
sarb
cmc
stos
xlat
std
fsubrl
cmp
fidivs
test
in
pop
sub
leave
addr16
xchg
pop
jns
dec
hlt
insl
inc
popf
shrl
sahf
pop
test
pop
xor
dec
iret
scas
dec
test
adc
pusha
icebp
sub
pop
lahf
cs
sub
addb
sti
jl
subb
fdivs
sbb
mov
pop
mov
cld
cltd
sbb
jg
pop
stos
les
mov
enter
cld
add
mov
mov
cmp
ficomps
leave
dec
push
add
pop
xchg
imul
lods
sahf
push
push
ja
pop
ret
das
push
imul
xchg
and
push
pop
or
jo
sub
in
lret
mov
sbb
shrl
nop
in
dec
mov
repnz
and
stc
repz
daa
mov
loope
je,pn
mov
cmp
inc
or
mov
lcall
ja
add
mov
jno
cld
daa
faddl
sbb
pop
dec
faddl
enter
cmp
bound
mov
xor
xchg
inc
pusha
push
sbb
movsb
mov
mov
orl
pop
jnp
xchg
mov
dec
loope
xor
ret
sbb
xor
stos
loope
ja
or
cmp
syscall
arpl
and
jl
add
mov
sub
addb
jae
cmp
arpl
int
out
mov
pop
jb
or
sub
outsb
imul
push
dec
sbb
xchg
test
stos
or
les
cmc
push
fidivrs
sub
cmp
std
sub
fisttps
xor
push
mov
sti
push
cmc
rcl
push
outsb
cmp
and
sahf
sub
sub
cmp
adc
sti
cmc
cwtl
and
jg
popf
mov
cmp
fbld
xor
jns
cmp
out
and
xchg
jne
popl
add
leave
mov
cmp
inc
mov
enter
and
dec
add
pop
call
cmp
mov
out
mov
aam
roll
bound
add
movsl
sahf
sub
data16
mov
cltd
push
cmpsl
rorl
out
push
xor
push
hlt
dec
int
jb
out
sbb
leave
mov
loopne
sbb
test
mov
push
mov
data16
data16
outsl
shll
mov
pop
mov
cld
fwait
outsl
pop
or
mov
xlat
stc
in
imul
loope
fdivs
arpl
adc
ja
xor
or
cmp
lret
fcoml
sub
out
pop
in
imul
lcall
cmpsl
mov
fcoms
and
test
ret
lea
enter
lret
out
or
and
fwait
push
sub
cmp
or
cmp
nop
jnp
mov
add
les
bound
xchg
cltd
cmp
das
inc
sbbl
popf
push
andl
jle
sub
stc
push
mov
cwtl
adc
pop
rorb
xor
or
push
mov
xchg
imul
push
and
fisttpl
sbb
dec
aad
test
inc
ljmp
push
in
sub
jbe
mov
jne
adc
pop
sub
xchg
mov
adc
sub
lods
icebp
jmp
mov
fstl
push
pop
js
and
cmp
xor
dec
cmp
and
inc
out
lds
inc
sub
test
int3
lret
xor
leave
int3
xchg
cmp
add
or
sbb
ja
mov
iret
cmp
mov
pop
clc
pop
arpl
pop
imul
inc
cmp
cmp
loopne
jmp
daa
test
loopne
cmpb
lock
bound
jmp
cmp
pop
dec
iret
fisubl
inc
sbb
rcll
mov
out
insl
inc
inc
or
stos
shlb
xchg
dec
inc
sbb
dec
xchg
sub
and
fnstsw
sub
ret
and
or
mov
fwait
xchg
imul
push
mov
scas
sub
xchg
aas
xor
mov
rcrl
mov
test
or
add
enter
mov
aad
vmwrite
lcall
inc
pop
addb
aad
push
adc
xchg
mov
fstpt
lods
movsb
ljmp
add
imul
out
mov
shl
test
pop
daa
popa
mov
aas
leave
lea
call
and
lret
jg
jge
bnd
test
sbb
mov
and
loop
and
mov
jae
sbb
add
test
popa
jp
rol
rclb
ds
rol
push
mov
stos
pop
es
popf
movsb
jp
jle
sub
daa
jecxz
adc
add
pop
push
inc
loopne
int
jg
mov
movsl
int
ss
inc
lea
test
outsb
or
xchg
mov
xor
sub
loope
cwtl
lea
adc
iret
sbb
imul
mov
xor
pop
je
cwtl
mov
in
mov
dec
mov
test
cmp
adc
xorl
cmp
aaa
add
add
ss
lcall
lret
xchg
push
cs
nop
pusha
call
aas
stos
xchg
inc
fdivrs
test
push
fucomp
sbb
jae
cmc
bound
mov
ficoms
daa
push
xchg
ss
sbb
stc
jmp
les
or
dec
jecxz
sarb
addr16
cmpl
ljmp
fsubl
nop
imul
and
and
ljmp
inc
mov
insl
aaa
jo
pushf
xor
cmpsl
test
imul
lahf
outsb
push
sbb
or
ds
xlat
jno
aad
rolb
and
jge
pop
mov
cmpsl
and
rcll
inc
jns
adc
fwait
adc
or
cltd
inc
ss
push
adc
repnz
inc
mov
jge
sbb
add
add
or
jmp
xchg
fidivl
xchg
cmp
leave
cmp
rorb
cmc
or
imul
lcall
inc
jo
xchg
and
insb
daa
jns
pop
dec
bound
scas
ja
in
mov
lods
hlt
xor
lea
std
pop
icebp
hlt
rcl
iret
adcl
xchg
push
pop
xor
and
mov
es
shr
out
movsl
in
sbb
pop
movsb
in
mov
mov
inc
lret
xor
pop
orb
pop
pop
stos
or
ss
cmpsb
xchg
fwait
adc
iret
jmp
add
jg
mov
sub
push
jns
fistpl
sarb
sbb
stos
add
daa
scas
pop
mov
push
push
rorb
xor
ljmp
add
mov
shlb
inc
xchg
int3
in
loope
jge
xchg
inc
ljmp
fisttpl
mov
out
mov
jle
nop
jle
inc
sub
mov
stc
scas
data16
mov
xor
sub
mov
push
xchg
xorl
push
and
sarl
aas
dec
or
lret
fbstp
lret
push
test
outsl
adc
sbb
mov
or
xor
and
sbb
aam
or
push
jecxz
adc
pop
and
xchg
and
mov
xor
pop
mov
dec
push
push
mov
lods
jl
sbbl
sub
je
jecxz
mov
inc
dec
ja
cmovl
cld
adc
adc
loopne
dec
or
cmpsb
sbb
xchg
mov
fists
xchg
and
xor
stc
shlb
cwtl
popf
inc
leave
sub
and
sbb
pushw
mov
inc
or
arpl
pop
enter
shll
bound
pop
mov
jp
inc
cmp
cld
jp
sbb
mov
cmpsl
push
xchg
add
add
mov
cld
cld
mov
mov
sbb
and
push
mov
repz
stc
mov
push
shlb
js
lock
xor
add
xchg
mov
mov
xor
int
sbb
xlat
jle,pn
add
cmp
add
jge
sti
jge
into
or
jp
jnp
ljmp
repz
jbe
out
dec
and
mov
cltd
mov
cs
ljmp
mov
mov
push
or
mov
xor
test
les
mov
popl
sub
out
fld
test
rcl
mov
xor
test
lods
push
out
xor
sub
lock
sbb
lds
popa
and
sbb
out
xchg
dec
scas
movsl
lcall
test
pop
fisttpl
insl
pushf
test
sbb
add
sbb
imul
rcl
leave
push
push
lret
outsb
sbb
aad
insb
ret
or
mov
dec
dec
stos
cs
push
mov
xchg
dec
div
fwait
xor
insb
mov
loopne
xchg
sbb
push
dec
aas
cmp
pop
xor
cmpsb
ja
mov
mov
push
inc
jae
icebp
fidivl
dec
in
in
xor
lret
adc
cli
pop
or
pop
hlt
push
lds
xchg
das
loop
fwait
lods
sbb
adc
fwait
pop
pop
jo
add
cwtl
jo
test
push
pop
and
or
pop
jl
out
stos
test
fcompl
insb
pushf
xor
in
lret
cld
cmp
sbb
sub
cmp
dec
imul
jl
mov
mov
fucomi
lret
cld
cmp
sbb
sub
cmp
dec
imul
jl
mov
mov
fucomi
lret
cld
cmp
sbb
sub
cmp
imul
js
mov
mov
fucomi
lret
cmp
or
mov
sub
dec
or
jecxz
movsb
adc
or
sbb
mov
aaa
xchg
cli
xchg
jb
pop
cli
dec
and
xor
ret
or
sbb
push
jp
dec
mov
mov
jb
sub
adc
and
xor
fs
test
xor
data16
subb
sti
add
push
cmpsb
je
push
test
xchg
dec
mov
xchg
loope
aas
imul
jae
leave
mov
cltd
xor
mov
jns
shrl
xchg
xchg
or
popa
pop
fimuls
mov
jno
outsl
pop
imul
push
jg
stos
sub
loop
or
push
jmp
jne
mov
testb
ja
dec
repnz
aas
mov
popf
gs
pop
clc
lahf
and
das
cmc
pop
fimull
push
arpl
dec
push
ljmp
push
scas
mov
cmc
xchg
mov
popa
iret
shlb
add
push
push
into
lret
dec
cmp
or
ds
dec
mov
sub
push
pusha
test
ds
lret
add
dec
mov
add
ud0
cmp
lret
add
and
sti
adc
push
popf
pop
sub
sahf
add
sbb
es
sub
out
xor
inc
cltd
dec
lahf
adc
mov
xor
pop
sahf
das
into
jp
dec
mov
mov
jb
add
adc
and
xor
ret
or
sbb
push
jp
dec
mov
mov
jb
add
adc
and
xor
ret
mov
in
fwait
sub
ds
jmp
repz
out
in
test
sub
enter
imul
mov
sbb
sub
clc
lods
xlat
jecxz
inc
mov
bsr
js
loop
imul
in
iret
push
shrb
andl
mov
cmp
jl
xchg
popf
mov
stc
mov
movsb
pushf
mov
lcall
test
xchg
sub
and
sbb
lcall
dec
sbb
xchg
int3
sub
mov
cli
jmp
push
jno
in
xchg
jg
mov
xlat
lods
addr16
add
mov
rol
das
enter
xchg
jno
hlt
mov
xchg
jo
mov
jbe
jmp
lret
js
jne
fidivrs
jle
jmp
mulb
aaa
cmp
and
cmp
add
filds
pop
in
sbb
in
aam
int
in
mov
cmpsb
add
cmp
inc
adc
ja
mov
mov
mov
xchg
xchg
std
xchg
shr
cmp
sub
sbbl
scas
daa
dec
les
dec
adc
leave
or
jo
lds
mov
mulb
sbb
cwtl
mov
dec
push
int
add
mov
mov
push
lret
mov
jnp
cmovns
push
cwtl
repz
mov
decb
jg
add
mov
push
jae
mov
mov
add
inc
jmp
inc
sub
ljmp
mov
mov
mov
fld1
add
jno
add
xchg
jge
jmp
inc
into
push
xchg
rorl
inc
xor
mov
repz
xor
xchg
jg
sarb
or
movsb
stos
push
or
pop
sbb
bound
dec
imul
sub
add
pop
jbe
sahf
divl
jl
pusha
xor
dec
test
xor
xor
insl
div
or
xor
mov
push
xor
pushf
push
jae
inc
cmp
jb
loop
sarl
sub
xchg
jno
icebp
loopne
jmp
dec
fnstcw
test
les
inc
push
lods
fs
xor
adc
sbb
pop
mov
push
ja
and
dec
aad
dec
and
sub
iret
mov
fdivrl
push
xor
pop
add
cwtl
push
push
xchg
jns
xchg
out
dec
psrld
adc
lret
aad
jo
clc
ljmp
imul
fildl
or
mov
jecxz
sbb
imul
inc
mov
push
subl
mov
jbe
push
adcb
fiaddl
subb
fdivl
adc
dec
scas
sub
sub
xchg
or
out
jg
cld
pop
mov
pop
jbe
add
add
in
ret
mov
out
popa
inc
mov
xchg
addr16
mov
hlt
idivl
arpl
outsb
lock
dec
pop
cli
das
push
cwtl
xchg
pop
dec
push
cmpsb
push
rolb
loopne
push
inc
xchg
xchg
loope
xchg
stos
mov
jge
rcrb
in
mov
mov
outsb
scas
sbb
int
mov
sarb
add
test
push
jo
cmpsb
es
testl
jge
pop
push
xlat
test
cmovle
imul
je
roll
hlt
push
aas
ror
and
adc
repnz
jb,pn
out
test
dec
arpl
or
xlat
inc
cs
insl
sbb
mov
or
test
imul
sahf
cmp
je
lea
into
hlt
add
imul
outsl
test
pushf
incl
scas
test
pop
xor
sbb
js
sbb
or
lock
daa
leave
bnd
test
fucomp
mov
adc
in
loope
xchg
jp
ss
sub
stos
sub
xorb
pushf
movsb
loopne
test
sbb
aad
dec
sub
pop
push
stos
bound
or
sti
sbb
addr16
xor
inc
inc
mov
mov
fstpl
lds
repz
xchg
outsl
sbb
mov
out
or
daa
jno
pop
fdivrl
sbb
dec
cmp
pop
cmpl
mov
jecxz
iret
mov
ljmp
mov
mov
mov
rcrb
sbb
out
xor
in
popa
cmp
mov
mov
cmpsb
adc
aad
dec
mov
inc
pusha
imul
push
insl
daa
fnstenv
decl
iret
jne
pushf
shll
adc
mov
sarb
push
stos
pop
or
dec
popa
filds
mov
shlb
push
and
push
cmpsb
les
mov
imul
cs
and
aaa
or
cmpsb
stos
outsb
ja
aas
xor
push
adc
outsl
lret
enter
jb
lods
mov
dec
fs
js
or
out
insl
test
mov
cmp
add
add
mov
and
fmull
lock
xchg
mov
mov
scas
lret
mov
mov
aaa
jae
lock
sub
xchg
jecxz
cmp
iret
add
pop
inc
xchg
xlat
jns
in
ds
xchg
leave
fsubs
popf
dec
int
ror
bound
adc
or
sahf
mov
aaa
mov
mov
push
jbe
fcmovb
rcll
pop
lods
stos
popf
into
stc
push
xor
in
pusha
mov
mov
xlat
loop
sub
mov
pushf
loopne
cmp
in
cld
sub
pop
pop
arpl
stos
out
inc
call
pop
xchg
pop
or
inc
sbb
into
in
std
or
mov
pushf
adc
fmuls
fwait
and
jae
mov
pop
movsl
std
imul
add
mov
push
dec
mov
cmc
scas
rolb
and
jbe
or
jge
pop
int
push
jns
lock
fwait
pop
add
push
das
or
xchg
dec
int
mov
xchg
sub
hlt
mov
inc
shlb
dec
cmp
ret
into
pop
shlb
aam
movsb
imul
lds
inc
sub
pushf
into
sub
mov
pop
xor
jl
in
mov
sbb
test
mov
cmp
mov
enter
es
out
fnsave
sahf
jnp
adc
xchg
rep
mov
imul
dec
int3
jmp
lret
sub
sbb
je
xchg
and
lds
jp
pushf
mov
dec
lcall
pop
in
push
fldenv
or
flds
decl
fcmovnb
add
dec
arpl
cmp
cmc
mov
lret
xor
repnz
rorb
mov
sbb
mov
das
mov
lret
and
out
inc
int3
bound
pop
ss
dec
and
add
insl
lods
push
mov
mov
std
xchg
mov
or
mov
hlt
and
jne
mov
fists
jne
dec
or
jae
pop
call
popa
dec
imul
arpl
mov
rclb
lods
enter
mov
push
repz
cwtl
mov
rcrl
cmp
or
testl
hlt
mov
nop
movsb
xlat
test
loope
inc
and
stos
push
loope
testb
xchg
cmpb
inc
lods
ja
xchg
in
rolb
jp
fadds
frstor
cbtw
mov
add
add
mov
sbb
xor
shl
and
jg
xor
xor
push
js
pop
push
adc
sti
xchg
xchg
pop
add
data16
push
andl
lods
hlt
test
mov
push
mov
pop
push
pop
cmp
xchg
mov
xchg
add
out
lea
scas
push
out
aaa
inc
push
nop
test
test
jp
jo
sub
dec
scas
jmp
aad
inc
mov
cmp
lods
mov
jnp
hlt
cmp
dec
sbb
sti
popa
fiaddl
jmp
test
arpl
pushf
mov
rolb
mov
xor
adc
and
or
add
mov
das
push
pop
fisubs
outsb
aam
mov
jb
fidivrs
test
mov
sbb
xchg
xchg
je
jno
aaa
int
jo
test
sub
ljmp
out
jmp
lcall
xorl
xor
test
xor
lock
dec
aaa
divb
mov
pop
int3
push
adc
orb
fists
xor
popa
roll
out
fldcw
fwait
lea
and
aaa
or
das
int
hlt
mov
cmp
mov
in
cmpsl
out
rcr
mov
int3
push
add
pop
inc
fisubrl
ss
test
insb
popa
cmp
movsb
pop
out
xchg
add
subb
mov
insl
imul
push
adc
shlb
pop
push
mov
adc
aas
sbb
push
jge
jmp
ss
or
xchg
icebp
outsb
inc
adc
idiv
adc
pushf
jo
and
sub
jmp
cmp
inc
in
popf
out
mov
or
jno
test
ret
shll
lahf
jmp
pop
mov
hlt
fwait
repz
and
dec
cwtl
push
test
xchg
mov
mov
inc
pop
shl
mov
mov
sbb
fimuls
dec
inc
lds
inc
ret
inc
dec
mov
mov
sub
mov
idivb
call
and
mov
mov
mov
pop
in
rorb
add
mov
push
xor
cltd
bound
or
xor
pop
inc
enter
shrb
xchg
inc
sub
movsb
mov
xchg
add
adc
stos
sub
mov
sti
enter
sbb
adc
repnz
push
fidivrl
dec
mov
cmpsb
stc
filds
mov
pop
xor
adc
jp
sbb
xor
mov
pop
mov
icebp
inc
xorl
or
subl
push
mov
arpl
std
imul
cltd
pop
adc
mov
daa
fwait
pop
fst
bound
lret
xchg
and
stos
mov
sub
jmp
loop
lea
out
lea
pop
or
lret
push
pop
cmp
scas
pop
adc
inc
adc
dec
adc
and
jge
push
or
imul
xchg
mov
fcoml
mov
imul
popf
mov
inc
test
adc
jecxz
je
add
lea
mov
xchg
xor
iret
adc
fwait
xchg
fstpt
cmpl
fidivl
rolb
push
pushw
or
es
inc
inc
inc
push
xchg
rolb
shrb
int3
pop
test
or
mov
xchg
into
lods
push
test
dec
stc
jne
add
pop
adc
std
adc
xchg
push
in
xchg
inc
jecxz
mov
sub
sbb
rcrb
cmpl
scas
xchg
jno
pop
push
aad
jno
or
mov
adc
xlat
cs
ljmp
push
inc
inc
fldcw
dec
cwtl
out
mov
sbb
pusha
or
mov
mov
mov
inc
shll
pusha
fistps
pop
negl
pop
dec
or
nop
js
adc
test
mov
xchg
out
push
jge
cmpsb
cmpl
dec
jg
loopne
cltd
inc
imul
lods
aad
iret
negb
pop
idiv
jge
bound
and
mov
cltd
pop
outsl
jne
pusha
ret
out
mov
lret
xchg
pushf
shlb
sbb
jle
pop
xchg
push
imul
dec
idivl
add
add
push
jo
cli
xor
imul
add
xor
push
xchg
xchg
mov
push
jl
sub
nop
gs
dec
pusha
test
mov
shlb
sbb
pop
and
cmp
sti
xor
mov
outsl
lcall
pop
call
and
sub
or
mov
push
xchg
test
mov
mov
cwtl
bound
xchg
fildll
cmpsl
shlb
std
mov
mov
pop
cmp
lods
push
inc
popf
cmc
xor
gs
adc
loope
negb
mov
push
enter
jae
or
in
mov
and
fwait
popf
and
outsl
push
add
mov
mov
leave
nop
testl
pop
imul
xor
shlb
pop
iret
daa
popf
sbb
fadd
push
insb
adc
sub
shlb
and
sub
cmpsb
add
sub
sub
add
jge
jns
mov
mov
gs
jmp
pop
aam
or
cld
push
and
ss
push
jg
test
iret
fldenv
jmp
dec
push
imul
push
sbb
xchg
jne
test
push
pop
pop
sub
mov
mov
popa
and
shll
push
xchg
mov
mov
or
cmp
add
outsb
mov
lods
subb
mov
jl
jg
hlt
jg
and
dec
aaa
sub
pavgw
or
add
or
pop
or
pop
test
xchg
mov
or
adcb
ljmp
mov
stos
mov
jle
lea
popa
add
cmp
and
dec
mov
or
sub
cmp
jmp
sbb
ret
call
or
loop
out
adc
inc
push
insl
pop
mov
iret
fucomi
adc
inc
jae
rorl
movsl
aaa
stos
mov
mov
gs
add
xor
mov
sub
inc
add
cmp
cltd
test
xor
sti
push
xor
hlt
sbb
push
cltd
or
cmpl
outsb
push
push
sub
adc
add
sti
sub
ja
dec
les
mov
mov
dec
rolb
out
aam
popa
jae
xchg
jp
js
inc
shlb
daa
insl
inc
push
dec
scas
mov
insb
cmpb
xchg
sahf
roll
mov
test
ffree
orb
cmp
lea
insb
jne
cli
or
jle
outsb
jp
pop
or
pop
bound
add
aaa
and
das
stos
or
out
push
pop
lods
cmp
mov
xorb
mov
dec
cmp
lea
and
jl
mov
int3
in
dec
insb
pop
mov
mov
cs
icebp
ret
mov
clc
loope,pt
jecxz
lds
adc
loopne
pop
push
adc
mov
xchg
pop
jnp
aaa
pop
stos
rol
hlt
cltd
out
movsl
and
imul
les
das
nop
lock
inc
push
int3
lods
inc
cmc
add
loopne
test
lods
cmc
mov
in
ss
xlat
fs
sub
outsl
xor
pusha
dec
add
enter
mov
bnd
and
jnp
cld
push
in
popa
loopne
insb
xchg
add
cvttps2pi
ja
xor
mov
sub
xchg
jmp
push
dec
iret
insb
aad
jp
push
lret
popa
dec
adc
aas
inc
or
xchg
outsb
ja
sbb
out
mov
fbld
add
adc
adc
dec
mov
mov
in
mov
movsb
mov
mov
pop
mov
push
mov
and
mov
sub
lods
int3
lds
mov
push
mov
aas
jecxz
pop
lea
sbb
jg
push
in
jb
fldenv
std
leave
cwtl
add
aad
iret
bound
mov
mov
adc
pop
ret
pop
dec
jl
imul
or
aas
fldcw
ds
stc
test
jle
xchg
xchg
push
mov
jne
out
lahf
gs
shll
scas
pop
cwtl
adc
lods
lods
or
into
mov
lahf
dec
shrb
test
cmpsb
dec
mov
arpl
inc
scas
push
repz
sbb
push
cmp
fadds
movsb
jb
in
call
mov
call
sub
dec
mov
sbb
lahf
mov
sbbb
adc
mov
ljmp
push
pop
fiadds
aad
mov
or
cmpsb
and
lret
out
dec
push
xor
arpl
cli
xchg
sub
add
jno
mov
rcrl
dec
xor
xor
mov
lret
pop
push
mov
lret
imul
mov
cli
or
fdivl
lea
cltd
xchg
ljmp
cmpsb
test
sbb
or
pop
ficomps
cmp
and
inc
cld
lock
sub
mov
fs
push
xchg
mov
ret
fdivs
and
add
fwait
mov
icebp
mov
and
xor
movsb
out
adc
push
push
push
sub
dec
ss
and
push
xor
inc
cmp
push
push
repnz
mov
popl
stos
dec
sub
xlat
adc
ret
fisubl
std
xor
out
dec
sahf
test
xchg
loop
popa
ret
jne
mov
jl
pop
xchg
sub
mov
sbb
jns
cmpsl
dec
mov
inc
xor
outsl
rolb
sub
mov
fbstp
and
aas
int3
adc
out
adc
cmpb
dec
pushw
cvtpi2ps
fimull
push
xchg
fwait
pop
cmp
mov
jp
pop
pop
or
mov
movl
ret
push
xor
cmp
mov
sbb
icebp
jo
mov
xchg
cmp
fstps
leave
negl
mov
outsb
pop
add
das
and
aam
sub
mov
pop
test
out
testl
and
cmp
sub
xor
mov
push
sbb
dec
adc
outsl
lods
push
inc
pop
sbb
out
mov
out
in
dec
cmp
pop
sbb
rcr
mov
jmp
push
mov
aad
sbb
xchg
pushf
cmc
or
adcb
pop
or
push
rsqrtps
sahf
xchg
xchg
mov
fwait
sti
jp
out
movsb
jmp
pop
out
pop
psrld
hlt
sahf
mov
mov
mov
lahf
dec
jne
imul
sar
fldenv
sub
jmp
stc
fistpl
sti
inc
mov
sarl
jbe
dec
sbb
mov
push
mov
add
inc
ret
lcall
pop
cmp
jmp
add
and
test
jg
outsb
sbb
jns
push
mov
mov
addr16
idivb
inc
ljmp
stos
inc
mov
lds
add
pop
sub
rcll
sub
mov
outsl
mov
mov
lret
pop
fidivs
jmp
xchg
loop
clc
pop
gs
das
clc
test
pop
jne
lods
push
fsubrl
or
shrl
je
mov
icebp
mov
mov
pushf
jb
sub
xchg
adc
jae
pop
add
aam
xchg
add
outsb
adc
inc
dec
hlt
cmp
ds
call
out
dec
and
test
lret
add
adcb
jne
inc
mov
gs
je
mov
xchg
movsb
adc
cmp
xchg
mov
lods
insb
sub
into
push
fisubs
aad
mov
pop
sub
push
hlt
xchg
xchg
add
dec
out
mov
jb
lea
and
fsubrl
in
shl
mov
jo
mov
inc
sbb
stos
jle
and
and
addr16
xor
jmp
aad
push
test
out
xchg
mov
lret
enter
into
dec
dec
push
call
push
sbb
push
idivl
or
mov
and
dec
xchg
lahf
add
scas
inc
shlb
mov
imul
cmc
dec
roll
xor
imul
dec
scas
mov
clc
or
stos
iret
jle
or
mov
push
pop
add
mov
sbb
nop
sti
push
sahf
or
cmc
ja
test
pop
dec
jg
cli
cmp
adc
add
adc
cmp
lods
jns
icebp
inc
cmpsb
or
add
adc
sahf
cwtl
mov
add
das
lcall
push
notl
sahf
test
flds
inc
js
cld
cltd
push
lahf
pop
sarl
mov
das
push
test
sbb
mov
xor
insb
adcb
hlt
xchg
dec
push
jb
ficompl
sti
jmp
fdivrl
clc
nop
mov
icebp
arpl
mov
and
pop
cmc
or
aas
fwait
sub
sub
sub
lret
cmp
mov
insb
mov
icebp
sub
push
sbb
adc
and
xchg
ret
ret
cwtl
add
das
movsl
inc
mov
in
add
lods
jns
push
mov
mov
xchg
andb
mov
xlat
sahf
ja
pop
adc
push
mov
shll
jecxz
imul
mov
jno
cli
mov
pop
adc
rorb
arpl
xor
xlat
leave
in
push
mov
imul
enter
ss
popf
and
shl
push
repnz
jp
dec
mov
mov
jb
add
adc
and
xor
ret
or
sbb
push
jp
dec
mov
mov
jb
add
adc
and
xor
cmp
sbb
sbb
imul
mov
inc
mov
jnp
push
jecxz
into
sub
xor
push
addb
mov
subb
and
jb
mov
lcall
pop
and
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
hlt
pop
lret
into
int
imul
push
add
pop
add
add
add
sub
mov
add
or
lret
add
add
xor
gs
add
sub
movl
inc
add
jg
jae
mov
add
testb
add
add
add
lret
add
fwait
add
add
add
add
pop
add
add
add
fadds
out
add
add
fildl
mov
or
lret
add
faddl
cmpsl
add
add
add
add
add
add
xchg
add
add
add
add
int3
add
add
add
sbb
movl
out
add
add
rolb
add
icebp
add
add
add
adc
roll
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
pop
add
add
add
mov
add
fiaddl
lods
add
add
mov
add
add
add
xlat
add
add
stos
add
sub
add
push
add
add
add
add
lock
das
add
add
add
add
repnz
add
add
xlat
add
sub
cmpsl
add
add
add
add
xor
les
xor
jne
pop
add
add
mov
add
add
add
add
mov
sti
add
add
add
add
adc
or
mov
dec
add
add
add
adc
sbb
add
or
jmp
add
jae
fadds
dec
add
inc
add
add
add
add
add
add
add
mov
pop
add
or
mov
add
in
loopne
popa
add
clc
add
add
add
add
add
add
jne
pop
add
jno
sbb
sti
add
add
scas
add
add
add
add
add
les
push
add
add
add
pop
add
add
add
add
verr
add
stc
add
add
cmp
dec
add
add
and
int3
add
add
sub
add
cmp
push
add
add
mov
add
add
add
add
add
add
int3
add
lret
add
add
add
hlt
add
stos
add
add
add
fadds
xor
mov
add
out
add
add
add
add
add
add
add
add
js
adc
add
add
add
xchg
add
add
add
add
test
outsb
add
xor
xor
icebp
add
add
add
add
add
dec
add
add
add
cltd
add
add
hlt
add
add
icebp
add
sbb
jge
int3
add
jecxz
adc
ss
add
add
sbb
pop
add
inc
add
or
clc
add
add
sub
mov
lods
add
pop
add
add
add
pop
add
sbb
sti
add
add
add
add
add
add
add
jno
inc
add
mov
add
add
add
add
add
lret
add
add
add
cmp
sub
repnz
add
add
fadds
xlat
add
add
dec
add
add
add
push
imul
inc
into
fisttps
pop
sub
adc
xchg
push
xlat
js
mov
lds
dec
repz
adc
aaa
mov
fcoml
mov
out
gs
cmc
loope
fisubrs
addb
rclb
mov
aad
frstor
jle
out
push
addr16
scas
inc
push
lds
std
jmp
pop
mov
test
and
mov
push
xlat
xor
mov
and
cld
push
loopne
adc
shlb
in
dec
andl
rcrb
movsl
lahf
sahf
andb
lret
xor
xchg
dec
mov
fs
stos
sub
mov
test
dec
aaa
shrb
inc
arpl
cmp
sbb
mov
xor
xchg
push
push
stos
test
sbb
inc
sbb
fcmovbe
dec
pop
sbb
out
mov
scas
dec
js
jne
mov
int
aam
insb
in
addr16
imul
repnz
xchg
xor
mov
leave
jmp
mov
sub
xchg
mov
daa
mov
bound
in
pop
clc
inc
ret
xor
push
jb
mov
lods
out
test
daa
sub
mov
mov
nop
mov
xor
pop
adc
xchg
jmp
call
mov
aam
mov
inc
mov
jbe
sbb
cli
jbe
test
add
stos
xlat
enter
cmpsb
loop
cli
push
dec
mov
mov
je
mov
addb
aaa
shl
xor
and
repnz
cli
push
andl
cmp
cmpsb
mov
mov
iret
jge
add
in
outsb
sbb
pop
lods
push
or
inc
push
faddp
and
dec
xor
mov
enter
cld
xor
cmp
and
loopne
jb
add
out
cmp
pop
xor
and
pop
loopne
xchg
hlt
dec
push
push
in
es
sub
shlb
loop
add
enter
icebp
fdiv
es
ja
cmp
subl
cmp
inc
pop
or
xchg
out
aaa
sbb
jg
rolb
rcrb
stos
hlt
and
adc
pop
pop
mov
rclb
mov
jge
dec
ja
dec
cmp
pop
sub
rorl
cmpsl
xchg
or
fwait
inc
ret
fists
mov
test
jnp
inc
iret
adc
lret
sub
xor
bound
jb
and
and
add
mov
pop
add
pop
subl
into
jmp
and
inc
mov
adc
jne
fsubrp
mov
xchg
push
test
dec
dec
inc
dec
jecxz
test
cmp
jp
inc
sub
pop
push
jge
fsubrs
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
