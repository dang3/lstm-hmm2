adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
adc
push
cli
adc
insb
jnp
outsb
push
cmp
ljmp
scas
stos
mov
pop
pop
push
jp
or
xchg
das
sub
dec
cli
mov
cmp
lcall
inc
pop
ja
addr16
ss
es
les
and
adc
mov
mov
and
adc
pop
cmp
loop
leave
daa
pusha
sub
mov
cmpsl
out
mov
dec
rcl
outsl
xor
enter
fildll
js
out
and
xor
xor
ret
pop
es
push
inc
pop
push
and
inc
and
add
stos
ficompl
lahf
mov
jp
ret
or
sarl
mov
out
fbld
gs
inc
push
jmp
cmp
lcall
fistps
and
cmp
cltd
and
cli
sub
sahf
fwait
and
pop
out
jnp
inc
mov
xchg
cltd
iret
push
xor
and
dec
mov
ds
outsl
out
push
sbb
lock
idiv
out
xchg
cmpsb
xchg
stos
cmpsb
aam
sbb
pop
or
sbb
jb
sub
mov
lahf
popf
sahf
xchg
xchg
jecxz
sti
out
lret
fisttpl
pop
sbb
or
jnp
jno
inc
inc
jp
int
fisttps
mov
sbb
ja
pop
sbb
sub
cmp
lret
out
ljmp
scas
stos
mov
pop
outsl
push
jp
or
sbb
sub
cmp
lret
out
ljmp
scas
stos
mov
lea
leave
pop
push
and
addr16
or
xor
das
mov
imul
sub
mov
test
movsb
mov
outsl
sub
int
dec
addr16
sbb
pop
aam
jmp
cld
add
cmp
imul
aas
movsl
push
xchg
stc
add
divl
test
sub
mov
mov
movl
adc
pop
sub
mov
addr16
mov
and
test
pop
add
adc
daa
push
sub
or
pop
insl
in
ds
jp
add
cwtl
test
or
jmp
fsubl
push
mov
pop
xor
pusha
lds
cmp
repz
out
repz
out
insb
mov
sbb
jg
call
push
rorl
mov
sbb
mov
xchg
fisubs
lds
jl
pop
xchg
ud2
in
push
jns
and
test
clc
sub
push
pop
stc
hlt
cmpsl
jmp
movsb
out
or
xor
in
out
notl
test
push
pop
sbb
push
loopne
jae
rcrb
mov
xor
test
mov
lods
push
push
pop
sub
fdivp
sti
sbb
out
lret
movsl
sub
cmp
jnp
notl
mov
cld
cmp
xlat
lds
es
fadd
cmp
cli
and
lahf
cmc
shrl
cwtl
cmpsl
cmp
subb
sub
scas
cmpsl
repz
mov
fimuls
insl
push
push
pop
lods
ficoms
aaa
movsb
test
in
movsb
push
clc
adc
pushl
rorb
and
mov
inc
sbb
adc
mov
sbb
jbe
inc
lcall
in
cltd
push
adc
xchg
mov
or
and
xor
pop
in
dec
mov
xchg
loopne
or
xchg
cs
jg
sarl
mov
push
stc
mov
cld
dec
lret
aam
dec
pop
out
dec
adc
daa
cmpsl
or
int
inc
and
or
fsubr
fucomp
pop
or
movsb
mov
stos
push
icebp
or
mov
pop
repz
aad
sbb
xchg
scas
mov
mov
shlb
sbb
je
pusha
adc
and
xchg
mov
notl
and
fisubrl
loopne
lret
inc
mov
mov
daa
add
js
jp
sbb
mov
aad
fisttpl
and
xchg
mov
test
out
mov
nop
in
jp
dec
outsb
cmp
aas
pop
negb
addl
jnp
aas
inc
adc
adc
and
mov
mov
xchg
std
mov
or
xchg
and
xor
aas
push
nop
push
xchg
aad
out
loopne
pop
or
fstl
jl
jecxz
and
lea
fidivrl
push
repnz
loope
push
push
in
pop
pusha
fistpl
cmpsb
mov
jmp
sub
jle
lds
adc
arpl
data16
jae
jbe
into
cmpsb
xchg
mov
push
and
fucomip
inc
xchg
hlt
sbb
ljmp
in
xchg
aas
cld
pop
xchg
mov
lret
jno
rcr
push
or
cwtl
or
mov
test
fwait
and
je
mul
pop
js
sbb
jecxz
int
scas
inc
out
mov
fwait
sbb
inc
xchg
je
jecxz
mov
or
pop
mov
mov
imul
bound
fdivrl
cmp
popf
out
stos
std
fcomp
inc
jle
bound
mov
jmp
aam
dec
inc
ret
stc
adc
dec
push
stc
icebp
fcoms
sti
xchg
sbb
push
popa
out
xchg
test
jle
mov
mov
outsb
push
push
call
mov
in
fwait
sti
fbld
xor
xor
enter
cli
sahf
xchg
cmpsb
stos
popf
or
adcl
xchg
lcall
inc
or
xchg
dec
dec
insl
jo
cmp
sub
rcll
std
xor
call
lods
sub
push
and
repz
ror
jnp
fsub
in
lret
or
xchg
push
push
sbb
xchg
xorb
cmpsl
jb
inc
sub
mull
rcl
jmp
mov
mov
fldl
mov
in
pop
mov
loope
fcompl
xchg
mov
mov
push
dec
data16
dec
ss
push
js
dec
mov
pop
push
rol
sub
outsl
test
cmc
jge
jbe
shrb
jle
imul
sahf
mov
push
fsubrl
aam
cld
ljmp
lods
out
leave
adc
lcall
sarl
add
sbb
adc
aad
cltd
lods
xor
lret
sub
ficompl
hlt
pop
dec
fisttps
sbb
ret
jne
inc
mov
lea
or
pop
dec
icebp
add
cmp
jns
clc
sub
push
pop
cs
jp
std
aaa
mov
mov
adc
mov
addr16
mov
xchg
jg
mov
xchg
dec
int3
shr
aaa
test
push
test
aaa
out
pop
shll
pop
sbb
pop
movsb
cmp
xchg
jge
out
xchg
or
xchg
mov
rcr
mov
int3
xchg
pop
add
fbstp
stc
add
addr16
sar
int3
testb
mov
push
sub
outsb
sbb
sub
push
dec
jge
orb
lahf
xlat
push
divl
in
outsb
inc
imul
rcll
pop
sub
and
out
mov
xchg
mov
loop
sbb
sbb
sbb
pop
xchg
jnp
adc
inc
pop
aam
pop
in
shrl
gs
ret
dec
repnz
jle
sbb
std
pop
loope
xor
sub
test
xor
mov
loop
sbb
out
daa
orb
adc
adc
gs
adc
icebp
push
pop
xlat
das
aam
fcmovbe
test
dec
lods
xchg
mov
and
fsubl
or
pop
mov
int3
push
jmp
mov
mov
jae
rcrb
pop
lahf
pop
ficoms
xor
pusha
inc
jnp
mov
popf
ljmp
sbb
xchg
mov
mov
push
lods
inc
ret
push
in
popf
aad
mov
inc
fcomp
xchg
pop
sti
dec
jnp
adc
pop
out
ficoms
sbb
int
popa
mov
xor
jbe
push
xchg
add
je
sub
jecxz
mov
jns
mov
hlt
push
xor
mov
jp
jns
jns
ja
cwtl
gs
adc
test
dec
and
xchg
push
pop
in
inc
sbb
inc
std
push
mov
out
mov
sub
iret
jno
ljmp
or
ja
leave
fsubrl
sub
pop
dec
and
mov
iret
cmpsb
shrl
gs
jo
out
es
pop
out
lcall
fsubp
adc
lret
xchg
in
jbe
scas
xor
lret
aaa
shlb
popw
adc
pop
inc
dec
aas
mov
sahf
ss
sub
mov
mov
mov
mov
outsb
mov
mov
insl
inc
and
lock
xchg
jb
mov
fcom
mov
dec
ss
or
inc
out
jnp
cmp
enter
sub
lea
xorb
xor
adc
int3
xor
jge
or
jae
adc
les
pop
movsb
xchg
lea
das
scas
js,pn
cld
dec
or
in
add
movsb
mov
sbb
repz
cmpsb
xchg
test
mov
mov
sarb
adcb
xchg
mov
push
loop
mov
leave
in
test
and
lds
jo
ljmp
push
and
and
push
daa
inc
xor
rol
fprem
cmp
mov
andb
inc
mov
sub
jmp
xorps
xchg
push
sbb
leave
add
dec
pop
inc
int3
scas
repnz
pop
pop
scas
xlat
mov
mov
push
pop
pushf
rolb
add
sbb
shll
bound
aad
jae
cmp
xchg
add
dec
mov
inc
push
aas
or
jg
stos
and
sub
mov
ds
fistl
bswap
lds
hlt
push
fldl
mov
aad
insb
adc
sbb
std
mov
std
cmp
adc
sbb
sbb
add
dec
xchg
and
mov
or
push
cltd
xor
daa
cmpsl
mov
enter
fdivrp
xchg
mov
sbbb
sub
movsb
mov
mov
mov
inc
jns
cs
pop
inc
cwtl
imul
cmc
xor
fsubr
in
dec
cmp
in
push
push
mov
and
cmp
lds
das
cmp
fdivrl
xchg
out
mov
rsm
push
jle
push
push
idiv
dec
imul
insl
rorl
adc
xor
xor
and
or
aaa
pop
and
push
out
fsubrp
mov
dec
daa
jnp
cs
repz
push
jecxz
mov
cmpsl
insb
decl
xchg
mov
jno
ja
aam
sbb
adc
jns
sub
cmp
jmp
jmp
ljmpw
int3
fisttpll
jp
adc
or
leave
sti
addb
push
in
sub
mov
dec
dec
sti
sub
xor
jmp
andl
add
jne
adc
int3
sti
mov
out
aas
dec
shrl
dec
pushf
inc
cmc
lods
daa
iret
push
dec
add
test
pop
into
in
lods
test
stos
mov
bound
push
push
and
negl
lea
and
outsl
mov
test
inc
pusha
movsb
es
mov
lods
ss
adc
dec
and
rorl
xor
pop
imul
pop
push
insl
push
push
pop
test
in
jae
loop
push
addr16
pop
xchg
movsl
movsb
fcomps
filds
mov
andb
in
fldl
sbb
outsl
xor
je
jle
sub
jecxz
sub
cmc
cmp
cmp
inc
test
mov
dec
cltd
in
xchg
sbb
xchg
rorl
xchg
xchg
cmpsb
xor
mov
mov
sbb
sbb
push
or
sbb
cmp
lds
fistpl
sbb
stos
adc
inc
jg
stos
movsl
lahf
xchg
subb
xor
or
sbb
fld
cmpsl
inc
test
cmp
or
mov
adc
or
outsl
rcrl
popa
xor
lret
push
sbb
popa
leave
adc
mov
dec
pop
in
popf
pop
mov
inc
lcall
cmc
in
out
lahf
mov
leave
sbb
sahf
add
adc
jmp
push
call
lret
fldt
outsl
fnstenv
fistl
iret
stos
out
jnp
xchg
cs
repnz
test
in
ret
and
push
xchg
in
cli
mov
inc
inc
mov
movsb
push
or
jne
xchg
cmp
subb
mov
scas
pop
ja
jg
cmp
aas
xchg
jbe
das
cmp
cmpb
sub
mov
mov
and
push
shlb
push
jl
dec
out
xchg
inc
movsb
cmp
out
jb
xchg
addr16
stc
pop
sbb
jbe
cld
mov
into
mov
mov
adc
mov
ror
daa
aad
rcll
leave
in
outsl
fldenv
sub
mov
push
jl
lods
repz
stos
cmp
notb
fimuls
cltd
scas
ret
test
jge
jo
outsb
pop
cld
out
pop
sbb
adc
xchg
sbb
adcb
jae
sbbl
dec
scas
inc
inc
add
popa
adc
out
and
mov
cltd
and
mov
dec
addr16
lret
cltd
mov
xchg
insb
cltd
jle
mov
sub
adc
or
ret
xchg
lds
das
jecxz
out
scas
mov
in
adc
mov
mov
lcall
xchg
bound
pop
cmpsb
jp
and
sub
sbb
imul
inc
xor
mov
lods
les
or
in
push
loopne
iret
jg
test
push
jne
icebp
bound
test
test
mov
dec
pop
dec
jns
insb
inc
push
dec
stos
add
loop
ja
mov
outsb
leave
xchg
mov
adc
ja
lret
inc
addl
ss
out
loope
jge
jae
xor
push
cmp
xor
mov
not
movsb
cltd
pop
cmp
aas
sti
aaa
dec
sub
insl
clc
mov
out
adc
or
gs
xor
adc
jecxz
shll
inc
bound
sub
imul
add
jg
lds
mov
sub
lock
test
push
mov
fimull
insb
rclb
adc
popf
push
test
mov
lret
xor
sti
xchg
mov
sahf
sub
mov
add
sbb
xor
out
js
sbb
mov
mov
ljmp
lret
cmp
or
aas
addr16
sbb
and
cwtl
or
inc
les
outsb
cmp
mov
out
jl
sbb
mov
in
ret
shll
leave
outsl
sub
mov
jae
mov
in
push
loopne
mov
push
enter
add
mov
out
adc
call
rcr
cwtl
mov
sbb
add
mov
xchg
lahf
xor
aad
inc
div
or
mov
jne
jae
popf
sbb
xchg
es
scas
xchg
jg
adc
mov
ret
push
test
data16
and
sub
push
cli
rcl
xchg
xchg
out
into
out
ja
mov
jg
push
je
outsl
sub
xchg
inc
xchg
sbb
sub
andl
sub
fsincos
adc
scas
out
sbb
test
repz
adc
jmp
je
add
inc
push
adcb
ljmp
and
add
pushf
xor
inc
jno
js
iret
lods
arpl
or
aaa
fs
aas
inc
pushl
inc
sub
adc
es
lahf
aaa
mov
add
inc
aas
mov
xchg
leave
into
xlat
inc
pop
cmp
test
dec
pop
sti
shr
stos
add
movsb
cwtl
je
call
xchg
rcrl
popa
aas
or
aad
sbb
ja
cmp
or
mov
jg
xlat
pop
ss
lcall
stos
aam
test
rcr
xchg
push
sub
mov
scas
popl
call
push
mov
repnz
mov
ficoms
aas
sbb
negl
lock
int3
mov
add
jo
pop
add
push
mov
cltd
incb
test
ss
scas
fmuls
int
jp
cmpl
adc
sbb
pop
cmp
lods
dec
data16
sbb
jp
sahf
mov
mov
pop
sti
xchg
call
loop
inc
pop
sbb
fisubl
mov
mov
rorl
sbb
sbb
cwtl
cmc
pop
jp
subl
inc
sti
lret
xchg
movsl
jge
in
xchg
xchg
stc
jp
lcall
outsl
test
and
fwait
jl
cmp
ds
pop
hlt
insl
in
ds
lds
mov
out
dec
cs
loope
adc
pop
int3
adc
sbb
loope
repnz
jnp
mov
mov
mov
jne
out
in
inc
mov
or
test
xchg
mov
sub
iret
test
mov
lahf
insl
pop
inc
pop
inc
jbe
fs
out
dec
pusha
adc
jbe
dec
arpl
xchg
push
sbb
push
jge
mov
or
pop
sub
lods
sbb
jne
ljmp
popa
xchg
aad
pusha
add
inc
test
dec
cmpsl
cmpsl
jo
loop
xor
jae
pop
mov
cmc
sbb
fs
pop
xlat
xchg
lock
imul
test
pop
xor
inc
sbb
in
cmp
fs
jb
jbe
nop
mull
mov
push
inc
sub
inc
das
push
jge
add
gs
test
stos
stos
cmp
or
addr16
fmulp
sbb
cmpsb
neg
cmp
sbbb
xor
cmp
pop
out
or
ss
popa
mov
cld
push
icebp
jle
stc
mov
pop
daa
and
xchg
adc
pusha
push
cli
sbb
movsb
mov
out
xchg
in
ret
push
mov
pop
rorb
in
sbb
test
cs
lahf
in
pop
xor
sub
in
sub
mov
es
cmp
fsubl
cli
jge
gs
mov
das
push
sub
call
stos
mov
xchg
lock
mov
add
outsb
imul
in
lcall
je
fldt
xchg
les
imul
push
xor
test
je
mov
out
inc
fldl
mov
mov
xchg
outsb
in
and
sbb
jg
dec
and
pop
sbb
cltd
std
pop
pop
cli
and
cld
imul
js
dec
fisubs
dec
push
mov
cld
pop
sti
and
inc
in
jmp
push
mov
cs
jbe
cmc
push
inc
lret
pop
mov
xor
push
sbb
cli
cmpsl
xchg
mov
or
js
dec
mov
lret
jp
iret
cmp
hlt
adc
loopne
cltd
cmp
mov
int3
ljmp
mov
test
imul
cmp
sub
xchg
and
aad
mov
jge
insl
pop
data16
add
jo
add
lods
iret
inc
push
mov
mov
mov
push
mov
jl
orb
add
mov
mov
pusha
ficompl
loopne
insb
in
inc
jbe
fucomp
cmpsb
ret
jns
inc
xor
cmp
test
push
addl
or
adc
mov
iret
mov
adcl
outsl
ret
sub
test
pop
lea
cmp
adc
fwait
sub
or
in
std
push
loop
xor
and
inc
cmpsl
push
xorl
and
gs
mov
mov
sub
mov
xchg
jecxz
sbb
xlat
pop
inc
mov
sub
xchg
pop
test
jmp
pop
aas
test
ss
sub
mov
ret
out
sbb
xchg
cmp
jle
sub
add
dec
fwait
stc
inc
pushl
repnz
ds
and
andl
cmp
dec
imul
push
inc
mov
lds
jp
adc
sub
mov
xchg
rorb
push
daa
stos
punpcklbw
dec
cmp
dec
outsb
and
sub
xchg
scas
cmpsl
scas
mov
outsl
mov
dec
dec
in
cmp
out
stc
outsl
mov
xor
and
imul
scas
fwait
pop
jge
mov
dec
jmp
rclb
pop
pop
inc
push
shlb
cmp
mov
test
repz
daa
popa
inc
loop
mov
out
imul
ret
xchg
daa
inc
xchg
pop
daa
imul
cltd
popa
clc
jge
pushf
dec
das
xchg
pop
test
dec
or
adc
lret
sbb
mov
neg
cmc
adc
xchg
or
test
xor
jae
mov
inc
dec
jg
mov
test
jbe
and
mov
cmc
jnp,pn
adc
lods
into
outsb
movsb
or
cmp
lret
and
xor
pusha
sub
mov
add
inc
in
int
cmc
xchg
or
jne
ss
shrl
ret
mov
inc
lds
insl
shl
popa
nop
rolb
or
dec
call
ds
test
xchg
xchg
mov
xor
ljmp
aaa
xchg
jmp
jo
sbb
out
fs
es
xchg
mov
fnstcw
ret
popf
mov
test
cmp
js
popa
sub
jno
push
sub
inc
cltd
arpl
xchg
xchg
jle
and
dec
in
and
or
stc
cmpsl
mov
pop
fdivl
cld
pop
add
andb
pushf
sub
pop
cmp
std
sbbl
add
sbb
movsb
mov
jae
push
pop
xor
cmc
cmc
pop
cmpsb
push
xor
in
sub
or
int3
int
push
push
or
shll
insb
sbbb
or
xor
bound
mov
ret
push
add
outsw
mov
movsb
sarb
fstps
aas
mov
adc
jmp
sti
mov
pop
xchg
jle
sti
cmpl
sub
lods
subl
lahf
mov
push
jb
les
push
test
movl
dec
andb
repnz
sub
xchg
mov
lds
mov
leave
jmp
or
bound
mov
sub
bound
adc
dec
subl
sti
out
jo
mov
cmpb
jns
adc
sub
sti
jb
sbb
jnp
xor
mov
inc
fimuls
mov
xor
stos
mov
and
or
ret
xchg
test
shll
xchg
cmp
cmp
mov
push
pop
xchg
push
jg
pop
sbb
sub
cmp
lret
out
ljmp
scas
stos
mov
pop
outsl
push
jp
or
sbb
sub
cmp
lret
out
ljmp
scas
stos
mov
adc
jg
pop
mov
sub
cmp
adc
ljmp
scas
mov
pop
pop
push
jnp
or
sbb
xor
decl
push
push
inc
inc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fisubl
jmp
xchg
cltd
loop
rclb
add
sbb
jb
inc
cmp
mov
jmp
repnz
and
sbb
imul
cmp
push
popa
mov
xor
cmpsl
ret
cmp
jo
jae
ss
insl
sub
and
ljmp
arpl
pop
push
sarl
lret
in
pop
daa
or
leave
sub
cmp
insb
pop
mov
or
lret
scas
push
cmp
jbe
bound
cmp
add
mov
call
xor
mov
or
jb
adc
xchg
sbb
add
repz
test
sub
fisttpll
std
xchg
mov
dec
sub
je
gs
jnp
test
bnd
lret
std
sub
pop
xor
jb
inc
and
aas
clc
xchg
pop
shlb
pusha
cmp
pushf
xchg
push
dec
popa
lock
popf
pop
xchg
bound
cmp
inc
andb
xchg
jge
icebp
repnz
and
xor
add
push
bound
jb
inc
sub
mov
mov
xchg
testb
xchg
sbb
sbb
or
imul
pop
push
cmp
lods
xlat
mov
mov
dec
stos
cld
mov
imul
ja
or
jae
adc
cmp
cwtl
lock
repnz
and
jns
imul
cmp
push
fldenv
jmp
repnz
and
jns
imul
cmp
push
fldenv
sub
xchg
popa
sbb
xor
mov
ja
mov
insb
clc
fs
ret
je
jns
or
ficomps
fldcw
scas
je
pop
mov
dec
and
aam
bound
add
jae
or
stc
idivb
pop
jl
jno
popf
je
sahf
cmp
jnp
mov
or
sub
or
pop
test
push
cwtl
cmp
mov
aaa
add
cmp
andb
test
cmpsb
inc
push
fnsave
pop
pop
xchg
rcrl
rcrb
jne
repnz
jg
adcb
loop
jns
movsl
pop
jmp
xchg
in
pop
add
push
pop
lock
cmp
jae
lock
pop
or
xchg
cli
xlat
nop
into
dec
mov
pop
fsubp
fstpl
push
inc
dec
test
and
sub
ljmp
mov
jecxz
mov
out
mov
fcoml
xchg
das
sbb
lahf
stos
sbb
add
xor
add
shlb
movsb
sbb
sbb
xlat
int3
mov
rcrl
cmp
sub
cld
push
and
les
jecxz
int
iret
xor
add
push
lret
push
fisubrl
movsl
adc
repnz
out
dec
fwait
push
test
and
vhsubpd
mov
push
icebp
jl
inc
adcb
xchg
test
dec
add
add
and
sahf
outsb
hlt
std
sub
pop
push
dec
jmp
xchg
adc
insl
mov
cmp
and
xlat
pop
xor
bound
sti
ret
aad
clc
jae
or
xchg
sbb
cmp
loope
push
aad
repz
inc
push
fcomip
inc
cmpsl
mov
inc
cmpb
jle
mov
mov
sbb
lods
shl
inc
or
dec
lahf
ret
out
push
mov
dec
and
mov
ss
rol
push
jp
xchg
dec
and
test
call
push
loop
sub
mov
out
dec
dec
imul
test
or
dec
pop
jecxz
fnsave
stos
dec
shrb
cs
adc
pop
push
fdivl
mov
dec
or
sbb
add
mov
pop
push
jecxz
repz
pop
in
fistpll
into
or
and
pushf
fwait
dec
pop
mov
rcll
movsb
mov
pop
xchg
mov
test
sbb
pop
push
cld
add
jbe
push
popa
loopne
ljmp
mov
inc
dec
mov
fdivrp
stos
sbb
xor
mov
fsubs
push
xchg
xchg
cmp
test
inc
or
pop
xchg
pop
add
dec
lret
popa
jg
xor
cmpsb
dec
mov
mov
or
mov
sbb
imulb
icebp
test
or
cli
scas
hlt
cld
sub
push
inc
shrl
and
cmp
aaa
orl
dec
std
lea
xchg
mov
mov
je
frstor
mov
shrb
das
xor
mov
sbb
xchg
add
movsl
adc
aam
fs
sub
loop
cmpsb
in
xchg
push
fcomps
sbb
das
mov
pop
xchg
cmp
ds
into
xor
xorb
and
arpl
lea
lods
cmc
push
in
xor
popa
jbe
xchg
add
imul
jmp
xchg
or
lcall
sub
pop
add
paddq
inc
jg
jb
adc
movsb
xor
jns
cmp
insl
push
pop
leave
loop
lock
pop
imul
xorb
sbb
shll
jp
loop
in
and
test
inc
cmp
mov
sub
imul
clc
enter
sub
lret
ret
mov
int3
fmull
cmp
pop
test
xchg
mov
push
cwtl
and
korb
adc
xchg
or
lods
insl
mov
lret
orb
cwtl
repz
in
mov
push
aam
lret
sti
jo
in
mov
mov
lea
imul
cmpsl
out
cmp
arpl
daa
xchg
dec
xorl
mov
iret
pop
fisubrl
dec
js
incb
xchg
outsl
xchg
loop
mov
mov
popf
add
aas
addb
mov
pop
pusha
or
shrw
out
push
cmp
ss
xchg
cs
adc
inc
sahf
ds
shll
rcl
xchg
dec
cltd
inc
cli
leave
mov
out
inc
inc
dec
push
push
push
mov
orl
into
jecxz
repnz
ret
mov
lea
sub
sub
or
cmpsl
mov
fldenv
sub
lods
insb
or
pop
add
jge
lahf
push
and
jg
xchg
in
adcl
inc
fadds
outsb
pop
imul
sbbb
movsl
stc
movsl
or
movsl
in
jle,pt
cltd
jge
mov
test
pushf
hlt
lods
mov
pushl
adc
aad
jg
test
mov
jg
lds
int
inc
adc
pop
push
sub
cli
mov
cmp
das
in
cmp
push
sbb
fistps
and
repnz
icebp
out
cld
fisubs
leave
pop
lock
divb
xor
mov
mov
ja
push
sub
aad
into
popf
loopne
lods
jmp
daa
mov
xchg
in
adc
mov
fsubr
mov
shlb
test
out
lret
lahf
pop
mov
xor
repnz
adc
and
xor
pop
lock
inc
clc
dec
push
sub
in
push
push
dec
jne
mov
mov
jp
inc
cmpsl
xor
leave
jl
push
loope
arpl
stos
jne
push
push
lock
mov
cmp
repz
lea
jg
cmp
fcompl
clc
fisubl
and
inc
jp
and
outsb
out
popf
movsl
sbb
dec
and
xor
mov
inc
pusha
scas
ror
or
test
pusha
aaa
sbb
push
inc
xlat
mov
loop
adc
cmp
xchg
jge
xchg
shlb
xchg
lods
and
mov
xor
sub
sahf
xchg
xor
mov
jp
sub
sbb
pop
xchg
cmp
leave
lret
clc
add
das
xchg
jnp
sbb
push
lods
mov
out
ds
addb
adc
push
je
aaa
push
jbe
sub
and
push
les
imul
imul
je
loope
sti
mov
nop
ret
rcl
xor
inc
fwait
cld
or
dec
incb
es
pop
loope
lahf
xchg
loope
out
fwait
inc
lock
cs
sbbb
mov
sub
jbe
mov
pop
mov
fs
xchg
cmpsb
ja
xor
ret
cmp
or
fucomip
jne
xor
jl
mov
inc
dec
xorb
clc
mov
mov
jle
out
mov
ret
add
shlb
xlat
enter
dec
stos
je
and
out
mov
es
and
fisubs
js
lods
cmp
xchg
aaa
cmp
js
sbb
ret
leave
adc
cmp
cmpsb
push
outsb
sahf
enter
jo
and
mov
mov
aaa
jae
adc
xor
lea
push
adc
push
mov
or
sahf
jmp
adc
call
xchg
mov
sti
mov
scas
sub
pop
sub
rcll
adc
stc
pop
or
jne
push
mov
stos
push
xchg
mov
fwait
and
in
lahf
push
lret
addr16
clc
xchg
or
mov
mov
and
lea
aaa
or
sahf
fwait
fistl
push
mov
lds
sbb
inc
and
mov
sahf
mov
push
cmpsl
enter
cmp
pop
or
xchg
and
out
dec
jecxz
movsl
daa
aaa
stos
fimull
scas
pushf
in
daa
cmpsl
jo
mov
xchg
sti
insb
loope
jmp
aad
cmp
js
push
xchg
dec
jecxz
inc
pop
pop
pop
addl
je
sti
addr16
xor
les
shll
xchg
push
inc
movsb
mov
pop
test
movups
inc
xchg
xlat
cmp
out
scas
jg
sbb
fnstenv
mov
mov
into
mov
and
ficoms
cmp
mov
loopne
mov
aas
mov
or
xor
out
cmp
cmp
mov
lea
mov
or
fidivs
mov
aam
iret
ficompl
shlb
pushf
mov
shll
shlb
repz
out
gs
mov
bnd
sbb
mov
es
mov
dec
or
insb
idiv
sub
rcl
cmc
stc
fs
in
and
pushf
fisttpl
ret
cmp
push
ja
sub
mov
fwait
pop
pop
icebp
push
adc
lds
or
mov
jne
nopl
xor
cwtl
xor
mov
mov
inc
jge
sub
sti
dec
test
test
adc
fsubrl
insb
in
bound
loop
cmp
shlb
repnz
lods
shrb
vpandn
push
inc
jg
in
mov
pop
add
push
xrelease
stc
mov
loop
mov
repnz
mov
out
sahf
nop
into
or
push
les
inc
lea
add
or
pop
sbb
imul
sub
pop
cmp
jecxz
add
shl
iret
cmp
mov
push
mov
xchg
mov
mov
xchg
rcll
fs
dec
lods
pop
jg
mov
mov
pop
in
test
in
lea
pushl
das
and
mov
mov
xlat
mov
sbb
adcb
adc
jb
sbb
or
pusha
leave
cmp
loope
cmp
inc
out
xchg
mov
adc
add
pop
push
mov
pushf
mov
fidivs
mov
adc
mov
arpl
inc
scas
xchg
jecxz
xor
or
mov
dec
testb
fdivrs
sub
sub
mov
and
pop
pop
jns
or
jg
mov
push
dec
jp
push
test
mov
incl
cmpb
ja
clc
nop
mov
outsl
sbb
sar
sahf
in
aad
arpl
sti
add
jno
or
sbb
mov
je
or
xchg
jbe
jae
test
jae
cmp
mul
inc
ret
mov
add
in
fdivl
mov
sub
ss
lret
cmpsb
xor
je
shll
pop
jnp
xor
xor
and
mov
das
cmp
sti
mov
jmp
sar
mov
or
idivl
addr16
jl
mov
inc
cmp
and
jecxz
cmp
mov
mov
out
or
int3
sbbl
loope
int
ljmp
rcl
cwtl
xlat
in
pop
mov
jg
jbe
sub
enter
aad
hlt
xor
adc
jecxz
push
mov
shl
push
xchg
ja
cmp
repnz
andb
or
xchg
push
std
jns
cmp
xlat
push
mov
out
fisttps
push
add
jb
lcall
pop
dec
out
mov
jbe
leave
and
outsb
lods
out
dec
xlat
aam
cld
call
xor
push
loope
dec
test
inc
jmp
lock
mov
imul
mov
or
mov
dec
out
inc
int3
adc
lret
mov
jb
mov
cld
int
jmp
lods
sbb
jo
loope
rcll
xchg
stos
aam
mov
popf
lcall
jecxz
mov
mov
fxch
ljmp
movsb
or
cmpsl
adc
insl
inc
clc
cmp
jl
push
mov
mov
ss
push
hlt
std
adc
xor
cmc
push
in
stc
adcl
jp
das
pop
into
fnstcw
pop
inc
or
shrl
enter
cmp
pushf
and
jbe
and
loopne
mov
xchg
mov
adc
cmp
jbe
cmp
and
adc
push
pop
sbb
mov
in
push
cmpsb
xchg
pop
push
jae
mov
sub
popw
or
xchg
xor
jae
xchg
mov
xchg
repz
fsts
sahf
add
xchg
out
mov
dec
sbb
cmp
push
pushf
cwtl
sub
inc
mov
repnz
das
mov
push
int
int
outsl
dec
sub
data16
loopne
adc
fimull
mov
xchg
mov
ja
add
dec
inc
sub
cmp
sbb
xchg
movsb
negb
rorl
je
loop
negb
frstor
inc
out
xor
lods
lock
or
test
dec
in
sti
push
pop
test
sub
jae
or
int
add
mov
fcmovbe
cmp
xchg
dec
fmulp
sub
adc
jmp
inc
cli
movsb
test
and
negl
jae
or
jle
mov
sub
lods
popa
or
adc
movsl
xor
jns
sub
movsl
faddl
adc
sub
xor
lds
xorl
dec
xchg
push
loope
cmp
lea
enter
sahf
lar
xorl
or
mov
sahf
int
mov
add
sub
int3
in
dec
out
sbb
lret
imul
inc
test
and
stc
sbb
insb
pop
rolb
out
cmp
xor
insb
jo
adc
mov
mov
or
add
push
int3
dec
call
lods
popa
push
pusha
xor
add
loop
mov
popa
or
sub
jg
test
pop
mov
dec
jb
mov
dec
and
cmp
pop
daa
loopne
jp
test
lods
jecxz
jge
fisttpll
outsb
adc
jae
push
mov
ljmp
in
leave
aas
scas
push
push
mov
hlt
mov
sub
sub
mov
movsb
pop
mov
jmp
stos
gs
bound
xlat
test
int
outsl
leave
jns
dec
movsb
scas
sbb
pop
out
stc
rorl
enter
insb
and
jge
cmp
pop
dec
imul
mov
mov
clc
cmpsl
aaa
add
inc
pop
loopne
jp
insb
adc
outsl
mov
xor
xor
and
aam
add
outsl
lds
mov
rol
jg
and
or
movb
lds
sub
mov
mov
out
stos
jle
dec
inc
cmp
cmp
mov
cmp
add
sbb
add
mov
clc
cmp
dec
std
and
inc
jne
or
mov
jle
jle
push
outsb
cmpsl
iret
inc
gs
push
cmpb
cld
ffreep
pop
push
fs
or
jle
and
das
xor
pushf
jg
mov
test
testl
stos
push
int3
imul
std
sbb
pop
fadd
sti
pop
adc
arpl
loop
ret
and
dec
je
add
scas
les
xor
popf
push
or
sub
mov
rcrb
jnp
decb
data16
out
sbb
xchg
enter
and
pusha
and
cltd
cmp
push
dec
and
inc
dec
jno
out
nop
gs
cmp
push
fidivl
inc
mov
add
xchg
jg
pop
ret
sub
mov
mov
and
dec
in
mov
or
mov
test
in
xor
and
mov
and
adc
sbb
in
and
xor
in
adc
loop
fnstsw
mov
cmpsb
and
test
mov
inc
inc
stos
ja
test
mov
call
push
into
xchg
push
imul
pop
jmp
das
lds
gs
call
lret
dec
fisubrl
sbb
or
sarb
icebp
sub
outsl
mov
mov
lret
push
out
dec
fwait
mov
ret
cmc
in
sub
imul
pop
imul
mov
cmp
inc
scas
aad
clc
jecxz
rolb
push
adc
dec
fsubl
xchg
xchg
cld
push
cs
push
xchg
testl
cld
jno
addr16
clc
cltd
scas
loope
and
ds
loop
xor
cwtl
mov
ljmp
aaa
jl
sub
shrb
stos
jo
sub
icebp
shlb
adcl
cs
lods
lahf
aad
mov
jo
jo
jle
ret
add
xorl
bnd
cmc
mov
ficoms
mov
add
xchg
in
insb
pushf
arpl
pop
adc
orb
daa
push
into
xor
int3
mov
divl
add
push
sub
in
jl
imul
pusha
icebp
fdiv
dec
subb
test
mov
sbb
js
inc
call
icebp
cmp
pop
inc
pop
hlt
and
xorb
call
adc
jno
jb
pop
jp
setge
cld
push
aas
ja
dec
dec
or
aaa
daa
sbb
stos
ficomps
inc
hlt
scas
lock
cmp
jae
pop
fmuls
lods
sahf
into
mov
sahf
std
and
mov
adc
mov
flds
push
cwtl
aad
adc
sub
lds
sub
fimull
adc
mov
cmp
push
fsubrl
adc
movsl
xchg
sti
outsl
push
jno
mov
mov
sbb
push
mov
inc
mov
sub
pop
insl
add
pop
mov
jg
lods
test
add
insb
dec
adc
cld
loope
mov
popf
mov
jmp
add
and
pop
jno
clc
ja
pop
cmp
lock
mov
pop
xor
mov
pop
scas
dec
adc
enter
fistpl
enter
sub
fbld
rcpps
sbb
pop
mov
jno
mov
in
test
pop
popa
sbb
js
aas
arpl
sbb
cwtl
xchg
jne
popa
jmp
adc
pop
mov
push
jecxz
add
mov
std
fs
mov
popf
lds
fsts
xor
ss
mov
mov
dec
gs
jmp
mov
js
fadd
jecxz
xchg
fs
inc
mov
out
mov
xchg
lcall
imul
mov
ret
mov
fistl
xor
arpl
pop
add
sub
outsl
inc
sub
xorb
sbb
lret
leave
mov
mov
xchg
mov
lds
and
push
in
cmp
bnd
inc
aad
xchg
cmc
rorl
push
jae
ss
cmp
stos
sub
out
push
xchg
sub
pop
pop
sub
or
xchg
in
sbb
out
mov
add
pop
add
std
adc
and
mov
into
pop
jg
pop
xchg
inc
xor
into
lret
inc
outsl
and
jmp
rclb
dec
inc
sahf
cmpsb
mov
mov
jae
out
bound
movsb
prefetch
or
das
popa
ret
gs
ret
cmp
nop
sti
pop
xchg
mov
mov
sahf
cmpsb
sub
sub
dec
notb
mov
repz
mov
rol
mov
loope
into
lods
adc
pop
mov
jge
or
jp
fsubl
data16
lcall
dec
or
dec
sahf
jae
pop
mov
xor
sbb
cmp
jg
or
and
or
xchg
mov
pop
or
iret
sarl
fisubrs
mov
sub
sbb
xlat
ja
sub
push
ss
cmp
pop
fldenv
lock
pop
sub
pop
mov
or
mov
pusha
das
sub
lods
enter
dec
cmp
mov
filds
insb
sub
mov
jp
sbb
xchg
das
sub
movsb
cld
mov
mov
lcall
dec
lods
test
xor
mov
rol
and
loopne
pop
ret
fldl
ficoms
mov
sahf
gs
pop
nop
push
sbb
cmp
aaa
ret
push
push
sarb
jno
add
subb
push
sub
mov
movsl
jecxz
mov
push
add
mov
das
stos
mov
mov
add
int
test
js
sti
dec
std
or
inc
xor
jp
and
imul
aas
xchg
cli
xor
and
fwait
lods
xchg
lods
push
mov
andl
call
sbb
ficoml
adc
cmp
push
add
inc
outsl
xlat
lock
cli
cld
aas
leave
out
sub
or
clc
test
and
pusha
mov
mov
ljmp
fstps
jne
push
pop
jecxz
mov
mov
xor
dec
fcomps
es
cmpsb
mov
enter
std
out
push
adc
ret
xchg
push
sub
cltd
loop
repnz
and
jns
imul
cmp
push
fldenv
jmp
repnz
and
jns
imul
cmp
push
fldenv
jmp
repnz
and
mov
imul
cmp
push
int
xchg
mov
or
cltd
loop
repnz
and
outsb
ljmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jno
popa
xchg
push
mov
inc
repnz
repnz
shll
inc
mov
jb
andb
mov
and
adc
add
shll
shll
daa
mov
jb
andb
mov
and
adc
add
icebp
add
xor
add
push
rolb
call
loop
icebp
sub
js,pt
cmp
cmp
jns
lret
sub
jns
mov
sbbb
xor
and
push
js
adc
fnstsw
daa
out
mov
and
jo
jne
repz
cmp
dec
add
adc
and
int
mov
cmpl
pop
ret
dec
ljmp
xor
ds
push
mov
jb
inc
in
aam
mov
cmp
lock
jmp
xor
adc
inc
outsb
or
test
mov
pop
mov
adc
add
push
push
repnz
orl
mov
and
adc
add
icebp
add
adc
and
xor
bound
jmp
jecxz
repz
test
jle
test
mov
ss
hlt
adc
pop
pop
out
adc
rcll
xchg
push
mov
faddl
inc
shll
clc
pop
jmp
push
ret
popa
rcll
and
je
and
adc
add
icebp
add
adc
and
xor
bound
xchg
push
mov
and
adc
add
icebp
add
adc
and
xor
bound
mov
loope
rcll
mov
push
inc
adc
or
push
lods
in
and
imul
call
sub
xorl
xorl
and
jle
loop
sub
fmulp
imul
dec
ss
leave
adc
push
scas
xchg
rcrb
xor
out
orb
mov
std
lods
test
cwtl
out
outsb
and
leave
scas
xor
jp,pn
daa
ficoms
cltd
mov
mov
mov
test
sub
jge
fimuls
rcl
stos
insb
cltd
inc
ret
pop
mov
adc
in
push
fsubr
fidivl
mov
ret
nop
sbb
add
add
or
clc
xchg
mov
inc
scas
aam
xchg
jno
incl
push
cmpl
push
lods
sub
mov
imul
sub
loope
jl
mov
lds
xchg
xor
ljmp
or
jmp
push
sarl
nop
xchg
and
inc
xchg
js
sub
hlt
jle
in
push
or
cli
xor
cs
pop
sub
movsl
ja
ret
and
int3
sbb
push
push
int
jecxz
push
orl
fcomi
fcompl
sub
adc
inc
mov
jno
out
mov
int3
pop
mov
movsl
test
adc
ffreep
sbb
nop
das
adc
data16
dec
stos
jmp
lods
dec
int
mov
jnp
mov
lods
jl
adc
inc
xchg
or
sub
sbb
test
xchg
jmp
lods
shl
jge
xor
ds
loop
into
out
inc
js
push
das
cld
popf
cmp
stc
mov
gs
xchg
mov
stos
mov
paddw
sar
cmp
dec
jnp
sub
clc
add
std
in
xchg
mov
pushf
add
and
lea
dec
frstor
dec
xchg
sbb
aam
inc
mov
dec
xchg
pop
clc
fldcw
enter
loope
lods
in
jecxz
pop
in
sti
dec
mov
cli
mov
int3
or
xchg
arpl
xchg
xchg
inc
lahf
das
stos
xlat
loopne
mov
shrb
adc
cmp
mov
mov
mov
ss
lods
fbld
cmpsb
push
inc
mov
add
xor
mov
pop
xor
shrl
js
inc
jle
jno
push
std
sbb
jp
cmp
cmc
pop
add
or
mov
mov
adc
scas
stc
and
imulb
sub
jno
jo
add
ficomps
mov
out
je
push
or
mov
jo
repz
mov
adcb
and
cmpsl
cmp
inc
dec
sub
loope
mov
sub
xchg
popa
jl
adc
mov
imul
jg
cltd
ljmp
sub
stos
mov
pop
or
sub
fdivrl
jmp
mov
mov
fwait
xor
lds
xchg
push
repnz
bound
jne
sbb
dec
jae
cld
cmp
jbe
test
adc
cmc
fwait
rolb
jnp
je
sbbb
adc
jae
pushf
in
adc
add
insl
sbb
iret
cmp
data16
test
adc
stc
ret
stc
pop
icebp
jg
outsl
pushf
std
and
aam
inc
lret
mov
mov
mov
fcomps
pop
cld
sbbb
jmp
sarl
in
adc
or
movsl
mov
adc
in
fs
inc
out
aaa
sub
insb
or
add
movsb
push
insl
jecxz
into
jno
xchg
popa
pop
jge
pop
shl
repnz
ss
add
push
mov
fcomps
and
dec
lock
add
imul
leave
inc
inc
cmpl
movsb
sbb
inc
push
iret
xor
adc
mov
mov
pop
adc
cmpsl
sub
shlb
lret
mov
xchg
ret
scas
adc
xchg
incb
dec
lahf
enter
pop
or
stos
or
pusha
jg
and
fs
daa
in
mov
ret
enter
enter
imul
in
popf
outsb
call
lds
push
push
hlt
and
out
sbb
lret
out
lea
inc
adc
daa
xor
add
jle
mov
mov
pop
icebp
das
aaa
mov
sub
orb
out
test
dec
inc
or
repz
pop
mov
adc
push
or
push
jae
or
xchg
arpl
dec
leave
adc
clc
ret
push
int
fprem
inc
repnz
inc
pop
xor
jp
adc
imul
mov
idivl
loop
adc
cmp
or
lret
jecxz
inc
mov
hlt
xchg
mov
js
add
fldcw
das
push
test
hlt
push
test
out
test
push
shlb
imul
cmc
jle
push
cmp
add
cmp
iret
ljmp
lret
clc
inc
xchg
jbe
pop
mov
sub
ret
push
cld
stc
subl
push
push
and
xchg
sbb
int3
push
and
or
push
inc
pop
push
mov
inc
in
int3
psubd
dec
xlat
lods
cmpsl
dec
testb
shll
push
cmp
and
sbb
daa
jbe
in
aas
mov
mov
arpl
imul
fimull
cmpsb
iret
leave
cmp
cwtl
inc
pop
lods
jno
mov
pop
adc
cmp
mov
mov
ljmp
repnz
mov
das
leave
scas
lret
add
xor
aas
call
or
roll
sbb
push
sub
mov
push
je
int3
push
out
or
sar
and
lds
pop
and
mov
mov
push
in
or
int3
xor
ss
insb
insl
movl
iret
xor
push
push
jnp
push
mov
sub
push
cmpb
cs
fsubl
push
pop
lret
lcall
add
ret
push
push
xor
imul
pop
cli
fldt
lods
mov
mov
cli
lods
xor
in
pop
sbb
lds
mov
jge
mov
aam
inc
mov
int
pusha
pop
iret
jp
cwtl
sbbb
outsb
pop
inc
imul
insl
mov
loop
cmp
xor
sub
fwait
jecxz
rorl
enter
nop
movsb
mov
dec
fsubr
popf
movsl
loope
add
mov
test
pop
xchg
adc
mov
xchg
cltd
mov
enter
lea
sahf
lds
bound
inc
mov
adc
inc
leave
push
push
sarl
jmp
push
push
sbbb
and
cmp
orl
jecxz
mov
aaa
add
xchg
pop
and
mov
pop
bound
mov
jne
push
loope
hlt
dec
jmp
dec
sbb
ss
xchg
jecxz
push
in
gs
lret
push
fcmovnu
jl
idivb
mov
push
pop
dec
cmc
push
mov
cmp
xor
inc
jno
push
jge
das
dec
lds
enter
mov
and
mov
cmp
pusha
popf
bound
fildl
pop
mov
xchg
sub
lock
sbb
and
cmp
ret
mov
aaa
jbe
adc
iret
fsub
ss
in
cmpsl
sbb
movsl
and
pop
popf
inc
fiaddl
pop
xor
xor
ss
jnp
inc
or
push
xor
or
push
sti
aad
xor
test
test
cltd
jne
inc
es
mov
dec
sahf
mov
decl
out
cmp
cmp
jle
mov
testb
int3
mov
aad
mov
adc
sub
adcb
cmp
add
outsl
xchg
push
setae
xchg
aam
cwtl
jge
sahf
bound
ret
out
lods
adc
xor
int
pop
aas
or
shrl
mov
mov
hlt
bound
addl
mov
xor
test
rclb
inc
jge
out
ljmp
mov
inc
stos
rcrb
ja
lods
and
fstpt
pop
call
sarl
ds
fcmovu
push
inc
jg
stos
notl
movsb
adc
fidivrl
outsb
in
je
sarb
movsb
mov
xor
aas
push
cs
mov
sti
insb
testl
mov
mov
mov
xchg
jno
rcl
repz
push
or
ljmp
out
andb
data16
fldln2
movsl
pusha
loope
fnsetpm(287
mov
mov
in
xchg
loop
popf
orl
jno
cmpsb
mov
dec
inc
aas
xor
fs
inc
inc
sub
push
adc
sbb
add
stos
dec
adc
pop
jbe
rcrl
jno
das
jg
bound
ja
or
es
aaa
push
inc
add
fbld
lret
push
fidivs
adc
and
adc
test
mov
nop
arpl
movsl
mov
sub
sub
xchg
pop
xchg
add
enter
jle
lret
or
mov
rclb
xor
icebp
pop
popa
cmp
rcll
out
sbb
mov
sub
push
jns
add
std
cmp
dec
loopne
sbb
mov
xchg
ret
adc
or
mov
adc
js
sbb
or
jnp
cmovge
push
push
push
dec
adc
js
cmp
mov
mov
add
xchg
ret
xlat
mov
test
jb
sub
pop
jle
sahf
cltd
mov
jp
pop
imul
aas
imul
nop
idivb
inc
in
sbb
out
pop
pop
jecxz
je
in
fs
and
mov
and
cmp
adc
xchg
lret
cmp
addl
pop
cli
or
ret
fwait
mov
nop
bound
fwait
mov
stos
xchg
cmpsl
into
jbe
stos
test
push
fs
xor
lods
sbb
repnz
mov
adc
cmp
sar
adc
push
imul
ja
nop
ja
insl
adc
jmp
mov
std
negl
orb
cs
scas
shlb
andb
loop
add
pop
cs
mov
add
and
inc
xor
rorl
and
jae
pop
lret
xor
cmc
and
mov
mov
pop
inc
mov
movsl
add
mov
lods
mov
fwait
mov
cli
test
int3
cld
aaa
enter
dec
fsts
sbb
cmpsl
les
dec
xchg
sbb
in
aam
stos
popa
push
dec
daa
lcall
adc
push
pushf
push
or
loopne
push
pusha
shlb
mov
ja
popf
fimull
push
pop
sarb
adc
cmp
pop
and
fcmovnbe
fwait
ja
pop
stos
sub
dec
xor
sub
cmp
push
cmpsl
rcll
adc
jg
inc
cmc
aad
or
insb
sub
loope
mov
push
mov
xor
in
jne
js
or
insb
sbb
imulb
scas
add
into
mov
xor
dec
insb
das
es
pop
inc
or
popf
outsb
cmp
jle
testl
and
inc
jnp
fisubrl
sbb
dec
push
dec
scas
dec
insl
out
lock
sub
dec
pop
mov
or
xor
push
pop
sahf
stos
and
stos
pop
lock
cmovb
aad
mov
out
dec
pop
dec
and
xchg
imul
addr16
in
pop
mov
ds
fidivrs
insb
fiadds
and
inc
aas
inc
adcl
lods
adc
fnstenv
mov
dec
stos
mov
inc
push
fnsave
jg
lock
add
ds
lock
ficoml
add
adc
popa
and
add
lea
roll
adc
pop
das
push
orb
dec
daa
lods
movsb
mov
subb
or
sub
mov
inc
mov
sahf
pushf
sbb
jno
mov
sub
loope
jl
fs
jge
jns
bnd
lret
mov
pop
xchg
inc
shr
data16
push
pop
sub
int
push
lcall
and
xor
mov
mov
jl
ja
sub
incb
clc
or
ja
push
pop
pop
aam
and
jb
add
mov
gs
push
pop
arpl
or
icebp
add
loopne
mov
test
jb
mov
sahf
or
fcoml
fistpl
aas
jmp
stos
adcl
leave
mov
lods
jmp
mov
fdivp
rcl
inc
pop
in
pinsrw
loope
pushf
iret
xchg
jecxz
pushf
imul
xchg
jecxz
movsl
insl
je
ss
lds
and
inc
adc
imul
daa
adc
iret
outsl
adcb
and
movsl
xchg
nop
and
dec
mov
daa
ljmp
fs
fs
inc
mov
dec
adc
gs
mov
push
lcall
out
lea
sub
loopne
int
or
or
scas
mov
jp
pop
ds
incb
and
mov
mov
xchg
cmp
push
xchg
imul
rcrb
popf
pop
imul
push
lods
sub
push
fs
xlat
and
sub
mov
movsb
mov
jnp
lds
sbb
xor
ss
test
mov
pop
test
push
incb
mov
pop
push
mov
jb
push
xchg
mov
xor
push
sub
inc
in
add
xor
and
fwait
lret
lret
sbb
and
iret
sub
or
add
lret
mov
mov
test
mov
cmc
xchg
lret
std
out
out
lret
sub
lods
mov
cwtl
and
lcall
lret
in
mov
xchg
mov
add
or
push
andb
hlt
inc
inc
outsb
mov
test
push
adcb
inc
dec
mov
out
jne
and
inc
pop
sub
push
arpl
adc
call
mov
add
inc
aaa
fcomip
fmull
ja
pop
cmpsl
in
inc
mov
das
das
sbb
ds
shlb
cmp
negl
jo
sti
roll
mov
sti
rcrb
jne
inc
inc
mov
clc
ss
jnp
mov
ja
sbb
ja
sub
dec
push
notl
sarb
in
sub
icebp
add
sub
xchg
add
mov
xchg
les
adc
in
or
fldl
xlat
xor
and
ja
dec
ja
movsb
push
jb
sbbl
inc
dec
push
stos
xchg
aas
xor
fadd
movsl
data16
mov
sbb
jmp
xchg
jl
stos
and
outsb
popa
pop
popa
es
inc
mov
add
mov
inc
mov
mov
test
push
push
lret
rcrl
aam
xor
fidivrs
fidivrs
push
mov
pop
sti
sub
xor
sub
sub
jns
bound
loope
icebp
je
xchg
js
mov
ret
ror
xor
mov
push
insb
jbe
mov
rcrb
or
js
jne
shlb
outsb
sbb
rcrb
adc
push
cmp
cld
rorb
xchg
jo
mov
lea
jb
ret
js
sub
bswap
andb
daa
push
xchg
adc
orl
jge
xor
dec
fdivrs
in
pop
push
stc
andb
and
fldln2
xchg
add
adc
in
lahf
in
pop
lods
inc
in
movb
xchg
adc
into
js
push
xchg
cmp
sub
hlt
jnp
cmp
and
test
mov
int3
das
iret
mov
xchg
sub
jae
xor
mov
mov
and
clc
adc
dec
insl
repz
jno
mov
bsr
mov
inc
mov
add
lock
fsts
js
es
shll
rorb
mov
cwtl
push
and
and
adc
adc
notl
add
aam
sti
sbb
and
ja
lcall
jp
addr16
xchg
add
cmp
sub
pop
xor
push
and
add
push
adc
inc
insb
leave
push
lods
cmp
je
ljmp
dec
in
pop
mov
inc
jb
adc
dec
int
jmp
jmp
mov
repnz
sbb
inc
scas
xor
push
das
xchg
pop
pop
aad
add
xchg
daa
push
call
add
js
xor
xchg
leave
adc
cmc
pop
mov
push
dec
xor
mov
and
jl
shll
in
mov
bound
shl
loop
ret
sub
movsb
and
pop
cmp
jbe
out
inc
jno
mov
adc
mov
mov
lods
or
aad
fcoml
jmp
inc
inc
addb
adc
pop
adcb
xor
into
jp
sub
and
jl
in
inc
jno
cmpsb
inc
jmp
push
cli
xchg
dec
inc
cs
inc
mov
outsl
jae
or
lahf
out
popf
or
pop
cmc
xchg
addr16
mov
jno
in
iret
dec
jno
xchg
dec
jno
rorl
cmc
adc
dec
pop
push
dec
in
inc
pop
mov
sbb
pop
mov
mov
addb
aad
sub
xchg
ss
rolb
fsincos
mov
pop
pop
adc
jge
jle
outsb
dec
push
mov
xor
addr16
pop
arpl
jo
lods
or
dec
lahf
clc
mov
sub
cmc
adc
in
dec
out
lds
pop
mov
fiadds
aad
cmpsb
aad
cmc
mov
les
xchg
lea
inc
xor
sti
jmp
add
rclb
adc
jno
sub
int3
test
test
cld
add
pop
fsubl
punpckhdq
dec
sbb
dec
cmp
icebp
outsl
pop
ret
xchg
popa
hlt
rorl
cs
aam
jne
add
out
imul
addr16
insl
jne
rcrl
fsubs
lea
xchg
lcall
mov
leave
add
jnp
test
jno
push
lods
mov
insl
and
jb
xchg
gs
pop
rcrb
dec
mov
adc
xor
xor
jmp
rorb
pop
xchg
dec
lock
scas
push
pop
push
aad
in
adc
movsl
jge
aaa
mov
pop
xchg
and
push
aaa
addb
push
adc
adc
outsb
xchg
jno
js
dec
inc
jno
push
sbb
pop
pop
adc
inc
ja
xchg
jo
stos
mov
movsl
xchg
int
dec
enter
jg
iret
xorb
mov
fwait
pop
mov
cwtl
mov
aam
jg
xchg
or
mov
leave
nop
outsb
loop
test
imul
ficoml
sub
cwtl
lret
jbe
int
shll
fadds
cmc
xor
int
mov
lahf
inc
js
test
or
into
ss
sbb
lds
mov
imul
and
rol
adc
jae
mov
cmp
out
test
scas
sbb
dec
adc
fistl
pusha
jbe
popf
sbb
add
and
imul
xchg
xor
fistps
pop
stc
popf
push
int3
jl
add
and
pop
rclb
cltd
into
sbb
shrl
in
push
fstps
or
push
jmp
xchg
jge
out
mov
and
ss
push
rorl
nop
ds
pop
out
loope
jbe
shlb
stc
or
jge
in
pop
ds
mov
xchg
call
xchg
and
xchg
js
push
inc
incb
sbb
pushf
or
std
je
int
push
fndisi(8087
scas
insb
push
outsl
push
insb
stos
mov
or
cmp
jo
lods
les
xchg
jnp
and
xor
add
jae
sbb
hlt
clc
mov
adc
aas
test
test
rorl
inc
jl
es
daa
dec
int
idivb
lret
xchg
hlt
or
inc
pop
mov
add
pop
out
xchg
lock
inc
notb
lods
sub
pop
jecxz
jbe
push
lcall
lahf
aam
das
push
ss
add
imul
pusha
into
dec
rcl
aas
out
cmp
adc
jecxz
and
movsb
mov
sbb
insb
sub
cmp
adc
ja
and
repz
jnp
xor
adc
cmpsl
cli
inc
mov
push
sub
gs
xchg
jbe
cli
xchg
ljmp
sbb
int
pop
mov
push
mov
mov
loope
movsb
xor
lods
adc
filds
test
dec
or
xor
add
xor
inc
into
cltd
adc
faddp
aam
mov
jno
jbe,pt
xchg
mov
mov
push
stos
or
mov
divl
cmp
or
cmp
mov
in
push
pushf
sbb
movsl
outsb
xchg
adc
outsb
jns
xchg
ds
mov
mov
sbb
fwait
cmpsl
mov
adc
pop
jbe
adc
mov
lods
das
xchg
sub
mov
or
cwtl
ficoml
nop
jl
pop
pop
pop
dec
push
jmp
adc
fisubl
movb
jmp
inc
adc
out
xchg
pop
fbld
in
pop
mov
jae
push
stc
xor
fdivrs
sbb
mov
ret
adc
add
icebp
add
adc
and
xor
bound
xchg
push
mov
and
adc
add
icebp
add
adc
and
xor
bound
xchg
push
mov
and
adc
add
lock
adc
and
xor
bound
xchg
push
mov
and
xchg
loop
xor
add
mov
lret
imul
adc
push
bound
outsl
xor
int3
cmp
in
loopne
lock
sarl
dec
add
popa
sbb
or
cmp
sub
fdivl
in
loope
icebp
mov
mov
xor
adc
jno
inc
cmp
sub
loop
nop
loopne
hlt
in
or
call
push
pop
xor
dec
sbb
ljmp
iret
and
mov
mov
sarb
aaa
pop
gs
mov
xchg
pusha
in
repz
xor
aam
dec
lods
fdivr
sbb
sbb
push
pop
leave
mov
xor
gs
sti
xchg
cmp
xlat
stc
outsb
sub
pushf
xor
out
xor
jge
js
sbb
push
jl
out
ja
addb
adc
iret
mov
fadd
into
mov
stos
add
mov
repz
ret
push
jp
cltd
int
add
leave
inc
mov
xor
xlat
mov
test
hlt
clc
sbb
xchg
arpl
js
test
xor
adc
jno
inc
cmp
sub
fdivl
in
loope
icebp
mov
mov
jne
insl
cmp
and
dec
push
pop
xor
leave
mov
movsl
out
xchg
cmc
adcb
movsl
leave
jle
jb
jne
pop
cmp
adc
sub
cltd
fsubl
stos
repz
leave
into
ret
pop
cmp
xor
and
or
cmp
sub
fdivl
in
loope
icebp
mov
mov
xor
adc
jno
inc
cmp
sub
fdivl
in
loope
icebp
mov
mov
xor
mov
jp
xor
push
mov
call
stos
loopne
cmpsb
dec
jne
dec
mov
mov
xchg
add
insl
fldt
add
cmp
pop
fsubs
mov
fstpt
rolb
pusha
fbld
enter
push
in
addr16
movl
std
popa
fyl2x
push
sbb
sets
out
and
popa
popa
inc
je
mov
stc
fisttpll
fwait
mov
fsave
imul
fnstenv
fwait
cmp
dec
jl
out
jb
mov
xchg
push
mov
sub
pushf
jge
mov
out
cmp
mov
dec
dec
dec
pop
mov
sahf
jle
mov
mov
call
rcrl
aam
xor
repz
jb
pop
adc
push
cwtl
mov
mov
inc
and
repnz
out
jecxz
sahf
sub
pop
sub
call
pop
and
leave
ljmp
shlb
sub
jne
lret
scas
push
clc
inc
cmpsl
fildl
aas
push
adc
jns
fcom
mov
js
xor
ljmp
push
xor
addr16
push
and
test
sub
push
xor
mov
add
jns
mov
mov
mov
std
fisttpll
sbb
pop
jno
cmp
and
mov
pop
iret
jnp
in
into
dec
inc
push
mov
mov
mov
jns
dec
xor
sub
mov
in
orb
or
pop
nop
fidivl
mov
dec
mov
adc
push
sbb
xor
push
cmpsl
mov
insl
loope
pop
shrb
std
sbb
add
fistl
out
test
jae
loope
fwait
mov
imul
std
popf
add
push
lahf
and
mov
pop
xchg
aad
xor
ds
cmp
lret
inc
movsl
shll
fdivrl
bound
adc
xorl
inc
sbb
rep
cli
push
mull
cs
mov
lret
cmp
enter
fiaddl
jo
mov
fmuls
mov
loop,pt
xorb
xchg
xor
out
repnz
mov
jle
jbe
xor
mov
dec
push
pop
imul
mov
inc
aad
dec
dec
fwait
pop
and
dec
cld
hlt
mov
pop
rcrb
aad
sbb
push
inc
pop
mov
fsubp
jbe
sub
adc
push
in
stc
hlt
jecxz
cmp
jo
jae
loope
cmpsb
clc
imul
mov
imul
es
xchg
sbb
movsb
mov
adc
fwait
xor
or
orl
mov
bound
arpl
inc
push
lahf
rolb
sub
jb
xrstor
mov
and
test
loop
loope
loope
mov
mov
sbbl
fcoml
adc
cmpsb
int3
mov
push
or
sub
out
loopne
je
imul
dec
setnp
ljmp
sub
outsb
mov
xor
inc
shll
mov
lret
mov
pop
cltd
sub
adc
cmc
and
ljmp
jno
outsl
fisubs
cmp
ja
shrl
in
shlb
adc
and
inc
cs
push
mov
xorb
int3
loopne
mov
inc
mov
push
ret
pop
fwait
stc
jnp
inc
cli
add
and
fsts
daa
sarb
xchg
mov
aad
leave
pop
push
mov
pop
mov
pop
dec
push
outsl
cmp
jne
xchg
push
cmp
pop
ds
push
jg
pop
cmpsb
adc
dec
loop
repz
fs
jae
aam
add
jl
sub
stos
push
xchg
enter
mov
sti
push
add
into
fstpt
in
mov
or
out
inc
lret
adc
sub
in
pop
ja
mov
lcall
out
or
add
xor
add
lds
jp
jbe
pop
cli
dec
pop
mov
std
icebp
loope
shll
push
popf
enter
jle
adc
cld
mov
pop
test
cmp
jge
lock
cmpl
ljmp
ja
xor
or
lods
or
jbe
fidivrs
or
imul
or
cmp
popa
sub
popf
mov
sub
je
rcrb
mov
test
xor
repnz
daa
testl
insl
mov
pop
leave
je
mov
out
mov
leave
push
aaa
ds
push
ret
notl
push
test
dec
and
outsb
dec
mov
pop
into
outsb
insl
in
inc
inc
xor
and
and
and
sbb
inc
loope
or
mov
lahf
xchg
dec
sbbb
ljmp
jl
stc
scas
popf
sbb
mov
pusha
push
ss
cwtl
mov
adc
loope
arpl
rorl
sbb
adc
dec
push
sbb
pop
jne
lcall
mov
sub
mov
sbb
stc
std
and
cmpsb
sbb
ljmp
fs
loop
lea
aam
add
xchg
out
lods
es
jb
cmp
and
incb
stos
in
das
xor
mov
mov
mov
out
das
pop
cmpb
cmp
xor
mov
in
fldenv
sub
jns
sbb
pop
sub
movsl
out
or
or
add
jbe
nop
test
mov
daa
rorb
nop
sub
mov
mov
inc
mov
inc
and
jo
sub
inc
dec
cs
cwtl
popf
mov
adc
imul
xchg
mov
add
or
sub
dec
mov
aas
and
mov
add
fs
lret
lds
or
inc
and
es
pusha
sub
idivb
sub
out
jb
mov
dec
mov
getsec
test
nop
push
xor
add
dec
inc
xchg
adc
cmp
push
pop
inc
dec
sub
rorb
xor
das
or
mov
add
nop
or
add
jne
add
or
into
xchg
nop
movsb
adc
negl
scas
fsubs
scas
pop
gs
fwait
pop
ljmp
clc
and
push
mov
xchg
mov
out
add
scas
cmc
push
push
cmp
mov
pop
jg
xchg
and
imul
inc
gs
sbb
das
push
fdivr
xchg
pcmpgtw
dec
inc
sbb
xor
mov
dec
jns
sbb
jg
adc
dec
dec
std
popa
cld
cmp
into
in
iret
rorb
sbb
jecxz
sti
mov
ret
xor
mov
das
and
mov
mov
in
jg
dec
stos
out
mov
mov
outsb
inc
xchg
repz
mov
ret
inc
mov
mov
into
mov
jecxz
in
scas
je
rclb
fcomps
cmc
sahf
inc
test
or
adc
pop
in
daa
mov
mov
inc
sub
lods
pop
std
aam
xchg
pop
mov
cmp
js
cmpsl
push
ljmp
jmp
outsb
adc
mov
shll
xor
sub
pop
lcall
pusha
fstpt
roll
in
mov
cmpsb
jmp
lea
es
xchg
pop
std
adc
test
push
xor
add
mov
call
adc
insl
push
aam
aad
lds
xchg
jmp
fucomp
clc
test
out
mov
dec
inc
mov
add
and
or
dec
xchg
stos
or
inc
inc
aad
in
sub
stos
mov
orb
push
cmp
adc
adc
enter
enterw
iret
ja
xor
mov
mov
push
lea
jbe
jge
out
sub
ljmp
inc
inc
push
fiadds
dec
addr16
jle
mov
imul
inc
jb
push
and
mov
testb
insb
push
sub
fucomi
xor
mov
mov
sub
cmp
push
and
mov
jae
subb
push
xchg
cmpsb
pop
icebp
mov
dec
iret
movsl
pop
movsb
push
mov
iret
sub
pop
xor
aad
out
es
fbstp
pop
inc
jp
mov
stos
test
dec
inc
pop
sub
pop
push
pop
jmp
movsb
mov
ss
or
push
out
scas
aad
repz
inc
or
stos
or
pusha
or
push
inc
add
aas
or
add
cmc
xchg
cmp
push
std
bound
int3
out
pop
xchg
dec
iret
gs
fwait
or
std
add
jne
andb
add
hlt
fiadds
mull
pop
push
pusha
add
test
enter
popa
int3
stc
mov
aas
rcr
jp
jmp
cmpsl
gs
sahf
push
xor
push
cmp
sbb
pop
xor
pop
adc
pop
add
jae
or
or
push
lods
add
rorl
sbb
push
mov
sbb
fcmovbe
dec
dec
inc
dec
loope
jb
fsubs
cld
flds
sbb
cmp
shlb
mov
out
outsb
sarl
sub
adc
sbb
inc
flds
filds
xchg
sar
cmp
popf
aas
and
inc
lds
gs
sahf
xchg
mov
mov
int3
clc
add
ret
ljmp
je
arpl
ret
in
test
ss
int3
and
aam
jno
jb
loope
stos
popl
jmp
or
xor
cmp
mov
cmp
out
mov
add
pop
pop
dec
xor
iret
in
fisubl
xchg
cs
mov
or
test
or
hlt
leave
push
cmp
ffreep
add
mov
sbb
les
pop
adc
aas
insl
mov
and
push
loope
daa
movsb
fstl
aam
jnp
jbe
push
sbbl
mov
push
sub
incl
ret
sbb
and
xor
inc
dec
xchg
sarw
jmp
mov
push
add
lret
lods
cld
outsl
jbe
fcomi
xchg
bound
pop
jmp
add
lods
dec
xchg
mov
movsb
mov
and
push
cld
jae
xor
jnp
ret
push
mov
jp
outsb
in
pusha
mov
jno
push
fistl
in
jge
mov
ss
dec
mov
and
or
pushf
mov
mov
mov
inc
repnz
cmp
fcoml
stc
push
push
push
inc
jae
pop
sbb
xor
jmp
jmp
sub
jle
pop
pop
je,pt
sbb
loope
sbb
repnz
push
mov
js
cli
stc
xor
test
stc
xor
imul
dec
ret
fisttpll
jbe
mov
and
fisubs
push
add
arpl
imul
add
xor
lock
stos
rorl
out
ret
inc
out
call
aaa
les
jns
test
mov
lcall
jle
cwtl
mov
jns
fiaddl
lea
sbb
sbb
insl
aaa
std
inc
pop
pusha
and
and
adc
inc
jno
adc
fldcw
cmp
in
ja
inc
xchg
push
decb
sbb
fwait
xchg
cmp
jle
imul
mov
and
xchg
mov
mov
mov
loop
sbb
cmpsl
call
adc
or
mov
cmpsb
fwait
mov
and
inc
push
cmp
sti
sbb
pop
in
adc
jnp
adc
insl
loope
and
push
mov
push
lds
daa
push
dec
dec
cmp
and
aaa
loop
shlb
lds
lahf
xchg
loop
jge
add
ds
push
sarl
fbstp
or
cmp
adc
loop
in
ss
inc
rcll
mov
jns
xchg
lret
add
repz
sbb
inc
loope
xchg
ja
pop
rclb
push
popf
es
repz
fnstenv
ds
lods
rolb
xchg
dec
enter
jno
fstpl
sbb
inc
loop
outsb
popf
aas
lahf
std
sbb
and
iret
loop
mov
mov
test
mov
lea
pop
sub
and
mov
push
outsb
out
mov
aas
push
test
jne
repnz
scas
push
mov
rcl
and
leave
push
pop
jo
cmp
out
push
cld
add
add
add
xchg
ret
nop
jmp
imul
call
inc
outsb
add
loop
cld
adc
lea
cmc
and
xchg
sub
adc
outsb
add
xor
pop
dec
popa
sbb
push
mov
and
or
pop
push
in
jmp
dec
inc
or
leave
popa
movsb
jnp
lret
divb
repnz
pop
pushf
inc
les
jo
iret
cmp
outsl
mov
lcall
xchg
xor
adc
mov
cmp
aam
fisttps
ja
mov
out
adc
xor
fs
mov
movsl
out
fs
sbb
incl
mov
mov
lret
movsb
cld
icebp
jbe
test
out
stos
jae
jmp
call
xchg
out
lods
and
dec
cmc
mov
mov
push
mov
adc
mov
int3
out
xchg
adc
and
test
pop
popf
loope
sahf
inc
mov
xchg
cmc
mov
ds
leave
cmpsl
dec
shrl
fimuls
push
jp
add
add
incl
sbb
sbb
clc
xchg
test
xor
stos
inc
jp
lea
dec
adc
jge
out
jle
adc
sub
mov
pop
rcll
leave
pop
and
data16
sbbl
push
aam
xchg
pusha
xor
pop
pop
adc
movsl
pop
popf
mov
jb
inc
stc
loope
cld
lock
jns
cld
add
mov
pop
sub
pop
cmp
cs
jp
shrb
les
lds
mov
cmp
jge
sbb
leave
push
arpl
pop
ljmp
jge
subb
jg
cld
adc
loopne
push
mov
mov
ret
mov
mov
loope
addr16
xor
xor
test
loopne
xchg
or
iret
jae
pop
mov
dec
jne
je
sahf
scas
or
js
push
jmp
or
pop
in
bound
mov
repz
adc
add
fdivrp
outsl
dec
xlat
cmc
jbe
stos
sub
js
dec
or
ljmp
mov
push
xchg
lret
pop
movsb
fbld
mov
xchg
push
stc
push
mov
add
movsl
and
pop
test
fsubl
inc
jb
xor
test
xchg
fucomi
loopne
sub
sti
ljmp
dec
sub
lret
and
mov
lahf
repz
lods
add
sti
aad
mov
lods
inc
repnz
dec
fbstp
jns
inc
mov
jl
jnp
repnz
pusha
mov
jno
movsl
xor
mov
dec
out
xor
lds
mov
push
loope
and
inc
inc
scas
shl
inc
sub
cmpsl
fs
repnz
cmp
sbb
pop
in
and
xlat
and
mov
and
inc
sub
push
push
in
and
std
dec
pop
push
jae
lcall
mov
leave
flds
outsl
fidivs
out
enter
enter
mov
dec
xchg
add
in
push
adc
cli
inc
sub
add
xor
testl
mov
arpl
xor
xor
das
test
and
adc
xchg
das
cwtl
add
and
pop
push
xor
push
cld
gs
mov
imul
das
lret
xchg
sti
mov
stos
xchg
imul
jge
dec
lea
sbb
filds
scas
mov
test
insl
test
imul
sahf
bound
mov
stc
cmpsl
ret
sar
jo
dec
cltd
push
jle
adc
pop
sub
adc
dec
out
popf
adc
inc
push
mov
jle
push
shrb
adc
mov
and
enter
jge
rolb
shl
scas
dec
lods
stos
stos
hlt
push
add
aaa
push
xlat
ret
lods
popf
pop
inc
jo
lahf
adc
mov
outsl
pop
jo
lods
xor
xchg
sbb
mov
sub
outsl
aas
ret
adcb
jnp
ss
jmp
sub
int
push
stc
jecxz
lock
loopne
sti
add
ret
and
das
ret
in
sti
subl
pop
daa
ja
mov
and
lret
adc
mov
hlt
push
xchg
cli
es
or
mov
push
push
out
cli
push
flds
ret
cmpsb
mov
sub
aad
out
mov
shlb
mov
jns
and
fcompl
mov
fwait
xchg
cmp
dec
jb
imul
cmpsb
pop
in
rolb
nop
cmpsl
loop
stc
inc
stos
les
out
mov
mov
sub
jmp
lahf
mov
pop
or
mov
pop
lcall
push
stc
mov
push
outsl
iret
scas
mov
push
mov
into
scas
inc
cli
sub
adc
rcrl
mov
out
cmp
adc
out
push
xchg
test
add
jecxz
and
clc
js
or
lds
mov
sbb
dec
int3
aas
and
xchg
sahf
lahf
jns
push
in
mov
dec
insb
jnp
jbe
jp
clc
loope
lods
sarb
jecxz
mov
lret
in
or
xor
stos
scas
or
mov
in
mov
inc
int3
xchg
mov
push
in
xchg
into
mov
sbb
dec
xor
out
sub
xor
shlb
movsl
push
pop
adc
sub
mov
nop
stos
and
add
pusha
push
outsb
xlat
imul
out
movsl
movsl
out
xor
iret
mov
mov
pop
cwtl
mov
repnz
inc
divb
mov
mov
xor
jmp
xor
fsts
mov
mov
in
test
push
lods
fwait
les
repnz
sahf
mov
outsb
ret
test
dec
hlt
and
add
xor
xchg
mov
into
inc
cmp
jmp
mov
push
cltd
adc
mov
jb
sti
inc
inc
jns
pop
test
push
aas
lret
out
cmp
mov
lods
mov
xor
xchg
in
jmp
out
sub
repz
xchg
mov
sbb
out
ja
aaa
ja
test
mov
pop
outsl
rolb
pop
scas
mov
js
add
clc
jle
das
sti
adc
xor
fisttpl
lret
xchg
adcb
mov
insl
int
sti
fistpl
push
sbb
cmp
mov
ficompl
pusha
loop
inc
mov
lock
or
push
pusha
xorl
ljmp
sub
int
sub
and
mov
adcl
test
push
cmp
push
and
lcall
aas
jge
cmpsb
xchg
in
add
mov
jl
neg
movl
mov
xchg
insb
cltd
lret
ret
pop
aaa
add
pop
loope
push
lret
inc
repz
adc
dec
jmp
or
fsubl
js
dec
sbb
enter
gs
jp
sbb
ja
je
roll
ficoml
mov
sti
aas
xor
incl
lcall
sub
cmp
lret
aad
decl
adc
or
ljmp
or
test
call
mov
fstl
sbb
movsl
in
ljmp
rorl
push
pop
adc
add
mov
popf
in
jne
xor
scas
xor
jp
jecxz
test
sub
or
inc
push
repnz
cmpsl
mov
clc
xor
mov
xor
outsl
xchg
leave
xor
lods
xchg
dec
push
add
sahf
mov
or
add
sti
xchg
mov
loopne
push
mov
dec
push
jmp
adc
adc
test
mulb
adc
ds
or
fwait
or
dec
lret
dec
jmp
dec
les
imul
jmp
lods
outsl
testb
and
popf
sub
push
scas
in
stc
xchg
pusha
mov
std
pop
iret
dec
arpl
dec
xlat
arpl
pop
sarl
dec
shl
inc
aas
jb
jae
sbb
add
xchg
imul
xchg
lods
gs
or
add
and
add
jmp
iret
call
push
jae
inc
popa
mov
leave
add
xorb
inc
and
into
hlt
mov
adc
imul
pop
sbb
shlb
mov
rcl
sbb
adc
jno
inc
cmp
sub
fdivl
in
loope
icebp
mov
mov
xor
adc
jno
inc
cmp
sub
fdivl
in
loope
icebp
mov
mov
xor
adc
sbb
or
cmp
mov
cmp
icebp
mov
mov
xor
adc
sbb
mov
push
shll
cld
xchg
fwait
xchg
adc
jae
inc
cs
das
inc
aas
scas
setg
fcmovnu
adc
scas
aas
mov
or
fisttps
dec
das
mov
pop
outsl
jg
dec
fistps
mov
aas
xchg
pxor
mov
cmpsb
es
pop
xchg
xchg
jbe
notl
pop
aad
fcompl
out
ds
add
mov
imul
inc
cwtl
push
sub
pop
out
push
pop
mov
shr
pop
mov
adc
push
lret
mov
popa
movswl
out
cmp
pop
and
rolb
sub
rcrb
test
lahf
and
mov
adc
iret
mov
das
scas
lahf
cmp
mov
pop
xor
mov
lock
nop
inc
aad
and
andb
nop
fbld
add
jns
mov
movhps
jmp
xor
mov
mov
dec
dec
lahf
loopne
nop
lds
mov
xor
repnz
pop
stos
sub
sbb
mov
es
js
outsl
out
dec
movb
daa
cmpsl
aaa
xchg
push
xchg
mull
js
pop
fildll
inc
ficompl
push
imul
mov
mov
cld
dec
sti
pusha
out
adc
and
pop
scas
pusha
out
outsl
mov
mov
dec
mov
fimull
imul
out
or
mov
lret
ja
daa
xchg
jg
dec
fistps
scas
aas
mov
pxor
outsl
iret
pop
fisttps
mov
pop
outsl
jg
dec
fistps
scas
aas
mov
pxor
outsl
iret
pop
fisttps
mov
insb
pushf
add
sbb
daa
mov
addb
add
mov
dec
mov
shl
cwtl
mov
icebp
aad
addl
mov
addb
sahf
iret
jl
test
loope
mov
pop
shrb
subl
movsl
loop
inc
xor
sub
jae
in
push
hlt
cmpsl
mov
roll
enter
pop
bound
and
mov
jno
jns
insl
scas
mov
into
or
inc
push
jl
sub
jno
xchg
mov
sbb
jno
sub
dec
arpl
jl
je
lret
add
shrl
xchg
mov
and
dec
call
mov
mov
bnd
jmp
mov
and
mov
and
push
out
push
add
fisubrs
rorb
mov
in
aaa
cwtl
int
push
aaa
adc
sbb
and
adc
out
ja
sbb
and
out
fucomi
addb
xchg
sarb
pop
and
mov
mov
push
fbstp
nop
lea
mov
lods
jb
cmp
jl
mov
jl
icebp
dec
lahf
lcall
dec
mov
xlat
mov
push
adc
mov
outsb
mov
cmp
es
push
outsl
lock
add
imul
inc
xor
frstor
into
cmp
adc
xchg
xchg
jo
stos
mov
xor
sub
repnz
push
or
ss
in
stos
int
pop
fcompl
jns
dec
jle
push
or
hlt
mov
cwtl
cpuid
push
or
rorl
jmp
push
dec
push
scas
and
pop
std
mov
int3
arpl
and
flds
and
lcall
push
xchg
ficoms
mov
test
fwait
push
xor
mov
add
lahf
loopne
sahf
xor
jne
ficoml
inc
fs
xor
sub
inc
movsb
into
mov
or
cmpb
cmp
or
jbe
or
mov
stc
lods
jle
popf
fistpl
and
mov
inc
jne
mov
test
pop
xchg
adc
dec
in
sahf
pop
jb
repnz
pusha
mov
mov
xchg
in
dec
shrb
xor
add
xchg
add
jecxz
or
repz
jecxz
das
adc
mov
fdivl
rclb
fcompl
ret
cltd
cmp
or
adcl
sbb
or
xorl
mov
sub
xor
mov
xchg
mov
mov
lcall
jg
popf
cmpsb
mov
nop
jmp
xchg
jle
dec
aaa
lock
dec
ficompl
push
push
dec
addb
pop
out
fwait
arpl
jno
mov
hlt
pop
das
mov
push
jp
dec
sahf
mov
xchg
fs
cmp
push
ficompl
jno
lea
cmpsb
ja
rcrb
mov
or
push
out
adc
cmc
mov
mov
fimuls
jmp
mov
sti
mov
test
cmp
ret
enter
jecxz
jae
test
fildll
idivl
sub
sbb
push
femms
pop
inc
mov
pusha
insb
lods
mov
cwtl
lret
je
mov
lods
rolb
sbb
push
mov
daa
or
adc
inc
ss
mov
xchg
push
or
lods
movsb
es
movsb
dec
adc
popf
jb
and
fdivp
sub
lahf
mov
movsb
add
scas
mov
pop
and
into
ret
pushf
lods
dec
and
cld
into
out
fwait
out
test
xchg
icebp
pop
mov
gs
imul
cmp
push
and
mov
call
adcb
andb
mov
je
hlt
mov
test
xchg
bound
insb
sub
push
add
enter
or
movl
add
int3
add
stos
mov
sub
ljmp
pop
jp
gs
mov
sbb
mov
in
loope
insb
push
ss
and
outsb
popf
movsbl
push
ret
mov
jl
push
out
ror
jmp
data16
adc
and
push
push
aam
pop
arpl
xor
out
rcll
adc
fisttpl
mov
ficoms
imul
jns
adcl
shrl
push
jns
cmp
dec
xchg
adc
out
out
aad
sub
cmp
test
xor
sub
rclb
inc
mov
mov
stc
movsl
cmc
add
push
das
sub
push
xor
xchg
pop
mov
fistpll
lea
push
nop
jae
loop
and
mov
mov
pop
pushf
faddl
mov
daa
dec
pop
xchg
mov
lods
lcall
mov
out
mov
inc
lcall
dec
push
mov
lret
insb
lret
subl
movsl
int3
dec
jnp
sbb
pop
jae
mov
sti
adc
cmp
popa
sub
push
lea
sub
and
pop
mov
mov
xchg
jb
adc
inc
dec
pop
cld
pop
in
test
mov
dec
dec
pop
clc
cli
movsl
jne
cmpl
sub
jp
dec
mov
addb
mov
sub
push
call
jb
mov
ja
sbb
push
add
xor
pop
data16
inc
sbb
mov
ja
xlat
stos
and
mov
ds
nop
jg
lods
push
jb
data16
add
mov
cld
leave
enter
orb
jmp
rorb
aam
sub
jmp
xchg
jmp
ret
jmp
jns
cli
jne
inc
pop
inc
daa
mov
xchg
repz
or
fmuls
scas
outsb
outsb
cmp
int
bound
dec
xor
in
mov
pop
jge
les
inc
addb
out
pop
mov
adc
push
std
stos
mov
div
inc
inc
push
aas
sub
sbb
add
push
xchg
call
sbb
jge
jmp
dec
mov
insb
cmp
dec
js
lret
pop
push
movsb
mov
dec
movsl
jns
add
sbb
inc
mov
sbb
test
xchg
jnp
xchg
mov
dec
aaa
dec
loopne
jnp
lock
sbb
lret
add
lock
in
dec
xor
mov
xchg
mov
lea
pop
fs
sub
outsb
loope
pop
pop
jmp
jno
adc
push
xor
in
or
int
inc
push
fucom
test
xlat
dec
sbb
out
mov
shrl
lret
jnp
add
cld
outsb
pop
in
xor
sub
stos
xor
mov
inc
pop
loope
adc
and
invd
test
push
rorl
test
or
fcom
inc
ret
adc
daa
adc
xor
fstpl
xchg
xlat
aad
mov
cmc
movsb
mov
mov
mov
je
mov
inc
negl
sbb
or
xor
hlt
scas
rorl
aad
jl
cmp
adc
or
lods
push
inc
cmpsl
testl
sbb
pop
cmc
imul
mov
popa
fwait
jp
mov
mov
mov
xchg
xchg
out
pop
sbb
sub
lgs
xchg
pushf
cltd
arpl
xchg
push
adc
sti
in
out
jp
adc
popf
jbe
insl
dec
and
xlat
mov
jecxz
sbb
lods
sbb
push
pop
inc
mov
sbb
outsb
push
lahf
or
fistl
nop
in
dec
ja
scas
mov
or
insb
jno
jge
cmp
mov
push
rclb
and
cmp
out
sub
imul
pusha
sti
pop
daa
cltd
and
inc
sub
testl
js
jmp
add
mov
jmp
testl
xlat
adc
adc
insl
jbe
dec
jg
in
daa
jo
ja
xchg
xor
or
mov
ja
dec
enter
inc
sub
cwtd
fdivr
leave
insb
xchg
mov
test
sub
insb
mov
jnp
ss
lods
lods
andb
daa
inc
mov
out
incl
push
aad
bound
in
add
xchg
jae
sbb
push
popa
stos
dec
shll
jae
add
mov
jl
shll
js
leave
pop
in
sub
adc
and
sbb
clc
bound
adc
sbb
cwtl
repz
cmp
in
insl
ficomps
adc
arpl
ss
sbb
xor
lea
pop
cmc
cld
xor
push
pop
enter
dec
sub
push
push
dec
sub
adc
mov
cmp
fmull
jns
test
call
dec
je
cmp
mov
pop
and
jns
fmuls
and
ljmp
push
imul
sub
popa
int
push
cli
dec
push
scas
inc
mov
pusha
add
into
xorb
dec
aam
lea
pushf
outsb
adcl
inc
vpcmpgtb
sbb
jge
testl
jne
xlat
mov
lahf
adc
dec
rcr
stos
movaps
cmp
fildll
adc
pusha
dec
outsl
test
ljmp
lock
jmp
push
adc
jnp
mov
push
dec
jne
sub
dec
xor
push
out
icebp
inc
imul
fcoms
inc
inc
cli
xor
mov
lds
or
add
fistps
jle
xor
inc
fadds
xor
push
mov
in
sub
push
sub
jg
arpl
outsb
iret
xor
and
and
xchg
jle
insl
fwait
push
out
data16
decb
fstpt
adc
shlb
jo
sub
and
jo
mov
in
outsl
stos
push
aam
rcrl
daa
mov
mov
shll
add
sub
sbb
popf
outsb
imul
mov
cmp
imul
into
cmp
xlat
adc
add
ret
dec
sti
jp
sar
int
mov
insb
add
add
adc
ficompl
mov
lea
or
adc
decl
mov
movsl
sub
cmc
cmpsl
cmpsb
ficomps
cld
mov
lock
jo
mov
mov
leave
enter
push
sarl
lahf
push
pop
popf
int3
setb
subb
add
shl
ficompl
jae
dec
nop
sub
sbb
fs
out
aam
repz
sbb
push
shl
xchg
adc
loop
cs
lcall
ret
insb
mov
out
ss
fwait
out
jp
ss
int
aam
xor
push
dec
hlt
mov
dec
cmp
jo
imul
xchg
xchg
mov
dec
xchg
sti
adc
inc
sbb
popa
loop
js
sete
movsb
xor
and
sbb
rclb
mov
scas
stos
repz
das
mov
push
ret
pop
push
mov
sbb
dec
fwait
std
xor
dec
mov
xchg
in
ss
in
lds
test
inc
mov
fucom
cmpsb
xor
pop
test
scas
inc
lods
pop
sahf
leave
loop
cli
je
js
mov
repz
in
xorl
mov
out
mov
or
rclb
mov
aam
sbb
cmovne
xor
mov
mov
loopne
rcl
adc
add
cmp
sub
add
jnp
cs
lahf
mov
push
add
pop
das
lock
jmp
and
mov
mov
jle
inc
cmp
sub
mov
repnz
leave
mov
lret
pop
mov
leave
lcall
je
mov
popf
add
mov
jb
mov
sbb
fcom
int3
sub
lahf
cmp
loope
loope
scas
hlt
nop
add
inc
xor
fisubrl
lcall
outsb
enter
lock
cmp
out
imulb
cmp
pop
jbe
jecxz
shlb
mov
mov
mov
sub
xor
lret
icebp
dec
jmp
adc
xor
xor
xor
push
inc
lahf
pusha
dec
cmp
mov
ss
dec
pop
inc
imul
push
xchg
call
push
adc
cmpsb
push
adc
test
or
arpl
mov
ljmp
sti
filds
mov
lds
sub
je
push
inc
jmp
jo
out
lahf
cltd
sbb
hlt
jecxz
inc
decb
mov
movsl
push
loope
cmp
jl
and
mov
in
push
test
or
pop
xor
pop
jmp
arpl
inc
loope
mov
gs
js
mov
adc
sub
fstpl
inc
lret
cmpsb
imul
in
in
or
pop
cmp
ss
in
lret
sbb
mov
stc
icebp
add
jl
popl
xchg
vmulss
lret
fwait
cwtl
sub
xchg
ljmp
and
cmp
pop
movsb
push
adcb
das
or
and
scas
mov
in
daa
jecxz
lea
mov
into
dec
lock
push
sub
fs
xchg
cmp
loope
mov
jl
sbb
xor
push
jae
inc
mov
pop
repz
adc
mov
stc
cld
adc
arpl
shll
jb
cmp
adc
jge
lea
mov
or
mov
lds
fwait
lret
mov
jo
lds
xor
mov
loop
mov
insb
test
xor
mov
psubusw
test
mov
or
stos
xacquire
int3
fcompl
or
jo
push
je
cmp
js
shr
mov
fsubs
cmp
pushf
sbb
push
xchg
mov
xchg
lret
adc
out
mov
inc
xchg
scas
dec
push
cli
pop
repz
lock
pushf
fnsave
push
ficompl
lret
mov
sub
pop
mov
aaa
jl
mov
jne
out
cld
aad
and
ficoms
cmova
pop
jmp
pusha
test
lret
lea
rcrl
insl
or
inc
mov
je
push
or
fildll
lods
aaa
in
and
scas
xchg
mov
lea
cwtl
sti
out
mov
sub
loopne
hlt
lahf
int
xor
and
mov
fmuls
cmpsl
adc
dec
fadd
ds
mov
dec
test
xchg
and
aad
mov
mov
dec
cs
push
push
sub
mov
xor
dec
mov
pop
or
or
cmp
lock
hlt
dec
inc
test
sub
jl
xchg
notb
daa
mov
cmc
sbb
shlb
das
int
or
pop
pop
xchg
inc
rclb
outsl
fs
insl
mov
addr16
xchg
in
addb
jo
pop
mov
jecxz
fadd
in
data16
jp
jbe
xor
hlt
pop
xorl
mov
fstpt
mov
add
jl
jnp
dec
outsb
aaa
bound
icebp
les
jne
aaa
shll
cmc
out
mov
and
mov
sar
jmp
mov
lods
sbb
sti
add
xchg
and
test
mov
cs
pop
fdivs
jne
repnz
xor
mov
pop
ja
in
lods
xor
daa
out
ret
out
sub
push
dec
jo
sbb
sub
pop
cmp
and
xchg
es
push
insb
mov
mov
out
stos
orl
in
fnstsw
cmp
fs
test
or
ljmp
cmpsl
pusha
stos
pop
dec
fstl
adc
jmp
outsl
in
inc
xor
out
mov
dec
jl
cltd
mov
lcall
test
out
sub
fstpt
cmp
es
adc
mov
gs
test
lods
mov
lahf
ficoml
enter
out
xchg
sbb
lret
ja
pushw
jmp
call
lods
addl
test
add
pop
in
pop
call
fcmovbe
jl
gs
mul
into
rorb
xor
test
sub
inc
jb
push
mov
rorl
xor
mov
addr16
cmpsb
pop
mov
loopne
fidivs
mov
xchg
jbe
jb
cwtl
mov
pop
cmpsl
xchg
xor
outsl
push
xchg
xchg
cmpsb
push
int
mov
movsl
lods
mov
xchg
mov
mov
icebp
dec
cli
mov
adc
xor
cmp
negb
push
push
data16
in
std
arpl
scas
jbe
sub
in
sub
mov
sti
fstpl
sbb
push
stos
repnz
and
mov
in
popf
int
pop
sub
push
out
jno
push
mov
lods
ret
mov
add
movsl
jg
pop
jl
arpl
or
and
test
jle
loop
mov
mov
sbb
adc
out
pop
cmpsl
xchg
inc
add
sbb
lods
push
fidivrl
call
jnp
add
fisttpl
int
int
fildll
mov
dec
cmp
sbb
cmp
pop
cmp
outsb
pusha
das
repz
fwait
mov
sub
inc
pop
mov
jo
pop
rcrl
add
ljmp
sbb
mov
xorl
leave
int
ss
cmpsb
mov
adc
jp
jo
test
lahf
js
mov
add
js
jno
fisubs
pop
fucomip
fs
jnp
mov
ljmp
std
push
loope
xlat
popf
inc
subl
fcom
loope
std
clc
daa
mov
sbb
mov
pop
sti
jg
scas
and
ja
pop
and
mov
pop
inc
cli
in
xchg
outsb
inc
sub
xchg
lahf
push
or
cmp
inc
ffreep
fdivl
sub
jg
in
dec
xlat
stos
out
sti
fs
test
mov
jecxz
jbe
mov
fdivrl
jo
inc
ss
mov
popa
push
lret
sahf
adc
testl
sub
cwtl
aas
ss
mov
mov
dec
sbb
jg
push
sbb
push
ret
repz
dec
xor
jge
cli
dec
pop
ret
les
insl
insb
pop
sub
adc
lcall
jae
lret
scas
cmp
push
movsl
test
jp
mov
test
cmp
ret
popa
pop
jmp
adc
into
hlt
mov
outsb
pop
rclb
adc
in
into
cmpsb
test
sub
and
mov
mov
add
sub
imul
ds
int3
inc
insb
cmp
fwait
mov
mov
adc
test
shlb
loopne
inc
fs
loopne
sub
mov
stos
loope
ja
mov
mov
jne
xlat
xor
dec
mov
mov
loop
daa
int
dec
or
int3
add
aam
push
dec
lret
dec
das
mov
sub
ja
popa
hlt
cltd
lret
jge
push
repz
and
pop
mov
mov
jmp
cld
xor
mov
dec
add
and
jmp
ret
test
int
xor
lret
cli
mov
xor
js
sbb
outsb
sub
xchg
dec
loop
in
dec
movsb
add
sub
sbb
in
lock
sub
or
or
xchg
jnp
inc
aas
lret
dec
sub
pushf
fsts
adc
add
cmpsl
mov
movsb
mov
test
addl
ja
bound
and
fsubp
push
and
push
push
adc
jmp
movsl
mov
or
mov
mov
cltd
in
push
sub
lods
insl
cld
pushf
jl
push
cltd
fwait
cmp
daa
mov
pop
inc
jmp
adc
jp
stos
push
jo
icebp
ret
sub
inc
mov
xor
mov
cmp
ja
je
test
das
js
lea
xchg
imul
dec
push
cmp
js
aad
push
adcb
sbb
rcrl
inc
and
mov
scas
pop
dec
sahf
mov
aaa
adc
rorb
sbb
mov
ljmp
movsb
sub
cmp
xor
out
inc
out
xor
cwtl
leave
jne
shl
movsb
xor
scas
int3
add
sahf
sub
aam
add
xchg
adc
lahf
xor
fcoms
call
lret
sbb
je
push
es
jge
bound
imul
out
lcall
xchg
leave
jg
adc
cmp
mov
and
mov
push
mov
iret
call
dec
inc
mov
decb
dec
jo
and
pop
push
das
push
testl
outsl
jg
dec
fistps
scas
aas
mov
pxor
outsl
iret
pop
fisttps
mov
pop
outsl
jg
dec
fistps
scas
aas
mov
pxor
outsl
iret
pop
fisttps
mov
pop
outsl
jg
dec
fistps
scas
aas
mov
push
out
jg
outsl
iret
pop
fisttpll
mov
pop
insl
jg
iret
iret
push
aas
inc
test
divl
xor
jp
dec
lods
pop
mov
fs
std
ljmp
cmp
mov
jge
lea
dec
lods
pop
mov
or
sbb
ljmp
cmp
mov
lcall
lods
pop
mov
or
sbb
ljmp
cmp
lcall
hlt
jge
lea
ret
ss
jecxz
mov
add
loop
mov
sbb
mov
push
lret
movsl
inc
aad
cmp
hlt
jmp
mov
xor
cmp
sub
aad
dec
pop
das
shll
lods
inc
adc
lock
loop
in
sbb
cli
dec
popf
out
xchg
lcall
popa
pop
mov
bound
add
jg
xor
mov
push
daa
cli
mov
xchg
insl
lcall
int3
cmp
mov
pop
jle
icebp
lods
dec
dec
shlb
mov
xchg
sbb
inc
call
cwtl
sbb
xor
pop
aaa
lcall
jp
dec
lods
pop
mov
or
sbb
ljmp
cmp
mov
adc
loop
popf
and
xor
sub
sbb
lret
jnp
sub
cs
lea
lahf
das
lods
ss
sub
dec
std
jne
push
stos
cs
out
out
sub
and
int
fisttpll
in
sbb
ljmp
cmp
mov
jge
lea
dec
lods
pop
mov
or
sbb
ljmp
cmp
mov
jge
lea
xlat
pop
jne
aam
cmp
xchg
in
cmp
mov
clc
cs
xchg
cmp
inc
clc
sahf
aad
subb
ss
pop
xchg
sub
mov
cmp
pop
stos
or
mov
fwait
push
or
mov
andb
pop
push
test
mov
mov
jp
inc
mov
xchg
sarb
sub
add
mov
in
xor
out
jge
loop
lock
loope
jne
insb
xor
cmp
popa
jno
push
jecxz
jno
movsb
mov
push
mov
and
xchg
mov
pop
out
xchg
cmp
mov
cld
pop
add
aad
repnz
out
xor
movsl
pop
jecxz
in
loopne
int3
loop
sbbb
nop
cmp
aad
loope
xor
in
pusha
dec
jno
or
jo
dec
clc
insb
stos
rcll
inc
inc
aaa
lea
pop
jg
mov
imul
push
sti
pop
stos
leave
jno
xchg
loopne
mov
daa
or
lret
insb
dec
mov
jl
or
shl
test
divb
jne
sub
xor
lcall
fcmovu
or
add
add
dec
lds
jo
adc
cwtl
test
loop
push
das
mov
sbbl
fistpl
aad
mov
xchg
test
mov
fimuls
popf
test
das
add
sbb
dec
cmpsl
xchg
cld
push
leave
xor
dec
aam
gs
int3
ret
iret
rolb
adc
lock
in
aas
or
fists
loope
jg
rorl
jg
jl
iret
jbe
lcall
stc
cmp
aam
mov
hlt
pop
loope
frstor
and
xor
pop
jbe
cmpsb
cmp
mov
sub
dec
fisubrs
lcall
in
pop
pop
and
je
xor
push
ss
dec
or
hlt
in
cmpsl
pop
mov
lcall
insl
jb
fimuls
rcll
insb
adc
or
xor
testb
jb
lahf
jmp
jae
add
sub
pop
jno
repnz
dec
in
and
adc
stos
test
js
xor
jns
xor
push
fwait
ud2
add
mov
sbb
jp
mov
adc
adc
xor
stos
outsl
jno
push
mov
nop
adc
fistl
in
jecxz
pop
lret
cmp
icebp
inc
stc
mov
repz
gs
arpl
sub
scas
inc
xchg
adc
push
jle
lcall
pushf
stos
int3
mov
pop
out
out
in
mov
dec
jae
cli
pop
pop
in
push
stos
push
aam
cmp
inc
cmp
xchg
pop
pop
cli
adc
cmp
fmull
pop
insb
add
leave
jo
cli
pop
fwait
mov
in
scas
xchg
xchg
and
sahf
neg
jne
push
jnp
xor
int
mov
xor
xchg
cmp
add
adc
xor
dec
mov
jns
dec
cmpb
add
jne
mov
xor
jl
ret
add
adc
inc
push
test
out
jo
adc
xchg
and
jo
push
stc
imul
sbb
stc
add
lds
mov
ljmp
sbb
int3
arpl
das
jecxz
pop
movsl
pop
das
es
add
sbb
xchg
inc
add
mov
sbb
xlat
sub
jbe
decl
push
aaa
mov
jmp
cwtl
cmp
bnd
test
cld
adc
sub
lods
fmull
push
shlb
dec
pop
jbe
mov
and
xchg
out
sbb
mov
daa
inc
fistpl
dec
mov
hlt
fwait
jns
arpl
mov
pop
pop
psubusb
enter
std
or
jnp
sbb
lods
rcrb
sbb
xor
pop
lret
stos
mov
stos
outsl
imul
mov
cmp
cwtl
rorl
pop
aad
popa
add
pop
mov
repnz
xor
les
jmp
pushf
pop
test
fadd
sbb
icebp
adc
in
push
push
ret
push
mov
xchg
ss
jl
and
jo
pusha
jo
jae
sub
push
mov
outsb
xor
mov
lahf
or
xchg
jecxz
add
cmpsl
jno
insl
xchg
cltd
xor
and
imul
fidivrl
mov
xchg
mov
sbb
jne
push
shll
cmp
jns
js
pop
fdivrl
ja
xchg
sbbb
insl
sbb
cli
or
icebp
pop
popf
inc
lea
in
ljmp
ret
jp
mov
inc
mov
cmp
aas
lods
xchg
mov
clc
mov
or
out
rcr
pop
xchg
push
mov
ror
outsl
sarb
je
xchg
dec
insl
loop
add
sub
sub
pop
dec
inc
not
sub
jmp
add
into
jne
xchg
push
lret
inc
mov
or
or
enter
loop
inc
xchg
mov
insl
mov
hlt
jb
repz
inc
pop
je
iret
int3
pop
shll
hlt
movsb
xchg
mov
mov
cmpsl
mov
mov
sbb
dec
inc
push
dec
imul
xor
xchg
call
xchg
mov
sub
fnstenv
and
and
mov
jle
insl
xchg
xchg
inc
and
jecxz
mov
leave
dec
ds
dec
iret
bnd
das
mov
ret
xor
push
lock
popf
add
bound
jle
jne
iret
arpl
rclb
dec
xchg
adc
sbb
shll
add
lahf
pop
or
enter
adc
mul
dec
jb
or
add
inc
ljmp
ret
pop
mov
jecxz
adc
dec
loopne
pop
sub
or
pushf
dec
inc
cmp
sbb
add
mov
iret
adc
sub
adc
les
push
xor
int
mov
push
mov
dec
cwtl
out
idiv
jno
js
xchg
pop
cli
lods
stos
in
and
cmp
out
popa
int
outsb
mov
xor
lock
fldt
fcoml
xor
repnz
push
pushf
cmp
in
jno
xchg
mov
dec
push
les
mov
movsb
shll
sbb
insb
cwtl
scas
repnz
push
repz
lods
pop
pop
loopne
fwait
lods
adc
mov
cmp
inc
add
jae
ds
xorb
pop
pop
cs
jne
and
imul
in
rolb
fisubs
andl
add
sbbb
jne
dec
repnz
xor
pop
popf
stos
repnz
adc
cld
mov
sbb
out
inc
jae
lods
push
aaa
mov
lret
addr16
jmp
xor
cmp
or
jns
pop
push
jecxz
cmp
mov
pusha
aaa
sbb
movl
push
out
pop
test
pop
movsl
pop
iret
in
dec
cmc
les
loop
lds
aad
clc
into
fcompl
and
fstpl
push
add
push
jbe
andl
xor
pop
in
lret
adc
mov
in
push
sub
pop
mov
xlat
sbb
icebp
fsubrl
in
cmp
fsubs
insl
jp
jne
push
pop
add
pop
push
test
xchg
sbb
jg
rcll
jnp
dec
mov
dec
repz
mov
pop
jmp
xor
nop
ja
leave
popf
inc
imulb
cmp
adcl
fwait
adc
loopne
add
jge
icebp
cmpsb
mov
jp
dec
xor
pop
or
xchg
inc
aaa
imulb
mov
mov
push
adcl
lcall
or
jo
dec
jo
mov
mov
mov
fisubrs
jle
xor
popa
push
or
insl
es
rolb
pop
shll
dec
and
arpl
inc
inc
mov
js
push
lcall
ds
arpl
test
ret
pop
out
push
xchg
hlt
xlat
test
ss
add
mov
xor
mov
fldl
test
mov
lret
and
test
inc
cwtl
out
xchg
and
cmp
jae
test
mov
jle
sbb
lret
outsb
andb
rcll
addr16
mov
adc
jecxz
dec
mov
cltd
jnp
xchg
sti
ljmp
sti
xchg
imul
mov
sub
movsb
icebp
cmp
inc
aam
mov
gs
and
stc
xchg
ds
push
nop
aaa
aad
out
idiv
notl
jge
outsl
sbb
push
ss
jecxz
xchg
jo
out
mov
mov
and
fcoml
fcoml
fisttpl
jae
sbb
ss
mov
push
mov
lcall
pop
je
pushf
ret
inc
popf
mov
ss
repz
cmp
pop
les
mov
adc
insb
xorb
mov
or
xor
ror
jb
dec
jl
mov
ljmp
ret
add
and
test
imul
loop
mov
dec
outsb
test
jnp
sub
jb
push
add
sahf
mov
add
inc
mov
divb
jge
xor
cmp
mov
jle
lods
data16
add
shl
fildll
imul
jne
lods
mov
xchg
gs
sub
aad
mov
clc
mov
lret
sbb
push
jo
xlat
push
ficompl
shrl
je
xchg
xchg
xchg
adc
negl
mov
stos
mov
shlb
mov
mov
add
ja
sub
lods
test
and
add
mov
lea
dec
xchg
push
cmp
and
ret
sti
or
inc
mov
and
inc
or
in
je
xor
mov
fiaddl
fwait
inc
test
enter
inc
jle
add
jmp
stos
out
mov
mov
sbb
adc
int3
lahf
cmp
cs
insl
adc
adc
cltd
insb
dec
mul
dec
or
sbb
aad
mov
clc
and
mov
and
xchg
adc
add
sbb
inc
insb
fsubrs
inc
addb
in
loop
mov
cmc
push
loope
dec
rcrb
sub
sarb
lahf
mov
std
stc
or
int3
pop
data16
lods
inc
ret
les
outsl
bound
jmp
in
adc
sarl
or
lcall
cmpsl
xchg
push
push
jbe
add
dec
inc
cmpsb
es
jae
pop
faddp
or
cmp
cmpl
into
out
int3
inc
push
mov
jle
in
popa
mov
dec
leave
add
movsl
inc
jp
mov
xorb
ljmp
add
es
daa
pop
push
rep
mov
mov
imul
jmp
cmp
hlt
xor
mov
jecxz
pop
mov
adc
inc
mov
pop
repz
ds
add
cmc
push
xor
sarb
mov
push
imul
lret
jae
cmp
mov
jg
test
inc
mov
stc
outsl
or
in
mov
loope
fistpll
sbb
push
push
cwtl
pop
mov
push
jg
dec
push
fdivl
mov
decl
xor
lcall
cmc
push
dec
sbb
lret
add
or
fwait
call
xor
ja
outsb
push
lret
stc
outsl
dec
filds
sbb
pop
fcmovb
jle
cwtl
daa
int
popa
jns
std
or
xor
pop
aam
clc
push
lret
int3
adc
lds
cltd
xor
dec
fwait
hlt
mov
push
fwait
push
jne
jp
sbb
es
sbb
pusha
lret
test
dec
or
js
jo,pn
lods
cmpsb
lods
in
aam
dec
push
fwait
insl
loope
fnsave
stos
test
jmp
adc
xor
mov
addr16
decl
lock
mov
mov
sti
or
inc
mov
cmp
orl
cwtl
mov
add
cmp
push
jg
add
inc
mov
stos
lret
pop
pop
hlt
mov
jmp
inc
daa
test
sahf
scas
nop
mov
mov
roll
mov
inc
push
inc
outsl
int
cmp
inc
cmp
inc
dec
add
ret
daa
ja
mov
xorl
push
cmpsb
insl
cmp
packuswb
ficompl
add
fsubrs
and
test
fs
mov
andl
xchg
mov
cltd
mov
add
push
add
es
mov
mov
int3
fs
dec
lahf
popa
lods
sub
cmpsl
into
mov
and
in
fwait
pop
nop
aas
sar
decl
push
aam
loopne
mov
fcompl
pop
cmc
cmp
adc
mov
imul
add
fs
js
sbb
icebp
scas
and
jno
dec
and
lret
nop
daa
mov
mov
mov
pop
ficompl
addr16
push
mov
pop
gs
adc
pop
push
sbb
lea
cmp
sar
dec
push
or
pop
xor
mov
mov
arpl
imul
sbb
sahf
repz
cmp
adc
loop
shlb
int
xchg
push
decl
jno
sbb
pop
bound
hlt
push
test
test
cmp
mov
sub
mov
mov
lret
pop
fstps
sub
xchg
aas
cmp
pop
test
add
loope
imulb
push
in
inc
jb
xor
mov
push
jns
rcrb
sbb
jmp
fsubrl
inc
xchg
sarb
jne
sbb
cmp
arpl
xor
jle
jle
mov
dec
cmp
sbbl
push
sub
push
cmp
fistl
bound
aad
pop
xlat
lds
cmp
pusha
jb
stos
addl
aam
xor
out
bound
mov
jmp
movsb
int3
jbe
lock
dec
imul
and
sbb
xor
nopl
fimull
inc
push
sub
mov
jns
vandnps
lea
mov
mov
xchg
insb
pop
je
mov
aam
ljmp
sbb
in
out
xor
cmp
orl
inc
loope
pop
pop
jns
test
sub
dec
xor
insl
add
sarb
rcll
jno
push
xor
das
mov
js
inc
push
sarb
push
mov
cmc
sbb
jge
xchg
loop
add
pop
mov
lret
pop
cmp
repnz
jmp
insl
dec
jp
and
mov
data16
mov
xchg
lods
lahf
pop
icebp
pop
push
pop
mov
push
cli
add
jge
mov
into
enter
pop
lret
pop
xchg
sub
adc
mov
mov
repz
test
cmp
loope
jns
bound
mov
push
iret
cmpl
pushf
repz
xor
jp
xor
mov
sbb
int
adc
daa
cmpl
cmp
stc
xchg
or
jae
in
ficompl
xchg
imul
outsb
pushf
rol
or
adc
adc
cmc
jle
mov
cmpsl
lcall
test
push
pusha
cmpsl
push
dec
mov
jns
inc
inc
std
rolb
pop
cmp
adc
loopne
ret
iret
fldt
mov
sub
iret
push
test
bound
mov
imul
inc
xlat
sbb
add
in
sbb
stos
cmp
push
or
rol
cmp
mov
dec
adc
mov
ja
xchg
andb
adc
std
movsl
pop
daa
sbb
ljmp
outsl
cmp
inc
popf
clc
push
sbb
pusha
lret
adcb
and
sub
fisttps
mov
push
lea
adc
fsubs
fsubrp
mov
test
and
mov
in
imul
cwtl
xor
js
rorb
testl
test
repz
cli
inc
cmc
dec
adc
add
jmp
and
clc
inc
add
std
and
hlt
daa
loop
jae
adc
mov
mov
add
scas
sbb
shrb
inc
lea
enter
mov
pop
nop
push
jmp
mov
pushf
pushf
mov
push
notl
dec
loop
mov
add
hlt
fstps
jmp
jb
stos
sbb
lret
mov
mov
sbb
popa
inc
loop
shl
cmc
inc
pop
ja
stos
leave
jmp
ret
test
in
xor
ss
fwait
mov
pop
dec
push
and
out
outsb
rol
xchg
jl
and
and
orl
push
mov
add
aam
sahf
push
rclb
mull
in
stc
dec
or
je
cmc
outsb
aad
popa
push
imul
stos
mov
xlat
ficomps
fwait
leave
jns
inc
mov
jecxz
clc
test
xchg
adc
jge
jg
shl
mov
mov
and
pop
sub
or
xorb
out
movsl
bound
jle
cmp
pop
xor
sub
xchg
cmc
jge
stc
data16
imul
lret
add
pop
leave
mov
push
in
shll
movzwl
call
jg
nop
adc
push
dec
lea
jp
push
sbb
sbb
mov
pusha
lods
dec
jge
rdtsc
lods
mov
xchg
outsb
dec
outsl
xorb
es
mov
mov
ret
lea
icebp
add
cmpsl
movsl
lds
or
add
jns
sbb
mov
clc
inc
outsb
fstpt
test
cltd
jg
sub
xchg
ret
mov
mov
cmc
pusha
dec
dec
dec
xor
into
lcall
cli
stos
xchg
data16
in
jge
xor
in
lret
dec
imul
inc
and
es
xlat
ds
xchg
cmp
rcr
pusha
pop
sbb
les
faddl
jg
sti
sub
xchg
xchg
and
int3
nopl
xor
cmpsb
lcall
and
loop
imul
mov
in
ss
in
mov
aam
inc
subb
mov
mov
sti
xlat
stos
cld
or
pop
dec
sbb
dec
cs
out
pop
int
xlat
dec
inc
dec
leave
idivb
call
sbb
inc
xrstors
push
out
pop
outsl
dec
fldenv
jge,pt
pop
inc
mov
lock
fucom
nop
gs
xor
icebp
cmp
cmp
add
add
popf
popa
cmp
add
out
xchg
mov
rcl
ljmp
sub
pop
mov
mov
mov
or
push
push
insl
mov
rcrl
dec
fmuls
adc
fildll
test
hlt
push
xchg
sub
cmc
sbb
daa
jmp
push
jbe
jg
pusha
sarl
and
int
mov
and
imul
pusha
pop
mov
cs
daa
mov
repz
jae
dec
mov
cltd
cmpsl
or
xor
cmp
mov
cld
fisubs
fcomip
adc
mov
int
inc
insb
or
shll
insl
shlb
out
xchg
dec
mov
je
les
xor
add
lods
mov
inc
and
inc
test
pop
lock
jl
int
fcomps
mov
cs
jg
mov
stos
add
test
jns
adc
push
jns
test
and
mov
inc
mov
roll
lods
push
pop
lock
inc
or
xchg
cmp
stos
andb
xchg
clc
fadd
xchg
jp
pop
xlat
sub
xchg
cmp
pop
push
aas
inc
ja
push
sub
ds
jae
mov
test
sarb
loop
test
xor
sub
adc
test
inc
fwait
mov
sub
sbb
in
gs
std
add
jg
je
mov
fisttps
jnp
sbb
add
pop
sbb
std
mov
push
pop
mov
and
jno
add
add
cmc
push
sbb
mov
add
es
mov
loope
sbb
push
pop
fisubrl
stos
movsl
daa
mov
cmp
fsubrs
or
cld
stc
out
and
mov
mov
sbbb
jg
ret
or
mov
push
and
stc
mov
mov
xchg
jno
adc
jge
rcrb
inc
jne
pop
fwait
jmp
mov
xchg
add
mov
fcoml
push
into
adc
xchg
xorl
or
std
ret
xchg
xor
jno
add
and
lahf
add
and
out
add
lea
arpl
mov
sub
jmp
and
mov
pop
sub
xor
jnp
dec
mov
lds
pop
sbb
cli
shlb
fdiv
cs
and
divl
repnz
cmp
inc
rcrl
push
jnp
jne
ss
or
aaa
xor
enter
xchg
loop
enter
popl
pushf
rorb
push
cwtl
fnsave
mov
jge
movb
add
mov
xchg
adc
xchg
ret
lods
pop
mov
or
sbb
ljmp
cmp
mov
jge
lea
dec
lods
pop
mov
or
sbb
ljmp
cmp
mov
jge
cli
sbb
stos
int
pop
or
lcall
sub
mov
jge
lea
dec
lods
pop
mov
or
sbb
ljmp
dec
fcmovb
lret
xchg
ljmp
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sti
mov
movsl
fistl
fisttpl
jnp
imul
dec
adc
sbb
inc
sti
mov
movsl
fistl
stos
cmc
fwait
aad
mov
cmp
das
adc
sub
push
or
lods
jmp
fisttpl
stos
std
fwait
int
fistpll
imul
insb
gs
cmp
push
daa
sub
lock
and
ss
mov
adc
push
mov
cmp
xchg
stos
dec
cmp
mov
das
cs
inc
aad
test
push
nop
sub
lret
inc
into
cli
les
cmc
mov
adc
mov
cwtl
jnp
add
fwait
shlb
add
push
mov
mov
jnp
ljmp
sbb
lahf
pop
mov
repz
add
mov
dec
in
ret
ja
jne
push
push
rolb
rcrl
push
fs
xchg
sub
dec
mov
pop
sub
movsl
mov
lret
test
aad
fdivrl
imul
insl
sub
dec
or
adc
lock
loopne
mul
test
mov
outsl
and
pop
adc
pop
cmp
clc
fcompl
ljmp
mov
push
inc
imul
add
or
xchg
mov
movsl
mov
lret
stos
in
aad
lds
imul
jne
sbb
inc
sti
mov
movsl
fistl
stos
in
aad
lds
imul
jne
sbb
inc
sti
mov
mov
adc
xchg
pop
jnp
sbb
leave
or
lcall
sub
shl
dec
xchg
inc
jns
xor
cmp
xor
adc
fidivl
stos
leave
fnstsw
inc
movsb
or
xor
stos
popa
movl
push
aaa
insb
sub
mov
jns
fisubs
inc
mov
xor
jae
es
fisttpll
addr16
xchg
test
sbbb
mov
in
ds
mov
ljmp
mov
sbb
push
loop
xchg
or
js,pt
adcb
into
sbb
in
push
sbb
aad
adc
movsb
dec
jmp
inc
and
mov
fcoml
mov
mov
and
imul
ljmp
sub
pop
out
jns
cmpsb
lds
fcmovnbe
mov
lahf
dec
xor
into
pop
lret
and
insl
das
adc
lds
mov
xchg
lds
es
sub
iret
mov
rcl
add
mov
inc
ucomiss
adc
mov
in
lock
xchg
fbld
mov
movsl
cmp
push
lahf
cli
iret
cwtl
dec
pop
neg
pushf
lahf
mov
imul
push
icebp
les
into
popf
es
or
inc
fsubl
icebp
sub
xor
aaa
imul
fiadds
and
or
out
sub
fsubrl
dec
mov
mov
jno
loop
pop
cld
jo
je
or
xor
jmp
mov
jbe
inc
xchg
sbbl
clc
imul
mov
rclb
pop
fnstenv
lret
pop
mov
pop
les
lods
popa
sub
dec
sub
out
sbb
xchg
fisubs
lret
mov
push
jge
into
data16
mov
sti
loopne
mov
dec
pop
adcb
leave
imul
shrl
sub
push
mov
filds
jge
fprem
xchg
sahf
es
es
mov
out
or
scas
int
add
aam
in
mov
sub
punpckhbw
add
out
dec
and
inc
int3
popf
adc
xchg
pop
push
outsl
int
aam
bound
mov
xchg
dec
bound
inc
and
repnz
aas
sub
dec
xor
jb
fdivrl
sbb
cmp
std
xor
ret
mov
jnp
dec
fadds
cmp
xor
lahf
inc
lods
mov
jmp
lea
inc
mov
push
leave
mov
out
or
inc
ret
test
sub
cwtl
and
sar
cltd
jge
pop
pusha
xchg
push
push
das
xor
lcall
movsb
pop
ds
mull
lea
lahf
sahf
scas
addr16
mov
jne
fcomp
push
mov
rol
cmp
mov
xchg
mov
sbb
enter
cmpsb
aad
nop
popf
les
leave
and
scas
orl
xchg
add
pop
iret
movsb
inc
add
and
xor
inc
leave
fwait
adc
xchg
add
leave
fs
nop
rcrl
addr16
mov
mov
stos
scas
mov
mov
dec
sub
lret
dec
mov
ds
daa
pop
clc
mov
leave
cmp
sbb
xchg
stc
insb
lods
add
bswap
pop
pushf
aad
mov
imul
adc
add
jle
ja
imul
pop
out
mov
in
jecxz
xor
jb
mov
mov
sahf
xchg
cli
add
shlb
mov
sbb
outsl
fcomi
sbb
lret
xchg
mov
mov
cmc
rcr
pop
sbb
add
shll
jnp
push
xchg
jle
inc
mov
arpl
sbb
out
lods
pushl
xor
jmp
aas
cmp
cmp
out
cmpsl
mov
cmp
mov
jbe
cli
dec
push
inc
rcr
sub
mov
jl
lock
fisubs
push
sub
leave
movsl
scas
cltd
insl
mov
jns
ret
push
pusha
insb
adc
dec
adc
inc
adc
ret
xchg
inc
jp
pop
ficomps
test
xorl
pop
testl
jge
repz
rcl
incb
mov
repz
mov
pop
ljmp
les
xchg
sbb
mov
or
xor
mov
adc
inc
orl
ret
pushf
mov
mov
cld
push
fstps
xor
jbe
clc
out
les
pop
sub
mov
mov
push
sbbl
dec
inc
ficomps
dec
out
outsl
pop
mov
push
aaa
and
sbb
mov
rorb
xor
sbb
fwait
jb
rorl
cmc
jnp
testb
sbb
pop
xchg
dec
adc
cld
and
pop
pop
cmp
out
lods
movsl
fwait
es
or
mov
and
jge
shll
mov
fs
mov
add
pop
loop
push
xor
cs
or
add
jo
push
sbb
sti
xchg
inc
xchg
int3
pop
adc
mov
cmpsl
imul
mov
pop
adc
sub
sub
sub
arpl
jle
jae
jge
pop
jns
outsb
insl
pop
fcmovne
cmp
or
or
std
cltd
sub
in
test
filds
sti
dec
xlat
loop
xchg
andl
repz
mov
out
pop
xor
lds
jge
sbb
mov
imul
call
out
push
dec
ret
or
rol
shrl
lahf
idiv
jge
movsb
out
cwtl
cmp
insb
cltd
xor
cmp
mov
mov
inc
in
dec
pop
test
icebp
pop
mov
jbe
arpl
cmp
lret
rorl
push
pop
sti
xor
mov
decb
pusha
lret
mov
into
scas
pop
fsubrs
or
fistl
out
das
push
pop
out
inc
hlt
sbb
lahf
enter
fmul
sbb
cmp
cwtl
add
fdiv
addr16
dec
xchg
imul
repz
loop
jecxz
pusha
lds
repz
cmp
fisttpl
in
sbb
into
fcompl
jne
mov
ret
cmp
push
aaa
sub
movsb
pop
movsb
cmp
pop
out
inc
sub
jg
in
mov
leave
fidivs
std
and
arpl
push
or
icebp
out
push
jg
or
sbb
rorl
or
jmp
add
fs
or
or
cli
leave
shlb
out
push
jo
cwtl
adc
sbb
ja
mov
leave
sbb
or
shl
jmp
mov
mov
incl
pusha
fistpl
gs
js
ljmp
aad
sti
jae
pusha
insl
cwtl
mov
outsl
jmp
inc
add
dec
xchg
sti
movsl
jp
jle
xor
movb
ret
xchg
jmp
cmp
fiadds
xor
stos
scas
push
lret
pushf
lds
and
popf
mov
scas
add
inc
cwtl
int
mov
xchg
mov
xchg
pop
filds
in
jbe
pop
and
jl
jns
rclb
cmp
sarb
icebp
call
mov
or
sbb
lea
ret
dec
inc
enter
addr16
loopne
outsb
adcl
stos
bound
mov
mov
mov
scas
mov
mov
ss
sbb
push
xchg
jg
xchg
rcl
loop
inc
setne
cli
mov
dec
lea
cmp
mov
mov
movsb
dec
divb
or
adc
push
add
je
ret
outsb
and
cs
jge
aam
outsb
iret
pop
test
leave
push
cmp
lret
sub
std
std
adc
xchg
outsl
lods
push
dec
xchg
ds
xor
daa
movsl
cmp
mov
inc
popa
jecxz
test
and
push
idivl
sub
lret
enter
or
cmp
out
and
dec
leave
addr16
and
jnp
xor
in
and
xor
lds
mov
int
in
mov
jne
aam
sub
out
add
cltd
pop
cmp
imul
mov
push
fsts
inc
iret
cmp
pushf
xor
cltd
push
or
pop
shll
adc
fsin
dec
push
mov
or
iret
loope
xchg
ret
sbb
lea
je
pop
cmp
fnstcw
test
pop
test
gs
int
in
push
push
adc
sub
mov
mov
lcall
cmp
adc
mov
mov
cld
fsts
jno
mov
jno
in
dec
imul
mov
dec
addb
jns
aad
iret
ss
and
mov
push
push
out
jns
or
inc
sbb
repnz
loopnew
scas
lods
sbbb
pushw
hlt
mov
add
int
dec
sbb
cwtl
test
dec
mov
test
stos
adc
imul
lret
sub
add
cmp
xchg
sahf
je
rorl
or
dec
lock
mov
sbb
xor
repz
pop
jno
or
inc
cld
in
mov
push
mov
fdivrs
loope
jecxz
rcr
rorb
jecxz
cmp
inc
pop
push
fldl
inc
adcl
std
das
lods
jp
daa
loop
or
leave
cmp
aas
lret
adc
sbb
dec
das
ljmp
sbb
loope
gs
mov
xchg
loopne
mov
sub
jge
out
pop
push
aad
andl
and
inc
lods
sbb
and
lahf
xor
cmp
mov
adc
push
xor
push
xchg
jae
jle
fnstsw
xchg
mov
push
cmp
ret
arpl
cmp
inc
outsl
pop
cmpsb
mov
sbb
mov
jl
xchg
out
roll
jnp
das
scas
aas
lahf
stc
int
dec
xchg
scas
add
jae
mov
in
mov
pop
pop
xor
inc
fwait
pop
shrl
adc
pop
sub
sahf
mov
xchg
ss
sar
stc
or
nop
daa
and
dec
dec
sbbb
lods
mov
and
cmp
lods
lahf
cmp
push
xchg
rcrb
xchg
jo
cmpsb
mov
xchg
int
mov
bound
aaa
pop
loopne
fxch
xchg
int3
pusha
iret
popf
xor
and
push
push
in
push
pop
repnz
std
jno
mov
xchg
xchg
dec
fidivrl
incb
fcompl
cmp
pusha
pusha
inc
xchg
mov
sub
shl
ss
inc
leave
jl
cmpsl
aaa
pop
std
ds
dec
jbe
rorl
mulb
dec
lods
or
inc
mov
inc
cmpsl
icebp
scas
call
div
jns
jae
add
loope
xchg
movsl
jne
inc
mov
and
fdivl
pop
push
add
mov
mov
or
inc
ror
pop
lret
hlt
push
loope
ret
pop
pop
cmp
push
insb
sbb
dec
in
cmp
add
rep
push
jno
ds
sbb
push
loopne
pusha
push
fwait
and
mov
in
cmpsl
shr
jb
xor
dec
lods
fnstsw
and
inc
pop
lahf
add
add
xor
xchg
cmp
mov
dec
or
cmp
and
arpl
enter
rcll
jle
xor
out
pushf
add
das
adc
xchg
movsb
mov
cmpsl
jno
adc
shll
test
cmp
jecxz
outsl
pushf
test
mov
sub
push
je
leave
mov
push
jb
repz
xchg
pop
ret
sbb
and
push
loopne
lcall
loopne
mov
lret
mov
cs
fisttps
bound
fadd
inc
clc
lock
lock
pushl
push
jp
xchg
pop
pop
pusha
add
push
cmp
stos
inc
sbb
aad
jbe
or
loop
adc
inc
inc
ds
outsb
test
shlb
lods
das
lret
sbb
sbb
cmp
adc
sbb
bound
shlb
and
lahf
jecxz
or
out
add
loop
bound
subl
lods
adc
lahf
cmpsl
loope
cs
and
jne
rorb
pop
mov
data16
fnstcw
fwait
dec
adc
mov
xchg
repz
ss
fisttpll
cmpl
adc
test
fs
stos
push
cwtl
pushf
paddusb
sbb
dec
fwait
jmp
pop
push
jle
sub
out
xor
std
call
pop
and
mov
jne
xchg
mov
adc
loop
jb
pop
iret
mov
rcrl
pusha
mov
inc
mov
aaa
jbe
bound
sar
leave
or
xchg
call
lret
xor
adc
xor
inc
sub
popf
rcl
fsts
imul
stos
jo
jmp
mov
cmc
sbb
out
popl
adc
enter
mov
mov
bnd
add
sub
xor
dec
xor
imul
xchg
cmp
das
stc
pusha
cld
jae
mov
scas
fwait
push
inc
cld
pushf
cld
sbb
dec
push
es
aas
fdivrs
push
add
cwtl
data16
test
add
lahf
push
fsubr
fcmovb
dec
dec
xchg
or
rclb
or
popf
ss
jmp
shr
movsb
jle
xor
dec
ffree
add
sarl
repnz
ljmp
xchg
inc
iret
rol
or
int3
cli
or
or
je
mov
inc
add
xor
cmc
shrl
or
and
cltd
test
in
pop
sbb
hlt
cwtl
mov
cmp
xchg
inc
sub
and
xor
imul
cwtl
push
ljmp
cmp
mov
fmull
mov
popf
lahf
cmp
aaa
cmp
push
sahf
aaa
loopne
test
aam
adc
out
das
lahf
jae
add
jle
xchg
mov
cmpsb
clc
imul
loopne
and
adc
xor
push
jp
mov
mov
dec
iret
ja
arpl
test
or
jge
ds
shlb
std
cmp
jbe
icebp
mov
fisubs
js
movsl
add
mov
mov
add
lret
mov
cmpsl
mov
cs
insl
inc
inc
xchg
mov
enter
fdivl
dec
jb
pop
push
mov
mov
scas
xchg
enter
call
cld
repnz
push
lahf
call
cmp
popf
xorl
mov
push
mov
xchg
aaa
cmc
push
gs
xlat
mov
in
cmp
in
jb
mov
jle
in
ljmp
aam
rcll
push
and
xchg
mov
dec
mov
or
movsl
fwait
adc
xchg
and
test
clc
sub
je
xchg
fistl
aaa
popa
loopne
pop
testl
enter
cmc
fists
cmpb
mov
stos
xchg
dec
pop
push
frstor
jge
cs
fistpll
das
jl
dec
movsb
mov
scas
testb
std
loope
lea
pusha
jl
pop
mov
adc
das
jb
or
mov
inc
xor
dec
cwtl
lds
loopne
insl
jge
mov
pop
sbb
stos
out
mov
adc
ret
test
add
jl
push
je
xor
xchg
adcl
sbb
pavgw
out
add
lds
mov
jmp
lock
insb
add
pop
fcompl
xor
outsb
adc
dec
sbb
mov
adc
inc
insb
test
out
sub
and
xchg
jge
pop
lods
sub
lcall
fucomi
into
es
and
cmp
cmpsl
mov
push
insl
dec
add
cmpsb
mov
cmp
mov
mov
push
cmp
in
xchg
adc
repnz
xlat
push
scas
movsl
jle
xchg
mov
fstpt
xor
ljmp
mov
es
and
mov
inc
xor
test
mov
xchg
aam
inc
dec
loope
jmp
adc
stc
push
and
push
pop
jns
mov
lret
out
bound
or
aaa
hlt
negl
or
pop
jge
or
pop
popa
or
adc
adc
cmp
fs
mov
mov
mov
mov
mov
mull
pushf
and
addl
stos
push
ret
inc
xchg
fnstcw
mov
jl
cld
push
outsl
adc
fadds
pop
imul
jmp
scas
sub
xchg
jo
add
cltd
cli
int3
xorb
push
xchg
jnp
pop
rol
xchg
push
enter
sbb
inc
loope
fiaddl
sub
stc
rcl
scas
aad
mov
dec
or
or
fldenv
andl
out
cmp
sub
call
mov
inc
jnp
pusha
fcmovne
push
dec
or
add
cwtl
jp
push
sub
sub
fcmovnb
in
sub
roll
fnstsw
cld
add
loop
sbb
and
push
pop
xchg
mov
jg
and
shl
mov
les
into
or
push
aad
pop
test
out
xchg
mov
sbb
test
sbb
test
ss
repnz
xor
fcmovnu
jae
push
mov
jmp
fwait
add
das
push
aam
or
orb
add
xchg
loop
stos
in
imul
ret
test
xor
jg
inc
lcall
ret
or
mov
inc
mov
cmp
lret
or
cs
mov
sti
xor
scas
in
xchg
fxam
inc
or
push
orb
pop
pop
sub
pop
sbbl
data16
sarb
enter
jo
mov
popa
adc
cmp
loope
lret
ficoml
cmpsb
shl
stc
stos
ret
adc
cmpsl
inc
push
mov
mov
fucomp
aam
or
pop
std
test
gs
add
gs
xchg
xchg
popf
je
inc
ss
das
lock
test
repz
xchg
pop
das
dec
or
inc
mov
inc
sahf
lret
mov
xchg
dec
xchg
dec
push
mov
push
xchg
cmpsl
inc
add
loope
sbb
cmpsl
insl
mov
push
sahf
jae
or
js
push
xlat
adc
call
and
rcr
inc
push
popf
hlt
pop
mov
dec
arpl
push
push
mov
mov
imul
mov
pusha
add
dec
aam
push
dec
mov
sub
mov
sbb
xchg
dec
mov
push
cltd
into
xchg
dec
cmpsl
mov
nop
in
adcl
pop
sahf
inc
call
push
out
and
adc
hlt
fs
stc
pop
or
pushf
stc
int3
ljmp
in
stos
pop
mov
je
and
push
bound
in
mov
push
fs
pop
cmp
fprem
aaa
cmpl
and
shll
imul
fs
fdivl
jno
xchg
sarb
cmpsb
cmp
lcall
movsb
mov
push
loop
movsl
movsl
cs
ret
shl
or
fsubrs
pop
pushl
test
and
movsb
inc
insl
push
push
das
xor
mov
arpl
jle
cmpsl
pop
jle
and
sub
rcrb
push
push
pop
or
ss
add
lret
adc
cmp
arpl
push
je
jns
push
popf
js
je
ss
test
xor
push
push
ret
or
mov
fildl
adc
lds
repz
jbe
jae
insb
out
imul
insl
cmp
lcall
repnz
xchg
sbb
lahf
pop
into
in
sbb
fisttpll
loope
push
xchg
push
mov
mov
add
out
inc
sub
xchg
inc
iret
dec
ljmp
inc
icebp
cltd
outsl
xlat
or
loopne
pop
aam
and
push
cs
aaa
xchg
cltd
ss
stos
xlat
in
adc
or
pop
movsl
stos
aam
add
stos
mov
gs
push
sbb
jno
inc
outsb
int3
and
daa
cwtl
test
ljmp
push
push
aas
add
mov
jecxz
pop
call
and
jmp
adc
inc
pop
jns
jno
add
es
xchg
das
pushl
cmp
sbb
in
mov
xchg
imul
cmp
mov
mov
inc
push
pop
test
repz
sub
mov
sbb
outsl
popl
fbld
mov
xor
push
fnstcw
sbb
outsl
mov
mov
sti
and
inc
xchg
bound
pop
insl
out
pusha
sbb
imul
out
arpl
xor
sti
pushf
mul
pop
mov
arpl
test
xlat
inc
xchg
and
std
and
mov
shlb
xchg
lret
test
aad
lds
imul
jne
sbb
inc
sti
mov
movsl
fistl
stos
in
aad
lds
imul
jne
sbb
inc
sti
mov
movsl
fistl
stos
in
aad
lds
imul
jne
sbb
inc
sti
mov
mov
mov
aad
add
icebp
adc
mov
cmp
or
mov
adc
sti
fistpll
sub
pop
sti
cmpsb
lret
jnp
imul
cmp
imul
lret
dec
sti
pop
mov
sub
jne
dec
lret
jnp
imul
mov
fnstsw
xor
stos
sbb
sub
pop
cli
pop
lret
or
punpckhdq
sbb
dec
call
xor
pop
sub
jns
shlb
mov
and
cwtl
insb
dec
xor
xchg
push
cmp
test
add
adc
in
divl
jnp
dec
push
dec
lock
es
sub
or
fwait
pop
jecxz
or
aas
or
jmp
inc
sbb
aad
test
mov
scas
test
mov
test
dec
cmp
mov
les
dec
stc
fiadds
jbe
inc
fistl
clc
lret
adc
imul
pop
je
cwtl
fistpl
xor
pop
fwait
sub
je
into
mov
cmp
mov
pop
mov
fwait
inc
outsb
xor
push
mov
cmp
imul
lret
dec
sti
jecxz
pop
sbb
mov
mov
movsl
lret
arpl
in
xlat
jne
add
mov
lods
lret
jnp
sahf
cli
dec
sbbb
sub
mov
dec
enter
mov
cltd
daa
xchg
sub
xchg
jp
jle
imul
dec
mov
call
pop
cs
jnp
dec
sti
pop
jmp
sbb
sub
pop
sti
dec
lret
jnp
imul
cmp
imul
lret
dec
sti
pop
jmp
sbb
sub
pop
sti
dec
lret
jnp
imul
frstor
mov
aas
aam
push
or
stos
inc
mov
movsb
and
xchg
pop
sbb
mov
pop
inc
mov
mov
sub
mov
cld
mov
icebp
xchg
lock
scas
push
shr
dec
ror
mov
sub
push
adc
dec
in
ret
add
add
sbb
aaa
mov
orb
push
xchg
sub
pop
xor
add
mov
cmp
mov
fidivrs
test
loop
mov
cld
pop
sahf
jp
pop
test
popf
in
pop
xchg
addr16
jo
mov
cmpsb
dec
repz
gs
adc
cmpsl
ror
cmp
jnp
cli
mov
pop
aad
or
in
add
lcall
ret
into
ret
mov
and
lahf
aaa
ret
pushf
xchg
xor
pusha
mov
and
mov
ljmp
imull
xchg
dec
xchg
fwait
iret
mov
jo
in
pop
enter
mov
mov
mov
mov
jge
pop
loope
popa
fnstcw
mov
mov
mov
stos
ljmp
or
in
popa
mov
xchg
ss
mov
fsts
out
pop
jne
fwait
lret
add
repnz
test
and
jl
xor
push
jle
or
jb
pop
mov
and
jge
jle
mov
fwait
add
and
popa
cld
les
sub
cmc
mov
push
lods
int3
scas
mov
sub
jne
test
stos
cmp
add
int3
inc
aam
adc
adc
cltd
shrb
outsl
jecxz
ds
stos
int
sti
js
mov
cli
fidivrs
pusha
jae
dec
adc
out
es
push
pusha
pop
lret
addl
out
pop
mov
mov
fisubrs
jl
lock
jp
mov
mov
cmp
aam
js
mov
cmc
lods
sub
dec
enter
mov
sub
cmp
xor
mov
xchg
imul
hlt
dec
mov
fistpll
jbe
mov
es
rol
lret
repnz
rolb
popa
aam
mov
pop
inc
inc
movsl
aas
leave
lret
and
sub
mov
push
xchg
out
lods
cmp
dec
sub
mov
into
lock
das
add
leave
lods
pop
fdivr
aad
and
xlat
cs
hlt
enter
push
clc
push
mov
pop
xchg
imul
xor
push
dec
aas
adc
sbb
iret
jno
mov
ja
sbb
or
ret
cmp
inc
cmp
insb
icebp
jp
xchg
mov
cmp
sarl
data16
push
pop
int3
decb
pmuludq
inc
jmp
aam
negb
jecxz
test
pop
fdivrl
xor
sbb
xor
sub
insb
imul
imul
or
in
xchg
jl
cltd
stos
or
addb
cmpb
dec
dec
insl
iret
jae
scas
push
fsubr
mov
and
adc
iret
movsl
xor
sub
cmc
mov
aas
in
xchg
cmp
sahf
mov
ljmp
stos
or
add
pop
pushf
xchg
ficomps
lods
xor
mov
pop
int3
sub
pop
xchg
mov
int
hlt
bound
imul
cmpb
popf
cs
outsl
dec
test
insb
fsubrs
pop
mov
adc
mov
xorb
stos
inc
scas
cmp
add
or
xchg
inc
iret
es
mov
mov
rcl
fwait
pop
cltd
je
test
jo
mov
cmp
xchg
or
divb
jo
icebp
lcall
fildl
push
mov
pop
inc
stos
push
mov
ret
leave
pop
dec
xor
adc
and
push
sbb
or
push
pop
sbb
dec
push
jnp
shll
cmpsb
xchg
cmpsb
leave
out
fnclex
and
scas
stos
sbbl
push
sar
das
fdiv
jbe
rcll
lea
dec
daa
jns
jecxz
arpl
xor
or
xchg
movsb
pop
test
push
bound
int
aam
cmp
mov
lea
in
div
insb
out
in
je
int
push
je
stos
jbe
push
sub
xchg
dec
xor
cli
insl
mov
inc
add
push
mov
inc
or
mov
cmp
dec
call
adc
jnp
mov
shlb
int3
loopne
mov
or
and
je
lods
das
jmp
jl
adc
dec
inc
pop
dec
xor
loope
push
sbb
push
mov
sub
cltd
movsl
pop
insl
addr16
stos
dec
dec
rcr
push
xchg
add
sub
les
aam
clc
adc
fnstcw
sbb
cmpsl
aam
or
or
lahf
add
mov
lea
adc
out
fsubl
xchg
imul
adc
add
call
lock
loop
movsb
pop
outsl
push
nop
dec
mov
imul
nop
cmp
jo
out
pop
pop
push
fs
inc
jnp
ds
out
outsl
scas
scas
cwtl
cmp
aad
fstp
pusha
rcrl
lahf
mov
sarl
lods
pop
jl
jmp
jbe
inc
xor
inc
movsl
mov
call
out
out
sahf
adc
daa
idivb
and
hlt
mov
loopne
jg
faddl
add
cs
dec
jmp
pop
iret
or
mov
dec
cmp
xchg
mov
fsubs
sahf
cld
mov
sub
xor
ds
lret
mov
jnp
jg
cmp
subb
jle
push
xor
inc
push
inc
jl
pop
cmp
push
xlat
cmp
insl
push
rcl
inc
andb
dec
jg
lret
pop
and
in
pop
add
into
ds
pop
aad
mov
sub
aam
mov
nop
xchg
pop
lcall
inc
loope
lea
sbb
lods
pop
xor
cmc
mov
mov
mov
jle
ffree
je
cmp
cltd
and
mov
push
imul
bound
movsb
shll
dec
in
sahf
movsb
mov
xorb
call
ljmp
popf
pop
push
es
ljmp
xchg
dec
cmp
jne
mov
bound
pushf
dec
push
and
mov
outsl
mov
xor
fdivrl
sbb
inc
push
in
sbb
insl
inc
push
outsl
and
mov
pop
inc
pop
testl
lcall
adc
imul
xor
xor
lods
jl
xor
jle
dec
lea
dec
mov
mov
jg
or
outsb
leave
outsb
fcoms
out
les
and
movsl
mov
xlat
jo
rcrb
aaa
mov
out
shlb
mov
loopne
or
pop
fcom
imul
mov
repz
push
inc
mov
leave
lock
lds
sbb
dec
test
add
aad
sbb
inc
push
enter
out
add
xchg
fistps
daa
je
xchg
mov
jecxz
ss
data16
or
lods
test
dec
outsl
push
mov
mov
imul
insb
or
xor
aad
fs
or
sbb
inc
pop
xchg
sbb
loop
pop
lock
adc
mov
in
or
ds
inc
inc
nop
loopne
push
pop
add
or
pop
fiaddl
lea
mov
sub
cltd
iret
xor
xchg
call
aad
data16
shl
cmp
ljmp
sbb
inc
cmp
lods
incl
stos
dec
hlt
insl
cwtl
push
orl
ja
pop
mov
xor
mov
ret
push
loopne
sbb
inc
jnp
mov
out
sub
arpl
xor
daa
or
sbb
xchg
mov
movsb
in
divb
cli
jns
aaa
lods
mov
jge
push
and
push
xor
movsb
and
in
fcomi
add
jb
dec
cwtl
hlt
out
sub
ja
lds
ljmp
stos
add
lcall
add
daa
rcrb
stos
sti
repnz
imul
xchg
in
mov
imul
push
xor
jp
sbb
and
cmp
je
cltd
insl
es
push
mov
ljmp
mov
stos
mov
mov
mov
cmp
inc
mov
jno
jmp
push
mov
les
xor
jbe
data16
push
leave
movsl
push
adc
mov
lahf
push
addps
mov
jno
mov
push
lret
fdiv
xchg
or
mov
pusha
call
inc
pop
rcr
cmp
mov
ds
loope
fsubs
push
add
mov
dec
ret
hlt
test
pop
sub
dec
jge
je
xor
outsb
fbld
leave
sub
xchg
add
xchg
pusha
cmc
rorb
and
hlt
xchg
addr16
adc
mov
cld
dec
xor
rolb
adc
lds
sbb
jmp
jns
mov
fnstcw
xchg
fstps
jmp
aas
cmp
rcll
int3
clc
pop
loopne
scas
sub
test
iret
mov
jmp
subl
push
andl
push
roll
or
enter
adcl
shll
xor
test
test
dec
xor
leave
pop
hlt
lds
scas
adc
adc
aaa
rclb
pop
push
or
lret
inc
pop
iret
movsl
in
xchg
push
nop
push
js
jmp
push
inc
scas
scas
popf
in
nop
test
add
mov
sbb
cmp
sbb
mov
cs
insb
cmp
testb
xor
in
jmp
mov
sub
cs
addr16
in
add
mov
pop
out
sti
cmpsl
imul
add
cli
push
or
inc
lcall
cmpsl
mov
add
mov
xchg
pop
dec
xchg
in
lret
lock
push
movsb
addr16
pop
mov
sbb
scas
pop
pop
daa
push
adc
mov
cs
jae
in
dec
outsb
int3
stos
orb
insb
movl
orl
negl
test
lods
scas
mov
js
clc
in
mov
sub
inc
das
inc
jp
imul
push
pop
test
mov
movsb
inc
outsb
push
mov
popl
xchg
inc
ljmp
add
adc
pop
add
out
push
xchg
push
subb
call
and
lds
or
scas
xor
mov
jecxz
inc
dec
dec
jb
or
imul
xchg
das
test
jnp
mov
lret
mov
mov
and
rcl
pop
dec
lods
pop
jne
pop
aas
sti
ficoml
xor
stc
jns
loop
loopne
or
out
mov
cli
sbb
lret
stos
lock
call
lret
dec
rcrl
sbb
inc
sub
xor
sbb
xchg
rolb
je
jo
lret
inc
lret
add
stc
mov
add
jg
stos
lods
push
adc
ljmp
or
mov
jmp
jne
sub
and
pop
mov
pcmpeqd
fildl
dec
or
jge
xlat
and
mov
fwait
aas
jo
mov
mov
into
rorb
xor
or
fprem
mov
or
outsb
inc
lods
pop
in
in
enter
enter
push
in
test
jmp
test
fistpl
push
shrb
jg
jne
dec
addb
cmp
out
test
sbb
push
xchg
and
or
xor
mov
fcmovnu
ds
pop
outsb
loope
inc
fldenv
lret
loope
jg
ror
xor
idivl
push
aaa
mov
shrb
int3
dec
mov
push
push
dec
sti
xchg
dec
push
jg
out
adc
and
pop
lret
dec
jecxz
xchg
push
inc
fisttpll
cmp
add
ret
mov
loopne
adc
lret
lods
sahf
sbb
cmp
push
cltd
pop
das
jmp
lods
bound
inc
scas
add
push
icebp
jbe
int
std
arpl
sarb
scas
test
xchg
dec
or
adcb
pushf
cmp
xchg
adc
stos
out
arpl
cltd
pop
mov
jecxz
mov
jne
inc
inc
mov
stos
fstl
movsb
int
in
dec
mov
rcr
jmp
cmpsl
rorb
hlt
adc
hlt
mov
addb
cmp
push
push
pushf
pop
add
mov
int3
in
lret
iret
mov
cmp
pop
clc
push
push
inc
fsubr
call
mov
jge
fcmovnbe
sahf
fisttps
push
jl
adc
and
jge
aaa
mov
sahf
jbe
cmp
pop
cltd
sub
aam
cwtl
adc
push
in
fsts
sbbl
sbb
pop
pop
loop
pushf
cmpl
and
xor
pushf
sbb
add
push
addr16
sbb
int3
jnp
divl
aad
mov
cwtl
push
stos
in
clc
insl
call
gs
push
pop
ss
inc
movsl
cli
aas
scas
cli
pop
push
ljmp
sub
imul
js
and
hlt
or
cmc
inc
or
mov
pop
inc
cs
push
js
jmp
dec
notb
sbb
mulb
xor
sub
cs
inc
adc
jno
push
xchg
mov
pop
dec
data16
dec
push
inc
dec
sub
fdivs
imul
test
mov
ja
repnz
mov
mov
leave
popa
std
xchg
cmp
jmp
ja
sbb
push
fnstenv
sub
push
jecxz
cmpsb
cmp
pusha
and
cmp
pop
add
cmp
in
adc
push
xor
mov
mov
cmp
jmp
leave
jge
mov
add
nop
fmul
sub
push
mov
rol
xchg
cmp
cmc
inc
testl
call
push
iret
push
push
les
mov
dec
imul
test
sti
ja
and
loopne
lods
mov
mov
adc
jno
popa
sahf
xor
lods
adc
cwtl
or
aas
test
outsb
cmpsb
idivb
ljmp
out
pop
pushf
lret
ret
outsb
subl
imul
fstps
mov
outsl
loope
ja
sti
pop
push
popa
mov
aam
mov
aaa
lret
jo
fadd
pop
imul
xchg
call
idivl
xchg
imul
dec
push
sub
das
cmp
mov
sahf
jae
test
test
push
loopne
fldl
stc
and
imul
mov
lock
jge
iret
aas
insb
aaa
jne
sub
dec
ds
ficoml
jo
pop
ja
orl
dec
shl
jne
xor
sbb
jge
es
rolb
sbb
movsl
sti
cmp
inc
leave
js
pop
push
or
in
das
jecxz
sarb
lahf
pusha
mov
or
mov
clc
and
test
or
add
jno
or
sbb
push
sub
dec
cltd
jge
push
mov
js
arpl
shll
jnp
daa
cmpl
pop
dec
ds
lds
shl
pop
sbb
pop
cmp
pop
push
insl
sbb
sbb
rorb
dec
jo
and
jecxz
cmp
and
out
test
and
out
fistps
xchg
jmp
dec
inc
sub
fwait
int3
arpl
jge
xchg
xor
mov
mov
outsb
or
sti
bound
dec
test
shrb
sbb
insb
lret
pop
mov
sbb
jo
aas
inc
add
push
dec
ret
adc
mulb
fbstp
loopne
andb
cli
sub
lret
mov
addl
enter
jo
stos
cmpsb
lea
xchg
enter
sti
push
int3
stc
and
adc
jmp
jecxz
stc
out
jmp
sub
and
out
test
mov
sbb
jno
cmp
pop
dec
dec
mov
ja
aam
rcll
notb
adcl
adc
fsubrs
xlat
add
mov
sbb
fdivl
movq
subl
cmpsb
icebp
inc
mov
out
pusha
sbb
dec
mov
jne
push
pop
lods
fs
xchg
jns
loopne
fwait
nop
dec
cmpsb
jae
mov
or
xchg
push
adc
add
cmp
xchg
push
jnp
movsb
dec
lds
jb
cld
mov
cmpsb
in
dec
test
or
push
xlat
mov
insl
push
js
aam
add
jne
adc
fsubrl
mov
xchg
mov
pusha
and
fstpt
movsb
or
pop
clc
xchg
mov
orb
fidivrs
push
loope
aas
sub
cmp
gs
push
enter
push
xor
test
mov
in
cmp
mov
cs
stc
mov
mov
in
mov
movsl
sarl
mov
roll
test
std
enter
gs
ja
sub
scas
aaa
cli
push
into
cld
or
cmp
rcll
lds
rclb
bound
test
les
mov
inc
sub
out
add
jns
push
cmp
cld
dec
subl
mov
xchg
pop
pop
sub
or
hlt
jbe
inc
test
and
daa
mov
xchg
push
mov
ja
cmp
sub
push
rorb
mov
lods
loopne
add
fimuls
movsb
pushf
hlt
fwait
jg
in
mov
fs
push
mov
test
adcl
aad
cwtl
dec
imulb
xorl
inc
movb
fwait
mov
push
hlt
ljmp
cmp
mov
into
or
out
cmpsb
ret
push
inc
mov
in
dec
in
lods
ret
dec
das
fwait
pushf
out
aad
test
mov
leave
inc
push
lcall
ds
movsb
mov
outsb
ret
adc
pop
push
mov
int3
sbb
jno
push
mov
movsl
mov
or
out
mov
inc
push
xlat
ret
out
es
aas
push
lds
insl
and
in
inc
xor
mov
dec
xchg
cltd
loope
pop
mov
ror
and
fldenv
js
decb
and
push
adc
and
mov
inc
xor
or
or
sti
adc
sub
or
inc
dec
xorl
mov
hlt
pushf
push
outsl
lods
shlb
lret
andl
pushf
mov
fsubrl
pop
push
mov
in
rorl
in
sbb
mov
es
aad
pusha
add
stos
bnd
xchg
in
sbb
mov
jp
lahf
imul
out
or
das
cmp
sbb
sti
scas
xchg
mov
dec
pop
xchg
divl
pop
or
roll
jg
lret
jp
fwait
mov
in
rorl
add
pop
inc
andb
jae
push
mov
lret
sar
or
imull
rorl
cmp
mov
jmp
mov
or
lock
nop
movsl
jae
jbe
out
inc
aaa
mov
pop
mov
std
in
xor
dec
jmp
push
inc
ljmp
out
cmp
in
adc
pop
lock
imul
add
jl
shll
scas
aaa
sub
add
or
sbb
pop
adc
add
mov
xor
ret
or
jge
cmp
pop
insb
jecxz
shl
jae
cmp
popa
inc
insb
flds
add
push
imul
cld
dec
inc
inc
jo
mov
push
aas
out
aad
jno
das
add
mov
sbb
xchg
jp
pop
idivb
dec
jle
cld
fs
jb
mov
fwait
sub
inc
or
lea
cmp
xor
pop
cltd
dec
in
push
adc
inc
flds
test
xchg
das
cmp
mov
and
jae
test
js
sub
inc
pop
bound
je
inc
les
cmpsb
popa
or
cwtl
scas
cmp
mov
add
mov
mov
or
hlt
push
addr16
inc
aam
mov
mov
out
jae
push
jge
cld
popf
mov
ss
rcl
jmp
mov
sbb
out
out
cld
test
cmp
mov
insl
mov
pop
mov
add
faddp
dec
shll
mov
rcrb
xchg
mov
xchg
das
pop
or
insl
xchg
fwait
and
ss
jmp
enter
cltd
jno
mull
inc
clc
jb
sahf
mov
cmp
lahf
inc
jecxz
push
pop
jecxz
in
roll
mov
scas
imul
cmp
jbe
jo
sub
sub
call
in
shl
inc
and
icebp
push
data16
jbe
jecxz
pop
imul
mov
mov
xor
mov
dec
push
cmp
imul
lret
dec
sti
pop
jmp
sbb
sub
pop
sti
dec
lret
jnp
imul
cmp
imul
lret
dec
sti
pop
jmp
sbb
sub
pop
sti
dec
lret
jnp
imul
cmp
push
jg
dec
lcall
scas
sbb
and
pop
loop
iret
jb
xor
outsl
sbbl
imul
lret
dec
jnp
sub
cmp
xor
and
sub
clc
ja
xchg
mov
push
orb
add
add
add
add
popl
dec
add
xchg
add
add
int3
add
add
add
xor
jno
adc
insb
add
add
add
add
or
jne
les
add
add
add
or
xor
test
xor
jg
fs
add
add
add
add
add
xor
dec
add
add
add
or
stos
add
add
cmpsb
add
add
add
add
data16
add
add
add
add
add
add
dec
add
add
add
add
inc
add
in
add
dec
add
movsl
add
add
fiadds
inc
add
add
dec
add
movsl
add
add
add
add
sbb
and
sbb
mov
add
and
add
add
add
add
add
or
rolb
and
jo
mov
add
ds
add
arpl
jp
mov
add
add
add
test
add
push
mov
xchg
mov
add
fiadds
pop
add
repnz
add
add
js
dec
add
stos
add
add
add
add
add
add
rolb
addb
add
mov
and
dec
add
add
add
add
add
add
add
mov
filds
dec
add
dec
add
add
add
nop
add
add
add
add
add
add
incb
jb
and
pop
add
xor
add
add
aas
add
scas
add
add
add
add
inc
add
pop
add
mov
fiaddl
leave
add
add
add
mov
add
stos
add
add
pop
add
add
add
add
add
add
add
outsl
add
add
add
add
add
into
add
add
add
add
dec
add
add
add
add
add
arpl
xchg
add
or
repnz
xor
jl
add
add
add
add
faddl
pop
add
in
nop
add
add
add
add
add
add
add
add
add
addb
add
add
mov
arpl
and
sbb
add
add
xor
push
add
xchg
xor
dec
add
fs
add
popl
mov
add
add
add
add
add
add
add
pop
add
add
xchg
add
add
insl
add
add
add
inc
add
push
add
add
add
add
push
add
add
mov
add
sub
add
lret
add
add
add
xchg
add
add
add
add
add
add
add
add
add
insb
add
add
sbb
imul
mov
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
jno
addb
add
add
add
add
enter
dec
add
add
int
xor
out
sub
sbb
sub
mov
cld
or
mov
mov
hlt
mov
inc
sbb
mov
outsl
inc
inc
lods
out
mov
xchg
push
in
xor
sarl
xor
mov
cmc
sub
pop
popa
cld
add
push
rorb
sbb
dec
test
imul
cmp
mov
lds
cmc
rol
mulb
add
lret
ds
test
and
inc
lret
ljmp
inc
push
lahf
fs
jbe
ffree
jb
push
push
xchg
mov
daa
jne
or
outsb
stc
jne
lret
xor
dec
cmp
and
mov
add
pusha
vmread
cmpsb
cmp
in
pop
jge
ja
adc
and
sahf
mov
in
faddl
scas
mov
or
mov
mov
pop
sbb
loope
dec
subl
dec
mov
addl
mov
or
cmp
mov
sbb
sub
or
push
divl
fs
xchg
in
scas
adc
sbb
jnp
and
mov
fidivrl
fadd
in
and
xchg
mov
shrl
in
addr16
and
cmp
mov
aam
sbb
cmpsl
clc
sbb
cmc
imul
push
xchg
add
insb
fldcw
mov
in
xor
fildl
xorb
xchg
stos
jge
ss
sbb
dec
mov
adc
aam
fdivs
sbb
xor
lahf
xchg
cmp
jb
out
push
inc
mov
mov
push
and
mov
mov
add
stos
xadd
fs
icebp
push
filds
gs
ja
dec
jp
jle
bound
fadds
sbb
push
dec
mov
lahf
or
popf
jnp
sbb
and
xor
addr16
loope
mov
cs
mov
pop
mov
fs
mov
xor
fcmovb
cmp
push
mov
jg
pop
in
dec
mov
sti
xor
jae
cli
adc
es
jp
or
cmp
mov
es
loopne
cltd
je
sub
xchg
into
jecxz
push
jne
add
mov
cmpsl
in
test
mov
data16
insb
cwtl
cmp
insb
mov
jmp
sbb
aas
dec
fisttps
cmp
aas
mov
iret
out
syscall
adc
test
lcall
fldcw
fisttps
sub
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
