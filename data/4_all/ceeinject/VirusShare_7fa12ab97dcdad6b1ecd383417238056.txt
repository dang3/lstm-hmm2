call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
icebp
out
loope
ror
rcr
jecxz
fdivr
scas
mov
push
dec
inc
pop
xor
and
adc
add
icebp
out
loope
ror
rcr
scas
mov
out
outsl
popa
jg
dec
inc
pop
icebp
inc
and
adc
add
icebp
out
loope
ror
rcr
scas
mov
lahf
jno
inc
pop
cmp
jnp
push
scas
pushf
test
js
sub
adc
daa
jne
fs
inc
test
ja
xchg
ds
dec
scas
mov
xchg
mov
in
scas
pop
mov
testb
dec
mov
movsl
mov
cmp
jno
xor
punpcklwd
pop
aas
je
add
mov
or
mov
cld
nop
in
scas
lret
sub
xchg
add
add
call
in
mov
aam
cmp
bound
inc
verr
or
push
jb
fisttps
jae
push
ja
xchg
sub
mov
dec
popa
das
lods
insb
push
jno
call
iret
rcr
scas
mov
lahf
jno
popa
jg
dec
inc
pop
xor
and
adc
add
jmp
mov
mov
rcl
cmc
leave
or
push
add
push
sub
sub
insb
and
jbe
push
xchg
mov
mov
in
jmp
and
push
push
sbb
cmp
inc
dec
jge,pt
je
xchg
stos
loope
mov
andl
jg
dec
inc
pop
xor
and
adc
add
icebp
out
loope
ror
rcr
scas
mov
lahf
jno
popa
jg
dec
inc
pop
xor
and
adc
add
icebp
out
les
dec
fldl
xchg
push
vmread
mov
push
mov
mov
fidivl
add
jb
add
stc
and
in
stos
mov
hlt
sub
xor
rorb
or
sub
fistl
pop
mov
sub
add
mov
stos
inc
push
hlt
mov
fnclex
or
ret
not
mov
insl
out
push
and
out
jo
js
dec
pop
dec
es
mov
arpl
movsb
jb
sbb
mov
mov
add
movsb
lock
xchg
dec
add
mov
xchg
push
mov
xlat
popa
pop
ljmp
cmpl
adc
fcomi
inc
subl
lcall
adc
in
clc
in
or
sbb
int3
xchg
dec
xchg
lods
enter
sbb
stc
insl
rorl
fsubs
mov
cltd
mov
sub
repnz
ret
cmp
mov
in
mov
int3
mov
push
pop
or
add
gs
mov
push
stos
in
pop
insb
lret
mov
js
jl
cltd
fdivrs
dec
mov
xor
jmp
mov
dec
xchg
arpl
or
iret
clc
hlt
add
xchg
scas
xchg
mov
vmread
cmp
dec
jmp
sbb
jge
popa
and
jmp
cmp
lea
insl
aas
mov
push
dec
adc
pushf
pop
push
sahf
ret
xor
push
jle
mov
aas
xchg
or
stos
sbb
sti
mov
adc
in
ljmp
mov
ffreep
inc
adc
and
dec
sbb
sarb
int3
cmp
ds
mov
pop
push
pop
addb
or
gs
xor
pop
and
test
in
shll
inc
dec
xchg
dec
pop
or
sub
dec
fildll
loopne
dec
aad
test
push
dec
gs
xor
mov
fdiv
xchg
xlat
lret
mov
mov
out
cli
jb
and
outsl
push
inc
in
iret
add
fbstp
cmp
and
rol
decb
jg
fimuls
xchg
xor
cmp
xchg
jns
dec
cmp
lods
out
push
fimuls
outsl
push
repnz
in
xchg
mov
repz
and
jne
xor
sub
shl
cwtl
test
es
shl
bound
pop
or
jb
rcrl
sahf
fst
sar
xor
xchg
ljmp
push
jne
idivl
stos
aas
cwtl
dec
imul
xchg
cwtl
xchg
mov
and
das
xor
pop
lcall
mov
fcmovb
leave
push
pop
mov
lods
mov
sub
test
aas
pop
mov
and
or
pop
cs
popf
sarb
scas
shrb
sub
fists
mov
jmp
imul
daa
and
cmc
jne
pop
sbb
cltd
pop
fwait
xor
jge
test
aas
xor
and
divl
lret
pop
test
jle
test
or
xor
xchg
or
dec
pop
fwait
or
xor
test
mov
lods
insl
popa
mov
mov
fmuls
pop
dec
or
addl
fnsave
xchg
mov
repnz
push
aam
ffreep
dec
fnstsw
inc
rcrb
testl
clc
insb
cmpsl
sub
pushf
int3
sub
clc
shlb
mov
lods
jl
dec
movsb
push
push
mov
cmp
push
pop
jl
testb
aas
mov
xchg
rcl
mov
loop
movsl
add
push
outsb
lcall
mov
mov
push
or
sti
xchg
add
push
movsb
inc
mov
daa
lock
sbb
xchg
jge
mov
sub
mov
fwait
xchg
arpl
xchg
inc
pusha
imulb
xor
pop
insl
xor
movsl
andl
pop
testb
mov
stos
xchg
bound
pop
shl
xor
mov
mov
jb
pop
push
pop
imul
sbb
push
popf
xchg
pop
divps
in
jg
inc
insl
call
fwait
pop
sub
movsl
loopne
adc
push
xlat
pushl
mov
mov
sub
pushf
rcr
jge
push
out
xchg
popa
loopne
aad
scas
rcrl
pop
call
popf
jl
lods
bound
insb
mov
push
mov
mov
data16
mov
jecxz
roll
nop
lock
lret
xchg
xchg
jg
pop
mov
lea
push
sbb
sbb
lods
sub
subl
push
mov
mov
adc
push
inc
imul
push
insl
fidivrs
jbe
dec
cmp
xchg
ds
cmp
add
das
add
jp
std
loop
cmp
ss
jae
mov
bound
bound
int3
xor
xchg
inc
and
and
lret
push
pop
daa
lahf
mov
inc
repnz
or
pop
jmp
cmp
and
shl
fs
pop
repnz
addb
ja
loop
cltd
pop
mov
push
ds
mov
aas
jo
sbb
mov
or
cli
jns
sbb
pop
sub
imul
cmp
xchg
popf
cli
add
js
outsb
lods
addr16
sbb
mov
testb
aad
inc
aaa
xchg
stos
movsb
pop
imul
or
or
out
mov
out
mov
inc
inc
out
sahf
dec
xor
movsb
test
rcr
xchg
sub
ss
in
jle
loop
adc
lods
push
fadd
out
loop
mov
es
ljmp
mov
push
inc
sbb
mov
fs
and
sub
xlat
ficoms
dec
push
repz
lock
or
cmp
push
push
add
adc
push
bound
ret
scas
rorb
fstpl
pop
iret
xchg
sub
jae
sti
rclb
js
jo
and
sahf
cmpsl
sbb
jb
jge
or
cmp
hlt
movsb
pop
cmp
stc
out
jne
xor
xlat
inc
jns
push
loope
shl
xchg
or
adc
cmp
mov
jne
cmp
int3
jo
mov
dec
das
inc
sbb
cmc
xchg
mov
shr
cmp
shlb
sbb
mov
leave
cli
aam
push
les
inc
push
dec
and
jno
pusha
sbb
sti
pusha
bound
jae
inc
push
push
cld
movsl
les
cmp
sbb
xor
jp
or
and
int
cltd
rclb
dec
stc
test
aam
dec
add
insb
and
xlat
or
imulb
adc
or
fists
mov
add
lcall
js
ja
mov
out
xor
call
sub
gs
lcall
adc
stos
push
mov
iret
call
cmp
xchg
sahf
inc
inc
push
dec
fdiv
dec
push
xlat
adc
or
js
cmp
mov
cmp
addr16
sbb
in
push
xchg
pop
add
cld
cmp
mov
mov
inc
lods
les
das
pop
inc
lret
daa
cwtl
aam
push
or
mov
jle
xorb
imul
pop
push
iret
xchg
test
mov
jbe
iret
pop
loope
aam
pop
je
outsb
data16
stos
aam
pop
add
stc
jae
arpl
imul
call
imul
fneni(8087
imul
push
rclb
in
inc
mov
insl
clc
ss
mov
sbb
repz
adc
sahf
call
add
hlt
sub
fmull
add
sbb
add
mov
pop
jmp
adc
ds
xor
in
insl
sub
ret
fcoms
inc
orl
mov
aaa
cmp
ljmp
cwtl
dec
jnp
sbb
jae
scas
push
push
pusha
repnz
or
test
sbb
or
and
pop
jae
ficoml
filds
scas
mov
push
mov
fstps
pop
out
test
cmp
test
rcrb
xchg
adc
imul
flds
sub
and
lcall
roll
add
out
mov
push
dec
fsub
mov
popa
push
inc
sahf
sbb
mov
lahf
xor
add
stc
jmp
sbb
xchg
mov
std
cmp
adc
test
push
popa
sub
cmp
scas
or
and
pop
int
fsubrs
xchg
rcll
sub
enter
ljmp
xchg
xchg
jecxz
or
sti
push
or
jg
cmp
push
jmp
mov
cmp
daa
sbb
push
cmp
or
in
mov
adc
test
and
push
in
movsb
cwtl
sbb
bound
cmpsb
lods
popf
nop
inc
xor
or
jmp
ret
push
mov
cmp
sub
mov
jp
pcmpeqd
inc
shl
mov
mov
lret
hlt
or
insb
mov
mov
or
dec
mov
fwait
adc
push
orl
jle
test
cmc
and
pop
sub
test
mov
stc
bound
sub
xchg
cmp
mov
sarb
jmp
jmp
jnp
mov
stc
jno
adc
jle
push
inc
pop
scas
pop
icebp
and
mov
inc
out
aad
cmpl
pusha
cltd
into
cltd
jge
out
mov
test
testl
mov
mov
lea
or
jle
adc
sti
pslld
cli
js
lods
nop
repnz
js
inc
aaa
sub
pop
jl
loopne
mov
das
adc
test
out
loopne
loope
xor
stos
lea
or
lahf
and
ret
fstpl
test
loope
les
push
sar
cmp
push
xor
sbb
xchg
les
sbb
or
loopne
jae
imul
dec
jns
into
mov
dec
jnp
rorl
cltd
add
xchg
lds
pop
sahf
xor
sbb
adc
dec
xor
sbb
jbe,pn
inc
dec
subl
leave
insl
inc
data16
mov
stos
outsb
pushf
cmovnp
fs
inc
cmp
js
mov
lret
notl
pop
add
xor
movsb
repz
addl
jbe
mov
in
aam
popf
leave
or
xchg
jbe
mov
add
out
inc
stos
mov
xchg
sbb
das
mov
mov
outsl
inc
mov
test
pop
and
ret
dec
and
sarb
mov
call
fcompl
aam
pop
add
jno
cmp
jg
out
xchg
mov
xor
pop
or
and
push
mov
xlat
aas
push
push
cmpb
inc
mov
push
rorl
inc
lock
add
out
xchg
jle
loope
jno
out
movsl
push
lcall
add
jmp
pop
cli
or
ret
pusha
xchg
push
inc
or
and
pop
cmpsl
cld
push
mov
dec
mov
mov
and
lock
jmp
sahf
xchg
das
push
ret
arpl
punpckhbw
xchg
pop
std
xor
mov
fnsave
cwtl
jb
in
test
call
sbb
movsb
inc
lret
das
fcmovb
outsl
lcall
mov
push
loopne
dec
aaa
pop
sbb
pop
push
faddp
dec
cld
pushf
jne
out
mov
bswap
fmulp
mov
adc
enter
push
or
and
mov
mov
xlat
cli
pop
mov
adc
leave
push
xor
in
or
inc
dec
orb
int3
push
add
in
mov
dec
movsb
mov
lock
stos
lods
pusha
sub
pop
pop
out
fcoms
mov
fmull
sbb
mov
pusha
int
sbb
daa
inc
mov
push
mov
aam
add
lret
movsb
mov
imul
sbb
js
and
add
xor
and
shlb
fistps
or
inc
movsl
push
rcl
push
insl
xchg
dec
jg
cmpb
pop
push
xchg
push
xchg
subl
or
scas
jmp
and
addb
lret
sub
pop
pop
dec
call
fnstcw
xlat
mov
repz
jo,pt
pop
push
push
adc
popf
add
mov
adc
add
repz
sbb
adc
out
mov
rorb
xchg
lea
push
jno
adc
push
mov
pop
hlt
sub
sbb
sti
inc
add
mov
jge
jg
mov
ds
fists
xchg
outsl
or
shlb
mov
mov
xor
loop
ss
lret
fs
dec
jno
inc
pop
aas
push
lret
fxch
sub
dec
out
stos
fisttpll
and
cli
jmp
dec
xchg
es
outsb
inc
or
scas
pop
sbb
subl
pop
push
insl
imul
and
sbb
jle
andl
sar
inc
fstps
xchg
imull
inc
test
cmpsl
xchg
or
lcall
xor
or
test
cld
sbb
add
insb
mov
push
incl
pandn
sbb
mov
sbb
add
loope
or
sub
mov
jmp
lret
ss
fmul
and
outsb
fs
loop
js
mov
and
lock
lahf
bound
mov
cmpsb
xchg
int3
xchg
inc
inc
cwtl
into
mov
movsl
jl
sbbb
mov
insb
inc
mov
int
adc
sub
xchg
push
outsb
ja
push
mov
cmpsb
mov
in
test
in
jo
dec
mov
xor
add
adc
lcall
push
dec
test
lock
sbb
aaa
xor
int
int3
mov
xchg
ret
adc
out
out
psubb
jecxz
into
call
aam
aam
push
outsb
out
icebp
sub
in
imul
pop
cmp
movsl
xor
or
mov
andb
int
daa
pop
test
test
in
pop
add
inc
insb
repnz
cmp
cmc
cmp
test
push
pop
clc
loopne
out
dec
test
cmp
dec
pop
arpl
mov
jecxz
shrb
lret
xchg
into
adc
or
ret
push
or
inc
mov
ljmp
xchg
xchg
adc
xchg
or
adc
dec
jg
rcrl
bound
xchg
mov
push
mov
stos
inc
loope
pop
mov
jnp
inc
stc
mov
call
pop
lock
pop
scas
xchg
jns
jo
test
sbb
cs
stc
mov
fldenv
inc
rclb
adc
cmp
pop
cwtl
mov
or
xor
inc
mov
sbb
out
aaa
imul
cmp
loopne
xadd
sbb
sub
loop
call
stc
bound
rolb
lcall
clc
or
jmp
fisubrl
aas
pushf
jno
push
inc
fistl
ljmp
in
aam
mov
push
adc
xchg
lock
std
popf
add
sub
aam
fwait
je
call
in
scas
cmpb
xlat
jp
xchg
pop
jo
pop
or
cmp
inc
add
jmp
insb
inc
mov
test
sbb
sub
sti
sbb
fists
xchg
dec
ret
shrl
fwait
pop
fistpl
arpl
jbe
lcall
fs
mov
cs
mov
xchg
adc
popl
fucom
lahf
sbb
mov
lahf
aaa
mov
scas
fwait
mov
aam
pop
addr16
fldcw
idiv
es
adc
cmpl
inc
jo
jo
adc
xor
pushf
fs
fs
jb
test
add
andb
push
ret
dec
stos
nop
fnstsw
repz
fsts
xchg
out
xor
dec
mov
mov
rcll
jb
and
inc
cwtl
je
inc
mov
xchg
fs
inc
mov
fmulp
icebp
cmp
dec
fnstcw
mov
cld
es
std
test
cli
push
lock
sahf
adcb
test
and
dec
mov
xor
xor
sbb
out
sub
fxch
push
call
cmp
pop
push
xor
mov
pop
into
fldt
pop
jb
add
sub
mov
lahf
and
in
jb
cmpsb
cmpsl
jae
jae
pushf
jmp
push
leave
insl
jo
add
stc
in
in
or
jbe
fdivrl
add
mov
loop
mov
push
lret
jl
jbe
pushf
push
mov
or
inc
imul
in
out
incb
pushl
xchg
cmp
scas
xlat
add
orl
sub
dec
mov
jecxz
xor
sahf
dec
or
mov
test
stc
fs
push
mov
test
jb
fadds
sub
fistpl
inc
mov
js
test
xchg
outsb
fstpl
or
cmc
rep
roll
jo
fimull
popf
lods
inc
xlat
out
inc
jns
insl
xchg
sti
sahf
stc
or
jo,pt
xchg
lret
insb
js
shl
jge
jbe
ja
cmc
movsb
movsb
ljmp
bound
fsubl
xor
cwtl
data16
xor
adc
stc
xchg
lahf
ret
jecxz
push
daa
and
sub
xor
loopne
push
adc
aaa
xchg
push
nopl
outsl
fcmovb
arpl
mov
movsl
or
std
popa
addr16
notb
fldenv
pop
cmc
add
pop
aad
cmc
jp
inc
dec
mov
inc
call
xchg
in
push
sbb
pop
add
aaa
mov
pop
cmp
icebp
ss
sub
mov
mov
test
cwtl
ja
ret
sbb
add
mov
jl
xor
sub
sub
sub
into
sahf
aaa
ret
xor
mov
adc
adc
movsb
xchg
call
imul
pop
scas
add
ret
rolb
ljmp
rorl
push
push
aam
adc
fwait
in
inc
jne
push
mov
test
iret
pop
inc
xor
lret
push
sbb
hlt
test
movsl
into
popf
dec
xchg
fcom
add
dec
idiv
in
cmp
test
out
in
mov
adc
fs
mov
sbb
or
and
dec
dec
sbb
aaa
loope
push
jb
add
icebp
inc
lea
in
or
adc
into
pop
push
push
das
dec
or
mov
rorb
pop
cwtl
lcall
dec
nop
push
insb
mov
imul
aaa
jae
rolb
fbld
sbb
dec
in
jmp
mov
mulb
add
fnsave
sarl
or
bound
add
pusha
mov
push
cmp
adc
mov
enter
sub
pop
imul
leave
sub
pop
shr
jbe
xchg
and
clc
mov
scas
loope
daa
mov
out
fiadds
jle
ljmp
xchg
push
sahf
lret
repz
and
daa
and
pop
loope
lods
add
mov
pop
bound
jl
pop
cwtl
mov
pop
push
cmp
sub
sub
xor
mov
pusha
lods
and
subl
sbbb
neg
inc
das
sbb
jns
mov
fsubr
push
xchg
aas
movsl
les
popf
adc
dec
sbb
ds
jp
pushf
mov
push
dec
jns
rcll
ret
shl
ret
mov
cld
loop
sub
xchg
mov
sti
inc
push
mov
or
xor
out
insl
lahf
dec
ds
xor
pusha
mov
mov
or
inc
jbe
jle
sub
push
sbb
shll
fwait
dec
fsts
push
popa
hlt
xchg
iret
xor
mov
dec
add
repnz
xor
or
out
das
movsl
push
or
and
inc
and
imul
in
push
out
subl
pusha
cmp
ficompl
sbb
pop
cli
push
or
sbb
call
inc
lods
dec
cmpl
je
js
or
sti
pop
mov
cwtl
lods
jb
js
aam
push
arpl
push
adc
xchg
sbb
shrl
cmp
fdivr
int3
xor
xor
or
mov
fistpll
jnp
inc
pop
sahf
pop
popf
clc
icebp
mov
and
sub
jbe
pop
jns
add
repnz
sub
add
lods
in
movsl
pop
int3
fiadds
mov
lea
add
adc
xchg
bnd
or
or
and
adc
mov
rorb
mov
dec
sub
out
cmp
mov
loope
xchg
ret
cmpsl
fnstcw
mov
shr
xor
repnz
inc
dec
push
call
iret
rcr
scas
mov
lahf
jno
popa
jg
dec
inc
pop
xor
and
adc
add
icebp
out
loope
ror
rcr
scas
mov
lahf
jno
popa
jg
dec
inc
pop
xor
and
adc
add
icebp
out
popa
call
rcr
scas
mov
lahf
jno
popa
jg
dec
inc
pop
xor
and
adc
add
icebp
out
loope
ror
rcr
scas
mov
lahf
jno
popa
aad
dec
inc
sub
push
shlb
loopne
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
sub
sbb
or
pop
std
add
adc
mov
or
sbb
sub
cmp
lret
sub
sbb
or
jl
insb
stos
pop
mov
lods
push
jp
or
cmp
lret
sub
add
adc
stos
inc
mov
xchg
sbb
pop
mov
mov
push
int3
mov
push
int
inc
ret
xorb
daa
pusha
cwtl
jge
xchg
xchg
rol
and
es
and
lock
lcall
cmp
inc
xchg
mov
mov
xor
inc
mov
fildll
dec
insb
pusha
sub
mov
jp
decl
or
xchg
in
test
insb
std
sub
sbb
cmp
pop
lods
repz
mov
in
xlat
push
mov
pop
scas
sbb
rclb
cmpsb
cltd
add
int
jecxz
in
jne
mov
dec
dec
xor
out
icebp
mov
lcall
xor
int3
rcrb
lea
data16
rorl
adc
and
fmull
cmp
cmp
or
push
mov
stos
inc
mov
mov
test
or
sbb
sub
cmp
lods
sbb
cmc
add
xor
and
aad
aam
leave
aas
jecxz
xchg
pop
mov
mov
insb
mov
pop
out
cmp
and
lds
iret
std
mov
inc
mov
test
lods
jge
jns
adc
dec
dec
mov
jp
or
sbb
sub
cmp
lret
sub
sbb
or
jl
insb
stos
pop
mov
lods
push
jp
or
sbb
sub
cmp
lret
stos
ja
test
pop
inc
push
movsb
stc
sub
andb
sub
push
icebp
mov
cmp
jno
dec
jns
lret
jbe
or
ja
fistpl
inc
out
mov
call
jg
sub
lret
mov
sub
outsb
test
cmp
mov
lds
out
je
mov
inc
fstp
sub
rcpps
push
into
jb
pop
nop
sti
ret
add
shrl
inc
fcomi
loope
jno
das
rolb
and
icebp
cltd
imul
sub
repz
push
mov
bound
xor
popf
in
test
add
xchg
cmp
aam
xchg
loope
sub
cmpl
xchg
xchg
pop
push
sbb
lods
scas
pop
xor
divb
and
lock
popl
or
fcoml
mov
or
lret
mov
subb
mov
sbb
daa
cmp
push
jmp
push
mov
idivb
pop
subb
pop
pop
loopne
call
pop
pop
inc
stos
mov
sub
cld
rorb
cli
cld
ror
scas
mov
add
pop
add
shr
inc
sahf
mov
gs
jns
lss
lea
cmp
pop
notb
pusha
daa
sub
mov
sbb
stos
ret
adc
pop
popf
adc
hlt
xchg
jnp
test
jae
js
test
lods
outsl
push
leave
scas
div
mov
and
add
repnz
subb
push
cmp
dec
fwait
mov
mov
das
loop
in
lock
outsb
icebp
fcmovnb
xchg
add
or
push
into
xor
sub
test
push
sbb
mov
mov
lods
mov
scas
lock
sbb
lcall
add
jecxz
out
push
rolb
js
pop
and
dec
cmp
sbb
cmp
jae
or
cmpsl
add
jae
or
xor
stc
stos
ja
clc
mov
loop,pt
sti
xchg
pusha
inc
add
hlt
pop
pop
cmp
fdivl
mov
out
movsl
push
xor
cmpsl
mov
imul
in
lret
mov
fldenv
pop
xor
popw
popa
test
sbb
mov
ror
sub
rolb
and
subl
nop
push
roll
cltd
pushw
xchg
sub
iret
mov
pushf
popa
mov
xchg
inc
jb
addb
mov
outsb
nop
adc
lock
incb
xor
sbb
pop
pushf
in
bound
mov
mov
dec
out
dec
mov
cli
and
shll
mov
mov
sub
clc
fwait
cltd
jns
imul
js
xchg
mov
gs
jmp
dec
in
call
sbb
mov
xor
movsb
fcomip
dec
nop
xlat
inc
adc
daa
or
adc
sahf
sub
iret
bswap
and
loop
xchg
outsl
pop
pop
and
push
repz
lahf
loope
xor
fs
or
inc
mov
ror
in
sub
mov
jo
repz
movd
sarl
cld
sub
xchg
cs
sar
mov
jmp
push
sbb
das
mov
dec
test
or
clc
cli
pushf
fabs
mov
jne
ja
mov
les
arpl
adc
lds
pop
mov
add
cld
and
inc
mov
dec
jmp
stos
pop
xchg
rcrb
outsl
pop
shrb
jecxz
mov
or
lods
std
add
dec
inc
pop
daa
dec
jo
test
jns
test
pop
sub
fnsave
lea
repnz
enter
sbb
fldt
cmp
xchg
scas
ret
push
and
test
cmp
inc
add
dec
movsb
mov
push
inc
or
js
out
mov
mov
dec
cwtl
int
xchg
icebp
cwtl
dec
jbe
mov
xchg
pop
outsl
scas
pop
add
popa
xchg
dec
fs
mov
addr16
in
dec
pop
jle
pusha
sub
pause
sbb
lock
ret
lock
addr16
cmp
push
sti
inc
sbb
or
push
out
push
fucomp
mov
pusha
pop
adc
pop
add
push
dec
scas
fistps
push
daa
movsl
sub
pop
push
cld
jmp
scas
and
push
inc
in
icebp
popl
mov
add
mov
mov
lods
mov
ret
arpl
ja
jb
loope
in
pop
adc
or
or
push
jns
mov
push
xor
sbb
scas
xchg
mov
movsl
sub
jnp
rcrb
call
push
lcall
idivl
mov
nop
cli
pop
adc
es
jb
xor
pop
jmp
sarb
xor
mov
mov
add
fisubl
adc
inc
xor
push
jno
add
mov
xchg
push
sti
mov
js
outsl
mov
cmpb
jge
add
push
xchg
mov
jg
pusha
dec
movl
push
cs
test
add
push
mov
pop
adc
test
mov
jge
lock
lds
pop
mov
pop
cbtw
push
ljmp
in
jp
js
add
insl
mov
and
int
pusha
cli
lea
prefetchwt1
or
add
enter
ss
mov
data16
push
or
pop
and
outsl
mov
lds
sbb
ret
or
inc
movntq
and
pushf
cs
or
and
shrb
jo
inc
xor
out
cmp
xchg
sub
in
lock
decl
dec
in
mov
mov
in
in
scas
inc
out
jle
mov
test
cmp
andl
or
insb
dec
int3
xchg
cmp
sti
cmp
gs
mov
test
sub
dec
int3
adc
fidivrl
push
cmp
shll
jb
push
dec
loopne
shrb
jge
sbb
mov
jp
dec
pop
adc
mov
lcall
jb
ljmp
clc
in
jge
xchg
inc
mov
les
or
adc
or
out
and
jecxz
adc
and
nop
stos
jle
aas
and
cmp
movsl
adc
test
loope
xchg
scas
imul
jb
lret
fwait
xchg
mov
pop
jl
pop
add
mov
clc
push
mov
adc
jmp
std
push
mov
mov
daa
sub
pop
xchg
shlb
mov
xchg
test
scas
loopne
jp
xor
sbb
adc
push
dec
mov
xor
dec
scas
imul
outsb
jge
jbe
addr16
loope
cli
insl
mov
push
jb
or
sti
rcl
ret
test
sub
push
stos
mulb
adc
ss
cli
add
fs
stc
sbb
lods
mov
xor
push
loopne
and
and
test
jbe
mov
pop
push
repnz
push
popa
and
mov
hlt
faddl
jl
mov
jle
scas
cli
jle
sbbl
pushf
dec
or
mov
outsb
stos
xor
sarl
stc
inc
mov
in
or
pop
add
dec
call
adc
cmp
jl
ss
insl
mov
sbb
mov
sub
adc
das
dec
scas
pop
sub
sbb
mov
mov
aad
sub
scas
mov
orl
test
test
bnd
fnstcw
ret
xor
outsb
adc
sti
out
repz
repnz
sub
jp
mov
xchg
pop
inc
cltd
imul
cmp
es
jbe
int3
bound
jns
xchg
push
gs
stos
jbe
lcall
adc
js
inc
mov
add
mov
sub
push
ficompl
sub
xchg
pop
in
out
inc
jmp
mov
in
jmp
pop
outsb
mov
xchg
xchg
arpl
jge
cld
pusha
fadds
jecxz
iret
mov
cld
dec
push
pop
xor
lcall
or
or
pop
test
push
mov
dec
jge
mov
int
sbb
stos
jns
jl
mulb
mov
adc
xchg
or
sub
test
and
ja
aaa
inc
or
or
jl
insl
nop
popa
mov
scas
scas
pop
daa
shll
ljmp
sahf
add
mov
mov
repz
into
xchg
out
fsubl
jge
cmp
fs
fiaddl
sub
shll
or
js
ja
push
clc
out
aaa
adc
sahf
into
jne
fisubrl
add
mov
loopne
mov
rorb
cwtl
incb
in
lds
popl
push
sar
imul
sbb
bound
mov
rcrl
cmpsl
shll
addr16
imul
adc
pop
push
sarl
imul
cltd
jl
pop
cmpsl
adc
cmp
or
int
push
mov
mov
mov
mov
lahf
loop
jle
imul
sahf
daa
cld
sub
xor
out
adc
pop
aad
jnp
in
cld
pop
pop
mov
or
add
js
stc
icebp
inc
push
movsb
mov
mov
inc
ret
or
jmp
mov
adc
lcall
mov
das
jmp
arpl
dec
clc
push
pop
push
cli
inc
lds
cltd
fsubs
scas
scas
mov
sub
rolb
cmc
sti
or
inc
stc
out
inc
leave
in
shrb
pusha
cltd
jecxz
ss
sbb
cs
and
insb
jo
cld
int3
adc
sbb
in
and
adc
pop
cmpsb
lahf
and
mov
faddl
fistl
roll
clc
cmpsb
ret
std
rcrl
mov
sbb
add
fmuls
mov
cltd
cmp
mov
xchg
adc
in
icebp
insl
or
cmp
xchg
loope
xor
dec
push
adc
out
push
mov
imul
inc
xor
mov
adc
mov
rorl
lret
test
mov
loope
jbe
add
ds
jae
test
scas
jne
mov
pop
push
inc
xchg
inc
and
faddp
push
xor
add
push
sub
mov
inc
jle
xor
out
std
lds
lcall
nop
dec
cmp
out
pop
bound
fildl
pop
mov
xchg
jle
mov
js,pt
int3
fdivl
sarl
adcb
xchg
sub
inc
inc
out
negl
outsl
pop
sbb
js
push
mov
pop
mov
mov
xlat
adc
and
int
in
in
pop
sbb
inc
fnstcw
fwait
xor
loopne
negb
inc
jbe
sti
push
insl
adc
mov
xchg
xchg
icebp
cmpsb
out
notb
mov
mov
lret
call
lahf
and
fucomi
pop
xchg
or
inc
sbb
js
xor
rcrl
roll
cmp
popa
jnp
push
out
push
lret
dec
rcrb
pop
xchg
faddl
cltd
xchg
jmp
jle
push
call
cmpsl
rol
cli
jb
cmp
or
push
cmc
and
out
es
and
repz
test
adc
or
cs
std
mov
fwait
push
dec
fs
je
adc
push
adc
cld
or
or
xchg
and
aam
cmpb
loopne
mov
mov
sub
rclb
loope
jg,pn
cltd
loope
sub
lds
clc
mov
imul
decl
daa
xor
pop
nop
push
inc
mov
popf
pop
lods
fwait
sbb
mov
stos
shr
data16
stos
push
sbb
arpl
loop
pop
nop
cmpsb
sub
lea
divb
icebp
xchg
fwait
and
add
das
dec
scas
push
cltd
mov
test
xchg
mov
mov
rol
mov
movsb
jmp
or
dec
lahf
iret
fildl
and
adc
fs
xorl
mulb
fisubrl
mov
ja
das
jo
jb
sub
jge
lret
cmc
ds
int
mov
int3
mov
test
or
mov
cwtl
aam
xor
mov
dec
push
pop
dec
sti
roll
xor
push
lds
mov
aam
mov
data16
push
and
das
mov
pop
sahf
daa
shrl
push
ss
mov
shll
add
enter
add
or
lcall
adc
shll
cs
jnp
pop
mov
lahf
pop
test
inc
mov
lods
iret
cmp
push
je
sarl
ss
sub
xchg
loop
inc
mov
inc
jle
xor
sbb
hlt
lods
insl
xorb
mov
fxch
xor
and
sub
cld
out
or
cmpsl
adc
dec
out
neg
sti
test
jmp
aam
mov
cmp
mov
inc
sbb
and
mov
adc
es
int
ljmp
jo
push
sbb
ds
inc
fnstcw
stc
out
xor
into
add
xchg
rol
outsl
sbb
jg
pop
jns
int
push
stos
mov
pop
out
dec
xchg
ss
push
mov
les
cmpsb
push
dec
je
lods
rorl
je
push
xor
mov
call
dec
inc
leave
pop
in
or
repnz
ss
push
cmp
sub
and
sub
jnp
inc
pop
xchg
test
aas
inc
dec
pop
jb
mov
bound
cmpsb
fldenv
fwait
idivl
and
cmovno
pop
mov
repnz
pop
mov
jmp
cld
sub
imul
or
adc
pop
imul
shl
add
insb
and
mov
jno
arpl
lods
repz
inc
clc
mov
loopne
lcall
xchg
xlat
mov
imul
popa
pop
ds
xorl
sub
sub
fcom
mov
js
push
lea
insb
push
dec
je
jge
in
testl
adc
pop
pop
adc
outsl
pop
lahf
mov
push
add
cmp
es
pop
xchg
push
sub
pop
sbb
dec
std
mov
repnz
dec
adc
call
mov
ds
loop
sub
xchg
dec
push
jp
lret
and
hlt
dec
adcb
or
stos
leave
in
outsl
sbb
bound
inc
into
movsl
pop
addr16
imul
imul
fiaddl
push
mov
xchg
sub
cmpsl
pop
cmp
and
test
and
icebp
fbstp
lcall
iret
sbb
je
pop
or
stc
lcall
add
sti
out
jge
xchg
movsl
ss
cli
lahf
or
shlb
xchg
sub
jnp
pusha
pop
cmpsl
sub
repz
js
jno
enter
subb
adc
test
loopne
aaa
mov
inc
into
inc
or
rorl
lods
xchg
xchg
dec
jg
sub
sti
inc
push
ljmp
insb
stc
sbb
dec
test
xchg
adc
loope,pt
in
inc
mov
dec
out
iret
in
mov
mov
test
push
mov
sbb
lcall
lock
std
icebp
pop
xchg
xchg
mov
sub
std
popf
rorl
and
push
jae
in
lds
inc
sti
dec
fsts
stos
pop
xchg
lods
pop
sarl
ds
daa
int3
dec
imul
arpl
or
pop
adc
push
ds
ffree
inc
ret
clc
std
sahf
add
jge
clc
cmpl
inc
testl
lret
outsb
orb
push
and
dec
inc
mov
fcmovnb
jge
mov
popf
dec
lods
push
pop
ljmp
inc
popf
out
js
push
cmpsl
mov
add
and
cmp
cmp
mov
dec
in
sub
add
xlat
xchg
insb
mov
inc
mov
adc
movsl
std
jp
jnp
mov
imul
repz
jbe
ja
or
ficoms
ljmp
inc
cmp
pushl
insl
popa
fistps
dec
sub
scas
and
mov
xor
scas
addr16
cmp
xor
mov
push
stos
ds
es
fisubrs
mov
jge
cmp
inc
arpl
ss
shll
xor
add
jecxz
rclb
adc
mov
xlat
push
mov
loope
mov
push
insl
pop
mov
adc
xor
lcall
adc
test
jo
adc
or
adc
aas
cmp
outsb
jecxz
dec
pop
dec
insb
cmp
lcall
dec
mov
inc
push
ljmp
sbb
jae
or
push
push
push
scas
insb
daa
out
cltd
and
pop
andl
inc
scas
mov
inc
or
push
push
stos
pop
sub
mov
insl
pop
out
sarb
jno
and
cmp
gs
jns
iret
adc
ss
movsl
xor
sbb
xor
into
jae
cli
outsl
in
test
aas
mov
sub
pushf
mov
cmpb
add
pop
loop
or
and
test
jae
into
add
xchg
mov
mov
pop
mov
inc
xor
push
popf
push
xor
aas
out
and
xchg
imul
push
xchg
xchg
push
test
pop
sub
mov
push
adc
jno,pn
add
dec
inc
unpckhps
ss
cmp
add
push
subb
sbb
pop
mov
cmp
popa
inc
sub
stos
ss
pop
je
dec
sub
es
test
int3
push
xchg
popa
int
divl
clc
pop
test
ror
jnp
pop
fisttps
iret
in
jle
mov
fisubl
stc
or
cmc
movl
outsl
push
les
ja
sti
xor
inc
ljmp
mov
and
lahf
fcmovnbe
and
jmp
bound
mov
ss
pusha
mov
xchg
sahf
out
ret
cmpsl
push
or
loop
pop
rolb
mov
fs
xchg
add
mov
ljmp
and
nop
shl
arpl
jecxz
inc
jns
in
mov
mov
jecxz
ret
inc
push
iret
sub
pop
or
and
ret
fidivs
fsub
pusha
sbb
xchg
dec
loope
xor
hlt
adc
lret
shlb
mov
jae
push
push
and
icebp
inc
insb
push
push
pop
outsl
sub
sbb
inc
add
cs
or
or
loop
cmp
hlt
mov
push
pop
adc
adc
lahf
xor
inc
cmpsl
sbb
sub
mov
sub
stos
aaa
xchg
arpl
jne
mov
jp
int3
sbb
add
stos
pop
fwait
gs
imul
jp
push
push
add
test
je
outsl
outsl
jno
lds
rclb
inc
or
dec
jl
mov
mov
insb
sbb
jmp
mov
rorl
nop
jns
cmpsl
mov
mov
xor
scas
or
adc
addr16
sub
mov
sbb
leave
arpl
push
jns
xchg
mov
jle
mov
dec
adc
dec
cs
pushf
cli
mov
jecxz
cmp
add
adc
xchg
cld
ret
sub
inc
mov
cltd
dec
pop
mov
clc
inc
lahf
mov
adc
and
jmp
mov
sub
ficomps
push
fwait
jne
loope
cmpsl
rcll
add
ja
jmp
movsb
xchg
aas
loope
ljmp
sub
jle
xor
fcomp
dec
mov
jl
int3
stos
and
fldl
xchg
jb
fwait
adc
cmpsl
repz
mov
pop
test
dec
and
jno
adc
xchg
pop
mov
mov
jb
les
lods
rcll
sti
mov
je
pop
adc
cmp
adc
adcb
inc
test
out
icebp
mov
nop
hlt
test
das
mov
mov
dec
inc
cmp
and
insl
loopne
test
push
sub
into
idivl
mov
add
dec
xor
leave
outsl
pop
lock
xor
fsubs
sbb
jmp
test
mov
mov
ror
ror
outsw
loop
movsl
mov
and
out
enter
push
std
ficompl
sbb
adc
mov
repz
or
jl
insb
stos
pop
mov
lods
push
jp
or
sbb
sub
cmp
lret
sub
sbb
or
jl
insb
stos
pop
mov
lods
push
jp
or
sbb
sub
cmp
lret
sub
sbb
or
jl
insb
stos
pop
mov
lods
push
jnp
or
sbb
sub
cmp
lret
sub
sbb
or
jl
insb
sub
mov
movsl
push
rcrb
shlb
ret
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
inc
orps
data16
jbe
outsb
aas
jns
push
or
lahf
mov
xchg
adc
cmpsb
out
mov
inc
orps
data16
jbe
push
dec
push
jg
outsl
ss
mov
out
neg
xchg
xchg
jmp
out
mov
inc
orps
data16
jbe
push
dec
push
jg
outsl
ss
outsb
int3
addb
mov
xorl
pop
rorl
cld
xchg
xor
push
fidivs
cld
jae
inc
fistps
xchg
adc
mov
lret
jmp
imul
sub
repz
notb
out
push
test
cmpsl
sbb
mov
add
ficompl
lds
jg
inc
push
lcall
aad
stos
scas
jbe
pop
pop
push
subl
mov
lcall
cmp
cmpsb
jnp
push
jecxz
mov
pop
inc
add
outsb
mov
cmp
scas
sbb
ss
xchg
int
pop
pop
cli
cmp
shlb
test
cmpsl
jae
fwait
adcb
iret
mov
inc
imul
mul
xchg
into
push
pushl
orps
data16
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
push
pop
cmovp
xor
push
sbb
data16
ret
mov
out
in
movsb
mov
push
outsl
dec
add
dec
and
push
outsl
ss
mov
ljmp
ret
out
out
packssdw
pop
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
orps
data16
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
stos
pop
test
or
test
jecxz
pop
jo
mulb
mov
jne
xchg
shlb
test
inc
fstl
repnz
and
xchg
ja
pop
lahf
imul
fdivrl
shll
push
sub
icebp
subb
xor
std
mov
jnp
push
js
loope
movsl
popa
mov
jge
dec
mov
test
loope
jl
insl
int3
pop
xchg
data16
and
and
orb
aam
das
imul
into
dec
jb
cld
sub
inc
adc
mov
popaw
btr
test
js
mov
mov
fwait
and
loop
les
movsl
mov
jp
inc
mov
mov
in
sub
mov
and
jle
xor
lea
mov
rcll
or
fmuls
add
divb
lahf
mov
scas
jl
popa
lea
cld
cmpsb
pop
es
xchg
stc
repnz
stos
fistl
js
cmp
or
push
stos
adc
int
repnz
mov
xchg
in
add
sti
cmp
call
and
fsubl
lock
imul
adc
fxch
pop
ja
mov
ds
mov
insb
shrb
mov
add
push
xchg
fstl
or
ja
cld
lret
xchg
insl
shl
sbb
mov
fildll
xor
pop
shlb
fists
jne
add
pop
mov
dec
imul
pop
in
adc
xlat
in
ljmp
push
iret
popf
and
lcall
dec
xor
ljmp
fs
std
imul
cli
nop
clc
in
fcmovne
repz
inc
movsl
adc
sbb
mov
orb
and
inc
scas
arpl
cli
test
cmpsl
ret
mov
nop
test
add
test
lock
stc
sbb
inc
cmp
fs
daa
lods
fmul
cmp
pop
jg
jbe
push
repnz
das
mov
test
test
repz
jmp
dec
mov
data16
cmp
popa
jg
fisubrs
jecxz
mov
sub
addr16
or
inc
cwtl
stc
test
ds
mov
mov
rcrb
rcr
mov
dec
lods
sti
jae
jge
adc
call
aad
adc
rcll
scas
stos
push
dec
xchg
cmp
jo
into
pushf
mov
cmc
sahf
aas
sbb
fnstsw
jae
add
add
cmp
lcall
stc
jno
lock
hlt
xor
cmp
xlat
les
out
cmpsb
jmp
jg
dec
dec
adc
gs
aaa
jne
stos
fstps
push
sub
leave
sbb
add
mov
dec
jns
sarb
iret
mov
stos
sti
fiadds
mov
clc
aaa
push
cs
pop
mov
mul
int3
adc
sub
jae
sub
je
adc
mov
mov
ror
es
lcall
neg
mov
lcall
jns
sahf
add
ret
out
mov
add
inc
fcmovbe
ja
negl
das
push
sub
cltd
cmp
sbb
mov
int
aad
sbb
push
adc
adc
mov
jne
lea
popf
in
stc
xchg
mov
das
leave
enter
loopne
popf
jge
and
mov
hlt
adc
out
mov
lahf
adc
andb
pop
lret
rcll
jns
lock
jge
mov
stos
cmp
sbb
fcoms
cmp
and
jns
add
out
jno
jecxz
loop
mov
dec
scas
movsl
dec
adc
push
test
sub
sbb
in
ljmp
stos
in
lcall
cmp
cmp
iret
and
insl
lock
cmc
iret
in
movsl
ret
inc
cmp
push
jnp
push
and
xor
mov
adc
fnsave
mov
int3
xchg
cs
outsb
mov
dec
cmp
push
mov
fdivl
fildl
adc
test
insl
push
in
xchg
mov
or
push
rcll
xor
int3
push
gs
mov
call
cmp
or
in
test
jne
lods
shll
jne
stc
pushf
adc
lret
fnsave
jae
mov
jmp
jno
pop
divb
adc
int3
in
push
mov
cs
mov
aam
pop
loopne
iret
aam
mov
ret
push
aas
pop
xchg
outsb
test
mov
lret
adc
gs
mov
lods
inc
movsl
or
call
mov
js
imul
popf
pop
xor
push
test
cld
adc
sbb
pop
lds
movsb
pop
cli
add
or
in
sub
test
mov
fnstenv
das
das
mov
adc
hlt
std
xlat
outsl
xor
mov
inc
bound
xchg
int3
lret
adc
and
xchg
push
cmpsb
mov
sbb
cltd
adc
dec
xor
pop
cmc
pusha
das
mov
leave
mov
lret
lods
es
xchg
push
sub
sbb
cmc
lods
mov
mov
fdiv
mov
adc
cmp
jl
mov
cmp
fimull
sti
test
push
push
mov
pop
xor
shlb
lea
mov
out
andb
sub
jge
jmp
out
addr16
in
or
fstpl
xor
mov
loopne
test
outsb
push
push
iret
inc
repz
push
mov
sti
popf
loop
bound
push
hlt
inc
mov
jbe
mov
push
inc
int3
aaa
cs
sub
jl
iret
out
nop
test
std
aas
push
xor
jb
fildl
ss
icebp
xchg
movsl
addl
lahf
insl
js
lahf
cltd
mov
pcmpeqb
ret
shrl
mov
popa
popa
jp
pushf
cli
or
repnz
stc
sub
imul
dec
jg
inc
loop
dec
fidivl
push
mov
pop
daa
test
or
fwait
test
das
push
mov
and
inc
lsl
imul
inc
ret
scas
cltd
enter
cli
in
bound
and
repz
std
mul
outsl
ds
adcl
pop
out
xchg
lock
js
lea
push
jb
mov
test
rcrl
cmc
xchg
repz
rorl
adc
xor
dec
sbb
scas
fcomi
push
sub
and
mov
mov
xor
lock
push
cmp
pop
xor
and
xor
mov
xor
pop
mov
lret
out
movsb
and
daa
cltd
inc
push
jne
lret
mov
push
push
xor
mov
pop
imul
shll
imul
cmp
push
inc
shl
adc
push
xor
cmp
ror
cwtl
cltd
xor
rcll
js
inc
push
out
lahf
sub
in
dec
inc
xchg
mov
jecxz
pop
mov
sub
sub
mov
jmp
cmp
cltd
xor
scas
adc
cmp
jo
cwtl
sbb
push
or
adc
ljmp
popl
sub
xchg
jp
xchg
addr16
adc
fisubrl
xchg
mov
sub
shl
push
into
jl
ds
xlat
iret
mov
daa
in
inc
xlat
stc
dec
mov
test
inc
repz
cmc
xorb
lods
jbe
sub
out
push
adc
lds
pop
sbb
xchg
ret
lds
fidivrl
stos
adc
imul
fisttpll
cmp
jbe
iret
push
outsl
enter
ret
fwait
cmp
imul
outsb
or
pop
std
push
aad
lret
cltd
cmp
fdiv
insb
imul
fldz
mov
xor
pop
add
dec
mov
imul
mov
add
xor
scas
dec
mov
cld
movsb
rorl
scas
fistpll
dec
jbe
das
test
add
sub
cmpsb
jbe
cmp
and
and
cmp
loop
push
xlat
stc
cmp
lret
test
mov
cmpsl
aad
xor
xchg
sub
fldenv
sahf
push
pop
mov
jbe
push
xchg
push
add
cli
adc
gs
pop
xor
idiv
sbb
lahf
push
jp
inc
popf
or
ficoml
cmp
inc
adc
fisttpl
mov
cmpsb
nop
xchg
jmp
jno
std
xor
cmpsl
aam
pop
xlat
jp
pop
movsl
cmp
sti
mov
loope
mov
ds
xchg
test
jne
imul
mov
movsb
cld
je
sub
inc
test
stc
pop
jp
mov
fildl
push
dec
pushf
ds
jne
mov
scas
movsb
pop
sub
xor
push
add
rcrl
sbb
js
adcb
clc
mov
or
add
and
inc
or
push
repz
lods
mov
addl
sbb
push
es
or
mov
in
pop
sub
cli
inc
dec
mov
mov
lret
out
arpl
fwait
mov
loop
mov
pop
cmc
mov
add
cmp
in
jge
sub
jno
adc
dec
xchg
jb
xchg
cs
mov
hlt
fdivp
mov
mov
mov
out
scas
rorb
pop
mov
push
lcall
sub
lds
xorb
cmpsb
test
or
outsb
sbb
xchg
std
out
addb
mov
adc
test
xor
lock
lcall
int3
outsl
rorl
add
dec
mov
in
add
and
out
in
dec
jno
sub
int3
and
add
cmpl
sbbl
xchg
jmp
push
icebp
sub
xrstor
and
or
cwtl
cmp
roll
jmp
inc
inc
pop
jne
jmp
sbb
shlb
fldcw
push
mov
scas
pop
and
mov
push
mov
enter
xchg
ret
dec
push
aam
push
push
adc
inc
addr16
jnp
jno
mov
hlt
inc
call
test
call
mov
sub
loop
sarl
call
sbb
adc
add
adc
or
or
pushf
cmp
mov
mov
jmp
mov
adc
hlt
jno
mov
sarl
ja
js
cmp
and
dec
pop
sub
sub
jl
cmp
sbbl
repz
mov
mov
cmp
iret
jnp
mov
js
push
subl
mov
cmp
mov
and
inc
out
inc
mov
jg
and
jl
jb
out
pop
or
push
bound
aad
pop
sahf
mov
add
push
aad
aaa
adc
push
jbe
and
dec
mov
mov
cld
js
xor
push
push
mov
and
in
or
outsb
pop
inc
sahf
or
mov
mov
adc
rcl
arpl
shl
push
cmpsl
inc
xchg
lret
dec
mov
inc
icebp
mov
aas
insl
jp
jmp
lret
xchg
loope
lea
mov
inc
mov
fs
pushf
mov
mov
pusha
mov
or
lds
test
pop
fcompl
mov
test
shr
adc
xchg
cmc
lods
sbbl
mov
test
push
mov
mov
jle
sbb
cmp
add
or
aam
pop
orb
fiaddl
test
sahf
xchg
inc
and
shll
jp
int
outsl
inc
dec
in
fists
aad
or
cmpsl
subl
lret
stos
pop
mov
sbbl
insb
cmp
pop
sub
mov
out
inc
push
pop
push
aaa
mov
sarl
imul
mov
push
pop
xor
xchg
aad
dec
inc
frstor
push
in
pop
push
adc
sbb
adc
sub
cltd
int
mov
sbb
lock
and
pop
icebp
jmp
stos
mov
cs
inc
adc
jbe
inc
inc
dec
add
leave
int
out
mov
adc
dec
stc
iret
jp
mov
pop
mov
cmpsl
imul
mov
jg
das
inc
jle
mov
mov
jb
jmp
cmp
pop
and
call
pop
dec
mull
inc
enter
mov
enter
lahf
cmp
cld
dec
stos
ja
movsb
ss
mov
loopne
orb
outsb
out
mov
int
cmovl
cs
out
xor
xor
loop
sbb
mov
ret
adc
int3
xor
jg
aad
int
shr
mov
xor
pushf
ljmp
jg
pop
js
cwtl
scas
cmp
jl
retw
fmull
leave
dec
fbstp
addr16
lahf
test
sub
and
repz
pushf
stc
mov
mov
ret
lea
out
inc
jnp
or
andb
cmp
add
mov
jmp
push
in
shll
or
jecxz
pop
mov
outsl
shlb
push
cmpsl
test
cmp
das
outsb
insb
jl
pop
or
je
sub
fsts
jl
inc
mov
popf
mov
mov
pushf
mov
pop
in
adc
mov
push
xchg
sbb
movb
sbb
xchg
cld
mov
add
lret
add
adc
ja
pop
addl
cmp
cmp
ja
popf
in
dec
aas
insl
pop
and
rcrl
sub
outsb
testb
sarl
daa
fld
imul
mov
icebp
ret
lahf
sub
pop
test
dec
lds
mov
test
fildl
xchg
push
inc
mov
arpl
cli
xchg
arpl
sub
pop
push
and
mov
adc
push
in
test
sbb
dec
push
mov
adc
ss
cmc
inc
repz
dec
testb
cmpsb
cld
sub
push
ss
jecxz
adc
jns
stc
cmpsb
out
adc
out
pop
icebp
sub
mov
adc
mov
loope
push
mov
movsb
xor
adc
inc
mov
popf
lahf
insl
xchg
shlb
mov
mov
lcall
mov
add
cmp
stos
add
sti
js
mov
mov
pop
cld
push
push
mov
xor
jb
enter
xchg
mov
aaa
mov
cld
jne
dec
pop
movsb
mov
lea
aam
sub
into
mov
dec
loopne
push
test
fcmovne
xchg
push
das
jp
std
imul
rol
ficomps
sti
mov
and
pop
add
cmp
jle
mulb
mov
inc
cli
push
cs
flds
adc
jno
push
dec
mov
push
mov
sbb
cli
mov
or
cmp
jge
stos
jns
lods
inc
jbe
sub
mov
inc
jnp
pop
pop
outsl
fcom
call
adc
in
mov
or
jns
cli
mov
sbb
aaa
pop
cmpsb
mov
loop
in
sub
cli
out
mov
aas
fbstp
or
sahf
insb
push
int
jbe
mov
xor
flds
pop
cwtl
jbe
sahf
and
cltd
flds
das
pop
cmp
scas
push
xor
lahf
shlb
cwtl
loope
enter
inc
cmp
mov
mov
mov
cmc
mov
and
adc
aaa
push
xchg
xor
push
push
inc
ficompl
fildl
push
push
pop
fs
push
sbb
jmp
js
es
and
sbb
clc
xor
sbb
ficoml
dec
fidivrs
cmpsl
fidivl
mov
scas
icebp
push
bsf
cltd
or
xchg
dec
pop
repz
popf
push
nop
pop
cmp
int3
inc
pop
hlt
sub
mov
aas
dec
adc
mov
and
pop
sarl
jb
pop
ja
pop
cmc
inc
mov
repz
in
shl
arpl
jecxz
pop
sbb
sbb
std
sub
shll
add
aad
test
jns
and
mov
push
pusha
push
rorb
xor
cmp
jb
adc
mov
loopne
bound
push
push
insb
xor
loope
push
dec
xchg
jno
faddl
call
imul
and
popa
std
jmp
stc
xchg
loop
rolb
lret
jns
loop
stos
xchg
pop
fmul
fs
sbb
enter
xchg
add
lock
mov
adc
sbb
adc
ret
xchg
shrl
pop
xor
popl
pop
das
cmp
adc
add
mov
mov
or
dec
push
in
lock
inc
lret
xor
popa
dec
int3
mov
mov
js
bound
in
mov
xchg
negb
mov
mov
pop
in
ret
out
and
out
arpl
push
out
dec
sub
sbb
push
pushf
xchg
add
jbe
xor
mov
push
aam
test
pop
jbe
mov
loopne
mov
les
adc
xchg
outsb
test
aas
imull
adc
xor
out
xchg
sbb
mov
dec
or
mov
and
sbb
fdivs
push
imul
clc
jno
lahf
sahf
movsl
imul
addl
dec
sbb
jmp
es
ficomps
stos
and
lret
sub
jmp
imul
pop
dec
add
flds
enter
mov
insl
add
push
iret
push
cwtl
mov
inc
dec
rcr
shrl
mov
cmpsl
sub
jo
pop
dec
fstpl
jmp
btr
xchg
pop
jne,pt
pop
repz
sahf
xchg
sbb
and
push
inc
stos
cmp
pop
rcl
ret
inc
jns
outsl
and
cmp
rclb
mov
test
mov
bnd
lods
dec
je
xchg
testb
fwait
adc
sub
pop
or
negl
das
jns
fsub
jle
add
mov
setp
divb
test
mov
fstpl
nop
sub
lcall
pop
xchg
push
push
ret
sbb
or
cmp
lahf
movsl
lock
mov
mov
push
sub
mov
xor
lret
adc
xor
lds
aam
out
mov
shlb
dec
movsl
notb
lods
imul
aas
push
arpl
mov
jae
pop
push
or
mov
xchg
addb
mov
push
movsb
xor
push
cmp
jmp
les
push
test
adc
loopne
call
pop
mov
mov
stos
test
xchg
and
add
sti
mov
hlt
movsl
fsubrl
dec
cld
inc
outsb
pop
hlt
movsl
arpl
ret
mov
dec
xor
inc
rolb
pop
aaa
repnz
repz
arpl
idivl
mov
mov
fisttpll
jno
cmp
inc
jmp
mov
push
push
mov
add
js
jecxz
mov
es
mov
cmpsb
inc
loope
cmp
aad
mov
pop
inc
adc
adc
insl
scas
pushf
push
loop
sbb
cmp
add
cmp
or
fiaddl
stc
add
fs
jnp
call
add
iret
mov
shr
out
push
test
xchg
repnz
sti
cmp
or
or
or
arpl
pop
imull
add
or
ret
pop
jbe
jb
stc
inc
push
or
call
push
sub
aas
lds
cmp
xchg
adc
or
js
adc
ss
add
mov
mov
je
lahf
inc
adc
or
jnp
loopne
add
pop
sti
push
hlt
sub
scas
in
mov
mov
lret
sub
daa
inc
adc
ret
test
adc
dec
iret
popa
and
inc
mov
ja
sub
mov
dec
pop
xchg
mov
xchg
push
inc
mov
cmp
xchg
mov
sub
movsb
inc
jns
cmc
les
aad
add
rcrb
sbb
sbb
add
push
fdivrl
dec
sbb
mov
fidivl
mov
mov
xor
popf
in
sbb
pop
adc
jne
and
popf
bound
and
jmp
daa
add
insb
xchg
xchg
stc
int3
mov
repnz
sti
pop
push
mov
xlat
pop
push
pop
pop
out
adcb
das
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
orps
data16
jbe
push
dec
push
jg
outsl
ss
mov
xchg
xchg
jmp
aas
out
jbe
push
dec
xchg
jg
outsl
ss
inc
mov
xchg
xchg
jmp
orps
data16
jbe
push
dec
push
jg
outsl
ss
jl
out
subl
dec
dec
pop
jge
insl
jnp
or
sbb
jne
sar
jmp
sti
popf
mov
mov
adc
jnp
or
pop
int
pushf
ljmp
mov
dec
mov
jnp
or
and
sub
clc
xchg
mov
jmp
pop
add
jge
add
sbb
push
ds
mov
add
jg
dec
mov
std
add
divb
sbb
mov
fstpt
out
bound
push
ljmp
jnp
aam
dec
aad
lock
clc
mov
int
call
je
cmpsl
jne
xchg
ja
and
sub
ret
fcmovnu
aaa
int
jns
adc
fwait
lea
fisubrs
movsb
pop
xchg
lock
addb
std
xor
into
std
adc
sti
fcomp
lea
mov
aad
jae
inc
in
ret
mov
lret
leave
fbstp
add
lcall
push
dec
sbb
imul
or
cmp
lret
push
fisttpl
mov
std
xor
aas
and
sub
outsl
dec
dec
sub
ret
mov
aam
enter
sub
mov
sbb
pop
enter
mov
mov
or
xor
and
sbb
add
or
cmp
lret
int
std
jmp
sti
popf
mov
mov
jge
insl
jnp
or
cmp
lret
int
std
jmp
sti
popf
mov
mov
mov
in
push
jl
fbstp
sub
call
or
and
bound
pushf
into
or
aam
insb
loop
xor
xchg
pop
sbb
jecxz
notl
sbb
divl
adc
faddp
aas
int3
mov
add
add
jle
adc
dec
pop
xchg
add
push
pop
mov
popl
inc
repnz
sub
push
inc
xchg
fisttps
xor
lret
nop
pop
dec
scas
fs
jae
dec
push
pop
cmc
adc
adc
stc
lret
and
mov
imul
cmp
sahf
push
test
xchg
inc
inc
jo
jbe
movsb
jne
fistpl
mov
shl
xchg
mov
ljmp
pop
add
ss
sbb
repnz
xor
ret
rcrb
dec
popf
aam
leave
rorl
dec
cmp
out
sbb
sahf
push
mov
push
into
pop
push
popf
sub
mov
in
stos
sub
push
in
pop
sbb
ljmp
mov
lock
roll
ret
lods
fwait
pop
addb
shr
enter
sbb
xchg
jp
and
cld
or
mov
xor
rcrb
and
push
movsl
arpl
movsl
out
mov
cmp
les
movsl
xchg
add
or
adc
jg
pusha
mov
xchg
nop
or
js
stos
or
inc
jmp
xlat
in
jp
dec
mov
pop
jbe
loop
inc
rcl
sub
mov
or
scas
inc
rolb
jge
jo
inc
xchg
test
xlat
mov
xchg
mov
mov
sti
loopne
jbe
dec
xchg
or
test
push
clc
pcmpgtw
or
cmp
aad
cs
out
pop
push
or
daa
sar
mov
daa
xor
mov
mov
sub
mov
push
mov
scas
xchg
scas
pop
xlat
pop
sub
fistl
xor
sbb
or
mov
es
xchg
rolb
cld
dec
loop
mov
cmpxchg
fistpl
jo
mov
scas
in
mov
push
jg
sahf
mov
pop
sub
das
mov
mov
push
scas
mov
xorb
idivl
test
mov
push
fsubrs
push
dec
adc
cmp
repnz
repnz
jg
lcall
sbb
mov
jb
pushl
mov
fs
push
daa
lret
lahf
cwtl
adc
fsubrl
dec
xchg
mov
xlat
mov
lods
popa
dec
push
mov
mov
push
inc
xchg
addl
mov
inc
push
in
out
enter
add
nop
jne
mov
mov
lods
rorb
or
leave
pop
mov
out
jae
rcll
push
lret
ret
push
add
and
call
cld
jo
and
enter
xchg
mov
and
lock
push
outsl
push
lea
and
popf
push
hlt
test
mov
insb
sbb
jno
fimuls
pop
and
push
pop
pop
cmp
out
mov
push
ja
mov
dec
and
stos
nop
ret
out
adc
adc
rolb
stc
or
les
mov
test
rolb
pop
xchg
push
push
jg
aas
rclb
mov
int
lcall
jno
mov
sahf
cmp
rcr
mov
jno
iret
cmp
xchg
dec
lret
mov
push
cs
mov
out
int
xchg
loope
mov
outsl
pop
cmpb
lock
lods
cmpb
mov
iret
mov
cmp
jmp
mov
sbb
xchg
repz
jne
push
sbb
cmp
mov
xor
pop
add
daa
pop
cwtl
pop
cltd
mov
mov
mov
out
fcomip
xchg
inc
sbb
and
dec
popa
mov
stos
mov
pop
xchg
mov
arpl
shll
sbb
push
sbb
into
sbb
mov
push
inc
ficoml
je
aad
push
ja
cmpsb
scas
or
inc
mov
sub
int
dec
cmp
fs
int
sahf
pop
cmp
cmpsl
mov
adc
jae
dec
into
pusha
xor
icebp
cmp
push
push
fwait
ja
add
loopne
push
ret
jb
adc
cmp
roll
and
mov
nop
push
test
test
dec
or
xchg
pop
xchg
fld
mov
cmc
dec
aad
jae
jae
lods
inc
add
testl
mov
mov
gs
mov
fwait
push
push
push
dec
dec
aaa
cmc
cmp
cld
push
adc
out
mov
js
xchg
xor
sub
shlb
push
or
outsl
dec
test
jmp
fcomip
bsr
mov
and
shll
lock
mov
xor
stos
xchg
inc
cld
inc
mov
xchg
insb
add
xor
cld
daa
mov
inc
fsts
dec
inc
vpminsw
pusha
dec
pop
mov
or
xchg
stos
mov
movsl
sub
mov
mov
xchg
dec
push
repz
mov
and
enter
pop
or
sub
sahf
pop
xchg
test
mov
loope
cltd
scas
add
pop
insl
lods
jns
out
ss
js
jle
mov
inc
jmp
inc
and
andb
bound
xchg
xchg
sub
retw
inc
push
push
jb
cmpsl
add
fiaddl
push
mov
orl
jmp
dec
test
pop
loope
xchg
mov
jl
sub
mov
gs
cmp
dec
outsl
mov
cmp
outsl
rorl
cwtl
les
repnz
int
adc
xor
sub
xor
js
mov
rorb
pushf
or
cli
fdivrs
jmp
mov
push
jl
dec
add
cmp
aam
out
insl
aaa
xor
push
pop
hlt
jb
add
xchg
test
in
dec
divb
js
cmp
cltd
mov
aad
lcall
repz
mov
out
shll
idivb
aam
std
test
outsb
lret
lods
jp
mov
jecxz
cmpsl
test
lea
shl
fistpll
jnp
ss
cmpsl
adc
sarb
dec
pusha
lea
fldenv
sub
cli
icebp
xchg
jae
clc
and
lret
ror
push
sub
and
push
nop
xor
mov
icebp
hlt
add
test
add
repz
stos
pop
cwtl
dec
push
cmp
ljmp
ret
popa
iret
cmp
aad
shrb
xor
ljmp
out
mov
arpl
std
std
sti
adc
orb
adc
cwtl
and
les
pop
ret
mov
rol
movsl
mov
xor
mov
loop
adc
cwtl
inc
xchg
xlat
adc
cwtl
jno
inc
rcrb
andb
dec
sub
inc
inc
out
sarb
ss
dec
add
push
int3
xchg
dec
cmp
cmp
pop
jno
testb
sti
loopne
fisttpl
adc
sarb
xor
sbb
lret
inc
jge
leave
or
sub
movsb
mov
roll
int
je
cmp
xchg
inc
xor
cltd
scas
xor
xor
xor
sub
add
xor
out
xchg
test
inc
loop
loopne
or
mov
aas
or
or
push
xchg
sbb
into
cmp
aam
stc
pop
add
fisubs
mov
inc
test
sarl
or
adc
js
iret
shrb
sub
shl
dec
lea
push
outsb
dec
and
andl
hlt
add
add
adc
mov
pushf
adc
pop
mov
push
mov
shrb
add
lret
leave
cli
inc
andb
xlat
cmpb
fldt
xchg
inc
sbbb
push
cmpsl
sub
pop
movsb
jne
test
push
mov
jg
pop
cs
hlt
out
div
jg
ret
mov
ja
cld
sub
test
mov
lahf
ficompl
dec
pop
push
repz
pop
cli
pop
xchg
inc
and
jp
jp
jns
test
rcll
inc
scas
int
sub
ret
out
call
push
insb
cmp
movsb
mov
xorl
push
rolb
movsl
clc
sbb
push
inc
mov
pop
sub
sbb
jmp
or
xlat
push
adc
jp
jbe
fisubrs
fsubl
mov
cmp
iret
jle
inc
or
pop
mov
cmpsb
lods
mov
shlb
mov
dec
movsl
mov
adc
loop
cli
xorb
rclb
and
xlat
pmulhuw
cwtl
push
push
ficomps
cs
addb
jae
leave
lea
add
add
aad
sbb
jecxz
leave
xchg
dec
xorl
fstps
arpl
fdivl
idivb
pop
call
mov
mov
lock
pop
pop
mov
lahf
in
cmp
loopne
dec
push
push
mov
repnz
pop
mov
bound
push
xlat
je
mov
lret
jg
dec
stos
sbb
mov
pushf
dec
scas
push
ret
popf
dec
nop
dec
lcall
jnp
addb
pushf
ds
adc
xor
mov
jne
fmuls
xor
sti
mov
dec
shlb
mov
ljmp
imul
jbe
sub
sub
test
stos
outsb
aad
jecxz
fnstcw
jb
fwait
adc
loop
xchg
pop
or
popf
adc
jmp
dec
push
adc
mov
and
int
fldcw
inc
sub
push
dec
xchg
scas
inc
loop
xchg
push
jg
fildll
push
gs
shll
test
xchg
jbe
inc
mov
sarl
jmp
imul
outsb
mov
add
or
dec
lret
push
imul
movsl
sti
or
icebp
fidivl
inc
aad
pop
mov
pop
fldenv
cmpsl
and
outsb
stos
bound
cli
push
jbe
js
int
rolb
lret
mov
jp
mov
sbb
mov
xchg
pop
pusha
and
adc
ljmp
dec
fisttps
cmp
push
das
aam
data16
pushf
adc
icebp
sbb
repz
dec
out
out
push
movsl
sbb
sbb
repz
and
into
dec
mulb
mov
loop
ss
mov
mov
xchg
gs
enter
negl
or
mov
adc
loope
push
outsl
shl
mov
in
sub
sub
pop
dec
loopne
add
retw
lock
and
popf
nop
dec
jo
push
pop
xor
cmp
sbb
test
sub
sub
xchg
inc
xlat
sahf
or
and
cltd
mov
enter
loopne
pop
add
sbb
push
xchg
mov
shll
in
xor
std
jbe
add
sarl
pop
icebp
xchg
in
popa
adc
pop
ss
cmp
dec
sub
cwtl
mov
mov
sbb
xchg
cmp
lea
xchg
push
fstp
sub
jne
sub
rcll
test
dec
and
loope
push
aaa
pop
push
movsb
popa
pusha
popa
test
dec
inc
and
insl
aas
insb
sub
jle
xchg
adc
andb
insb
ja
mov
sarb
scas
subl
arpl
enter
jle
jb
pop
sub
mov
outsl
popa
inc
dec
cmpsl
push
or
mov
scas
or
sbbl
loop
or
adc
lret
das
fisubrs
jbe
mov
repnz
addr16
mov
mov
dec
or
mov
dec
scas
mov
lods
adc
sub
enter
pop
jg
cwtl
enter
adc
aam
xchg
cmpsl
stos
xchg
roll
xchg
mov
aas
mov
rolb
and
sub
call
mov
cmp
popa
lret
mov
pushf
leave
mov
cmp
icebp
mov
sahf
jmp
cltd
hlt
mov
pop
sub
fcoml
std
dec
or
in
sub
sbb
xchg
mov
aas
fadds
and
push
loopne
add
out
int
mov
mov
loop
shlb
and
lds
and
in
popa
jo
mov
inc
out
xchg
mov
pop
push
lret
push
xor
sub
push
out
jne
add
in
das
mov
sub
pop
cld
mov
xor
fcmovbe
cmpsl
xor
ss
in
jno
arpl
adc
sub
imul
inc
sub
adc
lahf
jge
mov
icebp
mov
inc
fsubr
movsb
pop
nop
add
pop
adc
outsl
enter
cmp
add
aas
call
cmpb
push
pop
roll
xchg
out
cmp
ja
stos
iret
cs
fidivrl
mov
std
cli
nop
mov
adc
jmp
test
cwtl
mov
lea
scas
ret
dec
cmp
mov
bound
mov
xchg
insl
sub
je
inc
pop
aas
push
sbb
pop
mov
ret
fisttpll
adc
repz
lcall
add
ret
xor
pop
xchg
xor
loopne
dec
shll
insl
dec
insb
xor
or
adc
cmp
dec
pusha
imul
mov
scas
setnp
dec
fistps
mov
les
cmp
jno
adc
test
jb
test
sti
cli
push
cltd
push
pop
je
or
stos
inc
test
xlat
sub
orl
pushf
incl
push
in
adc
orl
aad
mov
iret
jecxz
rolb
test
adc
pusha
cmp
pushf
insl
pop
fwait
outsl
scas
push
jle
sbb
cltd
lea
xchg
sub
clc
cmp
leave
lods
bound
mov
mov
xchg
jecxz
and
cmp
dec
mov
sbb
or
push
insl
push
arpl
inc
cmpsb
int3
dec
out
clc
or
nop
dec
jae
or
mov
test
mov
sub
dec
mov
mov
dec
notl
sbb
in
in
fs
enter
xor
aad
or
jp
mov
and
sub
sub
cltd
dec
int
nop
mov
ja
lods
js
cltd
repnz
inc
ja
loope
ss
add
sub
pop
repz
push
das
insl
mov
test
cmp
or
jle
xor
or
sbb
adcl
push
daa
dec
pop
pop
push
xlat
aam
adc
jecxz
adc
or
adc
sahf
add
ja
adc
shlb
mov
js
hlt
push
rorl
cmp
les
negb
pop
xor
sbb
xchg
sbb
sub
push
iret
das
out
rorl
push
leave
mov
pop
test
test
cmp
cmp
pop
jp
sbb
fisubrs
xor
jl
test
mov
jno
inc
pushf
call
std
pop
fstpl
hlt
loopne
add
dec
push
into
cli
adc
cmp
ss
jns
test
jl
xchg
in
sahf
push
and
jecxz
fldl
or
leave
fstpl
ljmp
push
or
js
loope
mov
mov
addr16
pop
sti
ret
pop
out
pusha
insb
or
outsb
movsb
mov
push
scas
in
xor
xchg
sahf
sahf
and
mov
pop
rorl
pop
or
and
jp
pop
mov
cli
lahf
cmpsl
jns
in
add
xor
dec
test
popa
cmp
push
adc
dec
test
push
sub
ss
or
sub
pop
mov
jb
ds
xchg
mov
insl
xor
inc
pushf
mov
push
arpl
push
mov
out
inc
ljmp
negb
mov
lret
mov
pop
inc
mov
fstl
push
mov
shrb
es
test
and
sub
xor
test
pusha
dec
mov
push
adc
lahf
addr16
testb
cs
push
pop
es
addb
sub
push
mov
adc
lret
out
sbb
hlt
arpl
pushf
cmpsl
inc
jo,pt
mov
rcrb
inc
pop
add
inc
stos
shrl
sbb
pop
gs
or
jp
nop
lret
and
dec
xor
ficoml
xchg
mov
scas
aaa
xor
or
scas
lret
pusha
call
jle
aam
jo
cld
sub
mov
fnsave
jge
rcrb
push
cld
push
or
jg
pop
scas
mov
fsqrt
mov
hlt
inc
lea
pop
xchg
mov
pop
dec
dec
xchg
fadd
adc
xor
inc
stos
movl
notb
sbbb
lds
loop
push
sahf
xchg
stc
cmpsb
test
or
jecxz
push
cmp
mov
fstp
test
aad
stc
fsubs
push
les
push
cmc
lods
xor
loope
fdivs
xchg
xor
mov
jg
xor
push
fsts
sbbb
ret
pop
pop
leave
pushf
add
mov
fdivr
clc
sub
popf
inc
aas
jmp
movsb
out
pop
jb
push
jl
std
lcall
cmp
adc
clc
inc
out
call
fsubl
xchg
jle
pushl
je
dec
repz
arpl
fmuls
xchg
sbb
mov
lret
in
in
test
ret
or
sbbl
mov
ljmp
dec
ficoml
jecxz
mov
and
mov
cmp
ret
mov
cwtl
roll
jns
or
daa
js
jg
dec
movsb
loop
jge
fdivl
hlt
or
push
inc
loop
sub
xchg
xchg
push
insb
imul
add
pop
xlat
cmpsl
pop
inc
push
popf
mov
sbb
shll
xor
jmp
cmp
adc
mov
insl
stos
lea
inc
imulb
fidivrs
mov
negl
sbb
cmp
fwait
daa
cmc
add
sahf
and
js
fidivrs
es
mov
xchg
stos
daa
sub
xchg
push
loope
add
pop
ss
cmp
in
and
mov
aas
mov
push
push
test
cmp
pop
int
inc
xor
cs
inc
aad
call
cmp
mov
jle
inc
int
mov
es
int
and
adc
fsubrp
add
mov
outsl
dec
inc
mov
xor
sbb
xor
sti
rorb
pop
push
sarb
pop
shlb
fsubp
fcoml
insb
pop
cmp
add
faddl
xor
loope
pop
test
insb
or
test
mov
movsl
addr16
in
inc
into
dec
jne
imul
arpl
outsb
mov
dec
cmp
xchg
fnstenv
mov
sbb
loope
mov
out
repz
repnz
insb
fbld
or
push
xchg
mov
addr16
xor
sub
call
xchg
push
mov
dec
add
xchg
bound
mov
stos
dec
xchg
lcall
push
js
mov
push
dec
and
xor
mov
and
lods
jge
inc
cmp
es
adc
ljmp
jae
stos
push
xchg
clc
les
ja
addb
sbb
aad
xchg
adc
jnp
call
inc
mov
push
cmp
test
fldt
int
idivl
xchg
js
mov
iret
and
out
mov
add
sbb
or
das
imul
xchg
arpl
stos
test
aaa
dec
ja
and
jecxz
xor
popa
inc
push
inc
fcomps
lret
add
xor
and
fs
cmp
mov
ljmp
cmp
pop
out
mov
repnz
dec
and
orl
jns
xchg
mov
add
mov
call
cmpl
jae
or
ss
test
add
lahf
stos
sub
jbe
inc
push
jb
ds
mov
mov
in
add
push
mov
sbb
into
cmpsl
aad
pop
xchg
xchg
inc
jg
enter
out
daa
pop
sub
dec
jl
bound
pop
fidivrl
sbb
call
jecxz
cmp
push
shll
push
dec
aam
repz
dec
hlt
shll
xor
sbb
rcrl
xchg
fldl
xchg
jmp
sbb
out
js
mov
and
rorb
mov
add
insl
pop
cmp
add
loop
out
pop
into
mov
ljmp
add
and
xor
pusha
fsub
loopne
inc
std
mov
cmp
jnp
or
cmp
lret
int
std
jmp
sti
popf
mov
mov
jge
insl
jnp
or
cmp
lret
int
std
jmp
sti
popf
mov
mov
sbb
or
cmp
lret
int
or
mov
mov
daa
imul
or
sti
xor
jmp
mov
add
inc
inc
adc
gs
pop
mov
jp
push
leave
cmp
in
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
pop
in
sti
pop
test
cmp
pop
jg
std
jge
insl
fistps
or
test
mov
push
mov
jp
push
stc
jns
sbb
gs
adc
inc
inc
outsb
cs
insb
lods
sbb
jge
test
data16
in
sbb
lods
adc
filds
cld
sub
aad
test
movsl
or
nop
mov
xlat
xor
xchg
test
loopne
clc
ffree
js
test
mov
inc
sub
push
gs
lods
adc
fidivl
bound
aam
sarb
mov
cs
dec
adc
sahf
xchg
pop
cli
mov
popf
lds
adc
mov
cmp
sbb
loop
sub
mov
cli
ljmp
cmp
adc
shrb
movsl
or
dec
or
adc
sub
fsubr
int
std
pop
in
adc
mov
mov
add
jbe
jae
push
sub
xor
inc
lock
xlat
dec
fdivrs
xor
or
mov
or
cmp
insb
shll
mov
sbb
mov
lds
jge
dec
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
jge
dec
cmc
pop
test
mov
inc
in
jp
fisubrl
icebp
imul
in
xchg
adc
jle
shrl
fstps
push
jg
mov
lret
ja
jb
add
inc
fs
cltd
out
lahf
cltd
loop
sarb
mov
mov
push
ret
pop
jae
add
popf
push
test
jne
rclb
push
rorl
lods
cmc
repnz
insl
rol
pop
xor
inc
divl
jns
cs
sti
mov
jp
les
lcall
js
clc
xchg
cmp
hlt
push
pusha
shrb
xor
push
ljmp
sbb
sbb
push
push
dec
and
or
push
adc
inc
mov
pop
ja
stos
sbb
xchg
lret
mov
jo
pop
std
or
xchg
outsb
jmp
push
scas
or
sbb
and
mov
sbb
mov
das
rcrl
fcoms
dec
inc
push
arpl
jg
pop
jge
cmpsl
shr
aam
imulb
out
add
pop
ret
xor
jecxz
bound
and
vpaddsb
adc
dec
fdivrl
mov
daa
out
orb
out
xchg
loop
mov
add
xchg
mov
loop
lods
jp
cmp
or
mov
mov
dec
pop
fcmovnbe
xor
sahf
das
cwtl
cli
prefetch
insb
push
jnp
ljmp
imul
jbe
xchg
movb
and
repnz
push
rclb
in
ljmp
nop
and
enter
movsb
lds
cld
or
scas
fwait
scas
sbb
xacquire
negl
lret
dec
test
lcall
sub
xchg
cmp
mov
xchg
in
iret
xchg
clc
sbb
rorl
push
pop
scas
push
and
scas
dec
and
and
sbb
cmp
test
inc
sbb
cmc
inc
in
in
add
pmaxub
in
or
imul
ss
clc
movsb
pop
inc
jle
mov
push
ja
test
jmp
cmpsb
jns
dec
jge
orl
into
add
pusha
xor
fmuls
adc
mov
movsb
cld
lret
fcmovnbe
sub
push
ljmp
mov
and
mov
movsl
scas
testl
fs
sbb
pop
mov
push
loop
lods
movsl
cs
test
cmp
or
jbe
cwtl
and
mov
imul
outsb
xchg
sub
or
jne
scas
push
adc
lock
in
ret
dec
or
jno
or
notb
arpl
and
xchg
mov
out
xchg
in
and
push
push
push
and
adc
imul
push
imul
out
rcl
mov
cmp
and
jb
mov
xlat
xchg
fstl
in
insb
and
arpl
aas
push
adc
iret
cmpsb
stc
outsb
sub
dec
inc
xchg
jl
jns
sahf
fs
das
inc
or
fnstcw
pop
das
mulb
sub
je
xchg
inc
jmp
dec
mov
or
mov
hlt
jnp,pn
mov
sub
xchg
int3
imul
rol
push
xchg
aad
daa
push
rcrb
jbe
mov
mov
das
fs
test
add
aas
sub
lods
pop
fisubrl
call
and
xor
cmp
pop
xor
or
sub
mov
or
mov
sti
stos
sbb
shrb
jmp
fisttpl
xchg
fimuls
sbb
rcr
imul
insb
push
mov
ret
out
sub
outsb
cmp
adcl
add
push
cmp
inc
ret
mov
jne
aam
cmpsl
call
xchg
mov
cmpsb
sub
xchg
js
cmc
push
pop
sub
sub
add
adc
pop
shrb
ret
hlt
mov
nop
xchg
inc
ljmp
sahf
jnp
enter
adc
jge
ljmp
test
sub
xlat
mov
adc
xchg
pop
xchg
insl
imul
xor
and
ds
xor
and
scas
push
push
or
inc
addb
repnz
fwait
cs
jecxz
test
loop
cs
stc
or
test
cmpb
repz
pop
pop
push
sub
inc
xor
cmp
fucomi
jnp
mov
dec
rcr
cmc
xor
cmp
mov
mov
arpl
nop
jnp
fisubrl
jecxz
jo
add
rorb
xchg
popa
mov
mov
fmull
jnp
inc
adc
sub
inc
loopne
dec
nop
add
nop
dec
popf
movsl
mov
push
and
inc
les
and
sbb
cmpsb
sahf
push
xchg
cmp
jle
in
push
cmp
jecxz
ret
dec
push
test
dec
bound
sub
clc
add
insb
shlb
and
fnstenv
pop
jne
add
mov
push
leave
rcll
mov
enter
into
push
popa
ljmp
xchg
lcall
or
shlb
inc
xchg
push
xlat
frstor
test
in
rcrl
insl
pop
mov
in
ds
pop
popf
pop
test
or
mov
out
std
fcmovb
sarb
fwait
sub
cmpsl
lcall
mov
mov
and
aaa
xchg
jne
mov
test
loope
add
das
jmp
in
jb
jmp
inc
push
aaa
mov
pusha
xor
jmp
jbe
pop
lea
mov
mov
imul
imul
add
enter
jbe
pushf
lods
mov
outsb
push
pop
lods
pop
repnz
mov
lods
mov
and
clc
and
dec
aaa
dec
gs
lods
ja,pn
dec
jns
loope
or
and
inc
or
cmp
leave
repz
push
inc
ja
pop
pop
sbb
inc
movsl
xor
xor
fiaddl
loopne
mov
and
fsubs
xor
bound
xor
mov
outsl
push
pop
js
mov
xchg
xor
in
add
xor
ljmp
mov
xlat
dec
mov
xchg
xchg
pop
inc
sahf
insl
mul
xchg
cmp
xor
dec
mov
jnp
les
or
mov
sub
push
cmp
or
out
adcb
xor
cmpsb
mov
xlat
dec
dec
push
jnp
mov
inc
cmp
ss
movsb
or
adc
daa
sub
iret
jg
jns
mov
add
fistl
push
test
inc
addr16
push
jb
lea
mov
test
rorl
repnz
cmp
popf
js
inc
mov
stos
xchg
xlat
cmp
push
jl
aas
in
jo
div
sub
dec
jno
sbb
fwait
adc
xchg
aas
in
and
das
mov
arpl
xor
sub
dec
test
sub
add
sbb
push
lods
gs
mov
fcmovu
jecxz
inc
pusha
stc
mov
dec
repz
lods
loope
loopne
in
push
pop
out
daa
int3
movsl
sarl
ds
sarl
and
mov
mov
aam
sub
add
jecxz
jbe
lods
add
pop
fptan
dec
pop
scas
mov
lret
inc
push
nop
enter
psubusb
loopne
pop
mov
cmc
and
fmul
add
push
mov
ds
xor
jg
sub
icebp
dec
push
ss
mov
mov
jnp
prefetchnta
sbb
jecxz
pop
jmp
mov
jnp
pop
sbb
cmp
movsl
ljmp
push
imul
lock
and
out
add
jo
mov
mov
pop
scas
push
fisubs
out
fisttpl
pop
add
loopne
add
mov
cmc
aaa
lea
je
inc
cli
sbb
std
mov
adc
mov
cwtl
pop
imul
ds
dec
cwtl
pop
js
jne
cmpl
in
imul
cli
hlt
sbb
movsb
jbe
in
dec
hlt
and
cli
pmullw
sbb
mov
and
xlat
pushf
dec
add
gs
jecxz
loop
imul
leave
pop
mov
addr16
js
je
fcoml
in
mov
adc
out
sub
sbb
scas
out
leave
or
xorb
in
shlb
push
out
jnp
dec
jnp
inc
das
or
inc
outsl
mov
mov
out
xor
mov
insl
repnz
mov
pop
in
ffreep
arpl
mov
sbb
add
pushf
mulb
ret
lea
mov
int3
test
adc
adc
popf
in
cs
add
add
xchg
xor
out
in
mov
shlb
in
inc
jg
ret
add
cmp
mov
imul
fwait
xlat
test
in
mulb
mov
adc
into
add
cli
inc
adc
in
push
cmp
xchg
insl
push
sub
mov
repz
adc
push
rolb
in
push
rdtsc
mov
or
push
sub
sbb
rorl
xchg
loopne
xor
ficompl
xorb
outsl
sbb
cmpsb
mov
xor
cmp
je
mov
lods
loop
sub
xor
mov
call
fistl
xor
push
inc
mov
inc
int3
int3
jnp
fldl
iret
aas
ficomps
mov
inc
stos
push
push
lods
cmp
and
xor
xchg
adc
pop
mov
stc
add
push
adc
xor
aaa
mov
mov
sti
xlat
arpl
dec
mov
jb
pop
fldl
int3
mov
test
rcll
jae,pt
fsts
or
out
mov
cmp
hlt
mov
imul
aaa
cltd
sar
cmp
int
mov
popa
sbb
adc
inc
cmpsl
mull
out
imul
lea
or
cwtl
jle
cli
pusha
pop
fsub
outsl
int3
sbb
daa
popf
mov
inc
pop
xchg
mov
adc
out
push
jecxz
or
insb
ret
scas
xor
stos
dec
sub
pushf
cmovge
mov
mov
push
sarb
ret
xchg
sbb
repz
into
pop
pusha
adc
mov
pop
aas
scas
cmp
sub
insl
inc
stc
and
in
cmp
jg
popf
sbb
incl
push
xor
divl
rolb
jp
mov
xchg
xor
fisttpll
test
cmp
outsb
out
aam
sbbb
std
sbb
out
ds
jno
pop
ja
mulb
and
popa
mov
jmp
leave
stos
clc
dec
es
mov
inc
xlat
loop
enter
xor
fidivrs
pushf
sti
hlt
stc
test
xchg
push
add
pop
aas
hlt
xchg
adcb
out
gs
dec
movsl
mov
call
cs
subl
push
xchg
push
push
repnz
pop
lea
dec
mov
daa
sub
push
and
scas
pop
adc
mov
push
inc
out
mov
pop
lahf
mov
jg
movsb
mov
sahf
xor
xchg
adcl
shl
sahf
sub
adc
in
js
shlb
mov
adc
and
icebp
inc
cld
roll
leave
fldcw
loope
push
mov
pop
xchg
pop
pop
adc
xor
mov
jl
fmulp
pop
xchg
xchg
jmp
out
push
call
test
mov
cmp
repnz
jo
inc
and
int3
xor
pusha
pop
pusha
jmp
mov
cs
nop
dec
das
rclb
jmp
xor
cmpsl
and
dec
inc
sbb
scas
testb
packsswb
sub
or
cmpsl
orl
daa
xor
mov
xor
xor
int3
div
and
arpl
push
pushf
fadds
cmpl
ret
sbb
mov
dec
shrb
dec
data16
add
adc
ret
mulb
sub
jns
sbb
in
in
nop
push
cwtl
or
cmp
popf
arpl
ret
add
fcmovnbe
fisttpl
inc
js
add
cmp
cmp
ds
pop
jmp
inc
mov
movsb
fwait
repnz
arpl
xchg
mov
gs
bound
jo
pusha
jl
pop
dec
mov
lea
push
jbe
dec
mov
call
sbb
push
adc
out
loop
lret
mov
jae
push
push
jecxz
mov
add
pop
jge
fs
add
arpl
adc
pushf
lret
push
cmp
xchg
lea
cmc
mov
cmp
dec
or
jne
mov
idivb
inc
leave
jns
push
sbb
or
push
or
mov
cwtl
std
mov
jb
stc
inc
stc
xor
jge
out
sbb
mov
and
and
pop
outsl
cmp
repz
xchg
je
ljmp
loope
sub
rorb
pop
sub
jns
mov
fidivrl
mov
push
pop
jb
call
adc
lds
lock
or
add
xor
dec
outsl
mov
mov
ret
ficomps
cld
in
mov
movsb
roll
xchg
fisttpl
std
xor
out
lret
push
pop
push
mov
sbb
fstp
lahf
inc
and
fstp
xchg
dec
add
dec
jl
in
sti
jecxz
mov
fstps
mov
xor
repz
mov
lret
into
bound
dec
rcrb
lods
mov
mov
cltd
jge
cmp
jo
popf
fmul
mov
dec
push
out
jae
lea
int3
leave
xchg
rorb
fbstp
out
dec
leave
aad
push
sub
sub
mov
jnp
xchg
clc
lahf
mov
ja
pop
dec
into
dec
and
clc
jmp
shll
mov
ss
scas
ljmp
enter
sub
sbb
notb
negb
sbb
out
loope
inc
or
nop
pop
add
data16
jb
lods
ficoms
call
mov
sub
jge
shl
mov
bnd
aas
push
jmp
in
jne
mov
mov
mov
jmp
push
imul
mov
js
xchg
jo
bound
arpl
loope
push
je
iret
xorb
cwtl
xchg
roll
jecxz
outsb
ja
and
imul
fildll
push
daa
sbb
add
inc
jne
xchg
sub
pop
adc
adc
pop
outsl
fstl
push
movsb
int
push
cwtl
and
and
aas
lods
fldenv
out
pusha
cmp
jo
sahf
inc
mov
jno
jp,pt
dec
mov
mov
leave
cmc
mov
in
push
sti
pcmpgtb
push
mov
sbb
jp
fsub
lahf
sub
mov
inc
lods
pop
das
mov
jl
dec
add
mov
fsubs
inc
dec
lock
adc
jle
mov
add
mov
mov
aam
dec
aad
push
mov
out
ret
pop
jnp
mov
pop
stos
je
test
push
or
dec
jo
jmp
push
lret
sub
mov
and
mov
outsb
shll
lcall
mov
fs
xchg
mov
daa
lahf
test
push
pop
pop
inc
into
add
push
and
sahf
mov
mov
fcoml
in
sbb
lahf
sbb
loopne
pop
lods
scas
lds
xchg
shlb
push
or
xor
pop
repz
cli
jge
bound
xor
sub
add
push
fisubl
push
ret
push
fwait
push
hlt
mov
jge
jnp
jae
hlt
in
jle
mov
dec
idivb
lods
mov
lock
int
xor
pop
xor
mov
mov
xchg
add
add
scas
jmp
xor
inc
jbe
ljmp
adc
loopne
mov
mov
fldl
dec
sub
movsb
push
mov
sub
ja
mov
jno
cli
dec
push
and
adcl
adc
sbb
arpl
dec
orl
std
sbbl
mov
loopne
mov
sub
imul
dec
mov
adc
xor
inc
and
hlt
iret
std
xchg
sbb
arpl
push
sbb
sbb
int
fcomps
das
push
jl
fdivrs
pop
and
lret
imul
push
xor
inc
stos
out
and
test
mov
pop
xorl
add
sub
jg
ljmp
xchg
pop
add
scas
add
adcl
jg
dec
add
inc
cmovb
inc
sbb
or
mov
jp
aas
or
dec
scas
movsl
mov
jge
fldcw
jg
mov
mov
xchg
and
or
inc
xchg
jns
fsubrs
pusha
inc
in
adc
cmpsl
adc
fcoms
mov
dec
ds
leave
inc
out
push
imul
movsl
mov
popa
popa
adc
push
adc
mov
cmp
je
jp
sti
shrl
orl
inc
int
cwtl
sub
sub
sbb
jmp
icebp
in
aam
movsl
adc
push
rep
inc
jmp
fstpl
mov
mov
sub
mov
rclb
and
mov
jnp
cltd
cmp
je
stc
je
and
pop
inc
mov
in
pop
mov
test
into
xor
divb
shlb
sub
xchg
in
or
cltd
cmp
xchg
popa
inc
xchg
push
jmp
pushaw
mov
adc
sub
arpl
shl
gs
cs
xchg
or
aad
sub
sub
cmp
adc
loopne
lock
adc
and
cmpsb
mov
fistpl
pop
mov
jmp
pop
fwait
lock
jp
push
cmp
adc
sbb
into
std
xchg
imul
jecxz
lock
cmpsl
sub
in
fidivs
jbe
imull
ret
adcl
pop
or
cmp
and
push
bound
test
sbb
movsl
leave
xchg
adc
inc
mov
insb
fidivrl
inc
fwait
in
add
push
popf
lret
les
xchg
lea
or
loope
stc
add
incl
in
sbbb
pop
stos
fwait
js
sub
out
out
lret
sarb
int
fnsave
loope
inc
mov
xchg
add
lods
dec
xchg
sbb
cmp
jg
insb
add
cli
ret
lea
or
mov
popa
daa
mov
lods
insl
xchg
or
fucomp
mov
cmpsl
inc
sbb
aam
and
dec
lock
lock
flds
mov
mov
test
cmp
enter
out
adc
xor
popf
xchg
xchg
fiaddl
xchg
xchg
xchg
inc
xchg
std
clc
shll
or
jbe
mov
data16
jnp
ljmp
test
cmpsl
adc
icebp
xor
out
xor
adc
sub
and
pop
and
repnz
ja
std
or
or
sarb
add
pop
ficompl
xchg
pop
xchg
sub
repz
clc
negl
inc
adc
arpl
jns
add
mov
cmpl
mov
push
in
jns
frstor
pop
out
scas
push
fsubrs
in
fnsave
xor
dec
jae
pminub
jmp
push
loope
xor
mov
jmp
lea
ja
leave
mov
in
cmp
jne
mov
mov
xchg
and
or
cmp
shlb
cmp
int
or
icebp
pop
pop
or
dec
inc
mov
push
pop
popf
mov
xor
arpl
xor
push
sub
fbstp
std
std
or
inc
out
mov
stc
inc
jmp
das
adc
mov
cmpps
std
cwtl
loop
mov
ljmp
lds
movsb
lds
fsubrs
fistps
fisttpl
or
dec
bound
mov
daa
jmp
push
cmp
lods
mov
hlt
add
jbe
jns
test
fwait
jne
repnz
adc
cmp
dec
mov
xor
scas
das
push
pop
icebp
stos
mov
loope
push
mov
fisubl
out
imul
jg
xor
aad
out
mov
rolb
pop
pop
mov
test
repnz
insb
adc
adc
xchg
jmp
sbb
imull
clc
jecxz
cmc
iret
scas
loopne
push
in
das
test
push
inc
psubsb
mov
andb
and
mov
pop
jge
pushf
bound
pushf
mov
int3
xchg
push
das
stos
fbld
xchg
repz
lret
sbb
roll
add
pop
sub
dec
sub
scas
fsts
add
xor
inc
and
pusha
daa
stos
jge
rorl
gs
mov
mov
mov
mov
cmp
push
cs
repnz
ret
cmp
mov
adc
popf
lds
jge
dec
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
jge
dec
cmc
pop
test
mov
inc
in
push
mov
mov
fldl
lea
jge
dec
cmc
pop
test
mov
inc
in
push
std
fs
faddl
lods
adc
popf
cmp
cmc
sub
movsl
sbb
loop
cmp
sbb
ret
jbe
pusha
dec
hlt
in
aad
les
test
test
je
sub
inc
or
and
adc
add
hlt
mov
stos
mov
les
xchg
fiaddl
push
add
arpl
adc
add
hlt
mov
mov
sahf
mov
jmp
add
fs
sbb
insl
mov
mov
out
fistpl
xor
and
jmp
pop
xor
movsl
jno
addl
jne
lcall
icebp
cmpsb
gs
pop
sub
inc
lahf
imul
xor
jne
pop
fs
pop
fcmovb
mov
fs
in
pop
xor
or
cs
in
and
sub
push
imull
and
fwait
aad
in
jle
mov
add
pushf
inc
xchg
push
test
xor
clc
int3
cli
adc
fs
fsubp
roll
pop
ret
shlb
shlb
movsb
or
sub
inc
or
and
adc
add
hlt
mov
les
xchg
rolb
jg
outsl
ja
inc
or
popa
das
pushf
aad
stos
mov
lahf
call
cmpsb
sub
inc
and
gs
jp
and
jl,pn
cmpsb
into
mov
lods
jmp
ljmp
dec
sub
jle
dec
jne
and
adc
add
hlt
mov
les
xchg
fiaddl
push
sbb
jp
push
pop
add
hlt
mov
les
xchg
fiaddl
fstps
das
hlt
xchg
lock
jecxz
mov
fnsave
xchg
and
lea
fmulp
outsb
les
jnp
mov
add
or
imulb
arpl
lahf
lock
pop
pop
lods
mov
out
mov
fdivl
rorl
lods
je
push
jecxz
push
inc
mov
sub
js
fcmovbe
lods
mov
xor
outsl
inc
notb
pop
into
imul
insl
js
jnp
mov
outsl
lcall
jl
adc
xor
inc
adc
jl
jae
sbb
mov
mov
dec
sahf
int
cld
sbb
xchg
add
ja
rcr
in
pop
jne
pop
mov
sub
xor
mov
ljmp
xchg
xchg
loop
or
loop
in
jmp
sub
mov
cmp
xchg
clc
out
fs
bound
mov
inc
pop
sarl
mov
mov
or
sbb
xchg
pushf
push
pop
imul
add
sub
int
scas
and
bnd
lea
sarl
dec
in
mov
fstps
xor
aas
push
add
out
std
cltd
jmp
test
pushf
cltd
push
lods
shrb
pop
mov
out
repz
enter
pop
and
adc
pop
shl
rorb
push
sbb
outsl
pop
sub
push
sarb
xor
fmul
sarb
jnp
imul
add
cmp
cltd
xor
mov
ds
xor
stc
mov
inc
pop
and
push
jnp
les
jmp
in
push
jmp
test
lods
lahf
ror
sti
rcll
lea
adc
jge
loopne
add
sbb
push
pop
sub
jne
pop
scas
imul
mov
stos
pop
adc
xchg
imul
pushf
dec
inc
fildl
pop
mov
mov
aam
sbb
insb
jl
jmp
lcall
adc
mov
mov
jle
jmp
cmpsl
stos
jo
lea
adc
ss
fstps
cld
dec
push
xchg
xchg
and
push
adc
std
and
push
cltd
stc
addl
jl
cmpsb
popf
mov
pop
jo
stc
mulb
dec
lret
add
sahf
inc
test
ja
mov
mov
sub
movsb
lret
push
lcall
lea
lock
pop
lcall
cmpsb
cmpsl
popa
pop
xchg
ds
jae
xor
xor
adc
cmp
xor
fbld
stc
or
mov
cmp
lock
jno
fisttpl
add
jae
lods
pop
adc
pop
pop
mov
popa
and
push
insl
sbb
lds
dec
mov
jns
sub
pushf
js
push
xchg
stos
sub
cli
or
or
mov
mov
arpl
fidivl
inc
and
call
dec
pushf
call
mov
test
pop
notl
pop
sub
dec
mov
bound
fistpll
cmpsl
add
cmp
push
or
inc
cmp
ljmp
push
jo
shrl
icebp
pop
jo
repnz
ja
sub
adc
movsl
out
jmp
scas
mov
sbb
inc
mov
push
and
popf
and
daa
shll
xor
add
shll
mov
pop
push
cmpsb
push
mov
cmp
dec
pop
ret
dec
pushf
add
gs
inc
or
mov
leave
movsb
int3
add
negb
cli
mov
sahf
cld
sbb
pushf
into
mov
aaa
adc
scas
mov
outsb
sti
add
mov
push
lahf
fiadds
xlat
insl
mov
sbb
movsl
add
push
dec
aad
roll
push
and
mov
inc
jns
jmp
inc
lret
xor
push
sti
xor
dec
pop
sub
adc
out
enter
inc
add
xor
ss
out
sbb
inc
push
ljmp
addb
xlat
xchg
xchg
or
or
ss
add
ficompl
stc
into
je
jbe
sbb
repnz
andb
jns
in
das
dec
sub
cmp
fwait
pop
push
pop
pop
push
addb
xlat
adc
out
or
dec
adc
and
loopne
lods
sarl
lea
and
push
cld
xchg
aas
cli
fs
push
or
push
subl
inc
cwtl
out
xor
sbb
stos
jnp
insl
add
push
test
incb
shr
addl
pop
inc
js
dec
rcr
lock
sub
pop
and
cld
mov
push
mov
adc
into
in
mov
lods
push
and
divl
decb
add
mov
es
jp
lea
ljmp
imul
out
add
stc
imulb
sub
mov
mov
cltd
push
lcall
push
std
cmp
sub
add
loope
and
imul
jl
call
mov
pmuludq
pop
inc
push
xchg
push
es
out
adc
mov
dec
push
sbb
lds
inc
mov
jg
sbb
jnp
push
loope
mov
enterw
ds
addr16
pop
cld
enter
fisubs
test
mov
xchg
add
mov
pop
sub
addl
ror
cltd
dec
cmp
mov
cmp
inc
repnz
lcall
mov
mov
int3
jp
out
xchg
lods
pop
mov
test
in
ss
mov
ret
cmp
mov
aad
jbe
xchg
xor
mull
or
fmuls
mov
in
inc
and
ds
daa
outsl
dec
inc
imul
ljmp
inc
fildll
xor
or
adc
cltd
dec
jbe
push
or
cmpsb
dec
rcrb
test
cltd
mov
adc
pop
sti
adc
xlat
dec
js
fldl
or
arpl
dec
inc
mov
out
popf
adc
lahf
testb
add
imul
cwtl
sbb
pop
sub
mov
or
in
imul
ss
sub
scas
punpckldq
sub
and
jne
adc
xchg
cmc
jle
and
sbb
mov
mov
mov
das
popa
clc
jecxz
shrb
imul
mov
pop
or
lcall
xor
insl
mov
add
sbb
adc
pop
repz
in
jns
and
mov
and
adc
in
fsub
les
dec
dec
mov
xor
xlat
into
addb
inc
lcall
xorb
xor
loope
mov
jl
and
insb
std
mov
adc
das
in
leave
es
mov
mov
pushf
adc
incl
icebp
sub
pop
stos
lret
je
sbb
sub
xchg
clc
xchg
sbb
ret
inc
xor
cltd
mov
adc
dec
and
js
mov
dec
test
insb
je
inc
aad
xchg
aad
xchg
mov
iret
dec
or
adc
dec
cmp
and
dec
popa
movsb
mov
dec
shlb
pop
xor
and
xchg
outsb
jmp
scas
int
fists
mov
jp
sub
jb
mov
test
cli
xchg
repz
jo
dec
sub
mov
cs
add
rclb
scas
out
mov
push
or
test
rcr
cmp
cmc
xchg
ret
in
pop
shl
jno
mov
fdivr
pop
xbegin
rclb
int
cwtl
test
inc
and
and
xchg
fidivrs
notb
adc
pop
push
add
das
jb
push
insb
loop
dec
arpl
icebp
adc
xchg
pop
lds
dec
fsubrl
mov
adcl
mov
sbb
outsl
sti
loop
in
ds
lock
mov
xor
add
sahf
stos
aad
jl
outsl
xchg
sub
mov
push
jo
pop
push
ljmp
xchg
jl
mov
ss
ja
push
push
out
movsl
mov
insb
dec
jne
mull
inc
lahf
jmp
and
nop
jle
aam
add
shlb
cwtl
imull
add
leave
loop
pop
cmpsb
jp
xchg
idivb
jo
lds
jecxz
cwtl
jo,pn
ljmp
mov
jle
push
cwtl
sbb
addb
nop
imul
xor
jmp
iret
sbb
cmpsb
iret
jne
inc
jecxz
and
loope
fs
movsb
in
aad
aad
in
or
jge
push
cli
dec
test
xchg
xchg
pop
add
pop
jnp
or
and
jecxz
lods
xor
xor
dec
mov
mov
fbstp
sbb
in
adc
sahf
loop
lock
idivb
xor
scas
int3
cs
xchg
and
or
pop
add
inc
push
xchg
dec
cmp
mov
sub
aad
mov
xchg
pop
ss
mov
test
aad
jo
mov
cmp
stc
and
adc
xor
add
mov
pop
mov
jno
aas
bound
xlat
dec
push
xchg
fiadds
fidivrl
mov
push
mov
ja
adcb
jns
int
mov
sub
ficoms
pop
pop
outsb
je
dec
bound
push
imul
xchg
test
js
aas
xchg
mov
dec
js
into
les
jae
fucomip
cltd
and
aam
fnsave
es
or
js
ja
outsb
adc
pop
mov
or
rcr
je
rcr
mov
sub
adc
or
dec
dec
pop
out
orb
jbe
add
mov
sub
and
pop
ljmp
imul
movsb
mov
or
mov
adc
shrb
leave
mov
pop
jmp
push
popa
and
test
pop
cmpsb
mov
mov
test
jl
cmpsb
dec
and
push
inc
dec
xor
push
js
push
jle
add
pop
mov
lahf
xchg
ret
xchg
aad
cmp
cli
aas
push
dec
push
push
push
adcb
fucomi
inc
mov
mov
add
lret
test
jmp
and
dec
lds
out
cmp
cs
jne
xchg
adc
push
cmp
and
and
sub
push
jle,pn
jne
fidivs
inc
dec
push
inc
lock
push
pusha
sub
push
dec
insl
pop
lret
push
lods
insb
mov
sub
xchg
pop
shrb
leave
add
jg
mov
loopne
or
or
aad
pop
sub
fs
mov
xchg
xchg
sbb
test
cmp
cmp
jae
pop
jne
xchg
mov
int
out
stc
shrl
push
jecxz
push
roll
jno
ficomps
les
movsb
call
popf
sub
cmpb
mov
xor
es
or
mov
cmpsb
rolb
lret
pushf
scas
out
imulb
xchg
add
inc
jg
cld
loop
jmp
xchg
arpl
inc
sbb
stc
cmp
or
cmp
push
sahf
xor
sbb
int
ja
or
and
dec
movaps
push
dec
sarl
fiaddl
or
popa
loope
outsl
and
sti
in
jge
adc
cmp
jl
sbb
mov
fs
adc
xchg
sti
movb
adc
push
addl
xchg
push
sbb
out
bound
insb
les
incb
movsl
adc
decb
dec
loop
in
push
sbb
inc
scas
enter
shl
clc
push
sub
xchg
xchg
shl
inc
repz
repz
xor
and
mov
and
insb
or
rorl
sbb
int
ss
xchg
out
ret
inc
xor
adc
xor
dec
mov
shlb
sbb
inc
mov
or
sub
jns
jmp
add
jge
sbb
outsb
inc
jnp
cltd
loop
ret
aas
enter
push
xchg
fwait
adc
mov
daa
push
pop
push
lret
jo
mov
subl
arpl
mov
xchg
jb
sub
fidivs
test
mov
sbb
adc
out
cmp
xchg
lock
jle
stos
xlat
lea
sti
mov
fisubrl
in
rcl
adc
lods
ret
add
jp
cmpl
sub
mov
lock
or
add
scas
xor
jg
orl
sub
fwait
or
outsb
mov
ja
mov
push
pop
sbb
ss
mov
cld
into
pop
insl
aaa
outsb
push
loope
sub
xchg
inc
enter
jl
xchg
push
sub
pop
insl
cmp
pusha
test
into
add
lcall
sbb
repnz
and
mov
mov
cmp
sub
fcmovnu
bound
inc
mov
push
cmp
pop
pop
xor
pop
cmp
jp
hlt
aas
das
out
mov
das
pop
inc
push
shlb
sub
in
sahf
push
lahf
jmp
mov
testl
xor
test
lods
pop
xchg
roll
mov
adc
sub
mov
test
scas
push
pop
jne
ss
xlat
jge
mov
xor
xchg
mov
adc
es
pop
adc
push
aad
pop
ret
jb
insb
fdivrl
rcl
stc
pop
mov
xor
bound
jnp
ds
ficomps
popa
jecxz
test
mov
jb
rorb
jbe
cmpsb
add
xor
pop
xchg
sub
cs
mov
xchg
push
cmc
rcll
sub
add
mov
stos
pop
stc
cmp
stc
lods
neg
mov
jno
xor
push
lock
movsb
addl
xchg
add
imul
jne
lods
jbe
jno,pt
fcomps
repz
adc
shll
bnd
popf
push
jge
pop
insl
mov
jecxz
jmp
push
test
arpl
dec
lds
push
mov
sarb
test
icebp
cmpsb
jle
sahf
mov
aad
mov
repz
aaa
push
inc
outsb
hlt
leave
mov
xor
inc
xchg
mov
insb
dec
and
sbb
cmp
sub
mov
and
rorb
or
movsb
cmp
scas
fst
sbb
push
rcl
and
nop
sbb
enter
pop
mov
aad
xor
sarb
xchg
xor
hlt
xchg
getsec
daa
loopne
dec
mov
push
dec
imul
sbb
push
sub
inc
push
aaa
adc
sbb
dec
jb
push
sbb
ret
lcall
call
push
xchg
dec
call
pop
adc
icebp
cld
pop
ljmp
mov
xchg
jge
sar
mov
iret
lret
hlt
push
mov
dec
pushl
pushf
push
mov
dec
mov
inc
jl
lea
iret
pop
lret
out
test
push
cltd
lock
aaa
mov
sub
inc
jne
xchg
mov
loopne
jb
gs
mov
adcl
xchg
mov
cmp
int
inc
cwtl
addr16
push
dec
push
pop
lahf
xor
imul
daa
int3
sbb
or
adc
inc
jae
cmpsb
out
sbb
sub
stos
sbb
add
inc
loope
pop
outsl
out
pop
in
bound
mov
mov
or
addl
repz
int3
movsl
popa
nop
jmp
ficoms
inc
movsb
es
sti
data16
lea
data16
jl
xor
jp,pn
sar
mov
cmpsl
sahf
mov
jp
xor
lahf
jne
subb
adc
insb
ret
push
idivl
ja
in
and
push
push
mov
lock
bnd
in
jl
mov
jmp
outsl
push
xchg
scas
fsubr
lret
jns
xor
or
inc
mov
adc
xor
lods
js
js
adc
ljmp
sub
adc
mov
aaa
mov
push
jo
adc
mov
xchg
mov
mov
fchs
outsl
add
cmpsl
in
das
in
test
ret
jle
lcall
cmpb
dec
stos
leave
or
movsl
dec
fstpl
cwtl
test
int3
es
popa
sbb
mov
clc
add
rcrl
in
inc
cmp
inc
lods
jmp
repnz
pushf
jl
mov
xchg
mov
sti
xchg
sbb
cmp
cmpsl
das
add
sarb
cltd
ja
out
sbb
arpl
mov
add
push
xchg
insb
mov
sbb
cmpsb
xchg
adc
int
adc
aam
scas
sbb
mov
jne
clc
xor
mov
enter
jge
and
aaa
xor
pop
popa
adc
xor
nop
movsl
bound
xchg
sub
int
jecxz
mov
int3
pop
cmpsl
and
dec
mov
ljmp
ds
lods
cmp
test
xor
addr16
push
dec
sub
sbb
cs
fisubl
xchg
xlat
cltd
cmp
pop
pop
sbb
insb
dec
dec
push
inc
jl
in
mov
xchg
ja
fsubrs
out
adc
sbb
jnp
adc
add
notl
inc
fwait
data16
mov
adc
cmpsb
sub
sbb
jo
cmpsl
mov
push
pop
mov
dec
rclb
and
push
xchg
mov
push
add
mov
aas
sbb
jbe
filds
and
or
xchg
and
jmp
adc
xchg
fldenv
adc
add
sub
andl
mov
imul
sub
pop
xor
mov
ljmp
outsb
scas
ljmp
cld
xchg
bound
jne
jmp
out
aam
jb
testl
fwait
movsl
and
test
push
push
push
sub
mov
decl
pop
dec
fcomi
pop
cmp
jno
insl
in
daa
adc
insb
adc
daa
adc
fnstsw
xor
test
cmpsl
push
cmp
int
sub
mov
inc
ljmp
adc
push
ret
fs
cmpsb
leave
ss
adc
cmp
xor
jle
sbbl
fnstsw
mov
daa
out
inc
int3
or
adcl
inc
test
rcll
jg
lret
out
xchg
inc
jge
hlt
and
push
ds
jno
call
out
lods
ficomps
mov
pop
inc
pop
cld
cmpsb
jae
les
mov
pop
arpl
clc
stos
cld
xor
roll
les
sbb
dec
cld
sbb
jb
icebp
mov
shll
mov
mov
dec
mov
xor
lods
aad
and
or
jo
popf
and
xor
jo
outsl
inc
dec
in
mov
sub
sub
jae
rol
bound
incb
inc
inc
xor
rolb
cmp
les
xor
js
mov
mov
or
std
cmp
push
repnz
movsb
mov
stos
dec
int
int3
cs
icebp
and
pusha
sbb
aad
ss
jns
nop
cli
lock
xor
ficoml
sbb
jmp
xor
ret
ret
inc
imul
test
scas
jns
shlb
jbe
insb
mov
or
cmpsl
jb
aad
sub
lock
mov
jl
inc
push
jne
mov
dec
sti
push
outsb
fwait
hlt
cmp
fnstcw
pop
mov
sub
stc
and
jl
mov
dec
aaa
imul
push
sbbl
sarl
push
cmp
mov
inc
xor
sub
icebp
cwtl
jnp
imul
lahf
add
sbb
aam
pushf
notrack
sbb
mov
movsl
or
test
scas
push
stc
jb
and
les
iret
push
out
pop
or
jmp
sub
popf
jo
popa
ljmp
jno
aaa
movsl
pop
fistps
hlt
dec
stc
pop
add
mov
pusha
or
ret
scas
outsb
cld
fwait
xor
daa
rorl
popa
pop
ret
mov
sub
iret
dec
pop
adc
mov
insb
lahf
in
lock
adc
les
fsts
cli
add
mov
pop
mov
mov
cmp
mov
std
or
js
out
out
pop
lcall
mov
mov
adc
jmp
sub
xor
xorl
jne
movsl
je
shrb
xor
popa
cs
pop
ss
cwtl
inc
repz
dec
pop
test
jae
lods
mov
je
xor
fildl
sbb
mov
xor
and
nop
mov
ja
or
and
fwait
cld
popa
insl
sti
or
mov
xchg
dec
stc
inc
insl
scas
shlb
jnp
jp
popa
aad
mov
pop
mov
mov
pop
das
lods
orb
call
and
je
scas
add
hlt
fisttpll
int
sarb
push
repz
mov
or
and
adc
add
hlt
mov
les
xchg
fiaddl
push
sbb
jp
push
pop
add
hlt
mov
les
xchg
fiaddl
push
sbb
jp
push
pop
add
hlt
mov
les
xchg
fiadds
cs
push
inc
or
and
adc
add
hlt
mov
std
ret
jb
xchg
imul
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
int3
hlt
xchg
mov
cmpsb
leave
loopne
lret
mov
push
push
inc
push
xor
fs
data16
hlt
xchg
xchg
cmpsb
mov
movsb
notb
fs
push
in
push
xor
and
adc
add
hlt
lahf
in
aam
iret
mov
movsb
out
xchg
icebp
test
dec
or
inc
jns
or
jno
add
hlt
xchg
fidivs
lds
xor
push
lret
xor
int
cld
or
dec
cmp
cwtl
das
mov
leave
stc
add
push
sub
hlt
adc
sbb
xchg
jmp
fs
jecxz
das
in
incb
push
flds
jmp
add
push
aad
shl
mov
mov
jge
aam
inc
outsb
jno
stos
jp
shll
je
ljmp
out
add
cmp
imul
push
xor
and
inc
popa
sti
adc
xchg
aad
mov
jg
cmpsl
push
pop
int
jmp
push
daa
inc
xchg
lret
push
rclb
hlt
xchg
mov
mov
mov
movsb
notb
fs
aas
inc
dec
xor
and
adc
inc
in
jecxz
rcll
stos
in
icebp
mov
bound
push
or
cmp
pop
adc
xchg
mov
sti
mov
or
push
sub
pop
xor
push
movsb
mov
shll
movsb
notb
fs
es
push
xor
and
adc
add
hlt
xchg
mov
cmpsb
mov
movsb
notb
fs
es
push
xor
and
adc
add
hlt
inc
icebp
out
es
adc
dec
ret
mov
mov
ljmp
cmp
aad
movsl
mov
aad
out
inc
stc
jno
imul
out
std
push
pop
lods
movb
and
xor
out
fnstsw
add
in
pop
loope
stos
orl
std
lret
out
jns
insl
cmp
and
sbb
inc
pusha
xchg
push
fs
adc
imul
popa
sbb
jmp
inc
shlb
sub
mov
sbb
stc
xor
cmc
shl
arpl
mov
fnstcw
lcall
mov
inc
enter
sub
cwtl
mov
xchg
or
imul
mov
and
fimull
aad
out
lea
insb
bound
fadd
sti
xor
lcall
pop
and
and
ds
stos
nop
cmp
push
lods
dec
inc
je
push
xchg
lahf
out
pop
pop
cmp
iret
jae
inc
cmp
popa
scas
mov
fnstenv
inc
push
push
pop
sbb
cmp
adc
mov
sub
sbb
pop
mov
daa
ja
sbb
sbb
movsl
push
arpl
repnz
cmc
dec
das
call
xchg
mov
decl
and
push
fstp
shlb
cmp
pop
sub
aam
pop
xor
mov
xchg
fs
js
imul
addb
lret
pop
mov
fdivrs
inc
daa
aas
mov
jl
aad
cltd
push
dec
bound
jo
cwtl
dec
jne
ja
repz
dec
push
adc
mov
jnp
cmp
adc
pop
shrl
push
out
cmp
cmp
fidivrl
pop
int
adc
fmulp
lcall
dec
notb
xchg
and
loop
push
pop
cwtl
adc
repz
cmpsl
mov
jecxz
fidivl
xchg
xchg
data16
jnp
nop
jl
xchg
cmpl
faddp
popf
rclb
mov
jecxz
mov
cmpsl
in
pop
loope
inc
mov
jmp
xchg
sahf
sarb
push
add
or
jge
lods
inc
mov
mov
outsl
out
xor
adc
lret
fidivs
fnstenv
ljmp
xchg
dec
js
mov
fcoml
cs
mov
fcoml
cltd
xor
pusha
out
stc
add
adc
lods
jb
int3
xchg
test
ljmp
jge
ds
push
or
cmpsl
mov
mov
jmp
test
call
lea
imul
insl
adc
xchg
popf
dec
push
adc
ds
iret
jbe
push
out
sub
push
cli
and
xchg
mov
xchg
loopne
mov
jge
fdivrl
jmp
or
lds
sbb
dec
add
xor
xor
add
jb
or
dec
jb
adc
or
lea
add
jns
cmp
lds
jp
or
mov
sbb
cld
cmc
push
xchg
imul
jl
jne
mov
jmp
lret
loope
mov
js
fwait
dec
loop
repnz
enter
lahf
inc
pop
xchg
fs
ret
and
repnz
lods
out
jb
xor
and
and
or
pop
pop
das
stos
adc
shrb
outsl
dec
sbb
jae
rolb
cmp
inc
jge
mov
adc
adc
call
inc
rolb
cmp
dec
jmp
xor
call
leave
xor
mov
mov
loopne
add
sub
cmp
or
push
sub
bound
pop
sahf
push
add
cmpsl
cmp
push
jge
pop
add
pop
xchg
and
rcr
dec
xor
fimuls
push
pop
ds
cs
ss
jae
add
lret
cld
xchg
iret
call
popf
fdivrs
pop
dec
addl
pop
mov
or
mov
cmp
loop
xlat
xchg
sahf
dec
cmp
cmp
out
xchg
je
stos
js
cmp
mov
and
mov
test
aad
push
call
imull
add
into
mov
movsb
xor
icebp
rcll
cmpsl
mov
ret
add
push
jl
scas
ja
dec
and
out
imul
cmp
and
setbe
roll
bnd
xchg
into
testb
test
xor
pushf
hlt
lods
xchg
adc
into
mov
push
loope
cld
les
hlt
rcr
popa
adc
enter
push
xchg
movsb
add
xchg
or
cmp
sahf
dec
mov
insb
stos
dec
pop
inc
xorl
and
push
out
arpl
das
pop
arpl
shrl
movsl
leave
or
xor
out
xchg
outsb
pop
sar
in
ret
in
jl
jno
push
adc
js
dec
push
push
xor
iret
xor
jnp
addr16
jno
shrl
roll
fcmovbe
pop
aam
stos
loope
icebp
cli
add
je
dec
addr16
and
push
mov
popa
das
xor
push
jecxz
cmp
or
lret
adc
jnp
xchg
in
aad
arpl
shl
out
jl
pop
or
test
jns
mulb
sahf
adc
push
xor
xchg
sbb
sti
in
push
test
mov
cwtl
xchg
scas
mov
mov
xor
movsl
lock
or
sbb
mov
xchg
mov
loope
jno
mov
scas
testb
sbb
pop
mov
mov
lahf
fadd
jmp
icebp
lret
pop
divl
dec
ret
sahf
movsb
clc
ljmp
cmp
mov
push
push
adc
rolb
sub
mov
ret
or
push
movsl
jl
mov
insb
inc
stc
lahf
push
pop
cmpsl
je
daa
push
stos
cmp
dec
shrb
popf
sub
jnp
add
lret
sub
and
sbbb
xorl
movsb
call
cwtl
jnp
inc
int3
stos
stos
fldl2t
ljmp
adc
push
adc
pop
adc
shll
fwait
aam
out
shll
push
call
pop
xlat
or
pop
test
mov
leave
or
cmpsl
sub
roll
push
lea
ss
rcl
scas
clc
gs
pop
std
mov
mov
pop
lds
push
mov
frstor
lcall
cmp
call
incb
dec
or
adc
inc
es
inc
xor
loop
jecxz
rorb
xor
pushf
cmc
cmp
mov
ss
pusha
xor
inc
loopne
rcll
loop
lods
ds
jle
jb
pop
lcall
adc
lock
add
mov
rcrb
add
lss
fsubr
push
test
add
sub
ror
sbb
nop
imul
or
daa
push
adc
pusha
dec
jno
popa
test
out
add
rcr
jnp
xor
movsb
ds
xchg
adc
dec
adc
call
aam
clc
lahf
sbbb
jnp
adc
orl
jl
ds
icebp
jge
nop
xchg
int
out
shrl
sub
shlb
test
and
jns
repnz
adc
add
inc
cmp
sub
fiaddl
xchg
and
push
dec
pop
pop
lods
jno
idivl
aas
inc
cmp
inc
subl
addr16
movsb
mov
imul
repnz
sub
jg
sub
xchg
adc
and
pop
lods
scas
jb
stc
and
pusha
dec
into
jbe
sub
cmp
call
pop
das
xor
push
xor
std
sbb
sbb
les
lret
mov
xchg
test
outsb
in
cmpsl
jmp
cmp
loopne
in
cmp
idivb
xchg
xchg
jae
cmpsl
mov
loope
dec
in
negl
out
ret
mov
adc
rcll
les
lahf
orl
cmp
scas
push
jle
cwtl
inc
mov
fs
xchg
inc
or
mov
xchg
xor
lret
sub
xchg
jne
enter
adc
mov
imul
push
std
fnop
pop
or
adc
push
mov
call
xchg
adc
adc
in
push
add
pop
mov
mov
push
mov
pop
sahf
push
pop
mov
mov
cs
jp
inc
sbb
mov
push
addl
std
mov
imull
and
imul
push
push
or
xchg
dec
call
mov
adc
inc
sbb
lock
xorb
cmp
loopne
std
cltd
sbb
push
jecxz
xchg
fisubl
pusha
leave
and
shll
movsl
insb
push
jb
adc
cld
idivl
ret
je
outsb
jb
iret
rclb
out
iret
xor
fnsave
lcall
sti
jmp
push
repnz
nop
push
mov
fadds
mov
jo
sbb
js
dec
lret
inc
or
cmp
sbbl
lret
lret
inc
rcll
lock
in
les
daa
push
ret
inc
xchg
cmpsb
mov
int
dec
repnz
ss
stos
add
sub
xor
mov
ret
jno
xchg
and
push
mov
mov
shlb
dec
call
gs
inc
hlt
and
mov
cmp
ds
push
inc
push
sub
repnz
imul
adc
mov
pop
ret
popa
out
scas
aaa
and
xor
repnz
lcall
inc
addb
ret
rcll
cltd
ds
xchg
pusha
dec
or
lods
int
sbb
ficomps
fadd
fwait
cmp
jnp
dec
xchg
mov
xlat
jp
dec
adc
mov
movntps
mov
pop
xchg
es
inc
cwtl
cmc
hlt
mov
jg
shll
or
lea
jge,pt
inc
xor
jecxz
mov
stos
cld
dec
shlb
rol
iret
ret
dec
xor
pop
xchg
stos
xchg
das
orl
fs
call
arpl
dec
clc
mov
sarb
enter
mov
sbb
fwait
popa
fidivs
fistpll
push
mov
cmpb
push
into
inc
pop
aad
faddp
popa
xor
xchg
sarl
rcll
sbb
pop
shrb
xchg
rorw
xor
pop
fstpl
mov
and
fwait
lret
loopne
fwait
jg
aaa
in
lock
into
add
cwtl
ret
out
add
movsl
push
cli
pop
pusha
pop
mov
ret
xchg
into
aam
inc
test
outsl
xchg
iret
lcall
sub
pop
dec
add
pop
mov
aaa
movsl
sti
sbb
idivb
xor
testb
and
lock
lods
dec
out
loopne
cmp
jmp
mov
out
out
add
adc
clc
mov
jbe
jl
out
jno
sbb
les
jns
push
push
clc
hlt
in
dec
cwtl
std
adc
pop
out
bound
push
dec
lods
scas
icebp
enter
ja
push
mov
mov
loopne
into
test
stc
sbb
push
sti
mov
lds
pop
mov
or
add
sbb
mov
sbb
pop
jmp
pop
int3
sbb
lahf
and
or
jne
aas
or
dec
or
sbb
xchg
xor
sbb
jmp
shrb
pop
test
push
sub
mov
fnstcw
cmpsb
imul
adc
push
jp
and
jne
inc
out
or
sti
lock
lds
sbb
ret
push
int
jb
pop
mov
daa
jnp
dec
jnp
int3
inc
jnp
xchg
push
jp
cs
dec
push
xor
dec
cmc
fucom
jno
aad
fidivrs
or
stc
pop
add
cld
ss
push
sbb
rorl
jo
adc
push
mov
add
rclb
cmpsl
mul
out
nop
jno
inc
push
stc
imul
adc
mov
cmpl
in
mov
lahf
or
or
lret
xor
int
es
sub
fisubs
and
test
roll
lock
sub
jo
out
lds
arpl
int3
cmp
insb
pop
test
dec
xchg
xor
mov
jg
lods
repnz
pop
mov
loop
add
cs
sbb
scas
and
aaa
xchg
mov
enter
add
push
jg
pop
dec
and
push
xlat
push
fcompp
sti
addb
test
neg
gs
call
stc
jo
and
outsl
and
dec
bound
push
lahf
pop
sbb
sub
daa
cs
fldcw
sbb
aas
loopne
xchg
and
shr
fcoms
lret
pop
cmp
cmp
ss
enter
test
movsl
popa
xchg
xlat
shrl
cwtl
xor
xchg
in
inc
sahf
inc
sub
mov
mov
and
jecxz
aaa
fdivrl
and
mov
sbb
js
gs
push
mov
cli
sub
imul
jle
mov
xlat
aad
arpl
fistpll
mov
into
jmp
dec
mov
mov
mov
or
loop
add
test
mov
adc
shlb
pop
aas
lret
push
sub
jnp
add
test
xchg
jg
imul
push
loopne
ss
push
lods
adc
push
shl
fcmovnb
xor
decl
out
or
lahf
jle
push
cwtl
cmp
dec
sbb
xchg
or
mov
in
fbld
pop
test
or
xor
hlt
xchg
lods
ljmp
arpl
jne
jae
aaa
cmp
stos
bound
mov
insl
push
stos
cltd
mov
cmpsb
sub
xor
jae
pop
push
add
and
ja
mov
imul
testb
outsl
and
int
movsl
sub
scas
mov
clc
sbb
jmp
in
ja
lret
pushf
mov
cs
cli
test
adcl
xor
pop
pop
scas
jbe
outsb
cmc
pop
xorb
mov
add
or
out
ljmp
idivb
inc
out
fucomip
adcb
out
jbe
add
push
lods
hlt
mov
dec
xchg
les
add
pop
mov
imull
mov
mov
push
lret
rcl
icebp
cli
fldenv
out
lock
adc
mov
pop
sbb
test
cli
mov
sub
into
js
jp
outsb
dec
ss
rcll
fildl
pop
lock
lret
sbb
stos
call
or
dec
xlat
test
cli
dec
jne
ja
orb
mov
scas
mov
mov
repz
push
jle
subl
mov
mov
jge
dec
out
xchg
mov
aaa
pop
inc
and
popf
cmp
ss
test
shll
icebp
add
mov
addr16
mov
push
pop
xchg
shrb
mov
shrl
in
inc
ljmp
aad
cmp
cmp
int
mov
out
sbb
fsub
dec
jle
pop
iret
add
jl
or
cmp
cmp
fsubs
jp
cmp
cmp
imul
pop
add
je
sbb
orps
lods
push
jmp
xchg
andl
fld
mov
loope
mov
stos
mov
dec
xor
mov
pop
sub
add
pop
scas
cwtl
xchg
inc
das
cmc
popa
mov
sbb
mov
in
dec
push
adc
mov
jmp
stos
jae
inc
jnp
cwtl
adc
sub
testl
test
and
lods
or
mov
mov
mov
jge
push
jno
cmc
mov
clc
mov
outsb
sub
in
pushf
sub
xchg
jmp
push
out
dec
lods
add
in
and
repz
ja
loopne
cmp
test
cmp
in
pop
daa
dec
arpl
inc
pop
mov
and
and
push
shrl
pop
dec
add
jg
xchg
leave
jl
xlat
add
gs
pop
xor
dec
xchg
mov
vcvtdq2ps
xor
and
mov
jp
rcrb
adc
mov
stc
nop
mov
sti
cmpsb
scas
rcrl
pop
cmp
dec
pop
push
dec
sbb
dec
fnstsw
add
mul
mov
movsl
out
inc
mov
iret
mov
in
insb
pop
mov
test
push
test
data16
fsubl
sub
test
jnp
xchg
fdivs
add
nop
inc
pop
or
inc
or
mov
and
pop
mov
cmp
pop
mov
jno
push
ljmp
clc
mov
push
mov
lods
mov
xor
mov
add
mov
test
add
cmp
fcomps
xor
lods
dec
icebp
xchg
fdivs
mov
popf
cmpsb
or
and
paddq
cli
loop
mov
mov
lods
mov
push
jbe
inc
and
or
add
push
lcall
xlat
fs
mov
das
inc
cmp
aad
shlb
lea
out
icebp
pop
adc
sub
std
loope
mov
push
add
xchg
jno
cmpsb
filds
pop
sbb
lahf
outsl
imul
cmp
iret
xchg
call
inc
jl
test
lret
or
push
mov
ljmp
jmp
or
test
mov
add
lods
rcrl
pusha
mov
addr16
rcl
xor
rclb
mov
subb
fldenv
loop
rol
icebp
test
sbb
mov
loope
inc
xor
lahf
xor
aaa
dec
jns
cmc
gs
jecxz
enter
lret
pop
inc
sub
push
cmp
test
popf
cwtl
arpl
inc
jmp
lds
or
mov
outsl
std
scas
fucomi
inc
dec
ret
or
icebp
aam
adc
mov
gs
jle
lds
in
mov
loop
dec
push
movl
inc
push
aaa
jae
icebp
lahf
cmpb
jo
test
mov
loopne
outsb
lcall
add
repnz
xor
dec
mov
jno
cmp
dec
xor
sbb
push
mov
outsl
add
out
into
arpl
out
xchg
arpl
lods
repz
add
fneni(8087
call
les
mov
inc
call
inc
pop
cmc
pop
mov
inc
jae
movsl
mov
add
jecxz
mov
mov
dec
out
jle
cmp
loop
add
or
jecxz
gs
fistpll
aas
loopne
push
stc
stos
xchg
mov
iret
inc
cltd
dec
call
or
imul
push
xor
jle
out
dec
mov
hlt
and
and
mov
jge
add
adc
push
loopne
push
and
std
pushf
cmpsl
filds
das
add
lcall
sarb
fadd
ljmp
pop
incb
and
sub
bound
push
pop
fstl
stos
fs
push
pop
push
in
dec
xchg
xchg
pmaxsw
mov
mov
cltd
dec
fistl
jnp
lcall
aas
xchg
inc
aad
mov
sub
add
cmp
mul
pop
xor
pop
pusha
movsl
ret
jo
sub
cmpsl
adc
dec
mov
cmpsb
add
repz
int3
pop
push
repz
daa
outsl
mov
std
jle
call
dec
fldenv
sbb
imul
mov
fdivrs
leave
insb
out
ja
loopne
sub
inc
mov
inc
insb
inc
in
inc
xor
lods
cwtl
stos
cmp
mov
jg
dec
mov
xor
test
sahf
push
frstor
cs
jae
movb
pop
inc
outsl
orl
loop
sarb
js
mov
cmp
push
cwtl
inc
xorb
or
fcmove
xlat
ds
lret
jle
pushf
mov
mov
dec
push
cltd
inc
fwait
mov
push
rcrl
int
rorl
push
in
or
out
sub
xlat
les
pop
js
pop
cli
outsl
ss
test
insl
sbb
ja
hlt
rol
and
fdivl
popf
icebp
mov
mov
lret
xchg
lcall
imul
fists
mov
andb
fimull
xchg
mov
jg
mov
addr16
rcrl
ss
sbb
add
mov
inc
jge
xorl
xchg
sbb
and
iret
lea
pop
lahf
sbb
fstl
or
sbb
dec
adc
repnz
imul
dec
xor
sub
jnp
fwait
arpl
jl
or
dec
lock
xor
mov
sbb
pop
shlb
sbb
xor
and
xorl
arpl
fistl
inc
scas
test
push
inc
sub
sti
fwait
das
or
insb
aam
add
inc
mov
mov
adc
lea
mov
and
push
mov
jae
ds
mov
enter
or
adc
push
push
inc
sbb
cli
loop
test
cmpsb
mov
movsb
notb
fs
es
push
xor
and
adc
add
hlt
xchg
mov
cmpsb
mov
movsb
notb
fs
es
push
xor
and
adc
add
lock
mov
cmpsb
movsb
notb
push
xor
push
xor
push
add
hlt
mov
adc
rcl
and
adc
jnp
mov
into
pushf
push
xor
mov
cltd
sti
mov
push
and
mov
roll
and
xor
pop
in
lds
xchg
or
fcoms
inc
mov
adc
push
lds
fwait
dec
movsl
sbb
push
xor
pop
jo
js
add
ds
mov
out
ret
outsl
out
loope
xor
and
push
mov
fcompl
imul
xchg
ret
jecxz,pn
insl
test
hlt
jbe
cmpsb
loopne
inc
mov
mov
or
cld
or
xchg
mov
push
test
test
clc
cmp
or
mov
fsubr
in
pop
cmp
xchg
cmc
cmpsl
aam
cmp
inc
movsl
pop
jmp
push
inc
mov
push
popf
inc
mov
aad
mov
cmp
mov
sub
or
mov
or
sar
cmp
lret
fildll
mov
jge
jge
call
xchg
xor
gs
andb
scas
mov
jns
out
lret
stc
call
inc
mov
adc
cli
dec
adc
stc
pop
mov
dec
sbb
sahf
or
fisttpll
pusha
jmp
xchg
or
cmpsb
push
repnz
lret
dec
in
clc
xor
lahf
add
shll
ja
jl
ss
xchg
sub
dec
cli
dec
movsl
insl
lock
testb
mov
std
jns
and
js
push
lds
mov
movsl
sbb
call
inc
mov
adc
push
lds
mov
movsl
sbb
sub
jo
xchg
stos
hlt
push
sub
mov
fstps
lods
push
mov
inc
cmp
adc
mov
pop
jnp
inc
cltd
imul
frstor
pop
pop
inc
pop
mov
mov
dec
ja
ret
xchg
insl
inc
mov
repnz
cmpsb
fimuls
sub
scas
pop
pop
subb
inc
fsubl
pop
mov
stos
push
mov
adc
fbld
in
mov
xor
mov
dec
jns
sti
out
mov
ja
push
fisubs
jnp
mov
cmp
cmp
pop
dec
mov
dec
mov
sub
mov
and
jno
and
pop
xor
repz
clc
adc
in
loopne
sub
sub
jge
xor
lret
aas
push
cmp
in
mov
cmp
mov
subb
iret
sub
or
test
sbb
push
scas
aas
sbb
xchg
imul
pushf
daa
insb
cmp
xchg
js
fwait
je
xor
mov
or
cld
fbld
pop
mov
ljmp
jge
or
push
fs
or
lods
or
addr16
push
cli
popa
pop
aas
inc
jne
imul
sti
cmp
add
loope
int
jge
inc
jae
rorl
inc
lret
inc
sbb
arpl
test
hlt
jae
hlt
cmp
mov
adc
push
adcb
jns
jge
and
lods
push
std
aam
dec
dec
dec
sbb
imul
adc
aaa
mov
ret
and
lock
sub
pushf
jns
jmp
mov
mov
sub
push
test
mov
in
cmp
ss
arpl
movsb
cmp
xchg
add
imul
jns
jl
scas
sub
aaa
imull
incl
jae
xacquire
nop
pushf
bound
cmp
or
push
mov
fdivrl
and
cs
sub
push
cltd
inc
sub
cmp
push
addr16
cmc
sbb
cmpsl
cli
sysret
ret
and
sarb
jbe
es
mov
mov
dec
aam
dec
add
jb
mov
sti
pop
inc
adc
addr16
test
inc
shlb
test
sbb
xor
das
imul
call
call
stos
outsb
jnp
sub
pop
inc
fstpl
or
jae
dec
loope
outsl
cmpsb
mov
jne
dec
or
cmpsb
arpl
fadd
and
fs
dec
sahf
pushf
mov
pop
aas
insl
jp
dec
pop
mov
sbb
out
sbbb
movsl
out
data16
in
out
dec
ret
bswap
mov
aas
jl
cmp
jmp
inc
lock
leave
imul
into
cmp
movsl
add
lock
out
in
add
outsl
int3
mov
clc
dec
out
stc
fs
push
outsl
sub
test
pop
xchg
imul
outsl
lods
mov
test
mov
cmpsb
mov
inc
and
mov
in
test
cld
push
aam
js
jns
fs
mov
mov
aad
test
subl
xchg
cmpsb
cld
cmp
adc
mov
or
aaa
lcall
adcb
movsl
and
cmpl
hlt
cltd
lret
pop
adc
orl
dec
dec
pop
add
xchg
stos
fistl
mov
jl
pop
sbb
inc
loop
sbb
dec
adcb
xchg
push
inc
jo
sarl
loope
movsl
scas
ret
jo
push
rorl
mov
test
rol
inc
mov
rsqrtps
jo
jp
sbb
xchg
xor
mov
in
fldl
aam
mov
xchg
push
xor
mov
inc
jne
clc
jae
mov
scas
out
push
in
xchg
call
jp
cmp
mov
iret
scas
and
pop
movsl
push
jecxz
mov
pop
or
push
idivb
adc
pop
adc
dec
dec
movsb
repz
loope
pop
xchg
fs
lds
shl
scas
push
outsl
xchg
inc
sahf
bound
xchg
repnz
adc
outsl
push
les
dec
out
mov
popa
ret
add
cmp
cli
dec
push
imul
jmp
sub
mov
addr16
jp
lods
or
dec
fidivl
mov
popf
std
push
add
and
es
jno
add
idivb
ret
shrb
xchg
cmpl
mov
stc
decb
ret
add
or
push
sbb
xchg
rolb
adc
dec
jge
fnstenv
ret
inc
xor
or
data16
cltd
add
rorb
or
rcrl
test
jbe
add
pop
lcall
lea
nop
lds
out
outsb
loop
inc
je
mov
mov
pusha
jg
sbb
or
xchg
dec
cmpsl
nop
xchg
pop
sub
fbld
cmp
jno
pop
aam
insb
jns
in
mov
push
inc
adc
outsl
cli
xchg
popa
push
ds
push
xchg
lcall
ficoms
and
test
addr16
jbe
sbb
add
nop
xchg
mov
add
inc
gs
popa
inc
in
jne
cmp
inc
add
dec
movsl
pop
inc
scas
pushf
jecxz
add
xlat
sub
adc
push
call
jno
scas
popf
lea
idivl
fs
sti
jle
lret
and
add
shlb
hlt
cli
imul
mov
sahf
nop
call
dec
test
mov
pop
gs
rorb
or
inc
mov
xchg
dec
cli
xchg
in
out
cmpsb
test
jb
push
pop
cli
ret
cmc
rcl
mov
lahf
adc
push
lahf
repnz
push
andb
movsb
rclb
add
mov
xor
dec
insl
mov
scas
pop
push
add
mov
fists
rcrb
mov
enter
insb
inc
and
scas
and
mov
js
mov
mov
add
pop
xchg
outsl
fs
fs
xor
pop
popa
jno
push
jge
mov
pusha
push
fbld
pop
stos
xchg
inc
sub
rcr
xchg
int
xor
iret
sub
jnp
xchg
and
mov
dec
pop
pop
sub
ficomps
dec
loope
inc
je
rol
sub
inc
mov
lock
cmc
ja
xchg
and
out
rcrb
push
or
sub
mov
loop
or
lcall
push
jge
cltd
into
add
lods
test
cwtl
sub
in
or
fists
mov
scas
ds
cmp
lret
mov
jl
xchg
int3
dec
cmpsl
mov
addr16
xchg
or
xchg
addl
pop
lret
push
shlb
jle
mov
inc
jo
dec
pusha
je
vmread
add
lds
lods
popa
fnstcw
dec
mov
loopne
mov
fisttpl
mov
push
xor
mov
pushf
dec
xor
sbb
in
cmp
mov
jmp
jo
fadds
push
stc
lret
stos
xchg
scas
aaa
dec
test
xchg
jmp
sahf
xor
sub
adc
fildll
imul
test
push
movsl
out
fidivrl
sub
mov
test
and
test
jg
fs
dec
ret
mov
rcrb
sub
lcall
movsb
movb
push
outsb
aaa
lods
adc
push
mov
push
cmp
insb
push
popl
fcomps
mov
stos
inc
inc
mov
mov
mov
dec
pop
push
mov
test
push
dec
xor
xchg
pop
xchg
loope
cmpsb
hlt
mov
clc
dec
pop
ret
push
insl
daa
cmp
imul
push
mov
clc
outsb
or
leave
mov
adc
push
repnz
mov
inc
mov
lahf
ret
loop
cld
rol
gs
xor
stos
jle
jge
inc
leave
and
mov
clc
push
std
add
or
fwait
dec
addr16
and
and
push
sarb
xchg
lods
fxsave
addl
call
loopne
popf
mov
dec
rcl
cli
mov
jecxz
insb
push
sbb
push
rol
jbe
or
loopw
cld
cli
repz
jmp
pop
push
push
cmp
xor
repnz
repnz
jnp
xchg
xchg
mov
xor
iret
jne
add
lret
test
or
fcoms
cmp
xchg
inc
sbb
xor
js
ljmp
ja
or
stos
adc
fs
push
cld
mov
orb
jecxz
wbinvd
mov
pop
mov
repz
jns
sub
cmp
outsl
adc
scas
inc
imul
mov
inc
cmp
push
fsubs
popa
test
dec
popf
inc
xor
xor
sahf
mov
in
push
sub
mov
pop
push
xor
lret
mov
loopne
loope
push
test
in
out
in
cltd
pop
inc
std
test
and
std
test
jns
stos
js
cld
mov
sahf
arpl
cmp
mov
mov
into
jo
jmp
jns
rclb
pop
out
lahf
ror
push
adc
aam
push
cmp
mov
stos
fcoms
pop
sbb
aam
push
lods
and
adc
add
sub
ja
or
insl
fstp
push
push
push
sbb
fsubl
dec
cld
xor
xchg
lcall
mov
sub
mov
dec
pop
mov
pop
mov
int3
mov
xchg
fisttps
jmp
loopne
xor
jnp
pop
fildll
mov
test
nop
sub
cli
pop
movsb
adc
pop
or
xor
cmpsb
xchg
mov
mov
jle
shrb
pop
xchg
sub
push
mov
xchg
sub
xchg
test
xor
mov
je
xchg
shl
iret
sarb
lcall
xchg
xor
add
out
push
negb
adc
lcall
rol
mov
adc
mov
ja
sbb
mov
movsb
test
sbb
lcall
mov
fidivs
mov
push
pop
inc
mov
mov
adc
and
dec
mov
aad
cwtl
xchg
xchg
les
fnstsw
pop
adc
mov
jge
int3
das
cwtl
push
fwait
push
pusha
scas
insb
dec
xchg
pop
ds
adc
fisubrl
enter
clc
rcl
mov
mov
jg
cmp
inc
and
sub
xor
mov
mov
jae
push
lds
mov
push
jecxz
xor
adc
push
inc
adc
cmpsb
das
scas
out
or
int
xchg
or
mov
ljmp
hlt
arpl
cld
shlb
aam
js
hlt
cmp
rcll
or
cmp
and
xchg
mov
jo
lds
pop
jo
xor
fiadds
or
push
cwtl
test
pop
add
push
sbb
cmp
inc
les
inc
mov
cmp
and
arpl
jmp
xchg
mov
lret
cmpl
adc
push
push
lcall
in
rolb
div
cmp
sbb
scas
jne
icebp
and
je
repz
pop
xchg
out
inc
fmul
push
adc
fs
test
mov
mov
add
gs
outsl
add
mov
lea
and
sbb
sub
stos
add
hlt
push
mov
aaa
imul
daa
mov
rorl
out
sub
jnp
movsl
push
mulb
mov
cwtl
xor
mov
jmp
adc
xchg
xor
into
pop
adc
pop
test
fdivs
les
xchg
in
lds
js
iret
push
cmc
mov
jmp
ficoml
repz
mov
je
das
xchg
dec
add
hlt
xchg
mov
jns
out
imul
inc
push
dec
inc
jge
lods
sysexit
push
and
imul
lods
fldcw
dec
in
mov
jle
add
mov
mov
orb
push
cmp
fldt
and
imul
clc
cld
idiv
mov
mov
cmp
mov
dec
das
pop
out
and
push
mov
out
adc
jno
pop
addl
push
lods
icebp
push
leave
push
jg
adc
jno
jl
or
les
and
jmp
mov
or
jge
cmp
rolb
add
add
fbld
movsl
add
andl
fsubrl
insb
pop
pushf
dec
lret
mov
or
loopne
or
mov
pop
xchg
xchg
scas
cmp
outsb
or
pop
mov
pop
arpl
xor
mov
test
jmp
rcrb
and
ja
mov
aaa
cld
inc
lds
jge
dec
inc
sbb
decl
jbe
xchg
fs
or
sbb
jnp
out
inc
and
insl
pop
in
ret
jae
xor
repnz
cmpsl
outsb
addl
popa
sbb
or
pop
ret
das
push
fwait
xchg
or
xchg
mov
js
jnp
mov
pop
pop
jnp
pop
orb
pop
xor
add
or
mov
movsb
js
push
mov
mov
clc
mov
adc
xor
dec
adc
pop
call
inc
push
sub
cmp
add
icebp
mov
cmpsb
mov
jecxz
cwtl
jmp
insl
pop
je
cmp
mov
push
es
stos
test
ret
jo
test
fimull
adc
mov
scas
dec
mov
call
int
cli
aaa
dec
add
or
mov
push
jo
jb
jle
add
or
adc
mov
push
adc
mov
mov
in
lcall
push
out
push
sub
sub
or
mov
mov
adc
jecxz
sub
negl
ret
cmpsb
adc
xchg
stc
sahf
mov
pop
sub
outsl
jp
std
mov
inc
jmp
movsb
popa
cmp
push
mov
arpl
lea
push
loop
imul
out
xchg
es
icebp
jno
jb
add
fnsave
and
gs
mov
sbb
addb
jmp
or
dec
fsubl
mov
xchg
jnp
pushf
scas
das
test
in
shlb
test
jl
daa
in
fwait
mov
mov
scas
jg
add
popf
dec
jae
addb
pop
sahf
push
ljmp
mov
out
ror
lds
mov
sbb
clc
adc
inc
cmc
or
mov
jae
inc
jg
push
mov
pop
daa
jecxz
icebp
cmp
movsb
ror
dec
aas
dec
mov
dec
inc
test
aam
mov
dec
gs
cmpsl
add
js
add
test
pop
sbb
out
xor
stos
jnp
xor
enter
inc
cld
lods
inc
dec
into
int3
and
std
js
ja
jge
lods
lods
pusha
stos
inc
adc
loopne
dec
pop
lret
xchg
push
pusha
pop
dec
cld
dec
mov
sub
cmp
sbb
pop
sub
or
test
and
sub
mov
lds
and
cmp
cmp
js
out
add
xchg
test
xlat
xor
loop
ljmp
jbe
test
mov
shll
cmc
cmp
sbb
inc
imul
sbbl
in
add
je
inc
adc
in
sub
jnp
popa
arpl
jne
push
xchg
push
jge
lahf
shl
pusha
orl
in
adc
lret
dec
movsb
or
fmuls
adcb
data16
cmpsb
xchg
sbb
addr16
add
mov
vpunpcklbw
jbe
icebp
sub
ljmp
lea
adc
push
adc
cmp
jle
daa
push
mov
in
cli
mov
cmp
sub
jge
sbb
mov
inc
dec
sahf
std
and
pop
jbe
xchg
xchg
dec
orl
sti
xchg
pushf
xchg
ret
add
jne
lret
sub
jae
rcl
cmp
sub
cmp
pushf
in
cld
xchg
sahf
ret
inc
and
aam
jbe
shll
jge
ror
push
mov
jae
mov
into
out
ljmp
rcrb
cmp
mov
mov
sub
fnstcw
jo
jecxz
cmpsb
testl
stc
add
test
movsb
pop
nop
icebp
and
scas
test
aad
mov
lcall
mov
cmp
shl
sbb
pop
scas
jle
lods
push
movsb
push
sub
test
pusha
xor
cld
addl
aaa
or
or
dec
jnp
or
jge
psllw
stc
push
pop
mov
stc
cmpsb
and
mov
push
xchg
ljmp
mov
iret
testb
mov
cmp
gs
xchg
imul
mov
outsb
aad
into
loopne
push
xchg
jae
sbb
jp
dec
jnp
dec
add
les
faddl
inc
pop
js
dec
ds
mov
addr16
and
jle
dec
mov
inc
in
aam
add
inc
add
lcall
insb
jp
in
addl
je
loope
sbb
sahf
int
aas
inc
cmp
xor
jno
jecxz
loop
rcr
add
notb
xorl
les
insb
jne
aad
mov
test
imul
data16
add
ds
loopne
xor
mov
lret
and
bound
repnz
pop
adc
std
jl
push
psrlw
sbb
pushf
incb
mov
xor
inc
dec
dec
mov
pop
inc
std
int
pop
ljmp
add
into
out
sub
push
sub
sub
in
mov
push
mov
vmovsd
jp
adc
add
notb
mov
mov
push
fisttpl
mov
pop
data16
jno
sar
mov
scas
cmp
cwtl
clc
cs
inc
clc
fdivrs
inc
push
inc
fists
xchg
cmp
sbb
add
jmp
imul
jbe
lods
or
and
adc
lods
loopne
js
arpl
mov
out
leave
or
inc
and
gs
push
nop
filds
cltd
and
mov
js
adc
cmp
pushf
flds
jb
hlt
pusha
test
movmskps
imul
sbb
pusha
fyl2xp1
xorb
mov
jns
sub
jle
rcrb
xchg
shrb
push
xchg
mov
mov
sarl
iret
popl
in
xchg
orl
sahf
jbe
js
ss
xchg
out
iret
mov
iret
mov
in
popf
sti
mov
dec
gs
shrb
jecxz,pt
sbb
arpl
out
mov
into
mov
inc
shufps
shr
aam
movsb
jbe
jo
dec
mov
sbb
lret
and
sbb
sahf
xor
jmp
push
cmp
mov
dec
inc
rol
fwait
ja
jne
xchg
fldenv
xchg
or
dec
into
lds
xor
jnp
ret
les
xchg
inc
lock
push
das
dec
add
rolb
xor
in
mov
aas
mov
xor
xchg
sti
lods
mov
pop
aaa
cmp
adc
cmp
push
call
push
pop
clc
mov
pop
lds
mov
sbb
rorl
pop
das
negb
ror
ret
je
repz
mov
xor
cmp
dec
daa
pop
gs
pop
jns
iret
adc
sbb
dec
fwait
inc
jnp
and
imul
pop
jae
out
rorb
mov
fidivs
test
das
xchg
adc
aas
test
mov
sub
jne
adc
mov
sahf
bound
lret
adc
lret
add
sti
lret
enter
jge
std
idivl
pop
add
adc
scas
sbb
xor
xor
loopne
jmp
mov
mov
iret
xor
inc
jge
adc
mov
fmull
sbb
push
cli
dec
iret
adc
xchg
loopne
lcall
sbb
push
ja
jb
push
and
add
test
fwait
scas
fstl
fwait
aad
or
addr16
xchg
ja
das
std
inc
dec
sbbb
in
sbb
push
and
xchg
outsl
mov
imul
aam
in
rcrb
fwait
mov
dec
sbb
popf
incl
popa
or
cs
cmp
or
test
mov
dec
add
dec
mov
test
mov
repz
push
movb
xor
xchg
mov
cs
jnp
pushl
and
loope
cmp
lock
fcompl
gs
dec
stos
or
mov
popa
cld
mov
xorb
js
in
adc
mull
fdivs
inc
xor
out
call
mov
int
loop
sbb
rcrb
jns
in
cmp
fwait
lods
and
adc
fisttps
dec
mov
lret
ss
fidivl
mov
scas
mov
std
sarb
gs
push
aam
mov
adc
push
lds
mov
movsl
sbb
call
inc
mov
adc
push
lds
mov
movsl
sbb
jmp
enter
mov
adc
loope
aad
int3
cmp
cmp
xchg
les
mov
xchg
or
js
xchg
dec
repnz
mov
int
fucom
in
idiv
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
clc
xchg
jbe
pop
inc
int3
idivb
inc
in
xor
dec
or
push
add
add
add
add
fiaddl
add
add
add
dec
add
mov
jo
fiaddl
add
aam
dec
add
add
lret
add
add
add
add
add
and
fldl
int
adc
add
add
add
add
add
add
add
add
add
add
movsb
add
push
add
add
outsl
add
add
add
add
add
add
add
add
add
mov
push
add
add
jns
testl
add
add
add
add
add
add
add
xlat
add
add
add
add
add
scas
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
xchg
add
mov
add
fadds
dec
add
add
cmp
cmp
lret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
and
add
push
jl
inc
add
add
cmp
out
dec
add
jl
outsl
add
add
inc
add
filds
inc
add
add
xchg
popf
add
add
add
add
sub
imul
jo
adc
add
int
adc
imul
xchg
add
or
add
testl
call
add
add
add
add
add
dec
add
lods
add
and
add
sbb
jno
jo
mov
dec
add
add
aas
add
add
add
popf
add
add
addl
pop
add
add
add
add
push
xor
add
inc
add
add
add
adc
push
add
mov
mov
add
testl
jne
and
push
add
add
mov
add
lods
add
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
jo
fadds
lea
cwtl
add
jl
xor
add
add
add
add
add
add
addb
add
add
inc
add
add
add
verw
and
add
sbb
ja
lret
add
add
add
lret
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
sldt
add
and
jbe
jl
testl
add
xlat
add
add
add
add
mov
push
ljmp
add
add
add
popf
add
xchg
add
jns
testl
fiaddl
add
add
add
sbb
movsb
add
popl
lds
or
push
add
testl
push
add
add
add
add
insl
add
add
add
adc
add
add
or
pop
add
mov
jle
inc
add
add
add
add
add
add
and
jns
sbb
inc
clc
rcr
cmp
out
mov
cmp
stos
mov
cmp
outsl
gs
xchg
pop
xchg
sbb
enter
sub
imul
push
sub
aaa
sti
pop
mov
push
stos
fdiv
mov
push
jle
repz
inc
xor
js
adc
jbe
roll
mov
lret
insb
outsl
sbb
dec
lret
icebp
adc
lods
adc
inc
inc
sub
cli
xchg
mov
nop
scas
pop
sbb
mov
pop
pushf
adc
imul
shr
gs
mov
insb
mov
test
gs
bound
std
sbb
mov
nop
sub
dec
hlt
scas
fisttpl
cld
xor
call
cltd
lds
jmp
jge
mov
sahf
addr16
jp
inc
es
xor
jae
dec
pushf
cmp
jp
ret
outsb
inc
mov
test
ds
add
jecxz
jns
xor
mov
dec
jns
lretw
push
and
xchg
inc
push
mov
ja
mov
xor
or
lds
jne
or
daa
adc
mov
stc
xchg
jne
and
mov
lods
pushf
cld
mov
je
mov
mov
push
adc
pop
repnz
int
repnz
cmp
sbb
pop
or
cli
and
xchg
and
sub
pop
xchg
inc
mov
pusha
or
pop
add
cltd
out
addb
pop
lret
outsb
push
cmc
hlt
dec
mov
out
and
inc
rolb
sbb
lcall
jns
ss
sbb
adc
fstpl
xchg
xchg
es
xor
pop
testl
pop
xor
push
dec
adc
ret
mov
or
adc
in
in
jae
mov
jmp
rcll
nop
dec
repnz
pusha
dec
fsts
adc
dec
mov
es
adc
pop
or
jle
cmp
push
dec
bound
pusha
xchg
cli
mov
movsb
xchg
pop
cmpb
cmp
push
push
jo
pop
xchg
int
insl
inc
fwait
les
inc
jle
shll
or
and
or
stc
js
or
shlb
cmp
push
scas
cmpsl
pop
sbb
sbb
xchg
adc
comiss
sbbb
xchg
clc
xchg
sub
out
xor
outsb
aas
stos
call
xchg
in
sub
xor
mov
movsl
cmpsb
hlt
pop
pop
mov
out
cld
movsl
insl
je
mov
pusha
outsb
popf
jo
jp
negl
lcall
clc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
