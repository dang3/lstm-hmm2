fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
in
sub
dec
loop
mov
in
jg
imul
mov
and
ret
dec
loop
xchg
sub
mov
mov
jno
rcrb
lret
insl
ret
dec
sti
cmp
stos
or
js
pop
test
ficoms
insb
mov
shrb
adc
or
arpl
leave
shlb
xor
stc
cmp
lret
jns
loopne
sub
push
cmp
and
js
mov
adc
inc
xchg
push
push
xchg
xor
clc
sub
sub
cmp
cmpsl
adcb
mov
out
add
push
int3
enter
insl
ret
mov
inc
std
ljmp
fcoml
std
lea
xchg
and
or
and
mov
lea
int
out
jp
sbb
jb
test
insl
and
repnz
in
in
lret
das
add
push
test
inc
jb
inc
lods
ja
int
xor
shrb
pop
loop
clc
cmp
stos
or
pop
jnp
or
inc
or
add
jle
dec
in
pop
fisubrs
xchg
cmp
mov
test
push
lock
dec
and
add
mov
jne
scas
sub
and
pusha
fisubrs
pop
xchg
inc
or
insl
xchg
jl
sub
mov
fnsave
bound
xor
ret
dec
loop
xchg
sub
mov
fnsave
bound
xor
inc
rcl
pop
icebp
dec
scas
es
push
stc
dec
ljmp
outsb
mov
pop
sub
les
jo
push
cwtl
loope
xchg
mov
inc
pop
insb
negb
movsl
cmc
fsubl
jmp
xor
pop
pop
cli
sub
sub
jp
dec
xor
or
adc
gs
xchg
cli
mov
pop
push
aaa
dec
lret
jne
out
popa
movsl
and
int3
sub
adc
aaa
addr16
repnz
std
mov
jg
ret
inc
mov
nop
sbb
pop
movsb
scas
in
dec
outsl
test
add
insb
jp
inc
aaa
inc
insb
dec
mov
arpl
popf
cmp
popa
dec
xor
stos
test
shlb
aam
sti
mov
add
inc
pop
mov
cmpsl
mov
jmp
or
fstpl
mov
mov
or
cmpsb
jno
cmpb
xor
or
xchg
push
ret
sarl
sbb
dec
jae
repz
xchg
pushf
into
std
sub
das
dec
xlat
pop
adc
out
push
rcrl
push
test
mov
push
gs
push
lock
cmp
scas
mov
or
fisubrl
inc
outsb
aas
aas
fistpl
lods
sbb
call
and
or
arpl
push
and
xchg
and
pop
js
inc
mov
subb
scas
sbb
mov
rorb
pop
loop
cmp
testb
jl
mov
call
out
std
mov
mov
dec
cmp
pop
mov
adc
cmp
clc
das
sbb
in
call
repz
iret
xchg
mov
sbb
mov
lret
sbb
jge
imul
test
les
push
dec
push
lods
cwtl
and
insl
and
adc
roll
or
mov
xor
iret
inc
adc
sbb
mov
jmp
movsb
dec
mov
and
and
or
test
loop
leave
xor
arpl
addr16
data16
clc
mov
dec
lcall
notb
sbb
adc
idivb
std
test
mov
lock
push
enter
out
imul
fsubrl
pop
shll
ds
ja
push
pop
sbb
adc
push
cld
movsb
add
push
mov
cmpsl
push
push
test
popa
and
dec
jmp
cmc
movsl
push
inc
insl
leave
jb
test
pop
mov
pop
xlat
aas
aas
test
icebp
pusha
pop
jle
add
inc
das
mov
pop
jecxz
pop
notb
scas
dec
loop
rclb
fs
lret
jmp
lahf
inc
mov
add
sbb
pop
mov
and
inc
loope
pop
orl
in
sbb
sbb
cli
aam
lds
mov
test
outsb
push
mov
sub
mov
push
sub
cltd
push
inc
test
pop
jp
mov
add
movsl
sbb
xchg
mov
pop
xor
aad
das
cli
fs
lods
dec
shll
jmp
test
stos
xlat
repz
in
jg
into
fnstenv
jp
adc
xchg
shl
dec
adc
xor
xchg
icebp
stc
adc
add
aam
xor
and
fistl
sub
aad
jnp
in
fwait
push
rcrb
int3
hlt
add
mov
arpl
inc
mov
push
idivl
cmp
into
push
jl
enter
orb
push
shrl
push
shlb
stc
cld
inc
int
mov
dec
jb
xchg
mov
xlat
or
jbe
bswap
outsl
dec
outsb
pop
inc
pusha
cmpsl
jge
jl
xchg
sub
adc
lahf
push
ror
fisubrl
out
js
sub
and
xor
mov
not
outsl
movsl
mov
lahf
fidivrs
sub
scas
jecxz
mov
aam
pop
xor
xchg
jl
dec
xchg
pushw
dec
sbb
inc
push
aad
scas
cmpsl
aad
xor
mov
test
decb
cmpsl
out
cld
xchg
dec
aam
add
shrl
dec
jnp
jl
stos
jmp
pop
mov
mov
es
sbb
jno
mov
enter
rcrb
pop
pop
out
insl
push
jmp
mov
js
mov
add
imul
dec
jle
sub
adc
cmpsl
push
cli
xor
pop
sub
das
pop
push
dec
lret
insl
test
cld
mov
pop
add
add
sub
xlat
mov
lret
mov
jmp
sub
call
jns
mov
push
jp
lret
adc
mov
mov
sub
sbb
out
jbe
and
negl
push
pop
pop
lret
mov
lcall
adc
jle
inc
fmuls
push
jae
xor
xor
fldlg2
pop
testl
decb
loopne,pt
test
sbb
enter
imul
cltd
lcall
sbbl
mov
mov
mov
dec
mov
mov
lret
pop
lock
pop
jmp
xlat
xchg
dec
js
inc
adc
pop
inc
push
jle
xor
mov
mov
xchg
lock
clc
data16
ja
test
push
cmp
sub
test
je
sti
data16
adc
insb
inc
mov
mov
lret
imul
popf
mov
pop
sub
jb
inc
cs
jb
lcall
lds
cmp
adc
inc
mov
push
push
lds
dec
or
outsb
xchg
add
inc
push
push
sub
adc
xor
movsb
loope
ficomps
cs
cmp
add
mov
imul
imul
mov
aad
cltd
insl
cmpb
aaa
dec
mov
cmpsl
dec
and
xchg
jg
popf
repnz
push
mov
loop
in
insb
xor
or
outsl
mov
fmull
lea
mov
mov
jp
cld
adc
shll
insb
dec
fidivl
mov
mov
and
adc
cmpsl
lods
and
scas
out
mov
mov
clc
lock
mov
push
je
sbb
inc
pushf
and
mov
pop
inc
outsb
les
inc
adc
insb
iret
cmp
in
jno
ja
pusha
cmp
jbe
shrl
movsl
xchg
faddl
cmp
cwtl
stos
loope
fdivl
hlt
out
ja
sahf
gs
loope
xor
imul
call
mov
sbb
int3
test
mov
jne
inc
or
xchg
stc
cld
aaa
rol
mov
pushl
sbb
repnz
or
xchg
mov
test
xchg
jg
xor
sub
jg
rcrb
mov
mov
lds
jo
stc
sbb
xchg
mov
sbb
xchg
test
pop
mov
sti
out
sbb
push
dec
outsl
or
movsl
pop
cmc
xchg
mov
cmp
xchg
lock
adc
mov
inc
push
divl
xorl
cltd
sub
nop
pop
pop
stos
stos
push
cmp
and
or
ja
mov
adc
mov
sti
int3
stos
in
mov
xchg
int3
mov
mov
xchg
ret
lock
lods
sbb
pop
fisubrs
jne
pop
icebp
xor
cmp
adc
pop
cmc
push
push
cmp
popa
sub
dec
dec
xlat
lods
fwait
mov
sbb
les
filds
dec
fisttpll
xor
xor
and
mov
mov
lds
inc
bnd
push
jae
andl
cltd
mov
cmp
loopne
insb
cmp
ret
xchg
mov
and
daa
pop
in
aaa
dec
into
or
addb
sti
dec
dec
scas
ljmp
test
daa
and
fisttpll
pop
mov
ss
rcrl
testl
xchg
popa
mov
mov
adcl
or
mov
pop
shrb
xor
roll
popf
sub
xchg
leave
mov
nop
fnstcw
nop
jb
mov
fwait
cmp
pop
aas
inc
scas
and
lods
inc
lret
xor
mov
add
mov
lock
mov
mov
jne
rorl
add
and
loopne
out
push
icebp
and
loop
jno
hlt
and
shll
stos
movsl
xchg
inc
mov
mov
xchg
test
ret
xchg
jp
popf
negb
or
xchg
fildl
adc
pop
push
mov
inc
test
lods
out
xchg
daa
leave
rclb
mov
rcl
lods
mov
in
cmp
dec
andl
mov
pop
fildll
sbbb
sub
push
adc
add
fisubl
dec
mov
or
sbb
rolb
outsl
push
nop
inc
push
pop
movd
ds
lea
mov
cld
cmp
fisubrs
movsb
sub
fimull
cli
lea
fistps
inc
jg
mov
jge
lods
push
mov
mov
jp
clc
paddsw
jmp
arpl
nop
pop
adc
sbb
jmp
in
cmp
cli
sahf
cmp
das
mov
jmp
clc
sbb
out
cs
testb
sub
pop
mov
test
scas
mov
dec
mov
inc
mov
mov
popf
pop
lea
negb
test
ficoml
pop
inc
cmp
cmp
push
cmp
pop
lret
fiaddl
imull
or
out
pop
jo
mov
pop
aaa
icebp
clc
lret
in
push
or
ja
mov
lods
sbb
repnz
mov
ss
test
aam
in
aas
dec
and
hlt
adc
push
out
fs
adc
lahf
add
pop
inc
xor
stc
fidivrs
inc
pop
orb
dec
mov
xlat
test
aam
mov
xchg
out
int3
in
lods
inc
push
out
and
xchg
cmc
fistl
xor
or
sbb
pop
mov
imul
cmpsl
and
loop
and
test
shll
adc
imul
daa
xchg
adc
mov
enter
jg
and
pop
outsb
stc
je
stos
push
dec
dec
in
lds
sub
in
call
or
adc
sbb
mov
inc
cltd
test
xchg
xchg
stos
adc
jle
cmp
or
cmp
loop
ret
jmp
pop
popf
fildl
add
clc
xchg
jb
cmp
inc
mov
jae
sub
or
pushf
sahf
push
addr16
jl
fmul
add
insl
inc
pushw
pop
add
nop
pop
jp
aam
mov
imul
ret
insl
mov
pushf
pop
cmp
adc
jo
cs
add
std
inc
sbb
jle
jb
call
mov
xchg
jmp
or
data16
adc
xchg
arpl
ja
dec
notb
or
and
shlb
aad
inc
xor
xchg
and
icebp
rclb
xor
or
enter
xchg
out
int
outsl
test
mov
fnop
sbb
pop
pop
jecxz
ss
ret
imul
adc
lcall
movsb
scas
repz
push
jg
ja
shrb
popf
and
insb
add
sbb
mov
sti
and
cmp
insl
pop
aam
sbb
sub
mov
outsl
inc
sbb
testb
pop
sarl
ljmp
nop
add
jmp
lods
loope
out
cmp
mov
xchg
dec
adc
mov
pop
add
sbb
pop
into
lods
arpl
fistps
popa
cmpsl
ljmp
addb
aaa
pop
and
test
cmp
jge
cmc
or
sbb
loope
xor
dec
and
stc
arpl
push
jp
fldt
lcall
push
shrl
dec
pop
mov
sarb
pop
mov
sbb
add
mov
adc
jb
adc
xor
cmp
xor
ret
cmp
fs
push
pushf
xchg
jl
fstpl
or
loop
sub
pop
adc
pop
leave
xchg
in
inc
jle
out
dec
pop
out
adcb
in
xor
stc
gs
andl
push
push
fistpll
jnp
sub
push
sub
call
cmp
sbbb
jne
sbb
movsl
fld
push
push
cmpsb
test
int
ljmp
sbb
mov
loop
mov
pop
adc
adc
mov
push
lret
adc
mov
lcall
loop
fs
mov
outsl
out
faddp
pop
cmpsl
adc
xchg
imul
fcoms
mov
fidivrs
mov
popa
adc
sub
leave
mov
int
sub
js
xor
popf
xchg
push
loope
aaa
popf
nop
repnz
arpl
or
ret
adc
out
nop
xor
or
push
cs
adc
pop
jl
sbb
lret
popa
add
inc
mov
fldl
pop
pop
xor
fnstsw
lret
or
mov
popf
lods
aad
xchg
jns
xchg
sub
pop
mov
pop
iret
insb
ljmp
mov
sahf
bound
mov
stos
daa
xor
ds
sub
sti
inc
inc
xor
lcall
gs
test
xchg
jle
div
int3
movl
mov
enter
push
jge
add
xor
nop
inc
sbb
mov
into
lret
je
testl
mov
stc
pop
dec
inc
data16
aas
pop
addr16
jae
xor
sub
mov
repz
les
jecxz
and
pop
jmp
jp
aaa
aam
lock
jle
aaa
imul
dec
pop
mov
sbb
pop
add
mov
and
mov
stos
sbb
jg
cs
fstps
xchg
pop
add
mov
ret
stos
xchg
xchg
fidivl
or
cmp
mov
hlt
fimull
subb
adc
xor
in
adcb
add
xchg
and
mov
mov
roll
xchg
jns
aas
add
adc
notl
pop
mov
insl
jp
shll
dec
addb
sbb
in
vmovhpd
xor
outsb
mov
xchg
std
mov
rcrl
inc
stos
repz
lea
pop
popa
add
adc
and
movsb
bnd
jne
shrb
and
mov
rolb
dec
test
int
out
adc
add
orl
adc
outsl
mov
push
iret
adc
add
sub
jmp
imul
clc
rorb
ja
xchg
mov
lahf
loopne
xchg
jge
icebp
ja
pop
lahf
pop
ja
fiadds
xor
dec
aas
pop
int3
or
mov
xlat
and
lds
lds
cmc
xchg
xchg
aam
or
sub
lahf
popf
adc
aas
mov
in
jmp
xlat
sub
ja
cs
addl
xchg
sub
push
enter
push
and
cmpsl
sub
sub
add
cmp
push
ss
push
mov
int3
adc
sub
xchg
loop
addr16
stos
inc
leave
fisttps
pop
insb
popa
insb
hlt
divl
jne
in
sub
push
movl
les
fidivrl
loop
movsb
je
aam
hlt
les
pop
outsl
jnp
jns
or
jno
mov
popl
jne
and
fs
xchg
mov
push
cwtl
imul
and
inc
inc
imul
or
outsb
out
mov
aad
pop
xchg
sti
aad
jb
lods
enter
daa
lret
xor
and
dec
call
dec
sub
ja
enter
loopne
out
xchg
and
cmpsl
cmp
lds
cmpsl
inc
add
mov
hlt
adc
fldcw
roll
repnz
shl
fnsave
fbstp
cs
cli
les
retw
xchg
mov
xorl
jle
scas
ljmp
pusha
jo
jle
data16
lret
in
or
inc
shl
mov
ss
dec
mov
mov
or
sbb
rcrl
push
xchg
or
push
sbb
enter
movsb
or
or
push
mov
jle
mov
adc
sub
inc
push
nop
xor
or
aas
insl
sarl
mov
mov
lods
cli
test
xor
cmpsb
xchg
adc
jmp
test
mov
cli
sbb
and
jl
jp
test
cmp
scas
jmp
sti
xchg
lcall
in
mov
test
mov
sbb
orl
xchg
xchg
push
pop
inc
fcompl
jmp
repnz
cmp
test
sub
fdiv
sub
push
cmp
push
sbb
xchg
loop
fnstenv
sti
push
les
sub
repnz
push
and
std
push
adc
sub
inc
andl
lds
xlat
inc
mov
and
js
pushf
dec
gs
je
addr16
mov
fsubrl
testb
mov
mov
in
xchg
loopne
shl
cmp
hlt
loop
addr16
and
push
xchg
mov
xchg
push
pop
or
jp
in
aas
inc
xchg
push
xchg
movsb
and
inc
fs
lods
or
jbe
and
clc
mov
sbb
dec
mov
dec
das
cmpsl
inc
sar
sub
pop
dec
or
movsl
ljmp
loope
add
inc
jae
movsb
inc
cwtl
or
and
pop
and
pop
cli
and
adc
repz
xchg
stos
lahf
xchg
sub
xchg
push
cld
loop
sbb
add
cmp
jbe
movsl
cltd
or
fxch
insb
add
sub
pop
pop
pop
pop
stos
jnp
xchg
xor
xchg
popf
pop
pop
fwait
sbb
lret
test
xor
pusha
stos
scas
adcb
pusha
imul
out
jbe
leave
inc
in
jge
cmp
iret
cmp
push
mov
cmp
ja
pop
mov
fbld
pop
imul
into
idivb
shrl
mov
out
loopne
mov
sbb
sahf
jbe
adc
or
jne
push
mov
inc
ret
adc
rorb
mov
dec
jmp
mov
cltd
out
sbb
ss
pop
and
xor
loop
mov
mov
push
leave
pop
dec
lods
mov
sti
adc
das
test
aaa
scas
into
mov
les
xor
lahf
es
mov
dec
xchg
ljmp
pop
jbe
xchg
aam
cmp
jns
cmpsb
cmp
inc
cmpsl
cmp
clc
lahf
enter
bound
shrl
cmpsb
lcall
into
rcrl
mov
fbstp
xchg
or
sti
repnz
jge
loopne
icebp
jl
stos
in
addb
arpl
call
ret
leave
das
aad
add
adc
adc
cmp
or
jns
adcl
sub
lret
mov
cmpsl
mov
xor
add
mov
insl
adc
mov
lds
dec
add
jnp
pushf
dec
pop
dec
and
bnd
mov
hlt
sub
in
outsl
mov
inc
mov
out
out
ja
xchg
cmp
adc
sub
xchg
xor
pop
dec
aam
repz
xlat
push
std
jo
out
scas
push
mov
cmp
mov
ljmp
orb
rcll
push
imul
fisubrs
mov
lret
aas
or
jbe
and
les
push
mov
pop
lds
or
fcom
push
cmp
icebp
enter
mov
xchg
test
xchg
and
mov
add
jbe
cld
jge
loope
inc
fldenv
hlt
xorb
repz
imul
mov
dec
adc
jg
vminsd
sahf
divl
stc
push
sub
adc
mov
outsb
movsl
in
std
loop
mov
aas
aaa
and
push
cwtl
dec
je
dec
and
aas
xchg
sub
inc
xor
and
insl
daa
add
inc
inc
or
pop
ret
xchg
jl
rcrl
fimuls
adc
scas
or
cmp
push
add
in
adc
mov
call
les
imul
add
mov
icebp
xlat
cmp
sbb
mov
mov
aas
pop
pop
mov
sub
inc
and
push
mov
cwtl
enter
out
adc
jne
repz
lret
push
push
mov
sbb
sub
mov
fnsave
bound
xor
ret
dec
loop
xchg
sub
mov
fnsave
bound
xor
ret
dec
loop
xchg
sub
mov
fnsave
arpl
xor
pop
repnz
loop
xchg
sub
mov
ja
int
lret
std
int
fstl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
jns
dec
or
sub
dec
pop
sub
pop
movsl
test
mov
test
enter
sub
and
push
sbb
test
fsubrs
call
cltd
fcom
sub
sbb
push
sbb
add
mov
ret
xchg
fnstsw
xor
dec
sub
xchg
xor
lret
fstl
das
mov
sbb
outsb
fsub
pop
jmp
xchg
lea
mov
adc
cwtl
mov
decl
loopne
js
add
sub
dec
fldenv
jmp
movsl
push
mov
adc
imul
cmpsl
call
ja
enter
pop
mov
cltd
push
xchg
enter
out
imul
out
leave
ja
pop
in
clc
mov
push
xchg
mov
cmpsl
loope
sbb
sub
fcmovu
std
mov
and
ljmp
sub
cmp
pop
sbb
push
mov
mov
loope
mov
mov
inc
or
cmp
add
js
push
sbb
jmp
loopne
mov
mov
lret
and
sbb
cmp
cmp
and
aas
dec
pop
mov
stos
int
jmp
xchg
loopne
fmuls
sub
jge
push
sbb
test
mov
test
enter
sub
dec
or
sub
js
dec
sbb
test
mov
test
enter
sub
jno
mov
rol
addr16
out
adc
pop
xor
pop
std
push
mov
xchg
mov
cmp
shlb
aas
mov
jo
mov
xchg
test
xchg
cmc
bts
xor
sbb
push
pop
jae
scas
arpl
popf
xorb
mov
fistps
inc
pop
pop
jbe
cwtl
sti
xchg
xchg
shlb
addr16
call
cmp
loopne
push
jg
scas
xchg
or
sbb
ss
mov
push
pop
rcrb
push
cmp
pop
push
cmp
pushf
pop
jle
mov
pop
rol
rorb
mov
sbb
pop
pop
or
test
loope
outsl
inc
loope
mov
add
sub
es
mov
lret
in
sahf
or
stc
mov
loop
jle
adc
imul
push
fnstcw
imul
hlt
push
xor
mov
ret
xchg
pop
sbb
ss
orl
mov
into
and
popf
int
adc
mov
mov
data16
mov
push
pop
add
outsl
negb
ss
js
imul
jp
testl
repnz
push
mov
mov
call
sbb
testb
push
in
rcll
jo
frstor
mov
in
xchg
dec
int
cltd
aad
sub
into
xor
imul
into
enter
dec
xor
adc
mov
and
push
jbe
jo
rol
lds
lock
adc
add
jle
nop
loopne
xlat
out
xchg
and
dec
lret
das
and
mov
cmpsb
push
or
aaa
add
call
data16
mov
push
notl
mov
nop
pop
adc
fsubrl
xor
ds
and
lret
push
sub
pop
inc
dec
rcll
cmp
mov
mov
call
sbb
mul
aam
xor
inc
adc
cmp
xchg
pop
les
xchg
sbb
push
lret
sahf
inc
xor
lods
jno
or
popa
test
cmp
inc
and
in
cltd
into
mov
lahf
jb
ret
scas
clc
push
out
cld
btc
out
imul
xchg
ficoml
jl
std
xor
adc
test
fcoms
sub
jo
popa
adc
callw
fcompl
mov
roll
fst
lock
repnz
xlat
out
sub
scas
repz
rcrl
es
iret
repz
js
jnp
push
cmp
add
xor
inc
mov
jb
add
push
mov
jl
ret
push
and
jmp
jb
aaa
incb
cwtl
push
lods
push
add
pop
add
pop
out
and
dec
call
xchg
int3
aaa
or
or
cmp
sarb
scas
aas
jp
push
dec
das
push
pushf
fst
sub
xchg
out
jno
pusha
outsl
push
hlt
xor
adc
cwtl
and
mov
out
fstl
int3
push
outsl
les
jnp
test
jnp
aas
adc
out
adc
mov
add
inc
push
in
pop
mov
fidivrs
pop
js
mov
pushf
sub
pop
push
imul
dec
testb
xor
loope
cmpsl
imul
mov
jne
aaa
and
fcomps
hlt
xor
fldcw
xchg
xchg
cmp
mov
cmpsl
push
dec
mov
aaa
in
add
or
jle
jae
es
ret
jb
in
push
scas
into
aaa
out
inc
inc
loope
jmp
xor
push
push
je
les
cmp
inc
adc
movsb
adc
jo
inc
insl
loopne
dec
add
xchg
cmp
test
cmpsl
jle
adc
repnz
pop
sahf
int
enter
ds
push
mov
out
aas
jnp
cltd
sbb
jmp
das
pop
jg
mov
sub
xchg
push
fisubrl
lret
ret
fs
aad
bswap
sbb
cmp
xchg
jl
in
mov
cwtl
lods
xor
aad
fsubs
and
add
int
pop
test
jle
adc
repnz
cmp
test
mov
dec
add
dec
push
push
aas
iret
xor
daa
testb
inc
and
ljmp
pop
ljmp
loop
repnz
adc
stos
sbb
aad
jecxz
test
outsb
leave
lods
and
js
sub
sahf
loopne,pn
and
fwait
xchg
mov
mov
bound
jmp
jb
imul
push
mov
stc
xor
mov
xchg
imul
clc
loopne
ret
push
push
add
xlat
fs
test
loop
jmp
cmpps
mov
scas
mov
lods
inc
lcall
push
imul
imul
les
ss
push
xlat
push
xchg
pop
stos
iret
sarl
ljmp
data16
jb
mov
dec
fcoml
je
dec
pop
cld
or
int
rorb
and
jb
aas
pop
test
xchg
sub
cs
popa
stos
addr16
push
jno
icebp
sbb
rorb
xor
mov
pop
ljmp
sbb
subl
test
push
rcr
pusha
push
mov
loopne
je
out
push
push
outsb
fwait
sub
push
sub
test
or
jns
aam
sbb
adc
into
das
cwtl
cmpsb
fwait
addl
cli
loopne
or
aaa
gs
sbbb
mov
lcall
mov
sbb
outsb
jns
push
sbb
add
jno
aas
jae
push
dec
jns
dec
adc
pop
imul
aam
sub
sti
adc
add
jmp
lret
push
hlt
pop
fadd
mov
or
push
aad
add
dec
dec
jge
and
ret
xchg
inc
ret
stos
jo
daa
je
sahf
mov
pop
sbb
xor
mov
shl
sbb
mov
jo
lods
add
sbb
test
fs
loope
ljmp
or
or
loope
mov
icebp
scas
mov
adc
and
sbbb
sbb
fwait
sub
fwait
mov
add
jns
ljmp
mov
xor
movb
cmp
dec
mov
pop
mov
dec
fdivrp
dec
mov
fmuls
and
jno
mov
std
mov
arpl
rcrb
fwait
or
test
nop
dec
cmp
mov
and
lret
jns
push
mov
aas
pop
jbe
mov
adc
mov
and
mov
or
push
jnp
stos
sar
jno
mov
sub
xor
mov
pop
pop
cwtl
add
subb
int3
sti
call
push
jp
jb
push
push
xchg
out
fdiv
int
cmpl
test
jnp
cmc
aad
jnp
jno
int3
out
loop
cwtl
das
mov
loop
lods
lods
loop
mov
sbb
mov
call
cmp
out
aad
jmp
hlt
pop
pop
mov
xchg
pop
lahf
out
ljmp
jb
inc
outsl
xor
push
mov
rcll
sbb
pop
rcrl
push
jmp
pop
pand
cmp
lods
sbb
xlat
fisubl
fs
out
das
and
pop
sub
mov
cmp
xorl
add
mov
lods
jge
lahf
cmp
dec
sbb
push
adc
pusha
pushf
jg
pop
cmp
das
push
mov
push
popf
in
adc
mov
cli
cmp
std
fs
popa
nop
fimuls
add
aaa
imul
mov
enter
popa
sub
insb
cmp
movsb
adcb
pop
mov
roll
dec
lock
adc
std
aas
sbbb
lret
jns
shlb
xchg
jmp
out
leave
mov
rclb
jle
mov
lret
fnstsw
cld
jb
and
mov
bnd
negb
cmp
sbb
xor
iret
js
loopne
xor
jle
nop
int
enter
aas
pushf
add
ficompl
loop
inc
sbb
in
push
pop
dec
jecxz
les
sub
xor
cmp
in
jns
imul
jbe
cmp
sti
xchg
sbb
sub
jne
repz
jp
jecxz
pop
dec
test
push
cmpl
pop
in
jno
push
xchg
sub
jg
pop
xchg
mov
jbe
push
call
cmc
sahf
outsl
mov
cmpsb
cs
out
cltd
jns
pop
or
xchg
jge
dec
xchg
daa
int
aad
dec
push
jl
ja
inc
in
mov
imul
call
bound
sbb
in
nop
scas
mov
jp
push
lret
aas
mov
ret
jnp
popf
dec
sti
cmp
movsb
sub
and
ljmp
xor
aaa
pop
xchg
les
inc
sub
shlb
xchg
movsl
xor
jo
leave
cmp
add
and
pop
push
mov
jp
daa
mov
inc
aaa
lock
xor
xchg
insb
xor
mov
adc
add
ror
push
lds
iret
push
ret
sub
mov
aam
fs
add
push
jmp
pop
cmpsb
out
xchg
push
mov
dec
and
mov
rcll
ret
dec
int3
xchg
mov
ss
xor
or
adc
cld
pusha
insl
rclb
enter
dec
stc
shr
push
or
inc
xor
sbb
sbb
adc
add
rol
mov
leave
mov
or
imul
stos
mov
mov
fcmovnbe
jmp
pop
lcall
data16
js
xchg
cmp
xlat
into
push
cld
cmp
push
sbb
dec
sub
xchg
jge
mov
pop
adc
dec
mov
mov
test
push
or
xchg
inc
mov
outsl
adc
or
mov
int3
and
mov
pop
or
movsl
movsb
mov
rcrl
imul
imul
sarb
mov
mov
cmpb
xor
mov
hlt
out
testl
xor
xor
stos
adc
cmpl
mov
aaa
or
fcom
xchg
loope
shrb
adcl
insb
aas
popa
xor
adc
pop
cmp
fldenv
imul
cld
out
sbb
js
adc
mov
enter
sbb
cmp
xchg
out
mov
arpl
xchg
inc
push
add
fnstsw
dec
xchg
sbb
lahf
das
movsb
arpl
dec
fsubl
cmc
push
xor
aam
iret
jp
fcompl
push
xchg
mov
jo
ss
push
or
aad
js
popf
shlb
cmp
loope
into
push
fld
jb
repz
and
stos
outsl
sarl
dec
add
fstps
xchg
jp
insl
addr16
gs
mov
je
mov
or
dec
cmp
cmp
xchg
in
test
inc
xchg
in
pop
shlb
daa
subb
cmc
mov
add
and
int3
popf
mov
hlt
pop
and
mov
sub
rdpmc
xchg
mov
repnz
push
mov
mov
js
and
xor
dec
nop
dec
dec
fsubr
pop
sub
adc
jbe
cwtl
add
fnstsw
pop
fisubrs
sbb
scas
mov
sbb
sub
pop
jecxz
loope
cmp
fimuls
or
mov
test
mov
and
mov
push
dec
and
call
and
inc
jno
push
inc
das
fisubrs
pop
testl
icebp
push
cmp
add
mov
movsl
push
jo
mov
ret
xchg
mov
jae
in
mov
push
insl
es
repz
cld
jnp
inc
pushf
and
imul
or
pop
add
test
insl
es
adc
out
sub
xor
pop
rcl
cmp
stos
xchg
pop
out
sub
scas
and
xchg
and
ds
sarl
inc
push
sbb
and
pop
xchg
clc
pop
sahf
and
mov
xor
je
aad
orl
sub
push
jo
clc
jmp
stc
rcrb
jae,pt
lret
lret
and
fstpl
sbb
sbb
inc
pop
inc
mov
push
stc
cmpsb
cmpl
test
cmp
mov
adc
sub
out
jnp
lcall
cwtl
mov
sbb
test
push
pushf
loopne
ss
ja
in
imul
hlt
pop
test
adc
sbbb
bound
sub
sbb
or
outsl
add
lock
sbb
sub
loope
loope
xchg
mov
ret
push
push
jo
xor
gs
mov
add
or
push
cmp
xchg
push
popa
ss
ja
jbe
jp
jnp
push
pop
aaa
and
call
xor
adc
or
mov
scas
cmc
adc
sti
dec
outsb
loop
add
adc
cmp
xor
clc
pop
cmp
incl
je
jb
adc
mov
stos
out
adc
adc
data16
ret
fimuls
or
mov
lret
xchg
arpl
sarl
push
mov
in
or
ss
sbb
mov
scas
call
nop
xlat
cld
dec
inc
iret
xchg
mov
outsl
adc
jb
mov
pop
xor
movsb
or
push
incl
push
or
adc
jmp
faddl
or
add
cmpsl
sbb
dec
mov
in
in
inc
sbb
push
aad
fdivrl
sub
jno
push
adc
mov
lods
gs
inc
fstenv
pop
sbb
inc
and
and
push
icebp
cmc
mov
test
jmp
cmp
cmp
adc
cmp
push
xchg
push
fbld
loopne
mov
fiaddl
and
mov
aas
outsb
clc
int
outsl
inc
test
aam
cli
pop
addr16
sub
mov
leave
jecxz
and
das
mov
fs
ja
addb
jmp
popf
lcall
add
shll
pop
andb
out
lret
test
sbb
rcr
cmp
push
ret
or
sub
sbb
mov
insl
orl
pop
sarl
push
inc
gs
hlt
xor
ds
out
andl
das
xor
je
add
inc
popa
hlt
loop
jbe
push
inc
jne
shlb
out
or
insb
in
out
cli
push
into
and
mov
popf
loopne
inc
int
add
in
push
sbb
in
jne
mov
dec
push
les
in
jbe
stos
pop
jle
mov
lds
addr16
jbe
shld
xor
test
in
add
data16
xchg
bnd
and
loope
ss
pop
es
loopne
test
or
sbb
cmp
mov
push
mov
mov
add
xchg
packsswb
pop
inc
pop
testb
xchg
mov
js
test
icebp
push
mov
xchg
test
cmc
gs
std
xchg
or
lcall
notb
jmp
leave
mov
add
out
mov
je
sbb
sti
pop
xor
sarl
test
inc
mov
sahf
jp
jl
outsl
sarb
and
ret
insl
sub
cltd
lret
sarb
jmp
xor
inc
adc
xorb
mov
loop
ja
sub
ret
push
mov
scas
ss
incl
xor
jae
movsb
jmp
pusha
bnd
lret
mov
adc
cs
pop
mov
mov
imul
cmc
movsl
fldt
xchg
mov
cs
or
nop
mov
outsl
icebp
test
loop
movsl
sub
fisttpll
pop
xchg
loopne
jecxz
fucomp
sbb
ljmp
dec
ficompl
xchg
cmp
repz
mov
imul
cmp
xor
int3
mov
cld
sbb
lods
jae
movsl
dec
ds
fidivl
jl
cmp
xchg
mov
ss
aam
fnstcw
mov
out
les
pushf
xor
cmp
repz
add
loopne
icebp
fwait
mov
mov
mov
dec
push
lds
leave
aad
daa
lcall
loopne
mov
sbb
das
iret
dec
cmp
xor
and
decb
add
or
out
idivb
mov
dec
jge
inc
test
fmuls
cmp
inc
and
lds
xchg
jno
lret
mov
cmp
mov
cmp
pop
mov
pop
repnz
rol
jge
scas
mov
std
sti
clc
adc
scas
lcall
adc
js
inc
mov
mov
test
sbb
dec
aam
pop
aam
ss
xor
call
stos
inc
imull
or
imul
adc
push
imul
cwtl
iret
pop
xor
jle
aaa
outsl
sarb
dec
and
ss
pop
mov
adc
or
pop
les
adc
xor
xchg
aad
xchg
loopne
cmc
pop
add
arpl
fs
adc
sub
test
in
aaa
jmp
rolb
jne
add
je
mov
push
gs
mov
ds
imul
inc
lret
fbld
push
pop
push
loopne
dec
call
loop
jp
sub
stos
push
aam
pop
sbbb
fbld
push
movsl
push
mov
cmp
mov
lcall
add
sub
mov
ljmp
lcall
mov
sar
bound
mov
jnp
iret
pop
xchg
xor
das
jns
sahf
subb
fdivs
cwtl
in
add
stc
mov
xor
adc
inc
repz
enter
shrl
xor
movsl
addr16
rcll
cld
push
cmc
sub
stc
pop
sbb
fstp
loopne
pop
mov
test
xlat
pop
cld
popf
or
cld
pushl
cmc
sbb
mov
loope
stos
ret
add
inc
mov
int3
adc
push
cs
pop
movsl
jb
pop
in
cmp
out
xor
pop
cmpsl
jbe
push
xchg
andl
dec
dec
jp
cwtl
xchg
push
scas
push
pop
arpl
adc
or
arpl
enter
pop
mov
adc
push
sbb
push
mov
add
mov
adc
imul
lock
xchg
mov
xchg
or
lea
mov
add
cmpsb
in
out
and
dec
pop
in
adc
mov
jg
std
stc
loope
leave
xor
fmuls
fnstcw
nop
icebp
jns
movsb
mov
shr
int3
add
pop
pop
cs
sti
insb
inc
push
loope
mov
sub
adc
gs
pop
rcrl
mov
xchg
jnp
in
mov
or
imul
adc
loope
stos
dec
out
sub
lret
loope
mov
and
mov
mov
push
add
ljmp
cltd
jb
dec
movsl
push
jno
outsb
test
push
out
sub
pop
nop
cmp
mov
aaa
mov
je
push
scas
loopne
xchg
nop
lea
adc
fwait
mov
xchg
lcall
mov
roll
jo
cwtl
mov
loop
push
cmpsl
lods
add
in
ss
jns
mov
sbb
sbb
scas
sub
test
dec
ret
arpl
pop
mov
sbb
mov
int
outsl
pop
test
xchg
sar
xor
push
scas
jb
imul
movsl
stc
outsw
xor
mov
or
insb
lods
pop
sub
addb
ss
adc
lret
jge
sti
loope
push
adc
cmp
popf
shlb
out
les
or
insb
movsl
callw
sub
push
mov
scas
std
fs
or
out
js
xchg
or
jns
pop
xor
loopne
sbb
jo
cwtl
push
loop
fcomps
incl
stos
pop
ss
into
adcb
cmp
rorl
mov
mov
push
mov
and
inc
push
add
adc
pop
mov
call
and
test
lahf
inc
sub
rorb
loopne
push
leave
push
xor
inc
and
and
push
sub
xor
arpl
sbb
inc
adc
pop
push
dec
cwtl
call
dec
sahf
mov
movsl
leave
dec
ss
bnd
cld
pop
ss
rolb
dec
test
fisttps
push
xor
fidivl
call
icebp
mov
inc
push
pop
test
mov
fadd
mov
xchg
adc
cmp
std
pop
adc
xchg
adc
cmc
dec
insb
pop
lock
adcl
mov
sub
mov
test
outsl
lods
sti
and
icebp
pop
jnp
vpmacsww
push
or
sub
js
dec
sbb
test
mov
test
enter
sub
dec
or
sub
js
dec
sbb
test
mov
test
enter
sub
sub
cmp
or
pop
jmp
mov
cwtl
test
enter
sub
sbb
push
cltd
pop
jmp
mov
out
fisubs
pop
jbe
data16
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xstore-rng
cmpsl
inc
mov
xchg
or
dec
xlat
nop
imul
pop
xchg
lds
inc
movsl
push
inc
cmpsl
inc
mov
xchg
adc
and
aaa
xchg
pop
daa
pop
xchg
or
dec
cmpsl
pop
mov
xchg
or
sbb
sub
daa
into
adc
jne
jbe
xor
and
sub
and
aam
cmp
or
push
dec
fcompl
cmp
outsl
loope
jns
mov
hlt
enter
jne
shl
cli
jb
iret
in
fstpl
cmp
or
call
mov
fsubs
cmpsl
xchg
pop
out
add
daa
xor
adc
cmp
push
shlb
out
test
push
xchg
xchg
scas
out
shlb
adc
lods
enter
notl
addr16
mov
dec
dec
push
mov
mov
sbb
lds
lods
xor
jnp
clc
in
aas
xor
ja
inc
pop
test
cmp
mov
aad
push
xchg
sub
cmp
in
push
addr16
and
inc
movsl
inc
xchg
cmpsl
inc
mov
xchg
add
cmp
int3
daa
fnsave
in
pop
cld
pop
lea
ja
inc
mov
notb
xchg
xchg
jno
push
andl
mov
and
adc
rcrb
ret
adc
addr16
popa
mov
pop
scas
pusha
mov
insb
lds
push
nop
jb
or
jbe
adc
call
cmc
gs
leave
add
xlat
aad
lds
cmc
pop
in
xchg
test
inc
movsl
push
push
cmpsl
inc
mov
xchg
adc
and
aaa
cmc
pop
in
xchg
test
inc
movsl
push
push
cmpsl
xchg
sub
or
sbb
into
mov
or
jb
mov
or
jb
cmp
pop
cmp
je
movsl
arpl
mov
xchg
push
push
decl
inc
ret
mov
addr16
scas
insb
test
jge
decb
pop
in
lret
mov
cltd
jns
fsts
test
pop
xor
or
pushf
sub
das
or
add
or
adc
mov
lcall
jg
adc
sahf
pop
out
pop
fistpll
mov
lods
jb
mov
sub
insl
mov
sub
cmp
pop
aad
ds
pop
lret
fwait
mov
mov
popl
push
xor
movsb
xorb
or
mov
mov
in
dec
ret
mov
mov
cmp
lea
int
addl
cmp
inc
mov
mov
iret
sbb
cmc
lcall
shll
aam
into
ss
fistl
cmp
pop
adc
jmp
lcall
lret
adc
dec
jl
loopne
je
push
jns
fistpl
loop
das
push
stc
add
jl
call
xor
cmp
fisubrs
xchg
mov
pop
pop
jecxz
rol
call
pop
mov
mov
scas
mov
fdivrl
icebp
jmp
mov
fsubrl
rolb
xchg
subl
cmp
fs
in
rcl
shr
xchg
push
sarl
xor
cmp
ljmp
jle
scas
cld
jp
insl
ja
mov
shr
mov
xor
jge
inc
ret
js
sbb
xor
mov
int3
mov
cmp
inc
mov
jecxz
in
fwait
pop
ss
imul
arpl
bound
pushf
arpl
adc
lcall
lds
mov
popf
mov
out
repz
shrb
test
test
sub
stos
mov
out
popf
shl
stos
or
xchg
test
fdivrs
enter
cmpsb
sbb
outsb
and
leave
xchg
sub
movsb
lea
dec
jno
push
lret
lock
rcll
pop
idivl
xor
xorb
cs
inc
loop
adc
movsl
fstpt
ficoml
xchg
jle
ret
movsl
les
pusha
mov
lret
push
sbb
xor
adc
cmp
sarl
test
mov
popf
pop
push
bound
cltd
mov
adc
push
xchg
movsb
clc
scas
jne
pop
mov
xchg
push
mov
jge
adc
xchg
mov
or
pushf
add
rcl
out
and
mov
jns
lahf
xlat
adc
pop
sub
inc
iret
lret
test
mov
lods
jg
mov
pop
or
imul
fisubs
lret
push
imul
push
xchg
shll
js
fisttpl
jns
mov
pop
xorb
jnp
add
enter
jmp
jns
scas
imul
arpl
aam
cmp
or
lods
xchg
lock
arpl
cmpsl
stos
icebp
inc
or
push
pusha
popf
fnstenv
xchg
sahf
movsb
inc
call
xchg
push
push
xor
mov
sub
dec
dec
push
popf
fcoms
xchg
mov
movsl
pop
dec
decb
push
movsb
push
cmp
aad
push
pop
dec
shr
mov
sub
mov
bound
fcmovnu
lock
int
xchg
jno
lret
fcoms
data16
ffreep
jl
add
aas
and
pop
gs
scas
cs
push
jne
fs
repz
mov
dec
movsb
aad
sarb
xchg
jbe
jp
mov
dec
shrl
arpl
pushf
aas
outsb
stc
sbb
insl
cli
cmp
push
mov
shl
in
sub
mov
pop
mov
mov
arpl
xor
jb
iret
aam
xor
out
mov
in
insb
dec
sub
scas
sbb
jb
adc
lds
cs
pop
sbb
cmp
xchg
inc
pushf
dec
sub
lahf
testl
mov
sub
insb
or
and
xchg
cmc
xor
ret
dec
js
into
icebp
frstor
jp
ljmp
or
leave
xor
mov
xchg
addr16
push
mov
test
jae
cmp
xchg
ja
mov
lcall
mov
cmpsl
mov
sub
pop
xchg
fbstp
xor
xor
sbbl
push
cli
jb
cmc
iret
cmp
jecxz
push
js
or
jnp
mov
push
cmp
insl
lcall
push
scas
dec
pop
adc
cmpsl
sbb
ret
add
dec
add
ja
pop
push
test
mov
sbb
inc
clc
mov
lods
call
pop
stos
scas
mov
sub
sahf
mov
aaa
pop
repnz
add
stos
mov
fidivrs
stc
jno
jecxz
fdivs
pop
and
jnp
push
les
inc
pop
inc
dec
jne
in
mov
jbe
sbb
mov
jmp
inc
in
stos
mov
lcall
push
pop
pop
inc
mov
dec
stc
ffreep
mov
add
mov
cmpsb
mov
cmp
jmp
nop
xor
mov
or
dec
shrl
sub
or
xchg
ret
mov
mov
push
jmp
inc
add
divl
pop
fld
fisttpl
cmc
sti
dec
mov
mov
adc
roll
push
mov
jge
mov
push
xorl
inc
repz
leave
and
mov
sbb
fsubs
xor
fsubp
pop
std
imull
xchg
dec
loopne
adc
jo
ljmp
xor
pop
adc
or
and
mov
mov
push
imul
pop
and
inc
call
outsl
lock
sub
fldcw
int
in
xchg
add
roll
xchg
inc
or
jae
std
dec
into
mov
andl
jmp
lods
lcall
cwtl
cld
adc
or
popa
cld
mov
ss
enter
scas
nop
sar
fsubrl
add
xchg
jge
or
inc
and
rolb
lods
and
std
lods
inc
fcoml
pop
xchg
add
movsl
pop
mov
cmpsl
jle
mov
gs
push
push
push
jle
jno
lret
xchg
adc
int
in
push
cmp
cmc
xor
lahf
and
fmull
pop
inc
sahf
add
lods
push
nop
outsb
les
js
mwaitx
iret
dec
cmp
cmpb
mov
pusha
in
imul
dec
xchg
rolb
cmc
in
inc
pop
xchg
rdmsr
loopne
faddp
mov
push
mov
stos
pop
mov
push
xor
test
mov
popa
in
addr16
jecxz
ret
mov
jle
xchg
mov
lahf
add
mov
and
cli
push
fcos
xor
sub
push
fisttpl
adc
std
jne
or
out
jns
xchg
dec
iret
orb
push
shlb
aas
sbbl
lcall
lcall
mov
push
mov
and
mov
stos
les
dec
test
inc
pusha
stos
sbb
imul
out
test
sbb
daa
adc
xorl
and
int
mov
or
dec
xchg
shll
rol
jge
out
icebp
cli
out
sbb
ds
mov
and
in
enter
gs
mov
leave
cmpsl
hlt
stos
xchg
xor
sbb
psubusb
push
scas
push
repz
aam
cmp
jno
mov
push
mulb
mov
inc
jne
cmp
jae
inc
inc
cmp
movsb
mov
test
ljmp
jl
int
inc
mov
mov
cmp
aam
in
out
push
int3
insb
mulb
jb
std
scas
loope
mov
mov
mov
xchg
lods
testl
push
adc
mov
mov
cmc
fsub
mov
sti
mov
cmp
cmp
in
test
sub
das
decl
cmp
shlb
and
out
arpl
jmp
sahf
ss
sbb
sub
xlat
dec
stos
sbb
jecxz
and
aad
enter
xor
iret
push
lret
cli
mov
and
pusha
pusha
inc
pop
adc
cmc
test
adc
out
lahf
jmp
add
fisttpll
inc
pushf
dec
mov
js
jbe
lods
mov
push
cltd
adc
sbbb
and
outsl
lods
hlt
xor
pop
insl
or
inc
aam
mov
jbe
or
lret
ds
pop
aam
outsl
aas
or
lret
jb
pop
ret
ss
mov
lods
arpl
inc
cmc
and
or
and
dec
hlt
adc
adc
push
pop
mov
packssdw
mov
leavew
test
shl
fs
mov
enter
dec
lahf
lods
pop
xchg
lret
sbb
mov
pop
cmc
aam
adc
out
and
lds
pop
dec
mov
insb
hlt
popf
adc
test
popa
and
mov
ror
inc
xchg
mov
or
sub
cmpl
push
add
cld
aas
push
mov
rorl
push
sbb
jno
imul
adc
xchg
xor
sbb
mov
lods
and
add
push
jne
cs
out
xor
stc
lret
cmp
loop
fisubrs
xchg
inc
inc
cwtl
pop
ffree
movsl
jbe
adc
pop
dec
or
arpl
push
subb
loope
sbb
xchg
xchg
fcoms
sub
jo
adc
ret
lods
pop
test
or
push
lret
add
mov
lock
mov
mov
mov
xchg
pop
sbb
mov
cmpsl
loop
mov
or
bound
jmp
pop
repz
and
mov
insl
shlb
insl
cmp
dec
inc
repz
cmp
sub
es
jmp
loop
shlb
mov
and
or
push
add
call
aam
xor
mov
mov
mov
ss
jnp
sbb
mov
incb
mov
arpl
adc
ja
mov
push
xor
ret
imul
fsubr
xlat
inc
xchg
pop
xor
int
ja
call
stos
scas
fst
push
xor
push
fsubr
int
lahf
shr
cmpsl
daa
inc
mov
jle
xchg
cs
out
mov
ja
sbb
cmp
cwtl
and
inc
mov
addr16
dec
xor
pop
ret
pop
jae
cmpsw
push
xor
pusha
sbb
adc
cmp
xor
sbb
mov
push
mov
ret
sub
ficoml
lea
aam
pop
sbb
add
test
lods
stc
int
inc
push
imul
orb
mov
rcll
push
push
movsl
mov
mov
pop
xchg
pop
pop
or
repz
push
call
sub
adc
in
mov
rol
rcll
sbb
mov
inc
popf
addr16
into
imul
push
adc
shll
lods
sti
mov
nop
mov
dec
repz
push
fcoms
lods
or
ret
lret
sub
fsubs
jl
pop
add
dec
and
jmp
xchg
mov
mov
popa
xor
sub
pop
dec
cmp
push
sbb
aaa
outsb
jns
aas
inc
jno
xchg
mov
pop
mov
pop
mulb
lahf
xchg
mov
rorb
loop
fisubrl
xor
cwtl
mov
in
mov
add
outsl
push
xchg
sub
stc
sbb
es
sti
push
pop
aaa
fadd
add
mov
dec
cmc
int3
inc
int3
inc
imul
xor
jle
daa
xlat
or
pop
hlt
orb
repz
add
adc
mov
or
mov
std
loope
add
xchg
dec
mov
adc
loopne
hlt
pop
std
adc
or
fwait
cli
jbe
pop
std
sahf
push
mov
fisttpl
mov
into
and
inc
pop
mov
movsl
jbe
je
stos
ds
dec
lea
je
stos
outsl
push
mov
imul
sub
clc
dec
mulb
imul
fnstenv
xchg
icebp
nop
loop
push
xchg
pop
rcr
popf
imul
dec
divl
dec
cs
rcll
in
test
dec
in
adc
fwait
push
mov
rolb
ret
mov
xor
das
cmpsb
pop
mov
into
hlt
daa
and
and
insb
jb
arpl
nop
sbb
sbb
lods
lcall
push
pop
insl
push
and
dec
cmp
shrb
add
outsl
in
xchg
jmp
mov
in
mov
iret
bnd
or
lret
loop
jae
stos
cmpsl
arpl
out
mov
sti
mov
push
mov
xor
xchg
cltd
inc
pop
xor
cli
jne
jb
push
lcall
fistps
dec
cltd
mov
xor
push
dec
sbb
in
les
nop
mov
test
mov
repz
mov
jmp
loopne
iret
or
les
push
add
inc
inc
cmp
add
aas
pop
popf
popa
in
and
ficoms
push
ss
push
movq
push
mov
rcr
mov
jbe
shlb
scas
enter
jne
lret
cwtl
test
jmp
jle
push
mov
sub
idivb
test
push
mov
lahf
push
add
xchg
jns
roll
ret
fs
lods
xor
out
jecxz
mov
divb
cmpsb
pop
in
lahf
sbb
xchg
jle
jl
dec
inc
out
popf
stc
mov
jo
ja
sbb
shll
cmp
out
int
out
cltd
imul
dec
lret
xchg
mov
popa
cmp
dec
ret
dec
fsubs
clc
sbbb
lret
imul
fdivl
pcmpgtw
fadd
repnz
mov
fadds
lcall
xchg
fnsave
in
mov
cltd
push
push
pop
xchg
and
movsb
mov
cmp
mov
and
les
test
stos
repz
mov
loope
lds
sbb
sbb
mov
rep
jl
int3
cmpsl
cmp
xchg
clc
xchg
int3
movsl
xor
and
popa
xchg
mov
mov
dec
mov
push
stos
imul
xor
leave
hlt
jbe
xchg
add
aas
push
mov
test
jle
mov
pop
mov
data16
mov
imul
scas
and
jae
lea
repz
xchg
mov
or
ja
and
mov
and
mov
stos
or
cmp
cwtl
sbb
mov
fucomp
nop
push
test
sbb
fimull
aam
push
fstl
scas
repnz
call
orb
adc
jl
push
dec
push
hlt
pop
add
dec
icebp
or
rorb
loopne
mov
mov
negl
fcomps
sub
repz
push
sbb
inc
jo
and
movsl
jb
cli
xchg
mov
and
lret
cld
mov
lret
push
cmpl
cld
mov
xor
aas
jl
mov
ja
lret
gs
fbstp
dec
xchg
jp
xor
add
mov
bound
fldenv
test
insl
push
pop
dec
ret
pop
jb
and
jae
fiaddl
sbb
adc
pop
inc
push
movswl
inc
popl
jns
je
push
out
mov
test
incb
pop
lret
sub
outsb
stc
adc
mov
inc
bound
and
ds
mov
or
out
cwtl
pusha
stos
add
mov
shlb
push
mov
mov
pop
sub
mov
push
xchg
or
mov
lahf
test
mov
mov
cmpsl
data16
push
jmp
test
fnstcw
jae
rcl
rorb
cwtl
mov
sbb
mov
xchg
in
add
dec
xor
lds
inc
mov
sbb
pop
inc
ficompl
mov
test
ss
jne
pop
icebp
jmp
inc
xchg
dec
mov
mov
into
add
add
inc
push
xor
jge
test
enter
inc
out
lahf
mov
mov
outsl
clc
sti
out
mov
std
adc
mov
xchg
rorl
add
sbb
or
push
mov
sbb
bound
popa
aas
inc
mov
inc
imul
ljmp
xchg
stc
rcr
out
xchg
ficomps
stc
jae
pushf
xor
mov
pusha
mov
cmp
push
sbb
cltd
sub
movsl
xchg
push
and
adc
in
mov
mov
jg
ds
adc
inc
jo
add
test
jg
sub
loopne
and
mov
rorb
pop
rcll
mov
push
jae
jae
jmp
popa
mov
test
push
dec
pop
ljmp
push
loop
imul
out
popa
jl
out
arpl
aaa
push
jmp
insb
xor
dec
scas
dec
mov
popf
ret
sbb
aas
out
sub
add
jmp
ret
mov
bound
mov
je
jmp
ljmp
jno
sahf
mov
lock
inc
mov
sbb
outsb
bound
gs
adc
or
int
outsb
popa
mov
imul
mov
lods
addr16
or
lods
inc
hlt
negl
mov
fbld
gs
stos
popa
movsl
ret
test
ds
or
jnp
mov
outsl
push
push
mov
lcall
and
inc
shlb
sub
enter
shrb
fistpll
popa
push
ret
arpl
and
jmp
insb
ds
gs
and
repnz
popf
lea
adc
loopne
or
mov
fidivl
jo
andl
mov
xor
shll
xor
lcall
xor
aad
xchg
push
test
jge
sbb
push
and
pop
push
sub
mov
jae
fwait
push
mov
xor
ja
push
dec
in
scas
mov
add
jne
aad
xchg
lahf
xor
xchg
lret
ss
mov
flds
xchg
lods
notb
mov
mov
aaa
xor
and
mov
cmp
xlat
adc
popf
xchg
cmp
inc
xchg
xor
jecxz
ror
stos
push
dec
aam
sub
mov
pop
jecxz
lret
std
pop
or
pop
or
pop
mov
movsb
out
decb
xorl
sbb
add
fnsave
rcl
mov
icebp
pop
jmp
push
xchg
imul
xchg
sub
push
repnz
iret
jne
cwtl
dec
push
inc
test
jmp
lods
adc
mov
xor
iret
sub
or
or
clc
imulb
dec
sti
mov
lds
ds
rorb
xor
mov
lret
jg
leave
mulb
mov
mov
jne
aad
adc
jp
mov
shll
and
sub
push
add
imul
inc
test
ljmp
adc
mov
aas
mov
cmpsl
push
pinsrw
mov
mov
stos
ss
popa
dec
test
xor
xor
movsl
dec
into
or
dec
inc
dec
add
in
xor
or
inc
xchg
jbe
inc
ror
mov
dec
and
jge
stos
in
sbb
xor
aaa
inc
cmp
adc
sarb
xor
hlt
and
push
imul
lret
jb
test
mov
out
mov
rcrl
sbb
lret
mov
push
xor
push
ss
pop
xchg
aaa
aas
mov
cs
clc
test
push
cwtl
sbb
dec
dec
mov
mov
out
xchg
mov
add
aaa
sub
pop
sbbl
in
adc
das
insb
fwait
push
daa
sub
fs
dec
insb
icebp
adc
jno
mov
imul
lea
es
push
xchg
orl
sbb
mov
nop
imul
ret
push
loop
push
pop
add
test
and
orb
sub
fstps
lods
or
adc
jnp
inc
sub
xor
lcall
dec
lea
cmp
test
rcrb
lds
dec
add
decl
pusha
add
lret
mov
insl
pop
test
pop
cld
dec
mov
insl
fbld
mov
xchg
mov
or
imul
and
ficoml
lret
daa
dec
or
adc
mov
sbb
lret
test
cmp
mov
test
gs
or
aas
dec
loope
sbb
inc
xlat
ficoml
dec
push
in
or
fdiv
lea
clc
mov
es
fimuls
or
hlt
mov
and
xchg
push
inc
sbb
dec
je
sti
sti
inc
mov
sbb
xorb
xchg
adc
and
aaa
cmc
pop
in
xchg
test
inc
movsl
push
push
cmpsl
inc
mov
xchg
adc
and
aaa
cmc
pop
in
xchg
test
inc
movsl
push
push
cmpsl
inc
mov
xchg
adc
and
aaa
icebp
pop
in
xchg
xorl
cmpsl
jno
inc
xchg
adc
movsl
xlat
sub
cmp
loop
or
test
dec
push
pop
ss
es
pop
sub
jle
cmp
mov
cmpsb
std
fucom
lods
out
push
dec
push
pop
ss
es
or
cmp
xchg
mov
test
negb
cmovge
pop
cs
jge,pt
or
cmp
movsl
sub
fildll
mov
or
add
mov
mov
in
stos
fimuls
xlat
je
inc
stc
sbb
jl
inc
loop
and
xor
dec
in
pop
cld
xchg
push
imulb
cli
mov
lcall
std
sub
and
lea
scas
notb
mov
ljmp
test
les
sbb
adc
sub
int
push
out
inc
rorb
subb
xchg
imul
push
into
cs
fmuls
lods
imul
dec
out
jno
test
out
mov
lret
jmp
xchg
imul
dec
pop
pop
ss
es
or
jg
int
ficomps
jp
arpl
and
dec
dec
xchg
mov
ret
loopne
in
das
mov
jns
addr16
pop
insl
push
sub
push
xor
mov
mov
lods
repnz
shll
push
pop
sbb
push
popa
inc
sbb
xchg
int
fnsave
popf
imulb
push
pop
ss
es
or
cmp
xchg
mov
cmpsb
std
popf
imulb
sub
lahf
push
lods
cmp
and
je
mov
sbb
mov
iret
mov
cmp
pop
ret
adc
test
add
fsubp
fcompl
xchg
lret
pop
lcall
aam
shrl
aam
call
adc
ret
sbb
nop
iret
fs
push
fs
add
loop
lsl
in
dec
sbb
inc
mov
clc
adc
lds
mov
sahf
dec
loope
je
fisubs
push
cwtl
int
sub
dec
cmp
ja
int
arpl
mov
mov
cmp
xchg
sti
dec
adc
and
add
adc
mov
test
mov
outsl
adc
cld
xor
sub
ret
jmp
inc
andl
mov
pusha
push
pop
out
cwtl
or
mov
rclb
mov
mov
sub
xchg
mov
ret
hlt
push
mov
movsb
rolb
int
repz
jne
cmovbe
inc
scas
stos
iret
loop
add
ret
fisubrl
push
xchg
clc
lds
mov
hlt
dec
fisubl
sbb
add
es
ljmp
fisubl
ficomps
movsb
pushf
lret
xchg
cld
mov
mov
mov
or
aam
xor
add
adc
mov
insl
xor
and
mov
xor
cmp
rcll
push
lods
lcall
mov
call
cmc
xor
xor
and
inc
xor
add
fdivl
enter
dec
fwait
in
mov
idiv
insl
adc
movsb
fistpl
loopne
jmp
fcmove
adc
mov
es
imul
gs
arpl
int3
sub
stos
or
pop
hlt
out
xchg
cmp
push
cmp
nop
or
adc
jecxz
sbb
mov
inc
inc
inc
xor
insl
pop
test
or
or
push
scas
adcb
inc
int
jo
cmc
cmp
mov
pop
out
cmp
js
sbb
cmp
lea
jg
fstpl
push
jmp
clc
jge
in
je
enter
xchg
push
stos
xor
xor
mov
jb
daa
mov
cs
fsubrs
mov
xor
xchg
pop
sbb
pop
pop
je
dec
and
in
jb
sub
jmp
orl
in
pop
adc
pop
and
ds
aaa
add
cs
and
mov
xchg
push
std
mov
hlt
pop
sub
cwtl
push
aam
ret
js
fs
push
fldt
scas
mov
jl
and
faddp
sub
loop
xchg
cmp
add
pop
int
and
aad
fs
rcrb
js
mov
fs
mov
push
jnp
bound
insb
inc
sti
mov
inc
loopne
add
loope
lgs
add
and
dec
cwtl
shll
xor
push
ljmp
shl
lods
adc
jmp
je
xchg
mov
fstps
jg
pop
clc
sub
jbe
fidivrl
jg
jns
into
cmp
cmp
movlps
mov
ds
idivb
xor
inc
xlat
jbe
mov
nop
rcl
pop
xlat
mov
insb
fs
in
cmpsb
mov
ss
and
add
add
sbb
inc
popa
mov
mov
push
inc
adc
xchg
clc
imulb
jno
int
inc
and
push
loopne
movsl
sbb
inc
and
push
push
push
in
je
fimuls
jnp
xor
stos
inc
mov
sub
mov
or
dec
mov
inc
decl
xchg
push
and
movb
push
cmpb
pop
push
adc
mov
sbb
cmpsl
push
rcl
sub
add
cwtl
test
xor
dec
xchg
mov
or
adc
mov
adc
mov
dec
fdivrs
push
jmp
into
dec
mov
ja
and
inc
fwait
xchg
inc
fadd
in
inc
xor
cmc
jne
adc
mov
sub
dec
mov
mov
lds
cmp
outsl
inc
cmp
sarb
adc
je
add
adcl
lret
sbb
mov
dec
outsb
cmc
dec
repz
test
bound
cmp
inc
add
or
sbb
inc
enter
or
out
outsl
fiaddl
imulb
lahf
outsb
dec
and
sbb
clc
add
mov
sub
sbb
je
cmp
or
mov
mov
call
jge
or
jecxz
xor
out
pop
pop
add
in
adc
dec
add
int
fadds
leave
inc
daa
mov
inc
sub
lcall
lods
push
adc
jne
out
cmpsl
hlt
inc
ljmp
cli
inc
dec
push
inc
mov
cmp
push
mov
cli
test
push
das
xchg
clc
mov
movsb
mov
adc
clc
add
out
in
dec
inc
mov
xchg
aad
mov
stos
or
mov
lcall
sbb
or
aam
icebp
sub
movsb
add
cmp
mov
ja
inc
or
sub
jge
push
xchg
cmp
arpl
xor
clc
std
jb
jl
xor
les
push
fs
add
mov
je
aad
test
pop
sahf
loope
js
xor
lea
sub
adc
out
inc
aaa
push
in
mull
fldl
loope
nop
fs
fcomip
cmovp
jno
cmovs
inc
mov
jle
leave
dec
jbe
adc
fimuls
movsl
lret
dec
sahf
inc
out
jb
aaa
push
dec
movsb
xor
sbb
mov
xchg
jg
mov
lret
fisubrs
ljmp
cltd
nopl
jb
push
mov
neg
ss
mov
in
loop
mov
or
leave
inc
push
mov
or
fs
mov
dec
dec
in
inc
scas
call
dec
insb
mov
lds
pop
pop
lret
push
inc
xor
jae
lods
xchg
shrb
add
sbb
ret
fists
mov
mov
dec
cmp
xchg
jl
push
std
and
sbb
sub
aam
push
out
pop
popf
sbb
mov
mov
pop
inc
mov
in
in
ljmp
aaa
push
adc
test
es
xlat
push
ffree
xlat
push
mov
aas
mov
inc
fmull
out
mov
cmp
js
in
xor
xchg
mov
cmovp
fwait
lock
xor
sub
mov
leave
and
lock
dec
pop
mov
adc
xor
fdivrl
inc
fldcw
loopne
insb
andb
bound
and
insl
or
mov
pop
lret
xor
push
ret
and
dec
jle
dec
adc
mov
loope
sub
or
jecxz
js
ja
cmp
sub
dec
cmc
dec
int
push
sub
out
fdivrs
cmp
push
adc
nop
pop
pop
add
mov
mov
shll
clc
scas
imul
inc
dec
fists
stos
mov
movsb
loope
xorb
das
lret
shrb
pop
outsl
filds
pop
pop
xor
mov
push
xlat
mov
pushf
or
lods
repnz
mov
subb
inc
jg
push
inc
cmp
aas
addb
xchg
inc
add
insb
jmp
pop
lea
pushf
push
jno
cmp
mov
aas
dec
lods
mov
dec
ret
jl
cwtl
xor
stos
pop
mov
mov
cwtl
in
test
testb
cld
or
lcall
cmp
xchg
push
jecxz
xlat
jnp
sbb
push
idivl
imul
xchg
xchg
or
xor
inc
ret
aaa
add
xchg
fdivl
push
sub
sbb
cmp
sti
sub
dec
pop
sub
mov
jl
in
adc
dec
xchg
aas
jge
in
ljmp
mov
add
test
faddl
mov
sbb
cs
test
jno
jle
mov
mov
loop
xor
addr16
icebp
stc
icebp
push
sub
call
mov
out
stos
sub
ret
xor
outsb
test
insb
dec
dec
loope
in
add
or
lea
jnp
dec
dec
scas
ds
mov
hlt
sbb
test
or
cmp
gs
jmp
outsl
mov
xchg
xor
mov
push
outsb
imul
call
call
push
test
into
inc
jp
inc
sub
hlt
js
inc
rolb
roll
push
popa
adc
jg
in
loopne
push
xchg
inc
test
out
adc
cmp
push
test
push
sbb
add
jae
test
popf
std
repz
pop
outsb
adc
fneni(8087
je
push
aaa
adc
jg
jecxz
leave
aad
add
shrb
mov
mov
loopne
xor
out
sub
ljmp
lods
inc
xor
subb
add
inc
loope
insl
and
sahf
imul
ss
push
lahf
or
inc
insb
push
gs
repz
push
sti
cmp
rcrl
movsb
pushf
loopne
movsl
jge
dec
dec
cmc
mov
adc
in
jg
inc
cld
sbb
inc
lods
push
nop
add
gs
mov
sbb
aaa
xchg
outsb
jg
push
dec
mov
mov
pop
outsb
or
fildll
sbbl
mov
sbbb
in
and
push
insb
mov
push
push
push
xchg
push
push
inc
and
icebp
jb
inc
mov
push
and
lret
xchg
jmp
fwait
lods
or
bound
adc
rol
imul
inc
mov
popf
jle
clc
mov
mov
push
insb
rorl
dec
out
adc
mov
icebp
das
adc
outsl
xchg
or
mov
out
pop
test
sub
xchg
and
lea
cmc
adc
mov
and
adc
mov
mov
fs
adc
scas
push
jp
pop
pop
xor
sub
dec
add
xchg
adc
and
sahf
cmp
out
push
bound
stos
lea
jp
push
mov
gs
xchg
fiadds
orl
cli
in
mov
push
leave
outsb
push
pop
rorl
mov
icebp
jl
mov
sbb
cwtl
sbb
es
push
mov
sbb
or
and
mov
call
cmp
sub
in
mov
cmp
das
fstp
popf
or
test
popa
mov
stos
xchg
cs
jns
mov
das
add
loop
mov
sahf
lods
popa
cmp
xchg
mov
dec
pop
inc
ds
xor
pusha
lahf
imul
xchg
sbb
jmp
aam
xor
xor
inc
add
out
mov
adc
repnz
add
nop
xchg
shrl
mov
or
lcall
sbb
mov
or
lock
fldcw
popf
inc
sub
mov
adc
and
mov
sbb
fcoms
and
pushf
cltd
loop
or
orb
push
out
xlat
cld
add
test
xchg
loopne
push
stos
adc
add
subl
jnp
push
jmp
adc
or
mov
add
mov
push
mov
lahf
or
jmp
gs
repz
imulb
int
or
or
pop
scas
arpl
test
cmc
outsb
push
xchg
mov
lret
sub
int3
cli
test
jge
dec
lods
pop
leave
xlat
psllw
popw
jae
out
inc
push
cmpsl
inc
imul
pop
mov
out
pmulhw
adc
repnz
iret
jb
xor
mov
test
dec
insb
fistps
mov
mov
mov
cmp
add
xor
jmp
psrad
mov
call
jmp
adc
jne
add
xchg
movsb
shlb
pop
bound
ret
sbb
push
repz
cmp
jl
int
cmp
fxam
jno
ret
sub
js
testl
inc
push
enter
rclb
add
fst
dec
xor
xlat
xchg
mov
icebp
in
adc
cmovo
sbb
repnz
push
cs
shrl
cmp
aaa
pop
loop
jo
std
pusha
in
ds
jg
xchg
and
add
push
push
dec
shrb
xor
inc
cltd
bound
mov
mov
sbb
shll
and
in
adc
sbb
xor
out
jo
sub
push
xchg
test
add
push
into
shll
xchg
mov
and
cmpsl
jecxz
into
pop
cmpsb
adc
xor
imulb
push
enter
inc
out
data16
jecxz
xchg
push
mov
mov
loopne
inc
jge
sbb
sbb
icebp
ret
cmp
ljmp
or
cmp
mov
test
fcmovnbe
in
push
adc
pop
or
xor
push
or
mov
scas
mov
jae
ret
push
out
mov
enter
jne
mov
jns
xchg
mov
mov
fwait
lret
in
aaa
iret
sbb
std
xor
stc
mov
fldenv
ds
std
pop
xor
mov
mov
mov
aam
mov
bound
lds
bound
jl
inc
sbb
out
xchg
ljmp
sub
hlt
mov
cli
jo
xchg
mov
ja
push
inc
pop
inc
sbb
inc
dec
xchg
divb
add
inc
pop
dec
add
stc
jbe
stc
pop
xchg
mov
cmc
and
xchg
mull
aaa
popa
test
negb
imul
and
inc
cmpsb
lea
movsl
and
mov
xlat
rcll
jae
or
jo
pop
pop
and
fs
sub
mov
pushl
pop
ss
fmuls
insl
aad
dec
mov
xor
in
shrb
mov
adc
sbb
insb
inc
je
add
mov
cmpsb
int3
jle
nop
mov
in
out
ss
inc
fsubrs
setp
ljmp
or
mov
stos
outsb
or
push
push
mov
lods
imul
sub
xor
cmpsb
xchg
dec
aaa
out
push
mov
pop
cmp
ret
or
or
or
jno
xor
dec
imul
cwtl
xchg
jl
inc
mov
sbb
sbb
fsubr
test
push
or
outsb
pcmpgtw
insl
and
push
int
fadds
cmp
mov
addr16
sub
dec
mov
jb
add
pop
and
mov
mov
fcomps
mov
iret
pop
xor
stos
call
inc
cmp
jp
mov
jno
sub
movsb
lea
inc
addb
pop
out
dec
gs
cmp
mov
xchg
jae
out
test
jmp
jge
das
mov
fadds
ret
ret
xor
mov
lods
mov
jl
xor
inc
push
aaa
jbe
cmc
mov
xchg
outsb
pop
dec
push
addr16
ss
insb
xor
js
lods
call
xchg
cwtl
xor
aad
int3
mov
mov
rorl
rcrb
lods
sbb
cmp
sub
add
mov
in
adc
in
xor
jp
xchg
cltd
adc
test
xor
icebp
mov
out
mov
dec
pop
add
loopne
jae
push
scas
mov
adc
add
daa
movsl
dec
push
iret
xchg
call
dec
leave
loope
rclb
cmp
cmp
shl
or
fcompl
push
cmp
mov
jge
or
in
cmpsb
adc
push
jmp
cmc
pop
push
mov
adc
aad
mov
and
sbb
cmpsl
test
bound
out
push
push
dec
mov
mov
ja
into
hlt
pusha
rol
jns
mov
mov
lods
or
jnp
jl
scas
enter
mov
fsubr
pop
aaa
or
jbe
sbb
test
inc
cltd
inc
sarl
lcall
pop
pop
push
inc
nop
add
into
or
xchg
lret
fwait
aaa
add
mov
dec
pop
outsl
jbe
xchg
dec
fsubrs
mov
sahf
dec
sub
push
jecxz
push
pop
in
sbb
cmp
add
cld
jnp
jmp
mov
mov
mov
jno
clc
imul
dec
jmp
xlat
or
pushf
adc
mov
out
xchg
les
icebp
push
pop
cmpsl
mov
dec
or
jl
and
mov
xchg
ljmp
dec
pop
jae
and
mov
mov
jae
ds
cwtl
mov
data16
push
mov
cs
xor
push
jle
cltd
cld
xlat
pop
cli
mov
lret
xor
cmc
test
aaa
test
lods
scas
jmp
lret
push
adc
add
clc
cld
pop
add
loope
push
stos
jnp
gs
sub
pop
pushf
std
cmp
ss
fildl
das
pop
loop
sbb
loop
lret
jae
pushf
inc
jp
stc
jnp
out
and
pop
xchg
and
movsb
loope
pop
cld
std
into
mov
aas
mov
push
mov
daa
jno
add
shl
stos
cs
cmp
push
dec
in
call
sub
in
mov
fbld
inc
and
ja
hlt
push
rcrl
addr16
inc
dec
int
je
inc
popa
cmp
call
cmpsl
cmpsl
push
sbbb
xchg
dec
adc
adc
scas
jge
aas
out
pop
andb
js
test
jl
aad
bnd
dec
stos
mov
repz
push
xchg
mov
jb
scas
jno
shrb
sub
fmuls
mov
or
mov
movsb
xchg
cmp
xchg
jge
cmpsl
ret
lcall
sbb
cs
fnstsw
leave
negb
in
popa
or
mov
dec
inc
cmp
push
mov
mov
lret
sub
cmp
btc
mov
iret
into
or
sbb
in
std
outsl
lods
push
in
xlat
int3
xchg
aad
sbb
sbb
inc
mov
sub
stos
fdivs
in
push
loopne
jmp
cltd
jl
mov
cmp
jl
mov
xor
lods
jecxz
cmpb
cmp
mov
fdivrs
ret
js
jo
cmc
sti
cmc
pop
stos
xor
loopne
jmp
insb
in
cld
jmp
inc
push
insl
rcrb
xchg
in
add
rcr
add
push
popw
loope
mov
paddb
or
cltd
mov
pushf
cs
xchg
jb
pop
mov
std
sbbl
ret
adc
sub
daa
cmpsl
adc
test
js
inc
xor
stc
enter
add
xor
fistpl
push
das
pop
imul
mov
mov
dec
scas
mov
add
sub
and
inc
or
cmpsb
enter
icebp
rorl
shlb
fwait
rcrb
into
test
dec
insl
mov
out
sub
mov
mull
jle
lgs
cmp
and
adc
dec
lods
dec
cmp
mov
or
push
js
mov
mov
aam
mov
push
adcl
cmp
sahf
loop
dec
jmp
leave
test
add
cmpsb
dec
add
push
push
or
int3
jno
and
outsl
outsb
mov
out
testl
addl
mov
xchg
movups
rcrl
jp
push
stc
or
xchg
jnp
pop
sub
lea
test
imul
and
test
and
je
les
pop
push
or
fisttps
into
outsl
jns
out
jp
pop
mov
ja
sub
in
push
xlat
xor
jne
xchg
sbb
dec
jmp
fwait
add
pop
ret
sbb
lea
int
or
mov
mov
sbb
fs
sub
outsl
push
sbb
ds
fwait
adc
push
stc
data16
dec
xchg
loop
adc
arpl
aad
jae
add
adc
pushf
xorl
cs
cmp
and
icebp
push
push
mov
add
andb
add
lds
inc
aas
inc
sbb
or
popa
pop
pusha
cmp
cmp
inc
sbb
pop
xor
test
xor
sbb
jle
mov
ficomps
hlt
bound
scas
push
es
jne
or
sbb
out
ss
and
mov
mov
pusha
mov
jl
inc
fsts
loope
mov
aam
in
jbe
in
pop
cmp
lods
shrl
push
aas
stos
jl
ret
sar
dec
movsb
pop
or
jge
push
lret
lds
jmp
xchg
insb
es
or
cmp
xchg
mov
cmpsb
std
popf
imulb
push
pop
ss
es
or
cmp
xchg
mov
cmpsb
std
popf
imulb
push
pop
ss
es
or
cmp
xchg
mov
cmpsb
std
mov
popf
imulb
add
aaa
insl
es
or
out
imul
cmpsb
mov
push
sbb
out
inc
mov
cs
hlt
jnp
pop
xchg
cs
mov
movsb
sbb
sti
je
fistl
add
xor
and
aam
les
inc
in
push
add
movsb
sbb
cmp
adc
add
xor
and
aam
out
cwtl
sub
sub
lret
scas
and
frstor
pop
mov
or
repz
hlt
mov
cmp
mov
add
lret
sub
or
test
sub
orl
adc
lahf
inc
jno
mov
push
imul
and
fdivr
rcr
movsb
fcoml
sti
push
iret
mov
and
pop
out
inc
fwait
or
mov
hlt
xchg
stos
cmp
fwait
and
cwtl
add
mov
popa
addr16
xchg
sub
stos
cltd
stos
movl
xchg
test
mov
testb
and
cmpl
sub
popf
int3
xor
inc
or
out
jno
addr16
fistl
add
xor
and
aam
shl
dec
in
xchg
pop
test
mov
movsb
sub
cmpsl
or
push
es
sub
cmp
jg
jb
lods
and
adc
inc
jmp
mov
xchg
push
negb
in
xchg
fs
cwtl
inc
sbb
cmpsl
or
xor
and
aam
les
dec
in
xchg
sub
push
jmp
sti
je
fistl
add
xor
and
aam
les
dec
in
xchg
sub
push
jmp
lods
jmp
int3
push
mov
and
movsb
mov
fcmovu
iret
adc
cmc
andb
inc
mov
mov
iret
div
inc
pushf
sub
inc
push
pop
test
pop
icebp
nop
testl
push
dec
jl
dec
push
mov
push
fmuls
dec
jecxz
jno
pop
test
mov
xor
cmp
lahf
or
push
cmp
shll
xchg
fmuls
jg
repnz
jl
orl
jp
loopne
imul
fs
mov
sbb
inc
cld
cs
sub
mov
into
lahf
into
pop
fstpl
inc
rorl
imul
popa
jnp
into
adc
movsl
clc
lea
xor
sub
add
push
xchg
jmp
add
adc
xchg
insl
add
cmp
iret
aas
dec
pop
pushf
in
std
cli
adc
arpl
dec
sbb
das
jl
ss
push
clc
outsb
push
xchg
mov
pusha
into
dec
into
stos
pushf
xchg
mov
bound
sahf
stc
xor
xchg
jl
sub
xchg
inc
call
bound
pop
scas
or
sbb
in
mov
popf
inc
dec
das
push
cmpsb
cmc
loopne
push
outsl
add
adc
pop
dec
sbb
ret
and
jmp
ret
jl
pop
in
pop
add
and
cli
fwait
jmp
cmpsb
push
js
dec
mov
test
bound
ss
sahf
sbb
pop
xor
mov
push
loop
insl
sub
mov
pop
push
fdivl
fisttps
subb
xor
adc
jbe
popf
pop
or
lahf
lods
push
pop
shl
jg
or
inc
mov
mov
mov
add
fnstcw
rcll
mov
imul
mov
adcb
cmp
xor
push
cmp
sub
or
das
xor
lods
cmpsb
pop
inc
push
jo
adc
movb
inc
xor
jp
adc
sub
test
dec
lahf
imul
xor
push
push
mov
push
or
xchg
adc
jne
stos
mov
andb
loop
mov
xor
cwtd
mov
adc
jnp
orb
mov
push
enter
popf
scas
sbb
imul
ret
mov
add
inc
fildl
xchg
sub
or
notl
call
adc
hlt
call
mov
das
fidivrs
mov
sub
fstl
ss
popf
popa
adcl
mov
and
fldl
xchg
jne
dec
mov
repz
adc
add
aad
addb
sbb
dec
xchg
mov
pop
mov
test
and
add
addr16
rorb
push
gs
mulb
pop
mov
pop
pusha
imul
sbb
movsl
sub
lret
shl
testb
fldenv
rcll
ficoml
dec
out
fisttpl
dec
inc
hlt
sub
stc
cmp
ljmp
lods
inc
test
fimuls
lret
xchg
mov
insl
pop
arpl
mov
fcmovne
test
cs
test
lahf
mov
mov
push
mov
xchg
aas
loopne
rcrl
push
cli
add
mov
mov
sbb
loop
or
add
dec
mov
addr16
fsubrp
cmc
push
inc
in
sbb
sbb
pop
aaa
dec
movsb
shrl
outsb
cmp
dec
inc
or
aaa
jp
add
sbb
xor
cmp
mov
insl
xor
inc
dec
add
or
call
add
adc
or
adc
sqrtps
xchg
cli
add
mov
pushf
sbb
xor
sahf
loopne
push
popf
shlb
dec
and
push
dec
jno
insl
outsl
adc
popa
pusha
add
popa
xor
mov
add
add
fdivl
pop
clc
add
mov
adc
inc
pop
fadd
push
mov
fwait
push
mov
add
cmpsl
call
mov
inc
daa
cltd
aam
mov
ret
adc
mov
sbbb
icebp
or
js
pop
add
les
test
lods
lret
sbb
pop
pop
aas
fs
xchg
in
sti
std
lret
out
lret
xor
shlb
jmp
shlb
in
pop
lods
les
or
dec
jmp
add
cmp
out
adc
popf
lret
or
dec
adc
xchg
out
mov
ljmp
lea
js
popa
mov
std
cmpsl
sar
mov
push
pop
dec
cmp
fmuls
addr16
movsb
jge
jg
push
bound
xlat
xor
movsb
ja
xor
push
xor
pop
movsb
or
add
add
rcr
xchg
jmp
fwait
ja
inc
nop
push
stos
scas
jo
loope
std
cs
repz
cmp
out
std
ja
mov
cmp
fcmovnu
xor
inc
mov
mov
pop
hlt
test
and
xorl
rol
cmpsb
out
sar
call
fwait
ret
jecxz
mov
adc
xor
dec
in
xchg
shrb
push
or
int
ret
mov
xlat
out
gs
cmp
mov
cld
aam
cmpsb
jg
xor
test
or
push
test
in
hlt
cmpsb
sbb
imulb
push
stos
and
inc
cwtl
outsl
ja
sub
cmc
sbb
mov
xchg
adc
mov
outsl
sbb
je
push
inc
mov
out
mov
data16
mov
mov
and
xor
ret
imul
jne
fwait
mov
push
cld
in
test
sub
adc
or
xchg
mov
scas
lods
mov
loop
fcom
or
jno
xor
or
loopne
leave
les
mov
adc
push
mov
mov
in
push
sbb
rclb
jp
jno
movsl
pop
in
sarl
xchg
in
arpl
addr16
lret
push
pop
scas
fisubl
push
push
and
pushf
adc
scas
hlt
xor
ss
cmp
xchg
xchg
adc
pushf
pop
outsb
mov
pop
scas
add
lahf
xor
cmpsl
mov
adc
into
lods
cmp
enter
jo
insl
add
test
xchg
push
cwtl
in
dec
push
test
lods
popf
scas
mov
out
lea
leave
and
loopne
popf
pop
cmpb
jnp
test
fs
out
outsb
sbb
pop
dec
shrb
and
lods
in
iret
mov
lods
fiadds
fsubs
jecxz
negb
arpl
jne
push
bound
shll
push
loope
fs
es
jo
fdivrl
scas
add
sahf
mov
jl
cmpb
aam
int
pop
inc
fsubrl
mov
adc
stos
andb
out
arpl
adc
mov
xor
dec
and
push
dec
call
lcall
inc
or
jle
sbb
addr16
dec
cld
call
sti
scas
lcall
jno
and
adc
inc
stos
test
aam
stc
negb
cmp
xchg
repnz
into
sub
sbb
jne
js
add
repz
jmp
push
sub
call
mov
out
in
icebp
jae
adc
push
push
es
stos
adc
nop
out
mov
in
jne
shl
mov
or
mov
outsl
pop
in
cmpsl
jae
adc
lret
xorl
push
fstpt
decl
pop
bound
pop
std
stc
dec
loopne
rcrb
jmp
add
lcall
dec
adcb
cmp
and
addr16
xchg
push
mov
inc
cwtl
cmp
aad
xchg
aam
loope
cmp
pusha
add
add
jns
std
inc
xor
dec
lret
adc
icebp
mov
pop
mov
xor
cs
pop
push
push
stc
cmpsl
push
cmp
xor
rsm
and
in
call
iret
sbbb
stc
aam
xlat
push
aaa
pop
sahf
jmp
xor
fsubrl
lock
aas
fstl
adc
add
dec
and
repz
inc
leave
add
cs
es
pop
pop
icebp
inc
xchg
sbb
push
push
decl
jmp
out
jp
add
out
push
pop
pop
sub
loope
push
sbb
and
imul
or
push
pusha
pop
nop
mull
pop
lds
xchg
fdivrl
pop
cwtl
mov
dec
jecxz
int
sub
mov
xchg
movsl
xor
mov
scas
adc
ficomps
xor
ss
out
shlb
ds
int3
lds
add
sbb
push
cld
inc
xor
sub
pop
jo
sub
mov
sub
test
sti
mov
test
pop
inc
mov
jne
lret
ret
rolb
jno
test
cmp
and
mov
mov
add
jne,pn
xlat
push
call
xchg
jns
out
inc
mov
iret
jns
push
inc
jmp
sbb
or
push
push
or
scas
movsb
cs
mov
scas
aaa
lcall
call
inc
jbe
in
mulb
jg
pop
adc
xchg
into
sbb
or
in
in
push
mov
std
lcall
ret
pop
adc
movsl
lds
mov
sbb
inc
fwait
gs
mov
adc
mov
jnp
mov
xlat
jno
fs
testl
push
push
movsl
sbb
adc
inc
cwtl
xchg
movsb
in
or
dec
adc
mov
or
inc
hlt
shrl
mov
dec
test
cmp
push
inc
aas
test
inc
push
mov
iret
xchg
scas
ficompl
fldl
and
fisttpl
push
sub
sub
addl
adc
int3
cmp
xchg
popf
add
test
out
pusha
ret
pop
xchg
push
hlt
inc
vmread
std
inc
push
mov
cmp
jns
imul
scas
std
jo
mov
aaa
bswap
inc
in
cmp
push
insl
movsb
inc
inc
jg
pop
ja
xlat
test
rcr
and
push
lret
push
or
shll
cltd
add
loop
icebp
adc
orb
aaa
stc
dec
xchg
scas
push
mov
test
lods
push
aam
sbb
imul
inc
xchg
sub
pop
imul
fidivs
stos
in
mov
outsl
adc
arpl
adc
jno
sbb
pop
mov
arpl
and
into
loopne
and
dec
mov
je
or
cwtl
mov
add
or
daa
imul
push
dec
test
cmp
out
lds
pop
dec
adc
and
pop
outsl
out
sbb
mov
push
inc
mov
jbe
into
int
push
lret
jno
inc
rolb
lods
push
mov
jbe
insl
clc
subb
mov
fidivs
add
cmp
bound
xchg
add
movsl
mov
das
pop
inc
rcr
hlt
mov
jg
arpl
dec
jno
and
xlat
jnp
and
add
lods
das
in
outsb
and
scas
shrb
jno
or
popa
sub
fadds
sbb
jae
test
mov
add
in
mov
faddl
mov
push
inc
in
sub
jmp
push
pop
imulb
or
and
sbb
imul
mov
test
or
push
test
mov
push
push
fstl
in
insl
adc
out
stos
les
jmp
mov
fs
jb
mov
daa
xor
sbb
pop
sarb
lock
pop
or
xlat
dec
imul
mov
lea
pop
pop
adc
cwtl
push
xchg
and
and
cwtl
loope
out
fidivrs
arpl
gs
sbb
testl
cmp
add
jmp
mov
adc
pop
sbb
xor
sub
cmp
and
cmp
or
popa
insl
sub
mov
mov
jg
xor
lods
ret
sub
xchg
and
addr16
adc
mov
pop
adc
jge
mov
cmp
fldt
rcrl
mov
in
outsl
inc
test
xchg
outsb
mov
mov
lock
pop
mov
lods
mov
gs
mov
fistpll
in
gs
orl
in
pop
adc
js
xor
cmpsl
inc
lods
dec
rcll
sub
aaa
addb
in
cmp
hlt
rcrb
mov
lahf
pop
movsb
or
adc
cmpl
adc
cld
pop
aad
jle
pop
inc
mov
mov
push
adc
fcmove
push
jns
xchg
sahf
ja
pop
xchg
cmp
adc
addl
loopne
fidivl
ds
add
test
outsl
fists
je
pop
lcall
push
cmp
mov
lcall
inc
or
dec
repz
popa
rcrb
push
xchg
pop
adcl
dec
mov
sbbl
jno
add
mov
incl
xchg
loope,pt
inc
loop
xlat
lock
sbb
dec
in
or
aad
loopne
mov
std
sbb
daa
or
inc
push
or
popa
loop
dec
and
insb
loope
fcomps
scas
pushf
pop
add
xor
orl
es
jbe
pop
test
pop
mov
xchg
test
pushf
lea
rolb
cmp
das
xorb
push
xchg
rcll
shr
sub
test
xor
loopne
sarb
mov
mov
loopne
shll
sahf
stc
int3
mov
push
sbb
sub
ss
mov
mull
mov
in
out
fnstenv
xlat
push
mov
clc
addl
jge
cs
sbb
push
fwait
mov
push
jns
mov
mov
inc
pop
ljmp
sub
xor
loope
inc
bound
rcrl
outsb
jge
fnstsw
into
mov
dec
sti
sahf
xchg
pop
lret
sahf
sbb
movsl
add
dec
ret
fidivrs
das
pop
scas
aaa
jbe
push
pop
xor
push
pop
push
jno
pop
jbe
loop
mov
add
das
mov
das
sbb
or
pop
divl
mov
scas
mov
and
and
stos
pusha
jmp
or
mul
xor
pop
add
adc
adc
push
mov
lret
adc
std
cmpb
subb
fistl
dec
fisubl
mov
cltd
shrl
jg
xlat
push
cmp
repz
dec
sub
out
test
sbb
cmc
inc
or
add
adc
loope
mov
aas
jb
les
fwait
std
ret
sub
test
xchg
imull
lret
orl
lods
dec
mov
push
ret
jge
dec
rcrb
decl
out
cmpsl
loope
jp
stos
push
cs
sbb
cmp
xor
pop
adc
adc
sub
andl
repz
fisttps
push
data16
rcll
add
cs
pop
add
inc
push
pusha
xchg
cmpsl
inc
push
jecxz
mov
mov
lcall
outsl
xchg
add
mov
push
hlt
insl
mov
pop
mov
fsubrl
outsl
aaa
pop
inc
and
jae
cltd
cmp
leave
inc
jmp
jl
cmc
push
pop
aad
sbb
inc
cmc
cli
mov
cwtl
out
sub
xor
cltd
lods
xchg
jg
add
call
lods
jge
jp
cmp
cmpsb
adc
xchg
adc
out
inc
jmp
test
leave
cli
dec
pop
sti
xor
lods
sbb
and
dec
mov
cli
icebp
ret
movsl
pop
pop
dec
movsl
ljmp
stos
loop
loop
jns
sbb
jge
sub
dec
dec
push
mov
adc
mov
sbb
cmpsl
cmp
scas
stos
pop
fistps
je
js
sub
int
adc
hlt
mov
and
dec
testb
jae
xor
xchg
mov
push
and
dec
adc
loop
mov
inc
nop
jp
inc
outsl
leave
xchg
xchg
test
movsl
jb
xlat
sarb
stos
testl
mov
fwait
repz
and
and
call
sub
dec
push
addr16
fnstsw
pop
ss
enter
lretw
ljmp
xor
push
loop
gs
in
jno
test
sub
and
mov
cmpsl
push
test
cmp
pop
enter
cmp
data16
xchg
xchg
add
cmp
mov
cli
push
shr
loope
shll
aam
hlt
push
subl
push
aad
pusha
movsb
mov
jae
nop
mov
out
fwait
sub
xchg
or
mov
movsl
pop
les
mov
cmp
pusha
mov
or
sarl
or
mov
mov
mov
mov
xor
nop
mulb
mov
jmp
rcr
push
mov
mov
and
arpl
jbe
mov
adc
dec
leave
cmp
push
dec
dec
call
push
out
mov
pop
test
and
cmc
lods
fbstp
int
dec
jb
jns
push
xor
arpl
push
test
xor
add
fnstcw
lcall
or
in
jnp
stos
fiaddl
mov
clc
fnstsw
scas
xchg
add
mov
xchg
pop
cmpsb
bnd
jle
test
cmp
bound
leave
mov
insb
mov
mov
xchg
jp
sahf
data16
pop
imul
fildll
in
mov
push
outsb
cmc
pushf
cmp
adc
nop
cld
pop
sub
lock
sub
pop
push
lock
ret
jb
lret
xchg
adc
imul
mov
ficompl
inc
and
or
mov
xlat
pop
cwtl
mov
mov
sbb
mov
sbb
push
add
icebp
std
sub
sub
pop
and
andl
pop
fistpl
icebp
sub
or
dec
xor
aas
xchg
cmpps
push
xchg
adc
pop
mov
sub
pop
mov
pop
jp
loop
in
mov
dec
mov
push
jne
pop
aam
inc
adc
iret
or
sbb
pop
jl
sbb
inc
fs
or
pop
test
cmp
mov
mov
add
or
mov
in
out
cltd
sub
fdivl
mov
adc
jl
adc
leave
subl
dec
sbb
ss
aas
inc
cli
xchg
sub
clc
gs
jb
iret
cmpl
inc
ret
xchg
pop
xor
outsb
loope
inc
mov
adc
arpl
je
loope
xchg
lods
push
cmpsl
sahf
xlat
push
mov
out
test
rcl
mov
xchg
dec
sub
push
adc
insl
sbb
xor
data16
mov
fucomp
pop
cmp
mov
dec
pop
cs
cmovno
rorb
andl
rclb
int3
add
pop
mov
jp
repz
lods
push
movsl
out
xor
ret
pop
adc
pop
adc
pop
xchg
ja
fmull
cmp
aas
inc
dec
or
xchg
mov
xchg
jl
jmp
into
add
and
or
adcl
add
sub
inc
mov
shll
cmpsl
mov
xchg
out
cld
push
les
cmp
lret
sarl
unpckhps
add
insb
scas
stc
imul
mov
cmp
scas
icebp
cmp
fiaddl
jnp
sbb
sub
aas
dec
cmp
cltd
push
scas
inc
add
shlb
push
nop
push
add
fwait
outsl
or
add
movsb
sbb
pop
inc
jge
cmp
sub
dec
imull
sub
xor
cmc
faddp
mov
mov
and
sub
mov
cmp
jg
push
mov
inc
popa
pop
push
cs
xchg
rorl
dec
mov
inc
stos
push
repz
or
sbb
sbb
mov
fmuls
push
mov
pop
push
xchg
cmp
xchg
sub
loopne
scas
or
sahf
imul
fdivl
adcb
imul
push
jns
push
xor
nop
int
roll
push
or
dec
add
incb
or
icebp
add
mov
andb
stos
pop
inc
jmp
mov
push
inc
inc
outsb
daa
sbb
and
xchg
mov
sbb
dec
pop
inc
cmpsl
unpcklps
addl
or
jge
mov
pop
aas
push
add
roll
in
cs
push
mov
in
or
push
push
sub
mov
push
in
clc
cmc
push
out
xor
sti
fsubrl
sub
xchg
pop
add
pop
sbbb
sub
and
out
cmp
jecxz
dec
jmp
popf
cs
les
stos
je
lahf
xlat
xchg
mov
xchg
leave
lds
xor
dec
xlat
cmp
xor
push
or
gs
mov
mov
sub
xor
movsl
push
ja
sbb
adc
push
mov
int
and
push
jl
je
pusha
mov
out
mov
leave
leave
movl
xchg
aaa
sti
jne
fistl
add
xor
and
aam
les
dec
in
xchg
sub
push
jmp
sti
je
fistl
add
xor
and
aam
les
dec
in
xchg
sub
push
out
cmc
hlt
shll
stos
add
xor
movsb
fwait
aam
les
dec
in
xchg
das
test
mov
movsb
call
pop
je
fs
adc
add
xor
and
aam
rcrl
in
in
hlt
inc
les
arpl
bound
lea
mov
xor
sbb
mov
dec
bnd
insl
adc
and
jb
bound
cmp
ret
cmp
add
push
loope
icebp
jb
cmc
xchg
ret
shll
mov
or
inc
enter
ljmp
push
push
pop
mov
push
insl
pop
mov
mov
pushf
out
adc
xor
xchg
scas
cmp
sub
jl
loopne
pushf
mov
or
push
cmc
cvtdq2ps
dec
mov
mov
xchg
mov
add
push
fstl
mov
or
xchg
loop
pop
aas
or
repnz
loopne
in
mov
pop
out
sbb
jmp
cmc
arpl
orb
mov
push
rorb
xchg
in
pop
cmp
jne
ret
lcall
ret
gs
ret
out
pop
ret
mov
jge
jmp
xor
and
jb
bound
fwait
or
sub
ret
jge
add
lea
inc
cmpl
or
rcrl
dec
rorl
inc
mov
stos
cmp
fdivs
faddl
adc
cs
jb
bound
repz
out
mov
xchg
add
lret
lretw
and
push
mov
in
xchg
sbb
mov
dec
bnd
insl
adc
and
jb
in
xchg
sbb
mov
dec
bnd
insl
adc
push
orl
and
xchg
jae
xor
jnp
int
jp
push
xor
dec
adc
scas
stos
and
jbe
and
pop
aam
repnz
push
push
rclb
imull
cmpsl
or
push
inc
test
sbb
xchg
xchg
loope
cmp
cmp
pop
fcomps
pop
sub
sub
pop
jg
jp
and
ja
out
push
fsubrs
jbe
loopne
xor
jae
lret
mov
xchg
mov
cli
test
mov
xorb
pop
add
loope
push
fsubrs
jb
jecxz
inc
test
in
outsl
enter
mov
dec
sbb
mov
je
bound
push
xor
mov
loop
fnsetpm(287
ljmp
fsubrl
jnp
outsb
dec
xchg
movsl
mov
int3
outsb
jp
add
or
pop
mov
jl
pop
outsl
mov
scas
les
adc
mov
dec
jo
xchg
shlb
sbb
int3
test
mov
fistl
add
stc
dec
sbb
loope
dec
and
inc
popa
mov
lds
cmp
out
or
repnz
arpl
cmpsb
lds
orl
xchg
test
sub
std
movsb
and
adc
loope
out
push
fs
ss
aaa
jns
jl
fcoml
add
inc
lock
mov
inc
cmc
and
jecxz
mov
dec
lods
iret
in
inc
aas
add
xchg
pop
into
push
test
pop
jp
or
jg
lea
xor
repz
loop
xor
add
add
jmp
in
test
jl
mov
cmpsl
jl
andl
stos
push
xchg
ret
jge
pop
adc
pop
inc
fdivrs
add
call
std
fcomi
sub
cs
sub
test
pop
bound
add
shl
in
push
das
cmp
jb
lods
je
sub
repnz
push
shll
aam
pop
or
int3
mov
and
jp
ljmp
cwtl
pop
mov
dec
sarb
scas
jnp
cmpsb
xchg
hlt
pop
push
adc
cs
notl
sub
ror
push
in
mov
lock
sub
dec
insb
mov
ret
push
push
faddl
bound
push
arpl
xchg
pop
sub
mov
push
addr16
in
aaa
loop
pop
mov
mov
ret
cltd
xchg
enter
adc
test
mov
outsl
push
pop
push
aas
xchg
scas
cltd
sbb
out
mov
or
lahf
inc
aas
mull
mov
push
mov
cwtl
sbb
cmp
jl
adc
outsb
call
push
and
pop
lret
xchg
ret
jb
mov
jne
push
pop
pop
subb
cld
pushf
dec
ss
mov
xorb
sbb
xchg
or
inc
sub
cmp
mov
rclw
cltd
adc
xor
outsl
in
jl
pop
sbb
bound
psrlw
sahf
shlb
xchg
es
fwait
jns
xlat
xlat
fidivs
inc
fisttpll
push
shrb
fdivrl
cmpsl
mov
jge
xlat
or
cmpl
in
loope
jns
pop
fiadds
aaa
jmp
das
out
aas
mov
mov
push
repnz
xor
xchg
ljmp
inc
or
mov
or
dec
inc
mov
shrl
xor
or
adc
adc
scas
cmp
loop
lahf
push
mov
mov
adcb
mov
mov
nop
xchg
cmp
ss
or
xor
out
out
xor
aas
in
sub
push
and
loop
test
ret
or
sbb
in
fisttpl
testl
push
xor
add
popa
std
push
aas
les
push
pop
cmovs
or
fimull
in
clc
jns
mov
inc
cld
mov
mov
xor
shll
cmp
call
loope
imul
lds
xchg
jg
mov
insl
mov
mov
sub
and
add
mov
push
inc
mov
call
out
or
ljmp
test
mov
cwtl
add
xchg
lret
hlt
addr16
cld
aad
mov
add
in
pop
or
xchg
jl
add
adc
iret
push
push
xchg
pop
rcrl
add
xor
jo
enter
inc
sbb
imul
ljmp
jbe
or
pop
sbb
push
in
notl
clc
inc
ja
jg
bound
jns
loop,pn
xor
push
dec
cmp
imul
xor
jle
sbb
repnz
push
out
adc
gs
or
dec
loop
imul
dec
add
in
pop
scas
popf
ror
mov
and
jae
jmp
out
dec
or
sub
push
or
xor
data16
mov
out
xchg
push
or
int
sub
ficomps
fwait
xchg
das
iret
repz
in
cs
mov
push
es
adc
nop
pop
lods
aad
jns
push
mov
aaa
xchg
cmp
lods
jnp
and
jp
mov
jb
lea
fs
sub
and
sub
pushf
mov
or
and
mov
enter
xchg
add
or
xchg
cmc
pop
cmp
int
jb
sbb
jmp
add
mov
mov
and
jg
jecxz
test
int
lods
jecxz
xchg
dec
adc
loopne
lahf
cld
aaa
lahf
sahf
ss
je
mov
stos
cli
push
aad
dec
inc
xchg
mov
orb
loope
jbe
cwtl
push
jl
pushf
cltd
sbb
or
sbb
rcl
fs
scas
lods
cmpb
adc
pop
cs
lods
add
inc
roll
push
jbe
sbb
add
lock
inc
xchg
fimuls
xchg
aas
ret
jl
adc
cmpsb
jg
push
fs
or
xchg
jmp
mov
fisubs
add
cmpsb
adc
push
xchg
fwait
dec
mov
insl
aaa
orb
mov
imul
nop
and
inc
lods
mov
aad
ja
lock
add
push
jmp
mov
idivl
fxch
inc
and
scas
xlat
jle
scas
mov
add
aam
cmp
mov
int
inc
or
cmp
xchg
int
stos
xlat
adc
fs
mov
sbb
movsl
out
sti
adc
adc
push
mov
in
adc
subb
and
mov
imul
std
shrl
xchg
ficoml
pop
cmpsb
lds
jae
ret
cld
inc
inc
dec
add
mov
add
inc
nop
leave
aaa
or
xor
jp
xchg
add
and
and
daa
jnp
test
out
mov
rcll
mov
jecxz
mov
repnz
sbb
cmp
outsl
mov
cmp
adcb
lcall
ss
adcb
loop
hlt
cmp
cmp
adc
inc
aad
mov
cli
adc
xchg
in
xchg
in
xor
fwait
lods
loopne
insl
or
lret
push
xchg
aad
and
cmpsl
xor
adc
rcr
popa
push
or
mov
pushf
std
pusha
fisubs
roll
and
shlb
mov
mov
iret
imul
push
mov
push
rorb
push
shr
shll
inc
mov
cmpsb
dec
mov
cltd
xor
inc
test
and
xlat
ljmp
add
lods
mov
addr16
or
xchg
dec
cwtl
dec
in
lock
iret
mov
add
ss
leave
mov
mov
mov
push
xor
fs
shufps
mov
mov
addb
repz
add
xchg
push
in
pop
add
out
push
test
jmp
xchg
js
jb
jnp
push
stc
add
out
mov
push
leave
loop
or
mov
push
push
js
jno
test
mov
in
bnd
jns
rcr
pop
xor
push
ljmp
xor
stos
jecxz
pop
pop
je
add
movl
mov
icebp
sti
mov
pop
jns
dec
dec
pop
lcall
in
jmp
mov
fnsave
rorb
fidivrl
loope
jnp
popa
fsubl
xchg
mov
xor
stos
rorl
push
cmp
jae
leave
jnp
adc
mov
arpl
sub
pop
xchg
lods
out
sbb
mov
negb
arpl
mov
sbb
and
xor
xchg
or
repz
insl
insb
test
xor
lret
sar
jl
mov
cmp
test
cld
mov
fisubs
add
std
mov
jl
cmpsb
ret
hlt
adc
or
dec
fidivrl
and
outsl
ret
dec
pop
lods
dec
push
rcr
loop
cmp
lods
in
xor
scas
cmpb
mov
mov
jne
sbb
movsb
mov
mov
into
xlat
nop
loop
mov
jb
cmpsb
sub
mov
insb
lcall
gs
add
ljmp
je
sub
mov
lock
or
mov
sub
movups
sbb
test
ss
inc
ret
dec
sbb
outsb
movsb
dec
inc
jae
ja
push
sbb
pop
stos
lods
jne
add
dec
call
adc
in
leave
mov
cmc
cmp
cmp
pop
adc
div
mov
jb
lods
mov
sub
cmp
iret
cmp
dec
mov
fidivs
push
push
pop
mov
shlb
rolb
jle
cmp
fnstcw
push
jecxz
movsb
iret
xchg
loope
or
pop
jno
pusha
xor
iret
loop
adc
sti
push
fwait
daa
lea
mov
fdiv
bound
jg
dec
loop
rclb
xchg
leave
inc
aas
jg
adc
push
neg
add
pusha
jnp
lds
dec
rcrl
repnz
dec
iret
jge
mov
data16
jo
ret
push
mov
inc
inc
sub
in
sbb
push
adc
xchg
ret
aam
lahf
dec
mov
inc
mov
xor
loop
sbb
jno
lret
aaa
nop
xor
xchg
jnp
pop
push
adc
pop
or
addr16
sbb
xchg
xchg
mov
xchg
xchg
hlt
das
mov
cmovbe
adc
push
in
sarb
push
das
jge
dec
push
sti
mov
inc
xor
cmpsl
pop
fisttps
pop
or
and
std
dec
popa
push
inc
jbe
ds
loopne
fcomps
shrb
sti
movsb
out
mov
hlt
fmull
xor
int3
aam
pushf
inc
cli
gs
jne
dec
mov
icebp
xchg
mov
scas
aam
mov
cmp
sti
mov
mov
stos
push
or
ds
in
test
sub
pop
mov
daa
sub
movl
fisubl
xlat
cwtl
pop
frstor
add
lods
in
sbb
sahf
aaa
stos
and
repnz
lcall
fidivrl
adc
jle
incb
ret
punpckldq
mov
pusha
cmovs
test
into
call
cs
ficomps
xchg
push
sub
jecxz
jmp
je
fstpt
into
jecxz
dec
fisubrs
fisubrs
dec
mov
fisubrl
es
icebp
add
sub
dec
out
enter
jo
sub
or
dec
jnp
inc
ficomps
lret
mov
out
pop
push
fdivs
xchg
xchg
mov
fdivrs
clc
jno
popf
stos
jl
sbb
jl
inc
sti
sub
pop
stos
mov
push
cmovbe
lods
lea
inc
bnd
mov
fadds
subb
xchg
mov
lcall
cmp
sti
jae
lods
les
test
xchg
sub
in
mov
sbbb
xor
shlb
out
dec
lret
inc
and
cmp
das
cvtps2pi
ljmp
stos
push
push
lods
stos
fdivrl
sbb
negb
xchg
push
xor
adc
push
nop
fcmovnbe
cli
in
cwtl
mov
jb
into
xchg
les
xor
inc
push
sub
sbb
mov
jbe
sbb
dec
jle
addr16
or
push
push
fwait
adc
dec
mov
ja
movsl
in
push
icebp
mov
add
je
shll
push
inc
sarb
inc
loope
in
movsl
icebp
loope
adc
jnp
rcr
and
adc
xor
cmp
aad
push
inc
scas
push
inc
repnz
sahf
lahf
lret
aaa
fidivs
inc
pop
dec
lods
loopne
sar
mov
repz
push
test
fadds
jg
adc
dec
fwait
es
sbb
sbbl
xchg
pop
shrb
test
xchg
lahf
fisubrl
je
imul
or
adc
lret
arpl
dec
jns
popf
stos
xor
pop
into
aam
into
mov
xor
orl
daa
out
mov
popa
mov
pop
mov
and
icebp
daa
lods
adcl
movsb
mov
and
scas
dec
lock
mov
dec
pop
push
dec
sti
shlb
lods
mov
jo
sarb
push
popf
dec
jmp
clc
xchg
mov
pcmpgtd
jg
lods
mov
loop
cwtl
scas
lret
cltd
mov
inc
cltd
je
push
insb
mov
jl
scas
test
fsubrs
and
testb
stos
pop
pop
cmp
repz
inc
jecxz
std
fwait
jge
mov
add
mov
inc
cs
xchg
inc
inc
imul
dec
xorl
mov
sbb
test
push
pop
stos
divl
rcrl
xchg
es
not
adc
ljmp
icebp
pushf
sti
iret
sbbb
test
jns
xchg
iret
mov
int3
lods
mulb
repnz
xchg
daa
or
xchg
or
lds
cltd
pop
push
andb
cli
jns
jmp
fs
jle
jl
movb
and
fdivs
rorl
pop
iret
dec
mov
jo
xchg
outsl
insl
mov
rcl
xchg
test
mov
jmp
push
mov
push
ja
jno
jbe
outsl
mov
jle
sbb
hlt
mov
stos
mov
into
mov
fldcw
call
mov
or
fs
int3
mov
or
pushf
insl
push
mov
mov
shrb
shl
xlat
pop
adc
fs
cs
mov
cmp
pusha
shll
int
sub
cmp
sub
fstpl
mov
ja
rcll
xlat
mov
jge
mov
push
lret
daa
mov
dec
pop
jmp
insb
sub
mov
and
popa
std
xchg
inc
jp
fwait
inc
outsl
xchg
pop
fidivrs
por
pushl
xor
add
add
inc
jae
mov
negl
jle
hlt
dec
pop
ja
into
xchg
push
ret
daa
dec
jno
stos
lds
mov
pop
addl
lea
ljmp
mov
ret
inc
push
std
repnz
adc
mov
push
or
or
mov
leave
int3
cltd
mov
inc
mov
inc
dec
inc
cli
popf
scas
sbb
xor
sub
adc
mov
loop
mov
subl
dec
jmp
or
jg
mov
icebp
sub
cwtl
ficompl
lock
or
mov
sar
stos
aas
and
lret
lods
fisttpll
insl
push
pop
std
jns,pt
sbb
outsl
cmpsb
jmp
clc
sub
lods
inc
xchg
inc
sbb
cltd
loopne
std
xor
mov
mov
loope
cmp
rcl
lcall
xor
mov
hlt
xchg
fwait
daa
xchg
mov
gs
test
movsb
and
popf
scas
mov
and
add
bound
pusha
test
into
leave
xchg
xchg
cmp
cltd
mov
rcll
adc
or
pop
jno
aam
lcall
stc
out
sub
push
sti
jl
xchg
jb
push
adc
dec
mov
repnz
inc
sti
fstps
scas
xor
mov
lods
jo
adcb
insl
xchg
cmp
jmp
inc
sbb
mov
lds
nop
adc
push
push
out
call
pop
imul
fadd
push
out
sbb
mov
jecxz
sub
loopne
fsubrl
mov
or
pop
xchg
cmp
jl
dec
in
add
jecxz
addr16
fsincos
push
jb
or
mov
movsb
bound
dec
cmp
push
les
xor
push
dec
inc
rcrb
fcmovbe
adc
push
xor
xor
xor
mov
lock
adc
js
movsb
pop
jb
sbb
cmp
jb
out
xchg
mov
push
mov
out
out
jo
pop
jge
mov
push
or
shl
daa
into
inc
es
xor
xchg
mov
testb
rolb
inc
in
dec
adc
lods
dec
add
or
ficoml
mov
inc
jno
xchg
or
fstpt
sbb
mov
sti
test
ret
dec
adc
dec
pushf
pop
fstpl
lds
mov
and
sub
sub
lock
dec
adc
mov
dec
jp
or
icebp
test
call
rclb
daa
jmp
call
xchg
jns
iret
inc
test
fdivs
nop
ret
stos
push
push
lret
std
cs
mov
lret
es
mov
pop
addl
mov
xchg
xchg
lret
movsb
adc
cli
popa
out
xchg
std
test
iret
mov
sti
lods
movb
pop
data16
jb
popa
push
mov
daa
cmp
mov
mov
test
add
cmp
fwait
loop
add
push
scas
insl
ret
wbinvd
jo
in
xchg
add
xor
imul
cmp
lock
dec
jp
into
in
dec
aad
jno
lods
lea
sub
es
push
jne
xlat
mov
mov
nop
push
dec
cmp
cmp
dec
xchg
jp
add
and
fs
mov
xchg
inc
and
out
mov
inc
mov
popf
lods
mov
push
jle
clc
movsb
push
es
int3
stos
dec
dec
mov
arpl
mov
xor
cmpsl
inc
add
pop
jne
sbb
jns
pop
inc
adc
inc
fs
lods
add
inc
mov
and
add
mov
js
xor
adc
add
sbb
bswap
int3
arpl
stos
mov
pop
imul
outsl
inc
fisubs
popa
adc
push
loopne
dec
xchg
into
dec
mov
cmpsb
sub
ljmp
sbb
cmpsb
push
fcoms
cwtl
jbe
ret
insb
or
fldenv
adc
sti
aam
imulb
bound
scas
pop
add
xchg
xor
popa
in
and
xchg
add
mov
and
rcr
xchg
push
pop
in
push
shl
cltd
and
rcl
jo
sbb
jecxz
inc
fdivl
iret
jns
lods
das
dec
cwtl
std
or
jmp
das
mov
xor
aaa
xchg
or
mov
fisttpll
in
imul
ss
cwtl
sbb
pop
arpl
icebp
arpl
and
outsl
or
push
leave
xor
push
in
push
dec
mov
xchg
and
js
pop
fwait
test
mov
dec
out
cli
dec
ficoms
add
jl
cmpl
pop
fildl
add
inc
and
sub
mov
mov
sub
adcl
inc
sub
xchg
decb
cmp
les
dec
add
xor
mov
dec
xor
dec
nop
push
clc
scas
mov
ror
leave
xchg
stos
mov
dec
mov
sbbl
mov
ror
xor
rcll
les
out
cmp
mov
cmpsl
add
adc
mov
xchg
flds
mov
cs
add
in
aam
xor
fdivrp
jge
sbb
sti
xchg
lahf
jo
into
mov
inc
es
adc
cmc
cmp
in
sbb
popa
cld
les
ljmp
inc
add
dec
dec
pop
loope
mov
sbb
aad
cmc
in
outsb
inc
push
leave
fldl
xchg
xchg
xchg
fs
sbb
sub
cmp
jecxz
in
push
add
sti
or
stos
aaa
repz
dec
lods
push
ret
adc
jno
xor
cs
mov
jg
xchg
roll
aad
jl
adc
cli
cmpsb
push
popa
pushf
repnz
cmpb
mov
cmp
mov
pusha
lock
call
mov
mov
xor
mov
popf
or
cs
mov
cmp
mov
scas
xchg
push
sbb
jmp
and
jb
in
xchg
sbb
mov
dec
bnd
insl
adc
and
jb
in
xchg
sbb
mov
dec
bnd
insl
adc
and
jb
in
xchg
lds
sub
repnz
loop
adc
and
jge
in
xchg
loop
cmpsl
sbb
dec
mov
sbbb
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
cmp
push
mov
cltd
sub
jae
arpl
inc
sti
inc
or
cmp
imul
cmpsl
mov
fwait
and
pop
fisubl
push
sti
inc
or
cmp
imul
ret
mov
insb
lret
xor
ds
xchg
xor
sub
push
out
dec
or
adc
movl
mov
pop
add
in
aam
cmovnp
pop
outsl
xchg
pop
xchg
dec
aaa
and
fstl
inc
pop
pushf
fstpt
mov
mov
jb
push
mov
and
xor
adc
std
lret
pop
push
aas
cmp
call
rep
loop
fidivrl
jnp
push
fisttpll
inc
xchg
daa
jo
pop
jb
pop
scas
insl
mov
jnp
xchg
xor
mov
xchg
aaa
es
xor
fwait
and
adc
sti
mov
adc
mov
shrb
pop
imul
fisubs
pop
addr16
das
arpl
mov
sub
pop
loop
sarb
mov
fwait
and
jb
jmp
sti
add
mov
fldt
jge
cs
xchg
add
pushl
fadds
jb
push
lcall
fisubrs
dec
fidivrl
cs
cmpsl
test
in
stc
push
cld
push
jne
push
cmp
mov
push
insb
repz
insl
negl
push
rcrb
sarb
mov
fwait
and
jb
jmp
sti
inc
or
cmp
imul
ret
fwait
and
jb
jmp
sti
inc
or
inc
inc
fwait
pop
test
cmp
dec
cmp
pusha
aad
adc
or
jmp
mov
cltd
jecxz
cmp
inc
lds
cli
dec
daa
sbb
dec
push
test
stos
push
lods
jge
jmp
adc
cmp
mov
or
and
mov
pushf
xchg
loope
jge
into
adc
adc
fidivs
loope
test
sub
rcl
sub
inc
hlt
push
pop
pop
xchg
push
jno
dec
pop
xchg
stos
sub
test
xor
cmp
mov
mov
pop
out
inc
ret
dec
jg
sbb
or
pop
fdivrs
xor
mov
aaa
ret
test
in
je
into
imul
mov
rcrb
mov
or
push
sbb
dec
scas
outsb
xorl
testl
hlt
push
rcrl
and
inc
or
hlt
out
iret
outsl
push
sub
push
ds
cmp
scas
and
ja
or
inc
imul
sbb
lea
dec
stos
xchg
mov
dec
push
and
mov
push
mov
mov
push
sbb
sub
push
sub
call
aaa
jnp
leave
xchg
pop
mov
pop
push
imul
jge
sti
mov
subb
pop
add
xchg
fmull
fnsetpm(287
testl
movsb
or
cmp
dec
sbb
das
lcall
xchg
push
je
das
sarb
and
sub
mov
add
push
stos
add
pop
dec
xchg
in
addr16
in
xchg
cs
push
pop
adc
cmp
sahf
add
inc
dec
push
mov
mov
jge
xor
into
inc
scas
cwtl
icebp
fwait
xchg
jbe
jmp
mov
mov
pushf
mov
decb
pop
jle
lods
outsb
jmp
nop
mov
leave
idivb
inc
cmp
out
xor
push
or
repz
daa
adc
filds
cmp
jecxz
mov
shrb
repz
xor
inc
ja
lret
add
das
jg
pop
int
dec
aad
dec
int3
in
mov
sbb
in
lret
inc
or
or
aas
mov
ja
jbe
jl
xlat
add
mov
cmpsb
into
jl
leave
out
inc
add
cltd
insb
cmp
add
aad
xchg
and
arpl
mov
inc
push
rolb
inc
es
fldl
imul
test
or
and
out
mov
imulb
and
lods
ljmp
xchg
cmp
adc
mov
loope
lea
mov
dec
nop
mov
mov
jns
loop
testb
xor
cwtl
or
jge
shll
cwtl
sar
push
loop
div
adc
aad
pop
mov
dec
cmpsl
adc
inc
dec
out
les
les
mov
fmuls
insb
mov
lret
xor
xor
mov
mov
fisubrs
pusha
shrb
push
addr16
repz
cld
pop
cmp
sbb
cs
test
orl
fimuls
pop
jno
adc
push
mov
dec
cmpsb
pop
insl
xlat
int3
adcl
lahf
jne
data16
xor
lret
roll
adc
mov
lret
aaa
aam
in
sbb
shl
cmc
pop
mov
jb
nop
lods
pop
rolb
dec
popa
enter
dec
fs
je
push
int3
stos
push
mov
mov
jp
movsl
loopne
jge
inc
rclb
ljmp
rcl
pushf
std
push
and
pop
push
in
imull
mov
ret
mov
fdivl
push
add
jl
test
insl
fcmovne
push
jg
or
stos
inc
loope
fwait
out
jmp
hlt
inc
ja
inc
pop
mov
push
mov
dec
jge
xor
cmp
mov
push
lret
sahf
lock
insl
jnp
sub
lods
inc
adc
loopne
pop
and
cmp
lret
addr16
mov
add
and
mov
push
ret
sarb
pop
movsl
fxch
xchg
push
pop
sub
test
loopne
lods
jle
sub
movsl
xor
lahf
push
mov
and
lds
cmc
inc
fisttps
aaa
push
inc
cmpsl
pop
pusha
or
fs
dec
and
cmp
or
shll
ja
mov
das
mov
dec
add
into
sbb
push
daa
cmpsl
lcall
in
dec
or
jg
cli
xchg
pop
mov
pop
adc
arpl
jge
add
sub
in
aam
jmp
incb
inc
jns
in
xlat
sub
jge
sahf
leave
notb
mov
cmp
stc
cmp
adc
faddp
hlt
int
or
pushf
and
mov
push
fisubl
and
outsb
sbb
adc
xchg
push
mov
int3
mov
push
pop
sub
lds
pop
push
inc
mov
gs
push
jle
repnz
jge
or
xchg
je
shrb
jmp
fldt
sub
ja
sub
shll
or
sahf
push
into
mov
loopne
sbb
popa
jo
add
inc
dec
fildl
sbb
pop
sub
mov
cltd
adc
repz
mov
sbb
add
bswap
or
js
dec
outsb
daa
xchg
xchg
hlt
popf
int
int3
mov
jge
data16
cmp
push
ror
jns
jo
pop
lds
scas
leave
or
sbb
lret
cmp
scas
dec
fwait
jae
sti
jl
loop
popa
inc
cmp
xchg
repz
clc
inc
lods
jp
fs
int
push
aaa
or
inc
push
insl
and
pushf
fsubr
mov
gs
inc
into
mov
sbb
inc
jge
inc
repz
movsl
jb
lahf
rcll
addl
push
fists
push
cmp
int3
bsr
mov
cwtl
and
shlb
mov
pusha
xchg
out
pop
leave
jp
popf
jl
mov
xor
ret
xor
fisubs
test
sbb
jbe
cmpsl
enter
lea
or
jp
push
dec
cmp
fldenv
imul
mov
fcomps
daa
movd
mov
int
mov
dec
cmpb
add
mov
int
and
icebp
mov
cmp
ljmp
ds
mov
xchg
push
aad
pop
xchg
movsb
in
scas
mul
addr16
jge
jmp
pop
push
fnstsw
push
lods
mov
mov
xchg
ret
xor
add
pop
and
nop
das
scas
and
mov
rcr
aam
popl
fisttpl
mov
in
mov
dec
lods
mov
mov
mov
pusha
adc
sbb
xchg
jnp
mov
pusha
xchg
idivb
orb
icebp
out
jle
addr16
mov
cmc
jmp
sbb
shrb
xor
add
inc
sub
je
mov
in
je
mov
movsl
insb
jp
pop
lahf
movsl
in
cld
movsb
push
aam
cmp
ss
pop
or
mov
ss
sar
rolb
mov
xor
or
out
inc
and
sahf
repz
nop
sbbb
jnp
pop
in
and
mov
in
adc
cwtl
shll
pusha
add
imul
ret
push
push
data16
mov
mov
inc
les
cmpl
dec
int
das
addr16
mov
mov
xor
das
pop
push
lock
mov
lahf
mov
xorl
sbb
andl
inc
mov
or
cmp
sbb
dec
out
dec
popf
repz
and
and
and
cmp
ss
loope
addr16
arpl
fsubrl
int
stc
pop
cmpsl
lds
mov
cmc
test
ret
cltd
and
fwait
jno
and
jo
test
enter
jne
sub
mov
jne
inc
sbb
addr16
and
dec
dec
push
fcomps
jle
adc
xchg
scas
sti
or
aad
push
jecxz
sub
push
ficoms
mov
insl
stos
enter
int3
mulb
sub
cmp
stos
lea
adc
arpl
out
lock
dec
jl
push
movsl
js
dec
clc
lret
rorl
mov
out
jp
mov
push
sub
in
pop
mov
push
nop
push
sbb
xchg
lds
rorb
jne
mov
rcll
add
and
movsb
mov
rorl
repz
mov
and
or
mov
adc
push
in
std
fistl
fidivrl
das
jo
push
bound
mov
movsb
fstps
dec
insl
and
dec
mov
xchg
fldenv
sub
callw
and
fisttpl
stos
sbb
ss
fldenv
jecxz
test
shll
lret
cwtl
mov
and
jnp
dec
mov
adc
fs
cmp
sub
into
call
cmp
in
imul
les
mov
cmp
pop
jg
inc
vmread
sub
leave
xchg
push
jle
inc
mov
dec
cmpsb
sbb
imul
jecxz
test
xchg
loope
mov
jecxz
mov
xchg
sub
xchg
adc
ds
mov
adc
das
pushl
es
xchg
mov
mov
sub
or
xor
ds
int3
xchg
sbbb
int3
xor
add
cmc
stos
mov
inc
pop
sub
cmpsb
push
push
or
cmpsb
dec
push
add
outsl
pop
mov
and
scas
ja
out
aam
and
add
js
cmc
sbb
mov
cmp
sbb
test
test
or
repz
cltd
xchg
fstpt
dec
inc
iret
imul
inc
sbb
shlb
arpl
adc
mov
pushf
mov
sub
out
mov
arpl
int
sub
jl
call
xchg
dec
pusha
mov
sub
adc
ja
xor
popf
ljmp
mov
mov
mov
popa
mov
lock
jne
sbb
sahf
mov
pop
andb
cmc
xchg
repz
test
test
and
sub
insl
mov
ret
adc
jno
push
fstpl
xchg
rorb
add
nop
xchg
jl
into
data16
fisttps
xchg
push
bound
pop
xchg
insl
xchg
sar
dec
fisttps
push
jbe
addr16
lahf
movsb
out
xor
or
mov
arpl
xchg
adc
mov
out
mov
mov
mov
iret
xchg
adc
or
push
inc
cwtl
inc
sbb
sbb
nop
and
cld
loopne
mov
ljmp
and
xchg
sbb
loop
int
dec
test
cmpsl
scas
sbb
push
xor
adc
dec
xlat
mov
push
loope
fidivs
ja
cmpb
addr16
pop
mov
mov
xor
lret
sahf
cmpsb
mov
out
sbb
jmp
cmp
jne
lahf
push
push
sarl
std
aad
stc
mov
or
or
fs
jge
adc
addl
cwtl
in
xor
xchg
or
insl
je
clc
pminsw
cmp
jge
sub
ds
mov
jne
adc
stc
aad
xor
sbb
rcl
or
scas
pop
xchg
lahf
cmpsl
lret
sbb
orl
hlt
pop
imul
fisubs
cmp
mov
test
dec
in
sub
inc
stos
mov
dec
or
ret
mov
and
bound
testb
sbb
out
lret
popf
add
test
sub
aad
sbb
iret
mov
out
stos
daa
mov
dec
shlb
xchg
xchg
in
imul
and
mov
mov
addl
mov
mov
outsb
call
lods
xor
das
inc
pusha
aas
mov
cs
push
dec
cs
mov
pop
cmp
inc
imulb
add
cmc
inc
cli
daa
push
andb
std
mov
loope
out
jae
push
and
ss
lods
mov
lea
addr16
lods
dec
cwtl
or
bound
add
mov
and
push
inc
scas
gs
popa
inc
mov
mov
into
inc
rcrl
pusha
cli
mov
int3
lret
mov
es
stos
pushf
fistl
inc
out
cmp
out
aad
in
frstor
xchg
xor
mov
dec
sub
mov
jmp
push
aad
add
dec
push
pop
jge
cmp
test
add
mov
dec
cld
stc
ja
pop
mov
sub
fwait
lret
mov
popl
sub
test
cmp
icebp
fcompl
mov
and
xor
ss
push
and
test
dec
xor
mov
loope
mov
mov
push
inc
mov
xchg
xlat
call
sub
push
cld
lcall
mov
je
ss
clc
lret
ret
orl
inc
dec
sbb
jg
dec
js
fcos
outsl
cmpsl
loop
test
sbb
test
mov
sbb
jbe
pop
fisubrl
xor
stc
lock
mov
ret
jae
dec
push
mov
flds
mov
pop
bound
xor
scas
cmp
pop
mov
push
incb
popa
mov
shrb
fldcw
rclb
iret
mov
in
lock
inc
cmp
sub
dec
aaa
adc
sti
jl
pop
adc
nop
inc
mov
mov
sub
adc
je
push
pop
pop
add
jp
dec
enter
lods
push
test
dec
enter
stc
dec
mov
push
lods
xor
lcall
mov
mov
int
or
stos
and
and
test
shlb
push
aas
mov
cltd
mov
dec
ljmp
push
mov
daa
fmulp
test
out
inc
mov
aam
mov
push
dec
xorl
jbe
inc
and
jae,pn
aaa
pop
xchg
jp
fcomp
jne
inc
push
xchg
and
and
pop
xchg
fisubl
mov
movsb
cmpsb
pop
push
enter
inc
mov
popf
jae
sahf
push
inc
out
jne
sbb
js
xor
repz
aaa
shrb
lods
sub
bound
ja
inc
js
out
add
cs
xchg
and
in
jg
dec
cmp
lds
int
test
or
cmc
and
imul
xor
cmp
mov
push
aam
mov
js
inc
loope
stos
add
shrb
das
int3
cmp
fcoml
push
mov
repz
repnz
or
shl
and
ss
enter
pop
outsl
repz
inc
dec
insb
sbb
dec
xchg
mov
sub
and
inc
negl
jae
and
mov
ret
jne
in
sbb
mov
sbb
xor
fnstsw
imul
lcall
call
bnd
add
dec
mov
jae
mov
into
adcb
addb
fs
test
push
mov
sbb
dec
jne
add
jne
das
test
adc
fdivs
test
push
mov
icebp
inc
sbb
jne
pop
movsl
fisttps
push
jae
mov
mov
or
and
adc
inc
cli
sub
mov
idiv
scas
jbe
push
xchg
shll
ljmp
push
cmp
mov
mov
adc
ds
mov
stc
fisttpl
mov
nop
jnp
lahf
add
inc
daa
sub
out
mov
push
pop
pop
pop
insl
cmp
adc
lods
jno,pn
test
cmc
mov
dec
outsl
mov
popa
push
addr16
adc
cmp
dec
fcompl
cmp
jo
inc
adc
lret
pop
das
pop
test
fmul
fiaddl
enter
dec
dec
fwait
cmp
ss
pop
pop
sub
fildl
insb
outsb
dec
mov
jno
cwtl
xchg
es
leave
cmp
mov
or
imul
jbe
xlat
mov
es
gs
pop
jp
into
xchg
xchg
in
push
lea
dec
stc
in
fdiv
jmp
es
dec
xor
sub
push
hlt
add
pop
sub
sti
mov
adc
xchg
test
loopne
cld
std
mov
jp
in
jns
mov
push
mov
cltd
pop
add
push
lods
scas
push
bound
jge
xor
lock
pop
sbb
into
loop
into
imul
xchg
fs
jo
add
inc
cmp
loopne
rcll
push
cmpsb
and
leave
in
adc
mov
pop
mov
cmp
inc
jle
jo
mov
push
mov
or
cmp
fistps
push
out
cmpsb
scas
dec
xchg
jo
mov
jnp
mov
push
mov
mov
cmp
cltd
and
daa
jl
aaa
mov
mov
sahf
pop
mov
jge
add
pop
sbb
movsl
push
out
inc
sbb
push
stc
fcompl
adc
cmp
call
mov
and
push
adc
ljmp
pop
xchg
in
pop
cmp
jl
xorl
rolb
movsb
add
pop
mov
sbb
call
and
in
fidivrl
adc
data16
inc
and
pushf
sti
push
jae
xchg
sub
adcb
out
bound
popa
in
dec
pop
dec
xchg
dec
sti
imul
shll
pushf
stos
dec
cmp
lods
xchg
sbb
dec
cmpsl
mov
mov
jl
dec
iret
mov
out
lds
insl
scas
adc
and
cmp
mov
ja
mov
push
decb
imul
mov
fldl
lods
sbb
inc
movsl
jle
in
sub
outsb
sahf
aam
adc
xor
xlat
cld
pusha
sub
fildl
test
ret
or
addl
or
jl
fcomp
sbb
push
pop
les
sti
add
mov
leave
sbb
adc
dec
bound
jnp
lcall
jp
cmp
or
sbb
xchg
xchg
fisubl
andl
pop
pop
stos
clc
inc
leave
jo
or
iret
pop
stc
mov
jl
sbb
pop
fsubs
adc
jae
jne
dec
test
xor
in
xchg
add
movsl
out
fs
shrb
jmp
xor
ds
mov
mov
mov
dec
dec
aad
dec
sbb
add
inc
clc
xlat
call
cmc
into
outsb
mov
and
pop
dec
in
sti
mov
lret
jle
or
cmp
and
mov
je
roll
sarb
xor
mov
scas
jge
popf
push
imul
cmp
sarb
mov
pop
idivl
sti
add
jnp
lahf
sbb
iret
sub
sub
mov
and
inc
lahf
mov
sub
inc
test
cli
jae
pusha
xor
cwtl
or
push
mov
sub
bnd
es
loopne
ja
pop
sbb
xor
sbb
insl
push
inc
mov
jle
leave
shl
inc
sbb
jmp
push
mov
push
fnstcw
lret
cld
lods
in
jmp
jne
in
or
push
add
or
mov
rol
xchg
arpl
stos
insl
jne
xchg
mov
lock
popa
mov
adc
xchg
gs
adc
ja
pushf
aam
pop
hlt
push
int3
pop
fnstenv
push
in
int3
adc
popa
repz
out
mov
addb
add
push
sub
orb
daa
aad
rolb
leave
daa
xor
fwait
cmc
xchg
cmpsb
rorl
mov
sbb
jb
or
aaa
cld
icebp
cmp
mov
mov
dec
push
cmp
js
xchg
enter
cmpl
mov
imul
hlt
push
xor
inc
mov
int3
stos
jp
push
pop
mov
sahf
mov
fnstcw
hlt
fsubrs
and
or
xchg
mov
jecxz
faddl
xor
jg
rep
pop
lea
mov
mov
push
and
lea
lahf
cmp
aaa
push
cmp
repz
mov
sub
cmp
xchg
pop
insb
insl
push
test
xchg
in
dec
addr16
mov
ret
ret
cmp
xlat
push
or
imul
xor
add
inc
sbb
loope
cmpsb
cmpsl
sbb
lds
test
repz
mov
and
clc
loope
inc
bound
or
push
cmp
dec
jg
jns
pop
xlat
pop
cwtl
popa
test
aas
and
loope
xchg
adc
sahf
inc
or
dec
dec
add
dec
and
lods
pop
test
test
ja
dec
testb
insl
pop
add
dec
repnz
loop
sarb
mov
fwait
and
jb
jmp
sti
inc
or
cmp
imul
ret
fwait
and
jb
jmp
sti
inc
or
cmp
imul
ret
fwait
and
jb
ljmp
mov
dec
repnz
loop
sar
add
mov
adc
popf
adc
lret
addr16
push
push
inc
sub
jle
pop
mov
repz
ret
rcl
cmpsb
mov
sub
ja
addr16
push
push
inc
and
xor
add
adc
sti
repz
xlat
rol
mov
xchg
xchg
xchg
dec
xchg
pop
xor
jnp
das
por
movsl
scas
mov
cmp
shl
in
call
pop
xor
test
jbe
pop
hlt
adc
shrb
pop
les
imulb
push
and
jnp
ficoml
jae
int3
aam
call
push
sbb
cmp
xlat
and
add
jg
jmp
or
rcrl
stos
mov
sub
testl
pop
adc
push
jo
int3
ret
or
and
int3
aaa
add
xor
mov
dec
mov
xchg
out
mov
fdiv
mov
inc
pop
pop
outsl
and
mov
jle
mov
mov
out
out
jae
mov
mov
ljmp
sub
cmp
lahf
mov
xchg
addl
dec
aas
inc
and
ja
add
stos
push
adc
popa
lcall
into
int
ret
scas
lods
mov
adc
adc
dec
xor
jb
sbbb
mov
idiv
aam
arpl
sti
push
add
cwtl
sub
push
imul
mov
cmpsb
mov
cmpsl
div
shl
adc
xor
adc
data16
daa
add
adc
jecxz
repz
xlat
rol
mov
xchg
xchg
xchg
jae
inc
push
push
inc
and
xor
add
adc
jecxz
repz
xlat
rol
mov
xchg
xchg
xchg
mov
jmp
or
outsl
mov
ja
mov
iret
or
aaa
inc
and
and
mov
adc
push
mul
xor
cmpsb
inc
or
cmp
xorb
sbb
insb
outsb
dec
jae
xchg
aas
xchg
and
stos
pop
jae
or
das
cmc
pop
mov
lahf
aad
orl
mov
jg
jo
out
mov
mov
jl
sbb
pop
inc
add
stc
in
adc
scas
pop
jecxz
mov
fldcw
inc
enter
sti
xor
incb
adc
sti
ljmp
push
mov
push
cmpl
int3
add
add
cmc
shrl
dec
pop
xor
fwait
add
lds
mov
mov
aaa
lock
mov
lods
mov
xor
pop
int
mov
push
push
ljmp
mov
cmpb
vpcmpgtb
pop
lea
loop
add
mull
adc
jg
aam
or
rol
jo
and
push
mov
mov
add
lock
push
aam
fcom
out
out
rcll
lahf
inc
xchg
outsl
sub
fistl
xchg
and
mov
cli
dec
sbb
shlb
in
pop
scas
pop
xor
int
mov
cmp
mov
xchg
ja
rcrl
stos
inc
jmp
in
jns
and
insb
dec
das
jge
jl
sbb
icebp
lods
or
rol
jp
fwait
mov
xor
je
js
adc
jecxz
and
push
pop
subb
repz
adc
jne
mov
xor
adc
shl
cmpxchg
push
clc
mov
sbb
imul
push
imul
jp
xchg
arpl
add
ret
add
jl
insb
cmp
pushf
jl
and
mov
aad
aaa
mov
mov
in
pop
xlat
jae
xor
push
mov
daa
mov
ljmp
xor
xchg
outsb
adc
bound
push
test
sub
punpckldq
and
xchg
pop
and
ljmp
leave
lock
xchg
xor
xorb
cmp
pop
inc
push
mov
das
sub
jb
jno
out
popf
add
addr16
out
mov
xchg
sub
jb
enter
repnz
add
add
mov
and
lock
je
mov
ds
mov
dec
or
pushf
push
xchg
push
mov
mov
add
test
fdivrs
leave
xlat
and
sub
and
mov
and
shr
jns
scas
inc
inc
pop
insb
sarb
popa
xorb
dec
cld
mov
lds
cmpl
mov
repz
mov
add
adc
mov
daa
push
fldenv
push
push
add
inc
int3
lods
in
ret
ljmp
repz
mov
ds
cmc
outsb
pop
adc
add
pushl
cs
or
xchg
jns
les
out
inc
cmpsl
push
jp
push
loopne
add
testl
mov
inc
les
popa
andl
inc
sub
sbb
add
insl
push
cmp
cli
fstp
sbb
rorb
and
fimull
lock
adc
add
shrl
mov
addr16
pop
shrl
ljmp
mov
xchg
cmp
sub
sbbl
pop
sbb
jp
addr16
cltd
mov
loope,pt
or
js
lcall
push
dec
sbb
mov
and
jecxz
dec
cmp
cmp
mov
icebp
sbb
push
mov
loope
daa
and
loop
pop
sub
das
sbb
int
and
cmpsb
nop
fmuls
mov
call
dec
pop
and
mov
cld
dec
mov
xor
jnp
orl
mov
adc
nop
aad
sbb
push
mov
gs
sti
imul
sbb
xchg
cmp
in
inc
jmp
xchg
dec
mov
clc
cmp
jge
push
cmp
dec
sbbl
dec
call
decl
popf
mov
adc
cwtl
movsl
sub
je
ja
mov
pop
xor
cmp
xor
ret
push
shlb
rcrl
sarl
pop
addr16
subb
aaa
ds
xor
repz
or
out
idiv
lods
sbb
push
iret
jp
js
mov
push
push
jb
lret
adc
loope
adc
inc
fnstenv
mov
fcomp
aad
adc
flds
dec
shll
popf
test
jno
cmp
fsub
clc
mov
in
or
repz
movsl
jl
std
mov
adc
jbe
xchg
mov
jmp
cwtl
adc
fwait
sbb
xchg
push
gs
sub
subb
jns
repz
lcall
push
dec
lds
xchg
adc
js
sbb
xchg
mov
jb
cwtl
jne
pop
cmp
dec
out
scas
xchg
mov
mov
lahf
adc
in
enter
jge
or
das
outsl
int3
mov
pop
repnz
mov
popf
test
out
xor
xorl
mov
sbb
call
lods
mov
or
and
mov
test
lods
sub
pop
xchg
mov
out
inc
cltd
std
jle
out
jne
jbe
test
imul
mov
fs
movsl
jmp
aad
out
or
jbe
lret
lock
test
jmp
add
icebp
stos
nop
rcrl
mov
ret
movsb
test
sub
ljmp
jo
mov
test
mov
adcl
or
dec
xlat
loop
xchg
pop
les
int3
adc
rcll
icebp
vpaddq
repnz
jl
push
pop
jle
inc
inc
sub
enter
jnp
iret
adc
push
jno
pop
lods
lret
push
pop
jg
or
fildll
push
adc
or
inc
xchg
jg
out
outsb
je
and
pop
mov
xchg
cwtl
inc
lret
add
mov
sahf
insb
cwtl
jmp
jb
jbe
ret
jbe
sub
mov
in
popf
or
mov
daa
repz
sub
cld
push
repz
inc
in
andb
and
repz
stc
mov
mov
push
dec
xchg
shl
and
ret
lods
mov
lcall
pop
pop
inc
rcrb
pop
xor
fwait
movl
inc
cmp
shlb
pop
pop
jno
xchg
inc
dec
mulb
inc
or
stos
pop
inc
ret
cmp
fimuls
and
pop
in
ret
mov
ljmp
mov
mov
es
adc
es
icebp
jmp
icebp
movsl
adc
leave
jo
sbb
dec
cwtl
mov
jge
dec
mov
movsb
xchg
mov
shrb
cld
gs
addr16
xchg
sbb
movsl
pop
xlat
xor
pop
sub
sub
rol
push
mov
sub
xchg
insl
and
leave
sbb
nop
outsb
stc
les
shlb
mov
or
mov
adc
mov
sbb
pop
mov
and
arpl
mov
fwait
bound
adc
push
xor
fs
loop
push
xlat
fadd
jl
mov
ret
jge
cmp
pushf
mov
test
test
int3
push
fisubrs
dec
cmp
cld
scas
out
mov
sub
xchg
pop
xchg
shlb
cwtl
outsb
dec
jle
xchg
xor
dec
push
sub
int
jge
icebp
hlt
in
int
int
orl
test
jbe
jmp
daa
scas
mov
outsl
mov
mov
in
outsb
sbb
scas
out
das
lret
rol
pop
pop
negb
iret
adc
dec
cmpsb
cmp
andb
cld
mov
dec
pop
test
insl
mov
out
out
xchg
add
popa
add
popa
fsubrl
dec
xor
mov
mov
jb
out
add
int
out
add
mov
aaa
inc
cltd
sahf
cmc
repz
repnz
fsubl
imul
jmp
scas
jbe
sbb
popf
aas
dec
cmpsb
sbb
call
jno
icebp
clc
movsb
dec
xchg
inc
inc
pop
jg
xor
test
add
mov
insl
fisubrl
mov
shlb
sub
imulb
clc
pop
cmp
jmp
mov
es
jge
ja
das
dec
sbb
jne
pop
sub
cwtl
es
aaa
out
pop
pop
push
xlat
xchg
rol
iret
and
rol
outsb
add
push
cmp
fimuls
cmp
subl
imul
int3
sub
pusha
jmp
testb
outsb
adcb
test
aas
mov
cld
xchg
xor
xchg
jl
xchg
mov
add
cmpl
xor
dec
jae
add
cmp
mov
push
repnz
lods
jnp
mov
mov
jmp
je
jg
xchg
push
add
or
mov
adc
fistl
addr16
dec
xchg
daa
push
cmpsl
test
jo
or
int
cmp
push
xor
leave
push
mov
mov
repz
or
push
xchg
or
lods
aam
incl
xchg
fstps
outsl
push
cmp
jecxz
pop
cmp
and
adc
iret
xchg
sarl
xchg
aaa
cmpsb
lahf
xorb
imulb
jne
bound
shr
pop
cmp
sbb
dec
push
push
jb
cmp
jmp
xor
stc
jmp
movsl
scas
inc
dec
loop
jge
mov
and
mov
nop
dec
xchg
push
sbb
rolb
pop
leave
movsb
add
xchg
adc
es
fmuls
mov
rorl
mov
imul
and
xor
scas
sbb
pop
xor
stc
xchg
cmp
xor
out
xor
mov
mov
out
mov
push
push
sub
lock
ret
sbb
lret
push
cld
push
jg
outsl
cmp
andl
xchg
mov
in
fadds
loope
cld
cmc
jo
hlt
cmpsb
mov
lea
add
sub
ret
rcrl
mov
inc
pop
xor
adc
lea
arpl
lea
mov
loopne
or
adc
call
out
fcmovbe
mov
mov
subb
and
stos
mov
jle
call
shrb
cmp
shrb
or
sub
cli
icebp
xor
dec
inc
pop
pop
addr16
vshufps
sub
test
cli
add
mov
in
dec
incl
stos
cmp
cld
cmpb
inc
outsb
cltd
aaa
cmp
jnp
aam
les
mov
push
push
xorb
xor
or
add
shrb
sarl
dec
adc
shl
rorl
xchg
inc
lcall
push
jmp
xor
cmp
cmp
add
sbb
jmp
jl
or
out
je
jbe
dec
push
pop
jbe
jmp
out
fmull
push
jge
xchg
movsl
fs
outsw
addb
and
cmpl
test
or
scas
in
rdrand
jnp
std
scas
into
scas
addr16
fadd
bound
adc
inc
xchg
test
out
mov
dec
out
jle
inc
test
cli
mov
inc
pop
inc
popa
pop
adc
nop
sub
pop
mov
pop
adc
nop
jl
inc
xlat
xchg
xchg
and
jnp
xlat
insb
ss
xor
adc
fcomps
rcrb
push
sbb
and
cmp
jle
inc
cmp
shl
daa
pushf
jg
loop
dec
or
insb
adc
add
or
xor
adc
mov
ss
mov
sub
out
fimull
adc
or
cmp
adc
movsb
lods
mov
daa
and
outsb
cmp
xchg
dec
lcall
or
jle
mov
sbb
jne
or
or
xchg
jns
jne
sbb
hlt
sub
iret
mov
sbb
jb
sub
lock
adc
jmp
fidivs
lea
dec
xchg
mov
or
jle
insl
dec
xchg
rorb
ljmp
pop
scas
or
add
or
sbb
jle
sub
jb
push
mov
xor
jnp
mov
jno
inc
ret
pop
popf
mov
add
or
and
xchg
imulb
ja
outsl
cmp
shll
add
je
inc
js
outsl
push
andl
cwtl
lea
jp
push
dec
negl
ds
fucomp
in
inc
xor
cmp
mov
add
out
out
and
shrl
je
aas
ret
das
std
insb
dec
sub
ja
mov
pop
data16
adc
xchg
andl
mov
jb
mov
out
and
aas
sahf
bound
mov
ja
xchg
aaa
xchg
adc
enter
xchg
pop
or
dec
bound
mov
pop
pop
sbb
cmp
fdiv
jo
not
adc
inc
js
jo
sub
adc
sarb
push
imulb
push
test
dec
test
push
sahf
lret
adc
push
ret
push
ret
ficompl
cld
dec
les
subl
lret
sarb
cmp
mov
cmp
sbb
out
push
pop
std
dec
lcall
data16
xchg
fs
xchg
lret
pop
mov
xchg
sbb
mov
pop
push
add
ficomps
lret
js
rcl
or
insl
lds
imul
sub
jl
pop
push
push
cmp
mov
cmpsb
cld
roll
ds
lret
insl
outsb
lahf
xchg
dec
or
pop
jo
scas
and
iret
movsb
xchg
sti
in
dec
xor
cmp
sbb
ret
rcl
scas
pushf
xor
inc
test
adc
xor
cmc
add
aas
cld
xchg
std
dec
xchg
sbb
out
push
orb
pop
leave
xor
in
leave
push
loopne
xlat
inc
mov
adc
mov
xor
jne
sbb
iret
dec
aam
mov
mov
fistpll
cltd
dec
outsl
push
push
adc
leave
jbe
scas
enter
mov
enter
aas
mov
out
fmuls
insb
push
ret
fildl
inc
push
jg
and
fdivrl
push
aam
sar
test
loop
push
cltd
fldt
pop
dec
outsl
mov
inc
push
mov
inc
lds
mul
adc
xchg
or
lret
mov
xchg
sub
loop
pop
xchg
pop
fcompl
mov
scas
pop
scas
imul
bound
mov
jl
test
mov
mov
cmc
jecxz
divl
pop
pop
lock
mov
ljmp
mov
pop
pop
cmp
cltd
fidivs
fucomi
xor
repz
icebp
xor
or
and
daa
mov
and
and
sbb
sbb
imul
mov
outsb
addr16
adc
mov
lcall
test
out
mov
aam
inc
arpl
pushf
pop
inc
pop
fistpll
xor
sbb
pop
xor
mov
lods
xchg
shr
push
sbbl
rcll
and
push
dec
sub
or
xchg
rol
jecxz
or
add
fwait
sahf
mov
je
inc
mov
aam
fidivl
jne
xchg
fsub
fwait
stc
mov
mov
shl
mov
test
sub
dec
pop
ja
aas
and
or
cld
push
outsl
fnstsw
flds
dec
jne
cmpb
and
flds
hlt
roll
inc
imul
cmc
std
mov
add
cwtl
fildl
les
scas
lds
mov
movsb
mov
mov
jp
and
push
dec
popa
lds
add
pop
mov
mov
xor
decl
mov
jl
nop
gs
sbb
sub
lret
mov
or
fistps
pop
loop
aad
sbbl
push
test
or
cmp
pop
outsl
sarl
lret
jge
or
call
call
adc
ret
arpl
and
sub
testb
lea
dec
es
in
bound
mov
ja
inc
xchg
pop
pop
inc
mov
shrb
addr16
jmp
push
jnp
outsb
aaa
in
jnp
mov
cmpsl
xchg
daa
xor
fcmovnb
out
dec
mov
cmp
sub
xchg
stos
rorb
popa
nop
fiaddl
mov
mov
sbb
loop
cmp
pop
push
ja
repnz
popa
push
mov
sub
imul
mov
cmp
nop
fs
das
in
jg
xchg
fbstp
pop
adc
daa
arpl
mov
mov
add
cmp
mov
ja
sahf
rcl
int3
int3
sbb
adc
outsl
icebp
pop
or
enter
mov
dec
hlt
int3
sarb
test
in
jge
jge
notb
adcb
jo
xor
push
popf
pop
lea
ljmp
je
es
enter
adc
mov
mov
and
repnz
cmpsl
pop
ficoml
pop
pushf
pop
sbb
sbb
mov
xlat
sti
test
pop
and
jnp
imul
add
xor
jp
popa
jo
loop
loopne
lock
sbb
cmpsb
dec
adc
and
in
mov
cwtl
icebp
jmp
cld
jo
xor
outsl
fcoms
lods
adc
ret
jo
insb
cmp
lods
xchg
icebp
test
ret
ficoml
pop
sbb
outsb
gs
mov
insl
or
or
sbb
jno
loopne
mov
lcall
icebp
or
mov
aas
jecxz
push
aam
or
int3
out
push
cmc
aam
out
xchg
xchg
or
cli
xchg
fbstp
inc
mov
pop
mov
push
mov
aaa
fsub
push
das
sub
push
sbb
in
jb
inc
leave
jmp
push
jge
out
or
rcrl
inc
ljmp
pop
add
sbb
nop
mov
sub
into
sar
nop
xchg
pusha
imul
ret
outsl
or
fistps
mov
lods
push
adc
lds
dec
push
enter
lcall
sbb
jmp
ret
repz
sahf
add
inc
inc
jns
subl
mov
xchg
sub
mov
cmp
ficoms
sub
imul
lret
sub
xor
popf
popa
call
mov
call
movsl
push
push
nop
push
scas
pusha
mov
push
mov
je
push
dec
ds
icebp
lea
negl
in
push
inc
sbb
lds
xchg
jns
pop
fidivl
mov
mov
cmp
fs
mov
push
xor
nop
dec
mov
inc
orl
iret
mov
iret
nop
xchg
jecxz
cmp
xchg
mov
or
stos
pop
gs
int3
pop
jae
lcall
inc
dec
filds
loopne
shlb
orb
call
add
jl
pop
mov
andl
adc
iret
mov
inc
ret
adc
mov
fsts
ljmp
dec
test
dec
inc
enter
xchg
jmp
pop
pop
inc
es
dec
mov
ret
imul
jbe
sub
idivb
mov
and
fistps
std
add
loop
js
cmp
dec
aaa
shrb
jle
mov
ljmp
mov
jmp
pop
insb
mov
negl
add
lods
mov
fwait
push
or
mov
test
cmpsb
add
mov
jbe
out
out
dec
iret
shr
sub
rcrb
stos
lret
cmp
sbb
cwtl
mov
orl
pop
or
rcll
stc
scas
les
gs
mov
dec
cmp
sbb
fsubrs
dec
sbb
sbb
jmp
ljmp
fisubs
cmp
shlb
pop
lahf
push
dec
push
aas
addr16
movsl
cs
ret
gs
pop
sub
mov
int
lcall
clc
js
mov
lods
leave
lret
cli
push
test
mov
cmp
lock
ljmp
iret
cmp
iret
mov
jnp
std
es
pop
lahf
push
mov
inc
sbbb
push
adc
fadds
mov
std
negl
dec
rolb
and
sahf
cmp
fidivrs
mov
aaa
adc
ret
sbb
xor
pop
sub
loopne
fisttpl
fbstp
xor
data16
adc
subb
adc
jg
pop
sub
xchg
cmpl
mov
jmp
adc
movl
cs
sbb
test
bsr
jae
pop
adc
mov
cmp
hlt
jns
out
imull
jo
lock
inc
data16
addr16
inc
int
push
sar
pop
jns
rcll
and
xor
add
adc
jecxz
repz
xlat
rol
mov
xchg
xchg
xchg
jae
inc
push
push
inc
and
xor
add
adc
jecxz
repz
xlat
rol
mov
xchg
xchg
xchg
jo
push
push
push
inc
and
aaa
daa
add
adc
out
repz
xlat
xlat
ret
mov
xchg
mov
arpl
push
jnp
and
and
add
xchg
jecxz
or
imul
cmp
jl
insb
clc
arpl
insl
adc
lods
xchg
filds
or
add
add
add
push
add
adc
addb
add
or
pop
add
add
pusha
add
add
add
faddl
testb
add
add
ltr
xor
add
add
add
add
add
pop
add
add
add
add
add
inc
add
add
push
add
add
add
insl
add
or
push
add
add
add
add
and
pop
add
add
add
popa
add
add
add
add
lea
pop
add
add
aas
add
add
add
add
add
add
xchg
add
add
add
add
add
add
dec
add
add
filds
pop
add
add
add
add
add
add
add
and
sub
push
add
add
add
add
add
add
add
add
in
mov
pop
add
xchg
sbb
add
add
jne
int
lea
aas
add
push
add
add
add
loope
mov
dec
add
push
add
mov
sub
test
imul
ret
add
add
add
add
pop
add
add
adc
adc
jne
xor
push
add
addb
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
lcall
add
add
add
in
mov
addb
add
add
add
pop
add
out
icebp
add
add
add
add
add
or
pop
add
add
add
loopne
cwtl
add
add
add
add
add
add
add
add
cltd
add
add
add
add
sbb
push
add
add
testl
lcall
add
add
add
add
and
ltr
and
dec
add
or
sbb
add
add
add
testl
mov
sbb
push
pop
lcall
add
add
add
add
push
add
add
add
add
add
or
lahf
add
push
add
sbb
or
xchg
add
dec
add
adc
adc
lock
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
sub
addl
lds
les
mov
mov
mov
add
add
add
add
adc
add
add
mov
add
add
xchg
add
add
add
add
ja
push
add
add
add
add
add
add
add
add
jbe
and
xlat
add
sbb
lea
xor
add
pop
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
test
test
jl
bound
mov
add
pop
add
add
add
lcall
add
add
nop
add
add
add
add
mov
cmp
add
ficoms
adc
and
sub
rorb
aaa
dec
xor
sub
jne
cmpsl
fimull
sub
cmp
inc
adc
imul
stos
sbb
les
mov
ljmp
cld
mov
gs
and
mov
or
sub
and
pop
addb
bound
data16
icebp
pop
cmp
push
mov
movsb
pop
xchg
sub
pop
or
and
sti
addr16
jecxz
push
icebp
inc
push
cmc
xlat
jle
dec
movb
incb
pop
data16
outsl
fnsetpm(287
push
mov
sbb
cmp
sbb
push
ljmp
adc
pop
jno
xor
dec
into
push
mov
das
das
js
sbb
mov
aas
mov
add
pusha
lea
mov
fsub
cmpsl
mov
stos
in
mov
adc
sbb
or
mov
mov
push
stos
sbb
add
cmc
xor
enter
enter
jb
jg
and
loope
ds
popa
or
sub
or
or
pop
jne
and
inc
xchg
bound
fsqrt
or
sub
mov
ljmp
cmp
mov
or
test
daa
inc
sub
ljmp
push
fwait
sti
adc
int
adc
movsb
xorl
scas
jnp
frstor
iret
cwtl
inc
xchg
lahf
popf
dec
mov
cmp
fsub
sub
jb
mov
daa
fninit
or
cmpsb
and
adc
jns
add
xor
imul
xchg
mov
fisttpl
test
fdiv
or
fdivs
and
idivb
inc
les
xor
out
jno
sbb
lret
sbb
sbb
push
mov
mov
lods
sub
sub
inc
adc
mov
fs
pop
loopne
divl
imul
sbb
sub
ret
cmc
loope
dec
faddl
fldt
adc
testl
push
cmp
mov
mov
or
fisttpl
jbe
mov
sbb
cmp
mov
mov
lock
test
mov
pop
mov
mov
push
pop
shrl
pop
rclb
inc
push
xor
dec
jnp
mov
inc
mov
adc
fimull
dec
add
cmpsb
fdivl
sbb
lcall
mov
push
sub
lcall
lods
sarl
and
push
jae
lods
loope
xchg
cltd
mov
xor
push
inc
into
stos
arpl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
