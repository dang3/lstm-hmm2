adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
xlat
lahf
les
xchg
mulb
mov
sbb
movsb
push
je
fs
adc
add
xor
xor
mov
les
xchg
filds
push
adc
aas
fs
push
sub
and
insb
xchg
xchg
cmpsw
cmp
mov
in
stos
out
cmc
xor
addr16
inc
add
adc
pusha
or
mov
hlt
fimull
push
outsb
sbb
add
lds
sub
jmp
les
andb
cmp
popa
mov
add
adc
outsl
cwtl
shr
aas
pop
adc
fistl
orl
mov
pop
inc
punpcklwd
rolb
inc
idiv
jg
sub
shrl
filds
push
incl
rcrb
xor
sbb
jo
inc
jns
push
imull
xchg
lock
and
int3
sub
ljmp
sbb
dec
xchg
mov
std
rclb
xor
daa
imul
iret
mov
add
xchg
pop
ficoms
add
push
ss
inc
push
push
push
gs
mov
ficompl
rclb
movups
add
cmp
pop
adc
cltd
mulb
sar
loope
inc
mov
fnsave
imul
je
sbb
insl
das
imul
sbb
iret
mov
movsb
out
push
pop
inc
pcmpeqb
fs
adc
add
xor
and
aam
les
xchg
filds
push
pop
inc
pcmpeqb
fs
adc
add
xor
and
aam
bound
push
insb
push
fidivl
push
lock
daa
dec
js
scas
loopne
in
xor
xchg
aad
push
push
pmulhuw
movsl
fbstp
stos
jg
out
sahf
add
jb
mov
dec
push
loopne
ret
add
lods
sbb
push
mov
pop
cli
fwait
and
out
mov
sahf
scas
ret
fwait
jbe
movsl
cmp
xchg
mov
jbe
mov
push
int
lret
push
or
addb
cltd
mov
sbb
push
xchg
insb
and
jl
test
add
test
ret
negl
stos
lret
sbb
jo
jno
jg
gs
xor
adc
add
mov
pop
lock
repz
testl
xor
aam
or
mov
xor
mov
out
sahf
fisubrs
fsts
pop
aad
negb
push
jmp
push
scas
adc
dec
xor
lret
mov
mov
dec
fmuls
jge
mov
jl
adc
xchg
ds
movsl
je
std
movsl
sbb
stc
xchg
xor
add
pop
jnp
mov
out
in
pop
ljmp
shrl
cmpsb
lds
shll
mov
push
mov
mov
mov
jge
repnz
jg
push
mov
cwtl
mov
ss
cwtl
xor
push
fldl
arpl
inc
jg
lods
fwait
insb
sub
les
stos
mov
jns
lret
cmpl
out
orb
cmovb
stos
int3
fs
or
xor
test
mov
sbb
daa
scas
stc
and
add
lods
mov
jb
jg
stc
xchg
outsb
cmp
dec
push
jmp
mov
fwait
into
hlt
cmp
outsb
mov
cmp
or
push
iret
pop
out
outsb
sub
repnz
mov
sbb
push
xor
inc
movsb
add
mov
or
push
aaa
xor
xchg
xchg
clc
enter
xchg
mov
push
repnz
push
mov
ja
add
pop
icebp
aam
push
stos
enter
or
into
or
mov
sarl
int
jbe
xchg
pop
cvtpi2ps
je
mov
shlb
mov
xor
mov
filds
adc
mov
sbbb
fsubs
jecxz
push
arpl
decl
ret
xchg
sti
js
rcrl
dec
nop
or
push
out
cmp
test
dec
jp
sahf
gs
es
popa
nop
jb
pushf
pop
mov
lcall
shll
fcompl
out
loopne
sub
das
jo
outsl
xor
inc
lcall
ret
pop
jne
mov
hlt
lods
mov
xlat
pop
bound
dec
xchg
int3
mov
stc
ljmp
push
aad
mov
pop
fidivs
sbb
cltd
repnz
fsubl
adc
sbb
enter
daa
add
repz
out
cmpl
dec
adc
xor
stc
jg
cmp
push
addb
xor
mov
icebp
cmp
imul
push
inc
leave
iret
fistps
push
sti
in
repnz
xchg
jecxz
or
into
mov
in
loope
test
pop
sbb
fs
pushf
int
stos
pop
jns
add
push
mov
movsb
jbe
test
mov
xchg
dec
pop
add
das
and
loop
inc
dec
add
inc
jle
divb
popa
jmp
pusha
pop
xchg
cltd
pop
test
pop
push
mov
inc
xchg
aad
mov
mov
lret
push
stos
xchg
pop
and
sub
in
les
lock
int
subl
sbb
xor
or
arpl
mov
cmpsb
movsb
out
xchg
je
insb
sub
xchg
rcrl
and
sti
neg
cltd
or
mov
mov
inc
fdivrs
dec
aas
imul
pop
mov
push
mulb
fisttps
mov
mov
hlt
mov
call
insb
call
xorl
lret
dec
dec
and
cmc
ja
push
mov
lds
ret
loope
into
sbb
incb
sbb
rcrl
inc
xlat
loop
lret
jecxz
jp
jns
add
mov
add
add
add
adc
sbb
or
pop
call
shl
js
fdivs
or
aam
rcl
sbb
mov
insl
sbb
dec
inc
jmp
cmp
loop
push
inc
jb
sbb
mov
mov
mulb
cs
pminub
ret
pop
sub
cltd
test
jno
mov
pop
add
daa
cmp
jns
or
jecxz
insb
mov
mov
ljmp
cmc
xchg
lods
loop
movsl
dec
push
pop
add
adc
jne
dec
xchg
lods
aad
mov
lods
pop
mov
int
sahf
lods
data16
pushf
mov
jmp
inc
mov
dec
pop
add
and
and
cltd
inc
fcompl
and
mov
jmp
es
mov
inc
stos
jnp
push
sub
push
and
sbb
testl
in
xchg
cmpsb
dec
cmp
pusha
mov
jg
cld
pop
push
pop
xor
xor
test
jmp
push
jmp
lcall
jp
sub
mov
sahf
je
out
mov
dec
push
jns
adc
movsl
fnstcw
stos
ds
jp
pop
push
mov
adc
pushf
jp
or
mov
xor
lahf
push
xchg
pushf
daa
cmp
in
cltd
lret
and
mov
xor
push
xor
das
in
jl
jle
cmc
mov
fldl
push
scas
dec
dec
xor
cli
mov
ret
test
loope
cmpsb
das
xor
psrlw
pop
in
jle
mov
aas
push
jo
fsubl
sarl
cli
pushl
sub
popf
add
pop
or
sarl
pop
ret
pop
movsb
movl
and
outsl
sti
mov
dec
jl
fisttpll
xor
push
outsb
fildll
sub
jl
mov
testb
sti
mov
enter
xchg
mov
stos
jle
add
mov
mov
cmpsl
fwait
test
in
sbb
sub
mov
inc
cld
push
sbb
sbb
out
push
imul
les
je
rorb
mov
out
mov
mov
mov
aas
push
stos
pop
fdivl
fcoml
ds
arpl
xor
outsl
jne
pop
in
stos
rcl
and
pop
push
dec
aaa
sbb
cmpsb
dec
inc
sar
mov
cli
pop
lret
aad
pop
push
and
adc
xchg
push
loopne
cmc
mov
inc
xchg
push
jg
pop
lahf
xchg
xor
cmp
push
dec
xchg
popf
cmpsl
mov
xor
sub
and
mov
jb
mov
lods
xchg
shll
push
aam
test
popa
enter
loopne
addb
dec
fucomip
insl
sub
mov
addr16
fldlg2
cld
sti
ficompl
popf
dec
jmp
sbb
mov
lcall
iret
mov
mull
test
mov
mov
leave
cltd
icebp
xchg
adc
std
jb
fsubr
sahf
cwtl
sarl
mov
pop
xor
push
push
xor
aaa
adc
test
cmp
loopne
sub
outsb
rcrb
sbb
jecxz
sbb
and
ds
dec
inc
movl
mov
mov
adc
das
or
sub
repz
pop
stos
sbb
hlt
lds
jmp
ja
mov
or
test
aaa
mov
adc
orl
in
rcrl
rolb
mov
sub
push
cmpsb
adc
popf
mov
cmp
les
jne
mov
cmp
loope
lods
jge
bound
shrl
mov
mov
cmp
mov
enter
sub
popl
out
xor
arpl
xchg
mov
aad
push
adc
push
lods
out
out
test
andb
xor
movsb
and
mov
mov
mov
push
mov
jp
mov
mov
pop
adc
mov
fadds
jmp
and
mov
mov
xchg
mov
stos
mov
dec
mov
dec
xor
mov
jg
mov
js
xchg
fs
test
xchg
dec
xchg
or
pushf
stc
iret
jl
into
std
jb
mov
or
scas
jp
pop
in
loopne
sbb
inc
mov
sarb
mov
mov
repz
pop
sbb
dec
out
or
mov
sub
aad
and
daa
mov
insb
cmp
mov
inc
or
scas
lret
sub
dec
add
mov
fdivr
add
mov
cmp
push
mov
pop
xor
imul
mov
fs
dec
addb
pop
imul
ljmp
pop
in
or
ljmp
repz
xor
les
bound
dec
adc
out
enter
dec
inc
adc
gs
fs
mov
jp
sbb
push
cmp
sub
xchg
int3
and
pop
add
cmp
psubw
loopne
xor
or
sub
and
mov
or
add
ja
xor
xchg
adcl
and
push
inc
aas
in
push
jle
push
inc
aam
add
pop
out
aaa
idivl
fwait
jle
stc
jmp
add
call
jbe
and
jl
sub
xor
mov
arpl
cmp
dec
and
out
xor
out
mov
jp
xchg
ljmp
enter
mov
inc
inc
and
push
mov
mov
cld
mov
add
or
mov
movsb
movsb
pushf
dec
sti
cs
jle
aaa
fists
movsl
mov
pop
arpl
ss
cmp
dec
cmpsb
xchg
lret
pop
and
mov
cmp
jg
jle
mov
sahf
jno
stc
push
jecxz
test
mov
push
push
rorl
jno
call
shll
shr
lret
jne
cmp
jl
xchg
ret
lahf
ss
push
aad
lds
addr16
mov
cmp
jle
adc
test
mov
or
sub
cwtl
lcall
std
dec
in
es
neg
mov
mov
test
js
fstpl
gs
sbb
push
testl
dec
pop
pusha
fs
xor
jge
ljmp
lzcnt
shrb
sbb
cmp
ret
outsb
inc
lds
stos
pushf
es
nop
sbb
sub
popf
push
out
xchg
adc
shrb
mov
rclb
xlat
cmp
daa
lds
movsb
data16
add
sbb
xchg
or
xor
push
mov
test
cmc
clc
data16
mov
in
lahf
pop
cmp
data16
mov
and
cs
and
sbb
add
pop
sub
inc
mov
mov
mov
idivb
sbb
push
rcrb
add
and
inc
mov
sub
lods
aaa
sbb
dec
rcrl
mov
jns
sarb
pusha
out
cmp
roll
int3
pop
xchg
mull
pop
and
iret
inc
mov
popa
enter
stc
xchg
or
je
nop
cmc
mov
dec
fsubs
dec
and
rcll
inc
insb
mov
mov
push
mov
sbb
stc
push
cli
xor
lock
es
adc
and
or
inc
bound
adc
cmp
mov
test
cmp
or
leave
mov
push
and
sub
sarl
cmc
insl
xchg
mov
or
aaa
mov
jl
xchg
imul
cmp
sub
push
out
fnstenv
test
sbb
xchg
dec
ret
push
loope
xorb
push
xlat
iret
std
faddp
cmp
loop
aad
jb
lahf
cmp
pop
imul
cmp
ss
popf
outsb
rorl
int3
push
out
mov
not
and
cmp
sub
lret
test
mov
and
cld
ss
sub
jns
cmc
stos
in
mov
xchg
sub
mov
add
daa
mov
add
imul
pop
push
cs
ss
repnz
sub
sub
inc
inc
push
imul
jge
xabort
fcmovnu
jns
and
fimull
cmp
sbb
mov
xor
scas
adc
imul
in
adc
push
xchg
xor
mov
xor
stos
movsb
lods
xor
leave
xchg
in
or
xchg
ret
sub
mov
test
pop
adc
push
xor
movl
add
out
lahf
dec
mov
adc
call
jns
daa
pop
sub
xchg
mov
ret
push
in
and
repnz
sub
cmp
push
push
int
nop
pop
in
bound
jo
mov
clc
or
lock
xorb
insl
xchg
sbb
or
jbe
mov
jg
lgs
or
xor
cmpsb
ret
movsl
xor
rorl
xor
or
adc
jle
cmp
xor
jge
pop
dec
jmp
incb
xorb
mov
cmc
pushf
outsl
pop
or
mov
ljmp
call
ljmp
es
or
into
sbb
lret
and
lds
movsl
dec
or
and
adc
pop
or
xchg
mov
add
xchg
popf
xchg
fwait
stos
jb
pop
pop
test
xchg
and
sub
adc
xor
out
jbe
xlat
pop
aad
sahf
clc
outsb
and
xor
xlat
shrb
rol
push
mov
sbb
adc
popa
sahf
mov
or
mov
sbb
adc
push
sub
xor
and
inc
loope
adcb
xor
push
jl
sahf
fwait
rcl
out
fiadds
gs
rclb
xor
jbe
jns
test
ret
add
cmp
push
sarb
mov
mov
leave
jno
je
bnd
nop
faddl
aad
xor
stc
inc
dec
lret
out
cli
outsb
sbb
push
push
jns
dec
out
out
add
jge
jmp
inc
addr16
bound
or
sub
push
mov
repz
mov
xchg
std
pop
or
test
jnp
adc
xchg
or
test
or
andb
inc
mov
test
pop
jno
loope
movb
push
inc
pushf
outsl
lret
xchg
xor
fdivl
push
mov
add
jge
sbb
icebp
xchg
sbbl
add
lcall
push
mov
pop
test
fmull
jl
jecxz
hlt
xchg
pop
push
mov
scas
addr16
pop
test
jbe
or
cmp
popf
xor
cmc
dec
dec
cmpsl
mov
cwtl
filds
gs
and
enter
push
jo
add
ret
mov
lds
shlb
aad
out
iret
dec
fisttps
imul
test
ret
shr
mov
mov
test
mov
jge
push
add
or
jbe
popa
push
fidivl
push
or
fs
sub
ffree
cmp
jb
mov
fucomp
mov
outsb
sahf
or
sbb
testb
repz
test
pop
mov
xchg
in
data16
jmp
pusha
aaa
call
mov
mov
inc
mov
ss
mov
popf
pop
xchg
ret
sarb
fistpl
sub
add
outsb
cs
imull
ss
xor
xchg
add
jbe
cmp
int
mov
mov
jg
mov
xchg
sahf
ja
nop
sbb
cmp
jg
hlt
out
ss
jmp
lahf
lcall
imulb
rcr
scas
xchg
jo
pop
xchg
sub
lret
mov
shll
fnstcw
cmp
cli
sub
push
jecxz
add
scas
aam
pop
and
insl
mov
mov
addb
test
mov
bound
inc
push
shll
add
dec
jo
pop
add
adc
mov
jle
sub
sbb
jg
mov
push
add
pop
add
pop
lcall
imul
pop
les
and
mov
and
sub
and
inc
notl
mov
mov
cld
pop
rcrb
data16
mov
add
mov
ss
fcoms
xchg
popa
jecxz
mov
pop
cld
push
jnp
and
mov
or
cwtl
adcl
push
xor
hlt
dec
and
outsl
cltd
stc
inc
lret
arpl
mov
ficomps
icebp
rcrl
mov
xchg
arpl
push
lods
cmp
and
push
call
sub
jl
fucomip
xor
push
push
cmp
or
lock
jge
push
out
clc
and
pop
push
xchg
xor
jge
lds
in
lcall
int3
dec
cmpsb
xor
out
xor
stos
and
mov
adc
inc
xchg
xchg
js
sub
xorl
dec
xchg
cmp
jae
jge
scas
out
pop
mov
push
enter
lds
sbb
dec
cmpsl
fisubs
sub
fmull
jg
push
add
push
ss
roll
sbb
testl
enter
or
loop
bts
shr
lods
mov
gs
test
mov
imul
popf
ss
push
mov
nop
push
arpl
cli
nop
jne
inc
bound
mov
ret
imul
sbbl
xor
xchg
cs
push
push
shrl
inc
sbb
sahf
mov
arpl
jno
adc
xchg
adc
push
jp
das
rcll
fisubl
push
xor
outsl
ss
js
fists
mov
sub
mov
sbb
push
mov
mov
mov
outsb
cltd
xchg
pop
ljmp
mov
push
sbb
mov
jnp
lcall
nop
sbb
mov
jbe
xchg
cmp
push
sarb
mov
int
fnstenv
sub
js
ret
xchg
dec
mov
into
cltd
and
inc
xor
or
aas
jmp
out
test
std
loope
std
lock
xor
pushf
in
in
imul
rcrb
aas
sahf
inc
push
aaa
test
xchg
cmp
mov
sar
mov
mov
lret
test
cwtl
xlat
imul
rorl
les
fsubl
mov
push
jbe
mov
outsb
adc
into
gs
xorl
cwtl
test
cmp
mov
jns
jne
cmp
adcb
fimull
insb
shl
push
jb
das
sbb
and
jb
test
lret
out
iret
mov
icebp
je
add
cli
push
mov
xchg
push
add
outsl
jns
leave
dec
dec
xor
icebp
lret
out
fnstsw
dec
divl
into
dec
or
fwait
cmc
es
ror
xchg
or
fdivrl
jno
inc
in
call
push
sbb
stc
das
test
scas
repz
in
les
add
jge
iret
mov
push
cmp
cmpsl
imul
or
adc
add
cmp
push
add
xlat
adc
stc
lock
jmp
outsl
sahf
sbb
jo
addr16
fwait
sub
ret
negl
out
stos
jmp
iret
push
pushf
loopne
and
enter
mov
test
mov
and
push
ja
sarb
lcall
ljmp
xchg
adc
or
in
fs
pop
aas
jae
inc
shrb
mov
call
iret
lods
pop
cmp
movsl
sti
jg
in
popf
dec
push
lods
ret
fwait
ret
shll
mov
fidivrs
inc
mov
movl
mov
into
inc
pop
dec
mov
rcr
sarb
jbe
in
mov
mov
ja
es
pop
mov
push
imull
inc
js
loopne
or
fdivr
or
rcrl
jne
adc
cmpsl
pop
out
cmp
addb
out
cld
pusha
call
sti
sub
or
push
sbb
mov
xor
sub
add
mov
mov
and
popf
andl
negb
jle
pop
shl
cmc
and
lcall
shrl
or
pop
inc
test
insb
repz
mov
mov
lahf
cmovle
inc
orb
cltd
dec
pusha
ds
cmp
xorb
jg
aad
add
je
test
ficoms
mov
and
add
std
pop
cmpsl
cld
pop
mov
xchg
push
aad
xchg
push
les
cmp
mov
out
aad
push
jne
ficoml
movsl
mov
mov
in
xchg
filds
push
pop
inc
pcmpeqb
fs
adc
add
xor
and
aam
les
xchg
filds
push
pop
inc
pcmpeqb
fs
adc
add
xor
and
aam
hlt
xchg
mov
test
mov
fs
push
pop
inc
je
pop
adc
xor
int3
imul
cwtl
mov
fists
push
pop
mov
pop
arpl
mov
lret
add
adc
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
and
adc
add
lds
dec
nop
mov
mov
push
icebp
and
xor
adc
adc
loopne
lock
add
jno
popa
mov
addb
bound
push
icebp
inc
shl
roll
rcll
stc
cmp
or
sbb
push
cwtl
inc
mov
xor
mov
push
xchg
adc
dec
cltd
adc
imul
inc
flds
stc
lret
loopne
or
lock
mov
fidivs
pop
sub
aam
aam
xor
mov
mov
add
pop
into
pop
fnsave
lahf
inc
mov
mul
mov
hlt
cmpl
or
icebp
xor
adc
mov
lock
and
jo
fadds
cmp
mov
scas
push
jae
iret
pop
mov
jp
fsubrs
mov
mov
mov
addr16
add
loope
cs
out
rcll
sar
mov
dec
sbb
in
push
roll
jae
inc
sar
roll
loopne
out
rolb
lret
jno
push
cltd
pop
mov
pop
cwtl
dec
jmp
add
je
test
shll
testb
sbb
inc
std
mov
int
loop
in
icebp
dec
test
add
jle
jno
sbb
in
cld
repnz
adc
push
mov
insb
movsl
jne
mov
imul
mov
mov
push
icebp
and
xor
add
adc
loopne
lock
add
jno
popa
mov
addb
pusha
mov
push
icebp
and
xor
add
adc
loopne
ja
loope
ret
sbb
cmp
js
mul
sbb
pushf
pop
or
sbb
pop
mov
gs
dec
cli
in
fisubs
testb
enter
jg
leave
in
or
popl
dec
stos
cmp
mov
inc
cmp
jl
pop
shlb
pop
jge
xor
add
outsl
in
pop
lret
shll
lods
aaa
sub
dec
xor
mov
sub
scas
mov
inc
das
das
aas
lea
insb
es
and
cltd
mov
mulb
in
mov
in
inc
jp
lcall
stos
data16
in
ss
cmc
mov
dec
push
aad
test
negb
ret
mov
push
lods
lods
test
push
out
pop
xchg
pushf
nop
sbb
pop
and
push
ljmp
shrl
mov
rcrb
xor
movsl
sbb
mov
jno
test
cmp
pop
adc
sbb
cld
sub
lods
lret
xchg
ret
icebp
dec
push
pop
ret
decl
dec
and
test
sti
adc
xchg
mov
mov
jo
mov
inc
jl
ja
push
push
rcrb
rclb
dec
cmp
xlat
clc
stos
xchg
call
sbb
loop
lods
lds
pop
push
int
add
shrb
jmp
loopne
xchg
add
notl
adc
ljmp
sub
mov
notl
mov
mov
mov
lods
mov
out
frstor
dec
inc
nop
or
mov
mov
lcall
lcall
bnd
mov
sti
repnz
in
aad
mov
xchg
pop
pop
mov
mov
pushf
sub
cld
sub
cld
add
inc
daa
cmp
and
dec
icebp
pop
enter
push
orb
aaa
mov
lcall
sbb
mov
mov
adc
add
in
xor
cvtpi2ps
daa
xchg
repnz
cmpsb
xchg
call
sub
std
add
icebp
xlat
addps
imul
pop
mov
jns
dec
fsubrp
stc
jecxz
les
sbbl
sahf
cmp
or
jae
mov
and
mov
inc
dec
inc
cmp
pop
gs
aaa
push
ljmp
mov
outsl
fldcw
push
xor
push
xchg
ds
mov
andb
add
sar
aas
jae
xchg
aas
rolb
add
icebp
mulb
adc
sbb
sahf
xchg
dec
xchg
mov
mov
int3
sub
js
mov
adcl
lret
in
jnp
fcmovu
call
shll
xor
jo
cmc
mov
cwtl
push
jge
repz
push
push
jbe
int
dec
and
call
dec
or
daa
mov
mov
shrl
call
setno
daa
mov
fldt
sub
lea
or
or
push
out
insl
int
mov
mov
and
das
lds
cmp
pop
aaa
push
push
int
sahf
sub
aad
inc
in
movnti
gs
out
scas
sub
and
xchg
popf
dec
xor
mov
test
pusha
xchg
enter
adc
ret
daa
sbb
cmc
dec
push
js
aam
xor
lods
sub
dec
cld
xlat
sbbl
sub
mov
sbb
inc
jo
popa
dec
sub
lods
and
add
fucomi
xchg
mov
imul
or
loopne
lods
cmp
adc
sbb
out
cld
pop
jae
add
test
mov
add
mov
popa
dec
mov
sbb
popf
call
dec
inc
pop
mov
fs
xchg
sbb
outsl
ret
ret
lahf
rolw
push
popf
in
cld
fwait
jle
es
lret
xor
sbb
or
xchg
lret
int
aam
jnp
jecxz
ja
int3
insl
inc
push
xor
adc
cmp
dec
notb
add
mov
sbb
xchg
inc
sbb
inc
stos
push
fs
sbb
or
test
xor
mov
mov
js
adcb
cmc
cmp
mov
mov
aad
jne
lret
std
subb
add
fisttpl
cmc
mov
jmp
test
and
xor
push
ljmp
subb
add
jecxz
xor
jecxz
lret
mov
filds
cmp
mov
mov
push
xchg
ljmp
cli
jae
jg
js
lahf
jmp
mov
sbb
inc
je
ret
inc
out
jno
mov
outsb
cmp
sub
pushf
dec
rolb
push
push
sub
sbb
xor
stc
add
les
lock
mov
adc
and
sahf
mov
xchg
sbb
jae
xor
dec
sbb
fwait
popa
pop
scas
jmp
cmovne
mov
jecxz
or
sub
adc
cmpsb
les
andl
dec
pusha
mov
push
or
rcrb
push
hlt
or
jmp
adc
enter
push
mov
movsl
in
jecxz
dec
enter
sbb
js
bound
loopne
mov
in
add
aas
lea
adc
cmpsb
fsubrl
pop
or
inc
mov
das
mov
cli
scas
or
pop
ret
cmp
lcall
shlb
rclb
xchg
ja
jmp
adc
aas
mov
pushf
daa
nop
sbb
call
daa
es
add
cltd
in
sub
pop
sbb
and
xor
cmpsl
cs
mov
fwait
push
in
cwtl
push
inc
jecxz
add
shr
pop
and
jno
mov
push
adc
fnsave
adc
cmpsb
pop
and
xchg
or
add
fwait
cmpsb
and
outsl
mov
hlt
push
sub
mov
lods
sbb
mov
adcl
sub
test
mov
jnp
in
and
fsubrs
inc
jne
xchg
dec
and
cmp
cmpsl
addr16
pop
pop
imul
mov
add
out
mov
int
lea
push
aad
or
xchg
jae
pop
jnp
pop
sub
roll
mov
insb
gs
cli
into
sbb
out
and
or
mull
sbb
lods
inc
xchg
dec
leave
shlb
in
fisttpll
ret
imul
lea
xchg
and
mov
aaa
cld
dec
mov
ficoml
scas
xor
dec
or
sub
stos
and
inc
dec
cwtl
jne
dec
push
sbb
inc
in
pop
scas
push
mov
sbb
addb
jno
xchg
lahf
add
mov
imul
ja
fs
xchg
ljmp
lcall
cmpsb
xorps
and
adc
or
pop
mov
stos
cmp
loope
jmp
pop
push
cmpsl
and
mov
jle
mov
es
push
fs
sub
loop
pop
repz
in
inc
inc
insl
jbe
jno
popa
xchg
cmp
sub
and
dec
xchg
jp
jecxz
cltd
jecxz
into
call
subb
push
pop
and
mov
or
push
adc
in
fs
arpl
ret
mov
push
lea
arpl
mov
inc
adc
loop
leave
or
imul
stc
mov
push
cmp
aam
cmp
pop
dec
sahf
vmovaps
cmp
pop
push
jmp
push
sbb
cmc
jnp
out
jmp
jb
sbb
int3
xchg
sub
leave
cld
cmpsl
push
inc
ret
mov
and
imul
call
sub
mov
fsubr
outsb
jno
xchg
and
sub
filds
jecxz
inc
jb
jg
cltd
repnz
loop
outsl
adc
add
inc
daa
fwait
xchg
ret
insb
push
in
sbb
sub
add
sti
inc
pop
cmp
xchg
repz
je
cmp
pop
leave
and
mov
adc
out
fwait
loop
lahf
fs
arpl
push
stos
push
mov
dec
mov
push
divb
xchg
je
sub
sub
mov
sbb
cmp
dec
arpl
adc
pop
data16
jne
pop
jmp
das
jge
into
add
and
push
cmp
xchg
mov
mov
add
fisttpl
push
nop
dec
sbb
imul
inc
fstpl
sbb
bnd
mov
adc
xchg
inc
xchg
mov
xchg
or
lahf
sub
call
dec
call
cld
int
dec
pop
pop
mov
xchg
pop
fdivp
mov
xchg
bound
in
je
scas
mov
popf
xchg
popa
mov
movsb
jmp
add
int
cmp
pop
sub
pushf
add
mov
sub
xor
in
or
in
adc
and
shll
mov
roll
jb
cmp
pop
mov
mov
sbb
outsl
addr16
mov
lcall
rorb
inc
adc
dec
ret
jecxz
push
adc
xor
cmpsb
adcb
data16
movb
dec
ljmp
and
push
push
pop
mov
or
pminsw
rclb
idivb
test
inc
sbb
push
xor
stc
xchg
and
dec
fs
mov
iret
iret
xchg
adc
sub
fbstp
and
out
sbb
cmp
in
cmpsb
dec
pop
push
test
pop
lret
rcr
adc
xor
push
inc
js
dec
xor
adc
outsl
mov
xor
repnz
out
and
lods
cmpsl
lea
adc
mov
add
out
push
add
lret
std
push
bound
inc
push
fnstsw
and
lods
ljmp
stc
rolb
out
lock
nop
aad
aas
loop
data16
stos
dec
sub
sbb
cmp
jecxz
aad
movsb
jmp
aas
sahf
out
dec
pushf
shlb
mov
mov
sbb
mov
pusha
xlat
shlb
pop
jne
push
jmp
rolb
inc
fistps
mul
in
mov
fucomp
mov
lahf
popa
fsubr
stos
imul
lds
or
sbb
daa
in
popl
cltd
andb
add
inc
pushf
jmp
lds
xchg
dec
test
push
shl
lahf
xchg
pop
and
xchg
add
fisubrl
xor
inc
and
dec
aad
sub
movsl
push
pop
mov
fcompl
movsb
in
xlat
fdivr
cmp
shrl
das
xor
add
data16
sbb
scas
addr16
or
push
or
sbb
test
movsb
loop
jg
out
int3
addr16
or
inc
out
stos
iret
fistpl
cmp
add
std
cmp
mov
jae
and
pusha
jo
cmpsb
decl
ss
dec
mov
insb
or
mov
mov
mov
dec
sub
and
xor
fwait
out
arpl
iret
pop
lods
xchg
push
sti
sub
stc
leave
push
xlat
jb
and
jg
pcmpeqb
in
iret
bound
pop
inc
push
lcall
add
mov
scas
shl
repnz
lods
sbb
gs
cwtl
or
xor
mov
cmp
inc
sahf
rcr
pop
xlat
cli
cli
test
push
cmp
jnp
lds
dec
push
xor
and
add
fdivrl
sahf
out
fcmovnb
popf
nop
push
sti
cwtl
ds
xchg
dec
xchg
xor
cwtl
mov
dec
jg
xchg
emms
sub
hlt
rorb
cli
push
xor
int
loop
mov
sarl
jns
jmp
mov
je
xchg
imul
inc
stc
xor
jecxz
inc
hlt
in
addl
fcoms
push
or
repz
push
iret
cld
jnp
addr16
int
lods
jmp
mov
fucom
js
lds
push
test
inc
or
sbb
int
gs
cli
adc
lods
inc
jb
or
push
into
int
sar
sti
mov
mov
jmp
dec
inc
push
icebp
cmpsl
xchg
lret
out
test
stos
sbb
ret
xchg
movsb
out
lcall
iret
arpl
arpl
sbb
mulb
jg
cmpsb
in
xlat
arpl
dec
daa
xchg
loop
add
lock
das
sbb
in
mov
cltd
xchg
cltd
sbb
xchg
shlb
mov
mov
je
je
pop
jge
mov
popf
jmp
sbb
pop
data16
int3
ret
loopne
or
clc
xchg
dec
mov
pop
clc
cmpsb
insb
jmp
or
int3
push
sbb
jns
push
sahf
cmp
pop
inc
or
lret
push
data16
repnz
lahf
subb
mov
popa
stc
xchg
add
xchg
adc
out
xchg
jo
adc
or
rsm
pop
inc
xchg
sbbl
push
pop
loop
jns
jp
and
add
test
dec
and
sub
cmp
push
inc
cli
add
add
test
mov
arpl
or
adc
cmpsb
pop
icebp
dec
add
sbb
adc
lret
pop
sbb
adcl
jno
jbe
push
rcl
daa
in
push
xchg
sub
push
cmp
pop
jno
cld
enter
icebp
sub
adc
int
cmpsb
sbb
mov
fdivl
rcrb
cmpsb
inc
and
pop
filds
outsb
add
iret
sbb
addb
xor
lret
mov
inc
mov
mov
push
add
mov
aas
in
jmp
mov
fldl
scas
int3
mov
cwtl
jbe
idiv
xchg
in
xchg
sub
jb
or
dec
std
jb
clts
sub
pushl
movsl
orb
jecxz
icebp
hlt
mov
pop
ss
movsl
fmul
ja
jl
jnp
ja
jno
jecxz
push
pop
popl
cwtl
loope
mov
add
rolb
sbb
into
mov
pop
inc
js
imul
enter
mov
mov
or
pop
mov
addr16
xchg
fimuls
enter
mov
xchg
clc
jle
xor
rorb
push
cmp
push
sub
dec
sub
lea
lods
xor
int3
cmpsb
pushw
sub
xlat
push
push
int
outsl
sbb
flds
and
sub
pop
sub
push
sub
mov
leave
pusha
in
or
mov
popa
xchg
push
xchg
bound
arpl
jo
lea
jae
sbb
pop
popa
insl
jg
adc
fsubr
inc
mov
xchg
push
pop
dec
subb
icebp
ss
into
mov
scas
aaa
cmp
mov
push
repz
fistpl
pop
ret
jo
scas
fnstenv
outsl
pushf
lods
xchg
insb
pop
dec
sbb
les
mov
mov
data16
inc
movsb
sti
mov
int3
stos
sub
in
jnp
push
call
lret
mov
mov
lahf
sbbl
mov
xor
sbb
lret
jnp
dec
sub
push
idivl
ljmp
pusha
cmp
leave
arpl
and
pushf
xchg
popf
xchg
notl
repnz
lcall
out
leave
pop
mov
cmpb
test
insb
daa
sarl
fldenv
aas
pushf
xor
enter
inc
lock
stc
adc
pop
and
imul
and
loop
mov
dec
cmp
jp
andb
adc
jmp
cltd
aas
mov
hlt
and
mov
inc
mov
adc
mov
in
mov
ret
pop
es
mov
subl
or
lock
mov
mov
in
pop
rorl
bound
pop
push
pop
cmp
ret
add
sahf
add
dec
stos
stos
xor
jbe
jne
inc
mov
adc
sarb
sub
lcall
jbe
mov
std
jp
aaa
testl
mov
popl
push
jmp
pop
lods
and
push
imul
fisttpl
xchg
fs
push
mov
add
test
out
pusha
xchg
roll
test
pusha
mov
mov
dec
icebp
and
leave
xchg
adc
cmp
divl
xor
stos
int
ds
aaa
sub
xchg
ds
mov
mov
mov
in
xor
jmp
sbbb
adc
xor
fwait
jno
pop
mov
inc
pop
mov
scas
jmp
push
jns
test
adc
gs
cmp
shl
cmc
filds
mov
insb
jno
push
mov
addr16
or
pop
cs
ljmp
mov
mov
sahf
bound
adc
push
nop
inc
lret
or
mov
add
lret
push
sti
testb
dec
fsubrl
outsb
mov
pop
out
pop
out
sbb
into
jmp
aad
mov
call
aas
dec
dec
mov
std
scas
out
bound
arpl
hlt
leave
popa
add
jno
xchg
mov
out
lcall
test
push
adc
dec
dec
cwtl
lea
pop
xchg
sbb
ret
int3
push
or
cmp
icebp
in
fwait
xor
xor
jne
pusha
sahf
sbbl
pop
push
sbb
ljmp
pop
enter
add
push
loop
int3
or
aad
xlat
mov
jae
in
mov
ds
add
outsb
or
dec
adc
imul
pop
dec
push
es
icebp
test
or
jo
xchg
push
jbe
jp
push
pop
and
lds
inc
jle
nop
enter
adc
out
stos
pop
cmp
out
add
aad
test
adc
lsl
lods
sti
sar
push
repz
outsb
mov
test
xor
test
xchg
adc
mov
sbb
lods
xor
stc
and
dec
roll
fldl
js
int
sti
adc
insb
push
inc
pop
out
pop
push
ret
dec
jle
or
jbe
mov
jecxz
in
mov
cmp
and
lock
mov
inc
sbb
test
mov
gs
test
into
xchg
addb
ret
cmp
cmp
fstl
dec
out
and
data16
sbb
mov
jmp
lahf
mov
mov
push
test
pop
xchg
sbb
sbbb
lret
dec
pop
cld
add
mov
xchg
push
mov
je
hlt
adc
lahf
outsl
mov
and
or
aas
xor
enter
out
jne
fst
fsts
mov
mov
out
insb
mov
stc
mov
fstpl
sbb
mov
imul
pop
or
stos
ret
pop
cltd
push
jp
pop
fs
push
test
popf
dec
add
or
jnp
sbb
jge
lods
bound
mov
in
fcoml
icebp
in
cmp
push
lods
push
sub
mov
js
rcrl
jl
pop
fidivs
mov
addps
loop
pop
mov
mov
push
or
lds
push
sub
pop
jp
pop
imul
lods
dec
sti
frndint
jns
push
cmpsl
gs
xchg
addr16
cltd
push
aad
cwtl
es
mov
cld
sbb
dec
xor
pop
jmp
test
lret
aam
cmpsl
jb
test
mov
mov
test
les
cmp
neg
popf
inc
scas
xchg
popf
and
ds
fimuls
fdivs
sub
sub
push
push
aam
mov
fdivrl
push
mov
shlb
xchg
ret
jge
push
sbb
fstpt
pop
jns
loop
fs
mov
sub
in
mov
pop
cmpsb
cmp
pop
ret
cmpsb
mov
loop
push
mov
mov
cmc
dec
jl
mov
shrl
mov
incl
cmp
mov
jg
mov
add
jmp
sbb
loopne
sub
stos
inc
rcr
push
push
xor
aas
dec
es
push
inc
xor
pop
mov
imul
add
jbe
test
sbb
movb
adc
loopne
xor
pop
and
add
shl
sti
sbb
jge
xchg
gs
xchg
idiv
sti
pop
adc
lahf
arpl
mov
je
mov
in
pop
push
inc
push
adc
push
and
push
inc
sbb
mov
pop
pop
jle
pop
xchg
xor
movsl
inc
sbb
pushf
jb
xchg
sahf
ljmp
adc
cltd
push
xchg
jg
aad
mov
out
cltd
sub
mov
mov
jp
mov
mulb
mov
clc
inc
inc
inc
mov
add
pop
notl
mov
les
adc
outsl
pop
push
cli
into
aaa
push
push
jb
cmp
lods
nop
jp
jne
xor
add
inc
aam
mov
out
push
pop
xchg
sbb
mov
addr16
je
and
adc
push
adc
repz
inc
mov
mull
xlat
mov
int
in
nop
lock
add
jno
popa
mov
addb
pusha
mov
push
icebp
and
xor
add
adc
loopne
lock
add
jno
popa
mov
addb
pusha
mov
push
icebp
and
xor
add
adc
loopne
lock
add
jno
popa
mov
addb
pusha
mov
push
icebp
and
xor
add
adc
loopne
lock
add
jae
popa
mov
add
dec
pusha
pop
fidivrl
inc
andl
cs
ds
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pushl
iret
cli
repz
in
mov
outsl
pop
pop
xor
das
inc
pop
push
pushl
iret
in
cmc
scas
lds
xor
dec
gs
je
inc
pop
push
bsf
lods
out
popf
fisttps
scas
fstpl
ds
imul
cmp
aad
mov
leave
mov
iret
in
lahf
or
ficomps
aaa
adc
aas
dec
xchg
pop
push
movsl
lods
cmp
addl
xor
or
nop
cli
dec
sbb
fnstcw
and
test
pushl
leave
stos
mov
das
xlat
insb
int
daa
sub
loop
push
ljmp
lcall
negl
cwtl
rcrb
sub
sbbb
fisttpl
loopne
roll
mov
fmull
xor
scas
sub
mov
je
enter
inc
jp
lret
pop
mov
dec
fisubrl
cmp
cmpsl
adc
movsl
aas
gs
pop
push
sbb
mov
test
or
mov
int3
cmp
sub
dec
jge
insl
das
inc
pop
dec
data16
sti
shrb
sbb
mov
outsb
ja
jnp
or
and
inc
movsl
lcall
xchg
rcrl
jmp
xor
push
inc
or
sub
push
push
cs
mov
xchg
stos
popf
xchg
cmc
scas
lds
xor
dec
gs
jne
inc
pop
push
shld
mov
test
xchg
iret
in
cmc
scas
lds
xor
dec
gs
jne
inc
pop
push
shld
jbe
fdivl
std
or
jp
int
xchg
inc
hlt
sti
pop
and
fabs
lds
sub
mov
js
shl
push
outsl
loop
dec
mov
ret
xor
pop
into
add
dec
xchg
push
hlt
rorl
and
jbe
push
pop
and
xchg
and
and
push
cmpsl
icebp
adc
lds
adc
sbbl
pop
das
jp
add
xor
bound
push
mov
addb
adc
dec
orl
mov
mov
xchg
push
in
sbb
dec
or
sub
inc
mov
call
aaa
cli
sahf
lcall
and
fwait
xchg
inc
insb
int
shll
rorb
cmpsb
jae
cmp
jge
jecxz
pusha
scas
pop
xchg
lahf
movsl
mulb
in
xchg
add
in
repz
mov
ret
xchg
ret
insl
pop
rcll
add
fdivl
pop
push
mov
pop
mov
xor
push
sbb
aas
lods
lret
add
imul
inc
scas
repz
adc
and
fdecstp
daa
jg
mov
movl
xchg
push
inc
lods
mov
xlat
lods
ret
dec
jg
mov
mov
mov
ljmp
xor
js
mov
inc
fcoml
ret
aad
xchg
mov
jle
and
and
and
sti
and
rclb
adc
pop
dec
push
dec
xor
aam
rcr
jl
jns
enter
add
inc
test
test
and
mov
aad
jecxz
and
cltd
aas
jnp
mov
ss
mov
test
pop
cli
mov
xor
in
fstl
sbb
test
mov
movsl
das
add
mov
and
jns
sbb
mov
jns
movsb
je
daa
mov
pop
xor
mov
mov
aas
dec
bound
outsl
mov
data16
cli
stc
movsb
sub
push
mov
sub
test
out
and
xchg
and
sub
jmp
or
jge
jmp
adc
and
arpl
repnz
jmp
jmp
andl
in
test
sub
sti
out
imulb
inc
les
adc
mov
xchg
add
dec
or
scas
xor
xchg
adc
dec
and
cmc
jno
dec
test
sbb
push
mov
lods
sbb
mov
dec
push
xchg
data16
sbb
sbb
xchg
cmpl
mov
add
pop
andl
mov
add
and
call
or
mov
repnz
push
xor
pop
ja
pop
dec
or
mov
adc
push
xchg
fmull
jp
push
into
sbb
and
shrb
lcall
shlb
and
push
cmp
in
xchg
push
les
imull
xor
mov
ljmp
xchg
jno
push
fistpll
push
inc
xchg
sub
pop
push
jmp
sbb
jo
cltd
lods
lock
pop
cmc
scas
addl
mov
push
add
push
mov
sub
mov
jecxz
out
test
cmp
or
into
ja
fs
stos
xchg
loopne
mov
dec
shl
mov
jmp
push
stos
mov
repnz
shlb
jg
dec
mov
inc
sub
fisubl
xor
outsl
pop
push
sbb
dec
inc
daa
sbb
icebp
adc
mov
push
adc
inc
add
out
sbb
shlb
scas
jmp
push
pop
jno
mov
push
sti
aam
or
out
outsl
mov
push
fsubrs
clc
cltd
add
rcll
jmp
lcall
jmp
xchg
xor
rcll
mov
mov
fiadds
mov
pusha
je
xor
mov
pop
sub
adc
xor
inc
jnp
rcrl
or
mov
scas
cmpsb
addr16
push
nop
sbb
jb
jbe
push
jl
in
mov
outsb
fs
into
and
jnp
add
ja
and
int3
xchg
mov
pushf
pop
pop
jno
xor
int3
lret
inc
xor
sbb
mov
popa
sub
cld
sbb
xchg
dec
insl
mov
out
jmp
or
adc
jno
dec
std
cmpsl
xor
and
or
mov
ljmp
xchg
les
aam
xor
mov
cmp
jle
mov
sbb
outsb
pop
fwait
pop
pop
rep
sub
mov
mov
pop
sub
sub
pop
lods
test
adc
mov
icebp
mov
mov
push
fidivrs
mov
sub
into
cltd
out
popa
push
mov
xchg
xor
xor
cmp
sbb
clc
movsl
jb
mov
adc
mul
imul
loope
pusha
aaa
adc
rorb
das
push
or
mov
push
sbb
jg
adc
mov
repnz
fwait
xchg
lods
xor
pop
fsincos
sbbl
aaa
push
mov
out
leave
mov
xchg
in
imul
in
push
lods
in
cld
cmp
fisttps
lods
ss
jge
and
mov
outsb
mov
cmc
fstpt
inc
je
inc
je
enter
sbb
loope
xorb
lods
cmp
or
add
xor
push
popa
mov
push
dec
cwtl
dec
sub
pop
daa
push
aad
mov
fldenv
iret
rorl
jo
mov
adc
push
loopne
pop
sub
aas
stos
sub
jl
shl
les
cmpsl
cmpsl
xchg
sbb
icebp
pop
jae
ret
sahf
rol
pusha
call
pop
and
mov
xchg
loopne
mov
pusha
pop
sarl
xlat
shrb
add
pusha
lret
fcmovu
mov
sbb
mov
cmp
add
test
inc
or
push
xchg
or
mov
std
pop
dec
lock
inc
shll
das
jo
dec
adc
cmpsl
xchg
fwait
div
push
ret
cmp
lcall
addr16
pop
mov
xchg
mov
mov
pop
jnp
pop
jmp
sbb
pop
notl
sub
movsb
cmp
mov
adc
mov
inc
pop
fdiv
incb
pop
scas
test
pop
mov
divb
fldl
cs
test
ds
repz
and
push
int
jmp
idivb
and
and
and
jmp
mov
test
scas
clc
sub
sbb
cwtl
sub
leave
pushf
and
inc
push
add
sbb
popa
xchg
fwait
lock
ficomps
add
xor
popa
sbb
daa
out
cmc
movsb
out
test
lret
xor
lret
std
je
lea
int3
adc
call
jnp
cmp
in
aaa
leave
xchg
fcoms
xor
xor
jns
xlat
test
jne
push
push
aad
mov
sub
add
mov
ds
negl
dec
pop
rolb
sbb
fcompl
ret
jae
push
mov
ljmp
addb
jp
test
or
xor
jbe
dec
push
call
mov
int3
lret
icebp
idivb
and
cmp
icebp
push
xchg
inc
xor
iret
int
jle
cs
dec
popf
mov
or
imul
movl
scas
ret
cli
sbbl
push
out
mov
jbe
fstpt
xchg
pop
lret
dec
xchg
jae
cmp
or
cmp
enter
cld
push
out
fistl
xor
fistl
sbb
inc
adc
cmpsl
jb
cmp
stos
and
lock
push
popf
call
popa
push
and
xchg
iret
mov
mov
repz
aas
pop
imul
js
sub
repz
pushf
pop
sbbb
cmpsl
fs
lret
inc
cld
jmp
pushf
push
push
ret
sbb
pop
cmp
and
mov
mov
jb
jbe
push
jl
xor
dec
push
xor
adc
xchg
pop
adc
stc
dec
adc
in
jb
push
push
sub
cli
gs
mov
roll
pop
lcall
mov
jne
xchg
cld
and
fadd
fisttpl
or
lods
xor
xlat
loope
dec
cmp
jb
addb
jno
inc
push
mov
loope
mov
sub
fstl
ficoms
inc
cmp
sub
sbb
jge
dec
cmp
aam
pusha
inc
jmp
mov
fwait
rol
icebp
or
test
push
je
push
mov
add
add
dec
addr16
xor
adc
in
add
je
mov
jns
jge
gs
dec
cmpsb
mov
pusha
les
mov
cmpsb
or
and
inc
push
mov
push
sub
mov
and
shlb
mov
add
or
push
loopne
jae
insl
inc
push
dec
mov
es
push
mov
add
les
mov
fimuls
cmp
out
sbb
paddsb
xor
pop
inc
push
loope
repnz
pop
clc
dec
jp
add
aaa
pop
and
repz
dec
jecxz
fldenv
aad
out
and
cmp
or
enter
jae
cmp
in
inc
stc
xor
push
ret
rorb
mov
xchg
dec
xchg
lret
mov
mov
sbb
dec
inc
inc
gs
aas
loopne
sbb
sbb
mov
mov
xor
imul
rep
pushf
or
loopne
nop
dec
sti
imul
add
jp
mov
and
sahf
test
add
mov
ds
aaa
call
sub
pop
inc
pop
mov
ss
dec
pop
pusha
js
xor
imul
or
shlb
xor
lock
lcall
cli
jnp
jo
jne
hlt
adc
call
pop
jl
test
sub
pop
movsb
xor
popf
push
and
xchg
ljmp
xchg
in
movsb
sub
pop
clc
xchg
dec
cli
cmpsl
clc
mov
movsl
stc
iret
fadds
and
jo
dec
xor
pop
push
xchg
outsl
je
int3
jg
je
xchg
lds
push
orb
outsb
iret
lcall
and
popa
mov
mov
jnp
push
movb
xor
cvtdq2ps
bound
sub
mov
test
sbb
int3
add
cmc
repz
dec
mov
dec
cmpsb
adc
clc
ret
movsb
cmpsl
sub
cmp
cmp
gs
out
fs
mov
addl
rcrb
cmp
sbb
icebp
sbb
inc
outsl
addb
jo
mov
pop
enter
insb
xor
pop
cmpsl
or
pop
jnp
test
sti
push
loopne
frstor
and
sbb
pop
rolb
push
mov
hlt
pop
outsb
sbb
sti
into
test
pop
sub
pop
mov
sub
fildl
test
and
xor
mov
cmp
lcall
fstpl
cmp
xchg
add
lods
cltd
lret
test
ds
jo
adc
fmul
mov
or
xor
aaa
push
icebp
inc
dec
cli
lods
neg
mov
xlat
out
outsl
int
push
pop
jl
sub
int
fwait
les
pop
movsb
xchg
push
adc
incb
test
out
and
dec
leave
aas
inc
lods
xor
sub
xor
xchg
push
movsb
repz
int
fadds
repz
push
adc
dec
movsb
lock
iret
lock
xchg
xchg
in
push
add
mov
shrb
outsl
or
adc
mov
fcompl
push
enter
data16
add
push
sub
dec
shrb
jle
mov
out
rcll
lret
subb
outsl
sbb
mov
adc
pop
pop
aam
cmp
sub
adc
out
inc
mov
or
loopne
aaa
pop
stos
push
pop
mov
ficomps
pop
dec
push
add
or
pushf
mov
out
push
pop
sub
sub
dec
xor
fldt
repnz
xchg
sub
add
mov
inc
cmpsl
pop
pop
ret
movsb
jmp
push
dec
jecxz
dec
lret
data16
cmp
out
scas
subl
xchg
sahf
mov
jl
add
shll
pop
mov
int3
andl
push
or
in
jg
repz
scas
stc
pop
pop
call
jno
aaa
arpl
aas
ss
lods
jno
cmp
pop
push
jnp
jne
push
and
cli
xor
add
pop
or
xchg
cli
inc
test
xchg
and
xchg
roll
xchg
jl
pusha
add
ljmp
mov
aaa
out
int
mov
lcall
push
fidivrs
dec
aas
hlt
sbb
insb
mov
mov
cmp
hlt
adc
cwtl
bnd
or
negb
jg
adc
aas
sbb
decl
lock
daa
je
iret
lret
shll
xorb
sbb
dec
dec
add
jge
mov
xor
out
mov
sahf
pop
mov
add
add
push
fs
xchg
xchg
test
push
pop
pop
dec
loop
mov
decl
mov
add
into
mov
popa
in
pop
cmp
inc
daa
mov
gs
iret
jl
inc
je
push
roll
fcomps
adc
mov
popa
in
es
shlb
repnz
loopne
mov
add
adc
dec
lea
lock
lock
int
dec
out
jg
mov
aas
pop
in
shl
push
jmp
pusha
jae
add
xchg
or
sbb
test
add
push
jbe
jno
scas
push
xor
mov
aas
rcrb
jmp
jb
ret
test
ljmp
inc
test
xchg
pop
adc
push
add
dec
push
mov
aad
int3
push
and
cltd
clc
lahf
sahf
and
popa
or
push
es
sub
sbb
rcrb
mov
aaa
pop
pop
pop
adc
jecxz
xchg
add
mov
scas
mov
jae
daa
xchg
and
and
es
xor
cmpsb
mov
and
cmpl
push
cmp
jg
enter
sub
sub
cmpl
sub
add
jge
add
inc
flds
notb
int
sti
push
ja
dec
cltd
push
mov
adc
dec
out
add
dec
xchg
adc
arpl
sbbl
jb
mov
jbe
repnz
sahf
ss
sti
bound
outsb
push
mov
mov
test
cmp
jecxz
mov
hlt
iret
mov
out
dec
xor
jge
fisubrl
fisubs
orl
sbb
sbb
or
push
jbe
and
inc
in
inc
lods
addr16
loope
icebp
push
sbb
sub
std
push
cli
mov
icebp
cmc
lock
shlb
mov
cmp
and
add
sahf
shlb
jl
jecxz
or
pushl
or
sub
iret
mov
pop
push
stos
and
push
cmc
repz
push
in
insl
dec
or
fstpt
pushf
push
test
jno
imul
xor
movsb
adc
pop
push
js
pushf
xchg
lahf
pop
test
push
icebp
aaa
fwait
mov
testl
les
push
jns
test
out
call
mov
mov
mov
adc
mov
leave
js
sti
mov
mov
fisubrl
out
je
adc
ds
add
xor
sahf
js
pop
adc
fnstcw
mov
fldt
push
push
dec
loope
mov
jno
loope
ret
adcb
inc
jo
lds
sub
sbb
loopne
mov
cmp
lcall
dec
leave
pop
or
pop
iret
arpl
sbb
pop
mov
cwtl
and
hlt
adc
mov
daa
hlt
push
push
push
aad
adc
fists
faddl
cs
rclb
pextrw
rolb
dec
jmp
jecxz
test
xchg
xchg
mov
and
pop
and
sub
fstps
ffreep
or
and
push
loopne
popa
aas
lret
or
ss
cmp
pop
loop
movsl
jbe
rol
mov
aam
push
in
jp
inc
lcall
push
daa
lret
pushf
sub
ljmp
and
jno
pop
pop
mov
fildl
fldenv
inc
and
loope
in
lods
dec
pop
test
xor
xor
push
xchg
int3
shl
ja
cmc
rcrl
loop
pop
push
adc
rolb
and
ret
add
adc
loopne
xchg
aas
aas
cltd
stc
push
je
outsl
movsl
sbb
test
xor
mov
push
mov
or
repz
xor
jmp
inc
dec
and
cmpsl
inc
xor
mov
mov
aaa
pusha
push
or
out
outsl
pop
icebp
addr16
ret
lock
pop
adc
cmp
fldcw
jbe
lcall
imul
or
enter
push
in
jno
add
mov
inc
imulb
pop
mov
sub
ficomps
cs
pop
lods
dec
aad
jecxz
xor
fisubl
cmp
inc
push
jne
mov
xchg
dec
int3
ljmp
cld
aaa
cs
andl
inc
clc
push
jg
out
stos
loopne
stos
mov
cmpsb
ret
and
stos
loopne
dec
int3
sar
aaa
test
and
popf
cmp
movsl
adc
cmp
rolb
jns
mov
add
fsin
lock
dec
inc
test
in
mov
out
pop
lods
jmp
aad
ja
inc
add
jge
pop
es
aad
stc
add
mov
push
js,pt
es
jecxz
mov
mov
movsb
icebp
inc
mov
lret
rorb
push
mov
pushf
mov
jl
js
dec
shll
outsl
jb
out
mov
lds
sbb
out
scas
in
mov
mov
jae
adc
push
mov
adc
or
inc
adc
faddl
in
adc
mov
outsb
imul
mov
mov
mov
out
ds
mov
scas
inc
xor
sti
jne
sub
push
sub
fdivl
pop
push
mull
pop
mull
inc
test
and
xchg
test
xchg
xor
xor
lock
cmp
sub
gs
mov
cwtl
fucomi
test
ja
adc
ds
jae
pop
test
mov
int3
push
jb
out
addl
mov
or
pusha
sub
arpl
inc
mull
and
mov
inc
inc
fnsave
fs
xchg
adc
xor
leave
pop
mov
popf
adc
mov
xchg
inc
data16
andl
mov
cmpsl
ret
mov
push
push
inc
outsb
repnz
fs
mov
dec
push
lea
mov
jmp
fnsave
jo
mov
pop
enter
mov
cmpsl
outsl
xchg
add
mov
outsb
mov
jge
fsub
jmp
cli
ljmp
fwait
mov
scas
adc
mov
inc
jns
mov
popf
jns
es
pop
mov
xchg
and
push
sub
mov
jl
jne
fstpt
xor
mov
in
jnp
cmp
add
dec
push
inc
movsl
jle
ja
mov
jecxz
addr16
mov
or
xchg
pop
aam
pop
lret
mov
in
xor
fidivrl
mov
push
xlat
test
popa
inc
js
inc
mov
addr16
in
jne
mov
movsb
leave
xor
adc
insl
fs
daa
push
ficoml
cwtl
in
xor
cmc
cmpsl
icebp
sbb
sarb
adc
pusha
jge
into
in
imul
mov
mov
dec
rcrl
inc
dec
adc
lcall
dec
out
sbb
xchg
dec
lea
mov
cmpsb
and
lret
out
nop
hlt
ja
inc
adc
jle
mov
frstor
jmp
xor
add
test
sub
lret
mov
je
outsb
int
add
and
pop
jge
and
test
movsb
jne
xor
jb
add
test
adc
insl
cmp
or
shrb
sub
sti
jno
in
jge
or
test
outsb
inc
cs
xor
pop
xchg
inc
jo
out
movsl
adc
mov
mov
std
dec
mov
mov
xlat
mov
insl
cmp
lea
in
scas
mov
loop
mov
loopne
mov
dec
ja
mov
fldenv
mov
or
add
mov
mov
aas
insl
in
das
xorl
out
je
xchg
iret
in
cmc
scas
lds
xor
dec
gs
jne
inc
pop
push
shld
mov
test
xchg
iret
in
cmc
scas
lds
xor
dec
gs
jne
inc
pop
push
shld
mov
test
xchg
iret
in
cmc
scas
lds
xor
dec
gs
jno
inc
pop
fs
sub
in
cmc
scas
inc
lahf
push
fidivrl
lds
mov
sarb
cltd
inc
mov
pusha
test
push
xchg
inc
jmp
icebp
cmp
sub
imul
test
xor
and
cmp
sub
jns
imul
pusha
test
xor
and
rcrb
shrb
pop
test
pop
jmp
push
and
inc
stc
cmp
xor
fwait
arpl
es
cli
adc
push
lcall
pushf
rclb
out
sub
add
leave
cmove
or
imulb
dec
jg
mov
mov
jg
add
xchg
mov
mov
sbb
cmpsb
inc
jne
hlt
in
xchg
adc
pushf
push
lods
mov
adc
sub
shl
and
shl
div
decl
lods
jo
shrl
lods
pop
mov
movsb
clc
push
or
xor
mov
mov
or
pop
xor
rolb
pop
in
lock
enter
out
das
sbb
or
in
sbbb
jns
xchg
setns
jo
pusha
test
xor
and
rcrb
rorb
cmp
sub
jns
das
and
add
sbb
cs
ja
inc
popf
mov
push
pop
in
int3
push
fisttpll
aam
pmaddwd
in
icebp
sub
jne
mov
scas
pop
movl
cmp
fnstsw
sbb
cmp
adc
inc
rcll
add
xor
and
rcrb
rorb
cmp
sub
jns
imul
pusha
test
xor
and
rcrb
rorb
cmp
sub
jns
imul
xor
sub
dec
inc
scas
aam
or
xchg
cmp
and
in
dec
fstps
mov
ret
es
call
xlat
ret
ds
xchg
mov
push
xlat
test
push
ret
repnz
inc
add
mov
pop
daa
mov
dec
xchg
out
cmp
and
mov
lods
and
push
stos
imul
xor
nop
or
fidivrl
lea
popf
adc
mov
icebp
adc
sbb
sahf
ss
enter
pop
arpl
push
cmp
jae
push
pop
xor
pop
and
dec
push
mov
inc
adc
push
clc
sahf
push
loopne
dec
ret
mov
fistpll
or
int3
fs
clc
in
cltd
cs
push
pop
bound
data16
xor
and
test
inc
clc
fistpl
rcl
jae
leave
or
ds
mov
push
dec
loopne
push
fmull
in
clc
xchg
iret
stos
add
mov
mov
ljmp
loopne
push
inc
add
nop
loopne
and
ljmp
scas
cwtl
sub
out
fstps
aam
stos
fcoms
xor
loopne
sub
cmpl
sbb
iret
mov
insl
pop
inc
push
push
lret
into
stos
push
repnz
gs
test
push
cmpsb
insl
xchg
xor
adc
push
dec
test
jns
xor
icebp
cmpl
inc
push
xlat
cmp
dec
lods
gs
pop
daa
stc
mov
ss
adc
and
sbb
xchg
inc
xor
in
add
pop
add
scas
mov
push
sbb
daa
xchg
cmp
stos
jecxz
test
xchg
pop
mov
icebp
data16
frstor
lods
aam
inc
inc
sbb
outsb
movsb
add
rcl
sbb
into
es
aam
cwtl
jns
pop
dec
fwait
pusha
lcall
pop
rorb
fsubs
xor
les
lods
daa
adcl
int3
add
scas
nop
fidivrl
xchg
mov
sbbb
shr
push
cmp
insl
loop
adc
xchg
fcmovbe
mov
cmp
mov
push
xchg
or
jnp
or
jecxz
inc
xor
push
mov
adc
mov
xor
fsts
adc
push
xchg
push
cmp
fnstsw
adc
ja,pt
dec
and
aam
mov
enter
stc
test
jb
gs
xchg
push
mov
mov
mov
or
mov
mov
mov
mov
cmp
in
sbb
mov
loopne
jle
movsl
aas
daa
jne
ss
pmulhuw
mov
jb
jae
mov
aaa
and
enter
jb
aas
cld
pop
jb
jle
dec
and
es
push
lret
sub
mov
clc
pop
jmp
fwait
inc
and
stc
mov
jle
pop
mov
fisubrs
fistpl
mov
mov
inc
jb
mov
xchg
mov
std
xchg
repnz
mov
mov
and
imul
jnp
push
mov
out
and
imul
pusha
leave
test
push
repnz
cmp
enter
inc
xchg
aaa
in
out
xchg
add
adc
add
push
sbb
enter
mov
lods
add
jmp
ljmp
in
or
in
add
inc
and
outsb
rcll
push
jns
xor
pop
jle
out
xchg
or
out
cli
cwtl
dec
adc
ss
adc
lds
divb
cs
ja
jmp
mov
add
mov
push
or
pusha
fstps
addl
test
jl
ss
pusha
jl
cmp
xchg
mov
mov
or
jmp
sub
mov
push
lds
loope
push
test
jnp
jle
addr16
pop
dec
and
mov
jnp
bnd
inc
add
inc
enter
mov
stos
data16
jl
inc
stc
lahf
jnp
sub
fimull
movsl
push
pusha
pop
in
imul
sbb
push
int3
sbb
mov
ljmp
fsubl
or
lods
or
add
xlat
arpl
flds
pop
in
test
pop
pop
push
pushf
add
inc
fistps
push
dec
adc
pop
sbb
mov
pop
sarb
push
push
jmp
pusha
out
pop
pop
fadds
es
cmp
stc
push
sbb
pop
adc
cmp
push
shrb
pop
data16
and
inc
aas
jecxz
dec
adc
add
test
in
aam
aas
cmpsb
popa
inc
xchg
mov
int
mov
add
dec
mov
bound
cmp
lea
adc
cmp
xlat
testb
scas
push
popf
sbb
js
and
lahf
imul
mov
mov
stc
mov
mov
fwait
add
adc
pop
mov
loope
mov
cmp
xor
dec
mov
ficompl
or
test
mov
or
cmp
jecxz
push
ret
xchg
movsb
add
test
xchg
aam
mov
mov
loop
gs
xor
pop
mov
jmp
sbb
jle
xchg
test
jno
jl
sub
les
cmp
pop
repz
jge
in
push
or
mov
inc
push
push
pop
ret
push
pusha
adc
inc
into
pop
pop
xor
push
mov
fcom
push
sbbb
repz
mov
aaa
fildll
sahf
frstor
mov
filds
aaa
inc
lahf
inc
inc
inc
lret
push
int3
mov
sbb
xor
xlat
shrb
xchg
pop
adc
push
jmp
jge
not
stos
movsl
sahf
shrb
nop
cs
xchg
xchg
mov
ret
and
cli
pop
lock
adc
inc
pop
dec
movsb
call
mov
cmpsb
aam
sbb
mov
xchg
or
dec
pop
shll
pop
sbb
xchg
sub
or
leave
test
movsl
int
push
push
jae
mov
lcall
xorb
negl
cmpsl
xchg
fs
ficompl
repnz
jae
fsubrp
ja
push
sarl
pusha
jo
xchg
jo
mov
scas
je
inc
mov
sub
push
pop
adc
xor
jo
and
pushf
lea
cmp
or
aaa
xchg
jns
push
je
fstl
outsl
cmp
mov
sbb
jo
push
lret
sub
mov
roll
loope
in
adc
push
xchg
roll
xchg
ljmp
jg
sbb
or
inc
cmp
adc
in
mov
hlt
xor
push
mov
dec
fildl
sbb
shlb
loopne
out
popa
mov
and
and
ss
push
std
stos
icebp
fistpll
popa
jae
and
dec
cmp
lret
push
lea
es
add
lods
cmp
mov
bnd
pop
in
adc
sub
ja
mov
cli
dec
ljmp
outsl
mov
cmc
lds
xchg
imul
sub
dec
mov
push
inc
out
sub
push
scas
call
mov
pusha
out
test
sub
xchg
sub
or
mov
aam
pop
insb
dec
lcall
xchg
mov
mov
bound
out
addr16
pushf
addl
int
inc
pop
cld
jmp
xchg
or
add
sub
int
jbe
mov
push
rorl
mov
movsl
push
out
jno
jns
add
mov
sbb
fnstcw
leave
call
cmpsb
sbb
pop
adc
cmpsl
loopne
mov
in
mov
and
lcall
movsb
lret
cs
pushf
loopne
jns
outsb
sbb
inc
dec
movl
aad
mov
cmp
inc
iret
out
dec
cmp
adc
aad
lock
cwtl
cltd
in
popa
and
pop
pop
clc
sbb
cmpsb
jg
pop
push
insl
push
sti
mov
pop
xor
push
movsb
jb
fdivrs
mov
push
dec
pusha
jns
adc
fildl
add
popa
test
adc
jne
cmp
test
mov
lods
out
push
and
lods
push
xchg
jmp
int
lahf
call
lcall
pop
dec
add
idivl
aas
arpl
dec
lea
aas
jecxz
push
lds
arpl
popa
mov
loope
jmp
or
outsb
lock
lahf
xlat
pop
movsl
jb
je
mov
shlb
mov
push
fsubrl
jae
cmp
and
sar
mov
notb
dec
cmp
ss
jnp
pusha
lret
and
xlat
std
cmp
iret
xchg
xchg
movsb
rorl
ds
aam
mov
mov
mov
sbb
mov
popf
sar
mov
cmp
add
or
insb
sbb
xlat
dec
in
movsl
cli
adc
mov
lock
xchg
mov
sbb
xchg
add
outsl
mov
dec
int3
repz
ds
inc
orb
adc
cmp
or
ds
mov
and
and
mov
in
in
loope
lcall
fsub
movsl
scas
mov
addr16
jecxz
pop
cmp
shrb
bndstx
pusha
inc
and
sub
into
mov
sub
or
jecxz
aaa
fisttps
movsb
pop
xchg
or
adc
xor
iret
in
rcrl
inc
inc
mov
xchg
mov
jge
push
mov
dec
cmp
xchg
ljmp
orl
dec
pushl
shrb
insb
mov
mov
std
jp
sub
jecxz
add
cmp
nop
or
and
ret
ret
dec
insb
pusha
and
xor
cmp
sub
dec
in
jmp
cmpsb
int
es
or
sti
and
fdivs
sbb
jne
inc
sbb
inc
xor
xchg
sub
sub
cmp
pop
out
js
bound
mov
cmpsb
push
ret
inc
outsb
dec
andb
fstpl
mov
add
lds
sbb
mov
insl
dec
sti
loop
dec
outsb
in
dec
mov
lds
xchg
add
lds
lods
test
jbe
cmc
daa
push
sub
jne
add
jo
and
out
in
mov
mov
xchg
sbb
jo
mov
rclb
jnp
and
pop
mov
pop
outsl
popf
jle
inc
mov
push
inc
mov
add
xor
pop
cld
pop
lcall
adc
xchg
cmp
sbb
out
cmp
lea
arpl
lret
inc
mov
inc
lods
and
sub
pop
cmpsb
xchg
shll
fdiv
or
push
lods
mov
or
std
inc
leave
int3
jle
div
or
mov
and
ret
addb
or
test
dec
sub
mov
mov
les
int3
jecxz
std
and
outsb
or
push
or
test
lret
out
shr
in
push
pop
mov
out
test
idiv
or
iret
jecxz
fisttpll
dec
push
mov
daa
xor
pusha
mov
int3
push
ret
xlat
or
les
mov
adc
mov
xchg
sbb
add
cmc
push
test
gs
shr
sbb
pop
cli
pushf
pop
movsb
daa
sub
pop
scas
mov
jno
xor
mov
jge
add
cmp
ds
jmp
mov
iret
int
cmc
pop
int3
sub
outsl
jmp
and
nop
push
scas
cmpsb
cmp
pop
xchg
pop
bnd
test
mov
xor
pop
inc
rclb
gs
cmp
cmp
repnz
mov
out
jae
xchg
in
xchg
imul
mov
xor
jne
push
jl
and
jo
les
mov
into
dec
push
pop
sub
dec
pop
cmc
jle
data16
adc
push
pop
mov
jno
movsb
mov
jns
cmp
je
and
adc
cmp
lret
xor
or
dec
repnz
inc
in
imul
dec
data16
pusha
lds
outsl
ss
outsl
ss
je
int
clc
in
out
mov
jae
sbb
dec
fcoms
add
sub
es
adc
jg
ja
jae
ret
xor
imul
cli
mov
push
clc
dec
inc
rcrl
mov
ror
nop
sbb
pop
push
xchg
mov
cmp
pusha
pop
bound
adc
movsb
fsubrs
gs
cmp
loope
inc
cmp
adc
xchg
push
ret
xchg
pop
je
test
xchg
xchg
popf
fists
dec
jae
adc
fwait
pop
sbb
xor
push
icebp
and
mov
call
popa
std
jle
pop
and
push
xor
icebp
fcmovne
and
imul
or
cmc
sub
mov
imul
mov
push
movsb
or
shl
push
xchg
mov
ss
sub
je
sub
out
ds
jno
mov
das
jae
loopne
push
inc
xchg
dec
fmull
and
aaa
test
jb
sbb
jns
fwait
int3
clc
test
inc
xchg
pop
mov
xchg
sub
mov
xchg
xchg
outsl
std
xchg
outsb
iret
dec
daa
imul
jo
jno
mov
mov
and
out
shlb
out
sub
hlt
xor
cmp
xor
jg
cmpsl
mov
add
push
jp
xor
addr16
in
jmp
sub
sbb
rcr
pusha
inc
lds
add
or
sbb
into
sub
push
add
clc
mov
push
aas
xor
mov
jnp
mov
fwait
push
xor
xor
and
sbbb
xchg
les
shrl
ljmp
adc
loopne
lahf
lock
xchg
pop
cmp
outsl
and
aam
fbld
xor
mov
les
rorb
or
pop
fwait
mov
sub
dec
cmp
pop
jno
popf
jp
mov
xor
aas
js
into
aaa
pop
push
dec
xor
sti
sarb
cmp
sub
pop
push
push
js
loopne
fisubs
mov
add
mov
ror
jnp
and
stos
out
fs
push
inc
or
lahf
sub
aad
in
gs
incb
xchg
push
mov
insb
cmp
add
and
add
add
scas
adc
hlt
insb
sbb
push
xor
shll
aad
iret
gs
loopne
inc
call
addr16
add
add
and
cli
mov
aam
cmp
pop
mov
push
aaa
cmp
ret
mov
imul
push
mov
test
pop
pop
loopne,pn
mov
pop
pop
outsb
push
mov
fidivs
insb
decl
and
stos
faddl
xor
cmp
mov
cmp
shr
scas
mov
sub
xchg
gs
test
stos
ror
movsb
cmpsb
mov
nop
std
or
cmp
mov
sub
fimull
aam
inc
xor
dec
adc
out
mov
jl
jge
std
xchg
sahf
xor
into
mull
xor
and
pop
in
lret
mov
add
out
das
add
cmc
scas
adc
cli
lea
pusha
loop
pop
push
pop
cld
icebp
xchg
scas
sub
lods
sbb
pusha
xorb
sbb
cmpsb
pop
jbe
add
das
dec
pop
mov
cmpsl
out
ja
push
xor
sbb
stos
push
mov
shlb
jmp
sub
mov
push
sbb
std
ja
xor
pop
int3
dec
jb
lcall
ret
pop
xor
loope
out
stc
out
outsb
pop
dec
mov
loope
nop
lods
jl
fnstcw
fldt
lret
in
add
adc
loop
mov
sub
es
pop
sub
pop
insl
sub
push
stc
mov
bound
mov
add
scas
xor
sbb
fildl
insl
stos
cmpsb
jo
cli
xor
cmpsb
loope
in
jnp
mov
and
gs
mov
test
push
push
lock
pop
adc
int3
push
and
mov
mov
mov
dec
jne
leave
lcall
mov
sbb
jecxz
repnz
mov
in
mov
cmp
movsb
addl
pop
xchg
xor
push
jb
ror
outsl
lcall
cltd
sub
adc
jns
inc
mov
fiaddl
add
ret
fdiv
push
icebp
cmp
lock
fdivl
fildl
cmpl
sahf
pushf
divl
jmp
cwtl
andb
cld
popa
popa
lds
xchg
or
cmp
sbbb
xor
lret
mov
pop
fst
push
sbb
add
pop
fdivrl
mov
cmpsb
pop
pop
push
outsb
push
pop
mov
mov
sub
dec
xor
cmp
cld
mov
xor
sti
fldcw
fistpll
test
das
dec
adc
gs
sbb
or
pusha
push
in
or
into
xchg
in
cli
outsb
jne
or
cmc
or
fisttpll
jecxz
lcall
push
fdivrs
shll
cs
ljmp
das
mov
or
xor
xor
ret
mov
lret
int3
fidivrs
fldcw
fs
bound
sub
cmp
dec
js
out
pop
xchg
lods
mov
or
xchg
stc
mov
and
ljmp
outsl
xchg
cmpsl
push
lcall
mov
lret
mov
xchg
xchg
inc
idiv
andl
cltd
sbb
push
ljmp
sahf
mov
or
mov
xor
aaa
clc
mov
call
das
jne
lods
fldcw
mov
mov
xchg
ljmp
fldt
fcompl
shlb
mov
adc
js
jbe
dec
cmp
cld
outsb
sbb
shrb
shr
ret
add
aad
aad
pop
into
mov
sbb
out
rcrl
inc
outsl
mov
fs
sub
out
jecxz
push
pop
lods
cmp
mov
fincstp
jl
jo
mov
mov
scas
xor
loopne
vmovq
adc
xor
pop
xor
daa
sub
adc
ja
sub
cmp
cmp
shll
sbb
insb
call
nop
sub
inc
lods
imul
jbe
int
sbb
mov
aam
cmp
mov
nop
adc
sbb
roll
cmp
and
mov
mov
dec
and
loop
mov
imul
clc
and
cmp
lock
arpl
ljmp
int3
sub
mov
cmp
pop
dec
cmp
and
cmp
or
loopne
aad
out
push
shll
hlt
or
push
cld
sbb
leave
mov
cmpsl
int3
xchg
jg
xor
repz
mov
roll
mov
mov
daa
cmp
test
adc
lods
mov
pop
idivb
adc
jne
pop
dec
pop
shll
fldl
js
sub
push
push
sahf
inc
jae
popf
stos
js
out
hlt
notl
and
xchg
aas
dec
cmp
loopne,pt
test
mov
int3
pop
inc
cmc
push
fdiv
or
fwait
pop
push
js
cmc
in
int
jg
xor
mov
mov
xchg
js
mov
jns
mov
lcall
stc
sub
adcb
jg
push
nop
lock
ss
das
lods
data16
js
jne
addr16
push
pop
or
jg
sbb
jle
jp
or
mov
xchg
jecxz
outsb
gs
shlb
xchg
inc
cmc
das
sub
dec
stos
xchg
add
inc
inc
dec
and
sub
add
arpl
into
xor
movsb
pusha
cmp
lock
mov
push
or
sub
mov
call
mov
push
push
mov
adc
jl
cmc
and
loope
xlat
jbe
cwtl
cltd
aad
data16
mov
xor
lds
out
in
imul
data16
xchg
xchg
je
cli
push
jl
xor
les
sahf
daa
mov
fbstp
mov
arpl
inc
hlt
idivl
xchg
js
test
lret
cmc
sbb
pop
cwtl
int
in
sub
pop
xchg
mov
xor
testl
test
sar
cli
stc
add
mov
or
aad
ficoml
in
dec
in
jne
stos
icebp
pop
push
scas
nop
mov
sti
push
mov
cmp
sub
xchg
cwtl
mov
and
ljmp
jle
dec
or
sub
add
xchg
lock
test
scas
lcall
xor
stos
clc
sarb
dec
popf
incb
adc
push
test
jbe
xor
sub
mov
xor
sti
mov
js
mov
idivb
jne
dec
lcall
mov
xchg
cmp
imul
lds
sahf
ret
push
xlat
and
testl
pop
filds
loope
push
shll
rcl
fadds
push
mov
cmpsl
mov
mov
mov
add
xor
and
rcrb
rorb
cmp
sub
jns
imul
pusha
test
xor
and
rcrb
rorb
cmp
sub
jns
imul
pusha
test
xor
and
rcrb
rorb
cmp
sub
jns
imul
pusha
test
xor
and
rcrb
shlb
rorl
mov
xchg
aas
add
out
push
filds
cmp
dec
into
data16
mov
pop
ret
aas
mov
jmp
push
filds
xor
add
mov
pop
ret
push
das
xchg
pop
orb
insl
loop
aam
test
and
cli
xchg
repnz
mov
inc
in
icebp
rdpmc
incl
push
stos
xor
and
addl
sarl
popf
dec
punpckhwd
out
xlat
pop
mov
jle
xor
jae
mov
xchg
jbe
pop
aas
sub
ds
adc
jb
push
mov
cmp
add
repnz
ret
das
das
popa
pop
aaa
aas
sbb
das
iret
pop
ja
mov
add
xorb
aas
mov
pop
imul
lahf
pop
lods
mov
ljmp
mov
sub
insb
mov
lock
bound
into
out
mov
jae
jg
pop
shll
mov
mov
bound
push
pop
lds
mov
mov
test
rclb
mov
popa
add
sub
pop
lret
push
rolb
arpl
xchg
cmp
fistl
pop
out
lds
mov
mov
pop
rolb
jle
jno
lret
cmp
outsl
arpl
jle
add
add
lahf
add
rcrb
dec
mov
mov
jmp
push
filds
xor
add
rcrb
dec
mov
mov
jmp
jecxz
es
mov
les
cmp
aas
std
mov
mov
and
bound
mov
sub
pop
and
arpl
enter
scas
call
adc
inc
shr
push
shl
jns
add
cmp
mov
das
pop
out
lock
leave
mov
adc
aas
les
incl
mov
ret
mov
inc
mov
mov
xchg
imul
mov
ss
loop
loopne
xor
adc
scas
xor
lcall
idivl
jne
in
fwait
cmp
mov
sub
xchg
scas
pop
push
clc
xchg
sarl
jg
stos
adc
mov
dec
scas
push
daa
mov
pusha
mov
push
push
xor
js
addr16
or
jecxz
mov
mov
sarb
xchg
or
loope
mov
inc
sub
inc
dec
jp
imul
enter
sar
lea
dec
xor
cld
jmp
mov
mov
ja
outsb
mov
call
adc
jo
mov
mov
jmp
insl
stos
or
shll
dec
jmp
fdivp
stc
in
nop
and
inc
mov
stos
mov
cs
adc
or
jp
mov
or
jg
sbb
cld
push
jno
add
push
mov
jbe
leave
push
push
vcmpss
sbb
xchg
xchg
fxch
push
aad
xor
arpl
daa
sbb
mov
pop
pop
aas
iret
adc
sbb
pop
ja
imul
jg
jo
imul
scas
lods
add
pop
shrb
pop
cmp
xchg
mov
fsubl
and
xchg
rorl
scas
ja
and
iret
lds
movsb
lea
add
leave
gs
jg
jge
jg
cmp
mov
imul
rolb
jns
jnp
xchg
mov
lods
inc
sarl
repnz
dec
or
leave
dec
push
pop
push
cmp
dec
inc
jo
repz
in
shl
push
out
clc
pushf
sub
gs
mov
xor
ljmp
pop
idivb
dec
jnp
cltd
loopne
jecxz
mov
pop
and
add
sub
xor
jecxz
jae
icebp
mov
add
mov
cmp
sbb
aas
push
inc
jle
test
inc
push
out
sahf
adc
jle
mov
psubusb
fwait
pop
or
xorl
adc
push
dec
lock
mov
mov
mov
std
int
rolb
push
jmp
dec
push
fbstp
mov
pop
adc
sub
sub
mov
adcl
mov
call
add
xchg
push
call
xor
aad
clc
arpl
adc
cmp
sub
mov
pop
jae
mov
cwtl
mov
jl
daa
mov
repz
stos
movzwl
lock
in
loopne
add
ror
subl
int3
fstps
into
stos
mov
dec
insl
stc
or
int
lahf
subl
jg
lock
mov
movq
int3
test
mov
push
mov
pop
loope
lds
mov
xor
mov
dec
mov
jecxz
call
push
test
out
fs
mov
adc
into
repnz
in
pop
pop
adc
into
stos
mov
add
stos
hlt
mov
jno
inc
adc
inc
cltd
stos
ds
add
adc
lcall
xchg
dec
xchg
mov
xor
xchg
mov
inc
std
popa
push
popa
out
fsubl
fmul
sbb
inc
cwtl
adc
xchg
mov
sub
mov
jp
lcall
xchg
pop
jmp
push
xchg
jge
push
cmp
loopne
mov
fidivs
test
fcomps
or
jb
pusha
sbb
jl
lcall
popa
pop
and
scas
mov
loope
or
xor
sarb
cli
mov
mov
ficoms
adc
jne
fdivrl
mov
jno
push
ret
into
dec
sub
push
jae
cli
rclb
pusha
xor
or
push
mov
push
sub
add
inc
pop
andl
loop
dec
push
movsl
inc
dec
js
dec
add
or
dec
pop
pop
jg
dec
test
cmp
test
lods
push
aaa
adc
test
sti
aad
and
js
iret
jp
loop
or
hlt
shl
xor
stc
add
xchg
and
ret
hlt
mov
mov
sti
les
jno
jle
jo
pop
mulb
xchg
and
adc
mov
into
cmp
mov
ror
mov
adc
cmpsl
hlt
sub
ret
fidivrl
push
cmp
loopne
cmp
subb
lcall
mov
lcall
test
ret
push
sti
add
adc
xchg
test
or
cmp
sub
into
adc
inc
popa
jmp
push
jnp
pop
cltd
faddl
cmpsl
inc
in
lret
mov
xchg
jae
mov
aaa
mov
call
pop
lahf
or
xchg
into
adc
sarl
push
hlt
imul
stc
sbbb
aad
sbb
or
rep
das
pop
je
mov
sub
jae
out
mov
aam
aaa
mov
cmpsb
inc
cmpsb
mov
lds
popa
fs
add
jo
jle
and
mov
pop
mov
mov
scas
mov
out
icebp
add
adc
icebp
mov
adc
movsb
sub
imul
push
adcb
movl
pop
rolb
cmp
jmp
scas
mov
jecxz
add
fstps
scas
imul
mov
push
jecxz
popf
mov
inc
mov
fsts
mov
in
inc
sub
xor
jbe
das
push
movsl
imul
lret
test
mov
roll
in
sub
push
pop
inc
loop
pop
fstl
repnz
inc
cmc
push
sbb
ret
jae
rclb
jg
testl
adc
adcb
jl
push
inc
sbb
adc
stc
sbb
xchg
cmc
sbb
sub
scas
hlt
mov
test
pop
or
sbb
mov
movsb
mov
pop
add
mov
les
clc
and
sbb
and
jge
icebp
dec
gs
and
adc
sub
cmp
stos
push
fs
inc
lahf
fwait
xor
movsb
mov
mov
push
cli
inc
push
sub
push
jecxz
shl
gs
cmp
je
push
or
cltd
jp
mov
in
shrb
cmp
jle
pop
cwtl
pop
in
pop
movsl
inc
fnstenv
sub
inc
loop
shlb
mov
jne
and
or
mov
cld
push
popf
push
adc
lods
test
jbe
sahf
cs
mov
sub
jne
lods
mull
fidivrl
shrl
xor
lea
pop
mov
or
cli
jnp
push
repz
loopne
mov
mov
push
test
pop
pusha
or
inc
inc
pop
mov
push
pop
and
mov
movsl
sub
jnp
shll
cmp
push
repnz
push
adcb
int3
sbb
sbb
sahf
mov
repnz
dec
add
push
and
mov
lock
push
sub
lods
bound
cmovo
mov
mov
mov
push
ljmp
cmpsl
in
xor
stc
and
pop
pop
mov
and
xchg
divl
jle
sbb
and
dec
mov
xchg
xchg
cmp
mov
mov
jge
je
sub
addr16
or
jg
icebp
cwtl
add
mov
ja
xchg
xchg
pop
insb
xor
xor
inc
movsl
xchg
cmpsb
mov
dec
pop
cmpsb
sub
xchg
lods
mov
pop
push
clc
cmc
int
push
fstl
dec
shrd
mov
jo
mov
add
test
fwait
icebp
int
into
clc
sbb
je
sub
sbb
sbb
cmp
push
icebp
jb
or
ret
adcl
xlat
and
in
cmp
nop
movsb
pushf
jne
in
cmp
jmp
push
adc
repz
fisubrl
add
push
jle
jbe
jg
xchg
sbb
or
sbb
sub
xlat
or
pop
pop
pop
ret
out
clc
int3
aas
xlat
outsb
sbb
xor
test
test
inc
shrl
cld
rcrl
adc
add
pop
or
mov
pop
mov
pop
pop
push
iret
fstpt
pop
mov
mov
pop
push
dec
imul
sbbb
adc
stos
fsubrl
or
mov
push
cmp
aam
ret
mov
sub
repnz
bound
mov
ds
lock
lahf
and
loop
rcl
repz
mov
mov
sti
arpl
es
cmp
jb
scas
loopne
jns
repz
add
push
inc
and
dec
jb
cmpsl
ficomps
dec
jp
aad
pop
jmp
test
fwait
push
aaa
scas
xchg
flds
jnp
and
in
or
stos
cld
cs
jbe
daa
repz
mov
and
sbb
and
cltd
pop
outsb
imul
dec
enter
xchg
jne
arpl
sub
adc
filds
xor
xchg
pop
mov
xor
sti
pop
sbb
jmp
jo
pop
push
cltd
loopne
out
leave
sub
jmp
jecxz
sbb
or
stos
dec
insb
pop
xor
sbb
sbb
and
test
fcmovb
xor
addl
int
jo
lret
sbb
cmpsl
dec
clc
xor
add
mov
dec
jge
inc
xor
jo
xchg
or
add
mov
frstor
daa
fcoml
fld
test
popf
call
dec
pop
shll
push
imul
pop
out
sub
out
pop
pop
sbb
clc
inc
adc
xchg
iret
push
lret
sbb
inc
xchg
out
mov
lea
mov
fnsave
pop
mov
jne
sbb
jne
pushl
popf
adc
jecxz
mov
xchg
jno
xor
inc
js
aas
jl
sbbb
or
mov
mov
inc
jl
inc
neg
mov
or
in
sub
mov
out
or
and
test
jge
fsubs
hlt
mull
xchg
sahf
and
mov
lock
insb
xchg
xor
mov
shrb
dec
jns
mov
loop
push
xor
loop
pop
inc
pop
fldl
out
mov
cmp
dec
cmp
popf
xchg
pop
adc
adc
xchg
gs
call
dec
mov
repz
pop
in
xor
pop
xor
cmp
mov
push
aam
sbb
pop
mov
in
das
push
jmp
push
xorb
fists
lcall
jl
fdiv
or
pop
xor
mov
rcl
pushl
xchg
fdivrs
pop
daa
mov
inc
nop
inc
xor
inc
sub
sbb
add
xchg
pop
dec
mov
push
arpl
mov
inc
andb
popa
rclb
xchg
dec
pop
mov
and
adc
or
pop
mov
lret
pop
xor
adc
unpckhps
mov
insb
les
or
repz
fs
mov
xorl
pop
aam
ss
or
mov
testb
nop
imul
xorb
xlat
cmp
sbb
cmp
add
cmc
cmp
or
sbb
ret
push
imul
sbb
outsb
mov
adc
push
test
call
mov
mov
imul
shr
xor
shlb
or
and
mov
sbb
fistps
inc
mov
adc
cmp
sbb
or
sbb
dec
pop
xchg
cmp
mov
mov
push
fcomps
and
xor
jnp
shll
repnz
jge
push
sub
scas
xchg
xchg
cmc
ds
stos
mov
mov
das
mov
fdiv
xchg
adc
call
jl
daa
leave
roll
jp
das
cld
sbb
jns
cs
loop
push
sub
into
xor
adc
adc
dec
xchg
push
mov
mov
inc
jge
pop
and
or
and
aas
in
inc
inc
sbb
or
jl
arpl
pop
ljmp
test
adc
aas
dec
adc
out
fimuls
mov
insl
sub
xchg
rorl
mov
mov
sub
or
dec
mov
rorb
insb
xor
mov
mov
hlt
test
in
popf
jae
dec
dec
mov
mov
stos
xchg
mov
mov
insl
push
stos
mov
dec
fnstsw
inc
jne
inc
pop
aam
jbe
ficoml
sub
cld
cli
xchg
shl
pop
rcl
aad
jne
xchg
out
outsb
add
or
or
push
push
push
jg
movsb
rcr
fdiv
sub
sahf
in
xchg
out
add
adc
fnstsw
aam
sbb
xchg
arpl
sbb
invd
int
popa
es
mov
xlat
leave
hlt
lcall
into
xor
addr16
sbb
ret
cltd
jecxz
inc
ror
add
mov
and
push
sub
addl
stc
mov
adc
inc
lods
sarl
lret
dec
dec
pop
movsb
jbe
test
push
pop
mov
mulb
push
ljmp
fwait
popf
dec
sbb
jmp
daa
rcrb
pop
mov
movsb
jnp
mov
or
pop
leave
repz
xchg
dec
mov
and
inc
lods
out
jmp
adc
hlt
les
mov
in
pop
mov
sti
gs
dec
ss
mov
movl
mov
pop
cwtl
cmp
xchg
mov
pop
inc
or
mov
xchg
adc
fwait
inc
sub
iret
add
in
cmc
cmpsb
repz
mov
sbb
cmp
adc
or
sahf
scas
xchg
pop
call
arpl
arpl
sbb
jnp
mov
pushf
mov
repnz
or
cmp
adc
inc
enter
cwtl
bound
dec
dec
pop
xchg
cmp
push
jmp
xor
outsl
xor
or
push
dec
aad
inc
dec
and
dec
ds
clc
mov
add
in
pop
pusha
ficomps
inc
lea
rcl
jno
lods
sub
mov
stc
dec
insl
daa
adc
xchg
hlt
pop
imul
push
ret
push
adc
mov
aad
lahf
push
insb
jbe
in
int3
andb
jl
xor
ljmp
fimuls
rcll
dec
pop
int3
inc
rcl
pop
loop
jbe
fprem1
dec
sbb
sub
xlat
cmp
ja
out
sub
cmp
insl
adc
cmp
dec
add
sbb
gs
pop
das
mov
and
imul
cmp
add
fsincos
fsubs
fistpll
fcomip
hlt
js
inc
xlat
sub
test
mov
cs
xchg
sbb
popa
nop
mov
dec
pop
loopne
cli
push
sub
xchg
ss
mov
roll
daa
jl
inc
out
mov
roll
mov
imul
adc
add
or
popf
in
and
dec
lret
mov
push
add
xchg
shrb
mov
inc
mov
je
lret
jno
mov
dec
adc
mov
out
or
ret
mov
lcall
dec
data16
xchg
add
fwait
cmpsl
pop
in
or
dec
shrl
mov
pushf
pslld
dec
mov
xorl
dec
out
jno
sub
sub
xor
aaa
int3
clc
inc
dec
ret
mov
je
dec
sub
jo
iret
adc
iret
or
cmc
jle
imulb
das
adc
popa
ror
or
xchg
push
les
jo
push
jecxz
mov
xor
adcb
dec
ds
cmp
out
popa
negb
negl
roll
int
movsb
pushf
loopne,pn
mov
or
int3
sti
das
pop
adc
ret
xchg
mov
xchg
lds
roll
add
dec
jmp
adc
sub
cmp
subb
and
ds
add
int3
push
faddl
nop
push
pop
mov
sub
lea
sbb
data16
fs
sub
in
mov
outsb
xchg
sbb
push
movsl
sarb
movsl
push
shl
jmp
mov
hlt
pusha
aaa
mov
daa
fdivl
jle
lea
pusha
mov
out
push
sbb
lock
stos
mov
sbb
xchg
jge
subb
insl
mov
add
mov
cmpsb
adcb
pushf
lahf
js
sarl
call
shll
sbb
ss
xlat
inc
lea
add
cs
adc
movsb
pop
mov
push
pop
mov
mov
dec
mov
repnz
sub
repnz
mov
imul
in
xor
mov
jecxz
sti
in
mov
daa
mov
push
adc
mov
insb
ja
mov
cmpsl
scas
mov
mov
xchg
addr16
inc
repz
cmp
std
stc
ret
push
add
pop
in
pop
mov
inc
cs
stos
mov
pop
or
mov
lea
push
lods
into
fdivrl
sti
lods
cmpsl
scas
test
fildll
ja
sub
orb
inc
mov
inc
fnstsw
xacquire
or
ja
jecxz
pop
cmp
loop
rcrb
xchg
jle
or
xchg
xor
imul
hlt
out
dec
add
cmp
out
sub
ljmp
rcrb
pop
cmp
pop
adcl
sbb
mov
and
shlb
mov
mov
pop
mov
iret
pop
out
cld
sub
movsb
or
sahf
push
cli
gs
repz
es
or
pusha
and
ljmp
rcll
mov
repz
out
sub
and
in
pop
xchg
xchg
jno,pn
xor
inc
scas
adc
inc
xor
jae
pushf
push
mov
mov
mov
push
xor
jb
and
add
mov
mov
addl
adc
lahf
jne
sti
shll
or
cmp
sahf
and
daa
dec
cmp
loope
addb
das
ja
mov
mov
jno
adc
leave
inc
repz
jnp
pop
outsl
lods
shll
mov
into
and
inc
clc
and
das
imul
clc
mov
divl
nop
mov
fnstenv
sub
xchg
lret
push
test
mov
outsb
xchg
test
enter
icebp
testb
loopne
push
cmp
in
pop
rorb
and
and
pusha
xorb
jp
fst
xor
push
std
inc
inc
sbb
mov
enter
dec
mov
mov
jecxz
test
sub
idivb
test
lods
loopne
or
mov
ss
aad
or
lods
repnz
icebp
cmc
or
pop
jb
push
add
inc
xor
xchg
jno
push
dec
rolb
das
ss
xor
ret
jb
fnsave
ja
rcrl
pop
inc
std
xchg
and
and
cmp
mov
stos
je
sub
addl
lods
xchg
xor
inc
cmc
stos
scas
iret
pop
and
sub
sub
mov
jne
mov
icebp
dec
xchg
push
xor
rcr
inc
mov
sub
pop
out
push
mov
cmp
pusha
scas
js
inc
dec
test
lret
adc
xor
ret
imul
test
shr
divb
xchg
add
jae
das
addr16
xchg
outsl
mov
dec
pop
sbb
dec
pop
dec
dec
pop
sbb
imul
push
into
shll
sub
add
mov
imulb
rcrl
repz
inc
movsl
mov
lcall
cwtl
fwait
sub
pop
pop
inc
pop
adc
adc
clc
lcall
pop
repnz
sahf
xchg
adc
pop
mov
ret
cmpb
arpl
push
mov
cmp
sbb
sti
cs
cwtl
pusha
mov
push
or
pop
fucomip
push
addb
negl
pop
dec
in
bound
imul
add
dec
mov
push
adc
push
outsl
lods
xchg
cmp
cltd
pop
and
insl
fmuls
scas
out
xchg
int3
dec
mov
adc
in
hlt
dec
int
mov
stos
sub
xor
jecxz
mov
sbb
dec
push
and
dec
repnz
mov
push
xchg
xlat
test
cli
mov
call
aas
pushf
or
inc
mov
fcmovnb
sarl
add
out
sub
cwtl
add
push
mov
inc
cmp
sbb
sahf
sub
xchg
xchg
mov
jne
adc
lods
mov
lret
cmp
lcall
inc
add
mov
iret
xor
add
rcrb
dec
mov
mov
jmp
push
filds
xor
add
rcrb
dec
mov
mov
jmp
inc
cmpsl
inc
iret
xor
add
fistpl
dec
mov
mov
punpckhdq
dec
out
fcmovu
push
xor
orb
pop
ret
mov
shrb
jge
push
pop
xlat
in
dec
fldenv
adc
enter
test
mov
pop
push
pop
xlat
sub
sbb
enter
push
pop
cwtl
pop
push
pop
xlat
sub
sbb
movsb
aaa
fcoms
jne
push
std
notb
aaa
out
orl
cmp
popa
mov
add
and
sbb
in
and
out
mov
cmpsl
sub
pop
cmp
mov
lahf
adc
inc
daa
push
push
out
mov
cmp
jo
dec
xor
cmp
addb
cmpsl
lods
mov
inc
sbb
in
clc
cwtl
push
push
pop
ret
sub
gs
jge
ss
clc
addr16
lods
ss
jp
or
cmpsl
cmp
js
roll
scas
jbe
mov
inc
jb
push
cltd
inc
xchg
bound
mov
test
mov
inc
lock
clc
fdivs
pop
movsb
out
testl
cmp
call
inc
fcoms
daa
mov
push
sub
xor
insb
loop
out
or
cmp
test
jb
cmpsb
sbb
subb
jge
jo
dec
xchg
lea
test
cmp
jb
jns
mov
andl
xor
fs
cmp
call
inc
fcoms
daa
mov
pop
push
pop
xlat
sub
sbb
enter
test
mov
pop
push
xor
cmp
lahf
jle
mov
sbb
adc
leave
gs
notb
mov
mov
rcrl
push
and
orb
dec
inc
scas
xchg
lret
jp
outsl
and
xchg
lea
cmp
or
mov
mov
outsl
and
push
paddsb
arpl
sti
push
loop
sbb
bound
into
movsl
cmovg
notw
les
push
mov
andb
fwait
pop
jmp
cmpsb
mov
outsl
jg
jg
cs
mov
dec
mov
xchg
xor
mov
add
int
sbb
adc
sub
cmpsb
xchg
jmp
iret
push
push
enter
xor
jo
fisubs
add
sub
mov
dec
fsubl
inc
xchg
fisttpll
mov
dec
addr16
inc
in
pop
sbb
add
pop
and
cmpsl
sub
enter
mov
in
sbb
loope
jmp
sbb
add
push
mov
in
lock
insb
inc
testb
fmul
test
inc
mov
popa
lea
addb
lret
xchg
test
mov
jl
dec
jl
mov
scas
sub
aas
mov
pop
shll
dec
jo
push
dec
pop
inc
xchg
rcll
dec
push
pop
movsl
xor
dec
sub
and
sub
jl
hlt
imul
fstl
shlb
or
scas
lods
jmp
jp
sub
adc
ret
sarb
fnstcw
test
add
pop
xlat
int3
dec
sahf
je
stc
push
bsr
cmp
daa
fnstcw
jnp
push
inc
mov
mov
mov
xlat
imull
rolb
jle
sbb
and
xchg
mov
int3
dec
push
push
pop
cmpsb
lds
push
inc
stos
xchg
mov
pop
mov
sbb
sbb
in
inc
jb
mov
and
incb
mov
pop
fs
jnp
subb
cmc
iret
fs
mov
cmp
sbb
outsl
pop
cmc
insl
pop
arpl
stos
stos
into
xor
fwait
cmc
push
sahf
add
add
sbbb
ror
push
inc
subl
sub
inc
cmc
hlt
push
jnp
fisubs
stos
jae
cmp
das
fisubs
cmp
scas
dec
lcall
popa
test
pop
mov
subl
popf
cmp
xchg
xlat
stc
cwtl
fwait
and
jl
inc
in
shr
jno
sbb
push
push
nop/reserved
push
adc
push
std
jmp
pop
cmp
sbb
lret
add
sahf
dec
or
push
xchg
clc
addr16
cmpsl
fs
adc
sahf
call
ss
inc
fwait
sub
fwait
pop
rol
out
addl
and
aas
pop
xor
test
fstp
pop
mov
mov
loope
rcrb
mov
rolb
xchg
fs
push
or
and
ja
mov
adc
loopne
pop
cli
inc
add
cmp
dec
stos
pop
jmp
jno
jo
dec
xor
mov
or
push
into
aad
xor
fbld
sahf
jb
adc
stos
bound
movsl
rclb
daa
mov
lcall
xor
fisubrs
loope
imulb
adc
lea
xchg
mov
jp
movsl
scas
and
or
and
lods
inc
data16
shl
sbb
insl
pop
add
xlat
loope
loop
push
movsb
repnz
mov
addl
jmp
sbb
nop
ss
push
rcrl
popa
cmp
imul
loope
mov
aas
dec
xchg
ljmp
xchg
xchg
test
pop
mov
mov
push
dec
mov
mov
or
dec
xchg
int
xchg
jmp
jl
sub
cli
lret
test
fnstenv
push
popa
add
mov
cwtl
bound
mov
and
push
mov
xchg
and
cmp
mov
cld
repz
popa
daa
inc
lods
mov
je
jmp
lret
xchg
rcll
lret
into
push
or
cmc
and
sub
xor
iret
hlt
pop
sbb
mov
xchg
push
aam
lret
lret
push
ret
xchg
into
add
fildl
ficoml
push
push
movsb
adc
jle
nop
cld
loopne
cmc
inc
xor
call
push
sub
sahf
nop
or
xorl
hlt
nop
or
shl
mov
nop
sbb
pop
icebp
push
sub
std
popa
stc
push
xor
enter
sbb
dec
lods
enter
and
je
faddl
sarl
or
adc
ja
push
stos
pop
xlat
pusha
sub
loopne
cmp
cli
xchg
dec
jnp
or
hlt
jne
sti
fildl
mov
mov
lods
jg
aad
andl
sti
scas
lahf
mov
cmpsb
mov
inc
sar
lock
xor
xor
jecxz
mov
dec
sbb
enter
push
rolb
les
dec
pop
leave
push
pop
cmp
push
and
popa
js
pop
pop
stc
pop
in
bnd
inc
loopne
sbb
add
sub
xchg
imul
movsb
add
mov
lods
daa
mov
aam
xor
popf
cmp
mov
cmpsl
ret
inc
cmp
je
and
fdivrl
int3
pop
inc
jmp
jne
cmp
out
cmpsb
mov
pop
pop
and
out
or
stos
push
xchg
mov
or
cmc
mov
les
mov
out
xchg
xchg
inc
add
or
pop
mov
adc
mov
mov
jno
mov
adc
mov
add
sbb
shll
cmp
pushf
cmp
pop
sub
sahf
pop
adc
jmp
fs
jo
std
clc
inc
mov
popa
dec
imulb
test
mov
jg
jne
or
test
xchg
lods
ja
jns
pusha
sub
movsb
in
leave
mov
mov
push
add
jo
sbb
bound
sbbb
adc
and
adc
jo
test
mov
mov
je
add
jl
fnstcw
out
add
pop
xor
std
inc
inc
pushf
and
loope
leave
sahf
sahf
jno
inc
test
and
daa
jg
sarb
dec
insb
push
and
lcall
stos
xchg
cmpb
cmpsl
or
test
shl
cmpsl
das
jmp
icebp
xchg
stc
movsl
xor
lock
int3
dec
fildl
shl
insb
sub
imul
ret
cmp
xchg
or
jo
in
outsl
shl
aam
cmpsb
mov
cli
stos
sar
mov
mov
mov
jecxz
mov
les
push
mov
pop
jle
dec
push
std
fmull
stos
jmp
pop
xchg
xor
mov
or
test
test
test
nop
cmp
lret
mov
ja
lock
adc
pushf
hlt
sar
dec
sub
cmp
xlat
loop
movnti
cltd
jecxz
fldl
addr16
hlt
ret
movlps
add
inc
js
push
in
adc
lret
ret
fisttps
mov
dec
cmp
test
popa
jnp
add
scas
scas
mov
or
add
cmp
or
in
lock
lds
scas
imul
dec
in
dec
pusha
jne
mov
and
mov
cmp
bnd
fsub
cltd
outsl
sub
insb
jecxz
test
dec
jl
xchg
lock
stos
les
repnz
das
sub
xor
push
jg
aas
xor
add
pop
cmc
push
gs
pop
mov
adc
dec
or
mov
cmp
adc
popa
dec
fdivrl
push
cmp
clc
pop
testl
repnz
in
repz
or
sub
xor
cwtl
or
lock
into
addr16
sbb
xor
in
push
push
js
mov
adc
mov
and
cmp
add
cmp
mov
sub
or
aad
push
out
imulb
inc
cmp
loope
push
dec
mov
cmp
nop
and
fadds
cmc
clc
adc
push
or
mov
repnz
movsl
and
bnd
insb
fiadds
or
cmp
jae
mov
mov
outsb
ja
sbb
pop
jae
lods
mov
movsb
dec
mov
loopne
add
stos
cmp
in
andl
xchg
cmp
sbb
popf
out
sub
out
fldl
lret
pop
js
xchg
aad
addr16
inc
pusha
sbb
dec
mov
mov
adcl
xlat
xor
mov
push
imul
pop
mov
imul
push
sbb
lret
sbb
cmp
mov
iret
xor
int3
push
add
sbb
iret
dec
push
cmp
out
negl
scas
mov
mov
xor
andb
cmpsb
mov
lods
adc
and
pop
cmpsb
mov
sub
inc
sbb
dec
add
dec
ja
pop
push
add
cmpl
xchg
adc
mov
xor
cmp
mov
add
ljmp
cmp
std
fcmovnb
dec
push
pop
mov
xchg
call
jb,pn
push
inc
pop
inc
and
mov
lds
mov
ljmp
cmpb
and
sarl
out
test
insl
mov
xchg
cli
bound
mov
movzwl
insb
dec
rcrb
sbb
aad
lahf
xchg
mov
mov
pop
adc
push
stos
adcb
hlt
cltd
push
movsl
fmuls
or
shll
pop
cli
addr16
call
sbb
movsl
add
jns
nop
das
std
sbb
xor
ds
mov
orb
loope
jo
cmp
xor
insb
and
int
push
inc
adc
sahf
mov
sub
test
sub
ss
xchg
push
gs
nop
add
push
cmp
jbe
add
clc
or
or
mov
or
nop
pusha
inc
ret
xor
pop
adc
pushf
mov
xlat
nop
adc
in
xchg
and
mov
orl
cmp
cld
cmp
aas
cmp
jnp
icebp
arpl
lock
incb
enter
std
mov
mov
aaa
into
dec
and
pusha
push
addl
add
and
lds
sbb
mov
cmp
loopne
stc
dec
jmp
push
jle
enter
pop
or
ljmp
push
stc
fcompl
inc
fbld
and
idiv
int3
xor
inc
daa
adc
out
and
mov
cmp
andl
in
push
inc
push
iret
jbe
hlt
rcrb
push
and
repz
rcll
sub
insl
into
add
lods
adc
mov
aaa
jg
stos
add
mov
jecxz
out
xchg
jmp
leave
out
scas
mov
scas
xchg
lods
fldenvs
dec
xchg
mov
mov
dec
outsl
shll
lcall
daa
xor
fsubrl
and
push
out
mov
push
mov
or
movb
sub
std
jne
push
push
stos
sub
inc
mov
mov
push
push
lods
pop
sbb
in
xchg
sbb
cltd
popa
frstor
imul
mov
subl
jo
dec
ja
push
xor
popf
jge
xchg
push
add
mov
shr
rol
out
mov
push
and
xor
lods
in
icebp
jo
pop
xor
or
push
sub
inc
cmc
pop
nop
cmpsb
lret
int
add
incb
and
movsb
cmp
popf
sbb
idivb
arpl
adc
sti
out
sbb
and
sbb
fsubrs
aaa
inc
cmc
jnp
or
xlat
fucomi
mov
inc
inc
test
mov
xchg
pop
xor
imul
sbb
sub
sub
pop
mov
mov
xchg
sbb
jno
pop
inc
jo
jae
addb
inc
pop
and
adc
hlt
mov
mov
or
je
cltd
ret
and
jo
movsl
pop
jns
out
or
sub
adc
sub
negb
mov
push
cmp
sarl
sbb
pop
es
push
pop
mov
mov
or
lret
xor
xchg
shl
movsb
pop
cmp
inc
fildll
push
sbb
cld
or
adc
repnz
or
cmp
repz
out
xchg
aad
imul
mov
cmpsl
push
aaa
xchg
in
rolb
shlb
addr16
dec
adc
das
jne
arpl
sbb
dec
sub
dec
cmpsb
jle
sbb
das
movsl
orl
pop
dec
pop
xor
jbe
fsubrl
lcall
fwait
cmp
ret
aad
jmp
inc
add
jle
icebp
dec
ret
inc
aas
cmc
adc
fs
lea
ds
aam
lcall
and
in
scas
mov
mov
jno
insb
dec
jb
lret
sub
movsl
shll
out
push
cs
test
push
je
push
mov
pusha
mov
hlt
push
jecxz
pop
test
fsub
mov
loope
sub
movsl
xchg
or
outsb
mov
out
push
mov
jmp
mov
or
or
xlat
repnz
fsubp
fldcw
out
adc
cs
js
lret
pop
jp
sbb
loopne
pusha
scas
icebp
test
push
jne
dec
rclb
add
push
inc
sbbb
cmpl
loope
imul
mov
ret
ret
sub
xor
add
push
push
aad
test
int
jbe
dec
mov
mov
mov
sub
push
sbb
add
stc
pop
cmp
jb
scas
mov
loope
lds
in
jnp
add
and
in
adc
and
jnp
ret
int3
pop
dec
adc
jbe
fcomps
divl
faddl
shlb
shrl
lea
ret
pushf
dec
loopne
stos
and
sahf
push
fsubrs
inc
fcomip
fs
lds
jnp
mov
aam
sub
imul
jnp
xchg
inc
mov
dec
inc
push
in
int
movsb
or
daa
or
sub
mov
cwtl
fsts
imul
call
pop
mov
adc
add
jae
daa
xchg
cmc
xor
cmp
roll
or
sbb
fidivl
or
js
add
mov
sbb
pop
lock
jno
mov
or
popa
jmp
mov
fstpl
hlt
or
mov
outsl
ljmp
in
rcr
push
lds
roll
imul
jmp
ss
fists
rcll
mov
add
mov
and
jo
sub
pop
mov
push
cli
cmp
sbb
out
fs
bound
sbb
mov
xchg
int3
aas
ja
cli
add
xchg
rorl
or
cmp
add
addr16
adc
inc
inc
mov
decl
mov
adc
shlb
adc
ficomps
mov
scas
rcr
mov
pop
pop
je
leave
and
inc
cmc
cld
fnsave
xor
lcall
push
lods
cmpsb
sub
dec
lds
add
push
xlat
sbb
and
cmp
das
je
jle
negl
xchg
arpl
idivb
loopne
or
inc
xchg
notb
inc
orb
negb
rolb
shrb
stos
pop
fldt
sub
pop
das
jo
icebp
test
add
int3
cmp
cs
xchg
dec
or
les
dec
lds
test
ret
push
cli
data16
sbb
in
adcb
setl
subl
mov
add
dec
lcall
mov
push
xchg
shrb
imull
fmuls
outsl
and
lcall
cmp
das
mov
or
loope
ret
lahf
es
and
add
fldenv
mov
jb
mov
xchg
xchg
lods
nop
or
add
cmp
ja
cmp
adc
cmpsb
add
in
int3
cmp
shl
push
and
lods
or
jbe
or
pop
jne
lahf
dec
repz
outsb
fldcw
sub
cs
aas
aas
and
mov
outsb
shll
jo
cmp
daa
pop
lods
das
out
adc
cld
movsl
jle
loop
test
xchg
and
das
mov
repnz
push
movsl
fwait
adc
outsl
dec
jae
cmp
jno
push
imulb
add
mov
dec
push
dec
imul
mov
scas
sub
and
call
xchg
mov
daa
and
adc
test
mov
jne
in
inc
in
fildl
mov
pop
or
jg
les
roll
repz
bound
fs
xor
lock
ret
test
or
xor
or
or
inc
notb
adc
orb
inc
sub
enter
adc
dec
jb
or
add
push
or
sub
jo
and
push
xor
dec
or
add
dec
adc
inc
fsubs
ds
dec
jo
ret
fdivrl
inc
jne
and
aaa
daa
gs
insb
cmpsl
cmpsb
mov
and
cmp
xchg
ret
sbb
int3
add
loope
sarl
popa
pop
push
shrl
jbe
int
xor
popa
mov
testl
sbb
sub
mov
cld
lcall
mov
das
movsl
mov
aad
add
and
pop
sti
push
sbb
fiadds
fiadds
mov
xchg
mov
sub
sahf
pop
mov
cmp
sub
jecxz
test
out
das
jne
inc
add
mov
jne
mov
repnz
mov
jo
mov
push
sub
mov
xor
outsl
mov
test
ja
test
dec
aam
rclw
ljmp
subl
push
lahf
adc
mov
dec
mov
mov
xor
loopne
mov
das
push
fs
lea
out
mov
hlt
mov
jbe
pop
cmpsb
lret
cmp
inc
into
xchg
mov
mov
icebp
or
jae
cmpsl
jb
incb
dec
and
roll
test
xor
outsb
addr16
imul
and
loope
int
in
pushf
sarb
cs
into
adc
faddl
jo
es
dec
dec
fisubrs
ficoms
int3
in
ja
mov
jmpw
pushf
hlt
movsl
mov
pop
fisubrs
out
mov
xor
mov
sbb
cltd
pusha
push
scas
jecxz
repnz
outsl
aad
rclb
imul
mov
cmp
push
rorl
imul
sub
orl
cmp
call
push
out
ss
ds
aam
push
adc
gs
testb
xor
jnp
jp
sbb
ret
cmp
stc
lcall
push
adc
inc
scas
xchg
ret
sub
js
pop
outsl
ret
mov
ss
fimull
not
imul
mov
movsl
lcall
pushf
les
mov
cmp
icebp
dec
fidivs
pusha
aad
call
movsb
mov
ds
pop
mov
push
movb
in
xlat
loope
sbb
add
lea
adc
cmpsb
fsub
or
jge
and
testl
sub
fdivrs
ret
scas
push
cwtl
call
push
jns
inc
sub
daa
or
push
scas
xchg
js
and
add
jnp
pop
enter
or
ja
mov
and
xlat
out
cmpsb
jne
popf
mov
xchg
xchg
mov
pop
xchg
repz
xchg
inc
jae
cmp
inc
in
fimull
lahf
jge
lods
movsl
ret
cmc
call
xor
mov
push
cwtl
pop
out
add
loopne
outsl
ja
inc
idiv
aad
rol
into
lahf
xchg
jle
add
inc
imul
scas
mov
arpl
int3
cmp
mov
cmp
adc
testl
pop
and
or
mov
aaa
pusha
mov
mov
gs
scas
pop
pop
and
inc
cmpsb
xor
lret
imul
test
adc
cmp
subb
repz
in
lahf
cmp
int3
into
mov
out
and
and
sbb
in
sar
fcompl
fiaddl
ja
cmp
sbb
jge
xor
adc
cmc
push
pop
xlat
sub
sbb
enter
test
mov
pop
push
pop
xlat
sub
sbb
enter
test
mov
pop
push
pop
test
cmp
call
inc
fcoms
es
pop
push
pop
shrl
cmpsl
cmp
or
sbb
cwtl
clc
frstor
fsubs
fsubrs
call
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
sahf
sbb
and
js
mov
cs
mov
outsb
call
sahf
sbb
dec
ficomps
push
push
clc
cs
mov
outsb
stos
jle
mov
sahf
sbb
dec
ficomps
push
cmp
mov
sub
or
inc
scas
inc
xlat
imul
mov
jl
push
xor
cmp
xchg
cmp
bound
cwtl
push
dec
inc
into
lret
fisubs
mov
xchg
shrb
sbb
das
test
fcomip
push
fwait
lds
and
mov
addr16
aad
in
pop
jle
mov
mov
pop
mov
incb
iret
push
shr
mov
cmc
jne
call
inc
xor
dec
adc
sti
pcmpeqb
iret
mov
fcomp
and
pop
jle
mov
out
dec
inc
shl
push
aad
sbb
pop
cwtl
fidivrs
or
stc
dec
or
cmp
dec
ficomps
push
push
cwtl
cs
mov
outsb
call
std
sbb
inc
clc
push
stos
and
pop
andl
jnp
pop
sarb
test
push
mov
int
decl
add
js
lock
push
leave
xlat
mov
lea
jmp
inc
fistpl
dec
ficomps
push
push
cwtl
cs
mov
outsb
call
sahf
sbb
dec
ficomps
push
push
cwtl
cs
mov
outsb
call
call
lcall
mov
push
adc
push
jge
cmp
push
sahf
iret
ljmp
or
push
sti
sbb
dec
xor
dec
xchg
popf
and
add
cmp
or
ja
pop
inc
inc
dec
clc
adc
mov
mul
lods
xchg
jno
xchg
and
push
xor
cwtl
push
mov
mov
out
in
hlt
adc
mov
pop
ljmp
into
loope
or
mov
ljmp
bound
out
or
ss
inc
add
fwait
mov
cmp
sbb
mov
mov
xor
mov
or
push
dec
jne
pop
xchg
mov
xor
add
pushf
inc
mov
mov
in
nop
cwtl
pop
ljmp
adc
xlat
pop
out
rcll
jmp
cs
and
or
sub
test
inc
vmovntps
push
imul
sarb
dec
fistpl
into
push
ror
sub
leave
xor
frndint
test
aas
lret
and
iret
and
mov
sbb
jbe
popa
mov
cmpsl
stos
mov
mov
loopne
push
mov
inc
push
int
aad
mov
ja
ret
xchg
mov
js
stos
aaa
je
add
fidivs
mov
xchg
sahf
data16
and
inc
add
push
pusha
dec
cli
mov
mov
xchg
mov
loopne
jmp
fiadds
mov
enter
test
cwtl
lret
ljmp
mov
or
push
inc
cmpsl
bnd
scas
jno
fidivrs
mov
cmp
or
les
or
sbb
xchg
adc
lcall
mov
rcl
pushf
push
test
les
mov
xlat
pop
mov
sahf
shrl
mov
pop
cmp
cltd
jns
scas
xchg
sub
and
xchg
aas
cmpl
lret
scas
add
repz
or
out
and
rcrb
xchg
pop
call
dec
sub
push
inc
dec
push
cmp
loopne
xlat
fwait
in
mov
aad
mov
les
push
cltd
and
mov
in
rcrl
rorl
dec
fsub
mov
fwait
addr16
or
dec
sub
pop
push
xlat
stos
adc
mov
mov
dec
push
es
jnp
outsl
bnd
push
mov
out
mov
sbb
scas
sub
hlt
xor
fcom
push
aaa
adc
jne
jmp
cmp
ret
sbb
cwtl
pusha
cmc
int
pushf
push
cmp
mov
sahf
dec
aad
outsb
cltd
cmp
mov
pusha
cmc
dec
mov
aaa
jmp
fs
cli
jae
push
into
sub
loope
aas
out
sbbl
js
sub
jne
push
repz
sub
cmpb
dec
xorl
push
jg
movsl
cmpl
xor
outsl
xor
fbstp
stc
jns
and
sub
xchg
cld
inc
pop
sbb
mov
push
fs
inc
jnp
mov
stos
pop
lret
push
or
adc
fldl
mov
rorb
push
in
mov
push
mov
add
rcl
inc
xor
shlb
cmp
sub
add
push
or
adc
mov
insb
ljmp
mov
mov
mov
pop
cmc
lret
pop
bound
and
repnz
lcall
incl
mov
loopnew
loopne
fiaddl
out
jp
inc
cmpsb
stc
jecxz
or
in
fisttpll
clc
push
mov
pusha
lahf
in
lea
xchg
pop
stc
or
ds
fiadds
mov
inc
mov
push
in
mov
lds
jnp
notb
cmp
bound
xor
leave
mov
int3
sub
inc
fcomi
rcll
movsl
add
loopne
addr16
vpshab
mov
push
enter
stos
mov
mov
ja
insl
mov
mov
pushf
dec
add
aam
dec
push
pop
mov
rcrb
bnd
int3
ljmp
loopne
jae
mov
inc
xlat
jp
or
jne
nop
test
adc
mov
pop
jl
xor
insb
mov
movsl
push
scas
adc
iret
movsl
mov
cmpb
loop
mov
shlb
lret
call
test
cwtl
fiadds
pop
mov
pop
sub
cmp
repnz
lods
mov
mov
mov
mov
cwtl
sbb
mov
test
sub
dec
xchg
cmp
xchg
pushf
sub
stc
mov
sub
repz
ljmp
es
ja
addr16
aam
lcall
cwtl
daa
cmpsl
rcrb
mov
les
aaa
push
pop
js
enter
out
push
cld
jp
aas
sub
jo
jmp
sbb
dec
les
push
out
arpl
cmp
jg
pop
sbb
fsubp
icebp
out
rcrl
add
push
mov
popa
ss
adc
and
test
andl
cmp
fcoml
out
data16
adc
mov
test
cmc
test
pusha
les
adc
mov
push
push
pop
movsb
aam
or
das
cmp
or
cmp
cmpsl
jne
clc
cmp
dec
sbb
fdivp
mov
or
lods
out
fistpll
fadds
rcrl
mov
mov
xor
lret
sbb
mov
icebp
in
test
lods
or
jae
fstps
test
inc
xchg
int
int3
and
mov
fsubrl
mov
jle
jo
nop
pop
and
cmpsb
and
inc
mov
mov
sbb
cmpsl
cmp
ret
jecxz
add
stc
addr16
mov
or
cmp
sbb
je
push
fisttpll
xor
repz
mov
sbb
push
scas
imul
cmp
mov
les
loopne
sbb
wbinvd
pop
imul
lock
xor
gs
arpl
jle
or
cltd
inc
mov
add
fldenv
fnstsw
xchg
adc
ljmp
mov
mov
popf
fcomps
push
sub
mov
fadd
shl
lds
rcll
dec
aad
xchg
stc
aas
fcomip
popa
jp
je
nop
inc
xchg
imul
adc
test
adc
sub
cli
and
imul
adc
add
stc
clc
icebp
call
cwtl
jnp
pop
fcmovb
xchg
jecxz
sub
jmp
in
jnp
mov
subb
push
rclb
mov
lcall
mov
cmp
stos
mov
add
test
cmp
jbe
in
fs
sti
cmp
movsb
jns
jne
sti
fsubl
cmp
inc
jno
adc
rol
or
xor
lods
dec
daa
push
push
jb
mov
mov
sub
jle
leave
jb
scas
adc
int
mov
cltd
cmp
mov
dec
aaa
push
out
jmp
mov
sub
mov
jge
and
cmp
cmp
pushf
ds
rcll
mov
mov
fistpl
test
cmp
shufps
xchg
xor
or
shll
aam
ljmp
xor
jcxz
cmp
inc
jmp
add
repnz
push
dec
adc
sbb
outsb
hlt
fistpll
sub
in
inc
or
push
lcall
push
mov
mov
out
mov
mov
leave
lcall
or
sub
rorb
or
sbb
pusha
pop
xor
lods
jge
mov
add
cmp
je
pop
movsb
das
nop
or
xlat
rcrl
rolb
mov
je
fsubs
lock
jns
pop
orb
ljmp
loopne
or
andl
cs
inc
out
mov
fstpl
inc
lcall
nop
push
movsl
movsb
cmpb
or
sub
or
or
sbb
mov
sbb
ficomps
or
add
and
mov
pop
int
or
mov
mov
test
bound
je
lods
mov
inc
and
movl
xor
sub
sbb
pop
mov
inc
push
inc
in
pop
lods
sbb
jnp
cmc
scas
cmp
mov
or
add
ss
leave
inc
das
xlat
jl
aam
out
lcall
cmp
jmp
enter
hlt
adc
ss
js
push
cmp
fldenv
xlat
dec
xchg
cmp
pop
or
aad
dec
push
imul
aaa
lock
adc
cmp
nop
stos
add
jnp
push
or
sbb
push
and
in
pop
iret
movsl
ja
push
lock
in
add
mov
mov
and
in
jne
aaa
mov
bound
pop
add
inc
popf
js
arpl
jo
sub
xchg
inc
in
sbb
xor
shll
fwait
mov
movsb
or
mov
movsb
xlat
fs
mov
xchg
call
push
xchg
hlt
inc
xchg
das
test
push
sbb
dec
cmp
mov
test
addr16
ss
test
jbe
dec
add
adc
mov
jp
test
mov
cli
loopne
cwtl
fstpt
push
aad
mov
lret
dec
aad
jp
fcmovne
jl
ds
sub
xor
out
lcall
lret
inc
jbe
cmp
push
mov
cmpsb
aam
je
jns
idivl
adc
and
jnp
cmp
cmp
mov
push
add
orb
mov
push
out
mov
jg
mov
scas
stc
jg
ja
loopne
out
cmp
sahf
sub
or
mov
jg
xchg
filds
es
jp
inc
xlat
adc
cmpsl
bound
pop
pop
repnz
divb
add
sti
mov
dec
cmp
mov
pop
cltd
xchg
test
lea
pop
xchg
lcall
scas
xor
cmp
add
mov
xchg
repnz
int3
loop
pop
inc
mov
jno
popa
mov
xchg
pop
inc
fcmovne
movl
stc
aam
ja
sub
in
mov
movsl
mov
dec
push
sub
mov
or
add
int
cli
idivl
push
jns
js
lods
fstpl
or
pop
sub
daa
fldenv
pop
pop
fidivs
imul
and
pop
fprem
pusha
cmp
add
pop
jmp
mov
xor
or
xchg
daa
cmp
add
adc
testl
hlt
lods
xlat
notb
stc
mov
and
pusha
sti
addl
icebp
mov
idivl
movnti
icebp
jp
jge
flds
xor
sbb
cmp
lahf
jae
cld
out
jl
pop
dec
loop
xchg
js
stc
inc
and
sbb
or
mov
push
jle
push
call
stc
rolb
inc
cmp
dec
nop
sti
lea
test
sbb
add
stos
sub
jb
sbbl
fistps
adcb
inc
orb
test
xchg
adc
jge
mov
lods
dec
ret
push
das
push
ret
xor
mov
rcll
daa
cmp
adc
int3
mov
mov
ja
jle
out
xor
ss
dec
jns
cmp
fdivrs
in
push
ret
mov
mov
ret
xchg
inc
fidivrs
mov
lahf
jno
lret
jno
js
pusha
mov
xchg
xor
sbb
lds
fisubl
sub
in
xchg
push
mov
orb
mov
ss
or
push
cltd
js
in
iret
das
cwtl
adc
sarb
pop
dec
push
add
rcll
push
add
movsl
scas
pop
and
sub
lea
hlt
jg
dec
test
lods
sti
loopne
stos
mov
addr16
ss
mov
mov
dec
add
jbe
sbbl
jb
sbb
lret
bound
mov
pop
in
mov
daa
mov
xchg
imul
pushf
fisttpll
test
fstpt
stc
adc
xlat
dec
cmc
inc
and
sub
cmp
cmpsb
cwtl
jp
shrl
outsb
add
inc
fistl
sub
out
pop
pop
jp
stos
add
inc
out
mov
xadd
fs
movsl
test
sbb
or
mov
jb
mov
fimuls
leave
mov
pop
mov
pushf
stos
push
or
inc
movsb
push
int
lods
mov
iret
pop
xchg
adc
mov
out
jecxz
pop
mov
stc
dec
loopne
mov
cli
insl
pushf
sub
mov
out
in
or
clc
jg
lahf
std
outsb
and
jl
cld
mov
lock
mov
adc
pop
sbb
cmp
mov
mov
mov
mov
jae
hlt
jl
ret
cmp
mov
mov
and
adc
push
cli
mov
adc
in
loopne
pslld
adc
add
xchg
stos
mov
imulb
add
pop
mov
mov
inc
aad
mov
dec
iret
fstl
mov
out
outsl
fistl
and
aam
fdivp
dec
out
lahf
and
out
test
mov
lods
xchg
jae
aam
add
inc
adc
and
mov
loopne
jmp
inc
js
fidivrs
xor
xor
xchg
clc
dec
add
lods
push
fs
int
pop
aaa
lahf
in
cmp
and
pop
nop
out
cmp
xorl
sbb
scas
sub
jns
dec
pop
and
cmpsb
push
js
mov
sub
mov
and
mov
dec
in
insl
and
cld
adc
lods
inc
pop
push
push
cmp
push
jg
cmp
decl
jns
inc
mov
cwtl
push
cmp
pop
les
sub
lods
push
repz
push
adc
mov
and
iret
adc
push
fisttpll
iret
jge
lods
xchg
dec
gs
stos
dec
mov
cmp
push
dec
mov
lds
inc
ret
sbb
add
or
cmp
stos
sub
mov
push
jmp
mov
add
adc
add
jns
shl
out
int
imul
sub
cmp
cli
xchg
lock
cmp
ja
pop
jmp
out
push
sub
lret
fsub
jnp
scas
add
mov
mov
sbb
or
jle
add
pop
push
push
shlb
push
cmp
and
sub
mov
cmp
loop
nop
fcomps
dec
pop
xchg
call
mov
pusha
ss
jl
and
lahf
xchg
push
cmp
and
lcall
sbb
push
add
push
xchg
add
xor
cmp
out
and
scas
loope
and
loope
in
lods
mov
inc
nop
mov
jg
mov
mov
bound
jo
jp
fists
mov
fdivr
les
cmp
sbb
hlt
in
shrb
in
adc
mov
push
mov
incl
mov
scas
cli
fwait
sub
or
jb
into
mov
call
dec
out
and
jmp
jne
xchg
mov
lahf
dec
cmp
and
popa
xor
pop
fisttps
idivb
jbe
cmpsl
pop
pop
xor
sbb
push
mov
fs
adc
mov
nop
mov
push
mov
push
int
pushf
adc
iret
sbb
shll
stc
cmp
sub
lcall
rorl
dec
lret
jnp
sti
jmp
inc
ret
jl
jnp
mov
ret
imul
ffreep
xor
push
movsl
data16
inc
adc
dec
adc
xor
mov
adc
int
adc
js
lock
je
fcmovnu
fnsave
mov
dec
arpl
sbb
insl
cmp
arpl
scas
push
in
xchg
or
stc
and
xchg
and
mov
imul
xchg
xor
mov
mov
std
aaa
push
fwait
and
or
xchg
push
repz
jg
add
popf
push
push
mov
lea
mov
pop
loop,pt
imul
inc
push
test
in
test
push
cmpsl
pusha
xor
jg
dec
or
test
addr16
xlat
insl
push
jle
rorb
dec
or
movsl
mov
icebp
inc
shll
cmp
dec
inc
push
jno
xor
cli
mov
insb
js
inc
or
pop
jmp
es
add
ljmp
pop
vpcmpgtw
call
pop
dec
dec
jb
adc
xor
xlat
cmp
bound
cs
adc
ret
data16
clc
fistps
lea
push
push
add
pop
fdivl
shrl
test
test
push
push
rclb
pop
hlt
ds
push
pop
cltd
or
idivl
sub
iret
aaa
das
dec
pop
jmp
or
int3
cmpsl
push
mov
enter
push
insl
in
inc
jo
cld
add
jbe
in
pusha
cmc
push
jge
lret
aad
arpl
inc
adc
xchg
mov
fisubrs
lods
fmuls
fnsave
loopne
cwtl
jo
pop
mov
mov
aam
call
dec
or
push
lods
sbb
popa
movsb
mov
pop
lods
mov
jmp
push
cmp
mov
fisubrs
cmp
xchg
jnp
iret
jns
ja
pop
pop
push
xchg
push
mov
movsl
nop
lds
shll
mov
mov
inc
imul
das
add
je,pt
cli
adc
dec
or
enter
stos
jle
fld1
aaa
xchg
sub
adcb
jp
subl
lock
adc
stos
mov
filds
movsb
lret
xor
imul
sub
push
push
mov
jp
push
lcall
lret
das
int
lds
out
sub
pushf
pop
jb
jl
loopne
arpl
mov
xor
cmpsb
in
pop
data16
outsl
xchg
call
in
and
fistl
jno
cmc
pusha
cwtl
cmpl
popa
repz
nop
stc
mov
xchg
fs
cltd
mov
lock
lock
mov
out
sahf
popa
lea
ljmp
mov
xchg
or
jne
imul
mov
rolb
adc
ds
cwtl
sbb
mov
cmpsb
push
sti
imul
push
and
xchg
push
push
sbb
lret
inc
jo
adc
aas
dec
xchg
loopne
outsl
push
push
jnp
add
stos
repz
movsl
pusha
cmpsb
shl
inc
xchg
mov
push
and
divb
cli
xchg
mov
aaa
inc
mull
xor
das
or
cld
mov
add
sub
dec
lcall
cmp
fcomip
outsb
pop
sub
pop
jle
mov
mov
push
dec
xor
sarb
mov
sbb
inc
subb
push
jmp
adcl
mov
xchg
sub
dec
push
mov
mov
imul
dec
push
cmp
mov
les
lods
aam
mov
in
das
adc
or
pop
pushf
in
push
mov
mov
inc
pop
add
push
cmp
iret
add
mov
in
dec
pop
pop
adc
into
push
incb
mov
out
jns
inc
mov
add
clc
lahf
pop
sbb
push
push
xor
out
call
popf
test
inc
push
ja
xchg
enter
xor
jnp
jg
dec
out
or
cmp
fs
push
mov
es
lret
push
icebp
fs
loope
mov
sub
sub
movsl
data16
add
cwtl
imul
pop
cmp
adc
cmp
or
mov
mov
adc
push
divl
jmp
mov
addr16
enter
or
and
xor
loope
test
ja
sub
push
cmp
gs
bound
sti
test
add
xchg
es
adcb
daa
ss
adc
push
stos
mov
lcall
and
pop
movsb
pop
cwtl
outsb
loope
dec
test
adc
addb
or
xchg
cmpsb
inc
in
mov
pop
data16
mov
rcrb
lds
jne
iret
inc
cmpsl
cmc
iret
cli
pop
mov
outsl
mov
imul
shlb
fnstsw
mov
icebp
jae
cmp
aas
xor
cmp
dec
mov
repnz
dec
ficomps
push
push
cwtl
cs
mov
outsb
call
sahf
sbb
dec
ficomps
push
push
cwtl
cs
mov
outsb
call
sahf
cwtl
scas
test
cmp
dec
out
push
push
cwtl
cs
mov
outsl
call
sahf
sbb
dec
ficomps
push
loope
test
daa
xchg
pop
xchg
cli
jge
sub
pop
lret
sbb
dec
cmp
sub
pop
jmp
sub
or
ficompl
dec
mov
sbb
jmp
cmp
or
fcmovb
lret
or
cmp
push
sub
dec
iret
push
jmp
in
mov
ljmp
ss
rclb
lcall
xchg
fwait
sbb
mov
cmp
jno
push
stos
das
sub
mov
mov
inc
adc
lds
les
adc
adc
inc
mov
out
fs
jp
add
movsl
fsubs
aaa
lcall
dec
mov
pop
dec
dec
mov
test
jp
xlat
es
enter
and
data16
add
movsb
repnz
or
cmc
push
xchg
mov
mov
sub
xchg
xchg
popf
sub
cltd
inc
jbe
fisubl
add
sub
bt
shrl
in
sbb
jecxz
cmc
ljmp
cmp
fwait
jp
push
pop
fisttpl
cmp
or
mov
pushf
jecxz
ljmp
cmp
es
pop
incb
pop
in
pop
loopne
aas
cwtl
das
mov
scas
and
lcall
pushf
sbb
jle
push
or
and
lcall
jmp
cmp
or
ficompl
dec
mov
sbb
jmp
cmp
or
popa
and
cmpsl
pusha
pop
push
and
mov
adc
sbb
pop
fwait
adc
rcll
inc
push
mov
stos
jbe
mov
mov
xchg
pop
stos
ret
xchg
call
and
xor
dec
aas
fwait
or
jnp
sahf
fisubs
jecxz
xchg
adc
stos
pusha
pop
lret
shrl
in
cmpsl
sarb
inc
push
add
cmp
pop
jmp
lret
push
inc
jb
shl
daa
movsl
pop
ljmp
fwait
mov
mov
repnz
jns
fdiv
dec
jecxz
xchg
mov
ret
add
je
dec
mov
jbe
mov
testl
ret
or
repz
sbbl
dec
mov
scas
loope
push
pop
out
inc
dec
add
cmp
dec
jae
stos
pop
stos
pop
push
adc
out
pop
inc
sarb
jle
lahf
orb
fdivs
mov
rcll
dec
add
sbb
jmp
faddp
shr
rorl
lcall
xchg
xchg
lret
in
xchg
push
dec
hlt
xchg
cmpsb
pop
jecxz
mov
or
cmpsl
aas
pop
aas
add
cmp
and
or
fwait
push
adc
cs
xor
jg
mov
mov
dec
rolb
daa
mov
dec
insb
incb
dec
mov
je
jle
ror
lods
mov
das
and
hlt
mov
cmp
aad
lods
dec
pop
out
jnp
jle
adc
pop
sti
or
jno
lahf
popf
add
xchg
mov
popf
pop
dec
xchg
fxch
push
mov
jmp
lods
in
mov
movsb
jecxz
sbb
jp
dec
pusha
push
inc
into
test
dec
jmp
sbbl
mov
xor
in
sub
or
out
insb
cltd
pop
mov
ret
mov
loope
push
test
pusha
leave
jb
xchg
ret
cmp
add
mov
inc
loope
inc
adc
jg
inc
dec
mov
fimull
cmp
insl
pop
lcall
movsb
mov
dec
iret
sti
shlb
fisttps
pop
sub
bound
imul
daa
inc
stos
dec
sbb
nop
frstor
lock
sbb
mov
cld
or
jmp
shl
cmp
adc
pop
mov
pop
adc
xchg
mov
loop
and
fsubl
andb
xor
fcmovne
insb
jl
scas
xchg
push
xor
xor
cmpsb
mov
fisubrs
fsubl
shrl
push
dec
xchg
sub
addr16
bound
fcoms
add
mov
xchg
mov
cmp
xor
mov
mov
mov
xchg
dec
xchg
cmp
fmuls
add
jo
mull
lea
das
lods
dec
outsl
or
jne
shr
or
mov
shrl
sub
mov
daa
sub
adc
cmp
bound
out
lahf
cld
pop
push
cmp
ljmp
mov
jmp
arpl
xchg
mov
and
sahf
shrl
out
jb
mov
in
push
jl
push
adc
jbe
subl
mov
popa
xor
ja
pop
out
mov
sbb
or
rorl
pusha
pop
fwait
jmp
fs
sbb
jnp
ljmp
xorb
push
dec
inc
mov
loope
roll
bound
shl
mov
mov
xor
cltd
inc
and
dec
jp
test
outsl
repz
das
dec
pop
fs
sbb
out
inc
cmc
pop
shll
jns
cmp
cmp
hlt
xor
pop
das
push
ljmp
jno
cltd
dec
pop
leave
xchg
dec
xor
dec
or
pop
or
sub
orb
leave
test
cmc
das
adc
out
cmc
pop
in
add
orl
push
xlat
cmp
ds
xchg
orl
mov
mov
lcall
lret
mov
add
mov
daa
std
insb
pusha
cmpb
adc
jmp
mov
mov
stc
cmp
cld
out
push
mov
fisttps
xchg
cmc
popa
jns
bound
dec
mov
fisubl
mov
push
mov
xor
mul
and
mov
sbb
subb
inc
sbb
lahf
idiv
imul
xchg
loope
xchg
call
pop
xchg
pop
sub
xchg
lods
add
aaa
out
test
xchg
push
ret
mov
add
stos
icebp
fucom
pusha
cmp
mov
pop
push
lods
jnp
pop
add
ret
sub
jbe
mov
cmc
fs
iret
stos
jl
mov
jmp
sbb
add
mov
xor
adc
or
out
xorb
cmp
cmp
dec
iret
sub
lahf
sub
movsb
pop
sub
mov
adc
sub
lods
adc
pop
aam
dec
fcoml
add
aam
fcomps
inc
mov
cld
sub
icebp
mov
imul
iret
mov
mov
decb
ljmp
sahf
and
adc
and
lahf
mov
cmp
sbb
xchg
or
popa
pop
addr16
inc
xlat
in
rol
and
into
push
lcall
or
ss
dec
mov
aad
fcmovu
xor
pop
lret
pop
jp
insl
pop
add
jo
inc
cmp
mov
addl
repz
lea
pop
jp
lods
pop
out
stc
add
push
mov
xor
push
jne
adc
test
decl
mov
mov
mov
es
and
ljmp
pop
push
fisubrs
enter
roll
jp
shl
je
jnp
push
and
lret
lods
sub
add
pop
out
idivl
leave
subl
xor
mov
jecxz
arpl
mov
cltd
dec
ds
jl
ja
iret
es
out
loope
inc
lahf
std
or
inc
ljmp
sahf
jmp
push
xchg
loopne
bound
xchg
add
add
movsb
aaa
std
test
mov
cmpl
pop
ljmp
jno
lea
sub
jl
popa
mov
pop
dec
and
xor
cld
add
fildl
xorl
xor
dec
and
add
sub
lock
jl
scas
mov
insl
and
push
or
pop
adc
jns
popa
gs
scas
test
jge
mov
icebp
or
loopne
sbb
hlt
das
adc
and
data16
mov
fisubrl
idivl
test
xchg
jo
repnz
test
fs
mov
mov
xlat
cld
lret
or
dec
ret
out
add
jl
ljmp
push
xor
test
popa
xor
xor
fidivrl
fbstp
pop
dec
sub
push
pop
sub
lea
es
jecxz
cwtl
xchg
pop
insl
insb
outsb
out
ljmp
loopne
or
inc
cmpsb
sub
movsl
ss
out
ljmp
jae
pop
ret
or
in
popf
ret
movsl
int
out
inc
bound
bound
fwait
pushf
ss
stos
pusha
adc
std
xchg
inc
cld
cmp
lock
dec
add
test
pop
xor
xlat
push
in
fsubrl
push
das
outsl
inc
sub
xchg
lcall
add
lret
lods
fwait
cltd
mov
nop
xor
cmp
call
scas
adc
jge
mov
cld
jae
sbb
sub
pop
adc
loopne
repnz
push
stos
jmp
push
cmp
icebp
pop
pushf
pop
mov
sub
jns
cmpsl
testb
jnp
cmp
daa
push
shrl
mov
mov
imul
sbb
mov
mov
insl
icebp
ds
testb
jo
scas
cmpl
bound
dec
popf
mov
inc
mov
pushf
cmp
lods
adc
mov
mov
push
mov
dec
ret
lock
jmp
lahf
lcall
xlat
fstpt
mov
inc
and
sbb
mov
test
push
mov
inc
push
dec
fs
shll
jbe
fwait
sub
insl
lcall
and
adc
adc
data16
cmp
push
sub
add
ljmp
divl
aam
xor
les
fimull
movsl
push
mulb
mov
cld
outsl
lock
jbe
push
and
sub
mov
jp
dec
cltd
mov
push
sub
add
shrb
in
leave
add
cmpsb
repz
enter
or
dec
add
mov
lret
add
js
loope
adcl
mov
push
imul
repnz
xor
test
inc
ss
push
cmp
lret
lods
lahf
stc
mov
inc
scas
xor
pop
or
jg
into
subl
iret
add
xor
pop
add
add
mov
int3
imul
push
testb
fst
lods
int
mov
test
inc
repnz
gs
rorl
cmp
shl
sbb
inc
xor
fadds
jo
push
fbstp
inc
insl
adc
xor
movsb
fwait
cmpsl
mov
aad
clc
movl
popa
push
sbb
addb
cld
jns
adc
cld
push
hlt
pusha
mov
push
aas
lea
test
jle
js
jns
cmp
mov
xor
fdivl
aad
pop
fstl
into
mov
mov
dec
inc
mov
jmp
cwtl
movsl
jmp
andb
lret
fmul
mov
scas
inc
xchg
inc
lea
jae
pop
pop
out
pusha
inc
shll
iret
fisubl
sbb
js
loopne
leave
xchg
sub
daa
lcall
test
push
cli
push
add
scas
sbb
ret
out
cltd
sbb
pop
push
or
xor
imul
inc
xchg
ja
xchg
mov
mov
stos
jnp
pop
mov
notl
pop
cwtl
gs
repz
xchg
push
mov
mov
push
mov
ja
fimull
pop
xorl
imul
loopne
push
clc
xchg
dec
outsb
cltd
sbb
mov
lea
dec
sbb
mov
jmp
movl
sub
mov
leave
insb
rcrb
nop
mov
stc
movsb
sbbl
mov
add
arpl
outsb
ret
mov
or
add
xchg
call
mov
ret
lea
pop
inc
mov
fisttps
xchg
out
lret
ret
add
push
jp
movsb
testl
add
outsl
ja
mov
scas
negl
pushf
fidivrl
push
pop
aad
jmp
jo
xor
js
sahf
xchg
sbbl
push
and
adc
cmp
pop
inc
xchg
sbb
cmpsb
out
sbb
fnstcw
wbinvd
push
dec
push
fisubrl
jp
push
dec
imul
pusha
sbb
scas
fwait
jl
fisubs
jp
inc
or
mull
ret
subl
das
dec
mov
mov
push
add
xchg
mov
or
mov
xchg
fidivrs
inc
add
push
test
adc
xchg
clc
je
xor
mov
test
xchg
xlat
mov
jmp
je
pop
or
shll
push
popf
push
cmp
add
jbe
add
jnp
clc
fmulp
sbb
out
cmpsb
mov
inc
ret
mov
push
fimuls
insb
into
inc
pop
xor
adc
push
xchg
sbb
addl
sbbb
daa
or
fisubrs
das
stos
push
movsb
shrb
lret
sbb
dec
pop
test
jne
hlt
lcall
sti
xchg
jae
xchg
orb
fstps
idiv
test
movl
and
rcrb
sub
xor
sub
clc
roll
pop
mov
je
push
xchg
or
push
pop
stos
xor
sbb
pop
scas
adc
cmp
push
out
clc
sbb
rclb
adc
insb
mov
mov
adc
mov
test
rcl
shll
add
movsl
movsl
lods
xor
xchg
adc
jg
fsts
test
arpl
xor
imul
out
lods
and
cltd
mov
dec
call
pop
aas
das
add
fdivs
or
dec
xor
es
scas
push
imull
pop
dec
fs
outsl
fsts
call
mov
inc
lret
pop
mov
jecxz
insl
mov
jg
pcmpeqw
push
cmp
aaa
dec
in
sarl
mov
jne
lods
and
mov
cmp
addr16
inc
outsb
push
popf
sub
or
gs
outsb
dec
sub
popa
jl
dec
push
inc
xchg
or
push
in
sub
fsub
mov
sbb
push
cltd
jno
jo
sbb
jno
aaa
mov
cmpsl
test
ds
mov
pop
repnz
ljmp
outsl
pushf
or
into
pop
jne
stos
out
scas
mov
out
fnop
sbb
push
jle
lods
jne
dec
lcall
mov
xor
add
mov
jns
cmp
js
or
xlat
ljmp
ret
mov
dec
inc
enter
pop
push
insl
adc
repz
lock
dec
adc
sbb
adc
popa
jb
adc
xchg
mov
dec
icebp
pop
test
outsl
decl
aam
notl
xchg
aaa
push
cmc
xor
mov
xlat
in
jmp
inc
nop
jle
lahf
xchg
js
push
pop
xor
out
add
shlb
sub
xchg
cs
inc
rcr
ret
mov
pop
lcall
jge
mov
xor
mov
sub
jle
test
cli
jne
adcl
fldl
lock
outsl
sbb
mov
xchg
push
rorb
push
gs
mov
jnp
out
popl
out
mov
cmp
mov
fisttps
and
aam
stos
push
jns
mov
and
and
mov
bound
lock
xchg
pop
and
jno
scas
les
sub
hlt
xor
mov
lea
jmp
pop
sti
xor
lods
sub
negl
nop
mov
enter
test
fs
jp
cwtl
jb
shl
mov
pop
loopne
mov
pop
pop
jbe
dec
mov
inc
pop
shlb
mov
pextrw
mov
out
in
ds
sahf
iret
sub
dec
outsb
push
jge
nop
cltd
addr16
sti
adc
nop
xchg
and
lods
adcb
ret
icebp
cmp
xchg
sub
repnz
sub
mov
mov
adc
lea
mov
bound
jae
pop
push
mov
inc
fnstcw
cmpsl
or
aas
sbb
sahf
pop
inc
jl
mov
mov
or
xchg
mov
cmp
and
mov
in
mov
imul
cld
jmp
mov
loope
push
ret
mov
dec
mov
mov
jg
dec
insb
inc
pop
lret
adc
popa
daa
or
scas
popa
mov
ret
dec
and
sub
or
insl
or
in
daa
lock
mov
pop
les
inc
pop
mov
sub
add
xlat
cmc
aaa
out
add
cmc
adc
dec
cmp
mov
ret
adc
mov
adc
sahf
stos
pop
inc
dec
xchg
mov
push
scas
clc
aas
in
jb
faddl
fisubl
int3
add
or
scas
push
mov
scas
fwait
sbb
jns
mov
jmp
push
stc
mov
aas
sbb
inc
hlt
shll
add
imul
xchg
or
mov
push
push
cli
jle
lcall
or
enter
push
imul
inc
jg
loope
pop
adc
les
outsb
sar
dec
aad
rclb
mov
cmp
arpl
shll
and
outsb
jo
pop
adc
push
sub
loop
and
xor
lods
dec
repnz
je
adc
movsl
sahf
mov
inc
fs
imul
sbb
push
rcl
and
repnz
ljmp
xor
pop
mov
xchg
pop
lret
cli
out
sub
inc
push
imul
ja
xor
cltd
mov
fidivl
sbb
outsl
je
push
push
loopne
inc
push
js
jo
mov
mov
and
xor
dec
jbe
sti
jg
adc
int3
cmp
mov
je
fdivrs
ret
jp
adc
mov
fs
fwait
js
jl
lock
xchg
jmp
imul
cmpsl
insb
xor
xchg
iret
adc
cmpb
adc
cmpsb
jns
push
scas
xchg
inc
mov
mov
fs
push
jo
xchg
or
cmp
add
sbbb
jmp
jg
mov
pusha
dec
mov
cld
lods
enter
stos
and
shlb
xchg
add
add
cmp
cmp
mov
aas
imul
sbb
jge
inc
sahf
jge
cmp
incb
push
mov
inc
sbbb
test
pop
sbb
xchg
inc
fs
std
in
ss
push
xor
jecxz
and
jae
rorl
rcrb
sub
push
or
mov
addb
or
inc
repnz
xchg
or
mov
fistps
lret
or
xchg
pop
or
xchg
sub
cmp
test
push
and
movsb
and
xchg
and
sbb
daa
inc
pop
frstor
scas
dec
lahf
scas
addl
das
iret
inc
das
pop
jno
dec
jl
sbb
dec
ficomps
fs
ud1
dec
mov
std
pop
andb
xor
faddl
xchg
xlat
bound
push
adc
ljmp
leave
nop
subb
cmpsb
inc
scas
dec
shll
fisttps
xor
ljmp
je
cmp
frstor
sub
aam
stc
ds
dec
push
push
mov
outsb
cli
das
and
inc
push
xor
inc
lods
add
into
dec
or
je
popa
xchg
lock
dec
fdivrs
push
cmp
mov
aaa
mov
sbb
repz
jne
jb
mov
scas
adc
fisubs
cli
inc
lret
daa
adc
xchg
push
jl
movsl
loopne
inc
cs
inc
pop
cwtl
in
rcrl
pop
insb
stos
rcll
jno
dec
movsb
cmp
mov
inc
les
lock
repnz
iret
sbb
xchg
mov
cwtl
xor
icebp
mov
lcall
lret
outsl
jg
and
loopne
repz
scas
sub
cmp
bound
xchg
cmp
inc
std
xchg
mov
dec
fildl
in
inc
or
push
ljmp
sub
outsl
cld
aam
jge
xor
add
adc
ror
mov
dec
cmp
jo
and
adc
cli
inc
mov
adc
adcb
test
pop
fistpl
out
sbb
sahf
mov
out
icebp
mov
mov
pop
mov
out
or
inc
sub
stos
pop
test
lcall
js
mov
daa
pop
fsubrp
cmp
or
fdivrp
out
je
cmc
je
shll
mov
and
xchg
jg
fistpll
push
or
pop
inc
repz
lods
jns
scas
jae
or
cmpsb
ljmp
xlat
xchg
mov
sbb
fs
cmp
sbb
inc
stos
xchg
flds
stos
loopne
add
or
loopne
pop
and
jae
in
jp
mov
add
pop
xor
inc
fcomps
test
adc
pop
cmpsl
cmpsb
in
stc
add
ror
push
or
xor
cli
add
and
mov
fmull
mov
jmp
or
loopne
add
ja
call
stos
sti
inc
xchg
sbb
pause
addr16
dec
xor
mov
add
sti
lahf
leave
iret
movsb
dec
faddl
jg
or
add
sbb
insl
lds
rorl
bound
sti
ret
adc
mov
xchg
shlb
mov
shl
cmp
data16
ja
mov
add
inc
js
mov
mov
adc
push
or
jecxz,pt
aaa
test
xchg
add
xchg
ds
xor
pop
inc
dec
out
popa
in
inc
test
jle
cli
and
and
nop
and
mov
in
lahf
test
cmp
mov
hlt
loopne
mov
outsl
popf
jl
jns
add
shll
mov
xor
or
mov
push
mov
loopne
jno
cmpsl
pop
flds
pushf
push
pop
xchg
imul
stos
sub
stc
push
pop
cmp
or
ficompl
dec
mov
sbb
jmp
cmp
or
fiaddl
dec
mov
sbb
push
pop
cmp
or
popf
ljmp
cmp
leave
jp
push
lock
dec
shll
jb
push
stc
shlb
outsl
jno
xchg
hlt
repz
jmp
or
add
push
or
add
add
add
add
cli
add
add
add
add
add
add
add
and
pop
add
add
add
add
add
push
add
add
adc
in
add
add
incl
cmp
loope
and
add
push
add
add
add
add
add
icebp
add
add
add
add
add
je
cmp
mov
add
jne
sub
in
jp
mov
push
add
add
add
add
add
add
test
movb
add
add
push
add
push
add
cmp
daa
add
add
add
add
add
add
add
sub
popl
cmp
add
add
loopne
xchg
add
add
add
mov
add
xor
add
add
add
add
add
add
jo
jbe
add
mov
jbe
jbe
push
cmp
ja
sbb
xor
daa
add
add
mov
jp
push
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
fadds
mov
sub
add
cmp
cmp
add
add
xor
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
xchg
add
add
add
add
add
add
insb
add
add
adc
jl
dec
add
add
add
add
add
cmp
repz
cmpsl
add
add
add
add
add
add
xchg
das
add
add
jbe
sub
das
add
add
add
add
add
add
les
sbb
inc
add
adc
js
dec
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
and
jbe
xor
add
mov
movb
add
add
add
add
add
add
add
add
add
pop
add
add
add
stos
add
add
add
add
add
add
add
jge
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
aas
add
add
add
or
add
pop
add
add
add
add
add
in
enter
mov
outsb
add
add
add
add
adc
push
add
add
dec
add
mov
xchg
add
mov
xor
add
add
add
add
add
add
mov
lods
add
add
xor
add
add
add
cs
sub
lret
or
fcomip
adc
adc
popf
mov
mov
push
sbb
out
mov
and
test
cmp
aaa
inc
mov
jbe
iret
filds
shlb
into
cmp
pushf
pop
inc
jbe
mov
or
inc
test
cmc
imul
inc
arpl
out
test
scas
jo
addr16
test
dec
mov
push
fidivrl
loop
cwtl
sub
std
dec
lret
cmp
leave
mov
fsub
call
xchg
jo
aad
mov
ret
dec
shl
int
and
in
xchg
push
daa
mov
outsb
jle
lods
lret
inc
or
lret
in
mov
fisttpl
xor
aam
mov
sub
mov
orl
cmp
notl
cmc
pop
adc
xchg
jbe
xchg
ss
in
gs
in
insb
jns
cmp
lcall
mov
mov
jecxz
mov
push
fnop
jl
iret
inc
cli
cmp
movsl
lret
sub
push
dec
lcall
push
inc
outsb
fistpll
xor
cltd
negl
in
aad
enter
cmc
push
rolb
es
cmpl
lret
mov
out
orl
ret
push
loop
iret
test
lods
add
pop
jnp
bound
outsl
ja
imul
adc
out
jae
sub
mov
idivb
xchg
xor
mov
add
jge
mov
mov
or
adc
icebp
fmul
lcall
and
push
add
in
rcll
lret
push
fdivrl
aas
inc
movsb
mov
jne
mov
das
das
mov
xor
dec
sbb
xchg
dec
packsswb
test
hlt
xchg
mov
loope
adc
cs
push
iret
pop
mov
insl
add
in
inc
fs
jl
dec
mov
pop
pop
test
dec
pop
mov
mov
shr
lret
xor
mov
int
lock
jns
das
mov
out
dec
loope
pop
mov
insb
ret
inc
ljmp
pop
xor
fsubl
addb
dec
inc
add
mulb
add
lahf
jp
fisubl
popa
cli
pushf
fidivrl
and
dec
aaa
mov
sahf
subb
jae
adc
outsb
mov
add
sbb
add
cmp
hlt
pop
mov
pop
inc
cmp
xor
mov
popa
nop
and
aad
ss
aas
jbe
mov
inc
xchg
cmp
test
jl
mov
jne
sub
in
das
or
inc
arpl
test
icebp
std
aas
sbb
jne
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
