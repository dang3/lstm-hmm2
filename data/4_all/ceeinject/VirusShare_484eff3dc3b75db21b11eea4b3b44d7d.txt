fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
test
mov
lea
std
ror
sub
sbb
dec
pop
pop
dec
test
mov
call
fstp
int
cmp
sbb
dec
pop
pop
dec
test
mov
call
fstp
int
xchg
sbb
push
das
ss
idivl
hlt
fsubl
cmp
ret
pop
and
dec
mov
sbb
loopne
xor
pop
jle
adc
shl
sbb
adcb
aad
clc
in
mov
arpl
cmp
popf
xchg
sub
insb
rorb
fstp
lock
sub
test
loop,pn
cwtl
iret
cld
in
in
dec
push
fdivs
movsl
out
inc
mul
jb
xchg
pop
cmp
push
pop
pop
push
push
cld
clc
clc
dec
enter
shrl
loop
int
insl
xchg
push
sub
dec
sti
adc
or
test
sub
testl
fmuls
mov
call
fstp
int
cmp
sbb
dec
pop
pop
and
ror
lods
loope
icebp
in
xchg
mov
lods
xchg
ficompl
or
dec
imul
or
mov
hlt
call
stos
mov
dec
inc
imul
push
push
push
and
sub
out
hlt
call
enter
sub
sbb
dec
pop
pop
dec
test
mov
call
fstp
int
cmp
sbb
dec
pop
pop
dec
test
popf
in
das
mov
push
xor
push
and
or
test
enter
push
mov
cltd
sub
vsubps
jb
outsl
sub
xchg
adc
push
xor
std
dec
ljmp
pop
sub
adc
pop
dec
or
mov
add
sti
dec
imul
in
loop
pusha
je
mov
icebp
outsl
rcr
add
popa
lock
ljmp
dec
mov
sbb
ret
andl
sbb
lahf
jo
push
jnp
sahf
dec
sbb
jecxz
adc
dec
pop
adc
pop
mov
pop
and
mov
cld
loopne
int
mov
mov
lahf
cltd
sti
lods
faddl
fnstcw
mov
inc
loop
or
mov
ret
mov
jae
mov
mov
cs
rolb
adc
push
mov
push
xor
sbb
cld
fs
sbbb
pusha
xchg
fcomps
flds
pop
cmp
pushf
lods
lret
test
cmp
sbb
cmpsb
inc
loop
xchg
xlat
repnz
mov
push
mov
xor
xchg
mov
sub
pop
push
and
inc
cmp
xor
jo
stos
and
cs
adc
out
inc
mov
xor
data16
pop
sbb
lcall
lds
int3
jo
rorl
sbb
outsb
add
es
into
and
in
push
in
add
jle
sbb
cmpsl
xor
add
popf
bound
push
loopne
xchg
xchg
sahf
jns
jge
cltd
mov
mov
dec
xchg
sub
push
pop
in
jecxz
xchg
jbe
mov
mov
loop
dec
aaa
daa
cmpsb
xchg
push
sbb
test
push
aad
jnp
int3
add
cli
das
dec
sub
decb
xchg
xchg
pop
je
xor
lock
xor
xor
mov
popa
cmc
lret
out
push
add
mov
mov
xor
daa
adc
popa
out
adc
inc
xchg
xor
and
and
mov
xor
mov
shrb
push
add
aad
movb
xor
rcr
mov
or
scas
pusha
bound
mov
nop
sbb
cmpsl
push
cmpsl
rcrb
fildll
push
sub
jns
daa
or
push
jmp
jge
sub
inc
mov
ficompl
adc
mov
shr
fwait
pop
dec
adc
and
iret
and
test
add
nop
mov
cmp
scas
add
jg
xor
xchg
clc
add
loopne
loop
mov
lret
dec
inc
cltd
or
push
aaa
add
hlt
roll
cld
popa
jb
addr16
inc
idivl
fcmovbe
xchg
add
int3
xor
cwtl
cmp
ret
mov
cmp
mov
lods
arpl
push
jns
jmp
data16
lds
out
push
daa
jp
adc
add
sahf
add
in
and
push
aas
push
jb
out
adc
pop
push
cld
mov
aad
negb
or
or
jbe
outsb
xorb
jmp
fsubrs
dec
jb
xor
cmpsl
dec
or
jbe
lahf
shl
shrb
pop
jmp
mov
es
lods
lret
mov
les
ret
es
pop
jl
mov
dec
roll
and
loop
or
arpl
je
push
das
stos
xchg
sbb
mov
popa
mov
fsubr
or
fisttpl
mov
dec
ret
xor
repnz
mov
pop
js
cmp
fcomps
out
cwtl
js
sub
out
jmp
bnd
jae
jmp
loope
pop
bound
add
popf
or
xchg
fldl
mov
les
cmc
mov
fists
cmp
stc
dec
in
mov
cs
fwait
mov
aaa
ret
mov
add
mov
adc
push
fistps
xor
ss
insl
dec
xor
cltd
loop
data16
scas
fsubs
push
mov
sarb
sbb
sbb
les
jns
cwtl
pop
int3
sbb
stos
push
and
nop
dec
loop
xchg
jbe
cmp
ljmp
movsl
lret
clc
or
pop
mov
fs
fmuls
xchg
dec
cmp
inc
subb
push
movsl
sbb
into
sub
js
les
push
shr
repz
sub
repz
int3
cmp
leave
push
inc
adc
mov
lret
and
test
pop
xchg
and
push
pop
sbb
test
inc
fdivrl
fs
inc
cmc
orl
arpl
pop
sub
mov
mov
cmpsb
add
loopne
inc
movsl
mov
mov
dec
add
daa
or
movsl
sti
imul
aad
fwait
xchg
inc
and
sbb
pop
push
es
sbb
dec
xor
ljmp
int3
ret
xor
or
test
gs
enter
arpl
adc
fwait
dec
jae
aad
ds
arpl
movsl
push
test
mov
repnz
lds
and
cwtl
jno
mov
jns
mov
cmp
xor
lret
cmp
pop
iret
ror
jle
lds
jge
ret
mov
popf
int
or
leave
mov
repz
stos
fdivl
orl
stos
jg
xchg
cmp
dec
pop
repz
dec
les
mov
lods
fisttpl
add
mov
jecxz
lret
mov
inc
mov
fsts
movsb
inc
jg
loop
int3
out
ffree
arpl
sub
xor
stos
and
rcr
ret
loopne
sbb
xchg
xchg
pop
stos
rdtsc
or
cli
xor
dec
push
ds
and
mov
lods
xchg
or
testl
adc
sub
es
lods
mov
sbb
mov
les
push
out
imul
cld
mov
roll
cmpsb
sbb
sbb
pop
ret
jbe
movsl
sub
sbb
cli
sbb
pop
mov
dec
sub
and
and
lds
out
inc
push
inc
jb
in
adc
movsb
jns
jp
sahf
and
std
dec
mov
pop
jns
xor
vmovshdup
push
pop
pusha
sbb
jl
xorb
push
mov
pop
cmp
into
mov
insb
inc
fildl
pop
or
and
cs
mov
fists
mov
push
mov
shlb
in
cmp
add
fs
mov
stos
sbb
les
or
std
outsl
push
in
inc
jmp
lods
negb
outsb
and
lods
std
addl
addr16
ss
cmp
scas
inc
xchg
dec
xchg
mov
inc
pusha
mov
xchg
pushf
sbb
imul
adc
mov
aad
pop
or
sti
jb
ja
aad
dec
jne
loop
clc
mov
loopne
aam
into
in
cmp
lcall
fdivrl
xchg
inc
cmc
negl
dec
mov
sub
aas
mov
test
xchg
ficoms
leave
shll
or
sahf
jne
inc
adc
cltd
orb
lock
in
movsb
daa
sub
inc
push
lahf
stos
mov
lcall
mov
or
push
shl
sbb
ds
push
lcall
popf
xchg
and
shl
fidivrs
dec
cmpl
out
pusha
xor
subl
out
cmpl
int3
mov
pop
mov
push
and
int3
inc
fstpl
pop
cmp
addl
popf
jl
data16
testl
pop
lods
sbb
mov
dec
pushf
add
mov
loope
lods
ret
push
sub
dec
or
sbb
mov
and
mov
inc
inc
push
mov
popf
mov
and
add
mov
mov
jecxz
daa
xchg
lods
inc
int3
je
push
push
mov
cmc
cs
mov
add
mov
lods
lret
ret
std
mov
cli
imul
sahf
test
jns
mov
mulb
xchg
ret
inc
fbstp
int
inc
jmp
bnd
out
ja
pop
xor
jge
push
jae
stc
dec
sub
hlt
lock
and
lahf
das
push
xchg
sub
cwtl
push
xchg
loope
pop
loop
pusha
mov
mov
fs
add
fiadds
sub
xor
loop,pn
xlat
js
xchg
jg
push
sahf
pop
les
mov
lods
and
loope
xor
clc
test
outsb
popa
jge
rorb
sbb
push
add
add
mov
push
add
cltd
jnp
jns
xlat
sub
cmc
mov
fldcw
cltd
mov
out
out
test
pop
dec
and
int
test
add
mov
sub
jae
jbe
lea
not
fmuls
xor
xchg
jae
loop
push
mov
mov
ja
cmp
and
push
jg
insl
addr16
test
jg
test
add
outsb
mov
movsb
jnp
imul
jle
jbe
xchg
jg
repnz
jne
or
or
loopne
or
cmp
lods
jnp
xchg
xor
fldenv
push
adc
loope
mov
xorl
and
dec
movsl
cs
mov
stc
test
push
push
mov
dec
nopl
push
jno
ret
call
and
pop
mov
mov
mov
xorps
sub
sti
push
icebp
ret
and
add
or
push
ret
mov
xchg
dec
xchg
leave
aam
xchg
leave
out
popf
push
add
aad
jo
out
les
xchg
jae
mov
xchg
xlat
pop
jl
addl
cmc
sbb
dec
sub
rolb
loopne
adc
popf
lahf
das
mov
scas
adc
imul
push
daa
insb
lods
outsb
fs
in
add
adc
pusha
dec
push
sub
or
xchg
push
roll
mov
pushf
mov
jno
push
aam
loopne
push
daa
rcrb
or
movsl
jecxz
shrb
inc
iret
scas
xchg
roll
jmp
std
sbb
pop
dec
jnp
lret
imul
imul
cmp
enter
scas
cmp
push
jmp
sbb
xchg
jns
in
adc
faddl
ja
repz
fidivl
shll
push
adc
jle
scas
loopne
iret
sbb
cmpsl
cmp
sbb
test
pusha
sahf
das
jle
lahf
andb
sti
mov
push
or
loope
addl
mov
mov
lea
and
loop
icebp
aaa
xor
lahf
pop
xor
xchg
dec
sbb
int
cmp
xor
mov
outsl
cwtl
jecxz
mov
mov
jecxz
push
mov
ds
adc
nop
jg
push
push
pop
adc
xor
jno
or
cmp
mov
push
jae
movswl
dec
std
roll
and
roll
out
xchg
add
test
mov
fs
outsb
pop
and
fcomps
cmp
add
xchg
adc
add
sub
sub
and
test
test
fnstcw
mul
movl
inc
je
mov
sahf
inc
cmp
int
std
notl
xor
adc
adc
insl
inc
inc
and
daa
add
dec
mov
mov
repnz
addb
xchg
and
decb
adc
movsl
cld
pop
xchg
xor
lret
jle
mov
xchg
or
cmp
aas
out
xor
mov
sub
int
dec
pop
cltd
adc
popf
push
std
jmp
cmp
test
push
jl
pop
sub
or
adc
clc
pop
xchg
and
jnp
xchg
push
clc
hlt
push
inc
jne
cmpsb
mov
sbb
sbb
out
orl
xchg
mov
push
nop
test
mov
fs
adc
add
add
test
cltd
test
negb
pop
scas
test
bound
mov
cmp
adc
mov
pop
out
pop
or
js
idivb
cmpsb
stc
sbb
cmc
jbe
aas
jle
pop
mov
mov
rol
js
imul
mov
sub
std
adc
sbb
sbb
into
cmp
mov
shr
inc
gs
lret
cli
cmpsl
cmpsb
push
xor
sub
jb
or
mov
xor
mov
inc
jne
ror
jmp
xor
add
jns
sti
xor
or
loope
jl
lret
dec
adc
adc
movl
pop
arpl
jl
sti
xchg
int3
dec
jb
stos
lods
icebp
pop
jns
cmpsb
mov
lods
rcrb
pop
sub
pop
in
loop
pop
jg
scas
jle
pop
cmp
bound
push
push
in
dec
mov
and
outsl
les
rorl
jo
or
sub
jle
fisubrl
or
ret
sti
stc
add
out
jmp
dec
ret
cmp
cmc
addr16
mov
pop
fidivs
fisttpll
sahf
inc
dec
and
repnz
and
dec
aad
fbld
out
loop,pn
ds
jge
pop
imul
int3
popl
xchg
xor
icebp
movsl
lds
sub
and
jge
xchg
sbb
test
mov
mov
push
adc
fdivrl
push
sbbl
call
in
cld
sub
push
sub
lods
clc
push
add
dec
negb
mov
mov
jns
mov
fisubrs
xchg
cmp
shl
lods
outsb
push
dec
sub
add
imul
test
bound
push
xlat
add
adc
lcall
iret
add
xchg
mov
rolb
mov
repnz
ljmp
sbb
in
loop
sbb
roll
ss
dec
lods
jne
xor
fsubr
scas
pop
loopne
push
pop
fs
call
sbb
ret
test
cli
mov
les
sub
pop
mov
mov
pop
in
xor
or
xchg
movsb
repz
mov
ja
dec
fbld
in
jg
add
movb
aam
out
cmp
leave
das
aad
sbb
cli
add
inc
ret
add
gs
mov
and
mov
xchg
mov
int
adc
ror
push
dec
inc
push
mov
push
in
mov
in
add
fsts
into
test
cmpl
flds
loop
adc
shrl
ss
shll
stos
push
std
mov
ret
jp
cltd
jge
outsb
cmc
cmp
jecxz
negl
dec
ss
adc
sub
pop
dec
pop
addl
call
cmp
or
loopne
jg
sbbl
fildll
pop
pop
xchg
mov
and
or
xor
test
in
aaa
mov
in
add
out
pop
inc
cli
or
imul
mov
mov
sbb
je
add
xor
adc
mov
bound
push
rclb
out
add
pop
inc
pop
cmpsl
scas
and
stc
add
sub
loope
nop/reserved
fsubrl
aas
mov
insl
xor
jmp
lock
cmp
mov
cmp
lahf
inc
test
push
pop
mov
xchg
jno
in
loopne
or
scas
sub
lret
dec
jno
and
or
mov
inc
xor
inc
sbb
outsb
sbb
jb
fdivrs
es
rcr
iret
xor
daa
dec
rcl
jo
and
mov
loopne
xor
ja
mov
popa
xchg
pop
cmp
jmp
in
int
imul
mov
iret
inc
inc
fwait
jle
adc
cmp
fidivrs
dec
push
in
jbe
mov
mov
cld
repnz
push
add
lcall
push
fstpt
jp,pn
or
inc
jle
insb
inc
pop
enter
lahf
mov
jecxz
inc
push
insb
sub
dec
xchg
jne
adc
inc
push
dec
add
insl
dec
inc
rcrl
sti
sub
jae
addl
xor
cmpsb
jno
aam
adcl
daa
into
mov
leave
xchg
sbb
pusha
fnsave
xchg
sbbl
outsb
test
sbb
jo
or
bound
adc
push
repnz
and
sub
movsl
dec
std
jl
jbe
cmp
and
popa
dec
mov
xchg
push
data16
ja
mov
ret
sti
leave
dec
js
push
mov
ss
dec
pop
xchg
and
repz
repz
cmpsb
or
push
rcrl
sbb
sbb
cmp
mov
in
mov
jl
push
es
cmp
notb
pusha
dec
mov
jne
inc
std
je
ljmp
out
sub
push
jbe
dec
push
mov
xchg
cltd
xor
or
jns
dec
out
fisubrs
sbb
bnd
imul
sub
xchg
or
lret
pop
popl
push
sbb
notb
in
mov
dec
pop
lods
inc
lock
test
shr
jns
out
push
mov
mov
ret
xchg
push
test
add
jmp
repz
ret
jne
cmpsb
xchg
les
cmp
mov
insl
mov
adc
outsl
jmp
adc
aaa
out
sub
push
fs
jle
mov
mov
jl
jl
sbb
jne
loopne
and
jo
sub
sub
sti
aaa
stos
leave
dec
or
cld
mov
sbb
dec
setae
cmovs
push
jmp
shll
pop
xchg
aas
or
fsts
xor
xchg
mov
into
push
push
aaa
aam
setno
cmp
mov
push
imul
and
lret
in
cltd
vmovsd
lds
xor
pop
les
inc
jmp
shr
sahf
popf
xor
imul
iret
subb
ljmp
push
popf
mov
mov
adc
mov
fsubl
mov
mov
mov
bound
lods
pusha
add
pop
push
out
int
lret
into
pop
pop
mov
int3
sbb
in
sbb
add
into
pop
sbbb
in
add
jge
lret
push
rcrb
outsb
fiadds
ja
repnz
testb
jo
xor
icebp
in
jae
inc
iret
pop
xor
mov
cmp
mov
cmp
out
gs
shll
popf
inc
mov
xchg
mov
mov
sbb
inc
test
adc
arpl
aad
out
push
lcall
sbb
into
dec
arpl
sbbb
mov
pop
cmp
test
pusha
into
mul
sti
adc
adc
jno
aaa
out
push
out
ds
sbb
pusha
insl
enter
and
lds
push
pop
adc
cmp
add
push
sarb
mov
lods
and
jno
or
mov
test
scas
hlt
add
outsl
js
pop
lahf
mov
or
xchg
fcmovb
imul
cmp
lcall
enter
dec
daa
and
aad
clc
pop
cli
insl
fadds
or
lret
adc
sub
xchg
pop
nop
push
in
mov
imul
xlat
dec
cmp
fiaddl
fmuls
in
adc
push
aam
rolb
xor
and
popf
xchg
adc
add
int
jge
lcall
es
in
xor
xchg
ret
vcvttpd2dqx
mov
cmp
repz
mov
mov
pop
xchg
mov
pop
in
pusha
push
push
imul
inc
push
or
or
dec
sbb
into
fsubl
adcb
enter
and
mov
pop
add
gs
shll
in
cmp
loop
mov
jmp
add
and
and
fs
cld
pop
pusha
fsts
cmp
inc
clc
xor
sbb
in
pop
mov
lds
clc
push
scas
mov
xorb
jne
aam
call
xor
inc
cmp
inc
dec
addr16
loope
jl,pt
cmp
bound
stc
lds
into
dec
out
clc
sbb
sahf
stos
push
jecxz
xor
in
fs
inc
xchg
dec
add
push
push
ss
fidivs
shr
xorb
push
movsl
maxps
daa
lds
test
sbb
cmc
pop
mov
out
lcall
fmul
sub
nop
icebp
jle
ss
xor
fsts
push
fs
js
jns
dec
cwtl
out
jp
fdivrl
sbb
mov
inc
adc
addr16
rcl
std
scas
or
gs
xchg
xchg
aas
or
and
or
mov
pusha
ja
xchg
push
push
push
shll
dec
lahf
push
cmp
out
lret
sub
jg
push
push
push
test
adc
dec
movsl
mov
push
aam
add
cmpsl
xor
mov
arpl
push
mov
cmpsl
repz
rorl
popf
cwtl
call
fstp
int
cmp
sbb
dec
pop
pop
dec
test
mov
call
fstp
int
cmp
sbb
dec
pop
pop
dec
test
cmp
push
fstpl
sub
sbb
dec
pop
pop
dec
test
mov
call
fstp
int
cmp
sbb
cmc
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
cmpsb
pop
mov
dec
imulb
jae
test
es
lods
inc
cld
push
mov
jbe
xchg
cmpsb
pop
mov
cmp
or
sbb
out
cld
push
test
push
lods
and
jbe
xchg
push
cmpsb
inc
mov
and
imul
push
divl
addl
or
add
add
jl
add
xor
and
sarb
in
repz
test
add
iret
inc
and
icebp
xchg
cmp
ret
pop
cld
outsb
aad
and
and
push
jmp
pusha
ficoms
daa
loope
jl
add
mov
xor
pushf
and
leave
push
mov
pop
mov
lods
mov
loopne
sub
in
sbb
fdivr
xchg
jmp
sub
mov
adc
mov
imul
mov
mul
stc
add
fdivl
push
adc
fs
mov
jl
add
sarl
in
insb
aaa
jg
push
add
xor
leave
insb
push
lods
push
insb
pushfw
mov
dec
mov
es
or
add
push
aam
lds
mov
movsb
push
mov
xor
xchg
out
sub
cmp
dec
adcl
cwtl
jbe
movsbl
inc
shlb
adc
adc
adc
cli
sub
pop
aad
test
pusha
mov
fsubr
arpl
mov
fs
and
sar
pushf
and
ret
pop
into
push
hlt
cmp
or
sbb
in
push
cld
push
int3
fdivl
lods
inc
mov
jbe
xchg
cmpsb
pop
mov
cmp
or
sbb
in
push
cld
push
int3
fdivl
lods
inc
mov
jbe
xchg
jno
xor
push
mov
inc
adc
push
jmp
adc
xor
xchg
add
xor
push
mov
sub
leave
int3
jnp
jmp
stos
lods
jno
sbb
aam
aas
jp
adc
pop
mov
xchg
ljmp
in
sarl
lahf
pop
xchg
repnz
mov
cs
mov
addr16
add
push
mov
into
fcomp
xor
out
sub
repnz
testb
add
jne
mov
ds
int3
vpcmov
inc
dec
cmp
and
and
test
sahf
ja
jb
push
lea
ret
sbb
stos
jg
and
sub
arpl
push
in
and
dec
ljmp
iret
xchg
push
popa
fistpl
hlt
movsb
cmp
out
dec
cwtl
pop
bound
jb
xchg
js
aam
sub
xchg
pop
jno
push
sbb
jl
imul
jbe
jg
dec
adcl
adc
adc
cli
int
sahf
shl
ret
push
mov
mov
push
repz
push
shr
dec
aam
test
xchg
sahf
loop
pop
lods
fisttpl
repnz
xchg
push
aam
addr16
push
or
pinsrw
loopne
lods
pop
push
jno
decb
xchg
sbbl
add
fistpll
call
inc
push
or
pop
cmp
lcall
and
add
lods
enter
imul
mov
xor
push
pop
lahf
insb
cmc
mov
jmp
xchg
fbstp
push
push
mov
rcl
std
popf
pop
mov
stos
movsl
jmp
and
xchg
outsl
aam
sub
push
mov
int
aaa
xor
xor
imul
insl
pop
xor
pushf
lcall
jmp
imul
inc
push
in
xor
and
sub
push
imul
dec
pop
inc
inc
pop
negb
add
jg
cmp
and
and
sti
movsb
leave
or
mov
nop
inc
pop
jmp
mov
jns
cs
mov
cmc
mov
sub
pop
js
mov
mov
pop
adc
in
push
xchg
mov
xchg
sbb
bnd
bound
push
out
xchg
loopne
pop
lahf
jecxz
sbb
xchg
mov
ja
push
pop
sub
sti
pop
sbb
mov
jge
insl
sub
mov
fwait
adc
inc
or
adc
xchg
test
rolb
popf
pop
sbb
cmpsl
ljmp
pop
popa
shlb
pop
sbb
push
lods
push
mov
fldcw
call
xchg
pop
xchg
xor
inc
in
scas
lahf
pop
push
lret
jae
jmp
cmp
xor
fidivs
pop
inc
sub
jb
or
cwtl
mov
mov
cmpl
cmp
fnstcw
cltd
push
sub
shlb
pop
pop
adc
push
jmp
jl
hlt
jmp
sbb
lret
jl
push
jp
cmc
lods
clc
lea
or
jp
and
fwait
out
mov
scas
sbb
cmp
jo
pop
cli
xchg
movsb
jmp
dec
cwtl
sbb
sbbl
push
pop
jp
sub
xchg
xchg
insl
cmpb
inc
and
js
jne
push
jmp
aas
icebp
push
push
lea
insl
mov
out
scas
addr16
xchg
cmpsb
jecxz
rorb
sub
push
push
pop
lods
clc
mov
or
xor
mov
jbe
push
jmp
pop
and
mov
lods
mov
jnp
fimull
sub
dec
mov
jmp
push
inc
imul
sbb
mov
dec
or
pop
inc
xchg
xlat
lds
mov
testl
push
xor
mov
sub
mov
sub
jbe,pt
nop
insb
cmp
ss
push
out
pop
sbb
aaa
lret
in
cld
cmc
pop
or
cmp
cmp
ljmp
mov
inc
mov
xor
adc
and
leave
sahf
ljmp
mov
nop
xchg
mov
pop
je,pt
and
jo
cmpsl
movsb
dec
xlat
fsts
mov
fiaddl
cmp
jns
fdivrp
ja
sbb
je
test
mov
popf
aam
inc
fisubl
jo
popf
cmc
xchg
insl
mov
cmp
add
push
addr16
pop
push
cmp
mov
in
xchg
or
bound
addr16
push
sti
cmp
test
push
outsl
dec
ret
mov
leave
lds
mov
in
jno
call
out
enter
adc
cmpl
push
push
cmpsb
in
cltd
insl
repnz
popa
lods
ss
pusha
cmc
pop
inc
and
out
push
sahf
addr16
fistps
mov
jb
aas
cmc
stos
lahf
push
std
mov
aas
pop
cli
in
lds
xor
scas
scas
lods
cmp
imul
test
or
and
dec
test
mov
sahf
adc
push
lea
sbb
mov
push
add
push
add
icebp
mov
push
and
xchg
push
or
lret
sub
loope
push
data16
mov
mov
lret
rcl
jg
imul
sbb
jno
rolb
popf
enter
aad
pop
cltd
inc
fstl
xor
and
mov
inc
mov
movsb
lcall
xlat
stc
nop
lods
pop
dec
push
test
xor
cmpsl
shl
cmp
cwtl
mov
and
and
test
cmp
hlt
jns
sbbl
push
push
arpl
sbb
scas
ss
jmp
popa
cltd
mov
arpl
cli
lds
lods
add
out
fdiv
in
leave
daa
fidivl
test
pop
xlat
mov
and
lret
int
in
xchg
sub
dec
push
xchg
dec
dec
adc
fsin
mov
fnstenv
int
inc
xchg
mov
loop
fdivrl
cbtw
test
inc
insl
movsb
lea
jnp
jno
ds
test
stos
dec
jbe
dec
in
and
add
inc
cmpsb
inc
fs
lahf
jbe
push
lahf
aas
mov
mov
push
mov
dec
jb
arpl
cmpsl
push
mov
hlt
mov
adc
dec
inc
es
ret
fdivrl
adc
push
incb
repz
js
aam
jg
in
sub
mov
cld
pop
jle
xlat
pop
sbb
ret
hlt
xchg
push
inc
xorl
ds
icebp
or
inc
data16
push
add
jae
stos
sub
jmp
push
adc
xchg
test
into
sahf
imul
mov
pop
mov
add
pop
jbe
pusha
int
rolb
je
push
sbb
lahf
mov
sti
push
sbbb
lds
or
es
jmp
push
cli
ret
pop
pop
cmpsl
jle
and
lds
rolb
adc
push
sub
mov
sub
enter
cmp
add
mov
inc
pop
pop
out
dec
lock
movsl
ror
in
adcb
fsubrl
bound
mov
sub
xchg
icebp
inc
out
inc
fwait
inc
sahf
and
mov
mov
call
fwait
hlt
cmp
jp
roll
movsl
xor
pop
or
daa
xchg
hlt
inc
cmpsl
fmuls
insl
pop
sub
adc
adc
js
xchg
movsb
faddl
imul
jge
mov
popa
jg
xchg
rolb
sub
or
push
in
imul
shrb
mov
jne
cmp
dec
or
stos
test
sub
ja
xor
pop
xchg
mov
incb
aam
out
nop
out
add
cmp
testl
loopne
xchg
mov
mov
sub
mov
leave
cmp
adcb
icebp
outsb
enter
sub
gs
mov
jmp
cmp
pushf
addr16
mov
js
push
shl
jmp
in
or
pop
call
sti
dec
inc
xor
iret
ljmp
out
adc
xchg
mov
jg
stos
jno
scas
scas
insl
insl
dec
sbb
hlt
mov
push
jg
test
xchg
jecxz
mov
jnp
aas
movsb
jp
mov
std
test
ret
lods
mov
dec
popa
jns
jge
xchg
xchg
cmpsl
push
mov
out
cmc
lcall
jne
subb
cmp
cmp
cld
mov
mov
mov
push
sbb
mov
sarb
dec
enter
hlt
lahf
insb
and
adc
sub
nop
insb
daa
loop
cli
xchg
xor
daa
out
lret
cmp
jecxz
xor
inc
sti
jbe
add
fucomp
mov
adc
out
dec
mov
dec
xchg
adc
nop
test
adc
xchg
inc
or
push
les
rolb
mov
mov
cmpsl
and
in
out
mov
or
loop
add
push
mov
cmp
pop
loopne
int3
imul
fcmovnu
out
out
in
push
pop
pop
int3
ret
push
cmp
in
mov
mov
fld
fdivp
das
clc
cmp
sub
aam
scas
adc
outsb
sub
push
push
sub
popa
jecxz
aas
stos
xor
popf
push
pusha
mov
add
icebp
lock
imul
fstpl
repz
mov
and
std
int3
or
fwait
xchg
in
dec
xor
in
daa
add
pop
dec
jns
adc
insb
fs
lcall
push
shll
or
repz
mov
das
and
sbb
std
je
nop
mov
jmp
mov
out
jmp
jl
call
shrl
xchg
sub
jmp
imul
mov
rcrb
js
inc
cs
fsubrl
loop
lcall
call
jmp
cmp
cwtl
or
or
es
jp
fistl
lcall
and
fdivr
mov
sbb
int3
test
std
sbb
lods
clc
jle
sti
movsb
lods
jle
scas
jl
popf
or
push
lahf
test
scas
bound
incl
cmpsl
xlat
or
inc
cmp
enter
stos
xchg
sti
push
jne
loopne
clc
stos
dec
xor
stc
add
shlb
icebp
adc
xlat
daa
insb
jle
sub
pop
xor
mov
ret
shll
pop
xchg
pop
mov
jbe
mov
push
or
jae
xor
pop
or
aad
sub
ret
push
mov
or
dec
or
and
fwait
add
sbb
jne
cs
addr16
xchg
jg
popf
mov
pop
push
fcompl
popf
arpl
push
pop
add
or
es
iret
out
imul
jae
jnp
push
in
jmp
inc
pop
aad
or
pop
mov
adc
mov
fstl
mov
sub
mov
lods
lods
cmp
jno
loope
movsb
nop
push
cmpsl
mov
dec
xchg
adc
xorb
xor
in
jae
jp
mov
mov
sbb
xchg
jb
in
mov
enter
xor
test
mov
mov
sbb
sbb
jecxz
xchg
or
clc
mov
les
sub
lret
es
push
stos
inc
mov
jl
cmpsb
fwait
arpl
xchg
jno
test
mov
mov
mov
fwait
test
mov
int3
sbb
dec
inc
push
xchg
xor
lods
mov
jg
xor
setbe
jnp
rorb
imul
jge
mov
es
aam
or
xchg
push
push
pop
mov
sti
sbb
and
add
push
shlb
fnstsw
push
xlat
test
repnz
inc
xor
lret
cli
inc
cltd
outsb
pop
inc
inc
add
ret
inc
sbbb
imul
push
sahf
jl
push
outsb
loop
ret
jp
enter
ljmp
jle
pop
stos
sbb
xchg
cmp
rorl
cwtl
push
mov
mov
sub
and
subl
insb
jle
jmp
dec
sbb
stc
push
outsl
insl
cmpsl
mov
xchg
js
in
in
arpl
test
aad
cmpsl
aaa
push
inc
push
cmp
das
ja
mov
cwtl
mov
jle
push
mov
push
movsl
jne
movsl
cld
lret
jp
sub
hlt
loope
cmp
push
dec
xchg
xchg
and
call
or
lret
mov
scas
dec
in
cld
mov
insl
xchg
out
outsl
or
xchg
pcmpgtd
jno
jg
out
arpl
iret
je
and
mov
pop
inc
out
jmp
out
js
lock
lods
sahf
testl
dec
cmp
push
or
mov
add
enter
mov
jne
pop
mov
inc
bound
orb
jae
or
xchg
into
imul
pmaxub
icebp
clc
leave
sub
xchg
mov
mov
std
test
sub
mov
push
lods
and
mov
jne
ret
cmpsb
xchg
cmpsb
out
stc
xchg
filds
repnz
and
mov
int
arpl
lret
int3
nop
push
iret
sub
cli
mov
subl
aam
mov
dec
jns
adcl
aaa
or
fdivrl
shll
jo
ljmp
mov
aam
jo
div
mov
inc
mov
mov
fs
xor
push
in
jb
mov
enter
ret
lea
mov
and
aam
fstps
mov
xorl
sub
out
fwait
movsl
mov
and
mov
out
sub
lret
loopne
aaa
lahf
sbb
mov
dec
sbb
xchg
aas
adc
inc
ds
xor
sbb
fs
and
mov
mov
push
fldl
dec
cli
push
sub
xchg
sbb
cli
inc
add
inc
test
sahf
fs
daa
dec
test
pusha
cmpxchg
push
insl
pop
jns
xor
insb
mov
ficoml
out
gs
mov
addl
stos
and
inc
lock
mov
pop
fiaddl
pop
mov
cwtl
mov
notb
push
aam
out
mov
cmp
sarb
xor
mov
and
push
cltd
mov
int
imul
mov
xlat
add
cmc
add
jne
lods
outsl
pop
cmp
aam
inc
pop
push
mov
inc
xlat
iret
mov
mov
pop
sub
movsl
jecxz
insl
in
inc
mov
adc
movaps
into
mov
inc
adc
sbb
push
push
insl
mov
jae
stos
add
mov
lret
mov
mov
push
pop
mov
outsl
jl
les
cmpb
das
into
ss
popa
fs
stc
aas
and
pop
popa
roll
mov
jb
fidivrl
sub
cmpl
xchg
daa
out
bswap
push
dec
mov
mov
test
in
pop
sahf
xchg
rcrl
lret
adc
xchg
dec
in
imul
cwtl
jmp
pop
jmp
js
mov
mov
push
jne
in
jno
mov
sbb
cld
pop
sbb
fwait
ss
fildl
iret
sub
pop
nop
cli
sbb
and
xor
push
adc
out
mov
inc
xchg
cli
cmpsb
xchg
lods
adc
pop
arpl
pusha
cwtl
jp
insb
xchg
dec
pop
out
test
xchg
scas
adc
test
negb
mov
mov
sub
cmp
and
jecxz
pushf
dec
imul
xchg
das
mov
xor
leave
xor
test
mov
or
xchg
sbbl
jo
dec
lea
mov
je
xchg
dec
int3
adc
or
xor
repz
js
repnz
ficompl
sbb
mov
gs
mov
cli
in
jo
ds
xor
jmp
scas
lods
repnz
data16
mov
daa
ds
inc
jbe
dec
mov
stos
and
fiadds
nop
ds
shrl
test
stc
push
pop
mov
pop
sbbl
fmull
shl
fwait
aaa
and
xor
sub
mov
fcmovnu
mov
mov
mov
bound
sbb
sbb
movsb
dec
sub
bound
mov
add
test
out
rol
mov
and
pop
pusha
pop
fdivs
cmp
add
sbb
leave
inc
mov
insl
scas
and
fnstenv
inc
arpl
xchg
arpl
scas
outsl
out
xchg
rclb
push
cmp
mov
lahf
aam
sub
or
push
fstps
xor
xor
mov
jnp
fistpl
pop
cmp
sahf
dec
push
mov
insb
mov
jl
addr16
or
repz
xor
jae
mov
jmp
xchg
mov
add
adc
cld
dec
and
lcall
pop
pop
int
xor
or
add
push
sarb
out
test
push
mov
inc
pop
call
xchg
mov
repnz
inc
in
pushf
push
repz
mov
and
test
jns
add
add
cmp
iret
add
mov
cs
mov
cmc
and
pushw
aam
daa
out
clc
ds
cs
fimull
ds
test
xchg
mov
or
mov
xchg
fwait
add
and
jbe
enter
push
cmp
dec
fcmovnb
mov
xchg
test
or
jno
and
daa
popf
jl
gs
flds
test
push
frstor
ret
test
adc
jno
mov
loopne
data16
in
pop
sbb
mov
pop
cwtl
mov
push
xchg
push
jmp
outsb
mov
xchg
inc
loopne
in
push
sbb
arpl
shlb
push
mov
ds
push
sub
adc
mov
xor
fcom
lcall
in
loopne
mov
push
mov
inc
in
cmp
inc
stc
sbb
ss
sbb
xor
inc
mov
push
pop
adcl
jo
stos
mov
popa
inc
cmpl
and
popf
push
sbb
adc
adc
mov
xor
or
mov
out
adc
mov
iret
nop
testl
repnz
call
es
jle
movb
out
loope
fistpll
cwtl
push
mov
xor
push
ss
push
fs
mov
and
pushf
insb
inc
jge
jg
andb
mov
mov
shrb
les
jmp
imul
mov
sbb
cmp
mov
pop
inc
daa
popf
icebp
ret
not
sti
mov
icebp
incl
outsl
mov
cld
cmpsb
scas
mov
iret
mov
call
sub
inc
imul
jmp
add
sahf
test
xor
mov
sahf
mov
pop
pop
out
out
pop
nop
int
sub
sbb
jge
adc
rolb
shll
pop
fdivrs
sub
sub
pop
movsb
cmp
call
arpl
jnp
out
repz
iret
scas
pop
and
mov
cmp
xorl
mov
int3
push
xor
mov
call
or
lods
lret
mov
fcmove
stc
cltd
stos
imul
jae
dec
push
dec
dec
xchg
das
xor
push
stc
test
xchg
fs
add
mov
fcompl
cmp
scas
lea
cmp
mov
add
xor
ds
out
push
push
ret
cmpsl
and
xlat
insb
hlt
shrb
sbb
adc
lods
xor
adc
jbe
ja
leave
iret
ss
adc
into
shll
push
push
mov
loopne
arpl
push
add
imul
or
insb
inc
mov
notl
in
mov
mov
mov
cmp
mov
push
jae
sub
sahf
xor
and
jge
fwait
nop
inc
hlt
jno
jb
or
insl
xor
pop
sub
lods
mov
int
pop
or
xchg
addr16
aaa
pop
in
rcr
xor
lcall
cmp
rcll
sub
sbb
arpl
xchg
loop
dec
sub
push
xchg
test
leave
movsl
cmpsl
jae
rorl
inc
add
enter
push
imul
and
or
jnp
inc
shlb
adc
shll
cwtl
test
mov
fiaddl
ja
dec
jp
rolb
inc
sub
xchg
mov
lods
daa
sbb
fistps
dec
popl
in
mov
ret
movsl
ss
push
in
js
cmp
not
in
divb
mov
aam
push
imul
pop
add
js
xor
inc
cmp
mov
lods
cmp
xchg
inc
push
loope
fmuls
inc
push
pop
loopne
rcrl
mov
pop
in
jo
lcall
dec
cmpsb
and
lahf
cld
mov
xchg
push
cmpsl
xchg
dec
fstl
mov
jmp
mov
jae
mov
pop
or
or
imul
testb
dec
cmpsb
pop
mov
cmp
or
sbb
in
push
cld
push
int3
fdivl
lods
inc
mov
jbe
xchg
cmpsb
pop
mov
cmp
or
sbb
in
push
cld
push
int3
fdivl
lods
inc
mov
jbe
xchg
cmpsb
pop
mov
cmp
or
sbb
in
push
cld
push
enter
lods
inc
mov
jbe
xchg
jp
pop
mov
cmp
mov
pushf
adc
add
into
xor
jae
arpl
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
sub
sbb
or
sub
mov
clc
lock
xor
and
adc
add
push
xor
mov
sbbb
fsub
fcoms
xor
add
jo
inc
mov
mov
iret
lock
cmpsl
xchg
push
xor
sbb
push
sub
jmp
dec
cwtl
ds
sbb
push
rol
lock
insl
add
xlat
xor
mov
push
jno
pushf
fstl
fldl
cmp
clc
jbe
test
clc
and
shll
dec
xor
and
mov
testb
mov
rclb
fcoms
enter
cmp
roll
sub
xchg
or
dec
test
jl
icebp
call
xchg
push
inc
call
and
mov
push
js
add
fdivrs
shl
enter
idivl
xchg
push
stos
adc
inc
mov
enter
cwtl
mov
ror
inc
icebp
xor
rcrb
xchg
or
outsl
jo
pusha
pop
mov
mov
adcb
ret
scas
push
bound
jge
jl
or
unpckhps
dec
and
jmp
in
jmp
stos
xchg
movsl
mov
ja
js
adc
push
sub
aad
negb
mov
lods
stos
pop
inc
addr16
pusha
arpl
adc
pusha
pop
push
dec
inc
mov
nop
mov
fcom
enter
sub
sbb
or
js
push
inc
mov
nop
mov
fcom
enter
pop
mull
jmp
lea
cltd
jo
enter
sub
xchg
mov
jnp
xchg
out
inc
mov
jo
mov
mov
out
popf
xlat
add
mov
adc
dec
shlb
cmp
xchg
repnz
xchg
mov
scas
inc
xchg
cmp
jbe
push
mov
mov
imul
cmc
stos
inc
jp
and
mov
dec
sub
jp
in
pop
lret
jae
movsb
xor
fcompl
mov
bnd
dec
adc
frstor
pushf
sbb
in
clc
nop
mov
sub
cmp
xchg
pop
in
jle
jl
pop
stos
inc
sub
pop
mov
xlat
jle
mov
or
cmp
cltd
add
cmpsl
pop
dec
lcall
imul
mov
icebp
push
in
int
xor
push
je
pop
cmp
movsl
cmp
stc
push
aaa
ja
adc
gs
hlt
adc
popf
or
cmc
jbe
mov
pop
popf
xchg
cmpsl
data16
mov
ljmp
sbb
int3
inc
adc
or
inc
inc
mov
or
add
dec
jmp
adc
pop
hlt
jl
adc
lea
mov
xor
daa
andl
shr
mov
push
jno
movsl
mov
sub
sub
sbb
adc
add
sub
mov
lods
roll
ficompl
adcb
sub
data16
lret
mov
leave
andb
dec
loop
adc
cmp
in
mov
inc
repnz
dec
int
das
enter
add
enter
cld
pop
cmpsb
call
xchg
cmpsl
loope
pop
push
loope
fnstenv
in
xorl
sbb
pusha
stc
pop
xchg
inc
mov
data16
cs
inc
addr16
aaa
sbb
push
pop
mov
and
push
or
cmp
fisubs
add
lahf
xlat
cmp
rcl
sahf
movsb
sub
fs
imul
xchg
inc
pop
sub
test
popl
sbb
mov
in
or
xor
inc
sub
je
adc
jg
adc
add
scas
ds
sbbl
cli
adc
cmp
mov
xchg
nop
sarb
xor
dec
movsl
add
and
sub
adc
pop
lcall
aad
loopne
xchg
fadds
mov
loopne
xchg
mov
inc
mov
in
mov
xchg
add
inc
push
daa
xchg
mov
daa
jg
xchg
ret
idivb
aaa
xor
repnz
pop
imul
push
xor
jmp
sub
jns
bound
push
push
mov
sbb
jl
jg
dec
std
scas
cmp
gs
movsl
imul
jecxz
ficomps
mov
call
out
adc
iret
jb
fsubrl
mov
cltd
ret
test
mov
cld
dec
jecxz
jge
add
shll
jo
das
adc
pop
mov
mov
es
fisubs
mov
sti
mov
ret
dec
adc
jns
xchg
mov
push
cld
jecxz
or
mov
add
out
ss
push
fisttpll
pop
loop
mov
pop
and
inc
mov
out
inc
mov
in
outsb
sarb
icebp
push
loope
ds
int3
insb
cs
pop
xor
mov
es
jg
ret
and
mov
inc
sub
mov
jbe
xlat
fmull
sub
mov
xchg
jmp
cmp
mov
cld
movsb
sub
pop
add
jmp
ds
and
pushaw
adc
icebp
cmp
in
dec
sub
xchg
pop
addr16
mov
enter
inc
movsb
xor
inc
dec
rol
inc
or
pushf
sar
mov
mov
and
and
inc
inc
push
xchg
mov
sub
xchg
sbb
imul
push
adc
sbb
mov
cmp
sti
inc
test
in
ja
fcomp
adc
push
adc
call
and
adc
xlat
add
insl
mov
fucomip
push
sub
into
sarb
or
and
or
xor
jecxz
mov
imul
lock
insb
fcmovb
xor
inc
lods
mov
cwtl
sbb
inc
and
sarl
fbstp
or
outsb
jb
jmp
mov
jne
icebp
aaa
mov
cld
pop
je
pop
flds
add
push
lret
incb
sti
enter
mov
pop
sub
pop
bound
repz
gs
cld
js
xor
test
push
xchg
and
push
pusha
cld
add
pusha
fdivr
nop
fwait
or
mov
ret
add
jno
xchg
int
int3
push
cs
xchg
sbb
add
adc
jae
cmp
std
insb
mov
jnp
fcomps
or
dec
sahf
or
jo
jno
jle
sbb
js
mov
adc
movsl
cmp
and
mov
aam
fcmovu
mov
inc
and
dec
push
pushl
cmp
cltd
cmp
jg
cmp
or
jecxz
pop
dec
lea
pop
mov
aaa
bound
loop
push
fdivl
cli
mov
fidivl
enter
xchg
sub
jp
icebp
mov
sub
dec
dec
ss
add
stc
push
icebp
adc
jle
imull
xor
inc
repnz
sbb
and
test
data16
push
test
stc
arpl
out
sub
lcall
sar
xor
into
jecxz
push
adc
hlt
jnp
jnp
bound
inc
mov
dec
or
rcll
sub
notl
push
inc
jge
mov
cmc
gs
and
popf
jecxz
push
adc
out
mov
fmul
test
mov
adc
outsb
sub
dec
push
out
fnstsw
fwait
shlb
mov
sbb
repnz
mov
mov
jg
popf
pop
adcb
mov
nop
dec
dec
imul
imul
push
xchg
push
cli
dec
push
sub
push
xor
mov
pop
cmc
mov
cmp
sbb
push
or
pop
mov
mov
fwait
mov
pop
mov
adcb
pop
inc
or
push
in
fs
out
je
aad
jb
mov
jle
test
sbb
mov
mov
jae
call
sub
dec
push
push
push
xchg
jns
rcll
cmpsl
fdivp
push
lds
pop
out
add
xor
ret
mov
sahf
or
jl
jmp
repnz
sbb
test
mov
mov
mov
lock
push
cli
sahf
div
shlb
arpl
mov
lds
das
ficomps
ficoml
xchg
fldenv
lea
hlt
pusha
das
mov
jbe
mov
mov
int3
jae
fstp
mov
nop
in
lret
out
insl
mov
repnz
hlt
mov
fwait
ret
push
out
test
sbb
lret
xor
jge
js
and
loop
sub
xchg
xlat
push
inc
in
iret
push
out
rep
cs
stc
inc
pop
aas
mov
fbstp
inc
mov
sub
cwtl
mov
or
sbb
pop
scas
scas
jnp,pt
mov
rcl
lea
jae
xor
pusha
dec
push
lcall
inc
or
cmp
enter
roll
and
jne
loopne
push
repz
or
dec
ret
sub
jle
les
jo
sub
btc
pop
in
loop
and
mov
push
mov
mov
add
dec
outsl
push
inc
push
cmovne
enter
movsb
shrl
test
cmpsb
sub
aam
mull
je
sbb
cmpsb
pop
jle
pop
jg
xor
xor
les
dec
and
adc
jns
loop
sub
push
dec
sbb
jmp
jmp
sub
mov
test
xor
cwtl
sahf
hlt
fcmovb
add
jno
bound
lods
push
fsubl
loope
mov
fbld
pop
add
ret
and
inc
imul
mov
stos
xor
add
and
mov
adc
daa
es
into
sbb
gs
rclb
sysenter
sahf
dec
xchg
flds
xchg
movsb
mov
push
pop
out
pop
jns
xor
popa
xchg
push
sbb
pop
cwtl
jl
xor
push
insb
inc
or
mov
fcmovb
testl
dec
mov
mov
jge
outsb
push
jl
ret
cmp
xchg
inc
mov
mov
cmc
cmp
push
aas
rcrb
mov
mov
cwtl
dec
mov
into
sbb
shlb
jge
inc
push
sahf
test
leave
mov
push
loop
sbb
sub
pop
jecxz
xor
sub
test
les
sub
adc
add
movsb
and
jge
mov
mov
pop
lea
push
dec
add
in
js
mov
push
cmpsb
movsl
pop
mov
loop
lods
and
dec
pusha
clc
jo
cwtl
or
jle
mov
enter
sub
cmpsb
negb
xor
pop
cmp
jnp
jp
daa
inc
lds
mov
in
inc
pop
pushf
arpl
out
lea
mov
inc
jge
rol
ret
clc
push
leave
or
mov
or
es
inc
or
ret
test
jns
or
insl
jo
jo
pop
sub
mov
test
jl
or
jb
and
or
shll
aad
cmp
push
mov
jbe
cwtl
jl
cli
popf
fdivl
push
cmp
mov
cli
cmp
jo
popf
mov
fs
jmp
xchg
jbe
cs
xchg
aas
push
add
mov
pop
sub
inc
loope
int
pop
mov
cmp
jae
les
mov
rcrb
int3
mov
int
std
inc
cmp
ficoms
imul
add
sub
out
xchg
push
mov
sub
lcall
xchg
hlt
and
cld
adc
call
or
mov
in
sub
cltd
sbb
adc
xchg
loope
cmp
mov
mov
xchg
and
cmp
inc
mov
jae
pushf
scas
dec
scas
add
int
pop
or
das
cmp
mov
xchg
add
lds
lock
adc
mov
pop
jl
push
jecxz
or
loope
lods
xchg
or
sbbl
sbb
push
sbb
mov
sarl
ja
add
das
inc
inc
jle
pop
inc
sti
pop
sub
test
xchg
mov
dec
and
inc
std
jge
inc
cld
mov
test
ds
mov
mov
lret
push
push
push
mov
add
and
in
push
inc
adc
adc
cli
pop
cmp
push
sbb
in
adc
call
movsl
shl
dec
je
popf
out
fwait
nop
in
add
cmp
dec
aaa
and
loope
pusha
inc
aas
and
cmpsb
mov
sbb
sbb
lahf
lahf
pushf
int3
int3
sub
in
mov
add
pusha
inc
push
jmp
sbb
std
cld
mov
sarl
iret
shl
and
mov
int
jp
lea
test
inc
mov
mov
adc
stos
xchg
inc
or
hlt
dec
inc
lret
movsl
cli
xorb
out
ss
mov
fidivrl
arpl
or
test
stc
xchg
fnsave
adc
mov
lock
enter
dec
inc
popa
add
jns
pop
push
and
xchg
loopne
jmp
mov
fsubs
cwtl
mov
cli
and
inc
dec
negl
mov
nop
stos
pop
out
cltd
movsb
jp
fsubrs
push
bnd
jns
xor
aas
hlt
inc
xchg
and
inc
iret
fsubr
pop
insl
mov
subb
xchg
imull
inc
scas
jbe
lea
fidivs
ret
insb
push
insl
lock
pop
lret
notl
ret
das
xchg
ret
ds
aaa
daa
imul
jl
mov
out
arpl
push
xlat
jae
arpl
mov
add
pushf
sbb
data16
std
int
sub
or
push
call
loop
lret
movsl
mov
mov
and
test
loope
loop
jae
lret
insb
adc
or
aam
pop
sbb
out
pop
not
lods
inc
jbe
int
std
dec
pop
pop
push
movsl
sub
in
xchg
push
bound
xchg
movb
or
jecxz
push
cmp
dec
cld
sub
insb
sbb
cli
mov
icebp
dec
pop
ljmp
jl
rcrb
movsb
jno
mov
mov
push
movsl
pushf
pop
ret
insl
push
mov
lret
mov
xchg
fistpll
xor
mov
fadd
aaa
nop
insb
push
mov
lock
sarl
push
cmpsl
ljmp
adc
nop
out
aas
pop
dec
cmpsl
mov
jle
push
jle
cwtl
sbb
mov
jl
adc
lret
mov
and
cmc
push
ret
loop
ret
push
rcr
fstl
cltd
jo
cmp
mov
sti
arpl
jb
cmp
and
jmp
shll
nop
out
sbb
jns
shll
lds
mov
lock
xchg
cmc
mov
jmp
mov
push
adc
nop
movsl
xchg
addb
or
mov
cmp
mov
and
xor
adcb
pop
cmp
mov
inc
xor
lcall
rcrb
jae
add
int3
fiaddl
aaa
jne
repnz
loopne
fistpll
inc
jecxz
jmp
inc
repnz
int
imul
lods
mov
push
adc
jb
mov
mov
popf
adc
icebp
es
jg
push
mov
repnz
inc
inc
mov
push
ljmp
dec
sub
adc
addl
mov
int3
add
mov
adc
push
pop
movsl
cmc
add
cltd
and
outsb
aaa
cmp
insl
data16
cmp
add
sahf
adc
and
and
mov
dec
dec
jl
stc
and
add
sub
and
out
pop
cwtl
push
pop
addr16
mov
jg
mov
outsb
push
dec
ja
outsl
mov
sahf
push
push
push
xchg
popf
dec
je
xchg
add
arpl
scas
xchg
out
adc
jne
ret
dec
nop
shrl
mov
aad
jmp
mov
js
fs
mov
pop
jns
iret
push
lcall
fs
pop
nop
mov
jnp
add
hlt
insl
jmp
mov
lahf
fs
orl
and
in
jo
mov
jp
das
jo
scas
dec
in
xchg
cs
loopne
jle
fwait
push
roll
mov
and
sbb
fisttpll
rclb
invd
mov
add
and
dec
xchg
xchg
lahf
lret
outsb
add
mov
xor
or
mov
out
sbb
adc
ljmp
jb
lret
neg
cmpsb
push
xchg
sub
shrb
pop
pop
loop
loopne
cld
ficompl
into
cmp
ljmp
adc
cmc
les
cmp
comiss
pop
add
cli
mov
add
xlat
lret
pop
cmpsl
movsl
push
lahf
cmc
jg
int3
mov
out
sub
int3
popa
add
ret
xchg
dec
mov
or
popf
das
ljmp
lock
push
insl
mov
xchg
and
cmp
mov
stos
or
aaa
lcall
add
pushf
inc
and
clc
jns
xchg
jnp
andl
adc
les
lds
cmpsb
aas
jge
add
adc
ds
adc
sbb
lods
mov
adc
lds
xor
pop
mov
cmp
mov
sbb
pusha
mov
and
xchg
push
mov
int3
jno
aas
fnstenv
ret
out
lods
xchg
sarb
cmpsb
mov
and
push
scas
cmp
shlb
fimuls
push
or
xchg
adc
xlat
ficomps
adc
leave
int
cmp
sti
jle
push
mov
push
je
cwtl
cmp
adc
movsb
loop
rcr
nop
int3
mov
stos
popf
leave
out
sbb
mov
dec
movsb
xchg
fstps
push
mov
mov
and
cli
pop
and
pop
mov
aam
out
addr16
or
fwait
dec
inc
xorb
aaa
jae
inc
push
cli
sub
scas
adc
push
mov
cli
dec
cs
dec
or
ret
test
clc
mov
das
mov
cmpsb
aaa
clc
imul
pushf
pop
arpl
lock
pop
bound
pop
mov
push
fistl
push
insb
jne
xchg
xchg
imul
sbb
push
push
inc
test
ds
mov
dec
fcoms
or
lds
data16
test
dec
sti
inc
mov
pop
in
sbb
push
jl
and
int
shll
inc
sub
mov
jae,pn
jle
loope
dec
jae
mov
icebp
pop
cltd
mov
js
addl
stc
ret
jae
es
loop
mov
dec
add
mov
cmp
pusha
cmp
sti
stos
dec
sub
andl
jo
adc
push
sbb
push
fsubl
sbb
cmpsl
xchg
dec
add
loope
jg
push
jl
sbb
push
insl
mull
cltd
push
out
shrl
out
nop
movsl
add
jb
bnd
popa
dec
jp
xor
mov
mov
xchg
xor
xor
pushf
call
dec
sbb
pushf
pop
shll
push
lods
addl
cmp
xor
sbb
dec
and
jp
push
or
hlt
fidivs
ja
push
mov
sbb
fnsave
cwtl
mov
pop
xor
mov
fnstsw
ret
out
adc
or
lods
mov
adc
sub
sub
int3
dec
adc
loop
aam
lock
adc
fiaddl
mov
mov
divb
lock
mov
shlb
jnp
xor
addb
lods
cmp
das
ja
sbbl
jb
fistl
pop
cmp
int
lds
mov
xchg
movsl
push
pop
mov
icebp
loop
shl
and
xor
mov
gs
cmp
and
add
ret
xor
push
jno
out
movsb
call
dec
fistpll
sti
out
pop
ss
mov
push
shrb
adc
cltd
fistpl
xchg
ljmp
outsl
enter
rcll
xor
cmp
xchg
imul
jge
adc
sub
or
pop
adc
ja
mov
sub
and
clc
add
hlt
mov
xchg
xchg
push
imul
jl
push
faddl
ret
sub
dec
push
gs
mov
pop
inc
es
in
dec
mov
inc
daa
cmp
out
lods
stc
inc
mov
call
into
sbb
or
mov
cmp
xchg
xchg
mov
mov
mov
out
sub
in
sti
push
pop
imul
pop
jecxz
dec
ljmp
pop
sahf
insl
clc
sbb
fdivrp
adcb
pushf
lods
lods
inc
rorb
insb
ss
cwtl
xor
decb
pop
jbe
xor
dec
xor
andl
das
mov
ficompl
iret
pop
jns
inc
or
leave
pop
scas
sbb
pop
in
jmp
shl
das
inc
adc
push
mov
and
addr16
std
pop
inc
sub
js
adc
cmp
int3
sti
mov
pop
notb
loope
repnz
xor
push
adc
mov
sbb
cmp
fistl
rcrb
in
data16
and
sbb
push
fmull
and
js
add
shrl
stos
call
cs
dec
or
outsl
pop
hlt
mov
jmp
shll
pusha
mov
into
xchg
pusha
test
fldl
test
cld
adc
xor
imul
push
or
xor
xchg
lock
mov
sbb
dec
test
xchg
and
cli
sti
pop
and
xchg
xchg
addr16
in
mov
jle
cmp
mov
mov
jle
jb
les
xchg
add
les
cld
popa
jle
nop
out
sub
jmp
push
lahf
popa
inc
mov
mov
mov
lret
mov
arpl
mov
fs
clc
rorl
pop
cmp
jns
sub
call
arpl
cli
mov
pushf
add
imul
fadds
dec
xchg
inc
pusha
test
fs
xchg
or
pop
mov
pop
xchg
mov
add
out
mov
movsb
pop
fcmovnu
ja
xchg
cmc
repnz
rcl
aaa
or
ss
imul
and
inc
leave
xchg
jo
mov
or
mov
add
mov
and
gs
xchg
push
mov
cmpsb
cmp
es
sbb
pop
jl
xchg
mov
pop
mov
lock
jmp
pop
std
add
test
push
mov
jne
scas
or
ret
out
out
xchg
cli
int
in
flds
stc
xor
in
iret
and
les
adc
enter
or
js
push
inc
mov
nop
mov
fcom
enter
sub
sbb
or
js
push
inc
mov
nop
mov
fcom
enter
sub
push
push
inc
mov
nop
mov
fdiv
lret
xor
and
adc
add
push
inc
inc
dec
push
or
nop
mov
js
pop
daa
das
aaa
aas
je
sub
inc
or
xor
or
js
dec
mov
cwtl
mov
fcoms
sub
sbb
aaa
js
push
idivl
mov
xchg
cmpsl
call
iret
cmp
or
js
push
xchg
mov
mov
mov
sbb
popa
push
jo
or
pop
daa
insl
int
sub
mov
aam
mov
lock
adcl
inc
ret
js
in
lcall
push
push
lea
in
dec
clc
sti
and
cmp
and
jo
call
mov
rol
cmpsl
in
loop
pop
pop
mov
or
xor
imul
inc
out
push
sbb
push
xchg
rolb
js
dec
fiaddl
pushf
xor
xlat
orb
call
mov
mov
mov
les
xor
xchg
fadds
push
sbb
sarl
push
xor
testl
push
cmp
imul
sbb
pop
sbb
shll
mov
loop
cmp
dec
and
adc
and
xor
nop
repz
xlat
lret
mov
jmp
sbb
ss
insl
fs
daa
push
idivl
mov
fadds
sub
inc
or
js
push
idivl
mov
fadds
inc
xchg
cmc
xchg
clc
or
xchg
movsl
or
fsubr
in
sub
inc
push
bound
mov
icebp
or
incb
push
gs
mov
sar
movntq
cmp
push
cmpb
add
out
add
sbb
sbb
sub
gs
mov
jp
mov
pop
hlt
fists
adc
leave
int3
scas
xchg
dec
sahf
or
cmp
pop
push
inc
xchg
les
aad
jno
xchg
imul
daa
hlt
pop
ds
in
jg
nop
nop
add
scas
fstpl
sbb
std
sub
mov
sbb
inc
jecxz
mov
in
push
stc
or
inc
inc
mov
std
jne
sbb
mov
dec
sub
dec
movsl
ljmp
das
bound
mov
shlb
decl
das
cmp
mov
cmp
sbb
mov
lock
cmp
push
ss
mov
test
sbb
push
in
mov
adc
xor
aas
add
ss
or
pop
fmull
jp
or
lea
pop
pop
inc
pop
add
into
ss
pop
jbe
add
and
ret
xlat
mov
and
cmp
pop
subps
sbb
push
jbe
and
lahf
jnp
in
bound
fldcw
fisubrs
jmp
popa
push
xchg
lahf
add
xor
loop
dec
shlb
mov
call
jb
mov
sbb
adc
pop
enter
lock
xor
inc
or
test
push
mov
mov
xlat
notb
inc
cltd
std
js
dec
jb
dec
dec
sub
add
mov
xor
xlat
add
fdivr
cld
je
mov
ret
repnz
push
divl
lahf
jne
xchg
aas
sub
pop
je
and
jge
sub
sub
popf
mov
shrb
sub
xor
jecxz
jp
sub
test
xchg
mov
test
loopne
inc
popa
call
stos
outsb
push
adc
mov
xor
pop
or
dec
cmpsb
sti
jnp
or
sbb
xor
and
test
sub
fmul
xchg
mov
pop
jl
dec
add
cmp
add
ret
push
imul
iret
fidivrs
xor
inc
mov
cmp
push
push
loope
jecxz
notl
sti
cs
inc
adc
and
add
mov
sbb
jle
stc
mov
xor
sti
sbb
push
adc
loope
ret
jp
push
xor
inc
cmp
cmpsb
aam
je
lea
icebp
xor
or
mov
fildll
mov
mov
test
sub
jl
lahf
jmp
adc
filds
and
and
jne
movsb
ljmp
lds
mov
mov
adc
adc
and
mov
push
fs
iret
pop
dec
jl
stos
inc
pop
or
mov
sbb
test
xchg
test
or
in
out
mov
loopne
inc
jae
inc
repz
cmp
mov
arpl
mov
notb
stos
mov
mov
inc
inc
lods
clc
inc
lahf
dec
enter
sub
add
sbb
mov
mov
xor
xor
out
repz
dec
ret
sbb
dec
or
sbb
and
cmp
lea
out
shrl
inc
fdivrl
test
jbe
shll
arpl
mov
adc
sbb
add
cmp
in
xchg
fcoms
or
xlat
push
psrad
push
cmp
add
add
nop
int
fisttpll
and
sub
cmp
scas
sbb
mov
outsl
rcrl
adc
enter
fiadds
inc
mov
jb
icebp
push
jp
rcrl
or
or
cmp
dec
add
loop
mov
pop
stos
jbe
out
mov
fstp
sti
add
fs
and
push
mov
jbe
lock
xchg
adcl
dec
enter
push
jge,pt
jbe
fstps
push
cltd
call
bnd
pop
or
jmp
aaa
mov
dec
adc
push
stos
out
inc
scas
push
adc
icebp
test
lods
repz
dec
mov
xchg
xor
xchg
mov
sbb
lahf
xor
push
lds
sub
pop
testb
test
les
out
add
push
cld
dec
inc
dec
adc
xorb
lcall
add
or
mov
daa
add
jmp
lea
lahf
jne
fstps
iret
cmc
rcl
xchg
mov
jmp
sub
adc
push
rolb
cs
mov
dec
mov
fcoms
sahf
test
test
daa
dec
nop
rcrl
ss
rorb
lods
fcmovnb
mov
push
xor
sub
mov
popf
push
lods
jno
mov
stos
or
fiaddl
cmp
mov
sbb
jp
pop
jae
popf
int3
gs
popf
mov
fisubrs
add
ljmp
cs
les
mov
pop
mov
push
and
jb
dec
lds
jp
or
sbb
or
mov
inc
sbb
movnti
jb
sub
push
testl
push
sahf
jecxz
sub
xchg
in
pop
sub
in
cmpsb
cmc
xchg
dec
mov
sub
sbb
xor
outsl
inc
and
jge
leave
rol
or
outsl
mov
push
pop
adc
loope
gs
and
and
lahf
in
jo
data16
inc
adc
sub
xchg
movsl
leave
sbb
xchg
fistl
rorb
pop
jp
es
flds
push
in
xor
stos
aad
mov
shll
cmp
jg
cmpl
push
xchg
mov
jno
xchg
and
sbb
or
sub
inc
mov
lock
gs
in
mov
inc
test
mov
xchg
mov
jae
adc
xchg
xchg
mov
jg
loopne
cmpb
mov
sti
pop
push
insb
hlt
and
out
mov
mov
bound
xchg
adc
mov
mov
and
or
xchg
mov
and
pop
xchg
call
or
push
mov
loopne
pop
test
mov
mov
cltd
adc
jg
fildll
movsb
sbb
cwtl
int
xchg
or
sarl
ss
sahf
iret
divl
adc
and
ja
mov
mov
les
push
sti
dec
push
sub
int
inc
pop
call
adc
push
lods
dec
mov
pop
cli
add
jecxz
xchg
mov
add
push
outsl
or
pop
push
arpl
insl
adc
push
pop
and
cmp
outsl
test
pop
loopne
nop
popa
cmpsb
ret
pop
and
adc
jne
push
sub
dec
xchg
lahf
je
sbb
and
dec
cltd
and
fs
sub
lret
das
lret
and
clc
stc
sub
pop
stos
mov
mov
js
in
data16
mov
pop
nop
mov
ffreep
lret
mov
ja
or
push
out
inc
add
rcrl
jecxz
rorb
mov
pop
movsb
fs
in
mov
push
push
jb
lret
cwtl
add
les
jg
orb
lret
xchg
mov
outsl
sti
pop
mov
stos
sbb
xor
mov
test
pop
sbb
push
enter
andl
bswap
xchg
pop
mov
in
faddl
icebp
xor
xor
mov
stos
inc
in
shl
mov
sub
sbb
out
loopne
mov
push
sti
aaa
push
pop
push
xor
jl
push
jae
bound
or
pusha
cmp
dec
dec
sti
test
and
cltd
test
mov
xor
jecxz
jb
mov
cmpl
pop
push
enter
xchg
inc
shll
or
pop
std
fucom
xlat
jns
pop
lods
stos
lret
movsl
xlat
daa
jo
stos
add
ret
or
mov
loop
pushf
ret
ss
bound
divb
sub
push
je
inc
or
filds
hlt
mov
in
cli
sbb
imul
jmp
clc
pop
outsl
mov
cld
push
fadd
mov
shrb
and
adc
or
xchg
mov
adc
sahf
mov
sbb
sub
lret
cmp
dec
mov
pop
fwait
loopne
jg
pop
xor
stos
adc
test
pop
sti
push
std
es
test
jo
mov
fidivl
mov
mov
lret
jecxz
js
add
outsb
stc
aam
clc
inc
cmp
xchg
mov
add
mov
push
xchg
enter
neg
xor
lahf
mov
loopne
incl
cwtl
sbb
cwtl
loope
cli
inc
cmp
mov
ror
inc
push
mov
push
loopne
dec
pop
in
adc
enter
cmp
jle
add
jne
jmp
xor
ret
ret
pusha
sub
xor
push
dec
inc
mov
movsb
sahf
lret
scas
add
jne
ja
pusha
hlt
sbb
insl
sbb
inc
ja
sbb
arpl
cmp
sub
lea
xchg
jle
cmp
jae
fimull
or
cwtl
pop
sbb
push
push
mov
sbb
gs
jns
outsb
inc
adc
out
lea
pop
pushf
in
adc
inc
dec
sub
test
loope
stc
add
inc
mov
jge
outsl
sub
lcall
repnz
inc
lods
or
cmp
mov
push
or
mov
jb
cmp
shl
imul
test
cmpb
cs
repnz
psubusb
inc
arpl
and
aaa
xlat
inc
addr16
shlb
xor
out
mov
lcall
loop
add
ja
hlt
xlat
in
lock
shrb
pop
mov
and
lods
vpcomud
xchg
mov
fmuls
xchg
jb
sub
mov
adc
aad
loope
mov
mov
xchg
push
movsb
frstor
andb
punpcklwd
lret
bound
jns
cmp
fcompl
adc
adc
aas
mov
dec
in
and
sub
pop
les
das
fmull
or
add
inc
pop
xchg
popa
or
mov
inc
mov
add
pop
or
sti
flds
int
icebp
insb
push
xor
lret
fstl
xchg
xchg
out
lods
mov
jb
xchg
mov
cmc
loope
addr16
sub
push
pop
cmp
adc
hlt
mov
std
sahf
notb
rcrb
add
jmp
scas
cmp
insl
aam
sub
and
popf
lahf
fs
popf
popf
mov
pop
in
stc
cltd
dec
in
out
dec
arpl
mov
loop
addl
in
xor
test
int3
mov
add
movsl
mov
or
push
hlt
or
jae
mov
das
push
gs
outsb
inc
sub
fwait
dec
outsb
xchg
jb
pushf
jge
dec
push
test
cwtl
add
jo
add
and
xchg
ss
bound
xchg
push
mov
inc
wbinvd
lret
test
jp
sub
mov
ja
roll
xchg
stos
dec
mov
mov
lock
or
mov
xchg
sbb
sub
and
push
jbe
fwait
dec
jb
add
popa
add
loope
push
fistl
rolb
arpl
cltd
es
push
test
dec
cltd
cli
in
ret
hlt
sbb
jl
push
cmp
inc
add
and
add
mov
xchg
add
mov
es
loopne
scas
ficoms
sbb
xchg
jb
sti
faddl
dec
push
sbb
adc
sub
dec
sub
dec
sbb
xchg
sbb
xchg
xorl
je
cmpsl
pop
lods
sub
je
add
lods
jo
push
cld
inc
mov
add
xchg
adc
cltd
adc
jg
fs
mov
lret
add
addl
shlb
test
std
rcrl
cltd
out
fs
cwtl
lret
mov
xchg
inc
loopne
adc
jmp
mov
dec
cmp
xchg
cwtl
xchg
rcrl
jae
mov
sub
xlat
icebp
repz
push
nop
out
icebp
sbb
or
add
ret
adc
mov
pop
rorl
jl
inc
loope
movsl
push
pusha
lret
push
lret
iret
xchg
xchg
js
std
or
sbb
dec
pop
pop
sbb
inc
push
sub
jne
stos
jecxz
jle
fdivrs
jo
pop
adc
pop
dec
loope
gs
sbb
stos
arpl
leave
xchg
xchg
jno
jno
add
xor
lcall
xchg
mov
dec
sub
inc
and
push
pop
in
inc
stos
push
jmp
xor
aad
leave
fimuls
rcrl
jmp
in
fwait
rcrl
push
sub
sbb
jge
dec
or
loope
ds
stos
outsl
cmc
stc
mov
and
mov
inc
loop
xor
jo
mov
leave
mov
int3
js
hlt
out
dec
repnz
into
int
inc
js
movl
or
fiaddl
clc
jmp
nop
and
pushf
push
lcall
dec
popf
push
repnz
sahf
mov
jne
lret
or
mov
jnp
lcall
sub
mov
sbbl
fimuls
push
pop
popf
test
lods
sar
dec
adc
les
ljmp
lods
clc
insl
movsb
adc
mul
cld
cwtl
push
mov
jae
lea
enter
jg
cmc
jmp
mov
gs
dec
mov
adc
test
push
je
jne
xor
imul
dec
outsl
lcall
mov
mov
jl
fsub
mov
xor
dec
mov
push
in
les
dec
xor
mov
jae
cwtl
ficoml
out
mov
ficompl
push
cmpl
fnstsw
pop
pop
movsb
mov
push
daa
inc
jmp
mov
shl
iret
dec
xor
fmulp
cmp
icebp
fwait
push
stc
inc
sbbb
push
aas
mov
and
je
jb
icebp
cmp
lea
jne
inc
cmc
jbe
mov
pop
out
mov
pop
push
mov
lock
mov
jp
mov
lods
cmpsl
nop
adcb
sbb
outsb
xor
movsl
pop
leave
loope
lods
lret
int
sbb
pushl
adc
xchg
mov
cs
cmp
scas
jg
pop
add
pop
adc
dec
rcrl
loop
add
int
and
add
pop
mov
test
mov
pop
jns
insl
dec
sar
inc
pushf
mov
mov
jne
test
test
enter
in
push
mov
ljmp
sarl
or
push
jno
inc
cmp
repnz
cmp
mov
jmp
sbb
rcll
sub
out
or
push
xchg
lahf
pop
push
mov
loope
ljmp
mov
mov
cltd
int3
dec
push
and
lock
sti
jo
clc
or
loop
fistl
loopne
sub
ds
dec
jg
mov
rcrb
dec
sbb
daa
pop
sbb
add
xchg
sbb
jge
mov
inc
inc
inc
and
xchg
sbb
jl
stos
cmp
pop
or
push
push
jl
cltd
mov
sub
repnz
jnp
xchg
jge
push
test
sub
add
ficompl
xchg
xchg
cltd
out
movsb
push
dec
addr16
and
gs
lahf
or
stos
mov
xchg
push
jnp
xor
sbbb
adcb
mov
outsb
in
mov
ljmp
xor
push
or
xor
dec
popa
movsb
sahf
adc
testb
jns
mov
cmc
adc
jns
pop
sbb
cmpb
mov
or
mov
scas
fnstsw
pop
movb
xor
pop
xorb
xor
scas
push
add
fwait
sub
xchg
int3
stos
add
add
out
add
popa
add
call
cmp
sub
xchg
dec
out
rorl
xor
nop
inc
int
repz
jecxz
addl
addr16
and
push
mov
outsl
push
and
mulb
sti
mov
lcall
jl
stos
adc
xchg
pop
out
shll
xchg
aam
sub
outsl
mov
jns
jle
jae
in
xchg
ss
sti
mov
das
mov
mov
mov
lret
xor
sub
mov
out
mov
xchg
or
mov
mov
mov
in
jecxz
in
mov
stos
dec
jecxz
int
jb
push
dec
inc
push
jle
lcall
adc
cli
sbb
or
mov
js
sub
mov
xlat
add
adc
sub
out
or
sub
lret
stos
mov
rcrl
inc
and
iret
inc
jp
clc
fimull
cmc
or
sub
push
sbb
out
jne
mov
xchg
add
mov
jo
jg
ds
fildll
shll
das
call
xchg
addr16
pop
in
cmc
cmp
sbb
sbbb
cmpsb
jnp
xor
push
mov
sbb
or
negb
iret
ds
movsb
xor
out
out
outsl
mov
push
mov
xchg
adc
inc
mov
call
repz
pop
add
mov
inc
clc
lock
js
outsl
ret
mov
fdivr
lods
clc
lea
inc
sub
xchg
rorl
add
inc
ja
ret
test
daa
jno
mov
mov
adc
add
ffree
mov
lods
outsl
or
ja,pn
xor
popa
mov
lds
jmp
test
add
stos
pop
and
pop
enter
sbb
fsubl
push
test
scas
sub
push
sbb
push
add
iret
out
add
jl,pn
call
mov
dec
scas
pop
ror
dec
mov
loop
into
sbb
out
jmp
and
jle
fs
jno
jecxz
or
jbe
out
icebp
or
inc
sbb
ss
push
pop
cltd
fwait
sarl
cwtl
fisttps
and
jns
jp
scas
fwait
fs
xchg
jae
mov
inc
inc
ds
inc
sahf
lcall
mov
and
mov
or
inc
iret
fs
jmp
in
outsb
das
addb
cs
pop
sbb
add
sub
mov
mov
mov
and
jecxz
sbb
mov
mov
test
stos
or
mov
out
test
mov
in
xchg
cmp
mov
inc
xchg
xchg
sbb
dec
or
mov
fbld
xlat
mov
inc
mov
sti
jb
das
in
stos
xchg
pop
inc
enter
dec
loope
leave
aas
testl
inc
ljmp
or
les
aad
add
adc
sbb
mov
test
fcmovu
push
sbb
orb
inc
in
pop
sbb
xchg
dec
in
inc
push
adc
xor
sub
mov
stos
push
dec
call
test
jb
push
scas
mov
pop
mov
inc
pop
mov
cltd
and
aaa
dec
lcall
repnz
or
ja
icebp
out
adc
fisubrs
imull
sbb
cmp
push
inc
lcall
jg
mov
clc
dec
mov
jge
cmp
push
add
pop
or
jmp
cmp
hlt
dec
xor
push
push
pop
jb
inc
sahf
mov
dec
jmp
mov
jge
fdivl
test
push
adc
iret
mov
xlat
fdivrs
inc
out
ror
outsb
mov
stos
dec
mov
inc
insb
addr16
sub
rcr
lods
inc
mov
rcrl
sbbl
xchg
mov
into
test
or
lods
pop
stos
mov
mov
fiaddl
push
xor
add
ss
lcall
int3
and
outsl
out
xchg
test
fadd
mov
scas
aaa
xchg
sub
bnd
call
mov
add
mov
in
mov
and
xor
outsl
cmp
or
jns
mov
mov
shll
xor
popa
push
add
lahf
ja
aas
sbb
das
pop
xchg
inc
enter
sbbl
mov
ds
cmpsl
xor
mov
stos
ror
aam
push
movsl
mov
or
ret
inc
jg
add
jae
xchg
xchg
xor
fldcw
jg
or
in
lret
into
add
mov
test
into
add
adc
jmp
int
inc
sub
sbb
aaa
js
push
idivl
mov
fadds
sub
inc
or
js
push
idivl
mov
fadds
sub
sbb
cmpsl
js
push
idivl
mov
fsubrs
arpl
cmp
or
js
push
idivl
inc
jo
pop
push
jo
lahf
and
out
xor
xchg
xchg
adc
dec
aad
in
cmc
jg
adc
mov
gs
jne
test
mov
lds
in
cmc
jg
xchg
adc
cmpsb
inc
push
divl
test
mov
aad
sarb
lds
cmpsb
xor
je
and
and
push
mov
ds
test
imul
mov
jmp
daa
enter
push
and
sbb
pop
aas
dec
aas
xchg
lret
mov
movsb
xor
jo
sbb
jl
adc
sub
cmp
xor
xchg
cmc
jg
fbstp
lahf
out
xor
cmp
jne
jne
sbb
inc
iret
dec
rclb
jle
push
mov
jle
push
enter
jne
cltd
mov
popf
pop
sub
aas
xchg
daa
push
rcrb
outsl
cmc
cmpb
in
jg
scas
lret
cmc
fidivrs
rcl
jb
push
rorb
push
cmp
das
and
sub
nop
imull
adc
movsl
inc
iret
push
fbld
jne
test
xchg
pop
movsl
ss
lds
dec
in
cmc
sbb
jbe
arpl
cmp
cmc
data16
jp
push
inc
and
jae
popa
lahf
inc
fbstp
mov
xor
fcomps
jl
cmp
lahf
sbb
adc
lret
push
fbld
jne
test
xchg
pop
movsl
das
mov
lds
pop
in
cmc
jg
adc
mov
gs
jne
test
xchg
pop
movsl
das
mov
lds
pop
in
cmc
jg
je
mov
repnz
mov
ss
inc
je
movsl
fdivs
in
xor
inc
mov
shl
or
mov
mov
or
lret
xchg
enter
push
pop
or
add
shl
pusha
jmp
lret
mov
in
pop
sub
fistpl
adc
pop
jne
mov
push
ret
stc
sbb
pop
loop
pop
mov
sub
loopne
insl
add
ret
pop
rolb
sub
test
sbb
lods
dec
testl
imul
insb
sub
jb
test
pushf
insb
repz
sub
imul
scas
pop
mov
sub
inc
lods
lret
sub
mov
test
fnstenv
inc
nop
lahf
lock
and
insl
ffreep
fisubrl
and
mov
pop
out
cmp
sub
inc
clc
sbb
out
push
leave
orl
out
jne
bound
cmp
adcl
ret
jmp
out
add
pop
loope
mov
std
in
daa
scas
jle
test
add
jae
aaa
cmpsb
movsl
lods
and
inc
int3
inc
sbb
cmpl
sbb
das
mov
sub
push
sbb
adc
aas
sbb
lds
adc
fsubrl
pop
imul
push
jns
gs
cmpb
arpl
sahf
icebp
lcall
add
pop
jns
mov
mov
adc
or
je
hlt
enter
addl
or
mov
sub
dec
fildll
addr16
js
adc
or
in
loop
cli
mov
test
mov
mov
pop
jl
cmp
jp
sub
out
push
aad
xchg
push
je
icebp
out
js
mov
setb
cmp
stos
jg
adc
fisubs
loope
ret
mov
mov
rorl
mov
pushf
sbb
xor
loope
dec
pop
pop
xor
enter
out
xor
xchg
mov
xchg
roll
mov
loopne
lret
test
int
jne
or
mov
in
or
in
mov
repz
mov
loope
dec
aas
inc
fistps
add
shll
push
cmpsb
lahf
notb
add
loop
data16
add
addr16
xor
cltd
mov
pop
shl
pop
mov
push
std
bound
dec
sub
push
jno
jl
arpl
mov
mov
lahf
call
test
mov
js
mov
xchg
xor
xchg
sti
sub
sub
in
lods
ret
pop
xor
push
pop
jecxz
cld
lret
aad
or
add
ds
popa
xchg
int3
rcl
add
jle
inc
imul
jp
iret
notb
sbb
add
mov
pop
fs
lock
js
shrl
add
into
xchg
xchg
mov
ficoms
xor
call
or
lahf
push
das
adc
mov
ss
push
adc
insl
jne
pop
jge
in
push
int3
and
pop
mov
loop
ds
mov
dec
iret
jl
rolb
pop
imul
jecxz
mov
mov
inc
add
add
clc
imul
bound
mov
jmp
mov
addr16
sbb
in
or
ret
inc
sub
cmc
ja
pop
sbb
lock
int
push
sbb
adc
ljmp
or
mov
jnp
pop
outsb
jo
sahf
dec
insb
loop
insl
sbb
inc
out
dec
push
movsl
inc
ds
inc
lret
dec
xor
sarb
shrl
or
idivl
adc
pop
fdivrs
ret
sub
push
popf
decl
sbb
jle
aaa
loope
stos
scas
xchg
inc
sbb
pusha
cli
adc
inc
rolb
mov
inc
mov
daa
fsts
push
adc
shlb
push
ds
adc
sbb
push
xor
xor
push
int
sub
xor
mov
sub
xor
shl
dec
jnp
jmp
xor
add
push
pop
pop
mov
mov
lds
pop
adc
data16
mov
ljmp
fdivr
xchg
aaa
mov
outsl
cwtl
push
cmp
gs
jmp
dec
cwtl
jecxz
mov
mov
dec
mov
mov
mov
ljmp
fwait
pop
hlt
add
decb
mov
jecxz
stos
dec
mov
mov
inc
out
fistps
fs
mov
imul
jnp
cmp
hlt
call
inc
cmc
lcall
jb
xchg
xchg
or
xor
and
inc
mov
or
jl
and
inc
push
push
scas
mov
fidivl
lret
imul
call
xor
mov
call
xchg
jge
push
xlat
movb
jnp
pushf
mov
das
fisubrl
and
in
pop
popf
and
xchg
daa
aad
sub
pop
and
mov
popa
iret
hlt
loop
leave
pop
mov
arpl
sbb
sbb
aas
adc
sub
daa
gs
add
roll
movb
mov
lock
imul
add
cltd
pusha
push
mov
sbb
aaa
cs
inc
loop
jns
scas
mov
mov
shll
in
mov
mov
push
out
es
mov
jbe
mov
mov
into
sub
sbb
dec
dec
lock
or
dec
xchg
aaa
mov
lcall
pop
test
cmp
mov
push
bound
jne
jmp
jge
add
cltd
sbb
es
dec
cmpb
pop
mov
dec
xlat
leave
into
test
iret
pop
psadbw
and
xchg
rolb
mov
cmp
scas
dec
adc
push
inc
xchg
sahf
adc
inc
scas
cmp
xor
inc
mov
dec
nop
mov
xor
cmpsl
or
xor
pop
seto
pop
push
out
push
mov
ja
jne
shll
dec
sahf
pop
or
fldl
insb
dec
shr
imul
lcall
aaa
ja
mov
dec
inc
push
inc
mov
sub
arpl
pop
insb
loop
cwtl
xchg
rol
orb
pop
jo
ds
mov
sub
jecxz
or
rcrb
scas
popa
sbbb
das
inc
jle
loope
movsl
jne
cmp
or
or
imul
pushw
xchg
mov
orb
movsl
inc
jne
add
mov
das
adc
dec
ljmp
push
fdivs
aaa
mov
popf
outsl
dec
fmull
cltd
cmp
mov
and
stos
add
dec
fldt
push
dec
leave
roll
inc
adc
cmp
fsub
sbb
imul
jl
jle
push
ljmp
dec
out
add
or
fildl
jno
jmp
sub
adc
movsb
mov
mov
rorl
pop
std
inc
bound
mov
sti
mov
inc
je
cltd
daa
xchg
xchg
pop
jecxz
iret
ljmp
fs
jmp
rolb
dec
jns
pop
daa
xchg
stos
fdivrs
adc
iret
ret
or
mov
xor
cmp
popf
inc
loop
adc
adc
cltd
inc
sbb
ja
imul
gs
cmc
mov
adc
sbb
dec
int
and
cmp
xchg
dec
lods
movsl
sub
das
test
jge
rorb
inc
sub
test
int
mov
sub
add
cli
cmp
xchg
and
mov
nop
cwtl
lcall
push
popa
rolb
pop
xor
dec
popf
inc
mov
ret
es
rcll
outsl
ds
rcll
adc
pop
in
lahf
sub
fwait
std
popa
call
shlb
in
sub
in
faddp
scas
mov
sbb
icebp
test
inc
pop
push
iret
adc
test
out
cmpsl
or
sub
js
repnz
popf
jbe
xor
add
pmuludq
sub
fldenv
push
movl
je
adc
mov
dec
int3
stos
cwtl
adc
cmp
dec
repz
loope
jne
pop
loopne
jns
jl
mov
icebp
fsubrl
dec
push
pop
test
test
push
sub
mov
test
cmc
push
popf
shrl
sti
pop
cmp
or
dec
loop
cwtl
push
pop
insl
fnsave
dec
sub
mov
pop
add
int
loopne
and
xor
js
lcall
imul
sub
xlat
sahf
xor
adc
adc
je
lds
aam
cmp
popa
andl
xlat
jmp
push
dec
pop
cs
popf
mov
adc
fucomip
cmp
test
xchg
jle
jnp
mov
mov
ja
push
out
popa
mov
dec
repz
cli
push
cltd
mov
xchg
ja
jns
dec
lds
cs
cmp
jne
pop
mov
loope
sub
pop
lods
cltd
sbb
mov
icebp
push
in
sub
ss
push
add
mov
adc
or
hlt
mov
ljmp
out
sub
repz
push
push
mull
push
sti
push
mov
mov
mov
stos
push
inc
adc
dec
sbb
hlt
mov
mov
and
ret
es
out
test
data16
and
push
jmp
pop
lock
xor
fisubl
pop
sbb
lods
adc
lahf
lret
and
loop
leave
inc
clc
mov
pop
das
clc
in
push
lods
out
xchg
jp
test
cmp
repz
push
dec
aad
adc
cmp
xor
push
nop
fwait
push
or
outsl
lds
stos
outsl
mov
mov
mov
push
stc
pusha
inc
jl
ficomps
das
jb
insl
mov
lods
mov
mov
mov
mov
pop
adc
sbb
or
cwtl
in
loop
mov
pop
push
mov
dec
sahf
xchg
arpl
inc
mov
mov
stos
mov
rcrl
fidivl
sub
jb
in
pop
dec
jmp
sbb
cmp
pop
pop
in
stc
dec
lock
int3
jnp
adc
enter
push
ja
mov
movl
cs
mov
adc
inc
jg
enter
mov
xor
ds
adc
xlat
in
and
or
repnz
rcr
stos
fmul
cltd
sbb
push
pop
pop
push
push
sarl
cmpb
xchg
sbb
mov
cmc
rol
push
bound
pop
push
mov
stos
fisttps
inc
sbb
pop
je
mov
or
lret
stos
push
xor
sub
int
mov
mov
or
jae
jnp
repz
push
dec
xchg
out
sarb
data16
lahf
mov
imul
pop
pop
jns
add
cmp
and
push
std
ret
pop
js
fiaddl
inc
fcoml
rol
xor
mov
js
sub
xchg
sbbb
mov
xor
sub
and
dec
or
lret
lret
shr
xchg
mov
int
xchg
test
jg
mov
mov
mov
jo
and
nop
inc
xlat
enter
pop
ret
pop
call
mov
adc
fistl
mov
mov
or
lods
out
push
iret
or
inc
adc
or
fwait
cmp
jo
subl
aas
sub
adc
jb
ss
xor
out
fisubs
jno
cmp
xor
sub
aam
popa
mov
inc
xor
outsl
in
scas
in
into
mov
clc
mov
fisttpl
fstps
iret
inc
xor
cli
jl
div
or
pop
popa
cmpl
fdivs
sbb
sbb
insb
ds
rclb
push
fldenv
in
ja
nop
loopne
jp
ret
fdivrs
jmp
fnstenv
fstp
fsub
push
push
dec
adc
jp
cwtl
fisttpl
imul
or
pop
aam
xchg
inc
mov
inc
cli
shld
adc
aad
pop
push
ficoms
fsubp
gs
xchg
jge
in
and
dec
pop
pop
mov
push
fdivrs
scas
or
push
dec
jne
inc
insb
dec
aaa
ds
mov
lcall
pusha
je
ljmp
lds
mov
daa
js
mov
or
xchg
dec
or
std
xchg
jg
mov
jbe,pt
mov
test
push
push
sti
fs
xchg
mov
loopne
dec
aas
out
leave
out
mov
ds
dec
mov
inc
pop
fwait
add
jo
mov
aam
jo
xorb
lret
lahf
xor
fidivl
arpl
push
repz
call
mov
aam
pop
adc
or
movsl
sbb
movsb
xchg
sub
loopne
cs
cmp
movsb
mov
jl
pop
hlt
mov
mov
mov
jb
mov
cmpsl
loopne
jne
and
xchg
xchg
cmp
sbb
stos
andb
sbb
nop
out
into
mov
xchg
orl
mov
xor
push
sub
aam
push
or
rorb
into
test
repz
dec
cmp
mov
or
jmp
iret
sbb
mov
cmp
lock
push
rcll
jae
push
lock
inc
sub
jmp
outsl
shll
add
js
jg
adc
stc
and
test
test
sbb
stc
add
test
rcll
testl
std
shlb
mov
mov
mov
cmp
nop
loope
adc
mov
xlat
mov
leave
and
outsl
frstor
shl
lcall
xor
outsb
daa
add
mov
mov
addb
insb
push
scas
daa
into
insl
sahf
cltd
xor
sub
into
or
imul
loop
xchg
enter
stos
insl
add
mov
jae
ss
aas
jecxz
push
push
out
leave
inc
es
lods
cmpsb
insl
push
fdivl
in
hlt
fcom
movsb
pop
lea
into
in
nop
dec
push
fdivl
imul
insb
pop
popa
mov
jmp
rcl
std
bnd
cmpsb
fildl
scas
jae
lods
adc
fwait
cmp
pop
fmull
fists
pop
into
in
jmp
sub
adc
xchg
add
out
mov
out
sti
les
sbb
jno
lcall
test
xor
xchg
add
insl
or
dec
in
cld
cmc
out
ret
sub
or
jo
dec
fmulp
push
mov
enter
mov
jae
cmp
mul
loopne
popf
inc
mov
push
rorb
sbb
incb
fs
sub
ret
jae
xor
and
cld
movsl
das
sbb
jo
jns
xchg
jbe
sti
jg
jno
xchg
in
lahf
rcrb
ja
enter
jno
das
mov
xor
dec
enter
add
lahf
mov
push
jecxz
stc
mul
je
insb
mov
subb
or
or
push
dec
jo
pop
jg
sub
ds
cld
arpl
std
in
jno
scas
jnp
jo
adc
idivb
cmp
inc
pop
push
mov
jns
and
stc
sbb
dec
add
cmp
push
and
repz
push
dec
and
jp
stos
out
jl
pusha
mov
jp
cmp
cwtl
xchg
mov
push
nop
cmpsl
es
add
or
lret
fptan
and
lds
out
pop
imul
pop
lahf
scas
out
or
jge
mov
rcrl
gs
outsl
push
mov
lds
outsl
mov
fxch
jp
or
pop
adc
mov
xchg
cmp
addr16
mov
dec
xchg
or
ljmp
push
pop
test
mov
gs
jg
mov
mov
sub
mov
out
orb
pop
cmc
inc
cmpsl
lods
mov
or
je
test
dec
dec
sub
imul
ja
bndldx
cmp
and
in
mov
pop
clc
aaa
xorb
xchg
repnz
insl
stos
pop
gs
adc
adc
mov
sub
loopne
dec
stos
popa
xor
pop
push
mov
adc
sbb
jbe
or
push
fwait
in
jmp
jle
ds
sbb
lods
movsb
ficoms
push
ret
jns
js
nop
cmp
scas
arpl
das
dec
pushf
imul
or
mov
jno
dec
fildl
bound
jae
jno
jns
jl
sbb
mov
adc
cli
or
ret
stos
jns
fidivl
insl
mov
push
inc
cmpsl
out
or
insl
popf
fucom
pop
inc
push
shrl
xor
mov
dec
rcll
pop
inc
add
jno
push
fwait
dec
add
lret
sbb
lret
out
cmp
les
cmpb
cmp
psubd
mov
lods
nop
mov
aad
andb
xchg
sbb
push
cmp
data16
jl
imul
stos
cmp
and
mov
sbb
push
add
mov
insb
mov
xor
xor
lret
sbb
cld
arpl
dec
inc
cmp
lods
ss
mov
sbb
mov
outsl
sub
in
addr16
inc
dec
jne
hlt
in
dec
or
imul
popf
pushf
mov
cld
lcall
and
or
inc
sbb
mov
sbbb
movsb
xchg
insl
sbb
sbb
sbb
ljmp
sub
sbb
sub
cmp
pusha
push
les
clc
stos
xor
pop
mov
and
push
sub
out
pop
sbb
fistl
inc
mov
sahf
lret
sarb
shlb
xchg
pop
push
cltd
pop
mov
pop
mov
inc
orb
ja
sbbl
pop
js
pop
mov
push
lahf
ret
stos
jne
pop
out
push
movsb
fidivrs
decb
mov
sub
adc
mov
jnp
jge
add
pop
xorl
test
ljmp
jl
dec
push
mov
in
dec
movsl
sbb
pop
jg
sahf
add
cmp
xchg
push
sub
adc
jnp
setl
test
pop
jae
push
scas
add
jno
xor
pop
pop
push
mov
enter
mov
aad
xchg
shrb
popa
cwtl
or
pop
jae
daa
pop
test
sbb
outsb
mov
pushf
pop
mov
inc
sub
daa
sub
xchg
cmp
scas
testl
sbb
aas
and
xchg
adc
out
iret
mov
xchg
lea
cwtl
in
push
jno
icebp
sbb
outsb
mul
andb
mov
inc
lcall
ficompl
test
pop
addb
std
xchg
insl
call
mov
mov
pop
jp
push
roll
and
push
out
je
push
or
and
lea
orl
push
mov
ret
scas
and
xchg
dec
loop
push
pop
jl
loopne
mov
fcmovnbe
testb
cltd
mov
popa
loope
cld
pop
cmpb
add
sbb
outsl
xor
push
mov
mov
test
jmp
pop
add
out
lret
sarl
mov
dec
lcall
mov
lahf
sbb
sbb
scas
mov
dec
jg
adcl
cmp
or
cmp
pop
shrl
xlat
pusha
repnz
call
inc
adc
dec
or
decl
add
mov
cmp
push
outsb
adc
adc
mov
jg
lahf
aaa
cmp
pop
cmc
and
mov
mov
jp
xchg
outsl
push
movsb
jo
push
or
xchg
cmp
inc
lret
cmc
mov
popa
inc
and
lcall
dec
sbb
xchg
dec
dec
out
sub
mov
inc
jno
add
xchg
scas
lock
sub
adc
jbe
cs
iret
push
loop
pop
loopne
push
lock
xchg
adc
mov
dec
inc
mov
inc
mov
out
dec
ljmp
aam
xor
xor
jmp
flds
mov
sub
jae
ss
xchg
les
pop
xlat
pop
cmp
dec
mov
xor
inc
mov
cld
push
lret
jnp
lcall
sbb
cli
fisttps
rcrl
mov
and
xorl
xor
cwtl
test
out
mov
or
fcoml
popa
sub
les
sbb
jne
lds
les
pop
xor
or
lret
out
mov
lods
pop
mov
outsb
incb
and
mov
mov
fimuls
psrlq
test
out
add
in
mov
jnp
sub
shrl
adc
int
repnz
or
xchg
negl
mov
imul
sub
pop
mov
sbb
roll
sbb
mov
fcomps
inc
iret
push
fbld
jne
test
xchg
pop
movsl
das
mov
lds
pop
in
cmc
jg
adc
mov
gs
jne
test
xchg
pop
movsl
das
mov
lds
pop
in
cmc
jg
adc
mov
gs
jne
test
xchg
pop
movsl
das
mov
lds
pop
in
cmc
jg
adc
mov
in
cmc
jp
push
comiss
mov
cmp
mov
jo
and
jno
add
fisttpl
rcrb
lock
mov
inc
mov
jo
add
adc
and
push
sub
cmp
imul
lock
jp
dec
mov
mov
push
ljmp
add
sarb
imul
imulb
xor
adc
xor
adc
xor
cmp
add
pop
out
pushf
sbb
inc
aaa
xchg
call
jmp
cmc
fwait
inc
fildll
sub
pop
xchg
mov
inc
sub
or
in
jo
inc
shrb
rcrb
aam
mov
ja
inc
mov
jo
adc
and
loopne
mov
or
repnz
mov
push
int3
push
xchg
inc
lods
fstps
repnz
loope
int3
inc
jecxz
xchg
sbb
cmp
adc
push
mov
pop
mov
xor
xor
xchg
in
cmpb
lcall
pop
int3
mov
jo
add
adc
and
mov
or
sbb
push
jp
dec
mov
aas
out
aam
test
push
mov
mov
push
jmp
aam
fprem1
push
stc
push
adc
sbb
push
sahf
inc
lret
add
push
movsl
jb
jg
and
or
fdivl
xchg
mov
or
sbb
dec
cli
adc
and
xor
sarb
or
sbb
push
jp
dec
mov
mov
jo
add
adc
and
xor
sarb
or
sbb
push
jp
dec
mov
mov
sahf
cltd
addr16
sbb
arpl
imul
push
clc
mov
testl
subl
and
or
fadd
test
xchg
pop
mov
sbb
mov
daa
push
imul
xor
ror
inc
rclb
mov
pop
jbe
xchg
jl
mov
jle
cltd
lahf
dec
loop
int
mov
push
popf
test
jmp
xchg
mov
aas
jno
in
adc
loopne
jns
addl
mov
pop
push
mov
fbld
fbstp
add
inc
mov
or
push
jbe
rolb
xor
lcall
insb
adc
inc
aas
out
andb
test
ss
pop
stos
roll
test
add
pop
and
push
outsl
cmp
sbb
inc
dec
pop
adcl
mov
arpl
ret
test
insb
xlat
jns
negb
pushl
sti
adc
es
or
cld
mov
in
cmp
fisttpll
sti
scas
mov
clc
test
push
mov
push
ss
das
mov
mov
cmpsb
fldcw
or
adc
lods
lret
dec
rolb
xor
mov
mov
fidivrl
jns
jne
sbb
into
jmp
adc
shrb
leave
mov
cmc
mov
jmp
out
sbb
aad
inc
cmp
pop
popf
fcomip
sbb
xchg
adc
mov
test
inc
ret
adc
arpl
dec
mov
iret
adc
inc
and
add
pop
push
xor
enter
xchg
jae
in
xor
cmpsl
fisubs
lret
or
xor
pop
sub
mov
add
dec
inc
mov
jbe
xor
sbb
enter
push
mov
jl
lea
shrl
jno
imul
sub
mov
mov
gs
aad
mov
add
shlb
mov
sbbb
jbe
lahf
mov
mov
pop
loop
mov
test
stos
cmp
aad
xor
insb
test
enter
push
loope
pop
dec
js
outsb
ja
cs
adc
or
imul
popf
mov
mov
aam
jbe
jg
aam
mov
imul
fcomps
jo
jnp
mov
out
xchg
sbb
and
stc
ret
jnp
mov
faddl
fiaddl
push
pop
and
shll
sub
adc
outsl
bound
iret
pusha
pop
push
int
push
fidivrs
clc
repnz
in
xor
push
or
add
xchg
int
jg
lods
shrb
cmp
pop
cwtl
sbb
in
gs
mov
jbe
cs
push
in
pop
fildll
mov
cmp
lahf
out
pushf
mov
xor
mov
popa
out
lods
push
pop
cli
icebp
enter
lods
out
repnz
sarb
xchg
sbb
dec
stos
xor
fsubr
push
into
addb
pushf
mov
cmpsl
add
xor
jno
xor
pop
pop
dec
mov
lock
pop
cld
movsl
aaa
and
iret
xlat
pop
inc
leave
call
and
sbb
sub
jno
inc
adcl
test
stos
cmp
popf
sarl
leave
cmp
shr
stos
popf
cmp
or
cmpsb
addr16
mov
insb
push
mov
dec
movsl
push
push
cmp
aad
shlb
cli
xor
cld
jno
and
insl
and
mov
mov
sub
test
aam
jecxz
mov
mov
lret
outsb
icebp
cmpsl
or
sti
mov
fsubrs
cmc
xor
push
data16
xchg
out
scas
gs
andb
mov
xchg
push
into
sub
loope
in
xchg
push
ret
pop
outsb
push
lcall
imul
nop
bound
push
sub
inc
and
xchg
sbb
xchg
dec
dec
jo
and
scas
inc
js
dec
sbb
lret
cmp
push
mov
cmp
push
cld
decl
sarb
jns
shrb
vcvtss2si
ret
sbb
add
stc
inc
jbe
mov
pop
fiadds
sub
scas
lahf
stos
stc
out
sahf
les
push
loop
jne
sub
fnsave
sbb
fstps
arpl
jae
shr
add
dec
cmc
add
xchg
dec
pop
adc
jl
cmp
mov
mov
xchg
jmp
push
mov
xor
aaa
cs
mov
stos
adc
int
or
into
jle
stos
sarl
sbb
icebp
arpl
jecxz
pop
adc
pop
xor
pusha
mov
push
fs
jmp
cmovae
jmp
test
shll
das
call
popa
arpl
int
jl
scas
xor
add
jp
cmc
cli
sub
jecxz
mov
repz
pop
cmp
inc
inc
mov
incl
jmp
mov
inc
push
mov
sub
cmp
add
and
xchg
lock
lods
ljmp
cmp
fnstenv
aam
outsb
or
repz
pop
push
ret
rcrb
rcrb
push
xchg
mov
or
xchg
or
dec
outsb
addl
mov
inc
sub
ret
lcall
push
xchg
lahf
pop
testb
aad
or
sub
mov
and
cmp
lahf
fnclex
lds
hlt
mov
rcll
push
adc
jmp
cmp
out
xchg
mov
fidivrs
and
out
fiadds
mov
and
sub
es
fs
inc
lcall
dec
inc
pop
push
sbb
adc
or
inc
cmp
aad
jl
out
mov
mov
loopne
mov
and
cs
push
inc
dec
xchg
pushf
cmp
jmp
hlt
or
sbb
js
jge
jge
xor
sub
jo
adc
xor
lods
inc
xchg
js
shlb
mov
loopne
or
add
fldcw
out
pop
dec
arpl
cmpsl
into
cmpsl
jle
and
sub
add
mov
insl
data16
and
sahf
lods
mov
mov
fidivs
pop
mov
popa
repz
stc
lock
push
sbb
aam
movsl
add
out
jge
sahf
fcompl
scas
xor
adc
push
lock
scas
pop
not
pop
xchg
push
mov
aaa
fsubl
adc
jnp
lret
xor
push
jle
cmp
sar
sub
xchg
mov
mov
pop
push
xorb
jno
jne
mov
or
cmp
xor
stos
mov
mov
popf
and
addb
sbb
inc
sub
ret
xor
jmp
std
mov
in
cmp
xor
nop
or
aad
gs
cmp
jp
jecxz
pop
and
cmp
cmp
ja
imul
in
jo
mov
jae
pushf
cmp
xor
mov
leave
aas
mov
testb
shl
fldcw
push
sbb
inc
insb
dec
lods
push
and
inc
test
and
jmp
pop
movsl
dec
adc
jl
add
sub
sbb
rorb
xor
mov
mov
jp
sub
jl
push
xor
shlb
in
sbb
rcrb
cmpsb
jbe
hlt
mov
xorb
lret
jnp
pop
leave
in
imul
add
inc
nop
icebp
fsubrs
js
jl
ljmp
add
pop
xchg
lock
push
out
dec
dec
adc
lret
adc
mov
mov
sbb
xor
jle
xchg
test
out
jb
push
std
std
inc
cmp
add
pop
xorb
in
push
jecxz
test
gs
insb
mov
ds
ja
jo
or
fistpll
push
loopne
insl
testl
stos
inc
add
lahf
and
loope
lret
jge
bswap
test
orb
testl
or
sub
jns
sahf
or
inc
ficoml
or
pop
jmp
cmp
mov
sbb
addr16
adc
push
lea
les
mov
lea
outsl
sti
mov
or
mov
notl
jnp
push
adc
dec
fimull
dec
xchg
push
aam
shrb
mov
enter
mov
cs
scas
jb
scas
fnstsw
loopne
clc
add
inc
pop
push
sbb
out
stos
dec
xlat
lret
pop
scas
mov
xchg
shr
pop
adc
je
push
shr
push
adc
mov
es
nop
lret
scas
cmc
fidivl
mov
loop
mov
in
daa
out
popf
sbb
mov
clc
adc
add
mov
xor
push
pusha
pop
aad
repnz
movsl
in
pushf
add
mov
sub
stc
push
popf
lds
sbb
sub
stos
xchg
push
or
mov
jnp
popa
jns
pop
mov
insl
mov
stos
popf
pop
inc
out
test
je
push
shll
cs
push
int3
addr16
push
sub
mov
mov
dec
lret
mov
je
int3
pop
dec
repnz
jmp
dec
add
sub
scas
mov
pop
loope
jmp
mov
in
pushf
push
mov
das
pop
or
or
and
in
dec
sti
cld
outsb
xchg
inc
jg
test
cmpsl
pop
cld
or
inc
cli
cmp
add
repz
aas
popf
je
ja
inc
loop
movsl
add
in
mov
mov
addr16
mov
aam
fisttps
in
mov
fistpll
mov
xchg
and
nop
jg
insb
inc
push
and
lahf
cmpsl
fdivl
in
push
mov
out
and
jb
mov
sub
in
andb
shr
mov
ficoms
fwait
mov
aad
or
xor
jae
mov
mov
xchg
and
lods
push
pusha
sti
mov
xor
inc
push
jp
mov
inc
mov
pop
lret
fs
mov
inc
inc
or
je
cmpl
fs
leave
pushf
inc
xor
lds
mov
pop
fmuls
js
sarb
pushf
sti
inc
jmpw
mov
cli
dec
bound
movsl
lahf
cmp
inc
sbb
iret
xchg
push
or
push
scas
sub
sub
adc
xor
dec
scas
mov
mov
fcoms
arpl
outsb
jp
push
cvtpi2ps
out
icebp
pop
dec
mov
addr16
mov
movsl
enter
dec
call
call
aad
sahf
pop
sub
add
xor
xor
js
ss
xor
push
adc
int3
mov
sbb
sbb
adc
in
jmp
mov
push
shrb
push
jnp
xchg
leave
and
in
mov
enter
sbb
dec
push
pop
mov
popf
sub
in
push
mov
dec
loop
clc
lret
adc
addr16
pop
cmp
in
and
push
mov
pop
jno
std
xor
xchg
int3
adc
mov
cmpsb
mov
xor
into
aam
sub
jp
out
xor
inc
jmp
mov
fld
ds
pop
cld
lahf
sub
cld
jmp
je
sarl
mov
pushf
loope
inc
mov
xor
xchg
adc
outsb
stc
rcr
pop
rcrb
jo
push
xchg
jbe
dec
and
adcb
lds
jnp
stc
ret
arpl
mov
xor
les
js
pop
push
addr16
xor
push
push
lcall
je
adc
mulb
pop
lret
cli
xchg
int
popf
mov
pop
inc
jae
add
inc
dec
hlt
jae
aaa
inc
mov
sub
das
push
mov
jne
pop
stos
xor
mov
in
fiaddl
popf
mov
sbb
out
cmpsl
sbb
test
jae
cmp
out
lea
cmp
in
sub
pusha
mov
in
dec
insb
sbb
mov
cmp
arpl
ret
sahf
push
rcrl
aaa
xlat
in
and
add
lret
mull
jb
xorl
jmp
fisubrl
pop
mov
movsb
sub
fsubs
std
imul
xor
mov
push
rep
imul
mov
adc
sub
or
movsb
jge
mov
loope
and
xor
cli
add
movsb
xor
sbbb
pop
or
mov
aad
inc
pop
fisubrl
daa
stc
and
jae
cmpsb
lods
outsb
call
jmp
imul
cld
fistps
adc
ss
imul
mov
pop
rorl
pop
dec
fidivrs
adc
call
dec
xchg
lahf
xor
ds
pop
jg
pop
xchg
cltd
mov
pop
pop
lods
dec
movsb
lret
and
jne
mov
xchg
sbbb
push
mov
push
cmp
subb
into
in
out
push
dec
cmp
ret
std
lcall
xchg
ds
je
cmpsb
ror
addr16
imul
cmp
aaa
hlt
and
fwait
and
pop
cs
lret
ret
test
push
out
daa
pop
push
mov
out
lock
mov
sarl
inc
out
ss
in
scas
sbbb
enter
fistl
xor
repz
in
or
xchg
mov
xor
daa
notl
repnz
xor
mov
nop
adc
or
push
pop
pop
cmp
test
ja
popa
imul
sahf
sub
imul
xchg
jae
and
shrb
gs
add
out
cmpsb
mov
sbb
mov
out
push
inc
stos
leave
in
aad
pop
test
shrl
jle
mov
jmp
push
mov
xor
or
fisubs
push
push
sub
loope
pop
sbb
mov
jecxz
ds
jnp
xchg
cmpsb
aas
mov
inc
test
fs
pop
rcll
mov
nop
jp
lret
sti
cwtl
dec
cmp
push
pop
xchg
cmp
or
nop
pop
rolb
jge
jl
lahf
iret
in
add
outsl
fwait
and
push
pop
lret
or
adc
test
lods
movsb
jne
cltd
pop
fidivs
daa
sub
sbb
cmp
outsb
dec
cmp
fistl
addr16
repz
dec
xchg
sbb
jmp
push
dec
ja
pop
cmpsb
fwait
imul
in
mov
popf
and
xlat
pop
push
dec
test
fldl
or
in
rcrb
popf
lods
jo
ficompl
push
mov
ret
add
or
inc
into
stos
dec
mov
mov
mov
lea
insb
out
repnz
jbe
testb
cmpsb
ds
pop
inc
shrb
arpl
add
lcall
test
xchg
ja
cmpsl
jo
cmp
sahf
push
adc
mov
add
add
sarb
cmpsb
cltd
popf
xchg
mov
loopne
xchg
int
jb
inc
ret
fdivl
cmp
ljmp
jae
xor
mov
inc
cli
jno
mov
stos
push
and
adc
mov
fnstsw
es
outsl
xor
sbb
es
sub
data16
in
pop
adc
inc
jno
int
in
repz
push
lret
pop
dec
push
mov
dec
and
add
aas
dec
pop
jmp
cmp
dec
dec
mov
mov
loopne
xlat
mov
cmp
mov
pop
cmpsb
sahf
xchg
aam
out
repz
or
xor
and
pop
jg
xchg
xchg
add
repz
jb
jnp
fs
ret
lret
dec
sbb
inc
dec
dec
popa
mov
push
inc
and
fistps
paddusw
fwait
push
mov
pusha
xchg
das
out
add
mov
rcrb
jg
shlb
int
mov
stos
stc
arpl
dec
dec
pop
and
sub
fdivrl
mov
shll
mov
bound
cmpsb
into
or
jb
stc
mov
mov
insb
add
dec
and
scas
sbb
daa
nop
mov
andl
dec
push
mov
adc
insl
and
sub
insl
xor
fildll
jb
js
gs
cwtl
test
push
pop
sub
or
xchg
rorl
imul
enter
call
pop
icebp
cli
jns
stos
dec
jmp
jno
cmc
push
lock
cmp
hlt
and
stos
jge
pop
adc
lcall
mov
mul
xlat
sub
shll
xchg
aas
or
imul
and
adc
cld
je
test
inc
fimull
clc
ljmp
ss
xchg
outsb
ret
inc
pop
jno
mull
or
cmpl
es
je
daa
pusha
mov
mov
mov
xchg
jne
dec
pop
mov
jbe
cmpsb
xor
rcl
stos
rclb
out
xor
aam
dec
icebp
test
lahf
sbb
sbb
sub
js
ror
movsb
jbe
cmc
addr16
loope
cs
cmpsb
sbb
js
lcall
pop
cmp
push
cmp
div
test
sbb
icebp
enter
xlat
jp
jmp
adcb
push
icebp
popa
icebp
test
aas
imul
push
jge
mov
or
testl
fisttpll
jmp
push
mov
xacquire
sbb
jle
sbb
xor
in
add
repnz
jns
xor
out
push
outsl
clc
xor
xchg
mov
in
xchg
xchg
cmp
leave
push
xchg
jns
les
int
pop
lcall
adc
ja
fidivrl
cld
hlt
test
ret
cmp
fnsave
cmp
cmp
fs
add
xchg
and
aam
or
inc
stos
in
mov
push
lods
jo
dec
ja
and
cmp
in
or
xchg
int3
cmc
mov
xor
mov
jnp
sbb
int3
jno
mov
cmp
adc
push
or
dec
fdivs
mov
push
adc
cmc
xor
sbb
mov
in
ljmp
dec
fcmovnbe
pop
ror
xor
insb
leave
in
daa
mov
jne
add
sar
out
jge
inc
lret
jle
mov
sub
sahf
and
sub
and
loopne
jae
push
fstps
dec
fsubs
pop
aad
adc
sarb
pop
in
scas
int
scas
in
aaa
mov
push
or
ficoml
fwait
xchg
cmpsb
sbbl
add
sbb
iret
adc
test
jbe
fbld
rcll
pop
mov
inc
sub
cmp
repz
lret
adc
ret
imul
push
jmp
int
pop
jb
nop
and
xlat
test
mov
icebp
insb
sub
out
movsl
popf
or
mov
jge
adc
decb
mov
js
mov
push
enter
cmp
test
cli
xchg
shlb
inc
xor
pop
jecxz
pop
das
ljmp
out
ja
mov
fistpll
sub
in
adc
push
imul
jl
fistl
mov
lds
pop
scas
jb
mov
shll
jne
icebp
and
bnd
andl
mov
fisttps
cmp
jb
push
mov
sbb
xchg
stos
int
inc
xchg
xchg
inc
repnz
mov
addr16
int3
out
aaa
push
aad
int
scas
sbb
lea
adc
and
negb
cmp
ljmp
call
scas
lcall
push
sbbl
aam
dec
stos
imul
dec
sti
xor
mov
shll
jnp
dec
stc
jns
int3
mov
inc
pop
rcl
or
xchg
jge
fmull
testl
pusha
xor
push
hlt
idiv
call
mov
sarl
pop
mov
add
inc
and
xor
imul
mov
insl
xor
inc
ljmp
xor
aad
xor
push
xchg
add
rorb
je
jae
or
cwtl
test
sub
cmp
mov
xor
cmpsl
push
push
adc
bound
lock
lahf
ss
pusha
es
pop
es
loopne
repnz
push
dec
hlt
js
repz
dec
jmp
lods
add
push
leave
repz
aaa
mov
repnz
mov
adc
loop
sbb
xor
sbb
lret
mov
scas
push
xlat
test
sub
pop
pop
push
shl
push
jg
fcmovne
sub
cltd
mov
outsl
enter
adc
test
add
cmp
dec
push
lret
cmp
dec
lea
mov
xchg
lret
and
xor
xchg
negb
outsb
push
xchg
into
sub
test
push
dec
dec
or
rorb
cmp
sar
movsl
in
push
insl
gs
and
xor
sarb
or
sbb
push
jp
dec
mov
mov
jo
add
adc
and
xor
sarb
or
sbb
push
jp
dec
mov
mov
je
add
jnp
and
xor
sarl
or
sbb
push
jp
dec
test
mov
xor
add
adc
mov
cmp
loopne
xchg
fsubs
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
clc
inc
sbb
je
push
mov
ja
xor
les
hlt
jo
gs
movsb
inc
mov
inc
movsl
push
xchg
test
in
aad
lds
in
hlt
jne
add
inc
and
je
add
adc
and
xor
cli
dec
mov
fs
push
cmp
and
ss
inc
test
roll
repnz
jle
mov
xlat
push
fsubs
sbbl
andl
adc
je
mov
jne
mov
sub
mov
fdivs
inc
hlt
pop
aam
enter
mov
xchg
xchg
add
lahf
mov
add
sub
loope
xor
test
cmpsl
cmpsb
pop
sbb
call
add
fs
jbe
add
xlat
les
mov
test
mov
mov
add
jmp
fisttpl
aad
sbb
movl
shll
js
sbb
mov
cmp
lds
add
pusha
adc
movsl
push
xchg
fs
adc
and
xor
les
hlt
adc
movsb
and
sub
xchg
and
xor
inc
movsb
inc
push
test
mov
sbb
or
and
add
mov
sub
and
mov
or
mov
cwtl
push
jmp
sti
and
add
adc
and
adc
add
and
xor
les
hlt
jne
gs
push
movsb
inc
mov
inc
movsl
push
xchg
test
in
aad
lds
in
hlt
jne
gs
push
movsb
inc
mov
inc
popa
inc
cmp
rorl
jbe
xchg
adc
mov
test
push
testb
push
in
clc
je
xchg
cmpl
icebp
jl
loopne
sar
and
jmp
sarb
jno
imul
or
icebp
adc
dec
xchg
push
ljmp
push
insb
jmp
push
roll
ss
inc
and
dec
push
mov
cli
and
rcr
lcall
and
cmp
repnz
and
ds
pop
stos
hlt
pushf
test
int
jb
or
sbb
jb
loope
sbb
cltd
aam
ja
mov
xor
pop
pop
icebp
loopne
rorb
repz
or
push
insl
xchg
xor
mov
js
rol
pop
push
mov
or
dec
je
xchg
aas
inc
je
add
rolb
nop
cmpsb
mov
pusha
jb
shll
call
popf
xorb
js
cmp
hlt
xor
icebp
add
add
mov
es
mov
xor
mov
mov
rolb
inc
repnz
add
inc
jl
in
and
mov
fwait
add
enter
imul
add
repnz
mov
pop
shll
aam
dec
xor
push
cld
jge
insl
popf
jne
xchg
cmp
fimull
jo
mov
cmp
mov
jecxz
add
mov
inc
sbb
cmp
aaa
sarb
and
pop
inc
icebp
icebp
out
sub
cmpsb
mov
sti
push
in
add
sbb
inc
into
jecxz
mov
inc
enter
fnsave
lret
in
cmp
cmp
mov
shlb
or
andl
push
lods
or
adc
pusha
add
add
mov
cmp
and
test
sub
mov
fsubrp
pop
cs
lea
mov
in
int
cmp
test
mov
popa
in
sbb
cli
add
scas
ds
in
lret
pop
stos
sahf
nop
pusha
dec
aaa
and
sbb
enter
lock
adc
xor
es
jge
addr16
mov
dec
mov
hlt
or
pop
pop
dec
shlb
clc
sbb
mov
inc
jno
xchg
pop
push
sarb
int3
int3
cwtl
xor
mov
cmp
lret
aad
das
mov
ss
mov
jae
pop
aaa
mov
lods
or
adc
pop
sbb
and
cmp
aaa
les
sti
loop
std
popf
fdivl
clc
das
push
lret
mov
dec
in
ljmp
cmp
jge
push
lods
cmp
mov
mov
dec
insb
or
gs
mov
sub
dec
mov
and
repnz
xor
in
mov
ficoml
or
mov
jno
call
lock
ja
mov
add
pusha
jecxz
fs
js
rolb
outsb
test
push
mov
jno
inc
cmpsl
jnp
jl
push
out
or
repnz
cwtl
popf
push
mov
testb
daa
rcll
aam
test
imul
xor
xchg
jb
or
push
sbb
push
and
pop
fsubp
arpl
js
adc
dec
lcall
repz
jmp
xchg
fbstp
scas
rorb
jo
dec
in
mov
rorb
in
addr16
mov
test
push
mov
loop
mov
and
xchg
add
or
sbb
add
jns
sub
mov
into
jb
out
cmp
orl
cltd
add
inc
aaa
jl
mov
mov
jg
sti
jp
loope
mov
std
mov
pop
add
add
loop
out
or
inc
outsb
mov
mov
push
adc
aas
xchg
jecxz
das
addr16
scas
jb
push
dec
xchg
adc
mov
push
roll
inc
pop
jo
repnz
inc
mov
lahf
into
mulb
pusha
cmp
xchg
xchg
sar
mov
je
cmp
cmc
repz
in
xchg
pop
xlat
dec
cmpsb
sbb
add
paddd
faddl
add
xor
sbb
iret
loope
ror
mov
mov
pop
fildll
jns
mov
imul
inc
mov
dec
imul
mov
in
lcall
je
mov
dec
mov
enter
push
movsl
lret
je
and
ljmp
gs
mov
ficomps
lret
mov
rorb
lds
ret
out
cmpsl
mov
in
enter
out
xchg
cmp
or
pop
pop
and
lcall
sbbl
jge
mov
jae
fs
scas
call
adc
iret
push
mov
mov
cltd
and
and
inc
jae
aam
cwtl
mov
jp
sahf
aas
pop
push
imul
sub
xor
inc
pop
mov
adc
push
inc
add
push
push
sahf
mov
sub
dec
push
push
jne
addb
test
andb
stc
imul
es
lret
adc
cmc
mov
pushf
or
std
sub
mov
adcl
fcompl
push
fildl
mov
jg
pop
inc
pop
and
adc
add
jns
sahf
inc
icebp
orl
aad
jno
sbb
push
sbb
xlat
lcall
test
mov
das
cmp
jg
push
xorl
repnz
sbb
mov
lock
mulb
popf
iret
adcl
or
xchg
mov
push
cmp
inc
and
orb
imul
adc
push
xchg
xor
pop
mov
scas
push
or
iret
insl
mov
or
insl
jbe
adc
jno
sub
mov
xor
fwait
andl
pushl
add
pusha
pop
addr16
xor
and
add
scas
scas
dec
inc
jo
dec
iret
push
mov
adc
std
cmpsl
or
mov
stos
xchg
lock
ret
sub
mov
sbb
xor
jo
and
into
cmpsb
jae
loop
fsts
mov
std
xchg
add
lds
repz
mov
rcll
cmpsb
sbb
mov
mov
adc
call
cmp
jecxz
stos
cmp
sbb
sub
popf
or
mov
or
jg
mov
gs
ficoml
mov
adc
xlat
and
pop
addr16
and
mov
mov
stc
ret
sub
outsl
lock
or
push
xor
dec
inc
pop
popa
xchg
jle
mov
jge
dec
outsb
mov
jge
mov
dec
icebp
inc
lcall
out
dec
arpl
adc
ss
fwait
sahf
xchg
addb
faddl
inc
pop
rclb
mov
cmc
fistpll
test
sub
adc
cmc
xor
loope
in
dec
lea
rcrb
mov
pop
shlb
and
adc
inc
ljmp
xor
in
das
lea
jp,pn
and
jle
mov
cmp
adcl
inc
pop
in
in
mov
inc
pop
pop
xor
sub
aam
or
loop
sub
push
iret
lock
and
testb
ss
add
dec
inc
pop
xor
les
ja
int3
inc
aad
mov
inc
push
clc
jg
mov
cmp
adc
pop
jecxz
out
or
mov
jb
sahf
push
imul
jbe
inc
push
mov
mov
dec
test
sbb
xchg
popf
repz
push
repz
cmpsb
shr
mov
daa
sbb
mov
adc
andl
add
xchg
pop
lcall
jg
sahf
and
outsb
push
and
push
sub
in
mov
nop
push
adc
std
pop
in
push
push
mov
and
lea
push
fsubl
mov
aam
mov
out
clc
cld
fwait
mov
or
jecxz
sub
ret
mov
jle
and
daa
adc
rcrl
xlat
cli
rcll
pop
add
lds
lock
xchg
xor
push
int
mov
lcall
insl
dec
xor
xor
xchg
sub
mov
in
das
mov
jp
and
scas
sbb
bound
jmp
push
jmp
dec
sub
push
int
insl
xchg
fnstenv
ja
push
inc
aad
and
push
cmp
mov
and
lret
andl
scas
or
inc
rcrl
shlb
xchg
pop
xchg
arpl
dec
orb
push
xchg
test
and
clc
inc
inc
sbb
xor
cltd
push
mov
sbb
push
push
cmpsb
xchg
pusha
mov
dec
sub
xor
lret
test
outsl
pop
data16
mov
push
or
jmp
popf
repz
ds
in
xchg
add
adc
mov
dec
andb
cmpsb
hlt
ficompl
and
or
imul
add
clc
outsb
fnstsw
xor
pop
mov
leave
cmp
dec
or
jge
xchg
ja
add
add
jo
cld
jb
push
hlt
es
ja
xorb
add
ret
in
pop
or
nop
aad
push
iret
jecxz
lret
stc
cld
inc
dec
mov
xchg
fwait
cltd
fucom
pop
push
push
loop
test
or
vpmaxud
icebp
add
lods
sub
lahf
and
mov
mov
imul
push
mov
fcom
cmp
call
sahf
jp
adc
add
out
neg
mov
cltd
lcall
mov
out
ljmp
leave
repnz
inc
push
xor
mov
dec
mov
dec
imul
adc
in
push
sbb
and
in
dec
jb
mov
int
mov
es
mov
aas
xchg
loopne
jg
sub
jge
imul
mov
push
addr16
repnz
pusha
xor
push
hlt
xchg
add
sub
jge,pn
pop
mov
mov
jne
mov
fisubl
xor
shl
sbbl
mov
lahf
push
pop
pop
loope
xor
sbb
lcall
aam
setl
dec
mov
shrl
cmp
out
xchg
jge
cmp
addb
sarl
mov
fimuls
mov
mov
nop
or
out
sbb
and
dec
push
push
ja
fisubrl
call
xorb
push
call
mov
aam
orps
jle
daa
and
mov
push
movsl
lds
lea
or
and
cltd
inc
mov
xlat
inc
or
dec
loope
xchg
int3
ret
imul
adc
out
or
mov
cwtl
pop
data16
cmp
or
lods
mov
clc
stc
mov
cmpsb
ja
mov
inc
lods
cld
icebp
lcall
icebp
mov
std
aas
push
hlt
add
ficoml
repz
inc
stos
sbb
and
xchg
xlat
insl
loop
fldt
mov
mov
sbb
ja
sbb
ss
mov
dec
into
stc
mov
cld
mov
and
xor
sub
mov
aam
mov
cs
sub
movsl
xchg
lods
xchg
and
mov
imul
pop
sbb
icebp
add
jbe
add
fnsave
jno
jle
xchg
mov
xor
xchg
insl
loope
std
xlat
ret
sbb
mov
xor
ror
adc
jno
scas
aam
flds
loope
data16
shll
xchg
inc
lods
ret
dec
xor
mov
pop
mov
loope
jecxz
cwtl
pop
and
call
cmp
addr16
fcompl
shlb
inc
cmp
lods
je
sub
sbb
mov
adc
iret
pop
in
mov
lds
push
out
or
lods
cmp
aaa
test
fdivrl
mov
cmp
sbb
push
clc
sub
out
pop
icebp
pop
sti
sbb
test
js
cmc
rcr
fisubl
xor
pop
xchg
fsubs
pop
pop
mov
push
mov
xchg
ljmp
ss
add
stc
or
test
add
dec
push
jle
ret
mov
xor
xor
dec
cmpl
push
bnd
rep
pushf
lock
aam
sbb
insl
mov
xchg
cmpsb
push
adc
pop
ljmp
bound
jl
test
mov
repnz
lret
rcl
int
rcr
sub
scas
add
xor
add
add
test
xor
scas
and
or
call
or
adc
test
sbb
adc
test
or
lcall
cwtl
mov
push
out
pop
jl
sub
mov
popf
sub
push
push
stos
mov
in
or
je
push
add
inc
insl
scas
cmpl
jle
int
mov
ret
pop
pop
mov
xchg
aas
dec
imulb
inc
bound
and
fdivp
stos
and
ds
push
xor
subb
and
dec
imul
push
sbb
shlb
mov
mov
pop
outsb
in
dec
sub
xchg
dec
popa
inc
cli
mulb
shl
popa
or
imul
add
adc
jmp
sbb
jle
ja
inc
push
push
ja
pop
mov
js
aaa
mov
dec
add
fisubrs
dec
jbe
mov
jge
pop
out
addr16
mov
dec
or
gs
lret
outsl
enter
xchg
mov
sbb
dec
mov
dec
push
inc
dec
and
repz
cwtl
sahf
mov
shl
and
jmp
data16
addr16
sahf
std
adc
movsb
ds
jle
sahf
and
leave
push
test
stc
dec
repz
cmp
sarl
add
add
sahf
inc
and
lock
mov
pop
icebp
pminsw
jge
xor
call
xchg
shl
leave
cs
jo
inc
push
mov
and
pop
cld
out
icebp
cmp
mov
xchg
pop
loopne
imul
out
cmp
adc
test
fists
sbb
pop
sub
fcoml
xchg
push
and
cmp
jne
shrb
sbb
imul
push
js,pt
mov
cmpsb
mov
sti
lds
pop
aad
or
mov
sbbb
mov
repz
cmpsl
inc
mov
and
adc
jne
and
shrl
loopne
cmp
cmp
inc
mov
and
fstl
arpl
nop
cli
sub
mov
addr16
inc
lcall
inc
jne
shll
sbb
mov
mov
imul
stos
jns
add
mov
cltd
inc
adcb
cmovg
or
loope
arpl
push
cmp
cmpl
fwait
mov
out
or
ucomiss
subl
aaa
mov
jnp
xchg
adc
mov
lods
cmpl
fnstcw
sub
es
ja
push
and
aam
and
push
lret
in
bound
loopne
in
cmpsb
or
and
fwait
loope
cmp
push
mov
jbe
push
fucom
jge
rcrb
aam
cmc
test
mull
lods
jo
enter
out
fisubrl
lahf
xchg
ja
adc
jmp
pop
shll
push
push
mov
cmpsb
lods
movsl
add
fbstp
pushl
icebp
aam
lds
jl
daa
mov
hlt
fstpt
sbb
and
outsl
jae
in
lcall
add
adc
adc
ds
addr16
jbe
cli
enter
mov
fidivrs
or
insl
mov
cld
push
adc
outsl
pop
movsb
xchg
aas
push
mov
out
sub
push
and
dec
push
xor
pop
push
mov
add
daa
or
and
push
mov
sbbb
xor
stc
mov
scas
mov
aaa
mov
leave
ds
push
js
dec
jbe
jno
pop
test
mov
inc
jnp
inc
sub
aam
jge
inc
loopne
loope
lock
loope
shl
pop
popa
push
xchg
mov
outsb
pop
lock
ljmp
dec
js
mov
sub
test
mov
sbb
or
add
jno
out
sub
adc
pop
xchg
jnp
ret
rcrb
inc
jl
fadd
loop
pop
dec
lea
imul
repnz
xchg
xor
mov
ret
insb
sub
xlat
es
cmpsl
add
jbe
mov
test
jno
out
fstl
add
adc
xchg
daa
inc
xor
mov
xor
dec
test
mov
aas
clc
push
in
push
mov
in
les
xor
sbb
add
mov
xlat
lock
or
repz
aaa
rcrb
xor
pop
arpl
sarl
test
shl
bound
pop
cmc
stc
jb
mov
push
sub
je
les
scas
cld
sahf
jae
mov
or
push
and
mov
add
test
stos
mov
and
pushl
fs
aaa
int3
mov
push
xor
adc
subl
insl
aaa
pop
fldz
popa
sub
mov
ja
loop
dec
movsl
jnp
ja
nop
inc
mov
mov
jns
sbb
cld
dec
lods
adcl
xchg
xchg
push
dec
mov
xchg
iret
sbb
jge
sub
and
notl
sbb
pushf
lret
ja
in
dec
cs
xor
jnp
sarl
aas
mov
add
xchg
xor
jmp
hlt
mov
das
fnstcw
je
add
adc
or
push
add
lods
add
xchg
cld
loope
jae
jo
in
pushf
gs
and
pusha
adcb
sbb
dec
sbb
add
pop
aas
fnstcw
cli
out
call
shrl
call
sub
aad
cmp
jo
sub
pusha
dec
pop
lea
scas
inc
xor
push
fwait
dec
mov
loopne
inc
and
stos
movsb
out
test
jge
adc
inc
xchg
pop
sub
imul
push
dec
push
mov
pop
and
add
fnsave
mov
sbb
addb
xchg
les
fcoml
and
push
inc
cmovge
mov
push
mov
aam
jecxz
ret
call
int
test
in
mov
sbb
mov
add
xchg
mov
mov
mov
jge,pt
shll
mov
ja
mov
and
gs
in
imul
fdivl
rcl
or
xor
rclb
mov
aad
popa
push
jo
inc
push
icebp
sbb
cld
jns
imul
mov
mov
jae
mov
lcall
add
scas
or
push
xchg
stos
xchg
and
push
jl
push
push
xchg
mov
sbb
mov
ljmp
mov
test
push
jae
call
out
mov
into
and
lahf
push
repz
fwait
push
data16
in
imul
push
ss
sbb
rolb
jbe
popf
mov
dec
add
pop
fcmovu
mov
loop
mov
adc
and
mov
xor
and
fisubrl
xchg
mov
mov
sub
cltd
sahf
fs
jg
mov
stc
xchg
mov
flds
nop
lret
adc
jmp
jnp
testb
mov
xchg
clc
lds
mov
push
fsub
pop
jg
mov
aam
xchg
lods
dec
into
jle,pn
out
js
jg
mov
stos
pop
mov
test
out
adc
push
xlat
xchg
hlt
mov
das
pusha
je
lsl
lods
loope
cmc
hlt
hlt
mov
lock
in
cmc
inc
pusha
and
into
fmuls
loopne
imul
sbb
shlb
mov
xchg
or
jp
test
test
add
test
pushf
jno
je
int
mov
lcall
out
insl
pop
or
sbbb
outsb
mov
push
ds
shlb
xor
mov
fstps
cmc
leave
xorl
push
and
clc
mov
movsb
scas
dec
loope
sbb
sbb
call
sbb
push
jmp
ss
xchg
lcall
push
and
fcomi
icebp
lret
mov
sub
cmc
cmp
jl
jne
xchg
icebp
std
sub
fs
rcpps
dec
clc
outsb
pop
loopne
xorl
std
insb
mov
jne
mov
push
add
popa
je
sub
in
lock
sti
cmc
pop
jg
lcall
mov
adcb
sub
lcall
pop
jb
enter
adc
cmp
lret
cld
out
int
fwait
mov
push
insl
gs
je
add
adc
and
xor
les
hlt
jne
gs
push
movsb
inc
mov
inc
movsl
push
xchg
test
in
aad
lds
in
hlt
jne
gs
push
movsb
inc
mov
inc
cmpsb
push
test
hlt
add
adc
and
and
hlt
jne
jl
push
movsb
jne
lods
inc
mov
lods
jo
add
xchg
aad
inc
lret
xor
in
addl
in
imul
nop
pop
mov
mull
jg
mov
xor
pusha
out
jo
orb
pop
mov
dec
rorb
outsl
lock
adcl
push
scas
xor
pusha
out
jo
adcb
push
mov
push
rolb
ja
add
push
lret
xor
leave
inc
nop
outsl
rorl
pop
addb
nop
ret
shr
stos
arpl
adc
xchg
cvttps2pi
ljmp
xor
ds
lods
pushl
andl
sbb
cmp
pop
push
and
jp
ffreep
pop
inc
loopne
fldenv
out
mov
lds
loopne
shlb
insb
rorb
push
sbb
popa
lods
push
push
xor
adc
jg
in
lret
dec
jnp
fldt
loope
icebp
pop
adc
pusha
xor
push
int
push
iret
cmpb
out
push
mov
lds
cli
pop
outsb
jnp
push
out
cmc
fcoms
inc
jl
push
aas
pusha
in
sbb
ficomps
nop
push
ss
rorb
loopne
lock
xor
pusha
cmc
jo
psubw
dec
aad
lods
dec
cltd
test
mov
inc
loopne
lahf
inc
stos
pop
fisubl
andb
data16
lock
aad
xchg
adc
sbb
dec
gs
adc
popa
lret
and
mov
jmp
dec
mov
sarb
outsl
lock
adc
inc
iret
push
fbld
jo
orb
pop
mov
dec
rcrb
outsl
lock
adc
inc
iret
push
fbld
jo
orb
or
test
cmp
pop
mov
arpl
call
mov
jp
mov
dec
adc
cs
jno
cmp
mov
xor
push
mov
mov
lret
popf
mov
dec
cmp
mov
cmp
rolb
aaa
loop
jmp
xchg
push
and
xorb
imul
std
xor
iret
test
push
xor
or
out
cmpsb
push
mov
sub
dec
push
test
jge
ret
sarb
xor
loope
insl
push
scas
jb
push
dec
inc
std
add
scas
cmp
loope
pop
pop
dec
jl
iret
out
pop
es
inc
mov
inc
fcmove
push
bsr
inc
and
xchg
jecxz
dec
mov
adc
out
xchg
inc
mov
sub
pop
stc
loope
or
scas
sbbl
jbe
les
sub
movsl
test
xor
cmp
int
lds
leave
subl
daa
mov
xor
mov
xchg
dec
or
cmpsb
jl
clc
push
jl
js
mov
out
in
jmp
ret
mov
les
sub
sbb
lods
sbb
jmp
cmp
push
jmp
pop
cmpsl
adc
mov
xor
lods
push
mov
jo
mov
sbb
into
cli
push
jg
push
movsb
sub
push
incl
es
or
inc
ds
adc
push
sub
stc
test
js
jmp
pshufw
sahf
adc
sub
xchg
mov
cmp
and
adc
xchg
inc
or
xchg
add
sahf
jle
xchg
xor
das
or
in
dec
mov
cwtl
in
shrl
mov
inc
sbb
adc
rcrl
hlt
mov
fcom
cmp
sub
xchg
inc
test
lods
leave
mov
adc
jmp
sahf
mov
mov
and
lds
pop
leave
inc
aad
push
jge
in
js
or
xchg
in
insl
mov
xchg
int3
mov
inc
vpmacsdqh
les
mov
mov
aaa
lret
filds
fnstsw
rol
scas
cmp
jge
xor
js
inc
imul
dec
add
dec
mov
add
cmp
adc
pop
fmull
push
cltd
mov
jmpw
jle
sbb
movsl
or
xor
add
mov
mov
movsl
mov
cmpsl
js
rol
xchg
jae
movsb
push
and
icebp
loope
xchg
popf
gs
cltd
inc
mov
aam
in
enter
sahf
jmp
imul
jno
popf
add
xlat
mov
dec
imul
add
stos
mov
mov
jae
lds
dec
gs
out
pop
cwtl
lds
xchg
int
loope
pop
inc
sbb
mov
push
dec
cs
inc
cmp
loopne
xchg
mov
out
mov
xchg
push
popa
out
and
inc
push
icebp
ret
push
int3
divb
or
sub
cmp
push
xor
lahf
adc
cmpsl
add
fidivrs
sub
or
and
aaa
ret
jae
mov
adc
out
xor
leave
xor
and
mov
out
jne
sub
ljmp
je
pusha
fiaddl
stos
scas
mov
mov
rcll
test
lock
xor
lods
push
jge
jbe
mov
adc
idivb
or
pop
pop
jbe
sbb
mov
xor
fs
andb
pusha
inc
stos
jg
jno
inc
or
imul
or
jmp
sub
inc
test
mov
cmp
sub
jmp
sub
pop
xor
lods
xchg
popa
stos
cmp
xchg
xchg
fstpl
pop
and
and
es
lcall
data16
sub
cli
mov
xchg
fisttpll
jg
notl
push
je
subb
mov
ret
cmp
pushf
dec
pop
lods
cs
lahf
clc
stos
cmp
es
adc
pop
sbb
xlat
in
xlat
cmp
xchg
jg
adc
mov
js
sub
out
ljmp
rorl
jecxz
arpl
jmp
pop
adc
daa
clc
sar
adc
sub
xchg
xlat
scas
lret
inc
sub
mov
lret
xchg
push
sub
or
cmp
and
lods
mov
cmpsb
dec
arpl
clc
outsb
fcmovu
stos
maskmovq
testl
lahf
adc
jb
inc
fstl
xchg
push
out
lret
xor
xchg
imul
iret
cmp
mov
adc
enterw
inc
gs
scas
inc
mov
rcll
sti
aad
in
mov
rcrb
hlt
pop
mov
xor
es
and
icebp
mov
mov
les
ret
add
jl
inc
mov
pusha
pop
inc
xor
ret
and
flds
mov
sbb
jb
push
add
jmp
xor
rcrb
cmp
stos
and
xchg
std
std
negb
mov
das
enter
inc
fcomp
mov
leave
popf
imul
mov
int
and
or
pushf
or
xor
andl
add
adc
mov
mov
fwait
aaa
lds
js
notb
dec
cmp
pop
push
add
pusha
iret
and
inc
cmpsl
std
cmp
push
ljmp
loop
fnsave
mov
fildll
or
test
rorl
inc
std
addr16
cmpsb
imul
jg
add
pop
and
xlat
int3
fwait
cmp
pushf
xchg
mov
enter
movl
pop
call
mov
inc
out
inc
aad
jnp
and
lret
stos
and
or
sti
lea
sub
out
les
outsb
or
cmc
add
sbb
movsl
ljmp
repz
cwtl
and
jecxz
mov
fdivl
or
mov
jge
push
mov
in
test
mov
jo
adc
sub
cmp
cmp
mov
xchg
pop
inc
xchg
mov
sbb
int
cmovge
dec
cmpsl
sbb
jb
fs
divb
inc
ljmp
jl
ss
or
xor
mov
out
popa
adc
pop
pop
negb
sbb
pop
lret
mov
leave
ds
ret
fcompl
popa
fimull
repnz
nop
and
xchg
dec
jl
roll
and
cmp
das
mov
mov
in
mov
or
or
inc
outsl
jne
or
incb
outsl
repz
lret
mov
mov
test
je
cs
xor
mov
pop
xlat
mov
xlat
mov
int3
mov
sub
mov
addb
pop
pop
leave
xchg
xchg
jl
push
jp
and
xchg
repnz
cwtl
jo
xchg
xchg
testl
leave
jg
push
and
sub
add
pusha
bound
gs
fldenv
gs
ljmp
adc
inc
add
or
fadds
lods
and
push
mov
adc
push
jle
jg
mov
aas
shlb
xor
lock
cwtl
je
icebp
fs
dec
xor
jecxz
pushf
mov
repz
shll
insl
aaa
sub
stos
pop
adcb
popl
sub
mov
int
andl
ret
cmp
rcl
imul
inc
xchg
test
in
xchg
or
push
xchg
imul
mov
sti
cmp
in
inc
sub
fdivs
push
cmp
fildl
ret
lcall
xor
add
mov
stos
mov
cmpsb
sbbl
fidivl
data16
lods
sbb
das
sub
xchg
std
cld
pop
fucomip
in
sahf
call
adc
xor
outsl
xor
lods
sub
mov
push
in
lahf
or
cmp
xor
sbb
aad
aaa
add
stos
sub
lods
and
xor
cmp
xchg
xchg
xchg
xor
ret
add
sti
scas
cmp
out
fcompl
lea
mull
test
xor
imul
cmp
lea
arpl
mov
mov
xchg
mov
in
pop
std
cli
mov
dec
pop
adc
lock
xchg
sub
add
scas
xor
cmp
pusha
mov
cmp
pop
jnp
inc
pushf
dec
xlat
pop
mov
out
sarb
jp
inc
push
rcll
mov
fdivrs
cli
insl
addb
or
dec
jl
dec
movsb
popa
pop
xor
ljmp
xor
loop
jnp
lods
inc
xchg
leave
push
arpl
sbb
fdivrs
inc
push
mov
sub
outsb
test
mov
or
lret
xchg
test
xor
js
sbb
xchg
ret
mov
lea
out
add
pop
ffree
lods
addb
je
mov
out
sbb
adc
popf
xor
fdiv
and
pop
sbb
mov
ret
cli
ret
jmp
push
in
pop
mov
mov
mov
inc
daa
dec
pop
pusha
mov
cmp
stos
sub
sbb
cli
int
shlb
jge
neg
xchg
jmp
inc
movsb
in
jl
inc
iret
std
pop
sarb
movsl
fucom
lock
insb
mov
in
cs
jl
mov
mov
mov
add
push
sub
mov
sub
bound
stos
cmpsb
adc
fs
sub
jmp
popa
fisttps
ret
push
lods
sti
push
mov
testl
xor
idiv
shlb
fwait
stos
jmp
fwait
inc
mov
pop
les
xchg
jge
arpl
xchg
sahf
dec
repz
pop
push
pop
cli
xor
in
test
sub
icebp
mov
mov
xor
mov
sbb
gs
movsl
adc
inc
daa
test
in
loopne
out
jbe
xchg
fidivs
xchg
test
sti
xchg
idiv
cmp
push
std
aas
jmp
shr
mov
cmp
dec
ljmp
xor
cmpb
call
and
mov
sti
adc
sbb
or
sub
sbb
adc
fstp
stc
pop
push
mov
pop
cmp
sbb
fisubrs
push
mov
mov
adc
cmc
pop
dec
adc
int3
mov
xchg
ret
pop
imul
mov
push
push
mov
sti
jmp
jmp
sbb
mov
cltd
outsb
daa
sbb
fidivrs
sbb
add
mov
repz
mov
sbb
outsb
lret
in
bound
imul
cmp
cmp
and
dec
jbe
inc
jmp
dec
int
stos
jmp
loope
in
into
dec
cmpsl
ljmp
lea
cmp
mov
cmp
push
push
je
inc
jg
xor
stos
xchg
cwtl
cmp
jbe
addr16
jns
xor
jmp
mov
fcmovb
jbe
xchg
inc
insb
cmp
sar
lea
push
imul
mov
push
mov
imul
bound
mov
sbb
mov
and
leave
outsl
mov
mov
push
xorl
mov
mov
lds
xchg
add
mov
push
jbe
xor
ja
imul
mov
push
ljmp
adc
jp
xchg
mov
jl
insb
pop
repz
jno
ficomps
xor
pop
dec
les
ss
and
adc
fnstenv
les
cmc
pop
cltd
dec
push
or
xchg
mov
shr
sub
mov
xchg
js
cmp
cld
jmp
in
test
insl
add
cmp
nop
or
lcall
loope
int3
xor
lcall
fwait
test
aam
adc
sub
push
loope
jmp
push
or
fwait
cmpl
push
pop
dec
cmp
popa
addr16
mov
mov
daa
loopne
xorl
je
push
xor
lods
cmp
fs
mov
mov
mov
fisttps
dec
dec
jle
fstpt
and
in
and
mov
int3
jp
roll
loope
inc
lock
sub
adcl
inc
aaa
aaa
or
jmp
pop
rcll
leave
lret
orb
js
inc
and
or
sbb
ffree
in
inc
jbe
addb
pop
mov
or
out
pop
mov
jo
or
dec
push
push
negb
int3
outsb
or
hlt
pop
loope
xor
xchg
push
loope
dec
fstl
aaa
divb
lock
test
cmp
jmp
sbbl
lahf
mov
add
push
mov
mov
pop
mov
mov
jmp
xor
jbe
jae
out
inc
mov
cmp
and
push
cli
push
test
mov
jg
mov
mov
fs
lret
mov
mov
fildll
mov
mov
lret
ljmp
dec
iret
imul
sbb
test
inc
not
jno
jecxz
add
fstps
out
xchg
or
xchg
add
cwtl
mov
popa
adc
adc
inc
xchg
test
cmp
cwtl
out
jl
test
cmp
xor
xor
jmp
jno
mov
enter
adc
add
test
lock
cmp
sbb
mov
sub
mov
das
or
dec
gs
inc
push
dec
inc
mov
notb
popa
ret
adc
cmpsb
xchg
cli
cmc
xor
sub
mov
negb
cmp
mov
adc
add
out
icebp
pop
dec
cmp
ret
push
mov
loopne
cmp
adc
jns
fcmovb
xchg
jg
xor
out
stos
adc
sbb
cbtw
pop
js
adc
bound
adc
mov
aam
inc
clc
lods
jno
mov
xchg
std
scas
push
sarl
add
shlb
inc
jno
add
fdivr
imul
insl
adc
cltd
sub
xchg
shl
loop
mov
leave
push
adc
inc
sbb
cmpsl
or
inc
pop
cmp
outsb
out
scas
push
enter
xchg
ss
enter
les
fidivs
jp
icebp
xchg
sbb
test
repz
xchg
dec
mov
lahf
lret
xor
mov
sar
and
adc
nop
into
jl
cmpsl
jge
into
adc
jecxz
or
adc
pop
pop
pushf
and
xor
dec
addl
pop
xlat
inc
adc
fidivs
sbb
xchg
in
testb
xchg
pop
out
push
dec
aad
sbb
cmpb
in
rclb
lret
mov
mov
inc
ja
mov
push
xchg
pop
push
xchg
out
ljmp
jmp
dec
jno
and
cld
aas
jbe
cs
inc
push
scas
jo
push
or
popa
fnstsw
xor
mov
popa
mov
ljmp
daa
test
jp
and
clc
push
mov
aaa
jecxz
adc
sub
xchg
jbe
cltd
add
jg
mov
loope
dec
cmpsl
dec
xor
adcl
push
push
arpl
mov
xchg
push
adcl
repnz
outsl
jle
jle
bswap
ret
mov
adc
aad
inc
hlt
rcll
jle
testb
add
or
leave
and
shll
push
mov
mov
push
fmulp
inc
in
iret
add
pop
test
ljmp
and
xchg
repnz
mov
or
clc
pop
inc
jae
and
jmp
xchg
and
mov
shll
pop
add
call
mov
movsl
pushf
rcll
sub
stc
push
xlat
mov
xchg
and
add
ret
divb
xchg
jecxz
out
outsb
mov
jne
jnp
xchg
stc
push
ss
mov
das
test
push
xor
pop
fs
cmp
stc
xchg
sbb
mov
mov
in
lock
cmpsl
push
add
insl
out
sahf
movsb
testb
rclb
insb
and
xor
sub
xchg
lcall
xor
push
inc
shl
lds
lret
lea
and
push
test
push
cmc
aam
pop
or
loop
mov
xchg
rcrb
sub
imul
imul
stos
dec
in
add
std
rcr
int3
js
stos
into
push
xchg
push
lods
lods
add
pop
into
lret
loope
mov
scas
inc
jg
sahf
fnstenv
jbe
push
cmp
adc
xlat
pop
add
test
pop
lds
mov
in
shlb
daa
push
sbb
rcrl
xchg
and
cmp
pop
sub
sti
inc
sub
add
loopne
add
inc
mov
addr16
fdivr
mov
jbe
outsl
imul
and
jecxz
cmc
xor
icebp
add
sub
pop
mov
mov
adcb
mov
repnz
xlat
and
xor
ljmp
mov
mov
inc
add
in
push
jo
movsl
mov
stos
mov
test
stos
xchg
xchg
or
pushf
xchg
fbstp
push
int3
enter
pop
push
mov
dec
cltd
sbb
sbb
dec
push
pop
fldcw
mov
pop
repz
icebp
xchg
push
and
xchg
in
inc
test
cld
movsb
jbe
mov
ljmp
and
and
test
scas
scas
insb
push
mov
xchg
cmp
lret
fdivp
mov
mov
test
fsubrs
mov
sbb
stos
pop
mov
aam
lds
in
nop
nop
repnz
mov
jb
mov
or
es
repz
push
jg
mov
popa
movsl
or
insl
les
lret
mov
lcall
das
sub
cwtl
fwait
aaa
xchg
adcb
fdivl
andb
sub
sbb
repz
std
xchg
mov
adc
je
or
add
in
pop
cmp
cmp
push
test
cwtl
push
cmp
lods
cmpsl
sub
cmp
fwait
aam
mov
jne
sti
fbstp
pop
xchg
adc
cmp
fwait
std
lock
lret
repz
mov
mov
jp
jmp
loope
mov
pop
inc
ret
adc
std
sub
scas
enter
adc
lahf
fsubr
fwait
and
out
sarb
fcmovnu
ret
mov
popf
imul
inc
jg
sarl
mov
sub
fdivs
xchg
push
aaa
push
popa
repnz
outsb
rcrl
sahf
repz
push
mov
sub
loope
imul
cmp
inc
int
les
repz
out
mov
std
adc
int3
shrb
lock
jns
js
pop
dec
or
dec
and
mov
inc
mov
or
inc
pop
test
push
mov
xor
and
cmpsb
arpl
dec
lea
xchg
lcall
repnz
data16
cmp
cmp
ret
in
push
pop
mov
xchg
repz
pusha
ret
popa
in
orl
aad
xchg
push
jl
fisttpl
inc
scas
mov
decl
or
and
sub
mov
clc
stc
add
out
addb
fucomi
das
pop
jae
add
pop
fiadds
xor
ret
fsubl
pop
dec
cmp
and
lds
inc
aam
xchg
in
inc
icebp
inc
xchg
aad
ds
into
ljmp
sbb
fwait
inc
ds
adc
pop
xlat
lahf
out
in
nop
push
int
outsb
gs
insl
mov
pop
sub
addr16
and
das
lret
daa
add
scas
lret
ret
jge
rcrb
pop
addr16
or
mov
fwait
bound
push
pop
jo
imul
cs
sbb
jle
inc
push
xor
inc
xor
or
leave
inc
icebp
xor
jle
or
cld
aam
mov
subb
dec
rcrb
aad
inc
push
mov
adc
add
and
sbb
push
push
push
push
push
sti
pop
push
and
push
adc
cmpsb
js
jne
sbb
sub
in
sbb
add
mov
cmpsl
push
out
jle
pop
in
cmpsb
mov
roll
popa
xchg
mov
enter
dec
cmpsb
pop
jle
popf
inc
xor
mov
leave
cmp
ds
fidivl
aas
xor
in
cld
jne
lods
mov
dec
push
jae
jge
mov
jno
and
pop
inc
daa
into
add
mov
dec
stc
dec
shlb
in
fcmovb
adc
push
cs
sbb
add
jo
jmp
neg
pop
test
movl
aas
inc
mov
or
mov
push
inc
cmp
aam
push
imul
std
cli
adc
out
jle
pop
push
imul
lret
push
xchg
push
pop
mov
push
mov
add
xchg
movsb
daa
cmp
cmpsb
pop
push
ja
adc
movsl
and
daa
cmpsb
inc
mov
cmp
rcr
and
xor
mov
mov
or
mulb
pop
pop
das
mov
rorb
loopne
lock
adc
inc
iret
push
fbld
jo
orb
pop
mov
dec
rcrb
outsl
lock
adc
inc
iret
push
fbld
jo
orb
pop
mov
dec
rcrb
outsl
lock
adc
inc
iret
push
fbld
jo
orb
sbb
dec
rcrb
outsl
lock
mov
fsubs
mov
test
jae
add
cmp
dec
mov
add
or
add
add
add
adc
sbb
add
add
mov
add
add
into
add
add
adc
adc
scas
add
add
adc
add
add
add
jmp
add
add
add
add
add
add
add
add
add
filds
dec
add
add
mov
push
popa
add
jmp
add
add
add
add
add
daa
add
pop
add
add
add
add
add
add
xor
jge
pop
add
add
add
pop
add
add
add
add
daa
add
add
push
add
add
fildl
sbb
test
movsb
add
faddl
and
add
jo
jmp
add
add
add
add
jnp
push
add
add
add
add
add
add
add
add
xor
push
add
add
faddl
scas
add
add
add
add
add
add
jbe
and
ret
add
pop
add
inc
add
jge
movsb
add
add
add
add
add
pop
add
add
add
or
faddl
push
add
scas
add
add
pop
out
add
add
add
pop
add
test
and
cmpsb
add
add
add
add
add
add
add
les
faddl
push
add
add
add
add
outsb
add
add
cld
add
iret
add
add
add
add
add
add
add
incb
inc
add
jmp
add
add
loop
jbe
pop
add
add
add
push
add
add
add
jmp
testb
add
jbe
jbe
mov
push
pop
add
add
add
add
fiaddl
out
add
add
add
add
add
add
add
add
jbe
and
xor
adc
add
and
mov
xor
outsb
add
jmp
mov
popa
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
xor
dec
add
pop
add
add
add
add
add
add
pop
popf
add
add
inc
add
jge
jge
cmp
jne
jp
dec
add
add
add
faddl
xor
das
add
inc
add
jmp
adc
out
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
cwtl
add
faddl
xor
add
add
pop
push
add
add
adc
add
add
pop
inc
add
add
add
addl
xor
add
add
add
jge
into
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
inc
add
pop
add
add
add
add
adc
and
adc
add
add
add
add
incb
popl
int
into
add
add
add
add
add
add
loopne
inc
add
pop
shlb
mov
add
shl
or
or
push
loop
inc
sbb
out
test
cmp
clc
lret
out
or
call
cmp
shrl
clc
push
movb
idivl
xchg
rcrb
mov
inc
or
mov
outsl
sbb
scas
sbb
mov
or
pop
in
lea
jo
std
inc
xor
mov
add
aad
sub
pop
pop
pusha
add
cs
adc
mov
pushf
out
inc
jno
mov
movq
ret
pop
loope
xor
int3
jnp
js
out
jnp
xchg
loopne
je
push
sbb
xchg
inc
pop
and
pop
outsl
sbb
adc
in
pop
dec
xor
jge
dec
mov
movb
xor
and
notb
mov
in
fstpt
inc
fimull
mov
mov
insb
dec
jno
movsb
aad
xchg
lret
xchg
xor
xchg
lea
jl
cmc
sub
lea
repz
insl
leave
cmp
adc
int
cmp
mov
fwait
adc
loope
in
fst
fiaddl
dec
ljmp
insl
add
roll
push
in
or
inc
xchg
jge
lret
mov
sub
mov
subl
push
dec
push
adc
xchg
push
ror
jmp
roll
dec
fbld
inc
lods
faddp
movsb
mov
ss
mov
jo
mov
jns
xchg
cld
sub
ret
bndldx
and
lock
add
or
sub
push
call
fiadds
mov
and
or
jg
mov
inc
fiaddl
pop
out
mov
cmp
movl
lret
cld
xchg
in
sbb
xlat
gs
insl
call
jmp
sub
fwait
das
scas
adc
xor
jl
jbe
pop
mov
or
jo
out
test
adc
es
shlb
sub
adc
pop
gs
push
pusha
ret
cmpsl
scas
out
and
lret
add
dec
mov
iret
hlt
mov
iret
adc
or
popa
mov
xor
cmp
xor
dec
pop
sub
cmp
popf
out
mov
movsb
push
rolb
sbb
inc
iret
jno
aam
mov
mov
aam
mov
pop
orb
cltd
test
fwait
lock
movups
sbb
lcall
test
std
in
cmp
fsubs
mov
sarb
stc
sub
xchg
add
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
