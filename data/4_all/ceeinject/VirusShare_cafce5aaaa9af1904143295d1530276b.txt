loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
outsb
dec
jle
dec
xchg
pop
sbbb
adc
out
xor
cs
add
add
inc
sahf
inc
outsb
mov
mov
cs
rcrb
ret
and
xor
add
push
sahf
inc
ja
addr16
inc
fwait
aaa
jmp
cli
push
lret
not
fstpl
xchg
cmpsb
add
add
inc
pop
mov
lret
dec
out
or
ds
dec
flds
push
push
xchg
mov
sbb
out
and
add
ds
pop
mov
mov
lret
and
imull
setno
and
in
movsb
mov
cs
scas
push
xchg
lods
sahf
inc
outsl
loop
mov
rcl
aas
and
mov
cmp
sti
repnz
push
and
sub
mov
inc
ret
insl
mov
push
inc
sub
out
mov
add
mov
mov
or
cmp
std
call
jae
mov
mov
jmp
in
pop
mov
addr16
sbbb
repnz
lret
pop
fcomi
sub
cmp
or
sbb
push
sahf
es
sbb
pop
movsb
pop
mov
push
scas
out
pop
xchg
pop
mov
pop
cld
push
repz
add
pop
mov
inc
cmpl
scas
lods
dec
fwait
inc
into
data16
inc
scas
add
or
or
adc
and
mull
loop,pt
rcrb
ret
and
adc
add
push
sahf
inc
outsb
mov
mov
cs
rcrb
ret
and
adc
add
push
sahf
inc
outsb
mov
and
inc
iret
pop
xchg
fldt
iret
movsb
mov
push
push
or
dec
jg
ljmp
mov
ljmp
aam
vmovsldup
cs
data16
dec
cmp
int
pushf
adc
mov
xchg
in
enter
test
jge
pop
add
sub
in
push
adc
xor
adc
rep
xor
mov
pop
call
or
dec
imul
jno
gs
movsl
xchg
and
daa
negl
adcb
or
jle
aas
dec
shlb
fbstp
repnz
aad
mov
stc
dec
popa
aas
fsubr
sub
lret
adc
sbb
sti
push
or
or
rorb
lea
lods
test
fidivrs
mov
xchg
pop
jnp
push
out
and
sub
rorb
sbb
jle
nop
xchg
or
clc
addr16
jb
push
jmp
mov
mov
gs
jno
icebp
popf
xchg
mov
pusha
imul
mov
pop
cli
mov
fcomps
sbb
pop
jbe
nop
mov
mov
rcrl
jecxz
inc
sbb
push
push
xchg
insl
adc
ljmp
cmp
popf
gs
mov
inc
ja
out
dec
or
jae
addr16
and
dec
sbb
outsl
mov
std
pop
test
iret
add
outsl
fwait
lock
ds
jnp
xchg
cmp
fld
jecxz
jmp
roll
add
add
cltd
imul
and
sbb
dec
xor
add
lock
popf
repnz
popa
sbb
mov
pop
es
shl
adcb
test
mov
or
lods
cmp
mov
and
leave
xchg
adc
jnp
xor
cmp
lods
fprem1
out
or
cmp
push
lods
xor
leave
xchg
or
cwtl
xor
mov
dec
adc
inc
aad
jae
lods
xor
fidivl
mov
cmp
test
pop
sbb
movsb
gs
sbb
outsl
jno
mov
sbb
dec
lret
in
loop
bnd
test
push
int
pop
and
stc
inc
lea
push
cmp
jecxz
inc
mov
pop
movsl
test
test
mul
mov
call
bound
mov
fmul
adc
cltd
js
into
cmp
addr16
sbb
pushf
push
dec
stc
daa
cltd
jle
es
mov
xchg
fmuls
cmp
sar
jnp
sub
add
out
leave
adc
sbb
cwtl
pop
mov
mov
mov
lods
cltd
push
out
and
aad
into
daa
into
aaa
ds
aaa
sahf
dec
fmuls
push
and
dec
pop
push
mov
dec
add
mov
ja
dec
adc
and
fnstsw
xchg
adc
and
rcll
or
les
and
add
stc
imul
sbb
rolb
out
popf
fimuls
jl
mov
cmp
or
out
subb
int3
adc
mov
xchg
outsb
and
and
dec
ds
mov
dec
dec
mov
sbb
hlt
cmp
jecxz
cmc
adc
mov
adc
cmpsb
dec
lcall
idiv
xor
cmp
pop
inc
mov
outsb
pop
stos
sbb
shrl
lret
sub
aas
sbb
inc
jmpw
push
in
cltd
roll
push
and
arpl
jae
push
scas
mov
cmpsl
jo
icebp
inc
scas
insb
xchg
scas
icebp
xchg
xor
fmulp
hlt
jbe
insl
sbb
fwait
arpl
daa
sub
lahf
dec
sbb
ljmp
into
inc
insb
enter
out
push
mov
ja
mov
add
lret
mov
invd
or
cmp
test
in
scas
ds
pop
cmp
or
pop
mov
and
in
js
sbb
mov
pop
in
fldl
inc
add
sbb
xlat
into
pusha
pusha
mov
cs
jmp
xorw
mov
xor
pop
sub
add
stc
jno
mov
in
popf
cmp
cmc
jne
xchg
lods
mov
cmp
in
cmp
js
iret
test
lret
pop
xor
cmp
push
sub
clc
cld
aam
and
in
push
and
test
in
xor
mov
sub
movsb
push
cltd
push
ficomps
xchg
sar
pop
adc
xlat
movb
push
enter
dec
add
testl
lcall
cmp
pusha
movsb
dec
clc
mov
jge
xchg
fs
sub
xor
add
test
adc
fdivs
add
clc
cmp
mov
je
add
sub
or
cli
push
shrl
sarb
scas
fcmovb
fadd
mov
loopne
sub
xor
insb
dec
mov
jo
hlt
fcompl
data16
mov
pop
inc
cvtdq2ps
pusha
in
push
pop
and
push
lods
test
dec
arpl
outsl
pop
arpl
flds
rcl
je
pop
pop
pop
aam
cmpb
fisttps
and
jae
flds
dec
imul
inc
dec
inc
addl
in
xor
clc
jae
jnp
inc
test
jbe
pop
popf
ror
shl
les
jmp
pop
ficompl
aam
bnd
xchg
pusha
leave
in
test
xlat
int
push
adc
int
dec
test
adc
jg
leave
sti
inc
or
mov
pop
lock
add
out
nop
fadds
in
inc
lods
adc
and
xchg
or
cs
aas
ljmp
pushf
not
mov
jmp
aam
mov
aad
xor
loop
clc
or
andl
adc
ret
adc
mov
out
orl
xchg
inc
adc
enter
pop
xchg
in
into
jns
jno
mov
imul
mov
ljmp
pop
dec
roll
jmp
mov
sahf
jbe
add
add
jnp
push
mov
push
dec
mov
dec
xor
stc
push
insl
std
mov
xchg
and
stos
sub
ss
movsl
adc
popf
jno
in
pop
lcall
jge
sbb
insb
push
and
outsb
mov
mov
and
cld
sub
in
xchg
jns
dec
in
sub
shlb
add
adc
add
adc
jg
int
and
outsl
fstpt
adc
sub
jle
sub
cltd
push
xor
xlat
mov
cmpl
lods
ja
inc
mov
mov
enter
xchg
sbb
pop
lock
mov
andl
test
in
test
mov
sbb
pop
inc
push
ficomps
filds
push
dec
mov
sbb
and
cmc
mov
sub
test
pop
aas
test
sbb
push
jmp
mov
inc
adc
pop
push
in
in
push
cs
jge
shl
fidivl
sub
aam
es
xor
push
pop
sahf
lods
je
pop
in
leave
test
fdivl
lahf
cli
dec
dec
mov
pop
test
and
inc
addr16
pop
mov
jmp
dec
add
sub
adc
sahf
push
lods
jo
jne
sub
jp
lods
mov
inc
aad
xor
jg
addr16
out
arpl
pop
sti
and
jle
and
test
jno
xchg
aad
xchg
out
mov
inc
xchg
in
pop
jo
test
out
movsl
jns
mov
mov
push
cltd
mov
icebp
cmp
mov
or
filds
test
das
scas
lret
scas
scas
mov
dec
je
lock
cmpsl
add
push
pusha
jg
jb
pusha
mov
sub
flds
imul
hlt
icebp
adc
cmp
popa
mov
and
mov
test
mov
iret
pop
sub
adc
daa
scas
push
cmpsl
cmp
imul
add
rol
rolb
push
push
hlt
pop
loope
push
and
fs
sbb
jnp
or
sahf
mov
repnz
cmp
dec
es
mov
sbb
inc
cmp
lret
stos
dec
iret
push
and
fcomps
push
mov
sbb
push
psrad
or
dec
and
cmp
mov
mov
xor
mov
push
inc
cmp
xchg
add
mov
enter
outsb
sub
mov
addb
lock
enter
xchg
fcmovnu
jo,pn
mov
int
insb
int3
inc
xchg
insb
adc
add
xlat
cld
mov
or
add
sar
add
sbb
pop
ljmp
aaa
add
jg
cld
mov
lods
imul
lods
mov
lock
mov
pushf
cmp
mov
outsb
call
jno
add
enter
dec
push
lahf
test
mov
js
dec
lds
shlb
sbb
lcall
in
data16
in
cmp
add
ret
lahf
movsb
mov
and
dec
pusha
add
fbld
scas
repz
inc
pop
call
xchg
in
retw
sub
pushf
jnp
mov
out
daa
stos
push
out
add
jbe
into
push
and
pushf
add
out
arpl
mov
and
outsb
pshufw
out
mov
outsb
dec
mov
push
xchg
xorb
or
ret
xor
dec
fisttpl
and
fidivrs
and
pop
mov
fs
mov
hlt
or
mov
mov
or
fcom
xchg
je
lock
xor
adc
rcr
fstps
jg
mov
pop
mov
scas
xchg
xchg
xor
into
fwait
mov
or
pop
push
rcll
test
scas
arpl
loope
add
out
and
inc
mov
pop
adc
jle
sti
in
xor
jle
sarl
arpl
fldl
xchg
movsl
dec
fstpl
insb
pop
push
int
cmp
dec
addb
js
cmp
xor
ret
pop
lahf
mov
rclb
leave
mov
pop
cltd
rep
adc
loope
imul
push
mov
test
pushf
fidivl
in
in
bound
icebp
xlat
pop
test
stos
into
inc
mov
bound
aas
test
mov
aad
iret
adc
jmp
push
nop
pop
das
shlb
dec
pusha
push
aaa
xchg
popf
mov
mov
popf
push
push
iret
fdivrl
jnp
outsl
dec
mov
inc
inc
xor
xor
xchg
pop
add
push
xor
mov
or
movsl
adc
popl
divl
test
in
lds
hlt
push
lcall
pop
xchg
mov
mov
inc
and
shll
lods
jb
add
jns
or
data16
and
mov
add
scas
adc
or
add
cs
xor
pop
push
dec
pusha
rol
lds
and
jg
stc
add
lret
repz
loope
sub
sti
movsb
cmp
sub
mov
mov
movsb
xchg
adc
lahf
mov
out
popf
cmp
bound
orl
jge
fwait
adc
jmp
bound
jmp
jnp
push
sbb
out
sub
push
dec
cmp
addr16
fsts
xchg
shl
cli
fstps
and
jp
sub
movsl
cmp
rcrb
inc
push
mov
mov
adc
mov
ret
inc
push
ficoml
inc
mov
iret
pusha
call
adc
addb
jbe
jno
or
movsl
sub
or
sarl
rcll
out
inc
sub
les
xor
pop
cmp
shrl
xor
lock
or
xchg
lahf
mov
mov
es
pushf
pop
mov
pop
stos
mov
loope
out
add
loope
movsb
fwait
or
insl
sbb
das
rorl
jne
mov
cmp
popa
dec
fsubrs
and
pop
mov
dec
ljmp
jbe
xor
inc
jmp
dec
sbb
stos
mov
loop
repz
pusha
cmp
fdivs
dec
std
movsb
test
sub
les
dec
sbb
es
adc
pop
lods
jns
jnp
nop
or
outsl
adc
pop
adc
loop
pop
das
lock
jle
loope
mov
loopne
pop
adcl
scas
pop
sub
mov
std
test
or
ja
movsl
cmc
xchg
cmp
decb
imul
pop
mov
push
lahf
fstpl
std
adc
pop
or
xchg
inc
sbb
and
movsl
pop
popa
enter
mov
iret
sub
lret
aas
lret
aaa
inc
rcrl
call
cli
outsb
cmc
inc
and
mov
rcr
inc
sahf
dec
lods
jnp
scas
cmp
ja
pop
data16
sub
cmp
in
inc
xor
xor
out
leave
popa
sub
adc
mov
mulb
aad
lock
adc
mov
sub
push
xor
lock
inc
int3
jno
fwait
pop
xchg
outsl
sub
xchg
jle
xor
rcrl
jo
mov
push
sbb
pop
popa
push
add
mov
outsl
jle
fstpt
and
test
or
pop
sbb
aad
repz
jo
mov
pop
int
mov
sub
enterw
xlat
in
jge
aaa
adc
lods
adc
fbld
fwait
jnp
divb
xchg
idivb
pop
sub
pop
iret
push
push
mov
add
mov
or
cmp
adc
insb
sbbl
faddl
push
imul
xchg
dec
mov
jl
mov
or
jle
adc
stos
sbb
inc
pop
ret
jle
dec
scas
clc
mov
in
lahf
adc
xor
lahf
movsl
ret
dec
xor
inc
out
or
inc
xchg
cwtl
ja
ror
jge
pop
scas
out
inc
fwait
and
hlt
gs
ja
je
movsb
add
aas
lds
scas
jb
ret
test
cli
sbb
les
xchg
mov
inc
test
lea
mov
sub
fadds
insb
push
jmp
xchg
sbb
loope
outsl
mov
jae
icebp
jb
mul
adc
xchg
movsl
pop
cmp
pop
dec
mov
ljmp
mov
jmp
add
inc
aas
and
dec
orb
test
xchg
or
test
je
loopne
mov
dec
adc
not
pop
jecxz
adc
loop
std
lret
je
ja
dec
lock
fidivl
fstpt
or
jo
mov
aas
mov
inc
in
jbe
ret
inc
outsb
pop
cmp
sub
lock
int
push
push
pop
pop
xor
imul
inc
adc
jns
stc
sub
lret
mov
lock
adc
mov
out
jbe
bound
mov
adc
outsb
cmp
call
ret
sbb
inc
jg
sahf
fwait
mov
mov
ficompl
jb
lret
mov
stc
cwtl
subb
sbb
jno
stos
jns
fdivs
das
icebp
xor
push
enter
and
fldcw
shl
xacquire
outsb
fs
push
sbb
mov
stos
pop
insb
ror
xchg
mov
cmpsl
mov
insb
mov
mov
mov
xor
adc
mov
fstps
pop
roll
dec
pop
in
or
adc
mov
sbbb
lock
loope
sub
jb
dec
jl
or
push
out
or
aaa
outsl
nop
inc
cmpsl
call
and
sarl
aam
jb
sarl
stos
jne
xor
in
jg
clc
repnz
scas
fistpll
popf
inc
inc
mov
mov
notb
and
push
or
int3
iret
jl
jecxz
loope
icebp
push
vpabsq
icebp
lahf
push
dec
repnz
push
leave
sub
call
div
mov
ljmp
xchg
fwait
xor
xchg
fs
sbb
mov
mov
inc
mov
xchg
frstor
in
inc
fbstp
out
cmpsl
dec
jmp
stos
nop
rol
pop
push
push
into
inc
inc
pop
xor
lcall
pop
sub
jb
cmp
sbb
div
arpl
jge
pop
mov
jmp
mov
into
pop
inc
cmpsb
add
out
xor
inc
std
mov
int3
sbb
sub
scas
pop
push
dec
int
dec
faddl
sbb
dec
das
sbb
fucomi
push
lods
mov
les
cs
push
testb
ja
push
mov
cmp
pop
xlat
int
cmpsl
repnz
xor
sbb
mov
xchg
jae
sub
mov
outsb
lock
fisttpll
jg
idivl
stos
shl
js
les
mov
jecxz
and
in
cmp
mov
xlat
shlb
into
pop
pop
ret
fldcw
xchg
inc
adc
mov
or
adcb
pop
int3
mov
jle
sbb
out
mov
xchg
fnstcw
mov
popf
mov
push
inc
shr
cli
mov
xchg
mov
scas
inc
outsl
and
add
push
imull
and
xor
fildll
iret
dec
cltd
decb
loopne
jp
repz
rcrl
test
arpl
mov
popf
cmp
std
out
mov
stos
push
lods
dec
out
scas
mov
fisubrs
out
dec
scas
xorb
std
icebp
pop
pop
xchg
xchg
pusha
loop
or
mov
push
xchg
cmp
xorb
or
in
stc
pop
lea
and
shll
mov
cs
xlat
xlat
jo
lret
push
gs
repz
xchg
pushf
pop
daa
cmp
ljmp
rcl
ds
mov
xor
jne
jne
into
sub
nop
aas
adc
fdivs
and
adc
cld
clc
test
jno
pop
dec
rclb
test
mov
xor
mov
fnsetpm(287
mov
adc
negb
movsb
xchg
mov
push
popa
rorb
push
and
add
mov
mov
repz
andb
inc
mov
mov
jge
push
jne
je
loopne
stos
imulb
xor
cmp
jg
push
imul
adc
repz
adc
push
add
xor
orl
sub
push
dec
ficoms
mov
or
sub
mov
and
dec
xor
daa
test
insb
push
scas
iret
or
xchg
push
ficoml
cmp
add
mov
js
aad
testl
out
pop
jle
inc
fs
add
xor
add
in
rcll
or
in
in
lret
in
fwait
mov
and
sbb
enter
and
xor
gs
cmpsl
fistl
sub
add
add
xchg
adc
cmp
xchg
fdivr
sub
xor
push
pop
out
xchg
cmp
fwait
xchg
int3
pop
and
scas
repnz
rorl
iret
jns
or
ret
inc
in
xor
dec
mov
inc
test
in
sbb
nop
leave
push
inc
mov
xchg
iret
out
pop
xor
mov
cwtl
jne
push
insl
lcall
xchg
mov
sti
cmp
push
lahf
dec
inc
sti
inc
sbb
jp
jecxz
or
or
mov
lods
dec
xlat
or
xchg
lods
and
out
pop
cmp
jbe
sub
push
and
scas
pop
xchg
xorb
sub
sbb
jge
mov
or
mov
nop
cmc
daa
out
lea
pop
push
ret
popa
bound
mov
cltd
lahf
outsl
jae
inc
xlat
ret
jmp
ficoms
or
mov
cmp
jle
sbb
push
push
cltd
popa
into
repz
xchg
push
xor
push
adc
repnz
push
mov
cmp
mov
xor
inc
xchg
push
pop
jp
cmpps
ror
cmpsb
out
ds
pop
sbb
out
cmpsb
filds
and
and
or
push
add
mov
inc
imul
out
idiv
and
repz
xor
sbb
pop
xor
stc
lahf
imul
pop
push
insw
jle
push
xlat
sub
pop
lcall
push
clc
mov
adc
jl
xchg
pop
jmp
jne
adc
push
dec
cmp
xor
pop
xor
adc
sbb
shll
pop
push
popf
inc
inc
jg
pop
bound
cmp
in
jo
lds
lcall
pop
cmp
inc
mov
subl
stos
popf
ret
xchg
inc
lods
into
es
inc
sub
push
mov
movsb
or
jb
inc
cmc
inc
adc
movsl
lods
fwait
push
mulb
inc
pop
sub
pop
ja
adcl
movsb
daa
lock
jns
push
jmp
xlat
pop
xchg
stos
dec
xchg
rcll
fsts
ljmp
mov
cs
rcrb
ret
and
adc
add
push
sahf
inc
outsb
mov
mov
cs
rcrb
ret
and
adc
add
push
sahf
inc
outsb
mov
mov
cs
rcrb
ret
and
adc
add
push
pushf
inc
outsb
mov
mov
sub
loop,pt
rcrb
mov
jne
cli
ss
jno
popa
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lods
mov
cmpsb
lea
popl
sub
push
sbb
insl
jbe
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
fnstsw
or
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
sub
fs
xor
cmp
xor
icebp
xchg
jbe
pop
and
push
test
fdivrl
xor
jbe
fstpl
in
ss
bound
adc
std
arpl
fisubs
int3
rolb
fptan
add
bound
push
rclb
std
mov
stos
mov
call
inc
and
imul
sub
pop
lods
repz
ror
push
call
cmp
xchg
ja
xchg
jbe
cwtl
into
pop
push
imulb
bound
mov
std
outsl
dec
mov
imul
pusha
add
and
pop
mov
dec
xchg
das
testl
cmpl
jne
out
xor
xor
popa
mov
cmpsb
lea
std
out
ffree
sub
push
sbb
dec
push
pop
das
in
mov
out
xchg
hlt
xchg
xchg
xchg
sub
jae
jb
xor
sbb
enter
call
lcall
dec
jge
pop
cmovne
and
sub
enter
loop
icebp
jecxz
fdivr
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
into
adc
inc
adc
sub
push
and
jmp
in
push
in
shl
push
hlt
and
add
outsl
push
call
in
push
or
sub
scas
fcoml
rorb
or
test
pop
inc
pop
imul
ja
out
add
jae
ds
jnp
mov
ds
dec
lret
sub
and
out
cmpl
push
xor
xchg
ja
lock
popf
jg
inc
and
jbe
scas
loope,pn
xor
pop
dec
sbb
or
xchg
pop
dec
pop
in
lahf
push
push
or
mov
scas
imul
lret
cltd
xor
pop
or
xor
cmp
int
mov
add
loope
repnz
mov
inc
pop
loopne
push
lahf
lds
push
shrb
mov
out
xor
jmp
inc
fldl
adc
xor
loope
loop
adc
xor
xor
fldt
mov
pusha
dec
stos
add
or
loope
repnz
push
push
and
adc
out
xchg
cs
cld
xchg
lcall
jmp
jbe
repz
mov
out
test
andb
adc
adc
cmp
push
rolb
nop
les
imul
ret
pop
or
int3
push
dec
ja
dec
iret
shl
test
test
and
mov
sti
in
add
lea
sbbl
add
cld
repnz
dec
mov
jne
roll
fnsave
vdivpd
ljmp
and
xor
in
mov
jns
push
mov
lret
or
lods
xorl
dec
incb
push
roll
sbb
out
cmpsl
ljmp
inc
xor
vmwrite
pop
ja
ja
sbb
fs
andb
xchg
lahf
xor
gs
mov
dec
das
or
and
loope
ret
lret
cli
outsb
push
push
std
imul
rolb
adc
mov
loope
rcr
pusha
test
xor
pushf
mov
push
and
xchg
cltd
ret
xor
fmuls
stc
in
mov
insl
mov
lods
out
ss
add
leave
hlt
cld
adc
push
push
jp
iret
xor
mov
cmc
inc
push
fcmovnbe
jecxz
or
std
mov
add
enter
cmp
mov
jnp
insb
out
int3
mov
add
sub
xor
icebp
jmp
shlb
icebp
fstps
mov
cltd
dec
lret
stos
fstpl
mov
add
lcall
pop
xchg
cmc
pusha
push
xor
pop
fldcw
shll
xor
rorb
vphaddbw
fisubrs
pop
jmp
outsl
inc
lods
cmp
ljmp
lock
sub
or
dec
jae
test
sbb
xchg
push
cld
pop
fiadds
dec
popf
jmp
stos
lea
popa
cmc
das
jecxz
je
mov
inc
inc
cmpsb
sub
outsl
movl
mov
mov
cmp
dec
mov
mov
cli
sub
fcmovb
dec
push
sub
sti
cmp
mov
cmpsb
mov
out
outsb
dec
andb
dec
stos
lret
xchg
fs
jp
aas
add
or
mov
nop
int
imul
nop
leave
jecxz
and
pop
lahf
mov
aad
fidivrs
paddusw
sarl
cmc
rorl
inc
hlt
mov
xchg
mov
ja
call
inc
jge
repz
mov
jge
mov
inc
cwtl
mov
loope
jb
lods
in
mov
data16
inc
out
mov
in
icebp
pop
cmp
push
lret
push
mov
sbb
mov
aad
sbb
popa
add
inc
sti
test
and
adc
xor
cmp
jb
loopne
popa
iret
pop
mov
std
xchg
and
or
xor
mov
xorl
sbb
mov
cmp
push
lods
mov
mov
test
mov
mov
sahf
pop
cwtl
push
xchg
scas
shll
sbb
ja
into
loope
sarl
ret
bound
test
push
pop
mov
xchg
mov
fsubl
mov
xlat
jae
lret
out
xchg
lods
xor
outsl
xor
mov
movsl
mov
inc
iret
dec
lcall
or
pusha
sub
shlb
mov
lock
dec
push
inc
mov
pop
stos
clc
push
push
addr16
push
mov
ficoml
cmpsb
mov
cmp
mov
aad
mov
mov
add
inc
mov
xchg
xor
mov
test
into
xchg
dec
call
pop
mov
test
int
mov
adc
imul
add
rorb
pop
aaa
loope
dec
or
andb
inc
adc
scas
imul
out
adc
xchg
mov
xor
aam
les
aas
rcll
adc
pop
xchg
cmp
sbb
lahf
out
out
adc
mov
dec
addr16
mov
mov
pop
aas
mov
mov
push
inc
jmp
andl
lcall
inc
aad
lods
cltd
sub
cmpb
addr16
mov
adc
and
push
push
scas
cmp
stos
xor
mov
hlt
sbb
lret
call
inc
les
out
aaa
mov
lds
iret
mov
jl
cmp
inc
xchg
out
mov
iret
cmpsb
gs
lods
add
cs
pop
pop
mov
std
cmp
aad
mov
in
jmp
mov
mov
lock
mov
inc
aas
pop
stos
xchg
mov
popa
adc
and
hlt
jae
cmp
jg
dec
outsl
dec
mov
sahf
fisubrs
aas
shl
cltd
loope
flds
pop
sbb
push
cwtl
add
cmpl
mov
cld
mov
push
dec
ljmp
mov
cmp
sub
enter
pop
clc
cmpsb
jle
push
dec
enter
movb
cli
and
pop
mov
repz
sbb
dec
aaa
insb
std
mov
divl
pop
mov
sub
int3
pop
icebp
scas
int
cli
lods
cvtdq2ps
add
ss
mov
stos
call
ss
repz
mov
sbb
imulb
push
leave
outsb
jge
clc
sbb
jecxz
cli
sbb
and
sub
lods
cmpsb
sbb
dec
cmp
xor
sbb
clc
adc
inc
sbb
xlat
inc
pop
sub
popf
inc
in
inc
lahf
and
push
dec
add
popf
sahf
mov
in
fwait
adc
inc
mov
inc
lahf
je
mov
scas
and
and
sub
mov
push
ficoms
and
femms
loope
movsl
jbe
test
ljmp
cmpsl
bound
cltd
push
orb
mov
jbe
sub
movb
xchg
leave
pop
push
out
jecxz
sub
nop
sbb
out
add
pusha
sbb
mov
pusha
leave
sbb
and
mov
lret
les
cmpsb
ret
movsl
repnz
es
hlt
mov
lods
mov
xchg
xor
jp
xchg
or
pushl
mov
ljmp
push
and
push
sub
enter
fisubs
mov
aas
push
shrl
pop
int
out
test
andb
or
sub
je
in
jge
inc
sub
andb
sbb
push
dec
or
and
jns
test
imul
in
and
sub
xchg
roll
cmc
sub
les
insb
push
add
cmp
daa
cmp
and
sbb
lcall
dec
sti
enter
adc
or
push
dec
je
jnp
fimuls
mov
mov
push
push
outsb
mov
cli
inc
mov
test
fs
sub
fisubs
arpl
hlt
sbb
inc
nop
adc
mov
out
lock
xor
inc
scas
sbb
dec
cmpb
or
stos
hlt
jo
adc
jg
inc
int
call
lods
out
stos
add
sub
jbe
pop
mov
inc
mov
ja
and
lea
cmpsl
leave
mov
dec
pop
cli
std
add
push
into
pushf
fcoml
pop
in
add
mov
rclb
xchg
call
or
pop
aaa
loopnew
sbb
outsl
xchg
adc
aad
ret
aad
test
cmp
jmp
in
pop
lods
rclb
fnstenv
enter
adc
inc
mov
push
and
lea
mov
pop
push
leave
rolb
in
addr16
gs
xchg
xchg
adc
call
test
icebp
adc
add
mov
jne
loopne
lret
mov
dec
inc
in
jmp
mov
xor
loop
stos
insl
or
fnstsw
xchg
shl
popf
add
adc
fs
mov
push
push
mov
fbstp
or
push
es
pop
push
mov
add
fidivl
mov
jl
out
notl
xchg
jp
in
in
dec
and
adc
insl
sbb
ljmp
sbb
push
pop
mov
js
fadd
shlb
push
sub
mov
icebp
mov
icebp
fisttps
mov
mov
mov
adc
loopne
jge
aam
mov
sti
push
lods
jno
xor
lock
pop
out
mov
idivl
aad
jp
sarl
mov
fidivs
push
xor
stc
scas
nop
mov
xor
das
push
aam
arpl
mov
xchg
mov
mov
pop
in
outsb
mov
lret
lret
out
pop
sub
cmp
std
pop
psubusw
and
int
imul
push
incb
imul
and
sbb
add
insl
sahf
arpl
xchg
insl
incb
jl
sbb
mov
lods
cld
sbb
cmp
push
inc
aad
loope
sbb
pop
pushf
je
push
push
add
push
out
icebp
mov
aas
addr16
clc
xchg
mov
pop
push
xchg
add
pop
lret
fldt
into
mov
inc
mov
test
or
icebp
jns
sbb
cmp
test
int
xor
and
mov
ljmp
icebp
lock
push
jnp
je
jmp
loop
sub
push
inc
xchg
push
lods
int
std
nop
int3
enter
mov
jp
lret
jne
test
fcoms
sbb
sub
sahf
cmpl
ja
mul
cmpsl
sub
xor
jp
mov
sub
cld
test
push
call
dec
jecxz
pop
xchg
push
adc
push
aam
ljmp
mov
cmp
pusha
andl
fsubs
fwait
xchg
sbb
mov
test
push
or
insl
mov
pusha
in
mov
in
cmp
sahf
xchg
xchg
data16
push
mov
xor
pop
cmc
sbb
sbb
call
lret
mov
hlt
jns
arpl
push
xchg
xor
mov
sbb
and
sbb
pop
sbb
xchg
xchg
fcompl
fistpll
roll
dec
cltd
mov
push
mov
fwait
push
push
ljmp
dec
sbb
xchg
pslld
ss
les
jg
or
push
mov
adc
sbb
scas
xchg
test
ljmp
cmp
mov
jae
inc
inc
xchg
imul
dec
mov
sub
sub
loopne
imulb
add
sub
xchg
clc
pop
lahf
jne
rorl
mov
cli
mov
xchg
sub
outsb
cli
enter
inc
xchg
loope
pushf
add
sub
jge
in
cmp
jnp
fldenv
rcrb
mull
les
inc
inc
dec
lret
pop
cmc
repz
sysret
in
subl
add
adc
pusha
sbb
pop
jbe
dec
dec
sbb
xor
test
mov
ret
pop
leave
jbe
int
push
out
cmpsb
lret
mov
movsl
faddl
inc
jb
leave
incl
je
add
add
rcrl
jecxz
and
push
lret
dec
inc
cmpsb
fwait
jno
push
cmp
shll
test
inc
adc
push
push
sbbb
adc
outsl
sub
mov
jae
mov
jp
push
aam
and
xor
sub
push
mov
jns
in
mov
loope
jle
pop
fistpll
or
ret
jnp
mov
popf
popa
fbstp
cmp
nop
int
in
push
std
imull
sub
fsub
jo
mov
incl
shl
push
sbb
push
outsl
mov
adc
xchg
mov
dec
jns
adc
sub
xchg
mov
mov
cmp
sub
ficoml
push
xorl
notl
out
jne
cmpsl
mov
iret
cmp
xor
mov
divb
ja
pop
or
xchg
in
or
cmp
lret
and
mov
shr
adc
out
mov
cmc
data16
mov
push
jne
sub
pop
movsb
fadds
icebp
jg
fsubs
mov
addr16
xchg
test
call
pop
pop
mov
mov
jg
xchg
das
pop
push
add
mov
jmp
and
pop
or
push
jecxz
aas
loope
jbe
pop
gs
adc
fnstenv
aas
adc
test
push
subl
pop
push
jbe
and
mov
xchg
insb
test
int3
test
mov
mov
dec
mov
inc
incb
sub
cmpsb
push
or
and
loope
test
push
movsl
inc
mov
in
dec
cs
imul
inc
mov
fsubrp
mov
sub
pop
ret
inc
aas
sub
into
sbb
add
hlt
lret
cmp
movsb
fldcw
cs
insb
or
fwait
addr16
jb
scas
inc
mov
mov
mov
js
fidivl
xchg
es
and
xchg
jo
xor
add
les
pop
sbb
outsb
adc
xor
sarl
jns
xchg
mov
add
xor
dec
in
dec
or
ja
jl
adc
lret
nop
insl
dec
sub
pop
add
push
and
out
inc
mov
xor
lock
call
clc
test
add
cmp
cs
cmp
push
ret
fwait
jns
jb
adc
mov
out
xor
and
jecxz
mov
xor
insb
outsl
out
iret
adc
pop
movsb
add
aas
enter
lret
cld
ja
pop
cmpsb
add
sbb
adc
data16
xchg
adc
cmp
rclb
mov
adc
ret
loope
fcmovb
sub
add
or
sub
fisttps
pop
inc
nop
dec
xor
inc
cmpsb
xchg
push
pop
push
int3
add
mov
xchg
lods
cltd
in
imul
lds
xchg
xor
movsl
sbb
loopne
jg
push
bound
sti
xlat
dec
loopne
add
outsb
adc
jae
cmp
add
sahf
ficoml
es
call
pop
push
bound
mov
dec
xchg
mov
es
jp
sbb
and
loop
movsl
adc
inc
mov
lea
mov
nop
inc
mov
aad
jne
test
nop
add
movsb
stc
fs
sbb
dec
adc
pop
xor
repnz
in
push
cli
fxam
int
mov
rorb
jp
xor
sub
xor
cld
xchg
adc
pop
ljmp
popf
arpl
xor
js
ja
hlt
jo
push
iret
aas
xchg
or
sub
sbb
mov
mov
xlat
cmpsl
push
orl
fcomps
cmp
int
jnp
cwtl
add
fdiv
cmpsb
pusha
daa
sub
lock
sti
ja
pop
adc
stc
xor
and
jbe
xchg
in
push
movsb
data16
out
lock
and
adc
aaa
out
lret
jmp
inc
jnp
outsb
sbb
aam
lcall
mov
stos
jnp
in
mov
adc
stos
xchg
push
xor
jmp
add
xchg
and
xlat
int3
cltd
clc
sbb
and
pop
xchg
movl
loop
mov
lahf
shlb
xor
xchg
or
sbb
sub
xchg
into
cmp
rcll
sub
jbe
outsb
add
movsl
add
inc
adc
dec
popa
js
inc
pop
or
sbb
sbb
mov
jg
lret
sub
std
mov
cmpsb
inc
mov
mov
popf
sahf
ret
dec
jnp
sbbb
sti
adc
inc
dec
push
jno
aaa
fistps
aad
mov
sbb
fwait
ret
mov
inc
inc
in
ljmp
fst
jl
jns
enter
stc
mov
je
xchg
test
pop
mov
loopne
lcall
insb
push
sahf
adc
pop
dec
mov
in
adc
arpl
mov
popf
arpl
loopne
lea
or
or
and
cwtl
scas
movsb
sbb
xor
scas
loope
pop
adc
call
pop
inc
sub
push
adc
add
cld
or
push
nop
mov
out
jle
xor
test
in
adc
jns
sahf
cmp
imul
cmp
mov
loop
stos
add
insl
and
add
fisttps
inc
cmp
insl
xor
add
subl
or
lds
stos
sbb
decl
cs
lcall
cld
lods
xor
add
int
imul
jp
push
dec
dec
inc
jne
incl
repnz
sahf
daa
aaa
dec
les
es
fucomip
pop
mov
mov
mov
bnd
popf
jns
leave
pmulhuw
orl
cmpsb
fbstp
mov
mov
and
lret
jns
xor
adc
inc
mov
dec
cmp
push
ljmp
and
pushf
lock
cmp
ss
jns
lds
xor
cli
push
cmpsb
jl
mov
cli
cltd
inc
sbb
jp
inc
out
or
jne
cmp
mov
adc
sti
iret
push
push
mov
push
push
fdivrl
ss
sub
inc
or
movsb
xor
mov
sti
adc
fcoml
rol
push
xchg
push
stos
mov
popf
sub
push
push
ljmp
stos
or
jmp
mov
xchg
aam
add
cmp
sbbb
dec
aam
arpl
dec
pop
dec
shll
jge
push
or
ret
jo
adc
rcll
cwtl
fidivs
hlt
mov
add
or
dec
roll
lock
fbld
adc
add
and
xor
leave
aad
ja
inc
movsl
shl
cld
push
clc
fldenv
jge
clc
cltd
aas
pusha
imul
dec
das
xchg
and
or
and
jg
jns
jmp
jbe
movsb
xlat
adc
sarb
push
imul
outsb
or
push
cmpsb
mov
insl
aad
sbb
jno
xor
push
out
dec
xchg
pushf
jmp
popa
out
pop
std
loope
pop
dec
pop
int
decb
cmp
lea
std
mov
cmp
dec
pop
imul
in
push
mov
aam
and
test
subb
leave
lahf
leave
je
in
outsl
out
insl
test
xchg
fs
stos
sub
inc
int3
aam
adc
and
mov
xchg
orl
movsl
or
sarl
xchg
push
shlb
or
sbb
pop
lahf
mov
lcall
dec
mov
pop
push
xchg
mov
jle
jecxz
int3
test
mov
sub
cmp
cmp
fldl2e
mov
xlat
shlb
out
fdivrs
jb
adc
fstl
fidivl
add
cmp
mov
int
je
and
lock
and
mov
xor
jle
scas
xor
cmp
adc
imul
adc
mov
and
aam
fldcw
mov
xchg
gs
and
sub
lahf
inc
iret
jnp
fstps
enter
dec
lahf
in
fldenv
jl
mov
pushf
cmpsl
inc
fidivl
cltd
xchg
ja
jp
iret
out
inc
les
mov
data16
sub
pusha
imul
push
xchg
cmc
lret
and
cmp
loop
mov
pusha
xchg
roll
sbb
jae
leave
shr
dec
aaa
mov
in
insb
sbb
shll
add
lcall
dec
add
mov
dec
out
loop
inc
cmpsl
mov
push
mov
adc
xchg
ja
mov
popf
sbb
xchg
mov
jp
scas
or
jl
xchg
pop
out
push
popf
xchg
idiv
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
or
idiv
out
pop
sub
push
sbb
dec
push
pop
inc
lods
mov
cmpsb
lea
std
out
ffree
sub
push
sbb
cltd
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
imul
dec
xor
inc
imul
in
jmp
fcmovne
lret
mov
fwait
lea
pop
pop
dec
dec
cmp
sbb
mov
fcmovne
lret
mov
imul
mov
cmp
xor
cmc
or
push
sub
popf
icebp
ljmp
xor
xor
sbb
rorl
into
gs
jecxz
mov
data16
and
xchg
mov
jmp
cmp
rcl
ss
adc
fisubl
inc
cmp
cmp
sbb
add
sub
lods
int
mov
pop
cli
imul
adc
sbb
ss
mov
rolb
cmp
call
cmp
shrb
sbb
pmuludq
and
fwait
xor
scas
push
mov
clc
fwait
nop
xchg
mov
cmp
mov
and
or
lods
push
int
clc
push
clc
in
insl
xchg
mov
dec
aad
cwtl
outsb
hlt
jmp
mov
lret
lods
insb
fmuls
insl
imul
dec
cmp
sbb
jmp
fcmovnbe
lret
fnstsw
jmp
imul
and
push
push
pop
sub
push
insb
pop
pushf
sahf
lods
lahf
lea
ret
fsubr
cltd
lret
jnp
imul
jae
dec
jno
jle
lds
mov
shr
int3
fisttpl
xor
sub
cmp
or
sti
in
jmp
fcmovne
lret
mov
fwait
lea
pop
pop
dec
dec
cmp
sbb
jmp
fcmovne
lret
mov
fwait
lea
cmc
jmp
inc
xchg
jge
imul
cli
inc
adc
sub
scas
repnz
ds
and
aad
xchg
cmp
int3
xlat
mov
xor
push
adc
fcomps
add
dec
movb
jbe
cld
cmp
enter
cld
popf
inc
or
addr16
hlt
inc
pop
and
pop
cmp
jbe
mov
mov
in
clc
jbe
or
pop
cmc
mov
jo
push
arpl
mov
mov
mov
pop
fidivl
in
inc
shlb
inc
aam
loopne
movsb
sahf
push
xchg
cmp
pop
mov
iret
mov
adc
movsb
xor
test
pop
inc
push
shll
mov
mov
dec
add
dec
fsubl
add
ret
xor
mov
xchg
pop
jmp
xchg
xchg
aas
push
and
xlat
std
ret
ror
push
daa
stos
sbb
push
sbb
mov
or
push
and
js
into
push
gs
loop
das
xchg
psubusw
jg
mov
or
push
hlt
mov
jno
or
jns
jbe
ss
lds
xchg
in
movsl
dec
cmpsb
sbbl
je
repz
cmp
data16
jns
lock
stos
mov
mov
cmpl
aaa
and
dec
mov
dec
mov
jge
ja
mov
or
cmp
insb
pop
lcall
popa
push
and
sub
cmpsl
mov
push
pop
push
jb
cmp
cmp
fcompl
lock
cmp
addl
bound
dec
loope
sub
loopne
or
in
mov
cmp
jae
setbe
and
mov
stos
push
xlat
fisubrs
xchg
mov
cmp
jno
or
gs
cmc
pop
fstpt
aam
loop
pop
in
in
dec
jns
mov
jnp
mov
mov
xchg
jns
pushf
push
mov
inc
and
arpl
mov
stos
loop
fstpl
dec
lret
mov
ja
fadd
add
sub
test
mov
inc
lret
fidivs
adc
aad
or
or
in
or
sbb
jl
lods
or
cmpsb
sub
pop
push
aam
adc
dec
dec
mov
cmpsl
dec
inc
add
sbbb
lcall
mov
sti
insb
push
insl
jno
mov
adc
or
in
rorb
pushf
mov
pop
mov
and
push
xchg
test
xlat
jp
add
or
inc
adc
mov
pop
rcrb
fisubrl
fwait
jg
push
push
lcall
je
jbe
xlat
insl
and
hlt
cmpsl
mov
push
popa
stc
fildl
out
or
sbb
or
jbe
shll
pop
sbb
mov
popf
mov
push
push
push
js
adc
dec
push
inc
int3
in
sbb
pop
adc
popa
fldcw
in
in
mov
push
int
daa
push
dec
add
repz
fcompl
jp
stc
jo
lcall
pop
je
mov
lahf
sbb
jnp
jnp
pop
and
pop
push
je
fldl
xor
pushf
pop
cmp
es
sbb
mov
push
ljmp
cmp
inc
gs
push
dec
or
xchg
loope
les
xchg
and
or
cli
cmp
push
add
imul
adc
mov
inc
add
jge
add
and
cmp
icebp
inc
fs
dec
push
hlt
cmpl
push
mov
gs
sbb
test
mov
inc
sub
out
enter
cld
mov
iret
data16
pmulhuw
pushl
lods
or
stc
sbb
lods
mov
repnz
jge
in
addl
scas
pusha
in
movsb
andb
adc
shrb
mov
cmpb
mov
push
rcll
dec
das
push
push
push
dec
es
popaw
jae
into
fdivl
arpl
push
and
jl
and
cltd
sub
popa
sbb
sbb
imul
mov
push
sahf
js
mull
push
repnz
test
popa
mov
push
jbe
mov
test
xchg
mov
sti
outsl
jnp
jae
int3
ljmp
xchg
or
insb
divb
sbb
into
push
rorl
ds
or
outsl
adc
mov
inc
or
in
and
dec
in
cmp
sahf
push
sub
lock
scas
mov
fcomps
les
xchg
xchg
xchg
sarb
inc
leave
bound
or
ret
sbb
lcall
and
and
cmpsl
push
gs
and
jp
popa
xor
out
push
and
or
fcompl
xor
pop
dec
cmpsb
cs
add
test
aas
ss
aas
imul
in
out
ret
jae
push
mov
push
mov
loopne
sbb
mov
mov
inc
push
jle
gs
mov
push
mov
test
mov
sub
ss
inc
rcrl
push
fiadds
dec
mov
mov
inc
and
cs
pop
adc
mov
popf
or
inc
jb
add
adc
jb
jmp
shlb
addr16
ds
or
outsb
iret
jnp
jle
push
mov
mov
imul
push
inc
cld
mov
xchg
cmp
xor
xchg
and
popa
not
stos
ss
pop
outsl
mov
pop
jns
mov
fdivr
adc
lcall
outsb
cmc
mov
cmp
push
ja
out
fildll
cld
xchg
xor
lea
cmp
push
stos
cld
out
sub
or
ljmp
mov
fsub
repz
aad
mov
int3
adc
cli
ljmp
out
daa
sub
int
dec
out
sub
xor
stos
adc
mov
imul
daa
and
inc
sbb
lea
jg
outsb
xchg
movsl
dec
xor
cltd
pop
pop
jbe
mov
jo
inc
popf
sti
or
in
pop
mov
mov
pushf
dec
leave
cmpsb
movsl
test
push
aam
xchg
sti
test
pusha
lret
cmp
add
sbb
or
and
jo
jg
xchg
mov
push
loopne
stc
pop
dec
daa
fwait
out
push
or
xchg
xchg
pop
aam
add
cmpsl
sbb
mov
jg
les
lds
pop
sbb
das
stc
mov
je
scas
xchg
scas
arpl
add
testl
bnd
pop
jl
aas
sbb
testl
mov
dec
mov
pusha
pop
out
imull
gs
mov
pop
push
push
sbb
rcll
pop
mov
mov
lret
pusha
jecxz
add
or
dec
adc
add
dec
cs
dec
fisubrs
jmp
sti
ss
dec
daa
jnp
imul
nop
stos
pop
push
push
stc
mov
dec
mov
jmp
addr16
mov
in
cmp
cmpsl
cmpsl
jno
mov
stos
es
sar
pop
lea
push
pop
fcmove
jae
dec
scas
cli
jmp
pop
cmpl
push
add
inc
cmpb
mov
jge
mov
roll
nop
sbb
inc
es
and
test
popa
inc
xchg
jae
fwait
imul
push
push
sub
push
or
negl
push
cs
mov
fwait
jmp
jmp
or
movsb
maxps
jne
call
lahf
cmp
xor
fstps
mov
pop
cli
cmp
adc
xchg
pusha
fnclex
subb
es
je
cmc
or
bound
cmpb
inc
lret
adc
add
inc
cmp
xor
or
pop
fmuls
cmp
and
aam
aad
bound
test
xchg
call
or
mov
mov
test
psrad
fisubrl
jmp
lret
jle,pn
popa
pushf
cmc
dec
dec
lcall
orb
cmc
jecxz
dec
sarl
xor
inc
lods
mov
cmp
xor
push
sbb
jmp
das
jle
iret
push
or
push
fisttpll
xchg
xchg
popa
and
frstor
loop
cmpsl
insl
call
xchg
js
enter
dec
fidivrs
in
push
or
pop
je
scas
loope
sub
add
push
addb
sarl
and
je
loop
aad
int
out
add
aad
mov
or
loope
icebp
xchg
or
arpl
movsb
dec
mov
das
fldt
shrb
cmp
mov
test
dec
add
jmp
jle
bound
in
bound
jge
std
mov
mov
mov
cli
push
fnstcw
and
out
std
daa
push
and
inc
mov
jge
into
mov
dec
shll
or
mov
ss
addr16
sub
shlb
xlat
mov
mov
sbb
sbb
xchg
xor
in
jmp
insb
jge
jmp
fstp
ljmp
sbb
mov
jno
inc
jns
and
push
scas
push
or
sub
gs
fiadds
out
dec
repnz
dec
fldt
or
cmpsb
sbb
lods
jge
lock
rcrl
mov
imul
test
push
dec
movsl
dec
sub
test
cli
arpl
inc
and
pop
jae
je
xlat
outsb
xchg
xchg
jne
out
fcmovb
lock
xchg
push
push
out
mov
sbb
arpl
xchg
jnp
inc
jno
sbb
stos
ss
jp
add
js
xor
mov
push
aad
rorl
repz
inc
adc
shrl
cwtl
cmp
push
xchg
xchg
pop
clc
push
loopne
mov
mov
mov
push
aas
pop
lds
insl
or
dec
add
lret
fsts
rcrb
sbb
pop
loopne
testl
ss
inc
mov
push
cld
les
mov
push
adc
inc
fisttpl
and
add
mov
outsl
and
arpl
divl
or
les
pop
fwait
addr16
pop
inc
push
dec
adc
pop
sub
sti
js
shrb
cli
fdivrl
testl
mov
enter
lcall
fildll
lret
out
and
lods
cs
das
jl
sbb
imul
dec
mov
out
jns
push
sarb
push
pop
outsb
dec
inc
push
add
bound
pop
inc
lcall
out
ds
daa
adc
inc
mov
out
ljmp
mov
stos
outsb
call
adc
out
mov
mov
rcll
push
cltd
and
fwait
sbb
scas
xchg
repnz
call
mov
mov
and
pop
jmp
add
dec
inc
pop
arpl
jno
repnz
outsl
stos
push
test
fcmovbe
push
mov
sub
xchg
icebp
mov
and
xor
mov
mov
mov
mov
xchg
test
jge
sub
lods
aad
icebp
push
es
and
adc
pusha
cmp
add
scas
js
mov
ja
inc
pop
rol
dec
push
mov
ljmp
pushf
ret
pop
notl
xchg
iret
dec
lcall
cmp
xor
dec
mov
mov
xor
add
fs
push
mov
js
mov
push
lcall
cld
jne
mov
ss
cmp
cmp
in
je
cmp
outsb
xchg
aad
pop
vsubps
and
push
scas
enter
out
imul
sbb
pop
adc
aad
nop
push
in
and
fldl
loopne
jbe
xor
pop
xor
das
sbb
xor
lea
stos
out
cwtl
das
jns
ds
fs
shr
arpl
ficoms
shrb
pusha
ret
sub
test
rcrb
sbb
stos
nop
cmc
xlat
sbb
and
in
data16
sahf
cwtl
xor
loope
sbb
xor
or
out
or
cli
jl
jae
push
sbb
inc
enter
data16
shlb
mov
xchg
xchg
fildl
mov
adc
mov
mov
push
daa
std
adc
fildl
adc
mov
dec
ss
mov
xor
shlb
clc
out
lret
cli
dec
and
lods
pop
push
mov
lods
shrb
lods
nop
or
lods
repnz
subb
incl
pusha
mov
mov
shrb
xchg
sahf
pop
mov
mov
add
mulb
cli
loop
inc
pop
add
push
out
xchg
pop
xchg
mov
mov
add
push
cmc
cmp
push
cmpsl
xor
scas
hlt
mov
pop
repz
sub
cltd
scas
or
rcrl
push
cwtl
push
lods
in
push
insb
sbb
stos
pop
lds
repz
in
fisttpl
xor
xor
cmc
int3
sub
pop
andl
scas
dec
push
jne
and
mov
fs
jge
pop
and
ret
movsb
in
push
call
and
int
and
add
mov
adc
popf
adc
sub
mov
and
data16
arpl
xchg
push
jns
jae
cli
jae
push
jge
arpl
and
aaa
lods
incl
dec
mov
inc
popa
xor
popf
xchg
insb
jno
aam
shll
mov
dec
fdivrs
xchg
mov
or
push
push
out
lods
vpsrad
jmp
lock
add
pop
imul
pop
rorb
push
sub
sbb
js
inc
adc
xor
mov
repnz
lret
dec
rol
ja
xchg
add
xor
lods
sahf
sub
mov
mov
jnp
xchg
test
fists
dec
call
fwait
add
dec
aad
pop
mov
xor
xchg
add
aam
push
xor
sbb
cld
lock
and
sub
push
out
out
cmc
push
bound
rorl
dec
jno
mov
aaa
rorb
enter
nop
dec
shll
sbb
mov
mov
sbb
jge
push
mov
push
jp
lret
push
xchg
adc
dec
movsl
fbstp
scas
adc
mulps
addr16
push
into
sub
mov
icebp
cwtl
fsubrl
xor
xor
mov
sub
lret
or
adc
fisubrs
fwait
sub
js
mov
sbb
subb
jmp
lock
sbb
fs
movsl
mov
inc
movsl
push
xchg
mulb
inc
imulb
xchg
mov
push
jo
pop
bound
hlt
or
ret
nop
popf
pusha
aam
scas
std
sub
insb
jge
dec
or
or
or
imull
xchg
jb
inc
orl
mov
lret
sahf
rcll
test
ljmp
gs
fnstenv
iret
les
mov
sbb
bnd
push
jl
cmp
xchg
mov
lcall
and
test
popf
aaa
nop
cs
cmp
mov
popf
adc
lock
pop
mov
inc
mov
xlat
mov
mov
sahf
fs
adc
icebp
sbb
xor
out
jle
pop
js
mov
fnsave
push
pop
adc
stc
push
cmpsl
adc
add
addr16
stos
mov
mov
add
cli
fwait
jnp
test
in
dec
mov
sub
fadds
aas
imul
push
mov
mov
jp
fildll
jle
jno
push
mov
mov
jnp
inc
clc
adc
mov
jmp
outsb
adc
xchg
outsl
push
test
scas
xchg
xorl
jb
jecxz,pn
cmp
cmp
fcoml
out
outsl
sbb
mov
jmp
mul
repz
dec
inc
and
jmp
test
pop
mov
rorb
into
pusha
mov
nop
out
arpl
cwtl
lods
xchg
popf
sbb
nop
or
aam
in
negl
out
add
loopne
pop
int3
inc
mov
mov
fstpl
scas
fwait
lods
pushl
mov
imul
mov
loopne
cmp
jge
das
fldt
aas
pop
pop
stos
add
arpl
dec
xchg
mov
jns
inc
push
jns
xchg
push
dec
cli
mov
movsl
mov
sub
dec
inc
lock
add
aaa
mov
pusha
xchg
or
mov
imul
or
fidivs
jmp
rorb
imul
sahf
insl
cli
idivb
xchg
xchg
out
push
std
ret
adc
cmp
mov
and
sti
push
mov
lahf
xor
lods
scas
pop
outsb
push
sbb
sbb
lods
jge
xor
mov
add
cmpl
xor
daa
mov
hlt
sub
mov
mov
jp
jl
adc
add
repz
add
dec
dec
jle
aad
cmpsb
lcall
js
jl
xchg
xor
iret
lds
push
pop
fcomi
sub
fistpll
es
sub
cmp
andl
addb
jmp
shr
xchg
fldl
jmp
shlb
sub
call
cmp
in
sbb
gs
jo
test
or
roll
mov
adc
and
dec
nop
push
and
dec
into
sbb
or
pop
ss
shr
sub
pop
scas
shrb
rcrb
inc
jle
hlt
mov
cli
pop
inc
inc
into
test
add
pop
fistl
nop
xor
iret
and
jbe
shrl
pop
dec
jp
test
push
fisttpll
out
adc
cmpsb
cwtl
push
fstp
out
mov
dec
adcb
jns
or
std
cs
lods
mov
cmp
fdivl
addr16
mov
jp
push
aaa
add
xchg
jb
test
test
adc
pop
outsb
fisubs
mov
jp
push
mov
loope
lea
or
xor
xchg
rorl
xor
sub
into
sti
inc
and
add
sbb
call
adc
jg
pop
pop
stos
adc
imulb
stc
sahf
push
xchg
dec
xchg
pop
movsb
inc
adc
out
aaa
sub
adcl
mov
fsts
jae
push
push
lret
aad
cmp
or
mov
xor
xchg
pop
jmp
cmpsb
lret
pop
insb
aad
aas
test
stos
sub
mov
inc
lret
jg
xor
sub
xor
test
leave
xchg
add
push
js
mov
pop
imull
call
loope
push
adc
pop
imul
xor
add
stos
xor
xor
pop
jnp
jnp
or
sub
mov
ret
pop
xorb
xchg
mov
or
loop
outsb
push
int3
inc
out
sbb
aas
pushf
dec
push
add
or
insb
ret
bound
sub
sub
imul
js
jecxz
ja
mov
jmp
sub
and
imul
adc
mov
imul
ss
lds
cmp
sub
into
push
test
clc
mov
pop
fnsave
out
lcall
fstpt
xchg
ss
adc
fucomp
cld
outsl
cwtl
pop
mov
mov
fnstsw
sarl
mov
pusha
ret
rcll
loop
iret
or
fcmovu
shrb
add
push
imul
je
cmc
fisubrs
push
and
dec
dec
jmp
lea
pop
repnz
icebp
test
dec
push
pop
dec
jnp
lods
inc
ljmp
add
fimuls
movb
dec
or
in
dec
jg
shlb
cmpsb
xchg
mov
aad
push
cmpsb
jle
cmp
xchg
shlb
movsl
mov
stc
outsl
lock
out
aaa
inc
adc
mov
lret
loope
sbb
inc
jl
insl
push
mov
popf
ret
cwtl
sets
movsl
fimull
or
cwtl
push
inc
inc
negb
pusha
lock
in
adc
jb
test
negb
pop
icebp
pop
jno
cmpsb
aam
pop
fwait
inc
xor
repz
ds
pop
jbe
or
push
enter
sbb
ja
push
repnz
jmp
in
cmp
push
push
orl
xor
push
push
icebp
xor
ds
cmpsb
imulb
adc
cmpsb
and
dec
push
dec
sbb
cli
outsb
scas
xor
out
inc
jns
adc
jb
outsl
sbb
adc
mov
cmc
mov
dec
lcall
inc
popa
push
clc
adc
sub
shll
xor
cld
sbb
cmp
aas
jnp
scas
mov
cmp
push
and
add
mov
shrl
cmp
add
outsl
fsts
xorl
xchg
rcll
mov
xchg
adc
subl
iret
out
dec
xchg
cmp
aam
cmp
fiaddl
mov
addr16
add
jo
xlat
out
xchg
out
lcall
xchg
cmp
pop
les
aad
sbbl
imul
sub
sti
in
jmp
fcmovne
lret
mov
fwait
lea
pop
pop
dec
dec
cmp
sbb
jmp
fcmovne
lret
mov
fwait
lea
dec
fisttpl
cmp
sub
stc
jnp
jmp
fcmovne
lret
mov
fwait
mov
imul
gs
cmp
sbb
inc
ja
int
lret
push
bound
dec
xor
and
adc
add
jo
inc
fistpll
leave
inc
pop
cmovge
sbb
or
sub
xor
and
adc
add
push
lods
and
mov
mov
sbb
shrl
and
adc
add
push
lods
inc
pop
mov
sbbb
out
jle
fs
lods
jge
push
mov
mov
mov
sahf
inc
fdivl
dec
pop
jb
cmp
adc
xchg
push
cmpsb
add
mov
mov
fmul
sub
loopne
loopne
repnz
pop
and
loope
ret
mov
cltd
cmp
scas
ss
sbbb
mov
mov
pop
push
xor
add
push
popf
jo
popa
pop
pop
lods
mov
jl
test
movsb
daa
shll
xor
scas
out
clc
or
cli
test
xor
outsb
insl
orl
shlb
and
scas
push
ljmp
fwait
movsl
or
loopne
imul
sub
xorb
and
adc
add
push
lods
inc
pop
mov
mov
sbb
shrl
pop
xchg
push
mov
adc
xor
ret
imul
mov
pop
movsl
clc
xor
and
push
aad
paddq
roll
xchg
jle
insl
mov
xchg
stos
jo
jb
je
jns
inc
lea
push
lods
inc
pop
mov
mov
sbb
shrl
and
adc
add
push
lods
inc
pop
mov
mov
sbb
shrl
or
mov
loop
push
pop
movsl
dec
mov
xor
xchg
pop
mov
push
push
mov
jno
jle
aas
out
rcrl
or
aas
and
sub
mov
xchg
push
fdivl
enter
repz
jg
leave
jg
stos
out
ja
inc
inc
sub
inc
mov
gs
outsb
popf
negl
dec
sbb
imull
cli
mov
inc
mov
repz
lcall
pop
jp
add
or
sub
int3
addr16
sub
xchg
popa
ja
in
cmp
andb
xchg
out
dec
jg
cmp
or
scas
xor
xchg
push
cmp
xchg
test
jg
addl
movsb
hlt
adc
nop
repnz
pushf
mov
subb
mov
push
insb
xor
cmc
mov
adc
mov
mov
out
mov
dec
sbbb
mov
push
mov
or
push
xchg
insl
int
ds
mov
xor
adc
add
enter
aam
jne
mov
stc
mov
xor
adc
lods
mov
cmp
mov
mov
dec
push
inc
push
out
ds
dec
in
mov
hlt
push
push
push
and
repz
js
cwtl
cmp
nop
or
sub
js
lods
out
outsb
push
aas
cs
int
rorl
mov
push
push
jnp
sub
add
cld
or
aam
or
movsb
out
sub
and
shl
out
mov
sub
ret
mov
popa
out
jle
lea
or
fsubl
xor
xchg
adc
cli
pop
cmc
xchg
jbe
mov
movsb
xchg
mov
pop
cmpsl
loop
je
fimull
cmpsl
mov
cmpsl
adc
sub
push
push
ret
pusha
js
sti
jp
insl
mov
adc
lock
out
sub
xchg
pop
jl
insb
xchg
out
mov
mov
mov
fcmovb
push
enter
xor
stc
cmp
outsl
in
pushf
nop
sbb
and
sbb
movsl
pushf
mov
into
insb
dec
xchg
fwait
arpl
xorb
cld
aas
test
inc
rorb
rorb
fmuls
dec
and
div
in
cmpsb
or
mov
mov
fadds
inc
icebp
out
loopne
cld
inc
add
cmp
pushf
fs
in
scas
int
push
and
pop
call
dec
jnp
push
cltd
inc
test
or
jecxz
jns
mov
lea
xchg
in
insl
pushf
xor
xchg
ror
push
cld
pusha
pop
sub
mov
cli
pop
add
fistpll
dec
roll
mov
sbb
cmp
jecxz
hlt
push
clc
or
cmp
mov
xlat
dec
push
out
ret
jg
cmp
leave
loop
xor
ret
push
sub
out
add
dec
fimuls
jbe
cltd
aaa
add
mov
sahf
mov
testb
adc
pop
or
imulb
rcll
cmpb
mov
xchg
aam
es
out
inc
add
ja
jb
push
sub
icebp
insb
test
push
jnp
jg
fildll
test
or
fiadds
loope
mov
pop
cmp
jo
cmp
or
push
xchg
xchg
dec
and
int3
mov
cli
jno
in
sbb
sbb
fildl
mov
jg
insl
or
jmp
adc
cs
sub
cld
les
lret
xlat
push
sub
cwtl
push
xor
or
xchg
jbe
imul
inc
push
cmpsl
cld
add
shlb
andl
cs
rclb
es
mov
pop
test
lret
and
lret
push
adc
in
push
es
xchg
fcmovnu
cmp
mov
xchg
sbb
xor
mov
pop
daa
adc
inc
cmp
xchg
mov
cmp
xchg
mov
ret
enter
jmp
sbb
addl
dec
test
notl
pop
imul
push
mov
dec
iret
jmp
mov
jecxz
inc
xchg
sbb
popa
mov
divb
mov
mov
mov
xchg
sub
push
icebp
jbe
scas
nop
xchg
popa
sbbb
outsl
pop
sbb
fs
ficomps
push
out
inc
aad
push
mov
sbb
xchg
mov
push
pushf
push
cmp
inc
pop
push
add
cld
jns
mov
inc
shlb
pop
sub
push
cmp
xchg
xchg
sub
mov
push
mulb
adc
imul
in
mov
xor
faddl
js
mov
cmc
mov
pop
mov
mov
sbb
jno
or
xor
xchg
sub
jns
cwtl
icebp
push
jecxz
push
scas
sahf
fstps
shl
mov
jno
in
mov
jae
test
ror
cmpsl
xor
cmp
pop
or
mov
xlat
jmp
xchg
xchg
loope
loope
xlat
cmpsl
inc
cmp
push
mov
mov
repz
or
push
ret
js
pop
notb
add
add
sbb
mov
repz
arpl
jge
jg
pop
push
lea
clc
repnz
jo
jg
cmp
or
mov
mov
cmp
dec
icebp
mov
int
pop
jns
sub
jbe
and
jmp
addr16
xchg
xor
mov
push
movsb
adc
shlb
sarl
push
cmp
pusha
mov
sub
data16
xor
stos
sub
add
fs
rcrl
jp
or
out
call
push
xchg
loopne
int
sub
cli
add
adc
sub
negl
inc
dec
pushf
push
repnz
int3
pop
push
outsb
test
nop
fnstcw
addb
xor
mov
pop
mov
stc
popl
loope
js
and
push
imul
sti
cld
in
hlt
cmp
imul
nop
mov
dec
mov
repnz
mov
jne
arpl
fldl
mov
incb
mov
lcall
add
mov
pop
or
icebp
insl
insl
and
sbb
repnz
jae
movsb
push
fwait
adc
cld
dec
cmp
dec
faddl
or
pusha
fistl
dec
fimull
ljmp
push
jecxz
or
fdivl
call
push
call
movlps
aas
inc
ret
or
call
inc
shlb
xchg
popa
call
call
test
enter
sub
mov
psraw
adcl
push
aas
pop
inc
xor
jo
cmp
add
mov
shl
in
in
push
dec
mov
mov
or
xchg
stos
push
xchg
inc
shrb
aas
ljmp
ror
bsr
xchg
es
fistpl
dec
push
jmp
xlat
jae
rorb
hlt
pop
mov
addr16
and
ror
push
mov
test
jg
ss
in
xor
lods
xchg
fnsave
mov
and
mov
repnz
mov
or
idivl
lret
and
cmp
orb
cli
orb
cmp
sarl
scas
push
mov
mov
nop
lfs
jle
jecxz
outsl
push
push
push
inc
push
rol
iret
imul
into
inc
sbb
xchg
pop
jmp
pop
leave
rsqrtps
push
pmulhuw
push
xor
xor
mov
xor
cmp
icebp
insl
test
pushf
dec
mov
lods
es
cmp
ds
xabort
sub
dec
ss
mov
dec
mov
and
iret
mov
mov
clc
sbbl
lret
xchg
ret
test
leave
mov
in
push
mov
subl
push
in
mov
scas
mov
jle
in
or
movsl
xchg
cs
sarb
out
stos
and
lock
sbb
imul
mov
cmc
push
push
jne
ljmp
dec
testb
cmp
arpl
inc
fistl
xchg
outsl
push
nop
test
imul
xchg
xchg
mov
loopne
testl
sbb
jns
jl
repz
sub
inc
shll
sub
fstpt
mov
int
int3
cmp
adc
lret
out
repnz
es
cs
mov
mov
lea
lock
ret
arpl
stc
push
lods
jl
not
mov
cltd
xor
sahf
mov
jbe
mov
mov
cmpsl
mov
negl
inc
scas
mov
inc
xchg
dec
push
lret
stos
pop
insb
pop
inc
fsub
xchg
mov
mov
out
jp
jmp
jbe
lret
sbb
fcoms
dec
xor
std
fisubl
pusha
icebp
je
mov
insl
sub
movsb
nop
test
sahf
xlat
adc
stos
sbb
adc
mov
xor
mov
lret
leave
cmc
add
popf
mov
out
jno
dec
add
cmp
lock
mov
inc
ss
jecxz
adc
popf
push
cltd
inc
dec
arpl
cmp
sti
int3
jmp
mov
andb
sub
jbe
and
aaa
scas
shl
pop
out
fisttpll
fistps
test
insb
jp
test
dec
jmp
or
loope
sbb
incl
insl
in
jb
fsubrs
cmp
repz
add
push
in
mov
sub
cmp
sti
mov
push
xchg
jnp
stos
jae
jp
loop
mov
mov
mov
push
or
mov
iret
mov
jl
push
lods
adc
sbb
into
push
xor
push
movsb
xorl
inc
insb
mov
dec
xor
add
dec
adc
pop
push
loope
call
mov
jmp
sbb
xchg
in
mov
sarb
mov
sub
mov
xor
inc
xchg
out
fcmovb
stos
inc
mov
pop
in
lret
inc
dec
mov
test
lea
mov
sub
aas
sub
jne
cmp
cmp
ror
inc
inc
adc
lds
or
mov
sub
pop
mov
arpl
mov
pop
ret
imul
imul
loope
out
out
jmp
clc
test
xchg
lcall
push
movsl
mov
ficoml
xor
xchg
je
data16
jle
jl
fmull
push
xchg
into
and
arpl
shll
aam
shll
out
std
outsl
icebp
imul
pop
pusha
dec
xor
pushf
mov
scas
cld
jecxz
popf
aad
dec
test
int
repnz
mov
rcrl
add
leave
and
shr
icebp
hlt
call
call
adc
jge
std
or
add
daa
mov
in
es
adc
jb
enter
divl
mov
push
or
ljmp
in
push
push
std
je
mov
mov
and
xor
cli
xchg
mov
cmp
inc
and
inc
pushf
xchg
pop
fildll
mov
lret
int
mov
fadds
insb
sahf
and
jae
lcall
sbb
dec
push
into
mov
and
mov
jle
jne
cmp
stc
jp
cmp
mov
stos
ja
stos
insb
dec
adc
jge
xlat
cmp
sbb
push
add
flds
sub
push
or
das
xor
sbb
cmpb
cmp
cmp
shll
cmp
cli
in
dec
shll
dec
cmpxchg
enter
out
and
inc
pop
dec
jmp
ds
mov
ficomps
shll
int3
into
sub
push
sbb
xchg
adcb
movsl
out
inc
jmp
jnp
cmp
or
push
mov
xchg
pop
xor
lahf
cmp
pushl
inc
outsl
shl
mov
or
mov
popa
fcmovnu
je
test
pop
pushf
cmp
dec
cmpxchg
jbe
or
insb
xchg
inc
push
insl
xchg
push
test
in
ret
bound
insb
mov
icebp
imul
dec
repz
xor
jo
jle
and
push
and
in
push
fnstenv
xchg
test
iret
dec
icebp
mov
jg
push
pop
lret
mov
enter
and
pop
pop
sahf
loopne
xchg
std
adc
and
sbb
inc
les
mov
jbe
sub
mov
pop
mov
push
push
nop
push
dec
fdivl
fistpl
mov
push
in
or
call
and
jo
data16
pop
jp
sahf
add
pop
mov
pop
movsl
cwtl
push
sub
push
xchg
inc
cmpsb
test
mov
pop
add
sub
cmp
inc
mov
test
inc
mov
out
jmp
add
add
imul
push
test
mov
xchg
sub
sbb
xor
sub
push
clc
adc
jmp
iret
fbld
push
mov
outsb
aam
sbbb
or
int
lret
fdivp
mov
lcall
mov
mov
imulb
outsl
mov
lock
inc
rcr
call
and
mov
mov
mov
test
pop
fadds
xchg
lret
into
inc
popa
enter
sub
or
orb
xchg
js
cmpsl
shr
jmp
jnp
or
test
fmuls
in
mov
cs
out
xor
lret
push
stos
mov
sub
dec
or
dec
iret
xor
adc
add
jnp
out
xlat
adc
fwait
mov
in
sbb
jns
sub
cmp
add
scas
mov
mov
mov
fisttps
mov
test
shll
stos
loope
iret
cwtl
dec
or
bound
sbb
sub
push
jecxz
movsl
lahf
pop
xor
outsl
lds
sbb
mov
xor
ljmp
xor
js
scas
mov
mov
int
add
pop
out
cmc
mov
lods
out
xor
push
or
adc
iret
lret
sub
jl
dec
bswap
inc
or
jl
into
in
or
iret
pusha
stos
bound
dec
js,pn
call
mov
ljmp
sub
mov
ret
sahf
cmp
mov
pop
outsl
pop
mov
pop
setne
mov
lea
jg
sub
push
dec
stos
or
ljmp
lret
jmp
inc
imul
dec
sub
addr16
fcmovne
xor
enter
dec
or
sti
push
mov
mov
fst
jl
xorb
mov
inc
add
cmp
inc
cmpsl
loope
inc
cmpsb
inc
cmp
push
push
cli
mov
test
call
sbb
movsl
outsl
jge
sub
mov
cmpsl
arpl
mov
cld
add
xor
mov
loopne
xchg
jae
pop
mov
decl
addr16
adcb
arpl
shll
out
xor
decl
clc
mov
lahf
out
dec
idivb
jmp
jl
ljmp
insb
dec
sti
mov
xchg
rcl
cmp
popf
imul
or
mov
mov
mov
jle
repnz
dec
std
xor
mov
adc
dec
inc
dec
clc
fs
sub
bound
cli
dec
xor
xchg
sbb
out
out
cmp
lret
mov
mov
xor
pop
or
nop
add
push
cli
int
call
adc
sub
or
fxam
in
lods
push
mov
sbb
aam
push
repnz
jge
ja
mov
push
rcll
and
inc
xchg
add
cli
jbe
insb
xor
mov
pop
addr16
push
xchg
jnp
sbb
and
insl
stos
aaa
enter
jns
loop
mov
cmp
push
push
pop
icebp
jbe
sub
leave
push
enter
pop
sub
mov
dec
pushf
sbb
mov
and
sahf
addl
and
mov
pop
lcall
imul
sbb
push
cmp
sub
mov
sar
cs
loopne
int3
aad
lcall
ret
ret
jo
outsl
mov
test
xor
mov
lahf
xor
jecxz
adc
bound
mov
sbb
les
pop
decb
xor
mov
rorl
inc
xor
cmc
cmp
xchg
out
repnz
push
xchg
inc
inc
cltd
xor
arpl
faddl
mov
sbb
mov
push
clc
orl
loopne
sub
sub
lret
icebp
pop
mov
jo
mov
push
inc
outsl
sahf
xchg
inc
inc
jmp
mov
sbb
outsb
pop
cmpsb
jl
jle
sub
mov
push
mov
call
test
lods
dec
stos
sub
stos
mov
sub
in
pop
sbb
jle
fldenv
int
xchg
mov
mov
imul
je
stc
xor
out
icebp
fsubp
repnz
aad
push
insb
sbb
jns
cli
push
fildl
xlat
into
push
push
xor
and
inc
sbb
cmpsl
ss
xor
int3
test
neg
js
mov
and
lea
mov
out
inc
jp
aas
pop
stc
sub
out
mov
aad
gs
int3
sub
lods
pop
push
lods
jne
mov
pop
repz
xchg
adc
lret
testb
scas
call
repnz
jno
mov
mov
ds
decl
orb
cmp
sbb
mov
insl
hlt
jge
popa
scas
lds
mov
aad
lds
add
int3
pop
iret
fstp
stos
and
loope
dec
adc
mov
dec
inc
mov
lds
sahf
xchg
jb
inc
out
sub
push
ret
mov
jp
cmp
add
orb
leave
dec
pusha
jl
xor
push
jg
mov
dec
mov
sub
push
loope
test
std
movsl
jge
icebp
sub
add
in
add
xchg
sti
leave
push
jnp
xchg
loope
mov
add
push
xchg
sbb
std
push
mov
rcr
mov
jge
lahf
dec
hlt
fcomps
xor
push
daa
in
jmp
scas
inc
sbb
and
pop
or
push
das
ret
cmp
xchg
sbb
fmull
xchg
add
scas
aas
aaa
fisubrl
mov
repz
lcall
sub
cmp
cmp
adc
lcall
mov
pusha
sub
mov
xchg
int
xchg
xor
pop
sbb
pop
xchg
xor
sub
or
mov
mov
les
adc
push
daa
mov
xchg
push
push
adc
mov
xchg
jp
or
mov
popf
jmp
test
stos
aad
push
add
xchg
push
pop
push
push
dec
push
and
lods
mov
pop
dec
or
dec
xlat
mov
pop
out
push
jg
and
sbb
cmpsb
mov
int3
stos
nop
sbb
adc
cmp
insl
ljmp
adc
inc
cmp
std
jne
lcall
daa
dec
jb
jae
das
inc
xchg
jns
enter
cs
mov
adc
sub
das
sub
pushf
rcrl
js
pusha
cli
clc
mov
sti
xchg
cs
lock
pop
jge
lahf
push
jne
bound
pop
clc
mov
xchg
xor
call
mov
insb
imul
dec
les
push
pop
jp
and
jge
in
aas
pop
jbe
xor
xlat
dec
ret
aad
pop
rcr
popf
clc
decl
popw
cmp
js
insl
push
into
sub
push
mov
ljmp
xchg
jns
jmp
es
cmp
and
orl
lods
lret
dec
sub
mov
mov
movsl
mov
mov
push
mov
pop
imul
inc
xchg
rcr
adc
and
push
insb
jg
jbe
jo
lods
adc
xchg
out
js
mov
jne
sti
loope
xor
sbb
xchg
add
aaa
and
mov
jbe
sbb
jl
insl
adc
es
mov
aam
pop
cmova
fwait
cmpsb
js
ljmp
xchg
cmp
jns
jmp
ljmp
fcmovnb
sti
aaa
icebp
sub
jns
dec
xor
pop
push
outsb
push
jp
push
pop
mov
mov
bound
cmp
add
popa
push
dec
ss
pop
mov
push
ja
sub
xchg
aam
add
int
adc
push
std
in
cmp
cwtl
cmp
lock
sbb
jle
xor
mov
outsb
ret
inc
pop
arpl
enter
scas
push
insl
loop
jg
mov
and
sub
jmp
mov
rorb
mov
mov
scas
inc
pop
sarb
or
ss
fbld
mov
mov
lcall
dec
dec
adc
pop
out
add
pop
dec
adc
or
fdivs
notb
clc
sahf
nop
sbb
or
aam
or
mov
mov
pop
or
cld
mov
sbb
lcall
in
add
push
lods
inc
pop
mov
mov
sbb
shrl
and
adc
add
push
lods
inc
pop
mov
mov
sbb
shrl
and
adc
add
push
lods
inc
pop
mov
mov
sbb
shrl
fdivl
int3
and
adc
add
push
lods
sbbl
insl
imulb
test
ret
ds
ds
pop
fmuls
mov
jle
mov
cmp
sub
sbb
sbb
sahf
cmp
sub
jp
push
pop
mov
push
cmp
sub
sbb
or
inc
pushf
sbb
dec
adcb
movsb
dec
lret
push
mov
mov
das
clc
push
test
push
scas
xchg
jle
imul
mov
xchg
inc
fldenv
push
add
and
out
and
push
jmp
xchg
outsl
sub
pop
movsl
pop
mov
inc
push
push
fbld
fcmovb
out
jbe
sbb
xchg
scas
jae
inc
fdivr
jae
jmp
xchg
stos
mov
mov
sub
outsl
push
rorb
ss
aas
push
or
stos
pop
gs
fisubs
mov
out
sub
and
out
cli
out
cmc
inc
dec
and
fwait
add
pop
jp
jp
nop
sub
loop
push
inc
add
outsl
xor
inc
xor
mov
cli
rorl
mov
jns
sbb
or
fisubrl
or
shrb
pop
sub
mov
cwtl
jp
jb
and
ret
xchg
cmp
data16
les
out
das
mov
aas
aas
das
jmp
jae
outsl
mov
test
stos
shrw
iret
cmp
fistpll
fstpt
fistps
xor
jae
dec
mov
mov
ss
push
pop
mov
mov
dec
mov
cli
sub
sbb
or
cli
cmp
sub
sbb
or
pop
mov
mov
dec
mov
cli
sub
sbb
or
cli
cmp
addr16
jne
inc
arpl
repz
cmc
cltd
sarb
or
cmpsl
sbb
push
ret
subb
cmp
adc
push
test
in
loop
dec
sub
mov
lret
sbb
jae
cmpsb
mov
mov
mov
and
iret
add
cmpb
jae
or
sbb
imul
jo
lods
xchg
fdivs
leave
adc
mov
out
mov
ja
int
stos
inc
mov
jg
mov
mov
dec
lret
push
dec
cmp
push
movsb
push
testl
push
push
inc
sub
adc
test
imul
shlb
aam
jmp
or
and
jmp
stos
popa
incb
dec
outsl
xor
sub
or
cltd
stc
data16
pop
divb
and
xchg
data16
in
insl
or
dec
mov
cmp
insb
mov
mov
pop
push
std
and
mov
insl
adcb
dec
pusha
std
jae
icebp
jg
cmp
xchg
cwtl
mov
push
repz
popa
fmulp
scas
push
add
iret
dec
imul
stos
push
seto
ljmp
pop
test
cmp
sbb
leave
dec
jge
push
ljmp
push
or
mov
outsl
pop
jg
shlb
xlat
xor
cmc
repz
insl
lret
sub
sbb
mov
adc
jb
inc
sbb
addl
sti
das
add
insb
fbstp
or
inc
imul
sbb
daa
mov
jne
lods
push
orb
inc
loopne
push
aad
lcall
aad
jge
js
mov
add
mov
jecxz
inc
xor
and
inc
daa
inc
nop
mov
mov
and
shl
jnp
in
int
icebp
dec
dec
je
js
pop
in
das
add
ljmp
pop
lret
cmp
and
addr16
addr16
pushl
ret
shll
cli
adc
das
dec
ljmp
mov
pop
loope
fildll
dec
pop
xor
in
xchg
cltd
mov
fadd
inc
bsr
or
test
stos
adc
mov
sbb
pop
rolb
js
loop
test
sub
inc
cli
andb
push
pop
push
add
stos
aaa
hlt
adcl
lods
in
lcall
cmp
sub
sub
pop
cmp
fs
xchg
mov
xor
loop
decl
mov
shll
mov
sbb
iret
insb
jmp
imul
loopne
cmp
ja
xchg
repnz
cmp
es
mov
pop
sbb
add
jecxz
jle
cmpb
adc
pushf
hlt
and
dec
add
iret
std
xlat
sub
sahf
in
loopne
stc
push
push
xchg
hlt
lods
jo
inc
lcall
outsb
adc
popf
jb
cwtl
fs
inc
mov
andb
test
sub
and
mov
insl
lret
add
loopne
stos
outsb
or
lods
and
xchg
les
mov
and
std
rolb
inc
push
test
cmp
mov
and
aas
sbb
nop
stos
aas
int
insb
xor
mov
or
shll
dec
adc
jecxz
or
stc
jecxz
cmp
in
loope
sub
inc
xchg
daa
gs
jns
fisttpll
lock
or
adc
push
jge
lods
dec
push
and
inc
mov
enter
pop
mov
iret
arpl
sub
mov
cmpsl
scas
push
push
pop
rcl
add
out
sbb
fs
and
adc
mov
stos
push
adc
movsl
loopne
pop
fdivrp
xchg
fwait
sub
adc
cli
ret
jb
jb
je
shl
aaa
jecxz
jg
push
popa
mov
pusha
mov
xchg
outsb
mov
or
lock
xor
das
sbb
inc
jecxz
test
cltd
push
inc
cwtl
inc
aad
flds
push
mov
sub
lock
popa
cmp
jmp
mov
jp
cmp
jg
cmp
roll
imul
jl
cwtl
int
mov
dec
inc
cmp
arpl
inc
ret
xchg
test
dec
jo
andl
test
inc
dec
repz
mov
mov
sbb
inc
dec
inc
xor
shlb
mov
push
fisttps
mov
mov
mov
and
and
les
xchg
dec
std
pusha
mov
cmp
lret
pop
in
push
leave
adc
dec
dec
inc
int3
and
pop
fcoms
fisubrs
sub
push
inc
cmc
je
cmp
mov
scas
xor
cmpsl
inc
movsb
add
lcall
imul
jo
popf
repz
xchg
sbb
push
sbb
cmp
imul
sub
mov
mov
push
xchg
pop
xchg
leave
jns
int
jb
pop
jnp
int
xor
and
jge
add
es
mov
or
add
sub
jb
sbb
sub
cmp
ficomps
ret
cmpsl
mov
lods
xchg
ret
cmovbe
pop
daa
sub
test
mov
pop
push
xchg
adc
mov
xor
jne
mov
sbb
popa
mov
mov
movsb
adc
inc
mov
fistps
incl
jo
iret
fidivl
insl
ss
jmp
mov
push
sbb
nop
and
test
stos
mov
andb
ss
xor
into
mov
dec
adc
addr16
xchg
cmp
dec
mov
mov
xor
and
loopne
aad
mov
mov
stc
pusha
cmp
xor
mov
inc
jae
andb
repz
pop
sub
xlat
lcall
push
add
xchg
mov
jl
and
cmpsl
ljmp
cmpb
jno
rorl
xor
xor
insl
adc
push
imulb
or
cld
ss
push
scas
aad
mov
xor
push
test
mov
mov
cltd
divl
mov
sub
aam
push
pusha
jo
and
push
xlat
test
or
imul
mov
gs
mov
fwait
push
push
xor
lea
gs
sbb
fs
ret
orb
cmp
mov
cmp
lock
daa
lock
push
push
std
push
xchg
add
cld
add
cmp
imul
aaa
pop
outsl
dec
mov
insl
xchg
fcoms
push
and
hlt
rorb
jo
out
mov
lcall
lcall
push
xchg
shll
jo
popf
xchg
xchg
adc
or
cwtl
and
inc
inc
in
adcl
clc
ffreep
mov
sub
mov
xlat
cltd
mov
fnsave
in
dec
xchg
dec
jnp,pt
mov
iret
ficoml
test
pop
out
mov
lret
jge
clc
dec
xchg
mov
mov
mov
cmpsb
or
stos
je
outsl
aad
roll
movsl
push
sbb
or
inc
pop
inc
add
loopne
leave
cmp
mov
adc
mov
out
mov
inc
xchg
mov
aas
mov
daa
xchg
push
mov
jnp
pop
inc
ds
sbb
mov
cmp
aam
addb
sbb
pop
jns
dec
loopne
and
mov
gs
push
into
rcrb
mov
sub
imul
xchg
cmp
sub
cmp
lahf
lea
call
cltd
lods
sbb
mov
daa
into
xor
loopne
shr
cmp
sbb
cmp
dec
or
xor
int
xor
jb
mov
popf
in
rcl
fisubs
add
and
inc
cmpsb
cmpsb
jne
lock
or
fimuls
xor
filds
outsb
or
iret
loope
mov
xchg
lahf
lea
cmpsl
cmpsl
mull
bound
enter
ficoml
clc
jg
mov
loopne
pop
and
nop
aaa
jbe
xchg
or
mov
stc
scas
aaa
shrb
adc
arpl
or
or
mov
rcrl
add
lods
je
int
xchg
sbb
and
int3
and
mov
lret
xor
dec
out
push
inc
and
push
xchg
mov
dec
addr16
cmp
sub
inc
xor
ss
stos
jmp
test
ljmp
cmp
dec
es
adc
movsl
cld
add
lds
push
or
cmpsl
lock
loopne
push
sub
repz
adc
enter
jle
cmp
add
jne
add
fucomip
jecxz
cmp
xor
insl
aad
cmp
adc
add
cmp
and
or
es
insb
xchg
cmc
xchg
cmp
movsl
pop
adc
mov
outsb
and
test
mov
test
cli
push
xchg
mov
adc
jae
int3
aad
push
pop
mov
push
ja
pop
sub
push
and
test
mov
add
mov
sub
test
shll
cmc
js
insl
cmpl
push
or
dec
js
fs
stos
jnp
gs
add
dec
push
ja
dec
and
pusha
fwait
jecxz
mov
outsl
inc
movb
mov
cli
out
neg
loop
sub
pop
clc
pop
push
int
loope
mov
dec
inc
mov
pop
jno
mov
sbb
inc
xchg
in
stos
leave
dec
leave
push
or
cmpsb
pop
out
inc
pop
divb
adc
adc
scas
mov
paddusw
mov
dec
mov
jae
lea
add
dec
mov
xchg
sub
pushf
pusha
jo
fbstp
xor
lret
or
mov
out
imul
inc
popf
adc
mov
add
fsts
insb
push
stos
and
fcmovu
lret
jo
cld
dec
pusha
and
adc
jp
push
push
push
xlat
push
cmpsl
sbb
pop
rcrb
sti
stos
pop
ds
test
inc
fiaddl
adc
push
sbb
push
lds
cld
mov
push
sbb
cmpsb
dec
je
mov
addr16
and
int3
sarl
bswap
aas
lock
jle
sbb
push
inc
add
shrb
fildll
jns
clc
cmpsl
stos
push
push
imul
push
pop
and
test
fadd
mov
stos
dec
popa
or
xchg
outsb
leave
xchg
out
jecxz
dec
popf
sbb
ds
in
pop
sub
in
sarb
or
add
movsl
aam
xchg
int
xor
fcompl
cmp
and
push
adc
cmp
std
push
dec
scas
sub
in
popa
jbe
aaa
mov
ret
sahf
cmc
out
xchg
push
cs
lret
repnz
lock
pop
sbb
roll
or
or
xchg
mov
xchg
cmp
mov
and
call
sub
js
sbb
mov
dec
addl
xorl
sahf
dec
roll
sar
in
inc
imul
cmp
mov
lcall
fdivl
cmpsl
fwait
sbb
repz
lea
push
and
in
or
push
cli
testb
test
hlt
dec
xchg
sbb
icebp
or
test
xchg
xchg
das
pop
xchg
mov
lret
jno
inc
push
imul
out
fimuls
xor
das
frstor
ljmp
pop
adc
mov
mov
mov
add
cltd
call
mov
stos
add
insb
push
mov
xlat
cmpsl
fnstenv
or
shlb
mov
add
add
xor
xchg
loope
hlt
ret
inc
xchg
stc
insl
enter
repz
scas
cwtl
inc
sbb
cli
push
daa
xor
in
popa
mov
mov
fimull
cvtps2pi
jecxz
jbe
sahf
fldenv
fidivrl
addr16
pop
xchg
mov
xchg
js
xor
popf
stos
aad
or
xchg
push
or
sarl
mov
or
mov
adc
sub
and
int
js
sub
fs
in
pop
test
es
scas
and
and
add
sbb
testb
sbb
xchg
test
clc
lcall
mov
xchg
fadd
push
add
mov
mov
lcall
push
sbb
ret
shr
push
xchg
pop
int3
cmpsl
mov
mov
inc
fs
xor
xchg
jge
int3
scas
xchg
clc
insl
mov
jae
push
and
stos
jecxz
push
cld
mov
push
outsb
adc
mov
dec
insb
loop
jl
push
repnz
fsubs
hlt
mov
inc
push
stc
fsubr
mov
popf
hlt
hlt
jnp
insb
sbb
stos
stc
sti
lret
cwtl
push
xchg
push
pop
imul
shlb
push
js
in
fcmove
loopne
xor
adc
sbb
cmp
ja
and
pop
cld
into
inc
push
push
popf
fcompl
fs
repnz
jle
jae
dec
and
imul
inc
jmp
loope
cmp
add
repz
mov
xchg
add
hlt
repnz
into
add
mov
cmp
gs
jle
lret
stos
leave
pop
inc
push
shl
jl
push
or
dec
arpl
or
add
xchg
mov
inc
aaa
bound
test
and
fnsave
dec
jne
aaa
ljmp
sbbb
pop
pop
adc
or
jno
sarb
push
sti
ror
and
inc
mov
lods
push
or
xchg
adc
xchg
mov
das
pop
adc
mov
sbb
xchg
outsb
stc
flds
jns
inc
popf
cmpsl
push
xor
rol
inc
int
jae
aaa
out
jp
clc
rcr
jnp
mov
or
addr16
adc
leave
fxch
loope
mov
leave
mov
push
rclb
push
ds
jl
push
push
out
fsubrs
test
sub
data16
xor
movsl
cmp
fisttpll
outsl
inc
jb
or
shl
lods
inc
and
pop
mov
xchg
dec
lds
stc
cs
cmp
out
int3
int3
outsb
mov
push
pop
jmp
mov
out
test
sub
or
mov
loopne
scas
jle
scas
mov
dec
movsb
or
sahf
sbb
sub
push
les
cld
nop
lea
mov
mov
lea
inc
outsl
dec
mov
insb
sbb
and
pop
push
lods
add
xor
cmp
out
pop
ret
dec
xlat
scas
fildll
aaa
mov
lret
mov
and
dec
and
mov
testl
xchg
cmp
jno
stos
rcrl
test
xor
lret
jae
movsl
hlt
xor
stos
pushf
push
sbb
lods
push
jp
or
lret
jno
mov
stos
loope
cmp
mov
add
and
push
or
mov
test
sbb
cmc
aad
mov
push
xchg
out
outsl
popf
mov
sbb
add
nop
hlt
cmpsb
pop
loop
inc
push
jg
shrb
cmpsl
jmp
or
or
dec
or
fadd
dec
and
testl
nop
jle
aad
xor
mov
pop
jecxz
push
pushf
and
jg
mov
stc
fs
xchg
movsl
jnp
mov
inc
adc
mov
jle
aam
dec
in
nop
mov
sbb
and
xor
inc
outsl
dec
jl
push
xchg
sbb
in
in
push
push
fbld
fwait
out
mov
jbe
xchg
out
loopne
cmp
jp
inc
stos
xchg
ret
repz
clc
sub
cs
mov
xor
mov
lahf
mov
sub
add
pop
add
xchg
jmp
cli
enter
mov
add
xor
adcl
push
fsubrs
cmp
popa
ja
test
pmullw
push
ss
sbb
aad
stc
dec
sub
mov
rcrb
add
loopne
std
test
pop
sub
das
sub
scas
mov
xor
scas
push
adc
cltd
sahf
imulb
iret
stc
mov
scas
inc
lret
jbe
and
aas
mov
cmp
lret
dec
cmp
mov
sahf
sbb
jle
sbb
xchg
mov
inc
lcall
xor
sub
push
enter
dec
in
mov
mov
mov
in
ret
ret
xor
scas
push
scas
fmull
in
pushf
fwait
orb
out
shlb
fstpt
sbb
pop
lock
cmp
test
mov
xchg
out
mov
push
iret
dec
test
and
js
cmp
inc
jae
mov
cs
nop
adc
xlat
scas
sbb
jno
lahf
push
cli
repz
cmp
cmp
notb
jecxz
pusha
inc
dec
sub
mov
push
jne
incb
pushf
cmpsb
outsl
push
xchg
insl
lods
test
ss
icebp
jne
mov
sub
fisttps
nop
sub
daa
scas
mov
sti
ja
sbb
nop
dec
cmp
add
jae
aas
nop
and
cmp
push
shrb
fcomps
fldcw
xor
jle
cmpsl
rcll
fisubl
jge
rcrb
into
out
repz
inc
mov
popa
or
mov
movb
xor
data16
test
xchg
mov
rolb
test
jnp
imul
int
imul
popf
ret
in
cli
leave
jl
xchg
ret
pop
pop
sub
or
out
xor
shl
jb
mov
xor
arpl
pop
decl
mov
lret
xor
aam
ds
dec
fmuls
data16
cld
push
or
sub
sarb
inc
repz
inc
movsl
pop
ss
pushf
add
mov
idivb
sub
popa
in
das
cmpxchg8b
int3
outsb
shlb
je
incb
inc
push
scas
push
pop
enter
pushf
dec
adc
int
int
cmp
inc
inc
outsb
call
movntq
popf
and
or
mov
or
incb
sbb
test
jo
mov
fiadds
jle
sbb
lds
push
push
jbe
xlat
cmp
test
movsb
imul
mov
pop
outsl
or
lcall
fscale
dec
hlt
xor
mov
push
sbb
rclb
mov
lcall
cwtl
icebp
int
inc
iret
xchg
sbb
mov
in
mov
sar
xlat
dec
popf
andb
xchg
subb
push
xchg
mov
inc
movsb
add
enter
lret
aaa
push
cmc
notb
pusha
mov
ds
ja
inc
mov
or
imul
adc
dec
xchg
and
mov
jno
pop
dec
enter
mov
cmp
and
push
push
pop
stos
inc
lret
ret
push
xchg
or
xchg
shlb
repnz
mov
dec
push
in
stos
nop
and
lcall
sub
dec
mov
xlat
idiv
mov
cwtl
or
xchg
lahf
pop
inc
inc
loope
divl
addr16
cmp
adc
mov
fildl
dec
mov
fildll
or
xor
push
les
pop
outsb
fdivl
mov
push
pop
adc
stos
in
aad
lea
jge
mov
lods
add
jecxz
xchg
add
aas
movsb
fnstsw
loop
sbb
fdivrl
jne
pushf
mov
mov
mov
mov
xchg
stc
push
mov
into
fcoml
fisubrs
jno
sbb
pushf
or
push
push
jmp
xor
imul
std
add
test
cmc
cli
fnstsw
mov
fnsetpm(287
and
loopne
iret
cmp
loop
aam
test
hlt
dec
jg
adc
xchg
mov
push
adc
add
loopne
ret
jp
cmp
lods
sahf
sti
insl
jge
or
jmp
mov
mov
je
shlb
and
sbb
divb
jge
into
add
hlt
cli
sahf
push
test
mov
sbb
pop
scas
testb
insl
jge
in
push
mov
cmpb
ds
jae
sbb
pop
divps
adc
jg
lret
gs
stc
xchg
pop
lcall
js
lods
scas
mov
mov
sbb
and
or
repz
cmp
ds
mov
rorl
imul
das
push
int
nop
jmp
bound
int
push
jno
jne
xor
sbb
push
aaa
cld
stos
cs
push
jnp
pop
or
pop
pop
into
daa
add
mov
xor
push
rcr
mov
pop
or
pop
jmp
push
fs
xchg
aaa
fcmovnb
jbe
movsb
nop
mov
add
fs
sbb
and
nop
inc
mov
pop
lret
jp
push
pop
mov
mov
dec
mov
cli
sub
sbb
or
cli
cmp
sub
sbb
or
pop
mov
mov
dec
mov
cli
sub
sbb
or
cli
fisubl
add
push
sub
add
mov
dec
cmpl
cmp
sbb
loop
out
fidivs
dec
mov
fimull
mov
xchg
add
lcall
in
cmc
mov
in
std
out
neg
stc
icebp
rcl
fidivrs
jge
dec
jbe
push
sub
ss
out
neg
xchg
mov
inc
insl
push
jge
dec
jbe
push
sub
ss
out
neg
xchg
mov
inc
push
jne
push
cmp
gs
gs
mov
out
lahf
xor
mov
sub
or
xchg
sub
sub
xchg
inc
pop
sbbl
cwtl
dec
mov
push
mov
or
mov
mov
cli
inc
ss
mov
sbb
lods
inc
xorl
popf
pop
sub
ss
adc
cld
and
lods
imul
xchg
push
insl
fdivp
mov
add
or
jns
mov
pop
jb
lret
inc
sub
jmp
std
outsb
push
in
js
or
dec
cli
push
or
add
sbb
xchg
adc
sbb
loop
inc
leave
loope
xor
add
int
fldl
lea
jge
dec
jbe
push
sub
ss
mov
mov
cld
leave
call
xor
inc
push
inc
inc
popl
mov
mov
mov
enter
loop
popf
xor
xor
sbb
jbe
icebp
inc
jae
dec
js
jae
mov
xchg
test
cmpsb
lea
jge
dec
jbe
push
sub
ss
out
neg
xchg
mov
inc
insl
push
jge
dec
jbe
push
sub
ss
jnp
mov
push
sub
cmc
je
mov
das
add
outsl
sbb
xchg
fcmovb
iret
cmc
push
mov
je
pop
adc
fisttpll
imul
mov
scas
loop
inc
mov
dec
aas
push
mov
cwtl
loope
push
xchg
mov
lea
dec
pusha
loopne
iret
aas
push
std
ret
xchg
mov
scas
dec
cmc
mov
fldl
stos
cwtl
lea
jecxz
add
jnp
icebp
addr16
pop
subb
movsb
adc
jno
aaa
ss
push
or
xchg
mov
sub
in
sbb
in
jmp
mov
dec
xchg
test
cmp
pop
aad
jbe
push
imul
outsb
arpl
adc
xchg
sbb
and
mov
add
test
lea
repz
sbb
mov
and
pushf
cmp
push
xor
mov
cmp
pop
inc
push
sbb
in
xorb
popf
sarl
or
sbbl
jae
push
cmpsl
pop
les
mov
mov
inc
adc
mov
sbb
cmpsb
and
test
aam
mov
sbb
inc
pushf
ds
push
scas
lds
int
pop
jle
loopne
mov
gs
bound
push
sub
cltd
xor
sbb
insb
ficoms
dec
adc
shll
bound
jns
cmp
into
cmpsb
sbb
mull
mov
inc
push
adc
xor
popf
fcomip
mov
loop
push
jl
addl
stc
jmp
or
cmp
test
cmc
scas
movsl
pop
bound
imull
adc
insb
in
mov
pop
clc
inc
arpl
inc
pop
and
inc
std
inc
faddp
lret
jmp
std
int3
fisttpll
ljmp
into
and
into
aam
mul
ss
imull
add
clc
adc
lods
pop
cmp
jg
inc
inc
data16
fs
into
cltd
arpl
addb
scas
dec
imul
in
jp
pop
nop
mov
lcall
lds
mov
lret
mov
lret
test
and
push
pop
push
andb
addr16
mov
push
test
es
cwtl
movsb
pop
adc
repnz
lods
xorb
xchg
jo
dec
jnp
and
bnd
popl
test
or
dec
push
xor
add
adc
adc
push
dec
aam
shr
ja
sbb
sbb
mov
lret
in
dec
stc
mov
mov
insb
xchg
test
jp
in
mov
stos
shll
xor
jmp
lods
pop
xchg
xchg
gs
mov
outsl
and
test
clc
adc
mov
sbb
lret
mov
xor
pushl
jp
dec
and
dec
mov
and
ret
test
add
add
xchg
ss
data16
dec
mov
inc
loop
xor
jns
daa
imul
repnz
cli
fadds
lcall
scas
push
sti
mov
cmp
aas
test
cli
cs
pusha
nop
in
shrl
sbb
adc
adc
and
les
adcl
cld
insl
cmc
xlat
rcll
lret
shlb
pop
lcall
out
sub
jle
out
sbb
add
imul
mov
movsl
inc
jmp
mov
mov
mov
inc
xor
push
add
data16
insb
jbe
jge
sbb
cltd
adc
lahf
sbb
sti
std
cmp
jg
jecxz
add
push
cmpsb
fisubl
or
stos
iret
jb
xor
dec
subb
sbb
fidivl
mov
jns
jbe
cmp
fsts
inc
xor
hlt
outsl
inc
les
cmp
outsl
pop
popa
inc
sahf
imul
jp
mov
push
clc
adc
fnstsw
cmpb
loopne
neg
dec
psubsb
or
sub
mov
mov
xor
ror
dec
push
push
pushf
ret
or
insl
inc
pop
jno
inc
stc
inc
out
int3
rcll
or
mov
hlt
stc
inc
push
subb
xchg
scas
cmp
xor
cmp
jecxz
loop
idivb
sbb
jl
mov
mov
push
test
sub
int
jno
mov
cwtl
jmp
jmp
inc
pop
stos
lcall
es
fdiv
or
add
inc
sub
and
mov
mov
sub
lea
push
push
jns
cmpsl
int3
cmp
jge
xchg
add
mov
lret
xchg
addr16
lods
in
add
les
xlat
scas
in
outsb
pop
in
hlt
push
stos
stos
pop
push
mov
cwtl
mov
or
cmc
scas
test
mov
jge
mov
addr16
test
jae
or
push
mov
mov
mov
subb
loope
mov
mov
loopne
add
inc
xchg
push
xor
fsts
jmp
push
lahf
arpl
std
ja
jne
imulb
movsb
pop
mov
sub
cli
sub
mov
lock
fwait
daa
push
sub
scas
scas
aas
lds
push
xchg
and
data16
movl
aam
jle
ffree
mov
clc
rcl
and
jle
sub
lcall
push
pusha
jg
sbb
popf
pop
add
lret
dec
loopne
mov
add
addr16
aam
add
or
in
repz
stos
cmp
loop
cmpsl
movsb
dec
pusha
ss
in
popa
adc
repz
dec
jecxz
cmp
inc
jo
int
orb
jb
cld
mov
push
cmp
out
pushl
stc
push
push
nop
and
ret
stc
iret
inc
xchg
movsl
out
int3
fidivrl
add
xchg
leave
lcall
or
dec
imul
int
xchg
add
mov
or
dec
idivl
mov
fisubs
popf
arpl
loopne
popf
push
cld
ds
aam
jae
lods
aas
and
and
lds
fistpl
sbb
xorl
in
nop
into
xchg
cld
sti
lea
pop
mov
rcll
or
imul
imul
pop
and
popa
lds
or
ss
jae
or
popf
in
mov
mov
xchg
rcrb
leave
mov
cltd
push
mov
test
mov
jle
adcb
xchg
inc
cmc
jbe
jo
cmpsl
add
fnsave
call
jecxz
into
cmp
dec
test
cmp
xchg
pop
cltd
or
inc
cmp
movsl
mov
jle
inc
mov
push
pop
icebp
xchg
in
push
dec
push
lcall
mov
clc
jne
or
cli
addr16
cltd
daa
pop
push
out
or
and
xor
add
lea
pop
dec
sahf
pop
sti
jbe
shll
sbb
mov
add
add
jg
push
imul
nop
lret
jmp
out
int3
mov
jnp
fldlg2
gs
cmp
mov
ljmp
cmp
arpl
imul
aas
adc
pop
xchg
imul
push
jg
sahf
mov
test
push
les
sarb
nop
inc
sub
push
cmp
fnstenv
repnz
adc
xchg
add
enter
sbb
mov
mov
sub
mov
xchg
pop
cmp
ret
jb
hlt
mov
loopne
push
sub
shrb
sub
adc
xchg
lret
mov
rclb
xlat
nop
rclb
push
mov
insl
pop
nop
sbb
jo
test
inc
xor
ss
enter
mov
out
lahf
lcall
cwtl
adc
call
push
jns
in
push
pop
pop
mov
xchg
ja
leave
mov
pop
inc
paddsb
pop
repz
pop
pop
ljmp
rorb
sahf
icebp
sbbb
pusha
call
mov
inc
adc
repz
pop
push
arpl
fs
mov
iret
enter
dec
int
clc
adc
mov
jne
add
mul
fistps
push
adcl
inc
pop
or
or
xchg
inc
mov
mov
test
mov
xor
jae
pop
movsl
icebp
fs
int3
mov
neg
add
cld
xchg
pusha
add
sbb
mov
jle
pop
test
aam
inc
subl
js
test
push
sbb
jns
sti
bound
test
cs
in
popa
aad
punpckhdq
pop
jnp
jno
mov
lret
les
test
jo
mov
aas
mov
and
inc
filds
enter
mov
cmp
imul
xchg
pushf
sub
adc
call
in
loope
aas
out
pop
shl
lea
sahf
jg
push
iret
push
sub
pop
cmp
test
loop
push
sbb
std
mov
adc
mov
inc
arpl
xchg
lret
and
mov
mov
mov
test
push
mov
cmpsb
or
cli
imul
outsl
jno
add
adc
mov
add
or
lea
cltd
ret
vcvtps2pd
jl
jmp
ffree
movsl
pop
outsl
adc
popf
or
repz
push
push
push
sbb
arpl
inc
test
in
shlb
cmp
push
out
ds
orl
push
je
fstpt
push
imul
and
test
test
jl
pop
jp
lret
es
mov
mov
jg
test
into
jmp
in
jge
push
lret
add
xchg
aaa
cld
cmp
icebp
mov
fldl2e
add
clc
pop
xchg
fdivrl
outsl
shrl
mov
pop
ret
das
lods
add
stos
sub
add
sub
mov
sub
sub
xor
insl
cmp
fisubs
push
clc
fimuls
xchg
mov
lahf
subl
xchg
dec
inc
fnstenv
ss
dec
mov
add
sub
xchg
cs
pop
mov
jp
and
jl
shll
adc
shll
sub
pop
mov
mov
inc
push
int3
cld
mov
ret
xor
push
es
enter
or
sbb
dec
or
push
dec
loope
cli
mulb
aad
jb
rolb
js
nop
add
push
adc
and
cmp
fsubr
push
mov
jmp
xorl
mov
loope
xchg
pop
int3
fld
jno
adc
test
lods
daa
xchg
pusha
andb
push
ret
out
sub
iret
scas
lds
inc
in
addb
bound
hlt
loop
and
test
mov
jns
mov
mov
aad
out
rol
pop
repz
popa
inc
sar
stc
mov
sub
sbb
xor
mov
imull
sar
push
hlt
jp
jb
fstp
jmp
sarl
mov
negl
push
jbe
aas
sbb
dec
mov
aas
or
pusha
pop
je
insl
popa
sbb
loope
les
lock
mov
pop
outsb
jne
jb
out
jnp
pop
push
daa
sbbb
mov
jg
decl
pop
pop
mov
aaa
or
dec
ficomps
lahf
scas
inc
push
fwait
call
popf
mov
shr
outsl
adc
stos
fwait
pusha
mov
jbe
pop
into
xchg
push
cmp
scas
sub
sbb
stc
jl
xchg
push
lods
aas
push
mov
jp
push
add
movsl
ret
mov
subb
mov
mov
jb
in
shlb
incb
fisttps
inc
shr
jecxz
rcrb
mov
xchg
mov
mov
bound
fisttpll
ljmp
xchg
int3
mov
shl
lahf
jo
add
jge
dec
or
mov
ret
add
mov
gs
stos
imul
mov
jmp
sahf
xlat
mov
jae
cmp
lods
movsl
xchg
ss
inc
loopne
mov
mov
mov
loopne
addr16
fstl
rorl
das
fucomip
aad
pop
mov
push
or
sbb
mov
ja
or
test
out
pop
mov
cmp
add
inc
pop
test
jmp
mov
popf
mov
dec
push
xor
inc
insb
adc
add
leave
test
shrb
mov
xor
lods
mov
fbld
or
jbe
aaa
stc
dec
mov
fmuls
aas
ret
and
mov
adc
insb
sbb
mov
in
testl
jle
sub
arpl
mov
aas
or
mov
and
mov
icebp
push
lds
into
mov
arpl
outsb
mull
mov
push
adc
sub
xchg
xor
pop
stos
jp
out
jns
cs
ret
mov
xorl
and
sub
inc
insl
cli
int
or
pushf
pop
add
ss
jg
lds
xor
ja
icebp
fwait
push
xchg
outsl
je
daa
cmp
vpmaddwd
cmp
mov
dec
adc
sbbl
mull
aaa
mov
pop
xchg
sbbl
andl
in
lds
shll
movsl
ds
inc
cli
pop
cmpsl
push
cmpsb
cmpsb
sbb
imul
mov
sbb
daa
and
and
popa
cmpsb
lcall
scas
xchg
hlt
jl
mov
inc
mov
rorl
ja
andnps
pop
lcall
inc
lods
shlb
pop
xor
or
dec
lcall
lea
popa
mov
xor
pop
dec
dec
mov
test
ret
dec
cwtl
mov
movsl
scas
daa
mov
gs
imul
mov
sub
je
sbb
jmp
sub
ret
push
pop
faddl
ss
and
adc
or
mov
mov
dec
cmovo
sbb
inc
mov
test
sub
cmp
in
cmp
fimull
std
pop
fsubl
adc
inc
addr16
adcb
or
and
sbb
push
outsl
or
lea
test
movsb
addb
jg
jecxz
cli
stos
test
fs
faddl
mov
sub
mov
sub
in
leave
int
es
pop
mov
adcb
sahf
in
lahf
ret
sbb
mov
repz
filds
out
cs
mov
rcl
jns
pop
push
int3
adc
cmpb
notl
sbb
pop
test
jbe
push
daa
xchg
xchg
cli
dec
pop
call
sbb
pop
xor
xchg
shlb
adc
or
jecxz
push
inc
out
aad
add
repz
sbb
jp
mov
jge
in
adc
mov
pop
push
movsl
jg
sub
enter
in
std
fimull
mov
dec
lods
or
out
or
movsl
xchg
push
dec
and
fwait
jns,pn
push
test
lea
xchg
cmc
fcmovb
aad
insl
jno
jo
aas
xchg
repnz
lret
or
pop
xchg
pop
sbb
lret
in
loopne
sub
lret
cmpsb
nopl
bound
adc
jnp
bound
mov
mov
cld
imul
xor
int
mov
and
aad
mov
in
ds
jne
in
or
daa
inc
loopne
mov
jbe
out
fistps
rol
xor
mov
lret
jl
adc
gs
xchg
adc
outsb
popf
inc
in
in
dec
clc
fisttps
xchg
repnz
add
xchg
stos
push
addl
arpl
rorl
lret
lods
dec
inc
lahf
push
xor
incb
lret
add
push
mov
cmp
or
add
mov
pop
xchg
inc
jbe
sbb
icebp
sbb
dec
push
xor
pop
adc
repnz
xchg
out
add
sti
push
pop
sub
adc
push
fmull
or
xchg
inc
bound
adc
dec
xor
adc
cmp
adc
mov
call
aaa
or
xlat
rclb
sub
lods
mov
lock
into
jb
gs
and
xorl
and
xorl
aaa
pop
sub
add
adc
adc
addr16
cmp
sub
je
fcoml
cmp
movsb
sti
dec
and
lds
cmp
ficomps
int3
inc
jne
sbb
int3
and
dec
cmc
scas
push
push
sbb
into
cmovns
add
js
mov
in
mov
insl
bound
sub
fistps
jb
aaa
mov
fisttps
cmp
sub
xchg
fbstp
adc
adc
mov
fs
push
loopne
mov
jmp
fldenv
cmp
popa
rol
dec
addr16
loope
shrl
fcmovne
popl
lds
out
inc
mov
aam
push
in
jno,pt
lret
addr16
frstor
movsb
in
push
decb
inc
insl
sbb
dec
andl
daa
imul
movswl
mov
imul
fnstsw
cwtl
jbe
mov
jb
xchg
xor
pop
aad
push
mov
and
pop
fmuls
xor
xchg
sub
mov
insl
pop
push
pop
loopne
push
mov
sbb
mov
outsb
ficoml
pop
test
adc
lret
inc
scas
out
mov
hlt
xchg
dec
lahf
scas
pop
out
xor
lods
inc
cmp
jg
and
push
fmulp
sub
sub
aam
fiadds
gs
jo
mov
rol
mov
jb
sbb
les
lock
clc
mov
xchg
addr16
pop
sub
aam
fisttpll
jno
adc
adc
mov
add
push
dec
lods
pop
iret
ficompl
mov
pop
adc
jbe
jne
inc
inc
push
dec
adc
loop
enter
ficompl
xchg
jp
pop
ficomps
and
push
mov
and
ja
cmp
dec
sbb
les
insl
insl
adc
mov
pop
pop
jo
push
jne
xor
dec
ret
shrb
cmpsl
jo
pop
loope
mov
pop
pop
jle
xchg
mov
ret
adc
das
push
rclb
mov
scas
stos
aam
mov
lods
cmp
push
jg
or
xorl
shlb
fs
jno
enter
sti
call
add
push
test
inc
xchg
add
scas
ss
jmp
or
jo
push
or
cmp
jp
add
pop
cli
mov
push
cli
je
mov
pop
loop
fistpl
fsub
dec
ds
js
sarl
mov
jns
mov
xor
inc
xorl
pop
popf
dec
dec
in
inc
push
cmp
jge
adc
jl
jmp
loopne
repnz
nop
in
push
mov
pop
xor
pushf
pop
ds
enter
out
pop
push
inc
test
jnp
adc
sbb
es
lods
mov
or
pop
jne
pop
xchg
lock
inc
add
mov
xor
js
out
jg
jne
jnp
je
jns
pop
insl
stc
dec
sbb
lods
cltd
mov
sub
sub
pop
bnd
mov
cmc
ror
or
mov
outsl
mov
cld
cmp
testl
int3
adcb
movsb
popa
test
fbld
lret
pop
ja
add
push
mov
add
jp
inc
xchg
jnp
push
mov
mov
bound
cmp
shlb
mov
aaa
xchg
mov
fcmovnb
and
repz
fsubs
lea
scas
jb
xchg
loopne
popf
testl
push
cmp
jo
adc
lock
add
fildl
inc
loop
push
jmp
flds
leave
xchg
cltd
loopne
ds
addl
js
or
and
jb
repz
push
aad
ja
jl
xor
or
xor
ljmp
inc
cs
in
pushf
pusha
mov
pop
xchg
sbb
mov
lahf
shl
jmp
sub
xchg
xor
test
xchg
sar
jle
fsubrs
outsl
jb
pop
js
sub
pop
test
jge
bound
std
mov
mov
dec
cmp
inc
mov
stc
xor
stos
adc
pop
loope
ret
mov
stos
adc
pop
out
inc
aaa
and
push
adc
nop
popf
das
push
pop
negl
inc
lock
imul
mov
ret
in
mov
ss
fidivrl
mov
pop
mov
xchg
cmp
dec
adc
lcall
and
jne
jecxz
cs
sbb
mov
cld
sbb
adcb
push
xchg
orb
xchg
mov
cmp
and
mov
andb
pop
loop
in
mov
pop
xchg
outsb
insl
cltd
xor
mov
xchg
mov
mov
cmp
les
cmp
sbb
testl
movsb
std
fxch
neg
xchg
mov
inc
insl
push
jge
dec
jbe
push
sub
ss
out
neg
xchg
mov
inc
insl
push
jge
dec
jbe
push
sub
ss
out
neg
xchg
mov
inc
insl
push
jl
dec
ja
push
sub
cmp
in
std
out
neg
xchg
bound
dec
jbe
jno
sahf
ret
into
loop
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
loope
push
aas
ds
scas
push
xchg
aas
das
sbb
or
sahf
mov
fmulp
int3
out
out
pop
push
femms
aas
ds
cs
pop
dec
ret
outsl
sbb
mov
iret
into
mov
femms
aas
xchg
das
sub
bound
jg
outsl
jbe
inc
in
int3
loope
fnsave
mov
pusha
dec
dec
pop
jnp
imul
pop
popf
push
xor
jl
out
push
and
inc
jb
scas
mov
xchg
mov
lret
xchg
jne
lret
mov
ds
sub
mov
sub
call
arpl
pop
test
mull
add
or
and
inc
xor
and
inc
into
lcall
push
dec
cs
xchg
pop
pop
pop
addl
mov
fbld
mov
push
insl
pop
stos
in
inc
or
outsb
outsb
int
sahf
scas
jns
scas
push
int
pop
out
cli
adc
fidivs
mov
das
iret
adc
sbb
xchg
iret
sahf
in
inc
inc
ljmp
incb
aas
mov
dec
dec
jg
outsl
out
lahf
sbb
out
repnz
ss
out
sbbb
push
pop
jge
add
sub
and
pop
cs
fmuls
mov
mov
jge
outsl
pop
dec
or
xor
jge
adc
cli
sti
fdivr
fucomi
leave
mov
lahf
out
test
imul
cs
pop
cmp
jg
outsl
outsb
lahf
sahf
mov
fmulp
into
out
out
pop
push
femms
aas
ds
cs
pop
dec
dec
jg
outsl
outsb
lahf
sahf
mov
fmulp
into
out
out
pop
push
stos
flds
jecxz
and
negb
out
fdivr
add
mov
jbe
pop
jbe
xchg
loop
sub
jae
mov
dec
jmp
test
les
negl
push
and
sub
mov
dec
pop
test
scas
repnz
push
fiaddl
lahf
test
jnp
jp
je
icebp
adc
fdiv
out
fwait
sahf
enter
cmp
lahf
fstpl
icebp
sbb
cli
add
pop
pop
and
mov
push
mov
out
int
or
cmp
xor
xchg
sbb
ficoml
adcb
jmp
mov
test
or
int3
lahf
xchg
jmp
cmp
push
lret
cmpl
aas
jg
sbb
shll
pusha
popa
ljmp
fiaddl
cmpsl
sbb
push
int
addb
jl
inc
fwait
out
adcl
aad
je
jg
sbb
out
xor
imul
or
fwait
and
cwtl
enter
push
lahf
test
and
mov
mov
cld
stos
cmp
js
cmp
out
rcrl
jge
xor
add
movsl
stos
jl
push
dec
pop
fnstcw
daa
ret
adc
pusha
adc
xchg
fidivrl
scas
sbb
cmpsb
push
out
push
cwtl
fisttpl
push
inc
ja
inc
pop
xchg
movsl
and
inc
and
push
fdivrp
out
dec
les
sbb
outsb
popa
in
mov
int3
psrlw
sub
imul
dec
xlat
push
or
push
sti
mov
add
and
dec
adc
mov
addr16
xchg
mov
sti
sub
pop
mov
mov
pop
fcmovnb
je
cld
scas
jae
mov
mov
sbb
and
push
pop
pop
in
adc
out
addr16
test
ret
std
add
movsb
xchg
mov
push
imul
pop
mov
jnp
sbb
and
sahf
into
ds
ljmp
mov
mov
sbb
adc
mov
mov
dec
into
push
divl
mov
loop
jne
data16
shlb
lods
test
inc
adc
into
cmp
push
adcb
pop
loop
in
aad
in
shlb
jl
jno
icebp
pop
sarl
movsl
js
or
sub
leave
inc
or
pushf
or
mov
inc
add
movsb
inc
loopne
movsl
shll
sahf
loop
push
inc
hlt
aad
icebp
jnp
lahf
call
push
push
mov
fptan
inc
push
cwtl
scas
lods
out
cmc
mov
mov
in
cmp
fnstenv
insl
lds
into
pop
cmc
fists
xor
in
push
sub
mov
dec
jp
aas
mov
fistps
ja
pop
sub
aam
pop
es
test
lahf
jmp
outsl
popa
jge
adc
pop
xchg
idivb
scas
clc
mov
dec
and
inc
adc
cmp
imul
sbb
cmp
ret
pop
jl
lock
add
mov
sar
mov
or
push
or
pop
push
filds
loopne
xchg
push
fisttps
out
push
sbb
xlat
push
mov
xor
jmp
lret
loope
cli
sub
stos
or
aam
aaa
mov
xor
mov
clc
jmp
nopl
stc
pusha
pop
outsl
fimuls
xor
inc
dec
fsubr
pop
inc
arpl
mov
lcall
mov
les
mov
pop
out
lret
ljmp
sbb
cs
add
sti
rclb
repnz
mov
pop
or
sahf
xchg
xor
lock
ds
jb
sarb
xchg
imul
inc
jge
sbb
mov
ljmp
inc
sbb
add
or
sbb
inc
jnp
mov
in
leave
xchg
mov
out
int3
sub
cmpsl
enter
and
xchg
cmp
xor
adc
insl
mov
sub
jbe
decb
dec
stos
jnp
xchg
rclb
jg
mov
daa
faddl
lock
inc
mov
or
xor
sbb
inc
lock
xlat
push
xlat
or
or
popf
sbb
popf
leave
mov
divl
xchg
leave
lret
sub
cwtl
mov
pop
dec
or
lods
out
data16
cmp
inc
mov
mov
inc
xchg
repz
loop
mov
lock
sub
jg
push
popf
dec
mov
cmpsl
shrl
lds
bound
push
rcrb
mov
cmpsl
add
insl
pop
inc
mov
mov
stos
push
inc
inc
mov
push
scas
mov
adc
into
iret
cmc
in
add
xor
scas
jl
pop
cltd
and
orl
or
mov
add
adc
pop
cwtl
sahf
push
adc
aad
std
xchg
pop
mov
aas
cld
decb
jo
pop
fldt
adc
dec
pop
daa
xchg
fcoms
jp
sub
andl
dec
inc
test
push
jnp
mov
xchg
sbb
push
push
mov
pop
mov
jns
ret
pop
ret
movsl
ljmp
stos
jns
rorb
push
dec
notb
dec
xchg
stc
and
fwait
adc
cmp
fsts
aad
mov
adc
pop
xchg
pop
inc
cli
or
repz
cmp
lock
sub
inc
dec
scas
aad
push
push
xchg
add
incl
push
jmp
lahf
inc
lods
dec
shrb
cmp
fimuls
sarb
mov
jecxz
in
inc
sti
xchg
mov
or
mov
imul
daa
cs
sahf
push
aad
sbbl
lahf
fidivrl
js
lds
xor
rorb
into
fbld
or
mov
ficompl
popf
sub
sbbb
xor
dec
repz
add
in
rcr
adc
mull
add
push
xor
push
mov
out
xchg
fadds
dec
inc
mov
test
sub
lods
jl
fildl
cmpb
adc
pop
push
cmpb
fdivl
mov
repz
mov
cmp
xchg
and
sbb
or
add
sub
push
mov
jo
dec
fistps
daa
and
mov
add
mov
lea
mov
gs
or
cmp
scas
and
sub
insb
nop
mov
cmpsl
pop
mov
lods
xorb
popl
push
out
xlat
push
cmp
insb
xlat
movsl
mov
push
je
xor
pop
fstl
insl
repnz
into
adc
ljmp
pop
sti
dec
pusha
xor
jne
negl
nop
popf
inc
cmp
leave
mov
in
stc
mov
jno
sub
test
xlat
inc
lcall
pop
cld
cmp
shl
inc
pusha
cmp
mov
pop
cmp
inc
fcompl
and
xchg
cmp
subl
inc
mov
push
mov
and
ds
dec
jp
out
insb
cmpsb
stc
pushf
bound
movsl
sbb
lret
pop
cwtl
shlb
icebp
movsl
sub
xorb
dec
add
dec
insb
and
sahf
and
xor
mov
popf
mov
jb
ds
mov
test
inc
add
mov
adc
push
mov
leave
fidivs
inc
cli
fs
jmp
add
push
sub
mov
or
iret
cmp
sub
pop
aaa
add
mov
and
xchg
xchg
jge
inc
ds
cmovbe
rcrl
cltd
mov
and
and
mov
pop
xor
xchg
mov
lds
mov
pusha
test
push
shrb
negb
pop
dec
jmp
mov
imul
mov
in
xchg
aaa
ret
sub
jle
icebp
pushf
shlb
loope
add
in
sti
inc
addr16
loop
cmpsb
cmp
mov
pop
add
and
aaa
inc
jns
or
test
aad
sbb
jmp
and
aaa
push
mov
ret
fbstp
pusha
ret
cld
and
adc
xorb
aas
push
loop
test
imulb
pop
mov
pop
repz
loopne
in
aam
fldcw
xor
iret
cmp
sbb
pusha
inc
shrl
cmp
js
je
push
sub
sub
pop
xchg
push
xor
dec
mov
insb
jne
in
adc
aas
xor
fs
inc
loope
push
push
mov
sub
pop
movsl
dec
and
add
cmp
popa
mov
pop
aad
fbld
sbbb
xlat
aaa
mov
mov
cld
push
xor
out
cmp
test
cmp
mov
in
mov
mov
sbb
jl
lcall
jo
dec
xor
cmp
adc
iret
or
dec
pop
cmc
mov
leave
cli
mov
adc
xchg
cld
mov
mov
loopne
mov
sub
cltd
inc
cmpsb
dec
push
out
in
out
sub
cmp
inc
xlat
cmpsb
scas
xchg
fistl
push
icebp
negb
cmp
lds
xchg
add
fisubl
push
inc
push
fadd
add
clc
popf
fnstenv
popa
mov
mov
push
xor
outsb
rcll
add
or
rclb
cltd
dec
outsl
jp
test
push
fstpl
jge
sub
dec
mov
dec
out
std
lods
out
out
xchg
aaa
and
shll
mov
das
mov
jb
ja
ret
out
ret
sub
stos
pop
xchg
call
nop
jl
out
sub
xchg
aam
test
mov
pop
outsb
mov
insb
scas
push
jp
pushw
sub
movsl
hlt
dec
push
pop
cltd
cmpsl
cli
fwait
inc
out
mov
push
xor
nop
cmp
inc
outsb
cmp
lret
mov
ja
cs
or
cwtl
xor
fwait
push
cmp
xchg
loope
leave
pusha
addr16
pop
fcmovnb
movsl
push
and
push
add
inc
and
repz
and
lea
cli
xchg
xor
adc
fwait
lea
xor
bound
ror
test
frstor
push
lods
or
call
xor
sub
scas
aam
add
rcl
pop
orl
push
sub
insl
jecxz
mov
mov
mov
mov
das
and
fdivl
xor
cmpsl
adc
popf
mov
cmp
dec
stos
inc
cli
addr16
xor
stos
scas
pop
cs
mov
std
outsl
std
jb
pop
push
and
es
jae
dec
mov
out
add
mov
add
mov
in
and
fs
pop
cmp
imul
test
leave
in
push
sub
cmp
inc
add
std
pop
dec
mov
sub
cmp
lcall
xchg
ret
arpl
jmp
adc
push
xor
mov
inc
sub
insl
push
mov
test
gs
hlt
imul
lock
mov
mov
out
jecxz
inc
mov
mov
fldl
inc
mov
inc
adc
pushf
mov
popa
lds
fucomp
jno
mov
xchg
pop
push
scas
das
cli
and
test
cmp
testb
sbb
xchg
stc
push
mov
lods
adc
mov
lret
sbb
add
lods
add
fildl
xor
movsl
cmp
inc
flds
aas
pop
jl
pop
push
insb
iret
cmp
pop
inc
dec
loop
cmp
inc
cmpsl
xchg
lahf
enter
icebp
mov
mov
pop
movsb
sbb
es
enter
popl
movsb
push
xchg
lock
roll
sarl
xchg
jle
int
jnp
int
jmp
sub
fsub
lcall
lods
out
adc
cld
hlt
push
lret
je
loopne
std
test
clc
ret
mov
jbe
jmp
dec
xor
xchg
pop
mov
out
mov
stos
popa
imul
and
out
jecxz
jo
mov
leave
test
cmc
stos
test
inc
iret
gs
cmp
out
pusha
cs
xor
out
xchg
pop
cmc
add
inc
xor
add
subl
ret
clc
in
push
mov
in
jne
sti
shl
cmc
pusha
inc
sub
bound
das
mov
jg
rorl
les
lock
xchg
pop
mov
pop
test
dec
fcmovbe
push
aad
js
mov
je
aaa
loope
into
stos
stos
icebp
jnp
repnz
jmp
mov
cmp
lret
add
dec
push
popa
cltd
nop
xchg
mov
aaa
dec
jnp
mov
fs
mov
pop
push
inc
fsubl
push
and
or
xor
adc
test
sbb
or
in
fiadds
jp
call
in
int3
js
and
add
adc
mov
pop
icebp
cmpsb
xchg
inc
jmp
jb
jge
loopne
add
jmp
adc
cli
push
mov
pop
add
and
inc
mov
or
cmp
aam
mov
jge
lds
mov
out
ret
hlt
and
ljmp
push
or
sub
mov
scas
repnz
fidivl
push
xorb
ljmp
sahf
loope
pop
adc
lahf
shll
mov
rolb
sbb
cwtl
sub
mov
adc
mov
sbb
fwait
nop
adc
add
cltd
cmp
xlat
cmp
push
testl
and
dec
scas
pop
sbb
mov
pop
pushf
adc
mov
sub
movd
lcall
pusha
lret
xchg
jmp
push
sub
dec
movsl
lods
sub
cmp
roll
push
js
ret
js
or
jno
leave
dec
je
and
mov
popf
jne
out
mov
sbb
pop
imul
iret
jle
sub
es
mov
fnstenv
cmp
push
stc
dec
cmpsl
push
jb
pop
out
mov
xor
subl
jecxz
push
xor
popa
and
fldenv
div
add
popf
xchg
or
adc
mov
mov
cmpsl
mov
mov
enter
mov
aam
cmp
sahf
cmp
xchg
mov
adc
mov
nop
aam
sub
adc
push
test
sub
and
dec
and
mov
pusha
dec
inc
das
sbb
and
orb
xchg
sub
pop
and
enter
mov
mov
mov
push
ficomps
sub
aaa
inc
xchg
fnstsw
loopne
pop
and
push
fdivs
push
ficompl
imul
rcr
out
lea
pop
cmp
xor
out
scas
sub
mov
jns
rcrl
into
xor
pop
pop
mov
pop
sub
call
and
psraw
mov
cld
aas
mov
std
add
mov
sti
nop
add
jge
adc
shrb
stos
sbb
lds
cli
into
mov
in
add
test
enter
and
movsb
jecxz
jmp
loop
inc
mov
insb
jno
mov
in
lret
jns
lods
sub
or
mov
fists
fisubrs
jae
cwtl
dec
pop
pop
mov
popa
loope
shll
sbb
or
add
add
jns
jmp
inc
sub
shll
jp
sbb
jl
add
das
sahf
and
cmp
outsl
in
push
lods
das
pop
add
popf
repz
aas
mov
jmp
jmp
mov
popf
enter
xor
mov
sbb
xor
int
mov
lcall
xor
and
dec
dec
mov
push
cmovo
and
sbb
movl
sub
sub
pusha
or
std
pop
jnp
or
dec
add
sub
xor
inc
jmp
dec
jmp
mov
sarb
push
ss
or
imul
pop
enter
adc
dec
scas
mov
je
clc
je
test
xlat
pusha
and
push
push
stos
jmp
xchg
or
push
add
mov
mov
dec
fisubl
inc
jns
mov
repz
cmp
jbe
imul
imul
test
and
or
fdivs
arpl
add
les
mov
inc
aas
popf
adc
add
or
sbb
int
pop
cli
mov
ljmp
in
arpl
xorb
dec
pop
adc
popf
jl
out
cmp
inc
pop
and
scas
fiaddl
jo
xor
mov
adc
push
jo
call
or
inc
shrb
dec
nop
jne
xor
cmp
push
aad
lea
nop
xchg
lods
rolb
cmp
cmpsl
sar
movsb
mov
xchg
pop
mov
fistps
inc
std
test
mov
xor
sbb
subl
in
pop
pop
cmp
pushf
iret
ljmp
loopne
sub
and
dec
push
mov
ja
cmpsb
pop
and
dec
in
mov
jl
push
add
jge
data16
sub
inc
fmull
pop
inc
ljmp
btr
insl
aad
jb
sub
pop
out
mov
movsl
mov
enter
or
out
inc
or
mov
pop
ss
aaa
add
mov
out
dec
jno
in
and
stos
xchg
mov
ljmp
shll
adc
int3
enter
maskmovq
mull
jne
outsl
adc
call
xchg
aas
jmp
cmp
xchg
push
sub
xchg
xchg
inc
rcl
add
les
xor
cmpsb
shl
mov
jl
push
and
or
test
stos
out
test
mov
fisttpll
xchg
mov
stc
push
je
les
mov
dec
fisttpl
gs
add
je
mov
push
push
aam
lods
into
xor
ret
test
call
jbe
fsubl
in
pop
leave
fwait
dec
negl
stos
push
in
repnz
in
mov
xchg
stos
cmp
jge
ficompl
inc
xor
sub
int
dec
jnp
push
ret
pop
jmp
rcrl
incb
sbb
pop
fwait
adc
mov
adc
push
ret
jmp
sub
pop
popa
dec
cmpsb
test
mov
pop
xchg
in
scas
adc
pop
fwait
test
scas
jbe
mov
cmp
mov
in
and
cmp
add
popf
aaa
xchg
test
sub
std
ja
pop
pop
dec
mov
pop
or
lock
es
popf
jle
add
pushf
dec
push
test
push
inc
mov
mov
mov
icebp
mov
fistpll
scas
das
push
repnz
adc
and
xchg
xchg
xor
ret
mov
test
pop
stos
lea
add
dec
outsb
xchg
inc
inc
xchg
and
insb
xor
shl
dec
sub
add
enter
lods
leave
inc
mov
adc
xchg
lret
sub
outsl
in
mov
push
inc
xor
xor
jne
push
cmpsb
aas
push
loop
sub
mov
mov
stc
aaa
es
pop
repz
mov
cmovg
les
fbstp
lcall
lret
gs
stos
and
pop
out
jae
hlt
push
icebp
loop
sbb
leave
xor
cmpl
mull
cmpsl
outsl
imulb
lods
inc
ret
sbb
mov
mov
fistpl
cs
fdivs
out
mov
xchg
pop
mov
repnz
outsl
ret
out
xchg
add
test
sbb
dec
mov
cmpsl
adc
and
cmp
imul
lret
jno
loop
mov
cmp
sbbl
std
lahf
pop
lock
xchg
adc
incb
pushf
pop
stos
sub
sbb
pop
in
mov
cmc
cmp
ret
adc
jge
dec
ja
push
bnd
into
movsb
jmp
xchg
fisttpl
mov
push
pop
and
sbb
pop
add
dec
int3
sbbb
cld
sbb
fcomps
xor
cli
arpl
repnz
rolb
mov
test
push
push
push
cmp
jmp
or
jmp
and
xsha256
cmpsb
push
push
inc
jbe
scas
push
sub
dec
shrb
push
mov
enter
push
fiaddl
pop
push
hlt
sarb
in
mov
jg
push
out
xorb
mov
inc
cmp
jmp
repnz
and
roll
out
pop
stc
cmp
daa
rcpps
popa
test
lods
shl
push
out
jecxz
roll
push
push
icebp
dec
jecxz
adc
push
push
decb
jno
sub
jns
mov
pop
xor
fbstp
jb
inc
pop
mov
js
jb
adc
sarb
cs
stos
into
dec
bound
sbb
mov
xchg
mov
movsb
fisubrs
xor
push
rcll
cs
pop
dec
dec
jg
outsl
outsb
lahf
sahf
mov
fmulp
into
out
out
pop
push
femms
aas
ds
cs
pop
dec
dec
jg
outsl
outsb
lahf
sahf
mov
fmulp
into
out
out
pop
push
cmovbe
inc
das
cs
pop
dec
out
jle
outsb
lahf
inc
mov
fmulp
into
fsubrp
out
pop
push
femms
aas
ds
das
pop
pop
dec
dec
jg
outsl
outsb
lahf
popa
and
mov
inc
xor
add
adc
xor
out
das
push
ljmp
mov
xchg
ja
pop
mov
lds
aad
xor
xor
out
xchg
jne
inc
mov
shrl
ja
addr16
hlt
add
cmp
sub
sbb
mov
scas
inc
mov
jmp
pop
mov
dec
push
fwait
xor
subb
inc
jbe
lods
dec
pop
lea
dec
jae
fs
out
or
xlat
mov
mov
out
je
dec
pushf
pop
insb
test
mov
pop
ja
pop
sub
pop
fildll
xlat
mov
push
test
cmpsl
push
dec
inc
aad
push
sbb
adc
mov
mov
xchg
pusha
xchg
lods
ret
push
and
mov
ljmp
cmp
lds
cmp
xchg
xor
mov
dec
mov
dec
adc
sub
mov
sets
sbb
jle
pop
aas
dec
sub
and
xor
xor
out
xchg
outsl
xchg
dec
mov
popf
outsb
mov
paddsw
lds
push
mov
xchg
jno
add
cmp
sarl
mov
divl
add
pop
mov
and
test
mov
xchg
sbb
sub
adc
rclb
andb
mov
aad
dec
xlat
pop
pusha
xchg
adc
xchg
push
cmpsl
movsl
push
mov
test
addr16
cmc
pop
lds
aad
and
notl
xchg
push
cmpsl
movsl
push
mov
test
addr16
cmc
pop
lds
aad
and
jo
in
sbb
sbb
jns
mov
jnp
mov
enter
decb
stos
sbb
push
xor
sub
add
mov
in
mov
sbbl
idiv
jle
cmpsl
jne
push
cwtl
jp
cmpsl
add
cmp
push
or
setl
ja
push
shrl
and
sub
adc
ljmp
jae
out
lds
lahf
mov
sahf
lahf
jnp
lods
mov
fmuls
mov
jle
mov
xor
lret
push
inc
jb
std
mov
pop
out
or
pushl
push
shrb
out
in
repnz
push
xchg
outsl
push
xor
outsl
mov
ficompl
aam
clc
outsl
int
insl
test
cld
lds
ljmp
mov
xchg
test
mov
mov
fstpl
jp
insl
and
js
xchg
lahf
cmp
inc
and
pop
les
lods
sbb
icebp
cmp
fidivrl
les
sbb
mov
imul
sub
cmp
inc
int
into
sub
inc
lock
jge
sbb
ss
or
rolb
pop
add
int3
inc
or
xchg
std
out
jne
movsb
cmp
xchg
rcr
iret
rcr
daa
add
sbb
and
jno
inc
cmp
xchg
movsl
iret
xchg
mov
lds
ja
mov
pop
mov
dec
sub
cmp
insl
shr
xchg
adc
pop
dec
rcrb
mov
mov
adcb
and
xchg
cmp
test
cmpsb
xchg
ljmp
sub
sbb
dec
add
jg
cmp
jmp
fs
and
pop
int
or
jg
mov
mov
ljmp
les
sub
int
dec
inc
or
and
aad
aaa
insb
xchg
leave
mov
aas
repnz
les
nop
stc
mov
sarb
fisubrl
jle
repz
push
outsb
test
xchg
fisubl
jle
imul
xor
inc
cmp
pop
jbe
jge
lds
jbe
repz
lods
mov
mov
out
into
fwait
cmp
in
movsl
aas
adc
int3
inc
test
cld
lea
outsb
xor
into
sub
jge
notl
xchg
cmp
dec
push
fisubs
daa
lcall
or
scas
cmpsb
pop
out
mov
adc
dec
scas
mov
ds
and
jp
jno
adc
fiadds
pop
and
cmp
insl
adc
and
push
push
mov
mov
out
push
imul
pop
stc
push
mov
clc
push
cld
out
and
stos
call
out
popf
repnz
inc
mov
xor
add
dec
scas
jo
fstps
or
dec
cs
jo
pop
mov
jmp
dec
addr16
add
daa
dec
mov
cmpsb
inc
pop
sbb
xor
mov
push
jl
cs
dec
fs
lahf
cmp
or
stos
call
mov
cmpsl
jno
lock
mov
aam
stc
add
psubsb
leave
dec
add
movsl
mov
pop
lods
mov
xchg
mov
ret
ror
mov
outsl
add
cld
stc
mov
pop
mov
sbb
popf
pop
bound
insb
and
mov
push
jmp
out
jno
and
test
je
dec
dec
pop
repnz
or
cli
cmpsb
mov
out
aas
mov
xchg
std
add
jge
or
lahf
and
lds
daa
sub
ss
jmp
aam
rcll
and
ret
lods
cmp
insb
je
andb
int
pushf
in
xor
jbe
pushf
inc
dec
inc
jecxz
adc
sti
inc
iret
sarb
xor
repnz
icebp
xchg
mov
add
roll
roll
cwtl
add
popf
filds
pusha
sub
js
cmp
popa
sbb
lret
xchg
or
cltd
sub
test
pop
dec
cmp
lods
test
imul
insl
mov
adc
test
bound
and
loope
sub
xor
pop
scas
mov
ret
cmp
out
and
cmpsl
hlt
dec
inc
out
adc
js
mov
into
je
loope
rol
add
sub
push
pop
jbe
cmp
lcall
or
arpl
inc
dec
insl
lods
out
iret
inc
movsb
xchg
aaa
jg
idivl
mov
cwtl
lea
cmp
movsl
loope
or
and
sbb
dec
les
clc
rorl
jnp
mov
mov
cmp
aam
jmp
and
call
inc
jmp
pop
lods
and
mov
mov
push
push
add
sbb
ret
ds
add
jl
cmp
movsl
cs
shrl
pop
adc
lds
adc
arpl
xor
mov
sub
pop
arpl
insl
ret
push
nop
fadds
push
sub
mov
idiv
mov
jne
jge
mov
pop
jnp
out
or
lret
sti
sub
ror
xlat
jno
stos
stc
xchg
inc
mov
ror
pop
and
pop
cltd
lea
lods
mov
xor
or
fsubl
sbb
popa
mov
out
loopne
int3
lcall
cld
push
inc
xchg
pusha
pushf
shrb
popf
sbb
and
rolb
mov
loopne
jle
lds
add
pop
outsl
jp
arpl
inc
pop
dec
pop
insl
and
push
lock
std
inc
mov
lods
sbb
push
dec
cmp
dec
mov
cmpsb
mov
fdivp
notl
adc
std
ret
fimuls
test
fsts
aas
daa
pusha
xchg
mov
inc
lret
out
add
cmp
dec
dec
ds
push
mov
jmp
fisubs
out
in
fbstp
mov
jg
aad
sbb
adc
mov
jl
lods
add
in
or
lret
fcmovb
sub
mov
cli
jae
les
mov
sub
loopne
stc
cmp
sbb
mov
dec
cmp
test
xor
xor
push
sbb
fwait
das
xor
aad
pop
dec
pop
add
out
and
daa
ret
out
cmp
mov
push
mov
push
loope
jmp
mov
ret
jno
sbb
popa
fnop
mov
icebp
jp
add
shl
xchg
mov
leave
subl
mov
gs
std
xchg
adc
data16
icebp
lahf
mov
add
aad
fdivr
packuswb
sbb
jl
std
ds
dec
xchg
loop
mov
dec
and
push
test
fnstcw
insl
mov
push
adc
lret
pop
loop
sbb
push
ret
das
xlat
jmp
xchg
or
add
push
sti
jbe
lret
push
inc
sbb
sub
mov
stos
and
xor
in
gs
mov
mov
stc
mov
rclb
fisttpll
les
jne
pop
into
mov
imul
sub
jnp
xor
std
adc
cld
cmp
mov
out
jns
lret
sbb
outsb
pushl
out
movsb
fistpll
movsb
and
mov
ds
out
es
nop
shl
mov
je
into
jg
repnz
sti
inc
in
jns
aam
cmp
push
mov
sub
mov
or
das
mov
add
jne
jae
xor
out
nop
dec
lods
fistpl
adc
mov
mov
out
inc
pop
jae
xchg
dec
negb
mov
jno
sub
mov
jp
mov
xor
rclb
push
push
test
mov
repz
daa
lahf
xchg
call
and
ljmp
add
jle
xor
scas
dec
mov
pop
dec
mov
push
into
mov
jb
xor
mov
mov
dec
jp
ljmp
leave
pop
mov
lret
xor
mov
xor
test
lret
setns
stos
add
adc
cli
lock
mov
jne
pushf
sahf
in
push
dec
pop
addr16
sub
mov
insb
lods
fisubl
push
sub
lcall
out
jno
stos
lret
arpl
test
lret
insb
sbb
or
fisubrs
mov
mov
mov
in
jmp
sbb
rorl
ret
ss
inc
ret
aas
pop
add
sub
push
aaa
add
iret
inc
xchg
stc
and
stos
outsb
push
loop
xor
fcompl
int3
xor
jge
cmp
addr16
pop
cmpsl
sbb
insb
jb
in
adc
or
cli
push
movsb
and
ja
test
popf
andl
dec
test
pop
mov
adc
rolb
and
inc
xchg
insl
sar
sbb
mov
push
clc
sub
test
mov
and
testl
xlat
and
fcmove
cmp
fbld
add
ja
sub
fstl
in
pop
inc
xchg
sbb
cltd
maxps
xchg
imul
dec
inc
push
xchg
lods
dec
mov
sahf
add
cmp
daa
xor
push
repz
jmp
jmp
push
mov
scas
or
jmp
xorl
fists
mov
mov
pop
scas
adc
adc
mov
mov
cmp
ljmp
push
sahf
fs
sub
pushf
cmp
xor
negl
cmp
cltd
mov
jnp
das
in
clc
mov
jnp
into
mov
add
aas
pusha
leave
loopne
in
lock
push
and
pop
loope
or
out
aad
inc
fwait
mov
into
iret
push
scas
xchg
mov
push
add
cmp
mov
loop
jbe
push
pop
sahf
daa
mov
dec
sub
add
call
es
jae
outsl
lcall
adc
sub
int
lahf
imul
mov
sub
jns
push
xchg
jmp
in
adc
test
repnz
adc
add
jmp
sub
popf
or
ret
inc
xorb
je
xchg
imul
clc
es
xor
divl
or
and
inc
pushf
inc
lcall
cmpsl
mov
in
jmp
jnp
movsb
into
mov
xchg
pop
iret
or
lret
jmp
aaa
push
call
movsb
sub
mov
pushf
xor
mov
push
into
daa
addr16
dec
stos
lea
aad
or
imul
push
sahf
push
pop
ret
popa
xor
test
sub
sarl
fwait
mov
stos
mov
fwait
vpmacssdqh
sbb
testb
xchg
jns
addl
int3
inc
daa
aas
jno
and
loop
nop
and
xchg
adc
lahf
pop
pusha
out
in
xorb
or
or
pop
push
adc
xchg
sub
push
js
mov
lahf
inc
mov
dec
dec
test
mov
cltd
fnstenv
or
movsl
xchg
je
mov
xchg
pushf
mov
ljmp
or
into
test
add
stc
mov
lea
lahf
pop
dec
shr
lret
lock
push
test
xchg
xor
xchg
push
movl
lret
sti
and
push
jae
std
inc
sbb
lds
sub
movsb
pop
jecxz
jmp
add
bound
and
and
dec
mov
pop
outsb
xchg
dec
shl
loope
fstps
aas
test
aas
mov
push
stc
add
mov
or
setg
aas
adc
rcr
inc
cld
dec
ret
cmpsb
jge
sub
sbb
pop
data16
cmp
mov
ds
aad
sbb
push
in
add
inc
sbb
mov
xlat
inc
pop
ja
cmpsb
pop
xor
xchg
mov
mov
nop
in
add
inc
call
repz
cwtl
sbb
fwait
into
in
or
mov
pop
imul
inc
add
fwait
jg
sub
add
sbbl
jle
test
dec
xor
push
jno
pop
push
xchg
mov
adc
std
inc
loope
out
or
mov
push
idivl
xor
mov
pop
inc
inc
xchg
xchg
or
das
mov
push
mov
dec
xchg
rcrl
les
rcl
fwait
adc
pop
movsb
popa
nop
lea
xchg
and
lods
movsl
inc
sub
notb
leave
add
dec
push
lds
ret
fistl
mov
jo
stos
xchg
lahf
jmp
pusha
cwtl
nop
mov
xchg
jg
xchg
push
cmpsl
push
popf
jp
repnz
subl
arpl
sahf
ljmp
dec
mov
mov
fimuls
insl
cs
push
mov
popa
xor
sub
sbb
add
mov
dec
aaa
push
out
in
or
pusha
stc
pop
push
lret
jp
sahf
sub
sbb
xor
xchg
or
jno
icebp
adc
pop
stc
sub
inc
popf
movsl
cli
add
cli
shrb
data16
push
jp
movsl
jecxz
movsl
aas
stos
mov
adcl
pop
pop
scas
push
icebp
inc
insb
xchg
dec
pop
pop
add
out
gs
pop
movsb
add
shl
xchg
jmp
jae
pop
lahf
and
cmpb
xchg
or
jns
sub
lcall
cmpsl
jne
sbb
mov
jne
mov
gs
xor
mov
adc
mov
cmp
xchg
pop
add
mov
dec
test
xlat
xchg
sub
imul
jmp
jne
hlt
pop
mov
repnz
in
fs
cmp
out
cmpsb
inc
pop
jl
push
cs
movsb
and
dec
mov
movsb
aas
sbb
xchg
dec
loope
mov
xor
pop
outsl
lcall
pop
or
jg
cwtl
sbb
push
lret
data16
add
loope
nop
loop
mov
add
clc
or
or
shr
or
ds
stos
std
push
push
jbe
xchg
bound
pop
stc
ret
les
in
fwait
mov
in
popa
mov
into
and
inc
loope
gs
push
push
mov
enter
sarl
xor
repz
mov
movsl
pop
jbe
or
xor
add
dec
mov
fdivr
flds
jmp
pusha
pop
and
xchg
jl
pop
aas
pop
pusha
ret
sub
dec
xor
arpl
pusha
out
and
xlat
push
ja
repnz
pop
not
mov
lret
dec
pop
stos
aas
ret
fistpl
sub
ss
daa
jmp
dec
inc
add
push
mov
les
popf
in
xchg
push
push
enter
mov
aaa
xor
mov
pop
or
mov
and
mov
fdivrs
ss
les
jnp
cwtl
fdivl
mov
repz
fcompl
test
stos
push
jmp
pop
rcl
xor
test
pop
test
pop
or
inc
fildl
mov
imul
int
ja
inc
loopne
mov
sub
cmp
enter
data16
xor
xor
jecxz
stos
outsl
into
pop
cmp
insb
out
or
flds
stos
shlb
in
enter
ds
xchg
lods
mov
xchg
adc
je
shll
mov
mov
add
mov
je
mov
jmp
cmpl
lock
iret
inc
xchg
or
iret
mov
popf
cli
lods
ss
cmpsb
push
int
notb
adc
bound
out
xchg
in
dec
pusha
sbbl
ss
jnp
mov
push
mov
bound
mov
nop
or
push
pop
mov
cmp
notl
xchg
je
arpl
xchg
and
push
inc
mov
pop
imul
in
jge
dec
jns
inc
shl
and
adc
dec
push
sub
dec
and
int3
repnz
sahf
negl
mov
push
sbb
push
lods
hlt
or
cmpsl
pop
test
sub
sbb
add
xchg
iret
leave
jle
xchg
mov
sbb
lcall
xchg
out
incl
ja
out
xor
mov
cmp
sti
and
leave
bound
inc
hlt
push
cmp
mov
push
ret
pop
clc
cmp
sti
es
sahf
xchg
inc
sub
cmp
push
and
ret
fistpl
sti
push
push
in
jnp
mov
sarb
pop
mov
gs
dec
in
mov
sub
mov
fcmovnb
arpl
mov
scas
add
inc
pusha
sbb
test
fsub
pop
jae
fnsave
sub
fdivrs
aad
adcb
mov
mov
push
fnsave
xorb
insb
add
cmp
popa
stc
lcall
push
arpl
sahf
sbbb
int3
ficomps
sub
sbb
testb
sbb
push
dec
movb
add
xchg
sub
lahf
fisubl
cld
mov
mov
mov
mov
cmp
or
sbb
pushf
adc
ds
push
xchg
fwait
inc
jnp
jb
inc
mov
cmp
cmp
lcall
int
lret
jb
pop
aas
xchg
fnsave
dec
mov
or
outsb
shl
stc
push
dec
xchg
js
pop
xlat
pop
mov
cmp
fnstsw
or
push
movsb
xor
inc
xchg
test
add
and
insb
fwait
or
lahf
in
fidivs
insb
fisubl
ret
jno
int
lods
push
or
les
pop
or
cmp
imul
lret
insb
inc
and
fwait
pop
test
dec
clc
sahf
lock
dec
jge
les
pop
xor
rorb
or
div
pop
jne
dec
nop
sahf
lods
clc
aad
mov
loope
lea
pop
push
sbb
mov
int
inc
lahf
int
sbb
pusha
mov
cmpsb
pop
or
sbbb
hlt
in
adc
sub
add
mov
mov
shlb
mov
mov
xchg
sub
inc
add
mov
sahf
imul
jl
ja
lods
and
addb
popf
pop
xor
pop
or
jae
xorl
sarl
ss
pop
jno
push
loopne
cmp
cmp
and
testb
nop
sahf
lods
sbb
imul
mov
pop
rcr
push
cmp
and
movsl
jbe
pop
xor
mov
les
arpl
and
js
push
push
loop
pop
or
mov
into
xchg
xchg
or
in
ljmp
call
test
aas
pop
push
or
mov
out
push
or
push
inc
mov
flds
inc
inc
lds
je
mov
adc
lods
int3
xchg
lret
adc
aam
pop
xchg
mov
jae
clc
cltd
adc
scas
incb
sub
bound
xchg
test
lahf
loopne
imul
je
push
lret
cmp
add
ljmp
cmp
jnp
pop
pop
sub
out
loopne
xor
mov
dec
aam
add
xor
cltd
jno
adc
sbb
sbb
aas
pop
push
rcrl
into
inc
clc
shll
push
repnz
shlb
pop
adc
jno
inc
mov
xchg
pop
loope
adc
xor
mov
jge
jp
inc
push
push
test
ds
pop
add
flds
mov
sahf
js
mov
daa
jge
cli
outsl
dec
xchg
inc
addr16
aas
mov
inc
mov
and
je
stos
and
scas
fidivs
das
push
adc
divb
dec
cmp
sbb
sub
jecxz
leave
scas
iret
insb
shlb
mov
pop
mov
sbb
mov
mov
scas
in
pop
fdivs
leave
xchg
out
dec
ffreep
adc
inc
sbb
das
ror
stos
icebp
rorb
sub
xchg
jecxz
ror
arpl
push
xchg
loopne
fidivrs
fnstcw
aaa
fistpll
stc
aam
pop
call
adc
leave
ret
aas
push
jecxz
mov
cld
gs
mov
pop
mov
mov
leave
sbb
inc
push
mov
add
aam
sahf
dec
xlat
xchg
mov
mov
pop
sbb
pop
decl
or
adc
testl
hlt
sbb
adc
mov
shrd
out
fidivrs
ret
cltd
lods
sub
loope
hlt
es
sbb
lods
sbb
es
mov
pop
ds
sbb
push
loope
sub
inc
sbb
push
sub
aad
xchg
jl
and
and
nop
scas
addr16
movsl
shrb
push
mov
and
repz
push
notl
xchg
push
cmpsl
movsl
push
mov
test
addr16
cmc
pop
lds
aad
and
notl
xchg
push
cmpsl
movsl
push
mov
test
addr16
cmc
pop
lds
aad
and
notl
xchg
push
cmpsl
movsl
push
mov
xorl
pop
lds
in
adc
add
xor
adc
xchg
mov
addr16
push
dec
in
das
ja
adc
dec
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jge
fistps
imul
xor
cmp
add
add
add
or
pop
add
add
inc
add
add
add
add
aas
add
adc
xchg
add
add
and
incl
pop
add
ljmp
add
add
add
mov
add
add
and
add
mov
add
add
incl
lahf
add
add
dec
add
add
add
add
add
add
in
add
xchg
add
add
movl
mov
sub
xchg
add
popa
add
mov
add
add
add
or
cmp
xchg
add
or
ljmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
flds
and
or
add
add
add
adc
xchg
add
add
add
add
add
push
add
add
pop
add
add
add
add
add
addl
mov
add
add
add
add
add
add
test
add
add
add
add
add
add
cwtl
add
cwtl
add
add
add
add
add
sbb
mov
add
enter
lea
push
add
add
add
add
add
and
flds
add
mov
add
enter
pop
add
add
add
sub
adc
cmp
cmp
cmpsb
add
add
add
add
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
jbe
jb
jo
pop
add
add
add
add
and
enter
push
add
add
add
add
add
jne
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
add
cwtl
add
add
flds
jge
cmp
cltd
add
rolb
add
add
add
add
lods
add
add
add
add
add
add
add
add
xchg
add
add
add
add
in
add
add
add
mov
add
add
add
add
pop
add
add
add
add
add
add
add
roll
xchg
add
add
add
add
add
pop
add
add
add
add
add
or
mov
inc
add
add
add
mov
add
adc
test
add
add
cwtl
add
add
add
add
popf
add
add
add
add
or
popf
add
or
mov
inc
add
add
add
cmp
enter
cmpsb
add
add
add
add
add
scas
xor
test
sub
jb
fisttps
aad
aad
mov
das
movsl
jnp
rcll
ficoml
cli
add
add
or
adc
aad
dec
aaa
pop
cmp
std
sub
and
into
aas
jne
sbb
jnp
add
popa
jp
out
sub
pop
int3
lea
out
xchg
xchg
lds
push
mov
and
call
adc
push
mov
mov
mov
nop
dec
cmp
filds
inc
jb
mulb
push
js
pop
sar
in
add
jnp
ret
loop
fwait
lahf
cmp
in
lds
xchg
aas
sar
cs
inc
push
mov
jno
lods
imul
ret
sub
lret
jecxz
mov
xlat
push
adc
dec
mov
jg
mov
loope
lahf
es
xor
lret
mov
mull
std
inc
mov
scas
jne
push
icebp
jns
pop
mov
cmc
jl
stos
mov
out
lods
mov
imul
push
push
sbb
gs
mov
mov
loope
pushf
pop
lcall
stos
rol
loope
imul
dec
cmp
push
cmpsb
inc
or
rcrl
dec
and
sarb
dec
lret
lahf
gs
jmp
sbb
out
scas
jge
dec
jae
or
negl
push
push
stos
pop
pop
jae
scas
cmp
out
cmp
repnz
fwait
sbb
cltd
sbb
ds
fimuls
inc
mov
and
mov
hlt
ljmp
jp
adc
lds
sti
mov
push
pavgb
jmp
mov
insb
movsb
adc
inc
jne
add
aas
adcl
sbb
xchg
scas
cwtl
pop
xchg
outsb
inc
lods
cmp
mov
or
fidivrs
dec
scas
les
push
ja
mov
into
out
sbb
ljmp
push
das
mov
bnd
push
sbb
xor
jmp
or
cmc
aad
mov
pop
test
mov
mov
fnsave
xchg
lcall
sub
fsubrp
fwait
arpl
dec
and
xchg
xchg
test
jb
sbb
jge
rclb
sub
and
cli
push
xor
lret
push
adc
ret
add
ds
pop
jno
adc
sub
jmp
outsl
stos
dec
iret
push
xchg
jnp
adc
flds
jae
ljmp
leave
out
movsb
dec
xchg
popa
sub
adc
pushl
dec
xor
ja
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
