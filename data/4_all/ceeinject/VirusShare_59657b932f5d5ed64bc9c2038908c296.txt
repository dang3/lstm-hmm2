call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
push
jnp
or
push
dec
bound
add
jg
outsl
shll
sub
mov
push
sub
push
or
add
jnp
dec
xor
stos
sarl
add
mov
pop
lea
jns
imul
inc
es
ljmp
sarb
push
jp
pop
pop
jle
fs
adcb
enter
sub
sbb
imull
sub
clc
popa
jg
in
jle
lock
inc
push
je
lret
cmp
inc
cmp
int3
inc
push
bound
push
mov
dec
xchg
xorb
sub
ret
stos
cs
mov
push
gs
aam
or
jbe
xchg
sub
orl
add
leave
mov
cmc
cs
lcall
pop
cmpsl
mov
testb
xor
cs
hlt
imul
sub
dec
push
mov
jle
lret
mov
cmp
pop
ds
cs
pop
lock
inc
addl
andl
or
dec
sub
fsubrs
call
adc
xor
xor
add
adc
push
and
pop
sbb
call
lahf
clc
in
lods
cmc
xchg
les
push
jge
js
ja
cmp
dec
and
lret
movsb
flds
shrl
arpl
add
jno
jns
adc
dec
xor
stos
sarl
sub
mov
inc
sub
popa
or
add
jnp
dec
xor
stos
sarl
sub
mov
inc
sub
cmc
cs
jb
loop
fs
in
rcrl
or
sbb
add
hlt
daa
mov
and
out
int3
cwtl
mov
mov
push
lods
hlt
jl
jecxz
mov
jp
inc
push
mov
adc
sub
dec
mov
inc
cmpsl
xchg
xchg
inc
xchg
add
stos
pop
mov
lret
sbb
pop
loop
mov
cmp
xor
pop
xchg
sub
sbb
xchg
sub
cmp
or
mov
pop
call
in
arpl
jo
lea
lret
insb
push
sub
insb
je
enter
add
pop
test
push
test
leave
inc
xor
in
stos
fisttpl
stos
loope
mov
push
pop
or
pop
pop
dec
in
pop
cli
add
enter
push
xor
div
pop
and
mov
and
js
xchg
and
cs
fisttpl
inc
movsb
xor
jecxz
fsub
out
and
int3
and
mov
scas
xchg
sbb
daa
or
cld
hlt
mov
out
cmp
scas
out
aaa
mov
mov
inc
setno
xchg
cli
int3
mov
int3
in
push
dec
cltd
mov
cmp
stos
sti
jmp
and
or
adc
lea
imul
mov
stc
or
stos
pop
shll
mov
xor
adc
push
push
out
iret
jge
add
pop
xor
rolb
repz
loope
mov
lret
dec
xchg
add
jo
cmp
xor
ss
xor
sub
cmp
pop
xor
shl
out
mov
xor
fucomp
adc
lea
pop
movsb
hlt
or
hlt
add
cmp
stos
dec
insb
lock
xchg
sbb
inc
sub
mov
call
repnz
mov
aaa
dec
push
inc
out
pop
jo
xor
ret
lock
inc
dec
xor
jo
aas
in
or
aam
mov
and
pop
lds
mov
jg
xchg
mov
dec
push
es
mov
imul
mov
loopne
jmp
cltd
inc
repnz
leave
push
or
dec
mov
out
and
pop
gs
xchg
jb
xchg
adc
sahf
mov
pop
jle
inc
mov
dec
or
sbb
je
xor
pop
and
cmpsl
icebp
loope
dec
rclb
push
out
push
mov
adc
stos
adc
sarl
pop
adc
int3
mov
mov
mov
cs
sbb
jae
jecxz
pop
push
pop
repnz
int
clc
cld
adc
and
and
stc
cmp
push
insl
ret
sub
xlat
fimull
lret
lcall
shrl
mov
repnz
xchg
sub
push
aam
nop
or
hlt
call
fstpl
jle
hlt
into
push
xor
pop
lea
ss
sahf
jae
xchg
and
cmp
jg
sbb
dec
gs
testl
fs
push
les
cmpsl
and
mov
dec
fldl
das
dec
and
sub
push
fs
pop
dec
es
mov
jle
add
cwtl
loop
sbbl
outsl
shll
push
insl
incb
sub
xor
pop
push
mov
xchg
dec
xor
aas
daa
sarb
out
movsl
popf
add
dec
dec
das
jg
or
mov
xor
fldl
and
popa
pop
das
into
sub
xchg
cli
aam
test
sbb
popf
and
je
mov
cwtl
into
pop
cwtl
lret
sub
lret
adc
dec
and
xor
ljmp
in
mov
push
test
inc
or
aam
xorb
push
jo
pop
xor
xor
into
iret
adc
add
push
jb
pop
dec
mov
mov
mov
push
fstpl
clc
cs
xor
xchg
mov
pop
into
xlat
and
std
xorl
call
mov
cld
inc
subl
dec
xchg
or
es
or
mov
std
loop
mov
add
push
xorb
test
push
pusha
sub
and
jb
push
jb
lea
pop
sbb
sub
add
aad
mov
hlt
mov
lods
repnz
loope
xor
aas
or
pop
add
lcall
push
insb
xor
jbe
imul
xor
cmp
xchg
and
mov
iret
imul
ljmp
pop
inc
repnz
addr16
push
sub
es
mov
lock
shll
pop
std
and
notb
in
movsb
mov
mov
daa
mov
pusha
inc
mov
pop
xchg
int3
int3
push
mov
or
in
imul
add
dec
push
fstp
or
loopne
xor
lahf
mov
jno
sbb
jae
rcll
out
cmpb
xchg
mov
icebp
adc
shrb
mov
sbbl
pop
mov
in
mov
push
jecxz,pn
mov
mov
dec
ret
inc
inc
and
cmpsl
xchg
jb
aam
mov
inc
insb
jbe
jo
xchg
lahf
dec
add
ret
and
lods
sbb
repnz
mov
dec
test
xchg
repz
push
pop
aam
inc
in
and
in
test
lds
and
xor
mov
ljmp
pop
clc
jae
mov
sbbb
dec
inc
mov
cmp
mov
test
out
jnp
popf
lock
scas
adc
in
and
mov
mov
mov
mov
pop
test
mov
mov
pop
push
inc
mov
xor
cmp
xor
mov
xchg
and
mov
lret
sahf
xor
cmp
inc
cmp
mov
mov
out
rcll
xchg
mov
dec
mov
fsubs
loope
inc
enter
les
mov
mov
shl
addb
push
int3
rclb
cmpsl
mov
add
and
jmp
pop
sub
mov
mov
idivl
clc
inc
lea
in
or
xchg
mov
xor
cmpl
pusha
mov
push
pop
mov
fs
mov
clc
jle
pop
push
mov
in
mov
mov
dec
and
sahf
adc
jbe
mov
movsl
das
jg
dec
push
psubusb
pop
pop
adc
push
mov
push
pop
loopne
sbb
and
js
dec
test
adc
pop
ljmp
mov
sbb
jbe
jns
outsb
sbb
out
ret
cmp
mov
adc
arpl
dec
sbb
or
push
dec
push
xchg
mov
jnp
and
xchg
push
push
lods
mov
or
insb
mov
push
movsb
gs
dec
cmp
aad
xchg
movsb
lret
arpl
movsl
mov
cmp
pop
fptan
and
movsl
stos
mov
fwait
dec
jb
jae
pop
jmp
loopne
xchg
xchg
sub
mov
sbb
nop
mov
rolb
addl
pop
es
divl
mov
push
sarl
js
add
jnp
pop
mov
bound
les
xor
dec
insb
jmp
jo
pop
pop
movsb
push
and
xor
dec
aaa
mov
xor
aad
inc
sar
inc
scas
mov
loop
inc
cmp
pop
xchg
pop
cmp
out
rcrl
rcll
dec
ljmp
mov
and
jp
pop
jmp
aad
sub
sbb
aas
in
sbb
outsb
jg
adc
hlt
lods
adcl
call
int
dec
ror
jecxz
repz
fsubrs
push
mov
icebp
rorb
inc
mov
push
into
cld
loopne
movsl
mov
arpl
pop
jo
hlt
push
cmp
fsts
xchg
jns
mov
popf
mov
clc
mov
xchg
add
das
pop
mov
adc
sbb
mov
call
xor
pop
xchg
not
fs
dec
pop
jl
ret
ss
push
pop
shlb
xor
inc
das
lret
popa
sbb
inc
inc
dec
dec
mov
lds
xorl
in
lds
das
arpl
xor
fisttpll
pusha
jb
xchg
pop
mov
fcompl
lods
cmpb
rcl
ds
cmpsb
enter
adc
pop
stos
inc
int3
or
data16
jp
les
gs
ret
cmpsl
pop
mov
and
into
enter
stos
arpl
jns
fidivs
shr
mov
pop
popa
imul
movsl
cs
scas
jmp
loopne
mov
add
cld
xchg
jle
add
inc
dec
mulb
push
mov
mov
call
fldz
push
pop
or
add
pop
enter
jae,pt
repnz
mov
test
test
test
mov
sub
pop
stos
shrl
aaa
lret
mov
into
mov
adc
dec
and
push
cmp
add
daa
jno
dec
sbb
adcl
sbb
rclb
mov
mov
clc
fs
or
repnz
dec
mov
pushf
mov
js
lahf
xchg
xchg
inc
add
sub
imul
push
cmp
rol
dec
or
push
cmpsl
lahf
cld
aaa
jmp
xchg
inc
push
sbb
ss
jbe
pop
xchg
push
jne
and
add
cs
test
xor
loope
out
bound
mov
cltd
mov
mov
test
aam
aas
lahf
adc
xor
jp
sahf
and
in
int
cltd
push
pop
fmul
mov
adc
rorb
adc
test
dec
xor
or
imul
or
call
add
pop
pop
jae
dec
fs
xor
add
jno
sub
xchg
jnp
call
mov
fimull
aas
pop
pop
mov
int
stc
sub
cmp
shll
cmp
and
jle
mov
lcall
mov
mov
ja
sub
arpl
stos
das
mov
add
in
cmp
sub
sbbl
add
mov
mov
outsb
decl
mov
fldenv
out
hlt
shr
aaa
pop
xor
sbb
ljmp
in
pushf
inc
xchg
mov
or
and
or
test
daa
mov
push
idivl
sahf
mov
cmp
mov
dec
dec
or
pusha
inc
xchg
loopne
xchg
dec
repz
jbe
mov
or
or
mov
add
aas
flds
adcb
clc
mov
aas
arpl
xor
movsb
mov
push
int3
fnsave
adc
test
jp
push
push
adc
fs
jnp
xor
test
mov
push
movsb
push
xor
inc
mov
loope
xor
mov
cmc
iret
sbb
cmp
stos
sbb
mov
cmp
xlat
inc
inc
fwait
xchg
mov
and
adc
push
js
adc
mov
ret
hlt
push
dec
add
insb
mov
jge
rcrl
xchg
mov
push
push
push
add
mulb
movsb
add
outsl
shl
aad
scas
sub
pop
cmp
dec
cmp
sbb
jae
call
ss
sbbl
jns
adc
or
xlat
push
adc
mov
add
lret
cmp
mov
cmpsb
xchg
cmp
bound
mov
repz
inc
add
je
jg
les
mov
lea
mov
push
enter
and
stos
sbb
lahf
mov
cmpsl
imul
enter
push
fiadds
push
add
mov
mov
push
sahf
cmp
jge
lahf
call
jecxz
push
mov
gs
cs
jle
xchg
insl
pop
into
es
mov
adc
neg
mov
inc
aaa
push
dec
mov
lcall
mov
cmpsb
lds
and
cmpsl
mov
mov
jle
test
mov
cmp
jbe
es
in
shrb
cs
or
xchg
out
ret
stos
adc
shrb
or
push
push
lcall
mov
scas
iret
jne
inc
mov
push
push
jle
sub
dec
mov
dec
xchg
aam
inc
jns
mov
sti
call
jb
mov
and
insl
sbb
push
mull
daa
jbe
pop
push
leave
aaa
les
in
mov
inc
adc
jl
push
rorl
lock
pop
sbb
into
push
xchg
jne
and
iret
cmp
cmpsb
icebp
push
push
jbe
imul
dec
xor
ljmp
pop
adc
adc
in
mov
fcmovbe
decl
fsincos
dec
pusha
sbb
repnz
xor
pop
lds
inc
aaa
push
popf
inc
jnp
pusha
mov
xchg
adc
dec
setae
jl
sbb
fnstcw
clc
jge
repz
outsb
in
inc
incl
daa
add
test
fs
mov
add
mov
and
int
push
xor
push
add
dec
xor
mov
jb
inc
imul
testl
jp
jnp
cmp
sbb
stos
mov
in
bound
jb
sbb
mov
lea
push
mov
std
call
mov
mov
push
xchg
and
outsl
or
fwait
inc
mov
repz
mov
aas
mov
fcmovu
add
fdivrs
dec
or
es
inc
mov
xchg
cltd
xchg
nop
xchg
cmpsl
and
int
cmp
xchg
push
icebp
cltd
add
xchg
jl
aam
xchg
jb
pop
dec
int
jbe
add
cmpsl
sbb
aam
cmp
fimull
mov
popf
imul
arpl
xchg
jmp
fwait
cmpl
addr16
rol
shl
adc
lods
lds
or
jo
inc
scas
in
je
xor
xor
cmp
es
ror
xor
xor
xchg
test
pop
sub
and
sub
inc
dec
adc
mov
add
lcall
inc
pop
mov
lods
or
repnz
fdivl
adc
or
imul
or
pop
out
repnz
bswap
xchg
mov
mov
ja
mov
popf
dec
cltd
faddl
dec
jno
pop
xchg
xor
lods
aaa
aas
repz
popa
test
push
inc
subl
fsubrs
lahf
rcrb
aaa
faddl
popf
cs
adc
loop
xchg
and
jno
jo
lret
out
bound
dec
lds
bound
sbb
ja
int3
mov
push
pop
ja
dec
cmp
arpl
inc
fcoms
outsl
mov
mov
cmp
ja
pop
pop
les
cmp
scas
test
mov
push
sub
mov
adcl
mov
pop
outsl
pushf
sub
loop
and
inc
xchg
cltd
adc
aad
pusha
das
pop
xchg
mov
sub
sbb
test
mov
test
cld
int3
fdivrl
arpl
mov
sti
add
sbb
sbb
hlt
js
xor
int
or
int3
cmp
outsb
mov
imul
mov
or
xchg
imul
mov
cli
mov
mov
dec
or
fwait
pusha
adc
enter
out
js
mov
jecxz
rcr
leave
xor
pop
cmp
call
and
enter
mov
jmp
lret
in
push
jecxz
jp
xchg
mov
gs
adc
neg
push
cli
xor
mov
and
or
pop
test
fidivs
fldl
push
incl
arpl
push
jle
mov
cld
dec
pop
shl
push
dec
pop
ret
stos
jo
fnclex
call
hlt
jno
mov
scas
mov
ds
mov
xor
jmp
sbb
std
int
daa
inc
and
adc
leave
mov
add
in
mov
roll
lahf
pop
loope
jp
mov
out
lds
push
mov
idivb
jb
pusha
and
xor
cld
or
cmp
adc
inc
movlps
jo
mov
js
adc
pop
jge
xchg
pop
cmpsb
inc
cmpsl
fidivrs
clc
mov
ja
xlat
pop
je
outsl
leave
or
lock
cmp
aaa
and
xorl
insb
jge
inc
lcall
lds
imul
xor
int
repnz
insb
mov
pop
fisubrl
push
push
cmp
hlt
int3
ds
xchg
lcall
test
xchg
test
ret
das
cmpb
mov
mov
ja
roll
outsb
insb
dec
fcmovb
xor
push
mov
cmp
ss
imul
sub
mov
jp
mov
pop
adc
ror
decl
lcall
jmp
stos
sahf
cld
stc
jmp
loop
or
xchg
xchg
mov
jo
gs
sarb
xor
add
adc
pop
sub
cli
cmc
aam
cmpsb
shlb
insl
cmp
xor
movsb
jge
repz
movsb
nop
fdiv
das
scas
xor
push
cwtl
repnz
pop
fsubl
mov
test
inc
and
cld
xchg
jno
push
ret
or
sbbl
imul
sbb
adc
jecxz
lock
loop
dec
jge
or
push
lret
pop
mov
leave
sbb
loop
push
dec
mov
fs
je
jg
xor
icebp
push
sub
xchg
jne
jl
sarb
mov
outsl
jb
push
adc
sbb
inc
jbe
mov
andl
leave
loopne
rolb
lds
mov
shrb
cmp
scas
sub
xor
sbb
stos
adc
insb
sbb
pop
ret
andl
loopne
lods
cmpsl
pop
mov
or
jo
pop
or
adc
xchg
and
mov
out
dec
push
imul
ret
mov
int3
mov
sub
xor
jmp
mov
xchg
pop
rcl
adc
push
lock
or
popf
dec
sub
inc
fistpl
les
mov
test
mov
pop
push
data16
dec
jnp
push
les
mov
xor
loope
adc
sub
loop
or
dec
and
stc
aam
js
bound
cmp
mov
xchg
arpl
or
adc
lods
inc
dec
popl
inc
add
lret
cltd
push
fisubrl
pushf
stc
jo
pop
xchg
leave
sahf
dec
adc
jbe
add
shll
shrb
or
xor
push
or
and
les
sub
out
cmp
dec
gs
shll
pusha
jmp
push
mov
push
jne
fldenv
es
mov
insb
xor
lea
icebp
and
int
or
xor
adc
cmp
jb
sahf
testl
cltd
js
fidivrl
test
scas
pop
and
jp
cmp
ja
jge
sbbl
sahf
adc
dec
fldenv
out
mov
push
cltd
jo
inc
in
push
insl
mov
xlat
scas
lods
push
imul
xor
xor
mov
mov
subb
mov
inc
loop
jecxz
inc
cmp
xor
inc
data16
xchg
mov
cli
aas
and
pop
and
js
cmp
mov
jb
mov
cli
nop
xchg
fcomps
xor
andl
mov
inc
xor
adc
jg
in
mov
push
sti
dec
in
pushf
aam
es
out
pusha
sub
stos
cmp
leave
imul
imull
lahf
cmovbe
sbb
xchg
call
jle
adc
mov
and
fidivrs
test
sbb
in
adc
repz
imul
pushf
out
push
jne
cmp
insb
cwtl
jg
mov
ja
fwait
xchg
ror
and
xor
js
lcall
test
cmpsb
sub
jns
aas
fs
shr
or
lods
or
fs
lret
push
iret
mov
xor
mov
adc
in
shrl
and
and
in
push
cmp
pop
xor
jecxz
ret
or
ficompl
pinsrw
lret
into
and
add
adc
adc
sarl
cwtl
sbb
mov
cmp
sub
mov
outsl
mov
add
into
push
nop
test
mulb
sub
mov
push
pop
fadds
push
inc
mov
aad
jns
mov
push
mov
xchg
loopne
adc
sbb
or
test
imul
and
pop
shrl
fwait
sub
mov
inc
sub
popa
or
add
jnp
dec
xor
stos
sarl
sub
mov
inc
das
push
xor
add
adc
dec
xor
stos
sarl
sub
cmpb
iret
fists
jno
add
jnp
lret
mov
ds
adc
icebp
in
notb
dec
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
push
ds
dec
pop
sub
dec
xor
add
hlt
jle
scas
aam
into
mov
and
xchg
out
test
push
fs
push
ds
dec
xor
and
adc
add
hlt
sahf
test
aam
les
incb
push
out
push
xor
and
adc
add
pop
mov
les
out
test
push
cmp
cmp
dec
repz
mov
push
add
push
in
icebp
xorl
das
ljmp
in
xor
fninit
adc
inc
js
ljmp
roll
lock
jbe
mov
pop
cmc
push
dec
call
mov
mov
fs
shlb
out
cwtl
rolb
pop
and
fwait
jle
das
sahf
mov
sub
xor
ficomps
imul
icebp
xchg
adc
mov
xor
add
xchg
sub
add
movsb
ficomps
imul
icebp
loop
fwait
das
xor
mov
xchg
popa
dec
in
sbbl
arpl
cmp
push
je
fs
ds
stos
xor
and
adc
add
hlt
add
fcom
mov
xchg
in
sbb
pop
cmp
xor
pop
jle
mov
fildl
xchg
jnp
pop
push
pop
ss
jl
inc
fwait
arpl
add
mov
xchg
scas
mov
stos
mov
mov
xchg
mov
aaa
dec
cmp
and
adc
add
hlt
sahf
in
aam
into
mov
movsb
out
xchg
incb
push
ds
dec
xor
and
adc
add
hlt
sahf
in
aam
into
mov
movsb
out
xchg
incb
out
add
push
ret
insl
mov
push
inc
cmp
arpl
push
adc
mov
mov
jecxz
icebp
outsb
movsl
inc
cwtl
pop
adc
mov
cmp
dec
mov
mov
and
aas
push
scas
lods
je
out
lods
jae
dec
pop
pushf
mov
pushf
xchg
add
loop
sar
insb
enter
cwtl
test
jg
adc
aam
inc
das
mov
lea
cmp
push
bound
add
jp
sbb
xchg
mov
cli
inc
jge
sahf
mov
hlt
dec
mul
test
add
pop
mov
jecxz
sub
rolb
mov
mov
pop
ret
shll
out
into
mov
orl
cmp
jp
out
lret
in
adc
nop
cld
test
cmp
cmp
push
mov
iret
and
jecxz
xchg
and
add
and
and
in
popa
dec
cmp
cmp
icebp
dec
cmp
shlb
add
inc
test
add
popf
push
xchg
mov
sub
out
push
jecxz
rorl
gs
mov
push
mov
ds
jg
int3
nop
mov
jo
mov
fdiv
xchg
mov
push
mov
jecxz
push
cli
mov
ds
mov
or
addb
rclb
mov
ds
sub
movsl
movsl
movsb
mov
pop
pushf
repnz
push
pop
push
mov
lret
enter
les
sub
jl
ljmp
push
ljmp
dec
aaa
xchg
xor
test
mov
and
aad
repz
inc
pop
mov
inc
cmpsb
popa
negb
pop
mov
divb
psubusb
les
add
lcall
cli
addr16
out
xchg
dec
jge
scas
adc
mov
jge
ss
xor
jns
mov
pop
imul
jle
orl
or
mov
jl
xor
rcrl
out
cmp
insl
dec
mov
mov
mov
adcb
xchg
notl
call
push
xlat
pop
repnz
adc
rclb
fdivl
sbb
shr
jmp
dec
sbb
mov
fucomip
mov
flds
mov
stos
jle
pop
fwait
sahf
mov
loop
mov
ss
sahf
mov
int
inc
adc
bound
out
lret
imull
jbe
jno
xchg
stos
test
fidivs
pop
push
adc
xor
or
movsb
outsb
push
lahf
out
sbb
mov
dec
insb
and
mov
or
lods
mov
and
icebp
adc
jns
pusha
loopne
push
pop
cmpl
mov
jmp
sar
lods
outsb
push
inc
mov
and
push
add
lock
test
inc
adc
pop
sbb
cmp
jae
loope
call
lea
cwtl
mov
dec
movb
inc
jp
in
cmp
test
xchg
int3
cli
inc
pop
push
fcomps
stc
mov
stos
mov
leave
adcl
lods
hlt
out
cmp
in
std
shrl
xchg
lods
and
pop
in
outsl
sub
or
notl
cmpsl
adc
pop
sahf
pop
push
and
rcl
in
imul
sub
mov
jns
or
pop
in
push
call
push
fwait
inc
push
divb
xor
inc
scas
stc
jmp
clc
into
sbb
jb
and
pusha
pop
sahf
jle
and
inc
sbb
out
imul
cmpsl
pop
or
pop
clc
add
sbb
or
into
inc
sar
lahf
push
mov
push
mov
sub
xchg
ljmp
mov
sub
pop
adc
xlat
xor
sbb
out
movsl
sbb
inc
gs
xchg
mov
push
pop
mov
lods
mov
test
push
adc
cmp
cld
pop
call
fs
in
dec
in
movb
aad
enter
jmp
pop
mov
sbb
sbb
mov
pop
adc
pop
push
fisubs
mov
jo
xchg
jmp
daa
scas
sub
ffree
ds
sahf
dec
pop
in
out
lds
mov
cmp
shll
jge
dec
call
inc
in
stc
repnz
pusha
loopne
testl
push
jp
lds
aam
add
insl
mov
sbb
ret
cmp
xchg
into
sti
testl
push
mov
fcom
mov
mov
insl
lcall
insb
cmp
push
and
divl
push
rcl
test
cmp
push
or
jnp
mov
jle
adc
popf
sahf
cmp
mov
jle,pt
pop
testl
add
mov
lret
icebp
test
adc
pop
sti
push
xor
xchg
cmpl
pop
xorb
lcall
movsl
stos
dec
push
lods
adc
pop
call
mov
add
cmpsl
xchg
int3
or
fcmovu
mov
cmp
push
fwait
aaa
and
push
jl
or
aaa
jle
inc
pop
inc
stc
push
mov
cmp
jb
xchg
je
push
add
pop
cld
or
jl,pt
push
shlb
dec
loopne
js
test
fstl
iret
in
xchg
jns
xchg
add
fldt
rcrb
mov
repnz
dec
push
in
movsl
inc
bound
push
lea
movsl
jo
enter
mov
pop
mov
out
arpl
adcb
lcall
hlt
pop
clc
xor
rolb
cwtl
int3
mov
stc
xchg
cmc
cmp
jle
sub
lret
in
or
fldt
sbb
ljmp
pop
pop
lea
add
cmp
add
lds
inc
addr16
subb
ja
sbb
push
xchg
jae
push
push
leave
mov
xor
xchg
pop
sbb
sub
xchg
fcomps
add
pop
mov
mov
scas
lds
int
imul
nop
pop
mov
enter
aaa
mov
jnp
cmp
mov
inc
adc
mov
cmp
pop
mull
inc
ja
cltd
sahf
dec
mov
test
int3
negb
sub
add
mov
xchg
or
insl
call
and
pop
push
jb
out
push
sub
xchg
sbb
mov
fincstp
dec
call
gs
mov
mov
das
pop
cmpsb
fldt
ret
je
addr16
pop
add
or
push
inc
xchg
hlt
mov
xor
jg
mov
or
inc
inc
xchg
fwait
iret
jl
mov
scas
inc
movsl
sub
and
ja
inc
repnz
cmc
dec
push
push
xor
dec
test
mov
xchg
addb
push
mov
jns
adc
jne
sub
sbb
cmpsb
pusha
decl
sar
push
lcall
mov
stc
adc
or
push
cmp
mov
jne
fwait
mov
lret
out
stos
testb
pop
mov
gs
lock
push
sub
insb
xor
rorb
pop
pusha
mov
jnp
xchg
pop
lret
or
push
xchg
inc
popf
sahf
clc
mov
inc
js
hlt
imul
sbb
pop
mov
idivl
inc
mov
sub
decl
pop
nop
mov
test
xor
and
test
nop
sub
nop
sahf
inc
in
ss
sahf
jl
pop
fwait
in
jae
xchg
xor
push
xchg
or
shlb
repz
aam
jo
iret
xor
mov
push
std
or
fwait
cwtl
and
scas
fldcw
pop
rcl
imul
inc
ret
scas
inc
inc
popf
push
sbb
test
push
mov
mov
sbb
adc
or
in
xchg
mov
stos
fwait
imul
in
xor
pop
es
mov
xor
inc
clc
lcall
sarb
mov
jae
scas
cmp
mov
addr16
mov
test
rorl
in
dec
mov
loope
cmp
inc
jge
jle
pop
test
aaa
lea
jle
mov
xor
imul
xchg
push
aam
push
test
fs
mov
adc
xchg
jo
sahf
jns
jle
inc
sbb
cmp
mov
nop
sbbl
dec
repnz
add
or
jo
inc
test
adc
ror
shrb
mov
sbb
addb
mov
mov
or
mov
mov
in
dec
iret
test
movsl
xorl
loope
fwait
xchg
pop
mov
das
cmpsl
sbb
mov
jbe
dec
adc
mov
pop
jg,pn
sbb
cmp
lds
rcl
mov
mov
test
sub
pusha
neg
dec
fs
dec
push
dec
ljmp
es
enter
adc
fisttps
mov
dec
nop
pop
jnp
add
test
or
mov
inc
cmp
dec
out
aaa
jo
loope
lcall
cmp
mov
push
cmpsb
mov
aas
jge
xchg
cmp
xor
sbbb
push
xchg
mov
add
sbb
or
add
xchg
nop
and
or
pusha
popl
repnz
lods
lcall
mov
out
icebp
shrl
imul
mov
mov
ljmp
sbb
insb
mov
cmp
dec
rolb
dec
mov
add
mov
mov
adc
mov
sbb
bound
push
push
jno
push
mov
imul
inc
in
xor
adc
dec
cli
cmp
iret
add
mov
test
cmpsl
sub
clc
les
sub
aas
outsl
push
inc
jg
push
int
test
sarb
das
shrb
add
popa
or
decl
jmp
sbb
push
sub
fistpll
inc
xchg
mov
adc
sub
push
mov
xchg
fidivrs
mov
sbb
sbb
push
sbbl
push
pop
insb
hlt
or
pusha
out
push
mov
aas
lods
mov
xchg
add
or
sbb
mov
fsub
shll
movsl
mov
orb
in
sar
outsl
cmpb
add
and
leave
push
loope
mov
cmp
mov
push
or
stos
fwait
insl
mov
mov
rep
sbb
mov
or
insl
mov
jns
ret
cltd
push
imul
neg
repz
gs
jle
repnz
mov
inc
test
iret
iret
push
pop
pop
scas
mov
push
mov
loopne
es
jecxz
jg
jge
and
les
adc
dec
mov
je
out
imul
xchg
cmpsb
pop
xor
adc
into
push
or
sbb
je
pop
lret
xorb
xchg
test
ss
add
lahf
rclb
xchg
mov
shl
cmp
es
mov
enter
xchg
add
decl
mov
add
pop
mov
mov
lods
push
mov
sbb
adc
or
popa
in
dec
sub
or
addr16
jbe
push
jae
sbb
mov
popa
aas
in
push
or
xchg
in
inc
mov
jns
test
dec
dec
mov
dec
ror
imul
icebp
mov
jmp
xor
int
lcall
push
jmp
mov
and
xlat
and
mov
and
mov
aaa
adc
lcall
push
dec
scas
jo
mov
ret
mov
dec
fsubl
ljmp
sbb
pop
ret
and
faddp
dec
push
cmp
mov
aaa
jmp
pusha
and
xor
ds
data16
inc
jns
push
lock
fs
pop
dec
nop
jo
subb
int3
pusha
push
xor
mov
out
and
pop
adc
jae
push
bound
pop
das
push
js
adc
sub
push
cmpsb
dec
xchg
mov
aaa
nop
pop
jo
mov
push
pop
xchg
dec
cmp
cltd
lcall
pusha
adc
shlb
sbb
add
sbb
les
sbb
movsb
ds
dec
inc
movsl
xlat
ljmp
mov
out
xchg
fmul
out
xchg
mov
in
jp
cli
push
inc
hlt
dec
je
fwait
mov
inc
ffreep
cld
call
icebp
call
xor
ja
mov
xorb
int
out
push
xor
and
sahf
pushf
fs
out
xlat
dec
js
push
stos
dec
mov
mov
ds
cmp
dec
or
test
and
ljmp
loop
aas
and
cmp
push
add
popf
xor
lret
pop
push
cmp
xchg
dec
push
cwtl
aas
ds
mov
and
fidivrl
iret
js
imul
dec
popf
dec
mov
push
movsb
cs
aad
jp
inc
push
dec
dec
and
jbe
insl
bsr
cld
push
dec
addr16
push
pop
pop
jnp
cltd
popa
cwtl
lods
jp
outsb
mov
sub
jge
sbb
into
or
fimuls
xchg
loop
out
mov
scas
repz
add
lret
lcall
jmp
adc
enter
sub
and
ficoml
out
add
dec
push
jbe
das
mov
pop
sbb
jmp
lea
push
pop
ljmp
sbbb
add
and
pusha
cmpsb
and
dec
fadds
cltd
sbb
cwtl
xchg
mov
jae
xchg
xlat
scas
lcall
mov
xor
pushf
xor
dec
ret
inc
ss
inc
shrl
dec
ret
notb
cltd
xchg
cmp
push
push
xor
leave
or
push
cli
in
mov
test
rcrl
xor
add
pusha
lret
test
sbbb
mov
clc
or
jge
call
mov
ret
xchg
cltd
clc
jns
and
sti
jl
or
inc
push
add
popf
je
or
sbb
mov
ds
int
and
test
out
stos
pop
out
nop
push
xor
jne
push
das
and
test
xchg
or
ss
lahf
movsl
xlat
push
sbb
loope
push
aam
outsb
push
or
outsb
and
dec
pop
cltd
test
or
push
dec
mov
push
iret
out
or
adc
push
push
out
push
mov
das
sbb
dec
mov
jo
mov
int
iret
cmpsb
out
cmp
andb
or
sbb
jg
mov
adc
mov
jg
fs
ds
push
repz
xchg
cs
sub
adc
mov
inc
mov
jo
frstor
mov
pusha
fidivs
fsub
and
mov
add
int
fisttpll
and
cli
shl
xor
xchg
cmp
or
repz
out
jns
dec
ja
hlt
pop
cmc
iret
ljmp
lods
mov
movsl
aas
xchg
or
insb
repnz
mov
repz
inc
pop
iret
mov
adc
dec
cltd
jno
arpl
inc
add
adc
add
xchg
cs
inc
rcrb
lahf
sbb
xchg
xchg
mov
xorl
cmpsl
sbb
dec
adc
cmp
and
add
pop
push
ja
aad
push
in
pop
mov
test
cmp
test
out
test
aas
fistpl
and
int
iret
push
push
ja
addr16
sub
adc
movsl
les
lds
icebp
fcmovnbe
bnd
scas
stos
in
call
and
push
into
je
mov
arpl
adcl
clc
insb
stos
jge
sbb
dec
movsb
int3
and
pop
or
jae
adc
dec
jle
js
xor
or
ljmp
test
inc
out
pop
dec
les
fsubs
push
mov
xchg
jne
push
int3
and
lods
push
mov
mov
push
adc
pop
xchg
cli
loope
shl
js
and
pop
xchg
scas
nop
je
or
adc
cmp
inc
xor
mov
or
dec
push
out
mov
xor
fwait
ds
push
imul
sub
push
jae
mov
or
mov
mov
xchg
inc
sahf
out
pop
cmp
mov
dec
out
dec
mov
and
or
pop
rcrb
loop
xchg
inc
fisubrs
fstpt
icebp
and
jmp
pop
repnz
pop
stc
mov
out
adcl
or
mov
loop
or
sahf
addb
pop
cmc
push
mov
xchg
xchg
mov
sub
adcl
jecxz
iret
jge
push
adc
cmpb
push
adc
cmp
push
add
jl
adc
in
in
mov
ffreep
jno
add
mov
in
cmpl
dec
test
out
sub
inc
lds
push
inc
pop
mov
insl
mov
pop
pop
push
ljmp
mov
adc
roll
adc
fimull
or
xor
in
sub
mov
cmovno
in
popf
test
icebp
stos
int3
mov
fldcw
fidivrs
sub
or
call
loopne
cmc
call
mov
sahf
loope
insb
adc
popf
inc
loope
fdivrp
sub
or
jmp
dec
int3
dec
out
xchg
vmovapd
inc
sub
pop
mov
sti
pop
cmp
test
pop
ss
ja
and
insl
xchg
int
inc
sahf
jmp
scas
repnz
jg
in
add
jb
movsl
push
push
clc
mov
jne
xor
bound
fisubrs
cwtl
jp
cld
push
faddl
mov
mov
inc
aas
xlat
inc
jb
xchg
mov
movsb
and
xchg
mov
aam
dec
fisubrl
mov
lcall
pop
push
sbb
inc
mov
aas
push
ret
xchg
faddl
adc
pop
iret
outsb
cmp
ljmp
lods
pop
sub
mov
jl
outsb
and
jo
add
das
jecxz
add
test
lahf
sbb
testl
stc
shlb
push
das
shlb
lahf
or
and
stos
inc
sbb
dec
mov
je
imul
inc
dec
adc
mov
sub
xchg
daa
lock
mov
pop
mov
ret
sbb
cmp
mov
es
lahf
push
cltd
adcb
out
lds
and
mov
ret
shlb
xchg
sar
xlat
pop
push
pop
bound
fidivrl
cli
aaa
xchg
sub
imul
pop
iret
int
or
repz
insl
repnz
iret
or
les
lods
call
aas
xor
cli
push
push
and
add
mov
pop
push
fwait
in
cmp
push
xchg
xor
or
divb
movsb
and
inc
xchg
adcb
cmp
xorl
or
test
sbb
jge
dec
mov
fdivrl
insl
mov
popa
push
in
fs
cmovg
jo
fdivr
inc
push
dec
mov
in
add
push
xor
mov
mov
mov
xor
mov
push
jmp
in
or
add
scas
addb
fisubrl
xor
pusha
sub
out
mov
mov
inc
into
push
mov
push
ficomps
js
fildll
or
jg
ficomps
sbb
test
ret
repz
imul
add
scas
in
sbb
push
fs
push
dec
xor
jns
add
fwait
pop
js
int
je
adc
js
push
je
mov
push
sbb
pop
jecxz
push
xchg
push
sbb
pop
into
pop
xchg
adc
push
lock
mov
negb
icebp
jae
out
jb
insb
xor
push
jno
cmp
and
movsb
lock
or
mov
jnp
call
data16
cmpsl
cmp
fisubrl
cmp
pushl
mov
es
iret
mov
pop
jbe
jo
cwtl
vhsubps
std
mov
subps
lods
mov
lods
or
and
scas
nop
rcll
mov
push
jg
and
mov
mov
scas
jp
mov
call
add
lret
push
sub
pop
hlt
jmp
mov
mov
lods
inc
shrl
cmc
xchg
pop
mov
mov
sti
push
cmp
stos
cwtl
push
rorb
orl
xchg
stos
push
lret
mov
jecxz
ror
nop
aas
jp
push
fbstp
mov
jne
int
mov
mov
stos
adc
pop
jg
fwait
and
jl
pop
in
mov
int3
jae
jnp
add
add
lahf
or
imul
outsb
adc
add
hlt
sahf
in
aam
into
mov
movsb
out
xchg
incb
push
ds
dec
xor
and
adc
add
hlt
sahf
in
aam
into
mov
movsb
out
xchg
incb
aam
inc
fidivs
movsb
outsb
adc
add
je
in
aam
into
mov
movsb
out
xchg
push
test
je
fs
push
inc
dec
xor
and
adc
add
hlt
popa
dec
add
mov
pop
adc
jnp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
lods
movsl
pushf
xchg
mov
mov
jnp
and
jge
insl
gs
push
dec
inc
mov
xchg
mov
int3
mov
jge
or
jl
insb
gs
push
dec
inc
mov
xchg
mov
int3
lds
imul
and
int3
lods
in
sar
faddl
daa
pop
decl
das
push
adc
pop
jge
xor
jne
faddp
sbb
out
sub
std
cmc
jecxz
push
fnstsw
fiaddl
andl
push
mov
cmp
in
cmp
gs
es
test
dec
repz
ret
gs
or
jnp
lods
cmpl
int3
cmp
ljmp
jne
fwait
dec
pop
inc
inc
inc
rcll
lds
insb
fdivrl
pop
imul
fsts
mov
push
test
lds
and
and
or
imul
insb
ss
push
dec
push
jecxz
lods
movsl
pushf
xchg
mov
int3
lds
or
jl
insb
gs
push
dec
sub
mov
in
xchg
ret
nop
mov
dec
sahf
and
jo
jno
and
xor
or
shr
shr
les
fdivrl
pop
fs
imul
add
lret
in
jmp
lods
loopne
fucomi
in
aad
lds
or
jl
insb
gs
push
dec
inc
mov
xchg
mov
int3
lds
or
jl
insb
gs
push
dec
inc
mov
js
inc
popl
cmp
lahf
push
push
pusha
jge
cmp
inc
out
call
nopl
outsb
pop
cmp
in
je
loop
inc
cmp
ret
jle
test
adc
add
jne
lea
shrl
xor
and
cmp
push
cmp
ljmp
push
mov
push
bound
jb
lea
test
and
js
mov
fidivl
imul
mov
into
pop
call
out
loope
mov
gs
push
dec
lods
aas
cltd
dec
add
push
and
inc
lds
stos
xor
cwtl
mov
fsubrs
mov
dec
mov
jl
and
sbb
daa
adc
rcl
fnstsw
sub
pop
addr16
jecxz
sti
divl
jge
nop
roll
or
in
and
jg
mov
in
xchg
pop
into
lret
pop
jg
fdiv
jno
lret
sarb
test
jmp
loop
les
add
in
ds
hlt
pop
dec
pop
mov
add
mov
inc
xor
rcrb
mov
mov
fldcw
insb
sbb
cmp
cmp
popa
adc
dec
ljmp
sbb
xor
arpl
pop
mov
mov
inc
cmp
in
jne
nop
xlat
and
out
loop
es
jecxz
sbbb
jmp
imul
jmp
addl
jmp
pop
sbbb
pop
arpl
int3
mov
loope
daa
mov
inc
mov
inc
inc
adcl
adc
sub
lods
jae
cmpb
fdivrp
jp
pop
call
fsubr
xchg
mov
stos
sbb
je
mov
xchg
add
data16
pop
mov
mov
fcoms
xchg
leave
jecxz
hlt
fistpll
fldenv
imul
lods
dec
mov
pop
fcmovnu
icebp
push
int3
mov
subl
cmp
scas
inc
push
inc
mov
jp
lock
scas
mov
sub
mov
in
sub
aaa
fstps
xlat
repz
mov
bound
mov
ja
mov
jbe
inc
xorb
fsubr
xlat
mov
test
rclb
adc
stos
pop
call
or
loope
lret
out
pop
xor
mov
in
add
push
in
cmp
sbb
pop
mov
hlt
sbb
mov
imul
pop
sarl
cmpsl
fidivrl
loop
add
out
fs
test
stc
repnz
dec
imul
stos
or
sbb
push
loopne
mov
out
or
jbe
inc
pop
mov
daa
sub
popf
addl
ret
pop
add
jmp
call
push
fdivl
in
pop
xor
adc
mov
pop
adc
psubq
adc
pushf
add
aam
sbb
lret
enter
clc
das
les
sub
cltd
imul
and
sahf
mov
sbb
loopne
mov
mov
mov
hlt
gs
push
aam
sbb
dec
jb
and
or
xor
adc
inc
push
in
add
shr
out
in
jmp
filds
jno
xor
gs
in
mov
jmp
xor
mov
add
sti
insb
popa
mov
cmpsl
daa
push
fadd
scas
xor
xchg
int3
mov
fcoms
enter
mov
addr16
fidivrs
in
ret
movsb
xor
mov
lahf
test
int3
push
lret
insl
cltd
std
in
or
cmp
jnp
fsubs
jmp
xchg
xor
xor
rcrl
daa
jmp
pop
sahf
stos
dec
adc
pop
iret
jbe
lods
int3
fwait
xor
xor
sbb
xor
pop
mov
cwtl
cmc
sub
or
sbb
mov
mov
pushf
stc
adc
push
mov
adc
addb
fistps
mov
or
clc
sti
sub
xor
pop
push
mov
shl
jnp
mov
xor
and
push
jle
push
cwtl
dec
int
and
and
pop
and
popf
push
push
cmp
cld
sub
jns
je
jg
roll
movsb
cmp
in
repz
test
ret
dec
mov
loope
add
loopne
shll
pop
bound
jecxz
pop
ret
xchg
inc
out
dec
sub
fcmove
pushf
jmp
pop
inc
out
mov
inc
xlat
xor
fnsave
push
popa
mov
aam
jae
rorl
enter
xchg
push
sbb
dec
in
int3
mov
cmpsb
ret
sbb
mov
cmpsb
and
decl
js
sbb
js
outsb
mov
cmp
push
imul
mov
lds
push
mov
mov
push
inc
cmp
sub
popa
pop
xor
test
pop
adc
jb
and
addr16
mov
push
pop
in
mov
loope
lret
sti
movsl
jmp
aas
addb
cmpsl
mov
lods
loopne
mov
out
xor
xor
movb
lcall
imul
scas
mov
adc
push
lcall
xchg
inc
sbb
mov
sub
insb
sbb
or
jmp
xor
fisttpl
or
pushf
jmp
dec
xlat
inc
pop
shrl
add
sti
xchg
nop
shlb
insl
and
add
sub
and
and
clc
sbb
lock
inc
push
fstps
jmp
movsb
sahf
add
ret
les
popa
nop
mov
movb
push
popl
rcr
mov
mov
icebp
jmp
cmp
inc
repz
mov
pop
and
pop
icebp
pop
cmpsb
sub
lahf
hlt
inc
add
mov
xor
push
fildl
adc
or
sub
inc
sub
jecxz
xchg
in
test
inc
cltd
scas
lds
fcom
std
and
pop
push
add
mov
xchg
mov
fmul
pop
pop
dec
das
adc
negl
and
pop
pop
or
adc
xchg
out
lahf
das
mov
jae
rcll
add
ss
mov
add
arpl
sti
push
mov
inc
mov
cmp
dec
out
mov
xchg
sub
insb
mov
movsl
pop
mull
ret
mov
inc
imul
mov
pop
jne
mov
pop
inc
add
mov
rorb
bound
cmp
mov
je
sub
mov
and
sbb
js
push
shrl
xchg
lds
stos
push
out
pushf
js
add
pop
inc
pop
dec
xor
or
mov
adc
xor
pop
lcall
loop
push
xchg
or
mov
clc
mov
push
add
fs
add
fidivrl
mov
adc
adc
cmp
es
jecxz
sbb
add
not
jle
je
cmp
mov
in
aaa
cmpsl
and
dec
enter
dec
cmc
and
cld
push
xor
les
jge
jp
sbb
add
mov
add
mov
data16
pop
lods
and
mov
or
pop
cmp
pop
pop
cwtl
cmc
sbb
mov
add
daa
gs
mov
dec
sbb
movsb
mov
pushf
testb
fisubrs
mov
add
mov
or
jge
mov
xchg
and
mov
mov
call
or
stos
mov
sbb
test
out
dec
or
jg
fstl
adc
xchg
js
lods
inc
lock
or
xor
ds
repnz
sbb
icebp
mov
in
xor
out
jl
sbb
into
xor
mov
fldl
dec
fisttpl
fwait
clc
jb
xchg
es
or
push
lock
dec
fidivrs
shrl
nop
xchg
lcall
mov
jae
pop
push
loopne
data16
test
bound
int
scas
and
adc
xlat
sub
adc
inc
mov
out
out
imul
loopne,pn
pop
adc
sub
lret
adcb
adc
sub
fisubs
add
daa
orl
shl
popf
lret
lods
xchg
leave
xchg
sub
outsl
pusha
dec
imul
insl
ffree
addr16
in
inc
lods
sarl
sti
pop
ret
jle
scas
test
sub
ret
clc
jl
rclb
mov
dec
fidivrl
and
mov
rclb
sbb
adc
fs
sbb
cmpsb
fldcw
je
in
push
jbe
in
or
mov
push
pop
popa
xchg
je
mov
jo
shrl
push
xor
addr16
mov
sahf
cmp
mov
ja
movsl
mov
xchg
jge
sbb
add
jp
adc
adc
xchg
sub
stos
pushf
mov
xor
push
ja
in
dec
ret
cmpsl
mov
outsb
mov
dec
sub
mov
lds
orl
push
add
outsb
xchg
xchg
stos
add
ret
loopne
jecxz
ror
imul
pop
in
dec
loopne
mov
jmp
sub
mov
cmp
fldt
xchg
bound
stos
js
pop
xchg
in
mov
and
jbe
js
jp
sub
dec
cmpsl
cmc
jbe
adc
xorl
shr
rcl
sbb
insb
and
mov
orb
sbb
jne
sub
scas
int3
lock
dec
call
mov
data16
dec
sbbl
add
mov
pushf
test
pop
or
xchg
xchg
scas
dec
repz
loope
xor
add
sub
mov
pop
ret
ret
adc
pop
outsb
mov
push
pop
mov
int3
lahf
ja
flds
pop
cld
scas
dec
push
push
dec
outsl
movsl
and
dec
add
popf
jno
lds
int
enter
jge
jle
sti
sahf
je
pop
or
flds
fisubs
dec
cmp
popa
adc
and
jne
sub
jbe
cs
mov
stc
or
mov
fsubrl
xor
push
xor
dec
mov
test
or
mov
cmp
nop
sbb
inc
or
push
push
je
add
inc
jecxz
pop
xchg
pop
inc
inc
loope
pop
pop
jl
adc
mov
jmp
jo
inc
pop
popf
inc
or
jnp
testb
shll
out
mov
cmc
out
outsl
aad
test
je
sbb
sub
mov
shr
mov
and
and
dec
pop
mov
ret
mov
loope
rol
xchg
lock
or
mov
adc
adc
inc
or
xor
fisttpl
push
inc
bound
out
dec
lea
sbb
xchg
cmpb
lret
sbb
out
pop
loopne
dec
xchg
cmp
adc
adc
test
idivl
orb
dec
jecxz
dec
fs
xchg
pop
fildll
lods
pop
mov
les
movsb
arpl
push
push
les
or
arpl
fnstsw
int3
es
and
jmp
mov
lods
cmpl
mov
add
cmpl
sub
sar
adc
adc
push
xchg
inc
cli
mov
mov
jb
setge
aam
imul
jmp
cmp
in
add
sbb
lods
inc
ljmp
pop
mov
push
sub
aas
xchg
xor
pop
arpl
mov
jns
in
lock
or
outsb
or
repz
mov
outsb
pop
hlt
cli
imul
cmp
je
jg
add
add
faddl
push
inc
lahf
dec
pushf
test
xor
sbb
xchg
mov
push
lcall
insb
mov
cmpsb
fnstenv
xchg
dec
cmp
repz
popa
cmp
dec
fldcw
enter
hlt
test
push
push
xchg
push
cld
add
lods
outsb
push
sub
and
cmp
jecxz
and
dec
mov
ss
sbb
mov
ret
out
daa
mov
pushf
xchg
sbb
dec
test
or
pop
add
add
xor
cltd
arpl
adc
or
add
add
pushf
ss
xchg
ret
aam
std
or
adc
test
out
cmp
jl
xor
xor
test
cs
xlat
call
test
add
cmp
cwtl
mov
push
push
ds
jnp
mov
pop
daa
pop
add
adc
jle
adc
mov
rol
xor
inc
push
pop
mov
mov
movsb
cwtl
mov
adc
mov
inc
add
mov
mov
lock
push
mov
mov
xchg
aam
pop
pop
leave
sbb
insb
or
jbe
js
repz
cmc
jno
push
xchg
and
fcomps
sarb
les
xlat
xor
add
stos
in
lds
je
stc
adc
sub
mov
pop
mov
pop
fstpt
jb
push
mov
jbe
or
repz
xchg
pushl
stc
adc
psraw
fucomip
aam
mov
cmc
insl
cmp
stos
mov
into
jo
jbe
push
insl
lock
push
dec
mov
dec
cmp
pop
push
xchg
stos
stos
add
repz
int3
addr16
js
lea
insl
js
xchg
dec
in
and
je
xor
not
lea
jne
rcrb
pop
add
and
insl
lcall
fcoms
sbb
adc
out
push
dec
inc
mov
dec
ret
loop
filds
pop
push
jecxz
shr
pop
mov
scas
adc
roll
jae
lea
sub
mov
daa
inc
xchg
aaa
adc
push
cmp
aad
cmp
roll
jp
lahf
das
inc
por
or
aam
adc
push
stos
ficoml
add
pop
stc
out
dec
jo
and
sub
xor
mov
add
sbb
mov
add
shr
int
hlt
fdivrs
push
jecxz
fldpi
lcall
jecxz
cld
mov
call
daa
mov
in
pop
shll
inc
ja
mov
mov
jne
jmp
jg
test
and
in
arpl
mov
test
loope
adcb
stos
pop
stc
icebp
inc
out
dec
jl
push
outsl
cmp
js
imul
gs
inc
dec
sahf
cwtl
sub
push
dec
ds
es
add
into
mov
addr16
jb
and
mov
cmpsb
or
xor
orl
cmp
jns
xor
ror
jmp
mov
hlt
sarb
dec
jnp
mov
out
sub
jo
mov
test
push
pushfw
mov
cmp
into
aam
insb
lock
push
mov
pop
pusha
cmp
bound
fwait
mov
stos
xor
incw
lods
mull
mov
push
pop
lods
xlat
out
dec
test
or
adc
mov
add
xchg
push
ja
mov
and
fidivrl
mov
mov
inc
arpl
mov
xor
aas
popf
dec
inc
unpckhps
fnstsw
xchg
xor
mov
dec
sbbb
cmpb
insl
add
test
lcall
jno
adc
clc
pop
fnstsw
fs
add
or
call
std
ds
lds
pusha
ret
mov
aaa
in
push
xor
dec
pop
lahf
call
out
or
inc
loop
test
mov
lds
add
shlb
rcrb
xchg
repnz
sbb
and
das
inc
pop
ret
cmpsl
add
lods
lret
pop
jle
cmp
mov
dec
and
push
sbb
xchg
xor
mov
std
cmpsl
sti
sbb
xor
imull
lahf
fsubr
adc
cmc
inc
inc
pop
cmpb
jae
or
xchg
jecxz
dec
out
loop
xor
add
mov
pop
cli
lahf
pushl
out
inc
imul
xor
repz
dec
dec
rorl
xor
aaa
push
xchg
lahf
cmpl
in
and
add
sbbb
js
push
test
clc
call
cmp
ss
dec
stos
adc
movsw
lods
or
int3
fdivp
inc
dec
and
adcb
cli
out
or
loop
dec
jmp
pop
mov
xchg
adcb
dec
lret
sbb
out
jb
fstl
cmp
add
sti
bound
sbb
pop
sti
mov
loope
mov
ss
mov
sbbb
jp
push
dec
jns
lock
xchg
push
test
mov
addr16
les
jecxz
pop
mov
cmp
xor
loopne
mov
inc
adc
inc
jge
add
test
out
mov
mov
out
adc
sar
es
loop
jecxz
ret
out
mov
xor
and
add
outsb
lock
rorb
test
stos
pop
nop
cs
lock
push
adc
cwtl
dec
mov
test
inc
sti
dec
roll
push
push
inc
ljmp
push
out
int3
and
sbb
movsb
jecxz
push
mov
movsb
xlat
lock
ja
fwait
and
outsb
jbe
loop
scas
push
das
aas
inc
insl
cltd
cld
sub
inc
out
call
and
jb
test
out
xchg
or
push
xor
pop
and
aam
add
sbb
add
movl
rcr
adc
out
or
mov
and
icebp
jp
pop
mov
sahf
add
roll
inc
lret
lods
dec
push
fcmovb
out
rclb
or
cmp
mov
jp
inc
mov
or
xchg
movl
push
jge
das
negl
ja
inc
cmp
dec
xor
dec
add
jno
pop
inc
mov
int3
andb
adc
push
lret
xchg
js
pop
mov
xor
dec
ret
or
les
mov
adc
sub
lahf
sbb
push
add
mov
in
jl
cwtl
pop
push
iret
ret
push
sub
mov
mov
roll
push
push
pop
xor
mov
imulb
pop
or
xor
xchg
sarb
lods
add
test
mov
sub
fs
mov
mov
jge
pop
scas
js
xchg
jle
stos
dec
inc
insl
and
pop
mov
sti
mov
inc
cmc
add
xchg
loope
sbb
js
mov
int3
mov
mov
cltd
aas
xor
sbb
cmp
in
cmp
gs
dec
sub
sub
cmpsl
inc
and
popf
out
pop
mov
cs
das
inc
mov
add
out
jl
adc
push
arpl
mov
push
je
rclb
es
setbe
push
stos
and
bound
sbb
mov
cld
dec
add
jb
out
lret
mov
xchg
cmp
insl
movsb
jbe
cmp
inc
add
lret
cmp
push
lods
lahf
mov
cld
and
jmp
data16
out
loope
jne
mull
add
cmp
dec
mov
aam
adc
imul
lahf
and
mov
push
or
scas
fistps
faddp
insl
notl
repnz
mov
inc
in
mov
in
jecxz
sub
popf
and
in
push
jl
test
or
add
push
stc
push
imull
lock
jmp
and
std
and
pop
jg
mov
adc
ret
xchg
inc
imul
dec
arpl
je
call
dec
shll
mov
clc
sbb
test
mov
mov
jb
mov
ss
imul
stos
xor
cmp
push
dec
outsl
aas
sar
mov
and
je
sbb
leave
push
les
popf
mov
stos
aam
cwtl
or
xor
lea
push
cmpsb
xchg
movd
fcmovbe
jno
cs
push
xchg
xor
ret
dec
or
aaa
xchg
push
ja
pop
cld
sti
sub
stc
hlt
add
push
ljmp
aad
int3
pop
imul
mov
add
push
and
push
xor
mov
xchg
mov
stos
jo
addl
xchg
pop
xchg
xorb
imul
xchg
push
pushf
out
cmp
stos
or
repz
fs
sbb
and
clc
push
push
mov
add
adc
pop
stos
dec
inc
xor
aas
fnstenv
dec
xchg
leave
outsb
mov
movsl
scas
dec
arpl
inc
jae
xor
jp
pushf
sbb
dec
jo
ror
cltd
pushf
ret
jg
jl
and
push
das
outsb
add
data16
in
ljmp
mov
jae
or
dec
pop
popf
sub
ja
inc
ret
test
xor
sti
pop
andl
mov
pusha
sbb
call
int3
out
jne
dec
cld
xchg
push
inc
out
ficomps
mov
sbb
in
movsl
and
in
in
aad
lds
or
jl
insb
gs
push
dec
inc
mov
xchg
mov
int3
lds
or
jl
insb
gs
push
dec
inc
mov
xchg
mov
int3
lds
or
jl
insb
gs
push
dec
inc
mov
xchg
mov
int3
lds
or
or
in
mov
sub
cmp
or
sbb
insl
pop
inc
and
rclb
ret
mov
mov
pushf
xchg
in
cmp
push
sub
cmp
or
sbb
insb
add
and
shrl
pushf
xchg
mov
fcoml
inc
cmp
or
sbb
insb
add
and
loop
sub
repnz
and
pop
or
push
xchg
fimull
pop
sbb
ljmp
or
mov
pushfw
xchg
adc
int
leave
insl
mov
push
mov
cld
andl
sbb
sub
inc
and
mov
xchg
jle
outsl
lods
aam
loope
arpl
inc
mov
sub
insl
jl
inc
and
dec
push
sbb
cld
sbbl
in
pushf
adc
out
xchg
int
stos
pop
rclb
test
sarl
cmp
jne
sub
sahf
adc
and
aad
lods
test
jne
shrb
sub
cmp
or
sbb
insb
add
and
sarl
cmp
xor
and
dec
daa
pop
je
outsb
or
movsl
sub
fbld
aam
sarl
adc
je
dec
cmp
jb
leave
cmpsb
into
mov
loope
mov
push
test
inc
outsl
aaa
imul
xor
shrl
pushf
xchg
in
cmp
push
sub
cmp
or
sbb
insb
add
and
sarl
cmp
push
sub
adc
arpl
fcmovnb
cltd
repz
mov
mov
mov
ja
ds
lock
add
sarl
inc
jecxz
into
dec
xor
gs
out
fld1
subl
inc
aad
inc
mov
std
dec
jl
mov
dec
movsl
mov
mov
adc
popf
test
je
iret
xchg
pop
inc
imul
les
mov
mov
add
push
andb
mov
js
rorl
flds
xchg
adc
nop
out
pop
sub
fsubl
adc
mov
sbb
andl
lahf
fs
fwait
gs
cltd
gs
sbb
les
sbb
stos
out
cmpl
out
das
push
ljmp
loop
aam
add
out
mov
nop
adc
inc
sub
arpl
outsl
call
int
xchg
pop
cmpsb
fdivp
stos
fcompl
popf
sbb
or
idiv
push
test
mov
sub
pop
or
jno
aas
adc
test
mov
faddl
stos
iret
nop
addr16
or
scas
sub
fcoml
aam
jbe
add
dec
div
fildll
mov
dec
xor
in
push
fsts
push
imul
add
mov
jmp
mov
fwait
cltd
pop
sahf
cmpb
dec
push
cwtl
lods
push
lea
movsl
jecxz
push
sub
pop
movaps
divl
insb
bound
add
lds
in
or
pop
mov
mov
lds
add
and
stc
stos
in
test
add
push
shr
mov
mov
and
jnp
pop
adc
out
and
daa
lret
outsl
and
or
int3
and
mov
pop
lds
sbbl
dec
stos
push
jnp
cmp
dec
mov
inc
sbbl
inc
mov
int
cmp
jb
mov
or
lret
add
cmp
sub
cwtl
hlt
subb
push
push
fs
sti
stos
inc
popf
in
out
mov
push
pop
imul
idivb
dec
mov
or
aaa
cmp
push
and
xchg
cmp
lret
pop
daa
pop
xchg
jmp
xchg
fistps
notb
cmp
mov
fcmovbe
push
cmp
clc
aaa
aaa
dec
pop
inc
mov
in
xchg
sbb
inc
loopne
call
fwait
pop
or
out
mov
xchg
xchg
mov
sbb
je
imul
stc
sub
test
sbb
sub
clc
cmp
mov
or
loopne
fcoms
jmp
mov
lret
dec
pop
fimuls
inc
jae
mov
je
mov
outsl
in
popa
pop
nop
loop
jecxz
or
mov
push
push
add
fidivs
aam
loop
or
and
mov
mov
xchg
repz
sbb
jmp
pushl
cmp
and
xlat
push
mov
adc
sbb
mov
in
cmp
sbb
mov
inc
sub
cmp
icebp
in
mov
dec
ljmp
cvtdq2ps
jno
imul
add
adc
jo
xchg
lret
adc
addr16
shrl
jmp
pop
call
shl
iret
lods
aad
mov
scas
loope
iret
lcall
insb
scas
mov
push
inc
cmp
lret
test
test
cmp
lret
mov
jbe
add
jno
rcrl
xor
dec
xor
jp
jg
ss
das
adc
mov
add
faddl
mov
mov
jb
fwait
mov
fwait
and
and
push
imul
push
inc
mov
outsl
xor
stc
inc
pop
cmc
nop
das
aad
mov
call
scas
inc
cmp
mov
add
mov
adc
das
arpl
mov
push
pop
adc
xlat
mov
gs
je
mov
ljmp
xchg
shll
aas
lahf
int
mov
cld
js
iret
jbe
imul
lods
sbb
movsb
decb
pusha
hlt
sbb
loope
sbb
push
jne
ss
cmp
sub
sbb
dec
xchg
cltd
push
repnz
cs
or
push
pop
ja
cwtl
pop
xor
out
loopne
push
popa
xor
adc
out
ljmp
jl
add
popa
loope
sti
fs
mov
mov
call
dec
add
daa
sub
or
xchg
scas
cwtl
or
mov
push
jecxz
jp
or
sbb
jl
jmp
pop
sbb
xchg
outsb
in
icebp
mov
sbb
fidivs
scas
pop
cld
cltd
xchg
into
lods
pop
pop
xchg
jbe
cmp
sahf
mov
push
mov
cli
or
xchg
les
test
fwait
lods
sbb
mov
dec
jns
and
xor
sub
dec
fcmovb
add
mov
or
repz
orl
dec
push
insl
sub
popa
jp
xlat
xlat
divb
mov
lods
mov
dec
or
inc
xchg
scas
cmp
add
test
cmp
dec
or
mov
movsb
cmpsb
cltd
jns
jae
cmpsb
mov
jmp
loopne
leave
ljmp
sbb
jmp
cld
scas
push
sub
sub
mov
dec
and
negl
call
aas
xchg
in
and
mov
adc
int
clc
je
loopne
mov
and
outsl
add
shlb
repnz
arpl
mov
popf
clc
adc
adc
or
pop
ss
out
dec
mov
mov
sbb
cli
pop
add
iret
cmpb
fwait
mov
lret
rcrb
imull
cmc
addr16
iret
dec
or
fidivs
sub
ss
shrb
jnp
mov
ljmp
pop
sub
cmp
movups
pop
sub
pop
xchg
pushl
add
push
aam
nop
std
ret
scas
adc
inc
adc
ljmp
adc
or
data16
mov
sub
fs
lods
add
shlb
lods
jae
rclb
lret
fisubs
sti
add
shrb
cmc
fnstsw
or
push
mov
icebp
pop
or
nop
aam
ret
jg
xchg
stos
ja
and
jo
mov
ret
loopne
cmc
mov
cmpb
sbb
repz
into
imul
rclb
int
pop
daa
stc
pop
imul
xchg
incl
inc
daa
mov
and
popf
pop
cltd
jb
push
test
sub
pop
aad
mov
in
not
push
and
dec
lahf
mov
add
sahf
jb,pn
lret
rorb
sbb
sbb
sarb
push
es
xchg
fwait
inc
movsl
push
mov
les
jle
xor
mov
lods
add
ret
push
pop
sbb
dec
add
cli
and
dec
cmpsb
fs
dec
call
inc
add
test
test
xchg
jp
mov
mov
push
jl
xchg
jnp
adc
push
cmp
xchg
cmc
or
nop
cmc
pop
cltd
cs
xor
pop
pop
mov
mov
lods
mov
insb
daa
mov
imul
sbb
inc
ja
pop
cmp
sti
insl
sub
mov
and
aaa
push
sub
imul
lds
cmpsb
mov
pop
push
icebp
das
shll
in
arpl
dec
sbb
frstor
fisubl
rcll
push
dec
mov
call
lds
cli
dec
cmc
ja
leave
in
adc
push
dec
cmp
lret
int
ret
in
mov
enter
sbbl
js
das
jno
in
movsb
lahf
test
je
inc
add
iret
xchg
enter
fmul
xor
dec
sub
mov
add
inc
mov
outsb
push
inc
lret
push
scas
je
xchg
iret
pop
clc
pop
hlt
roll
xchg
cwtl
push
dec
jmp
and
add
sti
sbb
fisubs
outsl
cmp
cwtl
out
repnz
xor
test
pop
or
jbe
mov
cwtl
mov
subb
mov
adc
dec
cmp
inc
xor
pop
mov
cltd
pop
sbb
movsl
jl
fbld
ret
mov
data16
scas
pop
xlat
fcmovne
mov
shl
outsb
xor
rcrb
mov
sub
and
decl
add
into
jns
and
dec
imul
jg
sub
fisubrs
mov
movsl
push
in
pop
push
psubusw
cld
add
cltd
jno
ss
fsts
and
movsl
into
jns
mov
fstpl
jb
adc
jp
pop
mov
test
xor
ja
fs
sbb
ss
enter
movsl
mov
xchg
or
sbb
cmp
adc
sub
shll
mov
ljmp
push
sbb
push
shll
jnp
test
sbb
xlat
xor
pop
sti
imul
in
inc
sti
int
scas
jo
or
sbb
fidivs
cltd
jns
adc
sub
cmp
and
call
push
or
insl
adc
jne
mov
movsl
xchg
out
test
scas
stos
jge
in
lea
mov
lcall
leave
in
sbb
lea
rcr
add
mov
sbb
mov
xchg
out
orl
dec
out
dec
mov
cmp
mov
mov
aas
ljmp
push
mov
add
add
add
mov
dec
mov
or
ret
inc
xor
test
shll
jmp
enter
sahf
out
sub
xchg
es
imul
sbb
cmp
sbb
shrb
dec
jnp
lcall
lret
or
test
sbb
fadd
cmp
clc
add
cmp
xor
xchg
mov
cmp
xchg
add
ja
push
iret
lcall
daa
xchg
add
outsl
dec
mov
sub
leave
adc
mov
stc
lea
cmp
mov
push
addr16
out
and
fsubrs
in
sti
pop
outsl
movb
dec
jnp
sbb
mov
adc
cltd
push
cwtl
call
or
push
enter
arpl
fisubs
mov
bound
adc
in
xor
flds
jp
movsb
lods
push
or
je
mov
ds
aam
sub
rcr
jle
mov
xchg
mov
mov
pop
mov
testl
xchg
cmpsl
orb
mov
sbb
or
cmpb
jns
pop
sahf
jecxz
add
add
xor
mov
xchg
addr16
int
orl
lods
xchg
dec
jg
mov
rorb
les
cmp
cltd
and
cmp
inc
stc
rclb
xchg
add
adc
push
sub
aam
and
cmp
dec
adc
bound
or
mov
outsl
sbb
add
call
xchg
cltd
ss
push
and
ds
pop
mov
and
inc
cmp
popa
sub
jecxz
xor
or
loopne
jne
dec
mov
addb
jl
fwait
cmp
sub
fcoms
movsl
adc
les
xlat
dec
cld
mov
fidivs
add
stc
out
jp
or
shl
insb
dec
test
in
popf
lea
nopl
mov
fldl
fs
push
loopne
out
and
fwait
mov
loopne
xchg
and
xor
jmp
mov
outsl
sbb
movsl
mov
xlat
das
mov
xchg
cmp
dec
xlat
lds
sbb
add
fadds
les
fidivrl
ret
cmpsb
and
jae
xchg
ret
ret
clc
add
pushf
xlat
xor
faddp
mov
sbb
mov
lahf
and
xor
cmp
lcall
cmc
int
cmp
push
mov
enter
sub
lods
mov
sub
ljmp
sbb
lea
in
adc
bound
stc
fwait
xchg
faddp
pop
mov
push
push
mov
aam
jb
xor
loopne
bound
cmpsb
pop
inc
das
mov
shl
cmpsb
fstl
aaa
shrl
aad
call
inc
xor
icebp
cmp
push
pop
jle
cld
xor
and
int3
imul
inc
scas
pop
jmp
pop
ret
leave
lahf
sahf
arpl
testl
mov
daa
adc
xor
adc
cmp
xor
cld
sub
pop
clc
inc
in
jo
das
mov
test
xor
fisubrs
leave
cwtl
xchg
hlt
out
xor
ja
nop
adc
cmp
sub
add
mov
mov
loope
and
lea
or
aad
in
icebp
cs
bound
add
adc
fwait
stos
mov
pop
test
xor
outsb
mov
add
pop
outsb
daa
cli
mulb
sahf
out
mov
adc
lahf
xor
mov
lods
gs
mov
adc
frstpm(287
xor
je
jle
mov
aad
dec
dec
xchg
sub
cli
fidivs
outsb
cs
ds
or
fmul
mov
xorl
popa
sahf
adc
addr16
and
je
icebp
and
ret
mov
lea
fnsave
sub
popa
adc
xor
push
jae
dec
jle
push
xchg
push
lahf
dec
clc
popf
or
arpl
mov
and
xchg
loop
addl
scas
imulb
jle
bound
cmp
sub
ss
add
mov
push
jae
mov
cli
jno
andb
jae
mov
repz
ret
loopne
sub
bound
clc
dec
mov
call
cmp
aaa
jbe
stos
in
inc
jae
fbld
jmp
push
xor
cmpsl
cli
shrb
addl
pop
aam
jl
nop
pslld
cmp
xlat
out
inc
stos
sub
ja
mov
inc
add
sbb
imul
jle
scas
pop
test
sbb
push
cmp
aad
lcall
and
xor
xor
stos
jecxz
xor
and
stos
xchg
ret
addr16
cmp
mov
les
mov
dec
nop
inc
jg
pop
enter
pop
loop
insb
xor
sti
arpl
cltd
aam
mov
test
mov
dec
shlb
lret
sub
or
or
ret
gs
push
ret
outsl
xchg
dec
sub
ret
cs
scas
cmp
mov
sbb
imull
mov
xor
sub
cmp
test
inc
mov
js
daa
mov
mov
test
push
scas
and
jbe
in
mov
mov
jle
and
ja
jns
pop
or
cmp
xchg
inc
repz
adc
xchg
jge
mov
jnp
cli
pop
mov
iret
pop
lcall
fwait
incl
mov
mov
shll
lret
or
cmp
mov
mov
push
rcll
daa
hlt
sbb
les
les
lret
test
aad
cmp
cwtl
and
testb
adc
ret
popa
mov
or
into
mov
jle
fxtract
scas
mov
mov
lret
pop
lea
adc
and
inc
jne
inc
jns
out
cmp
ljmp
add
add
stos
push
shll
mov
out
out
bound
call
mov
stos
ja
add
mov
out
arpl
lods
push
jnp
inc
aad
into
xor
mov
jl
filds
test
dec
and
stos
or
std
shlb
sub
pop
mov
cmp
je
cli
or
aam
es
mov
aaa
adcl
aad
mov
mov
test
pop
out
loopne
mov
jae
push
adc
jmp
fistps
pop
dec
pop
enter
cmp
dec
ret
in
inc
push
std
push
adc
adc
popa
push
xchg
mov
int3
adc
cmp
inc
dec
xchg
jecxz
stos
sbb
sahf
push
dec
push
xchg
push
cmpsb
and
sbb
cs
sbb
mov
mov
push
stc
cmp
sbbb
mov
repnz
out
in
or
adc
jbe
pop
hlt
mov
repnz
addb
cmc
dec
pop
pusha
mov
push
test
popa
mov
xor
mov
cwtl
jmp
inc
sbb
inc
sarl
sub
out
mov
bound
pop
shlb
mov
mov
xor
jp
or
cmp
push
mov
jmp
pop
pop
cmp
xor
push
xchg
pop
cmc
mov
or
adc
and
pop
repnz
addb
out
call
in
xchg
jne
dec
dec
filds
mov
adc
loop
or
andb
inc
or
arpl
xor
xor
cmc
test
sbb
mov
decb
mov
sbb
ds
dec
xlat
bound
ds
adc
jp
mov
push
das
pop
rcrl
cmc
dec
xchg
ret
adc
ds
dec
lea
jb
shlb
mov
xor
inc
lcall
in
cld
add
push
inc
adc
mov
xor
scas
sub
gs
jmp
dec
and
jae
cmp
call
test
dec
xlat
cmp
inc
mov
enter
inc
ljmp
fwait
out
mov
cltd
stos
pop
in
inc
test
movsb
scas
lea
jns
jae
aaa
movsl
mov
sub
lahf
push
mov
or
push
jnp
movsb
in
cmp
mov
push
and
daa
leave
dec
mov
pop
pushf
mov
movsb
xor
cltd
cli
adc
xor
imul
mov
call
jge
mov
in
xchg
jno
inc
and
adc
bound
and
jns
aaa
fldt
push
mov
mov
add
fs
pop
jb
test
cli
push
int3
lahf
mov
dec
daa
mov
iret
jecxz
rclb
aaa
xchg
test
out
fnsave
lahf
addb
loopne
mov
push
loop
sahf
push
push
push
int3
test
push
xchg
lcall
fwait
sub
mov
or
out
inc
push
xchg
xchg
push
jg
shll
cmpsl
je
pushf
push
mov
ljmp
jmp
fisttps
dec
inc
pop
test
roll
and
lahf
jle
stos
push
add
out
inc
lea
lds
sbb
mov
or
adc
mov
js
jge
repz
inc
jge
les
test
sbb
mov
jecxz
sbb
cmp
mov
sub
fcoml
sub
lods
insl
jp
jb
ss
out
lcall
mov
out
into
insl
imull
push
lcall
ret
fiaddl
fsubrl
push
cmp
add
dec
or
loope
inc
xchg
pop
in
mov
inc
dec
adc
fs
jo
xor
out
dec
jl
outsl
loop
das
addl
xchg
cmp
mov
jecxz
ja
shll
pop
fldenv
cmp
lods
push
ljmp
mov
mov
subl
mov
ds
adc
shll
fcompl
xorb
cmp
pop
mov
mov
or
arpl
in
sahf
pop
dec
ss
dec
push
outsb
and
or
dec
xchg
mov
iret
cmp
and
pop
mov
mov
adc
mov
inc
mov
xor
mov
cli
outsb
adc
push
mov
jl
vsubps
ss
lods
jp
cmp
bound
jno
subl
xchg
js
cmp
cltd
cmp
dec
fnstsw
je
aas
cmpsl
movsb
push
aam
arpl
mov
push
mov
mov
mov
cltd
fstps
in
jbe
mov
fwait
bound
scas
lret
pushf
mov
adc
mov
jno
fcmove
mov
pop
cld
mov
adc
pop
sti
or
cmp
sbb
dec
in
lret
push
mov
sub
lahf
sbb
sti
subl
loope
icebp
sbb
mov
and
adc
mov
mov
xor
or
sbb
insb
add
and
sarl
cmp
push
sub
cmp
or
sbb
insb
add
and
sarl
cmp
push
sub
cmp
or
sbb
insb
add
and
sarl
cmp
push
sub
cmp
or
sbb
insb
add
mov
push
pop
mov
jmp
or
dec
xor
mov
mov
jbe
daa
xchg
js
imul
ficoml
testb
jo
pusha
xchg
push
mov
mov
inc
mov
jbe
push
loopne
shlb
shlb
les
adc
add
mov
pusha
inc
push
cmpsb
inc
mov
pop
mov
outsl
lock
loopne
sarb
shrb
add
jl
add
jo
psubb
inc
les
nop
adc
std
cmp
imul
mov
out
pop
cltd
loop
mov
add
in
clc
sbb
pop
int3
out
jg
jge
cmp
ds
idiv
testb
int
loopne
test
xchg
cmp
adc
xchg
push
pop
push
sahf
fidivl
inc
je
adc
jae
xchg
sbb
mov
push
mov
inc
xlat
es
push
jle
leave
mov
push
push
aad
imul
jle
mov
cltd
jg
test
jbe
aaa
fmuls
xchg
mov
lahf
sbb
cmpsb
inc
dec
dec
dec
pop
mov
or
pop
sbb
mov
out
repz
and
in
jecxz
pop
shlb
jbe
insb
lock
loopne
sarb
shrb
fisubs
into
adc
add
jo
pusha
adcl
aam
stc
addr16
js
dec
ret
scas
inc
scas
adc
pusha
lds
cmpsb
push
fcmovnbe
lds
push
in
jae
jne
and
inc
xchg
pop
push
mov
add
cmp
xor
xor
pop
in
add
shlb
and
adc
add
jo
pusha
xchg
push
cmpsb
inc
mov
inc
mov
jbe
push
loopne
shlb
shlb
and
adc
add
jo
pusha
xchg
push
cmpsb
inc
mov
inc
test
or
cmp
jae
lcall
adc
hlt
cld
adc
cli
xchg
add
xchg
add
xor
push
shlb
shrb
pop
ret
sub
shrb
jp
mov
in
shlb
leave
inc
xchg
leave
cli
outsl
jle
in
jg
mov
ret
filds
add
pop
add
imul
inc
into
cltd
sahf
jle
xchg
dec
and
fs
adc
sub
dec
inc
cs
mov
test
movsb
mov
xor
mov
xchg
cmpsb
roll
jg
iret
xor
mov
or
jae
mov
mov
xor
and
cmc
sbb
cmpsl
stos
cmp
mov
jg
push
inc
test
dec
cld
cmp
aas
leave
ja
or
aaa
movl
imul
sarl
inc
fistps
pop
incl
dec
pop
sar
xchg
imul
cmpsb
shl
stos
loop
ret
lret
pop
pop
fadds
jae
dec
push
pop
pop
jge
or
pop
cmpsb
outsl
xchg
adc
pushf
sub
popa
pushw
shl
stc
mov
roll
insb
movsb
hlt
dec
sbb
imul
xchg
repz
lods
sub
pop
add
idivl
in
push
sbbb
push
mov
adc
in
inc
cmpsl
sub
stc
cmpsb
mov
mov
sub
lock
mov
lods
outsb
mov
iret
and
fildl
or
ds
cmp
mov
cmp
push
sbb
test
es
sub
jno
xchg
sub
arpl
fstpl
adc
pop
aaa
xor
and
inc
mov
pop
mov
dec
lret
gs
test
fwait
pop
aam
pop
dec
fcomp
sarb
rolb
cmpsl
pop
jecxz
js
jg
push
ja
push
aas
jg
addr16
jmp
rcrl
mov
jne
test
jecxz
mov
dec
les
roll
data16
xchg
push
ljmp
rol
movsl
repnz
je
or
imul
sahf
or
cwtl
aam
mov
mulb
mov
loop
nop
loope
das
push
jbe
or
call
out
movsl
outsb
dec
push
xor
cwtl
out
testb
test
push
shll
xor
mov
dec
aam
cli
jl
or
lea
sbb
xor
and
lock
mov
data16
aad
stos
cmp
mov
je
and
sbbb
je
jb
mov
adc
mov
adc
movsb
jae
mov
rorb
xor
mov
ret
cli
bound
lods
fwait
inc
in
dec
ffreep
repz
popf
jmp
ret
pop
test
mov
test
inc
dec
pop
or
mov
in
in
gs
popf
lods
cltd
lods
dec
push
addr16
jne
sub
lods
sub
jns
imul
push
adcb
or
fcomi
dec
mov
push
adc
push
pop
fs
sbb
pop
xor
clc
push
xlat
mov
pusha
mov
sbb
mov
cmp
jmp
gs
mov
xlat
mov
imul
arpl
fwait
xchg
inc
adc
add
stos
cmpb
and
mov
shlb
loopne
cwtl
bound
push
mov
out
mov
shrl
lds
andb
push
jge
cmp
pop
pop
or
xor
stc
popa
es
stos
adc
mov
js
out
fimull
gs
dec
mov
fcoms
fldl2e
mov
mov
subl
dec
repnz
mov
movsb
fwait
mov
repnz
mov
daa
pop
insl
lret
sbb
popw
fmulp
adc
push
repnz
xchg
lcall
enter
sub
jne
xor
outsl
aaa
in
xor
xor
add
push
repnz
mov
movsb
ss
push
push
add
adc
cld
and
push
bound
addr16
orl
stos
inc
out
fcom
jne
mov
adc
pop
das
insb
push
mov
aam
inc
cmpsb
addr16
ss
inc
sub
mov
sbb
mov
add
sarb
movsl
jns
loopne
cmpsb
jmp
or
mov
xor
xchg
or
aaa
int3
mov
and
sub
std
int3
int
cld
push
or
xchg
cli
cmc
sahf
adc
stc
jae
pop
mov
ret
sub
les
add
push
inc
add
and
aaa
push
mov
sbb
ret
cwtl
or
popf
rclb
aad
cltd
mov
pop
enter
ret
xchg
or
sbb
dec
fnsave
insl
jno
cmp
mov
xor
jp
aas
loope
dec
inc
pop
sbb
push
out
mov
cmp
adc
dec
sti
push
pop
mov
sub
stos
mov
insl
mov
fsubl
cmpl
add
pop
fcoms
sub
push
sub
lods
movsl
fcmovb
xchg
sti
xor
daa
insb
mov
add
push
add
sub
jne
dec
jmp
fadds
mov
push
outsl
add
out
cmpsb
adc
pop
shrb
js
lcall
inc
lret
ret
xchg
in
test
or
and
jmp
lock
out
ret
pushf
dec
jnp
jae
mov
mov
aam
xchg
adc
mov
mov
addb
fs
ljmp
push
cmpsl
xchg
dec
xlat
mov
movsl
push
push
push
fsubrl
push
mov
pop
add
xlat
push
push
jb
arpl
jge
mov
cmpl
stos
cmpsl
fwait
xor
cld
call
pushf
adc
xchg
pusha
push
int
lret
mov
rcll
out
insl
pop
jno
fwait
jl
xchg
push
mov
cmp
sbb
cmp
sbb
iret
movsl
shr
or
sahf
and
xor
pop
cmpsb
inc
dec
push
pop
jo
jne
mov
pop
mov
aad
pop
gs
addr16
insb
add
addr16
out
sub
jl
rcr
les
sub
clc
test
adc
std
stos
into
int3
and
jp
mov
cmc
in
adc
xchg
test
dec
mov
and
push
js
push
lods
loopne
adc
movl
repz
or
in
cmp
sbb
cli
pop
cmp
mov
iret
pushf
inc
shll
push
in
sti
pop
mov
sbbb
inc
jo
ret
jle
js
mov
adc
cltd
or
xchg
int
test
jne
lods
jno
mov
mov
or
jnp
pop
sbb
leave
scas
outsl
dec
cmp
cltd
or
ljmp
ror
jno
push
or
daa
inc
pop
dec
out
fs
les
dec
jnp
inc
shl
loopne
rolb
outsl
cmpsl
loopne
adc
push
jno
xor
pop
xchg
jge
pusha
loopne
sbb
mov
sahf
ljmp
dec
dec
push
xchg
insb
popa
pop
or
sbb
lds
std
adc
lcall
and
mov
xchg
dec
pop
aaa
push
out
sub
out
jmp
ss
imul
add
push
fisttpl
add
cmp
scas
stc
add
push
fsubp
mov
add
add
sar
enter
cmp
inc
pop
in
je
cmp
pop
rcrl
cltd
cmp
cmp
dec
lea
push
add
or
mov
das
sti
and
movsb
shlb
pop
sbb
sahf
jbe
cwtl
les
adc
pop
jne
xchg
inc
adc
fwait
insb
dec
mov
sbbl
mov
ds
fstl
add
or
loop
daa
mov
in
repnz
aaa
push
iret
arpl
cmp
push
push
xor
jp
int3
push
adc
mov
or
sbb
scas
and
inc
sbb
int
cwtl
lock
dec
push
lea
or
mov
cli
push
data16
sub
cmp
cmp
or
fwait
test
sbb
icebp
add
test
repz
jl
les
cmp
dec
into
push
scas
cmp
cmp
add
dec
jge
push
adc
pop
and
mov
and
fcoml
sbb
push
je
pop
xchg
jle
aaa
out
mov
mov
pusha
xor
aas
adc
loope
sbb
fisttps
and
sub
jp
inc
dec
xor
aam
mov
add
xchg
inc
mov
aad
cwtl
out
and
xchg
adc
call
dec
sbbl
xchg
fisttpl
jne
enter
pop
pop
stos
aam
jg
out
into
xchg
pop
cmp
adc
sub
mov
xchg
push
xor
sbb
bound
ffree
mov
mov
jmp
js
clc
outsb
mov
xor
dec
rolb
dec
sub
push
sti
movsb
jb
std
sub
mov
fidivrl
and
ss
flds
outsb
mov
push
mov
fidivs
sbb
into
test
jo
pop
fsubrs
test
pop
in
into
scas
and
sbb
and
pop
outsl
jmp
sub
cmpsb
cs
xor
xchg
inc
jbe
dec
dec
insb
sub
cmp
xlat
mov
xor
or
mov
repz
push
movsl
icebp
sbb
cmp
shll
push
dec
insb
pop
das
inc
mov
adc
push
popa
rcrb
lock
sub
cmpsl
xor
imul
ror
cmpsb
xchg
shr
inc
sub
aad
jl
out
cmp
data16
into
jl
pushl
aad
mov
mov
push
pop
jb
test
xchg
push
xlat
adc
lret
mov
shrl
insb
xchg
pop
shll
loopne
subb
flds
or
jmp
outsl
jecxz
jp
or
gs
sti
cmc
mov
ret
sub
iret
mov
or
xlat
pop
or
dec
int3
pop
stos
cmpsb
push
or
lods
sarl
scas
aas
adc
xchg
in
lock
mov
inc
xor
cwtl
mov
inc
aas
mov
lret
mov
icebp
cvtps2pi
mov
mov
stos
mov
push
adc
pop
or
fsubr
inc
adc
movsb
mov
dec
je
rclb
sub
imul
dec
lock
ljmp
jbe
gs
lods
and
xchg
and
xchg
sarl
testb
push
loop
mov
pop
or
imul
add
add
pushf
push
mov
sub
test
mov
and
or
or
mov
test
loopne
test
call
movsl
adc
inc
test
adc
test
fimull
mov
rcrb
ret
out
push
or
and
sahf
mov
arpl
sub
sbb
stos
js
fucomi
or
xor
fyl2xp1
push
adc
cwtl
out
das
inc
mov
lods
mov
test
lds
mov
xchg
jg
mov
sub
fucompp
imull
push
ljmp
mov
and
movsl
or
int3
sbb
loopne
loopne
pop
mov
decb
sbb
or
mov
xchg
scas
test
test
push
xor
cmp
sub
test
jbe
or
inc
push
dec
adc
dec
arpl
xchg
push
jnp
into
sbb
jbe
das
jb
and
nop
sub
sub
lea
imull
xor
pop
jns
lock
mov
jg
xchg
push
sbb
push
xchg
stos
xor
sarl
mov
dec
pop
out
jge
fcomps
dec
sti
xor
mov
dec
push
jbe
je
jle
cmp
sbb
add
les
add
pop
out
sbb
sbb
les
push
mov
push
stc
add
mov
push
mov
add
fstpt
lods
dec
sub
sbb
jne
inc
int3
out
sub
movsl
fildl
mov
lea
xchg
inc
fnstenv
pop
negb
cs
pop
negb
lock
hlt
fdivrl
pop
enter
pop
cmp
pop
fiaddl
push
adc
in
pop
out
mov
add
icebp
or
mov
lock
lds
je
mov
xor
cmp
iret
adc
fnstsw
mov
inc
cs
cmp
call
mov
xchg
lcall
jne
sti
mov
stc
shrl
push
xlat
xor
inc
aas
push
pusha
push
sub
push
add
pop
cmpsl
inc
xchg
inc
dec
sub
jp
in
or
inc
scas
test
aad
mov
xchg
lret
js
int
fsts
inc
add
lret
inc
sbb
std
or
xor
sbb
sbb
out
enter
jo
dec
out
sbb
int3
lods
mov
ret
fcompl
xor
adc
sarb
pushf
stc
insl
mov
popa
sbb
pop
dec
shll
lahf
push
dec
fs
leave
movsb
pop
mov
push
lret
icebp
fistps
icebp
xor
jg
lea
nop
int
xchg
push
aam
sar
sbb
stos
mov
pushf
addl
in
and
fdivl
in
pop
dec
mov
lods
cmpsl
gs
shrb
pop
enter
push
and
test
nop
mov
and
xor
mov
push
cmp
fld
mov
or
jnp
pop
shrl
pop
xchg
sub
in
jb
int
inc
jnp
popf
jo
jl
arpl
inc
xchg
mov
icebp
sub
adc
pop
lahf
jmp
dec
jb
adc
je
cmpb
cwtl
dec
mov
movsb
rclb
or
or
push
es
mov
adc
dec
sub
ljmp
push
addb
int3
inc
repnz
jo
xchg
add
mov
mov
sbb
mov
mov
lahf
stc
movsb
jmp
cwtl
fisubl
push
cs
pop
movsl
lret
ret
push
mov
daa
inc
xchg
adc
xchg
popa
mov
popf
mov
dec
aam
lret
pop
mov
sbb
popf
int3
inc
gs
cwtl
int3
xchg
in
enter
xchg
test
push
mov
mov
mov
push
idiv
mulb
scas
cmp
push
and
cmp
out
aad
inc
xor
and
push
cmp
jo
dec
fcoml
pop
or
enter
nop
into
and
xchg
jo
xchg
dec
orl
das
aam
xor
cld
sti
adc
push
test
fsub
fisubrs
test
and
xchg
std
push
pop
out
aas
sub
outsb
cmp
add
jne
fisttpl
adc
sti
les
lcall
sbb
data16
xor
sub
jp
fdivrs
adc
lahf
add
cmp
adc
bound
lahf
xchg
pushf
sub
and
sbb
repz
cmp
dec
jno
popa
inc
pushf
iret
and
movsb
int3
and
test
enter
sahf
push
leave
scas
int3
jae
imul
cld
jp
in
movb
lahf
push
adc
pop
test
sti
fstp
jl
insb
xchg
inc
pop
out
xchg
dec
sub
push
xor
lahf
in
xchg
adc
and
dec
push
push
adcb
out
and
les
test
jb
jl
mov
mov
cli
jl
popf
jno
mov
loop
outsb
movsl
push
push
xchg
or
in
mov
fidivrl
sub
adc
cmp
add
lock
shlb
clc
lock
cs
setne
xchg
cmp
xchg
pop
lods
js
lea
cmp
popf
icebp
lret
fbstp
hlt
jle
imul
dec
daa
sbb
sar
sub
jmp
push
loopne
repnz
mov
adc
pop
gs
and
add
lcall
loopne
subb
lahf
std
jnp
out
sbb
aam
push
orl
sub
cltd
ficomps
shlb
sbb
xchg
and
aad
popf
add
dec
rolb
fisttpll
out
repz
xchg
pop
loop
arpl
adc
rorl
das
loopne
cli
rcrl
int3
adc
xor
ljmp
xor
sub
out
mov
xorl
mov
insl
fs
and
in
ret
aam
ja
push
inc
jle
fsubrp
gs
out
xor
loop
mov
in
dec
mov
hlt
lret
outsl
rcll
fnstcw
iret
pop
gs
xor
adc
dec
jne
dec
dec
pop
test
ds
stos
stos
test
xor
pop
aam
push
stos
mov
or
sub
mov
cmp
and
add
fists
pop
das
cmpsl
imul
push
inc
jnp
les
pop
jge
add
xchg
and
outsl
pop
sbb
dec
sbb
adc
cmp
inc
outsb
jnp
int3
or
ror
mov
inc
adc
lds
int
cmp
lret
insl
mov
in
iret
xor
out
incb
test
inc
cmpsl
and
jno
cmp
inc
pop
jbe
jo
loop,pn
xor
stos
lods
or
adc
sahf
xor
jb
mov
fwait
cmp
pop
pop
gs
push
sar
or
mov
int3
sbb
cmp
movsb
sub
jle
in
adc
hlt
cli
xchg
popa
sbb
das
dec
add
aad
shr
push
pop
add
pop
stos
mov
in
push
inc
leave
push
pop
jmp
out
ret
dec
inc
pop
test
into
ret
push
jno
xchg
and
pop
jb
cld
mov
inc
js
sbb
pop
ficompl
mov
imul
fidivl
cmpsb
jnp
out
xor
fisubrl
mov
sbb
mov
pop
ret
lds
leave
jbe
into
icebp
rclb
mov
aas
bound
movsb
cmp
xor
lahf
pop
cmp
dec
aad
and
adc
push
push
in
rol
fbstp
or
rcrl
push
mov
aaa
lret
lods
in
nop
pop
shl
icebp
jo
mov
lret
leave
call
cmc
dec
inc
xor
add
cmp
add
js
mov
pop
arpl
mov
and
mov
shlb
shrl
cmp
dec
push
je
cmp
lods
mov
test
or
idivb
idivl
cmpsb
mov
test
in
jp
fisttpl
mov
mov
loop
andl
test
fsubl
les
jg
and
push
mov
xor
and
scas
fsubr
lods
sti
mov
inc
or
or
aaa
cltd
push
pop
stos
xchg
jmp
inc
jno
push
pop
cltd
ja
inc
jecxz
outsb
pop
negl
dec
jmp
sbb
in
mov
jb
mov
test
jbe
std
nop
adc
cmp
dec
mov
in
cmpb
orb
fwait
negb
pop
leave
test
notl
adc
mov
std
movsb
test
fwait
pop
pop
or
add
or
sub
shll
mov
cs
jb
add
pop
pop
pop
push
in
fcoml
test
daa
lret
pop
repnz
hlt
mov
jo
push
or
rolb
pop
xlat
jg
gs
shll
arpl
mov
xor
sbb
lods
mov
dec
xor
lods
lcall
sbb
outsb
in
jnp
dec
das
gs
mov
in
sub
mov
push
lods
mov
mov
inc
hlt
aam
bound
jmp
inc
jge
leave
and
push
filds
mov
inc
pushf
xchg
dec
fstpl
shll
fisttpl
incl
push
mov
outsl
or
cwtl
jg
popf
mov
rclb
sbb
cld
sub
imul
xor
repz
xor
push
and
sub
push
outsb
jmp
lods
outsb
xor
jle
pop
jg
call
das
hlt
ds
mov
add
xor
dec
lock
addr16
push
dec
dec
mov
or
insb
sahf
lret
mov
mov
movsl
fsubs
mov
popa
push
mov
push
in
mov
ja
sbb
mov
shlb
pop
out
bound
daa
add
pop
dec
mov
out
push
stos
notl
cmp
loopne
loop
sub
aam
dec
adc
adc
in
fnsetpm(287
sub
es
fabs
adc
loop
ret
bnd
and
jns
ja
add
mov
xor
leave
out
push
xchg
inc
pop
std
inc
je
scas
add
lods
dec
jno
xchg
xchg
fnstcw
inc
fisubrl
stos
fcompl
scas
jne
jecxz
and
sahf
lahf
mov
scas
sti
fstps
jle
xchg
xchg
rcll
add
xchg
mov
push
shlb
shlb
and
adc
add
jo
pusha
xchg
push
cmpsb
inc
mov
inc
mov
jbe
push
loopne
shlb
shlb
and
adc
add
jo
pusha
xchg
push
cmpsb
inc
mov
inc
and
data16
loopne
shlb
inc
ss
and
adc
add
jo
pusha
xchg
push
cmpsl
inc
mov
inc
mov
jbe
push
loopne
shlb
shlb
and
add
and
dec
scas
mov
pop
mov
std
loopne
mov
mov
fisttpll
in
push
std
outsb
lea
dec
lods
pop
mov
mov
jge
or
fimuls
int
std
jp
push
std
outsb
loop
popf
dec
in
pop
mov
mov
sahf
jg
xor
and
ret
fisubs
jge
xor
add
xor
std
sbb
sub
xor
addr16
das
dec
mov
ret
call
add
adc
les
loope
insl
sub
call
fwait
in
xchg
mov
dec
lods
mov
pop
inc
ja
push
mov
out
and
cs
push
pop
icebp
pusha
je
into
lods
negl
jmp
mov
out
jne
mov
xor
lea
mov
bound
pop
out
push
pop
lret
cmpsb
clc
push
sub
pop
iret
and
ret
sub
pushf
scas
mov
xchg
leave
jl
inc
push
dec
aas
sahf
xor
sarl
mov
adc
push
mov
dec
lods
ss
dec
mov
ja
or
fidivrs
push
std
push
mov
mov
pop
shr
pop
xlat
pop
jmp
sti
push
cmpb
stos
inc
lahf
pop
outsl
mov
cwtl
insl
cltd
jb
or
pop
jmp
lods
or
sbb
or
pop
test
xchg
cs
inc
ficoms
test
mov
pop
lcall
pop
sbb
sbb
cmp
sbb
cs
fisttpll
in
push
std
outsb
lea
dec
lods
pop
mov
mov
jge
or
fidivrs
push
in
push
std
outsb
lea
dec
lods
pop
mov
xor
xchg
push
ja,pt
shll
dec
mov
mov
out
iret
lea
test
jge
xorl
add
pop
test
or
push
lods
mov
icebp
jmp
push
dec
stos
inc
call
cmp
dec
jl
push
pop
ljmp
test
nop
fnstcw
pop
mull
fiadds
adcb
loope
jns
loopne
dec
mov
and
pop
push
mov
mov
push
test
dec
out
jmp
aaa
sbb
pop
pop
mov
int
pop
mov
xchg
dec
mov
roll
loope
arpl
fiadds
imul
dec
ds
fs
jle
dec
sub
orl
sarb
std
jge
cmp
popa
dec
mov
push
mov
loop
hlt
mov
xchg
sbb
mov
and
push
dec
pop
lcall
shr
sub
insl
not
and
dec
fwait
mov
mov
inc
jle
int3
push
sub
xor
mov
std
je
addl
not
in
sti
jg
int
movsl
mov
push
mov
outsb
xchg
movsl
shlb
jno
pushl
jle
mov
pusha
sbb
adc
jno
jae
call
js
xchg
icebp
xchg
sbb
arpl
jo
out
and
cmpsb
enter
call
add
pop
xchg
movsb
or
or
xchg
adc
xchg
xor
jb
cs
pop
imul
add
mov
inc
xchg
loop
nop
mov
push
aas
xchg
add
add
dec
aad
int
les
cmp
or
in
dec
pushf
mov
adc
dec
ret
rorb
cmp
data16
ljmp
add
sahf
stc
bsf
sbb
lahf
ret
add
push
mov
adc
ret
jae
rcll
add
pop
imul
movsl
cwtl
pop
jb
push
xchg
ljmp
fstp
pop
jl
jecxz
loopne
les
pop
xchg
loope
lret
dec
inc
repz
cmc
push
fldl
rcll
inc
cmpsb
jb
xchg
mov
adc
sbb
fs
pop
les
or
ret
xor
arpl
add
ja
push
xchg
push
and
loopne
out
sub
nop
mov
xchg
lret
and
imul
pop
cli
cmp
lret
mov
lds
test
adc
or
xlat
call
dec
into
jne
imul
imul
rcll
in
and
jg
mov
push
dec
adc
inc
in
jo
add
inc
xchg
xchg
xchg
aad
jp
inc
push
pop
xchg
xor
rorl
sub
add
push
lock
xchg
ret
push
es
lea
xchg
pushf
pusha
pop
aaa
sbb
adc
scas
imul
mov
addr16
inc
jecxz
xor
es
dec
sbb
aad
das
dec
ret
pop
cltd
rcrb
je
xchg
call
push
decb
sarb
pushl
cmp
pop
inc
xchg
pop
fldl
xlat
sub
outsb
adc
or
movsl
push
leave
dec
call
ret
test
cld
jmp
rcrb
fdivrs
stos
data16
mov
lcall
mov
in
fisubrl
sbb
xchg
mov
test
imul
cli
push
dec
fcoml
test
cmp
test
mov
test
jnp
insb
xchg
callw
pop
cs
or
pop
xor
mov
jbe
xchg
mov
das
ret
out
dec
pop
sbb
dec
repnz
mov
mov
loopne
fcoms
stos
js
dec
mov
mov
jae
insb
test
adc
in
and
div
jl
mov
inc
adc
and
xchg
imul
add
sub
pop
xlat
je
ss
mov
in
and
jo
jne
jecxz
mov
insl
cmp
leave
jmp
push
and
loop
lret
enter
cmp
jno
dec
mov
je
and
and
shll
outsb
push
or
daa
pop
cmp
sbb
hlt
jo
mov
mov
rcll
pop
jmpw
jecxz
orl
arpl
push
mov
repz
sub
addr16
dec
or
jne
inc
iret
out
inc
lret
stos
inc
into
push
sbb
adc
sub
cmp
dec
jg
pop
cwtl
cmp
and
cmc
jl
fs
push
push
clc
pop
jnp
fsubl
sbb
sub
sub
adc
push
pop
cmpsl
pop
in
clc
pop
mov
and
iret
adc
cmovg
test
mov
push
pop
arpl
inc
orb
and
adc
js
es
xor
sar
pop
adc
stc
or
push
push
in
mov
andb
mov
xchg
jp
scas
push
negb
lret
or
shlb
mov
sub
rcl
add
dec
test
shlb
or
faddp
hlt
dec
xor
mov
cmp
dec
cld
lahf
mov
and
mov
xlat
mov
fwait
jecxz
dec
push
and
jo
inc
nop
mov
pop
out
mov
fnstenv
icebp
ljmp
or
icebp
mov
ja
fisubl
jl
ret
jecxz
inc
cmp
mov
movsb
lock
adc
loopne
shlb
pusha
xchg
jmp
fnop
cmp
jae
imul
or
lea
fsubrl
push
inc
cmp
xor
adc
push
or
cltd
jmp
mov
pop
imul
in
cmpsl
cltd
jno
push
xor
jge
mov
jne
jecxz
adc
out
push
mulb
leave
cmp
cmp
push
out
fistpll
in
adc
and
mov
pop
jle
dec
add
pushaw
subb
mov
lods
push
xchg
lret
popa
push
or
movsl
icebp
mov
mov
xor
lock
sbb
aam
pop
addr16
or
cli
xchg
dec
pop
in
imul
xchg
and
jb
mov
stos
jmp
sub
das
push
popf
mov
sub
fucomip
icebp
mov
addr16
push
pop
aam
aas
loopne
sbb
out
aad
out
lret
inc
into
mov
leave
jle
mov
push
pop
iret
sub
pop
pushf
pop
push
mov
adc
jnp
jl
inc
pop
push
sub
xchg
out
adc
out
out
loope
pop
jb
lods
out
aad
lods
mov
cmp
pusha
sbb
and
pop
adc
sbb
mul
mov
sti
jmp
daa
test
ljmp
adc
test
jmp
lret
inc
ret
test
sub
push
pop
xor
inc
shl
mov
mov
xor
jg
cmpl
mov
jne
pop
push
aaa
popf
xor
arpl
add
mov
jmp
dec
imul
fmuls
lds
mov
lea
in
dec
mov
add
repnz
pop
mov
cmc
jae
out
insl
rorb
orb
mov
int3
je
decl
mov
mov
cli
in
in
rolb
jns
mov
leave
cmp
jns
pushf
ja
pop
push
lods
push
or
and
mull
push
scas
rcrl
and
push
add
xchg
stos
enter
mov
add
and
fimuls
mov
mov
mov
mov
sub
pop
dec
xchg
lret
imul
cli
sbb
das
inc
insb
in
jo
je
push
ds
pop
and
mov
lods
sbb
lcall
cwtl
dec
cmp
xor
mov
cmpsb
in
repz
stos
fs
mov
mov
mov
jne
iret
push
mov
ds
xchg
jle
lds
mov
jecxz
jge
test
cltd
in
orb
dec
fsubrs
rcrb
ds
dec
nop
lock
into
pop
into
pop
xlat
mov
jnp
xchg
clc
xchg
mov
stos
data16
push
dec
orl
mov
mov
mov
mov
add
or
inc
mov
cmp
pop
std
add
xchg
mov
scas
push
out
push
xor
inc
outsl
jae
jno
pop
sarb
lahf
mov
push
imul
outsb
pop
mov
push
xchg
mov
jnp
lds
inc
insb
mov
dec
out
call
les
out
sbb
pop
jae
push
mov
lea
fstps
and
inc
scas
in
inc
cli
lret
sarl
dec
mov
stc
cmpsb
mov
sub
jne
cld
mov
je
std
out
adc
loopne
xchg
mov
ja
jle
je
outsb
cmpsl
or
xor
dec
fdivr
pushf
adc
mov
cmp
and
jae
jp
xor
cld
ss
cwtl
cmp
pop
loop
shll
jl
je
xchg
pop
test
sbb
dec
in
sub
popa
fistpl
shll
sub
mov
dec
lea
mov
xchg
mov
lahf
scas
bnd
mov
add
lods
lret
es
inc
pop
mulb
pop
ljmp
daa
jno
add
push
jns,pn
jae
jmp
lret
xor
add
rorl
or
jge
out
or
xchg
inc
ret
lcall
pop
cmpsl
fwait
adc
mov
ss
inc
stos
pop
movsl
add
and
flds
mov
fisubrs
or
lock
sbb
rcll
clc
push
testl
pushw
and
jns
sub
push
ss
xchg
jbe
adc
dec
cmpb
adc
and
sbb
mov
call
cld
psllq
ret
and
movb
pop
inc
sbb
sub
imul
int
outsl
mov
enter
mov
pop
mov
or
dec
pop
das
jb
push
fidivrs
mov
xor
jp
popf
outsb
loop
xchg
and
jne
inc
aad
outsb
push
jl
mov
inc
and
out
cmp
hlt
loopne
or
in
fsubrl
mov
hlt
or
mov
mov
adc
add
inc
lcall
xchg
lds
dec
dec
and
and
sarb
sub
out
xchg
outsb
or
divl
nop
pop
and
or
mov
loope
cmp
negb
xchg
lret
mov
pop
movsl
add
add
jo
jg
aad
cltd
inc
ret
in
jle
out
test
je
loope
or
jle
movsl
nop
inc
fisttps
xor
shll
push
in
sbb
pop
je
fstps
cmp
push
or
lea
pop
pop
clc
xor
pop
dec
pop
mov
ja
jae
sbb
in
lahf
push
in
shrb
movsb
sbb
ret
loop
dec
lods
cmc
mov
ror
adc
repz
pop
out
fisttpl
pop
lret
mov
subb
addr16
movsb
mov
push
int3
pop
push
jo
inc
and
push
insl
mov
out
aam
cmp
ficomps
and
push
hlt
pop
lock
testb
sbb
notb
dec
adc
xchg
ds
mov
push
icebp
jg
add
out
lret
sahf
push
xchg
cmpsb
jl
add
hlt
psubsb
cmp
fld1
push
negb
jg
popa
ja
cli
inc
mov
sub
fsts
mov
sbb
testb
jno
std
mov
jmp
push
lcall
mov
aam
xor
cld
inc
push
imul
jbe
inc
shll
xor
jge
clc
push
arpl
lret
mov
mov
or
loopne
dec
aad
cmp
repnz
popa
mov
cli
mov
xor
sbb
ja
push
jae
sub
pop
aam
popa
adcl
push
or
adc
stc
or
pop
jne
daa
leave
leave
pop
clc
adc
fstpt
sub
mov
cmp
push
adc
pop
movb
pop
mov
leave
stos
xlat
test
mov
mov
inc
in
dec
nop
dec
fidivl
mov
cltd
jl
jle
fcomi
pop
inc
sti
icebp
outsb
aaa
dec
fnstenv
mov
push
adc
and
and
ljmp
mov
addr16
hlt
mov
in
mov
sbb
jnp
push
lea
sub
or
cmp
jne
mov
mov
xor
fucomp
shrl
sbb
in
jae
lock
sub
mov
mov
mov
xlat
sbb
xchg
push
or
inc
xor
cmp
sub
or
stos
adc
push
mov
lea
adc
addr16
les
ja
movl
pop
sahf
jle
cmpxchg
cld
adc
and
xor
mov
push
jl
outsl
insb
sarl
xor
or
in
pop
push
addr16
sahf
or
stos
pushf
fisubs
sub
sub
lcall
jns
pop
push
inc
sbb
add
sbb
inc
pop
aad
lock
pop
stos
xor
clc
fidivs
in
mov
sbb
jmp
sub
mov
ljmp
loope
or
cmp
pushf
scas
rcr
jno
cmpsb
jmp
pusha
cmc
xchg
shll
sbb
popa
in
lahf
pushf
jge
fwait
pop
imul
lahf
lahf
shlb
cmc
and
lock
dec
jle
roll
pop
jg
sub
add
dec
and
adcb
inc
xchg
jo
pushf
test
shr
mov
pop
and
mov
gs
cmp
sbb
repz
repnz
gs
shlb
scas
stos
icebp
jbe
or
dec
aaa
scas
popa
in
mov
xchg
fs
sub
lahf
and
lcall
lods
jno
inc
mov
cmp
dec
fisttps
lret
lret
mov
rcl
inc
and
pop
sbb
test
pop
mov
jns
aad
es
enter
negl
outsl
push
enter
orb
pop
cmp
daa
jle
pop
btsl
add
push
lret
adc
fsubr
push
imul
test
dec
sti
ds
stos
dec
cmpsb
fcoml
ftst
movb
inc
in
mov
in
shl
jge
mov
push
mov
popf
iret
mov
add
adcl
inc
pop
loope
pop
popa
idivb
pushl
xchg
psrld
dec
mov
in
ror
nop
dec
sbb
xlat
mov
daa
popf
ds
into
mov
pop
lds
jl
sarl
pop
push
dec
cmp
inc
cmp
jmp
xchg
js
or
ds
fadds
mov
movsb
or
insb
mov
mov
mov
in
sti
sub
adc
dec
shr
inc
je
jg
out
insb
jp
and
sbb
inc
imul
bound
mov
arpl
mov
jge
loopne
jg
pop
cmc
fisubrl
daa
xchg
iret
mov
loope
dec
sbb
mov
add
push
cmpsb
out
xor
addb
mov
push
hlt
pop
pop
ja
js
adc
lret
jne
dec
adc
xor
push
and
mov
push
adc
sub
pop
mov
mov
mov
sbb
xchg
adc
jg
and
and
jmp
mov
es
sbb
cs
shll
jg
or
mov
int3
pop
and
mov
lods
mov
xchg
aaa
mov
outsl
jbe
popa
jmp
dec
pop
xchg
mov
sub
or
jo
lret
xchg
scas
jno
lods
icebp
or
sub
adc
jmp
scas
push
hlt
xchg
out
bound
pop
js
cwtl
mov
cli
jecxz
imul
out
inc
inc
mov
ret
out
dec
std
pop
mov
frstor
adc
ja
loopne
movsb
mov
insl
jl
lock
lret
or
xor
jne
sti
stos
pushf
dec
add
dec
jge
xchg
lcall
dec
subb
xor
out
popf
inc
inc
sbb
rorb
xchg
mov
mov
pop
xchg
inc
iret
out
cmp
ss
dec
cmpsl
cs
mov
scas
sbb
or
or
pop
js
inc
add
push
mov
arpl
inc
add
int
or
jg
addr16
in
aas
js
mov
dec
out
fwait
sbb
mov
push
xor
add
repz
add
dec
icebp
outsb
std
pop
pushf
aas
insl
push
xchg
in
clc
mov
mov
enter
jecxz
add
stc
sub
ficoms
and
mov
adc
inc
xlat
xor
mov
pop
cmpsl
and
jmp
testb
ja
movsl
xor
ret
dec
inc
cmpsl
add
mov
lret
sbb
aas
mov
jg
popf
sbb
data16
mov
cmp
dec
xor
xor
and
sub
sbb
fstps
xor
push
or
xor
jne
cmp
lahf
xor
outsl
imull
pop
and
jnp
ss
push
lods
mov
fidivs
in
out
cmpsb
push
aaa
fwait
inc
inc
pushf
sbb
push
adc
movsl
aaa
lods
sub
nop
mov
es
and
pushf
add
pop
jmp
or
loop
sub
lea
aas
icebp
rcll
daa
jle
jmp
cmc
lcall
cmp
lcall
ljmp
pop
ss
clc
rcl
sub
cwtl
hlt
push
mov
pop
dec
and
jmp
xchg
clc
mov
adc
inc
xchg
dec
push
rcrl
pop
mov
xchg
xor
push
push
out
adc
push
dec
fiadds
sbb
scas
inc
mov
jb
stc
jmp
inc
scas
xor
dec
jo
add
ja
out
xor
pop
invd
leave
bound
popf
aaa
xor
arpl
sbbl
in
jmp
jmp
or
imul
nop
rolb
pop
xchg
sub
imul
pop
cmc
loope
pop
das
jae
xchg
cmp
imul
cmp
lret
xchg
inc
xchg
jp
cmp
lret
in
jmp
mov
xor
mov
inc
xlat
repz
imul
int3
xchg
mov
roll
jnp
jo
cmp
es
xchg
jbe
fsincos
bound
lock
fs
pop
mov
lret
sarl
enter
mov
ficomps
pusha
imul
add
xchg
js
push
add
mov
cmp
dec
inc
mov
fldl
pusha
mov
pop
cmp
cs
mov
mov
xchg
sub
gs
lock
dec
jne
jg
lods
fs
mov
aad
inc
jg
in
daa
mov
mov
scas
cmp
frstor
xchg
ret
xor
fdivp
mov
pop
xor
add
lock
jbe
push
cmpsb
xchg
pop
inc
xchg
scas
cmpl
or
leave
cmp
ror
or
sbbl
and
sarl
mov
aas
mov
or
and
add
repnz
test
adc
in
outsb
pop
out
cmp
jno
push
push
lret
push
inc
jle
lcall
sarb
or
incb
mov
fadd
pop
mov
loop
jne
pop
pop
inc
es
jg
sub
jne
movsb
roll
fistl
leave
mov
aaa
repnz
roll
fs
cmc
dec
inc
cmp
addr16
enter
pop
scas
add
sbb
xchg
push
jle
jecxz
gs
pop
xchg
jecxz
sti
mov
sbb
in
iret
lahf
adc
mov
xchg
mov
or
pop
test
dec
pusha
xchg
fldl
xor
lea
f2xm1
cmp
subb
push
adc
xchg
mov
jbe
lea
inc
inc
xor
ljmp
lea
jge
push
mov
sar
cmp
add
sub
ret
jmp
int
mov
push
arpl
imul
xlat
fcoml
imul
add
sub
mov
or
lcall
iret
enter
cmc
mov
dec
push
add
imul
cmpb
adc
cmc
mov
pop
cmpxchg
mov
out
mov
iret
sub
mov
cmp
or
cmc
add
rcll
mov
gs
pop
lahf
cmc
mov
test
and
addr16
cli
push
or
mov
push
cmc
nop
lods
dec
movsb
inc
out
fcoml
js
adc
out
ljmp
je
divl
adc
popl
cmp
cmp
mov
pop
movsl
push
scas
into
outsb
ljmp
adc
inc
and
xor
lds
decb
sub
ja
popa
mov
call
not
pop
hlt
test
mov
sbb
pop
test
aam
add
mov
jge
or
fidivrs
push
in
push
std
outsb
lea
dec
lods
pop
mov
mov
jge
or
fidivrs
push
in
push
std
outsb
lea
dec
lods
pop
mov
mov
mov
sub
fisttpll
in
push
std
outsb
lea
dec
lea
scas
dec
mov
jl
or
fidivrs
movsb
in
push
mov
add
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
gs
jne
inc
outsb
push
jle
pop
pop
jo
jge
ds
cmc
faddp
out
aad
movsl
mov
mov
inc
outsb
push
jle
push
xor
ds
into
cmc
faddp
out
movsl
mov
mov
pop
outsb
dec
jle
push
sub
ds
lock
sbbb
fxch
ret
dec
sbb
inc
or
xchg
jbe
xor
frstor
push
mov
test
pop
and
mov
cmp
divb
ss
jae
mov
cmc
dec
movsl
adc
lcall
adc
pop
mov
mov
aad
mov
or
std
jmp
movsl
mov
test
mov
mov
push
sysenter
push
cli
adc
outsb
std
hlt
lret
lock
add
mov
push
push
xchg
lahf
xor
mov
sub
push
les
and
fstpt
test
lret
xchg
cmpsb
add
or
lds
sbb
sbb
js
mov
jno
push
mov
insb
pop
inc
outsb
push
jle
push
and
ds
into
in
out
int3
mov
scas
xchg
clc
or
adc
push
popa
push
pop
dec
dec
adc
mov
xorb
imull
fisttpl
unpcklps
outsb
and
xor
mov
xchg
movsl
loope
icebp
repz
rolb
push
sbb
sub
cmp
push
add
into
cmc
faddp
out
aad
movsl
mov
mov
inc
outsb
push
jle
push
xor
ds
cmc
faddp
out
aad
movsl
mov
mov
cli
pushf
es
dec
lret
push
or
jns
inc
xlat
mov
sub
loope
int
sti
cltd
dec
ja
ja
mov
das
dec
sbb
pop
ret
cmp
xor
push
jne
adc
adc
xchg
in
jbe
or
xchg
imul
sbb
lods
mov
testl
scas
mov
icebp
iret
xchg
lcall
mov
fdivs
mov
fdivp
and
push
xchg
lods
jmp
adc
aaa
mov
xchg
xchg
aas
fldl
xchg
mov
fisubs
aaa
cli
fcmovu
imul
lret
xchg
mov
push
repz
mov
mov
addr16
sahf
jnp
sub
imul
push
int3
in
fnstenv
jnp
loopne
adc
faddp
fnstsw
push
push
clts
mov
xor
pop
pusha
cld
xchg
mov
sbb
xor
add
add
fidivs
push
jo
imull
insb
rol
push
int3
notb
jb
bound
out
or
fucomip
daa
ljmp
pusha
mov
jl
test
cmpsb
mov
mov
aam
popf
ds
mov
jg
fcompl
iret
cmpsl
ljmp
push
call
std
dec
adc
aad
push
sub
testb
scas
dec
add
mov
enter
jb
mov
outsl
repz
mov
mov
repz
es
push
in
ret
movsl
pusha
lret
mov
jb
lcall
xchg
xchg
push
call
dec
dec
mov
adc
decl
dec
loopne
sub
scas
xor
pop
imul
ret
push
push
cmp
roll
sti
and
out
mov
lahf
outsl
test
mov
pusha
std
inc
mov
mov
dec
xchg
lahf
scas
cmp
gs
ljmp
pop
jb
aam
shlb
and
notl
call
ja
es
aam
inc
push
add
and
jp
call
add
inc
xchg
xor
add
or
sahf
or
and
inc
xor
pop
jnp
pop
xchg
inc
dec
push
push
push
outsl
push
pop
jnp
or
jl
test
lret
inc
jne
cltd
cmc
outsb
or
dec
ljmp
xor
movsl
xorl
adc
fdivs
aad
stc
rcr
xor
std
sbb
insb
lret
adc
test
mov
gs
in
push
push
xor
stc
xchg
xchg
jp
js
pushf
add
mov
jne
dec
push
mov
sbb
adc
jne
cmp
mov
push
xchg
ret
cld
mov
or
mov
xchg
dec
nop
cwtl
sub
sbb
mov
sarb
xlat
fstpt
aad
jo
ljmp
arpl
pop
inc
push
jl
mov
pminub
inc
adc
push
pop
pusha
dec
les
jbe
mov
inc
test
inc
dec
xchg
inc
jecxz
ficoml
leave
fadd
aaa
loop
rol
cmp
add
out
mov
adc
mov
push
bound
jge
push
and
popf
cs
les
and
cmpsl
mov
stos
popa
in
cmpsb
pop
lods
or
jbe
fcoml
aas
jmp
inc
xor
pop
xor
inc
push
or
lret
mov
sbb
mov
cmp
lods
rcrb
lcall
mov
mov
xlat
icebp
icebp
add
xchg
xor
and
pop
loop
sub
insb
test
int3
or
test
cmc
and
lock
fisubl
rorb
pop
fwait
ret
ljmp
jo
imul
mov
xor
push
sbb
pusha
cmp
pop
cmp
fsubl
mov
test
cmpsl
hlt
cs
enter
nop
imul
iret
push
jns
lahf
sub
push
les
scas
mov
js
mov
outsl
xchg
xchg
rclb
dec
loop
shlb
mov
mov
mov
test
adc
cs
xchg
mov
out
lahf
or
dec
jns
shld
dec
inc
and
divl
push
rorl
lret
jge
push
or
push
inc
inc
or
xchg
rcr
insb
pop
push
bound
add
xchg
arpl
test
add
xchg
jecxz
xor
lcall
xchg
divb
sub
inc
into
push
in
xor
out
xchg
mov
fdivp
cmc
shld
scas
dec
pop
adc
sbbl
std
les
loop
sti
int3
dec
adc
and
lahf
mov
sar
daa
shrb
cmp
cmp
int
xor
movsb
or
adc
notl
push
and
adc
repz
shlb
mov
push
stos
loope
xchg
fistpl
loopne
add
fwait
sbb
ret
in
loop
push
lahf
inc
pop
sub
add
test
mov
mov
push
fbld
jge
js
bound
push
icebp
lods
mov
or
outsl
inc
mov
lcall
enter
sbb
pop
jl
cltd
and
jbe
je
daa
jns
popa
adc
pusha
insb
sub
push
mov
adc
dec
out
pop
mov
mov
int3
cmpsb
mov
repz
ficoms
lea
popa
dec
mov
xor
sbb
mov
pop
cmp
sub
adc
sbb
and
es
pop
divb
insl
les
push
insb
cmpsb
sub
pop
stc
imul
out
or
pushf
sub
mov
sub
lret
jbe
mov
es
mov
jle
flds
es
lret
outsb
repz
sbb
out
mov
sarl
add
push
xor
jb
das
sbb
adcb
sbb
lahf
sub
dec
dec
test
inc
cmpsl
arpl
push
push
and
testb
push
cmp
inc
push
in
out
sarl
rcrl
mov
js
inc
push
xor
inc
mov
mov
test
cmp
xor
mov
mov
cmp
lea
xchg
jmp
out
inc
inc
arpl
in
or
mov
xor
sbb
mulb
mov
ja
pop
mov
imul
test
test
arpl
xor
push
into
cmpsl
lahf
push
add
xorl
arpl
or
mov
xchg
adc
popa
add
jns
jle
cmp
pop
gs
jp
out
push
mov
xlat
int
push
adc
pop
rorl
sbbb
mov
sub
gs
sub
rcl
add
shlb
push
inc
cltd
or
mov
xchg
es
imul
arpl
xor
mov
cld
jo
daa
jecxz
cmp
add
ficompl
cli
cltd
mov
bound
mov
xchg
pop
call
sbb
push
cmp
adcl
sbb
sti
mov
adc
lods
sub
sahf
ret
aaa
add
push
add
ficoms
sub
mov
aas
rolb
sbbb
mov
in
mov
loope
or
push
mov
orb
mov
pop
jle
jb
das
mov
lock
jecxz
mov
lds
jl
mov
cmpsb
mov
das
repz
inc
xlat
sub
cmp
test
mov
out
lret
push
jmp
popa
push
loop
stc
adc
and
xor
mov
fwait
cwtl
call
pop
addr16
push
xor
xchg
icebp
pop
aas
jnp
pop
sbb
mov
mov
or
sbb
imul
or
ds
out
ret
adc
xchg
fcomps
insl
sahf
movsb
icebp
mov
jb
sbb
popa
sub
cmc
aaa
in
jbe
fcomps
bound
imul
xchg
cmp
sbb
push
shr
add
pop
dec
push
fdivr
jg
stc
popa
je
imul
pop
sub
lds
jl
sub
pop
cwtl
shrb
iret
fs
pop
mov
pop
push
stos
addr16
and
jp
pushf
hlt
mov
inc
mov
insb
sub
pop
ret
add
test
shrl
call
and
lcall
xor
test
inc
push
mov
aaa
inc
mov
inc
sbb
ret
push
cmc
arpl
mov
cs
pusha
mov
add
cmp
pop
stos
mov
in
mov
and
ds
sbb
das
nop
jle
sub
ds
sti
mov
out
mov
add
adc
pop
push
fists
inc
aas
adc
mov
lock
rcrl
mov
inc
pop
dec
inc
imulb
inc
or
into
sbb
std
aaa
sbb
inc
sub
or
dec
push
lods
cmpsb
outsb
mov
sbb
mov
cmpsl
ja
dec
outsl
cmp
mov
cmp
aad
xor
ja
clc
fstp
sub
push
fucomi
mov
push
dec
xchg
cmpsb
pop
pusha
xchg
sar
ljmp
lods
cld
push
sub
jo
mov
cmp
sbb
pop
imul
mov
fwait
xchg
popf
pop
add
inc
sub
jae
dec
mov
sub
shrl
push
jl
xchg
loop
in
sar
xchg
lret
pop
dec
push
dec
cmpsb
cmp
xchg
stos
fdivrs
imul
jl,pn
and
and
inc
repnz
aam
sarl
jle
fildl
xchg
pop
dec
mov
or
cmpsb
push
test
notl
movsb
mov
sti
push
mov
std
xor
rcrb
shld
insb
out
imul
adc
fstpl
inc
popf
dec
adc
lcall
sarb
jmp
mov
or
dec
movsb
in
push
or
xchg
sbb
mov
mov
mov
cmp
fdivrl
and
mov
in
test
fldcw
mov
insl
cmp
mov
and
pop
mov
xchg
adc
mov
sbb
ds
insb
es
mov
lret
repnz
mov
cmc
fs
fidivrs
xchg
jb
dec
in
ret
test
jae
xor
mov
and
lods
jl
lea
movsl
or
and
into
sbb
mov
dec
ret
mov
scas
mov
push
sbb
shll
inc
xchg
int3
inc
fists
cs
test
push
mov
repz
out
loope
and
insb
les
pop
jl
filds
xchg
adc
push
dec
pop
jne
cli
in
adc
sbb
sub
in
xor
jmp
ffreep
mov
aaa
mov
clc
loopne
imul
call
mov
shl
fistps
shrl
pop
inc
aas
aas
mov
fcmovnbe
adc
loop
repz
shl
dec
jl
or
in
out
lods
orl
setg
in
out
adc
shrl
loope
adcb
scas
movsb
cwtl
push
das
lret
push
out
or
scas
fsubl
dec
adc
or
jbe
pop
lds
mov
iret
pop
test
icebp
push
lret
in
mov
hlt
popa
clc
dec
xchg
imulb
jbe
sub
push
inc
in
fildl
lock
ds
xchg
out
lahf
in
mov
lret
sbb
push
loop
sub
jne
ret
scas
mov
addr16
in
in
fmuls
push
imulb
ss
mov
xchg
clc
test
xchg
rorb
xor
fnstsw
and
lret
js
mov
lds
stc
js
mov
cmp
shlb
repz
inc
mov
add
push
mov
lock
stos
in
mov
mov
push
mov
pop
mov
addr16
dec
jle
enter
cmc
sbb
or
adc
xor
cmp
cmp
jbe
inc
dec
stos
hlt
xchg
jmp
cs
xchg
daa
enter
pop
nopl
in
mov
mov
sub
inc
mov
pop
aaa
stc
mov
sahf
mov
leave
mov
and
mov
pop
repz
in
inc
inc
or
or
jge
sbb
pop
add
cltd
push
cmp
testb
out
iret
sub
pop
int3
rolb
add
push
notb
int3
dec
jl
aad
dec
mov
pop
loop
add
xchg
jp
cli
leave
ret
pushf
mov
xchg
leave
sti
or
test
data16
and
mov
cmp
pop
sarl
xchg
into
inc
shl
dec
repnz
mov
lds
scas
setbe
aam
dec
and
sbb
loopne
sbb
insb
xchg
imul
enter
clc
loope
mov
or
test
es
inc
lock
les
cmpsl
iret
and
scas
push
cli
repz
jg
loope
jp
stos
xchg
lods
push
mov
testb
jl
xchg
add
cltd
mov
movsb
mov
mov
mov
mov
insb
lds
fiadds
popw
sti
fidivrl
jo
jmp
sbb
mov
out
xchg
std
movsl
cmp
faddl
cmp
mov
and
mov
add
int3
hlt
xchg
or
mov
jge
sbb
mov
add
mov
inc
fildl
and
mov
data16
mov
adc
push
add
pop
dec
push
sub
push
lods
xor
adc
xor
sti
aad
add
or
cs
cmpsl
fadd
aad
and
mov
lods
mov
cmp
xchg
stos
ljmp
inc
inc
adcb
mov
fwait
pop
add
mov
pusha
cwtl
jnp
inc
dec
repz
xchg
roll
popl
insb
aaa
inc
push
sti
xchg
pushl
inc
stos
mov
xorb
repz
jns
lods
insb
sti
test
push
and
add
mov
lcall
insl
test
in
dec
inc
and
xor
pop
cld
mov
repz
addr16
xlat
push
push
out
leave
gs
scas
jne
xchg
jae
stos
pop
xor
cli
add
jge
mov
or
push
mov
jecxz
filds
dec
cld
fstl
shrl
out
mov
mov
add
rclb
push
movsl
mov
push
lret
jge
push
mov
fmuls
mov
and
fiaddl
jmp
mov
push
in
dec
rep
jne
push
movsl
sti
pop
cld
lds
mov
push
sbb
ljmp
fs
pop
and
loope
sub
mov
dec
or
jl
xor
mov
movsb
test
movsl
gs
stos
and
stc
mov
jl
pop
or
inc
movsl
stos
xor
cwtl
test
mov
or
int
lahf
xor
add
and
test
scas
and
mulb
jge
pop
adc
in
dec
ss
or
bound
jo
lods
xor
add
icebp
insl
dec
cmp
pop
add
and
xor
xchg
outsl
and
imul
and
sub
scas
push
cmp
les
pop
test
lods
js
mov
push
add
repz
cmp
mov
sbb
outsb
mulb
sub
jge
push
xchg
aaa
shlb
xchg
fwait
dec
cs
ficoml
inc
adc
pop
xchg
out
push
addb
pop
dec
sbb
fcoms
das
rclb
jmp
cmp
add
clc
notl
mov
int3
je
cmp
pop
push
es
shrl
jb
xlat
fimuls
lret
dec
push
loope
adc
pop
jb
lahf
fucom
stc
pop
pop
pop
xchg
xchg
out
adc
mov
pop
inc
adc
and
add
jo
fistpll
lret
and
jo
or
dec
out
mov
dec
or
pushf
scas
in
xor
push
outsl
inc
stos
xor
inc
leave
inc
dec
push
mov
je
mov
push
sti
jns
xchg
xor
movsl
inc
fwait
test
scas
arpl
dec
sbb
pop
push
adc
movsl
and
xchg
push
and
pop
fldt
inc
sub
cmpb
cmp
es
notb
xchg
dec
sbbl
push
push
pop
mov
inc
pop
adc
movsl
enter
insb
into
lahf
pop
loop
sbb
xchg
jb
into
scas
add
rcll
adcb
aam
xchg
push
pop
mov
pop
movsb
sbb
mov
add
push
dec
mov
cmpsb
in
mov
call
cmp
std
ja
xchg
rolb
sbb
stos
pop
and
pop
test
jb
inc
mov
aas
out
push
xchg
fildll
pop
and
cmpsl
fs
out
ss
xchg
ret
or
insb
lahf
push
dec
fiadds
mov
ja
out
push
xor
dec
test
cs
mov
mov
mov
inc
imul
loop
sahf
fidivrs
cmc
or
inc
in
push
rorb
jge
sub
xchg
cld
xchg
push
imul
or
dec
sbb
inc
mov
lods
fists
rol
adc
mov
ljmp
mov
pushf
xchg
out
adc
gs
mov
in
clc
push
xor
mov
movsl
ss
mov
fisubrl
cmpsl
jns
and
insl
adc
mov
sbb
in
jb
stos
mov
xchg
cmp
shll
mov
sub
xchg
ret
loopne
lods
xchg
out
dec
cmp
dec
fwait
push
xchg
iret
xchg
int3
mov
in
bnd
adc
jno
dec
inc
cwtl
fisttps
jg
add
jno
imul
les
pop
sahf
gs
pop
adc
clc
sub
mov
add
movsb
add
es
in
mov
xor
mov
les
mov
mov
pop
std
push
mov
sarl
les
mov
cmp
add
vsqrtss
push
push
xor
mov
xorl
shrb
sub
pop
outsb
ja
loope
cltd
popa
cmp
fcmovbe
fistl
mov
stc
pop
sub
imul
xchg
ret
inc
push
outsl
movsl
pop
xchg
call
insb
daa
insb
fcoml
lcall
mov
loope
mov
sub
rorl
or
mov
rol
xchg
xor
push
hlt
sbb
ljmp
pop
repz
out
mov
popf
stos
push
les
xchg
sarb
into
mov
std
sti
pop
jge
sbb
andb
inc
ret
in
notl
xchg
mov
mov
xor
cmpl
popf
push
jp
jns
je
dec
adc
pop
rorb
add
js
jl
or
fwait
aaa
int
mov
jp
pop
xlat
inc
xor
mov
addr16
scas
fwait
jb
mov
and
or
std
int3
push
lret
push
jbe
xchg
jp
or
mov
ffree
fldcw
ror
sbb
pop
ror
mov
lret
add
pop
jns
sub
mov
int
fwait
aas
cli
orl
icebp
inc
push
mov
jne
cmpsl
pop
inc
cld
inc
xor
fcompl
jne
pop
fs
xor
inc
fs
and
loopne
icebp
icebp
add
jno
icebp
inc
daa
mov
dec
mov
and
sub
mov
push
idivb
int
arpl
imul
lods
lret
cltd
sub
stos
aad
and
inc
outsb
inc
fcmovnbe
aad
lea
sarb
test
and
mov
jns
clc
xor
and
daa
stos
mov
push
pop
rcl
decl
enter
add
add
dec
cmc
add
sbb
jmp
movsb
aad
sbb
xchg
jmp
sbb
pop
cli
dec
std
scas
je
scas
mov
sub
lods
test
addr16
sub
jno
add
mov
arpl
imul
xor
setle
xchg
and
and
xchg
push
xor
orb
lea
ficoml
int3
test
jp
je
gs
fimuls
jp
shlb
jge
popa
dec
jmp
xchg
or
idiv
or
jmp
mov
ja
cli
jg
addl
xchg
inc
push
push
jno
cs
lret
inc
sub
pop
daa
or
xor
icebp
dec
dec
aam
in
enter
xlat
in
mov
cwtl
or
sub
dec
insl
mov
call
sub
out
std
js
pop
jno
int
out
sub
cli
scas
les
add
xchg
sarl
imul
bound
xchg
adc
mov
xor
push
leave
imul
or
pop
dec
outsl
push
jle
push
xor
ds
cmc
faddp
out
aad
movsl
mov
mov
inc
outsb
push
jle
push
xor
ds
cmc
faddp
out
aad
movsl
mov
mov
inc
outsb
push
jg
push
xor
ds
cmc
ffreep
out
aad
movsl
mov
test
ja
inc
outsb
push
jp
push
xor
rcrl
or
aad
rolb
cmp
inc
mov
push
add
xor
and
sbb
arpl
cmpsb
imul
sbb
or
icebp
adc
add
xor
and
jae
pop
sub
dec
mov
sbb
or
and
imul
test
imul
xchg
add
sbb
mov
push
mov
sbbb
push
push
mov
mov
pop
or
lcall
inc
jae
and
mov
or
jge
jecxz
pop
mov
add
flds
dec
jl
fcomp
push
cmp
mov
jbe
jp
repz
cmpsb
mov
int3
pushf
jo
push
push
push
cwtl
pop
mov
insb
jae
jge
dec
mov
mov
sub
or
repz
adc
es
or
xchg
sub
fnstsw
or
dec
dec
sbb
shrl
rorl
jl
jl
jmp
test
sbb
jo
cmp
dec
pop
mov
icebp
sbb
lret
adc
sub
inc
cltd
jae
jp
xchg
sti
fwait
subl
insl
loop
adc
inc
xlat
push
fsubl
mov
call
orl
sub
push
mov
shrl
stc
jp
push
inc
add
enter
cli
push
inc
out
out
and
ret
insb
xchg
dec
xchg
mov
fiaddl
test
pusha
test
arpl
imul
sbb
or
stc
adc
add
xor
and
jae
arpl
imul
sbb
or
stc
adc
and
fadd
mov
fdivrs
stos
xchg
hlt
lods
and
enter
test
call
movsl
pop
cmpsb
xor
mov
xor
inc
cwtl
stc
jmp
inc
pop
outsb
mov
push
xor
pop
pop
xorl
or
pushf
sbb
cli
rorb
xor
enter
lods
fs
sub
xchg
jg
addr16
adcb
es
jb
dec
test
mov
add
fsts
pop
test
pop
mov
and
jecxz
pop
push
je
inc
daa
insl
loope
sahf
mov
insb
and
push
pusha
dec
jbe
sbb
lret
sub
ja
es
mov
dec
inc
pop
dec
ljmp
cmp
test
or
jg
lods
jns
or
in
or
xchg
insb
mov
sbb
repz
shl
faddp
ljmp
fcmovnbe
xor
int3
in
nop
out
pop
bound
loopne
sahf
inc
sahf
push
loope
push
ja
rcrl
stc
test
dec
sti
sbb
and
mov
add
pusha
add
mov
fcos
call
inc
inc
mov
pop
jecxz
aam
push
sub
push
call
or
dec
aam
jno
jmp
and
test
inc
xor
mov
fcompl
pop
repz
rcrb
cmp
or
mov
js
outsl
cmpsb
xchg
stos
push
push
lea
lods
mov
and
xor
xchg
nop
push
lods
cmp
pop
imul
mov
ja
decl
es
cli
mov
mov
jnp
roll
jnp
cltd
pop
roll
pop
xchg
sbb
pop
push
call
inc
cli
icebp
or
aas
popa
aas
xchg
lcall
into
out
fwait
shll
pop
pop
addr16
out
mov
add
fdivs
jb
in
cld
lods
xchg
xchg
subps
cwtl
fwait
cmp
push
xchg
or
mov
loopne
adc
call
xor
xchg
jb
movsl
fs
jle
push
and
lods
or
lods
push
leave
cmp
push
mov
add
lock
roll
das
mov
int
inc
sbb
and
sub
jae
lret
cmp
or
fistl
jbe
push
sbb
pushf
das
cld
mov
inc
xchg
jmp
xchg
aaa
lret
aas
mov
test
xchg
inc
ret
push
ret
push
imul
aas
push
or
rol
xor
movsb
mov
fucom
push
mov
or
mov
dec
push
fldcw
jle
and
popf
pop
imulb
jl
scas
pop
add
ret
or
test
xor
push
xor
mov
movntq
mov
fimull
pop
mov
orl
repz
sbb
es
outsl
cmp
add
decl
mov
ficoms
imul
jp
push
adc
push
cmp
adc
inc
sbb
add
mov
and
inc
adc
shr
cltd
cmpsl
push
jno
mov
jmp
adc
mulb
cltd
imul
xor
xchg
lea
gs
cli
fcompl
mov
sbb
jno
sub
lcall
mov
es
push
ret
add
insb
lahf
dec
loopne
push
mov
xlat
sarb
push
pop
cmpsb
mov
je
test
dec
pushf
cmp
and
add
std
cmc
dec
pop
xchg
jae
loop
movsl
out
push
mov
lret
and
jo
jne
push
cmp
sub
or
pop
inc
mov
mov
jbe
jg
push
cmp
jae
push
cmpsl
cmp
lods
imul
dec
add
je
std
mov
mov
sub
pop
pop
sbb
loop
xchg
inc
vandps
jl
mov
add
insl
sub
pop
inc
xor
hlt
popa
data16
sbb
movl
xor
sub
push
jg
sub
mov
cwtl
sub
mov
pop
sub
mov
lcall
add
jbe
insl
push
ret
and
mov
dec
movl
pop
adc
add
push
jl
pop
scas
lea
pop
iret
cs
jmp
cmp
das
dec
push
dec
and
mov
mov
mov
add
pushl
loope
sbb
cwtl
nop
push
pop
mov
or
dec
inc
cmpsl
and
sub
lret
fnclex
inc
jp
icebp
or
loopne
pushf
enter
ret
inc
add
dec
pusha
lret
mov
fstps
or
mov
add
xlat
and
jae
sbb
rcr
out
test
xchg
loop
xchg
mov
sbb
movsb
add
inc
add
popa
imul
xchg
push
mov
inc
mov
into
ljmp
repnz
push
mov
sti
fsubrp
les
mov
ret
ret
jmp
dec
js
xchg
lock
adc
mov
xchg
xorb
int
cmp
loope
and
rcrb
mov
in
pop
dec
nop
pop
mov
adc
mov
sub
or
jno
pop
out
movl
out
aam
or
cmpsb
clc
pop
or
jne
nop
dec
mov
js
add
mov
cld
jmp
int
jo
js
jecxz
cmpsl
fisubrl
dec
sbb
add
sbb
aas
lds
jo
rol
repnz
pop
test
adc
repnz
stos
ljmp
inc
lret
mov
jmp
mov
mov
ret
and
nop
xor
mov
leave
push
mov
adc
sub
orl
sbbl
push
in
aaa
lea
pop
bound
jmp
rolb
xlat
sbb
into
jo
gs
pop
fnstenv
test
aas
cmp
test
test
jae
mov
sub
mov
dec
adc
addr16
je
mov
jne
shl
push
jecxz
imul
jne
out
sub
ss
fisttps
fimuls
aam
lock
popf
dec
cmp
ret
mov
and
int
xchg
cmp
int3
xchg
cmpsb
mov
mov
orb
mov
jecxz
mov
es
ret
push
inc
popf
xchg
sub
xor
push
fprem
pop
daa
enter
mov
addr16
in
add
fwait
decl
insb
push
popa
stc
jbe
adc
cld
adc
outsb
xor
stc
cltd
shrl
sub
clc
sub
mov
fstpt
or
push
push
dec
fcmove
add
jb
mov
push
test
mov
fs
imul
and
jmp
pop
xchg
sub
test
mov
ds
mov
movsl
add
push
addr16
add
mov
xchg
daa
outsb
and
movsb
es
dec
sbb
mul
pop
dec
inc
fadd
cmp
inc
xor
pop
or
lahf
loop
imul
push
push
int
jge
cmp
inc
sahf
jbe
int3
or
mov
imul
push
lret
sub
aaa
lods
jo
iret
pop
mov
in
push
ret
mov
cmp
lock
cltd
scas
in
xchg
cmp
mov
mov
push
jo
lea
loope
cli
insl
mov
enter
btc
inc
cmpsb
hlt
dec
out
adc
xchg
mov
fwait
xchg
sbb
jp
popf
and
cmpsl
ficoms
mov
js
mov
add
mov
fsub
inc
jbe
idivb
rcrb
push
adc
xchg
scas
inc
mov
inc
mov
mov
mov
popa
outsb
xlat
insl
repnz
cltd
aad
into
add
jae
jp
mov
jecxz
cmp
stc
cltd
mov
sub
sbb
pop
or
loop
jne
push
daa
stc
jl
or
daa
loope
cli
inc
and
bswap
mov
lahf
fwait
shr
ret
or
loope
out
push
dec
jns
mov
je
aaa
add
nop
mov
jne
mov
mov
lock
sbb
xor
mov
arpl
jle
mov
or
mov
imul
mov
push
lods
lret
jne
mov
aam
mov
fwait
ljmp
sub
add
dec
jnp
call
shl
lcall
mov
xchg
call
nop
push
into
test
jnp
inc
mov
dec
icebp
sub
mov
inc
icebp
push
cmpb
mov
mov
sar
lods
dec
xchg
cmpsb
sub
ss
rcl
leave
mov
sbb
xchg
cli
push
add
push
stos
mov
lds
std
lea
jb
pushf
sarb
lret
test
test
xor
mov
push
insl
std
call
mov
ljmp
call
test
mov
movsl
aaa
dec
pop
push
sbb
out
arpl
rcll
lret
jbe
sbb
imul
sbb
cld
pop
inc
mov
or
arpl
int3
or
imul
push
lea
out
push
xor
adc
mov
icebp
cmp
mov
xchg
xchg
icebp
mov
out
imul
mov
push
jl
xchg
stc
mov
and
mov
and
sub
stos
jb
push
jbe
lds
xor
push
aad
js
mov
fnsave
lcall
sarl
mov
lock
flds
mov
mov
mov
das
stc
repnz
aaa
insb
mov
dec
subl
std
sar
aad
mov
inc
test
fdivp
ret
stos
sbb
popa
insb
icebp
icebp
jb
pop
cmpsb
adc
data16
or
or
xchg
inc
enter
lods
adc
push
or
je
shrl
pusha
add
loope
mov
pop
push
pop
or
adc
aam
jno
mov
int
punpckhwd
cmpsl
sbb
adc
ret
ret
jnp
dec
testb
jo
js
cwtl
dec
shr
pop
cwtl
push
and
int3
je
daa
sarl
inc
sti
or
sbb
mov
mov
fadds
xlat
and
cld
lods
cwtl
cltd
outsl
icebp
push
mov
dec
jge
das
push
ds
pop
idivb
out
scas
jmp
fadd
mov
pop
pop
and
std
lock
sub
lods
cmp
sahf
les
push
mov
fcom
inc
mov
xchg
daa
cwtl
xchg
cltd
dec
mov
testl
ss
jle
faddl
dec
int3
cwtl
mov
pop
mov
adc
ljmp
cmp
pop
pop
cmpsb
cvtps2pi
inc
in
ficomps
dec
dec
sbb
mov
loopne
push
or
scas
jno
jbe
pop
xor
xor
repnz
lcall
rcr
lods
adc
ljmp
addr16
fistl
jae
in
xchg
loop
cmp
lods
and
jp
sub
dec
jnp
add
cmp
roll
fdivrl
aaa
sub
jnp
cmpsb
ret
es
sub
xchg
ficompl
xchg
jmp
cmp
loop
dec
jno
pop
xchg
sub
outsl
scas
lods
nop
aaa
leave
out
bound
or
pop
lret
fldt
mov
or
ljmp
mov
into
jg
xchg
cmpsl
inc
neg
popf
inc
cli
xor
sub
inc
sub
leave
in
xor
push
mov
cmp
mov
aas
add
lret
sub
ja
xor
add
popa
insb
jo
jecxz
out
test
pop
sub
sub
rol
mov
mov
mov
in
mov
decb
bound
aam
std
test
dec
cld
test
inc
mov
xchg
dec
pop
aas
jne
lds
shrl
xor
inc
popa
insb
and
or
add
fnstsw
add
iret
mov
ja
add
sbbb
jns
sbbb
out
sti
jb
mov
divb
mov
lds
popl
add
ss
sub
imul
inc
pop
enter
push
add
xor
imulb
ds
push
push
and
cmp
loopne
and
sarl
repnz
fs
sbbb
mov
mov
fstl
jne
cmp
dec
cmp
mov
js
dec
xor
add
sub
dec
gs
bound
and
inc
jb
mov
in
int
pop
movsb
loop,pt
mov
mov
repnz
jp
sbb
int
shrl
xchg
lret
fmull
xchg
cltd
push
cmpsb
ja
in
sub
stos
cmp
stos
jbe
pop
outsl
aaa
mov
sub
add
mov
push
dec
daa
test
xchg
mov
jmp
mov
cs
test
std
mov
push
xchg
or
imul
int
addr16
out
xor
mov
stos
mov
clc
jns
jg
movl
inc
cmc
sahf
stc
sti
stc
dec
or
clc
xor
dec
cmp
adc
adc
sub
lock
sti
sub
fisttpl
mov
xchg
loop
mov
in
push
rolb
xchg
sbb
and
or
aam
hlt
mov
aas
clc
ljmp
and
add
push
ret
lds
aaa
cmp
inc
mov
jne
and
xchg
and
add
data16
js
dec
aaa
inc
sub
push
cmp
add
mov
sub
ds
call
out
aam
lods
div
dec
mov
notb
test
add
in
in
xchg
daa
sub
dec
scas
addb
les
jle
and
jmp
cld
enter
xchg
xor
inc
jns
leave
ret
mov
lret
sbb
out
fsub
scas
xchg
fistl
test
iret
add
lcall
addr16
xor
sbbb
cltd
fildl
mov
push
add
out
popl
push
inc
test
fistpll
jno
shll
mov
and
call
rcr
mov
cli
xorl
scas
fsubl
push
cwtl
sbb
aaa
clc
rol
mov
movsb
add
imul
sbb
sub
ror
scas
int3
fwait
ret
and
rol
sti
sub
leave
aam
mov
std
xchg
sahf
or
outsb
add
and
inc
ds
frstor
in
mov
add
sbb
push
jmp
rcrl
and
jl
mov
push
inc
sub
cmp
shl
bound
mov
ficomps
into
sbb
jmp
pop
fwait
jge
jmp
push
push
dec
outsl
rcr
call
jnp
and
xlat
cmp
cmp
cwtl
sbb
jmp
push
add
jne
dec
sub
in
imulb
sbb
out
cmp
push
scas
dec
pop
mov
add
push
dec
stos
inc
push
add
insb
movsb
sbb
mov
pop
loope
negb
scas
cmc
scas
sbb
shll
pop
adcl
cmc
sub
dec
cmp
int
sub
cmp
pop
fucomip
punpckhdq
jno
mov
int3
ja
cmpsb
xchg
repz
clc
icebp
pop
jg
mov
divb
lods
mov
leave
rorl
lcall
mov
dec
cld
insb
int3
xchg
add
fisubrs
mov
mov
hlt
xlat
rclb
mov
sbb
jne
ss
aaa
aaa
lods
pop
inc
insb
in
imulb
stc
jmp
popa
pop
popa
jne
clc
cmp
inc
xor
sbb
fucomi
fwait
inc
mov
test
push
ss
pop
adc
popa
adc
subl
sbb
in
or
loop
out
aaa
in
mov
lods
repz
mov
fsubrl
fisttpl
push
sub
xor
fldl
std
push
pusha
dec
inc
stos
ss
mov
inc
repz
inc
add
cmp
xchg
test
mov
adc
lea
mov
mov
out
pushf
cmp
jnp
jecxz
mov
aaa
lods
pop
sbb
aaa
je
aas
std
xor
loopne,pn
sub
mov
mov
mov
or
pop
jmp
jge
addr16
xor
test
mov
add
jge
sbbl
xchg
inc
push
push
inc
sub
push
or
insb
in
ja
or
dec
int3
adc
mov
fsts
cli
add
lock
fisubs
jb
push
lods
jo
gs
movsb
cmpsl
jb
ffreep
mov
shlb
mov
mov
testl
pop
add
cmpl
mov
aas
dec
inc
aam
sub
xor
and
lcall
fidivrl
int
jge
pop
enter
sbbl
aaa
dec
rol
sbbl
push
cmpxchg
mov
xchg
pop
mov
mov
gs
lock
lret
mov
or
ret
jle
je
rcr
push
cltd
loopne
pop
pop
aas
push
and
jns
pop
mov
dec
and
pop
cs
fstpt
pusha
nop
mov
cmp
sbb
mov
shrl
stos
xchg
imul
push
repz
jb
pop
pushf
pop
mov
jno
shl
std
xlat
das
rcl
jno
pusha
mov
add
in
pushf
and
divb
mov
mov
mov
in
or
das
xlat
pop
xor
push
icebp
pop
fsubr
test
mov
pop
bound
mov
ja
pop
cmpsl
pop
adc
test
push
pop
mov
pop
xchg
andb
xor
inc
mov
outsw
les
ljmp
adc
int
js
xchg
mov
lret
adcl
filds
dec
arpl
or
adc
mov
stos
hlt
jb
scas
arpl
aad
incl
dec
and
pop
dec
push
or
stos
cmp
andb
cmpsb
push
jle
sarl
pop
aad
ret
cmc
mov
xchg
jo
push
or
ss
je
aad
pop
ds
jecxz
mov
ss
dec
mov
int3
hlt
insb
sbb
test
jecxz
and
and
cmp
imul
fcomps
mov
cmpsl
pop
jle
sbb
mov
push
in
test
push
paddb
cmc
sti
mov
mov
dec
aam
pop
and
push
pop
bound
jecxz
dec
mov
cs
lret
stc
cmp
add
mov
xor
mov
ja
les
inc
jne
cwtl
jge
movb
xchg
pop
fs
in
push
psubw
pop
je
pop
sahf
in
mov
aas
jg
sub
dec
xor
aas
jg
scas
xor
jo
fcompl
ret
mov
xor
push
lahf
cmp
mov
ljmp
test
rolb
enter
lods
add
popf
in
push
test
xchg
jmp
arpl
inc
pop
pusha
lcall
subb
popf
ss
lods
push
dec
pop
xor
lret
cmpsl
pusha
xchg
out
mov
sbb
loopne
dec
adc
jne
outsb
in
in
jg
pushf
add
roll
outsb
fisttps
pop
cmp
int
pop
mov
mov
mov
xchg
jnp
sbb
cmpsb
push
xchg
xchg
and
les
repz
sub
mov
sbb
mov
aam
jno
cmc
inc
xchg
iret
enter
jbe
cld
popa
insb
mov
hlt
adc
or
and
inc
aam
sbb
outsb
xchg
incl
pushf
test
lea
popf
xor
push
sub
in
dec
int
mov
and
ljmp
shll
ret
cli
dec
mov
gs
add
stos
movups
sbb
je
mov
mov
mov
pop
cli
dec
mov
ja
sbb
xchg
dec
lds
dec
xlat
sub
push
shll
mov
insb
lods
call
or
test
pop
lcall
je
lods
sub
sub
dec
test
pop
sbb
aam
shrl
push
decb
lds
cmp
icebp
das
lock
jmp
lea
inc
xor
jecxz
push
out
repnz
jnp
outsl
in
mov
lock
shlb
outsb
in
sub
mov
sbb
add
ds
jp
mov
clc
or
popf
aas
rorb
loope
mov
xchg
xchg
add
shlb
add
rorb
xchg
ss
sarl
gs
cmp
jg
cmp
push
adc
inc
xor
mov
movsb
loopne
jbe
sti
mov
cmp
or
dec
sub
and
sahf
rorb
pusha
mul
scas
or
addr16
jecxz
sbb
sti
test
jl
xor
int3
cltd
rclb
repz
cmpsb
das
cmpsl
jnp
shlb
xor
outsb
in
outsb
sbb
out
lods
fisubrs
fmul
es
mov
xor
xor
and
loope
pop
pusha
lods
or
aaa
icebp
pop
mov
scas
pop
add
xor
and
jae
arpl
imul
sbb
or
stc
adc
add
xor
and
jae
arpl
imul
sbb
or
stc
adc
add
xor
and
jae
arpl
imul
sbb
pop
lds
push
aaa
loope
mov
jae
mov
repz
aam
pop
mov
pushf
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stc
inc
mov
mov
sbb
mov
or
add
add
add
add
add
push
add
filds
dec
add
add
add
add
add
pop
add
add
xlat
add
add
jo
inc
add
add
add
add
add
add
add
outsb
add
inc
add
add
dec
add
jns
ja
jo
pop
add
add
adc
hlt
add
add
add
add
add
pop
add
add
add
add
push
add
dec
add
add
add
add
cmp
dec
add
popa
add
adc
add
add
add
add
add
cmp
push
add
add
jo
cltd
add
add
add
xor
push
add
in
add
add
add
jo
fadds
jnp
dec
add
popa
add
add
jb
ja
fiadds
mov
cmp
das
add
add
adc
pop
add
add
test
adc
pop
add
jo
adc
add
lock
add
add
xlat
add
add
dec
add
jb
stos
add
add
xor
push
add
add
xchg
adc
enter
daa
add
popf
add
sbb
xchg
add
adc
insl
add
pop
add
add
add
add
jb
add
add
add
add
push
add
ljmp
add
add
inc
add
add
jb
jns
insb
add
add
add
add
popa
add
add
add
add
add
mov
add
add
xlat
add
xor
dec
add
add
jb
jo
push
add
xchg
add
add
popa
add
add
add
add
add
jns
push
add
add
add
xchg
adc
add
add
add
add
and
push
add
add
add
adc
sub
mov
add
adc
add
xor
outsl
add
add
add
add
add
add
add
addl
int3
add
add
sbb
add
add
scas
add
adc
adc
add
add
pop
add
add
add
add
xlat
add
add
inc
add
add
add
jb
sahf
add
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
inc
add
mov
add
add
jo
inc
add
scas
add
add
add
dec
add
jae
outsl
add
add
xchg
add
inc
add
add
add
add
add
xor
popa
add
add
add
add
cmp
popf
add
add
add
stos
add
popa
add
add
add
jo
and
das
add
dec
add
mov
add
add
add
popa
add
add
add
add
add
or
add
add
add
daa
inc
jp
js
push
je
push
adc
mov
cmp
or
push
je
mov
dec
cmp
popa
movl
popa
fistl
jnp
sahf
push
jae
push
test
testl
test
adc
cmp
sub
mov
jo
pop
lods
into
xor
xchg
push
ret
mov
pop
nop
sbb
lds
jecxz
movsb
fimuls
and
int
dec
or
leave
mov
cwtl
insb
and
jge
sub
cmp
inc
and
push
test
mov
cmp
cwtl
push
imul
ss
ficomps
mov
int
mov
mov
pop
xor
lcall
imul
mov
mov
call
sub
fs
paddd
jl
jg
int
sub
cmpsb
and
int3
dec
jb
subb
jmp
jge
aas
sbb
daa
inc
xchg
xchg
mov
or
pop
jb
xor
enter
loop
mov
bound
ljmp
scas
push
sbb
enter
add
inc
scas
push
jne
and
push
add
adc
adc
push
je
sbb
xlat
sbb
outsl
add
mov
and
inc
lret
sbb
sub
or
cmp
insb
mov
cmp
bound
cmc
rorl
inc
jo
pop
fwait
sbb
mov
xchg
mov
push
mov
cmp
into
lret
ret
sbb
stos
dec
outsl
sarl
add
push
mov
loopne
lret
sbb
push
lock
gs
pop
fldt
scas
adcb
jmp
pop
pop
dec
dec
mov
sub
push
dec
cmpsl
lea
cmpsb
shlw
jge
sbb
xor
mov
pop
addr16
adc
add
or
notl
push
sbb
push
pushf
sahf
dec
xor
pop
cmpsb
fdiv
and
push
sbb
or
sbb
xchg
aaa
push
mov
pop
push
mull
pop
push
rep
add
imul
xchg
fidivrs
movsb
call
ss
sub
dec
es
xor
xor
ret
sbb
xor
adc
arpl
aad
insl
sbb
xchg
dec
mov
dec
fxch
mov
mov
mov
subb
jno
xchg
mov
outsl
call
std
xor
shl
pop
in
adc
xchg
add
imul
aaa
scas
test
xor
into
out
lock
aas
sub
scas
mov
sub
ror
idiv
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
