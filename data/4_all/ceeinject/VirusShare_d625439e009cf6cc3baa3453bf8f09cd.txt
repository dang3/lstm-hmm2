call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
scas
fstpt
out
loopne
mov
stos
lahf
mov
inc
push
dec
push
outsl
outsb
sbb
dec
aas
pop
das
scas
fistpll
out
out
lahf
decb
cs
ds
jp
push
outsl
outsb
xor
dec
aas
pop
das
scas
jns
or
scas
inc
into
mov
popf
cs
ds
jge
xor
add
dec
out
mov
mov
cmp
outsb
in
aam
mov
cmp
outsb
add
rcrb
and
mov
adc
mov
lds
push
fsubs
fwait
aas
xchg
or
dec
mov
bound
xor
pop
mov
out
jbe
dec
xor
cs
push
pop
icebp
jle
xchg
into
in
div
sub
sahf
call
clc
sti
pop
out
out
mov
mov
fisubrl
scas
addl
orb
push
push
or
xor
add
mov
jle
push
jl,pt
sbb
lahf
xchg
lahf
jecxz
jl
scas
insb
dec
mov
leave
mov
push
sarb
jl
iret
push
scas
jle
push
pop
imulb
jg
dec
shll
inc
lock
mov
out
out
lahf
decb
cs
ds
jge
push
outsb
and
dec
daa
pop
sbb
jmp
sti
addl
lahf
call
insl
fidivl
or
pusha
or
inc
lods
cltd
int3
mov
mov
subl
ficomps
sub
sub
cmp
pop
pop
lods
fisubrl
out
lahf
sub
decb
cs
ds
push
jg
outsl
outsb
pop
jle
dec
aas
pop
das
scas
fistpll
out
out
lahf
decb
cs
ds
push
jg
outsl
outsb
pop
jle
dec
aas
pop
das
scas
fistps
cltd
xor
clc
push
xchg
rcll
out
dec
sti
out
iret
mov
addr16
insb
mov
test
xchg
push
push
jno
jno
mov
fld
fsubrl
dec
mov
jmp
pop
dec
mov
xchg
add
data16
mov
cli
scas
aad
push
or
mov
push
sub
push
dec
nop
fucomi
ja
and
std
in
mov
mov
outsb
mov
xor
popw
mov
xchg
aad
lcall
test
sbb
push
lret
xor
mov
cmp
loop
sub
fsubl
pop
loop
hlt
xor
iret
mov
dec
inc
jecxz
jg
hlt
add
mov
insl
std
add
scas
out
lods
pop
push
dec
scas
push
inc
out
add
push
xchg
mov
mov
mov
adc
std
cmpl
lds
repnz
jnp
jo
and
stos
nop
into
pop
cmpsb
mov
fsubrs
push
data16
stc
sub
inc
ret
ret
mov
jbe
push
or
add
xor
fisttpll
sbb
jb
dec
jb
cmp
xchg
xchg
shrb
sub
outsb
jo
out
pusha
pop
das
negb
dec
add
xchg
pop
dec
mov
mov
cmp
mov
and
test
into
ss
arpl
push
cmc
in
call
cmp
adc
std
in
jge
mov
push
and
imul
pushf
inc
adc
xchg
ja
mov
push
mov
jp
push
repz
jl
arpl
movsl
insb
mull
movsl
js
xchg
xchg
xchg
ds
xor
push
out
dec
sub
ja
rol
cmp
jmp
fs
loope
rcrb
pop
into
addl
mov
push
cmp
iret
inc
push
imul
pop
popf
repz
inc
shlb
outsb
lods
push
imul
push
icebp
xor
or
popa
data16
imul
jo
push
ds
mov
les
rorb
or
iret
adc
lods
leave
dec
sahf
mov
jl
rclb
push
jno
sarb
jbe
shlb
jle
repnz
rorb
push
inc
nop
in
outsl
idivb
lret
dec
xor
addr16
mov
and
popa
std
ljmp
pop
daa
xor
scas
std
or
jmp
push
push
mov
sub
cmp
mov
gs
sbb
arpl
mov
and
mov
aaa
lret
xchg
jge
jmp
inc
mov
mov
movsl
add
jne
test
das
mov
and
outsb
add
dec
inc
add
jo
inc
and
das
mov
fisttps
gs
pop
mov
push
dec
cmp
jae
xchg
xchg
cmc
jle
nop
sti
mov
inc
sbbl
jo
cmp
xor
lahf
mov
lret
bound
mov
scas
or
in
push
sbb
push
push
push
in
cld
ret
stc
loopne
pop
stc
mov
add
fwait
cmp
scas
adc
insl
bound
sbb
mov
rorl
pop
cmpsl
push
adc
cmp
jns
inc
pusha
gs
inc
mov
out
add
mov
xchg
adc
aad
lret
loope
xchg
xchg
dec
mov
sub
fstpl
scas
mov
cwtl
mov
jecxz
xor
aas
bnd
into
jle
call
sbb
lock
jns
xor
adc
cmp
fmull
das
ret
repnz
push
adc
out
movsb
dec
into
add
and
movsb
loopne
pusha
cs
insl
outsl
mov
inc
daa
jge
cmpsl
subb
xchg
jnp
xor
insl
sbb
dec
mov
fstpt
cmp
ret
sub
xor
out
in
lds
or
fisubs
fstps
loope
stos
test
jno
jg
or
mov
jmp
popf
aam
jle
pushl
and
in
inc
mov
decl
xor
sub
and
cld
std
ss
jb
notb
mov
outsb
shll
and
dec
test
inc
test
xor
inc
lret
pop
ret
aam
mov
jl
push
dec
jg
mov
mov
push
jno
clc
push
fsubp
gs
push
or
cmp
xor
push
sub
sub
popf
sbb
fidivl
loopne
cmp
or
mov
cmp
lret
sahf
fists
jmp
out
or
sbb
movsl
hlt
lock
es
lods
out
std
mov
popa
mov
or
and
add
rcrb
xchg
scas
xor
jl
cltd
cmpb
sahf
mov
nop
loope
jb
inc
inc
movzwl
test
jo
cli
sbb
jno
dec
and
mov
mov
cld
push
orb
stos
sbbl
aam
cltd
ret
mov
loop
sub
adc
out
addr16
movsb
filds
pop
inc
mov
xchg
movsb
hlt
test
push
gs
mov
into
les
stos
jl
decl
into
sti
jnp
lods
jb
jg
xchg
ja
movsl
pop
inc
inc
lds
test
gs
sbb
into
adc
mov
or
ja
loop
loop
mov
mov
pop
dec
call
pop
adc
pop
jp
adc
stos
negb
loop
test
pop
mov
push
fs
push
lcall
jo
or
mov
jle
jg
inc
jecxz
imul
ljmp
cmp
cwtl
pop
jl
lock
aad
iret
loop
ret
fadd
scas
push
sub
inc
loopne
xchg
mov
divl
fmul
mov
sub
cmp
xchg
ljmp
jb
inc
pop
xchg
fcoml
loopne
cmp
mov
push
and
das
push
dec
jge
lcall
shll
jmp
je
test
and
loopne
imul
lods
ja
inc
fwait
in
sub
mov
into
sbb
jp
or
xchg
jl
icebp
in
and
jecxz
int3
dec
dec
rorl
arpl
jnp
push
fucomi
push
in
popf
xchg
mov
adc
cmc
icebp
fdivrs
fistps
dec
add
sub
les
mov
dec
rorb
mov
mov
daa
incl
popf
loop
test
mov
out
inc
lea
sub
xchg
mov
test
in
mov
js
inc
fsubs
sbb
or
mov
imul
dec
and
sarb
adc
jnp
sbb
pusha
movsl
fnsave
adc
dec
lret
movsb
mov
lds
pushf
movsb
or
ja
stos
inc
negb
or
aaa
pusha
pushf
cltd
cmp
mov
mov
in
into
into
leave
or
mov
ja
ja
jnp
xchg
sbb
inc
in
xor
ds
lea
in
mov
iret
mov
sbb
jmp
xlat
sti
aas
cmc
cmc
cltd
push
ror
movsl
push
inc
movsl
and
and
xlat
xchg
mov
lret
mov
inc
cmp
mov
xor
les
xchg
shl
pop
pop
ss
cmp
iret
call
jb
testl
push
movsl
loop
sub
rcrl
test
cmp
add
jl
xor
push
xor
dec
stos
lods
jmp
cmpsl
imul
outsb
pop
stos
bound
cwtl
icebp
js
mov
addl
push
aas
pushf
mov
jl
xchg
out
lcall
fnstsw
inc
add
adc
cmpsl
push
sub
jb
cmp
jae
lret
adc
popa
and
jno
adc
int3
nop
and
jno
loopne
sbb
mov
lods
movsl
xor
arpl
or
push
and
push
sbb
shr
fistpll
or
in
adc
popf
dec
jge
adc
dec
jmp
lahf
repnz
cwtl
xchg
arpl
dec
jae
mov
outsl
notl
popl
sbb
lret
hlt
test
subl
lea
adc
out
lods
daa
pop
sbb
adc
mov
dec
push
cmp
dec
jg
mov
jle
repnz
or
mov
xorb
test
mov
add
loope
scas
stc
inc
and
xchg
pop
adc
jnp
scas
pop
and
or
mov
mov
jg
aam
shrb
mov
cmp
jp
push
pop
sub
mov
out
dec
inc
sub
test
out
idiv
cmc
outsl
inc
inc
orb
xchg
pop
dec
mov
lods
enter
das
push
mov
scas
mov
adc
mov
out
cltd
rolb
icebp
add
jmp
roll
push
testl
xor
sbb
jnp
adc
xor
ret
sti
out
inc
or
xchg
in
pushf
mov
popf
and
mov
xor
mov
jmp
fbld
rcrl
cmc
jmp
push
in
in
addr16
test
pop
popl
xchg
icebp
add
mov
test
popa
fs
xor
cmpsl
cld
rolb
loope
jnp
push
cs
addl
pop
jns
sbb
mov
xor
test
mov
dec
push
std
mov
insb
call
lcall
jae
or
test
push
sbb
push
cmc
cltd
ret
jmp
pop
decb
ljmp
jmp
loop
adc
div
cmp
mov
in
inc
xor
movsb
insl
movsb
std
jo
stc
imul
fs
and
stc
inc
cmpsb
mov
les
ss
cmp
mov
mov
mov
mov
fwait
dec
and
sbb
pusha
mull
cld
aad
fnsave
mov
and
in
xchg
cs
dec
push
outsb
ror
mov
lock
into
rclb
jl
scas
pop
popa
cmp
dec
pop
addr16
js
and
negl
js
cltd
pop
inc
xchg
adc
std
push
pop
addr16
popf
mov
cmpsb
icebp
insl
js
outsb
and
std
push
out
std
ds
dec
pop
and
ret
pushf
push
sub
jne
mov
xor
push
les
cmc
lds
xorps
arpl
imul
and
mov
imul
jo
test
xchg
and
jne
sbbl
sub
mov
shrb
pop
pop
cmp
sub
loop
clc
inc
dec
inc
pop
xchg
inc
sbb
out
ds
sub
enter
mov
jbe
push
sub
mov
xor
sbb
dec
lods
enter
out
xchg
push
aaa
cmp
fiaddl
push
mov
and
jmp
xchg
jg
xchg
inc
sub
iret
fcmovne
or
test
cmpsb
imulb
aad
imul
lret
and
push
into
ss
mov
mov
xor
daa
mov
inc
mov
outsl
mov
arpl
mov
mov
shrb
mov
mov
jno
lret
repz
sti
push
fidivrl
fdivs
pop
imul
fstpl
cwtl
clc
sub
outsb
add
int3
test
adc
push
dec
push
jecxz
inc
inc
cmpsb
ljmp
fidivrl
xchg
repnz
ja
or
pop
xor
addr16
mov
inc
cmp
ja,pn
xchg
cmp
pusha
mov
inc
cmp
fstps
loop,pt
xorl
cmp
std
dec
mov
stos
xchg
inc
loopne
mov
jecxz
pushf
lret
loop
jbe
or
mov
fs
jg
pushf
and
push
mov
add
mov
sub
lcall
xor
mov
cmp
xchg
test
jge
popa
jo
leave
mov
mull
test
repnz
cmp
xor
add
push
mov
inc
mov
dec
add
addr16
nop
jb
cmpsl
sbb
mov
dec
lahf
sar
push
pop
inc
pop
add
lahf
push
sub
push
sub
adc
and
jp
mov
aad
or
lock
enter
ss
add
clc
dec
lds
push
push
fldenv
sbb
and
das
les
nop
in
xchg
outsl
jmp
sbb
mov
inc
pop
mov
inc
icebp
pop
lods
jecxz
xor
jp
shr
inc
shl
sub
pop
mov
push
cmc
adc
pop
bound
adc
add
jnp
mov
adc
jne
mov
xchg
insb
cwtl
dec
repz
mov
xor
push
and
sahf
pop
popa
mov
mov
jo
jb
pop
fists
sbb
out
in
scas
dec
lcall
aaa
or
stc
jl
sbb
ljmp
lods
add
daa
pop
loop
cmp
out
lcall
xchg
xchg
mov
movsb
sar
ja
sub
shrb
xor
mov
pop
fs
sahf
int
cwtl
lods
xlat
shrb
mov
jg
in
sub
cmpsl
xchg
sub
mov
shrl
and
sub
sahf
inc
add
cmp
scas
and
leave
mov
fsts
enter
add
mov
mov
sub
lods
or
jg
push
ret
or
mov
mov
adc
sbb
imul
aad
push
test
dec
shll
stos
mov
add
jae
rcrb
movsb
mov
inc
jns
jns
xchg
push
add
pop
push
inc
inc
inc
das
push
jbe
inc
enter
mov
cs
xor
pop
lds
subb
scas
or
lods
cltd
inc
js
add
xchg
rcrb
aam
jno
lret
iret
cmpsb
cltd
daa
add
orb
mov
pop
sahf
and
out
sbb
pusha
repz
and
imul
jl
loope
pop
fstpt
xchg
pop
int3
test
cmp
mov
andb
xchg
stos
lcall
pop
cmp
lods
insl
cmp
inc
imul
pop
mov
mov
push
push
add
add
adc
mov
or
in
lods
xor
mov
jo
shlb
test
mov
cwtl
and
testl
adc
push
jg
mov
sbb
sbb
sub
mov
daa
sbb
xchg
cs
ret
sahf
jl
bnd
mov
out
lea
and
xor
xchg
push
and
jb
lock
lret
xchg
pop
dec
fwait
xor
xchg
fisubrl
inc
push
xchg
ret
mov
loopne
movsl
rcr
out
cld
pop
cwtl
stos
pop
cmp
popf
lods
call
cmp
shr
add
xchg
sub
mov
out
and
ret
or
ljmp
leave
push
icebp
insb
lods
cmp
fistps
add
pop
sti
or
ljmp
xchg
loope
arpl
jge
loopne
insl
inc
xor
push
mov
icebp
and
stc
in
mov
cmp
icebp
mov
mov
pop
jmp
dec
mov
jbe
data16
mov
lock
popfw
call
aam
jne
cmp
loope
loop
inc
sub
or
push
ret
push
lret
xor
ds
cwtl
sub
mov
jns
mov
out
stos
out
out
outsb
inc
cmp
fwait
lret
hlt
and
ljmp
adc
mov
outsl
xchg
shlb
sbb
pop
xor
insb
add
testl
iret
mov
sbbl
sti
pop
insl
jl
xchg
cmp
dec
xor
jnp
out
push
lock
test
repz
lods
inc
add
inc
or
jmp
stos
pop
ss
gs
inc
add
repnz
jne
test
push
rclb
sub
test
mov
adc
mov
stc
push
inc
xor
repnz
cmp
inc
fdivrs
cmp
cmp
movsb
movsl
and
cmp
jnp
scas
xlat
pop
out
jns
clc
pop
outsb
cmp
push
inc
imul
xor
xor
adc
pop
dec
stos
call
push
sub
daa
loop
jns
pop
push
dec
add
and
arpl
fcmovne
cmp
adc
daa
aas
push
pop
orb
lahf
add
jecxz
fwait
xor
lret
mov
and
adc
leave
nop
ds
movsb
jmp
pop
xor
add
jmp
sub
jmp
insb
outsb
pushf
hlt
or
or
test
jle
bswap
sbb
add
mov
lahf
jp
ficoms
cmp
test
xor
int3
icebp
loopne
aam
xchg
adc
mov
sub
test
cmp
mov
pop
and
inc
out
lret
mov
pop
xor
jle
outsb
push
ljmp
rcr
sub
repz
cwtl
push
out
loop
jbe
xor
or
cmp
sub
bound
stc
xchg
out
pop
loope
hlt
dec
mov
xchg
xchg
jg
dec
fidivs
sar
cmpsl
ret
daa
cmpsb
cmp
pop
js
test
push
add
mov
cmp
xchg
daa
repnz
stos
and
out
sub
pop
xlat
xchg
inc
fnsave
lods
mov
pop
popf
dec
sarl
ja
xchg
lds
shr
cli
inc
cmp
add
and
dec
push
dec
jecxz
movsl
jne
insl
xor
sub
gs
movsbl
cli
and
jl
daa
fwait
rclb
cmc
enter
and
jo
pop
in
adc
gs
imul
cmc
adc
jp
popa
call
push
iret
jae
jb
scas
cwtl
pop
in
xor
test
mov
sub
ret
sbb
nop
dec
jmp
roll
jge
testb
push
xor
iret
xchg
mov
insl
lea
roll
xchg
in
hlt
add
fbstp
outsb
jge
mov
mov
loopne
mov
test
inc
mov
xchg
fwait
pushf
jno
xchg
stos
jge
aas
mov
cmpb
lahf
xchg
add
push
inc
lret
push
es
mull
rcrb
scas
jae
xor
repz
mov
lods
push
je
push
push
mov
sbb
or
xchg
fldenv
lds
or
jg
mov
lret
daa
fcmovu
jmp
fs
cmc
push
push
hlt
decl
ja
mov
ret
adc
test
jbe
add
dec
int
mov
and
pop
out
pop
lods
fwait
inc
mov
scas
mov
sti
gs
xchg
out
lock
push
mov
out
imul
add
movsl
arpl
xchg
xchg
call
sbb
aam
pop
cmpsb
jle
inc
sub
lds
or
and
xor
inc
push
lea
addb
clc
jne
push
mov
push
mov
push
or
std
lods
sbb
inc
push
adc
sbb
lret
aas
shlb
pop
mov
xchg
pop
jbe
xchg
mov
xor
xchg
lea
stos
stos
sub
mov
pop
mov
mov
and
popa
mov
jb
mov
add
pushf
xor
sbb
call
adc
jns
pop
jmp
stos
test
cmp
pop
xor
push
arpl
btsl
sub
mov
cltd
jne
lss
or
mov
in
test
ficomps
fwait
cmp
es
hlt
aam
popf
inc
push
inc
xchg
bound
in
ja
push
stos
stos
mov
into
stc
inc
xchg
adc
std
hlt
xchg
bound
xor
push
iret
cli
push
dec
sbb
fwait
xor
dec
sub
iret
pop
push
jnp
daa
xor
out
adc
orl
movsl
lods
sbb
ds
jo
dec
cs
addl
popa
mov
xor
addr16
sub
cmp
push
xchg
fidivrl
ficomps
repz
rcr
sbb
adc
and
imul
mov
jbe
dec
loopne
xor
fldl
mov
xor
call
push
dec
scas
fs
imul
leave
scas
mov
arpl
mov
stos
dec
shrb
enter
fwait
xchg
in
sahf
inc
cltd
jne
loope
lcall
std
cs
ret
jo
test
repnz
jno
dec
sarb
sarb
into
test
sbb
ret
jbe
push
xchg
xlat
rcll
inc
repnz
and
in
sti
push
adc
leave
pop
movsb
pop
sahf
movsb
lock
lods
jns
mov
or
pop
adc
xchg
cmp
xor
jo
js
arpl
xor
and
cmp
xchg
or
xor
xchg
push
inc
pop
aam
movsl
sub
mov
jmp
loope
ds
jge
inc
jge
dec
cmp
or
xor
push
movb
pop
std
push
push
ror
lcall
xchg
sti
sahf
fcmove
sar
sahf
out
out
lahf
decb
cs
ds
push
jg
outsl
outsb
pop
jle
dec
aas
pop
das
scas
fistpll
out
out
lahf
decb
cs
ds
push
jg
outsl
outsb
pop
jle
dec
aas
pop
das
scas
fstpt
jmp
lahf
in
mov
ds
push
jg
data16
sbb
dec
ss
lret
scas
cmp
scas
out
lahf
decb
mov
push
sbb
divb
inc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
imul
pop
fisubs
push
pop
sarl
sahf
ljmp
dec
test
push
cltd
push
imul
pop
fisubrs
scas
cmp
jmp
dec
fstps
pop
mov
push
imul
pop
sub
sbb
aaa
mov
dec
lret
jno
mov
xor
loop
xchg
jno
mov
xor
dec
ficomps
xor
test
xchg
movsb
mov
fidivrs
dec
cmc
jno
popa
push
xchg
je
aaa
push
mov
enter
adc
jl
jmp
ret
mov
in
jle
and
mov
or
cltd
pop
imul
scas
push
cli
sbb
sbb
es
adc
push
cmp
add
xor
cmc
xchg
addl
jbe,pn
cltd
fwait
push
adc
push
add
sbb
push
mov
mov
dec
or
sbb
xlat
pop
fisubrs
scas
cmp
jmp
push
flds
ss
pop
or
sbb
lods
push
fbld
popf
sti
cltd
add
das
dec
clc
cmp
popa
jmp
xchg
sub
jb
dec
cli
pop
lods
fwait
sbb
pop
pop
pop
fdivrl
loopne
repz
out
jns
rsm
cmp
insb
popf
cmp
jmp
dec
fstps
cs
push
imul
pop
fisubrs
scas
cmp
jmp
dec
fstps
cs
push
imul
es
and
xchg
notb
or
inc
sub
call
orl
popf
inc
idiv
sbb
xchg
adc
dec
nop
xchg
sub
into
push
leave
dec
mov
scas
mov
push
aad
mov
mov
add
cmp
add
mov
lods
xchg
insb
lret
sahf
lea
aad
insl
pop
xor
lods
pop
jo
pusha
das
decl
in
or
push
push
lret
fmuls
cwtl
leave
adc
adc
sarb
stos
popf
add
cmpl
sahf
cmp
loopne
mov
hlt
jle
mov
jmp
nop
mov
lcall
and
cld
mov
mov
sub
jnp
fs
push
xchg
or
adc
fstpt
out
pop
dec
gs
mov
sarl
mov
lock
aad
or
and
sbb
mov
call
or
inc
aas
mov
sbb
iret
inc
add
xor
jmp
lods
mov
bound
push
push
hlt
inc
fnstenv
test
inc
add
inc
addr16
fsincos
and
out
into
jmp
outsb
aad
pop
hlt
xlat
jb
cmp
sbb
sub
mov
test
xchg
das
loopne
ja
icebp
push
pop
jle
ret
mov
aad
scas
cmp
shrl
lret
cmp
adc
mov
push
ljmp
cs
fnsave
cmp
jmp
test
push
into
fdivs
popa
xchg
data16
shll
out
xorl
stos
add
mov
xchg
stc
insb
xchg
pop
pop
xchg
or
pop
movsl
mov
mov
push
iret
filds
mov
sbb
mov
mov
shrl
inc
cs
cmpsl
dec
or
stos
inc
push
in
mov
in
xchg
je
aad
fldt
sarl
cmp
dec
push
inc
orb
jnp
call
ljmp
pop
xchg
mov
out
cmp
push
out
je
nop
repz
xor
rorb
pop
test
pusha
mov
push
test
shrb
adc
pop
push
daa
ljmp
pushl
leave
fwait
lock
std
push
int
dec
aad
pusha
push
mov
xchg
cmp
out
push
mov
xor
loope
adc
mov
xor
stos
xchg
xchg
iret
inc
xchg
mov
cmp
cmc
sub
dec
imul
sub
and
xor
mov
and
movsb
pushf
call
shl
jo
inc
mov
adcl
movsb
xor
push
xlat
push
rorb
stos
lods
ljmp
or
in
pop
out
cli
xor
or
adc
push
inc
pop
cld
jl
arpl
test
adc
push
push
sub
iret
ds
adc
movsb
push
addb
sbb
pop
repz
xchg
ret
idivl
ficoml
dec
aaa
hlt
inc
xor
dec
in
mov
xor
push
repnz
sbb
mov
mov
xchg
cld
decl
clc
rorb
and
dec
arpl
and
add
push
js
ret
push
lret
int
lret
xchg
cmp
das
test
fldt
stos
add
or
aas
xchg
aam
icebp
mov
scas
sarl
fidivs
lods
out
icebp
pop
repnz
dec
mov
scas
enter
push
or
jle
jnp
sbb
pusha
add
scas
dec
jne
pop
push
sahf
cmp
popf
mov
xor
cs
pop
lock
test
daa
or
adc
push
out
mov
adc
sub
pop
push
add
push
in
add
insb
lods
insl
sbb
lahf
cli
testl
add
or
pop
jg
imul
push
and
jo
cmpsb
and
in
xchg
lcall
jbe
icebp
fnstenv
mov
addr16
dec
sbb
pushl
or
jecxz
mov
bnd
xchg
inc
pop
bnd
jns
shll
xor
outsl
xchg
insb
and
adc
faddp
jno
cmc
test
jecxz
sbb
int3
shl
jge
movsl
adc
stos
aad
mov
into
outsb
aam
sub
jne
xor
subl
jnp
aad
and
and
out
pop
movsl
xchg
mov
or
shr
mov
dec
sub
ljmp
inc
mov
les
pop
sub
dec
mov
ficomps
adc
not
add
in
mov
test
rcrb
inc
pop
xchg
cmp
jecxz
jnp
lahf
roll
adc
in
mov
mov
aam
loope
mov
out
adcb
sbb
insl
xor
lods
imul
icebp
in
rorb
jns
push
xchg
sub
pop
not
or
nop
cmpsl
scas
lea
jmp
jae
das
ret
sub
fadd
cmp
shrb
adc
into
rorl
stos
pop
cs
mov
or
and
repz
mov
push
xor
sub
test
out
insb
mov
or
arpl
dec
test
xchg
mov
jne
repz
mov
aas
push
jge
inc
jo
jp
mov
push
cmp
int
out
pop
out
in
sub
pop
xor
lock
leave
shl
movsb
dec
dec
dec
and
aam
mov
xchg
cmp
inc
bound
out
pop
push
jecxz
gs
cmp
xchg
push
das
ficoml
cmp
and
mov
sbb
add
int
lea
xchg
push
mov
fwait
mov
mov
cli
lea
lea
pusha
jg
lea
push
pop
aam
flds
xchg
je
and
adc
jl
data16
xor
fwait
xlat
or
xor
enter
repnz
clc
cmp
int
adc
fdivrp
mov
rcrb
loope
sub
sub
jbe
and
sub
cs
fiadds
testb
test
shlb
or
push
push
popf
into
aaa
cmp
scas
sub
adc
lret
bound
cwtl
pop
pop
rolb
faddp
test
push
adc
push
inc
fisttps
fldl
shl
das
cmpsl
std
xchg
loope
test
mov
xchg
inc
inc
lods
cmc
ss
ret
jo
fadds
cmpsl
inc
or
rcl
dec
lcall
call
sbb
mov
scas
aas
fldl
jmp
stc
in
xchg
jg
loop
mov
sti
fs
xchg
orl
mov
ret
loop
cmp
mov
mov
sbb
sar
inc
mov
popf
scas
ljmp
sti
pop
jbe
xchg
sub
loope
movsl
push
repz
adc
addl
enter
adc
shl
dec
inc
cld
fcomi
push
push
sbb
fcmovnbe
push
cltd
ficoml
icebp
and
mov
xlat
loopne
mov
inc
push
push
sub
cmpsb
mov
cmp
daa
inc
or
dec
sbb
hlt
cltd
cmp
test
test
add
stc
lahf
gs
cmc
mov
and
ds
test
pop
mov
jae
fwait
je
mov
xor
mov
fidivl
mov
cmp
outsb
aas
loope
cmp
les
inc
out
fs
sub
xchg
mov
inc
sbbb
lret
aad
lods
test
jg
mov
scas
push
aas
or
xchg
lret
jmp
cld
xchg
xlat
or
out
leave
bound
nop
inc
inc
push
dec
inc
pop
cwtl
cmp
xlat
mov
xchg
jb
xchg
or
sti
mov
xlat
lock
cmp
jge
arpl
jo
sti
pusha
add
or
int3
in
xor
jne
xor
mov
insl
dec
insb
pop
cld
sub
pop
mov
push
addl
imul
sbb
push
xor
and
leave
mov
lea
fstl
sub
enter
outsb
daa
cmpsl
lea
jmp
mov
rcl
shrb
inc
push
gs
mov
cmp
xchg
pop
in
stos
lret
adc
arpl
jo
mov
push
mov
rclb
in
inc
inc
jl
in
jl
repnz
loop
and
jae
lret
movsl
adc
call
ljmp
test
push
mov
sbb
sub
jl
das
jmp
dec
dec
push
inc
jl
jo
cmp
mov
sub
adc
pop
pop
cmc
stos
add
push
sbb
insb
cmp
pop
les
dec
or
xor
mov
xchg
dec
xchg
fwait
or
push
orb
clc
scas
pop
adc
adc
stc
out
inc
cltd
dec
adc
adc
cmp
loop
es
mov
pusha
dec
test
std
lret
mov
pop
addb
inc
rorl
jle
inc
imul
js
scas
sbb
jmp
aam
rclb
xchg
sub
cs
lods
repnz
cmp
movsb
es
mov
push
lcall
fmuls
in
push
push
mov
xor
lods
inc
in
jg
and
inc
xor
fisubl
pop
inc
fstpt
sub
xchg
cli
enter
dec
mov
jl
ret
and
sub
xchg
arpl
dec
mov
jns
test
stos
call
stos
arpl
es
inc
sub
out
subb
shlb
inc
adc
imul
inc
in
mov
mov
sub
es
mov
mov
mov
xor
sbb
cmp
dec
xchg
mov
je
cwtl
push
push
sub
mov
pop
mov
push
push
jae
fmull
rclb
dec
ret
test
aaa
mov
jbe
js
jns
bt
or
pop
sbb
pop
imul
adcb
faddp
inc
fldcw
clc
cld
or
ja
idiv
nop
lcall
jb
xor
mov
xchg
daa
bound
popf
sbb
lods
mov
pusha
scas
cmp
aad
pop
in
fs
jnp
jb
dec
or
test
enter
jae
cs
inc
fwait
jp
scas
pop
lods
dec
jecxz
fistl
loopne
and
mov
pop
xlat
and
in
mov
push
es
mov
int
cmp
dec
cmp
add
loope
fs
imul
jge
pmullw
pop
push
lea
fwait
pop
dec
cltd
mov
adc
stos
push
inc
mov
add
sub
dec
dec
stc
arpl
push
mov
or
sbb
push
addl
mov
ljmp
mov
mov
push
xorb
sbb
out
xor
mov
pop
rorl
insb
xor
shrl
movsw
pushf
movsl
xor
imull
fwait
adcl
lods
insl
sbb
les
xor
aas
mov
scas
mov
mov
imul
xchg
xor
fcmove
push
es
xor
insb
and
mov
clc
adcl
push
pop
dec
and
push
movsl
lods
call
into
mov
adc
mov
into
and
test
frstor
add
sub
inc
inc
dec
scas
mov
flds
adc
inc
pusha
mov
inc
add
jle
jg
aas
notb
add
adc
inc
cmpsb
mov
xchg
pop
enter
mov
dec
adc
mov
jne
mov
sub
cld
cmp
aam
mov
fstpl
test
cli
and
lahf
and
pop
test
inc
pop
or
sub
and
xchg
xchg
lret
cmp
sbb
and
lods
mov
sub
loope
js
or
je
sbb
shlb
pop
or
sub
sbb
pop
mov
es
mov
xchg
jg
push
sbb
in
jmp
push
add
xlat
and
popf
sbb
mov
orb
fcmovb
or
imul
aas
adcb
mov
cmp
fcoml
add
pop
cmpsb
shr
out
jmp
push
out
mov
mov
mov
repnz
mov
sti
es
cmp
pop
cmpsl
test
push
enter
aam
pop
insb
filds
jne
dec
dec
jns
cmpsl
in
testl
prefetch
or
pop
sti
jle
jo
push
jmp
sbb
jp
sub
jge
pop
test
cli
jne
repz
push
ss
fstpt
int3
add
jne
sbb
xchg
shrb
mov
or
sub
dec
fst
std
cmp
xchg
test
inc
push
sti
shrl
mov
pop
or
scas
pop
pusha
jbe
mov
test
sub
push
repz
push
loop
add
rorl
mov
lods
shlb
push
push
xchg
fldt
xchg
sub
or
mov
and
mov
xor
jne
out
jg
and
push
das
inc
mov
jb
mov
cwtl
cmpsl
push
adc
dec
js
xorl
leave
leave
test
push
jb
mov
jp
push
adc
inc
xor
insl
dec
mov
inc
jmp
es
pop
popa
pcmpeqw
dec
mov
pushf
pop
mov
rcrb
arpl
bound
aaa
loopne
sub
push
sub
push
push
mov
pop
push
arpl
movsb
popf
pusha
mov
pop
jnp
out
js
iret
nop
sahf
xchg
adc
or
adc
frstor
sub
sub
es
push
jns
mov
adc
cmpsl
cmp
push
jge
push
stos
aas
or
mov
or
mov
push
xchg
fstps
js
xlat
push
sbbl
fldt
mov
loop
jg
xchg
out
jb
add
mov
cmp
push
pusha
stc
jg
bound
loop
pop
mov
in
push
cs
push
xchg
nop
and
das
pop
in
mov
in
inc
sub
cmp
push
sbb
mov
call
xchg
push
aam
mov
jg
fwait
inc
lret
mov
jle
xor
shrb
popf
sbb
jge
popa
subl
mov
push
mov
insb
inc
and
xchg
mov
pop
mov
push
and
mov
in
cmc
in
sub
hlt
cli
lahf
inc
mov
aaa
cmpsl
mov
fwait
call
fisttpl
test
rol
fxam
stos
or
mov
into
fwait
test
push
add
outsl
inc
inc
mov
xchg
pop
inc
and
idiv
mov
xor
stos
gs
mov
out
push
test
movb
test
inc
jno
fisttpll
in
mov
stos
lds
dec
cwtl
rcrl
sbb
cld
rep
lcall
mov
icebp
adcl
stos
push
mov
xchg
and
cmp
and
fsubs
vmovntps
sbb
push
pop
add
insl
lods
or
data16
and
push
dec
pop
sbb
jl
push
add
in
bound
sbb
daa
and
cmp
xor
sub
add
jne
pop
xchg
int
jno
and
and
js
inc
cmp
lds
out
cmc
xchg
push
iret
out
les
lds
int3
jp
imul
mov
cvtpi2ps
sub
imul
inc
or
pop
mov
cwtl
cmp
lret
xor
pop
les
test
rcll
out
add
popf
inc
pop
jo
mov
lret
imul
or
ja
xor
fcoms
mov
movsl
loope
inc
pushf
insl
push
sub
test
pop
icebp
cmp
push
and
push
mov
test
push
stos
fdivrp
jle
das
fisttpl
notb
inc
lret
mov
in
cmp
xchg
adc
add
or
jns
push
sar
loope
inc
int3
pusha
gs
adc
mov
jnp
cltd
add
mov
fiaddl
cmc
mov
rolb
sti
add
push
pop
mov
sti
nop
pop
jnp
daa
sub
and
lret
aam
cmc
lea
adc
mov
jno
add
lods
ja
mov
mov
cmp
inc
scas
fwait
mov
add
push
pop
xor
pop
xchg
arpl
mov
xorl
xlat
inc
mov
sbb
loope
imull
insl
lret
test
push
negl
mov
push
test
fidivl
dec
lods
xchg
lods
leave
out
pop
clc
cmp
sub
jnp
and
notl
out
push
cs
in
pop
mov
jno
cs
je
icebp
push
daa
test
es
push
jne
sbb
or
fldt
pop
jb
imul
inc
icebp
mov
out
and
loope
imul
lock
push
orb
aaa
cmp
jbe
push
mov
icebp
pop
and
pop
leave
jg
and
dec
inc
jbe
leave
mov
ljmp
xor
lea
xor
push
lea
aas
pushl
stos
shlb
sub
jbe
sahf
xor
pop
jnp
cmp
fdiv
in
push
or
xchg
inc
mov
mov
adc
dec
pushf
push
mov
dec
mov
js
or
sti
js
dec
add
and
jno
inc
je
pop
pop
and
data16
out
test
jecxz
pop
cltd
nop
or
adc
mov
repz
in
and
in
push
shr
ja
push
insl
frstor
rcl
dec
lcall
push
cmp
jge
shrb
gs
inc
loope
push
fbld
sarl
push
mov
gs
mov
mov
mov
mov
pop
call
mov
and
and
xchg
aam
fisttpl
in
cwtl
mov
inc
mov
push
nop
push
loopne
mov
push
enter
push
shlw
int
mov
mov
dec
call
jne
jecxz
popf
nop
movsb
mov
aaa
push
sub
mov
in
stos
scas
ja
fs
jp
and
push
adc
cltd
dec
sub
push
das
in
and
jmp
cld
cli
int
jg
or
mov
cmp
pusha
and
jnp
xor
inc
mov
rclb
iret
sbb
jb
daa
mov
aad
xorl
dec
cmpb
jnp
sub
icebp
adc
repnz
sbbl
jb
test
inc
cmp
add
out
push
mov
negl
mov
sub
ljmp
sbb
mov
jl
pop
xchg
loope
aaa
push
or
pop
seto
hlt
sbb
aaa
mov
jns
adc
push
arpl
jno
iret
addr16
jo
pop
jns
aad
or
aad
cmpsb
or
xor
int
xchg
fisubs
mov
mov
daa
repz
pop
xlat
outsb
stc
leave
inc
inc
call
push
pop
cld
sbb
ret
inc
xchg
add
push
adc
incb
push
testb
outsb
inc
xor
xor
sbb
lcall
mov
test
mov
lods
jnp
pop
xor
pop
pop
into
flds
fwait
pop
mov
shlb
xchg
mov
sbb
xor
adc
out
outsb
or
push
pop
xchg
bnd
add
mov
sbb
insl
pop
adc
in
jecxz,pt
pop
mov
fcoms
cmp
stos
dec
sbb
dec
into
lods
or
in
xor
add
clc
not
pop
adc
int
lret
mov
lock
stc
outsb
mov
xchg
in
sarb
pusha
ja
mov
das
jno
and
or
lret
pop
sbb
mov
iret
bound
jbe
adc
insl
add
lods
aaa
out
ret
inc
addb
add
cmp
xchg
fldl
jo
daa
and
xchg
hlt
gs
clc
push
loopne
pop
repz
mov
add
repnz
insb
mov
xor
xchg
push
inc
popa
inc
mov
in
and
sub
das
daa
add
stos
dec
xchg
mov
sbb
int3
push
add
sarl
nop
inc
aam
dec
dec
mov
and
pusha
gs
sarl
sbb
adc
loopne
cmp
inc
add
mov
shl
inc
mov
adc
and
pop
lds
sub
ds
cltd
push
leave
xor
dec
lret
dec
and
fisubrs
scas
cmp
jmp
dec
fstps
cs
push
imul
pop
fisubrs
scas
cmp
jmp
dec
fstps
cs
push
imul
pop
fisubrs
scas
cmp
call
dec
fcomps
cs
sbb
jns
dec
lret
sub
cltd
pop
push
outsb
push
aam
dec
fldcw
fisubs
popa
popa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
clc
push
call
iret
hlt
pusha
lret
dec
mov
shrl
pop
repz
cmpb
sub
clc
push
call
add
xor
ret
push
inc
push
xchg
sub
clc
push
call
add
xor
mov
repnz
jbe
jnp
mov
mov
lret
cwtl
cltd
lods
sub
lret
fwait
sbb
xor
jge
cmp
xchg
mov
or
lea
mov
iret
cmpb
push
xchg
sbb
cmp
pop
adc
pop
in
mov
into
mov
insb
ffree
cs
loop
xor
shrb
mov
inc
mov
jb
and
repnz
xchg
sbb
cwtl
test
cmp
and
xchg
mov
mov
and
xchg
shrl
sub
sbb
mov
mov
xor
xchg
imul
pop
sarb
pop
jnp
sbb
sbb
fdivs
add
xor
loop
repnz
cmpb
sub
cld
es
add
pusha
roll
fadd
add
cmp
jnp
dec
shll
daa
popf
aaa
lea
mov
push
in
icebp
pusha
in
cmpsl
xor
sub
into
dec
addr16
mov
push
lods
dec
xchg
adc
ret
push
cmpb
sub
clc
push
call
add
xor
loop
repnz
cmpb
sub
clc
ja
pushl
adc
pop
xchg
jecxz
loope
lret
sub
jb
mov
mov
adc
mov
ljmp
cltd
cmp
sti
aaa
mov
fmuls
adc
pop
nop
add
pop
ljmp
out
dec
cmc
mov
insl
push
inc
add
jl
call
jb
roll
je
rorb
repnz
pop
test
cmp
enter
test
or
pop
gs
lea
xchg
aad
jns
mov
cmp
mov
movnti
adc
scas
loop
pop
pop
sbb
jmp
mov
dec
jmp
lock
inc
sub
adc
call
mov
cmp
push
js
repz
pusha
bound
dec
add
clc
sbb
xchg
ja
out
mov
addb
fwait
pop
fidivs
into
cmp
add
mov
push
divb
out
push
push
inc
add
jl
ret
into
jns
inc
cmp
sub
or
sti
lahf
cmc
pusha
imul
imul
pop
in
test
repnz
movsl
xor
imul
gs
into
and
in
inc
mov
adc
jnp
in
jmp
and
je
je
xor
pop
pop
lahf
push
cwtl
xchg
sbb
jmp
repnz
aas
add
repnz
mov
ljmp
scas
fimuls
mov
loop
lds
enter
cwtl
cmp
cmpsl
pop
scas
pushf
mov
in
mov
gs
add
sbb
push
adc
add
rolb
xchg
test
jl
push
arpl
cmp
fsub
pop
enter
mov
pop
or
lock
cwtl
push
std
sbb
inc
in
push
sbb
jbe
mov
loopne
pusha
jae
out
jo
xor
arpl
mov
int3
cmp
popa
xchg
in
ljmp
cmp
fwait
dec
push
shl
adc
pop
sub
mov
add
push
ret
dec
dec
xor
push
adc
sbb
jl
test
xchg
push
lret
sub
stc
leave
lds
pop
daa
mov
popf
lret
mov
pop
push
mul
shlb
xchg
loopne
addl
jne
xor
scas
xor
mov
sti
xchg
shll
call
stos
jge
call
ljmp
and
sbb
rcr
adc
cmp
push
xchg
push
push
ret
xchg
push
test
mov
das
dec
adc
int
sahf
and
daa
or
jmp
gs
inc
rcll
mov
shrl
mov
dec
mov
cbtw
or
mov
jge,pn
insl
bound
pop
xchg
ficoml
xlat
add
mov
pop
daa
cmp
mov
inc
pop
inc
clc
dec
mulps
sub
data16
sti
lock
sbb
xlat
pop
js
push
jg
jne
or
mov
add
inc
dec
leave
bound
jge
jle
jns
pop
orb
lcall
xchg
nop
mov
cmp
xor
fs
dec
pop
pushf
and
xchg
pop
mov
fdivs
cmp
mov
lock
jg
or
jl
xlat
int
inc
jmp
sti
push
pop
adc
pushf
outsb
in
loop
outsl
repnz
xchg
pop
mov
stos
xchg
fmull
inc
dec
push
mov
out
loop
rorl
push
in
pop
mov
pop
ljmp
jbe
mov
cmpsl
and
pop
pop
decl
mov
xchg
loopne
pusha
jbe
inc
rolb
cmp
xlat
inc
loopne
repz
data16
pop
scas
out
sub
in
adc
pop
jno
mov
push
mov
insl
out
sbb
mov
mov
dec
test
shll
rcr
push
hlt
les
outsl
ss
addr16
jne
repnz
jle
xor
iret
jmp
pop
outsb
pop
mov
jnp
clc
jo
xchg
mov
ljmp
lea
stos
jnp
lods
cmp
xchg
nopl
mov
jnp
sub
and
mov
xchg
flds
sbb
lret
out
sbb
es
push
dec
inc
ds
mov
fidivrl
jmp
in
test
je
xchg
aam
ret
clc
stc
aas
lds
xor
ljmp
mov
inc
push
js
mov
scas
mov
cmp
jg
mov
mov
idiv
mov
push
sbb
xor
addr16
dec
lea
push
hlt
jno
mov
fistpll
testl
lcall
sbb
and
addr16
movsl
bound
sub
addr16
dec
aam
sub
jl
incb
mov
mov
les
xchg
arpl
ljmp
sbb
addr16
dec
jge
pop
nop
pop
dec
jp
sub
insl
ljmp
int3
xor
dec
add
out
lods
dec
ljmp
jmp
imul
enter
testb
jge
xchg
cltd
push
inc
das
dec
push
int3
cmp
xchg
add
js
jge
push
sub
paddw
lret
pop
std
pop
cmp
es
sub
inc
mov
pop
or
xlat
jne
shll
fimuls
adc
jno
push
and
add
std
aas
stos
add
cmp
jle
push
dec
in
sbb
inc
or
mov
and
orb
shrl
xor
pop
cmp
mov
test
sbb
arpl
or
push
out
sub
jp
loope
sahf
dec
pop
sar
xchg
xor
les
outsl
repz
repnz
pop
or
xchg
xor
dec
nop
ss
out
xlat
loopne
mov
jp
test
std
mov
test
jnp
xchg
mov
cmp
inc
jo
outsl
cmp
sbb
xchg
sbb
aaa
mov
js
jno
xor
and
lea
in
fcoms
push
daa
das
jbe
push
mov
cmp
pop
cwtl
push
mov
cltd
pop
int
lahf
lods
in
cwtl
mov
cmpsl
cmpsb
cmp
jl
and
sti
stos
loop
mov
movsb
nopl
hlt
jne
pop
push
ds
xrelease
mov
imul
int3
mov
jg
fisubrl
cmp
xchg
pop
jne
fs
aam
push
andb
fnstcw
cmp
jmp
xor
xor
scas
repnz
mov
shrb
mov
in
nop
rol
mov
aad
inc
mov
aad
into
addr16
ret
cltd
in
sbb
sub
js
fwait
ret
mov
inc
or
repz
nop
pop
pop
push
in
in
aas
or
dec
xchg
and
cmp
or
add
cmp
ret
adc
or
ja
outsl
push
inc
sbb
dec
cs
lock
in
sub
xor
sbb
cs
xchg
mov
fs
icebp
add
fwait
cmpsl
roll
sti
in
std
in
popf
jg
jb
push
pop
dec
in
cwtl
adc
sbb
inc
cmp
pop
mov
jb
popf
xchg
es
daa
insl
popa
sub
mov
shll
lds
inc
and
popa
out
subb
rclb
push
mov
leave
sahf
fstps
popf
bound
ds
inc
add
addb
inc
xchg
pop
sbb
jnp
and
and
jae
sahf
in
imul
mov
and
loope
cmp
cld
sbb
dec
or
sub
and
pop
into
mov
lahf
add
jle
xchg
jg
fsub
lods
roll
movsl
adc
scas
dec
fstpl
lea
repnz
test
inc
xor
lret
sub
sbb
jge
and
out
mov
xor
mov
movsl
test
mov
adc
push
cmp
pop
js
push
je
fs
xchg
lcall
adc
js
add
lock
lret
sarb
inc
dec
xor
out
faddl
in
xlat
fstp
imulb
jle
adc
and
insb
rolb
icebp
test
hlt
scas
jne
fwait
mov
jnp
push
cmpsb
stc
icebp
stos
stc
lahf
ficoml
push
push
mov
sti
stc
mov
out
test
aaa
es
add
jl
mov
vmovmskpd
dec
cltd
mov
xor
clc
insb
aas
add
jl
adc
add
notb
stos
sub
movb
and
push
sbb
or
arpl
jb
or
fnstcw
enter
lahf
and
popf
pop
push
popa
fcoml
mov
xor
sti
cmpsb
gs
cmpsb
xchg
inc
lahf
sub
add
aas
sub
daa
out
je
movsb
andb
call
fyl2x
out
aam
mov
clc
and
mov
push
xchg
sub
out
cmpsl
bound
lcall
in
sbb
add
mov
mov
pop
jl
push
mov
fsts
jecxz
mov
jmp
dec
test
jl
jae
dec
fidivl
jg
mov
shlb
xchg
xchg
fisubrs
jb
out
rcrb
dec
lds
in
cmp
ficoms
mov
test
enter
imul
push
jle
dec
mov
inc
imul
or
mov
xor
jl
dec
mov
push
sbb
mov
push
fst
into
pusha
sub
xor
cmp
xor
xor
pop
mov
fcmove
loope
imull
out
mov
repz
xchg
das
fst
mov
out
dec
data16
ljmp
daa
enter
into
les
sbb
test
push
pop
in
jbe
jg
dec
or
out
gs
enter
push
gs
inc
xor
push
dec
aam
aaa
clc
ret
addr16
xor
call
xor
mov
cld
push
std
push
mov
and
jmp
in
xlat
leave
nop
outsl
mull
jl
cwtl
mov
mov
mov
std
sbb
push
aad
aaa
sbb
push
sbb
movsl
xor
cld
js
and
add
loopne
cmp
stos
daa
pop
cmp
jp
mov
bound
or
imul
int3
gs
add
jbe
cmp
pop
push
scas
jbe
dec
or
xorl
jne
xchg
jge
push
mov
rclb
cld
fdivrl
cmp
dec
jbe
mov
cwtl
push
test
push
pop
pop
hlt
loope
in
xchg
aas
mov
add
adc
cmp
in
aaa
movsl
cltd
mov
shl
xor
pop
arpl
adc
and
pop
jecxz
inc
and
dec
into
and
mov
aam
pop
aad
in
sub
dec
xorl
mov
mov
mov
fsubs
and
pop
cwtl
xor
mov
sbb
test
mov
xchg
jmp
xadd
repnz
jge
orb
pop
mov
jnp
arpl
rcrl
and
push
push
aam
or
fwait
jmp
call
dec
mov
jae
in
xchg
mov
add
je
jb
mov
mov
movsl
dec
sub
cmp
mov
dec
je
or
rol
sub
imul
cmpsb
mov
sbb
cltd
jecxz
test
xchg
shr
sub
mov
jmp
inc
cwtl
bound
fiaddl
dec
push
dec
mov
aam
dec
ret
and
mov
inc
orb
std
or
sub
pusha
lcall
xor
jne
imul
sbb
jg
xor
cmp
std
inc
out
cltd
ss
lea
std
pop
add
xor
test
xor
jns
sti
mov
stos
negb
cli
mov
sub
jne
or
pop
cld
in
mov
jae
cld
shlb
push
aaa
xchg
js
int3
mov
test
xor
outsl
adc
push
jb
movsl
psllw
xorb
mov
add
jge
push
mov
scas
fmuls
mov
or
out
in
pop
cmpsb
fadds
ds
mov
xchg
add
filds
xor
mov
pop
cmp
mov
pop
mov
xor
outsl
jle
pop
sub
sbb
mov
shrl
mov
sbb
scas
xor
pop
xchg
mov
mov
aad
or
jae
sbb
testl
push
xchg
shrb
sub
sbb
je
jmp
mov
jg
fwait
push
shll
adc
mov
ret
popf
in
xor
mov
out
enter
popaw
jmp
xor
sub
lock
out
push
mov
pop
cmpsb
or
xlat
std
and
mov
les
jns
jge
shll
push
dec
hlt
aaa
sbb
cmp
repnz
xchg
xor
sub
add
fstl
mov
addr16
cmp
sub
pusha
sbb
mov
mov
fcmovnb
xchg
les
bound
jl
mov
sub
rorl
xchg
inc
mov
jns
jbe
inc
jns
mov
adc
sub
aad
mov
leave
jecxz
adc
mov
xchg
jno
fisttpll
mov
inc
movsb
out
cmpsb
push
jbe
ljmp
hlt
xchg
jo
push
lret
ret
call
xor
and
jnp
lea
movsl
sbb
int
lds
scas
push
sarl
mov
pop
aaa
push
test
lahf
adc
test
fmuls
clc
pop
push
dec
test
pop
cmp
mov
adc
xchg
push
mov
pop
add
jne
push
xchg
cmp
out
mov
stos
and
nop
fnstenv
mov
enter
je
pop
push
fidivl
test
movb
repz
loopne
shlb
jae
js
mov
icebp
inc
lds
cmpsl
loope
or
repnz
cmp
inc
and
mov
adc
in
mov
fwait
mov
sub
dec
divb
or
es
outsb
dec
xchg
stos
test
mov
push
sub
adc
je,pt
push
pop
iret
or
xchg
cmp
jg
cmp
cltd
nop
popa
rdpmc
outsl
cmp
jp
mov
pop
pop
or
sbb
ss
mov
scas
pop
inc
out
fmull
movb
fcoms
fdivl
cmp
aam
lods
stos
push
fcompl
and
out
mov
bound
scas
mov
das
mov
movsl
lea
lds
xor
sub
inc
add
mov
adc
inc
aaa
push
or
mov
ja
pop
mov
test
lds
shrb
sub
sub
xor
in
xchg
ficomps
jae
out
sub
cmp
iret
and
call
xor
shl
cld
fdivs
mov
test
ret
lods
cmp
push
loope
xor
xor
jno
ds
sbb
insb
insl
xchg
adc
or
adc
sub
rol
pop
stos
add
popa
test
mov
xchg
mov
mov
push
or
pop
cli
inc
mov
sub
enter
out
mov
and
pop
sti
dec
mov
push
sub
adc
add
xchg
dec
sbb
lret
jb
xor
cmp
dec
mov
jne
insl
sub
mov
bound
xchg
rorl
add
dec
lds
xchg
js
fists
call
bound
orl
bound
mov
dec
js
pop
rcrl
jne
hlt
out
cmp
jmp
mov
push
sub
gs
jmp
popa
mov
movsb
and
and
jne
jecxz
lock
imul
hlt
cld
or
out
xchg
mov
nop
insb
mov
mov
cmc
push
test
dec
dec
mov
popa
scas
ljmp
ficoms
pop
fimuls
test
jns
mov
les
push
pop
xchg
dec
test
cmp
mov
sbb
mov
movsb
arpl
mov
xor
mov
mov
ds
pushf
xor
lds
cmpsl
fmuls
das
mov
mov
clc
sbb
dec
or
jns
ret
icebp
push
mov
bound
add
bound
inc
push
ss
jb
out
stc
lds
inc
mov
dec
setno
inc
out
test
ljmp
mov
mov
test
mov
in
pop
andl
hlt
cmp
out
mov
or
out
and
mov
push
xor
jne
pop
clc
in
and
stc
cmpsb
lods
mov
ljmp
popf
es
or
lds
adc
push
or
cltd
sbb
sbb
xchg
push
test
mov
dec
xor
movsb
sub
test
and
sbb
in
cld
fsts
inc
dec
mov
ror
mov
or
int3
push
or
sbb
xchg
pushf
loope
inc
lods
mov
push
sbb
mov
xchg
and
mov
sbb
aad
dec
shrl
repnz
or
and
out
arpl
rorb
je
inc
mov
and
cmp
lods
loope
mov
rcl
lahf
jge
testl
scas
cwtl
adc
jnp
enter
xor
adc
sbb
rcrb
loop
scas
dec
js
and
push
inc
sbb
jne
adc
adc
or
dec
insl
lret
shrb
js
add
pop
jle
push
mov
js
fs
xchg
xor
sub
xchg
int3
xchg
shrb
mov
jle
sbb
push
jo
lahf
jle
test
pop
mov
call
dec
cmc
adc
fwait
stc
or
incb
push
enter
fucomi
mov
adc
mov
lock
dec
push
dec
push
js
push
mov
pop
xchg
dec
test
xor
xchg
pop
jb
adc
int3
inc
push
mov
jbe
stos
jns
cmpsb
aas
mov
and
dec
or
sbb
mov
mov
inc
test
pop
mov
lea
cmp
xchg
jle
mov
sbb
movsb
dec
addr16
aaa
mov
xchg
or
imul
mov
mov
adc
iret
jno
and
xor
dec
test
mov
lea
inc
xor
arpl
inc
xor
ss
ds
insl
and
lret
mov
sbb
mov
pop
sbb
icebp
dec
lea
pop
daa
sbb
jne
pop
sahf
xchg
and
data16
lods
roll
adc
mov
push
mov
leave
mov
pop
jb
or
xchg
mov
jbe
adcb
cmc
fisttpll
out
lret
in
pop
push
inc
arpl
xchg
xor
adc
xor
or
jle
std
sbb
pop
push
sub
cs
xor
jbe
fistl
mov
sub
dec
inc
push
pop
adc
mov
arpl
cltd
sub
daa
test
shll
aad
and
scas
mov
mov
dec
stos
movsl
cmpb
neg
mov
inc
fcomps
pop
arpl
xor
mov
dec
adc
pop
mov
outsb
mov
adc
pop
adc
fdivrp
xlat
push
add
cs
cmp
fwait
mov
cmp
shll
sbb
inc
sbb
fnstcw
or
inc
movsl
test
ret
xchg
out
pop
test
push
mov
mov
lods
sub
xchg
add
movsb
fistps
out
cmp
push
cs
push
call
jg
mov
sbb
push
pop
cwtl
loope
jmp
push
ljmp
outsb
add
fbstp
xor
inc
mov
cmp
movsb
test
outsb
cmp
mov
jmp
fcmovbe
imul
add
mov
adc
addl
in
jno
pop
jae
cmpsl
xchg
in
cmp
push
jle
in
cltd
popf
jb
inc
push
jecxz
rcll
sbb
inc
adc
cmp
sub
repnz
dec
xchg
repz
cli
pop
mov
testl
sub
data16
out
movsl
negl
sub
pop
shll
ret
mov
icebp
xor
mov
jle
jmp
adc
jbe
cmp
icebp
stc
loop
pop
jns
popf
adc
movsb
xor
into
adc
sub
pop
inc
fwait
lret
repz
or
jecxz
into
outsl
popa
xor
mov
adc
cmp
lock
imul
in
pop
push
cltd
pop
outsl
ss
adc
cld
addr16
adc
iret
inc
into
mov
es
sbb
sbb
xchg
loop
or
aaa
mov
idiv
mov
add
xor
cli
mov
movsl
jg
fadds
mov
rolb
inc
inc
nop
jmp
jg
stc
dec
cmp
in
in
adc
jg
inc
pushf
pop
les
arpl
jb
add
xor
loop
repnz
cmpb
sub
clc
push
call
add
xor
loop
repnz
cmpb
sub
clc
shr
loop
jb
cmpb
mov
js
push
cmpb
sub
clc
push
call
add
xor
dec
pop
repnz
repnz
xlat
shl
ret
xchg
cmp
or
sbb
add
das
push
es
jmp
stos
mov
cltd
mov
fcmovnu
lret
fnstenv
sub
cmp
or
sbb
imul
dec
pop
jmp
stos
mov
sti
mov
fabs
xor
add
and
push
mov
mov
cld
ljmp
lahf
mov
push
pop
jge
xchg
lock
mov
mov
test
xchg
lea
iret
and
scas
lds
je
js
addl
sarl
sub
fs
pusha
cltd
jle
jp
pop
leave
inc
xchg
imul
mov
repz
sbb
cmp
push
jns
xor
data16
sub
xchg
fnstcw
push
cmp
pop
sub
xchg
mov
scas
stc
clc
inc
mov
data16
jmp
mov
adc
fsub
test
test
test
sbb
pop
jnp
sti
mov
or
mov
ftst
or
cwtl
fidivs
aam
test
lods
lcall
mov
sub
sbb
add
das
jns
push
repz
dec
mov
mov
fwait
icebp
cmc
out
fcmovne
scas
mov
pop
or
adc
and
ljmp
test
mov
push
mov
sbb
sbb
dec
aaa
sub
ljmp
fwait
mov
dec
push
dec
insb
ds
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
mov
aaa
push
add
cmp
das
mov
aas
sbb
mov
xchg
js
mov
js
adc
fists
or
jns
pop
pop
sub
js
testb
jb
mov
and
insl
fsubs
or
pop
ljmp
sub
dec
add
cltd
rcl
adc
cmp
mov
stc
push
jecxz
lds
lret
xchg
popa
cmc
in
lret
sahf
ja
mov
xchg
lods
in
fsubrs
jno
iret
sub
or
adc
frstor
xchg
add
and
adc
in
mov
mov
sbb
test
jno
nop
in
loop
cvtdq2ps
dec
cmp
outsl
scas
pop
inc
sub
pop
sarb
xchg
gs
sti
leave
inc
cmp
xlat
icebp
mov
ror
and
imulb
lahf
mov
loop
xlat
jp
mov
inc
mov
orl
dec
sbb
dec
mov
data16
jae
stc
push
mov
jb
clc
push
and
repnz
insb
cmp
xchg
test
cmp
cs
arpl
push
dec
push
jge
ret
mov
sbb
std
sbb
mov
lock
test
scas
dec
push
orb
xchg
sub
stc
pop
insb
ret
loop
shl
bound
adc
mov
scas
xchg
mov
ret
pop
mov
xchg
mov
imul
mov
das
push
xchg
bound
stc
mov
jns
lds
pop
and
dec
stos
outsb
push
adc
push
mov
mov
mov
jne
aas
inc
leave
cmpsl
xor
jbe
mov
ss
xor
sbb
mov
faddl
push
sub
movl
xor
fcompl
or
jmp
mov
fs
pop
adc
xchg
xchg
mov
andl
aad
add
and
pop
sbb
and
push
dec
int3
mov
dec
mov
scas
jns
mov
xor
shlb
sub
outsl
cmp
xchg
adc
adcb
mov
mov
add
je
stc
in
repz
sub
iret
in
pop
lods
in
inc
push
add
dec
xchg
dec
shl
idivl
js
out
dec
jb
cmc
mov
aaa
dec
inc
outsb
cmp
addb
and
jp
test
repz
sarl
cmpb
arpl
jno
lods
out
adc
lret
add
pop
cmp
sub
cmp
pop
xchg
mov
pusha
jo
lods
jb
lods
add
mov
test
sub
out
ja
cmp
or
popf
or
ljmp
inc
push
ret
sbb
inc
je
mov
mov
test
fs
out
jnp
xor
mov
inc
cmp
or
int3
mov
cwtl
xchg
and
adc
jg
sbbb
jge
dec
mov
cmpl
xchg
dec
fdivp
ret
mov
lds
xchg
push
jo
xchg
and
push
repnz
adc
clc
pause
pop
pop
pusha
leave
and
loopne
sbb
sbb
cwtl
mov
pop
adc
and
and
adc
aad
scas
mov
sub
repnz
icebp
mov
shlb
cmp
xchg
push
jle
in
xor
bound
imul
sbb
aas
lods
mov
adc
pop
cmpsl
mov
mov
and
sbb
inc
addr16
outsl
clc
inc
andl
insb
inc
data16
ud0
shrb
popl
sbb
ss
mov
scas
jp
push
or
sbb
mov
mov
stos
in
ja
lds
sbb
or
mov
pop
out
insb
jne
mov
scas
outsl
sbb
jmp
jb
mov
sbb
dec
popf
pop
test
leave
insb
out
sbb
mov
push
jp
lahf
hlt
jle
mov
inc
or
add
jg
sub
aas
je
mov
add
insb
sub
ret
lea
ja,pt
sub
ljmp
mov
mov
out
cltd
adc
cmp
inc
mov
std
and
push
aaa
in
pop
dec
mov
push
mov
and
std
sub
push
clc
jmp
or
pop
sbb
lds
push
push
mulb
jmp
pop
and
pop
xchg
cli
add
fldl
dec
jne
insl
into
jp
mov
mov
fwait
push
push
das
sub
mov
pusha
mov
aaa
push
mov
es
fs
bound
stos
cmp
sub
push
test
incb
sbb
js
add
xchg
cmp
and
cmpsb
cmp
dec
mov
mov
stos
inc
fisubs
sub
aad
xchg
mov
fldenv
mov
cmpsb
jmp
movsb
mov
cmc
sub
inc
and
frstor
jb
push
mov
dec
in
cwtl
or
xor
push
stc
or
ret
shlb
push
movsb
push
jecxz
and
ljmp
pop
jnp
lock
hlt
inc
push
adc
sti
das
mov
enter
out
ret
cmp
cmpl
aas
inc
lret
xor
rcl
adcl
fistpll
mov
dec
pop
mov
pushf
cmpsb
test
mov
scas
test
cmpsb
subb
jecxz
dec
jp
stos
cmpsl
fcomip
pop
add
fcomi
push
pop
pushf
add
stos
jbe
daa
and
jmp
push
decl
pushf
cltd
and
arpl
popf
jmp
dec
ds
pop
and
mov
mov
mov
mov
pop
dec
std
sub
push
lret
inc
jecxz
or
ret
lds
push
es
jmp
cmpsl
lret
outsb
jb
fwait
andl
arpl
inc
pushf
lods
sahf
mov
add
push
out
sub
mov
jecxz
hlt
lds
inc
addr16
iret
lods
jae
sbbl
idivb
mov
adcb
outsl
cmpsl
js
or
mov
mov
fadds
pop
stc
icebp
cmp
je
xchg
push
mov
test
jecxz
add
cmpb
sub
je
adc
mov
pushf
xchg
xchg
cmpsl
push
mov
mov
pop
insb
outsb
lods
out
jbe
add
cmp
in
mov
pushf
and
div
xchg
jne
adc
mov
out
dec
out
hlt
repz
fs
dec
xor
lret
inc
fwait
lret
sub
jecxz
lahf
js
out
sub
dec
daa
mov
add
lret
cmp
or
and
cli
mov
mov
sub
mov
or
loop
inc
dec
dec
sub
lods
js
sbb
cmp
hlt
ret
fs
lods
adc
jle
jp
or
and
mov
jno
and
sbb
or
inc
lcall
mov
pop
mov
mov
cmc
test
pop
dec
sub
ret
outsb
in
outsl
dec
lods
pushf
mov
xchg
test
jbe
jp
lcall
jg
pop
loopne
mov
fwait
rcrb
aad
push
cltd
and
adc
ja
cltd
xchg
and
inc
mov
lret
pusha
jbe
jl
pushf
cmp
call
xlat
je
mov
in
sbb
jge
dec
dec
jae
jmp
sbb
adc
mov
lret
movb
jbe
xor
gs
sbb
into
adc
aad
bound
mov
lret
lds
addr16
imull
les
inc
cmp
sbbb
scas
sarb
add
pop
fisubrl
jle
and
enter
std
xchg
push
jecxz
adc
xchg
lock
call
cltd
mov
xor
sub
xlat
rolb
insb
lret
xchg
fstl
out
mov
mov
outsb
or
mov
jae
lods
orl
and
leave
xor
outsl
outsl
pop
jno
nop
sahf
mov
and
out
test
scas
pop
add
mov
mov
and
jmp
in
push
mov
mov
lods
ror
pop
mov
test
jmp
adc
pop
xchg
xchg
mov
in
adc
push
xlat
dec
pop
sbb
cli
subb
push
xor
lcall
mov
cli
adc
pop
push
mov
jae
mov
lea
je
int
roll
jg
fimull
loope
lock
inc
je
xchg
cmp
pop
js
pushf
push
mov
loop
loope
flds
ret
sti
bound
jns
hlt
mov
or
inc
mov
in
enter
mov
jge
pop
xor
mov
sub
dec
adc
xor
jb
enter
test
outsb
cmp
mov
lods
pop
sti
mov
push
fwait
xchg
xchg
out
scas
gs
test
lods
ret
jmp
push
dec
js
ja
data16
mov
popf
test
repnz
in
daa
xchg
mov
int3
in
fucom
jno
dec
cmp
adcb
xor
or
push
pop
push
or
cmpsl
jno
and
test
fsub
repnz
aaa
loop
adc
aas
cmc
fs
sub
adc
push
mov
sub
and
mov
shl
mov
into
iret
mov
jbe
mov
dec
sti
jne
rcl
xor
stc
push
jmp
jg
xchg
aam
xor
cmp
inc
aaa
sbb
mov
inc
jecxz
add
aas
adc
in
jno
mov
xchg
xor
add
data16
subb
imul
lods
aam
push
lods
mov
ret
int
rorb
cmpsl
mov
loop
ja
push
ds
loopne
hlt
lea
xchg
gs
das
xor
aam
enter
addb
cltd
push
xchg
or
and
jecxz
jge
mov
mov
adc
fbld
aas
mov
sbb
stos
es
cmp
add
xor
stos
int
in
stos
push
or
sbb
leave
pop
mov
jb
adc
fdivl
shl
mov
jge
push
repnz
icebp
test
iret
es
jb
push
daa
xchg
adc
jne
jge
pushf
rcrb
and
pop
lss
cmpsl
bound
es
idiv
mov
repz
mov
outsb
lds
sub
dec
push
dec
add
or
dec
out
fsubrs
sub
lock
adc
cmp
pop
std
imul
mov
push
les
fwait
mov
in
out
inc
mov
inc
fnstsw
mov
imul
add
xchg
mov
icebp
pop
clc
pop
jo
jg
loop
in
mov
dec
xchg
sbb
cmp
add
xor
lret
rcl
shl
enter
pop
xchg
out
pop
and
test
sti
mov
test
mov
pop
fwait
push
or
adc
aaa
inc
sahf
aad
orl
mov
ja
xchg
mov
mov
push
jg
dec
ret
cmpsb
dec
push
lcall
shl
fs
mov
and
and
xchg
mov
stc
out
adc
addl
sub
jle
iret
int3
sbb
shll
push
aaa
cmpsb
inc
cmp
dec
insb
xlat
pop
clc
push
sbb
inc
test
mov
das
jl
jecxz
push
pop
push
cmp
sbb
mov
and
rol
iret
sbb
cmpsl
es
jns
pop
test
add
push
lock
or
popa
mov
out
repnz
repnz
push
inc
push
sbb
jmp
mov
dec
ja
push
push
arpl
cmpsl
ja
aas
lret
add
cli
push
mov
and
int3
push
mov
iret
fistpll
scas
add
jle
lret
mov
adc
test
mov
mov
push
and
xchg
into
out
pop
leave
push
adc
in
movsb
dec
insb
mov
loope
cmpb
popa
add
push
cmc
mov
ret
add
lods
test
push
jle
idivl
addr16
adc
jg
fdivs
sub
cmp
aad
dec
or
jo
sub
fidivrl
out
sahf
movsl
ljmp
arpl
mov
pushf
leave
adc
xchg
mov
cmpsb
repz
hlt
push
shll
mov
jbe
bnd
xchg
arpl
shll
out
sbb
push
test
insl
addl
lods
repz
mov
mov
leave
mov
cmpsl
sbb
fwait
jns
scas
jmp
lds
pop
iret
adc
sbb
push
lock
dec
movsb
add
cmp
adc
lds
imul
fcmovnu
xlat
sbb
pusha
lea
jmp
inc
add
xlat
ret
fwait
sub
aaa
lcall
sub
pop
dec
inc
lret
int
repnz
fucomip
dec
ss
es
jmp
test
adc
jle
jle
mov
test
in
jnp
xchg
adc
xchg
xlat
shll
dec
js
pusha
out
std
xlat
fs
xchg
clc
jge
int
aad
imul
sub
jmp
testl
aam
adc
pushf
lahf
sub
mov
push
mov
mov
sub
xor
cmp
pop
lea
mov
sub
and
sub
std
loop
frstor
xchg
adc
sti
or
mov
fwait
cmp
fwait
repnz
xor
lret
push
int3
or
and
cmp
mov
nop
or
jmp
mov
sub
cmp
add
fdivr
cmp
call
outsb
cli
icebp
or
out
or
pushf
or
loop
into
test
xchg
jg
mov
out
scas
fsubs
mov
sub
or
test
adc
fstps
out
jne
or
aad
ljmp
mov
sub
add
cmc
xor
jnp
decl
and
mov
pop
pop
mov
sbb
mov
push
test
shll
pop
push
and
push
jae
cmp
pushf
inc
fwait
test
popa
mov
pushf
shr
xor
xlat
dec
in
sar
push
cld
aas
xchg
mov
decb
sub
xchg
ja
sub
cmp
gs
add
daa
std
adc
xchg
jp
out
sub
cmp
jns
rolb
mov
mov
sbb
call
fstps
jge
add
push
xchg
mov
jl
es
xchg
stos
scas
rcll
xor
xchg
cltd
bound
cmc
jne
imul
adc
popa
mov
lret
cmp
inc
fisttpll
out
or
arpl
xchg
in
arpl
dec
pop
jmp
inc
out
or
loopne
out
popa
jo
jp
mov
iret
xor
jg
icebp
fisubrl
mov
fisttpl
dec
scas
inc
sti
or
push
sbb
mov
jmp
jo
dec
cmpsb
push
outsl
mov
imul
mov
lret
add
cmp
jne
iret
movsb
das
je
push
push
sbb
xchg
sub
xchg
pusha
lcall
or
arpl
repz
dec
sub
insl
loop
xchg
sbb
mov
mov
scas
xor
je
stos
mov
imul
mov
pop
jg
xchg
mov
inc
or
scas
inc
movb
push
bnd
push
dec
jle
int
sbb
ret
cmp
xlat
dec
jno
hlt
call
test
lcall
adc
pop
push
xlat
xchg
cld
sbb
mov
dec
mov
lcall
push
cwtl
jae
jecxz
jmp
pop
adc
xlat
push
aad
xchg
ljmp
dec
insl
mov
xor
negb
inc
std
sbb
es
pop
push
sub
sub
add
mov
ja
dec
dec
xchg
cmpsb
push
xchg
and
adc
xchg
imul
inc
outsb
mov
mov
mov
cmp
sbb
inc
inc
xchg
or
and
das
mov
push
xlat
mov
pop
jp
lods
mov
insl
cs
addr16
xor
andl
dec
subb
and
and
ss
out
sar
mov
mov
dec
cltd
das
sub
data16
jno
sbb
out
sbb
mov
lcall
adc
popa
ja
mov
jns
mov
rcll
arpl
xchg
movsb
cld
mov
sbb
mov
and
and
les
inc
lods
push
cltd
in
mov
cmp
loope
sti
lcall
sbb
push
mov
cmpsb
and
or
lret
iret
in
cmp
jmp
or
jmp
idivl
imul
sub
inc
dec
fimull
mov
xchg
jg
pushl
push
inc
xchg
jmp
sbb
pop
xor
sarb
add
sar
or
sub
ret
inc
cld
repz
dec
pop
sarl
fisttpll
pop
add
out
mov
or
incl
xchg
cmc
sub
movlps
or
cmp
pop
pop
adc
movsb
xchg
adc
push
dec
dec
mov
repz
int3
out
movsl
aam
mov
mov
sub
fisttps
clc
loop
aam
xor
cwtl
jne
imul
in
mov
jbe
dec
mov
mov
pop
repz
xor
and
movsb
lea
arpl
in
mov
or
sahf
out
xlat
or
and
sub
shl
mov
clc
daa
mov
daa
loope
jnp
sub
mov
insl
pop
movsb
inc
add
sub
cmp
test
int
clc
sub
sti
out
ds
xchg
push
lods
mov
mov
ss
icebp
add
cli
int
adc
xor
jle
sub
mov
add
je
stos
dec
xlat
fcomps
cmc
sbb
mov
push
incb
je
sbb
sbb
iret
mull
in
mov
cltd
mov
roll
int3
fimuls
and
mov
jne
lock
jge
mov
mov
push
ficompl
dec
cld
dec
cmp
xor
dec
lret
in
cltd
int
sub
cwtl
or
gs
lds
out
sub
popf
pop
sbb
push
mov
add
cmpsl
xlat
adc
imul
dec
add
push
test
xchg
inc
addr16
out
testb
ja
push
clc
jge
mov
into
into
lcall
cmpsl
pop
addl
imull
push
daa
push
fucomi
xchg
add
in
cmc
int
out
mov
push
cmp
adc
cmpsl
outsb
rcr
subb
xor
clc
addr16
insb
lcall
jae
cmp
daa
in
rclb
insb
mov
iret
rolb
mov
mov
mov
jp
lods
push
or
aaa
mov
jl
cmc
lret
in
cmp
insb
out
ss
adc
xor
add
add
mov
and
es
add
jae
movsb
dec
test
outsl
mov
in
sbb
stc
icebp
xchg
sub
es
mov
scas
sbb
hlt
mov
inc
addb
aad
arpl
and
push
test
add
cmc
insb
cmp
add
push
hlt
pushf
mov
ret
jge
pop
std
xchg
push
mov
mov
ret
int3
lret
leave
mov
push
stc
mov
jne
cld
pushf
mov
cltd
cltd
pop
add
mov
lcall
xchg
or
loop
xor
scas
dec
and
iret
push
xchg
cmpsb
movsl
mov
cmp
pop
mov
xchg
mov
outsl
imul
loope
arpl
dec
cli
mov
dec
sahf
mov
scas
add
leave
fidivrs
add
xchg
shll
fildll
sub
loop
pusha
sub
inc
cmp
cmpsl
sbb
mov
repnz
mov
orb
mov
shr
or
jle
mov
fidivl
sub
scas
or
imul
mov
ds
mov
inc
pop
fcmovnbe
push
mov
fmuls
mov
dec
arpl
icebp
cmpsl
insb
std
cmp
cmp
cmp
pop
ficoml
pop
adc
shrl
xor
or
add
aas
add
int3
in
jo
test
adc
rcll
gs
leave
dec
arpl
icebp
pop
test
je
xor
popa
mov
and
ss
pop
xchg
xlat
push
mov
sbb
push
test
aas
aam
int3
rorl
dec
pop
hlt
push
ljmp
lahf
dec
rcrb
test
lea
stos
jle
das
or
push
add
sahf
aaa
cmp
cmp
mov
ret
add
cmp
cs
sbb
imul
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
cmp
or
sbb
outsl
jns
dec
dec
pop
mov
mov
stc
sti
fldenv
sub
cmp
imul
mov
mov
push
and
xor
or
sbb
sub
cmp
cld
lret
sbb
cwtl
jb
inc
mov
mov
add
adc
loop
repnz
cmp
dec
mov
js
cwtl
bound
push
enter
call
loop
repnz
and
push
mov
js
xchg
lret
mull
rclb
mov
mov
scas
adc
ja
sub
pop
push
test
cld
arpl
pop
loopne
shl
mov
mov
sub
in
test
rorb
inc
inc
fistps
push
pop
inc
idivl
jle
mov
fsubl
ret
fistps
xor
bnd
testl
shlb
or
cltd
push
popf
mov
fmul
arpl
clc
lahf
pop
add
sub
and
sahf
pop
and
xor
fmul
pop
std
call
or
mov
pop
aas
fwait
divl
ja
adc
push
lea
mov
call
loop
repnz
cmp
pop
mov
popa
xchg
xchg
bound
push
shlb
shlb
add
jnp
lea
dec
stos
dec
mov
and
pop
hlt
push
fldt
fcoml
inc
mov
push
loopw
lock
ret
and
pop
push
sbb
pop
test
stc
cmp
sahf
addr16
inc
insl
stos
je
inc
stos
push
mov
mov
js
mov
jb
inc
mov
xor
add
adc
loop
repnz
cmp
dec
mov
js
mov
jb
inc
mov
xor
add
adc
loop
mov
and
cmp
push
mov
sub
aaa
mov
sub
mov
movsb
in
mov
or
hlt
cmp
push
or
fbstp
imul
push
ja
loopne
inc
fisttpl
mov
or
sti
int
jge
jnp
daa
xor
fdivl
ljmp
add
sbb
jmp
popa
sub
mov
in
mov
leave
sti
xor
lods
ret
fimuls
repz
mov
pop
push
mull
jne
adc
jb
fcmove
imul
dec
and
ja
hlt
jbe
xchg
inc
push
fwait
add
fnstenv
push
mov
shlb
push
pop
js
cmc
and
popf
lea
scas
pop
icebp
add
pop
and
imul
enter
out
test
sbb
dec
cli
rcrl
xchg
push
mov
dec
push
aad
out
movsb
jo
adc
pop
fs
push
and
fists
punpckhdq
jmp
xor
gs
lahf
insl
mov
shr
movsl
sub
dec
mov
sbb
and
add
popa
lea
add
mov
xchg
xchg
push
cli
pushf
mov
into
sbb
shlb
cmp
clc
push
movb
stos
pushf
sbbl
dec
mov
outsb
cs
mov
in
sbb
loop
pop
add
sbb
add
mov
inc
jb
dec
push
in
hlt
out
xchg
lods
retw
xor
test
mov
pop
xchg
sarb
cld
sub
stos
mov
jge
ljmp
out
dec
negl
adc
mov
repz
fs
xchg
movsb
cwtl
push
lret
mov
bound
inc
mov
aas
and
xchg
inc
fists
push
mov
dec
dec
fisttpl
and
mov
in
test
clc
pop
lret
iret
cmp
mov
adc
mov
fsts
scas
repz
sub
enter
bswap
pop
data16
sub
scas
dec
xor
std
ljmp
jns
test
cltd
rcll
adc
xlat
scas
adc
inc
push
lods
xor
mov
fcomps
dec
xchg
in
push
dec
and
or
fs
mov
fstpl
inc
pop
addl
sub
add
or
shlb
pushf
movsl
enter
or
or
inc
leave
push
test
jne
insb
adc
stos
cltd
jno
jo
leave
sub
sbb
push
pop
adc
xor
int
stos
xchg
outsl
mov
lock
sti
jg
inc
mov
or
iret
push
mov
inc
xor
pop
int3
cmpsl
sti
int3
rclb
pusha
xchg
push
mov
out
test
push
fs
sub
rcrl
popf
cmp
in
stos
lret
das
cmp
in
dec
xor
mov
sub
lods
lea
jp
sar
addr16
add
jp
fldlg2
or
and
prefetchw
or
push
adc
out
jp
test
leave
push
pop
inc
push
push
sub
ror
add
dec
pushf
test
sub
xor
test
sbb
repz
lds
addr16
dec
sarb
mov
add
pushf
xor
mov
add
jmp
xchg
das
mov
into
inc
mov
aad
and
dec
addr16
mov
xor
iret
push
cs
lods
inc
jnp
push
test
mov
push
daa
call
pop
mov
mov
cld
or
bnd
lahf
stos
cmp
sbb
shll
inc
outsl
mov
shll
sbb
xor
fldt
test
subb
cmp
jne
into
xor
inc
in
mov
imul
sti
sub
mov
pop
ss
and
dec
xchg
mov
mov
fsubrl
cld
dec
dec
int3
popa
inc
int
push
jge
jl
inc
and
call
add
divl
pop
lea
push
pop
arpl
xchg
push
andb
pop
xchg
jno
rcl
icebp
aam
pop
testb
xchg
outsl
inc
aad
pop
sub
cmpsb
mov
call
inc
sbb
je
fnstsw
dec
mov
loope
pop
ret
and
xchg
fwait
sahf
std
pop
xor
push
ret
je
aad
and
test
and
cld
stos
add
in
push
cmp
insl
lea
rcrb
repz
jecxz
jae
ret
mov
jmp
mov
inc
or
xchg
js
aas
jecxz
decb
xor
stc
or
test
fbstp
sbb
test
fdivl
jmp
fcoms
not
mov
or
jns
rclb
push
sbb
push
sbb
fistl
enter
pop
xchg
pop
cmp
sub
jno
push
xor
sub
push
in
stc
xor
fwait
inc
inc
xor
cmpsl
pusha
push
scas
adc
push
iret
push
dec
cmp
lahf
cmp
mov
jbe
call
cmp
pop
and
jp
fisttps
pop
adc
adcl
scas
lock
sar
sbb
dec
cmp
out
inc
daa
mov
inc
outsb
mov
jge
jge
mov
ja
fsubrs
adc
inc
stc
ds
int
pop
sbb
push
shlb
int3
or
xchg
iret
pop
jne
pop
inc
mov
loopne
dec
daa
jno
cmp
add
or
push
stc
xchg
mov
xchg
stos
jo
jo
test
data16
imul
sahf
mov
ja
sbb
push
add
mov
mov
jnp
arpl
leave
mov
mov
pmulhw
shlb
test
imul
push
dec
aaa
push
inc
repnz
cmp
inc
inc
cmp
mov
sub
adc
lret
xor
or
in
ja
adc
pop
sub
lea
pop
adc
popf
fcompl
arpl
scas
mov
rol
pusha
push
fcmovnu
mov
fsubl
mov
aas
call
js
xchg
lea
and
xor
sub
std
test
ss
sub
cmc
sub
and
sbbb
pop
push
lret
aad
mov
stos
loop
lahf
stos
mov
loope
jmp
jae
insl
in
filds
outsb
into
or
or
and
jg
cli
fwait
ror
popa
jns
popf
mov
cmp
addr16
sub
mov
mov
cmp
inc
scas
add
pop
push
out
imul
mov
arpl
or
ljmp
notb
cmpsl
mov
mov
test
ds
shlb
stos
inc
fwait
xchg
mov
xchg
fsubrl
arpl
dec
jno
push
and
nop
jne
mov
mov
int3
push
jbe
mov
hlt
stos
jg
shlb
in
jne
mov
sbb
es
add
add
loopne
sbb
or
loopne
fs
shrl
sub
xor
cmc
cli
cwtl
xchg
imul
cld
xchg
fwait
lret
jp
pop
mov
jle
xchg
and
add
xchg
dec
test
jle
inc
mov
jae
je
adc
cmp
cmp
push
stc
fidivrs
add
inc
inc
jne
ficoml
jbe
lahf
lds
sub
movsl
add
sbb
js
push
add
dec
dec
xor
bound
shlb
cmc
cmp
sbb
jg
and
rorl
or
push
leave
js
add
in
or
fwait
xchg
jmp
test
inc
dec
and
das
mov
jecxz
sub
push
jmp
lret
fldenv
lock
scas
sbb
mov
mov
in
repz
cmp
cltd
mov
clc
add
add
aad
sbb
sbb
ds
daa
xchg
push
dec
inc
pop
cmpsl
out
rorb
sbbl
cmp
sbb
and
and
adc
xchg
sbb
mov
jmp
jne,pt
sbb
pop
lret
jnp
cmp
shlb
push
push
mov
lds
movsl
in
jmp
xchg
std
dec
jne
cltd
loope
mov
ficompl
pop
repnz
popf
jge
iret
dec
push
sub
pop
push
bound
icebp
cli
clc
xor
das
sub
xchg
push
xchg
fstpt
pop
dec
push
or
adc
lret
ret
sbb
mov
jno
adc
divb
jl
aad
outsb
or
jmp
scas
push
jae
push
ret
fcomps
test
add
mov
test
push
in
stos
sub
xor
shr
xor
jmp
jmp
xor
push
mov
pushw
push
sbb
or
fsts
adc
cltd
or
dec
sbb
pop
inc
dec
pop
cld
sahf
aam
xor
inc
push
sbbl
hlt
lock
inc
jae
add
jge
and
gs
shl
in
and
leave
xchg
dec
popa
shll
loope
fisubrs
pop
ja
jmp
fldl
adc
dec
movsl
sbb
adc
and
and
incb
sbb
xchg
adc
sub
pop
add
out
push
loop
adc
mov
mov
jae
adc
mov
es
int
movl
push
dec
add
cmc
push
push
cmpsb
lods
xor
xchg
pop
pop
pop
leave
mov
bound
dec
in
call
mov
mov
daa
cltd
jae
adc
push
jo
sar
dec
outsb
xchg
hlt
leave
repnz
arpl
or
dec
loop
rcll
mov
imul
xchg
pop
add
lods
test
pop
insb
dec
fs
and
iret
dec
sub
xchg
sub
add
and
pop
mov
mov
sub
mov
pop
fldenv
call
cmp
fldt
sub
push
inc
bound
inc
incb
lds
jmp
test
mov
adc
stos
subl
ja
mov
hlt
mov
push
insl
mov
xor
adc
xor
jg
xchg
lds
mov
out
jae
cmpsl
xchg
sti
int3
bnd
movsl
mov
jns
int3
cltd
mov
out
in
mov
jmp
loope
js
cmp
push
mov
jae
sbb
pop
in
nop
sbb
jl
jb
push
pop
bound
ret
dec
pop
je
scas
lret
ljmp
icebp
mov
gs
mov
and
pushf
or
insl
ljmp
lcall
popf
fdivr
in
icebp
mov
fxch
dec
cmp
ss
out
push
jb
ja
inc
cmp
movsl
out
xchg
stos
loope
pop
faddp
xor
mov
pop
jp
add
out
dec
sbb
ja
mov
adc
insb
mov
fdivrl
mov
pop
fstl
gs
into
jl
sbb
xor
hlt
fs
push
test
pop
sahf
movsl
mov
push
xchg
and
inc
enter
popf
push
mov
xchg
jne
and
pop
hlt
and
cmp
mov
jae
cmp
les
loopne
xchg
icebp
or
xor
xor
daa
popf
pop
xchg
lret
js
and
cmpb
push
jmp
mov
cmpl
xchg
sbb
cmpsl
jl
cmp
out
pop
je
mov
js
xor
mov
dec
sub
sub
cmp
xlat
jge
pop
dec
push
or
add
or
or
mov
out
mov
sub
fs
addr16
lds
ss
cmpsb
or
lea
in
mov
sub
outsb
and
inc
imul
jecxz
xchg
sbb
outsl
jmp
cmpsl
pusha
lahf
loopne
adc
mov
mov
neg
lret
in
pop
in
fs
pop
movsb
xor
in
mov
adc
push
cmp
mov
ret
cltd
out
call
mov
fnstsw
or
movsb
jbe
jle
fs
xchg
loopne
inc
fwait
dec
xchg
pop
call
push
test
int3
add
ds
push
outsb
hlt
lea
xchg
data16
jle
jns
mov
pop
insb
mov
shlb
aas
jmp
dec
ss
pop
jp
cmp
mov
test
pop
gs
test
pop
enter
push
in
sahf
aam
push
cld
jmp
adc
pop
movsl
sti
loope
inc
inc
jns
pop
pop
cmpsb
xor
xchg
jp
rcl
daa
pusha
sbb
mov
adc
aaa
in
cmc
xchg
and
mov
leave
je
test
fistpl
jns
loop
adc
cmp
lods
out
mov
ja
rclb
movsl
imul
lds
add
push
out
cmp
idivl
cmpsb
xchg
or
mov
sub
roll
popa
mov
shrb
fs
or
pushl
pop
stos
cmp
inc
das
adc
jb
pop
add
cmp
add
jg
xor
cs
adc
sbb
cmc
and
testb
movsl
add
pop
jbe
ret
inc
fs
fwait
ljmp
cs
data16
lods
push
xlat
add
bound
inc
fs
pop
mov
pop
mov
lcall
push
and
lret
add
sub
icebp
cmc
lods
mov
jno
jp
pop
loopne
jno
sbb
pusha
and
lahf
ds
fistpll
mov
sbb
pop
push
adc
repz
or
mov
jmp
pushw
mov
mov
out
scas
movsb
adc
xchg
loopne
in
inc
js
pop
mov
pop
push
sti
cmp
imul
inc
out
inc
dec
enter
dec
repnz
mov
and
mov
cmp
push
cmp
sub
lahf
test
add
out
sub
mov
lock
mov
scas
fisubrs
cmp
movsb
lahf
adc
imul
iret
pop
add
fs
push
fildll
cmp
divb
cmp
out
lock
sub
ret
mov
mov
add
push
aad
mov
js
push
mov
cmp
movsl
out
and
xor
cld
inc
sarl
pop
sub
insl
fadds
pop
adc
xor
insb
xchg
xchg
xor
call
dec
push
add
jb
sub
rcll
nop
lret
lock
or
pusha
xor
inc
or
mov
lcall
or
popf
std
leave
mov
stc
sub
add
pushf
lret
add
mov
sbb
adc
outsb
lock
orl
mov
sbb
mov
pushf
dec
scas
or
out
add
or
sbb
icebp
sbb
xchg
in
rcrb
jl
mov
or
jge
ja
mov
out
sbb
and
rcr
test
addr16
push
mov
push
les
inc
jl
fucomip
and
mov
hlt
fcmovnbe
push
enter
pop
add
out
pop
fwait
movsb
popfw
inc
push
sti
lret
rorl
inc
ror
cwtd
push
push
mov
popf
loop
shl
jne
xor
push
cld
adcb
push
lds
adc
in
jb
shll
clc
xorb
dec
jl
mov
dec
adc
mov
sbb
push
pop
test
sub
je
sub
mov
or
mov
xchg
shrb
movsb
into
xchg
sub
js
push
cltd
ficomps
push
sbb
xchg
adc
call
pop
stos
mov
pop
repz
loope
jge
add
cmp
shl
add
scas
movsb
jb
mov
fildl
or
pop
cmc
push
enter
or
and
cmp
xchg
or
fdiv
xor
enter
int3
push
and
adc
sahf
rolb
jns
outsb
push
push
cmpsb
push
incb
mov
loope
push
fnsave
mov
movsl
add
nop
add
push
mov
jg
adc
xor
roll
xor
sahf
cmpsb
cmp
gs
cmp
jle
mov
cmp
or
mov
call
mov
hlt
or
enter
divb
stc
test
jmp
pop
jns
mov
aam
cmp
jnp
out
cmpsl
scas
dec
mov
add
ljmp
inc
ljmp
aaa
and
mov
adc
add
mov
jl
dec
pop
loope
andb
xchg
mov
dec
lods
or
sub
adc
dec
hlt
jl
or
jne
inc
cmp
mov
clc
sub
incb
push
les
imul
push
xchg
adc
lods
mov
mov
and
push
xlat
pop
adc
sbb
mov
jp
cmp
adc
push
adc
test
sbb
dec
xor
and
xchg
jmp
cmp
jl
mov
inc
imul
js
dec
cld
test
dec
push
mov
mov
sub
aad
sbb
nop
sub
fmul
pop
dec
pop
and
aaa
movsb
ds
imul
cmp
inc
mov
mov
xchg
sub
push
mov
xchg
xorl
daa
pop
xchg
mov
inc
push
aad
rorl
add
or
fmul
jge
inc
jg
stc
je
cmp
pop
fnstenv
ljmp
sahf
sub
pop
nop
imul
ret
movsl
cmp
sbb
mov
in
hlt
inc
xor
and
cmp
rcrl
dec
mov
fcompl
jo
mov
les
push
push
insl
mov
stc
adc
je
or
int3
loope
repz
xor
dec
loop
xor
pop
mov
xchg
mov
cli
sub
stos
dec
jns
pushf
and
lods
cmp
xor
lret
sub
popf
pop
les
sub
popa
push
movsl
loopne
sti
mov
cmp
popa
test
adc
nop
incb
lcall
fisubrl
loope
sub
mov
jne
xchg
hlt
fisubrs
mov
test
repnz
dec
push
stos
push
lods
loop
dec
out
and
sbb
dec
cmpsb
imull
adc
dec
stc
cmp
lret
lcall
imul
bound
out
test
sbb
ja
push
push
cmp
mov
ja
rcr
test
dec
stc
push
inc
nop
xor
dec
data16
repz
inc
push
hlt
and
inc
pop
inc
in
adc
inc
cltd
inc
fisubl
pop
jge
dec
xor
pop
insl
mov
test
or
into
test
repnz
out
jnp
fs
adc
mov
pusha
jge
and
fs
xor
mov
mov
popa
aaa
sbb
loope
loop
insb
dec
mov
repz
push
jl
fsts
pop
mov
or
push
jge
cmp
xchg
bound
stc
mov
fdivs
dec
cmp
les
xor
ret
or
dec
repz
cmp
repz
test
jnp
jnp
test
lock
xorl
out
shll
inc
int
gs
add
imul
fwait
adc
add
fimuls
sbb
dec
ror
mov
mov
xchg
jae
add
jle
ljmp
dec
dec
sarl
cli
insb
ret
xchg
orb
inc
in
push
popf
or
rcrb
cwtl
mov
enter
es
cmp
repz
fdiv
mov
add
jg
jle
inc
das
and
cmp
adc
test
pop
shr
into
outsl
add
outsl
add
and
les
sub
andb
lret
lea
fcompl
xchg
push
sub
mov
imul
sbb
jns
fsubrl
xor
inc
mov
jno
jns
test
pop
fs
std
loopne
mov
mov
cmc
popf
test
and
inc
cmp
mov
jbe
jl
fdivr
outsb
and
mov
add
fnstsw
push
jbe
cmpsl
cmc
push
jg,pn
popa
jp
jo
out
cmp
xchg
xor
out
pushf
push
and
mov
sub
dec
push
mov
jmp
inc
mov
movsb
jb
mov
fiadds
int
test
and
jge
adc
pop
fnsave
push
sub
jb
sarl
daa
push
pushf
jae
adcl
cld
sar
cmp
in
sub
push
mov
or
xor
pop
add
rolb
js
mov
cmp
rorb
push
mov
scas
aad
shl
push
pop
fistpl
mov
das
cwtl
xor
inc
xor
pop
lock
pop
inc
addr16
xchg
push
rolb
xchg
pop
sahf
imul
or
pop
xchg
push
lea
ja
fisttpll
data16
sbb
je
and
mov
pop
pop
aas
pop
repz
pop
fmuls
fs
add
or
stos
push
in
push
cmpsl
dec
enter
sub
jnp
push
ja,pn
mov
sbb
addb
fisttps
clc
xchg
jne
adc
jmp
popa
enter
repnz
cmp
dec
mov
js
mov
jb
inc
mov
xor
add
adc
loop
repnz
cmp
dec
mov
js
mov
jb
inc
mov
xor
add
adc
loop
jb
inc
cmp
dec
mov
js
mov
cwtl
jb
inc
mov
xor
add
adc
loop
repnz
cmp
dec
mov
clc
xchg
ja
fadds
inc
mov
int
std
pop
in
add
push
jmp
incb
popf
pop
enter
enter
enter
test
dec
fimull
dec
cli
push
push
cmp
enter
sub
jne
or
dec
push
lret
jo
add
aas
mov
test
sub
lds
dec
shrl
fimull
xor
push
mov
or
xor
xor
je
mov
cmpsl
je
push
mov
divl
cli
loope
adc
sbb
adc
jp
sbb
leave
push
cmp
iret
xor
stos
les
or
fcmovbe
aaa
iret
test
pop
out
cmp
or
cli
outsl
cmp
ljmp
rolb
push
in
movsl
mov
xchg
sbb
rolb
mov
test
enter
cmp
in
mov
mov
xor
sbb
aaa
jmp
shlb
cli
add
pop
aaa
and
test
jb
sbb
scas
cwtl
fimull
js
jg
or
xor
rcr
mov
push
and
cmp
lret
or
jl
gs
roll
lods
sbb
jp
jne
jle
jnp
dec
pop
lahf
dec
mov
cmc
mov
insl
fidivrl
enter
popf
or
enter
xor
mov
or
fcomps
dec
clc
jp
push
sbb
sub
dec
lret
push
mov
mov
enter
call
or
fimull
aaa
add
xchg
jo
negb
ffreep
and
cmp
mov
add
hlt
jge
nop
mov
push
inc
pop
xor
repz
xor
inc
inc
enter
pop
sbb
pop
ljmp
or
or
adc
mov
mov
cli
pop
pop
daa
jmp
xchg
inc
jmp
push
rcrb
out
xor
cltd
inc
test
jge
call
fucomi
rcl
outsl
fistps
rcrb
mov
inc
ror
sbb
addl
jl
sbb
push
and
mov
sub
add
sbb
into
xor
cmp
bound
enter
mov
shrb
bound
pop
pop
ret
cs
xor
fsubrp
inc
pop
sub
out
lret
mov
scas
cmpsl
mov
mov
in
cmp
fadd
sub
stc
loop
inc
fldcw
icebp
mov
cmp
adc
lahf
aaa
jmp
push
xchg
mov
ss
and
out
lret
cmpsl
scas
test
into
jmp
jnp
add
jge
jl
lods
lea
jbe
arpl
sbb
ret
test
fcmovnbe
mov
xchg
jae
inc
and
adc
lret
jbe
arpl
and
call
cmc
out
jns
loopne
add
cs
lcall
dec
out
out
pushl
mov
andb
mov
in
jb
and
lahf
cmp
mull
movsb
push
mov
xor
mov
push
dec
notb
arpl
push
push
inc
gs
popf
shrl
push
shlb
adc
outsb
and
sbb
cltd
lods
shlb
push
push
ss
movsb
jns
jge
ljmp
sbb
andl
icebp
outsl
es
xchg
and
pop
js
loop
mov
xchg
shlb
cmp
xor
shrb
scas
sub
xchg
in
push
jge
xor
jle
test
sbb
push
fdivrs
addr16
pop
shrb
sbb
xchg
add
inc
add
dec
rcr
mov
mov
jnp
push
add
inc
push
std
pusha
outsl
xchg
xor
inc
cltd
xor
cmpsl
adc
mov
sub
aam
in
ss
add
add
in
pop
pop
xor
test
ret
or
das
pop
lods
mov
cmp
movsb
or
cmp
cmpl
leave
loope
pop
dec
fmul
div
iret
xor
mov
cvtps2pi
imul
je
sarl
inc
aad
xchg
outsl
std
push
or
arpl
loope
sub
shrb
mov
divl
mov
insl
leave
fistl
push
mov
daa
cltd
jle
std
pop
pop
add
jnp
mov
sub
mov
std
mov
negb
lret
insl
add
lea
rcrb
jp
lock
push
xlat
jecxz
outsl
pop
outsl
push
loopne
je
fimull
andb
addr16
pop
adc
mov
dec
mov
push
sbb
or
and
call
sahf
movsl
mov
push
pop
mov
adc
int3
pop
and
rclb
cwtl
lret
iret
js
sbb
sbb
out
lret
pop
xchg
jmp
mov
pushf
test
in
stc
xlat
adc
pop
lds
nop
pop
repz
shrb
jp
mov
adc
out
mov
jmp
int
cld
pop
jmp
loop
push
test
lret
loope
sub
imul
dec
pop
aaa
out
loop
dec
sbb
das
lods
lret
mov
and
scas
mov
mov
sar
jge
mov
in
sbb
mov
mov
std
popf
mov
idivl
jbe
adc
mov
fstp
fistpll
insl
xchg
lahf
jecxz
test
inc
js
push
pushf
add
mov
inc
and
cmpb
pusha
adc
fs
jns
push
fldenv
pop
in
fs
rorl
call
and
loopne
out
mov
mov
cmpb
adc
xor
hlt
stos
sbbb
jae
sub
mov
call
sub
rcr
sub
int3
mov
sbb
lret
int3
aad
nop
sbb
adc
in
cmp
adc
jge
mov
fistl
in
cmp
add
push
fwait
pop
test
sbb
xchg
mov
mov
je
adc
cmpsb
xchg
pop
stos
inc
sub
outsb
sbb
push
cmpsl
jno
lcall
jg
dec
and
gs
or
dec
push
or
call
shr
es
sbb
orl
xor
sub
inc
leave
jne
adc
cs
clc
imul
xor
add
call
add
pop
lcall
mov
mov
inc
add
jns
out
adc
cmp
orl
jb
or
inc
sub
dec
or
fmulp
dec
cwtl
push
ret
fwait
xchg
inc
pushf
add
shll
into
mov
and
gs
dec
into
xor
mov
xchg
dec
rorb
and
mov
inc
rorb
rcrb
clc
jmp
pop
xchg
fcoml
je
sbb
and
inc
divb
cld
or
xor
in
stos
inc
dec
mov
push
repnz
out
loopne
cmovo
lahf
hlt
push
imul
das
aas
pop
out
and
inc
jle
jne
xor
lds
lret
int
sbb
les
pushf
adcb
xor
or
das
sub
mov
lods
fs
incl
dec
xchg
loopne
dec
sub
push
or
jno
out
iret
cmp
jb
or
jecxz
call
loope
in
jbe
adc
outsb
add
int
out
xchg
cli
ja
icebp
hlt
cltd
cmp
in
cmp
jno
mov
popf
xchg
push
jmp
sub
lds
imul
and
arpl
js
pop
std
movsl
imul
or
mov
cmp
jns
pop
mov
adc
xor
outsb
repnz
xor
data16
adc
jnp
adc
ss
inc
bound
aas
mov
push
jbe
mov
in
sbb
mov
push
push
insb
lock
adc
push
mov
add
push
inc
push
in
mov
push
mov
aad
lcall
mov
push
addr16
cmp
inc
cmp
mov
shrb
ret
mov
jp
push
insb
xchg
enter
cmp
ja
fistps
cs
enter
cwtl
pop
out
pusha
xchg
sub
sbb
pop
cltd
sub
mov
icebp
mov
ret
lods
fnstsw
lret
mov
stc
out
push
mov
xchg
paddsw
les
ret
out
jnp
ret
popf
pop
pop
pop
dec
add
cmp
enter
dec
cli
xchg
stos
mov
std
push
pop
pop
jae
push
xor
scas
cli
test
cmc
jnp
cmp
sarb
jo
inc
mov
int3
subl
fidivrl
sti
xlat
mov
fs
xor
inc
stos
cltd
push
sub
sahf
popf
inc
mov
xchg
adc
cmpsl
ja
push
or
clc
sbb
adc
test
in
jo
iret
aaa
dec
push
fildll
mov
pusha
cmp
jge
and
bound
push
out
jne
dec
cmpsl
pop
addl
and
testl
pop
mov
add
aad
mov
stc
aad
and
add
mov
mov
lret
cltd
testl
cmp
gs
in
aad
ret
or
iret
sub
xchg
inc
push
xor
lock
or
or
mov
into
repnz
je
pop
js
adc
mov
inc
subb
lds
aas
fst
enter
pushf
inc
dec
sarl
inc
lods
popf
ss
inc
aaa
das
mov
cmp
pop
vpsubq
fmull
lret
jl
pusha
mov
ljmp
dec
int
adc
rorb
stos
movb
cmp
or
leave
sub
add
mov
sub
pusha
push
dec
aas
jb
dec
fdivs
daa
push
fistpll
jle
inc
inc
pop
in
or
aaa
imul
imul
rcl
cltd
and
add
mov
sbb
fbld
push
sahf
scas
pop
xchg
test
and
jne
inc
int
xchg
fcomps
std
cmp
lods
fsubr
insl
mov
int3
add
les
in
testb
jp
xlat
xchg
shl
mov
out
outsb
xchg
aad
gs
jne
andb
cs
repnz
push
jnp
inc
cmp
mov
sub
and
enter
pop
or
sbb
in
insb
add
cmp
in
or
mov
add
arpl
mov
dec
repz
test
out
imul
mov
inc
in
adc
adc
add
push
push
jne
xchg
aaa
dec
cltd
arpl
jo
call
and
mov
mov
adc
mov
std
pop
imul
mov
subb
stc
out
jg
cmpsl
lock
add
mov
stos
cmp
lcall
fbstp
pop
jns
or
movsb
xor
sub
mov
dec
dec
jb
popa
rcll
daa
mov
rorl
cmp
loope
rcrl
push
pop
push
addr16
push
mov
test
pop
pop
cmp
and
data16
cmp
fcmovb
subb
test
cli
lcall
sbb
sub
sbb
pop
xor
jns
mov
loope
ds
es
push
sub
mull
xchg
xchg
repnz
adc
outsb
fisubrs
in
inc
mov
xchg
inc
sahf
push
xchg
sub
jb
xchg
lods
sub
mov
sub
repz
rorb
inc
mov
or
xchg
inc
mov
mov
jecxz
lea
inc
sbb
push
mov
pop
jg
test
xchg
xor
dec
xchg
push
jns
pop
push
cli
mov
cli
or
rorb
xor
hlt
loope
mov
xor
hlt
push
loop
inc
test
je
add
aad
insb
push
insl
pop
sub
adc
push
xlat
push
xor
sarb
mov
inc
jg
cmp
xor
imul
imul
sub
sarl
js
in
mov
jle
pop
popa
cmpsl
mov
inc
cmc
ljmp
mov
or
push
shll
adc
xchg
and
mov
addr16
icebp
aad
cmpb
and
mov
inc
xchg
dec
cld
inc
ret
jl
repz
push
pop
mov
mov
push
pop
adc
icebp
iret
jnp
cltd
ror
into
insb
aam
out
add
mov
sbb
mov
mov
mov
adc
pop
jo
rcr
push
xlat
in
dec
lods
movsb
push
fdivrl
in
adc
and
iret
testl
ret
jmp
scas
mov
mov
add
dec
pop
xchg
mov
stc
lock
mov
ret
fwait
cmpsl
cmp
scas
cmp
xchg
adc
inc
adc
imul
pop
cmp
sub
lea
int
aad
cmpsb
pop
pusha
je
in
lret
jg
push
in
fldenv
stos
lret
xor
xchg
push
pop
mov
inc
pop
imul
pushl
aas
mov
pop
adc
cwtl
movups
push
subl
sbb
sbb
stc
es
ss
adc
std
sbb
inc
xchg
dec
push
shlb
mov
in
mov
mov
xor
sbbb
and
in
je
push
mov
test
lods
into
das
and
cmp
pop
or
cwtl
insb
nopl
jmp
jle
lods
hlt
sbb
sahf
outsl
scas
inc
mov
adc
jbe
pop
jo
mov
mov
or
mov
lods
das
sbb
mov
xor
jns
push
add
stos
and
ret
cmp
mov
jecxz
out
xor
loop
inc
iret
loop
sbb
jl
shl
cmp
xchg
mov
adc
dec
das
insb
test
and
adc
in
stos
outsb
jnp
leave
sub
cmc
in
pop
cli
pop
popf
jnp
jmp
enter
popa
fbld
lock
mov
aad
xor
out
inc
in
push
inc
mov
inc
ficoml
and
xor
and
lret
mov
push
lret
scas
and
xchg
rolb
adc
add
add
push
jae
mov
leave
sub
push
mov
cmc
mov
data16
lret
dec
sbb
scas
daa
mov
fwait
mov
dec
lahf
subl
mov
cld
pushf
cli
add
scas
mov
imul
icebp
mov
dec
cmp
popf
jge
mov
imul
inc
ret
add
rcr
and
out
js
aam
lahf
loopne
into
fmulp
mov
adc
add
mov
sbb
inc
mov
pop
or
dec
movsb
in
dec
or
int3
mov
inc
pusha
cmpl
popf
jno
mov
pusha
cld
cwtl
xor
jbe
shll
sbb
inc
scas
popa
lret
inc
shll
xchg
int3
xor
xchg
pop
enter
popa
xchg
mov
stc
out
mov
ret
or
cltd
mov
insb
mov
mov
and
adc
imul
cmpsb
mov
pop
insl
jno
sbb
mov
add
pop
xchg
and
sbb
inc
dec
out
lods
repnz
sbb
das
stos
cmpsb
pop
hlt
test
subb
iret
loop
jbe
dec
scas
fwait
rclb
cmp
push
mov
xchg
xor
mov
fs
sbb
test
pop
xchg
mov
xchg
es
mov
cld
loope
push
xchg
dec
lods
push
stc
test
sbb
or
xchg
test
js
inc
xchg
pop
rcll
lods
sub
dec
aaa
gs
xor
adc
pop
add
pop
adc
adc
push
jl
movsl
adc
add
stos
pop
sbb
adc
pop
outsl
fcomps
in
xchg
or
sarb
mov
mov
cmpb
pop
mov
int
pop
push
aas
andl
xchg
adc
int3
pminsw
jle
xor
out
cwtl
jnp
loopne
aas
cmp
je
rcrl
out
jl
and
orl
push
out
les
mov
mov
scas
sti
in
cmp
sbb
fdivrs
xor
leave
mov
xchg
mov
cmp
push
fsub
mov
mov
push
mov
sub
mov
and
out
add
mov
out
pushf
xor
fistl
sub
xor
inc
dec
sarl
jae
cmp
fldcw
dec
scas
pop
add
out
aad
push
adc
movsb
gs
and
rcrl
test
xor
shll
clc
xchg
lods
push
das
js
std
mov
cld
or
test
push
xor
pushf
out
int3
sub
xor
fwait
inc
xchg
call
into
mov
test
sbb
xor
mov
ja
lcall
push
insb
xor
add
into
insl
mov
mov
or
out
pop
pusha
and
inc
in
xchg
mov
in
lods
lret
mov
pushf
leave
out
or
lods
out
xchg
imul
test
mov
test
xchg
jle
in
aad
data16
mov
int
in
js
pop
jg
dec
test
jmp
lret
pop
pmaxub
adc
jle
or
mov
bound
lahf
pusha
in
cmp
adc
out
mov
cmc
add
or
rorb
jbe
sub
sbb
dec
orb
mov
jno
cltd
mov
add
sbb
pop
xchg
inc
call
sahf
out
cmp
sbb
push
lret
ss
cld
and
in
lret
ror
movsl
icebp
mov
mov
adc
cwtl
js
inc
xor
int3
jo
jno
push
mov
jae
mov
stc
leave
sbb
icebp
test
int3
xchg
mov
data16
pushf
xchg
out
das
insb
or
pop
mov
push
sti
sahf
pop
arpl
cltd
outsl
scas
cli
ret
out
cmp
jl
or
das
or
jp
or
add
arpl
cli
jae
es
in
inc
cmpsl
mov
jnp
xchg
std
mov
jno
adc
inc
lea
mov
leave
add
mov
xchg
or
jp
into
out
les
into
test
jne
enter
ds
mov
jmp
sbb
test
and
in
pop
call
shlb
xchg
pop
xor
mov
adc
jno
popf
mov
in
inc
add
add
mov
dec
xor
pop
fcmovbe
and
jnp
mov
mov
out
inc
aam
adc
xchg
mov
getsec
cld
cmp
cwtl
dec
rorb
les
outsl
shrb
stc
imul
add
pop
inc
jp
ljmp
icebp
jno
shl
xor
jmp
inc
mov
mov
out
xor
and
adc
in
jno
out
and
xor
cltd
xor
cmp
jecxz
sub
push
in
sahf
and
push
cmp
ja
fadds
lods
cmp
inc
and
stos
or
cmpsb
sub
mov
into
mov
cmp
fbstp
test
or
in
ret
add
push
nop
sub
sbb
dec
sahf
add
notb
insb
cmpsb
scas
jbe
int3
movsb
fildll
or
cltd
xchg
or
arpl
mov
into
sbbb
into
jnp
sub
jae
repz
mov
scas
cli
cmp
movsl
pop
insb
add
add
push
pop
xchg
arpl
sahf
cmpb
mov
nop
in
jae
and
aaa
pop
loope
inc
outsb
aas
leave
mov
sahf
sbb
xchg
pop
aas
movsb
test
and
push
data16
inc
ja
sbb
jno
sahf
scas
cmp
in
dec
je
add
xchg
ds
sbbl
inc
cmc
sbb
push
test
adcb
pop
mov
jmp
xchg
dec
mov
fdivl
mov
dec
minps
outsb
movsb
aaa
enter
cmp
jae
lcall
aam
adc
jmp
and
inc
in
les
and
add
pop
mov
ret
int
js
xchg
cmp
insb
std
push
addl
jg
inc
adc
movsl
jno
and
lcall
sbb
inc
bound
cmp
mov
mov
or
add
js
ja
or
imul
pop
mov
ret
bound
mov
add
xchg
adc
in
loop
lea
test
pop
cmp
mov
dec
mov
mov
xchg
pop
inc
call
fisubs
inc
in
pop
aad
add
push
repz
in
mov
pop
jmp
rorl
movsb
jle
dec
or
insb
cmpsb
pop
inc
roll
sar
jp
and
add
mov
sahf
jns
out
mov
add
xchg
cld
push
std
push
xchg
pop
and
sbbb
jbe
or
lods
dec
jecxz
mov
testb
lods
rclb
xlat
loop
in
jb
loope
sbb
xchg
push
paddw
aas
fs
mov
negb
push
add
and
push
stos
xchg
pushf
std
int3
sbb
cltd
pop
sbbl
mov
and
lock
xchg
cmp
sub
xor
ret
pop
mov
imul
cmp
int
shr
lahf
out
lods
sub
adc
dec
mov
pushf
xor
jns,pn
movsl
aas
sbb
aaa
into
jne
cmp
std
cmp
dec
flds
inc
aad
test
lods
dec
js
adc
imul
cltd
push
out
shrb
cmp
test
cmpsb
rclb
cmc
xchg
push
mov
push
adc
sbb
pushf
lods
jmp
mov
scas
sbb
out
out
rcll
adc
cmpsb
xor
push
or
cmpsb
lods
or
add
mov
fst
das
xchg
mov
xor
sub
adc
test
mov
ja
add
mov
repnz
out
lret
push
push
pop
lock
test
aad
inc
adc
insl
inc
arpl
hlt
lahf
mov
out
popa
fidivs
mov
js
scas
mov
and
mov
or
cmpl
jp
lock
push
mov
mov
enter
call
or
fimull
js
push
mov
mov
enter
call
or
fimull
js
push
and
mov
enter
call
or
fidivrl
cli
push
mov
movsl
aaa
loopne
jp
sbb
inc
lds
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
sbb
push
aas
pop
das
mov
cwtl
psubsb
das
enter
dec
mov
sbb
dec
fistps
test
mov
push
jg
outsl
enter
nop
mov
rorb
fistps
int3
add
jae
cmp
or
jno
insb
cmp
xchg
fdivl
out
and
pop
lods
js
mov
aam
xchg
mov
out
mov
clc
adc
rcl
pop
or
or
mov
daa
mov
stos
jge
jge
push
jecxz
test
fs
fsubrs
mov
iret
clc
jg
pop
add
push
scas
in
sahf
hlt
fwait
xchg
js
mov
pop
lahf
test
loope
lock
sub
aas
leave
mov
xor
jb
push
adc
and
cltd
mov
cs
fnstsw
pop
aam
xlat
cmp
cli
xchg
xor
in
mov
insl
dec
fwait
sarb
subb
jae
outsb
scas
or
add
dec
iret
outsb
aas
and
pop
test
mov
pop
fmuls
inc
rorb
jl
pusha
leave
pop
nop
push
scas
cmp
pop
mov
in
jno
popa
lcall
sub
pop
in
lahf
jns
add
or
inc
mov
arpl
sub
fldt
dec
sti
cmp
pop
iret
test
mov
psubsb
outsl
enter
sub
sbb
dec
fistps
test
mov
psubsb
outsl
enter
sub
fcomps
cmp
mov
es
jmp
inc
mov
jne
sbb
adc
std
in
jo
data16
mov
sub
js
jno
push
and
test
xor
je
das
test
or
in
mov
pop
pop
jle
cmp
aad
sti
addr16
or
pop
test
push
cmp
je
imul
push
sbb
fcompl
mov
fwait
xchg
fs
pop
stos
pop
out
lods
sub
decl
pop
int
jo
add
cs
lds
stos
adc
je
subl
fildll
jle
mov
inc
jae
add
push
xchg
rcll
mov
jbe
jns
cmc
push
adc
push
popa
xor
lret
sub
es
xchg
ljmp
adc
ret
push
sbb
lcall
call
stos
xor
or
imul
sbb
fsubrl
jo
add
ds
loopne
and
inc
xchg
xchg
arpl
cli
orl
cmp
cld
insl
push
dec
fcompl
pop
xor
pop
pop
sub
repz
pusha
adc
loop
xchg
mov
outsl
aas
and
jp
xchg
xchg
bound
hlt
in
inc
fbstp
je
push
addr16
dec
mov
fsubr
jle
fisubrl
leave
adc
icebp
out
sarl
std
sbb
pushf
mov
inc
pushw
sbb
inc
mov
adc
imul
rclb
popa
pop
push
out
sti
mov
cmp
xchg
dec
repnz
xchg
insl
and
in
pop
push
jmp
ret
imull
cli
add
repz
leave
mov
rolb
lea
add
je
lods
test
int
loop
or
ficoms
test
push
mov
pop
lret
add
aad
cmpsb
jecxz
insb
les
or
or
xor
sub
cli
mov
inc
mov
divl
pop
dec
dec
add
or
sub
ret
fmull
cmpsb
push
sub
jg
stos
ja
push
xchg
pusha
les
push
das
cmpsb
js
xor
sahf
loopne
push
mov
xchg
pop
or
sub
jbe
call
mov
jg
jge
and
inc
insl
cmp
inc
jo
je
or
mov
adc
add
pop
js
xor
xchg
mov
cmpsb
shl
repnz
push
mov
push
fs
js
ffreep
das
jge
or
sub
aam
cmp
pop
jge
xor
out
mov
das
mov
add
cltd
das
pop
mov
or
fwait
and
les
idivb
ljmp
cwtl
push
xacquire
push
xchg
lea
int3
out
inc
rcrl
add
and
inc
mov
pusha
pxor
dec
jb
lods
sub
subb
pop
inc
shlb
push
mov
xchg
push
lret
xchg
pop
dec
sbb
push
ret
cmp
clc
sarl
mov
xchg
fistpll
or
pushf
sbb
data16
or
sbb
jl
ret
xor
in
mov
in
in
pop
testl
inc
xchg
ret
jge
pop
pop
mov
pop
mov
das
mov
rolb
pop
mov
pop
je
jne
pop
stc
xor
mov
repz
add
rolb
jno
mov
neg
add
sbb
popf
push
xchg
pop
push
jo
mov
pop
pop
addr16
push
das
mov
cli
je
daa
rcrl
sbb
in
and
pop
and
cwtl
stos
in
clc
push
mov
add
mul
and
sub
lret
insl
pusha
pop
sbb
imulb
add
int3
xor
dec
jno
push
cmp
test
repnz
adc
lret
cmp
inc
jb
push
popa
adc
sahf
shr
out
xchg
das
fdivrl
fwait
push
cmp
loop
jge
sub
adc
xchg
call
dec
enter
inc
pop
jno
bound
inc
inc
or
jno
mov
or
xor
arpl
pop
pop
adc
xchg
cmc
gs
inc
cmc
xchg
pop
scas
lahf
pop
dec
pop
stos
in
sub
mov
nop
inc
push
lds
xchg
std
mov
sbb
lea
cmp
test
dec
jl
mov
mov
jmp
fcompl
sub
sub
jno
or
pop
in
mov
sbb
ljmp
push
add
mov
push
adc
inc
fsubl
sub
loope
sahf
push
popf
add
icebp
bound
stos
insb
lock
jmp
mov
inc
sub
stos
dec
jmp
sahf
adc
cltd
inc
lock
dec
sub
adc
jecxz
xor
mov
or
push
pop
ret
or
std
mov
push
cmpsb
xchg
pop
jb
xlat
mov
fnstenv
ret
or
pop
pop
sbb
test
hlt
hlt
fidivrs
xlat
les
jecxz
mov
push
cmc
sarl
pop
mov
mov
gs
inc
fwait
hlt
pop
inc
pop
jno
cmp
mov
leave
test
shlb
fisttpll
in
pop
dec
aam
xchg
add
inc
insl
jle
push
dec
lcall
int3
rcll
jne
push
mov
ss
xlat
icebp
imull
out
lods
test
arpl
dec
mov
cli
inc
jns
jbe
stos
rorb
cmp
pop
jl
push
dec
dec
jns
in
and
jp
jge
movl
dec
loopne
scas
repz
mov
test
jno
or
sub
jge
jns
lret
ret
clc
cmpsl
insb
push
adc
or
dec
lds
loope
cmp
ficoms
mov
out
or
cmpl
pop
stos
cmp
sbb
lret
mov
xchg
push
enter
movsl
mov
enter
sub
es
aam
mov
jns
hlt
and
pop
sbb
sahf
loop
push
xchg
mov
jno
fwait
push
or
ficomps
lcall
hlt
fiaddl
in
mov
pushf
lods
in
test
mov
cmp
and
jle
jecxz
mov
cmpsl
dec
in
adc
or
hlt
test
mov
jo
cmp
mov
imul
lds
mov
xchg
js
cmp
push
jae
out
sbb
pushf
mov
inc
mov
and
test
mov
aaa
cmp
ret
ljmp
xchg
xor
push
cwtl
xchg
xchg
cmp
dec
inc
test
vandnps
clc
cmpsl
or
mov
mov
xchg
pop
test
orb
aam
fwait
stc
sub
inc
imul
adc
lock
pop
ret
cmp
push
fisubrl
sbb
idiv
jle
or
adc
mov
mov
popf
sahf
add
test
pusha
icebp
sar
mov
scas
cld
jmp
mov
sti
xchg
or
in
jle
add
mov
lods
enter
and
mov
xchg
mov
loopne
xchg
mov
pop
in
inc
inc
cmpsl
pushf
pushf
push
popa
ficompl
adc
xlat
add
sbb
popa
loopne
pop
ss
imul
out
xor
pushf
pop
pop
fsubr
iret
mov
dec
dec
lret
pop
cmpsb
pop
mov
les
push
repnz
pop
cmp
mov
add
insl
pop
sub
movsb
push
shll
jne
test
ds
pop
int
mov
pop
lret
daa
push
addl
cmpsl
mov
xor
aad
repnz
movsl
add
loope
inc
fdivrl
push
negl
mov
popa
rorb
cmp
bound
xor
push
imul
push
test
push
xlat
ljmp
lcall
inc
pop
mov
or
mov
pop
fsubrs
iret
loopne
xor
sub
movsl
cmpsb
cmp
js
jbe
arpl
pop
loopne
push
adc
add
mov
dec
int3
mov
pop
push
fmuls
pop
lds
mov
sbb
and
dec
faddl
sahf
lods
sbb
xor
add
shlb
pop
add
dec
fldcw
mov
aas
lods
dec
jo
lret
xor
repnz
mov
inc
fisttps
stos
in
mov
rcl
sub
mov
stos
out
mov
clc
adc
lahf
mov
pop
inc
push
xor
inc
out
popf
cmp
orl
lret
adcb
outsb
das
jne
hlt
cmpsl
dec
loopne
pop
dec
lret
jb
mov
jns
add
lods
lret
out
popa
sbb
sahf
aas
mov
dec
sub
daa
incb
fldl
pop
aas
mov
inc
inc
fcomp
pop
stos
sti
cli
sti
popa
jl
pop
iret
and
push
jae
stos
lcall
into
out
divb
out
scas
mov
call
test
rorb
dec
cmc
xchg
jl
add
and
nop
stos
popf
sbb
test
sub
icebp
mov
outsl
jle
cmp
pop
ja
imul
or
sbb
repnz
or
push
lahf
add
inc
xor
ret
jb
movsb
xchg
sbb
xor
push
sub
fcompl
mov
push
shll
lcall
xchg
dec
xlat
lock
mov
push
movl
cmp
test
fsubrs
in
dec
scas
jbe
mov
in
lods
inc
xorb
jb
dec
int
lret
hlt
movsl
cmp
fwait
add
mov
jbe
adc
adc
cmpsb
mov
sub
jns
into
dec
cmp
jnp
imulb
mov
push
lds
sbb
cld
out
adc
xor
rcrl
sub
jle
xchg
jl
shrl
cli
ljmp
jb
ret
outsl
pop
xor
movsb
inc
and
mov
enter
add
lds
rorl
outsl
mov
fstpt
sub
pop
aad
mov
addr16
sub
and
sarl
push
loope
and
sti
stos
cmpsl
cli
and
rcl
aam
jnp
fldenv
mov
sub
pop
xchg
lods
sti
lcall
sbb
in
leave
inc
fdivrl
or
out
mov
mov
fistpl
das
mov
fwait
sub
nop
sub
bound
call
scas
adc
inc
add
in
xor
xchg
repz
in
lods
xchg
push
rcll
insb
pushf
sub
xchg
xchg
mov
mov
shll
dec
jmp
faddl
add
jecxz
cmp
sub
in
cmpb
movsl
add
dec
int3
stos
dec
iret
arpl
xchg
cli
cmc
mov
call
stos
xchg
outsl
pop
stc
and
and
stos
btsl
sub
add
xchg
push
pop
sub
in
sub
out
sub
xor
xchg
je
stos
or
dec
iret
sub
jp
jae
test
pop
pop
scas
imul
jl
sbbl
pop
cld
jge
mov
fucomp
outsb
adc
ljmp
mov
lret
nop
loope
in
loop
sub
jnp
dec
push
das
push
dec
movsb
lds
daa
mov
stos
cld
repz
insl
cltd
stos
xchg
adc
or
fs
stos
mov
outsl
shll
mov
or
lods
popa
cmpsb
pop
rcr
test
andl
out
sub
shr
test
jle
cmp
insl
dec
enter
and
roll
mov
push
cmp
and
repz
adc
dec
xor
les
sub
push
aad
popa
push
cltd
xlat
movsl
pop
std
xchg
inc
movsl
lods
mov
and
mov
mov
push
enter
xchg
jmp
push
sarb
sti
sarb
out
xorl
in
xlat
std
adc
scas
data16
aaa
inc
xchg
rorl
push
pop
mov
lcall
pop
repnz
and
mov
jnp
call
inc
icebp
adc
cmp
lahf
cmp
imul
fstpt
push
in
popf
mov
mov
jmp
je
ja
lcall
inc
pop
mov
fwait
int
shl
popf
inc
in
fsubs
jns
frstor
inc
inc
add
jno
in
pop
adc
fadd
rcrl
gs
inc
sbb
in
pop
xchg
outsl
in
loope
push
ljmp
or
and
sub
ja
push
jb
nop
xor
outsb
xor
daa
sbb
mov
mov
adc
in
mov
mov
jecxz
outsb
outsb
sbbb
push
push
dec
cmpsb
and
sub
sbb
push
rcr
jbe
sahf
pop
orb
push
lea
aad
xor
adc
push
inc
add
sub
aad
ret
loopne
mov
movsl
std
data16
movsl
inc
fistl
mov
fidivl
sbb
xor
adc
jbe
aam
es
incl
mov
adc
outsl
enter
cwtl
and
dec
jg
dec
daa
push
cmp
out
xchg
adc
sub
jae
fwait
testl
inc
jo
push
inc
movsl
inc
repz
xchg
fs
jno
test
jnp
push
lds
out
stc
movsl
aaa
fists
test
js
out
inc
shrl
push
sar
out
and
dec
dec
dec
inc
fisttpl
ret
or
inc
mov
inc
mov
push
lret
mov
data16
xor
enter
mov
mov
xchg
in
mov
pushf
dec
shrb
adc
stc
mov
movsb
jmp
sub
cld
or
dec
and
shlb
adc
jl
mov
data16
xchg
loope
add
add
cmp
lods
arpl
loope
jp
stc
aam
jmp
xor
jle
mov
imul
jnp
pop
popl
push
out
xor
xor
ja
and
and
jg
push
xchg
std
inc
out
mov
mov
orl
push
jle
ja
xchg
insb
fldenv
sti
dec
cmp
movsl
stos
iret
pop
lea
push
xor
dec
xchg
xorb
pop
sbb
inc
add
cmp
inc
inc
add
push
mov
push
ret
jbe
xor
xchg
rorl
mov
or
cmp
imul
adc
jne
pop
shlb
test
ret
inc
ret
fstpt
loop
hlt
sbb
in
jbe
mov
repz
cltd
cmp
inc
movl
xchg
pop
adc
and
jbe
mov
sarb
test
mov
stos
loope
add
fcom
or
aad
nop
lret
xlat
add
sub
and
push
stos
sti
imul
js
xchg
inc
add
dec
pop
negb
cmp
dec
movsb
mov
cmp
jl
dec
fwait
and
sub
mov
and
jp
mov
inc
fsubr
ljmp
bound
xor
cwtl
xor
pop
lcall
xchg
lods
popa
and
out
dec
mov
stos
mov
cmpsb
jge
pop
or
push
and
fnstcw
xorb
pusha
gs
hlt
mov
cmp
insl
mov
and
loopne
inc
jecxz
mov
mov
out
lret
out
cmp
xor
push
pusha
push
mov
scas
xor
aad
aad
ds
lahf
out
aaa
leave
sti
dec
imul
add
loope
icebp
cwtl
sbb
idivl
jo
sti
ss
imul
ficompl
fbstp
jno
lret
sub
rcrl
cmp
orb
outsl
jmp
into
or
cmp
xor
mov
mov
lret
aad
fnstenv
add
xchg
cmpsb
cld
xor
mov
ds
es
adc
jbe
sbb
jle
add
lods
pop
mov
mul
or
jne
out
orb
movsb
das
mov
repz
fdivrl
jne
jmp
and
pop
push
mov
enter
in
loopne
lea
cmp
in
push
sbb
cmp
data16
mov
sbb
push
sub
aas
pop
dec
lret
mov
xchg
repnz
mov
sbb
arpl
arpl
sub
push
xor
stc
or
nop
test
ficoms
lret
and
dec
lret
insb
sub
pop
clc
in
mov
sbb
insl
test
andb
jge
jl
mov
nop
jns
fisttpll
dec
cmp
movsl
and
push
decb
cmpsb
xor
test
out
pop
in
inc
sub
rcll
stos
daa
xor
push
sbb
pop
and
hlt
test
adc
std
fbstp
mov
pusha
cmp
adc
push
sti
ret
loope
mov
outsb
dec
lcall
inc
and
dec
jle
push
adc
jne
mov
ret
movsb
push
add
push
mov
int3
jae
pusha
mov
lods
stos
dec
adc
rolb
sub
mov
mov
scas
sti
mov
fnstsw
in
or
sbb
dec
and
jb
or
movsb
jle
fmulp
dec
scas
andl
add
scas
scas
cmp
sarb
les
dec
inc
add
and
sbb
sbb
push
rorb
or
xchg
test
mov
sbb
sbb
cmpsb
adc
mov
jl
lcall
jmp
mov
or
pop
shrb
outsl
dec
xor
or
adc
popf
add
dec
cmc
sub
adc
test
aas
lret
or
xchg
pop
jecxz
pop
mov
jmp
les
sub
mov
mov
push
push
push
pop
and
jmp
jb
xchg
mov
lahf
ja
jmp
stos
sbb
push
mov
pop
sub
pop
fdivrs
fs
ljmp
pop
mov
bound
adc
mov
ret
divb
xlat
dec
test
inc
daa
fsubrp
repz
sbb
loopne
les
add
dec
maskmovq
pop
lret
mov
stc
shll
xor
add
aad
cli
push
adc
xor
aaa
push
dec
loopne
ljmp
test
add
in
stc
mov
mov
sbb
je
and
ljmp
xchg
add
fstp
pusha
xchg
dec
jbe
out
lea
fldcw
call
dec
xchg
sub
adc
mov
call
sbb
sub
pushf
lods
mov
sub
pop
xchg
cmc
insb
nop
jno
sbb
adc
cmp
incb
int
ret
jg
mov
and
ror
lahf
jle
push
or
out
sub
test
dec
cmc
in
inc
xchg
mov
xchg
sar
lcall
fisttpl
das
dec
in
push
sub
adc
pop
mov
sbb
movsb
add
scas
sub
std
insb
ds
dec
pop
and
movsb
mov
adc
fists
mov
pushf
jo
imul
add
add
jge
xchg
xchg
push
xchg
out
sub
xor
cmp
mov
aas
fsubl
and
sub
clc
shlb
add
cltd
popf
or
call
imulb
xchg
aad
jmp
icebp
mov
pop
dec
in
xchg
xchg
insl
mov
add
xor
fistps
push
or
mov
out
fimull
pop
in
popf
nop
movsl
or
xor
jb
dec
fcomps
or
dec
xchg
test
or
adcb
rclb
mov
inc
and
in
lods
pop
push
xor
insb
sub
jae
jl
std
or
es
outsl
jmp
jl
pop
sbbl
mov
leave
mov
je
push
call
xchg
cs
push
cltd
jecxz
lds
or
push
mull
mov
pop
out
pop
xlat
mov
mov
dec
inc
ror
test
pusha
push
ss
andl
dec
or
loop
push
frstor
in
pop
cmpsb
stc
dec
test
mul
lahf
mov
mov
sbb
dec
and
leave
adc
enter
rclb
inc
lret
lret
test
fwait
imul
mov
imull
adc
std
aad
or
loopne
or
add
cmp
fdiv
addr16
sub
xchg
nop
inc
mov
loopne
test
lods
movsb
daa
rcll
pop
stc
loopne
sar
pop
fdivl
jnp
ret
cmp
sbb
adc
loop,pt
sub
lahf
pop
cli
shlb
out
and
jb
js
mov
std
outsl
lahf
mov
or
push
ljmp
pusha
xor
jl
mov
mov
stos
cmp
cmp
leave
cmp
int
mov
jae
mov
and
mov
push
ss
jb
xchg
js
test
fdivr
xchg
lods
popa
and
repnz
and
icebp
sti
sbb
fisttps
lahf
fs
dec
sahf
sbb
dec
fistps
test
mov
psubsb
outsl
enter
sub
sbb
dec
fistps
test
mov
psubsb
outsl
enter
sub
sbb
dec
ficomps
js,pn
cwtl
psubsb
outsl
enter
cmp
fs
push
lahf
cmp
dec
pop
fdivs
test
inc
test
pop
cwtl
js
divl
aaa
mov
notb
and
xor
xchg
jo
push
bnd
jbe,pt
inc
mov
aaa
rcll
lock
lock
notb
and
xor
pusha
xchg
adc
daa
mov
rolb
loopne
lock
notb
and
xor
pusha
xchg
jo
xorb
lds
fiadds
pop
mov
test
xchg
dec
mulb
jae
push
sub
arpl
insb
dec
sti
pop
sti
sub
movsl
push
pop
popf
xor
add
mov
xchg
mov
or
jecxz
adc
push
pop
out
mov
leave
repnz
mov
mov
es
adc
imul
test
cmp
testb
inc
lcall
jl
outsl
inc
mov
shlb
push
xchg
sbb
sbb
or
xchg
ffreep
cmp
xchg
xchg
jo
jg
test
pop
push
mov
xchg
pop
rolb
testb
sahf
push
cmp
jle
jle
push
stc
cltd
andb
push
shll
addb
pop
ud1
notb
and
xor
pusha
xchg
jo
xorb
mov
rolb
loopne
mov
add
jno
pop
shll
add
les
push
mov
xchg
imul
jl
push
rclb
xor
sbb
ds
xor
insl
movsl
inc
inc
push
test
movsb
nop
inc
fadds
inc
testb
mov
xchg
jo
xorb
mov
rolb
loopne
lock
notb
and
xor
pusha
xchg
jo
xorb
mov
rolb
loopne
lock
repz
test
aad
mov
xchg
jno
das
mov
rorb
addr16
mov
mov
lcall
xor
or
dec
dec
mov
lcall
int
das
mov
sbb
dec
adc
andl
inc
mov
lret
sbb
dec
les
fnsave
push
les
pop
ds
fwait
cmc
pop
pop
push
adc
pop
xor
in
je
dec
mov
sub
push
push
mov
arpl
jo
ljmp
lcall
inc
cmc
add
sbb
inc
lcall
pop
and
hlt
fidivl
lds
pop
push
inc
gs
test
mov
push
inc
adc
pop
xchg
pop
jp
out
aam
pusha
adc
ror
push
inc
cli
xor
cmp
sub
mov
negb
and
xchg
and
mov
bound
adc
inc
xchg
sti
inc
push
push
or
push
mov
xor
adc
hlt
imul
xor
push
mov
fdivp
into
dec
inc
sbb
push
sbb
push
sub
outsb
mov
mov
add
mov
rorb
xor
aad
push
add
adc
mov
mov
lret
leave
mov
rcrl
jecxz
jl
and
jnp
data16
mov
pop
mov
cmp
ljmp
ret
bound
push
mov
pop
or
insb
ret
rorb
jbe
xor
mov
push
in
pop
outsl
clc
decb
inc
rol
imul
inc
fidivrl
mov
push
repz
mov
dec
xchg
inc
fnstcw
xor
cli
dec
xor
xchg
dec
fldenv
xor
jbe,pn
es
mov
dec
inc
es
xor
je
test
jo
dec
subb
add
add
xchg
mulb
jbe
sub
add
outsb
xor
or
sub
stc
and
sbb
and
mov
push
inc
addr16
add
ror
andl
in
cltd
xor
dec
aad
cld
into
iret
iret
push
pushf
mov
je
jnp
pextrw
sahf
jg
dec
ds
fdivp
stc
outsb
insb
jnp
lods
mov
mov
sbb
cli
aas
pop
xchg
push
scas
adc
dec
clc
mov
lahf
test
mov
orl
lea
xchg
aam
xchg
xorl
ret
xchg
dec
fstpt
int
add
shrl
out
xchg
push
sub
loope
pop
into
stos
jb
in
movsl
inc
and
ljmp
push
testl
test
out
and
pop
sub
add
imul
pop
lea
loope
negb
pop
jo
aas
iret
cmp
mov
jbe
movsl
mov
insl
ret
inc
pop
mov
mov
ja
addl
xchg
cmp
lods
data16
jmp
std
out
add
fwait
cwtl
mov
jne
adc
addr16
fwait
test
sarb
sbb
xor
sbb
adc
out
push
in
lret
and
pop
jmp
fs
out
bound
sti
inc
out
mov
divb
or
iret
out
rcr
xor
int
loope
rolb
sbb
shrb
addb
sub
clc
and
xchg
cmp
imul
mov
push
xchg
dec
sub
scas
ss
push
push
das
aad
popf
and
inc
push
leave
scas
inc
outsb
sbb
or
pop
repz
push
imul
shrl
mov
scas
pop
add
xchg
push
inc
dec
dec
pushf
dec
push
cld
pop
fistl
push
sub
and
movsl
sbbl
stos
xchg
xor
and
add
cmp
jg
push
mov
mov
ljmp
push
mov
mov
lea
nop
inc
stc
das
mov
cli
pop
lods
stos
int3
and
imul
fisubrl
notl
imul
daa
inc
dec
push
mov
aam
adc
inc
xchg
fs
daa
pop
outsl
jle
dec
idivl
sub
or
ljmp
jp
add
incl
icebp
cld
cs
int
pop
cltd
mov
jg
jge
mov
mov
or
enter
sbb
cmpl
mov
jmp
push
jge
fsubrp
inc
jl
cmc
xchg
adc
mov
rcrb
dec
pop
into
cmp
icebp
add
test
and
jmp
lret
int3
divb
sbb
aam
loop
push
cli
and
mov
or
lds
xchg
jbe
pop
mov
push
mov
push
mov
sub
sbb
incb
dec
xchg
jnp
popf
loope
je
sarl
jle
jo
mov
dec
out
inc
push
rcl
jne
inc
adc
sbb
lods
mov
fcomps
fistpll
jmp
pop
das
adc
jo
test
fsubrl
mov
dec
js
xchg
push
stos
mov
xor
daa
rcll
outsb
inc
out
adc
add
sahf
cmp
inc
push
inc
cmpsb
iret
shrb
lea
push
push
es
dec
adc
mov
push
push
pusha
ret
dec
xlat
jge
xor
or
scas
ss
add
mov
dec
inc
adc
mov
jnp
rol
and
int
xchg
fcomps
adc
daa
adc
mov
sub
fisubl
or
inc
popa
nop
mov
jecxz
dec
mov
pop
push
nop
stos
cmp
pushf
mov
jle
jo
lcall
pop
mov
lret
std
sub
testb
into
add
insl
aas
and
adc
mov
jno
leave
sub
adc
aad
jg
aad
sti
mov
das
xchg
aas
lock
lcall
jbe
push
cmp
sti
jnp
xor
out
into
push
xor
jae
aam
jno
andb
stos
fnsave
aaa
mov
push
dec
lahf
sbb
outsb
rcll
pop
xlat
sbb
or
inc
mov
sub
mov
mov
mov
aad
dec
insb
cmp
dec
cwtl
inc
lret
push
mov
jmp
imul
inc
fsub
outsl
pop
cltd
movsl
and
jbe
popa
add
enter
or
dec
xor
rcrl
popa
cmc
push
or
ret
scas
push
cmp
in
movsl
ffree
cld
push
into
adc
dec
cmp
dec
mov
iret
push
in
lods
testl
nop
push
xor
sbb
mov
outsl
push
rorl
and
insl
pop
mov
push
mov
les
xor
mov
test
xor
mov
xlat
aas
mov
pushf
mov
lds
pop
into
jno
mov
xchg
js
icebp
dec
lea
nop
mov
dec
mov
loopne
lock
clc
out
inc
inc
je
rclb
xor
addr16
add
movl
icebp
jecxz
insl
ret
mov
rorl
insl
jp
dec
divb
repnz
shll
xchg
outsl
push
mov
enter
pop
dec
mov
loopne
adc
mov
mov
hlt
rcrl
psubsb
pusha
stos
sub
push
jbe
lret
cmp
bound
negl
mov
ret
adc
add
adc
icebp
xchg
rcr
pop
cmp
mov
jnp
lahf
aad
sbb
push
shlb
jnp
mov
mov
fs
mov
shll
fiaddl
pop
repnz
lahf
and
cli
cwtl
mov
pop
mov
push
imul
cmpl
sub
cmp
sbb
adc
mov
pop
mov
rcr
inc
out
imul
xchg
mov
push
mov
bnd
mov
pop
into
lods
push
adc
xlat
cmp
jl
test
scas
xorl
push
pop
hlt
ljmp
repnz
pop
dec
roll
inc
xchg
pop
mov
in
fisubl
adc
clc
xor
push
mov
xchg
es
pop
fbld
mov
cmc
int
mov
inc
fldt
fnsave
and
push
fimull
ljmp
daa
fisubrs
aam
fdiv
mov
insb
pop
xor
mov
pop
xor
adc
or
sub
lret
imul
repnz
out
cmp
shlb
sbb
mov
or
pop
pop
aaa
iret
aam
sbb
mov
imul
inc
xchg
lcall
push
jmp
imul
leave
lods
stos
test
cltd
daa
mov
inc
xchg
fdivrp
test
shlb
sbb
enter
push
pushf
into
dec
imul
fs
imull
call
and
imul
xchg
ficoml
mov
mov
jne
in
add
lcall
ret
imul
lahf
xchg
push
mov
lcall
push
mov
cli
outsb
or
clc
stos
cli
loopne
jecxz
dec
pop
cmp
lcall
je
push
pop
std
fisubrl
or
fsubr
fnstenv
sbb
mov
fcompl
jecxz
add
sub
dec
jge
js
cmp
jno
test
xor
ficoml
repz
cmpl
pop
sbb
or
push
jmp
sbb
xchg
jno
lea
fucompp
mov
pcmpgtd
push
cmp
mov
aad
int
mov
scas
dec
in
jl
xchg
mov
cmp
push
out
xor
shll
cmp
int3
lret
shrl
sub
mov
neg
sbb
dec
pop
flds
ss
cmpsb
xlat
scas
xor
nop
inc
rsqrtps
adc
adc
xor
lods
inc
inc
mov
push
test
fwait
pop
mov
mov
lret
nop
or
lods
push
mov
dec
call
xchg
ljmp
sbb
dec
mov
add
push
iret
mov
roll
scas
push
mov
call
or
fisubs
jae
mov
lods
rcrl
push
call
dec
sub
mov
ss
mov
leave
popf
jo
and
fs
hlt
push
mov
cld
sub
mov
xor
or
jne
xor
push
inc
mov
cltd
cmp
movsl
push
add
nop
lods
jle
xchg
insb
out
aam
cwtl
lcall
lock
arpl
push
stos
adc
mov
xchg
xor
mov
mov
dec
out
hlt
jl
rolb
lcall
pop
scas
stos
pushf
adc
iret
fnstcw
ret
mull
loope
imul
out
insb
push
mov
mov
xchg
int
push
mov
mov
es
jle
xor
lret
mov
jg
enter
scas
enter
push
sahf
sarl
xlat
jne
aaa
cmpsb
mov
cmp
adc
lods
test
jbe
adc
push
dec
imul
lods
ljmp
sbb
mov
push
dec
pop
mov
jle
dec
and
into
dec
jecxz
cwtl
rcll
leave
jge
gs
ds
sbb
mov
or
lds
ds
ljmp
insl
loopne
je
roll
pushf
sbb
mov
hlt
stos
sbbb
mov
stc
xchg
xor
fs
mov
stos
ss
pop
aad
sub
inc
or
xchg
mov
inc
adc
add
push
leave
enter
stos
push
decl
jbe
daa
sar
inc
and
fistpl
shlb
fs
and
add
xchg
push
insl
je
xlat
mov
mov
adc
test
pop
std
and
leave
mov
jne
add
repnz
xchg
adc
mov
stc
int3
or
shr
mov
dec
adcb
jecxz
cmp
dec
or
loop
and
xchg
mov
mov
fwait
dec
pop
push
movsb
popa
cmc
sahf
enter
rcrl
jnp
lock
nop
test
ljmp
push
push
adc
jno
sarl
stc
xchg
ds
sbb
mov
pop
push
mov
pop
inc
sbb
dec
mov
test
je
gs
frstor
ss
mov
stos
xchg
je
pushf
pop
mov
inc
iret
sbb
or
mov
xchg
mov
ss
addl
add
xchg
xor
xchg
dec
dec
out
adc
test
outsl
nop
fwait
xchg
movsl
out
mov
or
aam
arpl
cmp
cmpsl
lods
xor
lds
push
fidivrs
jo
cltd
in
push
out
push
mov
in
lret
or
mov
cmc
repnz
mov
loopne
mov
add
out
dec
pusha
adc
mov
outsb
mov
cltd
jl
lods
push
aad
rol
fsubrl
js
push
dec
sub
jae
mov
push
sub
insl
inc
inc
or
adc
outsl
imul
sub
cmpl
int
pop
pushf
or
mov
divb
rcll
dec
flds
dec
or
fwait
xor
adcb
leave
lock
int3
pop
imul
decb
mov
cli
adc
cmc
adc
and
xorps
or
xchg
jne
mov
es
jge
jle
xchg
movsl
jae
data16
ret
ja
cmp
cmp
ds
subl
xor
and
out
movsb
add
subb
popa
cmc
and
mov
mov
mov
psraw
ss
aas
fsubl
jge
sbb
test
cwtl
push
cmp
and
ror
sub
cltd
push
aad
popf
mov
push
outsb
cwtl
fistpll
pop
sbb
jne
or
popf
mov
dec
push
rolb
sub
sub
adcl
cltd
lds
push
ds
lods
mov
cmc
xchg
sub
or
or
jle
aas
xlat
mov
pop
sub
cmp
sbb
movsl
cli
mov
sbb
sbb
cmp
xchg
arpl
push
sub
and
mov
jb
lret
imul
pop
imul
and
jb
out
inc
pop
adc
cmp
cmp
sub
pushl
push
mov
jo
and
inc
xor
push
rol
in
sbb
icebp
adc
push
testl
add
mov
xor
push
roll
and
lcall
xor
inc
jbe
roll
and
pop
cmpsb
xchg
add
mov
xchg
iret
stc
notb
sbb
std
adc
popa
inc
dec
mov
lea
es
dec
stc
dec
mov
push
xchg
push
jne
xchg
jle
xchg
loopne
push
andb
call
mov
in
cs
dec
lods
fmulp
ljmp
adc
int3
sub
imul
mov
lods
cmp
inc
sub
sbb
push
fldcw
loope
inc
movsb
jmp
cmp
push
into
or
cmp
scas
call
mov
mov
shrb
xchg
sub
test
rorb
std
xorb
popa
jnp
inc
push
dec
add
inc
mov
adc
lock
hlt
or
add
dec
mov
test
inc
and
lcall
push
push
stc
aad
stos
sti
fcmove
mov
imul
shrb
fcomi
aaa
loope
inc
popf
pop
push
jmp
pusha
cmc
mov
jle
int3
testb
in
pop
inc
not
cmp
xor
jb
icebp
dec
aad
xor
out
in
pop
xchg
lahf
push
push
repz
rcll
lods
xor
aas
imul
cmp
sub
stc
test
xor
paddq
dec
fildll
insl
out
lock
jnp
mov
lret
sub
add
add
jmp
push
mov
pop
pop
push
pop
add
lgs
rcrb
jmp
ds
sbbl
fdivrp
dec
mov
enter
stos
jo
mov
pushf
xor
aaa
mov
les
jmp
addb
push
rorb
add
out
out
fs
inc
shrb
or
and
movsl
adc
ljmp
adc
xor
cmp
jno,pn
and
add
insl
pop
repz
sbb
lods
outsl
or
je
push
idiv
mov
push
push
cmp
push
rclb
adc
cwtl
ds
jecxz
sti
cmovg
clc
inc
int
fwait
jecxz
cmpsb
cs
jmp
arpl
fwait
mov
push
sti
popa
xchg
js
jns
sub
jmp
test
gs
imul
inc
mov
roll
pop
pop
jne
in
xchg
xchg
leave
or
rcrl
xchg
lcall
push
repnz
test
loop
andb
xchg
mov
test
rclb
ds
push
jp
hlt
and
leave
js
pmaxub
mov
xchg
mov
push
lret
inc
ja
ret
lds
cs
dec
mov
mov
push
test
out
cld
pop
jne
pop
loop
and
xchg
mov
rorl
rorb
lret
outsb
sti
pop
pop
xchg
xchg
pop
leave
push
push
push
push
xchg
stos
lods
and
mov
push
int3
and
cmp
xor
and
rolb
sahf
shlb
dec
int3
jno
xchg
mov
xor
lock
jecxz
test
jge
scas
cmc
dec
or
xor
das
sbb
filds
add
mov
loopne
lods
stos
lods
adcl
outsl
mov
xor
add
mov
subb
or
sbb
cmp
pop
dec
cmp
pusha
mov
and
fistpll
sub
and
insl
loop
mov
pop
sbb
out
stc
jl
iret
mov
sub
movsb
fadd
jae
push
push
aaa
js
jp
add
mov
orb
inc
mov
in
stos
pushf
dec
arpl
cmc
push
pop
test
fidivrl
push
sub
cmc
aas
cwtl
jle
imulw
sti
in
mov
pop
cmpsb
push
mov
mov
cmpsl
fsts
mov
push
pop
add
std
lret
inc
xor
dec
inc
in
movsb
or
and
mov
dec
out
fistpll
pop
icebp
out
cltd
jmp
and
and
jne
pop
adc
dec
jo
inc
adc
movsb
dec
out
insl
mov
mov
jo
sub
dec
rcll
mov
sbb
test
mul
cmp
pop
std
xor
xchg
cwtl
xlat
rcrb
sub
fsubrs
cwtl
repz
mov
loop
jno
dec
mov
loopne
and
ret
dec
dec
enter
lea
pop
mov
adc
mov
mov
push
xchg
or
std
or
daa
faddl
test
aam
mov
stc
bound
test
push
inc
lds
fistps
shlb
dec
jg
repnz
fst
inc
xor
loop
mov
push
lret
in
mov
pop
inc
xchg
fistps
aad
sbb
test
enter
js
cmp
cmp
cmp
icebp
daa
mov
cltd
je
push
std
addr16
push
clc
and
daa
cmp
lret
sbb
pop
dec
int
sub
sahf
and
hlt
or
mov
dec
iret
mov
pop
xchg
fmuls
jg
cmpsl
mov
pop
cli
push
sbb
rcr
xchg
call
int3
push
in
mov
or
in
fistpll
test
pushf
hlt
sbb
test
fcompl
lret
and
mov
xchg
xchg
sbb
xchg
pop
cs
mov
dec
int3
jecxz
inc
cs
loop
adc
sbb
push
cwtl
xchg
adc
adc
int
inc
dec
cmc
cmp
mov
and
mov
jg
daa
ds
ret
shl
dec
hlt
adc
ret
pop
sahf
adc
nop
push
dec
or
pop
jb
sbb
dec
in
xchg
pop
stos
jmp
pop
testl
mov
pop
jmp
pop
dec
in
and
push
mov
sbb
sub
jbe
cmpl
push
test
adc
fistps
divl
mull
xchg
cld
cmpsb
ret
xor
mov
jl
mov
mov
add
bound
mov
jmp
push
adc
into
cmp
dec
shrb
push
lds
adc
cltd
push
dec
sbb
scas
leave
dec
ja
movsb
xchg
inc
in
sbb
popa
cmpl
mov
pop
jns
pushf
test
in
mov
ljmp
mov
push
ret
outsl
enter
mov
mov
mov
sbb
xor
push
inc
clc
xchg
dec
sbb
xchg
mov
pop
sti
pop
shrl
out
popa
je
mov
sarb
inc
pop
ret
pop
out
outsb
arpl
fdivrl
aad
push
jo
fidivs
jl
jb
inc
inc
into
pop
and
out
nop
jae
push
clc
sub
jae
cld
and
add
and
fwait
sbb
data16
std
sbb
pop
mov
mov
cmp
pop
ss
adc
and
pop
pop
push
in
out
cmp
adc
mov
lea
pop
adc
xor
pusha
xchg
jo
xorb
mov
rolb
loopne
lock
notb
and
xor
pusha
xchg
jo
xorb
mov
rolb
loopne
lock
notb
and
xor
pusha
xchg
jo
xorb
mov
rolb
loopne
lock
notl
and
xor
pusha
xchg
mov
xorb
mov
mov
andnps
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
lods
sub
outsl
inc
xlat
out
repz
and
in
add
or
pop
add
or
push
add
add
xor
sbb
sbb
sub
sbb
test
jns
popf
add
push
add
gs
add
fldl
and
lods
add
pusha
add
add
popf
add
add
add
add
mov
mov
add
add
add
add
add
add
sbb
int
jo
sbb
jnp
bound
sub
fldl
sub
add
add
lcall
add
cmp
inc
add
add
add
jnp
test
add
gs
add
sahf
add
cwtl
add
add
add
fiaddl
xor
addl
add
add
add
add
sbb
cmp
int3
add
add
add
add
addr16
add
lea
sub
sbb
sub
add
test
int
xchg
add
add
add
add
add
sub
add
add
xchg
add
add
add
fldl
adc
lea
das
add
add
das
add
or
int
add
add
jae
sub
add
add
add
add
add
xchg
add
add
add
add
add
in
aas
add
add
push
add
add
add
add
add
add
add
test
movb
add
push
add
add
add
cmp
add
add
add
add
add
add
add
add
add
sbb
mov
movsl
add
into
add
xchg
add
add
add
add
add
add
sbb
add
add
add
dec
add
push
add
add
add
add
mov
add
dec
add
add
add
add
or
add
add
and
repnz
mov
sbb
sbb
jnp
cltd
add
add
sbb
add
popf
add
add
add
add
add
xchg
add
push
loopne
in
add
add
add
add
add
ljmp
add
and
sbb
mov
push
add
data16
add
add
add
add
add
add
int
inc
add
push
and
add
or
cmp
push
add
add
sbb
pop
add
in
test
add
imul
add
add
add
int
xor
repnz
add
add
or
xor
and
pop
add
add
int
test
add
add
add
lcall
add
add
lret
add
add
mov
add
add
add
add
add
int
adc
add
add
add
add
add
add
add
jae
jbe
or
xchg
dec
add
lret
add
add
add
faddl
mov
adc
add
and
add
add
add
add
jp
adc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
or
sarl
jmp
cmp
dec
mov
in
adc
popf
mov
loop
scas
scas
dec
sbb
pop
xor
sub
push
rorb
js
pop
pop
enter
pop
and
cli
dec
push
xchg
xchg
out
xchg
daa
add
push
jns
cmpsb
test
pop
xor
jecxz
mov
arpl
fsubrp
fldl
mov
sub
fisubrs
sbb
sahf
fstpl
mov
mov
insb
xchg
or
xor
adc
in
ret
adc
jae
xacquire
movb
aaa
bound
adc
rcrl
and
stos
hlt
pop
pop
repz
dec
shlb
pusha
push
shlb
sahf
pop
mov
daa
jg
in
lret
xor
inc
inc
movsl
xchg
jge
mov
mov
rcrb
xor
cmp
sub
adcb
xor
jmp
pop
pop
jge
mov
push
test
xor
lret
jns
adc
inc
push
in
insb
xchg
ret
mov
ds
add
push
jge
cmpsl
xchg
jnp
das
mov
push
fdivs
add
xchg
imul
xchg
js
insb
loop
repz
and
aaa
add
dec
push
jmp
dec
dec
push
or
push
lret
and
and
popf
or
pusha
lods
in
sub
cwtl
inc
jg
push
nop
jb
fnstcw
cmp
outsl
cmp
lret
xchg
push
icebp
clc
lcall
add
mov
stos
fidivl
out
jp
dec
loope
pop
fldcw
repz
repnz
movsl
xor
cld
pop
in
mov
jne
and
sub
jo
cmp
addl
xchg
or
pushf
push
adc
mov
xor
dec
pusha
rcl
mov
inc
filds
or
mov
mov
cmp
pop
xor
jnp
mov
dec
dec
fistpl
or
les
pop
shlb
mov
dec
addb
add
adc
out
mov
jnp
rcrl
repnz
aaa
fwait
dec
test
mov
inc
dec
fildll
mov
out
push
adc
nop
jmp
adc
push
fisttpll
jl
in
xor
add
arpl
ds
movsb
out
sbb
bound
int
test
mov
inc
mov
aas
insb
in
int
sahf
aas
sub
cmp
cli
jnp
lods
icebp
push
sbb
inc
scas
pop
sbb
push
adc
jb
dec
outsb
mov
push
test
call
xchg
ja
mov
mov
sub
pop
dec
andb
cmp
cmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
