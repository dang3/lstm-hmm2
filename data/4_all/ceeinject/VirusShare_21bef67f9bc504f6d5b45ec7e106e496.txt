call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
or
cmp
sub
out
insb
cli
push
into
or
mov
pop
int
in
daa
in
aaa
sbb
or
cmp
xchg
cmpsl
insb
ret
pushf
dec
mov
lods
ja
jne
adc
sbb
or
cmp
sub
pop
sahf
dec
jl
insb
lods
pushf
inc
mov
leave
add
push
sbbl
or
jo
jl
xlat
dec
insb
push
xchg
sbb
arpl
je
lcall
stos
fsubs
dec
movl
negb
dec
jmp
aaa
and
hlt
xlat
adc
cltd
pop
or
test
or
mov
pushf
inc
fcoml
or
or
jg
test
sub
shlb
insb
xor
inc
cli
cmp
lahf
xchg
in
fsub
daa
loope
repz
cmp
jl
insb
fcomip
mov
lods
into
popl
adc
mov
test
xor
pop
cmp
test
int3
idiv
and
or
cmp
sub
pop
xchg
cmpsl
insb
scas
pushf
inc
mov
jle
outsb
fcompl
int3
paddb
dec
movsl
push
andb
test
idivb
lret
or
hlt
sub
push
shll
adc
dec
cwtl
pop
inc
scas
dec
mov
cmp
adc
into
xor
xor
add
jne
ja
pop
lods
inc
repz
push
and
pop
orl
mov
xchg
jl
insb
mov
inc
mov
lods
ja
pop
int3
pop
cld
daa
in
aaa
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
mov
inc
mov
lods
ja
pop
int3
pop
cld
daa
in
aaa
sbb
or
mov
jle
das
or
or
imul
and
negb
fisttps
push
pop
aaa
xor
or
dec
mov
jecxz
adc
insb
or
jnp
add
dec
sbb
test
daa
xor
cltd
adc
sbbb
mov
rolb
nop
push
xor
js
or
jg
sub
fsub
push
mov
lahf
addl
lods
lahf
jl
pop
dec
fidivrs
in
jge
fidivs
insb
lahf
sub
jo
das
cli
and
lret
sarl
and
outsl
loop
push
push
cmpsb
push
pop
xchg
fldcw
cmp
fsubrs
scas
lcall
outsl
or
adc
pusha
jle
jl
fadd
sbb
adc
lods
mov
rcrl
jno
jecxz
js
scas
push
pop
mov
push
mov
imul
and
add
or
pop
ror
dec
repz
lds
out
mov
ja
sbb
mov
cmp
or
cmp
clc
repz
in
int
push
push
sahf
bound
out
inc
mov
dec
mov
sbb
fprem1
js
mov
pop
in
aam
orl
xchg
cmp
and
sbb
push
xchg
repz
mov
test
push
and
jp
or
fcom
insb
push
inc
popl
loopne
rcrl
sbb
push
xor
shlb
ss
mov
or
pushf
mov
inc
mov
jmp
aad
in
xchg
xchg
fsts
clc
shll
popa
mov
out
aam
push
push
test
jnp
insl
jbe
fistpll
mov
push
inc
or
xchg
fisttpll
repz
les
pop
jecxz
add
pop
inc
pop
and
jne
cmpsb
push
push
inc
loop
push
lds
lcall
inc
ljmp
jmp
jno
pop
mov
pop
aaa
xchg
add
test
aaa
lds
jecxz
xchg
xchg
orl
in
xchg
pop
inc
jae
in
in
adc
xor
and
push
sub
ficompl
cmp
stos
dec
ds
push
sbb
xchg
cmp
test
sbb
or
pop
aas
fcoml
orl
es
dec
mov
push
dec
push
ja
cmp
dec
xlat
fstps
pop
daa
jno
pop
scas
ret
inc
jmp
sub
xchg
fmull
les
lds
arpl
pop
fnstcw
cwtl
inc
jne
outsb
bound
or
gs
adc
sbb
subb
jp
lods
stos
pop
fisttpll
loop
xor
test
push
jb
lock
mov
xchg
ljmp
dec
xor
pop
dec
dec
xchg
scas
loope
stc
outsb
mov
push
mov
add
into
test
mov
adc
pop
mov
clc
and
xchg
in
movsl
jns
out
outsb
jg
cmpb
stos
push
jbe
lods
mov
sbbb
mov
mov
xchg
jl
and
shll
inc
xorb
add
jmp
fnstcw
repz
mov
mov
leave
jge
sbb
int
movsl
jbe
fs
sbb
pop
movsl
mov
xchg
jns
xor
sub
or
xchg
scas
mov
jmp
out
mov
fwait
pop
mov
and
in
fdivrs
iret
sahf
shrl
in
int3
aad
mov
or
popl
inc
into
push
int3
or
pop
inc
bnd
daa
add
ds
arpl
insb
adc
into
ja
inc
mov
push
or
call
add
mov
jnp
xor
cs
ret
idivb
ret
lret
mov
iret
sarb
pop
pop
jb
mov
inc
and
loope
mov
not
adc
dec
mov
add
jns
mov
adc
jp
fdivrs
mov
jne
cld
adc
aaa
cmp
mov
cmp
pop
out
mov
mov
xchg
andb
shl
adc
jmp
inc
xchg
jne
lods
hlt
mov
xor
repnz
pop
add
sarb
xchg
xor
jo
lahf
jnp
jle
lods
xor
shlb
sbb
adc
pop
xlat
mov
xchg
and
inc
test
sub
mov
fisubrl
or
mov
fcmovnu
jnp
push
loope
aad
mov
and
mov
data16
ret
push
xor
das
dec
movsl
test
lock
lret
shl
scas
in
adc
xor
xchg
dec
sbb
into
pushf
sbb
adcl
adc
dec
sub
out
in
ficoms
cld
pop
mov
jnp
outsl
ffreep
lds
mov
sub
xor
addb
lods
adc
rclb
clc
inc
inc
sbb
mov
sbb
ret
fistl
stc
cmp
jg
gs
or
popa
adc
or
cs
cmp
and
mov
adc
push
pop
pop
ss
adc
cmpsb
add
jp
sub
fwait
sub
dec
lret
outsl
cmp
movsl
lcall
enter
insl
ljmp
sub
jge
xlat
out
jns
cmp
mov
dec
sub
out
jnp
fwait
in
dec
xor
inc
and
sub
jne
or
sbb
cmc
pushf
je
lods
popf
shl
mov
sub
roll
pmullw
lds
imul
add
cmc
shlb
es
and
xor
xchg
pop
sub
sbb
push
jp
mov
mulb
cmpsl
push
lret
scas
fwait
ret
jecxz
sub
mov
xchg
pop
cwtl
out
pop
pusha
rorb
inc
mov
adc
sub
nop
dec
adc
pop
dec
cwtl
cmp
add
inc
fldenv
inc
icebp
mov
es
dec
aad
shlb
xchg
xor
inc
lcall
pop
cmp
mov
nop
mov
popl
xchg
cmp
add
push
xchg
add
ja
out
mov
ret
mov
jle
jecxz
inc
imul
and
add
adc
adc
mov
out
pop
xor
cmp
cmc
dec
jg
xchg
push
mov
fidivl
xlat
sbb
mov
scas
inc
ret
imul
mov
loope
aad
rclb
dec
add
leave
outsl
jecxz
mov
shrl
cmpl
xchg
sbbl
lods
jbe
cltd
dec
and
xchg
pushf
sbb
aad
aam
in
mov
fucomip
cld
sub
aam
mov
lret
sub
xchg
xor
dec
imul
inc
sbbb
pop
jge
scas
bound
cmp
inc
fucomi
or
jg
js
dec
prefetch
das
cwtl
jmp
lods
ds
add
lret
loope
inc
test
dec
in
mov
arpl
lds
mov
imul
pop
movb
ja
hlt
push
sbb
mov
roll
push
mov
mov
sbb
jmp
jmp
adc
cmpsb
pop
lock
ljmp
in
sbb
mov
mov
xchg
lcall
sahf
push
mov
insl
xor
sbb
adc
insb
addl
push
sbb
sbb
inc
testl
mov
jne
stos
xchg
mov
mov
cmp
and
aas
clc
fcmovb
push
cmpsb
aaa
aam
add
add
icebp
mov
sbb
jle
data16
jmp
lock
loop
sub
mov
sub
cwtl
je
out
pop
adc
add
mov
adcl
inc
dec
inc
mov
fwait
mov
mov
dec
pop
cmp
jno
push
ds
inc
mov
sbb
addl
ja
cltd
jge
xchg
std
jge
sti
dec
stos
sub
adc
pop
or
cmp
inc
in
sub
cmp
push
mov
sbb
dec
ja
push
inc
sbb
xchg
ljmp
outsb
ljmp
or
insb
and
adc
iret
daa
and
dec
cmpsb
fldcw
dec
or
dec
rorl
adc
fsts
dec
xor
or
aaa
std
xor
in
iret
les
arpl
push
je
or
lret
arpl
jno
call
jne
sbb
pop
in
fsub
lret
xor
inc
sbbb
cmp
push
aaa
xchg
mov
sbb
adc
shll
sbb
scas
xchg
mov
aaa
mov
mov
and
pop
icebp
push
mov
mov
mov
mov
sahf
and
int
out
call
aas
loopne
or
inc
jle
mov
shlb
mov
fstl
in
movsb
add
mov
or
lahf
dec
in
push
fs
inc
popf
enter
lcall
xor
or
cmp
loope
xor
jmp
movsb
inc
mov
loope
xlat
mov
inc
jmp
xchg
jp
shrb
lret
repz
fisttpl
call
bound
rorl
push
js
ds
lcall
dec
in
pop
mov
mov
sbb
xor
movsb
mov
xchg
or
shlb
jmp
insl
jbe
pushf
or
xor
dec
push
adc
xchg
cmpsb
sbb
cmp
out
add
add
and
add
stos
shlb
ja
xchg
daa
es
inc
aas
mov
xchg
loopne
push
or
mov
push
cmpsb
and
aaa
lret
sub
sub
xor
cmpsb
lock
insb
xor
aas
pop
jle
add
push
pushf
sbb
hlt
outsl
inc
mov
fistpl
inc
mov
cwtl
insl
stos
mov
stos
dec
inc
rorl
fidivrl
jmpw
pop
xchg
mov
outsb
imul
mov
push
mov
lea
sbb
mov
xchg
pop
mov
xchg
testb
lcall
dec
je
xlat
mov
fsubp
push
sarl
imul
and
sbb
sbb
inc
xor
je
repz
xor
xchg
scas
sbb
stos
daa
xor
scas
and
mov
jecxz
test
loopne
bound
cmp
mov
ret
movsb
jmp
sub
fnstcw
pop
fsubrl
sbbb
lock
push
and
call
inc
in
dec
mov
mov
push
fbld
mov
xor
push
or
xlat
lds
in
ds
adcl
fldt
negl
lods
xchg
repz
xchg
scas
add
sbb
xor
scas
mov
loope
stc
fistpll
cmpsb
lock
je
fistps
and
adc
ret
pop
pushf
xor
sbb
adc
dec
sub
lcall
leave
daa
push
jmp
into
pop
sbb
jle
push
and
leave
fbld
bound
pusha
subl
mov
fmul
sbb
dec
hlt
out
add
dec
leave
or
xchg
scas
jo
sub
push
mov
adc
xchg
add
xor
outsb
sarl
mov
arpl
push
sbb
sub
mov
nop
scas
popa
xlat
ret
mov
js
or
movsl
cmpsb
add
in
mov
jae
mov
out
data16
arpl
test
stos
clc
js
xor
or
add
or
dec
fwait
es
push
in
fs
cmp
scas
dec
mov
push
sub
add
xchg
cltd
outsl
push
and
xor
negb
lds
mov
adc
fildll
sub
jp
enter
rcll
hlt
dec
mov
or
outsl
pusha
lahf
sbb
jecxz
ret
xor
push
mov
mov
xchg
pop
jnp
jg
lea
pop
js
test
add
cmp
shl
jo
xor
sti
xor
scas
dec
xor
add
pop
sbb
add
sbb
mov
mov
adc
or
mov
testb
pop
daa
mov
xor
fistl
movsl
shlb
dec
mov
sbb
xchg
fisubrl
ljmp
test
repnz
mov
push
cmpsb
inc
sub
outsl
push
sub
inc
and
test
fsubs
xchg
stos
mov
jb
dec
shll
test
add
fstps
nop
dec
xchg
nop
dec
cmpsl
sub
in
fs
xchg
lods
mov
push
sbb
pop
repz
sbb
pop
or
movsl
add
xchg
mov
mov
inc
cmp
cmp
add
adc
inc
arpl
push
or
dec
xor
sbb
repnz
subl
adc
jns
fidivrs
xor
out
lea
es
pusha
inc
adc
add
rorl
sbb
in
out
pop
sti
inc
out
jp
push
jl
daa
cltd
lods
and
inc
xchg
loope
mov
mov
bound
ds
sub
inc
cmp
scas
inc
pop
xor
leave
push
dec
lods
loopne
cmp
jp
ja
in
inc
and
out
in
test
adc
fcompl
mov
push
stc
inc
inc
jl
mov
inc
mov
xchg
mov
pop
adc
cmpsl
mov
adc
or
sbb
test
leave
imul
cmp
cmp
cmpsb
push
mov
adc
imul
arpl
mov
add
test
fisttpl
sti
je
leave
cltd
inc
or
add
and
ret
sbb
inc
ja
mov
xlat
ss
and
mov
std
test
dec
outsb
movsl
fmull
mov
jmp
repnz
insl
mov
inc
add
test
out
in
or
inc
mov
mov
cmpb
xor
push
sub
incb
aaa
lret
jg
int
loopne
xor
jge
push
xor
push
lock
fstps
test
lret
push
outsb
pop
mov
push
or
mov
xor
in
cwtl
fcoms
sbb
das
mov
add
pop
xor
and
leave
dec
decb
hlt
jne
dec
das
shl
or
cmpsl
call
xchg
lods
pop
mov
imul
clc
push
enter
ficompl
pop
pop
xchg
sbb
mov
movsb
mov
inc
out
inc
xor
xor
test
bound
je
rolb
fwait
arpl
aam
frstor
mov
loop
fisubrs
test
adc
mov
test
adc
sub
sbb
fsts
pop
pop
sbb
adcb
jno
mov
rorb
rcrb
in
mov
mov
and
xchg
push
test
push
jbe
ljmp
add
adc
dec
jae
and
mov
jle
jns
jge
daa
push
and
cmp
arpl
sub
jecxz
scas
mov
mov
xchg
sbb
cmp
cwtl
lea
in
mov
pop
jnp
jp
jb
mov
mov
jge
cmp
sbb
cmp
push
and
iret
jbe
ss
out
adcb
sub
test
popa
movb
push
inc
xor
lods
push
pop
mov
dec
ret
xor
cmp
push
inc
xchg
hlt
pop
and
jg
inc
in
movsl
push
out
push
test
add
push
int3
mov
cmpb
dec
sbb
lods
add
frstor
xlat
mov
loope
xchg
fcmovne
ret
adc
and
xchg
dec
mov
push
sub
out
sub
out
and
mov
jecxz
jle
sahf
add
pop
adc
in
iret
cmp
jnp
mov
or
sub
test
mov
lock
pop
mov
mov
loop
cmp
jle
cmp
or
cmp
xor
inc
jae
jmp
mov
daa
jo
fwait
xor
sub
les
and
cmp
inc
pushf
jnp
ss
cmp
cwtl
jge
sarb
cmp
cs
push
mov
cwtl
lret
out
cli
arpl
daa
inc
sbb
movsb
push
rclb
mov
add
filds
ret
pop
xchg
jnp
popa
inc
fnstsw
lcall
lods
push
xor
and
jae
hlt
jae
jle
xlat
jg
scas
mov
sub
mov
mov
add
dec
scas
push
inc
push
adc
cmp
ss
jmp
lods
aad
rorl
xchg
fiadds
xchg
mov
fdivl
push
push
aas
retw
mov
sbb
mov
add
or
pop
pop
cmp
pop
sbb
push
bound
and
xor
add
repz
cmp
and
mov
mov
push
add
pop
jmp
add
dec
pop
pop
mov
dec
out
sub
push
sbb
pushf
push
pop
int3
jmp
mov
lock
mov
xlat
lcall
inc
and
dec
mov
sbb
aas
and
loop
adc
cmp
sub
mov
loopne
or
and
xlat
jge
mov
test
in
jo
mov
add
inc
fsubl
mov
xor
test
es
xor
ss
ljmp
sarl
xor
inc
push
in
out
lock
xchg
adc
popf
cmpsl
sub
ficoms
mov
fldt
popf
insl
mov
popa
cmpsl
leave
mov
sbb
mov
pop
dec
pushf
lcall
push
in
push
mov
mov
or
fildll
repz
cmp
xchg
in
jnp
loope
in
inc
popa
in
add
pop
push
pop
mov
mov
cmpsl
sub
call
enter
rclb
dec
dec
sbb
fistpll
cltd
addr16
and
in
stc
sub
pop
pop
mov
push
outsb
jae
sbb
xchg
and
sti
imul
inc
inc
mov
adc
cli
lods
into
push
ljmp
pop
out
gs
dec
sub
jp
pmulhuw
fmul
mov
loopne
out
push
dec
popl
movsb
and
mov
fdivrs
pop
pushf
insl
add
in
mov
loop
loopne
mov
push
in
ret
movl
insb
jno
movsb
in
and
adcl
test
test
stos
in
mov
push
lcall
rol
into
push
or
push
fildll
cltd
stos
mov
iret
popa
fisubl
repz
in
xchg
adc
jp
cld
rcl
and
aas
shlb
call
pop
sub
aas
cld
pop
cmp
popf
or
xchg
sti
mov
sbb
adc
pushf
xchg
fwait
mov
sarb
mov
jmp
dec
inc
jp
mov
sbb
add
push
sub
dec
mov
out
cmp
and
jnp
int
dec
or
movsb
sub
pushf
out
data16
movsl
xor
test
out
lods
inc
pop
fldenv
inc
sub
je
lods
js
xchg
sahf
sbbl
outsl
shll
inc
lock
movsl
sbb
stos
inc
sub
mov
loop
xchg
pop
mov
sub
mov
sub
scas
inc
mov
out
add
in
cltd
sbb
xchg
test
mov
aas
pop
roll
lods
rclb
jns
cmp
pusha
in
outsl
fistps
mov
mov
pop
xchg
mov
adc
daa
inc
add
dec
sahf
xchg
jge
in
lahf
sahf
mov
jge
pop
cmp
add
adc
push
das
pop
xchg
jle
push
data16
xor
int
push
push
xchg
lods
test
test
in
xchg
movsb
daa
xchg
lea
and
or
adc
push
xor
sub
mov
xor
push
pop
or
ja
xchg
cld
fcoms
lret
sub
sar
and
lods
data16
mov
pop
mov
mov
jbe
xchg
pop
in
push
cwtl
movsw
cmpsl
xchg
out
mov
or
jmp
subb
popf
xorl
dec
and
movsl
mov
push
ljmp
lock
in
ret
mov
js
jecxz
inc
lahf
scas
pop
sarb
cmpsb
inc
in
inc
adc
ficompl
imul
iret
mov
add
jecxz
dec
ds
loope
aas
xchg
imul
sbbb
xchg
aaa
mov
das
lock
sti
out
push
mov
or
pop
shll
mov
out
negl
xchg
jl
insb
mov
inc
mov
lods
ja
pop
int3
pop
cld
daa
in
aaa
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
mov
inc
mov
lods
ja
pop
int3
pop
cld
daa
in
aaa
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
mov
inc
mov
lods
jae
pop
int3
pop
cld
and
xor
jecxz
negl
xchg
jl
insb
ja
inc
mov
push
lods
add
pop
adc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
int
frstor
in
xor
dec
sarl
adc
add
jge
or
icebp
cmp
and
xor
inc
lea
popa
lods
jno
rorl
pop
insl
mov
shll
loope
icebp
cmp
cmpsl
in
idiv
push
lea
popf
dec
lods
mov
pop
rcrb
pop
lea
inc
orb
xor
lods
adc
gs
mov
xchg
sub
dec
xchg
or
or
mov
js
lea
mov
cmp
js
sbb
aam
sub
add
and
and
rcrl
rcrb
dec
sub
adc
imul
inc
cs
pushf
pusha
jae
xchg
mov
mov
dec
or
push
cmp
mov
icebp
jo
add
cmp
pop
xchg
mov
xor
sbb
test
push
fdivrp
xchg
mov
in
mov
jns
imul
inc
or
loope
xor
adc
and
pop
std
inc
lea
mov
jns
scas
jge
or
xchg
push
jae
addr16
gs
pop
std
das
call
adc
loopne
rcrb
rorb
test
mov
jae
test
mov
sub
xor
or
push
shlb
fstpl
mov
mov
xchg
jnp
push
jae
and
add
push
popf
popa
lods
jno
orl
jge
or
icebp
cmp
and
xor
inc
lea
popa
lods
jno
orl
jge
or
icebp
cmp
mov
outsb
aas
or
and
movb
inc
lahf
mov
and
mov
int3
xor
jg
addl
xchg
jl
push
andl
fsubs
jecxz
rorl
insb
xor
jns
xchg
stos
jo
mov
jp
pop
mov
adc
insl
cmp
sbb
push
stc
lea
inc
scas
sbb
sub
xchg
jp
imul
iret
push
mov
sti
adc
out
fldl
rorb
cs
int
cs
adc
scas
cs
aas
add
mov
scas
popa
and
inc
jl
inc
mov
push
mov
sub
arpl
int3
and
sbb
in
js
push
jle
lahf
jno
jl
and
test
negl
pop
dec
cld
inc
nop
fcmovnb
add
jo
sarl
adc
or
mov
mov
jae
dec
popa
lahf
ret
add
mov
popl
ret
lcall
fldenv
in
dec
sbb
das
jge
adc
xchg
aam
jb
fwait
push
xchg
jp
jns
ljmp
call
cmp
mov
xor
pop
shrl
inc
xchg
insb
sbb
sbb
ljmp
hlt
shr
test
sub
cli
jno
insl
out
push
rcr
cmc
dec
sti
mov
or
inc
imul
xchg
or
mov
inc
mov
fnstenv
fs
mov
dec
mov
insl
bound
sbb
mov
stos
fldenv
insb
add
sbb
rorl
adc
int3
push
out
cld
dec
inc
pop
pop
jnp
test
ds
mov
nop
psraw
loopne
stos
rcrl
insb
aad
xlat
ljmp
jno
daa
loope
jp
ljmp
or
out
test
or
cmp
in
pop
adc
or
sub
adc
adcb
shll
mov
je
inc
inc
add
xchg
insb
or
fldl
lock
pop
mov
movsb
movsb
in
add
nop
lcall
addr16
rclb
xor
cmp
jmp
inc
imull
mov
int
mov
icebp
repnz
data16
sahf
inc
sub
pop
roll
mov
xchg
xchg
mulb
aad
push
mov
push
adc
stos
jno
out
notl
cmpsb
jne
xchg
das
and
xchg
pop
fs
aad
add
jo
mov
xchg
sti
inc
push
adc
idivb
loop
outsl
sbb
or
mov
jl
pop
mov
testl
or
fldl2e
cld
pop
cwtl
jno
adc
jb
adc
push
cld
mov
mov
mov
movsb
daa
test
push
lock
imul
rcll
jbe
in
dec
cli
mov
mov
xchg
push
cli
add
xchg
dec
xor
int
mov
mov
mov
sub
mov
inc
aad
push
ficompl
xor
scas
in
add
popf
xor
data16
cmp
aad
push
push
mov
sub
xor
sub
sbb
int
popa
xor
add
stos
imul
pusha
out
mov
lock
dec
inc
push
xor
jbe
dec
push
int3
xchg
orb
imul
test
add
inc
in
xor
adc
out
mov
ds
out
cld
jmp
mov
in
in
xchg
sub
aas
or
scas
mov
add
stos
xchg
outsl
aam
into
fabs
and
and
mov
xchg
sbb
out
test
push
inc
sbb
data16
movsl
and
sub
mov
pusha
or
lea
fs
arpl
cmp
cmp
sahf
idiv
repz
js
cltd
inc
sbb
mov
lea
icebp
and
call
in
outsl
sub
addr16
jb
fwait
in
or
iret
in
movsl
ret
mov
or
mov
mov
mov
sbb
imul
jo
inc
mov
mov
subl
fidivrs
clc
jnp
sub
or
dec
daa
lods
out
loopne
int
add
mov
lods
into
cmpsl
insb
out
jae
sub
out
mov
cmpsl
lret
sub
cmp
enter
jp
push
popa
lods
sub
fcoms
out
in
jne
add
das
test
inc
into
pop
ret
mov
sbb
incl
fdiv
shrb
jo
adc
and
fmull
pop
sahf
dec
push
mov
pop
xor
jo
movsb
jbe
sub
push
cwtl
test
lock
mov
aaa
cmp
cs
xchg
aam
out
inc
xchg
dec
dec
push
lret
icebp
movsl
test
stos
sub
enter
lcall
jae
inc
mov
pop
ja
mov
ror
pop
iret
add
jnp
fwait
lods
stos
dec
mov
cwtl
add
cmc
lret
pop
add
inc
sti
mov
inc
pop
sbb
xor
daa
pop
pop
loope
push
shll
movsl
icebp
pop
daa
dec
test
mov
rolb
data16
jge
jp
or
jo
lret
jge
or
push
out
jnp
bound
rolb
fimuls
mov
and
adc
mov
dec
ss
inc
loopne
xchg
pop
rclb
mov
out
or
inc
mov
cli
sbb
add
sti
ret
cmp
stc
adc
mov
sbb
movsl
adc
jmp
add
pop
popf
das
into
dec
sbb
movsl
inc
xor
ret
in
lods
adc
xchg
mov
add
push
cwtl
mov
int3
push
clc
scas
and
js
aam
fwait
mov
aas
outsl
in
lahf
cmp
pop
cmp
sub
clc
adc
jg
and
nop
sbb
pop
and
cmp
push
jp
in
sbb
sbb
dec
shrl
xchg
jbe
sbb
mov
mov
pop
jle
sub
push
outsb
arpl
cmpl
fmul
mov
mov
in
jne
inc
dec
cltd
lahf
lret
das
pop
and
cmp
rorl
sbb
sahf
insb
nop
cmp
ds
pushf
stc
mov
push
mov
jmp
popa
mov
jp
filds
inc
inc
sbb
mov
sbb
imul
cs
xchg
xchg
sub
jae
push
ss
jnp
frstor
sbb
jbe
push
fnstcw
xor
cmp
or
mov
sbb
jns
xchg
mov
out
aam
subb
jecxz
idivl
sub
stc
repnz
pusha
xchg
lods
xchg
leave
sahf
negl
mov
setno
test
addl
orl
push
int
mov
inc
push
jns
insb
mov
movl
stc
stc
dec
jle
sub
mov
inc
movsl
enter
rorl
jecxz
adc
in
mov
stos
dec
pop
adc
mov
notb
insb
cmovae
push
out
lods
jbe
sbb
clc
mov
sub
mov
imul
lret
or
out
enter
movsb
fwait
xor
inc
jecxz
inc
add
in
mov
sbb
loope
jecxz
sbb
insl
mov
pop
test
mov
loop
adc
lret
pop
stc
sub
leave
push
das
xchg
add
mov
mov
out
mov
or
sahf
in
notl
rclb
sub
xor
out
int
clc
sub
dec
out
push
bound
mov
fistps
adc
out
mov
iret
addr16
push
and
jl
mov
call
sbb
cltd
cmp
mov
sbb
movsl
jge
jp
aam
pop
inc
mov
mov
orb
jo
fistl
and
movsb
cwtl
test
ficomps
movsl
jmp
dec
cmpsl
shlb
mov
into
mov
lods
test
sub
sbb
fdivrl
int3
mov
fistl
lcall
movsb
mov
jno
stc
test
out
or
into
mov
pusha
pop
shll
or
pop
lahf
adc
xor
fildll
cs
mov
mov
push
clc
push
jg
lahf
push
sub
jmp
adc
xlat
jb
ret
dec
repz
scas
test
movsl
dec
jp
adc
mov
add
repnz
pop
loope
jg
dec
sbb
mov
or
movsl
sbb
cmp
js
aad
aam
icebp
mov
bound
adc
xor
das
repnz
fisttpll
adc
les
aam
pop
shrb
fisubrs
fwait
push
das
mov
xchg
dec
pop
js
cmp
icebp
mov
fsubrs
fisttps
xor
push
out
mov
jno
xor
nop
out
sub
clc
inc
psraw
xor
pushf
movsb
ret
repnz
push
or
lods
insl
mov
pop
jl
and
pushf
inc
sbb
sub
aaa
and
loope
in
fiadds
mov
mov
adc
pop
xor
fcoms
fsubrs
imul
insl
xchg
lods
in
cmp
hlt
hlt
std
test
add
sbb
xor
mov
es
scas
ja
cs
mov
idivl
rcll
cmp
add
insl
xor
xchg
scas
add
es
std
mov
sar
xor
movsb
adc
and
xor
icebp
xor
pop
loop
push
mov
sub
test
push
jge
test
mov
pop
fs
cmp
out
mov
movsl
scas
mov
aam
inc
sbb
xor
fmul
and
add
pop
pop
clc
sahf
shlb
and
aam
lock
int
jae
push
mov
jnp
fcmove
push
jecxz
into
enter
data16
xchg
jmp
adc
lds
fs
out
inc
pop
push
pop
mov
jp
shll
mov
push
and
fwait
into
mov
adc
nop
mov
add
mov
mov
and
cmp
add
je
fisubl
sbb
sbbl
shl
sub
clc
incb
movsl
and
sbb
std
mov
mov
stos
xchg
test
add
jo
scas
cmc
push
sbb
dec
inc
mov
cmc
dec
rol
ret
dec
mov
imul
stos
aam
xor
mov
imul
seto
fidivrs
xchg
jns
pop
bound
cltd
or
daa
sub
jle
sbb
icebp
sbb
in
xchg
add
int
mov
popf
sub
mov
or
mov
mov
int
cmp
lret
aaa
insb
fiaddl
testl
iret
mov
adc
and
inc
and
xchg
pop
sub
and
leave
mov
dec
lock
mov
cmp
add
pop
fstpl
mov
popa
dec
hlt
mov
sbb
sub
inc
lods
mov
movsl
or
gs
out
popa
leave
sbb
mov
push
roll
popa
outsb
inc
sarb
pop
jmp
mov
ja
sbb
mov
andb
cmc
and
push
es
jnp
xor
push
in
xlat
jae
push
xor
ljmp
xchg
push
cmp
mov
test
arpl
ror
and
rorl
xor
in
inc
inc
cmp
das
scas
test
sarl
inc
stos
mov
cltd
adc
sub
fistl
test
fadd
mov
jge
and
mov
xchg
outsb
subb
or
add
push
push
inc
faddl
or
bound
or
adcl
jl
push
icebp
add
pop
jecxz
mov
push
std
lock
sarl
adc
sub
rorb
sub
cmpsb
inc
mov
lcall
jne
or
cltd
movsb
xlat
sti
push
sub
les
test
inc
shlb
sub
cs
lahf
imul
ss
lret
mov
lahf
test
nop
call
rol
cmpsl
xchg
mov
cmp
in
or
push
inc
mov
add
add
rolb
mov
notl
jns
mov
dec
popf
js
xor
add
mov
jno
cmp
cmp
push
aaa
ds
xchg
push
inc
and
loope
int
push
inc
pop
lods
call
inc
test
jb
push
xlat
jnp
pop
xor
xchg
repz
lret
and
fsubl
minps
in
xor
sti
xor
adc
adc
iretw
jge
mov
fmul
pushf
lock
test
dec
outsl
adc
ficomps
aam
std
and
out
sub
loop
push
mov
cld
clc
pop
mov
push
xchg
and
dec
lds
gs
repnz
les
in
mov
mov
jbe
xor
ja
cmpsb
shrl
adc
mov
jl
das
mov
loopne
hlt
and
push
push
ja
jo
add
inc
cltd
subb
sub
test
jmp
xor
xor
sub
loopne
sub
mov
jmp
cmpsl
lds
hlt
dec
adc
push
and
loopne
out
test
ret
or
scas
dec
sahf
push
shlb
into
addr16
daa
pop
fs
pop
dec
into
outsl
cwtl
sub
cmpsl
les
shll
cmp
aas
sbb
sti
rcr
mov
dec
aam
push
rclb
push
int3
out
je
fs
mov
or
sbb
jne
roll
out
hlt
mov
mov
jg
cmp
or
or
test
dec
fsubl
ret
lahf
mov
mov
test
cli
idivb
push
stos
jle
and
fcmovnu
in
mov
out
popf
out
dec
testb
cli
cwtl
mov
ljmp
mov
sub
push
orb
es
mov
jb
mov
mov
mov
cmc
jns
and
mov
cld
in
xor
and
sub
cmp
clc
sub
aaa
lods
dec
xor
aaa
int
cwtl
ljmp
movsb
test
inc
aam
mov
jns
cmpsl
into
es
dec
inc
lret
xchg
inc
push
imul
sbb
pop
hlt
insl
jo
mov
mov
psllq
sbb
lret
int
clc
and
popf
movsb
xchg
dec
cmp
mov
cwtl
loopne
sub
repz
cmp
lahf
and
pop
test
shrb
pop
mov
push
and
mov
aas
mov
mov
xchg
out
into
push
pushf
arpl
sti
orb
add
pop
in
push
adc
es
ss
das
mov
xchg
adc
outsb
shlb
xchg
shlb
dec
or
sub
add
mov
mov
and
or
lock
xchg
iret
sbb
xchg
js
adcl
and
fs
loop
dec
inc
test
jns
cmp
les
pop
daa
dec
je
dec
mov
ja
dec
add
mov
repnz
sub
cmc
cmc
mov
xchg
jne
cmc
dec
inc
imul
and
jmp
push
cmp
hlt
iret
das
repz
cmp
outsl
jae
aas
push
mov
sbb
jl
repz
mov
pop
aaa
fcom
es
cltd
sub
daa
insb
fnstcw
push
ret
xchg
inc
mov
daa
dec
pop
sbb
test
inc
push
icebp
test
dec
out
clc
icebp
inc
in
mov
or
push
sub
push
movsl
iret
dec
push
fdivs
aad
testb
push
add
inc
dec
and
pop
scas
sbb
mov
je
jl,pt
in
jge
imul
and
fbstp
fcmovnbe
sub
dec
fisubl
sti
cmpsb
in
fsubs
jge
lea
pushf
das
loope
gs
shrl
cmpsl
sub
add
cmp
inc
mov
push
cmp
xchg
movb
add
jp
in
mov
dec
xchg
hlt
dec
leave
sub
cmp
test
mov
add
push
adc
out
repnz
ljmp
mov
pop
and
out
sub
pop
dec
rorb
cmpxchg
sub
repnz
sbb
rol
cli
inc
push
and
dec
push
shr
push
insl
xchg
std
test
movsl
pop
cltd
ret
cld
jl
add
test
fidivl
sub
xchg
int3
and
push
ret
cmc
cmp
fnstcw
enter
cmp
lret
gs
mov
int
xchg
lea
mov
jge
cmpsb
outsl
mov
repnz
add
insb
adc
sub
pop
push
scas
call
shl
leave
mov
ret
std
and
cmpsl
mov
inc
in
es
inc
orb
xor
lods
outsl
int
insl
in
pop
xchg
lods
ja
test
push
aaa
popf
stos
stos
mov
jno
xchg
bound
pop
imulb
lods
mov
push
popa
into
fwait
into
jecxz
sbb
nop
insb
sbb
mov
push
lahf
test
jns
cli
sub
and
add
int3
sar
and
lret
jp
cld
int3
cmp
cmp
cltd
inc
loope
hlt
sub
dec
movsb
enter
loop
lea
mov
push
fdivrp
cmp
push
mov
jb
cmpsb
jl
jno
xchg
add
adc
inc
push
outsw
insb
mov
adc
push
in
repz
mov
jmp
pusha
lret
mov
sub
push
cmc
jmp
lahf
es
inc
std
pop
inc
jge
pop
push
jb
sub
push
inc
sub
lods
or
subl
dec
dec
mov
inc
xchg
out
mov
push
push
rcrb
xchg
mov
ja
mov
mov
pop
lock
les
mov
and
ror
stos
insl
fwait
ret
inc
jae
jns
es
arpl
in
jecxz
pop
push
fdivl
mov
add
push
ret
and
stc
les
ret
sbb
xor
loope
daa
xchg
enter
movl
adc
add
jno
mov
push
xchg
and
inc
xorb
out
out
or
test
int
dec
stos
xchg
dec
push
mov
fildl
mov
push
mov
ret
pop
gs
das
mov
dec
mov
test
enter
sbbb
mov
shll
pop
ds
shlb
mov
call
jnp
ss
repnz
es
repnz
push
and
aad
mov
pop
popa
jp
punpcklwd
in
push
jl
inc
jmp
xor
dec
mov
xchg
pushf
jmp
xor
fldt
cmp
mov
pushf
ficomps
and
aas
aad
faddl
mov
adc
int
ljmp
xchg
and
enter
push
lret
ret
inc
mov
lcall
inc
jp
xchg
pop
aam
nop
xor
ss
test
mov
cli
repz
adc
pop
or
xchg
cs
adc
inc
xchg
mov
movsb
ret
imul
jg
inc
push
test
pop
and
mov
daa
adc
mov
pop
clc
mov
call
xlat
add
dec
in
lret
mov
add
sbb
and
xchg
out
or
inc
and
and
cs
add
out
and
mov
stos
sub
bound
xchg
mov
into
lock
jne
mov
shl
xchg
shll
in
adc
jo
rorb
scas
push
paddb
inc
ljmp
push
jb
inc
lods
popf
push
pop
mov
adc
iret
lea
or
jb
add
lcall
and
dec
and
pop
aad
xchg
es
cltd
cmpsl
insl
aas
movl
popf
pushf
repnz
out
and
mov
pop
jg
cmpl
data16
dec
jmp
dec
dec
sbb
adc
test
pushf
sbbl
cmpsl
imul
or
mov
adc
xor
mov
dec
push
lods
add
and
popf
dec
adc
cmp
je
iret
jnp
aad
jno
cld
mov
sub
pop
leave
imul
sbb
jns
adc
pop
fnstsw
in
mov
pop
sbb
fwait
sahf
insb
jmp
xchg
sahf
dec
movsb
int3
lea
das
push
iret
xchg
cmpb
push
jg
notl
outsl
into
adc
cmpsb
or
push
dec
add
dec
add
cltd
adc
in
sub
push
mov
dec
sbb
mov
inc
xor
push
and
and
filds
push
cmpsl
inc
sub
push
shr
xchg
idivl
scas
xchg
fists
lcall
sub
sbb
cmp
jmp
cmp
xchg
faddl
ss
mov
pop
xlat
movsb
out
add
hlt
sub
nop
add
push
inc
enter
adcl
bound
sub
push
data16
inc
xchg
adc
cld
inc
mov
jl
outsl
outsl
iret
mov
mov
insb
dec
sub
ret
lds
rcl
mov
sub
inc
gs
xor
daa
repnz
fldcw
sbb
mov
or
nop
test
pushf
pop
lock
lea
popa
lods
jno
orl
jge
or
icebp
cmp
and
xor
inc
lea
popa
lods
jno
orl
jge
or
icebp
cmp
xor
xor
inc
lea
popa
lods
jo
test
pop
test
mov
rorl
cmp
test
lea
popa
lods
icebp
mov
or
or
rorb
ret
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ljmp
xchg
out
in
aam
stos
scas
aam
lcall
jo
and
push
inc
push
cmpsl
movsb
mov
xchg
lock
hlt
rol
shlb
add
popa
je
inc
inc
push
test
test
hlt
enter
xor
pop
jl
je
pop
and
and
call
out
icebp
clc
pop
sbb
jecxz
cmp
lret
cmpsl
fmul
fstps
pop
add
pushf
add
dec
nop
mov
sub
sbb
hlt
pop
jns
dec
or
xor
lret
out
sti
or
das
mov
mov
je
push
inc
push
mov
pop
fcoms
xor
xor
fwait
and
cwtl
pusha
sub
ret
cmc
hlt
cmp
shlb
dec
lret
adc
pop
xchg
cmc
je
xchg
adc
test
dec
leave
jnp
cltd
mov
xchg
rcl
cmp
fbld
add
aaa
popa
mov
std
mov
pushf
dec
stos
imul
jmp
iret
and
xor
jno
jmp
jne
and
inc
inc
stos
jo
mov
xchg
loopne
cli
hlt
rol
sub
xor
add
adc
fs
push
inc
pop
adc
movsb
vpmaddwd
in
xchg
mov
lods
mov
bound
fs
add
xor
enter
int3
xor
cmpsl
mov
xor
inc
push
arpl
adc
and
fxam
xchg
out
loope
in
mov
loopne
rol
rcl
and
xor
add
adc
fs
je
inc
inc
push
mov
mov
xchg
lock
hlt
rol
rcl
and
xor
add
adc
fs
je
inc
inc
push
mov
arpl
adc
ja
xchg
cwtl
xor
xor
sub
jbe
ret
int3
pop
rcrb
pop
in
mov
or
sub
int
dec
out
scas
or
cmpsb
fs
cmpsl
xor
or
incb
scas
dec
mov
xor
add
fdiv
int3
push
adc
push
jb
jb
mov
lock
push
dec
pusha
repnz
pop
loop
cs
inc
push
push
mov
sub
fidivl
xchg
inc
dec
xchg
lods
fldenv
cltd
ficomps
mov
out
into
rclb
pop
jl
push
enter
cld
cwtl
or
test
ror
xchg
sbb
aad
sbb
clc
jns
mov
out
jge
adc
xor
in
mov
xor
es
cwtl
movhps
or
cmpb
inc
sbb
mov
fnstenv
xchg
push
pop
sub
mov
lret
pop
mov
cli
sbb
sub
fistl
xchg
fisttpll
jne
cmpsb
ss
or
movsl
fwait
xorb
dec
fimull
mov
dec
and
stos
or
imull
sub
xchg
sbb
mov
orb
test
mov
push
iret
mov
iret
adc
push
insl
sub
js
dec
pushf
js
mov
divb
jno
cli
dec
push
add
sbb
mov
cmc
and
subl
rorl
lods
std
inc
int
adc
fcmovnbe
mov
push
fbstp
cmp
imul
mov
ss
jb
adc
mov
repnz
fmulp
jmp
sahf
dec
mov
mov
subb
sbb
pop
mov
sbb
daa
pop
pushl
push
cmp
mov
subb
fidivl
aas
movsb
outsl
insb
jnp
icebp
sub
inc
call
nop
add
and
and
sbb
dec
movb
xor
call
push
adc
jmp
fsubrl
insb
std
repnz
popf
jg
xchg
and
adc
rcr
pop
das
push
dec
cmpsl
xchg
rcll
jge
pop
jmp
mov
mov
dec
sti
jmp
push
sbb
push
popf
jg
gs
test
mov
ja
jmp
mov
add
fildll
jns
or
jne
jg
mov
inc
mov
pop
xor
ret
addr16
add
cmp
push
dec
pusha
mov
add
fcoms
mov
mov
cmpsl
das
repz
inc
std
adc
mov
or
out
test
popa
jbe
std
dec
mov
mov
inc
test
mov
jns
xchg
fstps
sub
cmp
add
xchg
mov
dec
in
cmp
sub
xlat
sbb
xchg
push
stos
mov
int3
mov
xchg
cmpb
adc
dec
aad
imul
sub
and
adc
movsb
jno
and
push
pop
cltd
inc
aam
in
cmp
int
mov
push
fistpll
outsl
dec
or
dec
mov
rorb
outsl
sti
dec
dec
jge
ss
into
fimuls
cli
lds
push
fmuls
jae
xor
xchg
inc
and
mov
jg
pop
popa
pop
dec
fs
in
hlt
mov
pop
nop
in
test
or
icebp
sub
add
mov
out
push
fdivrs
jnp
xor
mov
sbb
out
mov
sub
jmp
adc
rclb
pop
ret
sub
inc
or
pop
push
push
jmp
and
add
stos
mov
jb
jg
push
cmpsl
adc
ja
cmp
daa
mov
scas
ret
mov
pop
sub
loope
test
fstpl
xchg
cmpsl
pop
xchg
in
lret
popa
cmpsl
mov
test
sbb
xchg
movsb
scas
hlt
jge
fidivrs
or
push
aam
rcrb
outsb
jae
les
int3
dec
adc
push
je
incl
in
cli
lds
jne
pop
mov
jb
in
mov
push
mov
dec
rcl
mov
jo
cmp
pop
cmp
fnstcw
imul
inc
inc
loope
fs
dec
mov
xchg
jp
push
adc
push
dec
ret
outsl
int3
sahf
cmp
outsl
pop
cli
cmp
xchg
adc
sbb
loopne
xor
mov
sbb
or
push
or
sub
enter
jns
cwtl
or
scas
add
xchg
jmp
mov
std
or
sub
cmp
mov
sub
dec
lock
loopne
sub
std
push
in
ret
in
loopne
rcll
in
cltd
cmpsl
xchg
pop
mov
insl
xchg
ljmp
cli
mov
dec
or
rcll
dec
adcb
aam
outsb
push
dec
aas
sub
mov
mov
or
add
cmpsb
mov
addr16
fwait
dec
jo
stos
sarb
jl
inc
test
sbb
lret
jbe
cmp
push
or
test
or
xchg
push
and
pop
sub
pusha
fincstp
cmp
and
xchg
xor
pop
or
mov
data16
xchg
sbb
push
cmpsb
mov
movb
test
sar
out
gs
jnp
ret
lcall
push
sbb
das
jbe
or
test
lds
je
enter
arpl
dec
insb
sub
mov
jg
mov
jle
in
cmpsb
jnp
jmp
mov
push
ss
insl
push
lea
enter
mov
lahf
popf
xchg
aam
pushf
xchg
out
adc
out
std
loope
jbe
ja
mov
xlat
pusha
inc
inc
sbb
aam
fnstcw
jg
pusha
sti
jg
out
xorb
dec
lock
inc
push
divb
jecxz
lcall
inc
imul
mov
xchg
mov
inc
jecxz
sar
lret
dec
popf
dec
xor
sbb
inc
jle
or
fwait
and
dec
movsb
enter
xchg
sub
lret
mulb
je
or
jecxz
dec
bound
es
repz
arpl
xchg
data16
pop
insb
mov
pop
setnp
xchg
fmulp
xchg
push
imul
mov
test
mov
pusha
repz
or
push
sub
dec
into
sbb
in
adc
repnz
inc
jge
push
stc
filds
sub
sbb
sub
addr16
cld
stos
and
cmpsb
inc
jmp
push
daa
adc
shl
in
adc
test
inc
adc
lret
push
sbb
adc
sahf
mov
lret
ljmp
mov
mov
fucom
mov
inc
sbb
dec
movsb
and
insb
shrl
iret
jne
fwait
jno
mov
stos
in
in
dec
mov
test
out
fs
test
popa
fidivrs
cltd
adc
lds
sbb
hlt
adc
sub
lods
cmp
or
adc
fisubrl
mov
mov
cmp
mov
outsl
lods
inc
inc
jle
std
aam
adc
jae
jb
int
adc
push
inc
adcb
push
ss
pop
add
pop
xchg
cs
lods
leave
out
xchg
scas
cmp
cmp
xor
daa
add
xchg
and
dec
jg
sahf
pushf
rcrb
mov
mov
lock
pop
sub
mov
xor
and
xchg
inc
mov
jecxz
popf
or
lret
pop
movsl
jno
stos
pop
test
cwtl
sbb
aam
lret
bound
out
aas
lods
call
hlt
push
sti
cs
jae
dec
pusha
call
fmuls
mov
xchg
out
push
ficoms
ss
jp
xor
mov
xchg
js
cmp
inc
popa
mov
xchg
add
shll
rcll
aaa
imul
adc
jecxz
inc
inc
sbb
loope
in
pop
lods
or
adc
pop
notb
lret
mov
insb
inc
nop
je
enter
xor
ljmp
fmull
xchg
stc
out
jns
lcall
inc
and
in
inc
inc
jo
dec
cmpsb
jb
shrl
int
sub
or
add
and
inc
aaa
mov
in
data16
or
les
iret
inc
dec
test
ret
ljmp
out
push
in
ret
xchg
imul
xchg
cli
std
jp
iret
xor
popl
imul
test
movsb
js
mov
orb
adc
lea
pop
mov
sbb
jno
sbb
cs
negb
and
pop
cmp
enter
inc
push
dec
divl
cli
push
ljmp
dec
addr16
dec
and
xor
jns
pushf
pop
xchg
lods
in
push
push
fisttpl
xor
outsl
dec
adc
out
mov
dec
in
cmpsl
es
lods
mov
mov
xor
test
clc
dec
inc
xchg
das
out
mov
cli
lret
pop
popa
loopne
imul
sbbb
fs
adc
mov
dec
out
scas
shr
mov
or
fidivl
lock
insl
lods
push
addr16
sbb
fisttpl
and
stos
scas
push
test
enter
sbb
mov
test
ja
lock
leave
adc
inc
daa
push
sub
mov
xlat
push
int3
test
leave
add
imul
xlat
aaa
frstor
test
test
stc
and
mov
push
pop
wbinvd
push
popf
rorl
in
jp
fisubl
clc
imul
xchg
test
add
sti
inc
sub
push
push
into
pushw
pop
inc
push
mov
ret
xchg
xor
pop
fldt
sub
cmc
or
repz
push
mov
pop
xchg
scas
xor
lret
movsb
mov
mov
inc
in
xchg
xor
in
int
cmp
dec
mov
jecxz
fisttpll
popa
pop
clc
jl
push
clc
orb
cmpsl
dec
or
inc
jmp
inc
add
ret
pop
arpl
push
sbb
sbb
iret
and
cld
sti
sub
xchg
mov
jg
testl
movl
dec
addr16
adc
sbb
xor
and
adc
and
xchg
icebp
jnp
or
cli
mov
jp
aad
pop
cmp
jo
pop
std
mov
aad
push
daa
lret
aad
in
pop
and
push
xor
sbb
mov
push
adc
xchg
jae
test
fs
sub
mov
xchg
push
sti
std
ljmp
js
sbb
test
in
push
call
call
aam
ds
dec
lock
divl
inc
icebp
shll
aam
cmpsl
adcb
out
jno
xor
or
pop
jecxz
fwait
push
jae
sub
or
mov
sahf
xchg
xchg
jo
and
push
lds
hlt
xchg
ficomps
cld
mov
shlb
shll
test
jb
push
push
es
push
dec
and
mov
fists
out
or
int3
push
std
ja
in
stc
mov
jmp
into
in
jmp
pop
pminsw
jb
mov
jnp
sarb
hlt
fistpl
loop
inc
fidivs
add
pop
fmuls
out
mov
mov
xor
push
cmp
sbb
shrb
imul
mov
xor
les
push
inc
cld
cltd
ret
lcall
sar
negl
mov
mov
out
je
mov
in
lea
ret
mov
inc
xchg
xor
int3
cmp
pop
das
imull
sub
shrl
ds
push
aaa
inc
movsb
adc
leave
rorl
pushf
test
mov
testb
cmp
stc
shrl
cmp
leave
ss
inc
cmp
inc
std
xchg
add
imul
dec
imul
cmc
nop
je
xchg
lock
xor
in
lea
inc
std
or
jne
jp
or
shrl
xor
shr
imul
jbe
fistps
sti
out
mov
add
push
inc
or
jne
or
xchg
xchg
gs
arpl
std
push
andb
mov
xchg
in
mov
inc
xchg
ljmp
mov
orb
push
xchg
lahf
daa
ret
cmp
aaa
stos
scas
aad
jo
jae
test
mov
pop
sbb
lcall
xchg
daa
dec
cmp
mov
inc
loopne
hlt
inc
sbb
sub
adc
daa
inc
pop
dec
mov
push
push
imul
scas
enter
push
xchg
mov
out
ljmp
lcall
xlat
lret
out
mov
jl
push
sub
xor
xor
inc
clc
imul
push
pop
jge
dec
mov
pushf
or
jecxz
inc
hlt
bound
clc
mov
dec
sub
in
les
mov
vandpd
les
mov
push
add
lds
gs
adc
pushf
sub
lret
shrl
sub
mov
loop
icebp
fadds
jo
cli
movsl
xor
mov
sub
xchg
xlat
jmp
stc
cwtl
lods
cwtl
push
sub
push
sub
aam
rorl
dec
ficoml
daa
and
cltd
ja
movsl
or
mov
sub
mov
mov
pop
test
inc
lret
xchg
or
or
sub
lds
bound
xchg
pop
xor
fs
lahf
mov
cmp
dec
add
ret
mov
out
ficoms
jo
ljmp
or
repz
lahf
scas
sbb
xchg
shll
or
and
mov
scas
out
inc
loop
xor
and
inc
xlat
or
call
push
mul
jb
nop
push
mov
add
je
lods
test
cmpb
cmpsb
jne
mov
cmpsb
out
jo
pop
mov
cmp
shrb
inc
push
ss
inc
inc
mov
adc
call
jne
lcall
mov
fadd
sbb
sbb
sub
in
mov
les
jp
popa
mov
mov
ja
fnstsw
test
in
cmp
jne
mov
pop
pop
out
sahf
sbb
test
and
sub
int3
lods
mov
ljmp
daa
int3
lcall
xchg
inc
mov
cmp
jne
xor
and
es
inc
xchg
outsl
aad
sbb
or
outsl
fcompp
mov
xor
xchg
cmp
mov
inc
hlt
in
aas
add
cmp
pop
lods
insl
mov
out
cli
lret
fisubs
sahf
insl
test
dec
xor
and
jmp
push
add
inc
pop
hlt
pop
rorl
pop
fucomip
mov
cmpl
xchg
test
pop
mov
push
xchg
push
cmp
ljmp
movsl
lds
pop
add
xchg
loopne
jle
sbb
add
mov
outsl
jmp
test
xor
fnstsw
xchg
xor
jnp
addr16
imul
aas
jmp
mov
jmp
adc
inc
sub
push
xchg
fisubl
dec
fmuls
cli
test
out
int
hlt
pop
and
dec
cld
xor
call
lret
inc
jne
test
sub
std
sarb
and
adc
call
iretw
int
imul
cmp
shll
push
lea
sbb
mov
shrb
pop
inc
insb
cmp
dec
bound
cwtl
mov
mov
jl
pop
dec
dec
outsb
das
aas
push
mov
addr16
and
clc
dec
ljmp
sub
insl
inc
sbb
insb
xor
push
lods
jae
mov
rorb
ss
mov
std
in
sahf
popa
mov
xor
xchg
mov
cld
lods
aam
rclb
mov
or
mov
or
sarb
inc
jbe
std
pop
xlat
pushf
iret
test
xchg
pop
xor
cmp
es
jb
movb
and
mov
mov
nop
push
lcall
jge
cli
push
add
xchg
sbb
xchg
fxch
mov
shlb
orl
mov
or
bound
xlat
sbb
or
mov
jno
cmp
inc
lcall
cmp
xchg
jg
or
jne
cmp
jno
fidivl
add
fiadds
mov
and
sbb
xchg
inc
cmc
lds
jae
jno
or
std
pop
popf
fcmovnu
hlt
ljmp
and
push
ljmp
jo
icebp
jmp
int3
sub
cmc
out
mov
adc
fmuls
pop
fst
popf
lcall
jb
nop
dec
mov
orb
in
sub
mov
sub
in
xor
pushf
mov
arpl
dec
ja
movsl
dec
aam
scas
dec
cmp
dec
push
roll
test
ret
inc
mov
pusha
aam
push
orl
fwait
xor
test
mov
ljmp
movsl
mov
push
sbb
stc
outsl
cmp
push
jmp
or
sub
pop
stos
mov
daa
xchg
loop
jbe
fistps
ret
addr16
pop
xor
or
cld
cmp
jo
shr
push
dec
out
xor
inc
mov
insb
roll
push
shrl
cmp
xchg
push
push
mov
push
xchg
clc
xlat
shlb
testl
sub
sbb
movsl
rorb
pop
rol
inc
ljmp
mov
push
cmp
xor
xor
dec
lods
jle
pop
aad
dec
mov
jmp
out
cmp
fcmovne
mov
pop
test
adc
sahf
cmpsb
sub
mov
arpl
orb
faddp
xchg
push
inc
cmpsl
push
pop
pminub
jmp
fs
cmp
pop
shll
inc
insb
aam
pop
jg
repnz
jns
loope
enter
xlat
dec
inc
add
add
jno
mov
sbb
stos
and
in
xchg
dec
sub
ret
mov
xor
jp
and
inc
movb
dec
rorl
pop
mov
inc
mov
ljmp
sbb
cwtl
cmp
das
dec
adc
mov
lcall
adc
fsubl
jmp
jnp
pop
sub
mov
lret
test
lods
fwait
inc
mov
lods
insl
ret
lcall
sbb
jecxz
cmpsl
sub
sbb
movsl
cmp
das
rorb
sub
mov
and
sub
in
inc
movsb
pop
mov
adc
push
xchg
pusha
or
xor
adc
mov
dec
or
mov
xor
mov
and
sub
inc
mov
test
std
clc
pop
cmp
mov
and
xchg
outsl
mov
dec
call
jmp
mov
stc
mov
and
icebp
mov
icebp
shrb
mov
jbe
fidivrs
sub
inc
bound
push
iret
or
xchg
push
repz
inc
fbld
dec
imul
jno
dec
mov
pop
out
push
cmpsl
fstpt
xor
nop
cltd
jp
inc
mov
lahf
push
loopne
mov
testl
pop
mov
in
and
pop
cmpsb
das
jns
cmpsl
jg
or
sbb
lock
cwtl
iret
sbb
sbbl
mov
fisubl
xor
cmpsl
pop
xor
rol
out
xor
lret
outsl
push
es
jno
popf
out
adc
inc
or
dec
jecxz
push
push
scas
mov
xor
rorl
ds
movl
xchg
mov
xor
pop
ret
sub
lahf
push
cmpsl
pop
icebp
pop
ss
mov
inc
enter
aas
std
inc
mov
gs
outsb
hlt
das
sbb
push
aas
nop
js
cmp
ret
mov
xchg
addr16
lods
leave
pop
in
jno
push
in
sahf
addl
subl
xor
outsl
add
sahf
jno
gs
and
sbbl
pop
mov
out
cmp
jbe
xor
jl
push
aaa
mov
sub
ss
testl
cmp
jnp
xor
in
or
and
cmpsl
imul
ja
adc
adcb
sub
mov
push
pusha
mov
sub
adc
xor
pop
movsb
xchg
push
mov
adc
jo
das
loopne
mov
xchg
push
pop
icebp
adc
xchg
pop
push
daa
in
mov
and
insl
test
call
loope
loopne
out
xor
je
dec
add
sbb
pop
sub
add
jge
dec
std
cli
scas
out
cmovno
xor
xchg
pop
sbb
jnp
lods
stc
pop
jg
mov
faddl
bound
jl
fldcw
inc
jmp
data16
mov
imul
sahf
std
add
roll
or
pop
mov
aam
sub
pushf
scas
fstpl
xchg
lahf
rclb
jp
sbb
xchg
or
sbb
xor
lret
inc
vmovdqu
popa
popf
je
xchg
lcall
lea
int
in
dec
fwait
das
js
and
or
pushf
js
sets
in
hlt
rol
rcl
and
xor
add
adc
fs
je
inc
inc
push
mov
mov
xchg
lock
hlt
rol
rcl
and
xor
add
adc
fs
je
inc
inc
push
mov
mov
xchg
lock
hlt
rol
rcl
and
xor
add
adc
fs
inc
jno
test
xchg
lock
hlt
push
les
iret
and
sahf
mov
in
call
stos
dec
mov
jle
push
fsubrl
std
adc
cmp
es
sub
sahf
subb
pop
lods
add
push
in
fnstsw
jecxz
cmp
decb
scas
pop
mov
imul
cmpsb
sti
adc
jle
xor
ljmp
jl
jg
cs
or
das
loop
and
adc
outsb
into
pop
call
hlt
pop
adc
shlb
movsl
sahf
popa
stos
mov
mov
jb
call
mov
cmp
stos
shrl
add
push
inc
add
les
adc
es
fidivrs
sahf
mov
xchg
mov
lods
mov
push
fst
sbb
fmulp
push
add
push
mov
push
dec
pusha
jecxz
repnz
xchg
in
movsl
sbb
xor
push
pop
jp
std
mov
js
push
mov
mov
ret
push
outsl
call
negl
shrl
fidivrl
lret
or
adc
mov
lea
jle
ljmp
pop
or
into
xor
inc
xchg
sbbl
ret
push
loope
pop
jo
pop
test
mov
jle
pop
mov
lock
sub
and
sti
cmp
sbb
pop
loope
scas
jnp
pop
out
dec
xchg
cmp
ds
xor
icebp
sub
in
fnstsw
int
cmp
decb
scas
pop
mov
lods
outsb
popf
jle
push
std
push
in
fnstsw
int
cmp
decb
scas
pop
mov
sti
lods
loopne
arpl
lcall
cmpsl
jb
push
lea
ja
sbb
mov
xchg
push
or
mov
js
jge
fmull
faddp
sbb
adc
push
push
out
xchg
scas
fsubrl
ss
inc
inc
mov
sti
idiv
lock
mov
and
test
dec
add
aaa
fwait
shll
cmp
sbb
mov
jmp
add
pop
mov
adc
sub
bound
mov
mov
popa
jbe
fnstsw
pop
and
int3
cmp
cmp
push
mov
inc
lock
call
jne
stos
in
cmpsb
outsl
movsl
sub
in
js
sbbb
dec
cmp
sub
dec
sub
sub
mov
cli
xchg
xor
sbb
inc
and
sbb
or
fldcw
jecxz
mov
adc
add
cmp
cltd
cmp
mov
lods
xchg
push
lds
inc
das
inc
inc
andb
mov
add
and
adc
je
add
jnp
insl
sti
inc
cli
dec
push
incl
cmc
fadd
shlb
mov
xchg
jle
int3
subb
xchg
jns
xchg
hlt
enter
ss
das
xor
imul
int3
scas
mov
mov
push
xchg
loope
or
and
and
pop
xchg
test
mov
mov
sarl
mov
rcll
xchg
in
clc
mov
dec
mov
jp
inc
imul
adc
cli
aas
cld
xor
insl
add
rol
fwait
mov
jmp
cmp
mov
mov
push
push
inc
icebp
mov
icebp
nop
or
cmp
push
les
jae
xchg
pop
pop
gs
fnstenv
push
inc
dec
in
adc
insl
xor
add
ja
arpl
fldcw
pop
imul
movl
les
cmp
jg
adc
inc
not
lds
sar
dec
cmpb
adc
scas
jg
dec
pop
lcall
add
cmp
lcall
jnp
cmp
fwait
cmp
sub
xchg
xor
nop
subl
jbe
or
jo
push
sub
sbb
mov
and
mull
xchg
insl
dec
jne
arpl
loopne
adc
xor
mov
sub
test
ret
dec
mov
fimull
lds
icebp
std
pop
repnz
outsb
adc
mov
or
cmpsl
adc
imul
stos
mov
adc
cltd
pusha
push
ds
jl
repz
xchg
sbb
cmc
cmp
push
or
addr16
xchg
mov
ret
rclb
lds
cwtl
inc
push
inc
add
mov
mov
mov
cmc
das
jl
adc
add
ficoms
loop
sahf
adc
aam
imul
sarb
out
stos
mov
je
sahf
int3
push
pop
sub
mov
shrb
cltd
mov
stos
mov
cmp
inc
out
imul
mov
in
cmp
dec
pop
dec
inc
add
fdivl
or
cli
stos
rorb
pop
mov
clc
pop
xor
cmp
int3
in
mov
iret
call
mov
sar
ds
hlt
hlt
lret
adc
jecxz
repz
pop
mov
jo
sub
sub
ror
test
cltd
cmp
das
aam
jns
dec
test
xlat
mov
or
movsb
fadds
mov
inc
cltd
in
and
nop
pop
and
rclb
les
and
pusha
cmovs
mov
sub
mov
outsl
xchg
fimull
or
push
stos
int
cwtl
out
dec
jae
pusha
lea
mov
add
fnstsw
pop
adc
xor
les
lret
mov
mov
or
iret
outsb
push
loope
fildll
int
shrl
dec
mov
ljmp
push
outsb
test
dec
push
iret
jae
mov
mov
dec
dec
push
scas
sub
adc
lret
sub
cmp
xor
gs
sti
adc
xchg
cmc
jo
das
fwait
xor
fistps
cs
xchg
icebp
dec
jbe
fstl
add
repz
stos
shlb
aad
cmp
jp
pop
mov
iret
lret
ret
add
in
add
int3
jl
jo
aad
and
add
jp
mov
add
sub
jl
mov
pop
js
repnz
ja
aas
mov
ss
mov
mov
stos
mov
loope
xor
xor
mov
push
fsubrs
mov
push
lret
mov
jl
inc
xchg
movsb
dec
mov
mov
dec
repnz
push
stc
pushf
das
or
jbe
cwtl
jge
and
sbb
jno
jg
mov
jb
pushl
xchg
popf
in
add
lret
and
scas
mov
push
adc
dec
xor
daa
mov
mov
jbe
int
sub
mov
js
gs
clc
popa
xor
jg
test
test
cmpsl
jmp
cli
popf
inc
loope
je
or
mov
jg
jg
outsl
int
xchg
lret
adc
mov
push
mov
pop
xchg
mov
sbb
push
loop
gs
es
mov
mov
dec
adc
sub
sti
pop
pop
mov
fimuls
outsl
nop
movsl
sbb
fsubr
int
mov
popl
ficoms
ss
inc
cli
jb
pop
rcr
roll
les
jnp
in
mov
mov
add
mov
xor
xchg
cmp
cmpsb
pop
adc
push
lret
jns
mov
cmpsb
clc
sub
aad
int3
movsb
lret
and
sbb
hlt
test
sti
add
adc
popf
mov
jb
int
xor
pop
loope
xorb
insl
pop
lret
or
stc
out
cmp
rorl
xor
pop
mov
lret
shrb
out
stos
inc
popf
mull
loope
ficomps
or
push
popf
testl
push
inc
mov
loope
adc
fiadds
mov
pop
pop
cmp
movsl
cltd
ja
dec
in
push
mov
sub
mov
cmpsb
sbb
or
gs
and
hlt
movsb
push
add
fildll
pop
fbld
push
call
popf
and
jge
push
and
ja
sub
aas
xchg
out
ficoms
jno
and
divb
fdivp
ja
gs
stc
or
fwait
jl
jns
sub
xchg
fwait
movsb
xor
inc
jbe
mov
push
pop
xor
popf
outsl
lahf
imul
and
mov
sub
pop
es
dec
test
pusha
xor
push
pop
pop
hlt
movsl
add
xor
pushf
inc
fidivl
arpl
clc
inc
jb
sub
stos
mov
inc
mov
int
adc
mov
mov
into
xchg
int
jmp
daa
loopne
icebp
cmp
xor
jl
jle
dec
jl
imul
enter
gs
push
sub
outsl
jnp
aas
push
sub
mov
jb
inc
roll
je
xchg
hlt
mov
xlat
out
rep
fsubs
sbb
in
pop
xchg
push
pop
fdivl
dec
outsl
loopne
in
mov
mov
sub
dec
xor
mov
je
push
xchg
jmp
pop
dec
testb
and
inc
adc
in
sub
les
loop
mull
fcoml
outsb
cltd
lea
pop
nop
repnz
hlt
and
sub
add
mov
jno
push
cs
cltd
add
in
cmpb
stos
jb
adc
and
idivl
mov
sbb
shlb
jns
push
fs
xor
adc
jmp
push
xor
cmp
es
or
rorb
jge
xchg
ja
mov
cmp
fwait
int3
pop
jge
mov
nop
xor
lock
mov
aas
fiadds
test
inc
add
mov
cmc
movsb
push
lret
pop
rolb
ds
add
cmp
inc
inc
int
xchg
mov
ds
mov
or
jne
mov
jg
lods
scas
imull
pop
push
stos
and
xlat
test
mov
push
cmp
xchg
sbb
mov
addr16
or
and
insb
dec
jg
ficomps
add
rcll
mov
mov
push
push
pushf
inc
xchg
sbb
stc
push
bound
int3
sub
aas
fnsave
cmp
inc
inc
jo
sub
fldenv
xchg
jg
stos
popf
sub
mov
pop
push
icebp
iret
sbb
pusha
lret
jg
cmp
test
mov
mov
pushf
popa
dec
cld
dec
jp
xor
adc
movsb
pop
push
mov
lahf
aas
scas
cmp
leave
mov
push
out
js
sarb
add
stos
mov
xor
sub
mov
popf
push
sub
xor
fdivrs
jle
loop
pop
out
mov
mov
inc
xchg
divb
xor
sub
test
arpl
out
dec
or
insl
sbb
test
popa
fadds
in
dec
mov
mov
add
cmc
imul
jecxz
sub
rorb
mov
xor
jge
pop
or
adc
fcmovnu
stc
dec
and
pop
adc
mov
scas
push
sbb
cmp
add
inc
mov
sub
bound
mov
in
std
and
testb
mulb
lea
cmpsb
or
cs
clc
sti
cmp
imul
inc
aas
lods
cmp
repnz
adc
test
and
hlt
test
pop
xchg
lret
xchg
lds
fsubl
xchg
jo
test
mov
js
shl
movsb
mov
jl
dec
and
mov
insl
adc
decl
mov
add
fiadds
sbb
add
insb
cmpb
sbb
stos
sub
negl
inc
pop
push
cmpsl
cmp
sub
das
push
and
add
sbb
fiaddl
lret
mov
ss
arpl
popf
insb
inc
push
and
icebp
test
popa
jno
and
shrb
sbb
jle
ss
data16
loopne
cmp
test
lret
add
mov
outsb
inc
psubusb
imul
inc
es
sahf
add
mov
mov
adc
test
les
jp
iret
jle
add
xor
repnz
lcall
push
push
add
inc
testl
clc
ljmp
sbbb
sti
mov
and
out
and
inc
mov
call
mov
pop
jno
push
nop
sub
inc
into
iret
sti
test
sub
mov
adc
jne
lds
jle
fdivrl
adc
out
addr16
rcrl
repnz
ret
sub
and
cmp
xchg
push
call
inc
into
and
lods
test
dec
adc
pop
hlt
testl
dec
add
xor
xchg
push
push
push
mov
lcall
stc
add
cltd
xchg
movsl
lret
adc
mov
fstl
mov
test
xor
ret
and
fcompl
xor
inc
sub
mov
mov
xchg
cmp
mov
and
loopne
and
sbb
pusha
lea
out
jl
aad
jmp
mov
leave
stos
mov
loope
pop
das
push
push
mov
movsl
cmpsl
fs
fsubrl
outsl
xchg
inc
and
ss
in
out
test
push
lcall
dec
outsb
xlat
cli
scas
add
imull
loopne
inc
inc
push
call
pop
inc
test
icebp
xchg
and
shrl
push
popl
add
jg
fldl
mov
and
out
jp
and
pop
adc
fsubrs
mov
mov
mov
in
jg
push
lds
push
sub
daa
sahf
ret
clc
lcall
lock
mov
aaa
sub
pop
nop
xor
xor
test
movl
inc
shlb
mov
cltd
nop
das
push
mov
jb
mov
mov
lds
xor
out
stos
push
mov
mov
cld
pop
jle
decl
mov
mov
pop
lock
lahf
sub
push
jne
mov
push
fwait
add
xor
dec
inc
fistl
dec
out
mov
aas
and
aas
push
mov
adc
jge
popf
repz
inc
cmp
mov
and
sub
lds
mov
aam
lds
inc
cmp
fldenv
int
inc
sarl
pop
ds
aad
je
lods
dec
inc
xchg
iret
xchg
jecxz
enter
xchg
das
lret
jle
adc
and
add
data16
inc
cmp
pop
aad
mov
lds
push
imul
je
or
pop
mov
scas
daa
gs
inc
mov
mov
push
lret
pop
bound
cmp
rep
mov
push
loope
jecxz
jl
mov
cmp
mov
int
imul
jnp
mov
fidivl
lret
add
inc
inc
push
fdivp
jbe
push
fmuls
subb
mov
sbb
mov
iret
int
pop
mov
cmp
daa
nop
jb
mov
test
push
loopne
lods
pop
out
pop
les
fldt
inc
mov
das
cli
ret
push
mull
sbb
lret
push
mov
pop
jge
xchg
sti
das
mov
scas
in
enter
daa
fimull
clc
sbb
adc
lret
inc
xor
xor
in
mov
subb
xchg
or
repnz
fists
push
inc
or
shll
adc
mov
imul
pusha
sarl
adcl
sbb
and
jecxz
es
jmp
in
call
into
sbb
jo
scas
outsl
push
pop
mov
and
les
popf
mov
mov
rorb
hlt
xor
mov
scas
fwait
adc
sahf
lods
or
and
pop
xorb
pusha
push
adc
or
fwait
pop
and
jo
int3
mov
daa
inc
jne
push
add
fldenv
pop
rclb
roll
cmp
arpl
pop
sub
adc
push
adc
les
rcrl
push
lods
push
jp
leave
out
push
imul
xor
into
mov
ret
pushl
cmpsb
mul
jl
sarl
pop
cmp
aad
mov
mov
repnz
and
inc
inc
ds
pop
cmp
imul
ds
dec
push
fisttps
adc
pop
and
in
adc
xchg
cmpl
popf
in
rcll
mov
xchg
clc
cmp
movb
pop
mov
bound
xchg
cli
int
mov
cmp
inc
fisubrs
xor
xchg
push
xchg
sub
clc
js
pop
imulb
stos
sub
push
lcall
js
sbb
sbb
xor
adc
mov
das
pushl
fcmovne
stos
cli
fcompl
hlt
and
sub
movsl
clc
loopne
inc
and
test
cmp
clc
fwait
add
lock
cmp
arpl
mov
movsl
cltd
out
imul
movsb
dec
in
push
into
or
push
loop
es
dec
in
cli
sbb
outsb
mov
and
add
out
shll
sub
jg
add
cld
daa
or
inc
and
add
mov
ja
cli
xor
mov
cld
out
sbb
pop
aaa
in
into
xlat
cmp
repz
movsl
mov
pop
lret
icebp
shll
push
cmp
sahf
mov
mov
gs
jp
and
stos
call
inc
test
push
idivl
popa
ret
mov
push
movsb
cmp
inc
and
fwait
xchg
cwtl
adc
jb
daa
movsl
xor
dec
pop
jno
je
aas
sub
mov
rclb
mov
add
in
jns
fildll
arpl
adc
dec
imul
jno
mov
faddl
cmpsl
pushf
jo
iret
int3
jg
xor
and
mov
pushf
adc
mov
or
xchg
cmp
int
cld
test
pop
mov
jbe
fdivp
adc
cli
push
cmc
in
sarb
notl
rcll
orl
inc
push
test
in
mov
xchg
cmp
dec
dec
jbe
in
mov
inc
lret
stos
sub
sub
fsubs
lcall
rorb
divl
cmp
insb
mov
jmp
aad
aad
xor
in
jae
aaa
stos
lret
arpl
sub
outsb
andb
cmp
cmc
lahf
int3
mov
dec
dec
mov
xor
lods
bound
push
inc
and
add
xchg
out
movsb
aaa
in
nopl
inc
fs
xor
test
adc
mov
aad
testl
xchg
pop
mov
nop
cmp
cmp
mov
sbb
shlb
xlat
sub
inc
mov
sbb
xchg
nop
adc
shll
mov
add
loope
repnz
outsl
mov
xor
imul
js
xlat
xchg
xor
enter
rol
into
repnz
pop
mov
push
scas
mov
dec
inc
push
and
xchg
ss
push
mov
pop
cwtl
in
dec
rcrl
dec
test
lds
scas
les
pop
scas
fmulp
outsl
pop
out
lods
jmp
sbb
mov
ljmp
and
mov
and
sbb
ds
jecxz
pushf
inc
iret
call
ret
add
lds
xchg
stc
jbe
je
add
mov
jecxz
je
pop
push
push
mov
loop
and
xor
xor
mov
xchg
es
divb
jmp
je
jno
adc
mov
pmaxsw
jns
pop
and
aaa
adc
jge
int3
push
xor
dec
or
mov
out
fstl
sbb
bound
pop
add
or
mov
mov
repz
loop
pop
sub
out
mov
aam
add
fcoms
mov
dec
shr
push
out
cmpsl
cmp
lods
decl
outsb
fsubrl
mov
dec
sub
dec
imul
inc
and
out
mov
cmpb
cld
or
push
jl
lcall
lahf
push
shufps
rcrl
jmp
fdivrl
or
test
arpl
sbb
stos
jno
sub
mov
fidivs
testb
loopne
jle
jp
push
jno
inc
push
jp
das
ret
or
add
mov
sbb
or
or
lods
enter
jle
and
adc
jmp
add
lds
imul
add
inc
fstpt
mov
cwtl
jle
in
daa
out
icebp
fisttpl
sti
sub
jle
and
jle
pop
mov
lods
nop
mov
dec
pop
cmp
or
ds
mov
aam
jb
inc
add
mov
inc
sbb
in
stos
push
pop
pop
add
sbb
push
mov
sub
push
hlt
mov
push
sub
popf
das
repz
lcall
and
push
and
cmp
jno
add
bnd
loopne
fists
push
sbb
or
cmp
rolb
push
mov
fisubs
out
inc
xchg
rcll
sbb
cmp
dec
imul
push
mov
out
popf
dec
mov
lds
mov
push
out
pop
ss
dec
sub
pop
fisttpl
pushf
mov
pop
sarb
push
test
push
push
loopne
fnstcw
jmp
jno
lret
jbe
ds
imul
sub
ds
in
ds
data16
stc
cmp
les
insb
jbe
xchg
in
lcall
mov
fmull
ret
outsl
cmp
jle
test
xor
adc
inc
or
movsb
sbb
push
push
jo
lods
and
test
subb
xchg
push
imul
shlb
gs
fsts
mov
test
arpl
or
lock
mov
mov
mov
pop
xor
iret
pushf
imul
cwtl
or
xor
scas
sbb
pusha
dec
xor
insl
fstl
ret
inc
mov
hlt
or
sub
in
rorb
mov
pusha
stos
jmp
dec
dec
mov
push
mov
popaw
xor
adc
add
sub
inc
add
lcall
xchg
cmp
xor
adc
lret
xchg
scas
sbb
inc
inc
cmp
dec
aas
pusha
mov
mov
dec
cmp
add
mov
in
xor
frstor
ret
les
sub
mov
aaa
je
into
xchg
inc
cwtl
cmp
cmpsb
aaa
mov
dec
jmp
push
mov
jmp
jne
iret
ret
xor
jle
push
adc
pop
add
add
jns
je
xor
repnz
add
lds
loop
jge
and
or
xchg
sub
dec
in
faddp
cld
je
push
jmp
mov
sub
cwtl
jle
push
std
push
in
fnstsw
int
cmp
decb
scas
pop
mov
lods
outsb
popf
jle
push
std
push
in
fnstsw
int
cmp
decb
scas
pop
mov
mov
sahf
std
push
xchg
fsin
int
cmp
sub
sbb
mov
push
push
test
xor
pop
int
std
push
in
cs
mov
xchg
jp
add
inc
xor
popa
jg
outsl
or
jbe
push
jo
das
ret
ret
loope
icebp
in
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
loope
icebp
out
cmp
mov
inc
inc
push
dec
popa
addr16
add
adc
and
xor
xchg
mov
loop
fsubrs
popa
or
in
lock
lret
out
or
jmp
idivb
dec
inc
div
lods
add
xchg
add
cmpsl
jge
pop
daa
pop
out
push
out
sbb
loop
mov
cmp
push
dec
ret
por
ret
jg
les
icebp
inc
je
orb
scas
inc
pcmpeqd
jg
pop
imul
xor
xor
push
adc
int3
xchg
jo
xor
aam
in
mov
rclb
insb
mov
adc
pop
mov
test
movsb
sub
and
adc
fwait
jmp
ret
inc
mov
sbbb
popa
outsl
jno
add
adc
and
xor
rol
xlat
loope
icebp
testb
mov
and
xor
jle
outsb
fs
jle
dec
push
mov
mov
mov
xchg
stos
mov
pop
repnz
les
and
push
insb
pop
cmp
mov
mov
pushf
mov
lods
jbe
hlt
loopne
rcr
lret
push
sub
push
adc
inc
jae
mov
xor
rcr
iret
loope
icebp
out
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
loope
icebp
out
sbbl
xor
cld
pop
push
jl
and
push
subl
fidivs
jecxz
in
cmpsb
popf
xchg
add
pop
mov
enter
jg
into
mov
ficoml
or
sbb
dec
pop
scas
lret
jb
call
xchg
fisubrl
fidivrs
and
sarl
sub
adc
sbb
lea
sub
cwtl
xchg
or
das
xchg
popa
and
fyl2x
xchg
repz
addr16
cmp
mov
inc
lahf
sbb
push
icebp
dec
lods
ja
sbb
int
pop
and
es
add
xor
xor
fisttpll
stos
cli
mov
jecxz
cmp
dec
jge
clc
data16
pop
fmull
dec
push
mov
jb
scas
xchg
or
fdivr
inc
dec
push
addl
sbb
xchg
adcl
lock
sti
adc
sbb
pushf
push
adc
or
mov
mov
xchg
ds
pop
pop
inc
mov
inc
imul
pop
push
inc
pop
fsubl
outsl
sbb
xor
fmull
sub
mov
dec
insb
cmp
lea
subb
lods
enter
movsb
xlat
or
ret
pop
cmc
xchg
or
cmp
and
int3
xchg
sub
out
push
sahf
and
test
ficoml
mov
loopne
lock
js
data16
jae
inc
pop
mov
sbb
mov
cwtl
xor
jns
lret
adc
inc
pop
sbb
aaa
mov
lods
out
adcw
push
mov
mov
repz
in
xlat
dec
jge
dec
movaps
movsl
dec
std
xlat
and
bnd
adc
rcll
test
inc
popf
push
adc
addr16
idivl
mov
les
push
iret
loope
pop
add
test
lods
pop
push
fcoml
xor
dec
mov
xchg
add
aad
mov
negl
aas
sbb
adc
gs
pop
test
aam
push
movsl
movsl
jnp
jo
sbb
movsb
push
insb
pop
xlat
ljmp
or
mov
pop
and
test
xchg
cmp
adc
xchg
in
cli
test
xchg
jae
jp
in
std
loop
mov
and
pop
cmc
out
pop
aaa
ljmp
mov
repnz
inc
outsb
lods
test
mov
mov
dec
dec
stos
jle
clc
pusha
cmp
sbb
je
pop
xor
inc
pop
std
or
mov
and
jnp
inc
movsl
xor
or
mov
fwait
mov
ja
xor
stos
push
cmpsb
sarb
xchg
cli
nop
das
pop
mov
movsl
repz
sub
ds
leave
xchg
lar
jb
sahf
repz
das
and
or
icebp
xor
or
mov
sub
je
packuswb
insb
shll
sbb
popl
xor
and
mov
add
ds
push
fimull
inc
mov
mov
inc
pop
ret
fimull
dec
or
adc
imul
xchg
mov
scas
jp
cmc
mov
icebp
ljmp
std
xchg
dec
jp
aad
daa
push
jno
loop
addr16
mov
cwtl
aam
outsb
inc
or
push
jmp
inc
mov
pop
or
mov
js
pusha
xlat
fwait
inc
mov
ror
jo
ret
shlb
gs
push
mov
sub
mov
cmp
and
sub
outsb
mov
mov
lcall
ds
nop
adc
push
push
bound
cmc
adc
adc
cmp
fmull
fs
mov
adc
roll
fsub
lds
je
and
push
mov
push
insb
dec
call
inc
mov
daa
ja
iret
into
adc
mov
fs
stc
ja
xor
leave
adc
ret
sahf
rolb
push
dec
out
scas
bound
mov
xlat
ss
dec
insl
pop
adc
pop
jg
jmp
testb
jmp
sub
stos
mov
mov
xchg
cmpsb
adc
xor
ret
ja
enter
rcrb
je
xlat
push
lcall
jle
cmp
xchg
cmp
enter
ljmp
and
mov
loopne
mov
pop
sbb
push
loopne
pop
iret
and
leave
dec
movsb
scas
popa
iret
jns
jp
rorl
push
in
mov
movsl
cmp
push
enter
pop
sarl
in
cmp
sub
sbb
pop
popf
add
or
xchg
movsb
mov
outsb
dec
ja
pop
sub
lea
div
xchg
push
in
notl
nop
pop
jno
les
or
cli
xor
mov
xchg
andb
pop
cmp
adc
popa
add
push
jmp
fcmovbe
and
imul
sbb
cmp
mov
rcll
in
xchg
popf
mov
cmp
pop
dec
les
hlt
flds
mov
jae
xchg
dec
pop
dec
imul
and
lock
xchg
repnz
fstl
insl
lods
btc
and
pop
mov
outsb
pusha
or
xchg
inc
xor
xlat
stc
gs
mov
cmpsl
popf
lret
mulb
loope
lret
or
sub
rorl
jo
ds
jmp
cmc
iret
aam
js
jl
rorl
testl
movsl
mov
sbb
dec
sub
imul
arpl
and
fcmove
popa
js
add
out
inc
pop
inc
lock
in
xchg
jb
push
lcall
cld
pop
icebp
xor
stos
sub
fs
or
dec
inc
cmp
jnp
xchg
in
push
out
dec
jne
sub
mov
jno
repz
xchg
jb
inc
pop
or
les
lods
push
popa
sbb
daa
xchg
adc
mov
mov
mov
push
cmpsl
scas
scas
outsb
insl
sti
call
mov
fldpi
sarl
pop
sbb
jecxz
mov
xor
cmp
lcall
call
and
idivl
xlat
pop
popa
mov
enter
xor
push
push
jge
adc
jmp
ret
mov
cmc
imul
pop
fnstsw
xchg
pushf
add
dec
int
fidivrl
xor
jge
cmpsl
xor
add
je
and
lea
imul
loop
in
out
popa
mov
xor
xor
fsubrp
sub
push
mov
add
or
arpl
pop
sub
int
sbb
mov
fwait
mov
cmc
mov
stos
add
xchg
jb
aas
jne
repz
test
gs
rol
cmc
dec
inc
aam
cmp
in
icebp
jecxz
pop
popa
cmp
inc
negb
or
pop
movsb
jecxz
movsl
cmpsl
loop
in
xchg
out
lock
fstps
pusha
adc
lods
mov
jo
mov
aam
aad
xchg
push
out
iret
and
lds
out
mov
fimuls
xchg
push
sbb
and
test
fcmovnb
cld
addl
shll
inc
sahf
fcoml
pusha
dec
mov
stos
sbb
test
iret
fdivrl
push
adcl
pop
nop
push
lods
mov
pop
push
int3
sub
std
das
fwait
aaa
outsl
sbb
push
mov
sbb
push
mov
sub
outsl
scas
sti
pop
into
xchg
mov
into
dec
out
pop
xor
dec
sbb
mov
subb
mov
mov
mov
cwtl
dec
in
ja
jnp
cmp
sub
mov
push
shll
pop
cltd
xchg
insl
or
mov
out
push
or
pusha
add
cmp
and
and
jne
or
int
decl
or
mov
add
lds
std
fisubl
test
add
inc
cwtl
and
push
mov
jg
cmpb
movsb
loopne
push
cmp
mov
push
mov
inc
jge
push
sub
div
xchg
adc
cmp
scas
cmp
movsl
int
push
pushl
and
xor
dec
dec
in
fists
sub
xchg
mov
dec
test
leave
mov
mov
push
out
jp
sahf
jmp
popf
push
add
outsl
or
nop
adc
pop
mov
adc
out
jns
lea
fcompl
pushf
iret
lret
cmc
mov
outsb
jecxz
aam
cld
adcb
sarb
aad
cmpl
les
fdivrs
es
mov
out
jl
inc
rcll
cmp
dec
adc
gs
enter
xchg
pop
clc
dec
cltd
daa
pop
mov
loop
xor
adc
adc
and
or
jp
sbb
lcall
lcall
xchg
dec
pop
mov
cmp
inc
xor
loop
repnz
mov
pop
and
jge
negl
cmp
dec
test
idivb
dec
jbe
rorb
push
xor
outsl
test
dec
adc
adc
push
test
cmp
cmp
jmp
lea
mov
or
shr
out
sar
mov
xchg
insl
out
jnp
ret
or
pop
filds
add
mov
ds
jbe
addr16
int3
repnz
fwait
cmp
gs
inc
sti
bound
push
xchg
cmpsb
rep
popf
cltd
aad
sbb
pusha
mov
jmp
adc
sbb
test
popa
or
adc
int3
xchg
jo
lret
loop
pop
inc
jnp
cltd
lods
lds
or
pop
pop
popa
sub
add
cmp
pop
cmp
pop
inc
out
mov
popa
das
or
mov
jb
pop
ds
movsl
mov
mov
shlb
xchg
push
lds
test
out
rep
rcll
sti
dec
stc
mov
ret
dec
ret
data16
arpl
push
dec
movsb
inc
or
pop
pop
fs
outsl
cld
ret
sub
ret
push
mov
push
or
icebp
mov
sbb
imul
test
lahf
movsl
fs
pop
repnz
dec
int
fwait
aam
add
sub
fcmovnu
mov
xor
arpl
mov
sub
push
loop
mov
pusha
pop
and
add
xor
push
outsl
repnz
cmp
test
inc
push
add
arpl
outsb
push
jmp
add
cwtl
lock
mov
mov
or
jbe
sbb
imul
movsl
push
or
out
icebp
gs
fwait
sbb
pop
pop
das
sbb
ffreep
aad
sbb
cmp
push
xchg
movsb
lret
mov
cmp
lret
out
xchg
xchg
or
jp
mov
cmpsl
jmp
add
dec
fimuls
mov
push
adc
pop
mov
pushf
or
mov
test
dec
inc
lret
cmp
sbb
shrb
dec
aad
fwait
inc
push
xor
lea
pop
sbb
pop
add
mov
ss
insb
add
xor
dec
cmc
stc
adc
jecxz
fdivrl
dec
mov
addb
sahf
into
pop
int
imul
aam
aaa
int
mov
cli
ret
ljmp
cmpsb
mov
popf
dec
mov
movsl
adc
fisubl
shl
sbb
pop
pushf
shr
in
pop
popa
cmp
scas
adc
push
and
mov
scas
jp
xchg
les
rcll
fidivrs
sbb
jbe
jb
add
scas
push
shrl
test
stc
push
push
in
mov
out
lods
cmp
mul
push
aad
adc
cmp
push
inc
inc
out
out
jp
hlt
fldenv
subl
xchg
and
add
rcl
cmpsl
loopne
cmp
push
cmp
add
sub
lods
insb
ja
std
sbb
adc
imul
iret
sub
outsl
mov
jns
sbb
add
mov
fdivrs
fildll
rcll
and
mov
fbld
dec
ja
add
push
mov
xchg
push
popf
loopne
xchg
dec
adc
std
shlb
jnp
or
or
push
push
and
fwait
repnz
outsl
inc
enter
add
jge
les
mov
push
repz
or
inc
pop
in
jbe
pop
fwait
in
xor
repnz
jae
je
mov
add
outsb
jmp
cmp
and
stos
and
adc
xchg
bound
mov
shlb
sbb
add
std
cmpsb
jge,pt
pop
test
mov
scas
outsb
orl
or
mov
ds
out
cmpsb
cli
push
scas
ret
mov
inc
push
das
mov
notl
sbb
lock
insb
shll
test
push
mov
jo
xchg
or
inc
cld
add
push
in
dec
sub
stc
jge
sbb
mov
jb
insb
loope
imul
jb
xchg
xor
and
pop
sub
pop
sub
cmc
dec
add
cld
sbb
or
xor
sub
lds
ja
call
jo
fstl
adc
xchg
mov
shrb
fstps
cs
cmpsb
out
mov
cltd
add
int
jmp
fwait
pop
inc
lret
enter
rorb
xchg
mov
ds
mov
daa
loopne
sbb
mov
jmp
dec
in
xchg
cmp
mov
aad
sbb
xor
push
jp
mov
mov
stos
mov
or
outsl
pop
loopne
clc
insl
mov
outsl
addr16
test
inc
cmc
dec
xor
loope
mov
in
inc
xlat
push
sahf
loopne
or
push
in
pop
dec
and
sub
aad
jae
push
mov
lret
test
push
adc
ret
xor
arpl
fsub
mov
jle
jmp
jg
jg
jge
jg
sarl
pop
inc
lods
ss
pop
out
mov
jl
mov
iret
call
outsl
insl
sbb
pop
mov
stc
sbb
push
in
mov
mov
je
pop
xor
cmp
mov
std
fmuls
push
pusha
sub
push
in
movsb
adc
mov
aas
add
xchg
fucompp
mov
sub
mov
rcrb
cvtps2pd
sub
inc
pop
in
insb
sahf
lock
fdivs
push
cmp
mov
lock
cmp
icebp
pop
repnz
bound
cli
sub
xor
icebp
jl
cmp
mov
pusha
pop
xor
sbb
mov
mov
sub
arpl
inc
sbb
popf
sub
push
sbb
fisttpl
std
or
xchg
and
dec
jno
in
cmpsb
test
push
xor
rol
lea
leave
ljmp
pop
jne
jle
mov
loop
lahf
mov
mov
xchg
cmp
push
inc
adc
stos
pop
test
gs
push
add
nop
push
xchg
and
jecxz
out
mov
xlat
nop
nop
out
sbbb
pop
mov
mov
enter
jl
ja
scas
mov
jb
mov
mov
fists
push
sbb
scas
dec
push
xor
lret
mov
ret
popa
dec
push
jae
fisubl
sbb
in
rclb
sub
shrb
sub
test
es
imull
sub
lds
pop
push
mov
push
imul
arpl
cmp
sub
aam
pusha
add
insb
jbe
push
outsl
in
mov
faddl
cmpsl
lods
jno
aam
test
push
loopne
lcall
mov
mov
inc
pushl
sahf
fbld
lcall
jg
mov
loopne
pop
push
push
xor
mov
xchg
lock
pop
add
stos
movl
je
push
stos
popa
fidivrl
ror
icebp
in
xorb
fs
js
rcrl
adc
jns
pushf
jae
gs
leave
push
fwait
rcrl
sbb
int
xlat
jp
xor
and
pop
fdivr
shrb
lds
jle
sbbb
mov
jbe
xor
fsubrs
sarl
dec
sbb
das
xor
ret
push
in
mov
or
inc
out
fcomps
jmp
and
les
xchg
or
gs
js
cmp
movsl
mov
addr16
in
jo
scas
loope
dec
add
shll
cmp
das
movsl
mov
dec
lret
pop
out
mov
js
lods
testb
add
and
pop
xchg
jl
inc
in
and
cwtl
cli
subl
and
mov
adc
inc
test
outsb
xchg
and
jae
or
push
cmp
cmp
fistl
pop
mov
jb
sbb
inc
scas
dec
je
adc
pop
in
add
stos
fsts
mov
jnp
ss
sbbb
xlat
dec
inc
sub
add
and
adc
mov
and
xor
jecxz
lods
adc
hlt
movzbl
cmpsl
testb
sub
sahf
xchg
aam
inc
or
add
mov
mov
mov
orl
fisttps
insb
and
push
mov
dec
add
xor
mov
fucom
in
or
mov
std
notb
adc
jl
lock
inc
dec
lds
inc
out
js
push
mov
mov
les
mov
call
nop
jle
test
dec
sbb
mov
mov
xor
cmp
push
add
jo
xor
or
adc
cs
pop
mov
dec
in
dec
out
xor
stos
lods
adc
mov
stc
out
xor
dec
sarb
jne
sar
mov
cmp
imul
call
ljmp
leave
fldl
imul
icebp
sti
mov
fucomip
fcmovbe
mov
dec
nop
mov
sub
out
adc
push
adc
cmpsl
sub
popa
js
clc
icebp
inc
sbb
xchg
xlat
mov
mov
pop
fdivrs
imul
movsb
jns
and
insl
mov
mov
and
daa
rcrb
iret
stos
aas
cmp
xor
xor
ja
lea
ss
and
aaa
and
inc
inc
pop
mov
add
popf
mov
fimull
or
dec
sbb
pop
sbb
pusha
mov
jmp
shrb
jmp
jp
in
int3
mov
add
add
scas
es
lods
cmpsb
leave
nop
mov
xor
dec
lret
xor
inc
push
mov
xchg
das
mov
dec
jp
xor
mov
cmp
bound
repz
int
icebp
lret
pop
in
repz
je
scas
fmuls
mov
xchg
mov
dec
push
les
lods
in
insb
adc
push
sub
movsl
xor
cmp
push
adc
imul
les
or
inc
sarb
inc
repz
nop
or
sbb
scas
pop
repz
shr
and
aas
or
mov
mov
pop
adc
xor
test
outsb
mov
enter
inc
test
sub
je
mov
fcoms
add
inc
int3
fdivl
jg
fcoms
hlt
and
add
lret
dec
pop
cmp
ret
stc
push
flds
loopne
and
jne
test
sbb
jge
or
dec
das
dec
lods
pop
push
adc
ss
xor
add
iret
addr16
add
mov
in
fisubs
fcompl
test
xor
mov
mov
mov
dec
jae
dec
rorl
cmpsb
xlat
outsb
push
int3
enter
fwait
jp
push
test
jp
leave
sub
ja
add
jo
xor
and
push
xor
loope
mov
dec
sbb
rcl
ds
iret
mov
xchg
dec
xchg
sahf
and
cwtl
in
xchg
cwtl
mov
xchg
push
jb
lret
jecxz
out
mov
push
sub
pop
hlt
jg
leave
jecxz
xchg
decb
jle
sbbb
mov
lcall
mov
mov
xchg
jo
xor
sub
data16
add
pop
cwtl
xorl
cmp
lds
roll
add
add
mov
iret
push
test
mov
sub
mov
dec
ficoml
jo
mov
loope
les
dec
cmp
fsubs
leave
mov
fneni(8087
jmp
gs
ficoms
je
pusha
lret
sub
adc
loopne
cmp
mov
cs
adcb
pusha
jecxz
jg
test
xor
sbb
push
pop
and
sub
fmul
cmpsl
xor
jmp
xchg
sbb
pop
rorb
lods
or
int3
adc
xor
out
xchg
sbb
rcll
mov
loop
pop
jmp
iret
push
or
pop
sub
xchg
xchg
shrl
inc
inc
jle
sahf
xor
sbb
push
sbb
mov
xlat
jo
pop
ss
mov
add
lret
sti
or
jne
mov
jns
push
jbe
jns
scas
dec
lret
jl
mov
pop
cli
jb
shlb
mov
in
test
pusha
out
pop
rol
in
notb
bound
xor
aaa
int
pushf
and
jge
mov
adc
adc
push
inc
pusha
shl
outsb
fcomps
mov
lds
adc
js
xor
push
aam
cmpsl
in
xchg
sbb
jns
daa
daa
dec
pop
nop
jno
add
adc
and
xor
rcr
iret
loope
icebp
out
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
loope
icebp
out
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
loope
lock
sbbl
push
dec
popa
jg
outsl
add
adc
mov
fildll
gs
push
cwtl
notb
sbb
inc
dec
push
test
mov
adc
sbb
arpl
push
sub
sbb
pop
ret
pop
shrl
add
jae
inc
fcoms
mov
push
xchg
push
sbbl
nop
add
jae
inc
fcoms
or
mov
out
xchg
push
mov
rol
and
insb
mov
mov
cltd
pop
push
scas
cmp
inc
push
pusha
and
js
lret
imul
lock
ret
mov
dec
adc
and
cmp
cmpsl
adcb
and
fidivrs
out
jl
inc
add
mov
xor
outsb
push
cmp
pop
test
iret
mov
jae
int3
fldcw
jl
ret
xchg
mov
ret
cmp
pop
clc
ret
xor
in
pop
loopne
test
shrb
pop
in
jl
push
nop
repz
mov
dec
pop
inc
mov
int3
iret
gs
shlb
jne
dec
xchg
sub
xlat
pop
shlb
mov
adc
arpl
jae
inc
rcll
and
jo
pusha
repz
ret
pop
mov
in
push
jp
setle
or
push
jnp
jl
push
shll
out
call
pop
enter
imul
or
pop
cld
push
cmpsb
cmp
int
aam
in
lock
arpl
jae
inc
fcoms
mov
sbb
dec
ret
pop
shrl
add
jae
inc
fcoms
mov
sbb
dec
ret
pop
shrl
mov
push
test
sbb
in
in
add
testb
ss
clc
enter
cmp
insl
jmp
jle
fs
dec
xchg
js
push
adc
push
mov
outsb
cmp
push
push
cmpb
jl
pop
movsb
push
or
cmp
cltd
sub
sbb
push
xor
icebp
ja
clc
jnp
nop
addl
cltd
dec
inc
imul
setne
adc
loopne
mov
xchg
add
xor
mov
xchg
loop
lcall
xchg
mov
scas
movzwl
addl
lock
mov
repz
sahf
inc
add
jno
out
scas
cmp
mov
pop
sub
jae
pop
pop
add
push
fwait
jo
mov
pop
sub
mov
sub
or
into
lea
cs
adc
in
sbb
ja
sub
in
push
push
sbb
or
adc
repnz
sbb
fists
popa
scas
push
in
mov
adcb
fnsave
mov
push
mov
sbb
es
test
mov
dec
adc
or
push
ret
pop
sub
mov
cmc
jae
test
imul
xlat
mov
sbb
jl
jmp
pushw
jg
mov
cmpsl
mov
inc
jae
imul
sbb
cmc
adc
push
fnsave
push
cld
je
lock
lahf
lods
enter
mov
xor
enter
daa
push
shrb
ja
inc
arpl
pop
je
xor
loope
sbbl
call
gs
js
mov
mov
shl
aaa
sbb
lret
cmpsl
xor
mov
cmp
in
mov
sub
dec
mov
xor
add
or
scas
mov
pushf
push
add
cmp
pop
xchg
mov
mov
aad
imul
loope
adc
popa
add
loope
push
test
lods
cmpsb
mov
inc
xchg
out
int3
movsb
sub
leave
xor
sub
lock
dec
mov
inc
mov
add
cmp
sbb
cli
dec
paddusw
hlt
sub
mov
std
inc
mov
pushf
pop
jmp
push
add
pop
rcrl
mov
cmp
and
mov
inc
ret
bound
ja
aaa
mov
repz
jmp
sub
mov
xchg
ds
dec
push
or
lods
js
dec
mov
add
push
shrb
mov
cmp
dec
push
scas
push
and
shlb
outsl
rclb
mov
xchg
or
enter
es
sub
mov
jb
es
cmp
push
add
jne
imul
pusha
sub
or
test
push
mov
scas
push
jmp
and
stos
add
hlt
xor
ret
setge
out
icebp
cmc
mov
jne
xor
sarb
inc
mov
xor
xchg
mov
addb
pop
in
mov
loop
daa
leave
andl
imulb
pop
xchg
push
xchg
xor
dec
mov
jg
jp
popl
cmp
nop
arpl
jno
mov
and
aam
fstl
xlat
sub
out
in
sbb
adc
or
daa
dec
lcall
rol
dec
rcrl
fs
mov
pop
mov
shlb
in
mov
and
dec
push
test
and
mulb
or
ljmp
test
or
ret
rcrl
loope
and
pop
movsb
insl
sub
or
es
add
insl
clc
push
sbb
enter
jge
push
inc
pushf
jns
movb
inc
dec
scas
fstpl
bound
psubq
rolb
push
sub
loop
push
subb
aaa
loopne
shll
push
xadd
adc
das
jle
jmp
push
movsl
mull
xchg
jne
xor
jnp
iret
dec
gs
pop
pop
gs
sbb
nop
push
cmp
pop
mov
sbb
jp
xor
xor
push
cmp
push
cmp
pop
mov
dec
xorl
stos
sub
enter
sub
movsb
pop
incb
lds
xchg
cmp
push
stc
push
test
rorb
xor
jg
pushf
mov
or
xor
push
lcall
lret
jb
cwtl
jl
fsubrs
imul
sub
xor
cmp
gs
mov
shlb
gs
cli
scas
or
scas
mov
fcompl
in
pop
aad
movb
outsl
insl
testb
and
aam
shlb
loopne
and
fcoml
push
aam
xor
ja
push
lret
imulb
pop
hlt
and
fcomi
fistl
sbb
rcrl
sbb
rorw
outsb
mov
es
jecxz
jl
cmp
add
dec
xchg
cmp
je
mov
mov
aad
repz
xchg
imul
sub
inc
sbb
mov
cmp
and
lahf
mov
jbe
xchg
out
fwait
sub
lods
inc
xor
sbb
pusha
push
dec
js
outsl
jle
fidivrs
popa
in
test
fists
sbb
cmp
jg
rcrl
test
cmp
repnz
mov
sub
lock
jmp
in
fcomps
jg
and
int
xchg
scas
jbe
negl
adc
jb
adc
test
xchg
lea
xchg
mov
in
cmp
cmp
mov
or
aam
fimull
int
push
sti
rorl
cmp
mov
sbb
or
stos
mov
mov
push
sub
in
xchg
and
shlb
fwait
dec
lock
nop
xchg
filds
outsb
testl
sub
dec
das
sbb
iret
lret
sbb
adc
inc
or
out
xlat
adc
cmp
inc
pop
ss
fcom
mov
fildll
inc
xor
and
stos
push
enter
loopne
jbe
mov
std
aas
call
sbb
adc
xor
mov
ljmp
sti
mov
mov
je
gs
sahf
mov
pop
dec
mov
cld
add
mov
pop
sbb
mov
negl
cli
icebp
xchg
dec
xorb
sub
int
enter
cmp
outsl
insl
jle
xchg
sahf
and
pusha
push
or
mov
or
mov
arpl
sub
cmc
inc
mov
fidivl
or
movsl
aas
xchg
and
push
jae
adc
sbb
sub
cli
push
lret
jp
aam
jno
fbstp
loopne
sub
pop
mov
mov
popa
int
mov
dec
mov
arpl
add
das
pop
inc
mov
xchg
pop
xor
fstl
cmpl
xchg
je
pushf
xchg
push
push
add
cwtl
fildll
fwait
loopne
dec
divl
jne
xchg
aad
mov
pop
sbb
imul
xor
addr16
dec
in
sbb
mov
mov
mov
adc
or
add
repz
mov
push
xchg
xchg
fwait
xor
xchg
ss
add
icebp
repnz
enter
add
xor
hlt
subb
out
push
ret
lods
in
lret
ja
ret
jnp
pop
push
test
pop
lcall
xchg
pop
cltd
sub
push
push
je
push
adc
insb
cmpsb
sub
jmp
in
aas
dec
fistpll
ret
sti
inc
jne
stos
loope
lea
subl
les
jmp
imul
cs
cld
ret
ljmp
jl
int3
das
icebp
nop
mov
insl
gs
push
jmp
dec
call
push
or
and
dec
cmc
scas
lret
xchg
or
shlb
std
fidivrs
ret
inc
fstl
xor
dec
sti
out
inc
mov
test
aad
test
cs
leave
inc
orl
sbb
jp
movsl
xchg
imul
mov
adc
cwtl
mov
xchg
inc
out
outsb
xlat
push
push
iret
adc
imul
adc
test
xor
inc
and
ja
test
es
out
in
sbbl
popa
out
mov
xor
push
mov
idivl
sub
insb
mov
mov
mov
dec
les
cmp
aas
and
jne
sarl
xor
add
outsb
sbb
inc
btc
mov
sub
inc
xor
das
out
cwtl
xchg
sti
jecxz
mov
and
push
addr16
popf
mov
push
jl
cmp
push
hlt
mov
scas
add
lret
inc
sbb
lahf
mov
loope
cmpsl
sub
imul
jo
mov
test
adc
cmpsl
add
inc
repz
or
aad
add
jo
aaa
jae
enter
push
xor
pop
inc
cld
push
jmp
test
inc
jne
insb
pop
jg
cmpsb
inc
pop
call
xchg
dec
mov
movsb
sbb
shlb
mov
push
dec
mov
jecxz
ret
sti
repz
mov
push
jbe
jl
xchg
pop
in
psubq
mov
and
jp
dec
mov
ljmp
in
cs
inc
stc
mov
mov
das
push
aas
inc
sbb
shlb
sbb
mov
data16
or
gs
push
test
push
adc
popf
test
xor
sbb
or
sbb
mov
pop
lods
mov
sbb
cmpsb
cli
or
cltd
pop
shrb
leave
stos
inc
mov
push
fsubs
cwtl
rorb
scas
fidivs
mov
dec
push
ja
jne
aam
insl
mov
mov
push
stos
inc
rcrl
int3
sbb
xchg
or
add
adc
into
mov
pushf
mov
push
es
sub
roll
push
test
bound
mov
cltd
add
mov
jne
sti
xor
repnz
dec
or
xor
daa
xor
je
dec
stos
xorl
inc
sbb
scas
cli
pop
lret
jg
jo
push
negb
pop
out
lods
vxorps
cmc
xor
push
mov
scas
or
es
dec
xlat
pop
insb
scas
addb
xor
jg
pushf
add
adc
sub
cmp
aam
popa
cmp
test
out
jmp
mov
call
data16
sbb
es
pop
bswap
loop
lds
mov
sbb
mov
es
int
out
fsts
ja
xlat
jmp
cltd
xchg
or
aam
inc
insb
stos
iret
lock
dec
std
aas
xchg
inc
stc
pusha
push
jp
popa
mov
jae
mov
shl
test
pop
je
aam
and
sub
outsb
xlat
bound
mov
push
or
mov
push
stos
ss
scas
sub
orl
sbb
and
lret
lret
jg
adc
jp
out
adc
inc
jae
mov
out
adc
addl
pop
sub
jb
jg
inc
lret
xchg
mov
jmp
movsl
cmpl
cld
ret
jno
movsl
shrb
cmp
insl
dec
int3
push
and
insb
jnp
inc
popf
mov
dec
out
int3
push
jae
or
lcall
popl
ljmp
scas
imul
ret
dec
fidivs
movsl
call
jle
movsb
scas
aas
movsl
fs
mov
jb
jno
sbb
movsb
jns
out
leave
jg
mov
sbb
add
pop
or
xor
das
mov
sbb
testb
mov
aad
add
push
push
lret
dec
ss
xor
sahf
adc
testb
or
sbb
ds
push
mov
into
andl
mov
psubusw
fs
jl
cwtl
mov
enter
in
mov
out
inc
rorl
insl
pop
ret
sbb
lods
sbb
cmc
jmp
fs
push
mov
js
xchg
mov
insl
into
xchg
lretw
or
and
lock
sub
pushf
xchg
pusha
cmp
test
mov
shrb
flds
fimuls
int
mov
addr16
or
test
enter
dec
ret
mov
xchg
sub
cmp
push
punpcklwd
mov
loop
mov
jp
mov
int3
les
add
in
lret
shlb
mov
sub
inc
sub
ljmp
ljmp
cmp
jmp
adc
push
push
and
aaa
pushf
in
and
lods
or
pop
push
scas
mov
mov
popa
shll
fisubs
xor
sbb
push
mov
cmp
mov
cmpl
fs
inc
mov
or
jl
mov
leave
xorb
xchg
ljmp
orb
cld
push
andb
dec
xchg
aad
jns
xor
ss
jge
or
xchg
in
xor
jnp
daa
fldenv
fs
inc
lock
scas
adc
mov
insb
xchg
out
daa
xchg
xchg
rcll
jle
insl
push
mov
repz
movsb
repz
sbb
mov
loop
lcall
dec
push
lahf
int3
sub
test
sahf
jg
cwtl
jg
xor
vpcmpeqd
das
sbb
jbe
cwtl
pop
push
and
iret
test
sar
int
in
mov
lea
pop
mov
lcall
repnz
dec
pop
or
adc
addb
mov
movl
sbb
inc
jne
sti
xchg
or
iret
mov
mov
es
enter
fistpll
jno
fnstenv
sbb
rorb
mov
xchg
pop
xchg
inc
imul
mov
pop
and
lea
imul
and
hlt
xor
orb
iret
mov
jno
test
push
push
add
outsl
rorb
adc
std
les
jp
jnp
fisubrl
subb
xor
int
or
in
add
fs
fmuls
jns
pop
jp
mov
movsl
cmp
int3
adc
jnp
scas
cmp
dec
pop
popf
or
push
sarl
clc
mov
ljmp
in
out
push
pushf
cmp
fadd
jg
stc
sbb
movsl
in
test
dec
repz
add
or
bound
adc
add
pop
sbb
xlat
cmp
call
mov
pusha
xchg
sbb
push
mov
sub
sbb
push
mov
push
adc
pop
xor
lods
add
and
push
mov
pop
dec
je
xor
neg
mov
jmp
orl
pop
push
adc
cli
sub
sbb
push
push
or
sub
jl
mov
cld
bound
xorl
into
jle
cmovnp
cltd
fimuls
shl
jge
xorl
mov
add
mov
cmp
sub
add
fidivs
rcrl
and
or
inc
das
inc
pusha
dec
sti
jb
repz
std
lcall
push
ds
push
jb
adcb
jmp
std
out
add
das
outsl
cltd
outsl
adc
daa
shl
jl
sbb
push
leave
or
fwait
cli
icebp
rcrl
jle
fcoms
fs
mov
nop
das
push
sbb
divl
and
data16
mov
aaa
mov
sub
or
and
adc
sbbb
jmp
pop
push
shl
sahf
sub
mov
cmp
rcrb
lock
dec
test
sub
aam
lods
daa
sbb
dec
jg
inc
mov
mov
jns
cltd
mov
and
jo
sahf
add
inc
ficoms
push
jb
lea
sub
or
in
dec
sub
outsl
push
or
sbbl
xor
rorl
negl
sub
add
inc
sbb
mull
popa
inc
sbb
jl
cmc
loop
bound
and
sbb
push
xorl
xchg
xor
scas
adc
sbb
inc
cmc
ljmp
int
sbb
jle
jno
out
and
shl
jle
cmp
adcl
or
adc
sahf
sbb
xor
sub
and
pop
fcmovnbe
mov
les
cs
mov
subb
mov
cmp
rclb
push
cltd
xchg
sub
cmp
add
ret
mov
test
add
leave
jbe
pop
loop
jle
pop
sbbl
jnp
adc
scas
adc
xchg
xchg
sbb
cmp
or
push
lods
test
mov
mov
push
push
in
add
fisubs
addr16
imul
mov
mov
fcoml
mov
or
ficoms
cmp
xorl
cmp
cmp
sub
and
xchg
orb
ret
jecxz
sbb
push
xchg
insl
lret
pop
jle
cmp
pop
add
pop
stos
jmp
add
xchg
call
mov
or
cmp
xchg
sahf
jns
aam
inc
adc
xor
mov
daa
inc
jae
dec
and
add
nop
mov
or
shll
pop
pop
mov
loope
mov
lods
fistl
cmpsb
inc
ss
aam
dec
jp
mov
mov
or
or
pop
push
rcrl
sbb
int
xchg
cmp
jbe
jmp
test
scas
dec
stc
cld
outsb
jle
mov
xchg
mov
idivl
out
push
sbb
dec
mov
sti
jo
bound
ljmp
lret
stos
cltd
movsb
data16
mov
xchg
cli
in
xlat
dec
repnz
cwtl
push
ret
fnstsw
test
loope
std
push
jne
js
cmp
movl
sub
mull
idivl
test
xor
push
fucomip
mul
aam
inc
sub
ds
into
in
jbe
and
aas
add
dec
sbb
and
out
out
add
mov
shrl
test
stos
xchg
add
shrb
jnp
sbb
push
and
lcall
sysexit
add
test
add
stc
out
inc
sti
fstpl
out
inc
add
into
cmp
adc
test
popa
cmpsl
push
or
inc
fnstcw
mov
jle
insb
sbb
or
cmpsb
lea
dec
out
adc
jp
pop
popf
jle
in
xor
leave
int
in
xor
push
push
pop
adc
mov
add
scas
cmp
mov
xchg
push
scas
iret
add
into
lods
jl
lret
enter
rcr
xchg
ja
mov
aaa
pop
cmpsl
pop
and
push
mov
outsl
mov
jp
mov
rolb
bound
mov
adc
pushf
mov
pop
pop
jle
or
dec
mull
fsubs
and
pop
inc
mov
out
icebp
das
gs
inc
clc
rclb
dec
mov
cmc
sub
inc
adc
leave
adc
xorl
cmp
or
or
inc
cltd
mov
or
pop
and
scas
or
in
jo
jo
pop
dec
push
imul
lcall
ror
cmp
mov
cmp
fildll
and
fsubr
insl
push
pop
rorl
dec
and
sbb
ljmp
mov
jae
loopne
xor
mov
movsl
cmp
inc
push
sub
jae
push
aas
dec
dec
out
push
pop
jno
repnz
clc
into
adc
lret
sbb
and
mov
lods
inc
ret
adc
fldl
imul
ss
imul
add
cmp
je
add
jl
aad
dec
cmp
movsb
roll
daa
rolb
cmp
push
sub
arpl
push
fstpl
dec
jns
sub
lea
xchg
sbb
fwait
hlt
adc
xchg
add
neg
sub
orl
mov
mov
in
imul
popa
cli
pop
cmpsl
or
cld
or
jge
in
ds
ja
in
iret
mov
rorb
xchg
cmp
mov
lret
sub
fists
xor
insb
leave
add
inc
ret
adc
lret
mov
pusha
pop
sbb
lcall
jge
mov
icebp
sub
pop
pop
push
repz
xchg
mov
dec
mov
push
pop
add
lret
jl
notb
xor
cmp
sub
test
adc
cs
movswl
outsb
std
mov
int
and
fwait
outsb
push
cmpsb
dec
mov
ds
pop
mov
xlat
xchg
in
jecxz
ljmp
movsb
xor
sbb
jg
cmp
sahf
or
mov
cmp
inc
adc
or
test
push
adc
pop
adc
lea
add
jae
inc
fcoms
mov
sbb
dec
ret
pop
shrl
add
jae
inc
fcoms
mov
sbb
dec
ret
pop
shrl
sbbl
enter
sub
cmp
push
ret
pop
shrl
add
jae
inc
pop
push
xlat
mov
sbb
pop
imul
mov
cmpsl
sub
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jno
popa
push
push
inc
jbe
push
push
js
jne
ss
loopne
shl
shl
xchg
mov
inc
popa
push
push
inc
jbe
push
and
adc
add
icebp
loope
shl
shl
xchg
mov
inc
popa
push
push
inc
jbe
push
and
adc
add
icebp
clc
ret
xchg
shl
aam
repnz
out
mov
inc
add
lcall
stc
aad
fisubrl
sbbl
mov
shrb
push
or
and
out
sub
ds
fs
out
testl
or
and
adcb
sbb
and
icebp
push
mov
shl
add
loope
fsubl
jno
popa
push
cmp
bound
pop
xor
xchg
iret
add
cmc
fs
das
sbb
adc
xchg
mov
subl
xchg
flds
xorl
loop
pop
rol
cmpsl
and
ret
sahf
scas
xchg
addr16
int
adc
cmpsb
cmp
loop,pn
mul
jns
aam
add
push
inc
jbe
push
and
adc
add
icebp
loope
shl
shl
xchg
lock
adc
xor
imul
icebp
stos
test
mov
mov
rcll
add
xor
sub
cmp
push
ss
xorl
mov
iret
stc
std
shl
fcoms
popa
and
adc
push
adc
add
icebp
loope
shl
shl
xchg
mov
inc
popa
push
push
inc
jbe
push
and
adc
add
icebp
loope
shl
shl
xchg
mov
inc
inc
inc
int3
xchg
outsb
cmpsl
iret
ret
and
cli
jno
dec
xchg
rclb
sarb
rol
inc
push
mov
jo
cwtl
xor
arpl
mov
xor
cmp
cwtl
cmp
inc
mov
cmp
jb
lcall
mov
push
cmp
out
add
jmp
sub
add
popf
arpl
div
cltd
dec
daa
mov
mov
cmc
mov
mov
shlb
leave
jbe
jmp
test
cmp
inc
jge
and
mov
sbb
fwait
loop
jb
xor
jg
leave
cmpsl
pop
or
cmp
insl
and
in
xchg
nop
jecxz
das
sub
xchg
jns
jmp
push
add
addr16
into
fnstcw
inc
xorb
adc
add
push
lods
shll
inc
mov
cmpsl
jbe
dec
adc
mov
ja
sbb
xchg
dec
jmp
adc
mov
lds
sub
push
cwtl
icebp
sbb
stos
jl
loop
loop
jo
mov
sbb
pop
adcl
xlat
inc
out
cmpsb
sahf
mov
sbb
shrl
sub
cld
les
jnp
rorl
enter
sub
movsl
fcmovu
dec
add
pop
jg
aad
xchg
popa
pop
push
out
and
in
ret
popa
scas
jns
sub
fldt
xchg
mov
xchg
push
inc
rolb
jmp
cli
repz
adc
sub
mulb
xchg
pusha
insl
jb
mov
in
pop
jae
push
daa
notb
ja
outsl
fscale
fmuls
int3
orb
mov
daa
mov
jl
aaa
and
dec
out
leave
cwtl
sbb
and
dec
negb
int3
or
sub
mov
kortestw
lea
repz
mov
pop
add
cld
push
sub
cmc
jnp
daa
xchg
int
jle
cmovo
xor
in
outsb
leave
push
movsb
inc
aas
cmpsb
mov
lds
test
sub
data16
mov
push
mov
int
les
jl
fildll
aas
adc
mov
jno
sbb
call
enter
je
fidivrl
test
shl
dec
adc
out
shll
pop
sbb
test
mov
sbbb
out
pushf
out
pop
push
cmp
sub
push
cwtl
jbe
arpl
stos
fsts
pushf
add
jp
das
push
popf
pusha
test
cs
cmp
idivb
decb
push
pusha
aam
or
pop
ljmp
mov
sbb
jge
jecxz
cmp
push
inc
fstpl
and
je
jmp
or
mov
dec
cmp
dec
lock
jle
aas
lods
jb
jnp
xchg
add
xchg
jle
cmpsb
pop
sbb
mov
adc
and
sbb
lcall
popa
xor
and
dec
mov
cmp
es
enter
insl
and
mov
inc
lahf
mull
push
ja
adc
scas
ja
mov
xchg
pop
fnstsw
mov
mov
outsl
mov
orl
aaa
loop
adc
or
stos
xor
adc
out
out
out
mov
pusha
aam
test
lahf
test
nop
outsl
xchg
cmp
jnp
bswap
lods
mov
cmova
iret
mov
adc
xor
or
jmp
pop
push
xchg
jg
sbb
insl
lea
cmp
scas
mov
pop
add
xchg
stos
mov
push
cmp
cld
bnd
mov
sbb
int
cmpsl
test
add
push
lcall
lods
pop
lods
subb
outsb
out
pop
in
enter
cli
adc
pusha
sub
test
neg
aam
push
lods
das
test
sub
in
mov
iret
pop
ss
fiadds
mov
iret
lods
icebp
ja
sbb
lock
rolb
mov
fldl
and
push
ud1
dec
add
cmp
dec
int3
nop
and
and
cmp
mov
pop
subb
rolb
pop
mov
in
hlt
xlat
or
xor
in
xchg
adc
push
pop
clc
outsb
orb
mov
jb
clc
add
xchg
into
mov
scas
xor
fmuls
and
pop
mov
sbb
push
dec
lea
enter
mov
iret
unpcklps
orb
popa
mov
pop
adc
push
out
insb
jnp
frstor
inc
dec
icebp
push
add
sbb
js
notl
adc
lods
jbe
sbb
out
daa
dec
ret
dec
jne
jmp
cmpsl
popf
push
rclb
not
icebp
pop
sbb
out
das
lret
ss
inc
hlt
jge
pop
fsts
adc
sbb
subl
pop
repz
aad
std
cmp
xor
mov
outsl
add
cmpsb
dec
sbb
mov
mov
pop
sub
clc
aad
rolb
pop
xor
mov
lods
push
mov
movsl
push
jbe
mov
xchg
enter
jg
or
cmpsb
push
add
out
in
daa
jmp
cltd
add
stc
cmpb
cmc
orl
call
mov
mov
xchg
rolb
stos
jl
rcl
add
xchg
cmc
dec
add
arpl
sbb
mov
sub
cli
mov
inc
jae
lahf
clc
jge
sub
fsts
pop
cmp
dec
scas
jmp
int
and
mov
repnz
push
sub
shl
xchg
mov
mov
adc
xor
xchg
sti
and
leave
mov
in
sti
out
ficompl
push
mov
push
and
rorl
cmp
xchg
popa
insb
sbb
mov
shl
arpl
jp
dec
adc
loope
dec
bound
sub
push
jg
pop
inc
push
mov
xchg
xor
adc
or
xlat
dec
fsubrl
ds
rorb
jecxz
pusha
test
push
pop
sub
dec
cmpsb
fidivs
sarb
jmp
push
jae
mov
test
int
jle
push
xchg
shl
jl
into
jecxz
test
or
insb
push
repz
rcrb
and
imul
inc
push
sbbl
xchg
aas
test
mov
arpl
fdivr
hlt
loopne
add
and
mov
insb
out
neg
test
mov
jbe
loope
xor
push
mov
xchg
aad
dec
addb
popa
xchg
pusha
cwtl
pop
mov
std
cmc
jns
mov
in
ret
insl
push
les
std
imul
jg
mov
adc
sub
icebp
pop
loopne
push
mov
xor
sahf
mov
dec
push
cltd
cmp
add
mov
cld
icebp
repz
out
push
add
lret
mov
in
rcrl
jle
jno
in
xlat
daa
inc
rcrb
mov
out
addb
mov
in
inc
xor
in
js
pop
js
sarb
test
pop
adc
push
enter
pop
jbe
repz
orb
bound
jle
les
mov
mov
mov
clc
inc
loopne
xor
jecxz
cmpsl
cmp
shll
jmp
cmpsl
add
divl
in
sbb
shl
or
stos
loop
or
jecxz
push
iret
filds
and
aad
dec
stc
sub
xchg
mov
jg
push
lret
cli
incl
pop
popf
leave
and
or
or
sbb
inc
lea
inc
xchg
push
fs
std
sbb
jp
popa
std
cmp
popf
rcrb
push
cltd
push
jmp
mov
cmp
out
shll
or
xchg
int
repz
adc
mov
into
mov
sbb
gs
mov
fisttps
adc
mov
adc
shrb
daa
cli
inc
mov
iret
movsb
addl
mov
daa
addl
arpl
and
inc
adc
sti
test
insl
rorl
std
pushf
mov
pop
or
sub
mov
stos
xor
mov
push
pop
xchg
jmp
adc
enter
pop
inc
int3
fcmove
dec
lds
jl
cmp
push
cmp
popf
push
jno
mov
adc
adc
stos
cmp
into
add
cmp
out
outsl
in
sub
mov
lods
cmp
mov
adc
or
xchg
pop
loopne
pop
loopne
push
lods
inc
push
mov
loope
das
inc
add
xchg
sbb
xchg
fs
add
mov
push
add
pop
sbb
in
daa
pop
xor
sub
sub
xor
in
jl
xor
leave
imulb
push
and
jo
jge
in
sub
pop
sbbb
jp
rcll
mov
negl
push
out
xchg
repnz
xor
sbb
out
jle
std
add
xchg
mov
daa
les
pop
push
inc
std
adc
addr16
rorb
lock
mov
lock
mov
ss
push
push
mov
ret
repnz
in
jecxz
mov
push
add
mov
mov
jle
je
push
jno
push
jne
cmp
mov
iret
mov
rcrb
in
jl
inc
cli
iret
insl
jecxz
outsb
frstor
iret
jecxz
andb
cmpb
dec
inc
mov
add
cs
int
push
dec
or
cmp
and
xchg
gs
sub
add
popf
mov
lret
mov
cmp
inc
push
ds
stos
dec
movsb
pop
and
test
jp
shlb
cmp
rcr
in
ret
lock
push
pop
movsb
iret
jns
and
pop
xor
jle
cmpsl
fdivs
out
dec
stos
cli
dec
loop
xchg
test
rcrb
add
daa
dec
jmp
cmp
lahf
sbb
push
mov
scas
shr
popf
xlat
xchg
in
or
dec
and
scas
inc
xor
mov
lcall
and
ror
inc
pop
inc
and
jb
push
jle
test
cmp
enter
sub
hlt
js
and
mov
xor
xor
mov
test
call
xor
lock
repz
xchg
mov
xor
adc
and
sbb
nop
mov
xchg
dec
xchg
jge
out
push
sub
pushf
notb
pop
adc
push
jp
mov
inc
dec
adc
and
xchg
push
xchg
leave
xchg
mov
out
jp
in
in
mov
loopne
mov
xor
repz
fs
lock
sub
fwait
jb
lcall
pop
imul
or
cmp
xchg
out
cld
jno
push
jg
push
cwtl
cmpsb
cmp
jp
or
xchg
xor
es
in
pop
pop
mov
aaa
lods
mov
faddp
mov
push
stos
ficoms
movb
xchg
add
mov
cmp
add
ret
pop
loopne
and
xchg
mov
xchg
mov
loopne
cmp
lret
repnz
icebp
xor
or
mov
adc
jp
jo
cltd
add
aam
icebp
cltd
or
in
jo
lret
out
cmpsb
cmp
xor
push
inc
push
decl
int3
and
mov
xchg
sbb
in
stc
fmull
adc
xchg
adc
pushf
sbb
push
out
std
cmp
adc
mov
inc
and
popf
jg
or
cmpsb
daa
mov
jae
push
scas
fbld
adc
aam
inc
js
mov
daa
and
xlat
push
sub
xor
scas
mov
xor
std
cmp
fnsave
out
outsb
mov
lcall
jp
xlat
std
ja
es
enter
insb
cmp
repz
aam
jecxz
xchg
xor
outsb
jmp
xchg
mov
pop
inc
pushf
daa
adc
aas
jmp
test
sbb
mov
mov
dec
popf
mov
dec
push
cmc
loop
jmp
idiv
les
rorl
fnstenv
fdivs
popf
leave
xchg
and
sub
dec
xchg
mov
call
std
xchg
subb
sbb
lcall
lret
sbb
insb
ret
xchg
cli
sub
xchg
sub
and
popa
and
rorl
sub
adc
js
rorb
lods
mov
cli
sbb
aas
mov
fsubs
push
push
and
adc
int3
cwtl
pop
aas
lea
cmp
inc
xor
or
bound
and
sbb
pop
lcall
add
jmp
add
sarb
xor
xor
shlb
pop
int
lret
inc
xchg
cmp
mov
push
mov
jno
daa
add
fiadds
pop
fldenv
cmpsl
inc
stc
inc
xchg
jmp
scas
pop
push
test
pop
pop
or
pushl
dec
mov
fiadds
inc
mov
jge
in
or
pop
xor
jmp
pusha
add
les
jnp
push
jns
cmpsl
mov
xchg
jecxz
mov
in
mov
adc
aam
loope
jle
jns
popa
js
pop
lds
addr16
lret
pop
cmp
dec
fistpll
outsb
mov
call
movsb
xor
imul
jecxz
inc
cs
std
lea
push
sub
loop
insb
sbb
dec
pop
loope
jle
cmp
mov
sahf
aaa
lret
mov
fwait
mov
pop
in
imul
daa
stos
stos
sub
call
jge
es
test
js
jge
int
cltd
push
out
pop
shlb
mov
jbe
jle
insb
and
or
aas
xor
mov
or
push
xor
or
nop
into
enter
sbbl
fdivp
sub
dec
pushf
xlat
loope
out
jno
in
fbld
cmpb
pop
cltd
pop
pushf
pop
inc
xchg
push
fs
add
add
pop
mov
mov
cmp
and
cmp
mov
xchg
ficomps
lods
sub
and
xchg
mov
mov
inc
fcompl
mov
outsb
fsubs
arpl
sahf
movsl
inc
and
push
dec
test
or
mov
shl
dec
cmpsl
mov
or
outsl
scas
jno
push
and
mov
xor
or
ret
cmpb
cmp
mov
icebp
xchg
iret
xchg
cltd
ja
xchg
and
mov
sbb
pop
movsb
icebp
adc
mov
mov
dec
mov
fistpl
cmc
stc
mov
mov
rcrb
add
movsl
pushf
fsubs
xchg
adc
out
std
sub
fsubrl
adc
xlat
mov
xchg
and
pop
sti
mov
xchg
xchg
push
cmpsl
pusha
adc
add
mov
sub
mov
les
jbe
push
in
xchg
cmp
pop
ret
jmp
repnz
push
add
mov
out
inc
pop
jl
test
lcall
dec
push
jg
jp
add
and
je
mov
sub
mov
lret
cs
inc
cmp
fisubrs
pop
into
mov
and
fistps
fcoml
sbb
cmpsb
hlt
pop
scas
or
fwait
in
push
lds
sbb
out
or
mov
in
and
fcoml
pop
adc
xchg
add
lret
jmp
mov
adc
sbb
clc
clc
sti
jo
in
mov
mov
sldt
sbb
dec
fiaddl
push
xor
lods
jbe
sbb
inc
cmpb
sbb
test
xchg
cmp
int3
fsubrp
push
adc
lods
cmpsl
pop
jne
neg
lods
sbb
sub
in
test
mov
aas
sub
mov
inc
cltd
in
arpl
push
push
aad
icebp
adc
in
imul
pop
je
xor
lcall
jle
jo
xor
or
add
mov
mov
xor
sub
cmpsb
xchg
shl
or
mov
out
fsub
jecxz
mov
push
sub
iret
fs
adc
sbb
cmp
push
xor
cmp
push
mov
ss
sub
cmp
insl
xchg
dec
push
lret
or
or
mov
adc
mov
lods
fdivrs
and
mov
jnp
xchg
lahf
add
fstl
or
cmp
lods
dec
orl
push
xor
mov
cmp
xor
ds
push
or
jge
or
test
int3
repz
ja
das
sub
pop
mov
push
aam
pop
dec
repnz
movsl
push
test
lahf
add
fcmovb
hlt
or
mov
or
out
icebp
inc
dec
xor
sbb
adcb
or
mov
fs
mov
aas
push
inc
adc
mov
fmuls
pop
mov
dec
lea
loopne
test
sarb
les
pop
loope
xchg
dec
jne
jb
sub
sub
sub
xchg
test
lds
sahf
jne,pn
add
sbb
aad
adc
rcl
xor
push
sub
add
xor
and
lock
jne
pop
xchg
aaa
test
inc
push
pushf
lret
out
das
andb
cmp
xchg
ja
imull
aam
dec
repnz
repz
adc
inc
sbb
sub
cwtl
mov
pop
into
adc
cmp
jg
and
fistpl
mov
pop
int
sub
rol
ret
mov
inc
mov
call
pusha
fs
in
jg
data16
and
mov
sub
test
aad
lods
inc
push
jbe
sbb
sbb
dec
jo
stc
or
mov
cmp
outsl
xor
adc
testl
lahf
pop
sarl
movsb
lret
push
shll
in
pop
dec
push
cmc
sub
xchg
mov
cli
stos
pop
scas
icebp
xchg
or
and
pop
ret
sbb
test
or
add
daa
call
fsubrs
dec
lock
lret
shrb
pop
sti
ret
and
dec
pop
ss
add
int
mov
in
icebp
fstl
xor
push
and
out
cmp
push
cmpsl
data16
cwtl
or
popa
cmp
movsb
pop
fisubs
jb
dec
jle
or
push
mov
mov
push
lcall
cmp
adcb
mov
pushf
nop
leave
divl
or
jge
jbe
negl
sub
xor
mov
fcoml
je
push
fbld
mov
pop
mov
cmpsl
sub
jae
and
adc
stos
ret
imul
jne
shrb
push
adc
jo
jl
in
inc
add
xor
hlt
shl
xor
and
pop
sbb
and
sub
addr16
hlt
jle
mov
sub
xor
ss
cmc
xrelease
sub
repz
or
mov
sub
inc
aad
stc
inc
bnd
push
xchg
int
dec
fistpll
ja
nop
pop
add
inc
mov
pusha
xchg
dec
iret
sub
push
cwtl
sub
xchg
cmp
mov
loope
xor
imul
scas
fistps
mov
scas
pop
popf
cmp
push
in
xchg
or
iret
sub
adc
bnd
mov
pusha
es
mov
idivl
cmp
les
jne
cwtl
mov
into
mov
mov
test
dec
fwait
ljmp
lret
mov
negl
xor
push
add
sub
pop
adc
mov
inc
xlat
stc
pop
dec
push
inc
test
fxrstor
jmp
xchg
push
jo
inc
icebp
pop
cmp
push
in
xchg
ja
mov
pop
pop
in
dec
je
aaa
imul
dec
ret
sub
stos
mov
mov
lahf
enter
scas
jle
ror
xchg
and
arpl
hlt
ret
mov
mov
in
lds
lahf
test
push
test
jle
dec
inc
ja
enter
cwtl
pop
mov
fimuls
push
jbe
sub
int
sbb
sbb
in
jns
mov
repnz
les
pop
std
ret
mov
mov
in
jne
add
sbb
nop
jmp
aas
aaa
lea
inc
pop
dec
xchg
outsb
test
pop
andb
cmp
sbb
out
xlat
xor
stos
fildl
cmp
rolb
fwait
rcrb
add
inc
push
bound
fldcw
movsl
fisttpl
mov
rclb
xor
push
jmp
adc
push
std
fsubp
push
mov
or
push
jmp
xlat
cmp
pushf
or
lahf
push
jmp
xor
or
fistps
lods
movsb
cmpsb
jns
fucomp
mov
test
nop
sbb
jecxz
leave
stc
stos
mov
in
lea
hlt
mov
sbb
inc
push
xchg
cld
add
sub
push
les
mov
mov
int
dec
jmp
mov
xor
hlt
stos
clc
push
pop
pop
lahf
jmp
lea
shll
int3
pop
cmp
sub
jnp
xor
sbb
mov
gs
fsubr
icebp
mov
push
add
mov
inc
imul
inc
jbe
push
and
adc
add
icebp
loope
shl
shl
xchg
mov
inc
popa
push
push
inc
jbe
push
and
adc
add
icebp
loope
shl
shl
xchg
mov
inc
loope
shll
ja
push
and
adc
xorl
shl
shl
xchg
mov
inc
popa
push
push
inc
jb
push
and
icebp
cmp
jl
out
add
pop
icebp
dec
movsl
sbb
push
jmp
test
mov
gs
push
gs
push
adc
test
xchg
aad
movsl
cmc
cmp
test
loope
gs
push
gs
jne
inc
inc
push
adc
test
xlat
in
cmc
mov
imul
and
sbb
es
jno
adc
divb
cmc
ds
cltd
cs
out
out
iret
int
inc
adc
enter
outsb
or
jo
sbb
movsb
jno
into
lds
xlat
roll
and
lcall
cwtl
pop
in
lock
fistps
lea
call
jg
lds
xchg
add
repz
insl
in
in
cmp
push
lcall
fwait
and
lret
push
inc
pop
lock
cmp
xchg
xor
sbbb
adc
ljmp
jne
sbb
lds
jne
pop
sbb
pop
and
lret
cmp
add
in
cmc
mov
pop
aad
and
push
adc
int
add
fdiv
loopne
lock
mov
mov
lock
xor
jns
add
inc
add
cmpsb
mov
lock
jmp
stc
inc
add
and
xor
jne
jns
fs
jle
mov
mov
xchg
xchg
mov
shl
lds
xor
push
gs
push
adc
test
xchg
aad
movsl
cmc
mov
test
xchg
and
inc
adc
xor
movsl
in
and
data16
aas
cmp
xchg
jl
lret
movsl
inc
sbb
in
inc
les
jae
xor
aam
or
out
jbe
dec
inc
inc
cmc
out
xor
cmp
gs
adc
aaa
pop
negb
popa
out
shll
test
and
mov
cmp
adc
ja
pop
adc
sbb
and
sti
data16
enter
in
cli
rolb
lcall
pop
cmp
or
mov
xchg
mov
pop
push
popa
xchg
in
sub
sub
insb
scas
call
xchg
push
in
inc
fucom
les
daa
mov
sub
mov
jbe
in
jno
pop
push
jne
cmp
xchg
in
mov
sbb
push
pop
aam
shr
dec
psubw
dec
adc
movsl
outsl
xor
jg
movsl
icebp
loopne
or
popa
mov
push
push
daa
inc
jne
jge
jl
push
insl
les
xchg
mov
sbb
leave
add
mov
aaa
mov
jmp
loop
ja
cmc
data16
push
xchg
cld
push
xchg
scas
dec
clc
xor
xor
mov
or
push
jl
mov
movsl
jne
or
xchg
dec
ret
sub
les
imul
rcll
bound
xchg
shll
xor
jnp
adc
jne
call
jmp
ds
inc
mov
mov
stos
mov
imul
mov
aas
dec
xor
push
dec
aam
xlat
mov
popf
push
mov
rorb
lods
cltd
std
mov
cmp
xchg
xor
outsl
push
cwtl
lods
dec
je
pop
jns
mov
or
mov
mov
pop
mov
cmp
pop
neg
push
pop
imull
cmp
push
jnp
rorb
add
xchg
inc
in
mov
sub
push
out
jne
or
mov
cmpsb
test
push
scas
shr
jns
jp
add
out
xchg
add
or
sbbb
dec
mov
jnp
popf
cmp
outsb
pushf
ret
add
dec
dec
adc
mov
cld
pop
in
fstpl
enter
ret
jle
iret
ja
mov
inc
or
lea
pop
mov
js
shrl
jne
lret
cmp
adc
dec
ljmp
mov
inc
mov
sbb
sbb
xchg
jb
in
jnp
sbbb
fistps
aad
mov
sub
and
pop
push
push
sbb
pop
fwait
sbb
movb
sbb
aad
fwait
das
scas
sbb
idivb
inc
pop
std
lds
gs
and
push
sbb
iret
inc
sbb
stos
pop
stc
inc
sbb
negb
outsl
mov
xchg
sbb
pop
fistps
xor
sub
dec
jecxz
iret
dec
xor
lea
scas
cmp
push
rol
push
scas
and
and
mov
sbb
jg
imul
inc
cmp
mov
jecxz
push
add
stos
add
test
pop
sub
inc
nop
orb
popf
test
jmp
and
or
sub
mov
rcrb
insb
icebp
jmp
aaa
out
push
dec
cmp
or
out
and
mov
sub
in
testl
inc
ljmp
ret
leave
push
adc
mov
aaa
add
in
fcoms
push
or
mov
sub
bound
jmp
aad
pop
mov
inc
sahf
cld
push
scas
pop
shlb
xor
add
pusha
adc
repz
scas
mov
jg
ja
ja
lret
out
mov
push
jns
aam
daa
stos
cmpsl
hlt
mov
jmp
push
xchg
pop
jae
mov
cmp
push
push
xor
loope
inc
adc
je
lahf
mov
adc
mov
inc
push
ret
out
std
fsubl
roll
mov
jle
cmp
xor
push
jg
mov
gs
cmp
jmp
mov
fimull
mov
sbb
das
xchg
mov
jecxz
sub
sbb
outsb
leave
not
inc
or
mov
nop
iret
jle
pop
jp
int3
icebp
call
dec
int3
mov
leave
insl
aam
iret
lret
cmp
or
sbb
pusha
pop
mov
sar
dec
sbb
call
push
push
out
sbb
mov
dec
mov
or
pop
popa
pop
adc
ljmp
rolb
fisubrl
into
popa
verr
flds
jl
adc
xchg
outsl
mov
push
int
jl
das
loope
mov
fisubl
mov
pop
dec
sbb
inc
and
sbb
loop
inc
pop
jbe
mov
jle
dec
push
adc
mov
fsts
and
shlb
mov
addr16
test
pop
cmp
stos
fisttpl
mov
and
shl
ret
cmp
je
or
sahf
aam
sar
shr
pop
and
sub
or
add
xchg
mov
fs
ror
hlt
dec
adc
mulb
movsl
and
imul
call
mov
or
ret
movsb
push
movsl
ds
pop
ret
add
arpl
cmpsb
cs
mov
sti
mov
sbb
mov
push
lds
aas
pusha
dec
xor
xor
pop
add
adc
les
xchg
subb
mov
mov
push
repz
jne
loop
ret
fwait
push
es
sub
sarb
push
add
inc
mov
mov
pop
jnp
mov
pop
add
sub
lods
jae
add
and
and
pop
adc
jae
pusha
shl
push
pop
jge
push
sub
pop
cwtl
inc
fwait
dec
lods
das
push
mov
popf
dec
out
lods
fisttps
dec
mov
mov
outsb
roll
cmpsl
incb
sub
cmc
xor
test
clc
into
movsb
dec
push
mov
mov
add
fidivl
pop
shll
jbe
inc
inc
aaa
dec
pop
push
cltd
xor
push
xor
sub
loopne
shl
pop
fwait
cmp
lods
mov
adc
std
outsb
imul
mov
sub
call
faddp
fstpt
sarl
mov
xchg
push
outsl
loope
push
shrl
sbb
cmp
jg
into
imul
mov
dec
pusha
mov
cmc
test
push
rcr
mov
shrb
stos
fnstcw
in
push
xchg
jno
cltd
or
cld
xchg
in
adc
lret
xor
mov
fiaddl
js
adc
pushf
hlt
push
sub
mov
enter
out
mov
pushl
pop
cmp
lds
fs
mov
fldt
or
xchg
mov
sbb
popf
lret
call
cld
push
mov
push
loopne
or
mov
push
xchg
jno
scas
insb
push
pop
pop
cmp
push
dec
scas
fcomi
dec
or
iret
cwtl
sub
sbb
int3
or
loope
push
pop
lcall
mov
rcll
aas
shlb
mov
xor
scas
lcall
insl
cli
pop
jg
push
mov
mov
mov
mov
ja
std
imul
arpl
cmpsb
fmul
aas
bound
fwait
cmpsl
sub
mov
in
test
ss
ljmp
sub
xchg
and
jne
into
daa
push
push
push
add
decl
lret
lret
repnz
and
jae
imul
daa
fstps
cmpsb
lods
data16
test
adc
movsl
mull
dec
fildll
cwtl
and
dec
call
pushf
cmp
dec
imulb
mov
sar
mov
leave
cmp
mov
dec
jb
cmp
mov
pop
hlt
idivl
popa
jnp
mov
mov
lods
adc
bound
pop
lods
movsl
mov
mov
jecxz
cmpsl
sbbl
push
adc
sbb
inc
mov
out
insb
push
lods
pop
fld
int3
test
ror
push
testb
and
faddl
aam
stc
sub
repnz
mov
in
cmp
repz
addb
mov
mulb
push
and
xlat
inc
jne
or
add
jg
scas
test
dec
xchg
cld
dec
lahf
loop
rolb
ret
jnp
cmp
loop
mov
lods
jl
cli
rclb
leave
aaa
mov
stos
dec
arpl
jge
mov
dec
jbe
push
mov
add
xchg
pop
push
jbe
dec
es
add
and
sub
and
mov
nop
mov
push
hlt
push
imul
cmp
fsubl
xor
test
mov
mov
push
jmp
outsb
aaa
mov
fldl
repnz
leave
cmp
adc
lret
inc
or
add
in
lahf
aam
and
xor
xchg
mov
pop
jbe
ret
rolb
andb
jns
ror
aas
ret
push
adc
jns
sub
popa
pop
xchg
std
lea
sub
push
inc
xchg
nop
mov
mov
pop
jns
dec
or
sbb
dec
mov
jle
cmpl
sbb
jecxz
or
dec
shrl
push
jle
fiaddl
subb
lock
outsb
adc
push
aad
jle
or
fisttps
data16
rclb
divl
jmp
jo
or
test
xchg
jno
insl
out
cmpsb
xor
xlat
into
dec
xlat
xorl
sub
mov
mov
inc
add
aad
inc
mov
mov
xchg
fcomp
fldl
les
icebp
dec
add
mov
push
or
aaa
dec
inc
js
mov
stos
out
into
inc
stos
cmp
xor
loop
and
mov
pop
and
jae
pop
popf
xor
lret
lock
inc
mov
rcrb
call
adc
mov
push
xchg
inc
test
cmpsb
pop
pop
jb
pop
push
mov
les
movsb
adc
icebp
jns
jle
or
fsts
sbb
sub
in
mov
pushf
jnp
movsl
addl
cmp
sbb
cmp
sbb
mov
pop
inc
sbb
outsl
add
inc
mov
les
out
aaa
aaa
fnstcw
xchg
jae
mov
es
aas
xor
sub
outsb
ftst
pushf
mov
outsb
jecxz
pushf
rcll
outsl
scas
sbb
or
dec
and
pop
pop
call
gs
iret
cmp
outsb
lahf
popf
loope
cli
inc
add
xchg
int3
push
rcr
ljmp
push
pop
stos
aad
push
lods
inc
mov
adc
add
cmpl
cmp
adc
pop
push
jno
cmp
lods
rol
leave
imul
sahf
cltd
push
mov
push
and
and
test
fdivl
mov
mov
je
adc
mov
add
and
je
je
push
mov
cwtl
shrl
insl
xor
jb
jge
pop
daa
aas
mov
lods
fnstenv
push
lcall
cmc
sbbl
ss
mov
ja
mov
pop
fimull
aaa
aaa
pop
sbbl
sub
aaa
mov
pop
xchg
leave
in
adc
xor
push
subl
jbe
and
sub
cmp
les
shr
insb
ss
cmp
aaa
sbbl
mov
inc
les
sarb
xor
adc
jae
and
xlat
es
lahf
nop
mov
mov
jle
cmc
mov
pop
sub
mov
jecxz
pop
repnz
out
imul
jmp
pop
repz
push
ljmp
pop
in
cmp
dec
inc
xor
cli
shl
shrb
xchg
and
data16
das
jmp
stos
sbb
cmpsb
pop
adc
shl
jbe
cli
out
addr16
sub
mov
fsub
sub
jnp
sbb
mov
movsl
out
int3
cmc
add
sbb
jns
loop
enter
push
push
push
jge
dec
mov
pop
pop
out
mov
xlat
mov
shrb
aas
xor
iret
jbe
push
mov
pop
dec
popa
mov
je
das
jne
xchg
push
or
aad
or
jnp
mov
inc
aad
shrb
notb
jge
aam
test
mul
sti
leave
stc
xchg
in
jecxz
and
movl
adc
mov
lds
sbb
pop
aad
jmp
das
scas
insb
mov
jmp
jg
jb
ret
mov
insl
inc
push
cmp
daa
scas
dec
xor
add
dec
jns
xchg
cmp
push
sub
cmpsb
inc
cmpsl
shrb
push
jne
xchg
mov
dec
pushf
in
add
or
jl
xor
cmp
je
add
pushf
sub
test
mov
pop
jmp
dec
push
or
jmp
mov
std
mov
push
std
sbb
adc
xor
rclb
ja
cmc
pop
fadds
xor
sbb
mov
gs
cmpsb
or
lock
and
and
cmp
cltd
xchg
ficompl
cmp
mov
repnz
pop
sbb
or
jmp
jecxz
dec
dec
push
adc
adc
jp
enter
push
daa
push
xor
stc
and
repz
pop
test
stc
mov
mov
in
popa
mov
loop
jb
dec
syscall
or
sbb
inc
xlat
and
cli
andl
mov
cmp
sub
xchg
mov
out
mov
cmc
add
leave
cmp
pop
mov
scas
fsub
mov
xor
orb
inc
xchg
mov
hlt
ss
lds
out
dec
scas
cmp
jne
iret
xor
jns
xchg
stos
and
popf
dec
inc
fwait
mov
insl
bnd
paddusw
inc
sti
ja
sbb
insl
movsb
jbe
loop
pop
dec
sub
in
mov
and
cmpsl
lret
das
dec
xchg
adc
hlt
cmp
adc
pop
popa
inc
std
push
fistl
xor
clc
or
or
cmp
inc
add
mov
add
add
mov
xor
int3
repnz
pop
jno
fildll
push
hlt
mov
repz
bound
je
push
mov
adc
push
cli
and
pop
and
push
jnp
dec
in
pushf
inc
pop
mov
jns
jns
jge
mov
cmpsl
arpl
cli
pop
and
jl
inc
mov
sbb
mov
pop
adc
push
lcall
xor
xchg
cs
fdivl
rolb
cmpsb
jns
cld
jge
mov
mov
lret
inc
shrb
imul
jmp
cmp
and
add
or
daa
inc
cmpb
sub
insl
test
int
call
mov
sbb
push
cmp
jbe
jae
or
pop
jno
js
push
and
sbb
addb
push
and
dec
dec
xor
test
sarb
sti
mov
insl
outsl
or
pop
xor
jge
lods
popf
aas
xor
and
lods
in
fld
pop
scas
mov
mov
scas
in
xor
xchg
repnz
and
fs
xchg
notl
aad
mov
je
icebp
pusha
idivb
and
or
mov
dec
in
jne
pop
adc
jb
adcl
push
cmc
push
add
xchg
lret
lock
in
inc
push
xchg
lea
or
fnstsw
adc
inc
push
loopne
icebp
inc
or
cmp
in
and
jno
lods
cmc
lock
push
pusha
in
jecxz
add
js
inc
adc
imulb
pop
lods
mov
lcall
fbld
fsts
inc
lock
push
sti
out
shll
int3
fwait
xlat
xor
push
out
sub
inc
test
call
daa
mov
sbb
sahf
roll
xor
filds
aam
outsl
mov
sub
push
cld
lods
insb
mov
and
ljmp
and
loope
mov
xchg
xlat
or
popa
dec
mov
lds
lcall
inc
cmpsl
cmp
in
fcompl
mov
std
std
or
pop
bswap
mov
xchg
lock
xlat
push
xchg
jl
sar
faddl
mov
and
sarb
sub
and
pop
shr
popa
sub
lea
dec
jb
xchg
addr16
jmp
daa
call
dec
sbb
scas
or
stc
push
addr16
and
dec
mov
rcll
ss
sahf
movsb
test
jns
add
xchg
dec
pop
dec
out
fwait
lods
es
mov
cld
ljmp
sahf
xchg
jns
inc
clc
imul
mov
lods
or
xchg
mov
and
mov
fisttpl
jnp
push
adc
aaa
orb
mov
add
adc
add
arpl
dec
cltd
mov
cmp
lods
mov
mov
and
mov
daa
stos
add
push
xor
mov
adc
adc
push
cmp
out
cltd
popa
xor
mov
xor
insb
sub
mov
sbb
std
cmp
jg
inc
ss
scas
mov
loope
jbe
popa
xlat
pop
xchg
popf
pop
mov
xlat
das
rcrb
cmp
imul
xchg
xlat
aad
out
das
loopne
xor
jns
xchg
pop
outsb
xchg
mov
mov
lret
mov
xchg
sti
outsb
cwtl
jl
dec
jg
dec
out
mov
cmp
and
jbe
mov
andl
repnz
xor
fstps
inc
ds
push
and
add
mov
ja
and
pop
fbstp
mov
pushf
inc
out
popf
push
insl
leave
sarl
cmp
aam
movsl
mov
icebp
js
popa
stos
lds
orl
loopne
jecxz
aaa
xor
cmpsl
mov
xchg
dec
stos
ds
sub
outsl
mov
mov
rcll
sbb
aaa
sahf
xor
jg
and
sbb
adc
adc
or
idivb
out
add
mov
sub
jae
cmp
add
leave
pusha
movl
sarb
in
test
add
mov
int3
mov
mov
add
ficoms
cmp
cmp
movsl
frstor
test
push
invd
rcrb
sbb
js
xchg
push
arpl
xor
loope
cmp
push
loopne
vpsllw
mov
popf
or
jae
leave
inc
pop
ror
mov
mov
add
inc
xchg
mov
fistpll
mov
jmp
sub
inc
push
add
mov
mov
cmpsb
sub
jno
sbb
adc
scas
mov
pushf
and
adc
dec
inc
cmpsb
push
jmp
test
and
or
pop
inc
movsl
dec
jae
pop
jo
outsl
mov
loope
or
int
mov
int3
cwtl
sbb
fnstenv
sub
int
add
rolb
pop
mov
mov
and
mov
es
ds
pop
dec
jnp
mov
insl
cld
jbe
mov
xor
sub
cmpsl
push
pop
or
dec
sub
xor
stos
out
jb
jo
cmpsl
notb
sbb
lods
stos
pop
roll
inc
jp
or
rorb
outsl
add
or
repz
aad
lcall
ret
in
mov
jmp
test
inc
dec
cmp
jl
sub
push
out
sbb
jle
neg
insb
and
les
js
rcr
add
add
clc
xlat
test
in
mov
push
and
cli
mov
ret
dec
ret
icebp
adc
pop
jecxz
mov
jns
dec
mov
scas
dec
mov
inc
sub
pop
repnz
xchg
push
call
repnz
push
stos
pop
jecxz
fistl
xchg
jp
pop
add
xor
fisttpll
push
aas
add
mov
je
cmp
test
pop
cmp
adc
cmp
out
pop
dec
or
cwtl
cmp
mov
cmp
mov
inc
sbb
lret
cmp
jbe
and
dec
test
xorb
mov
add
xchg
adc
mov
aas
das
lods
inc
mov
ja
cwtl
out
jmp
loop
shrl
nop
in
add
and
jp
stc
inc
imul
mov
ss
lahf
mov
dec
call
das
sbbb
roll
iret
enter
xor
push
cmp
jmp
dec
loop
mov
push
fisubrs
in
out
sub
mov
jmp
mov
movsl
cmp
iret
pop
sub
sti
ss
out
mov
sub
xor
jns
xor
push
jns
test
in
mov
out
sbb
mov
sub
adc
test
cmc
mov
test
xchg
and
inc
adc
xor
movsl
in
cmc
test
xchg
aad
movsl
cmc
mov
test
xchg
and
inc
adc
xor
movsl
in
mov
in
cmc
sbb
and
inc
adc
xor
movsl
in
cmc
test
xchg
aam
movsl
cmc
mov
add
xor
and
lods
std
lret
stos
ljmp
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
inc
jbe
into
scas
jmp
add
or
add
add
add
or
mov
pop
add
jne
mov
add
add
add
add
mov
mov
or
cmp
mov
jge
cmp
sahf
add
xor
adc
and
sahf
add
add
dec
add
add
mov
and
sahf
add
mov
outsl
add
sahf
add
add
sub
mov
add
outsl
add
add
add
mov
push
add
add
dec
add
outsb
add
add
add
add
add
add
add
add
add
add
add
inc
add
and
rolb
add
add
add
add
add
add
cmp
sti
add
adc
sbb
adc
pop
add
add
addl
sub
inc
add
add
add
add
add
addl
dec
add
add
pop
add
add
add
add
in
dec
add
bound
mov
push
add
add
add
add
add
add
in
mov
mov
add
add
add
add
add
add
add
cltd
add
add
add
add
add
sub
or
mov
pop
add
add
add
add
add
add
add
sub
popa
add
mov
xchg
add
and
add
pop
add
add
add
add
inc
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
mov
jne
sbb
cmp
sub
pop
add
add
add
add
add
je
outsb
add
add
add
and
add
adc
push
add
pop
add
add
add
js
scas
add
add
mov
add
add
add
js
pop
add
add
add
add
lcall
add
add
add
add
bound
push
add
add
add
add
cmp
aam
inc
add
add
add
add
add
add
add
add
add
adc
fiaddl
dec
add
and
add
add
add
add
cmp
sub
or
sahf
add
add
sub
dec
add
or
outsl
add
add
xchg
add
add
add
add
add
out
dec
add
add
add
sahf
add
add
pop
add
add
push
add
add
sti
add
add
xor
add
add
aad
dec
add
js
inc
add
add
add
add
xor
add
addl
xchg
add
mov
add
add
dec
add
add
add
dec
add
mov
push
mov
lcall
add
add
add
add
loope
mov
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
mov
xchg
repnz
rcrb
and
divl
or
push
and
inc
push
inc
jl
jno
adc
push
adc
nop
jnp
cmp
xchg
in
xchg
lds
call
jp
and
leave
outsb
xchg
inc
loopne
mov
cmp
mov
and
push
das
xchg
jge
dec
push
mov
dec
call
sbb
add
push
fdivs
push
cmpsl
mov
call
jmp
lds
push
mov
sbb
in
fdivr
sbb
sub
cmp
fwait
jmp
fistl
loopne
jb
push
or
or
ds
mov
fs
loope
inc
push
push
jno
pop
cmp
sti
adc
scas
sarb
push
lcall
gs
cmp
inc
xchg
sbb
dec
and
scas
mov
inc
cmp
roll
cmp
dec
push
les
mov
and
sub
add
addr16
dec
aad
jp
daa
ret
andl
inc
fisubs
push
fnstenv
roll
push
xor
push
add
fldenv
sarl
inc
lock
push
arpl
mov
icebp
shl
mov
loopne
lahf
push
pop
inc
shll
cld
adc
cmp
dec
outsb
iret
das
enter
mov
test
ss
or
mov
jb
pop
ss
cmpsb
mov
lds
outsl
fisttpl
imul
in
pop
cmp
mov
inc
xchg
dec
icebp
jp
cli
cwtl
pop
mov
dec
mov
roll
or
add
test
popf
dec
pop
push
dec
ret
nop
test
add
pusha
mov
sub
pop
jne
xor
pop
jns
fsubs
push
fsubr
xor
mov
scas
dec
cmpsb
mov
cmp
sete
lods
es
jno
lods
movsb
xor
mov
dec
mov
std
pop
gs
sub
or
popf
in
outsb
cli
jg
add
or
cli
push
xorl
inc
mov
loopne
ss
xchg
mov
pop
push
pusha
xchg
imul
sbb
fwait
jg
mov
movsb
push
insb
cs
test
push
jp
es
dec
sub
xlat
fmulp
xor
inc
sbb
push
ror
jmp
js
out
out
lret
call
push
cmc
mov
sbb
adc
inc
loop
xor
sbb
lds
insl
nop
lods
pop
add
adcb
or
lock
outsb
and
adc
hlt
les
sbb
call
out
dec
out
sub
inc
data16
cmpsl
andl
call
jbe
lds
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
