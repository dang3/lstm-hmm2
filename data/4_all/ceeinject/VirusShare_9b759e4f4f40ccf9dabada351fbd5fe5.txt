call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
movsl
lahf
xchg
scas
test
mov
mov
pop
adc
dec
ficoml
inc
jg
movsl
lahf
xchg
scas
test
aad
jg
das
add
pop
push
sub
movsl
lahf
xchg
scas
test
aad
cmpsl
and
aas
sbb
sbb
movsl
shl
imul
mov
in
pop
xor
call
fnstsw
mov
fsubs
mov
pusha
leave
or
dec
popa
and
jmp
or
cwtl
xorb
aas
mov
lea
or
push
test
sub
xor
out
outsl
ret
in
lahf
xor
movsb
sbb
arpl
cmc
into
cmc
fildll
pusha
lods
add
shlb
outsl
mov
inc
repnz
outsl
shll
sub
lret
les
rorb
mov
push
repnz
sbb
inc
or
lcall
in
aas
inc
ds
pop
fs
push
jnp
jle
movsl
lahf
xchg
scas
test
aad
pop
adc
dec
gs
push
outsl
inc
push
repz
lahf
lock
loopne
cltd
mov
test
jbe
imul
insl
adc
mov
xlat
popf
lds
mov
push
ja
push
dec
inc
push
adc
xor
or
fadd
ror
movl
xor
das
add
pop
push
outsl
inc
jg
movsl
lahf
xchg
scas
test
aad
pop
adc
dec
gs
push
outsl
inc
jg
popl
cs
dec
arpl
cmp
inc
xchg
aam
xchg
sbb
outsb
sub
rcll
arpl
push
imull
shl
int
and
lods
add
daa
mov
jge
inc
sub
jb
cmp
iret
shlb
dec
jno
cmp
test
mov
push
stos
or
icebp
hlt
push
fildl
vunpcklps
rcl
into
sub
loop
aad
mov
pop
sub
fidivrs
cmp
test
push
fmull
sbb
sarb
jecxz
sbb
sarb
cmovne
jge
xor
rcrb
imul
adc
cmp
push
aam
cli
mov
dec
aas
int
out
xor
jns
shrl
or
repz
jmp
scas
insb
ljmp
pop
pop
in
pop
or
jns
shrb
pop
cmp
xorb
les
add
mov
and
lds
mov
mov
leave
lods
loopne
insl
sub
xchg
mov
loopne
popa
or
mov
push
call
jge
test
cmpsl
subb
xor
push
fnsetpm(287
idiv
push
fstl
push
fdivs
aaa
test
aaa
sub
jb
mov
divl
loope
imul
arpl
adc
sbb
mov
mov
aas
dec
add
test
pop
push
bound
push
push
lds
pop
dec
or
dec
inc
dec
and
dec
inc
mov
or
arpl
les
lcall
je
mov
in
dec
xchg
insl
subb
test
jb
and
jb
pop
lret
das
jmp
sub
mov
dec
outsl
stos
xor
mov
mov
test
jmp
mov
jge
imul
js
mov
push
adc
cmc
inc
mov
loope
sarl
mov
out
sbb
xorb
mov
jnp
jmp
cmp
test
popf
fcomps
pop
aad
test
adc
push
gs
cmpsl
ja
dec
xor
out
pusha
cltd
xor
or
test
dec
fisttps
push
sub
or
out
arpl
dec
push
movsb
jns
loope
jp
ljmp
aad
cmc
pop
hlt
mov
in
notb
aaa
or
loop
mov
testb
add
roll
push
xchg
gs
adc
dec
das
fcoms
ljmp
pop
pop
sub
xchg
sub
sahf
and
or
ret
mov
fildl
xor
js
push
into
jno
test
mov
pop
pop
sahf
repz
nop
sbb
repnz
push
sbb
in
out
mov
pop
fwait
cmp
ret
pushl
xchg
add
cli
sahf
xchg
push
test
cmp
xchg
push
push
xchg
das
xor
xchg
or
cltd
mov
xchg
pop
push
out
sbb
pop
stos
in
popa
xlat
push
mov
rorl
and
mov
and
cmp
sub
arpl
nop
imul
mov
mov
or
push
out
sahf
ja
ds
orl
and
push
cmpsl
mov
sub
mov
ficomps
mov
insl
cltd
leave
shl
movsw
imul
addr16
cmp
jno
insb
sbb
sahf
lret
stos
jnp
pusha
mov
js
xlat
and
xor
xorl
loope
fisttps
mov
pop
inc
and
and
xchg
xchg
sub
inc
hlt
in
sub
ss
pop
mov
pop
test
inc
push
xchg
cmpsb
xchg
push
and
mov
mov
or
push
xor
xchg
ja
arpl
rcrb
in
fldl
add
sub
roll
orl
into
sbb
insl
pop
and
repz
fucom
mov
test
mov
add
sbb
pop
xchg
ljmp
movl
arpl
inc
xor
jns
jo
push
dec
xchg
jp
push
hlt
out
xchg
test
punpckhbw
cwtl
icebp
lret
mov
mov
push
jo
dec
cmpsl
ret
jge
mov
jo
test
shl
ror
xor
cmc
mov
pop
mov
jp
add
jne
jp
repz
mov
push
mov
cmp
ljmp
call
adc
push
iret
frstor
pushl
leave
sbb
in
lods
or
jne
xchg
out
sub
xchg
or
mov
js
adc
or
adc
sbb
lds
mov
lock
sub
in
or
xchg
fisubl
sub
loope
xor
fs
adc
test
test
dec
rcrb
ret
bound
pop
and
movsl
pop
les
mov
sub
mov
int3
xor
mov
lock
add
adc
jmp
push
pop
inc
pop
fidivl
cld
mov
add
int3
mov
dec
sbb
rcrb
push
lods
push
mov
sbb
cltd
dec
or
inc
repnz
pop
xlat
enter
mov
dec
pop
std
mov
nop
mov
adc
fwait
outsb
movsl
xchg
pop
inc
sarb
stc
adc
arpl
jmp
or
mov
xchg
rcr
mov
mov
cmp
push
sbb
push
sub
inc
cs
sbb
lret
jl
push
jl
or
insb
jp
mov
mov
xchg
sahf
fdivs
mov
mov
cmp
scas
cmpsb
flds
xor
xchg
mov
inc
ret
pop
outsb
ds
pop
add
insb
xchg
mov
je
or
test
shll
addr16
ret
jl
dec
int
cmp
dec
daa
mov
xchg
dec
lea
popa
sub
adc
imul
addr16
mov
mov
mov
ficompl
lcall
inc
sbb
push
xorl
mov
mov
addl
jecxz
adc
xchg
test
dec
jne
sub
sbb
int
push
add
pop
jne
mov
cmc
int
out
jae
sarb
pop
sarl
mov
mov
or
rcll
mov
adc
push
inc
mov
sbb
jo
jo
outsl
rorb
sub
fbstp
sbb
pushf
xchg
push
add
dec
mov
out
xor
rclb
jo
jnp
lahf
cmp
sbb
add
stc
shrb
test
ja
pop
sub
jp
xor
out
sub
aam
jne
sti
xchg
addb
fmulp
inc
push
cli
shrb
cmp
lods
cli
adc
fcoml
push
aas
loopne
vmread
cltd
jecxz
imul
bound
mov
push
pop
es
es
test
mov
sbb
rcrb
das
mov
pusha
leave
xchg
fstl
jbe
cld
cs
and
imul
inc
sbb
jecxz
cmp
sub
mov
sub
int3
jle
and
je
lock
dec
outsb
adc
or
shrl
mov
sub
fimull
mov
mov
pop
mov
loopne
jmp
imul
incb
femms
mov
mov
fistpll
pop
aas
mov
mov
cmp
sub
add
mov
lock
xchg
xchg
or
mov
add
test
mov
sbb
mov
test
or
fisttps
sbb
nop
fldcw
sub
ja
jb
stos
pusha
adc
in
xor
aaa
jno
dec
pop
adc
fs
sti
ljmp
mov
mov
cmc
sub
sub
pop
sub
pop
push
or
adc
push
mov
mov
out
lret
fldcw
clc
ret
shrb
sbb
pop
dec
mov
push
push
cmp
pop
repz
push
dec
nop
adc
cs
scas
cmp
sbb
fstps
fwait
cltd
in
jecxz
jecxz
popa
ficompl
add
outsb
popf
leave
pop
pop
xor
cli
es
clc
cmp
adc
hlt
in
xchg
rcrb
pusha
or
repnz
jp
lret
add
mov
outsl
and
or
jg
mov
cld
scas
rolb
repz
sbb
mov
sbbl
rcl
ficoml
fdivr
lock
jle
add
dec
adc
std
stos
mov
pop
loop
adc
aaa
jnp
jecxz
mov
xchg
test
ljmp
mov
xor
test
xor
stc
mov
movb
js
dec
cmp
pop
add
sahf
cmpl
jo
mov
fistps
mov
fldt
push
cvtps2pi
push
std
adc
aam
movsb
and
cwtl
dec
lret
test
mov
inc
jg
and
shrl
push
mov
das
sub
imul
xchg
scas
dec
fadds
gs
repnz
pop
rcl
aam
and
sbb
adc
jb
adc
jnp
ret
pop
outsl
or
mov
fmulp
out
xlat
ljmp
sahf
shl
cmp
mov
pop
push
mov
fcoml
cmp
mov
cmp
fldt
pop
das
mov
ja
cmpsb
jle
add
and
xchg
fildll
sbb
sbb
mov
mov
aas
loopne
mov
and
xchg
inc
aad
pop
inc
pop
cmpsb
adc
arpl
loope
ljmp
pop
jge
ret
pop
mov
shlb
clc
testl
push
push
mov
mov
mov
outsl
or
scas
out
or
inc
sub
js
sbb
neg
scas
xchg
cmpsl
lret
inc
cmp
clc
mov
ja
mov
push
dec
jno
popf
test
adc
jae
mov
popa
ret
push
mov
sub
xchg
movsl
out
je
rcr
add
jns
ljmp
cmp
cmpsl
jo
dec
pop
mov
xchg
and
sbb
xchg
scas
daa
cmp
pop
xor
jge
mov
aas
adc
in
mov
imul
orb
lea
push
cmp
das
jge
iret
mov
pop
or
ds
ret
enter
or
into
pop
in
pop
xor
pop
dec
inc
and
test
push
inc
lods
xchg
int
mov
loope
dec
mov
aaa
imul
adc
push
sti
mov
mov
movsb
mov
sbb
xor
hlt
pop
mov
inc
jae
in
pop
add
push
and
pop
push
inc
das
jmp
aad
sub
movsl
sub
fcomi
jecxz
out
jmp
leave
mov
fistpll
dec
xor
adc
out
pop
out
mov
pop
fadds
mov
insl
daa
xchg
cmp
test
adc
mov
insl
inc
ret
insl
push
pop
cmp
fiaddl
sub
or
cwtl
lods
push
pop
add
and
sub
hlt
lcall
push
add
and
jl
xor
sahf
insl
test
cmp
scas
ret
xchg
xchg
dec
jle
cmp
lock
mov
or
pop
iret
mov
out
xor
sbb
jecxz
sbb
jg
cmp
push
fdivl
stos
and
loop
jl
cmpl
cwtl
jo
jle
std
pop
ret
mov
mov
mov
xor
test
dec
int3
bound
adc
test
dec
jge
inc
cld
ficompl
adc
popf
mov
pop
pop
mov
repnz
negb
push
insl
sub
in
fistl
xor
fndisi(8087
mov
jge
sub
es
sahf
test
fstl
stos
loope
xchg
mov
ret
fisubrs
cmp
cld
cmp
push
test
push
hlt
insb
fiaddl
sub
add
adc
aaa
in
leave
popf
inc
hlt
sub
jnp
mov
cli
adc
add
in
adc
mov
sub
jecxz
mov
xlat
test
fbld
pop
cld
pop
push
sub
adc
mov
push
mov
cmp
jns
and
fcoms
sbb
jno
leave
push
xchg
notl
dec
mov
adc
xor
into
jns
roll
insl
bnd
mov
iret
in
aaa
inc
mov
sbb
inc
mov
cmp
mov
stc
sbb
and
push
mov
cmc
cmp
lds
push
cmp
clc
cld
loopne
aaa
jl
sahf
mov
cli
in
add
xlat
hlt
xchg
ss
xchg
stos
xor
mov
cld
add
or
mov
cmpsl
iret
std
mov
jb
and
out
leave
fcmovne
cld
bound
jmp
mov
xor
std
sub
xor
or
sub
js
sahf
mov
outsl
inc
dec
sbb
pop
pop
lret
in
mov
pop
stos
add
out
mov
jmp
dec
mov
xchg
add
and
shl
jmp
cmpsb
pop
xchg
push
out
cltd
push
cli
mov
pop
sub
mov
push
push
cmp
lea
in
push
imul
cli
xchg
mov
mov
pop
xchg
mov
mov
call
sahf
push
or
sahf
test
sti
inc
cld
shlb
cmp
pop
add
inc
and
adc
mov
xor
sbb
mov
xor
outsb
addr16
add
dec
adc
js
inc
in
stos
scas
rorl
cmp
lods
xchg
mov
cmpsl
or
and
in
sbb
jle
push
or
push
mov
lock
mov
mov
in
or
add
fstps
insl
push
leave
movl
push
mov
xor
add
sub
sbb
ds
push
sbb
push
push
je
sbb
out
scas
leave
add
or
insl
inc
pop
inc
add
add
lods
in
cmp
shrb
sbb
jl
jbe
test
aas
lock
mov
pop
fcoml
aas
xchg
pop
call
cmp
cmp
pop
andb
imul
movsb
adc
sbb
jl
and
enter
fldcw
jl
pop
and
cli
in
fwait
push
arpl
sbb
xor
outsl
fs
out
inc
mov
sub
addr16
xor
cmp
je
rcrl
cmp
scas
leave
xlat
out
repnz
fistl
scas
cmpb
movsl
in
out
in
cld
repnz
out
jne
pop
fcmove
adc
mov
pusha
std
movsbl
xchg
pop
nopl
cmp
or
iret
inc
lret
insl
sti
adc
cmpsb
sar
cmpsb
jg
jne
xchg
ds
cmpsb
lret
dec
test
and
jl
rol
sbb
ret
pop
test
dec
imul
push
mov
fisubrs
push
repz
aam
sbb
stos
mov
jp
jle,pt
aad
stc
jb
into
mov
lods
and
test
rorb
and
cmc
aas
loopne
lods
movsb
push
mov
push
nop
nop
mov
jne
sbb
pop
jle
jg
das
pop
inc
mov
sar
sub
push
jae
add
xchg
xor
add
test
cld
data16
add
push
mov
sub
rol
lret
sub
sub
ss
or
ja
cwtl
std
aas
jl
inc
movsl
dec
lock
loope
xchg
out
lods
insl
xchg
loop
mov
fnsave
jne
fldt
add
or
inc
shll
mov
mov
pop
insb
sub
inc
imull
lods
or
repz
js
je
xor
xor
int
sub
test
inc
jns
imull
mov
push
inc
in
dec
loopne
sbb
inc
fs
adc
cld
in
xchg
es
sbb
pop
xchg
xor
push
fadds
scas
out
shll
cli
cmpl
dec
mov
cmp
lret
inc
lds
icebp
pushf
xchg
push
xchg
cltd
imul
shlb
insl
test
and
fimuls
mov
dec
pop
pushf
enter
rolb
ds
adc
xlat
test
cli
pusha
fimuls
js
xchg
sahf
mov
dec
test
fcompl
cmp
inc
jmp
pushf
pop
adc
in
test
mov
xor
cmpsl
loopne
call
adc
adc
jle
pop
inc
sbb
leave
or
mov
movsl
iret
sub
mov
mov
xor
rolb
push
shl
adc
pop
push
or
sbb
ljmp
es
sti
pushf
jp
inc
mov
cs
adcl
rcrl
clc
popa
loopne
xlat
call
add
stos
push
or
mov
addr16
cmc
shll
sub
mov
mov
pop
popf
adc
xchg
pop
in
cli
fwait
ret
stos
pusha
aaa
repz
adc
cmc
or
add
and
daa
dec
xchg
out
xlat
call
mov
sbb
xor
push
inc
movsl
fadds
jp
shl
scas
into
outsl
sub
push
pop
scas
movsb
icebp
loope
out
scas
dec
adc
xchg
cmc
call
rcll
pop
leave
out
stc
sub
pop
scas
jg
daa
mov
pop
rcrl
bound
dec
dec
pop
sub
ds
lahf
and
sbb
add
adcb
jne
fdecstp
test
pop
xchg
ret
or
pop
mov
jl
mov
inc
repz
les
push
pop
scas
cmp
outsl
or
sub
sub
ss
mov
out
pop
cmpsb
pushf
es
push
mov
dec
shrl
mov
sub
jne
bound
insl
mov
fistl
loope
and
cmp
into
sub
add
mov
test
inc
pop
xchg
jno
mov
mov
jae
inc
mov
push
mov
inc
into
and
cltd
ds
dec
add
xor
and
sbb
and
inc
into
cmp
sti
push
addb
bound
mov
addr16
inc
inc
push
mov
mov
lea
shrl
pop
lods
clc
pusha
paddq
adc
lret
push
mov
add
enter
fsubs
xor
pop
loopne
sbb
jo
imul
aas
mov
outsb
mov
lods
jle
push
push
inc
mov
data16
out
pushl
lods
daa
insl
mov
pop
xchg
and
ja
sub
adc
shll
mov
outsl
fsubp
xchg
jmp
cmp
cmp
ret
add
mov
mov
pop
stc
or
xchg
push
mov
das
scas
out
std
addr16
test
daa
pusha
bound
lods
jo
sub
mov
inc
lods
ljmp
mov
push
push
inc
cmpsb
inc
pusha
pop
cmp
mov
mov
dec
shlb
jb
leave
and
pop
outsb
adc
fs
imul
and
mov
idiv
sub
lods
inc
test
cld
or
fsubs
push
aam
mov
sub
mov
nop
orb
popa
dec
mov
movsb
daa
push
aad
push
iret
stc
lret
dec
dec
addr16
mov
sbb
jmp
in
outsl
jmp
and
shll
push
mov
or
and
xchg
out
and
or
mov
in
pop
out
lds
cmp
mov
sbbb
push
out
push
pop
xchg
pop
sub
adc
lods
xchg
mov
adc
inc
adc
add
mov
out
push
dec
js
shrl
dec
jmp
pop
outsb
mov
cmpsb
mov
inc
xor
hlt
dec
loope
push
les
mov
inc
jl
lcall
mov
cmpsl
xchg
out
loope
xor
xchg
jo
pusha
mov
jge
jle
lds
xchg
rdtsc
test
and
add
fstps
fwait
inc
dec
pop
sub
out
and
frstor
std
sbb
and
stos
mov
loop
fldcw
cltd
test
repnz
mov
sub
add
xchg
stos
out
pop
icebp
mov
xor
push
adc
push
cmc
push
test
adc
adc
and
fnsave
inc
xchg
xchg
mov
les
or
popf
jmp
mov
push
ss
sbb
pop
push
sbb
adc
adc
into
loope
adc
push
es
loope
add
sbb
popf
mov
mov
daa
testb
sub
cmp
cmp
pop
bound
shlb
movsl
sub
fisttpl
es
mov
inc
xor
fcomps
loope
incb
mov
fstl
push
fisubrs
dec
push
cmpsb
int
push
lods
fimull
js
mov
mov
add
mov
lahf
inc
call
repnz
sub
hlt
bound
in
inc
iret
or
ror
clc
mov
daa
dec
daa
dec
lahf
mov
test
aad
pop
adc
dec
gs
push
outsl
inc
jg
movsl
lahf
xchg
scas
test
aad
pop
adc
dec
gs
push
outsl
inc
jg
movsl
pop
xchg
das
test
aad
and
aas
jne
gs
push
outsl
inc
jg
movsl
lahf
xchg
scas
test
aad
mov
das
add
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sub
inc
push
je
mov
mov
mov
test
xchg
or
sub
dec
and
xor
add
insb
mov
cltd
hlt
test
enter
test
xchg
or
sub
dec
and
xor
add
adc
in
xlat
fnstenv
stos
jecxz
ljmp
sub
push
inc
add
xor
pop
mov
mov
loope
movsb
add
mov
cld
sbb
rorl
pop
mov
or
push
xor
roll
sahf
movsb
fnstcw
test
jns
jo,pn
sbb
mov
mov
jns
popf
cmp
enter
push
stc
sub
and
push
ljmp
xor
jns
adc
dec
inc
inc
xor
movsb
mov
pop
adc
mov
jns
xchg
outsb
repnz
sbb
rcrb
test
push
loope
stc
adc
bound
imul
cmp
shrl
sti
or
inc
cmp
pop
xor
add
adc
in
hlt
test
movsb
fnstenv
pusha
jp
outsl
inc
jg
sub
ss
push
inc
std
inc
stc
popf
cld
cmc
fisubl
cwtl
rorl
insl
adc
js
sub
adc
insl
cmp
sti
scas
decb
ds
adc
sti
outsb
and
cmp
ss
xor
pop
xor
add
adc
in
hlt
test
movsb
fnstenv
sbb
cmp
pop
xor
add
adc
in
hlt
test
movsb
fnstenv
fs
mov
inc
xchg
cltd
push
stos
fstpt
mov
push
cmp
aam
loopne
call
mov
mov
sahf
stos
and
lods
sub
mov
or
sub
xchg
arpl
iret
lds
fistpll
adc
mov
mov
aam
xchg
dec
push
cs
lret
jge
out
in
ret
xor
mov
pop
cld
sub
ljmp
fistpl
mov
popf
push
xor
scas
add
add
add
fxch
shll
xchg
mov
sub
cltd
mov
outsb
adc
popf
dec
dec
push
lods
cmp
adc
daa
test
mov
clc
imul
sub
xor
cltd
cltd
std
shlb
inc
aaa
stc
add
enter
mov
or
mov
jle
scas
mov
jbe
test
pop
enter
lods
repnz
sub
out
fwait
jbe
dec
mov
pop
pop
mov
cld
sbb
shll
push
pop
push
dec
rcrb
mov
mov
xor
in
sub
mov
and
lahf
repnz
sbb
adc
or
ficomps
imul
and
lods
mov
jnp
loopne,pt
cli
adc
dec
je
adc
jmp
aam
xor
sub
outsl
ljmp
pop
xchg
imul
mov
inc
adc
xor
les
adc
pop
ss
stc
lods
xor
movsb
jbe
addl
faddp
leave
xchg
and
outsb
mov
clc
xchg
jp,pn
rorl
xorb
shll
test
aad
xchg
dec
mov
xchg
jnp
xor
repnz
or
lcall
pop
stc
mov
push
mov
fidivs
inc
cli
add
mov
dec
pop
xor
cmp
gs
arpl
movsb
shlb
xlat
popf
fbstp
xor
int3
in
movsl
hlt
mov
xor
jle,pt
call
cmp
cli
xchg
mov
stos
mov
das
pop
inc
movsl
ret
dec
add
push
aas
dec
cmp
fcoml
pop
das
outsl
orb
mov
and
xor
add
jg
xchg
jmp
add
pop
outsl
xlat
adc
incl
es
lret
rcll
imul
loope
cmp
fstl
dec
cmpl
pop
fstpl
lret
sbb
incl
push
mov
in
call
push
les
sti
fnstenv
dec
dec
adc
fwait
and
lahf
push
xor
add
mov
push
out
or
ds
pop
adc
xor
xor
jmp
sbb
push
jb
jecxz
mov
dec
cmp
sub
push
je
das
fisttps
lock
inc
aad
iret
and
mov
adc
fbld
sarl
clc
lock
cmp
push
lds
xchg
orl
cmc
ja
dec
mov
mov
cmp
sub
bound
repnz
test
adc
push
lcall
stos
int3
and
cmp
adc
push
les
jns
jae
fcmovne
daa
roll
push
stos
add
push
shrb
rcrl
mov
sbb
repnz
data16
jg
outsb
aam
inc
sub
icebp
mov
sub
mov
std
into
sub
stos
adc
adc
push
mov
mov
sub
insb
outsb
iret
test
jne
inc
aad
mov
mov
pop
adc
pop
add
mov
mov
push
test
inc
aaa
dec
shll
push
js
lock
popf
popa
loop
or
lcall
dec
movsb
cmp
cmc
push
mov
cmp
or
add
push
pop
inc
mov
cmp
mov
sbb
jecxz
mov
repz
dec
int3
lahf
je
addr16
adc
or
andb
les
push
or
or
sub
push
push
mov
jae
add
push
shl
sub
shrb
sub
add
cld
xor
cmp
and
xchg
arpl
cs
cwtl
clc
xchg
jb
out
xor
xor
mov
fwait
mov
add
lods
mov
pop
movsb
pop
les
mov
and
cwtl
pop
hlt
cmp
mov
sahf
or
and
lahf
stos
push
pop
mov
stos
imul
mov
xor
jle
outsb
movsl
ja
push
push
ja
stc
add
push
push
and
pop
cwtl
test
xchg
test
in
mov
scas
sbb
mov
jae
das
push
mov
jmp
clc
dec
mov
xchg
sbbl
dec
add
cmp
subl
fwait
dec
xor
jno
jge
adc
cmp
xlat
mov
pop
adc
outsl
mov
sbb
adc
fmull
sahf
dec
sbb
outsl
ret
dec
in
les
sbb
or
lret
outsb
lcall
cld
sahf
bound
adc
in
dec
mov
xchg
cmp
mov
inc
mov
mov
ds
or
dec
mov
sbb
pop
repz
push
cmp
push
fwait
cmc
cmp
fwait
inc
dec
push
dec
sub
dec
scas
pop
cmp
jmp
pusha
call
lahf
mov
dec
popf
rcl
iret
jg
xchg
std
mull
outsb
scas
or
outsl
stos
sbb
out
inc
je
lock
shlb
pop
sahf
int3
lcall
aaa
or
add
add
in
test
mov
push
iret
mov
stos
loop
xchg
mov
xor
xor
lahf
out
push
sub
cli
mov
sbb
sbb
fwait
arpl
ret
lds
adc
xor
aas
out
cmp
sbb
into
dec
sub
rorb
or
jnp
mov
cmp
push
stos
lret
scas
xchg
mov
out
mov
push
cmp
sbb
cs
push
lahf
test
push
popa
push
sbb
aaa
inc
sbbl
fmull
push
test
mov
push
push
xor
sti
inc
xor
sbb
push
jecxz
xor
or
sti
das
loop
lods
loope
sahf
or
ficoms
xbegin
push
lea
cltd
insl
fs
mov
stos
lods
mov
sbb
add
scas
and
jge
and
cmp
repz
movsl
or
jnp
mov
sar
push
ficoml
sbb
xchg
xchg
jmp
mov
imul
je
adc
ds
mov
or
sub
dec
push
shr
iret
cmp
fistl
pop
roll
xor
dec
cs
cmpb
mov
jg
stos
test
jecxz
icebp
pop
test
scas
cmp
push
adc
or
pop
pop
cmpsb
arpl
call
mull
adc
jns
arpl
adc
dec
add
stc
dec
ret
out
pop
enter
push
xchg
add
mov
pop
clc
cmpl
sbbb
shl
adc
mov
aaa
jae
cmc
frstor
fbld
gs
jp
jl
fldl
xor
add
inc
mov
in
sub
and
jecxz
mov
xchg
mov
xor
neg
imull
ljmp
push
xor
sub
rcll
mov
or
jae
and
movups
push
js
or
shlb
iret
iret
std
je
or
push
mov
mov
mov
push
out
fldl2t
fsubs
add
xchg
sub
cmp
push
push
and
add
or
pop
xlat
int
mov
pop
sub
jp
dec
ret
jbe
sub
int3
es
test
xchg
daa
push
jnp
cmp
mov
mov
adc
and
fsubl
jae
push
xchg
aaa
mov
xor
adc
stos
jecxz
xchg
jnp
fldcw
jecxz
adc
mov
mov
mov
lds
daa
jae
lret
adc
iret
push
add
xchg
push
fwait
jp
shrb
cmpsb
or
aam
ret
in
sbb
xchg
js
pushf
adc
loopne
dec
out
mov
insl
pop
movsb
pop
push
fsubrl
and
ret
mov
pop
aaa
adc
sahf
pop
inc
out
subl
mov
xchg
xor
mov
bound
ret
or
cmp
inc
repz
xlat
lcall
cwtl
leave
test
ret
push
xor
push
xor
inc
lds
ja
xor
ret
fnstsw
sbb
addr16
popa
mov
pop
mov
fwait
push
ss
imul
fisubrl
sbb
fisubs
jno
push
iret
dec
lods
mov
lock
ljmp
add
pop
lcall
cld
dec
cmpsl
mov
movl
out
fsubl
aaa
rcl
sub
mov
lock
inc
sbb
mov
ret
mov
cltd
xchg
rorb
scas
or
push
jle
inc
ror
jbe
clc
mov
add
xchg
hlt
popf
dec
cmp
out
fprem
mov
call
leave
add
popf
dec
sbb
xlat
sbb
inc
fwait
push
pop
daa
pusha
xlat
mov
push
mov
movsb
fistpll
mov
fwait
in
xchg
fstps
arpl
repz
stos
xchg
add
mov
stc
pop
lcall
lcall
stos
sub
loop
ja
adc
push
movsl
mov
lods
ja
dec
fsubrl
fwait
pop
add
imul
push
andl
aas
mov
in
leave
cmpsl
adc
jno
sbb
cmpsb
into
fdivr
pop
gs
es
hlt
jl
ljmp
mov
scas
scas
sub
movsb
call
mov
test
xchg
js
rclb
or
pop
add
add
or
test
imul
push
movsl
cmpb
fldcw
imul
lret
jo
jne
lock
sub
lock
push
repz
xchg
xor
repz
push
push
add
shlb
popa
aas
jmp
imul
jp
xchg
adc
rorl
adc
ja
cmp
jge
mov
outsl
push
push
std
ss
and
popf
and
cmc
jl
hlt
mov
icebp
push
pop
insl
movsl
sbb
lods
pop
das
cmc
xchg
in
inc
loope
push
or
jge
icebp
inc
xchg
sbb
js
scas
and
push
mov
sub
cmp
xor
or
mov
jge
pop
lea
mov
push
test
sti
jbe
push
adc
lret
or
mov
aam
pop
jns
sbb
dec
cmp
add
mov
dec
jne
cwtl
int3
dec
loop
mov
aaa
ja
bnd
mov
ljmp
aas
rcll
inc
insb
mov
subb
mov
mov
orl
sub
and
mov
pop
xchg
rolb
xor
jp
dec
ret
js
call
gs
shrl
adc
int
jne
adc
js
mov
push
roll
push
pop
or
sub
inc
int3
add
mov
out
pop
je
std
jne
data16
leave
int3
pusha
xchg
shrb
adc
movsb
dec
ret
sub
pusha
inc
push
jb
mov
fmull
jno
fdivrp
out
fstl
sbb
es
jmp
jbe
pop
shrb
leave
roll
mov
mov
adc
popf
test
xor
or
shrb
xchg
fwait
push
jb
call
mov
dec
dec
sub
and
push
inc
repnz
test
mov
jo
nopl
inc
xchg
data16
sbb
cmp
sub
jp
push
icebp
int3
dec
cli
and
out
fsub
stc
pop
mov
fsubrl
lods
popl
bt
insl
adc
mov
mov
and
and
cmp
and
jbe
pop
outsl
aas
lods
and
mov
push
ljmp
mov
add
jge
pushf
out
xchg
cs
gs
insb
jp
shr
mov
sub
cmc
into
add
stos
jns
outsb
xor
popf
orb
mov
in
dec
lcall
inc
arpl
push
outsb
mov
mov
pop
inc
inc
add
jne
fadds
pop
in
scas
and
imul
pop
jne
jne
jbe
or
fildl
push
ficoml
fsts
and
lds
dec
xchg
mov
xchg
enter
movsl
sub
pop
lahf
cwtl
mov
jb
cmc
cmpsb
ret
cmp
dec
sti
pop
push
insl
mov
xchg
pop
stos
data16
add
sbb
fistps
hlt
in
push
aaa
dec
xchg
xchg
in
iret
cmp
mov
inc
mov
xchg
outsl
sbb
in
jp
ja
into
inc
adc
insb
cmpsb
adc
test
rcl
adc
mov
mov
mov
aam
jbe
divb
cld
inc
lea
leave
shll
scas
fs
stc
xchg
add
cmp
or
test
push
mov
flds
stos
xor
inc
inc
mov
push
cld
push
or
xchg
lret
fisubs
xlat
leave
mov
sub
push
pop
into
cwtl
xchg
mov
jge
inc
les
adc
subl
sbb
cmpsb
push
fsubp
mov
call
dec
stos
or
jmp
in
and
xor
ret
adc
xchg
shl
dec
stc
imul
cmp
sarl
sub
adc
hlt
cli
movl
add
mov
cwtl
jno
inc
pop
test
xor
mov
mov
cli
movsb
xor
mov
stos
scas
cmp
test
pop
adc
jg
jp
sub
push
xor
push
sub
adc
jmp
or
pusha
cld
xchg
jo
xor
xor
and
mov
incb
add
or
addr16
mov
mov
push
sbb
aad
and
cmc
bound
or
push
push
push
jae
jb
mov
mov
inc
and
test
push
push
mov
repz
out
pushf
rcrb
cwtl
push
add
xor
aam
dec
aad
xchg
dec
mov
cwtl
fiadds
mull
clc
xor
imul
in
out
sub
pop
or
mov
ljmp
xor
pop
xchg
pop
popa
inc
push
push
sub
pushf
subl
out
lahf
lock
dec
add
jne
test
fimull
mov
popf
fsub
pop
out
rorb
andl
inc
insb
gs
mov
sti
sub
jmp
jecxz
xchg
mov
fs
or
addb
out
sbb
inc
mov
repz
mov
dec
outsb
add
add
xor
test
xchg
mov
stc
mov
push
mov
jge
subl
mov
pop
lods
sub
stc
subl
xchg
outsb
push
insl
addl
jl
and
adc
loop
cltd
scas
das
add
out
sub
ja
dec
inc
pop
lds
mov
or
cs
das
push
push
jg
roll
inc
mov
add
into
out
orl
push
aam
movsl
dec
fidivrl
adc
inc
and
das
sbb
cmp
inc
fdivrl
mov
jo
pop
test
sbb
imull
inc
shr
sbb
mov
xchg
push
xchg
add
inc
dec
xchg
loop
lret
insb
and
pop
ror
arpl
xor
add
jge
shrb
mov
sub
cmp
adc
add
repz
icebp
lods
jmp
mov
mov
pop
adc
jo
outsl
add
adc
into
sub
xor
repz
nop
sti
test
cli
mov
add
rolb
cmp
mov
aas
imul
adc
cltd
fcomi
test
mov
jg
cmpsb
xchg
cmp
mov
pusha
cltd
test
ret
je
in
call
andb
cmp
js
mov
loop
cmp
or
sarb
mov
dec
mov
cmpsl
or
mov
jmp
xchg
sbb
in
pop
push
rorl
ret
addr16
fmuls
pop
push
push
jmp
in
cwtl
push
xchg
das
mov
xor
fldcw
lds
in
mov
mov
fsubs
sub
push
movsb
stc
aaa
sbb
or
xor
shlb
pop
cld
fwait
sub
mov
xchg
pushf
cwtl
divl
add
push
dec
add
xlat
mov
ret
mov
std
stos
mov
and
push
jmp
aam
xchg
cltd
add
loop
mov
in
pop
and
mov
enter
jns
popa
sub
and
or
jnp
outsb
aas
popl
fwait
jo
dec
push
outsl
mov
jecxz
pushf
daa
sbb
enter
mov
xchg
adc
lret
shl
jg
xor
rorl
fcmovne
push
cmp
ljmp
lods
pushf
sbb
mov
aas
loope
push
push
test
std
inc
mov
inc
std
jno
mov
stc
popf
dec
lock
sub
lds
sub
mov
mov
cmp
inc
test
cmp
jp
mov
out
aaa
insl
xchg
fisubrs
push
sti
lds
mov
std
mov
dec
fsubp
and
aaa
je
rcll
mov
mov
xchg
imul
push
ret
outsl
or
int3
jecxz
fisttpl
mov
out
and
insb
out
push
into
or
push
mov
mov
sub
rcrl
iret
fisttpll
bound
lods
or
push
ss
push
dec
fwait
popa
mov
push
xchg
leave
scas
jge
clc
gs
dec
push
cwtl
ss
ljmp
in
lods
lret
jb
inc
sub
insb
dec
cmpsl
pop
cmp
mov
mov
adc
test
scas
add
loop
insl
mov
sbb
lret
and
icebp
addr16
lock
xchg
out
scas
xchg
push
mov
fwait
lret
in
scas
test
and
les
sbb
push
jge
or
inc
lock
fistpll
jle
sbb
pop
and
mov
in
pop
and
jnp,pt
push
daa
idivb
aaa
jl
daa
fistl
lea
pop
lret
fnstcw
mov
clc
fsubrs
jne
out
push
insl
stos
testl
mov
xchg
push
mov
inc
fs
lods
and
add
mov
inc
mov
ds
cltd
add
jnp
mov
arpl
mov
or
subb
pop
and
pop
add
fmul
adc
mov
addr16
pop
add
stos
push
shrb
sahf
sub
push
pushf
jno
fisubrl
cld
ret
jbe
rorl
xor
inc
xor
out
push
jae
test
mov
cld
pop
out
dec
rcll
dec
imul
or
or
jl
sub
jp
cmp
and
fcmovnb
testl
inc
mov
inc
and
sub
xchg
sti
ficomps
enter
mov
inc
cmp
mov
icebp
mov
inc
dec
lcall
cmp
sarb
mov
orb
frstor
inc
call
ret
iret
decb
add
fs
add
fsts
mov
fbstp
inc
or
push
inc
and
outsl
fldenv
jae
sti
xchg
arpl
fildl
pop
jg
xor
jb
in
sbb
stc
fldt
sub
jbe
mov
test
repnz
outsb
in
lret
in
xchg
pop
inc
xor
mov
nop
jnp
push
mov
adc
add
aas
pop
shll
adc
lcall
adc
or
loopne
xchg
mov
mov
mov
adc
nop
add
sbb
and
fdiv
aad
cwtl
add
pop
or
pop
fiaddl
into
push
pop
lods
lock
aam
jne
insb
cmpsl
pop
xchg
jbe
pop
add
in
jg
scas
xchg
lahf
cmp
mov
dec
push
pop
push
nop
and
aas
fistpll
ja
ja
movb
sub
scas
pop
xor
sbb
addr16
mov
pop
std
sub
push
jl
cmp
pop
push
divl
adc
bound
ret
dec
pop
adc
je
shl
mov
mov
jbe
jbe
es
fistpl
xor
pop
push
loopne
xchg
add
ds
loop
mov
aaa
or
call
nop
inc
ja
enter
push
inc
cmp
pop
xor
add
adc
in
hlt
test
movsb
fnstenv
sbb
cmp
pop
xor
add
adc
in
hlt
test
movsb
fnstenv
sbb
cmp
pop
xor
add
adc
in
hlt
test
movsb
fnstenv
sbb
cmp
pop
xor
add
adc
in
pop
add
mov
dec
adc
imul
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
lods
aaa
popf
pop
lea
loop
sahf
sbb
mov
mov
xchg
sub
js
dec
xlat
stos
daa
lods
aaa
lods
pop
lea
std
addr16
fldl
and
stos
sub
xchg
jge
insb
cmc
pop
dec
xlat
movsb
ds
test
xchg
pmulhuw
outsl
lds
dec
cmp
jns
push
test
subl
and
int
lods
inc
shll
jo
scas
adc
jge
cli
aam
loope
or
xchg
jl
cmp
mov
push
popf
inc
cmp
adc
pop
rorb
xlat
add
xchg
test
xor
dec
dec
mov
in
pop
iret
je
or
cmpsl
shlb
addb
test
mov
inc
fsubs
addr16
inc
inc
dec
sbb
fstpt
jb
cmp
clc
stc
arpl
dec
fnstsw
xor
jg
xlat
in
out
xchg
mov
pop
fsubrs
popf
inc
in
data16
iret
rcr
loop
or
mov
lds
jge
lods
daa
popf
push
lcall
inc
aam
and
xor
mov
jne
pop
fstl
daa
enter
jmp
push
fildll
mov
mov
andl
orb
cmp
lods
pop
clc
je
js
cmpl
xor
rcrb
js
sbb
dec
mov
clc
arpl
ja
inc
int
cmp
xchg
negl
dec
xlat
mov
pop
lea
std
addr16
ja
inc
int
cmp
xchg
negl
dec
xlat
mov
and
shr
shr
mov
dec
jecxz
cmp
rcll
xor
mov
add
lods
scas
jno
mov
sbb
cmp
add
sarb
mov
mov
aam
flds
jns
jb
mov
scas
in
test
ret
popf
jae
sub
mov
push
in
fst
in
sub
nop
sar
popf
jbe
and
aas
xchg
mov
sbb
adc
mov
jnp
mov
insb
xor
push
movsb
sub
sbb
jb
mov
lods
in
xor
adc
nop
nop
cmp
stc
aaa
xor
sbb
addr16
mov
outsb
repnz
sub
sbbl
dec
add
add
xor
add
ss
xchg
dec
dec
sbbl
bound
sbb
or
adc
test
and
mov
cltd
rolb
or
mov
push
mov
adc
dec
rorl
pop
dec
aad
push
mov
cltd
sbb
arpl
or
fldenv
sub
sbb
or
jmp
xchg
imul
out
pop
mov
in
mov
jbe
sub
icebp
sbb
inc
scas
xchg
or
inc
hlt
out
pop
xor
pop
shl
pop
imul
xorb
xor
in
ja
call
cld
xchg
adc
out
pop
jmp
jg
xor
loope
xor
mov
popf
jmp
es
xchg
push
repnz
arpl
and
adc
fwait
fwait
jae
pop
cltd
pop
mov
sti
jecxz
adc
mov
outsl
outsl
mov
out
pop
popl
xchg
test
xor
pop
sbb
pushf
les
adcb
push
out
sbb
sbb
add
lret
test
sbb
std
mov
testb
enter
inc
xor
pop
mov
adcb
sbb
into
sub
fwait
push
xchg
dec
dec
jge
inc
ljmp
lret
xor
jo
push
mov
ror
cmp
push
or
jmp
pop
lret
adc
push
jge
hlt
sub
push
inc
scas
dec
fmuls
stos
xor
rcll
xchg
mov
sbb
popf
sahf
mov
push
push
and
mov
addr16
mov
std
jae
insb
rcll
push
adcl
fcom
push
and
pop
jne
fbstp
push
adc
and
or
loopne
popa
or
sbb
mov
pop
imul
cmc
out
push
std
inc
ja
xchg
cmp
inc
jecxz
in
cmp
in
push
popf
cmp
loopne
cltd
push
push
movhps
push
add
js
sarb
xlat
das
das
nop
outsb
mov
xchg
clc
adc
inc
stc
int
aam
and
push
arpl
popf
addr16
lds
cmp
nop
push
pop
inc
mov
and
push
cmp
jbe
lock
ret
icebp
inc
scas
insb
push
mov
test
ror
push
rcrb
divb
popa
fcos
insb
test
imul
mov
leave
bnd
xchg
xor
jns
dec
mov
cmp
outsb
mov
xchg
ja
jp
movsb
ret
loopne
mov
mov
fs
jge
sahf
aad
xchg
mov
jp
mov
les
rorl
cmp
loop
aam
aad
inc
shlb
pop
push
jns
cmpsl
dec
daa
addr16
inc
out
je
inc
daa
or
fs
das
xchg
push
sub
js
and
adc
adc
cmp
add
loop
or
mov
out
push
ret
fisubl
push
out
push
xchg
imul
out
in
mov
dec
jle
jp
movsl
pop
gs
imul
outsb
mov
xchg
cli
jmp
in
jbe
outsb
lods
ja
bound
lahf
aam
mov
cmp
push
roll
popa
int3
orb
sbb
jo
dec
aad
loopne
sbb
mov
inc
cmp
fnsave
push
pop
cmp
cmp
push
in
mov
sub
sbb
inc
mov
shl
loope
jmp
sub
mov
test
mov
les
xor
and
cmp
lea
pop
and
aam
fldcw
mov
and
movsl
sahf
pop
sub
xchg
stos
outsl
rorl
sub
push
push
push
xor
in
xor
adc
push
pop
xchg
jns
aam
lret
out
leave
in
in
cmpsl
cmp
rorl
out
pop
ret
inc
lcall
dec
pop
jp
mov
fadd
inc
test
mov
pop
lods
popf
in
jns
pop
add
cli
sub
cli
clc
dec
or
mov
mov
mov
cld
dec
pop
lahf
idivb
sub
mov
out
insb
and
push
cmpsl
mov
fs
and
push
lea
add
ljmp
cmp
xchg
push
lods
aas
add
insb
lods
in
cs
cld
jbe
jne
call
xor
xor
out
inc
out
add
arpl
int
gs
xchg
mov
cli
cmc
jp
add
jbe
jmp
dec
ljmp
cmp
pop
call
sub
pop
lods
sub
add
sbb
or
aad
fcompl
movsb
jae
cmc
sub
loopne
test
mov
pop
lahf
das
push
test
pop
rcl
outsb
les
outsl
nop
fwait
es
outsl
push
mov
mov
push
lock
pop
lods
inc
sti
sub
mov
jae
sbb
bnd
pushf
sbb
int3
adc
fidivrl
popa
xor
jp
cmp
cmp
out
adc
dec
call
dec
adcl
cld
lods
out
es
jne
xor
jp
mov
jge
dec
mov
mov
daa
mov
mov
inc
incb
lods
or
scas
cmp
pop
mov
pop
test
loop
imul
add
xor
pop
pause
je
jecxz
mov
aad
jno
xchg
adc
lahf
jae
imull
xchg
sub
push
inc
outsb
scas
mov
mov
pushf
enter
into
ljmp
out
faddl
push
insb
sahf
sub
jae
les
xchg
inc
repnz
icebp
add
add
xchg
and
jnp
add
mov
ja
pop
in
insb
sub
lret
daa
lcall
fwait
fs
mov
fwait
jae
jmp
mov
xchg
xorb
push
pop
mov
inc
xchg
mov
mov
test
pop
sub
jp
test
out
pop
jl
adc
inc
mov
xor
cmp
push
test
lcall
cmpsl
rcl
add
imul
testb
out
add
aad
add
adc
xchg
jae
adc
je
mov
rcrl
mov
jns
lcall
add
mov
mov
clc
xor
outsb
xorl
mov
sahf
in
lods
push
repnz
shll
jno
cwtl
or
test
sbb
mov
xchg
pop
push
jecxz
rclb
push
out
or
mov
lods
mov
push
jns
out
cmc
andb
push
push
add
cmp
rcrb
dec
subb
movsb
mov
jmp
pop
jmp
push
push
insb
out
adc
mov
mov
test
fs
sub
insb
out
or
shlb
ret
push
call
mov
stos
pop
lea
cmp
or
jmp
clc
into
dec
div
inc
movsl
or
dec
add
orb
scas
xor
push
or
xchg
push
and
cwtl
iret
shll
pusha
mov
dec
mov
or
mov
add
stos
popa
scas
push
inc
mov
jle
sbb
xchg
fisttps
lods
sub
lds
jnp
or
imul
adc
mov
frstor
mov
sbb
xlat
inc
mov
lret
jno
push
ret
xchg
xchg
int3
mov
test
mov
rorl
mov
push
pop
les
out
int3
and
adc
cmp
inc
push
xchg
inc
and
jle
mov
in
dec
outsb
mov
mov
pop
lods
dec
mov
cld
mov
outsb
mov
xchg
mov
test
and
xlat
xchg
add
or
out
ret
push
mov
fwait
ds
loop
mov
pop
cmp
mov
enter
mov
out
add
mov
leave
sub
cmp
add
sbb
sti
pop
jnp
mov
dec
inc
mov
jle
adcb
pop
popf
out
hlt
sti
pop
adcl
iret
mov
int
ret
xor
addr16
cmpsb
push
mov
mov
mov
xor
or
xor
inc
jne
in
stos
mov
fcoml
jns
sahf
jne
je
movsl
mov
mov
lds
sub
rclb
xor
repz
out
dec
and
add
dec
sbb
sub
pop
hlt
bound
xchg
adc
adc
jb
loopne
leave
sub
dec
xchg
cld
xchg
pop
test
sub
pop
in
xor
adc
push
xor
mulb
ds
popf
sbb
cmp
mov
dec
rcrl
inc
or
mov
pop
cmp
push
mov
adcb
inc
daa
lds
pop
lods
or
rcr
cmc
inc
add
adc
mov
enter
jmp
fnstcw
dec
pusha
aad
jge
fsts
ret
scas
sbb
push
xlat
mov
mov
mov
insb
adc
mov
xchg
ret
cmp
xor
add
bound
hlt
push
sub
nop
dec
dec
xchg
cmp
lds
mov
popl
ds
push
test
aas
push
lahf
xor
pop
mov
sarb
int3
loopne
xorl
nop
jo
xlat
lret
cmc
out
leave
pop
fildll
cmc
rorl
je
push
lret
pusha
lahf
add
mov
test
dec
sub
and
sbb
xchg
dec
orb
lds
add
pop
pop
mov
ja
fisubl
test
or
inc
mov
decl
test
clc
jp
adc
jae
pushf
dec
pop
xor
pop
dec
jmp
inc
fdivrl
fistpll
repnz
and
xor
mov
rorb
or
and
cmp
mov
inc
jmp
mov
inc
push
enter
dec
push
popa
and
push
mov
pushf
xchg
lds
or
cltd
jae
dec
int3
xor
xchg
sub
xorl
mov
popl
shr
inc
call
inc
stc
js
xor
xchg
mov
pop
mov
call
pop
insb
iret
add
cwtl
xor
scas
inc
std
inc
mov
xchg
insl
call
mov
cltd
xor
cmp
int3
pop
jb
xor
xchg
push
test
dec
pop
jae
sbb
iret
cld
xabort
cwtl
mov
mov
int
into
call
in
xor
push
jge
cmp
test
flds
minps
jp
xor
xchg
shrb
scas
out
scas
push
xchg
clc
inc
ficomps
mov
adc
std
dec
negl
pop
mov
dec
mov
fstpt
lods
cmp
sub
adc
insb
ss
daa
dec
stc
test
les
push
sbb
fadd
sti
fisttpl
dec
inc
test
hlt
outsb
sbb
imul
je
insb
or
dec
pop
nop
out
pop
test
out
push
dec
adc
jl
sub
stc
cmp
lret
cmp
cmpsb
add
xchg
sub
cmp
bound
js
and
pop
mov
in
push
dec
pop
out
mov
xchg
pop
and
xchg
rcr
or
lcall
js
mov
add
imul
gs
sti
and
data16
das
inc
add
cmp
hlt
sarb
push
dec
pop
pop
pop
imulb
test
test
ja,pn
fnsave
jnp
in
inc
mov
and
jg
push
xchg
clc
dec
and
cmp
inc
sub
jno
in
into
and
lods
outsl
movsl
xchg
sbb
cmpb
or
sbb
out
jmp
push
mov
mov
add
push
or
orl
mov
jo
stc
arpl
leave
push
inc
into
add
mov
negl
in
repz
lds
mov
shrl
aad
sub
ja
or
inc
xorl
repnz
sbb
xchg
test
rcrl
or
ss
adcl
loopne
iret
in
mov
lea
lcall
int
pop
loopne
dec
fisttpl
mov
mov
sti
push
rol
scas
cmc
add
add
daa
and
sti
push
or
mov
dec
fcompl
in
add
pusha
sub
add
jbe
ss
repz
ret
jo
add
divb
cs
mov
test
sbb
jo
xor
scas
adc
mov
pusha
dec
cmp
outsl
sbb
sahf
popf
xchg
hlt
nop
adc
sub
aas
lcall
ret
lahf
lret
xor
loopne
pop
or
fsubrl
js
ds
aaa
mov
dec
scas
pusha
mov
test
ss
mov
cmpsl
negl
in
outsb
enter
xchg
cwtl
mov
pop
mov
jmp
fwait
mov
adc
dec
mov
xchg
mov
loope
out
mov
cld
mov
lds
xor
cmpsl
addr16
daa
cmpsb
push
mov
mov
or
pop
inc
and
xchg
xor
es
xchg
in
loop
cmp
and
repnz
lods
lods
mov
ds
jg
inc
dec
idiv
dec
lret
dec
mov
sub
pop
and
outsl
int3
jne
mov
add
cld
testl
lods
xor
cmp
sub
loope
fwait
or
enter
clc
lcall
aam
icebp
mov
push
stos
dec
adc
std
lods
negb
leave
push
push
in
push
lods
lods
push
loopne
mov
sub
aas
pop
and
repnz
adc
test
and
insl
push
or
mov
into
aad
ljmp
inc
jle
cmpsb
add
mov
pop
sbb
aam
xor
jle
mov
jp
sub
lea
mov
cmp
cmp
inc
lea
add
mov
xor
sbb
push
jmp
pusha
rorl
rcr
xchg
clc
mov
or
cmpsb
dec
cltd
pop
add
js
mov
scas
push
clc
popf
repnz
data16
adc
mov
mov
popf
and
out
aam
jnp
xchg
or
xchg
pop
jle
add
inc
add
ss
shlb
cmpsb
data16
push
or
pop
push
sub
repnz
jo
aam
dec
pushf
shlb
jle
aam
testb
xchg
or
call
stc
push
lret
adc
icebp
sub
jne
pop
arpl
mov
fisttpll
jno
xchg
mov
rolb
test
dec
pop
dec
push
jmp
cli
cmp
nop
push
mov
addb
and
lea
xchg
push
jl
dec
call
mov
and
cli
push
jne
pop
and
movsb
imul
mov
mov
aas
int3
pushf
or
rcrb
pop
out
or
scas
lods
mov
mov
fisubl
xlat
pop
pop
dec
sbb
mov
ds
roll
das
jae
rdtsc
push
hlt
and
jnp
sbb
jnp
pop
adc
dec
cmpsb
iret
into
fwait
lock
dec
test
rol
or
and
lods
lret
ss
fidivs
in
jecxz
xchg
and
inc
push
imul
fildl
fmuls
push
jl
cld
and
push
mov
adc
mov
sti
nop
sub
sub
xor
xor
adc
out
mov
mov
or
daa
push
leave
subb
pop
test
into
adc
mov
popa
mov
adc
js
push
test
dec
movsl
rorb
insb
lret
lahf
mov
out
lahf
lcall
adc
lcall
mov
mov
arpl
push
ror
pushf
stos
push
outsl
lea
das
mov
scas
lcall
das
pop
mov
add
ds
adc
test
pop
loope
mov
or
mov
int
add
xchg
sub
jmp
int3
mov
movsl
mov
mov
repz
push
aas
xchg
and
in
sbb
movsb
sub
sahf
sub
shl
pusha
xor
inc
icebp
sbb
and
or
pop
les
aas
imul
cmc
fimull
cmp
mov
into
adc
push
inc
cmp
ret
and
sub
int3
out
dec
leave
sbb
lahf
jns
cmpsl
push
xchg
and
jb
pop
dec
pop
jo
push
dec
jle
test
mov
fsts
adc
filds
add
jbe
add
pop
mov
out
int3
sub
je
push
outsb
push
leave
inc
xchg
jbe
stc
repnz
js
mov
lret
cs
pop
in
ret
repnz
rcll
jg
pusha
orl
out
jbe
aad
sbb
xchg
fistpl
jge
outsl
bound
cmp
cmpsl
call
aad
mov
dec
mov
fnstenv
mov
mov
or
aad
les
pop
sub
daa
movsl
out
test
pop
mov
mov
xchg
das
and
inc
aaa
ror
inc
xor
xor
jle
inc
jg
bound
mov
lcall
sbb
mov
out
hlt
mov
enter
out
ss
sub
add
pop
shlb
into
inc
dec
loope
jnp
aam
lret
pop
mov
pop
xchg
pop
sahf
or
pop
adc
or
adc
jb
rol
incb
sub
sbb
cwtl
icebp
test
out
sbb
test
and
lret
dec
shl
in
jecxz
popa
icebp
adc
gs
test
aad
stc
xlat
in
and
shll
jbe
test
sahf
mov
jecxz
out
jo
or
scas
test
out
and
stos
cmp
push
mov
cld
xor
std
out
push
mov
pushf
mov
std
and
or
lret
fmulp
cltd
mov
ret
fldz
adc
ret
scas
inc
and
imul
add
test
sbb
jbe
or
pop
mov
pop
in
mov
pop
xchg
iret
mov
sub
push
sub
dec
loope
lcall
push
xor
jae
push
inc
adc
jne,pn
jne
mov
cltd
xor
push
outsb
adc
mov
mov
ss
dec
dec
ja
repnz
es
fisubrs
lret
movsl
mov
mov
insl
ss
popf
out
push
or
dec
mov
fbstp
std
sar
sahf
lahf
clc
cmp
dec
lods
pop
mov
imul
push
lds
and
cmpsl
insb
ja
jo
push
pop
rcll
in
pop
inc
pop
mov
rcrb
pop
jge
xchg
xchg
insl
xchg
xor
pop
ficomps
mov
filds
aam
sub
push
movsl
xor
mov
shll
cmp
lret
scas
sub
sub
bound
gs
fisubs
test
xchg
stc
add
iret
icebp
cmpsl
data16
jb
movsb
repnz
and
dec
mov
and
mov
aad
sbb
ret
stos
dec
repnz
lock
pop
das
aas
rcrl
cmp
movsl
fcoml
adc
out
jnp
sbb
mov
jnp
out
jge
mov
jbe
cmp
push
lret
rcll
mul
cs
mov
test
mov
sub
shrl
pusha
repnz
lea
idiv
mov
in
enter
ficompl
and
call
xchg
add
movsb
jp
fisubs
test
int
jnp
dec
xchg
cltd
sbb
in
ljmp
and
cmp
outsb
notl
mov
dec
mov
pop
lds
repnz
aaa
or
mov
es
xor
xor
in
test
insl
jo
xchg
jl
mov
and
or
iret
js
pusha
mov
aam
add
popa
out
xchg
test
push
jl
or
jbe
xlat
call
xchg
mov
push
movb
push
or
mov
jp
shl
test
lcall
out
and
mov
pop
shlb
xor
std
push
lea
fscale
jae
fstpt
cli
sbb
jbe
rcrb
cmpsl
sarl
cs
dec
push
inc
push
push
in
movsb
imul
push
test
mov
lods
addr16
lret
ljmp
pop
std
addr16
ja
inc
int
cmp
xchg
negl
dec
xlat
mov
pop
lea
std
addr16
ja
inc
int
cmp
xchg
negl
dec
xlat
mov
pop
lea
std
addr16
ja
inc
int
cmp
xchg
negl
jl
mov
cltd
xor
addr16
ja
inc
dec
xchg
ret
sbb
or
mov
add
out
out
testl
fistpl
outsl
addr16
ja
pop
aas
pop
sub
mov
fcomip
iret
xchg
mov
inc
jg
dec
push
pop
ja
inc
push
pop
das
daa
pop
aaa
movq
out
jne
das
int
xor
mov
mov
adc
push
imul
lcall
lcall
pushf
push
add
cmp
pop
mov
sub
test
test
fistpll
int
pop
and
loop
mov
ds
in
daa
push
enter
xchg
ljmp
xchg
scas
cmp
jb
ja
pop
pop
push
das
out
fisttps
pop
sbb
mov
ja
mov
mov
inc
adcb
push
mov
ds
shlb
divl
pop
cmp
fiaddl
mov
jnp
pop
ljmp
aam
addr16
xor
insb
pop
fisttps
cmp
cmp
dec
push
out
or
js
jle
pop
filds
pop
out
mov
inc
shlb
pop
xor
pushf
incl
lds
out
scas
cmpsl
inc
adc
cmp
inc
pop
dec
adc
popa
scas
lods
movsl
out
xchg
pushf
loope
lret
stc
rcl
mov
inc
cmp
add
adc
jne
jns
dec
pop
push
outsb
mov
xchg
ljmp
loop
and
add
sub
js
dec
jle
fs
test
movsb
lods
aam
xchg
scas
cmpsl
lahf
mov
inc
jg
outsl
addr16
ja
pop
aas
pop
das
daa
pop
aaa
rdseed
xlat
out
out
test
cmpsl
lahf
mov
inc
jg
outsl
addr16
ja
pop
aas
pop
das
daa
pop
aaa
rdseed
jno
and
es
leave
rcll
add
pop
in
pop
repz
decb
add
ja
pop
mov
lods
inc
push
in
sub
cld
xor
dec
ja
imul
mov
inc
xor
cmovo
movsl
rcrb
jl
mov
sbb
mov
fbstp
and
or
inc
jns
pop
int
loop
jg
scas
cmpsb
add
hlt
ret
jbe
xchg
add
fstpl
out
jg
ret
js
fldcw
pop
or
push
and
test
ss
jns
mov
jb
jns
cmp
fucomip
push
leave
lods
jle
fildll
jmp
ja
sub
jp
dec
xorb
jp
xchg
sar
out
pop
pop
les
mov
aad
scas
fwait
push
mov
jl
push
push
mov
sbb
xor
jmp
dec
mov
fcompl
hlt
pop
outsb
pop
xor
rcrb
es
pop
dec
mov
fstps
and
mov
add
mov
jge
xor
xchg
push
inc
sbb
adc
mov
lret
pop
imul
inc
inc
mov
andb
mov
and
mov
mov
add
mov
mov
jmp
addl
mov
jecxz
shlb
mov
sbb
dec
xor
mov
add
xchg
add
mov
repz
jnp
sti
lods
inc
outsl
pop
sbb
sbb
addr16
outsb
and
pop
adc
mov
xor
mov
inc
int
jno
inc
cmp
adc
push
js
push
mov
inc
lods
aaa
in
lea
cmp
sub
pop
je
push
xor
das
xor
repz
xor
nop
push
imul
ss
adc
xor
xor
test
push
and
sbb
inc
mov
pusha
cmp
mov
mov
cld
sub
push
fistl
and
mov
sub
loopne
jno
pusha
and
fiadds
push
pop
jb
xchg
lds
cld
cmp
jbe
iret
ret
xchg
cltd
add
pop
scas
add
pop
je
sbb
daa
imul
test
test
imul
jae
or
clc
add
test
test
outsl
pop
adcb
ret
pop
fadds
mov
movsb
jmp
jns
pop
push
cmp
fiaddl
fstps
push
inc
aas
aam
mov
sbb
loopne
andb
and
daa
xchg
pop
cmpsb
scas
xlat
fdivrl
mov
mov
sbb
pushf
stos
pusha
rcr
adc
ret
cmp
lods
lds
ficompl
lahf
cmp
adc
in
shlb
xchg
mov
mul
aas
cld
adc
rcll
fsts
xlat
xchg
daa
cmp
lock
pop
cmp
cmc
inc
xchg
jle
ljmp
jae
add
inc
dec
xchg
stos
out
pop
adc
push
jb
mov
inc
cli
mov
pop
shl
jbe
xchg
inc
dec
push
or
outsl
popa
idiv
cs
adc
jp
fwait
pop
aam
lea
stc
dec
mov
cld
outsl
out
pop
sbb
push
mov
hlt
mull
mov
std
sbb
mov
or
push
lods
out
into
outsb
mov
add
mov
cwtl
xorl
cltd
aas
push
push
mov
mov
xchg
movsb
test
or
arpl
cmp
cld
mov
cmp
and
insb
cmp
orl
dec
daa
test
mov
out
adc
cmc
mov
adc
imul
out
scas
or
adc
push
or
lds
rcrb
pop
rep
enter
and
fwait
dec
fisubrl
cld
data16
jle
pop
mov
pop
push
dec
in
hlt
dec
or
inc
idiv
cmpsb
push
les
aas
cltd
push
cmc
popa
xor
insl
bound
push
jne
stc
adc
les
inc
add
sahf
pop
js
jp
pushf
dec
push
cmpsb
xchg
mov
jno
mov
mov
pop
pop
dec
xor
adc
lock
fstpl
adc
in
add
pop
mov
jb
push
icebp
add
lahf
add
into
idivb
movl
sub
or
pop
mov
cmpsl
mov
sub
sbb
push
pop
mov
push
movsb
add
and
inc
push
loop
cli
jg
ljmp
mov
dec
dec
shlb
xor
sbb
push
aam
in
cmp
in
mov
loopne
inc
leave
ds
in
lret
mov
aam
and
pop
add
push
mov
cmp
imul
hlt
bound
daa
mov
ss
cld
mov
push
cs
mov
aaa
pop
cli
push
cmp
add
or
xlat
cmp
xor
inc
inc
mov
add
jne
fs
les
in
bound
jmp
cmpsb
cmp
push
pop
out
repz
movb
adc
sub
ret
mov
cli
mov
mov
push
repz
in
dec
mov
sub
outsl
mov
incl
mov
pop
fidivrs
add
loope
insl
xor
gs
xchg
xchg
sub
jg
push
pusha
sar
push
mov
jae
orl
shr
mov
test
mov
dec
loop
mov
and
jmp
push
mov
loope
pop
js
sbb
pop
jl
jmp
arpl
jg
mov
mov
into
test
pop
popa
pop
and
jns
dec
mov
in
jo
dec
fnstsw
pop
sub
inc
add
mov
mov
fs
sub
sub
pushf
jmp
int
mov
mov
jge
sbb
push
rolb
sub
sub
pop
push
sbb
out
mov
mov
push
add
out
std
mov
pop
lcall
push
push
imul
out
add
rcll
cmc
das
dec
sbb
jge
lea
dec
cltd
mov
cmp
sub
xchg
in
cmp
push
or
jecxz
sub
pop
mov
inc
add
dec
clc
push
jl
popa
sbbl
lahf
and
ficomps
mov
into
xor
mov
and
cmp
int3
jge
out
sti
das
jns
sub
movsl
pop
add
pop
ret
cmp
jno
mov
jno
sub
push
lds
rcr
and
loopne
xlat
aad
imul
or
add
das
mull
xor
mov
mov
bswap
movsb
push
cmpsl
outsl
inc
mov
xchg
mov
das
inc
pop
lcall
adc
push
out
dec
adc
cld
sti
ds
hlt
lret
jl
sub
mov
and
cli
pop
sub
test
adc
lret
fnstsw
add
xor
mov
sub
mov
scas
mov
adc
jae
mov
gs
dec
push
hlt
adc
movq
dec
mov
mov
das
into
icebp
mov
jle,pt
xor
clc
sbb
pusha
lcall
mov
test
iret
sbb
movsl
test
mov
cmp
and
ds
mov
mov
incb
lea
or
jo
xchg
and
test
les
jb
push
jbe
xchg
lcall
stos
xchg
mov
mov
push
mov
and
cmp
pop
aas
outsl
mov
lods
xor
aad
addr16
lods
and
fisubs
or
mov
in
or
push
cwtl
and
dec
cmp
pop
mov
adc
addr16
or
sub
aad
sbb
fimuls
xor
xchg
lea
lcall
dec
test
and
scas
loopne
cmpsl
push
and
xlat
jmp
sub
nop
dec
sahf
mov
jp
pop
jae
jns
aas
roll
inc
cmp
mov
pushf
jno
popf
and
or
mov
mov
loop
scas
sbb
pop
add
scas
jmp
icebp
mov
pop
fiadds
fsubs
scas
adc
push
sub
mov
icebp
loope
mov
ljmp
adc
push
dec
enter
je
push
arpl
sahf
into
enter
outsb
push
nop
sbb
ret
jle
mov
xchg
inc
mov
pop
push
mov
jno
fsubs
push
jno
lods
mov
les
adc
lds
and
sbb
mov
cmp
cld
push
and
inc
shlb
xlat
jo
insb
dec
sbb
xchg
out
lret
jnp
inc
dec
push
repnz
cmc
mov
jne
pop
sarb
loop
out
cmpl
out
push
lahf
cli
inc
dec
pop
push
js
mov
add
cmp
adc
punpcklwd
or
cwtl
pop
jne
rcrl
fprem1
or
lds
dec
repnz
xchg
ret
int3
fmul
inc
aad
adc
mov
dec
xlat
xchg
cmp
cmp
inc
push
push
movsb
mov
in
out
movsl
xor
leave
scas
mov
xor
mov
loopne
out
xchg
pop
dec
out
pop
xor
mov
loop
mul
movsb
ret
mov
add
in
aad
dec
fsubs
mov
inc
inc
fnstsw
mov
fucomp
inc
adc
loope
repnz
cmpsb
fadds
cmp
inc
cmp
mov
shr
mov
jbe
xchg
arpl
mov
out
sbb
cld
subl
mov
cmpsl
push
push
jg
pop
lret
pop
int
ljmp
or
enter
rclb
call
mov
pop
mov
mov
fbstp
mov
adcl
xchg
stos
add
or
loopne
test
iret
jo
pop
movsb
fyl2x
sbb
xor
sub
flds
mov
fcompl
mov
dec
test
mov
fnstcw
and
mov
imul
insb
rcrl
ret
or
pop
xchg
sbb
or
or
push
adc
mov
sbb
push
dec
es
cmpsl
int
subl
push
sar
mov
pop
sbb
sarb
jle
xchg
int
fucomip
out
mov
outsl
xor
out
sbb
insl
push
fidivl
sbb
ss
sarl
loope
adc
ja
into
fdivs
sbb
daa
js
roll
pusha
mov
push
jo
pusha
xchg
stos
mov
out
in
shrb
aad
in
imul
xchg
and
xor
jb
lods
mov
aad
cwtl
jecxz
popf
or
dec
ret
mov
push
ret
mov
adc
sub
mov
mov
cmp
inc
xor
subl
push
data16
out
sti
mov
and
orl
inc
jbe
insl
int
inc
sub
out
imul
sarl
and
nop
or
les
lock
roll
mov
mov
lahf
mov
ja
or
push
xlat
and
mov
adc
jmp
mov
mov
int3
mov
js
sbb
xor
fdivrs
mov
movsl
rclb
adc
cmp
pop
test
push
adc
mov
test
xchg
ja
pmovmskb
sbb
cmp
pop
xchg
jp
fisttpl
adc
xchg
pop
push
jo
xchg
shrl
in
fwait
lock
pop
or
push
sub
push
fcoml
lock
lret
xchg
pop
pop
jecxz
iret
lds
mov
pusha
xchg
push
inc
jg
xchg
loop
add
inc
cmc
je
adc
dec
ja
jo
sub
mov
adc
xchg
ds
cmp
push
loope
jnp
out
lea
faddl
and
into
hlt
pop
cmpb
loopne
mov
mov
inc
aas
mov
lahf
out
repnz
mov
out
out
xchg
mov
call
inc
sbbb
loopne
pushf
inc
jbe
add
and
sahf
aaa
jns
les
xchg
lds
fs
xor
stos
in
in
add
xchg
imul
xor
sub
add
push
das
es
cwtl
ljmp
into
movsb
loope
or
in
xor
cmc
cltd
sti
pop
sbb
mov
mov
push
insb
mov
cwtl
mov
rorl
repz
mov
dec
sbb
sub
push
cmp
repz
inc
xchg
js
xchg
fcompl
xchg
outsl
jge
dec
mov
push
jo
lock
xchg
arpl
addr16
dec
shrb
das
dec
push
out
jbe
pop
and
sub
repz
jbe
stos
inc
lea
shl
mov
dec
dec
fs
jge
jg
loopne
test
jg
inc
xchg
into
fnstsw
jno
mov
enter
out
push
push
shr
mov
and
cmc
lods
les
test
int3
sbb
aad
sub
fs
push
lds
aas
ret
addr16
and
out
iret
jae
mov
and
icebp
loope
fdivl
aaa
adc
sti
inc
dec
adc
stos
or
enter
icebp
dec
pop
hlt
lock
pushf
mov
repnz
and
pop
xor
lea
out
loopne
shll
test
pushl
addr16
adc
negb
cltd
sahf
dec
bound
lea
jg
sub
sub
fwait
jns
scas
aad
mov
js
push
mov
and
lea
or
out
xchg
mov
mov
lock
sahf
andb
mov
jmp
roll
and
shl
int
add
hlt
sbb
leave
jno
adc
pop
jne
sbb
lea
je
dec
popf
pop
xchg
lret
mov
leave
add
int
lcall
sarb
adc
pop
sbb
repnz
rorl
andb
loopne
cmp
gs
jle
jb
mov
fsubrs
jl
push
dec
mov
mov
xor
sub
fdivrs
negl
mov
lock
loopne
pop
mov
xchg
std
sbb
or
out
shrb
scas
out
dec
and
xchg
mov
dec
inc
fistl
mov
cmc
pop
lods
xchg
push
push
imul
ror
push
push
jb
adc
cmp
and
ds
mov
or
test
roll
mov
outsl
and
cmp
pop
inc
jbe
insb
mov
cli
jbe
mov
pop
scas
stc
sub
adc
or
out
loopne
gs
push
inc
xchg
cmc
andl
in
cld
cmc
shl
mov
lret
xor
scas
push
lcall
inc
and
push
jle
rcr
mov
pop
loope
and
sub
dec
in
das
pop
imul
lea
jg,pn
int
mov
adc
xchg
or
lahf
mov
es
xchg
daa
gs
fists
aas
repnz
adc
inc
xchg
flds
stos
jmp
mov
test
sub
gs
xor
push
ja
daa
and
mov
push
into
icebp
cmp
adc
and
pop
jle
test
ds
andb
jmp
fwait
jle
add
sbb
hlt
ficoms
sub
cltd
test
add
in
aad
cmp
rcrl
or
jle
mov
mov
add
int3
cmpsb
std
mov
jge
iret
insb
push
push
or
cmp
inc
cmp
xchg
xchg
pushf
lahf
gs
dec
hlt
loop
test
push
add
and
ror
lret
xchg
pop
mov
call
je
std
rorb
push
lods
pushf
dec
in
ret
inc
scas
test
jmp
mov
les
add
divl
fwait
fwait
sub
jmp
popf
pop
aaa
sbb
cmp
lret
popa
jnp
test
insb
adc
pop
inc
cld
pop
or
mov
push
inc
jl
mov
pop
fs
cmp
lcall
jl
mov
in
push
jo
jge
mov
mov
pusha
stc
mov
icebp
jb
adc
push
ds
sar
pop
and
mov
mov
mov
cmp
das
jl
mov
imul
test
xchg
dec
mov
insl
call
rolb
add
notb
into
fiaddl
in
dec
lods
scas
insb
lea
xchg
mov
mov
daa
and
fldl
jp
loop
inc
insb
mov
pop
xchg
mov
rclb
shll
aam
pop
dec
repnz
pushf
call
dec
lods
loopne
fbld
ds
hlt
or
fsubp
lcall
and
pop
xchg
sti
mov
cmp
js
mov
int
arpl
mov
pop
mov
jp
and
mov
int
aas
std
in
inc
outsl
fldenv
adc
sbb
dec
repz
push
rclb
mov
add
icebp
mov
jecxz
ljmp
dec
sub
imul
pop
xchg
jb
and
dec
dec
push
push
sub
pop
mov
repz
rol
jl
testl
stos
mov
mov
push
ljmp
sub
cwtl
out
jnp
repz
cwtl
jle
das
adc
add
xchg
mov
push
sbb
dec
inc
lock
pop
lahf
adc
into
clc
imul
out
imul
imul
test
jp
sub
or
xchg
mov
fmull
xor
inc
and
andl
mov
mov
cmp
nop
pop
lods
xchg
jnp
es
jnp
and
jno
inc
mov
xchg
mov
dec
inc
xchg
pop
pop
mov
mov
aam
gs
ja
imul
cmpsb
clc
dec
sarb
mov
jae
xlat
adc
stos
or
fistpl
test
mov
mov
testl
dec
sbbl
dec
sub
or
sub
pop
sub
imul
repz
mov
aam
adc
xor
es
stc
inc
dec
inc
lods
add
xorl
cmp
enter
mov
adc
fstpt
daa
sti
inc
pop
jle
rclb
loop
push
push
add
lods
inc
shl
ljmp
dec
mov
push
adc
adcl
xor
scas
test
out
cltd
sub
mov
add
mov
and
cmp
adc
rep
loope
mov
cmpsl
and
daa
inc
add
jge
push
insl
xchg
insb
repz
cmp
mov
cltd
jl
push
push
ljmp
scas
movsl
dec
add
jge
shrd
add
test
fidivrs
xor
xor
add
repnz
xchg
sbb
and
je
push
jnp
test
jl
mov
mov
or
iret
aad
cmp
pop
dec
jecxz
hlt
xlat
movsb
jge
bound
jbe
cwtl
inc
loopne
pop
pop
inc
inc
inc
addr16
sbb
xor
adc
push
orl
xchg
sbb
mov
inc
jbe
xchg
cli
cmc
pop
cs
add
mov
mov
repz
dec
into
adc
nop
xor
int
divb
aam
xchg
ret
adcb
mov
sbb
sub
sub
xchg
pop
mov
xchg
jbe
cwtl
rclb
pop
lahf
jns
cmp
fidivs
lods
adc
mov
cmpsl
aaa
mov
mov
popf
nop
mov
pop
cmpb
cld
push
inc
dec
fcoms
mov
push
add
sbb
xor
shrl
insb
jl
jle
xchg
dec
sub
sub
add
mov
jo
dec
dec
mov
jg
popa
and
jns
shld
fs
cmp
sahf
add
mov
cmp
adc
mov
in
add
jp
inc
and
ror
cwtl
mov
inc
scas
mov
fcmovb
popa
negb
jmp
cmp
lock
js
loopne
icebp
dec
sub
out
push
popa
pop
popf
pop
dec
xchg
lods
jnp
jg
cmp
leave
stc
daa
scas
fmuls
aam
sti
push
loop
scas
or
sti
arpl
lret
add
mov
cmp
sbb
int
popf
sub
out
sbbl
pop
xchg
jno
popa
dec
sub
cmp
xor
int
cmpsl
add
mov
jge
pop
pop
outsb
jl
add
pop
pop
test
fsubl
loope
inc
xlat
insb
lods
jbe
fisttps
lahf
ja
sbb
and
test
imul
rclb
sti
aaa
push
dec
rcll
pusha
xchg
andl
stc
out
mov
mov
mov
inc
jg
outsl
addr16
ja
pop
aas
pop
das
daa
pop
aaa
rdseed
xlat
out
out
test
cmpsl
lahf
mov
inc
jg
outsl
addr16
ja
pop
aas
pop
das
daa
pop
aaa
rdseed
out
xchg
xchg
pop
cmpsl
lahf
ja
inc
cmpsl
push
outsl
xchg
pop
ja
pop
aas
pop
das
daa
aas
fisttps
sar
mov
mov
mov
aaa
popl
test
int
ja
jo
lahf
rcr
loopne
lock
clc
sahf
enter
adc
cwtl
mov
mov
js
dec
ds
cmp
dec
cmp
jle
jle
mov
sahf
leave
scas
fdivrs
mov
cwtl
push
push
pop
sub
sbb
xchg
clc
sahf
enter
test
mov
in
in
js
sub
ds
sqrtps
sub
ja
cwtl
mov
testl
stos
aas
jmp
sub
push
pop
xchg
xchg
and
mov
inc
mov
add
sbb
ds
aad
or
outsb
loopne
insl
jno
sbb
icebp
mov
fiadds
lcall
push
xchg
cmpsl
mov
mov
clc
sahf
call
out
xchg
push
push
pop
mov
ror
imul
mov
jg
push
int
inc
out
mov
mov
or
jnp,pt
push
rorl
cmp
jne
hlt
jo
jo
pop
jae
fxrstor
cmp
sbb
sbb
mov
mov
mov
mov
out
push
js
dec
aaa
pop
daa
sub
dec
or
sbb
xchg
mov
iret
cmp
add
data16
jnp
push
pop
and
outsb
insb
adc
ficoms
in
mov
adc
jge
cmp
xor
pop
sbb
iret
clc
lret
jmp
out
cwtl
push
cs
sub
pop
or
jle
mov
sahf
enter
test
mov
push
cs
sub
pop
or
jle
mov
sbb
mov
cli
push
insb
push
jg
and
movsb
add
ja
inc
mov
inc
xchg
push
cld
lods
int
clc
push
dec
out
inc
mov
add
add
aas
jge,pt
adc
cs
adc
stc
shrb
data16
sahf
inc
fsubrs
sub
lret
loope
push
nop
and
lods
daa
adc
xor
lahf
repnz
bound
jecxz
daa
arpl
xchg
aas
inc
mov
ss
mov
sbb
dec
pusha
lock
and
mov
pop
inc
pop
jp
push
out
cmc
int
popf
repz
add
add
lods
outsl
pop
sbb
pusha
mov
cmp
mov
jo
leave
out
add
push
aad
cmp
adc
mov
out
dec
dec
iret
in
leave
xor
sub
gs
mov
push
cmp
sbb
jg
jle
std
cs
pop
push
stos
out
notl
xor
outsb
insb
mov
sarl
fstpt
test
ljmp
xchg
clc
or
xor
adc
insl
fsubp
fimuls
cmp
lret
insb
sbbb
sbb
mov
push
and
cwtl
dec
rolb
addr16
sbb
out
sbb
push
pusha
jmp
pop
stos
cmpsb
dec
rcl
data16
sahf
ss
js
dec
and
cli
out
imul
push
pusha
xchg
jbe
mov
out
stos
sub
cmc
js
int
lock
pop
xchg
sub
and
js
sbb
push
ja
addb
jecxz
fldenv
push
xchg
xor
in
jo
inc
fisubrl
or
or
push
mov
outsl
inc
daa
adcb
popf
pusha
xor
push
fistpl
loop
int3
mov
xorb
mov
adc
aaa
add
stos
sub
pop
push
cmp
add
aaa
adc
ja
xchg
lahf
adc
mov
cmpsl
cwtl
je
jne
mov
stc
out
sub
js
popa
xor
push
pop
test
mov
popa
dec
sub
sti
andb
pop
adc
loop
movsl
iret
lahf
outsb
jno
mov
sub
mov
cs
subb
add
mov
sub
xor
cwtl
lahf
lret
popa
and
aas
sub
push
fidivrl
cwtl
shrb
rclb
into
into
ja
movsl
add
mov
pop
rcll
adc
sub
or
scas
adc
mov
fs
movsl
sub
jo
add
jl
lahf
xchg
inc
dec
jo
mov
rcrl
nop
sbb
mov
adc
mov
aas
ja
popa
mov
in
shll
xchg
in
stos
or
mov
pop
or
inc
inc
add
mov
xor
pop
int3
xor
cmovno
sub
es
cmp
cltd
or
call
inc
mov
movsb
jnp
push
jmp
pop
dec
lock
out
add
jb
aas
jns
lods
pop
or
adc
jmp
leave
adcb
cld
mov
and
imul
shlb
imul
jp
jmp
inc
arpl
and
and
dec
iret
imul
inc
jno
xor
mov
mov
aam
pop
adc
xor
mov
cld
add
xor
inc
add
jg
test
jge
push
add
icebp
pusha
ret
or
dec
cmp
imul
pop
inc
mov
leave
sub
and
add
sahf
and
mov
lods
subl
test
cs
lret
jns
add
sahf
fbld
inc
jne
pop
aad
cltd
and
inc
sbb
ljmp
or
jl
and
test
sub
sub
and
lcall
scas
cmp
add
xchg
pop
or
pop
dec
andb
push
das
je
repz
mov
mov
add
sub
sbb
rorb
mov
gs
mov
and
sbb
add
cmp
sarb
mov
enter
sti
mov
mov
dec
inc
in
mov
pop
ret
repz
lods
loop
mov
push
jle
cmp
je
sti
or
jmp
arpl
in
jge
xor
lret
jge
dec
rol
jl
mov
jno
fldl
and
mov
fwait
push
ficoms
sub
xchg
arpl
cs
addb
and
sub
std
dec
adc
psubusb
stc
movsb
xlat
in
out
int3
jmp
icebp
cmp
inc
cmp
push
adc
test
inc
push
leave
push
mov
sub
and
dec
inc
sbbb
data16
mov
loopne
fstl
push
pop
adc
jge
jmp
inc
add
sub
xor
xor
sub
sub
call
push
sbb
xchg
arpl
loope
and
mov
or
cmp
imull
fstl
add
out
scas
push
push
dec
and
rcrb
popf
out
fidivs
clc
push
xchg
mov
add
mov
mov
addr16
imul
mov
and
pushf
rclb
insb
icebp
add
fisubs
sub
rclb
dec
popa
rcrb
cmpsl
mov
insl
push
cmp
pop
ds
pop
nop
lahf
xor
push
sbb
and
jg
push
cltd
das
sti
xor
lret
sub
mov
pop
popf
cmp
xchg
fwait
pusha
push
push
and
insl
gs
scas
xchg
pop
cmpsl
jl
push
insb
clc
adc
sub
out
pop
xor
dec
mov
xchg
lret
es
dec
jns
push
dec
lahf
dec
iret
rolb
mov
mov
faddl
ljmp
inc
test
enter
push
jbe
mov
shr
mov
add
ret
data16
push
repnz
inc
lahf
in
dec
xchg
cs
hlt
sub
sub
dec
mov
pop
xchg
popa
js
push
or
jbe
ret
mov
pcmpgtw
lret
jmp
add
xor
pop
fistl
dec
shrl
xor
jbe
ja
lcall
adc
push
cld
push
popa
dec
cltd
mov
add
movsl
push
and
ja
mov
and
dec
jl
ja
ds
les
aas
jno
dec
ret
into
dec
adc
arpl
testw
push
lds
jno
cmpb
cli
lds
ret
imul
mov
add
aam
cwtl
mov
pushf
rorl
mov
mov
int
orb
pop
jmp
mov
cwtl
lret
out
cmpl
mov
lods
mov
jnp
xor
scas
mov
jnp
shr
jp
addr16
mov
cmp
lea
pushf
sbb
and
cs
cmc
in
push
and
inc
push
push
jae
out
sbb
aad
and
pop
jo
fisubl
das
pop
rolb
popa
cmp
push
fmuls
jae
push
xor
pop
int
ds
fadd
repnz
and
shll
adc
insl
pop
ret
mov
fsts
ret
notb
aaa
icebp
dec
dec
cmc
add
sbb
dec
push
leave
stos
inc
int
aaa
cltd
adc
insb
sbb
pop
inc
dec
or
cmpsb
mov
xchg
test
pop
je
jecxz
sub
in
rorb
push
fistps
cmp
and
loop
dec
test
pop
shl
ds
dec
pop
cmc
fwait
or
aam
push
jmp
out
cmp
inc
ss
stos
pop
sbb
xchg
cmpsl
hlt
movsl
fistpll
or
inc
jnp
jne
xchg
mov
mov
push
outsb
arpl
pop
dec
ficoms
pop
inc
aas
dec
mov
add
in
mov
or
cltd
mov
iret
xor
pop
pop
add
leave
push
fcomip
pop
test
aas
add
fcompl
dec
mov
outsb
fstl
xlat
scas
jbe
loope
inc
pop
int3
jg
stc
fistps
je
mov
cmp
in
sub
xchg
in
cmp
inc
xchg
add
ljmp
mov
mov
sarb
fistpl
out
sub
movsl
pop
fildll
ja
dec
mov
ret
xchg
into
lret
adc
cmpsl
popa
jmp
ficoml
jg
bound
xcrypt-ecb
cmpsl
mov
adc
dec
int
sbb
push
in
jg
std
push
sub
std
repnz
jne
jae
mov
out
xor
sub
pop
mov
pop
push
loop
sub
push
call
orl
inc
fwait
push
pop
loopne
mov
es
addr16
nop
sahf
scas
mov
jno
imul
lods
adc
imul
xlat
push
or
jbe
pusha
xchg
ljmp
pop
test
ds
mov
fmull
or
pop
es
jge
clc
mov
xor
das
adc
test
sub
les
scas
ret
sub
test
frstor
ret
cli
jp
dec
aas
fadd
push
xor
sarl
nop
jnp
fsubl
mov
or
jo
das
mov
shrl
loop
dec
call
fisubl
push
sub
cli
rcr
or
dec
push
mov
xchg
or
pextrw
lret
outsl
xor
in
hlt
pop
cmp
sbbl
into
adc
sub
mov
ja
add
push
mov
es
cmpsb
inc
popf
shlb
push
mov
cmpsl
bnd
dec
loopne
adc
leave
xchg
idivl
mov
cmp
push
fdivs
cltd
xchg
dec
mov
popa
jge
mov
xor
or
mov
scas
subl
xchg
jg
mov
dec
loope
leave
mov
stc
out
sbbb
inc
call
add
into
inc
jge
add
inc
adc
jg
push
sbb
pop
inc
sarl
imul
lret
and
in
inc
cmp
arpl
sub
xor
stc
popf
pushf
xchg
mov
sahf
js
jns
lcall
jle
sti
dec
xchg
dec
pop
popf
pop
and
lock
dec
mov
dec
mov
int3
push
inc
pop
push
adc
xor
mov
xchg
fwait
sbb
pop
movsl
adc
test
lret
dec
icebp
out
ret
pop
mov
mov
cmp
fstpt
cltd
adc
scas
cmp
cs
cmpl
add
js
lds
push
jnp
push
or
adc
cli
jl
test
loope
inc
pop
mov
loope
push
arpl
add
cmpl
int
bound
shlb
ja
push
ja
aas
push
cli
scas
jns
stc
cli
cmp
repz
bndstx
pop
addr16
stos
inc
push
shl
inc
mov
and
sbb
pop
insb
pop
movsb
mov
mov
adc
and
dec
test
xchg
adc
mov
pop
lds
repz
sub
cmp
cmpsb
loope
int
or
test
mov
xor
mov
push
in
push
testl
mov
je
ret
dec
test
xorl
xor
mov
mov
loopne
add
pop
lods
or
mov
aad
stc
or
pop
jno
ljmp
push
sbb
sbb
setge
mov
mov
sub
push
jo
shrl
sub
hlt
jmp
imul
inc
push
add
mov
aad
fmuls
mov
in
fwait
clc
shlb
adc
sub
or
dec
push
inc
test
lahf
mov
push
push
jno
and
pshufw
call
jno
stc
testb
push
sub
cs
out
adc
scas
ja
das
dec
call
adc
ja
xchg
outsl
jg
mov
loope
pusha
scas
jle
inc
add
inc
ss
or
call
and
mov
jp
lahf
stc
daa
fildll
lods
inc
dec
xchg
xor
out
das
push
adc
out
inc
mov
mov
inc
leave
mov
pushf
dec
cmp
jle
nop
mov
mov
adc
seta
movsb
jne
lds
mov
or
and
das
sbb
mov
sbb
dec
and
mov
enter
sub
lahf
dec
xor
mov
sub
xchg
pop
jg
mov
inc
dec
aad
lea
mov
sbbb
pop
and
xchg
mov
push
cmp
rorb
jmp
mov
xor
cmc
mov
jle
push
adc
and
movsb
cmpsb
aam
cld
test
data16
jne
inc
lods
inc
ljmp
add
rclb
and
push
or
sbb
test
mov
ss
fs
aaa
rolb
clc
xchg
stos
aad
adc
arpl
jne
add
and
mov
mov
add
mov
sti
scas
icebp
insb
fbstp
insl
icebp
mov
inc
pushf
mov
dec
in
scas
dec
aad
sub
aam
fs
push
aaa
sub
xchg
les
pop
les
out
jnp
pop
stc
mov
cmp
test
fbstp
xlat
lods
mov
out
ficompl
push
arpl
mov
fcmovu
inc
sbb
shrl
sub
sub
ja
mov
adc
aaa
mov
cmp
mov
jmp
fisubl
repnz
push
mov
xchg
nop
jo
mov
inc
add
and
push
jl,pt
jecxz
sub
cmpsb
call
filds
push
pop
jb
xor
xor
mov
push
lret
js
loop
adc
push
inc
repz
push
enter
movsl
aaa
enter
in
inc
cmp
rcrb
dec
xor
jmp
aaa
test
les
mov
in
notl
inc
decl
fimull
popa
mull
xor
out
cwtl
mov
or
insl
arpl
jle
sub
push
call
ret
adc
mov
pop
inc
and
lahf
in
push
dec
mov
je
test
or
dec
jb
sbb
rcrl
movsb
pop
cmp
lret
std
and
leave
lock
jno
cmp
cmp
scas
insb
pop
mov
dec
cli
xchg
pop
dec
jmp
adc
jl
insl
xor
pop
xor
sub
imul
mov
adc
inc
push
pop
call
mov
sbb
jo
fstpl
xchg
jmp
adc
dec
cmpsl
bound
mov
cmp
insb
mov
test
pop
mov
mov
ficomps
jo
loopne
cmc
push
gs
ret
stos
roll
or
sti
jbe
cmpsl
sub
into
mov
imul
sub
lock
lcall
xchg
fcom
jns
imul
in
lods
in
ds
dec
or
ljmp
inc
add
inc
xor
add
push
push
adc
sbb
loop
mov
je
ss
dec
sbb
ds
popa
int
adc
mov
popa
push
mov
sbb
cmp
ret
clc
inc
push
push
jmp
int3
push
test
out
pop
shlb
inc
in
out
cmpsb
sbb
clc
add
fs
hlt
stos
repnz
add
popf
rol
lret
pop
mov
jae
imul
mov
cmc
int3
jle,pt
or
mov
sbb
pop
xchg
cmp
mov
adc
hlt
movsl
out
mov
cmp
fwait
jne
pop
shrd
outsl
cmp
stos
xlat
je
fnsave
aad
imulb
ret
inc
mov
dec
test
aas
in
jecxz
shl
pop
inc
lahf
xlat
fwait
jno
popa
lret
mov
mov
and
jo
mov
jge
rcrl
adc
sbb
test
es
cmpsl
repnz
xlat
lds
xchg
inc
repz
imul
jb
push
xchg
xchg
dec
lahf
pop
sbbl
cmp
jge
lods
cmp
bound
xor
popf
js
pop
inc
ja
inc
jmp
jge
push
in
dec
rorb
xchg
mov
imul
push
mov
sub
mov
sbb
popf
lods
sub
lret
iret
adc
mov
jo
ljmp
xlat
scas
cmp
sub
sub
ret
mov
xchg
cmpsb
pusha
push
je
or
ret
push
and
popf
push
ret
sub
fisttps
mov
push
outsb
xchg
cmp
jns
xchg
or
xchg
mov
lret
cmp
mov
mov
sub
mov
outsl
jge
loope
pop
jle
pop
or
or
in
jmp
repnz
mov
wrmsr
stc
icebp
clc
ret
nop
push
je
inc
repnz
fildll
cltd
ljmp
ret
in
in
mov
fimuls
stos
mov
lods
add
test
mull
ret
fwait
int3
sub
outsl
jae
dec
test
addb
inc
call
push
mov
outsb
push
inc
mov
pop
and
pop
jmp
ret
mov
add
in
push
cmpsb
mov
mov
mov
mov
jae
dec
xchg
add
dec
dec
dec
stos
popf
fldt
shll
ss
outsb
push
mov
idivb
add
int3
mov
mov
jnp
insl
sub
jle
mov
mov
loopne
int3
icebp
nop
push
out
sub
inc
repnz
xchg
in
ret
pusha
push
out
addr16
ffreep
shl
xor
imul
or
out
adc
popf
jmp
out
jecxz
shrl
adcb
sub
mov
inc
add
dec
inc
sbb
out
leave
rcr
sbb
movsl
lock
mov
mov
in
invd
cmp
jne
jae
xor
loop
mov
mov
jle
dec
fisttpll
orb
lret
sbb
fwait
shll
les
push
frstor
hlt
xor
push
mov
out
inc
gs
push
out
xor
xchg
stc
aad
enter
and
fldcw
xchg
add
cmc
sbb
aas
dec
ds
lock
or
lcall
jns
addr16
pushf
sub
cmc
add
clc
xchg
jg
adc
ret
call
mov
stc
add
xchg
pop
jae
xor
lret
sub
loope
pop
inc
enter
imul
adc
cmp
mov
insl
lock
mov
adcb
flds
shrb
pop
imul
jne
faddl
insl
jne
mov
insb
push
add
mov
ret
cwtl
mov
enter
insb
inc
push
dec
and
stos
adcb
xor
clc
mov
out
mov
xchg
jmp
jbe
mov
test
addr16
nop
sbb
sbb
mov
mov
mov
mov
inc
adc
adc
mov
push
dec
getsec
test
mov
stos
cmp
inc
mov
insb
mov
mov
xor
mov
adc
adc
mov
sti
jp
je
sbb
pop
cmp
push
sub
out
fstp
xorb
xor
gs
push
movsl
hlt
aaa
add
mov
popa
stc
pop
and
mov
imul
rolb
jg
dec
fsincos
pop
dec
clc
xchg
repnz
sub
xlat
jg
cmpsl
sbb
and
fisubl
xchg
push
dec
lret
jg
outsb
flds
push
subb
xor
mov
mov
pop
pop
lahf
pop
jecxz
ja
inc
xchg
or
in
sbb
bnd
fldt
cli
pop
test
sub
loope
and
jge
cs
dec
outsl
adc
xchg
loopne
pushf
lock
test
sahf
ljmp
lahf
into
jne
js
adc
jb
pop
insl
xorl
xchg
mov
jecxz
inc
xchg
cmp
push
negb
and
shrb
mov
hlt
xchg
or
mov
testb
inc
xchg
xchg
nop
xor
add
cs
pop
pop
or
add
dec
ret
rorb
bsf
in
fdivrs
and
in
in
adcl
fisubl
dec
jge
jg
arpl
mov
and
jmp
pushf
push
sub
je,pt
and
or
and
jno
pop
xchg
cli
shll
mov
lret
xor
popa
sti
test
add
loope
mov
pop
jb
or
bnd
in
xchg
or
inc
mov
pop
xchg
adc
adc
adc
lret
popf
cmp
xor
xchg
rol
mov
js
and
adc
xor
fisubrl
cli
and
sub
incl
addr16
lock
pop
jb
subb
sbb
rcl
dec
js
mov
push
push
pop
out
sahf
rolb
mov
mov
cwtl
push
cs
sub
pop
or
jle
mov
sahf
enter
test
mov
push
cs
sub
pop
or
jle
mov
sahf
enter
test
mov
push
cs
aas
sub
pop
or
jle
mov
sahf
leave
scas
fdivrs
mov
cwtl
push
cs
dec
pop
mov
notl
int3
xor
inc
in
push
sub
jecxz
into
and
sti
jl
insb
rcrb
sub
fsubl
jo
inc
in
push
pushf
and
dec
loopne
lock
rcrb
cmp
cmp
sub
mov
test
xchg
js
or
and
arpl
pusha
bnd
mov
mov
xor
jge
imul
imul
adc
or
fistpl
xor
mov
mov
fstps
gs
aas
xchg
orb
cmp
rcr
and
xor
nopl
leave
aaa
lock
dec
or
mov
inc
shl
sbb
lock
cmp
sub
frstor
jo
inc
enter
lea
inc
shrb
dec
aas
xchg
shl
mov
cmp
mov
or
arpl
xchg
xor
rcrl
mov
in
or
ret
sarl
mov
outsl
mov
dec
jo
adc
push
cmp
pop
enter
insb
sub
adc
xor
push
mov
pushf
xor
push
pop
fs
add
adc
es
sub
mov
test
cmp
test
pop
icebp
jne
push
pop
mov
or
dec
hlt
inc
stc
mov
lods
ss
xor
mov
subl
loopne
out
addr16
in
jecxz
adc
cmp
insb
mov
mov
loopne
lock
insb
rcrb
or
cmp
sub
fsubl
jo
inc
in
push
pushf
and
pop
loopne
lock
insb
rcrb
or
cmp
sub
fsubl
es
cmp
out
cmp
scas
or
nop
push
jno
out
pop
or
ds
in
test
nop
and
out
sbb
jecxz
iret
call
loop
test
lret
cmpsb
dec
faddl
xlat
lock
xor
lock
sub
sbb
out
and
fs
cmp
fsubs
mov
add
add
cmp
xchg
subl
dec
ret
out
out
mov
lret
int3
lcall
pop
mov
push
adc
gs
fisubl
in
testl
dec
les
shr
cmp
add
cltd
mov
lret
ret
adcb
in
lret
daa
sub
mov
js
int3
fbld
add
inc
mov
xchg
sbb
loopne
mov
sbb
notl
sbb
xchg
ret
stos
mov
into
mov
mov
mov
lcall
pop
mov
adc
add
mov
dec
ja
pop
mov
add
outsb
les
bound
int
cmpsb
ret
lea
dec
mov
repz
aaa
pop
stos
mov
imul
insl
lret
fstl
xor
jnp
cltd
loope
ss
inc
in
xchg
push
xor
xchg
pop
adcl
ds
mov
sbb
scas
scas
ds
jl
jecxz
in
stc
xchg
adc
subb
mov
adc
push
or
add
imul
pop
rorb
xor
inc
fs
out
dec
push
orl
cmpl
xor
insl
sti
js
ljmp
dec
adc
lahf
test
cwtl
or
jg
out
ret
in
aam
stos
jnp
adc
mov
arpl
xor
test
pop
mov
cltd
enter
pop
adc
pop
xor
ret
mov
and
lea
xor
mov
imul
je
stos
adc
mov
inc
stos
and
arpl
cld
or
push
ror
inc
cmp
fstps
or
scas
mov
fdecstp
push
add
sub
ret
les
leave
bound
fwait
mov
mov
lret
sbb
lock
pop
sub
aas
loope
fwait
and
and
shlb
adc
dec
dec
sbb
xor
dec
push
and
clc
pop
and
pushf
arpl
push
pop
jne
xlat
pop
jge
gs
sub
int
push
in
mov
sbb
lret
adc
mov
mov
in
pop
cmpsl
inc
xchg
test
dec
movsb
aaa
xor
hlt
fisubrl
hlt
jge
out
push
xlat
imul
inc
cmp
cmpsb
mov
sbb
mov
or
add
cmc
mov
jns
pop
xor
loop
popa
stos
outsl
dec
pop
loop
int3
adc
cmp
std
push
mull
push
adc
pop
adc
and
and
adc
mov
add
mov
jl
xchg
dec
shlb
bound
in
int3
jmp
jp
inc
sbb
scas
xchg
mov
or
out
pop
pop
lods
out
mov
jg
insb
jnp
pop
loopne
mov
inc
xor
pop
sbb
es
adc
jl
test
int3
or
xor
sbb
adc
mov
mov
imul
mov
iret
push
call
dec
lea
adc
movsb
daa
or
xor
rcrb
pop
fcoms
sbb
jb
rorb
xor
lea
lret
call
cmp
mov
sbb
sarb
jge
notl
in
mov
and
aad
dec
inc
aaa
mov
and
into
iret
pop
enter
sbb
data16
xor
bound
incl
out
scas
fwait
mov
shlb
add
sub
adc
mov
into
xor
icebp
rorb
xchg
adc
shr
push
sub
cmpsl
loope
sar
or
inc
and
mov
fidivs
add
or
push
mov
mov
sub
arpl
push
pop
fists
stos
stc
cmp
movsl
setge
adc
sub
cmp
out
ds
js
pop
pop
mov
dec
xchg
sub
push
add
or
sbb
push
or
ljmp
ss
xchg
pop
ss
popa
inc
sbb
push
cwtl
adc
and
fwait
mul
stos
xchg
flds
scas
popf
dec
pop
cmp
cs
mov
push
rcl
adc
call
aad
jne
adc
aam
stos
or
enter
cmp
xchg
cmp
cmp
sbb
push
pop
test
fmuls
jb
adc
ret
or
pop
cmpsl
lahf
jp
fwait
rorl
ret
sbb
sbb
cli
rcrb
call
into
mov
popf
push
scas
out
push
out
mov
xchg
imul
push
and
cmc
adc
mov
adc
data16
pop
cmovne
xchg
jg
push
test
inc
mov
cltd
bound
and
xor
jae
mov
xor
ja
sbb
jecxz
cmp
adc
dec
mov
or
cmp
in
xchg
or
gs
aam
pop
jge
ja
xchg
es
adc
jns
pop
sbb
cmp
sahf
movsb
sbb
bound
jmp
dec
in
pop
or
lcall
fstp
adc
push
pop
sub
outsb
xor
ja
lcall
mov
or
dec
pop
insl
and
sahf
test
push
mov
sbb
fwait
iret
push
movsl
out
pop
out
push
repnz
adc
dec
repz
pop
and
add
sti
and
lret
int
int
jne
cmc
mov
push
addr16
push
insb
imul
data16
xchg
mov
fs
jp
daa
aam
repnz
and
and
fstps
icebp
mov
mov
mov
xorb
out
inc
cmp
dec
and
fdivrp
sbb
out
inc
sarl
orb
add
or
pop
mov
pop
adc
leave
push
push
push
xor
or
mov
mov
call
stos
movsb
mov
divl
sbb
loope
and
xchg
lcall
ja
xchg
int3
jbe
out
rorl
inc
pushl
pop
inc
icebp
sbb
xchg
imul
push
and
pop
xor
dec
lahf
mov
xor
dec
sub
sti
mov
xor
jp
popf
daa
idivl
out
ljmp
dec
inc
shl
xchg
scas
aam
jmp
je
mov
xor
arpl
cmp
sbb
aas
push
imul
gs
jmp
adc
sub
aaa
rcrl
mov
pop
cmp
mov
test
daa
dec
jae
insb
adc
sub
dec
mov
fsts
sbb
sahf
push
sahf
sbb
add
addb
rcll
outsb
pop
cmp
addr16
movsl
adc
push
ja
roll
fnstsw
imul
outsb
adcb
lahf
ret
out
repz
and
mov
mov
jg
test
pop
andb
xor
stos
ret
jnp
xor
pop
sbbl
rcrb
mov
fldenv
lods
mov
mov
test
push
popa
dec
lcall
test
mov
and
mov
push
dec
in
mov
mov
or
lret
dec
lock
movsl
pop
pop
scas
out
in
inc
mov
or
and
nop
mov
inc
int
leave
xchg
imul
cmp
jno
jl
lods
and
rolb
push
out
jge
sbb
aaa
cmpsb
ja
inc
sbb
and
js
pop
push
loopne
pusha
shll
jb
inc
std
sub
mov
das
movb
adc
repz
sbb
pushf
hlt
fs
xor
inc
xor
or
or
loope
data16
cmp
cmp
in
js
lret
xchg
and
fistps
cmp
inc
das
ljmp
xlat
xchg
pop
mov
lret
decb
cld
sub
or
movsb
mov
lret
sbb
jne
lods
xor
in
pop
mov
leave
adc
mov
pop
out
gs
pop
aas
mov
fstpl
sbb
ss
push
popa
ja
pop
jb
pop
pop
int
jl
mov
cmp
cmp
lret
ja
jp
adc
fs
ja
dec
in
aam
jmp
les
sete
push
mov
push
jecxz
push
es
pusha
xchg
dec
jb
cmp
aaa
pushf
loope
add
js
imul
aam
jp
in
mov
sbb
cmp
mov
loop
mov
rcr
cmc
xor
mov
repz
dec
push
mov
mov
jle
arpl
and
jo
jmp
gs
test
adcl
jle
sbb
adc
mov
add
mov
mov
push
mov
iret
arpl
xlat
scas
cmc
lock
or
fnstcw
nop
push
loop
les
xchg
inc
sub
fcoms
ret
inc
pop
cmp
push
fstps
mov
mov
mov
fs
mov
fisttpl
outsl
sbb
pop
jb
lret
sbb
mov
push
ljmp
sti
push
scas
xor
dec
jle
test
cs
fcompl
mov
lods
cmp
ja
mov
or
je
loop
xchg
insb
pop
sarl
stos
ss
fldl
js
stos
jnp
enter
inc
mov
xor
fcmove
fsubrs
mov
inc
addr16
notl
add
jnp
push
xchg
pop
ljmp
push
dec
xor
in
loop
sbb
test
test
movsb
xor
pop
xchg
mov
mov
xor
fmull
shll
mov
int
cmp
jns
or
dec
loope
inc
mov
lret
fstl
or
xlat
inc
dec
imul
sbb
fldl
xchg
mov
xchg
leave
aad
sahf
stc
adc
pop
fsubrs
stos
cmp
enter
pop
in
lret
xchg
sbb
fnstsw
xor
hlt
push
test
repz
lock
jmp
jae
push
cmp
shrl
jmp
push
les
js
out
and
stos
fildl
mov
hlt
mov
push
cmp
sub
push
in
and
mulb
shr
mov
ss
inc
or
ds
lods
or
test
mov
repnz
mov
adc
adc
mov
int3
push
mov
pop
push
sub
in
push
cmp
test
mov
mov
dec
push
call
and
scas
inc
pop
insb
outsl
xlat
sbbb
dec
movsl
repnz
xchg
les
mov
xor
pop
pushf
pop
movsb
jle
dec
test
lods
jl
jne
jp
sbb
push
fbstp
pusha
ljmp
push
push
sbb
cs
push
loope
shl
push
pop
stc
icebp
test
push
cmp
or
add
pop
push
pusha
push
push
test
jo
clc
into
jl
mov
daa
mov
jp
push
test
or
ja
lods
push
jg
push
sub
stc
mov
sahf
loope
ds
add
or
ja
ret
es
push
or
shlb
sub
rorb
test
and
sbb
dec
or
add
das
fiaddl
rorl
lret
clc
mov
xchg
or
je
jmp
js
mov
sbb
sahf
out
sti
or
fidivs
pop
fstps
hlt
pop
push
mull
cmpsb
jle
imul
jl
fldl
sub
sub
fs
pop
stc
cmp
stos
outsl
push
test
add
cmpsl
hlt
orb
adc
xor
adc
cmp
enter
mov
sbb
xchg
ja
dec
jno
add
mov
inc
mov
mov
aaa
push
jae
imul
decl
movsl
dec
dec
ljmp
movsb
inc
sbb
movsl
sub
inc
sahf
push
imul
popa
inc
std
pop
pushf
mov
inc
pop
ja
add
hlt
jbe
mov
mov
fwait
incl
inc
setbe
icebp
fnsave
lock
jmp
pop
lods
fisubrs
mov
negl
jmp
loop
jnp
rcr
daa
cltd
pop
out
aas
mov
jno
out
adc
xchg
shll
movsl
push
push
push
sti
pushf
sti
pop
pop
xor
pop
push
inc
sbb
shll
mov
out
cmp
mov
lock
arpl
and
fisubrl
push
jns
sub
ja
dec
dec
dec
mov
cmpsl
ds
fs
ljmp
cmp
push
xchg
jg
js
jge
xchg
shll
std
sbb
mov
xor
adc
jp
fistl
faddl
and
jmp
mov
cmp
cmp
dec
popf
movl
mov
lds
push
jns
lods
xor
pushf
and
add
insl
sbb
incb
mov
cmc
mov
repz
mov
push
mov
mov
lods
xlat
jle
btc
push
cmpsb
cmp
std
push
lods
pushf
sub
insb
xor
pop
dec
rol
and
mov
outsl
dec
mov
cmp
ds
ljmp
mov
cmpsl
sbb
mov
cmpsb
pushf
sbb
mov
pusha
int
js
add
popf
mov
test
jecxz
sahf
fstpt
stc
mov
jns
cwtl
add
incl
cmp
stos
xor
fwait
inc
mov
and
cmpb
stos
xchg
popf
add
jb
lods
flds
jns
mov
or
pop
xchg
js
or
cwtl
repz
jno
cmp
jae
mov
sbb
xor
es
jb
mov
dec
movsl
cmpsb
cmpsl
add
ds
inc
jecxz
testb
mov
mov
jmp
loop
jg
inc
cli
xchg
xor
int
sbb
push
xorl
sub
test
add
xchg
adc
push
stos
repnz
outsb
fildl
arpl
dec
mov
sti
test
daa
imul
jo
fbstp
test
insb
lock
cmp
jne
sub
clc
sub
inc
std
add
pop
jne
sti
notl
aaa
mov
andl
insl
mov
push
leave
push
and
mov
jne
test
lahf
push
xor
in
mov
addr16
hlt
leave
mov
pop
xchg
arpl
lret
push
incl
nop
cmp
inc
lods
jno
stos
xchg
popf
imul
sbb
mov
xor
shrb
push
outsl
das
lahf
into
mov
pop
mov
sahf
xchg
in
insl
mov
sbbl
inc
push
cmp
popa
outsl
mov
push
cmpsl
das
add
mov
jo
jne
ret
dec
pop
mov
sahf
pop
ds
xchg
dec
dec
stos
outsb
ss
fwait
jns
cmpb
jbe
enter
adc
into
dec
jae
std
mov
stos
mov
or
outsb
jo
xor
rol
cmp
mov
bound
push
inc
test
and
inc
adc
mov
dec
aad
inc
mov
xlat
mov
mov
sbb
xor
pop
cmp
dec
xchg
shl
mov
add
mov
rolb
cmpsb
mov
push
cmp
cmp
sar
and
out
clc
xchg
cmp
mov
fcoml
dec
sti
lret
cmp
sub
dec
xchg
xor
test
dec
ds
inc
mov
cs
add
push
divb
xor
int
test
nop
dec
mov
xor
adc
push
mov
pop
xorb
ret
arpl
xchg
push
add
stos
es
rep
lock
inc
add
sub
imul
and
push
add
mov
push
imul
jns
mov
in
mov
pushf
mov
sti
lret
pop
inc
lahf
test
sub
and
inc
inc
xchg
cltd
js
xchg
or
stos
fldt
mov
sub
lcall
insl
xchg
pop
ljmp
lret
mov
jae
rcll
lret
dec
dec
sarl
push
jle
jo
enter
jle
repnz
pop
push
mov
int3
inc
dec
push
insl
pop
ljmp
cmp
imul
mov
push
addr16
int3
cmpb
test
sub
clc
cmp
lret
cmp
and
fbld
fidivs
jb
adc
jp
xchg
dec
pop
fsubp
jle
sbb
mov
shlb
int
cltd
popf
dec
mov
leave
jg
je
or
mov
or
adc
mov
es
inc
divl
jg
lret
cmpsb
push
mov
push
mov
jno
cmp
cmc
and
or
add
cmp
pusha
addr16
fiadds
jns
test
xorl
pushf
cmp
cld
leave
call
or
shl
sub
bound
jp
xor
out
jg
inc
jge
cmpsb
inc
jno
out
jmp
cmc
into
mov
jne
xchg
dec
mov
sbb
cmp
je
jb
jp
or
out
test
fmull
cmc
mov
xor
ret
aam
outsb
das
in
jge
pop
movsb
cs
mov
out
inc
cld
mov
or
dec
repnz
add
in
and
jecxz
jmp
popf
bound
out
cmp
outsl
mov
add
xchg
jbe
into
mov
mov
dec
clc
ja
cmp
aam
push
add
fstl
sbb
sub
ss
mov
cmp
mov
int
or
pop
mov
jno
xchg
sti
jg
in
mov
gs
fcompp
jp
xor
stos
mov
scas
pop
mov
lods
loope
xchg
mov
jae
test
in
lret
mov
mov
inc
mov
lret
xor
lods
xchg
xlat
cmpsb
cmp
outsb
jle
adc
orb
and
mov
mov
xorb
movsl
daa
mov
ss
into
xchg
scas
and
mov
or
lret
fldl
insl
mov
sbb
mov
pop
jmp
sbb
mov
push
stos
test
pop
sarl
sbb
dec
xchg
arpl
adc
sbbl
sarb
cmp
fwait
lods
jge
mov
in
xchg
sbb
mov
aad
stos
adc
xchg
imul
aas
jbe
cmp
into
xchg
xchg
cmp
dec
jmp
enter
insl
cmp
add
aad
jecxz
cmp
sbb
pusha
adc
jo
popf
outsb
icebp
sub
repz
outsl
loope
push
stos
clc
mov
jg
adc
nop
mov
jbe
repnz
or
inc
dec
and
mov
fdivrs
enter
xchg
bound
cltd
push
fsubrl
filds
out
insl
or
int
fs
mov
enter
test
lock
stos
shll
add
andb
inc
lds
ja
push
jmp
lea
daa
adc
inc
ljmp
test
pop
iret
or
lods
push
and
shll
outsb
and
jns
int
adc
mov
mov
clc
icebp
dec
popa
mov
icebp
mov
xor
pushf
jge
nop
xor
xchg
xchg
fs
push
xchg
and
stos
add
mov
push
mov
clc
in
push
dec
mov
and
pop
daa
push
adc
push
jbe
mov
int3
cli
cmpsb
rolb
lret
xor
es
cmp
push
sub
enter
insl
xchg
test
bt
cmp
pusha
test
push
cwtl
xor
mov
jo
les
in
inc
pusha
jo
sbb
jns
pushf
pushf
inc
adc
jno
mov
aam
stos
mov
xchg
push
mov
sbb
adc
in
nop
enter
adc
cwtl
icebp
cli
add
push
aaa
and
cmp
sarl
pop
bound
jae
shl
cmp
cmc
nop
lea
sub
mov
fwait
push
pop
and
ret
std
mov
addb
push
push
xchg
imul
adc
add
mov
sub
mov
fnsave
sbb
pop
sbb
pop
push
push
popf
mov
inc
mov
nop
rcr
mov
or
xor
inc
inc
iret
es
xor
sub
dec
xchg
xchg
lods
cmpsb
jo
inc
in
push
pushf
and
pop
loopne
lock
insb
rcrb
or
cmp
sub
fsubl
jo
inc
in
push
pushf
and
pop
loopne
lock
insb
rcrb
or
cmp
sub
fsubl
cld
pop
in
push
pushf
and
pop
loope
hlt
jl
insb
fstps
or
je
test
xchg
std
movsb
in
adc
subb
pop
mov
shrb
test
ret
clc
shr
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
or
pushf
adc
lods
das
mov
jle
outsb
mov
mov
or
out
jge
dec
into
pop
lods
cs
mov
int
fnstsw
or
out
jge
dec
into
pop
ds
or
popf
jle
add
loope
lret
imul
mov
pop
mov
call
cmp
sub
mulb
jno
add
xor
adc
pushf
subl
cmpsb
jmp
cli
sti
jno
cmp
fdivrl
insl
jp
push
mov
pop
cs
adc
cmp
dec
fdivrl
or
or
insb
sti
insl
pop
movsb
into
or
loopne
bound
xor
inc
mov
sarl
loopne
insl
out
sbbb
or
call
jae
sub
int3
dec
lea
push
lds
add
jle
xchg
fsubrs
fisubrs
adc
or
fmul
fnsave
scas
cmp
insl
out
jge
dec
into
pop
lods
cs
jle
outsb
std
pop
int
fwait
incl
out
testl
cmp
sub
sub
push
jecxz
repz
outsb
test
insb
lret
ja
or
stos
push
cmpsb
and
sbb
push
icebp
jg
add
fstpt
dec
icebp
jns
imul
lods
cs
jle
outsb
std
pop
int
fnstsw
or
out
jge
dec
into
pop
lods
cs
jle
outsb
std
pop
int
fnstsw
jmp
imul
pop
jns
aaa
ret
pop
scas
mov
sahf
push
mov
push
movsl
and
xchg
das
roll
test
mov
adcb
xor
dec
pop
cmpsl
pop
push
pop
ret
leave
add
lds
lahf
cli
cwtl
add
jmp
scas
out
nop
xor
adcl
pushf
stc
dec
movsl
inc
jmp
loop
inc
cmc
cmc
add
inc
sbb
sub
mov
popa
and
pop
inc
lock
xchg
jns
cmp
icebp
js
add
and
inc
sbb
mov
push
rorb
and
sarb
pop
iret
jnp
popf
or
jno
mov
cmp
dec
mov
inc
popa
cmc
sbb
mov
cmc
into
je
out
pop
and
outsl
mov
mov
cli
xor
or
sub
andl
inc
mov
mov
in
fs
or
mov
jle
adc
bound
or
cmpsb
xor
test
dec
mov
adc
lret
stos
xchg
dec
adc
sub
mov
inc
stos
dec
loopne
dec
add
jp
in
inc
movsl
and
iret
cmp
or
pop
imul
outsb
ret
pop
in
cmp
ret
mov
loop
in
cld
push
stos
and
dec
adc
mov
adc
hlt
dec
jb
sub
xor
cli
jb
aam
scas
lods
adc
xor
ljmp
fldt
dec
mov
cli
add
jmp
jg
mov
shrb
roll
repnz
hlt
dec
lds
xchg
pop
clc
leave
icebp
mov
pop
mov
xchg
add
bound
fwait
pop
cmp
mov
and
xchg
jl
fwait
out
cmpsb
pop
jge
rcr
or
lcall
dec
cs
test
cld
scas
mov
sub
xor
sub
out
jae
lods
lea
sbb
je
icebp
outsl
lods
fiadds
pop
inc
jne
js
jge
mov
nop
dec
arpl
dec
das
mov
in
mov
pop
in
icebp
add
mov
pop
dec
jno
int
add
jo
cmp
push
mov
mov
push
xor
jmp
out
add
mov
fs
add
sti
std
iret
lahf
scas
shrb
lods
jg
cmc
sbb
aad
ret
movl
xchg
rcrb
lds
fcmovnu
dec
idivb
std
leave
sub
cmp
sub
sbb
pop
sahf
xchg
fsubrp
or
dec
cmp
pop
pop
addr16
xchg
mov
xchg
jp
sbb
sahf
shrl
pop
fisttpll
add
shll
mov
ret
call
xchg
inc
adc
xchg
stc
sub
mov
push
test
test
sbb
mov
push
cmp
mov
imul
cmp
fwait
cmp
or
mov
jmp
mov
fnsave
mov
xor
and
pop
ret
clc
in
ret
jo
cmp
shl
xchg
fiaddl
xor
dec
mov
shl
es
cli
push
aam
pop
icebp
inc
adc
mov
test
and
mov
adc
lahf
stos
lea
jbe
mov
push
jnp
xor
cwtl
push
xor
out
cmc
scas
xlat
out
mov
nop
imul
xor
ret
jg
test
inc
subl
mov
pop
push
mov
outsl
xorb
cmp
push
cs
mov
ds
imul
mov
mov
xchg
mov
dec
or
dec
aam
nop
sub
push
jo
sub
push
and
imul
xchg
inc
dec
or
addr16
outsl
rorb
rorb
cmpsl
xchg
mov
push
xchg
cwtl
mov
mov
jp
mov
mov
xchg
js
roll
adc
test
cmp
adc
lret
mov
pop
arpl
movsb
out
test
bound
push
dec
lret
and
xchg
in
and
sub
and
shrb
lods
andl
xchg
cmp
inc
sbb
push
out
call
stos
mov
mov
sbb
shl
mov
iret
lods
aad
test
and
cmp
mov
push
and
jno
ss
lea
adc
lods
repnz
dec
dec
ret
rorb
cmpsl
fwait
mov
cmp
adc
repz
stos
cmpsb
jmp
nop
imul
jge
mov
mov
or
mov
repnz
popa
int3
ds
pop
bound
gs
leave
pop
push
sarb
sub
pop
xlat
push
popa
jl
shll
sub
js
andb
or
jns
jle
cmp
add
out
sub
mov
mov
xchg
arpl
push
outsl
pop
jp
ret
icebp
jno
adc
daa
sbb
fsubl
adc
push
rorb
fbld
push
sbb
aas
out
push
cmp
test
pop
ror
or
cs
shlb
cmpsl
jecxz
mov
pop
mov
add
into
bound
in
pop
iret
decb
loopne
pusha
add
fiaddl
fmull
push
sub
mov
cs
push
push
fwait
das
testb
lock
out
cmp
xchg
and
and
cmc
dec
nop
out
mov
orl
cmp
sub
adcl
sub
pop
arpl
pop
lcall
jb
mov
fwait
popa
shl
lods
in
jnp
mov
pop
push
lret
jle
rcrb
mov
cmp
inc
mov
jne
add
or
mov
out
clc
pop
jbe
sbb
scas
mov
sub
stos
mov
ja
aaa
xchg
stc
adc
pusha
hlt
jno
insb
arpl
loopne
pop
je
inc
jae
jp
xchg
pop
fnstcw
xchg
mov
push
mov
loopne
xchg
mov
jge
sbb
and
mov
je
and
mov
scas
out
cmp
fstpl
xchg
lahf
mull
jmp
lds
cli
icebp
xchg
jo
lea
jne
test
jmp
push
test
bound
into
and
cmpsl
lret
out
mov
jl
mov
cmp
dec
ret
lds
cmpsb
ffree
bound
jp
gs
loop
xchg
lods
outsb
int
xor
cmp
cmpsl
jne
add
push
lods
out
js
cmpsl
movsb
cmpsl
cmpsb
xor
sbb
mov
adc
adc
mov
outsb
std
mov
enter
push
xor
dec
push
mov
ds
jmp
dec
shll
es
pop
mov
and
jg
stc
adc
inc
pop
jecxz
pop
test
leave
fnstcw
nop
dec
lret
inc
jae
out
in
dec
popa
stos
sti
mov
add
xchg
push
and
cmc
add
pop
decl
ss
mov
repz
fstps
mov
lahf
xlat
or
jnp
xor
jge
aam
push
shlb
test
sbb
leave
test
sbb
add
cs
test
dec
das
adc
xor
cmpsl
aaa
jb
xchg
jp
lods
mov
arpl
push
push
sbb
pop
and
pop
fcompl
scas
pmaxsw
lds
dec
das
push
lods
imul
mov
adc
mov
lahf
sub
xorl
xor
mov
ret
xor
mov
jae
stc
imulb
rclb
fadd
adcb
jge
inc
jecxz
jl
mov
insb
int3
in
mov
lar
idivb
cmpb
adc
dec
in
sbb
call
mov
xchg
rcrb
fnstsw
jmp
insb
cld
arpl
subl
push
outsb
or
movsl
imulb
cmp
pop
clc
push
push
sti
pusha
sti
test
jmp
add
sbb
xchg
sbbl
in
pop
dec
push
xchg
ja
in
scas
lret
scas
mov
leave
push
sub
push
popf
jne
hlt
mov
hlt
mov
add
movsl
mov
add
lcall
dec
imul
sub
outsb
sbb
mov
ds
sbb
sbb
into
jne
dec
dec
sub
outsl
or
jmp
into
pop
pop
repz
or
in
push
test
xor
sub
into
cld
pop
mov
dec
in
dec
adc
or
js
test
stc
movsl
pop
mov
pop
pushf
fwait
dec
lea
lret
xchg
fistpl
xchg
mov
cld
aas
pop
xchg
imul
jge
inc
sub
fsubrs
mov
push
sub
stc
pop
cmpsb
cmp
jl
sbb
mov
sti
mov
mov
add
call
sbb
cmpb
fcomp
movsb
shll
ret
outsl
rorb
and
pop
iret
or
mov
fbld
imul
sub
in
mov
add
xor
cli
jge
inc
jmp
xorb
cmpsl
mov
ss
loopne
jno
out
push
lret
mov
sahf
fistpll
xor
test
cmp
jae
or
out
sbb
aad
dec
mov
or
pop
mov
test
dec
mov
add
sbb
or
jle
mov
movsl
cld
mov
sbb
je
cmp
in
mov
loope
sahf
pushf
mov
xor
pop
std
fdivl
imull
aad
mov
stos
fwait
lcall
fs
xor
ret
stc
mov
mov
pop
xchg
mov
jle
mov
jle
outsb
pop
in
mov
mov
mov
ficompl
subl
sub
inc
pop
add
xchg
fimull
in
xor
test
test
shlb
das
xor
imul
inc
sub
ja
mov
add
shr
mov
mov
xchg
add
sbb
sub
sbbb
fistpll
sub
cmp
outsl
lret
jl
fsub
roll
aam
jnp
add
mov
fidivs
nop
xor
adc
push
adc
or
test
in
out
cmc
sub
insb
pop
popf
imul
ja
repz
aam
adc
arpl
push
repz
int
sbb
cld
dec
mov
mov
call
mov
jb
sub
ljmp
int
cmp
iret
es
jo
sbb
sub
lds
fwait
imul
mov
cld
jge
jnp
push
push
pop
or
mov
adc
fdivl
mov
ret
dec
sbb
and
test
sahf
cmp
adc
mov
data16
lods
xchg
bnd
pop
decb
fwait
cmp
push
rorb
stc
fidivs
pusha
into
cmp
and
and
je
out
in
addl
out
sbb
popa
mov
mov
xor
repz
jae
rclb
aas
rcr
cmp
sbb
mov
sarb
stos
rcrl
xor
test
div
pusha
shrl
stc
and
adc
cmp
sub
cli
mov
xor
ret
lods
stos
cmova
nop
cmp
shll
push
leave
pop
cmp
xchg
pop
ja
or
mov
rolb
loop
stos
xor
xchg
popa
jle
cs
jg
lcall
pop
mov
stos
inc
or
das
jnp
xchg
rorl
dec
outsb
mov
imul
cs
sbb
xlat
push
adc
in
dec
enter
mov
pop
fwait
loope
insb
divb
dec
fsub
mov
inc
pop
loope
cwtl
fmull
les
jbe
cmp
mov
das
push
jo
and
das
hlt
ljmp
and
dec
sub
in
add
scas
and
fs
mov
fwait
stos
push
imul
jp
cmp
test
xchg
lock
mov
inc
repnz
ret
jmp
mov
call
es
fwait
cmp
icebp
xchg
jmp
cmp
lahf
inc
cmp
xor
cmp
jo
push
mov
and
cs
scas
mov
fiadds
fdivl
push
mov
lds
stos
xchg
push
imul
sub
in
dec
or
add
xor
scas
xchg
pushf
sub
shr
andb
pop
ljmp
scas
dec
repz
data16
fisttpll
in
sbb
and
inc
add
mov
ss
pop
in
pushf
cld
or
push
xchg
cmp
mov
mov
lods
es
sub
lahf
adc
add
inc
lahf
iretw
sub
icebp
ja
in
xchg
mov
js
and
mov
or
xor
leave
fs
aam
sbb
push
movsb
pop
or
dec
popa
sarl
inc
loopne
testb
or
orb
xchg
push
cli
test
adc
rorb
dec
jge
add
jae
xor
frstor
push
pushf
lahf
daa
shrl
xchg
movsb
add
and
jo
mov
shl
jg
xchg
dec
js
shrb
cwtl
fists
inc
dec
insb
int
or
xchg
sub
in
jae
sahf
pop
sahf
scas
insb
cmc
fiaddl
mov
and
lods
lock
test
dec
aad
mov
ret
fidivrl
sub
rcrl
xchg
nop
cmp
mov
sbb
xor
add
inc
pop
stc
jmp
test
outsl
or
push
pop
lcall
and
int3
test
outsl
dec
xor
dec
sbb
inc
lock
stos
shll
test
nop
jbe
mov
inc
lea
outsl
js
repz
scas
pop
mov
shrb
add
frstor
jg
call
fisubrl
xchg
sahf
scas
and
push
cs
jmp
imul
xchg
xor
int3
inc
add
gs
dec
or
movsl
pushf
lahf
out
mov
repz
pop
iret
mov
and
daa
mov
aaa
fs
outsb
cmp
in
xchg
pop
pop
adc
mov
fisubs
jo
gs
ljmp
cmpsb
push
rclb
pusha
jl
or
cld
dec
mov
push
adc
xor
add
inc
gs
repz
xchg
sahf
xchg
pop
push
push
frstor
hlt
lds
xchg
lods
arpl
push
cs
sub
inc
mov
insb
out
rolb
inc
or
and
or
and
outsl
insl
arpl
sbb
push
xchg
pop
js
lock
aam
cmp
dec
xor
push
cli
stos
fcoms
cltd
and
pop
sub
lods
mov
sbb
jmp
in
cltd
stos
outsl
sahf
outsl
xchg
es
subl
mov
adc
pop
or
push
sbb
mov
push
cs
inc
xchg
fs
push
lcall
imull
clc
fstpt
and
cmpsl
jg
pop
ret
imul
pushf
sti
cmp
daa
stos
sbb
inc
push
xchg
insb
jmp
xchg
xor
aad
inc
or
adcb
cmp
push
cmpl
xor
loopne
jne
cmp
sti
cwtl
int
sbb
pop
or
pop
ficompl
mov
ret
fwait
dec
cmp
cmp
mov
out
dec
cmp
mov
jns
lret
ljmp
xchg
sarb
movsb
int
mov
cli
adc
scas
jnp
mov
shr
cmp
mov
outsl
out
fsubs
sub
inc
pop
mov
int3
sbb
cli
mov
das
loop
int
mov
repz
push
cld
jne
dec
dec
mov
stc
aad
or
lds
sub
stc
mov
jb
nop
adc
inc
cmp
dec
mov
stc
sbb
pop
daa
out
inc
outsb
mov
or
and
jbe
outsl
xchg
mov
inc
xchg
pushf
adc
frstor
lret
xor
outsb
xchg
sbb
iret
sub
mov
jmp
mov
xchg
pop
iret
inc
movsl
mov
cmp
or
adc
ljmp
icebp
inc
idivl
push
lock
loope
int3
sub
sahf
push
in
scas
insb
or
jno
pop
aam
adc
jg
dec
add
xchg
sahf
xchg
xor
sbb
sahf
or
ret
sbb
jl
lods
push
mov
pop
in
jg
push
mov
insl
jno
mov
in
cmp
add
js
aad
lock
repnz
aaa
inc
or
idivb
mov
jmp
popa
jo
sub
adcb
ss
fwait
xlat
jns
out
inc
test
jbe
cltd
je
push
jmp
out
jno
lfs
pop
and
and
loop
fwait
pop
cmp
mov
push
sbb
fldt
imulb
push
add
jns
mov
aas
subb
jp
leave
test
inc
pusha
jl
xlat
arpl
packuswb
pcmpeqd
hlt
cwtl
mov
aas
iret
push
mov
adc
jae
pop
jecxz
rorb
mov
inc
xchg
loopne
pop
push
pushf
jl
and
jg
mov
mov
out
int
mov
inc
into
cmc
cmpsl
bound
sub
sub
pop
xchg
mov
fildll
lcall
lret
inc
leave
pop
mov
addr16
pop
xor
decb
loope
int
and
push
mov
push
pop
adc
sbb
jo
mov
push
and
ret
rcll
pop
out
jecxz
mov
inc
mov
cmc
pop
jmp
movsl
pop
mov
gs
sub
lea
mov
mov
stos
mov
cmp
mov
pop
ss
mov
out
cmp
dec
sbb
push
xchg
pop
aas
or
hlt
add
aas
imulb
and
in
imul
in
xlat
jbe
sbb
loop
out
sub
sub
mov
xor
pop
mov
xor
jl
arpl
and
fimuls
add
roll
xorb
and
je
push
or
jmp
aam
sbb
jmp
sub
push
add
add
inc
pop
loope
cs
mov
jns
les
in
fstpl
movb
in
sbb
mov
push
xlat
mov
mov
or
lahf
dec
add
das
pushf
push
pop
dec
sbb
push
lock
sbb
jmp
js
jb
mov
stos
insb
adc
push
test
xchg
not
aas
das
in
stos
add
push
push
popa
imul
rolb
and
and
lahf
dec
pop
mov
mov
inc
adcl
adc
repz
xchg
cmp
lock
aaa
xchg
ljmp
icebp
xchg
cmp
adc
lds
add
int3
lods
popf
lret
in
add
lahf
es
in
outsl
push
add
cmpb
pop
subb
call
mov
mov
lret
lea
movsl
xchg
mov
call
xchg
in
push
pop
and
pop
cmp
jp
pop
fldenv
mov
stos
add
neg
push
insb
arpl
push
and
pop
pop
push
push
aam
cli
jmp
inc
push
das
add
scas
lahf
mov
push
mov
cmp
lret
ds
jmp
sub
xchg
sbb
xchg
add
sub
in
push
sbb
andb
mov
push
jbe
pop
rorb
hlt
stc
test
sub
ret
jg
repnz
cmp
shlb
jp
fisttps
xchg
jne
out
jmp
stos
jle
mov
rcll
lods
xchg
test
shrl
data16
aas
push
xor
adc
mov
ss
push
sbb
pushf
mov
push
mov
adc
cld
cmp
or
rcll
lcall
arpl
testb
mov
orb
fwait
cmp
pushf
das
clc
stc
dec
rcl
dec
sar
push
leave
cmp
xor
les
mov
xchg
roll
add
cmp
adc
cmp
jmp
cmp
push
and
sti
mov
test
add
leave
adc
mov
sarb
sbb
test
adc
cmp
aas
xchg
popa
cs
xchg
cltd
mov
std
addr16
js
sbb
pop
aad
popf
test
push
mov
push
cmpsb
push
sbb
xor
sub
or
push
rcrb
inc
xchg
add
ret
cmp
mov
mov
lret
xchg
sbb
and
idivl
mov
ficomps
inc
xchg
pop
leave
lea
in
loopne
ds
js
inc
add
mov
xor
sub
mov
cmp
inc
sub
imul
jns
and
out
rol
ficoml
xchg
lods
jo
push
pop
out
pop
or
mov
cmp
jno
mov
fwait
cmc
jg
pop
sub
movsl
nop
insb
arpl
movsl
add
cltd
cmp
and
adc
inc
sbb
ss
sbb
and
das
inc
jb
imul
and
mov
fidivl
xor
xor
jb
filds
jge
rcrl
or
sbb
fimuls
pop
lods
cs
jle
outsb
std
pop
int
fnstsw
or
out
jge
dec
into
pop
lods
cs
jle
outsb
std
pop
int
fnstsw
or
out
jge
dec
dec
pop
lods
cs
jle
outsb
std
pop
int
fnstsw
or
out
std
fmulp
into
mov
mov
push
ljmp
and
mov
cmp
and
pop
push
xchg
mov
fisubrs
jle
pop
jmp
adc
sub
jnp
imul
push
stos
pop
fisttpl
scas
jg
dec
jmp
shrl
lahf
dec
out
add
push
iret
xchg
fistps
push
jno
sub
sub
sub
jg
pop
cli
rclb
adc
push
ret
mov
and
mov
mov
scas
pop
scas
add
mov
jb
inc
out
push
pop
aas
jbe
inc
lock
or
pop
and
mull
dec
mov
stos
pop
shll
push
sbb
das
je
inc
or
and
inc
inc
or
mov
pop
and
inc
lcall
jp
imul
stos
leave
push
lcall
adc
sahf
outsl
testb
jmp
movsb
fs
and
pop
rcr
sub
pop
sub
outsl
stos
daa
sahf
mov
les
mov
incb
push
arpl
jae
mov
jle
das
mov
scas
or
pop
out
ud0
rcr
imul
mov
mov
dec
sbb
jge
jg
inc
fidivs
stos
or
jmp
lret
sbb
cmp
ret
adc
loopne
xor
icebp
mov
push
scas
jmp
imul
push
push
fisttpll
jnp
imul
das
mov
mov
outsl
lret
jg
dec
jmp
sbb
sub
jnp
imul
das
mov
mov
outsl
lret
jg
dec
jmp
sbb
je
pop
sbb
sbb
cmp
pushf
jge
enter
adc
hlt
pop
push
push
in
sbb
and
jne
mov
mov
mov
nop
repz
push
arpl
test
mov
sub
dec
jmp
adc
xor
inc
frstor
jge
mov
popa
hlt
jg
mov
mov
and
xchg
xchg
push
call
cmp
out
popf
or
cmp
daa
mov
jl
pusha
aad
movsb
popa
cld
xchg
pop
inc
nop
in
hlt
and
std
std
andl
adc
int3
stos
push
fistpll
aad
stc
xor
xor
test
jmp
and
jecxz
sbb
jge
fs
sub
mov
jge
mov
nop
adc
dec
stc
push
aad
xor
mov
cmpsb
adc
jo
pop
or
int
sbb
out
and
mov
mov
add
aam
sbb
fsubr
sub
in
dec
push
xor
adc
mov
sub
daa
lcall
xchg
loop
lock
in
mov
inc
test
mov
shll
lahf
insl
push
xor
fs
frstor
jmp
xchg
cli
xchg
mov
mov
xchg
leave
dec
and
pop
test
or
dec
push
ret
jmp
das
pop
shlb
je
movsl
push
push
sub
in
nop
jle
xor
scas
sub
xor
negl
cmpl
and
sahf
mov
push
dec
arpl
push
das
addr16
shll
ss
mov
adc
cmp
mov
jo
sub
nopl
scas
xor
aas
subb
adc
hlt
hlt
pop
dec
ret
xor
mov
cmp
jo
test
dec
pop
lcall
xor
jns
inc
daa
dec
pop
arpl
inc
fucomp
adcb
and
es
xchg
cmpl
sbb
cmpsl
xlat
hlt
andl
adc
aad
fbld
sub
pushf
inc
or
mov
xchg
mov
push
lahf
test
add
repz
cmp
pop
mov
outsb
add
loop
sbb
jo
lock
pusha
cld
vpsravd
inc
pushf
pop
js
fnsave
loopne
mov
outsl
push
push
imul
mov
rorb
cmpsl
fcompl
imul
xor
lods
jns
ljmp
inc
hlt
mov
push
inc
xchg
call
jmp
in
popa
test
repnz
adc
lods
mov
inc
addl
mov
andb
sarb
imull
push
push
mov
adc
mov
and
cmpsb
mov
mov
ret
xlat
adc
xchg
in
cmp
cmc
pop
mov
aaa
pop
aam
sbb
and
subl
push
lahf
xchg
fs
jne
cld
out
test
fs
pop
or
lret
in
in
daa
pusha
mov
pusha
jns
pop
test
push
cli
std
jbe
scas
pop
jno
sub
aad
adc
scas
jnp
push
sbb
insb
rcr
mov
push
std
inc
mov
sbb
sbb
insl
sub
repnz
cmpl
cmpsb
xor
and
das
mov
pop
out
aas
xchg
add
loop
lock
pop
imul
pop
xor
out
cmpsl
repz
xlat
jae
mov
imul
jbe
sbb
adc
sub
cmp
xor
adc
push
jp
icebp
mov
cmp
jp
pop
push
pop
mov
in
sbb
ja
adc
cmp
pop
addr16
mov
push
ret
push
lret
inc
call
sub
mov
ret
and
cli
aaa
xlat
loopne
enter
cmp
cmpsb
sub
scas
xor
leave
ljmp
mov
je
js
jb
push
in
push
pop
daa
in
cmp
and
ds
jle
add
adc
push
xchg
mov
pop
inc
into
aad
and
pop
pusha
inc
inc
notl
adc
lret
mov
fildll
sub
loope
mov
push
daa
dec
inc
imul
packuswb
fs
in
xlat
in
hlt
or
bound
inc
adc
xchg
xor
cmpsb
lock
inc
xchg
js
lds
mov
mov
lea
jb
out
mov
pop
imul
lea
cmpsb
push
xchg
cmp
clc
push
or
cmp
add
popf
add
pop
movups
dec
inc
ljmp
xchg
mov
cmp
loope
sub
mov
dec
pop
sahf
popf
mov
dec
stos
repnz
sub
or
or
dec
in
push
pop
xor
arpl
imul
test
dec
push
inc
jl
mov
or
inc
leave
sbb
jo
imul
inc
jae
imul
push
jge
inc
add
jno
sub
and
jp
sub
popf
mov
loope
push
out
xor
xchg
pop
jnp
dec
dec
in
jmp
loopne
mov
sbb
xchg
sbbl
int
loope
clc
adc
push
sub
xchg
mov
fisubrs
cmpsb
divb
and
xor
loope
jle
jno
rclb
aaa
sbb
or
aaa
pushf
mov
push
xchg
cli
sbb
mov
roll
rcr
js
test
cs
scas
xor
or
das
push
xchg
rcrl
test
lret
sbb
jo
sahf
adc
and
ss
pusha
add
sub
xor
negl
pushf
ja
cmc
jp
dec
outsb
cwtl
iret
pop
daa
sti
xchg
xchg
loop
and
mov
into
fstpt
xor
adc
dec
nop
loope
loope
pop
cli
sbb
pusha
sti
pop
clc
mov
out
push
cmp
sub
sbb
mov
push
mov
sub
pop
fisubrl
adc
sub
mov
xor
mov
into
shlb
movsb
mov
inc
cmpb
or
inc
xchg
and
inc
mov
xor
mov
or
sbb
negb
outsb
int3
mov
add
jno
gs
or
jmp
dec
mov
out
out
rcr
add
or
gs
jge
mov
lret
iret
mov
jge
dec
sbb
into
les
push
jl
jge
aad
mov
dec
enter
int
xchg
and
repz
les
inc
sub
jno
sbb
xor
sub
mov
std
jno
cmp
mov
iret
dec
xchg
addl
lds
pop
sbb
aam
fwait
std
xchg
inc
imul
fidivl
fildll
and
sub
mov
leave
sbb
je
outsb
sub
fisttpl
cmp
pop
push
inc
data16
nop
xchg
mov
stos
xchg
jmp
ret
insl
add
mov
leave
pop
imul
fcmovb
mov
mov
outsb
cmpl
dec
leave
mov
jge
ja
xchg
pop
xchg
testl
mov
jp
bound
lret
push
ret
enter
clc
test
ja
xchg
xor
out
jp
insb
and
add
jne,pn
push
in
sbb
fcompp
or
xlat
scas
bound
sbb
xor
icebp
mov
in
divl
or
sbb
sbbl
sub
lcall
shl
test
dec
or
sub
or
fbstp
add
insl
popa
add
jmp
pop
sbb
test
and
and
testb
push
cmc
gs
fsubrs
sbb
ss
adc
int
or
outsl
cmp
icebp
iret
imul
jg
xor
mov
mov
fbld
pop
in
jae
and
cmp
mov
sbb
sbb
mov
inc
flds
jle
dec
call
shlb
sub
sub
jbe
mov
dec
push
mov
mov
ret
cltd
jp
enter
xchg
cmp
jnp
lea
into
mov
dec
push
lret
mov
push
les
ret
sar
in
fstpl
shlb
out
and
cli
cmp
jnp
in
dec
mov
sub
xor
dec
pop
xorb
les
push
iret
in
jo
push
out
adc
mov
leave
mov
into
das
pop
push
test
xor
mov
insl
imul
out
cmp
stos
xchg
jp
mov
js
addr16
cs
dec
jae
shlb
data16
fstpt
jmp
mov
mov
push
dec
xchg
jns
mov
pop
sub
mov
add
inc
stos
call
shrb
pop
mov
clc
aam
xlat
std
test
std
loope
xor
or
ss
mov
int
mov
ds
adc
xor
into
pop
jmp
imul
push
dec
rcll
roll
sub
pop
in
xor
lds
mov
sub
inc
mov
mov
push
pop
ret
lcall
into
outsl
dec
jns
cwtl
jne
add
aas
lahf
or
push
push
lea
xchg
lahf
pop
pop
mov
xlat
out
in
pop
sbb
sbb
and
xchg
xchg
add
inc
mov
mov
mov
lock
push
inc
lret
stos
add
cmc
or
pop
adc
je
jge
lods
incl
jle
mov
popa
int
jecxz
in
push
loop
jno
mov
push
cld
xchg
bound
push
pushf
stc
jle
enter
jns
rolb
sbb
popa
push
cld
insl
scas
mov
test
sahf
and
jae
mov
dec
les
daa
push
add
daa
or
fs
cmp
jne
xchg
pop
dec
stos
out
push
push
insb
pop
or
iret
rcrb
js
mov
jg
imul
cmp
cmpb
adc
bnd
cmp
repnz
fcmovu
arpl
push
imull
inc
outsb
dec
std
push
sbb
repz
jg
aas
xor
lock
mov
jle
stc
scas
sbb
jno
mov
or
pop
dec
pushf
arpl
das
adcl
and
gs
cmp
insb
jo
fcom
jmp
adc
or
pop
sahf
lods
ss
lock
std
ret
or
fisttpl
or
jp
xor
loope
or
push
xchg
sub
sbb
fsubr
ja
lods
jb
or
jmp
push
loope
into
or
aaa
dec
shlb
mov
and
mov
cltd
push
inc
push
jmp
xchg
pushf
ret
inc
jmp
sub
mov
stos
and
divb
imull
add
arpl
and
imul
adc
or
int3
pop
xchg
pusha
pop
push
es
popa
add
pop
incl
imul
sbb
in
dec
inc
mov
add
rclb
inc
syscall
int
push
enter
cmp
jno
stc
push
pushf
inc
inc
adc
negb
out
xlat
jle
call
xchg
sub
in
xlat
test
jl
and
into
frstor
mov
pop
scas
lret
imul
out
pop
add
or
cmpsl
jp
sbb
lods
mov
mov
sub
push
jl
jmp
adc
pop
pop
test
mov
decb
mov
pop
sbb
daa
adcl
mov
rorb
mov
and
popa
rcrl
mov
lods
pop
addr16
pop
sbb
lret
shl
je
xor
pop
add
dec
push
dec
aas
push
decl
inc
push
mov
fdecstp
lea
lret
sbb
adc
inc
push
int
lret
push
xor
sub
sbb
jo
mov
push
arpl
jle
xchg
movsb
adc
pushf
xchg
and
push
push
xchg
sbb
mov
mov
pop
jb
push
fwait
xor
mov
sti
xor
repnz
cwtl
mov
or
adc
xchg
scas
es
out
sub
in
jecxz
push
jecxz
push
push
in
rclb
xor
es
inc
test
cli
jmp
arpl
pop
in
ja
lods
push
dec
scas
std
inc
fnstsw
and
jbe
mov
cmc
mov
std
fisubrl
mov
iret
push
and
pop
mov
push
dec
ficompl
mov
in
nop
lods
ss
cmpsb
pop
fdivrp
pop
mov
loope
inc
mov
jecxz
rcl
into
lock
add
or
fisubrs
dec
ja
outsl
xor
int3
std
adc
cmp
xchg
mov
jl
shrb
shlb
and
jg
push
mov
call
adc
cld
adc
lea
cs
lea
inc
in
xlat
nop
and
test
xchg
fisttpl
scas
xor
dec
aad
das
cmp
lods
mov
cmp
rolb
scas
arpl
popf
into
loopne
loopne
xchg
cmpsl
or
push
testb
int3
aaa
leave
fiadds
add
mov
or
fadds
fwait
movsb
sub
jp
loopne
cmpsl
insb
and
sub
and
jle
xchg
stos
dec
ja
xor
call
ja
cmp
dec
addr16
inc
pop
pop
push
negl
loop
enter
mov
in
mov
ret
jecxz
pop
push
fisubrs
inc
push
fstpt
jle
mov
ret
jl
movsl
sub
inc
fcomi
adc
movsb
xor
cld
enter
inc
pop
stc
adc
popf
dec
dec
lret
and
leave
dec
cmp
sahf
or
and
inc
mov
jmp
test
mov
mov
sar
popf
push
mov
in
pop
push
sahf
mov
cmpsl
lods
into
inc
jns
loop
icebp
mov
in
pusha
xchg
aad
or
inc
mov
mov
jmp
lcall
mov
pop
cmp
mov
imul
lea
shr
pop
adc
arpl
push
pop
addr16
and
jae
mov
lret
fucomi
aad
and
or
inc
cli
fsubs
cmc
xlat
pop
adc
mov
jno
pushf
push
ret
hlt
imul
cmp
fimuls
push
adc
jge
dec
dec
imul
adc
pop
nop
bound
sub
je
fs
cld
pop
xor
dec
jns
mov
es
push
or
dec
and
or
lds
jae
or
jge
std
push
or
imul
mov
shll
repz
outsl
sub
sub
bound
jae
fwait
or
adc
fwait
pop
and
fildll
mov
nop
gs
dec
lods
inc
insl
sbb
pusha
scas
stos
sbbl
pop
mov
sub
mov
fcompl
mov
lock
adc
arpl
adc
push
test
jns
adc
or
xchg
es
pop
outsl
add
idivl
fistpll
sahf
inc
insb
ja
push
jns
xchg
mov
fnstcw
int
lret
cmp
shll
dec
add
sarb
movsl
inc
mov
gs
mov
arpl
push
mov
jo
xchg
roll
xor
lcall
and
pop
iret
inc
lods
js
xor
ja
clc
ficomps
sbb
js
mov
sub
lock
push
ja
lcall
dec
sub
sub
cmp
xor
or
ret
xor
call
sti
xor
ret
mov
pop
mov
rcll
fsubrl
jnp
sbb
pop
push
and
scas
out
mov
cli
pop
fs
scas
push
enter
xchg
adcl
imul
add
ret
cmpsb
sbb
mov
loopne
xchg
pop
mov
push
andl
push
xor
jl
push
jbe
arpl
mov
cli
push
push
cs
adc
scas
jae
mov
test
xor
fmul
subl
mov
popa
cs
mov
dec
dec
xchg
andb
sarl
adcl
pushf
out
or
mov
roll
leave
and
testb
leave
jne
push
pop
icebp
test
stc
xchg
xchg
jecxz
pop
jge
pop
sarl
lret
fldt
pushf
repz
fbstp
mov
mov
incb
adcb
or
cmpsb
xchg
pop
nop
pop
inc
enter
imul
lret
dec
test
lea
test
jle
dec
mov
add
push
push
mov
ja
stc
jecxz
sti
dec
or
dec
nop
sbb
sbb
adc
or
popa
and
insl
mov
pop
icebp
dec
jb
gs
cmp
mov
xchg
cmc
imul
mov
mov
dec
bound
mov
pop
rcrb
repnz
cmovp
mov
test
loopne
dec
scas
xor
sbb
test
jle
arpl
test
pop
adc
jmp
push
pusha
sub
add
cmpl
mov
cwtl
outsb
mov
in
sub
int
aam
mov
shll
sbb
aaa
inc
fs
inc
push
addr16
sbb
jnp
cmp
aam
pop
fwait
sbb
or
dec
cmp
pop
cld
arpl
inc
mov
xor
fwait
cmc
aad
cmc
rcrl
push
mov
or
gs
sub
xchg
popf
inc
fmuls
lods
gs
push
inc
test
push
insl
mov
jp
rcll
pop
pop
div
fcmovu
enter
xor
shr
pop
fstps
inc
or
outsb
add
mov
xchg
movsl
add
and
or
mov
es
aam
cmp
push
stos
jno
cmp
test
dec
lock
cwtl
lret
enter
ljmp
addl
int3
and
or
mov
leave
pop
sub
or
add
mov
rclb
mov
dec
adc
std
ds
mov
dec
mov
fsubr
pop
xor
and
dec
push
js
adc
pop
dec
imul
sbb
adc
gs
out
loop
pop
mov
pop
add
lea
push
int
addr16
adc
sub
pop
test
jecxz
mov
ljmp
bound
bound
dec
clc
inc
and
adc
outsl
mov
xchg
popa
push
int
mov
std
mov
cltd
or
out
inc
out
fildl
mov
mov
je
adc
jmp
int3
adc
insb
icebp
mov
jb
xchg
dec
adc
mov
ret
call
lcall
jo
jno
mov
mov
aad
repnz
inc
adc
inc
mov
mov
push
or
pop
ret
adc
aas
mov
mov
mul
mov
xchg
pop
loopne
adc
push
mov
outsb
stos
add
lea
or
negb
das
mov
or
test
mov
or
sub
es
out
sahf
outsb
push
mov
jnp
lds
jns
vmovlpd
pop
dec
arpl
dec
xchg
push
push
sub
scas
cmp
adc
out
xor
xor
imul
sbb
mov
pusha
jge
add
and
sti
cmp
mov
mov
or
cmp
push
push
mov
push
or
adc
mov
jmp
lcall
and
jmp
pop
arpl
mov
decb
lret
and
popa
pop
cltd
or
jno
fs
ret
mov
push
in
xchg
push
add
ret
data16
pop
sub
mov
jge
es
rcll
xlat
lds
mov
je
ret
mov
push
xchg
lods
xchg
les
and
mov
addr16
add
jg
cwtl
inc
mov
or
imul
outsb
mov
jbe
lret
loopne
out
push
mov
call
xchg
push
sahf
cmp
xor
imul
in
jb
dec
pushf
movl
out
addr16
sti
loopne
test
cmp
insl
sub
sub
mov
sub
pop
cltd
popf
add
je
pop
icebp
je
aas
mov
jns
js
dec
mov
sub
cmpsl
lock
fadd
or
loopne
xlat
inc
testl
or
shlb
jl
mov
mov
cld
pop
stos
fcmovne
and
jne
loop
aam
mov
and
outsb
ljmp
pop
push
lds
jl
ja
cmp
mov
decb
inc
cs
push
lods
pop
xlat
inc
ret
push
shrl
shld
xor
xchg
mov
push
cmc
sarl
mov
es
daa
jne
or
push
fwait
stos
xor
jmp
adc
cmp
xor
jge
dec
jp
call
sbb
movsb
shlb
cs
jmp
inc
out
lret
orl
and
or
int3
popa
cmp
ret
push
icebp
push
rorl
shl
dec
popf
jmp
jnp
sbb
notl
mov
adc
mov
into
je
jecxz
cli
out
cs
xchg
aad
in
sarl
pop
out
dec
jnp
imul
das
mov
mov
outsl
lret
jg
dec
jmp
sbb
sub
jnp
imul
das
mov
mov
outsl
lret
jg
dec
jmp
sbb
sub
jnp
push
lahf
das
mov
mov
scas
pop
fldt
jg
dec
fistpl
scas
daa
mov
pop
out
pop
jnp
jmp
fwait
das
je
adc
stos
push
add
adc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
mov
repz
or
add
pop
push
add
add
lret
add
add
jge
xor
mov
cmp
jmp
add
nop
add
add
add
add
add
add
add
add
add
add
xchg
int
roll
fadds
xchg
add
roll
add
add
add
add
add
add
bound
mov
jg
testb
add
add
jbe
mov
add
add
add
add
es
add
add
add
add
add
add
clc
add
in
pop
add
add
bound
add
add
add
ds
add
add
add
add
icebp
add
int
mov
add
xchg
add
add
xchg
add
add
cmpsb
add
add
push
add
add
add
movl
inc
add
rolb
cmp
mov
add
add
add
add
add
add
daa
add
add
xchg
bound
add
add
add
add
add
add
add
adc
nop
add
add
bound
roll
mov
add
add
sbb
push
add
mov
filds
xchg
pusha
add
add
add
add
add
add
add
add
pop
add
add
inc
add
add
testb
add
and
add
cmp
push
add
add
add
add
dec
add
and
movl
xchg
add
add
add
add
push
add
add
add
jg
xchg
bound
sub
adc
dec
add
or
dec
add
ret
add
add
add
mov
add
add
add
add
bound
mov
and
xchg
add
add
add
pusha
add
pusha
add
push
add
add
mov
jne
addl
add
add
call
add
add
add
add
add
and
mov
sub
inc
add
add
add
jmp
or
dec
add
add
add
add
dec
add
out
ret
add
add
add
sub
sbb
fldl
inc
add
dec
add
mov
sbb
or
fildl
xchg
faddl
pop
add
add
add
add
jg
nop
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
pop
mov
add
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
out
dec
add
add
int
dec
add
add
add
add
add
add
add
sub
mov
add
add
push
add
mov
mov
pop
add
loop
xor
fadds
add
push
add
add
add
add
add
sub
push
add
add
xor
push
add
add
add
add
push
add
mov
or
add
add
add
add
mov
add
xchg
add
dec
ss
sub
stc
out
lret
sbb
inc
nop
loop
sub
shll
pop
dec
mov
leave
leave
inc
arpl
sub
pop
cmp
lea
xchg
cli
mov
jle
popa
mov
ja
stos
les
add
mov
leave
mov
enter
mov
pop
fildl
push
pop
inc
inc
adc
add
leave
lock
push
and
jne
div
xor
jp
rcrl
mov
not
push
or
xor
test
ss
scas
xchg
sbb
adc
or
dec
jecxz
shll
js
icebp
xchg
imul
add
cli
inc
clc
daa
adc
cmc
sbb
nop
mov
adc
and
bound
inc
jbe
jmp
sbb
lods
jno
insb
aad
jge
pop
in
xor
dec
sub
outsl
xchg
mov
mov
cmc
aam
mov
fildll
jge
jae
pop
aas
xor
and
mov
lods
jge
scas
mov
js
lret
add
mov
cmp
or
adc
mov
jmp
cmpsb
insl
decl
jmp
push
mov
in
mov
je
push
fbld
inc
inc
pop
imul
gs
adc
mov
mov
movsl
lock
outsb
mov
push
lea
jae
loopne
stc
sahf
adc
lock
mov
jmp
or
adc
loope
imul
les
add
int
mov
aam
js
mov
sub
add
sub
int
dec
sub
jle
das
xlat
mov
pushf
push
push
ficompl
xchg
and
in
mov
xchg
mov
xchg
xlat
cwtl
adc
lods
mov
pusha
dec
scas
fwait
iret
jno
addr16
mov
stos
repz
mov
out
jne
pop
jl
sahf
inc
add
loopne
js
test
enter
mov
pop
xchg
pop
and
test
jl
xchg
ret
cmpsl
lcall
out
xchg
shll
jno
push
jge
mov
mov
ljmp
inc
fnsave
pop
stos
xchg
out
fcoml
std
lret
ret
mov
and
loopne
dec
mov
js
iret
pop
cmp
es
inc
sbb
ret
push
imul
sbb
jo
out
pop
xor
sbb
bound
pop
jmp
add
movsl
aas
int3
mov
aas
sbb
push
jle
or
adc
data16
cmp
xchg
cmp
or
imul
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
