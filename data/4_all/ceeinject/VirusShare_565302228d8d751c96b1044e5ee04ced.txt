mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
jno
popa
dec
test
and
in
rcrb
or
jnp
imul
mov
jno
popa
sti
adc
adc
xor
push
sub
sub
sbb
add
sbbl
mov
subl
loop
repz
sub
cmp
rorl
loop
mov
jnp
add
pop
ret
sbb
rcrb
std
push
test
jmp
sbb
or
mov
cmc
push
loop
imul
cmp
lret
jecxz
aaa
xor
popa
jmp
pop
into
pop
fidivrs
mov
jnp
pop
inc
mov
inc
int
sub
int
cmp
or
aam
and
xchg
cmp
dec
in
btc
add
ljmp
xor
aas
cs
hlt
insb
test
dec
mov
aam
mov
add
repz
cmp
dec
cmp
sti
pop
adcl
and
scas
dec
xor
add
jmp
jno
mov
pop
push
ds
dec
cmpsl
jb
mov
fwait
push
sti
add
xor
cmp
shll
flds
call
jae
inc
stos
dec
mov
adc
add
adc
inc
cmp
outsl
test
push
subl
es
cmp
sub
add
push
xchg
adc
dec
fildl
adc
dec
movsb
sbb
subl
adc
jmp
lret
and
shrl
rcrl
or
jnp
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
rcrl
or
jnp
imul
push
test
idiv
arpl
decl
sbb
cmp
andb
adc
and
js
mov
jbe
mov
jo
sub
pop
into
loop
xchg
test
fidivs
and
dec
sbb
dec
incb
pushl
or
scas
cmc
mov
test
mov
notl
cmpsb
insl
jo
pop
mov
inc
jne
adc
push
test
add
gs
xchg
sub
or
lret
push
xor
mov
dec
sub
js
int3
into
xor
sbb
cmp
xchg
mov
mov
es
test
or
test
imul
or
lock
lret
shl
ss
insl
cmp
shll
outsb
cld
sub
hlt
inc
lods
cli
mov
das
xchg
cwtl
aaa
out
lods
mov
lahf
addr16
and
shlb
in
lods
xchg
xchg
int3
fs
cli
mov
or
mov
push
dec
insl
fsubr
in
mov
jecxz
out
add
aad
jo
jae
adc
add
or
pop
cmpsl
mov
in
xchg
insl
dec
mov
or
in
push
adc
sub
mov
out
add
sbb
push
pop
add
sub
ss
iret
femms
loopne
call
fldl
sbb
loop
cs
addr16
iret
mov
test
ja
out
fildll
mov
in
mov
sahf
xor
ret
adc
add
mov
sub
ljmp
fldt
hlt
xchg
jb
shlb
mov
mov
sub
and
and
push
push
jo
test
mov
imul
mov
dec
dec
movsl
imul
rcrl
push
cld
hlt
nop
imul
rolb
jns
icebp
sub
pop
insl
mov
inc
mov
mov
std
mov
shlb
lret
mov
dec
xor
sti
cmp
xor
das
adc
rolb
jge
xchg
divb
or
roll
mov
push
pushf
loop
cmp
or
es
and
scas
jmp
sub
fildl
dec
add
imull
lcall
dec
bound
dec
mov
dec
loop
push
jbe
int
imul
mov
sbb
jnp
loop
sbb
jb
test
xchg
cmp
dec
lods
call
pop
cmp
ret
cmp
dec
inc
mov
lret
xchg
push
out
xor
sbb
pop
gs
sbb
pop
les
hlt
sti
push
test
in
push
sbb
xchg
push
test
dec
add
mov
push
mov
ret
xchg
les
pop
jg
mov
push
test
sbb
out
test
daa
ljmp
pusha
dec
aam
inc
jne
repz
push
jp
inc
cmp
and
das
mov
push
dec
insb
jmp
loop
lea
push
cmc
aaa
repz
inc
pop
jnp
ret
jmp
dec
xchg
sbb
jl
sbb
pusha
add
xor
lcall
nop
inc
repnz
out
nop
mov
aam
cmp
sub
sbb
lahf
sbb
repz
or
xor
adc
out
aaa
jl
cmpsb
enter
icebp
mov
int
out
nop
popf
sub
sub
mov
or
dec
imul
sub
xchg
push
mov
adc
loopne
mov
and
mov
or
inc
mov
addl
cli
add
sub
xchg
and
pop
rorb
ja
aad
lret
sti
cmpsl
call
adc
mov
mov
sub
pop
add
cli
loop
popa
shl
sub
and
les
inc
aam
out
pop
ljmp
mov
pop
xor
xchg
fstps
mov
outsb
mov
mov
test
mov
sub
and
push
jbe
jle
cmpsb
pop
vpmadd52luq
cmp
lea
sbb
arpl
movsb
fcoml
push
ja
into
inc
mov
pop
mov
test
pop
mov
mov
in
xchg
xchg
xchg
das
inc
pop
cmpsb
mov
cltd
aam
mov
adc
mov
cwtl
in
mov
sarb
add
adc
aam
xlat
and
mov
rorl
rclb
xchg
cmp
cmpsl
iret
push
push
mov
sahf
sti
pop
aas
lahf
xor
and
insb
filds
in
shl
stos
jl
out
int3
pop
ljmp
inc
sarl
mov
gs
mov
call
lret
lods
lea
data16
shrb
pop
and
or
xor
test
mov
cli
mov
lret
and
dec
push
mull
insb
adc
mov
push
adc
push
imul
cmp
jmp
cwtl
lret
add
loope
sub
sahf
dec
js
adc
cmp
lods
int3
je
inc
aas
pop
notb
sbb
cmp
loop
dec
testb
andb
adc
negb
mov
ljmp
mov
sub
cmp
and
cwtl
cmpb
imul
aaa
jmp
rclb
fistl
repz
sbbb
std
dec
incb
xchg
stos
stc
mov
aas
push
mov
out
daa
sbb
xchg
ds
mov
outsb
loop
adc
in
std
test
ret
lea
mov
aaa
popl
sub
into
rorl
cmp
shrl
fstpl
inc
adc
mov
inc
rorb
pusha
xlat
dec
mov
in
push
in
xchg
pop
dec
scas
sbb
push
iret
rolb
xchg
lds
sbb
adc
mov
mov
push
scas
test
mov
stos
int
mov
std
cli
push
scas
and
dec
loopne
iret
ficomps
out
cmp
stos
or
pop
xchg
fisubrs
movsl
mov
adc
bound
xor
ret
jb
or
dec
pop
xchg
fwait
jecxz
int3
notb
or
push
fsub
lds
sub
push
pop
jecxz
pop
adc
pop
les
addr16
pop
in
stos
insl
mov
fmulp
sub
arpl
mull
loope
mov
fdivrl
dec
and
xorb
mov
movsl
fadds
jmp
mov
sub
jp
and
adc
lds
test
js
add
dec
outsb
xor
sub
ret
or
outsl
sahf
std
movsl
jge
push
sbb
in
sub
lods
cmp
or
out
cmp
sbb
aaa
popa
mov
repz
sbb
icebp
add
pushf
mov
imul
cli
andb
call
xlat
popa
push
and
sbb
jb
jg
in
adc
sbb
and
ja
adc
or
int
pop
adc
cmp
jle
mov
sbb
stos
xchg
xorb
mov
lods
sahf
rcll
loop
mov
shlb
lods
mov
push
ficomps
dec
lret
push
inc
jae
pop
cmp
shrl
inc
xchg
std
adc
mov
xchg
mov
lret
jno
ds
test
cmp
jo
cmp
rcll
popa
cmp
add
mov
sti
jno
addr16
pop
ja
cs
data16
movsl
push
int3
imul
test
jne
mov
pop
dec
out
int
shrl
push
in
loope
jge
sbb
inc
cltd
mov
mov
pop
out
lcall
out
repz
add
negl
mov
xor
pusha
cmp
xchg
and
adc
push
or
inc
pop
arpl
pop
jmp
add
cmp
jmp
std
add
add
jge
mov
es
dec
aam
xor
loope
jle
push
xor
mov
inc
lcall
cs
fstp
or
jo
adc
loope
cmp
cltd
adc
inc
nop
imul
mov
cmp
mov
jle
xor
mov
movsl
ret
or
mov
or
jge
std
mov
adc
lgs
pop
loope
sub
xor
or
lods
inc
mov
loopne
popf
mov
jns
mov
lea
pushf
ds
inc
cld
push
push
incb
das
mov
jo
push
insl
in
or
jecxz
addb
cmpsl
or
or
jno
out
mov
sahf
ds
jo
push
call
jae
lock
scas
jl
mov
push
push
mov
cmp
xchg
pop
and
dec
test
imul
mov
ret
mov
add
imulb
mov
scas
cmpsb
pop
mov
aam
popf
pop
std
into
scas
and
push
and
sub
fnstsw
mov
loop
mov
jns
cmp
gs
pop
push
push
int
movsl
data16
lds
out
push
imul
pusha
and
lods
jo
ret
test
mov
mov
mov
std
or
mov
scas
das
add
dec
es
mov
mov
ret
pop
pop
bound
push
pop
dec
xchg
mov
lahf
fists
shll
sti
addr16
push
sub
das
aam
pop
addr16
cli
shl
jl
jo
aaa
inc
and
sbb
jne
inc
lret
test
add
sbb
mov
in
or
xchg
mov
dec
xlat
mov
mov
cwtl
dec
add
add
mov
cmpsl
cltd
jmp
es
xor
sbb
sbb
icebp
cmpl
mov
insb
adc
pop
sahf
or
jae
pop
imul
dec
push
dec
int
adc
lock
rol
shll
movsb
mov
xchg
jno
mov
mov
shll
repnz
push
movl
mov
lock
adc
jno
jmp
push
jne
xchg
fwait
adc
jnp
pop
and
inc
pop
xchg
inc
pop
pushf
mov
scas
loopne
loop
sbb
pushf
div
sbb
jecxz
pop
mov
add
outsl
cmp
or
jns
sbb
push
clc
mov
call
in
loope
or
imul
sub
cli
outsb
sbb
xor
test
or
repz
fistl
cmpsb
or
xchg
push
xor
sarb
mov
push
stos
cld
inc
in
out
out
mov
mov
cld
pop
ror
aam
data16
sub
dec
cli
das
cmp
jp
or
aaa
shlb
and
push
das
in
inc
cmp
cmp
aaa
scas
outsl
cld
lret
ficompl
insb
outsb
cld
rorl
mov
mov
xchg
loopne
jb
mov
sbb
or
dec
scas
addb
cmp
lret
fyl2xp1
lods
enter
push
fwait
cmp
bound
das
int3
add
rcl
jmp
push
mov
jecxz
cltd
into
addr16
clc
push
cli
pop
xchg
test
push
sbb
adcl
movsl
jmp
adc
lods
push
jbe
cmp
sub
xchg
pop
out
sub
mov
jo
cmp
push
imul
imul
nop
sub
fildll
loopne
int3
add
fistpl
and
sahf
mov
push
sahf
in
js
mov
nop
jns
shlb
in
add
out
dec
adc
mov
shl
sub
shl
movsb
pop
push
int
pop
pop
jg
call
mov
xor
dec
test
les
mov
push
aaa
mov
fisubrl
dec
xchg
scas
xor
mov
or
xchg
mov
clc
or
xchg
insl
pop
and
mov
inc
sbb
mov
mov
xor
mov
les
jmp
test
in
adc
pop
push
pop
sarl
or
lods
cs
cmp
popf
pop
pop
sub
aam
ljmp
cmp
fdiv
out
inc
cmpb
or
lcall
ficoms
jmp
pushf
adc
cltd
pusha
dec
push
pop
xor
mov
mov
cmp
fcmovnbe
inc
push
cli
lock
inc
xchg
std
mov
ret
arpl
pop
dec
frstor
push
xchg
pop
push
adc
ds
les
mov
ljmp
aam
pusha
push
cs
cltd
mov
jns
adc
icebp
repnz
mov
pop
mov
leave
cmp
sbb
jp
shll
mov
lea
lcall
sahf
and
fwait
lea
push
insb
or
push
ljmp
loop
std
and
inc
pop
adc
sub
bound
ficompl
push
pop
cmc
mov
std
imul
sub
inc
aad
in
and
adc
push
or
push
pop
lds
or
jnp
rol
sti
call
movsb
adc
lock
shl
in
loop
leave
push
pusha
mov
movl
pop
pop
pop
jg
xor
int
mov
ljmp
pop
sub
jb
mov
js
fldl
and
mov
mov
lcall
mov
xor
mov
subl
leave
pop
mov
pop
icebp
outsl
xchg
outsl
and
sub
inc
dec
in
test
or
out
call
in
ss
jmp
hlt
leave
scas
dec
test
shl
bound
shll
pop
js
shlb
xchg
out
xchg
or
jge
fistl
add
mov
popa
ss
xor
mov
xor
call
sub
mov
test
add
test
iret
inc
icebp
icebp
test
pop
push
cmpsb
push
lds
stos
imul
and
scas
sub
inc
jns
inc
imul
jl
fdivr
decb
stc
mov
xchg
enter
sub
pop
inc
fincstp
in
sub
stos
jnp
ljmp
in
andb
or
dec
mov
dec
mov
gs
push
xor
mov
adc
pop
shrl
or
cltd
pop
mov
sub
add
pop
push
push
dec
mov
pop
fs
inc
int
jns
test
dec
repnz
fisttps
mov
scas
push
ret
mov
jge
rolb
pushf
stc
fldl
mov
pop
std
andl
pusha
xchg
xchg
jo
icebp
xor
add
mov
xchg
mov
jg
jb
subl
cmpsb
std
sbb
test
lcall
adc
sub
loop
es
movsl
in
cmp
jns
shr
lods
cmp
jge
xor
or
lods
lret
cmc
mov
or
jecxz
mov
ja
mov
and
adc
push
movsb
in
pop
ss
es
orw
jno
insb
pop
mov
inc
push
lret
or
mov
mov
mov
xor
push
xor
cli
mov
jg
loopne
shrl
shrb
push
sub
xorl
push
lahf
mov
outsl
mov
mov
clc
mov
cmpsl
call
jg
jne
in
jo
jle
fstpt
test
pop
ret
pop
sarl
lahf
adc
cli
push
lret
mov
mov
in
mov
in
fldenv
adc
mov
dec
push
jns
repnz
in
dec
xor
into
xchg
lock
lock
dec
dec
movsl
insb
mov
cmp
mov
cmp
inc
fcmovnu
iret
xor
gs
push
data16
lret
pop
in
inc
ja
movsl
mov
sbb
push
xor
adc
adc
enter
and
jne
das
dec
decl
add
stc
mov
leave
movsl
std
push
stos
cwtl
sub
in
outsl
sbb
adc
mov
cmpsl
scas
mov
das
dec
push
adc
cltd
dec
ret
mov
pop
stos
xchg
in
loopne
aam
fisubl
push
loop
ret
push
hlt
and
pop
pop
icebp
lea
lea
xor
cmp
xchg
pop
inc
lret
fcmovu
pop
push
push
or
mov
or
das
xchg
sarl
mov
rep
push
cmp
pop
call
test
mov
cli
in
pop
divl
scas
dec
sarb
addr16
mov
jno
mov
push
push
scas
mov
test
jge
mov
sbb
jge
mov
dec
push
xchg
jae
inc
pop
sub
sbb
ret
je
test
push
and
data16
jns
movq
xor
jae
add
mov
and
repnz
xor
and
aam
add
cmpsl
push
rolb
lret
add
inc
jg
fcoml
test
mov
cmp
cmp
sbb
jecxz
pop
cmp
pop
add
sub
push
mov
subb
cmp
pop
cld
mov
repnz
ja
ljmp
lret
shrl
pop
movsl
orl
lahf
jmp
lds
mov
push
push
or
mov
xchg
sbb
cs
insb
je
ljmp
inc
out
inc
addr16
add
sbb
xchg
sub
adc
mov
popf
popa
pop
shlb
imul
mov
or
insb
sub
daa
cmp
ret
cli
lcall
push
cli
daa
jecxz
adc
mov
test
pop
mov
and
or
sbb
jg
icebp
add
inc
xchg
gs
ret
in
out
mov
pop
sbb
mov
test
ljmp
dec
add
insl
data16
addr16
int
inc
cltd
sub
and
add
insl
icebp
xor
mov
pop
leave
lea
cld
jo
adc
sbb
pop
and
push
imul
xchg
imul
fsubrs
cmpb
imul
fwait
mov
jecxz
mov
mov
lock
lods
cmp
inc
mov
in
loop
not
mov
aaa
daa
inc
shrl
inc
jmp
aas
outsl
js
lret
and
mov
loop
repz
mov
mov
xchg
lcall
xchg
xor
jb
pop
adcb
or
adc
pop
xchg
and
dec
add
mov
loop
mov
scas
repnz
lret
mov
js
aaa
popa
daa
cld
ljmp
in
test
sbb
outsb
mov
ljmp
rolb
and
sbb
and
or
fs
adc
sti
daa
adc
scas
mov
jno
lock
adc
cmp
cmpsl
jnp
out
lds
lea
jo
add
xchg
xchg
popf
out
xchg
xchg
cs
and
das
in
cmpl
pop
inc
xor
aas
out
dec
popa
repnz
mov
dec
cmp
notb
sub
fnstenv
imul
stos
test
push
jbe
lods
xor
jle
into
lahf
test
push
popf
ljmp
imul
or
sbb
outsl
jp
fs
in
adc
imul
rcll
jbe
adc
aas
or
jmp
or
jl
cmp
cmp
mov
rcll
sub
jg
in
or
pop
flds
lds
or
jmp
xchg
cli
sub
dec
mov
pushf
mov
in
repnz
and
xor
enter
aam
mov
cltd
xchg
xor
and
frstor
mov
lods
pop
mov
pop
out
jns
pop
in
pusha
mov
lret
mov
mov
mov
pop
push
dec
test
lahf
xor
das
shll
cmc
movlps
mov
mov
movsl
mov
and
mov
or
and
ds
in
mov
push
cmp
mov
rcr
jne
mov
adc
les
xchg
sub
mov
push
shlb
jbe
iret
jns
sbb
and
lret
adc
outsb
mov
mov
pop
es
pusha
inc
pop
das
cmp
cltd
movsl
rclb
or
lahf
mov
pop
pop
mov
jb
dec
repz
out
jne
test
je
fcomi
inc
inc
mov
lods
outsl
push
cmp
daa
mov
test
mov
mulb
sub
push
popa
add
mov
xlat
xchg
roll
lea
dec
enter
cmc
sbb
sbb
das
cs
mov
push
add
sub
in
popf
movsb
popa
ljmp
inc
xor
stos
addr16
or
xor
ja
or
bound
pop
aam
mov
xchg
lods
js
rorl
sbb
in
gs
mov
sub
cmp
in
arpl
std
xchg
add
aaa
jne
xchg
mov
jo
and
push
add
push
mov
aaa
fsubs
dec
ret
pop
sub
inc
lcall
data16
pop
adc
lock
sub
lret
ds
ror
sub
cmp
inc
adc
cmp
or
shlb
loop
jne
or
lods
mov
mov
out
dec
pop
inc
or
nop
das
leave
xor
dec
test
test
push
sarl
xor
mov
and
jae
shll
mov
jno
popa
sti
adc
add
xor
and
shrl
rcrl
or
jnp
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
rcrl
or
jnp
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
rcrl
or
jnp
push
pop
mov
movsl
mov
jne
popa
stc
adc
add
dec
loope
rcl
imul
jecxz
movsb
into
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
popa
nop
jno
add
xor
fildl
loope
icebp
pusha
xorb
mov
mov
inc
mov
in
popa
nop
jno
add
adc
and
push
and
xor
popa
loopne
icebp
and
jo
inc
mov
inc
push
adc
jno
add
xor
repnz
movl
into
or
stc
adc
mov
sti
xor
inc
add
and
pop
push
jne
inc
dec
inc
add
adc
pushf
dec
test
inc
test
in
in
xchg
sub
inc
sbb
xchg
cmc
mov
mov
dec
mov
enter
jbe
xor
adc
jle
lods
mov
jge
int3
fadds
jl
pop
add
adc
sub
shll
cmp
out
je
xchg
jo
inc
aam
mov
cmpl
decb
pop
xor
ds
add
push
icebp
and
leave
pop
push
pop
sbb
jns
dec
sbb
adc
xor
mov
roll
dec
sti
inc
out
andb
add
mov
shlb
xor
shrl
sub
push
test
and
xor
inc
rolb
mov
enter
adcl
shll
cmp
mov
push
xor
movsb
bound
sbb
pop
pop
sub
adc
int3
add
add
add
or
and
xor
shll
add
adc
pusha
xorl
mov
popa
nop
jno
add
adc
and
xor
shll
add
adc
pusha
xorl
mov
push
push
mov
hlt
sbb
dec
rol
iret
arpl
xchg
cli
cltd
sbb
out
loope
out
mov
and
jl
xorl
cld
decb
bound
push
les
xchg
dec
sub
push
ret
xlat
xchg
xorl
lods
dec
push
push
mov
add
mov
adc
xchg
sub
mov
lcall
sub
pop
dec
push
addl
rcrb
jb
push
stc
cmpsl
fidivrs
and
test
or
repnz
mov
dec
adc
adc
sbb
rorl
and
data16
lds
pop
adc
xor
enter
insb
xor
jae
les
xor
xchg
mov
inc
xor
or
sub
inc
push
cld
xor
fnstsw
jge
imul
js
jo
adc
call
sub
out
sti
imul
shrb
shl
inc
pop
popf
int
pop
jp
out
dec
mov
adc
mov
ds
bound
sub
push
push
stos
pop
adc
xlat
outsl
paddw
dec
push
mov
test
cmc
jo
stc
hlt
adc
loopne
lret
sub
mov
mov
lea
fadd
and
mov
lcall
fs
xor
pop
pop
inc
push
mov
leave
push
fstl
sbb
xor
jmp
jl
fsubr
xor
fdivs
loopne
les
movsl
insl
pop
loopne
clc
sbb
pop
xor
push
push
dec
pop
fwait
dec
mov
out
mov
lret
in
sbbl
add
and
cmp
pop
or
lret
inc
loope
lock
insl
shll
js
in
into
ss
add
dec
pop
addr16
std
adc
sub
xchg
enter
or
push
jle
gs
popf
daa
and
scas
mov
pop
js
test
jns
aam
call
sub
xor
dec
cmp
pop
pop
fdiv
jp
in
lahf
push
push
mov
popa
subb
inc
outsb
push
add
pop
push
add
andb
in
data16
push
in
add
insl
cltd
inc
sbb
std
cmpsl
dec
insb
push
sarl
lret
push
lds
or
mov
dec
push
sub
xor
out
add
mov
imul
cmpsl
mov
jl
sarl
mov
push
dec
mov
testb
rcll
dec
adc
pop
std
sbb
sbb
lret
repz
pusha
jns
cmovle
hlt
pop
das
and
inc
and
out
fucompp
push
cld
movsb
mov
push
test
or
and
cli
es
lods
push
test
int
outsb
out
pop
jo
sti
rorb
into
aad
mov
fidivs
dec
and
xor
data16
add
call
in
xor
and
dec
les
cwtl
dec
dec
adc
sub
mov
data16
push
adc
inc
inc
jmp
cmp
push
test
popa
loope
push
push
sbb
in
mov
lock
mov
ret
xchg
push
cld
lret
ss
or
js
shl
mov
stos
inc
fs
push
stc
dec
lods
jecxz
out
push
mov
ret
jno
in
lea
int
movsl
out
xor
shll
or
jb
bound
sbb
aam
clc
fistpll
dec
pop
push
shlb
stos
loopne
dec
fsubs
inc
aad
pop
mov
orb
cld
pop
sub
push
dec
mov
aas
hlt
adc
rcll
std
int
mov
or
das
jne
cmc
test
push
jl
dec
pushl
insb
daa
es
and
cmp
in
insl
pushl
inc
sbb
push
push
fisubrs
sbb
sub
push
pop
movsb
cwtl
sbb
pop
mov
mov
xchg
pop
lahf
dec
mov
push
mov
ljmp
sti
daa
outsb
das
rclb
xchg
push
gs
cmp
into
pushf
push
push
scas
push
push
jo
stos
movsl
iret
sti
int
nop
mov
pop
jno
sub
fadds
lds
inc
mov
mov
mov
and
jecxz
lds
cmp
cmp
jbe
mov
lcall
movsl
dec
mov
cmp
cmc
imul
mov
and
sub
dec
push
xchg
aam
decl
pop
repz
cwtl
imul
sbb
cmpsl
lahf
sub
inc
pop
int3
push
push
scas
cmpl
pminsw
enter
ja
xchg
sti
mov
or
popf
out
pop
xchg
sbb
jp
fldl
je
pop
xchg
in
mov
adcl
out
js
push
sub
inc
add
cwtl
mov
push
jbe
int
adc
xor
sub
loope
out
jae
sub
add
xchg
mov
andb
mov
cmp
cmpsl
andl
xchg
pop
dec
or
jne
popf
lods
repz
dec
clc
mov
and
pop
add
push
outsb
push
pop
adc
repnz
sahf
dec
out
ds
sbb
test
je
inc
mov
xor
test
pop
mov
shrl
inc
add
jg
lret
repnz
and
out
and
cmp
fsubrl
sub
sbb
inc
xor
push
test
in
jp
arpl
pop
or
dec
add
mov
mov
mov
mov
sbb
mov
xchg
push
push
dec
loop
dec
add
or
movsl
cmpsl
cmp
fidivrs
mov
cmp
pop
jmp
es
pop
push
std
xchg
inc
in
push
add
jnp
jns
inc
and
insl
stos
js
push
aaa
movsb
sbb
or
lock
xchg
lahf
jbe
test
push
and
pop
xor
add
rcrb
je
mov
pop
loop
insl
scas
cmpsl
lret
push
mov
outsb
test
push
or
lcall
push
xor
adc
push
sar
xchg
lea
push
mov
cmc
inc
loop
lahf
cs
fbstp
lretw
inc
adc
sbb
test
dec
jb
mov
xor
icebp
and
pop
fisubrl
mov
sub
outsl
cmp
sarb
shll
cmp
lea
pop
enter
jg
roll
loopne
mov
fistpl
in
xchg
lcall
mov
add
stc
xor
jle
aas
jg
and
sarl
rolb
push
jnp
cmc
pop
mov
mov
inc
nop
fistps
pop
ret
rorb
stos
push
rclb
lret
out
scas
mov
and
adc
adc
sahf
subb
lcall
pop
sti
add
pushf
pop
insl
int3
mov
jmp
addr16
mov
fucom
pop
dec
test
aam
and
xor
lret
cmp
scas
test
popa
jb
loopne
in
jl
cmp
adc
xor
test
mov
shr
jmp
inc
adc
jecxz
gs
add
and
push
pop
dec
inc
in
cmpsb
adc
xlat
xchg
push
into
cmp
scas
cmp
add
push
pusha
or
mov
int3
jae
mov
nop
dec
aas
or
adc
mov
xchg
xchg
mov
dec
xor
icebp
nop
mov
mov
popa
xor
in
mov
or
lds
xchg
jb
fmul
mov
push
jb
inc
int
loopne
push
popa
arpl
pop
sub
or
pop
adc
pop
imul
stc
add
addb
fistpl
xchg
std
xchg
inc
es
fidivrs
mov
add
mov
mov
stc
pop
jb
stos
xchg
jbe
adc
lahf
adc
mov
adcb
sub
roll
jnp
movsl
xchg
aad
jns
lret
int3
or
hlt
xor
sahf
xor
movsl
xchg
fwait
in
mov
ficoms
sahf
aam
mov
daa
imul
incl
sbb
lcall
shrl
jnp
add
lods
divl
roll
pop
sbb
mov
imul
mov
mov
xchg
or
lock
test
or
or
mov
int3
cld
fidivs
mov
inc
sub
and
sbb
adc
cmp
xchg
jecxz
adc
aas
popf
push
sbb
mov
pop
out
push
aaa
sbb
in
sub
push
and
clc
rorb
inc
adc
dec
mov
sub
push
in
mov
mov
and
push
ja
mov
cmp
pusha
fadd
push
pop
loop
xchg
fdiv
pushf
cmp
popf
and
cmp
push
pop
lret
es
andl
loop
mov
adc
mov
adc
cmpsb
jl
popf
loope
gs
fisubrs
jbe
fimull
xor
xor
xor
cmp
cs
test
movsl
stos
mov
jnp
ja
fimuls
push
icebp
es
mov
sub
adc
cli
sub
fdivrl
xlat
pop
loopne
clc
pop
loop
inc
xchg
sub
adc
icebp
es
in
addr16
ljmp
out
xor
pop
push
and
aaa
add
sarl
jle
lock
shrl
mov
pop
stos
xchg
lcall
daa
mov
cmp
jl
and
fprem1
fucom
imul
ret
and
jne
in
mov
imul
mov
pushf
inc
lds
jno
xchg
movsb
push
sahf
outsb
pop
call
add
mov
aam
lock
pusha
push
sbb
mov
js
push
stos
hlt
std
mov
jmp
sbb
das
or
pop
jle
mov
insb
mov
fwait
stos
push
or
lock
inc
pop
jne
jno
push
mov
sub
in
xchg
loope
or
daa
xchg
push
test
sub
outsl
adc
push
fcompl
fsubrp
out
iret
into
cmp
hlt
and
flds
pop
insb
scas
jmp
rorl
adc
pop
push
mov
xchg
mov
dec
mov
push
stos
sbbb
fldt
adc
jo
shlb
push
imul
out
mov
aad
push
mov
std
pop
add
mov
xchg
cmp
loop
and
jmp
pop
adc
das
ret
std
inc
in
repz
fwait
xchg
mov
push
stos
stc
hlt
bound
cld
loopne
iret
jno
icebp
mov
jmp
add
mov
sub
cld
jae
pop
jno
pusha
mov
ret
push
or
aad
mov
out
cmp
into
add
mov
pop
dec
in
mov
cld
out
int
in
jb,pn
and
and
cs
adc
mov
fwait
cmp
add
or
in
xchg
cmp
dec
shll
dec
pop
dec
mov
rolb
pop
xchg
stos
or
movsb
xor
jle
popf
jns
cmp
out
xchg
cmp
test
mov
push
jmp
jb
movsb
push
gs
add
add
out
push
push
jae
test
cld
mov
push
outsl
mov
xchg
popa
bound
sub
pop
push
push
xchg
add
adc
out
pop
inc
fisubs
aad
jae
not
sbb
jl
lods
sub
xchg
or
fsubrl
add
mov
xor
mov
mov
fsubrs
into
lret
pop
loop
adc
outsl
sub
dec
loope
pusha
stc
jae
push
xor
jg
and
push
xor
fildll
stos
sub
ret
cmp
or
lcall
mov
add
loop
inc
leave
enter
and
or
push
imul
mov
mul
pop
inc
jnp
xadd
pop
sub
mov
ds
pop
loope
je
rcll
outsl
dec
xlat
jae
pop
add
pop
mov
test
nop
test
xchg
add
sub
fstpt
and
inc
cmp
sub
cmp
mov
sub
adc
push
jmp
sbb
push
inc
ud2
das
dec
repnz
cld
mov
push
mov
in
imul
inc
vcvttpd2dqx
and
inc
jns
addb
xor
addl
test
lea
sbbb
xchg
cmpsl
call
ret
push
mov
push
pop
loopne
sub
sbbb
scas
inc
fwait
js
icebp
test
or
nop
lea
inc
int3
jle
repz
jns
sbb
je
adc
out
rcll
addr16
call
int3
fcmovnu
les
add
add
aam
jns
xor
mull
fcomip
and
neg
push
jb
mov
or
lock
adc
sbb
and
outsb
pop
or
call
lahf
lret
sbb
es
aaa
mov
xor
jns
xor
or
shrl
add
cmp
testl
negl
sbb
cwtl
ds
mov
jbe
mov
mov
add
aam
push
divb
mov
xchg
mov
pop
out
roll
xor
xor
iret
sbb
push
mov
sbb
ljmp
mov
mov
dec
stc
and
fwait
lret
gs
xchg
insb
or
or
mov
jns
pop
ss
xchg
lcall
pop
mov
lods
sbb
push
out
add
pop
pop
dec
jo
call
scas
hlt
mov
push
mov
fcmovnb
repz
test
or
add
jl
push
in
divb
sbbl
xor
data16
ss
clc
jle
arpl
sub
jle
jg
ljmp
orl
xor
adc
ret
sub
xlat
mov
mov
test
cs
cmp
hlt
push
push
cmp
add
dec
andb
and
test
fcomip
repz
test
sbb
outsb
mov
jb
mov
orb
roll
xorb
mov
paddd
add
sti
sbb
mov
push
jg
addb
jbe
push
dec
xorb
testl
sbb
lret
clc
sbb
or
push
ja
jae
pop
out
stos
aad
cs
mov
scas
dec
mov
sbb
fbstp
cltd
push
das
mov
push
pop
or
sub
mov
or
aaa
cwtl
enter
mov
shr
movsl
push
add
pop
xchg
inc
mov
pusha
pop
outsb
pop
sbb
dec
andb
lret
add
cmp
ljmp
mov
push
push
push
nop
mov
pop
aam
adc
sbb
mov
dec
bswap
dec
xchg
or
aad
adc
cmpb
insb
loop
mov
mov
mov
xchg
stos
loopne
inc
in
cmp
stc
dec
dec
cwtl
push
and
dec
fstpt
mov
mov
xchg
pop
pop
inc
xor
pop
lea
jnp
pop
pop
pop
fbld
jae
and
testl
push
xor
pusha
push
std
movsl
dec
mov
jne
nop
pop
outsl
cmp
pop
mov
fisttps
addl
mov
outsl
hlt
insl
hlt
loope
add
jae
orb
loopne
jo
andb
cltd
jnp
lahf
pushl
lods
push
rcrl
outsl
lcall
cmpsl
es
xor
jge
rcrb
scas
jb
in
push
jle
jecxz
and
inc
mov
ja
push
mov
push
and
sti
adc
add
fsubrp
sub
popa
pop
xchg
inc
push
loope
mov
stos
adc
sbb
outsl
or
sub
xor
xchg
add
and
insb
mov
xchg
into
in
mov
ss
bound
lcall
sbb
mov
push
add
xchg
repnz
into
int
cmpl
xor
std
push
mov
cli
pusha
push
das
pop
insl
pop
out
cltd
sub
call
xor
in
dec
aad
pop
cmc
mov
repnz
outsl
sub
mov
or
pop
fdivp
jns
and
mov
xchg
push
ljmp
push
faddl
enter
jb
mov
mov
adc
lcall
jnp
fstpl
fisubl
call
cmp
iret
repnz
shlb
lods
jp
hlt
mov
mov
inc
pop
mov
mov
setbe
gs
fcmovne
inc
or
pusha
jbe
adc
mov
dec
mov
enter
neg
push
and
sbb
adc
adc
mov
hlt
mov
aad
cmc
add
adc
inc
in
and
addr16
adc
and
or
movsb
push
jmp
adc
xchg
mov
mov
inc
imul
mov
lods
dec
adc
movsb
adc
pop
scas
fldenv
out
adc
insb
mov
loope
mov
fisubl
insb
test
iret
or
inc
mov
test
or
pop
mov
and
lret
ljmp
lods
sarb
scas
and
cmp
add
inc
mov
pusha
imul
iret
mov
jp
mov
stc
push
lcall
and
xlat
or
inc
pop
test
lds
mov
out
sub
mov
outsb
add
inc
inc
mov
cmpsb
fists
add
cmp
xor
je
ljmp
aad
fwait
xor
mov
je
data16
dec
add
fstpt
mov
and
subl
mov
mov
xor
or
xchg
mov
lods
nop
hlt
jne
pushf
rorl
xor
ret
sub
lods
jg
mov
fwait
push
loope
jecxz
jl
jmp
idivl
mov
lock
xchg
leave
sbb
pop
adc
test
mov
mov
push
add
sbb
js
jae
fildll
mov
and
shl
cmp
imul
xor
xor
jg
inc
cmp
sbb
mov
out
pop
sbb
std
push
shll
adc
les
dec
out
cmc
sub
and
lds
pop
in
aam
pop
pop
int
mov
ds
movsb
push
mov
adc
loope
mov
cltd
insl
repz
std
call
cmp
push
push
sub
push
scas
sub
and
mov
je
mov
je
movsb
test
sti
cmp
push
jne
ficoms
into
inc
test
insb
jl
or
xchg
outsl
ja
xchg
insl
and
pop
mov
dec
dec
mov
inc
fcmovnbe
or
pop
lds
inc
and
hlt
testb
sub
inc
xchg
je
sti
outsb
add
xchg
cld
shl
mov
push
jg
or
mov
and
ret
xchg
push
scas
or
aaa
push
jns
clc
mov
sbb
add
mov
ja
dec
cmp
adc
inc
adc
push
nop
inc
pusha
les
adc
loope
mov
in
mov
adc
outsb
adc
push
je
fwait
or
mov
lds
int
xor
adc
mov
into
jne
shlb
dec
cmp
clc
adc
pop
mov
mov
push
test
lea
mov
fmul
fcompl
xor
imul
and
mov
or
mov
mov
and
cmpl
lea
movsl
ds
aas
jmp
jle
add
push
add
xchg
jns
cmp
ja
mov
lret
mov
pop
cmp
lea
dec
inc
into
jno
xor
xor
fdivl
bound
cld
and
mov
mov
fdivp
jg
popa
xor
fcoms
incl
jns
xchg
cmp
cld
addl
adc
test
mov
cs
add
jl
ret
popf
push
pusha
dec
fcomps
dec
orl
cmp
pop
mov
jge
loope
and
lock
jl
xchg
add
sbb
loop
lahf
sbb
mov
dec
xlat
xchg
sarl
jns
adc
sahf
xchg
rorb
dec
pop
pop
jp
pop
cmp
or
jle
jge
rcll
leave
dec
imul
xchg
imul
fsubs
and
xchg
xchg
movsb
xor
sub
out
push
xchg
and
mov
mov
enter
lcall
shll
pop
pop
bound
or
gs
xchg
cltd
inc
in
sbb
mov
mov
pop
loope
aaa
cmp
daa
gs
das
cmp
push
ljmp
inc
or
jg
mov
bound
std
fxch
enter
pop
inc
aas
out
shrl
popa
nop
jno
add
adc
and
xor
shll
add
adc
pusha
xorl
mov
popa
nop
jno
add
adc
and
xor
shll
add
adc
pusha
xorl
mov
popa
nop
jno
add
adc
and
xor
shll
lock
icebp
pusha
andl
mov
in
push
fisubl
jno
add
adc
and
and
iret
jnp
loope
xchg
or
outsb
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
cld
filds
scas
rcrl
insb
dec
jl
or
sbb
sub
cmp
out
fdivr
in
iret
cld
fisttps
mov
jg
dec
jl
or
js
sub
cmp
push
out
pop
ljmp
cmp
pushf
scas
aam
orb
pop
or
inc
push
lea
filds
fnstcw
jg
pop
or
mull
xlat
push
das
imul
pop
fsubrl
cmp
xchg
pop
xchg
cmp
cmpxchg
out
int3
repnz
movsl
jl
add
in
aas
fdivrs
or
mov
psllq
xchg
aas
fisttps
movsb
fistl
or
mov
pop
nop
jo
subl
ret
push
dec
fwait
and
jae
pop
ss
nop
or
xchg
mov
pop
jl
aas
jl
dec
loope
push
jb
fistps
add
inc
fidivl
jl
mov
sbb
imul
fdivr
in
iret
nop
fisttps
add
mov
dec
bound
das
add
sub
pop
jbe
jmp
mov
loop
jmp
lret
sub
sub
pop
pop
jbe
push
int3
mov
stos
aaa
ret
std
repz
sti
je
sbb
cmp
jns
pop
pop
jge
mov
mov
pushf
mov
dec
outsl
pop
jg
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
iret
cld
fisttps
mov
jg
dec
jl
or
sbb
sub
cmp
int3
out
sbb
rcr
push
int3
add
fisttpll
xchg
in
bt
cwtl
icebp
mov
repz
mov
ss
ljmp
leave
bound
dec
xlat
fwait
mov
lcall
sbb
jecxz
divb
dec
mov
sub
sbb
jge
adc
sub
push
int
movsb
xchg
sbb
or
call
out
push
es
test
push
sub
xor
mov
out
aas
stc
mov
sub
shrl
imul
pop
fxch
xchg
jae
push
cs
adc
loope
xor
cmpl
pop
xor
hlt
mov
adc
xor
ss
into
xchg
pop
xchg
out
out
popa
add
ja
jp
xchg
pop
jl
and
jp
cmp
sub
lods
inc
add
out
and
stos
inc
subb
imul
jbe
mov
mov
push
inc
jb
cmp
xor
mov
fbstp
sub
out
mov
pop
das
cmp
dec
mov
out
adc
adc
rclb
adc
mov
push
movsl
cmp
js
jo
arpl
lds
mov
and
icebp
cmp
xor
mov
bound
cmp
jnp
or
sub
ror
inc
sbb
push
testl
mov
dec
outsl
mov
int3
ds
repnz
xor
add
or
enter
sbb
cmpsb
popf
and
mov
xchg
and
fs
fs
fld
mov
sub
cmpl
xchg
mov
sbb
xchg
vminpd
jns
test
int
lcall
je
xor
aad
cmc
mov
orb
pop
mov
and
add
cmp
or
out
sub
ret
mov
rcll
jmp
enter
data16
push
mov
or
daa
pop
je
iret
in
push
fs
stc
mov
sub
pop
stc
pop
arpl
rorb
adc
stos
inc
loop
cmpsb
inc
add
dec
push
lock
ds
cmpsb
aaa
lds
jge
cmp
jo
sahf
sar
pushl
call
push
fs
test
testb
mov
in
daa
rorl
popf
rcr
pop
xor
cmpsl
mov
in
sub
fs
roll
inc
add
nop
lret
je
test
jp
cmp
gs
mov
aaa
les
add
push
push
ljmp
inc
sbb
mov
cmp
movsl
lods
cmc
and
jns
sbb
mov
ficompl
jns
push
jp
sarl
shrl
push
add
fwait
je
mov
xchg
lods
sub
popa
rorb
push
mov
sub
push
mov
fcompl
xor
fs
add
data16
neg
add
sub
xchg
inc
add
inc
outsl
mov
repz
jge
and
jmp
dec
adc
in
jge
push
mov
adc
addr16
xchg
jno
adc
imul
xor
mov
nop
in
pop
inc
and
lahf
add
xchg
or
mov
inc
std
test
sub
leave
sub
xchg
dec
ljmp
lret
pop
mov
ljmp
lock
mov
fisubrs
cmpb
icebp
push
cmp
sbb
cmp
dec
and
gs
adc
pop
insl
adc
or
sarl
in
inc
fnsave
pusha
fsubrs
jge
shlb
enter
pop
ret
stos
fdiv
dec
and
jne
jne
scas
dec
jns
sub
js
outsb
jmp
in
popa
les
insl
pop
out
xchg
jmp
and
popa
jmp
pop
iret
dec
add
enter
pop
mov
dec
scas
push
ljmp
xchg
pop
fucomip
lret
insb
je
mov
jp
daa
xchg
aaa
adc
or
fsubs
or
test
pop
mov
adcb
sti
xchg
pop
push
jno
pop
arpl
ja
aaa
add
cli
jb
add
fmull
and
jmp
fnsave
mov
pop
xchg
mov
lcall
icebp
shll
jno
sbb
addr16
cmpsb
xchg
fbstp
mov
in
mov
jbe
fldenv
ja
sub
jg
jno
ljmp
inc
decb
popf
push
pop
jg
xchg
mov
imul
movsl
mov
les
xor
fmuls
mov
cmp
sbb
push
inc
push
sub
xchg
mov
adc
int3
mov
xor
gs
push
test
fldcw
pop
mov
mov
cmc
fldl
jp
nop
xchg
ljmp
and
mov
xor
jo
cmp
not
pushf
out
sbb
or
sbb
addl
imulb
mov
cmp
gs
ret
outsl
adc
dec
xor
mov
in
test
pop
lock
xchg
jp
arpl
dec
push
outsb
les
jnp
fdivl
int
dec
jecxz
pop
mov
mov
out
insl
jmp
cmp
jo
jne
out
cld
inc
icebp
repnz
stc
dec
xchg
adc
test
push
xor
adc
xor
cmpl
ja
leave
xor
loope
fcmove
pop
shlb
and
mov
pushl
sub
lret
loopne
mov
mov
iret
loop
cwtl
lock
cs
in
lock
out
cmp
inc
push
cmp
lret
lret
xchg
xor
adc
xlat
sbb
pusha
stc
jbe
repz
sub
scas
pop
dec
pop
pop
and
dec
xor
cmp
xchg
pusha
insl
cmpsb
mov
adc
xacquire
fwait
push
push
mov
je
push
dec
add
imul
inc
nop
data16
xor
adc
jo
fbld
nop
cwtl
inc
or
push
adc
sub
hlt
mov
mov
adc
xchg
xlat
pop
es
fwait
imul
in
aaa
inc
cli
dec
dec
daa
jecxz
divl
jge
stc
iret
fdivrs
insl
pushf
mov
mov
mov
mov
clc
repnz
jo
dec
int
mov
out
or
xlat
jo
cld
fsubl
lcall
outsb
arpl
fisttpl
add
sahf
mov
or
sar
gs
fimuls
gs
stos
loopne
insb
add
lret
ret
fildl
mov
cmpsl
inc
xor
jb
hlt
fsubl
lea
loopne
sbb
dec
and
xchg
push
insl
push
mov
dec
lahf
cmp
ljmp
clc
lahf
add
push
jnp
je
and
inc
mov
fs
adc
jmp
xor
xor
cmp
push
add
lock
and
out
leave
inc
cmp
jns
inc
js
imul
int3
mov
pop
mov
pushf
cld
scas
jl
rorl
test
in
fwait
addr16
orb
imul
xlat
movsl
sbb
or
enter
push
jo
test
add
adc
lret
aad
arpl
arpl
pusha
mov
jbe
sbb
fcoml
into
ljmp
aam
mov
fmulp
decb
ds
pop
pop
inc
jecxz
insl
jecxz
xor
pop
dec
jns
xchg
movl
xchg
sbb
loop
pop
pusha
pop
add
dec
push
orb
add
incl
adc
nop
mov
lahf
in
jp
popa
fidivrl
cli
in
xchg
decb
push
xor
int
ds
xorb
pop
aam
mull
arpl
mov
jns
ret
push
sub
fcmovnbe
mov
ret
pop
cmpsl
push
fisubrl
scas
adc
sbb
xor
push
ds
push
int
push
in
xchg
pushf
xchg
mov
bound
xchg
adcb
mov
lret
sbb
jns
add
pop
or
shrl
fistps
dec
and
mov
cmp
pop
cmp
xor
repnz
push
and
ficomps
mov
stos
int3
aam
mov
sub
mov
jg
push
mov
mov
adc
pop
orl
dec
adc
icebp
xor
addr16
fbstp
inc
cs
mov
jo
jbe
fwait
inc
pushf
sbb
cmc
jle
adc
out
sub
and
add
pop
out
add
push
lahf
cli
mov
add
daa
mov
js
fucomip
clc
xlat
lret
jbe
aad
mov
pusha
push
cmp
lcall
xor
out
nop
xor
mov
pop
mov
jmp
sbb
out
nop
add
sub
loop
jae
xchg
cmp
pop
adc
mov
jbe
push
sub
dec
jle
imul
xlat
push
mov
out
ja
cmp
or
push
jae
mov
push
pop
push
inc
inc
mov
adc
jle
into
cmpsb
lods
or
shll
cltd
dec
das
jno
adc
mov
pop
cmp
cmpsl
das
add
pop
xchg
lock
mov
and
push
push
test
pop
cmc
jb
mov
push
test
dec
and
enter
xchg
mul
xchg
inc
ja
mov
aaa
push
mov
test
lods
jnp
scas
js
aad
jl
fcos
mov
mov
pop
fld
mov
loopne
mov
test
cmpsl
dec
mov
sub
mov
mov
sub
mov
test
dec
lahf
stc
iret
push
adc
mov
clc
loope
test
js
dec
test
jnp
stos
push
cmpsb
ret
sbb
sub
jecxz
iret
sbb
jnp
sbb
pop
xchg
dec
and
mov
in
ror
lock
sub
jb
cld
dec
leave
sub
jno
push
xor
adc
jp
mov
dec
aas
pop
add
push
cmp
xchg
clc
cs
sub
push
push
jp
cmpsb
inc
mov
movsb
div
xlat
dec
les
mov
fbld
ror
xchg
clc
adc
js,pt
mov
std
punpckldq
xchg
idivb
mov
jl
push
lods
or
jbe
jmp
imul
movsb
xor
cwtl
mov
js
or
jns
push
cli
rcrl
or
push
lods
mov
scas
adc
aam
sbb
dec
mov
repnz
fistl
test
in
fiaddl
punpckhdq
inc
out
jbe
inc
cltd
or
push
insl
dec
leave
roll
in
int
stc
bound
sbb
and
pop
adc
inc
mov
lret
shr
adc
or
and
xchg
pushf
xor
push
xlat
stc
sbb
mov
push
push
cmp
shl
mov
ret
sub
xchg
mov
sbb
xchg
add
mov
mov
or
cmp
mov
insb
mov
cmpsl
inc
outsl
adc
sub
test
pop
add
popf
das
xchg
sub
lds
xchg
pop
mov
inc
adc
fistpl
lret
push
add
std
jmp
test
add
or
xchg
pop
not
push
leave
outsb
ds
insl
gs
jge
pop
mov
addl
shll
mov
mov
mov
sbb
cs
rolb
sbb
pop
mov
out
int
popf
mov
sub
xor
fcomip
pop
xchg
test
out
les
pop
mov
mov
xchg
push
js
or
out
cmp
loopne
iret
jae
dec
inc
mov
inc
mov
mov
fmull
jae
mov
sahf
jmp
hlt
mov
stos
loop,pt
data16
ret
adc
loop
jle
out
mov
dec
xchg
std
call
and
popf
pop
cltd
or
pop
add
dec
jns
cmp
push
icebp
mov
aam
jg
out
loope
inc
sub
dec
add
in
repz
mov
sub
jns
fdivrl
mov
push
sub
popa
cmpxchg
and
in
jecxz
or
leave
push
nop
out
mov
loope
cmpl
stos
xchg
lock
std
in
adc
notl
imul
cmp
xor
hlt
xorl
shrb
addr16
mov
fstps
xor
std
xchg
les
push
pusha
add
push
inc
xchg
lea
add
jge
scas
or
jo
ret
cmpsl
ljmp
dec
jne
mov
aad
mov
jecxz
mov
cmp
sub
pop
jnp
push
outsb
ret
xchg
cmpsl
ret
xlat
xchg
clc
fs
push
sbbb
rclb
xor
cli
jns
sbb
loop
mov
pop
cld
jmp
aam
cltd
add
aas
adc
jecxz
aad
jno
jns
pop
dec
dec
jmp
repz
adc
mov
stc
mov
outsb
ficoms
push
push
mov
push
test
jne
jle
fcmovnu
dec
ljmp
cmp
inc
add
fisubl
cmp
rolb
repz
jmp
cmpsb
sub
popl
loope
adc
iret
pushf
dec
cmpl
notb
dec
aaa
xorl
push
sub
pop
cmp
add
loope
pop
call
lret
sbb
pop
test
jnp
fdivrp
imul
and
jo
pop
add
insl
jp
push
jae
rcrb
cmp
mov
rcr
sti
repz
negb
add
and
cltd
daa
push
lods
mov
pop
sbb
jle
test
sub
popa
xchg
es
xor
test
data16
xlat
mull
cmp
push
mov
xchg
insl
xchg
xor
rclb
mov
mov
mov
ret
or
inc
aad
add
cmp
add
dec
sbbb
fiaddl
call
push
pop
mov
push
push
repnz
push
rclb
dec
mov
mov
cltd
repnz
ljmp
std
pop
pop
incb
mov
xor
jg
jmp
mov
dec
add
xor
mov
js
xor
arpl
xor
or
cli
mov
and
adc
dec
leave
clc
je
mov
sub
std
or
adc
dec
aaa
sub
arpl
sbb
dec
xchg
outsl
adc
cmp
fistpl
pop
xor
inc
fdivs
xchg
mov
das
iret
ja
push
dec
popf
sbb
cmpsl
dec
mov
lods
dec
loope
add
jae
xor
xchg
add
mov
dec
sbb
ss
jl
pop
xchg
sub
cmp
mov
adc
in
xchg
movsl
mov
mov
inc
sarb
ret
mov
adc
cmp
jl
adc
sub
sub
dec
clc
add
aad
or
or
cmpsb
and
push
sub
pop
leave
mov
lea
rcrl
dec
mov
mov
rorb
cld
mov
clc
push
mov
sub
inc
mov
adc
lds
loope
mov
nop
inc
dec
pusha
xchg
jne
outsb
movsl
insl
cmpsl
lahf
dec
push
sub
repz
jne
daa
mov
mov
push
or
pop
ret
mov
test
add
ffreep
adc
lods
lods
out
cmp
mov
and
inc
sbb
imul
testl
ficomps
shll
add
and
fwait
xor
lahf
dec
or
aaa
cmp
movsl
jns
fisttpl
mov
dec
inc
and
push
and
jns
jae
lcall
cmpl
add
movsb
dec
dec
xor
movsl
div
addr16
jge
out
inc
lahf
sbb
mov
mov
push
cld
fisubl
and
push
enter
test
jb
cmp
jle
jb
rolb
fisubrs
push
push
adc
cld
dec
cld
adc
out
push
mov
add
adc
pop
push
pop
jp
mov
add
cmp
popf
dec
mov
out
lods
test
shlb
into
pop
cs
scas
sub
and
stos
or
inc
hlt
arpl
das
pop
aas
cmp
pop
jne
or
sbb
push
mov
mov
xlat
jno
shl
sub
push
test
loop
lods
mov
movsl
dec
je
pop
inc
filds
xchg
call
fcomps
loop
adc
and
jnp
or
xor
mov
mov
in
jns
and
fsubr
lcall
fistl
mov
divb
and
or
xlat
mov
popf
lcall
push
jl
sub
mov
inc
xor
fldl
stos
into
leave
jo
jecxz
std
xchg
add
aam
cmp
mov
mov
movl
test
in
xor
outsl
sub
sub
sbb
int
pusha
jmp
mov
push
mov
mov
lea
and
push
pusha
dec
adc
pop
test
ficompl
jecxz
inc
movsb
mov
insb
into
mov
xor
and
xor
and
mov
add
in
jmp
cmp
push
mov
fwait
pop
cmp
cmp
test
and
lods
loope
mov
faddp
loope
int
das
insl
movsb
or
dec
stos
insb
mov
jne,pt
ds
outsl
icebp
mov
jecxz
jns
xor
add
jge
sub
sbb
test
push
aam
in
push
and
xchg
add
dec
lds
pushf
pop
mov
lock
shl
aaa
icebp
jns
xchg
inc
inc
scas
and
ljmp
mov
cmp
fcmovu
sti
push
int3
popf
adc
sbb
fists
push
rcrb
outsl
fdivr
inc
mov
dec
test
daa
test
mov
rcrl
inc
movsl
dec
daa
bnd
sbb
jae
inc
sarb
fisttps
test
insl
repnz
xor
mov
and
aas
cld
clc
pop
pop
jge,pn
mov
mov
out
push
ret
aas
sar
jmp
and
loopne
ljmp
push
or
or
xor
stos
imul
cmp
inc
imul
insl
movsb
insb
fwait
xchg
out
pop
sbb
sbb
add
aam
mov
jns
jns
mov
jecxz
sub
mov
cmc
loopne
dec
daa
push
xchg
loop
insb
les
movsb
add
ja
mov
dec
les
sbb
movsb
pop
jmp
xor
push
test
ret
outsb
push
mov
testl
and
rcl
mov
inc
popf
push
es
pop
pop
data16
daa
loopne
fmull
jmp
xchg
rorl
addr16
or
stos
cmp
in
mov
adc
into
cs
mov
push
addr16
ja
xlat
popa
fs
xor
push
sbb
clc
xor
pop
xchg
or
jno
sbb
xor
xor
loop
ret
rorl
xchg
cs
int
popf
sti
xchg
int
and
sub
push
mov
pop
mov
or
push
mov
inc
mov
push
push
sub
mov
and
xchg
push
in
pop
jle
mov
jmp
xor
inc
ds
jns
jno
mov
out
xchg
test
andb
and
nop
imul
mov
fiaddl
pusha
int
fstl
sub
sbb
jno
aaa
lcall
fistpll
mov
jb
fdivs
ds
inc
mov
ss
stos
jge
addl
dec
inc
cmp
mov
pusha
mov
mov
hlt
adc
in
out
xchg
dec
jno
and
sub
and
into
aas
fsub
pushf
out
mov
mov
jl
adc
pop
ss
xchg
pop
add
xchg
cmp
lahf
push
xorl
repz
aaa
jno
into
test
stos
pop
push
testl
outsl
int3
pop
pop
mov
and
test
push
pop
jns
test
sub
jb
or
sub
pop
pop
pop
inc
sbb
ja
arpl
fisttpll
jge
sbb
xor
inc
push
mov
cmc
sbb
jge
mov
out
jecxz
and
push
aas
loopne
push
inc
enter
inc
subb
mov
adc
jle
fimull
mov
gs
or
sbb
and
cmp
fbld
inc
out
ltr
and
fcoms
inc
fsts
adc
dec
mov
lahf
stos
mov
push
jnp
pop
adc
cmp
add
std
mov
addb
jne
pop
or
dec
dec
scas
or
pushw
fiaddl
gs
pop
sub
cmp
inc
cmpl
pushf
mov
dec
outsl
pop
jg
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
iret
cld
fisttps
mov
jg
dec
jl
or
sbb
sub
cmp
int3
out
cld
iret
cld
fisttps
mov
jg
dec
js
or
add
pop
aam
lock
fisttps
cmp
dec
outsl
mov
sub
xchg
rcl
ret
loopne
mov
cmp
and
jl
insl
adc
fisubrs
sbbb
sbb
bound
jb
add
push
jp
add
ror
ret
lret
inc
ljmp
push
xor
imul
or
insl
sub
xchg
into
repnz
xchg
cld
cltd
hlt
xchg
mov
inc
sbb
pushw
push
stc
inc
in
cmpsb
lret
pop
mov
bound
out
movsb
mov
pop
cmc
jmp
sub
sub
lcall
cmp
mov
jbe
movl
mov
clc
push
add
pop
adc
fimuls
pop
inc
ja
xchg
lahf
xchg
inc
pop
cmp
push
lret
inc
outsl
and
cmpb
mov
add
or
stos
sub
fsubr
jp
mov
popf
dec
xchg
sbb
lcall
dec
sarb
ljmp
ljmp
mov
mov
push
mov
push
idivl
out
pop
cli
mov
sub
push
push
arpl
xchg
fiaddl
jmp
lcall
jns
jg
dec
arpl
cs
aaa
jl
dec
pop
pop
stos
lcall
out
mov
fisttps
cmp
push
dec
adc
ja
jno
and
inc
aas
pop
mov
iret
mov
lock
xlat
arpl
sub
dec
add
pop
xor
adc
jp
mov
lcall
sbb
ljmp
push
sub
jb
add
push
jp
mov
lcall
sbb
ljmp
aad
inc
push
popa
gs
jbe
aad
and
movsb
push
jmp
jbe
push
out
push
mov
xchg
xchg
and
data16
shlb
cmp
data16
mov
xchg
cmp
fbstp
stos
mov
jmp
jl
test
data16
sbb
js
dec
xchg
lcall
in
mov
pop
or
sbb
pop
aas
or
jnp
pop
enter
inc
mov
or
ja
sub
pop
hlt
and
mov
nop
cmp
xor
icebp
inc
fsubr
lock
stc
jno
jne
pop
cwtl
lcall
sbb
jl
push
dec
js
mov
iret
xchg
int
dec
pop
push
add
push
mov
enter
scas
mov
pop
fs
loope
sub
inc
je
iret
not
mov
lcall
xchg
cld
es
mov
mov
pop
es
mov
es
push
xchg
roll
addr16
mov
sub
push
mov
xchg
jg
push
fdivrl
pop
pop
fcomps
lea
fstl
xlat
mov
push
jbe
sbb
pop
in
shll
xchg
adcb
jb
pusha
pop
insb
mov
int
jbe
mov
xchg
stos
enter
cmpsl
push
mov
int3
cld
cmp
jb
ficompl
jb
repz
jg
jnp
shlb
cli
mov
push
cltd
cltd
add
jne
mov
xchg
es
aas
xor
ret
orl
out
jne
ljmp
add
ret
jmp
cwtl
inc
fwait
xchg
ljmp
cld
movsb
ja
add
mov
pop
mov
mov
out
lcall
sub
mov
aam
je
adc
inc
shlb
fs
or
fists
sub
cmp
hlt
cmc
jno
mov
sub
adc
xchg
lods
imulb
lock
icebp
pop
inc
sub
jl
and
xor
inc
and
mov
movsb
and
and
std
xor
cmp
adc
faddl
cmpsl
cmp
jbe
pushf
adc
out
sbb
fisttpl
in
push
fcmovnu
mov
incb
mov
xchg
mov
imul
jp
pop
test
inc
lret
push
fmul
and
mov
cld
mov
das
add
mov
dec
adcb
mov
xchg
pop
cmp
scas
ljmp
fwait
iret
push
mov
in
pushf
xchg
jo
mov
cmp
cmp
loope
cli
xchg
push
xor
insb
pop
sbb
fmuls
fwait
das
fs
sahf
data16
lahf
insb
add
icebp
mov
mov
notb
dec
jle
gs
xchg
insb
jmp
or
and
and
test
mov
jne
ss
inc
push
cmp
dec
daa
xchg
xchg
jbe
pop
lahf
sub
push
scas
xchg
or
test
or
fnsave
mov
andl
xchg
xor
xchg
jb
pop
cwtl
push
and
addb
or
cmp
faddl
mov
sub
pop
rcrb
std
inc
mov
add
insl
int3
shlb
push
mov
aad
lods
push
xchg
repnz
xchg
or
jmp
dec
pop
cmpsl
or
lods
roll
sbb
fwait
push
mov
pop
pop
push
pop
adc
sub
lret
mov
fsts
inc
sub
cmp
pop
gs
iret
sbb
fiaddl
outsb
pop
orb
xchg
inc
jno
mov
jnp
mov
xchg
insb
and
out
push
and
jb
dec
aaa
dec
pop
sub
inc
dec
in
xchg
rcrb
cli
mov
iret
mov
or
sar
dec
les
ljmp
arpl
xor
cmp
ds
inc
shl
jbe
daa
xchg
fdivrl
cmp
pop
xor
in
push
out
dec
dec
in
jno
cltd
xor
lea
add
xchg
cli
mulb
jecxz
and
inc
sbb
lea
pop
xchg
jb
lock
pushf
mov
inc
ret
xor
ror
mov
test
ret
inc
lock
jns
add
cltd
test
dec
cwtl
push
push
les
movb
and
daa
push
loop
rol
adc
xor
shl
popf
pop
loopne
xchg
jecxz
lahf
cmp
inc
add
js
mov
movsl
stos
lret
dec
sarb
jecxz
xor
fldcw
stos
rol
mov
stos
mov
mov
mov
push
ror
sub
cmpsb
jo
imul
xlat
mov
leave
push
rcrb
or
xchg
movsb
dec
scas
call
cmpb
out
xchg
mov
out
mov
inc
push
pop
xor
test
lock
stos
js
push
and
xchg
mov
push
pop
fcomp
sbb
jge
sub
dec
testb
lods
jo
stos
push
popf
jl
mov
push
jae
and
jl
mov
les
cltd
scas
iret
inc
sub
ret
mov
movsl
inc
push
adc
push
scas
xor
data16
test
push
test
movsl
aad
mov
pop
xor
dec
pop
and
fs
push
fistps
xchg
jl
ss
add
sub
sub
mov
lahf
sahf
rcrb
adc
push
mov
dec
jg,pt
movsl
pop
cmp
pop
cld
rorb
rcrb
xchg
sbb
cwtl
xchg
inc
out
loope
xchg
cmp
fiadds
das
sub
or
fcompl
movsb
push
mov
add
xchg
cmp
xor
and
test
lods
xor
cwtd
ljmp
jg
sub
jae
stos
inc
out
push
imul
call
clc
call
push
lret
xchg
shlb
cltd
sbb
shrl
in
and
das
sub
fdivrs
pop
cwtl
shrb
outsl
sub
fstl
rorb
fstpt
inc
inc
fnsave
mov
inc
jno
std
repz
stos
cmp
inc
or
mov
push
push
pop
sbb
inc
xor
pop
dec
pushf
repz
or
out
pop
xor
clc
jbe
movsb
mov
xor
aam
ret
push
nop
fs
aam
negb
pusha
jecxz
inc
or
lods
aad
jl
mov
mov
sub
dec
add
data16
jecxz
jecxz
dec
leave
bound
roll
sbb
clc
jae
inc
push
fs
out
cmp
and
jle
pop
and
lods
pop
mov
popf
lds
cwtl
inc
cmpsl
add
repz
xchg
mov
mov
push
inc
xchg
adc
sub
pop
or
mov
test
mov
out
xchg
jns
adc
push
insb
imul
fstl
repnz
js
das
jp
jge
dec
xor
sub
das
cmpsb
mov
or
xchg
jg
out
add
inc
inc
subl
lea
pop
dec
pop
imul
or
mov
lahf
push
xor
movsb
andl
cmc
movsl
mov
and
enter
mov
mov
stos
xor
jb
aad
out
adc
ret
mov
push
mov
sbb
xchg
cltd
sub
mov
repz
fsubp
fwait
pop
jb
aas
lods
rorl
testl
insb
aaa
jle
push
mov
sti
je
ficomps
sbb
mov
xor
dec
fimuls
in
daa
pop
jl
orl
nop
pop
data16
lods
mov
adc
mov
enter
dec
cmp
repnz
push
xchg
push
cmpsl
mov
stos
jge
xchg
subb
push
push
xchg
lcall
jae
fnstcw
mov
dec
add
sub
xchg
jle
pop
popf
test
fdivl
mov
cwtl
fdivrs
sub
xchg
xchg
adc
test
cmc
or
ficoms
and
sbb
or
and
movsb
lods
iret
sbb
pop
push
jge
cs
out
dec
mov
mov
push
jg
clc
mov
xor
mov
cltd
cmpsl
xchg
mov
rcrb
bound
pop
int
inc
rcrb
inc
adc
mov
pop
dec
iret
lea
inc
pop
sub
ficompl
mov
or
xchg
inc
inc
add
dec
jmp
and
jbe
fwait
inc
dec
out
gs
addl
jb
test
pop
mov
lock
cmpsl
cmp
push
jns
sbb
push
sbb
imul
cltd
cmp
sti
cli
push
daa
lods
aad
fmuls
mov
lcall
std
pop
xchg
adc
sahf
inc
into
cmp
jo
imull
lock
pop
cmpsb
clc
and
ret
lods
dec
mov
push
adc
shrl
std
push
or
xchg
jmp
lods
dec
cmpsl
xor
frstor
sbb
dec
pop
fadds
out
shll
xor
repnz
xchg
push
pushf
mov
pop
jl
adc
mov
mov
jae
into
mov
ret
arpl
cmp
or
mov
clc
cwtl
sub
fbstp
sbb
xchg
addb
pop
inc
aaa
cmp
dec
jnp
lcall
rcl
enter
inc
pushf
push
sbb
icebp
sbb
loope
sbb
pop
jns
testl
push
dec
mov
data16
xor
adc
add
dec
test
cli
dec
xchg
hlt
xchg
xor
xchg
lcall
sti
cmp
rorl
cmp
jp
xchg
mov
addr16
daa
and
mov
fldl
xchg
scas
jg
fisttpll
cmp
push
ret
add
push
inc
xchg
call
mov
sbbl
xchg
add
mov
ljmp
or
fcoml
or
in
mov
mov
repnz
aam
imul
clc
dec
aam
xor
pop
adc
mov
dec
adc
sbb
ja
movsl
jbe
hlt
or
xlat
jo
jge
add
jmp
xchg
add
inc
jg
inc
mov
into
or
rcll
cmp
adc
mov
sbb
dec
mov
movsb
sbb
insb
pop
cmp
orl
into
mov
test
test
pop
fmuls
mov
addl
pop
push
movsb
pop
dec
cli
stos
fisttpl
xor
sbb
loope
or
cs
xchg
imul
xor
mov
inc
cmpl
jp
test
enter
out
or
push
mov
ja
jp
sbb
loopne
jl
dec
push
das
loope
xlat
mov
xor
mov
nop
push
in
lods
movsl
int3
sub
jne
sbb
mov
sahf
adc
add
arpl
mov
mov
cltd
ret
cmp
pop
push
mov
pusha
mov
sbb
add
cmpsl
rolb
adc
add
pop
fiaddl
fcmovu
xor
fcomps
sbb
out
fimuls
leave
dec
dec
jo
sahf
and
xor
lret
cmp
cmp
rorb
fidivrs
lret
out
out
pusha
inc
mov
lret
das
out
mov
pop
add
call
pop
scas
ret
dec
clc
fld
cwtl
jmp
sbb
push
push
aas
nop
and
adc
mov
dec
xor
jecxz
lahf
jp
fcompl
jmp
popf
jle
ficompl
test
mov
sbb
adc
mov
mov
cmp
push
rcl
and
sbb
aaa
jo
mov
in
sub
and
popa
lcall
sahf
add
jl
pop
cmpb
or
mov
mov
mov
and
repnz
sbb
mov
call
or
je
xchg
dec
xchg
or
scas
xor
jge
and
cli
xchg
mov
xor
and
mov
push
xchg
in
and
test
jnp
ret
shl
adc
es
loope
jmp
and
dec
push
cld
jae
sarb
insb
lods
mov
jecxz
lcall
rcrb
decl
sub
sbb
sahf
sbb
xlat
negb
mov
lret
pop
pop
fld
pop
arpl
mov
enter
ljmp
pop
test
rcrb
push
clc
out
mov
add
popa
xchg
repz
dec
or
xor
mov
mov
cmp
sbb
mov
fxch
imul
push
cmp
cmp
js
sarb
adc
pusha
xchg
insb
push
cmp
xlat
jns
fdivrs
adc
fwait
and
cmp
lret
lret
sti
adc
push
pop
jae
push
push
push
inc
inc
fs
sub
scas
lea
jle
loopne
or
adc
mov
ds
adc
add
xchg
gs
testb
addr16
or
ja
mov
shrb
ret
mov
ljmp
push
test
cltd
ja
mov
xlat
mov
pop
mov
sahf
mov
enter
sbb
sti
or
xor
cmp
insl
shlb
pop
jns
dec
cs
rcl
fcmovbe
dec
sbb
rcrb
leave
gs
push
out
fs
pop
mov
jno
cmpsb
fimull
js,pt
popf
mov
leave
into
inc
pop
loop
jmp
in
das
inc
aam
adc
cmp
xor
sub
cmp
xor
test
pop
and
mov
mov
cmc
push
movsb
out
out
in
mov
sub
pusha
sbb
cmp
movsl
xlat
int3
add
jecxz
push
mov
daa
inc
je
xchg
lret
sbb
sub
es
or
pop
out
mov
inc
cmp
adc
cmp
sarl
cmp
sti
mov
and
int3
lret
mov
insb
pop
sahf
data16
and
jge
pusha
xor
add
test
dec
add
jo
and
adc
cld
mov
push
inc
pop
mov
scas
jl
mov
and
cmc
xor
mov
jle
sbb
cmpsb
sub
outsb
or
outsl
inc
shrb
aas
pop
fs
ljmp
push
push
outsl
pop
int3
add
int3
and
cmp
sbb
add
mov
sub
sbb
adc
movsb
push
add
sahf
test
rclb
sub
xchg
movsl
cmp
mov
js
mov
out
push
sbb
dec
pushf
and
push
mov
pop
inc
push
inc
jle
sub
xchg
xchg
adcl
mov
sbbl
xchg
cli
inc
loope
js
jne
mov
push
cmp
ds
adc
lods
repnz
mov
ja
iret
in
cmp
js
outsb
mov
rcrb
ljmp
daa
jecxz
pop
sti
jo
sbb
daa
aaa
xchg
aas
jl
out
mov
push
ds
lahf
test
jb
pushf
or
add
and
xchg
add
sti
mov
dec
flds
js
enter
adc
mov
inc
pop
sbb
rorb
enter
inc
mov
arpl
dec
fst
cmp
outsl
std
fsubrs
scas
movsl
stos
repnz
sbb
inc
in
mov
dec
or
in
mov
js
cmpsb
push
sub
fcom
jbe
fidivl
clc
mov
add
imul
push
and
xchg
inc
dec
lret
add
int
cmp
out
pop
mov
loope
das
adc
mov
fs
or
out
or
push
ja
cmp
sbb
or
jecxz
inc
pop
jnp
and
push
sbb
jle
in
add
cmpsl
xor
push
sub
dec
mov
test
inc
jns
add
xlat
and
or
cmc
sbb
jbe
js
and
xchg
stos
ficoms
push
iret
push
sub
cmp
mov
add
and
out
cmp
push
mov
jge
movsl
push
and
mov
jp
shll
cmp
add
mov
xor
dec
orb
bound
clc
xor
xchg
rcrb
jnp
lea
outsb
out
dec
pusha
jmp
mov
ds
and
loope
fbstp
and
clc
stos
sub
loopne
pusha
dec
and
xlat
dec
jbe
sub
fistpl
jle
xor
xchg
leave
adc
cli
xchg
or
xchg
sbb
orb
push
sbb
mov
sarb
in
add
push
jl
addr16
hlt
push
sbbb
adc
fisttpll
mov
sbb
lock
fimuls
stos
push
and
les
cmp
rol
add
pusha
pop
fbstp
insl
ljmp
cld
mov
fsts
or
in
subb
jb
stc
les
insl
xor
int3
adc
mov
out
and
pop
sub
xchg
into
fldcw
mov
sub
xchg
xchg
adc
mov
lret
xchg
sbbl
clc
stc
mov
push
mov
lahf
out
popf
mov
repnz
into
cmp
mov
mov
shlb
jp
scas
sub
add
dec
movsl
sub
out
add
add
cltd
xchg
jmp
jle
inc
push
push
loop
sub
mov
and
pop
fcomps
mov
mov
les
pop
mov
mov
push
or
fisubs
jne
mov
ret
or
push
arpl
cmp
adc
mov
mov
and
mov
xchg
mov
iret
jecxz
pop
fistl
out
and
and
mov
xchg
mov
xchg
pop
push
sahf
mov
mov
cmp
lret
jb
inc
sbb
arpl
sti
xor
sarb
shrb
push
test
out
jmp
movq
cmp
and
out
loope
pop
push
lahf
lret
cmp
gs
and
cmc
xor
fidivrs
je
pop
retw
subl
cmp
fnstsw
aas
sub
test
out
add
jmp
shr
leave
addr16
sub
push
decl
mov
mov
ds
aas
and
xchg
movsb
aas
std
pop
imul
xchg
iret
mov
stc
xchg
xor
aad
shrl
clc
xchg
cmp
loopne
rsm
and
push
push
mov
int
and
push
lret
movsb
jmp
mov
jnp
jmp
ljmp
in
cmpsl
mov
mov
inc
fisubrs
adc
push
mov
cmp
xorb
lea
cmp
sarb
ficoml
and
cltd
icebp
ds
jl
mov
mov
jae
and
and
fmuls
idiv
lret
jnp
mov
popa
fiadds
ds
inc
push
stc
enter
aaa
and
sbb
jmp
cwtl
or
push
or
cmp
and
stos
mov
ja
aas
cmp
sub
and
jecxz
mov
xchg
enter
sbb
or
test
and
inc
and
jb
fistl
lods
fs
mov
mov
lret
test
lret
jl
add
lock
sub
mov
mov
jge
mov
xchg
adc
add
jg
pop
or
pop
pop
addb
sarl
cmpb
clc
in
pop
pop
inc
test
mov
push
jnp
mov
sub
cltd
mov
jg
and
cmpsb
insl
in
cs
xchg
cmp
cmp
xchg
push
push
out
cmpsl
nop
addb
and
and
jge
jg
jb
fmuls
cs
std
aaa
fmuls
sar
insl
int3
add
into
push
jns
je
sahf
jae
sub
push
cltd
je
mov
pop
mov
cmc
mov
xchg
insl
cmp
push
xor
or
jmp
mov
je
arpl
mov
push
lods
pop
lahf
add
pop
imul
icebp
jb
call
cmp
scas
out
test
mov
mov
movsl
jge
adc
scas
jecxz
mov
and
loop
lds
rcrb
xor
iret
repz
cs
in
push
imulb
fbld
push
xchg
push
mov
mov
aad
inc
pop
clc
push
push
sahf
dec
mov
mov
add
sbb
mov
shl
std
test
push
sub
popf
icebp
mov
jmp
xor
dec
repnz
daa
testb
jl
or
out
aas
xchg
fcoml
cli
shrb
inc
push
inc
pop
dec
test
clc
repnz
pop
and
outsl
std
sub
movsb
xor
ss
mov
insb
cld
dec
ret
mov
stos
repz
push
mov
sub
jmp
push
inc
outsl
sbb
imul
add
mov
sbb
les
jg
aam
sbb
lret
scas
iret
add
movsb
sbb
mov
lock
sbb
jb
add
push
jp
mov
lcall
sbb
ljmp
push
sub
jb
add
push
jp
mov
lcall
sbb
ljmp
push
sub
jb
add
push
jp
mov
lcall
sbb
ljmp
push
sbb
cmp
add
ljmp
js
loop
test
pop
add
inc
shll
scas
jge
push
adc
jno
inc
cmc
push
in
xchg
xor
add
icebp
inc
shll
mov
xor
jno
xor
xchg
xor
loope
icebp
inc
shll
mov
xor
jno
xor
push
ljmp
icebp
sbb
shlb
and
mov
and
mov
dec
lds
pop
lcall
addr16
cmp
aam
fsubp
and
add
out
hlt
sbb
pop
or
cwtl
mov
leave
popa
sub
cmp
xchg
mov
sub
inc
lock
mov
push
mov
mov
popa
test
pop
jp
dec
adc
push
mov
mov
sbb
adc
sub
and
loope
add
push
ret
leave
mov
pop
pusha
jo
jle
sbb
xor
adc
sbb
mov
icebp
inc
shll
mov
xor
jno
inc
cmc
push
in
xchg
xor
cmpsl
cmp
or
jns
add
and
cmp
testb
in
push
addl
mov
out
frstor
inc
xchg
and
add
out
jae
adc
mov
add
xor
jno
inc
cmc
push
in
xchg
xor
loope
icebp
inc
shll
mov
xor
jno
inc
cmc
push
in
xchg
xor
loope
push
or
cmc
and
sbb
jecxz
aaa
push
fwait
shrl
test
addb
push
data16
cmp
sti
xlat
jecxz
insb
and
xor
add
mov
gs
xchg
mov
fsubp
lea
sub
xchg
hlt
push
xchg
or
rclb
adc
mov
cmp
add
xor
push
aas
jle
jmp
cmp
shl
shl
xor
inc
lods
lret
hlt
mov
loope
inc
add
mov
out
int
cmpsl
andl
inc
testb
push
nop
or
mov
cltd
and
sbb
test
adc
movsb
mov
in
or
push
insb
mov
cltd
jns
je
movsl
xchg
std
sub
xchg
cmc
adc
fldl
sarl
movsl
subb
or
jns
add
call
xchg
cli
xchg
pop
pop
mov
test
dec
loop
in
lock
mov
lds
shl
adc
aas
fcoms
cmc
fldt
lahf
lea
popf
sub
sbb
jnp
mov
neg
cmp
arpl
adc
shlb
or
sbb
push
mov
das
popa
xchg
shlb
mov
jmp
xchg
mov
inc
or
inc
aaa
loop
ja
sub
data16
sarb
push
adc
dec
popl
sub
mov
pusha
or
pusha
fistps
cltd
pusha
mov
loope
adc
jp
sub
cmp
add
and
lock
inc
scas
aam
scas
jo
add
pusha
ja
nop
lahf
mov
mov
push
inc
sarb
pop
call
cmc
out
xor
js
add
mov
sub
ss
mov
dec
xchg
mov
jo
in
jae
dec
loopne
fdivp
dec
cli
ret
cltd
jne
ja
mov
int
add
loop
mov
mov
out
mov
push
mov
jae
hlt
test
adc
mov
or
inc
adc
mov
jg
addl
rol
xor
and
daa
adc
test
push
cmp
fnsave
call
in
loop
xchg
xor
add
adc
movsl
stos
xor
and
loop
adc
movsl
pop
push
pop
mov
xchg
lahf
aam
xchg
dec
out
jae
xlat
lcall
dec
push
dec
xor
push
test
inc
jnp
daa
pop
push
mov
xor
scas
pop
sub
push
inc
cmp
jae
pop
jns
stc
dec
or
mov
stos
int3
int
arpl
fiadds
lret
mov
stos
mov
pop
movsb
adc
xchg
and
rcrl
shlb
lds
daa
imul
mov
push
ja
hlt
fcoml
xchg
fmuls
cltd
inc
dec
out
push
and
adc
cmc
out
subb
push
stos
dec
hlt
outsl
inc
cmpsl
sahf
pop
into
pusha
pop
add
push
dec
pop
repnz
push
push
imul
in
aas
add
sub
mov
mov
jae
jmp
in
mov
dec
hlt
shrl
loopne
push
je
push
inc
leave
cmp
stos
dec
pushf
aad
je
aas
cmc
fs
push
xor
or
out
cwtl
mov
lret
push
cmpsb
add
movsl
mov
sub
cmp
ss
cmp
jmp
fwait
lods
add
pop
dec
into
sbb
push
cld
fiadds
push
in
pop
sbb
sub
push
push
imul
stos
out
adc
inc
add
fwait
outsl
xchg
fcompl
cld
adc
and
pushf
mov
insl
xor
cmp
div
mov
mov
mov
jecxz
pushf
es
cmc
push
fistpl
mov
enter
jnp
xor
shrl
arpl
dec
and
lock
sarb
lret
cmp
add
mov
mov
jmp
rorb
or
scas
pop
rcrl
cwtl
shl
adc
aaa
sub
daa
call
adc
movaps
xchg
and
aaa
mov
mov
inc
loopne
mov
out
jbe
lods
test
dec
push
push
aas
push
std
lods
fbstp
mov
mov
inc
push
inc
mov
or
loopne
mov
les
mov
mov
aaa
into
shll
sub
jle
push
cmp
push
and
std
dec
mov
rcrl
pop
int3
sti
mov
cld
sbb
bnd
stos
push
test
cltd
jnp
and
xchg
inc
xor
cmpb
shl
xor
dec
pop
mov
jle
inc
ret
fsubrl
adcb
or
movsl
loop
pusha
adc
add
push
test
or
frstor
sub
and
jp
fildl
xor
lret
cmpsl
and
inc
mov
mov
xchg
divb
push
out
dec
fs
pop
fisubl
mov
in
pop
cmp
cmp
or
pop
cwtl
or
pop
icebp
mov
or
bound
movsl
sbb
adcb
pop
lods
xor
insb
cmp
or
shll
cltd
mov
leave
lock
jp
in
xor
xchg
and
xchg
fistpll
dec
dec
mov
decb
sub
pushf
mov
mov
notl
cmp
adc
push
mov
sbb
pop
jle
adc
inc
rcrl
rcl
dec
loope
loope
jnp
xor
pop
and
movsb
subl
mov
cmc
pop
mov
cmc
jp
sbb
rorl
js
fwait
xchg
insl
out
sbb
mov
movsb
xor
jp
sub
cmpsb
repnz
and
dec
or
or
popa
imul
movsb
mov
ds
lahf
mov
int3
mov
nop
mov
adc
out
pop
add
arpl
outsl
xchg
jb
jp
jnp
movsb
add
out
iret
xchg
addl
inc
repnz
xlat
outsb
in
inc
cmp
mov
jle
adcb
js
mul
mov
xlat
jb
hlt
push
mov
loope
pusha
cmpsl
mov
test
lds
inc
daa
sahf
fisttps
clc
push
add
push
jnp
xor
xor
sti
and
dec
inc
test
jne
popa
xchg
mov
dec
pop
repnz
popa
dec
dec
gs
mov
cmp
and
out
mov
push
pop
add
stc
out
lock
jecxz
sbb
xchg
xor
add
inc
mov
push
or
adc
dec
inc
loope
jp
sub
sti
cmp
jae
into
xchg
pop
dec
sbb
lock
imul
mov
negb
jno
pop
cmp
fwait
xchg
mov
outsb
pop
jno,pn
clc
test
ljmp
popf
cltd
sbb
test
mov
add
push
or
mov
jecxz
icebp
fwait
jecxz
es
mov
repz
pusha
fstps
add
push
inc
ljmp
xor
mov
adc
dec
outsl
push
in
or
aaa
mov
or
mov
cmp
dec
jae
insl
adc
nop
xchg
ljmp
mov
or
jno
iret
sub
scas
in
cmp
push
fs
pop
jae
movsl
fiadds
dec
cwtl
arpl
pop
das
insb
ja
andb
mov
ret
cltd
leave
jge
mov
movsl
int3
stos
mov
push
push
xor
mov
add
jg
mov
mov
idivl
jo
mov
xor
xor
push
push
icebp
sbb
xchg
out
pop
xor
outsl
or
mov
subl
lods
call
mov
sub
jo
jae
data16
sub
pop
data16
jl
push
add
out
mov
jnp
aam
dec
xor
mov
lret
popa
hlt
xlat
push
fisttps
rcrl
ljmp
mov
mov
sbb
test
jne
xchg
aad
addl
and
faddl
add
ret
in
sub
sub
mov
adc
xchg
ret
add
int3
mov
imul
test
movsl
into
jnp
scas
insb
enter
fsts
dec
fmul
outsl
mov
je
imul
jae
sti
push
pop
aaa
jns
rcl
push
cmp
cmp
testl
shrb
lret
enter
or
dec
andl
jns
popf
push
xor
cltd
cs
cmpl
ljmp
mov
out
hlt
jl
repz
xchg
int
xor
sbb
inc
mov
inc
push
cmpsl
dec
jmp
pop
adcl
add
fbstp
xor
adc
idivl
jmp
add
jno
in
scas
aas
jle
out
aad
fdivrl
pop
out
into
leave
xchg
add
fistps
out
int
sub
sub
jp
xor
in
mov
sub
aas
lock
inc
mov
ret
lea
mov
pop
mov
jg
ret
cmp
dec
push
xor
pusha
dec
test
xchg
xchg
and
push
cs
imul
aas
sub
test
addr16
lock
xor
test
pop
or
jae
xor
mov
nop
aaa
mov
mov
and
stos
cmp
or
incb
cld
lcall
or
push
xor
mov
je
inc
loop
call
dec
mov
es
cmp
mov
pusha
mov
pop
add
std
imul
or
sbbb
mov
adc
sahf
cmpl
mov
push
xor
sub
push
add
out
and
or
cltd
add
adc
xor
ret
xchg
mov
pop
sahf
pop
ds
shld
lret
pushf
cld
adc
jmp
dec
into
jb
sub
jmp
dec
fsubrl
daa
pop
loope
mulps
jae
dec
test
repnz
aaa
lods
fsub
rclb
gs
cmp
and
cld
push
push
or
xor
mov
pop
in
scas
add
arpl
sbb
insl
ret
jge
inc
aad
sahf
cmp
insl
and
movsb
data16
addr16
jno
data16
adc
mov
xchg
sub
sbb
fwait
repnz
inc
das
dec
rcll
xor
jmp
icebp
popf
scas
adc
dec
clc
xor
repz
cmc
test
adc
repnz
or
add
jns
pop
inc
mov
jge
sub
fisttpl
inc
inc
aam
adc
dec
xorl
loope,pt
jmp
sub
scas
in
push
mov
cwtl
pushf
mov
push
sti
add
inc
mov
sbb
and
jbe
jb
sub
aam
sbb
cmpsb
mov
mov
rol
or
loope
push
lea
insl
pushf
jbe
mov
repz
inc
faddl
test
loop
sbb
pop
int
pop
cmc
fcomip
cmpsl
inc
stos
and
clc
std
and
mov
push
repz
and
stos
adc
ja
ss
mov
and
lahf
sbb
push
jbe,pt
fsubrl
pusha
inc
sahf
push
and
jb
mov
popa
cwtl
cmpsb
cmp
add
add
or
mov
mov
xchg
push
push
mov
and
leave
out
or
mov
sti
loope
pushf
jmp
sbb
shrb
sbb
aam
xchg
ljmp
sbb
xchg
pop
dec
xchg
adc
jmp
cmp
and
mov
jo
push
mov
adc
mov
std
fistps
or
and
int3
or
fwait
sbb
sub
jl
add
sub
out
mov
sbb
mov
xor
daa
add
test
movsl
pusha
inc
scas
jge
mov
and
jbe
push
add
sbb
addr16
pusha
push
fildl
jns
fistps
pop
pop
stos
mov
subb
add
pop
outsl
jle
or
push
push
mov
sti
repnz
and
out
push
out
lret
mov
inc
jnp
into
testl
mov
shl
push
ja
ret
adc
sub
mov
sub
xlat
inc
jne
dec
mov
and
or
mov
ret
adc
pushf
jno
out
mov
or
inc
and
pop
cs
lret
mov
lods
testb
inc
cmp
add
lock
rcll
adc
lock
or
pop
arpl
add
imul
sbb
addl
jne
mov
icebp
dec
inc
adc
xorl
roll
dec
mov
xchg
lods
cmc
xor
xchg
cmp
mov
mov
xor
cli
and
sub
xor
shlb
xchg
nop
push
adc
adc
sbb
fistl
xor
call
push
pop
rorb
and
mov
xchg
pop
jnp
divb
scas
xor
lahf
stc
lcall
dec
inc
xchg
je
ret
sbb
pop
or
mov
mov
mov
incl
ret
int3
fmull
clc
sub
mov
fisubl
mov
in
push
in
pop
add
ficomps
das
push
xchg
or
lret
add
inc
jae
pop
loope
xlat
xor
mov
or
out
lret
sbb
inc
pop
sbb
pop
out
addr16
mov
cmpsl
cli
inc
mov
in
and
xchg
iret
mov
dec
sahf
fcomps
scas
sbb
add
mov
negl
push
stos
push
scas
in
daa
cmp
mov
int
xor
out
mov
aaa
mov
or
es
std
incl
fmuls
and
mov
mov
in
jmp
xor
lods
lret
and
sbb
xchg
out
stc
stos
rclb
mov
dec
shr
stos
rolb
mov
jb
fstpt
inc
jl
aam
addb
mov
movb
out
fstl
adcl
xchg
xchg
std
test
jmp
das
mov
imul
add
jne
pop
popf
lret
out
push
test
shrb
shl
push
fcomip
pushf
mov
xor
aaa
sub
pusha
adc
pushf
gs
jmp
and
mov
insb
xor
out
leave
xchg
add
faddp
and
mov
mov
pop
mov
and
jne
or
sbb
popa
xor
imul
sahf
lcall
mov
jge
sbb
and
mov
jecxz
shlb
inc
nop
outsl
adc
jl
inc
repnz
outsb
mov
sbb
pop
ljmp
sbb
pop
sarb
filds
shrb
or
sbb
fistps
mov
jne
arpl
cli
fimuls
and
lret
rcrb
cmp
shrb
pop
cmc
repnz
int
imul
adc
outsw
inc
xor
mov
clc
out
fsubrs
mov
and
xor
scas
inc
nop
push
push
out
loope
cmp
sub
js
xchg
lods
lret
lea
stos
jno
push
push
jb
outsl
and
cltd
es
cld
fsubs
out
popl
ja
test
push
mov
dec
mov
lahf
mov
mov
add
leave
mov
orl
rcrl
adc
movsl
adcb
pop
add
gs
aaa
jns
dec
lcall
aad
ret
aas
pop
inc
sub
sub
pop
pop
push
pop
pop
lcall
push
fildll
mov
movsb
inc
sbb
test
in
jle
inc
xchg
pop
int3
push
push
push
pop
and
lcall
sub
jecxz
addr16
xchg
gs
scas
outsb
dec
or
stc
sbb
inc
lcall
dec
ss
test
call
push
push
add
stos
das
repnz
mov
shrl
jno
pop
je
mov
push
dec
shlb
sbb
ljmp
sbb
rorb
test
mov
xchg
int3
and
enter
jmp
fwait
or
mov
and
mov
cmp
inc
or
pushf
mov
ficomps
push
sub
je
loopne
cmpsb
add
out
pop
xchg
data16
mov
push
jge
mov
jns
pushf
jb
mov
lods
xchg
in
inc
stos
out
cmp
sbb
mov
rorb
popf
scas
lods
xchg
dec
pop
rcrb
mov
in
pop
je
jno
ja
push
push
add
pop
subl
scas
push
vdivps
adc
sahf
shl
add
imul
sbb
mov
mull
popa
xchg
loope
bound
sbb
pop
in
adc
push
test
mov
fabs
push
cs
addr16
cmpsb
mov
pop
sbbl
or
or
pop
mov
lods
cmp
or
shl
inc
inc
std
mov
mov
sub
dec
into
dec
mov
mov
pop
cmc
ljmp
pop
adc
mov
ss
cmp
lea
add
dec
fbstp
cmp
jp
mov
add
repnz
jg
jnp
lcall
aas
xor
mov
or
ss
cltd
call
push
stc
shr
add
lea
aad
xor
lret
dec
repz
inc
and
add
cmp
and
mov
rclb
mov
movsl
dec
pop
fnsave
cmc
jp
jle
jp
or
or
clc
imul
lahf
int
inc
div
jo
scas
inc
push
mov
insb
daa
or
test
push
daa
cmp
jae
jl
mov
mov
repz
cld
or
mov
shr
dec
adc
cmp
xor
dec
pop
mov
testl
add
mov
inc
rcrb
jns
sbb
jns
or
adc
jecxz
scas
sub
dec
rolb
inc
mov
adc
xchg
and
push
stos
test
or
mov
push
xlat
leave
and
xor
popa
inc
jge
mov
into
pop
push
aad
ret
bound
mov
fisubrs
mov
divl
cltd
cmp
insb
js
pushf
es
fildll
aaa
adc
mov
add
xor
sub
adc
mov
aaa
xor
cmp
inc
out
push
sahf
dec
cmpl
cmpsl
popf
arpl
add
cltd
xor
mov
cmpsl
imul
dec
rcll
je
adc
dec
push
fsub
lock
inc
fisubs
pusha
pushf
inc
cmp
mov
sbb
or
jle
int3
xchg
aaa
loopne
mov
inc
xchg
dec
mov
imul
lcall
jmp
lahf
subl
cmp
jecxz
dec
fs
fwait
es
test
fldcw
jmp
cmp
rcl
xlat
sub
ret
cmp
out
or
cs
pop
jo
lods
sbb
enter
and
outsb
imul
enter
mov
loop
sbb
ja
lcall
xchg
mov
jle
xchg
movsb
shrb
xchg
cmp
outsb
sbb
add
out
jno
add
movsl
popa
xchg
sub
enter
sub
std
aad
sub
jp
pop
push
mov
addl
into
cmpsl
mov
nop
mov
dec
jbe
rolb
add
loopne
dec
jne
or
jo
or
and
mov
adc
outsb
pop
movsb
int3
push
mov
jnp
outsb
dec
fistpl
sbbb
and
mov
clc
xor
iret
movsl
pop
inc
dec
outsl
sub
lods
pop
test
ja
fidivrl
mov
pop
rclb
movsl
loope
jecxz
movsb
and
xlat
loope
mov
jb
scas
insl
sbb
mov
arpl
xchg
test
cmc
lods
lock
icebp
ja
rclb
jg
xlat
notl
pop
cld
push
pusha
ds
arpl
ret
pop
cmc
mov
cmpsl
sub
jae
daa
fstps
call
sahf
scas
xor
jp
es
push
dec
xchg
std
mov
dec
int
gs
mov
dec
pop
cld
pop
divb
dec
nop
imul
sti
pushf
cmpsl
adc
mov
into
sbb
mov
mov
push
mov
mov
sbb
hlt
and
sti
xchg
sbb
pop
dec
rcl
jno
cmpsl
lock
pushf
nop
shr
mov
lods
nop
imul
int
repnz
adc
pop
adcl
iret
daa
adc
popa
aam
sbb
push
rorl
xchg
jmp
dec
adc
pusha
mov
mov
rorb
in
imulb
pop
sahf
pusha
repnz
mov
ficompl
and
sub
jg
lods
jl
inc
sub
sub
mov
inc
cmp
adc
xchg
and
inc
cmc
push
in
xchg
xor
loope
icebp
inc
shll
mov
xor
jno
inc
cmc
push
in
xchg
xor
loope
icebp
vpmaddwd
mov
xor
jno
inc
cmc
push
in
xchg
xor
loope
icebp
inc
shll
mov
xor
jno
jmp
push
xchg
push
sbb
out
pop
mov
push
mov
aaa
cld
cwtl
inc
mov
rolb
icebp
sub
sbb
or
jp
push
pop
xchg
dec
cmpl
xor
lods
ficoml
lret
icebp
sub
sbb
or
mov
rorl
mov
stc
mov
or
lret
or
jp
add
and
and
adc
push
popa
stos
rorl
in
xchg
adc
cmpl
aam
fcomip
cli
and
or
add
push
aaa
inc
aam
mov
mov
imul
or
jo
fs
dec
ljmp
bound
mov
jl
sbb
sub
dec
xchg
mov
inc
mov
fnsave
decl
ljmp
in
pusha
cmp
fnstcw
rolb
dec
mov
jne
mov
sbb
icebp
lahf
push
ja
sub
xchg
mov
inc
mov
fcompl
add
jbe
mov
insl
icebp
fimull
sub
lret
jno
xchg
lcall
and
lret
lret
ja
daa
sbb
or
pop
xchg
dec
out
sti
and
popa
repz
outsl
cli
inc
cwtl
dec
mov
mov
movsb
sbb
push
cmp
or
fbstp
and
xor
fs
pop
scas
adc
xchg
jnp
sbb
in
ss
ljmp
out
mov
ljmp
icebp
sub
sbb
or
jp
push
pop
xchg
dec
cmpl
xor
and
adc
add
icebp
sub
sbb
or
jp
push
pop
xchg
dec
cmpl
test
add
dec
cmp
mov
mov
imul
sbb
test
sti
dec
shll
fistpl
movsb
and
testl
fcoml
dec
push
jb
fisubs
xchg
gs
imul
aam
jle
imul
fs
and
push
out
mov
shr
cmp
pop
imul
test
out
sarb
fwait
ret
push
scas
jmp
in
inc
mov
pop
movsb
shl
xchg
pop
cmp
in
push
pop
adc
cmp
popf
mov
push
roll
repnz
jnp
and
sub
and
lock
adc
jae
inc
add
arpl
cmp
clc
scas
sub
stos
lods
in
int
out
push
dec
and
ss
ret
jg
std
pop
loope
ror
int
cmp
pop
les
and
mov
pop
or
roll
pop
add
inc
fucom
lret
cmpsl
fs
into
mov
sub
or
dec
and
imul
cmp
dec
test
dec
int3
clc
mov
test
add
faddl
repz
xor
xchg
jg
adc
adc
cmp
jp
loope
loop
orb
outsl
nop
mov
push
ret
jmp
aas
sub
xchg
and
mov
and
inc
add
test
inc
lock
inc
pushf
icebp
sti
pop
mov
xchg
sbb
add
mov
scas
ds
add
dec
inc
repz
push
das
mov
out
xchg
inc
lahf
in
jb
pop
adc
movsb
push
mov
test
rcrb
pushl
lret
cld
lods
lahf
lcall
jbe
mov
push
add
jp
addb
cmp
and
add
jl
fstpt
xor
mov
clc
jl
jo
mov
xchg
ljmp
loope
scas
subb
stos
stos
pop
xlat
rolb
ret
xlat
stc
cmp
push
stos
adc
pop
add
aad
xor
dec
psrlq
add
std
mov
sub
cmp
sub
sbb
stc
mov
js
push
dec
mov
nop
ret
inc
inc
pop
call
jge
push
rcr
dec
mov
gs
mov
adc
lea
shl
inc
push
sub
mov
rclb
mov
adc
and
aad
shl
mov
into
or
xor
mov
decl
hlt
sar
inc
cs
cmpsb
and
mov
fcoml
ret
bnd
or
pop
jge
xor
inc
shlb
mov
jno
pop
cwtl
sti
and
cmpsl
hlt
mov
cmpsb
or
adc
call
mov
hlt
frstor
lahf
cld
sub
sub
cld
cmpsl
cmp
xor
das
ret
sbb
mov
and
mov
cmpb
sub
test
mov
cmp
and
aaa
jnp
pop
daa
jmp
fmull
lock
cld
sub
pop
jb
popa
mov
arpl
mov
mov
movsb
add
adc
mov
pop
faddl
sbb
sbb
dec
bound
lea
stos
cwtl
adc
xlat
aam
mov
lods
cmp
pushf
repz
cmp
aam
or
and
jp
jp
add
mov
test
cmp
adc
adc
test
aad
js
xor
mov
sarl
stc
xor
mov
dec
mov
mov
add
xor
pop
pop
xchg
cli
mov
mov
movsl
jp
mov
jg
cmpsl
out
push
les
jg
add
arpl
add
push
mov
fldl
pop
xchg
enter
int
notb
outsb
rorl
ret
jne
in
fstl
ret
pop
mov
sub
cli
and
mov
dec
mov
push
xchg
push
loopne
lods
ds
bound
in
and
xor
jne
cmc
jl
insb
mov
mov
andl
bound
xchg
psubb
lds
ljmp
adcl
add
mov
push
xchg
inc
add
sub
adcl
adc
cltd
pop
pop
movsb
addl
adc
nop
and
mov
loopne
stc
sub
imul
mov
jbe
push
out
pop
jno
xor
sub
testb
out
addb
xor
arpl
jmp
ret
cmpsl
cmpsb
sahf
jno
orb
fstpt
aas
cmp
sub
jle
xor
addr16
pop
and
or
xchg
or
jecxz
cmpsl
insb
int
cmpsl
mov
hlt
enter
ret
adc
in
fiaddl
je
and
sbb
jnp
cmc
in
cmpsb
adc
cmp
xor
arpl
add
pusha
mov
dec
pop
jbe
cmc
scas
push
push
cmpsl
aaa
hlt
push
sub
jbe
lock
test
cld
out
push
mov
jecxz
push
or
dec
add
mov
mov
fs
int3
ja
test
or
jg
repz
adc
adc
xor
xchg
nop
enter
je
cmp
jbe
js
mov
push
rclb
jge,pn
adc
fdivl
cmp
pop
inc
xchg
scas
data16
out
lods
xchg
in
pop
mov
mov
repz
loop
arpl
or
outsb
movb
xlat
in
xchg
lret
popa
dec
outsl
shlb
call
sub
jno
or
mov
mov
pop
or
cwtl
add
sub
jb
sub
pop
push
adc
cmc
lock
out
jl
push
pusha
fdivrl
mov
push
pop
hlt
js
pushl
mov
mov
inc
orb
call
or
loope
cs
cmpsb
push
adc
or
add
lahf
lods
push
mov
mov
bound
or
cmp
push
cmp
fsubrs
inc
aas
cltd
idivb
scas
repnz
sti
hlt
orl
add
mov
fidivl
and
popa
jns
inc
xlat
jg
cmp
mov
nop
lahf
mov
mov
push
jbe
xchg
and
popa
out
xchg
xchg
leave
int
or
jae
sub
push
je
and
fcoms
add
cld
js
in
lods
sub
fmull
jb
fisttpll
test
mov
jnp
jns
lock
push
sbb
cmp
mov
mov
addr16
pop
lret
fbstp
or
and
pop
mov
orl
push
das
sub
mov
outsb
cmpsb
lods
fsubl
mov
bound
xchg
pop
pushf
lcall
jo
les
shrb
lahf
or
push
ds
std
jbe
and
pop
leave
lock
cmp
push
push
mov
sub
and
sbb
xor
jns
jg
popf
je
mov
bnd
mov
xor
fldenv
out
stos
adc
mov
inc
les
mov
cld
inc
lds
lret
xchg
in
jle
and
int3
decb
jo
mov
sub
cmc
mov
cli
lcall
daa
dec
lods
out
icebp
sub
push
jnp
mov
lret
lods
xorl
add
inc
add
pop
mov
pushf
adcl
sbb
test
sbb
adc
lds
outsb
xchg
insb
repnz
inc
cmp
sub
adc
or
xchg
push
mov
repnz
cmp
push
adc
scas
mov
add
cmp
dec
cmp
xor
mov
test
lret
lret
add
pop
fdiv
sti
inc
pop
loope
fsubs
sub
fnsave
adc
int3
and
lea
pop
iret
sbb
xchg
clc
cmp
xchg
fstpl
hlt
cld
pop
in
mov
test
mov
add
dec
jns
mov
adc
int
pop
sahf
cmp
sbb
add
push
xchg
pop
push
or
pop
mov
mov
decb
fs
lods
adc
dec
in
or
out
nop
das
fmuls
push
out
cmp
not
lods
inc
loopne
inc
call
out
adc
inc
jge
sar
xchg
cs
insb
mov
outsb
mov
lds
movsl
dec
jp
jecxz
or
inc
push
jge
sbb
push
int
loopne
je
inc
mov
sti
ja
shrl
popa
add
in
in
adc
lods
xor
stos
push
shll
xlat
cmp
cmp
add
xchg
xlat
xchg
mov
xor
inc
inc
cltd
mull
push
call
mov
les
scas
push
mov
cmp
insb
sub
das
mov
fmuls
imulb
and
clc
call
xchg
out
cltd
pop
cwtl
fcomi
xor
add
insl
lret
inc
aad
ljmp
stos
test
lahf
inc
adc
xchg
fisubl
dec
and
stc
je
aam
pushl
sub
jmp
inc
ljmp
add
iret
lock
lds
mov
mov
xor
in
lods
andb
rorl
je
inc
adc
mov
in
inc
lret
in
lcall
xchg
insb
lds
mov
mov
es
mov
sbb
xchg
lret
outsl
mov
inc
mov
jbe
clc
daa
dec
out
xor
outsb
cli
mov
xchg
inc
jae
mov
lds
ret
push
xor
sub
insl
dec
push
push
out
rorl
aad
insb
inc
jl
and
lods
xor
push
xor
jg
stc
xchg
adc
nop
loope
pop
mov
pop
lahf
jne
sbbb
xor
popf
in
push
mov
stc
pop
mov
jge
test
loope
idivl
sub
cltd
imul
es
out
out
out
fldenv
xchg
dec
push
test
pop
int
adc
cwtl
pop
sub
pop
cmp
mov
in
mov
jno
mov
mov
sti
fwait
aaa
jl
or
mov
std
ss
inc
fmul
shll
sahf
dec
push
lahf
repz
pop
aad
sbb
jmp
outsb
cmp
sub
push
mov
dec
fists
int
pusha
adc
lahf
add
or
stos
pusha
mov
aam
mov
pop
mov
insl
mov
mov
and
jg
ds
sbb
inc
roll
fildll
xor
test
dec
mov
sub
xchg
rcrb
and
fmull
mov
mov
push
sbb
pop
inc
fimull
and
adc
jge
mov
lret
cmp
inc
sub
std
and
into
lret
sbb
hlt
fs
gs
das
jo
ljmp
nop
mov
add
and
lods
lea
lods
fimull
cmpsb
push
std
dec
pop
cmpsb
mov
and
add
xor
fcompl
popf
mov
and
scas
aam
pop
enter
mov
imul
sti
xor
pop
in
repnz
lret
leave
test
fxch
cs
inc
push
add
add
cmpsl
push
push
mov
bound
in
ss
inc
out
sub
aad
cmpsb
inc
add
sarl
sbb
dec
ret
sbb
repnz
outsb
mov
rol
sub
popa
cmpsb
or
mov
subb
xchg
xchg
scas
inc
ret
cmp
dec
jae
mov
mov
fmull
inc
pop
clc
scas
sub
mov
mov
incb
xor
xor
mov
push
xchg
in
test
mov
push
push
cltd
sub
repz
xchg
sbb
push
mov
pop
mov
call
aaa
imul
pop
test
jmp
pop
inc
aaa
adc
push
mov
xor
cs
rorb
dec
xor
ja
nop
push
call
mov
mov
dec
mov
xchg
imul
mov
lcall
cmpsb
sar
insb
inc
insb
scas
jae
and
adc
mov
out
js
xor
adc
xchg
sub
mov
xor
int3
and
jecxz
sub
dec
ds
sub
sub
mov
scas
and
push
shll
enter
lret
adc
test
or
jmp
jo
or
pop
mov
add
int3
ds
cltd
ficomps
loope
pop
push
mov
rolb
lea
into
sbb
push
cli
xchg
inc
lret
push
dec
dec
pop
in
in
in
outsl
xor
lret
and
sub
je
bts
sub
push
sahf
and
xor
or
movsl
int3
pusha
imul
xchg
fnstenv
das
mov
arpl
xor
mov
jnp
cmpsb
dec
jmp
js
and
mov
roll
pop
cwtl
dec
push
mov
dec
adc
sbb
pop
enter
clc
ret
ficomps
fbstp
in
aaa
das
cli
pushf
adc
jbe
pop
inc
adc
add
in
inc
adc
gs
lret
mov
add
dec
cli
dec
add
js
aas
test
cmp
push
xorl
fcmovbe
das
lret
fcmovnb
pop
and
mov
movb
fsubl
jl
dec
jmp
inc
sub
mov
pop
fimuls
rcll
stc
pop
sub
xchg
enter
dec
jle
pop
outsl
mov
adc
mov
and
fcmovnb
jmp
ljmp
mov
aam
enter
ja
or
rorl
sub
fnstenv
iret
push
fwait
in
jo
mov
repnz
inc
cmp
mov
mov
inc
lea
mov
ljmp
mov
push
ss
push
cmpsb
xchg
lea
mov
push
pop
scas
loope
scas
mov
lcall
add
arpl
in
sub
out
data16
loopne
repnz
or
lret
push
mov
cwtl
jmp
push
adc
jge
js
cwtl
jb
adc
jno
add
lods
push
lret
and
pop
xchg
xchg
dec
inc
jl
fidivrl
scas
mov
sbb
shll
jnp
sub
rcll
andl
jle
dec
dec
mov
and
cmp
xchg
pop
push
ss
stc
mov
aad
pop
pop
loop
lea
or
inc
jp
sub
int
sub
jno
loope
ret
xor
xor
xor
addb
add
fwait
add
mov
add
lcall
xor
mov
xchg
mov
mov
clc
mov
cmp
leave
push
lds
xchg
sub
push
aaa
add
lret
ljmp
fldcw
lcall
jp
mov
adc
jo
in
dec
xchg
gs
cmpsl
pop
pop
lock
shr
lcall
gs
inc
pop
push
mov
lret
in
inc
sti
mov
cmp
jp
fs
mov
movsl
test
xlat
push
jp
xchg
adc
add
sbb
xchg
gs
sbb
stos
cmp
mov
xlat
cmp
jnp
lds
xchg
push
insb
enter
mov
sbbb
popf
aam
out
cmp
mov
ret
xchg
add
push
call
lds
inc
and
dec
js
inc
adc
mov
mov
cmp
in
popf
sbb
in
dec
add
xor
adc
dec
pop
imulb
out
push
push
pop
ljmp
das
imul
leave
stos
inc
push
scas
sub
jbe
rcrb
rorl
lahf
cltd
or
popa
outsb
je
shlb
fiadds
xchg
sbb
cmpsl
xor
xor
popf
popa
es
aam
lock
mov
rcll
cmp
insb
mov
rorl
pop
xlat
pushf
mov
push
xlat
pop
fidivl
jne
jp
ss
fs
mov
push
push
adc
jnp
mov
int3
pusha
cmpsb
loop
lret
pop
ficompl
sbb
int
jne
shrb
in
mov
fwait
insl
mov
test
pusha
xchg
xor
jmp
or
xor
dec
dec
add
or
sub
leave
add
jo
gs
loopne
pop
insb
in
lods
push
insl
cwtl
inc
add
notl
adc
pusha
pushf
pusha
xchg
cltd
xchg
shrl
or
arpl
rclb
cwtl
in
cwtl
data16
cltd
paddsb
sti
add
lea
sbb
shlb
les
add
jp
and
loop
mov
or
mov
je
or
cmp
jg
push
pop
mov
std
dec
adc
outsb
mov
pop
xor
jbe
inc
test
loope
jo
adc
in
and
mov
cmp
jmp
mov
imul
loopne
bound
mov
les
mov
iret
xor
cld
mov
lods
in
and
sbb
push
sub
dec
add
stos
into
insb
and
adcb
adc
loop
sbb
jb
cmp
push
mov
bound
out
xchg
mov
dec
sub
jns
es
jmp
int3
mov
clc
int3
mov
insb
pop
movsb
mov
roll
xor
andl
js
rorb
or
cmp
lcall
push
movsl
or
and
jl
sahf
fsubs
out
inc
and
gs
icebp
stc
xchg
add
shll
xchg
sbb
sub
mov
je
in
add
jno
ret
pop
out
jbe
sbb
dec
in
xor
xchg
cmp
and
sbb
jp
lret
push
sub
in
sub
notl
repnz
mov
cld
adc
ret
inc
xor
mov
push
xchg
nopl
cltd
pop
mov
jno
adc
addb
sub
mov
iret
adc
fisttpl
xor
sti
dec
adc
fdivs
fisubl
inc
mov
bound
fidivs
xchg
push
cltd
jle
sahf
aaa
stos
push
xor
lret
nop
jecxz
and
in
data16
cld
int3
sub
stos
arpl
fisubl
loopne
pop
mov
popa
mov
push
sbb
ret
test
cmp
pop
pusha
les
lcall
jb
ret
mov
sbb
mov
lret
mov
push
imul
sub
inc
aam
lcall
sahf
jecxz
or
movsb
lods
fstpl
mov
ficomps
enter
pop
idiv
xchg
jnp
ds
cmp
clc
sbb
inc
sub
push
cs
cmpsl
mov
mov
pushf
fisubrs
sub
ret
insb
xchg
jmp
push
iret
jp
jnp
fcmove
test
and
scas
cmp
jg
jl
leave
fisubrs
dec
shl
out
mov
int3
inc
int3
inc
mov
mov
sub
sbb
adc
push
cli
testb
push
mov
or
cmpsb
mov
in
and
pop
in
jne
sub
and
sbb
sub
cltd
iret
insl
mov
pop
sar
pop
sar
push
sub
or
imul
sbb
in
loopw
loopne
jns
push
add
cs
mov
push
adc
cmpsb
xchg
popa
lahf
inc
sub
test
in
inc
cli
scas
mov
or
add
xchg
sub
xchg
xor
add
jle
outsl
call
or
mov
enter
insl
data16
mov
xor
mov
pusha
sbb
inc
loopne
stc
pop
push
into
xchg
xor
les
inc
mov
sub
adcl
popf
stc
pop
notb
rorl
movsb
and
sar
es
ja
fstps
lahf
mov
xchg
add
jge
push
mov
jl
fs
inc
jp
and
stos
sbb
mov
mov
or
subl
mov
add
pop
mov
mov
mov
cmpsl
inc
sub
adc
add
jge
mov
jge
mov
mov
test
cli
cmpsl
rcrl
xchg
adc
test
add
das
sub
cli
jmp
cmc
push
mov
pop
push
das
fcompl
movsl
cmp
int
test
and
idivb
xor
shlb
insb
lcall
xchg
iret
xchg
and
add
cli
in
mov
leave
stos
mov
mov
popa
fwait
cmp
ljmp
icebp
sub
sbb
or
jp
push
pop
xchg
dec
cmpl
xor
and
adc
add
icebp
sub
sbb
or
jp
push
pop
xchg
dec
cmpl
xor
mov
adc
cmp
sub
sbb
or
jp
push
pop
mov
cmpl
xor
and
xchg
lret
push
sub
rorl
mov
cmp
pop
sub
jle
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jl
insb
jle
dec
dec
pop
xor
pop
add
out
out
fmul
int3
fidivrs
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fidivrs
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
ror
mov
mov
jmp
sahf
or
or
mov
call
xchg
xor
stos
into
lret
mov
test
lret
push
nop
xchg
mov
sub
loopne
in
inc
push
popa
sahf
and
xor
jmp
lods
xor
cmpl
ss
mov
or
inc
cs
add
lret
dec
push
mov
jno
lahf
jl
dec
jg
dec
dec
dec
push
das
shrl
inc
out
dec
or
popa
jmp
xor
and
std
lods
out
fs
mov
fstps
or
loopne
xchg
stos
in
push
xor
in
data16
arpl
xchg
xchg
mov
pop
in
cmp
mov
lret
pop
push
decl
fwait
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fidivrs
mov
sbb
shrd
or
sbb
inc
jg
imul
scas
mov
in
stc
or
sti
or
sbb
dec
or
adc
dec
push
mov
int3
mov
ror
cmc
sti
out
sbb
insb
or
cmp
sub
sub
sbb
or
cld
out
in
fmul
int3
fidivrs
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fidivrs
mov
sarl
dec
pop
xchg
pusha
dec
idivl
cmp
xchg
mov
in
mov
xor
add
and
inc
mov
psrld
cmpsl
cmp
add
xor
adc
cmp
pusha
xor
sbb
add
stos
push
das
dec
pop
xor
xchg
inc
push
stos
push
or
pop
jnp
cmp
icebp
xchg
jecxz
fiaddl
in
dec
mov
mov
jmp
push
int
xlat
push
sub
inc
int
xor
aaa
repnz
mov
cmpsb
es
sbb
sub
inc
jecxz
jecxz
mov
sbbb
push
fcompl
pop
clc
cmc
or
fnsave
movb
mov
add
das
arpl
cmp
stos
inc
add
in
cld
push
add
out
out
mov
sti
aad
pop
ljmp
aaa
push
shrb
mov
mov
psubq
data16
test
int3
or
sbb
xlat
insb
or
pop
inc
adc
sbb
dec
inc
fisubrl
jp
outsb
pusha
stos
inc
fcompl
icebp
xchg
mov
scas
sbb
xchg
hlt
loope
cli
xorb
pop
xorb
push
pop
test
fisubrs
xchg
push
adc
or
adc
pusha
mov
negl
add
fnsave
sahf
add
in
pop
movsl
fisttpl
mov
movb
insl
clc
add
mov
ficoml
inc
cmpsl
cmpsb
sub
xor
add
int3
fistl
sarl
loope
lock
push
mov
cmp
xchg
lret
xlat
dec
push
loop
hlt
outsl
mov
arpl
pop
and
push
lcall
notb
jb
dec
ret
push
out
sub
cli
xorb
jnp
push
sub
inc
lcall
sbb
icebp
and
push
push
xchg
arpl
jg
popa
jg
clc
mov
movsl
aaa
jne
in
lahf
pop
das
sub
push
out
nop
subb
xor
shll
add
cmpb
cmp
shrb
sub
fstpl
aam
adc
fwait
push
push
es
ja
push
stc
clc
divb
push
cmpsl
sbb
pop
imul
mov
pop
cmpsb
sti
ret
loope
xchg
fistps
sub
lods
mov
jo
xlat
addr16
push
cmp
pop
leave
push
mull
xor
into
xchg
sub
dec
loopne
pop
jbe
iret
xchg
cwtl
out
or
mov
jae
mov
pop
icebp
jge
insb
or
pop
xor
popa
or
daa
cwtl
add
pop
jge
enter
mov
je
das
bound
sbb
jns
push
push
cmp
test
jecxz
push
push
mov
pop
push
dec
push
xchg
mov
sub
popf
out
mov
and
xchg
rcrb
stos
pop
hlt
mov
out
jnp
sbb
movb
adc
test
push
rorl
mov
mov
popa
ja
mov
ja
xor
imul
mov
and
dec
aam
movl
in
daa
stos
shrl
and
jb
xchg
cmp
addr16
arpl
sahf
cmp
aas
or
dec
insl
mov
dec
lods
mov
incl
ds
lods
push
fwait
leave
ret
jle
jg
cld
in
xor
sbb
and
mov
jg
xlat
lret
mov
inc
push
nop
out
les
inc
add
in
jo
pop
out
mov
sub
push
adc
mov
mov
pmulhw
int
mov
mov
inc
pop
push
cli
and
ret
ja
sbb
cmp
or
mov
push
ffree
sub
jge
out
pop
dec
icebp
ss
and
adc
mov
int3
stos
dec
sub
sub
jle
sub
pop
adc
movsl
daa
lods
daa
clc
aad
add
in
add
pusha
jo
movsb
les
shrl
add
adc
pushl
aam
clc
pop
inc
cmpsb
dec
push
out
sbb
push
xor
in
test
movsb
dec
inc
cld
test
xchg
push
xchg
shll
mov
test
loopne
imul
mov
cmc
test
pop
jecxz
inc
int3
rcrl
jmp
push
loope
jne
hlt
push
cmc
inc
or
rolb
in
aaa
sbb
mov
ja
pop
jl
pop
mov
pop
lret
pop
mov
xor
inc
sub
sti
xor
arpl
loop
pop
mov
fadd
pop
push
cltd
fisubl
add
notl
mov
test
sbb
lahf
test
stc
cltd
ret
lock
ja
mov
shrb
out
add
jae
jmp
fwait
add
xchg
lea
sbb
xchg
dec
out
fmulp
hlt
in
idivl
dec
jecxz
mov
loopne
mov
movsl
and
cmp
xlat
jmp
popa
sbb
xchg
push
aas
mov
lods
push
lea
and
ljmp
pop
fisubs
xor
shrl
out
sbb
pop
cmc
cmp
or
sub
xor
daa
adc
push
mov
fsubl
enter
push
inc
fists
sub
leave
pop
add
leave
arpl
add
cld
inc
int
test
scas
pop
pop
sbb
daa
adc
aam
sub
or
cs
stos
jl
cmp
adc
mov
jo
add
adc
mov
fcmovu
pop
jne
cmp
mov
jmp
ja
movsb
je
out
mov
insb
mov
popa
inc
mov
jbe
cmp
dec
pop
ja
into
pop
nop
pop
nop
and
mov
jae
es
scas
pop
insl
ja
xor
icebp
mov
icebp
repnz
rcr
or
cmp
in
scas
mov
xlat
xchg
sub
lcall
push
lcall
sbb
and
mov
jbe
aad
jle
pop
icebp
cmp
test
cmpl
xchg
stc
rcrb
cmpsb
and
sti
add
std
popa
xchg
jle
out
cmp
mov
sar
lahf
pop
sub
pop
lret
test
jnp
and
mov
les
add
xor
mov
pop
mov
enter
dec
dec
rolb
mov
sub
or
push
and
push
xchg
mov
sar
mov
lret
inc
xor
jbe
fisubs
jge
xchg
ret
aas
je
pop
dec
mov
in
pop
loopne
cmp
lcall
les
insl
mov
popa
push
mov
ficoml
sbb
cmp
and
push
cld
loope
int
jb
xchg
cmp
mov
imul
fcmovne
adc
adc
or
inc
test
lea
xchg
pop
jmp
repz
js
push
out
jne
jno
push
push
push
ja
stc
xchg
hlt
push
rcrl
mov
filds
outsl
xchg
jo
sbb
aas
into
scas
jecxz
inc
xor
daa
mov
outsl
pusha
out
subl
or
loope
mov
pop
mov
inc
nop
sub
or
lods
lods
push
push
aas
xchg
push
shrl
in
in
pop
lret
jno
inc
sub
bound
mov
adc
fucomi
add
adc
sbbb
cmp
movsb
inc
sbb
out
cmp
mov
push
jle
mov
add
jno
cwtl
imul
ss
mov
inc
add
cmp
pop
pop
fisubrl
or
xchg
fadds
mov
popf
int3
popf
mov
pushf
iret
mov
outsl
lcall
and
mov
mov
push
jae
cmp
push
dec
addr16
repnz
mov
mov
lahf
subb
inc
and
sbb
out
xor
pop
add
mov
adc
jnp
pop
adc
bnd
in
mov
pop
mov
xchg
xor
xor
xor
filds
lods
ficoms
mov
ss
xor
adc
pop
pop
cltd
cli
push
shlb
and
xchg
xchg
xchg
cmp
pop
test
mov
cli
mov
iret
add
xor
sbb
es
sub
in
mov
sbb
adc
aam
push
sahf
pop
and
adcb
push
jno
cld
mov
cmp
push
push
cmp
test
hlt
test
fnstsw
movsl
inc
es
bnd
cltd
ljmp
pusha
push
rorl
gs
stos
xchg
imul
in
cmp
pop
jo
mov
outsl
mov
nop
shl
push
xlat
inc
ret
lods
test
push
or
xchg
jg
inc
mov
mov
inc
push
fdivrs
push
and
ss
mov
mov
push
or
cmp
dec
fbstp
fcomp
clc
pop
nop
cmp
fnstcw
xchg
xor
shll
or
pop
and
in
xor
mov
std
aad
adc
cmp
push
cmp
mov
cmp
lods
adc
mov
xchg
adc
scas
xchg
mov
or
mov
cwtl
movsb
sub
xor
mov
out
jns
and
push
and
enter
test
jns
sub
xlat
std
lret
inc
daa
sbb
xor
mov
cmp
jb
test
mov
cltd
or
and
jmp
xchg
inc
cmpsl
sub
mov
loopne
movsb
lret
push
stc
cmc
test
fstpt
fucomi
mov
mov
dec
sbb
imul
nop
loopne
mov
xchg
stc
push
stos
mov
leave
test
sbb
stos
jmp
dec
in
mov
mov
push
call
hlt
cmp
aaa
ret
and
movsl
pop
je
es
sgdtl
hlt
mov
stos
xlat
lds
bound
adcb
cmpsl
roll
aas
jmp
or
inc
call
push
lods
xchg
jge
test
cmpsb
add
or
stos
pop
push
cmp
dec
jmp
mov
pop
loopne
xchg
lock
sub
mov
push
imul
mov
pushf
mov
lods
scas
clc
enter
leave
jnp
mov
push
aam
mov
or
lods
into
xor
cmpsb
insb
repnz
push
add
sbb
jnp
jl
fdivr
dec
xor
mov
into
pop
xchg
or
xlat
inc
cmp
dec
mov
dec
cmp
shr
jmp
jbe
das
filds
outsl
mov
push
sbb
sbb
or
pop
xchg
dec
mov
and
xchg
inc
xchg
int
pop
bound
xor
and
test
inc
jno
leave
stc
mov
cwtl
mov
sarl
test
imul
dec
sti
mov
lahf
sbb
inc
mov
inc
or
push
stos
rcll
xchg
hlt
xor
and
adc
sbb
push
sbb
lahf
sub
mov
fnstenv
in
sbb
cmc
xacquire
mov
stos
insl
mov
lods
jbe
addr16
cmpsl
mov
loop
int
push
xor
lea
lret
in
pop
pop
cltd
push
out
add
ss
out
push
lcall
sub
pushf
xchg
xchg
aaa
int
movsl
and
cmp
pop
jl
ret
leave
repz
or
jb
lea
pop
daa
dec
out
dec
cmc
push
mov
lret
leave
pop
sub
cltd
and
fidivs
stos
stos
ret
mov
hlt
sti
lods
aaa
and
cld
xor
xchg
xchg
fdivs
cltd
adc
inc
jae
fistpl
loopne
hlt
loop
clc
arpl
or
fists
in
fadd
pop
xorb
roll
xchg
jnp
pop
jp
and
or
push
aaa
jecxz
mov
in
repnz
push
jmp
or
lea
in
add
xchg
mov
fsubr
mov
sbb
jl
frstor
imul
les
inc
in
mov
popa
push
mov
sbb
shrb
cmpl
sbb
jo
out
incb
imul
out
jg
push
inc
testl
inc
mov
mov
mov
out
in
adc
loop
push
fldenv
push
mov
loope
add
jecxz
cmpsl
shrb
pusha
xor
les
mov
dec
call
adc
adc
jmp
neg
dec
cmp
ja
push
sub
add
test
and
jb
or
shrb
fcmovu
xchg
test
inc
icebp
arpl
dec
ficoms
push
sbb
and
shl
aam
add
sbb
adc
adc
xor
inc
pop
lea
out
jo
testl
mov
test
rorl
sub
enter
pop
or
loope
and
jb
in
pushl
dec
mov
xlat
popf
imul
imul
dec
pop
mov
xchg
gs
mov
ret
inc
lds
jns
pushf
push
gs
lahf
iret
test
xor
pop
push
rcr
sub
mov
js
adcb
inc
mov
mov
mov
sub
pop
scas
test
pop
pop
adc
loopne
mov
mov
dec
adc
out
lock
xor
mov
xor
and
ret
jecxz
neg
enter
dec
movsb
out
push
push
xchg
inc
insl
adc
xor
mov
fsubl
stos
add
push
andl
clc
mov
or
test
mov
inc
push
cmp
ret
mov
mov
divb
lock
jmp
cmp
pop
jnp
cmp
sub
adc
nop
inc
adc
adc
push
in
jg
adc
mov
or
xor
add
icebp
cld
es
movsl
sbb
sahf
sub
in
mov
adc
lods
mov
jns
cs
sarl
in
mov
addr16
in
jl
sub
imul
in
lea
scas
ret
es
addl
dec
and
ficoms
xor
push
jle
leave
mov
ror
mov
jmp
xchg
jnp
lods
xchg
inc
adc
or
out
jno
sbb
push
les
repnz
fsubrs
cltd
out
push
pop
hlt
nop
imul
lods
iret
cmpl
dec
mov
push
sub
in
mov
sahf
adc
adc
push
out
inc
cmpsl
loop
jno,pn
rclb
adc
ljmp
fs
cld
inc
jo
xlat
jl
outsl
sbb
pop
fisttpll
shll
insb
out
es
xlat
push
enter
add
or
mov
and
adc
mov
fbld
jb
repz
xchg
inc
pushf
cs
loopne
aas
mov
imul
sub
cmp
mov
push
mov
hlt
adc
inc
popf
inc
mov
les
add
hlt
aas
xchg
aas
jge
dec
or
mov
push
or
dec
xchg
hlt
add
cmp
es
and
gs
in
loop
dec
jl
lock
fcom
into
rcrl
test
popf
sub
or
loopne
push
negl
imul
out
in
jo
jnp
sbbl
pop
and
xchg
adc
push
aas
fiadds
cmpsb
jmp
cmc
add
push
dec
nop
in
data16
add
icebp
nop
adc
nop
jbe
fdivrl
sbb
imul
repnz
push
lock
js
sub
adc
insl
pop
in
ds
stc
lret
cmp
xchg
stos
cltd
adc
cmp
and
sbb
sub
fdivl
andb
popf
cmp
ljmp
aas
sbb
and
inc
repnz
mov
imul
dec
mov
ds
call
sub
xchg
int
pushl
sbbb
xchg
xor
and
cmp
leave
add
mov
lret
mov
pusha
lea
pop
mov
divl
push
pop
stos
sbb
xor
inc
les
jle
xchg
push
ret
addl
out
das
sarb
adc
sub
mov
shr
in
cmp
and
jnp
dec
stos
adcl
popf
sub
mov
hlt
inc
ret
js
cmp
cs
aam
cltd
in
shl
insl
jnp
call
inc
sbb
jo
stos
push
cmpsb
push
push
push
inc
push
loopne
scas
movsl
push
popf
pop
mulb
aas
add
iret
xor
cmp
inc
notl
jmp
rcrl
jl
stos
jb
sbb
sub
push
mov
in
stc
add
xor
aam
mov
idivl
mov
test
dec
sub
fiaddl
push
fstpl
sbb
xchg
and
outsb
lcall
inc
fdiv
adc
push
bound
mov
shrl
pop
pop
outsb
inc
mov
clc
sti
and
gs
pop
inc
sbb
and
sti
lods
adc
stos
add
push
dec
and
aas
lret
lcall
fdivrl
and
inc
popa
ja
sub
cmp
ret
add
ds
push
cmp
adc
roll
pop
ja
push
xchg
mov
insl
adc
mov
jne
ljmp
mov
dec
dec
lods
pushf
insl
das
fsubrs
or
addb
sbb
xchg
addr16
mov
jae
aas
repz
dec
stos
cmp
adc
insb
cmp
lock
push
mov
fcmovu
mov
iret
cli
and
insb
adc
enter
sub
jae
cmc
lcall
adc
sbb
xchg
lds
add
scas
mov
je
inc
gs
dec
popa
jmp
mov
mov
mov
mov
xor
imul
push
sub
xchg
xchg
fldt
push
mov
xchg
push
loopne
xchg
mov
and
rcll
cli
mov
sub
mov
hlt
pop
sbb
lret
rcrb
inc
push
xchg
pop
outsl
and
sub
pop
cmp
mov
mov
or
sar
push
push
ljmp
mov
sti
imul
and
mov
pop
arpl
mov
in
shlb
in
mov
xchg
stos
xchg
hlt
xchg
dec
adc
fadd
loopne
xchg
data16
in
movb
nop
cwtl
xor
push
mov
and
loopne
sbb
xchg
push
ret
les
jne
ret
dec
cwtl
and
fwait
inc
xchg
cmp
xchg
xor
ret
cmc
loope
cmp
gs
jp
push
mov
shlb
cli
scas
insl
adc
test
cltd
or
pop
pop
mov
mov
sbb
xchg
xchg
xor
sbb
cli
mov
sbb
mov
xor
out
and
or
jb
cmp
xchg
xchg
mov
shll
cmpsl
fmuls
mov
sarl
and
mov
popa
in
stos
dec
add
nop
xchg
cli
inc
je
push
push
les
sbb
push
xor
push
mov
dec
arpl
leave
lods
inc
hlt
inc
adc
add
lea
movsb
push
mov
jecxz
mov
movsl
ret
test
fildll
into
push
cltd
addb
cmpsb
inc
loopne
subl
stos
rep
in
mov
jnp
inc
pop
dec
or
cmp
in
sbb
data16
cmp
jo
int3
int
test
or
cmp
xchg
mov
leave
xor
scas
psubd
mov
clc
scas
addr16
adc
loop
bound
out
mov
pop
mov
fsubrl
jbe
cs
in
sbb
and
loope
int
xchg
lret
jns
pop
mov
mov
sbb
push
lret
mov
mov
dec
sbb
rorb
sub
sub
sbb
addr16
ja
das
movsl
lret
cmp
fs
dec
clc
icebp
dec
pop
in
push
mov
xchg
les
xchg
or
cmp
das
fwait
daa
fildll
and
xor
in
pop
cmp
enter
lret
mov
lcall
mov
lret
nop
adc
xchg
mov
iret
push
addr16
inc
add
ja
lock
push
jp
in
ficoml
inc
fs
inc
mov
gs
push
jb
lret
jns
lcall
add
cmp
mov
sub
cmc
movsl
jae
mov
popa
sub
mov
in
aam
jnp
out
insl
dec
xchg
fcoml
je
lcall
mov
add
cmp
call
test
and
inc
test
mov
cmp
xchg
mov
dec
xchg
leave
inc
jnp
aad
cmp
lods
sbb
add
xor
addb
enter
xchg
mov
push
test
jg
adc
out
shll
lret
loop
sbb
imul
setne
iret
pop
pop
inc
fisttpll
sahf
loop
cld
popa
add
and
push
sar
std
xor
mov
repnz
daa
mov
sarl
adc
xchg
fadds
dec
lods
icebp
movsl
popa
insb
mov
lods
outsb
roll
lcall
add
dec
xor
xor
mov
pop
xor
jo
mov
pop
lock
mov
cmpsb
push
lods
dec
cltd
lret
cwtl
xchg
jae
jle
movsl
add
sub
xor
daa
sbbl
clc
and
fldt
in
in
cmp
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fidivrs
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fidivrs
mov
pop
dec
dec
pop
cmp
sub
push
std
out
in
fmul
int
mov
mov
pop
dec
dec
pop
cmp
sub
pushf
mov
jbe
int3
test
fs
popa
mov
sub
cmp
push
and
xchg
nop
cltd
cmpl
xor
and
adc
add
jno
popa
pop
push
imul
lock
loope
shr
sar
scas
and
adc
popa
adc
inc
dec
mov
mov
lret
xchg
lcall
inc
dec
and
jp
pop
cli
inc
inc
mov
xor
mov
push
std
adc
xchg
dec
mov
or
jo
outsb
rcr
xchg
xor
les
gs
or
push
xchg
bound
mov
popa
and
jo
leave
jne
jmp
ficompl
icebp
mov
test
inc
dec
cmp
and
testb
sbb
sub
dec
imul
push
imul
int3
in
aam
cltd
jp
pop
push
test
test
stos
aam
rorl
mov
mov
and
fwait
pop
test
xchg
push
test
js
fidivl
in
or
test
rclb
pop
add
jno
popa
pop
push
imul
xchg
stos
addl
inc
or
jge
dec
push
xor
add
push
sbb
ds
adc
decb
mov
popf
mov
outsb
dec
bound
pop
dec
push
adc
add
dec
jecxz
int3
in
jmp
xchg
mov
psubw
and
add
inc
jns
mov
mov
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
xchg
test
loope
shr
sar
or
pushf
push
push
xlat
add
push
and
mov
cmpsb
xabort
adc
fsubrl
iret
mov
clc
icebp
pop
lahf
gs
xchg
jne
into
outsl
push
fcomi
js
setb
inc
pop
mov
mov
mov
les
and
and
mov
push
add
jnp
xchg
cmp
fucomi
in
movsb
loope
pop
cmp
sub
and
sub
cmp
cmc
mov
push
xchg
dec
jnp
ja
add
jnp
into
addl
jg
lcall
xchg
sub
sub
adc
pop
sub
or
aad
or
or
adc
stc
fldl
pop
fisttpll
cmpsl
sahf
pop
sub
push
fsub
jle
and
aam
fisubrs
mov
das
dec
jge
sahf
bound
cmpsb
mov
loope
rcr
push
popf
push
sub
xchg
xor
popf
and
xor
sbb
cmpsl
inc
ljmp
pop
and
shlb
cmp
stos
imul
mov
fwait
inc
or
lret
mov
sti
jns
cli
enter
out
stc
inc
ss
pop
cmp
ds
ja
mov
stos
pop
push
insl
adc
sbb
out
stos
in
loope
push
jb
pop
ja
inc
call
push
mov
fmul
test
inc
arpl
fwait
pop
jle
mov
test
push
fldenv
inc
mov
ja
add
pop
or
insb
ds
into
setle
imul
out
push
cld
pop
insl
cmpl
jno
enter
cmp
ljmp
push
mov
mov
xor
and
in
cmp
outsb
pop
xor
or
outsb
mov
and
sbb
xchg
cmp
in
jnp
icebp
call
add
in
or
push
push
stc
inc
inc
adc
jns
xlat
inc
fisttpll
cmp
cs
mov
fwait
mov
or
mov
sbb
frstor
fadd
dec
inc
js
popf
or
jns
subl
adc
or
sbb
loop
ret
dec
popf
jo
inc
sub
mov
and
pop
ds
dec
cld
cld
scas
adc
mov
cld
jbe
dec
insb
lock
xchg
pop
mov
in
push
mov
push
mov
lods
sub
sbb
cmp
and
or
lahf
xchg
push
mov
mov
cs
test
inc
mov
pop
jns
push
incb
pusha
xor
xor
add
xchg
mov
mull
xchg
aad
sub
pop
pop
pop
shll
dec
jg
loop
lds
sub
sub
mov
imul
push
cmpsl
popa
sbb
sahf
and
ret
outsb
jl
lcall
cltd
xchg
cltd
cmp
test
pop
mov
adc
pushf
les
jmp
int
out
movsl
push
cmpsl
lret
pop
hlt
arpl
rorl
xor
push
cli
js
push
ss
out
pusha
int
add
pusha
jl
fildl
or
mov
loope
or
jecxz
cmp
add
iret
rorb
out
stc
aad
mov
cld
and
mov
jge
pop
mov
movsb
jbe
push
movsl
xchg
pop
loopne
inc
and
mov
nop
mov
fidivrl
push
mov
adc
gs
sarb
mov
je
xchg
js
inc
out
movsb
addr16
sbb
cmc
fistpll
test
mov
loop
xor
bound
jb
fimuls
jmp
insl
ljmp
mov
imul
lods
leave
fbld
pop
cld
push
cli
mov
shll
sbb
lahf
cmp
shll
xchg
cltd
cmc
xchg
dec
inc
inc
xchg
ljmp
out
loopne
shlb
dec
adc
add
xor
pop
mov
movsb
mull
js
xor
sub
fldl
mov
cmp
aad
test
pop
xchg
and
jns
pop
mov
mov
std
call
sub
push
add
xchg
sub
movsl
push
outsl
or
adc
push
adc
scas
add
rolb
push
lods
lock
jno
sbb
pop
fmuls
mov
mov
sbb
dec
push
cmpsb
dec
jb
call
filds
pop
pop
mov
fdivs
shl
test
or
jecxz
inc
add
mov
jg
sbb
enter
inc
jle
jns
sbb
in
dec
leave
sbb
test
out
fimull
inc
nop
xor
sub
sub
loop
je
cltd
xor
inc
xor
dec
lret
lret
scas
loope
cwtl
test
in
push
scas
xchg
scas
pop
lahf
sbb
sahf
rorl
jbe
movsl
sub
jmp
xchg
mov
movsl
jnp
mov
jecxz
test
ja
in
jmp
into
sbbl
rcr
insl
lds
push
and
push
divb
loop
sbb
cmp
inc
addr16
add
push
mov
pop
daa
cmc
and
out
xchg
jne
xchg
shrl
pop
push
inc
out
pop
stc
ja
jbe
mov
iret
lret
and
pusha
xlat
jle
cltd
aam
adc
hlt
pop
or
cmp
lcall
int3
jecxz
test
jne
int
adc
sbb
push
popf
jnp
jb
xor
adc
test
gs
sarb
jecxz
jmp
xchg
or
inc
lock
xor
cltd
jae
repz
pop
ds
mov
cltd
das
pop
scas
pop
ret
inc
fisubrs
sub
lahf
in
stos
hlt
imul
dec
fs
sbb
jo
sahf
cltd
imul
mov
xchg
out
icebp
and
add
push
arpl
mov
mov
cmp
pop
inc
int
stos
rcll
jns
dec
push
paddsw
and
bound
pop
xor
mov
push
push
jp
inc
cltd
cld
sbb
xor
fidivrl
sub
arpl
jb
dec
push
jnp
cwtl
ja
stos
daa
and
jns
mov
inc
insl
cmp
pop
cmp
mov
jns
push
out
hlt
outsl
mov
je
cmpsl
cmpsb
jne
pop
jns
mov
cli
lret
jnp
test
mov
in
jmp
fisubl
xor
sbb
hlt
dec
stos
fmull
in
mov
push
in
cltd
mov
inc
add
mov
sbb
orb
jae
xchg
lea
mov
lcall
jge
push
into
lods
inc
pop
out
mov
and
xor
add
loopne
xchg
outsb
jne
sbb
lds
and
loop
out
inc
lcall
insb
pop
je
into
adc
es
call
mov
mov
push
dec
popf
push
xchg
xchg
cmp
jp
and
pop
ja
jae
in
inc
push
iret
mov
sub
push
shrl
fsts
sbb
mov
add
jbe
shll
xchg
add
in
and
mov
pop
xchg
out
mov
aad
sub
jne
adc
int3
lds
aam
cli
lods
in
int
jmp
xchg
push
or
xchg
fcomip
sub
hlt
fsin
add
add
and
shrl
clc
sub
xchg
xchg
mov
dec
xchg
stc
mov
jecxz
sbb
mov
jne
and
xor
repnz
adc
std
cwtl
push
fildll
xlat
inc
rol
and
test
out
popf
mov
rolb
sbb
sub
fs
mov
call
sti
aad
cmp
add
into
mov
in
arpl
mov
xchg
rolb
lods
fidivl
cmpsl
sub
and
mov
pop
sub
and
add
inc
out
loopne
lock
jns
mov
and
xchg
outsb
std
push
pop
add
das
ret
add
pushl
test
and
dec
and
mov
pop
fdivrl
push
stos
jno
and
ret
or
jge
repz
adc
sub
jg
sahf
or
pop
sbb
sahf
xor
js
fnstcw
xor
movaps
inc
mov
std
pusha
clc
xchg
stos
imul
das
loop
into
push
jo,pt
gs
mov
repnz
ss
inc
xchg
inc
filds
mov
push
int
bnd
push
out
mov
sbb
xchg
push
xor
mov
aad
andl
jl
and
push
mov
cmp
and
jl
and
push
mov
xchg
xchg
mov
dec
sbb
fcmove
aad
dec
in
xchg
jnp
ffree
test
push
ret
loope
leave
push
push
sbb
js
mov
jp
xor
shr
sbb
insb
mov
add
xchg
mov
jb
xor
pop
mov
inc
dec
decl
decl
lret
mov
jb
jge
dec
inc
cmp
aad
pop
inc
inc
adc
sub
inc
sub
sbb
sub
xor
dec
and
mov
fistl
mov
repz
lahf
cmpsl
adc
rcrl
scas
jle
mov
mov
xchg
add
cmp
add
jbe
cmp
mov
pop
push
cwtl
shrb
mov
sbb
scas
lods
dec
or
loop
cltd
inc
aam
adc
xchg
test
or
mov
jae
push
xor
pop
dec
ss
dec
mov
in
push
push
jle
shl
and
stos
cmc
insl
hlt
pop
push
push
push
sbb
insl
sub
in
mov
cmp
rcll
sub
xchg
and
popa
add
insb
pop
sbb
cmp
inc
leave
sub
clc
or
rorl
lahf
cld
ljmp
sbb
sub
pop
and
xchg
or
cmovs
out
jns
push
xor
adc
lods
popa
fcoml
inc
or
push
or
js
out
outsl
hlt
inc
cmp
mov
sub
dec
add
add
fcompl
add
sub
sbb
pop
mov
sbb
cmp
das
push
jmp
cmpsb
outsl
fisttpll
pusha
cmp
pop
aam
movsb
and
push
das
mov
cmp
xchg
cmp
pop
es
mov
inc
inc
aam
pop
and
mov
mov
push
push
aam
gs
and
fidivl
sarb
jmp
aam
fstpl
les
faddl
lcall
and
cmp
xlat
fsts
lods
rcl
pop
dec
dec
jg
and
arpl
sub
inc
movsb
cs
jle
cmp
ljmp
ret
movsl
lcall
sub
push
add
pop
shlb
mov
popa
std
jmp
push
jecxz
sbb
das
push
jle
lahf
imulb
std
push
cmp
arpl
push
lcall
repnz
aam
fadds
aaa
test
add
sahf
xor
jecxz
shrl
movsb
lea
pushf
mov
push
imul
push
mov
dec
ljmp
push
ret
pop
aaa
stc
lret
mov
sbb
lahf
test
stos
imul
addr16
adc
jl
mov
xor
adc
adc
out
push
lahf
pop
daa
or
xor
mov
xchg
enter
jle
sub
in
dec
out
cwtl
mov
or
lods
adc
addr16
jbe
pop
xor
cli
fcomp
inc
xor
or
aas
pop
or
aas
push
icebp
lea
and
xor
je
sbb
or
cmp
dec
loope
loop
fwait
roll
int
jge
mov
or
adc
push
iret
jnp
adcb
ja
scas
fld
cld
mov
push
xchg
mov
je
add
xchg
clc
test
lods
xchg
pop
xor
in
icebp
mov
and
or
in
xsaves
out
push
rcll
jae
insl
stos
insb
lods
mov
xchg
mov
pop
outsl
stos
add
icebp
adc
sub
popf
push
aaa
out
popa
mov
sub
lds
mov
dec
push
fisubrl
push
inc
pop
jecxz
out
test
gs
lret
rcrl
arpl
jge
gs
mov
sub
movsl
je
pop
not
jecxz
gs
push
inc
movsl
add
das
jo
leave
stc
enter
lret
and
pop
notb
jnp
loope
push
test
push
aas
mov
dec
mov
or
imul
mov
xor
jnp
jge
dec
les
divl
pop
mov
mov
pop
xchg
adcl
inc
test
pop
xchg
xor
sbb
scas
sbb
xchg
mov
pop
inc
xor
fstpl
test
test
or
jmp
sbbl
das
mov
js
sbb
and
push
mov
scas
sub
adc
cwtl
and
mov
inc
and
ja
data16
shlb
mov
movsl
sub
xchg
iret
je
ljmp
int
out
in
sub
lahf
jnp
sub
add
pop
mov
inc
dec
xor
or
push
loop
inc
cmpsb
fdivr
leave
into
pop
sbb
pusha
add
rorb
pop
outsb
mov
push
cmc
xor
push
xor
push
dec
aam
cmpsb
fs
mov
and
xchg
adc
in
pop
or
cltd
out
or
fwait
decl
pusha
sbb
xchg
cmp
adc
jecxz
daa
pop
cld
scas
inc
adc
and
add
mov
or
movsb
movsl
fists
adc
lcall
mov
sbb
cmpsb
rcl
in
mov
jno
arpl
rorb
jp
xor
mov
sti
sbb
sbb
scas
mov
sbb
sbb
dec
pop
in
ret
dec
test
dec
cmc
sub
scas
sti
cmpsb
adc
loop
cmpsb
cld
shl
jg
sub
hlt
aad
or
jmp
or
xor
popf
xor
jge
mov
fxch
and
jp
xchg
jo
inc
sti
pop
inc
bound
and
cs
xor
rorb
push
push
test
jne
mov
mov
xor
aaa
mov
lock
adc
pop
pop
sar
push
fiaddl
sbb
arpl
xor
and
adc
in
clc
pop
or
mov
push
enter
lret
mov
lret
shll
push
pusha
andl
fcompl
movsl
mov
decl
dec
fldenv
ret
loopne
inc
subb
lds
sbb
mov
out
lock
hlt
lods
into
mov
push
inc
or
mov
cmp
stos
hlt
ret
ret
mov
mov
pop
popf
push
jp
sub
jl
imul
dec
data16
sbb
in
mov
xor
mov
xchg
sarl
fldl
testl
sbb
aam
cmp
inc
nop
fldt
jo
and
pop
pop
lds
sbb
stc
jmp
insb
addr16
cli
addl
adc
jnp
fstpt
ds
mov
mov
testb
adc
or
mov
push
sub
lods
lods
clc
popf
mov
insb
int
xor
orb
ds
adc
inc
fdivrl
push
inc
in
mov
add
std
enter
xor
xchg
lahf
fldt
rorl
insl
leave
js
imul
mov
mov
push
xor
adc
jl
lds
mov
inc
sub
fimull
pop
sub
mov
dec
mov
sub
imul
stos
mov
dec
xor
fs
sub
mov
sbb
ret
aas
jg
addr16
jge
mov
stos
stos
xchg
mov
stc
push
jnp
dec
lret
xchg
sub
mov
add
stc
js
pusha
fsubrl
addr16
jmp
aam
xchg
out
and
jnp
mov
lds
scas
lods
mov
inc
sub
mov
aaa
out
mov
sahf
cmp
push
sbb
insl
push
addr16
jecxz
test
cmc
aad
pop
and
adc
or
popa
pop
pushf
rol
repnz
int3
sub
test
cmp
test
sbb
pop
sbb
ja
add
inc
pushf
xchg
lods
call
sub
sub
push
cli
mov
imul
pop
jp
mov
subl
int3
mov
stos
cmp
ret
push
push
and
xlat
dec
das
pop
das
adc
popa
and
pop
fwait
pushf
lcall
jns
add
orb
sti
clc
sahf
xor
fisttps
cmp
cs
jbe
xor
ja
in
xlat
mov
iret
mov
leave
sbb
roll
or
add
jp
lods
adc
daa
push
daa
or
sbbb
fcmovu
dec
ss
fwait
add
adc
ja
sarl
push
ds
icebp
cmp
lds
inc
pop
or
cs
jnp
in
mov
add
int3
divl
and
cwtl
inc
jge
lds
xchg
es
jae
mov
idivl
pop
shlb
mov
fmull
repnz
adc
adc
bound
cmpsb
inc
out
mov
cmpsl
dec
loopne
ror
inc
repz
jbe
lds
push
fcmovnu
mov
stos
mov
fucomi
xor
ret
xchg
xlat
jne
sub
or
push
cmpsl
cmp
pop
dec
cmp
mov
mov
loop
inc
lahf
push
leave
clc
cs
push
and
aas
in
fidivs
imul
ror
mov
xor
fs
fdivs
into
daa
jge
in
addr16
shl
les
test
movsl
xorb
test
in
pop
leave
cmpsl
fs
dec
adc
jl
repz
insl
xor
xor
jge
push
inc
loop
cli
mov
pop
lods
jae
fiaddl
inc
outsl
or
cmpsl
inc
in
bound
inc
loop
cmpsb
cmpsb
xchg
scas
aam
push
xchg
jb
cld
insl
cltd
shlb
rol
mov
mov
xor
xor
xchg
dec
fistl
lahf
cmp
lret
xor
into
fdivl
cmp
xchg
jge
pop
cltd
scas
out
fwait
cmp
mov
xor
jne
dec
mov
adcl
mov
push
push
insb
xchg
cmp
xor
mov
movsb
inc
jmp
mov
addb
push
popa
xlat
sub
in
scas
sub
mov
neg
dec
cmp
or
mov
push
and
imull
imul
lods
sbb
int3
mov
loopne
insb
push
lds
inc
std
fwait
shr
or
sub
dec
lret
pop
mov
outsl
fildll
fistps
dec
push
pop
pop
in
pop
fwait
idivl
pop
jno
dec
repnz
addr16
lds
maskmovq
divl
cmp
test
int3
mov
lods
xchg
movsl
pop
test
in
call
cmp
mov
mov
repz
mov
in
push
and
popa
pop
push
scas
push
pop
mov
in
and
notl
pop
cltd
clc
scas
jne
xor
sti
jecxz
enter
repz
loopne
or
cmpsl
adc
mov
fsubrl
data16
fistpll
scas
lahf
push
jle
sbb
sbb
jo
mov
call
cmp
or
scas
ds
dec
jp
inc
loope
mov
adc
lock
or
in
mov
mov
inc
xlat
cmp
pop
cmp
out
mov
sub
mov
jge
inc
pop
jae
out
inc
in
jp
push
in
or
fbstp
out
or
xor
mov
adc
rcl
push
int3
ret
cli
adc
imul
pop
mov
in
int3
mov
push
sub
iret
inc
adcb
sahf
fcmovnu
push
mov
nop
daa
lret
add
movsl
out
cltd
cld
fcomi
insb
js
dec
add
push
sub
jecxz
daa
xchg
mov
adc
ret
jno
sbb
je
or
cmp
cmp
hlt
mov
fdivr
xchg
icebp
fisubrl
ret
add
xchg
aam
int3
mov
sbb
xchg
into
sub
loope
les
jl
xchg
pop
push
lods
xchg
push
xor
jns
xlat
repz
mov
sub
mov
push
sub
cmpsl
stos
push
pop
push
inc
negb
inc
out
mov
fs
xchg
xor
add
int
out
cmp
cs
jnp
pushf
add
add
inc
das
int
loop
jmp
and
iret
call
fmuls
stc
shl
mov
loope
sub
test
cmp
push
mov
mov
lods
or
fnstcw
cs
add
sub
pop
pushf
es
fdivrl
cmp
pop
movsb
data16
xchg
mov
std
push
les
sbb
xor
arpl
sub
push
test
mov
cld
or
insb
cmp
push
push
mov
movsb
int3
sbb
sub
cmp
popa
pop
push
imul
xchg
test
loope
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
xchg
test
loope
shr
sar
or
add
push
insl
inc
jns
mov
mov
int
loopne
sbb
adc
add
dec
popa
pop
push
jmp
mov
into
xchg
ds
mov
dec
in
dec
pusha
pop
add
add
or
add
push
add
add
cmpsb
add
add
add
add
pop
add
add
add
add
add
jge
xor
lea
xor
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
xor
xor
sub
mov
verw
add
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
add
daa
add
add
add
add
ja
js
pop
add
add
add
add
add
lret
add
add
add
popf
add
add
mov
pop
add
add
cmp
je
je
dec
add
push
add
add
add
xor
testb
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
loopne
add
sbb
cmp
add
add
mov
add
flds
leave
add
add
add
test
add
stos
add
add
add
add
popf
add
add
add
pop
add
add
add
add
add
flds
jb
sub
movb
add
mov
mov
add
add
add
add
add
jge
mov
jge
or
push
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
pop
add
and
and
dec
add
dec
add
add
sub
add
inc
add
pop
add
add
add
add
add
verr
add
add
add
xor
cmpsl
add
add
add
xor
xor
jne
sub
add
mov
mov
popa
add
add
add
add
add
add
add
add
add
mov
roll
add
add
add
add
push
add
cmpsb
add
add
add
add
cwtl
add
xor
sbb
cmpsb
add
add
add
sub
xor
add
fiaddl
and
filds
or
and
flds
xor
add
inc
add
add
add
add
dec
add
jne
fiaddl
xchg
add
and
xor
add
add
flds
pop
add
add
add
sbb
or
pop
add
add
mov
es
addb
add
add
add
add
add
add
xor
xor
and
addb
add
and
add
add
add
pop
add
add
add
add
and
mov
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
fcomip
incl
inc
cs
int3
dec
sahf
les
push
push
out
fbld
push
adc
jns
xchg
fwait
dec
int
xor
xor
sub
aad
mov
push
mov
xlat
and
leave
push
jmp
inc
dec
into
aam
loopne
pop
jno
jns
enter
pop
inc
test
loop
and
add
xchg
mov
cmp
lret
pop
jle
xchg
loopne
or
adc
into
lret
imul
xchg
lahf
mov
stc
xor
xlat
pop
mov
adc
in
lds
sbb
and
mov
loopne
xchg
ret
cmpb
xchg
pop
cwtl
pop
hlt
cmc
cld
sbb
and
adc
insl
negl
cmp
push
xlat
lahf
and
mov
rorl
fdivl
aam
xor
push
lret
push
and
dec
clc
repnz
arpl
dec
fmull
imul
jl
push
test
cmp
or
inc
push
xchg
push
data16
notb
jg
xchg
cli
adc
rolb
inc
jne
leave
addr16
out
lea
in
cmp
int3
int3
push
mov
in
call
addr16
and
lock
sbb
dec
sbb
and
idivl
xlat
mov
fistpl
ds
fistpll
fmuls
mov
sub
les
mov
std
sti
mov
jno
sub
inc
cltd
xchg
sub
pop
mov
mov
cld
sbb
cwtl
movsl
dec
jae
andl
pop
dec
mov
outsb
pop
lcall
and
in
mov
sub
jle
cs
mov
sbb
lea
jno
lcall
xchg
imul
rcr
push
inc
clc
loope
adc
xorl
cmp
inc
mov
divl
out
fs
lcall
add
pop
lods
dec
sbb
jb
dec
outsb
bound
jae
inc
adc
in
int
in
stos
sbb
xor
movsl
repz
int3
shll
inc
ds
pop
sarl
mov
sbb
lcall
push
jle
rcr
pop
sbb
and
fidivs
int
xor
mov
daa
sbb
les
outsb
sbb
jb
loop
mov
sub
test
jb,pt
pop
cmp
sarl
add
in
jo
push
mov
mov
and
jmpw
sub
adcl
sarb
movsl
std
out
dec
mov
out
scas
sbbb
leave
psubusw
pop
out
mov
aas
popf
loope
pusha
repnz
rorl
mov
push
push
hlt
and
xlat
in
int3
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
