call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
arpl
xchg
push
push
push
push
pusha
pop
add
aaa
xor
mov
sahf
jmp
popa
into
into
es
push
push
push
outsb
jle
jle
pop
pop
cmp
mov
scas
mov
mov
into
hlt
daa
mov
push
jle
ss
inc
cmpsb
push
scas
mov
sti
into
mov
lcall
push
pop
dec
jnp
imul
mov
mov
lea
and
mov
imul
mov
inc
push
jno
jne
imul
ss
cs
push
sub
cmovne
insl
adc
mov
pusha
jno
pop
jae
cmp
pusha
inc
shll
dec
pop
outsl
jle
jle
sub
pop
in
push
sahf
popa
popa
add
cld
imul
and
stos
mov
fidivrs
mov
push
outsb
inc
out
push
jno
popf
aaa
sbb
lea
pop
icebp
out
test
hlt
xchg
lret
pop
cmpsl
push
push
inc
les
decb
mov
into
enter
ds
pop
jb
outsb
jle
outsb
dec
pop
out
pop
mov
adcb
les
pop
dec
jnp
imul
or
pop
xor
sub
sar
scas
ficomps
nop
in
mov
push
mov
dec
insl
aad
pop
jle
and
sub
lret
jmp
repnz
mov
or
dec
sub
outsb
dec
pop
pop
dec
scas
mov
sahf
mov
out
into
into
cs
push
push
push
outsb
jle
outsb
dec
pop
pop
dec
scas
mov
sahf
mov
out
into
into
cs
cmp
and
adc
cs
cmp
daa
rsqrtps
sub
fwait
dec
bswap
cmp
xor
test
inc
lods
sbb
shll
pop
fdivrs
mov
pop
jno
dec
int3
fwait
and
fiadds
nop
daa
jle
inc
push
inc
outsl
xor
lds
inc
aad
push
scas
aad
subb
outsb
mov
ss
int3
xor
sahf
or
jmp
jne
call
xchg
ficoml
movsb
xchg
outsb
rorl
adc
pop
sbb
ret
xchg
imul
iret
jmp
out
push
or
sti
dec
cmpb
add
int3
pop
das
out
call
dec
les
xchg
rclb
aas
call
scas
pop
fcoms
in
jo
in
mov
inc
ds
push
ret
mov
sbb
gs
sbb
mov
fisubl
movl
pop
loop
xor
mov
dec
notl
sarb
xchg
out
shrb
cli
lods
popa
jno
adc
nop
pop
loop
jae
push
jne
cmp
add
xchg
and
or
lahf
in
mov
add
push
cmp
sbb
shrl
mov
pop
push
push
push
dec
sub
jae
aaa
ret
mov
xchg
inc
outsb
movsb
xchg
jge
cmp
test
adc
lret
mov
bound
cmp
mov
in
cmp
das
jnp
ss
ds
cmp
add
pop
sbb
add
jge
inc
pop
inc
mov
lahf
cmp
xchg
xchg
push
cs
sub
and
pop
pop
jae
jecxz
outsb
cs
loope
lea
out
cmp
call
push
mov
dec
in
or
fidivl
pop
mov
inc
adc
adc
fstpl
mov
fdivp
mov
jnp
xor
arpl
jecxz
das
fstpt
gs
sub
mov
insl
and
negl
sbb
fisubrs
adc
ds
dec
pop
out
sbb
mov
or
mov
test
pushf
jle
ds
sub
loopne
jns
xchg
je
leave
dec
sub
cmp
cmp
stc
ret
add
push
jns
ss
inc
add
adc
nop
jmp
rolb
lock
cld
ljmp
subb
pop
mov
pop
roll
pop
add
sbb
or
jae
lret
cmp
rcrl
rol
mov
das
scas
inc
ds
js
mov
ljmp
cmp
add
nop
push
pop
lahf
bound
not
sub
jmp
lret
pop
pushf
addr16
sarb
and
jl
push
jle
dec
push
cmp
cmp
shlb
imul
inc
push
mov
pop
mulb
stc
mov
add
inc
aam
ja
pop
mov
mov
fistpll
gs
jle
xor
jl
es
add
push
sub
jnp
jle
push
xchg
add
mov
repz
dec
xchg
iret
adc
test
xor
cmp
sub
mov
xor
cmp
decb
or
fcompl
imul
inc
lcall
xchg
dec
ljmp
ror
imul
mov
stos
mov
int
mov
out
jo
movsl
inc
adc
pop
sbb
idivl
cmp
divb
mov
inc
mov
rcrb
inc
shll
push
pop
xlat
pushf
fsub
jae
and
loop
or
andb
les
scas
lock
xchg
hlt
cs
pop
js
cli
or
rolb
enter
add
bound
aad
inc
into
rep
das
jmpw
int3
push
dec
outsl
addr16
mov
mov
xor
out
mov
pop
push
hlt
cmp
pop
xchg
push
xchg
filds
sbb
xor
addr16
movsl
test
cmp
cmp
or
movsb
sub
dec
push
lea
and
roll
dec
mov
or
lods
mov
aad
inc
and
mov
and
push
mov
inc
mov
mov
mov
nop
jp
fisubl
mov
mov
push
dec
ficoml
push
and
adc
cmpsl
lods
addb
dec
inc
and
or
push
cli
mulb
shr
xchg
xchg
cli
pop
in
aaa
cmpsb
pusha
jl
out
outsl
mov
fs
addr16
inc
and
jnp
repnz
hlt
pusha
mov
lods
pop
jge
mov
lods
fs
xor
out
outsl
jno
pop
int
out
push
push
mov
push
arpl
xchg
cmpsb
jae
mov
mov
int
in
mov
inc
adc
lock
mov
adc
popa
mov
cld
inc
repnz
insl
test
cmp
incb
jno
adc
add
inc
inc
and
mov
insl
bound
add
daa
shlb
add
dec
jo
add
jno
adc
sbb
xor
sarl
arpl
and
int3
pop
xlat
push
mov
mov
int
pop
cmp
fistl
out
jno
push
adc
add
ret
jns
int3
cmp
imul
ret
lock
aad
xchg
fimull
pop
outsl
out
cli
movsl
xchg
test
jp
or
out
push
mull
cmp
dec
jo
icebp
lods
xchg
aaa
push
sub
fdiv
lods
outsl
or
testl
dec
mov
mov
int
hlt
out
sahf
int3
jp
insl
dec
fldcw
shlb
or
cli
mov
cmp
adc
out
and
xor
ret
xor
mov
dec
inc
xor
cmpl
dec
int
sbb
popf
dec
int
mov
mov
xorb
lahf
mov
add
fs
xchg
dec
lret
and
xchg
sub
ficompl
or
iret
add
pushf
leave
pop
sbb
inc
and
cli
jnp
push
and
mov
idivb
lods
ss
fcmovbe
js
inc
cmp
addr16
mov
jle
movsl
je
push
loope
les
std
scas
sbb
imul
mov
clc
in
jmp
pop
movl
pop
jmp
clc
rclb
sbbl
cmpsl
std
pop
push
push
jb
and
fwait
or
inc
mov
jno
xchg
jg
outsl
xchg
fnsave
jl
ljmp
stos
dec
sahf
fistpll
xchg
inc
sub
mov
fcoml
jae
mov
insb
aam
xor
fldcw
lods
xchg
into
cld
ret
lcall
mov
xchg
cmp
mov
mov
leave
xor
ja
inc
in
cmp
pusha
fdivrl
cli
xchg
sbb
xchg
mov
nop
xlat
rcll
jle
dec
int
inc
loopne
clc
aad
xor
and
mov
jg
popa
sahf
incb
adc
mov
xchg
pop
addr16
sbb
mov
mov
sub
cmpb
inc
iret
andl
daa
push
fildl
in
or
sub
jmp
xor
stos
aam
int3
cmp
mov
insb
out
leave
xchg
adc
dec
lods
addr16
push
orb
ret
movsb
pop
loop
xchg
mov
jo
and
fsub
dec
jae
in
inc
xor
adc
mov
sbb
pop
xchg
mov
mov
sub
adc
pop
mov
aas
leave
sbb
rcll
mov
cmc
or
mov
lods
mov
aas
dec
fsubrs
mov
insl
enter
xchg
in
sbb
dec
ljmp
mov
loopne
setl
mov
lcall
mov
xlat
mov
ljmp
pop
or
mov
out
xor
jbe
xchg
clc
pop
adc
jle
pop
xchg
shlb
xchg
out
sub
pop
mov
ror
and
jnp
dec
push
push
push
mov
push
mov
dec
dec
dec
and
and
push
and
loopne
push
negb
imul
dec
enter
inc
pushf
call
xchg
push
sahf
or
icebp
cmp
pop
cmpb
faddl
push
mov
lret
lcall
sbb
jecxz
mov
jae
mov
push
jo
adc
fsub
rclb
sub
es
mov
push
repnz
insb
or
add
push
mov
pop
xchg
xchg
xchg
lods
cmpsl
sbb
or
cld
ljmp
insl
filds
sub
fsubl
dec
push
adcl
insb
call
push
pop
adc
mov
cmp
and
in
jo
test
jns
or
and
enter
cmc
nop
mov
in
adc
mov
jecxz
in
sbb
mov
insb
pop
inc
iret
stc
sarb
sub
pop
fdivrs
icebp
jnp
jg
in
pusha
xor
lds
jno
xor
adc
mov
filds
inc
in
out
out
sbbb
add
div
shrb
repnz
inc
cmpb
mov
je
lea
sub
pop
imul
or
mov
sti
repz
movsl
andb
in
insb
jmp
loope
or
ffree
push
xor
stos
cmp
adc
inc
mov
add
pop
cmpsl
xchg
pop
dec
jno
imull
es
adc
std
jg
jae
adc
stos
jne
push
jl
xor
ret
jnp
ds
scas
inc
js
aam
notl
cmp
rcll
sbb
addr16
bound
xchg
pop
shrb
testb
mov
test
push
ret
nop
and
shlb
mov
inc
jo
dec
into
sbb
daa
ss
and
and
cs
outsl
push
sbb
shl
cmc
daa
ss
imul
into
dec
das
shr
stc
enter
mov
cmp
das
mov
test
mov
add
notb
mov
aam
xor
sbb
mov
lahf
mov
cmp
adc
lea
ret
jecxz
sub
inc
dec
testb
add
je
pop
popa
idivl
test
adc
jo
push
inc
mov
mov
lret
mov
sbb
repz
stc
lock
push
cld
cs
and
in
push
fchs
pop
incb
and
jbe
mov
inc
adc
fbld
pop
gs
mov
add
xchg
jo
loopne
xchg
jbe
aaa
adc
outsb
cwtl
xchg
mov
subb
push
push
call
rorl
aam
outsb
jnp
pop
pusha
test
ss
ja
mov
dec
add
mov
fildl
jl
lods
add
ret
hlt
xor
pushl
fstps
mov
ret
sub
xchg
mov
mov
js
jg
int3
aas
sub
pop
add
es
push
cmp
pop
inc
push
dec
push
fldcw
out
jo
xchg
pop
fmulp
ja
flds
cmp
mov
jge
xor
fisubs
insl
add
push
loope
xchg
mov
mov
hlt
push
inc
pop
sti
fwait
daa
add
or
xchg
sub
je
hlt
mov
jle
mov
jbe
imul
mov
mov
pop
int3
jns
fcomps
cmp
inc
popa
cmp
and
cmp
ljmp
xor
mov
mov
dec
out
fimuls
in
int
int3
fwait
lret
lods
jmp
es
cmp
sbb
fidivl
sete
sbb
idivb
stos
push
xchg
mov
or
ja
jmp
jo
rorb
movsl
mov
rorl
das
jle
je
mov
mov
mov
jle
sbb
aaa
mov
faddl
adc
xlat
push
je
decb
cmp
xchg
shl
test
xchg
push
adc
fistpll
es
dec
xchg
xchg
mov
sub
cmpsb
pushf
xor
push
fimull
repnz
mov
outsb
and
mov
pop
sbb
cmp
test
in
aam
mov
add
mov
pop
add
and
dec
icebp
xor
leave
inc
push
lahf
xchg
dec
daa
and
inc
sub
sub
jne
mov
repnz
mov
imul
adc
fs
gs
das
adc
pop
jg
add
sarl
ret
cmp
int
stos
xlat
loope
xor
out
pop
xlat
imul
pop
xor
lcall
and
pop
mov
leave
iret
int3
jmp
xor
lock
cwtl
std
adc
adc
inc
cmp
roll
jo
out
dec
lahf
pusha
mov
mov
repz
fwait
stos
out
mov
pop
jecxz
fs
sub
int
pop
and
daa
mov
dec
inc
cmp
jmp
push
jl
sbb
jmp
mov
jae
and
nop
js
jno
dec
sti
lea
pop
dec
mov
jo
jmp
add
lock
mov
loope
push
fs
pop
out
xchg
mov
pop
shll
xchg
repz
leave
adc
jmp
dec
imul
push
stc
mov
or
shll
inc
call
pop
dec
mov
icebp
pop
fs
mov
jbe
aas
cmp
pusha
iret
lcall
jge
test
shrl
pop
lods
dec
inc
push
adc
or
sub
and
mov
rclb
std
into
push
ljmp
or
fcoml
rcll
push
lret
mov
xchg
pop
scas
gs
jmp
mov
pcmpeqd
mov
push
out
jo
inc
push
jbe
shlb
bound
adc
test
js
orl
jnp
lcall
sbb
movsb
adc
iret
imul
xchg
and
mov
negb
xor
cmp
leave
xchg
decl
cmp
mov
inc
int3
out
cltd
bound
jb
inc
sub
lods
iret
cmp
or
push
into
dec
mov
pop
repnz
imul
call
cmp
das
push
xchg
mov
movsb
in
enter
pop
push
adc
sbb
pusha
cmp
and
xchg
movsl
pop
scas
repz
fstl
jg
jp
test
scas
out
pop
push
fdiv
xor
rcrb
fwait
sarb
mov
push
xchg
sbb
iret
mov
push
aad
cmp
fdivs
lds
stc
adc
fcompl
bound
push
dec
xchg
in
xchg
fwait
lea
dec
lea
call
ss
cld
pop
dec
mov
pop
mov
jno
pop
xchg
sub
pop
mov
rolb
pop
pop
aad
addr16
dec
pop
jl
cwtl
dec
call
int
adc
dec
mov
icebp
fs
in
lds
into
clc
lret
enter
daa
sbb
ds
and
into
mov
mov
aas
jne
ja
filds
orl
mov
mov
stos
je
pop
pop
inc
pop
rolb
push
mov
inc
adc
dec
jns
mov
subl
scas
std
pop
mov
jmp
push
inc
cli
fisttps
rcll
xchg
jbe
sub
jp
jae
inc
sub
add
xor
mov
add
gs
sub
jnp
fidivrs
lds
insb
in
pushf
fcompl
jecxz
xchg
pop
cmp
mov
pop
adc
xchg
pop
inc
push
insb
mov
xor
add
jbe
es
fldenv
hlt
ret
cmp
sbb
and
scas
sti
pop
xor
xchg
dec
rol
cmpsb
xchg
cltd
mov
je
mov
mov
mov
out
inc
inc
xor
pop
dec
mov
or
push
mov
pop
test
jl
clc
arpl
jb
scas
sub
les
gs
push
and
cld
fnstcw
push
ret
js
aas
cmpsb
xchg
ljmp
call
jmp
or
fwait
imul
sbb
and
mov
inc
pop
sti
adc
imul
lahf
mov
push
pop
and
mov
out
jae
inc
in
jne
addr16
rolb
jmp
loope
popf
sub
scas
sbb
cltd
and
xchg
dec
mov
push
sub
popa
pop
sub
pushf
push
stc
std
sti
jge
mov
mov
and
sbb
aas
test
repnz
sbb
mov
sub
push
aad
sub
mov
fisttpl
js
xchg
add
mov
sbbl
test
adc
cld
insb
xchg
or
arpl
lods
insl
cs
jl
mov
mov
bound
int
xlat
fcmovu
rcrb
jbe
jns
sub
sbb
addb
mov
hlt
cmpsb
sbb
loopne
cmp
test
pop
push
clc
add
and
ja
fstpt
mov
aam
mov
sbb
repz
hlt
add
jbe
int3
adc
mov
pop
mov
pop
xchg
lods
pop
into
mov
mov
ret
add
xor
add
mov
pop
call
jae
add
push
test
mov
mov
cmp
mov
aam
and
lret
jmp
clc
add
pushf
sbb
xchg
inc
xchg
fwait
jmp
cli
xchg
adc
int
pop
or
mov
cmp
mov
inc
lcall
test
sbb
inc
xchg
shr
orl
and
dec
mov
jle
pop
pop
push
pop
out
sub
mov
lods
imul
pop
cmp
pop
dec
test
dec
and
faddl
mov
cmc
icebp
adc
cmpsb
sbb
push
clc
mov
lcall
out
ror
nop
or
sbb
mov
je,pt
lcall
or
push
lds
dec
std
call
dec
movswl
mov
addl
push
sub
sti
mov
sbb
test
icebp
jo
fadds
push
cwtl
and
inc
dec
sbb
js
cmp
mov
cmp
repz
xlat
shll
dec
scas
sub
mov
mov
dec
call
xchg
mov
and
ja
xchg
daa
mov
jns
jle
mov
jp
and
push
dec
jnp
push
mov
push
push
pushf
je
push
mov
sub
or
lahf
rol
es
fldt
pop
lods
sbb
subl
inc
pop
scas
aam
lahf
push
sub
xor
lods
cmp
pop
pop
jge
pop
movsb
cmc
dec
add
dec
ror
dec
negl
or
mov
stos
sub
lret
sub
add
imul
mov
adc
pop
sub
jnp
sbb
shll
inc
xorb
add
orl
mov
arpl
and
adc
push
sbb
cs
sbb
jp
pop
add
std
enter
inc
stc
lcall
aam
sub
lds
fisttpll
adc
into
pop
and
cmpsl
roll
gs
pop
cmp
pop
nop
fsubs
xor
dec
jne
sbb
cmp
adc
inc
std
mov
rorb
sub
adc
and
jl
js
mov
sub
mov
ja
inc
mov
inc
dec
lcall
mov
fcoms
lods
mov
adcl
fwait
add
lds
push
shlb
aad
jle
adc
xor
mov
out
jecxz
dec
mov
mov
adc
jmp
lret
jae
mov
cmp
jge
call
sub
and
ret
add
mov
pop
mov
jg
mov
es
xchg
aad
mov
out
fsubl
lea
es
fs
ljmp
sbb
or
cmp
mov
pop
and
lds
mov
xor
cmpsl
shl
cmc
int3
xchg
fisubrl
leave
daa
inc
dec
mov
mov
and
pop
jo
push
cltd
iret
push
push
filds
mov
adc
sar
add
out
cmpsb
jg
pop
loope
js
insl
inc
and
dec
lods
lods
and
iret
clc
or
pop
or
xchg
aas
mov
and
push
and
loope
adc
sahf
ljmp
aaa
cmpsl
sbb
xlat
inc
movsl
mov
mov
out
ret
movsb
jl
and
xor
sti
xchg
dec
loop
pop
lret
insb
shrb
inc
xchg
or
cmp
xor
or
into
and
inc
insb
cmp
loop
jge
ret
rcrl
in
cwtl
sbb
sub
rcl
int3
cmp
adc
lahf
pushf
addl
repnz
push
or
and
dec
cmp
push
xor
mov
mov
bsf
nop
add
pop
xchg
inc
mov
pushf
sbb
pushf
mov
daa
jl
mov
mov
push
add
outsb
jle
outsb
dec
pop
pop
dec
scas
mov
sahf
mov
out
into
into
cs
push
push
push
outsb
jle
outsb
dec
pop
pop
dec
scas
mov
sahf
mov
out
into
into
cs
push
outsl
jle
outsb
dec
pop
pop
dec
stos
mov
lcall
lret
adc
xchg
ss
outsb
jle
outsb
dec
pop
fimuls
and
sahf
stc
cltd
jbe
xchg
xor
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ss
pop
fnstenv
in
fisubrl
jae
test
dec
cld
pop
lods
sub
cmp
jl
jl
pop
fldcw
cmp
or
sbb
out
cld
jns
dec
push
pop
lods
inc
mov
sbb
gs
push
leave
inc
fnstenv
mov
cltd
in
imul
cmp
addr16
push
lcall
and
sarb
add
add
insb
inc
sub
icebp
jno
xchg
dec
pop
jmp
ret
cmp
adc
xchg
pop
sarl
pusha
or
dec
loope
jl
add
mov
add
out
aas
add
pushf
adc
or
stc
cmp
mov
mov
loope
mov
or
mov
fcoms
cmpb
add
mov
sub
cld
xor
or
in
add
push
jp
cmp
or
insb
jl
add
rcrl
in
xorl
sub
mov
dec
insb
sub
lods
jmp
dec
fnstcw
es
cmc
imul
pop
mov
movsb
cmp
sbb
dec
int3
push
rorb
iret
jno
cwtl
adc
js
sub
sub
jmp
mov
lods
pop
fstps
push
cmc
pusha
loopne
std
out
and
add
inc
iret
cmp
pop
pushf
jbe
lods
dec
mov
mov
cmp
or
sbb
in
imul
pop
lods
sub
insb
jmp
pop
fldcw
cmp
or
sbb
in
imul
pop
lods
sub
insb
jmp
xor
add
adc
push
inc
fcmovnb
orb
adc
or
xorl
sbb
insl
out
int3
inc
push
andl
les
fistps
shl
aas
jnp
sarl
xchg
pusha
loope
or
rcrl
xor
sub
mov
lret
lock
movsb
sahf
out
sti
jmp
dec
cmp
cmp
inc
or
push
jno
leave
jl
scas
in
dec
dec
stos
hlt
fdivrl
or
add
insb
or
nop
jg
push
inc
repz
xor
jbe
push
cmp
sahf
mov
cmp
rcll
in
push
xor
mov
sbb
adc
cmpsb
jbe
outsb
or
in
xchg
cld
fcmovne
cmp
xchg
bsf
jb
jns
or
jg
rclb
cwtl
pop
insb
daa
mov
nop
mov
fnstsw
and
mov
cld
sub
les
or
sti
lret
adc
in
mov
mov
mov
mov
or
push
dec
clc
add
enter
hlt
cmc
lret
ret
out
xchg
jns
and
dec
adc
hlt
bound
inc
mov
pop
stos
into
cld
das
dec
pop
fnstcw
and
sbb
and
inc
maskmovq
testl
rcrb
cmp
or
sub
push
nop
repz
jge
sub
cmpsl
dec
fdivs
mov
sahf
add
push
sbb
or
shlb
test
in
and
mov
in
sbb
cmp
mov
pop
fists
mov
and
lods
add
lcall
je
cmp
ss
sbb
dec
add
dec
push
stos
cmc
mov
pop
push
iret
mov
mov
xor
sub
cs
adc
fbld
shlb
adc
into
sub
and
inc
pushf
add
icebp
jo
outsl
jb
mov
xor
adc
ret
in
call
inc
fnstsw
scas
gs
in
ret
cli
nop
das
and
popa
je
bound
mov
xor
cmp
fstps
mov
cmpsl
push
arpl
or
lcall
dec
cmp
mov
jns
std
mov
daa
fisttps
hlt
adc
mov
xor
and
fsts
out
clc
mov
insl
addb
xchg
in
gs
add
jl
jmp
push
frstor
inc
addr16
sbb
lock
dec
imul
aas
mov
fwait
push
fs
mov
mov
adc
dec
xchg
mov
mov
inc
inc
xchg
icebp
adc
push
repz
pop
stc
xor
repnz
mov
loop
es
divl
int
daa
cmp
cltd
dec
add
cwtl
jge
push
sbb
sub
inc
fs
push
sbb
xchg
lahf
sbb
cs
aad
lret
cmp
in
fcomi
aad
cmp
bound
sub
xchg
int3
xor
je
cmp
out
test
jge
adcl
mov
jns
js
inc
inc
dec
and
ljmp
dec
popf
cmp
aaa
jge
fsubrs
push
push
pop
dec
sub
push
lahf
movsl
jae
loop
icebp
sbb
sti
dec
cmp
fcmovnu
pop
jmp
sub
ret
fiadds
lret
inc
jbe
xchg
jp
jnp
lret
call
push
cmc
mov
mov
js
pop
cbtw
sbbb
std
sbb
cmp
nop
add
cli
push
test
lret
adc
mov
lret
repnz
jle
pushl
push
mov
in
jae
adc
jecxz
dec
cmp
cmp
pop
adc
icebp
fcmovnb
and
xor
jno
mov
shll
jg
mov
repnz
sub
push
shrl
push
cld
pop
sti
into
sub
adc
mov
sub
or
jo
ss
xor
sub
sbb
pop
enter
inc
adc
pop
mov
push
pop
cwtl
aad
rcr
enter
jg
dec
shlb
lahf
in
scas
adc
push
cs
jge
xor
mov
mov
jl
loopne
mov
pop
pop
fisttpll
clc
push
mov
rorb
pop
insl
xlat
in
fisttpl
daa
ds
pop
fstl
cmpsb
xlat
ljmp
dec
dec
mov
jmp
lahf
and
je
lahf
ds
sbb
je
pop
rclb
or
or
jmp
jns
fistpl
or
repnz
das
jg
push
jns
ljmp
adcb
mov
lret
aam
inc
add
adc
mov
out
insb
xor
int
enter
in
jne
rcr
add
xchg
dec
lea
jl
ficomps
xor
into
roll
mov
xchg
pop
xchg
jne
xchg
addl
cmp
mov
mov
stos
cmpsb
push
pop
adcb
into
ja
pop
jb
sbb
inc
xor
mov
sahf
xchg
fcomp
insl
sbb
les
shr
push
popf
xchg
fstpl
pop
lret
fnstsw
mov
jae
pop
int
sbb
and
lods
clc
jbe
xchg
sti
mov
getsec
test
mul
lock
aas
push
lds
fsubrs
add
lret
add
push
mov
sbb
into
notl
jp
mov
scas
mov
mov
int
bound
inc
imul
mov
mov
xchg
aam
fisubl
pop
add
mov
push
dec
lods
mov
sbb
ret
mov
adcb
sbbl
xchg
mov
xor
out
sub
bound
insl
pop
mov
jle
loope
cmp
xor
aam
mov
mov
repnz
das
cmpsl
xchg
movsb
and
mov
push
mov
inc
inc
xchg
xor
dec
xchg
js
jo,pn
mov
out
lea
ret
clc
mov
xor
fsub
or
mov
das
dec
sub
arpl
lea
call
pop
cwtl
loop
imul
xor
nop
jnp
mov
push
jmp
adc
sub
fcmovb
mov
jecxz
and
jbe
cmpsb
or
add
xchg
inc
pop
xchg
jmp
inc
xchg
add
cld
inc
push
xchg
imul
inc
dec
loop
mov
rcr
jl
imul
pop
cmpsb
sbb
lcall
js
loopne
loopw
hlt
and
or
cmp
in
jp
mov
dec
mov
sbbb
jns
int
inc
jl
jle
xor
sub
push
adc
in
mov
stos
enter
pop
out
ss
sbb
clc
fisubrl
into
sahf
icebp
call
fcmove
cmp
adc
pop
pusha
sbb
out
sub
mov
fidivrl
std
cmp
or
cwtl
out
jmp
xchg
inc
aas
push
mov
adc
ljmp
les
unpckhps
xchg
iret
xorb
arpl
mov
in
and
fldt
push
or
popf
inc
addr16
test
xchg
into
mov
sub
jo
mov
mov
movsb
std
mov
cmp
sbb
out
js
mov
fwait
fs
mov
mov
jg
lcall
movsl
mov
daa
push
sti
lea
test
pop
pop
idivb
mov
out
mov
sarb
inc
ficoml
mov
jecxz
dec
and
and
pop
lock
mov
or
lahf
cmp
dec
sbb
imul
inc
xchg
dec
xchg
lret
jmp
adc
push
ljmp
lret
cmp
lock
mov
aaa
jmp
jne
into
daa
divb
or
fistpl
cmp
mov
jecxz
sbb
sti
fiaddl
dec
inc
and
cmp
jp
inc
or
inc
lcall
pop
jl
mov
bnd
shrl
inc
fs
push
xchg
push
out
or
push
shl
sub
repz
inc
adc
jmp
or
sbb
in
pushl
push
xchg
orl
xchg
out
inc
outsb
sub
dec
push
dec
xchg
jmp
repnz
pop
aad
bound
enter
orb
mov
or
out
adcl
ret
daa
inc
in
scas
ret
adc
jo
jmp
scas
jle
jbe
lods
xor
mov
test
mov
fwait
push
or
fst
xchg
scas
pop
iret
pop
push
fs
mov
mov
jmp
loop
lea
inc
cs
mov
ljmp
mov
into
or
les
outsl
push
rcrb
cmpsb
pushf
out
inc
test
movsl
cmp
cmp
pop
rol
inc
cmp
sub
imul
aad
aad
push
xor
mov
push
dec
inc
mov
call
xchg
std
adc
sbb
xchg
adc
es
and
movb
mov
inc
sbb
std
call
cmp
push
je
push
inc
fidivrs
inc
push
fisubl
cmp
or
mov
in
cmp
popa
mov
stos
xchg
filds
stc
xor
push
aas
mov
movsl
jge
ret
pop
push
cmp
push
popa
mov
mov
mov
xor
mov
sub
xchg
ja
es
test
xchg
js
arpl
pop
sub
das
sbbb
loopne
cmp
clc
insb
dec
pop
sbb
push
lds
mov
roll
push
push
inc
out
mov
in
xchg
icebp
js
out
mov
pop
adc
rcll
and
pop
das
lds
inc
xor
mov
or
cli
xchg
inc
cmpsl
mov
push
adc
fptan
jne
adcl
push
pusha
jns
aad
imulb
or
lret
fnstcw
int3
sarl
pop
xchg
mov
pop
push
decl
pushf
ja
push
mov
dec
jo
jg
xor
imul
xchg
nop
sub
out
movsl
dec
testb
mov
sti
fidivl
or
ret
mov
imulb
scas
arpl
push
rclb
imul
or
out
mov
add
pop
mov
cli
cmpsl
mov
scas
outsl
jecxz
mov
mov
xchg
jae
bound
pushf
add
lods
inc
mov
mov
xor
jne
test
ffreep
pop
call
jmp
cmp
mov
mov
rclb
insb
fildl
push
je
mov
das
cltd
sahf
popf
cmc
adc
loope
or
or
mov
gs
fsts
xchg
lea
adc
cld
rdmsr
pusha
aad
mov
mov
sarl
mov
dec
push
negl
lock
lds
sbb
xor
faddl
stos
mov
pop
lret
or
mov
scas
fnstsw
sub
pop
scas
sbb
fbstp
jne
sub
iret
push
js
test
pop
jne
and
xchg
and
clc
and
dec
sub
rol
mov
out
push
jl
loop
mov
xchg
fcmove
call
aad
adc
imul
rolb
aas
mov
cld
fisubrl
add
adc
inc
sbb
pop
stos
addr16
jl
push
es
dec
push
or
jo
xchg
push
dec
pop
lods
mov
xchg
jae
repz
lcall
roll
sub
pop
mov
repz
sahf
out
rolb
cs
shrb
xor
popf
jle
int
jno
jbe
xchg
adc
push
movsb
stos
sbb
jno
mov
lahf
push
jmp
push
cmp
mov
hlt
arpl
add
xor
and
cmpsl
cmp
mov
lods
daa
pop
and
adc
lods
mov
jnp
iret
and
movsb
lods
aad
movsl
ljmp
push
in
dec
mov
pop
cmpsl
mov
inc
push
pop
lret
dec
xchg
addl
fisttpl
cmp
xor
mov
in
mov
adc
sbb
cmp
jge
cwtl
push
jns
shrb
xlat
cs
and
mov
dec
int3
xchg
xorb
add
movsb
iret
add
jb
lds
sub
sbb
fadds
bound
cmp
mov
mov
jbe
leave
dec
daa
outsb
imul
sarb
imul
imul
fstl
mov
repnz
push
push
stos
bound
and
sub
js
movsl
lods
jb
mov
or
pop
jns
dec
imul
bound
jno
mov
pop
push
test
lods
cld
jg
push
push
mov
out
sbb
mov
sbb
jle
cmc
push
pop
xchg
sub
and
test
fbld
lods
inc
js
sub
dec
cmp
ss
mov
xchg
cmpsb
or
aad
and
inc
xor
ja
cwtl
decb
test
mov
movsl
nop
and
imul
aaa
sbb
dec
int3
mov
sti
add
cmpl
testl
sub
sbb
lret
ret
popa
testb
stos
inc
inc
out
mov
cmp
adc
add
cltd
push
mov
cwtl
cmp
ja
gs
arpl
imul
xchg
rol
ja
inc
scas
enter
push
out
xchg
fcmovnu
xor
cli
dec
add
jle
inc
cli
rcrb
jmp
mov
shll
lcall
pop
rcl
pop
lcall
dec
fcoml
lea
xchg
les
xlat
cmp
fisubrs
call
adc
out
jle
je
dec
inc
call
adc
jp
fadds
gs
aad
push
cwtl
jne
lods
jae
loopne
jp
lds
andb
sbb
push
bound
sbb
jecxz
pop
fnstenv
sbb
cmp
rcll
mov
call
sbb
pop
xchg
rcr
and
pop
popa
push
aaa
cld
jno
daa
dec
add
cs
lahf
mov
push
mov
gs
imull
mov
int3
xor
jmp
std
or
xchg
cmpsl
loop
in
push
lahf
cmp
out
or
jmp
and
or
jmp
inc
jno
xor
shll
cld
push
jne
inc
sub
cmp
sbb
push
adc
movsl
iret
jns
jmp
repz
jno
add
dec
stc
dec
xor
rcrl
inc
cmp
xor
lock
adc
jle
or
xchg
sahf
neg
movsl
push
push
divl
jb
sub
lock
insl
sbb
ja
in
pop
xchg
push
in
dec
pop
pop
add
ficoms
dec
or
mov
call
sub
iret
jo
cld
cmp
aad
jno
pop
mov
mov
int3
jg
jb,pt
xchg
xchg
mov
mov
push
mov
hlt
mov
sti
es
imulb
adc
xchg
imul
xchg
stc
sub
test
sub
ja
aaa
je
and
push
lods
mov
aas
mov
xor
and
cmp
cmc
and
mov
push
call
add
fldenv
xchg
jecxz
dec
cmp
js
ljmp
or
add
cmpsb
dec
or
sbb
lahf
pop
add
lcall
push
test
jbe
mov
adcb
repnz
mov
dec
pusha
mov
xor
xchg
xor
cmp
adc
adc
das
ret
dec
ret
pop
int
cmc
insb
test
rorl
int3
ljmp
ret
arpl
sbb
cltd
adc
push
and
jae
inc
loopne
push
xchg
mov
sti
dec
dec
cld
mov
gs
and
mov
dec
cmp
push
mov
sbb
pop
mov
pop
std
scas
sbb
xchg
sbb
iret
xorb
xchg
jg
enter
repz
loop
lods
mov
jg
lea
adc
or
faddl
roll
fidivrl
iret
cmpsl
add
lret
sbbl
mov
lret
rorb
mov
jmp
xor
push
xchg
notb
mov
sar
repz
push
mov
je
jg
stc
dec
sbb
mov
out
push
addr16
rolb
fnstcw
shll
or
gs
sub
push
es
jg
xchg
not
sub
cmp
clc
ss
shl
and
jo
xor
mov
cmc
aam
jno
mov
push
jo
push
mul
popf
mov
mov
out
push
and
icebp
pop
dec
in
inc
cmp
sahf
loop
jbe
fdivrs
dec
xor
icebp
imul
mov
rolb
insl
mov
mov
hlt
dec
fidivl
out
jb
pusha
push
mov
out
push
icebp
or
and
xor
mov
enter
in
movsb
shlb
loopne
test
shl
test
bound
fcoms
or
mov
lret
stos
mov
mov
push
sub
jmp
movsl
inc
nop
iret
daa
sahf
mov
bound
es
adc
xor
lret
xor
push
ljmp
or
and
lret
subb
mov
frstor
push
aas
mov
divl
sub
inc
movsb
int3
stos
ficoml
mov
lcall
pop
inc
push
inc
or
outsb
aas
cmpsb
rorl
sbb
and
inc
test
xlat
push
mov
call
jmp
cltd
fisubrs
enter
mov
add
fs
icebp
xchg
ja
add
daa
or
jnp
mov
test
mov
lea
sbb
dec
pop
pop
int3
rcrb
jb
loop
imul
es
lock
dec
add
jbe
mov
push
pop
jae
mov
pop
mov
and
adc
jo
and
dec
inc
jmp
mov
pop
jnp
aam
jns
adc
int3
sahf
lea
in
fsub
mov
pop
inc
fistl
test
mov
jge
sub
imul
add
out
pop
data16
push
ds
inc
clc
mov
imul
adc
mov
pop
out
mov
inc
cmpsl
out
cltd
jmp
pop
loope
pusha
fsubrs
sbb
pop
mov
xchg
lea
pop
mov
push
mov
push
xor
cli
arpl
int
mov
fcmovu
pop
cmp
sub
jmp
jno
xchg
xchg
les
mov
js
dec
sti
ret
inc
std
xchg
jmp
or
sub
rcl
imul
mov
out
mov
sub
adc
fnstsw
je
inc
ja
push
xchg
xchg
js
lahf
gs
add
into
ljmp
mov
insb
repnz
inc
fimull
aad
shrb
mov
push
movsl
dec
rcll
or
mov
adc
pushf
fidivs
jbe
ror
std
stos
loop
pop
xchg
daa
mov
mov
jnp
ficoms
xor
push
and
mov
pop
imul
movsb
daa
divl
outsb
subb
fsub
negl
fwait
or
cmc
sub
add
pop
mov
mov
add
adc
pop
mov
lcall
loopne
add
adc
jle
mov
mov
bound
outsl
mov
push
es
mov
sub
int3
mov
sahf
nop
or
pxor
jge
mov
inc
mov
shl
std
mov
xchg
or
int
pop
cmp
push
mov
push
es
or
inc
mov
aaa
jns
cmc
cmp
or
jle
and
push
pop
mov
ja
add
mov
cltd
dec
dec
aas
into
int
mov
clc
gs
lahf
xor
pop
pop
mov
daa
or
lods
movsb
push
aaa
mov
cmp
jo
lods
sbb
jns
fsubrp
dec
xor
pop
cli
or
dec
add
daa
pusha
out
in
mov
movsl
mov
mov
orl
dec
push
int3
out
in
inc
out
dec
fwait
ljmp
movsl
lcall
stos
add
sbb
pop
ret
mov
repz
xlat
push
pop
into
call
add
add
sbb
mov
push
jno
adcl
outsb
test
in
shlb
adc
mov
mov
inc
dec
insl
mov
inc
loopne
jo
inc
cmp
pop
dec
push
mov
lods
inc
jne
mov
es
push
in
cmp
fcompl
cmpsl
addl
dec
jne
shl
inc
std
stos
rorl
repz
bound
xor
repz
mov
jg
fcoml
push
mov
out
push
incl
rorb
xlat
call
test
movsb
cmpl
or
mov
mov
ret
sbb
push
aad
cmp
rcrl
inc
dec
icebp
loope
incl
arpl
sub
int3
stc
mov
pop
fldcw
cmp
or
sbb
in
imul
pop
lods
sub
insb
jmp
pop
fldcw
cmp
or
sbb
in
imul
pop
lods
sub
insb
jmp
pop
fldcw
cmp
or
sbb
in
imul
pop
lods
sub
sbb
dec
stc
jp
pop
fldcw
cmp
mov
add
dec
fsubrl
arpl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
xor
inc
add
add
push
jo
outsb
ss
es
stc
nop
repnz
cmpsl
loopne
rolb
and
inc
add
and
push
add
mov
mov
shlb
add
mov
shlb
adc
jp
or
aam
adc
mov
xchg
aam
lock
negb
insb
xor
adc
je
pusha
lret
mov
xchg
or
mov
loopne
aam
popa
fdivl
pop
aaa
loopne
int
inc
sbb
jl
movzwl
into
or
sbb
mov
pop
bnd
out
mov
sub
push
movsl
dec
sbb
push
in
bound
cmc
inc
in
push
ss
add
addr16
cmp
loopne
sarl
out
iret
mov
xor
call
out
nop
shll
nop
and
and
ror
pop
iret
popf
mov
orb
jne
xorl
mov
shrb
clc
imul
push
adc
add
and
xor
out
jbe
cmp
shlb
loop
shlb
js,pn
pop
xchg
pop
and
inc
push
mov
repz
in
and
fnstsw
and
xor
xor
sbb
pusha
movsl
imul
nop
nop
clc
loop
in
mov
out
loope
adc
cs
and
xor
inc
adc
ret
lock
rclb
inc
add
and
push
add
mov
mov
shl
mov
rclb
aas
sarb
loop
fldcw
stos
inc
insl
inc
add
or
data16
pop
cmp
mov
in
sub
push
lcall
mov
inc
orb
loopne
mov
push
inc
mov
pop
push
clc
mov
lret
pop
push
jo
decb
mov
nop
adc
fdecstp
movsb
ja
pop
mov
adc
add
xor
inc
jmp
sub
mov
mov
cmc
lcall
roll
lret
dec
test
enter
pop
rorb
pop
adc
sub
dec
sbb
inc
es
pop
pop
out
stos
mov
pop
mov
divl
mov
mov
cmp
and
jb
sub
xchg
cmpsb
mov
mov
lea
int
int3
stos
fldcw
test
mov
mov
mov
loop
enter
pop
lcall
pusha
scas
mov
iret
in
fcmovu
sbb
sbb
pop
das
cli
inc
jl
or
jle
in
inc
sub
into
std
rcll
ss
hlt
ds
out
jl
loopne
sub
fwait
jecxz
pop
lock
pop
ret
cmpb
inc
mov
jbe
pop
movsb
test
dec
es
and
int3
rorl
adc
cmc
daa
cmpsb
push
sbb
mov
sub
pop
sub
paddq
inc
add
loopne
cmpsb
daa
jmp
mov
gs
lret
mov
and
or
mov
sbb
or
ljmp
pushf
ret
adc
cwtl
int3
adc
jbe
in
sub
mov
fistpll
or
in
xchg
ss
push
dec
or
dec
inc
xchg
dec
cmp
adc
xor
add
pop
mov
mov
scas
xor
dec
sbb
leave
sub
jle
xchg
fwait
mov
sarb
push
cmpsb
insb
nop
mov
aas
bound
jbe
jg
adc
pop
repnz
aad
icebp
ficoml
dec
sbb
fwait
mov
mov
sub
loopne
pop
or
and
das
cmp
sbb
movsb
icebp
fsubl
xor
mov
sbbl
sarl
subl
divl
or
pop
fmulp
push
xchg
inc
dec
pushl
sub
xchg
lea
fnsave
mov
push
and
dec
rorl
jbe
stos
push
hlt
mov
dec
cmp
adc
jg
xor
push
stos
sub
in
sbb
sub
mov
xchg
cmp
ficoms
cli
in
fisubrl
addr16
ja
lret
xor
push
ud0
por
leave
adc
lahf
jp
add
cmc
push
sbb
add
clc
and
bound
xchg
leave
cmp
xlat
test
jl
and
push
nop
es
loopnew
mov
or
daa
out
push
xor
notl
mov
ret
std
add
adc
or
and
std
mov
push
dec
cmp
pop
lcall
pop
inc
jb
stc
mov
mov
lcall
and
jg
movsb
data16
iret
jbe
xchg
loope
adc
andb
sub
lock
je
in
bswap
aad
pusha
mov
das
and
inc
test
filds
pop
lds
mov
sub
fisttpll
jo
out
xor
mov
pusha
ljmp
dec
mov
sbb
subl
add
movsb
mov
hlt
ret
mulb
rclb
mov
add
stc
je
mov
gs
add
and
and
push
shlb
movsb
ss
xchg
popf
pop
jecxz
fisttps
outsb
aam
add
add
inc
pop
roll
leave
mov
mov
fldenv
stc
push
fildll
sbb
fcmovbe
out
decb
aas
lahf
dec
idivl
or
pop
fwait
ja
dec
inc
shll
sub
adcl
fwait
xchg
shll
and
cs
loopne
xor
bound
mov
jbe
inc
ffreep
jmp
cmp
in
lods
test
dec
aas
dec
mov
ja
scas
jge
test
rcll
push
popa
btc
std
pop
jb
xchg
pop
jp
adc
movb
xor
addr16
xor
ja
cmp
xor
ret
xchg
pop
imul
addr16
sub
and
fsubs
sbb
xor
into
dec
cmp
cmp
sbb
or
xor
pop
rolb
dec
jb
xchg
dec
push
shrd
lahf
movsb
gs
shll
add
or
cmp
leave
and
xlat
mov
jae
jae
adc
sbb
adc
mov
lea
pop
cmp
sbb
outsb
jg
jnp
js
movsl
pushf
and
and
mov
test
push
pop
scas
push
or
ret
push
subl
mov
mov
je
and
cmp
aad
cmc
jns
idivl
pop
out
orb
push
push
cmp
add
cmp
jo
into
lahf
loope
cmp
dec
aad
push
adc
mov
inc
adc
or
popa
sbb
lret
femms
cwtl
jg
leave
repnz
ja
push
inc
xor
daa
xchg
sti
rol
adc
in
push
and
xchg
imul
outsb
cmp
in
pop
aad
in
hlt
fisubrs
xchg
or
jae
push
push
fstl
lahf
jp
ds
pop
notb
sub
or
push
mov
ds
fistpl
rclb
inc
lock
cmp
into
shrb
cmpsl
mov
fs
xor
hlt
repnz
push
jns
out
stos
or
aam
push
jbe
push
sbb
ja
stc
sub
addb
push
add
mov
out
xchg
push
mov
mov
adc
pop
in
or
pop
insb
push
push
mov
sub
mov
add
fs
decl
jle
mov
xchg
mov
sbbl
pop
jae
mov
lods
sub
pop
inc
out
lock
pop
fisttps
enter
fsubrp
testl
js
add
repz
inc
inc
addr16
jecxz
xchg
xchg
mov
cmp
out
mov
push
aad
sbb
inc
test
out
ja
test
add
xchg
dec
xor
mov
fnop
jo
in
jge
ret
xor
and
rcll
inc
cmp
and
cld
add
ficoml
mov
and
xchg
les
mov
incl
test
jo
hlt
jne
sub
lret
xor
lcall
movsb
jp
and
out
pop
std
cwtl
fcomps
push
pop
mov
es
addr16
cmp
xor
dec
jl
pop
inc
daa
pushf
loop
fdivrs
repnz
or
xchg
clc
or
arpl
ss
shlb
add
adcb
cmp
mov
ja
cmc
dec
movsl
out
test
repz
testb
xchg
pop
push
pop
inc
mov
sbb
lcall
js
jle
push
and
or
sar
mov
and
call
ljmp
nop
mov
imul
adc
mov
pop
push
int3
fiadds
jb
fs
out
dec
ds
pop
xchg
fadds
repz
and
fildll
lret
addl
negb
and
and
int
call
mov
scas
xor
xorb
icebp
jb
and
loopne
pop
js
pop
fists
loope
test
sahf
adc
jge
and
lcall
pop
cmp
push
rorl
movsl
test
mov
test
push
push
rolb
loop
into
mov
cli
js
or
jp
dec
arpl
enter
jg
dec
xor
cli
xchg
push
sub
lock
out
mov
inc
shlb
mov
das
jnp
ljmp
std
cwtl
mov
test
xorl
add
lret
lds
sub
in
push
sbb
cmp
imul
rolb
cs
orl
lock
pop
sub
popa
clc
inc
pushl
call
lea
scas
jecxz
dec
loopne
push
dec
jae
xor
inc
cmp
stc
mov
xor
les
inc
xor
sahf
mov
mov
mov
addb
cmp
mov
add
and
add
test
pop
jg
jb
fs
mov
lods
push
mov
inc
and
in
xchg
push
cli
insl
jbe
in
call
xor
popa
pop
xchg
xchg
repz
and
lret
jle
rclb
sbb
fistps
mov
adc
fs
lock
imul
mov
lea
lods
cmpsb
mov
repz
adc
or
jnp
sub
cmp
push
add
inc
pop
dec
mov
dec
into
adc
mov
gs
sti
or
xchg
fisubrs
ret
adc
rorb
out
mov
or
gs
int
in
leave
sbb
pop
push
dec
sbb
xchg
shr
ret
dec
adc
adc
andb
rcr
aam
shlb
jo
lcall
inc
fst
pushf
mov
in
adc
pop
clc
subl
out
dec
inc
imul
ret
push
fdivs
out
push
pop
inc
xor
push
sub
fistpll
outsb
fs
sub
mov
mov
mov
cmp
cmc
add
outsb
mov
mov
leave
sub
jbe
fisubs
je
mov
dec
pop
cltd
sti
idivb
stc
xor
jae
test
or
mov
pop
pusha
jge
idivl
imul
mov
in
fists
ds
xchg
and
inc
fsubr
lods
and
test
adc
insl
cmp
dec
int
mov
scas
push
and
jmp
inc
sbb
cmc
cli
adc
push
xchg
mov
mov
adc
jecxz
in
mov
sbb
dec
stos
jae
mov
in
popa
inc
imul
test
ss
pop
fldt
mov
lret
cld
dec
fnstsw
mov
inc
adc
push
inc
add
rol
loop
add
ffree
adc
cs
push
pop
push
push
test
testl
push
pop
jp
lahf
pop
pop
xchg
push
arpl
push
jbe
push
jb
sub
or
mov
test
or
inc
scas
pop
or
lds
sub
cwtl
scas
pusha
fwait
test
in
ffreep
add
ror
xor
stos
out
jno
loope
adc
dec
sbb
out
dec
daa
aas
push
mov
orl
mov
fisttpll
mov
mov
mov
pop
mov
jnp
cmp
sub
mov
sti
inc
or
into
jp
shlb
stos
jnp
leave
jo
ret
scas
jmp
popa
movsb
xchg
push
in
test
or
dec
mov
shlb
sahf
jecxz
jne
movsl
cmp
aam
xchg
shlb
adc
idivb
lret
sbb
addb
sti
ret
sbb
iret
and
rcrl
or
fisubl
jmp
je
cmp
out
cltd
in
test
pop
add
mov
sarl
mov
iret
jmp
xor
sbb
loop
in
repz
pusha
dec
xchg
cmp
add
mov
push
sub
ljmp
push
push
jae
add
push
pop
into
pop
jne
aam
push
push
clc
mov
jle
sub
jae
fiadds
aam
or
add
outsb
lcall
dec
push
shll
sub
adc
jns
rolb
stos
xor
cwtl
popa
shl
arpl
pop
jb
mov
lea
dec
call
push
cltd
ja
imul
pusha
js
cmp
jmp
std
pop
push
jne
jg
je
fwait
ljmp
sar
cmpsb
mov
test
pop
out
mov
into
andps
lahf
jnp
sbb
out
cmpsb
add
mov
mov
outsl
nop
jo
and
loopne
xchg
cwtl
ljmp
adc
adc
jge
mov
fdivrl
loope
icebp
pop
dec
adc
fmul
pusha
or
fsubs
jecxz
js
pop
push
nop
pop
into
mov
imull
aaa
push
roll
sbb
lods
jnp
or
jae
es
orl
push
loopne
or
outsl
xor
jo
loopne
inc
jbe
cli
fs
push
jae
repz
das
push
mov
icebp
or
push
sahf
xor
pop
repz
repz
incb
mov
rorb
lahf
scas
adc
stos
pushf
out
or
inc
into
pop
mov
in
xchg
movsl
or
repz
popl
xchg
pop
daa
outsl
testb
stos
insb
add
push
cmpsb
jbe
push
out
lods
pop
into
shlb
mov
sbb
push
push
std
lds
jmp
add
cs
or
and
sbb
push
cmp
adc
ljmp
adc
les
push
dec
dec
lods
imulb
fisubl
xor
lods
mov
push
gs
mov
add
lods
fdivl
push
add
fldcw
dec
repz
pop
adcb
and
dec
ljmp
adc
sub
lods
mov
test
arpl
mov
addr16
sub
out
or
hlt
cmp
push
scas
roll
ja
aam
jb
aad
lock
popa
clc
and
and
les
aam
outsb
inc
sahf
push
fstpt
mulw
push
mov
aaa
shll
aaa
mov
repnz
in
xchg
mov
fwait
pop
dec
lds
add
testb
insb
daa
push
mov
sbb
jns
scas
adc
xor
aas
scas
leave
pop
dec
pop
xchg
dec
sbb
jmp
push
sbb
orb
cmp
mov
in
mov
adc
sbbb
mov
push
lret
dec
jbe,pt
cmp
enter
dec
out
push
add
xchg
das
das
jle
notl
adc
jle
inc
mov
push
pop
and
arpl
jl
mov
pop
mov
mulb
test
ret
xchg
mov
xchg
jp
fdivr
sub
push
xchg
add
clc
pop
stos
dec
lea
jb
lahf
call
push
ss
shrd
das
stc
nop
hlt
sbb
mov
or
dec
or
es
xor
loop
pop
dec
jb
lcall
test
jmp
outsl
stc
dec
pop
mov
pop
pop
push
cmp
ja
in
xchg
test
mov
fwait
lret
cld
dec
lret
push
in
mov
mov
rclb
pop
push
adc
jb
in
lea
fstpt
subb
lods
mov
cmp
aas
or
mov
fldt
in
cmp
adc
test
vpbroadcastb
push
and
cmpb
inc
stos
nopl
sar
push
fcmovne
pushf
sbb
fs
xor
ljmp
pop
ret
out
pushf
pop
test
jle,pn
push
test
inc
cmp
stos
lahf
enter
inc
addr16
push
xlat
testb
dec
pop
push
pop
adc
sub
push
fidivrs
pop
cmpsb
mov
dec
sub
or
fiadds
inc
dec
das
add
sub
hlt
pop
into
xlat
inc
push
iret
out
in
fsub
in
scas
push
pop
adcl
xor
test
dec
lds
cwtl
cltd
loope
xchg
adc
aam
out
lods
lock
sti
pop
pop
das
mov
cwtl
enter
nop
es
insl
cmp
xchg
sub
jge
addr16
leave
mov
mov
fstpt
mov
cmp
jecxz
jb
and
mov
iret
sbb
rcrb
aam
xor
jae
pop
jno
pop
mov
mov
std
mov
pop
or
adc
pop
push
push
adc
jge
xchg
lods
mov
pop
rclb
in
frstor
stos
or
stos
mov
inc
mov
dec
push
cmc
enter
xchg
subl
repnz
push
int3
pop
mov
pop
lock
ljmp
ja
sbb
movsl
orl
mov
push
inc
sbb
sbb
mov
iret
fcmovu
inc
shlb
lods
jmp
dec
sbb
cld
xor
jmp
and
dec
inc
icebp
dec
sbb
pop
ds
loop
sti
xchg
ret
mov
jno
test
lock
inc
fcomps
les
add
sub
push
and
dec
push
js
and
popf
jbe
movsl
dec
xchg
sub
popf
dec
stos
movsl
push
lcall
loop
inc
mov
popl
jbe
loope
sbb
in
mov
out
cmpsl
jnp
pop
jp
xchg
inc
fsubr
pop
pop
std
pop
xchg
aam
mov
cltd
je
mov
out
adc
inc
imulb
xor
inc
xor
flds
sub
xlat
gs
call
push
pushf
or
movsl
int3
lods
or
pop
adc
cmp
repz
iret
fistpl
and
cmp
push
adc
icebp
xchg
inc
repnz
push
in
addr16
hlt
psllw
and
xchg
js
xchg
mov
repz
fstpl
mov
stos
and
pop
mov
scas
lods
ja
lea
repnz
repz
fincstp
loop
fcmovbe
jno
xor
imul
xchg
das
sub
dec
roll
jp
mull
cmp
pop
in
cmp
ret
sub
stos
push
mov
rorb
mov
in
mov
push
arpl
in
into
mov
je
popf
lds
js
sub
pusha
ret
push
clc
insl
and
into
jge
les
shr
sbb
jle
insl
inc
jp
loop
pushf
xor
dec
mov
dec
scas
xchg
in
popa
dec
dec
push
push
test
sub
dec
addb
jmp
popf
mov
aas
inc
divb
or
lods
dec
pop
sub
clc
cmp
jecxz
fcoms
inc
add
jns
scas
push
add
pusha
pop
xlat
push
pop
mov
leave
jns
decb
xchg
push
outsb
test
frstor
lcall
adc
fmulp
or
jno
mov
adc
sbb
mov
idiv
movsl
test
mov
pusha
in
shrb
xchg
jae
lret
sbb
mov
push
mov
adc
jb
shlb
pop
hlt
lret
dec
add
repnz
jb
les
test
lcall
addr16
iret
push
testb
jne
cmp
ficompl
xchg
sub
xchg
sub
add
jns
int
mov
fcoml
dec
push
mov
mov
outsb
jno
mov
fwait
inc
mov
imul
repnz
in
scas
pop
cwtl
xchg
jmp
mov
and
jge
adcb
mov
dec
dec
adc
test
or
mov
in
or
test
shr
jne
or
xor
fsubrs
leave
or
scas
push
filds
or
movsl
push
ret
lret
les
int
sub
mov
rep
inc
fcoml
mov
push
xchg
and
lods
int
xchg
ds
sub
dec
sbb
sbb
mov
lcall
inc
es
and
or
mov
mov
mov
ret
shlb
rorl
pop
mov
lretw
push
cli
rcr
pop
xchg
sbb
and
dec
lcall
mov
ret
mov
bound
sub
mov
or
lods
ds
mov
js
xchg
test
xchg
sti
or
push
nop
push
es
int3
xchg
fimuls
sub
adc
pop
add
or
pop
xchg
and
cmp
jecxz
rcll
cltd
sub
fld
cmpsl
imul
ja
sub
cltd
sbb
lock
pop
push
fdivs
arpl
repz
add
lahf
push
ffree
test
or
insb
add
and
leave
pop
pop
cld
mov
xchg
and
enter
out
and
stc
pop
cli
shrb
fwait
pop
sub
or
add
int3
test
dec
lea
movsl
mov
insb
mov
lods
pop
or
jno
aaa
cmpsl
rcll
xchg
mov
aas
pop
stos
sbb
aad
cmpsb
xchg
mov
rclb
dec
loopne
xor
jmp
add
fadd
out
sarl
push
or
push
mov
mov
out
mov
dec
sub
iret
movb
mov
pop
std
jmp
cwtl
or
xchg
push
xchg
sahf
jno
call
mov
faddl
and
cmp
aaa
daa
outsb
jne
repnz
pusha
cwtl
sub
jp
movsl
xor
subl
je
push
pop
mov
lods
or
wrmsr
decb
mov
xor
xlat
jb
inc
add
and
push
add
mov
mov
shl
mov
rclb
inc
add
and
push
add
mov
mov
shl
mov
rclb
pop
add
and
push
push
adcb
jecxz
mulb
sbb
cmpsb
lock
mov
jbe
xchg
cmpsb
and
jo
jo
push
add
mov
pop
pop
cmp
andb
cli
aas
ljmp
add
xor
adc
and
push
loopne
shlb
popa
xor
add
push
icebp
inc
loope
adc
and
push
loopne
shlb
popa
xor
add
push
icebp
inc
loope
das
mov
and
adc
popa
jns
and
arpl
jb
xor
pusha
add
repnz
push
pop
xor
jbe
push
lock
pop
cli
subb
mov
in
pop
std
mov
inc
lods
mov
xor
lret
ds
enter
fadds
int
xchg
sub
ror
ljmp
ljmp
mov
pusha
jne
and
jo
jo
scas
sbb
mov
and
fimuls
add
inc
iret
or
jge
cmp
shrl
push
push
inc
mov
push
pop
add
cltd
loop
xor
xor
adc
jns
mov
aam
sbb
fs
lret
xor
loope
shlb
outsb
xchg
and
jo
pusha
rcll
loope
adc
and
push
loopne
shlb
daa
jbe
dec
push
jne
gs
mov
add
repz
in
dec
xchg
cmp
cmp
push
lret
inc
mov
divb
mov
out
push
sahf
inc
loope
push
mov
dec
xchg
ds
mov
roll
add
jo
pusha
rcll
loope
adc
and
push
loopne
shlb
popa
xor
add
push
icebp
inc
loope
adc
and
push
loopne
shlb
popa
xor
and
stos
adc
xlat
jmp
or
lds
push
addr16
push
adc
sbbb
mov
popf
or
mov
cmp
or
sbb
or
add
shl
cs
aad
sbb
push
clc
xchg
rol
cmpsb
repz
sbb
test
andl
movsl
xchg
sbb
test
add
out
gs
mov
into
nop
dec
pop
sbb
shrl
jmp
fistpl
test
dec
push
sub
aam
or
mov
cmp
push
andl
cmp
mov
das
dec
cmp
jl
xchg
cmp
outsl
fwait
enter
mov
andl
movsl
sub
cmc
orl
loopne
pop
jmp
daa
push
add
fcompl
mov
clc
mov
enter
ret
lods
jge
push
lcall
push
fnstsw
fistpl
ss
push
in
fs
or
sahf
popa
add
cmp
in
pop
inc
inc
adc
cltd
mov
dec
fists
daa
movsb
jecxz
movsb
push
mov
aaa
adc
out
or
fmuls
js
lcall
lret
xchg
lods
pop
xchg
dec
movsb
cli
inc
mov
push
cs
iret
sbb
sbb
out
cmp
xor
jecxz
push
cwtl
xor
push
push
mov
cmp
mov
mov
dec
mov
jno
daa
adc
and
xchg
and
aas
lock
scas
sarb
hlt
cli
cmp
pop
fisttps
mov
sub
mov
inc
cmp
cltd
shl
sub
scas
mov
frstpm(287
fistl
or
or
inc
jl
jne
push
scas
repnz
rcrl
rolb
mov
mov
sti
rolb
addb
mov
inc
jecxz
scas
frstor
ljmp
mov
add
mov
adc
test
test
into
push
lret
cmp
jl
bound
xchg
js
inc
jae
fmulp
dec
mov
and
mov
aam
insb
cltd
bound
fyl2x
cmp
fbld
inc
pop
cwtl
mov
addl
push
leave
in
jl
sub
movsl
dec
div
scas
repz
sbb
fwait
xchg
fisubrs
mov
mov
mov
xorl
sub
mov
sub
jns
aas
mov
shrl
dec
mov
clc
daa
test
add
jae
sbb
outsl
xorb
data16
sub
push
jae
dec
mov
sbb
sub
xor
mov
gs
mov
add
mov
dec
in
cmp
aas
or
and
xchg
das
dec
inc
aas
lret
and
lods
jno
les
fsubrl
mov
pusha
repnz
mov
or
test
ljmp
inc
and
mov
cld
scas
popa
xor
inc
sub
pop
call
sbb
hlt
mov
movsl
mov
add
fidivrs
cmp
inc
xchg
faddl
ljmp
outsl
push
pop
push
fsubrl
negl
pushf
push
imul
test
or
cmpsb
cmp
or
aas
sub
xchg
cmpb
fwait
mov
orb
shll
aaa
jecxz
das
xchg
mov
add
push
mov
adc
cwtl
add
cld
push
aaa
sub
add
mov
stos
xchg
negl
and
cmp
mov
idivl
xchg
testl
stos
sub
mov
icebp
das
mov
sti
sbb
in
adc
cmc
ljmp
mov
pushf
out
in
mov
xchg
xchg
sbb
push
mov
fs
fidivrs
mov
popa
inc
or
xor
fidivs
mov
loope
insl
push
adc
mov
inc
por
xchg
jecxz
ljmp
and
adc
xchg
push
cld
outsl
xchg
jmp
ror
xor
push
int
jge
adc
jb
cs
mov
jge
insl
add
mov
jno
mov
push
or
int3
clc
test
pop
rep
pop
jmp
loope
cmpsb
inc
addr16
sub
xor
mov
mov
xchg
test
inc
bound
jl
jbe
jg
add
cmp
arpl
popf
jecxz
fidivrs
jp
pop
bts
push
in
or
add
mov
inc
rorl
out
xor
pop
sti
lcall
repnz
scas
and
std
fisubrl
addl
dec
dec
bound
and
and
push
out
stos
jecxz
lods
cmpsl
pop
addr16
push
pop
dec
lret
in
push
push
inc
int
and
xchg
mov
push
ficompl
cmp
subl
ljmp
jbe
xchg
sub
aam
ja
ficoml
pop
in
sets
mov
aad
cld
jmp
pop
ret
xor
sub
sahf
mov
fidivrl
pop
fildl
pop
cmp
arpl
add
sti
inc
mull
pop
clc
pop
or
rep
test
into
dec
and
gs
mov
pop
lret
pop
push
sbb
and
sbb
xor
adc
out
mov
in
shr
mov
cmp
int
in
mov
and
add
fistpl
mov
jns
sbb
push
nop
jbe
lret
fsub
pusha
data16
cmpsb
xor
imul
bound
jg
mov
arpl
mull
inc
xchg
mov
icebp
rclb
or
adc
xchg
mov
addr16
fildll
push
movsl
std
add
pop
mov
scas
add
stc
inc
iret
push
inc
pop
xchg
rcl
data16
out
jmp
cmp
addr16
and
jnp
ret
sbb
mov
or
leave
xchg
jbe
and
jecxz
sub
xchg
ljmp
imul
icebp
popf
test
iret
lahf
mov
and
dec
jae
jg
cmp
cwtl
jmp
or
das
sub
stos
jl
js
pop
cmp
in
sti
adc
cwtl
notb
ljmp
cld
pop
or
and
cltd
inc
jne
sbb
sbb
dec
dec
shr
pop
pop
jo
dec
mov
lret
rcll
in
into
ds
mov
ret
mov
dec
stos
outsb
jg
test
and
out
sbb
add
sbb
add
xchg
add
pop
pop
flds
inc
xchg
test
test
jge
ljmp
scas
insb
into
inc
das
xor
aas
mov
mov
shlb
mov
mov
fbstp
sbb
rcr
mov
mov
aam
jbe
cld
lcall
cmp
mov
int
ds
out
inc
inc
imull
das
inc
pop
fidivl
mov
ljmp
std
movsl
xchg
pop
push
push
mov
fsubrs
push
xor
sub
lret
push
adc
ss
pop
push
xchg
sti
aas
aad
jae
xchg
inc
cmp
sbb
pop
adc
fiadds
loopne
push
pushf
int
incl
mov
decb
pop
popf
mov
xchg
in
fiadds
add
xchg
sbb
dec
stc
popf
mov
add
cmc
adc
test
and
ja
and
dec
cs
or
lea
inc
pop
sbb
jnp
addr16
outsb
mov
mov
fwait
sbb
jle
xor
cmp
xchg
mov
rol
sarb
cmp
cli
pop
push
movsl
sbb
cmp
data16
les
and
lods
je
fimull
mov
push
and
cld
popa
adc
and
test
fadds
cltd
in
pop
pop
repnz
push
lea
add
xchg
mov
xor
inc
insb
xor
add
popa
cmp
sbb
rcrl
clc
xchg
pop
cmp
out
cld
push
out
xlat
jmp
push
or
mov
lods
scas
rolb
dec
adc
jbe
mov
mov
dec
fistl
imul
nop
add
in
jp
xor
sbb
xorl
loopne
pushf
inc
push
cmpsb
mov
adc
pop
dec
lcall
and
jl
jno
notb
bound
mov
push
int
jecxz
cmp
inc
sub
inc
xchg
fidivs
add
jge
jge
mov
fimull
jge
cwtl
scas
mov
xor
adc
pop
cwtl
lcall
popf
cmpsb
push
rcrb
inc
dec
inc
xor
add
bound
les
ret
arpl
or
inc
jno
pop
sahf
jnp
sub
push
inc
inc
cli
mov
jo
shrl
fildl
pop
iret
mov
popf
mov
mov
das
and
lods
fucomip
divl
iret
jae
push
xchg
ret
fcomp
cld
sub
fbld
cwtl
popa
lret
add
adc
jne
inc
cmpsb
sub
sbbl
sub
es
mov
add
test
outsb
dec
pop
push
rcll
sub
and
cmp
gs
push
mov
dec
dec
repnz
jne
stos
sub
in
cmpsb
xchg
pop
test
mov
jmp
ds
mov
cltd
lods
xor
mov
inc
sbbl
push
push
and
outsl
add
or
mov
mov
pop
xor
jnp
rcrl
mov
jbe
mov
mov
sub
jl
sbb
scas
sbbl
scas
imul
dec
cmc
loope
adc
jbe
jae
aad
shl
xchg
fiaddl
adc
sarb
out
outsb
mov
mov
xchg
daa
jecxz
dec
jno
lea
inc
gs
addr16
in
es
cmp
sarl
pop
sbb
jle
roll
int
sarb
out
pop
rolb
inc
mov
fwait
mov
mov
cmp
mov
sub
mov
scas
mov
ficompl
xchg
push
aaa
loope
nop
inc
add
test
scas
adc
sub
adc
jae
lock
pop
outsb
idiv
pop
stc
test
xchg
push
mov
pop
and
fimuls
mov
or
and
bound
gs
notb
imul
jne
bound
bound
jmp
sub
adc
loop
aaa
sbb
jb
push
mov
or
mov
push
pop
shll
insl
not
mov
xchg
fidivrs
dec
sahf
and
pop
fiadds
cwtl
and
cmp
sahf
stos
lret
int
repz
rcl
xchg
repz
mov
mov
es
dec
sbb
xchg
lret
mov
adcl
or
rorb
pop
mov
ficompl
andl
test
js
leave
shll
push
mov
mov
xchg
xchg
jmp
loopne
cmp
pop
add
jge
sti
loope
sub
xchg
mov
cmp
out
movsl
mov
and
mov
lea
in
jmp
cmc
cmp
popa
dec
addl
icebp
icebp
fucompp
cmpsb
push
xchg
ja
cmp
mov
lods
test
mov
cmp
sub
jecxz
sti
push
lahf
mov
push
arpl
sub
sbb
sti
adc
sub
enter
add
dec
xchg
push
shl
pop
loope
pop
dec
dec
rcrl
or
mov
stos
mov
xor
jp
fstl
sub
pushf
or
mov
jle
sbb
aaa
and
cli
sub
loop
outsl
mov
pop
xchg
sub
mov
lret
push
mov
test
outsl
cmpsl
inc
cmp
cltd
add
arpl
fcmovnb
sub
cmp
in
push
sbb
mov
outsb
out
and
inc
repz
jle
jge
test
les
cmp
nop
xchg
repnz
push
mov
sbb
je
jecxz
jae
sar
jne
dec
mov
adcb
push
and
bound
pop
das
cmpsb
in
cmp
xchg
das
bound
mov
sub
jmp
or
cmp
js
xchg
cltd
add
js
mov
icebp
cs
push
out
lcall
xchg
xchg
add
cmp
ss
push
jg
pop
mov
jl
flds
xchg
xor
enter
ja
and
fs
adc
mov
mov
fmull
mov
clc
imul
pop
xchg
mov
sbb
add
in
dec
fptan
jl
cmp
pop
stc
je,pt
popf
cltd
jne
imull
movsb
xor
stos
and
popf
jl
outsb
lahf
mov
or
jne
dec
ds
mov
sti
mov
pop
scas
mov
out
pop
add
in
rclb
js,pt
mov
mov
mov
mov
inc
stc
push
push
cmp
stos
loopne
fsts
hlt
push
mov
cmp
mov
cmc
stos
aas
xor
icebp
mov
rcll
xor
faddl
xchg
xor
icebp
stos
dec
pushf
loop
push
test
cmp
mov
add
enter
daa
insl
gs
adc
dec
cmp
push
xchg
loope
inc
mov
outsl
cli
shll
int3
pop
insb
in
gs
dec
jne
or
dec
dec
pop
repnz
aaa
and
mov
jb
shrb
cmp
fs
push
arpl
pop
popl
roll
mov
cmp
sub
mov
sti
xor
add
sub
popa
cmp
ret
mov
xor
dec
push
imul
rcl
and
mov
rcrl
xor
repz
fdiv
pop
cs
test
lahf
notl
loopne
mov
dec
lock
lds
fistpll
pop
mov
loope
sti
mov
inc
sti
out
push
test
in
pusha
adc
aas
adcb
clc
enter
popa
lock
inc
inc
pop
add
lds
sub
ss
mov
fwait
and
mov
and
xchg
jne
xor
test
icebp
fildl
jo
outsb
dec
push
inc
ja
or
mov
in
das
jmp
sbb
out
test
pop
mov
and
xor
mov
pop
jo
inc
jecxz
mov
bound
and
jge
mov
sub
xor
fsts
daa
loopne
lds
pop
fxch
cmp
pushf
pop
mov
mov
jnp
aad
mov
jne
add
fisubrl
and
sahf
cmpsl
inc
fs
ret
mov
jl
push
mov
std
xor
xchg
orb
and
hlt
xor
adc
mov
ret
xchg
icebp
dec
push
sub
fwait
push
repnz
push
scas
out
mov
imul
cli
enter
test
and
pop
adc
popf
cltd
out
dec
mov
sbb
test
mov
pop
jbe
sub
add
mov
fs
sbb
stos
les
dec
jb
mov
fscale
cmp
jae
aam
out
repz
dec
mov
inc
cpuid
sub
lret
dec
cli
rcr
push
adc
into
push
mov
add
test
mov
lcall
pop
mov
nop
xchg
imul
sub
add
or
jle
test
and
pusha
push
and
hlt
sbb
popa
pusha
pop
les
dec
mov
dec
mov
inc
loop
lods
push
push
pop
sub
mov
sti
mov
add
mov
xchg
mov
jne
cmp
xor
cmpsl
bound
and
push
fimuls
repz
in
imul
cmp
or
pop
push
lcall
loopne
xchg
arpl
sbb
stos
mov
jb
jbe
addb
rolb
xor
pop
sbb
push
adc
loop
ror
rcl
es
adc
xor
out
fistpll
iret
ficompl
xchg
sbb
out
add
and
jle
fsts
das
mov
dec
sbb
mov
cmc
sbb
imul
fisttpll
push
popf
add
pop
cwtl
and
ja
out
or
mov
push
xor
xor
jmp
dec
out
xor
pop
mov
test
jnp
movsl
aas
popa
out
sti
fld
jle
sbb
mov
lods
ss
shll
fwait
or
das
xchg
cmp
test
add
aaa
sarb
ffreep
iret
cmovae
xchg
inc
jp
pop
dec
mov
sarb
mov
movsb
pop
fndisi(8087
jno
sbb
sub
fwait
mov
gs
ret
inc
in
popf
movsb
test
scas
jmp
cmp
sahf
cmp
fs
enter
cmp
lods
jp
loop
mov
push
insl
pop
mov
jo
pop
sahf
mov
int
lea
into
call
cwtl
lea
ret
loopne
scas
dec
lock
adc
faddl
shll
add
je
xor
pop
xchg
push
out
fsubp
mov
mov
dec
jo
adc
bound
test
mov
sub
xchg
pop
ljmp
test
add
mov
sub
fucomp
push
scas
dec
ret
in
cmp
xor
dec
jne
popf
jle
repz
xchg
jle
jns
mov
and
jno
xchg
xor
adc
and
dec
lcall
sub
jl
rolb
fwait
test
aam
jne
gs
sub
pop
scas
shrl
lds
jne
dec
mov
aad
icebp
imul
pushf
mov
mov
mov
jge
jl
cs
xor
sahf
mov
cmpsb
outsb
cwtl
shlb
sbb
mov
clc
adc
std
int3
sub
sar
mov
lret
rorb
into
repz
jl
mov
cmp
push
sbb
cltd
out
pop
inc
dec
and
movsl
adc
adc
sahf
imulb
pop
cmpsb
mov
xchg
fidivrs
sbb
pushf
nop
idivb
jno
cli
sti
or
add
inc
pop
imull
popf
mov
adc
sub
xor
mov
movsl
daa
mov
mov
icebp
push
clc
jle
test
push
roll
cmp
jge
cmp
push
push
add
push
mov
and
lock
mov
pop
or
fwait
cwtl
clc
repz
aad
outsl
leave
out
lock
push
adc
outsl
ljmp
or
bound
pop
hlt
loopne
aad
into
mov
sbb
lahf
cmp
repnz
mov
adcl
cmp
scas
out
fcompl
jl
ds
push
jle
cld
jo
push
inc
mov
notb
cmc
iret
sub
imul
clc
mov
mov
fnsave
mov
clc
lea
dec
ret
push
imul
loop
leave
jg
test
insb
jnp
inc
sbb
mov
jp
xor
push
sbbl
add
adc
sbb
pushf
shll
mov
mov
enter
lods
mov
and
stos
int
out
in
aad
mov
clc
and
bound
inc
sub
jg
movsl
push
pop
insb
jp
add
aam
dec
fstl
repz
stos
andl
sub
sub
mov
pop
notl
xor
inc
cli
cmp
xchg
xor
gs
cwtl
mov
pop
push
fs
or
into
jbe
into
pop
jg
fiadds
shlb
iret
pop
pop
add
add
jl
adc
dec
push
pop
out
js
popf
nop
ret
sbb
pop
popa
mov
push
mov
ljmp
leave
jns
mov
dec
sub
mov
hlt
icebp
sbb
sbb
push
push
imul
inc
sti
mov
xor
loop
adcb
mov
add
pop
call
push
jo
push
and
and
inc
mov
loopne
sbb
xor
cli
js
pop
jae
xor
xchg
pop
add
pusha
adc
add
iret
lock
pushf
or
xor
bound
scas
jae
insb
jmp
cmc
loop
xor
nop
ficoms
cmp
xchg
or
mov
sbb
insb
je
scas
adc
int
inc
jbe
fcomps
mov
add
rcr
dec
aam
ds
jl
add
xchg
fdivs
push
popa
icebp
inc
mov
push
inc
fisttpl
fldcw
stc
mov
xor
add
jmp
hlt
pop
popa
out
pop
add
cmpsl
bound
shrl
mov
cmpsl
pusha
test
xchg
fists
mov
pop
inc
mov
push
out
roll
mov
and
call
or
xor
jns
mov
xor
and
aas
sbb
xor
pushf
pop
bound
inc
sub
stos
mov
fcomps
xchg
bound
scas
mov
add
push
icebp
inc
loope
adc
and
push
loopne
shlb
popa
xor
add
push
icebp
inc
loope
adc
and
push
loopne
shlb
popa
xor
add
push
lock
loope
adc
and
push
loopne
shlb
popa
xor
add
push
jno
push
mov
mov
push
xchg
push
sahf
inc
pop
push
mov
xorb
das
jl
push
xchg
rol
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
ret
shll
rcll
jecxz
std
adc
add
mov
sub
sbb
or
cmp
lret
lock
mov
xor
in
sub
add
jns
fdivp
or
sub
mov
orb
lods
mov
sub
adc
cmpsb
andb
pop
push
add
arpl
fistpll
xor
lret
repz
xchg
scas
sub
fisttpl
outsl
jb
xorb
stos
xchg
push
sub
loop
lcall
shlb
aaa
or
jl
xchg
lea
stos
mov
adc
xchg
pop
cld
or
ret
jno
and
lds
adc
xchg
jae
push
mov
xchg
mov
rolb
pop
pop
sahf
std
mov
lea
mov
jae
adc
add
and
sub
movsb
lret
hlt
sti
adc
pop
fwait
dec
mov
das
lock
roll
jo
jne
outsb
stos
xor
nop
jbe
jnp
or
fidivs
sub
xor
or
add
and
fs
mov
xorl
ds
xlat
cmp
hlt
aas
cmc
psrld
icebp
dec
xchg
repnz
xor
ret
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
and
xor
ret
and
xor
add
adc
inc
mov
inc
mov
add
and
pop
pcmpgtb
mov
jmp
fstl
dec
mov
and
jl
add
lods
jae
pop
push
in
lods
gs
pushf
inc
dec
sbb
xchg
jecxz
roll
ja
je
mov
pusha
lcall
mov
jle
mov
sbb
js
cmpsb
mov
push
mov
push
pop
cs
sbb
ret
sub
cld
lcall
sub
xchg
cmpsb
lds
inc
adc
rcrl
xchg
mov
xchg
leave
testb
insb
jo
lahf
push
int
das
test
inc
fwait
stos
scas
xchg
dec
iret
dec
cmpsl
pop
jnp
lcall
xchg
faddl
sub
xchg
daa
iret
xlat
pop
xor
pop
repnz
idivb
inc
das
lds
mov
arpl
and
popa
sbbb
mov
cmc
loop
out
in
sub
pop
push
sbb
ret
cmpsl
xchg
sti
das
cwtl
jle
cli
mov
inc
mov
sbb
dec
stc
fildll
xor
enter
or
xor
cmpsb
cmpsb
nop
clc
adcl
into
and
daa
mov
mov
shll
sbb
ret
insb
jp
mov
or
pop
movb
cld
add
pop
fcompl
cmp
fsts
ds
push
jp
popa
adc
mov
loop
cmc
rcl
push
lds
inc
gs
pop
loop
xchg
outsb
sub
test
xchg
inc
add
mov
add
add
jmp
or
insl
xor
roll
aaa
xor
daa
out
cmpsb
inc
shll
sbb
bound
popa
je
sahf
mov
lock
loop
push
ror
push
sbb
mov
ret
sbb
std
repnz
test
pop
or
pop
pop
je
add
jl
test
cmc
fldenv
or
flds
shlb
xchg
pop
mov
jno
lahf
scas
cmp
adc
shl
mov
push
hlt
or
sub
dec
mov
pushf
cmpsb
pop
xor
pop
lcall
dec
test
pop
fmuls
ja
sub
pop
mov
std
dec
cmp
sub
pushf
outsl
mov
dec
cmc
sbb
jp
cmpsl
lock
and
pusha
add
stos
movsl
push
rcrb
push
aaa
jo
fstpl
sbb
mov
jae
dec
aam
f2xm1
xchg
insl
subl
xor
jecxz
fsubs
shlb
ljmp
pop
push
push
jp
xor
pop
cwtl
push
dec
in
sbb
and
data16
and
pop
add
adc
in
loope
mov
fistpll
out
lods
ret
jbe
jle
xor
cld
sbb
cmp
icebp
call
scas
js
jne
push
xor
js
pushf
mov
mov
push
add
mov
xchg
inc
das
lret
lret
in
sub
ds
push
inc
movsl
rep
sub
jecxz
lea
mov
stos
out
pop
stos
aas
outsb
subb
pop
ret
das
mov
cmp
and
in
cmp
mov
xor
les
push
add
ret
sbbl
xor
les
cmp
repz
mov
and
cmpsb
sarb
jae
xchg
stc
test
and
outsl
add
mov
xchg
outsl
lea
or
pop
jecxz
ficoml
das
idiv
or
jle
mov
push
lret
in
cmc
montmul
cmpsb
push
jecxz
incl
sbb
mov
pop
lods
pop
aas
push
std
test
movsb
add
xabort
push
jmp
outsl
mov
stos
decb
mov
fistpll
int3
dec
mov
xchg
mov
inc
movsl
lock
pop
mov
sub
push
mov
cs
pop
out
popf
pop
lods
lods
inc
mov
mov
and
out
cltd
dec
pop
sbb
and
leave
cmp
jb
mov
pop
stos
inc
scas
data16
inc
rolb
adc
loop
mov
rcl
cmp
xchg
mov
scas
push
fdivl
scas
xor
add
mov
lret
inc
fwait
icebp
dec
pop
cmpsb
popf
and
repz
bound
inc
sub
rcl
cwtl
test
ds
ljmp
sarb
enter
adc
xor
enter
lahf
mov
lods
stos
je
sbb
repnz
aam
mov
push
lret
xchg
cmp
movsb
ret
les
std
js
cmp
adc
flds
mov
add
orl
mov
xor
stos
clc
out
or
mov
inc
xchg
out
dec
mov
jmp
cmp
imul
cmp
hlt
mov
scas
cmp
out
sub
mov
cmp
addr16
cwtl
and
movsb
je
sbb
addl
cltd
into
hlt
jmp
cmpsl
adc
cmc
repnz
pop
jns
xor
into
push
leave
ljmp
fstl
es
shlb
mov
in
pusha
inc
push
adc
dec
movsl
jns
inc
pop
jns
ficompl
ljmp
cmp
push
data16
repz
ljmp
stos
popf
jp
mov
iret
sbb
mov
nop
pop
xchg
jle
and
out
jg
int
push
push
repz
das
nop
in
xchg
jp
lret
imul
push
in
sub
shl
negl
dec
ja
or
insb
leave
in
stc
mov
out
fadd
cmpsl
in
or
lods
mov
mov
hlt
jecxz
test
sub
mov
stc
push
cmp
popf
xchg
lea
lds
stos
loopne
out
inc
in
dec
mov
xorb
mov
lret
cltd
xor
loop
mov
scas
in
inc
repnz
int3
add
pusha
nop
xchg
out
test
dec
and
add
loop
lds
jle
out
pop
lods
push
xor
iret
lcall
adc
js
inc
mov
loopne
pop
mov
shlb
pop
inc
fcoms
iret
mov
fsubs
iret
adcb
xor
mov
in
jle
shl
mov
pusha
mov
jbe
pop
jmp
fcmovnb
into
in
inc
test
ljmp
pop
mov
xchg
cltd
test
dec
clc
mov
cmp
dec
sbb
dec
push
push
dec
data16
dec
mov
xor
inc
add
xor
loopne
popf
nop
mov
push
outsb
dec
js
lret
insb
in
dec
mov
sub
push
xchg
inc
and
movsb
xchg
sub
pushf
daa
and
or
in
sub
enter
adc
imul
rorl
rol
cmpsb
lock
mov
pop
jl
sbb
xor
sbb
jb
icebp
loope
in
int3
fst
and
ret
jg
les
push
inc
or
xchg
insl
and
jae
in
add
stos
xchg
imul
sub
or
jbe
cmp
or
inc
push
xchg
dec
jl
xchg
push
and
andl
stos
in
xchg
into
jge
jo
xchg
mov
movb
xor
add
xchg
jb
pop
adc
jbe
push
sbb
jl
mov
xchg
sub
inc
cmpsb
mov
cmp
pop
fsubrs
mov
mov
mov
cmp
cmpsb
les
mov
cli
adc
rolb
out
lret
mov
repnz
roll
test
inc
push
push
clc
mov
push
xor
in
and
adc
jecxz
xchg
sbb
fwait
xchg
add
in
arpl
inc
cmpsl
push
add
pop
mov
push
mov
cmp
pop
ret
and
dec
pop
daa
icebp
and
mov
inc
cmp
clc
inc
cli
sub
inc
stc
dec
lods
jae
pushf
sar
cmp
leave
outsb
mov
or
ficoml
fsubrs
mov
pop
clc
gs
mov
xchg
mov
jns
xor
dec
lods
push
sbb
mov
arpl
mov
sbb
test
cwtl
shlb
popa
out
adc
pop
or
cld
je
xchg
cld
mov
mov
out
mov
ss
adc
aad
rcrl
fbstp
cmpsb
or
sti
cmp
ja
mov
inc
stos
sub
imul
std
mull
xor
ja
les
es
scas
aas
and
xor
out
outsl
jecxz
ss
lret
aas
iret
stos
lcall
ret
xchg
test
sbb
pop
sub
cmpsb
test
arpl
push
test
adc
sbb
dec
lods
or
out
adc
cmp
sarb
cltd
mov
mov
and
jno
and
push
test
leave
hlt
mov
xchg
push
loop
iret
dec
cmp
xchg
ret
dec
and
mov
jbe
push
mov
and
fdivp
xchg
data16
mov
mov
cmp
mov
pop
xor
loopne
adc
pop
mov
fisttps
or
xchg
inc
out
fsubs
mov
xor
pop
pop
repz
and
or
cmp
daa
nop
add
les
call
xchg
sub
add
sbbb
lock
test
dec
mov
insl
sbb
inc
push
or
pop
push
adc
fisttps
ds
fistps
mov
sub
xor
pop
fistpl
fstl
jbe
dec
ljmp
push
dec
mov
xchg
mov
and
movsb
lds
ret
jb
mov
xor
movsl
out
or
adc
inc
cmp
ljmp
dec
xchg
insl
xchg
cmp
call
ss
sbb
pop
add
mov
adc
xchg
js
fadds
loop
or
jmp
jae
inc
xor
push
or
ds
push
pusha
sub
aas
cmc
call
les
outsl
sub
sbb
sub
mov
sbb
lods
jmp
cmp
dec
push
into
les
dec
and
inc
pop
push
out
fldt
dec
stc
jae
lret
sahf
mov
mov
inc
test
gs
sbb
and
movsb
and
inc
dec
adc
xor
dec
insb
inc
xor
push
out
outsl
mov
fstpl
lret
or
loope
xor
fsubr
add
arpl
xor
inc
push
push
cmp
sbbb
fildl
shrl
dec
xor
test
add
stos
dec
xchg
pop
stc
repnz
or
cli
ficoml
xor
je
mov
aaa
pop
add
sub
outsl
add
fbstp
xor
push
outsb
unpcklps
sub
mov
cmpsb
cmc
and
aaa
and
and
lahf
loop
loop
adc
into
xlat
pop
repnz
out
jmp
push
mov
addb
push
add
mov
clc
xchg
pushl
int3
push
mov
mov
andb
movsl
adc
dec
dec
adc
xor
sub
jnp
mov
shr
inc
xchg
aas
outsl
in
xchg
cmpsl
push
mov
pop
inc
popf
inc
stos
gs
mov
sub
stos
out
inc
xchg
push
push
insb
sbb
and
into
int3
ret
cmpsb
aad
lds
lret
or
clc
xchg
in
mov
sbb
sub
in
mov
dec
test
bswap
gs
shrl
jl
xchg
fwait
mov
dec
xchg
fisttpl
loopne
xchg
addr16
test
sti
inc
stos
mov
popa
in
mov
dec
lock
cwtl
setb
lods
mov
sbb
fs
stos
test
mov
add
fimull
ljmp
and
dec
popa
inc
jmp
push
pop
movsb
cli
in
cld
jae
xchg
pxor
dec
jg
push
lcall
sbb
rolb
push
mov
mov
idivl
mov
ret
je
jle
nop
jnp
jne
aam
ja
adc
pop
icebp
test
xchg
or
test
lahf
lahf
test
inc
xchg
push
xor
jae
or
fistl
sub
les
stos
stos
mov
mov
and
mov
in
mov
sbbb
xlat
mov
lock
aam
leave
xor
test
or
xorl
negb
icebp
fsts
or
lds
jl
outsb
adc
hlt
xchg
test
iret
insb
push
jno
lret
jnp
sbb
mov
test
pop
ss
sbb
pop
sub
mov
mov
jae
jno
cwtl
jns
and
fs
popa
das
inc
negb
mul
sub
and
cmc
push
inc
mov
mov
sti
xchg
add
mov
in
outsb
xlat
sbb
dec
sahf
mov
inc
mov
lods
cli
mov
loope
mov
jle
add
and
pop
scas
push
clc
dec
push
aad
xlat
lock
and
jmp
aaa
inc
stos
lahf
fidivrs
dec
pusha
pusha
add
jnp
mov
mov
push
jg
pop
xlat
jb
lock
lods
outsl
test
inc
cmp
push
cmpsb
jp
fwait
cmp
adc
fiadds
repz
std
test
outsb
outsb
dec
cmpsb
sub
sub
lea
inc
adc
lods
sub
adc
aam
lret
popa
or
xor
call
add
or
xchg
mov
xchg
data16
outsl
xor
js
aad
mov
sub
xor
subb
and
lret
sub
ljmp
push
mov
je
ja
add
in
jbe
adc
cld
jmp
mov
lods
and
jmp
xchg
aas
push
jg
jge
jle
sbb
mov
jmp
jb
les
xchg
je
fimull
dec
js
push
or
lods
mov
mov
pop
xchg
std
fiadds
mov
stc
ret
sahf
stc
dec
push
pop
jl
dec
jmp
fadds
xchg
lret
mov
stos
cmp
push
inc
imul
inc
and
push
scas
push
sub
pop
mov
repz
mov
xchg
es
fwait
push
aam
sub
jl
xchg
sbb
out
into
je
push
into
mov
dec
inc
pop
imul
and
lret
sub
scas
adc
out
and
pop
lock
iret
push
or
aam
stos
iret
roll
jae
cmp
xchg
adc
add
xchg
mov
add
jge
ret
negb
xchg
dec
repnz
pop
pop
push
mov
and
sub
loopne
icebp
inc
or
ret
loopne
push
insl
out
xor
jns
adc
mov
cld
pop
jl
clc
push
cmpsb
fsubrl
push
mov
insb
ret
clc
outsl
popf
push
xor
ret
ret
jbe
fwait
cwtl
ret
pop
dec
xchg
fnsetpm(287
inc
dec
sub
test
adc
xor
int3
stc
clc
jnp
rcrb
popf
ja
sarl
lods
punpckhwd
push
push
mov
addl
sbb
test
xlat
cs
pop
sbb
pop
mov
mov
mov
pusha
mov
sbb
negl
out
cmp
cmp
mov
stos
lret
jp
mov
jecxz
mov
and
jnp
inc
ss
push
fisttpll
pop
jge
incb
push
lahf
rclb
cmp
jb
pop
out
pop
dec
int3
xlat
ja
frstor
cltd
pop
mov
lods
pop
dec
addr16
mov
test
and
mov
lds
icebp
mov
xchg
mov
call
fidivs
popa
xor
lds
add
fistpll
imul
inc
pushf
cmp
in
jns
shrb
mov
pop
and
mov
fmull
xchg
mov
dec
mov
stos
insb
xchg
jle
mov
lcall
xchg
mov
clc
cmp
push
or
aas
cli
jae
clc
vunpckhps
mov
out
clc
out
mov
inc
adc
cmp
xor
dec
sub
dec
sbbb
loopne
shlb
movsb
bound
mul
stos
leave
or
sub
xchg
inc
loope
mov
push
pop
xchg
push
lock
push
fsubrl
dec
dec
or
stos
test
push
push
je
and
cmpl
insb
loopne
cmpsb
cmp
push
and
nop
adc
or
ss
sti
mov
jge,pt
test
ss
out
sub
jecxz
into
xchg
mov
fcmovu
inc
inc
mov
push
add
push
mov
add
sti
stos
in
lods
repz
lret
mov
pop
sbb
loopne
jl
dec
mov
pop
jp
mov
jecxz
push
jb
push
in
repnz
inc
decl
pop
inc
add
xchg
cmc
mov
xchg
push
aam
rcll
cmc
mov
mov
add
adc
outsl
outsb
mov
out
addb
mov
jo
lret
push
pop
or
cmp
mov
pop
insl
jno
ja
adc
xor
and
orl
aas
sub
jne
cmp
xor
mov
mov
or
into
lock
sub
xchg
sahf
out
dec
pop
mov
mov
pop
push
jle
mov
push
xchg
scas
lcall
or
add
data16
psubb
xlat
adc
rorb
pop
test
jg
test
in
xchg
call
sahf
mov
les
xchg
pop
inc
mov
test
push
je
fcmovbe
push
arpl
ss
mov
jno
maxps
cli
xor
sbb
pop
lahf
pop
in
pop
mov
or
pop
iret
pop
repnz
mov
push
pop
sbb
mov
sub
repz
nop
icebp
ficomps
mov
pop
sub
xchg
scas
dec
faddl
add
jecxz
icebp
test
mov
sub
sbb
inc
xor
xchg
xor
stos
mov
cmc
mov
in
lods
inc
nop
xchg
mov
mov
outsl
repz
jnp
sbb
and
imul
in
pop
mov
js
push
mov
fldl
jmp
stos
push
xchg
mov
push
push
cli
aas
jecxz
cmc
or
jl
adc
inc
shl
pop
call
int
jmp
jno
and
mov
inc
arpl
sbb
in
popf
test
dec
push
lods
mov
push
push
inc
jle
xor
insb
xchg
inc
test
inc
sub
ret
sti
out
adc
pop
gs
insl
fidivrs
mov
mov
adc
adc
shlb
xchg
jo
aad
mov
lret
rcrl
add
std
push
dec
inc
push
enter
mov
or
imul
jmp
stc
mov
jns
ljmp
xlat
iret
add
cmpsb
aas
js
sbb
ret
dec
pop
push
out
lods
xor
xor
dec
fwait
mov
aaa
push
in
and
add
add
fdivrs
add
das
xchg
test
out
incl
rclb
fnstsw
jle
xor
jle
icebp
pushf
sub
push
fisttps
in
fisubl
mov
sub
and
cmpl
lock
add
call
xor
test
notl
in
lahf
or
nop
fsts
aam
jne
mov
sub
mov
insl
jne
adc
lahf
mov
fdivs
lret
add
gs
das
aad
adc
imul
imul
xchg
lahf
ja
add
popf
mov
lahf
or
test
inc
sbb
xchg
jns
shrb
cld
xor
and
pop
frstor
fneni(8087
pusha
outsl
fisubrl
inc
imul
jae
cld
add
mov
add
shll
outsl
into
insl
ret
cmpsl
sub
lahf
add
dec
cmpsb
xor
xor
insl
dec
push
and
fidivrs
fdivr
xor
jp
dec
push
inc
leave
mov
add
cld
int
ss
imull
loope
into
mov
stos
fildll
or
js
call
pop
add
mov
loope
sbb
jge
movsb
ja
aas
and
test
popa
popa
scas
or
mov
popf
out
leave
sbb
push
std
pushf
mov
lret
bound
jnp
push
jnp
call
fcompl
ficompl
xor
int3
push
add
sbb
push
dec
adc
sub
push
adc
adcb
sub
xor
sahf
movsb
dec
cmp
add
dec
into
addr16
adc
test
loop
push
mov
inc
xlat
notb
ss
mov
imul
inc
add
aaa
jg
or
enter
popa
test
or
lcall
push
cmpsb
imulb
pop
and
adc
fucomip
and
roll
data16
mov
leave
xor
lock
vmread
out
cmpsl
scas
mov
mov
popf
cmp
pop
out
or
sub
mov
jmp
xchg
inc
push
mov
lea
mov
inc
mov
push
pop
sub
xchg
cltd
mov
jg
mov
out
jae
add
adc
and
xor
ret
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
and
xor
ret
and
xor
add
adc
inc
mov
inc
mov
jae
add
adc
ret
ret
cli
shll
jecxz
repz
bound
mov
xorb
loop
repnz
dec
add
gs
ljmp
js
push
pop
cmc
cs
pop
jbe
add
clc
push
jmp
fistpll
lahf
mov
pop
dec
dec
pop
cmp
sub
sbb
or
out
call
fistpll
test
cwtl
outsl
push
pop
cmp
sub
sbb
or
clc
out
lret
fdivl
jecxz
ljmp
pop
sbb
cmp
xchg
mov
sbb
xchg
or
jo
pop
xor
outsl
add
mov
aas
sub
add
xor
lret
test
into
sub
mov
mov
pop
icebp
xchg
aam
fdivr
out
mov
and
push
aad
std
add
push
pop
dec
or
cs
pushl
insl
add
or
pop
sbb
mov
cmpb
sub
fwait
pop
dec
pop
adc
mov
fucomip
cld
push
scas
enter
test
xchg
imul
test
xchg
scas
out
sbb
daa
mov
and
pusha
mov
push
pop
cmp
sub
sbb
or
clc
out
call
fistpll
outsl
sbb
xor
and
cmp
dec
jl
or
lahf
out
pushf
mov
mov
std
into
cli
sbb
pop
and
cmp
pusha
pop
pop
xor
test
lea
ljmp
aaa
sub
je
sub
sbb
or
clc
out
call
fistpll
outsl
push
pop
cmp
sub
sbb
or
clc
out
call
fistpll
outsl
dec
push
lds
addr16
fisubrl
mov
fabs
fstpt
dec
xor
out
mov
or
and
out
and
sarl
inc
daa
mov
js
aas
popf
sbb
push
jns
sbb
xor
add
in
scas
jle
leave
test
pop
inc
sbb
mov
pop
pop
inc
cld
pop
and
pop
mov
pop
xor
idivl
push
iret
mov
jp,pt
cmp
sub
js
loopne
pusha
pop
xchg
leave
xchg
cltd
je
mov
orb
fbstp
stos
sbb
sbb
sbb
xor
dec
in
outsw
and
xchg
mov
and
aam
mov
add
sahf
xor
nop
push
lea
cwtl
sbb
or
loop
adc
movb
fwait
aaa
pop
lods
or
mov
mov
and
call
lds
xchg
jnp
in
jmp
int3
push
cld
lret
sub
and
mov
inc
loopne
xlat
test
ret
jo
imul
mov
and
mov
sahf
inc
orl
aam
mov
cmpsb
in
fwait
int3
add
xor
pop
xor
and
je
popl
inc
xlat
repnz
jle
cmpsl
lcall
dec
sahf
insl
mov
push
cs
jge
insl
inc
imul
pop
xchg
mov
out
jno
and
cmc
or
cmpsb
stc
push
pop
cmp
push
les
add
jb
xor
stc
int3
push
jmp
mov
mov
aas
cmp
jg
sbbl
and
std
rcll
xor
adc
mov
or
movsb
test
pop
lahf
inc
mov
jecxz
imul
or
sarb
xchg
jno
and
xor
and
jg
pop
and
push
xchg
pusha
imul
stos
andl
dec
fs
cltd
cmc
xchg
leave
ss
mov
out
iret
cltd
mov
or
sti
lret
pop
pop
mov
lcall
mov
push
cmc
divb
fisttps
aaa
add
adc
ds
mov
in
cltd
jmp
jl
aas
je
xor
insl
adc
and
je
aad
mov
add
clc
int3
pop
cmp
mov
mov
mov
cmp
push
mov
push
lods
in
cmc
aas
and
filds
scas
in
rorl
and
int
fmull
push
mov
test
pop
mov
mov
lds
imul
sub
out
mov
ja
das
mov
push
xor
cli
xor
jge
dec
es
cmp
jle
int
mov
adc
icebp
jne
and
ds
dec
jmp
scas
sar
das
iret
or
jecxz
dec
adc
xlat
jp
jns
jbe
fstps
and
jl
je
imul
cmc
push
and
adc
jno
xchg
push
stos
mov
pop
lea
repz
scas
pop
iret
xchg
or
mov
cmpsb
pop
xchg
cmp
scas
jo
dec
shl
sub
das
push
cmc
out
and
adc
sub
shrb
jle
mov
fcmovu
repz
popf
cli
lahf
xchg
jae
dec
mov
rcll
mov
cmp
movsb
pop
adc
popa
or
xchg
in
mov
sbb
clc
es
cmpsl
push
loopne
mov
ss
or
cmp
in
sbb
movb
aam
mov
add
add
arpl
mov
dec
lods
pop
jp
jle
or
bnd
dec
in
mov
stos
jg
ret
pop
and
popf
notb
mov
test
es
sbb
cmp
popf
inc
adc
outsl
fs
cmpsl
xor
sub
xchg
rcrb
xchg
adcb
lret
pop
jo
pop
arpl
sub
call
mov
xchg
dec
push
mul
mov
or
mov
and
mov
in
xlat
stos
jg
hlt
jae
mov
mov
icebp
or
inc
cmovp
add
and
fcmovbe
ds
pop
lret
sbb
cmp
sarl
adcl
adc
lea
push
insb
cmp
cmp
rclb
push
cmp
lds
mov
in
jae
and
movsb
inc
mov
rclb
mov
mov
xchg
adc
lods
push
insb
mov
mov
test
jmp
stos
dec
call
cmp
repnz
xchg
subb
int3
pop
out
xor
xchg
leave
fwait
inc
adc
lds
lahf
jo
icebp
push
js
xchg
jle
popa
shlb
je
shr
cmp
jecxz
sbbb
inc
inc
pop
mov
cmp
and
mov
or
sbb
adc
mov
xor
loop,pt
jnp
xchg
mov
mov
les
mov
mov
xchg
int3
inc
js
mov
inc
popa
cmp
jns
testl
cmp
jae
clc
push
add
ss
out
adc
fsubrl
cltd
mov
cmp
add
or
lret
push
add
leave
xor
hlt
or
xchg
adc
or
or
leave
je
xchg
dec
xchg
xchg
mov
jnp
jb
dec
pop
jbe
test
push
xchg
pop
es
and
push
dec
sub
rcrb
loope
rcrb
icebp
cmp
ja
pop
lods
sbb
dec
test
movsl
rcl
neg
jb
dec
cmp
gs
mov
je
imul
jmp
adc
fildll
jne
lret
cmpsl
ret
dec
cmpsb
mov
add
adc
xchg
push
into
les
lahf
sbb
mov
fdivrp
jnp
push
fbld
into
sarl
inc
dec
dec
cmc
dec
xchg
movsl
inc
jbe
bound
aad
mov
pop
in
lret
mov
outsb
xchg
popf
in
test
xchg
or
push
rorl
lds
sbb
insb
mov
inc
pop
aaa
js
cmp
pusha
sti
and
adc
jns
adc
push
lret
xor
push
mov
inc
test
mov
inc
or
leave
push
call
sub
dec
in
mov
in
imull
and
push
lea
out
adc
jbe
add
lods
test
xchg
fisubs
mov
push
inc
xor
cmc
rcll
and
xor
xchg
pop
push
mov
jp
mov
pop
sub
xchg
dec
outsl
mov
mov
pop
in
loop
sub
push
cmp
push
xor
pop
push
aam
jnp
cmp
xchg
icebp
ds
dec
dec
loop
mov
lods
mov
xchg
idivl
cmc
mov
push
or
or
cmpsb
mov
xor
imul
aam
nop
cmp
cmpl
lock
jno
stc
scas
std
fs
mov
data16
cld
mov
daa
mov
jecxz
pop
pop
sbb
icebp
or
dec
add
mov
mov
sub
add
stc
outsl
fsubs
jecxz
inc
stc
jns
sbb
popf
xor
xchg
ret
fiaddl
je
ss
inc
add
push
sub
leave
sbb
pop
test
push
insl
jb
push
fwait
outsb
xlat
movsl
xchg
outsl
cmc
test
lea
dec
inc
sub
fidivrs
test
lods
js
mov
or
sbb
ret
sbb
dec
test
sub
std
dec
fwait
inc
mov
dec
xor
push
sub
int3
push
adc
adc
sub
jno
mov
cmp
dec
shll
adc
shrb
inc
adcl
pop
orb
and
scas
out
xor
push
xor
jle
sbb
ljmp
fbld
fs
cmp
cmpb
mov
mov
fsts
pop
aam
xchg
cmpsl
jecxz
es
popa
popf
push
xchg
mov
cmpb
push
call
mov
fdivrp
pop
stos
or
xor
and
repnz
out
jl
loop
rolb
push
rcrl
nop
mov
pop
mov
inc
cmc
push
and
sbb
ja
das
adc
mov
pop
idiv
mov
and
dec
pusha
pop
addr16
mov
fiaddl
mov
xlat
stos
cld
sti
add
dec
cmpsb
movsl
jmp
les
sub
push
cmpsl
dec
sub
insl
daa
jg
mov
lcall
dec
or
jne
shl
rolb
pop
lret
decl
jmp
and
mov
pop
pop
les
xchg
cltd
dec
faddp
outsl
and
jns
orb
pusha
jge
out
fldenv
add
fcomps
push
cld
inc
pop
push
adc
repnz
jp
mov
xchg
mov
jle
shll
pop
lcall
mov
aam
jle
push
mov
pusha
fisubrl
cmpb
out
cmp
jp
xor
int
adc
cmpsl
cld
jl
adc
xchg
or
dec
hlt
sub
and
add
mov
mov
fs
xchg
adc
insl
clc
pop
adc
stc
rol
xchg
mov
shlb
cmp
xchg
cmp
cmpsb
imul
rclb
push
mov
lret
dec
push
cwtl
movsl
loopne
in
xchg
rcll
push
mov
mov
cli
jp
pushf
test
xchg
lea
aad
push
pop
xchg
sub
adc
fstl
add
scas
mov
movsb
popf
gs
inc
lret
mov
push
leave
push
pusha
sub
lahf
aas
je
in
dec
addb
decl
inc
mov
adc
push
test
jns
sti
pop
int3
fcmovb
xor
add
xchg
cmp
jb
dec
mov
enter
jle
inc
lock
ficompl
and
lods
jb
in
fidivrl
push
cwtl
mov
mov
xchg
addl
imulb
xchg
daa
jno
dec
cmpsl
scas
mov
iret
lods
ds
adcb
sub
mov
into
nop
inc
push
xorb
ret
std
cmp
push
test
loope
mov
push
mov
scas
ds
sub
sub
mov
repnz
fisubl
and
ret
lods
in
lds
out
xor
addl
cmp
lock
aam
stc
dec
mov
sti
shll
mov
xchg
js
mov
rclb
shl
pop
sbb
mov
daa
mov
push
fisubs
cmp
arpl
adc
mov
loopne
dec
and
mov
movsb
and
inc
test
jge
mov
test
aam
dec
jg
push
sub
cmpsb
cmp
fsubl
icebp
mov
cmpsl
fdivrl
pop
lahf
push
dec
cmpsl
loop
fcomip
ret
movsb
push
inc
cld
jg
mov
cmp
add
xchg
xchg
xor
movsb
add
cld
aas
jp
sbb
sbb
jne
add
mov
aad
mov
les
push
sbb
mov
aad
sti
mov
das
push
pop
call
jnp
pushf
into
pop
mov
lds
xor
push
and
inc
cmp
pop
xor
js
jp
inc
enter
cmc
ret
mov
and
test
aaa
stc
sub
mov
int3
in
xchg
add
je
xor
out
xlat
mov
packssdw
leave
dec
sub
and
int3
and
mov
dec
inc
ja
sub
xor
mov
add
ja
lods
cmp
inc
dec
sbb
push
lret
mov
adc
sahf
pop
mov
or
add
pushf
test
mov
push
push
xor
inc
add
xchg
cmp
sbb
inc
fistl
jno
mov
in
inc
mov
xchg
psubusw
incb
in
subb
push
in
mov
mov
fidivrs
jns
push
cli
sarl
jmp
pop
mov
sbb
enter
cmpsb
inc
addr16
sub
sahf
mov
pop
xor
xchg
aaa
inc
pop
push
fdivl
jae
cltd
mov
mov
and
push
mov
mov
push
sub
ret
mov
lods
frstor
stos
leave
pushf
mov
cld
jg
mov
inc
mov
outsl
jp
adc
les
iret
push
dec
popa
jle
ror
dec
push
cmp
push
in
icebp
daa
inc
rol
shr
push
xor
mulb
mov
cmpsb
xlat
bswap
test
xchg
movsb
sbb
push
js
sbb
test
jns
mov
ret
push
sub
outsl
xchg
mov
pop
mov
popa
je
dec
inc
test
sub
into
or
lods
ret
fiadds
imul
insb
xchg
mov
int3
cmp
push
push
mov
mov
mov
dec
inc
xchg
nop
out
stc
cs
pushf
hlt
fisttpl
sbbl
shlb
pushf
std
int
xchg
lret
fldl
sub
add
icebp
mov
ret
mov
pop
addb
pushf
clc
and
push
push
scas
jg
in
and
sub
push
loopne
jg
xor
int3
in
push
out
and
mov
aas
fcoms
mov
xchg
sub
cmp
jno
xor
aas
scas
inc
dec
jmp
mov
and
movsl
cwtl
loope
iret
pop
add
push
sub
or
cmpsb
mov
pop
jp
mov
push
mov
pop
gs
xor
add
dec
loopne
ficompl
sbb
sbb
cmp
ja
cmpsb
inc
jge
sub
xchg
movsb
cmp
lds
cmp
out
xor
cli
hlt
lea
dec
pop
mov
outsl
push
sbb
mov
in
loopne
fsubr
xor
aam
loope
lds
int
ss
rol
mov
bound
icebp
and
fnsave
hlt
or
mov
push
jge
push
push
cmc
dec
test
or
out
inc
pmaddwd
mov
cmp
add
stc
mov
roll
jnp
jo
hlt
or
inc
mov
add
push
pop
loope
rcrb
sub
ret
arpl
mov
addr16
cs
add
xor
bound
cmp
lret
lea
xchg
dec
ror
pop
sbb
cmpsl
inc
push
sub
lods
ljmp
aad
sbbl
xchg
fs
bound
and
or
stos
out
mov
repz
sub
cwtl
scas
inc
push
mov
push
nop
pop
sti
or
dec
decb
mov
iret
fsubl
stos
shrl
dec
outsb
push
xor
loop
add
xor
jmp
cmp
aaa
dec
cmp
cltd
popf
out
ret
push
icebp
and
das
and
add
dec
jne
lret
shlb
cli
dec
sbb
ljmp
in
mov
dec
push
je
xchg
sti
push
imul
xchg
mov
jle
inc
add
push
sbb
jp
push
outsb
out
sarl
inc
or
jmp
pop
lea
add
outsb
sti
xor
in
aas
sarl
ja
flds
xchg
leave
mov
inc
pop
movsb
lcall
xlat
aam
shll
mov
mov
mov
lock
sub
cmp
cmp
sub
sub
pop
fbstp
test
or
jo
in
push
mov
imul
mov
ss
push
shl
fs
xchg
fwait
movd
push
and
outsb
in
push
or
inc
inc
int
xchg
mov
mov
mov
shl
xchg
xor
pop
movsl
insb
cli
out
testb
mov
aad
ss
add
jb
and
test
insb
cmpsl
mov
fwait
int
loopne
repz
jmp
enter
sub
outsb
push
data16
cmp
push
cmp
rcll
jnp
cmp
sub
xchg
or
mov
jnp
sub
dec
and
pop
insl
ja
xchg
mov
or
movsl
loopne
push
cli
pushf
xorl
adc
inc
out
mov
sub
jno
cwtl
clc
sbb
sub
imul
cmp
xchg
xchg
mov
mov
mov
popf
es
dec
inc
inc
mov
mov
jecxz
xor
and
mov
jbe
jp
test
xlat
or
mov
nop
jns
jns
ss
mov
inc
leave
cld
sub
jl
outsb
bound
mov
rcr
out
dec
shrb
mov
adc
scas
pop
bound
leave
daa
int
leave
js
dec
pop
jp
decl
xor
inc
pop
xchg
or
lcall
mov
subl
popa
mov
int
inc
fldenv
cltd
and
pop
in
scas
dec
in
insl
add
fdivrs
mov
xchg
sub
jge
leave
clc
inc
enter
inc
xchg
dec
aas
mov
xor
pop
clc
rorl
out
cli
stc
and
mov
sbb
mov
pop
icebp
dec
enter
mov
loope
dec
xchg
popa
dec
out
pop
cltd
roll
movsb
aad
test
sbb
movsb
inc
ficoml
dec
call
cwtl
out
mov
sbb
add
jo
mov
mov
dec
fnstenv
lcall
aam
stos
lahf
into
nop
sbb
mov
push
ret
mov
aad
in
inc
push
mov
lret
or
mov
xchg
dec
push
insl
test
xchg
cmp
into
cs
outsl
add
or
xorb
inc
loope
cmp
mov
das
xchg
push
mov
or
mov
adc
divb
xlat
xchg
cmp
mov
hlt
xlat
jo
aad
mov
add
ss
int3
and
and
stos
inc
in
xor
inc
pop
sbb
pop
sub
inc
cmp
lods
mov
mov
mov
mov
mov
stos
fidivs
sub
std
jecxz
push
dec
pop
adc
dec
sbb
jno
sbb
cwtl
stos
out
in
dec
sahf
dec
movups
mov
xchg
jne
push
jecxz
popf
cli
cmp
repnz
loop
rolb
aaa
dec
pop
mov
sbb
xlat
call
call
lret
sbb
les
sub
jmp
and
mov
or
xor
gs
cmp
jnp
das
fwait
movsl
pop
xor
ds
repz
push
dec
ja
xchg
dec
mov
movsb
cmc
xor
daa
pop
dec
cmp
movsl
mov
lcall
daa
inc
shrb
test
fwait
lods
vcomisd
pushf
pusha
in
daa
das
push
es
jmp
call
sbb
jge
inc
cmp
movsl
add
pop
xchg
pop
insb
shlb
mov
sub
call
jmp
xor
jnp
lea
sub
mov
outsl
push
fcompl
out
stos
movsl
jne
jb
mov
mov
mov
sbb
push
stc
stos
xchg
jne
gs
sub
ss
fcoms
mov
addl
xor
sub
jl
leave
and
mov
sub
adc
repnz
test
outsl
inc
mov
dec
xor
xchg
or
lret
movsl
mov
in
mov
insl
aaa
frstor
scas
push
xchg
mov
jecxz
repz
iret
or
cmpsl
pusha
bound
into
lods
outsl
pop
sub
les
addr16
hlt
push
cmp
stc
jns
lods
aas
jl
xorb
mov
pusha
jp
push
xlat
es
pop
jle
lea
fs
push
leave
sbbl
lods
dec
nop
or
lds
or
loope
leave
jmp
aad
in
scas
xor
or
test
fstl
xor
cmp
xlat
push
dec
ja
movsl
mov
insl
and
xchg
test
iret
mov
enter
out
in
jns
es
mov
rcrl
test
repnz
jmp
and
mov
mov
mov
and
icebp
pop
shrl
cmp
lods
cwtl
or
loop
sbb
dec
pop
pop
mov
and
pop
cmp
test
xchg
add
cmp
inc
nop
cmc
cmp
mov
stos
xor
ss
bound
scas
lods
cltd
out
mov
outsl
das
or
clc
add
or
out
aam
sub
gs
cmp
lahf
push
sbb
xchg
sbb
ds
sub
dec
sub
into
cmp
pop
shlb
adc
push
fnsave
jne
push
and
loop
mulb
add
push
pop
add
dec
sbb
iret
adc
push
insb
movsb
add
fstpl
iret
popa
fadds
inc
jecxz
xchg
and
adc
subb
popf
push
adc
mov
sub
dec
sub
mov
gs
in
pop
sahf
insl
mov
pop
and
adc
xor
mov
xchg
push
sub
adc
adc
sbb
jmp
popf
mov
xor
jb
mov
cmp
inc
test
lret
jp
or
push
movsw
xchg
adc
sbb
cmp
sub
repnz
ljmp
jg
dec
dec
pop
cmp
sub
sbb
or
clc
out
call
fistpll
outsl
push
pop
cmp
sub
sbb
or
clc
out
call
fistpll
outsl
call
pop
mov
js
fmul
enter
test
cwtl
outsl
push
pop
cmp
sub
sbb
or
clc
out
call
test
daa
fadds
jo
pusha
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
or
cmp
sub
push
mov
xlat
or
imul
cmp
sbb
sbb
jmp
sub
pop
test
push
jns
imul
sbb
lock
cmp
sub
pop
mov
mov
cwtl
mov
pop
fsubrs
push
mov
jmp
inc
push
push
inc
pop
pusha
xchg
pop
jecxz
push
loop
repnz
scas
andnps
inc
add
hlt
mov
mov
pop
and
test
adcb
jmp
push
pop
lods
enter
mov
jle
xchg
popa
mov
mov
aaa
jne
in
popf
mov
fnstcw
inc
cmp
call
stc
sti
leave
das
jmp
and
push
xchg
push
cmpsb
mov
movb
arpl
rorl
cmp
cwtl
cltd
in
jns
or
pop
mov
mov
or
out
out
sbb
leave
xlat
adc
ret
pop
fdivl
int
dec
pop
ret
jp
dec
aas
imul
or
jmp
sub
pop
test
push
popa
mov
xor
cs
or
jge
mov
jle
outsb
fdivrs
in
hlt
call
sbb
ss
inc
mov
or
stc
pop
mov
add
ljmp
sbb
pop
lods
push
xchg
cmpb
pushf
jle
dec
lods
sbb
mov
cwtl
imul
cmp
or
sbb
jmp
sub
pop
test
push
jns
dec
test
fsubrs
enter
call
jle
call
mov
jno
lcall
xchg
lds
push
stc
adc
and
leave
mov
xchg
add
repnz
imul
stos
dec
cmp
jae
xchg
jg
inc
ja
mov
push
into
js
loopne
ja
das
xor
fildll
adc
addr16
popa
lods
ficomps
cmp
daa
push
cmp
cmp
fidivrl
fcompl
testl
imul
or
pusha
cmp
add
aas
and
popa
test
ja
jns
xlat
pop
subl
inc
mov
std
and
mov
mov
mov
test
lock
adc
idiv
mov
in
mov
jb
adc
cwtl
push
test
dec
push
sub
mov
mov
roll
nop
aam
test
jnp
adc
dec
mov
add
or
subl
cmp
mov
popa
sbb
cmp
mov
xchg
cltd
cmp
adc
incl
xchg
jp
pop
mov
adc
popl
nop
pop
mov
cltd
dec
jne
push
push
push
icebp
mov
lcall
jne
xchg
lcall
xchg
out
les
push
pop
shl
fistl
jg
pop
pop
mov
orl
sbb
mov
push
mov
pop
mov
rorl
in
add
lods
enter
daa
inc
into
mov
int3
fwait
sbb
loopne
das
lock
int3
popa
or
and
and
pop
mov
push
push
imul
outsb
push
fucomip
mov
outsl
loope
test
lcall
loop
xor
cmp
add
pop
leave
pusha
rcrb
pop
fnstsw
je,pn
cmp
xor
imul
sub
sub
cld
mov
xor
pop
push
pop
inc
dec
mov
or
popf
xor
outsl
pop
jnp
das
ret
add
iret
aas
dec
dec
mov
and
pop
call
ret
mov
mov
push
xor
enter
mov
cwtl
mov
flds
lea
es
xchg
aas
stos
incl
shrl
fistpl
push
mov
je
jae
scas
mov
popl
enter
outsl
pop
lcall
xchg
mov
sbb
xor
bound
fsubrl
stc
lods
pop
ret
or
roll
dec
mov
jne
sbb
idivb
push
sub
jo
ds
jmp
cmp
mov
jns
xchg
and
jmp
ljmp
outsb
jle
lock
test
push
movsl
mov
cmp
enter
lock
enter
cmp
sbb
cltd
ja
cld
jp
lret
mov
lret
push
mov
xor
aam
sbb
xor
add
in
or
es
flds
and
xchg
adc
xor
icebp
cltd
dec
scas
pop
testb
orl
es
inc
fs
sbbb
mov
or
notb
xchg
fnstenv
jbe
push
sub
orl
dec
mov
xor
cltd
sub
mov
outsb
adc
fcoml
loopne
ret
and
fcmovnu
sahf
inc
ret
push
jae
jae
pop
fucom
ret
cmp
test
loope
pop
push
jp
pop
push
jns
jae
xor
into
or
bound
mov
movsb
sub
test
out
cmp
cmpsb
popf
stc
xorb
aaa
inc
clc
out
gs
push
jo
or
add
xchg
in
mov
dec
mov
or
dec
in
rcl
pop
sub
xchg
sbb
inc
lret
test
xchg
movsl
aaa
shrb
das
ret
xor
or
or
rorl
clc
pusha
cwtl
dec
pop
repnz
popf
ja
inc
das
push
out
lret
stos
into
lock
test
and
pop
rcrl
iret
mov
mov
ljmp
xor
ret
inc
testl
in
aad
repnz
add
mov
or
cld
lods
cs
adc
imul
push
add
jne
fsubrl
mov
or
mov
sbb
jnp
xchg
cmp
mov
clc
mov
int3
add
insl
push
and
repnz
jnp
out
sub
push
in
add
lcall
inc
adc
sbb
fidivl
inc
icebp
or
dec
test
ss
shll
lret
and
add
mov
mov
ficoml
jg
loop
xchg
outsb
jae
outsl
sbb
and
mov
fs
andl
test
pushf
movsb
inc
mov
add
mov
mov
repnz
lcall
xor
cmpsl
and
mov
es
lcall
adc
movsb
jp
adc
lods
pusha
sbb
cmp
js
xor
outsb
nop
test
sub
dec
xchg
dec
sub
jg
jmp
stos
jge
pop
cli
mov
fistpl
mov
out
ds
cwtd
lret
push
xchg
pop
add
and
enter
lahf
loop
xchg
js
xchg
pushf
cmp
rcrb
push
ds
fsubr
sbb
js
xor
lret
cmp
in
mov
sahf
or
adc
xchg
mov
ja
loop
mov
fst
cs
aam
cmp
push
mov
or
jp
jne
jnp
push
lahf
mov
and
dec
imul
test
ret
jne
popf
xor
testl
leave
lahf
popa
ficoms
mov
dec
jb
mov
fs
sub
or
inc
out
ds
pop
das
adc
outsl
adc
fadds
mov
lret
pop
and
lods
gs
cltd
test
dec
aad
jmp
insb
or
jmp
mov
xchg
push
pushl
and
pop
mov
or
inc
ret
je
adcl
mov
or
pop
push
sub
xchg
popa
cld
or
jmp
cmp
int
mov
je
mov
push
mov
fcompl
das
les
fbld
insl
jae
jecxz
jmp
dec
pushf
mov
imul
sbb
jae
insl
lahf
inc
lods
fidivs
or
daa
sbb
loope
ficompl
xchg
in
fldl
sbb
movsb
and
jecxz
roll
pop
xlat
loop
or
and
dec
mov
pop
test
jne
xchg
outsb
dec
das
pop
push
mov
es
jmp
insl
pop
dec
enter
loope
sbb
iret
dec
iret
cmp
jb
jno
cmp
push
or
jge
rol
mov
push
loope
mov
lea
fidivrs
call
mov
pop
cs
xor
xchg
xchg
mov
lret
stos
stos
ljmp
outsl
mov
pop
inc
pop
cmpsl
add
mov
jnp
dec
mov
sub
xchg
xor
pop
pop
daa
loope
ret
jg
inc
out
cmp
pop
test
rolb
mov
and
into
jg
cwtl
mov
add
pop
xor
test
cmp
sbb
adc
mov
daa
pop
jp
addl
fs
jg
sbb
cltd
mov
pop
xor
out
or
inc
out
push
aaa
pop
in
or
stos
pop
xor
lods
dec
xchg
inc
test
xchg
sub
bound
popa
out
mov
fldpi
xor
repz
stc
sbb
fisubl
sub
pushf
xchg
in
repz
add
movsl
dec
lret
sub
lock
jle
adc
iret
xchg
adc
push
dec
inc
xlat
jle
xchg
les
int3
int
insl
add
rcrb
mov
ror
or
xor
jmp
mov
loop
xor
mov
sub
pop
jmp
adc
sbb
cmc
add
pop
and
mull
mov
int
mov
push
push
incb
incl
push
xchg
dec
ss
xchg
push
cmp
pop
or
test
aas
jmp
mov
xchg
sub
mov
jbe
bound
lret
cwtl
jb
sub
arpl
rorb
jno
outsl
stc
mov
inc
aaa
pop
jmp
xor
iret
pop
sub
jb
jle
fst
pop
jae
or
cmp
movsb
adc
arpl
inc
pop
or
mov
into
mov
mov
xchg
jmp
fbstp
lock
mov
jecxz
dec
add
aam
push
rcrb
insl
or
jb
les
add
push
imul
xlat
repz
dec
icebp
aas
dec
push
xchg
mov
test
nop
adc
cmp
push
in
scas
jae
xor
in
push
or
je
out
push
addr16
xchg
cmp
dec
pushf
rcrb
push
call
and
subb
fdivrs
hlt
pop
in
adc
into
scas
inc
xchg
mov
xlat
sahf
push
fistpll
hlt
cld
ss
cwtl
nop
adc
pop
mov
push
enter
xchg
or
cmpsb
cmovs
dec
mov
aaa
ss
sbb
add
into
cmp
sub
mov
lcall
mov
jnp
pop
sbb
inc
push
cli
adc
sub
cld
int3
jns
das
arpl
sbb
fcmovnb
jmp
loop
pushf
out
add
call
cmc
xchg
in
or
jge
scas
enter
mov
push
jo
iret
ja
xchg
insb
insl
setl
or
das
sbb
push
ss
outsl
lret
arpl
inc
aas
loopne
movsb
aas
dec
push
dec
inc
shll
xchg
ds
push
jns
scas
mov
mov
cmp
xchg
fsubr
pop
pop
jns
push
das
fsubs
movsb
or
ja
mov
mov
imulb
popa
and
mov
ret
dec
out
lret
pop
jl
stos
cmp
sub
shlb
push
cmp
or
stos
lcall
std
cmp
xchg
mov
call
cwtl
fistpl
push
xor
push
and
std
test
mov
es
pop
jp
sahf
cwtl
pop
repz
cmp
dec
xor
insl
scas
jp
and
insl
mov
ljmp
dec
push
out
test
outsl
ljmp
fidivl
popf
mov
fdivp
imull
push
cmp
mov
sub
sbb
inc
push
cmp
rcr
push
insl
scas
add
pusha
xchg
js
imul
sbb
scas
shlb
lret
and
sbb
cld
clc
cmp
jae
pop
or
adc
adc
out
fwait
repnz
ficoml
scas
or
aam
out
sub
pop
sub
jmp
mov
inc
sub
pop
je
inc
push
xor
insb
pop
in
into
or
insb
out
sub
shrl
out
adcb
sub
movsl
out
cltd
mov
sub
jmp
daa
repz
cmp
in
cmp
test
jl
jle
jno
cltd
loopne
shl
jbe
mov
movsl
or
inc
stos
mov
fadds
dec
lods
pop
test
xchg
jp
mov
leave
out
sub
adc
daa
lock
cmp
mov
mov
in
add
daa
cltd
out
xor
sbb
lret
clc
push
pop
cmpsl
adc
adc
enter
pushf
inc
sub
data16
data16
mov
addb
sub
cmp
pop
push
sbb
int3
push
push
loop
cmc
push
xor
push
loopne
movsl
ss
mov
repz
xchg
xchg
lret
popl
xor
in
loope
add
inc
or
les
cmp
push
adc
pop
lret
sarl
mov
or
test
xchg
or
pop
aaa
jge
out
div
aad
sub
push
sub
push
lcall
dec
sub
dec
fs
adc
callw
sub
mov
sti
out
mov
roll
jo
or
push
loop
cmpsl
int3
push
jp
leave
inc
sbb
in
cmp
mov
mov
xchg
mov
xchg
lock
je
out
xchg
mov
fnstcw
insl
fidivrl
pop
cmp
pop
mov
into
or
sbb
jbe
fcomp
xor
movl
inc
ror
inc
fld
push
fcompl
jle
inc
sarl
rorb
hlt
jmp
outsb
rclb
ljmp
clc
push
push
lods
jl
add
pushf
sub
jecxz
or
adc
sti
pop
js
mov
jp
sub
adc
pop
stos
mov
fists
mov
pop
jg
cmp
enter
xchg
cmpsb
and
fiadds
jmp
mov
test
gs
fdivs
push
fwait
jmp
dec
xchg
mov
mov
idivl
sbb
insb
mov
mov
inc
mov
and
jb
lods
push
mov
mov
mov
ja
xchg
fmul
stos
and
jg
shll
add
dec
cwtl
ret
dec
cs
mov
push
xor
mov
loop
test
in
inc
dec
xchg
sbb
or
pop
jmp
std
les
mov
or
pop
inc
inc
jg
add
dec
inc
in
into
sbb
loopne
push
xchg
mov
jae
xchg
xor
cmp
jnp
push
aaa
xchg
iret
imul
lcall
fwait
cmc
fs
mov
jnp
into
rorl
sub
in
xor
icebp
jb
cs
add
add
or
ret
aad
pop
push
daa
pop
mov
sub
adc
outsl
ss
sbb
or
into
lea
xchg
inc
adc
rorl
cmp
rcl
xchg
insb
aas
sbb
ds
jo
inc
scas
xchg
fldenv
push
mov
addr16
sub
sub
addr16
xchg
cs
mov
sbb
les
pop
jecxz
sbb
movsl
or
jmp
xchg
in
and
cld
sbb
xor
push
into
push
sub
insl
int
sbb
mov
test
cmpsl
divl
cmp
sbb
jg
addb
dec
cwtl
mov
icebp
stos
scas
jo
cmp
rcll
inc
cmp
lods
cmp
fcoml
shll
xchg
lods
cmp
mov
mov
out
out
call
jne
adc
pop
shrl
add
push
jecxz
pop
rolb
dec
fisubl
aas
dec
push
mov
and
std
push
pop
sbb
aad
and
mov
lods
dec
pop
or
dec
push
test
add
fs
xchg
push
call
in
outsl
pop
or
dec
daa
lds
dec
shll
cmp
mov
out
mov
push
push
adc
jge
pop
cmc
inc
push
ljmp
fcoms
or
mov
inc
jp
ljmp
adc
sub
popf
mov
faddp
xor
test
lea
xchg
test
bound
add
pop
adc
jmp
push
loop
in
bound
pushf
loopne
cmp
inc
negb
mov
and
xor
rorl
mov
in
mov
cmpsl
mov
lret
mov
aas
xchg
outsl
int
sub
sbb
inc
jb
xor
insb
push
adc
in
mov
mov
mov
jno
andb
sub
inc
dec
out
test
xchg
add
and
shlb
mov
insl
cmp
andb
nop
lea
sub
js
outsb
and
js
xchg
sbb
rolb
xor
outsl
push
xchg
daa
mov
dec
inc
insl
test
movsb
jo
dec
lcall
lods
fmulp
xor
dec
sub
imul
ret
lock
jns
pop
stos
test
xchg
insl
fcompl
into
outsl
mov
out
sarl
jl
inc
inc
mov
gs
jno
notl
adc
mov
out
rol
sub
jg
or
fs
das
fildl
in
decb
int3
inc
jg
dec
cmpsb
sbb
pop
cwtl
xchg
scas
rcl
shrb
gs
mov
mov
push
and
ret
xchg
mov
or
push
sbb
sub
fstpl
fnstcw
loop
lock
rorl
add
cltd
repnz
adc
xor
dec
cmpl
shrb
mov
int3
shlb
mov
mulb
xchg
testl
cld
andl
add
dec
cmp
adc
adc
sbb
and
sarb
movsb
mov
dec
fidivrl
and
and
jmp
mov
loopne
jb
inc
test
sbb
add
imul
xor
aaa
sbbl
pop
adc
mov
jns,pt
and
jno
add
mov
in
inc
jmpw
aas
jns
std
mov
ret
pop
cli
adc
cs
push
ljmp
jb
sub
mov
js
rorb
push
adc
add
lds
clc
div
das
je
add
push
lret
dec
pop
fnsave
jo
mov
mov
insb
int3
mov
icebp
leave
dec
adc
mov
std
jae
mov
gs
sbb
xchg
es
pusha
jno
repnz
jb
sti
fs
mov
push
repz
ja
mov
testl
add
insl
mov
loop
mov
enter
pop
in
jmp
mov
dec
sub
scas
sub
ljmp
ds
cmp
cmpsb
ret
pop
jb
sbb
and
push
mov
shlb
jg
jg
inc
call
sbb
das
cmpl
cli
out
shrl
mov
mov
jno
mov
rcl
jbe
addl
xrelease
aas
pop
clc
push
ljmp
ja
mov
test
sub
cli
sbb
cld
in
cs
sub
mov
inc
iret
pusha
xchg
sub
pop
ss
gs
mov
mov
push
imul
ljmp
push
adc
cli
cs
cli
aas
sbb
inc
nop
mov
adc
jno
add
test
je
mov
in
cmpsl
pop
and
movsl
lret
std
shl
aaa
imul
sbb
jne
cmp
inc
les
mov
lock
mov
icebp
or
loopne
xor
cli
sahf
xor
pop
mov
lcall
fidivrl
cltd
sub
call
cmc
insl
jae
imul
mov
inc
and
stos
aad
out
lea
cmpsl
pop
xchg
popf
es
mov
jo
fistl
xchg
xor
or
or
sti
mov
mov
pop
sub
fwait
and
mov
ret
es
je
cmp
add
arpl
or
loop
sbb
pop
loopne
lret
sti
pusha
jp
pushf
xlat
dec
mov
popa
pusha
bound
adc
dec
pop
and
adc
pop
inc
into
fadds
imul
add
loopne
stos
or
xor
dec
mov
pop
inc
jp
lods
lcall
out
xor
cmpsb
test
rolb
cmp
clc
jb
mov
gs
sahf
stos
cmc
int3
stc
fs
sub
mov
mov
inc
inc
ss
pop
push
inc
mov
and
xchg
ss
pop
push
stos
ss
mov
pusha
lock
jmp
rolb
mov
inc
pop
jbe
popf
jge
rorb
dec
rol
and
hlt
mov
bound
ss
lea
ds
fnstcw
or
mov
xchg
jecxz
scas
pop
or
mov
out
pop
cmp
lcall
jp
andb
lret
lock
and
fwait
pop
inc
and
dec
xchg
cmp
xor
xor
inc
xchg
push
push
mov
in
lret
cmpsb
inc
mov
inc
mov
std
aad
dec
movsb
idivb
mov
mov
mov
push
push
xor
jmp
mov
pop
cld
cwtl
inc
out
inc
subl
out
sub
sbb
jno
fcmovu
loopne
inc
dec
dec
icebp
fildll
popa
push
inc
aam
std
xchg
es
add
inc
stc
and
inc
inc
or
pop
lahf
out
testl
add
add
jbe
imul
xor
fwait
mov
sarb
xchg
push
jecxz
lea
mov
and
add
cmp
aas
repz
out
js
and
fadds
imul
or
sbb
cmp
mov
xchg
cmp
jnp
push
mov
fnstcw
lods
mov
addr16
shrb
aaa
push
mov
int3
push
ficoml
pop
fsubl
or
dec
test
sub
pop
pop
push
inc
fcmovb
pushf
sub
fists
and
sub
out
int3
nop
js
xchg
icebp
popa
cli
pop
pusha
out
mov
adc
clc
sbb
sub
into
mov
cmp
shl
xor
push
out
loopne
out
and
jecxz
push
popa
mov
or
scas
test
into
aaa
push
sbb
lcall
push
and
push
stc
pop
es
pop
test
push
jns
dec
test
fsubrs
enter
call
stc
cmp
sub
pop
test
push
jns
dec
test
fsubrs
enter
call
stc
cmp
sub
pop
test
push
jns
dec
test
cmp
or
sbb
jmp
sub
pop
test
call
rcll
dec
test
scas
mov
adc
cwtd
out
mov
xchg
jbe
or
inc
sub
pop
daa
int3
push
jns
imul
mov
cmpsb
leave
xchg
stc
xchg
jbe
imul
sub
pop
es
push
cmp
imul
mov
cmpsb
leave
xchg
stc
xchg
jbe
or
pop
and
push
sbb
es
xchg
xchg
clc
cmp
and
add
pop
lods
cmp
lea
mov
pop
test
test
sha256rnds2
sub
cmp
out
lds
mov
testb
mov
mov
mov
or
jne
test
jbe
xchg
retw
push
scas
jns
xor
push
xchg
or
jbe
cmp
push
pop
fsubrs
push
in
pop
push
movb
dec
dec
mov
xchg
in
jbe
filds
push
lods
outsb
inc
outsb
mov
mov
and
lret
sub
mov
insl
pop
push
mov
cmpsb
leave
xchg
stc
xchg
jbe
or
inc
sub
pop
es
push
jns
add
rorb
leave
shll
aam
cmp
outsl
inc
cmp
jnp
jb
test
mov
ret
mov
jmp
cs
and
cmp
inc
sbb
cmp
shl
int3
neg
cmpsb
leave
xchg
stc
xchg
jbe
or
inc
sub
pop
es
push
jns
imul
mov
cmpsb
leave
xchg
stc
xchg
jbe
or
inc
sub
pop
es
push
jns
imul
or
in
jb
popa
sti
aas
push
aad
sbb
aaa
stos
jno
or
mov
ror
call
hlt
cltd
imul
push
push
dec
pushf
and
jl
shlb
cmpsl
std
dec
add
dec
jno
lea
dec
test
sub
xlat
add
xlat
insb
cmp
ljmp
imul
pop
sub
mov
dec
sub
pop
call
lds
and
mov
mov
cmp
scas
sub
ret
jl
xor
pop
adc
fs
jg
ds
les
push
jae
loop
mov
leave
sbb
jo
fs
or
movsl
call
cwtl
xchg
lsl
mov
fistps
cltd
lods
subb
mov
push
cltd
fwait
sbb
jl
cmp
leave
adc
sbb
ja
push
add
xchg
aas
idivb
sub
filds
push
lods
jecxz
sti
lret
cmc
leave
negl
cmp
jecxz
cltd
mov
pop
fisubs
dec
mov
inc
incl
sbb
mov
add
push
jb
rcrb
insl
cwtl
sub
or
or
mov
inc
adc
adc
ret
sbbb
mov
es
lea
in
sub
outsl
faddp
and
insl
sub
jmp
inc
cmp
inc
sbb
or
mov
icebp
cltd
cmp
xchg
scas
xchg
scas
xor
jmp
cld
ljmp
mov
filds
stos
aaa
popf
cmp
cmp
popa
loope
add
nop
sbb
ja
and
push
popa
inc
stos
imul
lret
out
and
xchg
push
bnd
sub
pop
jmp
leave
outsb
push
mov
inc
cmp
sbb
sahf
sbb
in
cmp
sbb
ds
mov
add
mov
inc
aam
cs
dec
in
sahf
lret
xchg
daa
push
test
cs
jp
pusha
clc
imul
dec
aam
mov
andb
sub
mov
mov
test
fucompp
add
hlt
jecxz
lcallw
mov
xchg
xor
outsb
or
and
sub
push
cmp
mov
or
sbb
popf
sub
sbb
xor
js
subb
xor
dec
aaa
aad
and
lea
stos
push
or
jne
movsl
mov
in
inc
or
cwtl
and
out
incb
or
mov
cmpsl
mov
add
outsl
or
cmc
mov
xchg
sti
aad
jno
insb
add
cmp
lret
cmp
xor
or
add
xchg
sbb
xor
mov
lcall
xor
pop
fimuls
das
je
stos
cmp
push
stc
js
or
mov
mov
xor
pushf
cmpl
std
dec
fcomps
xorb
arpl
jge
repz
xchg
filds
add
pop
xor
mov
cli
gs
gs
mov
and
jns
and
xor
sbb
scas
arpl
mov
or
xorl
mov
test
in
mov
xor
dec
sbb
lds
dec
aaa
inc
inc
ficompl
loop
sbb
mov
pop
testl
pop
mov
add
filds
push
push
scas
jle
mov
pop
pop
fcoml
or
loopne
pop
or
and
stos
pop
adc
or
inc
scas
out
and
repz
in
pop
aas
xchg
lret
sarb
arpl
or
dec
fsubr
ret
push
fistpl
sbb
ds
sbb
out
xchg
push
lds
in
out
jg
lcall
xchg
cmp
js
lock
stos
and
test
movsb
inc
out
sub
bound
mov
test
jge
pop
outsb
mov
xchg
adc
and
xchg
mov
jle
xchg
or
pop
aam
adc
out
loop
mov
push
xorl
push
sbb
popa
iret
add
nop
pusha
inc
dec
out
xchg
hlt
aam
mov
pushf
jne
jmp
jo
ret
sti
push
jbe
inc
int
aas
out
movsb
imul
jae
add
aad
pop
shrb
das
std
mov
cltd
xlat
loopne
lahf
les
jmp
mov
test
jo
inc
fnstenv
adcb
push
xchg
sub
mov
mov
daa
push
fidivrl
leave
pop
cmp
mov
in
imul
mov
bound
nop
mov
mov
je
sub
xchg
push
std
adc
jg
imul
popa
cmp
cmp
sbb
adc
outsb
test
in
jle
lods
arpl
sarb
fildll
xchg
fwait
imul
daa
dec
lret
jne
sub
adc
inc
push
imul
call
dec
jle
pop
jl
adc
jmp
decl
inc
mov
movsl
repnz
add
arpl
popa
sbb
test
ret
jne
popa
ret
sbb
pop
scas
jg
hlt
insb
mov
testl
shll
add
xor
mov
mov
jns
adc
mov
out
push
sti
mov
hlt
jns
jo
jge
movsl
push
sbb
insl
push
push
mov
idivb
mov
ja
hlt
or
jg
in
jno
fsub
into
mov
cwtl
mov
sub
inc
cmp
cmp
mov
add
add
imul
in
xchg
xchg
cld
je
adc
cli
idivl
shrl
stc
cld
dec
aaa
mov
stos
into
inc
out
jns
mov
aam
sub
push
lahf
add
add
cli
test
hlt
and
out
inc
mov
arpl
daa
or
cmp
xchg
mov
xlat
roll
and
xchg
jne
mov
sbb
andb
fs
jle
mov
sub
cmp
pop
jo
jg
xchg
jbe
orb
xchg
arpl
mov
stc
test
dec
neg
fs
cmp
rolb
lret
push
call
sub
pushf
sbb
pop
mov
xchg
mov
loopne
pop
sub
add
mov
ret
cs
in
shl
loopne
jne
mov
mov
enter
aam
outsl
dec
stc
es
add
dec
inc
ljmp
stc
shl
jmp
mov
inc
inc
cltd
xor
pop
xchg
push
cmp
pop
imul
iret
mov
out
cltd
xchg
test
cmpsb
xor
push
movsl
int3
mov
sub
loopne
rorb
mov
dec
stos
xorl
out
subl
mov
cmp
mov
out
add
inc
shlb
sbbb
push
push
pop
test
and
jle
insl
cltd
sbb
test
and
cltd
out
mov
scas
je
es
mov
mov
lcall
push
cmp
arpl
int3
sbb
jbe
push
shrb
or
sti
xlat
test
push
outsb
int
adc
movsb
mov
in
cmpsb
stos
cmp
inc
mov
inc
fistl
int3
push
faddl
daa
les
add
outsb
xchg
xchg
out
test
jmp
lahf
push
mov
add
mov
mov
xor
repnz
xor
jg
movsl
into
mov
popa
subb
mov
test
and
in
jp
hlt
fisttpl
lds
xor
mov
xchg
sbb
mov
xor
jp
xor
ret
add
cld
loopne
xlat
es
shll
sub
sti
pop
pop
xor
pop
js
aam
hlt
insl
jmp
cmp
sti
int
or
pop
aam
push
iret
verw
xor
mov
cmpsl
push
fld
roll
and
xor
and
in
out
add
push
mov
fbld
js
sub
imul
push
or
pop
cmp
ss
int3
jb
pop
cmpsl
popa
mov
gs
and
aam
dec
xor
inc
jecxz
test
test
mov
mov
fsubrs
cmpsl
cmpsb
nop
jno
mov
loope
pop
lods
ret
shrb
movsl
mov
adc
in
lods
sub
xor
rolb
xor
jg
add
inc
imul
addl
gs
inc
lcall
sbb
xor
add
jmp
push
out
sar
cs
and
sub
inc
hlt
gs
xor
mov
add
mov
shll
mov
orb
int3
or
das
in
pop
jb
xor
mov
popf
ds
stos
adc
jp
sub
mov
jle
jae
call
lcall
dec
loope
inc
aam
push
jns
push
jle
jg
sbb
push
jno
jg
adc
fs
and
adc
xor
test
add
daa
popa
and
scas
jae
mov
xchg
sbb
dec
cwtl
mov
mov
sar
fldcw
adc
mov
out
insl
adc
lods
mov
test
and
mov
sahf
sbb
xchg
cltd
push
mov
pop
jg
int
push
frndint
insl
data16
sbb
jnp
pop
sbb
into
xchg
bnd
xchg
fs
jmp
xchg
inc
mov
sub
cmp
mov
stc
or
imul
dec
mov
pop
jb
popf
sbb
cmc
cmp
push
rcll
push
test
insl
call
sbb
jo
or
mov
hlt
and
jb
dec
cld
mov
mov
pushf
or
add
negl
xchg
movsl
or
outsl
shll
mov
inc
pop
stos
stc
lods
fdivs
enter
sbb
std
cwtl
xor
clc
xchg
scas
in
mov
lods
in
roll
in
sbb
fst
add
cli
aaa
mov
mov
sbb
sub
jae
repz
rcr
push
enter
fimuls
xchg
mov
sub
pop
lea
mov
test
in
sub
jmp
je,pn
mov
sti
cmpsb
and
pop
sbb
xchg
jmp
mov
fstp
jb
pop
pop
fucom
sbb
adc
fnstcw
push
pop
scas
pushf
sbb
mov
call
loop
cmp
inc
mov
cld
into
int3
popa
das
and
mov
pop
stos
pop
popf
in
fwait
adc
cmc
push
sbb
cwtl
pop
iret
push
adc
mov
in
and
dec
push
pop
data16
mov
sbb
push
mov
cmp
pop
sbb
sub
push
paddsw
mov
or
lahf
jnp
cmc
cli
pushf
mov
adc
sbbl
jbe
cs
mov
push
dec
mov
aas
sbb
mov
jle
lret
jge
lret
sub
xor
lret
add
add
adc
xor
inc
mov
popf
and
cltd
pop
sahf
test
jae
ret
push
or
or
rcrb
xchg
je
pop
out
fyl2xp1
sbb
xchg
imul
push
cmp
aas
mull
mov
icebp
sub
pop
fidivs
out
pop
pop
into
or
cmp
aad
rol
xor
hlt
pop
cmp
in
outsl
clc
push
imul
xlat
daa
pushf
pop
push
sbb
push
adc
daa
cmp
into
or
jle
enter
mov
mov
push
mov
sbb
stc
sub
popf
icebp
mov
and
mov
int3
shrb
sarb
test
jno
insl
push
hlt
pop
outsb
in
enter
lcall
iret
dec
aas
cld
mov
daa
mov
push
mov
push
cltd
jno
xchg
push
xorb
movsb
pop
push
fs
scas
lea
mov
or
and
sub
out
stos
addl
imul
fwait
cltd
jae
sbb
mov
ror
mov
sbb
mov
pop
jl
push
xchg
mov
pop
cwtl
iret
cmc
or
xchg
jb
xchg
test
lods
cmpsl
mov
dec
movsb
push
sbb
lret
sub
push
insb
fstpt
push
ficoml
xor
stc
adc
cmp
insl
or
or
jmp
dec
stos
cli
icebp
fisubrl
adc
pop
lcall
pop
add
and
rcl
adc
repz
aas
int3
inc
or
test
mov
dec
jmp
push
mov
inc
adcl
mov
enter
inc
push
pop
aaa
jecxz
adc
lea
and
jecxz
dec
lock
jg
shrb
test
push
nop
mov
adc
std
cwtl
loope
pop
cmp
outsl
mov
lods
sbb
pop
pop
rorb
loopne
lock
mov
rcl
fimull
insl
out
lods
and
adc
cli
sub
pop
jg
jl
push
add
and
stos
xor
loopne
cmp
sbb
lret
mov
mov
sbb
inc
sub
push
sbb
pop
jo
std
in
ret
cwtl
loop
sti
fstp
lods
test
pop
fwait
clc
repz
stc
aaa
jno
test
sbb
mov
loop
idivl
stos
cmp
adc
enter
mov
insb
push
or
jecxz
shll
lcall
scas
fildll
mov
mov
insb
mov
pop
push
xor
xchg
push
jmp
push
dec
sbb
adc
adc
xor
adc
xorb
mov
test
and
push
cmp
mov
pop
pop
mov
repnz
leave
test
mov
psubd
pop
addr16
dec
rorb
push
dec
popf
pop
cmp
add
movsl
enter
push
xchg
notb
xchg
xor
mov
jno
cs
push
pop
jmp
and
or
mov
push
test
mov
fists
jmp
and
js
adc
push
cltd
ret
add
mov
outsb
push
sub
mov
cld
daa
les
inc
adcb
repnz
insl
sbb
ja
pop
xchg
lret
test
ret
jg
xchg
insb
pop
lcall
rcll
adc
and
dec
or
mov
jnp
ficomps
sub
imul
xchg
inc
push
pop
ja
fcomp
fcompl
pop
hlt
outsl
jmp
push
mov
in
popa
daa
sbb
mov
sub
xchg
inc
insl
xchg
mov
jns
pop
popf
ficoms
xor
sub
lahf
loopne
inc
stc
jne
sub
jle
ret
lods
jbe
cwtl
mov
scas
aam
sub
mov
cmp
ret
and
fisubrl
xchg
mov
xor
and
sub
rcrb
adc
push
pop
in
push
mov
shll
outsl
jg
cwtl
or
sbb
je
mov
aad
lcall
sub
and
ja
repnz
or
iret
push
add
add
xchg
xchg
sbb
and
sbb
in
jp
jbe
xchg
fisttps
sub
sub
out
fists
leave
rorb
insl
aad
inc
pop
dec
sbb
mov
sub
push
cli
mov
push
or
mov
ret
or
mov
mov
inc
push
adc
push
pop
dec
sub
sbb
addr16
mov
pop
cmp
jns
loopne
jp
pushf
js
lea
push
cmc
mov
cltd
mov
andl
pop
mov
int
inc
mov
popa
or
cmp
jo
hlt
data16
into
dec
mov
xor
mov
adc
mov
jge
or
sahf
lock
ss
lahf
jb
lods
arpl
test
ds
lock
xchg
negb
adc
push
dec
cmpsb
shlb
stos
cmc
xchg
xchg
int3
jp
jge
outsb
jo
hlt
mov
dec
pop
test
jmp
push
dec
xchg
in
iret
out
xchg
sbb
fsts
fwait
add
js
es
insb
and
lock
imul
xor
popa
jns
lods
mov
jae
loope
cld
aaa
cli
xor
fs
mov
sahf
idivl
movsl
mov
inc
es
mov
out
sbb
cli
push
ljmp
int3
sbb
sub
mov
adc
mov
imul
lret
add
pusha
sbb
insb
clc
pop
adc
dec
shl
cmpb
cmpb
rcr
fistl
pop
into
adc
mov
test
cltd
mov
ds
negl
imul
jne
rorb
aad
xchg
add
insb
push
leave
cmp
jne
mov
pop
cli
sub
clc
jl
and
aas
add
or
adc
or
adc
lods
daa
in
mov
xlat
and
daa
jle
mov
ret
sbb
mov
adc
lcall
sub
into
leave
sti
sub
sbbb
xor
jge
sub
mov
repnz
dec
push
loopne
scas
jnp
inc
and
mov
fcomi
repz
add
mov
subl
je
mov
cld
ret
cmpsb
pop
mov
popa
imul
add
popa
inc
in
pop
fiadds
sbb
mov
inc
add
or
pop
pop
inc
mov
cltd
call
pop
and
and
mov
add
ljmp
or
popf
and
mov
mov
mov
push
sbb
lret
pushl
xlat
pop
arpl
xor
xchg
mov
push
lea
inc
xchg
mov
cmp
jne
jmp
jle
decb
test
hlt
jne
push
dec
hlt
xchg
mov
rclb
lahf
cmpb
fwait
dec
jnp
fstpl
inc
adc
or
movsl
popa
jne
dec
out
mov
das
mov
pusha
cld
jle
and
pop
xchg
inc
aaa
jnp
mov
cmp
dec
jbe
mov
sub
inc
cmp
sub
mov
mov
iret
cmp
cmp
je
ret
jb
jne
out
and
aam
mov
and
fbld
push
pop
adc
fldenv
fisttpl
mov
popa
mov
cmp
pop
push
mov
jle
in
ja
out
push
test
pop
push
dec
je
in
sub
lock
arpl
shrl
cmp
loop
cmp
add
xchg
adc
notl
lret
adc
test
add
or
cwtl
fcoms
pop
repz
cltd
iret
nop
mov
outsb
sub
add
mul
fs
inc
add
ds
loopne
push
fstpt
ss
popa
mov
fdivrs
int3
mov
cld
fists
adc
push
mov
lahf
mov
ficompl
jge
lods
push
xchg
mov
sub
sarl
sbb
rcrb
fs
dec
push
out
test
sub
scas
sbb
push
mov
lds
rclb
add
jbe
mov
inc
cmp
in
and
out
flds
mov
shll
imul
cwtl
xchg
mov
or
xor
mov
lahf
std
incb
xlat
popf
xlat
cmp
push
sbb
inc
pusha
pusha
jne
jg
divl
xchg
jnp
outsl
mov
push
cmp
and
cmp
sbb
imul
cld
int
jnp
mov
ror
xchg
mov
mov
out
sbb
push
aas
xor
lea
jg
lret
scas
or
add
call
sbb
rorb
mov
jg
push
roll
notl
mov
fmul
repz
fprem
push
xchg
mov
adc
adc
sahf
or
ss
pop
sbb
lret
lea
jae
inc
frstor
lea
mov
mov
fistpll
cli
jmp
lods
cmpsl
stos
pop
fwait
je
inc
or
jl
nop
adc
lahf
clc
xor
adc
add
pop
push
aad
call
int3
add
sub
push
dec
cmp
cltd
gs
loopne
mov
add
enter
stos
jae
and
sbbl
mov
test
dec
nop
enter
xchg
xchg
xor
adc
addl
dec
or
into
xchg
lret
push
aad
outsb
dec
adc
sahf
sahf
call
mov
push
jge
orb
out
xchg
test
mov
cwtl
or
outsb
add
loope
push
mov
xchg
les
mov
lods
aas
xchg
pop
adc
mov
subl
xchg
sub
inc
loop
push
stos
jbe
mov
nop
pop
add
push
cltd
test
enter
mov
jl
pop
mov
mov
cmpsb
leave
xchg
stc
xchg
jbe
or
inc
sub
pop
es
push
jns
imul
mov
cmpsb
leave
xchg
stc
xchg
jbe
or
inc
sub
pop
es
push
jns
imul
cmp
test
xchg
stc
xchg
jbe
or
inc
sub
pop
es
push
jns
imul
mov
cmpsb
leave
xchg
stc
xchg
jbe
mov
inc
shrl
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cs
hlt
xor
push
jg
aaa
gs
in
xchg
add
or
add
push
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
jb
ja
xchg
add
jbe
and
dec
add
add
add
add
push
add
add
add
push
and
dec
add
add
add
add
add
add
add
add
add
add
add
data16
add
cmp
sbb
out
mov
add
push
add
add
add
add
repz
add
add
out
ljmp
add
test
jb
pop
add
add
dec
add
add
loope
aas
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
mov
add
add
add
inc
add
add
add
add
mov
daa
add
add
jbe
add
add
add
add
add
add
pop
add
add
add
or
mov
filds
cmp
adc
and
bound
inc
add
add
add
add
sahf
add
inc
add
lcall
add
add
add
test
testb
add
add
add
loop
das
add
add
sahf
add
add
aas
add
mov
add
add
out
xchg
add
inc
add
add
cmpsl
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
popf
add
push
add
add
add
push
dec
add
ds
add
xor
fiadds
mov
add
sahf
add
add
test
pop
add
add
add
add
add
das
add
add
add
add
add
add
add
aas
add
add
add
add
xchg
add
add
add
add
add
add
add
sbb
pop
add
add
add
mov
lcall
add
add
add
add
add
add
and
or
data16
add
add
add
add
add
add
adc
add
stos
add
add
add
add
add
add
or
add
add
add
jns
rolb
add
add
add
test
scas
add
add
xor
aad
xchg
add
add
sbb
push
add
add
add
push
add
or
sahf
add
add
add
and
aad
icebp
add
xor
dec
add
cmp
mov
sahf
add
add
sub
add
cmp
xor
xor
mov
add
add
lea
sub
or
sahf
add
add
add
cmp
scas
add
add
add
add
add
add
sbb
outsb
insl
cmp
jmp
pop
adc
ret
cmp
jmp
icebp
lcall
lret
pop
mov
stos
push
dec
xchg
mov
xlat
sahf
cmp
dec
flds
shll
xchg
adc
jne
push
sbb
cmp
aaa
jmp
jecxz
inc
jnp
sbb
add
jo
pop
push
push
xchg
cmp
adc
jo
push
int3
and
xchg
loope
in
cmp
roll
sub
push
into
nop
ret
add
lea
scas
je
xchg
mov
add
mov
mov
jge
and
or
nop
aaa
xchg
jb
shlb
ficompl
lahf
in
add
testl
lods
sbb
daa
insl
aam
inc
movsb
mov
and
add
push
add
pop
out
imull
add
sahf
xor
xchg
arpl
pmulhw
movsl
movsl
and
mov
dec
sbb
aas
insb
and
nop
lds
stos
mov
dec
push
div
or
sub
insb
sub
lods
mov
cmpl
or
test
cmp
jmp
sbb
out
shr
jle
testl
mov
mov
lock
add
pop
push
and
push
pop
test
mov
jae
push
push
push
dec
jb
pop
pusha
mov
sbb
sbb
pushf
jnp
xchg
adc
push
pop
adc
and
mov
inc
cmc
fisubs
jmp
xchg
jb
orps
imul
or
xlat
pop
cltd
pop
jne
mov
mov
lret
dec
shlb
clc
mov
push
and
jb
add
inc
adcl
pop
pop
stc
sbb
inc
jns
mov
adc
bound
and
cmp
cwtl
js
push
outsl
push
xchg
push
les
lret
mov
insb
icebp
jmp
mov
fwait
scas
jecxz
pop
inc
sbb
les
je
mov
lods
lret
stc
xchg
jns
stc
xor
mov
rcr
mov
jo
dec
mov
ja
mov
xor
dec
mov
stc
push
and
jbe
sub
mov
adc
ret
mov
xor
push
popa
pop
fucomp
jmp
adc
mov
loope
sub
mov
xor
std
pop
push
dec
cld
sbb
je
sbb
or
fst
pushf
sbb
mov
popa
lcall
mov
repnz
xchg
movsb
cmp
sub
mov
loop
stc
into
xchg
rorb
cmp
mov
inc
mov
mov
sub
mov
mov
std
and
sbb
shl
loope
sahf
in
jbe
jl
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
