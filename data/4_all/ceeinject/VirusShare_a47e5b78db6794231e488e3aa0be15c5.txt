call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pushl
mov
test
xchg
pop
cli
pop
xchg
in
mov
cmpsl
pop
xchg
xor
bound
push
mov
mov
mov
xchg
pop
in
cmc
lds
inc
das
mov
popa
xchg
xlat
xchg
je
inc
xchg
push
mov
pop
lea
cld
ja
fstl
inc
and
repz
xchg
cmp
aad
mov
leave
js
push
in
mov
test
lea
fisubrs
int
int3
ret
adc
mov
pop
add
test
clc
and
or
in
pop
lret
xchg
sbb
flds
fcoms
int3
loopne
imul
int
daa
dec
lret
push
ljmp
sub
movsb
fistpl
pop
shlb
sub
insb
pop
lret
add
popf
sbb
xlat
dec
fcomp
xchg
loope
mov
xor
les
push
je
enter
inc
mov
sbb
pop
add
and
ret
cli
xchg
movsl
loop
and
aaa
mov
test
addb
ja
lds
inc
cmp
sub
xchg
insl
out
xlat
dec
scas
pop
shlb
loopne
icebp
outsb
sbbl
mov
shll
jnp
or
xor
loopne
xchg
jne
aas
fwait
add
iret
xor
call
xor
jle
je
jg
bound
push
aad
and
xchg
adc
out
xlat
push
movsl
aaa
mov
test
xchg
pop
in
cmc
lds
inc
and
xchg
adc
out
xlat
push
movsl
aaa
jbe
fsubl
jp
lea
sti
push
and
add
loop
mov
adc
mov
mov
mov
bound
and
inc
mov
mov
pop
subb
sbb
pop
js
aam
mov
lret
xchg
sub
mov
dec
sbb
decl
clc
cmp
movsb
adc
xchg
cmp
or
mov
xor
cld
sub
jns
inc
pop
inc
loope
fdivp
xchg
lea
pop
mov
ds
fbstp
in
mov
mov
int3
sbb
cmp
mov
cmp
and
push
lds
add
dec
jmp
sub
jecxz
lods
gs
jns
and
bound
aas
lahf
and
movsl
add
jns
mov
mov
pop
cmp
push
jle
in
sti
mov
push
sub
mov
adc
jg
inc
pop
inc
inc
icebp
mov
in
inc
or
stos
adc
and
inc
test
xchg
jae
xor
push
inc
and
std
and
test
dec
or
cwtl
jl
loope
aas
mov
stos
mov
lret
clc
sbb
clc
lret
je
mov
sbb
and
call
sub
mov
mov
sub
mov
jge
dec
leave
adc
jbe
xor
mov
sar
mov
rolb
xchg
test
sub
cs
fmull
jp
cwtl
pop
jmp
nop
in
mov
inc
bound
jb
test
aam
pop
jge
jnp
dec
jle
cld
es
jne
clc
sbb
cmp
inc
imul
clc
ds
gs
adc
cli
insb
jne
enter
mov
ljmp
fsubr
lods
cmp
nop
inc
mov
aam
xchg
or
and
cli
es
push
insl
xchg
mul
and
add
enter
cmpsl
mov
jb
test
js
or
pop
mov
adc
paddusb
lea
push
ss
test
jge
insl
lea
dec
add
es
movsb
ficompl
cli
pop
xor
cltd
cmp
dec
cld
xchg
xor
dec
inc
outsl
outsb
loope
cmp
mov
pusha
test
cli
repz
xor
imul
mov
js,pn
sbb
xchg
mov
jno
push
push
fcomp
cli
fstps
sbbb
cmpsl
mov
and
fdivrl
out
mov
xor
mov
incl
shl
adc
dec
icebp
shll
lods
mov
mov
roll
jmp
mov
sub
enter
xor
push
js
lods
lea
or
dec
js
add
out
jge
icebp
testl
sbb
aad
sub
cmc
loopne
hlt
outsl
sub
push
les
lock
push
ss
loop
mov
insb
decl
rorb
jae
dec
or
adc
xor
insb
cmp
out
shl
add
test
xlat
sbb
dec
loopne
mov
push
cld
pop
mov
or
sti
fucomp
jp
mov
push
jge
sbb
aam
mov
sbb
loop
add
fbld
push
icebp
adc
or
cltd
mov
movsb
adc
adc
les
adc
sbb
pop
sti
ret
fidivl
jecxz
jno
enter
movl
pop
mov
das
pop
mov
mov
sbb
out
jne
mov
push
cmp
xchg
scas
cmp
inc
sbb
or
popf
jns
xchg
subb
fdivrp
sub
pop
mov
js
ja
sti
ljmp
sbb
mov
mov
sub
nop
xor
cmp
sub
shll
mov
data16
cmp
jb
addr16
mov
in
mov
xor
mov
cmp
je
xchg
add
add
mov
mov
gs
divb
sbb
dec
repnz
cli
mov
push
jmp
and
mov
and
mov
xchg
or
out
fwait
popf
push
fisubrl
add
insb
gs
mov
lret
xor
xor
mov
cmpsb
loopne
pop
scas
inc
lds
ss
mov
arpl
jb
movntps
in
jp
bound
repz
js
repnz
cmp
mov
jne
jge
call
or
cltd
add
pop
test
lcall
cmp
shrl
inc
movsb
daa
insb
addl
or
out
push
or
cmpsl
flds
mov
and
cmp
mov
cmp
mov
mov
js
add
add
xchg
bound
jns
test
loope
dec
stos
pop
cwtl
sbb
jp
xor
adc
in
or
jns
xchg
nop
sbb
pop
dec
push
pop
sbb
mov
mov
movsb
sbb
sub
aas
fidivrl
pop
jle
jne
out
shl
test
ljmp
adc
xor
pop
std
cmp
ss
cmpsb
sub
mov
and
push
inc
dec
int3
fistps
int
sub
mov
cmp
jno
nop
xchg
lock
fisubrs
jmp
js
jge
or
pop
out
shl
scas
xchg
scas
mov
dec
sbb
mov
cmp
outsl
mov
cmp
rolb
pop
mov
shrl
or
out
push
inc
data16
xchg
fbld
mov
mov
aas
jnp
fmul
shrl
imul
divb
xchg
mov
out
jnp
rorb
cmp
iret
xchg
jge
incl
or
cmp
sar
jp
push
cmc
inc
divl
xchg
inc
into
lret
xlat
push
mov
mov
int
lods
sub
stos
lahf
sbb
add
add
out
mov
sbb
les
or
dec
cmp
imul
dec
adc
xchg
js
call
js
mov
iret
mov
lods
les
ss
pop
bound
aad
pop
jg
mov
rolb
lods
imul
shrb
loop
xor
in
out
and
or
jbe
xchg
sbbl
fs
stc
mov
fdivs
cmpsb
mov
inc
xor
clc
push
les
insb
add
push
int
pop
leave
popa
cmpsb
out
or
adc
push
in
dec
cmp
mov
pop
mov
push
inc
cmpsl
movsb
lret
sbb
or
popf
stos
loopne
out
ja
and
xchg
fwait
mov
ds
fdivl
repz
mov
dec
mov
fsts
cli
inc
fmul
xorb
mov
rcrl
jo
out
stc
or
cmp
pop
xchg
jecxz
hlt
mov
inc
fs
cmp
popf
adc
xor
add
lret
push
or
push
jb
jg
test
adc
insl
aam
cmc
clc
inc
adc
push
lahf
gs
aas
sub
add
bound
jb
push
lods
addr16
pop
fistpl
mov
sbb
push
mov
mov
fldenv
cli
mov
nop
movsl
sbb
dec
add
arpl
cld
lcall
xor
jno
cld
mov
or
push
inc
shl
push
test
mov
insb
pop
js
fidivs
out
fstpt
xor
out
xor
xchg
mov
stos
inc
cwtl
into
cmp
out
mov
cltd
cmp
not
jb
rcl
cmp
cmc
adc
addl
pop
outsl
jne
jmp
pushf
fbstp
pop
mov
in
addr16
in
out
cmc
out
xor
loopne
out
in
stos
dec
jl
test
repz
jl
jge
add
lahf
xor
rol
lret
or
mov
xchg
jmp
mov
daa
je
and
imul
dec
xlat
sar
dec
imul
out
cmp
daa
mov
addr16
aas
push
pop
dec
jns
scas
out
divl
scas
in
stc
dec
pop
in
push
jge
out
cmp
jnp
inc
sub
jge
pushl
inc
sub
sbb
out
ljmp
mov
insl
insb
mov
jmpw
jno
fcmovnu
in
jno
stc
adc
mov
add
aaa
or
fs
dec
or
shlb
add
xchg
inc
mov
pushf
movsb
cmp
xchg
sub
jmp
adc
icebp
std
mov
jl
inc
pop
xor
mov
loopne
mov
rorb
sub
es
mov
inc
lods
lds
xor
push
mov
int
in
inc
or
imul
fwait
add
stc
clc
xor
into
inc
jns
pop
cmp
pop
pop
div
push
bound
inc
push
jns
xchg
sbb
bound
sbb
cmp
xchg
stos
cmp
sub
aaa
and
in
adc
jmp
xchg
repz
das
rolb
push
push
xor
aas
ds
test
loopne
or
mov
jmp
std
mov
push
or
popf
jp
mov
inc
xchg
mov
dec
push
out
and
xor
push
dec
sub
jbe
mov
das
xlat
scas
pushf
inc
lcall
mov
negl
aad
in
add
mov
aam
fcompl
cmpsl
pushf
adc
inc
ds
dec
add
popf
fsubrl
mov
lods
dec
repz
push
adc
cmp
jmp
xlat
pop
pop
inc
repnz
push
mov
fistpl
cli
fwait
repz
into
adc
mov
outsb
mov
dec
mull
fnstenv
xchg
mov
shll
mov
pop
mov
cltd
cld
sldt
xor
loopne
sub
push
outsl
and
out
xchg
sub
mov
mov
sbb
mov
cmp
sti
loopne
loopne
aas
lock
imul
dec
stos
adc
fcmovne
repz
addr16
inc
pop
jg
insb
cmp
stc
mov
out
mov
pop
jge
adc
fmuls
ss
cld
xchg
andb
inc
ljmp
lret
adc
ror
lret
xlat
loop
pop
ret
lahf
mov
xlat
leave
sub
pop
and
lret
lods
sbb
jbe
aaa
jo
jl
mov
je
and
sahf
sbbb
je
ja
inc
outsb
lahf
jae
aam
adc
aad
out
mov
sub
pop
jg
sahf
sub
test
xor
lret
xor
js
lods
clc
pop
cmp
call
cmpsl
test
inc
pop
pop
enter
fs
mov
or
repz
mov
scas
loop
inc
fwait
dec
icebp
dec
jae
sub
jns
xor
loop
stos
or
xchg
cwtl
xchg
jecxz
xorps
sbb
push
push
stos
inc
push
cvtps2pi
push
dec
dec
jae
jno
xchg
mov
xlat
ficompl
stos
jp
sub
mov
aaa
jl
mov
cltd
jno
stc
nop
add
fs
test
inc
sub
mov
mov
sub
push
mov
mov
pop
nop
ret
xor
jo
sbb
cmpsb
lcall
idivb
imull
xlat
mov
je
push
mov
addr16
dec
mov
jnp
out
std
dec
jno
fs
inc
pop
xchg
mov
cmp
lret
ds
or
pop
notl
mov
xchg
std
stc
rcl
jo
sbb
rclb
je
cmp
out
or
xlat
sbb
or
mov
pop
push
in
fwait
adc
lods
xor
lretw
pop
scas
mov
cmp
xchg
idiv
mov
sub
dec
mov
jnp
cwtl
call
mov
mov
aam
rorb
mov
ds
adc
fdivs
fisubs
xorl
aas
sbb
xor
mov
mov
mov
ficoms
xchg
pop
arpl
inc
aas
sbb
popa
cltd
imul
lcall
stc
repz
aaa
in
xlat
xor
idivl
cmp
mov
scas
pop
les
daa
adc
loopne
mov
aam
adc
mov
inc
cmpsb
dec
pop
das
nop
hlt
cmp
push
in
add
into
movsb
add
jns
mov
aam
xor
inc
cmp
mov
dec
jmp
xor
xor
test
pop
xchg
sbb
push
iret
lret
push
mov
mov
call
dec
enter
jnp
push
imul
add
arpl
jbe
or
jp
icebp
pop
fisubrs
add
sti
imul
sub
sti
inc
lods
pop
fs
push
jbe
sub
or
rcll
pop
sub
mov
jmp
cld
xchg
cwtl
lea
ljmp
cmc
mov
and
inc
test
sbb
or
repz
rorl
pop
test
into
adc
pop
or
out
repnz
or
das
sbbb
sbb
xlat
lcall
imul
ret
cs
sbb
sub
inc
mov
lcall
cmp
mov
jge
jbe
lcall
stos
xchg
popa
lods
mov
dec
dec
or
pusha
push
movsl
in
or
dec
cmpsb
std
xor
sub
push
lods
mov
inc
cmpsl
sbb
jl
mov
sbb
movsl
cs
and
push
pusha
popf
fists
leave
rorl
or
add
fbstp
movsl
fmuls
cmp
adc
mov
xlat
orl
cmp
jecxz
or
mov
repnz
icebp
xchg
ja
ja
xchg
aas
xchg
sbb
repz
pop
lahf
xchg
gs
jle
xchg
jae
mov
inc
dec
lods
or
sbb
sbb
pop
add
scas
or
mov
fcmovbe
push
xorb
and
jne
cmp
add
rorl
cs
sub
sbb
inc
lds
xor
jnp
add
imul
cmpsb
mov
xchg
loope
push
inc
inc
jb
push
or
scas
sub
out
push
dec
and
push
jp
pop
outsb
mov
push
pushf
fildll
cwtl
adc
jge
mov
fidivs
or
fwait
icebp
clc
adc
cmp
scas
mov
cmp
jmp
adc
hlt
mov
rorb
cmp
ret
dec
imul
ljmp
and
cld
mov
int3
add
cli
push
push
int
mov
xchg
jno
sti
push
cmp
mov
xchg
mov
lret
fnstsw
mov
aaa
das
lcall
xchg
cmp
mov
dec
mov
push
loope
and
dec
mov
enter
loope
daa
xor
mov
cmc
sub
dec
xchg
pop
or
sti
xor
cmp
add
popf
adc
inc
dec
and
sub
iret
sub
movsl
daa
xchg
movl
loope
enter
push
cmp
dec
xor
dec
sti
dec
shll
and
aam
jmp
fcmovnbe
int3
into
sub
mov
into
pusha
adc
lahf
mov
lret
fwait
lret
je
mov
mov
nop
jle
lcall
adc
ljmp
stos
pop
fs
add
or
xchg
andl
xchg
out
rcl
push
aas
outsb
int
cmpsl
inc
inc
scas
pop
mov
repnz
push
cwtl
xchg
outsb
int3
fldl
xorb
xor
or
mov
lods
dec
imul
sbbb
in
test
xor
lods
push
out
sbb
xor
pop
pop
imul
cmp
outsl
or
call
xchg
inc
out
int
stos
adc
repz
mov
rorb
imul
jns,pt
sahf
addr16
loop
idivl
xor
or
es
inc
cmp
dec
push
add
aas
data16
aaa
mov
pop
fildl
dec
scas
fs
push
inc
jno
enter
hlt
pop
push
pop
lods
pop
mov
push
lretw
test
pop
das
sub
push
lcall
mov
fs
or
push
and
inc
movsb
add
loop,pt
aas
call
mov
sbb
rolb
sub
pop
cmpsb
jmp
mov
ret
andb
or
idiv
mov
ret
inc
mov
imul
add
inc
not
outsb
stos
scas
cs
pop
test
mov
dec
add
adc
ds
push
fldt
push
and
ret
movsb
mov
add
jmp
sbb
adc
adc
jecxz
xchg
stos
das
mov
or
inc
xor
aas
stos
sbb
sbb
push
mov
popf
pop
lods
xor
pop
shl
mov
and
cmpsb
cmp
push
sbb
jae
pusha
mov
divl
iret
inc
bound
ret
lods
push
jmp
dec
and
in
cmp
les
mov
pusha
sbb
adc
jmp
arpl
xchg
gs
push
repz
insl
or
call
repz
cmpsb
cmp
int
lahf
mov
xchg
mov
into
lcall
xchg
outsb
inc
in
fld
xchg
mov
imul
mov
in
mov
push
test
dec
or
out
sub
mov
mov
out
shll
arpl
imul
xchg
loop
int
adc
stos
daa
adc
mov
xchg
xchg
jae
push
loop
cwtl
shrb
imul
stc
lea
movsl
xchg
into
xor
cmc
hlt
sub
es
pop
sub
pop
and
xlat
jg
movsl
adc
and
rorb
mov
repz
mov
xor
clc
pop
inc
xchg
cmc
gs
xchg
loop
es
ret
push
pop
jo
popa
test
enter
push
and
hlt
push
push
mov
fcomi
cs
adc
jo
mov
test
das
push
sbb
pop
xor
js
imul
add
das
push
sub
pop
inc
mull
inc
repz
xor
add
xor
jne
je
sub
out
popf
outsl
repz
aas
push
enter
scas
out
adc
jmp
cmp
shrl
cmpsl
nop
adc
sbb
or
inc
pop
adc
ss
adc
fstpl
xchg
pop
sub
inc
test
mov
lahf
dec
lret
dec
dec
and
pushf
mov
pop
add
std
add
pushl
outsb
jne
cltd
subb
std
pop
fistpll
add
mov
imul
inc
dec
mov
enter
jl
sti
arpl
xor
stos
xchg
out
dec
stos
out
or
lret
mov
arpl
les
xchg
push
sub
mov
and
ret
sti
mov
nop
xchg
int3
loope
cs
aas
mov
out
js
adc
or
cmp
scas
les
jl
xor
into
mov
xor
jg
sbb
xchg
sbb
cli
stc
and
xor
add
push
out
lds
imul
jg
lret
sbb
adc
sbb
cmpsb
rol
pop
jge
push
cmc
jp
pop
pop
inc
insb
cmc
sbb
insl
push
add
dec
scas
add
jl
ds
in
cwtl
pop
mov
loopne
in
into
push
adc
mov
in
mov
scas
js
sbb
ret
adcl
das
cli
mov
fildl
imul
sub
jge
stos
sub
mov
int
or
out
clc
icebp
mov
and
xor
dec
pop
and
nop
and
sbb
test
inc
shrl
or
mov
icebp
ret
setne
test
sbb
dec
sub
or
pop
shlb
jmp
xlat
jno
push
pop
or
dec
es
push
adc
lods
push
scas
ss
push
jb
adc
dec
jo
lcall
dec
jecxz
jl
outsl
fidivrs
popf
outsl
ds
fisubrl
pop
pop
iret
mov
sbb
ds
fsts
fbld
push
sti
lcall
aaa
cltd
les
sbb
cmp
adc
scas
das
int3
lcall
insl
sub
das
int3
xchg
or
insl
add
nop
cmp
or
out
mov
mov
aas
ret
arpl
or
or
lcall
xchg
mov
sub
xchg
add
and
or
arpl
ljmp
arpl
fnstsw
mov
cmp
pop
pushf
popa
addr16
orb
cmpsl
fnstenv
add
mov
dec
push
xor
lret
mov
fmul
jmp
in
inc
std
fcompl
sub
incb
push
pop
xchg
fnstenv
add
xchg
clc
arpl
jno
mov
push
inc
push
mov
inc
adc
sbbl
mov
lret
icebp
sub
pop
clc
femms
rep
pop
out
lret
mov
or
nop
cmp
push
sbb
popf
push
push
mov
daa
xchg
pop
xchg
pop
in
cmc
lds
inc
and
xchg
adc
out
xlat
push
movsl
aaa
mov
test
xchg
pop
in
cmc
lds
inc
and
xchg
adc
out
xlat
push
movsl
aaa
mov
test
cmc
out
push
aad
and
xchg
adc
out
xlat
fs
xchg
aaa
andl
in
cmc
addr16
push
push
inc
fidivl
adc
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jne
gs
or
push
sbb
insl
pusha
jns
imul
popf
mov
movsl
adc
sub
inc
sbb
adc
lods
in
mov
ret
movsl
std
xchg
int
fnsave
gs
push
xchg
inc
imul
add
sahf
cmpsb
in
jmp
fnstsw
jmp
cmp
gs
pop
aaa
js
bound
pushf
aaa
es
inc
sbb
xor
lds
mov
js
negb
mov
mov
pop
jb
int
clc
mov
xchg
inc
jnp
lea
fs
push
int
imul
push
cmc
lods
lods
sub
add
sbb
xor
les
jmp
insl
shl
sub
pop
pop
jb
pushf
dec
clc
int
xchg
xor
sarb
jge
mov
jl
mov
in
sbb
lds
insl
cmp
nop
push
mov
pop
ret
movsl
int
and
mov
cmp
in
sub
test
sub
inc
sbb
adc
lods
in
aad
lds
xchg
aad
out
xor
and
enter
cmp
out
loope
mov
test
xchg
sarl
pop
jnp
jle
jno
aas
dec
das
adc
int3
out
xchg
filds
std
out
test
cmp
inc
jno
and
pop
cmc
lods
in
aad
lds
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
shrb
popa
repz
or
bound
xchg
or
adc
push
xchg
sbb
mov
push
movsl
adc
push
jb
movsb
sahf
jbe
ss
xor
mov
fs
lret
xchg
stos
xchg
lods
mov
aam
lahf
lods
cmpsb
lcall
pop
jg
dec
int
icebp
lret
jl
mov
inc
lret
jl
incl
ja
repz
add
into
mov
sbb
mov
sbb
cmp
mov
popf
mov
pop
jb
jb
scas
xor
cmpsb
ret
sbb
sbb
outsb
mov
jns
and
jg
enter
or
and
or
jp
pop
enter
movsl
mov
mov
adc
cli
push
ret
add
mov
bound
shl
add
xchg
xchg
cwtl
add
xorl
aam
add
push
sbb
fcomi
xor
data16
inc
pop
bound
jl
lods
jnp
loop
add
fs
push
mov
test
in
ja
aaa
xchg
adc
add
lods
aad
insl
cmp
and
inc
inc
pop
bextr
mov
sub
bswap
loop
dec
add
scas
sub
xchg
and
mov
sub
mov
rolb
das
cmp
sti
imul
lcall
sbb
push
icebp
outsl
pop
insl
adc
fdivr
or
imul
dec
push
xor
movsb
sbb
mov
popa
push
add
jbe
clc
xchg
xor
push
pushf
fwait
pop
out
mov
mov
push
lret
cmp
xorl
jbe
sub
lret
cmp
sbb
stos
cmpl
sahf
add
divb
cmpsb
iret
xchg
jne
aaa
sub
aam
or
les
pusha
pop
lcall
mov
out
dec
inc
mov
dec
mov
adc
in
dec
cmc
mov
push
outsl
jmp
ret
imul
or
sub
pop
fwait
lahf
cmc
loopne
mov
inc
mov
mov
test
cmpsb
pusha
inc
pmulhuw
stos
mov
pop
dec
into
pusha
xor
mov
insb
xor
dec
ret
and
sub
mov
and
cmp
test
lock
xchg
mov
scas
sbb
stos
mov
cli
dec
mov
xor
loop
fisubs
lods
js
push
data16
jnp
nop
cmp
pop
fnsave
popa
sub
pop
dec
and
outsl
std
sub
and
push
cmpsl
cmp
dec
gs
in
and
imul
sahf
push
lds
adc
jb
xor
repnz
out
faddl
pop
mov
addr16
and
out
out
mov
mov
int
pop
jne
int3
sub
fsubr
dec
lret
ret
mov
push
lods
mov
mov
xor
adc
and
inc
out
icebp
das
add
cld
leave
xchg
leavew
in
mov
mov
cmp
shrl
in
insb
push
pop
jge
xchg
das
sub
push
jae
jg
mov
ds
xchg
aaa
pop
mov
pop
mov
sub
notl
scas
xlat
jo
pop
arpl
inc
pop
push
int
inc
mov
cmp
and
int3
aas
xchg
xchg
xchg
xchg
pop
xor
in
mov
xchg
cmpsb
push
fcomip
testl
dec
push
jmp
jmp
push
movsl
adc
jne
sub
pop
dec
xchg
and
movsl
call
push
lret
jb
inc
les
xchg
mov
movsl
or
int
dec
dec
fstps
pop
dec
mov
bound
xchg
sti
xor
add
int
jp
in
add
mov
mov
dec
pop
jbe
xorl
pop
dec
pop
pusha
add
adc
and
and
pop
adc
cld
sub
nop
cmc
pop
int3
cmc
pslld
add
testl
sub
orl
lods
sub
mov
mov
push
inc
push
sbb
scas
call
outsl
in
mov
cwtl
inc
das
cs
lret
js
push
dec
stos
ret
pushf
add
mov
jg
imul
add
gs
jbe
lahf
stos
lock
imul
pop
and
mov
repz
icebp
test
idivl
iret
aaa
imul
out
outsb
ljmp
lret
jle
mov
pop
push
push
jp
mov
andl
dec
scas
adc
fstps
xor
out
and
and
mov
pop
push
stos
or
sub
cmp
in
xor
add
add
aam
outsl
push
mov
mov
sbb
mov
pop
push
rcrb
cmp
stos
push
stc
xchg
inc
sbb
test
test
je
pop
lds
imul
insl
pop
xchg
jo
iret
cs
xor
and
adc
fs
inc
shl
movsb
pop
mov
mov
sub
xchg
mov
mov
leave
fs
idivl
lods
lea
ja
mov
jmp
out
std
dec
lea
jecxz
fiadds
leave
cmpsb
dec
or
lcall
pusha
in
test
scas
cmpsb
movsl
add
andl
xchg
sbb
add
test
add
rorl
jae
lcall
mov
ja
pop
cs
popa
push
fcomps
mov
sbb
xchg
cmp
jne
push
cmp
xchg
es
push
jp
xorl
aad
lret
or
pop
xchg
in
cmpsl
out
lods
inc
xor
and
mov
mov
pop
pop
data16
hlt
jnp
add
into
or
cmp
int3
jnp
inc
int
and
cli
loopne
mov
pop
loopne
int3
inc
movsl
inc
out
cmp
sub
loop
addr16
lcall
cmpsb
jae
jmp
jnp
pop
inc
push
and
cmp
stc
or
stos
ds
in
jle
cmpsb
arpl
mov
and
aam
aad
adc
jne
fs
sub
sub
inc
adc
fwait
push
inc
lods
ret
or
xchg
xchg
out
imul
movsb
mov
add
je,pt
jno
ja
fildll
adc
pop
mov
sub
in
xlat
sub
aaa
pop
or
add
adc
test
push
jns
xor
es
out
shlb
jg
popf
cmp
sbbl
cltd
jg
insl
iret
fwait
notl
jecxz
js
insb
hlt
pop
test
and
dec
and
sbb
iret
push
sub
lock
stc
arpl
test
push
mov
cmp
shlb
rcrl
inc
scas
movsl
mov
ret
xor
sub
ret
add
outsl
mov
jne
xor
and
mov
rcrb
shrl
add
push
jns
mov
aam
sbb
xor
mov
test
lret
xchg
arpl
or
or
push
mov
fidivl
xchg
popf
loopne
or
mov
mov
inc
jae
cmpl
lret
pop
test
or
adc
insl
adc
mov
sbb
loope
insl
rcll
addl
in
aaa
add
js
jg
add
pop
xor
data16
outsl
pop
mov
xchg
iret
sbb
in
imul
fisubrl
in
xor
jne
inc
mov
int
xchg
inc
sub
loope
mov
adc
scas
xor
dec
cmp
mov
or
push
push
repz
fbstp
loop
in
mov
cmp
xor
fisubl
fildl
imul
pushf
call
sbb
inc
roll
cld
fisubrl
mov
adc
lods
lods
mov
enter
and
movsl
lock
lret
mov
scas
sub
push
jg
idivl
popa
out
pop
popf
and
popf
roll
inc
out
xor
sti
push
jge
aad
sub
movsl
or
lock
gs
filds
mov
insl
rclb
roll
sbb
mov
aad
pop
fidivs
and
frstor
sahf
dec
lds
mov
imul
sub
and
push
scas
std
shrb
add
mov
test
sub
shr
mov
aam
js
stc
je
inc
into
stos
stos
ret
out
xor
add
push
pop
pop
scas
sbb
insb
pop
inc
jge
or
dec
dec
fbld
loop
push
test
stos
loopne
arpl
pop
mov
out
out
inc
cwtl
iret
stos
aad
mov
xor
bound
adc
daa
leave
dec
fs
cmp
loope
pop
out
push
mov
push
push
clc
cmp
js
add
add
stc
fiadds
push
jecxz
out
repnz
icebp
xchg
ljmp
ss
in
ljmp
movsl
fs
jno
adc
je
stos
pop
repnz
sbb
mov
xchg
movsl
cwtl
movsb
mov
mov
xor
xchg
fbld
pop
iret
dec
lock
sahf
push
inc
int3
and
mov
jp
and
in
sbb
xchg
enter
rclb
jmp
std
xor
in
nop
push
sub
jns
sub
fs
sahf
fbld
jecxz
in
les
lret
dec
jle
pop
mov
pop
das
cmc
and
inc
jecxz
ljmp
lret
shrl
mov
sarb
out
inc
push
sbb
call
inc
jecxz
xor
push
push
lds
inc
cmp
sub
adc
mov
lret
mov
outsb
cmpb
fcomip
jle
dec
pushf
or
rcrl
xlat
sahf
or
or
ret
out
xor
cmpl
fidivl
jne
xor
xlat
add
add
or
and
sub
mov
mov
pushf
sub
mov
arpl
in
outsl
xchg
sub
xchg
push
stos
mov
orb
mov
jmp
aam
mov
sar
dec
or
cmp
int
pop
repnz
push
mov
ljmp
shrb
fdivs
enter
lret
icebp
ficoms
xchg
das
loopne
hlt
ljmp
lea
and
xor
or
out
cmpsl
lret
dec
lods
cltd
mov
xchg
jmp
dec
mov
sub
add
push
test
mov
adc
jle
jmp
and
lret
lds
jae
cmp
inc
jnp
dec
hlt
pop
push
dec
in
push
and
cmp
aam
push
in
push
push
pop
cmp
mov
jo
bound
add
and
pop
inc
push
fwait
je
add
mov
jmp
rolb
lds
fsts
je
push
xor
mov
insb
xor
daa
outsb
addr16
fwait
shll
stos
js
xor
lret
cmpsl
enter
fwait
mov
pop
jge
fsts
loop
popf
inc
and
adc
or
ja
imul
es
or
test
arpl
and
pusha
roll
mov
dec
or
pop
das
arpl
mov
pushf
add
sub
mov
cmpb
in
and
ljmp
popf
repnz
xchg
cmp
push
dec
cmpsb
xchg
mov
repnz
scas
cltd
and
enter
add
aam
enter
jmp
fnstenv
loope
dec
or
inc
test
add
rcl
jae
lahf
jno
pop
jns
icebp
das
cmpsb
ljmp
xchg
cltd
lea
stos
imul
dec
punpckhbw
popa
mov
or
ret
cltd
fsubrl
dec
xor
in
add
add
xor
movsb
jne
mov
xlat
lcall
scas
inc
repz
mov
push
add
dec
adc
cmp
int3
js
insb
icebp
ja
jle
and
jecxz
decl
add
xchg
test
enter
mov
ror
lret
mov
orl
and
test
mov
mov
movl
cmpsl
jne
insl
mov
add
xor
dec
pop
cs
xor
and
mov
loope
outsl
outsb
mov
mov
push
imul
mov
sub
dec
lcall
repnz
test
aaa
int3
xor
fmuls
xchg
mov
jg
addl
mov
stos
cld
push
cmc
lds
add
in
cmp
add
dec
adc
insb
dec
into
decb
dec
jmp
dec
push
pop
lahf
lea
mov
movsb
ficompl
sbb
xchg
test
jo
mov
lret
ret
jl
xchg
sbb
cmpsl
cmc
lds
adc
je
jbe
ret
fwait
lods
ljmp
pusha
sub
inc
push
sub
call
push
aam
int
cmp
call
test
lds
xchg
and
rcrl
jle
cmp
gs
aam
pop
add
stos
xor
lret
jnp
outsb
icebp
jbe
jmp
sbb
shlb
add
push
movhlps
xchg
cmp
ja
imul
push
mov
lock
mov
mov
jle
ja
out
push
xchg
and
or
gs
add
add
fcmovnbe
gs
icebp
push
and
into
pop
cmp
lret
int
xor
aad
cli
dec
push
das
add
std
cmp
pusha
xchg
std
add
aaa
mov
mov
pop
lods
inc
loope
jg
jmp
push
xor
lods
addr16
stos
mov
push
repz
icebp
pop
mov
mov
imul
inc
shll
lcall
mov
mov
sti
popa
push
jmp
sti
das
inc
inc
sub
dec
mov
cmp
int3
adc
cmp
cmp
xor
rclb
xchg
mov
ret
cmp
fcomp
sbb
int3
faddp
sub
or
pop
adc
mov
cmp
and
jns
dec
push
mov
inc
es
mov
sbb
mov
ret
add
xlat
es
icebp
xchg
push
mov
mov
push
xchg
lds
cwtl
mov
insl
adc
fimuls
xor
sub
add
test
aam
sbb
inc
sbb
add
in
scas
xor
push
mov
mov
adc
sbb
loopne
jl
jmp
sbb
mov
xor
adc
sub
lods
ss
test
das
pop
aas
lea
cmc
aad
insl
stc
dec
adc
and
scas
nop
and
or
bswap
lods
movsb
mov
push
inc
mov
lcall
and
dec
dec
jg
loope
xchg
push
lds
push
push
mov
push
sarl
push
shr
cmc
mov
push
xor
pop
outsl
mov
sbbl
push
pop
insl
adc
sbb
icebp
sub
fsubrl
jg
mov
pop
xor
out
fidivrl
cmpb
loop
int
and
sub
lret
orl
push
xchg
cmp
adc
mov
pop
jne
mov
jne
sbb
fs
ret
or
int3
test
inc
push
lahf
jecxz
divl
jne
mov
nop
cmp
adc
mov
xor
out
clc
mov
nop
cmp
jl
sbb
ret
fisttpll
sbb
pop
cmp
cmc
sbb
sar
pop
jmp
rolb
aad
pop
aad
andl
cmp
and
sub
dec
pop
xchg
cs
xchg
sbb
sub
movsb
jl
mov
xor
pushf
scas
iret
ss
add
sbb
lock
xchg
pop
dec
and
mov
xchg
lret
mov
repnz
pop
or
lea
pusha
mov
xor
add
lcall
sahf
imul
sbb
inc
cli
daa
sub
sub
roll
xchg
nop
popa
xor
jle
jmp
jne
mov
and
push
sar
rcrb
dec
cmp
adc
repz
ret
sbb
lods
jnp
rolb
adc
pop
jo
dec
jbe
sti
gs
ficomps
les
add
pop
push
lret
cmp
movb
xor
fadds
mul
cld
add
mov
push
add
repnz
js
inc
cmp
das
cmp
xlat
stos
mov
mov
push
iret
test
icebp
sub
push
lahf
push
pop
aas
push
mov
or
mov
xchg
or
dec
leave
scas
xchg
lods
mov
cltd
inc
jle
aaa
adc
xchg
dec
aam
enter
out
in
shr
je
data16
sub
pop
ret
xor
pushl
ja
jne
xchg
rclb
lods
push
push
sti
mov
fiaddl
jno
jne
mov
jge
adc
jns
fldt
and
lods
xchg
or
mov
mov
nop
cmp
fbstp
pop
and
and
dec
add
cs
xor
push
push
pmulhw
por
adcb
dec
rcl
push
bound
adc
ret
xor
jl
fsubrs
sub
sbb
mov
ret
stos
dec
insb
aad
pop
push
mov
xlat
dec
sbbb
dec
fcomp
jnp
adc
insb
dec
mov
and
inc
or
inc
test
cwtl
fwait
mov
add
sbb
mov
incb
dec
aaa
call
mov
jg
test
lret
rcll
push
push
adc
fwait
mov
clc
xchg
imul
jbe
mov
and
xchg
sbb
lods
lock
ret
sub
xchg
loope
pop
xor
sbb
xchg
push
lahf
mov
xlat
mov
lret
sbb
inc
fdivl
lods
sbb
mov
mulps
xchg
pop
or
pop
and
das
icebp
and
xor
sti
adc
pushf
js
idivb
shl
push
add
pop
aaa
xor
cwtl
push
mov
cmpsl
sbb
mov
dec
inc
je
stos
jle
inc
shll
sbb
mov
pushf
jmp
sbb
sub
mov
fldt
daa
mov
cmp
popf
int
les
push
shll
mov
fwait
orl
scas
ret
loop
fwait
mov
pop
lcall
in
add
jbe
inc
add
sbb
ljmp
push
repz
out
ljmp
int3
aad
cwtl
insb
pusha
into
mov
jnp
or
cmpsb
jge
in
mov
stos
xor
mov
push
roll
lcall
pop
popl
sub
test
leave
push
push
movsb
mov
lock
inc
jge
xor
rcll
push
mov
mov
ja
pop
stc
dec
cmpsb
outsb
dec
xchg
dec
das
mov
mov
dec
xchg
sbb
xchg
and
xchg
xor
xor
dec
adc
mov
rcll
dec
repnz
das
mov
inc
fs
cmpsb
push
xchg
icebp
rcl
jnp
cwtl
popa
ret
jb
loopne
int
push
adc
inc
fildll
daa
das
jecxz
push
sbb
mov
inc
sbb
pop
call
daa
mov
xchg
insb
mov
dec
es
out
dec
lcall
scas
mov
xchg
and
loop
mov
sbb
cmp
fcmovnu
cli
sti
mov
and
xor
pop
jno
mov
push
mov
decb
fcomp
add
in
mov
dec
mov
es
mov
fdivl
sub
stos
xor
jge
pop
xchg
sbb
lcall
jp
pop
sbb
je
sahf
out
mov
lcall
cmc
leave
mov
mov
pop
xor
cmp
sbb
adc
insl
push
jg
into
ss
imul
std
jnp
jno
jno
test
cmp
pop
arpl
jns
cmp
daa
ss
add
sbb
jae
jmp
and
dec
and
xchg
dec
mov
sahf
fistl
jnp
xchg
push
cmp
xchg
lret
testb
push
loopne
iret
leave
addr16
dec
out
and
in
in
add
adc
insb
xor
xchg
pop
dec
fwait
mull
pop
push
aam
lock
popa
mov
xor
sarb
xchg
inc
inc
sub
inc
pop
jb
call
decl
inc
or
push
iret
cmp
leave
aam
aaa
push
test
leave
xlat
testl
test
jns
mov
and
mov
in
xchg
cmpsl
inc
jp
cmp
pop
add
mov
in
outsb
pop
or
push
fistps
test
mov
jae
lcall
popf
push
inc
xchg
lcall
cmp
insl
test
adc
inc
sub
xchg
inc
shll
inc
and
mov
repz
adc
adc
aas
mov
jno
loope
gs
cmp
into
lds
jbe
mov
and
stc
pop
repz
push
cmp
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
xor
inc
sbb
dec
add
mov
mov
movsl
std
xchg
les
fsts
inc
pop
xor
int
popf
cmc
push
in
jg
vcmpss
movsl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jmp
push
xchg
inc
call
aaa
mov
out
xlat
push
arpl
push
xchg
push
xchg
inc
out
mulb
pop
jg
divl
out
xlat
push
data16
cmpsl
inc
xchg
push
xchg
add
inc
divb
mov
pop
negl
pusha
movsl
ja
inc
jecxz
lock
and
cs
inc
insl
pop
mov
ret
mov
push
popf
mov
add
fsubrs
or
ret
or
mov
ret
jecxz
out
xchg
fcmovnbe
divb
push
cmp
xchg
mov
call
cmpsl
mov
or
jecxz
into
inc
sti
jg
adc
xchg
or
jge
stc
xor
sbb
push
jmp
pop
push
popf
test
aaa
jns
push
lret
jne
cmpb
out
stos
stc
sub
cmpsl
push
xchg
and
repnz
jns
xor
imul
out
inc
pop
das
inc
fsubp
into
mov
das
push
shl
mov
hlt
add
mov
xchg
inc
out
mov
pop
outsb
pop
aam
movsb
out
xlat
or
push
mov
cmpsl
inc
xchg
xor
aam
shlb
push
clc
inc
mov
dec
aad
mov
inc
mov
push
mov
mov
hlt
sbb
xor
adc
cmpsb
adc
add
xor
pop
xchg
imul
ja
arpl
cmpsb
xor
pop
call
mulb
mulb
pop
pop
divl
out
xlat
push
data16
cmpsl
inc
xchg
push
xchg
push
xchg
inc
out
mulb
pop
pop
divl
out
xlat
push
data16
cmpsl
inc
xchg
push
xchg
mov
cltd
enter
inc
gs
xchg
leave
mov
sub
ss
xchg
into
push
roll
add
mov
push
stc
mov
dec
int3
xchg
daa
jb
inc
mov
mov
jns
arpl
pop
ret
push
ljmp
xchg
push
out
fstps
fidivs
sub
lcall
mov
out
cli
aaa
sbb
or
inc
es
push
out
mov
jae
cmp
mov
imul
jg
xor
std
aas
fisttps
add
icebp
xchg
add
insb
mov
dec
xor
inc
xor
dec
mov
pop
lods
xor
mov
jp
inc
sbb
test
mov
cmp
xchg
test
mov
call
ja
push
adc
sub
push
xor
lods
push
cmp
inc
lock
push
lods
cltd
xchg
sarb
push
mov
pop
and
pop
or
mov
jecxz
movl
and
aaa
iret
dec
enter
mov
adc
inc
pop
xchg
and
add
adc
sbb
adc
pop
out
xchg
fmulp
dec
or
rcll
pop
pop
jns
push
xchg
mov
pop
into
xchg
mov
mov
into
int
mov
lcall
shll
pop
sub
addl
jl
push
rclb
loopne
mov
dec
xchg
adc
inc
loopne
or
sbb
arpl
sub
leave
sbb
pop
lahf
mov
xchg
imul
dec
shrl
fwait
push
jp
adc
je
int3
mov
add
pop
mov
sub
and
std
sub
lret
xchg
nop
jae
sbb
dec
clc
rorb
aam
bound
out
int
sbb
rclb
insb
mov
rorb
add
pop
cmc
loop
dec
dec
push
push
addl
or
inc
bound
mov
dec
in
test
or
push
mov
rorb
sahf
loope
clc
outsl
lcall
push
mov
mov
in
sub
adc
dec
stos
xchg
add
push
lahf
lock
insb
sbb
add
pop
lods
cmpsl
sbb
pop
jle
inc
push
popf
sub
test
iret
std
inc
xorb
mov
andl
sbb
cmp
jle
lret
and
notb
hlt
jmp
inc
inc
daa
fidivs
loopne
int
sbbb
mov
sbb
je
frstor
dec
dec
std
xchg
xor
cmpsb
sbb
loop
or
cmp
popf
in
jl
jne
mov
mov
rcll
cmpsb
roll
outsb
jle
loop
push
fs
movsb
xchg
or
pop
xor
lcall
add
push
inc
xchg
add
in
mov
jg
fnsetpm(287
lret
ficompl
fsubs
xchg
xchg
test
ror
cmp
and
repnz
imul
fadd
xor
lods
or
jb
xor
repz
or
lock
dec
lods
dec
mov
daa
jmp
push
insb
fsubr
inc
pop
xchg
pop
jbe
decl
mov
xchg
cwtl
jae
iret
imul
jge
push
adc
test
fwait
mov
out
cld
gs
out
add
stc
sub
lretw
inc
add
xchg
popa
rcll
test
sub
fwait
cmp
sub
xor
mov
fsubrs
aaa
add
cmp
nop
sub
push
mov
lods
jnp
dec
xor
loope
adc
cmpsl
pop
cmc
add
popf
dec
add
inc
mov
mov
xor
xchg
dec
roll
aas
sub
insb
in
js
cmp
jno
ss
lret
movsb
inc
and
clc
adc
bound
push
push
sub
adc
imul
inc
mov
out
cld
imul
js
mov
and
cli
xor
mov
ds
lock
call
push
fistps
xorb
mov
cmc
pushf
adc
pop
mov
lock
push
jge
jo
inc
lcall
xchg
xor
jno
ret
popl
xor
adc
lret
stc
mov
push
daa
in
insb
xlat
mov
mov
rolb
xor
jnp
xchg
or
loop
outsl
imul
dec
pop
idivl
xor
ret
aas
imul
stos
outsb
aaa
dec
lahf
out
mov
and
jge
pushf
iret
xlat
pop
fs
enter
cld
test
add
and
je
addr16
cmp
out
clc
dec
sub
ja
loop
dec
sti
dec
cltd
xchg
lahf
sbb
hlt
es
int3
inc
or
icebp
stc
mov
sbb
lock
mov
mov
lods
bound
or
push
or
jmp
inc
pop
push
dec
pop
icebp
jae
dec
lods
loop
sbb
cmpsb
aaa
xchg
lods
dec
xchg
int3
sub
cs
movsb
ljmp
and
xchg
test
pop
out
sub
mov
mov
mov
roll
leave
xchg
and
pop
shll
or
and
push
loop
pop
cmpl
stos
sbbl
jmp
xchg
dec
pop
jne
mov
pushf
hlt
ss
pushf
adc
pop
shrb
xor
cltd
adc
sub
nop
or
dec
cmpsl
insb
or
cmp
jne
test
pop
mov
push
movsl
das
popa
outsb
icebp
dec
dec
cltd
gs
push
decb
jnp
movsb
in
pusha
inc
cmpsl
aas
sahf
mov
shl
mov
ja
or
out
jge
cwtl
andl
jge
ret
das
das
or
mov
cmp
xchg
loope
es
into
test
lret
mov
mov
movsb
subl
mov
cmp
cmp
mov
inc
jb
lods
aam
and
icebp
call
loope
lahf
adc
add
jnp
pop
jo
sbb
and
jmp
call
inc
lea
lods
fs
push
int
jle
xor
mov
rcll
cmp
xchg
pop
or
jl
cld
aaa
cwtl
out
lret
pop
push
js
sahf
bound
inc
jne
lret
enter
addr16
hlt
dec
loopne
add
mov
push
lods
dec
mov
sbb
aaa
mov
jo
cmp
cmp
repnz
jl
fisubs
add
sub
in
xchg
mov
lea
inc
sub
int3
in
mov
inc
mov
cmp
frstor
adc
add
push
push
insb
jnp
gs
push
sarb
mov
mov
scas
mov
jg
mov
xor
sbb
mov
sub
jo
pushf
fnstcw
jmp
mov
repnz
push
dec
pop
or
adc
or
adc
and
jp
inc
iret
add
xchg
imulb
xchg
push
cmp
inc
jmp
cs
je
call
jmp
cmp
out
iret
outsl
xchg
jge
mov
movb
and
loopne
cmpsl
dec
add
push
pop
aad
jl
add
outsb
mov
bound
cmp
sub
imulb
dec
cli
enter
push
ffree
sub
mov
fwait
aas
jo
cmp
nop
adc
daa
and
xchg
mov
out
aam
push
fxch
sbb
adc
mov
dec
xlat
sbb
push
cmp
out
sub
dec
xor
mov
mov
iret
cmp
mov
sub
scas
aaa
test
stos
mov
lods
call
push
bound
push
int
movsb
pop
xor
mov
and
mov
jnp
add
lock
jmp
sbb
mov
mov
pusha
and
outsl
ret
sub
push
ret
addb
cmp
inc
bound
pusha
add
push
mov
inc
inc
fcmovbe
sub
pop
out
test
add
push
mov
push
mov
mov
push
arpl
adc
daa
stos
adc
ret
pop
mov
mov
fistl
mov
sub
jb
scas
sahf
dec
imul
cmp
sub
scas
push
mov
xor
sub
inc
cmp
sbb
sub
lea
cs
sbb
out
cltd
imul
adc
lods
into
jle
pop
jbe
or
dec
sti
lret
jb
fistpl
pop
inc
mov
dec
out
sbb
mov
fsubs
jnp
and
push
xchg
cltd
testl
sbbb
adc
jns
mov
dec
xchg
sti
notl
dec
insl
enter
mov
in
repz
cmp
adc
pushf
stos
xchg
push
or
icebp
out
je
adc
cmpsl
pop
stos
test
jl
inc
mov
ret
cmc
xor
leave
int3
fucomip
ja
jae
cmc
fcoml
fldcw
adc
or
mov
inc
adc
les
pop
and
iret
cmp
inc
pusha
push
jo
arpl
xchg
inc
sbb
jne
cmc
idivl
cmp
cli
pop
mov
mov
mov
in
mov
push
ds
cmp
out
inc
scas
jecxz
mov
inc
inc
bnd
enter
cmc
cmp
stc
or
xchg
sbb
hlt
loope
sub
xor
cmp
fildll
data16
sti
xor
add
fnsave
icebp
popa
aaa
jp
popf
and
cmc
repz
sbb
mov
add
add
pop
inc
fisubrs
call
cmp
jno
lret
cli
pushf
sbb
xor
adc
pop
outsb
hlt
call
adc
out
es
rcrb
lods
les
lret
dec
mov
in
xchg
fs
in
clc
cmpsl
and
jl
cwtl
pushf
sub
sub
cmp
pop
fsubs
lahf
dec
fdiv
jge
in
rorb
mov
cld
jo
lock
das
andb
lock
xor
adc
jae
scas
bound
xchg
orb
ret
movsb
in
fisubs
cmp
cmp
into
mov
xor
repz
fistps
inc
in
aas
loopne
add
xor
insb
cld
aad
adc
xchg
pop
stos
xabort
adcb
sbb
rclb
jle
rcrl
dec
aad
jae
mov
mov
mov
ja
dec
mov
push
xchg
out
pop
jbe
cmp
mov
or
fdivrs
mov
jecxz
mov
frstor
push
push
ljmp
push
fsubrl
and
movsl
ror
and
sahf
adc
or
inc
push
mov
call
mov
cmc
lea
cmc
test
and
or
sub
ja
fdivs
enter
lods
mov
clc
je
sub
adc
or
add
push
inc
daa
push
stos
js
loopne
loop
cmp
xchg
cwtl
sbb
in
fst
mov
pop
inc
cs
xchg
into
sub
xor
adc
out
test
xor
jne
insl
sar
pop
adc
or
cmc
dec
mov
nop
pusha
sub
jmp
je
jg
jecxz
or
loopne
push
data16
sbb
fcmovnb
int3
mov
mov
lahf
push
test
into
repz
sub
shl
jnp
cmc
mov
xchg
test
mov
outsl
rol
xor
into
inc
aad
cmc
movsl
incb
inc
or
or
mov
ficoms
jp
sbb
test
jnp
arpl
fs
jo
sbb
test
fwait
or
or
outsb
daa
paddb
push
pop
inc
xor
pushf
jmp
int3
sbb
sub
mov
dec
jns
stos
leave
mov
sub
cmp
adc
popa
pop
and
sub
aaa
adc
rclb
and
add
jmp
jo
mov
xor
pop
sbb
pop
xchg
icebp
xchg
out
push
popf
add
push
xchg
pop
sub
popa
push
stos
push
jle
push
sbb
cmp
out
and
mov
out
sahf
test
sub
xlat
aad
or
loopne
ds
sbb
inc
pop
cwtl
or
xchg
jae
clc
leave
mov
xchg
pushf
sbb
push
jnp
xchg
xor
mov
movsb
mov
pop
and
pop
and
lods
jp
pushf
mov
js
add
aam
movsb
cs
inc
incb
xchg
sbb
clc
and
sub
jb
cmpl
out
inc
pop
cmp
add
js
mov
les
std
addr16
mov
sub
aaa
push
popa
sub
and
insb
inc
mov
lret
xchg
xor
xchg
loope
punpcklwd
jae
inc
les
sarl
addr16
dec
cmp
cmp
mov
xchg
jnp
je
cmpsb
mov
or
push
jmp
jl
std
dec
cwtl
mov
pop
inc
popf
jmp
in
jmp
xchg
inc
push
aam
xchg
ja
push
sub
xlat
lods
pop
add
mov
mov
mov
mov
mov
ds
test
mov
push
mov
add
dec
arpl
push
sahf
cmp
inc
push
jp
push
or
push
fwait
ljmp
fucom
mov
aad
daa
pop
and
mov
add
pop
add
mov
shl
sbb
mov
mov
dec
push
pusha
scas
lds
or
ficoms
insl
jnp
call
jnp
push
xchg
fstl
pop
xchg
push
add
aas
push
mov
fadds
push
push
mov
ret
mov
and
inc
repz
jge
lahf
add
mov
cwtl
push
pop
fisubrs
std
mov
dec
sbb
mov
and
and
pop
fisubrl
movsl
xorl
in
jno
ss
fcomps
aaa
mov
jo
adc
push
push
xor
xchg
std
int
shlb
faddl
mov
fnstcw
add
iret
add
pushf
jecxz
add
mov
or
lds
push
mov
fcomp
scas
rcll
les
fistl
mov
push
cwtl
mov
mov
jg
mov
dec
and
bound
xchg
pop
xor
cmpsb
pop
mov
jecxz
orl
mov
rcr
aas
push
loop
clc
mov
mov
mov
and
push
push
sbb
loope
lahf
and
repnz
dec
cs
dec
adcb
dec
adc
add
call
leave
aad
dec
lahf
mov
adc
xor
xor
test
pop
rolb
or
enter
cld
cwtl
mov
pop
addl
and
push
jg
cwtl
xchg
jmp
cs
add
pop
das
inc
mov
data16
pusha
jno
push
jecxz
out
push
int3
int
push
pushf
xor
dec
add
scas
ss
adc
fistpl
adc
divb
negl
fsubrl
ds
ret
aad
jmp
mov
xor
sub
sahf
xor
out
rorb
daa
out
in
leave
inc
insl
adc
adc
pop
mul
ret
pop
aaa
adc
push
inc
push
mov
xchg
rcr
add
sbb
jae
test
jmp
stos
xorl
push
mov
adc
outsl
mov
or
stos
aad
sub
out
mov
sub
aad
sbb
outsb
xchg
adc
cmp
aas
mov
or
mov
inc
out
inc
mov
out
or
gs
sub
ja
jge
loop
dec
inc
lock
xchg
inc
adc
lea
or
ret
pop
lock
cmp
jmp
push
mov
cmp
sbb
add
xor
sti
push
jecxz
lods
adc
or
mov
daa
or
in
loope
fistl
mov
test
cltd
xchg
push
push
imul
pop
xchg
sub
je
pop
in
add
mov
sarb
ret
xchg
incb
xor
mov
jb
out
xor
mov
inc
mov
sti
add
pop
cs
pushf
sbb
cmp
sbb
int3
pop
fs
repz
in
inc
push
push
call
add
cltd
sarb
mov
cmpb
fdivs
je
cmp
call
mov
es
jne
mov
add
lods
je
sbb
ret
leave
xor
jbe
or
repz
das
cmp
fstps
sub
pop
and
pushf
js
cmpsb
push
mov
cwtl
dec
jae
xchg
imul
xor
inc
mov
dec
xor
pop
jae
pop
mov
mov
inc
fsubr
or
out
dec
and
es
es
xchg
repnz
adcl
mov
jo
sub
andb
cmp
mov
and
fdivl
and
data16
std
mov
sbb
pushf
lods
xor
jnp
mov
pushf
fstpt
adc
mov
sbb
scas
popf
cmp
popa
repz
sub
dec
inc
pop
sub
loop
aaa
jae
movsb
mov
cmp
icebp
sub
cmp
inc
je
mov
test
mov
sbb
fisubl
xchg
dec
mov
es
popa
stos
inc
not
mov
pop
cmp
xor
ds
lock
dec
lods
cli
mov
call
mov
mov
cmpsb
call
cmc
pop
dec
lods
les
cwtl
into
out
inc
xor
mov
outsl
lds
call
xor
or
pop
lods
test
push
sahf
mov
xor
xchg
je
adc
add
push
aas
adc
cmc
xor
pusha
sub
mov
out
cmp
xorl
push
mov
sbb
sarb
adc
and
mov
adc
dec
add
cmp
inc
mov
lea
out
xor
addb
in
std
arpl
repz
test
mul
xor
fdivrl
stos
cmpsb
pushf
popf
into
add
sbb
add
xor
mov
cs
xchg
mov
aam
je
cmpsb
mov
xchg
in
and
loope
xlat
sub
daa
jmp
or
lret
shll
out
ja
and
sbb
adc
stos
mov
cmc
je
fbld
pushl
or
pop
movsb
xchg
xchg
stos
push
xchg
and
or
addb
int
xorl
scas
push
push
loope
movsb
rolb
mov
sbb
mov
jg
cli
lahf
inc
inc
outsl
cmp
inc
lods
das
mov
sbbl
xor
sar
in
dec
xchg
add
test
stos
cmp
jmp
shlb
dec
loopne
clc
mov
loopne
test
int3
out
test
loopne,pn
cs
or
pop
pop
lods
loope
fs
pop
popf
push
xor
ret
jb
aas
es
aam
loopne
push
and
hlt
push
and
lcall
xchg
dec
dec
imul
std
stc
sub
arpl
shlb
loop
or
cmc
sbb
fwait
sahf
test
or
into
mov
inc
lret
pop
mov
leave
inc
mov
cltd
push
cmc
imul
mov
and
nop
cltd
add
incb
les
pop
in
sub
push
dec
jns
xchg
movsb
add
xchg
sbb
jl
xor
add
arpl
mov
into
rorl
add
cmp
das
testl
or
sbb
mov
sub
jge
rcr
xlat
in
or
ja
xchg
dec
ss
mov
pusha
sbb
ret
and
movd
push
add
in
lock
roll
daa
addb
xorb
inc
mov
dec
daa
pop
scas
repnz
jns
xchg
ss
jnp
into
push
jle
aam
mov
dec
mov
shll
push
ret
cli
iret
insl
or
test
cltd
or
lret
jecxz
jmp
mov
cmpsl
adc
fwait
pop
enter
pop
jbe
adc
out
lret
mov
push
or
and
pusha
sub
les
pushf
mov
push
sbb
xor
jns
je
jge
cmp
mov
sbbb
sahf
nop
dec
insb
xchg
adc
aad
pop
push
into
cmp
mov
push
dec
ret
scas
mov
xor
popf
mov
leave
xor
imul
mov
pop
jb
test
ljmp
mov
xchg
jnp
pop
fcoml
ret
mulb
mov
leave
aaa
stc
ljmp
jmp
inc
push
add
shl
test
aaa
jmp
cmp
or
outsl
movsl
test
jp
sbb
cmpl
pop
dec
out
jns
std
add
aad
push
add
mov
fldt
mov
xor
stc
shrb
push
push
mov
aaa
mulb
pop
pop
divl
out
xlat
push
data16
cmpsl
inc
xchg
push
xchg
push
xchg
inc
out
mulb
pop
pop
divl
out
xlat
push
data16
cmpsl
inc
xchg
push
xchg
push
xchg
inc
out
repnz
pop
xlat
pop
and
ss
xlat
adc
data16
cmpsl
inc
xchg
xchg
push
mov
daa
pop
push
pop
es
mov
aas
pop
mov
popa
fisttps
xchg
clc
scas
fidivrl
pop
push
outsl
jg,pt
divps
dec
das
jle
outsb
iret
sahf
fisttps
ficomps
lcall
jg
rdtsc
push
dec
das
ds
outsb
iret
or
mov
push
ljmp
adc
insl
pop
popa
sbb
or
or
mov
lret
xchg
sti
sub
inc
inc
loop
xchg
js
andb
xor
adc
add
fistps
lods
repz
pop
xchg
push
cmpb
pop
pop
lea
outsb
jecxz
lahf
mov
test
mulb
loopne
icebp
xchg
dec
mov
cli
mov
lods
mov
clc
sahf
sub
clc
push
out
pusha
cmpsb
testb
pop
mov
adc
pop
pop
mov
xchg
mov
pushf
mov
push
add
jo
mov
out
dec
dec
push
push
loop
hlt
cs
or
aas
xchg
repz
daa
xor
scas
add
mov
sbb
rcll
call
sahf
fistpll
cmp
movsb
ficomps
outsb
dec
cwtl
pop
enter
data16
pop
mov
jle
add
std
mov
mov
aas
pop
cmp
dec
cmp
xor
dec
aas
dec
ud1
stos
iret
mov
mov
std
ljmp
pop
adc
dec
clc
push
jp
inc
pop
push
add
test
mov
mov
push
outsl
jg,pt
divps
dec
das
jle
outsb
iret
sahf
fisttps
ficomps
out
dec
push
pop
push
outsl
jg,pt
divps
dec
das
jle
outsb
iret
sahf
mov
sbbb
in
jmp
mov
pop
adc
ljmp
imul
lahf
pop
add
jecxz
pop
leave
or
cli
inc
xorl
jg
or
loop
cmp
fsubrs
dec
fildll
scas
sub
sub
push
mov
mov
mov
into
mov
and
in
lahf
or
add
dec
inc
psubsw
adc
movsb
data16
sbb
jb
add
xchg
daa
stos
sub
and
sar
add
hlt
daa
inc
inc
push
fists
int3
adc
call
imul
cmp
fstpt
add
jae
int
sbb
sub
ficoml
dec
loope
fsubrl
and
mov
daa
or
push
ja
cwtl
xchg
rcr
xchg
test
cltd
mov
add
adc
sub
ror
rclb
fdivl
inc
das
lock
out
jnp,pn
in
test
mov
fcmovnu
pop
outsl
push
cmpsb
push
or
or
dec
fildl
repnz
push
fucomi
mov
lea
ficoml
lahf
cmp
cmpsb
and
pusha
mov
push
xor
mov
mov
bound
call
clc
mov
icebp
mov
mov
jns
movsb
xchg
andb
add
clc
dec
pop
cli
lods
add
mov
in
add
popf
or
ret
imul
sbb
ret
mov
ljmp
les
jne
call
testb
and
mov
call
in
lahf
or
jns
rcll
jns
arpl
es
dec
out
cld
fdivs
shll
mov
xchg
outsl
jns
sahf
mov
sbb
cmpsl
xchg
ljmp
xor
lret
adc
mov
pop
or
add
addb
hlt
cmp
sub
loop
ljmp
cmpb
mov
test
outsb
mov
ret
clc
stc
pop
jg
lahf
and
add
inc
mov
pop
dec
lret
add
das
sub
cmp
jb
sti
sub
out
mov
lds
push
jno
jno
sbb
mov
std
xchg
mov
xor
sub
add
movsb
or
xchg
xor
shll
repz
ss
popf
xor
sub
mov
mov
fwait
pop
imul
mov
xchg
sbb
jecxz
hlt
jp
xchg
outsb
into
push
ss
loop
in
push
cwtl
scas
movb
sub
add
sbb
clc
pop
ss
rcl
push
clc
mov
test
popf
jg
pop
cmp
dec
ljmp
fadd
scas
sub
cmpb
jne
cltd
mov
out
inc
jp
xchg
dec
dec
and
into
xchg
stos
push
push
iret
jae
push
sbb
push
dec
lods
push
sbb
arpl
insl
xchg
int
loop
test
lahf
roll
ret
fs
int3
pop
lock
push
and
std
adc
lcall
pop
xor
out
and
add
es
xor
imul
adc
stc
or
xor
rolb
pushf
and
inc
mov
mov
pop
jnp
jo
scas
aas
addr16
cwtl
jl
push
mov
mov
or
out
lret
aaa
mov
mov
stos
pop
lods
push
inc
es
sbb
incl
lret
jmp
iret
loopne
sbb
mov
popa
inc
mov
lret
inc
jl
dec
pop
inc
xchg
and
stos
jl
shr
push
xor
into
ds
mov
mov
orb
sbb
inc
in
mov
pop
jle
cmpsl
pushf
xchg
insl
xchg
mov
xchg
lods
sbb
pushf
fst
pop
sub
xor
cltd
xlat
insl
xchg
rcrb
add
jo,pt
sub
in
pop
mov
orl
loop
jg
xchg
in
aad
or
inc
test
jnp
in
cld
lret
sbb
or
xor
or
cmp
mov
jg
jb
in
ss
dec
les
ss
fsubrl
fnstsw
adc
icebp
pushf
jb
xchg
fs
add
sub
leave
fadds
add
lea
pop
xchg
ret
or
sbbl
sbb
rorb
subl
push
in
shlb
xlat
in
shll
sahf
pop
fmuls
in
ss
dec
mov
outsl
add
lock
aas
xchg
imul
stos
xchg
subl
sub
sub
ja
add
ret
pusha
rclb
stc
mov
into
cmp
shrl
icebp
lret
fnsave
repz
lret
aaa
pop
push
mov
cli
xchg
dec
movsl
and
pop
jnp
faddl
pushf
sarl
pop
sub
cmpsb
push
lcall
ret
cli
push
pushf
jae
into
or
cwtl
icebp
xor
xchg
stos
test
xchg
iret
roll
out
pop
addr16
daa
xor
lock
sub
outsl
cmpsb
clc
xor
loopne
mov
push
pop
fstpl
cltd
notl
das
fwait
imul
lahf
cwtl
inc
pop
push
insb
int3
inc
jno
push
jns
lcall
pop
cltd
pop
mov
push
sub
sbb
out
mov
cmpsl
lock
pushf
xor
scas
mov
into
jl
jne
pop
mov
dec
imul
rorb
int3
leave
aam
into
jg
sahf
scas
mov
arpl
add
cs
xor
stos
mov
xchg
fnstcw
sbb
sub
les
idivl
xchg
pop
mov
xchg
push
cmpsl
loopne
int3
mov
add
aaa
push
shl
cmpb
add
sbbl
jae
test
mov
or
mov
arpl
into
sub
jmp
pop
or
cs
leave
in
sbb
add
adc
addr16
out
inc
fsubs
pop
fsubs
in
or
insl
xchg
fisttpll
jge
add
insl
fs
hlt
test
pop
ljmp
xchg
lea
scas
das
xchg
aaa
fidivrs
int3
cmp
call
repnz
test
cmpsb
inc
pop
pop
cbtw
das
pop
xor
out
repz
fnstenv
mov
cmp
add
xchg
sti
imul
sub
mov
ret
iret
cmp
lahf
cs
icebp
stos
lods
and
jne
or
jmp
loop
mov
int
jo
fadd
mov
rorl
push
hlt
jl
sub
push
cmp
xor
dec
int3
sar
mov
inc
dec
je
add
scas
fisttps
pushf
movb
inc
jecxz
push
xorl
mov
rorl
mov
jg
mov
sbb
ds
xor
ficomps
in
cmp
int
jge
test
rorb
lret
lcall
sub
gs
ljmp
cltd
push
mov
insl
pop
bound
sub
fdivl
ret
mov
fistl
jne
repz
jl
lret
nop
xchg
mov
dec
jno
fwait
mov
icebp
add
cmp
stc
pop
fimuls
aam
lods
imul
inc
sub
add
cmpb
cmp
xlat
cmc
sub
push
shr
stos
inc
inc
pop
inc
aaa
cltd
pop
stos
outsb
bound
sub
setbe
adcb
xchg
pop
ja
jae
sub
std
lret
cld
test
mov
ret
out
and
cmp
fwait
add
xor
adcl
shll
xchg
add
daa
push
loopne
cli
aas
inc
adc
xchg
mov
std
arpl
rcrl
and
aaa
daa
or
dec
scas
leave
and
jne
jb
clc
sahf
sbb
xchg
adc
les
sub
cld
mov
jg
push
dec
sub
js
aad
pop
fwait
int3
mov
insl
push
sub
dec
or
flds
out
clc
outsb
sub
add
clc
adc
fnstcw
xchg
mov
inc
add
les
mov
shll
testb
lahf
mov
js
xchg
sbb
ljmp
out
add
test
sbb
mov
mov
stos
adc
pop
leave
push
dec
stos
std
mov
sarb
loop
cwtl
inc
jmp
or
or
push
mov
nop
mov
xlat
es
mov
sbb
or
repnz
sub
cwtl
popf
pop
push
mov
lock
sbb
fcoml
adc
cmpb
mov
sar
mov
mov
xchg
imul
add
jns
cmp
insl
inc
mov
pop
notb
xchg
mov
int
mov
mov
das
test
jbe
arpl
add
xor
mov
addb
repnz
repnz
pop
sbb
adc
hlt
push
mov
pop
push
movsl
insb
dec
shll
out
fdivrl
pop
pop
add
nop
lock
cmp
cmpsb
push
call
das
repnz
pusha
push
std
ret
stos
cpuid
aaa
lea
xor
outsb
fcmovu
std
or
push
adc
xchg
and
push
jmp
dec
movl
dec
cli
mov
cmp
mov
call
daa
call
movsb
rorb
sbb
neg
fildll
jno
or
jne
dec
pop
pop
adc
mov
sbb
das
xor
xchg
jecxz
pushf
ret
jns
fldt
jl
pop
or
sti
cs
mov
call
ret
imul
test
or
in
enter
sarb
pop
test
in
adc
cs
je
sub
ret
mov
or
lock
int3
fnsave
jnp
daa
scas
adc
jp
push
mov
mov
scas
add
or
outsb
mov
pop
add
ret
jmp
imul
xchg
pop
test
repz
cltd
shlb
dec
icebp
jecxz
dec
cmpsb
push
dec
xor
sbb
rol
dec
dec
or
push
andl
adc
shl
fidivs
fidivs
push
lock
mov
addr16
add
insb
xchg
dec
negl
adc
jne
jmp
decb
mov
jne
jmp
xor
or
xchg
jae
pop
stos
lock
and
xchg
lret
pop
jno
mov
repz
mov
decl
xor
aam
sbb
cmp
sarb
jnp
lods
cmpsl
push
push
xlat
adc
mov
push
adc
scas
fdivl
or
outsb
push
cmp
xchg
dec
fs
sub
push
loop
data16
xchg
mov
shll
ss
out
addr16
push
inc
cwtl
test
push
fbstp
push
inc
inc
int3
sub
psubb
ret
mov
lcall
fdivs
std
repnz
data16
inc
sbb
jecxz
dec
shlb
adc
sahf
fiadds
sub
cld
call
dec
or
cmp
les
lahf
xchg
mov
mov
mov
pop
into
xchg
stos
cli
mov
outsb
cmp
cmp
aaa
rol
sub
inc
fists
daa
sub
pushf
jge
fidivrl
jne
test
jp
int3
loop
jno
ret
xchg
xlat
xor
imul
jmp
scas
sahf
mov
cmpsb
mov
js
dec
xor
lcall
popa
pop
dec
lods
lcall
inc
xor
testl
push
mov
xchg
pop
pop
add
pop
jl
scas
dec
pop
call
jo
inc
mov
lds
fnstenv
int
andl
pop
xchg
mov
pcmpgtw
repnz
fildl
xchg
push
ljmp
cmp
sti
cmp
pop
fisubs
gs
das
sub
push
cwtl
xor
push
test
lea
stos
data16
lock
mov
lods
aad
jle
push
adc
hlt
outsl
je
repz
popa
fisubs
rcrb
test
jmp
dec
and
lret
mov
insb
xor
ret
pop
enter
inc
scas
jns
imul
dec
adc
adc
lret
negl
xchg
jae
sub
and
jecxz
push
add
pushf
xchg
sbb
lret
sub
dec
mov
xchg
push
roll
ljmp
and
xor
outsb
xchg
jne
add
dec
sbb
xlat
push
xchg
sub
sbb
frstor
mov
xchg
push
cmp
jae
imull
or
addr16
push
push
int
sti
aad
xchg
and
pop
outsb
inc
pusha
xchg
sbb
arpl
push
push
inc
arpl
ffreep
xchg
rol
ljmp
jecxz
jge
hlt
imul
mov
repnz
sub
popa
push
cmp
out
cmp
sub
jl
mov
add
pop
iret
add
fwait
cmpsb
jge
cmp
mov
shrl
out
scas
nop
mov
fcomps
cmp
xchg
mov
jb
and
sbb
in
cltd
and
mov
add
mov
xchg
add
pop
stc
sbb
inc
daa
or
mov
call
sbb
out
nop
push
orb
mov
imull
out
push
pop
shl
and
sarb
call
sbb
scas
rol
fs
sub
test
cmp
test
js
jmp
pop
mov
fstpt
stc
xchg
adc
add
in
push
paddq
sbb
push
js
cmp
int3
push
ret
pusha
sub
gs
xchg
ret
outsl
pop
mov
xchg
adc
sub
mov
out
dec
in
leave
add
mov
push
lret
pop
test
mov
lahf
int
adc
adc
jne,pn
sub
mov
dec
sbbl
xchg
xor
fsubs
sub
fistl
xchg
adc
cmc
sbb
scas
or
pop
cmc
sub
lock
stos
inc
test
fnstenv
dec
out
xor
out
imull
adc
jg
aam
repnz
stc
sbb
dec
mov
adc
cmp
add
loope
fs
loope
push
jno
adc
dec
pop
and
sbb
push
fs
ss
aaa
adc
jmp
push
and
out
mov
cmp
mov
lcall
add
pop
push
iret
sbb
sbb
test
jg
lods
dec
mov
cmp
sub
inc
sbb
inc
rorl
mov
xchg
fcomps
aad
fstl
loope
les
popa
jp
in
setg
and
insb
fdivs
pusha
jno
movsl
or
mov
outsl
add
scas
sub
aam
or
out
lahf
test
cmp
jmp
mov
mov
jnp
scas
pop
sar
scas
xor
clc
xlat
sbb
fs
xchg
fs
mov
std
iret
jecxz
fld
lods
loop
jle
pop
jbe
hlt
or
fdivs
jne
ja
cld
adc
insl
add
fidivrl
pop
push
jge
fstl
add
les
ficompl
and
mov
in
cmpsl
jp
stos
mov
xor
adc
jne
mov
sbb
jmp
push
sub
ret
rorl
arpl
ret
rcr
outsb
clc
cmp
push
adc
adcl
inc
leave
push
cmc
stos
sub
jns
mov
jmp
xchg
loop
and
pop
xor
or
mov
ljmp
add
mov
lret
aaa
fbld
clc
sub
push
mov
dec
pop
xchg
push
cs
push
aad
jge
cmpsb
mov
push
cmp
out
sbb
into
mov
xchg
loopne
pop
add
shrl
movsl
cwtl
adc
out
adcl
mov
nop
xchg
subb
dec
out
dec
mov
mov
xlat
pop
or
out
fbstp
cmp
call
popa
inc
xchg
and
sub
add
sbb
ret
xchg
and
sbb
push
jle
and
adc
lret
lods
cli
insb
cmpsl
outsl
inc
insl
add
sti
int3
imul
pop
sub
xchg
mov
jg
ret
jns
sub
ja
jmp
movsb
mov
adc
in
mov
inc
dec
adc
dec
in
mov
mov
cmp
mov
mov
xchg
scas
push
cmp
fidivs
movsb
pop
mov
mov
dec
dec
xchg
int3
inc
aam
aaa
mov
push
or
ficomps
jb
loop
cmp
mov
pop
adc
pushf
push
leave
gs
in
mov
or
xor
popf
or
cmc
lea
and
outsb
cmp
loopne
sbb
and
pusha
dec
mov
sbb
out
xchg
popa
out
or
jle
test
fldcw
rolb
sub
push
or
inc
mov
ret
pusha
adc
mov
lea
sub
nop
addl
jge
mov
mov
je
dec
xor
xchg
mov
test
xor
push
into
lret
adc
sub
jecxz
cmp
addb
sahf
nop
daa
idivb
mov
sub
mov
or
fdivrs
jp
push
dec
mov
hlt
xor
mov
cmc
fldt
and
sbbb
in
mov
pop
jl,pt
and
sub
push
lock
mov
add
jno
adc
dec
mul
sahf
push
imul
in
and
push
inc
test
fimuls
adc
sbb
and
lahf
lods
popa
cmpsl
and
and
loopne
repnz
jmp
fprem
add
outsl
insb
ret
cwtl
push
push
mov
push
insb
cwtl
xor
orl
pop
mov
mov
sub
adc
and
or
and
xchg
bound
outsl
sahf
push
loopne
jnp
lea
inc
pop
cli
cwtl
pusha
insl
loopne
lods
shl
xorl
pop
pop
js
cmpsl
std
jnp
test
scas
fdivl
jno
out
push
and
ret
stos
fiadds
mov
inc
fldenv
jo
dec
adc
mov
aad
add
cmp
mov
fsubrl
push
hlt
inc
leave
or
mov
jbe
inc
sbb
das
inc
mov
or
sub
push
out
adc
sub
sbb
adc
xchg
sub
cmp
xor
mov
push
sahf
add
jb
sti
add
arpl
mov
dec
push
out
xchg
jns
xor
push
sbb
cli
aas
jnp
sbb
movsl
testl
push
outsl
xor
lods
mov
add
mov
sub
adc
cmp
loope
shl
test
push
in
je
nop
mov
sbb
fisttps
adc
lret
lea
sub
pop
sub
cltd
sub
adc
push
loop
fcmovnb
mov
adc
mov
insb
shll
sub
adc
mov
jbe
push
inc
outsl
fcoms
and
cmc
mov
popf
mov
and
loopne
sbb
adc
ds
out
add
lods
mov
imul
movsl
mov
xor
jbe
jge
push
mov
orl
mov
mov
dec
call
mov
ucomiss
sbb
arpl
xor
aam
movsb
clc
xchg
or
dec
insb
pop
pop
icebp
xchg
cli
adc
sarl
mov
fs
scas
insb
mov
cmp
sahf
pop
ud1
ss
sub
cltd
insb
scas
pop
jl
mov
lock
inc
fsubrs
add
cwtl
lcall
aad
sbb
or
lcall
pop
or
stc
sub
scas
andl
push
jb
inc
aam
nop
or
adcb
outsl
mov
gs
mov
pop
add
mov
sub
pop
pop
pop
rcrl
cld
pushf
jb
mov
inc
and
inc
push
cmp
in
mov
lret
push
mov
or
xlat
or
mov
clc
mov
dec
xor
shrl
leave
mov
test
frstor
adc
shll
xchg
lret
divl
imul
ficoms
cmp
xchg
outsl
xchg
lret
fwait
cmpl
lret
sub
add
mov
jb
aas
mov
mov
test
fidivl
and
pop
inc
test
mov
sub
sahf
inc
dec
cmp
mov
xchg
popf
aas
icebp
js
adc
mov
xchg
xlat
jo
ljmp
je
mov
xorb
lahf
lock
pop
or
inc
je
mov
adc
inc
ss
xor
ret
dec
mov
push
lret
in
adc
pop
mov
roll
pop
xchg
or
and
hlt
ljmp
jae
nop
data16
lret
mov
mov
add
xchg
fdivr
or
leave
cmpsl
mov
mov
les
push
xlat
or
sbb
cwtl
dec
in
xchg
adc
iret
mov
sar
scas
ficomps
out
dec
push
pop
push
outsl
jg,pt
divps
dec
das
jle
outsb
iret
sahf
fisttps
ficomps
out
dec
push
pop
push
outsl
jg,pt
divps
dec
das
jle
outsb
iret
sahf
ffreep
out
ljmp
scas
mov
push
outsl
jle,pt
divps
dec
cs
aas
outsb
iret
sahf
fisttps
ficomps
out
mov
mov
pop
js
xchg
mov
add
packssdw
jnp
pop
imul
and
test
mov
fwait
into
stos
out
mov
packssdw
jnp
or
dec
sub
or
lahf
fisttpl
dec
mov
mov
packssdw
jnp
or
dec
sub
outsl
lret
lahf
clc
lods
xchg
sti
rorl
aad
adc
aas
jg
insb
pop
dec
ret
mov
stos
sbb
jae
in
in
push
fidivrs
add
rcrb
aaa
push
test
aad
in
pop
jo
inc
add
je
lcall
rcpps
insb
in
push
call
mov
lahf
mov
mov
out
into
jb
and
pop
sbb
sub
sub
push
dec
scas
ja
popl
pop
jo
jns
sub
das
sub
mov
and
sbb
and
lcall
fs
xchg
mov
sbb
adc
les
lahf
sub
fcmovne
push
lahf
out
cmp
xchg
pop
packssdw
jnp
or
dec
sub
outsl
lret
lahf
fisttpl
mov
fwait
iret
stos
mov
jbe
jle
outsb
or
imul
lret
out
mov
fisttps
std
mov
jae
arpl
ja
dec
or
or
imul
fdivr
std
mov
into
mov
add
pop
push
inc
insl
sbb
jg
outsl
lret
lahf
fisttpl
mov
fwait
iret
stos
mov
packssdw
jnp
or
dec
sub
outsl
lret
lahf
fisttpl
mov
fwait
iret
stos
mov
daa
notb
call
shrb
mov
ret
mov
mov
jecxz
xchg
adc
dec
adc
test
cmp
divl
std
cmp
push
sbb
or
imul
push
xlat
addr16
mov
ret
mov
mov
aam
in
mov
loopne
scas
outsb
dec
pop
bound
test
ret
pop
pop
cmp
loop
jp
cmp
cmp
test
mov
jbe
cmp
cltd
fstps
jns
stos
mov
mov
rorb
adcb
xchg
cmp
jnp
jp
les
adcb
xor
outsb
xor
pop
scas
and
sbb
inc
sbb
sub
lods
xor
stos
int3
pop
sarb
xchg
xor
ret
mov
push
mov
mov
jp
test
push
and
in
dec
xchg
cmove
bound
lds
sub
in
xchg
add
inc
js
mov
aaa
or
insb
pop
xchg
test
arpl
in
ret
outsb
movsl
cmp
mov
in
mov
inc
enter
mov
dec
pop
xor
lret
imul
inc
test
fildl
ds
fs
lods
int3
js
and
or
jg
and
lret
dec
pop
jns
movsb
loopne
add
ja
inc
xchg
int3
xor
addb
xor
push
das
xor
push
pushf
mov
sbb
cmc
and
cwtl
iret
dec
das
push
out
sub
cmp
pop
sti
push
mov
push
cmp
push
mov
nop
push
fimuls
dec
xchg
fwait
mov
dec
les
xor
ss
xchg
or
adc
fwait
sub
test
xor
inc
add
jmp
out
mov
aam
xlat
out
addr16
mov
mov
and
hlt
jp
xchg
inc
lods
outsl
adc
imul
data16
mov
cmp
shlb
mov
push
shll
xor
and
aas
or
dec
lea
lods
out
lea
insl
stos
dec
and
addr16
scas
sub
mov
test
xor
adc
add
mov
out
imul
cmp
mov
bound
pop
mov
hlt
ljmp
leave
mov
aaa
xchg
mov
push
mov
lds
adc
inc
into
popf
dec
cwtl
or
pop
sahf
lret
lods
adc
push
cmc
in
ret
int3
jne,pt
push
mov
lods
clc
mov
outsb
imul
mov
xor
inc
push
dec
rcrb
stc
ljmp
xor
mov
jne
xor
ret
xor
idivb
mov
int
lret
xchg
iret
dec
inc
pop
loope
clc
int3
in
pop
lods
xchg
mov
lahf
dec
das
lcall
jns
adc
scas
xor
stos
dec
lock
pop
and
lock
mov
mov
inc
mov
call
mov
stc
icebp
mov
add
push
add
push
out
pop
pop
jecxz
imul
lea
loop
push
insb
icebp
addr16
add
imul
mov
add
sub
dec
pop
or
fcoml
mov
pop
pop
xchg
dec
sub
repz
pop
ret
push
ret
les
into
dec
lret
ret
xchg
imull
mov
mov
xchg
ss
mov
inc
xor
mov
repz
jle
or
nop
inc
fisubrs
xchg
jp
cmp
out
stos
push
nop
dec
cmpsb
jmp
cmc
mov
jbe
pop
push
xor
mov
adc
mov
dec
int3
mov
mov
inc
mov
sub
ret
jns
mov
repnz
mov
xor
dec
iret
fisubl
mov
int3
mov
insb
ds
cmpsl
mov
outsl
pop
rol
mov
inc
lea
xor
adc
add
mov
loop
ficoml
out
imul
dec
in
clc
push
js
jg
jo
fwait
sbb
and
dec
imul
cli
push
push
leave
dec
xor
test
dec
or
ja
ret
leave
push
dec
fimull
mov
dec
dec
lret
movsb
in
lock
fisubs
mov
fistps
add
in
jg
mov
mov
es
notb
lods
or
adc
ds
cmp
cmpsb
xchg
push
mov
sahf
mov
mov
xor
adc
inc
cld
or
fs
ret
rorl
repz
adc
jno
iret
repz
mov
xchg
in
mov
sub
inc
pop
and
ja
fmuls
mov
or
push
or
nop
adc
and
sbb
add
push
cs
mov
xor
cld
jb
iret
fwait
ds
jge
out
loope
movsl
mov
ds
sbb
imul
aaa
subb
jae
sbb
ds
fnop
push
ss
lods
jecxz
addl
or
jp
mov
dec
fisttpl
fldcw
popa
inc
xor
movsb
cmp
insb
loop
mov
int3
xchg
je
imul
pop
xchg
pop
xchg
sarl
xor
aaa
mov
movb
mov
or
lahf
and
les
or
xor
movsb
push
dec
sub
jns,pt
inc
pop
mov
in
jge
push
rol
push
mov
or
cmp
test
xchg
sbb
shl
push
out
aad
sub
jne
and
ret
xchg
test
xlat
in
rol
add
repnz
mov
scas
out
ret
sub
jmp
sahf
sub
repnz
adcb
add
pop
sti
jge
cltd
lcall
sbb
cli
pop
add
jb
pop
xchg
in
add
movsl
pop
ss
mov
jne
das
ljmp
inc
fsubp
or
std
jecxz
cmc
or
inc
fs
stos
pop
sbbl
sbb
sbb
mov
hlt
js
xchg
imul
test
push
pop
aaa
push
aad
loope
add
and
mov
pusha
cmc
cmp
ja
cmp
xor
lods
push
dec
inc
or
xor
push
mov
xor
sub
add
push
incb
mov
ljmp
scas
mov
push
mov
push
and
or
mov
in
loopne
mov
cmp
mov
or
fnsave
scas
push
lcall
mov
jg
ret
xchg
repz
scas
ljmp
cld
icebp
and
xor
loop
cli
jl
gs
inc
popl
dec
mov
shlb
mov
pop
movzbl
pushf
cwtl
rcrl
dec
fimuls
inc
jp
sar
subb
loop
ljmp
scas
stos
test
mov
adc
int3
bound
out
jb
xchg
and
imul
sub
sbb
negl
repnz
int3
imul
clc
in
jp
femms
icebp
pop
sub
ret
into
cld
sub
ret
cmp
push
jb
in
mov
es
scas
inc
call
test
shlb
inc
pushf
stc
fdivs
add
testb
mov
pusha
push
pop
xchg
lods
cmpl
jne
aaa
out
in
lods
and
inc
call
pop
into
out
cmp
iret
push
dec
stos
movsl
ja
and
inc
movsb
sub
in
mov
stos
lahf
xchg
fisubl
test
dec
popa
dec
xlat
aad
and
dec
xchg
push
or
push
movsl
subl
or
hlt
lock
inc
bt
xchg
inc
inc
testb
arpl
jo
mov
or
push
jae
call
in
push
sub
jnp
adc
mov
clc
dec
or
pop
jle
loope
scas
sub
adc
test
sahf
stos
andb
xor
inc
mov
mov
icebp
call
fs
dec
and
adc
jb
jecxz
push
or
add
sarl
adc
mov
insl
stc
aad
cmpsl
adc
je
xlat
mov
adc
jo
imul
cmpsl
or
mov
cmpsl
aaa
add
or
aaa
dec
sub
or
aad
jg
xor
or
inc
call
xchg
and
cmp
outsb
xchg
pop
imul
popa
dec
mov
popf
inc
and
ret
or
daa
cmp
in
outsl
and
pop
sbb
pop
jmp
ja
fdivs
xor
outsb
adc
pop
inc
and
xchg
mov
adc
mov
movsb
insl
adc
je
push
div
xor
push
xor
push
lock
jp
mov
push
aad
inc
or
cmp
scas
mov
push
call
paddsb
aad
cmpsb
xor
or
pop
dec
adc
xlat
xchg
out
aas
fldcw
xor
dec
pop
adc
or
add
and
pusha
sbb
cmp
add
or
jmp
leave
push
in
push
aaa
and
xorl
bound
rol
xor
jmp
add
cmpb
popf
in
push
xor
outsl
popf
pop
in
sbb
jecxz
jg
aaa
sub
test
sbb
cltd
dec
lret
nop
lock
cltd
add
std
dec
jg
stos
add
fdivr
pusha
int3
je
jmp
into
mov
pop
fcoml
push
dec
int3
sub
cmpsl
icebp
into
push
ret
lcall
int3
and
addr16
dec
lret
push
or
insl
mov
xchg
lret
call
ljmp
mov
jp
cmp
aam
or
mov
add
dec
push
xchg
std
std
mov
iret
cs
loope
mov
sti
cmpb
es
sub
cli
pop
xchg
sbb
cli
or
mov
out
out
jae,pn
or
mov
inc
adc
cltd
add
sbb
or
mov
lahf
sub
mov
adc
pop
sub
xchg
inc
dec
lods
mov
test
rcrb
cwtl
js
ja
inc
rclb
aaa
mov
icebp
cld
jmp
add
fldlg2
add
fistpl
or
lret
and
xor
adc
sahf
leave
daa
imul
div
dec
mov
loope
loopne
adc
mov
and
inc
sahf
xlat
jbe
fstpl
loopne
inc
jmp
pop
xchg
sbb
pushf
sub
sbb
rcrb
add
cmp
jno
nop
test
inc
ss
fsub
xorb
sbb
push
add
jmp
push
mov
pop
mov
jle
in
shr
adc
loop
or
dec
out
jnp
xchg
mov
clc
out
fadd
leave
repnz
dec
pop
gs
inc
dec
jo
push
or
loopne
test
push
aaa
pop
xchg
jg
decl
inc
pop
jne
in
scas
adc
divb
or
pop
cmp
icebp
mov
mov
mov
int
jb
xor
out
and
scas
inc
jb
or
adc
imul
pop
inc
xchg
xor
jge
loop
dec
jp
js
jle
in
pop
mov
sub
fs
dec
pop
ja
sbb
nop
jge
ret
sbb
outsl
pushf
push
mov
xchg
les
push
xchg
les
inc
cmp
faddl
outsl
lock
push
scas
mov
inc
add
and
push
imul
stos
mov
inc
jl
in
push
mov
cmc
mov
cmp
shlb
or
mov
pusha
xor
mov
sbb
mov
imul
push
jmp
jle
push
std
scas
std
inc
lods
and
pop
jae
test
iret
das
mov
hlt
or
sbb
call
jg
ds
lock
incl
je
test
or
inc
dec
add
push
pop
inc
je
pop
and
dec
in
inc
int3
notb
xchg
mov
pop
inc
xchg
add
cmp
lock
data16
pop
pop
sbb
sbbl
andb
cmp
sbb
jae
test
and
nop
js
test
xchg
mov
jb
cwtl
push
shlb
or
xchg
shlb
or
jg
int3
dec
push
add
adc
jae
add
decl
sub
sub
aam
inc
dec
cmp
mov
pop
std
jmp
insl
stc
fwait
xor
stc
das
adc
andb
inc
xor
pop
xor
push
sub
dec
lods
cmp
dec
jns
dec
sub
add
mov
out
and
sub
xchg
ret
mov
int3
sbb
pop
pop
push
jbe
dec
jo
xor
fbld
jo
nop
adc
jbe
pop
movsl
and
rolb
lock
aad
sub
or
test
out
jmp
and
and
cltd
add
int3
add
dec
daa
mov
das
pushl
stos
and
addr16
jle
aam
je
pop
out
inc
dec
pmuludq
jmp
xchg
xchg
test
mov
sbb
repnz
sub
scas
stos
pop
mov
pop
pop
push
add
mov
mov
inc
dec
lods
js
test
adc
or
iret
xor
push
cmp
scas
sbbl
xchg
inc
fisubs
insb
push
push
xor
cmp
dec
xor
pop
inc
push
lds
pop
hlt
sub
and
inc
mov
push
insl
test
testb
cmpsl
adc
lcall
add
mov
mov
fcmovnu
movsb
mov
mov
add
shrb
idivl
xchg
mov
jl
cltd
add
insb
jb
xor
hlt
lar
cmp
f2xm1
mov
cld
and
xor
push
lahf
movsb
cld
push
sbb
push
inc
movsl
push
in
cli
gs
gs
flds
movl
js
mov
xchg
jb
sub
movsl
or
jno
shlb
cmp
mov
mov
cs
fistl
jg
xchg
mov
jl
sub
arpl
pop
mov
xor
sbb
xchg
lcall
arpl
xor
jne
cmp
jmp
cmp
int3
push
xor
add
cmp
pop
or
mov
xchg
jg
pop
sub
movups
hlt
out
popf
in
jecxz
jns
pop
xchg
xor
add
je
das
dec
in
cmp
pop
popl
out
aaa
mov
in
mov
in
aad
xor
fldln2
mov
repnz
and
sub
mov
pop
push
hlt
ja
push
xchg
cmp
movb
jae
sti
icebp
int3
add
fdivr
stos
jb
fstl
outsb
mov
ret
jmp
or
orl
int
cmp
inc
stc
bound
jo
push
or
movsl
gs
mov
stos
xchg
shll
shll
push
sti
mov
inc
jmp
dec
addr16
jne
adc
imul
or
mov
inc
js
adc
sub
push
imul
pop
pop
push
subb
jmp
and
xor
mov
xchg
testb
js
xchg
out
cmpsb
imul
addl
push
out
leave
les
cmp
pop
xchg
dec
lcall
outsl
sub
out
dec
inc
sbb
pop
lahf
dec
jg
rcrl
daa
sti
xchg
cmp
fwait
lcall
pop
push
cmp
mov
loopne
fwait
mov
aad
sarb
fs
add
add
xchg
sbb
xchg
dec
adc
dec
jmp
dec
in
dec
stos
repz
into
cmp
mov
lea
les
cltd
add
push
lods
mov
int3
fadds
mov
inc
push
stc
mov
xchg
lods
mov
call
in
cmp
bound
xchg
sub
xor
xchg
lods
sbb
push
adc
dec
cld
jl
popa
std
int3
add
xor
ficoml
andl
dec
mov
dec
inc
xchg
out
sub
inc
xor
cmp
add
mov
inc
rclb
int
insb
jne
pop
nop
mov
or
mov
int
add
lret
add
pop
mov
movsl
sti
xchg
iret
dec
int
push
aad
into
mov
movb
out
pop
add
sbb
jnp
xlat
je
gs
push
mov
adc
mov
dec
loope
in
or
es
mov
mov
inc
inc
inc
xorl
enter
psadbw
fadds
rol
mov
lock
sub
cmp
dec
add
pop
rol
sub
pop
cmp
sbb
push
push
mov
dec
pop
pop
movsb
hlt
inc
lock
in
pop
mov
idivb
pop
cmp
pop
add
mov
iret
clc
or
iret
outsb
sbb
scas
mov
jnp
imul
scas
dec
mov
sbb
test
out
or
scas
lds
scas
ljmp
sbb
imul
lcall
mov
and
in
add
adc
pop
test
dec
and
and
data16
xchg
shlb
sub
or
fsubr
rclb
rclb
lods
ficompl
mov
cmpl
push
cmp
xchg
lahf
xor
mov
imul
aad
icebp
dec
pop
xorl
dec
js
das
and
and
jl
sbb
jnp
sub
mov
shll
sbb
sub
les
sub
rolb
sbb
adc
sbb
lret
dec
xchg
mov
jle
mov
adc
pop
sbbb
dec
push
cmc
pop
daa
mov
fisubs
sar
cli
and
sub
mov
sti
xchg
pusha
iret
adc
fs
aam
pop
and
cmc
addr16
xchg
lock
push
xchg
pop
add
or
sub
shr
mov
loope
adc
idivb
ss
mov
push
out
in
aam
cwtl
mov
aad
outsl
lcall
dec
sub
and
jecxz
insb
test
mov
jle
movsb
and
xchg
je
outsb
sbb
cmp
or
fsubp
imul
dec
testb
push
jmp
xchg
pop
clc
push
addb
pusha
inc
jle
cld
xchg
jmp
ret
sbb
aad
or
fdivr
sti
icebp
clc
test
aaa
pop
out
push
mov
mov
push
add
adc
mov
shll
push
xchg
pop
addr16
add
loopne
pop
mov
xor
dec
cwtl
push
mov
aad
dec
mov
add
js
imul
orl
adc
icebp
mov
or
xchg
out
sbb
cmc
pop
add
xchg
int3
mov
inc
out
lea
pusha
xchg
fwait
enter
or
sbb
jge
xchg
arpl
fs
mov
cmp
add
add
pop
jnp
movsb
enter
xchg
jp
mov
inc
addr16
arpl
cmp
pop
cmp
stos
pop
sub
xchg
mov
push
sub
jns
outsb
das
test
fdivs
push
or
mov
inc
or
mov
sub
lret
jnp
or
out
pop
repz
test
inc
inc
cltd
int3
sub
mov
push
lahf
or
jl
xchg
mov
cmp
mov
mov
and
fisttpll
pop
clc
add
dec
dec
out
loopne
arpl
and
mov
call
and
or
ljmp
frstor
or
fs
push
scas
stos
mov
lea
fidivs
shll
push
or
xor
cltd
lahf
add
and
push
adc
or
cmp
push
fldt
pop
jne
sub
mov
ja
into
ss
dec
std
mov
dec
shlb
cmp
out
fbld
pop
rol
xor
jmp
cmp
cwtl
push
or
xor
mov
mov
push
mov
and
bound
rcrl
outsb
in
xor
cli
lcall
lods
fnstcw
jge
mov
push
in
mov
mov
std
ret
xor
mov
add
arpl
or
stos
repnz
mov
inc
xorb
insb
rcl
sbb
xor
inc
adc
rclb
fisubs
rcll
adc
or
cmp
loop
rclb
rcrb
je
or
outsb
and
insl
cmp
sbb
jle
ja
ja
pop
popa
inc
xlat
in
stc
mov
imul
out
mov
cld
xchg
sbb
cs
cltd
pop
mov
inc
mov
dec
cmp
cmc
cmp
jnp
idiv
jl
pop
movsb
iret
jbe
xor
push
xor
insl
sbb
popf
dec
fcoms
leave
cmp
sub
popa
std
push
ja
pop
jns
pop
sub
or
rcrl
js
call
aaa
lret
dec
es
sbb
rorl
cmpsl
daa
in
xorb
fmull
or
push
mov
popa
adc
cmp
in
mov
sub
int
lea
push
push
decb
dec
incl
fsubr
jb
sbb
addl
iret
inc
gs
push
fiaddl
sub
push
xor
out
push
sti
mov
dec
jnp
mov
andl
push
jnp
or
dec
sub
outsl
lret
lahf
fisttpl
mov
fwait
iret
stos
mov
packssdw
jnp
or
dec
sub
outsl
lret
lahf
fisttpl
mov
fwait
iret
stos
mov
por
jnp
mov
dec
sub
outsl
lret
lahf
fisttpl
mov
fwait
iret
stos
mov
packssdw
jnp
or
dec
sub
scas
lret
lahf
sti
push
jmp
fildl
lret
adc
icebp
aad
in
cmc
sbb
xchg
sti
jecxz
cmc
mov
inc
jno
inc
gs
jne
add
adc
shl
cmc
mov
movsl
xchg
mov
inc
jno
and
jne
add
adc
shl
cmc
mov
movsl
xchg
mov
jnp
or
adc
pop
jno
inc
jle
xchg
lea
xchg
push
jp
mov
add
add
sub
scas
lcall
hlt
nop
or
test
mov
fadd
into
sahf
or
lock
adc
push
or
and
lahf
add
push
xor
cmp
aam
in
loope
test
in
jbe
inc
inc
fwait
mov
inc
adc
sbb
pop
push
sub
test
jecxz
add
adc
pop
push
test
sbb
sub
inc
dec
jns
jns
push
xor
popa
fdivl
cli
xor
add
adc
shl
cmc
mov
movsl
xchg
mov
inc
jno
inc
gs
jne
add
adc
test
push
lods
mov
aam
mov
lds
sub
cmp
or
insb
insb
cmpsl
gs
mov
in
mov
or
sbb
cmp
xor
push
inc
jp
push
push
pop
xchg
xchg
fbld
loopne
mov
andl
push
jne
add
adc
shl
cmc
mov
movsl
xchg
mov
inc
jno
inc
gs
jne
add
adc
dec
pop
andl
mov
lret
jbe
sub
and
inc
pop
aam
push
or
xor
in
xchg
pop
aam
movsl
mov
sub
sbb
hlt
xchg
jmp
jge
push
pop
stos
sahf
xchg
or
fisubs
adcb
push
pusha
push
jbe
and
or
jecxz
adc
popf
addl
sti
mov
dec
in
cld
lahf
cmpsl
pop
jmp
test
pushf
pop
out
repnz
enter
jg
jb
and
jo
sbb
stos
dec
push
xchg
test
push
sbb
jecxz
mov
sub
imulb
cs
xchg
inc
fsub
mov
inc
hlt
hlt
mov
mov
negb
out
mov
test
sahf
rol
sub
mov
push
mov
imul
xchg
mov
jl
mov
scas
sub
xchg
jle
daa
mov
jnp
insl
enter
cmc
rolb
and
or
or
and
nop
xchg
pop
dec
lds
repnz
pop
and
in
fld
lahf
pop
mov
push
xor
jne
jmp
pop
test
xchg
mov
pop
mov
fisttps
xor
dec
push
inc
cmc
mov
cmc
xor
xor
xchg
mov
push
push
fmul
std
mov
xor
dec
or
xchg
std
loop
fwait
pop
lods
mov
mov
mov
mov
test
xorb
popf
test
out
or
pop
adc
into
movsb
sbbl
lock
pop
jns
jnp
push
shlb
dec
dec
xchg
sbb
stos
shrb
insl
into
xor
out
xchg
adc
aad
sbb
scas
or
roll
int3
mov
cmpsl
inc
hlt
out
dec
sbb
arpl
push
and
jae
jno
sbb
rorl
gs
xor
rolb
mov
loopne
push
jle
insl
nop
js
pop
adc
iret
sub
std
mov
or
xchg
mov
mov
inc
cmp
mov
data16
pop
xchg
loop
jge
jno
sub
lods
or
lods
lcall
mov
xchg
sub
testl
adc
cmpsl
pop
push
je
cmpsb
jp
ss
lcall
out
pop
bound
in
rolb
dec
rcr
pop
push
in
mov
lret
mov
ljmp
mov
lock
xchg
or
mov
cld
popa
mov
int3
movsl
mov
sbb
shll
jno
aaa
aam
fdiv
rcrb
mov
fwait
xacquire
cmp
mov
repnz
add
dec
cmpsl
std
stos
dec
gs
cli
fisubl
mov
in
pop
in
xchg
out
fnstcw
sbb
stc
test
push
jge
fmulp
push
fdivl
push
repnz
fcmovnbe
sub
sub
mov
setge
xor
inc
loopne
cwtl
fldl
shrb
sbb
das
mov
mov
outsl
std
jp
jg
jmp
lret
shrb
sub
push
xchg
ret
pop
out
mov
outsl
cmp
lods
lods
lret
pushf
cmpsl
dec
popa
out
inc
popf
inc
push
outsb
repnz
fs
outsb
stos
sub
pop
addr16
push
sub
outsl
in
imul
movsb
fidivrl
in
inc
fs
pusha
mov
sub
aam
push
ja
fs
adc
lea
loop
cmpsl
movsb
outsl
shlb
enter
push
test
mov
add
xchg
dec
sbb
inc
and
imul
add
jns
pop
pushf
scas
inc
mov
mov
outsl
gs
dec
sub
push
mov
popa
xchg
xchg
mull
out
mov
or
dec
inc
lcall
mov
mov
js
or
cmp
movsl
mov
sbb
push
mov
pop
xor
mov
sub
push
sarl
mov
xor
js
out
sub
xchg
dec
pop
cld
cmpsb
aas
dec
fbstp
dec
push
shll
jb
add
fisubl
out
add
cmp
paddusw
test
sahf
cli
imul
int3
lret
push
jge
xor
sbb
repz
shrl
sub
lods
and
inc
jl
dec
cli
mov
pop
inc
fsubrl
xchg
mov
push
cs
jmp
iret
jl
pop
pushl
lock
pop
dec
xor
pop
fnstenv
test
xchg
imul
aam
in
dec
xor
mov
push
out
sar
inc
jge
push
xchg
in
inc
scas
dec
xchg
cmp
mov
mov
xchg
repnz
and
xchg
inc
pop
xchg
inc
and
ret
mov
xchg
stos
cs
les
add
test
cld
ficomps
sbb
das
sub
leave
xchg
std
jnp
mov
std
scas
pusha
movsb
sbb
out
test
outsl
in
emms
insl
call
sub
mov
add
xchg
inc
pop
pop
xchg
sahf
inc
sbb
mov
das
ljmp
mov
add
pop
fisubs
fistpll
xor
addb
leave
ret
roll
test
int
lds
inc
scas
sub
ficomps
mov
sbb
inc
inc
lcall
mov
cmp
mov
push
fisubrl
push
out
or
push
lea
xor
xchg
xchg
popf
xorb
jns
cwtl
sbb
std
enter
push
mov
sub
xchg
cwtl
rclb
ret
sub
sbb
pop
bound
out
mov
mov
int3
outsl
lods
in
testl
push
cmp
dec
sub
dec
nop
ret
fadds
mov
mov
inc
adc
sti
and
dec
xchg
dec
popa
mov
lods
pop
icebp
sti
mov
call
dec
adc
or
movsb
dec
insb
mov
test
adc
xor
mov
and
orl
mov
cmp
int3
lods
push
xchg
pop
xchg
jbe
insl
jae
or
in
adc
mov
push
iret
jmp
mov
jne
mov
or
jg
xchg
pop
out
inc
shll
enter
pop
inc
push
sub
loope
cmp
xor
test
pop
scas
sbb
int
jo
aad
xchg
cld
inc
pushf
cmpsb
xchg
xchg
scas
stos
repz
mov
orb
pop
cli
xchg
add
lcall
adc
rcrb
pop
cmp
mov
popa
pop
cmc
repz
scas
leave
push
pop
pop
nop
xchg
insl
fisubs
mov
lds
addr16
inc
add
push
xchg
lea
jg
shlb
aad
jp
dec
or
dec
push
loope
das
mov
in
adc
dec
repnz
push
jecxz
xchg
jo
adc
shrb
popa
cli
adc
add
and
xchg
les
int3
pop
jnp
mull
jmp
mov
outsl
js
xor
std
add
mov
ds
sub
cmp
fstpt
push
popf
jl
rcrl
aam
rolb
jmp
or
mov
cltd
pop
mov
out
daa
adc
inc
jecxz
in
or
jno
sub
jmp
sahf
xor
lahf
add
std
xor
jl
xchg
testl
rcl
sarl
stos
cs
cltd
sub
out
push
jg
push
mov
pop
mov
cld
pop
xchg
jns
aas
adc
mov
lret
cli
mov
inc
out
icebp
or
fidivs
xchg
cmpsb
jmp
lods
fwait
jg
stc
mov
push
popf
sub
pop
cmpsb
pop
fs
stos
cli
shll
push
push
xchg
sbb
imul
adc
fbld
jl
inc
test
jg
jge
mov
fisubrs
xor
ljmp
das
hlt
sub
ror
ljmp
mov
sub
out
gs
rcrl
mov
xlat
cld
mov
call
inc
lret
in
xor
and
dec
fldcw
xor
stc
inc
cmp
lcall
sub
or
jp
xlat
dec
xchg
aas
cmc
cmp
dec
in
xchg
add
imul
sub
idivb
movsl
xchg
dec
dec
xor
and
dec
cltd
pop
push
cli
je
lods
push
mull
es
inc
ljmp
or
fisttpl
js
add
sbb
out
push
mov
add
loope
ss
push
push
ljmp
push
xchg
hlt
je
xor
sti
jbe
pop
mov
push
imul
xor
push
and
lds
fxch
arpl
out
mov
cli
cmp
push
inc
sarl
pop
imul
arpl
xor
inc
or
xchg
int
jmp
push
subl
gs
jo
jg
push
or
jne
mov
adc
js
testl
lods
push
mov
lea
mov
rorb
test
inc
movsb
lock
cmp
dec
lret
loopne
sahf
cmp
iret
test
adcl
decb
in
cmp
push
pop
in
mov
test
inc
fdivs
movb
cltd
push
cli
rcrb
jae,pt
pop
mov
daa
mov
adc
leave
pop
push
inc
data16
subl
cli
sbb
mov
pop
pop
push
mov
int3
mov
xchg
xor
push
mov
sub
sub
mov
rorl
cmpsl
arpl
mov
les
xlat
sbb
mov
filds
nop
jg
pop
mov
cmpb
inc
aad
mov
jmp
fwait
mov
out
jne
dec
dec
movsl
lahf
int3
aad
jecxz
mov
push
push
pop
stos
push
int
dec
pop
cmp
push
inc
sub
lcall
popf
cmp
mov
sar
lock
adc
lods
adc
add
call
outsb
dec
out
add
aam
nop
mov
jmp
sub
loope
popa
and
adc
aam
cwtl
or
adc
inc
in
xlat
arpl
add
test
xchg
shrl
or
pop
in
ficoms
test
and
data16
leave
lcall
cli
in
lahf
mov
pop
imul
and
incb
add
add
or
pop
and
hlt
cmp
stc
lock
rcrl
mov
fistpll
std
dec
jmp
mov
sub
cmc
loope
stos
popf
pop
je
sar
sbb
orl
adc
lcall
sbb
mov
shrb
mov
movsl
shl
pop
fidivs
push
pop
enter
test
mov
fsub
ja
lods
pmuludq
scas
ret
js
popf
addr16
cltd
fdivs
or
dec
dec
push
push
inc
mov
mov
ljmp
ja
mov
push
sub
jecxz
mov
psubb
sbb
sbb
sub
clc
leave
pop
jbe
int
cmc
fstl
jmp
dec
cmp
scas
out
fs
scas
stos
add
faddl
adcl
jae
sahf
mov
loope
inc
enter
les
ret
rclb
enter
movsb
pop
mov
iret
leave
pop
jno
rcl
mov
lods
jge
arpl
aaa
stos
add
jg
push
mov
mov
cld
call
das
and
cmpsb
adc
mov
xor
sub
fs
inc
pop
add
push
push
and
adc
adc
inc
xor
mov
ret
adc
sub
dec
jmp
ja
mov
and
popa
pop
pusha
adc
adc
sbb
xor
js
aam
into
jae
sub
pop
ret
mov
sbb
mov
mov
sahf
jle
scas
push
popf
push
pop
adc
lds
movsb
outsl
fcomi
jbe
out
pop
dec
mov
mov
lret
pop
mov
ljmp
and
xchg
pusha
scas
out
mov
test
push
icebp
les
inc
pop
add
mov
jo
cmpsb
xchg
fldt
ljmp
pop
inc
inc
jb
stc
add
xchg
ja
or
sahf
mov
dec
insl
stos
or
fdivl
push
lahf
inc
inc
aas
stos
fiaddl
dec
popa
or
fisubrs
addl
clc
nop
mov
adcl
adc
inc
push
and
fisubl
lret
fisttpll
jae
in
in
sbb
jecxz
fcmovbe
jb
sbb
dec
jae
sbb
fwait
pop
dec
fldcw
in
sti
fsubs
enter
and
push
xor
or
sub
icebp
lds
arpl
sub
mov
dec
sub
aaa
jmp
or
xor
jo
cwtl
mov
sbb
sub
fldt
xchg
std
cmc
movsl
popf
mov
aaa
sbb
pop
cmp
addr16
repnz
dec
or
fidivs
mov
dec
fnstcw
cmp
int
sti
addr16
in
nop
lds
mov
mov
fdivl
mov
xor
xor
pop
pop
jo
or
xor
cmp
mov
mov
push
adc
jp
sbb
test
orb
adcl
push
dec
adc
leave
inc
xor
fstpl
sub
popa
xor
ja
mov
add
in
cltd
add
insw
mov
jp
or
and
stos
xor
mov
cmp
sub
dec
add
movsb
cltd
lret
sahf
fcompl
iret
ljmp
mov
pop
repz
xchg
pop
pop
out
mov
mov
push
mov
xchg
pop
jne
inc
fcoml
subb
pop
orb
arpl
ja
in
out
int
inc
dec
fucomp
pop
sbb
push
inc
cltd
scas
dec
enter
mov
mov
popa
femms
ljmp
arpl
lods
mov
and
scas
divl
add
scas
and
scas
inc
mov
jbe
mov
push
fdivrs
jl
out
leave
dec
cmp
inc
mov
cld
fldt
mov
imul
lea
sbb
data16
adcl
arpl
cmpb
lea
and
clc
icebp
imul
stos
leave
mov
repnz
data16
xchg
push
inc
lock
xor
scas
mov
in
mov
addr16
jb
or
pop
xor
inc
ljmp
mov
ror
or
jbe
dec
out
add
inc
popa
call
stos
popa
loop
inc
cmp
jb
mov
jo
pop
loopne
sbb
fwait
dec
jmp
mov
shll
ds
stos
jns
inc
cmpsb
jecxz
mov
addb
cmpb
int
sbb
sbb
lret
xor
call
insb
iret
in
ss
pop
aad
dec
jb
popa
inc
and
add
mov
lock
and
movsl
movsl
push
jl
fwait
ja
jne
mov
add
leave
mov
aas
popl
test
jg
mov
mov
push
xchg
andl
mov
popa
dec
popa
dec
inc
sub
jbe
push
int
ficompl
jmp
add
adcb
leave
mov
mov
lds
pop
xchg
mov
pop
sub
mov
mov
ljmp
hlt
bound
pop
jo
shl
pop
testl
lret
in
fstpl
mov
fisubl
clc
hlt
fsubl
adc
pop
or
inc
push
pop
xor
xchg
inc
jnp
cmp
inc
test
xchg
xchg
aaa
popf
mov
mov
pop
aaa
mov
mov
cmp
stc
les
ds
mov
add
jo
fcomi
pop
xor
cltd
lock
out
into
xchg
into
fwait
rclb
loope
sub
or
add
aas
iret
mov
push
rorb
popf
arpl
ss
hlt
sub
leave
push
sub
repnz
xchg
rorb
xlat
leave
or
mov
int3
daa
jp
add
sub
mov
xchg
notl
ja
loopne
int3
insl
jae
inc
int3
mov
mov
inc
addr16
test
push
arpl
jo
cmpsb
inc
dec
push
dec
nop
cmp
dec
mov
cltd
push
mov
mov
int
add
lock
adc
fcoml
and
sbb
or
in
std
cmpsb
adc
shlb
pop
inc
mov
lds
inc
mov
sbb
adc
data16
fldcw
dec
lret
dec
mov
lds
mov
cmp
push
inc
aam
movl
ficoms
mov
decb
cmpsb
outsl
sub
arpl
lcall
outsb
lret
pop
andl
add
les
into
mov
shll
jmp
xchg
pop
mov
xchg
das
loope
stc
test
mov
inc
mov
cmpsb
xor
imul
mov
mov
sub
sbb
stos
jb
divb
cmpsl
orl
pop
pop
ljmp
xchg
mov
push
iret
mov
in
pop
imul
add
cltd
and
sub
rorl
iret
shl
sbb
insl
or
int3
insl
dec
push
enter
mov
push
push
mov
jmp
adc
mov
cld
fists
aad
lock
out
stos
sbb
mov
push
sbb
add
cmpsb
movsb
add
push
push
push
mov
daa
enter
sbb
sti
insb
pop
rep
shlb
and
pop
mov
testb
jge
popa
arpl
mov
in
popl
jge
mov
jnp
pop
push
ficomps
shr
cs
lahf
or
cmc
mov
movsb
scas
pop
jae
repz
mov
popa
adc
repnz
test
ud2
ljmp
mov
or
mov
or
mov
dec
mov
repnz
xchg
sub
sarb
lock
jmp
mov
xorb
add
stc
loop
mov
aaa
cs
cmp
add
or
push
stc
sub
sub
pop
sub
add
jg
mov
add
sbb
inc
mov
sbb
repz
add
imulb
inc
mov
mov
aaa
jno
testl
xor
sbbb
jmp
jb
or
sub
xor
mov
testl
cli
jg
lds
dec
int3
cmpsl
mov
bound
hlt
xlat
dec
inc
sub
lods
mov
jnp
hlt
roll
and
rclb
data16
and
sub
es
jge
pop
ss
hlt
sbb
xchg
and
pop
push
sub
sub
shr
push
hlt
xlat
iret
cmp
xchg
mov
cmc
enter
pushf
mov
dec
movsb
aam
mov
lcall
aam
scas
xchg
mov
lods
cli
add
dec
mov
xchg
jp
adc
lock
aaa
lds
or
mov
aas
cmpsb
mov
cmp
jmp
rolb
or
rcll
dec
outsb
push
pop
stos
unpcklps
gs
cmp
push
push
mov
fucomip
movsb
in
int3
outsb
jne
repz
add
adc
aaa
clc
sbb
in
dec
dec
or
cwtl
and
push
aas
xor
sub
xor
pop
mov
nop
jecxz
aas
mov
fiadds
dec
leave
imul
xchg
mov
dec
adc
pop
xchg
stc
mov
jnp
test
sbb
lret
test
push
mov
and
test
in
mov
dec
imull
data16
popf
push
lea
in
pusha
xchg
dec
or
push
lcall
push
cmp
loopne
out
ret
bound
sbb
inc
mov
push
push
lahf
sub
dec
mov
dec
ret
xchg
int3
mov
sbb
dec
jl
and
xor
push
popa
or
add
cmp
je
bound
fistl
ljmp
in
mov
mov
jno
fsubr
pop
adc
xchg
add
push
hlt
fwait
pop
in
inc
and
int
mov
or
push
int
sbb
subb
jae
imul
lahf
jl
jmp
loope
push
out
mov
and
xor
jmp
push
dec
sbb
insl
sbb
js
lds
pop
and
add
insl
iret
insl
cmpsl
scas
adcl
mov
cmp
es
mov
mov
outsl
mov
fiadds
outsb
les
shll
sti
into
jp
inc
int3
lds
ret
push
sub
xor
jp
lea
pop
mov
ss
mov
xlat
lret
int
fistpl
xchg
cli
leave
mov
mov
int3
jno
insl
fs
xchg
enter
xor
xor
out
stos
cmp
fmulp
and
pop
lahf
sub
movsb
jo
or
add
sahf
sub
fsubs
arpl
jns
insb
mov
adc
xor
xchg
mov
rolb
data16
setne
jp
inc
or
or
add
push
in
cmc
mov
movsl
xchg
mov
inc
jno
inc
gs
jne
add
adc
shl
cmc
mov
movsl
xchg
mov
inc
jno
inc
gs
jne
add
adc
shl
hlt
mov
movsb
xchg
mov
inc
jno
inc
gs
jne
add
adc
loopne
lock
in
icebp
mov
and
jno
jmp
push
add
mov
lret
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cwtl
ljmp
insb
je
sub
xchg
or
pop
aad
lds
push
add
fcoms
inc
clc
jne
or
movsl
pop
mov
adc
orl
cmp
dec
rcrb
insl
call
mov
pop
xchg
daa
stos
and
aas
in
adc
fisubrs
cmp
das
movsb
sahf
push
repz
mov
jo
push
ds
stc
mov
dec
ja
sarb
mov
popf
adc
movsl
or
nop
js
xchg
test
ljmp
sbb
dec
inc
jae
sub
add
movsl
and
mov
js
push
add
daa
jne
test
sub
or
push
xlat
pop
cmpsl
xchg
repz
in
lret
daa
jne
mov
sbb
into
test
lock
xchg
js
jo
push
out
daa
outsl
lret
dec
loopne
out
test
sbb
or
push
adc
test
iret
push
fadds
insb
icebp
jl
lea
popf
and
shlb
push
add
stos
add
or
cld
fs
dec
loopne
lret
sub
mov
insl
jmp
and
mov
in
shrl
cmpsl
and
std
push
in
aam
rclb
enter
call
test
mov
movsl
pop
aad
lds
push
add
fcoms
inc
clc
jne
sbb
sub
js
push
addb
mov
stos
and
leave
sub
out
aam
xor
in
xor
push
repz
shll
add
les
cltd
sbb
rolb
std
testb
mov
into
je
arpl
lret
daa
pop
sbb
arpl
subb
xchg
cmpsl
mov
addr16
mov
loope
pop
push
adcb
out
push
and
sub
ror
cmp
or
inc
jle
hlt
xchg
push
pop
daa
pushf
push
popf
add
in
aad
inc
mulb
jl
jne
fldt
cs
test
xor
shr
pop
scas
xor
mov
inc
add
mov
or
xor
push
repnz
inc
addr16
faddl
loop
pop
popa
fdivrl
sar
cwtl
adc
mov
jge
fsubrp
mov
out
jnp
inc
mov
mov
sahf
mov
lahf
shrb
xor
or
push
xchg
jbe
clc
popf
push
bswap
shll
pop
loop
sbb
mov
es
jns
out
imul
scas
lea
or
push
pop
in
outsl
int
sbb
and
mov
hlt
and
xchg
sbb
lock
sbb
divb
mov
fcoms
aaa
mov
or
pop
mov
popf
jae
loop
cmp
jns
mov
inc
aam
rcrb
dec
imul
dec
mov
mov
das
int3
sbbb
dec
mov
lret
lds
ret
in
push
xchg
lock
fnstsw
outsl
mov
jp
cmp
jae
dec
dec
imul
pop
ss
daa
jp
mov
jbe
aam
aam
repz
jne
aas
cmc
outsl
xor
stc
and
dec
sbb
pop
cmp
sti
das
and
insl
sub
add
xor
or
mov
and
jecxz
push
les
push
push
dec
xor
and
in
call
and
jbe
arpl
cwtl
jp
pop
sbb
adc
fcompl
jns
shrl
imul
xchg
mov
adc
imul
inc
pop
mov
cmp
imul
xchg
sbb
inc
add
jne
daa
loope
sub
inc
lods
xchg
jae
shlb
lea
addr16
cmp
cli
cmpsb
inc
dec
stc
sub
xchg
fwait
add
and
outsb
jmp
mov
mov
or
in
mov
imul
adc
dec
sbb
xor
mov
cmp
sbb
jb
sbb
or
sub
out
cmp
xchg
xchg
dec
fildl
sub
push
rol
pop
repz
inc
ja
add
dec
jnp
sbb
sbb
scas
clc
sbb
mov
mov
es
mov
sub
inc
mov
ret
inc
ss
push
adc
cmp
pop
negl
cwtl
call
sbb
stos
adc
dec
ret
dec
popa
aam
mov
test
dec
loope
add
inc
inc
sub
insb
or
insl
pop
push
or
add
mov
std
cmp
push
bound
movsl
js
sub
fstpt
add
push
sub
imul
iret
pop
jg
mov
test
adc
das
fbstp
cmpsb
repnz
push
jmp
jae
mov
jg
and
pop
sub
bound
cwtl
dec
mulb
jp
mov
mov
xor
nop
pop
dec
mov
test
inc
orb
sbb
movb
pushf
ret
and
lret
xchg
popf
es
or
push
mov
mov
negl
xlat
fcomi
outsb
es
cwtl
jg
mov
arpl
lret
sub
inc
lods
mov
mov
cltd
sbb
mov
lcall
or
cmpsb
cmp
pop
sti
sbb
adc
rclb
clc
jmp
sub
mov
mov
mov
movsb
sbb
cmp
jp
std
mov
mov
sbb
sbb
test
cwtl
xchg
xchg
aaa
iret
mov
popf
lock
add
mov
daa
stc
scas
adc
xchg
jns
out
pop
xor
cmp
stos
push
adc
mov
mov
repnz
outsb
repz
jle
mov
fcmovne
mov
push
stos
mov
repnz
dec
cmp
nop
jecxz
dec
push
adc
test
sub
jl
inc
fs
mov
push
cmovl
inc
pop
cltd
xor
inc
fidivrl
stos
cs
fists
int3
out
leave
cmp
int3
je
sti
test
push
arpl
scas
icebp
push
ja
mov
imulb
js
xor
in
iret
dec
dec
int3
adc
push
adc
inc
cltd
mov
jo
leave
jge
test
push
add
jg
das
mov
mov
mov
out
sahf
sub
mov
ja
lahf
pop
clc
jno
testl
pop
pop
scas
pop
in
enter
mov
sbb
and
mov
aas
dec
sub
call
jle
and
jb
ja
enter
shl
jl
mov
push
bound
inc
inc
sahf
popa
jmp
sarb
jb
cmp
dec
das
and
pop
ja
in
xlat
add
js
ljmp
or
stos
sarl
data16
sub
adc
out
or
cmpsb
xchg
or
push
sbb
imul
rcr
test
shll
stos
xlat
pop
xchg
cmp
add
iret
mov
ret
push
shll
outsl
mov
dec
test
pop
shrb
xchg
ljmp
cs
fcompl
orb
mov
fmuls
sbb
lea
loope
push
int
in
lock
fld
negl
jle
cmp
loopne
cmpsl
lds
nop
pop
xlat
sbb
xor
mov
fisubrs
ljmp
dec
je
in
add
ja
pop
add
sbb
call
inc
pop
out
flds
mov
pop
js
cmpsl
int3
jmp
mov
gs
sarb
test
cli
cmpsb
in
adc
sbb
push
testl
std
cmpl
xor
push
fs
inc
test
mov
test
loope
leave
mov
iret
ds
cmp
push
jecxz
cli
dec
fisttps
pop
jp
sub
fs
mov
imull
not
cli
addr16
insb
add
sub
into
and
pop
popl
lds
scas
cmp
and
stos
loop
cs
mov
adc
cmp
shl
push
inc
mov
xchg
sbb
lcall
fs
ret
cwtl
adc
movsl
jg
ss
test
and
scas
test
xchg
lods
or
sbb
adc
xchg
add
inc
mov
xchg
movsb
pop
mov
push
cmp
push
sbb
jl
xchg
lods
or
lret
or
sub
das
mov
pop
xchg
rolb
aas
lret
and
pop
call
insl
ud1
test
das
jo
xchg
jp
mov
pop
dec
ja
dec
ret
sub
dec
ret
lock
mov
push
pop
ja
leave
loopne
sbb
push
xor
mov
or
dec
negb
jmp
stos
pop
jmp
mov
inc
rcrl
adc
cmc
cmp
imul
cwtl
inc
pop
mov
mov
mov
push
jae
pop
jle
and
leave
cmc
sbb
xchg
mov
sar
popa
push
ret
lods
scas
lods
dec
leave
pop
sti
fdiv
ds
scas
cmpsl
push
jecxz
cltd
in
movl
jno
enter
das
add
aas
and
push
or
xchg
xchg
std
xchg
das
push
mov
or
mov
jnp,pt
cld
les
mov
imul
outsl
adc
shr
jl
loopne
test
jp
mov
lret
repz
xchg
aam
cltd
pushf
pop
loopne
mov
daa
inc
int3
mov
mov
inc
push
push
mov
rcll
or
xor
adc
mov
sub
orl
add
push
add
adc
push
movsl
cmp
adc
inc
fcom
out
cltd
data16
or
das
add
mov
es
inc
test
add
jg
int
mov
movsl
jl
frstor
sbb
push
stos
out
jecxz
xchg
inc
inc
jo
popf
jp
loopne
dec
mov
and
mov
pop
mov
aas
sub
lcall
push
fmul
out
stc
dec
inc
push
mov
adc
inc
insb
lea
mov
add
jge
adc
adc
xchg
sub
clc
popf
dec
imul
ja
inc
stos
lock
insl
inc
roll
push
mov
dec
ret
dec
imul
cs
jecxz
push
sub
dec
scas
pop
in
int
aad
int
fmul
cmpsb
cld
stc
mov
jbe
pop
scas
leave
mov
insb
xor
or
daa
inc
add
fbld
jmp
lea
or
and
mov
pop
or
int3
and
ret
les
xor
mov
lahf
mov
cmc
cld
sub
aaa
icebp
mov
and
cmpsb
cs
test
mov
adc
sub
push
idiv
in
ja
sahf
xchg
dec
dec
je
cmpsl
and
adc
shll
enter
cmpsl
and
push
xchg
sbb
inc
lods
jnp
pop
or
cmpsl
pushw
jbe
rcr
aaa
sarb
lods
push
adc
lret
sbb
dec
add
jp
lret
negl
push
cs
mov
cmp
xchg
mov
add
dec
cmpsb
lock
inc
andl
leave
adc
or
push
cmp
sub
and
jne
and
sub
sub
fwait
iret
std
out
fcmovu
pop
out
cmp
cld
mov
xor
adc
pushf
jno
std
inc
pop
mov
scas
movsb
add
mov
xchg
fisttpll
mov
movsl
pop
outsb
fdiv
aad
xor
cmpsb
jge
in
fmul
ret
rorl
sahf
sub
rcrl
sbb
sub
mov
andb
test
sub
aam
aad
add
or
xchg
sti
adc
movsb
cmc
inc
fnstsw
icebp
mov
jecxz
ret
inc
inc
xchg
in
pusha
out
mov
sahf
and
dec
jle
add
mov
out
jns
push
pop
push
mov
push
clc
pusha
addr16
popa
js
dec
sbb
xor
cmp
jne
jb
jae
cltd
stos
sub
mov
xchg
out
inc
and
pop
dec
test
std
lcall
jle
jno
push
outsb
xor
mov
dec
cmp
shrb
push
aas
jno
inc
daa
cmc
test
cmpsb
xor
fwait
hlt
dec
fbld
adc
addr16
popa
lods
and
ds
aam
enter
nop
mov
adc
sub
sbb
mov
xor
fsubr
pop
dec
mov
cmp
sti
push
pop
gs
jo
movsb
xchg
sarb
cmp
popf
lret
cmp
loope
xchg
mov
outsl
inc
push
and
das
movsb
mov
ds
xchg
shr
inc
adc
les
pop
arpl
aas
sub
shlb
sti
ror
sub
out
mov
lock
int
mov
xchg
daa
and
push
cmp
int3
fimull
xor
xchg
out
loopne
andb
jb
div
dec
dec
or
sarl
out
jecxz
out
jns,pn
mov
push
jg
mov
insb
es
mov
jo
cs
jb
push
mov
stc
and
push
cmp
pushfw
add
mov
aad
sub
lock
add
jmp
aad
mov
pop
imul
stos
stos
pop
cmp
adc
loop
movsb
int3
fs
sarl
xchg
jbe
or
xor
lret
inc
hlt
xchg
mov
pop
out
mov
mov
sub
pop
mov
push
pop
repnz
or
ss
fwait
cmpsb
sbb
adcb
push
nop
mov
xchg
and
push
and
or
cmp
lcall
and
mov
xchg
js
out
std
xchg
pop
pop
sahf
cld
movsb
add
xchg
mov
notl
mov
orl
outsb
pop
or
out
mov
sahf
pop
xlat
in
repnz
push
cli
or
clc
push
mov
aaa
ret
mov
adc
inc
into
and
push
mov
sub
jo
rclb
scas
in
ret
ficompl
push
xchg
mov
xchg
lods
and
mov
lahf
xor
jne
push
and
movl
xchg
push
push
mov
test
insl
rcll
jns
or
adc
adc
mov
inc
lret
loope
testb
cmp
adc
xor
cs
xchg
push
xor
adc
lods
clc
in
int
xor
cmp
push
test
sbb
fldt
cmp
or
sbb
lret
call
jnp
cmp
mov
clc
imul
movsl
sub
aas
bound
jno
notl
lahf
sarb
imul
cmp
mov
jg
stos
sub
and
fsub
mov
and
fisubrs
mov
jle
hlt
and
outsb
mov
pop
lret
add
into
mov
ljmp
xchg
push
push
adcb
std
ljmp
xchg
fnstcw
cs
je
outsb
adc
push
push
fsubrs
fcmovnbe
jnp
aad
or
std
rcrb
mov
lds
sbb
push
loope
jmp
loope
inc
ficoml
lret
outsl
sbb
jg
mov
sbb
mov
leave
popf
pop
xorl
mov
sbb
adc
fst
sbb
sbb
xchg
pop
dec
ja
jp
inc
jg
loopne
add
push
cli
mov
mov
scas
xor
stos
stc
mov
add
adc
push
cmp
sti
movb
mov
daa
or
jno
in
cmpsl
xchg
sbb
xor
push
popf
shlb
mov
sub
and
jmp
sub
sbb
cmp
sub
or
jno
jae
shrl
into
jnp
pop
jmp
imul
in
sti
mov
mul
mov
add
loope,pn
and
adc
adc
jl
fdivr
inc
jns
jae
mov
or
je
push
xchg
sub
cmpsb
mov
push
int
mov
jnp
jg
mov
adc
aam
pushf
dec
sub
or
mov
mov
cwtl
icebp
int3
jg
out
xchg
fimuls
ficomps
imul
jg
push
jbe
add
idivb
in
inc
cmc
xor
and
mov
cwtl
fwait
and
call
imul
add
pop
call
adc
decl
je
cmp
scas
xchg
mov
mov
lods
and
mov
in
pushf
pop
push
orb
or
xchg
jno
xchg
and
pop
negl
mov
pop
mov
je
xchg
testl
adcb
subl
add
sahf
fadds
std
adc
jge
lods
mov
leave
sbb
jp
jo
push
adc
mov
jmp
jge
xor
lret
ljmp
fstps
in
sti
out
fistl
push
rorb
popa
jae
cmc
pop
outsb
std
jnp
mov
jmp
sbb
ljmp
outsb
std
ja
dec
jg
lcall
mov
pop
lret
je
ljmp
aad
leave
test
cmpsb
out
dec
mov
insl
mov
nop
and
ljmp
enter
into
mov
cmc
sub
lahf
or
sti
mov
test
mov
mov
mov
mov
inc
mov
ret
stc
inc
test
jb
test
sbb
mov
test
loop
dec
xchg
sbb
hlt
stc
fisttpll
mov
imul
les
cmpsb
push
daa
icebp
out
shlb
aam
shlb
lcall
nop
dec
addr16
ljmp
jnp
clc
repnz
mov
push
insb
les
aad
dec
sbb
push
xchg
in
mov
idivl
add
es
test
xchg
push
and
outsl
vpshaw
jns
out
insl
icebp
imul
mov
imul
test
add
pop
in
mov
jb
adc
dec
pop
lods
int3
and
mov
dec
pop
lret
lcall
add
gs
adc
jle
mov
in
imul
push
sub
out
pop
sbb
lahf
xor
or
sub
dec
cmp
mov
cld
adc
dec
xlat
out
sub
sti
pop
shrb
mov
jecxz
xor
or
loopne
lret
adc
cwtl
outsb
mov
in
push
adc
gs
andl
jno
or
ret
lods
outsl
movsb
and
pop
push
psrad
call
pushf
data16
gs
mov
adc
adc
inc
out
ds
xor
sbb
xor
dec
test
dec
pushf
pop
je
rcrl
int
jp
int
push
bound
mov
add
mov
push
stc
es
jl
pop
dec
cmp
js
and
insl
shr
mov
ja,pt
fs
dec
and
cmp
and
leave
jmp
stc
mov
jecxz
mov
adc
sbbl
call
add
push
add
push
pop
or
jmp
out
push
mov
dec
repz
jecxz
out
hlt
sar
dec
xor
add
lock
out
jb
notl
scas
fidivrl
sbb
iret
stc
ret
inc
sbb
int
rcrl
lds
leave
dec
mov
popf
jecxz
lods
push
mov
gs
in
dec
loope
xor
cs
push
ret
cmp
push
push
mov
clc
xor
sbb
dec
xchg
jb
jbe
out
lods
add
add
or
fsubr
jno
jle
or
in
push
jle
call
loope
mov
sub
dec
pop
xchg
jle
popf
shrl
jbe
push
inc
inc
cmpl
cwtl
sub
pusha
and
inc
test
rol
lods
push
dec
dec
sbb
xchg
scas
dec
adcl
ficoms
inc
in
pop
pushf
add
inc
rolb
xchg
outsb
fs
gs
das
icebp
loopne
sbb
test
mov
nop
push
mov
adc
orb
add
sti
loope
xor
push
sbb
push
xchg
mov
notl
fnop
jecxz
aaa
push
push
icebp
repnz
jl
xor
add
add
jno
decl
adc
sarl
addl
filds
sub
cmpl
mov
jg
insl
punpckhdq
cmpsl
gs
sub
loopne
mov
stos
gs
arpl
sarb
pop
mov
movl
push
pusha
sub
lea
loope
insb
mov
cwtl
stos
xor
push
adc
cmp
cld
out
mov
pusha
mov
sub
mov
mov
jl
orb
ljmp
cmp
js
sub
or
cld
and
insl
sub
push
mov
jo
adc
in
xor
jl
xor
lahf
mov
ret
inc
ret
and
ljmp
lods
mov
stc
cld
fnstenv
xor
lods
sbb
and
jne
add
cltd
insb
inc
imul
or
std
out
adc
xchg
sbb
inc
shrb
dec
lea
sub
pop
aam
adc
je
cmpsl
lds
sbb
mov
pop
push
lods
and
mov
mov
clc
ret
nop
shll
outsb
gs
cmovle
dec
push
jb
add
cmc
cmp
es
add
enter
xor
sub
mov
xchg
jnp
or
or
clc
and
lcall
xchg
or
fcmovbe
jmp
cmp
and
dec
xor
mov
ss
and
roll
and
sahf
sbb
imul
iret
mov
jno
push
cwtl
gs
mov
jo
dec
xchg
push
test
out
cmp
orl
test
ficoms
mov
inc
pop
stos
mov
lret
pop
or
sbb
cltd
or
outsb
jp
adc
inc
adc
fninit
les
and
pop
stc
loope
push
xchg
mov
adc
xor
dec
in
mov
outsb
pop
mov
clc
pop
nopl
mov
push
adcl
adc
xor
sbb
cmpl
pop
imul
aam
xchg
int
pop
int
mov
mov
add
fcoms
inc
clc
jne
sbb
sub
js
push
add
fcoms
inc
clc
jne
sbb
sub
js
push
add
fcoms
inc
clc
jne
sbb
sub
hlt
push
cwtl
adc
test
ficoml
inc
js
push
das
xchg
mov
shrb
pop
sarb
or
mov
out
dec
lea
add
and
add
jg
dec
push
dec
inc
lret
mov
mov
out
icebp
push
iret
rcr
mov
cmp
pop
add
add
dec
push
pop
inc
pop
test
mov
icebp
call
dec
xor
addr16
or
cs
rorl
cmp
and
jmp
insb
push
adc
jg
dec
scas
pop
cmp
inc
sub
cwtl
sbb
roll
ds
dec
fisttps
adc
aas
dec
mov
cli
lret
mov
es
lret
in
pushf
jns
aas
and
jnp
jg
cmp
xchg
add
out
xlat
pop
push
jae
adc
push
xor
aas
fisttps
dec
jg
dec
scas
pop
push
push
xor
pop
scas
outsb
add
adc
ja
inc
fsts
int
fimuls
jmp
jg
mov
push
les
and
mov
or
jnp
inc
xor
ljmp
out
jmp
loop
sub
dec
push
pop
inc
hlt
cmpsb
jmp
orl
sarl
jmp
or
sbb
imul
mov
sar
hlt
out
xor
cmpb
insb
and
jp
sbb
cmp
std
loop
out
xchg
lcall
inc
insl
inc
pcmpeqb
push
add
popa
es
xor
out
cmc
int3
les
ffreep
das
xor
and
adc
add
jg
dec
push
pop
inc
scas
mov
mov
out
icebp
jmp
iret
rcr
shrl
aas
and
adc
add
jg
dec
push
pop
inc
scas
mov
mov
push
pop
andl
pop
jg
pop
jge
inc
test
push
repnz
inc
sub
ffree
adc
je
xor
sub
xor
imul
or
fcompl
out
gs
jp
xor
mov
daa
push
and
mov
pop
pop
pushf
mov
stc
sti
inc
movsl
in
in
jo
push
dec
mov
sub
mov
fwait
and
mov
clc
repz
popf
inc
jns
lods
and
push
fdivrl
pop
cmp
sub
lds
in
mov
adc
scas
outsb
adc
inc
push
sub
inc
adc
std
xor
insl
sahf
arpl
daa
dec
loopne
jae
mov
lret
arpl
adc
and
mov
sbb
enter
sarb
xchg
enter
clc
sub
mov
xor
dec
sbb
mov
mov
sub
dec
mov
mov
insl
mov
adc
pop
out
out
cli
pop
push
out
mov
push
push
repnz
mov
jl
mov
mov
cmp
rcrl
movsl
mov
lea
data16
xchg
int3
or
std
sbb
adcl
mov
in
mov
push
inc
test
adc
xchg
or
loop
leave
pop
xchg
sbb
inc
mulb
cmp
in
jmp
inc
sbb
dec
pop
lahf
cmp
gs
test
mov
out
sti
mov
add
pop
cwtl
jno
fistpl
sti
clc
cltd
xchg
mov
mov
dec
leave
xchg
mov
in
js
inc
jp
int3
xchg
leave
je
mov
xchg
add
or
push
ja
enter
scas
sub
dec
roll
popf
adc
jmp
aaa
push
mov
xor
sub
push
mov
push
fbstp
mov
mov
pop
mov
fidivl
ja
sbb
sub
add
pop
lcall
mov
jmp
dec
mov
std
sub
dec
jmp
std
push
pop
movsl
sbb
rorl
ljmp
es
mov
xor
push
insl
jp
ret
xor
mov
mov
mov
ds
mov
fld1
xor
pop
or
jbe
arpl
ret
hlt
scas
inc
outsb
push
test
jno
pushf
sub
jb
push
imul
add
fwait
iret
inc
hlt
sbb
push
sub
sbb
sub
clc
xchg
jo
push
sbb
clc
adc
xchg
test
fsubrs
insb
lods
int3
ffreep
xchg
ja
stc
or
fimuls
aam
pop
sub
imull
imul
push
movsl
sbb
mov
ret
loopne
sti
push
inc
jecxz
ret
inc
bound
dec
jle
sub
xchg
push
insb
xlat
cmp
call
dec
or
adc
aas
pop
pop
xor
cmp
arpl
xchg
or
ds
xchg
dec
cmpsb
cmp
inc
mov
icebp
mov
push
mov
adc
lods
pop
jg
dec
mov
push
dec
add
arpl
out
add
push
jle
in
xor
call
mov
loop
and
jnp
adc
jne
and
jne
mov
pop
nop
ss
into
xchg
lods
loopne
pusha
push
outsb
cli
outsb
dec
add
mov
sub
jg
push
sub
mov
fs
sbb
xchg
push
push
sbb
into
or
jnp
xchg
fisttpll
push
inc
insb
mov
fnsave
hlt
call
sub
not
cmp
cld
sti
sbb
mov
adc
ja
inc
sbb
dec
xor
sub
iret
xor
lods
push
push
ficoms
insl
iret
sbb
cmp
push
lds
xchg
lret
out
lds
stos
jmp
leave
lahf
notl
iret
xchg
jg
fwait
sbb
xchg
in
or
test
loopne
rolb
dec
cmp
mov
iret
hlt
jge
mov
mov
rcl
daa
inc
xchg
sub
lret
in
call
pushf
subl
jmp
push
sbb
pop
jle
push
cmpsb
sub
cmpsb
stc
sub
jns
mov
dec
xor
jmp
ds
mov
mov
hlt
jb,pn
mov
xchg
shll
xor
jnp
jmp
mov
mov
inc
jmp
aaa
ss
addr16
or
rclb
imul
mov
sbb
sarl
jecxz
xor
mov
pop
sub
xor
mov
sub
push
pop
mov
fwait
mov
adc
dec
pushf
mull
push
push
push
shrb
cmp
dec
test
mov
inc
incb
popa
jge
pop
pop
insb
pop
gs
test
loop
fsubrl
push
adcb
xor
add
sub
push
xlat
pusha
xor
je
jmp
fsubp
ret
stc
pop
call
mov
ret
or
sarl
mull
sbb
testl
cmc
pop
aam
daa
jo
mov
mov
rcrb
lahf
lock
jbe
mov
mov
call
xlat
es
lods
js
int3
adc
sub
mov
jbe
pop
push
mov
inc
mov
add
call
push
lahf
xchg
mov
mov
adc
enter
addr16
cmpsl
xchg
popa
repz
lock
pop
dec
int3
and
mov
sbb
std
ret
cmpsl
xchg
sti
test
stc
mov
in
cwtl
lods
xchg
pop
mov
jmp
and
repz
mov
fcmovne
in
fadds
inc
in
out
sbb
hlt
sbb
xchg
mov
sahf
add
pop
icebp
adc
out
rcrl
stc
mov
xchg
inc
popa
push
push
fstps
mov
stos
mov
stos
out
add
inc
push
lock
xchg
mov
jno
sbb
cmp
loopne
andb
and
sbb
push
inc
and
push
ds
lret
push
orb
adc
negl
sbb
sbb
lods
push
or
jns
popf
xor
lcall
faddl
xchg
negl
or
rcrb
add
les
es
decb
rcrl
imul
and
inc
fwait
mov
pop
xchg
jg
push
aas
nop
call
testl
pusha
push
shll
hlt
pop
jae
iret
nop
sti
push
or
jno
sub
mov
lahf
inc
mov
mov
dec
sub
scas
mov
sbb
mov
sbb
pop
and
pop
ret
mov
adc
mov
cli
cld
std
mov
sbb
ds
ss
adc
mov
fstl
call
xchg
scas
fs
adc
xchg
cmpsl
mov
add
lahf
les
add
loope
jp
push
out
movsb
cmp
enter
or
popl
ja
inc
jbe
cmp
mov
xchg
xor
adc
push
or
sbb
aam
into
xchg
xlat
mov
cwtl
push
loopne
pop
data16
mov
cmpsl
pop
jl
fsubrs
inc
mov
cmp
and
sbb
insl
jno
mov
fsts
xchg
mov
dec
mov
add
ja
daa
push
stc
daa
inc
bound
push
jecxz
xchg
and
cmpsb
mov
xor
add
xchg
jns
rorl
sbb
fldcw
stos
xor
adc
cmp
mov
shl
sti
push
and
cmc
mov
mov
mov
lds
inc
xor
and
rcll
mov
jecxz
loopew
cmp
or
addr16
lret
dec
or
rclb
jnp
shl
cmp
lret
popa
sbb
aam
es
aaa
push
insl
psrlw
pop
sub
andl
lods
add
ja
sarb
popf
inc
xor
cltd
lcall
xor
addb
dec
std
lods
mov
inc
jge
fimull
ret
dec
test
jmp
jns
xchg
push
xchg
insl
in
push
xchg
jo
dec
or
mov
nop
sub
sbb
cmp
lea
outsb
push
scas
into
test
decl
das
cli
jge
jmp
call
pop
insl
ds
ljmp
or
push
jl
int3
cwtl
fwait
jl
les
lret
in
sub
insb
xchg
sbb
jge
pop
push
iret
jae
cwtl
je
mov
arpl
cli
insb
push
dec
and
test
popf
add
jp
incl
xor
mov
fists
imul
je
int3
fidivrs
jae
loop
mov
xchg
pop
mov
xor
mov
pop
dec
sbb
test
or
inc
ss
hlt
lcall
mov
out
lock
xchg
inc
xchg
clc
inc
xlat
push
pop
mov
push
pop
dec
push
es
pop
shll
inc
lcall
add
inc
outsl
xlat
insb
loope
lds
int
test
pushf
cli
and
sti
jae
pop
pop
lods
jns
inc
push
js
push
add
fs
xor
push
adc
and
ss
fidivs
xchg
sbb
cmp
fsubs
inc
mov
adc
push
outsl
lret
jcxz
arpl
sub
orb
jl
xor
push
cmc
int3
mov
sub
jl
ja
fldt
inc
hlt
hlt
push
lret
dec
pop
cmp
pop
imul
imulb
dec
xchg
mov
aad
lods
mov
push
or
andl
or
aad
jno
cmpsl
roll
pop
sbb
lods
lods
jp
pop
movsl
pop
fwait
cmc
fdivl
dec
inc
mov
xor
cmpsl
aad
out
jo
cmpsb
cld
mov
add
mov
dec
push
mov
fdivr
inc
shlb
sbbb
out
clc
mov
pop
jne
movsl
es
nop
sub
push
outsl
sbb
es
xor
xor
xor
cwtl
cmp
cld
mov
pop
call
mov
in
ret
jne
pop
mov
sbb
and
in
aas
jge
sbb
scas
sbb
dec
sahf
sbb
mov
push
sbb
pop
sub
push
cmp
cmp
push
xor
xchg
decb
fstpt
push
cmpsb
lret
dec
jecxz
sahf
cmp
inc
cmpsb
iret
jb
push
cmpsb
aam
in
mov
movsb
push
mov
pushf
mov
jne
js
icebp
pop
js
js
mov
clc
cmp
cmp
and
clc
push
add
jae
in
xchg
cmpsb
scas
jp
pop
ds
into
push
fisubs
xor
sbb
mov
pop
push
jne
cmp
or
ret
jp
pop
iret
in
inc
sbb
ret
repz
pop
xchg
pop
lret
sbb
jno
cmp
out
mov
lret
mov
mov
les
push
pop
jge
jnp
mov
je
stos
pop
sub
jp
mov
test
insl
call
dec
jno
mov
mov
pop
dec
into
push
sbb
dec
outsl
sbb
cmp
sbb
popf
mov
es
mov
outsb
lcall
jle
xor
xchg
dec
jnp
push
cli
rcll
sub
jmp
adc
or
ror
call
imul
je
jns
xchg
test
xor
cmp
je
xlat
clc
mov
packuswb
and
into
or
sbb
imul
test
jne
mov
add
mov
mov
pusha
leave
insl
pop
push
pop
adc
pop
sbbl
call
cwtl
inc
repz
push
inc
jecxz
in
les
xlat
jns
add
mov
stos
bound
fs
test
sub
ljmp
pop
push
inc
pop
das
add
outsb
mov
and
or
push
ja
stos
daa
pop
jmp
int3
in
xlat
ficoml
arpl
mov
mov
ss
lea
cmp
add
sahf
inc
and
mov
cmp
cld
andb
les
test
pop
or
dec
cmp
lea
mov
mov
mov
mov
enter
rclb
push
xchg
push
mov
int
scas
pop
lods
inc
mov
stc
dec
xor
mov
outsl
cmp
repnz
cmp
ret
cmpb
cltd
test
jne
dec
dec
mov
insb
jg
jo
inc
enter
xlat
aaa
fildl
gs
push
rclb
and
cmp
add
add
rcrl
mov
pop
sarw
lds
outsl
lods
test
dec
sub
mov
punpckldq
fs
jb
out
mov
mov
push
and
mov
push
jb
xchg
jge
stos
mov
cmpsl
xorl
lea
outsb
ljmp
push
mov
in
push
insb
push
pop
mov
pop
xchg
adc
popa
hlt
mov
push
xor
into
adc
cmp
cs
push
popf
dec
jle
fs
jne
mov
out
arpl
mov
jmp
adc
mov
jbe
in
mov
xor
loope
adc
aaa
punpckhwd
cwtl
iret
imul
ss
xchg
pop
mov
les
push
std
xlat
cld
xlat
mov
xor
sbb
stc
or
adc
mov
dec
mov
sub
mov
sbb
test
sarl
mov
xlat
cltd
or
out
pusha
push
scas
testb
bound
std
dec
movsb
xchg
push
loopne
pop
fdivrs
icebp
dec
int
insb
or
outsb
repnz
xchg
outsl
lds
iret
mov
adc
mov
xor
stos
in
fs
inc
out
jb
shrb
and
cmp
ljmp
scas
fs
fldcw
add
dec
call
push
and
fbstp
in
jmp
xchg
push
sbb
imul
pop
scas
imul
fwait
jns
les
push
and
in
mov
enter
mov
andl
xchg
mov
inc
inc
push
dec
add
xchg
inc
imull
xor
aad
inc
mov
dec
sub
jnp
daa
add
add
aam
jns
mov
xor
cmp
fcom
mov
clc
jp
pusha
pop
inc
xchg
sti
and
jp
add
or
cmp
sub
jnp
in
or
outsl
ds
in
popa
jno
fidivl
mov
in
adc
jae
dec
popl
mov
pop
sbb
xor
mov
fisubrl
mov
mov
scas
mov
imul
and
dec
sbb
mov
sub
xor
fcmovnb
fwait
and
xor
inc
lods
push
iret
rorb
inc
dec
rclb
xor
mov
loope
jnp
stos
movsb
xor
into
arpl
or
fmul
cmp
popf
and
jns
add
dec
lcall
xchg
cld
pop
push
popf
mov
int3
xor
or
addl
sub
push
or
dec
mov
stos
xor
jp
pop
stc
jb
add
and
cld
dec
orb
les
cmp
cwtl
lret
or
cmp
pushfw
popf
lds
sbb
int
dec
cmc
shl
movsb
xor
xor
addl
ja
mov
sub
addr16
dec
sahf
mov
adc
fidivs
pop
int
aad
cmc
push
mov
push
lcall
dec
cs
aam
cmc
stos
nop
jno
or
and
cwtl
movsl
mov
std
cmpsl
repz
lea
gs
dec
dec
lock
sahf
pushf
xchg
jbe
cwtl
pushf
lock
into
sbb
push
push
push
rcl
pop
inc
out
aam
mov
mov
enter
loopne
in
int
push
mov
cli
pop
cmp
xchg
ds
call
es
xor
sbb
popa
in
in
lcall
or
pop
fiaddl
cltd
jecxz
xchg
movsl
mov
pop
scas
dec
loop
sti
push
pop
mov
cld
aad
in
inc
aas
sub
sbb
lods
xor
xchg
outsl
jnp
pop
sbb
or
xchg
stos
aad
loop
je
out
jo
rcrl
rolb
test
cmp
in
xor
test
imull
mov
inc
xchg
sbb
mov
test
loop
mov
je
adc
int
pushf
movsb
popa
push
push
cmp
push
loope
mov
pop
out
xchg
stos
sbb
fwait
shll
subb
lcall
or
loope
lds
and
insl
notb
fs
push
mov
ljmp
add
fbld
inc
mulb
aam
and
popf
jmp
jmp
aam
cli
pop
filds
rcl
xor
mov
push
add
pop
inc
icebp
leave
jle
sbb
sub
je
jecxz
flds
add
lea
pop
jle
xchg
cmp
mov
into
loop
sbb
mov
andl
sub
mov
sbb
mov
ljmp
jo
icebp
xor
xlat
fidivl
cmc
xchg
sub
dec
sub
xor
xchg
ret
sub
jg
lret
sub
lds
daa
mov
jecxz
loopne
in
cli
cmp
and
inc
xchg
adc
push
js
xchg
mov
fbld
cmpsb
pop
add
add
insb
push
inc
sarb
clc
test
cmp
je
adc
inc
adc
xchg
adc
ret
loope
add
mov
leave
xchg
out
lcall
add
xchg
xchg
or
sub
xor
aam
push
inc
mov
add
jno
leave
mov
fistps
lods
add
sahf
mov
scas
mov
movsl
ljmp
call
mov
test
sete
cld
dec
cmpsl
sbb
inc
pop
hlt
rcl
xlat
aas
ss
and
push
negb
loop
sbb
cmc
sti
pop
cmp
addr16
mov
js,pn
mov
rol
mov
xchg
jmp
sti
or
andl
xchg
jge
add
aad
add
aas
inc
bound
sub
sub
inc
test
xlat
loope
xchg
xchg
xchg
mov
sbbl
std
hlt
js
out
adc
js
mov
jnp
pop
jp
pop
bnd
adc
mov
in
stos
fcomip
and
je
mov
insb
push
ret
fcomps
jo
outsl
push
jmp
mov
and
mov
xchg
inc
cmpsl
dec
xchg
in
dec
fsubr
push
sbb
repnz
inc
hlt
mov
fs
or
fstps
mov
outsb
dec
pusha
inc
inc
mov
cmp
jmp
je
adc
icebp
arpl
dec
and
sahf
or
andb
loop
stos
pop
stos
imul
jmp
movsb
stos
dec
call
fidivrs
fs
clc
lods
adc
push
fs
adc
cmpsl
cmp
add
dec
test
push
mov
jns
lds
popa
cmp
mov
pop
mov
jge
ds
lock
adc
inc
aam
mov
out
cmp
insl
fisttps
fcomip
sahf
and
fisttps
and
mov
lea
mov
testl
xchg
adc
cmc
gs
xchg
fldcw
je
dec
mov
push
andb
inc
xchg
hlt
ret
cmp
movsl
or
in
adc
pop
sbb
cmpsb
fwait
aad
xchg
add
ss
push
cmp
testb
dec
push
push
mov
mov
xlat
sub
icebp
inc
or
lock
aaa
test
loopne
pop
test
xchg
mov
loope
sbb
test
cwtl
nop
or
cltd
mov
or
jae
dec
lret
daa
mov
pop
dec
lea
mov
call
rclb
jle
std
movsb
test
aam
inc
scas
loopne
mov
lahf
imul
ss
mov
jnp
je,pt
out
shlb
pop
xor
push
sub
data16
ret
pushf
jl
movsl
jecxz
mov
ret
lahf
sbb
pop
enter
cwtl
enter
pop
mov
xor
addb
adc
or
pop
fcomps
xchg
mov
adc
jmp
fbld
cmpsl
scas
add
cs
xchg
mov
iret
int
mov
push
pop
push
dec
push
es
pop
int
shll
nop
test
ret
pop
add
cmp
int3
xor
lret
lock
adc
gs
stos
sub
sbb
cmp
and
pop
lcall
push
adc
xchg
xchg
or
adc
fistpl
aaa
insb
jg
aam
adc
imul
mov
cmpl
push
shlb
divl
mov
sub
fcompl
subb
loope
call
icebp
in
shll
cmc
mov
inc
lods
or
push
mov
movsl
cmp
stos
add
and
lea
or
sti
loopne
adc
xor
ja
and
jp
movsb
in
inc
loopne
mov
mov
mov
out
icebp
jmp
iret
rcr
shrl
aas
and
adc
add
jg
dec
push
pop
inc
scas
mov
mov
out
icebp
jmp
iret
rcr
shrl
aas
and
adc
add
jg
dec
push
pop
inc
scas
mov
mov
jg
jmp
iret
rcrl
shrl
aas
and
adc
add
dec
push
mov
mov
xchg
mov
loope
rcrl
das
xor
mov
stc
negl
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmpsb
movsb
jecxz
stos
popf
leave
dec
and
sbb
cmp
add
add
pop
add
add
add
add
jge
and
insb
add
add
add
add
add
or
add
add
inc
add
add
add
add
fildl
jno
adc
cltd
add
faddl
adc
jo
cmp
lods
add
add
inc
add
add
cmp
add
add
pop
add
add
add
sahf
add
or
add
add
add
add
or
push
add
add
fadds
movsl
add
add
add
push
add
js
jmp
add
add
add
cmp
pop
add
add
add
fadds
faddl
leave
add
push
popf
add
add
add
add
outsb
add
add
sahf
add
add
popf
add
pop
add
add
mov
add
filds
add
movsl
add
dec
add
add
rolb
or
add
add
pop
add
add
add
aaa
add
add
cltd
add
add
sahf
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
xor
mov
or
add
push
add
add
and
add
add
add
add
add
mov
mov
inc
add
nop
add
add
enter
mov
add
add
add
add
push
add
popf
add
add
add
out
pop
add
fadds
pop
add
adc
inc
add
fadds
add
popf
add
add
add
add
add
add
dec
add
or
test
outsb
add
add
add
add
add
inc
add
mov
add
add
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
pop
add
add
add
add
add
jl
push
add
add
aaa
add
add
add
mov
lods
add
add
add
pushf
add
add
add
faddl
fadds
add
movl
or
mov
add
add
pop
add
add
aad
mov
xchg
add
add
add
test
jo
sub
cmp
mov
dec
add
add
add
add
add
add
or
movl
push
add
gs
add
add
add
add
add
add
add
add
add
add
insl
add
ja
pop
add
pop
add
add
add
add
add
inc
add
test
lods
add
add
add
add
in
add
sub
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
in
lods
add
add
add
add
pop
add
add
push
add
cmp
push
add
add
add
cs
push
and
dec
cld
stos
adc
dec
push
mov
emms
test
cmp
aam
test
pop
sub
ficompl
lods
jne
cmp
inc
push
sbb
or
sbb
js
xlat
and
mov
in
insb
add
inc
add
dec
inc
rolb
stos
lds
xor
mov
out
call
nop
push
push
out
rorb
cmp
movsb
mov
mov
scas
lcall
jne
lret
enter
repnz
ljmp
arpl
les
sub
stos
lahf
inc
adcl
call
cmc
mov
xrelease
lea
mov
xor
dec
inc
xchg
xchg
cmc
jmp
sahf
stos
push
iret
adc
cltd
cwtl
lods
int
cmp
and
jp
mov
adc
sub
xchg
iret
shlb
mov
shlb
mov
lret
or
or
jmp
dec
imul
mov
loope
decl
and
sub
push
orb
cmp
loopne
pushl
lret
lods
inc
scas
iret
jbe
pop
leave
lret
into
clc
scas
mov
or
ffree
iret
sbb
xlat
test
in
cmp
xchg
imul
adc
push
pusha
mov
lods
or
mov
jno
mov
or
pop
push
outsl
add
jns
cmp
fdivr
xor
push
xor
and
cmp
and
and
xor
repnz
mov
inc
ljmp
into
cmpsl
dec
dec
push
out
int
test
sbb
dec
cwtl
mov
add
mov
faddl
mov
xor
cwtl
dec
dec
sub
ljmp
cmp
xlat
pop
mov
or
bound
cmp
imul
nop
adc
int3
je
adc
xor
es
sbb
add
call
adc
xor
cmp
les
into
xchg
loop
mov
mov
cmp
pop
call
fstps
icebp
ss
inc
les
and
std
rorb
inc
scas
mov
repz
rorb
cli
mov
push
mov
mov
inc
or
nop
add
mov
or
ds
aad
cmp
int
shlb
or
rcrl
arpl
sbbl
push
leave
cmp
jp
std
sub
jl
xor
jae
push
js
into
mov
mov
mov
xor
pop
sub
popf
call
cmpsb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
