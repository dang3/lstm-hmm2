call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
adc
and
xor
insl
and
inc
les
iret
pusha
jae
mov
and
xor
add
adc
adc
dec
shlb
inc
mov
jae
andl
ret
push
orl
jecxz
repz
push
xor
mov
and
je
adc
pop
sahf
and
push
cmp
arpl
adc
inc
testl
lcall
out
sar
jne
out
sub
cmp
repz
or
std
loope
cmc
push
fisubl
mov
inc
sbb
in
xchg
cmc
mov
mov
roll
xchg
xor
ror
fbld
jnp
rcr
push
pushf
jnp
outsl
sbbb
lods
cmp
ror
loop
repz
cld
cmc
push
sbb
xchg
scas
push
mov
mov
nop
mov
xchg
push
xchg
xor
adc
out
cld
and
ljmp
inc
insb
mov
xchg
sbb
mov
or
add
xchg
pop
loopne
add
inc
xor
cmpsl
mov
aad
inc
out
mov
push
sbbl
or
enter
jle
mov
lock
orl
aam
fists
jmp
shlb
dec
mov
jno
movsl
jbe
push
mov
adcl
shll
and
mov
jnp
mov
mov
nop
pusha
mov
les
arpl
xchg
jo
inc
mov
ret
and
xor
add
adc
loopne
lock
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loopne
daa
loope
repz
mov
mov
fucomi
mov
cwtl
cli
pop
inc
aaa
and
xchg
push
sbb
test
sbb
mov
pop
les
subb
js
fistpll
jg
cmc
sbb
jle
iret
iret
int3
repnz
xor
cmp
xor
es
mov
cmp
adc
test
pop
dec
fs
add
ja
xchg
les
adc
call
jne
inc
lock
or
dec
fisubl
dec
adc
cmc
paddb
shl
fbstp
xor
or
leave
add
push
add
dec
movsb
shrb
lock
xchg
loope
pop
sbb
je
adc
mov
sbb
test
add
unpcklps
movsl
fucomip
jle
adc
enter
dec
dec
outsb
mov
sarl
push
adc
fiaddl
mov
push
jae
inc
and
adc
fs
sub
xor
pop
aaa
cmpsb
sub
outsb
jns
pushf
test
sti
mov
shrb
mov
mov
mov
loope
fs
xchg
aam
popa
cmp
cltd
jp
iret
sbb
call
pusha
jp
pop
xchg
std
insl
mov
negl
add
cmp
inc
popf
rcrw
adc
fcmovnbe
mov
daa
scas
xchg
or
jl
mov
xor
lea
sub
jbe
push
and
sub
mov
mov
fndisi(8087
fwait
das
shll
and
rolb
sbbl
mov
sub
mov
adcb
mov
mov
xchg
and
popa
jge
insb
lods
aad
aad
xor
xor
cmpsb
mov
xchg
push
add
cmp
testb
pop
lea
jns
inc
or
mov
shlb
pop
das
out
pop
je
fnstenv
pushf
cs
std
loope
loopne
mov
and
filds
fiadds
pop
lea
leave
mov
ja
push
test
notl
in
push
xchg
mov
cmp
mov
mov
ret
icebp
out
ret
and
add
push
inc
xor
int3
int
scas
and
jns
test
push
xchg
jl
adcb
push
lock
jae
jl
data16
pop
xor
insl
jl
shlb
xor
mov
push
lds
enter
lret
jno
bound
std
leave
sahf
imul
lea
push
loopne
dec
inc
lods
sub
cli
sbb
fstps
mov
mull
mov
and
int3
fcomps
jno
in
in
fimuls
xchg
mov
adc
fldt
std
dec
mov
cmc
cmp
sbb
and
in
test
in
fimuls
out
adc
sbb
xor
rcl
mov
mov
data16
ja
mov
loop
mov
sbb
cmp
outsl
lahf
imul
mov
sub
lret
jmp
jle
mov
pusha
bound
lods
adc
xor
mov
iret
ret
faddl
mov
xor
jecxz
fiaddl
loop
push
cmpsl
xor
sub
inc
jbe
inc
pop
sub
aam
out
test
xlat
int3
fisttpl
in
cmp
or
cwtl
cmp
out
scas
dec
lahf
aam
mov
and
mov
cltd
sub
jg
imul
outsl
cmp
cltd
cld
loop
stc
cmp
pop
xchg
test
clc
push
test
push
mov
cld
push
aam
dec
sub
cmp
pop
xor
adc
jnp
scas
das
fstps
data16
faddl
sahf
test
inc
and
pop
or
pop
icebp
scas
sbb
in
xchg
hlt
mov
mov
or
shrl
mov
call
pushf
cmp
loope
arpl
testl
cmpsl
sbb
adc
cli
adc
pop
add
outsb
adc
jge
jno
les
ss
and
dec
movsb
cmc
bound
stos
sti
bound
jge
dec
xchg
pop
push
sbb
pop
jns
sbb
out
xchg
push
fs
mov
int3
inc
mov
sub
movsl
pusha
push
or
test
jl
shl
xor
xchg
mov
cmp
test
cmp
push
stos
pushf
sbb
dec
sbb
inc
sbb
or
inc
adc
call
js
mov
int3
push
dec
call
gs
subl
clc
lahf
pop
imulb
mov
push
les
dec
inc
or
shlb
sbb
jbe
pusha
push
jns
mov
cmp
int3
xchg
pop
and
cs
push
outsb
sbb
aad
les
xchg
xchg
fs
mov
add
nop
rcrl
or
jnp,pn
xchg
jle
sbb
leave
xchg
lahf
xchg
pop
cmp
fcompl
test
fists
bound
enter
dec
mov
fs
aad
xchg
addr16
imul
arpl
lds
mov
and
fdivr
jmp
outsb
test
scas
shlb
outsb
mov
lret
mov
xor
xchg
rcl
push
cmp
sarb
outsb
pop
mov
fwait
stos
push
mov
inc
lea
push
jg
fsubp
mov
rcl
rcll
je
movsl
lret
and
test
cmp
xchg
addr16
jb
or
mov
leave
cld
out
or
cmpsb
mov
xor
xchg
out
add
pop
adc
repnz
clc
sbb
adc
mov
aas
lods
xor
cmp
xchg
shl
xor
xor
pop
aam
repnz
clc
stc
xchg
stos
xlat
cmp
sahf
sbb
push
mov
dec
shll
xchg
out
dec
popa
dec
push
inc
add
mov
shrl
fld
daa
pop
xchg
inc
xchg
and
imulb
das
in
inc
dec
cli
xchg
mov
addb
inc
pop
xchg
int3
inc
stc
pop
sarl
dec
divl
shll
sub
add
in
xlat
lcall
sbb
int
inc
inc
loopne
lods
xor
lcall
cmp
lret
repz
jle
sbb
cmp
and
jo
call
in
adc
jmp
adc
or
scas
xchg
xchg
or
cmp
mov
fs
sahf
clc
ljmp
add
lea
shl
pop
inc
or
mov
sbbl
test
jmp
inc
add
and
inc
insl
inc
mov
jb
dec
aaa
imul
aad
ret
mov
jg
jl
sub
push
mov
imul
ret
outsl
sub
into
push
subb
jo
imul
pop
in
out
push
fwait
xor
inc
lods
push
lods
rcrl
pop
jo
jns
push
push
jmp
push
das
add
or
call
add
jl
sbb
xchg
lcall
xchg
dec
or
lcall
mov
xor
push
std
inc
or
pop
sti
dec
int
mov
fisttpll
and
mov
pop
xor
sub
and
push
movsl
dec
sbb
ss
xchg
push
in
push
test
cmc
pop
sarb
test
pusha
bnd
dec
or
ret
and
push
add
fiadds
push
mov
sub
inc
iretw
adc
xchg
aad
pop
aam
xchg
lock
daa
aad
adc
xchg
jmp
cli
push
or
add
shll
lds
les
add
jge
and
cmpsb
insb
push
sahf
and
xchg
adc
arpl
xchg
add
shl
lds
rcll
mov
add
xor
mov
push
std
data16
repnz
mov
xor
xor
and
ds
movsb
adc
insb
push
xchg
cltd
mov
inc
repnz
roll
sbb
fwait
arpl
iret
and
arpl
lcall
out
icebp
call
mov
js
mov
cli
pop
xlat
cmp
xchg
arpl
mov
in
jge
inc
shrl
insl
sti
sbb
dec
jns
jae
in
mov
out
sub
in
or
pop
inc
push
mov
loope
insl
sub
nop
mov
push
jne
adc
dec
mov
aam
ja
pop
jb
mov
gs
add
sub
and
xor
or
sbb
push
adc
lock
lds
rcrl
pusha
push
mov
cmp
jns
xchg
mov
jae
dec
add
jle
jne
xchg
cmp
pop
pop
popa
xchg
xor
sub
es
ds
pop
push
das
out
or
xchg
data16
test
push
lahf
test
call
fcomps
idivb
push
add
xor
mov
adc
mov
std
push
clc
cmp
mov
xchg
addr16
jle
dec
icebp
xchg
push
sbb
mov
xlat
cmpsl
push
jo
cmp
mov
mov
inc
sbb
xorl
mov
adc
cwtl
cmp
jae
jl
jae
or
js
jb
in
mov
push
dec
mov
xchg
test
aaa
mov
sub
xchg
or
inc
jno
ret
xor
loope
insb
cltd
jecxz
insl
imul
lcall
jns
shrb
scas
fwait
jl
xchg
cmp
shll
testl
into
mov
movsl
int
pop
jmp
add
cmc
dec
mov
shll
ds
mov
mov
ss
in
mov
push
or
push
add
add
jmp
movsb
das
repnz
aas
add
xchg
push
mov
movsb
out
outsl
addl
mov
enter
inc
jae
stc
pop
movsl
cli
inc
mov
ds
jg
pop
add
xchg
mov
cld
mov
or
push
mov
xchg
jbe
add
sub
or
ret
faddl
adc
mulb
lret
bound
inc
xchg
lret
insb
cmp
test
add
pop
outsl
ja
addr16
fs
sub
pop
and
cwtl
cmp
mov
fwait
and
mov
jnp
push
ss
add
and
mov
mov
aad
js
push
pop
or
icebp
adc
adc
sbb
add
sarb
test
inc
xchg
dec
jo
into
inc
push
cmp
out
insb
loope
jbe
mov
ret
popa
mov
les
jno
sub
cmp
xor
adc
pop
int
sub
push
dec
or
roll
sbb
adc
inc
and
inc
jnp
adc
lcall
repz
sub
int
jnp
aas
mov
dec
xchg
push
add
or
xor
leave
lea
ds
mov
sub
enter
and
xchg
dec
popf
mov
mov
ret
or
cmp
jl
jns
push
gs
mov
int3
jno
rcrl
jle
push
push
outsl
mov
ja
jbe
sbb
insl
daa
arpl
or
cld
cmp
ret
in
add
testb
push
nop
lods
ljmp
jb
mov
loope
andb
js
loopne
sub
jns
fdivrp
mov
scas
sub
dec
xor
ja
out
leave
and
sarl
addl
inc
sbb
loope
sbb
push
movsb
xchg
icebp
int3
in
sub
inc
leave
mov
dec
lock
xchg
pop
inc
rorb
decl
push
mov
pop
repnz
clc
mov
cmpsl
mov
push
jno
push
pusha
lret
mov
daa
jb
test
lods
cltd
mul
mov
mov
and
inc
mov
xchg
in
rolb
adc
push
ret
outsb
xor
fcomi
test
mov
dec
xor
pop
xchg
out
jae
bound
jo
xor
out
ret
inc
fdivr
in
flds
popf
imul
or
inc
test
jne
xor
lock
aas
inc
sub
mov
and
dec
int
iret
insl
pop
pop
int3
fdiv
pop
adcb
sarb
int
jl
shlb
mov
in
in
push
movswl
add
xor
in
movsl
in
js
icebp
stos
stos
movsb
adc
dec
testl
js
push
dec
adc
sbb
cmp
out
xchg
imul
fiaddl
pop
add
fisubrl
adc
sbb
sub
xor
or
or
aad
fwait
call
lahf
push
xchg
pusha
insb
sub
pop
cmp
sub
push
inc
sbb
adc
sub
or
stos
dec
sub
inc
stos
xor
sbb
and
adc
or
fldt
rcrl
sub
inc
push
int3
dec
xor
mov
scas
insb
inc
pop
cli
js
push
jle
cwtl
mov
aas
in
imul
or
mov
mov
cs
movsl
dec
scas
dec
fdivrl
mov
sub
dec
std
push
cwtl
fmuls
mov
stc
xor
notb
movsl
mov
push
movsl
jo
pop
and
les
pop
aam
mov
cmp
movsb
mov
insb
cld
cmp
jbe
adc
inc
aad
test
testb
pop
imul
push
pop
mov
jae
cmp
je
shll
loopne
jno
xchg
add
fsts
push
dec
dec
pop
dec
xor
ss
popa
lods
arpl
outsb
mov
push
add
adc
ds
dec
ds
rcrb
mov
add
pusha
loopne
loope
and
jno
aaa
fwait
inc
xorb
sub
ss
jle
xor
clc
movsb
nop
popf
test
popa
loope
in
xorl
test
stc
jb
xchg
scas
movsb
xchg
jb
xchg
xchg
pop
in
lahf
sahf
sub
je
loope
mov
fdivrl
push
js
pushf
stc
inc
fwait
insb
inc
test
jmp
imul
leave
xchg
mov
fisubrs
xchg
pop
cmp
into
outsl
into
test
push
mov
movsl
push
scas
push
outsb
cmp
cwtl
fdivrs
mov
rolb
iret
adc
ret
pushf
ds
mov
add
cmc
jns
fisttpll
aam
sbb
jmpw
fldenv
pop
mov
mov
pusha
cvttps2pi
cld
mov
dec
jb
add
lods
pop
xor
inc
mov
ret
mov
cmp
push
mov
lods
fcomi
pop
imul
xor
stos
std
xchg
repz
fnstsw
mov
push
dec
jae
dec
out
or
ds
je
push
inc
int3
xor
cmp
hlt
mov
mov
jo
fcompl
test
lret
xchg
mov
repnz
mov
jecxz
imul
hlt
rep
cmp
ficoms
repnz
or
mov
sti
daa
sub
outsl
outsl
dec
cmp
push
fiaddl
dec
cmp
dec
push
sub
aas
ss
fnstcw
sub
push
test
add
adcl
xor
test
and
stos
ret
in
lcall
inc
adc
js
aam
add
outsb
shrb
cmp
and
iret
mov
mov
int3
ret
dec
push
mov
dec
lods
or
fdivp
sahf
sub
cmp
lcall
stos
mov
psubsb
out
and
mov
das
ret
pusha
mov
in
cmp
lahf
rorl
xor
jecxz
daa
leave
pusha
dec
dec
mov
pop
mov
xor
push
xchg
in
pop
adc
push
mov
xchg
jne
shl
rcll
out
push
pop
cmp
mov
mov
call
addr16
loope
jg
or
pushf
add
adc
sub
popa
icebp
push
inc
and
push
sbb
pop
push
in
xchg
add
out
jl
and
inc
lea
loope
jno
push
jnp
jns
popa
aas
test
sbb
push
mov
js
cmp
adc
iret
mov
xchg
jne
das
enter
stc
jno
insl
jecxz
je
sbb
xor
aam
icebp
int
ljmp
push
daa
inc
rcr
mov
pop
xorl
xor
dec
sti
inc
xorl
push
jecxz
xchg
push
dec
xor
xchg
jmp
mov
jo
pop
and
popa
cmp
mov
lret
stos
subb
arpl
adc
test
pusha
dec
pop
xor
sub
push
jge
mov
xchg
nop
fs
inc
movsb
rolb
adc
and
push
movsb
cmp
push
ja
sub
mov
mov
mov
test
sar
push
push
mov
adc
out
movsb
inc
add
rclb
adc
add
mov
sub
dec
adc
shlb
ret
lods
inc
subb
or
push
lock
js
loopne
lahf
push
lods
jns
mov
push
mulb
jb
pop
sub
rorl
adc
xchg
xlat
adc
add
cmpsb
ja
sahf
pop
cmp
adc
mov
xchg
movsl
mov
rcl
sbb
repz
insl
out
xchg
mov
stos
or
stos
xchg
mov
jo
sbb
popf
add
popf
pop
sbb
ret
loop
push
cmp
or
lds
das
xchg
fldl
lds
jg
sbb
lds
in
sub
aad
lret
inc
or
popf
pop
mov
testb
cmp
adc
lcall
sbb
inc
cli
xor
jg
xorb
cmp
mov
push
cmp
and
adc
sub
in
popa
mov
xchg
push
orb
lahf
mov
pop
dec
mov
imul
movsl
sar
js
xor
push
push
mov
out
call
dec
pop
adc
fdivl
int
cmp
scas
fxch
jns
sub
cmp
pop
in
xchg
add
test
movsl
adc
jns
imul
jo,pt
or
mov
out
das
lock
dec
mov
scas
imul
idiv
push
fnstsw
dec
in
add
or
imul
fisubs
pop
iret
or
cmc
or
jno
jne
xor
pop
xor
mov
pop
pop
sub
cs
inc
xchg
or
stos
xor
loopne
leave
sbb
mov
dec
xor
fsubl
enter
lahf
jg
xor
out
rcl
lods
and
aaa
ljmp
pop
test
enter
jl
fsubrl
aaa
imull
fsubrs
xor
adc
xchg
test
push
or
push
mov
adc
sbb
orb
pop
addr16
or
push
mov
push
into
jbe
lods
int
sbb
subb
ss
pop
jge
stos
rcll
mulb
mov
mov
dec
cld
inc
lahf
decb
add
adc
cwtl
mov
jmp
aad
or
clc
test
cmp
lahf
fwait
or
mov
fs
imul
pop
inc
push
cwtl
test
cmc
fsub
arpl
jge
test
adc
ret
pop
pusha
push
dec
adcb
daa
lods
sub
push
pusha
aaa
mov
std
push
inc
push
jl
sub
mov
push
arpl
or
lcall
lret
cmp
cmp
push
add
fwait
xchg
mov
test
sbb
cld
mov
and
pop
mov
mov
or
pop
bsf
xchg
adc
dec
xor
jns
fbld
mov
mov
shrb
pop
mov
std
clc
cmpsb
mov
rolb
mov
jae
adc
push
sbb
in
in
xorb
jl
mov
arpl
mov
in
dec
jle
daa
stos
aaa
clc
jmp
add
test
imul
shll
inc
cmp
mov
cmp
jb
xor
adc
lcall
push
jecxz
or
aas
mov
fucom
and
in
mov
lods
rolb
gs
jmp
inc
sbb
jge
lock
in
test
ja
ret
js
sarl
add
jg
mov
adc
icebp
mov
pop
mov
jae
push
adcb
into
jge
inc
or
aam
cwtl
scas
out
aas
push
sbbl
push
inc
stos
adc
mov
jo
mov
jb
movsb
cmp
test
push
or
ret
les
nop
mov
lds
shll
roll
cmc
call
ret
pop
xorb
xchg
rcl
xor
inc
adc
ss
xchg
mov
mov
inc
in
stos
pushf
add
bound
push
test
xchg
leave
popa
add
mov
push
jmp
inc
jl
push
cltd
inc
add
pop
cltd
pop
cld
call
xor
adc
or
test
adc
adc
movsl
adc
pop
and
fisttps
jp
fs
fsubrl
add
fs
lea
lahf
fdivl
and
cmp
adcb
add
sahf
psubsb
stc
mov
int3
int
scas
jmp
push
or
pop
insb
or
xor
sub
repz
les
adc
lock
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loopne
lock
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loopne
mov
shll
mov
cmpl
push
ret
and
xor
and
adc
loopne
lock
adc
inc
mov
pause
sbbl
daa
mov
pop
iret
sbb
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
aam
les
hlt
xor
pop
sub
jmp
popa
xchg
inc
mov
adc
mov
xor
and
aam
les
hlt
xor
inc
xchg
push
xchg
arpl
inc
je
fs
data16
jecxz
repz
int
fnstsw
in
sub
pop
lea
jnp
fs
iret
or
sahf
jo
inc
lcall
xchg
pop
orl
inc
push
push
mov
mov
push
pop
addr16
das
jmp
cld
pop
add
sahf
dec
and
and
dec
mov
mov
jg
test
les
mov
scas
push
icebp
mov
jno
imul
push
insb
inc
repz
dec
fwait
cmp
xchg
mov
rorl
mov
xchg
mov
jae
mov
sti
mov
inc
sub
xor
push
in
cmp
inc
nop
adc
jae
arpl
mov
mov
imul
or
insb
or
outsb
push
fsubs
xorl
cs
mov
in
ss
ret
adc
and
and
push
xchg
dec
test
push
lcall
jge
or
sbb
cs
xchg
push
andl
fcomps
shl
xchg
inc
shll
add
pop
xchg
dec
add
xor
xadd
xchg
andl
data16
mov
push
push
and
inc
nop
xor
arpl
inc
mov
adc
add
xor
and
aam
les
hlt
xor
inc
xchg
push
test
jae
adcl
je
fs
adc
add
xor
and
aam
xlat
jp
pop
out
pop
jg
fdivrl
mov
pop
insb
test
jg
arpl
out
jns
inc
cli
int
and
sbb
dec
ljmp
mov
cltd
das
pop
and
inc
mov
subl
mov
lcall
pop
fdivrs
divb
push
jb
js
push
int
sub
xor
xor
das
jbe
adc
cmp
and
inc
mov
popf
jecxz
imull
out
mov
ficoml
jmp
mov
push
jb
inc
mov
cld
mov
std
scas
jae
push
add
lcall
xchg
mov
rcl
pop
xor
pusha
test
inc
sbb
js
inc
mov
arpl
mov
and
roll
scas
test
iret
in
icebp
lds
cmp
aam
or
xor
jmp
jns
or
push
inc
sub
iret
mov
jnp
xchg
int
pop
roll
xor
mov
pop
mov
cmp
mov
inc
xchg
jb
jb
mov
push
ljmp
hlt
or
ljmp
and
scas
xchg
inc
mov
test
testb
xchg
mov
pusha
mov
mov
clc
fnstsw
nop
dec
mov
sti
dec
adc
sahf
out
and
ret
or
hlt
lods
shlb
push
mov
insl
pop
xor
jge
imul
push
pusha
jbe
pop
aaa
xchg
dec
push
mov
jo
sbb
mov
ljmp
add
adc
mov
adc
aas
fadds
xor
cltd
sbb
mov
sub
adc
sbb
or
xorl
pop
sahf
lret
cmc
ljmp
ds
sti
adc
outsl
mov
pop
xchg
jo
ljmp
cmp
into
cmp
pop
out
adc
jecxz
lds
fidivl
xchg
adc
push
push
inc
int
mov
cwtl
xchg
xor
dec
nop
mov
frstor
arpl
jl
add
inc
mov
out
in
daa
sahf
xor
idivb
and
out
sbb
loopne
push
fdivr
std
push
int
adc
dec
jp
cmpb
insl
cld
add
sbb
decl
inc
xor
push
pop
mov
arpl
fimull
and
xchg
push
in
loopne
or
mov
sub
lods
push
movb
pop
out
addr16
scas
cmp
cmpsb
mov
adc
cmpb
fstps
mov
aam
lods
fidivrl
inc
sub
sbb
movsl
int3
repz
outsb
sub
dec
push
xor
std
in
icebp
mov
mov
xchg
subl
xor
subl
mov
aaa
mov
lea
icebp
test
mov
mov
sub
push
imul
cmpsl
es
dec
pop
lock
hlt
or
mov
sub
repnz
xor
mov
jb
push
cmp
mov
negb
dec
xchg
or
adc
jmp
daa
fnsave
call
jae
cmp
or
sbb
popa
xor
ss
in
cmp
sbb
adc
sbb
out
cmp
scas
pop
icebp
mov
cmpsl
rcll
repz
sub
out
loop
pusha
pusha
add
cld
mov
movsb
test
popf
cmp
push
sbb
insb
add
test
mov
cmp
or
fs
and
jno
repz
mov
dec
cmpsb
adc
cmp
mov
fcoml
stos
fisubs
jp
or
arpl
in
das
jbe
cwtl
jmp
sbb
xor
add
push
jmp
mov
sbb
mov
pop
jle
shlb
pop
jecxz
cwtl
scas
sub
les
shlb
push
jge
pop
sub
in
adc
and
adc
out
add
mov
adc
mov
enter
add
aad
push
sahf
mov
fdivs
xchg
repz
and
add
pop
fldt
fucom
push
dec
add
rclb
jb
imul
mov
xor
and
sub
scas
cli
cmp
ljmp
gs
insl
mov
mov
add
hlt
dec
idivb
push
cmpsl
and
dec
aas
mov
sub
add
flds
lret
ret
mov
js
or
xchg
movsl
cmp
lods
fidivrl
xchg
int
push
in
or
mov
es
sbb
out
push
rcr
mov
pop
sbb
add
push
pop
adc
outsb
inc
jmp
rcrb
orl
pop
ja
mov
stos
jecxz
jae
lds
xchg
ret
push
int
scas
mov
aaa
scas
mov
mov
inc
in
ds
imul
sbb
int
out
loop
cwtl
pop
and
sub
negb
adc
inc
mov
ret
sti
outsb
inc
jge
shll
into
sbb
js
inc
test
inc
and
lock
sti
add
cmp
inc
adc
pop
aam
dec
inc
iret
and
leave
test
nop
mov
inc
iret
pusha
int3
ds
add
aam
fistpl
lcall
js
shll
stos
or
out
loopne
stos
out
outsl
pop
adc
sbb
fistpl
in
aaa
repz
xor
rclb
xor
std
leave
aaa
push
pop
sahf
scas
enter
stos
adc
jnp
mov
push
imul
adcb
ss
pop
pop
mov
mov
push
outsl
addl
cltd
shl
adc
xchg
jbe
xor
jno
or
and
gs
cmp
stc
cld
imul
pop
and
jmp
adc
mov
mov
cwtl
icebp
mov
mov
mov
jns
idiv
mov
mov
cmp
xchg
pop
pop
cmpb
addl
or
sbb
mov
rcl
scas
popf
data16
fwait
cmp
xor
inc
int3
jg
cltd
adcb
daa
cmp
sbb
pop
xchg
lahf
nop
mov
cmpsb
xor
xchg
push
cltd
pop
cmp
or
fadd
je
loope
cli
addr16
ljmp
push
pop
jnp
cmp
or
insl
pop
or
ds
jecxz
dec
push
out
test
popa
sbb
mov
pop
cmp
xchg
mov
inc
fstl
in
leave
xchg
les
std
jmp
nop
shll
xchg
push
orl
mov
and
jmp
es
sub
fisubrl
inc
nop
cltd
pop
test
jns
push
inc
jno
cmpl
fcmovu
jmp
mov
lods
lock
jecxz
int3
fiadds
lcall
mov
fwait
stos
jns
sub
test
dec
mov
popa
fnsave
dec
dec
lock
scas
test
lods
mov
pop
sbb
bndldx
mov
cmp
repnz
jp
fs
roll
add
xor
adc
jne
cmc
pop
or
mov
push
fcmovnb
jg
pop
loope
push
test
repz
jae
mov
mov
pop
xor
adc
xchg
adc
test
jno
mul
push
movsl
jo
repnz
inc
in
pop
add
ror
outsl
outsl
jbe
xor
loopne
into
push
mov
push
idivb
and
loope
push
adc
insb
sbb
test
jg
enter
add
dec
xchg
in
cli
jmp
test
pop
mov
rol
or
aam
or
adc
mov
mov
add
sbb
lock
mov
scas
add
jb
inc
fwait
cmp
cmp
test
lea
mov
pop
mov
add
xor
ljmp
adc
loopne
mov
push
sbb
arpl
push
push
cwtl
int3
lret
out
popf
mov
mov
ficomps
mov
push
xchg
push
sti
inc
sarb
mov
sub
cmp
jb
adc
into
in
push
push
bound
ja
leave
mov
imul
pop
jmp
mov
mov
mov
inc
pop
adc
add
imul
inc
xchg
push
cli
mov
cmc
jmp
insl
adc
pop
lret
sar
in
addr16
icebp
shl
mov
add
scas
out
scas
adc
cmp
adc
mov
mov
dec
popa
jno
ss
mov
bnd
dec
sub
jns
cmp
jae
mov
cmp
adc
iret
scas
adc
pop
mov
lahf
fbld
frstor
push
jge
add
lea
jl
stos
arpl
outsb
cmp
repz
xchg
test
popf
pop
subb
cltd
lds
cmp
into
mov
bound
sub
mov
mov
sub
sbb
loopne
or
push
add
loop
mov
test
mov
add
inc
andl
jns
pusha
pop
xlat
add
out
sbb
ret
or
pop
jmp
div
pop
out
adc
loope
sub
sbbl
and
jbe
sbb
fnstcw
add
and
add
fisubl
add
push
and
mov
shlb
rclb
lret
jae
stos
pop
call
outsl
pop
mov
mov
and
sbb
and
jge
wbinvd
roll
mov
shrw
xchg
fisubl
fld
mov
xor
push
nop
mov
jae
imul
movsl
rorl
jo
popf
int
cmovb
enter
pop
insl
add
or
subb
sub
xor
out
mov
and
inc
insl
hlt
mov
outsb
add
hlt
aad
in
cmp
adc
xchg
loop
xor
mov
call
fiadds
or
xchg
mov
aad
pop
pop
cmpsl
sbb
out
mov
movsb
shrb
repz
dec
dec
sub
mov
jne
shrl
cs
mov
or
cmpsb
in
adc
frstor
xorb
jbe
jp
mov
popa
aaa
hlt
add
rolb
icebp
test
cmp
sub
and
or
cmpsb
out
inc
movsb
gs
xor
loop
daa
sub
lret
fisubrs
movsl
ret
push
add
fcoml
and
mov
mov
cmp
pop
push
leave
das
mov
and
xor
inc
jno
hlt
sbb
add
ljmp
mov
cli
push
xchg
dec
js
or
jnp
dec
repz
or
in
mov
hlt
nop
cmp
outsb
jmp
push
scas
jp
push
add
int3
outsl
mov
jmp
mov
and
addb
xchg
jbe
push
inc
fisubrl
mov
aas
cmp
lahf
pop
stos
mov
xchg
scas
inc
in
clc
es
xchg
icebp
dec
imul
mov
add
aas
xchg
add
and
add
frstor
popa
adc
rcrl
cmp
adc
stos
xor
pusha
rorb
mov
imul
xchg
pop
cmp
nop
jnp
push
cli
add
cmp
sub
adcb
ret
out
sbb
mov
in
or
push
inc
and
push
incb
sbb
jl
sbb
insb
sub
jbe
icebp
cmpsl
mov
mov
scas
adc
mov
insl
and
xchg
xorb
xor
pop
push
les
jecxz,pn
mov
stc
jle
bound
mov
fldt
cmp
pop
addr16
jecxz
inc
pop
btr
addr16
lds
nop
popf
inc
repnz
stos
lea
jmp
ds
pop
ljmp
gs
sbb
and
fists
lods
aaa
mov
outsb
xchg
icebp
ljmp
xor
pop
loope
jbe
sbb
pop
adc
adc
push
cmp
or
push
push
into
cmp
mov
rcrb
pop
es
scas
xchg
repz
test
sar
sub
pushf
or
adc
mov
lods
or
add
and
loopne
rorl
inc
pop
pop
rclb
sub
mov
mov
and
orb
mov
rcrb
xchg
jl
push
or
add
dec
jge
lea
or
mov
sbb
int3
mov
fildll
dec
dec
push
xor
insb
cltd
lahf
xchg
cmp
call
sahf
out
addl
fdivp
and
testl
pop
and
sub
cmp
xchg
jne
lret
xchg
push
pusha
icebp
rcrl
push
nop
dec
mov
mov
lods
adc
sbb
mov
add
popl
inc
andl
mov
xlat
test
hlt
pop
nop
lea
rclb
xchg
nop
addr16
out
adc
jl
xlat
aam
out
rol
jmp
push
jbe
push
loope
out
call
ja
or
push
lret
imul
pop
push
sbb
lret
jns
push
xor
bound
push
push
cmpsb
into
and
scas
dec
mov
mov
in
xor
cmc
cmpsl
imul
inc
movsl
inc
daa
jns
mov
adc
or
adc
push
jmp
pop
adc
inc
movsl
lcall
dec
xor
mov
sti
mov
inc
cmpl
std
xor
icebp
sbb
cmp
jmp
xchg
rcrb
add
mov
sub
inc
cmp
pop
jle
orl
xor
dec
and
icebp
stos
jge
dec
push
aaa
sbb
les
adc
push
jge
push
or
pop
cs
push
push
aaa
jo
daa
pop
cmpsl
repz
popa
xor
in
mov
andb
xor
push
mov
xchg
adc
jle
sub
outsl
call
in
inc
mov
adc
xor
adc
mov
cld
xchg
inc
pusha
pop
into
rcr
or
sbb
repnz
jae
inc
sbb
testb
mov
fists
leave
test
xchg
lcall
mov
push
jns
into
add
inc
adc
std
sub
lods
push
adc
pop
dec
mov
cmpsl
iret
pop
push
jnp
pusha
outsl
gs
shll
jo
jge
push
pop
int
xchg
shrl
fisttps
pop
push
dec
lock
cmp
cli
and
xchg
fstpt
addb
mov
sahf
and
mov
mov
xor
jae
jmp
repnz
mov
jmp
and
nop
add
mov
adc
push
adc
or
jns
dec
iret
push
stos
in
iret
sbb
xorb
adc
and
lods
fimull
rolb
leave
insl
out
cltd
out
inc
lods
ror
aam
lods
jae
loop
dec
ja
cmp
ficomps
rol
cmp
sub
movsl
testb
hlt
jnp
mov
mov
fisubs
xor
mov
push
mov
loop
test
daa
push
xor
xor
add
lea
mov
xchg
insl
lret
subb
add
das
cmp
inc
mov
rcrb
push
in
outsl
bndstx
cwtl
ljmp
push
xchg
cmp
std
pushf
mov
mov
cmc
push
mov
and
cmpsl
mov
into
xor
dec
rclb
adc
arpl
mov
in
inc
pop
ljmp
cvtdq2ps
jno
imul
sbb
sbb
dec
jle
cld
rorb
repz
mov
test
or
pop
sub
push
inc
movsb
je
sbb
js
rolb
cmp
sbb
cmpsb
ret
add
das
sub
arpl
mov
nop
imull
sbb
pop
fwait
lods
cmp
cmp
pop
test
jg
and
push
mov
add
dec
sub
outsl
jo
int
cmp
jnp
in
mov
sahf
mov
and
aam
lods
mov
cltd
rep
pop
sarb
push
push
jo
and
into
inc
popf
xor
gs
inc
repnz
pop
jp
add
outsb
jmp
adc
aad
mov
mov
and
cmc
mov
fstp
mov
data16
mov
jno
ss
pop
popl
cmp
xor
ret
ja
mov
daa
jo
pop
or
jns
jnp
or
aas
xchg
adc
pop
xor
idivb
addr16
addr16
ret
push
mov
loop
jp
sub
or
cmpsb
out
push
test
jp
addr16
pop
adc
test
rcrb
les
hlt
sti
incl
mov
rcrb
add
inc
clc
mov
xchg
and
stos
ret
mov
pushf
stc
cmp
and
orl
ss
jle
push
inc
mov
dec
test
or
cld
fisttpl
call
daa
add
xor
outsl
mov
div
mov
sbb
xorl
pop
sbb
sbb
sub
add
dec
iret
pop
int3
std
or
fcoml
add
and
push
test
sub
sbb
xchg
lcall
loope
pop
daa
mov
push
enter
mov
lea
push
mov
movsb
nop
adcb
mov
pop
cmpsb
mov
aad
or
test
pop
pop
mov
cmp
push
push
pop
adc
xchg
shl
inc
arpl
test
dec
push
mov
xchg
push
push
data16
xchg
int3
pop
adc
fisttpl
aam
imul
mov
int
and
in
inc
in
cmpsb
imulb
push
ljmp
xor
in
mov
fwait
imul
ljmp
inc
jp
lcall
adc
aad
mov
add
out
enter
pop
cltd
xchg
aad
xor
cltd
xor
insb
adc
cwtl
testl
sub
xor
or
arpl
sbb
aam
movb
ds
aaa
sbb
repnz
push
rclb
xchg
mov
jne
fwait
ds
ret
sbb
xchg
ret
cltd
adc
mov
dec
add
shl
incb
or
orb
daa
mov
mov
inc
stos
inc
scas
jno
or
inc
xor
sub
xchg
jne
jmp
mov
jmp
sti
pop
sti
sub
dec
aas
dec
and
sbb
adc
mov
loope
xchg
inc
in
or
sbb
cmp
push
cs
call
mov
scas
stos
fiadds
xchg
jp
and
add
lods
cltd
call
sahf
test
fwait
xor
fcomps
jnp
add
aam
imul
ds
add
mov
pop
adc
mov
leave
ss
pop
sbb
push
push
lock
gs
fnsave
ds
pop
addr16
hlt
test
sbb
push
stos
inc
cmp
xor
cmp
aas
dec
pushf
shlb
ss
outsb
mov
dec
cli
jb
cli
aam
mov
pop
pusha
int3
xor
mov
mov
outsl
mov
aad
aas
insl
cmp
cli
ljmp
shl
mov
int3
xchg
pop
cs
fwait
add
arpl
xor
cmp
add
iret
loopne
movntq
pop
gs
mov
call
and
in
or
lahf
xor
adc
int
lods
iret
andl
stos
scas
xchg
repz
push
and
and
cmc
push
dec
iret
psubq
mov
xchg
jo
pop
out
mov
jbe
or
sbb
enter
xor
fisubrl
test
cwtd
mov
jmp
out
int3
stc
scas
adc
cld
mov
jne
push
idiv
loopne
dec
push
pop
dec
std
lret
mov
xchg
xlat
mov
pop
aam
dec
add
pop
xchg
jno
push
int
mov
je
fwait
data16
mov
xchg
inc
int3
push
jp
ja
jp
or
push
fnstcw
cmpsb
data16
ficoml
xchg
insb
jle
inc
xchg
pushf
push
cmp
daa
enter
xchg
sub
fsubl
mov
sbb
jmp
mov
jo
mov
add
lret
mov
or
cmp
lcall
jl
into
call
add
and
adc
inc
ret
mov
iret
addl
lcall
mov
insb
dec
jno
fstpt
daa
jle
xchg
les
pop
xchg
lock
cld
pop
int3
xchg
xor
jmp
mov
xor
mov
xchg
testl
cmp
xchg
fildll
or
ss
xlat
popf
test
std
mov
jbe
scas
mov
pop
adc
in
xchg
push
test
jae
adcl
je
fs
adc
add
xor
and
aam
les
hlt
xor
inc
xchg
push
test
jae
adcl
je
fs
adc
add
xor
and
aam
les
hlt
xor
inc
xchg
push
test
jae
adcl
je
pusha
ret
adc
add
xor
and
shlb
rclb
push
test
mov
fs
insb
out
or
mov
pop
jnp
dec
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
and
imul
les
cmp
xor
inc
push
aaa
inc
daa
popa
pop
popa
pop
xchg
testl
cmpsl
icebp
xchg
loope
adc
addr16
push
and
pop
inc
daa
jno
popa
pop
xchg
testl
cmpsl
icebp
xchg
loope
adc
inc
push
and
sub
jns
je
test
pop
xchg
loope
or
or
xchg
add
ds
jo
pop
jb
aaa
es
ljmp
mov
inc
shlb
xchg
lea
cwtl
push
aaa
mov
push
adc
sub
mov
dec
daa
jp
xchg
rclb
and
addr16
ficoms
out
and
mov
xchg
decl
rcll
jns
mov
cwtl
xor
leave
cmpsl
mov
adc
popa
sbb
jle
loop
mov
cmp
leave
cs
std
loope
jns
je
popa
test
inc
add
hlt
pop
sahf
stc
imul
xchg
mov
outsl
or
xlat
xor
scas
lods
push
and
pop
pusha
adc
testl
cmpsl
icebp
xchg
loope
adc
xor
inc
push
aaa
inc
daa
jno
popa
outsb
in
lds
xchg
shlb
jns
mov
pop
xor
and
outsb
adc
add
jmp
jmp
cltd
jecxz
cmp
push
dec
add
and
pop
xor
and
push
shlb
shll
ja
xor
inc
push
aaa
inc
daa
jno
popa
pop
xchg
testl
cmpsl
icebp
xchg
loope
adc
xor
inc
push
aaa
inc
daa
jno
popa
pop
xchg
testl
sbbl
lds
sahf
pop
cld
mov
jl
push
jmp
adcb
mov
mov
cmpsl
cld
push
sub
pop
mov
sub
mov
dec
pop
mov
inc
mov
xchg
sub
int
mov
test
add
ljmp
inc
xor
xchg
je
push
sbb
js
rcrb
jbe
xor
mov
divl
jnp
jbe
push
pop
stos
outsb
xor
lock
xchg
rcrb
xchg
sbb
xchg
lock
and
mov
in
dec
sbb
push
rcrl
cmp
aas
adc
in
shlb
adcb
and
ds
bound
les
pop
in
cmpsb
std
push
sbbl
or
sbb
xor
pop
cltd
push
lret
push
inc
dec
mov
jmp
pop
jb
bound
stos
out
cmp
add
pop
mov
sub
nop
xor
cmpsb
pop
sub
out
jae
ja
ret
ljmp
xorl
ss
mov
int
jg
shl
push
push
jg
rcrb
loope
or
pop
test
push
int
pop
packssdw
cmc
dec
sub
xor
test
fidivs
fsin
ficoms
add
mov
mov
cmp
repnz
xor
imul
mov
mov
xchg
inc
add
pop
pusha
int
mulb
sbb
jns
push
cmp
pusha
iret
pop
mov
sub
cmp
xchg
int3
leave
xchg
cli
out
stos
pop
jmp
sbb
mov
cmpsb
sbb
push
jl
or
and
rcrb
push
jno
inc
pusha
icebp
inc
in
ss
cld
std
xchg
pop
je
movsl
xlat
popf
es
mov
sahf
jp
scas
in
mov
pop
lea
pop
gs
lret
jae
aam
jb
sub
sbb
aaa
cmp
cltd
sub
loop
or
enter
in
subb
mov
sub
pusha
vorps
push
jle
jns
mov
sub
adc
int
nop
sahf
fistpl
inc
xchg
inc
xor
push
idivb
adc
xchg
pop
loop
jbe
sbb
fdivrs
rolb
aas
test
into
shlb
mov
jbe
xchg
xor
pop
nop
push
or
imul
lds
mov
cmc
stc
jg
inc
sbb
adc
pop
or
lods
xor
xlat
std
xor
push
jno
push
mov
mov
mov
mov
movsb
jns
or
popf
xor
cmp
xchg
cmp
daa
scas
adc
movsl
stos
fldl
mov
jmp
and
dec
dec
add
lock
stos
bound
and
lds
ds
pop
inc
ljmp
dec
dec
lods
out
fsub
jp
jbe
cltd
mov
adc
jmp
rolb
pop
jle
push
push
stos
cwtl
cld
lods
pop
dec
and
imul
ds
mov
cmp
jae
fcomp
loop
push
pop
dec
fdivrs
out
pop
stos
sbb
and
cmp
test
or
daa
sbb
sub
jmp
jmp
or
jo
sbb
je
mov
into
repnz
push
push
leave
insb
xchg
mov
mov
sub
das
mov
sbb
incb
sbb
movsl
adc
pushf
aad
cmp
push
sub
cld
test
iret
insl
push
push
dec
mov
inc
xor
into
xchg
aad
xchg
xchg
std
push
dec
mov
add
xor
push
add
jo
pushf
mov
push
arpl
and
ficomps
repz
adc
inc
add
test
addb
call
xchg
test
add
pop
outsb
call
aaa
push
push
and
aam
dec
test
aas
lock
sub
rcrl
jne
add
push
cmp
nop
hlt
fldenv
stc
les
nop
jl
mov
xchg
fsts
push
jp
cld
adc
aaa
mov
jmp
mov
pushl
in
inc
mov
pop
push
inc
inc
add
xor
pop
dec
clc
ja
fadds
and
pop
imul
jns
enter
out
adc
sahf
mov
cmpsl
mov
mov
cmp
cmp
sub
sti
push
test
cmc
scas
and
test
cmp
push
pop
add
xlat
lods
das
aaa
into
and
into
scas
sbb
mov
call
movsb
movsl
sub
flds
clc
aas
mov
xorl
fstpl
pop
inc
pop
mov
push
jnp
pusha
inc
adc
mov
into
aas
loopne
imul
inc
rol
out
sub
in
popa
inc
jnp
lods
nop
mov
mov
sbb
fs
mov
das
push
xor
loope
cmp
xchg
rclb
adc
aad
sti
cmc
xor
sub
loopne
push
idiv
jae
mov
sub
movsb
inc
test
add
mov
push
jge
nop
lods
xchg
lds
xorb
std
call
fistl
push
jg
test
shr
sub
mov
adc
clc
ja
xor
xlat
shl
repz
push
out
xlat
pusha
mov
out
pusha
ret
gs
and
push
mov
loopne
mov
jle
mov
cltd
mov
xchg
dec
push
jbe
gs
pop
ret
push
jg
fimull
inc
or
mov
and
cld
xchg
fxch
cmp
out
xchg
aam
xor
insl
mov
outsb
mov
inc
movsb
flds
jl
mov
xlat
inc
in
mov
push
out
mov
mov
and
shll
pop
adc
loope
movsl
in
repz
inc
aam
ljmp
sub
mov
nop
cli
adc
mov
mov
inc
and
xchg
rcrb
movsb
loop
shr
xchg
iret
push
xlat
push
add
stc
data16
pop
pop
add
xlat
mov
cltd
sub
mov
call
cmp
int3
jge
ss
xchg
inc
popf
pop
fwait
daa
xor
add
test
inc
cwtl
das
xor
xor
arpl
and
call
test
push
testl
into
push
add
or
jl
pop
mov
dec
sarb
daa
push
mov
xchg
movsb
push
jae
push
pop
lret
out
mov
push
cmp
jb
push
popa
or
cld
xlat
adc
out
dec
aas
sbb
cmp
sub
fimuls
jne
clc
mov
popf
jo
jecxz
stc
jno
push
insb
in
imul
stos
test
adc
push
push
dec
icebp
shll
dec
mov
and
mov
xchg
mov
xchg
lret
mov
lahf
jp
inc
filds
inc
lea
inc
mov
mov
repnz
and
lahf
test
and
adc
push
jmp
pop
pushf
pusha
sub
xchg
dec
cmp
popf
mov
sbb
aam
cmp
dec
stc
mov
in
or
adcl
sbb
test
jl
call
fldcw
data16
nop
sahf
dec
jbe
cmp
clc
test
fstpl
ja
scas
xchg
and
inc
int3
sub
mov
xor
hlt
outsb
push
dec
cmc
xchg
cmpsb
add
cltd
lcall
xchg
inc
lret
scas
pusha
jecxz
test
mov
jae
out
sub
sub
push
fildll
shrb
mulb
js
fimuls
mov
push
xchg
test
xor
pop
mov
pop
add
out
lahf
xchg
movsb
jbe
lret
das
fwait
add
dec
fsts
arpl
das
imul
lret
mov
push
movsb
jo
or
push
and
into
mov
daa
iret
jle
pushf
pop
ret
out
add
cmp
xchg
push
imul
add
or
push
pusha
jnp
sub
add
mov
outsb
stos
xchg
sbb
mov
xor
jae
ss
scas
lds
loop
mov
std
cmp
mov
stos
outsl
hlt
clc
cmpsb
mov
or
pusha
mov
jb
or
push
jbe
and
dec
cld
jns
push
icebp
movsl
dec
nop
dec
lods
add
push
mov
mov
pusha
gs
outsb
xchg
and
lods
cli
or
mov
rorb
lea
or
testl
and
adc
sti
cmp
ss
cmpsb
std
jecxz
adc
or
aad
push
sbb
clc
icebp
pushf
inc
jbe
xorl
aam
jle
test
and
push
idivl
loope
xor
hlt
mov
dec
mov
mov
add
jo
shll
xor
push
push
repnz
clc
adc
testl
mov
fiadds
xchg
jge
popa
das
mov
sbb
test
and
shlb
enter
mov
mov
jp
mov
lds
dec
iret
out
xor
push
adc
add
mov
test
out
test
ss
fidivrl
inc
jbe
mov
lret
aad
mov
std
sahf
and
inc
xor
add
das
adcl
sbb
xchg
out
in
xchg
in
mov
xchg
std
sbb
mov
cmpsb
fs
leave
cli
fsubrs
nop
str
pop
dec
mov
mov
cmp
xor
and
mov
mov
enter
sbb
and
mov
jo
lock
inc
mov
imull
jl
lahf
outsb
repnz
dec
inc
mull
mov
stc
mov
cmp
cltd
mov
cmp
stc
xor
pusha
dec
idivb
push
cmc
xor
xor
outsb
outsb
mov
stc
movsb
mov
mov
cli
push
adc
les
in
cmp
push
push
ds
fstpl
or
and
test
out
pop
mov
push
cmpl
lahf
xor
pop
arpl
shll
mov
imul
into
jmp
xor
push
mov
enter
lahf
inc
js
or
sbb
jbe
mov
adc
jo
mov
fs
jae
out
jae
arpl
mov
sub
dec
rorl
push
daa
jmp
adc
inc
movsb
jne
push
sarl
cmp
lret
subb
ret
fldt
stos
iret
jge
xchg
adc
cmp
bound
mov
je
in
add
ja
into
pop
dec
mov
cld
and
ret
jg
iret
js
cmp
and
mov
hlt
in
sbb
jno
fistpll
jae
or
mov
push
mov
movb
add
xchg
std
sbb
or
fldt
pop
xor
aas
rcll
inc
je,pt
repz
or
test
in
xor
ds
loope
sub
test
rcll
repnz
mov
pop
ret
mov
imul
into
add
jmp
sub
aam
jo
out
outsb
xchg
mov
add
add
fldenv
in
dec
inc
push
cmp
into
xchg
add
mov
frstor
arpl
pop
push
es
xchg
xchg
inc
mov
and
gs
movsl
and
xchg
sbb
mov
sbb
shlb
or
jb
cmp
stos
lret
xchg
stc
add
arpl
repz
or
sarl
js
pushf
out
xor
jmp
loop
mov
ret
inc
inc
cmpsb
dec
xor
fstps
lea
or
out
adc
call
inc
adcb
or
test
movl
push
repnz
enter
fsubl
cmpsl
add
cmp
xchg
lret
dec
arpl
inc
and
pop
xchg
sti
cmpsb
mov
loopne
xor
add
clc
mov
dec
lret
mov
push
jb
adc
leave
aaa
imul
sbb
mov
cmp
ds
or
xchg
stos
xlat
fisubl
sub
jno
mov
jbe
movsl
pusha
sub
pop
es
add
push
fcoms
dec
pop
enter
dec
push
mov
arpl
lret
call
insl
add
xor
adc
shlb
mov
sub
xor
mov
and
jae
xchg
pop
cmp
or
lret
mov
push
jmp
into
xor
adc
or
and
mov
mov
js
and
out
xchg
cmp
inc
in
and
dec
and
mov
mov
dec
loop
shlb
mov
add
cmp
out
test
mov
loope
fcomps
adc
mov
sbb
mov
aas
push
out
mov
mov
xorb
lods
sub
push
jmp
and
les
pop
push
cmp
popf
mov
mov
dec
xor
jo
push
mov
and
addr16
dec
xchg
inc
sub
mov
push
repnz
xchg
dec
dec
movsl
call
shll
fsubrl
cmc
movq
into
mov
les
xorb
jge
jb
mov
mov
scas
ja
inc
xor
ja
mov
sub
popf
and
es
ja
popf
pop
jle
clc
movsb
into
ds
fwait
test
push
nop
jg
popf
add
arpl
lds
adc
xor
push
loope
fwait
sub
xor
or
scas
cs
cmp
xchg
ret
test
mov
stos
sti
stc
inc
dec
int
jne
push
out
fistl
fimuls
jmp
lahf
notl
enter
jb
mov
stc
cmpsb
cmpsb
addr16
mov
aam
jle
inc
outsb
fbstp
add
icebp
hlt
cmp
mov
out
sub
xor
fwait
movsb
xor
lods
mov
push
fxtract
and
pusha
lock
cmp
pop
push
bound
dec
jns
into
sub
or
fs
in
repz
and
in
or
dec
push
fisubl
mov
lock
bound
dec
or
dec
data16
mov
jo
xlat
arpl
pop
fwait
iret
cmp
mov
dec
test
mov
mov
push
dec
mov
addb
loop
xlat
jne
or
inc
std
movb
xchg
push
xchg
int
in
es
push
movsl
mov
out
jb
dec
and
icebp
sub
or
fistl
xor
imul
fisttpl
insl
notl
jbe
and
add
sub
cltd
inc
insb
mov
mov
jle
sbb
cmpb
add
sti
es
mov
negb
scas
and
jne
ficomps
jmp
fcomp
cwtl
cmp
push
ljmp
dec
icebp
leave
add
outsl
in
pop
push
dec
push
add
in
fcomip
in
out
push
mov
mov
inc
pop
les
rcrb
fs
xor
lods
bound
add
cmp
or
rolb
mov
adc
xor
adc
outsl
data16
das
mov
fs
stc
inc
stos
das
pop
or
in
jecxz
fsubs
push
addr16
sub
data16
mov
sbb
aam
pop
inc
mov
hlt
movb
mov
inc
daa
imull
test
and
jmp
pop
sbb
fdivrp
jmp
lcall
std
test
or
addr16
mov
in
rorl
mov
sbb
sub
adc
sarb
sub
std
mov
jge
xchg
cmpsl
addr16
inc
shl
push
xor
das
jne
sbb
lcall
faddl
data16
pop
insl
pop
and
add
inc
andb
sbb
xlat
int3
fldl
ja
dec
addl
jae
xor
mov
test
shrl
frstor
stos
sbb
jbe
lea
out
repnz
fsts
cmpsb
sub
aam
insb
push
arpl
ret
lahf
jecxz
movsl
inc
ja
or
sub
loopne
jnp
cmpsl
jnp
int
repnz
mov
inc
sbb
loopne
ret
test
shlb
dec
and
or
adc
mov
cwtl
daa
test
loope
cmp
push
iret
stc
pop
in
mov
dec
lret
xchg
lds
and
cmp
aas
mov
mov
or
lea
adc
imulb
les
int3
daa
inc
mov
add
cli
dec
mov
aad
imul
out
dec
sbb
mov
push
xor
enter
mov
inc
in
int
int3
cltd
ret
into
or
rolb
dec
in
sbb
jle
jle
aas
adc
jnp
insb
clc
cmp
jne
push
and
dec
stos
adc
adc
int
sahf
es
xor
push
jo
icebp
cmp
sbb
pop
hlt
pop
sub
lcall
icebp
int
ret
mov
jle
cmpb
push
cmp
xor
cmp
adc
stos
dec
in
pop
popf
mov
pop
and
xor
pop
push
mov
std
adc
adc
jo
das
ljmp
std
cmp
rcrb
sbb
sbb
add
lods
mov
adc
cmpsb
push
pop
adc
fnsave
cmp
sub
xorl
loope
int
cwtl
cli
mov
pop
sbb
pop
mov
or
lods
movsl
lods
mov
movsb
xor
out
mov
and
sbb
lahf
and
in
pop
cmpsb
test
xchg
and
adc
fsubrl
push
xchg
ljmp
mov
leave
push
pop
push
lret
imul
lods
push
cmp
sahf
ja
push
dec
add
adc
fadd
push
mov
movsb
mov
or
pop
loope
imul
jne
mov
jbe
pop
xchg
sub
dec
jns
xchg
fwait
sbb
add
cld
test
in
scas
pop
xchg
xor
ja
push
out
insl
shrb
pop
fldenv
push
popf
fisttpl
jg
or
push
pop
stos
pusha
or
jge
pop
lret
stos
test
push
and
pop
into
loop
or
cld
or
loop
mov
dec
pop
aam
icebp
shlb
cmp
push
sub
test
lahf
pop
lea
xchg
xchg
sub
push
aad
and
decl
stos
add
lods
mov
repnz
and
ljmp
add
ljmp
arpl
rcr
sub
add
jo
mov
inc
inc
aam
sbb
adc
lods
pusha
stc
mov
mov
jb
fstpt
sar
sub
out
repz
pop
sar
cmp
bound
outsb
xor
and
loopne
data16
popa
pop
int
add
or
push
add
jp
es
dec
bound
pop
fidivl
out
push
das
push
xor
mov
inc
adc
in
sahf
mov
push
dec
jne
inc
dec
call
cmp
xchg
xchg
call
imul
dec
xchg
xchg
std
pop
in
xor
adc
inc
xchg
mov
das
xor
sbb
out
insb
sahf
test
sahf
cmp
mov
mov
sub
mov
mov
jl
mov
jns
ss
jne
adc
dec
out
jb
cmp
fmull
iret
cli
adc
test
stos
rolb
mov
xor
xor
add
enter
pop
sbb
pop
shrb
repz
sub
lods
and
les
scas
sbb
sbb
mov
xor
int3
mov
gs
cmp
clc
sub
mov
or
mov
out
xor
or
push
shlb
mov
xchg
out
xchg
jns
or
cmovs
push
popf
outsl
sub
popa
gs
mov
jo
mov
out
je
adc
sbb
jecxz
stos
adc
inc
repz
loopne
xlat
mov
and
lret
popf
icebp
dec
jnp
pop
jge
call
adc
dec
popa
ret
add
dec
jae
dec
faddp
pop
stos
test
rorb
punpckldq
xor
sbb
outsl
shrl
adc
fwait
and
mov
xor
xor
cwtl
jno
loop
sub
popa
lods
mov
xor
mov
mov
pop
daa
pusha
push
filds
inc
pop
jmp
inc
scas
aaa
in
sub
pop
scas
outsb
or
mov
cmp
fildl
insl
cmc
mov
test
outsl
xor
fdivr
ret
inc
xor
sbb
in
in
mov
das
push
ret
push
sbb
and
ficompl
pop
jnp
xlat
xor
inc
shll
sarb
call
stos
rcll
xchg
inc
sub
into
stc
mov
sub
xorb
pop
aad
xchg
popa
add
addr16
out
imul
idivb
les
inc
push
xchg
decl
enter
or
sub
push
ss
lcall
or
shll
shll
loope
adc
xor
inc
push
aaa
inc
daa
jno
popa
pop
xchg
testl
cmpsl
icebp
xchg
loope
adc
xor
inc
push
aaa
inc
daa
jno
popa
pop
xchg
testl
cmpsl
icebp
xchg
loope
adc
xor
inc
push
aaa
inc
daa
jno
pusha
pop
nop
testl
cmpsl
icebp
xchg
loope
adc
int
push
and
es
sahf
clc
sub
add
xor
and
jne
sub
xchg
adc
inc
aam
les
jae
adcl
mov
push
roll
repz
xor
hlt
jae
orl
cmp
jecxz
repz
ja
mov
inc
xchg
and
notl
insl
mov
mov
js
lret
pop
cmp
sub
fdivr
mov
xor
outsl
dec
insb
inc
pop
mov
sarl
mov
movsb
int3
movsb
adc
push
xchg
xor
jmp
or
cli
inc
xchg
add
inc
sub
lods
mov
or
loopne
jae
addl
xor
adc
je
test
les
pop
adc
clc
mov
sub
in
lret
dec
les
repz
add
sbb
mov
jae
mov
xor
out
call
dec
jecxz
inc
xchg
push
nop
shll
add
inc
adc
adc
push
roll
repz
mov
pushf
and
push
shll
jae
out
lock
xor
mov
or
jbe
push
loope
lret
lds
add
rolb
daa
cwtl
jbe
adc
in
shlb
mov
ss
or
xchg
popa
in
push
xchg
roll
repz
movsb
inc
aam
les
jae
adcl
mov
push
roll
repz
movsb
inc
aam
les
jae
adcl
ds
and
mov
insb
mov
ds
test
scas
in
pop
fld
cltd
jl
nop
out
xchg
pop
xor
test
stc
mov
dec
pop
mov
jl
jb
jbe
movsb
ret
xor
insl
and
in
mov
loope
clc
pop
xorl
lods
pop
mov
inc
mov
xchg
js
cmp
rorl
jae
mov
icebp
lret
fisubrl
xor
leave
popa
sbb
dec
push
loopne
xor
cmp
aam
int
inc
sbb
sub
xchg
movsb
xor
aam
jnp
mov
lds
sub
mov
lret
ficompl
insl
jmp
and
inc
and
and
int3
pop
std
xchg
clc
rclb
pop
push
fs
out
ficoms
out
movsb
stos
or
jae
jbe
in
add
push
mov
pop
pop
dec
rol
inc
sbb
fxch
inc
add
jmp
jae
sub
or
out
xor
push
shl
ds
enter
sub
jnp
add
std
lds
jnp
mov
pusha
leave
fidivs
inc
cmpsb
test
sbb
js
add
adc
arpl
cwtl
outsb
sub
pop
out
jae
lods
add
stc
aad
pop
cmc
fisubrl
and
cmp
int
pushf
adc
lods
out
sahf
pop
loopne
push
push
dec
test
lahf
or
fs
inc
fs
push
sub
ljmp
shlb
pop
xlat
fwait
pop
fldcw
or
fcoml
mov
imul
xor
mov
push
sbb
outsl
push
leave
sub
icebp
cmp
lcall
mov
fs
jo
and
xor
nop
pop
pop
adc
add
rclb
jno
pusha
ficompl
and
or
cmp
dec
and
xlat
jge
xchg
xchg
add
jae
or
andl
mov
stos
rcll
and
push
in
sub
fildl
and
in
cmp
xor
cli
mov
sub
sbb
aad
or
ficoml
mov
xor
dec
push
test
sti
sar
mov
sahf
out
push
mov
pop
jo
lds
int
jl
or
cmpsb
mov
and
mov
xor
sub
mov
or
pop
or
xor
push
dec
and
cmpsl
inc
gs
addr16
push
test
adc
pop
imul
push
mov
add
es
or
out
mov
fidivrs
adc
ljmp
into
inc
aad
mov
fadd
aam
enter
pop
mov
mov
push
es
js
faddp
push
pop
and
sub
cmp
inc
stos
inc
xor
mov
mov
int
add
fwait
jno
test
mov
daa
dec
push
cmp
dec
je
inc
pop
and
adc
sub
push
icebp
nop
sub
pushf
sub
xor
les
adc
mov
insb
pushf
lods
aam
cli
and
push
sbb
sub
xor
mov
sbb
cltd
or
mov
mov
adc
push
fmuls
push
lds
nop
fdiv
push
cmp
cli
sub
jl
mov
sub
push
xchg
xor
and
adc
sbb
cmp
push
sub
mov
jb
sbbb
push
add
push
mov
movsl
mov
out
mov
nop
adc
sti
mov
mov
int3
mov
pop
mov
sti
or
shl
addb
fidivl
filds
aas
aas
mov
mov
push
sbb
push
mov
xchg
pop
in
lods
fdivl
les
ds
and
push
add
or
push
adc
cmpsb
push
mov
fistps
daa
out
mov
mov
shrl
dec
jne
xchg
scas
push
dec
push
xchg
sbbl
inc
mov
int
testb
test
inc
mov
test
dec
sbb
mov
fucom
lea
test
sbb
cmpsb
xor
pop
movq
lea
dec
mov
aas
shlb
mov
cmp
cmc
pop
loop
mov
dec
inc
and
jmp
repz
cmp
dec
loope
rorl
xor
call
cmp
punpcklwd
lea
sub
add
out
xchg
push
xchg
mov
iret
clc
je
mov
and
and
and
les
gs
lock
mov
ljmp
stc
sbb
xor
aad
cmp
xor
into
je
or
daa
lret
push
dec
popa
cwtl
jne
mov
ret
dec
pushf
or
jecxz
xchg
pop
pop
mov
iretw
and
adc
mov
jo
mov
push
aad
mov
cmp
mov
lret
out
outsb
sub
bound
js
xor
adc
bound
sbb
test
dec
xchg
incl
roll
frstor
clc
cwtl
sub
lea
push
addl
dec
cmp
push
outsl
inc
mov
pop
pusha
fdivr
jnp
and
dec
shrb
pop
push
jmp
xchg
mov
mov
aad
jno
inc
loop
inc
and
or
popa
jb
stos
xor
loopne
subl
dec
fistpll
adc
pop
in
out
jns
call
lcall
dec
pop
cmp
cwtl
add
les
or
ljmp
xor
sub
ja
lret
pop
into
test
iret
call
mov
aas
mov
idivb
clc
mov
stc
ljmp
in
sbb
mov
shl
je
leave
scas
add
popf
inc
std
xchg
xchg
mov
cmp
inc
hlt
pop
mov
ret
ljmp
sub
jns
pop
cmp
nop
xchg
cltd
icebp
inc
pop
inc
mov
out
lret
stos
pusha
or
cs
in
sbbl
mov
dec
sarl
movsl
mov
cmp
mov
rcll
mov
cmp
xchg
mov
in
and
mov
sub
or
aas
inc
fdivs
pop
and
mov
xchg
pusha
test
lcall
cmp
out
xchg
jge
xor
es
mov
outsb
xor
jmp
xchg
ficoml
push
imul
mov
fs
lock
repz
sub
mov
shlb
outsl
cmpsb
cmpsl
inc
and
jecxz
fstl
sub
daa
fwait
cmp
mov
xchg
in
sbb
add
xchg
jno
push
jg
or
push
cs
sub
btl
fmuls
lcall
jge
hlt
mov
push
mov
cmp
fldenv
xor
jge
jbe
scas
sub
pop
mov
addr16
pop
and
lret
jno
les
lds
sub
outsb
aas
inc
dec
flds
lods
in
popf
test
mov
pop
lret
mov
testl
scas
push
aas
cli
loop
push
sbb
adc
inc
xchg
pop
cmp
cmp
add
pusha
push
add
or
inc
jbe
cmp
in
pop
jecxz
dec
mov
jge
xlat
push
sub
insb
jecxz
cmp
pop
scas
int3
hlt
push
dec
incb
push
mov
dec
xchg
add
xchg
aaa
int3
scas
cmp
push
addl
and
jle
shlb
add
arpl
or
notl
push
fcoms
mov
dec
aam
cmp
fldt
and
inc
or
mov
push
rorl
dec
in
repz
aaa
nop
or
in
mov
mov
aas
dec
xlat
out
cltd
ja
cltd
enter
pop
imul
lahf
and
sub
dec
pushf
ljmp
mov
cmp
sbb
push
in
and
je
jl
mov
inc
loope
idivb
lret
dec
mov
add
mov
xor
loop
jbe
pop
mov
and
mov
cmp
jbe
ljmp
xor
call
mov
xor
test
sbb
leave
es
mov
mov
xlat
stc
dec
jno
adc
pop
dec
rorb
repnz
inc
fnstsw
sar
xchg
pop
jnp
mov
cmpl
sub
enter
in
xchg
js
outsb
popa
stos
out
push
rcrl
mov
mov
xchg
out
mov
sbb
pushf
push
imul
push
fistpll
inc
jb
and
daa
lea
adc
mov
or
lods
and
dec
es
dec
dec
and
lret
rclb
add
inc
mov
push
and
adc
repz
aad
test
mov
xor
fldcw
dec
imul
jo
test
shll
lcall
jno
pusha
insl
popa
lcall
rcll
cmpsl
mov
data16
push
nop
cmp
or
mov
test
lds
push
repnz
push
xorb
cs
xor
and
mov
pop
cld
jecxz
sub
shlw
bswap
xchg
ret
sti
pop
and
pop
adc
pop
sbb
sarl
aad
loope
roll
imul
outsb
xor
aas
pop
ret
xchg
cmpsb
jp
ficoml
sub
mov
sub
and
push
or
sub
arpl
mov
push
das
fsub
fidivl
adc
cmp
bnd
xlat
notb
std
out
xor
movsl
jns
nop
cmp
shlb
stos
mov
xchg
inc
push
mov
ds
out
arpl
test
je
outsb
dec
jecxz
outsl
test
mov
sbb
adc
movsl
ss
xchg
sub
pop
fimull
xor
iret
lret
xchg
add
or
in
mov
mov
or
lret
dec
and
loope
mov
lods
xor
inc
icebp
push
cld
lock
lea
fsubl
jns
mov
xchg
mov
mov
jmp
stos
es
or
pop
xchg
pop
dec
dec
push
imul
negb
shlb
mov
xor
sub
ds
sbb
scas
popa
jge
adc
mov
fsubl
mov
push
mov
lret
sub
out
iret
fmull
jne
add
scas
mov
mov
ret
insb
out
jge
and
outsl
mulb
loopne
pop
cld
adc
ss
out
add
mov
sbb
pop
enter
mov
sbb
ds
jp
xor
mov
negl
adc
sbb
cmp
int
incl
je
inc
loopne
xor
push
dec
lahf
jo
pop
add
lret
lock
in
jmp
sub
and
mov
pusha
fnstcw
in
mov
xchg
inc
cmc
int3
mov
pop
mov
cmp
fwait
lret
stc
mov
mov
loope
xchg
push
mov
or
adc
aaa
imul
fmul
sub
xor
jnp
xor
sbb
call
lock
mov
fsubrl
inc
andb
mov
sbb
clc
adc
mov
cmpsl
imull
mov
cltd
adc
out
int3
fisttpll
fcomi
lock
xchg
stc
jno
mov
lidtl
xchg
fimuls
xchg
push
fimull
dec
or
sub
jmp
test
xchg
jmp
loope
lahf
mov
out
lods
push
sbb
cmc
leave
repz
aad
inc
fdivrl
adc
call
pop
sbb
pop
repnz
call
xor
cltd
or
das
jge
insb
loopne
seta
pop
clc
out
loop
xrelease
test
push
inc
jmp
jbe
dec
lret
imul
mov
inc
sbb
or
inc
or
sbb
adc
out
ret
out
lahf
and
sub
icebp
mov
inc
ret
scas
mov
add
pop
out
inc
out
adc
jns
push
bound
int
mov
loopne
jo
adc
lret
loopne
std
lods
test
les
ret
jno
pop
stc
faddl
cwtl
jno
popf
cltd
mov
fsubrs
sub
lret
adc
mov
push
sub
and
scas
jnp
lea
sbb
aas
push
sbb
dec
aad
mov
movaps
fstpl
adc
cmp
test
xchg
xor
ljmp
mulb
and
push
std
xchg
inc
push
mov
push
or
dec
sbb
test
mov
xchg
loopne
pmullw
incl
jno
sub
aad
idivb
cmpb
pop
movsl
mov
and
nop
push
pop
and
jns
icebp
sbb
dec
les
add
push
push
in
fadds
in
aaa
cmp
jmp
jno
mov
call
insb
bound
dec
mov
mov
jbe
xchg
cli
aam
jbe
call
mov
bnd
pop
dec
sub
je
jl
adc
mov
push
xchg
bound
std
aaa
fcmovb
int
pop
aad
mov
mov
sahf
add
push
call
fwait
push
aad
pop
aad
mov
int3
insb
sub
ret
mov
insb
push
cli
aaa
sbb
push
lret
xchg
add
stc
sbb
mov
push
sub
mov
cmp
test
adc
xchg
sahf
fildll
mov
lds
add
and
dec
pop
testl
or
push
int3
ss
pop
popf
xor
pop
cmc
pop
xor
jns
inc
ror
push
add
add
dec
mov
test
inc
inc
fldenv
adc
mov
or
xchg
push
clc
das
scas
pop
test
push
jne
adc
dec
lcall
leave
mov
repnz
test
or
mov
inc
jecxz
sub
nop
sub
xor
daa
movsb
or
xor
lods
fistpl
adc
movsl
cmp
jle
cmp
push
ljmp
daa
bound
std
aad
sub
jle
push
and
mov
test
scas
jns
jne
xor
mov
cmc
mov
or
add
xchg
push
jcxz
cmp
inc
std
sbb
mull
push
frstor
cmp
lret
cli
sbb
dec
repnz
lret
out
loope
jecxz
inc
fisttpl
pop
test
push
enter
and
push
mov
or
pop
scas
notl
and
mov
pop
dec
add
xchg
popa
mov
cmpsb
or
cltd
rcl
fwait
jecxz
les
aam
xchg
rol
and
stos
shl
mov
or
jae
dec
mov
fdivrl
xor
aad
lret
in
pop
or
iret
sub
dec
pop
xchg
mov
pop
mov
push
pushl
sub
mov
xor
test
js
add
inc
jno
xlat
xchg
fs
movsl
dec
pop
addr16
dec
xlat
stos
pop
pop
cmp
inc
inc
pushf
std
shll
xor
lds
ret
aad
sub
inc
imull
push
test
cmp
adc
mov
std
mov
andb
pop
mov
divl
sub
cli
lock
mov
ret
lods
push
sbbb
outsl
add
lret
shl
adc
push
sti
fxtract
inc
fistpll
mov
pop
and
imul
xchg
pop
mov
push
add
insb
inc
pushl
push
mov
stos
pushf
aam
jne
cld
inc
and
test
sbb
sub
sarb
iret
push
mov
roll
mov
stc
dec
jp
mov
stc
into
jmp
xchg
add
add
dec
xor
push
jecxz
xchg
out
jno
pop
xor
push
pop
cmp
xchg
dec
and
popf
or
or
ret
jne
mov
enter
es
pop
movsl
inc
lret
js
aas
lret
sahf
popa
mov
in
fisubrs
mov
lods
cmpsb
mov
mov
sbb
dec
fidivrs
data16
in
sbb
push
outsl
in
and
push
sub
loop
les
push
xor
push
pop
sbb
xchg
or
into
pop
movsl
add
cmp
and
sub
pop
push
btc
cmp
icebp
mov
jg
or
pop
lcall
insb
orb
mov
addr16
add
loopne
push
jb
inc
adc
jg
jge
data16
fcmovnb
sub
fdivs
ja
sbb
cmp
or
mov
sbb
sbb
or
pushf
fcoml
lock
mov
mov
xchg
xor
mov
jg
mov
punpckldq
pop
rcll
cli
nop
mov
dec
icebp
cmp
sbb
add
or
or
sub
dec
in
ss
cltd
add
in
inc
sbb
xorl
loopne
pop
das
xor
mov
test
rclb
xchg
pushf
repz
add
sub
jbe
dec
std
popf
sahf
and
push
or
push
fimuls
movsb
iret
sub
pushf
push
outsl
or
rcl
sbb
jo
jo
inc
mov
js
ljmp
ret
adc
add
cmp
stc
pop
and
fbstp
imul
or
or
dec
push
out
dec
inc
shll
jle
or
dec
or
ljmp
push
dec
andl
out
xchg
mov
inc
xchg
xor
xor
adc
repz
push
push
push
nop
dec
and
lret
push
int3
dec
mov
mov
jnp
mov
data16
add
sbb
imul
xchg
xchg
stos
push
or
test
and
jmp
loope
out
insl
jno
jmp
ss
sbb
jno
inc
imul
jo
add
xchg
sub
or
adc
xchg
idivl
out
or
fwait
adc
sub
jge
test
push
mov
fidivrl
mov
loopne
jmp
lods
fisttpl
dec
adc
mov
sbb
pop
cmc
inc
rol
xchg
movsb
pushf
adc
inc
addr16
bound
xchg
add
inc
cltd
and
popa
inc
icebp
jle
loopne
dec
stos
movb
add
mov
call
dec
inc
iret
adc
scas
test
std
push
nop
xchg
inc
mov
xchg
pop
popf
cmpsl
dec
and
mov
iret
in
push
outsl
adc
popa
xor
mov
fistl
pop
enter
pushf
ljmp
inc
cmc
popf
cmc
scas
xor
sarl
cwtl
iret
scas
cltd
stos
jno
push
pop
and
cmp
jge
mov
fwait
clc
pop
imul
int3
ret
or
sbb
sbb
outsl
mov
push
insb
jb
pusha
xor
mov
fisubs
mov
cmp
ja
or
push
sub
xchg
jns
es
ljmp
cmp
stc
inc
jae
mov
push
loop
and
scas
jmp
sahf
icebp
and
xchg
sbb
mov
mov
inc
dec
and
jae
in
mov
int3
dec
pop
sub
mov
sub
inc
mov
insl
pop
jne
jne
shrl
jne
cmp
jbe
push
xchg
sarl
rcll
push
jb
mov
divb
lods
dec
loopne
popf
iret
push
mov
jecxz
stc
push
rol
jg
adc
dec
push
xchg
add
xchg
lea
cmp
xchg
repz
push
mov
loope
adc
pop
ret
lcall
jecxz
xor
push
ficoml
repnz
shll
push
or
nop
stos
in
insb
bswap
push
adc
mov
add
mov
icebp
add
out
aas
mov
out
xchg
stos
hlt
scas
mov
in
inc
cmpsb
inc
lock
mov
outsb
aas
mov
adc
and
gs
outsl
test
std
adc
push
or
push
inc
jne
shrl
fidivs
jecxz
popf
imul
xchg
inc
xor
dec
and
sub
pop
ds
jg
ret
shlb
pop
das
cmp
jecxz
sub
jae
out
popa
ficoml
xor
inc
jmp
inc
sbb
jne
sub
cmp
lock
inc
aam
xor
repz
das
movsl
test
inc
iret
out
pop
leave
lods
call
xchg
andb
jmp
cmp
in
mov
loopne
in
sbb
xchg
rol
mov
orl
popa
pop
loopne
sbb
adc
cltd
rorb
xchg
lods
mov
stc
lds
testb
call
popf
sub
push
jge
sbb
or
add
xchg
mov
lock
sbb
out
ds
adc
or
popa
inc
dec
mov
or
lahf
out
push
cld
in
add
mov
cmp
add
loop
repz
mov
sbb
inc
insl
jno
or
xchg
sarl
rol
cmc
dec
mov
xor
pop
sbbb
fld
add
nop
es
je
xor
lods
mov
or
lret
cmc
cmp
jns
rclb
mov
push
add
inc
jecxz
repz
movsb
inc
aam
les
jae
adcl
mov
push
roll
repz
movsb
inc
aam
les
jae
adcl
mov
push
rolb
repz
movsl
inc
aam
les
jae
adcl
mov
push
roll
jae
cld
xchg
in
mov
cmp
inc
push
mull
jae
imul
flds
lods
xor
inc
shll
repz
addl
aaa
mov
push
mull
jae
add
xor
inc
mov
jecxz
repz
addl
aaa
loope
mov
inc
push
mull
jae
add
xor
rcrl
xchg
pop
push
mov
inc
mov
and
or
mov
pop
mov
mov
jbe
inc
inc
sbb
and
adc
sbb
and
ret
loop
jle
testb
pusha
rep
loop
sbb
inc
lock
xchg
pop
sbb
bnd
stc
fists
adc
and
push
push
pop
daa
cmp
push
rcrb
add
int3
ficompl
ret
sbb
mov
mov
adc
sub
sbb
ss
mov
sbb
xor
outsl
addr16
es
cmp
jbe
sahf
cmp
roll
mov
rorl
xchg
mov
cmpsl
mov
inc
push
mull
jae
add
xor
inc
shll
addr16
addl
aaa
mov
mov
sahf
or
adc
insl
movsl
arpl
and
push
loop
loopne
mov
mov
add
push
cmc
xor
mov
addr16
push
loopne
clc
pop
push
jecxz
or
add
add
xor
inc
shll
addr16
addl
aaa
mov
push
mull
jae
add
xor
inc
shll
addr16
addl
aaa
mov
loop
push
enter
test
and
jbe
je
pop
ss
jo
xchg
out
sub
inc
mov
out
hlt
push
mov
cmp
lods
shr
or
insb
cld
or
push
and
test
mov
daa
out
arpl
aad
aas
shlb
dec
xor
ja
imul
add
cs
jb
decl
or
jnp
mov
cmp
ds
dec
xor
xchg
push
mov
aam
jecxz
sbb
push
cmp
fwait
xor
sbb
mov
pop
fcoml
in
mov
les
sbb
and
ja
daa
xchg
sbb
sbb
hlt
nop
mov
push
mov
mov
jge
push
xchg
pop
out
mov
cmp
daa
loopne
stos
or
sarl
inc
ficompl
or
push
mov
or
sub
adc
push
adc
and
push
insb
js
stos
fsub
xor
cmc
imul
add
arpl
not
sti
sub
mov
addr16
sbb
insl
mov
pop
mov
mov
add
cmp
scas
hlt
dec
jecxz
into
jle
pop
and
ljmp
or
rclb
dec
insl
pop
enter
bound
addr16
call
lcall
mov
test
fstpt
add
inc
mov
pop
sub
outsb
cmpsb
mov
sub
lods
mov
stc
mov
call
cmpsb
scas
clc
pop
dec
pop
das
mov
and
rorl
dec
bound
inc
mov
xor
sbb
ret
icebp
push
xorl
xor
jns
inc
sbb
or
mov
icebp
sti
and
roll
out
add
pop
push
jnp
inc
push
ffree
mov
imul
adc
mov
pusha
jg,pn
int
pop
mov
outsl
stos
pushf
ss
dec
pop
dec
mov
repnz
ss
cmp
sub
push
repz
mov
ret
dec
sub
cmp
mov
cli
mov
jbe
hlt
pop
dec
pop
divl
pop
outsl
lret
mov
int3
push
int
cmpl
push
push
push
test
mov
enter
push
xor
mov
push
jae
push
xchg
int3
mov
popf
and
push
xchg
scas
imul
cwtl
push
aam
shll
pop
mov
jecxz
cltd
test
in
sub
jp
jnp
je
lock
mov
cwtl
sti
clc
sub
xchg
xchg
mov
mov
push
mov
or
jp
in
cli
ja
aas
jbe
jmp
xchg
das
mov
ret
xorl
cltd
stc
or
dec
aaa
xchg
cli
add
mov
cli
sbb
add
cmp
cld
loope
push
push
shlb
sahf
pop
iret
push
inc
dec
leave
pop
lods
pop
cmp
dec
mov
push
mov
pop
dec
pop
adcl
xchg
xchg
shl
loopne
jb
addr16
xchg
mov
cmp
push
bnd
in
sahf
sti
dec
pop
outsb
clc
lea
shr
mov
or
outsl
xchg
mov
inc
sar
dec
icebp
test
sti
and
jnp
jno
mov
push
idivb
mov
aas
es
inc
mov
fwait
leave
mov
fdiv
shrb
sbb
dec
in
sbb
fldenv
loop
pop
push
mov
xchg
aad
lods
or
les
scas
jle
arpl
roll
xchg
idivb
sbb
outsb
icebp
fsqrt
addr16
xchg
and
mov
popa
fsubrl
mov
dec
dec
mov
jmp
pop
cld
mov
jns
xchg
psubsb
scas
call
lods
inc
mov
pop
mov
clc
sarb
cld
xor
sarb
push
lcall
lods
lds
in
cmp
xlat
std
mov
fwait
xor
lret
imul
or
in
out
movsl
mov
ss
pop
jbe
lods
mov
or
cwtl
aad
sbb
test
or
xchg
inc
mov
shrb
repz
aad
aad
leave
repnz
das
push
or
sub
gs
enter
ret
fwait
std
pop
jae
dec
inc
mov
jno
jns
adc
shr
cmpsl
inc
sbb
aas
sub
add
dec
imul
cli
es
mov
imul
xchg
xchg
sbb
mov
ljmp
sub
test
xchg
or
sar
out
ss
mov
adc
adc
pusha
push
dec
mov
pop
fwait
popa
dec
shl
fsubrs
sti
inc
test
fxch
cwtl
call
notb
push
loope
xchg
adc
sbb
adcb
in
xchg
js
orb
daa
in
fistl
xchg
rclb
imulb
test
or
roll
dec
mov
call
lock
push
inc
cmp
cmovo
icebp
shll
jae
or
in
movsl
enter
push
pusha
fmulp
xchg
repnz
je
mov
test
fcmovne
cmp
faddl
xor
pop
test
mov
rcrl
call
inc
add
and
cmp
and
sub
xchg
js
int3
fstl
cmc
xchg
fucomip
jae
mov
insl
add
mov
cmc
mov
test
fwait
pushf
dec
pop
je
mov
sbb
stos
xor
dec
clc
in
sbb
in
outsb
sub
inc
and
mov
sbb
clc
cmp
pop
leave
popa
test
push
lods
mov
scas
or
stos
les
mov
sub
push
orl
jmp
add
lret
adc
std
popa
inc
scas
mov
fwait
push
ds
imul
sub
mov
daa
xchg
cmp
adc
mov
sbb
sti
cmp
sbb
mov
js
jae
les
aam
aam
inc
sti
fwait
mov
popa
adc
or
push
sub
add
xchg
ljmp
push
mov
mov
iret
mov
pushf
jno
test
sbb
in
xchg
jg
cmp
xor
adc
mov
add
stos
ds
icebp
outsb
js
dec
sbb
test
repz
or
inc
add
rorb
inc
or
data16
mov
cwtl
lahf
sub
add
push
mov
into
int3
cltd
mov
mov
aam
aad
dec
loope
jno
cltd
push
sbb
dec
out
xchg
fwait
mov
test
cmc
std
cmc
aam
sub
cmp
jo
cmp
xchg
lock
inc
daa
cmc
test
and
sub
inc
movups
in
movsb
cmp
lods
mov
cmp
scas
cltd
mov
pusha
icebp
movsb
pop
or
xchg
add
dec
cmp
into
sub
cmp
repnz
push
jnp
lock
push
pop
icebp
inc
ret
mov
adc
out
pop
add
xchg
stos
cmp
inc
mov
aam
jg
clc
fcmovnu
add
adc
loop
outsl
daa
into
xor
loopne
pop
jg
call
stos
xlat
and
and
ud1
fsubrl
inc
dec
sub
push
xchg
sbb
jb
mov
stos
scas
cmp
inc
repnz
lret
ja
inc
mov
stos
repnz
fsub
or
aaa
pop
test
or
or
cli
jmp
sti
popf
mov
cmp
mov
mov
xchg
cmc
xor
pop
mov
sahf
rclb
or
popf
negb
das
mov
test
js
mov
loope
stos
test
xor
mov
adc
add
cmpb
mov
xchg
lods
daa
fcmovnb
xor
std
das
shll
mov
pusha
dec
cwtl
xchg
pop
cld
ss
cmp
scas
shlb
jns
orb
mov
mov
test
aaa
pop
lea
xchg
aad
or
fidivrs
das
xchg
adc
insb
adc
shrb
stc
into
jne
fsubrp
sbb
push
pminsw
bound
pop
push
ds
push
add
sub
leave
shll
mov
pop
outsb
mov
data16
mov
mov
sbb
cld
pop
outsb
test
addr16
pop
test
sar
sbb
dec
scas
in
mov
push
xchg
fists
jb
aas
rorl
sbb
fidivs
fcoms
fistps
jno
stos
xchg
rolb
mov
lahf
mov
jne
je
sbb
out
shll
mov
push
rcrl
enter
lods
ss
ret
inc
inc
fiaddl
hlt
sarl
jl
and
in
push
test
leave
mov
popf
push
jae
test
jle
aas
xchg
inc
jg
mov
cmp
mov
movsb
cltd
xlat
enter
lods
nop
fwait
lds
cmp
push
add
ss
fsubs
sbb
je
in
fistpll
adc
mov
sbb
cmpsl
add
out
mov
sbb
cmp
pop
xor
mov
sbb
cmp
es
out
pop
aaa
les
jp
pop
xchg
out
dec
daa
scas
fnstcw
jnp
fndisi(8087
mov
cmp
mov
ds
into
jp
and
clc
std
outsb
dec
cmc
and
sbb
int3
sub
ja
mov
xor
adc
stc
jne
jns
push
jno
xor
and
jle
jg,pt
mov
push
cmp
pop
push
push
lret
jno
pop
push
es
jge
lods
into
in
imul
ret
out
and
sbb
stos
loopne
loope
cmc
cmpsl
fs
daa
sahf
add
fidivs
and
cmc
iret
pushf
out
jbe
or
jo
push
push
or
dec
mov
cmp
dec
aam
mov
test
lea
or
and
dec
lahf
getsec
mov
stos
adc
dec
call
out
neg
sbb
lods
add
mov
mov
add
shlb
fs
loop
movsl
addr16
rclb
cmp
cmp
adc
adc
shr
and
dec
or
int
repnz
jmp
pop
mov
pop
test
adc
pop
jno
and
xchg
cld
mov
jle
loope
mov
cmp
add
daa
iret
rcrl
sbb
test
popf
sub
popa
mov
inc
enter
out
lea
js
sarl
inc
out
jp
stos
andb
jmp
pop
cmp
cmp
movsb
cmpsl
xchg
aad
pop
es
push
pcmpgtb
xor
push
mov
sbb
hlt
inc
inc
aam
dec
icebp
pop
int
iret
xchg
pop
add
mov
inc
mov
shll
leave
rcl
push
or
or
je
jnp
int
sub
sub
cwtl
bound
fildl
ret
inc
test
pop
cli
shll
imul
bound
adc
movsb
pop
jmp
jae
pop
clc
dec
rcr
adcl
xchg
inc
jno
or
gs
lahf
in
shrl
loop
mov
cld
addb
cld
mov
lock
repnz
popa
jnp
xchg
push
sar
in
out
inc
or
xchg
cmp
jg
lahf
xchg
in
mov
jno
mov
add
xchg
hlt
push
data16
hlt
sub
mov
aas
push
loopne
out
imul
fbld
ss
orb
rcr
imul
bound
mov
jp
aas
jecxz
fidivs
lahf
or
mov
fadd
push
push
loop
fdiv
lcall
cmpsb
mov
dec
or
andb
or
gs
cmp
in
sbb
popf
incl
lea
ja
ret
negb
cmc
and
push
mov
mov
es
je
jb
add
aas
dec
enter
sub
pop
mov
aam
push
ficomps
push
cmpsl
push
lods
push
ds
jle
leave
insl
cmp
fists
lea
aas
pusha
xor
out
aaa
pop
cmpb
int
cltd
lods
js
and
fdivr
dec
call
mov
xchg
sub
sbb
pop
adc
xchg
fsubl
mov
sub
and
lock
xchg
sbb
mov
sub
dec
adc
negl
cmp
push
push
pop
xchg
xchg
pop
gs
dec
cmpsl
fwait
mov
cmp
xchg
sub
pop
pop
pop
iret
xor
mov
jecxz
out
inc
fcoms
mov
movsl
pop
lahf
sub
rcll
decb
ja
sbb
je
lcall
mov
jp
aas
mov
rcr
mov
ja
adc
push
mov
pop
xchg
andb
push
imul
mov
cmpsl
dec
sub
inc
int
dec
mov
out
add
std
bswap
jne
in
aam
pushf
aaa
subl
or
ret
pop
xor
std
ret
scas
in
push
jl
mov
in
push
add
aam
cs
lret
or
mov
pop
bound
cwtl
lea
push
flds
movsl
test
mov
leave
jmp
push
jmp
or
fndisi(8087
fcompl
vpbroadcastd
inc
xchg
push
xchg
jb
mov
test
pop
lds
ficompl
enter
add
fnstsw
mov
dec
cmpsl
test
jnp
sub
cmpsl
lahf
jo
movsb
mov
adc
outsl
stos
push
insl
mov
frstpm(287
sti
mov
sub
ficomps
sub
sarl
mov
sub
mov
dec
dec
adcl
inc
subl
mov
push
sbb
imul
and
xadd
int
stos
shll
xor
or
out
fs
mov
lahf
mov
mov
fcmovnbe
mov
jo
ret
mov
sarl
sub
push
test
and
idiv
in
fadds
push
ror
mov
cwtl
and
xchg
mov
jbe
repnz
cmp
lds
lods
sbb
out
push
cmp
sti
push
add
mov
add
push
popa
pushf
in
shll
sbb
cwtl
jecxz
stc
andb
loop
push
mov
jbe
sahf
sub
push
ljmp
in
rorb
fisttps
xchg
xchg
mov
out
clc
jg
out
incb
in
xor
out
les
and
repnz
in
ja
fiaddl
jbe
ret
adc
jmp
iret
gs
inc
cld
sbb
clc
and
mov
mov
sub
sub
or
push
aas
repz
mov
or
aas
f2xm1
icebp
notl
jbe
imul
lock
adc
jbe
push
les
subl
dec
jl
lret
push
cmc
or
ret
jno
in
push
outsl
pop
popf
jb
inc
cmp
jnp
cmp
mov
jl
dec
jmp
repnz
imul
fbstp
sbb
outsl
pop
inc
or
jmp
pushf
adc
jbe
mov
dec
popa
mov
test
out
mov
mov
je
xchg
and
sub
fadds
test
adcb
xchg
cmp
cmc
xchg
push
push
mov
shll
sub
and
out
cmp
bound
inc
add
and
ficompl
fs
add
dec
iret
fs
fstl
cli
loope
cmpl
outsb
ss
out
nop
fsubs
dec
jecxz
adc
cli
in
and
mov
aad
sahf
cmp
das
push
outsl
cltd
mov
xchg
lock
loope
mov
push
xor
xor
sbb
xchg
int
cmp
jbe
testb
shlb
mov
dec
aaa
popa
dec
lcall
push
stc
hlt
inc
repnz
and
int3
out
inc
imul
inc
cmp
jnp
mov
dec
cli
xchg
adc
cmp
jno
outsb
lods
dec
or
pop
cs
sub
adc
in
cmp
inc
sub
jmp
out
sahf
mov
mov
aam
inc
cmpsb
adc
and
sub
repnz
xchg
push
into
pop
aam
rcll
push
idivb
leave
fcomps
dec
mov
adc
bound
sbb
jmp
outsl
orl
fs
movsl
jns
push
popa
or
add
fistl
jnp
mov
not
jecxz
xchg
arpl
int3
out
outsl
dec
inc
xchg
dec
bound
icebp
mov
mov
jbe
push
dec
dec
adc
hlt
push
add
inc
stos
stos
mov
pop
stos
divl
stos
bound
outsl
cwtl
je
xchg
je
pop
stos
pop
cli
insb
add
fdivs
cmp
mov
add
adc
jle
adc
xchg
das
dec
pop
loopne
push
and
out
mov
mov
sbb
fisubl
loopne
jns
mov
push
clc
cmp
sbb
dec
mov
divb
insb
adc
clc
mov
mov
jle
and
arpl
or
dec
xchg
push
sub
sbb
mov
nop
adc
mov
faddp
adc
cmovbe
xor
imul
adcl
jo
out
cmp
push
jo
xor
inc
incl
ljmp
fists
pop
dec
imul
ror
jb
pop
arpl
sub
dec
cli
cmpl
sbb
push
arpl
sar
into
xchg
and
shl
push
iret
jnp
jbe
jle
dec
subl
pop
out
loope
shll
int3
xchg
pop
arpl
repz
push
loope
shl
jae
sahf
cli
inc
fucom
cmpsb
jo
mov
movsl
ret
mov
das
dec
mov
add
lods
sbb
addr16
addb
popf
mov
test
fisttpll
ffree
xor
test
rolb
dec
xor
inc
test
out
pop
pop
jne
sub
out
adc
pop
shl
in
add
or
sub
pop
loopew
dec
iret
lret
mov
or
dec
cmp
adc
mov
adcl
and
mov
xchg
inc
mov
mov
and
hlt
stos
dec
or
stos
dec
pop
dec
rclb
push
jb
push
adc
inc
inc
cmpb
ljmp
mov
test
mov
pushf
lcall
xchg
lret
jmp
xchg
pop
insb
mov
sahf
jg
ja
mov
xchg
lds
cmp
test
adc
jp
iret
adc
mov
out
or
pop
and
cmpsl
cmp
sbb
dec
lahf
or
mov
and
cmp
nop
repz
lock
data16
into
xchg
mov
jg
es
lods
mov
loope
fstpl
mov
les
mov
idiv
test
sbb
aas
cmc
cwtl
ficompl
cmpsb
in
push
pop
nop
mov
pop
xchg
inc
cmp
xor
push
loopne
add
flds
push
inc
inc
mov
jmp
jbe
js
or
and
cs
in
stos
sti
pop
pop
cmp
cmc
stc
icebp
fcoml
ja
dec
mov
sub
mov
ret
lcall
mov
das
fadds
outsb
push
xor
sbb
jmp
xchg
adc
mov
imul
lahf
test
out
sar
inc
mov
into
lds
pop
jnp
bound
xchg
adc
leave
bound
in
adc
cmp
mov
sbb
repz
icebp
inc
mov
incl
adc
jmp
rorb
push
cmp
sub
scas
cltd
std
outsl
adc
es
cld
out
pop
mov
push
lock
push
cmp
cmp
jmp
daa
test
in
push
mov
int3
cli
push
sub
or
pop
inc
mov
rcrl
cmp
cli
nop
test
xchg
loop
push
or
dec
movsb
sub
fisttpll
sbb
cmp
flds
lret
fninit
movsl
push
imul
sti
push
shll
sahf
jmp
outsl
jo
push
dec
mov
movsl
and
push
or
ret
dec
es
mov
loopne
push
dec
or
loope
loopne
pop
gs
lock
or
inc
fwait
or
ret
jecxz
in
push
in
loope
add
test
cmp
mov
sub
jmp
test
mov
pop
mov
push
pushf
xchg
addr16
adc
js
lahf
aam
push
jg
shrl
pushf
inc
mov
in
push
mov
xor
pop
lret
push
aad
mov
shr
sti
cld
mov
jno
addr16
adc
dec
push
jmp
jae
xor
mov
jecxz
mov
in
push
inc
shrl
cmp
mov
scas
sub
repz
mov
rol
inc
lods
insl
pop
sbb
in
push
out
adc
test
aaa
test
enter
mov
add
jne
mov
xchg
sbb
test
mov
cmp
shlb
mov
add
push
jnp
imul
push
inc
dec
mov
andl
xchg
movsb
mov
movsb
pop
aad
js
pop
add
rcrb
push
pop
inc
out
je
sub
pop
adc
mov
and
push
nop
rorl
ja
pop
dec
mov
mov
popa
sub
aaa
sbb
ret
mov
sub
je
inc
stos
loopne
lods
out
cmp
or
sub
into
mov
mov
sbb
mov
pop
stos
push
sub
pusha
and
addr16
out
imul
add
xor
inc
shll
addr16
addl
aaa
mov
push
mull
jae
add
xor
inc
shll
addr16
addl
aaa
mov
inc
shll
out
pop
add
xor
inc
shll
addr16
addl
aaa
mov
push
mull
jae
add
xor
inc
jns
jecxz
test
ja
inc
pop
push
dec
cmp
fmulp
push
sti
inc
jmp
lcall
cmpsb
in
inc
jnp
imul
xchg
jle
lretw
push
sti
inc
jmp
fwait
mov
mov
out
clc
jp
imul
xchg
lods
lret
sar
sub
fwait
outsb
mov
mov
mov
push
cmpsl
add
loope
cmc
pop
aaa
xchg
inc
mov
mov
mov
in
fldenv
dec
and
jecxz
rol
mov
jp
xor
outsb
xchg
iret
data16
push
cmp
dec
sbb
or
push
pop
orl
es
jbe
push
sub
sub
push
inc
bound
push
sub
xchg
dec
in
aaa
gs
out
push
push
fisubrs
out
adc
pop
mov
dec
jecxz
mov
mov
movsb
jmp
dec
jns
repz
out
adc
stos
movsb
mov
sub
sbb
push
repz
repz
inc
jecxz
mov
xor
and
pop
push
dec
xlat
push
xchg
xor
cmpsb
pop
sarl
xchg
aam
push
sti
sub
ss
bound
add
je
push
jnp
imul
mov
insl
add
adc
pop
fcoml
add
sub
sbb
outsl
enter
rorl
out
cmpsl
adc
inc
into
jp
jne
into
cmpsl
cmp
jle
popf
jecxz
jg
lcall
jae
mov
mov
out
jnp
imul
xchg
jbe
lretw
push
sti
inc
jmp
fwait
mov
mov
out
jnp
imul
xchg
jbe
mov
sub
outsb
dec
or
bound
dec
push
push
icebp
or
mov
stc
xorb
push
fs
and
xchg
ret
push
xchg
dec
sbb
lods
push
stos
xchg
cmp
mov
aaa
call
cmc
sbb
fdivl
ret
sub
sar
in
inc
cmpsl
push
mov
push
or
jo
xchg
pcmpgtd
rorl
jl
xchg
xchg
and
sub
mov
mov
out
iret
xchg
xchg
fisttpl
push
xchg
popf
cmp
movsl
fmull
shld
aad
jl
adc
xor
int
sub
add
xor
jbe
and
aaa
negl
shll
cmpsl
adc
push
out
or
dec
imul
dec
xor
sub
push
lahf
lahf
popa
mov
shrb
fwait
dec
mov
sub
jno
shrb
rclb
mov
stc
fidivs
das
inc
loop
push
add
adc
xor
leave
pop
cli
mov
mov
mov
fsubl
lea
xchg
dec
jp
adc
cmp
push
repz
pushf
fldz
outsl
icebp
push
pusha
arpl
mov
jecxz
stc
call
gs
mov
pop
cmp
jnp
dec
imul
lods
xchg
pop
arpl
jmp
mov
or
xor
lea
jl
mov
pop
inc
sahf
aaa
jo
cmp
dec
xchg
scas
xor
pop
lret
and
add
in
xor
mov
mov
xchg
std
ss
in
mov
sub
enter
push
sti
icebp
adc
iret
clc
xlat
arpl
and
sbb
cmp
inc
das
mov
cmp
test
inc
std
mov
rcl
sub
jo
js
mov
stos
stc
xor
cmpsl
cmp
push
testl
test
lods
loope
pop
mov
sysenter
std
and
imul
dec
or
mov
sbb
or
cmp
jb
insb
mov
sbb
xchg
div
cmp
xor
xlat
jbe
jbe
ds
adc
push
out
andb
icebp
dec
or
fadds
rclb
inc
push
outsl
or
bound
shll
inc
loopne
dec
xor
xchg
inc
lock
jne
xchg
mov
arpl
lock
mov
add
push
les
pop
fucomi
in
cmp
xor
mov
aad
lcall
xchg
jecxz
xchg
push
add
stos
jecxz
jge
and
and
leave
mov
push
js
outsl
inc
sbb
inc
cmpl
mov
jne
mov
jecxz
cmp
insl
stos
les
sbb
mov
insb
mov
jl
mov
dec
mov
mov
aad
pop
in
jnp
out
test
mov
cmpsl
or
dec
shll
das
add
xchg
or
pop
jmp
xor
mov
mov
sbb
mov
icebp
adc
pop
xor
xchg
sub
cld
jmp
repz
pop
into
dec
gs
es
mov
stc
sub
mov
stc
dec
lods
jae
and
mov
ret
bound
sub
popf
xchg
xor
jnp
xor
in
pop
cmpsb
pop
adc
outsl
add
cmp
shrb
push
mov
mov
rep
sbb
test
cmp
mov
mov
mov
cmpsb
lret
push
ret
bound
movsl
lods
repnz
pop
movsw
pop
scas
push
out
imull
gs
frstor
mov
pop
int3
mov
cli
mov
dec
in
xor
loopne
cs
inc
in
scas
jp
or
je
in
add
pop
push
push
stos
lods
cltd
lahf
lret
test
ret
call
or
nop
xchg
popa
insb
adc
test
xchg
sub
mov
adc
mov
fsubrs
push
pop
mov
into
push
test
movsl
cmp
xchg
shlb
popa
int
pop
dec
pushf
mov
or
into
test
outsl
test
mov
xchg
test
pop
xlat
add
cmp
jne
div
repz
push
or
xchg
call
cmp
cmc
jbe
cmp
testb
mov
repnz
shll
fadd
in
mov
mov
pushf
adcb
ja
push
jle
dec
or
ret
sti
cli
and
out
fimull
jb
ja
ja
mov
pop
mov
loop
std
test
jno
stos
mov
add
adc
jmp
push
addr16
dec
fadds
pop
mov
bound
int3
lret
mov
sub
mov
and
sub
xchg
mov
loopne
loop
roll
push
cmp
xchg
push
fstl
push
data16
mov
push
cwtl
int3
mov
mov
hlt
packssdw
mov
jmp
xchg
movsl
lcall
lcall
jmp
fimull
mov
jnp
ret
and
sbb
mov
mov
jne
lret
pop
rolb
adc
jg
das
pop
push
dec
cmp
lret
push
int3
outsb
mov
sbb
addr16
in
rcrb
setge
js
jl
dec
push
data16
xchg
sub
jne
dec
add
push
ljmp
ds
and
inc
mov
xor
mov
xor
sub
add
cs
outsb
push
jne
cmpsl
lods
lahf
pop
call
mov
out
sarb
in
les
add
ror
pop
rorb
mov
mov
inc
stc
call
and
addr16
xchg
das
fwait
lahf
inc
shll
rcrl
cmp
push
jns
loopne
out
shr
xchg
push
insb
clc
imul
mov
addr16
cmp
push
insl
pop
icebp
cmpsb
aas
int
cli
hlt
mov
into
or
dec
push
sub
scas
lcall
jae
xchg
insb
or
mov
clc
push
es
jecxz
dec
mov
cmp
or
inc
and
dec
jecxz
mov
scas
fiaddl
fisttpl
and
adc
das
dec
inc
cmp
add
xlat
and
push
inc
push
jae
mov
bound
int3
clc
jae
or
cwtl
sbb
imul
or
mov
xchg
cwtl
add
enter
js
jmp
sbb
fcompl
xchg
add
rclb
iret
dec
sbb
popa
pop
sbb
pop
xchg
mov
dec
subl
inc
jge
mov
xchg
aaa
xor
jge
sub
push
les
push
inc
es
sbb
ljmp
mov
pop
adc
test
or
jg
shll
pop
les
rorb
mov
mov
sbb
push
ficoms
mov
lods
adc
je
es
cmpsb
sti
push
cmp
adc
jno
outsl
and
aas
add
cmp
mov
inc
inc
jl
pop
stc
sub
in
aaa
scas
jl
lods
jmp
mov
comiss
divb
fldt
mov
clc
jp
imul
jge
fs
cltd
mov
pop
inc
mov
arpl
pop
bound
sbb
and
test
ljmp
push
ljmp
inc
daa
push
jg
jecxz
movsb
enter
cmc
sar
outsl
out
lods
fmuls
sub
mov
mov
mov
ret
and
pushl
add
adc
mov
mov
hlt
outsl
outsb
aas
mov
and
fidivl
inc
push
push
mov
shl
cmp
inc
jbe
lcall
xchg
sbb
aad
mov
shll
fcoml
adc
push
mov
arpl
mov
inc
push
dec
movsl
cld
dec
push
repnz
outsb
out
sub
dec
jns
jge
mov
nop
jmp
jne
mov
outsb
push
pop
test
lahf
push
test
sbb
scas
pushf
movsb
incb
xor
cwtl
nop
mov
je
fsubrl
ja
jo
sbb
outsb
in
or
dec
mov
ret
lret
dec
sbb
repnz
je
mov
fiaddl
xchg
sbb
movsb
cmp
pop
pop
lea
test
xlat
fistps
adc
mov
or
iret
insl
xor
pop
int
sbb
pusha
mov
mov
test
stos
mov
loope
in
mov
or
jl
push
cwtl
pop
fimull
fimuls
mov
xor
loope
adc
fidivrl
lahf
dec
push
insl
dec
stos
daa
add
vprotq
push
test
adc
xchg
adc
stos
sbb
out
fcomps
pushf
iret
int3
test
stc
sarb
jne
cli
into
stos
cli
sub
fwait
sub
stos
mov
loope
mov
imul
and
dec
out
loop
test
jle
scas
in
daa
and
pop
xor
data16
fwait
or
outsl
lds
dec
int
repnz
lret
push
sarb
cmpsb
popa
sahf
xchg
or
mov
or
cmpb
sub
cwtl
loope
push
loop
insb
negl
xor
fbld
repz
inc
das
shll
sub
jmp
adc
lods
jb
xor
cmpsb
pop
repz
xor
iret
sub
or
addr16
push
in
loopne
addr16
mov
adc
cmp
inc
add
inc
add
push
xlat
xchg
mov
or
mov
jno
lds
icebp
add
pop
call
in
dec
aam
sti
pop
fs
aaa
jmp
cltd
add
addr16
push
pop
test
cwtl
out
test
in
pop
and
jbe
jo
cmp
cltd
and
out
shll
fidivrs
or
sbb
call
pop
cmp
sub
dec
adc
movsl
into
ss
mov
repnz
fstl
pop
sbb
imul
insb
dec
stc
inc
jmp
sbb
sub
mov
fisttps
andb
aad
aad
push
cmp
sbb
jl
das
div
popa
mov
and
popl
cwtl
inc
loopne
in
in
push
sbb
outsb
aam
orb
mov
fiadds
loopne
les
or
push
sarl
adc
loope
dec
orb
ss
ret
xchg
bound
mov
push
gs
push
push
xchg
js
in
fsub
pop
icebp
sbb
xor
pop
lcall
mov
out
hlt
test
nop
mov
jmp
pop
cmpsl
cmp
test
roll
and
xchg
add
leave
hlt
jge
test
lods
popa
orl
call
insl
sbb
lret
xchg
pop
ror
out
movsl
mov
pop
xor
addb
jl
and
jnp
ss
ljmp
aaa
aas
push
jl
inc
adc
jno
mov
call
in
insl
adc
cmp
xor
aaa
insb
fidivrl
mov
in
xchg
loope
enter
imul
daa
or
test
mov
lahf
pusha
sbb
push
dec
lret
adc
and
incb
dec
ja
mov
jp
xor
push
add
in
and
fstl
jne
addr16
ljmp
stos
aad
decl
bound
test
cmp
inc
xchg
dec
sahf
lock
inc
jp
xlat
adc
icebp
arpl
popf
xchg
ret
xchg
mov
insl
adc
push
fdivr
daa
adc
inc
inc
inc
and
cmpb
rcll
fmull
cs
repz
mov
and
dec
inc
scas
movsl
cmpsl
stos
sub
call
in
mov
dec
or
cmpl
orb
add
in
das
add
xor
dec
mov
rorl
inc
sbb
mov
pop
das
in
fldenv
out
xchg
dec
adc
test
adc
repnz
xor
sbb
add
scas
movsb
aam
xchg
das
js
jb
xor
push
sub
add
inc
bound
adc
sub
and
cmpsb
mov
cmc
cld
fldl
psubb
xor
dec
or
ljmp
cmp
inc
mov
inc
cli
cmpsl
inc
pop
sahf
aad
shrl
dec
call
dec
pop
adc
jns
mov
ffree
cltd
jle
add
lds
jp
mov
xchg
fstpt
lods
push
adc
dec
pop
loope
jge
cmc
dec
cmc
hlt
out
pop
and
xor
aam
jns
repnz
js
pop
sub
flds
adc
cmp
cmp
pop
ds
out
or
and
mov
and
mov
test
cmp
outsl
jecxz
sbb
pop
cmpsl
clc
inc
orb
dec
jecxz
sbb
xor
and
ds
test
mov
push
or
cmpsb
mov
loopew
adc
inc
inc
std
movsb
or
cmc
fwait
cli
xlat
shr
sbb
lods
movsl
dec
pop
stos
mov
int3
xchg
cmc
dec
in
mov
cmp
shrl
mov
sub
push
push
mov
loope
scas
and
fnstsw
ret
lock
pop
mov
out
mov
adc
dec
pop
notb
sbb
push
cmp
std
cltd
jne
jle
adc
daa
dec
sbb
jno
mov
jle
les
mov
shlb
xchg
into
sub
xchg
cmpsb
es
pushf
lcall
push
ficompl
int
add
inc
adc
push
fldl
lock
rclb
and
aam
mov
fbstp
jmp
xor
inc
or
pop
mov
sahf
shlb
fmuls
aam
mov
imul
cmpsl
sub
loopne
jp
aaa
dec
sbb
inc
je
adc
mov
and
arpl
jb
pop
lock
add
xlat
data16
and
in
rorb
xchg
testb
adc
aaa
sbb
scas
in
xor
xchg
mov
jmp
popa
js
into
xor
sub
clc
mov
add
sbb
fcoml
cmpsl
mov
ljmp
jnp
adc
test
in
pusha
repnz
sub
xor
pusha
xchg
add
pop
jns
popa
ljmp
jecxz
test
lahf
add
pop
xchg
jnp
add
fidivl
inc
dec
xchg
or
or
loopne
jmp
mov
mov
jne
cmp
iret
cli
sub
stos
add
out
inc
jl
push
outsb
fs
mov
test
lret
jecxz
repnz
fwait
aas
pusha
pop
sub
int3
dec
rorb
lahf
inc
dec
scas
mov
push
lcall
pop
ljmp
adc
pop
fdivl
mov
pop
jg
xor
lea
mov
and
adc
lret
dec
stc
adc
lds
jbe
and
mov
aas
jecxz
or
xchg
lock
sub
leave
sub
movsl
mov
das
sub
lods
mov
jl
addl
insl
pop
sbb
inc
jmp
add
shlb
or
out
int
icebp
andl
orl
cli
test
jae
inc
gs
fstps
in
lods
in
add
stos
out
push
xchg
cmc
inc
in
pushf
add
pushf
pop
sub
sub
inc
sahf
andb
ds
jne
xchg
pop
mulb
and
adc
dec
outsl
fcmovbe
jnp
enter
icebp
shl
jne
cmp
mov
sbb
mov
mov
cmp
mov
and
adc
pop
clc
push
inc
mov
dec
mov
incb
xchg
movsl
inc
or
loopne
enter
lret
mov
cmp
jg
test
sbb
int
xchg
int
fdivr
pop
pop
hlt
sbb
pushf
mov
sub
lods
xor
pop
inc
lret
fisubrl
sub
inc
loop
jle
mov
lret
repnz
mov
xchg
loope
jne
jns
sub
sub
ficompl
mov
push
mov
sub
dec
jo
inc
mov
stos
loop
jnp
imul
pop
mov
dec
sub
jne
sbb
ret
js
mov
lds
int3
inc
aam
lods
sub
add
in
int3
mov
push
mov
lds
mov
dec
arpl
leave
sarb
out
push
mov
or
or
imul
sarl
sbb
lcall
jecxz
addr16
sbb
lcall
xchg
xchg
sbb
pop
fidivl
sti
sbb
xorb
push
mov
sahf
pop
xor
repz
xor
sbb
pusha
pshufw
imul
adc
ja
add
push
mov
add
ret
inc
mov
pop
test
in
jl
mov
inc
ret
fstps
aaa
aam
outsl
mov
movsb
fld
mov
test
xchg
inc
fsubs
aaa
addr16
icebp
xchg
dec
jmp
cli
lock
mov
mov
or
mov
les
dec
movsbl
mov
shl
inc
addr16
cmp
hlt
cmc
fsubrl
mov
pushf
lret
negl
inc
mov
in
push
jecxz
pop
ljmp
or
jecxz
mov
jns
mov
mov
or
fdivrl
jp
xchg
in
xor
cmp
push
adc
js
cmp
inc
fwait
mov
inc
mov
mov
adc
mov
sarb
scas
es
imul
pop
lret
mov
adc
cmp
in
je
dec
repnz
xor
mov
dec
push
scas
int3
jecxz
pop
xabort
pop
stos
aam
movsb
push
pusha
imul
push
add
mov
mov
cltd
out
out
xor
das
mov
aas
fs
mov
shll
rcrl
mov
lahf
cmpsl
lcall
lods
mov
shrl
xchg
loopne
loope
adc
cmp
and
xor
dec
addr16
insl
packssdw
pop
or
std
hlt
sbb
loop
add
push
push
add
sub
loopne
xor
lods
mov
jge
lea
ss
sub
scas
lret
in
sbb
sub
shll
adc
and
addl
fs
call
xor
dec
xor
inc
insl
ds
movsl
inc
testl
test
pop
add
addb
mov
sahf
repz
jbe
sbb
pop
cmc
movsb
sub
mov
sarl
push
sbb
pop
fcompl
mov
cmp
jbe
fs
sbb
sub
out
mov
out
fsts
add
mov
and
in
jne
pop
fmuls
lds
bound
sub
rcl
add
jl
and
inc
pop
push
or
cmpb
or
test
cld
fildl
or
mov
and
xchg
lods
lods
shlb
popf
or
ficoml
add
xor
inc
dec
mov
divl
ret
lret
out
mov
rorl
loope
sbb
mov
xlat
rcll
push
sub
jg
in
pop
mov
mov
cmp
mov
stc
out
mov
mull
add
jp
adc
mov
inc
sbb
mov
sbb
loope
xorl
xlat
in
sbb
enter
pop
adc
xchg
hlt
movsb
and
loope
mov
adc
inc
repnz
pop
add
add
mov
mov
jge
nop
pop
sbb
and
aad
cmpsb
sub
imul
cmp
add
enter
push
jno
mov
loop
jbe
repnz
into
ret
or
repz
movsl
cli
sti
test
imul
lds
in
dec
mov
maskmovq
testl
dec
add
lds
inc
mov
jmp
sbb
test
rcrl
lea
cmp
dec
sbb
rol
jp
mov
ret
inc
popf
sub
sbb
divb
rcrl
xor
iret
push
push
cmp
mov
test
sbb
sub
mov
xlat
clc
jae
sub
pop
and
sbb
mov
mov
xor
call
sub
xchg
fdivs
in
jbe
ljmp
jno
or
or
jno
and
push
movsl
pop
mov
dec
pop
orb
pop
gs
push
hlt
dec
push
fiaddl
sub
xchg
ret
jmp
mov
pop
jmp
nop
das
cmp
sub
xor
shlb
imul
je
nop
sub
jo
adc
add
outsb
repz
mov
xchg
out
int
push
sbb
fdivs
cmp
popf
or
adc
movntps
cmc
jno
sbbb
mov
jecxz
int
pop
jmp
fwait
mov
mov
out
jnp
imul
xchg
jbe
lretw
push
sti
inc
jmp
fwait
mov
mov
out
jnp
imul
xchg
jbe
gs
inc
sti
inc
jmp
fwait
and
repnz
out
fistpll
imul
mov
outsb
fisttpl
fdivrp
outsb
jmp
fwait
mov
mov
sbb
jl
sbb
xchg
cs
imul
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
xchg
dec
test
insl
movsb
test
cmpsl
and
fcoml
and
push
popl
xchg
dec
test
insl
movsb
sbb
hlt
sub
add
xor
and
push
mov
fs
xchg
push
test
jne
add
adc
in
sub
pop
mov
push
loop
loope
cli
fs
and
jge
sbb
adc
pop
pop
or
push
je
mov
xchg
push
mov
pushf
mov
add
sub
cmp
test
adc
mov
xorl
dec
mov
in
gs
xor
lds
pusha
in
push
jno
mov
imul
mov
mov
aad
aam
sbb
int3
adc
lret
bound
lea
mov
js
bound
cmp
fnsave
cld
enter
pushf
lea
inc
jne
xor
adc
shl
pop
cmpxchg8b
into
aas
and
adc
fsubrs
lods
fs
xchg
push
test
insl
movsb
or
sbb
in
adc
add
xor
and
push
xchg
inc
cmpsl
je
and
stc
sub
repnz
outsb
mov
sub
insl
mov
dec
popf
cmp
cmp
xor
sub
adc
ljmp
test
std
bound
lret
add
or
les
lock
add
les
adc
add
xor
and
push
lea
lods
fs
xchg
dec
test
insl
movsb
sbb
hlt
sub
add
xor
and
push
lea
lods
fs
xchg
bound
jno
outsl
sarb
mov
rclb
lock
fsts
cmc
test
js
lock
cmp
sub
inc
sub
mov
mov
decl
faddl
jae
mov
xor
mov
adc
xorl
js
mov
sahf
sub
dec
aaa
jns
fcoms
jle
xchg
je
dec
push
pop
ss
mov
ljmp
ljmp
jg
mov
flds
lret
loop
sub
fcoml
insb
lods
jecxz
cltd
xor
aad
mov
cld
push
daa
push
mov
sbbl
lock
adc
mov
sub
push
mov
ds
and
mov
sbb
hlt
xorb
push
test
cmp
addr16
mov
js
xor
jae
push
sub
mov
shlb
jmp
dec
mov
fnsave
pop
add
lret
outsl
push
or
pop
sbbl
in
test
mov
sub
stc
or
shll
outsl
push
das
cmp
pop
mov
aad
xchg
js
sbb
stc
hlt
cmpsb
loopne
mov
js
jg
mov
loop
sti
addr16
outsl
out
loop
adc
insb
xchg
jmp
mov
inc
addr16
movsb
mov
incb
ljmp
cmpsl
mov
imul
idivb
movsb
xchg
push
push
dec
out
rorl
jns
lods
push
xlat
ret
mov
daa
fisttpll
cmp
adc
insb
mov
gs
into
cli
popa
sub
rcrl
sub
call
push
fs
mov
add
pop
cmpsl
ret
mov
gs
xor
pop
mov
aaa
add
push
sbbl
clc
mov
shrl
test
aam
les
pop
loope
in
fiaddl
add
push
das
pop
xor
sbb
pop
je
push
pop
push
and
imul
jg
cmp
xor
xorb
xchg
repnz
out
enter
mov
aas
mov
jge
push
and
popa
int3
shl
cmp
roll
daa
addr16
push
adcb
adc
pop
mov
add
cmp
movsb
push
hlt
sysenter
mov
cmp
leave
dec
fs
aam
imul
push
cmp
jge
je
xchg
and
ljmp
es
xor
jns
pusha
rolb
adc
xchg
scas
push
adc
mov
shrl
mov
aad
in
xchg
lock
jo
ss
push
popa
cltd
inc
lret
jp
sbb
and
fnstcw
xchg
adc
sti
cs
inc
call
fbld
jl
dec
xchg
inc
into
pop
repnz
or
mov
mov
repnz
mov
repz
jns
xor
push
ret
in
sahf
and
add
push
aad
pop
mov
mov
shlw
nop
mov
lret
das
inc
xchg
lcall
xchg
push
test
xchg
stc
ss
pop
mov
mov
out
out
and
fcomi
outsl
and
out
imul
mov
pop
in
or
leave
fcmovnb
lahf
mov
adc
adc
shrl
lea
cmp
xor
neg
pop
mov
sbb
in
jnp
fwait
sub
xchg
mov
aad
jnp
cmp
add
add
push
sbb
push
jl
sub
shrl
outsl
lret
jno
sti
inc
jecxz
lds
xor
bound
cld
je
shl
or
popf
adc
ret
pushf
push
and
mov
ss
dec
icebp
jns
jo
pop
inc
mov
jecxz
mov
out
mov
push
ffreep
call
pop
xor
jmp
xchg
rclb
push
inc
jmp
ret
or
jg
mov
call
lret
sbb
pop
xchg
pop
divb
add
add
hlt
push
jns
dec
adc
mov
pop
and
push
xor
imull
mov
inc
enter
jns
iret
push
adc
jbe
xor
movsb
xlat
ljmp
jge
xchg
cltd
rclb
mov
lds
aaa
pushf
or
cmpsl
dec
loope
xor
pop
push
lret
shl
add
add
stos
cmc
sbb
or
inc
mov
or
adc
rclb
push
and
lds
xchg
movsb
fcompl
rorl
xchg
mov
push
sbb
stos
mov
mov
cmp
adc
pop
fwait
or
push
bsr
mov
xchg
int
mov
jecxz
pusha
adc
cmc
mov
adc
daa
or
int3
mov
enter
out
nop
lock
test
mov
push
fwait
sub
jl
out
loopne
push
test
push
cwtl
dec
and
inc
nop
mov
in
push
test
push
mov
dec
outsl
cmp
or
mov
imulb
lods
gs
jbe
mov
in
adc
jae
icebp
test
sbb
dec
fldl
test
lea
test
xchg
mov
xor
sbb
fdivrp
shlb
stos
fidivrl
jbe
mov
js
adc
xchg
enter
push
sahf
inc
scas
aaa
stos
push
scas
or
adc
icebp
xchg
loop
xchg
dec
jb,pt
test
insl
or
loope
or
lods
and
lods
sldt
mov
jg,pt
mov
cmp
sti
sbb
push
pop
fsts
mov
lret
sub
and
xor
pop
dec
jp
or
sub
int3
jge
rclb
nop
hlt
call
adc
notl
add
or
ss
ljmp
dec
les
adc
pop
push
mov
jecxz
addr16
dec
mov
xor
or
xchg
or
gs
addr16
push
pop
lock
popf
lret
test
cmp
mov
pmuludq
repz
and
in
in
pop
lcall
test
jnp
mov
js
inc
pop
sti
xor
xchg
xchg
cli
mov
xor
dec
outsl
movl
xlat
or
or
mov
aad
sarl
and
push
and
inc
jne
lcall
xor
loop
and
or
shll
lret
pop
js
mov
daa
rcrl
jne
sbb
mov
ss
js
add
pop
faddp
shrl
add
scas
cmc
idiv
xor
sarb
push
push
mov
shrl
inc
insb
jns
in
mov
pop
fisubrl
push
imul
adc
ficoml
pop
mov
jb
iret
cli
lret
popa
inc
sub
fsubp
enter
or
adc
cmpsb
xchg
sub
add
cmp
repnz
jbe
es
mov
cli
or
ret
xor
out
pop
aam
lock
dec
mov
clc
out
pop
jge
adc
insl
scas
push
pop
mov
pop
cmp
cmp
xchg
jl
dec
mov
cmp
fisubrs
adc
js
cmp
xor
sub
push
loope
add
adc
jge
push
cmp
xchg
pushf
lds
cvttps2pi
mov
es
mov
or
add
rcrl
cmp
xor
mov
outsl
or
mov
shlb
dec
inc
mov
and
cmpsl
sub
mov
xor
negl
and
xchg
sbb
pop
xorl
sub
push
fstpl
bound
push
shlb
mov
ljmp
mov
xlat
mov
push
fs
inc
out
cmp
jmp
xor
jo
ja
cwtl
push
mov
dec
add
push
xchg
xor
add
loop
push
divb
ret
add
orb
sbb
mov
out
cmc
pop
pop
ficoms
mov
pushf
outsl
ret
mov
into
data16
jns
sub
inc
cwtl
xchg
sbb
fcoml
dec
adc
mov
pop
jno
jecxz
pop
movb
scas
mov
jl
jp
aad
daa
call
dec
push
enter
xor
lds
cltd
nop
js
and
fnsave
shlb
popf
push
push
mov
mov
jae
in
jns
sbb
movsb
mov
loope
sub
jne
mov
xor
cs
sbb
int3
mov
popl
mov
sbb
xchg
push
sahf
icebp
xlat
lods
loopne
das
das
loop
es
fadd
lods
xlat
pop
xchg
mov
dec
pop
sbb
mov
push
insl
and
fildl
push
dec
aaa
lds
lret
pop
mov
sbb
stos
outsb
xor
sbb
cmp
in
iret
pop
iret
mov
mov
aam
lret
and
jae
add
sub
or
sub
inc
in
xor
ficoml
mov
xchg
or
pop
cmp
push
pop
in
fwait
loope
cld
stc
xchg
sub
test
sbb
std
dec
add
ret
outsl
mov
pop
mov
push
faddl
and
mov
in
aas
pop
sbbl
adc
xchg
std
sbb
cs
insl
cmp
mov
mov
ret
inc
lock
in
jne
mov
nop
xchg
pop
cmpl
inc
call
and
stos
jl
in
jl
adc
add
sbbb
adc
shll
shrb
adc
jmp
inc
fstpt
or
cwtl
jg
push
test
mov
pop
in
or
popf
push
bnd
aaa
inc
cs
loopne,pt
std
mov
or
jno
sbb
xlat
lock
inc
fs
dec
test
sub
arpl
xchg
popa
dec
xchg
repz
mov
repz
pop
sub
out
xor
mov
or
or
dec
mov
mov
loopne
xchg
or
movlps
call
cmp
in
push
stc
pop
cmp
adc
cmp
sarl
adc
rol
ds
pop
jo
loop
jmp
lds
sub
shr
sbbb
fbld
je
mov
mov
inc
repnz
jp
pop
incl
test
push
imul
pop
shll
cmp
mov
mov
and
dec
iret
leave
push
hlt
mov
cli
movsb
sbbl
mov
xchg
xchg
out
outsb
sahf
das
jbe
adc
push
inc
sub
pop
lods
insb
and
int
push
dec
loop
push
scas
cmc
popf
incl
xor
xchg
bnd
mov
and
roll
mov
jno
fdivl
adc
in
dec
jmp
push
and
mov
ret
and
mulb
mov
add
cs
xor
push
jmp
add
cmpsl
fiadds
mov
add
jnp
sub
repz
idivb
fidivs
ljmp
popf
outsb
test
loop
or
and
sbb
ljmp
sub
or
push
ja
or
push
lock
ss
call
ss
push
fcomi
push
cmp
push
sub
push
inc
mov
pop
push
and
ss
dec
mov
pop
popa
push
fwait
dec
lahf
sub
mov
push
shlb
fneni(8087
cmp
lahf
add
hlt
add
cltd
add
lret
cmpsb
cmp
xchg
mov
jo
dec
scas
in
test
roll
add
rorb
adc
pop
pop
cmp
xor
jmp
xchg
ret
les
jle
test
sarb
outsb
pop
inc
ds
lahf
movsl
mov
push
lods
roll
push
aaa
push
pop
xor
adc
lock
les
in
pop
xor
push
shlb
cmp
daa
ljmp
je
xor
pop
jnp
cmp
jp
inc
mov
push
insl
push
cwtl
shlb
push
dec
fimuls
cmp
push
leave
jmp
mov
mov
rclb
adc
inc
outsl
imul
es
xchg
bound
push
jnp
jnp
dec
sub
rorb
and
fwait
mov
jbe
and
xchg
mov
xchg
push
and
adc
dec
mov
add
xchg
divl
cmpsb
mov
shll
lret
jle
decl
jmp
repz
xlat
add
rclb
stos
dec
xlat
ret
jp
ret
cld
xchg
je
lods
mov
movsb
mov
rcl
fldl
cmpsb
xor
je
xor
insl
and
enter
repnz
repnz
mov
adc
pop
lret
cld
adc
in
jns
insb
xor
and
fsub
xor
daa
mov
mov
cmp
xor
leave
daa
mov
test
test
push
dec
push
pop
mov
ror
sti
cli
js
in
inc
jge
mov
sbb
adc
or
xchg
insb
ss
mov
xchg
ljmp
add
cli
negb
cmpb
loop
mov
ss
xchg
pop
call
insb
jnp
xchg
xchg
sbb
xorb
cmpsb
inc
mov
mov
pop
mov
stos
inc
sbb
test
jmp
xchg
pop
add
fbld
mov
xor
movsb
or
fcoms
lret
adc
test
sub
dec
lahf
and
in
sbb
xchg
xlat
xlat
sbbb
aam
mulb
outsb
jns
mov
fs
xchg
mov
jmp
cvtps2pd
enter
or
dec
xor
repz
insl
pause
lds
and
jmp
js
aad
xor
scas
dec
push
cmp
lea
and
int3
cmc
mov
sbb
sub
pop
push
test
sub
inc
int
aaa
popa
jbe
jnp
cmp
cld
les
wrmsr
inc
xchg
cmp
xchg
bound
mov
adc
push
jmp
or
mov
sub
int3
xor
addr16
sub
xchg
bswap
inc
cld
pop
mov
pop
dec
xor
add
or
lds
insl
sbb
sbb
into
sbb
mov
aad
lret
mov
jp
xchg
sub
xchg
ljmp
scas
cmc
lret
or
mov
arpl
cli
mov
jno
mov
inc
arpl
scas
push
insl
xor
fiaddl
mov
inc
jbe
and
fnstcw
in
mov
fmul
add
pop
mov
cmp
or
sub
mov
xor
jns
mov
fcompl
mov
cmp
mov
xchg
mov
ret
and
xor
arpl
sbb
dec
mov
mov
orb
jge
add
test
cmp
imul
ljmp
xchg
fdiv
mov
ss
and
or
ja
outsb
push
insb
xchg
jl
xor
loopne
cmp
push
lods
hlt
dec
dec
repz
scas
pop
lds
fisubs
dec
jbe
sti
jmp
imul
or
lds
mov
lret
daa
inc
outsb
fisubs
pop
inc
mov
jne
andb
sub
dec
xor
sub
adc
loop
out
cltd
daa
dec
push
addl
lahf
jnp
adc
dec
ret
rcr
shrl
mov
loopew
and
jae
mov
xchg
fistpl
mov
clc
fs
dec
mov
fnstsw
fwait
rcr
test
popa
mov
ljmp
pusha
mov
adc
cmp
pop
push
subb
cltd
push
xchg
mov
pop
xor
sarb
jnp
stos
add
vmread
jmp
pushf
sub
mov
xor
and
sbb
lods
jno
cmp
orl
out
sub
xchg
xchg
mov
test
dec
jmp
repz
cmpb
dec
jp
mov
adc
sahf
dec
rolb
push
rol
or
frstor
rclb
loopne
push
inc
mov
dec
pop
adc
add
push
pop
dec
int
loop
stos
insl
idiv
test
xchg
ret
xchg
es
pop
xorl
mov
not
rorb
add
jo
or
je
out
test
cmp
adcl
or
push
arpl
test
mov
mov
lcall
inc
mov
dec
out
daa
mov
out
lret
mov
xor
inc
jo
dec
es
in
jp
test
dec
cli
sub
jge
mov
dec
cltd
enter
aaa
daa
into
test
fadd
sub
cmp
lea
fisubl
inc
and
push
fcompl
mov
in
push
xor
ret
jnp
sbb
aad
enter
xchg
jl
iret
daa
mov
xchg
shr
xor
fucomip
ret
inc
inc
cli
out
insb
mov
movsb
or
aaa
fisubs
stc
cmp
mov
mov
test
lcall
mov
or
dec
movsb
mov
dec
and
inc
fsubl
pop
test
jno
adc
and
inc
pop
mov
mov
pushf
and
gs
sub
clc
inc
mov
adc
lahf
mov
xchg
nop
xor
sahf
test
sub
mov
es
mov
mov
xchg
pop
dec
test
cmp
pop
add
call
sbb
sub
test
fnstenv
adc
or
push
lcall
rorb
rcrl
ljmp
scas
rcrb
mov
pop
int3
mov
mov
fld
insb
push
jo
lods
rcrl
aam
mov
jnp
aam
push
xor
mov
mov
addb
jae
push
mov
lret
sbb
dec
rorb
and
or
aad
or
mov
or
sbb
out
jg
add
movsl
lock
sarl
loopne
ja
pop
in
fstps
scas
xchg
js
int3
lea
enter
adc
out
loop
jb
add
jg
leave
sarb
fbstp
jmp
pushf
push
xchg
dec
xchg
lcall
out
jns
nop
gs
push
pop
ds
sbb
add
outsl
push
data16
mov
add
movsb
push
fstpt
jle
pop
adc
mov
mov
fwait
sub
mov
mov
addl
clc
int3
xchg
idiv
pop
sub
rorb
das
mov
loope
cld
mov
bound
xor
jb
cmp
pop
xor
in
xor
pop
lret
dec
or
jp
sub
adc
xor
sbb
outsb
sbb
ss
inc
jne
sub
mov
xchg
xchg
push
or
xchg
andb
mov
jp
add
incb
push
sub
or
inc
inc
and
cld
pop
pop
mov
mov
shll
ds
iret
pop
std
jae
jno
call
leave
inc
in
cmp
pop
lret
sbb
sbb
hlt
int
not
es
xchg
sbb
fadds
jecxz
or
movsl
out
std
xchg
fs
and
lahf
in
mov
arpl
mov
cli
xor
out
stc
or
and
inc
add
xchg
push
xchg
xchg
push
sti
aad
aad
add
xor
xchg
rcrb
push
jb
xor
adc
das
and
or
outsb
push
fsubl
scas
insb
movl
jae
mov
cmp
sbb
sti
gs
mov
into
shrb
mov
imul
mov
fsubl
mov
xor
push
dec
int3
inc
mov
jns
out
jno
in
shlb
push
popa
jmp
pop
andl
fs
dec
sbb
mov
inc
xchg
cmp
bound
jge
repnz
fs
imul
mov
imul
jle
sbb
adc
into
mov
jecxz
pop
outsl
mov
popf
inc
popf
xor
popf
aam
mov
roll
aaa
sub
out
jbe
dec
push
cltd
fcompl
loopne
fsubl
mov
push
xchg
popf
gs
hlt
mov
sbb
mov
pusha
in
pop
xchg
das
mov
dec
popf
sarb
popf
shlb
and
testl
dec
shll
sbb
jo,pn
roll
jecxz
fninit
lea
sarl
xchg
das
inc
jecxz
clc
data16
push
in
jg
fucomp
jo
lahf
xor
jg
pop
mov
push
xor
fldt
test
shrl
xchg
sar
jmp
sbb
mov
insl
in
es
push
push
sti
mov
mov
and
push
jge
mov
cmpsl
and
xor
int3
jp
jg
and
jmp
or
loop
mov
lods
andl
cld
cmp
mov
fildl
test
insl
movsb
sbb
hlt
sub
add
xor
and
push
lea
lods
fs
xchg
dec
test
insl
movsb
sbb
hlt
sub
add
xor
and
push
lea
lods
fs
nop
dec
test
insl
movsl
sbb
cmc
sub
add
popf
push
mov
scas
fs
xchg
dec
test
mov
mov
jmp
scas
push
xor
push
ljmp
fwait
mov
aam
in
xchg
add
mov
mov
add
arpl
jae
inc
adc
add
hlt
mov
adc
movsb
ret
xchg
shrl
ja
adc
jae
inc
adc
add
push
mov
orl
jecxz
repz
ret
sahf
shll
jo
cmp
inc
or
mov
movsl
lock
mov
dec
pop
sub
jmp
scas
call
jmp
dec
sub
jbe
push
cmp
mov
and
cwtl
mov
data16
lahf
lods
dec
pop
pushf
cmp
mov
fs
je
push
jns
ret
cli
fsubs
rclb
cmc
rclb
xchg
cmp
icebp
and
and
test
pop
and
sbb
sub
movsl
ret
js
push
iret
xor
mov
mov
pop
jno
mov
or
adc
sti
xor
in
test
pop
xor
adcb
pop
jb
inc
clc
cmp
js
les
mov
movsb
ret
xchg
rcll
and
add
js
or
inc
or
ss
fimull
adc
ret
bound
aaa
adc
icebp
jg
push
jae
dec
pop
pusha
pop
insl
mov
cmpsl
imulb
ret
std
shll
inc
push
push
je
jnp
and
jno
ja
xchg
add
mov
rep
ret
xchg
roll
push
adc
jae
inc
adc
add
hlt
mov
adc
movsb
ret
xchg
roll
push
adc
jae
inc
adc
add
hlt
push
mov
test
pop
lods
jp
int3
mov
xchg
lds
ljmp
dec
xor
dec
jecxz
pop
je
in
ljmp
xor
xchg
jne
mov
inc
mov
xor
pop
insb
mov
cltd
xchg
lahf
test
jmp
push
add
xchg
addr16
cmpsl
mul
sbb
inc
inc
popf
xor
loop
pop
lahf
leave
cmp
dec
cmc
rorb
mov
popf
push
sub
aad
cs
pusha
lds
push
dec
pop
jp
add
mov
mov
aaa
fimuls
pop
push
ror
dec
sub
je
push
push
aaa
dec
push
or
fiaddl
dec
mov
xorb
aaa
cwtl
icebp
jp
ds
mov
adc
sub
inc
xchg
ja
and
lds
test
shl
xor
loope
mov
decl
test
cs
add
in
sbb
in
iret
imul
sbb
jo,pt
xor
ret
movsb
sbb
jg
mov
adc
jmp
xor
les
sahf
lret
dec
push
push
pop
pop
dec
arpl
and
call
stos
fwait
add
imul
xchg
test
pop
push
lds
in
xchg
and
insl
jmp
movsl
out
ja
xor
mov
lock
jb
subb
push
jl
scas
nop
cmpsl
fldl
gs
out
mov
mov
bound
xchg
adc
push
out
add
shlb
push
movsb
sub
popf
loopne
int3
stc
ljmp
cmp
es
loopne
xchg
mov
stos
jne
push
pop
flds
aam
movsl
cwtl
add
cs
mov
push
fcoms
mov
mov
das
push
in
and
mov
adcb
scas
aad
fadd
sub
cmpsl
icebp
mov
cli
lods
aam
out
sbb
adc
ss
jge
scas
je
push
ljmp
inc
popf
popf
mov
inc
out
ret
cmp
and
push
jnp
add
or
dec
aad
movsb
adc
adc
adc
leave
int
add
push
mov
lahf
lret
imul
fists
jge
shrb
int3
sbb
call
pop
xor
ljmp
dec
adc
aas
adc
lods
add
repnz
or
fadds
xchg
subl
movsl
pop
into
movsl
std
or
out
aam
es
mov
xchg
push
rorl
aad
mov
sub
inc
movsl
pop
loope
out
clc
icebp
loope
pop
pop
xchg
leave
shlb
out
imul
lea
xchg
les
pop
std
cli
divb
mov
lret
push
jno
cmp
shll
and
xor
jmp
rclb
jb
das
adc
std
adc
push
cmpsb
pop
sub
hlt
sti
test
lret
and
jge
clc
xor
lods
fdivl
adc
insl
mov
cmpsl
scas
addr16
mov
cmc
sub
xchg
shlb
imul
xchg
push
gs
push
out
and
xor
sarb
ljmp
lret
mov
jp
subl
sbb
or
or
out
int
xorps
shl
adc
adc
cltd
scas
push
push
imulb
xchg
mov
imull
sbb
lock
divb
sub
xchg
shr
call
aad
enter
pop
out
imul
dec
mov
in
jecxz
subb
je
cmp
cmp
lds
push
addb
jge
mov
rcll
dec
addr16
push
jp
je
iret
fnstsw
xor
in
mov
mov
add
mov
sbb
movsl
in
test
pop
loopne
mov
fbld
dec
dec
test
inc
enter
xor
scas
ds
fmulp
and
mov
push
arpl
pop
iret
push
dec
loopne
pop
outsl
cmp
lea
adc
andl
cmpsl
std
imul
push
pcmpgtd
or
leave
sbb
jne
stos
pushf
adcl
mov
pop
mov
sahf
pop
push
pop
add
sub
in
inc
push
movsb
clc
punpcklbw
bound
imul
mov
pop
add
out
jecxz
pop
das
mov
fwait
clc
add
jg
les
pop
mov
sahf
jle
ret
cli
sahf
neg
mov
pop
mov
fcmovnb
mov
xchg
jns
mov
xchg
fwait
jns
add
jmp
jl
adc
popf
inc
lods
jp
push
stc
xchg
mov
mov
fimuls
sub
adc
sub
mov
iret
into
push
mov
outsb
adc
push
and
js
pusha
mov
sti
pop
adc
adc
mov
pop
scas
cmp
sti
or
shll
add
std
stos
sub
xchg
mov
fnstenv
nop
mov
inc
outsl
dec
adc
and
leave
push
xor
cmp
and
ljmp
xor
or
xor
jmp
aas
testl
test
mov
cld
andl
mov
push
dec
ja
data16
pop
and
add
and
ljmp
iret
xchg
or
mov
and
bound
xor
adc
mov
push
inc
mov
jno
mov
cmp
cmp
das
sahf
mov
repnz
adc
cltd
cmpsl
mov
roll
mov
mov
fidivrl
shrl
outsb
push
ds
leave
pop
lods
aam
mov
adc
movsl
das
xchg
jb
sub
jle
inc
mov
push
inc
adc
shll
lods
and
stc
and
addl
mov
cmp
sub
in
mov
pop
dec
in
fwait
stc
cmpsb
mov
ret
adc
add
push
push
mov
xor
jp
mov
repz
roll
sub
mov
gs
or
sub
leave
mov
call
jne
mov
stos
xor
mov
sub
repnz
cmpsb
movsb
orl
leave
cwtl
xchg
movsl
lock
call
shll
push
loopne
lods
lret
push
cwtl
je
or
test
cmc
rorl
mov
lods
sbb
mov
xlat
mov
pop
sub
cwtl
or
xor
xchg
scas
inc
jb
xchg
sahf
xchg
sub
pushf
hlt
shlb
push
mov
and
lea
fs
lahf
sbb
lcall
sub
adc
cmp
cld
pop
cwtl
sar
in
fwait
jae
loop
les
jmp
ret
add
mov
fsts
lret
push
cmpsb
dec
cmp
mov
jno
mov
xor
lret
jno
xchg
sbb
sarl
mov
adc
mov
jne
icebp
daa
mov
pop
inc
push
cltd
jecxz
popf
fistpll
xor
test
pop
cmc
rcrb
jb
dec
sbb
mov
push
shlb
adc
lcall
xchg
cmp
hlt
sbb
cmp
mov
stos
addr16
xchg
mov
mov
clc
or
fdivrl
repz
adc
fs
jo
mov
pop
mov
push
xchg
xor
sbb
cmp
mov
jbe
inc
mov
lds
addl
daa
mov
inc
dec
test
push
jg
jns
xlat
pop
call
adc
jecxz
cmpsl
lods
push
shll
or
mov
mov
jns
dec
push
mov
mov
dec
sbb
sbb
sbbl
insl
fbstp
inc
lods
sbb
push
pop
clc
push
push
out
pushf
loope
inc
xchg
sub
ret
flds
outsb
cmp
adc
inc
fs
mov
fidivrs
enter
lcall
inc
mov
add
xchg
fidivrl
jbe
out
adc
cmp
jmp
arpl
aas
nop
mov
repz
cmp
popf
cwtl
sbb
ss
add
cmp
notb
or
and
xchg
sub
lcall
cmp
pop
pop
ss
push
inc
mov
sbb
negb
stc
ja
xchg
movsl
mov
jne
lods
xlat
lods
mov
rolb
push
inc
ss
mov
dec
inc
jle
inc
arpl
shll
outsb
scas
xor
in
out
lea
or
cmp
ficoml
pop
jge
jle
int
sub
pushf
mov
cli
push
iret
lcall
pushf
or
push
mov
popl
and
mov
jbe
shr
fisubrs
add
std
pop
cmp
xlat
and
mov
aam
inc
and
leave
ret
push
loop
or
sbb
jmp
lcall
xchg
inc
mov
movsl
mulb
sub
or
aam
leave
xor
dec
adc
push
mov
mov
add
ss
pop
and
enter
pop
dec
shl
xchg
cmp
outsb
push
pop
dec
xchg
in
jge
fcmove
ds
out
orb
jp
test
aaa
sahf
mov
out
cmp
push
and
xor
or
addr16
ja
mov
js
pop
inc
outsb
imul
push
mov
jmp
fs
adc
push
push
cwtl
lock
sar
int
subb
out
fadd
pop
inc
pop
cs
outsl
mov
out
ljmp
mov
add
pop
std
ljmp
js
pop
sbb
shrb
sub
lock
fsubrl
mov
xor
add
add
ds
stos
jle
jae
mov
int
aaa
cli
lock
adcl
push
arpl
sbb
mov
push
cmp
pop
sbb
or
inc
jmp
int3
inc
addb
shrb
xchg
xor
movsl
mov
fadds
out
add
pop
or
sbb
jle
inc
aad
es
mov
icebp
mov
outsb
push
lret
push
in
jno
das
add
mov
xchg
lahf
fnstsw
fwait
pop
out
lods
in
mov
cli
outsl
xor
xchg
lea
or
test
enter
inc
pop
ficoml
js
js
jecxz
int
inc
and
call
xlat
jne
push
pop
sub
push
add
cmp
frstor
mov
cmp
jge
jo
cwtl
pushf
mov
mov
add
pop
pop
ja
outsl
adc
sbbl
aas
nop
jno
adc
cmc
push
sub
sub
js
push
repnz
jo
lret
adc
pop
ret
mov
hlt
mov
inc
xor
ss
jl
and
pop
sbb
dec
mov
enter
je
popf
jns
mov
cmc
lret
stos
mov
mov
or
and
aaa
adc
dec
pop
test
movsl
and
sub
mov
inc
mov
in
cmpsb
mov
out
test
push
dec
pop
dec
loope
cli
add
xchg
cwtl
and
mov
arpl
outsb
ds
lods
insl
sbb
call
jp
jp
int3
xchg
std
mov
arpl
xchg
movsl
aas
or
rorb
scas
and
movsb
mov
cmp
xlat
xchg
daa
cmpsb
pop
dec
enter
mov
cs
and
clc
xchg
fistpl
xor
sbb
inc
add
cli
push
out
int
loopne
jg
enter
mov
xor
or
pop
jp
shll
or
inc
jno
mov
popl
sub
lods
sbb
loopne
xchg
jb
mov
mov
add
dec
popa
sahf
arpl
jmp
sub
cs
dec
mov
pop
push
xor
fnstsw
add
mov
jno
pop
lahf
in
mov
jae
aas
push
and
and
mov
and
scas
fmull
cmp
ret
mov
out
lcall
in
and
test
frstor
insb
xor
inc
int3
fsubl
mov
outsb
lea
mov
sub
loopne
dec
sahf
fcmovnb
ja
clc
test
add
jne
cli
xchg
pop
mov
imul
dec
stc
mov
pop
and
icebp
adc
and
cmpsb
out
fidivl
mov
les
out
sbb
jno
loopne
and
aam
cmpsl
inc
mov
push
dec
ret
dec
cmc
or
daa
cltd
test
mov
stos
mov
inc
fsubl
hlt
dec
hlt
sbb
mov
pop
push
adc
dec
scas
fbld
into
fwait
movsb
jno
nop
xor
push
push
push
psubsb
sub
push
add
enter
lock
lret
sbb
fnstsw
cmp
adc
sbb
jmp
mov
xchg
mov
pop
mov
pusha
fisubs
out
push
bound
bound
cs
or
cmpsb
pop
xor
aaa
sub
pop
adc
fdivrs
inc
cld
sub
push
push
arpl
les
scas
inc
push
lretw
push
outsb
into
cli
ja
out
mov
adc
lcall
add
fistps
sbb
test
ret
imul
pop
jg
mov
mov
push
stos
lret
cmp
nop
sbb
pop
mov
mov
lea
fists
repnz
xchg
pushf
sbb
int3
icebp
and
popf
or
movsl
lock
mov
push
dec
je
lcall
jl
lds
pusha
aad
adc
les
push
jnp
ja
cmp
mov
push
insb
add
add
test
dec
das
call
inc
cmp
mov
sub
adc
fbstp
test
mov
flds
cmpsl
pop
cmp
in
in
and
fs
pusha
out
mov
in
jae
jp
adc
repnz
std
and
cmp
iret
push
push
mov
iret
push
xorb
xchg
xchg
inc
sub
jp
sbb
jle
bound
or
push
xor
outsb
dec
idivb
add
inc
jbe
xchg
imul
test
add
arpl
adc
mov
dec
gs
add
sub
jp
mov
mov
jnp
fistpl
xor
test
sub
daa
mov
clc
pop
sub
pop
pushf
mov
mov
jl
fldl
adc
imul
add
mov
pop
mov
aaa
lcall
call
movsl
mov
shrl
cmpsl
cmp
scas
scas
inc
addb
inc
fnstsw
and
or
cmpsb
repz
lea
pusha
test
iret
jne
pushf
xchg
xor
pop
loope
mov
or
pop
sub
xor
fcmovnb
and
mov
std
std
push
stos
bound
mov
testb
mov
add
loop
sbb
nop
xor
xchg
popf
mov
and
push
bound
aam
pop
stos
jle
in
dec
xor
push
rclb
cmp
jne
cltd
hlt
dec
cmp
pop
in
jbe
or
jecxz
mov
jo
dec
fs
sbb
insl
pop
sbb
add
mov
pop
xchg
out
jge
cltd
push
std
push
aam
test
leave
outsl
fcomps
sbb
in
and
adc
mov
sub
ret
jle
mov
inc
outsb
cmp
jecxz
ret
ret
les
fcomps
popa
cmpsb
cmp
push
or
pop
fwait
mov
ja
pop
aas
xor
xor
cmpsb
add
cmc
mov
xchg
and
hlt
xor
mov
mov
mov
ljmp
addb
push
iret
or
mov
push
pop
cmc
jb
dec
dec
or
cmc
pop
mov
sub
and
jae
pop
insb
or
aam
stos
fcmovu
jmp
push
mov
loopne
cs
push
jnp
sbb
cmp
xor
and
cmp
add
loope
add
mov
cmpsl
adc
pushf
mov
neg
sbb
test
cltd
mov
int3
imul
jnp
int3
lods
out
test
enter
push
cmp
xor
stos
sbb
ret
div
xchg
xlat
inc
loope
jb
inc
xchg
or
push
addr16
int
push
sbb
test
or
xchg
cli
fisttpll
xor
fdiv
jl
cwtl
cmpsl
and
xchg
cwtl
mov
jmp
xchg
jb
out
pop
sahf
inc
jo
out
sbb
dec
xchg
imul
mov
clc
jno
sbb
imul
or
sbb
shll
pop
adc
nop
cmpsl
stc
xor
push
add
xchg
aaa
sub
ret
cmp
sub
inc
notb
push
enter
enter
rcrl
or
cli
lock
mov
aas
push
fidivrl
add
lds
incb
jae
cmc
mov
shrb
nop
mov
mov
xchg
xlat
or
cmp
mov
push
mov
enter
sub
inc
jae
xor
xchg
movsl
cmp
clc
mov
aas
stos
in
test
popf
mov
and
sub
pop
ja
jg
and
inc
mov
int
mov
das
push
jmp
popa
aaa
out
cs
pop
mov
adc
sti
mov
push
adc
push
mov
adc
jo
jnp
or
pushf
xchg
sbbl
jecxz
cmpsl
and
jnp
test
ss
jns
sbb
sub
leave
mov
js
sub
dec
cmpsb
stos
sub
mov
sbb
mov
sub
bound
pushf
lret
or
xor
mov
shl
xlat
daa
data16
add
push
icebp
mov
push
mov
inc
cmp
adc
and
cmc
xchg
ja
mov
jbe
out
dec
fldlg2
popa
lods
fidivs
add
bnd
int
push
lods
adc
call
or
outsl
cmp
push
sar
mov
pop
dec
lret
or
into
in
std
cmpl
mov
or
cld
pop
or
push
pop
dec
push
aam
mov
movsl
jmp
xor
and
inc
addr16
outsl
jecxz
divb
xchg
ret
sbb
or
in
mov
sbb
ds
loope
pop
inc
xlat
pop
pop
imul
jecxz
sub
test
or
jmp
xchg
lahf
aad
jne
cmpsl
pop
inc
inc
cmp
inc
inc
ss
mov
cld
negl
int3
pop
addb
or
popa
bnd
dec
lods
icebp
in
lret
adc
shll
push
les
fidivl
jo
pushw
xchg
lods
ds
jne
pop
out
cmp
int
movsb
mov
sbb
jmp
cwtl
daa
pushf
pop
mov
pop
push
in
xor
inc
ss
dec
ds
sub
jae
sbb
lds
push
lret
icebp
jle
sub
push
mov
add
jb
mov
jns
ss
rorl
jbe
js
loop
clc
mov
mov
hlt
mov
pop
stc
stos
clc
fldt
aam
or
xchg
add
je
data16
mov
jmp
jecxz
xchg
mov
jl
ljmp
or
inc
loopne
daa
jle
gs
pop
dec
lahf
cmp
add
sub
or
enter
ret
cmpsl
fnsave
cmp
lret
push
lret
sahf
xchg
repnz
inc
popa
imul
js
xchg
jne
xchg
repz
xor
mov
xchg
ss
pop
scas
js
sbb
mov
ret
mov
xor
xor
neg
dec
js
shll
push
imul
or
in
imulb
mov
cli
sbbb
out
test
add
mov
adc
and
xchg
lea
roll
es
incl
mov
sbb
fidivl
ja
aam
xchg
cli
xchg
ja
out
add
jne
aam
popl
lock
and
dec
mov
push
pusha
cmc
cmpsb
xchg
jno
imul
adc
cmp
jl
out
pop
out
fsts
mov
xchg
sbb
push
leave
decl
repnz
aam
or
test
jle
jo
push
negl
sbb
pop
pop
inc
and
add
dec
pop
jle
arpl
lret
dec
movsb
mov
sub
call
push
in
pop
fsubrl
mov
rcrl
and
inc
popf
mov
cmp
ret
std
fistps
push
mov
mov
xor
shl
jle
cmp
add
sub
adc
mov
test
jbe
pop
out
jle
mov
mov
push
xchg
xorb
cmp
cmp
cltd
xchg
lahf
arpl
dec
xchg
shl
adc
in
rcll
movsb
ret
xchg
roll
push
adc
jae
inc
adc
add
hlt
mov
adc
movsb
ret
xchg
roll
push
adc
jae
inc
adc
add
lock
or
shl
repz
ret
nop
roll
push
adc
xor
inc
sbb
mov
xorl
test
mov
movsb
ret
adc
inc
and
adc
adc
sti
pop
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jbe
xchg
mov
cld
fst
cld
in
sbb
or
pop
add
or
push
add
add
add
sub
jbe
jbe
mov
mov
add
flds
mov
push
add
mov
sub
outsl
add
add
add
add
sub
xchg
add
add
add
add
add
add
add
nop
add
add
add
outsl
add
add
add
dec
add
add
add
add
addb
add
add
add
add
adc
faddl
inc
add
add
add
add
mov
add
add
pop
pop
inc
add
or
lods
add
aad
cli
add
add
add
pop
add
add
add
add
add
ret
add
add
add
add
pusha
add
add
add
adc
push
add
inc
add
add
add
add
mov
mov
add
outsl
add
inc
add
movsb
add
add
add
add
mov
sbb
nop
add
add
add
pop
add
add
add
add
cs
add
push
mov
inc
add
add
add
add
inc
add
push
add
cmp
add
add
add
add
cmp
adc
testl
test
add
popf
add
add
add
add
add
add
add
add
les
movl
popl
jl
jo
add
add
add
add
pusha
add
pop
add
add
lods
add
pop
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
and
inc
add
popf
add
add
add
add
pop
add
add
add
add
popf
add
add
add
add
add
add
xor
push
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
push
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
push
mov
add
add
lods
add
push
add
add
add
add
add
add
add
add
add
sub
sub
add
add
add
add
add
add
xor
lods
add
add
add
add
dec
add
add
add
add
add
add
add
add
cmp
adc
repnz
add
add
add
mov
out
cmp
xchg
clc
xchg
inc
jbe
xchg
js
scas
push
lret
mull
cmc
flds
jge
mov
push
pop
jns
inc
and
sbb
dec
xor
sub
mov
sbb
mov
movsb
fimull
js
or
pop
cmp
sbb
loopne
nop
xor
test
mov
roll
repz
out
movsb
push
shlb
xchg
cmp
lock
stos
shlb
xchg
scas
lret
dec
fwait
outsl
ja
adc
enter
sahf
ret
ljmp
pminub
cmp
jp
aaa
push
cmp
or
popa
lahf
filds
cmp
cltd
sahf
popa
call
test
and
test
or
inc
sub
iret
fiadds
lock
add
inc
ja
mov
icebp
push
lods
sarb
sti
popa
xlat
ds
sbb
jg
dec
lods
and
sbbl
aas
arpl
inc
adc
dec
cwtl
mov
cld
sbb
jbe
lds
sub
test
jg
jmp
push
mov
adc
mov
popf
imul
scas
dec
xchg
int3
adc
scas
frstor
nop
cltd
push
xacquire
leave
subl
ja
sub
insb
ja
bound
xor
je
and
jnp
enter
and
sbb
inc
int
mov
mov
movsb
xor
iret
xchg
and
adc
adc
cwtl
or
xchg
jno
aad
jo
add
bound
xor
loop
js
xchg
adc
cmpsb
mov
xchg
jle
and
aaa
cmp
enter
or
daa
xor
fwait
sbb
xchg
push
notl
mov
bound
add
fbld
popf
mov
stos
imul
hlt
mov
shrl
or
sbb
push
or
popf
std
mov
push
pushl
lds
inc
or
mov
mov
addr16
push
xor
adc
out
mov
adc
add
fcomps
push
loope
add
mov
pop
fisubrs
cmp
sahf
push
or
movsb
daa
lcall
jg
and
xor
mov
fidivs
cwtl
jae
rcrl
or
dec
aam
aad
and
pop
xchg
scas
mov
sbb
pop
ljmp
cwtl
push
or
add
xor
stos
and
mov
das
push
pop
js
push
and
and
xchg
pushl
bound
fs
push
mov
cmp
fs
js
mov
hlt
xchg
adc
repz
pop
push
jbe
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
