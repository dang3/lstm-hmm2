adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
jbe
xchg
rcrl
mov
add
jmp
stos
sbb
inc
jmp
jae
subl
sbb
imul
jecxz
fucomp
add
xor
insl
push
jae
and
int
imul
fwait
ja
mov
mov
inc
ljmp
adc
rcrb
jl
lock
sub
dec
xor
popa
add
and
cli
cmp
cmpb
orb
pop
jo
iret
or
cld
push
out
fsubl
jle
jp
pop
call
cmp
sbb
mov
das
sbb
das
adc
sti
add
and
add
scas
sub
push
xchg
cmpsw
pop
mov
xlat
xchg
jecxz
and
scas
xchg
repz
je
jbe
jmp
movsbl
outsb
in
lret
dec
test
call
and
inc
fs
mov
or
jmp
mov
mov
insb
in
scas
arpl
mov
repnz
push
push
inc
lcall
push
sahf
fistpl
or
sub
jnp
das
rcrl
repz
dec
add
mov
fwait
jg
mov
dec
sbbl
iret
fists
xchg
sub
xchg
push
xchg
add
cmp
pop
mov
cmp
mov
fists
xchg
or
andl
jno
add
push
mov
dec
lock
iret
dec
fistpll
imul
jecxz
repz
and
push
jae
subl
sbb
imul
jecxz
repz
and
push
jae
sub
mov
push
pop
aaa
movsb
add
cmp
int3
clc
dec
sbb
mov
cmpsl
outsl
movsl
js
mov
js
imul
mov
out
std
mov
out
cmp
int3
dec
shll
xlat
fistl
sbb
and
jbe
push
lds
mov
mov
add
dec
dec
cmp
cmc
mov
rclb
xchg
adc
mov
jp
xchg
int3
jg
shll
lock
push
dec
fwait
sbb
popaw
jb
pop
scas
in
mov
repz
outsb
sahf
xchg
xchg
loop
cmp
mov
iret
mov
and
int
xor
add
inc
mov
xlat
xchg
insl
dec
pop
fnsave
dec
std
lahf
test
call
dec
lea
push
sbb
mov
and
pop
add
xor
or
popf
dec
mov
cmp
cs
adc
xchg
or
addr16
mov
popf
xor
mov
cld
dec
jge
clc
pop
mov
mov
adc
inc
daa
int3
mov
cltd
loope
rcrb
daa
add
mov
cmpsb
movsl
into
mov
jb
sub
mov
cli
stos
stos
adc
lcall
cmpsb
cmp
imul
jmp
pop
fstl
inc
mov
mov
xchg
pop
sub
lret
leave
adc
add
inc
lea
ret
ret
addb
test
jo
aad
push
mov
negb
adc
shrb
jae
fdivs
and
jecxz
jge
mov
lret
mov
cmpsb
insl
cltd
sub
and
pop
sti
pop
adc
ljmp
lods
test
dec
shll
daa
pop
pop
and
and
rorl
out
mov
imul
mov
in
push
in
insb
clc
inc
imul
add
mov
inc
sahf
dec
ljmp
stc
test
and
les
jmp
sbb
outsl
mov
pop
andb
sbb
outsb
push
gs
or
out
adc
adc
outsb
sub
dec
xchg
jns
syscall
aad
aas
and
xchg
xchg
rcr
inc
mov
shr
out
adc
cmp
scas
add
stc
cmp
pop
xor
push
aam
jnp
das
outsl
xor
cmp
or
add
pop
or
iret
icebp
insl
int3
sar
push
mov
vphsubwd
jmp
xlat
outsb
adc
xor
mov
xlat
inc
mov
hlt
mov
les
xchg
cwtl
fs
inc
push
int
movsb
jo
and
rcrb
push
jnp
lea
loopne
jae
rolb
push
xor
in
xchg
inc
std
mov
dec
movsb
or
mov
sbb
jmp
and
pop
mov
mov
dec
or
loope
lret
pop
cli
nop
daa
repz
leave
je
inc
into
andl
cmp
jmp
mov
sub
add
xor
dec
cmp
movsl
not
push
sub
pushf
je
add
adc
rcl
and
or
sub
mov
push
cmp
dec
inc
push
pop
cmpsl
push
stos
add
repz
mov
dec
or
push
cmp
aas
aam
fs
rcrb
xchg
pmaxub
push
jno
fadd
mov
push
sub
sbb
jo
jne
notb
clc
lds
fstpt
add
adc
xor
xchg
out
std
cmp
xchg
repz
out
loop
mov
mov
and
inc
and
fisubrl
mov
aam
notl
das
imul
ret
insb
hlt
add
scas
xchg
pop
sub
in
out
push
pop
jg
arpl
cmp
movsb
dec
dec
add
adc
sub
arpl
mov
or
inc
loop
scas
pop
sub
xlat
in
hlt
xchg
inc
mov
xchg
test
inc
nop
call
jp
sub
mov
out
daa
ret
fwait
insb
sub
adc
repz
les
ljmp
push
movsl
jge
aaa
popf
cmpsl
gs
lods
dec
fs
and
mov
adc
push
jle,pn
mov
dec
adc
mov
fnstcw
dec
popa
add
jge
mov
ucomiss
xor
sahf
push
lcall
push
clc
jns
out
aas
shrb
mov
mov
push
daa
cmpl
test
arpl
xchg
pop
es
int3
pop
inc
xor
jno
push
arpl
adc
push
and
pusha
pop
inc
push
dec
call
pushf
hlt
fildl
mov
aad
lahf
inc
cmp
lcall
adc
mov
sarb
popa
or
ds
shll
into
jecxz
call
lock
sub
sbb
mov
leave
pop
sbb
pop
sub
cmp
xchg
inc
popf
jmp
pop
stos
inc
movsl
mov
lods
pop
or
imul
push
bound
out
jbe
addl
rcrb
add
push
out
mov
bt
pop
movsl
xorl
push
push
mov
iret
ljmp
mov
mov
or
lahf
outsl
push
jmp
mov
ret
cmp
xchg
and
pop
lds
xorl
sub
outsb
int
int
dec
sbb
push
in
hlt
arpl
jl
roll
rcrl
add
pop
pop
imul
les
out
out
cltd
cmpsl
rclb
add
push
fwait
negl
loop
subb
jo
int3
outsl
lret
jecxz
mov
rclb
lock
lods
xchg
jne
sub
inc
inc
gs
inc
jle
sbb
inc
fisttpll
movsl
fidivl
popa
dec
loope
roll
or
adc
mov
sub
jmp
mov
jge
ljmp
aas
dec
subl
out
mov
push
insl
lcall
test
jg
scas
rorb
and
call
mov
add
pop
cmc
xor
jle
pusha
dec
mov
xchg
and
add
push
or
sahf
cmc
cmp
rclb
les
mov
add
dec
mov
push
notl
jbe
push
arpl
mov
mov
xchg
ret
xor
pop
sbb
jo
xchg
fsubrs
shlb
lods
and
sbb
fcompl
mov
addr16
cmp
jle
ja
dec
pushf
mov
add
scas
inc
mov
clc
jle
sbb
loop
cmp
arpl
out
mov
mov
pop
int
inc
mov
push
mov
pushf
pushf
xor
mov
test
inc
sbb
and
das
pop
pushf
add
ret
sbb
aaa
pop
push
pop
push
rcrl
cmpsl
in
xor
jo
jge
and
xor
mov
and
testb
test
xor
and
xchg
or
add
adc
scas
ficomps
pop
dec
outsl
jle
pop
pop
movsl
adc
xor
imul
das
xchg
jnp
or
cli
push
jb
push
mov
adc
test
cli
movsl
idivl
xor
jo
mov
lds
push
ds
data16
aaa
out
je
pop
fldenv
push
mov
outsl
sub
jecxz
out
popf
cmp
pop
fisttpll
rol
mov
jne
jge
aad
test
inc
rcrb
lods
imul
mov
pop
jmp
testl
sub
arpl
mov
jb
inc
cltd
jbe
hlt
sahf
cmp
mov
inc
das
xor
mov
dec
ret
sahf
mov
mov
roll
cltd
stc
xor
push
xor
repz
int3
mov
mov
iret
mov
or
icebp
cmp
pop
iret
dec
test
inc
cs
mov
movsl
jl
mov
ja
daa
mov
sub
orl
inc
or
cmp
rcl
pushf
xor
mull
mov
fistl
cwtl
pushf
sbb
sti
jo
cltd
cmp
pop
pusha
xorb
jne
cmpsb
fcoms
mov
idivb
cmp
movsl
add
inc
dec
ss
arpl
or
shl
ljmp
jns
testb
sbb
cmp
pop
dec
inc
jle
clc
mov
mov
push
loop
sbb
mov
outsl
dec
cmp
or
loope
pusha
pop
scas
add
pop
push
aaa
lds
add
lahf
dec
cltd
jnp
hlt
cmpsl
pop
repz
pushf
testb
adc
lret
pop
pop
out
ror
add
mov
or
out
loopne
jbe
lret
sbb
rcrl
out
ret
mov
test
outsb
add
in
jae
aam
decl
mov
ss
jo
xor
rclb
xlat
cwtl
sub
or
insl
clc
shrb
cmc
sbb
inc
sbb
add
push
cld
xchg
cmp
jg
sub
jmp
jmp
and
or
loope
cwtl
scas
cmp
in
mov
sbb
adc
push
out
jecxz
sbb
fsts
or
insl
lcall
je
and
mull
inc
xchg
lock
fistpll
or
push
or
adcl
stc
fs
mov
push
fisubs
xchg
shll
ret
sbb
jmp
or
sti
shll
loope
mov
in
jbe
cwtl
mov
repnz
mov
nop
mov
pop
and
xchg
test
mov
add
and
fwait
popf
inc
mov
jge
dec
ds
mov
push
mov
dec
mov
repnz
outsb
sbb
sbb
repnz
pop
in
add
jne
fwait
das
xchg
loopne
movsl
mov
idiv
js
fstps
cltd
stc
jae
mov
shlb
std
push
test
in
mov
cmp
lock
ds
cmp
dec
mov
xchg
outsb
mov
data16
mov
arpl
sahf
jp
xor
fisubs
jmp
ror
in
outsl
xchg
dec
sub
decl
cmc
cld
mov
ja
jnp
or
push
cmp
lods
cwtl
push
cmp
xchg
pop
shlb
dec
inc
inc
mov
mov
mov
jmp
sub
in
jns
push
pop
adc
inc
lods
inc
mov
mov
iret
adc
adc
dec
push
mov
gs
adc
xor
outsl
mov
jge
push
rorb
mov
clc
dec
push
stc
add
sbb
jns
xchg
sbb
daa
sub
cld
inc
jno
push
addl
int
inc
pop
pop
pop
icebp
fwait
or
pop
loopw
jb
and
les
inc
sbb
push
xchg
cwtl
pusha
lahf
roll
push
add
aas
jl
pop
mov
sar
inc
jbe
adc
lret
sbb
insb
sbb
ret
lea
hlt
jle
pop
ljmp
clc
jne
pop
adc
or
xchg
ljmp
jg
fwait
dec
clc
test
cs
rorl
cwtl
inc
push
stos
or
mov
out
jno
dec
enter
fs
mov
sahf
sub
dec
ret
ss
sti
rcrb
cmpsl
test
xchg
cmp
aaa
sbb
inc
push
mov
lret
lahf
mov
xchg
jge
xchg
mov
aam
ficomps
call
sub
lds
imul
cmpsl
jecxz
xor
or
mov
mov
sbb
inc
shrb
out
cmp
or
jecxz
sbb
push
cwtl
sti
jle
pop
hlt
cs
rcrb
jecxz
add
loop
adc
push
mov
aas
cmp
out
popa
shrb
out
clc
pop
int
xchg
jne
cli
cmp
push
out
rcrb
xchg
inc
cmp
test
inc
mov
mov
mov
enter
imul
cmp
mov
insl
jecxz
push
inc
in
imul
ljmp
or
outsl
insb
push
jmp
and
test
rcr
imulb
out
cmp
adc
cmp
repz
inc
ds
jecxz
sbb
hlt
pop
jecxz
lahf
push
out
push
adc
and
mov
and
dec
xor
xchg
es
int3
cwtl
cmpb
cmp
jmp
pop
into
pop
mov
mov
fwait
imulb
fisubrl
ret
aam
mov
fwait
icebp
mov
jmp
dec
iret
and
or
out
call
scas
pop
fdivrs
ret
mov
inc
dec
fsubr
adc
jnp
sbb
fstps
aaa
mov
mov
ret
xor
arpl
xchg
fadd
cwtl
mov
arpl
jecxz
test
sub
out
aas
sahf
fs
mov
sub
icebp
jle
shl
and
pop
push
call
mov
std
lock
in
mov
jbe
sbb
lods
xorb
in
test
and
cltd
test
pop
xchg
mov
inc
jno
and
jecxz
or
imul
add
stos
pop
and
pop
cmc
xchg
aas
ds
inc
lods
add
sahf
loop
lret
mov
cmp
xor
out
dec
cmp
and
leave
pushf
imul
ss
jne
es
add
dec
jge
or
andl
jge
xchg
mov
or
pop
xor
lods
dec
jecxz
and
add
pushf
sub
mov
sub
cli
dec
cmc
lcall
and
aas
mov
push
out
mov
xor
mov
add
push
sub
pop
xchg
lahf
push
mov
dec
xchg
xor
dec
xor
mov
mov
movsl
jecxz
xchg
rolb
cwtl
xchg
enter
xlat
or
xor
pusha
and
std
sbb
int3
xchg
and
jl
jp
xor
jno
mov
sub
sub
xchg
jg
call
adc
or
jmp
lahf
nop
push
fs
cmp
push
xchg
pusha
and
cmc
test
lea
sti
je
jno
loope
or
xchg
icebp
test
fisubs
or
movsb
pop
out
add
push
aaa
jmp
mov
mov
pop
pop
push
test
xchg
dec
daa
cmp
jp
cmp
ss
cmp
dec
je
and
and
xchg
jae
xchg
inc
pop
push
jno
push
xor
mov
daa
dec
jb
adc
sbb
push
and
lcall
in
dec
repz
arpl
sub
jno
inc
push
dec
loopne
pusha
xlat
mov
cmp
lock
adc
cwtl
fisubl
dec
shlb
jnp
mov
das
lret
mov
mov
fsubl
and
pop
mov
insl
jns
adc
int
icebp
jne
dec
push
popa
add
inc
mov
mov
sub
data16
inc
cs
jg
xchg
stc
les
cld
rol
nop
and
push
xchg
mov
mov
cmp
fsubrs
ja
and
xor
not
xor
shr
mov
sub
mov
and
sbbl
push
push
jno
pop
pop
cmp
add
scas
mov
scas
adc
cld
mov
ljmp
mov
das
adc
outsl
inc
cmpsl
loope
add
clc
or
inc
daa
push
out
xchg
mov
stc
enter
movsb
insb
lretw
ljmp
mov
pop
mov
sub
and
jg
cmp
mov
sbb
aaa
add
and
iret
outsb
loope
or
push
repz
push
enter
mov
shll
fstl
push
add
inc
pop
mov
add
rorl
xor
pop
xor
inc
les
and
and
dec
push
or
filds
lret
insb
out
fisttps
mov
push
pop
leave
adc
imul
in
push
and
inc
jl
and
push
out
arpl
test
jns
mov
lods
and
and
sbb
xor
rep
fidivl
mov
cltd
sbb
shrl
inc
hlt
mov
lret
sbb
divb
mov
sti
mov
add
mov
sub
lods
ljmp
inc
insl
push
push
fwait
inc
addl
mov
in
jl
xrelease
fsubrs
mov
cld
arpl
inc
add
xor
jbe
mov
sbb
scas
mov
addb
or
iret
aad
adc
xchg
cwtl
cmp
xor
dec
arpl
pop
push
add
cmp
sub
xor
sbb
mov
pop
imul
mov
mov
jmp
test
fwait
xor
stos
jmp
jne
out
dec
ss
inc
inc
push
aas
fdecstp
sbb
addr16
pop
addb
or
mov
adc
lret
xchg
or
or
loopne
pop
xchg
mov
or
xchg
repz
call
and
int3
gs
test
dec
and
dec
and
fiadds
pusha
out
dec
insl
mov
hlt
pop
jno
mov
jne
jmp
mov
pop
aaa
cmp
sub
lods
cmp
or
dec
sahf
xchg
flds
sbb
loopne
icebp
loopne
inc
xchg
mov
push
daa
pop
lds
jle
inc
cmp
mov
xchg
mov
jg
stos
daa
repz
pusha
dec
movsl
notl
into
lcall
stos
lods
fistpl
mov
xlat
out
jl
cld
jmp
push
sub
in
lcall
aam
add
push
cmp
enter
jb
shlb
lea
jmp
fs
jno
push
pop
jae
sub
pop
loope
dec
push
adc
test
fs
lods
sahf
testb
push
pop
not
xchg
cmp
popa
pop
fucomi
out
lods
jbe
jle
push
repnz
andps
add
leave
push
pushf
js
adc
pop
outsb
adc
out
add
icebp
jno
int3
or
jl
mov
mov
mov
adc
cli
sbb
mov
add
das
in
dec
add
mov
out
testb
jg
mov
call
ret
adc
leave
scas
sarl
mov
sahf
adc
ja
inc
movsb
fwait
mov
aad
pop
cmc
cmp
cltd
push
inc
cmpsb
mov
inc
je
je
jmp
ror
dec
mov
sbb
dec
mov
xchg
cmp
loop
inc
rcrl
lcall
mov
xor
and
xchg
into
jle
mov
clc
je
repnz
pop
aad
cmp
std
fs
xchg
out
jecxz
aaa
push
pusha
lods
lret
fidivrl
add
or
pop
jbe
sbb
dec
cmp
lds
sbb
pop
mov
scas
xor
andb
mov
xchg
lods
jmp
cmp
dec
xor
movsb
call
sarl
pop
mov
sub
push
adcb
dec
xor
mov
and
test
fdivrs
frstor
gs
fs
or
aad
push
mov
lcall
pop
inc
jno
movsl
xor
mov
sahf
fs
push
movsb
mov
jmp
ss
sbb
fwait
shl
mov
out
xor
je
inc
inc
xchg
rorl
lret
xor
cmpsb
dec
and
dec
sub
test
jbe
loope
mov
sarb
inc
out
int
mov
outsb
pop
mov
xlat
jg
out
loope
xchg
sub
int
stos
mov
or
cmpsl
iret
in
mov
push
iret
push
or
push
cmp
mov
push
mov
test
aaa
jo
outsl
cmp
xor
sub
ror
lea
fsub
xchg
iret
dec
mov
std
dec
scas
in
test
sub
ficomps
ret
fimull
ret
daa
adcb
pusha
add
cmp
push
xor
jno
push
shr
sar
jb
jg
pop
adc
push
push
jl
sbb
cltd
popa
mov
pop
int
push
jp
pop
cwtl
push
test
repz
jg
pop
into
or
cmp
pop
pusha
cmp
ja
aam
xlat
or
fidivl
and
add
adc
lds
and
sahf
lahf
push
mov
mov
aas
sbb
test
inc
sahf
adc
inc
mov
push
add
in
movsb
xchg
jle
in
push
test
rclb
sub
aam
divb
xchg
out
int
jecxz
cmp
movsl
mov
mov
dec
lods
jo
mov
sub
adc
imul
insl
ss
mov
xchg
push
clc
dec
cmp
xor
cmc
jp
insb
xlat
adc
das
in
and
xchg
inc
mov
fdivs
push
les
xchg
xorb
dec
setle
inc
stos
sub
decl
jle
push
cmp
mov
xchg
xorl
sub
inc
xor
or
dec
jnp
push
out
xor
dec
push
jno
lcall
or
cmp
add
iret
popa
shll
mov
jo
insl
ret
xchg
cltd
cmpsb
pop
mov
ret
imul
jecxz
repz
and
push
jae
subl
sbb
imul
jecxz
repz
and
push
jae
xchg
popf
or
outsl
mov
mov
and
push
fildll
xchg
and
ja
inc
and
jnp
jnp
pop
arpl
xor
and
sub
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stc
jne
fsts
inc
or
xor
imul
cmp
or
fsts
inc
mov
adc
imul
cmp
sbb
loopne
lock
mov
adc
dec
movb
xor
sti
pop
notb
cmp
test
mov
push
xchg
nop
rcrb
mov
rcrl
fidivrl
push
in
mov
xor
sbb
cld
addl
imul
adc
inc
jp
sub
push
mov
les
sbb
or
adc
adc
test
data16
sti
repnz
insb
push
mov
mov
pop
xchg
lahf
or
add
mov
aam
jns
jns
scas
test
shl
movsl
out
sbb
lock
sahf
inc
ss
push
addl
sub
jp
sbb
lock
inc
scas
xor
nop
add
inc
aad
lds
mov
movsl
add
mov
push
mov
dec
aam
mov
mov
mov
testb
fs
xchg
adc
inc
aad
test
popa
cmp
or
outsl
ret
insl
ljmp
mov
and
jns
imul
cmp
or
fsts
inc
mov
adc
imul
cmp
or
mov
aad
lret
lret
dec
inc
pop
sbb
jle
xchg
push
mov
push
das
mov
sarb
data16
jle
sub
add
nop
fwait
mov
flds
cld
mov
inc
cmp
decl
mov
ss
pushf
ficompl
inc
aad
fnsave
sub
outsb
push
shll
pop
das
daa
out
and
repz
shll
push
sub
or
fcmovbe
xor
mov
jecxz
push
pop
pusha
cmp
pop
jg
decb
loop
and
xor
dec
xchg
push
fwait
mov
fs
jbe
adc
pop
imul
mov
test
stc
inc
jno
cmp
mov
insl
or
inc
xchg
and
hlt
fwait
lea
inc
sbb
fs
cmp
cmp
iret
push
pop
mov
cwtl
mov
sub
pusha
mov
scas
pop
inc
pushf
inc
fldcw
fcompl
xor
dec
inc
inc
mov
enter
std
and
mov
in
lock
sbb
out
leave
lahf
pop
cmp
bound
xor
push
xor
movsl
cmp
lock
mov
enter
fcompp
loop
es
or
ljmp
mov
xchg
mov
mov
xchg
xor
aam
dec
dec
das
or
outsb
mov
lds
popf
test
pop
push
fisttpl
push
fistl
cmp
test
dec
or
fdivr
pusha
repnz
ret
mov
out
out
mov
pusha
repnz
adc
into
lods
push
adc
clc
push
or
js
and
test
loopne
pop
cld
bound
cmp
arpl
rcr
dec
mov
movsl
out
mov
mov
scas
lret
ljmp
pop
jnp
repnz
push
data16
dec
cwtl
pusha
iret
test
daa
xchg
adc
push
push
incl
push
jb
jnp
push
test
aaa
xchg
insl
dec
mov
mov
push
jecxz
cli
jl
dec
and
out
bound
adc
call
aam
sub
cmp
dec
daa
lret
data16
mov
jp
add
pop
mov
fidivl
cmp
pop
xor
in
fcomip
jne
ffreep
dec
inc
mull
mov
sbb
shld
in
xchg
mov
sar
sbb
testl
aad
stc
arpl
scas
add
push
mov
sahf
std
adc
outsb
fsub
cmp
mov
pop
les
test
js
popf
les
mov
ss
in
pop
jp
cli
and
push
pop
jmp
insl
gs
mov
or
js
test
push
inc
lods
jns
cmp
test
fcmovnb
sbb
in
jne
sbb
orb
pop
daa
clc
mov
add
fbld
shl
movsb
dec
pop
ficompl
outsb
cmpsb
adc
mov
outsl
test
out
fisubl
mov
mov
icebp
cld
popf
inc
shlb
into
cmp
push
xchg
sahf
ret
imul
sub
xor
rorb
into
push
xchg
pop
js
mov
faddl
outsl
lea
fistpl
adc
jmp
fsubrp
ljmp
mov
pop
pop
adc
sbb
xchg
int
jp
jecxz
lahf
adc
adc
stos
jne
test
adc
jo
mov
daa
jl
lods
test
sti
add
popf
int3
push
add
inc
fwait
and
cld
scas
sahf
jne
mov
stos
and
mov
pop
mov
insl
mov
push
cli
cs
call
movsb
sti
in
fwait
lods
ret
mov
mov
mov
cld
pushf
das
jle
pop
jno
mov
fdivl
push
push
aas
clc
popf
mov
push
shrb
jge
xlat
mov
popa
sub
jmp
jns
mov
jge
repnz
ss
imul
insb
pushf
ficompl
insb
or
in
pop
push
adc
icebp
shlb
cmc
pop
dec
or
shll
lcall
dec
movsb
xchg
xchg
push
or
popa
shl
and
cmp
and
loope
jo
jns
sub
xor
popl
push
sahf
push
pop
les
stc
and
pop
stos
aad
cltd
mov
xor
cmpsb
fistpl
add
cmpsl
pop
insb
sub
xchg
xor
pop
xor
push
cmpsl
xchg
mov
in
je
xchg
in
sbb
aad
mov
lock
mov
lock
pop
test
pop
cwtl
pop
mov
jne
std
cmp
adc
popa
push
jne
push
cmc
es
std
cwtl
dec
popf
call
xchg
rcrb
and
sbb
jb
dec
arpl
enter
and
push
sub
cmovbe
lahf
int
xor
gs
fwait
xor
pushf
out
repnz
lods
jbe
nop
xchg
pop
ret
push
gs
inc
cmpsl
sbb
popa
sbbl
shrb
cli
mov
dec
or
or
adc
test
in
in
push
lods
test
lea
sarb
xor
lods
xor
adc
roll
sbb
out
push
dec
push
adc
shl
pop
push
pop
inc
add
jnp
hlt
sbb
sbb
inc
pop
inc
movsb
adc
cmpsb
dec
scas
xchg
stos
imul
add
sbb
sub
scas
cmp
lds
fsubl
outsl
out
cli
mov
imul
jno
jecxz
fsubl
fcmovnb
or
es
xlat
mov
pop
inc
inc
gs
in
inc
int
jae
rolb
lock
xor
sti
mov
mov
xchg
into
xor
fdivrl
add
repz
and
imul
mov
xor
mov
mov
jne
lahf
iret
andb
pop
push
ds
addr16
int3
sbbb
mov
mov
loop
int3
gs
inc
scas
cmp
mov
or
add
pop
cmpsl
test
add
shrl
and
int3
ret
insb
mov
jmp
outsb
xchg
xchg
mov
call
mov
dec
imul
inc
mov
leave
sub
xor
mov
lahf
pop
into
rol
cltd
xchg
or
mov
add
sub
ja
dec
in
mov
out
ss
jp
xchg
les
decb
adc
sub
dec
shr
movsl
shll
sbb
inc
mov
jb
call
lret
sub
sub
and
push
inc
cli
dec
push
inc
jae
fdivp
xchg
sbb
adc
cld
jnp
call
stos
mov
leave
shl
imull
cmp
je
in
stos
outsl
loopne
dec
jno
jnp
xchg
mov
imul
mov
push
jmp
inc
xchg
cmc
into
popf
outsl
dec
sub
insb
cmp
js
cs
bound
and
xchg
inc
lret
mov
mov
dec
mov
in
mov
jno
incb
xchg
lea
popa
cmp
pop
cmc
xorb
jae
dec
jg
push
subl
or
jl
repnz
and
push
popf
sub
xchg
pop
pop
cmpsl
cmp
add
jbe
insl
sub
adc
mov
mov
mov
fsubrp
push
js
popf
cmp
outsb
popf
cmp
pop
dec
inc
je
pop
leave
jp
xchg
sbb
iret
mov
dec
dec
dec
push
cmp
out
fisubl
push
dec
pop
pop
inc
cmp
add
test
daa
and
xchg
call
sub
mov
xor
icebp
mov
jecxz
fmull
mov
sbb
mov
sbb
mov
add
enter
mov
insl
pop
dec
xchg
add
mov
out
fstpt
jp
jge
shll
mov
push
add
divb
pushf
pop
or
jno
mov
mov
in
mov
mov
cs
mov
push
push
imul
pop
mov
test
sahf
xlat
cmp
rorb
insl
aas
inc
adc
sub
push
adc
inc
and
xchg
fadds
outsb
stos
fildl
test
inc
aas
cwtl
mov
aam
fcmovnu
mov
pop
cli
mov
dec
jo
pop
imul
mov
jns
mov
pop
mov
or
or
aam
or
test
testb
ret
cmp
jb
popa
out
and
ljmp
mov
add
imul
mov
jbe
and
lcall
loopne
push
push
or
rcr
or
scas
mov
dec
adc
mov
mov
push
xor
hlt
sub
mov
inc
ja
fstps
add
jbe
xchg
pop
loope
lret
sahf
scas
out
inc
mov
insb
xchg
stos
inc
push
test
in
cmpb
inc
in
outsb
xor
dec
mov
mov
lret
add
decl
xlat
stos
lcall
roll
mov
repz
sti
movsb
adc
je
xlat
cmp
lods
pop
out
das
into
fwait
addr16
ljmp
loope
and
add
aas
sbb
shrb
push
lcall
lea
into
mov
push
mov
rorb
repnz
cmc
mov
ja
push
jg
les
sbb
lods
lcall
sub
sbb
jl
nop
cli
into
iret
sbb
cltd
mov
xchg
in
sub
cltd
cmpsb
pushf
and
dec
popf
adc
sbb
inc
outsl
mov
lods
loope
mov
mov
insb
aas
mov
cs
xchg
ljmp
xchg
cmp
sbb
and
pusha
xor
push
or
push
lods
add
test
sub
ds
mov
jne
or
in
repnz
mov
mov
rclb
aas
enter
popf
jmp
repnz
and
addr16
push
mov
push
fisttps
loop
pop
stos
in
dec
mov
xchg
adc
xchg
test
pop
stos
adc
dec
jo
pop
adc
mov
notb
jecxz
int
mov
lret
push
xchg
sbb
sbb
scas
jmp
xor
idivl
inc
push
mov
repnz
stos
pushf
inc
test
xor
adc
mov
test
jne
add
xchg
sbb
ljmp
dec
and
out
pusha
inc
insl
rcrb
push
mov
sbb
fimull
int
aaa
js
lods
in
mov
fwait
sahf
incb
shll
adc
iret
fnstenv
dec
mov
pop
push
ljmp
or
cmpsb
pop
in
push
jmp
inc
lods
xchg
js
movsl
pushf
pop
aaa
dec
sub
aaa
adc
xor
mov
xor
shl
xor
xlat
in
pop
xchg
inc
sahf
xor
mov
sbb
mov
and
add
xchg
mov
xchg
pop
jg
nop
push
inc
in
xchg
push
lods
ds
cmpl
mov
sahf
into
dec
les
sub
data16
push
adc
add
or
testl
pop
mov
mov
aas
les
mov
jo
test
inc
aam
cmpsb
push
xchg
in
int3
ds
je
sti
enter
xor
hlt
arpl
mov
in
ljmp
mov
and
std
dec
jo
in
stos
cmp
push
pop
mov
sbb
sub
iret
sahf
inc
loop
dec
pop
mov
fisttpl
xchg
jecxz
add
xchg
cmpsl
inc
mov
dec
adc
pop
pushf
add
add
mov
movsl
inc
push
pop
jns
lcall
arpl
push
sbb
mov
cmc
ret
lods
push
mov
mov
push
lret
or
xorl
inc
shl
cltd
out
add
fwait
imul
js
sub
cltd
jno
arpl
mov
rolb
xchg
fdivrl
cmpsb
mov
icebp
ret
xor
cmp
cmpsl
push
xor
std
insb
sub
sbb
iret
stc
leave
mov
jne
sbb
xor
xchg
sbbb
push
pop
adc
int
ret
cld
sbbb
int3
jl
push
bound
scas
andl
fwait
mov
rorb
ja
xchg
lret
inc
lret
daa
pop
jl
xchg
outsl
cmp
hlt
mov
cmp
pop
mov
xchg
into
popa
stos
and
stos
data16
mov
dec
mov
sub
inc
icebp
addr16
loopne
mov
mov
in
mov
mov
or
into
mov
mov
jo
adc
lds
cmp
mov
push
mov
jno
mov
ret
mov
or
cmp
in
mov
push
outsb
mov
loop
xlat
xor
mov
xchg
in
xchg
mov
mov
mov
pop
cmc
stc
or
adc
lods
aas
adc
and
xchg
nop
aaa
pop
mov
pop
dec
dec
popa
lcall
and
jne
sbb
lock
popf
sub
pop
mov
and
fcmovu
stos
je
pop
jg
pop
cwtl
inc
mov
mov
outsl
add
dec
mov
jne
mov
cmp
push
adc
jo
xchg
pop
add
mov
loope
pop
jbe
jo
das
mov
adc
push
pop
in
imul
arpl
leave
or
orl
lods
popa
mov
adc
or
mov
lock
mov
lret
into
cmc
mov
lods
jmp
enter
pop
inc
in
jecxz
test
mov
inc
sbbb
push
sub
cmpsb
out
sub
test
insb
add
xchg
jecxz
mov
sub
repz
jle
add
jmp
push
les
mov
mov
jl
or
push
xchg
je
lret
sti
fmull
into
dec
rcrb
test
add
sbb
xchg
jno
push
lcall
xchg
jl
les
and
fstpt
movsb
push
push
sub
pop
cmp
push
xor
fidivrs
pop
ja
sti
cmpl
bound
test
fdivrp
adc
gs
mov
daa
xchg
orb
lods
pop
outsb
pop
jmpw
and
mov
inc
xlat
mov
xchg
dec
loop
lods
sbb
or
jb
repz
mov
ret
sbb
add
rcrb
mov
aad
or
sbb
pop
arpl
adc
loope
and
dec
adc
insb
xchg
push
icebp
in
adc
mov
push
daa
xlat
int3
out
aam
jg
and
imul
pop
stc
lds
clc
jbe
xchg
fstps
lea
xor
mov
or
repz
push
sahf
clc
int3
inc
pop
jp
movb
or
pop
xchg
xchg
js
int3
cmc
outsl
jo
sub
sub
cli
mov
mov
pop
cmp
cmp
cli
ret
mov
push
loopne
fildll
in
cwtl
movsb
mov
lock
mov
or
xchg
dec
mov
dec
xlat
xor
bound
jo
pop
push
fwait
data16
pop
divb
pop
outsb
mov
lds
fildll
jnp
mov
dec
xor
js
pop
mov
pop
ja
test
mov
xchg
fisttpll
sarb
jcxz
jle
cmp
cmp
ret
inc
adc
lods
xor
sub
xchg
inc
insb
add
pop
popa
dec
xor
xchg
outsb
int3
dec
lea
or
test
shrb
pop
jo
and
in
loopne
xor
xchg
inc
test
xor
sbb
cltd
orl
gs
call
es
shlb
push
cwtl
push
pop
ror
mov
push
adc
mov
adc
mov
loope
sti
mov
repnz
mov
mov
mov
das
es
int3
cltd
sub
aad
mov
add
call
fcomps
and
mov
pop
xchg
pop
aas
jecxz
sbb
mov
sbb
mov
pop
es
or
aam
mov
adc
xchg
xchg
mov
incl
popa
or
icebp
cmp
push
pop
lods
insl
sub
mov
jbe
sub
mov
sbb
mov
fiadds
and
mov
mov
ljmp
adc
cwtl
ljmp
adc
lret
or
inc
mov
add
push
mov
dec
push
xchg
mov
cmpsb
or
and
adc
int3
xor
cmp
rcr
mov
sarl
rclb
mov
test
lds
stos
scas
jecxz
pop
mov
movsb
pop
cmp
sahf
insb
fcoms
shlb
xchg
orb
lods
and
les
cmpsl
outsl
and
xchg
pushf
dec
or
out
sub
into
sti
cmc
xchg
mov
in
xchg
hlt
mov
stos
sbb
jmp
mov
js
xor
jle
mov
popf
in
xor
xor
cmpb
fxch
jno
cltd
cmp
mov
ficoml
and
inc
xor
ret
pop
iret
fadds
fdiv
ret
imul
cmp
lds
js
push
push
sbb
pop
push
pusha
cmovg
clc
add
scas
clc
inc
xchg
ficomps
dec
jge
and
jl
repnz
sti
pushf
xchg
xor
add
pop
pushf
mov
and
mov
xchg
mov
xchg
fbld
inc
xchg
js
mov
test
dec
cltd
or
mov
stc
lahf
jg
and
loop
cltd
scas
les
sbb
xchg
mov
loope
sahf
and
roll
add
ja
mov
andl
insb
stos
adc
fdivs
pop
pop
dec
bound
shlb
or
in
sarb
loopne
lret
ja
adcl
xor
icebp
xchg
pushf
aaa
in
pop
jae
out
sbb
mov
movb
repnz
shr
xorb
xchg
adcb
sahf
push
sub
xor
push
out
in
fldcw
cli
inc
pop
cmp
and
xor
insl
push
xor
out
xor
mov
cmp
adc
fstpl
push
dec
fidivs
ja
imul
scas
dec
inc
lcall
pop
shll
rolb
pop
mov
inc
dec
iret
jle
insl
movsb
dec
into
sbbb
sbb
lods
and
aad
or
push
js
push
mov
sarb
push
or
loopne
loop
ss
imul
cld
fwait
dec
out
sbb
std
cmpsl
loopne
or
and
jg
ret
add
jecxz
xchg
or
arpl
sbb
movsl
cs
imul
bnd
ds
fsubp
loope
xchg
push
pop
push
scas
mov
ret
mov
mov
rcll
cmp
lahf
inc
jge
jp
xchg
enter
test
cld
insw
xorl
mov
lods
daa
sub
adc
xor
andb
jecxz
insl
and
orl
mov
mov
fcmove
outsl
ficomps
jo
mov
mov
loopne
mov
adc
add
mov
shr
xchg
xchg
mov
in
mov
test
fiaddl
psllq
cld
inc
sub
mov
mov
cmp
push
xchg
pushf
jmp
mov
jmp
push
outsl
out
mov
hlt
int
pop
in
into
fisubs
imul
data16
and
out
mov
js
fmul
mov
add
lcall
addr16
pop
push
add
mov
adc
xor
xlat
xchg
xchg
and
das
xor
rolb
mov
push
xchg
enter
jmp
sbb
mov
leave
sbb
mov
jle
aad
or
loope
adcb
jmp
push
fisubs
stos
mov
mov
inc
ds
popf
mov
test
jns
mov
lret
adcl
arpl
push
jmp
mov
bound
out
or
dec
fistpll
inc
xor
fwait
push
jl
jno
lahf
pusha
test
movsb
pop
imul
or
icebp
daa
hlt
inc
rcll
js
in
sub
in
push
mov
and
dec
adc
bound
jecxz
pop
add
roll
xchg
mov
push
cld
xor
into
inc
or
push
jno
xchg
dec
sahf
pop
or
sub
scas
inc
sbbb
je
jmp
adc
fldenv
adc
mov
or
mov
push
roll
adc
ss
lret
dec
xor
pop
adcl
mov
push
fldcw
cmp
jns
cmc
popf
sub
imul
lock
xchg
shll
test
pusha
cwtl
push
mov
mov
push
inc
and
push
jo
push
lods
loope
leave
movsl
movsb
lds
repz
sbb
sarb
in
repnz
loope
leave
mov
fistpl
cld
fidivrs
rcll
shrb
adc
ficomps
sub
push
xor
test
mov
mov
mov
insb
jno
cmp
cs
sarb
stos
rcl
call
lcall
test
xchg
jb
fcoml
rcrl
inc
int
dec
decl
divl
dec
push
adc
pushf
mov
leave
inc
mov
adc
imul
cmp
or
fsts
inc
mov
adc
imul
cmp
or
fsts
inc
mov
adc
imul
cmp
or
fcoms
inc
mov
adc
xchg
dec
repz
mov
cmp
idivb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
test
and
out
ja
mov
xchg
call
movsb
das
aad
outsl
in
adc
add
xor
iret
inc
iret
je
mov
movsb
aas
aam
les
outsl
in
adc
add
xor
and
push
inc
je
fs
je
dec
mov
lods
sub
sbb
add
js
je
filds
fs
or
adc
sub
cmp
mov
aam
nop
outsl
push
inc
cmpsb
gs
push
mov
adc
loope
jnp
in
jg
shrb
cmp
cld
lahf
sbb
xchg
adc
loopne
inc
into
hlt
fcoml
mov
loop
pop
shrb
out
outsl
mov
pusha
adc
enter
push
jp
out
inc
loope
rorb
jae
nop
out
outsl
jmp
push
xor
mov
out
xchg
cld
repz
loopne
xlat
movsb
xchg
cmp
cli
in
jo
jmp
push
mov
jp
out
mov
jne
shrb
shlb
in
dec
cwtl
add
xor
and
push
iret
inc
fbstp
out
je
es
les
jne
jle
popl
pop
lret
pop
int
mov
cld
pusha
ss
fldt
rcrb
mov
add
testb
shlb
iret
and
jnp
jp
dec
sarl
or
or
sub
adc
out
call
movsb
aas
aam
les
outsl
in
adc
add
xor
and
push
iret
inc
fbstp
call
movsb
aas
aam
les
outsl
in
adc
add
inc
dec
inc
push
and
jecxz
aaa
stc
push
ljmp
fbld
icebp
pusha
add
inc
stos
inc
repz
and
push
shl
lods
mov
xchg
das
loopne
jbe
subb
jae
js
andb
dec
add
in
inc
gs
jae
jmp
or
xor
dec
xorb
es
sbb
inc
popf
mov
roll
push
sub
mov
in
xor
es
out
cmc
cwtl
xchg
test
mov
sub
rcr
cmp
cmpsb
adc
inc
out
add
mov
fimull
and
lahf
cli
cmp
push
aaa
xchg
pop
mov
popf
lret
push
movsb
xchg
shl
pop
ds
adc
mov
in
mov
sub
popa
out
mov
pop
popa
add
movsb
aam
lea
dec
lret
xchg
stos
sti
ja
xchg
xchg
mov
data16
cmpsb
jge
jne
cmpsb
test
ret
fcompl
adc
ljmp
xor
sub
cmpb
mov
cli
inc
adc
cmp
xchg
mov
mov
lods
push
push
add
pop
out
out
cmpsb
ret
pop
add
mov
adc
fsubs
and
xchg
cli
lods
fst
mov
addr16
cli
sahf
test
jbe
mov
dec
cmc
out
or
push
clc
xchg
inc
push
pop
test
mov
inc
adc
mov
mov
mov
jo
mov
mov
xchg
aas
cld
xor
mov
es
push
lret
pop
call
mov
lea
sar
int3
test
push
ret
pop
xor
sbb
jae
or
pop
xchg
and
pop
jbe
scas
dec
push
aas
les
and
push
pushf
dec
repnz
mov
pop
out
scas
das
mov
pop
jo
mov
lret
sub
addr16
xor
adc
jmp
ficoms
sub
int3
int
mov
xor
lock
jg
mov
dec
in
xor
pop
lods
test
ret
jl
js
in
push
pop
mov
enter
test
cmpsl
xor
cmpsb
and
daa
or
cli
add
push
orl
push
sbb
mov
dec
jbe
sub
das
cmp
mov
popa
fwait
cmp
enter
lds
pop
inc
cmpl
es
push
je
vpmaxub
mov
jp
sbb
mov
mov
jmp
xor
adc
dec
int3
pop
gs
jecxz
inc
ret
add
fldt
sidtl
mov
cwtl
mov
in
testl
xor
mov
push
stos
arpl
ljmp
fnstcw
sbb
adc
aaa
fidivrl
fadds
aam
pop
cmp
clc
dec
hlt
mov
dec
js
and
inc
cli
pushf
inc
mov
cmp
ds
adc
inc
out
dec
or
fdivl
outsb
xor
stos
jge
or
std
test
enter
inc
inc
dec
lret
cmp
cltd
cmp
push
aam
sti
lahf
push
cmc
mov
popa
xchg
orl
mov
mov
fs
out
pop
jno
fs
or
dec
fs
xchg
or
jle
ja
sub
repz
lret
test
inc
xchg
ds
mov
or
sub
test
inc
mov
pop
inc
hlt
pop
js
insl
notl
or
ret
fistps
std
push
std
insl
adc
mov
lea
pop
cli
and
push
jne
in
jl
test
push
cld
sub
jae
dec
fwait
loope
mov
insl
jne
pavgb
dec
mov
insb
cmp
jb
in
fistl
js
loop
arpl
mov
xchg
add
js
xchg
test
pop
out
mov
dec
repz
xor
cmc
cmp
adc
lods
push
cwtl
push
push
sub
inc
fsubrl
pusha
adc
lahf
or
out
int3
mov
cmp
xchg
imul
bound
daa
in
adc
mov
ffreep
ret
cli
or
cli
aad
int
test
mov
out
and
xor
or
jge
bound
clc
movsb
cli
mov
push
push
mov
adc
orl
jl
xor
and
mov
or
push
inc
addr16
push
ljmp
sahf
jb
in
push
jbe
pop
pop
pop
gs
and
fisubs
mov
loope
movsb
inc
xlat
jne
andl
fwait
in
jbe
sub
adc
mov
ret
sbb
xor
out
cwtl
add
clc
mov
pop
popf
push
sahf
jp
pop
les
or
movsb
lcall
pop
scas
adc
jmp
lea
rcrl
lock
jg
cwtl
scas
mov
sub
mov
jp
cmp
stos
mov
xchg
jno
ret
out
rcll
repz
pop
push
xchg
jbe
mov
push
gs
test
push
jmp
mov
mov
sbb
les
jnp
fldenv
xor
push
hlt
cld
dec
enter
jae
push
inc
add
test
mov
nop
cmp
fs
jmp
or
inc
nop
adc
mov
testb
jnp
xchg
leave
lret
js
mov
xchg
inc
aam
xchg
fildll
inc
les
mov
and
mov
hlt
pop
jno
test
xor
sbbb
sbb
fwait
sbb
movsb
dec
icebp
test
mov
mov
xchg
inc
dec
cmpl
mov
push
and
adc
dec
and
xchg
test
loop
cmp
xchg
shlb
call
ror
sbb
adc
in
xchg
pusha
add
cmc
inc
scas
imul
push
mov
push
and
push
fcomp
cmpsl
int
ljmp
mov
cwtl
sbb
mov
jae
cmp
xor
cli
mov
adc
jg
jp
jle
adc
insl
jge
xor
mov
mov
sahf
push
es
inc
stc
fimuls
sbb
cmpsb
jbe
xchg
divl
fdivs
int
pop
sbb
sbb
xchg
gs
fidivl
add
jle
test
mov
aam
out
jo
adc
jl
push
cld
mov
clc
jae
mov
adc
xchg
mov
adc
int3
xor
mov
shlb
in
aas
mov
test
cmp
popf
aad
aam
outsb
push
add
scas
lret
fcoms
fwait
out
mov
push
cmp
mov
fnstenv
insb
in
test
push
into
jge
les
mov
stos
pop
out
sub
fst
xlat
xchg
dec
adc
adc
or
mov
jo
or
out
into
fnstenv
lahf
add
sub
test
in
mov
xchg
fdivr
jae
mov
dec
cs
inc
add
sarl
add
scas
ss
lock
mov
xchg
inc
adc
ror
bnd
xor
mov
jecxz
dec
lcall
cmpsl
enter
arpl
cltd
inc
mov
ja
dec
adc
inc
imul
xchg
sub
xchg
mov
lds
ljmp
cmp
pop
ficoms
push
sub
push
arpl
sbb
testb
out
mov
gs
mov
sub
dec
scas
jne
xchg
cli
mov
jbe
out
mov
call
xchg
bound
or
cmc
pushf
inc
adc
jg
inc
sbb
jecxz
es
xchg
imul
das
fs
xchg
inc
popa
stos
loop
push
jl
cld
xor
ljmp
push
and
mov
hlt
push
or
adcb
fisubrl
sbb
fs
sbbb
loope
cmp
push
sbb
jne
xchg
pop
sbb
push
cmp
and
xchg
out
xor
clc
aad
xchg
add
push
push
cmp
push
add
pop
popa
mov
jns
cltd
and
sbb
jge
aam
jp
sbb
addr16
cmp
mov
jmp
loope
sbb
cltd
mov
in
out
fstpt
pop
xchg
push
jmp
movsb
mov
rolb
xor
mov
adc
cs
out
adc
not
insl
mov
sahf
jle
test
aas
or
adc
fnstsw
repz
mov
pop
adc
in
sar
les
fsubrl
lcall
mov
lcall
jecxz
cmp
popf
xor
pop
rol
ret
add
out
out
stc
imul
aaa
sub
loope
mov
test
add
sbb
xlat
iret
shrl
jp,pn
movsb
jp
mov
jb
sbb
mov
test
inc
mov
into
and
pop
push
jnp
imul
ds
fwait
outsl
les
daa
jl
and
xchg
sub
dec
outsb
pop
addr16
lods
ljmp
jae
cmp
pop
lret
adc
fbstp
mov
les
out
add
mov
xchg
test
mov
call
adc
xchg
test
sbb
xchg
or
nop
leave
nop
pop
out
pop
sub
mov
lahf
movl
fldl
in
pusha
dec
sub
and
mov
mov
mov
inc
popa
je
pop
sbb
xchg
sahf
js
mov
cltd
xor
in
cltd
mov
mov
stc
in
pop
pop
jb
mov
loope
and
aas
ljmp
clc
fisttpl
aam
ds
mov
sbb
mov
add
scas
cmp
xchg
insb
fwait
mov
lahf
jns
cmp
getsec
pop
cwtl
xchg
fidivl
dec
fstl
in
inc
push
adc
add
mov
test
cmpsb
pop
stc
ss
pop
in
jecxz
mov
aam
insl
jne
pop
mov
dec
cld
or
lds
in
inc
loop
pop
pop
mov
jg
add
mov
push
cmpsb
loopne
loope
stos
mov
out
cli
mov
pop
mov
pop
sub
dec
fistpl
lcall
lcall
std
mov
jl
lcall
ja
mov
loope
mov
sub
mov
hlt
lcall
popl
mov
sub
hlt
cmpsl
jo
in
sahf
adc
out
andb
push
jg
addr16
and
sbb
add
ret
cwtl
stc
mov
dec
dec
clc
push
dec
mov
sub
notb
sti
lods
ja
mov
int3
cmp
and
adc
adc
or
mov
inc
sub
ds
inc
jne
push
iret
ss
mov
push
jge
dec
dec
xchg
addr16
stc
pop
add
aaa
push
pop
dec
sub
jae
lcall
pop
xor
xor
or
int3
jne
shll
scas
je
popfw
sbb
mov
adc
into
inc
mov
push
jno
ret
sbb
mov
lret
dec
dec
add
shlb
inc
pop
rorl
js
xchg
or
inc
int
or
and
dec
lods
outsl
xchg
or
pop
lret
int
mov
loopne
or
pop
test
loop
rcll
push
inc
push
mov
cmp
cli
push
push
fcomps
imul
mov
fstps
movsl
es
fnsave
pop
pop
xchg
sbb
cmp
sahf
xor
ret
mov
cmpsb
xchg
popf
loop
adc
bound
cwtl
adc
out
push
lds
mov
dec
roll
jmp
adc
lret
mov
xlat
outsl
pop
sarl
sbb
pop
pop
icebp
mov
sub
lahf
mov
sbb
lret
neg
movsl
rcr
in
mov
inc
loopne
jecxz
nop
or
sar
or
and
dec
test
insl
mulb
pop
xlat
addb
lret
cmpsl
fcmovu
std
push
cmpsl
push
sub
mov
stos
cmp
xchg
aam
adc
push
fwait
cmp
pop
jns
jns
rorb
fmul
jmp
cwtl
dec
xchg
es
jle
add
data16
xchg
mov
cltd
dec
mul
cld
and
add
pop
jmp
ss
fisttpll
lods
sbb
fwait
push
push
lds
je
dec
xchg
pushf
xlat
test
dec
and
sub
or
pop
out
add
xchg
cwtl
jmp
xchg
xchg
mov
mov
cld
xchg
dec
pushf
dec
mov
fwait
rorb
popa
in
sub
xor
ret
push
out
stos
xchg
lds
mov
mov
ret
add
sbb
mov
andb
fwait
push
xor
cmpsb
sti
pushl
clc
xchg
punpckldq
aad
push
lea
fs
fsub
lahf
xchg
push
mov
movsb
pushf
xor
jecxz
fnstsw
pop
push
jg
dec
shll
idivb
push
outsl
into
ds
call
cmp
pusha
ret
xchg
sbb
lods
aaa
fstpt
cld
subb
or
mov
mov
pushf
daa
dec
and
mov
pop
mov
jo
xor
cld
push
adcb
dec
push
popa
jb
mov
cmpsl
pop
adcb
mov
adc
cs
out
es
call
lret
jb
shl
push
inc
fidivl
out
mov
lcall
jmp
testb
or
addr16
lds
ljmp
xor
inc
push
add
lods
mov
xor
jo
push
dec
xor
addr16
inc
sbb
mov
push
rcrb
rcl
jecxz
sub
das
in
sub
nop
pop
sbb
sti
push
jno
ds
out
movsb
push
sbb
jl
mov
insl
repz
ret
adc
mov
loopne
lret
push
insl
loopne
loop
mov
lret
xor
imul
dec
dec
mov
pop
dec
fidivrs
sbb
popa
cmpsl
mov
int3
ja
mov
dec
mov
mov
push
push
add
stos
clc
dec
lods
outsb
movsl
into
inc
mov
mov
push
push
repnz
and
push
push
sti
fisubrl
out
fucomip
sbb
ss
fs
pop
sbb
ret
mov
mov
ja
fsubl
fwait
rcl
leave
lret
xor
mov
lret
inc
aam
out
push
lret
xchg
add
shl
push
xlat
mov
pop
lods
pusha
pop
mov
lds
jb
fwait
mov
insl
sub
lahf
jle
fildll
mov
dec
scas
mov
lret
xchg
iret
sar
stc
test
or
xchg
sbb
adc
pop
ja
or
sbb
push
inc
mov
int3
je
aas
pop
rcr
scas
cs
xor
push
jge
fwait
leave
inc
orl
jb
add
in
enter
mov
sub
cmp
dec
popa
arpl
iret
cmp
mov
insl
dec
adc
call
test
cpuid
mov
and
dec
cwtl
pop
cmp
ret
fistpll
inc
insb
fistl
aam
sar
repnz
frstpm(287
fisttps
mov
fstpl
lock
pop
xor
add
push
jecxz
mov
mov
mov
pop
xchg
xchg
pushf
inc
xchg
ror
ds
aas
ror
lret
lahf
repz
dec
aad
push
xlat
push
dec
dec
sbb
lock
sti
mov
rcrb
shlb
cltd
add
test
stos
or
icebp
push
lods
lcall
incb
adc
mov
aas
pop
pop
mov
pusha
pop
push
mov
aas
pop
xchg
jmp
fisttpll
pusha
sahf
lds
cltd
movb
stc
es
adc
mov
add
in
sbb
cmp
aaa
sbb
cld
cs
pop
loopne
xchg
cmp
lcall
scas
dec
jecxz
pop
lods
rcll
sub
and
sbb
adc
aaa
sub
loop
sub
int3
xchg
rolb
aad
and
stos
test
lcall
xor
test
xchg
lcall
xorb
ja
ret
sbb
mov
xor
jecxz
ret
dec
sbb
xor
mov
dec
mov
movsb
out
je
out
push
xor
outsl
sti
dec
dec
cmp
int
jmp
and
ficoms
icebp
gs
jb
jne
push
aas
xor
test
push
jg
jno
lret
cwtl
bnd
hlt
hlt
pop
ret
xchg
dec
add
jmp
mov
test
and
in
or
xor
nop
xchg
pop
mov
test
in
dec
push
lret
out
push
pop
cld
cld
dec
and
ss
rclb
pop
test
mov
mov
mov
and
mov
xchg
jmp
cmp
xchg
jae
cmpb
add
xor
movsb
imul
xchg
and
xchg
gs
mov
sahf
xor
adc
popa
cmp
mov
ds
sub
jbe
out
cmpsl
cmpsb
mov
push
ret
or
fcompl
mov
jle
xchg
dec
call
clc
xchg
stc
outsb
cmpsl
enter
mov
inc
pop
and
sub
les
jne
dec
mov
jbe
mov
cmp
icebp
loop
mov
iret
or
clc
add
in
push
adc
mov
loop
add
shr
bound
push
stc
stc
test
aam
dec
dec
dec
and
aas
jge,pn
addr16
sub
je
mov
mov
outsb
fldcw
cmp
dec
enter
gs
enter
mov
xor
in
xchg
xor
fdivs
jne
lahf
sahf
jle
or
jle
lret
add
cmp
inc
xor
rorl
and
das
push
sub
xlat
out
push
and
pop
popa
call
and
pusha
cmp
mov
jbe
outsl
leave
mov
push
sbb
mov
or
test
sub
lds
sub
jnp
outsb
movsl
mov
jmp
jns
or
enter
push
mov
xchg
pop
pop
ss
fisubrs
insb
sub
adc
dec
lods
scas
faddl
jp
mov
fbstp
cmp
arpl
sti
push
xchg
test
lret
cmc
push
or
push
mov
cmpsl
lea
dec
and
ret
mov
sub
pop
xchg
mov
cmp
test
ror
out
sbb
std
mov
incl
jns
movsl
ss
sbb
mov
leave
jmp
dec
pop
test
jne
xchg
xchg
push
pop
pop
testb
jb
push
push
add
test
test
jge
js
dec
insb
cld
hlt
push
push
add
pop
or
test
adc
sbb
aas
push
js
mov
subl
aam
sbb
sub
sbb
fwait
test
xchg
and
pop
ja
lds
ficomps
inc
pop
sub
dec
mov
jne
and
push
cmc
in
sbb
mov
dec
aam
lods
mov
mov
pop
aam
pop
lods
push
dec
xchg
pop
arpl
lea
fcoms
push
icebp
push
cmp
loopne
pop
dec
mov
cli
mov
fidivs
fldl
dec
js
shll
in
xchg
bound
lods
shl
outsl
sbb
xor
adc
mov
inc
cmc
push
lea
daa
out
stc
ja
mov
fnstenv
cmp
arpl
lds
js
sbb
lods
inc
stos
fimuls
aaa
add
jnp
loopne
aas
pop
shl
dec
arpl
cmp
xchg
jecxz
pop
aad
ret
jl
mov
mov
adc
test
icebp
xchg
cwtl
jmp
in
dec
push
sahf
mov
outsl
mov
jmp
cwtl
add
fs
fidivs
pop
imul
push
or
inc
jbe
xchg
fldenv
or
mov
xlat
jmp
cmpsl
sahf
pop
sbb
dec
lret
mov
sbb
jb
push
mov
xchg
mov
mov
mov
xchg
out
std
add
jle
sub
aad
sarb
cmpsb
lds
sub
enter
lret
aas
popf
pop
lcall
inc
dec
cltd
lock
or
ds
sbb
scas
das
mov
push
addb
testl
int
cmpsl
arpl
sub
enter
push
adc
repz
std
mov
and
sarl
outsb
add
stos
hlt
or
xchg
mov
loopne
cld
pop
lret
or
pop
inc
test
sub
mov
loopne
jle
push
adc
lcall
push
pop
movsb
movsl
nop
dec
sub
mov
in
mov
aaa
mov
lds
mov
dec
aad
aaa
les
fimuls
jmp
mov
pop
out
sub
into
in
clc
jbe
popf
dec
in
xchg
or
js
mov
rcll
into
testl
lds
add
mov
shrb
fbstp
call
movsb
aas
aam
les
outsl
in
adc
add
xor
and
push
iret
inc
fbstp
call
movsb
aas
aam
les
outsl
in
adc
add
xor
and
push
iret
inc
fbstp
call
movsb
cmp
dec
les
imul
adc
stos
and
push
iret
inc
fbstp
aas
xchg
je
dec
mov
adc
add
push
and
or
push
sbb
loope
icebp
xchg
lds
and
add
and
inc
shll
test
aad
lds
push
and
add
and
pop
rcll
xchg
loopne
test
sbb
xor
popa
sbb
lret
test
ds
cs
not
or
sbb
dec
sub
sahf
lods
push
mov
add
adc
jge
pop
dec
pop
test
test
jo
mov
aad
mov
dec
cmp
and
gs
outsb
test
icebp
sub
in
in
sub
and
imul
mov
add
jp
cmpsb
xchg
sbb
cmp
in
mov
push
xor
sarb
movsl
insb
sarb
rcrl
mov
jge
test
into
sub
test
mov
mov
sbbb
data16
xor
jno
add
and
shrl
pushf
sub
mov
and
xor
and
dec
cmp
fstl
cwtl
shlb
aaa
dec
and
add
push
xor
int3
mov
pushf
loope
jbe
hlt
mov
mov
push
inc
daa
je
jo
sbb
and
inc
shll
test
aad
lds
push
and
add
and
inc
shll
test
aad
lds
xor
rorl
add
scas
lods
jb
add
ficomps
pushf
mov
clc
add
fdivrp
push
out
mov
cmpl
push
xor
mov
push
cmp
out
loope
pop
sub
dec
pop
adc
jno
sub
xor
jbe
xor
add
es
mov
pop
mov
es
call
push
jnp
inc
add
add
out
push
jp
jmp
lret
inc
jecxz
ret
push
mov
push
aad
xchg
xor
repnz
cmp
and
es
movsb
sti
pop
jg
enter
movsl
push
add
daa
out
and
fistps
mov
daa
sub
and
mov
adc
cmp
mov
cmp
or
bound
cmpsl
mov
adc
divb
lret
pop
push
stos
call
aaa
imul
out
xlat
sub
mov
cli
sti
and
push
or
push
jp
loop
es
stos
mov
outsl
or
inc
cmc
dec
lret
mov
cmp
adc
fnstsw
push
jge
adc
xchg
mov
mov
push
push
push
stc
repz
dec
mov
into
and
push
roll
xchg
jae
cltd
mov
jmp
cmp
jb
loope
mov
inc
out
jno
ror
xor
jg
dec
mov
ret
shlb
out
stos
mov
mov
out
arpl
mov
ja
jmp
sbb
sbb
sub
lods
outsb
pop
cmp
insb
sti
es
xor
push
pop
mov
mov
movsl
in
sub
xchg
lret
dec
arpl
inc
dec
mov
imul
cmp
lock
and
push
mov
jo
enter
gs
rcll
cwtl
cld
mov
add
add
jl
push
in
dec
adc
and
cmp
fmul
jl
cld
dec
cmp
mov
outsl
popf
data16
jo
or
xchg
pop
not
push
xchg
in
and
outsb
mov
popa
or
movsl
lret
ss
lods
sarl
loop
movsl
mov
movsl
int
mov
adc
mov
loope
cmp
sahf
ret
xor
nop
scas
into
adc
mov
ss
outsl
jp
push
xor
pop
dec
das
repnz
cld
xchg
out
gs
mov
outsl
mov
in
mov
pushf
xor
push
xchg
icebp
and
ja
pop
icebp
sbb
xchg
test
dec
aas
dec
dec
test
and
xorl
stos
mov
xchg
imul
inc
lods
fidivl
sbb
cltd
adc
xor
and
jne
add
add
into
or
pushw
out
mov
or
mov
jmp
or
lods
jle
xor
insb
mov
pop
push
add
add
jge
mov
mov
cmp
pop
ret
mov
mov
ret
inc
adcb
movsl
popf
mov
inc
cltd
loope
mov
nop
dec
das
aas
stos
jmp
and
pop
add
scas
sub
imul
loop
fadd
mov
push
xchg
push
cli
or
fcompl
cmp
mov
sbb
push
and
icebp
data16
jmp
sub
lret
xchg
mov
sbb
sub
lret
je
out
mov
call
cmp
test
out
cwtl
jno
loopne
into
jle
icebp
dec
pop
dec
xor
fwait
inc
sub
pop
cltd
mov
mov
mov
std
cs
adc
lods
fs
sub
xor
mov
mov
adc
inc
int
dec
add
mov
movsb
movsl
mov
test
cmp
push
jg
std
into
xchg
pop
push
fsubs
and
pop
repnz
inc
or
mov
outsl
push
cmpsb
andl
cmpsl
lods
rolb
divb
into
sub
push
negb
aam
mov
scas
add
outsb
das
in
fidivl
push
jl
iret
bnd
and
leave
fists
imul
int
dec
or
sub
mov
in
mov
sbb
mov
int3
jg
pop
in
mov
sbb
arpl
ret
clts
cmp
inc
mov
xchg
je
pop
jge
sub
jmp
sbb
pop
mov
and
das
gs
xor
rorb
xor
and
aam
lock
icebp
adc
jge
or
add
adc
pushf
mov
xchg
in
cltd
dec
cmp
add
insl
xchg
rol
aad
cs
lock
int
das
inc
push
jmp
jge
into
mov
sbb
pop
icebp
mov
imul
dec
adc
mov
adc
add
subb
cs
jae
fimuls
fstpl
pusha
and
xchg
das
cmp
enter
in
dec
pop
insl
push
push
sub
push
and
out
xchg
jp
push
lcall
fidivl
lcall
scas
popf
lock
mov
ljmp
sub
sbb
jns
daa
mov
jb
mov
fcmove
lcall
mov
lret
icebp
pop
sub
dec
mov
sub
lods
mov
or
in
aas
in
mov
lods
push
hlt
mov
cmp
pop
jl
mov
mov
rcrb
mov
mov
pushf
adc
scas
and
sub
push
lods
aas
dec
imul
imul
xor
sti
push
xchg
jmp
xor
mov
adc
stc
pop
or
loope
or
iret
cmp
dec
lea
or
mov
stc
andb
insb
lcall
inc
cmp
pop
cmp
mov
int3
lcall
out
sub
push
jle
std
stc
pop
data16
test
aad
sub
rcrb
lock
leave
lahf
ja
hlt
xor
jbe
dec
mov
lcall
dec
inc
rcrb
add
xchg
rcrb
or
pusha
call
stos
pop
cmp
loop
inc
je
cltd
push
popa
int3
xor
sarb
aam
adc
xchg
sbb
sub
jno
mov
test
pop
pop
mov
push
xor
imul
cmpsl
sbb
cmp
aas
sbb
and
aad
push
ret
mov
jb
pop
mov
and
xor
lcall
mov
fnstenv
xchg
adc
cmc
dec
nop
push
push
pop
movntq
sub
or
sub
xor
push
mov
and
outsl
fcomps
cmp
adc
mov
fwait
into
das
test
lcall
jnp
loopne
insl
ja
loope
push
arpl
sbb
jg
push
sbb
rorb
or
test
adc
ja
std
inc
xor
jl
int
or
arpl
test
gs
dec
jns
pop
leave
int
scas
loop
cmp
pop
push
jl
pop
mov
sti
les
mul
sub
ds
sub
dec
xor
dec
pop
jns
jns
clc
push
adc
inc
mov
mov
call
mov
mov
push
inc
mov
inc
adc
sbb
fsubp
pop
mov
rdtsc
push
push
daa
rcrl
insl
fcompp
mov
jne
push
outsb
xor
ret
and
out
hlt
shrl
cmp
movsl
lret
jle
dec
loope
aaa
aas
movb
daa
cmpsl
push
mov
iret
xor
and
aaa
xor
andl
andl
xor
outsb
scas
sbb
add
add
pop
mov
fmul
xor
pusha
push
mov
fs
bnd
xor
dec
es
mov
adc
pop
mov
push
aas
daa
aas
xchg
push
push
adcl
xchg
enter
cmp
inc
adc
dec
fstp
cwtl
pop
xlat
adc
cmpsb
mov
add
lods
or
shrl
arpl
mov
push
addr16
sbbb
pop
sub
push
rcl
pop
push
lret
cs
std
and
or
push
mov
adc
imul
jo
mov
jae
sub
lock
pop
cmpb
dec
mov
and
hlt
ffree
scas
jecxz
repz
je
test
sarb
jbe
fabs
ret
dec
ret
js
int
push
add
int3
sub
daa
push
into
jg
sti
push
ret
insl
cmp
mulb
and
outsl
loopne
inc
insb
fimuls
aaa
pop
pusha
repz
dec
enter
add
adc
dec
jle
inc
mov
jmp
ret
fwait
bound
sbb
adc
cli
mov
pop
push
push
push
push
jae
aaa
push
aam
data16
out
pop
aaa
lcall
xchg
lcall
push
or
stc
scas
dec
jne
mov
xor
ss
jne
mov
pop
gs
adc
jne
les
lods
int
push
je
paddb
sub
out
mov
pop
sbb
cld
subb
shll
bound
inc
es
fs
cltd
inc
pop
and
dec
and
sbb
mov
int
cmp
call
cwtl
es
mov
nop
add
dec
ljmp
mov
xor
scas
sub
int3
push
aad
out
movsb
aam
in
ljmp
pop
xchg
xchg
movsb
sub
pop
stos
shrb
fnstcw
xchg
mov
fwait
int
fwait
jbe
cmp
and
insl
mov
xor
test
insl
lea
mov
push
fiadds
push
mov
negl
pop
sbb
pop
dec
pusha
jmp
in
sbb
sub
sbb
cmp
jbe
popa
ret
lret
repz
enter
fcomps
adc
mov
mov
jl
cmp
idivb
ds
mov
add
mov
sbb
test
mov
aam
outsb
push
or
inc
push
cmp
cmp
push
sub
jae
gs
mov
popa
inc
add
fisttps
inc
fstpt
andb
rcrl
push
sub
cmpsl
outsl
mov
stos
jp
cmovo
seta
gs
jae
mov
stos
imul
and
mov
xchg
lock
dec
shl
cmp
loop
pop
mov
pop
in
jl
mov
addr16
frstor
ja
addl
add
mov
lea
or
mov
mov
lds
pop
push
sub
xor
pop
mov
sub
sub
adc
call
sub
dec
mov
stc
push
add
fmul
das
xchg
mov
mov
mov
test
imul
or
mov
push
movsb
xor
sbb
jl
xorl
xorb
sbb
cltd
cld
mov
insb
out
cmp
xorl
gs
mov
and
xor
rcl
cmpsl
xor
pop
jnp
mov
mov
pop
ja
mov
insb
sub
test
subb
mov
andl
adc
jae
adc
cmp
mov
or
les
sub
sbb
mov
movsl
ja
lock
sbb
lds
sbb
into
adc
xchg
scas
cmp
and
inc
out
das
xchg
or
test
fdivrl
cmp
inc
push
dec
fs
dec
lods
fmul
xor
jno
insl
sbb
fmuls
fcoml
mov
pop
and
push
shrb
dec
sub
or
mov
push
sbbb
xor
adc
push
cmp
out
pop
inc
js
and
adc
repnz
mov
out
adc
aam
imul
mov
cmpsl
add
test
dec
mov
jo
cmpb
xorl
jmp
jae
add
jo
icebp
hlt
popf
and
in
dec
xchg
mov
fdivrl
xchg
mov
lcall
inc
ffreep
out
stc
xor
jp
xchg
roll
lahf
fldenv
arpl
into
or
lock
push
jns
push
xchg
out
call
mov
je
insl
js
stos
and
xchg
lods
stos
mov
outsl
mov
pop
lret
outsb
test
mov
outsb
cmp
cwtl
imull
aas
push
cwtl
lds
xorl
and
sub
push
push
or
xchg
or
jmp
outsl
rcll
shll
or
mov
add
movl
ljmp
pop
wrmsr
pop
cwtl
inc
and
imul
daa
movsl
pop
sbb
mov
sahf
jg
sti
and
hlt
dec
mov
hlt
fistpl
add
sti
or
inc
cmp
pop
iret
fdiv
mov
in
ret
mov
ljmp
xor
je
pop
sub
sti
cld
inc
mov
sub
je
jo
cmp
clc
lahf
xchg
dec
addr16
fdivl
popa
les
gs
dec
call
insl
out
mov
xor
inc
fcoml
addr16
jp
dec
sbb
enter
xor
in
bound
sbb
inc
es
adc
cltd
adc
and
fmull
aad
leave
jecxz
and
test
push
loope
mov
rcrb
mov
aas
adc
pop
aad
dec
jge
adc
jnp
push
dec
jb
xchg
ret
jo
lock
xlat
and
pop
mov
dec
and
in
dec
add
inc
sub
cmp
inc
mov
or
imul
adc
test
mov
sub
in
lea
push
and
mov
mov
or
insb
xor
jno
push
cli
xor
xrstor
and
std
imul
imul
lcall
adcb
sar
xor
sub
push
jae
mov
jbe
xor
xchg
pop
mov
inc
insl
cmc
mov
icebp
popa
mov
push
jl
jge
sbb
dec
loopne
jns
insb
sbb
insl
stos
add
pop
xor
dec
mov
rorl
lret
btc
adc
enter
shrl
mov
ds
push
xor
jge
xchg
xchg
in
inc
add
dec
call
and
pop
push
loope
inc
call
lret
lods
ret
mov
mov
inc
xchg
xchg
filds
jbe
hlt
int
lret
adc
mov
sub
xor
div
insl
sbb
xchg
fs
leave
pushf
sub
dec
pop
rorb
xchg
rolb
js
mov
and
pop
lock
xlat
add
push
xchg
or
dec
out
adc
and
lock
lods
cwtl
stos
mov
lock
mov
daa
and
movsb
inc
jo
pop
lds
roll
cld
cmp
pop
test
dec
jp
pop
jnp
lock
xor
and
imul
ljmp
mov
lret
adc
aad
int
test
mov
xchg
xchg
scas
insb
mov
fimull
add
cmp
sub
cmpsl
cmp
pop
mov
push
xchg
outsl
mov
inc
je
std
sub
push
scas
jae
sub
xor
divb
pop
loope
int3
pop
xchg
add
xchg
iret
test
sub
int
pop
or
jg
sti
and
insb
aas
fimuls
cmp
inc
jno
pusha
and
fildll
inc
call
and
cmpsb
test
inc
insb
js
adc
mov
and
jne
jp
push
cwtl
fisttps
dec
dec
gs
insl
cli
or
dec
out
icebp
inc
xlat
clc
lods
xchg
movsl
ljmp
xor
xchg
add
lea
fcoms
popl
push
adc
mov
loope
inc
lock
test
jge
pop
mov
jge
sub
arpl
aam
xor
lods
je
iret
mov
and
subl
cmc
pop
lods
pop
clc
in
mov
push
fs
jns
mov
xchg
mov
dec
mov
icebp
adc
cmp
out
cmpsb
add
mov
mov
scas
test
mov
xchg
push
mov
lahf
insb
jb
sbb
mov
call
push
jecxz
psraw
es
xor
mov
rolb
mov
movsb
shr
insl
int3
mov
jo
jo
mul
dec
int
sti
cmpsl
cmp
push
jae
adc
pop
jg,pn
outsb
inc
dec
cli
mov
lcall
iret
xchg
pop
mov
cmpsb
lcall
cmp
sbb
lods
sbb
mov
pop
pop
mov
stc
add
jecxz
fsubrl
mov
xchg
xor
mov
push
push
bound
testl
or
dec
cli
loope
pop
sbb
test
mov
loopne
inc
mov
mov
out
inc
lret
cmpl
or
cmc
pop
mov
or
sub
xchg
mov
jge
in
xchg
insb
cmp
or
cmpsl
movsl
cmp
fistps
sbb
jo
outsw
mov
adc
movsl
fimuls
es
enter
mov
cmp
sbbl
loop
cld
sbb
addl
aaa
inc
std
sbb
xor
mov
test
push
outsl
inc
addb
xor
repz
daa
lret
sbb
es
insl
cmp
ljmp
lods
gs
stos
inc
jae
clc
ds
cmp
pop
cld
push
add
xor
mov
call
sub
stc
inc
xchg
lahf
push
stos
xor
hlt
adcl
cmp
jae
fs
les
adc
pusha
xor
movsb
xchg
jp
lret
fisubs
sbb
movsb
or
mov
mov
cmp
in
fmull
dec
mov
movsb
mov
cmpsb
rolb
xchg
and
ficomps
outsb
fadd
out
jbe
out
jle
cld
nop
gs
and
cmc
aas
insl
cmpl
adc
xchg
insl
mov
xchg
ds
sub
scas
andl
cmp
ds
je
xchg
sbb
adc
xchg
call
jb
in
pop
adc
mov
cmp
push
sbb
cmp
int
arpl
lods
cmovle
dec
inc
stc
pop
in
sbb
insl
mov
xchg
je
sbb
test
sbb
or
adc
xor
test
das
inc
lahf
sbb
cmp
and
bound
mov
std
jmp
sub
xchg
jo
jo
notl
and
push
xchg
cmpl
rcrb
mov
out
in
js
cltd
cmpsl
lock
test
aad
jl
hlt
xchg
lcall
shll
cli
push
lea
cmp
jle
sbbl
lret
jnp
or
je
xchg
mov
adc
jae
inc
jmp
es
jmp
or
sub
jle
data16
sbb
je
sar
mov
inc
arpl
in
mov
mov
fs
xchg
pop
out
js
mov
dec
mov
mov
jo
movups
adc
mov
jl
std
add
sbb
mov
loope
jae
dec
enter
jecxz
jbe
lret
pusha
cwtl
fs
shll
inc
loopne
xchg
int
jo
nop
cltd
inc
subb
cmp
addr16
jmp
shr
bound
aam
jo
repnz
aad
jb
mov
pop
shl
xchg
mov
lods
fldenv
jae
push
js
mov
inc
ficoml
or
nop
add
lea
mov
push
inc
sbb
inc
push
gs
lea
jp
mov
out
xchg
push
mov
push
stos
mov
cltd
subb
dec
pop
ljmp
int3
adc
fidivrs
xchg
mov
das
loop
mov
and
sbbb
pusha
pushf
add
push
pusha
xchg
adc
std
hlt
dec
jg
out
ds
in
jmp
iret
popl
and
sub
ss
xor
fidivs
jmp
jae
rolb
jns
iret
cltd
lock
leave
ficomps
adc
xchg
mov
aad
or
add
mov
adc
mov
cmpsb
adc
dec
int
cmp
push
inc
fldenv
sbb
mov
repnz
shlb
jmp
faddl
xor
mov
cmp
popf
cmp
push
and
mov
in
sbb
jo
push
test
cwtl
or
decl
mov
stc
inc
inc
sbb
iret
icebp
mov
cmpsl
sarl
pop
imul
fwait
dec
fistpl
and
mov
push
es
dec
mov
and
mov
sub
ja
mov
ficoml
inc
or
dec
sti
push
mov
sbb
in
shufps
xchg
stos
sub
and
cmp
mov
and
rol
mov
jecxz
loopne,pt
mov
stos
sarb
cmpxchg
mov
sub
add
and
inc
shll
test
aad
lds
push
and
add
and
inc
shll
test
aad
lds
push
and
add
and
inc
shlb
test
aam
lds
push
and
add
mov
mov
cmovnp
sbb
pop
sub
add
adc
and
xor
inc
out
and
inc
xchg
int
jno
mov
pop
rcll
gs
adc
dec
out
testl
jno
addl
ja
pop
rcll
loope
icebp
aaa
mov
out
negl
xor
in
mov
leave
add
ja
inc
mov
aaa
outsl
pop
mov
mov
inc
inc
push
je
jge
mov
fldenv
repnz
rcrl
xchg
in
push
mov
add
push
ja
in
and
dec
cli
jb,pt
sti
loope
push
lcallw
daa
fwait
mov
adc
out
pop
xlat
mov
mov
roll
xchg
xlat
sub
int
fst
jns
les
mov
sub
sbbb
ds
shr
loopne
icebp
mov
add
or
mov
xor
mov
hlt
mov
pop
shr
sbb
std
mov
and
mov
push
mov
xchg
push
sub
jbe
adc
ss
movl
movsl
xchg
xchg
popa
cmpsl
xlat
mov
inc
or
xorl
daa
icebp
pop
push
mov
cs
xchg
adc
and
and
paddq
mov
mov
jbe
je
push
out
test
iret
xor
xchg
shlb
out
ret
and
fs
insl
mov
inc
bound
popa
cmpsl
jno
addl
ja
pop
rcll
loope
icebp
aaa
add
adc
and
xor
inc
xchg
popa
cmpsl
jno
addl
ja
pop
rcll
loope
icebp
aaa
add
mov
jecxz
icebp
mov
dec
mov
jno
movsl
bound
ret
mov
hlt
xor
out
mov
push
and
xchg
mov
or
xor
lahf
dec
les
rcrb
cmpb
mov
xor
or
pop
jo
sub
nop
shlb
shll
lods
nop
xchg
cmp
jne
inc
push
inc
clc
je
pop
xlat
lret
cmpsl
mov
pop
sbb
faddl
dec
sar
orb
in
std
call
sub
addr16
and
loop
stc
in
push
fbstp
lods
sahf
lcall
imul
int
sub
pushf
add
xlat
jbe
jl
pop
sbb
or
adc
adc
mov
adc
jle
jbe
out
jae
cmc
xor
pop
sahf
jmp
jno
addr16
jnp
jbe
inc
push
adc
lock
jno
cmp
inc
movsb
popa
lret
dec
jmp
lahf
jne
push
int
mov
cmp
sub
cmp
into
es
idivl
pop
lahf
push
adc
fwait
scas
sub
sbb
mov
shr
inc
lock
push
and
or
or
fisubs
aas
add
out
test
lds
pop
imul
das
scas
cmp
mov
fsts
mov
in
or
decl
and
and
adc
lret
jecxz
or
test
jb
or
mov
mov
sar
sbb
cmpsb
scas
mov
daa
dec
inc
cmc
mov
ds
add
cwtl
and
insb
sub
popf
jp
adc
dec
xchg
loopne
mov
push
pop
in
mov
push
out
data16
lahf
dec
lahf
sbb
inc
sbb
stc
cmpl
mov
add
mov
mov
pop
inc
inc
ds
xor
xchg
test
into
int
cmpb
pop
sub
inc
adc
dec
cmp
push
or
fwait
je
call
adc
cltd
fadds
lahf
aam
shl
call
loope
xor
adc
out
mov
test
js
mov
rclb
insl
repnz
jp
sbb
enter
mov
ljmp
rcrb
xor
jbe,pn
sub
lods
mov
ljmp
ficoml
jns
jl
sarl
cmpsb
ficompl
mov
push
ret
push
ljmp
cmpsl
ffree
out
adc
adc
pop
ss
xchg
fistps
adc
cli
addb
movsl
adc
pop
ja
cld
sbb
mov
fdivp
and
fisubs
or
push
repz
fwait
gs
imul
pop
out
inc
or
push
pop
xchg
cltd
icebp
enter
xor
stc
imul
push
add
mov
ja
scas
jmp
mov
mov
mov
or
scas
xlat
roll
or
mov
jle
and
faddl
jg
mov
rcll
int3
jne
pushf
aas
ret
arpl
pop
mov
call
mov
mov
out
out
sub
clc
xchg
jo
repnz
push
int3
iret
cmp
xchg
dec
push
cmp
mov
and
push
jb
sub
jge
adc
lods
add
gs
xchg
sub
fs
sahf
push
cld
repnz
fcoml
jecxz
jbe
sbb
test
inc
mov
shrl
sub
jbe
insb
mov
loope
outsb
inc
pop
bound
bnd
push
mov
das
insl
dec
add
adc
xchg
pusha
sbb
add
mull
pop
daa
outsb
and
mov
in
shrb
sub
insb
negl
test
mov
lods
mov
stos
xlat
mov
pop
dec
jae
inc
mov
mov
lds
mov
and
mov
test
enter
jl
jno
ficompl
adc
mov
jl
pop
imul
mov
add
mov
jno
pusha
popl
loope
loope
dec
out
out
push
push
or
imul
fstpl
leave
push
xchg
shl
pop
xchg
jb
lea
dec
outsl
loopne
test
inc
cld
insb
lar
mov
inc
xchg
push
cmc
test
js
add
push
stos
mov
fs
fisttpll
lods
mov
out
push
mov
and
xchg
dec
push
out
mov
nop
aaa
and
jbe
fimull
xor
cld
insb
faddl
dec
lods
mov
stos
mov
mov
push
fisubrl
push
mov
test
hlt
out
xor
xchg
arpl
xchg
movsl
cld
cmp
push
sarl
je
stos
sbb
xor
add
lret
mov
icebp
loop
push
inc
loop
out
mov
jecxz
xchg
aaa
lret
addr16
jle
cmc
out
inc
je
and
push
jae
shll
mov
mov
push
or
sbb
out
pushf
and
ffree
fists
lds
cmp
sub
cmpsl
jl
mov
adc
xchg
sbb
xchg
in
in
xchg
iret
pop
int
cli
jmp
and
jp
pushf
dec
jo
ja
ficoms
popf
xor
shrl
fwait
into
sub
cli
js
test
jl
arpl
sbb
pop
pop
into
cmp
xor
push
lods
lret
xor
push
push
pushf
jo
int
hlt
popf
dec
mov
xchg
ja
dec
mov
and
push
or
pop
insb
or
dec
mov
sbb
mov
shl
lahf
jo
mov
movsb
cmp
shll
sub
and
inc
and
andl
sbb
loope
mov
repz
aas
ret
mov
and
mov
jo
xor
dec
fs
mov
and
notl
push
repz
in
push
rorb
sub
sbb
mov
fwait
push
inc
mov
in
or
jnp
sbb
lret
sarb
addr16
mov
out
and
add
lcall
hlt
pop
leave
loopne
xor
les
hlt
dec
aad
mull
fwait
or
ret
ud0
dec
pop
mov
sbbb
inc
pop
or
imul
pop
mov
and
int3
jno
in
push
sarb
pop
repz
inc
xchg
test
push
dec
lods
jne
mov
lret
decb
and
movsb
xchg
nop
fcoms
cld
pop
push
sub
ds
ljmp
jecxz
aas
leave
std
int
inc
in
sbb
ds
jae
pop
xor
sahf
outsl
cmp
mov
sti
mov
sub
inc
push
dec
jnp
dec
add
xchg
adc
xchg
sbb
xchg
je
subb
adc
pop
out
into
clc
jmp
test
into
out
mov
out
cld
or
dec
mov
xchg
out
clc
repnz
mov
xor
fimuls
add
loopne
sub
dec
test
push
ret
loop
not
ja
cmp
stos
sahf
fdivl
or
lcall
in
test
inc
push
dec
push
push
icebp
movsl
mov
popf
sarl
js
cld
sti
mov
add
adc
movsb
aam
or
pusha
push
jne
adc
cmpsb
into
ljmp
mov
ds
jle
repz
aas
cmp
bound
test
and
jecxz,pt
cmp
inc
xor
cmp
in
addr16
test
cmp
sub
jp
sarl
xor
shr
lods
inc
jle
cmp
pusha
addb
pop
adc
test
call
in
pop
int
lret
adc
in
fisubrs
test
jp
mov
mov
add
jo
rcll
and
xchg
or
mov
push
outsb
and
stos
int
cwtl
outsl
aas
mov
mov
xchg
loope
dec
ja
cld
adc
in
mov
ficompl
sbb
pop
out
inc
dec
dec
lcall
test
adc
cmc
push
or
out
int
test
mov
push
sub
cmp
dec
mov
in
and
mov
pop
xchg
xorb
mov
and
pop
xchg
cmpsb
mov
jg
insl
and
sbb
xor
std
pop
repnz
or
addr16
and
mov
xchg
lods
in
movsb
add
aam
pop
xor
lahf
mov
enter
mov
adcl
outsl
push
fisttpl
cmc
jmp
jo
sbb
movsb
jno
clc
jae
push
mov
mov
mov
jne
inc
inc
in
sub
sti
dec
pop
xchg
dec
xchg
movsl
mov
jnp
xor
je
or
mov
pop
lret
pop
mov
icebp
mov
aad
andb
mov
xchg
mov
xchg
fistps
pop
inc
stc
cld
adc
adc
sub
adcb
mov
or
xchg
jae
mov
insb
push
ljmp
mov
dec
in
mov
mov
into
inc
jle
add
rorb
std
les
js
mov
mov
mov
shr
pop
pushf
call
mov
jo
dec
int3
dec
cmp
mov
and
xor
scas
rorb
movsl
pop
and
insl
push
scas
inc
push
add
xor
add
div
fucom
jne
lea
aaa
jnp
ss
push
push
push
mov
sbb
test
repz
sub
jb
imull
mov
iret
xlat
sbb
test
in
aas
mov
nop
ss
cld
mov
sub
pop
es
nop
bound
mov
inc
and
pushf
cmpsl
dec
xchg
sbb
add
in
mov
sub
push
test
push
sub
lret
sub
inc
stos
jecxz
mov
scas
push
inc
les
test
xor
xorl
into
loope
stc
or
sar
scas
and
push
lods
cwtl
dec
or
inc
inc
icebp
dec
mov
xchg
gs
jae
fxtract
push
das
pop
sbb
enter
cmp
or
sub
out
or
lds
shr
jnp
sub
push
addr16
fsubl
out
shrb
pop
test
dec
inc
cmp
cmpsl
shlb
sub
xchg
js
push
add
mov
lods
pop
and
movsb
adc
jp
test
xchg
inc
movsb
bound
sbb
imulb
js
jbe
and
mov
push
movsb
fucomip
clc
arpl
enter
xchg
sub
mov
push
filds
mov
les
inc
jle
lea
pop
push
dec
push
mov
xchg
push
scas
faddp
jnp
imul
cmp
dec
jge
push
xchg
hlt
sbb
call
adc
inc
xor
jbe
adc
sarl
cmpsb
les
mov
clc
pop
or
cmp
andl
fwait
notb
fildll
fwait
sbb
mov
pop
cmpsl
mov
in
dec
iret
insl
imul
fdivrl
mov
ror
mov
adc
cmp
ss
insl
push
popf
pop
mov
dec
inc
adc
xor
add
fcompl
mov
push
movsb
aaa
in
and
inc
pop
clc
inc
jmp
jno
jne
jo
jno
cltd
dec
mov
inc
pop
scas
xchg
in
lds
adc
xor
and
adc
das
xchg
mov
mov
movsl
sub
popa
movsl
loop
fadds
xchg
arpl
or
jl
push
pop
and
sub
mov
and
mov
mov
dec
or
mov
popa
arpl
repz
es
hlt
ja
add
sbb
pushf
out
mov
push
and
mov
push
loope
negl
lods
fcompl
inc
add
lods
dec
movsb
inc
nop
rorl
cltd
fsts
test
xchg
pop
cmpsl
mov
xor
sub
popa
or
js
push
sub
cmp
adc
outsl
in
dec
or
push
and
jnp
mov
jnp
movsb
push
insb
into
in
sets
xchg
pop
sbb
sub
or
call
mov
xchg
mov
mov
gs
or
dec
adc
adc
add
xchg
pop
lret
clc
daa
mov
jecxz
add
dec
stos
iret
jp
cmp
bound
push
mov
daa
out
hlt
jno
stc
inc
or
xchg
add
inc
insb
lock
mov
fimull
sub
pop
bound
dec
cwtl
jp
imulb
out
lahf
inc
mov
cmp
push
loop
and
idiv
add
and
push
ljmp
jns
in
fstpt
je
fcmovnbe
or
leave
pop
inc
mov
cmp
fsubrl
in
lods
sbb
dec
in
cltd
fistpl
bound
mov
icebp
int3
mov
inc
pusha
rcll
add
cmp
dec
test
pop
push
aam
leave
sub
add
pop
sbb
sti
xchg
cmp
imul
inc
stos
and
sarl
cld
xor
ljmp
jbe
adc
scas
addb
fnsave
cmpsb
xor
dec
push
push
pop
or
out
or
call
jo
bound
add
out
iret
inc
dec
cmp
inc
sahf
jnp
push
xchg
lcall
cmpl
orb
or
mov
push
xchg
ljmp
mov
dec
sub
cli
xchg
sub
mov
lock
loop
xor
insl
out
jecxz
ficoml
leave
cs
cmc
out
pop
adc
inc
pop
dec
mov
sahf
sub
test
lods
fadds
sub
lcall
cmc
inc
call
cmc
mov
divb
out
aam
test
xchg
int3
ja
xor
in
xor
inc
ss
stos
sbb
sub
insb
test
ss
das
paddq
pop
ds
aad
cld
mov
pop
rdtsc
xor
repnz
orl
xor
cmp
pop
inc
fsubrs
add
mov
cmpsb
out
clc
wrmsr
or
dec
adc
and
popa
adc
cltd
xor
in
ss
das
out
mov
mov
sub
cmp
mov
out
inc
cmp
jo
inc
mov
mull
push
cmpsl
mov
lcall
sub
push
stc
outsl
movsb
aam
pop
and
dec
inc
add
and
test
test
push
xchg
test
jns
adc
shlb
and
movsl
cwtl
xchg
push
test
ljmp
xchg
cmc
jae
inc
mov
jns
std
int3
push
dec
insb
gs
adc
iret
pxor
jg
sbb
or
fwait
in
clc
cld
into
cmp
inc
push
adc
inc
fistpll
or
inc
pop
fldcw
popf
stos
add
jp
aam
add
out
loopne
jne
push
jecxz
cmp
mov
addb
adc
andb
je
dec
add
mov
repz
cmpsl
test
lret
cld
xlat
push
int3
add
lret
sbb
dec
into
mov
mov
push
mov
and
xchg
inc
and
pop
fwait
fs
out
icebp
leave
push
mov
xchg
daa
xchg
movlhps
into
in
mov
movsb
in
xchg
mov
mov
ja
out
and
repz
aam
pop
je
stc
push
int
xchg
cld
and
imul
js
jge
stos
and
add
arpl
outsl
mov
pop
icebp
jns
push
or
mov
out
aam
mov
addr16
imul
shrl
clc
fsubp
pop
ss
fwait
aam
add
in
lock
sarb
idivb
dec
push
ljmp
int3
sbb
fld
repnz
aam
or
pop
sti
dec
fs
mov
inc
stos
xchg
mov
jb
cmpsl
pop
add
out
lds
in
icebp
xor
jne
movsb
pop
hlt
xchg
add
pop
cmp
arpl
inc
push
pushf
push
xchg
mov
je
leave
jp
adc
lret
mov
mov
fcmovne
mov
in
ret
sbb
shl
dec
mov
jl
call
popa
mov
in
dec
jbe
mov
dec
std
stc
push
and
cmp
lods
fnstenv
inc
mov
test
mov
push
adc
roll
stos
jnp
inc
xchg
or
sub
repz
icebp
and
cmp
pop
flds
push
adc
ficoms
sti
and
cmp
or
test
xchg
cmp
sar
out
mov
and
dec
ja
mov
cmp
jl
arpl
jbe
out
dec
clc
mov
leave
ljmp
out
repnz
and
mov
and
mov
gs
xchg
cltd
or
lock
inc
leave
xor
cmpsb
mov
loop
push
mov
pop
mov
fildll
and
jmp
add
inc
out
rorl
mov
cmp
das
pop
or
insb
mov
sub
sub
sub
imul
test
or
test
mov
call
inc
jle
mov
pop
add
or
cli
out
lahf
popa
sbb
int3
fmull
mov
sbb
lds
jl
int3
mov
pop
or
cmp
or
fstps
lock
cmp
mov
dec
out
mov
test
icebp
push
mov
das
shrb
repnz
bound
lds
testb
test
imul
mov
clc
dec
idivb
jo
xchg
lods
dec
mov
mov
dec
push
mov
pop
dec
xchg
pop
shl
mov
mov
cmc
hlt
mov
int3
adc
ljmp
shll
xor
frstor
xlat
imul
cmp
ret
ror
or
aad
rclb
inc
mov
xchg
adc
loopne
or
das
addl
or
xchg
xchg
int
test
daa
mov
lcall
push
xchg
pusha
mov
imul
or
aaa
inc
adc
inc
ret
fisubl
rcrb
add
inc
pop
insl
mov
xor
lea
cmp
incb
inc
xchg
addl
mov
and
test
orl
dec
les
xchg
sub
ja
into
push
outsb
ret
out
rcrb
or
fs
mov
stos
fldenv
sub
out
xchg
cmp
pop
push
imul
mov
notl
mov
pop
testb
jbe
mov
mov
cs
cmp
loopne
xor
dec
sub
push
push
int
mov
fdivrl
jns
lea
int
ja
ds
aas
mov
fldcw
addl
push
jl
mov
pop
cmc
xor
xor
pushf
or
and
xchg
adc
fimuls
cmp
or
dec
mov
pop
jae
xchg
sbb
movsl
popa
xchg
outsl
push
jmp
mov
rcr
flds
mov
pop
jmp
sahf
fiadds
aad
loope
lahf
cmp
lahf
clc
stos
je
adc
cmp
adc
mov
rep
xchg
hlt
fcmove
cmp
cli
mov
pop
adc
gs
mov
dec
xor
mov
mov
out
push
repz
fcompp
add
pop
cmp
into
scas
jno
insl
in
mov
imul
cmp
imulb
mov
outsb
pop
and
jns
shlb
outsb
enter
daa
pop
mov
fst
sti
fstpt
push
outsl
aas
cmp
jmp
fs
in
xchg
pop
sbbb
je
push
aas
cmpsb
jo
cmpsl
mov
mov
jnp
xor
mov
push
jae
hlt
dec
inc
jg
push
aaa
sbb
test
subl
jbe
mov
add
sti
sbb
jp
pop
adc
pop
push
jl
jbe
xor
jbe
jae
push
jo
push
inc
cltd
movsl
jno
test
cli
out
gs
jle
fwait
xchg
dec
test
lret
mov
xchg
andb
xchg
push
cmp
cmp
xor
fldlg2
dec
adc
sbb
xchg
das
push
push
xchg
mov
ret
jb
aad
scas
js
in
popa
sbbl
dec
jl
dec
ficoms
sbb
sub
fldcw
incb
mov
jecxz
mul
cmc
mov
mov
sti
or
rolb
outsb
fsubs
add
js
test
shlb
cmp
pushf
fistl
inc
hlt
mov
adc
sbb
popf
jp
inc
mov
xor
movsb
jno
inc
and
ficoml
cmp
scas
leave
dec
sbb
jns
jns
mov
sbb
cmp
push
or
insb
loopne
dec
scas
or
cwtl
mov
mov
cmpsl
jae
mov
cmp
jb
inc
jp
adc
pop
inc
insb
and
pop
jno
rcll
stos
pop
ljmp
cmp
sub
popf
jnp
mov
add
mov
arpl
sahf
xchg
dec
push
nop
dec
inc
addr16
push
pop
mov
out
testl
jno
addl
ja
pop
rcll
loope
icebp
aaa
add
adc
and
xor
inc
xchg
popa
cmpsl
jno
addl
ja
pop
rcll
loope
icebp
aaa
add
and
addr16
roll
mov
add
mov
roll
pop
loope
sbb
adc
out
testl
icebp
mov
inc
outsb
std
or
add
fmuls
enter
mov
ss
rcr
xchg
sub
sbb
or
jnp
imul
dec
pop
mov
mov
stc
fcmovne
lret
mov
sbb
or
mov
dec
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
sbb
or
das
add
cs
cs
iret
leave
cld
xor
push
ror
xor
pop
stos
in
xchg
push
lret
loopne
or
mov
popf
repz
je
add
jmp
and
cmp
or
jns
and
or
mov
pop
jo
sahf
aaa
push
adc
cmp
bswap
out
xchg
push
inc
les
mov
pushf
mov
fsubr
stc
pop
ror
mov
scas
in
popa
pushf
test
cltd
fdivrs
pop
inc
imul
mov
cwtl
mov
rcl
jge
sahf
divb
sub
xchg
imul
lock
scas
pop
aaa
add
push
inc
lret
push
insb
sub
cmp
sub
sub
dec
lret
cmpsb
ja
stos
mov
sti
jmp
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
cli
test
loop
sti
scas
cltd
lea
pop
dec
and
pop
jae
jp
imul
cmp
aad
shl
sti
stos
scas
mov
pop
dec
jp
sbb
dec
jp
add
or
hlt
in
out
mov
jmp
fcmovne
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
out
pop
add
sahf
cmp
dec
cmp
daa
sbb
into
decl
sbb
mov
inc
mov
mov
jg
in
in
rcll
popf
inc
mov
mov
xchg
sbb
rcrl
stc
and
lock
test
mov
jne
lock
mov
lock
cltd
xchg
aas
or
and
mov
xor
mov
cli
test
pop
jl
xchg
pop
jge
sub
mov
mov
or
aaa
dec
imul
sbb
in
cs
jmp
das
cmp
pop
cmp
andl
int3
mov
xor
xchg
ljmp
xor
fadd
xor
sbb
pop
ret
mov
add
dec
mov
jge
push
mov
into
cs
jmp
push
out
xor
testb
pop
fisubrl
xor
xor
xor
loopne
mov
pop
pop
cmpsb
and
lahf
xor
scas
mov
mov
mov
jp
cmp
cwtl
shll
leave
punpckhdq
jmp
and
jge
jno
je
adc
into
fistpl
inc
add
mov
sbb
fidivrl
loopne
bound
fildl
movsb
ss
pop
mov
push
pop
cltd
ss
inc
stos
repnz
test
and
out
xor
shlb
dec
sarb
fnstenv
jl
cmp
xor
lea
xorps
sbb
push
push
enter
push
bound
push
xchg
jo
sbb
or
inc
int3
inc
or
aam
loop
add
push
or
fisttpl
sub
xchg
dec
sbb
cwtl
or
ljmp
xchg
xlat
mov
ljmp
or
leave
add
imul
lods
lret
or
test
test
push
sarl
inc
aam
dec
push
xlat
lds
movsl
jmp
cli
lahf
push
jno
int3
add
dec
dec
push
push
rcr
adc
fs
popl
insl
fcomps
xchg
fildll
pop
dec
pop
inc
inc
fsts
add
sub
loope
and
hlt
fcoms
xchg
adc
pop
xor
mov
aam
outsl
cmp
imul
jns
cld
cld
xor
jecxz
sbb
pop
js
or
xchg
and
shrb
cmp
cmp
jae
add
sub
je
ds
subb
or
mov
inc
mov
sarb
pop
dec
jno
aaa
ficoms
xor
test
aas
and
mov
sahf
jbe
inc
add
add
or
leave
pop
lret
dec
cmpsb
xor
sahf
popa
sbb
insb
iret
daa
loop
add
push
and
xchg
sti
in
mov
mov
arpl
mov
rcrl
xlat
inc
ret
dec
movsb
xor
pusha
sbb
test
fadds
and
xor
lea
das
mov
test
in
push
push
jmp
bound
push
dec
cwtl
pop
inc
mov
mov
mov
adc
fwait
arpl
stos
imul
lahf
clc
mov
and
cmp
es
loop
sub
mov
test
or
movsb
dec
ljmp
and
sbb
jnp
xor
xchg
pusha
pop
adc
sub
inc
inc
ror
fwait
test
inc
mov
mov
idivl
xor
sub
fs
jns
cwtl
mov
pop
cmp
and
aad
fisubrl
xchg
pop
scas
insb
sub
fadds
insl
xor
or
popa
jle
jo
push
xchg
pop
push
sbb
imul
jnp
dec
sbb
xor
pop
jb
mov
add
adc
ljmp
inc
mov
aam
data16
imul
xor
and
test
outsl
call
push
icebp
sub
jge
xor
sbb
xchg
in
lds
ret
les
lea
push
pop
divb
std
clc
test
and
jg
ljmp
lret
int
cmp
sbb
sub
lds
test
in
ret
inc
and
pushf
loop
lds
shll
repz
jnp
in
sbb
xchg
sti
movsb
jne
cmpb
pop
cwtl
xor
lea
xchg
jp
test
sub
lret
and
add
call
cmpsl
stos
aas
je
dec
jae
scas
pop
test
mov
popl
bound
push
pop
arpl
mov
lcall
xor
dec
or
add
aaa
sbb
sbb
and
push
add
out
mov
cltd
jno
mov
mov
daa
cmc
dec
sbb
xor
xchg
jl
insb
jp
and
xor
jns
pop
or
shll
cmp
jg
fwait
iret
outsl
mov
fsubrp
ja
xor
scas
xchg
mov
or
fdecstp
je
sbb
or
icebp
dec
pop
ljmp
arpl
sahf
mov
insl
cwtl
inc
mov
pop
or
pop
inc
jno
and
sahf
xchg
loope
stc
mov
mov
jb
insl
inc
jmp
xchg
jno
pop
lcall
mov
mov
lret
lea
cmp
shr
lcall
das
pop
ja
iret
add
nop
loopne
push
mov
push
jne
fcomip
idivb
mov
lods
xorb
mov
jle
popa
sbb
insl
shrb
idivb
push
dec
cmp
push
pop
or
cli
add
dec
inc
jg
xchg
pop
sahf
std
sbb
hlt
mov
xor
stc
push
scas
add
dec
ficoml
pop
hlt
insb
sti
stos
sbb
testl
sbb
mov
xchg
push
mov
cmp
cmp
sarb
mov
scas
push
pop
mov
lret
pop
int3
fs
scas
mov
xchg
arpl
jmp
and
mov
ja
inc
inc
loop
push
cld
lods
mov
sti
mov
fstps
js
fnstenv
sub
bound
cmp
int
lret
lods
pop
or
lcall
xor
jbe
rol
das
lret
aaa
ficoml
rcrl
pop
imul
int3
mov
dec
pop
xor
mov
inc
jmp
pop
fsubl
das
cmp
push
fwait
repnz
js
loop
push
push
push
mov
cli
fnstcw
fucomp
adc
ljmp
pop
xchg
mov
mov
lret
rolb
or
mov
fmull
out
rclb
mov
sub
inc
dec
jb
mov
cmpsb
cmp
jge
dec
repnz
cmp
out
out
sub
fs
rorb
adc
fdivs
inc
shl
or
push
outsl
pop
gs
xchg
add
fdivrs
add
inc
out
adc
cmp
push
push
or
mov
or
rcll
icebp
jae
pop
popa
push
outsb
fbld
adc
pop
into
lods
insl
xchg
iret
ja
pop
jns
push
add
cmp
cli
adc
andb
push
xchg
mov
xchg
xor
sub
pushf
jb
icebp
sub
push
adc
daa
loop
lret
mov
aad
incl
insb
fiadds
enter
sbb
es
fnstenv
ret
mov
dec
mov
and
outsl
add
adc
xchg
cmp
mov
cmp
into
addb
or
xlat
or
gs
xchg
jo
std
inc
aad
hlt
push
mov
test
and
lock
aam
sub
and
jp
scas
xchg
jmp
push
testl
xchg
xchg
lods
mov
out
dec
mov
cmpsl
push
insl
adc
orl
xchg
mov
imul
lock
cmpsb
lret
gs
in
cmp
imul
mov
mov
mov
adc
mov
js
pop
and
lea
fdivl
mov
xchg
add
lods
sbb
jp
push
and
mov
out
mov
push
push
testb
push
cmp
lods
popf
in
or
jne
dec
mov
dec
sbb
sub
adcl
subl
jbe
xchg
push
je
lock
lods
add
scas
out
lock
jo
mov
sub
sub
icebp
repnz
imul
adc
jo
and
aam
cmp
out
cmpsl
scas
fcoml
jne
testl
push
fcomps
dec
xchg
add
pop
mov
push
addb
cmp
mov
jg
mov
out
arpl
or
and
lahf
mov
ss
and
jns
aad
pushf
mov
imul
ljmp
cmp
mov
adc
imul
ss
mov
lahf
aam
into
sbb
mov
cmp
mov
sub
jle
dec
loopne
or
sbb
mov
scas
sub
subb
mov
push
sbb
sbb
mov
jge
iret
xchg
sub
inc
fs
imul
lret
call
scas
jae
movsb
popa
ljmp
loopne
loope
icebp
repnz
xor
data16
fidivs
jmp
mov
dec
xchg
adc
dec
or
jmp
xchg
cltd
iret
dec
add
frstor
cmp
jbe
sbb
mov
mov
push
lcall
mull
lods
test
lods
jle
popa
add
fldcw
cltd
aad
or
aas
gs
in
xor
stc
mov
pop
aam
or
je
divl
jne
dec
adcb
mov
jae
je
push
dec
xor
je
xor
push
jecxz
mov
daa
fcompl
inc
popf
clc
dec
popf
movhps
mov
lds
cmp
pop
inc
add
xchg
jg,pn
out
rcr
mov
adc
pop
sbb
and
xchg
pop
dec
in
pop
mov
and
dec
lahf
loop
mov
jl
int
mov
pop
lcall
xchg
popf
mov
push
testb
stos
rolb
shlb
add
mov
adc
ja
mov
cmp
rcr
mov
outsb
dec
data16
sub
icebp
mov
dec
push
aaa
pop
xor
shrl
pop
xchg
pop
insl
sbb
pop
sub
push
xor
inc
push
or
lock
inc
repz
in
in
mov
fcmovb
fldcw
outsb
data16
out
test
ljmp
jnp
jbe
out
xor
outsb
int3
test
pop
xchg
je
jmp
imul
sti
aam
lret
mov
cmc
adc
je
vpmaxub
mov
mov
mov
gs
mov
call
icebp
fwait
mov
imul
xor
sub
jecxz
fs
pop
mov
fldt
stc
adc
jmp
pop
test
cwtl
sti
xchg
xor
mov
mov
adc
in
pushf
insb
out
mov
mov
loope
cmp
shlw
jp
jne
movsl
jge
jge
movl
mov
lcall
movsb
inc
dec
mov
push
js
fisubrl
add
fst
insb
add
test
rolb
in
iret
xor
scas
rorl
cmp
adc
jecxz
cmpsb
jns
cmpsl
je
cld
sti
xor
cmpsb
sub
cmc
ds
daa
jmp
or
jnp
jg
dec
out
stos
std
fucom
adc
popf
sahf
add
test
sbb
data16
jg
ds
push
scas
pop
and
insb
pop
cwtl
iret
call
xor
mov
sub
lahf
pop
cmp
clc
out
rol
ss
xor
adc
cmp
in
data16
movb
dec
lret
ss
ret
aam
mov
out
mov
icebp
movsb
ja
ret
bound
jne
outsb
mov
pop
aad
mov
or
sbb
mov
inc
or
push
or
negb
mov
push
mov
push
xor
sbb
in
jecxz
adc
push
popf
leave
or
jecxz
push
ljmp
sbb
or
inc
mov
outsw
fsubs
and
cmp
xchg
fs
loop
sub
push
rol
or
adc
ja
pop
inc
and
leave
xchg
lcall
mov
dec
pop
stos
jmp
ja
and
mov
lds
stc
in
jg
push
int
sbb
mov
clc
pop
fimull
ja
imul
aaa
jp
xchg
shll
mov
les
push
jmp
ret
imul
orb
inc
cmp
mul
iret
fildll
icebp
cmc
and
rcl
mov
aaa
mov
jp
popa
add
cmpl
jns
mov
loope
addl
scas
sarb
loope
adc
ret
xchg
and
pop
in
aaa
mov
xor
adc
icebp
sbb
ss
test
jl
jecxz
or
xchg
ret
lret
pusha
js
adc
or
fists
shrl
inc
pop
stc
scas
in
push
cld
and
xchg
and
jbe
scas
test
sub
xchg
xor
add
es
fadds
psadbw
aaa
push
cli
adc
pusha
nop
push
fs
adc
stos
ret
xchg
ret
dec
loopne
out
inc
dec
xchg
ss
sahf
lea
cs
push
mov
leave
mov
jae
pop
mov
xchg
loope
and
jae
loope
and
not
mov
fisubs
mov
stos
movsb
push
dec
mov
aas
movsl
cmp
push
lds
or
push
pusha
outsb
fisttps
inc
aad
int
in
mov
sti
push
addr16
pop
ds
push
iret
dec
inc
in
mov
stos
add
push
stos
mov
dec
sahf
ss
mov
les
in
adc
lcall
ret
push
xor
xchg
jle
jae
sbb
add
cmpsb
cmpsb
popa
in
cli
sub
out
xor
lods
fcom
mov
lret
popf
movsb
cmp
push
out
cmp
xchg
nop
mov
jno
mov
fsubs
or
pop
pushf
xchg
sbb
in
jl
sub
or
shll
xor
std
lods
jo
out
xor
hlt
sbb
int3
jg
add
cmp
cmp
mov
mov
sbb
cmpb
movsb
adcl
out
pop
test
ja
sbb
push
mov
ljmp
ss
cmc
insb
shll
dec
pop
dec
mov
cmp
ss
cmp
sbb
outsb
cmp
aas
cs
sbb
ja
ljmp
fdivr
cmp
in
jae
add
xor
ret
jns
fwait
mov
pop
sbb
dec
mov
and
cmpsb
mov
cmp
mov
inc
imul
inc
insb
cmp
jbe
jae
mov
inc
mov
inc
scas
push
fdivrs
fnstenv
xchg
mov
pop
mov
add
inc
pop
rorl
frstor
icebp
loop
xchg
ss
and
test
or
xor
mov
std
test
out
xlat
inc
sub
mov
nop
push
xchg
pushf
mov
repnz
roll
inc
roll
push
xor
into
cmp
push
mull
xchg
rcrb
lods
jmp
int
fisttpl
daa
push
scas
adc
cmp
sbb
iret
lods
add
pop
dec
sbb
mov
outsl
pop
xor
sub
imul
sub
lahf
mov
xor
pop
or
add
xchg
adc
movsb
data16
or
and
outsb
aad
mov
call
mov
les
fisttps
std
mov
imul
in
jb
out
add
inc
pop
fmul
cmpsb
pop
aas
mov
mov
pop
mov
push
or
inc
xor
dec
mov
loope
jecxz
ljmp
sub
cld
clc
pop
sub
jle
pop
sahf
pop
or
int3
push
and
or
in
lea
in
add
push
fistpll
add
scas
lock
mov
push
mov
enter
xchg
leave
es
cmpsl
dec
dec
jbe
sahf
int3
cmpsb
mov
stos
scas
out
ss
mov
in
les
mov
call
loop
sbb
aas
pop
int
sbb
adc
sarb
aas
push
lods
xchg
xchg
out
gs
movsl
into
jmp
mov
inc
sar
cld
cmp
lods
das
cmp
mov
cs
xor
add
cmp
jle
jecxz
outsb
mov
in
cmp
mov
lods
push
mov
pushf
or
cmp
imul
mov
or
mov
loope
xor
xor
dec
or
fstps
mov
fcos
mov
sbb
fdivl
xrelease
mov
push
xor
mov
mov
push
rolb
mov
adc
inc
dec
push
fcompl
stos
ds
dec
lret
aas
fadd
push
mov
adcb
mov
iret
test
inc
fstl
aad
dec
xor
sbb
mov
xchg
sbbb
movsl
and
dec
pusha
jae
jge
call
add
lods
push
insb
cltd
push
cmp
ja
dec
and
in
mov
xchg
cmp
inc
adc
cmpsl
mov
dec
jg
pop
scas
out
mov
mov
out
push
add
pop
dec
dec
mov
mov
cmp
mov
sbb
push
inc
push
and
jecxz
xchg
pop
loop
stos
fiadds
jae
in
sti
jnp
mov
cmp
jmp
dec
fmull
lea
xor
aaa
divl
daa
inc
pop
adc
lds
fldenv
test
dec
jl
int3
ds
sbb
lods
lret
jb
jg
mov
test
ja
stc
lret
lock
xchg
mov
cmc
xchg
addr16
pop
les
pop
add
rcrb
imull
pushf
sub
mov
xchg
xchg
lahf
fildll
cmp
pop
sub
sbb
fstl
add
xchg
arpl
mov
pop
shl
sbb
call
cmp
push
mov
jno
inc
outsb
sub
add
lret
stos
jecxz
insl
xor
popf
push
sbb
mov
iret
fnstenv
cltd
push
incl
negl
scas
push
pop
jo
mov
hlt
jl
push
lret
fimuls
sbb
cltd
xor
sbb
jne
push
incl
mov
outsb
mov
mov
push
jne
imul
or
mov
loop
fnstsw
pop
test
xchg
into
mov
ds
push
jo
cmp
pop
jle
sub
mov
fmul
cmpsl
push
dec
push
out
pop
mov
scas
xchg
dec
pop
arpl
jns
push
xchg
xchg
mov
pop
lcall
in
dec
fwait
mov
add
je
std
shrl
bound
add
xor
shll
pop
pop
test
xchg
fistpll
cmp
push
mov
mov
dec
xlat
sbb
gs
pusha
xchg
pop
outsb
je
ja
arpl
xlat
lret
ret
call
popw
fstl
push
test
fidivl
jl
daa
movl
int3
jae
adc
and
leave
scas
faddp
xor
fldl
pop
jmp
mov
mov
std
mov
enter
jmp
jo
add
daa
sub
fdivrs
jnp
cli
dec
or
jne
jne
popf
je
jo
xchg
fdivrl
add
push
das
fld1
or
in
daa
cltd
aaa
or
and
movsb
add
mov
lret
sbb
xor
jle
xchg
ds
inc
dec
div
xor
jbe
pop
push
jae
inc
gs
pop
and
cli
in
pushf
cwtl
adcl
cmp
mov
xor
dec
jo
jecxz
les
add
xchg
insb
test
xchg
iret
scas
pop
add
pop
mov
cmc
jge
inc
idivl
aaa
hlt
sub
movsb
test
and
mov
jbe
jg
sbb
stos
cmp
push
pop
pop
lcall
cmp
xor
es
bound
sbbl
mov
into
sahf
fmulp
pop
shr
push
adc
and
dec
outsb
test
call
pusha
scas
mov
mov
adc
push
or
mull
dec
sti
loopne
cltd
out
pusha
andb
cmp
jge
ret
xchg
out
pop
int3
mov
adcl
ret
push
jno
push
into
sub
js
negl
sub
push
bound
fnsave
lahf
mov
dec
push
daa
mov
jno
lods
xorl
push
pop
outsl
push
fildll
mov
fcmovne
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
mov
stc
fcmovne
lret
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
mov
stc
fcmovne
dec
fnstcw
sub
cmp
or
sbb
imul
dec
pop
mov
mov
stc
fcmovne
lret
sbb
sub
xchg
mov
or
loope
xchg
mov
cmpsb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
dec
cld
jp
push
dec
jmp
ret
sub
fimull
cli
dec
ljmp
sub
lret
pop
int3
dec
int3
jp
push
sbb
push
fimull
cli
scas
ljmp
sub
lds
dec
in
hlt
push
sbb
sub
xchg
adc
inc
out
dec
filds
lods
pop
int3
ds
addb
cmp
cmpsl
mov
mov
cmpb
xor
arpl
push
inc
or
imul
pop
loop
cmc
dec
ss
cli
popa
jmp
pop
pop
add
mov
int3
pushf
mov
cs
rorb
subl
call
mov
or
fmull
jnp
jle
sbb
jp
jmp
xor
jl
lds
movsl
lods
cwtl
xchg
int3
sbb
lds
imul
or
cli
cmp
int3
mov
jnp
pop
and
pop
or
scas
mov
insl
ljmp
sub
sbb
int3
dec
cld
jp
push
sbb
sub
push
lret
jne
add
adc
cmp
xor
cltd
cltd
cmp
sub
jne
dec
mov
mov
mov
jo
push
iret
fcompl
int3
add
jg
and
push
jmp
cmpsb
cmp
in
iret
sub
mov
ds
push
in
push
in
mov
mov
fimull
cli
insb
ljmp
sub
fcompl
dec
cld
jp
push
sbb
pop
fimull
cli
insb
ljmp
sub
fcompl
pop
movsl
mov
add
push
jb
aas
push
andb
fdivs
dec
addl
mov
je
aas
gs
mov
repz
xor
ss
sub
out
adc
sub
pop
or
fmuls
mov
pop
xchg
imul
in
cmpsb
sbb
test
sahf
adcl
mov
cmp
or
out
mov
lcall
cmp
mov
inc
and
inc
shll
lcall
ret
adc
mov
mov
or
notb
mov
adc
neg
psraw
out
jl
aas
xor
dec
subb
fdiv
pop
es
outsb
out
push
add
add
adc
in
mov
cmp
adc
xchg
adc
adc
rcpps
aam
shrl
dec
jae
sahf
dec
test
rcrb
and
mov
xchg
xchg
mov
add
pop
mov
mov
out
inc
arpl
xor
add
mov
fsincos
in
fldl
shr
lret
push
ljmp
lahf
pop
arpl
cmp
add
push
or
push
sbb
or
bound
lahf
out
push
push
pop
int3
lods
fistpll
clc
pop
adc
lods
sbb
pushf
iret
out
scas
pop
pop
fsub
fwait
jb
xor
fs
lods
fmull
out
inc
cwtl
iret
shlb
mov
enter
test
fcoms
or
icebp
dec
cld
hlt
mull
fstpl
lods
fdiv
xchg
scas
arpl
popf
loope
pop
stos
push
jne
dec
push
ss
test
rcr
imul
int3
dec
cld
xor
ss
cmp
cwtl
mov
pop
cmpsl
sub
stos
jnp
xor
sbb
mov
and
cmpsl
aaa
shll
sbb
push
fiaddl
xor
xchg
repnz
data16
mov
and
mov
mov
ret
bound
orl
cmp
dec
aaa
add
mov
inc
and
sub
pop
mov
push
jnp
insb
push
pop
add
dec
in
jns
add
popf
xchg
push
adc
jo
insb
sub
mov
mov
dec
fistl
inc
xor
push
stos
pop
sub
sub
jg
pop
pop
inc
and
lret
push
adc
mov
fcmovnb
sub
shrb
out
lds
xlat
test
lret
mov
int3
sbbb
stos
lahf
xor
repnz
test
in
movsb
leave
mov
push
lret
and
test
pop
addr16
adc
sti
std
mov
push
mov
sti
cwtl
mov
jae
adc
stos
test
fisttps
push
cmp
ds
mov
pusha
sahf
or
jb
icebp
cmp
outsb
std
adc
fdivrs
lret
inc
mov
or
loop
addr16
mov
xor
mov
lea
push
or
xchg
sti
clc
mov
mov
test
ficoml
dec
fwait
pop
pop
imull
xorb
ds
in
xchg
adc
mov
mov
lret
call
xchg
ss
int3
fdivs
call
cmp
inc
mov
jo
loop
insb
js
push
and
imul
add
xor
and
lods
xor
xor
ret
fiadds
cwtl
aam
es
sub
lods
sbb
leave
adc
mov
ficomps
daa
or
das
push
gs
lcall
pop
leave
sbb
setns
push
sub
jle
xchg
mov
dec
adc
loopne
sbb
cld
jns
cmpsl
pop
in
jge
sti
fstpl
lahf
rep
fnsave
popf
add
cli
movb
pusha
adc
imul
std
mov
inc
std
pop
or
es
shrb
pop
push
mov
movl
dec
stos
pusha
or
mov
sub
adc
iret
test
inc
imul
loopne
cmpsl
andb
stos
das
sahf
fsubrl
rcll
mov
xor
pusha
jb
mov
cld
or
push
sub
push
xlat
inc
and
mov
je
int
jp
sub
or
sti
mov
or
inc
shrb
push
scas
loop
outsl
mov
push
in
push
push
hlt
cltd
loope
fldt
gs
adc
jb
or
push
clc
iret
mov
mov
int
pop
sub
sbb
sub
inc
jae
jp
inc
sub
inc
mov
jg
adc
dec
jmp
mov
lcall
lea
loop
push
cmc
sbb
repnz
out
push
repnz
fucomi
sbb
out
inc
sub
jnp
lock
cld
xor
push
adc
xchg
jge
cld
cli
in
jno
stc
and
xchg
mov
js
cli
dec
mov
das
cmpsb
shrl
push
adc
sbb
std
insb
add
imul
loope
js
testl
scas
faddl
xchg
fstpl
call
push
sub
aaa
add
inc
sub
adc
sbb
push
dec
jge
mov
imul
lea
inc
ljmp
add
in
dec
lods
lods
ss
and
xlat
ficompl
shll
fnstcw
in
lret
sbb
scas
outsb
push
enter
adcb
lods
cli
xchg
add
clc
movsl
pop
cmp
mov
sbb
or
std
or
mov
das
mov
mov
and
mov
mov
jnp
add
xchg
inc
pop
mov
cwtl
rcrb
sar
mov
cmp
mov
inc
scas
rclb
sub
cmp
xchg
add
std
and
fs
icebp
jmp
pop
pop
test
enter
add
aad
mov
jmp
dec
push
mov
fisttpl
aaa
test
sbb
xor
cs
addr16
mov
pop
jbe
out
ljmp
imul
movsb
in
push
pop
sbb
adc
push
xchg
xor
dec
cmpb
or
inc
sub
in
jecxz
dec
test
inc
add
and
add
cs
and
jge
movsb
pop
inc
stos
scas
mov
cltd
cmp
mov
or
add
lea
loope,pt
stc
adc
mov
stos
ja
andb
adcl
add
iret
mov
mov
pop
cmp
outsb
pushl
shr
xor
hlt
xor
fiaddl
push
push
cmp
add
stos
mov
cmpsl
cmp
fldenv
mov
jns
xchg
pop
movsb
mov
inc
lods
icebp
push
test
stos
sahf
cmp
mov
mov
adc
mov
mov
add
aam
mov
cmp
or
jo
mov
icebp
inc
xor
fnstenv
movsb
nop
pop
or
test
scas
add
push
iret
xchg
sub
xor
and
and
imul
sbb
dec
jmp
aas
pop
lock
or
aam
aas
aam
movsb
sub
cltd
add
jo
inc
adc
in
jg
test
stos
aas
lods
cmp
movlhps
xchg
cmpsl
mov
pop
cmp
out
pop
adc
loopne
jmp
mov
test
mov
js
push
inc
out
sti
inc
and
push
movsb
scas
dec
loop
add
pop
jo
call
sbb
sub
in
adc
jp
jl
data16
es
cmp
cmp
shl
lods
sbb
pushf
sbb
mov
mov
hlt
aam
jmp
mov
aas
cvtdq2ps
sbb
push
or
stos
sub
into
int
or
movsb
cmpsb
adc
shl
iret
push
inc
aas
cmp
cmc
test
add
adcl
mov
add
add
mov
inc
repz
aad
xchg
mov
xor
aam
fsts
aaa
add
xor
xchg
cwtl
in
pop
inc
repnz
aas
leave
pop
dec
daa
scas
movl
lcall
in
enter
inc
testl
push
mov
iret
repz
xor
lock
sbb
movsb
or
outsb
negb
mov
sub
pop
mov
es
push
sbb
in
inc
insl
mov
pop
or
pop
adcb
mov
sub
rolb
in
add
cmpl
xlat
xor
in
call
jp
pushf
adc
cmp
lds
inc
test
outsl
ret
pop
mov
and
dec
mov
dec
push
outsb
and
jns
insb
jl
cmp
mov
cmp
ret
lods
or
das
mov
mov
inc
cli
test
jmp
sub
mov
inc
cltd
mov
adc
addl
movsb
sbb
xchg
adcl
or
pop
or
pop
jmp
stos
cmp
mov
inc
pop
or
mov
imul
test
stc
rclb
js
std
lcall
pop
test
mov
testb
sub
jecxz
in
in
loope
inc
inc
sub
xchg
mov
imul
scas
push
fisttpl
call
loopne
dec
loope
movsl
mov
inc
mov
sbb
xor
push
cmp
jne
sbb
mov
aam
dec
std
mov
jb
or
fdivrl
or
aas
mov
clc
xor
shl
add
pop
sub
jo
mov
jecxz
stos
or
orl
dec
inc
inc
xlat
in
push
pop
cmc
imul
mov
icebp
adc
mov
push
je
lret
sbb
pop
pop
cmpsb
xlat
pop
pop
test
mov
xchg
dec
jo
lds
inc
pop
jno
inc
pop
mov
push
aaa
cli
in
popa
add
mov
ds
dec
cmp
ret
and
into
sub
lcall
jb
sbb
lret
daa
mov
aad
test
in
lock
xchg
push
inc
xchg
ljmp
xchg
ret
mov
std
sbbb
jmp
rol
push
xor
adc
or
out
cmp
repz
lret
subl
jno
mov
in
or
xor
pop
je
adc
push
pop
stos
fistpl
ficoml
cmp
jno
dec
xchg
jb
loope
sub
sub
dec
out
pop
ret
lds
push
movsb
cmpsb
scas
push
test
adc
add
scas
negb
outsl
mov
add
jmp
fidivrs
ss
or
dec
sbb
dec
cli
imul
or
in
mov
int3
lods
xor
ja
or
rorb
mov
inc
jns
lock
push
ret
mov
in
out
or
push
jge
xchg
dec
je
sbb
cwtl
sarb
or
pop
into
add
mov
push
cmpsb
lea
stos
xor
es
enter
idivl
xchg
stc
leave
jle
scas
clc
loop
fiaddl
aad
decb
clc
cmp
stos
repz
in
in
sarl
rcl
inc
and
orl
imulb
loop
mov
loop
addr16
xchg
jp
imul
cld
insb
das
jl
imul
stos
adc
pop
lds
popf
ds
xor
cwtl
fcmovnbe
cmpsl
mov
test
push
and
jecxz
xchg
pop
cmpsb
mov
int3
xor
ss
mov
cltd
add
pop
call
dec
icebp
add
add
faddp
add
pop
mov
fucom
add
adc
ss
dec
adc
mov
dec
data16
hlt
jae
imul
xchg
rclb
push
dec
or
aad
and
call
mov
mov
sub
aam
dec
sbb
pop
mov
inc
or
push
pusha
ljmp
inc
test
cltd
cltd
adc
adc
sub
mov
repnz
lret
pop
lret
test
push
iret
inc
push
insb
push
clc
or
inc
jns
ret
imul
dec
aaa
push
inc
movsb
and
or
pop
dec
or
fldl
hlt
push
xchg
in
mov
cmpsl
push
movb
pop
push
das
fcmove
daa
out
loop
movsb
cmp
adc
push
mov
sbb
dec
in
mov
repz
in
mov
mov
and
outsl
mov
roll
and
stos
daa
mov
adc
lret
xchg
or
push
mov
in
data16
pushf
adc
add
xchg
outsl
out
mov
mov
xchg
jmp
incl
shll
cmpsb
mov
add
mov
lret
xlat
adc
subb
inc
fistpll
push
push
cmp
push
mov
xchg
dec
push
pop
int3
sub
pop
push
add
fs
pop
testl
sahf
sahf
fisubs
xor
movsl
data16
inc
shll
lea
pusha
mov
push
cmp
push
xor
pushf
jl
xchg
pop
xchg
clc
cltd
movsl
dec
ds
fs
mov
insl
jmp
dec
add
aad
stc
add
das
push
fmull
push
xor
xchg
mov
pop
imul
mov
lret
leave
pop
mov
pop
popf
lret
adc
or
cmpsl
scas
sbb
dec
leave
mov
outsl
andl
pop
std
and
pop
ret
ds
inc
mov
xchg
rcrl
std
mov
pushf
mov
je
jnp
fstl
and
sub
bound
cltd
fisttpl
fisubl
std
pop
in
sti
inc
lret
loope
push
inc
mov
std
data16
push
loopne
inc
fstps
in
sbb
loope
pcmpeqw
dec
mov
call
lods
mov
jnp
mov
sub
cmp
mov
in
jne
in
adc
je
dec
dec
xchg
sub
sahf
sub
mov
into
mov
xor
mov
push
lcall
mov
ret
pop
leave
mov
aas
daa
loope
outsb
cmp
in
movsb
addl
jae
xor
xchg
xor
addr16
mov
cmp
mov
icebp
sub
jmp
mov
mov
icebp
pop
jne
mov
jecxz
adc
or
lock
sbb
fists
in
push
leave
cwtl
cli
xchg
mov
mov
pop
jb
jno
call
mov
out
dec
mov
jb
add
not
pop
out
dec
push
movsb
dec
mov
notb
shlb
cli
or
cli
dec
daa
dec
ja
cmpsb
and
rol
ret
sahf
nop
mov
jbe
repz
jmp
cli
pusha
jo
inc
and
mov
jmp
iret
pushf
xchg
jecxz
push
shlb
cmp
cmpsb
cmpsb
push
cmc
mov
cmc
pusha
push
push
das
call
nop
nop
xchg
xlat
mov
dec
add
mov
add
ljmp
notb
mov
xor
dec
mov
sbb
fidivl
fmull
push
mov
shl
jnp
mov
mov
pushf
jmp
pop
pop
jns
cmp
mov
lcall
mov
negl
or
out
xchg
push
outsb
inc
mov
in
rorl
pop
xchg
push
sub
jbe
mov
dec
cmp
mov
mov
aam
lret
mov
pop
roll
inc
inc
movsb
and
fs
fcompl
jg
and
mov
sarl
dec
js
stc
sbb
mov
lcall
mov
cmp
cs
jo
xchg
push
fcoml
pop
out
cltd
aas
mov
int3
mov
outsb
xor
xchg
jnp
mov
sbb
insb
data16
add
mov
xchg
test
mov
add
leave
or
insl
adc
out
push
cmp
jg
insl
daa
or
pop
mov
mov
mov
and
mov
sbb
enter
das
std
cmp
addr16
inc
or
xchg
test
enter
pop
notl
lods
testb
mov
shr
shll
enter
cmpsl
loop
ret
push
aas
add
sarb
rol
stos
add
out
dec
mov
stos
in
mov
xor
xchg
hlt
mov
fmuls
push
loopne
subb
and
mov
ljmp
movsl
clc
call
fwait
addl
sub
ret
cmc
js
fistps
sbb
cli
sbb
mov
enter
lcall
repz
cs
push
popa
leave
jle
push
xor
test
xlat
sub
stc
mov
inc
movsb
xchg
aas
xor
stos
sbb
cmp
shl
jnp
mov
pop
scas
fldcw
mov
popl
ss
xor
scas
dec
jmp
fcmove
lods
in
jmp
jno
shr
pop
or
sub
outsl
ds
mov
inc
jno
arpl
lods
xor
leave
out
adc
vcvtpd2dqx
stc
mov
in
jns
adc
push
sbb
mov
dec
mov
push
or
repnz
mov
lahf
or
mov
jnp
sub
push
mov
rolb
mov
xchg
movsl
rolb
jae
adc
push
mov
clc
mov
cwtl
out
adc
lock
jno
ds
push
push
and
js
add
xchg
jge
cmp
adc
cltd
pushf
mov
aam
xchg
ret
les
pop
fnstsw
and
rolb
mov
je
xchg
scas
jns
add
ljmp
adcl
push
dec
jno
imull
rorl
or
test
push
test
mov
jb
add
fdivl
aas
mov
fcmovnbe
popa
roll
dec
sbb
and
inc
stos
and
out
lods
dec
push
or
stc
jno
movsb
insb
sub
fucomi
sbb
sbb
imul
cli
enter
xor
xchg
push
test
loopne
mov
cmp
sbb
lds
add
flds
cwtl
mov
bound
outsl
fiadds
out
cmp
test
in
js
call
sbb
test
and
imul
lahf
addr16
insl
jmp
pop
adc
xorl
iret
outsb
mov
dec
xchg
sbb
or
pop
xchg
sub
out
fstps
loope
or
mov
into
mov
push
clc
outsl
lcall
or
cltd
xor
mov
ret
and
scas
or
loop
adc
ss
or
mov
outsl
out
dec
movsb
fadd
xchg
mull
fs
jno
xor
sti
lret
cld
cmpsb
mov
inc
sub
sbb
pop
mov
icebp
mov
or
jae
pop
mov
fld
cli
sahf
jnp
filds
popa
movsl
push
or
add
push
pop
add
imul
nop
lahf
or
and
jmp
int3
mov
ret
jns
insb
xor
jle
mov
mov
out
dec
stc
int3
jmp
int
icebp
cmpsb
add
in
push
shll
sti
lret
andl
jno
and
bound
xchg
mov
lahf
repnz
fwait
jbe
shll
push
inc
das
mulb
enter
les
xor
jg
lds
sub
lcall
add
push
mov
jg
xchg
jns
mov
push
pop
jmp
push
repz
pusha
jle
mov
ds
cltd
and
arpl
jmp
mov
shrl
and
add
test
add
mov
cs
pop
aaa
pop
cmp
mov
jecxz
xchg
push
dec
jecxz
mov
mov
cli
mov
movntq
jae
mov
inc
sbbl
ret
xchg
pop
mov
out
mov
mov
inc
mov
jmp
xlat
pop
jl
out
inc
gs
or
or
ret
lods
xor
push
sbb
std
mov
mov
aaa
jg
sbb
xor
pop
jb
ret
out
jmp
out
dec
xchg
outsl
ficoms
mov
in
std
sbb
sbb
jg
in
fimuls
xor
pusha
add
pop
or
add
jns
movnti
dec
xchg
ds
push
int
rcr
test
push
inc
or
rcl
imul
inc
repnz
adc
xlat
fnstcw
pop
loopne
mov
push
das
mov
cmpsb
cmpsb
pushf
bound
lret
imul
mov
fldenv
bound
rol
movsb
and
loope
pop
loop
in
fnstenv
iret
mov
push
push
outsl
xchg
ret
data16
add
push
outsb
popa
cmpsb
mov
scas
dec
fnsave
push
or
in
xor
pop
in
or
cmp
or
jns
fsub
sbb
lods
cs
sti
das
add
cwtl
push
ret
ret
sti
outsb
inc
repz
xor
fadds
sub
pop
xchg
sahf
in
gs
mov
out
stos
push
stos
dec
xchg
int
inc
cmp
inc
mov
cs
add
push
mov
mov
mov
mov
lcall
dec
fidivrl
push
sbb
pop
fimull
cli
insb
ljmp
sub
fcompl
dec
cld
jp
push
sbb
pop
fimull
cli
insb
ljmp
sub
fcompl
dec
cld
jp
imul
sub
lret
js
insb
ljmp
sbb
dec
lret
outsb
pushf
sbb
mov
cli
insb
popf
imul
jne
inc
rcll
pop
dec
call
adc
fmull
fstpt
push
fwait
cmp
or
dec
call
sbb
sub
fstpt
dec
pop
jmp
fwait
push
mov
mov
push
call
sbb
nop
lds
rep
call
or
clc
dec
xchg
lods
sbb
mov
rclb
jnp
shlb
lcall
ss
jmp
shlb
stc
mov
push
xor
sub
xor
cmp
test
ret
inc
jmp
nop
inc
lds
fcomi
mov
lds
sbb
sub
fsubrs
push
cmp
or
mov
inc
ja
xchg
cmp
int
gs
xlat
mov
in
aas
add
mov
mov
nop
sub
jmp
bound
imul
movsb
cmp
cmp
mov
jecxz
lret
fsubs
add
cmpsl
scas
push
cmpsl
cmp
mov
pop
imul
mov
sub
lret
scas
sti
dec
jmp
fwait
adc
sarb
stos
and
push
fwait
push
out
int3
inc
pop
icebp
push
lcall
and
push
loop
lcall
imul
push
in
pop
xlat
addr16
cmp
sub
mov
cmp
fbld
stos
arpl
scas
das
scas
adc
or
fstpt
push
fwait
cmp
or
dec
call
sbb
sub
sti
pop
jmp
fwait
cmp
or
out
aas
sarb
shll
mov
mov
mov
cmp
xor
lret
repz
mov
sub
or
mov
fnstsw
pop
add
sahf
out
pop
sbbb
data16
dec
sbb
aam
scas
in
lcall
jns
enter
xchg
jl
scas
fwait
mov
sbb
enter
shl
cwtl
sub
push
xchg
std
fstps
xor
shlb
movsl
lret
jbe
add
xchg
orl
lods
add
das
xchg
adc
lock
mov
sub
pushf
jae
mov
hlt
imul
stc
and
push
dec
inc
pop
outsb
sbb
scas
inc
inc
and
or
inc
mov
cmp
cmpsb
in
aaa
xor
popa
sub
ss
movsb
lods
or
test
insb
sbbb
and
clc
push
adc
fimull
test
mov
mov
sub
push
push
mov
stos
sbb
pop
push
jg
and
pop
and
fstl
push
fisttpll
mov
sub
cmp
cld
jg
push
mov
scas
rcrb
xlat
repz
mov
rolb
loop
adc
dec
mov
sub
cmc
ljmp
push
in
sbb
out
incb
lcall
popa
or
adc
loop
out
hlt
inc
sti
mov
pop
sub
add
or
aad
fsts
mov
inc
jmp
inc
jmp
jl
pop
sbb
push
ret
addr16
roll
jge
aad
push
mov
mov
and
ljmp
cmp
out
fbstp
ficomps
xchg
and
cmc
mov
cmp
jp
add
test
sbb
shl
leave
scas
ds
sub
push
cmpsl
lret
arpl
sub
mov
jecxz
xchg
pushf
jecxz
nop
iret
sub
xchg
cmp
inc
xchg
outsb
xchg
cmpsb
dec
push
lret
cmp
hlt
int
mov
lret
subb
jg
es
pusha
xor
rolb
aad
scas
inc
jnp
mov
mov
push
and
call
and
inc
xor
xchg
rorb
and
test
out
adc
loop
lea
mov
lahf
inc
cmp
adc
psllw
ficomps
add
dec
nop
inc
int3
ss
ret
xor
movsl
dec
adc
loope
push
scas
cwtl
outsl
rcrl
shlb
lods
test
out
fstps
ljmp
sahf
dec
mov
neg
daa
or
fs
inc
adc
insl
insl
adc
sbb
and
push
mov
push
test
aaa
test
and
ss
sbb
and
jl
aam
push
pusha
fadd
or
sbb
push
pop
ret
push
data16
mov
push
ljmp
addr16
repz
add
pop
repz
aam
xor
xlat
pop
sbb
pop
pusha
xchg
data16
subb
jmp
movsl
pop
cmpsl
insl
pop
or
test
je
xor
jnp
xor
ret
xchg
jno
and
lods
rorl
loopne
stc
pop
pop
add
sbb
pop
inc
imul
cltd
cmc
test
jb
sbb
ret
mov
repz
dec
gs
mov
in
mov
ret
mov
fnstsw
sbb
outsb
or
inc
jno
and
cmp
fisubrl
mov
pop
mov
mov
xlat
outsb
test
sbb
inc
aad
or
cld
imul
cld
xchg
cmc
cld
jmp
pop
cmp
and
orl
and
repz
scas
push
dec
test
mov
movsl
adcb
mov
scas
inc
fistpll
jl
and
inc
js
mov
aad
hlt
sub
push
jne
cmpsl
aad
xor
inc
into
outsl
out
dec
sbbl
or
stos
pop
in
inc
in
mov
inc
test
lods
jmp
rcl
sahf
pop
mov
pop
loop
pop
pop
mov
int3
test
roll
lret
cwtl
sarl
dec
push
sbb
xor
sub
repnz
and
dec
adc
or
lods
sbb
pop
ret
loope
in
outsb
fsubp
xor
das
jge
in
rol
xchg
sbb
pop
jg
jnp
adc
cmp
cld
fstpl
dec
jnp
test
cmpsb
aaa
cmp
imul
cwtl
daa
jmp
jnp
cld
lret
pushf
out
bound
mov
fcoms
movsl
mov
lods
pop
jecxz
loope
and
mov
aaa
xchg
mov
addr16
xchg
jl
inc
les
leave
mov
push
dec
loope
sbb
mov
fwait
sub
mov
lret
inc
add
not
cmp
shll
fwait
dec
xlat
sbb
outsb
sahf
scas
stos
insb
inc
inc
or
lock
imul
cmp
jg
or
sbb
dec
cmp
or
fwait
inc
mov
inc
mov
ret
push
or
mov
lods
adc
and
sub
mov
std
orl
nop
sbb
lods
xchg
cmp
ret
fnstenv
stos
fdivrs
aad
adc
xchg
repz
repnz
int
out
jnp
push
and
jns
pusha
push
push
dec
inc
mov
jb
mov
push
js
aas
lea
xor
shrl
xor
in
and
pop
jnp
imul
sarb
mov
cmp
mov
fcom
xor
mov
xchg
push
ljmp
or
jo
jnp
ja
adc
mov
shlb
sub
loope
mov
xchg
mov
out
data16
xlat
loope
lds
ret
mov
aaa
mov
sti
cwtl
add
mov
pop
mov
xchg
movsb
mov
push
arpl
icebp
cmc
mov
test
cld
xchg
outsl
or
dec
test
push
data16
inc
fimuls
and
jg
lea
jp
stos
adc
popa
adc
mov
fwait
lods
xchg
movsb
pop
nop
xchg
adc
out
push
add
jnp
inc
repnz
pushf
pop
mov
loopne
fs
xor
jbe
xchg
rcr
add
imull
iret
mov
pop
out
test
nop
scas
mov
into
cs
push
fs
out
jo
loop
mov
push
jne
test
jne
inc
ja
fs
pushf
push
cmp
rorb
xchg
addr16
pushf
aad
sub
sarl
in
mov
mov
add
nop
loopne
xor
mov
mov
enter
in
je
and
pop
push
sub
or
test
add
sarb
lods
mov
mov
xchg
jge
jp
pop
inc
iret
adc
outsb
push
insb
popf
das
xor
and
mov
ficoml
aas
aaa
pop
pop
lods
push
xchg
sub
mov
or
pop
xchg
mov
subl
push
jae
fistpl
sub
nop
sub
push
lods
sbb
shl
cli
push
imul
sbb
int3
mov
out
addr16
cmc
xchg
inc
lea
js
out
sbb
lret
fidivs
xchg
cmpsl
ljmp
aaa
add
addr16
aaa
push
mov
out
xchg
mov
jle
push
les
mov
jo
in
into
sbb
inc
mov
mov
test
faddl
sarb
jmp
pop
jmp
pop
add
mov
repnz
adcb
cmc
aad
push
ds
jle
add
jg
cmp
pushf
xchg
jae
gs
dec
cmp
add
in
dec
dec
and
mov
mov
out
idivl
icebp
xchg
lar
mov
aas
sbb
push
inc
mov
add
cmpsb
outsb
cld
mov
adc
pop
xchg
lcall
xor
in
and
mov
mov
fdivrl
xchg
jmp
pop
sahf
loope
cmpsb
popa
sbb
sbb
pop
imul
jb
push
test
enter
test
repnz
clc
mov
jb
inc
lods
xchg
std
movsb
gs
ja
leave
cmp
fsub
imul
std
je
loop
and
movsb
jmp
sbb
cmp
repz
stos
mov
push
inc
ljmp
pop
pop
scas
out
pusha
adc
insb
out
mov
add
icebp
jb
adc
pop
mul
sbb
sahf
lods
dec
and
sahf
push
xchg
push
es
xor
jnp
push
mov
lock
mov
rol
bound
or
mov
sub
jl
mov
in
dec
loopne
push
inc
cwtl
pop
testb
mov
mov
bound
orl
dec
lods
push
mov
out
mov
dec
lret
std
pop
jne,pt
inc
sahf
jbe
mov
jmp
push
or
cli
shrl
lcall
add
icebp
cmp
mov
orb
shlb
clc
in
outsl
mov
bound
jns
iret
and
mov
sub
dec
add
or
jp
ret
mov
add
rcl
or
pop
into
dec
mov
or
fdivs
cld
gs
int
dec
lret
call
mov
sahf
sub
fldl
xchg
dec
cmp
xchg
lret
adc
stos
push
mov
xchg
out
jnp
pushf
movsb
mov
mov
int3
cmp
jbe
sbb
inc
jb
pushf
lods
clc
mov
mov
icebp
hlt
dec
dec
xorps
xacquire
inc
mov
cmp
lcall
sub
and
or
outsl
ds
pushf
adc
mov
js
outsl
out
mov
aad
les
jmp
sarb
setae
cli
subl
insb
add
call
inc
je
push
lods
cmc
adc
rcr
adc
sub
or
jo
sbb
cmp
dec
divl
es
lock
addl
sbb
roll
enter
test
inc
jo
jge
add
xor
stos
xor
and
gs
orb
enter
lret
fisubs
mov
dec
add
adc
adc
nop
dec
and
roll
xor
lods
icebp
cmp
adc
cltd
sub
push
scas
lret
xchg
mov
jo
push
loop
in
orl
add
mov
cmpsl
pop
push
inc
cmp
push
mov
mov
dec
ja
mov
jb
aaa
imul
clc
xor
or
sub
dec
insl
sub
addl
ss
sbb
lds
in
mov
out
cld
pop
out
fdivl
addl
rcll
inc
mov
out
addr16
jl
iret
xchg
loopne
pusha
inc
icebp
rcrl
xchg
mov
loopne
push
into
into
cmp
arpl
insb
jae
stos
out
fdivl
lock
dec
into
or
pop
add
jnp
ret
into
dec
or
push
sub
cmpsl
jne
mov
cwtl
test
sub
ja
sbb
mov
js
out
repnz
movsl
xchg
test
lock
imul
sti
pop
jecxz
aad
or
loop
xor
xor
loopne
jmp
inc
mov
mov
test
mov
dec
sub
adc
mov
and
icebp
inc
iret
jne
mov
in
dec
and
stos
loope
xchg
fsts
jne
inc
loop
or
stos
mov
arpl
test
aad
cmpsb
xchg
add
xor
jno
xchg
incb
mov
ja
arpl
push
repz
into
addb
push
iret
or
sub
push
ljmp
aad
dec
cli
pop
inc
call
pop
movsl
cld
or
inc
pusha
ret
push
sbb
jbe
inc
scas
int3
shr
aaa
fcoms
sub
insb
imul
add
cmp
icebp
js
cmpsl
das
in
or
inc
add
clc
xor
sub
add
aam
mov
push
jl
jmp
out
mov
fxch
bound
pop
outsb
adc
sarl
lret
xchg
push
jl
sub
and
and
dec
loope
fildll
or
push
mov
enter
cli
cmpsl
rorb
mov
sbbl
sbb
mov
je
and
xor
xchg
adc
iret
inc
adc
push
xchg
cmp
sbb
les
pop
mov
fisttpl
xor
negl
aam
lea
loopne
pop
js
mov
std
mov
ja
ret
push
lahf
loope
sbb
dec
jle
je
push
push
cmp
xor
movsb
dec
push
or
push
fdivrs
and
mov
sbb
jg
pop
dec
adc
lods
or
push
jae
fwait
pop
leave
dec
cmpsl
loopne
aaa
sti
fdivrl
imul
jns
out
or
xchg
int3
pusha
cmp
adc
dec
jmp
fsts
loop
dec
shl
cmp
adc
das
pop
push
loop
mov
pop
aaa
clc
xor
ja
push
mov
inc
push
cli
xchg
jecxz
lds
es
mov
jmp
fists
cs
stos
xor
mov
pop
add
ja
xor
sbb
pop
jb
stos
adc
imull
sbb
mov
insb
dec
in
cmp
xor
popf
pop
or
daa
push
mov
sti
fimuls
cmp
mov
add
pushf
test
adc
inc
daa
jmp
and
scas
jmp
add
enter
aam
mov
or
mov
sbb
inc
repz
aad
cmp
jmp
sbb
loope
jp
in
pop
mov
js
fnstsw
xor
cmp
push
lcall
fldcw
sub
inc
cmp
scas
jle
out
rcl
lret
repnz
push
cli
inc
inc
lahf
mov
cmpsb
push
push
mov
xchg
inc
mov
stos
lcall
test
or
insb
push
xor
mov
or
sbb
rcl
shrl
pop
and
das
xchg
lock
in
adc
jne
es
dec
js
out
outsl
inc
sub
add
mov
call
push
add
lret
int3
bound
std
movsl
sub
xchg
mov
mov
cmp
das
xor
mov
fsubrs
jge
leave
mov
out
and
in
inc
push
ja
fwait
ror
dec
mov
or
and
fdivs
cmp
addl
jo
adc
dec
jp
lret
add
bound
test
fnstsw
js
dec
pop
inc
add
push
add
repz
push
jnp
or
sbbb
and
fidivrs
imul
adc
pop
out
orl
aas
loopne
inc
sti
iret
lds
cmp
push
enter
mov
adc
fcom
mov
jnp
stc
pop
sub
in
call
add
xchg
mov
stc
iret
out
test
mov
clc
cltd
mov
imul
mov
movsb
xchg
repnz
cmp
mov
sahf
loop
les
jbe
cmp
sbb
mov
or
in
fucom
nop
push
vmovsldup
movsl
pop
into
enter
pop
fwait
jnp
es
mov
xchg
mov
shrl
es
loope
test
dec
rcrl
xchg
clc
mov
popa
mov
cwtl
sub
sub
fdivrp
add
push
lret
mov
and
insl
and
jp
push
xchg
lcall
sbb
fldt
stos
mov
sbb
add
add
cs
or
cld
rcll
xchg
xchg
lods
stos
ljmp
iret
test
sub
test
mov
or
pop
sti
stos
inc
adc
xor
cmp
push
adc
ret
inc
mov
adc
je
aaa
or
cmpsl
cs
cld
sub
rclb
jp
imul
jl
scas
jo
out
pushl
xchg
ret
mov
adc
xor
inc
mov
mov
mov
mov
ljmp
push
xlat
or
jge
xchg
pop
fnstenv
aam
sar
dec
fdivr
and
add
call
outsb
xor
or
mov
adc
hlt
movsl
out
add
dec
jns
int
sub
xchg
scas
dec
jecxz
popf
rclb
mov
push
xor
cmp
jne
adc
fwait
xchg
adc
dec
ret
push
adc
cmp
xchg
ret
aad
stos
fsubrl
ja
or
div
lahf
mov
or
cmp
mov
pushf
popf
ja
stc
test
or
mov
lods
repnz
or
jb
popa
mov
mov
gs
in
jno
jno
or
or
jb
inc
add
and
hlt
push
aaa
push
push
and
test
das
or
adc
aas
daa
jle
push
lahf
popf
adc
or
flds
pop
movsl
lret
cmp
jg
or
inc
mov
std
mov
cmp
jecxz
gs
push
negb
fnstcw
scas
stos
in
pop
lds
push
xor
mov
and
push
aad
dec
pop
inc
mov
test
push
pop
das
aaa
mov
pop
scas
pop
popa
mov
nop
mov
loope
test
test
es
repnz
mov
sbb
cwtl
adc
cld
pop
cltd
sarb
es
iret
in
cmp
roll
cmpsl
popf
push
pop
rorl
xchg
mov
test
adc
or
shll
push
dec
faddl
mov
je
push
mov
scas
xchg
or
pop
ja
repnz
lahf
ds
mov
and
push
lahf
add
mov
arpl
lret
and
and
lcall
adc
jnp
loopne
cld
cmp
lock
andl
insb
pop
bound
mov
repnz
scas
rorl
daa
jl
cli
add
iret
jbe
add
adc
inc
aam
mov
addb
jns
mov
inc
mov
rorl
dec
imul
out
rcrl
mov
push
mov
xchg
lods
insl
mov
andl
shll
test
ss
nop
clc
lds
or
cmpsl
xchg
rol
add
aad
lods
ret
xchg
mov
xchg
or
adc
and
repnz
dec
jne
fsubrl
push
pop
mov
dec
mov
repnz
movsb
test
insl
and
jge
int3
pop
dec
fidivrs
add
jbe
int3
inc
xchg
rorl
loope
push
add
and
mov
loopew
aas
bound
out
inc
bound
imul
add
je
push
imul
sbb
imul
push
mov
jecxz
cli
jge
clc
or
lds
jmp
popf
adc
lods
stc
or
jnp
add
mov
cmp
scas
xchg
popa
sbb
sbb
pusha
loopne
mov
imul
mov
cmpsl
adc
mov
pop
idiv
and
sub
mov
call
leave
cmp
xlat
xor
sub
add
repz
sbb
loop
ja
mov
fs
jnp
sub
sub
jp
push
pop
dec
push
movsb
fwait
xor
pop
ret
in
inc
outsl
jne
jne
ficoms
addr16
or
pushf
fdivrs
rolb
adc
insl
stos
cmp
jle
sti
test
stos
add
subb
cmc
pop
stos
mov
jbe
cmpsl
push
loope
repz
std
sbb
push
mov
sub
cli
hlt
sub
and
rol
xlat
lahf
movsl
sub
outsl
js
cs
xor
imul
popa
outsl
add
test
inc
stos
pop
iret
mov
movsl
addb
xchg
mov
pop
aaa
lds
hlt
xchg
ljmp
xor
pop
repz
and
adc
or
jle
jne
icebp
stc
cmp
pusha
and
mov
push
in
mov
sub
jmp
dec
fcomps
popf
mov
jmp
xchg
pop
pop
add
dec
ret
sub
jo
test
push
fiadds
or
aam
lcall
mov
mov
xchg
adc
fcomps
mov
call
ss
in
xchg
mov
negl
nop
in
iret
mov
stc
mov
mov
imul
in
jae
aaa
dec
sbb
sarb
mov
rolb
mov
jg,pt
push
daa
pop
enter
pop
xchg
movsl
push
push
mov
iret
fs
stos
pop
dec
xchg
xchg
lahf
xlat
lahf
js
pop
aaa
add
lods
mov
add
xchg
xchg
nop
lods
pop
or
jo
or
sbb
stos
test
xchg
adc
sbb
mov
xlat
rcrl
call
sbb
sub
sti
pop
jmp
fwait
cmp
or
dec
call
sbb
sub
sti
pop
jmp
fwait
cmp
or
dec
mov
sbb
sub
sti
pop
jmp
fwait
cmp
or
dec
call
sbb
sub
push
pop
jmp
in
mov
xlat
inc
out
idivl
fstl
pop
add
xchg
enter
or
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
add
add
jno
mov
add
mov
cmp
adc
mov
add
add
mov
add
add
cltd
add
add
push
add
add
add
fiadds
dec
add
add
add
add
add
push
add
adc
add
addl
and
fiadds
out
add
cmp
and
jb
dec
add
ret
add
add
add
add
add
add
jg
flds
movsb
add
add
int3
add
add
add
jl
flds
pop
add
add
push
add
add
add
dec
add
add
jb
inc
add
scas
add
add
rolb
add
or
xor
sbb
add
adc
add
cmp
add
add
add
add
add
add
add
adc
mov
aaa
add
movsb
add
dec
add
add
add
add
add
add
add
push
add
fadds
sbb
aas
add
add
mov
inc
add
add
add
add
add
add
add
add
jb
inc
add
and
sbb
dec
add
xor
inc
add
add
add
add
add
sub
roll
add
test
push
add
addr16
add
add
add
add
imul
add
add
add
add
sbb
mov
add
popa
add
xor
xchg
sbb
sti
add
add
mov
fadds
or
inc
add
add
add
add
js
add
add
add
add
add
cmp
inc
add
add
add
xchg
xor
xor
inc
add
aaa
add
faddl
aam
rolb
add
add
add
add
add
add
add
add
add
sub
incb
loop
inc
add
add
lds
dec
add
mov
jb
jb
incb
popa
add
add
add
add
mov
add
add
adc
add
push
add
adc
add
cltd
add
add
add
push
add
add
add
add
add
add
cmp
jb
cmp
add
int
addl
das
pop
adc
fadds
jmp
add
add
add
add
add
add
add
lahf
add
add
add
sub
cmp
add
add
add
add
mov
inc
add
mov
add
pop
add
jecxz
or
adc
inc
add
add
cltd
add
add
add
add
add
jl
mov
jmp
push
add
add
enter
aaa
add
add
jb
jno
addl
inc
add
inc
add
add
add
inc
add
jl
jle
out
add
add
ja
out
add
add
add
jl
movsb
add
add
adc
add
add
push
add
add
clc
fsubr
popf
lret
fdivr
dec
xor
mov
ret
and
adc
in
pop
mov
sub
gs
push
jge
cmc
or
jae
je
mov
mov
push
jecxz
xchg
arpl
jmp
inc
lods
aad
mov
push
pop
fsubr
cmc
adc
push
mov
and
aas
daa
push
mov
inc
push
pusha
stos
outsl
dec
and
xor
js
pop
mov
cld
lds
sahf
xor
mov
into
mov
out
adc
cmp
mov
sbb
out
in
adc
jge
in
mov
aaa
out
lods
cmp
hlt
jbe
pop
dec
jns
adc
add
push
mov
xorl
and
addr16
xlat
xor
pop
std
add
mov
mov
push
scas
imul
push
inc
aaa
mov
fstpt
inc
mov
movsl
mov
mov
sub
fs
inc
xor
ja
mov
pop
fisttpl
push
sbb
ret
test
xor
imul
inc
call
ljmp
idivb
fstl
xor
jle
mov
sbb
push
push
inc
sbb
icebp
lods
test
mov
xor
and
jmp
dec
insb
push
jmp
pop
mov
aas
jns
or
adcl
sarb
les
mov
je
xchg
dec
fcos
in
lret
adc
inc
adc
mov
sub
add
or
xchg
or
lods
aaa
mov
pop
repnz
mov
mov
add
scas
int3
or
cmp
mov
pop
insb
or
movsl
sub
push
xor
xchg
xor
adcb
out
jp
cmp
aas
rorl
rclb
push
imul
test
das
and
inc
dec
xchg
lods
pop
scas
adc
lcall
mov
lahf
pop
popa
fwait
mov
adc
xor
inc
lods
cli
int3
mov
push
test
xchg
add
mov
inc
setl
xor
or
hlt
jmp
pusha
movsb
out
or
fwait
enter
cltd
and
loopne
ljmp
and
cwtl
into
xor
je
std
add
mov
and
icebp
sti
lock
inc
inc
test
xchg
imul
mov
inc
cmpsb
or
fidivs
mov
fcom
pop
or
lret
mov
cltd
lds
arpl
mov
out
ja
jne
out
mov
in
cmp
and
cmp
movsl
out
pop
hlt
push
push
adc
les
jne
pop
xchg
mov
aas
cmp
jnp
fiadds
dec
xchg
fdiv
dec
leave
and
das
sub
imul
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
