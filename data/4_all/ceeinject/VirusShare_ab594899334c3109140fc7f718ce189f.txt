decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
nop
fadds
call
sub
test
pop
add
js
push
pusha
cmp
nop
fadds
call
lock
add
js
push
jo
pusha
sub
clc
mov
mov
mov
and
or
push
dec
das
insb
sub
aaa
sub
fsubr
mov
sbbl
xor
sti
sbb
pop
pop
inc
shrb
sarb
enter
cli
pusha
shlb
jne
xchg
in
sub
js
imul
cmp
push
inc
test
iret
inc
add
and
inc
cwtl
pushl
push
sbb
xchg
daa
nop
leave
jns
test
das
cltd
rcrl
imul
add
dec
inc
pop
sti
pusha
or
inc
or
adc
mov
sbb
rcrb
rolb
cmp
js
pusha
xor
stc
pop
popf
das
push
ret
jae
sub
dec
jl
push
jo
pusha
sub
cltd
enter
call
lock
sbb
js
push
push
pusha
outsb
cld
mov
sbb
mov
cmpsb
leave
mov
xor
and
inc
push
push
jne
jno
mov
loope
sarb
lock
mov
push
sbb
popa
add
ja
addr16
dec
add
cmc
mov
mov
cwtl
hlt
rorb
pop
add
js
push
jo
pusha
sub
clc
mov
mov
mov
add
js
push
jo
pusha
sub
or
cmp
and
mov
and
pop
cmp
push
sahf
rorl
dec
leave
out
fiadds
xchg
jmp
lds
hlt
test
fs
sti
fisubs
xorb
dec
jae
push
aaa
sbb
enter
pop
test
pusha
push
xchg
stc
push
outsl
jnp
jno
add
lea
jne
loopne
jo
imul
es
scas
cmp
mov
pusha
push
jecxz
addr16
pushf
shl
cmp
push
das
jmp
xor
in
mov
daa
inc
imul
ss
mov
into
retw
sub
sub
mov
pop
cmp
add
mov
rclb
sbb
outsl
scas
aad
out
popa
je
adc
sbb
mov
test
mov
icebp
pop
hlt
shlb
jae
fbld
aam
push
pop
inc
mov
js
in
pusha
jnp
jp
ret
mov
test
sti
jnp
pop
adc
fsubrs
mov
int
ror
popa
dec
mov
sub
sbb
cmp
inc
ljmp
movsb
pusha
xchg
xchg
cmc
jp
pop
adc
dec
sub
inc
jne
push
or
fdivrs
cmp
and
jl
in
aad
ret
fcmovnu
addr16
inc
jbe
push
sub
jbe
or
cmpsb
movsl
jle
lds
inc
xchg
js
push
push
fbstp
mov
cmp
adc
jmp
jge
lret
cmp
inc
mov
jne
jp
inc
lea
popf
nop
or
fwait
inc
adc
and
add
or
fdivrl
pop
in
js
push
int
imul
push
pop
push
js
movsw
jae
out
jmp
pop
xchg
ljmp
and
cmpsl
push
fs
in
ja
mov
lea
mov
adc
sub
xor
push
into
cmp
cmpsb
mov
add
mov
ljmp
sub
cmp
mov
shlb
sti
jecxz
out
mov
and
pop
imul
imull
fisttps
cmpsl
stc
mov
insl
aaa
cmp
mov
sbb
test
mov
lods
dec
and
jns
dec
adc
sar
add
xor
testl
pop
test
jnp
js
and
inc
sbb
es
jbe
sarb
fldcw
fldl
lahf
mov
mov
sub
ss
les
out
mov
mov
int3
and
loop
or
sti
scas
add
scas
lods
stc
add
or
adc
cwtl
inc
loopne
jle
scas
pop
rorl
cmp
mov
and
cmp
js
jae
dec
xchg
push
das
jle
pop
leave
or
pushf
mov
inc
cmp
dec
add
dec
fldcw
sbb
pop
inc
push
mov
add
sahf
sbb
add
adc
les
adc
inc
jns
rorb
aas
push
decl
or
repnz
ret
xor
xor
movhps
mov
jl
cmp
push
sbb
jmp
jbe
loop
scas
mov
int
xchg
jne
push
clc
dec
popf
popa
jbe
jle
insl
mov
imull
xor
das
dec
xor
or
iret
arpl
sbb
adc
mov
sub
je
push
pop
and
inc
push
sub
jmp
pop
fcmovne
lods
mov
push
mov
aas
mov
pop
push
mov
xchg
je
stos
adc
enter
or
cmp
dec
insl
pop
in
lea
mov
test
sub
dec
cmp
pop
jb
sub
jl
into
cmp
cs
or
call
popa
and
mov
push
dec
test
test
mov
dec
ret
sbb
and
xchg
gs
test
adc
gs
sub
gs
cwtl
add
iret
pop
fstpl
xchg
inc
les
shll
std
or
into
mov
push
insl
imul
mov
leave
push
push
sub
iret
loop
dec
xor
jns
cmp
mov
shrb
jae
stc
lret
xchg
jb
adc
lods
aas
and
xlat
add
lcall
push
lock
popa
or
pop
fdiv
cmp
xchg
pop
daa
rclb
sbb
pop
fisttpll
xor
xor
dec
xor
imul
inc
inc
xchg
movsb
icebp
cmp
or
stc
leave
sbb
xor
lock
rorb
mov
flds
shlb
dec
mov
or
adc
mov
xchg
sub
scas
aad
jl
sahf
cmc
notl
adc
imul
insb
lret
adc
cmpb
shlb
popa
push
inc
and
xchg
dec
inc
les
into
and
mov
cwtl
dec
xchg
pop
into
xor
popa
push
cld
imul
push
mov
rcr
outsb
aam
ljmp
mov
gs
shl
lret
stos
pop
sbb
jns
adc
xlat
pop
and
ljmp
and
loopne
inc
aas
aaa
stos
call
sbb
pop
xchg
push
jge
shrb
jns
xchg
lock
or
and
ja
mov
mul
xchg
xor
mov
fldt
loopne
loope
call
jmp
inc
jno
adc
mov
xchg
mov
sahf
or
inc
mov
imul
and
dec
leave
jne
pop
int
idiv
daa
cwtl
outsl
dec
mov
mov
fwait
int
push
jle
out
jns
xlat
outsl
psrlq
out
outsl
inc
push
cwtl
mov
dec
mov
mov
sbb
inc
mov
cmc
inc
xor
inc
jg
xchg
das
pop
mov
sahf
fs
rcll
cli
xchg
das
aaa
sub
mov
shll
rolb
mov
stos
leave
stos
insb
movsb
mov
pop
xchg
jnp
mov
xchg
lods
push
or
cs
fdivr
fs
lock
xchg
and
push
xchg
dec
cmp
test
mov
lock
fsubr
inc
subb
test
fstpl
pcmpeqw
test
ret
enter
pop
stc
push
sbb
movl
xchg
mov
leave
xchg
pop
mov
cwtl
or
mov
movsl
ljmp
xor
icebp
dec
aam
cmp
cltd
or
out
test
jg
out
cmp
sbb
mov
cltd
pop
jecxz
push
or
mov
xor
pop
push
cs
jge
push
jbe
push
bound
rorl
dec
cwtl
data16
or
es
mov
push
pop
xchg
jbe
stc
or
adc
push
dec
jmp
dec
popa
shrb
dec
mov
inc
jne
jecxz
push
data16
add
xor
imul
adc
sub
mov
ficompl
inc
ret
push
cmp
lahf
lods
mov
adc
out
mov
mov
cs
add
lods
imul
sub
xchg
dec
push
fwait
jmp
in
cmp
pop
repnz
clc
scas
xor
outsb
jg
pop
xchg
push
sub
pop
mov
test
aad
and
cmp
pop
mov
dec
daa
orb
pop
call
cli
push
xor
test
pop
mov
stc
ja
mov
stc
in
in
mov
pop
dec
adc
arpl
in
pop
insb
test
cmc
popa
nop
ss
fldt
push
movsl
test
fcomip
xchg
fsubl
jecxz
out
jnp
dec
jge
mov
sahf
add
sbb
push
out
push
xchg
xchg
ret
dec
dec
inc
sbb
cmp
das
daa
push
pop
push
dec
cmp
out
mov
cltd
xchg
cli
cmp
jle
or
adc
push
lret
fsubr
mov
xor
repz
daa
xchg
icebp
adc
or
mov
push
mov
sti
imul
jmp
xchg
push
iret
cs
shrl
mov
test
fidivl
adc
stos
adc
or
dec
and
adc
add
test
sub
clc
push
xor
adc
mov
jne
mov
dec
jno
or
cmpsb
pop
inc
mov
icebp
mov
xor
mov
test
push
cmpsl
js,pn
pop
aas
or
and
or
jecxz
movsb
stos
pop
scas
add
jns
pop
push
cld
int
dec
cmpsl
fstpl
jp
adc
xchg
repnz
imul
jo
ds
add
sub
mov
andb
arpl
mov
adc
jecxz
sar
xchg
adc
inc
aad
adc
xchg
sti
ret
shlb
dec
add
sti
movsl
sbb
hlt
rolb
xchg
mov
int
dec
aad
mov
test
add
xlat
and
cmp
push
pop
push
scas
cmp
repz
inc
and
pop
aas
clc
ss
data16
pop
sub
cli
xor
test
sbb
pop
loope
mov
or
lea
mov
das
shlb
pop
pushf
dec
push
adc
mov
inc
fildll
sbb
jecxz
xchg
mov
lea
ja
inc
out
pop
or
mov
mov
inc
aaa
jecxz
pop
js
jnp
xchg
stos
fdivs
inc
sub
jb
adc
push
and
sahf
scas
xor
stc
cltd
push
inc
xor
lcall
jbe
int3
xchg
add
adc
push
pop
sbb
and
mov
movsb
xorl
inc
addl
lock
arpl
xchg
test
jbe
jp
or
leavew
sub
in
pop
lahf
sbb
xchg
clc
xor
or
out
xchg
adc
mov
int
mov
lret
je
fcomps
sbb
mov
push
inc
mov
or
in
es
shll
pop
imul
les
in
mov
pushf
imull
jne
fdecstp
fmuls
loopne
xor
inc
lds
mov
dec
dec
imulb
insl
xchg
jle
xor
xchg
cltd
out
fwait
or
jmp
xor
pop
push
mov
cmp
dec
std
fidivl
mov
cmp
cli
rcrl
ja
hlt
and
pop
push
add
popf
jno
mov
es
decl
sub
cmp
adc
sbb
out
push
mov
xchg
popa
adc
dec
clc
xor
xor
bound
out
cmpsl
subb
xor
sbb
jb
leave
das
imul
aam
mov
mov
lods
cmp
xchg
out
mov
mov
and
icebp
push
outsl
and
adc
add
aad
push
mov
test
pop
xor
sarl
adc
sarl
orl
xchg
popa
not
push
aam
icebp
pop
mov
nop
add
xor
cmpb
mov
aaa
loope
push
jne
push
and
lcall
adc
fstl
mov
cmp
cmp
test
outsb
lret
rol
icebp
les
fiadds
pop
out
bound
sub
int
xchg
and
add
clc
or
mov
fwait
push
jb
or
daa
popa
jb
stc
test
dec
pop
stos
enter
xchg
push
lods
loop
push
adc
xor
arpl
icebp
std
xchg
shlb
inc
pop
and
cld
xchg
cmc
pop
push
and
jno
and
mov
inc
lds
push
daa
pop
pop
and
dec
cs
or
mov
movsb
mov
mov
jg
popf
sub
jp
xorl
out
push
aad
xchg
sbb
repz
cwtl
pop
push
and
mov
cmp
push
aam
push
aad
xchg
and
xchg
jbe
mov
rcll
daa
les
pop
js
enter
or
pop
mov
sbb
rcrb
mov
lods
popf
dec
pop
cmp
adc
or
and
pop
or
lea
push
dec
xchg
inc
inc
addr16
outsb
jns
inc
mov
sahf
into
leave
mov
fsub
fsubl
mov
aad
lods
push
pop
popa
and
les
pop
pop
mov
or
inc
jae
aam
lods
and
mov
push
jecxz
loope
cltd
mov
dec
mov
out
scas
sar
lds
imul
hlt
mov
stos
and
adc
sub
pop
mov
pop
sbb
ss
rol
out
in
jb
mov
loop
jae
frstor
jl
jae
fcompl
mov
pop
xorb
in
ret
in
add
cmp
jmp
test
sub
stc
ret
repz
xchg
out
jp
je
adc
test
mov
sahf
lods
xchg
push
jno
pushf
dec
pop
enter
pop
aas
inc
cli
mov
or
adc
pop
pop
or
rorl
insl
out
incl
test
loopne
test
iret
inc
xchg
sub
xchg
lahf
bswap
pop
ret
cs
jne
ljmp
adcl
jns
pop
mov
or
jecxz
leave
jns
push
push
sbb
shl
pop
es
mov
adc
mov
clc
rclb
mov
test
jg
mov
scas
and
xor
movsb
in
jmp
lahf
sahf
mov
and
add
in
stos
aaa
sbb
mov
sub
in
aad
cli
mov
fiaddl
adc
mov
sub
push
adc
sub
adc
popl
popf
jne
imul
dec
ja
int
sub
in
adc
sub
xchg
xlat
hlt
mov
lea
popf
in
xor
cmp
ja
leave
push
mov
or
lods
dec
fs
xchg
fstpl
push
mov
out
cmp
xor
dec
mov
int
es
sbb
dec
outsb
mov
xchg
dec
ss
fs
popa
aas
in
push
inc
rorl
sub
aam
xchg
mov
repz
inc
sbb
loope
fists
movsb
jnp
lret
push
and
fdivr
bound
xchg
addr16
and
testb
push
xchg
call
xlat
cltd
movsb
rolb
iret
testl
lock
xor
nop
movsl
fs
in
inc
mov
adc
and
imul
sbb
push
jns
scas
loopne
dec
jg
mov
sub
jg
dec
shrl
cmp
inc
pop
sahf
imul
es
mov
push
pusha
mov
add
mov
adc
roll
lock
arpl
xchg
addr16
lea
adc
cmpsl
inc
aam
sbbl
mov
sub
mov
paddb
hlt
push
lret
jmp
xor
mov
lds
pop
xor
call
pop
adc
mov
adc
dec
lea
repnz
test
mov
test
jmp
pop
inc
sub
in
insl
or
inc
add
xchg
loop
xchg
jae
mov
add
and
mov
shrl
xchg
mov
es
shrb
das
cmp
pop
push
adc
sub
js
repnz
lods
jle
push
jbe
aaa
and
fistpll
test
mov
dec
cmpsb
dec
or
repz
jno
jb,pn
mov
aam
imul
push
mov
call
and
lret
addr16
ficompl
xchg
movsb
jl
imul
aam
js
es
roll
dec
push
iret
mov
sub
mov
inc
rcll
xlat
pop
movsl
jle
hlt
xor
sub
jae
cmp
xor
stos
cmp
lds
ja
mov
mov
cmc
add
lea
mov
jge
pop
roll
jmp
das
pop
fldl
repz
rcrb
or
add
outsl
mov
mov
pop
xor
push
mov
stos
and
fstps
popa
sbb
cli
into
ja
push
lock
scas
xchg
add
mov
mov
mov
xor
pop
outsl
imul
lods
outsl
shl
add
mov
dec
in
lods
cltd
pop
pop
shrl
inc
test
mov
les
std
mov
xor
dec
test
dec
iret
pop
push
fsub
push
rep
test
xchg
mov
rorl
sub
push
mov
or
and
loopne
pop
imul
pop
int
push
push
adc
cli
mov
push
fsubl
shr
jns
sahf
test
pop
hlt
gs
fcmovnbe
xor
pop
sbb
mov
mov
add
sahf
pop
iret
mov
cmp
mov
in
in
lds
fs
or
insl
scas
mov
push
push
xchg
xor
sub
imull
icebp
mov
mov
xlat
dec
sbb
adc
fnsave
or
dec
mov
jbe
and
lds
xor
sahf
jb
sarl
mov
mov
jns
mov
xor
outsb
in
out
inc
mov
xchg
inc
ficoml
popf
pop
out
insl
ja
jno
std
orb
mov
gs
xor
popf
or
insw
fsqrt
test
dec
xor
mov
in
test
cltd
lds
orb
mov
dec
xor
mov
mov
cmpsb
add
cmc
inc
xor
mov
es
sub
cmpsl
loop
loop
je
push
shll
int
xor
and
mov
lds
and
xor
jns
sub
aaa
jp
enter
shl
int3
xchg
stos
adc
ja
xor
mov
push
cmp
decl
popa
sarl
shl
push
out
mov
scas
ljmp
sahf
xor
push
imul
aaa
jg
je
hlt
mov
scas
push
aad
repz
fsts
and
mov
enter
pop
hlt
push
hlt
sbb
fs
pop
cmc
sub
insl
shl
movb
std
cwtl
push
sub
decl
hlt
stc
or
int
shll
xchg
add
test
ret
jge
fcomi
pop
lret
out
mov
jle
inc
call
sub
gs
push
js
mov
iret
cmp
hlt
ret
outsb
xchg
jl
scas
std
mov
sbb
jge
subb
jle
hlt
cwtl
adc
hlt
lea
add
lcall
jge
push
dec
stos
ror
mov
sbb
popf
fisttps
push
imul
std
pop
add
call
mov
mov
push
mov
cs
imul
and
cmp
mov
xchg
jmp
daa
push
lcall
and
std
xlat
sub
sub
pop
inc
mov
dec
adc
add
jl
lods
rorl
ss
jns
push
test
lcall
dec
aad
hlt
or
sub
out
push
xorb
adc
xchg
mov
pop
fadd
idivb
lods
call
and
in
out
mov
pop
stc
jae
xchg
xchg
xchg
stos
negl
mov
sbb
pop
cmp
jno
mov
push
inc
push
and
push
sub
icebp
mov
pushf
test
adc
pop
gs
xor
es
fbstp
imul
bound
mov
dec
subb
shlb
int
xchg
push
pop
pop
push
sub
ss
xchg
dec
mov
jmp
test
ficompl
and
aas
repz
in
movsb
cmp
jno
jne
sub
cmpsl
cmp
mov
push
mov
xchg
sbb
dec
pop
mov
xchg
and
xchg
scas
mov
adc
aas
and
aam
popf
aaa
fs
lret
aam
and
sbb
lcall
cmp
jne
inc
dec
stos
scas
or
loope
fs
loope
lret
lret
mov
testl
leave
outsl
int
popf
lret
jge
shrb
sahf
gs
enter
jnp
add
in
lahf
pop
xchg
xor
push
push
pushf
or
and
in
stos
inc
pop
push
xchg
pop
mov
popl
stos
imul
mov
cmp
sub
fs
mov
andb
inc
adc
dec
outsl
daa
push
ror
jmp
lds
sub
imull
pop
nop
outsb
pop
dec
sub
xor
jnp
outsl
cmp
pop
or
sbb
gs
or
jbe
dec
icebp
lret
jl
mov
dec
adc
cmpsl
adc
cmp
cmp
xlat
pop
shlb
jmp
cmp
pavgb
rolb
cltd
stc
jmp
addl
mov
stos
imull
pop
divb
subl
sub
imul
cmp
xorb
mov
dec
ficompl
outsl
movsb
ja
std
sub
cwtl
iret
sbb
sub
mov
lds
sahf
pushf
mov
mov
inc
fs
orb
jmp
mov
push
or
subl
adcb
lret
jne
lcall
test
xchg
cmp
fs
jg
fmuls
divb
movsl
ret
xchg
jae
enter
call
lock
add
js
push
jo
pusha
sub
clc
mov
mov
mov
add
js
push
jo
pusha
sub
clc
mov
mov
mov
add
js
push
jo
bound
nop
fadds
in
rcrb
pusha
push
out
cmpsl
jmp
lcall
testl
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
or
sub
and
or
push
jnp
mov
fwait
out
stos
fdivrl
lods
jmp
sti
pop
or
sub
dec
sbb
sub
cmp
mov
sti
mov
popf
fldt
inc
sbb
cmp
imul
int3
and
fwait
or
mov
fistps
pop
inc
and
add
loopne
pop
mov
jg
adc
adc
clc
or
push
movsb
jecxz
cmp
fwait
insb
dec
insb
lret
enter
insl
cmc
cmp
stos
icebp
xor
xor
and
sbb
xchg
into
jbe
fs
lret
push
adc
jb
push
dec
cwtl
mov
idivl
sub
pop
in
test
push
mov
in
push
mov
and
adc
jbe
jmp
in
scas
or
pop
dec
fmull
jle
clc
les
int3
stc
push
cld
jnp
fistpl
jbe
popf
pop
in
dec
icebp
ret
xchg
int3
push
pop
fwait
xor
and
dec
fimuls
mov
pop
sbb
cmp
push
pop
sub
and
fwait
hlt
stos
in
xchg
lret
test
lods
jmp
xchg
aas
cmp
or
push
push
and
fsubr
sahf
ret
xchg
std
loopne
clc
test
jmp
pop
sbb
sub
js
jb
inc
sbb
jnp
repz
test
test
mov
mov
or
pop
je
sbb
sub
cmp
int3
mov
fwait
in
stos
cld
mov
lods
jmp
sti
dec
or
sub
dec
sbb
sub
cmp
int3
mov
fwait
in
stos
cld
mov
lods
jmp
sti
dec
or
jl
xchg
out
adc
scas
lds
xor
jle
cmp
mov
push
mov
testb
xchg
sbb
lret
sahf
fsubrs
and
jno
jo
fs
out
jle
loop
imul
jl
or
mov
dec
cmp
xchg
mov
fwait
pop
sbbl
fs
paddusw
cmp
jbe
insl
pop
enter
mov
sbb
aam
pop
ljmp
divb
out
fnstsw
lds
mov
or
int3
mov
adc
dec
imul
xchg
lret
fisttpll
xlat
xchg
cli
clc
mov
in
adc
fsubl
lahf
mov
scas
jne
mov
sub
xor
lea
test
or
repnz
aaa
test
xor
mov
mov
out
subb
lcall
push
pop
insb
stos
mov
outsl
adc
leave
push
push
mov
sbb
push
stc
add
shl
mov
out
jb
xorl
lods
xchg
mov
push
call
test
pop
jo
les
in
les
into
xchg
fnsave
xchg
or
fisttpll
ret
xchg
pop
iret
out
inc
and
movsb
imul
les
adc
iret
movsl
loop
stc
lods
scas
cmp
divb
std
sub
xor
pop
iret
xchg
adc
and
xchg
adc
mov
ds
add
adc
test
clc
loopne
push
jo
loopne
mov
sub
push
movsl
lock
or
gs
mov
nop
stos
and
roll
dec
jne
sahf
shrl
or
mov
mov
loop
jae
cs
ret
cwtl
imul
inc
sbb
dec
leave
data16
je
mov
xchg
int3
xor
add
xchg
leave
rolb
cmp
lds
lods
stos
dec
rolb
pop
push
repz
test
dec
inc
inc
aam
mov
jae
sub
out
roll
rclb
testb
in
lret
lret
incb
cld
cmpsb
sbb
xor
sbb
pop
sub
out
push
inc
leave
insl
loope
inc
into
sub
sub
shrb
mov
ficoms
adcb
mov
lods
aas
aad
add
xor
xor
cmp
add
lcall
pop
dec
pop
imul
push
cmpsl
pop
xor
mov
pop
rcl
in
jae
scas
testb
push
adc
inc
lods
pop
jmp
test
cs
add
pusha
cmp
mov
std
int
stos
xchg
xor
jmp
ljmp
in
iret
xor
les
pop
xor
jno
adc
es
dec
sarl
ret
mov
popa
shll
push
test
inc
adcl
popf
add
mov
scas
inc
std
xchg
xor
cmp
out
dec
roll
xchg
int3
jbe
dec
xor
dec
fisttpll
scas
ror
and
mov
lret
imul
mov
mov
int3
push
mov
stos
ja
inc
aas
pop
or
bound
add
and
inc
icebp
dec
ret
repnz
xor
lea
rorb
mov
movsl
dec
inc
xor
and
aam
add
ret
mov
aad
sub
push
jge
fcomps
gs
and
dec
leave
in
loope
inc
mov
je
push
sbb
cwtl
int3
shll
dec
in
or
test
repnz
add
in
add
push
adc
inc
sbb
mov
push
jb
dec
fidivrs
mov
lcall
out
dec
xchg
mov
lcall
popa
fs
push
ds
lcall
xchg
fs
bound
mov
add
jg
cmp
sbb
mov
push
shl
inc
out
xchg
adc
lcall
insl
out
jle
pusha
shrb
into
lcall
fistl
scas
mov
cmp
repz
out
movsb
mov
or
mov
clc
jmp
shl
and
ss
dec
cld
cwtl
test
inc
xchg
aaa
je
scas
inc
sub
xchg
mov
and
dec
xchg
pushf
sub
cmpsl
and
inc
or
cltd
jb
mov
mov
and
jae
dec
lahf
lcall
jns
stc
inc
stc
les
icebp
mov
sbb
loopne
xor
out
cmp
cmpb
adc
cld
mov
add
aaa
int3
xchg
loop
stos
imul
sub
jg
and
sbb
mov
push
es
cmp
pop
xor
call
jle
inc
pop
loope
jge
jne
roll
pop
mov
loopne
ret
je
mov
imul
arpl
stc
arpl
add
mov
xor
dec
and
lcall
mov
imul
xor
mov
push
arpl
inc
inc
pop
shlb
jp
push
arpl
mov
mov
mov
pop
cltd
insl
lock
mov
cld
jge
test
xchg
xor
pop
mov
jbe
addr16
cmp
mov
lret
mov
sbb
out
push
fdivl
sub
jne
fbstp
repnz
mov
mov
mov
mov
stc
cltd
push
scas
lods
cmp
pop
lret
push
mov
in
xor
push
xchg
mov
dec
enter
cmp
mov
xorb
xor
ret
mov
xlat
and
inc
je
pop
jb
jb
fidivs
call
xchg
jg
in
stos
mov
mov
xor
push
out
inc
aaa
orb
sub
sbb
movsl
cwtl
loopne
pop
movl
adc
sbb
xchg
pop
sbb
push
cli
int
push
pop
movsb
fsubrs
jne
ljmp
mov
push
clc
push
fs
in
jae
cmp
sbb
adc
mov
xchg
jae
shll
dec
mov
test
pushf
lods
and
cmp
push
mov
lret
into
lock
pop
shlb
cltd
and
mov
out
push
rcll
sbb
sti
cli
addb
fdivs
jecxz
pop
aas
xchg
jecxz
movl
sub
pop
leave
dec
shl
mov
sbb
jnp
shlb
stc
sbb
into
xlat
push
sub
pop
or
lea
arpl
scas
ret
or
mov
or
adc
cmpsl
lahf
cmpsl
shlb
les
loopne
imul
or
aam
imul
rcrl
jbe
mov
xor
fbstp
out
xchg
sbb
fistpl
es
xor
mov
daa
cli
pusha
enter
add
lret
icebp
shll
jecxz
mov
in
testb
cmpl
sarb
jp
in
and
push
je
xor
mov
inc
lret
jns
icebp
ret
or
les
sbb
mov
cli
mov
movsl
xlat
push
mov
add
sub
repz
cmp
repnz
xchg
gs
enter
pushf
notl
add
insl
gs
mov
imul
mov
xchg
sub
pop
ret
pop
sub
arpl
mov
test
mov
xor
repz
dec
pop
pop
sub
mov
stos
inc
add
je
pop
in
pushf
pop
mov
lahf
ja
push
sbb
cmp
and
repz
movsl
mov
lds
adc
inc
mov
mov
adc
xor
adc
and
jb
fildl
dec
pop
mov
jo
outsb
das
or
dec
and
mov
adc
jno
std
jl
loope
shlb
mov
cmp
inc
pop
jmp
jcxz
nop
jp
adc
fidivrl
pop
ret
es
adc
mov
pop
cmp
shll
arpl
negb
cmp
push
aad
sbb
jp
dec
test
xlat
syscall
fnstcw
hlt
ss
outsb
popa
pushf
mov
adc
mov
sbb
int
pop
sub
pop
lret
loopne
xor
test
gs
jns
jl
daa
xor
cmp
out
xchg
out
xchg
add
lods
lret
arpl
xor
sub
clc
out
outsl
and
mov
ret
lahf
jo
ja
inc
adc
xor
mov
mov
jo
mov
mov
sbb
addr16
fisubl
xchg
cmpsl
or
aad
and
popa
sub
sbb
jbe
push
mov
out
xchg
mov
scas
sbb
es
xor
div
call
in
jo
xchg
jnp
dec
sbb
sub
dec
mov
jne
push
adc
cmp
jl
je
mov
orb
pop
fsubr
and
cmp
xchg
pop
cmp
loop
dec
rclb
in
dec
dec
adc
addr16
pop
sub
xchg
popf
mov
jns
fwait
jge
icebp
fcmovnb
mov
pop
push
je
and
imul
ja
movsb
pop
dec
push
iret
fists
mov
test
popf
movsl
in
scas
xorb
test
dec
sbb
cmp
dec
jg
loopne
mov
mov
sub
lea
mov
pushf
cmc
pop
out
fs
xchg
xchg
leave
push
dec
insl
xchg
mov
fstps
add
and
aaa
push
outsl
or
aas
xchg
push
mov
sub
mov
cmp
adc
mov
out
adc
fstps
inc
cmp
outsb
mov
fadd
mov
pop
jns
sbb
inc
jge
shrl
add
jnp
shrb
pop
mov
sbb
stos
shl
pusha
mov
enter
push
aam
inc
pop
test
adc
mov
bound
mov
pop
outsb
add
nop
jle
jp
and
push
popf
out
decl
dec
les
loopne
cmpsb
sub
cld
pushf
adc
pop
cmp
aaa
xchg
shr
inc
ret
mov
data16
cmpsl
adc
inc
test
cmp
xor
jmp
leave
subb
or
sub
jbe
sub
mov
dec
scas
daa
xchg
xchg
aaa
fldenv
stos
test
push
dec
mov
out
insb
xchg
fwait
sahf
stos
push
popf
dec
push
and
repnz
lods
negb
aaa
fwait
lret
in
pop
cwtl
push
lahf
nop
call
cmp
ficomps
movsl
lcall
jg
inc
test
pop
xchg
pop
jle
or
mov
or
inc
jne
popf
mov
mov
stc
das
into
pop
fnstcw
inc
cmpsl
sbb
enter
test
daa
dec
mov
sub
jge
add
pusha
movsb
mov
inc
dec
gs
test
stc
cmp
ljmp
cli
ja
jo
mov
mov
mov
push
mov
push
popa
sub
mov
js
daa
aaa
mov
pop
rcrl
xchg
mov
ja
pop
push
sub
decb
push
popf
das
mov
xchg
xchg
fsubrs
xor
mov
fs
decb
push
test
pusha
ljmp
inc
add
shlb
push
scas
shll
mov
xchg
lea
ss
inc
lds
test
sbb
and
lods
cmp
cmp
repnz
int
and
es
ja
mov
dec
xchg
lret
add
pusha
mov
fcmove
push
jbe
xlat
mov
jge
jg
xchg
mov
and
cltd
xchg
sub
sbb
andl
xchg
es
dec
aam
add
out
mov
xor
xchg
push
push
mov
test
ss
movups
and
test
out
cld
push
popf
pop
fmull
sub
clc
fwait
sahf
in
pop
sub
lahf
and
into
lret
pop
das
scas
adc
cli
add
out
aad
js
mov
xor
pop
sub
ds
push
movsl
out
fcomi
and
jle
inc
sbb
inc
subl
and
lea
jmp
and
pop
pop
mov
movsl
out
jo
pop
ljmp
andl
mov
mov
gs
daa
cmp
jle
lret
test
add
cmp
dec
jns
add
out
mov
xchg
add
push
mov
pop
mov
test
xchg
cmp
clc
sti
movsl
xchg
cmp
sub
dec
adc
xchg
jg
into
pop
add
cmp
in
mov
fstps
mov
daa
sbb
cs
pop
ss
shll
and
push
int
sbb
or
rorb
into
pop
mov
sub
in
and
js
imul
add
jo
xor
outsl
jmp
fisttpll
cld
add
out
aaa
pop
dec
inc
ss
repnz
cmp
xor
dec
dec
daa
lock
in
pop
mov
in
lcall
repz
cmc
in
out
xchg
sub
jae
cmpb
incb
adc
ret
jns
out
mov
cltd
orb
lds
cmpsb
cmp
jge
add
lock
sbb
xchg
cmp
cmpsb
mov
adc
push
mov
xchg
inc
or
push
js
ret
data16
dec
jnp
cmp
jge
dec
mov
or
xchg
jno
in
jne
mov
sbb
xchg
push
xor
notl
push
scas
shll
mov
out
adc
mov
fstps
or
and
ja
xchg
push
lretw
xor
test
jns
jp
mov
mov
aam
aad
jmp
cmp
dec
and
subl
mov
cwtl
rorl
dec
dec
sti
adcb
lods
adc
xor
add
aad
inc
loope
shl
shll
cmpsl
repnz
cmp
test
in
fcmovbe
movsb
addr16
int3
mov
xchg
mov
jb
out
icebp
sub
push
out
bound
pushf
mov
outsb
mov
inc
sbb
stos
sub
rolb
inc
xor
out
xchg
lret
aas
arpl
push
or
xor
iret
movsb
test
mov
test
stc
dec
ja
ret
push
adcl
jecxz
dec
or
lret
mov
fnstcw
ja
pop
add
in
ss
scas
jg
mov
jnp
aas
pop
sub
cs
lds
xchg
je
pop
popa
adc
and
mov
cli
cld
jbe
test
xorb
cmp
mov
stos
popa
cld
aas
bound
mov
das
adc
dec
xchg
es
je
mov
or
or
mov
xor
test
mov
in
std
outsb
jp
test
mov
inc
add
lock
sub
pop
js
jnp
xchg
mov
test
adc
and
ffreep
nop
js
rcrl
cmp
scas
pop
inc
fidivrs
push
push
fnstsw
into
jl
sti
divb
xlat
shrl
mov
inc
dec
call
fsubr
imul
fwait
popf
je
ljmp
adc
stc
push
jmp
inc
sub
out
cwtl
nop
cs
sbb
inc
sub
or
xor
and
mov
jae
loopne
js
xchg
mov
movsb
xchg
scas
or
fisubl
mov
inc
mov
xchg
fdivrs
adc
lds
out
daa
pop
aad
movsl
addb
fwait
iret
xchg
cmp
push
push
adc
arpl
xchg
icebp
addr16
loope
push
jne
enter
jp
dec
das
inc
jb
lea
lock
mov
xchg
movsl
push
outsb
lods
shll
popf
dec
dec
dec
fdivrl
mov
xchg
pop
jne
leave
push
aas
push
inc
cmc
cmp
pop
sti
lcall
leave
inc
rorl
pop
sbb
push
xchg
dec
subl
out
xchg
sub
sub
xchg
mov
rolb
js
aam
idiv
jb
jp
movsb
add
fwait
outsb
shl
push
jmp
movsb
fildll
in
add
filds
sahf
adc
fldenv
loop
push
xchg
dec
jle
ds
rcrl
aam
xor
adc
scas
lods
sbb
jnp
pop
jecxz
xor
movsl
mov
push
sub
sbb
push
mov
es
ret
push
pop
test
das
or
xchg
dec
inc
cs
lods
in
movsl
or
sbb
inc
outsl
push
dec
ds
and
lock
and
inc
hlt
or
cmpsb
sub
js
mov
insl
or
sub
pop
idivb
and
xchg
jle
out
dec
xchg
mov
dec
jmp
mov
adc
pushf
sbb
bound
cmpb
sub
mov
leave
sbb
jo
fs
jg
scas
ljmp
push
adc
push
out
call
scas
fiaddl
push
popf
cmp
dec
shld
sbb
stos
dec
mov
inc
rclb
fwait
jbe
pusha
scas
shlb
outsb
ret
and
inc
in
lea
jg
dec
mov
shlb
xor
subb
inc
mov
int
cwtl
dec
movsb
add
cmp
gs
pop
sub
sub
rcrl
dec
add
dec
stos
imul
dec
sub
sub
adc
push
sub
call
ja
test
jnp
outsl
jle
push
cmc
ljmp
ljmp
stc
mov
ds
xchg
dec
jecxz
je
loop
popf
lock
sahf
push
adc
fwait
inc
push
mov
dec
mov
mov
je
dec
js
mov
inc
inc
pop
mov
jp
out
mov
push
xor
jl
mov
bound
cmp
les
sti
add
inc
mov
dec
loope
daa
outsb
leave
aam
mov
pop
bound
lods
and
out
sub
inc
jmp
loop
testl
adc
outsb
jle
cli
push
mov
push
lods
jmp
fs
popa
mov
out
mov
bound
or
scas
loopne
push
push
cmp
pop
inc
pushf
or
mov
int
xchg
fsubs
xchg
shl
cs
je
push
adc
inc
jnp
or
add
dec
imul
xchg
push
and
aaa
orb
fidivl
or
xlat
mov
sti
mov
and
mov
leave
mov
jecxz
mov
xor
arpl
mov
cld
sbb
mov
inc
flds
mov
pop
hlt
or
imul
aas
mov
mov
fisubrl
and
out
jne
int
xchg
cmp
clc
testb
jo
pop
jmp
inc
fsts
ret
add
imul
pop
and
mov
sbb
mov
xlat
sub
adc
add
ss
popl
mov
in
leave
out
popf
sbb
dec
enter
cmp
xchg
dec
shlb
inc
and
dec
adc
les
dec
je
movsb
and
push
fidivrl
aas
add
mov
jecxz
scas
jns
push
mov
or
test
das
add
jp
mov
sub
inc
xchg
out
xchg
xor
mov
push
popa
or
int3
push
les
data16
xchg
pop
call
mov
xor
push
xor
fisubs
out
inc
inc
or
inc
int3
xchg
dec
mov
xchg
mov
jge
cwtl
inc
jg
mov
int3
push
mov
shl
daa
xchg
test
mov
xchg
jg
sbb
pop
or
push
pop
ret
pmullw
add
mov
push
or
loope
mov
sbbb
mov
push
inc
outsl
mov
popl
out
dec
jecxz
fiaddl
jae
mov
popf
mov
xchg
sub
ja
arpl
ficomps
mov
rclb
shll
inc
int
dec
adc
cmp
stos
push
loop,pt
sbb
or
imul
mov
sbb
in
jnp
mov
addr16
aas
dec
test
dec
js
gs
shrb
lahf
cmp
roll
lret
imul
xchg
cmp
sbb
aaa
test
dec
dec
call
push
mov
pop
xchg
sub
and
push
xor
test
push
push
cmp
sbb
shrb
shlb
mov
into
xor
jp
enter
test
ret
shl
adc
imul
xor
in
into
out
rclb
xchg
add
loop
imul
mov
ss
pop
in
jnp
jbe
ret
imull
sub
aam
loopne
pop
mov
pop
stos
fwait
dec
das
in
xchg
mov
pop
xchg
in
stc
xchg
scas
clc
jae
jo
mov
lock
out
xchg
int
push
sbb
xchg
add
rolb
adc
lret
jmp
sahf
lret
leave
fstl
jl
xchg
jbe
in
sbb
dec
sbb
sub
cmp
int3
mov
fwait
in
stos
cld
mov
lods
jmp
sti
dec
or
sub
dec
sbb
sub
cmp
int3
mov
fwait
in
stos
cld
mov
lods
jmp
sti
dec
or
stos
jl
or
sbb
sub
cmp
int3
or
fwait
call
lret
cwtl
fldt
push
cmp
sbb
lods
imul
stos
cld
int3
sti
inc
adc
push
adc
add
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
call
mov
call
pushl
push
push
call
add
push
call
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
or
cmp
sub
xchg
xchg
ds
adc
test
lods
inc
fdivl
in
add
cmp
sub
pop
mov
movsl
jl
insb
test
lods
inc
sbb
int3
cmc
cld
adc
or
cmp
sub
pop
lods
dec
mov
pushf
xchg
scas
pop
shlb
lods
inc
fdivl
mov
add
cmp
inc
dec
xchg
pop
jl
or
xor
fimuls
pop
push
test
movsb
pusha
pop
sarl
mov
pop
xchg
or
inc
inc
push
inc
and
popa
dec
dec
or
cmp
cmp
pushf
lock
mov
in
add
push
aad
cmc
jnp
pop
gs
int
jp
and
mov
jg
fldcw
int
add
sub
and
inc
sub
adc
inc
pop
xor
loope
repz
sahf
mov
or
je
jno
inc
test
inc
push
mov
cmc
or
cmp
sub
pop
mov
movsl
jl
insb
pushf
pushf
insl
mov
dec
lods
pop
fsubrl
in
popa
pop
nop
js
push
aam
les
lret
sbb
outsb
call
mov
pop
int3
jbe
adc
imul
pop
or
stc
or
add
and
nop
jns
pusha
jns
or
push
mov
mov
xchg
insb
test
lods
inc
fdivl
in
add
cmp
sub
pop
mov
movsl
jl
insb
test
lods
inc
fdivl
in
add
mov
mov
xchg
sub
push
mov
dec
mov
fidivs
mov
lods
inc
xor
add
xchg
pop
pop
nop
sbbb
imul
inc
pushf
aaa
fisubrs
inc
stc
gs
lret
inc
xor
push
jae
jmp
loop
cmp
push
lock
mov
test
enter
popa
mov
call
aam
jecxz
push
xor
orl
xor
adc
cmpsb
lds
push
andl
bound
xor
mov
out
outsl
dec
xor
lcall
dec
add
lcall
xor
xchg
xor
jecxz
in
movsb
mov
add
stos
lcall
fs
in
xor
mov
fsts
es
imul
pop
fmull
push
rcrb
mov
xor
cltd
dec
fs
jge
stos
ud0
fsts
xchg
flds
jle
sti
addr16
sub
pushf
test
leave
xchg
push
or
jecxz
cmp
pop
push
fs
xchg
push
push
adc
notl
ja
stc
cmp
or
movsb
or
cmp
jmp
xchg
ja
jmp
push
mov
sub
pop
ret
mov
out
shr
daa
jle
ds
jnp
mov
addl
movsb
pop
xor
jbe
aad
rcl
push
jl
cmc
inc
arpl
not
arpl
dec
rclb
mov
movsb
shll
aad
out
mov
inc
or
push
mov
stos
dec
cmpsb
scas
test
cmpsl
iret
sahf
xor
pop
stos
inc
sub
xlat
outsl
jns
pop
daa
sysexit
jb
fs
out
cmp
int
test
mov
push
leave
dec
dec
in
push
pop
pop
loope
dec
adc
or
fdivl
rcrb
fidivrl
lea
in
xchg
in
xor
fistpll
cmpsl
or
and
cmpl
sbb
push
gs
add
pop
push
js
ds
mov
cwtl
repz
jge
das
pop
push
push
aaa
imul
repz
push
repnz
out
adc
dec
and
loope
out
enter
and
inc
addr16
jmp
nop
lock
filds
out
fnstcw
loopne
jbe
dec
pop
or
push
mov
jae
or
jge
inc
test
std
mov
out
pop
inc
lret
icebp
fisttpll
popa
stos
push
push
push
sbb
pop
jp
rcll
fdivrs
mov
pop
dec
cli
iret
fstpt
and
in
gs
inc
sub
sub
xchg
add
movsb
pusha
pop
mov
ljmp
dec
fisubs
ljmp
scas
cmp
mov
pop
xchg
sub
jl
jbe
ljmp
ret
daa
mov
sbb
cs
lcall
cwtl
loop
lock
clc
adc
sbb
outsl
lock
mov
nop
inc
sarl
mov
outsb
sbb
dec
cmp
or
into
cmpl
je
aas
iret
jnp
sbb
mov
sub
sbb
insb
mov
fmuls
inc
mov
mov
pusha
push
mov
push
jbe
filds
adc
ret
sub
inc
lcall
adc
mov
dec
mov
inc
jmp
fists
mov
lret
dec
cmp
scas
and
pop
cmp
notb
fnstsw
lret
adc
jge
sbbb
jb
xor
stc
mov
dec
enter
les
data16
xchg
enter
bound
icebp
sub
scas
sub
daa
in
aam
rolb
cli
sarl
repz
lds
cmp
out
mov
mov
stos
cmp
ljmp
bound
xchg
out
dec
mov
pop
xchg
dec
xchg
xor
cltd
in
mov
jl
js
sti
stos
cmpsl
push
jne
dec
dec
iret
fcompl
lret
inc
jmp
jb
ss
fadd
leave
sub
sti
cmp
mov
fidivrl
js
dec
pop
mov
aad
rcl
and
sbb
fisubrl
test
in
xchg
jae
fs
pushf
orb
jle
push
pop
cmp
aam
into
jne
sahf
aas
ja
dec
mov
mov
mov
pop
jp
or
add
icebp
mov
loop
daa
xor
shll
dec
and
mov
mov
int3
dec
rcl
push
push
iret
bound
nop
mov
movsl
movsl
and
cmp
cmp
xor
bound
push
popa
jle
jg
cld
js
or
sbb
sub
out
and
rclb
lret
or
xchg
cmp
jecxz
lods
sub
fstpt
ret
dec
scas
roll
jns
cli
push
mov
dec
lret
rol
in
sub
adc
lds
cmp
mov
or
and
mov
popf
mov
xchg
loope
sub
push
out
dec
push
mov
add
das
jo
movsl
popa
scas
sar
ljmp
add
sbb
cmc
dec
popf
cltd
pusha
stc
ljmp
in
sbb
subl
push
mov
push
cmp
dec
outsb
xchg
cmp
xor
pushf
add
inc
out
clc
inc
pop
cltd
push
mov
inc
push
xchg
ret
leave
test
popf
mov
cmp
out
xor
dec
or
pop
sub
push
jp
testb
lds
addr16
or
sbb
mov
test
cwtl
popf
mov
and
cmp
jae
mov
scas
xchg
jno
jb
mov
push
repz
mov
push
mov
pop
or
ljmp
cmpsb
cld
pop
add
jg
jg
adc
add
mov
je
mov
jno
in
cmp
inc
ja
in
mov
out
mov
jmp
pop
push
xchg
and
and
popf
pushf
mov
ja
orl
and
cmp
xchg
mov
xchg
fs
xchg
cmpsb
cmc
arpl
inc
inc
cltd
fstps
adc
sub
and
popf
inc
fs
push
sub
test
push
test
daa
mov
mov
jns
les
xchg
or
sbb
addr16
movsb
xor
jbe
cmpl
dec
test
nop
xor
les
adc
and
adc
jge
outsb
cmpsl
jge
add
addr16
dec
add
scas
nop
ret
and
data16
sbb
mov
sar
test
lahf
sub
mov
push
into
rol
lahf
daa
enter
rcl
mov
popf
jo
call
test
xor
pushf
pop
mov
and
pop
and
in
jae
daa
mov
push
inc
pop
dec
push
xor
xchg
dec
daa
add
out
mov
dec
xor
loope
or
int3
xchg
or
arpl
inc
imul
jl
add
shrl
pop
xchg
pop
adc
pop
aad
or
subb
nop
xor
idiv
orb
lahf
xchg
shll
jl
loope
dec
subb
outsb
mov
sub
pop
aas
dec
sbb
test
divl
pop
ljmp
pop
pop
jbe
shl
in
and
adc
mov
repz
idivb
orb
bound
stos
sub
mov
adc
rcl
push
push
inc
repz
sub
mov
dec
mov
setle
mov
iret
add
push
movsl
cld
jecxz
jg
mov
mov
add
or
mul
lock
aam
xchg
test
xchg
jmp
push
imul
adc
lock
push
mov
xchg
pop
ss
pop
push
add
rcll
ret
add
orl
sbb
pop
test
xchg
push
bound
mov
mov
jge
mov
mov
aam
inc
out
sti
xchg
popf
mov
and
in
imul
inc
jmp
xchg
outsl
mov
jns
pop
repz
or
sub
adc
pop
imul
in
add
lods
cmpsl
xchg
add
inc
int3
out
repz
xchg
scas
dec
hlt
ret
cmp
nop
sahf
or
xchg
adc
cld
out
sbb
icebp
sbb
push
pusha
push
cltd
fsubs
pop
mov
adc
and
inc
sub
call
out
push
add
push
das
lods
pop
int3
fidivs
fisttpl
jns
adc
jno
or
cmc
or
adc
push
sub
lret
sahf
adc
iret
or
mov
sbb
mov
cmp
scas
pop
pop
in
mov
repnz
pop
xor
popl
sub
in
inc
cmpsb
divb
sti
and
xchg
sub
test
cmp
aad
lret
jl
aas
xor
pop
sub
rcr
adc
out
pusha
xchg
xchg
testb
insb
add
stos
mov
lret
test
popl
movsb
adc
pop
jnp
loopne
mov
jbe
jg
add
mov
pop
mov
or
dec
in
xchg
and
add
repnz
sahf
je
cmp
inc
ret
test
lods
pop
shl
aas
lahf
cmp
pop
mov
adc
dec
inc
xchg
clc
mov
mov
xchg
push
lods
mov
or
sub
scas
add
in
add
mov
mov
div
out
call
xor
sbb
sbb
or
loop
lcall
xchg
sbb
mov
or
push
pop
movsb
mov
cmpsb
mov
in
inc
xlat
jp
cltd
jbe
and
shll
adc
pop
or
pop
add
xor
repz
inc
cli
mov
jg
data16
jb
push
inc
jmp
unpcklps
fcomi
in
fists
aaa
cwtl
xchg
gs
test
inc
repz
idivb
pop
dec
or
push
inc
jns
test
ds
add
push
adc
add
xor
fcoms
out
inc
mov
outsl
mov
dec
rolb
cwtl
inc
jmp
lea
int3
sbb
push
nop
mov
data16
int3
shr
test
add
cmpsb
dec
and
mov
imull
and
cmp
mov
in
mov
out
jecxz
add
jo
xchg
dec
cmp
repz
testl
arpl
cmp
orl
push
sarb
cltd
loope
test
add
jns
ljmp
push
or
pop
cmp
adc
push
push
out
movsl
sub
out
sbb
loop
rorl
rorb
push
stos
jmp
cmpsl
dec
pushf
pop
xchg
xchg
and
mov
cmp
lea
jecxz
mov
arpl
lock
jbe
inc
mov
out
sub
es
outsb
in
mov
or
dec
sbb
mov
adc
mov
jae
dec
pushf
jge
daa
mov
pop
dec
fdivr
sub
adc
mov
or
sbb
icebp
sub
push
mov
movsb
pop
movsl
xor
imulb
test
stos
mov
mov
push
insb
add
sbb
mov
cmp
or
mov
push
ss
scas
outsb
fucom
rcll
push
addr16
pop
lcall
pop
es
mov
adc
xchg
fcoml
daa
mov
xor
insl
iret
loop
cwtl
lods
add
cmpsb
sub
xchg
jne
fs
and
ret
xor
mov
into
sub
mov
adcb
cmp
fildl
inc
cmp
sbb
mov
ss
loopne
pop
cmp
subb
pop
clc
loopne
mov
ja
popa
popf
mov
sbb
shll
jecxz
iret
jno
push
test
lods
shrb
sub
movsb
je
adc
xchg
inc
rolb
xchg
stos
xchg
mov
push
xchg
mov
inc
xlat
and
jne
pop
popf
jecxz
mov
xchg
icebp
mov
sub
sahf
movsl
add
mov
das
adc
test
insl
lds
lods
adc
sbb
fbld
xchg
mov
xchg
sbb
jbe
sbb
xor
pop
mov
int
outsb
inc
mov
neg
popf
xor
add
sbb
popf
ljmp
fsubrp
push
repz
pop
dec
cltd
inc
add
int3
pop
mov
lock
pop
xchg
or
dec
mov
sbb
xchg
cli
stos
and
and
cmp
shll
adc
jp
sahf
or
jl
and
and
add
in
ret
mov
mov
add
cmp
fsubs
and
iret
adc
scas
arpl
in
jo
pop
fwait
cmpsl
andb
in
xchg
mov
aas
mov
fisubrl
ficoml
dec
xchg
pushf
ret
adc
adc
sbb
insl
cmpsl
subb
arpl
or
outsb
test
mov
callw
into
push
xchg
lock
add
pusha
aaa
pop
pop
cld
ljmp
adc
insb
sub
out
fdivrl
pop
addr16
sub
cmpb
out
and
cld
ror
movsb
sub
and
ds
call
leave
xor
in
loop
adc
mov
mov
repnz
sub
inc
in
clc
or
in
iret
out
fwait
jge
adc
lods
pop
ja
xor
mov
fnstcw
xchg
jmp
cltd
mov
call
out
mov
cld
out
or
outsl
jne
pop
push
jge
mov
inc
sbb
incb
cmp
mov
andl
sbb
sahf
mov
pop
mov
nop
roll
cmpl
or
jae
xchg
push
std
pop
ficoml
jo
das
ss
iret
pop
fcompl
sub
mov
in
inc
push
arpl
inc
or
and
sahf
mov
cmp
test
ds
lcall
sub
rcrl
leave
xchg
sbb
in
push
leave
jnp
in
xchg
outsb
sti
pop
fstpt
or
mul
daa
add
test
test
fninit
mov
xor
insl
dec
xchg
repz
inc
sub
movsl
lret
push
frstpm(287
add
ret
push
int3
test
mov
adc
out
imul
cmp
clc
cld
dec
loopne
mov
or
push
jge
ds
mov
dec
and
and
in
lret
inc
and
and
jg
xor
mov
shlb
insb
dec
pop
jo
movsl
fildl
xchg
out
dec
in
leave
xchg
cmpsl
lahf
mov
mov
cltd
cmp
leave
sbb
or
inc
stos
mov
and
mov
jns
or
cmp
pop
adcb
cmp
dec
sub
jecxz
lods
pushl
push
lahf
shl
xchg
cli
outsb
insb
fs
lret
pop
cmp
sbb
into
mov
sbb
sbb
bound
xchg
out
jp
popa
arpl
test
movsb
or
or
fcmove
test
cmpsl
push
dec
int3
or
mov
scas
push
mov
add
iret
out
mov
fwait
into
arpl
sbb
xchg
pop
outsl
cmp
or
pop
mov
and
mov
out
or
cmp
add
fstp
es
aaa
cmpsb
add
push
cmc
push
repnz
out
imul
sub
addr16
movups
ljmp
out
aas
enter
mov
xchg
and
jb
mov
adc
xchg
iret
ss
orb
je
movsb
inc
jnp
std
imul
dec
cltd
fimuls
xchg
pop
lret
push
adc
pop
and
movsl
std
stc
mov
les
xchg
mov
mov
aas
mov
jmp
xchg
pop
add
adc
pop
sbb
push
out
xchg
sub
mov
inc
mov
hlt
scas
iret
stos
popa
and
mov
pop
mov
mov
das
mov
cmc
test
mov
addr16
xor
rcll
arpl
cmpsb
xchg
add
xchg
fstl
andb
sub
sahf
insb
in
out
mov
jnp
cmp
fldt
jno
dec
cltd
xchg
push
fdivl
ret
fdivl
in
fidivs
or
outsl
aas
push
in
dec
mov
mov
in
fsubrl
pop
pusha
cmc
pop
ljmp
mov
push
cltd
xchg
xor
inc
add
stos
aad
mov
dec
les
add
ss
push
ss
test
adcl
xchg
inc
xchg
mov
inc
jge
imul
inc
insl
ja
xchg
mov
jl
faddl
fcompl
std
movsb
cmpsl
clc
adc
repz
into
mov
ret
dec
clc
or
xor
cmp
jno
mov
jge
insl
dec
adc
sub
jecxz
sub
call
add
insl
sub
fidivrs
mov
pop
adc
jns
sbb
or
add
scas
mov
fisttpll
jns
cmp
fucomp
test
cmp
dec
pop
cld
xchg
pop
stos
mov
mov
nop
adc
mov
bound
test
mov
jne
mov
sbb
loope
arpl
jno
orl
cli
add
ret
mov
sbb
dec
idivl
fwait
lret
mov
ja
test
ss
mov
sbb
mov
mov
fs
scas
adc
cmpsb
pop
cmpsl
or
or
movsl
inc
lahf
xchg
push
sbb
mov
iret
cmp
pop
mov
add
inc
out
or
xchg
jne
movsb
ret
dec
xchg
imul
adcb
insb
xchg
clc
cwtl
pop
sahf
mov
test
cmp
cmp
jge
jl
cli
cmp
or
in
cmc
inc
add
add
int3
jg
movsl
and
sbb
pop
mov
or
clc
shrl
aad
ja
sub
sti
push
ljmp
xchg
jno
mov
xchg
cli
das
push
fistpl
xor
pop
hlt
hlt
addr16
test
mov
incl
movsl
jb
ficoml
mov
iret
mov
ret
mov
mov
jno
dec
cmc
stc
out
popf
sbb
sbb
cmpb
dec
mov
std
hlt
arpl
push
mov
jge
inc
jno
inc
xchg
pop
mov
pop
and
mov
and
movsl
mov
mov
ret
dec
or
imul
mov
xchg
xor
out
xchg
pop
mov
std
shll
or
jne
xchg
jmp
das
cwtl
cmp
inc
adc
stos
stos
lret
addr16
ret
dec
adc
loop
mov
dec
jg
or
icebp
jns
out
scas
subl
push
out
add
and
repnz
scas
pop
in
jl
hlt
mov
dec
sti
fsub
js
clc
push
mov
cwtl
push
inc
push
addr16
adc
dec
ss
lcall
stos
in
xchg
mov
shll
xchg
sahf
inc
iret
cmp
cmp
dec
lock
ds
mov
mov
lds
outsl
inc
inc
das
xchg
lret
dec
test
push
es
adc
adc
cwtl
loop
movsb
push
fwait
call
mov
adc
or
mov
fnstenv
push
dec
dec
cmp
adc
push
sbb
sub
xchg
aam
pop
mov
sbb
insl
int3
xchg
pop
and
xchg
adc
cs
push
mov
icebp
dec
pop
xchg
imul
into
mov
xor
push
dec
jns
add
jmp
mov
sbb
add
and
mov
mov
and
add
scas
fcoml
fsubrs
mov
pop
xchg
jp
scas
imul
cli
popf
pop
outsb
mov
mov
xchg
shlb
repz
lods
push
push
cmc
mov
and
mov
add
xchg
scas
les
mov
int
test
jecxz
frstor
loope
dec
fxch
cmp
aam
jb
sub
cmp
push
ficompl
pushf
add
pop
jno
js
sbb
sbb
lds
xlat
imul
mov
cmp
scas
and
in
pop
push
adc
std
xor
inc
xor
sbb
ret
and
mov
sbb
and
insb
jo
push
jno
dec
push
jb
adc
movb
or
movsb
ja
mov
push
mov
aaa
adc
jle
dec
add
rorb
enter
and
mov
mov
mov
enter
mov
mov
ss
inc
mov
sbb
cmp
sbb
test
pop
cli
inc
push
adc
das
bound
mov
jb
jecxz
sub
adc
in
mov
and
mov
lock
pushf
xor
gs
push
dec
adc
dec
dec
xchg
leave
mov
sahf
jns
fs
aad
jbe
fwait
dec
nop
test
cwtl
clc
pop
sahf
cwtl
test
test
push
jnp
aaa
roll
jmp
mov
or
sbb
jne
mov
cmp
push
mov
repnz
arpl
cmp
lds
movsl
jl
insb
test
lods
inc
fdivl
in
add
cmp
sub
pop
mov
movsl
jl
insb
test
lods
inc
fdivl
in
add
mov
mov
movsl
jl
in
test
lods
inc
fdivl
in
add
cmp
sub
pop
mov
movsl
jl
insb
test
lods
xor
pushf
cli
mov
sub
sbb
or
cmp
push
jp
dec
jmp
mov
pop
ljmp
cltd
sub
sbb
push
leave
jp
dec
jmp
mov
pop
ljmp
cltd
sub
jnp
mov
sub
or
jne
jns
ror
imul
sbb
mov
ret
clc
aad
pop
push
shll
stc
test
dec
push
jg
ret
in
pop
jbe
loopne
and
and
ss
dec
adc
pushf
stos
or
pop
loop
jp
cmp
cltd
jl
mov
push
push
dec
addr16
jp
iret
lods
loop
out
or
pop
dec
gs
cltd
mov
dec
lds
push
test
inc
jecxz
in
imul
push
cmp
mov
inc
jae
mov
cld
jbe
cmc
test
jp
dec
push
movsb
loope
or
mov
lods
fidivrl
ret
cmp
int3
repnz
lods
push
sub
dec
call
mov
pop
ljmp
cltd
sub
sbb
push
jp
dec
jmp
sti
push
mov
sbb
or
icebp
push
cmp
outsl
int
lods
sub
adc
iret
dec
fisttps
popa
lcall
adc
rcrl
xchg
add
jnp
sbb
xor
pop
clc
or
sbb
dec
cli
jns
imul
mov
push
jp
dec
jmp
mov
pop
ljmp
cltd
sub
sbb
push
jp
dec
jmp
shlb
inc
adc
mov
shlb
fdivs
in
arpl
push
mov
cmp
push
add
dec
pop
in
and
in
sbb
xchg
into
incl
push
frstpm(287
jno
push
lsl
xchg
pop
es
pop
sbb
dec
aad
popf
inc
push
mov
mov
pop
lock
jp
loopne
add
add
xor
and
jmp
repz
mov
jge
add
stos
sub
pop
aaa
aam
mul
loopne
les
cmp
mov
arpl
sbb
sbb
jmp
mov
pushf
shlb
inc
shll
iret
push
stos
out
scas
scas
adc
test
fisubrl
or
je
aaa
mov
fisubs
stc
lahf
aaa
aaa
es
xchg
clc
mov
or
call
mov
test
call
cld
mov
xchg
dec
cmp
pop
ficomps
out
pushf
and
insb
aam
push
jbe
mov
lret
dec
dec
adc
cld
mov
push
inc
dec
lds
xor
add
popa
cli
aad
cwtl
jns
xchg
push
sub
arpl
mov
dec
iret
andl
pop
aas
add
sub
push
jge
mov
dec
mov
test
jb
dec
daa
inc
adc
and
mov
dec
cmp
testl
jge
and
mov
mov
pop
out
add
dec
cwtl
out
pop
arpl
cmp
loop
insb
lret
lcall
incl
fists
xor
mov
xor
jb
sub
mov
int3
dec
jmp
popf
inc
pop
dec
mov
dec
stos
mov
repnz
leave
repnz
cmp
ja
out
ja
add
dec
jle
lods
stc
addl
inc
fsin
pop
jnp
and
int3
mov
add
inc
cmpsb
and
int3
adc
inc
xor
jnp
leave
jbe
shll
in
iret
or
or
loope
jmp
stc
and
shll
repnz
inc
sbb
sbb
and
jns
int
out
aad
std
sbb
push
adc
addr16
test
es
xor
jno
out
jno
jae
sub
fmull
dec
jmp
mov
add
out
mov
or
and
xor
and
inc
adc
rcll
daa
test
out
test
add
mov
xchg
sti
mov
sub
lretw
fs
dec
pop
and
and
push
adc
and
lea
push
and
out
lock
xlat
cli
pop
das
out
xchg
lods
jo
loop
adc
mov
popf
jg
stos
mov
mov
push
lahf
bound
cld
sti
jb
scas
imul
xchg
push
add
mov
jne
or
or
js
and
sub
test
jns
sahf
jns
pop
mov
push
jbe
add
divl
iret
lea
inc
mov
or
or
mov
incl
daa
ss
and
cwtl
dec
or
cmpsl
dec
dec
lds
xor
popa
gs
jl
lahf
in
sbb
stc
cwtl
mov
xchg
divb
call
mov
les
mov
stos
repnz
sbb
sti
pop
xchg
addb
sub
pop
xor
sbb
xor
decb
inc
push
mov
adc
dec
jmp
jmp
push
cli
xchg
sti
out
addr16
lret
dec
jl
adc
or
dec
fcoml
xchg
inc
sahf
out
addb
int
movsl
mov
or
popa
pop
subb
arpl
sbb
inc
mov
or
cld
repnz
jns
jg
mov
test
push
outsl
jecxz
cwtl
mov
rorb
ret
fs
lret
mov
mov
imul
push
jecxz
dec
and
ror
pop
adc
mov
lock
jg
fmulp
push
inc
es
call
out
mov
scas
insb
dec
jge
popa
mov
and
jb
xchg
cmp
mov
das
scas
loopne
outsl
addr16
mov
cmc
sub
cmpsb
sbb
fwait
test
and
nop
imul
mov
push
ret
popa
sarl
popa
std
mov
test
jnp
iret
lea
sti
test
dec
add
nop
jne
mov
adc
bound
std
or
outsb
xchg
int3
imul
dec
stos
addr16
loop
add
lret
and
leave
scas
daa
cmp
push
dec
mov
lea
lods
repz
imul
inc
cmc
roll
sti
push
ret
jne
fucomp
ret
cmpsl
pop
mov
or
ja
and
pop
push
xchg
mov
inc
jno
and
cmpsl
cmp
fldenv
adc
aas
je
adc
dec
mov
inc
or
adcb
push
scas
add
xchg
pop
jmp
mov
and
hlt
iret
enter
jo
test
es
mov
mov
and
adc
int3
aad
mov
jmp
movsl
mov
inc
cmp
mov
das
loop
sub
jg
xchg
jnp
icebp
jb
or
xchg
jns
hlt
xchg
fsubp
sub
mov
hlt
sub
dec
incl
mov
or
fisubrs
dec
shrb
xchg
test
push
xor
movsl
cmp
es
notl
hlt
dec
pop
xorl
or
sub
push
mov
or
ljmp
lds
push
aaa
jno
imul
std
jl
mov
xorl
movsl
jle
mov
xchg
pop
push
data16
cltd
mov
push
int3
popa
jno
pusha
mov
stos
inc
cwtl
andl
jne
pop
or
cwtl
push
jmp
jle
test
pop
and
push
add
rcl
mov
inc
iret
fdivl
sbb
call
jl
mov
mov
addr16
lret
xchg
pop
movsl
or
test
mov
dec
lahf
push
ds
jns
fcmovu
in
lret
fcompl
mov
out
push
pusha
add
xor
xchg
js
pushf
outsl
mov
lods
adcl
pop
loop
and
push
mov
faddp
shr
int3
sub
loop
cmc
sti
jo
mov
jecxz,pt
push
addr16
sub
sbb
lods
sahf
nop
hlt
push
jmp
popa
icebp
or
push
add
push
mov
leave
mov
frstor
cmc
out
sbb
inc
mov
push
shl
das
cmp
jnp
mov
cli
in
mov
xchg
repz
call
dec
les
cmpsb
pushf
cmp
loope
inc
lea
mov
xchg
mov
imul
imul
das
fs
scas
mov
and
xchg
popa
incl
pop
jno
push
mov
push
fstpl
pop
add
in
xor
test
stc
dec
fadds
aam
xchg
xchg
xlat
mov
lea
ja
repnz
loope
mov
outsl
jo
inc
or
push
out
shl
add
jg
out
dec
jae
jbe
mov
mov
xchg
mov
out
fsubr
frstor
xchg
xchg
lds
lcall
in
dec
test
jl
and
push
mov
scas
sbb
outsb
sbb
sbb
cmp
lea
dec
std
xlat
and
insb
push
mov
push
adc
or
lret
cmp
sub
mov
cld
adc
or
push
outsb
xchg
rclb
push
and
or
sub
shr
in
into
sbb
xchg
mov
push
xchg
dec
inc
mov
mov
xor
in
dec
lea
xchg
mov
fldln2
dec
cmp
mov
cld
mov
les
pop
push
popf
cmpsl
xorb
dec
jmp
lcall
jecxz
adc
add
dec
sub
inc
push
xor
cmp
fisubrl
xchg
cli
mov
scas
nop
into
inc
fidivl
inc
fucomi
leave
pop
rclb
clc
into
and
xor
jne
cmpsl
loop
xchg
enter
imul
icebp
in
rclb
hlt
push
inc
inc
cmpsb
jecxz,pt
lods
ret
movsl
push
push
pop
xor
in
inc
lods
aaa
stos
lds
jnp
test
sahf
push
cmpb
dec
push
xchg
cmp
and
xor
adc
or
lcall
inc
jp
sub
fucomip
dec
dec
xchg
loopne
mov
sti
adc
popf
daa
test
cmp
addr16
fdiv
insl
cmp
enter
loop
fdivp
jp
push
add
mov
sbb
rcrb
pop
cmp
lret
adc
mov
fisttpl
sub
test
pop
push
and
jo
stos
fldt
and
sbb
gs
sarl
add
push
test
ja
inc
daa
sub
and
inc
jae
stc
sti
sub
daa
jne
test
cmpsl
shll
inc
out
daa
outsb
decl
and
insl
imul
cltd
pop
ret
push
imul
dec
mov
cmp
insb
pop
cmp
pop
pop
loope
movsl
fistps
arpl
ficoml
dec
sbb
imul
sub
lcall
insl
dec
bound
pop
and
push
js
adc
mov
test
rcll
sub
imul
fnsetpm(287
lods
mov
outsb
add
jg
dec
sub
xor
inc
mov
shl
cltd
mov
or
ret
into
jno
jecxz
test
push
jne
add
bound
faddp
mov
adc
das
jbe
xchg
cmpsl
xchg
mov
sub
popa
sub
mov
das
repz
hlt
pop
xchg
loop
cltd
idiv
ror
inc
je
mov
push
lret
dec
orb
and
mov
fisubrl
js
add
fs
xor
dec
inc
insb
jp
and
dec
fdivl
adc
xchg
fstpl
pop
mov
xchg
add
negb
test
movzwl
je
and
mov
aaa
in
mov
add
mov
pusha
xlat
mov
push
mov
lds
sub
aaa
movsl
sub
enter
mov
lock
jl
or
stos
fidivrl
cmc
std
sbbl
mov
push
mov
lods
iret
mov
pop
jnp
xchg
in
xlat
cmp
pop
test
imul
shll
jae
divb
incb
dec
push
outsl
sbb
addl
or
push
sbb
cmp
adc
mov
jmp
test
mov
xchg
pop
popf
inc
mov
or
xorb
out
or
les
xor
add
sbb
lock
mov
out
dec
out
movsl
sub
fists
push
dec
sbb
clc
cmp
testl
mov
xor
mov
mov
jp
sti
mov
cmp
or
cmp
xchg
mov
mov
jp
in
xchg
pop
ficoms
adc
push
pop
cmp
and
mov
mov
hlt
gs
aam
cmp
into
loop
das
jbe
test
mov
test
fdivrs
shr
insb
mov
hlt
pop
jecxz
and
mov
stos
addl
lret
orl
pop
std
jge
cmp
mov
mov
mov
jno
add
out
pusha
aaa
aaa
xor
mov
mov
cltd
fmul
loopne
xor
stos
lahf
insl
scas
mov
inc
pop
sbb
fnstsw
je
jp
jb
jne
or
mov
inc
test
mov
insb
cmpps
popa
pop
es
xchg
loop
ret
icebp
mov
push
out
lret
inc
cmp
inc
fmull
inc
adc
fcmovne
test
pop
xor
fdivs
cli
or
or
jne
jae
shrb
pop
xchg
into
add
insl
sub
mov
ret
sbb
sbb
mov
cmp
movsb
das
inc
into
adc
jnp
xchg
stos
sbb
mov
cwtl
pop
dec
nop
or
je
and
fdiv
mov
mov
bound
jno
adcl
bound
mov
adc
xor
aad
and
lahf
xlat
push
bound
adc
cmp
inc
lret
push
cld
mov
xchg
xor
sbb
jo
sub
js
pop
fwait
or
fldl
data16
imull
outsl
add
pop
mov
add
cld
cmp
fidivs
sarb
cld
into
and
adc
out
out
in
dec
imul
popa
ret
xor
mov
clc
cwtl
hlt
mov
push
mov
repnz
out
popf
mov
ret
pop
sub
cmp
ljmp
or
xorl
and
sbb
mov
call
jno
or
jns
lods
inc
sbb
or
mov
aaa
ss
popa
mov
imul
adc
aas
enter
in
mov
add
inc
out
inc
pushf
shll
loopne
and
mov
shll
mov
xchg
mov
or
dec
enter
push
sti
or
fmul
out
jmp
icebp
or
jg
enter
adc
push
or
aas
jnp
and
mov
sbb
lock
aad
adc
xor
adc
cltd
sub
lods
lahf
mov
gs
jb
dec
mov
mov
outsl
mov
jle
inc
call
inc
jbe
xchg
test
mov
std
test
and
adc
xor
fstpl
mov
pop
add
ret
xchg
and
cmc
lcall
rorl
iret
mov
sbb
cmp
enter
add
jg
roll
movsb
push
inc
adc
inc
xchg
pop
jmp
and
call
jbe
pop
in
xor
push
sbb
sub
insl
cmpsl
in
mov
es
jne
pop
aas
inc
imul
stos
stc
jo
or
dec
adc
lock
insl
xor
les
adc
loopne
lea
scas
mov
and
ljmp
mov
cwtl
clc
or
pop
or
ficoml
movsl
mov
inc
jge
aaa
out
sub
fisubrs
clc
and
inc
lock
inc
jecxz
pop
adc
and
push
sub
dec
fnstsw
leave
clc
fwait
xchg
sbb
inc
push
pushf
adc
aas
hlt
adc
ss
xor
in
mov
dec
fbstp
add
jg
adc
sub
add
lret
or
inc
lods
fadds
mov
cmpsl
mov
shr
cmp
sub
les
popa
outsb
lahf
rcll
pop
dec
jl
scas
pop
out
scas
add
inc
xchg
test
adc
cld
push
in
movsl
sbb
and
push
and
cld
cmp
icebp
mov
push
stos
mov
fcompl
loopne
adc
jns
mov
cmpsl
jns
jmp
add
divl
int3
mov
into
das
jae
adc
jns
xor
xchg
inc
mov
push
inc
mov
fadd
sub
dec
jecxz
mov
xchg
push
xor
pop
repz
aas
into
mov
fsub
inc
pushf
add
clc
cmp
or
push
loope
cmpsb
jle
js
mov
leave
mov
mov
xor
scas
in
and
les
sub
loopne
add
mov
mov
pop
push
and
and
jae
bound
xchg
daa
mov
test
or
mov
lcall
push
lock
cld
push
pop
and
movsl
pop
sub
cmp
cmc
jmp
inc
loop
and
and
arpl
dec
or
in
xchg
add
sub
xor
inc
adc
push
xchg
mov
and
inc
clc
xchg
sahf
stc
sub
xchg
nop
inc
xchg
imul
push
mov
rcl
ret
xor
and
jmp
dec
into
gs
cmpsl
out
pop
imul
lock
cs
mov
mov
adc
mov
xchg
jnp
ss
mov
fs
ret
ret
sub
addr16
lcall
es
push
retw
fnsave
mov
or
and
dec
adc
shl
pop
repnz
push
js
sti
jp
push
dec
stos
in
push
xchg
arpl
insl
lret
hlt
sbb
iret
or
data16
sbb
dec
in
test
outsb
loope
xchg
lods
movl
xchg
rcl
push
jne
mov
xchg
insl
cmp
mulb
out
jge
loop
cmp
add
lcall
pop
push
mulb
xor
and
dec
test
mov
add
shlb
scas
jp
iret
imul
sahf
cmc
xlat
inc
cmpb
aaa
rol
in
in
sti
clc
cmp
fwait
ret
pop
push
add
in
mov
mov
cmp
inc
xchg
mov
in
mov
into
ret
pop
aas
mov
repnz
enter
sti
cmpsl
push
loope
xlat
dec
dec
cmpl
mov
sub
push
rcr
dec
dec
dec
pop
xor
sbbl
inc
gs
xlat
scas
lods
imul
push
adc
hlt
ljmp
sub
add
test
or
xorl
add
fiadds
call
cltd
and
scas
cmp
xchg
out
pop
inc
pop
sahf
mov
lea
push
and
lock
psllw
cmp
xor
ja
xchg
cmpl
sub
pop
int
addb
movsl
cmc
stos
fld
pop
adc
jmp
addb
jge
xor
cld
in
cld
jb
pop
push
popa
stos
pop
ror
int
lea
scas
in
xorl
add
push
outsl
imul
and
loop
shr
out
ret
dec
and
stos
bound
sarb
dec
shll
je
pop
push
add
xor
adc
and
inc
pop
mov
push
push
das
dec
or
call
out
mov
add
or
divb
ja
lcall
roll
and
mov
xchg
inc
adc
or
bound
dec
lret
jo
push
movl
lret
fistpll
dec
push
and
aaa
ret
or
pop
movsl
cltd
hlt
push
adcl
pop
ror
in
mov
shr
pop
aaa
loope
or
sub
xchg
cmpsl
movsl
or
outsb
mov
dec
ds
xchg
pop
fistpl
iret
mov
mov
jecxz
lods
data16
xlat
arpl
sbb
cltd
mov
push
cli
sbb
enter
add
lods
daa
push
xchg
sbb
repnz
xchg
xor
out
inc
mov
ret
stos
or
test
mov
movsl
jno
in
mov
cmp
daa
rcrl
decb
rcl
daa
in
ljmp
int
cmp
add
lock
or
pop
lds
push
fdivrs
sbb
jno
aaa
adc
push
pop
or
icebp
xor
and
cs
movsl
fsubr
push
shll
mov
rolb
cwtl
and
sbb
sbb
mov
into
add
or
scas
jne
andl
lock
out
rcl
push
lods
pop
push
or
xchg
jns
sub
xchg
subl
lahf
add
push
lds
fisttps
xchg
add
adc
in
mov
push
rclb
jl
or
mov
mov
out
pushf
mov
roll
fidivrl
outsl
lret
pop
cmp
push
cwtl
sub
stos
xor
pusha
jge
fs
hlt
test
pop
outsl
shrl
leave
cmp
shll
add
mov
out
out
mov
or
sbb
aaa
push
cmp
iret
sbb
push
cltd
out
into
push
push
sete
mov
cmpsl
pop
stos
pop
int3
sub
dec
pusha
out
mov
mov
mov
push
gs
xor
inc
xor
xor
dec
cmc
std
hlt
add
mov
in
push
outsl
ficoms
loopne
pop
sbb
out
mov
clc
dec
scas
pop
aas
lods
jnp
arpl
dec
pop
nop
inc
sbb
xor
inc
sbb
push
stos
mov
lods
movhps
xchg
rclb
cwtl
cmp
pop
outsb
aad
add
out
xchg
xchg
mov
rolb
mov
mov
out
cwtl
mov
jnp
xor
data16
cmp
pop
and
and
sbb
push
and
lcall
inc
push
scas
pop
sub
fwait
outsl
add
imul
mov
int3
psadbw
imul
pop
adc
inc
push
dec
jp
xchg
mov
lcall
imul
mov
push
jp
dec
jmp
mov
pop
ljmp
cltd
sub
sbb
push
jp
dec
jmp
mov
pop
ljmp
cltd
sub
sbb
push
jp
dec
call
mov
pop
ljmp
cltd
sub
insl
scas
loop
test
mov
movsl
ja
xchg
in
sbb
or
jo
int3
fldenv
ljmp
dec
cmp
lret
std
sub
sbb
or
jp
push
pop
popf
dec
stc
ljmp
dec
cli
push
mov
loopne
stos
in
pushf
jne
iret
push
and
mov
add
fisubrl
inc
lods
imul
cwtl
icebp
mov
es
orl
xchg
lahf
add
lahf
pop
sti
push
ss
cld
and
xchg
push
jno
into
iret
ds
push
cmp
jg
jnp
pop
sbb
subb
call
repnz
sbb
cli
lock
call
add
fstl
std
addr16
jne
mov
dec
jb
cmp
mov
mov
cmp
ror
cmc
xor
add
test
add
gs
mov
repnz
int3
scas
div
cli
xchg
cs
mov
inc
jge
add
jg
ljmp
std
sub
jp
lods
pop
inc
repnz
inc
dec
xchg
add
ficompl
pop
in
pop
sahf
fs
leave
pop
ret
sub
fstpt
jmp
lret
and
push
test
pop
lea
mov
call
ss
sbbb
cmp
cmp
sub
jl
dec
stos
sbb
aas
fldcw
pop
popf
dec
lea
pop
mov
cmp
lret
std
sub
sbb
or
jp
push
pop
popf
dec
lea
pop
mov
cmp
lret
std
out
cmp
and
mov
ret
cs
stc
mov
push
out
pop
jns
mov
jns
jecxz
sub
dec
or
pop
cltd
mov
imul
pop
sub
mov
mov
and
daa
lods
fisttps
jecxz
or
and
mov
pushf
dec
dec
adc
iret
and
xor
pop
add
int3
mov
ds
add
enter
nop
fsub
imul
add
xchg
sbb
leave
lods
pop
sbb
out
push
movsb
jecxz
nop
xor
andl
cmp
mov
out
jp
pop
pop
xor
dec
mov
push
and
lds
or
mov
movsb
loope
mov
pop
pop
xor
aas
mul
push
arpl
mov
clc
pop
paddusb
jae
gs
sub
mov
sbb
testl
scas
call
cwtl
mov
mov
jl
push
sbb
mov
into
out
jge
mov
mov
xlat
push
and
les
and
jb
jp
and
movsl
sub
repnz
push
pop
jns
inc
push
pop
orb
jae
jge
sub
das
xor
sbb
rcl
in
cwtl
out
mov
lods
repnz
movsl
jnp
or
pop
loop
mov
test
xchg
cmp
scas
sub
dec
pop
cmpl
out
jle
in
idiv
out
dec
outsl
jmp
in
call
and
movsb
mov
psubb
in
pop
jnp
mov
mov
mov
loope
outsl
dec
std
cmovae
lds
jne
push
dec
insl
cmp
or
test
pop
sub
mov
mulb
inc
push
call
xchg
xor
loopne
add
pop
adc
sbbb
mull
scas
mov
mov
xchg
loopne
dec
mov
gs
mov
or
movsl
test
out
add
add
mov
cld
jl
pop
jno
sub
data16
loopne
mov
scas
sbb
adc
mov
and
out
incl
nop
dec
xchg
xchg
aas
outsl
sti
mov
sub
ss
lds
insb
sbb
cmc
gs
jno
cmp
ficoms
xchg
or
inc
xchg
adc
mov
mov
subl
mov
ret
dec
push
insb
push
stos
lock
jecxz
pop
and
stc
int3
repz
out
xor
ror
subl
stc
ret
mov
add
cld
insl
gs
dec
test
lcall
sbb
in
cs
push
jne
push
ljmp
lahf
xchg
cmpsb
or
cmc
fdivrs
insb
jne
and
les
dec
fisubs
loope
aaa
out
mov
popf
ret
mov
out
stos
pop
mov
aas
outsb
push
out
das
pop
fwait
cmpsb
add
cmp
testl
lds
mov
mov
cmpsb
sti
dec
sbb
pop
ja
gs
pop
test
jbe
jne
lss
mov
xor
and
out
lahf
push
aaa
sub
mov
pop
add
xchg
scas
sbb
fadds
in
mov
into
and
mov
cmp
add
mov
cmp
stos
std
add
or
jp
mov
cmp
jne
jl
mov
mov
adc
aaa
pop
loope
or
sbbb
xor
add
mov
adc
push
push
lock
fidivl
sahf
sub
adc
inc
inc
adc
mov
xlat
and
dec
popf
push
mov
jno
pop
pushf
adc
push
adc
shlb
mov
xchg
mov
cwtl
test
jp
lcall
mov
mov
fmuls
push
test
jns
filds
es
push
out
or
stos
repz
nop
sbb
int3
cmpsb
jns
xchg
pop
scas
out
mov
pop
clc
data16
out
arpl
movsl
fmul
rcrb
nop
andl
xchg
popa
push
lods
stc
dec
wrmsr
mov
out
int
cltd
xor
outsl
addr16
rorl
dec
jp
pushf
aam
sub
out
sbb
test
cmp
sub
mov
repz
js
ss
or
mov
mov
cmp
or
and
push
cmp
xor
scas
icebp
mov
loop
rolb
add
add
lods
repnz
shlb
cs
sub
cmpsl
inc
iret
and
lock
lahf
nop
xor
xlat
fucomi
aaa
jbe
push
inc
aam
push
aaa
mov
pop
test
lods
pop
imul
lds
pop
flds
sti
adc
xor
scas
cmpsb
sbb
and
mov
int3
push
fmuls
das
add
and
pop
ljmp
gs
mov
cmp
adc
jo
mov
cmp
mov
mov
sbb
mov
ficoml
imul
cmp
inc
mov
add
adc
jmp
inc
lret
insb
inc
mov
inc
push
or
rcl
jnp
mov
loop
jle
mov
idivl
aad
xor
xor
xchg
push
mov
sub
popf
movsb
adc
push
stos
push
test
dec
mov
sub
shl
xchg
add
xchg
aas
adc
xor
push
aas
arpl
rcrb
stc
cwtl
imul
mov
ja
cld
int
xchg
xor
out
cwtl
sbb
xchg
divb
pop
mov
or
daa
inc
fidivrl
aaa
ljmp
lret
jae
jnp
insl
test
scas
arpl
hlt
inc
mov
fs
xchg
out
jecxz
out
movsb
push
mov
jecxz
pop
cmp
movsl
pop
mov
adc
subl
test
sar
sub
testb
add
push
test
orl
mov
add
jmp
repz
add
xor
adc
and
cmc
mov
lock
sub
ljmp
jle
jge
cmp
outsb
and
jae
jns
test
into
adc
popf
xor
push
sub
mov
adc
addr16
sbb
std
mov
and
jge
pop
and
addr16
es
arpl
fwait
sub
jmp
mov
sti
adc
ret
dec
jae
xchg
loop
cld
pop
sarb
add
mov
movsl
xor
inc
loopne
mov
lret
clc
pop
add
mov
xchg
filds
mov
adc
imul
inc
push
leave
roll
das
faddp
and
pop
mov
lea
fdiv
aad
cmc
repnz
sbb
shr
cli
int
cmp
cmp
fdivrl
lock
dec
loope
lret
fisubrs
dec
movsl
jbe
ror
subb
mov
fidivl
push
jnp
adc
mov
test
mov
movsl
pop
mov
inc
dec
stos
out
cmp
arpl
movl
fimull
jbe
mov
adc
popf
les
mov
arpl
addb
rolb
pop
dec
popa
mov
sti
xchg
mov
lock
lcall
stos
or
sub
popa
pop
dec
dec
ljmp
lock
sbb
mov
sbb
in
pop
loop
arpl
jbe
pop
ds
push
xchg
cmp
xchg
add
lret
inc
sub
fwait
lcall
stc
dec
jge
mov
js
inc
scas
or
xorl
cs
push
jecxz
lods
hlt
mov
adc
in
addr16
mov
mov
das
push
stos
lods
imul
jg
repz
xchg
dec
jecxz
outsl
js
ja
pop
push
jecxz
mov
push
mov
mov
insb
leave
ficoml
fildll
icebp
ss
int3
dec
or
arpl
leave
ret
popf
mov
jns
mov
scas
test
jbe
sub
jne
popa
push
pop
sub
pushf
adc
ret
mov
xlat
icebp
sbb
xchg
leave
in
mov
stc
mov
movsb
jp
sbb
int3
nop
insb
adc
daa
push
dec
cld
in
inc
in
mov
push
mov
subl
and
mov
das
sahf
jo
pop
pop
loopne
inc
xchg
stc
daa
jl
xor
xchg
imul
cmp
cs
mov
inc
sub
push
loope
adc
and
mov
ja
pop
ja
in
aad
test
test
fldl
adc
lcall
jle
and
shrb
jle
mov
or
fildl
ret
jo
cltd
addl
cmp
mov
xor
in
mov
cwtl
movsb
jmp
enter
push
inc
les
cmp
scas
arpl
jo
shl
sub
or
add
imul
and
cmpsb
sub
inc
sti
mov
adc
jae
jae
and
mov
mov
inc
mov
insb
jge
xchg
inc
sub
popf
and
test
leave
sahf
sbb
sbb
push
or
inc
push
daa
sbb
rorb
mov
jb
inc
mov
out
xchg
push
mov
dec
icebp
and
test
test
fisubs
sub
xor
addl
sbb
adc
inc
push
stos
and
rol
push
popl
jae
adc
pop
sub
or
pop
incb
sbb
fsubl
dec
sbb
dec
movsb
cmp
inc
js
mov
jle
loopne
popf
or
pop
ljmp
cmp
lods
dec
scas
dec
outsb
pusha
cmp
ss
divl
les
mov
dec
cltd
push
and
imul
jno
sbb
add
repnz
adc
mov
cmpsl
stos
sub
push
scas
jge
inc
xorb
pop
imul
mov
adc
es
jns
xor
rclb
xor
xchg
outsl
push
iret
aas
push
je
sti
popf
push
xchg
or
mov
mov
mov
mov
outsb
cwtl
jp
aaa
cltd
jnp
push
mov
in
mov
sbb
ss
std
dec
fwait
lret
dec
pop
std
pop
negb
cltd
dec
push
pop
or
cmp
xor
push
mov
iret
cmp
stc
sarb
ret
aaa
sub
dec
xchg
dec
push
sub
pop
jecxz
mov
sbb
or
xchg
push
ss
mov
das
inc
mov
push
imul
mov
les
dec
sub
cmp
repz
or
cltd
xor
shrl
shlb
sbb
xchg
add
sbb
inc
xor
adc
loopne
aaa
dec
mov
dec
repz
mov
mov
push
push
xchg
inc
pop
and
jecxz
bound
scas
hlt
push
mov
sub
addr16
add
gs
rcr
mov
jns,pt
mov
aas
insb
inc
arpl
jo
rcr
or
push
lods
in
dec
cmpsb
out
rcrl
pushf
stc
hlt
jle
lds
aas
fsubrl
pop
mov
sbb
xchg
imul
pop
cmpsl
or
mov
push
jmp
repz
gs
or
add
xchg
xor
std
adc
loope
aad
movsb
leave
stos
shl
aas
xor
addb
sbb
jg
jns
movsb
xchg
mov
xchg
push
sub
clc
popf
stos
mov
cmp
jb
pop
xchg
ss
ret
sbb
xchg
imul
inc
inc
rolb
mov
cli
mov
fldt
or
scas
movsb
inc
or
adc
testb
xor
test
jle
sbb
push
loopne
jecxz
rolb
out
push
xchg
mov
push
stc
pop
mov
or
sbb
cmp
jns
xchg
sub
and
popa
and
mov
adc
test
ds
xlat
jl
rorl
ljmp
dec
adc
into
cmp
or
js
stc
enter
push
cmp
loop
inc
xchg
mov
jle
mov
gs
xor
test
pop
adc
bound
pop
ja
ret
sub
pop
mov
sbb
or
xor
sub
rcrb
das
gs
loopne
jnp
mov
dec
xchg
mov
out
int
jno
push
aaa
and
cmpsb
lea
not
pusha
add
ss
add
mov
sbb
repnz
inc
rolb
xor
xor
stos
and
sbb
adc
mov
fnsave
add
sub
insl
adc
je
aad
aam
mov
aaa
add
ds
cwtl
pusha
rcl
cwtl
or
mov
iret
dec
test
add
inc
mov
inc
or
pop
xor
sub
add
pop
mov
je
add
and
es
outsb
shrl
inc
mov
je
aas
ffreep
sti
dec
cmp
icebp
jb
fidivs
rcl
xor
mov
jbe
es
insb
iretw
dec
aaa
push
lahf
ja
cmp
fs
add
not
inc
sub
and
aaa
mov
pop
inc
ret
test
pop
lds
sarb
push
int
mov
ret
mov
mov
mov
pop
jge
and
push
mov
testl
shrb
jne
sbb
dec
inc
cltd
push
cmp
push
xor
enter
fistpl
push
pop
movsb
sti
jl
inc
xchg
xor
das
pop
paddb
or
pop
cltd
leave
mov
cmp
lods
xor
and
push
push
dec
fisubrl
ror
mov
xchg
mov
mov
inc
dec
stos
mov
cld
mov
jl
pop
adc
push
gs
inc
jae
lods
iret
roll
inc
adc
cmp
pop
push
xchg
adc
test
std
loope
ss
mov
test
sar
push
repnz
aaa
ja
mov
and
iret
or
sub
cwtl
addl
fistps
inc
mov
fs
daa
pop
sub
in
ret
mull
xchg
xor
xor
cmpsl
dec
cltd
jecxz
jbe
mov
scas
inc
jne
jno
movsl
pushf
jp
push
addps
outsl
inc
jl
out
xchg
aad
xchg
add
rcll
aad
fisubrl
insb
xchg
adc
or
inc
inc
mov
inc
add
jns
lods
mov
into
fsubrl
push
loopne
lds
addr16
call
mov
popf
jmp
insb
and
cli
inc
lds
and
dec
scas
aad
jl
vandnps
cli
mov
loope
fisttpl
pop
lret
outsl
mov
cld
shll
test
in
mov
arpl
icebp
inc
lcall
mov
dec
add
cmp
mov
sub
fnstenv
cli
and
test
mov
push
cld
inc
out
je
arpl
sbb
jo
pop
and
sub
pop
mov
xor
sub
adc
mov
iret
mov
in
mov
add
push
xor
loope
pop
pop
mov
or
add
in
sarb
push
das
insl
movaps
sbb
push
call
iret
jg
mov
push
dec
sarb
imul
push
lock
fidivs
sahf
sbb
test
jae
jecxz
xor
xor
clc
in
mov
push
addr16
xchg
and
sub
ret
mov
stos
shrl
pop
imul
add
iret
push
push
sti
cli
test
clc
or
add
mov
jle
jge
pop
push
inc
jmp
gs
push
inc
decl
out
mov
dec
stos
or
adc
inc
push
adc
pop
and
leavew
outsl
je
pop
int3
mov
cmp
stos
push
sbb
or
sbb
xor
dec
xchg
dec
sub
lods
imul
test
sub
xchg
cmp
sbb
out
gs
inc
push
push
jbe
int
insl
pop
xchg
repnz
js
push
jae
jae
mov
push
ret
je
mov
dec
sbb
pop
fbstp
dec
repnz
or
pop
mov
lcall
enter
cmp
outsb
add
xor
rcll
ret
and
pop
fwait
aad
fisubrl
dec
rorb
nop
sbb
iret
mov
out
int
cmp
repnz
neg
push
aam
sbb
mov
in
jae
rcll
test
mov
or
das
jl
cmp
pop
addr16
fcomp
jg
xor
mov
repz
mov
fcmovnu
and
jo
pop
push
sti
add
inc
loopne
outsb
inc
cmpsb
push
pop
or
pop
inc
data16
pop
sbb
push
xchg
inc
jge
mov
in
ljmp
stos
mov
scas
lahf
outsb
inc
in
ret
lret
mov
stc
and
mov
cmp
push
andb
leave
lods
nop
aam
cmpb
dec
xor
xor
popf
jo
out
test
lahf
xchg
iret
cs
nop
xor
inc
dec
mov
fists
xor
adc
out
inc
inc
adc
int
xchg
jns
ret
insl
aas
mov
mov
inc
scas
xchg
adc
cli
or
dec
aas
pop
xchg
inc
jno
out
fs
sbb
inc
add
loope
lahf
push
int
push
jne
hlt
pop
pop
lock
inc
in
popf
push
mov
adc
pop
mov
aas
ret
add
xor
cs
jae
push
imulb
xchg
popa
xor
ss
jge
jp
xchg
les
loope
test
ret
movsl
les
gs
cmpsl
cwtl
shl
jae
enter
loope
addr16
lcall
aad
xor
test
push
push
and
push
cltd
inc
fbld
inc
enter
insb
sbb
push
mov
rorb
push
sub
in
mov
push
mov
jge
pop
cmp
sub
repnz
lret
cmp
push
lret
sub
add
sbb
ret
inc
data16
xchg
dec
sbb
out
jecxz
xor
mov
insl
mov
leave
add
mov
jnp
frstor
xchg
int3
mov
gs
ljmp
fisttpll
adc
daa
addr16
jp
jp
sbb
pusha
or
arpl
push
xchg
add
adc
repz
iret
cltd
jne
push
outsb
dec
pop
add
jmp
inc
cmc
jo
jle
mov
xchg
shl
mov
gs
sub
mov
push
stos
xchg
cmp
dec
xchg
sti
subl
pop
pop
mov
add
lret
sarb
in
jns
cmp
jle
cs
in
push
mull
mov
aaa
in
push
sub
int
xchg
adcl
dec
add
mov
popf
xor
jne
cmp
imul
mov
fwait
inc
mov
adc
mov
cli
das
sub
movsb
gs
add
push
mov
movsl
push
xchg
jmp
pop
outsb
les
stc
fldt
sub
scas
test
sbb
mov
in
mov
mov
adc
or
shlb
rorb
mov
loope
fdivrs
addr16
cwtl
mov
adcl
inc
pop
mov
and
dec
pop
aad
imul
pop
adc
arpl
dec
inc
hlt
or
and
mov
mov
and
aas
pop
push
push
dec
lods
mov
mov
push
xchg
imul
pop
fisttps
xor
movsb
mov
repnz
xor
dec
aam
sti
dec
jge
mov
pop
dec
js
inc
jae
and
scas
lahf
test
enter
in
in
xrstors
shl
loop
pop
jecxz
psubusb
inc
inc
addl
jb
fs
js
scas
andl
add
fldz
insb
jbe
out
or
or
xorl
test
adc
rorb
pop
out
js
sub
or
test
jo
push
or
lahf
mov
push
jp
push
mov
pop
pusha
push
sbb
jecxz
xchg
xchg
add
mov
xchg
repnz
addr16
cwtl
rorb
and
popa
mov
addr16
mov
mov
add
call
xor
xor
in
fcmovnu
jae
fmulp
mov
int
es
clc
xor
leave
adc
inc
adc
sub
push
scas
cmc
les
xchg
pop
mov
nop
out
pop
das
pop
lods
clc
cmp
mov
xchg
inc
push
shrb
ljmp
fwait
and
cs
repz
pop
popf
push
dec
in
cmp
push
pop
popf
dec
lea
pop
mov
cmp
lret
std
sub
sbb
or
jp
push
pop
popf
dec
lea
pop
mov
cmp
lret
std
sub
jnp
outsb
add
mov
pop
mov
cmp
cli
or
xchg
frstor
int3
jp
jp
pop
sbb
push
xor
cmp
loop
repnz
repnz
loop
shrb
mov
orb
sbb
into
push
pushf
xor
pop
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
push
lea
mov
repnz
loop
shrb
mov
mov
fdivl
inc
mov
mov
je
jle
ja
jne
mov
add
dec
xlat
xchg
cmpsl
xchg
out
testb
or
mov
jmp
mov
mov
cmpl
das
rcrb
or
inc
popf
add
mov
stos
std
push
mov
add
insb
testb
bound
arpl
push
imul
pop
jg
idivl
mov
mov
sub
inc
popf
sbb
and
rdmsr
leave
sbb
jecxz
sub
rol
sbb
les
lods
addr16
int3
popa
or
inc
jp
loop
stos
mov
inc
insb
xchg
lret
xchg
cwtl
sbb
fwait
jb
data16
xchg
jnp
scas
std
lahf
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
cmp
das
fwait
cmp
arpl
push
imull
jnp
add
fldenv
sub
pop
lcall
jns
imul
push
jmp
push
cmp
or
cmp
sub
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
add
insb
lds
jl
and
dec
subb
push
inc
movd
test
and
jl
ret
imulb
dec
repnz
je
or
mov
push
fsubrl
jecxz
xchg
push
adc
jg
ds
xor
push
mov
cmpsl
hlt
cltd
ja
enter
and
dec
push
hlt
sub
xor
jg
mov
and
aad
icebp
pop
sbb
xor
les
push
or
pop
mov
cmc
sub
adc
xchg
in
sub
lea
pop
fsub
mov
cmp
testb
lods
out
pop
ja
cmpb
mov
push
inc
or
cmp
fstps
les
divb
push
jno
pushl
xor
pop
push
pop
dec
ljmp
xchg
popf
pop
ja
xor
insl
add
popa
sbb
outsb
ficoms
cli
xchg
pxor
in
or
adc
or
inc
mov
pop
call
dec
in
loopne
adc
xchg
xchg
xchg
push
in
jle
push
push
sbb
movsl
mov
add
pop
xor
shlb
loop
fildl
mov
xor
push
test
in
mov
stos
sbb
mov
mov
mov
push
aam
out
jo
mov
inc
repnz
push
mov
add
pop
push
ret
add
or
pop
es
mov
pop
cli
sub
enter
jbe
imul
jbe
in
xor
xchg
test
rcr
cmp
lahf
mov
mov
imull
popa
pop
cmp
push
jg
in
call
cmpsl
nop
leave
orb
aad
lret
or
push
mov
or
xchg
fdivs
insb
in
ror
hlt
in
rol
jnp
fwait
inc
out
push
adc
idivl
mov
jle
dec
adc
nop
call
jecxz
xchg
ret
cmp
add
sbb
lods
clc
pop
add
mov
bound
and
dec
xlat
cmp
jecxz
mov
inc
orl
jp
inc
jg
daa
in
push
jmp
dec
mov
out
and
jb
data16
out
xchg
and
mov
das
pop
cld
out
in
aad
push
std
xchg
in
shrb
jmp
fldenv
sbb
loope
xchg
shlb
pop
jbe,pt
pop
sbb
popf
mov
mov
mov
mov
out
in
mov
pop
or
scas
je
andb
push
insb
cmp
std
fdiv
outsb
popa
jae
sub
out
push
lret
pop
push
pushf
lcall
xor
repnz
js
inc
push
cs
jae
or
mov
mov
jle
dec
dec
decl
pop
jns
lret
sub
ja
jno
outsl
xchg
xchg
sti
mov
mov
scas
push
sti
pop
mov
loopne
int
cmp
cltd
xchg
jns
mull
dec
inc
or
arpl
scas
jle
or
movsl
mov
xchg
mov
jo
pop
rcrl
add
ds
mov
jno
dec
or
lea
jl
xchg
xchg
or
aad
xor
into
ret
sahf
movsb
dec
and
inc
lret
fists
fldt
fucom
aam
mov
cltd
mov
inc
sahf
imull
shll
imul
imul
popa
mov
hlt
das
pop
insb
mov
cs
push
cmc
push
mov
aad
in
sub
push
cmp
mov
lcall
mov
xchg
push
pop
mov
fwait
push
and
out
hlt
jg
std
ljmp
push
pop
sbb
js
and
sub
mov
mov
sub
inc
inc
into
sahf
pop
add
or
mov
lea
pop
test
test
arpl
data16
and
faddl
call
cltd
jo
push
jb
xchg
subb
jecxz
mov
movsl
movsb
sarl
xchg
ret
hlt
das
cmc
xchg
test
adc
adc
and
add
mov
lds
xor
sbb
and
push
jp
aad
cli
jne
lods
mov
push
mov
jbe
xor
and
out
xor
popf
shrl
pop
stos
and
inc
hlt
cmp
cld
sahf
fld
and
out
js
in
xor
imul
mov
roll
mov
inc
push
ret
add
jae
xchg
inc
pop
loope
or
mov
sbb
stos
jae
add
xor
push
pop
scas
int3
icebp
shl
adc
in
repnz
jl
push
test
or
dec
dec
ret
js
loope
clc
in
out
xor
jmp
loope
sti
mov
sahf
mov
lds
inc
test
lods
aas
push
sbb
xchg
in
xor
cltd
jecxz
pop
jecxz
lret
hlt
jl
in
out
xor
mov
jno
fistps
pop
in
mov
sti
stc
mov
pushf
pushf
sub
cmp
sbb
jbe
aaa
push
mov
jbe
adc
enter
in
sbb
enter
add
mov
roll
in
sbb
dec
bound
loopne
rep
mov
push
sbb
loop
mov
inc
cs
push
jmp
lods
cmpsb
subb
mov
clc
pop
sub
jnp
jb
movsb
inc
push
jbe
jecxz
cwtl
pop
ljmp
test
inc
sbb
jne
sbb
insb
cli
iret
sahf
test
out
jnp
pushf
sbb
dec
jno
mov
pop
mov
xchg
pop
or
mov
xchg
es
andl
imul
bnd
mov
mov
lods
lret
add
sub
fimull
out
ud2
mov
add
and
or
pop
shrl
data16
in
inc
inc
cmp
mov
cmp
repnz
dec
push
or
dec
js
divb
imul
sbbb
xchg
mov
in
or
push
push
sti
mov
push
mov
out
out
jmp
fdivrs
xor
cltd
and
sub
xchg
pop
scas
test
mov
mov
ret
cltd
bts
xchg
dec
data16
mov
add
scas
push
test
bound
fcompl
outsb
lcall
mov
das
sub
inc
jcxz
mov
je
enter
lods
xor
rorl
xchg
inc
jns
loopne
xchg
stos
inc
pop
mov
and
add
daa
frstor
rcll
inc
enter
jl
mov
mov
mov
xchg
mov
testb
or
jo
in
dec
mov
mov
xchg
cmpsb
test
mov
mov
lock
cmp
outsl
sub
ja
pop
shll
mov
sub
adc
std
repnz
and
cmp
cmc
jae
sbb
aas
cmp
xchg
mov
repnz
or
jle
nop
lcall
xchg
cltd
mov
sub
fcmovb
mov
xor
nop
lods
repz
dec
js
dec
fldl
mov
rcrl
sub
mov
jmp
shll
bound
dec
cmp
jle
test
and
loopne
insb
aaa
in
xlat
scas
faddl
enter
cmovae
rol
fwait
push
xor
lcall
sahf
mov
inc
pop
cmp
loopne
ss
test
xchg
loopne
mov
dec
jno
shrb
mov
sub
mov
jae
push
ja
fstpl
lods
sbb
xchg
cmp
cmp
es
movsb
scas
inc
sti
inc
pop
sti
test
rclb
scas
push
cli
mov
loop
jb
das
pop
flds
cwtl
xchg
and
inc
mov
into
push
ret
dec
mov
int
adc
adc
outsb
and
in
sti
push
lods
pop
pushf
test
jne
in
xchg
sbb
push
sub
outsb
loop
xlat
mov
popa
jo
out
mov
mov
adc
mov
clc
iret
sti
faddl
ja
cmp
cmp
fdivr
insl
lcall
pusha
xor
adc
test
test
xor
lods
lahf
lcall
jmp
icebp
sub
jo
aas
lret
fwait
xchg
add
fbstp
aam
imul
mov
xchg
cmp
adc
andb
packuswb
lods
aad
jle
cs
lods
or
adc
icebp
cmpsb
or
jo
fisubl
bnd
and
fwait
push
pop
jmp
lods
inc
mov
loop
cmp
inc
xor
pop
nop
pop
inc
stos
aaa
xor
iret
aaa
pop
clc
sbb
mov
sub
jle
or
sub
mov
xchg
mov
lret
sahf
mov
mov
push
sub
dec
mov
jge
lret
lret
test
mov
test
jbe
stos
dec
fwait
jecxz
sub
les
inc
or
sub
leave
out
mov
adc
and
gs
in
xor
push
pop
mov
pop
add
lahf
roll
aam
hlt
ljmp
adc
mov
scas
jne
rcl
js
jnp
in
out
icebp
out
lods
test
xor
adc
pop
inc
cs
push
cmp
push
dec
pop
ljmp
pop
xchg
jno
push
push
xor
and
and
adc
cmp
dec
lcall
and
mov
inc
push
cmp
inc
and
dec
or
lret
xchg
pushf
es
adc
cmpsb
clc
flds
shrl
test
dec
cmp
mov
sti
das
jne
aam
jp
sarl
mov
push
call
mov
mov
xor
xor
pop
outsb
mov
cld
xchg
inc
sbb
lcall
xlat
ret
int3
jge
sub
and
cmp
push
jns
pop
and
shrl
pop
jo
dec
arpl
inc
mov
mov
clc
mov
loop
and
mov
in
push
loopne
ficoml
cmp
outsl
mov
cld
mov
fisubl
cmp
shlb
pop
loope
scas
jg
sbb
xor
je
int
inc
in
fidivs
movsl
cmp
mov
push
aam
ret
xor
roll
frstor
in
rorb
cltd
mov
or
lods
movsl
popa
pusha
rolb
dec
das
pop
jo
imul
and
test
add
stos
cmc
or
insb
rcrb
clc
mov
sbb
rep
inc
mov
out
lods
or
jle
insl
inc
enter
add
jbe
pop
pop
mov
out
icebp
sbb
push
or
popa
mov
mov
fsubr
insb
sbbl
arpl
repnz
fdiv
scas
push
dec
jae
out
jmp
mov
in
cld
clc
xor
xor
sub
gs
push
sub
dec
lcall
cmp
push
enter
xor
arpl
xor
sbb
repnz
and
ss
add
dec
adc
jg
enter
push
push
fistpl
jge
sbb
fwait
pop
nop
xor
imul
call
cmp
cltd
mov
mov
in
cltd
adc
je
mov
xor
ss
push
cs
dec
mov
fs
cmp
cli
lret
mov
jns
repnz
xor
inc
cmp
cmpsb
repnz
fldcw
stos
mov
test
mov
push
cltd
lret
add
sub
repz
adc
jle
adc
int3
test
or
mov
shl
mov
mov
lret
fsubl
inc
jno
pop
sub
xchg
mov
add
lods
jmp
pop
mov
push
inc
ljmp
lcall
insb
adc
pop
sti
clc
mov
mov
aam
add
popa
dec
ret
jb
and
push
fmulp
dec
sbb
sbb
pop
rorb
xchg
sti
jle
fldenv
nop
add
add
mov
and
adc
test
int
mov
inc
cmc
xlat
dec
lock
xor
faddl
xor
jno
mov
aas
xor
loopne
push
push
insl
lods
jl
add
jbe
or
ds
repz
mov
sbb
dec
inc
movsb
insl
mov
mov
adc
dec
sub
mov
rcr
into
loopne
sbb
push
xor
sub
inc
xchg
mov
sub
push
lods
jl
push
mov
pop
or
sub
pop
xchg
cwtl
mov
dec
imul
inc
repnz
dec
mov
push
cld
cmp
cmp
ret
sub
mov
addl
xchg
or
cmc
shlb
xlat
ss
ret
mov
repz
xchg
js
cmpsl
sub
cmp
test
sbb
leave
pop
int3
test
rol
and
dec
mov
stos
inc
push
jns
or
rcll
mov
adc
int3
daa
xlat
cmp
loope
dec
pop
popa
repz
inc
mov
popa
hlt
icebp
dec
mov
data16
sub
pop
and
inc
jge
int
rcrl
xorl
push
and
neg
jp
mov
std
jecxz
jge
lret
jge
sub
cmp
jp
jl
cli
mov
inc
cmpsb
pop
and
jae
xor
adc
adc
std
mov
fstps
imul
dec
shrb
or
icebp
mov
adc
add
mov
and
pop
jp
sarb
mov
and
and
and
xor
cltd
in
scas
sbb
imul
ret
mov
pop
sarb
inc
int
push
es
and
fcmove
fldl
mov
inc
out
push
rolb
xchg
in
addr16
cmp
lahf
shl
scas
dec
das
jb
push
sbb
push
mov
mov
add
or
pop
cli
xor
add
ja
xchg
pusha
aam
pop
lds
sub
idivl
adc
jae
outsb
mov
cmp
lret
rolb
xor
scas
sti
push
movsb
pop
push
jne
cs
lods
test
or
mov
jecxz
mov
mov
xor
pop
psubsb
jae
pop
add
push
mov
cld
dec
in
arpl
inc
xlat
into
psrad
and
xchg
lcall
int
pop
pop
inc
repz
sub
inc
fidivrl
out
addb
rcl
je
out
sub
ret
jbe
dec
dec
out
inc
jecxz
add
push
xor
pop
pop
loop
xchg
inc
xchg
or
ds
andb
cmc
or
mov
sub
rorb
aas
dec
mov
out
icebp
pop
and
jno
jmp
mov
fldl
mov
jo
sbb
fcomps
es
cmpsl
and
lock
mov
mov
movsb
mov
sbb
dec
stos
inc
imul
mov
jno
mov
cmp
aaa
push
mov
repz
adc
inc
es
lahf
mov
or
out
addb
sub
inc
xlat
call
sbb
lods
add
shrl
pop
mov
mov
xor
loope
cmpsb
ds
loope
push
xor
out
jb
adc
fs
mov
scas
sbb
mov
inc
cmp
and
and
xchg
imul
inc
mov
sbb
jno
mov
jl
mov
popf
mov
lcall
adc
mov
adc
add
xor
jo
adc
mov
cmp
push
push
ret
ret
das
push
push
jns
shrb
mov
arpl
jns
dec
adc
jmp
inc
out
sbb
xchg
mov
mov
mov
js
sub
inc
icebp
adc
movsb
in
mov
lds
shll
push
cwtl
aaa
push
jb
aaa
mov
dec
adc
push
loope
imul
or
addb
pop
adcb
jle
sahf
xchg
sahf
xor
test
xor
test
or
mov
mov
pop
popa
cmp
jns
sbb
test
jl
jl
mov
xor
lret
lods
jle
pop
out
mov
mov
pop
dec
xchg
jns
js
and
jb
lock
lods
stos
push
in
mov
cmp
mov
ffree
add
mov
test
jae
lret
in
movl
dec
mov
mov
or
popa
cmc
fxtract
pop
push
dec
mov
jbe
jb
int
sbb
sbb
xchg
pminub
dec
inc
lahf
sub
pushl
xor
or
addr16
or
sub
mov
push
mov
mov
std
xor
or
or
cltd
mull
aad
inc
mov
dec
adcl
shll
push
dec
jl
mov
into
scas
jbe,pn
mov
mov
test
cmp
adc
pop
fiaddl
fnstcw
insb
xchg
xor
and
js
pusha
xchg
outsb
xorl
movsl
cmp
cmpsb
fwait
jg
popa
add
jnp
mov
sbbb
cmp
lds
inc
mov
cmc
pop
ja
ret
dec
dec
lods
lret
subl
or
mov
mov
rcrb
dec
cs
inc
pop
fcmovne
and
push
int3
rcl
adc
pop
hlt
sarl
scas
and
xchg
cmc
push
flds
xchg
xchg
lahf
push
xor
inc
cmp
pushf
or
mov
loope
xor
or
push
xor
or
repnz
in
hlt
sub
test
adc
xor
jge
cmpsl
lods
sub
sbb
jmp
out
sub
pop
xchg
lret
mov
cld
roll
lods
pushf
xchg
js
push
mov
fwait
mov
outsb
mov
jo
pop
test
pop
sbb
xor
mov
rorb
insb
mov
xchg
hlt
sbbl
outsl
test
push
in
xchg
in
mov
lea
dec
pop
insl
push
cmp
aam
mov
pop
inc
push
mov
ret
loop
push
mov
xchg
xorl
dec
movsl
xchg
loopne
fnstsw
xor
pop
xchg
push
and
ss
jg
loop
mov
mov
jo
out
mov
in
add
repz
jp
jl
dec
mov
sbb
cli
pop
xor
test
popf
cwtl
add
into
icebp
jge
imull
jmp
push
mov
fmul
jbe
out
repnz
dec
fs
jmp
movsb
lcall
sbb
cmp
adc
out
out
pop
pop
mov
and
xchg
pop
cld
pushf
dec
stos
or
scas
mov
shlb
movsl
ljmp
cltd
lcall
stos
jg
decb
cwtl
jne
mov
jp
mov
hlt
pop
das
lret
pop
xchg
jp
les
jecxz
and
js
sbbl
mov
cmp
jne
adc
ds
shl
jle
or
sub
jp
push
scas
inc
add
lock
in
or
dec
fld
fldl
and
dec
sbb
jo
cltd
dec
ljmp
mov
cltd
cmpsb
adc
arpl
lcall
rclb
les
das
ret
mov
jne,pt
enter
pop
xchg
repz
ds
jp
sahf
jne
aas
lcall
inc
cmp
repnz
mov
cmp
push
sub
cmp
js
fistpll
sti
xchg
or
cld
dec
add
into
stos
or
pop
jae
dec
xchg
data16
push
iret
adc
stc
jp
mov
test
and
sub
icebp
outsl
scas
adc
sbb
jno
int
xchg
out
jae
xor
fdivr
xchg
lret
subl
mov
cltd
mov
xchg
imull
mov
rcrl
aad
jo
iret
sub
dec
push
dec
inc
movsl
dec
ret
outsl
sahf
loop
jnp
insb
xlat
pop
mov
pop
clc
xchg
andb
dec
ret
insl
mov
movsl
pop
fmul
or
or
fldcw
mov
mov
jg
pop
mov
add
addr16
add
xor
mov
sbb
mov
fwait
mov
mov
xor
adc
push
subb
mov
mov
xchg
fldcw
aad
es
add
cmc
popa
aas
jne
mov
imul
out
add
mov
fs
cwtl
mov
cmpsb
and
adc
sahf
lgs
push
into
mov
clc
enter
imul
push
mov
mov
push
jb
addr16
adc
leave
loopne
adc
and
inc
jbe
repz
pop
adc
xor
aam
add
inc
rcr
push
in
dec
add
sahf
hlt
js
je
dec
movsl
push
lea
push
add
cmp
subb
in
jmp
inc
dec
pushf
pop
sub
add
mov
jmp
push
repz
sub
inc
add
mov
mov
jle
add
in
outsl
cmp
inc
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
fdivl
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
fnsave
cld
push
in
inc
pushf
xor
pop
repnz
loop
shrb
mov
mov
and
enter
xor
inc
in
push
std
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
movsl
sahf
mov
xchg
test
push
clts
sub
ds
jbe
inc
jle
outsb
ret
mov
mov
neg
lcall
push
cs
dec
inc
jle
outsb
push
xchg
cmpsb
dec
mov
xchg
fsub
hlt
inc
push
adc
pop
or
or
add
sar
incb
push
testb
sbb
add
sub
inc
adcl
push
mov
dec
scas
jbe
dec
add
shl
inc
lock
cltd
sub
inc
mov
in
lea
in
int
mov
push
ss
adc
jbe
xor
mov
sub
fidivs
inc
jp
sbb
neg
cmp
ss
mov
inc
adcl
cmpsb
inc
or
sbb
jle
dec
negb
push
loop
icebp
push
push
xchg
and
mov
popa
sub
xchg
and
push
pop
imul
jecxz
adc
shl
jmp
and
push
xchg
mov
jo
loopne
lods
push
jo
es
cs
jl
je
push
outsl
iret
sahf
cld
repnz
lret
mov
cwtl
scas
mov
mov
jno
push
arpl
jae
adc
sbb
xor
jmp
shl
hlt
int
rorl
sbb
push
imul
outsb
sub
sbb
sbb
sbb
sahf
fimull
mov
test
out
es
ss
push
ds
cs
jbe
inc
jle
outsb
cmpsb
sahf
mov
xchg
test
out
es
ss
push
ds
cs
jbe
inc
jle
outsb
cmpsb
sahf
adc
sub
push
test
je
dec
xchg
repnz
lea
dec
pushf
xchg
add
xchg
inc
dec
daa
inc
dec
mov
sbb
test
mov
pop
sahf
pop
push
inc
jo
addr16
out
mov
dec
pusha
dec
loope
mov
or
shrl
daa
ret
out
sbb
jle
xor
mov
fwait
rolb
rorl
popa
cmp
out
fucompp
insb
xchg
dec
nop
in
test
push
in
cmp
dec
and
pop
ficoms
pop
xchg
xchg
out
bound
ja
xchg
cmp
loope
or
sti
movsb
inc
adc
int3
je
sbb
popf
pop
add
push
scas
xchg
pop
ficompl
ret
lds
fisubrs
push
cs
xchg
mov
ficomps
mov
pop
insl
cmc
mov
repnz
push
xor
daa
xor
or
stos
nop
add
nop
fsubrl
sbbb
push
movl
lds
or
cmpb
fwait
sbb
clc
std
cmpsl
cld
jae
mov
inc
les
mov
dec
in
dec
push
arpl
dec
out
dec
mov
xlat
or
dec
loopne
xlat
addr16
ljmp
data16
xor
outsb
push
jle
or
hlt
mov
dec
and
add
loop
jle
jae
aad
shll
push
testb
fwait
and
imulb
sub
jmp
addr16
into
sub
xlat
adc
rcrl
pop
test
pop
mov
test
pop
ficomps
jnp
fiaddl
sub
in
rcll
ret
jbe
fldt
dec
mov
out
or
pushf
push
add
leave
cmp
or
fwait
xchg
ss
neg
jp
jns
inc
lret
shlb
idiv
jecxz
fiaddl
sbb
add
cmc
xor
loopne
sub
mov
cli
test
test
ror
aas
jns
xor
out
stos
arpl
into
sti
inc
imul
jl
imul
pop
fbstp
jo
testb
mov
dec
rorb
pop
lcall
mov
sbb
adc
sub
arpl
push
mov
outsb
in
outsb
add
cld
insl
arpl
shr
scas
pop
lret
xchg
pop
je
cltd
mov
dec
add
out
jns
stc
dec
in
sub
and
lahf
pusha
inc
pop
decl
xchg
xchg
lahf
push
add
jne
push
mov
jge
shl
dec
inc
icebp
push
and
and
dec
aam
dec
ljmp
jne
dec
insl
pop
add
add
adc
pop
popf
jno
out
mov
sbb
cltd
and
mov
sub
cld
mov
cmp
pop
sub
int3
sysret
stos
xor
mov
mov
aad
arpl
jbe
sbb
addr16
lret
scas
mov
ds
les
notb
sub
mov
clc
dec
jmp
cmp
xor
adc
mov
push
cmp
adc
sub
push
dec
jns
sub
push
nop
or
mov
dec
mov
inc
jae
adc
pop
pop
in
xchg
fs
mov
insb
cmp
sub
jmp
imul
mov
outsl
rcl
fildl
pop
dec
add
fildl
mov
add
imul
pop
mov
mov
shl
and
ds
xlat
stos
mov
bound
repz
pushf
data16
pop
mov
mov
aas
dec
cltd
scas
or
mov
fiadds
ss
ds
fwait
cmp
lret
sbb
sub
cs
js
jb
in
into
adc
aam
mov
out
cld
xchg
fwait
jle
or
inc
mov
cs
int
hlt
xor
clc
push
fdivrp
push
pop
in
int3
dec
out
push
xchg
inc
push
push
mov
dec
mov
aam
jb
jb
pop
cltd
mov
pop
mov
jbe
push
mov
ljmp
mov
mov
xchg
xchg
sub
sbb
and
aas
fdivs
test
add
or
add
sahf
bound
push
mov
cmpsb
sub
imul
mov
orl
mulb
mov
adc
lcall
cmpsb
fistl
addr16
pop
push
dec
outsb
lret
xor
dec
inc
lret
inc
mov
mov
in
mov
ja
test
inc
cltd
cld
gs
das
iret
shr
lock
mov
fstp
orl
sahf
xor
sub
gs
mov
sbb
in
add
dec
arpl
rcrl
fisubs
arpl
cmc
adc
shrl
mov
xchg
xor
xor
xchg
pop
lret
mov
jo
sbb
jo
lods
pop
addr16
cmp
test
mov
mov
movsl
mov
rcr
sbb
xor
sbb
inc
lret
stc
mov
mov
rclb
call
xor
jmp
insb
mov
mov
jb,pt
std
sti
fbld
jge
in
ret
iret
fcmove
lret
rcl
dec
jo
shll
cmp
dec
iret
in
xchg
add
ja
mov
pusha
mov
call
in
popa
or
sahf
aaa
adc
addr16
add
pop
ret
inc
out
mov
das
cmpsb
dec
into
and
pusha
popa
in
outsl
lahf
or
pop
jne
sti
dec
ret
ljmp
jno
pop
push
insb
cmpb
lret
stos
push
cs
rclb
cmp
test
mov
pop
test
inc
fldcw
lods
test
fldcw
jmp
and
fsubrs
sbb
pop
gs
cwtl
xor
loop
leavew
adc
inc
in
lds
xchg
andb
push
mov
lahf
hlt
xchg
fimull
pop
xor
mov
lock
pop
jne
inc
xchg
scas
pop
rorl
mov
push
mov
inc
cmp
cmpsl
rolb
and
mov
xchg
int3
outsb
dec
lods
ss
and
xor
mov
pop
outsb
call
push
rcrl
push
cmc
addr16
sbb
cmp
imul
xor
inc
lret
jne
mov
loopne
sub
ret
pop
jl
pop
addr16
pop
fwait
cld
push
jne
sbb
rolb
dec
and
clc
jg
adc
das
sbbb
in
mov
xchg
jecxz
popa
cltd
dec
shrb
xchg
cmp
and
mov
lahf
dec
and
add
mov
pop
fadds
int3
jecxz
ds
jne
je
inc
cmp
shll
mov
xor
pop
div
dec
push
jl
cltd
mov
outsl
lock
sub
out
loop
xchg
adcl
jle
push
iret
pop
dec
mov
mov
sbb
shrb
fnstsw
stos
jns
call
sub
dec
testb
dec
pusha
cld
iret
aam
pop
sub
or
sub
sub
repnz
scas
and
enter
jo
lock
mov
repnz
outsl
into
add
test
cmp
xor
pop
shl
push
xchg
push
shll
fistps
xor
sub
jns
or
fsubrl
and
es
cmpsb
fwait
xorl
inc
mov
xor
adc
pop
cld
push
adc
sub
les
negl
xor
outsb
shll
mov
cli
xlat
push
dec
or
inc
bound
mov
adc
mov
push
ljmp
lret
mov
repz
mov
jl
in
dec
and
int3
jbe
or
fwait
pop
or
inc
mov
pop
inc
jge
pushl
pop
dec
xchg
push
ror
insl
mov
add
or
jnp
daa
repnz
or
in
sahf
jnp
movsb
outsl
add
test
mov
inc
hlt
and
dec
cmp
in
sub
out
pop
xchg
xor
fadds
std
xchg
dec
lock
fcomps
pop
add
pop
jecxz
cmp
mov
shrb
in
test
addr16
xchg
clc
lea
mov
out
movsb
xorl
dec
imul
pop
test
mov
mov
mov
sarl
mov
mov
push
mov
cmp
in
testb
je
pop
sbb
repnz
data16
adc
dec
pop
out
pop
popf
call
out
stc
xchg
outsl
mov
and
imulb
mov
out
pop
out
adc
lcall
push
jle
xor
pop
shrl
out
and
test
cli
ficoml
lret
lret
cmp
je
test
mov
lds
dec
inc
xchg
into
or
xor
pop
xor
ficoms
jp
jmp
push
mov
sub
in
loopne
xor
shll
and
popf
int
nop
fstps
std
xchg
adc
shll
add
out
jp
lret
and
pushf
inc
pmaxub
mov
lret
dec
add
cwtl
mov
xchg
jle
fldl
adc
cld
cs
mov
jl
sahf
notb
sub
add
cs
rclb
repnz
repnz
insl
or
xor
push
sbb
pop
add
ficoml
stos
mov
divb
and
push
jl
adc
push
cmpsl
clc
xor
sti
aas
sbbl
add
mov
sbb
subl
std
xchg
mov
adc
imul
sbb
je
insb
je
or
fildl
iret
movsl
rorl
dec
or
stos
fisubrl
lds
jecxz
add
cmpsl
vextracti64x2
imul
aad
xchg
jae
cmp
loope
cwtl
cmc
inc
mulb
call
mov
shlb
push
jne
pushf
jle
cmc
adc
adcl
push
data16
aas
jp
cwtl
pop
lds
iret
ffree
sub
imul
shll
pusha
das
mov
add
sahf
jne
pop
pushw
aad
mov
fstps
jbe
mov
xchg
mov
pushf
jae
ljmp
mov
pusha
aas
mov
xor
add
or
insl
adc
outsb
fs
loop
jnp
out
jmp
and
mov
movsb
fimull
std
sub
mov
or
aaa
cmpsb
sahf
xor
mov
xlat
push
inc
xchg
in
pop
cs
pop
shr
stos
mov
xchg
inc
and
dec
loop
inc
clc
xchg
push
pop
dec
mov
repz
sbb
adc
int
pop
sbb
aam
std
fs
adc
push
mov
jp
stos
mov
xor
stc
adc
mov
bound
fistpll
cmpsb
dec
sbb
addb
or
je
pusha
xchg
mov
pop
or
int
bndstx
pusha
xchg
not
jnp
stc
outsb
xor
sbb
or
in
jno
cmp
and
fwait
movsb
cs
lcall
cwtl
push
mov
sbb
dec
dec
repz
mov
jle
add
repnz
inc
inc
xor
fdivs
cmp
pop
fidivs
push
ror
add
add
outsl
mov
adcl
cs
mov
lods
add
addl
in
mov
leave
je
rcrb
adc
and
xchg
shrb
sarb
mov
es
pop
pop
aas
fistpll
push
mov
xchg
shrl
xchg
cwtl
pop
xchg
add
lods
paddw
jecxz
imul
dec
divl
fistl
sbb
jg,pn
mov
inc
pop
ret
mov
aam
lods
cmp
cmpsl
sarl
and
mov
push
mov
hlt
inc
call
adc
loop
cltd
insl
mov
push
sbbb
inc
or
mov
orl
mov
hlt
adc
mov
and
mov
mov
jae
mov
push
jae
lret
lea
xchg
pop
sbb
mov
sub
or
jecxz
ds
jge
mov
repz
jp
incb
int3
leave
mov
and
dec
repz
or
les
xor
inc
and
inc
dec
in
stc
fdivl
shl
xor
aaa
pop
sub
mov
or
cmpsb
adc
ds
test
mov
aam
movsb
int3
mov
cmp
pop
jle
push
jbe
int3
negb
into
fwait
das
dec
sub
scas
test
dec
aaa
pusha
in
dec
rorl
add
movsb
xor
pop
or
jecxz
sub
insl
sbb
mov
in
stos
lods
jmp
decl
pusha
fucomp
cmp
push
mov
xor
xchg
add
jl,pn
cmp
inc
pop
loop
xchg
sub
inc
push
outsb
enter
inc
mov
repnz
pop
es
push
rcrb
pop
repnz
les
pop
dec
pop
std
scas
pop
dec
repz
push
fcmovbe
mov
dec
sbb
std
xor
daa
test
push
lock
push
fimull
out
data16
add
xor
xor
ljmp
cmp
iret
xor
or
out
cmp
mov
or
add
cmpsl
and
std
cld
test
aas
in
jno
inc
mov
ja
lret
sub
push
jb
fdivr
and
fidivs
int3
aam
aam
sti
sbb
fiadds
aaa
mov
xor
mov
xchg
dec
mov
mov
sub
ret
iret
loop
fidivs
mov
inc
xchg
add
mov
mov
shlb
mov
adc
mov
les
enter
xchg
dec
mov
insl
pop
xchg
add
out
push
sub
iret
in
sub
stc
adc
ss
orl
or
movsl
sti
imul
mov
mov
xchg
arpl
imulb
and
loop
xor
repz
hlt
addr16
popa
insl
push
pop
rorl
fcompl
mov
cmp
repnz
dec
stos
shrl
test
dec
xchg
mov
cmp
lea
mov
xchg
xchg
or
adc
or
mov
xor
jns
add
rorl
repnz
xor
cs
and
jl
clc
inc
mov
ret
push
fidivrl
or
xor
mov
out
xchg
cmp
je
leave
sub
rorl
xchg
dec
pop
shl
lds
inc
dec
cmp
cmpsl
movsl
rorb
stos
sub
ret
outsb
cwtl
mov
sbb
adc
mov
insl
or
lock
outsl
insl
inc
dec
andl
into
xor
je
dec
shrl
mov
jecxz
add
popf
dec
outsl
cmc
mov
mov
clc
daa
jne
push
push
out
push
and
or
lods
mov
ficompl
sbb
cmp
cs
mov
les
xor
push
sbb
fistpl
fwait
cmp
loopne
sbb
add
pop
fwait
sub
cmp
mov
push
ret
out
shr
test
push
stos
clc
push
sub
jns
mov
jge
out
mov
jge
or
outsb
push
negl
nop
or
mov
pushf
push
lahf
xchg
je
jg
xor
mov
mov
adc
mov
jb
sub
in
sub
mov
push
sbb
gs
cmc
es
sbb
mov
mov
out
pushf
pop
add
jbe
dec
test
popf
mov
sbb
lods
add
mov
out
movsl
or
fwait
icebp
in
xchg
out
push
dec
fdivrl
sbb
jmp
out
flds
cmp
jnp
mov
lcall
xor
les
sbb
rorl
xor
xlat
out
add
lods
fnstsw
xchg
xlat
hlt
sbb
sbb
cs
add
or
dec
call
sahf
add
dec
int
shll
dec
ja
out
xchg
mov
dec
orb
lret
sbb
ja
jecxz
adc
mov
cmp
out
cmpl
sbb
adc
xchg
pop
sub
nop
and
xchg
inc
sub
cltd
pop
xor
pop
and
hlt
aas
jbe
out
add
out
jle
outsl
div
pop
xor
loop
movl
and
jo
xchg
mov
call
das
xchg
negb
scas
add
jmp
mov
add
jno
adc
sahf
out
cmp
fdivrl
stc
sbbb
das
pushw
loope
sub
bound
aam
jp
aam
mov
stos
lret
stos
or
mov
les
jne
lods
stc
jg
mov
outsb
and
sub
das
pop
nop
xchg
popf
fdivrl
sarl
data16
dec
repnz
push
and
nop
sti
and
cmpsb
punpcklbw
rol
subb
cmp
mulb
cmpsl
std
jne,pn
push
inc
mov
add
fisttpll
mov
stos
sbbb
jnp
sbb
jnp
lock
add
test
call
lock
imul
cli
test
pop
dec
lds
dec
push
push
stos
scas
stc
mov
mov
jmp
mov
xor
jg
dec
xor
insl
shrb
mov
stc
push
fs
mov
or
mov
push
push
jle
or
mov
icebp
jp
cs
pop
push
inc
and
rol
sub
lret
and
inc
and
xchg
ror
hlt
cmpsl
jg
pop
inc
xchg
data16
js,pn
ja
cltd
push
shll
add
inc
pop
jns
mov
addr16
lret
inc
cmp
aas
pop
test
push
pop
mov
add
stc
hlt
das
dec
inc
inc
mov
orb
and
inc
clc
sbb
pop
in
push
inc
sbb
pushf
cli
std
mov
jne
mov
adc
scas
in
mov
adc
daa
cs
pop
sub
jecxz
xlat
imull
movl
out
push
mov
ret
iret
enter
loope
xor
sub
sub
xlat
xor
repnz
sti
cmc
cwtl
ss
sti
jb
in
adc
adc
imul
fsubl
les
enter
push
cmp
mov
add
fsub
dec
test
adc
adc
in
loope
test
pop
xchg
jno
sbb
cmc
sbbb
or
pop
sub
sahf
es
jo
dec
sbb
shr
add
inc
test
das
insl
arpl
or
imul
cmpsb
xchg
jno
imul
add
cmpb
xchg
imul
movsb
xchg
je
sub
ret
inc
mov
outsb
jg
mov
sub
add
xchg
push
jae
sbb
addr16
xchg
sbb
div
andl
push
jae
sbb
mov
aam
mov
cli
push
push
lcall
icebp
xor
pop
sbb
fwait
lods
ds
cs
out
sub
sbb
lock
mov
sub
push
sub
into
jno
lods
mov
mov
enter
mov
int3
movsb
bound
xchg
scas
xlat
push
cmp
outsl
cmp
cmp
gs
push
mov
jbe
shr
scas
jns
icebp
mov
inc
push
cmp
mov
imul
sbb
pusha
shll
in
mov
loope
in
loopne
ljmp
jae
mov
sub
subl
mov
mov
in
fnop
sub
into
cmpsl
jle
popf
fcmovu
xor
cmp
and
ss
sbb
mov
add
idivb
jae
popl
loopne
sub
push
sub
ret
push
faddl
push
icebp
rorl
not
hlt
mov
fistl
mov
cltd
jae
inc
adc
hlt
sbb
pop
add
rorl
imul
out
dec
shrb
in
pop
rorl
jo
ja
push
test
int
test
xchg
push
or
push
xor
dec
push
xchg
jg
in
gs
jecxz
fwait
xchg
outsb
adc
adc
loopne
shll
cmp
test
mov
cli
and
ljmp
inc
dec
sub
pop
in
adc
int3
inc
mov
mov
and
xor
push
cmc
push
mov
pop
xchg
jbe
jmp
push
out
mov
or
enter
ret
jmp
bound
outsb
aad
inc
inc
dec
push
inc
xchg
int3
sbb
inc
pop
mov
mov
push
loope
mov
xor
jo
dec
inc
pushf
into
lods
js
outsb
add
jg
sbb
push
xor
hlt
pop
in
subb
aad
jae
movsbl
lcall
pop
mov
sarl
pop
insl
mov
adc
in
xchg
testl
lock
sarb
push
adc
ds
xchg
cld
gs
sub
mov
adc
out
test
out
es
ss
push
ds
cs
jbe
inc
jle
outsb
cmpsb
sahf
mov
xchg
test
out
es
ss
push
ds
cs
jbe
inc
jle
outsb
cmpsb
sahf
xchg
jbe
test
push
out
es
ss
idivb
push
sub
dec
inc
jp
push
lcall
out
out
push
cs
leave
movsb
lods
ds
pop
adc
xor
hlt
xchg
mov
enter
xorl
imul
ss
inc
xor
jbe
xchg
xchg
loopne
shlb
mov
push
jo
pusha
push
pop
ss
inc
push
push
and
jbe
xchg
cmpsb
dec
mov
movb
mov
jo
inc
push
xor
xor
arpl
fs
mov
mov
xchg
or
lahf
out
adc
int
inc
sub
out
ss
or
movsb
cmp
in
movsl
push
sub
outsl
add
cmp
and
mov
cwtl
sbb
xor
pusha
sbb
push
jno
jo
push
pop
mov
add
mov
ret
lock
loopne
aam
rol
nop
sbb
or
stos
scas
adc
and
je
jns
loop
int3
sub
frstor
push
push
ljmp
pop
push
xor
jns
scas
pop
loope
push
adc
call
push
sbb
jge
push
and
xchg
jp
push
gs
push
push
jl
shlb
mov
push
jo
enter
jl
or
into
data16
shl
pop
mov
lahf
int
in
movl
pop
and
ja
dec
and
test
shrl
stc
divb
add
and
and
repnz
mov
mov
push
jo
pusha
es
ss
inc
xor
data16
xchg
xchg
loopne
shlb
mov
push
jo
pusha
es
ss
inc
xor
data16
xchg
xor
sbb
jp
pop
cmp
mov
mov
fs
out
cmpsl
dec
out
sub
xchg
out
rcll
lcall
lock
lret
pushw
xor
mov
insb
fimuls
call
jae
loop
repz
xor
stc
dec
fwait
mov
pushf
data16
bound
in
push
xchg
cltd
dec
push
loopne
loopne
daa
out
aas
cmc
push
roll
push
dec
xlat
ljmp
test
mov
pop
insb
cmp
sub
and
insl
push
or
push
jp
add
push
dec
pop
leave
imul
mov
xchg
jno
insl
or
bound
ss
js
das
fdivl
inc
mov
stos
subb
mov
test
sahf
jg,pt
jl
or
out
pop
jecxz
mov
mov
in
push
idivl
insl
arpl
xchg
jnp
fmull
test
into
xchg
jae
jb
pop
movsb
movsl
stos
mov
fsubrp
aam
xchg
pop
jne
imulb
push
xchg
mov
lahf
cltd
int
mov
movsb
cmp
jne
or
dec
push
sbb
add
smsw
lods
filds
xor
cld
jge
adc
lds
and
arpl
stos
dec
out
add
lahf
daa
dec
inc
sar
in
fs
negl
xchg
ret
das
adc
sbbb
inc
mov
iret
pop
push
aad
dec
add
daa
inc
int3
pop
ja
andb
xchg
rcrb
jmp
iret
lret
and
push
mov
mov
test
stc
xlat
repnz
in
xlat
out
sbb
and
mov
dec
insb
ret
sarl
adcl
repnz
fisttps
cmc
jmp
and
ret
xlat
xchg
test
mov
jp
fs
jge
jmp
dec
mov
cmp
mulb
and
push
jno
push
fistl
fcomip
hlt
addr16
xchg
adc
sbb
cmp
lret
ja
bound
mov
pop
xchg
and
jae
dec
pop
push
mov
into
je
pop
mov
cmp
int3
test
inc
mov
fs
in
gs
fimuls
fucomip
xchg
loopne
xchg
cmpsb
mov
stc
pop
cmp
in
fcmove
ljmp
icebp
stos
lds
jns
mov
or
cmp
pop
pusha
xchg
mulb
imul
push
inc
sbb
or
mov
inc
pop
int
jbe
jns
clc
roll
dec
inc
jns
jp
add
js
adc
jl
js
xor
leave
push
les
mov
sahf
inc
or
mov
lea
stc
orl
data16
fdivs
mov
arpl
imul
push
adc
xchg
push
std
push
jg
sub
xor
cmp
and
add
jb
or
mov
cmp
jo
sti
fsubl
rorl
pusha
subl
mov
int
and
test
add
rclb
mov
sub
xor
pop
faddl
mov
fucomip
jp
mov
repnz
jg
outsl
xlat
mov
inc
fsub
inc
ljmp
fisubs
sbb
inc
cmp
mov
mov
xchg
xor
mov
arpl
push
mov
xchg
xor
movsl
dec
call
fstl
pop
aaa
mov
xlat
fmul
sub
adc
das
mov
int3
sub
out
mov
jbe
pop
ficoml
pop
movsl
jp
ret
fldcw
mov
sbb
int3
adc
and
clc
mov
mov
or
cmpsb
pusha
ret
xchg
insb
arpl
cld
jmp
movsl
sbb
inc
ror
loopne
mov
popf
roll
shrl
call
jbe
cmp
jne
ret
cmpsb
fdivrs
sbb
lock
or
add
scas
jbe
test
hlt
addl
mov
inc
aam
jle
xchg
mov
mov
sbb
inc
mov
lds
inc
mov
pusha
js
ret
in
out
jmp
in
cmp
push
jne
mov
jb
add
lods
push
pop
sti
call
outsl
mov
clc
and
mov
cltd
mov
icebp
inc
cld
mov
daa
xor
mov
shll
inc
xor
jl
icebp
xor
mov
inc
jne
cmpsb
pop
imul
or
add
inc
mov
ljmp
add
loope
scas
or
sbb
call
sti
fimuls
or
scas
add
cltd
sbb
xor
sbb
ja
fildl
adc
push
jae
pop
and
cmp
icebp
cmpsw
fildl
rclb
mov
pop
pop
in
divb
or
fsubr
ret
and
push
addl
test
mov
push
fmuls
mov
ds
cwtl
or
adc
xorb
dec
movsl
add
daa
into
sar
push
and
adc
fildl
mov
lahf
and
xchg
xchg
pop
sub
mov
mov
ret
fcmove
mov
ja
cmc
sbb
icebp
fildl
xchg
add
sub
or
ja
add
movsb
mov
push
insl
or
int
mov
popa
sub
mov
loope
in
ret
lods
dec
iret
jb
aaa
jns
lahf
jle
jno
js
sbb
add
lahf
mov
sahf
loop
mov
or
xchg
or
lea
ret
pop
xchg
ret
mov
aas
or
sub
inc
int3
adc
mov
ja
sbb
xor
push
dec
outsl
int
mov
rol
loop
xchg
in
enter
aas
rorl
enter
stos
in
outsb
jo
push
add
lods
les
sbb
xor
in
jne
and
fstp
xchg
out
lret
repz
out
push
inc
adcb
jns
or
std
ret
jne
xchg
movsl
jnp
or
push
inc
and
orb
dec
dec
gs
lahf
fs
mov
xchg
add
sbb
jb
sub
push
pop
dec
lret
dec
push
shl
add
jnp
ret
notl
into
mov
outsl
test
test
pushf
jl
arpl
jmp
into
mov
stc
das
jne
cld
push
outsb
jg
sbb
push
inc
pop
fdivs
stc
std
orl
loop
out
or
cmpsl
mov
mov
test
adc
mov
cltd
lods
out
pop
jno
dec
mov
sbb
repz
popl
dec
mov
in
mulb
pop
call
mov
clc
mov
in
iret
sbb
mov
inc
lret
cmpsl
mov
jne
adc
xor
cltd
mov
push
mov
loop
sbb
aad
jle
xor
clc
rcrb
adc
scas
icebp
data16
adc
jo
cmpsb
xchg
jp
sub
imul
test
daa
dec
xlat
push
fstps
test
xor
aas
mov
mov
fldenv
sbb
std
cmp
lock
jno
add
andl
mov
sar
mov
push
iret
fdivl
lret
sbb
mov
push
jb
push
pop
push
push
dec
leave
notb
lock
in
cmc
jmp
push
imulb
fidivrs
mov
dec
subb
out
inc
dec
mov
out
mov
push
out
or
adc
hlt
aad
mov
jo
add
mov
fldenv
mov
cmpsb
aam
adc
dec
leave
jnp
pop
push
out
sbb
mov
in
mov
xchg
and
sub
std
mov
shlb
dec
mov
inc
sub
lock
cmpl
cmp
inc
inc
stc
jecxz
pop
lods
push
notl
push
lock
jae
lret
lret
add
mov
cmp
jecxz
xchg
dec
inc
or
and
or
popa
mov
add
jecxz
push
ret
pop
sub
inc
jno
cmpb
mov
xchg
push
fdivrs
arpl
mov
call
fcoml
fists
das
nop
in
and
jb
lods
xor
mov
push
mov
push
adcl
xor
xor
jp
rorl
in
add
fsubrl
sbb
sbb
ret
sar
add
int
dec
inc
arpl
mov
test
sbb
mov
inc
xor
ds
lret
inc
inc
jns
pusha
dec
sbb
mov
lret
or
loopne
scas
cmp
jl
into
xchg
xor
push
or
push
inc
xorl
aaa
xchg
mov
pop
sbb
outsb
pusha
loop
sbb
lret
lock
jae
lea
out
xor
je
xchg
sti
pop
call
les
shlb
sahf
dec
adc
cwtl
ret
data16
stc
lds
and
pop
shlb
incb
adc
arpl
mov
add
test
testb
insl
imull
adc
shll
cli
jg
fwait
dec
outsl
jae
in
gs
mov
mov
inc
xchg
lea
enter
clc
pop
sub
pushf
ljmp
and
mov
or
out
rcrl
movsl
push
adc
aam
outsb
cltd
add
shrb
ret
negl
fwait
xor
std
loop
push
enter
loopne
decl
fstps
xchg
rcrl
roll
scas
stos
mov
inc
cmp
and
xor
sbb
xor
xchg
pop
pop
cmpsl
mov
ja
fwait
pop
loop
and
lcall
jnp
scas
insb
test
sarb
mov
das
cli
daa
or
mov
mov
das
inc
xchg
loope
adc
mov
in
es
xchg
icebp
in
xor
shlb
jle
ret
out
pop
ret
dec
nop
cltd
or
negb
adc
jmp
stos
das
out
call
push
push
bnd
push
pop
stc
adc
roll
cmp
shll
xlat
insl
inc
cmpsb
fmull
out
mov
sub
sbb
mov
enter
aam
or
xchg
sarl
stos
daa
clc
sbb
sub
jge
push
lds
cli
sub
and
sbb
imul
dec
xchg
or
fwait
aam
sub
stc
add
repnz
ror
dec
push
test
xor
cmp
test
sub
fidivs
and
in
test
test
cmp
mov
and
iret
xor
je
xchg
sbb
push
outsb
sahf
lock
push
loop
push
movsl
bound
mov
cmpsb
pop
jbe
movsl
pop
dec
arpl
std
dec
add
mov
sti
cmp
inc
xlat
and
lods
in
jo
lds
jecxz
sub
mov
and
xchg
adc
call
xchg
jb
mov
add
mov
imul
int3
mov
imul
sahf
inc
lret
sahf
aaa
mov
mov
mov
mov
mov
and
adc
aam
ss
jmp
sub
movsl
dec
cmpsb
andb
pop
decl
popf
pop
repz
cld
in
mov
addr16
mov
jno
cli
push
xor
mov
and
sarb
sbb
mov
pop
or
test
push
ret
jecxz
and
or
mov
sarb
adc
popf
int
cmpl
je
sbb
rcrl
inc
sub
or
xchg
movsb
aas
sub
sbb
sub
cmp
dec
inc
ljmp
bound
lds
inc
outsl
insb
es
mov
jns
scas
sub
ss
iret
ret
xchg
cmpsb
xor
addr16
mul
mov
jno
inc
jecxz
stos
xchg
loope
in
popl
sahf
popa
dec
cltd
je
movb
adc
sbb
psllq
push
mov
fs
mov
lahf
push
dec
mov
cmc
cmc
orl
jmp
fcomp
daa
sub
mov
xor
jl
cmpsl
jns
sbb
test
ss
or
pop
int
call
or
outsl
stc
pop
popa
stos
mov
outsb
cmp
bound
mov
mov
jl
ja
cmpsl
push
inc
mov
test
nop
or
pop
add
inc
xor
or
gs
das
mov
test
xchg
mov
ret
aaa
jns
lods
les
les
pop
xor
lcall
mov
jecxz
xor
sarb
iret
or
mov
mov
dec
push
dec
movsb
icebp
cld
pop
add
imul
sub
enter
inc
ficomps
ja
jge
sbbb
jmp
jne
fldl2t
inc
test
shrl
stos
xchg
dec
ret
rorl
inc
lahf
mov
sahf
inc
popf
xor
cs
cwtl
cmp
jb
mov
stc
enter
lret
push
bound
fidivrl
cmpsb
les
dec
rcl
loopne
test
jle
jno
xchg
cmpl
mov
mov
ss
pushl
or
pushf
xchg
inc
std
shlb
je,pn
dec
sbb
push
mov
les
fildl
sbb
sub
xor
mov
dec
or
xchg
dec
testl
movsl
stos
nop
arpl
push
inc
sub
pop
inc
nop
xor
sbb
pop
lret
mov
xlat
inc
add
mov
sbb
pop
fdivrl
bound
adc
lret
pop
imul
lret
stos
pop
call
out
arpl
xlat
add
loopne
adc
xchg
mov
mov
sbb
adc
scas
dec
lret
add
movl
sub
cmp
cmpsb
push
dec
inc
mov
xor
mov
imul
pop
not
stos
or
mov
mov
cmp
jnp
push
xlat
inc
lret
sub
mov
add
jnp
mov
dec
jb
in
movsb
data16
loope
clc
jno
jb
push
adc
xchg
xchg
sbb
hlt
lret
pushf
imul
or
clc
rcrb
out
cmp
fimull
out
inc
inc
retw
pop
cmp
imul
sub
int3
and
mov
dec
clc
out
dec
pop
ss
daa
imul
in
imul
push
fwait
out
jl
xchg
xor
lods
cld
push
adc
cmp
mov
xchg
inc
pop
cmpsb
fdiv
daa
pop
mov
iret
and
scas
hlt
jge
cs
int
es
clc
or
sti
out
outsb
xor
fisttps
jno
xchg
mov
push
pop
subl
mov
jne
mov
xor
js
insl
xchg
test
jmp
shr
push
xchg
mov
adc
imul
shrb
inc
sub
push
das
or
iret
ss
pop
aad
add
mov
cwtl
fsubs
sub
cmc
es
mov
sub
rcll
icebp
aas
jb
jmp
cmc
and
sbb
push
pop
outsb
inc
enter
imul
mov
sti
fidivs
je
leave
inc
int3
test
out
fwait
loope
mov
and
repz
add
adc
pop
fidivrs
in
icebp
notl
mov
inc
and
in
jb
rcrl
adc
andl
and
rol
xchg
xchg
jmp
add
ret
pop
lods
push
or
mov
stos
xchg
jecxz
xchg
scas
movsb
lods
pop
push
adc
mov
insb
mov
jp
repnz
sub
aam
pop
incb
inc
push
outsl
aad
lock
out
sub
mov
pusha
rcr
cmp
inc
add
xor
xchg
cltd
lret
addr16
ja
dec
aam
add
mov
enter
xchg
enter
inc
sub
cmpsl
dec
inc
rorl
mov
lahf
jl
shl
mov
lods
push
or
jns
jns
jg
lahf
idiv
xor
and
lahf
add
pop
ljmp
decl
push
mov
adc
sub
das
mov
ja
xchg
mov
push
call
pop
add
mov
pop
or
lods
es
pop
inc
or
std
addr16
jge
xlat
inc
adc
lcall
inc
mov
mov
sub
mov
xchg
sbb
xchg
repnz
jns
or
cwtl
sbb
cmp
sbb
add
xor
push
bound
mov
pushf
mov
daa
fwait
pcmpeqw
iret
dec
aad
ss
inc
and
lret
pop
cs
jo
sbb
adc
aaa
add
pop
bound
jl
mov
or
push
xchg
cltd
fwait
cmpsl
dec
fadd
rorb
scas
clc
loopne
cmpsl
das
or
dec
mov
adc
add
mov
jnp
rcrl
movsl
mull
sbb
test
mov
dec
inc
pop
sub
inc
sahf
mov
pop
mov
insl
nop
adc
pushf
dec
and
fimuls
xlat
sbb
mov
mov
js
icebp
jg
or
xor
addr16
mov
imul
insb
in
bound
enter
mov
mov
ja
icebp
pop
outsb
sbb
pop
mov
data16
inc
sbb
jge
outsl
push
sub
cs
jg
push
pop
adc
pop
fdivrs
jp
xor
jno
lods
adc
clc
push
loopne
mov
jbe
aad
shll
fwait
test
sbb
xlat
es
negl
mov
imul
sti
mov
sub
mov
popa
mov
mov
sbb
orl
mov
mov
js
xchg
sbb
mov
inc
and
mov
jae
mov
mov
adc
xchg
push
pop
cmpsl
lock
imul
pop
cmp
mov
adc
pop
pop
loop
lea
sti
inc
mov
mov
dec
dec
hlt
push
xorb
adc
sti
add
push
cmp
rol
loopne
jge
mov
add
les
daa
lds
sahf
dec
push
sbb
or
loop
and
rolb
fistl
popa
mov
inc
pop
dec
movsb
adc
jl
icebp
enter
dec
out
sub
je
xor
adc
inc
repz
mov
int3
or
fldt
ja
inc
scas
inc
push
stos
bound
scas
inc
mov
pushf
call
inc
mov
mov
mov
xchg
xchg
xor
iret
sbb
or
dec
lods
and
mov
cmpsl
xchg
add
xchg
dec
or
mov
daa
leave
pop
push
lods
dec
jle
mov
lods
lods
pop
pop
fldt
and
cmp
and
ss
mov
outsb
inc
test
mov
aaa
push
rolb
mov
daa
dec
test
fcomi
into
xor
xchg
dec
imul
movsb
add
dec
mov
add
xor
push
sbb
or
lock
loop
sti
mov
dec
sub
test
fldcw
xor
dec
aad
inc
pop
and
push
push
mov
lret
add
jnp
and
dec
jecxz
or
xchg
jo
xor
inc
imulb
dec
inc
jle
xor
push
shlb
shll
xchg
xchg
mov
movsb
icebp
mov
sbb
cmp
mov
mov
sbb
mov
out
xchg
pop
pop
push
dec
dec
cmc
mov
pop
shlb
lcall
icebp
imul
cmp
xchg
daa
sbb
jno
mov
xor
or
mov
fucomip
jp
pop
sub
sti
call
mov
cmpsl
mov
fucomp
xor
data16
push
pop
popa
mov
bound
add
rclb
cs
enter
mov
push
jbe
shrb
aad
mov
movsl
mov
jl
or
cmp
js
mov
imul
subl
cli
lret
ficomps
enter
or
xor
aad
pushf
push
xchg
pop
push
sti
std
xor
mov
cwtl
dec
dec
pop
sub
testb
repnz
rcll
ficomps
pop
xchg
inc
push
notl
dec
loope
stc
adc
daa
push
xor
cmpl
add
imul
shll
xor
repz
cwtl
add
ret
lret
and
cmpsb
mov
leave
mov
lea
dec
mov
push
pop
jg
sbb
and
int3
dec
out
stc
cs
mov
mov
fnsave
mov
lcall
adc
lods
enter
pop
dec
rorb
test
inc
or
cmp
leave
add
push
rcrb
and
scas
jae
mov
cmpsl
add
dec
fwait
stos
stos
xor
divb
divl
sarb
nop
into
jns
inc
dec
pop
pusha
push
fs
testl
mov
daa
dec
pushf
ja
mov
mov
cltd
out
pusha
jae
stc
repz
or
lcall
dec
pop
add
adcb
aas
ret
pop
movsb
push
jns
xchg
scas
imul
lock
xorb
mov
sbb
add
cmpsb
push
or
fcomi
loop
int3
xlat
dec
loopne
aad
rol
mov
push
jo
pusha
es
ss
inc
xor
data16
xchg
xchg
loopne
shlb
mov
push
jo
pusha
es
ss
inc
xor
data16
xchg
xchg
out
cmpsb
enter
mov
lret
out
testb
push
ss
inc
xor
and
jbe
xchg
add
xor
add
mov
push
push
lret
ss
xor
pop
cltd
push
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
test
xchg
clc
mov
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
test
xor
sub
test
dec
add
add
into
add
mov
add
push
add
mov
add
roll
add
jg
or
rolb
add
or
sbb
test
push
add
add
add
add
in
add
add
out
pop
add
roll
add
add
sbb
lret
add
add
add
add
add
add
add
out
imul
or
pop
add
add
add
mov
roll
add
add
cmp
rolb
add
add
add
add
add
rolb
add
add
add
add
arpl
sbb
incl
xchg
arpl
push
add
imul
push
add
pop
add
add
add
stc
add
add
add
add
or
add
add
add
add
add
add
dec
add
add
lock
add
add
add
rolb
add
roll
enter
mov
jnp
jno
or
push
add
add
add
add
add
add
mov
add
jl
lds
xchg
add
add
mov
jbe
jbe
mov
jl
mov
mov
jb
cmp
enter
out
sub
pop
add
xor
pop
add
add
add
add
add
add
add
add
add
add
add
roll
cltd
add
add
add
add
add
add
add
add
add
add
add
sbb
jno
cmpsl
add
add
add
add
inc
add
add
add
add
or
add
add
add
add
add
lock
inc
add
add
mov
sub
stos
add
add
push
add
add
inc
add
inc
add
add
xchg
add
add
add
add
inc
add
add
add
add
cmp
jmp
incl
imul
jg
pop
add
sbb
jb
sbb
incb
sub
add
inc
add
add
add
add
add
add
add
popl
cmp
roll
add
lods
add
add
add
add
add
add
add
pushf
add
add
add
add
add
data16
add
add
and
add
add
add
fiadds
or
lret
add
add
add
add
add
add
add
stc
add
add
fiadds
push
add
lods
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
jb
pop
add
add
add
add
add
add
arpl
pushf
add
add
push
add
add
add
add
add
mov
in
add
add
add
add
add
add
add
sbb
mov
lcall
add
add
add
add
add
add
add
add
cmc
add
cld
int
and
cmc
cwtl
or
or
fs
pushf
loop
mov
mov
insb
imul
jne
mov
jle
rcll
cli
test
rcrb
xchg
repz
scas
add
sbb
out
testl
js
pop
cmpl
out
push
and
push
or
scas
sub
ret
scas
sbb
and
add
out
sub
ljmp
jae
rorb
loope
outsl
mov
add
and
cmp
or
pop
xchg
gs
mov
fimull
xchg
mov
mov
xchg
fdivs
ss
jo
xor
push
add
jle
leave
sub
inc
push
mov
in
imul
shrb
outsl
jne
cmp
in
imul
andb
pop
xchg
sti
mov
mov
loop
sub
arpl
pop
aaa
mov
and
xchg
lods
data16
bound
mov
pop
dec
subb
imull
aad
test
inc
or
mov
xor
hlt
sub
dec
xor
cltd
and
cmp
rorb
jns
xchg
push
sbb
subl
push
and
in
lock
cli
sbb
pop
es
fisubs
or
push
fcoms
or
sbb
pop
mov
lea
dec
adc
push
mov
int3
out
pop
popf
outsl
test
or
fnstenv
scas
inc
add
fisubrs
sti
mov
xor
outsl
rorb
sbb
add
lods
fcompl
scas
fstp
push
cmp
mov
pushf
mov
inc
sahf
inc
and
lods
dec
rcll
jl
xor
cmp
mov
pop
xchg
pop
xor
inc
ljmp
mov
ds
mov
pop
mov
nop
fcompl
hlt
repnz
int
jecxz
jmp
nop
xor
dec
lret
jmp
test
sarb
lea
loop
out
int3
sub
out
xchg
sub
pop
mov
pop
xor
repnz
xchg
push
cmc
popf
hlt
vcmppd
mov
pop
push
dec
lock
in
mov
bound
sub
aas
out
xchg
jg
iret
and
shll
flds
adc
xor
adc
dec
into
orl
mov
mov
fnstsw
xor
iret
sub
stos
roll
add
and
stos
rolb
rclb
sub
mov
adc
lock
pop
xor
cmp
jmp
jmp
sbb
popa
mov
pop
jo
cltd
fs
and
mov
and
jo
outsb
pusha
pop
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
