decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
cli
pop
ljmp
jo
stos
pop
decl
jp
push
sbb
cmp
lret
pop
ljmp
pop
stos
in
ljmp
stos
jp
push
sbb
sub
lretw
inc
ljmp
or
mov
pop
repnz
dec
imulb
pop
fidivrl
add
ret
imul
pop
inc
push
das
xor
fcmovnu
inc
addl
pushf
dec
adc
mov
add
adc
out
push
jnp
cmpb
or
ds
sbb
cmpsl
add
push
sbb
lret
pop
mov
scas
ss
or
pop
push
fildl
cmpl
jo
cmc
iret
lds
cmp
adc
pop
scas
movaps
cmpsb
add
add
lds
dec
jg
add
pop
out
iret
xor
adc
add
push
imul
int
cs
sub
cli
dec
ljmp
push
stos
negb
dec
xlat
jp
push
sbb
inc
sbb
sbb
sub
push
mov
aas
ds
jnp
jns
cmp
imul
enter
cwtl
pop
rclb
arpl
pop
stos
in
and
aas
mov
stos
add
lcall
jp
xchg
dec
cltd
sub
aas
mov
mov
decl
jp
push
sbb
sub
jg
dec
cli
pop
ljmp
pop
stos
out
pop
decl
jp
push
sbb
sub
mov
lods
add
ss
inc
insb
sarl
scas
adc
jb
enter
fiadds
inc
lods
push
ds
sbb
inc
adc
fdivrl
jo
xor
hlt
lods
xor
sub
mov
scas
popf
aaa
mov
inc
push
call
mov
jecxz
or
sub
inc
cmp
sub
pop
xor
inc
and
xchg
mov
add
jb
loop
ret
add
cmp
iret
popa
out
cld
in
in
test
mov
pop
movd
push
lret
sub
in
imul
mov
movsb
mov
mov
push
movsl
add
pushf
addr16
xchg
push
sbb
push
fcmovnbe
inc
pop
aad
xchg
push
add
mov
or
and
xor
push
mov
sbb
js
pop
stc
ljmp
shrl
mov
cmpl
sbb
stos
inc
add
std
jecxz
dec
and
mov
mov
mov
out
jae
ds
xchg
outsl
and
cmpb
cmp
movsl
push
cli
out
cmpsb
xchg
movsb
cli
cmpsl
xor
fwait
mov
dec
mov
subb
cmc
repnz
lret
mov
adc
dec
call
loopne
subl
sub
arpl
stos
and
int
cmp
cmp
inc
movsb
test
xchg
testl
aas
les
mov
xor
pop
sub
mov
cmpl
filds
xchg
push
stos
mov
scas
jl
aam
cmp
mov
jg
ja
jmp
mov
push
mov
lahf
insl
dec
pop
sub
sub
in
dec
pusha
jmp
mov
add
addr16
shlb
in
xchg
fyl2xp1
outsb
imul
xchg
xchg
arpl
loope
cltd
cmp
xlat
sub
lock
andb
cli
pop
rep
lods
mov
leave
cltd
in
in
movsl
pop
stc
cmpsl
mov
add
jo
sti
fdiv
mov
dec
notb
dec
jle
stc
mov
incb
in
js
jmp
mov
imul
adc
xchg
mov
iret
inc
fs
int
cmp
ficoml
cmp
jb
shll
add
ljmp
pop
push
mov
mov
lods
mov
bound
mov
push
in
dec
ljmp
or
sub
jae,pn
xchg
pusha
sarb
mov
lcall
pop
cmp
mov
call
shll
pop
pop
xchg
in
testb
cmc
or
or
push
jbe
js
test
and
dec
inc
cmp
orl
and
scas
into
jne
cltd
jle
inc
xor
push
iret
xor
cli
pop
mov
aas
lret
cmc
or
dec
insl
loopne
ss
xchg
jecxz
xchg
nop
ds
cmc
push
xchg
lods
sarl
arpl
mov
add
xchg
inc
in
mov
into
sbb
bound
hlt
add
cmpsl
adc
cmp
mov
iret
xor
xchg
sbbb
push
mov
fnsave
lods
pop
mov
in
pop
shl
or
jg
pop
pop
jmp
xchg
fnstcw
adc
and
mov
xchg
scas
mov
out
jns
insb
inc
lods
adc
cmpsl
or
into
mov
pop
jb
cld
mov
inc
adc
lcall
out
cmp
dec
inc
mov
add
ss
aaa
adc
enter
xchg
inc
fwait
pop
add
in
push
cmpsb
jbe
inc
and
pop
jae
cwtl
xchg
pusha
jb
add
or
sub
xchg
pop
or
push
cmp
or
push
loopne
push
dec
and
jns
dec
stos
nop
sbb
bound
xchg
jmp
xor
insl
js
lea
push
outsl
or
sbb
mov
jbe
pushf
pop
repz
adc
adc
xchg
mov
incb
push
shrl
sti
or
adc
push
xchg
mov
push
sub
push
push
js
or
push
cmpsb
and
or
push
loopne
sbb
ds
gs
jl
push
add
mov
mov
ds
hlt
mov
inc
mov
mov
ljmp
push
cmp
adc
cmp
xchg
xchg
or
or
push
mov
popf
cmpb
loope
pushf
in
sahf
sub
std
mov
jp
test
add
mov
sti
sub
aam
sbb
pmullw
mov
outsb
sti
testb
xor
imul
mov
xor
pop
xchg
or
or
leave
cmpsl
data16
xor
dec
push
test
imul
lds
fiadds
js
loop
mov
lcall
dec
jmp
mov
fimuls
rorl
ret
aad
mov
cmp
mov
jl
mov
stos
sbb
bound
mov
dec
decl
jle
sti
ret
inc
setg
push
adc
movsl
fmuls
ss
scas
pop
push
mov
pusha
inc
jecxz
push
push
cmp
pusha
or
mov
call
test
mov
ja
adc
pop
mov
inc
in
pop
out
stos
sbb
add
cli
mov
jle
test
scas
sub
sub
mov
mov
loopne
xchg
or
jecxz
incw
inc
je
lock
push
fsubs
jo
fs
fpatan
mov
in
cmp
pop
dec
and
arpl
mov
test
xchg
mov
bound
sub
mov
out
ret
push
out
int3
pushf
mov
or
cwtl
fistpl
sub
sarb
scas
in
imul
add
rcrl
dec
imul
sbb
pusha
orl
or
or
xor
or
jmp
rclb
lret
lods
test
push
lcall
loop
lret
push
cvtps2pi
mov
xor
into
jp
xorb
push
adc
fidivrs
cmp
loope
or
jp
and
sub
icebp
pop
mov
test
sti
shlb
sub
fisttpll
mov
add
sbb
push
aas
test
jns
std
mov
cmpsb
je
push
nop
mul
push
ja
xchg
sbb
inc
pop
sbbb
mov
add
les
imul
les
jg
mov
cmp
cmp
repnz
jmp
and
jg
mov
xchg
mov
fs
push
int
pushf
or
scas
fists
add
dec
xchg
xor
int3
jmp
enter
out
insl
ss
add
jmp
jecxz
sub
and
jns
push
pop
pop
sub
inc
or
sbb
push
leave
dec
dec
add
lods
gs
pop
mov
inc
add
xchg
push
mov
jns
jb,pn
out
pop
js
inc
sub
rcl
xchg
pop
jmp
aaa
add
stc
cmp
test
int
iret
fisttps
sti
jl
sub
sub
add
sbb
je
lods
mov
add
adc
inc
psubb
jno
dec
stos
inc
push
mov
stc
outsl
repz
dec
fldlg2
test
je
insb
call
lcall
mov
mov
inc
xor
out
ds
jle
fdivl
xor
inc
imul
xlat
out
fnstcw
cmpb
add
int3
loope
loopne
out
rclb
ret
xor
xor
fs
pop
jmp
popf
xchg
add
push
lret
test
fcompl
icebp
shrl
push
js
mov
aas
cmpsb
push
in
iret
push
xor
in
cmpsl
sti
rclb
sub
push
repnz
push
sub
sub
fnsave
adc
cwtl
push
inc
bound
fidivrl
mov
xchg
dec
movsb
imulb
mov
into
cmp
insb
mov
out
mov
rcrb
inc
add
into
roll
or
lods
mov
and
movb
ja
add
rcrl
cld
xchg
or
mov
lock
gs
mov
sete
bound
ret
leave
push
mov
dec
clc
aam
mov
aas
xor
xor
inc
jo
test
sub
mov
es
addl
or
push
out
aam
sbb
gs
stos
and
mov
rclb
sbb
sbb
shl
mov
js
adc
jb
pop
pop
xrelease
movsl
or
and
cmpsb
call
fs
ret
or
divl
leave
cmp
sub
data16
repnz
out
nop
outsl
adc
test
and
inc
stc
sbb
ss
mov
pushf
subl
sub
mov
jmp
jae
sbb
imul
fs
and
dec
mov
xchg
cmp
sbbl
icebp
cld
xchg
dec
dec
loope
fdiv
pop
imul
imul
movsb
popf
sub
pusha
mov
push
push
pop
dec
stos
sar
icebp
jns
pop
mov
insb
add
repnz
or
sti
jle
sbb
sub
movsl
adc
and
cmp
mov
sahf
repz
jno
jno
push
and
mov
mov
pandn
jnp
pop
jbe
xlat
fiaddl
mov
rcrl
or
int3
es
mov
lahf
call
jl
adc
std
dec
mov
inc
xchg
mov
fs
popa
leave
pop
push
arpl
loop
cltd
mov
sbb
pop
jge
xchg
sub
addb
out
jae
fwait
das
sub
cmp
int
movsl
and
outsb
clc
sahf
push
mov
xor
ss
popa
cmp
jle
sbb
push
cwtl
ss
ficoms
push
stos
fwait
xor
das
sbb
pop
popa
mov
cs
mov
jle
mov
std
filds
icebp
mov
jmp
fdivs
inc
gs
shll
insl
cmp
sub
and
aas
inc
mov
es
jo
clc
push
popa
mov
inc
jge
mov
out
push
mov
adc
xchg
cld
add
sub
push
std
cmp
mov
mov
inc
loop
add
hlt
loop
pop
outsb
or
ja
icebp
movsl
pop
mov
cmc
fld
mov
lret
and
push
int3
lret
xchg
lods
pushf
imul
sub
fidivrs
xor
imul
dec
push
loop
lahf
mov
negl
add
adc
mov
mov
push
into
in
mov
sbb
fcmove
shl
sbb
mov
jecxz
push
jl
int
lret
stos
movsl
rorb
mov
jle
fdivl
jae
adc
outsb
pushf
arpl
scas
push
pop
shrb
rdpmc
icebp
loope
add
rcll
shll
jb
add
lods
testb
rcrb
stos
cmp
addr16
add
jge
mov
xchg
stos
adc
xchg
ret
add
jns
dec
xchg
icebp
jmp
and
cld
cmpsl
dec
mov
outsl
leave
mov
pop
adc
cmp
push
sahf
in
mov
out
incl
in
mov
rclb
dec
stos
nop
pop
jbe
insl
and
pop
enter
xor
fadds
pushf
test
xchg
fcmovu
movsl
ret
lock
dec
pop
pop
push
not
push
and
pushf
cmp
mov
mov
arpl
mov
xchg
scas
int
xor
cmp
jmp
cmc
sub
jae
jge
in
xchg
shrb
xor
jmp
push
orl
or
sbb
jb
add
pop
fbstp
sub
dec
sbbl
leave
adc
fwait
inc
jp
repnz
dec
mov
scas
fst
repnz
mov
aaa
nop
inc
mov
les
cmp
jmp
mov
outsl
xor
xor
inc
xchg
lret
and
mov
dec
push
pop
lret
jnp
leave
mov
sub
inc
or
ss
and
rolb
enter
or
xchg
iret
icebp
or
aam
mov
xor
fdivrs
aad
push
sahf
add
dec
fs
jmp
pop
out
ljmp
sbb
int3
push
imul
es
sub
test
xchg
and
push
cld
jne
or
pusha
scas
ret
aas
js
pop
in
inc
xchg
jp
or
enter
fmull
mov
les
aam
mov
negl
sar
es
cmpsb
call
dec
loop
jl
xchg
ret
fs
mov
xor
repnz
mov
sti
imul
pop
xchg
and
push
addr16
into
mov
sub
sbb
jg
sbb
sbbb
cmp
jmp
mov
sub
inc
push
scas
les
cmpsb
mov
adc
ljmp
fldl
push
mov
clc
push
aaa
lcall
mov
imull
jecxz
adc
incb
fistl
xchg
push
sub
mov
mov
xchg
fldt
jp
out
fucomp
cmc
inc
mov
mov
jo
push
loope
cmpsb
into
jnp
cld
jle
in
xchg
rcr
or
jno
inc
pop
cli
pop
dec
mov
push
imul
scas
add
cmp
and
lock
stc
fs
gs
icebp
in
in
xor
pop
dec
sub
fadds
xor
rcr
cmpsb
into
incb
mov
inc
pop
xchg
scas
in
out
lcall
or
push
xor
arpl
mov
inc
jl
pop
imul
sbb
and
pop
sbb
push
cmp
jecxz
aam
lcall
in
cltd
or
dec
xchg
scas
mov
int
stos
lcall
push
lock
pop
mov
jge
pusha
dec
xchg
or
ja
lret
add
xor
xor
lret
add
add
lret
and
mov
loope
xchg
and
sbb
sbb
sahf
sub
lods
xor
inc
mov
shll
mov
mov
jmp
and
arpl
gs
xchg
adc
jl
repnz
sti
in
xchg
call
pop
fsts
fistpl
js
push
shll
sub
inc
xor
and
inc
lods
sbb
pop
pop
jecxz
pop
sub
cmp
add
lods
xchg
shl
stos
xor
push
jecxz
int3
jg
daa
imul
sbb
lret
and
adc
jecxz
pop
out
add
rcr
adc
jo
inc
mov
add
xchg
lds
dec
les
fiadds
pop
xor
adc
sbb
imul
repnz
kortestw
or
sub
scas
jae
call
out
nop
lsl
push
cltd
jbe
cmp
push
pusha
push
scas
push
jle
mov
xchg
cmp
pop
inc
popa
sbb
shl
lret
push
and
hlt
dec
pop
adc
mov
lea
lods
stos
sub
cmpsl
lret
lds
cmpsb
add
jl
mov
jle
out
xchg
fiaddl
inc
adc
cmp
aad
and
jmp
pop
lahf
jbe
fstl
mov
push
push
into
fwait
sub
adc
loope
ficomps
mov
ret
adc
into
push
xorl
cli
cwtl
push
xchg
mov
mov
or
in
sbb
fdivs
add
rorb
movd
test
or
adcb
pushf
loop
jp
push
fsts
jae
push
pusha
and
mov
adc
pop
cmpsb
mov
push
test
jbe
lcall
cmp
orb
pop
jle
popf
mull
hlt
and
dec
enter
and
jbe
adc
inc
cmpsl
push
mov
xlat
mov
hlt
mov
hlt
and
and
mov
jo
sti
add
cli
sti
push
dec
pushf
or
mulb
push
and
stos
pop
loope
mov
jns
rclb
adc
aad
adc
mov
sbb
stos
cmp
or
inc
cwtl
jno
cmp
stos
add
dec
adc
add
leave
inc
and
fisttps
orl
mov
add
rorl
mov
outsb
jbe
sbb
sub
sbb
or
xchg
or
je
out
dec
leave
sub
iret
xchg
in
decb
sub
dec
mov
adc
shr
mov
add
and
xor
sti
jecxz
add
and
cmp
xor
shrl
call
outsl
xchg
adc
pop
add
sub
sarl
das
add
inc
cmp
xor
mov
lds
subb
shrl
mov
nop
xchg
fucomi
into
jne
leave
sbb
aam
xorl
pushf
std
push
mov
aad
lcall
mov
bound
iret
outsl
xchg
pop
sub
nop
and
push
cmp
cmpsl
jecxz
push
loop
subl
into
cld
int
pop
movsl
test
sbb
fdivp
dec
mov
mov
enter
add
lret
pop
xlat
in
inc
adc
push
leave
mov
sub
xor
mov
js
lods
gs
mov
and
cmp
mov
sbb
inc
cmp
and
or
and
fmul
push
xchg
xchg
sbb
and
roll
inc
data16
mov
ret
mov
inc
lds
enter
pop
std
popf
cmpsb
lods
nop
orb
mov
pop
add
inc
ficoml
mov
movsl
rolb
adc
or
mov
mov
int
sar
adc
stos
cwtl
aam
out
dec
xchg
shrl
test
jmp
inc
js
push
pop
mov
push
sbb
test
cwtl
jmp
jae
adc
push
in
adcl
scas
arpl
data16
dec
xchg
out
mov
push
push
adc
stos
pushl
sub
mov
sbb
mov
subb
jb
mov
xchg
dec
mov
sahf
jle
fidivs
fistps
sarb
jae
sub
clc
add
cmp
aaa
lahf
sti
popa
lods
shr
lcall
mov
sub
dec
jbe
scas
sti
out
xlat
insl
and
or
cwtl
dec
movsl
xchg
popw
das
dec
jp
add
pop
test
push
aam
push
divps
push
xor
int3
mov
or
sarl
daa
lret
xor
ret
imul
leave
inc
jl
add
rcrl
cli
dec
xor
jbe
ss
add
inc
lods
add
xor
aas
inc
and
xchg
test
sbb
aaa
mov
lcall
mov
imul
mov
jbe
mov
lods
cmpsl
test
jge
frstor
adc
and
rcrl
inc
rclb
cmp
sbb
cld
push
push
movsl
je
fsts
push
ds
cwtl
fidivrl
mov
test
jae
xlat
cmp
xor
scas
sbb
jbe
cmpb
into
ret
call
ja
mov
mov
cli
push
jno
test
bound
rcll
mov
add
icebp
xor
aas
xor
mov
lock
add
inc
aaa
mov
cmpsb
lods
jl
into
es
mov
jl
in
push
adc
jno
es
loope
and
hlt
faddl
inc
ret
dec
xor
js
leave
bound
and
icebp
in
adc
push
xor
xchg
mov
jb
push
into
mov
loope
mov
fisttps
movsb
sbb
mov
arpl
adc
sbb
repz
lcall
rcl
cli
sub
decl
jmp
push
fists
or
xchg
jle
or
cmp
sub
push
or
pop
xlat
imul
cmpl
daa
dec
popf
mov
hlt
in
aad
fprem1
push
pop
lds
mov
mov
mov
movb
rolb
nop
xchg
leave
or
adc
dec
pop
into
lahf
mov
test
insl
push
std
lahf
and
and
push
mov
lret
sub
lock
addr16
mov
mov
jl
rcl
es
arpl
or
in
pop
jg
xor
mov
fiaddl
gs
cmpsb
pop
lret
aas
lret
movsl
std
jge
or
sbb
sbb
data16
cld
mov
add
call
mov
mov
pop
xor
cld
sub
jnp
push
fstl
cmp
adcb
sti
es
addr16
lea
sbb
push
or
inc
pop
sbb
mov
dec
cli
add
inc
mov
ljmp
adc
cmp
cmp
pop
ljmp
pop
stos
out
pop
decl
jp
push
sbb
sub
jg
dec
cli
pop
ljmp
pop
stos
out
pop
decl
jp
push
sbb
sub
jg
dec
jp
ljmp
pop
stos
out
dec
lret
jp
push
sbb
sub
dec
lret
pop
ljmp
lahf
stos
adc
loopne
jp
sbb
jo
pusha
aad
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
jge
insl
dec
pop
jle
outsb
xor
pop
js,pn
push
int
mov
scas
lea
pop
jle
outsb
cmp
ds
into
test
sti
lods
mov
pop
insl
dec
pop
jle
outsb
cmp
ds
in
scas
fwait
jecxz
aad
into
rcl
fninit
fnstenv
insl
ds
sub
sub
pop
aaa
xor
pop
mov
push
pop
rcrl
adc
jecxz
push
test
movsb
or
ret
xor
dec
sti
inc
mov
incl
lods
lds
pusha
in
in
std
fiadds
adc
xor
cmp
insb
pop
sub
cmp
ss
std
and
xor
jmp
inc
mov
outsb
popf
lret
scas
sbbb
arpl
outsl
or
in
and
fcmovne
add
int
sahf
jge
cwtl
dec
addb
pop
sbb
lods
lds
test
mov
cmpsl
lods
fiadds
adc
mov
insl
dec
pop
jle
outsb
cmp
ds
into
int
mov
mov
add
cmp
sub
push
pop
fs
pop
dec
pop
mov
lods
mov
leave
fxch
fxch
jle
pop
and
pop
inc
dec
sbb
mov
mov
fisttpl
sbb
cmp
ds
into
int
mov
mov
insl
dec
pop
jle
outsb
cmp
ds
into
int
mov
mov
enter
imul
xchg
into
lcall
std
sbb
pop
add
push
cmpl
movsl
dec
out
in
sti
push
sbb
insb
lea
push
aas
outsl
cmp
adcl
xchg
lea
jno
cmpsb
xor
mov
ror
adc
lods
sub
sub
sbb
cmc
jnp
lcall
dec
mov
test
popl
dec
dec
fisubs
loop
stos
xchg
insb
inc
mov
out
repz
xchg
out
sbb
push
aaa
mov
imul
mov
pop
test
ret
cli
sub
and
outsb
cmpsl
xchg
lcall
sbb
inc
in
hlt
cmpsb
xchg
push
push
idivb
cltd
stos
pop
dec
mov
into
bound
setns
bnd
addb
cmp
aad
sti
test
or
les
sub
sub
cld
lock
sbb
dec
jae
ds
sti
mov
mov
fisttpll
pop
out
xchg
jecxz
into
jnp
cmc
nop
cmpsl
or
push
insl
jmp
mov
pop
lahf
push
fmull
out
nop
cmp
leave
xchg
outsl
and
xchg
call
adc
or
into
lea
push
or
pop
push
mov
inc
lock
xchg
repnz
add
enter
mov
pop
outsb
and
stc
test
fidivrl
xchg
lahf
and
iret
sbb
or
ret
jb
ss
out
mov
xchg
pop
dec
xor
push
inc
jo
mov
outsb
mov
xchg
leave
loopne
scas
pop
adc
xor
ja
push
movsb
fidivrl
and
dec
adc
jo
xchg
cmp
dec
or
or
int3
dec
jge
ds
cmp
adc
inc
test
inc
sbbl
jae
push
pop
or
xorb
ljmp
andb
xchg
fwait
movsb
xor
insl
inc
cmp
fisubl
push
jnp
js
push
sbb
sbb
ret
pop
sub
jno
mov
stos
cmp
lret
add
filds
mov
pop
push
xor
sub
add
js
ljmp
fiadds
leave
and
sub
hlt
dec
out
and
daa
insl
dec
pop
cs
and
les
ja
dec
push
jo
mov
and
dec
push
test
adc
loopne
shrb
stos
push
mov
mov
jno
repz
insl
inc
mov
inc
dec
jns
sbbb
scas
fs
adc
push
outsl
jl
xchg
loope
xchg
and
int
in
sbb
mov
gs
aaa
inc
mov
shlb
test
es
sub
add
adc
adc
outsl
sbb
dec
out
xor
pop
cmp
ret
add
sahf
das
aam
in
stc
ret
cld
push
clc
call
aaa
ror
fistps
mov
dec
push
mov
mov
jecxz
addr16
cmpsl
cmpsb
jno
test
xchg
mov
cmpsl
pop
mov
lods
mov
inc
loope
ret
arpl
mov
or
stos
gs
jne
dec
mov
jl
cmp
push
andl
push
xlat
mov
jb
movsb
ret
xchg
repnz
push
mov
test
hlt
xor
js
std
imul
loop
loope
or
add
mov
out
push
pop
sbb
pop
leave
jne
cld
incb
mov
cmpsb
insl
stos
arpl
jmp
push
fucomip
in
dec
movsl
push
mov
pop
test
inc
xor
addr16
push
stos
stos
outsl
lcall
push
and
aas
ss
pop
xchg
insb
jp
mov
or
jnp
push
ja
push
cmp
das
xor
add
jno
bound
call
xchg
mov
mov
addr16
divb
push
sub
fildll
xchg
mov
jo
and
push
mov
jb
xlat
out
cmp
loope
adc
dec
cmp
push
fxam
push
in
pop
repz
cmp
addr16
mov
mov
push
xor
xor
and
je,pt
xchg
pop
xchg
xor
sub
add
call
out
cmp
mov
jecxz
test
pop
cltd
jl
pop
add
lret
in
jae
mov
decb
ds
mov
jb
pop
hlt
stc
movsb
fwait
in
xchg
sub
sub
cmp
test
add
and
xor
lret
daa
and
loopne
cmp
jo
mov
mov
cs
add
xor
xchg
test
loope
rolb
fs
fidivrl
movb
clc
cmp
loop
imul
out
fdivrs
fadd
xor
xor
and
movsb
jecxz
test
xchg
push
js
lds
ffree
fadds
lea
clc
int
sti
pop
ret
pop
lds
aaa
loop
jno
cmp
movsb
jge
sub
in
mov
test
sub
rcr
loop
repz
jp
shr
mov
mov
mov
xchg
cmp
lods
xor
loope
xchg
jbe
stc
jns
dec
fcomp
fwait
add
mov
or
mov
adc
pop
sbb
add
jbe
test
aas
xchg
mov
add
ljmp
mov
stc
pop
jmp
sub
shlb
sbb
jl
add
xchg
popf
hlt
rcrb
inc
push
inc
sbb
aam
xchg
push
fistpll
inc
icebp
dec
dec
into
inc
pop
inc
pop
out
sub
mov
jae
cmp
adc
inc
outsl
mov
add
and
test
sbb
dec
addr16
sti
jmp
fs
subl
pop
or
and
and
pushf
xchg
or
or
insb
aam
inc
repnz
repz
aad
sub
scas
dec
mov
push
jnp
shlb
leave
int
fistps
add
mov
mov
cmp
adc
jge
ja
fsqrt
mov
inc
jecxz
sub
sbb
cmpsb
cmp
jo
lds
adc
pop
bound
test
arpl
mov
adc
sbb
mov
mov
sub
lret
cli
jno
mov
xlat
mov
mov
aaa
sbb
andl
sub
pop
adc
cwtl
int
rcll
cmp
and
lock
nop
movsl
push
push
mull
mov
dec
push
fsubrs
enter
sbb
sbb
jb
and
aad
push
inc
adc
xlat
jle
mov
int3
and
fidivl
sar
enter
pop
or
mov
xchg
aaa
int
push
or
repz
mov
leavew
pop
cmp
movsb
cmp
call
lds
mov
or
or
push
sbb
xchg
icebp
and
mov
in
mov
adc
shl
icebp
lods
inc
xchg
jnp
sbb
lret
repnz
or
xchg
ds
mov
sti
jecxz
arpl
pop
movsl
ljmp
add
int3
je
in
mov
pop
inc
les
add
sub
es
xor
outsb
jecxz
dec
pop
adc
cmpsl
pusha
mov
adc
shlb
inc
into
test
cld
inc
enter
in
cld
mov
leave
mov
stc
push
dec
sbb
pop
lods
adc
adc
mov
mov
ret
xor
jae
pop
int
test
dec
sub
pop
pop
push
xchg
jae
fs
jne
out
popf
sub
mov
cmp
ljmp
into
fnstenv
jb
pop
push
xor
shl
je
leave
gs
add
ret
in
push
mov
lds
scas
ds
ljmp
xorb
ds
data16
aad
sub
mov
fsubl
dec
lods
or
pop
sub
add
xchg
mov
test
cmp
adcl
dec
repnz
adc
arpl
imul
jp
cmp
and
jns
mov
in
push
dec
leave
out
mov
adc
aaa
inc
fstps
idiv
xchg
xor
dec
adc
push
xchg
or
jmp
imulb
mov
jae
nop
ljmp
cmpsb
lods
out
in
sbb
push
push
jae
push
imul
lods
outsl
fwait
rorb
aas
mov
xchg
inc
icebp
imul
pop
push
pop
lods
rcrl
shl
jl
pushf
add
or
dec
dec
lahf
or
xchg
jo
roll
in
pop
call
arpl
inc
leave
and
fidivs
mov
or
jecxz
xchg
addl
loope
mov
pop
jmp
int
mov
std
call
in
xchg
jb
adc
push
cmp
inc
push
imul
mov
mov
sahf
lahf
sub
fldt
push
into
adc
cld
jbe
pushl
xchg
sahf
test
mov
arpl
sub
insb
mov
jb
cmp
sub
hlt
pop
fwait
lods
pushf
push
mov
jecxz
dec
je
scas
mov
push
jl
mov
mov
cmovge
sbb
fcomi
rolb
iret
icebp
xor
je
test
ljmp
test
add
adc
addr16
pop
adc
test
jg
pop
ja
subl
aad
cmpsl
xchg
inc
dec
push
inc
inc
js
cmp
lret
outsl
jae
out
push
add
mov
rolb
ja
mov
dec
nop
pushf
sbb
ss
pop
repz
repz
fcomps
mov
mov
push
mov
in
dec
cmp
jne
fmull
sub
stos
sbb
sti
xchg
aad
inc
sub
repnz
cwtl
roll
popl
inc
mov
inc
test
shlb
dec
sbb
sub
push
pushf
push
sub
pusha
test
xor
ficompl
aaa
and
inc
inc
push
adc
jle
or
aaa
outsl
mov
xchg
mov
jge
jbe
or
aas
stos
movsl
enter
jge
jp
cmp
dec
xor
add
iret
sub
mov
push
ret
fmulp
dec
xor
movsl
lret
xchg
inc
subl
imul
sti
rcrb
or
fwait
pop
dec
cmpsl
pop
fwait
repz
cmp
inc
shl
adc
dec
jns
xchg
lret
cmpsb
and
rcrb
loopne
mov
outsb
test
int3
dec
mov
add
dec
stc
loope
xorl
mov
lahf
pop
bound
mov
imul
shrb
xchg
dec
in
and
daa
inc
adc
add
add
pop
xchg
push
es
or
shlb
aaa
jecxz
xorb
into
pop
scas
xchg
inc
push
clc
and
pop
pop
mov
inc
dec
xlat
sub
andl
int3
test
inc
pop
push
in
adc
in
ljmp
pop
cs
adc
add
jg
inc
aas
xor
sub
sti
mov
jne
dec
add
adc
test
aas
movsl
outsl
nop
ds
cs
jo
fidivs
ss
pop
inc
xor
xor
movsb
sub
dec
xor
xchg
pop
jl
lods
das
pop
shll
fimull
dec
mov
stos
pusha
lidtl
in
lods
jo
xor
movsb
sar
repnz
cltd
loopne
push
mov
stos
add
xor
pop
pop
ds
imul
repnz
mov
mov
in
lret
xchg
xor
inc
jp
dec
sbb
repnz
mov
leave
nop
cmp
inc
lds
and
daa
inc
addr16
and
xor
cmp
pop
push
bound
gs
xor
dec
or
mov
push
inc
loope
xor
outsb
data16
jp
adcl
ljmp
cmpsb
inc
rcll
outsl
arpl
repnz
pop
mov
mov
sbb
add
cvtdq2ps
lods
sbb
orl
inc
jno
cld
jno
xlat
std
shlb
dec
and
mov
int
sbb
mov
xor
data16
cmp
xchg
icebp
mov
inc
xchg
test
into
roll
fdivs
shrl
movsb
jae
xlat
and
test
lock
inc
mov
out
stos
cmpsl
jecxz
stc
sub
into
mov
mov
bound
pop
pop
lock
cmp
cmpsb
add
rcrl
enter
int
jle
ja
in
xchg
xor
fs
repz
jnp
fadds
push
push
fsubrs
sub
inc
cmpsl
call
ficoms
mov
in
xchg
les
repz
sti
es
ss
ljmp
cmp
dec
mov
adcb
mov
aam
dec
addr16
jbe
lahf
lahf
sbb
ss
test
pop
dec
xchg
sbb
xchg
push
ficoml
or
movsl
push
jb
and
xchg
and
cmp
testl
mov
mov
das
loope
adc
lcall
pop
call
sahf
mov
adc
outsb
hlt
outsl
dec
or
mov
or
sbb
in
call
mov
or
or
mov
mov
pop
adc
nop
int3
add
or
mov
add
or
push
jae
pop
loope
push
sub
add
inc
inc
cmc
in
rolb
call
fmull
fcmovnu
jno
roll
das
ja
push
sarb
cmp
sub
cmpsl
inc
sbb
push
mov
stos
mov
push
lock
outsb
inc
jl
std
jmp
push
cltd
jecxz
push
xor
jo
fs
mov
lcall
fwait
icebp
in
xchg
xchg
adc
sbb
xor
in
loopne
fsubs
cmpsl
ss
arpl
jae
je
not
jb
sbb
sbbb
mov
pop
ret
xchg
adcl
lcall
dec
or
in
into
push
stos
inc
pusha
in
int
shl
and
mov
nop
jge
push
enter
fsubl
sub
pop
std
out
pop
mov
sub
or
gs
out
mov
sarb
mov
cmpb
imul
jmp
out
loope
hlt
and
int3
xchg
ret
add
bound
and
xor
fstps
mov
and
nop
std
pop
sbb
or
lcall
xorb
mov
hlt
pop
sarl
rolb
cld
and
adc
fwait
jecxz
mov
arpl
les
cmp
movsl
mov
fmull
repnz
lods
scas
fcoml
movsl
or
fiadds
pop
loop
fsubrs
ret
in
pop
out
dec
cs
cli
adc
out
dec
jge
jmp
mov
lcall
lock
nop
adc
mov
adc
add
lods
insb
test
mov
lods
jle
hlt
push
push
ljmp
imul
stos
cli
out
les
jnp
add
add
adc
jae
scas
test
mov
jns
inc
pusha
mov
clc
cmp
dec
dec
sbb
sbb
pushf
mov
stos
sub
repnz
fidivrl
cmp
cmp
lahf
imul
shr
inc
dec
or
xchg
adc
jge
lock
ds
test
fiadds
ftst
and
shll
push
nop
sub
xor
jge
xchg
jb
ret
rcrb
mov
xchg
sbb
mov
inc
add
mov
push
mov
scas
or
push
pop
movsb
es
xchg
lret
not
sbb
fs
imul
lea
gs
sbb
fdivrs
js
mov
shl
ret
movsl
adc
xchg
add
lods
fwait
adc
jmp
or
daa
repnz
mov
test
loop
test
sbb
cmp
add
cmp
push
sbb
mov
mov
mov
test
push
shr
lret
stos
inc
push
pop
in
in
cmp
mov
xchg
xchg
rolb
mov
ja
sub
xor
mov
clc
and
shll
addr16
xchg
sbb
xchg
cmp
xor
dec
xchg
push
dec
cmc
add
ret
cmpsl
out
out
cmp
add
cmpl
add
notb
ja
jp
repz
loope
dec
or
imul
imul
imul
repz
test
jbe
push
or
outsl
xchg
mov
push
rcl
stos
test
es
outsb
scas
test
lea
fidivrl
add
adc
les
ds
repz
ljmp
xchg
call
pop
adc
lahf
jmp
getsec
pop
inc
jo
shl
push
lock
out
test
mov
jecxz
fs
cmpsl
jnp
lods
mov
dec
insb
adc
push
fs
aam
arpl
dec
imul
jmp
repnz
mov
into
int3
icebp
jecxz
push
repnz
mov
cmp
mov
inc
arpl
pushf
shll
xchg
enter
les
out
test
popf
cwtl
and
mov
or
add
jns
mov
push
rol
inc
outsl
sbb
shlb
fwait
daa
and
addr16
push
fdivl
jb
jecxz
jmp
in
loop
imul
hlt
in
stos
jle
add
hlt
lcall
push
es
adc
cs
mov
jne
and
dec
outsb
adc
daa
shlb
push
xor
ret
cmp
inc
push
pop
push
push
sub
sub
dec
add
or
xchg
int
cs
imul
ficomps
push
and
xchg
inc
push
mov
mov
fdivrl
scas
ss
jl
out
adc
fs
dec
aas
fs
sub
and
jg
mov
fidivrs
pushf
rcl
cmp
hlt
mov
gs
cld
sbb
pop
or
adc
mov
enter
xchg
mov
or
mov
btrl
xor
inc
add
ljmp
push
je
dec
lret
mov
xor
push
push
xor
cltd
pop
insb
mov
xchg
nop
sbb
push
pop
nop
sub
jbe
aam
lock
jp
bnd
or
mov
adc
lock
jb
fisttpll
push
sub
jo
mov
popf
pop
and
leave
mov
sbb
mov
pop
push
push
xchg
mov
jp
sbb
rcrl
aaa
pop
scas
and
jmp
cwtl
into
xor
mov
nop
imul
mov
cltd
mov
fldl
jno
xlat
mov
std
les
out
xchg
cmpsl
sbb
mov
stos
out
xor
imul
push
shl
mov
pop
pop
adcb
xchg
imul
movsl
aam
in
cs
test
mov
mov
sub
iret
loopne
and
sbb
sets
sub
pop
and
loopne
cmpsb
inc
addr16
rorl
mov
hlt
dec
mov
mov
mov
les
outsb
iret
int3
push
movups
push
add
arpl
sbb
shlb
push
stos
and
cmpsl
or
scas
call
mov
sbb
mov
ljmp
jle
loopne
lods
lea
in
fidivrs
insb
push
shl
mov
imul
ja
inc
mov
lock
rcll
mov
xchg
leave
cmpsl
out
mov
xor
aas
or
pop
sar
test
loop
icebp
push
cmp
mov
kmovb
sbbb
scas
lds
dec
adc
or
in
sbb
call
and
rorb
clc
and
outsl
inc
ret
or
pop
push
jg
cmpsb
pop
sbb
push
out
out
fs
or
sub
sub
daa
aam
xchg
fstps
jnp
mov
push
push
daa
jp
shrb
pop
pop
xor
das
repz
faddp
fwait
pop
push
inc
hlt
inc
nop
call
sti
mov
js
mov
adc
inc
popf
mov
imul
bound
pop
insb
push
push
decl
test
and
jb
xor
push
and
sub
jge
sbb
std
jne
push
testl
adc
add
cmp
ret
hlt
mulb
add
imul
aad
ds
rorl
shlb
mov
push
xchg
movsb
sbb
fisubl
cmp
arpl
in
jle
push
fs
inc
int3
jmp
int
mov
sub
or
sbb
jnp
ret
lea
push
dec
jl
xchg
push
mov
out
repz
mov
jne
or
or
mov
mov
jnp
sub
lds
mov
pop
and
sbb
push
mov
cwtl
or
add
addr16
sub
ret
xchg
fcmovne
cmp
adcb
jae
xchg
mov
xchg
data16
lea
je
xchg
inc
push
pop
mov
sub
lret
or
mov
and
fidivrs
outsb
cmp
ds
into
int
mov
mov
insl
dec
pop
jle
outsb
cmp
ds
into
int
mov
mov
insl
dec
pop
jle
outsb
cmp
ds
into
int
mov
mov
insl
dec
pop
jle
outsb
cmp
ds
fs
int
lret
jno
inc
jb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
call
mov
call
pushl
push
push
call
add
push
call
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
inc
xchg
push
add
adc
loopne
cld
add
adc
arpl
push
nop
mov
inc
xchg
push
jecxz
repz
add
adc
loop
lock
adc
mov
adcb
jns
jo
pop
xchg
dec
jecxz
repz
sbb
or
add
lret
adc
arpl
sbb
ss
cmp
sbb
iret
js
enter
inc
imul
mov
rolb
adc
jmp
cmp
insb
lods
sbb
repz
cmp
pusha
mov
cld
shr
rcrb
repz
mov
xor
jbe
xor
cld
and
xor
jl
push
xor
push
nop
mov
inc
xchg
pusha
les
out
inc
pop
shr
scas
mov
paddw
jns
pushf
repz
or
pop
pop
push
xchg
arpl
repz
inc
push
xchg
adc
insl
lock
mov
pop
outsl
dec
nop
inc
inc
sbb
dec
cmp
popf
je
ret
in
aad
shlb
inc
push
jg
subb
adcl
jecxz
repz
sbb
or
clc
xor
add
adc
arpl
push
hlt
loop
jo
inc
cli
push
jecxz
sbbl
mov
add
jae
and
jo
xor
push
jecxz
mov
mov
cltd
bound
in
es
and
and
ret
add
adc
loopne
lock
adc
arpl
push
nop
mov
inc
xchg
push
jecxz
repz
add
adc
loopne
lock
adc
arpl
push
nop
mov
popa
mov
push
sub
fwait
add
fsub
fiaddl
cltd
xchg
lods
pop
cwtl
bound
repz
adc
push
pop
xor
enter
add
xchg
push
arpl
ds
and
adc
xchg
push
fsubrs
outsl
jle
aas
inc
ds
adc
je
lret
gs
mov
aaa
adc
push
outsb
fcoms
mov
cmp
sbbb
add
addl
dec
icebp
sub
enter
pop
nop
fiaddl
jno
dec
cld
mov
ret
scas
jmp
jmp
push
xor
push
lsl
push
dec
insl
test
cmp
push
lcall
dec
inc
and
add
mov
and
pop
addr16
mov
fs
push
lcall
or
mov
and
mov
pushf
mov
inc
or
adc
aaa
cli
inc
adc
and
sbb
loop
push
push
or
inc
cli
sub
mov
push
loope
clc
int
dec
inc
movsb
sahf
sub
mov
test
enter
into
mov
xchg
pop
sbb
fsubl
fmull
sub
fdivrp
fisubs
mov
mulb
incb
mov
sub
mov
sub
aas
jnp
add
data16
frstor
out
xchg
mov
fs
inc
js
pop
and
loop
scas
mov
stos
or
jmp
icebp
xchg
lea
lods
adc
out
cwtl
sub
jbe
and
adc
movnti
fldt
inc
adc
push
adc
xchg
test
or
lret
pop
inc
clc
xor
mov
in
inc
jns
shl
inc
jb
dec
and
clc
insb
push
cli
mov
push
stos
mov
xor
sbb
hlt
loopne
aaa
les
xchg
xor
movsb
dec
shlb
xor
shlb
adc
pop
push
add
aam
push
cmpsb
fwait
or
sub
lcall
or
xor
andl
fsts
and
cwtl
ljmp
rcrl
out
sbb
dec
push
and
xchg
inc
insl
or
inc
cmp
xlat
dec
lds
add
cmc
addb
shl
mov
add
and
push
addr16
fwait
into
mov
outsb
xor
jmp
or
outsl
test
sbb
int3
out
xor
mov
pushf
lods
inc
int3
loop
lods
js
cwtl
adc
and
jecxz
mov
call
push
pop
push
cli
cld
sub
es
jmp
jbe
xchg
ja
loop
test
xchg
aad
push
shl
mov
inc
aas
in
repz
idiv
mov
mov
neg
ret
sarl
movl
scas
pop
pop
mov
inc
push
sbb
inc
aad
sti
fdivrs
jg
int3
or
fsts
sbb
xchg
inc
or
and
push
mov
popa
sbb
les
and
pop
out
into
add
aad
int
jbe
sbb
cmp
mov
and
decb
adc
addr16
mov
rol
sbb
xor
and
sub
arpl
loopne
and
mov
lret
je
outsl
jns
orl
dec
cmp
xor
in
xchg
mov
mov
ret
lea
and
mov
jl
or
inc
leave
insb
outsb
icebp
or
call
out
push
lea
inc
fs
popf
jmp
in
shrl
sbb
lret
push
fwait
push
test
xor
stc
fs
sub
fstps
cmp
xor
fs
stos
orl
mov
sub
std
daa
mov
nop
lds
test
in
sbb
xchg
or
data16
inc
sub
dec
and
mov
mov
push
ret
lea
jae
jae
addb
clc
add
mov
or
lret
std
inc
xor
cld
jl
sbb
int3
sub
jmp
popl
movsb
xlat
arpl
popa
js
adc
ja
mov
lcall
loopne
popf
inc
inc
arpl
aaa
inc
repz
inc
negl
hlt
pop
icebp
or
cmp
cwtl
xchg
dec
aas
clc
adc
sbb
lock
sbb
adc
scas
lcall
inc
adc
ss
stos
mov
repnz
push
fiaddl
inc
out
jp
mov
or
push
xor
push
sar
sub
addl
sub
adc
outsl
sbb
stos
jo
sti
fs
jns
test
mov
imul
bswap
gs
push
stc
xchg
cmc
lods
sbb
push
xchg
lock
adc
outsl
rclb
mov
dec
loope
push
sahf
popa
mov
add
daa
lret
inc
jge
repz
stc
das
lods
imul
xlat
mov
imul
mov
hlt
mov
and
xor
jp
fistl
ljmp
pop
sub
and
jp
sub
lret
push
or
rolb
push
adc
jge
sub
in
or
cmp
mov
sbb
ja
jne
fmull
lea
int3
jno
mov
pop
add
jl
jmp
dec
inc
lret
xchg
outsb
hlt
mov
and
xorb
mov
pmulhuw
pop
test
pop
mov
jbe
dec
pusha
mov
xchg
ljmp
pop
mov
std
andb
inc
jle
sbb
out
ja
outsb
lret
enter
pop
dec
mov
jbe
jb
outsb
pushf
arpl
das
xchg
push
lret
test
sub
ja
cmpsl
insl
or
mov
cmp
aaa
or
jg
jmp
jecxz
stos
cwtl
incb
jnp
test
lods
sub
cs
outsb
mov
jle
daa
sub
mov
sahf
cli
lret
cli
cli
cwtl
insb
pop
mov
hlt
ljmp
dec
orb
inc
add
jl
jmp
inc
lds
pop
pop
sub
imul
xor
test
push
movzwl
pop
lcall
or
cld
in
call
lcall
pop
push
pop
jp
les
add
fldl
push
pop
pop
xchg
cmp
jl
pusha
cmpsl
inc
or
test
add
imul
call
mov
and
pop
push
fidivrs
xchg
lahf
arpl
mov
insl
mov
clc
iret
repnz
mov
inc
cmpsl
pusha
pop
push
adc
pop
push
sbb
pop
shl
in
lock
fisttps
dec
cmp
fcomi
out
push
daa
notl
add
mov
mov
or
loop
xor
or
rcll
xlat
pop
sbb
inc
out
dec
ja
inc
ds
aad
and
insb
fisubs
out
xor
and
rclb
test
pop
add
leave
or
xor
xlat
sub
pop
loop
dec
inc
in
mov
adc
retw
fistpll
pop
cmp
bound
dec
movsb
sbb
dec
std
scas
push
addl
push
mov
scas
scas
sub
addl
iret
push
movsb
mov
add
add
jns
add
or
push
mov
jno
insl
pop
repnz
mov
pop
jo
pop
and
jge
fs
rorl
add
dec
mov
and
push
sarb
rcl
mov
out
mov
movsb
dec
iret
pop
cmp
out
pop
pop
mov
in
sti
jbe
jge
rolb
fisubrl
es
push
mov
lods
pop
or
push
mov
sub
adc
jl
jae
push
xchg
sbb
add
sub
mov
loopne
cli
pop
xor
and
int3
or
inc
add
fs
scas
sbb
cmp
push
movsl
inc
aaa
dec
jg
lods
pop
pop
dec
mov
into
and
fadd
jle
dec
mov
or
mov
add
sbb
out
dec
idivl
push
or
mov
aas
out
adc
sub
jmp
testb
iret
movsb
inc
out
cwtl
scas
movsl
sub
xor
lock
jl
or
lea
add
mov
rcrl
shl
sbb
inc
ffree
imul
loope
sbb
pop
sbb
jg
popf
das
mov
xor
jnp
push
jnp
sbb
int3
bound
add
push
pop
fwait
insl
or
in
outsb
bndldx
xor
fmuls
or
sub
in
mov
dec
call
test
loopne
jp
jp
aas
adc
and
lods
sub
cmp
ss
jg
jge
cmp
ja
pop
out
inc
xor
add
imul
add
insl
ret
lcall
xor
sti
jno
mov
scas
addr16
and
arpl
push
aam
andl
inc
xor
mov
push
repnz
fwait
addb
insb
and
fwait
lds
push
scas
test
addl
clc
fs
jle
outsl
push
pop
push
pop
nop
out
mov
gs
cli
or
mov
jmp
mov
shrb
mov
push
rcrb
push
sahf
mov
stos
sub
mov
inc
cwtl
jmp
fldt
icebp
repnz
addb
in
sbb
xchg
sbb
adc
mov
or
jp
xchg
repnz
lret
pop
pop
pop
jg
ds
sub
jno
mov
add
adc
inc
ds
addr16
pop
inc
aaa
in
sti
out
sub
daa
lcall
scas
rclb
leave
sub
cmpsl
push
cmpsb
sti
rclb
jmp
addr16
test
sahf
inc
icebp
int
es
pop
jo
push
pop
jbe
rcrb
and
shrb
pop
jl
out
dec
scas
push
out
add
and
je
mov
mov
in
pop
fcmovbe
fisubrs
iret
add
mov
aam
and
loopne
mov
lahf
sti
and
xlat
hlt
push
in
js
add
dec
sbb
push
lcall
test
inc
inc
adc
cmpsb
lcall
add
sub
jnp
adc
xor
push
jg
xchg
sbb
jmp
or
out
pop
adc
pmulhw
insb
jae
jbe
sub
push
jno
fmuls
in
ljmp
cmpb
call
xchg
push
inc
cli
and
push
push
push
xchg
aas
sub
sbb
mov
push
push
je
push
adc
push
mov
lods
fsin
in
cmp
repz
inc
les
push
call
xchg
mov
bound
mov
arpl
xorb
daa
dec
mov
xchg
in
shll
cmp
mov
jmp
rcll
sbb
in
shr
jmp
dec
mov
dec
dec
mov
flds
ja
jae
sar
ret
dec
mov
stos
mov
in
out
inc
add
mov
push
cld
xchg
in
pop
lahf
sar
xor
call
jle
mov
jne
jmpw
mov
les
lods
in
imul
stc
ror
push
add
adc
inc
loope
and
aas
sbb
jp
sub
mov
mov
std
and
lahf
rorb
and
fisttps
leave
jne
lea
dec
subl
enter
mov
test
ss
dec
pop
clc
add
mov
mov
or
jno
dec
fyl2x
sub
push
sbb
add
pop
add
cmp
sarb
shlb
in
lods
inc
xchg
inc
movsb
jns
xchg
fidivl
ret
fadds
out
aad
jb
out
push
lea
aad
cld
inc
pop
xchg
std
mov
test
xor
scas
dec
icebp
push
jo
inc
ret
in
mov
in
dec
addr16
jl
add
cmp
cmp
out
es
add
out
and
adc
sbb
movsl
mov
lea
mov
mov
lahf
je
cmp
push
push
mov
jl
orb
shlb
mov
out
add
stc
add
mov
test
add
loopne
fucom
jbe
pop
adc
fcoml
jo
adcb
or
dec
sahf
in
mov
inc
insb
xchg
lahf
out
js
push
scas
iret
ret
popa
adc
push
push
xchg
xor
mov
movsb
scas
cwtl
adc
incl
scas
les
movb
jmp
aad
pop
inc
cld
popf
loop
inc
lods
add
fidivrl
int3
addr16
cmp
push
sahf
jbe
xchg
jmp
cs
jnp
pop
mov
int3
ror
push
inc
daa
in
imul
cli
pop
aaa
es
push
movsb
mov
pop
icebp
nop
adc
lret
mov
cmp
in
fisubrl
fsubl
mov
xor
mov
dec
ljmp
mov
and
sbb
pop
ret
test
push
testl
xor
jecxz
inc
sahf
cmp
xor
or
mov
stos
ljmp
push
out
out
and
pop
pop
filds
push
jge
push
sub
sti
cmc
cmp
jb
jb
lods
test
jp
jecxz
xor
cmc
sub
cld
lock
cli
cmpl
hlt
add
sub
movsb
sub
daa
lock
imull
dec
dec
cmp
ja
mov
cmp
cmp
add
pop
xor
addr16
lods
shlb
jnp
arpl
movsl
in
jl
dec
add
bound
adc
mov
lcall
xlat
pop
adc
in
add
mov
cmc
shll
gs
sarl
push
aam
push
aam
xor
movsl
jle
lcall
fwait
jmp
dec
sub
fnstcw
sbb
mov
adc
xchg
test
inc
arpl
mov
aas
adc
lret
inc
mov
push
lret
fadd
cmp
es
dec
jo
cltd
ror
incl
jl
popf
mov
xchg
push
mov
dec
clc
adc
add
and
add
or
inc
into
call
bound
cmpsl
xchg
xchg
sbb
cmp
and
test
cmpsb
dec
jne
xor
fnstsw
lea
inc
jge
mov
xchg
clc
dec
lret
pop
icebp
mov
sbb
in
xchg
sbb
pop
cmpsl
jp
cli
and
sub
into
aam
das
lret
sbb
sub
dec
sbb
push
push
mov
aas
stc
pop
mov
sbb
xchg
sbb
adc
adc
mov
dec
lret
hlt
pop
rclb
scas
scas
inc
xchg
out
lds
cmpsb
gs
std
scas
mov
stos
xor
rcrl
and
pop
mov
loop
jnp
adc
push
dec
insb
out
sub
and
push
or
dec
into
std
jns
mov
les
jmp
fdivrl
popf
imul
push
mov
mov
inc
fcmovbe
xor
mov
cmp
enter
jp
testl
ficoml
push
outsb
lods
push
mov
sbb
scas
push
add
fdivl
mov
jae
jmp
pop
es
mov
and
xor
cs
jl
testb
test
sbb
stos
sbb
push
xor
pusha
xorb
and
repz
pop
jle
sbb
cmp
popl
xorb
jno
hlt
adc
fistps
std
mov
jb
pusha
enter
jns
loopne
adc
xor
mov
test
into
subb
pop
cmp
addb
xchg
les
testb
push
push
mov
adc
std
xchg
sahf
enter
xchg
add
sub
and
sbb
rorl
ja
xor
push
sub
rcll
sub
jl
out
jecxz
mov
rclb
cmp
mov
push
movups
fisttpl
adc
mov
jno
mov
in
outsl
mov
mov
lcall
cmp
xorl
xchg
out
sub
push
es
insl
sahf
xchg
stos
pop
mov
or
jbe
outsb
add
adc
jecxz
insl
stc
lds
jnp
mov
cmpb
mov
mov
aad
in
shll
push
mov
les
cli
je
pop
fiaddl
js
popa
or
int3
in
cmpsb
or
jp
xor
dec
sbb
fs
loopne
enter
jb
lea
enter
xchg
mov
stos
inc
push
adcb
and
dec
cli
push
sub
std
and
mov
test
inc
sub
jecxz
hlt
jp
dec
hlt
loop
lods
enter
jmp
aas
adc
sbb
cmpsb
fstps
lods
mov
push
pop
aad
adc
icebp
je
add
aad
fstpl
push
jp
lea
cltd
and
pushf
add
lods
xchg
push
das
inc
or
xchg
stos
xor
inc
ljmp
push
cmp
das
cmpsb
cmpsl
pop
movsb
push
add
pop
xor
cltd
jmp
fs
mov
dec
jmp
and
dec
mov
shr
push
repz
das
mov
mov
gs
ljmp
cs
mov
out
pop
mov
mulb
dec
push
xchg
cmpsl
xor
dec
jp
push
fisttps
popa
xabort
aas
adc
inc
xchg
cs
mov
loopne
cmp
fwait
gs
inc
add
leave
xchg
mov
ljmp
popa
and
bound
adc
jbe
cwtl
les
fwait
push
sub
push
mov
in
sub
xor
mov
cmp
mov
mov
sbb
enter
mov
shrb
daa
sub
xor
lret
sbb
xchg
aam
jmp
hlt
mov
gs
faddl
jecxz
xlat
push
or
gs
cmp
xor
xchg
test
movnti
mov
jbe
shl
mov
outsl
or
in
mov
cli
pushf
inc
ficoml
test
cld
hlt
int
mov
sub
jg
icebp
xor
fstps
or
mov
cli
lods
ret
fsts
or
stos
mov
adc
icebp
fbstp
enter
pop
pop
or
xlat
xchg
xchg
cmc
shr
push
push
push
sbb
mov
push
cmp
out
sbb
call
mov
test
push
aam
mov
pop
inc
test
or
ss
xor
xchg
data16
mov
mov
add
rcrl
testl
cs
test
mov
xor
mov
sbb
inc
dec
addb
cltd
test
or
popf
stos
lods
rcrb
js
mov
sub
jne
mov
loop
or
sub
lods
dec
fsubs
shll
test
in
lock
fstp
aam
cmp
movsb
or
test
das
loopne
inc
pop
jns
cmp
sbb
and
push
sti
fstp
shlb
dec
inc
out
addr16
sbb
popa
xlat
fldt
sub
gs
and
in
daa
call
hlt
dec
or
push
push
dec
imull
pop
inc
pop
and
sbb
cld
insl
insl
xchg
push
cmpsl
inc
adc
repnz
stc
fistl
je
dec
xor
push
or
or
mov
in
inc
add
scas
pop
scas
dec
scas
mov
and
mov
adcl
or
movsb
fildll
inc
out
scas
push
notl
popa
fwait
jge
xor
pushf
incb
cs
ficoms
jmp
insb
out
sbb
and
dec
sbb
sbbb
std
addr16
and
adc
test
jg
pop
sbb
push
call
cs
jbe,pt
int3
gs
dec
jns
in
jb
mov
xchg
movb
dec
pushf
jbe
out
mov
mov
loope
push
inc
stos
inc
xchg
jp
xchg
cli
mov
dec
outsb
pop
pop
cmp
popa
sbb
inc
data16
jb
jge
in
repnz
mov
push
mov
ljmp
addr16
jecxz,pt
nop
inc
mov
inc
or
adc
adc
das
sarb
std
and
je
lret
aad
int3
xchg
jl
and
add
frstor
ret
cmp
into
lds
aaa
jne
dec
daa
sahf
cmp
lods
mov
fsubp
inc
cmp
pop
iret
pop
and
in
push
subl
cmp
fcomp
call
ljmp
lods
loopne
aam
out
xchg
repnz
jl
push
dec
mov
mov
out
push
jle
cmpsl
and
into
xor
mov
ret
or
inc
jno
mov
fdiv
jns
std
scas
int
jecxz
enter
popa
push
je
test
jecxz
jo
scas
xchg
push
jecxz
repz
add
adc
loopne
lock
adc
arpl
push
nop
mov
inc
xchg
push
jecxz
repz
add
adc
loopne
lock
adc
arpl
push
nop
mov
inc
xchg
push
arpl
repz
add
and
xor
add
adc
arpl
push
nop
mov
inc
xchg
push
jecxz
repz
add
adc
loopne
pop
test
sub
dec
xor
outsl
test
es
push
movb
adc
cmpsb
push
xchg
inc
xchg
mulb
push
push
divb
out
push
movb
jbe
ljmp
data16
dec
xchg
cltd
push
out
xchg
push
out
movsb
jmp
into
mov
mov
pop
outsl
imul
mov
push
lahf
mov
arpl
in
push
dec
inc
sahf
lock
sbb
push
push
or
imul
aaa
cwtl
ja
sbb
scas
dec
jp
pushf
ja
lcall
dec
imulb
divl
and
or
sbb
and
and
inc
int
cmp
or
push
push
push
div
divb
pop
push
loop
dec
jbe
push
imul
mov
sbb
and
pop
inc
orl
and
pop
jbe
jbe
mov
xchg
movsl
es
push
cmp
testb
xchg
pop
cmp
xor
mov
push
sahf
jae
jne
push
push
inc
aas
ss
xchg
or
jbe
xchg
mov
pusha
dec
xchg
fidivrl
push
or
push
test
andl
push
mov
lds
rorb
aas
xchg
jbe
or
and
cltd
inc
xchg
fs
imul
ja
and
sbb
sub
repz
loope
cmpsb
dec
stos
pusha
mov
lods
xchg
pusha
mov
inc
scas
gs
adc
inc
jbe
data16
push
xchg
inc
xchg
mulb
out
push
divb
out
push
movb
jbe
xchg
push
xchg
mov
cmpsb
push
xchg
inc
xchg
mulb
out
push
divb
leave
icebp
imul
inc
or
mov
xchg
jb
pop
inc
push
lahf
leave
and
pop
loope
sti
jp
out
cmpsb
mov
roll
roll
pop
stc
pop
leave
mov
push
insl
or
dec
sub
mov
xchg
mov
fwait
or
addr16
ret
mov
aam
clc
aas
clc
rolb
shrb
aas
jb
jp
cmp
scas
ss
xchg
mov
mov
in
push
movsl
lret
jecxz
jo
pop
mov
jns
jno
lock
sarb
sbb
aas
mov
popf
pop
fildl
xor
adc
ret
cmpsl
mov
add
aad
jmp
mov
xchg
adc
jl
add
xchg
cmp
dec
pop
mov
test
push
cmp
push
sbb
fsubrl
es
cltd
jmp
cmc
int
les
hlt
or
mov
enter
mov
add
mul
daa
addr16
jb
test
and
fnsave
xchg
lods
cmc
dec
push
sti
jo
add
xor
adc
outsl
lahf
insb
stos
add
sub
fisubrl
mov
das
cmp
jne
add
pusha
and
pop
fiaddl
dec
xchg
addl
lcall
mov
mov
sti
aaa
sbb
lods
lret
jo
aam
jmp
insb
cmpl
fldl
push
jmp
cmp
mov
leave
mov
loop
lods
enter
pop
push
mov
jg
arpl
rorb
inc
or
add
lcall
unpcklps
mov
mov
inc
push
pop
in
xor
enter
mov
adc
popf
cmp
lahf
and
sbb
cltd
jae
test
jmp
sbb
cmpsl
sarb
stos
push
clc
xor
rolb
in
or
mov
andl
imul
hlt
nop
jne
shll
add
xor
mull
or
jmp
loopne
add
lds
xchg
lods
xor
mov
cs
add
xchg
mov
loop
adc
test
mov
pop
jae
mov
ja
mov
insb
cwtl
arpl
gs
mov
std
sub
dec
rcrb
dec
scas
jmp
cmp
mov
adc
stos
insb
dec
push
push
cmp
jmp
adc
rorl
and
mov
les
mov
fsub
inc
dec
xchg
cld
inc
outsl
cmp
mov
mov
jno
orl
push
mov
mov
jl
imul
jns
sahf
imul
mov
neg
gs
loop
cmpsb
jle
fisubrs
pop
cmp
inc
cmc
sbb
sbb
inc
push
jno
jae
pop
adc
das
in
fsubl
jne
xor
cmpsl
mov
int
mov
cmp
push
movlps
xchg
test
jne
imul
inc
sub
subl
stos
pop
pop
bound
inc
pop
arpl
stc
sbb
mov
pop
pop
push
sub
and
jno
jns
ficomps
add
pushf
mov
and
mov
push
js
daa
call
ds
fstl
stos
mov
mov
in
sbb
out
enter
int
cld
pop
sub
ret
pop
fisttpl
hlt
adc
adc
xor
clc
adc
decl
test
imul
out
mov
in
outsl
push
ficompl
pop
out
mov
and
hlt
and
add
ja
shll
sbb
test
lds
jbe
in
int
dec
push
xchg
xor
sarl
outsl
cmpsb
les
pop
jno
mov
daa
inc
stos
add
mov
ret
add
xor
repnz
aad
sub
fcoms
out
repz
data16
aaa
mov
loope
mov
pushf
jae
dec
add
pop
push
rorb
cmp
push
loopne
push
mov
mov
mull
sbb
pop
jns
data16
jns
mov
mov
arpl
dec
jns
xchg
lcall
push
push
add
cmpsb
lret
leave
adc
into
jnp
repz
sub
addr16
jmp
in
dec
aam
and
mov
cld
or
fs
mov
pop
sub
xor
loope
sbbl
sbbl
sub
add
out
movsb
mov
or
sub
mov
jp
repnz
inc
je
pusha
mov
dec
aaa
pop
insb
pusha
data16
test
gs
push
dec
dec
mov
nop
mov
in
add
mov
jecxz
out
xlat
shrl
pushf
xchg
xchg
mov
mov
dec
inc
add
stos
mov
sbb
idivb
push
xchg
pop
inc
divl
xor
loop
test
dec
arpl
jmp
mov
xor
icebp
mov
xchg
enter
or
adc
pop
orb
fldl
sub
sahf
scas
imul
pop
mov
loop
fwait
adc
jne
xchg
cmp
or
ljmp
inc
mov
inc
sub
mov
mov
inc
sub
bswap
adc
pop
cltd
add
clc
sbb
mov
int3
mov
scas
and
mov
adc
test
out
cli
push
fdivrs
sbb
add
out
add
data16
fwait
pop
ret
add
mov
lret
jo
inc
pop
add
jg
int3
adc
ret
loope
hlt
pusha
dec
divps
out
lea
popa
jl
cmp
dec
xor
sub
jns
sub
icebp
ret
popa
int
sub
pop
frstor
clc
test
mov
add
inc
sub
loope
ja
iret
mov
pop
xlat
in
aaa
mov
xor
xor
test
shll
int3
loope
inc
popf
aam
mov
dec
pushf
xchg
push
xor
lods
inc
lods
mov
mov
sti
fwait
loop
andl
and
cmp
ljmp
ss
jne
mov
adc
pop
aam
fbld
pop
cmp
sahf
xor
mov
mov
push
xchg
testb
push
pop
push
mov
sub
jge
arpl
scas
out
jle
cmp
push
outsl
iret
lods
iret
imull
out
lods
pop
jae
mov
sti
cmp
insb
ret
loope
roll
imul
outsb
xchg
push
fwait
sub
clc
aam
add
nop
push
jno
negb
xlat
push
jo
out
adc
fldl2t
sub
leave
mov
sub
test
in
int
fdivp
decl
jne
add
jge
jmp
pop
incl
xchg
mov
mov
or
cmpsb
and
test
je
dec
imul
ja
std
jl
ret
sbb
cmp
or
mov
test
rorb
pushf
or
pop
xor
mov
std
dec
jno
mov
jnp
mov
filds
mov
dec
ret
fidivrl
and
sub
out
addr16
andb
inc
psllw
adc
icebp
push
xchg
ficompl
mov
pop
add
and
xchg
lods
test
xor
adc
inc
mov
adc
ss
int
mov
jge
les
cmc
aaa
iret
lahf
pop
jbe
addb
push
jnp
cld
lret
fildl
and
imul
fstl
cli
leave
fstpt
jmp
xlat
mov
push
hlt
je
inc
inc
lods
cwtl
int
push
jae
mov
lods
sbb
pop
dec
loopne
mov
lods
loop
sbb
das
aad
out
dec
movsl
nop
push
xchg
push
bound
cld
fmull
movsb
xor
cmp
pusha
adc
imul
push
sbb
ficomps
pop
sahf
mov
roll
outsb
repz
scas
inc
ljmp
rcrl
adc
push
sti
cltd
xchg
lahf
and
inc
es
push
mov
add
cmpsb
cmpsl
ja
add
jmp
je
cmp
jle
pop
jg
aam
add
dec
call
incl
fwait
pop
leave
dec
inc
mov
lods
inc
fs
jns
jno
dec
sbb
push
dec
pop
jecxz
xor
out
daa
jne
shll
xchg
fisttpl
insl
jmp
std
jmp
jecxz
inc
pop
int
repz
idivl
sarb
xor
in
fistpll
addr16
pop
arpl
push
int
push
adc
mov
cmp
sbb
xlat
jp
push
out
ds
nop
add
je
shlb
mov
aam
or
rolb
xchg
nop
fidivl
and
inc
mov
stos
insl
or
sarb
jg
jae
pop
test
out
outsb
xchg
sbb
lcall
inc
xorb
inc
lret
fmull
ficoms
adc
mov
xchg
or
hlt
push
addr16
push
sub
mov
cmc
or
aas
arpl
adc
hlt
in
in
mov
call
les
mov
adc
pop
ljmp
pop
jp
mov
lahf
push
jp
out
scas
sub
pop
lds
ret
dec
nop
in
fcomps
jg
xchg
xchg
xchg
xchg
jnp
pop
xchg
adc
xor
pusha
cmp
aaa
jbe
daa
push
ljmp
aaa
jge
loopne
mov
ret
pop
add
cmpl
dec
xchg
cli
cs
sti
add
hlt
mov
test
mov
out
add
sub
sarb
mov
lods
mov
pusha
dec
int3
or
fiaddl
scas
aad
jnp
inc
fnstenv
and
in
mov
xchg
xchg
pushf
dec
mov
imul
sbb
iret
cmpsl
mov
pop
test
insl
and
jae
mov
addr16
inc
jb
xchg
mull
insl
repz
sbb
std
fisubl
xor
xlat
cli
pop
test
aas
iret
test
mov
cmp
nop
out
daa
inc
pop
xor
xor
push
xor
int3
pop
dec
in
add
mov
cld
test
rcrb
ljmp
int3
adc
pop
mov
pop
repnz
out
outsl
jmp
push
jl
inc
dec
xor
add
sub
test
stc
cli
cmpsb
dec
pop
stos
mov
mov
cltd
fdiv
aaa
ljmp
jmp
pop
scas
out
jbe
les
mov
out
cmpb
pop
repnz
ljmp
mov
cwtl
dec
rclb
pop
je
mov
incl
jmp
clc
mov
popf
mov
movsl
jp
dec
nop
adc
jnp
adc
sub
iret
push
or
jmp
loopne
and
push
rorb
pop
sbb
mov
lret
hlt
fstpt
mov
jl
mov
arpl
ss
cmp
shll
test
mov
xchg
push
adc
sahf
incl
adc
std
ss
and
xor
pop
pop
fimull
jb
xor
fmull
adc
dec
orb
dec
aas
fimuls
gs
xor
and
add
or
mov
rcrb
lcall
ror
testl
pop
inc
mov
xor
inc
and
mov
jp
jmp
mov
pop
aad
lods
ja
dec
cmp
fildl
push
inc
cmp
roll
pop
test
jp
fildll
dec
cmp
sarb
enter
insl
notb
push
fistpl
addr16
scas
sbb
jo
cmp
rclb
fcompp
jg
xchg
mov
xchg
mov
imul
sbb
repz
popa
orb
insb
add
push
in
and
aas
rclb
or
add
test
sub
es
and
sarb
test
mov
pop
out
cmp
test
int3
xchg
fnsave
jecxz
xlat
stos
dec
imul
jp
mov
shl
cmp
add
adc
std
fbld
or
dec
or
aam
pop
in
sub
cmp
test
jg
push
jns
cmp
lret
mov
incl
pop
scas
icebp
cmc
xor
inc
movsl
xchg
movsb
inc
stc
rcl
pusha
cld
outsb
and
mov
push
ss
pop
adc
pop
jecxz
ja
popf
in
adc
mov
in
jl
push
xor
mov
mov
push
fs
addb
int
out
call
ja
push
pop
cmpsl
sub
sbb
enter
adc
sub
popf
inc
push
filds
cmp
call
or
mov
fsubs
test
insb
mov
jmp
fs
dec
and
mov
insb
fsubr
pop
cmpsb
lods
add
dec
add
add
pop
jb
aaa
mov
lock
push
jle
or
imul
push
cmp
popa
xchg
push
arpl
popf
pop
lahf
sub
clc
call
jg
pusha
into
fs
cmp
dec
cmp
fbstp
movsl
iret
push
add
es
sbb
mov
enter
push
sti
cli
mov
int3
int
stc
rcr
stos
adc
and
push
lcall
jmp
enter
push
inc
and
out
xchg
divl
jecxz
aas
int3
in
pop
mov
iret
jle
das
pop
popf
and
cltd
pop
add
divl
fs
mov
out
xchg
mov
repnz
insl
mov
and
pop
mov
out
mov
int
push
sub
mov
arpl
repnz
bound
cmp
test
ss
and
arpl
or
sub
inc
hlt
dec
xor
and
and
fs
lret
dec
mov
ja
mov
xor
xlat
insl
xchg
daa
aas
push
movsl
pop
ljmp
jp
repnz
mov
push
push
cli
and
or
mov
bound
mov
xor
add
sub
loopne
push
sbb
sahf
xor
aaa
insb
jg
pop
pop
cld
clc
test
bound
nop
scas
rolb
ret
jnp
xchg
popa
repz
cltd
push
xor
push
jg
outsb
stos
subl
test
xchg
adc
xor
mov
es
enter
pop
outsl
sub
pop
jno
pop
sti
les
mov
or
mov
test
mov
push
loopne
jmp
push
mov
das
mov
pop
and
sbb
mov
hlt
cli
ret
push
cmp
fsts
test
add
push
xchg
pop
jnp
stc
mov
test
ret
enter
pop
hlt
jge
add
and
pcmpeqw
or
popa
fidivl
lds
sti
pop
xchg
push
cwtl
pop
push
pop
xchg
mov
rcl
fbld
or
xchg
data16
in
cmpsl
add
mov
test
pop
popf
aas
mov
sbb
adc
inc
jo
xor
add
cwtl
cmp
fisubl
pop
push
or
gs
loop
cwtl
iret
lret
xchg
xchg
loopne
adc
ds
aad
pop
clc
sbb
push
aas
lea
dec
out
dec
fwait
inc
sbb
mulb
cmp
jge
inc
clc
mov
xchg
sbb
xor
imul
out
xorl
mov
mov
mov
iret
sbb
and
mov
push
test
adc
push
cmpsb
mov
adc
push
inc
insl
les
pop
addr16
out
mov
cmp
gs
cwtl
test
js
orl
lcall
push
xchg
adc
cld
jno
clc
cltd
sbb
imul
or
dec
push
jb
lea
fisubrl
test
lds
fwait
int
add
sub
push
inc
imulb
adc
push
test
out
lret
hlt
cltd
or
mov
out
lret
dec
fxtract
mov
push
pop
je
ss
flds
js
lds
imul
in
ds
leave
fmul
jne
mov
stos
sub
dec
adc
jmp
shl
nop
lcall
in
imull
aad
sbb
daa
data16
imul
imul
insb
lea
fldt
push
pop
push
test
addr16
ret
das
popa
mov
mov
test
aad
adc
mov
cmp
inc
loopne
int
sbb
stos
sbb
inc
pop
xchg
loop
ret
dec
arpl
iret
jge
sub
mov
adc
out
ds
jo
dec
addr16
adc
pushf
mov
mov
loop
rcrl
jnp
mov
cmp
mov
xchg
idivb
jge
andb
mov
push
xor
mov
xor
test
sub
mov
mov
out
jle
xchg
push
cmpsl
fsubrs
stc
sbb
and
test
jg
mov
outsb
pop
mov
sub
sbb
mov
int
push
je
outsl
push
mov
test
xchg
push
ja
stos
fisubrl
adc
ljmp
bound
or
or
dec
jo
in
xor
push
fcompl
scas
xorb
add
sarb
je
lcall
mov
or
enter
xor
aam
in
and
in
pop
cld
outsb
or
outsl
xchg
add
pop
clc
mov
mov
xchg
xchg
add
nop
inc
cli
push
or
sahf
add
test
push
mov
data16
add
pop
int
mov
jmp
xchg
xchg
int3
ljmp
xor
mov
out
iret
mov
imull
out
and
and
out
lcall
inc
std
shrl
cmp
cmp
in
jge
jne,pt
pop
push
std
fs
pushf
scas
inc
mov
mov
insl
cli
out
pushf
jnp
sub
mov
mov
pop
out
rol
es
popf
xchg
jb
add
cmpsl
inc
hlt
cmp
or
mov
lock
mov
leave
in
jnp
lss
and
mov
mov
ss
ljmp
pop
dec
cmp
loope
out
aaa
scas
sbb
lods
add
iret
sub
pop
sbb
lods
and
mov
mov
gs
jnp
out
sub
movsb
dec
jle
sbb
cmc
cmp
or
add
in
emms
scas
push
in
xor
insl
mov
and
inc
add
shlb
xor
stc
mov
xlat
mov
dec
push
and
repz
xchg
aad
mov
dec
push
or
stc
sbb
add
mov
adc
jne
pushf
sub
pusha
sbb
xor
xchg
idiv
mov
push
nop
rcr
jge
stc
and
test
cwtl
push
jno
out
aas
outsb
test
push
xchg
mov
push
mov
fwait
lock
iret
std
loopne
popa
cmp
ret
sbb
jo
daa
xchg
add
es
xchg
outsb
out
lahf
xchg
sahf
fimuls
mov
sti
xchg
pushf
mov
call
sbb
je
daa
sbb
fists
pop
dec
push
jecxz
jg,pt
jae
test
push
nop
sub
mov
and
cmpsl
stos
inc
adcl
xlat
pop
xchg
cmp
sarl
push
xchg
shl
lcall
push
rol
push
popa
out
jae
les
fistl
cld
insb
cmc
andl
dec
mov
stc
js
and
pop
xchg
aam
bound
cmp
jmp
mov
insb
jl
adc
imulb
add
pop
call
aaa
adc
xchg
push
mov
adc
pop
leave
inc
movsb
repz
mov
xchg
xchg
imul
ret
lock
pop
push
cmpsl
sbb
inc
xor
outsl
and
out
jle
in
shl
aam
add
jo
mov
leave
sub
pop
xchg
roll
cmpsl
rorb
imul
dec
sub
mov
jne
rcl
cld
scas
xorb
ss
jno
and
xor
cmp
ss
test
jo
fsubr
in
ret
shll
fisttps
pop
addr16
mov
and
mov
pop
fidivrl
push
insb
out
mov
sbb
sub
in
and
and
inc
fwait
push
mov
jae
xor
add
cltd
mov
pop
jne
push
mov
push
cmp
cltd
loop
or
and
or
mov
jmp
hlt
pop
mov
xchg
push
push
test
add
and
jp
lret
fidivl
mov
xor
and
mov
adc
jp
cmp
add
outsl
out
fmuls
lods
mov
repz
cs
xchg
sbb
and
ret
pop
repnz
stc
fdivrl
jno
xchg
cmp
out
push
jbe
mov
sti
mov
das
pushf
addr16
das
cmp
lret
rorb
movswl
mov
push
push
xchg
sahf
pop
lds
push
lea
mov
imul
and
mov
aas
mov
cmpb
jge
sar
lock
jp
push
mov
cmpsb
xchg
push
xchg
mov
cmpsb
push
xchg
inc
xchg
mulb
out
push
divb
out
push
movb
jbe
xchg
push
xchg
mov
cmpsb
push
xchg
inc
xchg
mulb
out
push
divb
out
outsb
movb
jbe
into
xchg
push
xchg
outsb
data16
push
xchg
inc
xchg
mulb
out
testb
ss
xlat
push
movb
jbe
pushw
push
inc
mov
or
xchg
inc
icebp
inc
jle
sbb
sub
cmp
cmp
daa
out
clc
push
scas
mov
scas
push
mov
inc
cli
inc
ljmp
xchg
sub
pop
negb
jp
push
es
mov
push
stos
es
enter
ljmp
dec
xor
inc
xchg
push
fsubs
jo
lcall
or
mov
test
push
cli
jp
pop
decl
xchg
testb
inc
add
test
inc
add
dec
addb
adc
sub
dec
test
shlb
je
ljmp
inc
or
popa
repz
popa
into
dec
in
jo
mov
rclb
push
jbe
xor
cli
push
jp
fdivp
arpl
jp
sbb
pop
cmp
out
daa
jp
je
inc
call
dec
inc
add
mov
pop
sbb
pop
add
data16
push
inc
push
adc
fdivs
mov
in
jle
ret
sbb
pop
out
cmp
cmp
inc
loop
jmp
and
in
std
or
xchg
sub
pop
mov
jp
jae
lcall
cs
je
push
jmp
sbb
js
pop
out
dec
mov
sub
cmc
mov
jae
adc
sbb
das
xchg
xor
hlt
dec
testl
push
sbbl
fs
push
fildll
pop
stos
sbb
das
popf
pop
sahf
lret
or
pop
lds
imul
push
lcall
data16
inc
cli
push
ljmp
xchg
sub
pop
testb
push
lcall
data16
inc
cli
push
ljmp
push
sub
rcrl
aam
mov
jne
add
jbe
mov
xchg
or
imul
xchg
push
shl
xlat
jbe,pn
jmp
pusha
push
mov
xchg
lds
sahf
sbb
jge
mov
mov
cmp
aaa
ret
or
xor
leave
lods
rcl
js
push
cmpsb
loope
jns
cltd
test
adc
shll
stos
popf
jl
jl
and
mov
out
inc
dec
adc
and
mov
mov
les
into
sarl
mov
outsb
lods
sub
es
and
pop
sbb
cmp
sbb
pop
fs
ret
adc
mov
fistl
int3
enter
pop
or
in
xchg
movl
mov
mov
pop
sbb
pushf
mov
or
int3
fdivp
cmpsl
push
out
mov
lods
test
push
scas
and
dec
ja
mov
jle
xchg
xor
arpl
jae
aaa
and
dec
push
xor
shrb
test
test
mov
xchg
lret
mov
fisubs
lods
push
dec
outsl
fistps
ja
jbe
div
insl
fcomps
subl
or
mov
and
outsb
mov
push
jecxz
lcall
ficomps
fiadds
dec
ret
sarl
test
inc
mov
mov
add
cltd
sub
pop
fisubl
pop
mov
push
stos
adc
into
inc
jle
scas
sbb
lret
mov
in
cld
mov
inc
mov
jbe
xchg
jno
xchg
shll
add
sbb
cmpsl
mov
test
mov
mov
push
xchg
push
rcr
cmp
adc
add
ja
mov
daa
lahf
cli
pop
push
cli
sub
gs
popf
push
lock
push
inc
lds
xchg
sbb
mov
xchg
lahf
hlt
inc
test
fdivrp
xchg
pop
cmp
orl
xor
and
push
ficompl
mov
mov
je
sbb
int
decl
jnp
push
push
push
inc
stos
nop
ja
xchg
sub
imul
jo
bound
lcall
xor
outsl
ss
mov
js
and
mov
outsl
add
mov
mov
lock
ret
ss
fcoml
push
mov
mov
mov
arpl
pop
pop
push
insb
sbb
lods
lock
mov
add
imul
dec
mov
dec
pusha
scas
and
rcll
nop
movb
or
fmuls
ret
fwait
inc
ret
jnp
test
gs
cs
inc
mov
xchg
ret
test
and
lock
xchg
orb
mov
fadd
mov
dec
pop
pop
xor
inc
and
in
int
mov
jnp
fcmovnb
mov
push
xor
push
jno
xlat
add
jg
push
out
sub
sbbb
jo
push
jno
ds
aad
sub
test
clc
or
sub
fidivs
fwait
scas
arpl
in
xchg
dec
sbb
xor
mov
xor
inc
loop,pt
aad
roll
ljmp
stc
jecxz
fsubrl
in
ja
ficompl
test
sub
jge
or
mov
xor
stos
push
inc
xchg
mov
mov
addl
xchg
icebp
mov
jbe
mov
fwait
dec
mov
pop
das
stc
xor
adc
pop
mov
and
leave
mov
repnz
pop
mov
outsl
cmp
cmp
aas
jno
xor
push
icebp
ss
push
cmpsl
jne
jl
sti
ror
mov
or
mov
push
int3
dec
out
addl
in
inc
cmp
jbe
popa
fnstenv
in
cwtl
das
add
dec
out
sbb
test
imul
stc
fdivrl
and
fnstcw
sahf
js
ficoml
jmp
xchg
add
push
push
push
xlat
dec
pushf
add
and
mov
push
mov
pop
push
inc
and
jg
xor
mov
xchg
lcall
mov
out
iret
add
icebp
dec
imul
lcall
pop
enter
addb
xor
outsb
mov
fimuls
push
and
sub
add
xor
pushf
and
mov
or
ljmp
sbb
scas
dec
bswap
jnp
clc
lea
fscale
imul
mov
inc
push
out
notb
mov
xlat
outsl
mov
das
in
push
pop
mov
jecxz
scas
jle
cmp
daa
pop
aaa
push
cmp
insl
les
ljmp
into
mov
aaa
inc
icebp
push
test
cmp
jb,pn
sub
push
jge
out
orl
sub
pop
imul
insb
subb
push
xchg
jg
jnp
jbe
dec
out
test
enter
hlt
sbbl
inc
sub
popa
jbe
outsl
jo
mov
sbb
arpl
popf
push
shlb
filds
mov
or
pop
stos
cmp
xor
lds
aas
lock
mov
int
dec
out
mov
std
cmpsb
cld
adc
xchg
add
sbb
adc
data16
cmc
out
mov
std
popf
arpl
push
or
pop
or
adc
cmp
andb
mov
xchg
mov
sbb
jnp
js
add
stc
adc
ss
jnp
inc
rorl
or
ljmp
sbb
xor
sub
jmp
push
divps
mov
mov
bound
sbb
in
push
lahf
push
or
enter
xchg
sbb
xchg
cmpsl
in
cltd
or
mov
out
gs
leave
lret
out
popf
mov
call
scas
mov
notl
inc
addr16
into
push
jl
inc
scas
stos
sub
jb
or
xor
imul
sub
call
jno
cmp
fs
fldcw
popf
push
mov
cmpsb
outsb
movl
jns
push
fs
mov
mov
stos
sub
mov
jo
push
mov
scas
movl
andl
sub
cmc
adc
popf
push
sub
sub
cmp
clc
push
jne
fildl
aad
in
and
push
aas
js
sets
adc
mov
inc
or
pop
incb
pop
jnp
jne
adc
pop
push
add
sti
ret
push
pop
enter
sbb
in
out
ficompl
ss
pop
dec
mov
add
adc
int
add
stc
xor
out
xchg
arpl
or
ljmp
jns
mov
dec
rcl
arpl
xchg
leave
in
add
fistps
aam
repz
adcl
add
shlb
or
pop
pop
test
or
cli
xor
push
insl
pop
rclb
fistps
mov
push
sahf
shl
and
and
sbb
in
dec
mov
lods
gs
mov
nop
outsl
push
xchg
jne
cwtl
js
add
aas
or
aam
inc
shlb
fincstp
cmp
mov
fnstenv
outsl
push
scas
jbe
fwait
jne
mov
sbb
sub
js
inc
inc
scas
jne
pop
push
roll
cmpsl
movsb
cwtl
sbb
cmp
lahf
push
andb
cmpsl
insl
mov
and
lret
pop
inc
dec
adc
mov
lods
dec
fmulp
mov
inc
xchg
pop
es
inc
in
je
mov
addb
sub
fld
fsts
adc
clc
mov
pop
or
inc
je
adc
leave
pop
xor
pop
xor
inc
jecxz
inc
add
sbb
in
lret
dec
test
or
jae
jbe
aaa
mov
popf
add
jmp
outsl
sbb
shrb
out
stos
ja
sub
push
lds
add
pop
test
push
inc
sbb
dec
pop
out
sbbb
jl
fwait
lcall
out
cwtl
loop
adc
mov
inc
outsb
scas
aam
xor
mov
xlat
aaa
jo
jg
sub
jns
lock
rcrb
insl
jle
jecxz
mov
int
test
subb
mov
jge
insl
cwtl
aam
pop
pop
or
icebp
cmc
int
enter
mov
sbb
mov
add
mov
addr16
or
stc
test
cmp
stc
mov
add
mov
xchg
mov
pop
cmc
push
xor
push
xlat
sub
mov
mov
int3
push
popf
into
movsb
movsl
enter
xchg
fnstsw
inc
imul
bound
into
pop
sarl
or
inc
sbbl
cmc
mov
js
mov
lea
mov
inc
ja
dec
ret
mov
outsb
xor
sti
repz
mov
xor
ficomps
mov
cmp
lret
dec
jb
ret
rdmsr
cmp
das
mov
iret
xchg
pusha
cltd
repnz
xchg
xchg
fldenv
imul
xchg
lahf
leave
clc
ljmp
arpl
pop
cmc
sbb
insb
in
daa
cvtpi2ps
inc
fildll
jno
xor
pop
mov
sbb
gs
jnp
int3
xor
andl
clc
in
stos
sbb
and
test
inc
insl
fsubrs
xlat
rclb
sbb
lock
imulb
inc
mov
les
jmp
fists
xacquire
cmp
popf
pop
adc
inc
cmp
jae
jo
sub
dec
sahf
sbb
rcrb
adc
lods
loopne
adc
daa
fld
xchg
mov
jmp
popa
sti
ss
lcall
xchg
pop
jae
imul
call
pop
enter
or
in
iret
aad
leave
or
xchg
mov
out
int
jno
nop
xor
fidivrs
in
imul
repz
testb
add
inc
into
fcompl
ficoml
xchg
cmp
mulb
xor
sub
sbb
test
mov
call
jno
and
push
cmp
push
aam
pushf
mov
test
inc
mov
mov
add
mov
lea
dec
adc
mov
sub
sbb
aas
push
lret
and
jo
push
pop
call
test
inc
pop
push
cs
cmpsl
testl
dec
ret
xor
push
and
movsb
rorb
push
cld
dec
sbb
into
add
cmpsb
dec
fbstp
out
std
dec
sbb
inc
test
je
inc
add
addb
mov
loop
push
add
mov
push
inc
jecxz
ret
movsl
lret
mov
outsb
add
mov
push
sub
xchg
jno
in
xor
stos
out
out
mov
xor
jns
mov
push
xor
cmp
jle
in
pusha
insb
in
sbb
jmp
mov
mov
in
dec
ja
out
test
into
hlt
mov
fcoml
mov
rcrb
add
cmpsl
sub
ret
push
inc
loope
and
dec
sbb
jns
mov
int
stos
push
inc
pop
mov
fs
dec
xor
adc
push
scas
out
mov
mov
adc
outsb
cmp
idivl
je
adc
sub
xchg
jle
negl
sarb
jmp
or
sbb
loope
loop
push
or
xchg
out
inc
mov
adc
mov
lret
and
push
or
subl
xchg
shlb
shrb
in
stos
and
mov
lcall
adc
xchg
mov
inc
push
stc
aas
xchg
fdivrs
cmp
mov
insl
rorb
iret
repz
outsb
mov
dec
pop
pop
mov
sahf
xor
test
icebp
cmp
shlb
inc
inc
mov
mov
xlat
push
sub
notl
sub
dec
push
dec
rorb
xchg
jp
xor
mov
add
push
jecxz
add
jge
or
mov
mov
adc
xor
test
ljmp
pop
mov
xchg
lock
xchg
add
mov
mov
xchg
inc
cld
or
sti
adc
and
fcompl
jnp
fcomi
roll
dec
ja
add
fstpl
pop
addr16
cmpsb
out
pop
mov
dec
jp
mov
scas
and
std
dec
jge
aad
sbb
and
sbb
push
pop
adc
cmp
cmp
mov
mov
mov
xchg
push
jo
shlb
stos
mov
push
push
sarb
inc
xchg
fisubrl
or
out
mov
or
aas
in
loopne
or
shrl
jbe
test
adc
leave
scas
pop
ret
call
loop
lods
mov
jno
cmp
test
cmc
xchg
xlat
mov
mov
jl,pt
aam
repz
xchg
js
xchg
mov
mov
scas
fcomps
cmp
cld
push
pop
ret
loope
mov
nop
xor
in
lret
rcr
jp
loope
mov
jmp
lods
fldt
fucomi
adc
ja
outsb
nop
shrl
loopne
into
aas
jnp
adc
dec
test
outsb
sbb
dec
jnp
clc
imul
push
mov
and
roll
sti
fcompl
nop
in
push
xor
xor
lret
movsb
mov
outsb
mov
cmpsl
stc
shrl
add
jne
or
mov
xchg
lods
scas
jbe
cmpsl
andb
mov
push
pop
jns
push
push
fmul
es
mov
jo
xchg
ja
dec
ja
aaa
outsb
movsl
sub
cmpsb
repnz
les
cmp
sbb
mov
push
xchg
push
jbe
jmp
ljmp
jae
in
pusha
or
sbb
fmul
xor
push
test
mov
jge
xor
xchg
mov
mov
add
out
cmpsl
arpl
lods
mov
jecxz
or
xor
je
addr16
scas
popf
dec
js
and
cltd
jmp
nop
pop
cld
cmp
or
inc
and
inc
and
std
push
sub
mov
xor
cmp
cmp
sbb
mov
fsubs
and
hlt
daa
lea
test
andb
pop
xchg
mov
xor
movl
cmpb
xchg
mov
pusha
push
inc
xor
xor
xchg
fbld
imul
nop
sub
xor
or
xor
insl
mov
mov
lds
aam
jmp
addr16
ret
es
push
jae
adcl
sub
in
mov
stos
mov
cmpsl
sub
xchg
insb
xor
sub
adc
adc
jp
enter
pop
daa
outsb
and
mov
inc
adc
enter
xor
fidivrs
xchg
adc
inc
xor
cmpsl
push
and
push
lret
and
jbe
rolb
cwtl
repnz
push
pop
add
lods
fmul
push
leave
pop
addb
xorl
rcrb
ss
cmp
jno
sub
jp
xchg
mov
out
fisubrl
std
fdivrs
push
adc
pop
incb
dec
ss
lret
fnstcw
test
dec
imul
add
jge
fiaddl
stos
aas
testl
repnz
inc
or
dec
fwait
add
scas
mov
push
xorl
call
pminub
sub
inc
lock
jns
sub
js
cmpsl
daa
sbb
mov
cmp
iret
test
ret
cmp
adc
jbe
sbb
cmp
and
mov
scas
imul
mov
mov
sub
xchg
xor
and
js
jp,pn
sahf
dec
sbb
mov
pop
mov
fsubrl
pushf
pop
cmc
lods
push
call
aad
stc
xor
jmp
bound
mov
fmull
push
xor
adc
adc
lods
fcoml
dec
repz
jmp
xchg
sub
push
xor
clc
shl
out
xchg
adc
xorb
mov
jle
test
xchg
dec
xlat
mov
int
insb
xor
xchg
push
out
sbb
mov
add
pusha
mov
fmul
test
dec
loope
jl
mov
sbb
mov
in
sub
add
cmpsb
je
push
clc
inc
or
daa
add
and
xor
jns
adcl
sub
dec
mov
sub
xor
pop
lock
test
cmc
add
addr16
fmuls
lea
xor
push
fsubrl
mov
arpl
or
in
aas
pop
fnstcw
inc
int
add
mov
clc
vrsqrtss
icebp
xchg
pop
fwait
push
mov
add
cmp
cwtl
mov
xor
ds
popa
xchg
sbb
and
popf
cmpsb
test
lea
iret
xlat
leave
and
mov
mov
fisubrs
cmp
jae
cmpsl
xor
cmp
xchg
mov
xchg
rcr
mov
sahf
push
rorl
sahf
adc
push
cmp
outsb
es
dec
out
cmp
loop
cmp
xchg
mov
inc
cmp
in
mov
jo
sbb
xor
ds
or
adc
rol
insb
push
add
ss
or
loope
add
in
ljmp
xchg
or
shll
int3
mov
jp
push
outsb
dec
jp
xor
xor
test
scas
pop
subb
jmp
jmp
shlb
xchg
leave
call
lods
repnz
sahf
repz
iret
call
xlat
out
out
stos
stc
lea
in
cmp
dec
test
gs
arpl
push
loope
cli
ret
dec
jecxz
imul
cltd
inc
lea
push
mov
idivl
mov
iret
sbb
fsubp
pop
adc
fcoms
call
or
sub
xor
xchg
dec
lea
sbb
imul
mov
sbb
xchg
jle
sbb
fcomp
imul
mov
out
xchg
andb
mov
sarl
push
dec
movsb
dec
push
or
imul
jo
ds
iret
cmovle
test
mov
das
push
stos
or
mov
or
cmc
sub
or
xor
cwtl
and
lret
test
ja
enter
aaa
push
dec
dec
inc
icebp
fisttps
scas
fst
cmp
fdiv
adc
sbb
in
addr16
xchg
ja
sti
orb
sti
mov
mov
js
mov
fldenv
push
movsb
adc
sahf
aam
mov
or
aas
loopne
pop
rorb
xchg
xlat
loope
or
add
sbb
into
test
xor
xor
sahf
pop
mov
sbb
stc
mov
mov
decl
xchg
popl
inc
push
scas
loopne
jecxz
imul
pushf
popl
repz
aas
outsb
lods
clc
mov
icebp
pop
push
sti
dec
sbbb
add
and
sbb
call
bound
pop
mov
push
dec
mov
mov
cltd
fcmovu
mov
inc
adc
test
insb
mov
xor
scas
inc
sub
adc
fisubrl
fwait
cmp
repz
sub
pop
call
mov
jl
pop
rorl
lret
xor
cmp
jg
les
les
xlat
fldt
aas
add
mov
inc
cmp
daa
popa
idiv
mov
aaa
jbe
cmp
popa
lock
adc
cmpsb
stos
rorl
xchg
jb
dec
add
aam
or
xchg
scas
rclb
decl
scas
movsl
imul
aaa
stos
or
mov
lds
addr16
les
mov
push
mov
call
test
lods
inc
addl
sbb
nop
jmp
lret
adc
mov
subl
js
inc
fwait
push
cmp
cmp
inc
test
bound
sbb
cmp
sti
xchg
and
push
mov
dec
xchg
adc
dec
flds
adc
xchg
pop
icebp
and
in
pushf
xor
notb
xor
jle
sub
nop
mov
xor
mov
sbb
jne
jns
adc
inc
stos
push
rorb
ja
js
adcl
mov
sahf
jle
pop
add
xchg
out
mov
loop
je
xchg
xor
int
shl
imul
inc
outsb
inc
pop
add
pop
push
jg
rclb
adc
adc
mov
xchg
mov
aaa
jnp
mov
sub
adc
adc
repnz
outsb
cmp
sbbb
xor
aam
fnstenv
xchg
out
pop
fcmovb
movsl
stc
dec
jns
push
or
cmp
dec
jp
push
lcall
data16
inc
cli
push
ljmp
xchg
sub
pop
testb
push
lcall
data16
inc
cli
push
ljmp
xchg
sub
testb
push
push
lcall
data16
inc
mov
push
fdivrl
mov
out
out
jp
stos
es
adc
mov
test
inc
ss
bound
and
adc
xchg
pushf
test
mov
cmpsb
loop
xchg
movb
push
push
inc
ss
bound
inc
add
pop
xchg
rolb
loop
inc
xor
out
push
push
push
inc
ss
bound
inc
add
data16
add
mov
mov
shll
or
bound
adc
popf
mov
lods
mov
cmp
xchg
push
cmp
lret
push
adc
mov
mov
sub
pop
xchg
mov
repz
sbb
add
xchg
cmpb
dec
cmpsb
stos
and
jne
out
push
pop
and
pop
and
das
pop
data16
or
xchg
insl
mov
mov
fucomi
test
pop
in
add
or
inc
orb
out
sub
dec
or
fldenv
jge
int
sarb
jbe
rol
ret
xchg
inc
or
divl
xchg
xchg
shll
mov
mov
push
push
inc
ss
bound
inc
add
data16
repnz
loop
xchg
movb
push
add
pusha
bound
ja
imul
loop
out
jecxz
lds
xchg
xchg
lret
xchg
in
pusha
aaa
jb
push
pop
bound
jle
dec
xor
inc
in
loope
lret
mov
mov
int
push
push
or
inc
pop
adc
add
data16
repnz
loop
xchg
movb
push
push
inc
ss
bound
inc
add
data16
repnz
loop
xchg
movb
push
sub
mov
es
push
pop
mov
testl
cmpsb
xchg
aaa
push
lods
sbb
pop
or
push
cmpl
outsb
xchg
xor
les
fistl
ds
lea
add
cmp
push
adc
inc
addl
mov
fstpl
jno
scas
mov
fcmovu
xor
pop
xchg
xchg
fdivs
dec
test
mov
sahf
push
mov
adc
movsl
scas
jnp
mov
daa
mov
mov
or
xchg
sbb
loop
lods
mov
push
inc
push
cmp
jo
sub
sub
mov
int3
lret
cmpsb
mov
lds
xor
lret
lcall
fidivl
das
jns
out
int
xor
loop
out
cmpsl
insl
in
fwait
shll
push
loop
pop
jnp
cmp
stc
xchg
neg
fsubrs
adc
js
pop
or
popa
jbe
dec
fsubs
mov
xor
pop
or
int
sbb
or
mov
mov
inc
out
mov
daa
mov
sub
pop
jae
lea
scas
sub
or
lods
adcl
lahf
ja
pop
aas
clc
shlb
and
ret
shlb
adc
enter
mov
es
adc
ds
jge
or
sub
fs
xchg
shl
jp
cmp
adc
imul
jns
pop
xchg
js
xor
jnp
movsl
loope
shlb
jo
mov
xchg
jl
sub
inc
push
je
push
mov
jl
push
pushf
jnp
jl
repz
xchg
pop
sub
insl
or
in
sbb
xchg
jae
ficoms
mov
sbb
add
outsb
aas
mov
mov
jnp
pushf
add
mov
cmpsl
ljmp
sarl
subb
ja
repnz
or
cmc
xchg
das
mov
jns
mov
push
inc
and
sti
imul
add
hlt
mov
mov
and
gs
jno
inc
xchg
shrb
xlat
jnp
dec
inc
cmpsl
sbb
imul
sub
lods
jg
mov
fidivrs
add
cmp
push
and
test
pop
fcmovbe
mov
sbb
les
xchg
inc
psubusw
and
xchg
jnp
andb
mov
cli
jge
aam
mov
cs
sub
xor
dec
outsl
xchg
mov
jge
push
scas
out
std
adc
js
ret
jg
mov
jns
cmpsl
cs
sbb
loope
inc
in
mov
sub
dec
and
lods
jne
dec
call
pop
or
stos
orb
and
pop
pop
aaa
stos
dec
push
fwait
inc
testb
xor
xor
ret
xor
mov
orl
pusha
mov
in
sarl
cmp
jl
push
outsb
fwait
addb
stos
inc
inc
cmp
xchg
sbb
rcll
ss
aam
loopne
int3
mov
ja
mov
jecxz
pop
lcall
arpl
jo
fists
inc
dec
cmp
cmp
lock
add
out
iret
xchg
dec
das
aam
movsl
fldt
push
push
or
fsubrp
loope
test
stc
or
lahf
cmp
pop
push
mov
or
add
or
push
test
push
stc
jge
sbb
outsl
or
mov
cs
outsb
mov
xchg
xorb
ret
pop
sub
inc
mov
push
das
mov
int
aaa
scas
add
jge
mov
pop
adc
and
cwtl
mov
add
fdivrs
imul
and
and
mov
jno
xor
data16
cld
adc
test
je
hlt
push
clc
inc
call
dec
pop
mov
shrb
call
leave
rcrb
ret
adc
mov
push
daa
push
or
insb
cld
mov
test
mov
push
dec
idiv
fcoml
jns
mov
iret
xchg
jbe
dec
xchg
add
inc
clc
push
lods
lds
adcb
lret
and
aad
fidivs
push
mov
out
push
dec
cmp
outsl
push
pop
jns
aas
rcll
mov
sti
shl
xor
test
pop
imul
jae
rcrl
xor
and
stos
vmovshdup
in
lcall
inc
dec
jmp
or
test
outsl
cmpsl
push
rol
pushf
push
adc
add
mov
pop
sbb
jl
mov
fcomip
clc
and
and
push
mov
pop
ja
nop
pop
jmp
pop
mov
imul
clc
out
pop
fldcw
cmp
sbb
xor
scas
je
sbb
jp
insb
add
mov
scas
test
mov
adc
dec
mov
lea
sub
test
xchg
mov
fbld
xor
dec
lahf
and
dec
dec
popf
push
cltd
call
pop
sbb
sbb
xorl
mov
outsb
xor
fldl
aam
insl
cmpsb
dec
jle
jo
pop
int
popa
shlb
and
stos
xchg
outsl
pop
sub
outsb
push
or
inc
cltd
lret
popa
btr
test
mov
pop
and
and
lahf
fimuls
jae
loope
mov
mov
and
adcl
ret
leave
popa
xchg
mov
xchg
pop
xchg
cmp
lds
push
push
push
mov
ds
push
push
test
test
lcall
push
setge
test
mov
and
les
repnz
je
and
sub
mov
and
rolb
pusha
gs
lea
mov
xchg
in
add
leave
dec
movsl
xchg
add
cvtps2pd
arpl
hlt
lods
xor
fwait
dec
ror
or
xor
sbb
lea
inc
rcr
pop
aas
insb
push
dec
or
inc
jge
push
test
xchg
mov
ficoml
jle
push
les
cmp
arpl
insl
mov
data16
jl
scas
sub
jns
fidivrs
xor
xor
mov
adc
mov
mov
nop
or
mov
xchg
repz
movsl
pushf
cmp
sbb
lds
xor
pop
loopne
pusha
aad
leave
jge
in
sti
sahf
add
mov
dec
and
dec
mov
push
inc
leave
cmp
bound
xchg
lahf
aaa
inc
mov
inc
mov
scas
sbb
pop
test
fistpl
add
cmpsb
mov
and
xchg
stos
push
les
lret
ficompl
mov
or
sbb
cmpsb
cld
jnp
lock
and
mov
imul
push
mov
int3
xchg
les
mov
pusha
rorb
cmc
call
dec
push
outsb
mov
mov
cmp
xlat
xor
fistpll
xor
mov
cmp
stos
ret
push
add
arpl
lcall
in
sbb
pop
add
xor
fistpl
mull
fwait
sti
mov
mov
dec
in
jl
das
pop
jmp
mov
mov
pop
mov
inc
pop
mov
fs
lock
mov
movsl
idivl
fiadds
shll
aaa
imul
scas
mov
dec
cli
cmp
push
xchg
mov
inc
mov
add
pop
or
sub
pop
sti
adc
or
cmp
and
pop
mov
ret
lds
sbb
add
dec
or
stos
arpl
ja
mov
test
stc
mov
and
xor
cmpsb
cs
xchg
add
cmp
or
cmpsb
add
xor
fiadds
sbb
mov
lahf
lods
insl
mov
jnp
mov
xchg
jae
ds
test
jae
adc
sbb
xchg
pop
add
jecxz
dec
clc
rcrb
loop
dec
sbb
inc
or
jmp
adc
pop
add
rep
leave
lret
outsb
pusha
icebp
in
push
js
xchg
sub
xchg
mov
xchg
icebp
or
push
mov
repz
in
sub
xchg
loope,pn
lods
rcll
xchg
pop
lret
sti
sbb
in
xchg
push
xlat
es
add
jge
pop
adc
in
xor
stc
out
insb
repz
dec
mov
fucom
sbb
in
and
loope
mov
pop
dec
xchg
inc
lret
adc
outsl
pop
out
addr16
rcl
cld
sbb
cltd
xchg
xchg
adc
jle
leave
enter
inc
shrb
pop
jns
or
imul
daa
andb
or
push
xor
and
xorl
loope
pop
enter
out
jno
insl
arpl
pop
lret
jp
ljmp
fcompl
add
mov
sbb
fs
std
xor
ss
adc
scas
or
adc
jle
jle
adc
arpl
mov
pusha
dec
gs
lcall
dec
adcl
xor
push
js
and
cld
mov
into
cwtl
cwtl
shlb
popf
push
clc
int
mov
cmc
outsb
xchg
add
mov
inc
jg
push
bound
mov
rcrl
call
or
mov
int
mov
jnp
xor
test
fcmovnbe
sub
sub
das
nop
adc
nop
lock
sbb
jp
jge
inc
xchg
adc
shlb
xlat
jl
ljmp
stos
xchg
cmp
cld
inc
sbb
adc
jno
std
cmovge
ds
and
loope
sbb
sahf
pop
lret
stos
sti
mov
cmp
into
cwtl
mov
sbb
push
out
jmp
dec
mov
mov
inc
cwtl
pop
shl
cli
pop
or
aad
inc
aam
mov
jmp
dec
and
add
iret
pusha
cmc
outsb
or
mov
stos
icebp
in
shlb
sub
insb
xchg
push
push
sub
mov
icebp
jb
or
ds
pop
cltd
and
fnstenv
and
lcall
jmp
rcll
movsl
fstl
xorl
aaa
and
scas
cmpb
jle
lret
pop
dec
and
dec
mov
xor
add
mov
adc
sub
cmp
xor
jl
mov
mov
stos
sbb
cmpl
jae
imul
fildll
sub
int
mov
dec
jbe
xchg
iret
in
cmp
add
in
push
lds
ja
outsb
ss
ljmp
xchg
shl
xor
jp
outsl
ljmp
lahf
popa
gs
cmp
mov
jmp
mov
add
push
aaa
mov
cmp
data16
repnz
fs
inc
rorb
push
sub
xor
cmp
lock
imul
daa
hlt
and
mov
push
sti
decl
mov
insl
push
shll
punpckhdq
pop
shr
cmovg
xor
mov
daa
mov
jp
pop
mov
mov
inc
pushf
test
adc
sub
jns
push
clc
fistpl
scas
cmp
jecxz
repnz
mov
pop
rcrb
push
test
ljmp
push
jl
pop
bound
ficoms
push
and
mov
ja
or
cmp
cmp
int3
pop
mov
mov
xor
pop
xchg
in
xchg
js
jge,pn
repz
orb
mov
mov
scas
das
les
retw
xor
adc
mov
pop
sbb
inc
inc
inc
xlat
test
cmpsb
or
and
and
add
push
jno
pushf
das
mov
lret
inc
or
rcrl
adc
negl
pslld
stc
adc
fisubl
sbb
xor
andl
adc
ffreep
jl
int
sbb
mov
jae
push
cmp
xlat
stos
cli
add
movsb
arpl
mov
dec
cmp
cmpsl
push
cltd
push
lea
shrb
lock
ret
push
loopne
mov
dec
andb
sub
or
cmp
je
fs
test
repz
bnd
popf
xor
popf
das
pop
mov
push
movsl
add
lret
push
and
daa
xor
fnsave
scas
shrb
pop
dec
pushf
shl
mov
push
push
jb
jno
xchg
fcomip
daa
and
dec
sub
mov
psrad
rclb
xchg
lahf
cs
lea
adc
data16
and
mov
adc
iret
out
lds
jne
rorb
scas
sub
pop
fiaddl
in
enter
and
es
inc
scas
mov
inc
out
repnz
cltd
int
jmp
stc
jo
movsb
mov
outsb
push
xor
dec
push
ljmp
and
repnz
mov
xor
loopne
jp
mov
and
ret
mov
push
jbe
pop
sub
jmp
jnp
popf
adc
sbbl
inc
pop
aam
and
enter
and
shl
out
jne
mov
mov
adc
cld
push
imul
movsb
cmpsb
les
clc
out
icebp
dec
xlat
scas
sub
push
sub
out
lahf
outsb
push
clc
xchg
stos
js
fbstp
cmp
push
or
inc
cltd
cwtl
into
sbb
or
adc
nop
dec
and
xor
sti
roll
dec
test
daa
fdivs
aad
xor
push
arpl
les
lock
leave
cld
pop
loope
sbb
pop
loop
lock
lcall
mov
push
inc
inc
je
int3
sub
mov
add
repz
jl
dec
add
cmpsl
push
cmp
cmp
push
fs
pop
add
pop
mov
sbb
shrb
test
dec
pusha
xchg
xchg
shlb
in
rorl
in
fsubl
clc
mov
adc
into
mov
xchg
sub
lds
andl
out
mov
popf
js
lcall
inc
pop
or
xlat
fldt
jb
pop
mov
jecxz
movsb
push
xchg
xchg
mov
in
scas
sub
mov
lahf
popf
jns
jns
dec
sahf
outsl
cltd
xor
mov
shll
mov
loopne
movl
fistl
or
adc
cmp
mov
pop
enter
inc
cli
or
insb
in
lahf
sub
xor
stos
jge
jbe
popf
gs
ret
sbb
adcb
pop
ror
scas
sub
insb
mov
cmpsb
out
cmp
jge
movsl
std
inc
orl
jbe
sbb
inc
add
dec
scas
pop
nop
dec
movl
movsb
pop
pusha
scas
in
lret
jns
jne
das
lods
dec
push
lcall
pop
sub
pushf
mov
inc
dec
add
mov
scas
in
popa
fnstsw
popf
adc
xchg
jae
sbb
mov
hlt
gs
ja
movsl
cmp
call
repnz
and
adc
pop
push
arpl
lret
push
ret
pop
push
inc
xor
jle
jae
sti
in
inc
sti
daa
mov
test
data16
popa
mov
fdivl
jae
inc
mov
jmp
ds
mul
sub
pop
dec
scas
unpcklps
cltd
inc
dec
mov
sub
clc
xchg
scas
outsl
lock
repz
out
mov
leave
dec
sub
push
std
jns
dec
mov
or
ret
cmp
fnstenv
xor
test
mov
hlt
pusha
fwait
imul
sbb
sub
in
jno
lds
in
xor
mov
cmp
popf
es
inc
xchg
sahf
das
inc
cmp
jg
je
mov
int3
mov
mov
loopne
mov
dec
cmc
and
add
lods
jmp
add
cmpl
add
lret
pop
inc
fsts
xorb
shll
xor
dec
arpl
and
inc
and
enter
mov
ja
cmp
imul
ret
jo
jecxz
pushf
fldenv
mov
aaa
lret
daa
outsl
enter
test
push
stc
jecxz
cmp
pop
push
and
pop
jne
jecxz
adc
in
sub
mov
fimuls
add
iret
ss
cld
cmp
jle
xchg
nop
mov
into
pop
or
pop
mov
push
and
lock
xlat
stos
or
add
push
ret
and
dec
clc
outsb
dec
inc
pop
ljmp
cmc
and
sub
sbb
pop
push
pop
pop
sub
xor
push
inc
xor
pop
int3
sbb
xchg
push
pop
pop
scas
mov
pushf
jmp
rorl
pop
mov
adcl
out
adc
cmpsb
fisttpl
sub
push
nop
insb
sub
cmpb
cmp
push
push
sbb
push
cmc
sbb
dec
ret
sbb
lds
and
movsb
mov
pop
push
mov
cmp
test
gs
jb
pop
incl
xchg
sbb
add
jge
repnz
inc
sub
data16
push
push
int3
fldenv
mov
stos
aaa
insl
and
popa
popa
adc
ja
movsl
loop
mov
jl
outsb
pop
dec
lcall
cmp
and
imul
rclb
arpl
sub
shll
outsb
mov
jbe
mov
ficomps
fistpll
pop
faddl
inc
jae
mov
daa
pushf
sbb
cmp
push
xchg
test
add
pop
loope
and
movsb
arpl
sar
lods
cld
iret
lds
add
pop
jb
imul
add
sti
and
add
inc
out
out
add
sbb
dec
or
xchg
push
int3
dec
loopne
sbb
notb
outsb
xchg
cmp
scas
lret
mov
sub
repz
push
inc
xchg
cwtl
xor
push
testb
insl
sarl
push
mov
jns
mov
pop
cmp
add
inc
mov
mov
xchg
or
push
mov
pop
cmp
jno
dec
adcl
rorb
rcrl
sub
sub
lret
dec
xor
pop
iret
sbb
jnp
push
adc
addl
aas
lret
mov
dec
clc
or
stos
in
sub
sbb
push
shrb
xchg
aas
in
sarl
add
lcall
mov
mov
aas
mov
jo
add
jp
arpl
imul
rorl
xor
pusha
lret
fbstp
add
pop
jae
movsl
rolb
sysenter
or
mov
or
dec
adc
int3
push
int3
pop
jae
outsl
fimuls
sub
subb
jl
or
and
jae
nop
lahf
or
bound
xchg
cmp
dec
fisttpl
adc
xchg
orl
int
es
mov
sbb
add
mov
lods
and
sub
push
add
sbb
cmp
daa
popf
fildl
jg
add
push
adc
pop
xor
dec
jecxz
xor
and
sbb
mov
movsl
scas
pusha
aam
mov
lahf
sbb
adc
js
push
mov
lock
xchg
cmp
addr16
in
pop
leave
push
jp
in
or
aam
rcrb
dec
sub
fwait
and
dec
je
mov
jne
movsb
sub
dec
lret
imulb
mov
sahf
cmp
int3
and
xchg
lock
fstl
xchg
mov
faddl
std
hlt
jbe
ds
pop
icebp
push
lods
jnp
shl
adc
mov
adcl
test
out
call
and
in
xor
test
add
cmp
flds
inc
or
pop
mov
movsl
xor
mov
cmc
fs
cli
jae
rcr
pusha
mov
into
mov
and
stos
or
adc
outsl
sub
lods
add
gs
cmp
lret
lea
fs
cwtl
inc
lcall
aas
in
lods
roll
xchg
cltd
jle
out
cmpsb
imul
mov
add
rorl
aad
pop
xor
sarl
pop
dec
add
xchg
mov
pop
nop
xor
das
or
sbb
mov
test
push
jle
inc
inc
fldenv
insl
xor
or
jmp
shll
sbb
les
pop
je
inc
je
pop
fildl
sarb
popa
dec
ja
mov
xor
cld
mov
pop
lods
mov
push
aaa
cmpb
into
mov
sbb
cmp
scas
jnp
jns
faddp
sbb
sub
push
out
lea
sbb
sbb
fadds
dec
arpl
lahf
lock
scas
out
outsb
or
pop
jge
adc
mov
lea
outsb
sahf
and
mov
gs
and
in
push
dec
add
push
scas
jbe
pusha
jns
push
jo
cmp
icebp
stos
lock
or
sub
cmp
xchg
push
fidivrl
pop
or
add
mov
pop
xor
cmpsb
test
je
das
insb
in
mov
aas
mov
fs
out
cmp
aad
push
or
dec
shll
and
and
sbb
and
mov
xor
lcall
xchg
pop
add
ds
rorb
cmp
cmp
add
mov
sarl
pop
and
fadds
ret
ret
push
pop
and
jb
bound
inc
add
data16
repnz
loop
xchg
movb
push
push
inc
ss
bound
inc
add
data16
repnz
loop
xchg
movb
push
push
inc
ss
bound
inc
add
data16
repnz
loop
xchg
movb
push
push
inc
ss
bound
inc
add
xor
and
jns
sbb
cmpsb
xchg
mov
dec
push
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsb
xor
adc
aaa
push
ds
repz
movsl
adcl
movsl
ret
aad
lds
xor
adc
inc
push
push
inc
repz
movsl
lods
xchg
xchg
test
cmc
xchg
in
aad
mov
test
cmp
push
stos
inc
mov
in
test
cmpsl
scas
xorl
fs
inc
push
push
cmpsb
nop
test
sbb
cmp
mov
xchg
or
cmp
lcall
pop
xlat
dec
daa
or
jl
js
xor
inc
aad
cmp
and
add
xchg
imul
push
imul
jne
pop
jl
insl
inc
sbb
jle
xor
mov
lretw
jle
inc
adc
mov
mov
loopne
xchg
imul
icebp
mov
sub
cmpsb
test
frndint
ret
sar
pushf
jne
lcall
jecxz
jl
nop
mov
cmp
cmpsb
xchg
cmpsb
mov
adc
jo
mov
stos
rcrb
mov
xchg
xchg
test
repz
xor
jg
arpl
gs
push
jmp
push
mov
movsl
pop
xchg
lea
ret
aad
adcl
testb
inc
or
xor
xor
sar
bnd
cwtl
popf
pushf
mov
xchg
mov
inc
adc
adc
cmp
inc
fwait
lock
out
jmp
mov
xchg
stos
push
add
popa
push
jno
sbb
inc
push
push
inc
mov
xchg
xchg
test
cmc
repz
aad
lds
xor
adc
inc
push
push
inc
mov
xchg
xchg
test
cmc
repz
aad
lds
xor
dec
aam
mov
jae
add
cmp
lods
add
into
dec
ret
ja
pusha
mov
and
cmp
iret
ret
in
jp
mov
jecxz
lock
dec
mov
adc
and
xor
and
in
dec
xchg
pushf
add
xchg
mov
or
hlt
sub
cwtl
shlb
bound
adc
mov
dec
mov
loop
out
pop
shl
sub
inc
jns
in
and
cmp
pop
ljmp
ror
fwait
cmc
mov
jo
mov
xor
insb
jb
push
data16
jp
and
repz
fists
insb
sbb
fcoms
or
jp
cld
sub
adc
outsl
mov
and
sbb
inc
lods
addb
cli
fcoms
mov
dec
cmp
dec
cli
in
faddp
popf
mov
adc
rol
xlat
fwait
in
ret
orl
dec
int
fmull
jnp
out
adc
stc
sub
addr16
out
adc
mov
loop,pt
cmp
add
je
or
fwait
sub
mov
gs
cwtl
cmpsw
pop
clc
shll
inc
dec
arpl
shll
repz
mov
nop
pop
mov
mov
ja
fistpl
mov
gs
push
shl
stc
pop
idiv
les
mov
xchg
mov
outsb
mov
xchg
jge
and
cltd
ret
push
adc
aad
stos
daa
push
pop
int
add
popl
fcoms
gs
mov
xchg
add
lock
adc
call
movsb
pop
push
fs
fwait
push
aas
cwtl
loop
mov
mov
fadds
sbb
cmpsl
jne
xchg
cmovo
lock
ret
lock
cmp
cmpsb
mov
mov
lods
and
lods
mov
inc
lcall
out
mov
outsl
sub
movsb
leave
sub
mov
pop
std
stc
int
xor
add
dec
jno
and
rolb
pop
pop
subl
jno
es
mov
jns
in
movsb
stc
cmc
jnp
adc
int3
andl
aas
andb
xchg
iret
xor
xor
inc
fstpl
xchg
dec
cmp
mov
ffreep
sub
sub
rorl
das
rcr
subb
jne
sarl
stc
test
popa
sub
ret
pop
xchg
push
jbe
fimull
jb
cli
and
jb
add
sub
loopne
std
sbb
in
and
pop
daa
push
dec
lods
gs
daa
mov
iret
ror
dec
or
or
sbb
mov
lods
out
xchg
jnp
mov
mov
in
adc
push
or
push
es
out
lods
test
jmp
xor
xor
pop
push
pop
push
mov
jp
push
or
fcomp
pop
mov
mov
mov
pushf
adc
jne
dec
pop
out
fildl
add
stc
scas
push
push
xchg
mov
mov
into
stos
insl
or
aad
ret
pop
cmpsl
iret
sbb
lret
pop
mov
lods
sbb
mov
pop
xor
test
int
mov
jp
add
cmpl
sbb
pop
dec
push
jne
adc
std
test
rcr
dec
adc
pop
sbb
push
cmp
in
ficompl
mov
or
mov
mov
inc
hlt
jae
stc
and
or
inc
dec
aaa
and
in
mov
daa
or
fdivrp
std
out
jecxz
lods
sarl
push
icebp
jg
sbb
cmpb
xlat
push
mov
rclb
fdiv
xlat
add
xor
fnsave
lgs
add
mov
sbb
mov
rsqrtps
loope
sbb
and
push
and
lock
xchg
add
or
dec
inc
push
lods
xor
xchg
sbbb
xor
xchg
pusha
lods
cmpsb
test
mov
stos
gs
int
jno
mov
sub
mov
sbb
cwtl
inc
cwtl
xchg
mov
mov
into
out
in
push
push
iret
add
iret
mull
rcrb
push
push
sar
insb
xchg
daa
hlt
and
mov
push
dec
loop
xchg
push
shrb
dec
filds
sub
cltd
das
ret
in
cmp
jbe
fwait
cmp
pop
inc
lcall
aaa
fisubs
cld
testb
out
adcl
aas
dec
aas
push
fs
xchg
xor
stos
jmp
fisttpl
push
inc
cmc
popf
imul
lahf
loopne
repnz
loopne
aad
nop
dec
mov
xchg
or
cmp
testb
das
sub
fildl
xchg
jmp
cli
repz
push
inc
jp
loop
xchg
outsl
stos
sbb
in
xor
xor
push
fists
add
aad
sbb
cmp
inc
stos
outsb
out
sbb
pusha
mov
jns
jl
pop
sbb
add
andl
das
xchg
add
loop
in
adc
mov
sbbb
imul
sbb
js
iret
hlt
jp
rcl
fsts
adc
xor
fwait
and
jl
sti
dec
movsb
aam
inc
mov
cmp
fs
push
dec
aaa
sarl
sti
inc
cli
incb
adc
jae
fldt
jns
and
adc
mov
aad
int3
sub
mov
fsts
or
inc
mov
lds
data16
xor
call
fisttpl
pusha
lret
pop
xchg
insl
push
cmp
jg
pop
mov
call
push
test
fs
cmp
popl
in
push
push
jecxz
sub
jge
bound
aas
pop
jnp
jnp
xchg
and
insl
rcrl
pop
pop
pop
leave
dec
jbe
jbe
pop
sub
sbb
jp
cmpsb
repnz
int3
int3
aaa
pop
movsl
xor
add
mov
mov
pop
sbb
pop
int
xor
xchg
sahf
xchg
leave
rcrl
jge
test
sahf
in
mov
in
cli
xor
and
add
adc
xlat
ljmp
rcr
imul
and
sub
xlat
mov
dec
or
push
jbe
test
aad
jns
dec
call
xor
mov
test
xchg
pusha
push
filds
leave
dec
mov
cmpsl
js
test
ja
xchg
ret
cltd
cmp
jnp
mov
roll
or
mov
sub
jae
xor
cwtl
outsb
out
jns
push
inc
sbb
add
lea
jmp
out
loopne
jp
outsl
cli
in
push
mov
js
mov
sub
add
push
test
sub
imul
rorl
xchg
mov
fcomp
jne
sbb
loopne
xchg
or
adc
movsl
aaa
fildl
repz
push
repnz
sub
pop
or
rolb
mov
dec
and
dec
jge
fcomi
mov
mov
mov
jg
cmp
jns
mov
jmp
test
mov
fisttps
xor
jecxz
or
scas
lds
cmp
push
sahf
aad
inc
dec
and
clc
xor
popa
add
mov
cs
sbb
loop
or
push
iret
push
xor
cltd
ja
sbb
in
jmp
pop
pushf
pop
lods
fstpt
push
aam
cmpsl
lock
scas
mov
sahf
scas
jle
fld
push
in
jp
sahf
xchg
push
jns
and
out
pop
cmp
loop
jecxz
sub
lods
movsl
outsb
popa
test
lods
bound
addl
or
xchg
hlt
cltd
jmp
dec
ret
fs
mov
insl
sub
pop
push
lahf
sub
add
or
lcall
int
add
adc
das
mov
lds
aad
push
hlt
xchg
inc
scas
cmp
push
inc
mov
nop
and
cmpsl
das
sahf
out
repz
push
pop
xchg
cs
xchg
lds
jecxz
out
mov
mov
cmpsb
dec
push
xchg
stc
int
or
or
in
clc
out
lahf
aas
pop
lock
out
les
push
push
stos
cmp
jmp
fwait
loopne
pop
aas
and
lods
mov
scas
jbe
lods
xchg
js
ja
mov
std
clc
push
jo
mov
dec
sub
xchg
push
push
sbb
jl
fstps
lahf
add
dec
cwtl
inc
ja
sub
enter
mov
adc
adc
xchg
or
cmpsl
jne
mov
addr16
mov
fcoms
nop
int
xor
divb
gs
out
dec
inc
ret
dec
mov
push
mov
loop
sbb
mov
shll
fnsave
popa
sub
insb
push
dec
xor
or
xlat
and
scas
mov
enter
jbe
and
mov
ja
push
mov
call
sbb
and
sahf
mov
sbb
sub
push
ss
mov
mov
mov
mov
mov
xor
imul
mov
in
fists
mov
mov
clc
test
aad
iret
cmp
jle
repz
jo
push
decb
scas
mov
ljmp
xchg
jecxz
lahf
incb
push
push
mov
lcall
push
das
or
int
sub
aas
xor
sbb
ss
dec
xor
iret
bound
mov
cmp
test
stc
jb
lret
sbb
in
add
add
rclb
jnp
add
lock
sti
lahf
fdivr
pop
sbb
push
rcrb
out
xor
sub
fdivl
out
adcw
aaa
push
orb
pusha
dec
or
cmp
repnz
jle,pt
mov
push
adc
lock
ficoms
mov
mov
flds
nop
xchg
push
jp
mov
in
sub
imul
dec
out
mov
add
es
adc
pop
jmp
xor
out
sti
push
loop
pop
mov
push
iret
jbe
shlb
insb
jg
add
or
fdivrl
out
mov
add
jbe
test
insb
mov
jle
jg
stos
mov
adc
mov
mov
fmulp
mov
mov
push
repz
sub
jg
cmp
out
xchg
add
cmpsl
fbstp
lret
mov
sub
test
adc
lods
jb
aad
cli
xor
in
outsb
adcb
mov
mov
sub
sub
inc
sbb
lods
mov
adc
push
dec
cs
enter
fldt
xchg
sbbl
lods
push
mov
cli
outsb
sub
push
jmp
xchg
or
inc
mov
sbb
push
f2xm1
cwtl
or
dec
and
adc
sbb
pushf
xor
or
ret
mov
mov
popa
xchg
movsb
push
mov
out
jb
test
outsb
in
cmp
out
jl
ljmp
xor
fsubr
jnp
mov
ds
pop
daa
push
int
fmulp
pop
mov
dec
int3
iret
cmp
fst
xlat
pop
call
cltd
repnz
pop
inc
das
jle
xor
inc
push
inc
ret
mov
dec
hlt
nop
mov
mov
cmp
mov
cmp
and
mov
aad
outsb
es
aam
cmp
rorb
repnz
call
mov
mov
xor
lods
bound
or
pop
ficomps
xchg
xchg
jno
test
lods
mov
inc
test
into
lock
mov
in
inc
aaa
mov
push
jge
aas
and
mov
sub
adc
mov
or
aam
movsl
mov
jnp
mov
into
or
outsb
scas
mov
out
nop
xchg
gs
neg
mov
mov
adc
lods
repz
or
cmp
cli
stos
enter
push
sbb
aaa
pop
mov
xor
xchg
xor
and
inc
sbb
pop
mov
jnp
push
into
add
sbb
jg
hlt
pop
orb
js
push
das
insl
xlat
daa
push
push
sbb
mulb
in
or
ret
rcll
adc
cmp
mov
dec
mov
imul
xor
fidivl
xchg
push
xor
mov
adc
pcmpgtw
sbb
sub
mov
sahf
xchg
popa
or
jb
dec
ss
jns
adc
rcl
sbb
and
adc
cmp
out
cltd
xchg
clc
lret
mov
jle
inc
cmp
push
int3
mov
xchg
fwait
pop
dec
dec
or
rcrl
mov
cld
shlb
mov
xchg
out
mov
sbb
jns
push
mov
outsb
int3
or
popa
std
jns
jle
rol
dec
insl
dec
or
xchg
daa
fcomi
stc
push
jle
jmp
movb
cs
repz
adc
and
jne
hlt
jne
pop
adc
test
jbe
decl
push
scas
int3
cmpsl
or
mov
pmaddwd
cmp
push
stos
sti
jnp
clc
clc
cmp
pop
cmp
fmull
xlat
push
cli
arpl
insl
fwait
adc
sub
xchg
frstor
jb
mov
sbb
mov
pop
das
or
loopne
pop
negl
test
or
insl
out
subl
jae
jg
outsl
fs
outsl
pop
xchg
inc
fildll
loopne
xchg
jae
popf
es
sbb
jmp
test
xor
loop
arpl
or
adc
push
or
push
mov
imul
lcall
inc
rcrb
imul
cmp
lds
in
jg
xorl
dec
add
aam
sub
fsts
rep
in
xchg
and
inc
repz
xor
xlat
push
gs
push
pop
jbe
ret
imul
pop
aas
je
jp
stc
subl
push
inc
jo
testb
adc
push
arpl
xorl
call
out
push
adc
pushf
inc
sbb
iret
fsubrl
mov
sahf
xchg
es
sub
adc
test
dec
and
adc
mov
dec
ja
jg
daa
mov
add
cmp
rclb
test
xor
mov
xchg
mov
sbbb
dec
cmp
jnp
arpl
lds
aad
lea
mov
push
sub
aas
pop
pop
mov
xor
pop
add
dec
sbb
or
mov
mov
aad
clc
jae
aas
fs
xchg
dec
aas
iret
sub
jns
sbb
lret
cltd
cli
pop
sub
cmp
int3
xor
xor
lret
out
ret
jl
mov
bound
aam
nop
jle
outsb
insb
push
xchg
mov
push
lcall
and
sub
cmp
loop
fwait
test
and
test
dec
jbe
addr16
adc
ret
lret
mov
ljmp
xchg
cmpsl
add
pop
test
xchg
cmp
sbb
in
shlb
xor
and
bound
inc
fsubs
xorl
sub
cwtl
aaa
out
in
mov
jne
pop
mov
andl
dec
jmp
jge
ss
and
in
inc
add
xchg
stc
das
cmpsb
xchg
or
xor
mov
stc
jp
hlt
ret
mov
dec
or
and
nop
xor
dec
ja
mov
sbb
cmp
sbb
sti
in
push
mov
imul
stc
fcmovbe
lcall
xchg
dec
mov
cs
sbbb
mov
insl
in
stos
dec
mov
jle
ss
aam
push
or
mov
scas
push
outsl
mov
cmp
jmp
enter
lret
sub
cmc
or
dec
daa
out
or
inc
xor
mov
jg
fsubrp
inc
loope
fwait
in
mov
cld
and
mov
and
cmp
and
cs
push
stos
je
sbb
push
pop
dec
fisttpll
gs
sub
mov
sub
xchg
mov
test
fcmovnbe
sbbb
movl
push
ficoml
xchg
in
call
mov
and
paddsb
insl
and
and
lret
ljmp
or
cmc
xchg
mov
pushf
add
sbb
icebp
pop
adc
cmpsl
or
add
pushf
mov
mov
or
mov
out
push
pop
lahf
sub
aaa
lock
int
negb
imul
subl
xlat
fs
iret
dec
and
aad
lods
or
icebp
mov
test
xchg
jo
sahf
shll
push
xchg
adc
cs
lret
mov
cli
mov
push
jns
cmp
push
aam
mov
outsb
adc
push
aas
orl
inc
push
push
cmp
test
add
pop
or
jbe
stos
pushf
das
ss
mov
lock
mov
pop
sub
adc
and
push
repz
addr16
xchg
mov
arpl
mov
ljmp
sub
sub
fbld
and
inc
xor
mov
shrl
icebp
sbb
adc
jae
nop
lcall
sub
aas
lret
das
cmpsb
popa
or
cmp
adc
fidivl
ret
iret
fidivs
inc
adc
mov
in
sti
jno
mov
pop
mov
outsl
sbb
xchg
mov
adc
sbb
sub
ret
adcl
or
jmp
and
or
push
push
add
or
cs
dec
popa
dec
leave
push
rcrb
mov
sbb
sub
push
xlat
clc
popf
mov
popa
nop
jmp
insl
push
inc
mov
push
dec
pop
insb
xor
mov
xor
inc
and
jge
push
in
imul
xchg
repnz
push
pop
cmp
aam
xchg
xchg
push
or
hlt
in
jno
insl
pop
sub
pusha
insb
pop
loopne
into
sarl
pop
sub
inc
daa
clc
aas
aam
pop
mov
mov
ret
cmc
adc
lret
cmp
test
push
and
fbstp
js
mov
pusha
push
add
jno
cmpsl
adc
sbb
push
js
loope
xchg
je
mov
enter
cmp
inc
dec
inc
mov
test
adc
adc
mov
in
and
in
andb
fs
pop
push
mov
dec
pop
sbb
roll
scas
aam
add
aad
scas
add
mov
stos
aad
inc
sub
negl
dec
cs
adcb
lds
mov
push
sbb
pop
sub
and
jecxz
mov
fmull
sahf
mov
pop
les
jnp
xlat
jo
fimuls
int3
sbb
cmp
fs
jmp
call
jb
push
leave
leave
mov
jmp
jg
cmp
cld
aad
hlt
or
fs
jo
mov
arpl
mov
add
not
dec
add
outsl
jo
lds
jne
adc
cmp
dec
xor
insb
out
ljmp
rorb
mov
mov
pop
mov
jg
mov
icebp
movsl
cmp
xor
pusha
ss
adc
and
mov
cli
lret
sub
ljmp
icebp
cmp
mov
stos
pop
lods
pop
jg
int3
sbb
sub
inc
lret
mov
adc
mov
xchg
xor
inc
popa
push
push
mov
call
jns
dec
and
pusha
cmpsl
push
xor
fisttpll
sbb
add
pop
jb
xchg
rorb
bound
test
sbb
adc
mov
jnp
in
out
int3
cmp
stc
mov
mov
and
add
das
jp
adc
movsl
push
leave
frstor
xor
data16
out
lds
pusha
sub
push
dec
sub
rcl
out
lea
sbb
es
pop
or
fs
cmp
push
test
sub
pop
or
push
imul
sub
jbe
js
scas
inc
jl
xor
sub
nop
sub
mov
add
push
arpl
sub
mov
xor
rorl
ret
sub
repnz
adc
sar
cltd
cmp
dec
cmp
cli
xchg
xor
add
cmp
push
jmp
popa
adc
outsb
or
xchg
das
sbb
stos
xchg
pop
lds
sbb
stc
imul
mov
push
bound
lock
mov
ret
mov
cmpsl
shll
push
sub
daa
loop
sbb
pushf
call
jg
ds
dec
add
adc
xor
loope
arpl
adc
inc
push
flds
outsl
movsl
or
imul
dec
mov
inc
hlt
popf
or
int
jmp
jno
cmpsl
jge
mov
stos
adc
add
inc
push
push
inc
mov
xchg
xchg
test
cmc
repz
aad
lds
xor
adc
inc
push
push
inc
mov
xchg
xchg
test
cmc
repz
aad
lds
xor
and
bound
gs
push
push
inc
cmpsl
mov
movsb
mov
ljmp
xor
cmp
arpl
in
aad
mov
sub
jnp
cmp
sub
inc
jb
notb
inc
sub
cmpsb
inc
aam
ret
xor
ja
data16
pop
mov
dec
es
es
jbe
notw
inc
xchg
xchg
mov
cmpsb
sub
inc
out
fisubs
push
cwtl
push
cmpsb
ss
es
rol
mov
xchg
push
xchg
sbb
xor
testb
mov
mov
in
rclb
dec
loop
xor
daa
mov
cmp
xlat
jge
sbb
aaa
sub
popa
imul
mov
cmp
sar
and
mov
xchg
jmp
stc
stc
ds
aas
stc
ja
fistpll
notl
mulb
xlat
cltd
cmp
inc
arpl
jbe
data16
push
or
and
mov
addb
sub
sub
imul
movsl
stos
repz
mov
cmpsb
cli
ds
mov
ss
fsubrl
mov
cs
cltd
jl
arpl
dec
pushaw
pop
test
add
lods
fiadds
jecxz
jp
in
mov
movb
out
xchg
xchg
mov
cmpsb
xchg
push
testb
aam
cli
push
mov
dec
mov
mov
jbe
or
xchg
jecxz
icebp
arpl
inc
ds
xchg
sbb
movsl
dec
leave
pop
loop
out
mov
test
andb
je
jg
xor
push
test
negb
jne
repz
mov
cmp
sub
jp
es
cmpsb
push
push
testb
data16
push
mov
cmpsb
ss
es
jbe
data16
inc
xchg
xchg
mov
cmpsb
push
push
testb
data16
push
mov
cmpsb
ss
es
jbe
xor
mov
in
lea
les
pop
pushf
cmc
inc
cmp
push
push
sbb
mov
xchg
xchg
outsl
cmp
sbb
leave
fs
and
gs
and
idivl
std
jmp
test
dec
jnp
sbb
mov
dec
xlat
mov
das
das
jae
enter
mov
stos
and
ret
jg
or
push
sub
dec
dec
xor
sub
cmpsl
popa
in
jae
test
hlt
add
xchg
fwait
repnz
lahf
and
jae
hlt
xchg
sub
xor
mov
icebp
add
xorb
push
mov
inc
cmp
addr16
or
sub
outsb
pop
adc
sbb
gs
imul
in
les
cmp
and
or
and
shrb
fstps
scas
enter
add
xchg
in
mov
loope
sbb
out
in
inc
sub
movb
idiv
jg
xchg
cwtl
pop
sub
subb
cmp
ret
inc
popa
ljmp
or
mov
xchg
lds
and
leave
out
call
inc
sahf
jns
inc
or
inc
xchg
add
mov
push
inc
push
mov
lahf
dec
dec
or
mov
testl
adc
jmp
lock
and
xor
push
sub
mov
jle
jno
shll
xchg
aam
jnp
xchg
cld
hlt
xor
cmp
xor
shrb
popa
cmpsb
push
mov
arpl
mov
inc
in
shlb
dec
mov
cs
xchg
rcll
btc
ud1
repz
mov
xchg
mov
nop/reserved
in
lds
add
stc
xor
dec
add
mov
sbb
divl
cmp
movsl
adc
lods
pop
sub
loop
iret
icebp
pop
sub
jp
cmp
out
push
mull
mov
enter
jo
nop
pop
inc
adc
scas
adc
sets
fstps
rcl
arpl
sbb
mov
je
jge
or
jle
and
fucomi
in
sarb
xchg
popa
call
fmul
call
inc
sbb
mov
ror
add
leave
std
xchg
and
inc
test
pop
loope
sub
mov
jp
das
cmc
int3
pop
cld
pop
sarl
test
in
sbb
fsubl
cmp
or
xchg
lret
stc
cmp
fidivrl
jl
iret
test
arpl
outsb
outsb
rcrb
pop
xor
mov
mov
mov
cltd
std
push
shll
test
jbe
jo
xchg
fs
repz
inc
mov
add
into
subb
sbb
in
add
jo
xorl
scas
sub
mov
imulb
pop
cmp
xlat
cmpsb
addr16
and
sbb
jp
jg
adc
enter
decl
cmc
mov
aad
sub
mov
out
xor
dec
sub
mov
xor
cmc
sbb
push
sub
cwtl
dec
mov
push
add
push
xchg
inc
ja
mov
fmul
pop
scas
xor
je
or
pop
enter
sub
pop
xchg
sbb
sbb
in
sti
or
jo
loope
inc
pop
stos
outsl
sbb
jne
mov
push
cmpsl
add
fmull
xchg
sub
loope
jle
push
mov
and
mov
in
scas
idivl
mov
dec
dec
fildll
out
sbb
push
pop
cmp
outsw
into
dec
add
lods
mov
bound
and
or
push
sub
inc
xor
aam
sbbl
cmc
sbb
pop
cmp
into
sbb
test
push
push
push
pop
adcl
mov
iret
or
push
scas
stos
loopne
out
pop
add
cs
or
add
std
iret
test
pop
fs
cmpl
mov
imul
jnp
sbb
js
mov
xor
lods
aas
pop
mov
lods
ret
jo
arpl
sti
fiaddl
jmp
mov
mov
push
pop
sub
jecxz
imul
rol
out
jl
bound
sbb
mov
inc
testl
test
imul
sub
cwtl
mov
jnp
sub
inc
or
cld
and
shrl
popa
inc
loopne
and
mov
xchg
insb
mov
adc
xchg
xor
mov
mov
scas
daa
push
mov
das
jb
pop
xor
je
fimuls
xchg
mov
inc
xor
sub
dec
std
or
pop
pop
xor
insb
in
data16
clc
cmp
into
cmp
cmc
inc
dec
pop
clc
orl
sub
sti
rorl
paddusb
sbb
cmp
push
out
xor
dec
jecxz
in
loop
repnz
push
dec
and
scas
sub
outsl
insb
inc
popf
mov
mov
jb
fucom
push
int
or
mov
dec
enter
jl
lods
mov
cld
and
andl
add
int3
add
in
int3
ss
imul
or
adc
push
jge
mov
lret
nop
lea
adc
push
inc
push
mov
aad
popf
cld
pop
pusha
sub
into
xorl
and
call
pushf
in
icebp
sub
mov
mov
subb
loopne
arpl
aas
jecxz
pop
mov
or
shr
jae
jo
jmp
lret
out
sub
ret
mov
jge
pop
and
xor
and
jbe
xchg
in
xor
jl
mov
sarb
sub
add
jp
lock
pop
mov
lret
test
test
incl
aaa
mov
mov
ret
ret
jo
cld
xlat
push
mov
sub
popf
jae
xor
or
mov
out
dec
imul
shrb
mov
sbb
pop
fadds
dec
cltd
xor
sbb
aaa
mov
dec
sahf
icebp
xchg
jae
mov
jmp
xchg
dec
imul
pusha
cltd
fucom
adc
and
pop
stos
dec
and
or
out
test
xchg
push
cmp
pop
xchg
add
mov
in
aad
mov
fsubl
and
and
jne
popf
xchg
dec
repnz
jo
addl
stos
cmpsl
xchg
push
dec
sbb
and
mov
outsb
push
fcmovnb
inc
jcxz
xchg
mov
popa
pop
and
lea
add
lret
lods
cvttps2pi
lods
popa
shlb
cs
add
add
inc
xchg
jmp
cmpsb
mov
stos
fcomps
mov
adc
xchg
mov
push
rcll
rcrb
ja
push
fildl
pop
cwtl
adc
icebp
outsl
lds
xchg
sub
adc
adc
inc
imul
push
push
pop
cmpl
jnp
es
call
ret
mov
iret
xchg
ret
cmp
sbb
and
or
movsl
xor
xchg
repz
cs
mov
and
jmp
pop
inc
add
repnz
stc
push
push
scas
pop
add
and
or
jmp
sti
in
adc
iret
movsb
pop
int3
push
das
nop
mov
push
cmp
test
test
add
int3
xchg
out
out
das
push
test
addr16
movl
lods
mov
fstl
nop
inc
scas
inc
sbb
mov
or
jl
int
mov
test
sub
loope
lods
lods
push
mov
mov
loop
pusha
lret
mov
xlat
or
jge
xchg
and
sub
inc
pop
mov
dec
lret
sub
cmp
pop
jns
shll
xor
mov
sub
gs
icebp
add
fcoml
cmp
sbb
sbb
pop
push
testl
inc
decb
mov
sbb
mov
xchg
jb
jl
sti
dec
xchg
ret
aam
shrl
leave
mov
add
gs
push
pop
mov
rcrl
inc
mov
cmp
add
add
fnstcw
and
push
aad
in
ficoml
mov
enter
xchg
cmp
imul
mov
xchg
lahf
lret
loop
dec
icebp
lods
push
inc
shl
dec
xor
fprem1
inc
mov
mov
test
fnstenv
nop
push
or
jge
pushf
subl
int
sub
ljmp
inc
cmp
adc
sbbl
inc
dec
add
jae
out
cmpsl
scas
or
testb
or
stos
lea
imul
sub
clc
dec
jae
add
mov
aam
push
mov
leave
jo
addr16
in
sbb
in
pop
arpl
jg
sbb
mov
adc
dec
cmp
xchg
mov
jmp
dec
cmp
outsb
sbb
mov
add
jmp
je
adc
and
lock
dec
int
mov
push
cmp
loope
jb
clc
jmp
inc
sbb
or
loope
or
mov
or
aas
cmp
cwtl
imul
add
mov
fnstcw
adcl
pop
jg
add
push
mov
sub
mov
test
in
jb
adc
cmp
pop
dec
push
cltd
or
xchg
sub
sbb
xor
cwtl
je
pop
imul
ds
ss
adc
push
out
cmp
sub
pop
xor
mov
ds
jo
xor
je
cmp
xor
das
ret
test
push
xchg
hlt
sub
mov
lea
and
cs
daa
negl
sub
test
cwtl
mov
mov
pop
lods
popw
mov
cmc
bound
or
mov
add
aas
pop
aad
adc
sub
xlat
mov
jg
dec
jecxz
mov
rolb
gs
js
and
fsubl
fnstcw
dec
clc
andl
fdiv
dec
stc
sbb
mov
and
push
xchg
hlt
jg
jle
popa
insb
sbb
out
mov
mov
stos
inc
mov
lock
cmp
pop
into
jnp
inc
lret
rorl
sub
mov
inc
add
xchg
insb
dec
pop
out
in
dec
jmp
and
movsl
arpl
push
mov
imul
dec
jg
test
outsl
gs
movb
push
bsf
lods
fsubp
add
mov
inc
ds
cmp
sub
roll
inc
out
mov
scas
jl
iret
add
cmp
adc
dec
mov
fs
enter
test
adc
adc
add
jle
jecxz
fwait
sbb
test
mov
fsubl
leave
out
inc
mov
push
add
push
pop
in
sub
push
xchg
xor
and
push
push
cld
mov
xchg
xchg
fld1
enter
mov
rcr
jo
or
pusha
decb
sub
mov
add
cltd
sbb
je
call
mov
jne
test
jne
adc
jno
stc
push
daa
jb
dec
and
and
push
stos
adc
loope
add
mov
xor
lock
popa
mov
shll
mov
xor
cwtl
mov
dec
add
icebp
lock
add
rclb
fcomps
sub
sub
lcall
xor
adc
jmp
jl
psubsw
sbb
dec
push
sti
or
jecxz
pop
movsb
ljmp
icebp
and
sub
or
or
sarl
mov
xlat
sbb
xchg
mov
mov
xor
push
cmp
pop
push
adc
jecxz
jmp
sub
jl
das
mov
adc
jg
and
fisubs
push
cs
lret
adc
into
arpl
inc
mov
ficoml
sbb
sub
dec
pop
js
outsb
cli
and
cmp
lcall
inc
jnp
adc
sahf
test
or
push
fldenv
push
mov
pop
sub
add
mov
div
or
mov
pop
aas
lds
or
push
inc
aam
in
xor
sub
movsl
xor
jp
les
ss
pop
leave
pop
in
call
mov
lea
sbb
test
mov
clc
in
mov
div
inc
call
daa
imul
or
cld
fistl
mov
jle
imul
idivb
add
mov
popa
push
ret
push
in
mov
enter
test
mov
fisubrs
fimuls
or
xor
cmp
cmc
jb
addr16
test
das
jb
imul
and
push
dec
test
fld
in
dec
add
pushf
xor
push
inc
mov
std
arpl
mov
or
data16
cmpsl
inc
mov
cmpsl
xlat
push
and
mov
fxch
pop
sbb
jne
sub
push
subl
push
jg
shlb
cmpsl
out
subb
les
sub
test
jle
sub
add
add
into
insb
ficoms
xor
movsl
lret
adc
mov
ss
cli
or
xor
iret
aas
adc
mov
mov
popf
add
das
loope
add
lock
loop
pusha
cmp
dec
repnz
hlt
fwait
xchg
lock
test
inc
movsl
mov
cltd
fidivrl
pop
mov
mov
lods
enter
nop
pop
fwait
sub
add
or
or
cmp
iret
add
sub
jmp
je
dec
cmp
push
outsb
xor
push
xor
xchg
cld
sbb
mov
cwtl
pop
mov
addr16
dec
and
movsb
ljmp
xchg
add
sbb
sub
imul
stos
or
rorl
mov
inc
adc
sub
and
xor
xlat
sub
mov
scas
shlb
lods
mov
sbbl
fs
adcl
shr
stos
std
les
inc
fwait
movsl
pop
push
pop
mov
xchg
mov
and
xchg
imul
leave
andb
lret
mov
or
add
call
xor
out
mov
nop
pusha
inc
jo
jp
in
mov
int
xchg
xchg
js
xchg
jecxz
mov
dec
pop
and
xchg
add
idiv
test
insl
xchg
mov
mov
imul
insl
and
pop
xchg
dec
out
and
jmp
std
aas
dec
sub
scas
shll
aas
call
pop
xor
sbbl
add
adc
xor
andb
xor
pop
hlt
mov
test
inc
fimuls
sub
push
repz
pop
insl
lods
adc
mov
and
cli
lods
or
adc
aam
inc
cld
pop
cmp
dec
leave
and
inc
shlb
into
in
lahf
push
repz
ret
rcrb
mov
cli
pop
fisttpl
mov
push
lcall
shlb
in
or
sub
push
jo
ds
xchg
cmp
inc
leave
xor
adc
mov
fiaddl
in
lea
sar
fucomip
jo
adc
pop
mov
mov
je
pusha
add
sbb
pop
outsl
inc
add
cmp
mov
lea
popf
push
pop
pushf
jbe
pop
or
stos
aad
sbb
cmpsl
gs
push
lods
mov
mov
subl
aaa
dec
ret
daa
xchg
test
jb
lods
movsl
lods
int3
fsts
xchg
jmp
cmpl
sub
jo
iret
add
push
xchg
fsubrs
mov
lea
bound
pop
lea
xor
sbb
popfw
push
add
ret
pop
add
inc
mov
das
mov
add
push
and
cmp
ret
adc
or
mov
add
stc
arpl
xchg
dec
mov
movsb
pop
in
jmp
sbb
sbb
stos
iret
mov
cmp
or
lock
dec
cmpsb
adc
movsl
xor
mov
xchg
sbb
dec
sbb
sub
jae
cwtl
les
xlat
insb
pop
jne
pop
imul
in
icebp
stos
pop
jnp
out
addr16
add
test
int3
enter
ret
xchg
repnz
jbe
inc
xor
std
dec
jnp
movl
inc
xchg
aam
enter
cmpsb
push
insb
dec
rorl
cs
sub
loop
in
cmc
adc
fcom
iret
addr16
jmp
jmp
and
addl
dec
add
jge
dec
mov
sub
lea
jl
out
movhps
dec
cmc
sbb
jp
dec
fsub
imul
daa
testl
add
sbb
pop
cmpb
outsb
push
push
xor
ret
mov
ljmp
and
adc
mov
mov
pushf
sub
mov
add
push
test
cmp
add
stos
enter
in
mov
aas
stc
push
stos
es
or
in
mov
lods
adc
dec
in
test
sbb
loop
pop
movsb
and
movsb
cmp
shll
add
mov
lret
adc
daa
pop
les
pop
pop
jno
aaa
mov
mov
dec
jne
xchg
push
repnz
dec
adc
push
sub
ljmp
aas
cmp
lea
pusha
sbb
cmp
push
cmpsl
inc
fwait
scas
test
imulb
push
dec
fiadds
repz
in
inc
inc
in
cld
jb
out
pushf
jge
outsb
pop
xchg
pop
test
jae
mov
push
lea
adc
and
addl
mov
add
int3
shrb
dec
jns
loop
jmp
push
nop
sbb
fs
ja
sub
mov
inc
aam
mov
in
cmpsl
jb
pushw
loopne
cmp
ficoms
inc
outsl
jbe
and
and
dec
mov
sub
dec
mov
dec
jmp
lock
dec
add
add
ljmp
ljmp
daa
mov
push
cmp
push
inc
ret
push
pusha
and
fneni(8087
pop
in
in
dec
sub
jo
xor
clc
mov
mov
xchg
inc
sub
sbb
jae
mov
mov
lds
popa
mov
inc
jg
rorb
or
pop
ret
push
dec
orb
pop
dec
cmp
fcmovne
into
test
jbe
ret
push
push
and
xor
iret
push
out
repz
pop
xchg
rolb
xchg
test
hlt
mov
push
cmp
jle
stos
push
or
xlat
xchg
push
push
arpl
or
mov
adc
lds
push
movl
mov
inc
dec
xchg
pop
sahf
push
push
cs
imul
aam
push
in
filds
shll
in
aam
aad
pop
jno
push
loope
mov
jnp
mov
or
fdivr
loop
mov
insb
cmp
lods
lahf
imul
push
or
and
push
push
xor
lods
sahf
inc
and
jb
ds
scas
fisubrl
mov
sbb
or
lcall
mov
fimuls
js
ret
cmpsb
scas
adc
ss
lock
cld
add
cmp
push
into
adc
dec
jb
lea
sahf
adc
test
fdivrs
outsl
fildll
xchg
icebp
dec
sbb
xor
movsb
cmp
mov
sti
adc
push
xchg
and
cmp
mov
stos
popa
xchg
mov
sbb
jg
dec
movsl
mov
jge
imul
add
loope
and
xchg
leave
mov
shlb
int
in
hlt
sub
cli
xchg
xor
jbe
mov
mov
rorb
addr16
inc
shlb
push
mov
mov
fiaddl
mov
stos
test
add
xchg
sub
gs
or
sbb
jo
popfw
mov
xchg
outsl
mov
popa
xchg
xchg
incb
adc
jns
aad
inc
push
cmp
dec
fdivrp
enter
ja
divl
jg
daa
rolb
xor
lds
lea
mov
and
sarl
fistps
adcl
lods
xor
sub
xchg
xchg
dec
sub
mov
adc
inc
push
lahf
xchg
sti
bound
mov
mov
mov
dec
mov
mov
loopne
subl
mov
loope
adc
dec
in
mov
cmp
ljmp
aas
push
mov
cmp
mov
fcmovbe
xchg
sbb
inc
mov
add
xchg
xor
out
xchg
xchg
mov
cmpsb
push
push
testb
data16
push
mov
cmpsb
ss
es
jbe
data16
inc
xchg
xchg
mov
cmpsb
push
push
testb
data16
push
mov
cmpsb
ss
es
jb
push
xchg
xchg
adc
loop
iretw
push
mov
cmpsb
ss
daa
xlat
xchg
movl
mov
cmpsb
push
or
data16
into
mov
leave
out
fsin
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
jle
repz
insl
cmp
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
and
add
add
pusha
add
add
add
jo
pop
add
add
mov
movl
adc
and
movl
test
lods
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
mov
add
stos
add
add
add
sub
addl
add
add
add
add
xor
xchg
add
add
cmpsb
add
dec
add
add
add
add
add
add
fildl
daa
add
add
add
add
stos
add
add
add
add
add
mov
add
dec
add
xchg
add
add
inc
add
cmpsb
add
add
add
add
out
add
add
push
fwait
add
add
popf
add
add
add
ja
dec
add
add
add
add
dec
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
or
repz
add
add
add
lods
add
imul
add
je
popa
add
movsl
add
add
add
add
add
mov
sti
add
adc
add
dec
add
dec
add
add
add
add
add
add
add
pop
add
add
incb
fildl
rolb
mov
add
add
add
add
add
add
xchg
add
add
add
add
add
add
or
cmp
add
add
add
jbe
inc
add
add
add
mov
jmp
sub
inc
add
dec
add
add
add
add
add
xchg
add
add
add
or
popf
add
add
int3
add
int3
add
test
jb
adc
adc
lahf
add
add
add
add
add
add
sub
sbb
add
add
add
add
sub
sbb
adc
fadds
lret
add
add
add
add
push
add
add
add
add
lods
add
add
inc
add
mov
push
add
int3
add
insl
add
incb
jecxz
sub
add
dec
add
inc
add
mov
xor
jle
es
or
pop
add
add
add
add
dec
add
sbb
in
add
add
add
add
add
add
jmp
add
add
add
sti
add
insl
add
add
add
daa
add
add
jmp
add
cmp
add
add
add
add
add
add
add
push
add
add
fiaddl
dec
add
add
add
dec
add
add
add
inc
add
add
cmp
dec
xchg
popf
out
dec
or
add
fisubl
sub
adc
fcmovnbe
sbb
jno
jge
cld
cltd
sahf
popf
xchg
es
jg
shrb
call
shll
flds
repz
push
pop
mov
add
repnz
sbb
jp
jecxz
or
movl
into
mov
dec
xchg
lds
inc
sub
push
cmp
into
or
insb
push
ja
fwait
xor
pop
lret
lds
xchg
inc
fldt
into
add
shlb
dec
cmpsl
pop
lock
xchg
inc
and
or
mov
jg
dec
fincstp
das
push
jo
sahf
push
sahf
in
adcl
mov
jle
xor
ljmp
or
inc
pop
and
dec
jg
inc
ret
lea
add
stc
jno
push
mov
add
sub
aam
pop
jns
push
fwait
fwait
insb
mov
test
ljmp
loop
lcall
dec
xchg
cmp
push
jns
arpl
mov
cli
sbb
mov
dec
xchg
and
or
shlb
pop
cmpsl
and
mov
or
jo
cmp
sub
dec
jne
jae
xlat
inc
negb
add
add
xchg
jbe
inc
jle
outsl
mov
add
pop
fdivl
loope
dec
mov
jle
jle
mov
mov
dec
cs
mov
xchg
fidivl
xchg
dec
jge
mov
movsl
and
in
adcl
ret
sub
push
movsl
rolb
out
or
call
mov
sbb
pop
pop
sti
sahf
test
fs
mov
pop
sbb
popl
dec
xorb
adc
enter
fnsave
fisttpll
insb
pop
xchg
ret
in
jne
notb
lods
push
lahf
pusha
xor
subb
push
mov
int
mov
dec
cmp
adcl
icebp
sub
cld
nop
and
dec
loop
lods
aam
scas
scas
push
pop
push
mov
mov
lcall
mov
fnstcw
arpl
inc
push
gs
xchg
jbe
bound
int
add
pop
xchg
jecxz
aas
sbbb
lret
push
dec
test
adc
cmc
fldenv
jb
cmc
sbb
pop
pop
aaa
int
into
in
daa
or
repz
mov
cwtl
or
stos
cs
sahf
into
mov
mov
mov
xchg
fadds
push
fs
adc
and
mov
icebp
div
pushf
push
xor
cmpsb
xchg
jecxz
cld
mov
out
inc
in
push
mov
loop
int3
fnsave
cli
push
push
inc
sahf
cmp
mov
mov
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
