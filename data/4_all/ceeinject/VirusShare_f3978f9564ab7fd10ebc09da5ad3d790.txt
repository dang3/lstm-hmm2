push
mov
sub
lea
push
push
push
push
push
push
call
mov
push
push
lea
push
push
call
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
movl
movl
movl
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsbl
mov
imul
mov
mov
imul
mov
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
shl
imul
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
shl
imul
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
test
je
mov
push
call
add
cmp
je
mov
add
mov
cmpl
jl
jmp
jmp
jmp
cmpl
jl
mov
push
call
add
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
mov
lea
mov
movl
mov
test
je
mov
add
mov
mov
mov
mov
mov
push
call
add
mov
add
mov
mov
add
mov
cmpl
jl
jmp
jmp
mov
add
movb
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
call
mov
mov
push
call
add
mov
mov
mov
mov
push
mov
push
mov
push
call
add
movl
jmp
mov
add
mov
mov
xor
divl
cmp
jae
mov
imul
add
push
mov
push
call
add
jmp
mov
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
lea
push
call
push
call
push
push
call
call
mov
mov
xor
mov
lea
mov
mov
test
je
mov
cmp
jne
mov
jmp
mov
add
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
call
mov
push
mov
push
call
mov
push
push
call
call
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
call
mov
mov
sub
mov
cmpl
je
mov
push
call
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
push
mov
mov
mov
lea
push
mov
push
call
add
mov
push
mov
mov
add
mov
lea
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
mov
mov
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
push
mov
mov
add
push
mov
push
call
add
mov
push
mov
mov
add
add
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
lea
push
call
lea
push
lea
push
push
push
push
push
push
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
push
mov
push
call
mov
push
push
mov
mov
push
mov
push
mov
push
call
push
mov
push
call
mov
push
mov
mov
push
mov
push
mov
push
mov
push
call
movl
jmp
mov
add
mov
mov
movzwl
cmp
jge
mov
mov
mov
lea
mov
imul
add
mov
push
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
jmp
movl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
push
mov
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
mov
push
mov
push
call
mov
push
push
mov
push
call
lea
push
mov
push
call
push
push
lea
push
mov
add
push
mov
push
call
mov
add
mov
lea
push
mov
push
call
mov
push
call
xor
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
push
mov
push
call
mov
call
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
xor
mov
pop
ret
int3
int3
int3
push
mov
sub
call
call
call
mov
mov
push
call
add
mov
mov
push
call
mov
mov
mov
push
call
add
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
call
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
push
call
add
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
movsbl
sub
mov
mov
and
mov
mov
sar
mov
movsbl
mov
and
neg
sbb
neg
mov
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
mov
movsbl
add
mov
xor
cmpl
setge
sub
and
add
cmp
jge
mov
mov
jmp
mov
sub
mov
mov
mov
mov
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
movsbl
movsbl
test
je
mov
cltd
mov
idiv
mov
mov
mov
lea
mov
cltd
mov
idiv
mov
mov
sar
movsbl
or
mov
cltd
mov
idiv
mov
mov
lea
mov
jmp
jmp
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
add
mov
push
call
add
mov
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
lea
push
mov
push
mov
push
call
add
mov
shl
mov
shr
or
and
mov
shr
mov
shl
or
and
or
mov
mov
shl
mov
shr
or
and
mov
shr
mov
shl
or
and
or
mov
mov
add
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
sub
mov
mov
push
mov
push
mov
push
call
add
xor
mov
mov
shl
mov
shr
or
and
mov
shr
mov
shl
or
and
or
mov
mov
shl
mov
shr
or
and
mov
shr
mov
shl
or
and
or
mov
mov
push
mov
push
lea
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
push
call
add
mov
mov
movl
jmp
mov
add
mov
mov
add
mov
cmpl
jge
mov
mov
mov
shl
mov
lea
mov
movsbl
sar
and
lea
mov
mov
add
shl
mov
lea
mov
movsbl
and
lea
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
push
call
add
mov
mov
movl
jmp
mov
add
mov
mov
add
mov
cmpl
jge
mov
mov
mov
shl
mov
lea
mov
movsbl
sar
and
lea
mov
mov
add
shl
mov
lea
mov
movsbl
and
lea
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movsbl
mov
movsbl
or
mov
movsbl
or
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
mov
shl
mov
and
neg
sbb
neg
or
mov
mov
add
mov
mov
movsbl
xor
and
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
and
shl
or
mov
mov
movsbl
xor
and
mov
mov
or
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
add
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
mov
movsbl
sub
mov
mov
sar
cmp
je
jmp
mov
and
mov
and
jne
jmp
mov
and
mov
mov
shl
mov
lea
mov
lea
mov
sar
movsbl
mov
or
mov
sar
mov
shl
mov
lea
mov
lea
mov
jmp
jmp
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
add
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
mov
movsbl
sub
mov
mov
sar
cmp
je
jmp
mov
and
mov
and
jne
jmp
mov
and
mov
mov
shl
mov
lea
mov
lea
mov
sar
movsbl
mov
or
mov
sar
mov
shl
mov
lea
mov
lea
mov
jmp
jmp
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
mov
movsbl
sub
cmp
jne
mov
mov
mov
jmp
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
mov
and
neg
sbb
and
or
mov
sar
and
or
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
shl
mov
movsbl
mov
mov
sar
and
je
mov
mov
lea
movsbl
mov
sub
mov
mov
shl
or
mov
jmp
mov
shl
mov
lea
mov
mov
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
jmp
jmp
push
push
push
mov
call
movl
mov
pop
ret
movl
jmp
push
mov
movl
call
testb
je
push
call
pop
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
push
mov
sub
jmp
pushl
call
test
pop
je
pushl
call
test
pop
je
leave
ret
testb
mov
jne
orl
mov
call
push
call
pop
push
lea
call
push
lea
push
movl
call
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
cwtl
cs
add
cs
add
cs
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
imul
add
inc
add
inc
add
inc
add
inc
add
das
inc
add
das
inc
add
das
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
and
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
les
inc
add
xor
aam
inc
add
xor
in
inc
add
xor
hlt
xor
pop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
xor
cmp
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpw
jne
mov
cmpl
jne
cmpw
jne
cmpl
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
andl
lea
push
call
movl
mov
push
push
mov
call
push
call
mov
test
jne
push
call
pop
jmp
mov
push
call
push
push
test
jne
call
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
and
call
push
call
mov
cmp
je
or
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
call
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmpl
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
andl
andl
movl
ret
push
mov
push
push
mov
movl
mov
test
je
push
call
mov
inc
push
call
test
pop
pop
mov
je
pushl
push
push
call
add
jmp
andl
movl
mov
pop
pop
pop
ret
mov
mov
movl
mov
andl
mov
ret
push
mov
push
mov
movl
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
test
pop
pop
mov
je
pushl
push
push
call
add
jmp
andl
jmp
mov
pop
mov
pop
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
test
mov
je
test
je
push
call
mov
inc
push
call
test
pop
pop
mov
je
pushl
push
push
call
add
jmp
andl
jmp
mov
mov
pop
pop
pop
ret
cmpl
movl
je
pushl
call
pop
ret
mov
test
jne
mov
ret
push
lea
push
mov
call
movl
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
movl
jmp
push
lea
push
mov
call
movl
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
movl
jmp
push
pushl
mov
call
movl
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
movl
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
movl
call
testb
je
push
call
pop
mov
pop
ret
pushl
push
call
pop
pop
ret
push
movl
call
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
pushl
push
call
pop
pop
ret
push
call
pop
ret
mov
add
push
add
push
call
neg
pop
sbb
pop
inc
ret
mov
add
push
add
push
call
neg
pop
sbb
pop
neg
ret
mov
add
push
add
push
call
pop
pop
xor
test
setg
mov
ret
lea
ret
mov
movl
ret
mov
ret
push
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
cmp
pop
pop
jb
mov
sub
lea
cmp
jb
push
call
mov
cmp
pop
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
test
pop
pop
jne
lea
cmp
jb
push
pushl
call
test
pop
pop
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
push
call
mov
push
call
add
test
mov
mov
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
mov
test
jne
inc
push
push
pushl
call
ret
cmp
push
mov
jne
push
call
test
pop
jne
test
jne
inc
add
and
push
push
pushl
call
pop
ret
push
mov
cmp
ja
push
mov
push
push
xor
cmp
mov
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
cmp
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
cmp
pop
jne
cmp
jne
xor
inc
add
and
push
push
pushl
call
mov
test
jne
cmp
push
pop
je
push
call
test
pop
jne
jmp
call
mov
call
mov
pop
mov
pop
pop
pop
ret
push
call
pop
call
movl
xor
pop
ret
mov
mov
ret
push
push
call
pushl
call
pushl
mov
call
push
mov
call
add
mov
pop
ret
push
call
pop
ret
pushl
call
pop
ret
pushl
call
test
pop
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
test
pop
mov
pop
je
testb
je
movl
lea
push
pushl
pushl
pushl
call
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
andl
call
mov
xor
ret
mov
neg
sbb
and
mov
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
ret
push
call
xor
ret
call
pushl
call
pushl
call
push
call
add
ret
push
call
test
je
push
push
call
test
je
pushl
call
ret
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
cmpl
je
push
call
test
pop
je
pushl
call
pop
call
push
push
call
test
pop
pop
jne
push
push
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
test
pop
je
push
push
push
call
xor
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
je
mov
mov
mov
cmp
jne
pushl
call
mov
pushl
call
pop
pop
mov
mov
cmp
je
sub
mov
cmp
jb
cmpl
je
mov
call
cmp
je
push
call
pop
call
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
call
add
pop
ret
push
push
mov
push
push
xor
xor
cmp
je
inc
cmp
jb
cmp
jae
push
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
cmp
pop
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
pop
pop
ret
xor
mov
cmp
je
inc
cmp
jb
xor
ret
mov
ret
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
test
mov
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
push
inc
push
call
mov
cmp
pop
pop
mov
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
mov
mov
ret
push
mov
push
mov
push
xor
cmp
push
mov
mov
mov
movl
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
test
pop
je
incl
cmpl
je
mov
mov
incl
mov
inc
test
mov
mov
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
movsbl
push
je
call
test
pop
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
test
pop
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
test
pop
pop
je
andl
incl
leave
ret
push
mov
sub
push
xor
cmp
push
push
jne
call
push
mov
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
cmp
pop
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
push
push
xor
lea
inc
xor
push
mov
mov
call
cmpl
pop
jle
mov
jmp
push
push
call
mov
add
cmp
movzwl
lea
jbe
push
push
call
test
pop
pop
je
movzwl
inc
add
cmp
jb
jmp
andl
mov
pop
pop
pop
leave
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
push
call
pop
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
call
ret
pushl
pushl
call
call
ret
mov
ret
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
pushl
pushl
pushl
call
pop
call
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
mov
movl
xor
inc
mov
test
je
call
test
je
push
pushl
mov
call
mov
push
pushl
call
mov
mov
movb
movb
mov
mov
push
call
push
call
pop
andl
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
push
call
pop
ret
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
cmpl
je
push
mov
test
jne
push
pushl
mov
call
test
je
pushl
pushl
call
call
mov
pop
push
pushl
pushl
call
pop
call
push
call
pop
mov
cmp
je
push
push
call
ret
jmp
jmp
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
cmp
mov
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
cmp
mov
je
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
mov
push
push
push
lea
xor
push
mov
mov
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
pop
jne
cmpl
jb
xor
inc
leave
ret
push
pop
leave
ret
xor
cmp
push
sete
push
push
call
test
mov
jne
xor
ret
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
andl
jmp
xor
inc
ret
push
xor
cmpl
jne
push
mov
push
xor
cmp
jle
push
mov
add
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pushl
push
pushl
call
pop
pop
pushl
call
mov
pop
ret
mov
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
xor
push
mov
cmp
movb
movl
lea
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
cmp
mov
lea
mov
mov
mov
je
lea
mov
test
lea
mov
mov
je
mov
call
test
movb
jl
jg
mov
cmp
mov
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
pop
add
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
jmp
cmpl
je
push
push
mov
mov
call
jmp
push
mov
sub
mov
andl
andl
push
push
mov
cmp
mov
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
ret
mov
ret
add
push
pop
cmp
sbb
and
add
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
push
call
mov
push
mov
call
pop
mov
call
mov
pop
ret
call
test
jne
push
pop
ret
call
mov
mov
xor
ret
push
mov
xor
cmp
jne
push
push
push
push
push
call
add
push
pop
pop
ret
call
mov
mov
xor
pop
ret
call
test
jne
push
pop
ret
call
mov
mov
xor
ret
push
mov
xor
cmp
jne
push
push
push
push
push
call
add
push
pop
pop
ret
call
mov
mov
xor
pop
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
cmpl
jne
xor
ret
mov
sub
neg
sbb
not
and
ret
mov
lea
cmp
push
jbe
call
xor
push
push
push
push
push
movl
call
add
push
pop
pop
ret
xor
cmp
jne
call
jmp
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
mov
sub
push
xor
cmp
jne
or
jmp
cmp
push
mov
push
mov
mov
jle
mov
cmp
je
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
xor
cmp
pop
lea
mov
mov
mov
rep
jl
cmp
je
mov
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
push
xor
cmp
jne
xor
pop
ret
mov
cmp
jne
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
jmp
mov
xor
inc
pop
ret
push
mov
cmp
je
cmp
jne
cmp
ja
push
call
test
pop
jne
call
push
push
push
push
push
movl
call
add
jmp
mov
movl
xor
inc
jmp
call
movl
xor
pop
pop
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
pushl
call
pop
andl
movl
call
call
ret
mov
jmp
push
call
pop
ret
push
push
call
mov
xor
cmp
jne
push
push
push
push
lea
push
push
call
add
mov
cmp
jne
xor
jmp
push
call
pop
mov
jmp
dec
mov
add
cmpb
jne
mov
cmp
ja
dec
push
call
pop
mov
cmp
jne
push
call
pop
mov
test
je
add
push
call
pop
mov
test
je
pushl
push
push
call
add
xor
cmp
je
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
jmp
push
call
pop
pushl
call
pop
movl
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
pushl
call
pop
andl
movl
call
call
ret
mov
jmp
push
call
pop
ret
push
mov
cmpw
jne
movl
pushl
push
push
pushl
pushl
pushl
call
add
pop
ret
push
push
call
mov
xor
cmp
jne
push
push
lea
push
push
call
add
mov
cmp
jne
xor
jmp
push
call
pop
mov
jmp
dec
mov
add
cmpb
jne
mov
cmp
ja
dec
push
call
pop
mov
cmp
jne
push
call
pop
mov
test
je
add
push
call
pop
mov
test
je
pushl
push
push
call
add
xor
cmp
je
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
jmp
push
call
pop
pushl
call
pop
movl
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
pushl
call
push
call
pop
pop
mov
jmp
movl
call
call
ret
push
call
pop
ret
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
push
call
add
cmp
jbe
or
mov
pop
ret
mov
mov
mov
ret
push
push
xor
pushl
call
mov
test
pop
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
call
mov
test
pop
pop
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
pushl
call
mov
add
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
call
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
call
mov
test
je
call
jmp
push
push
call
pushl
call
pop
test
je
andl
call
jmp
xor
inc
ret
mov
movl
jmp
push
call
pop
mov
ret
mov
mov
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
mov
lea
add
movl
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
add
leave
ret
push
pushl
call
pushl
mov
call
pop
pop
mov
mov
pop
ret
pushl
call
pop
ret
push
mov
pop
jmp
push
mov
pushl
call
test
pop
je
pop
jmp
push
call
pop
pop
jmp
xor
push
push
push
push
push
call
add
ret
push
mov
pop
jmp
push
push
xor
lea
pushl
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmpw
je
xor
ret
mov
add
cmpl
jne
xor
cmpw
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
push
push
call
xor
push
call
pop
mov
cmp
jne
mov
pushl
call
mov
movl
jmp
mov
pushl
call
mov
movl
pop
cmp
je
cmp
je
call
mov
movl
call
cmp
jne
xor
jmp
xor
push
call
pop
ret
cmpl
je
pushl
call
pop
xor
inc
call
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
pushl
call
pop
ret
call
add
ret
call
add
ret
push
push
call
andl
mov
mov
cmp
je
cmp
je
push
pop
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
call
mov
test
je
mov
cmp
jne
pushl
call
pop
mov
test
je
pushl
push
push
call
add
pushl
mov
call
pop
test
je
mov
mov
cmp
je
jmp
mov
add
mov
imul
add
cmp
jae
cmp
je
jmp
push
call
pop
andl
cmp
je
cmp
jne
cmpl
jne
push
push
call
xor
inc
cmp
jne
mov
jmp
call
mov
call
mov
movl
mov
mov
sub
je
sub
je
sub
je
sub
je
dec
jne
pushl
call
pop
mov
cmp
je
push
call
mov
jmp
pushl
call
pop
mov
cmp
je
push
call
mov
jmp
pushl
call
pop
mov
cmp
je
push
call
mov
jmp
pushl
call
pop
mov
cmp
je
push
call
mov
pop
movl
call
cmpl
jne
mov
mov
jmp
mov
push
call
pop
ret
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
call
movl
xor
push
push
push
push
push
call
add
or
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
push
push
push
pushl
call
mov
xor
cmp
pop
mov
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
cmp
push
mov
jne
push
call
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
push
call
mov
cmp
jne
call
mov
mov
call
push
call
push
push
push
push
push
mov
call
add
call
push
call
pop
jmp
push
call
pop
mov
call
push
push
mov
call
cmp
je
push
call
push
push
call
test
jne
call
movl
call
mov
jmp
xor
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
cmpl
push
mov
mov
jne
push
push
lea
mov
push
pushl
mov
pushl
push
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
pushl
call
add
cmp
mov
je
xor
inc
push
push
call
mov
cmp
pop
pop
je
push
pushl
mov
push
pushl
pushl
pushl
call
mov
add
cmp
je
push
push
call
cmp
pop
pop
mov
mov
jne
cmp
je
push
call
pop
or
mov
pop
pop
xor
pop
call
add
leave
ret
lea
push
push
push
push
call
add
test
je
push
push
push
push
push
call
add
cmp
je
push
call
pop
xor
jmp
cmp
jne
push
push
mov
push
pushl
pushl
push
call
add
test
je
mov
mov
movzbl
push
call
test
pop
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
jmp
mov
mov
ret
mov
mov
ret
pushl
call
xor
inc
ret
push
push
call
xor
mov
pushl
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmpl
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmpl
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
jb
orl
jmp
orl
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
pushl
call
mov
pushl
call
cmp
pop
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
movl
call
add
or
pop
ret
mov
mov
ret
mov
ret
mov
test
push
mov
movb
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
ret
cmpb
je
mov
andl
ret
mov
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
push
pushl
pushl
call
add
ret
push
push
pushl
push
call
add
ret
push
mov
sub
pushl
lea
call
mov
test
je
cmpl
jne
push
push
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
cmpb
je
mov
andl
xor
leave
ret
push
pushl
call
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
push
push
mov
mov
push
xor
lea
push
push
call
mov
mov
mov
xor
lea
stos
stos
stos
mov
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
lea
push
pushl
call
test
mov
je
xor
mov
inc
cmp
jb
mov
test
movb
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
add
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
push
mov
sub
push
xor
push
lea
call
cmp
mov
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
cmp
mov
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
lea
call
mov
cmpl
je
cmpb
mov
je
mov
andl
leave
ret
cmpb
je
mov
andl
xor
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
ret
mov
ret
push
push
push
mov
mov
xor
cmp
push
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
lea
pop
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
mov
pop
ret
push
mov
test
je
test
je
cmp
je
push
push
pop
mov
rep
andl
push
call
pop
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
test
pop
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
push
push
call
mov
mov
and
neg
sbb
inc
inc
mov
mov
cmp
je
xor
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
movl
call
add
or
jmp
and
jmp
or
mov
jmp
orl
mov
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
test
jne
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
mov
pushl
call
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pop
movl
call
mov
mov
mov
push
call
pop
call
ret
mov
push
call
pop
ret
jmp
push
push
call
call
mov
push
push
call
pop
pop
mov
mov
test
jne
call
movl
xor
jmp
call
call
mov
mov
mov
mov
push
call
pop
andl
pushl
call
pop
movl
call
pushl
call
mov
call
ret
mov
push
call
pop
ret
jmp
xor
ret
push
push
mov
xor
cmp
jle
push
lea
add
pushl
pushl
pushl
call
add
test
je
push
push
push
push
push
call
add
dec
jne
pop
pop
pop
ret
push
mov
push
push
push
mov
push
xor
push
push
call
mov
mov
add
test
jne
xor
jmp
cmp
jne
lea
cmp
je
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
push
push
mov
call
cmp
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
push
push
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
push
push
add
push
call
add
test
je
xor
push
push
push
push
push
call
add
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
pushl
pushl
call
add
xor
test
je
push
push
push
push
push
call
add
lea
cmp
je
push
push
push
pushl
pushl
call
add
lea
cmp
pop
pop
je
push
push
push
pushl
pushl
call
add
pop
ret
sub
push
xor
inc
push
mov
call
test
pop
mov
je
push
push
lea
movb
mov
lea
mov
lea
pushl
push
pushl
push
push
push
call
add
movl
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
pushl
pushl
call
test
pop
pop
je
andl
incl
mov
addl
shl
lea
mov
lea
pushl
push
pushl
push
push
push
call
add
cmpl
jl
xor
cmp
jne
mov
cmp
mov
je
push
call
test
jne
pushl
call
pop
mov
cmp
je
push
call
test
jne
pushl
call
pop
mov
mov
mov
mov
jmp
pushl
call
mov
cmp
mov
pop
je
push
call
test
jne
pushl
call
pop
mov
cmp
je
push
call
test
jne
pushl
call
pop
mov
mov
mov
pop
mov
mov
pop
pop
add
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
call
add
lea
mov
lea
lea
add
test
mov
mov
je
cmpl
je
cmpl
je
cmpb
jne
cmpb
jne
push
pushl
pushl
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
jmp
push
call
mov
cmp
pop
mov
jae
push
pushl
call
test
pop
pop
je
push
pushl
call
test
pop
pop
je
andl
lea
push
push
call
test
pop
pop
jne
lea
push
push
push
call
add
test
je
movzwl
mov
mov
lea
push
push
pushl
call
add
cmpb
je
mov
cmp
jb
mov
mov
inc
push
push
push
pushl
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
cmp
je
push
push
pushl
call
add
cmp
je
push
pushl
pushl
call
add
pushl
pushl
pushl
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
mov
pop
pop
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
push
push
mov
call
pushl
mov
lea
push
lea
push
push
lea
push
push
add
call
add
test
jne
xor
jmp
mov
shl
lea
pushl
lea
push
call
test
pop
pop
je
lea
push
call
add
push
mov
call
test
pop
pop
mov
je
mov
mov
mov
lea
add
imul
mov
mov
mov
lea
push
push
mov
lea
push
call
mov
lea
push
mov
mov
mov
add
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
mov
mov
add
mov
movzwl
mov
push
lea
push
pushl
call
add
cmpl
jne
mov
andl
mov
mov
mov
mov
mov
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmpl
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
push
call
add
test
je
xor
andw
inc
cmp
jb
push
pushl
lea
push
call
add
neg
sbb
inc
mov
jmp
andl
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
imul
push
call
test
pop
je
mov
pushl
mov
call
mov
pop
mov
mov
mov
mov
jmp
cmpl
je
mov
add
shl
lea
pushl
call
test
jne
pushl
call
pushl
call
andl
pop
pop
mov
mov
add
shl
movl
mov
mov
mov
pop
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
mov
push
push
xor
cmp
mov
push
mov
je
cmp
je
push
call
pop
jmp
shl
mov
jmp
cmp
movl
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
mov
push
push
call
mov
test
pop
pop
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
xor
cmp
pop
pop
jne
cmpb
jne
cmpl
jg
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
mov
lea
movb
call
test
pop
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
mov
jmp
xor
jmp
push
push
push
push
lea
push
push
call
add
cmp
je
lea
test
je
pushl
lea
push
call
test
pop
pop
je
push
lea
call
test
pop
jne
and
jmp
incl
inc
add
cmp
jle
xor
cmp
jne
cmp
je
call
mov
pop
pop
xor
pop
call
add
leave
ret
cmpl
push
push
ja
cmpl
je
xor
inc
push
push
call
mov
test
pop
pop
jne
call
movl
xor
pop
pop
ret
push
push
call
pop
pop
mov
test
jne
push
call
pop
jmp
push
push
call
test
pop
pop
mov
jne
pushl
call
push
call
pop
jmp
mov
mov
call
pushl
mov
mov
call
test
pop
jne
pushl
call
pushl
call
push
call
add
jmp
pushl
mov
pushl
call
test
pop
pop
je
pushl
call
pushl
call
pushl
call
push
call
add
xor
jmp
mov
mov
mov
mov
mov
jmp
jmp
push
push
call
xor
mov
cmpl
jbe
call
movl
push
push
push
push
push
call
add
xor
jmp
call
mov
mov
call
orl
mov
push
push
call
pop
pop
mov
mov
cmp
je
push
call
pop
movl
mov
mov
call
mov
call
pushl
mov
mov
call
pop
mov
cmp
je
cmp
je
push
pushl
call
pop
pop
test
je
movl
push
call
pop
movl
lea
mov
call
push
call
pop
testb
jne
testb
jne
mov
mov
call
push
mov
add
push
push
call
add
call
andl
call
jmp
mov
mov
xor
push
call
pop
ret
mov
push
call
pop
ret
jmp
push
call
push
call
pop
pop
movl
call
mov
call
ret
mov
andl
ret
cmp
jne
repz
jmp
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
clc
sahf
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
lret
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
add
lahf
inc
add
lahf
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
inc
add
mov
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
andb
add
mov
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
andl
ret
mov
mov
mov
mov
xor
mov
mov
mov
ret
push
mov
cmpl
je
jmp
mov
mov
pushl
mov
call
pop
mov
test
mov
jne
pop
ret
mov
mov
test
jne
xor
ret
cmp
jl
cmp
jg
movsbl
sub
inc
mov
ret
xor
jmp
test
je
cmp
jl
cmp
jg
movsbl
shl
inc
lea
mov
mov
cmp
jne
mov
inc
cmp
mov
je
or
ret
mov
push
push
push
push
mov
xor
cmpb
jne
inc
mov
mov
mov
cmp
jl
cmp
jle
cmp
jne
xor
inc
mov
movsbl
cmp
jg
je
test
je
cmp
jne
lea
cmpb
jne
mov
inc
mov
movsbl
add
cmp
ja
movzbl
jmp
inc
mov
jmp
movsbl
sub
mov
inc
or
test
mov
je
or
jmp
and
cmp
jge
test
mov
mov
mov
je
and
or
jmp
and
mov
and
je
cmp
je
cmp
je
mov
jmp
test
je
and
jmp
and
jmp
test
je
and
or
jmp
and
or
jmp
test
je
and
or
jmp
and
or
and
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
and
or
jmp
and
or
jmp
test
je
and
or
jmp
and
jmp
cmp
jle
cmp
jle
cmp
jne
and
or
jmp
inc
mov
mov
cmp
jl
cmp
jg
movsbl
lea
mov
call
or
jmp
mov
jmp
mov
jmp
or
jmp
sub
je
dec
je
dec
je
sub
jne
inc
mov
mov
movsbl
mov
or
sub
test
mov
mov
je
and
or
jmp
and
test
je
and
or
jmp
and
or
test
je
or
jmp
and
and
sub
je
dec
dec
je
dec
dec
jne
test
je
and
jmp
and
jmp
test
je
and
or
jmp
and
or
jmp
test
je
and
or
jmp
and
or
jmp
and
or
jmp
and
or
jmp
or
inc
mov
jmp
mov
cmp
jl
cmp
jg
inc
movsbl
mov
lea
and
cmp
ja
jmp
mov
test
je
and
or
jmp
and
test
je
and
or
jmp
and
or
jmp
mov
test
je
and
or
jmp
and
test
je
and
or
jmp
and
or
jmp
mov
test
je
and
or
jmp
and
test
je
and
jmp
and
jmp
and
or
jmp
and
or
jmp
and
or
jmp
and
or
jmp
and
or
jmp
and
or
jmp
cmp
jne
inc
mov
mov
jmp
xor
test
setne
add
pop
pop
pop
pop
ret
mov
std
mov
inc
add
inc
add
add
add
add
add
add
add
inc
add
cmpsb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
not
and
ret
mov
shr
not
and
ret
mov
shr
not
and
ret
mov
shr
not
and
ret
mov
shr
not
and
ret
mov
shr
not
and
ret
mov
and
xor
cmp
setne
mov
ret
mov
shr
not
and
ret
mov
shr
not
and
ret
mov
shr
not
and
ret
mov
and
ret
mov
and
ret
mov
and
ret
mov
shr
not
and
ret
mov
and
ret
mov
shr
not
and
ret
mov
not
test
mov
mov
jne
inc
inc
ret
push
push
mov
add
and
cmpl
mov
je
push
call
pop
jmp
test
ja
push
pop
mov
cmp
push
jae
mov
cmp
ja
push
push
mov
call
test
je
andl
jmp
xor
test
je
mov
test
je
mov
jmp
mov
sub
mov
mov
jmp
xor
jmp
sub
mov
mov
mov
lea
pop
pop
pop
ret
mov
andl
andl
ret
mov
mov
andl
mov
ret
mov
mov
mov
shl
sar
xor
push
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
pop
ret
mov
shl
sar
ret
andl
ret
mov
orl
ret
mov
shr
and
ret
orl
ret
mov
shr
and
ret
mov
shr
and
ret
orl
ret
mov
shr
and
ret
orl
ret
mov
shr
and
ret
orl
ret
mov
shr
and
ret
orl
ret
mov
push
mov
mov
shl
sar
je
cmp
jne
mov
mov
shl
sar
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
mov
pop
ret
xor
cmpl
sete
ret
mov
cmp
ja
mov
cmp
je
cmp
jg
mov
jmp
lea
jmp
lea
ret
mov
andl
movl
ret
mov
ret
mov
mov
test
je
mov
test
je
push
jmp
mov
mov
test
jne
mov
pop
jmp
mov
ret
mov
mov
andl
movl
mov
ret
xor
inc
ret
mov
ret
mov
test
je
cmpl
je
mov
mov
jmp
xor
ret
mov
ret
mov
mov
andl
test
movl
je
mov
shl
sar
cmp
je
cmp
jne
xor
mov
ret
mov
mov
andl
cmp
movl
mov
jne
push
pop
jmp
xor
mov
ret
mov
ret
cmpl
setne
dec
and
ret
xor
cmp
je
inc
inc
cmpb
jne
ret
cmpl
mov
je
mov
test
mov
je
inc
inc
decl
jne
mov
ret
cmpl
jne
xor
ret
mov
test
je
cmp
jne
inc
inc
decl
jne
movzbl
movzbl
sub
ret
push
mov
sub
xor
mov
and
and
push
lea
push
push
lea
push
pushl
mov
mov
call
mov
add
leave
ret
push
mov
sub
mov
and
and
push
xor
lea
push
push
lea
push
pushl
mov
mov
call
mov
add
leave
ret
pushl
mov
pushl
call
ret
cmpl
push
mov
je
push
push
mov
call
test
je
pushl
mov
call
jmp
xor
mov
neg
sbb
and
add
xor
and
xor
jmp
andl
andl
andl
mov
pop
ret
push
push
mov
cmp
mov
je
cmp
je
xor
jmp
mov
mov
xor
and
xor
push
push
mov
call
test
je
push
mov
call
jmp
xor
andl
test
mov
mov
jne
and
or
mov
pop
mov
pop
ret
mov
shl
sar
je
cmp
je
xor
ret
xor
inc
ret
cmpl
je
call
test
je
xor
ret
xor
inc
ret
call
test
jne
testb
je
inc
ret
xor
ret
call
test
jne
orl
ret
call
test
jne
testb
je
inc
ret
xor
ret
push
xor
call
test
jne
push
mov
jmp
mov
mov
call
mov
add
test
jne
pop
mov
pop
ret
push
push
xor
call
test
jne
mov
test
je
mov
mov
call
test
je
mov
mov
test
jne
test
je
mov
mov
pop
pop
jmp
pop
xor
pop
ret
push
mov
push
push
mov
call
test
jne
cmp
jne
call
mov
push
inc
push
mov
call
test
mov
je
jmp
mov
mov
push
mov
mov
mov
jmp
test
jle
mov
mov
call
mov
test
je
mov
sub
jns
mov
mov
push
pushl
mov
call
test
je
sub
add
mov
test
jne
mov
pop
jmp
cmpl
je
mov
movb
mov
pop
pop
pop
ret
mov
push
mov
mov
and
cmp
je
mov
call
test
jne
mov
shl
sar
xor
and
xor
mov
mov
pop
ret
push
push
mov
cmp
mov
je
cmp
je
mov
mov
shl
sar
je
cmp
jne
push
and
push
mov
mov
call
test
je
push
mov
call
jmp
xor
test
mov
jne
mov
and
or
mov
jmp
mov
andl
mov
and
cmp
je
mov
xor
and
xor
mov
pop
mov
pop
ret
push
mov
push
lea
call
push
lea
call
orl
mov
pop
ret
push
mov
cmpl
je
mov
call
test
jne
push
push
mov
call
test
je
pushl
mov
call
jmp
xor
test
je
incl
mov
mov
mov
pop
ret
push
push
push
push
mov
mov
push
mov
call
mov
test
je
push
push
mov
call
test
je
andl
mov
jmp
xor
push
mov
call
jmp
xor
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
mov
mov
movl
jne
cmp
je
xor
cmp
je
inc
cmp
jne
cmp
je
cmp
je
push
push
mov
call
test
mov
mov
je
push
push
mov
call
pop
pop
jmp
mov
mov
pop
mov
pop
pop
ret
mov
test
je
mov
mov
ret
xor
ret
mov
mov
cmp
jle
mov
mov
xor
cmp
je
cmp
je
cmp
je
push
pushl
mov
call
pop
pop
ret
mov
test
je
jmp
xor
ret
mov
test
je
jmp
xor
ret
mov
xor
cmp
je
cmp
je
cmp
je
jmp
ret
mov
mov
cmp
jle
mov
xor
cmpl
jne
cmp
je
cmp
je
push
pushl
mov
call
pop
pop
ret
push
mov
push
push
mov
call
lea
mov
call
mov
mov
mov
mov
xor
cmp
je
mov
dec
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
cmpb
pushl
jne
mov
incl
call
jmp
pushl
call
pop
pop
mov
pop
ret
pushl
call
mov
pop
ret
push
push
mov
call
test
mov
jne
cmp
je
cmp
je
push
push
mov
call
test
je
push
mov
call
mov
jmp
xor
test
je
mov
call
test
mov
je
push
mov
call
jmp
andl
cmpl
jne
mov
and
or
mov
jmp
push
call
pop
mov
pop
ret
push
mov
mov
mov
shl
sar
je
cmp
jne
cmpl
je
push
and
push
mov
mov
call
test
je
pushl
mov
call
jmp
xor
test
mov
jne
mov
and
or
mov
jmp
push
mov
call
mov
pop
ret
push
mov
mov
mov
shl
sar
cmp
je
cmp
je
push
xor
cmp
je
push
mov
call
jmp
push
mov
cmp
je
mov
cmp
je
sub
je
dec
push
mov
je
push
call
cmp
je
pushl
mov
push
call
jmp
xor
cmp
mov
jne
mov
and
or
jmp
push
call
cmp
je
mov
mov
movl
mov
jmp
and
or
mov
pop
pop
pop
ret
push
mov
andl
andl
cmpb
je
push
lea
push
call
mov
pop
ret
mov
push
mov
andl
xor
cmp
mov
je
xor
cmp
je
inc
cmp
jne
push
push
mov
call
mov
pop
ret
push
mov
push
push
mov
andl
mov
xor
push
mov
mov
mov
cmp
je
cmp
je
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jb
cmp
jbe
testl
je
inc
inc
mov
mov
cmpb
jne
push
push
mov
call
mov
mov
test
je
inc
cmp
mov
je
mov
and
or
andl
jmp
mov
and
or
mov
pop
mov
pop
pop
pop
ret
andl
jmp
mov
test
jne
and
or
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
andl
andl
lea
movb
push
push
pushl
dec
pushl
call
add
mov
or
mov
mov
mov
jne
lea
sub
push
push
mov
call
mov
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
andl
xor
cmp
push
lea
mov
mov
mov
jg
jl
cmp
jae
mov
neg
adc
movb
neg
mov
push
jmp
xor
push
push
push
pushl
dec
call
add
mov
mov
mov
mov
or
mov
jne
cmp
pop
je
dec
movb
lea
sub
push
push
mov
call
mov
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
call
mov
call
test
pushl
je
call
jmp
call
mov
pop
ret
push
push
mov
mov
mov
call
test
mov
je
mov
shl
sar
push
call
jmp
call
test
je
push
call
jmp
mov
call
test
mov
je
pushl
mov
call
jmp
mov
and
or
mov
pop
mov
pop
ret
push
push
mov
test
mov
je
call
test
je
push
call
jmp
mov
shl
sar
je
cmp
je
push
call
jmp
push
push
mov
call
test
je
push
mov
call
mov
jmp
xor
test
je
mov
call
test
mov
je
push
mov
call
jmp
andl
cmpl
jne
mov
and
or
mov
pop
mov
pop
ret
push
push
lea
mov
andl
push
call
mov
pop
ret
mov
push
mov
andl
xor
cmp
je
inc
cmpb
jne
push
push
mov
call
mov
pop
ret
push
mov
push
push
mov
mov
test
je
movsbl
sub
incl
cmp
ja
mov
andl
andl
shr
not
test
je
and
sub
je
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
add
push
lea
call
mov
lea
push
call
jmp
push
jmp
push
mov
call
mov
leave
ret
push
mov
mov
mov
test
mov
je
cmp
je
push
jmp
incl
push
call
jmp
push
call
mov
pop
ret
push
mov
push
mov
call
mov
call
test
je
pushl
call
jmp
mov
call
test
je
mov
shl
sar
push
mov
call
jmp
push
mov
call
mov
pop
ret
push
mov
push
mov
call
mov
call
test
pushl
je
call
jmp
call
mov
pop
ret
push
mov
test
push
mov
je
call
test
je
push
call
jmp
mov
call
test
mov
je
push
push
mov
call
test
je
andl
movl
mov
jmp
xor
mov
push
call
jmp
mov
and
or
mov
mov
pop
pop
ret
push
push
mov
test
mov
je
cmpb
je
call
test
je
push
call
jmp
mov
call
test
mov
je
push
push
mov
call
test
je
push
push
mov
call
jmp
xor
mov
push
call
jmp
mov
and
or
mov
pop
mov
pop
ret
push
mov
sub
push
mov
andl
push
mov
and
mov
test
movl
jne
push
mov
mov
cmp
je
cmp
je
cmpl
je
andl
jmp
push
mov
call
mov
mov
test
je
movsbl
sub
cmp
ja
inc
push
mov
mov
call
jmp
andl
and
mov
lea
push
lea
push
call
mov
sub
cmp
pop
pop
jle
mov
cmpl
je
lea
push
call
lea
push
mov
call
testb
je
jmp
push
mov
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
pushl
mov
call
push
mov
call
lea
push
call
pop
push
mov
call
push
mov
call
mov
cmpb
jne
incl
mov
pop
leave
ret
push
mov
push
push
pushl
lea
pushl
pushl
call
mov
call
mov
leave
ret
push
mov
push
push
pushl
lea
pushl
pushl
call
mov
call
mov
leave
ret
push
mov
push
push
pushl
lea
pushl
pushl
call
mov
call
mov
leave
ret
push
mov
push
mov
call
mov
call
test
pushl
je
call
jmp
call
mov
pop
ret
push
mov
push
mov
call
mov
call
test
pushl
je
call
jmp
call
mov
pop
ret
push
mov
sub
push
mov
xor
cmpb
mov
jne
inc
movl
mov
mov
cmp
jne
mov
push
call
jmp
cmp
jl
cmp
jg
movsbl
sub
cltd
inc
cmp
push
mov
push
je
lea
call
push
pushl
lea
push
call
add
jmp
lea
call
mov
push
call
jmp
push
push
xor
jmp
test
je
cmp
jl
cmp
jg
movsbl
sub
push
cltd
push
mov
push
mov
push
mov
call
add
mov
adc
inc
mov
mov
mov
mov
cmp
jne
mov
inc
cmp
mov
jne
xor
cmp
push
push
je
cmp
je
lea
call
jmp
push
mov
call
jmp
push
jmp
lea
call
jmp
cmp
je
lea
call
push
pushl
lea
push
call
add
jmp
lea
call
mov
push
call
pop
pop
mov
pop
leave
ret
push
mov
sub
mov
mov
andl
andl
test
je
movsbl
add
cmp
ja
jmp
push
jmp
push
jmp
push
jmp
push
lea
call
mov
movsbl
incl
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
lea
push
lea
push
push
call
add
push
lea
call
mov
lea
push
call
jmp
push
jmp
push
mov
call
mov
leave
ret
mov
scas
mov
inc
add
mov
inc
add
mov
inc
add
in
mov
movsbl
sub
sub
je
dec
dec
je
lea
push
call
testb
pop
jne
mov
mov
test
je
cmp
je
cmp
je
mov
push
call
jmp
mov
incl
shr
not
test
mov
jne
mov
push
lea
push
lea
call
mov
push
call
jmp
incl
lea
jmp
mov
incl
shr
not
test
mov
jne
mov
push
jmp
incl
push
mov
call
mov
leave
ret
push
mov
mov
mov
sub
test
je
cmp
lea
jne
mov
incl
andl
andl
push
call
jmp
push
pushl
push
call
push
lea
push
push
call
add
jmp
push
pushl
lea
push
push
push
lea
call
mov
call
mov
call
mov
leave
ret
push
mov
sub
mov
andl
push
mov
and
inc
mov
movsbl
mov
sub
je
dec
je
dec
je
movsbl
add
shl
inc
lea
inc
cmp
mov
jbe
push
lea
call
push
push
lea
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
push
lea
call
mov
cmpb
jne
incl
jmp
push
lea
push
lea
call
push
lea
call
mov
incl
orl
lea
push
call
mov
jmp
mov
movb
jmp
mov
push
lea
movb
call
jmp
cmpl
jne
mov
cmpb
setne
dec
and
add
mov
mov
incl
andl
and
pop
leave
ret
push
mov
mov
sub
cmpb
push
je
call
mov
test
jge
xor
test
jne
lea
push
push
lea
push
push
push
lea
call
mov
call
mov
call
push
pushl
call
pop
pop
mov
pop
leave
ret
andl
andl
push
mov
testb
je
push
lea
call
push
lea
push
lea
push
push
dec
call
push
lea
push
push
call
add
mov
call
push
lea
call
test
jne
mov
call
test
jne
testb
lea
push
lea
push
jne
push
lea
push
push
lea
push
push
call
add
mov
call
mov
call
push
lea
call
lea
push
lea
push
call
orl
pop
pop
mov
lea
push
call
pop
jmp
mov
call
test
lea
push
push
lea
jne
push
push
push
lea
push
push
lea
push
push
call
add
mov
call
jmp
push
mov
sub
push
pushl
lea
push
push
call
push
lea
push
push
call
add
mov
call
mov
leave
ret
push
pushl
call
mov
pop
pop
ret
push
pushl
call
mov
pop
pop
ret
push
pushl
call
mov
pop
pop
ret
push
mov
sub
push
mov
pushl
mov
call
mov
call
test
je
mov
cmpb
je
lea
push
call
pop
push
lea
push
push
lea
push
lea
call
mov
call
push
mov
call
mov
call
test
je
mov
cmpb
je
push
jmp
mov
mov
test
je
cmp
je
push
lea
push
lea
push
call
push
lea
push
push
call
add
mov
call
push
mov
call
mov
cmpb
jne
inc
mov
mov
call
test
je
cmpb
je
push
call
mov
call
test
jne
mov
call
test
je
mov
cmpb
jne
push
call
push
mov
call
mov
cmpb
jne
incl
jmp
call
test
je
push
lea
push
push
call
add
push
mov
call
mov
pop
leave
ret
push
mov
sub
pushl
lea
call
mov
mov
incl
cmp
jne
mov
mov
incl
cmp
jne
incl
lea
push
push
call
lea
push
push
call
mov
mov
add
test
je
cmp
je
inc
mov
mov
test
jne
cmpb
jne
dec
mov
push
jmp
mov
inc
mov
lea
push
call
jmp
push
mov
call
mov
leave
ret
push
mov
push
push
mov
mov
test
jne
mov
push
call
jmp
cmp
push
jne
incl
lea
push
call
push
push
pushl
call
add
jmp
pushl
call
pop
pop
mov
leave
ret
push
lea
sub
mov
xor
mov
mov
push
mov
incl
push
movsbl
cmp
push
mov
jg
je
sub
je
sub
je
dec
je
dec
jne
lea
push
call
lea
push
call
pop
pop
lea
call
test
je
lea
call
test
je
push
lea
push
lea
call
test
jne
push
mov
call
jmp
mov
cmp
mov
jne
mov
mov
movb
jmp
movb
lea
push
push
push
lea
push
lea
push
lea
call
mov
call
mov
call
jmp
mov
cmpb
jne
incl
push
mov
call
jmp
lea
push
call
pop
push
push
push
lea
call
jmp
push
call
jmp
decl
push
jmp
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
lea
push
push
call
lea
push
call
add
lea
push
mov
call
jmp
lea
push
call
testw
pop
je
push
lea
push
lea
call
lea
push
call
push
call
test
pop
pop
je
push
jmp
cmp
push
lea
push
push
jne
push
lea
push
call
add
mov
call
jmp
push
lea
jmp
push
lea
call
cmp
jl
cmp
jg
lea
push
call
pop
push
lea
call
push
lea
call
sub
je
dec
je
dec
je
dec
je
dec
jne
lea
push
call
pop
push
lea
call
push
lea
call
lea
push
call
pop
push
lea
call
push
lea
call
lea
push
call
pop
push
lea
call
push
push
lea
call
jmp
push
call
pop
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
mov
sub
cmpb
je
cmpl
je
cmpb
jne
mov
inc
mov
call
test
je
mov
push
call
jmp
push
push
pushl
call
jmp
cmpb
jne
pushl
inc
pushl
mov
call
pop
pop
jmp
push
mov
lea
push
push
call
mov
test
pop
pop
pop
je
lea
push
push
jmp
test
je
lea
push
push
lea
push
call
add
push
lea
call
mov
lea
push
call
jmp
pushl
push
pushl
call
add
mov
leave
ret
pushl
pushl
call
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
mov
andl
push
mov
and
movb
testb
movl
jne
push
mov
mov
test
je
cmp
je
cmpl
je
andl
jmp
push
mov
call
mov
mov
movsbl
sub
cmp
ja
inc
push
mov
mov
call
jmp
andl
and
cmp
mov
jne
inc
mov
push
lea
call
jmp
cmp
jne
inc
cmp
je
mov
lea
push
call
jmp
cmp
jne
lea
push
call
testw
pop
je
push
lea
push
lea
call
lea
push
call
push
call
test
pop
pop
je
push
jmp
push
lea
push
lea
push
lea
push
push
call
add
mov
call
jmp
push
lea
push
lea
push
lea
jmp
andl
and
lea
push
lea
push
call
pop
pop
push
lea
call
mov
sub
cmp
jle
mov
cmpl
je
lea
push
call
lea
push
mov
call
testb
je
pop
mov
pop
mov
xor
movb
pop
call
leave
ret
push
lea
sub
mov
movsbl
push
xor
mov
and
and
push
xor
inc
cmp
mov
mov
mov
jg
je
cmp
je
cmp
jle
cmp
jle
cmp
jg
movsbl
pushl
lea
call
lea
call
test
jne
mov
push
lea
push
push
call
add
push
lea
call
lea
mov
push
call
mov
pop
pop
add
leave
ret
and
cmp
mov
je
lea
push
call
push
lea
push
push
call
add
push
lea
call
lea
call
cmp
jne
push
lea
call
push
lea
call
mov
cmp
je
movb
mov
cmp
jne
lea
jmp
inc
mov
mov
lea
push
push
call
pop
pop
push
lea
call
lea
mov
call
test
jne
cmpb
jne
mov
push
lea
push
push
call
add
push
lea
call
lea
call
test
jne
mov
push
lea
call
jmp
dec
mov
push
mov
call
jmp
cmp
je
jle
cmp
jle
cmp
jne
movsbl
inc
cmp
mov
jg
cmp
jge
cmp
jg
je
cmp
je
cmp
jle
cmp
jle
cmp
jg
movsbl
pushl
mov
call
jmp
movsbl
pushl
jmp
movsbl
pushl
lea
call
orl
lea
jmp
cmp
je
cmp
jle
cmp
jle
cmp
jne
push
push
lea
push
call
add
orl
jmp
movsbl
inc
cmp
mov
je
cmp
je
push
jmp
push
push
jmp
cmp
jg
cmp
jge
sub
je
dec
je
dec
jne
movsbl
pushl
lea
call
mov
movsbl
pushl
lea
call
mov
movsbl
incl
cmp
je
cmp
je
add
cmp
ja
lea
push
pushl
lea
call
jmp
decl
jmp
lea
push
lea
push
lea
call
push
lea
push
lea
push
call
pop
mov
call
push
lea
call
push
lea
push
lea
push
call
pop
mov
call
push
lea
call
push
lea
push
lea
push
call
pop
mov
call
push
lea
call
push
lea
push
lea
push
push
call
pop
pop
mov
call
push
lea
call
push
pushl
lea
call
jmp
lea
push
push
call
pop
pop
lea
push
pushl
lea
push
lea
push
push
lea
push
lea
call
mov
call
mov
jmp
movsbl
pushl
lea
call
push
lea
push
push
call
add
push
lea
call
lea
call
test
jne
testb
je
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jle
cmp
jne
movsbl
inc
cmp
mov
jl
cmp
jle
cmp
jle
cmp
jg
movsbl
pushl
jmp
movsbl
pushl
lea
call
mov
cmpb
jne
lea
push
call
pop
push
lea
call
mov
cmpb
jne
incl
jmp
lea
push
call
pop
push
lea
call
push
lea
call
jmp
movsbl
pushl
jmp
movsbl
pushl
jmp
xor
inc
movsbl
pushl
lea
call
cmp
je
lea
call
test
jne
orl
jmp
push
lea
mov
sub
cmpb
jne
cmpb
jne
push
mov
push
mov
inc
inc
push
mov
lea
mov
call
lea
call
lea
call
andl
andl
lea
mov
lea
mov
lea
mov
mov
cmpb
movb
jne
incl
lea
push
lea
push
push
call
add
jmp
lea
push
push
call
pop
pop
push
lea
call
lea
call
test
je
movb
cmpb
jne
lea
push
call
push
lea
push
push
call
add
push
lea
call
lea
call
cmp
jne
push
lea
call
push
lea
call
cmpb
je
incl
mov
lea
push
mov
mov
mov
call
pop
pop
pop
jmp
mov
push
call
mov
add
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
movsbl
push
mov
sub
cmp
mov
ja
inc
push
mov
mov
call
push
mov
call
mov
jmp
andl
andl
cmp
jne
lea
push
push
call
pop
pop
push
lea
call
mov
mov
inc
cmp
mov
je
dec
xor
mov
cmp
sete
inc
push
lea
call
jmp
push
push
mov
push
mov
mov
pop
mov
test
je
cmp
jne
inc
inc
dec
jne
movzbl
movzbl
sub
jne
add
jmp
mov
push
mov
mov
pop
mov
test
je
cmp
jne
inc
inc
dec
jne
movzbl
movzbl
sub
jne
add
mov
lea
push
mov
call
testw
pop
je
push
lea
push
lea
call
lea
push
call
push
call
test
pop
pop
lea
je
push
call
jmp
push
call
push
lea
push
lea
push
lea
jmp
push
lea
call
push
lea
push
lea
push
lea
push
push
call
add
mov
call
push
lea
call
jmp
push
push
lea
call
push
lea
call
pop
pop
cmpb
je
mov
cmpl
je
lea
push
call
mov
lea
push
call
mov
mov
xor
pop
call
leave
ret
push
mov
sub
push
mov
andl
andl
push
lea
push
push
call
pop
pop
push
mov
call
testb
mov
jne
mov
mov
test
je
cmp
je
push
lea
push
push
lea
push
lea
push
call
pop
mov
call
mov
call
push
mov
call
mov
mov
cmp
jne
incl
jmp
test
je
mov
andl
mov
and
cmp
je
and
or
mov
jmp
mov
call
test
je
push
call
jmp
push
lea
push
push
lea
push
push
lea
call
mov
call
mov
call
push
mov
call
pop
mov
pop
leave
ret
pushl
call
mov
pop
ret
push
mov
mov
sub
push
mov
shr
xor
not
inc
and
push
je
test
je
xor
mov
movsbl
andl
mov
and
incl
sub
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
jmp
push
jmp
lea
push
mov
call
push
lea
push
push
call
add
push
lea
call
jmp
push
jmp
push
jmp
push
lea
call
andl
and
test
je
lea
push
lea
call
lea
push
call
pop
lea
push
lea
call
mov
lea
push
call
jmp
mov
decl
push
call
mov
pop
pop
leave
ret
push
mov
mov
cmpb
jne
inc
cmpb
jne
push
pushl
call
jmp
push
push
pushl
mov
call
add
jmp
push
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
call
add
push
lea
call
mov
cmpb
je
movsbl
inc
sub
mov
je
dec
dec
je
sub
jne
mov
push
call
jmp
lea
push
call
pop
push
lea
call
jmp
push
lea
call
jmp
push
lea
call
push
lea
call
mov
lea
push
call
mov
leave
ret
push
mov
sub
andl
push
mov
and
push
call
mov
mov
call
cmp
mov
jne
mov
push
call
jmp
cmp
jne
pushl
push
pushl
call
add
jmp
cmp
jne
pushl
mov
call
jmp
mov
andl
push
mov
mov
je
xor
mov
andl
cmpl
sete
xor
mov
cmp
mov
je
and
jmp
and
cmp
je
mov
and
cmp
je
cmp
mov
je
and
jmp
and
cmp
je
mov
and
cmp
je
cmp
je
test
je
mov
mov
shr
not
test
je
shr
not
test
je
lea
push
call
push
lea
push
push
call
add
push
lea
call
jmp
lea
push
call
pop
push
lea
call
xor
mov
cmp
mov
je
and
jmp
and
cmp
je
cmpl
jne
lea
push
push
call
pop
pop
mov
lea
push
lea
push
push
lea
push
call
mov
call
push
lea
call
lea
push
call
test
pop
jne
push
lea
push
lea
push
lea
push
push
call
add
mov
call
push
lea
call
push
lea
call
lea
push
call
mov
pop
mov
shr
not
test
je
mov
shr
not
test
je
test
jne
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
mov
call
mov
call
jmp
and
and
and
and
and
cmp
mov
mov
mov
mov
mov
mov
je
and
jmp
and
cmp
je
cmp
je
mov
and
cmp
jne
lea
push
push
call
pop
pop
lea
push
lea
call
lea
push
push
call
pop
pop
lea
push
lea
call
jmp
cmp
je
mov
and
cmp
jne
lea
push
push
call
pop
pop
lea
push
lea
call
lea
push
push
call
pop
pop
lea
push
lea
call
xor
cmp
je
mov
and
cmp
je
mov
and
cmp
lea
push
je
call
pop
push
lea
call
jmp
call
pop
push
lea
call
mov
mov
shr
not
test
je
shr
not
test
je
lea
push
lea
push
lea
push
call
pop
mov
call
push
lea
call
jmp
lea
push
call
pop
push
lea
call
mov
call
test
jne
lea
call
test
jne
test
jne
pushl
lea
push
push
call
add
push
lea
call
jmp
pushl
lea
call
and
xor
cmp
mov
push
je
lea
push
call
push
lea
push
push
call
add
push
lea
call
testw
je
jmp
push
mov
call
test
je
and
and
mov
jmp
xor
lea
push
push
call
pop
pop
push
lea
call
mov
test
mov
je
and
jmp
and
test
je
test
je
mov
and
cmp
jne
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
mov
call
mov
call
mov
call
mov
call
jmp
test
je
mov
and
cmp
jne
push
lea
push
lea
push
lea
push
push
call
add
mov
call
push
lea
call
jmp
push
lea
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
push
call
push
lea
push
push
call
add
mov
call
push
lea
call
test
je
mov
and
cmp
je
lea
push
lea
call
mov
shr
not
test
lea
push
je
call
pop
push
lea
call
jmp
call
pop
push
lea
call
mov
shr
not
test
je
test
je
lea
push
mov
call
lea
jmp
pushl
lea
call
mov
test
mov
jne
mov
and
cmp
jne
lea
push
pushl
call
pop
pop
jmp
test
jne
mov
and
cmp
je
test
jne
mov
and
cmp
jne
push
lea
push
call
pop
pop
push
pushl
lea
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
jmp
test
jne
mov
and
cmp
jne
lea
push
pushl
call
jmp
test
je
mov
and
sub
jmp
mov
and
neg
sbb
inc
test
mov
je
and
jmp
and
test
mov
je
mov
mov
and
sub
neg
sbb
inc
neg
sbb
test
je
push
jmp
cmpl
mov
je
and
sub
jmp
and
neg
sbb
inc
test
mov
je
and
jmp
and
test
je
mov
mov
and
sub
neg
sbb
inc
neg
sbb
test
je
push
jmp
cmpl
mov
je
and
sub
jmp
and
neg
sbb
inc
test
mov
je
and
jmp
and
test
je
mov
mov
and
sub
neg
sbb
inc
neg
sbb
test
je
push
lea
call
jmp
cmpl
jne
mov
and
cmp
je
cmpl
je
mov
and
sub
jmp
mov
and
neg
sbb
inc
test
mov
je
and
jmp
and
test
je
mov
mov
and
xor
cmp
sete
neg
sbb
test
jne
mov
xor
cmp
sete
neg
sbb
test
je
lea
push
lea
push
push
call
add
jmp
lea
push
lea
push
call
pop
pop
push
lea
call
xor
cmp
mov
mov
mov
mov
je
and
sub
jmp
and
neg
sbb
inc
cmp
je
mov
shr
not
test
je
cmp
mov
je
and
sub
jmp
and
neg
sbb
inc
cmp
je
cmp
je
mov
and
sub
neg
sbb
inc
jmp
xor
inc
cmp
je
lea
push
lea
push
push
call
add
push
lea
call
mov
mov
test
je
mov
and
cmp
je
test
je
mov
and
sub
jmp
mov
and
neg
sbb
inc
test
mov
je
and
jmp
and
test
je
test
mov
je
and
sub
jmp
and
neg
sbb
inc
test
je
mov
and
cmp
je
test
mov
je
and
sub
jmp
and
neg
sbb
inc
test
je
mov
and
cmp
je
test
mov
je
and
sub
jmp
and
neg
sbb
inc
test
je
mov
and
cmp
jne
lea
push
lea
push
push
call
add
push
lea
call
mov
mov
shr
not
test
je
mov
test
mov
je
and
sub
jmp
and
neg
sbb
inc
test
je
test
mov
je
and
sub
neg
sbb
jmp
and
sub
neg
sbb
inc
test
je
lea
push
push
jmp
test
mov
je
and
sub
jmp
and
neg
sbb
inc
test
je
test
mov
je
and
sub
neg
sbb
jmp
and
sub
neg
sbb
inc
test
je
lea
push
push
jmp
test
mov
je
and
sub
jmp
and
neg
sbb
inc
test
je
test
mov
je
and
neg
sbb
jmp
and
neg
sbb
inc
test
je
lea
push
push
lea
push
call
add
push
lea
call
mov
cmpl
mov
je
and
sub
jmp
and
neg
sbb
inc
test
mov
je
and
jmp
and
test
je
testw
jne
lea
push
lea
push
push
call
add
push
lea
call
test
je
lea
push
lea
push
push
call
add
push
lea
call
mov
lea
push
call
pop
mov
pop
pop
leave
ret
push
mov
sub
push
mov
test
push
je
andl
lea
push
push
call
or
pop
pop
lea
mov
push
call
jmp
mov
mov
cmp
jne
inc
mov
cmp
jne
cmp
jne
lea
push
call
mov
pop
jmp
inc
mov
cmpb
jne
jmp
lea
push
call
pop
lea
call
test
jne
testb
je
xor
inc
jmp
xor
mov
shr
lea
and
call
test
jne
lea
jmp
mov
mov
test
je
cmp
je
lea
push
call
pop
lea
call
test
jne
cmp
je
mov
mov
push
lea
push
lea
call
push
lea
call
mov
cmpb
je
lea
push
call
pop
push
lea
call
lea
push
lea
push
lea
jmp
lea
push
lea
push
lea
push
push
lea
call
mov
call
push
lea
call
test
je
lea
call
test
jne
orl
test
mov
je
or
lea
call
test
jne
testw
jne
mov
mov
test
je
cmp
je
push
jmp
incl
testw
je
test
jne
test
jne
and
andl
lea
push
lea
push
call
pop
pop
jmp
lea
push
pushl
call
pop
pop
jmp
test
jne
push
mov
call
mov
pop
pop
leave
ret
push
lea
sub
push
push
mov
andl
mov
xor
test
push
mov
mov
mov
jne
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
test
jne
push
lea
push
push
call
add
push
mov
call
cmp
je
push
lea
push
push
call
add
push
mov
call
mov
mov
cmpb
jne
inc
mov
movsbl
sub
je
dec
je
sub
je
dec
dec
je
sub
push
je
lea
push
lea
push
call
jmp
lea
push
push
lea
push
lea
inc
push
push
mov
call
pop
pop
mov
call
mov
call
push
mov
call
movb
jmp
lea
cmpb
jne
cmpb
jne
mov
push
lea
push
push
lea
push
push
call
add
mov
call
push
mov
call
mov
cmpb
jne
incl
jmp
push
lea
push
push
lea
push
lea
push
call
push
lea
push
push
call
add
mov
call
jmp
push
push
lea
call
push
lea
push
push
call
add
push
mov
call
mov
cmpl
je
lea
push
call
jmp
lea
push
dec
push
mov
lea
jmp
lea
push
push
lea
push
push
call
pop
pop
mov
call
push
mov
call
testb
je
mov
mov
cmp
je
cmp
je
mov
mov
and
cmp
mov
je
and
or
mov
jmp
mov
call
test
je
push
call
jmp
push
lea
push
push
lea
push
push
lea
call
mov
call
mov
call
push
mov
call
pop
mov
pop
pop
add
leave
ret
push
mov
mov
mov
sub
test
jne
pushl
push
pushl
call
add
jmp
cmp
jl
cmp
jle
cmp
je
mov
push
call
jmp
push
movsbl
sub
inc
cmp
mov
jne
mov
test
je
movsbl
sub
inc
cmp
mov
jl
cmp
jmp
pushl
push
pushl
call
add
jmp
test
jl
cmp
jle
or
cmp
jne
mov
push
call
jmp
andl
push
push
pushl
mov
and
lea
call
mov
and
je
lea
push
lea
push
push
call
add
push
lea
call
mov
cmpb
lea
push
je
lea
push
lea
push
call
push
lea
push
push
call
add
mov
call
jmp
lea
push
push
call
add
push
lea
call
mov
mov
test
je
cmp
jne
mov
incl
and
cmp
lea
push
je
call
pop
push
lea
call
test
je
mov
shr
not
test
je
lea
push
lea
push
lea
push
call
push
lea
push
push
call
add
mov
call
push
lea
call
jmp
call
pop
push
lea
call
jmp
push
jmp
lea
push
push
pushl
call
add
jmp
lea
push
call
pop
push
lea
call
mov
shr
not
test
je
lea
push
lea
push
lea
push
call
pop
mov
call
push
lea
call
jmp
lea
push
call
pop
push
lea
call
mov
call
test
jne
push
lea
push
lea
push
lea
push
push
call
add
mov
call
push
lea
call
push
push
mov
call
test
je
andl
and
mov
jmp
xor
lea
push
push
call
pop
pop
push
lea
push
lea
push
call
push
lea
push
push
call
add
mov
call
push
lea
call
mov
and
cmp
je
test
je
lea
push
lea
call
mov
shr
not
test
lea
push
je
call
pop
push
lea
call
jmp
call
pop
push
lea
call
test
je
lea
push
mov
call
mov
lea
push
call
jmp
push
mov
call
pop
pop
pop
mov
leave
ret
push
mov
sub
mov
mov
push
push
mov
and
push
xor
test
mov
movb
je
cmp
jne
pushl
lea
push
lea
push
lea
push
call
add
lea
call
test
jne
mov
mov
push
call
jmp
mov
mov
xor
cmp
setl
and
movsbl
push
mov
dec
and
add
sub
and
mov
pop
mov
sub
je
dec
je
sub
jne
mov
shr
not
test
je
lea
call
test
push
jne
call
add
push
lea
push
lea
push
push
lea
call
mov
call
lea
push
call
jmp
mov
shr
not
test
je
lea
call
test
push
jne
call
add
push
lea
push
push
lea
push
call
mov
call
lea
jmp
call
lea
jmp
mov
mov
shr
not
test
je
shr
not
test
je
lea
call
test
push
jne
call
add
push
lea
push
lea
jmp
call
lea
add
push
call
incl
mov
cmpb
jne
pushl
lea
push
lea
push
lea
push
call
add
lea
call
test
je
mov
mov
xor
cmp
setl
movsbl
dec
and
add
sub
jmp
incl
cmp
ja
pushl
lea
call
lea
push
lea
push
lea
call
push
lea
call
lea
call
test
jne
mov
push
lea
push
push
lea
push
lea
call
mov
call
push
lea
call
lea
call
test
jne
lea
push
lea
push
push
lea
push
call
mov
call
push
lea
call
test
je
cmp
je
push
jmp
cmpb
je
lea
push
lea
push
push
call
add
push
lea
call
mov
cmpb
lea
push
lea
je
push
lea
push
call
pop
mov
call
jmp
push
push
call
add
push
lea
call
jmp
mov
cmpb
je
lea
push
call
pop
push
lea
call
mov
mov
test
jne
push
lea
call
jmp
incl
cmp
jne
mov
shr
not
test
mov
je
and
cmp
jne
cmp
jne
lea
push
lea
push
lea
push
call
pop
mov
call
push
lea
call
jmp
and
cmp
jne
lea
push
call
pop
push
lea
call
test
je
lea
push
lea
push
push
call
add
push
lea
call
test
je
lea
push
lea
push
push
call
add
push
lea
call
cmp
jne
mov
mov
call
test
jne
mov
test
jne
mov
call
test
jne
push
lea
push
push
lea
push
push
lea
push
push
call
add
mov
call
mov
call
jmp
test
push
jns
lea
call
jmp
mov
call
test
jne
push
lea
push
push
call
add
push
lea
call
orl
cmpb
je
orl
lea
jmp
cmp
jne
mov
mov
call
test
jne
testb
jne
mov
call
test
jne
push
pushl
lea
push
push
push
lea
push
push
call
add
mov
call
mov
call
jmp
push
push
pushl
call
add
jmp
mov
call
test
jne
push
jmp
push
mov
call
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
andl
mov
and
and
mov
test
je
cmpb
jne
mov
cmp
jne
addl
lea
push
call
push
lea
push
push
call
add
jmp
cmp
jne
lea
push
push
call
pop
pop
push
lea
call
mov
and
cmp
jne
mov
andl
mov
lea
push
call
pop
push
lea
call
mov
shl
sar
cmp
jne
xor
leave
ret
cmp
je
testw
jne
mov
cmpb
jne
lea
push
lea
call
jmp
pushl
lea
call
mov
test
jne
lea
call
inc
mov
add
and
push
call
test
pop
mov
je
pushl
lea
push
call
mov
mov
jmp
cmp
jne
inc
mov
inc
jmp
inc
cmpb
je
jmp
mov
inc
inc
mov
test
jne
mov
mov
mov
leave
ret
push
mov
push
push
mov
mov
test
je
cmp
jl
cmp
jle
cmp
jne
push
pushl
lea
call
mov
call
test
mov
jne
mov
call
test
jne
testb
jne
pushl
lea
call
mov
call
test
jne
push
lea
call
lea
push
pushl
call
pop
pop
pop
jmp
push
pushl
lea
pushl
pushl
push
call
xor
cmpb
sete
push
lea
push
pushl
call
add
jmp
push
lea
call
pushl
lea
call
mov
call
test
jne
push
lea
call
mov
call
test
jne
mov
call
test
jne
push
lea
call
pushl
lea
call
mov
lea
push
call
mov
leave
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
push
call
mov
xor
cmp
jne
xor
jmp
push
call
pop
test
je
push
call
pop
mov
mov
mov
mov
mov
mov
mov
movzwl
push
push
pushl
pushl
pushl
lea
call
lea
call
mov
mov
call
movl
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
xor
cmp
jne
xor
jmp
push
call
pop
test
je
push
call
pop
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
lea
call
lea
call
mov
mov
call
movl
call
mov
call
ret
push
call
pop
ret
push
mov
mov
mov
sub
test
push
push
push
je
incl
andl
movzbl
mov
and
mov
or
cmp
jg
je
sub
cmp
ja
movzbl
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
mov
mov
incl
mov
movzbl
cmp
jg
cmp
jge
cmp
jg
cmp
jge
cmp
je
add
cmp
ja
push
jmp
pushl
lea
push
call
push
push
pushl
call
add
jmp
push
jmp
cmp
jl
cmp
jle
cmp
jg
push
jmp
push
jmp
push
jmp
cmp
je
cmp
je
cmp
je
add
cmp
ja
lea
decl
push
call
pop
push
lea
call
lea
call
test
je
lea
mov
push
call
jmp
push
jmp
push
jmp
push
pop
pushl
andl
and
lea
call
cmp
jne
orl
push
lea
push
lea
push
lea
push
call
add
testb
jne
push
lea
call
lea
jmp
push
jmp
push
lea
call
jmp
mov
and
jmp
lea
jmp
push
lea
call
push
lea
call
cmp
jne
mov
sub
je
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
movzbl
sub
je
sub
je
sub
je
sub
je
sub
jne
lea
push
push
lea
jmp
lea
push
push
lea
jmp
lea
push
push
lea
push
call
add
push
lea
call
mov
call
test
jne
push
lea
push
push
call
add
push
lea
call
jmp
mov
call
test
je
test
je
push
lea
call
test
je
push
lea
call
jmp
test
je
push
lea
call
push
lea
push
lea
push
pushl
call
add
jmp
pushl
push
pushl
call
add
mov
pop
pop
pop
leave
ret
mov
call
out
inc
add
out
inc
add
lock
add
lock
add
add
add
add
add
add
sub
push
mov
movsbl
xor
mov
and
sub
mov
je
sub
je
sub
je
dec
je
pushl
pushl
call
pop
pop
jmp
push
lea
call
mov
call
test
jne
push
lea
call
pushl
lea
call
incl
orl
push
lea
push
lea
push
pushl
call
add
jmp
mov
cmp
je
cmp
je
mov
push
call
jmp
inc
inc
mov
movsbl
sub
je
sub
je
dec
je
dec
jne
and
push
lea
push
push
pushl
lea
inc
push
mov
mov
call
push
pushl
call
add
jmp
push
pushl
inc
pushl
mov
call
jmp
pushl
inc
pushl
mov
call
jmp
pushl
push
pushl
call
add
mov
pop
leave
ret
push
mov
sub
pushl
lea
call
mov
mov
xor
cmp
je
cmp
je
cmp
je
lea
push
pushl
call
pop
pop
jmp
incl
lea
call
test
je
mov
push
call
jmp
lea
push
push
pushl
call
jmp
incl
andl
push
lea
push
push
lea
push
lea
push
mov
call
add
push
lea
call
jmp
lea
push
push
pushl
call
add
mov
leave
ret
push
mov
sub
push
xor
push
push
mov
call
cmp
je
andl
mov
mov
push
pushl
call
lea
push
call
add
pushl
lea
push
push
lea
push
lea
call
mov
call
push
mov
call
mov
pop
leave
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
mov
push
andl
push
lea
push
pushl
pushl
call
mov
add
test
jne
push
mov
test
je
call
test
je
call
mov
pop
mov
pop
leave
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
push
mov
mov
push
xor
cmp
jbe
push
xor
pop
div
cmp
jae
call
push
push
push
push
push
movl
call
add
xor
jmp
imul
cmp
push
push
mov
je
pushl
call
pop
mov
push
pushl
call
mov
test
pop
pop
je
cmp
jae
sub
push
push
add
push
call
add
mov
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
mov
mov
mov
and
not
and
or
mov
ret
andl
ret
push
call
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
call
pop
pop
ret
push
mov
sub
pushl
lea
call
mov
cmpl
jle
lea
push
push
pushl
call
add
jmp
mov
mov
movzbl
and
cmpb
je
mov
andl
leave
ret
cmpl
jne
mov
mov
movzbl
and
ret
push
pushl
call
pop
pop
ret
cmpl
sbb
neg
ret
mov
and
ret
pushl
pushl
call
test
pop
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
pushl
call
test
pop
pop
jne
cmpl
je
ret
xor
inc
ret
movzbl
push
call
test
pop
jne
cmpb
je
ret
xor
inc
ret
mov
test
je
mov
mov
add
ret
mov
test
je
sub
cmpl
jne
push
call
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
pushl
mov
pushl
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
movl
add
jmp
push
call
test
pop
je
movl
add
mov
jmp
xor
test
je
push
push
pushl
pushl
call
test
je
xor
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
pushl
pushl
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
push
call
pop
mov
jmp
pushl
pushl
pushl
pushl
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
jmp
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
mov
je
testw
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
cmp
mov
je
mov
push
push
pushl
push
pushl
pushl
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
cmp
mov
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
push
mov
sub
test
movzwl
movzwl
mov
mov
jne
or
leave
ret
andl
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
push
push
pushl
or
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
push
lea
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
push
push
push
mov
cmpl
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
movl
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
pushl
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
pushl
call
pushl
call
pop
pop
mov
jmp
mov
mov
movzwl
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
pushl
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
pushl
call
pop
jmp
mov
movzwl
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
pushl
call
pushl
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
pushl
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzwl
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
pushl
add
push
push
pushl
mov
push
push
call
add
test
je
mov
mov
push
pushl
mov
push
add
push
push
inc
push
push
pushl
push
call
add
test
je
mov
push
pushl
add
push
push
mov
push
inc
push
push
pushl
push
call
add
test
je
cmpl
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzbl
movzbl
cmp
jg
lea
jmp
mov
movw
inc
inc
inc
mov
mov
movzbl
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
pop
mov
jmp
pushl
call
pushl
call
pushl
call
pushl
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
movl
movl
movl
movl
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
mov
test
jne
jmp
mov
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
mov
cmp
je
mov
test
jne
call
add
ret
xor
ret
push
mov
sub
push
push
push
pushl
lea
xor
call
mov
mov
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
push
call
mov
test
pop
mov
je
andl
mov
movb
pushl
mov
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
mov
movb
pushl
mov
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
incl
cmpl
pop
jb
movb
cmpb
pop
pop
pop
je
mov
andl
mov
leave
ret
push
call
pop
ret
push
mov
sub
push
push
push
pushl
lea
xor
call
mov
mov
lea
mov
movl
pushl
call
pushl
mov
call
mov
pop
pop
mov
add
add
decl
lea
mov
jne
lea
push
call
mov
test
pop
mov
je
add
movl
mov
movb
pushl
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
mov
movb
pushl
inc
sub
lea
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
add
add
decl
pop
jne
movb
cmpb
pop
pop
pop
je
mov
andl
mov
leave
ret
push
call
pop
ret
push
mov
sub
push
push
push
pushl
lea
xor
call
mov
mov
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
mov
movl
mov
pushl
call
pushl
mov
call
addl
pop
pop
mov
add
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
push
mov
call
mov
add
test
je
push
push
push
lea
call
andl
lea
mov
add
sub
mov
mov
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
mov
lea
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
incl
addl
cmpl
pop
lea
jb
lea
mov
lea
mov
movl
jmp
mov
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
mov
mov
pushl
mov
sub
add
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
addl
addl
decl
pop
lea
jne
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
lea
mov
sub
add
mov
pushl
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
cmpb
je
mov
andl
pop
pop
mov
pop
leave
ret
push
call
pop
ret
cmpl
push
mov
je
push
mov
test
je
mov
mov
incl
inc
decl
cmpl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
je
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
dec
lea
test
je
push
cltd
pop
idiv
mov
add
incl
mov
dec
cmp
jne
mov
add
sub
jmp
mov
pop
pop
leave
ret
push
mov
push
push
movsbl
cmp
push
push
mov
mov
jg
je
cmp
jg
je
sub
je
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
xor
cmp
jl
cmp
jg
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
jmp
mov
movb
mov
incl
decl
jmp
mov
xor
cmp
jl
cmp
jg
cltd
push
pop
idiv
mov
cmp
jne
push
pop
jmp
sub
je
push
pop
sub
je
dec
dec
je
dec
dec
je
dec
jne
pushl
pushl
jmp
mov
xor
cmp
jl
cmp
jg
cmp
je
lea
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
cmp
jl
cmp
jg
cmp
jge
xor
jmp
push
cltd
pop
idiv
cmp
jl
inc
jmp
mov
xor
cmp
jl
cmp
jmp
mov
jmp
mov
cmp
jl
cmp
jle
call
xor
jmp
cltd
push
pop
idiv
pushl
push
add
imul
add
jmp
cmp
jg
je
sub
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
xor
cmp
jl
cmp
jg
pushl
lea
push
jmp
mov
cmp
jl
cmp
jg
mov
pushl
push
pop
mov
mov
call
pop
jmp
pushl
xor
cmp
pushl
push
push
je
push
pushl
call
add
test
je
mov
cmp
je
mov
pushl
movb
mov
incl
decl
push
push
push
push
pushl
call
add
test
jne
jmp
push
jmp
mov
xor
cmp
jl
cmp
jg
mov
mov
jmp
mov
xor
cmp
jl
cmp
jle
call
push
push
push
push
push
movl
call
add
xor
jmp
mov
mov
jmp
mov
xor
cmp
jl
cmp
jg
lea
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
call
mov
xor
cmp
mov
setne
mov
mov
mov
jmp
mov
xor
cmp
jl
pushl
cltd
push
pop
idiv
mov
jmp
pushl
xor
cmp
pushl
push
push
je
push
jmp
push
jmp
mov
xor
cmp
jl
cmp
jg
pushl
xor
inc
jmp
mov
xor
cmp
jl
cmp
jg
cmp
mov
jg
mov
jmp
mov
mov
call
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
xor
sub
push
je
dec
je
mov
jmp
mov
jmp
mov
cmpl
mov
je
cmpl
mov
jne
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
push
mov
mov
mov
push
push
mov
lea
push
push
pushl
mov
mov
mov
call
cmp
mov
je
add
cmp
jg
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
cmp
mov
je
pushl
mov
push
push
lea
push
push
pushl
call
dec
test
jle
mov
mov
cmpl
jbe
mov
mov
mov
mov
incl
mov
inc
decl
dec
test
jg
pushl
call
pop
xor
inc
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
test
je
mov
mov
cmpl
je
xor
mov
mov
inc
inc
cmp
je
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
mov
test
jne
jmp
mov
dec
je
dec
je
dec
je
dec
jne
mov
jmp
mov
jmp
movl
mov
jmp
mov
dec
je
dec
je
jmp
movl
mov
jmp
push
push
call
test
pop
pop
jne
add
jmp
push
push
call
test
pop
pop
jne
add
mov
mov
jmp
add
test
je
mov
test
je
cmpl
je
cmp
je
pushl
movsbl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
mov
test
jne
jmp
inc
jmp
mov
dec
je
dec
je
dec
je
dec
jne
mov
jmp
mov
jmp
movl
mov
jmp
mov
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
mov
jmp
mov
jmp
mov
cmpl
mov
jg
mov
jmp
mov
cmp
jne
cmpl
jbe
movsbl
pushl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
decl
jmp
cmpl
jbe
pushl
movsbl
push
call
test
pop
pop
je
cmpl
jbe
lea
cmpb
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
mov
test
jne
jmp
mov
dec
je
dec
je
jmp
movl
mov
jmp
mov
dec
je
dec
je
jmp
movl
mov
jmp
mov
dec
je
dec
je
jmp
movl
mov
pushl
mov
pushl
mov
push
pushl
call
add
test
je
mov
jmp
xor
jmp
push
mov
sub
mov
push
pushl
xor
lea
mov
mov
call
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
jmp
push
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
jmp
push
mov
cmp
mov
je
mov
cmp
jne
mov
mov
cmp
mov
mov
jbe
mov
cmp
je
cmp
je
lea
movsbl
push
push
call
test
pop
pop
je
xor
inc
cmp
jbe
lea
cmp
je
mov
mov
mov
incl
decl
mov
mov
mov
mov
incl
inc
decl
jmp
mov
cmp
je
inc
xor
cmpb
jne
inc
inc
push
pushl
lea
push
lea
push
mov
lea
call
add
test
je
inc
cmp
ja
cmp
jbe
mov
mov
sub
cmp
mov
je
mov
andl
jmp
mov
cmp
mov
mov
jne
cmp
ja
call
movl
jmp
call
movl
jmp
cmp
jbe
movl
jmp
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
pushl
push
pushl
pushl
pushl
pushl
call
add
pop
ret
push
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
pushl
pushl
pushl
pushl
pushl
call
add
pop
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
orl
call
mov
mov
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmpb
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
pushl
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsbl
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmpl
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
test
pop
pop
jne
orl
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
xor
test
pop
jne
orl
cmp
mov
je
or
mov
jmp
cmp
je
pushl
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
pushl
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
orl
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
cmp
jne
push
jmp
cmpl
jne
cmpl
je
lea
push
pushl
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
pushl
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
testb
jne
andl
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
orl
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
mov
jmp
movl
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmpw
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
pushl
call
test
je
push
lea
push
push
pushl
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
test
je
xor
test
setg
lea
mov
ret
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
ret
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
ret
xor
ret
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
ret
xor
ret
push
push
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
add
add
sub
cmp
jae
add
add
cmp
ja
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
xor
pop
pop
ret
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
nop
popa
cmp
and
inc
add
inc
add
inc
inc
add
cmp
cltd
ds
add
inc
inc
add
inc
add
ds
add
inc
inc
add
inc
inc
add
cmp
cmpl
add
add
inc
add
cmp
add
inc
inc
add
inc
inc
add
cmp
insl
cmp
add
inc
add
inc
inc
add
cmp
sarl
inc
add
aaa
inc
add
inc
add
inc
add
inc
inc
add
in
push
push
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
mov
mov
push
push
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
add
add
sub
cmp
jae
add
add
cmp
ja
jmp
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
xor
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
mov
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
jmp
xor
pop
pop
pop
ret
mov
push
push
inc
add
inc
add
inc
add
inc
add
dec
inc
add
push
inc
add
pop
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
dec
inc
add
push
inc
add
pop
inc
add
push
inc
add
pop
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
push
inc
add
inc
add
mov
push
andl
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
addl
cmp
jb
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
incl
cmp
jb
xor
pop
pop
leave
ret
movzbl
movzbl
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
pushl
call
test
pop
je
call
push
call
push
push
call
add
jmp
push
pushl
call
pushl
mov
call
pop
pop
mov
mov
pop
ret
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
push
pushl
call
add
ret
pushl
push
push
pushl
call
add
ret
jmp
jmp
push
push
pushl
call
add
ret
pushl
push
push
pushl
call
add
ret
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
cmpl
jne
mov
mov
movzwl
and
ret
push
pushl
pushl
call
add
ret
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
cmp
movl
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
mov
push
xor
cmp
push
je
cmp
jbe
cmp
je
mov
push
mov
cmp
je
mov
cmp
je
cmp
je
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
lea
pushl
call
inc
cmp
pop
mov
jne
xor
jmp
cmp
jbe
push
pop
jmp
pushl
pushl
pushl
call
add
pop
pop
pop
pop
ret
mov
ret
mov
ret
mov
ret
mov
ret
call
mov
mov
ret
call
mov
mov
ret
call
mov
mov
ret
push
push
call
xor
mov
mov
mov
mov
mov
mov
push
call
pop
mov
call
mov
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
call
mov
mov
or
mov
mov
push
call
pop
mov
mov
cmp
je
cmp
je
mov
cmp
je
push
push
call
pop
pop
test
je
mov
cmp
je
push
call
pop
push
call
inc
push
call
pop
pop
mov
cmp
je
push
push
call
pop
inc
push
pushl
call
add
cmp
je
push
push
push
push
push
call
add
jmp
mov
cmp
je
push
call
pop
mov
push
call
cmp
je
xor
inc
mov
mov
imul
mov
cmp
je
mov
imul
add
mov
cmp
je
mov
cmp
je
mov
sub
imul
mov
jmp
mov
mov
lea
push
push
push
mov
pushl
push
push
push
pushl
mov
call
test
je
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
movl
mov
call
mov
mov
call
mov
mov
call
mov
movl
call
cmp
jne
push
push
push
mov
pushl
call
add
test
je
push
push
push
push
push
call
add
add
cmpb
jne
movl
inc
push
call
pop
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
xor
mov
push
call
pop
ret
cmpb
jne
inc
push
call
pop
imul
add
jmp
cmp
jg
inc
mov
cmp
jge
cmpb
jne
inc
push
call
pop
add
jmp
cmp
jg
inc
mov
cmp
jge
cmp
je
negl
movsbl
mov
cmp
je
push
push
push
pushl
call
add
test
je
push
push
push
push
push
call
add
jmp
mov
mov
mov
call
mov
mov
call
mov
call
ret
push
mov
sub
andl
cmpl
push
push
push
mov
mov
mov
jne
and
jns
dec
or
inc
mov
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
shl
mov
jmp
mov
shl
mov
mov
lea
cltd
lea
mov
idiv
push
pop
inc
push
mov
mov
cltd
idiv
mov
mov
sub
mov
lea
cltd
and
add
sar
mov
imul
add
add
lea
cltd
pop
idiv
mov
imul
sub
add
cmp
jg
lea
jmp
add
cmpl
jne
cmpl
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
mov
jmp
mov
mov
cmp
jle
sub
jmp
and
jns
dec
or
inc
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
jmp
mov
add
imul
add
imul
add
imul
add
cmpl
jne
mov
mov
mov
jmp
lea
push
mov
mov
call
test
pop
je
xor
push
push
push
push
push
call
add
mov
imul
add
jns
addl
decl
jmp
mov
cmp
jl
sub
incl
mov
pop
pop
pop
leave
ret
push
mov
sub
push
lea
xor
push
mov
call
test
pop
je
push
push
push
push
push
call
add
cmp
jne
xor
jmp
mov
push
xor
inc
cmp
jne
cmp
je
cmp
je
cmp
movzwl
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
jmp
movzwl
push
push
push
push
push
movzwl
push
call
movzwl
movzwl
add
cmp
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
pushl
push
jmp
movzwl
push
push
push
pushl
push
movzwl
push
call
add
jmp
cmp
push
pop
push
pop
movl
mov
jge
push
pop
mov
movl
movl
push
push
push
push
push
push
push
push
push
push
pop
call
mov
push
push
push
push
push
pushl
pushl
push
push
push
pop
call
add
mov
mov
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
leave
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jge
xor
jmp
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
jmp
xor
cmp
setl
mov
jmp
push
push
call
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
incl
movl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
call
movl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
call
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzbl
lea
inc
cmp
ja
add
movzbl
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
pushl
lea
call
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
mov
cmp
jne
push
pushl
call
pop
pop
jmp
push
mov
movzbl
lea
push
push
call
incl
mov
movzbl
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
andl
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
movl
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
pushl
pushl
call
add
pop
pop
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
pushl
push
pushl
call
add
ret
push
pushl
call
pop
pop
ret
cmpw
sbb
neg
ret
pushl
push
pushl
call
add
test
jne
cmpw
je
ret
xor
inc
ret
push
pushl
call
test
pop
pop
jne
cmpw
je
ret
xor
inc
ret
pushl
push
pushl
call
add
test
jne
cmpw
je
ret
xor
inc
ret
push
pushl
call
test
pop
pop
jne
cmpw
je
ret
xor
inc
ret
push
mov
sub
push
xor
cmp
push
push
je
pushl
lea
call
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
mov
cmp
je
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
mov
cmp
jne
pushl
push
pushl
call
add
cmp
je
mov
andl
jmp
mov
movzbl
lea
push
push
call
incl
mov
movzbl
lea
push
push
call
add
inc
decl
je
cmp
je
cmp
je
sub
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
movl
call
add
mov
jmp
cmp
je
cmpl
ja
pop
pop
jmp
push
pushl
pushl
pushl
call
add
pop
pop
ret
push
mov
push
push
push
mov
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
cmp
push
ja
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
xor
cmp
mov
setne
inc
cmp
ja
call
push
jmp
mov
add
cmp
ja
cmp
mov
mov
je
movb
lea
movl
neg
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
incl
xor
cmp
jbe
mov
cmp
jb
mov
cmp
jb
mov
jmp
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
pushl
mov
call
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
pushl
call
pop
ret
mov
mov
push
pushl
pushl
call
ret
push
mov
sub
push
xor
cmp
push
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jbe
xor
cmp
mov
setne
inc
cmp
ja
call
push
jmp
mov
add
cmp
ja
cmp
mov
mov
mov
mov
je
neg
adc
movb
lea
movl
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
mov
jbe
add
jmp
add
mov
mov
inc
inc
test
mov
ja
test
jbe
cmp
jb
mov
cmp
jb
movb
call
push
pop
mov
mov
xor
jmp
movb
dec
mov
mov
mov
mov
dec
mov
inc
cmp
mov
jb
xor
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
mov
push
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
push
mov
push
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzbl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
or
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
cmpl
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
push
mov
mov
mov
mov
inc
cmpl
mov
jle
lea
push
movzbl
push
push
call
mov
add
jmp
movzbl
mov
movzbl
and
cmp
jne
cmpb
mov
jne
orl
jmp
cmpb
jne
mov
inc
mov
mov
cmp
push
pop
jne
cmpb
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmpb
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
mov
cltd
push
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
lea
cmp
jae
mov
orl
cmp
jb
ja
mov
cmp
jb
mov
cmp
jne
cmp
jne
xor
cmp
jb
ja
cmp
jbe
orl
cmpl
jne
mov
decl
test
jne
xor
cmp
je
mov
mov
mov
mov
jmp
push
pushl
pushl
push
call
xor
add
adc
mov
mov
mov
mov
incl
mov
jmp
test
mov
mov
jne
test
jne
and
je
cmp
ja
jb
cmpl
ja
test
jne
cmp
jb
ja
cmpl
jbe
call
testb
movl
je
orl
orl
jmp
testb
je
andl
mov
jmp
orl
mov
mov
test
pop
je
mov
mov
testb
je
mov
mov
neg
adc
neg
mov
mov
cmpb
je
mov
andl
mov
mov
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
cmpl
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
cmpl
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
mov
push
push
mov
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
mov
je
cmp
ja
jmp
cmp
jne
cmp
je
mov
push
pushl
call
mov
cmp
pop
je
push
call
inc
cmp
pop
mov
je
cmp
jbe
push
pop
jmp
push
pushl
pushl
call
add
test
je
push
push
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
mov
je
mov
cmp
je
pushl
call
cmp
pop
mov
je
push
call
mov
inc
push
push
call
add
cmp
mov
jne
call
movl
call
mov
jmp
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
mov
push
pushl
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
cmp
ja
cmp
jne
cmp
jne
xor
inc
jmp
xor
cmp
je
cmp
je
mov
pushl
call
pop
mov
cmp
je
push
call
pop
inc
mov
cmp
je
cmp
jbe
movl
jmp
push
pushl
pushl
call
add
cmp
je
push
push
push
push
push
call
add
mov
movl
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
pushl
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
movl
call
mov
mov
jmp
pushl
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
add
ret
push
mov
sub
push
push
pushl
lea
call
mov
mov
cmp
jae
mov
cmpl
jle
lea
push
push
push
call
mov
add
jmp
mov
movzbl
and
test
je
mov
movzbl
jmp
cmpb
je
mov
andl
mov
jmp
mov
cmpl
jle
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
call
movl
xor
mov
movb
inc
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
lea
push
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
cmpb
je
mov
andl
pop
pop
leave
ret
cmpl
jne
mov
lea
cmp
ja
add
ret
push
pushl
call
pop
pop
ret
push
mov
sub
cmpw
jne
andl
jmp
cmpw
jae
movzwl
mov
mov
and
movzwl
mov
jmp
pushl
lea
call
mov
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmpb
je
mov
andl
movzwl
movzwl
and
leave
ret
push
mov
push
cmpw
jne
xor
leave
ret
cmpw
jae
movzwl
mov
movzwl
movzwl
and
leave
ret
cmpl
jne
pushl
lea
pushl
push
push
lea
push
push
push
call
add
push
pushl
pushl
call
add
leave
ret
jmp
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
push
pushl
lea
call
mov
xor
cmp
jne
cmp
je
mov
andl
xor
jmp
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
jmp
mov
cmp
jne
pushl
push
pushl
pushl
call
add
jmp
pushl
push
pushl
push
pushl
push
pushl
lea
push
call
add
cmp
jne
cmp
je
mov
andl
mov
jmp
add
cmp
je
mov
andl
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
pushl
push
push
pushl
push
push
call
test
je
lea
push
push
call
test
pop
pop
jge
cmp
je
pushl
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
pushl
call
pop
jmp
xor
cmp
jbe
mov
cmpb
je
inc
inc
cmp
jb
ret
push
mov
sub
mov
xor
mov
cmpl
push
push
push
jge
xor
jmp
mov
mov
xor
xor
inc
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
pushl
call
cmp
pop
je
cmp
je
mov
mov
push
push
push
push
pushl
pushl
push
pushl
call
mov
cmp
mov
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
push
pushl
call
add
push
push
push
pushl
pushl
pushl
push
pushl
call
test
je
lea
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
cmp
jne
mov
mov
mov
mov
mov
push
pushl
add
pushl
lea
pushl
orw
pushl
orw
call
cmpw
mov
je
cmpw
jne
push
push
pushl
call
add
jmp
andl
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
jmp
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
xor
cmp
mov
mov
mov
mov
jne
push
mov
push
push
push
push
push
call
test
je
movl
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmpb
je
inc
cmp
jne
or
or
sub
add
mov
cmp
jle
mov
mov
dec
cmpb
je
inc
cmp
jne
or
or
sub
add
mov
jmp
cmpl
jge
xor
jmp
cmp
jl
mov
cmp
je
cmp
je
xor
inc
cmp
jne
cmp
mov
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jg
cmp
jle
push
jmp
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
cmpb
lea
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
cmpb
jne
jmp
cmp
jle
cmpl
jae
xor
inc
jmp
cmpb
lea
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmpb
jne
jmp
mov
push
push
pushl
push
push
pushl
call
mov
cmp
mov
je
test
mov
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
movl
jmp
push
call
test
pop
je
movl
add
mov
jmp
andl
cmpl
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
test
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
movl
add
jmp
push
call
test
pop
je
movl
add
mov
jmp
xor
test
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
xor
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
mov
cmp
pop
je
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
test
je
push
push
lea
push
pushl
push
pushl
call
mov
add
test
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
test
mov
je
push
call
push
call
pop
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
mov
pushl
lea
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
sub
push
pushl
lea
call
mov
xor
cmp
jne
cmp
je
mov
andl
xor
jmp
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
movl
call
add
jmp
mov
mov
cmp
jne
lea
push
push
pushl
pushl
call
add
jmp
pushl
lea
push
pushl
push
pushl
push
push
push
call
add
cmp
jne
call
movl
cmp
je
mov
andl
mov
jmp
add
cmp
je
mov
andl
pop
pop
leave
ret
push
mov
cmpl
jne
pop
jmp
push
pushl
pushl
pushl
call
add
pop
ret
push
mov
jmp
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
pop
sar
neg
ret
mov
sub
pop
sar
ret
push
mov
push
xor
test
mov
jne
leave
ret
cmp
je
add
inc
cmpl
jne
push
push
inc
push
push
call
mov
test
pop
pop
mov
jne
push
call
pop
mov
mov
jmp
push
call
mov
add
add
mov
pop
test
jne
and
mov
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
push
mov
jne
call
push
push
push
push
push
movl
call
add
or
jmp
push
mov
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
cmp
je
xor
cmp
mov
sete
cmp
mov
jne
mov
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
call
movl
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
mov
cmp
mov
je
mov
sub
pushl
call
mov
cmp
pop
jl
cmp
je
lea
pushl
call
cmp
pop
jne
mov
mov
mov
mov
jmp
mov
mov
mov
inc
lea
cmp
jne
cmp
jae
push
push
pushl
call
add
cmp
je
jmp
cmp
jne
cmp
jge
neg
lea
cmp
jl
cmp
jae
push
push
pushl
call
add
cmp
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
mov
push
push
call
inc
pop
inc
push
call
mov
cmp
pop
pop
je
push
push
call
inc
pop
inc
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
mov
sub
add
mov
inc
neg
sbb
not
and
push
push
call
test
jne
orl
call
movl
push
call
pop
cmp
je
pushl
call
mov
pop
mov
mov
jmp
pushl
call
mov
pop
mov
xor
jmp
push
mov
push
xor
cmp
jne
xor
jmp
push
push
push
call
mov
inc
push
call
mov
cmp
pop
pop
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
sub
push
pushl
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
cmp
je
mov
andl
xor
jmp
push
mov
cmp
jne
pushl
push
call
pop
pop
jmp
movzbl
testb
je
inc
mov
cmp
je
movzwl
movzbl
shl
or
cmp
jne
dec
jmp
movzwl
cmp
je
inc
movzbw
movzwl
cmp
jne
movzwl
cmp
jne
cmp
je
mov
andl
jmp
cmp
je
mov
andl
xor
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movl
mov
jmp
pop
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
cmp
adc
inc
add
mov
pop
ds
add
je
push
inc
outsl
outsb
je
js
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
gs
jne
arpl
js
add
je
jne
jb
outsb
je
push
add
add
dec
gs
gs
xor
cs
insb
add
add
outsb
je
insb
insb
cs
insb
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
gs
jne
arpl
js
add
outsb
fs
gs
jne
arpl
add
add
fs
gs
jne
arpl
add
add
imul
outsl
jne
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
gs
je
push
jb
arpl
jae
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
outsb
insl
popa
jo
imul
arpl
outsb
add
add
push
imul
insb
insb
outsl
arpl
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
push
gs
insl
gs
push
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
and
insb
outsl
arpl
imul
inc
add
inc
add
inc
add
ss
add
inc
add
imul
outsb
and
arpl
je
outsl
outsb
add
add
inc
add
inc
add
enter
aaa
inc
add
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
arpl
loopne
add
add
add
add
add
add
add
add
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
insl
imul
outsb
arpl
gs
outsl
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jae
gs
inc
jne
arpl
outsb
xor
add
add
push
inc
push
dec
xor
cs
dec
dec
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
add
add
movsb
stos
inc
add
add
add
inc
add
sbb
mov
inc
add
inc
add
in
inc
add
stos
inc
add
adc
insb
stos
inc
add
cmovno
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
add
add
add
cmp
add
cmp
add
add
inc
outsl
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
outsl
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outsb
popa
gs
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
insl
imul
imul
jne
je
jb
outsw
jb
daa
add
add
pusha
fs
popa
insl
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outsb
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
insl
popa
outsb
popa
gs
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outsb
gs
add
add
jne
popa
insb
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
insb
insb
add
add
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
add
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
lods
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
add
inc
add
scas
inc
add
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
inc
add
add
lods
inc
add
inc
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
lret
in
scas
inc
add
scas
inc
add
mov
add
inc
add
stos
inc
add
mov
add
lret
inc
add
scas
inc
add
aas
aas
and
add
add
insb
popa
je
add
jnp
outsl
jb
add
add
outsl
outsb
sub
sub
insb
popa
je
sub
insl
gs
jb
add
add
jae
outsb
gs
add
insb
outsl
outsb
and
add
imul
add
outsl
jb
and
add
popa
jb
add
add
imul
insb
insb
imul
add
gs
insb
imul
sub
cs
add
and
outsl
ja
add
pop
add
jae
add
pusha
je
insl
jo
popa
je
sub
insl
gs
jb
daa
add
add
dec
dec
add
add
arpl
cmp
outsb
pop
jo
jb
add
add
imul
popa
jns
add
imul
add
pusha
popa
outsb
outsl
outsb
jns
outsl
jne
and
insl
gs
popa
arpl
add
add
add
outsb
gs
arpl
sub
gs
jo
popa
je
sub
insl
gs
jb
add
cmp
add
outsb
imul
outsb
and
jae
daa
add
jne
imul
je
jne
je
add
popa
jae
and
add
jne
and
add
arpl
insb
popa
jae
and
add
add
imul
arpl
add
add
sub
add
gs
gs
and
inc
and
add
push
cmp
add
add
bound
cmp
add
add
jo
outsl
je
arpl
cmp
add
imul
add
add
jb
jne
insb
and
add
add
popa
je
arpl
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
je
jne
je
jb
push
jb
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
outsb
jae
jb
arpl
and
insb
jo
jb
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
fs
jb
arpl
and
insb
jo
jb
add
add
pusha
popa
fs
jae
outsl
jb
add
pusha
jbe
outsl
jb
imul
jbe
outsl
jb
imul
add
add
add
add
add
jge
and
arpl
jae
and
add
insb
popa
je
insb
and
add
inc
push
cmp
add
add
jbe
insb
popa
je
insb
add
add
and
insb
popa
je
insb
add
add
outsb
jae
add
add
outsb
gs
outsl
jne
insb
add
bound
insb
add
add
ja
push
add
dec
dec
dec
push
dec
add
imul
add
add
imul
pop
imul
pop
imul
pop
ja
xor
add
pop
pop
imul
insb
outsl
popa
je
add
insb
outsl
outsb
add
add
imul
jb
add
add
popa
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
.byte
je
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
test
inc
add
push
add
inc
add
push
add
add
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
les
pop
dec
dec
add
inc
add
dec
add
inc
add
push
add
les
pop
dec
dec
add
inc
add
push
add
ret
inc
add
dec
add
ret
inc
add
push
add
ret
inc
add
inc
add
dec
push
add
inc
add
dec
add
dec
inc
add
add
inc
add
inc
add
dec
add
inc
add
dec
add
add
pop
add
inc
add
push
add
ret
inc
add
push
add
inc
add
inc
add
ret
inc
add
push
add
ret
inc
dec
push
add
ret
inc
push
inc
add
ret
inc
push
inc
add
ret
inc
push
dec
add
push
push
add
inc
inc
add
inc
add
inc
dec
add
inc
add
add
inc
add
dec
add
inc
add
push
add
add
push
add
ret
dec
dec
push
add
inc
add
dec
add
inc
add
inc
add
roll
push
push
add
roll
push
inc
add
roll
push
dec
add
dec
add
push
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
dec
add
roll
push
dec
add
roll
push
dec
add
inc
add
dec
add
rolb
push
inc
add
rolb
push
pop
add
rolb
push
push
add
rolb
push
push
add
pop
add
push
push
add
push
inc
add
inc
push
add
inc
add
dec
push
add
add
push
add
add
inc
add
add
push
add
add
dec
add
add
inc
add
add
push
add
add
push
add
inc
add
inc
add
rolb
dec
inc
add
inc
add
dec
add
rolb
pop
dec
add
inc
add
dec
add
rolb
dec
dec
add
mov
dec
add
mov
dec
add
mov
inc
add
mov
push
add
mov
inc
add
push
add
push
dec
add
push
add
inc
push
add
push
inc
add
push
inc
add
sbb
adc
add
or
adc
or
add
push
add
jb
imul
outsl
jb
imul
add
incb
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
add
nop
out
inc
add
inc
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
incl
add
add
add
sub
inc
add
inc
add
incl
add
add
add
or
add
add
add
enter
add
add
inc
add
add
add
enter
add
add
add
add
add
add
enter
enter
enter
add
add
add
add
add
add
incl
add
add
add
ror
add
inc
add
add
add
inc
add
leave
inc
add
add
add
add
add
add
add
incl
add
add
add
or
inc
add
jecxz
add
inc
add
add
add
inc
add
inc
add
leave
inc
add
add
add
add
jecxz
add
add
add
add
add
incl
add
add
add
pop
leave
inc
add
jecxz
add
add
add
add
add
add
add
leave
inc
add
add
add
jecxz
add
incl
add
add
add
test
inc
add
leave
inc
add
add
add
lret
or
inc
add
add
add
add
add
add
add
incl
add
add
add
lock
inc
add
lret
add
add
dec
lret
push
lret
or
inc
add
add
add
add
add
add
add
incl
add
add
add
cmp
inc
add
out
inc
add
add
add
add
add
add
xchg
lret
mov
lret
add
add
shr
inc
add
add
add
add
add
incl
add
add
add
test
inc
add
out
inc
add
lret
add
add
loopne
inc
add
lret
or
inc
add
add
add
out
inc
add
add
add
add
add
incl
add
add
add
ror
inc
add
inc
add
inc
add
add
add
inc
add
lret
inc
add
lret
add
add
or
inc
add
add
add
add
add
incl
add
add
add
sbb
inc
add
add
pushf
popf
add
fs
add
dec
sub
add
nop
lret
inc
add
add
add
inc
add
add
add
add
add
add
incl
add
add
add
jnp
inc
add
add
add
inc
add
add
add
incl
add
add
add
jo
inc
add
add
add
incl
add
add
add
add
decl
inc
add
add
decl
xor
add
xor
add
incl
add
add
incl
add
add
incl
add
add
xor
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
add
pushl
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
pop
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
insl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
outsl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
jno
add
add
add
incl
add
add
incl
add
add
ljmp
jb
add
add
add
add
incl
add
add
incl
add
add
call
jb
add
add
add
incl
add
add
incl
add
add
cmp
add
inc
add
add
add
incl
add
add
incl
add
add
decl
jbe
add
add
add
incl
add
add
incl
add
add
incl
add
add
jbe
add
add
add
incl
add
add
incl
add
add
incl
add
add
jns
add
add
add
incl
add
add
incl
add
add
incl
add
add
jp
add
add
add
incl
add
add
incl
add
add
incl
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
add
incl
add
add
incl
add
add
incl
add
add
nop
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
pushf
inc
add
add
add
add
add
pushf
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
out
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
clc
inc
add
add
add
incl
add
add
add
incl
add
add
push
add
add
add
incl
add
add
incl
add
add
incl
add
add
outsb
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
outsl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
jg
add
add
add
incl
add
add
incl
add
add
incl
add
add
addb
add
add
incl
add
add
incl
add
add
incl
add
add
addb
add
add
xor
and
adc
add
sub
sbb
or
ds
push
push
push
inc
cmp
sub
sbb
or
xor
and
adc
add
xor
and
adc
add
adc
das
daa
pop
pop
sysret
sub
xor
cmp
inc
and
pop
das
getsec
pop
aas
pop
es
cs
ss
ds
and
adc
sub
xor
cmp
and
sub
xor
cmp
and
sub
xor
cmp
and
sub
xor
cmp
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
aas
aaa
das
daa
pop
pop
sysret
ds
push
push
push
cmp
adc
or
add
add
or
or
movups
adc
push
adc
sbb
add
adc
add
or
pop
sbb
and
xor
daa
cmp
xor
sbb
add
ud2
or
or
or
or
pop
add
pop
add
add
or
add
push
or
or
pop
add
add
add
add
add
add
or
push
or
add
pop
add
add
or
or
add
push
or
add
or
push
or
add
or
add
push
pop
or
add
or
push
add
add
or
or
add
or
or
add
lsl
or
add
or
pop
add
push
add
add
push
add
push
or
add
or
or
sldt
add
add
or
or
push
or
or
pop
or
add
sldt
or
or
or
add
add
add
or
push
or
push
or
or
or
pop
or
or
or
push
add
add
or
or
push
add
push
or
or
add
add
or
wbinvd
add
or
or
add
add
or
add
add
add
or
syscall
add
or
pop
add
add
add
add
add
push
add
or
str
or
add
add
pop
add
add
push
add
push
add
or
or
push
or
add
or
pop
or
add
ud2
add
or
push
add
prefetchw
or
pop
add
add
or
pop
or
or
add
push
or
add
push
pop
add
or
add
adc
sbb
movhps
add
or
push
and
add
adc
add
addb
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
shlb
add
add
add
aas
inc
push
bound
pop
popa
insb
insb
outsl
arpl
je
inc
inc
add
inc
add
add
add
aas
inc
push
gs
gs
imul
inc
inc
add
add
add
mov
inc
add
add
add
aas
inc
push
bound
pop
arpl
je
jae
fs
inc
add
and
inc
add
add
add
aas
inc
push
bound
pop
je
jo
imul
add
add
and
inc
add
add
add
aas
inc
push
pop
pop
outsb
outsl
outsb
pop
jb
je
pop
outsl
bound
arpl
je
inc
inc
add
mov
inc
add
add
add
aas
inc
push
je
jo
pop
imul
xor
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
pop
cmpsl
inc
add
add
add
cmpsl
inc
add
add
add
inc
add
add
add
cmpsb
inc
add
add
add
add
je
inc
add
add
add
inc
add
add
adc
inc
add
add
add
movsl
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
lods
mov
add
pushf
mov
add
mov
add
mov
add
js
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shlb
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
inc
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
inc
add
inc
add
mov
inc
add
out
inc
add
add
add
call
inc
mov
and
inc
add
add
add
aas
inc
push
inc
dec
popa
insl
gs
outsl
fs
inc
add
inc
add
add
add
aas
inc
push
arpl
jb
outsl
fs
inc
add
and
inc
add
add
add
aas
inc
push
jo
dec
popa
insl
gs
outsl
fs
inc
add
add
and
inc
add
add
add
aas
inc
push
inc
dec
popa
insl
gs
je
je
jae
outsl
fs
inc
add
add
inc
add
add
add
aas
inc
push
jo
push
fs
inc
add
add
add
decl
inc
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
out
inc
add
add
add
out
inc
add
add
add
add
add
add
add
add
add
add
jg
jg
jg
clc
out
inc
add
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
inc
mov
add
add
add
add
add
add
add
add
add
add
add
and
add
add
or
add
inc
add
add
add
add
arpl
pusha
aaa
das
sbb
pop
mov
loopne
mov
popa
jns
pop
jmp
ss
arpl
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
clc
sbb
orps
sbb
ja
loopne
std
inc
pop
orl
pusha
xor
cmp
lds
stos
adc
or
mov
jle
xor
fcomi
rolb
pushf
ret
repz
ret
cld
out
jae
mov
out
mov
jno
outsl
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
xorl
mov
xor
xlat
push
mov
inc
jle
sti
push
push
pop
xorb
cmpsb
cld
int3
aam
into
adc
shrl
rcll
jnp
sub
and
push
xchg
cmp
push
jne
cmc
push
add
add
cmovle
mov
lret
mov
lods
jno
inc
lods
sub
lock
jno
inc
lods
or
sub
pop
lods
mov
inc
clc
cltd
xor
cmp
cmpl
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
fwait
xchg
xchg
cli
lds
xchg
fistpll
mov
cwtl
shll
mov
add
pop
lods
mov
inc
clc
cltd
jno
mov
inc
wbinvd
sub
insl
sti
mov
ret
pop
fstpl
arpl
mov
adc
int3
fs
cli
jae
inc
pop
lods
mov
inc
clc
cltd
sahf
xor
lods
in
cmp
mov
imul
mov
loop
push
das
mov
lods
mov
inc
clc
cltd
dec
add
sub
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
test
mov
push
pop
push
adc
out
xchg
jmp
push
dec
push
hlt
mov
dec
loopne
int
xor
fs
jne
cmp
xlat
iret
lock
add
arpl
or
cmp
jp
cmp
loop
insl
adc
cld
inc
xchg
cmp
push
out
loope
and
scas
scas
sbb
xor
movsl
and
xchg
jae
mov
daa
push
xlat
insb
jmp
xor
daa
test
jmp
sub
mov
lods
out
and
je
jg
mov
insl
das
out
pusha
nop
inc
int
add
into
push
sub
out
dec
fisttpll
mov
jb
pop
dec
inc
and
adc
add
jnp
lods
push
imulb
nop
outsb
mov
lcall
test
into
pop
mov
push
push
mov
cmp
cld
fs
xchg
cs
or
cmp
fcmovnb
sub
scas
mov
cmp
jle
mov
fucomp
fpatan
repz
adc
lret
lret
xchg
cli
and
icebp
sub
incb
mov
out
and
dec
in
sub
cmp
popf
add
int3
xor
ret
or
scas
pop
lock
push
mov
fimull
daa
daa
mov
out
dec
cmp
das
aas
mov
rcrl
dec
lret
pop
sti
in
rorl
das
xchg
loopne
daa
fsubl
lcall
and
jmp
inc
scas
dec
jecxz
and
pushf
xchg
xor
mov
or
int
mov
cmpb
shrl
mov
cs
sbb
sbb
push
inc
cs
xor
sub
mov
int
push
pop
hlt
sbb
lods
popa
push
jp
test
pop
xchg
ds
aas
sub
jmp
mov
daa
and
xchg
or
xor
lods
dec
pushf
mov
jbe
adc
aaa
push
adc
pushf
fstpt
sti
inc
sti
sbb
sbb
out
ret
jl
hlt
jmp
mov
jp
jne
or
bound
insl
xchg
cmp
sub
xor
jge
popf
sti
jge
filds
adc
mov
es
fists
jne
sbb
pushf
repz
pop
xchg
pop
and
mov
and
orb
dec
fcmovnbe
pop
mov
cld
cmp
xor
cli
sbb
jae
mov
repnz
xchg
inc
ljmp
test
cmpsl
adc
fsubrl
xor
iret
dec
adc
pop
mov
sbb
loope
push
mov
dec
xor
cmp
in
sub
push
icebp
lret
xchg
jle
dec
gs
inc
xor
jge
cwtl
hlt
dec
lods
dec
sbb
shlb
lds
mov
mov
push
xchg
mov
iret
pop
dec
pop
sub
loop
pop
mov
stos
push
push
enter
ljmp
mov
add
dec
cwtl
sbb
or
shrb
jne
inc
adc
cs
mov
cmp
sub
pop
outsb
nop
cs
push
pusha
cmp
sarl
jmp
push
fs
mov
js
push
fistpll
or
aas
enter
leave
jo
and
lea
sti
cmc
test
scas
es
mov
test
lahf
and
cmp
jmp
lcall
repz
sbb
cs
fldl2e
das
sarl
add
icebp
xor
in
neg
xor
out
lock
cmp
shl
adc
push
mov
push
sub
push
xchg
lock
push
mov
in
jge
pop
aaa
sbb
dec
daa
repnz
pop
pop
cmp
cmp
push
jne
mov
rclb
sub
adc
out
ret
enter
ds
or
push
imul
pop
adc
in
repnz
mov
and
fadds
mov
fnsave
in
es
std
mov
xor
rorb
jecxz
adc
ljmp
sbb
hlt
int
mov
je
sti
aam
push
push
pop
xlat
xor
mov
test
sbb
xchg
int3
push
negl
or
test
inc
cli
cmpsb
stos
mov
dec
pop
shll
je
pop
fimuls
imul
ficoml
jg
jne
scas
or
sbb
out
jge
lret
and
inc
shrb
aaa
mov
cmc
mov
insb
adc
jne
call
out
inc
jno
jo
jge
xchg
xchg
inc
loopne
fmuls
data16
cld
add
adc
in
call
iret
setbe
push
inc
loop
les
xor
sub
outsl
dec
rcrl
dec
cs
insb
xor
testb
fisubrs
imull
stos
rorl
sbb
jnp
gs
lcall
pop
jb
into
das
xor
fidivs
xor
addr16
hlt
ret
and
lods
xchg
jp
mov
xchg
repnz
inc
or
dec
sbb
mov
sbb
or
ret
xor
mov
pop
mov
sbb
shll
pop
pop
stos
movsl
adc
notl
cs
scas
xchg
pop
pop
push
or
aas
es
push
pushf
enter
outsb
dec
ss
jg
pop
sbb
shr
push
imul
inc
data16
jno
push
push
psrld
inc
mov
mov
jmp
xor
icebp
fs
xchg
roll
fisubrl
roll
pop
push
jg
data16
scas
in
dec
fidivl
hlt
lea
pop
cmp
icebp
fs
add
mov
xchg
fwait
mov
in
xor
dec
xchg
movsb
jns
pop
jae
fiadds
mov
mov
clc
test
insl
arpl
adc
adc
xor
inc
data16
push
cmp
nop
xchg
repnz
repz
cmp
iret
xor
inc
pop
mov
test
cmpsb
cmpsb
cmc
xchg
sarb
les
sub
add
daa
scas
push
sti
sbb
loope
or
mov
add
mov
ds
addl
fs
ret
mov
push
or
sub
cs
pushf
lods
lret
sahf
aas
imul
cmp
xchg
cmpsb
cmp
or
pop
shll
jge
arpl
cmp
sbb
add
pop
std
or
shll
ds
movsb
addr16
adc
adc
cli
pop
fidivs
ja
xor
adc
pop
je
inc
xchg
paddusw
sub
in
loope
out
xchg
hlt
push
mull
xchg
add
add
lods
scas
mov
lock
and
loop
into
out
into
and
jne
shlb
insb
scas
je
loop
out
xchg
jne
sub
and
in
xor
xchg
xor
popf
shrb
xchg
fsubl
adc
xor
lds
outsl
and
xchg
out
cmp
cmp
sub
mov
mov
insb
ds
and
fistpll
fnstenv
push
ja
in
mov
mov
inc
pop
fbld
add
imul
push
popa
ds
xor
fbstp
mov
movsl
mov
sbb
insl
cmp
adc
lods
inc
mulb
aaa
jg
dec
add
cld
fsubs
or
ja
dec
jle
xorb
and
mov
and
mov
mov
and
mov
aam
jb
xchg
lcall
inc
mov
inc
xor
inc
jb
pop
xlat
addr16
jg
sbb
ja
jg
sahf
mov
add
xor
xchg
and
mov
iret
mov
push
push
mov
cli
mov
mov
fisubl
and
cmp
in
les
dec
lock
jmp
jge
xchg
cwtl
mov
sub
sbb
dec
aaa
push
inc
xchg
add
pop
xor
stos
push
pop
xchg
ficoml
mov
mov
je
cmp
std
mov
in
jnp
je
adc
sarb
mov
cmp
int3
mov
sbbl
inc
adc
and
inc
ret
notb
vmread
cmovs
adc
hlt
mov
nop
pop
pop
sbb
sahf
jb
cmp
fcompl
lret
add
jno
cmp
ficoms
mov
ja
mov
fcoml
lds
scas
shrl
pushf
fs
clc
fstpt
cmp
jae
inc
jnp
fisttpl
mov
test
stos
cmp
repz
popf
pop
mov
or
adcb
test
jno
sbb
call
or
cmpl
stos
rep
lods
out
sbb
add
out
push
adc
cmc
inc
mov
fcmovu
rol
pop
lods
adc
mov
in
xor
sub
mov
cmp
xor
orb
rcrl
mov
pop
xchg
outsl
mov
or
movl
fs
inc
mov
jno
stos
pop
sti
pop
popf
test
fiadds
mov
xchg
in
sbb
std
adc
adc
jl
lea
xchg
adc
fisubrl
push
xor
or
inc
jecxz
aas
add
aas
insl
jecxz
roll
mov
sub
jecxz
ret
test
mov
xchg
push
rorw
popa
cli
negb
mov
repnz
daa
in
mov
addl
das
push
xchg
jp
fstpl
adc
sub
push
xor
mov
movsb
pop
daa
pop
inc
outsb
push
movsl
mov
sub
mov
push
insb
idiv
push
lock
sub
adc
loopne
mov
jg
cmp
xor
xchg
dec
xlat
add
shlb
adc
and
mov
dec
testb
jge
adc
sbbl
out
push
lahf
les
icebp
mov
sahf
lds
jmp
dec
and
add
out
sarl
arpl
jg
or
leave
sbb
jecxz
mov
cmp
lea
push
and
leave
mov
mov
push
js
push
pop
and
int
out
roll
mov
lds
mov
subl
push
mov
jae
cmpl
push
mov
mov
adc
sub
cmp
or
movsb
je
lcall
dec
push
lea
pop
push
fdivrs
pop
mov
cli
jge
lcall
add
arpl
outsl
dec
addb
mov
out
mov
popf
iret
cld
dec
mov
test
mov
icebp
addl
leave
add
jnp
shlb
fisttpl
aad
ljmp
and
mov
call
insb
jl
push
sub
mov
jae
cmp
clc
pop
shrl
ret
push
mov
dec
add
mov
sbb
and
ds
and
in
sbb
je
xchg
push
loopne
je
fmuls
mov
scas
sbb
push
and
mov
mov
int
fucomip
mov
push
aaa
lcall
mov
sbb
fucomp
pop
sbb
daa
loop
and
inc
cmp
cmp
add
lret
sub
xor
int3
sarb
bswap
stc
into
add
ds
inc
iret
hlt
pop
add
aaa
sbb
lods
mov
cmpsl
sarl
orl
dec
xchg
push
test
test
lds
push
sbb
fxch
lds
imul
pushf
dec
sub
add
xchg
mov
ret
cmp
shll
mov
cmp
insl
or
sbb
add
pop
in
sbb
mov
ret
fadd
outsb
pop
sub
out
pusha
pushf
dec
data16
mov
xchg
dec
pop
mov
dec
mov
pop
sbb
and
mov
cs
and
shll
and
pshufw
sub
sbb
dec
push
ret
mov
jmp
sub
ret
ss
fwait
cmp
bound
jl
dec
mov
add
or
mov
add
inc
pop
mov
mov
add
das
add
fidivl
pop
rcrl
pop
xchg
pop
sbb
je
inc
xchg
int3
add
mov
lcall
jmp
or
sbb
pushf
mov
popf
sub
lret
cli
lcall
jge
push
cltd
leave
sub
lret
les
cltd
push
mov
cmp
mov
pop
scas
dec
jge
xchg
loope
lcall
sbb
mov
push
arpl
outsl
in
out
sbb
imul
adc
js
inc
test
lret
xchg
pushf
jmp
or
pop
lret
xchg
je
icebp
mov
idivl
imul
pop
sbb
inc
sbb
mov
je,pn
dec
mov
jp
js
sbbb
loop
sub
mov
mov
add
enter
add
add
scas
sbb
xor
sub
adc
push
mov
sbb
insb
jo
or
sbb
cmp
sahf
push
pusha
jg
mov
or
scas
imul
aam
pop
dec
nop
out
sbb
jge
mov
cmp
jl
xor
xchg
ss
xchg
fmul
out
loopne
pop
clc
incb
mov
es
lods
jbe
pop
cld
xor
insl
adc
fnstenv
cmc
in
inc
cwtl
scas
out
add
push
nop
sarl
pop
jnp
lds
xor
fs
and
daa
push
cmp
lea
loopne
rcrb
fadd
push
or
xor
pushf
pop
popf
repz
add
inc
pop
gs
xor
faddl
pop
jbe
fbld
add
xchg
lret
inc
scas
jns
dec
int
sbb
mov
mov
mov
stos
jno
xor
push
or
jg
sub
es
cmp
dec
xchg
repz
inc
push
pop
repnz
sub
mov
lds
lods
ret
jge
mov
dec
jl
imul
lods
lcall
aam
popa
and
ret
lcall
mov
rcll
push
sub
jp
imul
mov
adc
xor
xchg
sbb
out
xor
lods
mov
pop
sbb
aam
hlt
jno
pop
push
div
dec
push
sub
jle
or
pop
pop
sahf
clc
aaa
mov
push
fdivrl
or
adc
in
aad
sub
jge
adc
subb
mov
mov
lea
push
test
pop
loop
or
adc
repnz
in
out
push
mov
aas
pushl
sbb
mov
fimull
sub
andb
xor
repnz
jl
sbb
jl
ret
out
inc
sbbl
ja
daa
cwtl
jo
or
push
adc
or
push
ret
mov
daa
inc
mov
test
aas
xchg
mulb
lahf
addl
xor
and
fldt
inc
int3
push
adc
int
jmp
mov
pusha
xor
jb
sub
mov
add
in
es
cli
jne
push
xor
mov
xor
fidivl
pop
ss
cltd
fprem1
orb
sbb
fcmovb
or
dec
test
jmp
shlb
adc
mov
aam
pop
mov
push
out
or
inc
jecxz
div
inc
pushl
stc
jle
push
fidivrs
popa
imul
popa
dec
sbb
push
push
repz
push
jle
popl
cmc
adc
jno
dec
in
dec
call
sti
sbb
push
es
mov
mov
sahf
popf
popa
sub
loop
loopne
movsl
push
xchg
into
aam
popa
mov
inc
sub
jecxz
or
nop
popf
push
not
add
aas
jge
dec
mov
jb
test
jns
je
cmpsl
lcall
mov
aam
sbb
ret
mov
mov
int
fdivs
jo
inc
lock
pop
sub
xor
rclb
mov
jl
inc
loope
pop
fstpt
imul
inc
push
jp
xor
add
into
pop
lret
loopne
es
mov
pop
add
jae
dec
fstpl
loope
insb
mov
rcrl
mov
pop
sub
sub
sub
mov
dec
xchg
sub
push
test
out
leave
sub
int
jl
add
into
add
pusha
mov
jp
jae
in
int
in
push
add
out
out
pusha
mov
out
leave
sub
pop
xor
dec
sbb
loopne
negl
incb
mov
mov
xor
test
movsl
xor
pop
and
mov
cmp
lea
lcall
pop
mov
mov
push
sahf
scas
ja
ljmp
dec
idivl
dec
std
jp
cmp
repz
add
int3
sbb
dec
cmp
jecxz
insl
mov
out
mov
jnp
adc
arpl
divl
in
lods
stc
mov
mov
mov
repz
push
jnp
pop
push
and
out
lcall
push
push
sbb
test
hlt
mov
dec
add
jns
jb
lods
sub
adc
mov
fildl
mov
lods
jl
xchg
ljmp
mov
and
mov
mov
lret
scas
lret
jnp
mov
daa
and
mov
inc
repnz
lea
icebp
lcall
add
xor
jecxz
adc
jnp
jp
sar
enter
jle
ss
dec
icebp
loop
rolb
jne
bound
or
loopne
stos
int3
scas
adc
repnz
aas
xor
or
jns
mov
mov
push
mov
stos
repz
adcl
out
aam
lret
lret
sbb
mov
dec
fbld
mov
lcall
icebp
mulb
xor
jl
in
mov
mov
ljmp
inc
dec
das
popf
xchg
xchg
sub
sbb
outsb
and
dec
pop
add
jo
ljmp
or
hlt
mov
hlt
add
push
out
pop
dec
cmp
adc
inc
sub
jg,pt
cmpsl
test
leave
in
ljmp
popf
jns
stos
cwtl
sub
or
jne
pushf
dec
sbb
inc
adc
fmul
or
stos
int
test
mov
loopne
mov
jmp
sbb
sub
shrl
cmp
pop
and
out
nop
cmpsb
mov
mov
and
or
jmp
pusha
and
add
xlat
fnsave
pop
dec
xchg
inc
mov
test
dec
sub
or
dec
ret
xor
dec
loope
scas
ja
outsb
pop
push
sbbb
out
mov
mov
daa
mov
mov
inc
pop
xor
bound
jecxz
int
lret
mov
repnz
and
push
cmp
mov
pop
repz
push
jns
rcr
push
xchg
sbb
stos
addb
dec
sub
pop
pop
mov
xor
adc
or
jg
bound
and
lret
dec
lcall
js
sbb
loope
jmp
xor
dec
xchg
imul
pop
jle
loop
lods
sub
sub
subb
sub
lret
cmc
jns
test
imul
sbb
psrlq
cmp
mov
push
xlat
mov
int
sub
xchg
mov
pop
or
push
lods
mov
adc
cmp
cmp
sbb
mov
negl
cmp
inc
icebp
clc
mov
fidivrl
inc
lret
and
cvtps2pi
fistps
insl
sub
lds
lcall
dec
xchg
out
inc
xor
cmp
jecxz
icebp
scas
inc
pop
les
int
movsb
addb
mov
nop
pop
addb
xchg
hlt
xlat
arpl
js
jns
insl
mov
mov
in
push
cmpsl
add
fistpl
and
pushf
pop
lock
inc
cmc
inc
pop
inc
or
lods
inc
repz
int
int3
and
xchg
call
xchg
jp
or
repz
arpl
cmp
and
loop
lahf
cmp
aam
repnz
inc
call
enter
les
lcall
into
xchg
xlat
std
aas
mov
xor
or
lock
lds
std
sbb
push
cmp
loop
add
hlt
xorb
and
js
cmp
icebp
outsl
mov
outsb
jmp
test
mov
int3
mov
hlt
mov
out
ja
pop
cmpsb
lock
push
and
rcrl
sbb
and
pop
mov
sbbl
into
hlt
lret
ja
fidivs
or
popl
and
xchg
aas
xchg
in
xchg
mov
xor
mov
lock
and
jnp
aaa
push
pop
fcoms
shl
adc
filds
or
mov
cmp
adc
mov
rclb
adc
push
mov
nop
and
test
shlb
pushl
sub
testb
push
sub
sub
orl
pop
test
cmpb
dec
dec
fcoml
es
imul
xor
push
daa
pop
enter
imul
xchg
icebp
mov
pop
inc
daa
jb
loope
test
shll
repz
xchg
push
fnstsw
cmp
pushf
dec
lds
or
jecxz
push
xchg
cmp
pop
add
sbb
mov
fs
in
lahf
aaa
or
sti
icebp
sub
sbb
cmp
xchg
and
popa
int
jne
test
outsb
or
add
push
scas
pop
pop
jns
pop
bound
in
ja
adc
das
aaa
push
push
mov
cmpl
cmp
sub
sahf
mov
mov
clc
jl
movsl
nop
and
sbb
sbb
mov
repz
icebp
fucomp
das
insl
imul
cld
std
mov
es
cld
shlb
jb
cld
into
pop
adc
in
sub
and
jl
dec
sti
push
push
push
and
ja
out
ficoml
mov
incb
pop
jmp
ret
push
shll
add
mov
sahf
cmc
dec
adc
les
push
aaa
pop
jbe
mov
or
in
and
mov
mov
pop
or
shlb
add
nop
push
sbb
mov
or
and
pop
mov
adc
xchg
in
iret
in
xchg
cmp
or
add
sbb
push
imul
jle
sbb
testl
outsl
mov
fcmovnbe
mov
mov
cmp
loope
jg
lret
xchg
out
cmpsl
jae
enter
ret
subl
repz
les
das
sbb
cmpsl
mov
or
fisubs
cs
repz
cltd
fiadds
push
xchg
cmp
jmp
gs
mov
int
sahf
or
movsl
test
cmp
leave
movsb
push
scas
pushf
lds
sub
xor
aam
mov
jmp
mov
rcrl
sbb
jae
cmp
lret
pop
sub
push
inc
push
jmp
xor
or
inc
pop
stos
cmp
sub
test
sbb
or
sub
mov
pop
mov
cmp
jmp
cld
mov
iret
test
fs
sub
xchg
mov
adcl
stos
mov
iret
cwtl
sbb
mov
jo
loopne
push
adc
fmul
mov
adc
mov
xchg
out
dec
inc
sahf
jmp
fbld
gs
fdivrl
ds
add
call
xchg
inc
in
out
das
xchg
fsts
xorl
or
cltd
gs
cmp
push
rcrl
aad
inc
mov
and
cmp
rcrb
roll
push
int
xchg
jl
fs
adc
jecxz
jne
mov
in
pop
adc
and
add
out
cld
adc
cltd
cmp
int
mov
mov
stc
repz
sub
adc
dec
xchg
icebp
cld
out
inc
push
xor
rcrb
fdivr
outsl
dec
fisubl
pop
test
mov
popfw
mov
cmc
pop
cli
lods
mov
adc
cmpsb
mov
and
xchg
loope
mov
mov
fdivl
mov
int3
cmp
jns
das
sbb
xor
lods
dec
ss
and
mov
in
pop
jno
ret
adc
shrb
sbb
lret
repnz
iret
jmp
push
add
mov
and
pop
nop
popl
inc
adc
mov
fmulp
xorb
aas
test
sbb
pop
in
sub
fprem
ds
push
add
lea
push
ret
sti
es
xor
mov
xor
pop
testl
jo
push
jecxz
dec
sbb
pushf
inc
mov
mov
loopne
sti
incl
xchg
in
or
mov
jne
pop
test
or
sub
cmc
pop
cltd
inc
xor
adcb
mov
imul
enter
loop
aas
or
movsl
mov
jb
mov
out
cmp
jno
lock
bnd
or
xchg
cld
xchg
xchg
jae
lcall
outsb
out
lds
lods
test
out
les
je
loop
or
add
push
pushl
dec
adc
mov
push
ds
into
dec
and
test
or
std
sub
push
sub
in
pop
push
rcr
mov
test
mov
addr16
outsb
or
mov
mov
push
adc
int3
xor
xchg
sub
lret
sub
ret
jl
sbb
add
pop
inc
xchg
xor
inc
aad
lret
pop
adc
mov
and
sub
fcoms
jg
jns
sbb
fldcw
int3
ljmp
mov
popf
sub
scas
inc
jae
dec
repnz
out
dec
adc
scas
mov
js
nop
sub
jne
imul
lock
inc
jne
jle
mov
arpl
mov
mov
xchg
push
mov
pop
aad
adc
jo
mov
pop
jmp
int3
subl
imul
std
and
xor
dec
push
xchg
adc
xor
or
stc
clc
daa
dec
xchg
loope
test
ficoms
loopne,pn
nop
push
adc
not
sbb
cmp
pop
bound
push
mov
ds
data16
sti
rolb
iret
inc
cmp
pop
push
pop
outsl
jbe
loope
je
push
inc
push
hlt
loop
cmpsl
pop
hlt
bound
cmp
mull
mov
jle
dec
jecxz
xor
inc
and
mov
xchg
push
cmpsb
les
outsl
insl
rcrl
rclb
mov
dec
sbb
pop
loope
and
movsb
std
movsb
push
push
dec
imul
outsl
xor
popf
fildl
mov
in
dec
sub
shl
add
movq
es
sbb
lds
mov
push
and
sub
fwait
push
fsub
scas
jle
or
and
lock
popf
add
dec
scas
xor
insl
inc
nop
out
and
test
mov
sahf
das
lea
sbb
mov
inc
jnp
lahf
je
adc
jb
les
mov
popa
pop
sbb
int
fstpt
jbe
ret
pushf
leave
pop
cltd
and
scas
mov
sub
in
mov
adc
addr16
jns
fnstsw
xchg
jmp
pop
pushf
push
xor
cwtl
and
lcall
mov
rcr
popl
cmp
cmp
and
in
pop
fidivrs
ret
sbb
fdivrs
and
add
or
adc
cwtl
pop
add
and
or
inc
sbb
push
js
mov
cmp
stc
minps
sub
leave
push
adc
mov
jmp
insb
popl
push
hlt
or
dec
lcall
mov
and
in
hlt
inc
inc
add
mov
call
repnz
fs
test
inc
xchg
push
mov
push
lahf
xchg
jb
in
mov
xchg
ret
dec
mov
adc
sub
out
xor
dec
cmp
cmp
fiaddl
into
xchg
sti
fbld
cmp
ret
xchg
subl
sbb
jmp
xor
sbb
hlt
cmp
cltd
xor
add
arpl
sub
jo
or
icebp
pop
cli
adc
icebp
movl
ret
adc
inc
bound
add
ljmp
mov
into
mov
xlat
pop
lcall
test
imul
sub
sub
mov
hlt
out
pop
pushf
jno
cmp
fnstsw
out
xor
test
mov
jge
cs
mov
mov
pop
mov
fldenv
lods
ja
jb
adc
mov
mov
mov
arpl
mov
mov
mov
cwtl
sbb
jae
jmpw
gs
lret
sbbb
sbb
mov
nop
cmc
add
in
add
cmc
popa
iret
cmpsb
mov
push
leave
mov
sahf
dec
sbb
cld
scas
cld
xor
push
inc
sahf
mov
xor
int
jge
pop
jae
jg
aam
divl
das
inc
test
cmp
mov
cmpsl
jp
imul
push
jno
sbb
push
xor
pushf
pop
mov
es
mov
mov
loope
cmpsb
aaa
sub
jmp
sbb
mov
fdivl
mov
push
sbb
and
cltd
out
daa
shll
fidivl
mov
push
inc
stos
stos
and
push
mov
or
in
dec
cmp
shrb
hlt
cltd
outsl
andl
jnp
inc
outsb
clc
cmp
out
cmp
imul
add
add
daa
sub
fstps
ljmp
inc
adc
add
mov
add
jecxz
fadd
cmp
js
repnz
sub
rcll
pop
stos
sbb
adc
popl
jae
xor
mov
into
imul
jae
cmp
mov
and
rclb
cltd
je
hlt
push
or
test
inc
mov
mov
negl
cmpsb
xor
scas
es
cld
fisttps
jns
jmp
xor
xor
bound
cmpsl
mov
lcall
aad
xor
or
mov
lret
std
scas
leave
test
sbb
pushf
xchg
dec
lret
pop
add
cmpsb
cmp
in
sub
fs
fldt
sti
ret
aad
jb
fs
call
lds
jl
dec
sbb
divl
js
push
mov
pop
dec
sbb
int3
xchg
insl
mov
inc
ret
jae
int3
add
xor
cmp
jg
sar
lods
cwtl
iret
in
mov
jmp
outsb
repnz
mov
xor
mov
cs
in
or
stos
push
fldt
popa
and
iret
je
aaa
bound
xlat
sti
dec
fs
push
fmul
mov
mov
cli
sahf
xchg
sub
jg
push
rcl
std
cmp
in
and
add
rorl
cmp
jge
int3
inc
out
xchg
js
mov
out
inc
mov
jmp
daa
hlt
sbb
jo
mov
dec
sbb
mov
fisubrs
lret
stc
insl
repz
test
xchg
hlt
lcall
mov
push
mov
mov
sbb
xchg
nop
daa
dec
xchg
sub
in
test
jbe
cld
cmc
mov
test
and
xor
jmp
mov
and
or
pop
dec
push
sbb
mov
and
lret
ficoms
ds
xchg
pushf
sbb
and
cmpsb
xchg
in
ja
cmpsb
lret
shll
loopne
idiv
test
jle
int
inc
cltd
cmp
inc
push
mov
lds
daa
adc
add
mov
test
xchg
sbb
scas
sarb
imull
fwait
push
out
jl
jecxz
dec
mov
mov
rolb
dec
cmc
jns
iret
movsb
lods
xchg
aaa
mov
xlat
push
jp
xchg
fxam
aam
jle
add
ja
jbe
push
call
cli
mov
ror
inc
lods
mov
pop
lock
and
jb
fldcw
orb
xchg
fst
cmc
adc
dec
mov
lret
inc
dec
call
sbb
sbb
pusha
cmpsl
call
ja
aaa
daa
pushf
ret
sahf
dec
fs
cmpsl
dec
out
rolb
xchg
or
push
js
fsubrl
jo
sub
int3
scas
xchg
test
inc
pop
push
lods
enter
pusha
xchg
inc
mov
outsb
aaa
jnp
imul
push
push
add
cmpsl
push
lods
sbb
mov
lock
xchg
sub
insl
pop
adc
pop
adc
mov
xchg
aaa
and
push
jae
xchg
sbb
pushf
mov
movzbl
xor
push
mov
inc
dec
adc
adc
loopne,pn
sbb
fimuls
push
test
mov
inc
fs
cld
in
jp
insb
ror
pushf
jne
das
xor
lcall
leave
xor
test
in
push
ja
mov
loopne
cmp
fstp
or
add
aas
andl
rcll
fdivrs
jge
xchg
cmp
pop
sub
mov
pop
dec
outsl
clc
jecxz
pop
or
jo
imul
inc
insl
xor
sub
fucomi
xchg
xchg
adc
nop
lods
leave
mov
xchg
arpl
cmp
or
daa
or
pop
inc
ja
lods
xor
lcall
jmp
add
adc
pop
hlt
orb
inc
clc
dec
loopne
mov
insl
add
test
cwtl
dec
rorb
pushf
mov
push
xor
fisttps
jnp
lods
repz
test
mov
adc
dec
shll
add
shlb
addl
insl
leave
das
jge
or
popf
outsl
orb
repnz
jmp
mov
add
gs
imul
outsl
jo
arpl
fs
hlt
test
xchg
mov
je
push
xor
and
mov
jmp
ret
mov
push
lods
adc
shll
inc
stc
std
pushf
arpl
inc
adcb
iret
sub
dec
or
aaa
jno
subb
pop
lret
xlat
push
mov
sbb
iret
scas
loope
pop
data16
sahf
mov
mov
push
pop
push
xchg
int3
inc
xchg
aam
jp
leave
jae
dec
daa
or
pop
out
bound
push
mov
sub
shrl
js
add
jno
pop
sub
pop
sub
lahf
jge
jge
in
fidivrl
fimuls
insb
fldenv
xlat
pop
and
xchg
es
std
and
pop
mov
sti
mov
iret
inc
out
dec
jle
movsb
xchg
aam
pop
push
int3
rcrl
and
popf
mov
test
jmp
je
scas
imul
cmp
add
jne
add
cmp
jns
subps
and
adc
xchg
jnp
xchg
ljmp
jge
test
ja
pop
jne
push
inc
cltd
sarl
das
out
xor
mov
dec
iret
cmpl
shll
cltd
push
push
lods
xchg
sbb
mov
or
shlb
inc
cmp
xchg
xor
jmp
mov
inc
loope
mov
js
dec
lods
dec
arpl
and
mov
into
mov
aas
inc
scas
decl
add
ja
pop
cltd
leave
push
cmpsb
nop
xchg
pavgw
mov
jno
and
mov
cs
push
mov
cwtl
bound
mov
std
movsl
and
nop
mov
inc
inc
popl
bound
nop
dec
mov
xor
testl
in
jnp
jno
lret
push
in
jg
push
adc
popa
filds
lcall
adc
sub
imul
insl
andl
insb
out
cmp
jbe
xor
inc
mov
push
jae
cld
sbb
cmp
out
adc
sbb
cmp
push
pop
lods
add
adc
sub
scas
xchg
mov
dec
mov
scas
push
test
pushf
pusha
xchg
dec
loope
mov
jns
jmp
pushf
cmpsb
dec
pop
das
outsb
push
cmp
aaa
in
ds
and
inc
lock
loope
pop
decl
push
insl
inc
sub
mov
stc
lcall
mov
scas
dec
std
ja
xchg
test
and
lret
pop
cld
mov
push
push
add
test
imul
rcrl
test
jb
pop
pop
ja
lods
cld
cmp
in
xchg
test
or
jo
inc
rcrb
xorb
or
divl
mov
sub
popa
popa
sbb
mov
lea
in
adc
pop
addb
stos
and
inc
push
sub
push
xchg
lock
mov
cmpsl
jae
jg
mov
and
sub
mov
sbb
outsb
mov
mov
inc
push
mov
jecxz
test
cmp
adc
mov
inc
jb
dec
jg
cli
and
mov
or
lods
popf
sarb
inc
and
jno
fisubrl
rorl
pop
popa
add
jne
sbb
push
sub
add
adc
out
jg
push
es
mov
int
dec
inc
movsb
adc
mov
cmp
xchg
mov
add
movsb
ljmp
jg
inc
imul
add
adc
add
cmp
jns
in
cmpb
mov
ja
adc
xlat
adc
pop
add
inc
icebp
dec
xchg
outsl
test
mov
lret
ficomps
add
shll
xchg
xorl
push
adc
sub
stos
add
push
pop
shrb
fsubl
cmpsl
movsb
es
xchg
in
insb
jns
jne
xor
loop
decl
jp
fxam
push
mov
mov
or
xor
addr16
in
js
push
mov
push
pop
and
xchg
cmc
add
and
scas
cmp
cmp
popf
or
ss
out
mov
fdivl
jne
in
fdivrl
test
sub
push
movsb
mov
or
pop
aam
cmp
movsb
cmpsl
andb
imul
dec
adc
fwait
lock
mov
pusha
in
fcompl
add
in
das
add
cmp
mov
pop
push
negl
ret
xchg
mov
fistl
icebp
inc
stc
mov
push
pop
inc
adc
xor
pop
dec
pop
xchg
leave
push
mov
or
imul
loopne
les
cwtl
out
inc
loop
dec
sub
popf
imul
pop
fistps
mov
push
inc
stc
arpl
and
cmp
lock
popa
xchg
mov
into
mov
inc
test
mov
negb
repz
addl
xor
ret
aam
je
mov
inc
pusha
lds
hlt
xor
fimuls
fldt
pushf
jle
pop
ss
leave
and
sub
xchg
inc
decb
cld
mov
int
lea
sub
insl
sub
outsl
mov
stos
das
ret
sub
dec
dec
repz
push
inc
xchg
mov
int
addr16
xor
es
pop
sbb
jns
or
pop
fdivrl
cmp
orl
lret
ljmp
mov
adc
add
xchg
cwtl
mov
cmc
and
insb
jno
cld
or
leave
mov
ss
cwtl
fdivr
mov
sbb
pop
sub
sti
add
dec
adc
dec
ss
inc
cmp
rorl
xor
dec
push
dec
sub
test
fwait
push
adc
mov
outsl
xchg
rorl
xor
push
sub
sub
mov
test
jmp
addr16
xlat
mov
add
jl
push
xchg
jae
inc
lcall
ljmp
rorb
pop
inc
and
insl
adc
daa
push
and
dec
ljmp
mov
ljmp
testb
pop
push
les
outsb
or
sbbl
mov
xchg
xor
out
bound
jno
mov
pop
aas
scas
push
imul
fdivrl
mov
bound
outsl
jp
xchg
lret
add
aas
clc
xor
jp
insb
enter
fidivrs
lods
in
add
push
mov
adc
rcrl
cmp
sub
xlat
or
movsl
pop
jns
xchg
in
call
dec
fisttps
inc
mov
mov
or
pop
pushf
add
xchg
test
scas
inc
js
pop
repz
xor
sbb
cmp
movsl
daa
pop
in
xlat
adc
sub
arpl
fs
lcall
push
call
subb
xchg
xchg
push
out
stos
mov
sbb
mov
in
push
inc
lahf
sbb
jecxz
fdivl
hlt
jmp
mov
dec
dec
call
add
xchg
xor
scas
insl
fistl
cld
pop
xchg
sti
xor
push
xor
icebp
sbb
loope
add
dec
and
mov
adc
cmpb
dec
mov
inc
lahf
test
add
push
test
inc
mov
popf
dec
rep
mov
rcrb
stos
pop
pop
fdivrs
adc
xor
filds
ret
cmp
clc
mov
pop
repnz
xor
data16
or
inc
aas
xor
dec
pop
cmc
cmp
push
mov
and
jle
into
adc
xchg
test
cltd
shrl
sbb
in
inc
jge
or
ds
cmpb
lret
lret
pushf
addl
xchg
int3
mov
mov
and
jns
mov
push
jle
sahf
dec
mov
push
mov
mov
add
cwtl
adc
addr16
icebp
and
push
js
and
imul
call
stos
xor
cmp
insb
mov
push
aaa
ljmp
mov
das
aaa
imul
pop
jns
and
jno
lcall
cmpb
dec
das
or
sub
xor
jne
popf
mov
inc
lcall
inc
cmc
movsb
scas
dec
jno
push
jb
fisubs
rorb
add
divb
cmp
sub
outsl
adc
orl
and
lret
loope
cmp
adc
xor
sub
out
or
pop
clc
sub
inc
mov
inc
push
sub
pop
pop
loope
clc
mov
push
inc
fidivs
or
es
mov
outsl
std
xchg
pop
aad
stc
jle
pop
push
jp
loope
push
loopne
mov
add
out
cwtl
inc
stc
icebp
mov
push
enter
push
repz
add
int
pop
add
ja
adc
hlt
movsb
sub
jle
shlb
je
out
mov
js
fdivl
mov
ds
sbb
mov
ljmp
gs
sbb
jge
or
ljmp
sub
xchg
xor
sbb
push
mov
mov
push
sub
movsl
ja
fisttpll
enter
mov
add
std
inc
sbb
loop
add
and
push
push
fbld
or
mov
mov
xchg
loopne
js
hlt
rolb
cmp
xor
mov
push
addr16
jb
adc
std
cmpsb
sub
xor
popa
and
cmp
pusha
mov
int3
out
mov
jae
adc
or
mov
sahf
out
cld
nop
or
mov
or
cld
adc
sub
test
iret
adc
test
and
movsb
cmp
jo
insl
push
ja
pop
inc
xchg
subb
jo
sbb
push
cld
inc
mov
pop
in
lds
or
xor
cli
ja
ja
fwait
loope
cmpsl
inc
lcall
and
sub
stos
cmp
aaa
mov
femms
jae
push
sbb
iret
xlat
xchg
cmp
das
aam
mov
std
jne
into
ret
push
cmpsb
mov
mov
daa
pop
stos
sbb
jns
push
rorl
loop
cmp
enter
lock
xor
pusha
scas
arpl
push
sbb
pop
mov
sarl
xchg
cltd
ljmp
push
cmpsb
xchg
mov
push
loopne
cmpsb
insb
data16
lock
mov
nop
clc
inc
mov
xlat
pop
imul
shrb
int
loop
dec
inc
fists
fadds
jecxz
sbb
cld
lea
xor
jle
inc
notl
or
stos
adc
ja
sub
cmpl
mov
adc
push
pop
pushl
sub
shrb
test
jecxz
push
ret
add
in
pop
xor
jo
push
mov
xchg
sbb
inc
add
in
sub
push
pop
sub
lock
mov
push
pop
stc
sbb
mov
jle
sbb
fisubl
or
pop
sbb
iret
and
mulb
mov
adc
cwtl
mov
add
push
bound
fs
mov
xor
xor
ret
loope
test
sahf
shl
mov
jno
inc
add
hlt
cltd
mov
xchg
push
sbb
mov
xor
mov
mov
mov
mov
jmp
insl
loop
daa
add
je
lods
mov
ds
mov
fnstcw
adc
sub
es
call
stos
dec
dec
insl
mov
adc
icebp
bound
outsl
mov
push
dec
push
shrb
mov
test
insb
pop
jne
mov
imulb
ret
cmc
pop
push
mov
jbe
lods
insl
fcmovnu
sbb
inc
jae
aas
popl
and
cmp
pop
pop
daa
mov
aad
or
lcall
fsts
mov
inc
lea
xor
inc
aas
fwait
outsb
push
subl
or
cmp
imul
mov
stos
or
push
pop
call
mov
push
cmp
cltd
jno
inc
pop
xchg
arpl
in
jmp
cmp
lea
mov
add
jns
fcmovnb
push
lahf
pop
jbe
xchg
cwtl
bound
sbb
test
mov
sub
pop
icebp
lret
and
adc
xchg
push
xorl
sbbb
loope
jae
out
and
pop
inc
sbb
mov
cld
mov
xchg
rcll
sub
fimuls
sub
xchg
xor
andb
lock
arpl
rcrl
push
subb
add
pop
shll
or
xor
daa
jl
repnz
lret
jb
sub
outsb
mov
into
pop
mov
cmpsb
pop
mov
adc
and
dec
xchg
pushf
inc
jge
js
out
imul
lahf
imul
insb
out
enter
bound
mov
xor
repnz
or
enter
scas
cmp
das
outsl
jo
mov
hlt
loop
adc
sub
and
jnp
in
shlb
out
push
adc
push
imul
pushl
or
push
dec
lods
dec
subl
dec
out
mov
mov
lds
fimuls
lahf
jl
test
int
out
mov
in
imul
aam
jno
sub
clc
aad
scas
cli
lds
out
inc
mov
dec
mov
mov
cmpsl
adc
push
push
aaa
out
hlt
test
lock
xchg
and
ret
dec
outsb
sub
cwtl
mov
fildl
scas
daa
adc
mov
je
adc
je
aad
adc
imul
scas
adc
outsl
sub
std
shl
mov
mov
jmp
lock
popa
popa
mov
in
repz
mov
or
and
pop
ja
int
jp
sub
bound
push
mov
popa
sti
cmp
stos
fldt
repnz
sbb
das
mov
xor
in
jl
hlt
je
inc
mov
mov
mov
xchg
pop
mov
jnp
cmc
int
out
jns
cmp
cmp
xchg
inc
jge
jecxz
jge
fsubs
push
mov
jns
cmc
gs
popa
popf
clc
push
xchg
clc
adc
mov
pop
into
pop
pop
mov
sub
in
add
out
adc
lds
scas
addr16
arpl
int3
mov
dec
frstor
pushf
xor
out
mov
add
scas
sbb
push
jmp
xor
enter
mov
shrb
jl
pop
dec
sub
jl
mov
cltd
aam
sub
int3
push
sahf
out
mov
mov
dec
jne
sub
ficomps
mov
push
xor
sbb
loop
or
sub
xchg
cmp
inc
fstl
mov
xor
jne
jo
push
jp
std
negb
xchg
xchg
into
push
call
mov
sub
out
arpl
aam
mov
dec
push
jecxz
mov
jo
sbbb
aas
inc
sub
xchg
in
subb
fildl
mov
or
push
lods
inc
daa
mov
enter
push
pushf
sbb
in
push
jl
jne
notl
dec
stc
xor
into
insl
mov
inc
adc
fisubl
cmp
ss
mov
call
push
sti
jbe
jnp
push
fidivrl
scas
imul
mov
inc
insb
add
orb
adc
clc
enter
push
mov
jmp
orb
jmp
addr16
mov
xchg
jp
lret
lods
icebp
loope
sti
or
cmc
mov
dec
aad
or
jbe
or
mov
cltd
rcll
in
into
or
popa
sbb
enter
sbb
lock
imul
std
lcall
push
jns
inc
or
movsb
jmp
sub
jb
inc
mov
sub
test
std
adc
mov
jg
cmpsl
cmp
adc
push
pop
iret
repz
cwtl
fstpl
xchg
std
icebp
psubd
aam
orl
imul
mov
push
and
inc
mov
inc
aad
test
aas
or
icebp
fdivs
mov
out
inc
fimuls
mov
push
fsts
mov
gs
jge
cmpps
jg
lahf
dec
inc
xchg
btc
je
mov
xchg
iret
mov
loope
ds
sbb
adc
mov
loope
gs
mov
push
mov
xorl
jle
jmp
xchg
jbe
fildl
and
into
sub
dec
insl
rorb
jbe
call
test
adc
lods
fistl
mov
mov
sbb
jne
movsl
cmc
int
out
mulb
into
dec
pop
push
jae
and
loopne
fldcw
adc
add
push
dec
mov
js
stc
test
insb
lea
test
xchg
pop
or
outsl
and
subb
aam
dec
jmp
sarl
add
push
inc
xchg
jecxz
cmpsb
es
jnp
repnz
out
and
test
push
pop
into
lret
movb
cmp
cmc
and
pop
add
mov
aas
jmp
push
jnp
mov
mov
adc
mov
mull
xor
mov
mov
or
xor
jne
hlt
pusha
pushf
push
push
mov
lock
xchg
push
std
jns
scas
lcall
adc
xchg
xchg
imul
sbb
cmp
adc
das
shl
lds
mov
cld
sbb
shrl
cmp
pop
xchg
mov
or
subb
push
fldcw
stc
iret
movsb
mov
mov
cmp
xchg
pushfw
inc
bound
cmp
es
divb
ja
mov
jnp
jo
push
xchg
sub
sbb
dec
mov
das
cmpsl
imul
xchg
insl
loopne
mov
mov
xchg
pop
dec
lcall
fimuls
add
pushf
pop
divl
mov
cld
inc
xchg
xchg
addr16
push
inc
mov
pop
pusha
out
sub
mov
dec
addr16
xor
or
aaa
arpl
lea
fwait
pop
push
add
icebp
sub
pop
cli
xchg
jo
jmp
jns
and
cmp
fcompp
xor
aas
push
mov
push
push
dec
mov
dec
mov
inc
ss
sbb
loope
dec
xchg
sbb
mov
jge
ret
xchg
sub
mov
movsb
lret
xchg
sarb
pop
dec
loope
dec
adc
push
jle
shll
loop
xor
outsl
mov
lahf
add
adc
jo
fstpt
daa
fidivrs
frstor
and
push
mov
push
rcll
rclb
dec
inc
mov
jp
sahf
aad
sub
and
fdivrl
jnp
lds
adc
test
ret
inc
sbb
in
shlb
out
jbe
fimull
std
or
orl
movsl
mov
int
popf
test
xor
in
js
repnz
out
lock
inc
jecxz
and
outsl
ja
mov
imul
js
stos
jb
ss
xorb
ret
stc
sub
dec
push
outsl
sbb
sti
sub
scas
ja
lcall
mov
and
loop
mov
imul
icebp
add
pop
test
popf
inc
lods
jo
cwtl
out
lods
cmp
push
xchg
in
pop
fwait
mov
rep
push
jl
mov
xchg
rcrl
push
daa
xchg
mov
fstpl
xor
dec
ja
inc
in
add
ds
int3
xor
jg
pop
outsb
add
and
mov
push
gs
adcb
add
xor
movsbl
mov
inc
subb
stos
fbstp
popf
in
cmp
aaa
scas
movsl
jecxz
addb
push
orb
cwtl
ja
loope
out
add
shrl
mov
sbb
sbb
sub
add
push
mov
mov
xchg
nop
loopne
call
xchg
or
cld
sub
ret
or
mov
or
icebp
stos
mov
aad
inc
or
lcall
mov
sub
add
fsub
lds
daa
pop
xor
les
std
mov
test
aaa
xchg
mov
sub
shlb
mov
inc
push
or
sbb
mov
fdivl
std
xchg
enter
cld
test
inc
sahf
mov
ljmp
and
cmp
jp
fdivl
lods
sub
mov
hlt
inc
popa
lock
fstpl
or
cmp
mov
mov
sti
adc
sti
stos
repz
dec
outsl
daa
xor
pop
outsb
movsb
push
push
xor
xor
lds
inc
pop
mov
mov
scas
mov
xlat
scas
cld
push
adc
fisubl
fcmove
into
jl
and
inc
inc
in
js
stos
pop
imull
lods
cmp
mov
cld
lea
fwait
cmc
and
mov
and
push
cmp
shl
pushf
xor
pop
push
lock
push
fidivl
inc
pop
fldl
and
push
lods
enter
pop
jg
out
xchg
xlat
mov
call
xchg
jg
shl
mov
adc
cmpsl
add
cmp
lds
xchg
std
push
loopne
fwait
outsb
xchg
scas
addr16
push
nop
scas
aam
xchg
aad
inc
shrb
dec
push
mov
stc
incb
and
push
inc
ror
lock
in
mov
ret
adc
or
test
mov
je
push
mov
mov
jmp
add
pop
xor
out
adc
add
shlb
repnz
cmpsl
inc
inc
daa
mov
or
jae
add
or
push
and
add
or
cs
in
xchg
pop
ret
enter
in
stos
scas
mov
pop
mov
jle
test
das
mov
xlat
mov
pop
xchg
arpl
mov
outsl
aaa
cmp
or
xor
lock
sti
cmp
jb
stos
push
adc
ret
jmp
pop
shrl
mov
test
jl
rcr
xchg
loopne
aad
fcompl
lcall
out
xor
inc
sbb
sti
or
jle
mov
test
test
jno
xor
in
testb
jae
jp
lods
leave
cmc
jmp
int
sub
in
data16
jno
or
jmp
sub
jno
push
out
push
in
lret
mov
and
fnstenv
or
negb
jns
mov
stc
addr16
ljmp
jne
ret
iret
jle
fsubl
fisttps
mov
out
xchg
adc
pop
push
add
adcb
out
sbb
cmp
in
mov
push
in
imul
js
stos
lea
fisubs
pop
xchg
mov
sub
jg
dec
pop
fiaddl
or
mov
push
insb
negb
xchg
jp
and
push
outsl
lea
jo
movl
lret
outsl
jno
jmp
aad
aad
aam
sbb
jmp
mov
cld
stos
popf
pop
inc
punpckhwd
cmp
in
rolb
mov
std
filds
subb
mov
outsl
mov
jo
push
or
test
rorl
sbb
outsl
inc
scas
mov
dec
cld
clc
mov
sub
sub
fstl
push
in
sahf
dec
cs
lods
sbb
fcmovb
push
or
in
and
sarb
mov
lret
nop
mov
dec
inc
rolb
repnz
inc
mov
mov
in
in
out
xlat
rclb
cmp
lods
js
or
mov
jns
jno
int3
imul
ds
rcll
rcr
pop
mov
pop
sub
cmp
push
lahf
imul
out
hlt
dec
jnp
cvtdq2ps
stos
fisubrs
aaa
or
int3
icebp
add
cmp
int3
cwtl
adc
nop
lahf
push
xchg
mov
lock
imul
leave
scas
test
mov
cmc
xchg
sub
cmc
fistl
pop
pop
aad
es
sbb
xor
ja
xor
ljmp
aad
push
mov
enter
mov
xor
arpl
clc
icebp
mov
inc
add
xlat
inc
fidivl
ss
cmpsb
je
sub
inc
outsb
dec
je
xor
not
mov
xchg
fimuls
rorl
enter
bound
mov
sbb
pushf
mov
jno,pn
aas
adc
mov
adc
mov
dec
pusha
xchg
push
cli
shlb
lea
adc
lahf
xchg
adc
inc
mov
xchg
js
call
inc
pushf
push
dec
cmp
ss
int3
roll
pop
shlb
xor
mov
ret
jo
imul
push
outsl
pop
bound
push
imul
push
mov
pop
dec
fidivrl
xor
leave
sbb
jmp
xor
arpl
rcrl
insb
jae
mov
pop
test
cmp
cmp
push
int
pop
mov
push
add
pop
cli
je,pt
lahf
jmp
mov
xchg
jns
and
cmpsl
shlb
mov
into
enter
iret
int
adc
in
cmp
sahf
push
in
adc
cmp
aad
or
sub
movsb
mov
inc
sub
stc
stos
popl
dec
fcomip
mov
cli
pop
mov
dec
xor
les
jnp
addl
shrb
sti
lret
mov
jecxz
int
xlat
sub
mov
sub
ret
lret
or
dec
mov
lcall
shll
pop
cmp
push
jne
xchg
aam
pusha
mov
mov
imul
add
out
xor
xchg
fsts
ret
mov
adc
inc
push
sub
cmpsb
push
divb
cli
dec
or
inc
inc
mov
cmp
sahf
cmp
xor
repnz
lea
out
sub
xchg
mov
insl
iret
inc
mov
mov
adcl
jbe
int3
sbb
cmc
int3
insl
jg
fwait
cli
mov
push
in
mov
jle
stos
jecxz
or
jbe
inc
jge
push
push
push
dec
aas
aas
out
mov
sub
fwait
inc
push
pusha
mov
aam
xchg
in
or
jg
lods
popa
adc
ds
xor
arpl
and
pop
sub
mov
xchg
fsubrl
jl
ds
xchg
cwtl
ss
xor
leave
mov
push
cmp
lret
into
loope
imulb
push
mov
adc
arpl
inc
and
pop
mov
mov
scas
lahf
popf
xor
outsl
or
push
js
cmp
inc
out
cmp
mov
mov
add
into
ret
mov
xchg
xor
cmpsb
cmc
add
ret
mov
xchg
stc
cmp
es
std
adc
sbb
cmp
shrl
dec
push
push
push
imul
popa
insl
pop
mov
mov
jnp
cmp
or
dec
sub
mov
incl
sti
shl
loopne
xor
and
aaa
push
ficoml
mov
mov
mov
add
sub
xor
or
je
mov
sbb
aad
aas
out
cs
pop
mov
test
pop
cwtl
xor
push
stos
and
fistpl
xor
mov
jns
ds
repz
dec
add
mov
mov
es
push
insl
hlt
leave
jp
adc
aas
mov
sbb
dec
xchg
and
mov
mov
lret
mov
jb
and
jp
xchg
fwait
or
mov
mov
adc
dec
pop
jae
fimuls
out
or
jne
adc
and
jge
fistpll
test
fistps
scas
popf
call
mov
int3
ja
scas
sbb
adc
lret
adc
cli
rorb
loop
pop
iret
aaa
das
xor
iret
sbb
cmp
cmp
arpl
and
cwtl
in
xor
mov
in
ljmp
pop
sbb
push
or
pop
paddsb
movb
rolb
sub
repz
into
pop
xchg
or
push
cmpsb
or
gs
in
dec
push
dec
sbb
shl
fidivs
sbb
lods
les
notb
int
lds
ss
adc
dec
sub
sarb
movsl
fsts
jmp
ret
pop
popa
cli
push
cwtl
in
lods
add
or
int3
scas
sbb
outsb
rcll
addb
xchg
movsb
ljmp
iret
outsb
adc
xor
jp
cmp
cltd
popf
mov
mov
imul
xlat
pushf
mov
mov
or
aas
stos
outsl
enter
iret
fdivrl
add
ds
xor
dec
in
loope
data16
cs
pop
and
mov
add
mov
ret
aas
das
imul
movsl
sub
aaa
dec
int3
mov
out
into
cmc
and
repz
fdivl
out
mov
xchg
aad
xor
repz
les
mov
insl
shlb
shlb
mov
sti
test
dec
lcall
sbb
push
mov
fnstsw
ja
mov
not
lcall
call
cltd
inc
jg
or
int3
xor
nop
push
imull
xor
mov
xor
and
lret
inc
cld
dec
aas
scas
mov
lahf
imull
mov
dec
cmp
int
mov
cmp
mov
mov
js
inc
jecxz
addr16
xor
lds
push
add
cwtl
pop
push
push
lcall
or
dec
jmp
sbb
je
xor
mul
ss
jb
push
lds
je
cli
lods
lds
in
xor
clc
add
int
vpaddb
mov
or
and
push
jbe
xchg
push
fstpt
push
int3
jae
mov
in
cmpb
lcall
add
and
popa
xchg
inc
nop
xchg
fnstenv
lret
arpl
adc
dec
pop
sbb
movsl
leave
push
push
in
stos
movsb
dec
mov
rcl
imul
jno
movhps
aaa
jp
mull
push
xchg
mov
cld
repnz
dec
cmpsl
sub
xlat
loope
inc
cltd
cmpsl
lods
test
test
mov
and
mov
xchg
and
imul
lret
push
jecxz,pn
ficoms
sti
test
sahf
xchg
imul
xchg
xchg
ljmp
pop
in
stos
mov
fistpll
outsb
sbb
sbb
push
mov
xlat
pop
push
mov
inc
sbb
or
rcrb
aaa
mov
jns
jge
cmpsl
jns
js
push
testl
push
lods
mov
fsubp
xor
or
push
into
push
push
sbb
jecxz
xor
mov
push
cwtl
add
mov
pop
jg
popf
mov
mov
jb
repnz
test
dec
fs
add
sbb
arpl
test
xchg
cmp
cmp
push
rclb
xchg
jge
cld
jg
add
lcall
stos
adc
xchg
sbb
pop
push
fildl
cmp
inc
lret
add
lahf
scas
push
xor
sti
push
lret
cmp
lret
fwait
push
test
frstor
push
dec
pop
lock
int
cwtl
subl
test
mov
loopne
jne
out
or
and
fstps
xchg
into
shll
push
stc
stc
clc
xor
int3
push
xor
inc
add
jg
dec
cltd
fldcw
cmp
mov
push
rorb
inc
jl
fwait
lret
test
daa
or
xchg
subb
dec
xchg
and
mov
jmp
and
cmp
icebp
je
mov
inc
lea
das
cmp
insl
sbb
movsl
fmull
jmp
js
push
jmp
dec
mov
scas
leave
inc
jb
pop
cli
mov
adc
mov
lds
mov
mov
int3
pop
repnz
push
rclb
repnz
mov
jg
mov
int
sub
cmp
mov
mov
add
cs
cmp
push
or
js
xor
ss
kmovw
aam
sti
inc
scas
cmc
mov
sub
sbb
pop
je
rep
daa
fidivrs
pop
sbb
sub
add
loop
add
lahf
cmpsl
cmp
lock
pop
scas
sub
fsubp
pop
inc
icebp
insb
lods
nop
jns
imul
cli
push
orl
sbb
insb
leave
jg
test
inc
out
out
or
lret
push
lods
adc
cmpsl
mov
mov
or
jl
jbe
mov
ja
lods
jne
pop
dec
jmp
inc
pop
out
or
sbb
je
sti
or
push
outsl
outsl
and
add
push
lret
mov
jmp
dec
mov
jg
push
push
xchg
sbb
sbb
test
nop
pop
lods
lret
fnstsw
pop
mov
fmull
mov
iret
jmp
movsb
pushl
popf
std
push
sub
xor
inc
or
scas
fs
mov
out
mov
push
pop
mov
mov
arpl
jle
pusha
mov
inc
jg
repz
adc
mov
fmul
jo
push
dec
adc
ret
mov
mov
test
pop
mov
dec
jecxz
cmc
nop
repnz
push
adc
sbb
xorw
ud0
sbb
push
pop
xor
js
addb
testl
scas
pop
out
push
inc
and
adc
call
xor
call
outsl
push
xor
dec
out
cmpsb
andb
je
popf
stc
pushf
popf
add
jmp
and
pop
pop
ret
jp
add
cmp
movsl
idivb
das
or
cmp
fidivrs
shrb
insl
push
outsl
arpl
cltd
in
popf
rorl
addr16
roll
xorb
je
lods
aad
jecxz
lea
inc
adc
jmp
xchg
adc
adc
sbb
hlt
pop
adc
add
es
mov
outsl
sbb
iret
scas
inc
push
shlb
and
test
arpl
mov
xlat
scas
mov
hlt
mov
ret
jno
pop
jb
repz
inc
and
mov
inc
repnz
cld
pop
je
lea
pusha
stos
and
data16
das
fcoml
cmpsb
sbb
jb
or
inc
rol
mov
rorl
adc
sub
lret
outsl
jmp
fisttpll
push
mov
adc
mov
inc
xchg
scas
cmp
mov
aad
pop
std
cmp
push
mov
push
bound
les
outsb
inc
popf
aam
pop
xor
lock
push
aaa
push
addr16
repz
repz
out
dec
imul
ljmp
stc
iret
movsb
cmp
rorb
jo
pop
mov
iret
gs
fwait
jae
dec
aaa
insl
or
mov
lahf
aad
fisubl
std
addr16
push
lods
cwtl
pop
mov
hlt
clc
sub
add
outsb
inc
jnp
inc
lret
rcrl
das
and
sbb
xchg
pop
or
lea
or
les
inc
jmp
mov
aas
mov
cmp
cs
sbbb
test
lds
cmc
fistpl
add
adc
gs
push
idivl
pop
stc
sahf
ljmp
jp
dec
and
sub
aad
in
repnz
or
jmp
pop
push
mov
jmp
dec
xor
lahf
or
adc
xchg
lds
push
pop
sbb
mov
pushl
sahf
sub
dec
sub
cmp
jnp
scas
jnp
xchg
jae
out
add
scas
mov
ss
push
insb
ret
adc
sbb
jns
testl
imul
mov
sbb
ret
addr16
mov
dec
add
int
pop
leave
jno
pop
sub
inc
movlps
negl
test
sub
lea
lcall
mov
xlat
mov
xor
mov
psubusb
mov
push
dec
adc
test
ret
les
test
dec
adc
out
shrb
fcoml
adc
push
movsl
loopne
in
xchg
sub
jae
leave
xor
jmp
inc
sti
divb
outsb
ret
jmp
adc
test
add
ljmp
inc
xlat
jmp
sti
sbb
sub
fs
es
cmp
leave
sbb
out
pop
and
push
lret
mov
mov
dec
movsl
adc
out
sarl
sarb
lret
enter
cmp
inc
mov
daa
loop
fisubrs
and
aas
push
outsl
mov
rclb
or
ljmp
xor
and
mov
stc
shrl
jg
idivb
mov
insl
or
mov
fs
stos
xchg
push
sbb
sbb
neg
adc
xchg
jmp
ror
ror
sarl
push
js
mov
mov
push
lcall
inc
lret
mov
pop
movl
bound
push
loope
mov
dec
stos
and
jp
sbbl
insl
mov
cmp
iret
sub
fwait
movsb
push
sbb
push
pop
jne
sub
scas
sub
into
clc
aam
test
iret
movsb
clc
insl
lds
cmc
mov
jle
dec
pop
pop
jle
leave
sub
aaa
test
out
mov
jne
mov
jo
sbb
and
fnsave
pop
pop
out
in
lcall
jl
cmpsl
cmp
mov
pop
sub
gs
and
and
lods
cwtl
nop
fildl
fimuls
dec
push
adc
xchg
dec
sub
leave
sub
xchg
out
mov
call
mov
mov
sub
ljmp
out
enter
jle
mov
fidivrl
daa
aaa
inc
or
imul
push
dec
popf
lods
and
cs
loop
sub
cmpb
mov
cli
add
outsb
cmc
je
je
shlb
fs
arpl
pop
xor
sbb
xchg
inc
das
lret
les
pop
push
jl
lahf
aad
jns
cmc
sbb
scas
out
frstor
idivb
addb
ja
jp
ficompl
and
popf
jmp
lods
fistpl
icebp
data16
mov
pop
notb
jb
mov
and
sbb
shlb
sub
mov
push
mov
cs
push
pop
fcom
imul
js
mov
jno
xchg
mov
sbb
out
mov
clc
test
fwait
aas
test
lds
cwtl
push
mov
push
cld
or
ret
rorl
mov
push
xor
sub
dec
dec
test
or
inc
ret
xchg
jae
stc
mov
sub
jecxz
inc
add
push
repnz
adc
add
ja
test
lods
insb
or
mov
dec
inc
sbbb
clc
shlb
ja
inc
or
scas
aaa
push
or
cmp
ja
adc
movsl
pop
add
outsl
xchg
xor
test
xor
push
mov
mov
pop
fs
cwtl
ret
jp
cmp
data16
das
sbb
pop
xor
rcrl
add
rorb
fdivl
jmp
cmc
pop
fildl
in
aaa
bound
add
inc
pop
rcrb
push
mov
jns
inc
cmp
mov
cmpb
test
stos
imul
jle
inc
xor
mov
test
fucomip
inc
add
dec
cmc
lods
jbe
inc
dec
or
pop
rcrl
push
lret
pop
or
in
out
sbb
int
stos
mov
or
adc
sbb
mov
mov
pop
ljmp
sub
pop
mov
lods
pop
arpl
cmpsl
test
jns
dec
sbb
jmp
add
das
repz
pop
dec
addr16
out
repz
and
in
test
xchg
aam
xor
sub
out
repz
std
sbb
or
adcl
ljmp
pop
mov
adc
cmc
repnz
out
aad
or
sub
ja
adc
mov
inc
push
mov
push
repnz
add
push
and
inc
dec
fwait
test
scas
in
repnz
jge
xchg
mov
push
dec
jge
adc
in
clc
mov
pop
outsb
xor
sbbb
rclb
idivl
pop
push
push
jne
xchg
push
or
les
mov
daa
std
pop
int
push
outsl
xor
decl
jp
mov
dec
imul
cmp
sbb
sub
jbe
int3
hlt
stc
scas
cmp
cmp
mov
les
ret
adc
push
mov
loopne
shlb
in
gs
pop
stos
and
mov
fists
sub
aam
cli
xorl
fs
popa
adc
outsl
icebp
ficompl
popf
sti
push
test
arpl
jne
daa
dec
movsb
nop
adc
or
push
mov
rcrb
test
jo
sub
enter
adc
in
ja
sub
mov
fwait
loop
add
jno
add
and
pop
int
data16
in
adc
fstpt
adc
sahf
or
add
bound
pushf
pop
cltd
mov
mov
inc
or
jmp
add
adc
sub
leave
andb
sbb
mov
in
nop
mov
insb
das
das
inc
cmpsb
mov
cmpb
ljmp
rorl
out
or
mov
mov
aam
scas
pop
sub
adc
ljmp
lret
pop
outsl
fnstenv
and
lods
add
mov
mov
sbb
ret
insb
aaa
aaa
frstor
lcall
push
add
push
pop
sub
or
xchg
addr16
xor
lods
cmpsb
out
sbb
fbld
dec
xchg
sub
or
push
add
hlt
mov
push
cltd
sarl
pop
out
es
out
push
mov
or
std
dec
push
pop
fdivr
xchg
dec
lret
loope
mov
outsl
inc
xor
repnz
jg
xchg
inc
and
xchg
or
mov
dec
jle
dec
ficoml
aaa
jns
xchg
dec
out
cmp
gs
push
xchg
ja
movsb
mov
cmp
arpl
fsubrl
mov
out
jecxz
sarl
shr
inc
enter
push
inc
push
cld
icebp
data16
xor
jno
pop
popa
inc
jle
push
pop
jb
mov
pop
shrl
xchg
add
les
movl
jmp
mov
lods
shr
sbb
or
imul
cmpsl
fistps
in
loopne
mov
sahf
hlt
sub
xchg
adc
daa
sub
loope
xchg
shrl
mov
shl
lahf
jae
je
or
movsl
test
lret
mov
sarl
sti
mov
stc
lss
out
dec
mov
cmpsb
xor
in
bound
std
les
push
orl
sbb
jb
fisubrs
jno
push
push
shl
push
mov
jo
fs
adc
lods
dec
add
pop
ret
add
xchg
pop
hlt
cmp
dec
xchg
lret
int3
xorl
sbb
push
loop
add
jecxz
inc
in
inc
jbe
fninit
movsl
push
push
fisubs
or
mov
loope
jo
insb
mov
fcmovb
insb
jbe
mov
in
adc
push
out
jg
mov
es
aam
int3
addr16
fmulp
fisubl
stc
add
dec
les
push
mov
or
fildl
dec
push
xor
pop
xchg
xchg
fwait
inc
fcmovnu
xchg
jg
out
movsl
inc
push
cmp
and
inc
mov
add
fisubrs
pop
leave
ljmp
sub
imul
je
lcall
mov
aas
cli
and
sub
adcl
ss
pusha
dec
shl
push
mov
cltd
iret
sub
cld
mov
sarl
loopne
fistpll
aas
or
pop
jecxz
jno
fwait
test
sbb
sub
cmp
test
lods
push
pop
ja
dec
stc
rcl
push
lea
push
outsl
jnp
and
in
sbb
pop
bound
fsts
jno
rcll
adc
pop
mov
out
cmpsl
pop
jo
xlat
pop
fmuls
mov
mov
or
push
sub
test
pop
mov
fistps
xor
mov
ror
push
jg
jae
outsl
mov
cmpl
push
rcrb
icebp
stos
dec
xchg
mov
mov
jbe
jo
pushf
push
push
pop
subl
mov
add
adc
push
fwait
xchg
jge
scas
jmp
les
andb
xchg
fdivrl
pop
mov
inc
mov
sbb
push
dec
adc
movsl
mov
int
lock
cwtl
testb
adc
loope
push
inc
repz
dec
pop
rorl
add
dec
cmc
sbb
mov
mul
in
data16
repz
add
in
and
jp
fidivrl
cmp
pop
shrl
data16
sbb
cld
cwtl
scas
pop
cmp
aad
cmp
insb
jg
fsincos
sub
scas
les
push
push
cmpsb
xchg
mov
pop
xchg
loop
subl
and
cmpsl
jmp
repz
or
inc
ljmp
adc
add
pop
pxor
xor
mov
dec
and
shll
cmp
cmp
lods
add
or
dec
cmp
fwait
jne
call
jg
out
je
outsb
push
add
addr16
add
jne
mov
mov
leave
stos
adc
jnp
xor
fxch
jb
test
es
cmp
hlt
mov
push
lcall
sub
in
dec
add
insb
push
mov
xchg
adc
sub
inc
loope
cmp
loop
jb
jb
mov
or
xlat
pop
cmp
mov
leave
inc
stos
clc
xor
hlt
in
data16
lret
sub
sbb
unpcklps
rorl
test
dec
ret
aad
stc
das
movsl
je
jne
sub
arpl
sub
dec
mov
xor
stos
mov
repz
mov
or
andl
aam
rclb
in
xchg
popf
setg
adc
xor
push
mov
and
dec
ret
jp
xor
jp
mov
xlat
rcl
aas
push
fisubs
in
ja
adc
and
sbb
inc
cld
dec
push
mov
test
icebp
add
jo
sti
ret
enter
mov
dec
xchg
stc
add
in
enter
mov
and
in
pop
fcmove
and
inc
mov
inc
mov
cmp
sbb
addl
push
fistpll
fistpl
adc
js
into
push
pushf
or
jmp
scas
mulb
cmp
test
adc
imul
xor
lcall
xlat
aaa
and
lret
mov
jae
clc
cmpsb
fwait
rcrl
popa
test
mov
cltd
sub
mov
in
ss
incl
test
clc
cli
and
lea
cmp
adc
pop
mov
cli
xchg
inc
rol
rolb
jmp
adc
xchg
cmp
das
and
pusha
cmp
loope
cmp
pop
jge
aas
inc
pop
push
adc
jbe
fildl
or
adc
push
daa
mov
sbb
push
push
sub
push
cmc
add
addl
sub
inc
sub
sbb
push
mov
xor
adc
rcrl
popa
cmpl
and
mov
jne
inc
test
daa
adc
ljmp
xchg
loope
jmp
jo
xor
test
and
pop
pusha
xchg
sbb
leave
jo
sbb
rorb
lods
mov
adc
test
cmp
xor
and
test
inc
divl
loope
push
push
data16
sahf
mov
inc
push
pushf
add
mov
gs
lods
add
insl
cli
pop
add
ljmp
out
ljmp
cmpsb
inc
ja
pop
inc
out
add
pop
mov
cmpsb
cltd
mov
pop
lahf
and
mov
pop
lods
pop
pop
idiv
add
mov
and
lods
pop
inc
mov
pusha
mov
xor
mov
or
lock
inc
gs
cmp
pop
movsb
jae
sbb
xor
xorl
mov
daa
stos
scas
outsb
add
xchg
jae
sahf
push
es
or
pcmpeqb
std
fsubr
fisttps
jl
mov
in
ret
fidivl
push
xchg
fwait
shlb
fcoms
adc
mov
stos
xor
mov
decl
std
mov
negl
xchg
cltd
jne
dec
outsl
sti
cmp
pop
dec
fnsave
pop
aas
xlat
mov
xlat
lods
mov
dec
sarb
ds
outsb
sbb
fistpll
pop
insb
pop
mov
jne
push
add
idivl
iret
push
mov
rorb
jle
in
lds
xchg
movsl
fldcw
push
lahf
adc
aaa
pop
sub
ret
mov
lds
push
dec
sbb
dec
mov
orb
and
in
stos
cmp
ds
jb
das
dec
out
cwtl
imul
push
lret
sub
subl
cld
xlat
or
adcb
in
pop
out
js
pop
add
xchg
xlat
mov
jle
cmp
adc
imul
popf
xor
dec
loopne
add
lea
jg
je
jp
pop
test
cmp
adc
scas
or
inc
xor
ror
fs
mov
loope
rorl
cld
cmp
xchg
std
push
add
fwait
pop
xor
sub
cmpsl
pushf
int3
dec
mov
ds
lock
lods
cmp
cmp
or
jl
xchg
jne
or
mov
imul
test
test
loope
lds
xor
jbe
aad
add
xchg
or
lock
mov
xor
mov
es
xor
mov
call
xor
nop
rcl
leave
mov
loop
adc
lock
inc
jmp
movsl
xor
xchg
pop
sahf
lock
popf
cmp
dec
mov
movsl
subl
mov
xchg
xor
sbb
xor
call
mov
xchg
movl
sarl
scas
rep
pop
inc
or
jbe
aad
insb
ss
xchg
call
jae
jmp
out
push
fisttpl
mov
ljmp
jne
movsl
xor
pop
xor
and
fdivs
mov
push
daa
popa
xchg
mov
out
jb
pop
xchg
pop
xchg
fadd
scas
sarl
jo
xor
cmpb
scas
cli
push
mov
sub
xchg
sub
adc
out
xchg
and
add
sti
addl
negb
outsl
mov
xchg
jl
jbe
xor
aam
aam
cmp
repnz
and
pop
mov
jnp
std
push
fmull
test
mov
stos
cmp
push
sbb
mov
imul
push
lcall
add
les
mov
jae
xchg
pop
test
adc
lods
mov
in
push
mov
pop
adc
or
dec
popa
inc
std
inc
push
dec
lea
inc
ss
fstpt
sbb
outsl
mov
movsb
sub
popa
lret
adc
push
stos
mov
shr
rorb
and
jae
xor
aam
ja
mov
xlat
clc
je
cmp
sbb
jbe
aaa
loope
popfw
out
int
imull
insb
out
lahf
mov
testl
pop
mov
daa
mov
ret
add
mov
add
jp
xor
fwait
int
pop
fdivrs
lods
pop
pushf
push
dec
adc
adc
out
xchg
mov
dec
pop
sbb
add
mov
aas
int
jg
daa
outsb
std
or
cmp
paddusb
and
jno
and
jns
fnstenv
mov
or
ret
mov
in
dec
in
add
add
xchg
outsb
cmp
fcmove
dec
popf
sub
or
out
mov
cwtl
push
mov
shrl
and
movsb
mov
sub
es
inc
mov
xor
sbb
in
add
test
xchg
sub
sbb
inc
mov
mov
clc
sub
or
xchg
sub
jge
mov
push
inc
lea
sub
repnz
hlt
popf
or
xadd
xor
icebp
add
xchg
repz
imull
mov
xor
mov
sahf
outsl
adc
jecxz
cmp
cmp
jae
or
rcll
adc
inc
in
dec
or
je
jle
cmc
out
mov
lods
dec
add
outsb
pop
movsb
pop
fwait
mov
outsl
movsl
out
jg
jge
pop
cmpsl
adc
xchg
push
mov
cmp
add
sub
mov
dec
out
xor
adc
ljmp
xchg
das
xor
shl
xchg
pop
scas
xchg
loop
push
loope
push
adc
cmp
cld
xchg
mov
push
mov
push
outsb
mov
sbb
or
jle
test
pop
in
add
jns
sub
pop
cmpsb
je
lcall
into
add
fisttps
xchg
das
cmp
push
mov
lcall
pop
mov
add
ljmp
sbb
jecxz
loopne
cmp
push
mov
sub
lea
int
pop
arpl
jl
and
rcrb
fisttps
fucomp
adcl
movsl
or
xchg
out
mov
sahf
gs
in
shlb
jbe
int3
je
jbe
xor
aas
in
testb
and
mov
dec
cltd
xchg
imul
mov
inc
mov
leave
pop
data16
inc
and
cmp
xchg
inc
inc
testb
loop
mov
movsb
cs
les
movsl
push
pop
mov
mov
in
mov
es
shlb
imul
jle
pop
inc
mov
dec
aad
xchg
mov
pop
filds
dec
pusha
mov
and
pop
add
daa
mov
leave
pop
xchg
and
fadds
cmp
pop
stos
out
test
lds
mov
mov
mov
sbb
cli
divb
cmpsl
shll
xlat
daa
lret
mov
or
push
jg
nop
andb
xor
shr
add
xchg
pop
fsts
out
fiaddl
jo
je
fnstsw
sub
fwait
or
pop
push
sub
or
adc
das
js
psllw
lock
scas
xor
stos
rclb
icebp
dec
and
and
iret
lock
dec
fsubrl
add
jb
fwait
push
iret
rcrb
xchg
mov
lahf
fimull
loopne
inc
filds
xchg
pop
pop
roll
lcall
aam
mov
xor
or
or
loopne
sti
rolb
faddl
int
adc
hlt
jnp
outsl
out
imul
aam
pop
cmpsl
scas
lds
mov
jnp
xor
pop
push
jae
add
sbb
in
pop
xchg
lods
out
pop
push
push
addr16
ficoml
jnp
add
pop
clc
sub
addl
jno
or
int
xlat
push
loope
or
add
lds
sbb
xor
imul
push
xlat
lds
out
into
and
inc
aam
xchg
int
mov
mov
pop
push
sub
dec
sub
in
inc
inc
out
mov
xchg
mov
mov
adc
pop
aam
faddp
int
pop
out
and
aad
cmp
sub
or
dec
mov
lcall
mov
jo
shrl
in
pop
scas
pop
or
mov
add
sbb
push
push
push
jne
in
gs
inc
xorl
or
xor
mov
insl
js
int3
mov
sbb
mov
lock
xchg
push
dec
push
daa
mov
mov
das
sbb
rcrl
jno
mov
cmp
and
fwait
adc
das
addl
jne
in
add
xchg
push
mov
in
jne
inc
scas
scas
ret
jle
mov
aas
dec
cltd
rcll
mov
pop
push
cli
addl
add
fwait
inc
lea
lds
fcomps
pusha
les
mov
addl
cwtl
pop
push
jecxz
pop
xchg
mov
inc
sub
std
xchg
mov
dec
adc
jae
xchg
inc
sub
sub
pop
mov
ret
inc
inc
shrl
std
mov
shlb
aam
push
cmpsb
add
mov
out
out
rorl
push
aam
fs
enter
cmp
push
inc
push
mov
xor
mov
xchg
pop
out
push
ja
mov
pop
rolb
add
inc
add
xchg
leave
jno
and
dec
mov
mov
insb
add
mov
rolb
shlb
and
jle
jge
pop
pop
ds
aas
xchg
sub
inc
xchg
dec
mov
jbe
ror
mov
rcll
cwtd
fwait
jecxz
xor
mov
add
and
scas
cltd
jo
orl
lods
pop
or
lahf
mov
mov
jns
xchg
jns
out
push
cmp
cs
cmp
jle
js
mov
xor
push
push
popa
aam
fidivrl
stc
xor
incb
adc
iret
bound
xchg
or
push
inc
or
jne
mov
mov
test
push
aam
jo
rcl
mov
and
out
pop
repz
pop
cmp
pop
and
aaa
jbe
ds
jns
testl
cmp
mov
js
cltd
xor
cltd
dec
aam
inc
call
pushf
lea
or
pop
mov
pop
push
je
fsubl
adc
push
mov
cmpsb
aad
orb
mov
xor
dec
pop
or
jmp
push
add
fmul
inc
scas
cwtl
fstpt
or
xor
ficoml
insb
pop
mov
mov
movsl
jg
adc
pop
xchg
test
cld
hlt
xor
jg
push
mov
stc
dec
xchg
cmpsl
dec
ds
push
rclb
mov
inc
inc
xchg
call
or
and
mov
out
frstor
dec
inc
jo
cmpsb
ds
xor
jp
jp
out
and
dec
stos
clc
or
lds
cli
call
add
es
lret
or
outsl
add
dec
ret
jmp
jns
or
je
dec
lcall
add
lret
adc
xchg
aam
or
jnp
into
dec
cmp
cmpsl
jle
mov
movb
sub
decl
test
sahf
sub
inc
fldl
insb
dec
push
cmp
insl
loopne
sbb
ffreep
orl
pop
lcall
mov
mov
outsb
xchg
lods
decb
fsubs
icebp
clc
mov
xor
fcmovb
into
mov
sti
mov
or
pusha
aaa
stos
gs
xchg
mov
cld
pop
mov
push
pop
enter
aam
and
add
pop
mov
aad
jo
sbb
lea
cmp
adc
les
dec
pop
add
push
andl
pop
cli
or
ret
or
sub
ret
inc
xor
insl
test
sbb
lret
cmpsl
cs
enter
into
fidivrl
adc
sahf
push
arpl
fs
and
ds
and
leavew
hlt
out
scas
jle
sbb
and
movsl
cmp
outsb
lret
push
xor
ret
or
fisubrl
xor
pop
imull
push
pop
sub
in
jo
in
ds
enter
in
pop
sub
popf
sbb
movsb
mov
in
shrl
in
or
dec
test
fstl
cltd
jle
mov
rorl
sub
mov
mov
lock
out
popa
jbe
enterw
inc
inc
xchg
fimull
aaa
sbb
xor
sahf
movsl
mov
gs
mov
test
jae
or
jo
aad
push
and
mov
shll
lret
out
es
mov
and
fs
ss
mov
sahf
and
out
fsubl
gs
fmuls
mov
andl
inc
and
xchg
jl
nop
push
leave
inc
pop
push
adc
pop
fistpll
jg
xchg
std
push
ss
dec
addb
sub
test
repnz
negb
mov
lret
outsb
inc
mov
dec
rclb
xchg
pop
xor
sub
insl
jb
fildll
aas
push
and
mov
scas
push
ret
or
mov
adc
aad
mov
stos
clc
mov
out
xor
or
add
mov
std
aaa
xchg
nop
push
and
roll
jl
xchg
imul
xchg
dec
mov
fadd
ss
mov
sbb
jp
jge
ret
inc
adc
nop
xchg
out
popl
icebp
imul
pop
mov
sub
aam
xor
test
in
jmp
fisubl
xlat
lods
xchg
rcrb
sub
lret
mov
inc
mov
push
lret
or
fs
imull
cwtl
push
fisttpl
push
ljmp
adc
je
push
xchg
or
aaa
ds
mov
clc
add
mov
or
pop
repz
sub
lock
inc
push
lock
int
fsts
cmc
andb
sub
add
jns
fwait
xor
lods
js
cli
xchg
mov
or
push
push
into
xchg
imul
lcall
and
inc
xor
xor
sub
push
mov
mov
xchg
xchg
lods
popa
test
outsl
xchg
test
adc
shll
mov
addr16
movsl
in
leave
aaa
rcrb
add
xor
lret
out
aas
mov
and
inc
xchg
and
loope
sub
frstor
mov
push
sub
adc
pop
pop
popa
cmpsb
or
icebp
adc
cmpsl
jae
jne
sbb
push
inc
aaa
adc
dec
lcall
mov
lcall
xor
xor
mov
xor
pop
movsl
clc
adc
push
mov
xchg
and
test
cmpsl
mov
es
fsubrp
or
aam
test
test
insl
arpl
fnstenv
cmp
sub
inc
jle
inc
cmp
xchg
das
push
push
cmp
cmp
push
cmpsb
fdivs
dec
adc
push
inc
roll
mov
sub
iret
mov
pop
xor
pop
mov
bswap
and
mov
inc
out
lahf
in
pushf
fcmovnbe
sti
add
outsb
mov
popa
test
aad
popa
push
xlat
or
push
loop
into
jp
add
xchg
testl
xchg
push
arpl
adc
dec
shrb
dec
jno
and
repnz
inc
mov
mov
out
fsubl
mov
fabs
rcrl
lea
es
add
jne
dec
mov
jl
movsl
int3
outsl
cmp
js
mov
loopne
pop
lock
inc
or
push
ljmp
orb
out
xchg
daa
fucomi
cld
fwait
ljmp
sahf
fwait
cmp
add
jge
int
fisttps
sbb
in
pop
pusha
xchg
sbb
pop
out
mov
loope
out
and
outsb
ret
scas
jbe
mov
pop
out
repz
xchg
loopne
xor
int3
stos
push
icebp
movsl
inc
fidivl
repz
enter
fidivl
in
mov
lds
bnd
cli
sub
pop
pop
pop
sbb
mov
aam
adc
xor
jl
mov
roll
test
icebp
inc
sbb
scas
push
mov
out
sub
push
mov
test
mov
addr16
adc
stos
mov
xchg
inc
adc
push
pop
mov
sub
pop
add
xchg
xchg
cwtl
mov
pop
mov
testl
gs
lds
and
stos
into
mov
ja
test
mov
pop
popa
insl
aad
adc
xchg
mov
xor
xor
add
add
ljmp
aad
xchg
insl
lds
bound
in
mov
mov
idivl
loopne
movsl
cmc
xchg
scas
mov
dec
shl
js
jecxz
cld
push
es
cmp
mov
data16
inc
sbb
adc
inc
idivb
adc
bswap
pop
push
sbb
lret
aad
pop
inc
mov
jmp
push
lock
push
pusha
into
xor
pop
out
imul
leave
xor
lea
lock
inc
inc
or
neg
insl
lcall
lods
and
ret
push
stos
cmc
cmp
scas
mulps
popa
cmp
out
out
addr16
xchg
mov
test
movsb
sub
add
xor
cmc
cld
cmpsl
cmp
pop
jae
and
ror
xor
jb
cmpsl
mov
cmp
lods
mov
adc
add
xchg
pop
stc
dec
fcmovnu
mov
addb
loopne
inc
push
stc
pushf
stc
lods
aas
xchg
pop
bnd
push
sub
cs
jl
jb
cmp
add
in
mov
mov
ja
pop
mov
mov
pop
xor
sub
lock
dec
pop
mov
loopne
cmp
fistps
cmp
add
hlt
cmp
or
inc
push
enter
sbb
mov
iret
and
cmp
push
addr16
call
ficoml
pop
repz
lret
xor
cmp
dec
jb
addr16
dec
ror
pusha
inc
dec
cld
bound
push
shlb
mov
pushf
push
push
inc
iret
jecxz
pop
jbe
in
pusha
out
xor
push
and
int
es
xchg
adc
push
test
xchg
testb
jae
pop
mov
lahf
add
xchg
mov
xchg
je
pop
mov
push
mov
mov
pop
dec
rolb
jmp
adc
or
stc
std
scas
out
xchg
mov
ficoms
ret
cltd
adc
sub
popf
imul
daa
or
pop
fists
sbb
add
stos
mov
into
mov
mov
or
lods
fcom
or
repnz
mov
dec
insl
push
sbb
ja
dec
jae
inc
insl
cmpsl
lret
or
loope
ljmp
test
or
mov
fdivl
jno
add
pop
scas
adc
int
xchg
lods
adc
mov
mov
sbb
dec
add
mov
mulb
inc
xchg
or
mov
mov
je
sti
cmpsl
shl
and
lds
lods
cmc
dec
lock
push
sarb
mov
mov
mov
repz
sahf
in
movsl
out
lds
fadds
cmp
mov
bound
adcl
clc
add
popa
test
mov
sub
sarl
scas
dec
js
jae
cwtl
cmp
in
xor
scas
test
or
fnstsw
mov
xor
mov
pop
push
sub
or
addr16
sahf
out
jg
js
jg
stos
mov
out
sahf
xchg
dec
mov
push
rcrb
in
xchg
cld
push
add
mov
lods
jb
mov
loopne
fsts
push
mov
and
sbb
adc
cmp
mov
pop
movsl
cltd
inc
testb
adc
in
sub
cli
xor
lcall
mov
arpl
dec
cmp
push
scas
xchg
data16
rolb
push
addr16
iret
xor
arpl
fdivs
lret
stos
stc
inc
cmp
push
and
ret
push
xor
push
je
or
inc
cmp
mov
aam
add
daa
sbb
ror
aam
jp
mov
xchg
mov
inc
dec
jg
out
inc
in
mov
add
fnstenv
dec
xchg
ss
adc
iret
dec
push
lret
lcall
pop
add
sbb
mov
sbb
ficoms
daa
push
lods
cmpsl
pop
and
xor
cmp
aas
or
incb
jp
cld
pop
jle
pop
add
cmp
xchg
out
enter
into
push
mov
aaa
sarb
scas
fistpl
xor
or
and
sub
in
js
cltd
dec
jb
inc
mov
sar
in
lret
inc
cltd
shrb
and
jp
movsl
insl
sbb
rcrb
or
mov
mov
hlt
fcmovu
jecxz
sbb
jb
andl
fbstp
mov
xchg
adc
cltd
test
dec
test
pop
pop
lret
mov
pop
xchg
nop
aas
idivl
inc
idivb
inc
inc
aam
es
push
adc
mov
inc
lcall
xor
stos
pop
xchg
and
stos
push
fldcw
ljmp
pop
movsl
add
jl
cmc
ret
fdivrl
pusha
cmp
push
xchg
cli
inc
in
sub
push
iret
pop
out
lahf
or
jmp
mov
test
lcall
add
jnp
sub
inc
ret
push
add
xlat
and
adc
rcll
out
mov
rolb
adc
clc
cmp
pop
jae
es
adc
push
es
lret
shll
mov
xchg
mov
jno
cmp
cmp
mov
xor
cltd
jae
mov
emms
adc
call
aam
jns
leave
inc
leave
iret
and
mov
xchg
pop
sub
mov
xchg
mov
lret
dec
int
xor
jo
inc
mov
enter
xor
pop
mov
jl
sub
adc
in
les
scas
mov
out
or
rolb
add
test
cmp
jle
cmc
sbb
mov
test
cltd
xorb
inc
into
pop
sub
jg
mov
mull
inc
mov
sbb
pop
mov
fucomp
xor
add
cmc
mov
adc
daa
mov
cmpsb
mov
or
push
bound
int
adc
jns
or
loop
adc
fstp
lds
and
bnd
inc
mov
nop
rcrb
xchg
xchg
adc
in
xorb
xor
test
mov
pop
xchg
mov
cmp
rcr
mov
nop
testb
ds
and
lret
repz
mov
cmp
mov
add
dec
mov
test
lret
adc
mov
push
repz
cwtl
enter
adc
lcall
imul
mov
arpl
enter
push
lods
pop
cmp
icebp
rcll
inc
mov
xchg
and
pop
mulb
rdmsr
adc
jmp
enter
lret
cmp
fadds
lea
jne
call
movl
into
js
sbb
mov
and
hlt
adcl
aam
add
fldlg2
sub
out
sub
insb
movsl
push
jmp
js
pop
jmp
adc
jge
mov
lret
push
mov
mov
inc
inc
call
or
or
xchg
adc
xchg
pop
fldcw
ret
or
pop
mov
lret
push
popf
mov
xor
imul
cmp
imul
add
push
push
dec
and
mov
das
bound
dec
sub
mov
and
and
adc
inc
stc
loop
add
inc
aaa
jne
mov
pushf
jo,pt
jb
xchg
and
popa
out
es
inc
mov
inc
mov
jae
push
test
add
mov
rclb
xchg
add
leave
rcll
out
dec
jge
lea
notl
hlt
fcomp
jb
xorb
ljmp
push
dec
sub
xchg
pop
inc
xor
outsl
push
arpl
xchg
dec
push
mov
jb
adc
jne
xor
add
sub
inc
loop,pt
sbb
iret
imul
pop
dec
pusha
mov
sbb
mov
fs
mov
xor
lock
mov
lret
inc
lds
push
mov
jnp
leave
xlat
sub
jmp
mov
fs
addr16
inc
add
push
inc
sub
testl
lods
xor
jnp
fbstp
inc
add
mov
sbb
fs
pop
cmp
icebp
push
inc
mov
push
or
mov
cmpsl
mov
test
mov
jno
movsl
pop
sahf
lods
aas
push
lcall
xor
out
imul
sbb
sbb
cmp
in
orb
scas
dec
lods
jecxz
push
pop
outsb
jae
mov
add
ret
aad
movsl
dec
dec
mov
xor
push
sbb
inc
daa
cmp
sub
push
in
mov
jge
jbe
push
into
mov
dec
loop
dec
sub
aas
nop
ljmp
loopne
mov
jge
or
cli
pop
sbb
lock
or
inc
ffree
cmp
mov
pop
jb
xchg
clc
mov
or
dec
dec
lock
scas
cltd
push
inc
cs
shll
cmp
gs
xchg
mov
insl
xor
and
cmpsl
jae
sbb
mov
jno
jno
cmp
movsb
mov
sbb
jecxz
std
sbb
jae
mul
lret
xchg
aaa
leave
jle
leave
sahf
xchg
jle
gs
jb
mov
in
repnz
cmp
inc
test
fdivs
cld
sbb
stc
and
sub
and
lcall
pusha
mov
sbb
mov
test
mov
cmpsl
rcr
inc
dec
xor
mov
addb
movsb
cli
imul
out
mov
aas
int3
mov
insb
popf
add
or
cli
sub
sti
mov
push
in
jnp
push
adc
fcompl
sub
popa
and
cmp
test
adc
insb
or
data16
in
adc
mov
test
enter
sahf
sbb
fstpl
push
or
xor
xchg
xchg
test
cli
push
adc
call
outsl
lock
adc
pop
outsl
dec
dec
pop
sub
in
dec
mov
das
test
stos
cld
or
jae
and
out
cmp
fdivl
iret
ficoml
repnz
sub
push
shlb
repz
pop
repnz
fstps
bound
out
in
loopne
imul
jne
outsb
inc
cmpsb
push
push
mov
pop
jg
push
xor
sbb
xchg
adc
jge
mov
inc
jge
push
mov
lret
int
xlat
mov
dec
inc
push
push
xor
cmp
xchg
push
movsl
xor
mov
jg
push
jmp
push
popf
arpl
or
movsb
mov
xor
jge
mov
dec
lods
outsl
iret
sub
jbe
rolb
mov
jp
adc
cmp
cmp
dec
outsl
inc
mov
sbb
fld
fsubr
das
jnp
ret
fcomps
in
push
repz
js
subl
and
outsb
xor
out
jae
repnz
test
in
js
cwtl
cli
sbb
insw
mov
mov
xor
ljmp
sbb
bts
mov
jge
lods
fwait
inc
out
popf
roll
mov
mov
jmp
dec
iret
push
movl
lock
mov
repz
mov
add
mov
xchg
cmp
mov
pop
outsl
insl
stos
push
and
ss
pusha
dec
cmp
mov
mov
pop
sbb
mov
cwtl
stos
sbb
cmpsl
and
dec
jp
add
fisttps
in
pop
nop
or
mov
lcall
fadds
mov
jno
sar
pop
push
mov
test
mov
sbb
cld
or
rorl
rcll
enter
sub
dec
add
das
push
cmp
bswap
and
jmp
jp
clc
sbb
pop
mov
push
loopne
loopne
cmpsl
nop
push
sti
mov
inc
ss
cltd
cmc
sbb
out
mulb
cmp
mov
cs
sbbl
push
mov
dec
pop
mov
and
rorb
add
std
mov
ljmp
jns
lods
ds
es
out
nop
adc
xchg
mov
loop
cmp
ja
gs
int3
adc
add
jg
push
std
xchg
scas
push
out
add
rep
in
pop
enter
sbb
movsl
sbb
jne
sbb
xlat
in
stos
and
pop
adc
push
nop
fs
inc
and
or
add
push
sbb
sahf
fstps
or
pop
inc
push
xchg
push
cmp
xor
leave
loope
pop
test
stc
outsb
int3
inc
mov
mov
cli
mov
pop
out
adc
push
cmpsb
or
out
out
fwait
xchg
xchg
scas
add
or
enter
jne
andb
test
sub
xor
mov
cld
je
push
jns
inc
out
mov
mov
push
outsl
insb
inc
mov
lds
push
lods
std
pusha
aas
or
xchg
test
in
xor
add
pop
or
push
sbb
mov
and
mov
dec
jns
jno
js
xchg
mov
outsl
xor
cmpsl
popa
bound
xor
lods
loop
clc
popl
icebp
fadd
mov
jae
push
xchg
mov
or
inc
inc
push
adc
jae
sbb
mov
addr16
dec
in
repnz
test
push
fwait
repnz
mov
adc
dec
sub
and
push
popf
call
jp
add
fs
inc
dec
popa
aam
leave
jnp
push
adc
or
or
push
js
fwait
sub
jmp
adc
mov
das
lock
pop
aas
andb
movsb
andl
cmp
or
addr16
push
lock
mov
sub
xchg
cwtl
es
cmp
int
loopne
addr16
sbb
cmpb
cmpsl
out
jae
cs
jp
loope
jmp
pop
outsb
add
je
xchg
or
cld
mov
test
adc
lock
jnp
sbb
xor
gs
dec
fcmovb
mulb
pop
cmp
jmp
out
mov
sbb
or
fcmovnbe
jno
cwtl
fs
dec
mov
lods
cmpsl
mov
mov
xchg
pop
aaa
int3
into
push
pop
pushf
mov
cltd
fwait
stos
hlt
sub
out
push
push
pop
push
push
sub
leave
fs
insb
pusha
rolb
jne
jae
dec
cmp
leave
arpl
test
xchg
pushf
ficoml
test
daa
and
sbb
call
lahf
cmp
jne
repz
cwtl
mov
sbb
lret
sub
sub
or
lret
dec
fbld
xorl
scas
nop
sub
cmp
add
push
adcl
daa
push
daa
jl
cltd
push
shlb
xchg
mov
movb
jle
mov
push
xchg
out
stc
mov
jb
in
addr16
cmp
mov
mov
and
repnz
cld
mov
or
lock
into
xchg
and
pop
pop
pushl
pop
mov
jge
dec
cs
lret
ljmp
lcall
adc
cmp
pop
ret
enter
orl
loope
cmp
sahf
mov
xchg
adc
xor
icebp
adc
or
mov
jp
pop
sarb
outsb
mov
mov
cmp
fisubrl
test
pop
push
jne
inc
mov
pusha
mov
and
enter
les
cmc
aad
enter
mov
cli
dec
test
dec
daa
dec
sub
fdivr
negb
pop
jo
dec
sub
out
sub
sub
gs
insb
push
xchg
adc
mov
pop
pusha
shrb
enter
sbb
jp
fs
sub
dec
repnz
xor
mov
push
cmc
inc
ror
or
pop
mov
mov
imul
sub
movsb
or
fimull
xor
cmp
popf
adc
pop
insb
enter
test
cmpsb
jae
add
fs
inc
sub
rorb
xchg
mov
js
das
std
push
dec
xor
push
loop
dec
icebp
mov
cmc
andb
cwtl
pop
nop
pop
mov
pop
es
or
push
sbb
loop
lods
xor
xchg
je
adc
xchg
jecxz
das
xchg
cmp
scas
adc
cmp
inc
add
push
jnp
cld
sbb
rorb
push
pop
fwait
out
addr16
int
aaa
aam
cmpsl
and
mov
mov
inc
mov
aas
cli
push
adc
xchg
ret
pop
cwtl
lds
shlb
push
mov
dec
mov
push
rcrb
arpl
xor
andl
shll
sbb
idivl
push
inc
xchg
dec
je
adc
sub
or
jo
sub
bound
mov
fmul
push
xchg
jb
jns
ret
mov
and
mov
cs
add
xlat
out
xchg
or
jnp
push
xor
push
jp
pop
idivb
mov
pop
push
or
icebp
inc
sbb
dec
jnp
scas
cwtl
imul
mov
int
sarb
cmc
sti
jno
dec
push
loop
cmpsb
daa
in
movsl
mov
mov
es
rol
jecxz
inc
into
mov
lods
adc
repnz
into
iret
ret
shlb
imul
sub
mov
rclb
jmp
repz
lcall
xchg
xor
aaa
mov
ja
psraw
dec
lds
bound
push
aas
lret
mov
sub
adc
test
outsl
insl
in
mov
xor
gs
and
mov
aad
or
repnz
scas
int
and
xor
rorb
mov
pop
aad
fistps
fstl
mov
xor
jl
ds
jge
pop
sbb
shll
test
fwait
push
sub
sbb
pop
and
xor
ficompl
stos
push
adc
sbb
lret
xor
xchg
inc
mov
lds
mov
cld
mov
stc
jne
in
mov
out
mov
movsl
shl
fmuls
pushf
mov
xlat
cmp
call
push
divb
mov
orl
fstpt
cmc
cmc
xor
cld
push
sahf
adc
sahf
pushl
mov
cmp
and
push
or
mov
fwait
mov
cld
popf
gs
sbb
loop
xchg
dec
ret
das
inc
fcmovne
test
lahf
aas
ret
rolb
dec
in
sbb
mov
inc
pop
fadds
xor
fstpl
push
and
scas
inc
out
push
inc
aam
dec
xchg
jnp
sub
xor
mov
fs
dec
jbe
in
data16
outsb
das
xchg
sub
pusha
test
dec
cmp
cmp
xchg
into
rcl
mov
out
push
rclb
call
ja
push
shlb
sar
adc
int3
mov
pop
or
push
mov
cmc
mov
ja
adc
sarl
xchg
sbb
mov
and
pop
mov
fdivp
imul
ja
shrb
mov
ljmp
adc
mov
mov
or
iret
or
xchg
mov
fs
aad
cltd
in
sti
xchg
imul
jno
push
mov
xchg
ds
add
rclb
and
fcmovnu
fimuls
sbb
inc
imul
cmp
push
cmp
dec
sti
jno
and
jo
jne
pop
push
enter
mov
and
lock
push
pushf
mov
pop
ja
pop
cmp
into
shrb
out
scas
dec
scas
cmp
cmp
cmp
push
icebp
adc
xor
push
push
mov
aas
dec
iret
and
and
jg
or
addr16
or
dec
nop
cld
cmpsl
push
hlt
out
std
sti
add
dec
in
ror
inc
adc
imulb
push
cmp
inc
mov
in
test
sbb
ds
mov
fdivrl
and
jecxz
int
addr16
jmp
push
add
cmp
mov
andb
pop
aaa
test
mov
mov
arpl
jl
mov
stc
xchg
cltd
mov
add
outsl
or
dec
push
mov
and
lock
out
sub
push
adc
mov
pushf
mov
inc
jecxz
sub
inc
andb
add
xor
inc
push
scas
and
mov
jg
out
arpl
arpl
add
xor
aad
adc
lret
xor
arpl
pop
jo
cmpsl
pop
cld
sbb
addr16
mov
repz
mov
popf
cmp
mov
jns
sbb
mov
or
fwait
das
ss
cmpsb
arpl
or
std
mov
sbb
push
lds
pop
inc
jecxz
cmp
inc
push
test
mov
mov
lret
andl
pop
mov
repz
sub
scas
adc
xor
dec
shlb
leave
insl
pop
xchg
shld
add
mov
mov
xchg
or
call
xor
ja
sub
scas
push
stos
cmpb
repnz
hlt
outsb
and
add
fdivrp
xchg
mov
sahf
dec
and
xlat
adc
mov
mov
jle
add
sub
xchg
insb
pop
pusha
into
aam
dec
push
imul
push
dec
cmp
sarl
insb
ds
push
sbb
mov
dec
into
xorl
test
pop
add
lea
push
push
repnz
popa
jno
mov
mov
or
push
test
rcr
jmp
pop
inc
movsb
sub
popf
in
mov
subb
adc
dec
mov
insb
xor
inc
rcll
cs
cltd
or
movsl
add
adc
pop
in
test
arpl
dec
inc
dec
cmp
fwait
dec
lcall
imull
pop
arpl
xchg
mov
int
sub
sbb
clc
jno
leave
push
cmp
adc
pop
test
pop
enter
call
sub
lods
cwtl
fs
jle
cmc
lock
mov
push
mov
ss
ret
negb
aaa
push
push
and
arpl
outsl
ds
xchg
xchg
ret
sub
xor
mov
leave
and
and
mov
pop
mov
add
jb
mov
loopne
int3
and
andb
mov
mov
fsubs
and
mov
negl
icebp
in
lret
in
in
add
cmp
sti
mov
adc
out
push
ljmp
sbb
push
les
js
lcall
mov
push
pop
test
pop
cld
arpl
es
cvtdq2ps
jno
push
push
push
data16
sbb
in
loopne
xor
mov
dec
decl
ja
jle
insb
push
xchg
xor
aam
jle
bound
int3
lds
or
mov
xor
scas
test
adc
jne
and
mov
mov
roll
jecxz
xchg
push
pop
pop
lods
daa
in
push
shr
enter
mov
cltd
loopne
mov
imul
xor
shrb
fcom
mov
jle
imul
push
sbb
daa
cltd
mov
mov
sahf
fidivs
sub
loopne
cld
mov
scas
mov
cli
dec
pushf
xorb
insb
fwait
out
inc
xor
mov
scas
sub
out
ds
pop
push
xchg
in
push
scas
push
dec
xor
mov
jne
repnz
cmp
aad
and
inc
inc
xor
add
pop
aaa
shl
sbb
out
jl
cltd
ja
dec
adc
aas
sarb
adc
jg
loop
or
insl
jle
hlt
push
xorl
add
pop
test
sub
les
lods
inc
sbb
dec
mov
movswl
xchg
lahf
push
sahf
xchg
mov
jo
loop
inc
sbb
mov
in
add
pop
mov
lock
push
push
dec
iret
repz
mov
jne
es
shlb
repnz
pop
fisttpll
lret
xlat
ja
jmp
aaa
mov
adc
stos
and
cmp
sbb
cmp
int3
push
or
pop
pop
sub
sbb
cwtl
cmp
xor
ds
and
mov
jbe
clc
adc
lods
pop
xchg
jo
mov
xchg
ss
cwtl
popf
xchg
add
add
add
in
pop
xchg
mov
xorb
aas
cltd
mov
and
das
mov
and
std
jle
pop
adc
test
int
int
cmp
dec
aaa
cld
xor
sub
shll
or
cwtl
add
pop
dec
subb
imul
sbb
scas
jnp
gs
sbb
fnstenv
xor
mov
fwait
xor
xor
ljmp
int
repnz
cmp
out
sub
pop
sub
stc
mov
enter
arpl
xchg
cmp
mov
mov
iret
xchg
test
adc
adc
jns
les
xchg
das
xor
push
cmp
push
mov
xchg
mov
mov
or
jl
mov
shrb
es
adc
movsl
dec
ja
enter
dec
push
add
jo
add
dec
shrb
mov
sub
cmp
add
pop
add
daa
mov
and
adc
shll
adc
add
fmull
mov
dec
pop
inc
aam
mov
call
push
fcoml
clc
test
js
ja
adc
inc
sbb
out
adc
mov
pusha
jne
add
mov
or
xor
lret
mov
jne
inc
and
mov
sub
hlt
mov
xchg
pop
out
xchg
loopne
cld
outsb
sbb
and
adc
cld
pop
inc
ror
imul
jb
inc
cmpsb
aad
ss
loope
ds
jnp
pop
std
add
sub
or
dec
out
jbe
scas
and
push
dec
pop
xor
out
push
inc
inc
pushf
aad
dec
jbe
fcomps
cmp
daa
sbb
orl
insb
lea
int3
jl
les
mov
faddp
xlat
shrb
mov
dec
adc
out
sub
iret
inc
mov
xor
and
xchg
jae
out
push
cmpsb
aad
aaa
sahf
push
in
sub
ja
push
sbb
mov
inc
lods
add
mov
in
mov
cmpsl
mov
sub
dec
les
push
ret
dec
scas
add
jne
inc
inc
mov
movsb
int
add
cli
pop
pop
push
xchg
andl
push
dec
or
fwait
insb
scas
data16
sbb
sbb
sbb
sahf
pop
lea
lock
ja
insb
mov
pop
mov
test
pop
adc
aaa
inc
pop
aaa
lds
shrl
pushf
mov
lret
rcl
xor
jg
jle
jecxz
mov
jp
mov
fsts
test
in
cld
pushf
inc
call
or
pop
cmp
push
mov
fadds
std
pop
push
shl
call
push
push
scas
out
hlt
sbb
mov
sub
inc
jmp
lret
adcl
jmp
loope
jnp
push
mov
cmpsl
cmpsb
xchg
mov
mov
sub
aas
or
hlt
inc
lds
add
in
cmp
pop
mov
jg
inc
xchg
mov
pop
scas
inc
and
adc
jae
pop
inc
adc
inc
dec
pop
inc
dec
out
imul
and
adc
inc
push
fcmovbe
xchg
hlt
mov
adc
xchg
push
mov
mov
push
cmp
stos
fxch
inc
ja
pop
flds
xorb
shufps
subb
cwtl
inc
sbb
fstpl
sub
pop
outsl
pop
adc
daa
sub
adc
jnp
call
cmp
and
lret
lods
in
push
xor
icebp
xchg
jns
imul
sub
push
and
bound
sub
add
mov
jb
jp
xchg
jne
dec
and
add
int3
decb
outsb
mov
mov
jae
lea
nopl
mov
fisttpl
arpl
jbe
imul
push
dec
xor
and
mov
in
push
xchg
in
arpl
fstp
repz
imul
dec
outsl
adc
or
ljmp
pop
test
sti
ds
push
sub
and
popf
gs
mov
dec
cltd
xor
sub
add
sub
cli
lahf
add
ja
or
jo
or
int
cld
cmpsb
pop
daa
mov
call
loope
insl
movsb
jno
or
addr16
fistpl
sub
push
or
movb
lret
jle
mov
cmp
or
fcomps
orl
dec
mov
sub
inc
push
xor
mov
dec
jl
outsl
ja
in
mov
jb
dec
and
test
fldl
jp
jge
push
mov
call
mov
and
mov
mov
jno
test
sbb
popa
rcll
insb
lahf
xchg
xlat
insl
ds
push
lcall
inc
movsl
lea
mov
cli
push
jbe
sbb
repz
dec
sbb
movsl
cmp
flds
sbb
pop
lock
xor
mov
cmp
into
enter
pop
lods
mov
or
adc
sub
ret
xor
rcr
in
adc
data16
jl
lret
icebp
sub
dec
icebp
sub
fsubl
pop
iret
or
ja
lret
cli
or
xchg
and
arpl
xor
mov
scas
push
pop
gs
shr
cmp
out
fbstp
ret
pop
imul
sbb
paddusb
mov
xchg
arpl
cmp
mov
pop
lret
js
and
cld
insl
imul
ds
jg
push
sahf
cmp
cwtl
js
jp
or
jp
adc
out
dec
mov
clc
sub
cmp
lret
pop
dec
xorb
lret
adc
dec
aas
aad
mov
sbb
cltd
jecxz
fists
sub
mov
jbe
lret
jbe
push
test
dec
pop
repnz
xor
pop
pop
dec
mov
xchg
jle,pt
cmp
inc
mov
push
sti
sub
or
subl
push
ja
push
mov
inc
xor
rcrb
dec
push
cmp
std
hlt
fbstp
fcmovnbe
xchg
inc
dec
fisubs
inc
pop
mov
pop
pop
mov
xchg
sbb
in
sub
les
xchg
sahf
xchg
or
add
push
subb
cmpsb
call
push
mov
dec
mov
call
or
jne
xchg
mov
adc
cmpsb
sarl
ret
outsb
and
fwait
mov
add
jle
and
notl
mov
or
lods
sub
jle
push
add
cs
mov
ja
jns
mov
add
mov
cmp
in
push
ss
xorb
jb
imul
dec
sbb
cmp
loopne
mov
push
pop
add
in
scas
in
mov
lds
mov
movsl
pop
scas
sbb
sub
cmc
pop
inc
in
movsb
int3
push
mov
cltd
cmpsb
add
pop
and
adc
mov
repnz
lods
test
add
pop
fnsave
sbb
pop
test
pop
push
pop
loop
mov
mov
xchg
mov
mov
js
xor
icebp
scas
sbb
sbb
jl
lock
sub
cmp
imul
fwait
mov
insb
shrl
sub
stos
or
adc
arpl
cmpl
jg
fistps
push
popf
pop
push
inc
push
xchg
stos
movsb
jne
and
adcl
insb
pop
cwtl
pop
pushf
das
mov
divl
adc
mov
pop
gs
lcall
sbb
pop
cmpsl
in
xchg
repnz
push
mov
and
aas
jmp
inc
mov
adc
inc
vmread
adc
mov
lods
dec
fdivrl
cs
xchg
sarb
cmc
shll
ss
mov
add
pop
mov
popa
ja
adc
mov
xchg
or
data16
adc
xor
adcl
loop
pop
sbb
jae
bound
pop
repnz
cwtl
push
xor
test
ret
add
loopne
mov
mov
inc
mov
out
cmp
in
pop
sub
cwtl
int
xlat
mov
adc
test
aad
inc
adc
push
jmp
scas
jmp
sbb
mov
pop
mull
mov
add
sti
icebp
mov
mov
lret
sub
push
jle
lcall
xor
mov
sub
sti
xor
mov
aas
adc
or
jae
pop
shlb
inc
xchg
cwtl
cmpsb
adc
add
int
xchg
xchg
pop
clc
adc
xor
cmc
jb
push
xchg
pop
addb
mov
xchg
popf
cmpsb
inc
mov
sar
mov
dec
push
pop
jg
xor
lahf
xchg
mov
outsl
or
call
dec
add
pop
xor
aas
test
movl
xor
push
test
inc
and
xchg
add
xchg
ret
pop
shlb
divb
cld
addr16
movsl
repz
daa
sub
sbb
push
pop
mov
adc
pushf
xchg
fnstsw
and
daa
xchg
inc
sub
mov
inc
loop
adc
xchg
mov
lods
cmp
pop
je
dec
aas
mov
and
ret
out
iret
jp
pop
push
cmp
bound
pop
andl
mov
sbb
movsl
sbb
pop
inc
and
cmp
lcall
dec
scas
out
sti
xchg
shl
int3
insb
and
mov
icebp
jge
fisttpll
cmp
movsl
push
stos
xor
sub
mov
dec
lods
aaa
sbb
cld
leave
jbe
mov
mov
popa
sbb
fildl
xchg
or
or
mov
js
jnp
fdiv
xor
fucom
repnz
icebp
jnp
sub
cld
pushf
iretw
mov
icebp
fists
xchg
ret
mov
pop
bound
cmp
mov
inc
mov
cmp
fbld
insb
jle
cmp
xlat
hlt
add
jo
or
das
loopne
mov
sub
cmc
pop
add
movb
add
dec
mov
inc
lods
out
xchg
iret
cmp
shr
stos
sarl
dec
mov
lods
mov
dec
sti
and
mov
mov
out
or
rclb
insb
pop
dec
rorb
sub
jp
iret
push
xor
and
pop
or
jle
dec
inc
cmp
dec
loope
sahf
xchg
pop
sbb
je
dec
mov
xchg
hlt
jb
jno,pt
ljmp
les
adc
xor
gs
ljmp
inc
xchg
icebp
cmpb
mov
mov
or
mov
movsl
push
inc
cmp
mov
jle
enter
cmp
sbb
cmp
pop
fdivrs
mov
loopne
divl
lcall
aam
daa
mov
pop
mov
mov
adc
mov
imul
es
mov
aam
repnz
add
and
stc
repnz
xchg
pop
xchg
test
fcoml
jne
lods
mov
ja
call
push
mov
incl
movsb
les
pop
fisttpl
arpl
jno
outsl
mov
test
ljmp
add
push
push
andl
mov
int3
aas
sbb
mov
inc
rol
lahf
mov
in
or
sub
lods
sub
repz
test
cmc
idivb
jle
lcall
lods
stos
fisubrs
sub
cmp
std
outsl
cmp
mov
int
cs
mov
adc
jp
add
cmp
xchg
ja
lea
sub
int
cs
in
scas
enter
lock
jbe
and
stos
fbld
mov
ret
scas
add
scas
fsubrs
and
enter
in
jmp
in
jns
mov
sti
loopne
cmp
pop
lock
mov
or
cmpsl
pop
or
xlat
inc
ja
rorb
cmpsb
stc
ss
mov
xchg
xor
jbe
sbb
bound
lods
or
cmp
in
mov
pop
shll
xchg
mov
shrb
mov
add
xchg
adc
mov
fs
aad
or
in
icebp
adc
fiaddl
imul
jmp
sbb
jl
sahf
add
js
cmp
jno
pusha
push
xchg
rcl
push
sub
test
mov
sub
xor
not
sbb
cmc
aam
or
cmp
mov
inc
mov
jg
ret
shl
adc
pop
pop
push
insb
mov
jb
stos
ljmp
push
das
mov
cmp
push
and
test
rcrb
std
xchg
in
out
test
fistps
loopne
jb
xor
imul
push
out
adcl
xor
push
add
mov
push
stos
dec
push
cltd
pop
xchg
mov
loopne
mov
test
add
test
mov
out
loope
mov
mov
mov
sbb
testl
adc
push
in
adc
push
jns
mov
jae
mov
or
scas
nop
and
jo
hlt
cs
lret
loop
dec
cmpsb
data16
les
imul
sbb
mov
fcmovbe
xor
scas
lea
daa
ret
push
inc
loope
clc
jb
sub
adc
cmp
ss
negl
lods
sahf
mov
jo
pop
or
stos
xchg
imul
stos
mov
int
fadd
int3
cmp
xlat
out
test
mov
sub
mov
dec
sub
sub
lods
ds
adc
xchg
sbb
aas
loope
nop
push
and
jg
in
cmp
clc
mov
fadds
rcll
mov
pop
sbb
xchg
dec
and
imul
popa
dec
pop
add
ljmp
jns
jae
pop
or
inc
sub
push
jo
aas
adc
mov
cs
and
clc
push
and
sbb
and
cmp
jle
jne
or
repnz
fimull
mov
cmp
mov
movb
jno
xor
push
xchg
and
std
adc
aaa
mov
inc
les
inc
out
xor
rcrl
mov
jb
std
or
inc
gs
test
aad
int
scas
pop
pop
mov
mov
out
lret
xlat
faddl
push
mov
dec
cmp
sub
es
shr
sti
outsl
mov
fwait
inc
and
and
bound
les
mov
add
inc
test
cmpb
clc
aad
and
pusha
lds
mov
rolb
cmp
xchg
dec
popf
test
lahf
mov
pop
lea
std
jbe
dec
sbb
or
xchg
jb
mov
mov
divl
pop
push
ret
inc
pusha
inc
hlt
pop
pop
cmp
aaa
repnz
fstps
mov
leave
popf
dec
add
add
sar
sahf
out
mov
ja
in
push
mov
loope
jns
notb
movzwl
loope
adc
sub
mov
rcll
shl
loopne
subb
stos
loop
sub
shrl
std
insl
ja
into
movsb
test
add
inc
or
nop
push
fidivrl
xorl
popf
out
push
push
pop
int3
fs
ret
mov
fnstcw
sub
mov
adcb
aas
or
lret
and
cmpsb
mov
cmp
mov
adcl
mov
cmp
add
cmc
cmp
mov
xchg
and
test
sbb
xchg
rcll
aas
jg
repnz
push
dec
cmpl
jne
rcl
sti
bound
in
mov
repz
sbb
push
mov
cltd
sbb
out
add
clc
out
pop
add
daa
dec
lret
xchg
je
xchg
jle
or
mov
mov
ljmp
dec
lea
jbe
sub
or
adc
jo
outsl
pop
pop
lcall
movl
push
and
sbb
sbb
xlat
clc
dec
mov
xchg
pop
jl
int
xchg
addl
sub
mov
jb
arpl
dec
cmp
pop
xchg
jp
sar
mov
js
hlt
add
loopne
loope
adcl
fisttps
scas
xchg
movsb
pop
cmp
or
xchg
jo
shrl
jecxz
inc
rorl
in
pop
mov
test
sub
loop
push
dec
cmc
ror
jle
sbb
enter
push
fcmovne
push
mov
cmpb
xchg
dec
sahf
mov
bound
jl
or
pop
addr16
jbe
xchg
js
and
es
cltd
sbb
and
add
ss
mov
fcoms
repnz
pop
xchg
xchg
mov
insl
rorl
inc
das
inc
sub
inc
cmp
std
insb
test
sahf
sub
insb
jge
or
sbbl
cmpsb
fdiv
adcb
lods
push
push
push
lcall
xor
and
dec
mov
xchg
fsubrl
mov
outsl
push
sbb
push
les
adc
xchg
hlt
xchg
popf
scas
test
dec
push
add
add
movsl
mov
xor
cltd
fimull
add
cmp
ljmp
cmpsl
dec
aaa
std
mov
push
mov
push
dec
push
push
call
sbb
push
dec
pop
dec
into
push
inc
xchg
rclb
aas
pop
mov
sbb
cmp
pusha
rolb
in
xor
test
xor
cmp
or
push
mov
or
push
addr16
loop
ficoms
scas
imul
adc
add
jns
add
xor
loop
das
sbb
push
pop
insb
add
in
pop
out
sub
and
rclb
jb
orb
fisubrl
mov
lcall
ss
dec
pop
lea
sub
andl
pop
mov
cmp
test
xchg
mov
into
jbe
outsl
and
jnp
sti
cmp
dec
loope
dec
jae
dec
dec
iret
push
in
or
and
outsl
jmp
daa
push
je
mov
mov
jp
jecxz
leave
dec
fistps
inc
xor
in
xchg
shll
xor
or
mov
jno
push
loope
push
dec
mov
mov
mov
sub
sub
out
inc
andb
test
je
xchg
movsl
clc
das
inc
mov
adc
mov
jbe
cmp
cmpsb
scas
ficoms
xor
int
int3
insb
loope
xchg
cmp
adc
inc
cld
sub
cltd
stos
stos
mov
out
cli
adc
inc
or
mov
or
clc
scas
loop
or
pop
out
mov
out
sub
sahf
outsl
out
lea
pop
pop
testb
adc
and
dec
lahf
rcl
jl
push
dec
xchg
ja
jbe
fmull
fcmovnb
leave
jo
or
negl
xlat
data16
mov
sbb
or
cmpl
cmp
pop
xor
in
cld
push
fmull
push
mov
mov
cmp
pop
and
jns
jno
sahf
es
jno
call
push
cltd
cmp
mov
or
mov
lds
adc
pop
nop
sbb
mov
pop
cmc
aam
push
arpl
das
iret
pusha
loopne
cmpb
sbb
adc
lods
lret
call
shrl
daa
mov
arpl
dec
mov
andps
lahf
pop
cmpsb
sbb
in
pop
sti
inc
cmp
xor
int
push
xor
add
dec
scas
cmp
sub
mov
lret
pushf
mov
cmp
jae
inc
stc
adc
sbb
fldenv
pop
bound
lods
dec
das
or
sahf
xlat
pop
mov
adc
xchg
lea
movsb
arpl
jl
int
je
mov
pushf
push
xchg
inc
cmp
aam
jo
xchg
mov
xchg
imul
sti
popl
mov
dec
fbstp
push
mov
std
das
adc
incl
sub
pop
pop
fistps
aaa
ficoml
jb
cmp
push
cmp
or
out
or
jecxz
pop
cli
push
add
xchg
les
mov
mov
dec
sbb
pushf
mov
jne
ss
test
int
xchg
and
nop
cmpb
inc
cmp
into
rep
ljmp
icebp
cli
mov
iret
xchg
test
pop
push
ss
sahf
repnz
ljmp
ss
pop
movsb
pop
push
adc
sbb
mov
push
ficoms
push
test
icebp
cmpsl
dec
xchg
xchg
cs
inc
inc
cmp
jle
stc
sahf
icebp
out
int3
or
pop
frstor
movsl
mov
enter
push
mov
loope
arpl
in
mov
mov
mov
push
mov
add
cltd
sub
push
pop
insb
aam
sti
scas
mov
fists
mov
popl
add
adc
add
fs
jne
pusha
pusha
or
mov
lret
xchg
ss
add
arpl
xor
sar
cwtl
jo
les
push
cld
aad
dec
mov
mov
mov
push
popa
mov
test
push
stos
inc
jle
mov
push
ja
add
fnstcw
popa
aad
dec
outsb
rcrl
rol
daa
mov
push
in
fwait
daa
adcl
ret
subl
xchg
es
inc
cmp
loop
out
jl
push
jg
xor
insb
mov
mov
mov
cmp
adc
rcrb
jno
inc
int
push
add
fildll
xchg
push
cmp
imul
shll
jo
insl
sub
icebp
adc
jb
jno
xchg
bound
jmp
les
jg
fsubrl
or
inc
mov
js
repz
std
xor
outsl
jns
mov
add
mov
fbld
mov
add
cld
sub
or
and
xlat
aam
jo
popa
and
mov
repnz
rcrl
lods
mul
in
add
aad
push
dec
xchg
sbb
or
add
decb
jnp
test
enter
adc
bound
jmp
out
mov
push
or
xor
and
ss
or
sbb
or
enter
push
lods
test
cltd
mov
fimull
fidivs
cmp
into
xchg
fs
inc
mov
dec
pop
add
xchg
push
insl
movsl
mov
into
repz
repz
negb
or
ss
ss
push
test
fsubs
mov
sub
pop
pop
jmp
mov
data16
mov
imul
mov
cli
cmp
shl
xor
iret
mov
mov
lahf
aas
paddsw
and
push
adc
mov
inc
inc
jno
jmp
jl
or
mov
stos
jae
in
pusha
jp
pop
xor
and
orb
das
fsubl
jo
and
imul
movsb
push
loopne
iret
or
inc
xchg
icebp
movsl
cmp
xor
push
mov
repz
pop
xchg
imul
sbb
data16
fdiv
mov
imul
loopne
push
inc
push
leave
dec
mov
mov
mov
ss
jmp
sar
dec
push
cmp
push
mov
icebp
in
test
pushf
pop
pop
cmp
or
stos
cli
sub
dec
adc
fildll
lods
jp
cmpsl
leave
popa
lock
scas
mov
popf
inc
xchg
shlb
pusha
movsb
dec
mov
xchg
mov
mov
lret
int
sub
addr16
jbe
cld
fstps
or
sti
stos
clc
inc
pop
cmpsl
mov
xchg
xor
ja
mov
clc
outsb
orb
scas
and
shrb
test
loope
out
pop
push
dec
idivb
outsl
fsubrl
orl
lret
push
jb
cwtl
fcmovnbe
dec
dec
aaa
mov
adc
push
into
dec
popa
adc
or
fmuls
xchg
hlt
mov
xor
xchg
out
or
push
jge
jmp
flds
push
mov
in
sub
mov
pop
das
in
xlat
fsub
scas
pop
aam
hlt
pop
sbb
mov
dec
leave
mov
xchg
ret
jno
add
jge
xor
ljmp
mov
cli
pop
push
push
sub
imul
dec
adc
and
dec
inc
mov
push
mov
cld
xchg
test
dec
sbb
psubd
clc
cld
sub
fs
les
push
lods
stos
add
mov
faddl
sahf
or
in
jmp
push
out
pop
repz
jp
jmp
loopne
daa
mov
push
jp
test
test
xchg
test
mov
lcall
fstl
add
in
xchg
xchg
lret
and
repnz
sub
and
jmp
lcall
fstp
fcomps
and
cmpsb
nop
repnz
xor
movsl
inc
jecxz
push
add
mov
lret
ja
mov
push
pop
sub
pop
jp
cli
pusha
mov
adc
and
xchg
mov
xor
adc
sbb
cmpsl
add
mov
out
sbb
ficoml
and
pop
cmp
or
inc
mov
cwtl
jns
jns
out
pop
repnz
divb
fimuls
cmpsb
add
call
idivl
arpl
sub
cmp
mov
fistpll
lcall
sti
pop
shl
or
pop
pop
mov
pop
sub
jecxz
jle
and
imul
int
xchg
lock
jle
xchg
pop
add
xchg
cmp
and
cmp
nop
add
jo
pop
pop
jle
add
jbe
out
add
cmp
out
jae
inc
iret
mov
xchg
pinsrw
or
bound
addb
test
js
adc
rorl
ss
push
mov
fstl
inc
add
or
enter
cmp
xchg
addb
aaa
push
das
repnz
dec
dec
xor
cmp
leave
adc
cmp
in
js
mov
loop
in
push
jae
mov
cvtps2pd
ret
into
lret
pop
pop
mov
outsb
xchg
mov
mov
out
mov
sub
and
mov
lea
add
xor
push
xor
cmp
loope
push
loopne
push
push
gs
es
pop
fcomps
adc
data16
inc
jns
dec
lds
lods
ret
pop
lea
insl
mov
loopne
loop
inc
sub
pusha
inc
scas
dec
jp
cld
ret
adc
arpl
vandnpd
jns
mov
pop
sti
arpl
adc
pop
in
xchg
jge
out
dec
les
lods
jnp
xchg
in
jp
es
mov
cmp
inc
lret
push
fldcw
das
insl
lret
mov
adc
loop
cmp
mov
and
fiaddl
xor
lock
ja
scas
jns
mov
fstl
push
sub
fsubrs
loope
rcrl
mov
cmp
xor
push
gs
arpl
inc
xchg
cmc
mov
inc
test
repnz
andl
xor
aaa
out
hlt
add
mov
out
rol
lret
mov
call
mov
inc
clc
push
jo
cmpsb
xor
sahf
push
cld
mov
sbb
mov
add
add
bound
mov
jge
notb
test
mov
pop
mov
lock
aad
cmp
mov
sarl
jp
lds
insl
out
outsl
inc
cmpsb
lock
pop
jb
rcll
and
jbe
daa
adc
or
or
push
insb
push
sbbb
scas
inc
mov
cmp
xchg
push
cmp
rcrl
jle
test
and
push
pop
in
sub
rol
out
pop
int3
out
hlt
gs
in
cmp
pop
out
pop
clc
cmp
jp
outsl
mov
enter
test
insb
lock
adc
cmp
push
inc
shr
loopne
out
cli
ret
pusha
stos
js
aaa
xchg
stc
adc
sub
ja
nop
hlt
fwait
ja
or
popf
movsl
je
sbb
adcb
aam
dec
lret
scas
pusha
popa
stc
push
int3
aad
sbb
jmp
mov
in
or
jle
mov
push
out
rorb
ds
mov
std
popf
jb
stos
mov
mov
insl
cmc
test
mov
mov
loope
out
or
cmp
daa
sbb
ret
xor
dec
mov
cmp
adcl
pop
addr16
inc
mov
adc
xor
ss
sbb
aas
outsb
push
xchg
test
or
frstpm(287
ljmp
pop
adc
ror
stc
and
and
mov
xorl
arpl
iret
dec
pop
or
decl
call
xor
mov
push
sti
fildll
scas
jns
mov
orl
xchg
fnstsw
fsts
xchg
and
mov
add
pop
sbb
sahf
cmp
sbb
popf
pop
mov
or
scas
loope
sbb
insl
stos
pusha
push
sbb
inc
or
sbb
dec
inc
insl
inc
jne
test
shrl
xchg
fbstp
aas
mov
sbb
hlt
ret
xor
inc
jmp
mov
jg
push
jbe
mov
push
ret
jmp
jmp
lret
or
xor
movsb
xchg
mov
push
rcrb
inc
push
sub
loope
push
cmp
lcall
je
inc
inc
clc
leave
mov
call
pop
lock
cmp
mov
mov
fsubrs
aad
cmp
fwait
rep
mov
rcr
ret
add
xor
adcl
xchg
repnz
push
into
cmc
in
adc
scas
push
or
es
imulb
int3
pop
lret
cmp
push
jge
adc
push
xchg
addr16
outsb
xor
sti
repz
jo
sub
setl
cmp
int3
movsl
imul
std
mov
or
cmpsl
rolb
adc
jno
loop
mov
or
adc
int
decl
pusha
int
pop
add
rolb
push
loopne
cmpsl
lock
mov
das
sub
aas
and
arpl
fmul
inc
mov
rcrb
add
or
inc
test
sbbl
aad
cmc
sub
xor
inc
out
sub
mov
in
dec
pop
mov
lods
out
aaa
frstor
pop
cmp
or
cmc
or
stos
pop
push
test
pop
jo
jl
inc
insl
xchg
popa
xchg
arpl
fwait
xchg
push
pop
pusha
jp
out
push
pop
pusha
adc
or
jae
push
and
data16
in
cs
mov
into
in
mov
or
loope
in
imul
test
imul
call
adc
mov
adc
es
gs
ret
cmp
lods
roll
push
adc
test
mov
add
les
mov
add
jecxz
and
mov
push
xchg
push
xchg
loopne
nopl
mov
iret
sbb
pop
pushf
popf
out
int
jle
int
xchg
mov
or
cmp
jae
mov
push
subl
sub
int
into
sbb
fucomp
xor
fcomps
cli
test
jp
pusha
jle
imul
mov
push
icebp
push
cld
xorl
ljmp
jae
inc
lea
adc
xchg
pop
bound
push
or
pop
jb
insl
ljmp
fistpl
inc
stos
fsub
pop
out
jge
orl
jl
inc
cmc
insb
mov
into
int
loopne
nop
and
rorl
push
pushf
insb
cmc
sahf
adc
add
add
scas
imul
int
loop
lahf
jne
cmp
iret
pop
test
fbld
out
ds
sbb
or
hlt
push
mov
adc
stos
adc
inc
push
test
cwtl
or
aad
iret
mov
pop
dec
lock
jno
mov
loope
mov
dec
dec
inc
xchg
mov
pop
adc
inc
and
or
xchg
xchg
xor
mov
aaa
xor
dec
adc
sub
sbb
xchg
xchg
mov
test
xchg
clc
ffreep
out
sbb
inc
jg
mov
pushf
scas
and
xchg
filds
nop
mov
push
outsb
popa
loope
call
lea
xchg
push
cmpsl
mov
jno
in
xchg
and
mov
insb
cmp
mov
out
dec
dec
ret
xlat
loopne
fstps
notl
push
add
add
and
fucomp
std
mov
fldl
jnp
or
and
dec
mov
daa
mov
add
push
jns
xor
cld
aam
lahf
adc
fdivrl
adc
int3
pop
ds
in
movsb
sti
mov
popf
add
adc
xor
cmp
adc
gs
inc
test
in
adc
out
xchg
mov
cs
mov
rorl
ret
sarb
or
cmp
lahf
std
mov
mov
rclb
xor
or
inc
jp
xor
dec
xchg
sbb
mov
pop
addr16
fildll
or
roll
mov
pop
ja
cmp
jmp
cmpsl
fwait
mov
mov
mov
push
cwtl
push
shlb
mov
add
jns
push
jb
dec
jbe
out
jo
stc
push
cmp
cli
mov
cmpb
add
or
mov
mov
aaa
insl
in
mov
cmovo
faddl
push
jmp
gs
dec
push
or
xchg
imul
sub
xor
insb
push
sti
loope
xchg
mov
add
mov
mov
jnp
arpl
inc
push
orl
adc
cmp
jbe
out
ja
inc
pop
nop
pop
loop
imul
and
mov
arpl
stc
xchg
inc
out
cwtl
jecxz
push
jle
cmp
je
jo
call
sbb
gs
jae
mov
test
loopne
pop
and
ss
push
lods
xor
add
arpl
cltd
inc
and
adc
adc
pop
sbb
push
lock
pop
lods
lret
push
aam
mov
push
jno
inc
sahf
cli
xor
dec
mov
xor
sub
add
inc
or
in
jnp
pop
popa
push
mov
hlt
cmp
fsubl
xchg
ljmp
mov
scas
mov
jo
push
mov
xchg
outsb
roll
push
repz
in
jns
ljmp
push
sahf
shll
adc
adc
pop
stc
xchg
popf
repz
push
sbb
dec
ds
fstpl
jne
xor
popf
and
mov
popa
inc
mov
out
mov
push
mov
cli
jle
sub
mov
fcmovne
xchg
mov
xor
xchg
repz
jno
bound
mov
pop
out
xor
pushf
icebp
jmp
test
mov
add
addr16
subb
add
pop
jns
fwait
in
adc
and
iret
lret
sahf
xlat
repnz
lods
push
pop
test
mov
out
lcall
xor
jmp
movsb
pop
mov
sub
jmp
aas
jecxz,pt
push
fadds
stos
in
xchg
sbb
shl
je
cs
ja
add
imul
mov
mov
adc
daa
lret
sahf
mov
in
add
mov
sub
inc
dec
lret
mov
out
xchg
fbld
fnsave
cmp
js
mov
pop
cmc
rsqrtps
xchg
dec
sarb
inc
fimull
mov
pop
xor
mov
mov
leave
cltd
mov
ja
fimuls
cmc
enter
pop
js
adc
dec
cmp
mov
add
mov
pop
inc
loope
scas
pushf
push
mov
outsb
sbb
mov
lea
scas
lahf
popa
scas
sbb
cmpsb
jns
repz
inc
daa
vpunpckldq
addl
lret
sub
jg
in
sbb
dec
mov
imul
ret
hlt
rcrb
aaa
add
xor
sbb
xor
out
dec
and
jge
fisubl
or
push
mov
in
fnstenv
je
inc
mov
jle
xor
das
push
xchg
push
int
xor
pop
mov
inc
xchg
lods
fxch
jns
xor
jp
lock
sbb
push
jp
sub
pop
mov
int3
or
idiv
int
mov
or
jae
push
mov
xlat
insb
scas
cmc
jecxz
dec
jo
aad
popf
ds
iret
xchg
pop
pop
insb
cld
loope
mov
mov
pop
xchg
cmpsl
xor
mov
push
sbb
add
cmp
test
outsb
insl
push
fidivl
and
mov
iret
aas
test
aas
add
cmpsl
inc
mov
dec
lods
popa
test
imul
inc
mov
ss
add
lea
sbb
loope
test
fisubs
lea
mov
mov
ret
cmp
aad
inc
enter
inc
imul
mov
xchg
and
sub
icebp
dec
mov
addr16
jp
push
mov
icebp
xor
jb
cld
jnp
sbb
stos
mov
sbb
dec
adc
mov
insb
lods
xchg
fs
enter
inc
adc
jae
dec
jo
fmull
fimull
add
and
and
jae
xchg
out
pop
and
psubd
cli
pusha
pop
jo
das
out
adc
cld
lock
mov
subb
sub
lea
mov
shlb
cmp
add
sbb
jbe
ret
fisubs
sbb
pop
fcoml
push
insb
pop
pop
sar
inc
imul
fdivs
mov
cmp
jp,pt
xor
out
dec
push
pop
cmp
or
mov
pushf
mov
xchg
les
add
test
lods
adc
mov
sbb
mov
call
mov
es
mov
rclb
rorl
lods
xor
cmp
adc
xor
xchg
sub
xchg
jns
and
and
mov
cmp
push
repz
es
test
lods
fdivl
arpl
lret
sbb
mov
sub
pop
popf
pop
add
sbb
adc
cmp
dec
daa
pop
jl
js
cwtl
sub
cmp
dec
xchg
adc
mov
or
std
in
bound
ljmp
sub
mov
or
popa
dec
xchg
sub
and
fisubrs
jno
rclb
and
inc
cmc
push
pop
inc
sub
imul
adc
push
out
push
add
mov
pop
xlat
aaa
popa
sub
or
aad
inc
xor
jl
pop
loop
lea
xchg
adc
out
dec
pop
out
in
xor
or
iret
mov
shll
push
mov
movsb
fistps
mov
mov
xchg
jnp
mov
dec
pop
stos
xchg
or
cmp
xor
ds
xchg
pminub
rcr
jne
xlat
or
ret
std
or
test
xchg
sbb
jbe
xchg
xchg
mov
dec
rol
jle
mov
dec
add
pop
stos
jo
popw
pop
mov
mov
mov
xchg
movsb
adc
push
inc
sub
and
sbb
fwait
pop
js
inc
loop
xor
cmc
pop
sbb
out
pop
cmp
push
jnp
cmp
cltd
sahf
in
push
int3
add
in
pop
mov
cmp
jb
add
rcrl
in
jns
push
jmp
ja
pop
movsb
loope
sub
xchg
xchg
ja
lea
mov
test
pop
in
outsl
mov
jae
inc
dec
inc
jecxz
sub
dec
mov
js
cld
xchg
lock
or
jecxz
mov
test
mov
in
stos
mov
data16
sarl
mov
out
rorb
xor
add
or
pop
hlt
inc
mov
into
pop
xchg
xchg
mov
sbb
cwtl
pop
dec
adc
enter
sub
pop
push
adc
sub
andb
fsubp
jnp
fwait
addr16
pop
ja
jecxz
xor
adc
pop
popa
push
pushf
or
stos
fstpl
adc
ret
xchg
cmpsl
xor
negb
out
out
ret
mov
outsb
test
lahf
mov
fimuls
add
mov
icebp
das
sti
xchg
or
cmp
das
sbb
pushf
test
xor
cmp
scas
sbbb
push
hlt
loopne
and
and
xchg
pop
sbb
aaa
mov
push
rclb
mov
mov
or
cwtl
dec
or
sub
test
out
fsubl
sarl
stos
rcl
ljmp
iret
mov
test
lcall
out
stos
sti
xchg
mov
bound
mov
inc
fsubr
test
add
loopne
pop
add
stos
xor
jb
gs
scas
mov
push
xchg
les
mov
insl
and
and
ss
stos
or
jae
inc
mov
movsb
add
popf
or
xchg
push
inc
daa
out
or
lcall
repnz
fs
sahf
jbe
lcall
cmp
fsubs
jns
pop
js
loopne
fidivl
fidivrl
adc
sub
orb
dec
mov
mov
cmpsb
or
push
incl
loope
sub
inc
mov
adc
icebp
cmp
pop
adc
sbb
je
inc
stc
inc
test
sbb
loope
sbb
xor
out
mov
xchg
loop
jge
jns
mov
inc
rcl
in
mov
fcomps
xchg
cmpsl
adc
pop
cmc
fs
jnp
imul
mov
sbb
adc
enter
sbb
ss
jae
pop
loop
shlb
fs
dec
jb
adc
dec
leave
jl
xacquire
test
scas
das
mov
orl
lds
mov
shll
sbb
sbb
mov
dec
aas
in
push
mov
jno
mov
popf
pushf
cwtl
test
pop
sbb
lods
inc
lods
insb
aaa
dec
sub
mov
jne
push
and
test
xchg
pusha
cld
xlat
loop
fsubrp
pop
pop
push
cmpsb
jle
dec
sub
popf
outsl
inc
push
jle
mov
mov
lods
mov
cmpsl
mov
adc
aaa
xor
pop
into
inc
mov
mov
xchg
in
jbe
lock
test
testb
les
cmpsb
lock
xor
aam
mov
lds
sbb
fsubl
mov
xor
ds
jno
xchg
or
ss
dec
movsb
out
and
pop
pop
out
stc
ljmp
inc
call
pop
popf
fildll
and
xchg
and
fidivl
push
fdivl
xchg
rclb
gs
imul
and
pop
pop
and
addr16
movsl
arpl
daa
jbe
mov
loope
sub
mov
rol
jle
addr16
outsb
pop
fisubrl
inc
popa
adc
mov
xchg
in
jnp
imul
pop
ret
js
cwtl
adc
xchg
jo
stos
out
cmp
cltd
fimull
xchg
adc
pop
mov
pop
jmp
push
push
mov
les
cmpb
pushl
adc
ja
fmull
and
mov
popf
shlb
cli
sbb
jmp
ret
mov
cs
fsubrs
jmp
or
jae
repz
cmp
iret
in
xor
popl
push
mov
sahf
ret
or
outsl
cmp
cmpsb
cmp
mov
mov
cltd
pop
push
iret
or
sti
lods
or
fdivl
xchg
pushf
add
icebp
xor
mov
loope
and
aad
lods
xor
insb
pop
lock
xchg
je
les
fldenv
stos
cmp
clc
xchg
sahf
sahf
or
inc
out
lar
xchg
xor
jecxz
fwait
js
in
cmp
pop
sub
mov
cmp
jle
push
add
push
cmp
fsubs
in
xchg
jb
mov
inc
out
out
push
xor
dec
call
inc
in
movsb
push
enter
loop
dec
mov
fisubrs
dec
fcoms
call
and
or
sti
movsl
stc
out
mov
dec
aaa
sub
push
mul
adc
xchg
cmp
push
xchg
mov
inc
xor
ret
dec
dec
lock
and
fldt
jns
mov
sbb
add
sbb
push
pusha
cld
ja
lahf
stos
loope
mov
insl
gs
enter
xor
cmp
mov
aaa
or
xor
mov
or
or
lret
jecxz
addr16
movsb
outsb
repz
cmp
xchg
out
or
test
lret
cs
into
pop
sub
jns
repz
xor
sahf
ret
push
mov
pusha
aas
stos
and
pushf
jb
push
das
icebp
sti
cmp
shr
popa
popa
jmp
xor
lret
or
lea
mov
jne
rol
sub
xchg
decb
pop
test
outsl
adc
dec
pushf
xor
jbe
jnp
ror
aam
inc
mov
add
mov
push
sub
arpl
call
dec
iret
mov
push
call
out
cltd
push
and
imul
gs
push
and
pop
fadds
insl
push
aad
and
hlt
repz
insb
gs
adc
cmpsb
mov
scas
int3
jmp
pop
subl
push
or
shl
push
xor
pushw
out
sbb
lock
adc
jb
inc
dec
jne
sub
jo
loopne
xchg
and
movsl
push
je
push
jns
xor
xchg
adc
add
les
je
and
leave
pop
or
loopne
add
dec
cmpsl
pusha
iret
mov
dec
icebp
sub
xor
lods
and
es
mov
fwait
jne
jecxz
aas
insb
ficoml
sbb
pop
pop
cwtl
rclb
aas
xchg
xor
push
pusha
dec
cmp
or
sti
or
call
adc
cmp
sub
dec
lcall
adc
mov
cmp
out
adc
jb
adc
sahf
inc
lret
or
sub
add
lret
into
jp
mov
inc
ret
cmp
lret
into
inc
or
enter
and
mov
push
xchg
sahf
mov
in
sub
shrb
sarb
cmp
inc
adc
sbb
inc
pusha
fidivrl
mov
push
mov
insl
xlat
cltd
out
inc
dec
sti
push
adc
inc
movsb
bound
mov
mov
mov
sub
test
mov
push
repz
push
dec
dec
mov
jle
out
inc
mov
push
mov
int3
jo
lods
xchg
push
mov
rorb
ficoms
insl
test
xor
jecxz
lods
icebp
loopne
pop
ljmp
add
ljmp
pop
test
pop
sbb
sbb
int3
icebp
or
repz
lods
addl
inc
pop
lcall
call
sbb
hlt
sub
xor
int3
or
cmp
add
xchg
shl
mov
mov
into
mov
and
push
lcall
push
mov
bound
sub
mov
cmc
mov
cmp
xchg
insb
std
sub
adc
std
dec
push
push
outsl
push
call
adc
out
fwait
mov
and
inc
mov
aam
xchg
stc
sbb
in
add
es
and
sbb
insb
rcll
pop
clc
and
mov
popf
push
out
pop
cmp
pusha
movsb
outsb
and
scas
mov
in
js
lods
xlat
add
mov
xlat
lcall
mov
xlat
mov
popa
sub
nop
mov
ds
jns
fmull
je
scas
ret
push
jne
pop
and
out
loope
dec
imul
mov
mov
dec
jne
cmp
mov
pop
cs
add
xchg
pop
mov
xchg
fistpl
pop
pop
cmpsl
mov
jno
ficoms
lret
int3
in
pusha
scas
push
rorb
orb
mov
orb
dec
or
adc
stos
aad
push
sbb
into
cmpsl
add
aam
nop
les
adc
pop
mov
aaa
pop
ret
push
mov
jno
sbb
cmp
push
lret
in
test
cmpl
loopne
pop
shll
mov
cmp
jmp
cmp
pop
inc
lods
cld
pop
sub
sub
mov
jmp
cld
scas
scas
scas
aaa
outsl
or
mov
je
stos
test
adc
fisubs
int3
in
out
shlb
dec
stos
data16
sbb
mov
lods
add
in
pop
and
loope
mov
xor
xor
inc
inc
insl
fucompp
cmp
test
mov
mov
sarl
mov
repz
stos
pop
dec
lods
test
jne
jbe
je
imul
arpl
and
xor
ret
xlat
pop
add
jp
pop
pusha
aam
es
sub
jle
ret
push
cmp
mov
enter
fnsave
cmc
or
push
lret
mov
loop
mov
mov
fidivrs
icebp
outsb
xor
xchg
xchg
out
jo
je
shrl
fmull
fsubs
roll
fsub
xchg
out
fsubrs
add
shl
rcr
mov
push
add
call
jnp
adc
repz
shll
jns
xor
cli
push
addr16
out
popa
mov
mov
or
divl
cld
mov
fwait
pop
orb
dec
jo
leave
push
push
push
mov
dec
dec
mov
sbb
shrb
jns
pop
push
cmp
fcmovne
and
add
push
sbb
jmp
xchg
lcall
cmp
arpl
sahf
pop
and
and
and
insb
lods
pop
lcall
repnz
into
xor
out
call
mov
jmp
add
jbe
in
mov
push
jle
jno
mov
jns
in
cmpl
je
repz
dec
xor
test
push
lret
mov
mov
xchg
stos
mov
xor
fnstcw
ljmp
test
jmp
ficoms
jge
popa
mov
push
stos
sub
sub
and
xchg
je
cmpsb
pop
sbb
or
add
test
pop
popa
add
xchg
sbb
and
loope
mov
xor
pop
fsubl
inc
xchg
std
sarl
les
arpl
jmp
filds
mov
mov
mov
and
int3
jae
repnz
pop
or
out
out
xchg
pop
or
mov
adc
lret
sub
cmp
and
push
jbe
fs
ret
push
mov
test
pop
jecxz
sbb
jnp
pop
sbb
in
popa
push
jb
jle
lret
jl
sbb
or
fstpl
pushf
sub
shlb
xor
and
aam
inc
pop
xchg
adc
pop
inc
fistpll
jae
mov
mov
fnstsw
sbb
in
test
out
hlt
in
and
mov
frstor
lcall
xor
add
scas
testl
jmp
shll
sbbb
lock
jnp
push
addb
pop
mov
xor
mov
adc
jecxz
xor
aas
xorl
add
xor
out
sti
mov
cmp
sbb
mov
inc
push
lds
js
mov
add
xchg
fs
mov
data16
mov
inc
lods
jno
and
or
mov
cmp
inc
inc
cmp
mov
pop
push
test
xchg
adcl
in
adc
jbe
aam
arpl
xchg
inc
and
push
push
cmp
movsb
es
movsb
push
aas
mov
icebp
outsl
das
test
daa
fists
cmp
stos
jmp
cmp
jl
imul
decl
sti
or
xor
push
lock
sbb
pop
filds
shl
jbe
lods
lret
in
mov
scas
push
mov
jnp
addr16
outsb
fstpt
inc
adc
dec
inc
movsl
pop
adc
pop
mov
ficompl
pop
mov
cmp
ljmp
fs
stos
movsb
in
js
int3
sbb
loop
ljmp
pop
fdivrs
pop
repz
out
jmp
xor
inc
cltd
pop
mov
mov
es
lods
ficoml
cmp
jns
mov
push
sub
das
jbe
aam
jg
adc
pushf
imul
idivl
cltd
les
push
lret
cmovne
add
das
or
add
inc
movsl
icebp
xchg
mov
movb
inc
pusha
pop
stc
sub
jg
cmp
mov
leave
out
fnstcw
lods
fcompl
repz
and
loope
lock
jl
sbb
gs
scas
sbb
fidivs
jnp
add
push
adc
addl
adc
cmp
int3
inc
mov
push
int
imul
xchg
in
inc
inc
cltd
dec
pop
in
xchg
add
mov
and
pop
mov
sub
ds
adc
xor
sub
mov
cmp
in
cmp
ja
addr16
dec
aam
dec
pop
adc
cmp
test
inc
pop
nop
aam
jmp
sarb
sub
cmp
out
cli
pop
sub
xor
enter
mov
aad
stc
xchg
fcmovbe
pop
cmc
add
pop
jp
sbbl
sub
arpl
shll
mov
inc
mov
push
xchg
sub
dec
jp
nop
fiaddl
xchg
xchg
test
out
test
sbb
dec
lods
dec
sti
in
pop
mov
stc
mov
imull
lahf
daa
scas
push
cld
sbb
frstor
mov
add
mov
sub
add
mov
outsb
push
dec
loop
pop
xchg
or
jle
jbe
push
inc
fcmovnb
inc
imul
sub
popf
sarl
rclb
inc
xchg
mov
dec
add
lret
movsl
xchg
adc
adc
push
or
inc
dec
es
pop
cmp
insl
fs
and
js
aaa
shll
into
mov
pop
jmp
mov
movsb
inc
dec
stos
and
sub
inc
call
into
daa
insb
out
fyl2xp1
sbb
sarl
jle
insl
out
mov
fs
sbb
push
inc
xor
jle
sub
lahf
jae
or
xchg
out
pslld
test
les
dec
jae
xchg
mov
hlt
lds
inc
addr16
sbb
lock
pop
and
shrb
jg
cmpsl
enter
cs
ror
dec
jne
lcall
lock
insl
jno
pop
jp
popa
adc
mov
cmc
mov
lahf
out
out
lods
dec
int3
lahf
lret
ja
shll
movsb
mov
cmpsb
ret
sub
pushf
jmp
xchg
int3
es
push
fcmovne
and
sub
mov
mov
add
pusha
test
test
jg
sub
imull
imul
cli
sbb
mov
call
std
xor
mov
stos
ret
nop
sbb
mov
dec
sbb
mov
in
and
nop
cmp
in
jb
pop
test
add
cmp
aas
int3
mov
mov
mov
sub
inc
into
pop
sbb
xlat
xorb
push
adc
mov
popf
cwtl
pusha
mov
jmp
push
imul
addr16
pop
js
push
sbb
jle
mov
lods
dec
cmc
xor
pop
fs
sbb
fists
push
sarl
push
stos
sbb
movsb
sbb
repz
lret
clc
cmpl
adc
jle
dec
sub
aaa
mov
pop
or
test
add
es
scas
mov
scas
mov
or
add
outsl
scas
mov
nop
mov
orps
sbb
test
xor
inc
fsubr
push
ja
and
cmp
mov
sbb
movsb
pop
in
nop
push
fdivrs
cmp
call
add
enter
adc
testb
xchg
movsb
push
push
rcl
arpl
cwtl
xchg
nop
call
in
fs
cmp
pop
dec
sbb
mov
rcll
scas
cmp
xor
popf
mov
jl
jl
in
xchg
mov
pop
mov
dec
mov
es
xor
daa
sti
sub
mov
mov
pop
sti
add
ds
push
aaa
pop
lahf
inc
pusha
lcall
addb
add
push
push
mov
call
cli
lea
imul
pop
cmp
inc
cwtl
nop
inc
cld
xchg
repnz
adc
outsl
pop
and
movsb
test
xor
stos
cmc
xchg
rcll
add
sbb
pusha
loope
pop
subw
testl
lock
bound
movsb
notb
mov
push
test
outsl
adc
jmp
sahf
push
xchg
xchg
pop
stos
mov
daa
fidivs
out
xor
dec
arpl
imul
xchg
adc
xchg
aas
sti
std
push
sub
mov
aas
sbb
xor
shll
test
fmuls
xchg
push
adc
mov
jge
mov
test
xor
dec
cmp
divl
iret
and
mov
and
cmp
outsl
repz
stos
push
es
rcrb
and
repz
mov
pop
pop
ret
lcall
adc
test
pop
scas
mov
pop
loope
dec
jl
popa
divb
add
or
in
push
ss
sbb
pop
mov
mov
pop
fnsave
clc
dec
fs
outsb
xor
xchg
call
mov
dec
sub
inc
adc
push
arpl
xchg
pop
cmc
pushf
dec
popf
scas
aaa
loopne
adc
fbld
arpl
cmp
scas
push
cmpsl
call
adc
push
enter
sbb
popf
xor
inc
js
or
fs
scas
sbb
gs
sub
lret
cmp
scas
fstps
mov
dec
adc
or
fcmovbe
and
inc
mov
push
mov
shr
push
mov
pop
test
out
xor
aas
enter
std
out
push
jp
scas
pusha
dec
mov
mov
mov
and
xor
lods
fdiv
adc
fs
xor
sahf
sahf
inc
leave
push
fsubrs
aad
lret
adc
xchg
xchg
aaa
icebp
sub
out
clc
nop
outsb
mov
mov
stos
cmp
into
loop
sbbl
jl
or
dec
out
decb
xor
add
movsb
xchg
repz
rorl
adc
or
out
fisubrl
in
loopne
cmp
outsb
clc
aaa
sub
add
jne
enter
lock
push
lock
test
fwait
addb
add
lret
cmp
loope
lods
push
pop
and
arpl
popa
jae
xchg
icebp
or
sbb
inc
pusha
inc
test
push
xchg
rclb
cmp
xor
jnp
push
fistl
fsub
and
ja
fsubr
mov
inc
leave
jns
in
xor
mov
ja
xor
xchg
jle
out
int3
icebp
sbb
push
sbb
jbe
mov
repz
push
out
ror
sbb
scas
add
inc
rorb
out
xor
jg
sbb
iret
mov
pop
adc
cli
stos
scas
idivl
xchg
sbbb
dec
xchg
call
or
es
pop
imul
xor
dec
sbb
shll
sub
enter
push
mov
add
sub
adc
data16
scas
and
xchg
sub
sahf
lahf
stc
jp
pop
sbb
add
out
leave
adc
mov
jecxz
sbb
ret
dec
lods
or
adc
call
ror
test
dec
dec
sbb
in
adc
scas
inc
dec
or
mov
mov
lahf
aad
add
push
cmc
fwait
jo
push
sbb
inc
or
sub
xrelease
shl
in
dec
jmp
mov
lcall
add
and
movsb
cmpsb
addb
sti
lahf
out
ds
aad
jmp
xor
cmp
fistpll
xchg
jbe
cmpb
hlt
xchg
pushl
test
mov
dec
mov
test
mov
jbe
pop
push
push
loopne
fimull
in
stos
cmp
ret
inc
mov
ja
dec
out
stos
movsb
ss
push
push
repnz
test
divl
std
add
xchg
clc
in
in
sbb
push
xchg
lock
push
mov
lahf
adc
xchg
outsl
mov
xor
inc
inc
xor
push
add
jae
bound
sarl
pop
rolb
pop
int3
rorb
pop
add
dec
call
ss
push
mov
stos
mov
nop
pop
inc
or
pop
push
push
adc
mov
jne
add
cmp
shlb
addb
jo
fcmovne
fmuls
sub
imul
inc
mov
stos
stos
jge
or
shl
mov
pop
ljmp
iret
shlb
mov
inc
movsb
enter
or
sub
dec
das
fnstenv
lcall
loop
test
nop
cmp
push
add
arpl
fisubrs
cs
stos
in
out
rclb
cmp
jns
and
mov
lcall
out
xor
divl
mov
dec
jle
test
ja
or
test
popf
mov
repnz
sbb
ret
and
iret
out
pop
jle
sahf
adc
and
loop
popf
inc
jge
divl
jge
negl
inc
xorb
clc
pop
into
ror
pop
xchg
in
or
mov
cmc
call
mov
aam
inc
add
xor
iret
inc
mov
out
mov
mov
push
fcmovnu
lods
and
test
test
scas
add
fwait
rcll
cltd
add
pop
ret
das
adc
ficoms
stos
mov
hlt
xor
movsl
jns
lock
scas
mov
xor
pop
jp
inc
shr
mov
jmp
mov
mov
sbb
aad
cld
or
inc
lock
std
jo
popa
sub
fisubrs
ja
xchg
sub
loop
in
xorb
ficoms
jbe
ret
iret
jne
adc
or
cltd
mov
fs
adc
sbb
xor
imul
cld
insb
mov
xlat
divl
push
fwait
cwtl
icebp
rcll
xor
out
jae
das
mov
hlt
rcrb
mov
push
test
test
hlt
fsubrl
dec
arpl
add
sub
shr
movb
stos
cmp
xor
push
into
lahf
xor
adcb
lahf
call
fldcw
sbb
fbstp
jmp
daa
addb
into
mov
scas
sbb
jg
mov
in
jl
dec
nop
sahf
lods
adc
pop
mov
mov
or
jmp
mull
in
add
mov
jp
cmovb
mov
or
hlt
into
aaa
and
cmp
repnz
or
pop
sti
sbb
mov
in
pusha
mov
pushf
fildl
out
jbe
nop
pusha
xchg
jle
xor
arpl
leave
pop
inc
lock
or
xchg
clc
sbb
add
mov
add
inc
or
add
jmp
push
mov
movl
int
xchg
call
cmp
insl
fldenv
rcl
lods
add
lods
loope
in
lret
or
add
inc
pop
and
outsb
lret
mov
roll
push
fists
sarb
es
stc
outsl
subb
adc
lahf
xlat
shll
test
pop
mov
ret
mov
xorl
pop
sub
or
std
cs
dec
ret
jns
in
cmp
jne
jnp
dec
adc
lods
jg
sarb
loop
push
pop
cmp
mov
mov
cmp
sahf
or
repz
stos
xor
nop
mul
dec
sti
scas
mov
xchg
out
sbb
cmp
and
test
mov
or
dec
or
out
push
stc
testl
mov
pushf
in
shll
shl
imull
insb
pushl
lcall
xlat
movsl
and
and
mov
mov
lret
movsb
mov
mov
insl
add
pop
mov
pusha
pop
outsb
cmpsb
push
gs
aam
enter
jo
js
pop
jmp
cmp
into
int
cmp
inc
jp
jnp
inc
roll
cs
jmp
fisttpl
lret
jl
shll
push
lret
jno
gs
pop
pop
out
stc
jg
add
pop
push
mov
mov
mov
push
js
mov
dec
es
adc
inc
jno
adc
mov
add
and
mov
add
xchg
lea
pop
fwait
enter
push
movsl
inc
shrb
jge
mov
xchg
arpl
stos
inc
popa
adc
loopne
dec
test
cmpsb
ds
jne
jmp
and
xor
fcomps
and
ss
cmp
int3
mov
xchg
arpl
adc
mov
xor
add
pop
ss
mov
lock
cmc
inc
fldl
addr16
adc
imul
call
sbb
aad
adcb
imul
lret
fs
mov
xor
mov
std
mov
and
or
aad
adc
int3
shl
cmp
lcall
lret
imul
fiadds
jge
dec
ret
ret
mov
popa
fsubr
stos
xchg
lea
xor
and
pushf
jo
add
gs
mov
push
aam
mov
mov
es
stos
loope
xlat
es
sbb
xchg
inc
dec
idivb
testb
xor
dec
fildl
mov
sbb
ss
fwait
push
rcl
sub
inc
out
pushf
cli
sub
add
hlt
sub
inc
mov
clc
stos
sub
mov
aad
push
mov
pushf
test
xor
decl
dec
imul
aas
jmp
mov
and
shrl
enter
pusha
mov
insb
sbb
mov
subl
inc
cmp
sbb
in
pop
sarl
fld
push
xchg
mov
push
outsl
decl
ljmp
pop
and
ret
mov
insb
mov
mov
add
jne
int
je
or
jno
js
ja
add
stc
pop
sbb
arpl
pusha
lods
test
shrl
sbb
int3
mov
stos
jbe
pop
ss
push
xchg
mov
lfs
pop
cmp
movsl
inc
fstpl
push
mov
push
adc
push
and
orb
idivb
insb
pop
pop
jl
add
inc
or
dec
push
jae
jmp
in
out
sub
test
and
mov
js
arpl
push
sahf
xchg
cmpsl
sbb
mov
mov
imul
clc
push
xlat
fsubl
sub
mov
cmp
in
sbb
jo
cmc
aam
cli
andb
mov
or
dec
stc
cbtw
stos
sbb
jle
call
xchg
jge
andl
push
inc
rorl
pop
xchg
inc
jne
cmp
repnz
rol
cwtl
loopne
test
pop
pop
sbb
or
dec
loop
lods
pusha
lahf
xor
mov
das
fisubrl
push
push
or
vorps
dec
jp
mov
cmp
jo
out
and
jnp
out
ljmp
int
cld
out
addb
and
push
dec
push
xor
mov
imulb
xchg
adc
push
dec
test
jne
add
addb
fildl
xor
filds
sahf
psllq
fdivs
pop
cmp
aaa
mov
test
jmp
xor
xor
sub
push
mov
pushf
pmaxub
lods
mov
inc
jno
inc
fidivs
ret
cmp
shll
cmc
cmp
test
enter
adc
cli
stc
test
lea
nopl
sub
mov
jle
jbe
and
aam
clc
or
in
call
sbb
push
ss
dec
in
xor
cs
icebp
pop
lea
sbb
push
lret
dec
rcl
inc
add
popf
sub
xor
dec
dec
and
loopne
and
mov
or
or
scas
int3
xchg
xchg
push
lcall
jmp
mov
fs
orb
push
pop
out
mov
xchg
or
add
xchg
mov
xchg
jae
mov
mov
adc
fimuls
sahf
in
cmp
pop
xchg
out
and
dec
decl
stos
cmp
xchg
lock
mov
sbb
and
inc
dec
xchg
sbb
push
jmp
outsb
es
and
jb
mov
rcl
and
bnd
imul
stc
repz
inc
mov
mov
xchg
push
or
sbb
xchg
movsb
dec
loopne
pusha
jecxz
fmuls
mov
mov
insb
sub
lret
js
inc
jbe
mov
shl
repz
sarl
sbb
frstor
mov
xchg
clc
xor
dec
add
imul
mov
jno
jo
xor
cwtl
and
xor
scas
push
inc
push
gs
sahf
jb,pn
push
and
out
rcrb
mov
arpl
push
and
je
xor
ficoms
push
dec
jbe
sbb
movsl
pop
xchg
push
ret
push
mov
lods
pop
push
cmpb
inc
mov
xchg
push
test
fdivrs
mov
mov
push
or
jo
daa
push
movsb
test
pop
dec
pop
out
inc
inc
mov
adc
cmp
dec
sub
imul
or
jo
sti
aam
add
add
sub
shr
inc
in
bound
ja
cli
dec
or
xor
daa
aas
xor
repz
inc
stos
push
enter
roll
mov
jne
dec
adc
adc
es
jbe
stc
call
push
jge
repnz
sarl
daa
mov
faddl
loopne
lss
sbb
push
jge
or
push
cwtl
or
mov
cltd
push
test
pop
outsl
outsl
lret
sub
add
or
adc
pop
cwtl
enter
psllw
cld
jge
dec
push
outsb
cmp
mov
jno
popa
lcall
mov
test
jecxz
jbe
xor
xchg
jns
mov
xchg
sti
sub
nop
loope
dec
into
add
jg
loope
fwait
popa
or
daa
xchg
jno
aaa
jno
or
sub
push
fdiv
sbb
or
pushf
sub
lods
int
pop
push
pop
adc
mov
mov
call
mov
xor
jae
int
jmp
xor
andb
loop
cmp
lahf
fprem
in
into
add
pusha
inc
lea
stos
pop
jne
sub
xchg
mov
sbb
es
in
test
mov
roll
mov
jae
jmp
adc
sahf
mov
jne
adc
decb
ss
mov
test
lds
data16
pause
int
dec
add
jl
in
stos
into
popa
das
pop
cmpsl
sub
adc
and
cmp
push
inc
or
jg
lods
jns
out
mov
jbe
mov
hlt
cmp
sbb
and
dec
pop
popa
xchg
jmp
xchg
jnp
push
scas
push
jo
sbbb
adc
add
insb
push
rcr
inc
in
aaa
jmp
sbb
sbb
ja
and
mov
jp
or
in
es
movsb
mov
xor
orb
sbb
outsb
cmpsb
fstpt
add
daa
sub
mov
adc
inc
sbb
pop
shlb
jl
cltd
cs
loopne
pop
nop
mov
inc
sub
push
addr16
repnz
rcrb
nop
mov
pop
sbb
xchg
xchg
add
inc
mov
int3
iret
test
sbb
mov
jge
ret
push
xchg
mov
or
push
xor
lods
jge
insb
cmpsl
push
adc
enter
push
mov
imull
cld
inc
rcll
pop
jo
or
stc
mov
iret
pusha
add
mov
repnz
fdivrs
add
and
adc
mov
cmp
cltd
jp
mov
lock
sti
dec
mov
add
sbb
dec
cmp
xor
and
gs
jne
dec
lock
cltd
xor
and
xor
sbb
sub
sbb
mov
movsl
mov
repz
jle
push
in
es
movsb
jmp
out
fsts
dec
jge
xor
scas
or
dec
int
insb
sbb
push
cmpsl
jp
mov
dec
push
mov
lods
lcall
test
mov
cmpsl
sub
mov
into
hlt
clc
pusha
bound
fnstcw
jecxz
pushf
push
and
shlb
pusha
dec
adc
sub
imul
mov
xchg
xchg
mov
not
out
shl
lcall
push
adc
push
cmp
inc
mov
cmp
insb
sahf
and
inc
mov
xor
jge
aas
xor
pop
jbe
rcrb
sub
into
jp
jmp
inc
jp
jb
aaa
leavew
xor
xchg
or
loop
xchg
sub
push
inc
fmul
and
rorb
dec
cli
test
jge
rolb
lds
cmp
ss
jmp
in
rcll
pop
mov
leave
sub
popf
jge
and
push
inc
ss
lds
dec
sarl
mov
push
push
cmpb
call
sbb
xchg
cltd
xchg
loope
fadds
clc
jnp
push
jl
clc
pop
inc
xchg
cmpsb
data16
or
outsb
or
jne
decl
nop
js
dec
cwtl
pop
mull
imul
or
fdivrl
hlt
out
adc
jae
shlb
das
cmp
or
jmp
stos
scas
mov
mov
das
add
rcll
scas
cmp
inc
xchg
out
outsb
jb
and
lahf
mov
lahf
ljmp
sub
sbb
adc
test
ret
add
pop
aas
lock
test
add
out
jg
push
js
ret
jbe
xor
inc
adc
cli
or
sub
aaa
imul
aam
ds
cmp
mov
inc
sets
pop
adc
cmp
outsl
push
call
fstpt
popa
and
std
mov
jge
mov
insb
cmpsl
es
cs
mov
lcall
and
out
jno
push
cmp
mov
adc
mov
mov
pop
les
das
repz
jge
rorb
pop
dec
loopne
cs
ret
test
mov
adc
xchg
lret
rolb
aam
outsl
les
lods
int
cmp
mov
jle
and
sub
xchg
ja
cmp
lods
daa
xchg
leave
cltd
std
push
xor
lret
and
cmp
in
or
or
mov
mov
nop
or
jle
xor
mov
pop
lds
pop
and
insb
xchg
xchg
dec
sahf
stc
in
mov
leavew
jmp
sub
jne
pop
ret
cli
sub
pop
sbb
mov
int3
adc
negb
and
sub
pop
xor
xchg
cmp
inc
adc
pop
in
pop
ljmp
fisttpll
es
push
add
cmpsl
test
jmp
mov
and
pop
pop
test
scas
push
sbb
ljmp
mov
aam
dec
cmp
xor
mov
shll
jg
pop
aas
lods
loop
adc
jbe
pushf
xor
subb
adc
jl
jmp
adc
neg
das
cmpsl
dec
mov
push
neg
xor
xor
fs
jp
mov
adc
enter
data16
enter
ljmp
or
test
mov
popf
mov
jbe
shr
fildll
sbb
pop
repnz
jno
mov
popa
jp
mov
or
ficomps
xchg
out
jno
das
lods
sarb
sub
movl
ljmp
mov
clc
lods
xor
push
mov
cmp
jo
test
and
lcall
cmpsl
nop
adc
andl
mov
aam
xor
ja
mov
or
xor
or
xchg
pop
int
incb
inc
and
lock
test
mov
pop
xchg
inc
push
xor
cmpsb
cmp
loope
lret
std
inc
sti
aam
lods
pop
push
mov
jbe
je
or
mov
dec
scas
loopne
inc
clc
test
out
or
cli
fisubl
scas
fsubrl
mov
pop
adc
push
outsb
mov
sub
mov
mov
rcrl
push
jmp
mov
movsb
mov
mov
adc
out
sub
cmp
pop
into
push
push
clc
aas
in
std
pop
jae
push
cmpsb
mov
fimuls
cld
adc
stc
sbb
fistpll
loopne
enter
adc
add
cvtpi2ps
jg
clc
inc
dec
sbb
cmp
clc
cmp
ljmp
push
gs
mov
enter
mov
shrl
movsl
les
cmp
daa
lcall
out
xchg
mov
pop
loop
icebp
sbb
jge
lods
lahf
mov
and
xor
sarb
shlb
data16
inc
ljmp
mov
xchg
xchg
xor
jmp
nop
mov
repz
les
stos
cld
dec
or
mov
gs
outsl
pop
mov
add
jl
lods
jmp
repz
mov
cmp
aad
in
imul
addr16
push
in
es
js
xor
push
pop
xchg
mov
sbbl
cmp
adc
nop
mov
xchg
xor
cmc
out
inc
mov
jg
push
or
clc
dec
sbb
inc
fidivrl
cmp
mov
mov
popl
pusha
ret
insb
fdivr
flds
inc
xchg
movsl
xlat
lret
mov
mov
fdivl
adc
dec
stos
adc
or
filds
outsb
cmpsl
jg
and
mov
pop
sbb
mov
and
fcmovnu
ljmp
pop
cmpsb
push
mov
xchg
mov
jno
jbe
jne
ret
xchg
xchg
cmp
xor
notl
les
and
or
xor
clc
out
jbe
jb
or
lds
into
sarb
out
out
out
sbb
adc
sub
jns
and
sbb
push
out
bound
fists
outsb
xchg
mov
aam
out
pop
test
rol
les
lea
mov
fstpl
in
and
lret
dec
fsubl
pushl
jmp
cmp
cmp
data16
insb
inc
mov
sub
lock
cmp
jne
push
lds
mov
aas
outsb
fwait
arpl
or
inc
pushf
rorb
or
outsl
pop
mov
mov
dec
ja
jae
or
sub
outsl
jp
jg
in
es
call
jo
xchg
enter
hlt
outsb
push
and
jp
mov
mov
stc
bound
insb
or
lea
cmp
inc
mov
bnd
pop
testl
js
roll
test
stc
inc
push
js
scas
cmpsl
out
fcoml
inc
mov
inc
mov
js
shll
ja
fldcw
xchg
in
adc
lock
pop
pop
sti
xchg
out
dec
cs
mov
pop
stos
mov
mov
lods
adc
repz
je
mov
fwait
mov
push
or
xchg
addr16
dec
xor
leave
rcrl
adc
mov
inc
push
aas
js
nop
sub
sbb
jp
xchg
mov
mov
push
jo
sbb
and
outsl
fwait
sarb
inc
stc
scas
aas
inc
sar
mov
arpl
sub
mov
sbb
cmp
xor
dec
push
in
fdivs
cld
lret
sub
mov
ljmp
sbb
mov
adc
call
in
mov
in
mov
push
sub
pusha
gs
and
xor
mov
dec
xchg
sti
out
add
jl
xchg
mov
add
out
pop
mov
pop
lret
pushw
lea
cli
mov
daa
mov
xor
push
sahf
aad
test
or
xchg
fs
push
test
popa
das
jg
sub
xorl
rolb
movsl
fiadds
inc
push
pop
sub
mov
movl
leave
dec
inc
inc
fucomip
sub
jge
dec
dec
fisttpl
les
int
pop
js
test
sbb
fsubp
mov
sub
test
push
mov
pop
or
and
xor
arpl
xchg
mov
mov
mov
lea
xor
shrl
imul
in
test
or
jne
jecxz
mov
and
mov
mov
inc
mov
scas
stc
orb
dec
jno
insb
out
je
sbb
mov
call
bound
inc
repnz
pop
push
mov
jne
icebp
push
aas
gs
cmc
mov
mov
cwtl
add
cli
xchg
jno
mov
test
out
stos
mov
fwait
inc
pop
jns
pop
pop
mov
mov
stc
repz
push
mov
in
scas
loop
aam
movsl
lds
jp
lcall
and
repz
mull
sbb
jmp
dec
dec
mov
cmpsb
in
ss
jnp
mov
sbb
push
adc
sub
sub
mov
xchg
xchg
cmp
pushf
movsl
je
mov
add
subb
adc
inc
inc
fistpll
xor
imul
hlt
je
adc
jbe
mov
sub
mov
mov
scas
inc
int3
es
mov
push
mov
push
and
mov
jecxz
add
cwtl
pop
ds
mov
inc
push
int
xchg
xor
adc
adc
or
fistps
lahf
mov
ljmp
inc
adc
fdivrs
ret
pop
jns
insb
adc
or
mov
jl
cmp
leave
call
jnp
fnstenv
adc
lds
dec
into
rolb
pop
lea
mov
xor
mov
fldcw
aam
loope
mov
pop
sub
rorb
in
adcl
xorb
mov
mov
xchg
stc
int
cmp
cmp
ljmp
push
movsb
jmp
jecxz
ljmp
mov
add
divb
push
roll
inc
xor
ja
adc
shl
movsb
sbb
lret
mov
popa
scas
push
lret
push
sbb
lahf
inc
push
push
loopne
xchg
push
or
inc
push
lret
jb
or
add
adc
scas
adc
jle
test
cwtl
xlat
xchg
push
xchg
fcompl
fldcw
loop
ret
mov
add
lahf
add
pushf
and
and
or
ja
sub
jmp
or
and
test
and
je
enter
call
test
test
lods
sbb
or
mov
sbb
jmp
push
jo
xchg
cmp
stos
dec
lods
or
scas
push
xor
into
inc
sbb
incl
imul
es
bound
cld
loop
std
out
stc
push
cwtl
aad
inc
push
rclb
pop
fisubrl
inc
pusha
cld
inc
push
cwtl
subb
dec
jne
negl
push
enter
dec
or
std
rcrl
out
in
jne
sub
testb
jbe
xor
sbb
lds
xchg
jae
out
fisubrs
aas
jno
sti
insl
jmp
push
cltd
sbb
add
jecxz
xchg
xchg
cmp
pop
and
imul
xor
pmaddwd
cmp
or
cld
inc
and
inc
xor
sahf
pop
and
lea
adc
jne
mov
push
mov
mov
mov
jnp
jg
decb
xlat
fsts
aaa
xchg
test
lahf
ljmp
jg
sub
xor
adcl
lcall
mov
shlb
jmp
and
rcl
push
inc
shlb
cmpsl
xchg
bound
mov
inc
fidivrs
outsb
inc
imull
mov
imul
movb
xchg
sti
cmp
repnz
mov
es
cld
sbb
jmp
mov
mov
xchg
jmp
jnp
ljmp
pusha
lds
shr
leave
rcrb
xchg
cmp
and
pop
adc
add
icebp
lds
inc
shl
and
divl
adc
mov
sbbl
shrb
cmp
in
pop
push
xchg
into
xor
cli
loope
out
pop
lock
hlt
push
cmp
fadds
mov
ret
cmp
and
or
fcmovnu
cmp
mov
arpl
sbb
je
fs
cmpsb
xor
sub
add
fwait
jbe
jmp
sarl
cmpsb
stos
push
adc
out
popa
inc
sub
push
or
push
test
int
jl
in
mov
adc
movsl
aas
push
hlt
sub
adc
setb
dec
cltd
or
xchg
inc
lds
push
adc
fldcw
sbb
mov
arpl
dec
mov
dec
loopne
cmp
cwtl
test
cmp
lahf
push
in
lea
pop
mov
dec
popa
or
je
xor
dec
xor
aad
push
out
xchg
stos
or
scas
mov
dec
adc
sti
ja
pop
adc
jp
js
push
push
fdivl
insl
ficoml
mov
pop
stc
pop
push
dec
or
aam
ss
jb
lcall
pop
or
pop
sub
mov
shll
mov
pop
xor
nop
sbb
mov
imulb
xor
xchg
movsl
pop
imull
repz
andb
int3
or
jl
xchg
mov
cmp
test
or
mov
and
test
dec
arpl
in
ja
mov
aad
mov
sbb
sbb
outsl
push
loop
sbb
sbb
nop
pop
out
mov
shlb
int
sbb
sub
sbb
xor
insl
cld
mov
repnz
push
inc
jo
jmp
xlat
sub
mull
inc
outsb
orl
cltd
cmp
push
push
mov
mov
mov
sbb
xchg
sub
loopne
pop
sub
les
inc
sub
or
xchg
loop
push
inc
and
dec
or
sbb
nop
es
in
push
sub
mov
xchg
lret
sti
and
mov
je
dec
mov
std
dec
mov
loope
and
jg
xlat
orb
outsb
outsb
imul
cmpsb
fsubs
add
sub
data16
jmp
or
jne
mov
pop
retw
or
inc
sub
sbb
into
pop
mov
test
jae
hlt
sub
loop
sub
fsubrs
sub
cmpsb
imul
cmp
dec
jbe
pop
out
shr
mov
cmpsl
xchg
xchg
sub
jp
dec
orl
sub
loope
das
mov
xchg
add
or
or
stos
out
rorb
mov
pop
mov
xchg
nop
cwtl
or
jp
test
inc
aas
fldt
sub
inc
sub
cmp
mov
xor
xor
aas
sbb
int3
sub
mov
repz
jge
push
fstpt
hlt
mov
add
push
jns
mov
mov
pop
dec
aaa
sub
cmp
rcr
pop
cmp
scas
mov
in
add
sbb
dec
mov
mov
aad
adc
xchg
inc
add
arpl
push
pop
lcall
insb
sub
mov
arpl
mov
js
add
lea
inc
iret
cmp
in
sub
push
out
dec
cwtl
xor
loop
ljmp
rcrl
loopne
clc
repnz
int
adcb
or
pop
mov
rcr
fisttpll
mov
aam
lahf
sub
add
and
repnz
jo
sub
pushf
and
stc
pop
call
mov
into
insl
incl
adc
and
daa
mov
add
std
sbb
or
sub
shl
in
out
cmp
movsl
jge
test
out
imul
adc
into
lret
push
dec
or
inc
xchg
sub
fimuls
jp
bound
shr
adc
mov
adc
inc
jmp
mov
fbld
adc
hlt
mov
jle
xchg
aad
mov
hlt
adc
into
or
ja
mov
rclb
aam
out
mov
popa
xlat
mov
jo
inc
cli
adc
imul
loop
inc
sub
mov
pop
add
or
xchg
out
xchg
adc
arpl
andb
inc
psubusw
sub
cmpsl
xor
xchg
loope
add
push
add
out
adc
mov
sbb
shlb
es
add
jl
orb
lahf
adc
add
fs
inc
test
in
sti
mov
xor
sbb
xor
andl
lods
stos
jecxz
repz
jns
nop
jp
pop
xchg
iret
cwtl
fsubrs
lahf
add
dec
cmp
imul
aam
popf
stc
push
cmc
cmp
aas
vpshlw
xchg
aas
repnz
mov
push
pop
jae
mov
cli
in
cmp
paddsw
mov
std
ljmp
fs
test
adc
xor
mov
dec
arpl
and
xchg
inc
push
test
sarb
and
mov
dec
cmp
out
mov
dec
frstor
mov
cs
dec
cmpsb
jne
lcall
icebp
roll
cmp
pop
mov
ss
xor
fcoms
lret
je
push
div
xor
and
and
addr16
pop
call
aam
jns
leave
fildl
subl
ja
mov
popf
cmp
mov
or
mov
aam
mov
aaa
fmuls
pop
add
iret
mov
cmpsb
lods
mov
bound
xchg
add
mov
mov
jmp
jne
popa
jae
int3
mov
sub
fsin
mov
inc
inc
jbe
or
push
push
lods
xlat
xor
shrl
cmp
pop
ret
pop
adc
clc
mov
pushf
js
call
shlb
imul
or
mov
push
scas
leave
notb
and
out
insb
cmpsl
mov
mov
js
push
pop
daa
mov
shrb
aad
sub
into
loop
daa
xchg
jae
sbb
inc
adc
adcb
loope
push
popf
xor
pop
cmp
and
test
xor
xchg
jl
pop
out
ja
xor
push
xor
sub
jl
test
mov
pop
pop
andl
cld
and
sahf
ficoml
jae
mov
test
and
arpl
test
in
jne
and
pop
imul
jecxz
je
and
sbb
inc
pushf
out
das
dec
fistpl
divb
inc
add
push
cld
lods
fisubrl
mov
sub
push
or
ret
ret
outsb
orl
ljmp
fisubl
aad
jl
jb
dec
jle
mov
pop
in
jecxz
les
xor
jb
ds
adc
xor
jno
ret
imul
push
and
push
nop
cmp
and
pop
gs
out
push
or
pop
pop
add
inc
fimuls
loopne
popa
mov
xchg
xor
jns
cltd
pop
and
cwtl
ljmp
lods
cwtl
ret
push
jae
jle
lea
adc
in
rolb
cmp
lods
cmpsb
stos
push
add
dec
push
popa
inc
out
inc
xchg
xor
sub
xchg
sub
jno
adc
sbb
ja
cmp
jae
ljmp
mov
inc
sub
mov
je
inc
mov
pop
or
mov
pop
push
fstl
les
fwait
mov
test
fidivl
push
push
adc
rcrl
pop
dec
loopne
adc
xlat
adc
dec
je
jge
in
xor
mov
mov
and
stos
mov
imul
sbb
cmp
popa
mov
adc
dec
xchg
daa
inc
or
pushf
mov
mov
pop
inc
je
cli
cs
stos
inc
out
ja
insb
mov
call
cmpsl
fnstenv
pop
push
lret
xlat
sahf
push
out
call
jg
adcb
in
inc
add
rcr
add
adc
dec
pusha
ja
les
cld
pop
pop
sub
mov
sbb
add
and
adc
jnp
cmp
pop
or
mov
mov
xor
lds
fnstsw
add
dec
sub
dec
cwtl
cmp
or
adc
xchg
scas
ficoms
sub
movsl
lret
push
ss
fiadds
mov
cmp
or
mov
sbb
jecxz
inc
xchg
repnz
lods
clc
mov
mov
mov
call
mov
pop
sub
cs
pop
add
adc
push
pavgw
adc
inc
mov
orb
and
pop
mov
ror
aam
scas
push
out
push
xor
ss
jmp
test
movsl
int3
mov
out
mov
leave
xchg
add
arpl
shlb
or
mov
jno
pop
mov
movsl
adc
pop
movsb
or
insl
mov
ja
dec
repnz
sbb
mov
cwtl
arpl
pop
and
jnp
adc
cmc
dec
movsb
sub
bound
sub
loop
fadd
ss
jae
add
mov
fldl
repnz
filds
cmp
and
sahf
xchg
roll
scas
sar
mov
xchg
adc
into
pop
pop
loope
inc
gs
loop
mov
mov
std
scas
push
add
push
xchg
jmp
inc
stos
test
daa
cmp
les
cmp
jecxz
les
jge
enter
sbbb
xor
pushf
lods
popa
xchg
xchg
pushf
ss
out
sub
jp
pop
movsb
jns
push
adcb
sahf
movsb
jbe
cmpsb
mov
xor
out
lods
inc
sub
mov
jae
stos
cld
push
outsl
fdiv
sbb
xorb
pop
sub
or
rcr
and
cmp
movsl
xor
or
add
jg
inc
rclb
pop
repnz
inc
adc
mov
ljmp
aaa
js
sbb
mov
mov
insb
inc
jge
shlb
jg
stos
fimuls
rcll
cmp
dec
inc
push
and
or
fisttpl
jno
xchg
cld
into
add
push
or
xor
movsl
mov
adc
pop
mov
cld
xchg
fists
in
sbb
insb
lods
cmp
fs
dec
inc
call
jp
sbb
stos
add
mov
sbb
aas
and
add
pop
arpl
subb
repz
adc
jns
pop
push
inc
jns
fdivp
pop
adc
rcll
push
test
mov
aad
dec
pop
test
bound
je
popa
test
je
leave
mov
lods
das
jno
lock
mov
clc
cmc
sbb
sub
in
jo
popa
sub
int3
addr16
and
in
add
or
jp
repz
rclb
stos
xor
leave
loop
stos
or
jne
insl
add
and
jge
adc
inc
imul
loop
push
jp
and
in
mov
shlb
jp
loope
stos
out
and
test
sbb
xchg
in
rorl
lock
sub
aaa
sarb
popa
mov
aas
jno
sbb
adc
nop
add
addr16
push
dec
mov
push
ja
popa
outsb
inc
ja
gs
mov
sub
mov
mov
pop
pop
sti
insb
call
dec
lods
dec
add
mov
stos
or
jmp
rcrl
aad
out
dec
and
jno
lds
imull
shrb
inc
dec
mov
jge
adc
pushf
mov
jae
inc
pop
jp
push
iret
xlat
push
fdivrl
or
fnstsw
fldl2t
push
inc
jg
dec
sbb
or
mov
test
mov
pushl
jg
push
cmp
and
movsb
mov
adc
gs
std
adc
or
push
lcall
popf
xchg
repz
push
xchg
push
push
sub
call
ljmp
inc
lock
imul
out
cmp
outsb
rol
js
inc
stc
add
lods
lahf
push
lret
insb
pop
test
jecxz
es
andl
int
bound
push
mov
add
ret
addr16
lret
pop
enter
xchg
adc
or
xor
out
mov
and
dec
push
fdivrl
push
divb
repnz
outsb
andl
fs
push
cld
mov
or
loopne
addr16
jecxz
sub
divb
adc
lahf
xor
movsb
int3
sahf
cmp
std
popa
pop
pop
rclb
dec
adc
xchg
mov
add
pop
and
lret
push
dec
push
add
mov
outsl
or
pop
sahf
or
je
push
cmp
loope
rorl
sub
mov
inc
push
or
mov
outsl
test
inc
or
xchg
aas
mov
ret
scas
jge
pop
ret
xor
std
mov
pop
lds
jne
mov
lods
testb
icebp
aad
cmpl
int
or
cli
test
test
popa
outsb
mov
or
or
adc
xchg
sbb
leave
push
mov
push
pop
into
addr16
icebp
outsl
mov
fs
ss
mov
cmp
lret
les
cltd
mov
cwtl
inc
std
adc
loopne
xchg
mov
and
add
push
jnp
sub
mov
add
push
mov
cmp
lea
and
arpl
jmp
sbb
mov
lea
push
arpl
rcll
fldenv
push
sahf
fdiv
add
lock
xchg
arpl
or
mov
xlat
unpckhps
pop
jb
out
rorb
stos
mov
add
mov
cmp
xchg
jle
in
sbb
cld
pop
pop
add
fildll
cwtl
cltd
xor
adc
xchg
cmp
xchg
pop
xor
lahf
pop
push
xchg
stc
push
jae
int
jnp
in
pop
imul
fwait
aas
ret
mov
mov
inc
loope
pushf
mov
popf
jno
inc
rcrb
and
dec
test
xchg
pop
popf
fidivl
lret
inc
or
cwtl
cli
mov
roll
mov
and
mov
pop
lret
and
mov
adc
mov
sub
adc
dec
or
stos
dec
test
inc
mov
mov
jns
out
ret
dec
jge
add
push
mov
in
fs
cld
push
mov
mov
pop
sbb
mov
jge
push
std
inc
clc
mov
cmpsb
mov
adc
cmpsl
les
push
into
and
cmp
repz
push
into
daa
jg
jp
push
and
xchg
lods
scas
adc
jnp
icebp
out
loop
mov
hlt
jmp
jg
push
je
outsl
mov
sub
inc
shrl
cmp
pop
into
bound
sti
cmp
das
fbld
inc
addr16
jl
xor
lods
sbb
leave
xor
jae
dec
dec
add
insl
mov
movsb
aas
ljmp
ret
aam
cmp
jae
ja
and
stos
movsl
imul
lcall
or
pop
and
nop
out
adc
dec
repz
out
or
daa
pop
mov
cltd
or
dec
cli
xor
lods
cltd
rcr
bound
ficoml
sub
mov
test
xor
cwtl
addb
push
push
sub
call
pop
divb
xor
or
xchg
stos
and
xchg
aaa
cmp
fxch
rcrb
add
jecxz
sub
pop
test
push
mov
add
inc
sbb
pop
xor
and
or
loopne
hlt
sub
mov
cmpsb
mov
test
adc
lods
or
xlat
mov
out
add
aaa
sub
jno
ror
mov
add
mov
cli
inc
sub
fs
adc
out
and
scas
ja
rorl
xor
and
or
mov
jne
repz
ljmp
xchg
xchg
or
into
jbe
xchg
add
push
push
movsl
dec
lods
xchg
cmp
in
cmpsl
mov
pushf
fdivl
test
adc
sbb
mov
mov
sub
jg
pop
jne
jl
pop
jmp
add
jb
or
mov
sub
and
adc
ljmp
cmp
daa
mov
xor
fcompl
repnz
mov
cmp
mov
push
pop
lds
mov
jnp
mov
ja
and
inc
in
cld
xchg
pop
push
ja
mov
repz
mov
mov
mov
dec
gs
orl
adc
xor
cwtl
es
ret
gs
pushf
adc
iret
dec
jno
testb
jo
imul
gs
popl
lods
popa
mov
lea
adc
or
shll
push
jmp
int3
xchg
sbb
lods
lods
mov
dec
call
lret
sbb
dec
xor
and
add
mov
or
dec
push
push
and
gs
xchg
mov
push
out
div
inc
sbb
fdivs
cs
sub
or
sub
dec
in
movsl
mov
lahf
in
and
jns
inc
xchg
push
xchg
add
cli
xor
xor
xchg
adc
dec
out
cmp
imul
sarl
ljmp
sbb
xchg
pmovmskb
and
pop
mov
push
push
sahf
inc
and
lcall
inc
f2xm1
cmpsl
fisttpl
adcl
jae
popa
loopne
jno
adc
insb
jnp
data16
jp
out
pusha
leave
adc
mov
push
stos
adc
mov
hlt
or
repz
stc
in
dec
lret
mov
xchg
push
or
jnp
jmp
or
add
pop
add
add
mov
int
test
bound
sbb
adc
insb
add
sarl
inc
add
pop
pop
movsb
iret
cmp
es
and
nop
add
out
fcmovnbe
and
add
leave
int
cmp
and
negl
fsubrl
sbb
cvtpi2ps
lods
jnp
pusha
pop
clc
movl
mov
lcall
push
mov
ja
cmovno
sub
add
popf
lods
int3
loopne
jne
pop
mov
jnp
add
sub
scas
iret
ja
pushf
js
popf
mov
xchg
dec
push
fsubs
call
testb
pop
sbb
stc
gs
sahf
mov
sbb
ror
inc
std
mov
fwait
mov
mov
push
cmp
push
inc
pop
pop
mov
mov
dec
in
ja
or
xchg
lahf
outsl
daa
ror
lea
sub
mov
pop
and
pop
or
sbb
aas
pop
fidivrs
cmp
jecxz
or
int
mov
subl
xchg
mov
mov
out
dec
adc
into
fstps
iret
fdivrl
push
mov
imul
push
jnp
es
dec
sub
pop
dec
add
dec
popa
dec
jmp
cmc
shll
push
add
or
add
aaa
xor
dec
test
sti
imul
or
inc
addr16
and
sarb
xor
sbb
aam
push
cmp
fnstsw
popa
add
scas
inc
aam
into
iret
out
dec
iret
out
out
ret
idivl
test
test
adc
cmovp
jno
adc
cwtl
clc
push
fldenv
and
inc
jle
dec
rcr
pop
xchg
out
outsl
out
js
cmp
in
sbbb
in
sahf
lahf
jns
mov
aad
cmp
fcompl
mov
mov
mov
loopne
add
sub
pop
add
in
or
push
jae
inc
in
add
inc
scas
cmp
mov
in
sbb
push
push
lcall
pop
fistpl
or
xchg
jns
into
xchg
pop
push
rclb
xchg
lret
mov
jg
stos
or
push
shrl
xchg
cmpsb
fbstp
jo
sub
stos
pop
shlb
xor
ds
xor
jne,pn
jp
sub
lcall
add
sub
pop
inc
add
call
fstpl
xchg
in
std
sti
mov
xchg
jb
dec
xor
fxch
jae
lahf
out
dec
jne
sahf
xchg
in
push
gs
iret
inc
out
jle
sbb
mov
pop
aad
mov
mov
adc
ja
adc
mov
daa
xor
jae
push
cmp
pop
or
outsb
ret
cwtl
mov
pusha
mov
adc
add
cmp
pop
repz
xor
aam
enter
std
xchg
cmpsb
xchg
pop
lret
dec
movsb
lea
nop
mov
jle
lock
int3
test
hlt
inc
xchg
mov
clc
adc
loop
not
add
or
xor
pop
and
push
enter
xlat
cmp
mov
in
dec
nop
mov
jg
imul
sub
fs
mov
xor
data16
jmp
xchg
hlt
add
lea
lock
or
iret
outsl
xchg
rolb
xor
dec
xor
xchg
and
lock
sbb
out
add
and
dec
shrb
nop
fiadds
jbe
shrb
loopne
pushf
jg
mov
call
jecxz
lods
pusha
dec
jae
mov
push
push
fwait
repnz
repnz
addl
shr
adc
or
shrl
int
and
push
out
addl
mov
dec
push
jo
pop
lahf
ljmp
lcall
inc
imul
lcall
insl
push
cwtl
shll
push
ss
nop
inc
dec
cmc
fld
or
mov
imul
sbb
std
add
pop
mov
sahf
fs
aam
cmc
mov
jnp
push
pop
push
imul
push
movsl
cld
xor
pop
je
test
mov
jnp
xor
mov
shl
mov
mov
sbb
and
jl
or
or
fldt
adc
repnz
pop
adc
push
lcall
ret
add
inc
push
fwait
cmpsl
test
mulb
shrb
stos
das
repnz
jecxz
je
mov
inc
xchg
and
cmp
mov
mov
xor
lods
dec
jp
ljmp
mov
jo
sub
sbb
out
pop
dec
xchg
mov
xor
push
sbb
icebp
bound
inc
push
xchg
push
in
adc
and
daa
inc
stc
sub
mov
shlb
push
jno
sbb
dec
stos
fwait
clc
cld
jne,pt
sub
test
mov
pop
out
adc
xchg
xor
dec
pinsrw
mov
fldcw
test
bound
dec
inc
mov
js
popa
inc
hlt
jmp
int3
cmpsl
mov
fdivl
cmp
pop
call
sub
push
xor
rol
jno
add
fldcw
adc
push
gs
iret
sub
popa
test
ljmp
cmp
mov
push
xlat
jl
repz
fucomp
cmp
mov
sbb
inc
bound
cmp
mov
cmp
or
jmp
jb
fisubs
mov
jp
mov
push
imul
movsb
mov
jbe
les
and
xor
pop
stos
lock
test
movsl
jmp
pop
inc
rorl
in
mov
out
push
popa
aam
lret
repnz
cld
shlb
into
dec
test
jno
push
clc
and
cli
jmp
pop
inc
mov
dec
and
mulps
repz
out
scas
cld
cli
add
dec
lret
or
in
jecxz
mov
mov
in
cld
pop
test
movsl
outsl
mov
sbb
or
ficomps
lret
nop
dec
or
push
push
fcmovnb
push
lea
adc
negl
xlat
fisttpll
add
sbb
loopne
and
cmp
cmpsb
mov
imul
xchg
dec
int
sbb
movsl
xor
es
stc
xor
iret
ss
xchg
pop
sub
dec
or
cli
xchg
lahf
and
out
adc
cmp
aam
xchg
fwait
and
and
adc
in
cmp
inc
mov
pop
xor
sahf
jo
cmp
cld
pop
gs
mov
dec
sbb
std
jmp
sub
mov
push
cmp
cmp
pusha
sarl
xor
and
jle
fs
pop
sahf
add
in
inc
xchg
idiv
iret
xchg
cltd
daa
cmp
add
lret
inc
xorl
fs
je
add
xchg
popf
inc
int
mov
inc
xchg
in
pusha
cltd
or
imul
mov
jbe
sarb
push
shl
mov
cli
jno
fninit
shrb
push
cwtl
ja
jp
imul
mov
ljmp
repz
adc
and
or
scas
mov
push
push
adc
inc
mov
xchg
cld
inc
sub
and
aaa
jns
add
sub
cmc
xchg
push
sbb
or
add
jae
add
incb
loop
mov
fwait
jge
jae
push
imul
sbb
test
mov
iret
add
ret
sbb
xchg
loop
or
xchg
adc
mov
cmp
aaa
lcall
repnz
pushf
adc
pusha
jo
pop
mov
inc
or
cmp
pushf
pushf
int3
les
addr16
lea
enter
sahf
mov
dec
js
gs
sbb
push
iret
cmp
int3
adc
or
repz
cld
and
out
mov
imulb
test
test
push
adc
lods
ret
mov
xor
aaa
dec
xchg
xchg
inc
pop
mov
xchg
insb
inc
int
mov
ljmp
outsb
sbb
pop
jge
adc
jmp
jge
add
push
rolb
ds
and
push
cmpsl
out
arpl
mov
in
mov
adc
iret
cmp
jns
loopne
sti
loopne
sub
mov
xchg
out
insl
mov
inc
mov
jno
push
stos
push
js
out
jp
data16
mov
sub
and
push
mov
xor
in
cld
lods
sub
jl
scas
inc
xlat
and
pushf
scas
fdiv
jae
les
sub
xor
jge
mov
add
push
ja
sub
sti
xor
fwait
mov
subl
cmc
inc
pop
mov
xor
xlat
lods
fisttps
pop
adc
sbb
jae
outsb
pminsw
push
ret
test
das
cmp
into
push
cmp
test
mov
out
test
fmull
mov
in
pushf
mov
pop
jle
bound
fincstp
mov
fsubrl
das
cmpl
int
jo
mov
lcall
pop
jg
js
mov
in
inc
mov
add
flds
push
ljmp
jmp
push
in
iret
push
and
add
inc
lods
mov
pushf
and
sahf
adc
inc
push
lcall
mov
cmp
ret
addr16
or
popf
xchg
adc
add
push
push
mov
andl
push
lock
imul
fwait
out
mov
add
aas
outsb
mov
pop
aas
sbb
cli
mov
out
stc
pop
inc
adc
sub
movsl
xchg
cmp
dec
pop
sbb
mov
outsl
cmp
bound
loope
hlt
mov
push
fsts
add
cli
popf
std
lds
mov
scas
or
and
sahf
outsb
xchg
xchg
jmp
pop
jmp
ret
js
es
cmp
inc
cmp
cmp
push
int3
sub
sbb
out
cmpsb
int
es
add
sbb
jo
test
ret
cld
aad
mov
mov
dec
incb
ret
ret
or
je
in
mov
push
pop
and
bound
xchg
inc
and
cltd
fucomip
push
sub
cmc
das
jae
add
lods
dec
std
cwtl
ljmp
fadd
jecxz
pop
test
adc
leave
xchg
in
push
mov
push
es
pop
pop
mov
sbb
in
push
imul
in
mov
and
cmp
mov
mov
addr16
sbbl
sbb
cmp
dec
iret
cmc
xchg
jmp
sbb
mov
aas
cli
sbb
and
mov
fmull
nop
push
push
adc
sbb
push
push
lods
ret
inc
out
dec
sbb
push
jo
jne
dec
mov
out
int
jne
xchg
dec
xchg
insl
imul
dec
xchg
das
pushf
mov
dec
arpl
pop
stc
cmp
inc
test
lret
sub
mov
fcompl
xor
inc
mov
push
jp
outsb
std
and
sar
je
ret
test
outsl
inc
adc
cld
dec
jbe
je
xor
mov
cmpsb
and
mov
pop
dec
fdivrp
in
jp
hlt
sub
push
add
lods
pop
and
sti
xchg
test
sbb
roll
inc
ficomps
jb
and
jns
insb
lods
xchg
dec
lds
add
mov
pop
mov
test
push
cmp
aad
ja
popf
mov
out
je
sub
mov
arpl
outsb
inc
leave
jmp
dec
push
push
cmpsb
ret
xor
shl
inc
adc
push
int
sub
jl
lods
sub
sub
xchg
aam
imul
imul
cli
inc
cmp
clc
sbb
cmpsl
aaa
lahf
pop
call
insl
xchg
push
xchg
sbb
jmp
ss
outsl
jge
ja
mov
sub
or
lret
inc
add
pop
xor
dec
fnstcw
loopne
out
pop
dec
pushf
xor
out
sbb
dec
lods
pop
xor
ljmp
xchg
pop
lock
xchg
mov
lret
inc
mov
fwait
xor
jno
popf
dec
mov
mov
pop
mov
xchg
dec
outsb
push
repnz
push
jns
jb
and
clc
cmp
pusha
aad
jns
pop
gs
xor
cmpsb
hlt
push
lret
inc
sbb
pop
mov
icebp
sbb
es
jbe
int3
sub
in
sub
adc
sub
and
sub
scas
gs
mov
adc
xchg
mov
cmpxchg
cmp
jae
pop
in
shrb
cmp
clc
sbb
inc
loop
ljmp
aaa
add
push
add
and
pop
mov
xchg
fcoms
into
jnp
jae
js
ss
jb
pop
add
pop
das
sub
xchg
xchg
sti
into
and
mov
call
insl
daa
push
mov
jns
pop
inc
dec
or
mov
outsl
mov
rorb
int3
or
and
adcl
int
icebp
dec
and
std
mov
jne
shl
jg
and
test
lods
lea
jle
pop
popf
jns
das
sub
inc
push
cmp
ret
ds
push
pop
push
popa
nop
lcall
pop
imul
xor
lret
jmp
sub
pusha
iret
inc
adc
out
mov
sub
dec
std
lcall
mov
push
inc
icebp
dec
push
xor
jb
scas
popa
cmp
in
iret
mov
xor
pushf
inc
stos
mov
lret
daa
mov
fstpt
arpl
xchg
int3
sub
out
or
das
call
jne
xor
add
inc
aad
xchg
pop
adc
xor
or
mov
leave
rclb
mov
adc
dec
movsb
roll
imulb
gs
adc
je
xchg
xchg
es
xchg
add
inc
add
cmp
fildll
lret
push
lret
ds
mov
fildl
lcall
out
push
aam
jbe
push
xor
mov
push
mov
fwait
mov
inc
sbb
imul
call
jb
cmpsb
sahf
outsl
jbe
or
ljmp
push
inc
jne
cmp
push
cmpsl
add
cmpb
xchg
xchg
inc
jbe
ret
repz
pop
js
fdivr
lods
ss
cs
imul
push
cmp
jecxz
movsb
out
add
dec
jle
pop
add
or
xor
mov
lods
pushf
and
pop
or
or
jle
and
pop
jecxz
fs
movsl
js
les
out
mov
jns
rorl
inc
lds
dec
ss
push
sbb
xchg
hlt
push
in
pop
movups
in
cli
imul
notb
jne
out
sub
push
and
mov
xor
push
cmc
mov
rcl
mov
mov
fdivrl
mov
int
sub
test
mov
fdivrl
mov
out
and
sbb
add
sbb
xchg
mov
call
lret
jle
and
mov
roll
enter
mov
adc
aas
xor
std
out
add
call
sub
test
aad
mov
les
leave
in
out
adc
je
xchg
out
mov
cmp
repz
mov
orb
push
mov
mov
add
sub
lods
and
mov
out
or
push
lahf
mov
push
cli
cmc
jns
jnp
pop
or
jmp
mov
lds
xor
xlat
and
incb
jmp
jbe
aad
xor
add
popf
pop
hlt
cwtl
test
add
pop
xor
push
fists
repnz
xchg
cwtl
cmc
push
ret
shlb
out
cmp
mov
xchg
cmp
test
mov
leave
mov
jae
mov
or
mov
mov
mov
leave
mov
mov
mov
jns
pop
inc
gs
mov
dec
jb
inc
loopne
popa
sub
dec
dec
jae
icebp
lahf
xor
pop
sub
mov
dec
and
out
scas
push
cmp
push
add
cmp
sub
adc
inc
xchg
pop
clc
loopne
loop
xor
pop
lods
or
pop
mov
mov
jnp
inc
cltd
xchg
jle
movsb
lock
out
imul
mov
stos
lods
add
out
mov
rcrl
mov
jp
and
nop
and
adc
imul
fwait
push
std
xchg
sbb
fiaddl
shr
int
fisubrs
ja,pn
cld
inc
cmp
fisttps
jl
xor
sbb
lods
jb
cmp
mov
stc
mov
or
sub
xchg
xchg
cmpsb
mov
dec
loop
frstor
jb
hlt
leave
int3
arpl
insl
xor
test
ja
xchg
cltd
pop
mov
jo
dec
and
rolb
cmp
and
stos
jnp
int
cmp
and
cmp
jne
cmc
nop
add
stc
pop
push
movsb
in
push
fwait
insl
fdivs
icebp
fadd
insb
xor
mov
std
cmp
jl
sub
mov
pushf
lods
or
adc
and
push
ja
cmp
mov
int3
stos
das
jg
ror
fmul
or
lods
jne
xor
test
into
sbb
loop
fstpl
stos
fists
adc
shr
fdivrl
lds
shrl
lea
xor
rol
lret
xlat
orb
jo
clc
mov
idivb
mov
push
pop
pop
jo
jp
rcrb
pop
movsb
xlat
pop
inc
cmp
inc
add
inc
es
inc
mov
adc
adc
adc
aaa
xor
sub
inc
arpl
xlat
cld
mov
popa
pop
mov
push
mov
in
insl
test
jae
mov
stc
out
push
inc
add
inc
test
rcrb
test
pop
xor
addr16
loop
or
addr16
mov
xor
js
push
in
inc
sbb
arpl
lret
cli
aas
cs
push
xor
mov
lea
adc
xchg
fsub
xchg
loopne
aad
sti
ljmp
scas
nop
int
inc
cmp
hlt
test
mov
push
cs
into
dec
test
rcl
out
ss
xor
xchg
push
dec
outsl
jmp
xchg
pop
and
or
in
pushf
dec
and
lock
ficoms
cli
mov
movsl
mov
gs
mov
mov
pop
and
add
push
enter
mov
aad
daa
insl
jle
fsubp
lods
movsl
xor
call
pop
or
mov
aaa
lods
inc
lea
xor
out
xor
or
xor
leave
pop
mov
or
lods
push
dec
push
dec
inc
and
popf
mov
repz
fiadds
outsb
stos
shrl
out
and
cld
cmp
adcb
sahf
ja
xor
lea
mov
mov
and
mov
cs
xlat
xchg
mov
jnp
lcall
jae
mov
jl
fwait
aaa
mov
mov
push
xchg
mov
xchg
xor
push
jp
jmp
mov
mov
pop
lret
outsb
loope
jno
pop
ss
adc
xor
ljmp
mov
mov
add
cli
cmp
jbe
ret
pop
fcmovnbe
pop
inc
xor
nop
pop
sbb
imul
out
or
sar
push
lea
pop
imulb
lea
dec
loope
sbb
repz
mov
lods
jne
mov
inc
and
xor
and
pop
or
gs
push
cmove
fs
add
insl
push
mov
je
cmp
popl
bound
in
jle
int
dec
loopne
add
pop
insb
cli
inc
popf
sbb
fldenv
and
inc
imul
leave
jno
push
cs
arpl
xchg
cwtl
out
stos
jl
lcall
inc
je
inc
xchg
arpl
mov
mov
lahf
aas
stc
dec
sbb
jo
aam
xchg
or
and
push
lods
cld
cmpsb
lcall
cmpsl
insl
jns
stos
jg
pusha
cmp
lods
mov
push
add
add
in
stos
sub
xchg
dec
mov
cmc
or
ljmp
xchg
sahf
jge
loopne
lcall
aaa
stc
adc
cmc
xor
mov
cmc
push
pop
pop
mov
push
fistps
fcomps
mov
mov
mov
enter
mov
push
lods
cwtl
jns
fcomp
pop
outsb
call
inc
shl
cltd
mov
push
pop
ss
jbe
mov
ljmp
pop
mov
cmc
arpl
lret
data16
outsl
dec
cld
ja
cmp
iret
inc
fwait
xor
push
test
fbld
sbb
lods
xor
std
add
lret
scas
movsl
pusha
fstpt
in
outsb
cmpl
jle
std
push
or
movl
addr16
and
mov
addb
aas
movsb
add
mov
jl
scas
aaa
dec
das
mov
add
add
mov
pop
aam
jo
fisubs
insl
iret
pop
and
adc
mov
add
in
xchg
sti
rolb
push
lds
ds
mov
test
shll
rcrl
lea
scas
lret
daa
insb
cmp
ds
inc
jns
sti
jge
jl
xor
aam
pop
mov
xchg
push
js
or
mov
lcall
iret
mov
push
stos
pusha
lods
sub
jg
and
ja
sub
cmc
es
mov
adc
mov
push
pushf
mov
ret
mov
scas
jmp
jno
inc
mov
cmpl
hlt
vmovsd
sub
addr16
mov
call
fadds
jecxz
jo
cmpl
pop
mov
scas
into
mov
inc
mov
inc
lcall
pop
push
xchg
dec
rcr
sub
sbb
movsb
push
sub
adc
mov
int
bound
adc
or
sub
cmp
add
lahf
jo
pop
jns
jns
es
sub
aam
sahf
or
push
sbb
dec
fsubs
pop
cli
push
arpl
sbb
dec
in
jge
pop
ljmp
mov
in
cs
push
mov
add
and
pop
js
sub
xor
pop
movsb
frstor
push
dec
sbb
sbb
xchg
adc
pop
ss
sbb
lret
rcrl
or
push
arpl
dec
mov
loop
dec
xchg
fnsave
stos
push
imul
shll
add
pushf
aaa
mulb
pushw
mov
xor
mov
cmpsb
sbb
mov
call
jnp
subb
or
mov
je
negb
mov
inc
or
cmpsb
sub
clc
pushl
push
fwait
push
pusha
add
or
addr16
std
dec
or
sub
and
xchg
test
sub
call
and
lcall
cmp
xchg
push
or
adc
dec
mov
ss
xchg
std
adc
push
xor
mov
jne
testl
or
into
ljmp
jbe
push
shll
push
push
xor
imul
add
leave
jecxz
sahf
push
sbbb
adc
popf
jo
jbe
mov
in
add
push
mov
popf
ret
lret
inc
cltd
adc
or
xchg
push
mov
cli
dec
pusha
pop
push
mov
pop
jno
dec
adc
sahf
out
mov
pop
loopne
jns
push
dec
pop
mov
fwait
cmp
adc
dec
xchg
popf
push
push
pop
dec
cmp
xchg
out
xchg
aaa
cmp
jmp
and
loope
dec
push
add
andl
mov
or
dec
sbb
lret
jp
repz
mov
add
inc
cmp
xlat
push
sub
or
jecxz
lret
stos
bound
out
mov
stos
or
mov
imul
mov
hlt
mov
shlb
es
pop
push
or
inc
xchg
mov
loop
push
and
hlt
xchg
push
test
jnp
test
negb
mov
ret
mov
in
mov
ss
inc
cmp
outsb
int
push
pop
dec
mov
popa
sub
shrb
movl
add
outsb
xchg
mov
jbe
xor
adc
loope
xchg
and
mov
xchg
jp
outsl
cmp
xchg
adc
jo
aad
lret
push
out
add
out
sbb
cmpl
fiadds
js
add
mov
adc
and
add
sbb
push
insb
lods
flds
adc
xchg
mov
jmp
mov
lock
loope
js
and
adc
in
je
push
ja
in
mov
pop
leave
call
jno
add
movsb
jmp
mov
stos
xchg
les
popa
clc
repnz
decl
inc
in
enter
mov
ljmp
leave
addr16
mov
cli
sti
cmpsb
add
inc
clc
cmp
push
inc
cmp
jmp
repnz
cmpsl
cmc
icebp
xor
xor
popf
mov
push
jno
lock
dec
or
mov
outsl
add
mov
adc
jnp
mov
and
notl
push
push
aam
cmpsl
mov
je
inc
data16
inc
mov
sahf
int3
test
loope
xorb
xlat
fsubs
cwtl
push
add
dec
rorl
ret
sbbl
into
call
mov
pop
mov
mov
out
mov
fildll
cmp
mov
push
xchg
xchg
cmp
mov
mov
inc
lret
movsb
dec
push
lcall
or
nop
ljmp
gs
insl
stc
aam
adc
pop
insl
xor
or
iret
sbb
nop
mov
sub
js
and
fdivp
mov
orb
push
js
cltd
mov
stos
addr16
leave
push
cmp
mov
outsl
cmp
mov
mov
nop
bound
outsb
mov
aas
inc
cmp
mov
xor
inc
imul
out
lahf
int
push
pop
xchg
sahf
out
in
mov
xor
push
lea
shrl
push
bound
fadd
js
sub
add
test
aas
and
int3
xchg
pusha
aad
pop
nop
adc
pop
mov
aaa
inc
lea
arpl
mov
out
xor
dec
stc
movsl
movsb
jbe
stos
push
mov
or
mov
fnstcw
sbb
add
orps
pop
cmpsl
push
mov
in
mov
loope
cli
pushf
xchg
mov
jg
jge
cmp
sub
xlat
inc
xchg
or
sub
mov
cmp
dec
lods
pop
je
inc
or
std
ret
lcall
or
adc
mov
jbe
outsb
dec
inc
xor
nop
inc
mov
jmp
adc
inc
mov
ret
push
mov
xor
test
ret
ds
mov
repz
mov
test
mov
ss
lock
add
pop
lock
das
xor
insl
jns
sub
ss
enter
cmpsb
sbb
adc
adc
jmp
pop
jno
or
les
push
loope
cs
sarb
cmc
inc
roll
adc
inc
adc
inc
lret
push
pop
pop
xchg
pushf
inc
cltd
and
pop
scas
mov
push
fildl
rorb
sub
aam
inc
int
jg
int
jnp
ficomps
sbb
push
add
jne
leave
fsubl
hlt
mov
cmpl
aam
mov
adc
sub
inc
inc
int3
inc
pushf
stos
xor
mov
scas
mov
lahf
pop
mov
test
movsb
test
push
add
mov
cltd
push
adc
cmp
or
out
push
xlat
dec
pop
mov
gs
rcll
dec
pop
icebp
int3
xor
mov
sbb
pop
jmp
and
pop
ficoml
je
js
add
cmpsb
add
scas
dec
xor
adc
mov
nop
push
cmpsl
push
scas
ficoml
mov
mov
daa
shll
shl
push
es
adc
xchg
out
push
int3
add
mov
mov
sbbb
pop
fistps
mov
dec
clc
icebp
and
insl
jmp
aam
adc
jb
lods
subb
sbb
pop
sub
pusha
inc
div
movsb
mov
or
sti
xchg
incl
dec
clc
inc
in
mov
cld
xchg
repnz
or
lahf
or
jmp
shrb
add
mov
mov
icebp
pop
push
or
pop
aam
stc
repnz
sub
fistl
adc
lcall
xor
rcrb
int
cmp
xchg
or
icebp
push
cmp
pop
jge
das
ret
movsl
in
call
movsb
daa
test
into
lods
in
or
jbe
inc
stos
lods
arpl
aaa
dec
mov
xlat
jl
and
fists
lret
lret
mov
iret
jl
bound
jbe
mov
mov
jmp
pop
sahf
push
xchg
xor
inc
add
jp
popf
adc
pop
jl
arpl
sub
xor
sbb
jmp
stos
daa
aaa
push
repnz
loop
icebp
pushf
scas
jmp
pop
lods
sbb
or
les
cmp
loopne
xchg
adc
ja
mov
lds
adc
popf
insb
ret
clc
pop
fmuls
mov
test
push
jae
aam
push
in
mov
test
xor
movsb
adc
push
dec
mov
lds
jno
fninit
lahf
test
adcl
inc
lods
push
imul
cmp
jecxz
frstors
daa
lret
jmp
imul
mov
rcr
repz
and
leave
out
mov
out
mov
pop
repnz
cwtl
fsts
xchg
shl
out
jb
and
fldenv
repnz
jg
inc
rcll
or
cwtl
mov
jns
mov
mov
push
inc
and
mov
mov
xchg
mov
inc
movsb
out
and
sbbl
sub
lods
jmp
fucomi
ss
test
mov
cwtl
cmpsl
xlat
and
sub
and
outsl
addl
mov
xchg
pop
mov
lcall
out
pop
dec
mov
sbb
test
dec
or
dec
enter
push
mov
dec
repz
dec
xchg
js
shrb
or
std
repz
mov
push
mov
xor
mov
inc
inc
pop
pop
push
pushf
outsb
mov
mov
aam
dec
out
cwtl
sbb
cmovae
lea
das
jg
out
ss
mov
dec
ret
ja
jns
repz
mov
mov
hlt
sbb
lock
or
sub
adc
pop
jno
jb
pop
or
pop
aad
sbb
aam
out
push
jnp
outsl
xor
and
mov
pop
cmp
cmpb
xor
mov
push
je
sub
add
movsb
push
js
sbb
mov
jmp
call
inc
loope
pop
adc
pop
sahf
cmc
fidivs
or
leave
sbb
pop
and
rcl
pop
and
inc
cli
jl
dec
cmp
es
xor
das
lcall
es
sti
mov
push
div
fs
add
xor
adc
repnz
scas
ret
adc
pop
jbe
push
ret
fdivr
dec
cwtl
xchg
inc
inc
aaa
shrl
mov
ja
cli
out
and
mov
or
cld
loope
rorb
jg
or
dec
repnz
jp
adc
lds
cwtl
faddp
movsb
jne
xlat
adc
outsl
mov
popa
mov
psubusb
clc
sub
fnsave
loop
je
mov
mov
pop
loope
hlt
leave
je,pn
inc
cmp
scas
pop
inc
add
jl
stc
xor
jmp
push
dec
xor
xchg
mov
out
cmc
push
sti
lock
or
clc
sub
scas
es
sbb
xchg
xchg
jp
sub
jbe
sbb
pop
fldl
mov
pop
pusha
cmpsl
mov
in
inc
mov
add
mov
pop
adc
xchg
jno
test
fisttpl
sahf
mov
or
mov
sbb
imul
mov
xchg
add
inc
inc
mov
ret
mov
adc
insl
clc
dec
repnz
ja
in
pop
xchg
jns
or
fcomi
outsl
cmpsb
fidivl
mov
mov
loope
push
or
fildl
inc
enter
mov
push
mov
lahf
js
in
mov
mov
and
sub
insl
ds
pop
imul
mov
or
sbb
shrl
mov
lret
dec
pop
xor
bound
mov
mov
xchg
jne
jnp
movsb
push
sbb
mov
popf
stos
mov
lcall
das
mov
subl
in
pop
into
loopne
mov
mov
dec
addr16
cltd
in
into
pop
jmp
mov
add
mov
mov
push
roll
lea
xchg
out
mov
sbb
ds
shll
fildl
repnz
pop
cmp
adc
lods
mov
add
jle
mov
xchg
adc
dec
mov
js
pop
sti
pop
in
xchg
or
ficompl
pop
dec
fsts
mov
mov
pop
subb
cltd
lret
mov
sbb
int3
mov
pusha
shr
mov
dec
fsubs
add
jo
mov
jmp
ja
in
fidivrl
daa
out
ficompl
outsl
dec
mov
add
movsl
sbb
sub
push
stc
cmp
jb
sub
mov
xlat
ja
lret
sti
pop
inc
cmp
push
sbb
cld
mov
push
rcrb
and
xor
pop
rol
push
adc
je
cmp
jge
pop
incl
dec
adc
xor
jp
dec
loope
cli
fisubrl
js
mov
fists
fdivp
jae
adc
aaa
mov
inc
in
dec
mov
and
test
js
dec
add
out
xor
xchg
and
dec
mov
sbb
lret
and
mov
call
add
xor
ljmp
test
xchg
pop
sub
andb
les
jg
vmovdqa
stos
push
icebp
in
push
jmp
or
je
test
mov
cli
jae
sbb
jb
stc
cmc
mov
sub
aas
cltd
out
stc
scas
adc
scas
scas
jbe
int3
faddl
ret
lret
repnz
sub
jecxz
clc
cli
add
adc
add
mov
fstpt
test
out
std
push
arpl
add
pop
roll
fildll
out
jns
fdivrl
jbe
mov
jg
enter
ficoml
dec
dec
adc
ret
dec
mov
add
repz
les
push
jge
fwait
xchg
imul
xchg
add
je
lods
xor
testl
loopne
in
imul
push
adc
mov
push
in
pop
mov
fdivs
xor
sub
xchg
sub
sbb
or
push
jo
nopl
or
inc
lea
sbb
push
mov
inc
sub
adc
ret
les
cmp
adc
das
rcll
mov
dec
loope
imul
inc
push
out
add
imull
cmp
sbb
adc
lods
testl
mov
add
add
loop
bound
pop
sahf
mov
in
jae
or
jb
sub
and
push
pop
push
jp
sub
sub
imul
fstl
lret
jge
pushf
mov
sub
inc
into
and
es
and
mov
cmpsb
mov
mov
out
xchg
or
popf
sub
jne
xor
je
movups
cs
loop
test
lcall
dec
in
mov
or
test
mov
test
sahf
data16
xor
stc
add
sub
xor
repnz
jnp
rcrl
xor
popf
arpl
lahf
ds
xor
or
mov
cmp
test
cwtl
rol
mov
cmp
adc
incb
scas
cmp
sti
xacquire
xchg
jle
jmp
jne
mov
pop
adc
fwait
es
push
xor
jg
fsub
push
das
cmp
stos
add
scas
hlt
jmp
inc
and
mov
sub
ficompl
sub
lahf
scas
push
mov
fistpl
mov
repz
aaa
inc
pusha
cmp
icebp
inc
xchg
xor
cwtl
out
jne
adc
bound
adc
xor
fnstenv
mov
xchg
xor
aas
inc
int
arpl
jmp
inc
jnp
dec
incb
mov
dec
insb
in
lock
pop
add
sarl
icebp
out
or
and
xchg
inc
into
iret
pop
push
mov
mov
sbb
fsubrl
xchg
lcall
xchg
mov
pop
imul
mov
jp
imul
inc
xchg
icebp
mov
mov
pop
fcomps
sbb
jns
loope
cmc
mov
fsubrl
ficoms
push
lods
fistl
or
and
inc
push
jns
mov
pop
dec
loope
xchg
push
inc
cmp
mov
sbb
push
sti
adc
mov
jecxz
xchg
inc
loop
imul
or
loop
cmp
xor
pop
stos
push
xor
loopne
add
push
pop
cmp
mov
push
stos
cmp
xchg
jecxz
push
push
cwtl
addb
scas
bound
jns
stc
stos
cmp
fbstp
jmp
dec
out
into
lods
lcall
cltd
lods
js
iret
jp
lret
adc
mov
loopne
push
jb
loop
jle
inc
xor
loop
les
sub
xchg
orl
lret
repz
ss
outsl
jnp
push
jo
sub
mov
sbb
dec
adc
push
xchg
xor
or
push
ja
les
lret
inc
mov
mov
adc
adc
scas
or
sub
or
shlb
sub
ljmp
lret
push
int3
push
lea
ftst
mov
jnp
out
sti
add
push
push
fcmovb
and
push
insb
add
jmp
popa
lahf
mov
lahf
push
mov
mov
adc
mov
xchg
data16
in
xor
iret
cmpb
or
js
jmp
xor
mov
outsl
je
or
xchg
mov
jno
call
inc
and
cmp
rcrl
test
jmp
cltd
hlt
pop
fisubl
in
adc
xchg
loope
jmp
push
cs
jle
dec
inc
lock
fidivrs
adc
jbe
or
sbb
cli
test
jae
call
int
sub
test
sbb
pop
int
dec
leave
movsb
and
int3
pop
fmull
pop
xor
cs
ret
daa
pop
es
adc
push
cmp
outsl
in
popa
lea
mov
jne
lret
sbb
push
pop
jle
cmc
sbb
mov
clc
daa
adc
popf
data16
cmp
cmp
sub
into
lahf
loopne
xlat
adc
cs
xchg
mov
insl
in
test
notb
or
or
mov
and
cmp
outsb
aas
sbb
fidivrl
mov
sbb
std
jmp
nop
imul
aas
sub
movsb
jbe
bound
mov
test
pop
dec
out
lea
rolb
cmp
pop
or
sbb
sub
outsb
jg
dec
dec
lcall
xor
loop
jae
das
push
mov
add
sbb
and
lock
pop
int
sbb
sbb
pusha
aaa
add
xor
mov
negb
ret
adc
jns
mov
loope
mov
sarl
lret
mov
mov
jp
mov
cmp
cmp
shlb
sub
bound
sbb
pop
inc
or
sti
xchg
push
jnp
push
push
dec
push
xchg
sub
push
add
push
jns
xor
xchg
sbb
pop
pop
adc
mov
pop
adc
test
pop
jb
sbb
xchg
jb
fmull
jne
cmc
cmp
sub
cmc
push
aam
lea
ss
imul
and
mov
fdivs
jb
adc
inc
cmp
mov
sub
or
ror
sti
pusha
daa
jno
push
stos
stos
inc
add
jne
iret
jmp
repnz
test
jnp
jnp
sbb
push
cmp
cmpl
out
inc
adc
out
scas
xor
in
stos
and
addr16
mov
clc
dec
imul
andb
gs
stc
outsl
pop
and
aas
adc
mov
mov
mov
push
das
leave
jo
das
push
sub
inc
andl
out
push
fsubr
icebp
mul
fiadds
cmp
mov
inc
out
xor
jecxz
xchg
jge
fcmovnbe
scas
xor
push
fwait
sbb
dec
mov
bound
dec
into
jb
jecxz
aad
lea
lahf
cmp
cmp
adc
das
cmp
push
outsb
mov
gs
inc
shrl
stos
adc
adc
jne
scas
or
testl
fdivrl
divb
add
out
pop
roll
push
loop
fwait
iret
cmp
bswap
xchg
xor
pop
xchg
mov
popaw
push
and
addr16
pop
flds
add
stos
sub
jo
cmp
mov
out
js
movsl
cltd
push
popa
cmpsb
call
call
fiadds
jp
enter
jle
std
cwtl
je
lcall
in
jno
jecxz
xor
leave
fwait
jno
repz
xlat
dec
cmp
inc
and
cmp
mov
insb
or
icebp
gs
jp
cmp
cmp
mov
fsubrl
mov
aad
je
sahf
mov
xchg
iret
jp
js
test
sub
jo
push
inc
loopne
xor
daa
orl
or
inc
jb
mov
outsb
jnp
out
jecxz
bsr
insb
or
dec
push
pop
xor
jl
mov
or
mov
cmp
xchg
sub
push
in
mov
pop
scas
push
add
out
movsb
push
xor
mov
dec
les
add
push
lcall
loope
js
push
mov
fwait
sahf
pop
jb
jmp
cmpsl
pop
or
pusha
outsb
dec
jae
pop
pop
pop
movsb
mov
sti
jmp
sbb
push
xor
scas
sub
mov
in
clc
and
aaa
jns
mov
cmp
fstl
and
mov
cmpsl
stos
sbb
jne
jmp
pop
xor
out
mov
js
pop
mov
stos
fwait
mov
aam
gs
xchg
mov
add
imul
scas
pop
and
mov
pushf
pushl
add
and
inc
push
inc
push
lock
jnp
shl
imul
mov
adc
pop
dec
into
push
cmp
xchg
lods
lcall
pop
xchg
fistpll
scas
jge
adc
push
push
in
divl
andb
sarb
xor
or
push
ja
mov
add
cmc
and
xor
jbe
or
cmp
or
fldt
pop
xchg
lods
cmp
jle
movsb
les
jmp
test
inc
icebp
inc
cmp
sub
add
sbb
mov
pop
jge
or
sub
bound
negl
or
sbb
cmpsl
mov
mov
lock
fisttps
sahf
outsb
in
rcrb
fisttpll
outsb
xchg
fsubrl
xor
js
push
in
xchg
cmp
ljmp
insb
or
ljmp
add
jns
scas
lock
mov
push
lods
inc
insl
mov
pop
fisttpll
jle
dec
jle
pop
mov
xchg
dec
dec
sbb
mov
popf
int
repnz
loop
add
sbb
sti
mov
jbe
es
testl
add
pop
ret
push
mov
mov
mov
dec
or
aas
test
xor
sub
ficoml
jecxz
mulb
loopne
xor
mov
xor
pop
xlat
dec
or
xor
movsl
mov
cltd
hlt
das
inc
out
mov
push
cmp
aas
rep
cwtl
lods
ss
test
xor
adc
sbb
jbe
or
loop
push
lret
out
mov
mov
das
lock
and
add
pop
in
je
lds
addr16
lock
xchg
push
shl
repz
adc
scas
inc
inc
faddl
mov
insl
testl
scas
and
inc
out
mov
jecxz
sbb
pop
das
in
push
and
lods
test
mov
jp
scas
push
movsb
ja
xlat
ror
es
data16
jge
in
add
sub
mov
mov
negl
xchg
lahf
shll
cltd
lods
push
inc
roll
mov
mov
js
jnp
push
jecxz
imul
mov
sub
shl
dec
cmpsb
sbbl
popa
notrack
or
loope
xchg
sbb
pop
add
lods
fnstenv
dec
jne
int
test
xor
sub
inc
xchg
or
or
push
xchg
les
popf
shld
mov
pop
es
fimull
test
in
ret
arpl
out
pop
dec
stos
leave
xchg
fbstp
cli
hlt
aam
out
dec
xchg
cwtl
adc
sub
dec
dec
out
ss
pop
mov
jmp
je
mov
ds
sub
push
ret
push
insb
stos
dec
pop
adc
push
or
inc
aaa
pop
jecxz
insl
jp
cmc
and
pop
leave
jno,pn
hlt
into
repnz
sub
nop
nop
sbb
repnz
cmp
add
jno
jge
ljmp
out
pop
mov
scas
sbb
popa
fstpl
mov
mov
pop
test
pop
add
dec
inc
dec
imul
and
nop
pop
ficoms
push
ret
xchg
xor
mov
mull
jecxz
mov
dec
fisubs
fisubs
dec
jns
sbb
sub
jp
fldcw
mov
or
jno
mov
lcall
pop
xchg
pushl
cmp
mov
add
sub
xchg
cmp
enter
subb
mov
push
sbb
xchg
xor
lcall
mov
cmp
das
jo
jge
sbb
mov
push
mov
lcall
rep
test
test
stos
repnz
lea
aam
pop
mov
bound
jne
imul
pop
popa
ja
sbb
mov
orl
hlt
bound
dec
sub
push
mov
pop
push
cmp
mov
jno
adc
iret
test
scas
dec
mov
cmp
leave
dec
inc
sti
sub
pop
cmp
sbb
add
jns
push
sub
mov
es
and
lock
arpl
ljmp
iret
inc
inc
mov
inc
push
jbe
xchg
loope
adc
sahf
mov
ljmp
dec
xchg
dec
jmp
xor
insl
into
int3
outsl
cmp
pop
leave
addb
cmp
mov
in
jl
add
mov
dec
lret
fcom
pop
inc
or
push
jo
sub
fdivrl
push
fadds
mov
push
loope
pop
out
outsl
sbb
rclb
push
xor
hlt
lea
push
bound
sahf
es
mov
cmp
sub
push
sub
sahf
inc
jne
aas
pusha
sub
sbb
mov
or
sbb
xchg
gs
movsb
mov
push
inc
push
les
adc
dec
out
sti
cmc
scas
cmpsb
jnp
adc
faddl
push
push
enter
pop
fcomps
arpl
lods
cmc
daa
ficomps
cmp
ss
inc
ljmp
loop
dec
push
outsl
in
outsb
inc
lahf
mov
sbb
push
mov
jns
sbb
xor
mov
pop
lcall
xchg
into
xor
scas
fistpll
bound
sbbb
repz
ds
or
push
mov
daa
jecxz
daa
rsm
adc
aaa
mov
jbe
fcom
dec
fistpl
sti
mov
pop
pop
xor
sbb
in
push
inc
jnp
cmp
pop
cld
or
out
inc
mov
mov
orb
jle
push
pop
cmpsl
mov
pop
push
push
push
std
fildll
arpl
cmc
mov
xchg
xchg
jbe
stos
xor
into
or
fwait
stos
imul
fwait
mov
jne
ret
xor
adc
and
shll
fistps
stos
stos
cltd
cwtl
addl
inc
push
or
in
cwtl
mov
push
pusha
out
mov
inc
repnz
test
jl
lock
cmpsl
push
xchg
fsubrp
xor
jp
pop
jl
sbb
inc
pop
or
popf
fabs
push
nop
in
ja
and
mov
cltd
mov
enter
cmp
pop
mov
inc
movsl
dec
out
jb
xor
cmpsl
xorb
jle
jg
lods
xor
int3
jno
out
mov
mov
les
mov
lahf
int
sarb
sahf
jae
sbb
aaa
sub
or
xor
lods
pushf
and
repnz
mov
aas
icebp
and
push
scas
cmp
ds
test
jbe
sbb
xor
into
cltd
cmp
dec
xor
lret
idiv
fcmovne
sub
and
stos
pusha
in
mov
mov
repz
jnp
notl
fdivrl
inc
jo
cmp
xchg
mov
out
mov
loope
xor
cmc
push
xchg
out
sbb
inc
stos
nop
jmp
aas
and
cmpsb
cli
adcb
fisubrl
sub
pusha
movl
enter
pop
jno
push
mov
cmp
push
fimuls
jnp
mov
dec
or
adc
bound
jle
mov
sar
lret
inc
in
out
sub
sahf
xchg
xor
adc
ret
fsubrp
xchg
sbb
adc
push
orl
and
insb
pop
xlat
andl
cmp
rol
xchg
fdivrs
cmovge
cmp
das
out
xchg
rclb
aas
mov
lods
mov
in
pop
xchg
xchg
mov
adc
and
loop
ret
add
cs
into
jle
xor
scas
sub
cmp
xchg
cmp
mov
leave
test
mov
dec
push
lret
outsb
mov
lock
pop
sarb
add
js
cld
adc
cmpsb
dec
aaa
cmp
jecxz
fcomps
inc
out
cld
in
sbb
inc
lea
rclb
jg
add
insl
imul
lea
repz
cld
jp
cmc
mov
inc
jnp
cli
dec
push
fdivp
mov
fdivr
repz
push
inc
daa
mov
push
xor
test
mov
xchg
repz
cmpsb
jmp
ljmp
inc
mov
addr16
jnp
push
push
pop
shlb
mov
movsl
fisttpl
and
mov
aaa
sbb
fists
mov
mov
add
imul
in
and
xchg
sbb
fadd
pop
mov
ja
movsl
add
vdivps
add
ja
scas
mov
mov
mov
push
outsl
adc
mov
push
mov
adc
fcmovnb
jnp
lods
fadd
rep
cmp
das
inc
jns
xchg
xchg
roll
dec
push
pop
adc
jbe
inc
mov
stos
or
and
shlb
adc
aam
repz
mov
ss
mov
push
cli
or
add
push
fcmovne
loope
adcb
mov
imull
push
subl
xchg
dec
adc
repz
mov
sahf
stc
push
rcrb
sub
ljmp
insl
cmc
aad
sub
or
arpl
lret
mov
fldenv
in
inc
xchg
cmp
sub
mov
mov
fcomip
call
add
pop
push
leave
fsub
popf
jns
xor
and
or
push
call
add
flds
cmp
jecxz
xor
push
dec
leave
mov
sbb
mov
out
aam
scas
jecxz
cld
pop
loop
adc
mov
pushf
jnp
pop
jne
cltd
cmp
lea
fwait
xor
shlb
xor
in
mov
and
sub
cld
add
repz
fwait
loope
lahf
pushf
mov
nop
jbe
inc
push
or
out
fs
cmp
xchg
in
in
int
jg
push
jge
xchg
data16
imul
sub
xchg
mov
lock
std
fs
in
imul
jbe
stos
add
out
and
divl
mov
cmp
adc
mov
popa
adc
fisubrs
push
add
sbb
and
sub
and
imull
push
pop
sahf
aaa
mov
cmp
mov
cmpsl
popf
fs
ret
dec
in
popa
dec
ret
in
xchg
dec
addr16
or
and
mov
lcall
jg
movsb
mov
pop
inc
xchg
mov
mul
in
cli
shr
jge
mov
or
jecxz
jle
push
pop
push
push
sbb
nop
inc
pop
in
cli
push
repnz
into
rsqrtps
inc
xchg
insl
and
fucomip
push
stos
lret
push
xor
stos
jle
xor
scas
push
adc
mov
das
shll
adc
jae
lahf
icebp
xor
sahf
mov
aam
out
pusha
xchg
aam
lret
repnz
retw
sbb
push
add
mov
addl
jbe
aam
or
and
jge
push
push
add
or
mov
sbb
imul
jl
or
jmp
xor
inc
jae
jb
xor
jne
xchg
mov
push
outsl
pop
sti
dec
fcmovnbe
or
push
lea
popa
fisttpll
cmc
xor
xlat
notb
mov
out
loopne
mov
sub
daa
sub
pop
das
scas
inc
xchg
stos
push
stc
push
test
mov
xor
xchg
push
jge
fs
mov
pop
cli
fwait
jecxz
sti
icebp
mov
pop
and
iret
xor
pop
cld
jnp
pop
push
arpl
aaa
jl
mov
add
arpl
mov
push
std
add
fisubs
div
dec
enter
cltd
push
fdivs
pop
mov
mov
js
mov
jecxz
push
addb
xchg
xor
mov
fs
rcrl
xlat
xor
pop
cmpb
sbb
pop
movsb
and
cmpsl
dec
add
and
mov
dec
lock
pop
outsb
pop
or
int
or
outsb
int3
sub
call
xchg
popa
stos
cmp
movsb
push
enter
push
sub
aaa
cmp
xchg
xchg
jb
int
push
sub
pop
jle
test
sahf
cmp
es
nop
leave
scas
dec
mov
mov
adc
cmc
lret
pop
in
jo
mov
ret
sahf
jno
xlat
in
adc
push
sbb
sub
lahf
shll
jnp
mov
in
ret
push
icebp
divb
mov
test
clc
lock
sbb
insl
imul
imul
adc
ficompl
mov
jecxz
cmp
cmpsl
mov
xor
xchg
out
popf
add
jmp
adc
add
stc
or
sbb
lret
push
je
add
int
iret
xchg
jmp
das
test
les
mov
bound
inc
mov
jne
adc
dec
mov
in
fidivl
stc
push
cmpsl
js
lret
popl
and
cmp
test
mov
inc
test
dec
rorb
les
jb
sahf
testl
aas
test
dec
adc
sbb
cs
into
in
or
pop
aam
outsl
cmc
popf
outsl
and
inc
mov
mov
mov
jl
sbb
cmpsb
sbb
xchg
mov
jbe
mov
lods
sbb
jle
aas
mov
push
popa
aas
fsts
add
or
lret
dec
test
jg
add
pop
fsubrl
sti
sbbb
jl
jno
push
je
leave
bound
mov
movsb
sbb
pop
sti
and
mov
cltd
push
push
cli
pop
lea
out
lods
xchg
jbe
lcall
jmp
fcompl
in
add
repnz
jb
flds
cmp
sbb
subl
sub
lret
inc
imul
lods
mov
imul
stos
add
inc
sbb
stos
mov
lods
and
lahf
sub
test
out
pop
push
lock
lods
jmp
xorb
add
jl
xor
mov
or
inc
add
mov
mov
jae
mov
jge
inc
lea
cmpsb
mov
inc
jae
stos
mov
enter
dec
sub
pop
out
mov
inc
stc
into
fucomip
movq
mov
mov
mov
gs
inc
push
ret
inc
inc
jecxz
or
push
adc
add
mov
into
addb
xor
push
js
or
mov
stos
pop
adc
aam
jle
nop
out
mov
mov
lret
pop
lahf
xor
jge
movsl
jb
jno
cmp
stos
jp
mov
js
test
pop
push
push
cmpsb
mov
push
xchg
pop
mov
adc
pop
cmp
add
mov
fdivrs
jp
movsl
pop
and
mov
push
pop
enter
xchg
push
and
jge
push
cmc
movsl
add
mov
jmp
cmpsl
mov
loop
ljmp
addr16
jo
jp
fadds
fsubs
out
pop
cmp
pop
sahf
out
cld
sahf
sub
out
sub
and
icebp
in
lret
adc
cmpl
addr16
jo
adc
push
hlt
sub
add
xchg
aam
roll
push
and
sub
fcomps
cwtl
inc
fwait
dec
mov
aam
iret
adc
mov
mov
je
lea
sub
xchg
ret
push
and
mov
mov
push
and
in
mov
dec
in
xchg
enter
aad
add
insl
pop
sti
in
into
xor
fmuls
or
push
cmp
or
subl
stos
adc
popa
pop
lret
inc
and
or
pop
xlat
push
pop
and
lds
aas
fbstp
sub
std
cmc
data16
cwtl
mov
shll
or
icebp
push
jmp
lcall
rolb
cltd
cld
sahf
and
jl
and
and
sbb
out
pop
aam
sti
push
lea
and
xchg
cld
and
push
pop
sti
adc
mov
shlb
mov
jb
dec
nop
sub
subl
cmp
add
xchg
sti
push
jb
notb
je
jae
jae
push
ja
cmp
jne
jmp
mov
lret
xchg
mov
arpl
in
mov
nopl
mov
fldt
sbb
push
xchg
mov
gs
mov
popl
mov
or
fldenv
inc
out
adc
mov
loope
push
dec
std
add
mov
and
or
and
xchg
insl
movsb
or
inc
mov
pop
push
stos
mov
jle
outsl
pop
scas
push
xchg
iret
mov
push
inc
sarb
pushf
addr16
cmp
pop
inc
loope
mov
ficompl
into
rclb
repnz
aaa
adc
pop
std
jbe
std
sub
hlt
loopne
fcmovnbe
adc
mov
in
push
inc
mov
jp
ja
push
lcall
aas
add
movsl
repz
pushf
shl
orl
incb
xor
cmc
cs
outsb
jl
mov
loop
xor
xor
int3
ja
test
ret
add
cmp
xorl
fcoms
ret
or
cmp
iret
xchg
xor
mov
adc
push
inc
lock
and
aad
cld
mov
and
call
call
cmp
dec
push
stos
add
mov
lds
push
ret
std
mov
or
push
inc
pop
iret
push
stos
dec
inc
pop
mov
push
aam
inc
mov
in
daa
add
cmp
rcrl
or
les
sbb
push
es
cmp
mov
mov
xorl
push
pop
shrb
hlt
call
xchg
sub
scas
inc
pop
loop
xor
ret
add
scas
xchg
test
add
pushf
xchg
jge
inc
shr
inc
pop
xchg
cwtl
fisttpll
sbb
scas
das
adc
dec
push
adc
fwait
lahf
adc
movsb
scas
gs
int
adc
out
lock
gs
ficoml
ljmp
push
push
sub
ja
push
adc
enter
push
fiaddl
jl
insb
inc
into
jmp
lock
arpl
xchg
daa
xchg
mov
cmpsb
stc
push
mov
stos
and
sbb
into
pop
mov
sbb
cmc
jl
adc
icebp
cmpsb
cmp
out
in
loope
iret
mov
inc
nop
inc
push
xchg
test
aaa
mov
sub
out
xor
lret
jno
test
movsl
cmp
jp
jl
fisttps
mov
aaa
into
shlb
fldl
sub
or
outsl
push
cmp
mov
popf
mov
or
testl
insb
jb
sbb
jge
mov
inc
sub
fbstp
in
push
call
fldt
xor
mov
insb
stc
cli
inc
out
xchg
lcall
sub
inc
adc
lcall
mov
push
and
xchg
testl
movsl
add
jg
push
test
nop
lahf
dec
movsb
xchg
adc
das
lcall
xlat
lods
or
pusha
mov
push
push
sti
andl
mov
dec
or
dec
fistl
bound
sbb
jae
idivl
push
sti
jno
sbb
pop
loope
andb
or
jl
shll
jecxz
mov
scas
ss
or
cmp
inc
test
das
xor
or
ds
cltd
push
iret
cwtl
mov
loopne
cmp
xchg
fidivl
jecxz
xor
scas
inc
lcall
jns
ret
jbe
ss
mov
stos
xadd
jle
lods
add
sbb
int
xchg
fidivs
mov
aam
sbb
xchg
push
shrl
hlt
jmp
dec
and
int3
cmp
xchg
das
mov
lock
mov
push
repnz
jae
mov
shll
mov
cld
stos
xchg
bswap
ss
pop
push
loopne
in
das
push
int
dec
inc
mov
jge
bnd
add
arpl
push
mov
sti
push
push
sbb
mov
fldt
dec
popf
jae
out
mov
loopne
xor
dec
subl
xlat
je
ret
cmpsb
int
dec
sub
push
mov
dec
mov
push
test
and
inc
arpl
stos
ss
dec
inc
jle
xor
and
sub
scas
inc
ficoms
fidivrs
fs
jp
cwtl
adc
jg
mov
hlt
or
inc
mov
mov
xor
js
mov
outsb
fcoml
push
int
sbb
mov
or
mov
adc
cmp
test
cmp
lea
hlt
sarb
cmc
lcall
cmpsl
and
stc
mov
mov
daa
mov
sti
xor
add
and
inc
lahf
inc
aad
jne
lds
insb
cmp
add
mov
lds
nop
out
inc
arpl
xchg
add
daa
pop
orl
ficompl
cs
or
mov
fldt
add
sbb
or
shrl
adcb
push
mov
and
fdivs
sbb
sub
inc
adc
cwtl
sub
in
adc
xchg
cwtl
negb
push
test
mov
cmp
mov
or
or
ljmp
cmp
xor
xchg
out
or
int3
dec
sub
xor
jnp
cmp
adc
mov
mov
es
jne
jecxz
sub
push
bound
imul
push
in
mov
adcb
fsubl
sarb
cmp
test
or
fld
inc
xchg
xor
imul
int3
call
pop
decl
or
cmp
sbb
cmp
incl
pop
mov
cs
adc
xor
lret
xchg
and
push
imul
movsl
mov
out
pop
pushf
push
xchg
jno
pop
lret
xor
ret
in
add
cmp
push
adcb
cmp
xor
and
push
xor
xor
push
jnp
ret
or
testl
sub
mov
outsb
mov
jo
out
stos
ss
test
sbb
xor
je
push
mov
push
push
mov
jl
popf
mov
lods
fnstenv
mov
gs
les
outsl
sub
pop
jg
repnz
lea
jl
test
call
aam
push
les
adc
inc
add
push
xchg
cltd
mov
imul
sahf
sti
movsb
inc
xchg
or
mov
pusha
js
sub
cltd
xchg
insb
add
rcrb
jbe
lret
faddl
pop
jb
sub
inc
push
sbb
pusha
ficomps
aam
imul
and
mov
cmc
push
inc
and
inc
scas
mov
ja
pushf
sub
cmpsl
mov
pop
rorb
testl
repnz
ljmp
and
test
push
sbb
cmpsb
mov
adc
and
or
imul
adc
mov
and
push
addr16
mov
out
lods
movsb
xchg
nop
iret
pop
imul
pushf
loope
mov
xchg
pop
lods
dec
xor
xchg
mov
fs
mov
loope
pop
imul
push
out
xchg
lods
cmc
push
lcall
mov
dec
cmpsb
pop
pushf
mov
popa
insl
xchg
push
push
sbb
mov
daa
and
ror
sub
jp
dec
enter
sbb
clc
push
sahf
loopne
mov
out
repz
js
into
mov
push
mov
xor
and
mov
xchg
jb
push
pop
int3
ds
xchg
pop
and
xlat
test
mov
dec
mov
cs
mov
sti
push
repnz
dec
in
cmpsl
notl
clc
repz
gs
add
sahf
inc
dec
test
pop
push
add
imul
outsl
dec
out
mov
push
jo
pop
arpl
int3
lods
repz
sbb
mov
mov
mov
aad
into
iret
sbb
push
mov
jns
cmp
mov
pusha
add
push
xor
xor
addl
push
dec
xor
pop
fists
cmpps
xchg
inc
push
dec
test
add
repz
push
sbb
test
adc
sub
je
xchg
adc
jmp
dec
mov
add
adc
pop
and
call
loope
sub
hlt
jns
jnp
add
pop
mov
adc
cld
sub
out
mov
cmp
xchg
xor
xor
jg
lds
sahf
lcall
push
mov
jo
xchg
sub
push
add
mov
bts
add
nop
push
clc
fwait
aad
jle
sub
mov
imul
and
add
dec
fstpl
sahf
jle
mov
inc
scas
dec
add
sub
loop
pop
out
dec
nop
cmpsb
sbb
lods
jns
sub
adc
in
cli
xor
imulb
xchg
shll
dec
sbb
sub
data16
pop
jge
cmp
les
or
hlt
mov
sbb
test
push
dec
and
bound
cltd
sahf
xor
call
scas
int
or
ret
dec
inc
testl
and
sbb
pop
mov
xor
sub
adc
icebp
loope
imul
ss
mov
addr16
lret
jmp
loope
jmp
ja
int3
rcll
jle
clc
adc
mov
adcb
xchg
push
fwait
and
nop
scas
cmp
lock
mov
call
mov
sbb
xchg
jae
out
or
jno
adc
and
inc
add
into
mov
or
push
test
cltd
movsb
xor
imulb
and
or
arpl
test
lret
mov
ja
xchg
mov
cwtl
pop
mov
adc
jne
mov
cmpsl
jne
lods
sbb
int
push
jecxz
pop
cmpsl
gs
push
dec
repz
xchg
inc
shrl
fildll
dec
inc
mov
scas
or
addl
ljmp
inc
mov
xor
pmuludq
fidivs
icebp
in
mov
xchg
stos
add
dec
cmc
pop
daa
int3
xor
sbb
inc
imul
xchg
xchg
mov
inc
dec
iret
mov
inc
dec
xor
and
out
outsb
cmp
test
aam
add
mov
inc
xchg
mov
cmp
fildll
in
mov
out
xchg
cwtl
add
nop
fdecstp
jnp
cmp
jp
pop
cmp
adc
addr16
push
gs
out
add
lods
mov
das
out
adc
sub
inc
jo
stos
pop
aad
insl
jno
fildl
add
jecxz
mov
dec
popf
pop
jb
mov
inc
jmp
roll
jmp
mov
loopne
push
vmulps
cmp
add
mov
xchg
jae
xchg
pop
nop
mov
and
stc
sub
in
cwtl
cwtl
or
lcall
icebp
cld
push
mov
fldl
int3
or
cmp
addr16
sub
repz
mov
subl
push
movsb
inc
mov
insl
fwait
ljmp
mov
call
inc
lea
push
repnz
jl
xchg
mov
mov
imul
cmp
bound
xchg
mov
divl
lds
add
call
hlt
andb
sti
mov
push
lods
out
ljmp
cltd
and
fcmovu
mov
sbb
pusha
and
shll
std
loope
insb
int3
or
inc
decl
arpl
cmp
cli
mov
loope
xchg
and
pop
xchg
ret
push
nop
popf
mov
pop
in
in
push
jg
movl
pop
push
lret
xchg
xchg
test
adc
test
jae
shll
sar
je
add
dec
shlb
push
mov
mov
pop
or
ja
lods
pop
bound
mov
lods
and
out
out
dec
pop
lret
gs
fisttpl
out
cmp
push
pop
mov
ja
sti
push
test
aam
pop
or
cmpsb
mov
and
inc
inc
cs
adc
dec
mov
push
sti
pop
hlt
add
and
jl
ret
out
push
out
xor
xchg
mov
stos
pop
sub
xchg
icebp
loopne
addr16
fucomp
and
ret
insb
jb
lods
loope
cmpsb
loope
inc
xor
or
push
inc
xor
sbbl
je
cmp
cmpsb
or
dec
sti
push
pop
adc
insl
pusha
push
adc
jo
and
iret
movsl
adc
test
and
sub
stos
push
pop
mov
dec
sub
xor
stc
push
and
sub
add
mov
push
jo
imul
enter
xor
mov
sub
lahf
ret
fbstp
enter
jecxz
shl
std
stc
xchg
test
ret
notl
cli
test
stc
mov
sbb
in
xor
inc
adcl
pop
pop
test
nop
dec
mov
or
mov
xchg
movsl
ror
cmp
push
lods
mov
cmpsb
loopew
xchg
pop
pop
sbb
in
adc
sbb
loope
movsb
pop
and
push
mov
fcomps
clc
cmp
jecxz
jb
or
dec
inc
lret
pop
arpl
cmp
enter
jecxz
xchg
lret
inc
cwtl
inc
dec
jle
fld
out
in
jp
cmp
repz
call
sti
mov
fisttpll
ret
jmp
sub
sub
mov
lds
outsl
dec
repnz
dec
mov
xchg
xchg
adc
loopne
outsl
nop
push
pop
addb
jge
popf
mov
cli
and
in
shll
sub
or
mov
sub
lods
sbb
xchg
lods
jp
inc
loope
pop
sbb
xor
insb
xchg
arpl
sub
pop
aad
cmp
or
or
lea
dec
cmc
xor
sbb
or
pop
mov
test
mov
inc
ret
sub
arpl
scas
xchg
call
jo
cmp
xchg
cmp
test
addb
fs
pop
mov
in
mov
pop
or
andl
and
mov
sbb
fwait
out
stos
add
inc
mov
lret
jae
mov
mov
sbb
and
mov
mov
fnstenv
jl
inc
dec
inc
js
mov
xchg
adc
jbe
inc
iret
and
push
lea
push
daa
mov
push
imul
dec
ret
clc
cmp
movsl
imull
push
adc
imul
call
mov
popf
sbb
pop
sbbb
push
jecxz
adc
or
and
lods
dec
call
inc
push
sbb
mov
movsl
mov
js
leave
or
mov
movsl
inc
adc
sub
mov
mov
xor
nop
es
mov
cmp
aad
mov
fnop
jns
leave
cmp
fidivs
outsb
add
lea
push
repz
in
frstor
cmp
ret
leave
cmp
xor
dec
out
add
clc
cmp
push
mov
jl
add
repnz
pop
pusha
in
out
jl
mov
gs
and
sub
sub
inc
int
jge
xchg
push
decl
or
call
cmp
cmp
mov
lds
lret
adcl
inc
cmp
cmp
push
scas
mov
mov
lret
loopne
in
aam
in
jns
cmc
cmp
sbb
sbb
adcb
andb
and
jae
js
jno
and
ret
xchg
testl
imul
or
pop
push
rorb
xchg
cld
mov
pop
jge
ret
mov
pop
pop
lods
mov
lds
mov
pop
aas
adc
and
add
dec
fdivr
popf
sbb
sti
jns
and
ss
add
sbb
xor
out
xlat
jg
movsb
hlt
imul
sub
adc
in
dec
push
fsubr
js
mov
pop
xor
lret
xchg
das
rcll
pop
inc
xchg
push
gs
push
fsubr
cwtl
dec
cmp
pop
repz
push
shrb
es
push
mov
daa
cmpsb
cmpsl
mov
push
popa
xor
inc
xor
hlt
jp
ficomps
lock
add
or
jno
pop
mov
pusha
and
jg
pushf
in
shrb
pop
and
mov
repz
jnp
daa
cs
cltd
data16
les
mov
neg
pop
cmp
mov
in
icebp
pop
lods
and
xchg
in
cmp
push
add
xchg
cld
inc
mov
push
xor
dec
js
test
sbb
inc
adc
sbb
pop
lods
in
jne
xchg
jns
cmp
in
idivb
push
pop
xor
adc
add
lret
pop
jp
enter
mov
enter
aaa
xchg
gs
fildll
or
xchg
xor
dec
ret
hlt
jp
mov
sbbl
push
push
outsl
sbb
std
or
and
mov
in
mov
adc
clc
cli
enter
pop
fbstp
cmpl
iret
shll
cmp
mov
shll
mov
mov
sbbb
mov
iret
push
cmp
out
xchg
add
lahf
mov
fdivl
cli
cltd
mov
fisttps
sahf
dec
jmp
ficompl
jnp
or
or
nop
movl
movsb
or
xor
call
xor
mov
jne
and
push
cltd
in
hlt
xchg
fstpl
sbb
push
and
mov
into
inc
jge
push
aam
daa
adc
cmp
or
inc
loopne
dec
pushf
gs
xor
or
xor
mov
cmp
mov
pop
cltd
mov
jle
loop
out
xor
push
les
lret
inc
mov
aam
sbb
xchg
cmc
mov
lret
or
cmpsl
aam
lahf
imul
cmpsl
ret
and
xlat
out
mov
stos
adcb
das
lds
push
add
je
cld
xor
sub
test
jecxz
and
inc
js
mov
and
push
fnstsw
xor
aam
ror
loopew
sahf
xor
jecxz
pushf
in
dec
inc
gs
push
mov
or
mov
icebp
into
and
inc
scas
add
adc
mov
pop
mov
cmpsb
push
or
jge
in
cvtps2pi
mov
rcl
sarl
adc
push
mov
stc
add
aad
lret
adc
aaa
fwait
shl
and
push
xchg
test
jb
jmp
mov
mull
lea
cli
int
pop
cmp
fisubrs
dec
sti
popa
cltd
cmpsl
cmovg
and
cmp
cmc
out
sub
mov
mov
imul
xchg
lret
daa
inc
mov
xor
mov
out
jmp
lds
std
sbb
inc
insb
mov
push
sub
lods
and
or
je
xchg
sbb
int
lahf
int
or
inc
xchg
bound
or
jg
jb
sti
dec
ja
data16
push
lret
mov
xchg
popa
jmp
in
mov
popa
dec
enter
inc
cmp
cmp
in
aad
test
fisttpl
push
in
outsl
xor
icebp
push
xlat
xor
fs
into
xor
aad
inc
xlat
into
and
hlt
sub
outsw
stos
pop
call
dec
mov
jmp
fnstsw
jne
push
xchg
and
ret
add
cmc
clc
or
add
out
dec
daa
lods
mov
pop
add
sbb
lcall
jl
push
push
and
testl
add
into
jo
xchg
aad
bound
je
imul
roll
add
or
cwtl
jbe
shr
loop
xchg
adc
ss
pop
xor
push
pop
mov
inc
icebp
xchg
rclb
mov
mov
lock
in
inc
gs
shlb
pop
fucom
arpl
es
push
iret
das
sbb
or
mov
and
and
and
dec
cmp
addr16
std
out
mov
mulb
ljmp
call
insl
insb
cmp
jo
dec
insl
mov
xchg
lock
sbb
scas
inc
lods
sbb
rol
sbb
xor
test
adcb
sbb
xchg
rclb
sbb
cmc
int
cwtl
inc
push
mov
add
popf
jmp
arpl
push
jp
scas
and
cmp
ss
add
dec
sbb
sub
arpl
dec
in
dec
pop
cmp
and
sub
mov
mov
inc
push
adc
out
mov
pop
xor
inc
ds
pop
sbb
sub
stos
int3
xchg
jp
lods
jbe
cltd
daa
mov
and
shrl
stos
jge
lods
mov
inc
sahf
mov
mov
xchg
ficoms
sbb
out
sbb
mov
je
fs
in
gs
or
out
push
popf
cmpsl
mov
icebp
pop
das
arpl
fwait
das
add
cmp
repnz
rorl
jmp
in
mov
push
ljmp
scas
jle
cmp
repnz
xor
jb
outsl
pusha
push
and
fsub
sbb
jae
popa
inc
pop
inc
pop
sbb
or
rcll
fadds
popf
pushf
dec
icebp
dec
dec
ss
inc
faddl
das
xor
inc
jmp
add
xor
jbe
xor
mov
or
dec
aaa
mov
test
fstpt
outsb
xorb
or
sahf
pop
mov
xchg
cwtl
inc
sub
adc
cmpb
icebp
shlb
sarb
jmp
mov
pop
sbb
mov
leave
cmp
pop
jge
adc
aaa
and
jbe
pop
std
fwait
int
cmpsb
repz
ja
mov
inc
sub
ret
dec
outsb
fisttpl
leave
push
outsb
jmp
add
and
jb
jae
aad
dec
in
sti
sub
icebp
jmp
adc
in
add
addr16
push
cmp
leave
cmp
stos
neg
add
cmp
sub
js
xchg
mov
cwtl
jmp
push
xor
push
push
pop
dec
fwait
inc
mov
pusha
cmc
sbb
sub
inc
daa
xchg
aas
pop
mov
lods
sbb
cmp
in
push
out
lds
fcmovnu
int
lea
mov
pop
or
repnz
jecxz
and
xor
inc
cli
push
ja
subb
ficoml
lcall
mull
inc
adc
pop
insl
pop
sti
sub
inc
cmpsl
cltd
xor
jne
leave
or
mov
sti
loopne
sub
fld
mov
subl
lahf
mov
sbb
fs
jae
push
not
sti
xor
cwtl
jle
mov
call
adc
add
fs
std
pop
mov
and
xor
push
jne
mov
nop
xor
lea
adc
test
das
xor
xchg
inc
sbbb
out
shl
or
lahf
push
push
xchg
mov
xchg
xlat
stos
push
jnp
fildll
jns
cmpsl
fstpt
sbb
fistl
sub
fwait
push
push
mov
cmp
mov
dec
jl
mov
mov
xchg
adc
dec
inc
je
xchg
and
popa
stos
fmuls
pop
jns
inc
dec
mov
lods
sub
stos
jg
push
jge
pop
daa
push
int
jl
pop
cmp
xchg
nop
mov
mov
lcall
test
dec
jmp
jno
sahf
jg
rclb
and
insl
les
push
xor
popf
int3
popf
jns
nop
push
sarl
ret
push
je
bound
push
ds
sbb
xor
mov
lock
sub
pop
mov
int3
push
jno
mov
or
or
pop
pop
cmpsb
fnstenv
es
je
jle
sub
cmc
nop
hlt
rcrb
jecxz
sub
lods
dec
mov
jns
stos
xor
std
mov
push
sbb
and
mov
jns
fs
inc
cmpsl
or
inc
in
stc
faddl
xchg
jecxz
and
inc
push
mov
aam
mov
out
or
sub
cmp
lret
add
mov
lea
mov
mov
and
mov
mov
iret
jmp
jge
pop
testb
pusha
mov
neg
xor
cmp
lcall
out
jle
mov
cltd
test
rorb
stos
mov
push
or
xchg
sbb
adc
xchg
scas
cmpsb
adc
pop
setbe
aam
shll
divb
mov
pop
push
idivb
mov
mov
mov
adc
mov
mov
and
jge
adc
mov
stos
inc
and
push
xchg
adc
fisubl
andl
sti
ljmp
dec
mov
cmp
in
adc
aad
loop
jne
mov
jge
inc
std
pop
rcr
leave
sbb
lods
js
sbb
enter
cmp
jmp
dec
push
push
jp
loope
jmp
mov
or
fmull
sub
out
les
daa
adc
outsb
shlb
and
popf
xlat
ret
inc
popa
mov
jle
ret
cs
xor
push
jb
sub
mov
repnz
dec
lahf
mov
mov
ss
pop
ljmp
add
xchg
mov
inc
call
popl
mov
fdivrp
scas
or
mov
fwait
pusha
gs
xor
daa
sahf
dec
je
test
xor
mov
lcall
subb
outsb
and
test
mov
outsl
push
movsl
xor
and
loop
aam
sub
sub
mov
ret
mov
add
sbbb
mov
xchg
push
pop
jae
lcall
fdivrs
sub
jmp
jl
add
sub
lret
mov
dec
out
cld
push
int3
fiaddl
mov
xchg
adc
imul
int
mov
pop
pop
mov
imul
jnp
cmp
xchg
and
call
repz
mov
adc
mov
xor
cmp
ss
lret
mov
aaa
sbb
lds
repz
push
add
jge
or
bound
pop
nop
mov
xor
std
clc
imul
xchg
cmp
test
sbb
movsl
ss
out
jge
mov
movsl
fwait
lods
jle
adc
mov
clc
inc
sbb
adc
insb
mov
imul
push
cld
fists
mov
jmp
push
mov
ficomps
mov
in
mov
int3
clc
lods
leave
je
cmp
cmp
push
jp
jle
das
add
gs
push
push
test
pop
sahf
test
mov
cmp
xchg
jno
rcll
out
gs
xlat
out
pop
jmp
les
mov
pop
inc
out
cmp
sub
into
xchg
fists
rcll
push
lcall
dec
add
mov
and
inc
jne
dec
nop
scas
xor
movsl
push
cmpsl
fstl
ss
add
les
or
pop
fidivs
es
pop
add
aaa
flds
xorl
pop
das
xchg
rcr
lret
int
push
int3
in
popa
jbe
repz
orb
sub
in
pop
pop
cli
ja
daa
xor
sahf
mov
cmpsb
mov
out
xor
push
mov
push
dec
rorl
fiadds
ret
jmp
add
jle
loopne
mov
dec
test
jae
mov
clc
rolb
push
dec
scas
xor
inc
jp
fildll
xor
aas
clc
es
sbb
cwtl
lds
fs
jo
mov
fs
lret
pushf
mov
pusha
gs
pop
nop
aam
subb
add
xchg
popf
mov
pop
xchg
mov
sub
popa
fwait
xchg
imul
jg
inc
andb
xor
aaa
cltd
jae
lcall
jno
mov
dec
dec
jns
pop
dec
xor
xchg
arpl
fmulp
cmp
push
aam
xor
loop
mov
push
scas
mov
add
cmp
pop
clc
inc
sub
aam
pop
cmc
pop
pop
sub
sbb
adc
addb
or
clc
sub
cmp
lock
sub
addb
adc
jne
insb
stc
jge
inc
arpl
lds
inc
andl
or
xor
adc
aad
test
cld
cmp
rorb
lcall
arpl
dec
push
cwtl
mov
or
pushf
icebp
ss
dec
clc
lock
imul
cmp
and
inc
stos
rorl
sub
and
add
add
subl
shl
inc
movsb
inc
int3
cwtl
mov
cmp
xor
adc
sub
call
jmp
or
mov
sub
cmp
test
std
push
mov
repz
rol
outsl
mov
sbb
jecxz
fwait
icebp
adc
outsl
call
adc
movsl
movsb
movsb
cmp
repz
or
lret
or
dec
repz
jmp
and
inc
repnz
imul
sbb
mov
push
mov
or
decb
sub
mov
stc
adc
xor
mov
lcall
adc
loop
mov
roll
xchg
mov
pop
xor
inc
xchg
push
push
loopne
ficomps
out
jp
addl
cmc
inc
outsl
imul
add
xchg
cmp
add
cmp
dec
push
cmpsl
sub
pushf
cmpsl
dec
sub
fistl
out
idivl
daa
jno
mov
in
popf
sbb
mov
int3
adc
test
pop
and
and
popa
pop
pop
add
mov
and
inc
dec
or
faddl
imull
pop
jmp
lret
push
out
gs
pop
mov
or
movsb
push
cli
lret
xchg
ja
mov
add
xchg
mov
xor
adc
sub
inc
mov
pop
hlt
jl
xchg
push
mov
or
adc
sbb
mov
adc
hlt
inc
scas
push
push
push
ds
xchg
mov
shrb
pop
cmpsb
insl
adc
push
push
and
or
pop
mov
push
or
xchg
adc
lods
xchg
xchg
js
adc
in
lds
mov
sub
jnp
sbb
call
mov
jo
adc
xor
jb
inc
and
jb
xchg
mov
cmpsl
data16
mov
rorb
xlat
daa
loop
push
cmp
add
push
fidivrl
pop
divb
out
scas
ja
loopw
add
jnp
jge
les
es
mov
mov
cmpb
jnp
out
push
je
mov
out
in
call
dec
push
cmpsl
movsl
mov
andb
cmp
lcall
fs
or
lods
outsl
jp
pop
inc
adc
setl
roll
ljmp
lods
sbb
in
mov
test
push
mov
les
cmc
push
enter
in
icebp
call
jns
inc
test
in
imul
in
iret
sahf
lods
and
mov
pop
mov
push
mov
divl
lods
push
inc
fldcw
cli
shlb
and
mov
ja
orb
add
mov
test
push
mov
push
or
pusha
push
cwtl
push
call
fdivr
xor
testl
mov
bound
rcr
dec
popf
in
push
dec
arpl
xor
xor
jl
pop
sbb
jns
data16
xchg
adc
cmpsb
cmpsl
add
sbb
xlat
sbb
out
ljmp
push
repz
mov
sub
int3
and
out
lock
rcrb
sarl
popa
sbb
movsb
xchg
mov
fwait
adc
inc
test
lcall
lret
sub
pop
sub
and
mov
subl
add
ret
mov
mov
fstpt
pop
jno
test
add
outsl
lcall
xchg
pop
cmp
sbb
and
pop
stc
jae
lods
add
filds
adc
mov
test
jl
cmp
and
fcmovne
mov
outsl
ret
lock
mov
mov
outsb
je
jmp
adc
mov
jp
jge
jmp
bound
loopne
xchg
mov
and
jl
mov
in
ds
xlat
clc
sub
lcall
dec
xchg
in
rcrb
mov
repnz
sub
mov
sbb
xor
and
mov
push
and
xchg
test
jmp
xorl
adc
pop
push
jne
push
ret
and
sbb
mov
in
popf
push
mov
pop
dec
adc
cmp
push
test
mov
jge
popa
cltd
scas
sbb
push
fcomp
sub
inc
dec
and
test
push
mov
cmp
mov
mov
nop
dec
lods
je
inc
cwtl
add
mov
push
lcall
jbe
gs
jle
rcl
dec
insb
cwtl
dec
mov
nop
or
or
lahf
cwtl
xor
call
ds
lds
cltd
cs
fcmovne
sbbb
fimuls
daa
popf
jae
lds
out
cmp
cmpsl
loope
int3
sbb
cltd
lahf
or
addr16
mov
jg
pop
pop
cmpsl
add
ror
enter
iret
xor
xchg
lock
dec
add
ja
add
dec
push
mov
mov
xor
bound
mov
popf
shll
je
mov
cmp
xlat
lea
pushf
cwtl
fisttps
dec
clc
ja
in
ja
in
jo
pop
sbb
out
into
sbb
xchg
adc
push
sub
fmulp
shl
sub
sbb
pusha
inc
andl
lret
cli
pop
scas
dec
mov
mov
pop
adc
adc
ja
push
pop
imul
testl
dec
or
movsl
sub
imul
mov
mov
xchg
adc
and
addr16
daa
push
fwait
sbb
pop
daa
insb
mov
mov
andps
adc
mov
adc
sub
insb
xchg
mov
xor
push
inc
cmpsb
sbb
push
sqrtps
fs
xlat
push
sbbl
lds
into
ret
popf
sbb
mov
or
xchg
aas
lock
and
cmp
movsl
mov
dec
loope
pop
push
popa
push
icebp
lock
pop
ljmp
push
fnstsw
sub
jbe
mov
pushf
rorl
lret
imul
scas
imul
sbb
push
lock
fs
daa
xchg
insl
ret
sub
xchg
scas
das
dec
loop
mov
dec
mov
jo
insl
aaa
pop
lods
ja
adc
js
fsub
mov
stos
and
in
sub
cmp
rolb
push
xchg
add
jbe
add
rcr
out
cmc
scas
sub
mov
loope
mov
mov
aas
into
ds
pop
in
jecxz
jecxz
dec
jo
testl
mov
mov
das
add
imul
add
inc
mov
aas
in
pop
lcall
cwtl
popa
insl
xchg
jo
push
push
loop
into
rorb
in
push
cmp
outsb
xchg
sub
cmpl
pop
orl
xchg
cmp
or
and
gs
imul
test
lock
mov
xchg
mov
lds
cmpsb
popa
mov
pop
mov
or
jge
jg
js
popa
mov
xchg
and
jb
sbb
push
jl
push
mov
shrl
mov
xor
inc
dec
add
jno
push
xor
ret
ffree
in
push
jno
outsl
cmpsb
stos
add
pop
loope
sahf
jg
loope
sub
sbb
fimull
adc
jnp
inc
and
sub
push
dec
leave
bound
lods
in
add
stc
sub
push
cmpsl
fwait
mov
ret
movsl
shlb
mov
sarl
jl
jp
xchg
cwtl
adc
add
cmc
xor
cmpsb
fmuls
fnsave
xor
add
lret
pop
or
or
pop
lret
ljmp
mov
shrb
mov
dec
push
xchg
aad
mov
int3
mov
sub
mov
xchg
cltd
js
jle
imul
sub
and
lock
pop
and
ret
add
sub
and
ss
hlt
xchg
pop
sbb
pusha
push
mov
rolb
repnz
adc
shlb
xchg
mov
or
sti
mov
enter
jae
pop
mov
shrb
lret
movsl
inc
gs
xor
fldenv
shll
scas
pop
sbb
sub
nop
fwait
mov
jle
push
shrb
mov
pop
lods
lcall
test
lea
xchg
idivl
push
je
or
sbb
mov
pop
add
mov
rol
mov
jb
inc
insb
ja
les
mov
and
cmp
mov
pop
pop
cs
lea
pop
add
dec
rcrl
pop
or
movsb
and
sbb
enterw
or
cmp
sub
call
fwait
mov
aam
sub
push
inc
fldlg2
lret
rorb
repnz
inc
add
xchg
rolb
dec
aas
pop
cmpsl
dec
or
out
lret
push
nop
int
adc
sbb
shlb
pushl
inc
into
pop
adc
scas
divl
loope
bound
icebp
nop
push
shlb
and
test
mov
loop
scas
in
inc
dec
cmp
mov
test
inc
ror
pushl
aas
and
mov
sbb
adcl
pop
xor
scas
jle
pop
icebp
loop
repz
sbb
cld
mov
frstor
lcall
add
rcll
or
js
sub
in
inc
xor
loope
lret
shrb
in
repnz
lods
push
arpl
jbe
xor
mov
sub
cmp
and
lock
jmp
jge
fidivrl
jns
repnz
and
fwait
inc
ljmp
mov
pop
add
mov
and
std
in
push
xor
mov
scas
xor
lret
push
xchg
sub
mov
mov
jecxz
lahf
xchg
mulb
fwait
mov
mov
mov
fldt
scas
sarl
jle
lock
push
sbb
cld
dec
iret
jp
mov
das
mov
mov
pop
pop
jbe
mov
leave
cltd
jge
dec
out
xchg
jl
xchg
rclb
jle
and
push
mov
mov
xchg
or
cli
sahf
mov
xlat
mov
adc
addl
xadd
jmp
es
cmpb
xor
fwait
int
lods
jecxz
add
sub
xchg
leave
jb
lret
fistl
ds
pushf
inc
sub
ss
push
or
int3
push
add
testl
xor
loopne
decl
xor
inc
out
psllq
push
adc
pop
cmp
sbb
cmp
and
rol
sub
sbb
pop
pop
pop
xchg
inc
les
xor
inc
pop
pop
inc
out
ret
ds
ret
sub
or
aad
cmp
xor
icebp
xor
jmp
pop
pop
mov
or
mov
xor
aad
push
daa
xchg
jno
test
add
sbb
mov
mov
dec
hlt
dec
popf
adc
popf
xchg
and
push
dec
mov
out
push
jp
pushf
ja
cmpsl
sbb
add
arpl
mov
push
xor
insl
fisubl
insb
push
idivb
pop
test
jp
mov
repnz
or
mov
lret
fidivl
cmp
sub
pop
movsl
push
cli
mov
popa
mov
inc
ficoms
outsb
lods
push
stc
in
out
scas
aam
mov
push
out
xchg
push
mov
insl
push
add
loopne
cmpsb
jnp
cmp
and
in
pop
hlt
mov
jns
cmp
cmpsb
xchg
and
gs
or
packsswb
loop,pt
stos
repz
sbb
into
je
ds
and
test
jle
popa
sub
daa
mov
outsb
and
jecxz
stos
cmp
ficoms
inc
fistpll
jecxz
mov
xor
hlt
jno
rol
xor
enter
in
loopne
mov
mov
pop
out
jno
mov
cmp
ds
dec
shll
xchg
xchg
pop
loop
cmp
and
outsb
lds
loope
sbb
test
stos
fcmove
pop
cmp
jbe
in
push
mov
adc
and
adc
pop
xchg
mov
and
inc
aas
test
push
cltd
int
cmpb
cmp
into
pop
inc
xor
cmpsb
pop
push
bound
lret
aas
out
mov
mov
cmp
adc
mov
mov
fmul
shl
add
fisubrs
jl
mov
scas
mov
push
push
pop
into
hlt
jae
test
inc
cmpsb
sbb
mov
repz
sbb
dec
cwtl
dec
pop
cmp
int3
mov
cmp
fldcw
out
test
mov
pop
inc
out
push
adc
notl
ljmp
cmp
mov
mov
mov
mov
push
sarb
addr16
xchg
leave
sahf
lcall
push
scas
xor
std
fld
xchg
mov
call
sub
inc
xor
jno
mov
add
cmc
push
xchg
cmc
sub
imul
xchg
out
mov
cmp
repz
jp
sti
jo
dec
push
xlat
mov
fidivrs
leave
xor
sbb
xor
or
mov
ljmp
mov
jno
mov
pop
rcll
jns
jb
push
daa
je
xchg
inc
jp
or
push
adc
xchg
adc
les
add
xlat
repz
fldl
or
imul
stos
fimull
cwtl
jmp
xchg
test
aas
jns
cmpsb
pop
popa
movsl
cmp
adc
iret
fidivrl
das
nop
cwtl
nop
cs
cmp
lahf
fdivs
cli
popl
xchg
jle
sti
aam
stos
mov
int3
cmp
xchg
shll
or
xor
inc
jmp
inc
mov
fsubrs
cld
enter
fsubr
jle
movsl
mov
mov
sbb
movsl
adc
jl
jmp
lods
das
mov
push
xchg
clc
aaa
add
rorl
sbb
xchg
dec
aas
add
jp
cmp
inc
inc
pop
xchg
dec
mov
sbb
jo
and
pop
cltd
or
adc
mov
ss
js
sbb
or
jmp
xchg
ret
mov
xchg
aas
loopne
jge
mov
inc
bound
mov
cmp
repz
ret
mov
push
sbb
iret
add
pop
aaa
jbe
pop
movsl
test
cli
mov
or
cltd
imul
stos
out
and
scas
aam
adc
dec
cltd
or
sbb
rcrb
out
divb
out
adc
sti
lret
insl
jle
add
mov
adc
pusha
fidivl
cmp
mov
je
or
mov
xor
mov
xlat
ljmp
popf
and
pop
iret
or
cltd
mov
mov
pop
lret
mov
jp
sbbb
rcrl
nop
mull
gs
pop
mov
add
dec
sbb
notb
mov
in
jns
leave
and
mov
mov
mov
push
in
ss
lock
pop
mov
inc
sub
jle
mov
mov
and
xor
lret
ja
je
sub
ja
push
fists
inc
mov
sub
mov
adc
xchg
das
cmc
enter
aad
push
dec
sbb
push
in
mov
sbb
adc
filds
dec
dec
sub
pop
ret
out
call
cmp
out
leave
jo
imul
inc
cmp
adc
lret
ljmp
mov
xchg
dec
in
ljmp
std
fiaddl
das
je
xor
std
or
lods
jl
in
fdivrs
and
cwtl
mov
sti
mov
fstps
pop
fbld
adc
fidivrs
cmp
mov
dec
add
jns
pop
xchg
sbb
pop
jbe
jmp
stos
fsubrs
pop
sbb
jmp
xchg
pushf
js
dec
cld
sub
fildl
movsl
push
lea
outsb
jbe
xchg
ret
shrd
imul
ljmp
mov
jmp
or
inc
negb
icebp
sub
mov
into
pop
ljmp
insl
push
dec
mov
and
push
mov
cmpsb
insb
and
sbb
hlt
shll
dec
inc
jg
lods
pop
or
sub
inc
mov
jns
sbb
push
xchg
sbbl
in
push
aas
mov
imul
test
xor
ficompl
das
sub
xor
divb
jno
popa
sub
and
in
dec
sub
lret
sub
mov
sub
aaa
aaa
mov
mov
push
lds
jle
in
push
or
pop
sbb
dec
dec
push
inc
insb
mov
roll
mov
add
xor
iret
orb
sub
dec
mov
in
jae
repnz
cmp
lods
mov
cltd
inc
icebp
test
push
or
popf
cwtl
dec
iret
bound
jne
cmp
in
mov
shr
fldl
xlat
in
test
sub
mov
mov
fs
scas
lcall
es
lahf
rcrb
subb
xchg
std
dec
adc
fnsave
jbe
fdivr
inc
rol
inc
je
dec
dec
jg
int3
jbe
pop
mov
shll
test
adc
mov
pop
jp
fldcw
loop
hlt
mov
mov
cltd
push
mov
aas
rcr
pop
push
push
mov
repnz
pop
out
sbbl
rorl
cmp
cmp
in
sbb
loop
sahf
push
mov
xchg
push
cmp
loope
sbb
sar
std
sub
bound
mov
dec
xorb
dec
pop
or
fsubrl
repz
clc
xchg
add
lds
fiaddl
push
sub
or
lods
pushf
mov
jbe
and
mov
rolb
mov
jp
lods
nop
pusha
mov
pop
ljmp
aaa
jbe
inc
sbb
dec
jnp
nop
pop
pop
dec
cltd
sub
repz
push
fprem1
test
sahf
lcall
sbb
sar
int
push
out
adc
mov
jg
movsb
std
mov
into
xchg
xchg
mov
mov
daa
flds
inc
imul
pop
mov
testl
mov
movsl
mov
xlat
inc
lcall
neg
lock
in
cmp
pop
jb
pushf
lock
xchg
and
cmp
ljmp
and
enter
in
push
repnz
mov
cmp
fcmove
jns
push
mov
cmp
or
popf
movsl
mov
jne
dec
or
shlb
shll
addr16
xchg
mov
mov
into
dec
fwait
or
xchg
mov
push
sub
push
outsl
sbb
into
push
rorl
jecxz
mov
test
jnp
jmp
and
xchg
popf
bound
jo
jno
scas
and
xchg
pop
shll
hlt
add
jns
nop
mov
pop
rclb
mov
icebp
or
arpl
add
or
icebp
push
push
add
push
outsl
in
nop
inc
dec
jl
push
cld
mov
cmp
js
mov
iret
pop
rcl
sar
xor
mov
jg
sub
clc
insb
out
jmp
repnz
xor
insb
xlat
mov
or
add
lahf
popa
xor
into
cli
vprotd
xor
mov
ret
sub
out
cs
pop
negb
sub
and
out
test
inc
inc
xlat
jnp
or
gs
xchg
dec
loope
sbb
jae
jnp
pop
sub
adc
or
ja
sti
cmp
enter
shrl
fs
int3
jge
stos
test
mov
sarl
dec
data16
xor
mov
mov
ret
ret
ds
sub
js
mov
inc
mul
pop
push
cmp
mov
mov
clc
rcll
fsqrt
fldenv
lea
movsl
xchg
aas
aad
jae
jns
repz
leave
adc
outsl
loop
rsqrtps
shl
addr16
iret
inc
cmpb
jns
insb
pop
pop
jg
loope
xor
fnsave
xchg
loopne
sbb
mov
xor
sub
sarl
outsl
xor
fxch
xlat
xor
in
lea
rol
cli
pop
push
sahf
push
pushf
xchg
jbe
icebp
insl
and
out
cltd
and
outsb
shlb
fs
inc
fbld
shrl
push
lds
jmp
aas
pop
and
xchg
scas
outsb
pop
xchg
lock
jae
rorb
cltd
data16
sbb
leave
xor
cli
mov
add
stos
xchg
pop
fnsave
cmp
jle
sub
cmp
mov
or
in
lcall
lods
stos
div
gs
and
cs
adcb
mov
dec
stos
pop
lahf
sbb
inc
je
sbb
in
add
cld
dec
in
shrl
pop
js
jne
into
jne
mov
rolb
fwait
aad
add
cmp
sbb
int3
rolb
jl
push
jge
cmp
jo
test
push
ja
xlat
cmc
pop
push
xchg
sub
arpl
and
mov
add
lret
imul
push
ficoml
stos
hlt
push
inc
dec
dec
mov
adc
scas
or
pop
out
subb
shl
jns
in
jbe
xchg
and
mov
adc
push
ficompl
add
cmpsb
or
insl
fs
mov
imul
call
jl
mov
adc
xchg
xchg
xlat
cld
sbb
inc
jecxz
mov
stos
push
cmpl
jmp
pushf
jbe
adc
sbb
mov
sahf
mov
jge
xchg
mov
out
outsl
add
lcall
add
fistpl
icebp
inc
mov
jae
mov
mov
sub
jp
adc
sarl
fs
sub
mov
call
xchg
stc
faddl
add
mov
jg
xor
daa
pop
jnp
mov
mov
fdivl
add
repnz
scas
rcll
push
pop
lods
add
loop
lock
sub
add
push
aad
ss
test
enter
repnz
jmp
mov
shrb
mov
cli
jb
fwait
add
pop
push
mov
gs
add
xchg
aam
stos
add
mov
mov
xchg
xchg
inc
xorl
cs
push
stos
aas
jg
scas
mov
call
push
dec
mov
stc
mov
mov
fsubrs
dec
int
jg
testl
xor
adc
fbstp
fucomip
jle
xlat
push
sbb
cmp
test
jle
mov
jge
or
int3
push
pop
push
sbb
sbb
in
xchg
or
mov
scas
jno
cli
mov
add
fidivrl
shlb
xlat
pop
insl
rolb
jno
imull
push
ficompl
xlat
andb
cmp
jl
mov
dec
lods
or
sub
data16
ljmp
js
add
fimull
dec
xor
sahf
mov
xchg
bnd
iret
mov
xlat
gs
xchg
sbb
ja
out
movsb
jle
mov
das
cmp
movsl
pushl
mov
in
scas
mov
dec
jp
adc
fnstsw
xchg
cltd
xlat
dec
push
sbb
xor
cmpsb
xlat
arpl
lret
and
xor
sbb
mov
hlt
push
and
sti
lahf
lcall
in
inc
mov
idivb
sbb
mov
arpl
xor
lahf
shrl
mov
and
fs
and
cs
jne
fists
mov
lods
iret
inc
rcll
jae
xor
or
dec
jp
mov
mov
dec
pop
movsb
aam
xchg
loop
lcallw
stos
pop
sti
adc
sub
cld
outsl
dec
mov
and
stos
cmp
mov
xor
mov
pop
mov
xchg
mov
xchg
test
enter
test
int3
test
jb
jns
xor
add
dec
cmpsl
std
push
cld
mov
lock
je
dec
je
nop
inc
fs
mov
loope
xchg
mov
mov
lret
ds
jns
aas
popa
or
sbb
cmp
arpl
pop
into
push
fwait
jae
cmp
test
add
lods
ja
cmp
lahf
mov
movsb
push
les
jo
dec
outsl
xchg
push
jnp
insb
jle
stos
xchg
sub
fld
xor
mov
push
xor
cmp
imul
sbb
dec
sub
and
jecxz
popa
inc
inc
imul
and
pshufw
pop
ret
xchg
iret
mov
enter
pop
leave
sbbb
adc
fidivrl
push
cmpsl
adc
dec
dec
mov
jge
loop
icebp
loop
imul
xor
xor
loop
shlb
in
sub
je
fdivr
or
add
cmp
lods
in
dec
inc
nop
or
xor
rcrb
sbb
sbb
dec
and
mov
je
loopne
xor
sub
sub
lahf
lahf
mov
or
jle
or
lfs
orl
repnz
xchg
int3
out
aam
out
mov
cwtl
mov
push
pop
and
ret
fcompl
jecxz
shl
mov
sbb
sub
rcll
dec
dec
sbb
insl
in
jp
sub
movsl
mov
xchg
add
jmp
test
jne
or
test
push
cmp
sti
jecxz
dec
ret
push
arpl
sub
sbb
mov
and
nop
or
sbb
stos
dec
sub
lods
push
ds
dec
push
adc
int3
iret
cli
sbb
mov
xchg
out
xor
mov
push
data16
fmul
jne
sub
fildll
enter
cmpsl
int
pop
add
xor
lock
pushf
mov
lret
sub
push
jo
xor
xor
or
jo
jae
dec
xlat
jns
mov
or
sub
adc
jns
xchg
adc
mov
movsl
sti
sub
out
xchg
push
mov
out
cmp
mov
sbb
mov
enter
lods
cltd
lea
fdivs
outsb
insb
pusha
push
mov
movsl
sbb
popa
and
push
test
sbb
mov
xchg
pop
or
aam
fimuls
add
mul
inc
bound
outsl
jo
jnp
xchg
pop
sub
fsubrl
inc
lahf
and
inc
gs
xchg
repz
insl
lcall
adcb
jo
push
adc
mov
mov
cmp
sub
mov
push
and
mov
adcb
fnstsw
push
insb
jmp
in
sub
dec
or
jp
ds
sub
jmp
adc
mov
jg
lock
mov
js
data16
jecxz
push
sbb
fistl
xor
out
aad
sbb
test
push
outsl
sbb
xor
iret
imul
nop
ljmp
mov
xchg
test
pop
pop
push
ret
fiadds
lcall
lret
popa
push
in
xchg
push
jnp
pop
lidtl
scas
dec
jnp
pusha
push
aad
pop
sarl
mov
pop
mov
ds
inc
sbb
fnsave
sbb
jbe
inc
add
mov
adc
imul
lea
push
and
mov
imul
cs
jecxz
rclb
lret
call
inc
push
fmull
out
sub
jmp
xlat
or
out
iret
shlb
cmp
adc
imul
push
cs
ljmp
add
push
cmpsl
addr16
mov
mov
out
shlb
cltd
sarl
sbb
testl
mov
push
scas
lock
lock
xchg
jne
addr16
and
sahf
loopne
jo
xchg
leave
cmc
mov
inc
jle
mov
push
cs
repz
jg
dec
dec
rolb
or
pushf
subl
repnz
test
add
add
pop
sub
arpl
push
fucomp
dec
inc
sub
stos
jno
pushf
push
rolb
idivb
fdivl
inc
add
xchg
leave
arpl
psubusw
push
mov
pop
loop
xor
cltd
fdivl
mov
out
sub
cwtl
xchg
pop
in
jns
jbe
mov
aad
pop
xlat
xor
mov
cltd
outsl
push
shll
aam
xlat
out
mov
mov
rolb
pop
xchg
add
sub
movsl
mov
jnp
dec
imul
inc
test
lock
sub
insb
and
jno
das
push
movsb
outsb
inc
cmp
pop
jmp
shlb
outsl
mov
dec
aas
fcom
dec
push
pop
in
cli
sbb
das
loopne
xchg
push
mov
mov
out
loope
push
out
adc
je
mov
pusha
jns
and
icebp
in
stos
imul
jno
mov
push
loope
sub
in
cli
mov
xor
mov
dec
mov
jnp
fldenv
cltd
loop
sub
es
out
test
andl
insl
and
push
pop
mov
in
sub
cmp
dec
inc
inc
mov
fcmovbe
xlat
xchg
std
jne
repz
sub
push
mov
push
and
cmpsl
jecxz
leave
jnp
mov
adc
jmp
add
aad
inc
mov
cltd
pop
cmp
sbb
adc
mov
cld
dec
add
jge
jg
ror
xchg
insl
xor
cmpsl
sub
sbb
sbb
jbe
mov
mov
insl
cmp
inc
mov
fmull
jae
shll
cld
popa
pop
mov
sub
fs
cs
pop
add
mov
push
test
fnsave
push
mov
arpl
add
fmuls
pop
sbb
jp
push
sbb
lcall
mov
out
sub
cld
insl
repz
sahf
adc
and
adc
jae
lods
leave
loop
rcrl
scas
fistpl
mov
je
pop
insb
mov
std
sub
loopne
arpl
mov
sub
add
dec
ret
cmp
mov
dec
mov
ja
ja
sub
fwait
or
ljmp
movsb
xchg
icebp
sbb
or
stos
lcall
push
cmp
stos
repnz
movsl
push
add
sbb
sub
popa
dec
mov
hlt
imull
jg
ss
or
xor
loope
cld
cmp
jge
or
mov
cmpsb
popa
ss
adc
lock
xor
out
nop
sbb
dec
rep
inc
cmp
cld
xor
leave
jbe
or
xchg
loope
pop
xor
lods
xchg
xor
push
and
sbb
sar
sub
loopne
push
mov
push
mov
movsb
jecxz
inc
test
testl
add
aaa
js
shrb
daa
mov
int
jns
sub
push
dec
lret
int
bswap
repz
sub
xchg
in
mov
mov
les
sbb
call
xchg
rcl
add
push
dec
or
ds
jbe
cld
and
sub
and
int3
pop
push
bnd
cmp
xchg
icebp
mov
xchg
add
arpl
mov
rcl
jg
ja
cmpsb
inc
ljmp
adc
je
mov
or
mov
jecxz
aaa
lds
jno
pop
mov
xor
and
and
imul
div
mov
xchg
push
mov
inc
jg
sahf
xor
add
mov
xchg
cmp
lds
and
mov
xchg
fsubrl
mov
dec
pop
and
ret
jp
sub
jne
or
aam
stos
mov
and
mov
stos
aas
xchg
mov
jle
mov
pusha
sbb
das
cmp
std
lods
int3
inc
lret
mov
das
mov
and
cmp
xor
outsb
pop
mov
out
rol
inc
sbb
jp
or
add
icebp
popf
in
pushl
adc
ljmp
mov
movsb
mov
daa
aam
sub
xor
push
aad
sbb
cmp
xorb
imul
popa
aas
fbstp
lcall
cltd
push
faddl
cmp
xor
sahf
in
jae
pop
inc
xchg
test
aas
clc
mov
mov
movsb
dec
or
aam
jne
pop
xor
dec
das
scas
scas
dec
fwait
popa
adc
push
scas
mov
ljmp
aam
test
inc
pop
xor
in
xchg
push
and
lods
leave
xor
xchg
push
outsl
imul
sbb
scas
dec
cmp
adc
mov
and
out
xor
faddl
ja
push
stos
sub
test
nop
mov
into
sub
faddl
push
ss
stc
cli
stos
jecxz
orw
and
fiaddl
inc
test
lcall
adc
fldt
scas
xlat
adc
fisubl
pcmpgtw
inc
neg
cmp
repnz
loopne
mov
cmp
sbb
pop
test
out
cld
xor
and
mov
cmp
dec
cmp
dec
push
mov
jge
pushf
push
xchg
xchg
mov
fsub
std
xchg
fbld
or
insb
in
stc
push
fcoms
and
in
sbb
hlt
ffree
mov
and
push
push
push
enter
xchg
or
jae
in
ss
sar
sub
mov
js
jae
aam
mov
mov
lret
or
ds
mov
xchg
sub
addb
aam
int3
jmp
ds
cmpb
push
rol
push
frstor
rcr
pop
les
pushf
lock
ljmp
xor
fwait
loop
ret
and
mov
xor
adc
push
sbb
and
adc
lret
mov
decb
out
adc
aaa
xchg
jp
lods
imul
sub
scas
cmp
test
xor
and
cmpl
pop
dec
lods
ja
sbb
sbb
int
adc
cltd
mov
ret
outsl
and
or
cmpsb
xchg
into
or
leave
outsl
dec
scas
movsl
rolb
add
ret
mov
xor
cltd
scas
pusha
jg
int3
and
in
sbb
iret
or
push
les
cmc
or
mov
mov
pop
daa
gs
mov
ss
shrb
or
aam
dec
push
loope
jecxz
hlt
mov
dec
push
xchg
stos
push
ret
xchg
loopne
cli
cmp
in
lcall
and
ret
mov
lds
xchg
lea
mov
in
inc
and
fdiv
xor
or
aaa
inc
lcall
xchg
jno
lods
fistpl
into
ss
nop
dec
and
repnz
jmp
gs
mulb
fldenv
popf
xor
es
pop
cmpsl
adc
cmp
add
inc
sahf
or
int3
or
mov
mov
dec
cmp
stos
cltd
xchg
lret
outsb
cmp
enter
sub
dec
mov
addr16
jge
xor
popa
data16
and
lahf
xchg
ret
adc
ljmp
dec
mov
xchg
lret
add
add
pop
jbe
testb
subb
sub
ret
sti
pop
xchg
adc
add
fsubrp
mov
cmp
push
gs
aas
push
or
mov
mov
push
mov
xchg
lret
jnp
push
lret
insl
shll
mov
xor
fbstp
fdivl
inc
push
push
push
pushf
in
lock
mov
mov
jge
enter
adc
sbb
sub
repz
or
cmp
inc
lea
insl
lcall
pop
out
mov
pop
mov
or
add
mov
vpaddw
fwait
xor
rorb
xor
cmp
mov
cmp
adc
mov
or
inc
mov
imul
out
pop
mov
lahf
movsl
mov
cli
and
pop
mov
adc
mov
imul
dec
sub
add
lods
inc
cmpb
mov
repz
jge
repz
sahf
fnstenv
cmp
xor
jl
movd
xchg
fsubr
shlb
xor
das
or
xchg
outsl
js
cs
adc
mov
dec
xchg
je
sub
mov
inc
in
pop
mull
push
nop
arpl
dec
std
std
or
jo
aam
movb
stos
or
inc
cld
dec
cli
rclb
adc
cmp
mov
add
push
int3
imul
mov
fistl
rcrl
gs
mov
test
hlt
lret
repnz
outsb
inc
cmp
cld
sbb
mov
xchg
in
xchg
pop
shlb
mov
fucomp
adc
loope
bound
int3
push
cmp
cmp
shlb
fistpl
rorl
adc
mov
mov
mov
aad
mov
lea
jno
les
lcall
cli
jmp
cld
pop
stc
mov
or
mov
dec
movsl
loop
push
pop
in
push
jnp
out
loop
pop
mov
hlt
xor
ret
stos
adc
pusha
imul
xchg
mov
dec
xor
mov
imul
mov
in
dec
dec
xchg
mov
ss
pop
push
jle
scas
push
mov
and
jo
pop
inc
sbb
lret
repz
push
pop
lods
ror
push
lock
jg
xchg
pop
push
movsb
or
xchg
shlb
sbb
in
xchg
cmp
and
sub
vminps
loopne
jae
cld
in
jno
push
mov
out
jno
cmp
aaa
jecxz
pop
sub
inc
das
jg
and
push
rol
test
mov
lcall
xchg
ror
lods
repz
xchg
call
sub
repz
cltd
lcall
inc
push
cmp
jae
sbb
fstl
lret
mov
aad
pop
mov
adc
xchg
and
insl
std
cmc
popf
ret
jecxz
outsb
rorb
or
pop
or
mov
sub
lret
jbe
enter
xor
pop
sarl
shlb
mov
pop
cld
pop
jg
in
dec
and
sbbl
lcall
inc
pop
jnp
xchg
ret
enter
pop
jne
dec
fisttpl
xor
sub
add
imul
xor
xor
ds
adcb
push
mov
ret
mov
lds
push
jecxz
xor
xchg
cli
scas
or
push
aam
inc
into
jp
dec
icebp
xchg
mov
pop
pushf
inc
sbb
rclb
andl
scas
xchg
sarl
frstor
jnp
xor
fsts
sub
ret
mov
mov
jb
lahf
adc
or
mov
mov
int3
sub
test
mov
xor
inc
stc
imul
xor
cmpsl
imull
add
sarb
lret
xchg
sbb
push
stc
popf
testl
cmp
mov
jne
cltd
adcb
mov
push
pop
or
pusha
mov
pop
test
mov
dec
popa
dec
sbbb
jo
cmp
lods
repz
andl
xor
and
out
pop
movsl
add
cmp
out
sub
sub
dec
sbb
adc
pushf
fcomps
xchg
sbb
push
push
pushf
push
pop
xchg
jle
and
mov
scas
adc
dec
pop
hlt
or
loop
jnp
cmp
int
enter
hlt
sbbl
xchg
push
es
sbb
lea
mov
add
inc
cmpb
cmp
xchg
cmp
mov
insl
push
push
add
pushf
les
scas
jp
dec
push
dec
movsl
lds
cmpsl
aam
popa
jl
es
repz
inc
cmp
mov
fs
jne
and
sub
jo
pop
mov
ljmp
jle
add
sbb
sbb
faddl
dec
int3
pusha
push
inc
fbstp
std
add
sub
rcr
ljmp
hlt
jnp
imul
mov
sub
popl
pop
xchg
lds
add
xlat
sbb
mov
xor
cs
je
jl
sub
mov
cmpsb
cld
out
xchg
pushf
pop
cwtl
inc
cmc
xor
push
jge
push
xchg
or
aam
fdivs
push
scas
mov
jg
xor
xchg
inc
pusha
cmp
mov
call
stc
pop
push
int3
das
cwtl
in
xchg
in
ja
add
gs
push
stos
sti
mov
aad
fildll
ror
leave
ret
mov
push
pushf
dec
call
aad
xchg
mov
pop
mov
mov
xchg
fsubrl
aam
scas
insb
hlt
mov
dec
mov
xchg
mov
fildll
jne
mov
notb
jge
mov
xchg
lcall
or
mov
jl
rdtsc
aam
pop
mov
pop
scas
inc
call
push
jnp
jle
pop
sub
lea
mov
pop
lods
dec
std
shl
sbb
add
and
mov
pop
mov
fcmovb
jne
mov
out
ret
or
pop
dec
or
sub
sub
or
and
adc
dec
lea
mov
pop
cmc
ja
nop
lahf
mov
dec
jb
mov
ret
fisubrs
dec
push
sbb
cmp
and
cld
push
xor
cld
push
and
adc
jb
sbb
adc
imul
fs
cmp
pop
test
push
sub
mov
scas
sub
insl
int
mov
mov
rol
sub
ljmp
dec
or
or
xor
test
sbb
pusha
cmp
cmp
sub
adc
cld
or
ss
repnz
mov
test
and
mov
insb
jecxz
jge
sbb
lahf
cmc
pop
pop
mov
insb
jno
les
xor
add
pop
lcall
mov
mull
test
fst
or
mov
inc
push
sti
out
mov
sbb
xorl
add
aas
push
inc
test
mov
add
fsubl
sbb
add
mov
cmc
in
xlat
mov
inc
test
mov
mov
addr16
imul
int
jp
xchg
es
cmp
sbb
test
insb
popa
nop
out
dec
test
cmp
mov
xlat
pop
aam
in
sbb
xor
push
pop
jecxz
xchg
adcb
shrb
sub
or
aas
pop
push
enter
cmp
out
lcall
jl
push
fistpll
mov
inc
jne
scas
xor
fdivrs
cmp
aaa
inc
ret
or
jnp
cld
push
jmp
mov
jl
xchg
inc
sahf
sahf
jnp
enter
jbe
andl
xchg
loopne
push
cmp
xor
repz
cmp
pop
js
test
inc
fnstcw
push
or
xlat
lds
popa
xchg
or
inc
cli
sub
push
dec
add
mov
mov
push
push
addr16
mov
and
sbb
push
cli
fcoml
fisubrs
mov
punpcklbw
mov
aad
adc
add
push
mov
xchg
imulb
sbb
subb
lret
ljmp
mov
movsl
mov
sub
sarb
mov
fcoml
cmp
out
and
lock
xchg
pop
cmp
push
mov
dec
inc
dec
pop
push
insl
jge
mov
pop
cmp
mov
inc
xor
inc
cmp
sub
xlat
jecxz
sbb
adc
arpl
xchg
adc
int
xchg
mov
xor
sub
or
lcall
add
sti
fimuls
scas
mov
je
or
pop
push
adc
and
sub
ret
mov
jg
ljmp
cmp
push
sbb
call
adc
movsw
push
push
orl
add
sub
sub
push
loop
jecxz
es
sbb
nop
cmpsl
ds
fnstcw
push
lock
ret
mov
inc
adc
jle
loop
orb
insb
imul
ds
popf
ret
cs
inc
push
cbtw
jg
pop
pop
addr16
inc
adc
icebp
mov
jmp
dec
test
or
data16
inc
nop
clc
pop
adc
xorl
xorb
sbb
call
shlb
sub
push
stos
mov
and
lea
js
inc
pop
pop
jne
ds
daa
jo
ret
enter
adc
pop
push
fwait
push
jo
mov
sar
pop
or
xor
fwait
pushf
jnp
or
push
cltd
mov
lret
lcall
ja
and
cltd
lds
stc
mov
lret
pop
jo
or
ja
popa
jbe
rcrb
sub
pop
in
pop
jle
or
push
xchg
sarl
dec
iret
jecxz
or
leave
scas
mov
sbb
inc
repnz
sbb
inc
into
pop
mov
aam
sti
gs
and
ja
xchg
jg
xor
fmulp
mov
mov
sub
test
dec
xchg
es
add
dec
test
movsl
fildll
mov
scas
adc
movsl
repz
push
jp
arpl
add
fdivrp
sub
or
sbb
xor
inc
insl
stos
add
push
jmp
adc
jle
mov
mov
pop
enter
adc
cmp
pop
fsubrl
push
mov
bound
arpl
pop
sahf
outsl
dec
mov
or
outsl
pop
std
dec
dec
xor
mov
add
fcomp
sub
pop
in
pop
adc
push
incl
test
inc
sarb
jge
push
pop
fcomp
pop
mov
mov
mov
adc
outsl
xchg
cmp
mov
jmp
dec
movsl
nop
call
jae
cmc
and
repz
cmpsb
stc
shrb
and
inc
sbb
dec
repz
lods
enter
jno
insl
fstps
cmp
cmp
sti
xor
jnp
xorb
push
push
stos
mov
xlat
cltd
scas
cmp
pop
adc
sub
jle
enter
pop
bnd
int3
cmpsl
add
inc
lret
adc
adc
or
mov
fists
fucom
out
movsl
xchg
mov
push
mov
mov
ret
pop
sub
cmp
jl
mov
pop
mov
movsl
icebp
push
inc
lea
inc
ficoms
daa
leave
jbe
xchg
mov
in
jbe
and
add
aas
imul
dec
cwtl
aaa
jae
push
add
adc
cmp
adc
xor
hlt
xchg
hlt
mov
pop
xor
xchg
cmp
inc
add
insl
popa
arpl
lcall
xorl
push
shll
ds
stos
jmp
outsl
cmp
lds
jp
lods
jne
xchg
ret
jl
das
cmp
and
mov
pop
mov
les
ljmp
lahf
push
jmp
ret
loop
andb
stos
cwtl
mov
mov
int
idivl
repz
and
mov
orl
pop
xor
fcomps
test
mov
jle
jno
pop
sarl
data16
jae
imul
xchg
mov
xor
cmpsb
xchg
jne
push
mov
inc
loope
xor
mov
mov
xchg
cmpsl
or
pop
sub
and
enter
subb
jmp
adc
push
jo
outsl
mov
in
clc
mul
addr16
and
mov
lea
mov
or
cli
adc
pop
in
data16
and
out
clc
xor
adc
pop
jl
jbe
push
mov
jnp
pop
pop
cmpsb
arpl
out
les
cltd
pusha
cmc
cwtl
xor
les
sbbl
push
data16
icebp
sub
xchg
xor
ss
sub
push
or
test
ds
movsb
cwtl
pop
int
lcall
jg
mov
lahf
sub
push
in
es
xchg
jmp
scas
mov
movsl
cs
adc
inc
inc
mov
aaa
repz
lret
mov
sbbb
xchg
cs
test
test
dec
xchg
lea
cmp
dec
inc
cmc
inc
jb
mov
pop
xchg
jns
cmp
loope
sbb
sub
mov
pop
stc
stos
dec
mov
stos
idivl
in
push
gs
sub
dec
scas
fidivrs
pop
inc
mov
adc
or
je
sub
pop
in
mov
test
jmp
add
jp
jae
and
inc
sub
cmc
add
mov
arpl
mov
sti
int
in
jg
sbb
push
test
cmp
testb
jb
jge
and
push
test
ja
ret
dec
stc
sub
cmp
lret
sbb
push
clc
jp
pop
movsb
insb
and
cmp
adc
adc
js
mov
out
mov
jecxz
inc
pushf
es
ficompl
ja
je
test
push
lret
pop
fdivrl
stc
ss
dec
aaa
cli
mov
sbb
ja
dec
and
add
jge
outsb
out
jo
jns
rol
push
mov
cmc
cli
mov
imul
push
cltd
cmc
repnz
pop
sub
push
out
jecxz
push
cmc
push
cli
mov
outsb
pop
int
cwtl
imul
clc
daa
dec
mov
push
cltd
mov
mov
jne
jne
ss
jp
mov
arpl
and
or
mov
fdivl
dec
xlat
cs
outsl
sbb
mov
das
cltd
lret
leave
xchg
cli
mov
add
push
int3
lret
flds
mov
push
cmc
outsb
imulb
jecxz
shlb
sbbl
mov
or
pop
out
ss
and
stos
test
insl
push
mov
sbb
add
mov
sbb
jg
jnp
or
decb
shr
cld
popa
into
and
add
jecxz
sbb
push
jmp
cmp
add
xor
and
std
cmc
cmpsb
lret
aas
std
mov
adc
jnp
mov
pop
pop
daa
outsl
mov
fcomps
sub
mov
idivb
jl
movsw
xor
push
xchg
iret
movsl
xchg
xchg
jb
dec
mov
arpl
shrb
xchg
mov
xor
add
int3
inc
movsb
lods
les
and
in
test
jmp
mov
sub
pop
inc
pop
movl
mov
mov
pop
loope
xchg
test
mov
repz
outsl
push
sbb
mov
mov
jmp
int3
cmpsl
mov
out
xor
jbe
inc
xchg
xor
shrb
sub
adc
cmpsl
add
in
inc
fldenv
jno
mov
movb
nop
xchg
hlt
repnz
popf
sbb
lret
daa
lds
int3
cbtw
push
pop
mov
std
nop
stc
or
inc
int3
sbb
fisttpll
call
andl
ja
lret
mov
int3
mov
jp
roll
sub
inc
add
neg
nop
jno
xchg
movsb
xorl
mov
arpl
add
fwait
popa
test
sahf
or
sub
flds
adc
mov
in
leave
mov
movsl
mov
push
inc
pop
xor
dec
sbb
pop
call
mov
add
test
je
cmp
ljmp
xor
push
push
jbe
shr
sbb
xorb
push
dec
push
cli
mov
add
mov
cmp
add
in
or
push
cmp
fiadds
and
les
gs
push
jns
fcmovne
es
jle
aam
out
les
sbb
sub
fimuls
sti
and
fwait
mov
fbld
jns
ds
xor
aad
loope
xchg
pop
fldenv
sbb
push
cmc
jo
scas
xor
cmp
je
xorl
inc
lock
das
lret
cmp
adc
inc
fs
inc
daa
mov
out
adc
pop
xorl
mov
xchg
test
lods
inc
rcrb
pusha
in
sbbb
mov
cs
and
je
stos
aas
mov
nop
push
int
gs
cmp
cmc
push
mov
sbb
insb
int3
xchg
cmc
inc
les
xchg
insl
push
inc
cmp
int
fcomip
mov
fs
test
pop
add
jo
sahf
sub
pushf
push
fiadds
mov
jl
jns
out
inc
push
pop
cmp
imul
jae
lahf
icebp
adc
pop
push
inc
cmpl
movsb
jb
sub
repz
pop
jb
dec
js
cmp
push
aam
adc
fmull
sub
lret
xor
push
xchg
or
mov
testb
std
clc
mov
jg
xor
sub
push
clc
fisubl
xchg
cltd
in
outsb
fs
aas
lock
or
jp
push
xor
pop
sbb
mov
fsubs
dec
pop
out
or
or
xrstors
fiadds
xor
pusha
or
mov
xor
pusha
ret
mov
lods
repnz
xchg
dec
ficomps
out
iret
sub
test
cmc
nop
push
cli
pop
sub
les
add
cmp
mov
nop
mov
bound
mov
dec
cli
push
cli
cli
bound
inc
mov
shll
cltd
add
add
scas
fs
fs
pop
pop
cltd
sbbl
push
adc
and
jge
insb
or
lret
mov
test
loope
pop
aad
call
fwait
mov
cmpsl
sub
lcall
mov
mov
jne
faddp
pop
or
arpl
mov
sub
mov
scas
arpl
xor
ret
movsl
imul
push
push
mov
fs
sahf
or
pop
sub
and
dec
addb
mov
mov
lods
ret
adc
das
arpl
xor
jle
out
in
and
test
repz
adc
cmp
and
pop
sub
cmp
cmc
jae
mov
enter
mov
fisttps
mov
mov
inc
repz
es
inc
out
shll
dec
pop
mov
cmc
inc
lods
scas
or
xor
jo
mov
jbe
shrb
inc
int
xchg
movsb
and
bound
outsl
dec
cwtl
mov
jl
insl
cmp
mov
orl
push
jns
push
dec
imul
mov
aas
jecxz
cmp
inc
call
adc
mov
roll
and
push
xchg
ja
xor
push
dec
stc
mov
adc
mov
int3
addb
xor
mov
repnz
xor
out
sub
aad
mov
insb
jne
jecxz
out
es
divl
je
push
daa
call
jmp
mov
scas
test
lods
push
adc
xchg
loopne
shll
enter
dec
loop
or
push
rorb
pop
sub
and
xchg
shll
cli
iret
mov
cltd
sbb
sti
arpl
pop
sbb
ror
mov
loop
sub
std
sub
sbb
adc
ss
mov
add
sbb
divb
stc
roll
in
in
scas
or
adc
push
ss
inc
xor
out
dec
push
xchg
push
mov
sbb
push
ljmp
inc
adcl
pop
lret
pop
ds
cmp
mov
jecxz
fucom
mov
cs
add
aas
xor
out
pop
in
mov
dec
scas
stos
out
jbe
ljmp
or
xlat
xchg
push
test
popa
js
scas
or
or
out
sahf
xchg
aam
inc
lock
xchg
dec
cmovp
xchg
jg
rcll
cs
mov
inc
test
daa
add
sub
out
cld
and
mov
xor
push
dec
jl
sub
mov
rcr
push
mov
dec
mov
mov
divb
and
add
out
lods
mov
test
int
add
mov
js
inc
xchg
push
mov
popa
ljmp
call
rorb
inc
xor
or
mov
scas
lret
xchg
cld
daa
lea
lret
les
movsl
push
adc
adc
or
xor
fcmovnbe
pop
cmpsl
jns
scas
inc
repnz
xchg
cltd
icebp
mov
aaa
add
pusha
cmp
das
and
push
xchg
mov
push
push
shlb
mov
sbbb
fiaddl
test
mov
hlt
mov
push
mov
add
jle
xor
xchg
or
imul
insl
test
lcall
push
inc
fwait
xor
movsb
xor
andb
jno
mov
loope
dec
clc
stos
and
fsubs
test
dec
pushf
mov
fwait
insb
loopne
into
cmp
pop
scas
stc
dec
jnp
sarb
out
stos
pop
test
jns
int3
push
adc
push
int3
mov
jecxz
into
cmp
mov
or
fidivrs
iret
pop
push
out
test
popa
pusha
or
ss
movd
adc
stc
imul
out
cmp
shlb
dec
ss
test
mov
xchg
mov
mov
mov
jp
jmp
insl
push
gs
mov
das
xor
out
ja
fdivrl
aaa
lock
cmp
daa
adc
sub
into
mov
and
jns
cmp
inc
push
mov
shll
or
int3
into
in
inc
sbb
mov
mov
popf
xor
dec
jae
cmp
les
dec
mov
clc
jg
insl
inc
scas
jno
adc
out
pop
lods
adc
jo
pushf
jns
rolb
xor
cmpsb
pushf
aad
test
xorl
test
int
fdivs
xchg
cmp
das
adc
outsl
dec
sti
xchg
sub
sub
shlb
sbb
pop
cmp
jnp
repnz
sahf
std
loopne
mov
out
xor
lahf
add
test
es
repz
sbb
stos
xor
cld
rep
add
and
cmp
lea
ljmp
mov
adc
xor
ja
or
js
fdiv
pusha
in
in
mov
sbb
movups
rcrb
out
loope
cmp
pop
sbb
imul
cmpsl
jb
fwait
loope
out
and
enter
pop
mov
scas
push
repnz
popa
jnp
mov
dec
fmuls
loope
mov
aas
pop
in
inc
flds
dec
xor
shrl
movsl
cmpps
jmp
scas
push
xor
push
cltd
add
mov
inc
xchg
jecxz
sub
ljmp
data16
mov
and
push
lcall
movsb
push
jns
sti
into
fcoml
loop
or
les
mov
jg
or
lods
aad
mov
and
or
lds
pop
sub
push
or
or
xchg
mov
je
pusha
xchg
flds
shrb
sbb
and
xor
insl
inc
mov
test
sub
pop
jo
mov
mov
jnp
mov
fwait
and
lret
gs
lds
xchg
mov
sbb
aaa
or
jl
or
xchg
fsubrl
adc
xchg
rcl
ds
adc
add
mov
dec
test
or
daa
pushf
or
test
sub
mov
adcb
popf
jecxz
xor
cmc
pushl
data16
sub
imul
adc
jle
or
xchg
push
mov
xlat
jge
stos
mov
push
xchg
stos
les
sbb
xor
fimuls
mov
inc
iret
cli
sub
cmpsb
ss
ficompl
push
bndstx
les
push
cmp
mov
mov
lret
jns
xor
push
and
cmpsb
test
xchg
ds
fdivrl
in
mov
gs
xor
xchg
cmp
bound
pop
inc
iret
mov
cmpsb
push
vunpcklps
adc
pop
pop
add
ss
xchg
not
adc
sbb
int
das
cmpl
nop
out
enter
std
lea
clc
outsl
push
jae
nop
out
shlw
jp
pop
test
jo
in
adc
xchg
jo
push
std
mov
orb
outsb
loope
push
pop
or
fwait
mov
push
pop
fiaddl
mov
xchg
or
fnstcw
orl
xchg
fwait
ds
and
cmpsb
nop
dec
mov
call
or
xchg
incb
in
fsubl
inc
push
loopne
fcmovnb
jecxz
lock
mov
repz
movsl
or
rolb
or
xor
sub
test
mov
in
out
into
test
mov
mov
dec
push
sbb
test
daa
sarb
pusha
lret
iret
jnp
lahf
cs
xor
cmpsb
pop
lods
lcall
imul
cmp
push
jp
ljmp
sti
pushf
les
pushaw
pop
dec
pop
cmpsl
popf
cmp
lahf
sbb
mov
adc
dec
add
or
mov
jbe
mov
stos
push
xor
and
fisubrl
in
push
fiaddl
es
rcll
mov
adcb
mov
jge
inc
addr16
sbb
out
xor
sbb
imul
mov
pop
mov
movsl
inc
sub
cmp
jns
es
fsts
fdivrs
sbb
mov
test
iret
fldt
push
mov
adc
mov
jmp
mov
fsts
mov
mov
ficomps
cmc
std
inc
dec
lods
jns
or
dec
int3
and
into
push
cmpb
pop
lods
popa
and
ja
iret
xchg
fisttpll
dec
xchg
cmpsl
das
push
xchg
pop
inc
jl
jle
imul
ljmp
sub
mov
lahf
insl
inc
sbb
fwait
xchg
fstpt
dec
sub
or
outsl
aam
fisttps
roll
fwait
xor
jp
gs
sbb
mov
pop
push
rolb
leave
cmp
imul
sbb
lea
sti
mov
outsb
dec
or
xchg
jl
cmpsb
jecxz
scas
cmp
jbe
add
mov
inc
or
sbb
pop
push
orl
adc
cld
adc
mov
pop
xlat
mov
adc
push
pop
inc
jno
lods
lret
or
dec
mov
and
inc
leave
test
sbb
rcl
repz
add
std
dec
push
aas
and
arpl
sti
pop
shr
cld
imulb
mov
inc
sub
ss
sub
fidivrs
ds
push
add
fstl
cmpsl
enter
mov
sahf
rol
mov
ret
mov
arpl
jbe
lods
adc
add
addb
test
fwait
mov
jge
popf
mov
xchg
pop
lock
test
xor
xchg
add
ds
push
dec
sub
and
add
xchg
cli
inc
loopne
data16
mov
icebp
mov
imul
lods
push
cmp
iret
pop
jne
xchg
sub
adc
or
pop
popa
test
mov
fucomp
outsb
cmp
xor
out
xchg
fmull
dec
repnz
das
ret
add
aaa
mov
cmp
lahf
and
and
sbb
jns
push
mov
jp
adc
mov
mov
ljmp
mov
out
sbb
ffree
pop
xor
int3
mov
mov
cld
out
out
jp
rclb
sbb
sub
mov
push
shrl
mov
loope
stos
add
cmp
mov
push
inc
push
dec
movb
and
roll
mov
jnp
hlt
cmc
mov
xor
dec
mov
mov
loopne
and
and
adc
dec
or
dec
mov
je
mov
lahf
inc
push
adc
xor
outsb
es
cmp
dec
dec
mov
push
dec
pop
inc
sub
push
jmp
inc
rorl
sbb
inc
rcl
popa
mov
ret
scas
lods
push
dec
xor
and
cmpsb
in
sti
stc
push
jl
xchg
filds
jg
xor
add
pop
cmpsl
cld
shlb
xchg
sti
push
rorb
pop
repz
lret
sub
scas
adc
mov
je
cmp
test
pop
mov
xor
pop
cmp
add
incl
xor
cmpsl
das
and
lods
test
fstp
xorl
js
sarl
inc
sahf
call
jb
test
or
ficoml
sub
in
mov
dec
mov
jge
lret
push
mov
or
es
and
cld
mov
outsb
loope
xchg
jg
lods
in
mov
sahf
or
arpl
jnp
add
xor
outsl
cmpsl
xor
cli
popf
jno
push
lahf
sbb
jb
mov
mov
jecxz
les
repnz
dec
repz
mov
jns
je
cli
bound
shll
test
lcall
xor
sub
xchg
jo
ss
sbb
and
ja
faddl
lret
into
pop
int3
mov
dec
out
push
pusha
nop
push
inc
sti
push
fyl2x
xchg
ja
cmp
inc
scas
mov
push
jns
xchg
inc
movsl
pop
push
mov
pop
test
inc
repnz
addb
pop
icebp
push
sbb
imull
sub
or
dec
ljmp
mov
sub
orb
fsincos
test
repnz
pop
dec
cmp
push
outsb
and
mov
movsl
dec
fisubrs
push
jo
add
jecxz
pop
dec
mov
or
jo
stos
mov
popl
or
lock
mov
inc
sbb
sub
lret
loopne
icebp
stos
js
rsm
mov
adc
mov
loop
stos
das
sub
jns
push
je
fdivr
and
out
inc
hlt
and
pop
xchg
jp
jg
stc
clc
cmc
and
mov
outsl
testl
push
pop
xor
lret
mov
movsl
push
inc
and
or
lea
jae
push
in
and
mov
sahf
jo
jmp
xor
cli
mov
in
lret
ds
jl
das
mov
mov
scas
pop
js
fadd
and
xchg
arpl
test
mov
xchg
inc
lock
adc
lds
test
jle
mov
outsb
push
pop
fwait
inc
xor
cmp
mov
popf
pop
adc
jmp
sbb
cmc
push
sbb
mov
ljmp
imul
and
mov
in
xchg
notl
jge
mov
sub
out
fcompl
imul
hlt
push
cmp
ss
jb
pop
pop
data16
mov
add
ret
push
frstor
subl
imul
pusha
cwtl
push
stos
aad
out
std
scas
stos
pusha
loop
int
sar
stos
popf
jne
mov
frstor
cmp
lret
sbb
jl
mov
mov
mov
mov
inc
cmp
dec
dec
fists
stos
mov
cmp
bound
out
pushf
jp
mov
rcll
lods
fsubrs
dec
ss
imul
outsl
mov
sbb
pop
mov
rol
and
out
and
cmc
jb
adcb
stos
add
ret
push
xchg
pop
ljmp
xchg
in
loope
cwtd
push
adc
cli
sbb
loope
inc
push
in
repnz
cmpsl
sbb
cld
mov
pushf
pop
movsl
insl
cmp
pushf
inc
or
mov
mov
push
frstor
push
adcb
imul
loopne
nop
ss
jmp
push
sbb
adc
lock
pop
xchg
addr16
mov
addr16
mov
sbb
dec
sahf
cmp
xchg
daa
xor
jns
xor
ljmp
lahf
or
clc
or
scas
xor
sahf
outsl
lea
jae
cmpsb
xchg
jbe
lret
push
sbb
pushf
mov
add
mov
jns
add
push
xor
jmp
mov
int
dec
sti
std
dec
sahf
ror
jecxz
xor
cmp
or
ds
lret
sub
pushf
mov
mov
in
rcl
in
lret
add
and
jbe
jns
mov
cmp
pop
xor
inc
adc
sub
jne
mov
cli
push
aas
das
pusha
add
sub
dec
mov
add
and
push
mov
sbb
cmp
std
lcall
jae
sbb
insl
pop
mov
cmpsb
or
gs
adc
push
ljmp
pop
mov
mov
add
push
xchg
xchg
popa
fwait
inc
leave
dec
out
js
jmp
cs
ficoml
decb
cmpl
clc
mov
mov
mov
mov
mov
jp
cltd
in
xor
xchg
mov
in
and
test
jo
inc
mov
mov
lock
call
mov
aam
push
fdiv
cld
push
scas
cli
stos
mov
and
inc
test
das
leave
inc
dec
or
jnp
add
sub
rol
ds
loop
scas
pop
lea
xchg
mov
lret
dec
jb
fisubrs
or
popf
cmp
out
or
ficompl
add
enter
dec
outsl
in
mov
fdivs
jl
ds
flds
out
cs
mov
ljmp
loop
sahf
gs
adc
lcall
in
xchg
xchg
or
ficomps
inc
into
dec
stc
out
pop
rcrl
xchg
xchg
xorl
push
inc
rcrl
fdivrl
pop
cmp
repnz
pop
lods
fisttpl
push
ret
mov
xchg
mov
lock
jns
push
jg
cld
sbb
cwtl
mov
in
pusha
popf
cmp
and
sbb
ffreep
out
movsl
cs
or
negl
pop
push
mov
in
call
dec
cmc
decl
xor
xor
test
adc
mov
pop
jle
out
ja
inc
inc
add
fdivs
sub
jg
movsb
bound
int3
cmpsl
jp
aam
test
pop
xor
lahf
push
add
sub
dec
rcrl
inc
daa
and
out
mov
adc
jae
inc
push
loope
push
sbb
negb
adc
xchg
into
loopne
fildll
jns
roll
or
cmp
sahf
xchg
lahf
int
cmc
mov
inc
mov
cmp
jae
xchg
pop
arpl
jne
pop
mov
add
pop
xchg
shl
pop
mov
fdivrl
xor
pushf
inc
push
push
push
clc
mov
sbb
sbb
xchg
shrb
loop
pop
cmp
add
push
xchg
mov
fwait
jbe
int
gs
pop
inc
mov
jns
push
imul
or
out
cs
and
or
call
je
push
jnp
sbb
or
test
int
pop
add
mov
fwait
popa
xchg
sbb
lea
in
mov
rol
je
scas
cmp
out
outsl
pop
jmp
xorl
loopne
rcl
mov
or
fld
inc
mov
add
xchg
mov
aas
xchg
hlt
xor
mov
xchg
inc
push
aas
jb
test
ret
les
ret
enter
jnp
xor
inc
mov
cmp
testl
mov
jae
repz
inc
inc
aam
add
sub
movsl
inc
jg
ss
dec
sub
push
cmp
stos
cwtl
cmpsl
stos
xchg
push
cmp
adc
jnp
mov
cmp
adc
dec
or
jl
xchg
xor
out
int3
push
orl
lahf
xorb
inc
push
and
fisubrl
loope
pop
shl
aam
mov
mov
mov
repnz
push
mov
stos
packuswb
jl
mov
popf
cli
pop
xor
adc
dec
subl
test
mov
mov
imul
pop
xchg
imul
js
xor
sarb
jmp
dec
lret
stc
imul
in
adcb
mov
mov
fdivrs
adc
test
cmp
add
xchg
bound
mov
cs
jbe
mov
cmpl
and
cmpsb
out
mov
movsb
push
scas
push
jb
cmpsl
push
mov
or
push
lret
push
out
imul
pandn
js
and
test
mov
xchg
shlb
bswap
scas
cltd
call
inc
mov
mov
mov
cmc
adc
mov
ss
push
jp
bound
or
and
or
dec
push
movsb
dec
or
ret
mov
pop
inc
jmp
shlb
sub
push
push
mov
and
decb
icebp
xchg
pop
xor
add
add
cmp
cmp
popf
jp
imul
jnp
ljmp
sub
movsb
push
add
loopne
add
int
dec
cs
adc
notl
inc
cmp
xlat
rorb
adc
fdivs
test
outsb
iret
mov
ss
sbb
jmp
or
enter
mov
push
xchg
scas
mov
mov
pop
leave
out
push
test
dec
xchg
sbb
xor
and
loopne
bound
ret
adc
mov
cmp
frstpm(287
xchg
dec
sub
mov
sti
jae
dec
je
fldt
pop
enter
fnstenv
cmc
inc
adc
add
xor
sti
jp
mov
sbb
mov
or
lret
adc
insl
insb
aaa
sub
push
xor
xchg
ja
outsl
pop
pop
das
sub
jl
xor
cli
out
inc
movsl
xchg
les
mov
shlb
ret
hlt
xchg
sarl
push
inc
mulb
mov
xlat
jae
xor
insl
mov
in
mov
and
mov
xor
mov
push
stos
mov
mov
out
in
pop
int
mov
jns
mulb
sub
aaa
addr16
add
fisubrs
leave
lods
sbb
int3
jg
ret
jmp
insl
pusha
je
imul
push
dec
xchg
js
add
insb
sbb
lcall
and
adc
cltd
mov
push
lods
push
push
cmp
iret
test
lods
push
stc
mov
shrl
lahf
rcrb
inc
mov
xor
cmc
push
clc
push
push
inc
stos
je
hlt
dec
xchg
adc
cwtl
dec
lahf
popf
sbb
push
adc
scas
pop
daa
dec
dec
daa
dec
cmpsw
pop
out
stos
das
push
lret
mov
inc
sti
pop
clc
xor
dec
cmp
xchg
dec
scas
aaa
xorl
inc
pop
dec
nop
pusha
dec
or
jae
inc
cmpsl
cltd
test
clc
dec
rorb
push
push
out
loope
mov
inc
cmp
push
or
jb
xchg
inc
push
pop
jae
rcl
lea
jnp
dec
insl
sar
xlat
xchg
clc
mov
mov
aam
push
adc
ficompl
pop
mov
inc
shlb
out
enter
or
mov
and
rcl
scas
std
fcoml
les
ret
pop
jo
adc
mov
sbb
inc
mov
ret
mov
jmp
lds
cmpsb
gs
int3
dec
arpl
pop
sub
or
push
or
xor
sub
inc
add
iret
pop
or
push
lret
int
fildl
jp
repz
std
dec
repnz
or
cmp
ret
mov
sbb
and
sbb
addr16
jno
cmp
cmpsb
mov
aam
jns
jbe
jmp
pop
xchg
cmp
xlat
popf
mov
insb
dec
dec
and
pop
lret
loopne
dec
cmp
cmc
jno
push
lret
inc
imul
xlat
outsl
in
cli
ljmp
add
lods
xor
pop
cmp
cmpsb
pop
call
insl
inc
roll
pop
dec
mov
scas
insl
lcall
sub
data16
push
mov
es
outsb
sbb
adc
les
pop
xorl
or
xchg
and
pop
lret
loope
mov
subl
jo
mov
fcoml
mov
pop
clc
add
jecxz
or
sbb
or
call
add
mov
adc
sarl
push
dec
into
and
mov
movsb
xor
jno
loopne
mov
cwtl
fbstp
nop
and
clc
ljmp
sub
push
adc
sub
fadd
je
faddl
repz
mov
mov
push
movsl
cld
sub
in
aam
xchg
dec
stc
mov
mov
jae
adc
addr16
das
adc
push
sbb
fs
and
jno
sub
sub
faddl
xchg
fidivl
fdivrs
jecxz
lret
cmp
add
xor
out
pusha
xor
fdiv
fcomip
out
out
jae
rorb
outsl
ror
or
test
ds
std
adc
xchg
dec
mov
jmp
adc
loop
dec
clc
imul
jl
stos
fnstcw
addr16
xchg
jb
jb
fnsetpm(287
mov
pop
data16
pushl
cmp
sub
inc
mov
jl
jne
pop
inc
and
push
and
fnstenv
xor
mov
inc
xchg
xor
std
or
rcll
into
lods
scas
xor
stc
xor
rorb
xchg
mov
dec
jns
dec
movb
stc
xor
sti
add
scas
jns
add
mov
adc
ljmp
out
fbstp
sbb
in
pop
mov
mov
outsb
adc
jmp
or
pusha
and
stos
mov
xor
mov
dec
cmp
cwtl
push
ds
push
out
lods
push
fisttps
gs
lock
mov
pcmpeqb
ror
adc
mov
mov
jle
adc
and
sbb
xchg
xor
cmp
xchg
fsubs
rcrl
ret
aad
xchg
dec
mov
ja
mov
shrd
ret
pop
mov
test
inc
outsl
ucomiss
insl
mov
xchg
jns
aam
icebp
shrl
stc
arpl
out
jns
dec
cmc
andl
repnz
movsb
fdivs
adc
cli
mov
or
pop
and
cmp
es
pop
divl
inc
add
lock
xchg
ss
cmp
inc
dec
or
push
pop
loop
imul
leave
pusha
aad
stos
add
test
jnp
sahf
lahf
sahf
mov
data16
push
std
int3
repnz
mov
jbe
dec
fs
mov
or
jle
cmp
mov
mov
dec
jb
scas
inc
xor
scas
mov
rcll
mov
rcl
sbb
xor
outsb
inc
sbb
dec
cmpsb
les
icebp
mov
mov
inc
mov
xor
shll
add
cli
push
subb
inc
out
scas
xchg
and
xor
stc
push
movsl
cld
lods
jae
sub
loopne
sub
adc
push
mov
mov
mov
jmp
imul
nop
cli
ss
inc
in
negl
addps
mov
pop
sub
lret
jl
popf
aas
mov
or
push
insb
popa
push
pop
adcb
dec
cmp
js
push
sub
mov
cmp
in
ljmp
push
fisttpl
cld
jmp
icebp
cmp
popf
fadds
adc
sti
js
out
ja
adc
shl
fidivrl
add
xor
xlat
imul
and
fildll
cmp
sbb
and
push
add
mov
fsincos
inc
lods
orb
xor
xchg
jbe
icebp
sbb
mov
sub
int3
jne
out
cmp
aam
std
cmp
pusha
movsl
mov
or
adc
call
pushf
or
add
and
mov
jl
mov
pusha
pop
add
test
imul
inc
jne
cmp
push
xor
test
inc
xorl
xchg
pop
cmp
outsb
enter
mov
xlat
test
cmp
xor
or
loope
mov
push
loope
xlat
push
sbb
xchg
sub
cs
or
mov
into
decb
icebp
inc
popf
fsubrs
loopne
cmp
loope
repnz
add
test
dec
mov
or
xor
xchg
jl
pop
cmpsb
popf
shr
sbb
pop
int
dec
test
jnp
and
sbb
mov
incl
insl
sub
out
pushl
push
jmp
mov
pop
fisubrl
inc
inc
into
inc
adc
andl
and
xor
shl
pop
jmp
jmp
add
or
mov
cli
and
outsb
jecxz
addr16
leave
mov
cmp
adcl
xchg
dec
xchg
nop
xchg
fstpl
les
xor
mov
sub
dec
inc
dec
add
push
xchg
fstpt
cmp
jo
jge
sub
ficoms
cmpb
xchg
imul
mov
pop
popa
add
lret
cltd
out
push
mov
andb
push
mov
xchg
ret
jecxz
mov
out
inc
lds
in
jmp
sub
dec
jmp
or
fsubs
dec
dec
movsl
mov
sub
push
mov
jne
sbb
roll
push
xor
leave
ss
and
fildll
inc
push
sub
cltd
fcoms
adc
inc
movsb
test
aas
filds
sub
gs
int3
movsb
xor
loop
jl
call
scas
cmp
outsb
dec
jno
dec
out
dec
sub
push
xchg
popf
cmp
or
add
and
xor
or
daa
dec
insl
in
sbb
call
dec
lcall
inc
fwait
and
push
xor
mov
cmc
fld
shrb
ljmp
dec
repz
mov
cmpsb
lods
int
movsl
fstpt
push
sarl
sbb
cmp
imul
repz
out
xor
cmp
push
or
popf
loopne
testb
xchg
loope
or
fstpt
xbegin
sub
fimuls
jge
pushf
repnz
inc
inc
or
daa
arpl
lea
repz
jnp
or
adc
in
xchg
mov
std
cmc
hlt
ss
subl
or
jae
xchg
or
shl
pop
mov
add
push
fisubrl
pop
mov
pop
sub
cmp
push
push
sub
ret
push
dec
test
push
fstps
add
pop
fcmove
xchg
dec
xchg
inc
mov
daa
and
enter
std
cltd
lods
push
sti
ja
adc
lock
cmp
adc
lahf
sbb
rclb
inc
inc
and
or
int
out
out
es
xor
lea
dec
push
fsubl
cmc
pop
sti
jnp
mov
push
frstor
inc
and
xchg
adc
dec
repz
stos
fnstenv
fisubrs
and
addb
push
ret
inc
cmp
test
add
cld
and
daa
and
loopne
inc
mov
push
adc
sbb
stc
int3
push
test
imull
inc
pusha
retw
sub
adc
or
push
je
jl
mov
insl
or
inc
ds
add
mov
jo
fmuls
fmul
jge
or
in
mov
pop
iret
cmp
in
loop
shl
call
xor
mov
jno
jecxz
testl
loop
mov
sbb
das
mov
push
adc
or
mov
pusha
jecxz
sbb
inc
cltd
lea
add
mov
jle
push
sar
mov
sub
xchg
std
dec
sti
jno
movsl
movl
dec
pop
mov
imull
sbb
aam
shr
push
add
sub
jmp
pop
sbb
pop
add
cmp
jle
add
cmp
stc
mov
out
ds
inc
adc
adc
jmp
scas
or
pop
inc
outsb
cltd
dec
sub
mov
and
xlat
outsl
inc
push
dec
or
lcall
pop
jnp
sub
mov
movsl
pop
inc
ljmp
jl
imul
push
out
ss
mov
inc
pop
push
mov
dec
test
xchg
fs
sbb
es
xor
stos
in
clc
sbb
push
jmp
jge
insb
xchg
pop
es
cmp
xchg
in
push
or
pop
jmp
testb
gs
adc
insb
dec
in
test
mov
cmp
push
fwait
jmp
and
and
adc
sarl
push
push
lret
xlat
int3
fstps
arpl
mov
pusha
dec
or
xchg
sbb
mov
pop
inc
jg
and
popa
out
out
dec
jle
lock
mov
lock
lea
in
movsb
dec
icebp
sbb
push
sahf
jg
or
sbb
fisttpl
test
inc
pop
loope
daa
jnp
pop
xchg
das
mov
xor
mov
inc
jl
stos
mov
sub
add
out
js
mov
pop
inc
xor
and
add
mov
add
dec
pop
dec
mov
sub
movsl
gs
fs
lret
in
jp
pop
dec
shlb
fistpll
imul
mov
jle
int3
testl
jbe
test
and
sub
xor
xchg
or
arpl
rcr
outsb
faddp
cmp
sub
fistl
aaa
repnz
add
mov
rcl
dec
faddp
dec
dec
pop
mov
negl
cmc
xchg
jns
mov
lods
add
test
add
insl
jo
fwait
out
inc
sub
jmp
cmp
pop
cmp
js
push
mov
dec
adcb
or
mov
subb
add
xor
push
jle
in
fldenv
xchg
xchg
sbbl
out
lret
adc
or
test
and
pop
outsb
pop
icebp
jmp
mov
lahf
idivb
push
mov
mov
xlat
lock
inc
xor
or
dec
pop
push
sub
jnp
ljmp
and
sub
xchg
sub
xor
aam
mov
inc
lds
push
mov
in
add
ret
add
test
xor
fsub
ljmp
push
jmp
lcall
push
out
test
inc
inc
inc
clc
cmp
dec
test
in
sbb
xchg
inc
out
enter
cmp
xchg
cmc
adc
inc
in
xchg
inc
ss
fsubr
pushl
into
adc
push
aaa
enter
fbld
iret
outsb
push
ja
mov
push
add
sbb
pop
xor
sbb
mov
mov
pop
inc
je
jl
mov
jo
mov
incl
cmp
inc
dec
push
lea
test
and
and
data16
ret
divl
pop
js
pushf
adc
pop
sbb
aas
push
popa
xchg
sub
mov
mov
in
mov
dec
lock
cmp
sahf
insl
add
add
push
fcmovb
push
in
xchg
xchg
adc
in
addr16
mov
fsubr
inc
pop
shrb
inc
mov
jae
gs
mov
mov
in
xchg
shlb
pop
push
xor
mov
jne
roll
dec
push
mov
mov
mov
psubb
mov
push
xorb
mov
cmp
push
shll
and
cli
popa
add
cmc
pop
in
pop
add
push
iret
inc
cmc
fsub
cmpb
inc
dec
pmulhuw
adc
add
fistps
xchg
xchg
clc
inc
cli
cmp
mov
cmpsl
outsb
adc
fwait
or
push
adc
gs
add
in
stc
pop
repnz
adc
cmp
pop
addb
xchg
and
cmc
pop
inc
inc
arpl
xor
xor
xchg
out
int
jo
fstps
inc
outsb
xchg
pop
add
es
lahf
std
inc
adc
and
adc
push
sti
ja
mov
subb
xchg
xchg
push
push
lcall
xchg
dec
pop
add
jl,pn
push
jb
gs
inc
nop
mov
pop
sbb
je
inc
std
test
cmp
jns
inc
xchg
jae
xchg
mov
cmc
int3
dec
xor
add
push
repz
mov
or
scas
push
xor
cmp
ficomps
lods
das
jg
push
sub
mov
ljmp
testl
push
clc
arpl
mov
lret
daa
test
mov
push
pushf
sbb
icebp
fisttps
cmp
out
mov
cmp
insb
enter
cmpb
push
add
addr16
imul
cltd
ror
mov
das
pop
pop
mov
push
test
mov
jge
xor
jmp
pop
fiadds
and
pop
fimuls
dec
test
mov
mov
repz
lcall
orb
sbbb
xchg
sahf
sbb
mov
movsl
jne
push
mov
mov
enter
and
addr16
ljmp
mov
pop
lock
and
cmp
push
inc
mov
into
mov
bound
jb
mov
adc
jge
mov
xchg
or
loope
jo
and
pslld
fmul
insl
sbb
push
ret
sub
dec
add
in
mov
xchg
adc
mov
aad
inc
xchg
push
mov
cmpsb
ss
arpl
mov
cmp
cmc
lahf
add
xor
and
dec
mov
in
xor
push
aam
bound
scas
cld
mov
cmc
or
in
pop
sarb
inc
stos
pop
xchg
addr16
pop
imul
outsb
xchg
jge
pop
imul
cs
xchg
pop
pop
push
and
test
mov
and
cs
sbb
in
dec
mov
loopne
mov
daa
mov
add
push
adc
movsb
out
divb
daa
fwait
sahf
cld
int
loopne
dec
fs
insl
add
mov
sbb
nop
pop
pop
push
iret
or
add
cmpsl
jmp
movsb
leave
push
xchg
pop
test
pop
push
pop
test
cmc
jl
pop
rcr
in
xchg
xor
popa
mov
imul
lds
xchg
orl
sub
cmp
ret
mov
sub
cltd
sub
nop
xchg
lret
hlt
inc
adc
mov
js
push
addl
mov
and
test
pop
xor
into
fwait
cmp
mov
les
jle
aas
xchg
push
arpl
fcoms
insl
inc
cmp
push
sbb
and
inc
popf
add
sub
outsl
mov
jg
inc
imul
pop
push
add
adc
jne
ja
fcmovbe
jnp
jp
stos
scas
popa
std
andb
movsb
push
and
int
into
lahf
jno
ss
push
bound
mov
xlat
push
aam
sbb
cmpsb
mov
cmp
test
xchg
dec
push
movsl
andb
das
jmp
sbb
mov
jbe
mov
fcomp
fidivrs
dec
movsl
xor
addl
dec
inc
clc
xlat
fnstenv
repnz
cmp
jle
nop
test
xor
mov
je
mov
rcr
pop
add
test
mov
mov
sbb
xor
iret
cmp
dec
dec
insb
lods
xchg
cmp
test
xor
mov
stos
cmpsb
mov
jp
or
ljmp
cld
adc
mov
insl
pusha
xchg
jmp
lods
cmp
add
or
or
int3
jo
popl
lock
jecxz
imul
xor
push
sahf
ds
mov
enter
sbb
sbb
push
mov
dec
bound
push
andb
pop
add
push
mov
mov
shlb
hlt
and
or
cmpsb
sub
ja
in
mov
test
loope
arpl
loope
arpl
xor
and
mov
fisubl
adcb
add
test
out
adc
sub
fs
sahf
jl
ja
cmc
mov
inc
arpl
icebp
leave
xlat
rep
flds
bound
imulb
in
hlt
ret
clc
out
pushf
dec
jecxz
xor
mov
out
xor
mov
das
add
and
loope
mov
sti
jp
cltd
pop
ds
lock
sbb
clc
leave
adc
inc
rcrl
sbb
pop
js
insl
add
jp
data16
adc
aaa
outsl
jno
jle
sbb
jmp
lods
dec
das
addb
movsl
sahf
dec
mov
push
movsl
xor
clc
dec
mov
icebp
sbb
aam
mov
jns
mov
imul
adc
mov
mov
call
sbb
outsl
push
pop
jae
mov
adc
push
push
pushf
cmp
pop
adcb
mov
sub
sbb
jno
iret
cmp
xchg
and
xchg
mov
mov
in
aas
lods
sahf
inc
push
dec
scas
js
mov
add
outsb
add
mov
adc
sub
fdiv
inc
jnp
mov
in
imul
pop
and
ficomps
leave
fld
rcll
and
dec
fstpl
dec
insb
mov
mov
fnsave
xchg
jg
jecxz
xchg
cmp
push
sub
ret
jle
mov
inc
jecxz
pop
jecxz
mov
into
sub
xor
popa
xlat
jmp
ret
imul
fldcw
push
dec
jo
insl
lock
or
je
mov
stc
roll
sub
rcl
xor
cld
dec
rorb
dec
mov
sbb
sbb
pushf
lods
mov
inc
movsl
inc
xor
jge
hlt
mov
mov
push
scas
cmp
pop
icebp
jns
into
imul
rcrb
les
adc
or
or
jno
cld
and
cmp
pusha
je
das
xchg
mov
in
xchg
mov
movsb
loopne
cmp
mov
mov
xchg
mov
test
test
jle
inc
xor
dec
mov
pop
jmp
xor
mov
inc
shr
mov
push
pop
in
iret
lea
cmpb
gs
lret
and
sbb
push
jbe
dec
mov
ds
xchg
insl
fsubp
push
stos
push
jb
repnz
xor
and
orl
data16
sub
cmc
xchg
sbbb
add
dec
jmp
repz
xor
xchg
nop
cmp
pop
or
insb
arpl
mov
clc
ljmp
xor
adc
add
cmp
sahf
pop
sbb
aam
ljmp
inc
les
rolb
ljmp
mov
mov
xor
mov
aam
mov
xlat
iret
jae
sub
cld
in
in
rcll
add
mov
adc
out
add
mov
imul
ret
xor
xchg
lret
mov
in
cld
mov
sarl
jmp
xchg
xchg
pop
sahf
adc
or
pushf
mov
dec
inc
inc
in
mov
push
and
push
fs
lds
push
jnp
cli
bound
and
cli
imul
add
scas
jbe
and
cmp
negb
ss
sbb
jge
dec
test
pop
rcrb
xchg
xor
xchg
push
xchg
pop
cmp
dec
stos
and
das
add
repnz
imull
sub
mov
xchg
shrl
push
and
xchg
xor
jecxz
push
fistpll
xchg
sub
iret
fisubl
jb
push
insb
cli
fnstenv
and
aaa
ret
jbe
bound
iret
dec
inc
mov
es
shlb
lods
fisubrs
stos
push
test
adc
pop
pop
cmpsb
cmp
in
or
out
push
mov
hlt
mov
jbe
xlat
test
adc
or
outsb
test
or
je
xchg
inc
ds
mov
xor
pop
jne
adc
mulb
pop
clc
sub
call
sbb
insl
pop
jg
mov
sahf
ss
fistpll
mov
dec
mov
adc
outsb
mov
dec
jo
push
dec
fisttpl
mov
jl
pusha
mov
loope
jg
inc
adc
gs
popa
adc
dec
cmp
cmpsb
push
stos
mov
mov
stos
sbb
nop
fwait
rorl
pop
and
dec
mov
add
jo
dec
pop
mov
xchg
popf
jo
sti
adc
inc
int
cld
jmp
push
std
lret
jo
jno
inc
testb
jp
fcompp
loopne
lds
xchg
lahf
andb
popa
xchg
push
ss
adc
vpcmpgtb
test
lcall
xchg
cmp
ret
add
cmp
xor
xor
sbb
in
jp
mov
mov
mov
inc
jg
push
aad
mov
adc
pop
inc
test
or
popa
or
call
sbb
ljmp
shll
mov
in
mov
leave
xchg
addb
insl
into
xchg
fldt
mov
inc
test
cmp
sbb
lret
push
andb
pusha
leave
dec
dec
outsl
roll
cs
jnp
add
ds
mul
add
cmp
fwait
jo
xchg
lcall
sahf
fistpll
and
andb
dec
push
rclb
jnp
mov
daa
outsl
dec
xorl
lret
fwait
mov
push
movsl
ja
or
or
sub
xchg
xchg
cmp
add
and
push
int3
imul
xor
push
xor
movsl
xor
adc
xchg
sub
cmp
enter
mov
mov
fwait
and
jnp
mov
push
movsl
loop
dec
lahf
negl
jp
fstps
outsl
ficoml
out
jno
xchg
inc
xchg
mov
sbb
inc
add
xchg
xor
push
push
pop
stc
pop
mov
pop
fisttps
gs
jno
test
lock
xchg
lret
cmc
ljmp
inc
push
cwtl
jbe
jbe
fldcw
inc
iret
dec
sub
mov
cmpsb
lahf
pushf
push
push
xor
push
into
loop
out
fldcw
cli
sub
popf
in
dec
arpl
dec
inc
subl
ja
dec
mov
shrl
ljmp
jb
and
xor
cmp
jmp
inc
adc
pop
cmp
ljmp
popa
cltd
mov
cld
mov
xor
mov
jp
in
clc
add
pop
or
xor
pop
ljmp
mov
cmpsl
mov
sbb
add
inc
shrl
pop
fwait
inc
mov
inc
fbstp
add
push
repz
mov
das
shlb
adc
loop
mov
mov
mov
pop
leave
push
xchg
sub
les
gs
cmp
xchg
scas
or
and
inc
push
mov
addb
bound
aad
cmpsw
fldenv
fistl
and
testl
and
js
cmp
incl
fwait
or
push
sbb
xor
xor
add
or
sti
push
nop
je
ss
into
les
movsb
les
ja
mov
mov
xor
imul
lods
push
add
lret
push
imul
aaa
movsl
test
hlt
add
mov
mov
cmc
sbbb
movsb
and
add
ja
sahf
divl
adc
and
xchg
cmp
pusha
dec
jae
jbe
xchg
jns
sub
jecxz
pop
into
xchg
cs
loopne
xor
or
or
das
scas
loope
sub
cmpsb
pop
inc
push
fimull
push
ljmp
cmpsb
enter
add
or
hlt
cltd
mov
dec
in
scas
outsl
shlb
movsl
fisubrl
sub
xchg
push
inc
rclb
das
insl
and
jae
mov
imul
fwait
mov
xchg
test
enter
call
fcoml
fcmovne
or
mov
out
mov
aad
mov
cld
or
sbb
pushf
and
lods
and
inc
movsb
fdiv
cmp
add
pop
jne
fnstsw
in
add
in
jmp
mov
test
scas
adc
outsb
fidivl
ljmp
add
pop
out
imul
data16
insb
je
jns
and
gs
push
in
aaa
and
mov
mov
bound
iret
sbb
mov
mov
lahf
inc
fdivrl
jns
ja
jno
sarb
lods
mov
test
adc
icebp
sbb
stos
sub
and
lock
fistl
pop
jmp
dec
mov
ret
xchg
sub
dec
cwtl
js
push
mov
out
testb
pop
cmc
xor
adc
nop
mov
lods
sbb
aas
out
mov
jge
sbbl
adc
push
idivl
cmpsb
ficomps
arpl
push
push
add
pop
cmc
into
jle
push
sub
mov
pop
scas
lock
test
sub
add
adc
imul
jge
or
lret
stos
push
ficompl
ret
push
popa
jge
insl
hlt
sti
jge
icebp
movsl
or
fisttpl
dec
repz
mov
jns
or
pop
lods
pusha
gs
or
aam
or
fcmovb
sahf
int
int3
imul
sahf
mov
clc
mov
mov
push
cwtl
dec
jnp
jecxz
mov
clc
jl
push
adc
pop
imul
stos
ret
jo
stos
xchg
sub
and
lock
repnz
ss
cltd
jnp
lds
loop
jo
lock
and
cmp
inc
sbb
mov
sahf
cmp
adc
icebp
inc
xchg
arpl
dec
xchg
sub
mov
bound
lret
sbb
sbb
aam
gs
jno
lods
and
int3
mov
insl
repnz
add
movsb
mov
int
les
or
outsl
cmp
and
push
xorl
daa
push
pop
mov
add
addr16
dec
jne
jp
push
loop
idivl
fiadds
cmp
fistps
shr
dec
inc
ja
add
int
mov
je
gs
in
std
jge
jae
push
cld
adcl
loop
sbbb
cmpsb
dec
iret
inc
push
add
xchg
mov
mov
imul
call
or
shl
out
dec
cmc
or
fimuls
loope
js
loopne
mov
and
push
mov
xchg
mov
add
adc
icebp
aad
xchg
in
inc
neg
outsb
pushf
pop
sbb
adc
scas
out
cmp
push
mov
shll
out
adc
mov
in
add
lods
fildl
mov
fnstenv
adc
cmp
inc
push
rcl
pop
sub
mov
and
lea
mov
or
rol
sbb
jae
or
fwait
int3
xorl
imul
pop
mov
jecxz
xor
push
jmp
lods
pop
push
ds
arpl
push
jo
add
pop
pcmpgtw
jg
call
clc
sub
mov
mov
mov
jnp
inc
pop
mov
inc
sub
lods
xor
xchg
add
dec
dec
lds
and
cltd
cli
and
mov
addb
mov
inc
mov
insl
adc
jmp
mov
sbb
lods
xchg
cmp
jl
jle
push
adc
repnz
mov
push
insl
out
and
bound
les
push
xor
dec
mov
imul
jns
lock
pop
pop
adc
mov
pop
and
pop
int
mov
jp
jns
mov
in
outsl
cmp
sub
push
test
push
insb
jbe
jge
gs
dec
sbb
sub
or
mov
xchg
mov
ja
lock
cmpl
push
aas
jo
adc
and
xchg
adc
pop
mov
mov
push
test
loop
rorl
jo
push
dec
mov
jl
fadds
xchg
pop
sbb
ljmp
lods
push
negb
add
loop
lock
lods
mov
xor
shrl
jae
stos
adc
mov
pop
ret
jl
negb
leavew
scas
xor
xchg
xchg
mov
xchg
ret
mov
arpl
and
inc
rclb
ficoms
sbb
aad
mov
mov
ficoml
xchg
xchg
pushf
xor
mov
dec
pop
jmp
sub
pop
and
jge
std
push
add
fcoml
scas
mov
test
adc
inc
inc
popa
xorb
cmpsb
mov
pop
sti
jl
div
mov
iret
jg
and
sti
fidivrl
in
int3
sbb
jno
pushf
cmpsb
pushf
adc
jne
popf
and
lods
jl
pop
cwtl
cwtl
jo
jo
cmp
lcall
inc
jle
fucom
dec
ljmp
lods
sub
js
cltd
test
loopne
in
jp
test
xor
cltd
in
or
cmpb
lret
pop
scas
xor
xchg
push
into
mov
arpl
xchg
jnp
js
mov
mov
sti
loope
test
jmp
xchg
push
fnstenv
movsb
mov
loop
add
lret
sti
shll
xchg
shl
loop
fldl
mov
in
push
sub
sbb
fcompl
imul
add
mov
ficoml
and
sub
jle
sti
rcrl
xor
nop
loopne
add
pop
and
xor
push
daa
out
mov
shll
push
adc
cmpsb
add
out
sbb
push
inc
pop
lcall
push
por
dec
inc
mov
ja
push
aam
repz
outsl
cmp
mov
testb
pushf
xchg
sahf
jp
xlat
adc
sbb
pop
call
bound
movsl
xchg
xor
mov
inc
mov
push
cs
xor
ja
and
arpl
test
adc
ds
imul
js
mov
mov
inc
mov
testl
sub
stos
iret
jno
rorl
push
adc
mov
adc
mov
pop
sbb
pop
sub
fnstenv
out
in
push
inc
bound
and
xchg
mov
push
cmp
xchg
and
xor
insl
mov
xor
jae
sub
sub
arpl
xor
push
enter
cltd
mov
sbb
adc
jmp
mov
in
mov
fmuls
jbe
dec
mov
cld
in
add
fistpll
movb
shll
adc
aam
push
movsb
pushf
adc
and
ja
push
adc
rcll
daa
push
out
xor
enter
jns
aam
push
jg
jno
cmp
data16
ja
sbb
and
bound
pop
in
shl
xchg
js
ret
les
fistpl
push
pop
cmp
adc
es
inc
fistl
adc
inc
test
test
push
jno
clc
rol
fcmove
insb
mov
subb
cs
adc
dec
incb
push
mov
add
mov
fsubl
pop
in
std
pop
insl
mov
cwtl
mov
insl
gs
pop
ret
mov
dec
lods
adc
addl
ds
mov
mov
add
loop
stos
adcb
outsb
mov
jecxz
inc
mov
or
jg
ret
sub
cmpsb
leave
aad
and
out
cmp
pusha
and
inc
xchg
xor
movsl
push
mov
cld
aad
jb,pn
mov
xchg
mov
dec
jmp
jno
ret
arpl
cld
insb
cmc
cmpl
pushf
sbb
dec
mov
pop
inc
into
sahf
enter
xor
shld
int
push
mov
sub
xor
xchg
out
aas
or
shl
pop
jnp
daa
add
lock
push
or
dec
jge
rolb
outsl
mov
cmp
sbb
xor
aas
or
fsub
in
adcb
jnp
stos
xchg
out
ds
aas
and
es
clc
stos
mov
jo
out
repnz
pop
pop
dec
stos
pop
pop
lret
add
inc
lds
jns
test
out
mov
sbb
ret
or
fwait
rcr
ret
mov
jge
in
decl
sahf
mov
loope
xchg
jmp
sahf
or
mov
cltd
cmp
mov
lahf
adc
rorb
dec
xchg
sub
mov
movsb
js
fsubrs
outsl
adc
pop
inc
pop
mov
inc
icebp
cmp
jbe
mov
mov
mov
js
in
sub
cmp
aad
or
inc
icebp
test
push
mov
xchg
leave
out
add
rcll
dec
sarb
fmuls
xchg
jg
idivl
fcoml
loope
test
xchg
mov
cmpsl
cltd
mov
push
sub
jge
push
clc
pop
stos
add
and
push
and
jae
lret
adc
jmp
add
cltd
clc
push
test
dec
mov
xorl
add
sub
xchg
add
and
sub
std
es
sbb
sub
push
and
xchg
inc
lahf
sub
mov
dec
fwait
sbb
sub
aad
subb
aam
aaa
push
movsb
add
int3
mov
lds
pusha
xchg
push
sbb
imul
or
insb
sub
and
stc
or
sbb
imul
daa
test
add
fiaddl
loopne
je
test
frstor
adc
jns
sti
incl
mov
push
insl
sbb
cmpsb
jp
sub
xchg
push
xchg
les
nop
mov
out
mov
sbb
imul
in
stc
mov
nop
imul
arpl
adc
je
jnp
xor
cld
push
mov
sub
xor
mov
sub
je
inc
psraw
xchg
mov
clc
jmp
and
add
loopne
sub
popf
pop
mov
inc
adc
sbbb
movsb
sbb
mov
add
data16
and
cltd
mov
adc
push
movsb
leave
shrb
or
rcll
and
xor
mov
sub
jae
jnp
xchg
cs
lret
xor
clc
movsb
jb
inc
addr16
mov
add
mov
mov
ret
xchg
pop
push
shll
dec
stos
neg
jns
pop
mov
pusha
rcr
in
mov
xlat
jbe
xchg
or
xor
mov
gs
cs
jge
add
jg
inc
dec
mov
nop
pushf
popf
mov
mov
fisubs
divl
out
mov
mov
pminub
div
or
popa
icebp
in
hlt
mov
jg
jnp
stos
lods
mov
out
pop
enter
mov
shlb
addr16
dec
fildll
addl
sahf
imul
std
ljmp
xchg
cmpsb
mov
test
inc
mov
dec
dec
sub
pop
inc
lds
lock
mov
pushf
cwtl
outsl
sbb
movsl
inc
fcompl
sti
not
ds
lds
or
test
cli
xchg
cmc
xchg
adc
and
gs
push
sahf
and
shlb
xchg
daa
mov
push
lahf
add
pop
mov
es
lods
subb
scas
mov
sahf
mov
loop
push
xor
jae
int
push
inc
cmc
lahf
jmp
mov
mov
js
push
and
mov
cmp
sub
mov
stos
jg
push
mov
xchg
inc
cmpsb
jbe
lock
pushf
sbb
shlb
ds
inc
pop
or
xchg
adc
xor
leave
rep
sti
xchg
imul
pop
mov
aas
movsb
sbb
inc
push
sub
in
jg
xchg
iret
cmp
inc
mov
cmpsl
push
sar
ret
mov
inc
jl
and
lret
faddp
and
lds
xchg
movsl
lret
mov
fwait
mov
mov
sub
inc
mov
mov
mov
push
ret
ljmp
out
pop
mov
sbb
mov
sub
shl
int3
cltd
scas
outsl
in
pop
es
in
int3
adc
aad
dec
push
stc
dec
out
subl
jns
mov
roll
push
cmpsb
mov
stos
test
fldt
push
adc
scas
sub
inc
dec
cli
inc
mov
stos
xor
and
iret
iret
jb
inc
sub
xchg
sub
xor
fcompl
mov
mov
popa
cld
outsl
sti
push
cmp
lret
jae
insb
push
fs
push
mov
aad
xchg
adc
sbb
xchg
lea
shrl
stos
out
bound
les
dec
or
ja
out
clc
xchg
cmp
pop
loope
add
add
inc
movb
dec
mov
lds
cwtl
mov
xchg
fs
jge
out
sahf
push
or
insl
es
stos
add
and
and
fs
pop
pop
sub
xchg
sub
or
dec
loopne
inc
and
fimull
loope
rorl
les
lret
xchg
lcall
mov
dec
aas
sbbl
and
or
inc
jle
stos
mov
jg
push
sub
es
jl
xchg
xchg
or
jnp
push
xor
nop
pop
cli
adc
jmp
lea
sbb
enter
and
imul
pop
les
loopne
outsl
push
push
xchg
lods
in
jo
repnz
divl
xchg
jno
push
xchg
int
stos
call
mov
push
je
mov
sbb
ret
dec
mov
adc
xchg
sbb
mov
xlat
mov
dec
scas
add
add
push
and
jecxz
in
lcall
or
push
xchg
xchg
lcall
lods
add
and
dec
psubd
lret
mov
or
cmc
and
jne
and
mov
lret
decb
cli
xor
push
inc
mov
lock
add
cmp
xorl
jnp
xor
aas
sbb
xlat
ja
sub
imul
insb
jge
hlt
ss
shl
add
rclb
addr16
mov
lods
test
mov
aas
aas
out
push
inc
lods
jno
loopne
loope
push
jne
push
leave
pop
push
xchg
cmp
mov
cltd
dec
jo
mov
scas
test
lock
jg
jno
cmpl
subl
dec
fsubl
or
outsb
mov
and
int3
push
call
leave
in
leave
mov
sub
ljmp
xor
gs
sar
or
push
popf
push
insb
cmp
aad
push
cwtl
ret
sbb
push
lcall
fucom
push
pop
call
mov
xor
xchg
mov
jle
pop
repnz
shlb
gs
or
jo
pop
mov
mov
call
mov
pop
nop
push
sbb
iret
cmp
push
mov
pop
or
adc
and
rcrl
jnp
and
xchg
ss
out
in
mov
or
pusha
inc
cmp
ljmp
out
jg
shlb
sub
test
stc
xor
mov
insl
addr16
stos
loop
mov
pop
push
sbb
lcall
inc
das
push
dec
pop
fldcw
mov
mov
mov
fldcw
mov
xchg
and
dec
cmp
jp
imulb
push
rcrl
push
test
sbb
movsl
add
data16
sub
mov
pushf
xchg
mov
jge
and
jb
ss
push
sub
jb
and
xchg
pop
sub
push
clc
or
divl
filds
and
iret
addr16
jge
int
push
xchg
lahf
mov
and
ljmp
xchg
aas
adc
cwtl
mov
xorl
cmpsb
cmp
pop
into
movsl
or
std
pop
jbe
and
movsb
orl
push
jnp
mov
out
in
sarb
aas
pushf
sahf
mov
sbb
cmc
inc
cs
sbb
movsl
dec
mov
cltd
out
adc
jnp
mov
mov
shlb
shlb
out
insl
add
aam
shl
and
call
clc
xchg
cmp
xor
leave
cmp
adc
xor
mov
mov
ja
bound
add
push
cmp
dec
mov
add
or
xchg
bound
mov
lcall
xchg
and
mov
add
leave
fnsave
out
lock
insl
ret
or
pop
add
repz
ljmp
and
repz
into
and
mov
jge
pop
rcll
test
jne
mov
sbb
mov
mov
jno
mov
dec
fidivl
fdivrp
test
aas
sub
push
loop
push
lds
int
jmp
rcr
mov
mov
sbb
mov
pop
lahf
aas
sbb
and
add
push
cmp
push
stos
cmpb
xchg
or
outsb
adc
rcrb
out
test
mov
lahf
push
or
sub
inc
mov
or
inc
mov
test
lcall
lods
addr16
clc
arpl
push
push
lods
stos
push
sub
sub
xchg
pop
rcr
out
lods
std
push
mov
pop
cmp
cmp
enter
inc
insl
or
out
aad
rorb
std
push
xlat
pop
mov
fldt
pop
imul
dec
bound
pop
sbb
add
insl
bound
lea
out
and
outsl
or
sub
fidivs
mov
sbb
addb
xchg
jae
insb
daa
imul
pop
std
pop
mov
shl
sub
xor
orl
push
rcrb
push
adc
jae
cmp
arpl
adc
jns
pop
push
inc
push
shll
sub
jae
test
pop
sub
xor
mov
mov
inc
mov
lret
mov
jmp
pop
loope
ds
push
scas
sbb
mov
call
insb
test
cmp
xor
dec
cmpsl
adc
dec
loop
push
loopne
iret
nop
xchg
fsubr
lcall
sub
enter
dec
ja
add
jns
rorl
jne
sti
inc
inc
fimull
xchg
stos
fwait
divb
add
out
fcoml
dec
sbb
inc
fs
popf
xchg
fistps
in
pop
xchg
cmp
in
aad
imulb
push
nop
aaa
sbb
mov
or
enter
ja
dec
test
xchg
and
imul
sahf
push
jnp
xor
daa
ds
xchg
shlb
cli
mov
or
out
in
iret
jmp
jnp
xchg
add
daa
sub
pmaxub
imul
cmp
mov
inc
jl
add
xchg
js
mov
je
call
jl
sub
ss
xchg
fidivl
jnp
test
mov
mov
ljmp
pushf
and
ss
inc
mov
dec
add
lds
sti
cs
sub
cmp
bound
add
repnz
mov
xor
in
pop
pop
mov
stos
mov
jmp
pop
adc
xchg
cmp
cmp
lea
xor
jmp
ss
cmc
dec
dec
xor
bound
mov
jns
scas
pop
out
jne
test
mov
mov
sahf
cmpb
mov
leave
das
jae
xchg
fisubrs
outsb
pop
movsl
adc
sbb
popf
divb
jge
ret
test
pop
xchg
dec
aas
fucomi
jno
int3
pop
mov
scas
sti
sub
lds
pop
add
xchg
orb
add
in
mov
and
or
xchg
mov
mov
lret
mov
dec
push
sbb
adc
xchg
int3
jae
sub
fwait
pop
pusha
stos
mov
mov
sub
ss
ljmp
outsb
sahf
ljmp
jecxz
sarl
xlat
push
loopne
and
in
cli
testb
add
mov
js
je
nop
xchg
inc
movsl
or
ja
pop
nop
xchg
cmp
pop
ja
ljmp
xor
and
loope
fs
lods
imul
icebp
std
mov
movsl
jecxz
cwtl
scas
and
pusha
pop
stos
cmpsl
test
cmp
lds
push
xor
pop
imul
pop
lods
test
lcall
push
lods
sbb
insb
stos
test
std
mov
xchg
jmp
outsl
xchg
xchg
jne
cmpsb
or
mov
js
push
stos
nop
sbbb
fcomps
jmp
lcall
pop
iret
mov
push
mov
aaa
popf
mov
sti
imul
pop
mov
jb
test
cmpsb
sub
lahf
pop
mov
popa
sub
mov
cmp
inc
pop
mov
sub
cmp
push
fcoms
xchg
rcll
xor
xchg
lcall
add
fistps
adc
inc
mov
jge
add
pop
out
rclb
mov
testl
inc
pop
push
mov
adc
sub
gs
aam
pop
push
cmp
dec
add
xchg
pop
cmp
lret
insl
mov
shr
in
cmp
loopne
outsl
scas
out
sbb
mov
cmp
lock
subl
or
pop
adc
pusha
fwait
or
inc
xchg
aad
cmp
cmp
aad
jge
repz
mov
lods
mov
xchg
in
add
test
or
std
adc
cmp
push
pop
sub
jae
lods
scas
adcl
xchg
push
mov
add
add
push
movsl
add
push
loope
push
add
inc
add
xchg
test
and
into
xor
and
adc
mov
or
jge
sub
orl
sbb
mov
xchg
mov
jnp
fildl
int
popf
xchg
stos
mov
xorl
dec
out
std
pop
jnp
enter
out
cltd
jecxz
data16
push
mov
xchg
xchg
mov
push
into
sub
mov
and
xor
push
repz
dec
stos
es
jmp
adc
in
xchg
jb
mov
or
lock
neg
insl
cmpsb
pushf
push
pop
xchg
mov
cmp
sti
sti
shll
imul
xchg
mov
inc
jecxz
dec
add
push
inc
add
pop
mov
pop
xchg
arpl
arpl
sbb
cmp
ljmp
shl
addr16
mov
sahf
das
add
push
add
xor
inc
pop
mov
jge
clc
jl
cmp
int
adc
popf
mov
pop
fisubs
insl
inc
xchg
push
mov
push
shrb
fsts
fsts
aas
movsl
sub
lock
inc
bnd
mov
mov
adc
push
xchg
shlb
decl
sti
jne
out
mov
inc
push
lcall
ds
std
push
divb
cmpl
lods
add
je
test
jp
test
push
xchg
xchg
jb
pop
mov
sub
fidivrl
dec
push
mov
cmpsl
xlat
fidivs
push
push
repnz
xor
push
cmpb
xchg
ja
mov
adc
cli
push
xchg
andl
pop
es
icebp
xchg
lea
gs
mov
mov
add
jo
ret
xchg
add
dec
sub
lret
xor
add
inc
test
dec
pop
pushf
std
pop
add
mov
push
ret
outsl
aaa
sahf
sti
inc
pop
cmp
push
cwtl
loop
jg
adc
push
and
pushf
dec
enter
fwait
lock
jmp
xor
xchg
or
or
push
loop
daa
inc
cmp
push
push
movsl
mov
xor
cmp
mov
je
es
xchg
rolb
out
dec
in
xor
sub
js
cmp
lods
jne
mov
popf
int
xor
xor
addr16
sub
hlt
cmp
jl
mov
and
mov
cmp
imul
nop
and
push
imul
and
sahf
jae
adc
adc
leave
das
mov
repz
scas
or
mov
mov
pusha
dec
mov
xor
dec
mov
push
cmp
pop
adc
sahf
xchg
cld
mov
add
adc
nop
bound
addr16
mov
cmp
insl
scas
test
inc
in
fs
xchg
mov
sbb
xchg
scas
or
stos
imul
jae
insb
mov
pop
les
dec
add
add
add
or
xor
in
add
sbb
fnstcw
lret
fs
insb
jnp
pop
xor
cwtl
dec
aas
adc
pushf
and
jl
ljmp
fimull
or
adc
jbe
daa
cmp
adc
push
rcrl
and
cs
call
mov
mov
jns
divl
cmp
push
xchg
sub
xor
mov
push
lea
pop
test
rorl
sub
add
adc
dec
lret
jecxz
cmpsb
adcl
xchg
fld
mov
not
jne
mov
sbb
xor
outsb
or
andb
push
popa
cmp
mov
fistl
test
int
jno
repnz
or
cmp
movsb
dec
rcr
cmp
mov
xor
in
bound
and
out
mov
mov
std
dec
jmp
sub
imul
insb
out
mov
pop
jg
inc
push
jmp
sbb
aas
jns
dec
bound
adc
test
fsubr
cmpsb
pop
jg
je
iret
mov
arpl
add
push
inc
pop
push
sahf
scas
fsts
sbb
mov
sbb
xchg
shlb
mov
push
dec
insl
mov
pusha
aam
notl
xchg
sub
lahf
call
loopne
lahf
aaa
sub
pop
lods
sarl
sub
sub
jl
mov
xor
sub
mov
pushw
adc
std
test
mov
and
inc
arpl
xor
mov
icebp
mov
dec
add
jnp
clc
push
aaa
test
cltd
ss
pop
ja
icebp
icebp
and
push
dec
push
lcall
aad
or
fistps
push
cld
dec
pop
xchg
popf
aaa
sahf
into
pop
scas
and
push
push
test
stos
cltd
adc
test
or
push
mulb
or
pop
and
jno
push
add
outsl
je
jmp
mov
scas
clc
add
push
or
xchg
inc
pop
xor
sbb
enter
xchg
cld
insl
mov
bound
in
mov
jb
jle
cs
faddp
outsl
xor
or
or
jb
call
adc
nop
push
dec
jnp
stc
fdivrl
jne
mov
mov
jle
stc
cltd
ret
mov
imul
mov
mov
push
sub
xor
mov
es
mov
add
ret
pop
inc
pop
mov
lods
leave
and
jle
inc
sub
and
mov
mov
mov
cltd
and
jae
jo
and
lods
rcl
or
jbe
lcall
aas
xor
jmp
mov
jmp
loop
mov
popf
lds
aad
aam
imul
mov
push
das
xor
ja
stos
mov
idiv
dec
das
int3
dec
je
int
inc
mov
fldenv
mov
fwait
arpl
inc
cmp
jle
cmp
daa
jge
xor
jb
sub
cmp
mov
dec
dec
push
clc
push
pop
add
vcvtss2sd
bound
adc
outsb
loope
lods
mov
cs
xor
mov
fsubrs
aaa
int
lcall
adc
adc
adc
out
pop
movsl
xor
out
dec
mov
test
xor
mov
add
mov
pop
or
ss
adc
cmc
jge
insb
clc
ud0
or
mov
xchg
or
pop
mov
push
fisttps
and
jno
rolb
jle
pop
fsts
cmp
fucomip
dec
lret
fidivrs
pop
xor
nop
sahf
imul
jno
sub
orl
dec
mov
xchg
in
clc
loope
or
in
repz
test
inc
negb
in
fidivrl
push
adc
aad
mov
nop
xlat
xlat
clc
imul
mov
mov
xchg
cmpsb
outsl
dec
jmp
sbb
fpatan
repnz
out
or
cmc
dec
scas
lret
mov
daa
mov
jno
inc
call
cmp
mov
cmc
cltd
dec
pop
jecxz
xchg
inc
iret
scas
sahf
int3
test
inc
cmpsl
push
les
dec
dec
ss
ss
add
pop
int
sti
add
jno
mov
sub
movnti
sub
jb
dec
bnd
in
sub
stos
pusha
movsl
bound
int3
into
or
hlt
or
mov
adc
ret
or
cld
xor
jo
aam
push
fimull
push
xorb
cmp
add
adc
daa
xchg
shrb
call
fdivr
mov
fldcw
cld
push
jmp
aaa
sbb
push
mov
xor
dec
loopne
cmp
mov
pop
xchg
mov
cmp
mov
icebp
mov
push
dec
mov
gs
leave
arpl
out
dec
stc
mov
int3
add
push
mov
jle
not
cmpsl
aas
popf
or
mov
ret
je
add
push
out
movsb
or
cmp
lahf
pop
cmpsb
mov
sti
sub
mov
jmp
pop
mov
int
insb
enter
jge
jg
cmpsb
lds
cwtl
xchg
mov
sbb
gs
mov
pop
hlt
fildll
call
sbb
pop
inc
fadds
add
adc
and
movsl
clc
out
mov
ljmp
xor
icebp
les
sbb
xor
lret
lret
adc
or
xchg
xchg
aam
mov
aas
adc
jbe
rcll
hlt
loopne
adc
mov
jp
or
and
outsl
cmc
mov
pop
cmp
das
mov
icebp
sub
xor
les
and
repz
data16
jb
dec
sub
icebp
imul
cmp
sarb
push
test
push
sti
fwait
mov
push
xchg
repz
enter
insl
repz
inc
mov
shrl
lds
adc
push
bound
negl
xlat
mov
sub
or
mov
stos
fdivrs
scas
shll
mov
xchg
mov
add
inc
sti
lds
cmp
push
lret
cld
mov
jo
add
adc
fst
mov
in
hlt
in
pop
sbbl
out
inc
shlb
mov
push
xor
outsl
sbbb
imul
dec
inc
jmp
mov
xchg
pop
and
scas
or
mov
out
in
adc
cmp
pop
ret
mov
stos
sub
ret
mov
je
addr16
fbld
xchg
mov
pop
ja
out
adcb
mov
insl
aaa
fwait
repz
arpl
les
jbe
scas
push
inc
sub
jg
ret
gs
adc
lcall
ds
stos
push
iret
xchg
adc
xchg
pusha
ss
cmp
das
xor
inc
pop
xchg
in
mov
xlat
and
mov
push
pop
out
add
push
das
add
dec
jae
cmp
push
mov
stos
insl
sets
inc
or
add
loope
push
adc
push
out
or
test
dec
inc
addr16
add
cwtl
out
cmp
cmp
add
or
cli
cmpsb
adc
lea
aad
test
jnp
jmp
xlat
pusha
push
es
or
push
inc
and
jge
push
lock
ficoms
cld
inc
lea
repz
test
xchg
dec
and
xchg
mov
xor
push
mov
push
mov
and
sbb
adc
adc
in
or
dec
mov
add
fnstcw
ds
arpl
add
leave
jae
mov
and
pop
ret
adc
sti
addr16
ret
data16
xchg
jle
stos
into
stos
repz
outsl
sarb
lahf
mov
fimull
rcrb
cmpl
std
and
sbb
fsin
icebp
out
test
jns
test
mov
mov
adc
xchg
rcl
inc
xchg
mov
in
mov
pop
xlat
xchg
inc
xchg
mov
sbb
jle
or
jo
dec
sbb
icebp
div
sbb
adc
repz
cmc
faddl
call
in
mov
loop
cmp
jecxz
addr16
notl
mov
and
cmp
testb
insl
push
adc
aad
dec
push
sbb
adc
scas
dec
add
adc
xor
shll
fistps
sbb
cmp
cs
out
sti
outsl
mov
fdivs
incl
dec
dec
inc
inc
xor
fcompl
and
iret
and
cmp
dec
or
lcall
lock
jmp
jae
lea
push
push
mov
movsb
lcall
cwtl
subb
push
pushf
ret
jnp
in
cli
mov
int
lret
fdivrs
daa
adc
xor
iret
out
cmp
xor
cmpsl
cmp
stos
sbb
outsb
shlb
clc
push
imull
xchg
mov
fnstsw
add
testl
leave
mov
or
loope
clc
ror
cmp
lods
mov
inc
imul
jne
es
xabort
int3
fdiv
dec
inc
or
fdivp
or
push
rcrb
sbb
jns
xchg
add
xchg
stos
cmpsb
or
cli
in
ret
xchg
mov
xchg
xchg
push
push
mov
mov
adc
push
xchg
cmpsb
in
push
add
add
ljmp
push
push
mov
adc
fwait
pushf
add
cltd
decl
sbb
mov
shlb
add
enter
cmpsb
pop
fwait
mov
or
test
rorb
sub
pop
xchg
mov
insb
cmp
and
lods
loopne
push
dec
jp
mov
push
lahf
inc
xchg
scas
mov
inc
inc
jo
push
je
cmp
jecxz
pusha
mov
insb
xchg
lods
push
call
arpl
stc
dec
orb
jle
inc
fs
push
pop
mov
dec
lods
test
in
fadds
push
xor
dec
push
push
mov
aam
loop
mov
or
jo
dec
sbb
imul
dec
in
gs
xor
dec
mov
dec
xchg
pop
fiadds
repz
movsb
lods
clc
ja
stc
push
mov
cs
iret
jno
ret
mov
mov
mov
cwtl
movsl
xchg
sti
int3
frstor
xor
jmp
popa
dec
add
rclb
pop
jge
push
repnz
aad
je
scas
enter
add
gs
adc
mov
subl
dec
jno
inc
lods
xchg
jae
subl
sbb
pop
add
fstl
fsubs
xor
xchg
lret
les
dec
push
xor
jmp
cmpsl
sub
jnp
adc
jecxz
pop
ljmp
sbb
adc
jo,pt
inc
in
jle
jno
lock
icebp
out
in
outsl
mov
ror
mov
mov
or
jnp
xchg
popf
push
movl
push
push
movsb
inc
and
xchg
pop
and
xor
mov
sarl
int
lret
adc
in
pop
in
mov
xchg
sub
lret
sub
pop
cmp
fnsave
sbb
adc
xchg
jno
sbb
or
das
bound
xchg
imul
daa
mov
scas
or
jmp
imul
cmpsb
sub
sbb
repz
std
add
sbb
xor
fcomip
faddl
cmpsb
adc
imul
movl
test
cmpsl
int3
lret
movsb
loop
addr16
jns
sub
jae
movsb
dec
pusha
mov
xchg
xor
cmp
sbb
sbb
rorb
leave
dec
mov
xlat
cli
xor
sbb
xchg
or
or
sbb
rcrb
sti
ret
les
sbb
arpl
inc
jnp
shl
arpl
out
rsm
xlat
pop
test
fdivl
sub
or
test
lods
inc
dec
mov
mov
xchg
xor
fiaddl
gs
shll
and
pusha
mov
test
pop
gs
sub
sub
je
or
in
pop
in
xor
inc
push
retw
cmpsl
cs
push
or
stc
or
mov
mov
jge
jl
test
test
ljmp
sarl
add
test
movb
les
xchg
daa
xchg
insl
jb
shrl
aam
cli
pop
mov
call
lock
add
iret
mov
inc
push
sbb
stos
adc
push
stos
xchg
jg
add
iret
test
mov
adc
add
pushw
or
or
inc
loope
mov
push
mov
sub
ja
cmp
mov
je
cmpsb
push
xchg
adc
dec
loopne
pushf
shlb
faddl
mov
cmp
xchg
aad
andb
jmp
dec
je
sbb
repz
lods
adc
rcr
rcll
or
lea
adc
movsb
popf
dec
push
xor
outsl
pop
movsl
mov
fisttps
dec
movsb
push
data16
cld
in
jge
lcall
adc
push
repz
push
jg
or
mov
mov
jns
mov
inc
sbbl
mov
loope
rcll
cmpsb
lret
push
das
loopne
loopne
into
adc
fs
pop
push
lret
es
outsb
xchg
mov
add
jae
jp
and
and
enter
ds
scas
pop
sbb
out
xor
incl
stc
pusha
ljmp
mov
das
inc
fsubl
outsb
pop
leave
sbb
xor
test
sub
sub
push
xor
inc
icebp
push
xor
push
icebp
push
jecxz
cmp
mov
cmpsb
loopne
stc
lock
ljmp
mov
jno
ret
outsb
stc
jl
add
xchg
stos
insb
push
out
cmc
pop
lds
inc
fucom
daa
or
negl
dec
dec
sbb
iret
fisubrs
xchg
stos
psraw
test
push
xchg
mov
push
imul
push
lret
dec
aam
dec
pop
inc
rcrb
out
imul
popl
jbe
push
mov
cmp
int
sub
mov
sub
int3
and
ds
dec
sub
cs
push
lcall
sbb
dec
std
jle
push
pop
push
mov
sub
int3
bound
push
jmp
gs
and
mov
jecxz
leave
fsubrs
test
pop
addr16
sub
stos
sub
and
leave
out
and
push
mov
mov
setge
and
cmp
loop
cwtl
adc
loope
fwait
cmp
out
movsb
xchg
rorb
ss
pop
mov
dec
xor
or
in
pushf
add
push
pop
pop
mov
xlat
jge
xchg
mov
ljmp
lret
outsb
cmp
mov
or
push
hlt
ja
xchg
mov
pop
add
xchg
push
in
or
xchg
clc
aas
aas
in
cmp
nop
cmp
and
pop
push
ljmp
fwait
into
fmuls
loopne
je
lods
xchg
stc
xor
or
inc
mov
pop
das
push
pusha
rcll
adc
jmp
shrl
jp
ret
dec
pop
mov
mov
dec
enter
out
aaa
cli
dec
cmc
add
sbb
mov
cld
ret
adc
nop
and
loope
push
xor
or
leave
cmp
xor
out
jl
out
mov
test
es
mov
or
jns
mov
and
pop
in
jo
mov
test
or
cmp
mov
cwtl
and
sbb
js
jle
popf
push
ja
lods
call
mov
popa
mov
pop
cmp
stos
adc
add
jmp
and
adc
push
pop
pop
fnstenv
outsl
pusha
cltd
and
aam
lcall
mov
mov
and
into
push
mov
aas
xchg
movsb
mov
fimuls
push
or
leave
jb
adc
sbb
dec
jg
ja
adc
and
ret
js
jge
mov
lahf
call
pop
add
lea
xchg
jle
bound
and
outsb
mov
mov
mov
mov
sbb
xchg
dec
jl
pop
adc
sbb
jecxz
sti
movsl
jl
push
dec
mov
push
popa
nop
das
lahf
addb
inc
test
int
movsb
push
pop
shl
mov
adc
sub
cmpl
mov
jns
popa
clc
dec
jno
sub
leave
jno
adc
mov
nop
mov
data16
and
xchg
cmpsl
fs
cmp
pusha
sub
clc
leave
imul
add
sahf
pop
mov
pop
dec
adc
dec
icebp
cli
out
inc
flds
jo
xchg
pop
in
in
clc
dec
and
cmc
psllw
pop
das
xchg
lcall
fistl
push
cmp
xchg
movsl
scas
lods
xchg
mov
dec
mov
out
jle
push
nop
pusha
lds
jo
mov
mov
aam
and
sub
cmp
sbb
icebp
sub
paddb
adc
hlt
sbb
mov
push
lcall
cmpsb
insb
xor
aad
sub
movsb
xor
imul
cmp
adc
scas
xchg
sahf
cmp
pop
and
add
mov
xchg
and
push
mov
jo
pop
sbb
cltd
sbb
dec
jno
fdiv
test
mov
push
pushf
insb
std
insl
mov
test
push
or
dec
arpl
add
inc
ret
push
lret
popf
aad
inc
and
rolb
imulb
add
cmpsl
adc
pop
or
popf
insb
pop
popf
mov
xchg
pop
push
push
lcall
push
push
ja
aas
jne
popf
stc
and
push
and
arpl
xor
sti
out
push
dec
movsb
ds
lods
sub
jecxz
push
shlb
test
es
enter
scas
xor
call
je
lds
cmp
lret
push
loopne
stos
das
repz
mov
test
lods
int
mov
enter
leave
daa
mov
inc
mov
bound
mov
fisttps
lret
fimuls
cltd
mov
scas
in
or
out
loop
std
out
imul
insl
push
pop
or
mov
inc
gs
lahf
push
cs
inc
ds
lods
sbb
enter
iret
push
pusha
bound
lods
xor
js
xchg
aas
pop
jne
and
pushf
mov
in
nop
xor
outsb
jmp
inc
xchg
mov
adc
push
xchg
jb
dec
add
mov
pop
ret
mov
dec
add
arpl
add
jne
xchg
addr16
push
repz
fs
mov
lret
test
mov
out
inc
add
daa
add
inc
jb
cmp
xchg
push
int
lods
pop
jnp
mov
into
mov
jns
pop
xor
cs
adc
insl
mov
loope
and
pusha
cmp
je
ret
xchg
inc
mov
jns
sbb
cmc
lcall
xor
das
mov
or
dec
cld
adc
aam
xchg
fcoml
and
mov
push
out
cmpsb
sbb
mov
int
jns
ja
mov
adc
loop
cmc
xchg
aas
out
lods
xchg
jo
fsubl
into
stos
inc
aaa
pop
mov
out
cmp
push
shlb
pushf
dec
pusha
notl
imul
loope
mov
cwtl
gs
pop
enter
mov
dec
psrad
lock
mov
rorl
xchg
das
jmp
out
sbb
loop
add
aam
sbb
int3
addr16
cmp
js
jnp
pop
xor
aaa
repnz
push
push
stos
xchg
pop
cmp
pop
daa
fs
xchg
jns
jmp
pop
nop
lcall
cld
or
adc
xchg
cmp
mov
inc
jne
xor
mov
and
jnp
pop
adc
fs
shlb
jl
dec
xchg
movsl
aaa
sar
data16
sbb
push
aas
aaa
or
mov
sbb
pop
mov
out
adc
add
lahf
ds
insb
xchg
sarb
out
sbb
mov
ret
cmc
jae
cmp
ss
add
inc
enter
push
loopne
or
aad
fcoms
sub
jmp
pop
and
cmp
mov
or
pop
mov
into
enter
adc
pop
push
dec
jmp
cmp
lahf
push
xor
inc
xchg
sahf
cmp
insb
insl
cltd
inc
xor
aam
cli
and
ds
mov
aam
add
add
in
addr16
push
cmpsb
add
dec
add
sub
mov
sbb
or
lods
xchg
pop
cwtl
sbb
cmp
jp
push
xchg
or
int3
sub
xor
xchg
mov
adc
dec
pop
in
insw
push
lret
in
mov
orb
pop
sub
insb
aaa
adc
cltd
std
inc
mov
mov
hlt
leave
jno
arpl
test
addb
push
mov
test
or
mov
pop
add
aad
jmp
dec
test
jns
cmpsl
cwtl
jo
xor
ds
sub
or
pushf
adc
repnz
sbb
xor
pop
addr16
lea
insl
mov
push
inc
xchg
std
and
sahf
jl
sub
andb
fldl
loopne
mov
mov
push
dec
clc
mov
push
mov
mov
loop
adc
test
jp
shrl
aad
inc
push
outsl
jns
int
xor
lcall
dec
pusha
jle
lcall
in
push
or
sbb
cmp
push
add
push
cltd
xor
lahf
out
in
sbb
lods
or
rcll
ljmp
pushf
pop
loopne
mov
jae
inc
jbe
int3
dec
xorl
cltd
jp
xor
stos
stos
fsubrp
pop
sub
std
push
cmpsl
and
mov
sti
mov
fldt
ljmp
cltd
and
into
dec
test
mov
push
dec
cli
std
out
add
iret
pop
outsb
jmp
scas
dec
cli
in
and
mov
sub
cli
out
insb
gs
dec
popa
rcrl
cld
sub
dec
push
jns
push
mov
les
movsb
cmp
mulb
xchg
jno
ljmp
mov
pop
fdivrp
dec
mov
cwtl
pop
fwait
dec
roll
out
clc
mov
cld
mov
pop
in
imul
call
or
pop
loop
clc
or
sti
aad
hlt
sub
xchg
loope
fnstsw
push
movsb
cmp
cli
mov
push
test
test
shr
push
scas
addr16
movsl
add
sti
loopne
mov
mov
adc
mov
adc
lret
cmp
inc
popa
lea
and
movsb
sub
sbb
imul
roll
data16
mov
into
lock
and
jb
push
scas
test
push
mov
rol
stos
xor
adcb
mov
jl
push
cmpsl
aad
fsqrt
out
sub
jb
leave
dec
and
cmpsl
mov
in
scas
and
gs
ja
fmulp
mov
ficoms
lods
jbe
mov
cmp
repz
xchg
jo
and
int3
push
and
in
sahf
pop
sbb
sub
xor
jg
test
loop,pt
fsubrs
cmp
cmpsl
push
fstl
lock
push
jbe
jno
xor
jae
mov
out
int
cmpsl
xlat
mov
mov
out
push
iret
xchg
push
cld
hlt
or
xorl
les
and
mov
and
xchg
mov
ds
flds
jg
jle
cmp
push
mov
int3
movsb
insb
shl
andl
mov
push
inc
jecxz
mov
pop
aam
xor
mov
jno
mov
fildll
sbb
mov
scas
loopne
sbb
add
iret
push
xor
adc
mov
and
mov
pop
dec
push
cli
sub
iret
lcall
mov
out
sahf
lods
jb
pop
mov
push
ret
lcall
lcall
ljmp
into
push
sahf
sarb
or
push
stos
sti
push
fldl
cld
setl
lods
lds
lock
sbb
add
lock
fstpt
dec
rorl
sub
and
adc
bound
or
mov
adc
pop
add
outsb
out
loopne
push
xchg
xor
mov
jp
pop
movsb
cli
jge
or
popa
or
sub
fildl
fcmovnbe
mov
push
arpl
push
jle
cmp
xchg
daa
jo
push
aaa
mov
xorl
pop
xor
insl
fistpll
dec
mov
xor
jno
xor
shr
mov
mov
test
insl
mov
stc
cmpsb
into
int
mov
sbbl
cli
fdivr
mov
into
add
jg
mov
popa
jl
push
sbb
mov
cmpsl
and
iret
out
in
loopne
jne
in
scas
lcall
nop
cwtl
xor
dec
rcrb
and
or
mov
adc
orl
pmaxub
dec
push
mov
popa
ljmp
inc
cmp
mov
xchg
out
iret
mov
push
out
pop
fmull
mov
push
pusha
mov
ds
jbe,pt
mov
mov
pop
cmpsb
test
add
mov
lods
add
ljmp
lret
sbb
pop
scas
push
push
ljmp
mov
mov
jmp
mov
jb
insl
sbb
mov
push
push
mov
mov
cmpsl
mov
cmpsb
or
xor
pop
mov
or
frstor
test
shll
stc
stos
out
or
sub
jbe
fwait
xor
xchg
pop
sub
add
inc
pop
mov
pop
out
sub
repnz
fstps
cs
cmp
push
je
ss
mov
repz
data16
mov
xchg
pushf
ja
lock
mov
sti
adc
sub
mov
rcrb
imul
push
cwtl
xchg
adc
inc
xchg
aam
cmp
frstor
ror
addr16
lret
mov
and
ljmp
lds
pushf
test
ret
mov
mov
mov
xor
sub
imul
mov
push
mov
sbb
pop
pop
jo
mov
gs
pushf
cmc
mov
adc
push
jno
iret
mov
lock
repnz
jbe
popf
xchg
jp
and
jae
xor
cvtps2pd
or
lds
lock
sarb
mov
xchg
data16
data16
mov
mov
pusha
int
faddp
jle
mov
in
add
sbb
add
add
push
testb
adc
test
rorb
rorl
jbe,pt
jg
pop
jle
out
dec
xchg
jle
mov
jle
mov
test
or
lods
inc
in
xchg
and
lret
push
sbb
push
imul
mov
push
jecxz
mov
ret
add
andl
inc
jg
ret
xchg
push
arpl
pop
insl
and
call
push
fwait
mov
push
xchg
into
pusha
cmc
cmp
pop
push
mov
xorb
fstpt
adc
sbb
xor
sub
js
inc
jg
fnstsw
adc
and
xor
fs
fnstenv
cld
outsl
orl
xchg
cli
mov
cwtl
inc
or
push
cmp
mov
je
jmp
xchg
lret
movl
push
xor
jno
call
cmpsl
add
ror
lods
xor
mov
push
mov
jge
cmpsl
cmp
in
adcb
gs
jl
test
fucomp
nop
lcall
imul
inc
test
mov
pop
jmp
movsb
cmp
push
push
loope
or
jmp
jo
mov
movsb
inc
movsb
push
mov
xchg
push
aaa
daa
roll
sbb
xchg
rolb
adc
push
sti
bound
add
and
cli
sub
loope
aad
or
shll
add
mov
idivb
xchg
fldl
enter
mov
cmpsl
jno
stos
jbe
jecxz
adc
cmp
pop
xchg
push
cwtl
sbb
aam
sbb
adc
dec
fistps
jno
cmpsb
adc
push
adc
adc
addr16
push
inc
add
mov
xchg
pusha
adc
push
aam
dec
fidivrl
mov
fnstenv
arpl
jo
out
cld
mov
outsb
dec
and
fisubs
shlb
mov
cli
bound
xchg
sahf
stos
dec
pop
push
or
mov
jl
sbb
loop
xchg
dec
incb
jo
mov
jp
mov
push
orb
decl
dec
xchg
jmp
sbb
or
sti
dec
or
add
sub
arpl
push
pop
push
and
sub
bound
cmp
rcrl
push
ds
insb
push
cmpsl
ja
imul
lock
or
adc
aas
pop
push
ss
cwtl
xorl
mov
or
out
je
sub
and
pusha
push
push
xor
xchg
jne
pop
and
cmc
cmpsl
outsl
jnp
sub
dec
mov
lahf
mov
sbbl
and
adc
jne
add
push
jecxz
and
adcb
jecxz
push
dec
test
pop
pop
stos
movsl
mov
pop
jbe
mov
mov
imul
in
xor
jg
cmp
lcall
jbe
and
push
and
or
sub
ret
jnp
jmp
lds
mov
push
inc
nop
dec
inc
mov
test
dec
add
scas
lods
movsl
orb
pop
and
pop
testb
dec
cmp
xchg
sarl
faddl
mov
adc
lock
aad
int
xor
movl
xchg
lea
inc
jb
xchg
movsb
addr16
repz
dec
cmp
cmp
dec
push
or
jns
fnstsw
shlb
jg
push
fmull
mov
mov
push
das
dec
flds
mov
pop
adc
xchg
mov
cli
iret
lods
lods
adc
sbb
std
out
xor
and
mov
lahf
out
mov
or
sbb
dec
jb
popa
movsl
rorl
in
mov
mov
inc
add
cwtl
out
mov
mov
cmp
addr16
js
hlt
cmp
dec
inc
cltd
adc
and
lcall
imul
imul
xor
test
mov
inc
out
push
or
mov
bound
mulb
sub
push
mov
cmp
mov
jns
add
dec
sub
aam
sub
dec
mov
lcall
cli
or
in
pop
pop
mov
adc
lahf
fsubrs
push
in
push
fisttpl
ret
xchg
pop
or
stc
sbb
fdivrs
xchg
cmp
push
mov
leave
sbbb
test
lret
mov
test
pop
outsb
sub
sbb
adc
fdivs
fisttpl
cwtl
adc
and
sub
sub
cmp
jecxz
mov
sub
cmp
add
inc
cli
imul
popf
outsb
dec
andb
rcrl
mov
cmp
inc
mov
mov
insb
test
aam
loop
orl
insb
push
sub
cmpsb
cs
js
shll
cmpsl
pusha
pushf
xchg
shl
in
jmp
and
add
subb
xchg
cmp
xchg
push
mov
xchg
pop
mov
pusha
jmp
push
xchg
xchg
popf
sbb
les
pop
arpl
repz
mov
xchg
iret
cmp
lds
cmp
fistpl
scas
adc
xchg
jno
mov
stos
leave
xor
mov
into
sti
cld
jmp
mov
push
test
nop
aad
cmpb
outsl
scas
dec
in
jmp
add
add
jo
add
sub
dec
imul
push
or
ljmp
sub
cmc
insb
dec
scas
mov
xchg
out
repnz
xchg
xlat
mov
outsl
hlt
imul
inc
mov
dec
popa
ficoms
jl
mov
lea
xor
jbe
push
mov
fdivrs
or
fisubrs
out
out
inc
push
outsl
lahf
mov
pop
ss
fsub
aaa
mov
push
sbb
cmc
repnz
orl
mov
add
cmp
mov
jle
fadd
addr16
mov
jne
inc
icebp
dec
mov
mov
sub
pop
xor
in
jge
mov
ficoml
cmp
add
es
loope
push
adc
sti
bsr
push
xchg
jnp
movsb
xor
mov
pop
inc
jl
into
sbb
lock
adc
sub
push
mov
xchg
arpl
mov
jle
pushf
cld
insl
xchg
inc
dec
and
mov
add
dec
pushf
in
and
sub
loope
daa
sbb
mov
sahf
int
mov
out
add
insb
push
into
popa
subl
or
mov
inc
imul
out
pop
push
adc
jbe
loope
js
cmp
cmp
add
imul
cmp
xchg
ljmp
jbe
popa
icebp
test
loopne
push
insb
loop
divl
or
mov
mov
jns
inc
test
jne
popf
mov
mov
push
stos
sbb
lods
std
sub
icebp
lock
xchg
gs
mov
cmp
rcrl
and
ret
mov
stc
in
scas
push
pop
xor
sahf
out
push
out
sarl
and
add
mov
nop
lods
adc
ficoml
push
out
je
lea
add
test
int
lret
sbb
inc
idivb
dec
bound
cli
push
adc
fisubrs
adc
test
cwtl
mov
inc
jbe
xchg
jbe
dec
inc
or
fdivs
imul
xchg
lea
adc
cli
idivl
mov
loop
dec
or
inc
xchg
sbb
sbb
hlt
repz
ret
mov
adc
mov
mov
or
sbb
roll
push
cli
into
icebp
in
cmp
mulb
rorl
stc
push
sub
repz
leave
jg
test
mov
test
dec
cmp
call
cmc
dec
out
or
pop
and
hlt
inc
scas
dec
gs
cs
push
ljmp
pop
lahf
dec
loope
cli
insl
pop
out
insl
leave
int3
or
jle
cltd
adc
js
sahf
lret
pop
and
push
xor
scas
loope
dec
cmp
jp
movsl
mov
lret
adc
mov
cmp
pop
int
rcrb
int3
shrb
inc
cld
fwait
cmp
repz
bound
inc
sub
hlt
cmpsl
arpl
mov
push
cmp
xor
or
movl
lret
stc
popf
lods
frstor
pop
aaa
shrb
mov
cli
out
ljmp
aas
inc
dec
bound
xchg
inc
dec
adc
pop
rcrb
push
ret
and
xchg
sbb
cmp
or
cmp
out
xor
xor
inc
push
adc
push
and
mov
jp
dec
dec
adc
test
sbb
mov
adc
push
addl
dec
mov
sbb
aad
pop
mov
hlt
outsb
ret
mov
sub
fsubrl
cmp
fmull
daa
xor
xchg
mov
lds
xchg
and
inc
pop
jmp
movsl
mov
push
xchg
inc
cltd
and
out
in
xor
sub
aas
xchg
cmpsl
jb
in
lahf
movsb
test
pop
and
into
pop
test
mov
into
cltd
cwtl
in
lret
mov
mov
in
pop
inc
daa
repnz
sbb
dec
xchg
xor
cli
push
iret
adc
movsl
lret
dec
push
jb
adc
fnstenv
clc
test
inc
lea
cmp
and
jmp
xchg
inc
push
roll
ret
push
lods
testl
cmp
or
in
xchg
ljmp
repz
les
orb
and
aaa
fildll
dec
in
jp
dec
adc
sub
push
inc
pop
jp
outsb
mov
sub
fwait
add
mov
and
cmc
mov
mov
cmp
lods
adc
push
push
in
mov
inc
fadds
pop
std
xchg
cmp
stos
scas
and
shrb
fidivs
mov
sbb
sub
lahf
mov
cwtl
aaa
pop
adc
jecxz
outsl
adc
xchg
into
cmpsb
lahf
sub
test
xchg
mov
jnp
push
push
mov
mov
out
clc
loop
psubusw
cmpl
dec
xor
jae
fwait
xchg
cli
mov
push
cmpsb
hlt
pushf
int3
inc
out
rol
shll
sbb
push
test
cltd
fnstsw
dec
in
lahf
hlt
into
outsb
jno
jo
sbb
daa
sub
cmpsb
xor
add
cs
addr16
fs
test
inc
add
out
loopne
js
in
or
push
aas
ret
sbbb
notl
dec
ret
scas
xchg
add
cmc
icebp
fdivr
cmpsl
or
rorb
clc
and
ss
frstor
inc
xor
scas
test
cmpb
fdivl
adc
mov
xor
xchg
jns
mov
rorl
cmpsb
jne
dec
xlat
shlb
mov
push
pop
or
jb
pop
loopne
xorb
dec
mov
ja
sbb
in
test
jge
repnz
iret
inc
lock
mov
loopne
dec
push
outsl
daa
iret
xor
jecxz
stc
adc
mov
mov
mov
pop
mov
cmovno
and
jl
mov
loopne
or
and
xor
mov
inc
and
not
xor
fists
int3
jg
mov
rcrl
inc
jecxz
ja
cmp
mov
xchg
cld
mov
lcall
outsl
subb
or
orb
push
mov
mov
cmp
shlb
jno
test
cmp
lcall
sub
mov
adc
add
shr
sub
pop
adc
or
aad
in
pop
sub
inc
mov
inc
cltd
xor
sbb
nop
sbb
aam
mov
sahf
sti
imull
sarl
les
and
lret
sub
faddl
shr
or
data16
dec
sub
adc
or
rol
xchg
das
jp
bound
call
pop
push
or
xor
in
in
jg
dec
dec
data16
call
and
das
rclb
cmp
lock
leave
ret
inc
es
cmpl
dec
xor
mov
aad
repz
lea
add
fidivrl
push
outsl
jo
incl
popf
lahf
jae
or
je
adc
fwait
enter
xchg
dec
lock
jmp
scas
hlt
out
out
adc
aaa
and
call
mov
or
stos
or
movl
sar
popa
jmp
std
mov
mov
push
dec
dec
lahf
notl
adc
push
pop
ret
fs
insl
filds
shrl
add
popa
jb
dec
cmpsl
dec
js
ljmp
sbb
and
mov
aad
dec
adc
jge
xor
xchg
or
jb
pop
lea
sbb
das
addr16
cwtl
pop
pop
negl
pop
xchg
in
xor
cltd
jne
popa
jl
popf
push
cld
imul
dec
adc
mov
testl
repz
enter
adc
dec
in
mov
push
adc
jne
in
mov
jp
in
mov
movl
mov
or
push
sahf
in
outsl
adc
fiadds
pusha
and
fdiv
xchg
xor
pushf
mov
cmp
cmp
sub
xchg
or
xchg
call
movsb
mov
add
add
or
aad
ljmp
sbb
test
pop
push
mov
movsb
dec
test
mov
out
enter
jmp
cli
dec
repz
push
jne
les
in
dec
push
adc
outsl
int3
test
cltd
add
bnd
test
inc
inc
pop
pop
inc
xor
enter
pop
mov
dec
iret
or
inc
lcall
orb
repnz
mov
inc
jmp
xor
dec
jae
jl
mov
popf
in
movsl
rorl
fnstenv
pop
jno
rcrl
pop
or
movsl
push
bnd
div
outsb
rclb
pop
stc
test
mov
xlat
into
shlb
or
pop
jmp
rorl
inc
push
repnz
insb
mov
insl
je
and
mov
inc
xor
aas
arpl
das
push
scas
mov
push
xor
popa
lods
ds
jl
sahf
mov
cmp
out
cld
shr
lock
and
ds
adc
pop
rcll
sbb
or
adc
inc
popf
iret
outsl
jecxz
aas
pop
jl
js
sub
cli
out
and
dec
dec
cmp
and
jge
sbb
inc
adc
xchg
ret
aaa
pop
shrb
outsl
sbb
sub
inc
cmp
adc
cwtl
sub
fsubrl
addl
repnz
sbb
mov
mov
rcll
jp
xchg
xchg
movsb
mov
xchg
leave
addr16
std
pop
ror
js
fcmovu
aam
addr16
fmuls
mov
xlat
jp
iret
clc
jns
out
mov
and
mov
jp
jo
mov
inc
nop
dec
mov
xor
pushf
pop
fildll
aas
divl
int
mov
adcb
sahf
dec
stos
fcmovnu
cmp
movl
lcall
push
push
imul
ret
call
fprem1
out
icebp
rorl
mov
lcall
pop
lods
iret
pop
and
bound
and
add
pusha
andb
jno
push
lods
mov
xchg
and
aas
repz
insb
repz
xchg
pop
cmc
cmp
pop
mov
jae
xor
and
dec
push
shl
ffreep
pop
jmp
or
stc
and
pusha
repz
sub
cmpsl
mov
mov
mov
jnp
test
ret
mov
cmp
add
cmpsb
in
mov
xchg
add
push
jae
fisttps
in
mov
sub
rorb
xor
add
fisubrs
dec
es
add
mov
mov
pop
dec
hlt
cmp
cmp
sbb
push
sub
add
sub
in
jg
loop
lds
lahf
mov
in
aam
les
xchg
not
lds
mov
icebp
sbb
cltd
pop
jno
adc
mov
jecxz
aas
test
mov
fdivrp
leave
fsubrs
arpl
and
lds
rolb
pusha
push
xor
rorl
xchg
pop
scas
stos
insl
jl
rorl
iret
push
jns
inc
imul
mov
push
mov
into
or
loopne
bound
inc
push
rcrl
xchg
mov
enter
xchg
add
movsl
mov
jle
inc
add
xchg
cli
cmp
je
mov
push
pusha
ljmp
add
xor
test
jb
adc
or
jmp
and
icebp
dec
inc
mov
or
mov
pop
imul
fcmovb
outsl
cmpsl
movsb
xlat
dec
aaa
push
btc
fwait
out
jecxz
dec
std
mov
sbb
push
mov
jo
icebp
sub
push
mov
and
push
jb
rcl
or
outsl
lods
mov
js
outsl
das
cmp
dec
add
in
popf
push
insl
idivl
push
xchg
fidivrl
push
or
lea
sub
mov
outsb
mov
std
push
imul
movsl
cmpsb
or
cltd
cmp
or
idivb
mov
sbb
push
pop
sbb
fbld
sahf
pop
stos
add
and
add
sahf
sbb
xor
rcrb
and
sbb
repz
or
sub
fisttps
cmpsl
cmp
repz
mov
xor
pop
fiaddl
mov
fdivrl
add
xchg
pusha
imul
pop
adcl
cmp
movsb
out
int3
lock
rorb
dec
mov
repz
fiadds
dec
pop
mov
xor
xor
add
jge
push
mov
frstor
and
dec
bound
lods
pushf
imul
xchg
sub
call
sahf
mov
call
int3
add
jge
xchg
stos
aad
cmp
xor
pop
sarb
out
sbbl
and
ret
jge
jmp
insl
icebp
shlb
dec
mov
imul
xchg
insb
aas
jb
inc
bound
push
dec
xor
das
jbe
xor
rcrl
popf
jnp
loopne
jecxz
or
movsb
out
xchg
in
iret
and
out
cs
push
add
jno
leave
bound
and
push
aaa
sub
int3
hlt
pushw
popf
test
cmp
push
gs
adc
arpl
fs
adc
jp
xchg
xchg
sahf
repnz
mov
lret
ljmp
mov
xchg
and
mov
movsl
add
mov
and
popa
jg
mov
pop
xchg
pop
sub
pop
sub
push
push
mov
push
popa
incb
stos
cwtl
divb
into
loope
pushf
mov
lret
insb
xchg
cmp
xlat
popf
mov
and
sub
test
mov
add
cld
mov
push
push
xchg
lea
cmp
dec
notl
dec
ja
sar
cmp
sub
push
test
or
bound
mov
loope
jb
cs
push
in
mov
hlt
jne
xchg
cld
dec
xor
ss
push
sub
subl
mov
mov
setp
cmp
lret
outsb
mov
xchg
insl
and
sbb
inc
or
fdivs
or
into
mov
iret
das
push
or
cmpsl
mov
mov
pop
xor
dec
cmp
jle
cmp
rorb
inc
testb
roll
sub
arpl
pop
xchg
int
bound
inc
pop
pop
and
jnp
test
cli
rorl
mov
ljmp
lret
outsl
cmp
pop
pop
loopne
out
mov
jo
repz
lds
ljmp
inc
loopne
into
and
pop
cmp
mov
xchg
jge
rol
pushl
jb
cli
jmp
cwtl
fsubrs
dec
cmpsb
mov
push
inc
adcb
and
lret
hlt
pusha
xchg
int3
cmpsl
cmp
stc
xchg
and
and
pop
cmp
mov
mov
iret
test
repz
push
push
cltd
mov
stc
and
addl
xchg
jne
scas
cmp
js
sti
xor
movsb
jg
fsubl
movsb
loop
jle
enter
fiadds
dec
push
lahf
pop
rorb
add
sahf
or
push
mov
sbbb
test
xchg
push
pop
xlat
ds
adc
sbb
arpl
sbb
and
fbld
sub
add
jb
add
dec
mov
xchg
mov
lcall
adc
hlt
jb
inc
adc
mov
jae
lock
sub
add
mov
push
lock
xor
jp
xchg
shll
gs
out
inc
mov
adc
sbb
test
sbb
xchg
icebp
or
insl
in
aam
xchg
jns
adc
jo
ljmp
fcoml
and
in
mov
mov
mov
shll
pop
repnz
pop
hlt
test
cli
cmp
push
sarl
and
js
je
lods
mov
pusha
test
scas
add
aad
push
in
dec
loop
ja
pushl
sbb
mulb
insl
out
cmp
ds
test
push
xor
loopne
push
ss
xchg
push
sti
std
sbb
pop
or
jo
mov
mov
les
fldl
add
arpl
addr16
xor
adc
add
sub
jo
and
pushf
xchg
aas
sti
push
sbb
ficompl
arpl
stc
push
das
sub
mulb
aaa
sub
mov
pusha
nop
fsubrl
pop
loope
ds
out
js
xor
xchg
push
dec
cs
xchg
inc
aam
xor
dec
push
push
xor
or
cmc
std
jg
popf
inc
test
movntq
popf
dec
mov
adc
imul
int
xchg
repz
rcrb
addl
mov
add
dec
fldenv
jne
xchg
repnz
movsb
mov
sub
sbb
gs
leave
mov
mul
lahf
inc
imul
aaa
inc
lods
and
mov
pop
adc
out
xor
push
subl
adc
xchg
movsl
iret
mov
jae
in
adc
movsb
add
enter
imul
clc
sbb
in
inc
outsl
inc
push
sti
mov
sbb
mov
cli
aas
mov
fs
mov
jecxz
push
adc
mov
mov
mov
pusha
push
or
cltd
out
mov
stc
cmpsb
sbb
push
daa
pushf
or
arpl
hlt
push
rorb
xor
notb
movsb
in
aaa
cmp
andl
mov
dec
xchg
and
dec
mov
mov
xor
mov
mov
addr16
mov
outsl
decb
testb
orb
push
test
pushf
jmp
popf
xchg
push
shrl
pop
mov
movsl
and
xchg
iret
test
xchg
pop
jge
push
mov
imul
pop
scas
daa
xchg
jo
popa
sub
xor
shr
pop
stc
cmpsb
push
fwait
jle
popf
sub
mov
push
dec
jp
inc
mov
jecxz
push
stc
addb
adc
nop
pop
xor
adc
jecxz
and
popf
push
add
cwtl
imul
sbb
xor
movsb
fisubrl
jg
inc
sub
sbb
mov
pop
cld
jns
mov
fisttpll
add
in
rcrl
push
fistps
enter
add
inc
fsincos
cmp
hlt
mov
xchg
shrb
mov
pop
lock
sbb
lahf
mov
jnp
dec
jb
into
dec
testl
adcb
cmp
lods
jge
cli
loopne
popf
pushf
cmpsb
cmp
leave
push
insl
jl
daa
into
adc
xor
cld
aas
mov
dec
ss
cmpsb
cmp
sbb
jbe
stos
jge
sbb
clc
jmp
sub
pop
dec
or
divb
jle
mov
cmp
push
add
fidivrs
xor
cmp
sahf
pop
dec
hlt
sub
xchg
scas
inc
movsb
lret
sbb
cmp
jmp
out
sub
cmp
scas
das
mov
xor
mov
pop
dec
jae
add
adcb
pop
popf
mov
cmc
enter
ret
scas
in
xchg
xchg
pop
adc
mov
lds
jo
nop
and
testl
sub
loope
cmp
lea
cmc
adc
sar
xchg
inc
ror
jle
mov
push
sub
and
sub
call
out
andb
cmc
pop
adc
ljmp
jae
std
cli
xor
in
cmpsl
cli
pop
xlat
int3
fcomps
and
dec
dec
inc
adc
call
lret
mov
shr
das
insl
mov
or
out
sbb
jg
mov
popa
pusha
inc
addb
or
rcl
rcll
xchg
mov
adc
adc
push
inc
mov
sub
imul
adc
pop
cmc
push
rcr
cmc
mov
ljmp
xchg
loopne
sub
push
int
mov
mov
push
clc
negl
sbb
dec
or
mov
mov
jg
sbb
lret
dec
push
pushf
sub
scas
jae
xorb
or
fs
inc
loopne
es
pop
popa
fiaddl
ret
sbb
inc
dec
and
push
cmp
pop
jns
sbb
outsl
dec
inc
aad
dec
sahf
aas
int3
outsl
mov
mov
mov
lahf
or
inc
into
jle
movsb
and
jne
push
push
xchg
pop
add
sahf
mov
faddl
and
pushf
jecxz
jae
or
pushf
sbb
sar
ret
jae
jle
mov
mov
adc
dec
sub
dec
pop
xchg
dec
jecxz
lods
pop
dec
dec
lea
in
or
cmp
test
icebp
cwtl
lds
test
fdivs
into
mov
push
addr16
ds
mov
lods
mov
mov
jae
in
sub
not
cmpsl
lods
cmp
outsl
inc
fdivrp
jae
lea
pop
rolb
test
xorl
das
push
fldenv
repnz
les
and
ret
scas
mov
into
or
jo
or
sub
cld
cmp
adc
push
dec
cmp
orl
adc
push
popf
stos
dec
repz
mov
rclb
xchg
jne
inc
jbe
lret
cmpsb
pmaxsw
jp
sub
xchg
cmp
jmp
jns
gs
adc
shlb
stos
jmp
mov
lods
mov
dec
dec
scas
stos
sub
or
sub
mov
in
nop
leave
push
pop
imul
xchg
cmc
idiv
mov
and
insb
imul
dec
fcmovb
sbb
cltd
mov
push
or
push
lea
pop
jnp
lods
push
arpl
xchg
sub
enter
daa
lahf
sub
pop
jno
aaa
nop
push
mov
pop
clc
aam
sub
jp
inc
push
jp
lret
addr16
lret
jp
xlat
xor
mov
dec
xchg
stc
mov
and
sti
xor
pop
insl
daa
or
pop
repz
aas
in
div
xor
pushf
enter
cmpsb
mov
mov
and
mov
pop
inc
lods
test
outsb
mov
add
or
mov
cli
clc
imul
out
cwtl
cmp
inc
and
add
sar
and
imull
insl
push
and
lret
ror
popf
xchg
xchg
sub
cld
xor
jnp
jbe
maskmovq
negl
sahf
jne
add
and
push
popf
aad
inc
loop
in
dec
sub
cmp
test
sub
pop
push
mov
adc
add
mov
mov
popa
testb
les
or
out
pop
cs
and
popa
dec
dec
call
push
ss
icebp
xchg
scas
jp
pop
fcomps
mov
fptan
dec
push
ret
cmp
sub
adc
fucom
xchg
stos
test
ja
mov
mov
push
mov
xchg
pop
cli
movsb
fcomps
out
mov
in
push
stos
arpl
rcll
call
fsts
jne
mov
push
add
mov
pusha
mov
fwait
cmp
aad
cltd
dec
mov
sub
mov
sbb
aam
insb
inc
loopne
sahf
mov
inc
pop
filds
dec
dec
mov
sti
das
cmpb
outsb
dec
lock
push
repz
lahf
cwtl
stos
xchg
push
or
stos
cwtl
push
imul
push
xor
outsl
int
adc
fsubrs
mov
stos
sbb
jmp
mov
push
or
test
push
movsl
lret
lret
cmp
mov
dec
bound
mov
add
push
or
aas
sub
insb
jp
or
popa
rorb
cltd
jne
mov
sbb
int
xor
mov
insb
or
pushf
inc
jne
mov
or
fdivr
lret
xchg
movb
mov
fs
xchg
loop
jo
jb
mov
pop
out
pop
adc
mov
add
inc
leave
sbb
je
push
popa
pop
jb
jns
mov
lods
push
ja
inc
movsl
adc
sub
aam
push
and
xlat
sbbl
imul
inc
ret
pop
mov
rcrb
mov
cmp
or
pop
mov
cmp
rol
filds
xchg
sbb
ja
test
mov
sbb
inc
js
cmpsl
pop
adc
inc
mov
dec
out
ds
leave
pop
scas
popa
xor
and
sub
imul
int
jb
imulb
cmp
fcoms
fnstsw
mov
mov
fdivl
lcall
ror
inc
mov
test
les
lods
cwtl
push
mov
pop
push
jle
add
out
jmp
lcall
ret
in
sub
popf
inc
pop
out
jl
mov
inc
jmp
push
aaa
sbb
jae
mov
jo
push
aaa
mul
ja
jns
in
ss
push
sbb
scas
xchg
sbb
add
mov
lds
lahf
addr16
lods
xor
and
fsts
push
sbb
cld
pop
push
sub
sbb
std
push
in
es
scas
dec
in
jno
pop
cmp
sbb
sarl
xchg
dec
fmull
imul
fimuls
fldt
inc
cmpsl
rclb
sbb
repz
adc
mov
inc
mov
std
cs
cmp
mov
lods
out
ja
sub
movsl
push
xor
arpl
mov
out
xchg
mov
adc
mov
daa
cltd
push
ficoml
sbb
lahf
icebp
push
adc
and
enter
in
inc
out
push
sbb
mov
mov
aaa
cmp
leave
sub
add
bound
jno
fucomi
in
xchg
xor
jo
pop
shrl
jmp
aam
xchg
lcall
loopne
in
lods
in
mov
nop
cmpsl
sub
mov
cmp
loope
push
sub
test
inc
es
and
mov
sub
inc
mov
scas
ficoml
lock
in
mov
xchg
push
adc
test
sbb
add
out
stos
and
push
lcall
jns
cld
dec
pushl
mov
lcall
or
dec
and
sbb
loopne
outsl
and
outsb
hlt
sbb
xchg
pop
sbb
addr16
adc
push
inc
out
test
inc
rol
test
pop
gs
mov
mov
mov
sar
sub
movsb
aam
test
js
sub
sub
dec
sbb
push
cmp
or
xchg
pop
dec
out
loopne
arpl
les
ja
xchg
jle
lea
xchg
jmp
xor
repz
cmpsb
imul
ret
jmp
pop
rcrb
xor
xor
xor
scas
push
test
inc
ljmp
cltd
cltd
add
xchg
add
cmc
mov
shlb
imulb
mov
sahf
cld
dec
lods
fsubrl
jns
aad
fwait
xchg
sub
jl
adc
fwait
pop
jge,pt
cmpsl
sahf
scas
stos
or
sbb
into
adcl
mov
mov
mov
mov
mov
daa
inc
cwtl
mov
jg
outsb
jno
arpl
mov
ss
push
into
jge
sub
decb
mov
dec
imul
jb
push
daa
mov
dec
mov
cmp
cmp
dec
inc
cwtl
sbb
cwtl
pusha
sbb
shrl
jmp
test
roll
stos
and
xlat
cld
mov
cli
jno
in
xchg
pop
xor
gs
cmpsl
cwtl
mov
sub
add
aad
xor
push
ret
jns
loope
dec
out
push
sbb
inc
push
lret
sahf
or
add
andb
dec
cwtl
int
cld
dec
mov
iret
jbe
ret
filds
cltd
push
dec
inc
insb
or
stc
mov
cmpsb
jl
stos
dec
mov
shlb
ret
add
leave
pushaw
sbb
std
out
pop
add
fstps
imull
cli
fldt
shrl
jnp
cli
jo
pop
jne
mov
jmp
popa
xor
inc
sbb
call
pop
je
cmpsb
ja,pt
inc
cmpb
dec
out
sub
lea
cwtl
and
hlt
scas
out
jge
xlat
ljmp
inc
sub
mov
repnz
sbb
imul
mull
in
fnsave
pop
rcrl
pop
and
inc
push
shlb
es
push
push
fwait
dec
xor
jo
add
pop
jbe
dec
cmp
enter
mov
adc
inc
flds
js
outsl
cmc
sbb
out
ljmp
nop
and
pushf
cltd
lahf
or
in
xchg
cltd
test
xchg
mov
inc
sbb
jg
pop
test
push
pop
jle
inc
shlb
das
lret
lcall
call
cmp
xchg
into
in
xor
scas
jg
outsb
push
and
lcall
rcrb
mov
jmp
jg
mov
cmc
sbb
sti
xchg
imul
sbb
sub
push
inc
jno
bound
or
out
xchg
fwait
sub
lds
outsl
xor
fdivrp
das
add
rcrb
mov
mov
jmp
scas
sub
cmp
push
and
adc
adc
lods
mov
ret
push
mov
sub
popf
inc
scas
cltd
mov
jl
and
dec
lcall
mov
push
sub
sbb
rcll
push
adcb
mov
push
addb
and
sahf
jns
mov
adc
xchg
cmpsb
mov
es
pop
dec
xchg
pop
push
js
arpl
shll
cmp
jp
mov
fnstenv
mov
jecxz
lcall
int
idivl
mov
inc
or
jecxz
outsl
fdivs
orl
xchg
pusha
jmp
jg
mov
enter
sub
mov
jmp
cmp
aad
lcall
lds
outsl
adc
sub
imul
jge
add
pop
push
and
scas
cmp
add
adc
sbb
add
xchg
sub
ja
test
das
ds
inc
add
faddl
push
dec
fsubrs
and
and
std
filds
out
or
in
aam
adc
xchg
inc
jne
push
sbb
pushf
stos
xor
fwait
mov
pop
adc
mov
lret
rcrl
out
sbb
cmpsb
stc
scas
mov
shrl
out
iret
mov
xchg
arpl
sbb
scas
cli
xchg
ret
repnz
insb
dec
movsl
es
pop
or
test
ret
jg
sbb
in
xchg
and
aas
cmc
pop
push
scas
mov
push
lods
push
xchg
fwait
jns
or
fs
jp
lret
adc
jecxz
push
outsl
cmp
fwait
pop
rol
sbb
jno
rol
xchg
scas
inc
mov
dec
sbb
mov
inc
mov
cltd
shll
inc
std
loop
dec
mov
inc
int
popf
jle
aam
cs
lcall
bound
xor
hlt
jmp
orb
adc
sarl
push
call
ljmp
lds
testl
imul
cmpl
loope
imul
int
addl
push
scas
push
fcmovu
cs
fisubrl
aas
inc
push
xor
xor
cmp
rolb
adc
push
popl
mov
jg
movsb
pop
add
pop
daa
pop
xor
jg
mov
pop
testl
addb
mov
jne
xchg
adc
pop
int
xorb
fs
mov
or
cmc
jmp
in
jb
test
cmp
mov
and
mov
xchg
xlat
adc
aas
test
ja
mov
call
xor
or
push
lock
jecxz
fimull
cmpsb
cmpsl
cs
cs
and
mov
into
leave
and
sub
outsb
dec
shlb
out
cmp
pop
dec
add
jmp
adc
pushf
test
lds
lcall
mov
sbb
fidivrs
fwait
test
mov
dec
dec
stos
lods
mov
pop
ret
into
cmp
outsb
test
scas
push
sti
fs
test
outsb
jge
stos
cmp
lock
adc
sbb
je
je
xor
movb
into
repnz
and
test
or
mov
in
xlat
xor
arpl
mov
add
cmp
xchg
sub
and
rcrb
pop
xor
aas
lea
jl
insl
sbb
lea
iret
outsb
or
cmpsb
push
xchg
sub
cld
cmp
mov
outsb
cmpl
movsb
ss
jns
cwtl
xchg
sub
arpl
std
mov
in
fmull
into
decb
outsl
pop
lahf
or
sbbb
pop
or
dec
imul
pop
inc
xchg
pusha
pushf
push
jg
cmp
cltd
stos
cmp
inc
push
in
jno
loope
les
cmp
add
push
testb
dec
aas
in
mov
dec
pop
push
je
add
pop
mov
mov
xlat
push
mov
fnsave
jae
dec
clc
sbbl
mov
rcrl
outsl
push
std
nop
sub
mov
pop
pop
and
jle
lcall
xlat
loop
mov
dec
mov
sub
loopne
lds
ja
int3
rorl
xchg
repnz
push
jae
nop
std
les
scas
sub
sbb
xchg
int3
leave
cmp
pusha
pop
mov
sbb
leave
xchg
fsubl
push
nop
shrb
or
mov
mov
cmp
mov
xor
sbb
scas
ret
repnz
sbb
out
xchg
shrl
or
push
xor
xchg
popf
and
and
dec
das
xor
sub
inc
mov
cmp
fistps
icebp
lea
or
test
push
ficoms
add
ja
cld
xor
add
int3
cmp
aad
fbstp
xchg
stos
inc
mov
inc
iret
sti
dec
sub
mov
dec
inc
mov
cmp
lcall
mov
pop
out
cmpsl
fsubrl
add
adc
sub
orl
jle
dec
ss
lods
xchg
or
sub
cmp
add
scas
add
xchg
adc
cmpl
in
jno
inc
daa
cmc
and
mov
push
lahf
dec
roll
adc
pop
mov
dec
jo
aaa
cmp
rolb
dec
and
ds
or
dec
dec
jg
mov
dec
add
les
mov
ret
push
xchg
ja
imul
xchg
push
jno
sub
mov
pop
or
xchg
xor
mov
fldt
or
ret
loope
ljmp
xchg
stc
out
cmp
jl
ss
xchg
in
cmc
mov
addr16
jno
or
pop
lds
and
xor
sbb
sti
ret
cld
xchg
mov
sbb
int
adc
mov
mov
lods
add
ja
mov
test
and
push
pusha
cmp
loopne
nop
sub
sub
and
dec
fbstp
js
cmpsb
inc
pushf
cmp
push
lds
les
mov
rcr
push
xchg
mov
lret
mov
mov
inc
xchg
jecxz
pop
fidivs
xchg
rclb
filds
add
ss
leave
xchg
push
sbb
inc
in
pusha
sub
aam
pop
mov
mov
mov
test
mov
fs
loopne
sub
jnp
pusha
xor
and
cs
pop
cmove
sbb
in
pop
popa
xlat
gs
je
sbb
jb
sbbl
scas
adc
insb
jns
inc
push
loope
cltd
in
and
jmp
mov
dec
mov
mov
fdivl
test
test
arpl
cli
jb
aam
cwtl
dec
jle
add
iret
sbb
lcall
sub
push
jmp
mov
out
push
jmp
sbb
les
movsb
cmpsl
sub
or
dec
jnp
xor
jge
inc
push
dec
rcrl
cltd
pushf
mov
cmp
fcompl
add
xchg
sub
imul
push
mov
scas
hlt
sti
shr
ror
jns
mov
pop
xchg
nop
pop
inc
adc
out
cmp
out
push
es
mov
movsb
sub
bound
jge
push
in
cmp
cmp
mov
addr16
mov
push
xchg
push
adc
ja
push
sbb
adc
inc
push
into
and
movsl
out
jo
xchg
cmpsb
xor
cwtl
das
jno
bnd
fmulp
nop
addb
fsubrs
inc
clc
int
lea
test
xor
cmp
mov
lea
xlat
js
jle
mov
imul
in
int
inc
pop
call
imul
sbb
xor
les
jns
mov
mov
cmpsl
adc
jp
pop
sbb
leave
mov
mov
add
mov
bound
pop
add
insl
jg
mov
dec
add
push
dec
fwait
ds
jae
in
pop
push
out
sub
mov
mov
sub
pop
orl
addb
mov
xor
xchg
data16
and
add
cld
stc
dec
cmp
mov
or
cwtl
adc
dec
sub
cmp
xor
xor
shlb
and
mov
jnp
xlat
xchg
outsb
loopne
loop
jg
lods
adc
rcll
cwtl
mov
lds
insl
hlt
add
clc
shlb
sub
xchg
fpatan
inc
test
out
or
lret
sub
cmp
pop
lret
lret
xlat
sbb
sahf
and
shlb
bound
mov
cmp
dec
rcrl
lea
scas
push
aad
stos
mov
push
pop
push
idivl
data16
pop
inc
enter
cmpsl
mov
xor
ljmp
mov
sub
daa
fsts
ficoml
jg
inc
adc
xchg
std
mov
push
cmpl
xchg
push
pop
pop
lahf
icebp
in
mov
dec
std
lods
cmpsb
push
xchg
scas
insl
jl
mov
shl
and
push
push
cmp
loopne
imul
scas
pop
xor
xchg
mov
aad
in
dec
aad
pop
xchg
adc
add
or
sbb
cwtl
dec
or
inc
pusha
int3
lret
incb
mov
sbb
xor
sub
cmp
aad
fiaddl
pushf
scas
mov
scas
mov
mov
pop
inc
ja
cltd
cmp
pop
fdivrp
dec
cmc
negb
sbb
pop
or
je
xor
inc
jecxz
lret
jae
push
pmaxub
pop
jecxz
fistpl
jle
call
jg
in
push
aas
inc
outsl
pop
add
call
push
incl
cmp
mov
dec
fs
into
push
iret
add
test
or
in
mov
aad
mov
mov
xchg
mov
push
xchg
jb
shll
pop
in
dec
je
outsl
mov
jno
fimuls
test
add
push
jno
push
jnp
mov
add
ds
into
movl
pop
lret
mov
int
dec
int
imul
and
out
test
sub
les
cmp
das
addl
sub
pop
fisubrs
cld
lock
iret
xchg
cmp
js
aas
pop
lods
lahf
cltd
mov
das
stos
mov
dec
push
clc
cld
xchg
fwait
adc
inc
bndldx
test
push
stc
mov
sub
cwtl
jbe
lret
les
inc
in
fidivl
or
enter
int
jg
or
push
fldt
lock
mov
xchg
negl
dec
in
mov
xchg
add
jnp
mov
xlat
mov
shufps
scas
into
dec
cmp
adc
push
fldenv
fidivrs
sahf
mov
lds
mov
das
xchg
adc
push
jl
data16
test
popa
xchg
rcr
jae,pn
mov
lret
loop
roll
leave
dec
je
div
fcomi
popa
imul
stc
push
xchg
mov
stc
scas
out
aam
dec
cwtl
out
icebp
leave
inc
lods
xlat
fidivrs
push
mov
cmpsb
mov
cmpsb
jae
xor
or
xor
jns
xchg
mov
arpl
movsl
cli
fstps
sbb
adcb
pop
lock
mov
push
cmp
ret
adc
fnstcw
xor
out
subb
daa
les
xor
mov
cvtpi2ps
xchg
and
push
outsl
jnp
andl
test
in
mov
cmp
xchg
arpl
ret
mov
jecxz
int3
xor
iret
lock
push
cmp
lcall
idivl
inc
repz
scas
arpl
add
cli
sub
mov
out
cmp
add
cmpsb
in
aam
imul
ds
das
push
hlt
adc
mov
arpl
jne
mov
imul
xchg
rorl
xchg
rolb
cmp
aam
incb
dec
push
dec
in
xor
and
dec
jnp
ja
cld
cmpsb
mov
fnsave
fmulp
lahf
and
inc
nop
outsl
push
add
adc
enter
xchg
push
add
add
sub
cmpsl
sbb
mov
stos
cmpsl
pop
jnp
jbe
pop
inc
sub
sbb
out
pusha
sub
enter
add
xchg
cmp
jno
push
mov
xchg
mov
daa
push
int
xor
popf
mov
repnz
jns
sbb
adc
jnp
aad
shrb
jmp
mov
jns
int3
stos
mov
in
inc
mov
push
sub
pop
orl
sbb
in
call
or
pusha
and
push
into
loopne
mov
adc
pop
sbb
adc
push
lock
out
out
dec
adc
fmul
or
and
add
mov
sbb
out
cs
sub
xchg
fildll
cmp
cmp
sbb
outsb
adc
lahf
dec
sbbl
sbb
out
out
faddl
les
jge
enter
cli
push
xchg
outsl
jbe
dec
xchg
scas
movsl
int
cmp
jne
xchg
sub
add
rolb
sahf
ficoms
movsb
inc
or
mov
lahf
mov
and
repz
xor
pop
mov
cmc
sub
ret
push
lds
fsts
or
mov
push
addl
mov
out
in
sub
or
gs
je
dec
push
bnd
hlt
xor
add
push
push
sub
and
movsb
cmpsl
and
sbb
and
in
xchg
sub
sbb
rcrb
and
sbbb
sub
push
inc
adc
jmp
movl
or
out
jl
jno
fcmovnb
jae
jle
fbstp
push
scas
or
scas
ret
out
pop
into
sub
lcall
xchg
psubusb
jl
jge
mov
mov
incb
rol
sbb
sbb
rolb
fimull
les
or
mov
dec
fldt
inc
cmp
lret
jle
out
int
pop
cmc
cmpsl
das
push
mov
rcr
cs
stos
test
fldl
inc
outsl
jp
jns
dec
mov
mov
out
int3
xor
xor
lahf
jb
inc
ja
sub
jo
sbb
cmp
rorl
adc
idivl
dec
es
push
lcall
push
scas
data16
jbe
repnz
mov
cmp
jecxz
ds
or
jns
add
push
mov
pop
xchg
pop
sbb
pushf
pop
or
mov
ficoms
movsl
adc
sbb
lds
cmc
std
cmpsl
add
push
ret
pop
push
aas
bound
je
and
les
clc
loope
and
in
xchg
inc
sbb
mov
jo,pt
or
js
push
pop
push
cli
incb
mov
sub
pop
lds
sarb
lea
and
fs
and
sbb
mov
aaa
clc
push
lods
sub
lods
nop
inc
cmp
out
xchg
xchg
add
mov
inc
sub
or
insl
push
in
mov
pop
fdivl
ftst
sub
daa
fs
adc
fwait
sbb
repnz
push
pop
and
push
jecxz
sub
lods
adc
repz
push
loope
mov
mov
cmpsl
push
mov
mov
mov
dec
js
jbe,pn
push
xchg
mov
test
lcall
jbe
int
inc
xor
imul
idivl
adc
imul
xchg
mov
xor
push
movsl
sub
out
xor
push
stc
addr16
mov
rcr
pop
aad
int
out
mov
iret
jp
loope
pop
pusha
xor
gs
add
dec
sti
mov
sbb
inc
cmp
jmp
sub
enter
dec
sbb
pop
cmpsb
cmpsl
rol
or
xchg
mov
scas
jne
mov
or
or
cmp
mov
je
dec
sbb
pop
shr
test
fbstp
jae
cmc
adc
in
leave
push
daa
call
jg
lcall
in
add
dec
outsl
pop
loopne
xor
test
loopne
or
lcall
mov
adc
movsl
mov
and
rcrb
sub
inc
inc
cmp
dec
in
loope
adc
mov
pop
or
dec
inc
or
xchg
repnz
xchg
add
stos
les
pop
dec
mov
dec
xchg
cmp
and
mov
add
sbb
and
mov
std
fidivrl
dec
ljmp
psubd
push
je
jbe
movsl
rclb
xor
and
jg
test
mov
in
and
push
sub
adc
in
add
xlat
adc
imul
das
jmp
test
cmp
es
xchg
push
popf
std
test
mov
test
cmpsl
adc
dec
cmpsb
and
and
or
pcmpeqw
iret
push
shlb
insb
mov
and
cmc
sub
dec
or
cmpsb
pop
xor
inc
lods
xor
dec
push
xor
test
stos
pop
clc
xor
jne
mov
xor
cmp
test
aas
cmp
mulb
out
loop
jns
lret
lahf
cmp
and
jl
push
jne
dec
push
mov
ss
or
push
inc
es
add
and
ficompl
bound
in
adc
sbb
mov
and
test
mov
xor
repnz
mov
stos
jnp
icebp
aam
imulb
add
cmpsb
ret
mov
xor
xor
outsl
data16
mov
sbb
mov
mov
sbb
push
in
stos
push
jo
xchg
and
fsubl
ficoms
xor
fsubrs
cmp
shl
repnz
ret
xor
loope
fidivl
inc
jno
sbb
sub
js
cmp
faddl
repnz
and
ficomps
lock
or
xor
mov
ljmp
imul
stos
push
xor
mov
divb
stos
xchg
call
mov
repnz
cmp
or
int3
js
or
cmpsb
bound
push
movb
jo
sub
outsb
dec
pop
je,pn
or
and
push
xchg
xchg
jns
cli
es
xchg
xor
xchg
imulb
fnstenv
imull
lods
in
adc
inc
pop
shll
lea
and
inc
arpl
lods
sbb
ret
call
mov
ret
shrl
adc
cmp
xchg
shufps
int
xchg
imul
aaa
mov
cli
data16
xor
mov
out
pop
fstpl
or
cmp
cwtl
test
push
sbb
push
dec
adc
push
sbb
xchg
sbb
mov
data16
push
add
mov
and
enter
mov
and
cmp
mov
jb
xchg
cmp
xor
imul
xchg
jge
mov
inc
es
inc
loop
jne
fistps
das
movsb
sub
mov
dec
shlb
pop
mov
jle
sbbl
add
aaa
adc
pop
jmp
int3
call
int
lock
pushf
inc
out
jle
pop
int
out
add
mov
dec
xor
shll
lods
sbb
xchg
adc
jl
in
push
push
push
or
insb
cmp
std
popa
mov
push
pop
sbb
mov
xor
scas
loope
and
fistl
jl
lret
jne
sahf
sbb
mov
mov
movsb
inc
scas
xchg
xchg
xchg
aad
sub
cld
scas
xor
adc
test
adc
dec
sar
int3
cmp
popf
push
scas
pop
sub
mov
ror
add
lcall
mov
repz
mov
sub
test
jg
mov
sbb
lock
fiadds
and
sbb
scas
fwait
jecxz
xor
inc
pusha
pop
aas
fcmovnu
sub
xor
shlb
fdivl
dec
cmp
mov
and
xor
loopne
insb
fwait
ret
das
mov
mov
fisttps
cmp
jg
xchg
mov
sbb
scas
cwtl
pop
adc
mov
xchg
call
mov
out
mov
pop
adc
mov
out
adc
popa
in
in
jl
mov
cmp
sbb
jge
inc
loopne
add
fmull
dec
divb
dec
dec
jl
xchg
nop
pop
cmpb
xor
mov
jmp
jle
test
adc
outsl
aad
pop
or
or
xor
gs
stc
push
sbb
lea
sub
stos
sbb
mov
xor
mov
xchg
add
mov
dec
into
add
pop
js
pop
mov
sub
sar
xchg
lret
xchg
minps
aas
sub
js
clc
or
mov
add
cmp
dec
in
ss
ret
cs
cmpsl
ret
adc
lahf
lret
or
pop
adc
mov
adc
inc
rorb
adc
lret
lds
mov
ja
popf
and
mov
enter
mov
lahf
pushf
sbb
ret
pop
add
scas
jg
adc
jl
pop
in
xchg
mov
cld
cli
filds
rcl
pushf
sbb
std
fwait
dec
xchg
cmp
test
loopne
pop
fcomps
mov
dec
inc
jg
or
ss
popf
push
out
adc
mov
pop
stc
adc
les
dec
pop
xchg
pop
and
rcrl
int
test
ret
bound
lods
repnz
adc
cli
nop
sub
pop
loop
ficompl
dec
das
sbb
xor
mov
jne
outsl
and
out
pop
jbe
lcall
or
cmpsl
push
loope
xor
pusha
push
and
insl
xchg
data16
mov
dec
dec
movsb
stos
jnp
mov
xchg
xchg
mov
imul
fs
in
sti
push
pop
xor
dec
inc
inc
pop
fsts
loope
fsubl
lret
cld
daa
mov
dec
adc
or
out
rcl
loop
mov
jg
testl
xchg
out
cmp
shrb
daa
push
imul
mov
out
push
test
push
hlt
cmp
ds
bound
pop
adc
and
sbb
dec
mov
out
js
push
inc
sub
jne
adc
jbe
int
jle
in
adc
je
adc
and
mov
mov
pop
xchg
mov
mov
mov
inc
ror
mov
cwtl
sub
sub
lret
jb
adc
sti
mov
outsb
lcall
jno
bound
inc
outsl
fmul
lahf
out
add
stc
mov
aam
fistl
ja
jge
mov
stos
inc
ss
push
pushf
add
jne
xchg
addr16
cmpsl
add
jle
and
add
push
xor
sbb
cmp
in
mov
mov
sub
lea
test
xchg
jno
pop
sub
ret
xchg
stos
subb
divb
push
xor
shll
xor
lds
cltd
pushf
pop
addr16
inc
insl
push
push
mov
popa
cmp
push
sub
es
into
movsl
mov
jnp
sbb
pusha
xchg
push
stos
mov
xor
data16
les
xor
call
jg
jl
adc
orl
fwait
push
gs
lods
mov
jmp
jge
mov
aas
add
jo
ja
and
cmpsb
xlat
pop
xorl
fidivs
ljmp
mov
push
push
fisubrs
xchg
sub
test
data16
sub
pop
mov
repz
cmpsl
cli
lret
sahf
jo
mov
mov
jge
or
mov
repz
pop
out
notl
out
xchg
stos
sbb
fwait
mov
dec
shlb
pop
dec
nop
fsts
loopne
push
pop
test
popa
lods
cmp
enter
cmp
cmp
ljmp
push
fstps
pushl
das
pop
movsl
je
int3
xchg
cmc
mov
or
aad
jns
lret
sbb
jmp
scas
cmpsb
dec
mov
mov
jl
pop
bound
addl
push
sub
inc
inc
dec
in
mov
jge
out
lret
nop/reserved
idivl
inc
cld
jmp
mov
mov
dec
sub
ss
shlb
add
fsts
mov
movsl
in
or
jne
push
mov
ficompl
mov
sub
push
ja
mov
xchg
push
movsl
je
inc
jae
sub
out
add
pop
aas
dec
xor
fdivrl
xlat
mov
ja
mov
scas
inc
xor
out
and
stc
jnp
out
push
pop
xchg
cmc
insb
or
mov
fstps
sbb
ljmp
cwtl
pop
data16
pop
pop
nop
mov
dec
mov
imul
dec
outsb
sub
dec
xchg
sti
mov
add
pop
jg
mov
xchg
mov
fst
aam
dec
cmp
shr
mov
dec
jno
xchg
loop
and
jno
lds
mov
in
bound
and
iret
cmp
repnz
ret
xor
daa
add
push
push
mov
add
mov
les
cmp
xchg
adc
dec
inc
or
push
ja
cmpsb
or
mov
scas
gs
psllw
roll
popa
sbb
cmc
lahf
mov
pop
jp
sbb
jg
push
or
test
pop
ss
ret
test
pop
outsb
xor
mov
and
adc
loope
sub
sarb
repz
inc
invd
jbe
cwtl
call
sbb
stc
mov
in
outsl
das
cmp
ljmp
movb
xlat
ficoms
imul
js
call
out
shr
clc
push
int3
test
int3
clc
dec
stos
out
notb
and
pop
push
mov
push
or
jp
mov
cmp
addr16
push
ret
out
sarb
lods
bound
and
sub
cmp
shl
jge
fsubrl
cs
mov
fildl
jnp
fs
xor
cmp
imul
lea
mov
lret
aad
pop
or
ficoml
jp
pop
inc
and
scas
lret
lea
aad
xchg
add
lret
testl
sbb
pushl
out
mov
in
imul
aam
notl
popa
sbb
dec
insl
xchg
add
lods
cld
sbb
test
imulb
call
iret
pop
dec
popa
push
mov
das
sbb
cmp
xchg
popa
lods
jmp
cwtl
addb
icebp
sar
jae
dec
mov
xlat
cmp
test
jmp
mov
inc
ror
mov
cmpsl
jecxz
js
mov
dec
test
or
inc
push
rorb
sub
jecxz
jmp
mov
mov
int
in
aaa
ja
xor
stos
sbb
push
adc
push
rclb
or
roll
ret
jmp
cs
cld
into
outsl
sub
int3
sahf
xchg
js
int3
jp
push
sbb
xchg
gs
je
xchg
pushf
cmp
loop
rorl
xor
cmp
inc
sahf
xchg
fs
cwtl
pop
je
mov
dec
xor
minps
lods
in
xor
cmp
add
xchg
adc
aaa
daa
sub
and
push
mov
arpl
nop
push
int3
cli
inc
xchg
inc
jb
cs
lcall
les
das
imul
adc
fs
clc
jne
push
mov
addb
cmp
add
cwtl
test
push
popa
mov
jno
pusha
lods
sub
xchg
jp
add
jle
add
push
cwtl
and
loope
add
gs
lds
aad
fsubrl
inc
mov
dec
cmp
jae
les
imul
iret
movsl
enter
repz
fbstp
lods
movsl
pop
out
xchg
xchg
mov
jp
jb
pop
cmp
inc
pandn
cmp
dec
mov
es
sti
push
fs
rcrl
rclb
sub
jp
loope
stos
ficomps
inc
sbb
pop
nop
inc
xchg
push
fldl
call
aas
fidivs
shrb
fwait
nop
or
jnp
mov
jg
fadd
jmp
addr16
scas
dec
dec
mov
rol
imul
xchg
xor
lods
mull
mov
push
das
iret
push
das
add
es
mov
push
dec
mov
xor
jp
mov
dec
sti
xchg
mov
push
pop
push
sbb
push
cmp
sbb
hlt
push
loope
outsl
in
dec
xchg
jbe
mov
adc
je
xchg
push
pop
sarb
xor
fimull
push
adc
jb
repnz
cmc
shl
in
aaa
sub
mov
mov
addb
das
aaa
dec
mov
fisttpll
outsl
jnp
pop
pop
out
push
pop
out
test
add
fildl
mov
push
repnz
lret
in
std
dec
jo
xchg
add
mov
xchg
sbb
shlb
inc
shll
aam
and
ss
mov
popf
xchg
insl
leave
pop
and
jnp
es
cltd
in
addr16
jno
movsl
or
cmp
ret
add
aaa
add
jg
mov
dec
dec
and
sbbl
movsb
out
dec
jge
inc
pop
mov
in
test
xchg
js
iret
dec
lahf
pop
popf
cltd
lcall
rcrl
in
std
jecxz
fstps
sbb
test
xchg
jo
mov
xchg
xlat
mov
aad
stos
mov
scas
pop
pop
testl
scas
cmp
icebp
pusha
mov
fs
fs
dec
arpl
xchg
pushf
pop
in
leave
dec
pop
xchg
mov
jns
ret
rorl
push
pusha
mov
pop
sub
jl
jno
std
sarl
pushf
jge
aas
push
xchg
fwait
cmp
jbe
dec
pop
pushf
pop
xor
shrb
adc
aam
jp
scas
mov
jns
mov
pushf
add
pop
xchg
mov
repz
lahf
popa
inc
xor
testl
push
push
mov
dec
ror
add
pushf
inc
xchg
fs
fsubl
je
es
dec
or
mov
sbb
inc
inc
and
sub
lds
xchg
outsl
fdivrl
mov
repnz
mov
int3
fildll
fwait
data16
push
hlt
or
xchg
dec
xchg
ss
jne
call
mov
mov
mov
adc
rorl
enter
or
loope
mov
and
dec
pop
and
push
dec
lock
push
and
push
aam
inc
sarb
mov
adc
push
dec
mov
mov
mov
xchg
pop
pop
sbb
sbb
dec
out
adc
nop
sub
xor
sbb
std
inc
ficoml
add
xchg
and
lret
into
sbb
add
pop
inc
fldenv
add
mov
cmc
fsub
or
xchg
fstps
fwait
loopne
cmp
add
pop
sbb
mov
dec
pop
pop
add
jbe
mov
jmp
aad
aas
jmp
aaa
jecxz
cwtl
movsl
jl
or
inc
fcmovnu
or
sbb
push
push
or
mov
out
fscale
mov
in
in
cltd
shll
or
add
sbb
or
sarl
or
mov
mov
and
pop
xchg
pop
ret
mov
mov
loopne
fbld
mov
ja
lret
jp
rcl
jmp
mov
push
jmp
push
jne
stc
jecxz
js
cmc
mov
lcall
mov
pop
cmp
sub
cmc
jle
enter
outsb
fsubrs
leave
xor
repz
jnp
sbb
jb
or
push
scas
dec
xor
pushf
lahf
rorb
sub
xor
xor
test
jbe
es
pusha
dec
gs
xor
xor
jl
inc
cmp
addb
fsubs
out
mov
lret
push
jno
push
and
or
mov
jnp
mov
adc
lea
pusha
int
fcmovu
and
add
mov
pop
shr
scas
lahf
lret
sbbb
jecxz
dec
xor
pusha
adc
mov
push
es
icebp
xor
mov
inc
aas
lock
xchg
mov
rcr
sbb
sub
rclb
sbb
cmp
adc
dec
adc
sti
leave
jle
test
adcb
subl
dec
inc
mov
in
repz
dec
insl
lock
nop
loope
inc
xchg
mov
cmp
adcl
lds
xchg
lods
fimuls
add
popa
xchg
mov
fldt
bound
out
adc
jg
add
pop
cwtl
pop
stos
int
ss
pushf
int3
mov
and
dec
ds
je
inc
scas
movsb
adc
pop
push
pushf
lcall
add
mov
mov
test
ror
dec
cld
fidivs
inc
in
inc
pop
out
mov
pop
out
push
sbb
ljmp
movsl
in
mov
movsl
jl
scas
pop
or
addr16
cli
and
and
bound
out
addr16
enter
filds
jno
adc
mov
out
sbb
rcrl
into
jecxz
or
inc
dec
sub
andb
lahf
push
movsl
iret
adc
or
xchg
cmp
popf
jmp
push
lret
bound
mov
xchg
push
addr16
xor
xor
rorb
je
mov
or
add
lea
into
push
lock
mov
test
bound
js
pop
fst
test
pop
pop
lret
adc
test
lahf
xchg
ss
dec
pop
pushf
cmp
adc
mov
xchg
adc
or
cmp
aaa
add
clc
inc
xchg
cwtl
dec
aaa
inc
mov
cmpb
xchg
or
sub
pop
cltd
aad
xor
push
cmpl
xchg
xchg
sbb
sub
mov
mov
or
mov
pop
sub
pop
leave
fisttpll
pop
jle
call
adc
sbb
push
cmp
mov
inc
and
add
cmp
jl
push
mov
mov
fs
jge
dec
lahf
xor
rclb
dec
add
add
jg
mov
jmp
or
ss
mov
add
pop
test
loop
test
jge
ds
popa
ret
dec
mov
push
sbb
fidivrs
int3
loope
lret
movsb
xchg
xchg
clc
fcompl
dec
pop
clc
data16
push
mov
pop
imul
adc
push
xor
sub
jb
xor
out
mov
xchg
adc
mov
dec
scas
cmc
mov
icebp
xchg
xchg
add
adc
mov
loop
stos
test
inc
inc
out
psubusb
hlt
scas
test
jg
jae
ds
cmp
stos
dec
jmp
cld
jg
fiaddl
xor
mov
lods
pop
add
jg
arpl
int3
mov
or
imul
pop
std
or
pop
movsl
jbe
dec
push
lods
push
mov
mov
jl
popf
mov
sbb
adc
ja
jno
add
int3
fwait
dec
push
dec
adc
sub
shl
xchg
fstps
test
pop
pop
add
rcrl
cmpsl
nop
nop
sub
into
fmuls
inc
add
std
mov
imul
stos
dec
push
fwait
mov
mov
fistpl
mov
cmp
scas
and
stos
jae
inc
xchg
xor
hlt
adcb
add
das
insb
dec
or
dec
dec
mov
pop
pop
int3
fcomps
in
in
mov
fisubl
test
inc
addr16
or
push
outsb
jp
fwait
repz
icebp
fsubp
out
decl
cmc
int
mov
fs
icebp
fidivrs
lret
cmp
mov
sbb
sbb
shll
cmp
out
mov
mov
sbb
iret
pop
push
mov
pop
jbe
cmc
insb
jo
cld
add
imul
mov
xchg
add
add
pop
pop
das
add
pop
mov
add
pop
out
pop
test
push
cmp
mov
int3
pop
push
or
dec
sti
addl
or
insb
lea
outsl
jg
test
rcr
int3
movsl
cmp
adc
cmp
shr
adc
sbb
sarb
adc
out
jns
int
dec
sub
and
pop
nop
mov
add
cld
mov
sbb
std
jp
xchg
jne
mov
mov
push
shrl
scas
imul
test
movsb
into
sahf
xchg
popa
sbb
mov
mov
stos
into
cwtl
xchg
cmp
mov
into
cs
add
xorl
mov
fldenv
jle
arpl
push
pmaddwd
stos
adc
cmp
cmp
repnz
fsubr
je
pop
mov
add
pop
jp
cmp
movsb
dec
cmp
inc
push
sub
add
orl
daa
popf
dec
or
shlb
xchg
filds
jp
mov
mov
xchg
jnp
insb
test
cmp
sahf
mov
mov
xchg
mov
xor
ljmp
cmp
popl
mov
dec
std
scas
es
and
mov
repnz
adcl
and
insb
dec
sahf
lea
and
aad
jmp
and
loopne
cmp
inc
push
mov
mov
pop
ljmp
pop
adc
or
push
and
stos
in
push
sahf
gs
jno
in
lds
sub
xor
pop
dec
jge
push
adc
xchg
scas
xchg
jl
movsl
mov
pop
out
xor
cmp
aaa
push
dec
cmpsb
loope
add
lret
xor
or
nop
aas
add
sbb
add
stc
fbstp
mov
adc
scas
dec
or
fnstcw
test
push
or
add
cmpsb
pop
sub
push
dec
js
icebp
cli
inc
xor
add
insl
nop
cmp
cmpsb
gs
ss
ljmp
int
ss
jns
or
imul
pop
cmc
xor
mov
out
adc
rcrl
test
test
dec
xlat
mov
inc
jmp
popl
xchg
or
mov
lods
mov
pop
les
push
scas
push
scas
cli
cmp
mov
mov
push
jo
popa
cmp
mov
xchg
add
adc
jp
stos
ret
ret
jns
sub
movsb
pushf
inc
ljmp
mov
or
push
cs
and
lods
mov
dec
xchg
mov
pop
lea
push
jmp
popf
loope
mov
push
jne
dec
mov
iret
lea
inc
cmp
fisubrl
and
fstpt
int
add
hlt
lcall
add
jnp
fxch
sub
adc
popa
sub
pop
subb
outsl
pusha
mov
dec
dec
xor
adc
sub
push
sub
sarb
dec
out
lcall
jb
shll
add
adc
sub
loop
mov
sarb
sar
pop
int
mov
sbb
and
jl
stos
lods
in
mov
jl
fcomps
inc
cmp
mov
jae
xor
repnz
into
jnp
mov
xchg
pop
imull
adc
ds
mov
loopne
icebp
dec
add
fiadds
popf
in
jb
inc
mov
shlb
or
stos
xor
daa
sbb
les
sbb
clc
ja
outsb
cli
into
pop
fwait
aam
insl
aaa
adc
push
cmp
test
pop
and
push
sbb
inc
mov
imul
out
push
into
dec
sbb
cmp
mov
mov
xchg
add
popa
xchg
rol
jo
sbb
pop
xorb
and
cmpsb
sahf
push
push
and
push
lahf
push
dec
daa
or
mov
mov
dec
adcb
push
mov
dec
mov
movsl
call
or
cmp
lods
fs
in
dec
ret
sti
cs
adc
xchg
lds
jecxz
scas
push
es
jbe
out
xor
shlb
xchg
dec
lcall
aas
cs
xchg
inc
dec
outsb
jnp
cmp
movsb
push
enter
ret
push
xchg
push
ficompl
lds
test
mov
pop
movsb
sbb
adc
push
insb
or
in
inc
mov
push
mov
or
push
mov
xchg
mov
xor
fwait
je
mov
adc
xchg
js
nop
in
add
add
ja
xchg
in
inc
jno
subb
addr16
shll
notb
leave
enter
inc
adc
cmp
divl
inc
push
int3
out
fwait
aad
adc
or
aas
push
pusha
jmp
xor
movsl
push
xor
mov
scas
daa
cwtl
jne
or
mov
add
nop
mov
lea
fs
nop
cmp
dec
ds
movsl
xchg
enter
or
xor
or
dec
mov
std
flds
fistpll
scas
sbb
mov
fwait
dec
jb
js
cmc
xchg
push
sub
jecxz
imul
shrl
push
aam
mov
push
mov
sub
push
jp
add
sbb
sub
inc
jno
sbb
inc
in
cmpsl
jno
xchg
add
jmp
sub
pushf
add
js
inc
push
mov
testl
jl
add
cmp
fdivrs
mov
xor
loopne
and
mov
icebp
and
xor
jmp
subb
dec
clc
pop
xor
aas
dec
fiadds
aaa
out
pop
jge
pop
or
out
mov
cmp
mov
push
ficomps
int3
lret
pop
adc
insb
mov
je
xchg
inc
push
pop
add
add
js
inc
cmc
fs
stos
and
mov
sub
inc
loopne
pop
jbe
mov
mov
pop
add
xchg
dec
repnz
fwait
jae
out
lods
mov
jle
int3
jae
hlt
test
xchg
or
xor
mov
enter
fwait
data16
add
mov
adc
adc
js
repz
pop
out
ret
mov
push
movsb
mulb
popa
in
sub
mov
push
dec
mov
vmovaps
and
lcall
fldt
aad
shl
out
cmp
fadds
bound
mov
rcll
sub
and
shlb
lds
dec
gs
popa
sbb
xchg
jb
loop
mov
cmp
sub
add
jle
jb
dec
xor
mov
dec
cmp
xor
data16
hlt
mov
int3
insb
cmc
outsb
mov
les
js
sar
push
push
leave
ror
mov
push
xlat
mov
imul
aaa
in
or
scas
xchg
push
pop
aad
adc
pop
lret
std
in
inc
mov
pop
inc
pop
mov
xor
dec
shll
adc
lds
sbb
push
jl
cld
and
mov
sbb
int3
cmpsb
jmp
or
loopne
mov
outsl
pop
hlt
ficoms
gs
leave
pop
and
pop
push
push
push
xor
jns
ljmp
xor
dec
shl
mov
pop
pop
push
jg
push
fmull
das
pop
les
ds
add
pop
adc
pushf
movsb
fsin
adc
adc
loope,pn
int
push
inc
ss
popa
rcrb
stos
test
and
xor
leave
xor
sbb
fimuls
dec
mul
testb
cltd
or
mov
xlat
push
mov
sbb
sbb
xchg
mov
sti
orl
loope
shrl
lret
xchg
push
cmp
push
divb
les
push
add
lret
add
sbb
sahf
mov
lock
push
fsts
insb
push
jl
jmp
clc
mov
hlt
movsl
lcallw
and
mov
movsl
shll
mov
push
cmp
push
add
scas
push
sub
mov
jle
xor
fst
sbb
daa
stc
push
test
push
aam
sbb
out
add
push
add
cwtl
movb
add
mov
pop
pop
mulb
scas
cmc
mov
cli
imul
inc
pop
insb
xor
aaa
mov
xor
out
xor
daa
pushf
das
jo
imul
xor
xorl
das
xor
movsl
jmp
fbld
nop
dec
mov
leave
push
rclb
xchg
out
out
stos
loope
out
cmp
push
mov
ret
and
pushf
repnz
lods
es
sub
pop
lock
mov
popf
insl
ret
inc
sub
test
adc
lcall
push
pop
mov
lea
xor
out
test
and
call
popa
and
pop
les
nop
roll
in
jmp
enter
dec
ret
das
sahf
rcrb
subb
xchg
pop
mov
fildll
jg
xchg
mov
jg
mov
mov
mov
clc
mull
lds
scas
ret
mov
mov
add
fs
pop
mov
shl
mov
mov
push
icebp
dec
sarl
hlt
and
push
jmp
mov
rol
cs
add
jo
ret
loopne
lea
jns
fcomi
inc
pop
sub
dec
in
imul
mov
cmp
out
ss
sbb
jae
mov
stos
insl
pop
pxor
and
addr16
or
ja
jnp
push
mov
mov
and
testb
cmp
ret
sbb
add
pop
xor
rorb
xchg
sarb
repnz
jno
insb
xlat
sbb
cmp
pushf
insl
mov
jns
ror
mov
xchg
add
das
cmp
stos
cmp
mov
in
idivl
cmp
jne
out
popa
popa
xchg
xchg
jnp
int3
xor
les
jmp
push
xchg
cmpsb
fucomi
dec
jbe
rcrl
movsl
inc
fbld
push
xchg
cltd
push
adc
inc
mov
sti
ficomps
sub
mov
fwait
sbb
push
fcoms
aad
dec
lods
push
mov
xchg
pop
mov
cwtl
shll
mov
push
mov
ficoml
sub
inc
rolb
iret
arpl
jg
pop
mov
sbbb
out
addb
mov
jge
jmp
push
lods
sbb
movl
push
movsl
dec
pop
imul
out
clc
adc
add
fbstp
mov
push
mov
dec
mov
pop
movsb
rcr
pop
add
xchg
mov
inc
fsubrp
cmpsb
vhsubps
sub
stc
pop
jge
scas
cmc
mov
lds
inc
add
iret
testb
sub
mov
lret
jmp
inc
fs
jno
in
xlat
xchg
rcrb
mov
out
sub
cmc
push
cli
sbbb
inc
in
cli
inc
fistl
mov
and
sub
inc
jecxz
inc
mov
jmp
rcll
mov
mov
ljmp
jle
or
std
ds
inc
mov
xchg
int3
add
jge
sar
dec
push
jge
ljmp
sbb
pop
mov
sti
dec
outsb
sub
lds
clc
mov
aad
dec
push
ljmp
push
rcrl
jmp
data16
jge
jmp
popf
jb
push
icebp
or
cmpsl
and
out
or
dec
jle
mov
popa
jle
das
imul
clc
xor
sbb
repnz
add
leave
xchg
adc
cmc
movsb
fidivs
fimuls
mov
mov
int
jmp
jp
mov
cmp
push
push
outsb
or
fxch
pop
lret
into
push
push
sahf
dec
and
data16
sahf
jo
and
subl
orl
cs
inc
lea
aad
shl
addb
mov
add
flds
maxps
adc
in
scas
inc
divl
rolb
dec
fildl
or
mov
pop
dec
jmp
jnp
pusha
sub
in
push
imul
clc
ss
leave
push
pop
cs
xchg
fisubs
pop
imul
and
ret
or
and
dec
jno
fdivrs
add
mov
lret
arpl
dec
pop
sbb
jb
xchg
call
dec
mov
ret
stc
xchg
jne
push
mov
sbb
sub
jl
pop
mov
pop
in
mov
rcl
sub
pop
cltd
sub
loop
mov
mov
sbb
stos
fisubrs
cmc
lods
imul
mov
pop
and
fsubrl
out
mov
dec
loop
int
loop
pop
js
shll
addr16
out
xor
imul
daa
mov
loopne
addb
stos
dec
andb
test
and
fistpl
mov
xor
sysenter
je
dec
addr16
sti
jmp
insl
fwait
mov
xor
aam
movsb
das
lcall
test
pop
scas
xchg
ret
pop
sub
pop
into
cmpsb
mulb
shlb
repz
pushf
fnstsw
push
sub
andb
dec
pop
repz
dec
hlt
or
xor
data16
sbb
or
test
outsb
pop
dec
push
je
cmp
std
arpl
add
clc
in
push
lds
inc
and
scas
ret
lret
xor
lret
ret
ret
sub
loop
inc
pop
sbb
sub
shrl
loopne
fdivp
or
mov
pop
jo
mov
rcll
dec
pop
mov
push
push
gs
aas
push
jb
dec
lods
pop
cli
in
dec
pop
mov
incb
sub
sahf
jp
cmp
scas
jns
fsubrl
pop
add
ret
stc
xchg
xchg
test
stos
dec
pushf
push
stos
lcall
sub
jl
shrl
call
dec
mov
mov
ja
mov
xchg
popa
mov
or
push
std
rcrb
jmp
jo
xchg
cwtl
outsb
inc
or
and
sbb
push
jmp
pop
insl
pop
stos
mov
jp
or
divl
fwait
sahf
inc
ret
adc
jg
lods
sti
inc
xchg
xor
or
xchg
leave
pop
int
mov
mov
xchg
mov
jno
sbb
out
push
int3
cwtl
pop
gs
ljmp
sbb
les
lods
shll
add
addb
xor
aas
push
push
out
adc
xor
hlt
jno
mov
test
cmp
aas
fcomps
mov
and
into
push
mov
pop
ljmp
sbb
imul
aam
sbb
push
mov
or
ja
inc
mov
sti
scas
je
mov
sti
enter
pop
push
je
cmc
aas
cs
lret
sbb
jp
pop
inc
into
das
fistl
or
loope
dec
scas
sarl
jne
test
add
jge
aaa
jnp
scas
data16
mov
xor
aaa
cld
mov
add
stos
les
icebp
sbb
je
and
mov
pop
push
loope
lds
fwait
cmp
push
push
jmp
popf
aas
pop
hlt
adc
mov
push
jge
mov
xchg
rcll
ss
rcrb
and
xor
adc
dec
or
mov
bound
jle
xor
cmc
mov
cli
jmp
hlt
or
adc
inc
push
aad
je
pop
sub
lods
mov
outsl
sub
jecxz
pop
xchg
scas
mov
xchg
lcall
push
cld
xchg
mov
mov
dec
add
push
and
or
xchg
jmp
dec
das
ret
mov
sub
jl
andl
sbb
pushf
out
icebp
pop
mov
dec
xchg
dec
aas
mov
inc
repz
fwait
add
pop
lcall
push
push
sarl
aad
xlat
stos
jl
shll
ljmp
enter
xchg
or
adc
or
ja
and
mov
jl
notl
in
ret
cld
xor
pushf
outsb
mov
jecxz
cmc
inc
xchg
or
fldcw
inc
and
mov
cmpsb
sbb
add
adc
mov
dec
sbb
xchg
loope
dec
pop
lods
adc
rol
xchg
xchg
cmp
dec
daa
push
pop
mov
mov
das
stos
sbb
add
jg
pushf
and
sbbb
xlat
and
jg
pop
push
xor
push
jecxz
and
out
ret
cs
loope
ljmp
jo
mov
incb
adc
cmc
dec
dec
aad
addr16
js
dec
addr16
dec
insl
inc
adc
bound
movsb
sbb
shr
mov
rcrb
inc
mov
adc
sub
push
or
jno
shrl
lea
jecxz
dec
push
test
les
mov
sbb
xchg
mov
pop
jns
loope
fwait
push
sub
mov
or
out
pushl
das
pop
call
push
aas
xchg
negb
popf
jp
int
aaa
stc
mov
aaa
mov
fmul
and
stos
fiaddl
pusha
ffree
xor
jae
pop
dec
iret
insb
push
jl
in
js
xlat
cmpl
ljmp
clc
mov
or
or
shl
jno
rorl
pop
adc
movsl
xor
dec
xlat
lahf
fiaddl
mov
lret
shrl
das
pop
push
cmc
xchg
lcall
mov
aas
bound
push
ja
xor
and
xor
sbb
jg
lock
xchg
or
fists
and
mov
push
fidivrl
jnp
jecxz
jns
cmpsb
add
cmp
push
mov
cmpsb
aaa
mov
testl
pop
push
je
or
pop
cmp
add
or
lods
enter
nop
shlb
fidivl
push
stos
or
lret
mov
fwait
daa
and
mov
mov
jmp
push
pop
mov
pop
push
lret
shrb
jnp
ja
loope
or
rcr
stc
rorb
mov
stos
xchg
mov
out
mov
mov
sub
mov
mov
pop
sbb
je
ret
inc
jecxz
outsl
sbb
xlat
lcall
push
dec
mov
push
dec
inc
in
insb
and
loope
push
ret
jae
pop
jg
pop
mov
jb
or
mov
neg
inc
jecxz
mov
and
fadds
incb
or
adc
clts
add
mov
aas
das
sub
sbb
ret
and
jno
orb
loopne
rol
adc
fimuls
sbb
push
sahf
sbb
xchg
shlb
pushf
sub
lock
jge
inc
mov
push
dec
pop
jb
addr16
sahf
test
call
std
add
xor
leave
sub
adc
mov
sbb
cmp
pop
repz
sbb
outsl
and
jge
pop
jle
mov
bound
xchg
push
repnz
xchg
dec
mov
pop
aas
into
cmpsb
repz
add
decb
shlb
inc
sbb
add
mov
rcrl
and
addr16
vsubsd
push
jmp
cli
out
loopne
xchg
jl
in
sub
pop
dec
mov
cltd
cmp
popf
enter
in
pcmpeqw
adc
pop
popf
mov
cmpsb
dec
repz
mov
xor
mov
mov
adc
in
jbe
test
addr16
sti
xchg
loopne
fsubs
or
jo
and
aam
testb
xchg
dec
jmp
sbb
cs
xchg
sub
mov
stos
add
or
cmp
sti
mov
cmp
mov
push
dec
pop
imul
cwtl
mov
pushf
xor
addr16
mov
dec
dec
mov
push
lds
xchg
push
stc
dec
pop
test
test
in
in
push
jle
sbb
sub
mov
jmp
jnp
push
dec
or
in
mov
and
xchg
out
sahf
xlat
jb
cld
out
xor
push
mov
imul
push
or
lock
addb
jecxz,pn
xchg
addr16
fstps
and
rcrl
mov
add
scas
cmp
jp
mov
das
sub
leave
push
rcl
xchg
pop
pop
push
jecxz
add
push
jmp
add
push
ja
xchg
sbb
jmp
dec
inc
jmp
sub
int
adc
in
pextrw
xchg
fnstenv
mov
add
xchg
aad
push
jb
xchg
cli
mov
mov
jae
test
inc
inc
stc
cwtl
jl
jge
mov
in
fstpt
pushf
into
fwait
cmp
mov
adc
int3
insl
and
test
insb
jne
cli
lds
inc
cmp
mov
hlt
aam
sbb
in
jmp
int
movsl
rorb
mov
hlt
repz
inc
shrl
dec
andb
jnp
mov
out
mov
and
cwtl
lods
je
pop
jp
out
popf
add
mov
inc
add
xor
pop
mov
and
xchg
mov
aas
jecxz
loope
mov
mov
repnz
jl
pop
stc
mov
sbb
push
xchg
int3
in
shlb
pusha
or
out
cmp
ds
repz
rcr
fldenv
xchg
pop
mov
aaa
inc
xchg
adc
xchg
je
push
aam
popf
arpl
inc
cmpsb
into
pop
sbb
cmovle
or
inc
adc
es
jae
mov
pop
mov
xor
fwait
inc
ja
xor
outsl
sbbl
dec
sub
test
adc
std
hlt
jmp
daa
push
push
cwtl
pop
mov
cmc
pop
into
pop
xchg
cmpsl
fwait
aaa
pushf
int
fsubs
pushf
lret
lds
or
cs
lcall
test
bndstx
jno
xchg
inc
movsb
cltd
scas
inc
or
mov
dec
sbb
aas
jl
push
pop
jecxz
pop
mov
xor
rolb
aaa
jp
inc
mov
arpl
or
jecxz
dec
or
aaa
sub
xchg
repnz
lods
jne
sub
fucomip
fs
lods
mov
nop
insb
fldcw
mov
outsl
inc
test
pop
xor
push
mov
push
mov
ret
or
xor
push
in
out
push
xchg
jb
stos
loop
inc
fbstp
dec
fmul
cli
mov
mov
push
ds
pop
test
mov
repnz
cmp
xor
mov
push
xlat
jo
jmp
dec
cltd
sahf
jmp
insb
and
mov
stos
loope
inc
and
mov
cmpsb
and
cmpsb
xor
sub
adcb
mov
lock
cmp
or
flds
dec
std
pusha
rcrl
sub
push
inc
test
lods
sub
cmp
push
movsb
inc
arpl
aas
out
push
or
fwait
fwait
sbb
lret
push
sbb
aas
inc
cld
cli
clc
mov
cmp
push
cmp
addr16
jl
dec
out
mulb
xchg
inc
push
adc
mov
xor
inc
js
cmpsb
shll
jecxz
adc
jg
push
push
and
push
jp
ja
dec
jne
dec
sbbb
push
das
fisubl
test
add
pop
pop
jecxz
inc
xchg
test
mov
add
cmc
add
in
sbb
out
pop
imul
jp
add
in
insb
data16
movsb
mov
sub
sahf
jno
mov
sub
xor
sub
mov
in
insl
mov
movb
pop
mov
xchg
int3
pop
ds
pop
into
pop
adc
jo
lods
cli
inc
pop
lods
mov
inc
clc
cltd
lret
or
fnstenv
mov
outsl
jbe
mov
pop
lods
mov
inc
clc
cltd
cmp
push
jne
cmc
push
lods
push
sub
adc
jmp
mov
inc
clc
cltd
sti
insl
cmp
or
push
cmp
mov
stos
add
lods
jl
stos
jmp
addr16
in
stos
inc
pop
lods
mov
inc
clc
cltd
cmp
push
jne
cmc
push
enter
ficompl
lods
mov
inc
clc
cltd
sti
insl
cmp
or
push
cmovg
jge
jne
std
stos
mov
js
mov
js
or
in
stos
stos
jg
jge
jecxz
rolb
loope
daa
add
lods
xor
add
sahf
insb
cmp
dec
popa
int3
ds
pop
notb
and
mov
inc
clc
cltd
in
stc
test
lods
pop
mov
mov
dec
inc
pop
lods
mov
inc
clc
cltd
lds
hlt
adc
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
sbb
scas
aad
push
jbe
cmc
test
pop
das
cwtl
mov
or
inc
js
cmp
orl
push
add
mov
into
sbb
stos
in
cmp
push
jmp
mov
sub
xchg
cmc
or
cmp
mov
add
sbb
stos
insl
jmp
xor
pop
gs
faddl
xorb
loop
sbb
scas
push
js
aaa
ljmp
and
shl
neg
mov
in
push
rorb
xor
pop
add
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
inc
pop
lods
mov
inc
clc
cltd
push
inc
pusha
add
add
nop
add
add
popa
jo
jb
popa
je
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
push
popa
imul
je
jo
gs
bound
arpl
add
gs
je
push
push
add
push
imul
insb
insb
outsl
arpl
add
je
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
push
imul
jb
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
gs
jo
jb
add
inc
gs
gs
imul
add
popa
jo
insb
insb
outsl
arpl
add
je
jb
arpl
jae
gs
jo
add
je
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
imul
jo
imul
je
outsb
push
gs
js
gs
imul
gs
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
js
je
jb
arpl
jae
add
imul
add
je
je
dec
popa
outsb
fs
add
inc
gs
outsl
fs
gs
imul
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
je
imul
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
push
gs
popa
insb
jne
add
push
insb
jae
jb
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
je
popa
jae
inc
jb
outsl
jb
add
je
jne
jb
outsb
je
push
dec
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
je
jne
jb
outsb
je
push
add
dec
gs
jo
gs
jb
jns
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
je
imul
je
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
popa
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
popa
je
insb
inc
jo
inc
js
je
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
gs
add
popa
jo
imul
jb
imul
outsl
arpl
jae
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
gs
js
gs
imul
gs
add
inc
bound
addr16
jb
jae
outsb
je
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
gs
imul
add
je
jb
outsl
arpl
fs
js
push
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
inc
gs
inc
dec
inc
push
add
dec
jae
popa
insb
imul
add
push
je
push
outsb
ja
outsb
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
dec
inc
dec
popa
jo
je
imul
inc
dec
popa
jo
je
imul
gs
je
imul
inc
add
inc
gs
je
imul
push
add
inc
gs
imul
popa
je
add
inc
gs
popa
je
inc
outsl
jb
popa
je
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
dec
jae
popa
insb
imul
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
inc
outsl
insl
jo
jb
push
je
imul
outsl
insl
jo
jb
push
je
imul
add
add
add
add
fs
outsb
jne
add
add
add
push
inc
add
dec
add
dec
loopne
add
or
or
add
add
add
add
popa
xor
add
adc
add
mov
inc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
rolb
add
add
add
add
inc
pop
add
add
add
add
movl
add
mov
add
je,pn
js
add
add
add
adc
add
nop
add
add
add
and
add
jb
popa
je
add
pop
cmp
add
mov
add
add
add
inc
add
inc
cs
je
add
add
and
add
loopne
add
and
add
loopne
add
add
jb,pn
jb
add
add
add
adc
add
and
add
add
add
add
jb
insb
outsl
arpl
add
xor
add
and
add
add
inc
add
add
add
add
loope
outsl
in
dec
xchg
jbe
mov
adc
je
xchg
push
pop
sarb
xor
push
hlt
inc
fimull
push
adc
jb
repnz
cmc
shl
in
aaa
sub
decl
pop
dec
divb
scas
jb
das
aaa
dec
mov
fisttpll
outsl
jnp
pop
pop
out
push
pop
out
test
add
fildl
mov
push
repnz
lret
in
std
decl
xchg
add
mov
xchg
sbb
shlb
inc
shll
sub
cli
and
ss
mov
popf
xchg
insl
leave
pop
and
jnp
es
cltd
jmp
pop
addr16
jno
movsl
or
cmp
ret
add
aaa
add
jg
mov
decl
enter
fwait
xchg
rcrl
outsl
dec
jge
inc
pop
mov
in
test
fcomip
lret
xchg
js
dec
lahf
pop
popf
cltd
lcall
rcrl
in
std
jecxz
jmp
popf
dec
xchg
push
dec
sbb
test
xchg
jo
mov
xchg
xlat
mov
aad
stos
mov
jmp
scas
pop
pop
testl
scas
cmp
icebp
pusha
mov
add
jmp
sbb
dec
arpl
xchg
pushf
pop
in
leave
dec
pop
xchg
mov
inc
ret
call
mov
push
aas
nopl
sbb
or
arpl
jl
jno
std
sarl
pushf
jge
aas
push
call
addl
sub
adc
aam
jp
scas
mov
jns
incl
stos
mov
pushf
add
pop
xchg
mov
repz
lahf
popa
inc
xor
testl
inc
jno
push
push
mov
dec
ror
add
pushf
inc
out
fsubl
je
mov
adc
jle
test
inc
inc
and
sub
lds
call
and
mov
mov
int3
fildll
decl
fwait
data16
push
hlt
or
xchg
dec
xchg
ss
jne
call
mov
mov
inc
mov
adc
rorl
enter
or
loope
mov
and
dec
pop
and
cs
fsubrs
dec
lock
push
and
push
aam
inc
sarb
mov
outsl
cli
add
clc
push
insb
push
js
adc
cwtl
sub
mov
xchg
pop
pop
sbb
incl
decb
dec
out
adc
sbb
sub
xor
sbb
std
inc
ficoml
lock
incl
xchg
and
lret
into
sbb
add
pop
inc
fldenv
add
fildll
stos
mov
or
xchg
fstps
fwait
loopne
cmp
add
pop
sbb
call
mov
dec
pop
pop
add
jbe
mov
jmp
aad
aas
jmp
aaa
jecxz
cwtl
movsl
jl
ljmp
cltd
inc
fcmovnu
or
sbb
push
push
or
mov
out
fscale
push
mov
in
in
cltd
shll
or
add
xchg
incl
aad
lahf
sarl
or
mov
mov
and
pop
xchg
mov
push
push
fbld
mov
ja
lret
jp
sar
xchg
call
jmp
mov
push
jmp
push
jne
stc
jecxz
push
cmc
mov
lcall
ja
testl
cmc
jle
enter
outsb
fsubrs
leave
xor
pushl
repz
jnp
sbb
jb
or
push
scas
dec
xor
pushf
lahf
shrb
clc
jg
or
movsb
repz
test
jbe
es
pusha
dec
fdivs
std
incl
inc
cmp
addb
fsubs
out
mov
lret
sbbb
mov
or
mov
jnp
mov
adc
out
int
call
fcmovu
and
add
mov
pop
shr
scas
lahf
lret
sbbb
jecxz
dec
xor
pusha
call
fidivrs
push
es
icebp
xor
mov
inc
aas
lock
xchg
mov
in
imul
cmpsl
loop
imul
xchg
or
test
dec
pop
loopne
cmp
adc
dec
adc
incl
sti
leave
jle
test
adcb
subl
dec
inc
mov
in
repz
call
outsw
dec
insl
lock
nop
loope
inc
xchg
mov
cmp
incl
sub
popa
xchg
mov
fldt
bound
out
adc
jg
add
cli
pushl
pop
cwtl
pop
stos
int
jl
int3
mov
and
dec
ds
fmulp
lods
je
inc
scas
movsb
adc
pop
push
pushf
lcall
add
push
mov
mov
test
ror
dec
cld
fidivs
inc
in
inc
pop
out
mov
pop
out
push
jg
lcall
inc
xor
ljmp
movsl
in
mov
xorb
or
addr16
jmp
or
and
bound
out
addr16
enter
in
filds
jno
adc
mov
out
sbb
rcrl
into
jecxz
or
inc
dec
ljmp
stos
add
pop
jp
push
movsl
iret
adc
or
xchg
cmp
popf
jmp
push
lret
push
cmc
incl
xchg
pop
mov
xchg
push
addr16
pushf
xor
rorb
dec
dec
mov
stos
mov
or
add
lea
into
push
lock
mov
test
decl
bound
js
pop
fst
test
xchg
and
call
test
lahf
xchg
ss
dec
pop
pushf
cmp
adc
mov
xchg
dec
pop
jge
std
adc
or
cmp
and
clc
inc
xchg
mov
lcall
mov
lods
and
xchg
or
sub
pop
cltd
aad
xor
call
push
cmpl
xchg
xchg
sbb
sub
jmp
mov
or
mov
pop
sub
pop
leave
fisttpll
pop
jle
incl
call
adc
sbb
push
cmp
mov
inc
and
add
cmp
aam
pop
aam
ret
lea
sub
add
fs
jge
dec
lahf
xor
rclb
decl
mov
ljmp
jmp
or
ss
mov
add
mov
ret
push
in
loop
test
jge
ds
popa
ret
lods
call
sbb
fidivrs
int3
loope
lret
movsb
xchg
xchg
clc
fcompl
dec
pop
clc
data16
push
mov
pop
imul
adc
push
xor
sub
jb
xor
call
out
mov
xchg
adc
mov
dec
scas
cmc
mov
icebp
xchg
xchg
add
adc
mov
ljmp
inc
inc
out
psubusb
hlt
scas
test
jg
jae
ds
pushl
out
sarl
stos
dec
jmp
cld
jg
fiaddl
xor
mov
lods
pop
add
lcall
jg
arpl
int3
mov
or
or
pop
jmp
lods
push
mov
mov
jl
popf
mov
sbb
adc
ja
pushl
add
int3
fwait
dec
push
dec
adc
sub
shl
xchg
fstps
test
stc
aaa
std
inc
pop
pop
add
rcrl
cmpsl
nop
nop
sub
into
fmuls
inc
add
clc
movl
dec
push
fwait
mov
mov
fistpl
mov
cmp
pushl
scas
and
stos
jae
xor
hlt
adcb
add
das
ljmp
dec
cli
dec
dec
mov
pop
pop
int3
fcomps
in
in
mov
fisubl
test
inc
addr16
mov
sbb
mov
push
outsb
jp
fwait
repz
icebp
fsubp
out
decl
cmc
mov
cmp
inc
sbb
or
add
sbb
shll
cmp
out
mov
mov
sbb
iret
pop
push
mov
pop
jbe
cmc
insb
jo
outsl
clc
incl
add
imul
mov
hlt
dec
sub
pop
pop
das
add
cld
stc
pop
mov
add
pop
out
pop
test
push
cmp
mov
call
or
pusha
sti
addl
or
insb
lea
outsl
std
jg
test
rcr
int3
movsl
cmp
adc
cmp
shr
adc
sbb
sarb
call
adc
out
jns
int
dec
sub
and
pop
nop
mov
and
je
sbb
aam
or
sbb
jp
xchg
jne
mov
mov
push
inc
das
cmp
sub
test
movsb
into
sahf
xchg
popa
sbb
mov
ljmp
push
mov
into
cs
add
xorl
lret
mov
fldenv
jle
arpl
push
pmaddwd
stos
adc
cmp
cli
lcall
cmp
repnz
fsubr
je
pop
mov
add
mov
cmp
test
fisubrs
dec
cmp
inc
push
sub
add
orl
daa
popf
dec
or
shrb
push
jmp
xchg
filds
sbb
or
pushl
mov
sahf
mov
mov
xchg
mov
xor
incl
sub
hlt
dec
push
popl
mov
dec
std
scas
es
and
mov
repnz
cmp
nop
mov
fldenv
insb
dec
sahf
lea
and
aad
jmp
and
loopne
cmp
inc
jg
call
movsb
ret
sbb
dec
mov
pop
pop
ljmp
adc
or
call
push
stos
in
push
sahf
gs
jno
in
lds
sub
xor
pop
dec
jge
push
adc
call
xchg
jl
movsl
mov
pop
out
xor
cmp
aaa
push
dec
cmpsb
loope
add
lret
pushl
lcall
nop
aas
add
sbb
add
stc
fbstp
mov
adc
scas
dec
or
ljmp
movsl
test
push
or
add
cmpsb
pop
sub
push
dec
js
icebp
cli
stos
incl
add
insl
nop
cmp
cmpsb
gs
ss
ljmp
int
ss
jns
or
imul
pop
cmc
xor
mov
out
adc
ljmp
rcrl
test
test
dec
xlat
mov
inc
jmp
popl
xchg
or
sub
jne
lcall
les
push
scas
push
scas
cli
cmp
mov
mov
inc
push
jo
popa
cmp
mov
xchg
add
adc
jp
stos
ret
ret
jns
sub
call
movsb
pushf
inc
ljmp
mov
or
push
cs
and
lods
mov
pushl
dec
xchg
mov
pop
lea
push
jmp
popf
loope
mov
push
jne
dec
mov
ljmp
inc
cmp
fisubrl
and
fstpt
int
add
hlt
lcall
add
loopne
sbb
popa
sub
pop
subb
outsl
pusha
jg
decl
dec
dec
xor
adc
inc
add
rol
pop
in
out
lcall
and
out
jb
shll
add
adc
push
fsub
ret
mov
adc
mov
sbb
and
jl
stos
lods
in
mov
jl
fcomps
inc
cmp
mov
jae
xor
repnz
into
jnp
mov
xchg
pop
imull
adc
push
lret
stos
or
mov
loopne
icebp
dec
add
fiadds
popf
in
jb
incl
jb
shlb
or
stos
xor
daa
sbb
les
sbb
clc
ja
outsb
cli
dec
pop
fwait
aam
insl
aaa
adc
push
cmp
test
pop
and
push
sbb
inc
mov
cmpsl
test
imul
out
push
into
dec
sbb
cmp
mov
jmp
lret
shll
popa
aad
popa
xchg
rol
jo
sbb
pop
xorb
and
adc
jmp
mov
push
dec
daa
or
mov
mov
dec
adcb
out
push
mov
dec
mov
movsl
call
or
cmp
lods
fs
call
ja
ret
sti
cs
adc
xchg
lds
jecxz
scas
push
es
call
je
jbe
out
xor
shlb
xchg
dec
lcall
cs
decl
sbb
inc
dec
outsb
jnp
cmp
movsb
push
enter
ret
push
xchg
push
lcall
lds
test
mov
pop
movsb
sbb
adc
push
insb
or
jmp
xchg
inc
mov
push
mov
or
push
mov
xchg
mov
xor
fwait
je
jmp
mov
adc
xchg
js
nop
in
add
add
ja
xchg
sub
in
inc
jno
subb
addr16
shll
notb
leave
ffreep
ljmp
jns
cmp
divl
inc
push
int3
out
fwait
aad
adc
or
das
cli
call
aas
push
pusha
jmp
xor
push
xor
jmp
scas
daa
cwtl
jne
or
mov
add
nop
mov
lea
fs
nop
cmp
decl
dec
movsl
xchg
enter
or
xor
or
dec
mov
std
flds
cli
push
fistpll
scas
sbb
mov
fwait
adc
lret
push
xchg
push
sub
jecxz
imul
shrl
push
aam
mov
push
mov
sub
loope
stos
push
jp
add
sbb
sub
js,pt
lock
in
cmpsl
jno
xchg
call
add
jmp
sub
pushf
add
js
inc
push
mov
testl
jl
incl
mov
pop
addr16
js
mov
xor
loopne
and
incl
mov
icebp
and
xor
jmp
subb
clc
pop
pushl
mov
aas
dec
fiadds
out
pop
jge
pop
or
out
mov
cmp
mov
ret
das
mov
ficomps
int3
lret
pop
adc
insb
inc
imul
fists
mov
popa
js
inc
cmc
fs
stos
and
mov
sti
ljmp
mov
inc
loopne
pop
jbe
mov
mov
pop
add
xchg
dec
repnz
fwait
pop
jg
push
lods
mov
jle
int3
jae
hlt
test
xchg
or
xor
decl
enter
fwait
data16
add
mov
adc
adc
js
repz
ljmp
or
test
nop
movsb
mulb
popa
in
sub
mov
push
dec
mov
jns
ret
sub
and
lcall
fldt
aad
shl
out
cmp
incl
xchg
xchg
or
bound
mov
rcll
ss
lcall
shlb
lds
dec
gs
popa
sbb
xchg
jb
loop
mov
cmp
pop
hlt
ljmp
aam
sub
jb
dec
xor
mov
dec
cmp
ss
hlt
mov
call
insb
cmc
outsb
mov
les
js
sar
push
push
leave
ror
mov
push
xlat
mov
pushl
inc
or
clc
imul
aaa
in
or
scas
xchg
push
pop
aad
adc
pop
lret
std
jmp
scas
inc
mov
pop
inc
pop
mov
xor
dec
shll
adc
push
inc
push
sbb
push
jl
cld
ss
sbb
int3
cmpsb
jmp
or
pushl
loopne
mov
outsl
pop
hlt
ficoms
gs
leave
pop
and
pop
push
push
push
xor
jns
ljmp
xor
dec
shl
mov
pop
pop
push
jg
push
fmull
das
lcall
imul
pop
adc
pushf
movsb
fsin
adc
adc
loope,pn
int
push
inc
ss
call
rcrb
stos
test
and
xor
leave
xor
sbb
fimuls
dec
mul
push
inc
jnp
cltd
or
mov
xlat
push
mov
sbb
sbb
xchg
mov
sti
orl
call
lret
xchg
push
cmp
push
divb
les
push
add
lret
add
pushl
pop
and
sbb
data16
push
fsts
insb
push
jl
jmp
clc
mov
jmp
shrb
add
and
mov
movsl
shll
mov
push
cmp
call
push
add
scas
push
sub
mov
jle
xor
fst
lcall
cwtl
hlt
add
daa
stc
push
test
push
aam
sbb
out
add
push
add
mov
movb
add
mov
pop
pop
mulb
scas
cmc
mov
cli
imul
push
out
movl
push
aaa
mov
xor
out
xor
daa
pushf
das
jo
push
call
jbe
add
and
fsubl
add
fbld
nop
dec
mov
call
rclb
xchg
sub
or
loope
out
cmp
push
decl
and
pushf
repnz
lods
es
sub
pop
lock
mov
popf
insl
ret
inc
sub
lcall
int3
test
adc
lcall
push
pop
movb
jns
jge
pushl
insb
mov
and
call
popa
and
pop
les
nop
roll
in
pop
icebp
fcomip
jmp
mov
dec
ret
das
sahf
test
sbb
ljmp
inc
xchg
pop
mov
fildll
jg
xchg
mov
jg
mov
mov
mov
out
pushf
add
mull
lds
scas
ret
mov
mov
add
fs
pop
mov
shl
mov
mov
push
icebp
dec
sarl
hlt
and
push
jmp
mov
rol
ljmp
stos
add
jo
ret
loopne
lea
jns
fcomi
inc
pop
sub
dec
in
ljmp
je
sbb
lock
ss
sbb
jae
mov
stos
insl
pop
sbb
out
lret
and
or
ja
jnp
push
push
mov
pushl
and
testb
cmp
ret
sbb
add
pop
xor
rorb
in
incl
push
jno
insb
xlat
sbb
mov
pushf
insl
mov
jns
ror
mov
sub
xchg
xchg
add
das
cmp
stos
cmp
mov
in
idivl
cmp
hlt
jg
in
cs
popa
xchg
xchg
jnp
int3
xor
les
fs
xchg
cmpsb
fucomi
mov
jbe
rcrl
movsl
inc
fbld
push
xchg
cltd
push
adc
inc
mov
cmp
sub
mov
fwait
sbb
push
fcoms
aad
dec
lods
push
mov
xchg
pop
mov
ljmp
shll
mov
push
mov
fimull
sub
inc
rolb
iret
arpl
jg
pop
mov
sbbb
out
cmp
incl
movsb
mov
jge
jmp
push
lods
sbb
movl
push
movsl
dec
pop
imul
out
ljmp
lods
jg
fidivrs
enter
fbstp
mov
push
mov
dec
mov
pushl
movsb
rcr
pop
add
xchg
mov
inc
fsubrp
cmpsb
vhsubps
sub
call
std
xchg
stc
pop
jge
mov
mov
ror
testb
sub
mov
mov
call
fs
jno
in
xlat
xchg
rcrb
mov
out
mov
cli
sbbb
inc
in
cli
inc
fistl
mov
and
sub
add
jecxz
ficoms
mov
dec
rcll
mov
mov
ljmp
ljmp
jle
or
std
ds
inc
add
xchg
incl
shr
aam
xchg
sar
dec
push
jge
ljmp
sbb
pop
mov
std
sbb
sti
dec
outsb
sub
lds
test
inc
dec
push
ljmp
stos
mov
and
jp
out
data16
jge
jmp
popf
jb
push
icebp
or
cmpsl
test
mov
xor
jle
mov
mov
push
mov
sbb
fstps
ljmp
rclb
lret
leave
xchg
adc
inc
cmc
movsb
fidivs
fimuls
mov
mov
int
xchg
jp
mov
cmp
push
push
outsb
or
decl
fxch
pop
lret
into
push
push
sahf
dec
and
data16
sahf
jo
and
mov
orl
cs
inc
lea
aad
shl
addb
mov
incl
pop
das
adc
in
scas
inc
divl
rolb
dec
fildl
or
adc
pop
mov
pop
dec
jmp
jnp
sub
in
push
imul
clc
ss
leave
push
pop
decl
sti
xchg
fisubs
pop
imul
and
ret
or
mov
jno
fdivrs
xchg
inc
enter
mov
lret
arpl
dec
mov
jb
xchg
call
dec
mov
ret
stc
xchg
jne
push
mov
sbb
sub
lock
inc
jl
pop
mov
pop
in
mov
rcl
sub
cltd
sub
jmp
int3
mov
mov
sbb
stos
fisubrs
cmc
lods
imul
mov
decl
pop
pop
and
sub
out
mov
dec
loop
int
loop
pop
js
shll
addr16
out
xor
imul
daa
mov
loopne
incl
andb
test
and
fistpl
mov
xor
sysenter
je
dec
addr16
decl
jmp
insl
fwait
mov
xor
aam
movsb
das
lcall
test
pop
scas
xchg
ret
pop
sub
incl
pop
into
cmpsb
mulb
shlb
repz
pushf
fnstsw
push
sub
cmp
jmp
jnp
pop
repz
dec
hlt
or
xor
data16
sbb
or
test
jp
push
cwtl
outsb
pop
dec
push
je
cmp
std
arpl
add
clc
in
push
lds
inc
and
out
loopne
lret
xor
lret
ret
ret
sub
loop
inc
pop
sbb
sub
shrl
loopne
ljmp
rorl
mov
push
test
pop
mov
push
push
gs
aas
push
jb
dec
lods
pop
cli
in
dec
pop
mov
incb
sub
sahf
jp
cmp
scas
jns
call
fsubrl
pop
add
or
xchg
test
stos
dec
pushf
push
stos
lcall
call
sbb
jl
shrl
call
dec
mov
mov
ja
mov
xchg
popa
das
clc
mov
or
push
std
rcrb
jmp
jo
xchg
test
mov
lcall
mov
jne
xor
sbb
push
jmp
pop
insl
pop
stos
mov
jp
or
idiv
pushl
fwait
sahf
inc
ret
adc
jg
lods
sti
inc
xchg
xor
or
xchg
leave
pop
int
mov
mov
fiadds
xchg
mov
jno
sbb
out
push
int3
cwtl
pop
gs
ljmp
sbb
push
std
decl
les
lods
shll
add
inc
shll
ljmp
ficoml
out
adc
xor
hlt
jno
mov
in
int3
cmp
fcomps
mov
and
into
push
mov
pop
ljmp
sbb
imul
aam
sbb
push
mov
or
ja
incl
sub
cld
sbb
scas
je
mov
sti
enter
pop
push
je
cmc
aas
cs
jmp
lret
push
fwait
in
jp
pop
inc
into
das
fistl
or
loope
jp
pushl
test
add
jge
aaa
jnp
scas
data16
mov
xor
aaa
cld
mov
add
incl
xor
icebp
sbb
je
and
mov
pop
push
loope
lds
lcall
push
push
jmp
popf
aas
pop
hlt
adc
mov
push
jge
mov
pushl
xchg
rcll
ss
rcrb
and
xor
in
fstpl
incl
mov
bound
jle
xor
cmc
mov
cli
jmp
hlt
or
adc
incl
add
pop
sub
lods
mov
outsl
sub
jecxz
pop
xchg
scas
mov
xchg
lcall
and
dec
push
cld
xchg
mov
mov
dec
add
push
and
decl
or
xchg
jmp
dec
das
ret
mov
sub
jl
andl
sbb
pushf
out
icebp
incl
mov
dec
xchg
dec
aas
mov
inc
repz
fwait
add
pop
lcall
push
push
sarl
aad
xlat
stos
jl
shll
icebp
sahf
insl
into
ljmp
enter
xchg
or
adc
or
ja
and
mov
jl
push
push
inc
in
ret
cld
xor
pushf
outsb
mov
jecxz
cmc
inc
xchg
or
fldcw
inc
mov
push
in
adc
aad
dec
mov
into
mov
sbb
xchg
mov
dec
dec
pop
lods
adc
rol
xchg
xchg
cmp
dec
daa
push
pop
mov
mov
std
call
stos
sbb
int3
jg
pushf
and
sbbb
xlat
and
pushl
jg
pop
push
xor
push
jecxz
es
ret
cs
loope
fucomp
jne
rcrb
or
jo
mov
incb
adc
cmc
dec
dec
aad
addr16
fstpt
adc
sbb
mov
shr
mov
rcrb
jg
mov
adc
sub
push
or
jno
shrl
lea
jecxz
dec
push
incl
pop
les
mov
sbb
xchg
mov
pop
jns
loope
fwait
das
fdiv
ljmp
inc
and
cmp
mov
out
pushl
das
incl
call
push
aas
xchg
negb
popf
jp
int
aaa
stc
mov
aaa
mov
jmp
inc
imul
lock
fiaddl
pusha
ffree
xor
jae
pop
dec
iret
insb
push
jl
in
cmp
xlat
cmpl
ljmp
clc
mov
or
or
shl
jno
rorl
pop
adc
jmp
xlat
lahf
fiaddl
mov
lret
shrl
in
cmc
xchg
lcall
pushl
push
ja
xor
and
xor
sbb
jg
lock
pushl
xchg
or
push
push
and
mov
push
fidivrl
jnp
jecxz
jns
lcall
cmpsb
add
sbb
push
mov
cmpsb
aaa
mov
testl
pop
push
je
decl
ret
and
lock
lods
enter
nop
shlb
fidivl
push
stos
or
lret
mov
mov
daa
and
mov
mov
outsl
arpl
hlt
push
pop
mov
pop
push
dec
xchg
nop
shrb
jnp
ja
loope
or
rcr
stc
rorb
mov
incl
mov
out
mov
mov
pop
jae
mov
inc
ljmp
sbb
je
ljmp
ret
inc
jecxz
outsl
sbb
xlat
lcall
push
dec
mov
push
dec
inc
in
insb
and
jmp
fcoms
jae
pop
jg
pop
mov
jb
or
mov
neg
inc
jecxz
mov
and
fadds
incb
or
adc
clts
add
decl
mov
aas
das
sub
sbb
ret
and
jno
orb
loopne
call
cmp
rcr
fwait
sbb
push
sahf
sbb
xchg
shlb
pushf
sub
lock
fcomip
jnp
jge
mov
push
dec
pop
jb
addr16
sahf
test
call
std
incl
xchg
sbb
sbb
sub
push
fistpl
jle
xchg
xchg
add
sbb
cmp
pop
repz
fcomip
pushl
sbb
outsl
and
jge
jle
mov
cmp
jg
xchg
push
repnz
xchg
dec
mov
pop
aas
into
in
mov
decb
shlb
inc
sbb
add
mov
rcrl
and
filds
mov
decb
xor
shrb
pop
jmp
pop
dec
mov
cltd
cmp
popf
enter
in
pcmpeqw
mov
mov
cmpsb
dec
repz
mov
xor
mov
decl
jbe
test
addr16
sti
xchg
loopne
fsubs
or
jo
and
pushl
aam
testb
xchg
dec
jmp
sbb
cs
xchg
sub
mov
lcall
in
xor
or
cmp
sti
mov
cmp
mov
push
dec
pop
imul
cwtl
mov
xchg
jg
test
and
aam
mov
mov
push
cld
jmp
xchg
push
stc
dec
pop
test
test
jle
sbb
sub
pushl
jne
ret
push
push
dec
or
in
jo
loope
mov
out
sahf
xlat
jb
cld
out
sub
jl
mov
imul
mov
mov
or
lock
addb
jecxz,pn
xchg
addr16
fstps
lcall
and
rcrl
mov
add
scas
cmp
scas
mov
mov
adc
push
rcl
xchg
pop
pop
push
jecxz
add
lods
inc
add
ljmp
ja
mov
inc
jmp
sub
int
adc
call
pextrw
xchg
fnstenv
and
std
jbe
sbb
shrb
mov
pushl
cli
mov
mov
jae
test
inc
inc
stc
cwtl
jl
ljmp
outsl
jnp
test
mov
pushf
into
fwait
cmp
mov
adc
dec
jg
dec
int3
insl
and
test
inc
cmc
and
inc
hlt
inc
incl
dec
test
pop
scas
jne
aam
sbb
jmp
int
movsl
sar
xchg
mov
mov
repz
inc
shrl
dec
andb
call
jnp
mov
out
mov
and
cwtl
lods
je
pop
jp
out
popf
add
mov
inc
scas
cli
incl
xor
pop
mov
and
xchg
mov
aas
jecxz
pusha
mov
std
cld
cli
mov
repnz
jl
pop
stc
mov
mov
call
call
shlb
pusha
or
out
cmp
ds
repz
rcr
fldenv
xchg
pop
mov
std
pushl
inc
xchg
adc
xchg
je
push
aam
popf
arpl
inc
cmpsb
into
pop
sbb
imul
pushl
pop
mov
adc
es
jae
mov
mov
xor
call
fwait
inc
ja
xor
outsl
sbbl
dec
sub
test
adc
std
hlt
jmp
std
jmp
push
push
cwtl
pop
mov
cmc
pop
into
pop
xchg
cmpsl
fwait
aaa
pushf
int
fsubs
pushf
lret
lds
or
mov
pop
lcall
test
bndstx
jno
xchg
inc
movsb
cltd
scas
incl
lods
mov
out
ret
or
sbb
aas
jl
push
pop
jecxz
pop
mov
xor
rclb
std
incl
aaa
jp
inc
mov
arpl
or
jecxz
dec
or
aaa
and
mov
call
repnz
lods
jne
sub
fucomip
fs
lods
mov
nop
insb
fldcw
mov
decl
out
xor
push
mov
push
mov
ret
or
xor
push
in
out
call
add
ss
fmul
cli
mov
mov
push
ds
pop
test
pushl
pop
add
sub
stos
xor
mov
push
xlat
pushl
jmp
dec
cltd
sahf
jmp
insb
and
mov
stos
loope
inc
and
mov
lcall
testb
test
or
stos
enter
adcb
mov
lock
ljmp
flds
dec
std
pusha
rcrl
sub
push
inc
test
lods
sub
cmp
push
movsb
inc
arpl
decl
push
or
fwait
sbb
lret
push
sbb
aas
inc
in
jg
mov
cmp
push
cmp
addr16
jl
dec
out
mulb
xchg
inc
push
adc
mov
pushf
bound
js
lock
jg
jecxz
adc
jg
push
push
push
push
jp
ja
dec
sti
decl
sbbb
push
fisubl
test
add
pop
pop
jecxz
inc
mov
jo
mov
add
cmc
add
in
sbb
out
pop
imul
call
xchg
or
insb
data16
movsb
mov
sub
sahf
jno
mov
enter
decl
sub
mov
in
insl
mov
movb
pop
mov
ljmp
mov
int3
pop
ds
pop
into
pop
adc
jo
lods
cli
inc
pop
lods
mov
inc
clc
cltd
lret
sti
pushl
or
fnstenv
mov
outsl
jbe
mov
cmp
decl
sti
call
jb
push
lods
push
sub
adc
jmp
cmp
or
push
cmp
adc
inc
rep
add
cld
cwtl
stos
jmp
addr16
in
stos
jg
inc
repnz
enter
ficompl
dec
jge
jne
std
mov
inc
stos
mov
js
mov
jecxz
or
loope
jle
add
lods
xor
add
sahf
insb
cmp
dec
popa
int3
ds
pop
notb
fdivr
jg
add
in
stc
test
lods
pop
mov
mov
dec
das
js
fdivrs
and
hlt
adc
nopl
scas
out
adc
inc
cmc
test
pop
das
cwtl
mov
or
inc
js
cmp
orl
xchg
xor
xchg
push
add
ret
les
in
jmp
mov
decl
xchg
cmc
or
cmp
mov
or
pushl
xor
pop
gs
faddl
xorb
loop
sbb
scas
push
ljmp
and
shl
neg
mov
in
push
rorb
xor
fwait
pop
add
pop
sbb
push
jno
and
inc
and
add
addb
adc
idivb
dec
gs
jo
jb
je
push
push
gs
outsb
jbe
jb
outsb
out
jg
ljmp
outsb
je
popa
jb
popa
bound
xor
outsl
jae
dec
popa
outsb
fs
dec
push
out
idiv
popa
imul
je
jo
dec
bound
arpl
mov
push
mov
insb
inc
insb
je
sbb
pop
mov
adc
cmp
dec
outsl
popa
fs
imul
les
push
inc
ss
insl
aas
data16
fadds
stc
inc
xor
dec
int3
fldl
insb
xor
mov
popa
add
outsb
outsw
push
inc
adc
stos
dec
popa
jae
jb
jb
push
test
outsl
add
je
icebp
push
outsb
push
mov
insb
sub
clc
je
outsl
fiaddl
cwtl
inc
imul
mov
adc
fs
outsl
sbb
out
cmp
insl
xchg
pop
test
js
addr16
das
jle
roll
push
push
imul
or
push
outsl
cmovb
loop
pusha
jno
mov
sub
loopne
shll
push
jns
icebp
rclb
inc
gs
cmp
std
popa
push
pop
push
xchg
and
push
and
mov
rcll
lcall
enter
cmp
sub
gs
mov
cmovae
cld
mov
mov
sbb
dec
dec
outsl
or
push
push
inc
inc
rclb
js
push
and
adc
push
push
xchg
dec
xchg
or
xchg
jae
insb
inc
fcomip
push
loope
ret
test
in
push
jns
inc
push
push
jae
test
test
add
or
test
loope
jnp
push
add
push
jecxz
gs
ret
or
popa
dec
and
lock
imul
loopne
sarl
popa
and
dec
jae
bound
addr16
loope
push
push
jb
lods
inc
sub
fildl
jae
rolb
insb
mov
insb
xchg
lds
inc
mov
andl
sub
roll
sahf
sub
out
pop
dec
sbb
inc
inc
push
sub
out
dec
inc
dec
adc
call
in
popa
xchg
push
je
bound
xchg
push
adc
jne
cwtl
gs
jb
xor
pop
push
dec
inc
dec
call
imull
mov
push
sbb
and
aas
ja
insl
push
in
xor
test
inc
mov
add
sbb
popaw
inc
mov
inc
add
or
sub
in
sub
loope
and
cmp
je
pop
mov
mov
xchg
enter
popa
repnz
push
sub
insb
pop
sbb
insl
mov
mov
outsl
ret
or
add
dec
xor
add
fldl
sti
add
or
or
add
or
cmp
adc
mov
push
add
negl
mov
add
aaa
add
dec
std
sahf
jae
popa
cmp
rclb
scas
sahf
cmp
adc
pop
xlat
inc
xor
or
add
inc
dec
dec
dec
push
out
cs
je
jl
dec
popa
or
das
xlat
aas
or
jb,pn
mov
pop
cmp
in
dec
jnp
leave
pop
mov
inc
cs
fdivrl
loopne,pn
js
ud0
push
out
testb
jae
arpl
xlat
out
and
ret
push
push
lahf
divl
inc
xchg
and
xchg
push
add
and
andb
adc
pusha
inc
add
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
lret
inc
add
