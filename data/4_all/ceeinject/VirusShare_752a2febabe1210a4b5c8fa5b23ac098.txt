call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
sub
sbb
or
js
sbb
js
lods
hlt
adc
cwtl
jge
insl
clc
sbb
fsubrs
je
or
js
push
aad
pop
test
stc
jge
insl
mov
cmp
fcmove
mov
shr
popfw
or
fcompl
outsb
lock
dec
lcall
scas
test
xchg
popa
in
jl
push
es
mov
add
sbb
aam
aam
cwtl
mov
call
cmpsl
dec
sub
mov
push
mov
fdivrs
insl
shrb
jmp
xchg
sub
out
or
cmp
adc
inc
jmp
xchg
push
push
mov
stc
jbe
pop
sbb
enter
and
pusha
test
ret
lea
or
mov
cmp
mov
sbb
imulb
cmpsl
mov
call
adc
mov
cmp
jle
sbb
or
pushf
popf
adc
jle
xor
jge
insl
mov
loop
ljmp
mov
in
pop
clc
push
in
sti
dec
stc
mov
sbb
sbb
inc
lods
arpl
dec
test
cwtl
imul
lods
aam
leave
fists
cli
xor
lock
imul
jns
pop
mov
mov
lea
dec
lods
mov
jge
insl
clc
sbb
enter
sub
sbb
or
js
push
lods
mov
jge
insl
clc
sbb
enter
mov
mov
andb
ljmp
cmp
or
add
xchg
mov
pop
cmp
fwait
rolb
icebp
adc
gs
xor
std
iret
sbb
scas
xchg
and
adc
push
insl
push
cmpsl
repz
imul
dec
mov
xchg
push
inc
ss
pop
mov
or
mov
outsb
cmc
push
jno
loope
mov
or
xchg
aas
mov
loope
dec
cmp
shr
aad
jecxz
adc
rol
mov
daa
mov
mov
imul
jno
test
add
into
call
shlb
jne
shll
push
mov
sahf
jl
or
popa
push
int
ja
mov
push
jge
pop
lods
shll
xchg
xchg
je
cld
mov
ret
jp
mov
adc
inc
xor
mov
fisubl
in
mov
jp
insb
xchg
fldl
sbb
jnp
clc
int
push
cmp
shlb
in
pop
and
loope
outsb
dec
pop
je
mov
inc
testl
mov
and
or
fwait
stos
pop
xlat
adc
cmp
arpl
test
add
int
pop
ret
gs
ret
stos
mov
testb
mov
pop
loope
sbb
mov
sahf
es
pushf
in
pop
push
idivb
xchg
fs
std
imul
xor
loope
iret
pop
icebp
enter
mov
movl
add
fmulp
popf
xchg
lods
lock
pop
lea
fldenv
sbb
xchg
int
dec
idiv
sti
mov
in
mov
ret
push
fldt
sbbl
out
lock
shll
stc
inc
inc
pop
mov
mov
sub
inc
jo
fists
pop
loop
mov
xchg
mov
rolb
decb
sub
mov
outsb
mov
pop
fisubl
sti
pop
pushf
outsl
daa
popa
jae
push
inc
mov
mov
or
pop
xchg
jge
dec
cmpsl
lds
out
mov
mov
daa
cwtl
in
mov
into
adc
adc
cli
sub
js
push
out
movsb
jae
cltd
enter
cltd
adc
jbe
xor
inc
das
add
xchg
adc
sahf
leave
shlb
fistpl
mov
or
and
mov
loop
cmp
xchg
sub
adc
or
add
gs
pop
mov
add
lea
aam
lret
cmp
pop
popf
or
fcmovnbe
pop
xchg
push
or
jne
shr
inc
cmc
and
xor
insb
jnp
and
push
shlb
out
popf
je
call
xor
outsb
inc
pop
mov
roll
cmp
push
push
stos
lcall
repz
fxtract
mov
js
mul
jns
add
fsubrs
iret
dec
addr16
push
pop
scas
lret
lcall
push
push
int3
cmpsb
add
mov
loope
pop
test
mov
test
jb
and
cmp
lcall
loope
push
into
inc
push
mov
and
sbbb
notl
rep
rclb
hlt
dec
insl
mov
scas
dec
dec
paddsb
stc
in
mov
pop
mov
push
out
pop
mov
sarl
addr16
push
mov
ret
jg
xchg
andb
test
cwtl
lret
inc
sar
push
ss
lock
cmp
fucomi
add
repz
orb
mov
outsl
cld
jnp
aaa
sbbb
es
dec
inc
xor
add
das
or
push
aaa
in
cli
pop
jge
add
mov
jg
cmpsl
mov
sbb
ds
outsl
pusha
lds
mov
mov
popa
movsb
xchg
pop
push
add
in
out
mov
sub
lods
jo,pn
scas
mov
sub
inc
xchg
jb
rcrb
roll
or
jp
mov
xchg
aam
aas
jg
sbb
mov
and
sbb
mov
mov
pop
dec
rorb
pop
add
dec
daa
sbb
mov
jge
outsl
jnp
or
sar
test
ficoml
bound
test
clc
scas
jnp
pusha
adc
add
outsb
int3
lods
mov
lods
jns
sub
fisubrs
cld
mov
subb
pop
cli
insl
mov
repz
std
loopne
ljmp
push
es
cli
je
mov
notl
xchg
mov
loop
or
das
lahf
dec
enter
pusha
fadds
lea
push
imul
stos
jb
and
adc
pop
xchg
push
cmpsb
les
test
stos
popf
dec
adc
aaa
inc
cltd
dec
scas
adcb
movsl
movsl
loop
or
mov
push
lret
jmp
or
repnz
add
mov
jl
popf
pop
mov
int3
jp
push
rol
sahf
cmpsl
xchg
dec
stc
ss
addl
daa
pushf
lfs
xchg
mov
xor
adc
rorb
sbb
lret
mov
lret
test
mov
mov
int
into
and
dec
movsb
lods
lahf
mov
dec
divl
sbb
fs
jno
push
mov
sbb
xor
mov
mov
push
js
and
imul
fs
ss
or
cmp
aaa
test
push
push
push
jmp
push
jl
fimull
xchg
mov
or
push
mul
negl
push
jae
push
xchg
and
push
jb
push
sub
ret
fcomip
xor
cmp
mov
fsub
cmp
inc
icebp
repnz
add
and
mov
push
pop
lds
testl
adc
lods
loopne
jno
xchg
aad
xchg
in
lahf
leave
jl
in
push
lods
and
cmp
adc
adc
inc
xor
rcrb
inc
jl
rcrb
pop
xorl
negl
mov
jecxz
xor
inc
loope
repnz
loop
push
imul
mov
lea
cmc
repnz
jb
mov
popf
lods
jecxz
push
imul
fucomp
jns
jg
sub
add
sub
sbb
add
fildll
movsb
pop
sub
loop
ret
imul
cld
inc
sbb
and
lret
xor
hlt
add
dec
jo
into
xchg
stc
scas
cmp
pop
sbb
sbb
xor
sub
and
fiaddl
push
lcall
shll
stos
cld
and
xchg
into
jae
adc
jae
sub
push
mov
test
push
lods
push
mov
cmp
pusha
push
or
push
mov
xchg
pop
cld
shl
or
adc
fs
or
mov
pop
mov
dec
neg
out
adc
mov
adc
mov
xor
lods
push
ja
int
mov
popf
push
sub
pcmpeqw
loopne
or
adc
std
jbe
xor
fwait
cltd
lods
fs
cmc
jno
fwait
push
mov
sbb
mov
cmp
or
dec
sbb
fistpl
cmpl
push
pop
cmc
repnz
mov
sub
mov
xor
mov
mov
jl
scas
lret
rol
je
ljmp
jl
inc
lods
fldt
bound
out
jge
and
mov
cmpl
out
test
rorb
lret
mov
jae
jg
jo
int
pop
rorl
arpl
mov
sub
and
ror
sbb
frstor
imul
cmp
flds
into
sahf
roll
push
in
pop
pop
pop
pop
cmovl
mov
cltd
mov
lret
mov
mov
das
pop
repnz
adc
mov
aam
rol
push
in
fwait
dec
popf
mov
test
mov
cs
inc
jo
jecxz
fildl
scas
fwait
jecxz
xlat
sbb
cwtl
subw
mov
jmp
sbb
cmp
cli
ds
add
xlat
aam
sti
xor
mov
push
out
pop
pushf
cmc
fwait
mov
leave
testl
xchg
xor
mov
mov
popf
mov
jl
ss
xlat
inc
mov
and
daa
ljmp
push
int3
repnz
dec
mov
and
mov
pop
add
cmp
xor
mov
cmpl
scas
aad
push
insb
cli
adcb
popf
pusha
mov
pop
gs
out
inc
xchg
adc
push
sbb
sub
dec
fildl
shl
imul
test
push
jge
arpl
enter
cmp
and
jno
lock
jae
lret
outsl
inc
movsl
lods
sbb
dec
aad
nop
jge
jb
and
lret
or
stos
ss
xor
dec
ds
pop
lret
call
stc
mov
dec
dec
pop
mov
and
sub
pop
mov
shlb
repz
loope
or
dec
pop
sbb
lahf
push
es
mov
and
sub
rcll
and
cmp
sub
sbb
sub
lds
xor
bound
pop
pop
std
loopne
in
cmpsl
repz
jnp
jae
setp
fisttpll
popa
lock
or
inc
cli
cli
jg
imul
and
subb
inc
rclb
fldcw
cli
mov
ds
addr16
cmpb
dec
push
movsb
arpl
adc
dec
mov
push
xchg
psrlq
lds
mov
leave
pop
jle
xor
andb
iret
xorb
mov
push
xor
and
push
dec
xchg
enter
sub
xchg
xchg
and
pusha
pop
inc
sub
mov
loope
adc
outsl
nop
clc
pushf
adc
or
jb
call
cld
aas
fildl
pop
daa
mov
imul
nop
inc
sub
in
xchg
or
in
jno
movsb
push
sahf
or
lret
enter
inc
stc
daa
or
and
dec
clc
pand
sbb
iret
dec
daa
sbb
inc
pushl
scas
dec
es
mov
mov
ficompl
in
pop
imul
scas
clc
jp
push
push
xlat
in
xchg
add
adc
mov
add
aad
inc
mov
or
pushf
jb
into
mov
lea
dec
sbb
mov
ja
xchg
cmc
fbld
iret
mov
sti
cmpsb
xchg
xchg
dec
mov
jo
fidivs
ss
leave
jno
movsl
loop
leave
xor
mov
sbbb
iret
jg
movsl
ss
cmp
dec
or
cmc
fs
int
into
out
das
mov
push
pop
fs
xor
hlt
pop
pop
test
lds
cld
scas
pop
xchg
outsb
fildll
shlb
push
insl
fdivs
out
lret
sub
cmc
lds
mov
sbb
jne
push
cmc
jmp
jnp
and
and
lret
stos
pop
push
hlt
pop
adc
aam
dec
fcompl
xchg
xchg
sub
mov
stos
push
xchg
inc
cmpsl
mov
pop
dec
setns
xor
je
mov
add
push
push
test
in
imul
insb
stos
pop
or
xor
inc
inc
jmp
sbb
stos
jg
lret
or
xlat
add
scas
or
pusha
and
mov
sub
ljmp
mov
and
xchg
xlat
cmp
xlat
mov
xor
movb
and
xchg
outsb
pop
int3
dec
mov
ror
es
loop
call
mov
pop
ja
jo
call
outsl
mov
xlat
pop
adc
cs
enter
jl
jno
mov
jnp
push
push
push
cmp
and
xchg
int3
dec
dec
push
fisttpll
and
sbb
or
cmp
dec
push
and
jmp
and
loope
pusha
push
mov
pop
fstl
xor
xor
cmp
xchg
pushf
jge
hlt
cld
aad
into
lods
lahf
push
loopne
inc
loop
xchg
or
push
jg
adc
pop
std
enter
call
rcl
jae
fists
call
or
enter
pushf
mov
sahf
push
xchg
test
std
arpl
push
test
lock
xchg
sarb
out
fnsave
pop
add
rcll
fiadds
aam
dec
push
sub
and
out
test
or
mov
jae
out
or
dec
add
jp
ret
dec
jo
ds
adc
adc
pusha
inc
mull
repz
cmp
ljmp
sbb
outsb
fsts
ffreep
aad
cli
sbb
xchg
lcall
flds
mov
and
inc
lods
fdivrs
and
dec
test
scas
mov
mov
add
inc
sub
lahf
xor
ret
dec
adc
lds
dec
lds
pop
sbb
pop
lds
int
sarl
ljmp
jb
push
lds
xchg
cmpsb
jbe
xchg
mov
addr16
add
dec
out
and
repnz
test
jnp
outsb
jmp
or
setl
loopne
pop
pop
fildl
iret
in
pop
loope
jl
jo
mov
push
data16
lret
mov
inc
xchg
popf
rcrb
and
lods
frstor
push
jmp
xor
imul
in
cmp
js
pop
int3
mov
std
push
inc
pop
test
lcall
push
add
aas
mov
pop
xlat
cmpsb
ds
mov
test
sbb
pop
cmpsl
cld
sbb
jmp
xor
pop
nop
add
or
das
and
std
rcrb
sub
int3
push
pop
pop
ljmp
pusha
hlt
add
push
mov
mov
jbe
sub
dec
fdivl
pop
jecxz
stos
adc
cli
out
lahf
in
or
adc
xchg
out
loope
mov
and
push
add
shrb
aam
adc
rcr
fiaddl
mov
xor
hlt
rorl
int
mov
mov
lods
inc
mov
stc
fwait
dec
mov
data16
and
jge
movsl
call
flds
in
jb
int
fisubs
sbb
pop
subb
sbb
and
pop
mov
xor
cmpb
sbb
push
dec
imul
add
test
push
addr16
jle
fadds
test
stos
fildl
shll
inc
pop
dec
add
mov
pop
cmpsb
inc
imul
testl
ret
push
cmp
inc
test
addr16
out
or
test
sub
jg
pop
bound
push
sbb
push
push
inc
idivl
inc
imul
xchg
add
and
adc
loopne
fwait
out
pop
xor
lea
add
pop
mov
fadd
jo
push
pop
fcompl
pop
icebp
test
je
jle
jge
jne
jb
cld
sbb
xor
xor
in
jge
xchg
and
jb
fwait
sub
sub
sub
repnz
jge
sbb
fidivs
pop
je
mov
xlat
jbe
pop
cmp
outsb
fistps
sub
jmp
jo
outsb
les
inc
jecxz
mov
pop
test
sub
or
cli
aas
xor
lret
push
mov
push
add
test
cmc
jo
iret
xchg
xlat
aad
push
cmp
js
stos
mov
pop
dec
xchg
in
data16
sti
arpl
mov
mov
negl
xor
push
and
adc
ljmp
dec
jno
cmp
leave
pushf
cmpsl
jle
jg
inc
loop
popf
sbb
rcrb
mov
stos
bnd
iret
cli
ljmp
sbb
jle
sbb
push
stos
subps
shll
iret
lahf
imul
push
fmuls
dec
fucomi
cmp
dec
dec
sub
bound
jmp
iret
fdivrs
js
fnstcw
leave
inc
pop
imulb
int3
mov
xchg
and
xchg
lods
out
mov
dec
fdivrs
sbb
mov
push
and
repnz
push
add
ret
add
out
gs
sarl
fnsave
addr16
sub
lea
xchg
or
xchg
js
fisubl
das
jge
ds
and
lds
sbb
in
mov
mull
dec
pop
movsl
pop
adc
cli
add
js
lods
mov
sub
adc
aas
xor
pop
jp
in
push
popl
mov
in
cld
stos
jge
mov
repnz
pop
cld
mov
aam
dec
mov
and
xor
or
pop
or
test
sbb
dec
cmc
outsl
test
sahf
and
movsl
addb
cmc
je
sub
add
xchg
mov
repz
loopne
jno
xor
sarl
mov
mov
outsl
std
lods
cmp
ja
push
mov
mov
jp
ret
sahf
add
dec
mov
mov
dec
mov
push
jae
arpl
lret
add
pop
fstpl
test
xor
iret
pop
out
addr16
mov
mov
in
pop
pop
add
aas
lcall
notl
sub
outsl
dec
std
xchg
adc
mov
out
dec
dec
outsl
insb
fwait
outsb
inc
push
out
mov
fucomip
add
adc
xlat
pusha
or
insb
xlat
adc
jg
xor
mov
push
sbb
cmp
and
dec
mov
and
ljmp
xchg
cmp
xlat
lods
mov
pop
and
dec
rclb
out
xorl
dec
cmp
popf
jge
int3
loop
jmp
jo
push
mov
mov
sub
lock
push
scas
ret
out
or
sbb
xchg
mov
mov
sbb
adc
aas
and
jo
jbe
push
inc
cmp
scas
pop
jbe
xor
int3
addr16
jp
xor
xchg
mov
jg
mov
icebp
dec
popf
sti
int
arpl
pop
int
call
fcomps
in
push
cvtps2pi
imul
mov
jb
sub
xchg
ret
dec
and
lds
fwait
enter
add
adcb
mov
jno
mov
push
imul
jo
mov
test
imul
icebp
or
sub
sbb
and
dec
add
lock
add
stc
lcall
movsl
sahf
cmp
ror
les
out
mov
outsl
jge
add
sub
sub
divl
push
test
fnstenv
shr
scas
cmc
fiadds
push
push
dec
and
pusha
jb
mov
push
pusha
gs
and
jns
je
xor
mov
lock
mov
inc
mov
ljmp
and
inc
and
fmuls
aam
sub
arpl
jo
leave
push
movsl
scas
xchg
sbb
ds
sub
pop
xor
inc
cmp
rclb
jbe
mov
pop
dec
shld
pop
xchg
add
mov
lahf
cmc
push
rcrl
lock
out
dec
add
lret
inc
jnp
stc
dec
mov
adc
push
movsb
stos
mov
jne
mov
pop
fwait
rcrl
jl
inc
and
mov
fnstsw
lret
fldcw
mov
jns
sbb
push
adc
pop
int
push
and
inc
adc
add
xlat
add
test
mov
add
jge
push
and
add
das
cld
mov
shll
xor
scas
test
xor
sbb
movaps
enter
sub
loopne
mov
and
popa
mov
jp
push
arpl
xchg
btr
mov
imul
into
sbb
lods
xchg
loop
mov
and
xor
sbb
sub
fimuls
cld
xchg
pushf
in
adc
div
addl
mov
push
packuswb
cmp
push
sbb
jge
xor
cmc
outsl
xchg
xor
cwtl
xor
mov
xor
fimuls
xchg
shr
pop
adcb
fcmovbe
dec
jne
hlt
sub
sub
pushf
jbe
inc
xor
inc
iret
push
inc
mov
pop
outsl
in
mov
inc
addr16
into
adc
mov
dec
cmp
xor
jb
pop
xor
int
mov
inc
dec
mov
flds
cmp
sub
adc
xchg
clc
jbe
addr16
cmpsb
dec
lock
fildl
mov
aas
jl
cld
pop
or
pop
mov
inc
lea
dec
cmp
mov
adc
add
fdivrl
lock
jae
dec
sub
mov
add
or
and
mov
test
jne
popf
inc
mov
adc
inc
sub
xchg
sbb
push
or
js
push
lods
mov
jge
insl
clc
sbb
enter
sub
sbb
or
js
push
lods
mov
jge
insl
clc
sbb
enter
sbb
js
or
call
mov
test
push
sbb
and
inc
std
sub
js
js
pop
mov
push
out
jge
sbb
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
test
sbb
sub
cmp
hlt
movsb
xor
mov
xor
inc
int3
push
push
fs
je
test
sbb
sub
cmp
dec
aam
in
hlt
or
adc
push
lods
xor
inc
mov
je
test
mov
les
inc
in
hlt
data16
adc
push
aad
leave
sub
aaa
test
sahf
sbb
xlat
dec
pop
test
xchg
push
into
shr
test
mov
jmp
or
xchg
push
and
push
scas
out
xchg
add
test
lods
inc
andb
add
nop
pop
ja
pop
cmp
lcall
and
jle
fcmovnb
pop
inc
in
frstor
in
mov
rcll
rcl
xor
dec
sbb
pushf
stc
add
add
test
lock
adc
jnp
loopne
into
rorl
in
cmc
adc
jo
arpl
mov
int3
test
lods
push
cmp
adc
sub
in
neg
push
jno
js
push
cmp
out
sbb
ficompl
xchg
or
xor
aam
in
hlt
gs
adc
and
xor
inc
aam
les
std
ret
outsb
rorl
test
popf
cmp
inc
jecxz
pushf
inc
test
fldenv
test
and
hlt
pop
rcll
dec
mov
dec
popa
clc
push
stc
gs
jno
and
mov
or
sbb
dec
mov
les
pop
in
hlt
jl
mov
and
xor
inc
int3
push
fsubl
cld
test
sbb
sub
cmp
dec
aam
in
hlt
jl
mov
and
xor
inc
int3
push
fsubl
cld
test
nopl
js
pop
mov
arpl
mov
jmp
cmp
in
inc
push
in
push
xchg
notl
insb
test
sbb
or
mov
cmpsl
arpl
cmpsl
xor
cld
int3
pop
pop
pop
scas
aad
sarl
mov
mov
addb
fwait
jnp
push
je
dec
xchg
lahf
add
call
xchg
clc
cmp
and
dec
xchg
push
dec
lods
divl
fistpl
mov
dec
or
adc
popa
sub
and
jne
pop
add
lret
sub
jle
movsw
out
ja
outsl
leave
jp
inc
jecxz
mov
loope
incb
jns
add
faddp
ljmp
pop
cli
xor
push
loopne
dec
pop
fldcw
sub
push
xchg
dec
enter
xor
lcall
and
cmpb
fldcw
cltd
inc
insb
dec
stos
sbb
stos
mov
cs
and
dec
iret
mov
dec
mov
repz
adc
sbb
sbb
add
or
xor
addr16
sub
sub
push
jp
or
shll
ret
addl
int
fadd
fcmovb
or
mov
std
mov
sub
xchg
aad
and
aaa
add
push
and
aaa
pop
aam
das
jge
iret
pop
adc
dec
int3
jno
xor
lea
mov
xlat
filds
adc
dec
xor
pushf
lret
loop
fwait
mov
dec
xor
and
mov
roll
clc
es
cmpsb
xchg
jb
jecxz
fildll
loopne
aam
xchg
fwait
add
es
push
gs
cwtl
loop
mov
popa
mov
pop
jmp
sbb
push
sub
loop
or
xor
adc
lret
sbb
stc
inc
cmp
push
pushf
push
outsl
int
mov
add
int3
shlb
loop
pop
je
aam
xchg
jecxz
inc
push
clc
push
and
jnp
lahf
and
pop
push
xor
inc
das
test
pop
jge
ret
fmuls
jp
mov
inc
mov
pop
push
jmp
in
and
dec
mov
sub
rclb
or
push
adc
mov
enter
add
jo
push
jge
pop
mov
inc
repnz
mov
jae
pusha
bound
int3
mov
mov
mov
mov
outsb
pushf
sub
push
sbb
or
xor
inc
ljmp
fcomps
aad
popa
ret
mull
std
xor
iret
or
or
mov
sub
adc
inc
and
xor
mov
fs
mov
mov
push
pop
xchg
push
or
jns
movsl
enter
leave
dec
cld
js
sti
cltd
lods
jno
es
ret
push
pop
in
inc
xor
dec
fiadds
cltd
xor
jl
jno
insb
icebp
outsb
rcr
in
adc
ficompl
cwtl
rol
shlb
int
out
inc
dec
arpl
cmp
lds
filds
adcl
cmpsb
rorl
inc
push
ljmp
rolb
fildll
fwait
ja
dec
xchg
outsl
lret
adc
mov
inc
enter
in
int3
mov
jle
bound
inc
lods
loopne
cmp
jmp
movsl
sti
cmp
in
in
mov
sahf
mov
sbb
imul
stos
loopne
or
push
push
cmpsl
jb
scas
ret
or
outsb
pop
bound
mov
sub
jmp
and
jg
mov
adc
test
pusha
xchg
jp
cmp
pusha
xor
jb
call
xchg
nop
or
lods
xor
jmp
cmp
orl
or
loope
into
scas
and
xchg
cmp
inc
and
xchg
fbld
lds
std
pop
or
pop
addr16
aam
xchg
pop
mov
pusha
xchg
icebp
xor
gs
into
dec
cmpb
neg
fsubs
pusha
mov
or
mov
add
movsl
xchg
rolb
mov
xchg
faddp
push
call
lcall
push
rorl
push
and
pop
pop
adc
scas
iret
sub
icebp
fcomps
nop
mov
add
call
and
and
scas
test
or
es
mov
cmp
mov
cwtl
or
icebp
mov
and
or
and
pusha
cmpsl
jecxz
inc
and
jmp
push
test
aad
dec
adc
arpl
iret
push
js
iret
pop
pop
adc
stos
adc
lock
aad
adc
cld
dec
stos
mov
jg
cmp
cltd
cmpsl
scas
loope
pusha
movsl
sub
sti
dec
mov
sub
jge
dec
lds
fwait
leave
sbb
cmp
or
dec
jne
stos
rorb
mov
out
ljmp
dec
inc
pop
das
es
or
inc
bswap
push
insl
fwait
test
mov
pushf
inc
aam
fs
fcomp
pop
data16
jg
sbb
and
mov
push
push
push
sub
inc
pop
loope
imulb
sbb
adc
pop
aaa
call
pop
push
and
xor
stos
jns,pn
loopne
xchg
mov
fcoml
and
mov
pop
push
cli
popf
testb
into
cltd
stos
outsb
add
ret
dec
add
imul
push
scas
ljmp
cli
push
popa
inc
icebp
enter
sbb
mov
cmp
outsb
add
mov
xchg
aam
pop
int
adc
stos
pop
movsb
into
push
hlt
adc
adc
ds
outsl
sub
and
jg
popa
movsl
push
test
dec
jge
mov
pop
call
fs
lcall
jl
push
push
mov
leave
mov
out
je
repnz
lock
xor
lcall
push
out
andl
push
add
inc
xchg
sub
dec
jo
repnz
ljmp
dec
jle
mov
orl
push
jl
nop
xchg
nop
cmp
mov
jmp
pop
ja
push
lcall
cld
fmuls
pop
jns
xchg
inc
lods
setp
daa
xchg
mov
aas
int
mov
mov
sub
in
xchg
jle
out
pop
push
dec
in
add
mov
push
cmp
fadd
add
mov
fmuls
out
in
std
mov
sub
js
xorl
pop
fmull
push
pop
xor
inc
xchg
aaa
les
popf
inc
stos
push
or
ficomps
arpl
sub
inc
mov
mov
mov
inc
mov
hlt
adc
sub
push
jo
mov
enter
cmc
mov
push
adc
lock
mov
adc
add
mov
int
ljmp
test
push
repz
jmp
mov
out
jb
xor
add
loope
jmp
out
divl
lds
fidivl
pushf
and
jo
lock
scas
test
and
sub
dec
and
push
push
mov
adcl
jge
test
cmp
js
cmp
mov
mov
jb
pop
fdivrs
shll
lcall
and
test
mov
sbbl
fadd
xor
loope
into
pop
divb
and
or
adc
jno
mov
pushf
stc
outsb
xchg
popa
dec
test
xchg
cmp
mov
ljmp
rclb
sbb
fidivrs
cmp
and
xchg
shlb
ss
jp
or
mov
pushf
orl
add
dec
ljmp
sti
dec
negl
js
inc
add
and
nop
ret
xor
xor
shlb
sub
jbe
xor
push
cmp
xor
mov
inc
iret
out
jge
dec
cmp
sub
rclb
fsubp
nop
movsb
ret
lods
cmpsb
cmp
loopne
xor
sbb
add
insl
or
pop
cmp
lahf
cld
jnp
jns
lods
mov
cmpsb
mov
das
push
je
mov
mov
xor
jg
loopne
repnz
fnstsw
pop
adc
and
test
sub
fidivs
dec
ds
jnp
into
int3
dec
jmp
ljmp
insl
push
inc
and
mov
and
pop
jl
insl
fnstenv
aaa
mov
jmp
mov
call
or
pop
lds
xor
dec
mov
dec
pop
ret
enter
push
mov
push
push
mov
sbb
mov
nop
testb
and
xchg
adc
add
idiv
xchg
inc
cmpb
push
ret
in
jl
fwait
lret
xor
adc
sbb
popa
pop
popa
jmp
ret
out
popa
ljmp
in
mov
cld
shl
xor
fdivl
and
adc
out
outsl
jae
iret
inc
xchg
out
push
imul
mov
aam
outsb
pop
mov
sbb
cmp
fs
icebp
vmwrite
iret
xor
sbb
mov
scas
inc
loop
xor
cmp
xchg
cmp
and
int3
xchg
sbb
fwait
push
gs
dec
pop
jne
add
stc
rorb
jnp
mov
cmc
lcall
sub
mov
sahf
ljmp
inc
out
push
pop
dec
leavew
jmp
mov
ret
bound
hlt
mov
push
jnp
push
cmovle
cld
inc
pop
mov
addb
inc
mov
iret
inc
add
imul
insb
iret
ss
aad
push
mov
addl
je
cwtl
inc
stos
pop
mov
loopne
cmp
sbb
cwtl
and
push
clc
sub
mov
xchg
or
shr
jnp
xchg
sbb
fwait
subl
or
repnz
pop
sub
shl
rcrl
mov
jmp
test
arpl
sub
sub
shlb
out
cltd
inc
mov
lods
add
inc
scas
mov
mov
in
cmpsl
lods
xor
or
adc
or
fcompl
adc
push
mov
int
into
xlat
clc
push
adc
mov
mov
xchg
ret
neg
subb
dec
jnp
rcrb
mov
dec
cmp
mov
ret
inc
test
out
movsb
push
aas
mov
out
dec
mov
xor
jns
stos
std
adc
lret
lahf
stc
mov
jne
rcrb
fsubrs
sti
or
pop
fsubl
popa
adc
insb
lock
dec
or
mov
mov
popa
lods
xchg
dec
insl
mov
xor
cltd
jne
pop
cmc
aaa
xchg
int3
cmpps
out
loope
in
out
push
daa
add
mov
pop
ja
fs
pop
sub
jo
sub
jmp
fwait
jl
iret
icebp
daa
mov
cmc
pop
enter
into
pop
cmp
in
inc
ss
ret
cmp
es
nop
movsl
mov
stos
imul
or
push
ficompl
orl
sbb
insb
or
jmp
pushl
xchg
jns
add
and
adc
popf
mov
out
inc
xchg
loope
mov
or
stos
xor
out
jbe
in
jecxz
aas
jle
add
test
idivb
sbb
mov
arpl
add
int
lds
ljmp
xchg
inc
in
insb
icebp
bound
xchg
fistps
mov
outsb
shll
xchg
rolb
cld
push
push
fists
add
or
js
xchg
pop
negl
enter
aaa
pop
add
faddp
mov
jge
push
shrl
sbb
jb
arpl
push
and
xchg
jns
sub
mov
dec
ja
pop
cmp
jmp
insb
mov
jo
mov
int3
cmp
lahf
jle
shll
add
les
xlat
xlat
mov
jmp
dec
decl
es
add
outsl
cmp
shl
scas
sbb
jbe
subb
stos
stc
xorb
ja
negl
inc
sbb
adc
push
jns
jb
push
lock
sahf
lret
cli
cltd
into
push
int3
mov
out
mov
lcall
sbb
add
sub
mov
lods
fisubrs
cli
outsl
lods
test
aaa
jg
adc
xchg
aad
cwtl
mov
arpl
mov
cmpsb
xor
mov
call
mov
cmc
iret
pusha
test
test
addr16
mov
cmc
fwait
adc
adc
cmpsb
mov
jns
inc
pop
ja
bound
data16
pop
lock
dec
mov
xchg
dec
int3
cmpsl
out
mov
cmc
inc
mov
mov
enter
in
outsb
in
lds
xchg
lods
dec
js
enter
fisubrs
mov
shll
lcall
inc
dec
pusha
shrb
adc
cwtl
or
popf
hlt
pop
je
arpl
sbb
hlt
jg
sti
adc
dec
push
repz
movsl
aam
pop
jo
push
mov
add
push
sub
inc
xchg
inc
stos
mov
sub
in
scas
xlat
scas
pop
mov
push
push
cmp
ret
push
imul
ss
xor
inc
dec
inc
ret
clc
adc
pop
fistpl
mov
dec
mov
jb
test
jns
movsb
cmpsb
ljmp
popf
jmp
sbb
lods
enter
or
int3
andb
sub
cltd
mov
dec
lret
mov
push
pop
cmova
or
xor
movsl
xor
add
xchg
xchg
loope
pop
divl
mov
dec
aas
cltd
push
sbb
fwait
ret
sahf
les
dec
jnp
lock
cmp
inc
outsb
lea
inc
jno
cmp
jl
rcl
insb
jns
xchg
cmpsb
and
lods
cmp
cmc
mov
daa
fidivs
call
jno
dec
lods
shll
push
loop
or
orl
jmp
xlat
aas
push
inc
ss
cmp
in
cmc
sub
leave
int3
adc
push
sub
add
jno
add
cmp
mov
dec
jle
dec
fcomps
insb
sub
pop
hlt
enter
test
aaa
sub
mov
xor
bound
lods
fisubrl
jmp
adc
xchg
out
mov
and
in
dec
pusha
cld
fistl
jle
mov
insb
jp
stos
popa
cs
xor
add
cmpsl
xor
xchg
pushf
orl
test
or
pop
cmp
ret
add
add
rclb
push
cmp
int3
mov
fstpl
insl
sub
jno
lret
xchg
stc
ss
fistpl
mov
pop
fcompl
push
mov
cmp
fs
push
loope
loope
into
pop
mov
sbb
dec
pop
in
shlb
cmp
push
xchg
cld
mov
mov
adc
fwait
sbb
fldcw
ret
jnp
in
add
xchg
and
rcll
outsb
inc
sti
sbb
jb
ja
pop
icebp
mov
clc
cld
push
push
cld
stos
stos
int3
cli
das
push
mov
inc
movsb
mov
test
jne
sti
mov
inc
mov
xchg
test
lock
sarb
push
loopne
popa
call
outsb
cmpsl
adc
fwait
punpckldq
jmp
mov
cmp
movsl
sub
rcr
mov
push
das
xchg
dec
mov
std
shll
aaa
mov
cmpsl
add
or
push
addr16
pop
andl
cmp
shr
mov
scas
adc
or
ljmp
repnz
xchg
imul
out
xchg
out
inc
shlb
imul
lea
stos
and
xchg
stos
stc
mov
lds
into
xchg
mov
pop
mov
ss
imul
cmp
fs
dec
xor
pop
lds
inc
push
mov
mov
fildl
loopne
adc
ret
stos
fidivs
mov
inc
or
mov
shl
or
push
divl
mov
mov
jmp
push
call
test
ss
cli
mov
inc
mov
or
ljmp
scas
cmp
cmp
mov
popf
imul
inc
pop
pop
lret
out
jge
pop
jns
int
fcmovne
mov
mov
dec
out
gs
mov
addr16
stc
sbb
xchg
mov
arpl
adc
jp
sub
je
clc
xchg
dec
sahf
sti
push
cmpsl
ret
loope
jns
stos
xor
lcall
dec
pop
and
imull
add
jecxz
mov
sub
flds
xor
testb
aam
mov
pushf
stos
or
into
jge
pop
jl
xchg
pop
lcall
in
js
sub
nop
aaa
push
add
inc
stos
js
and
dec
sub
cmpsl
outsl
movsb
inc
fisttps
add
dec
pop
dec
setp
pop
lea
cmp
test
inc
jo
sub
mov
push
sbb
inc
cwtl
int
test
shll
or
sub
mov
mov
cmp
sahf
xor
adc
test
or
pop
pop
mov
sahf
mov
loop
loope
pop
ljmp
lret
adc
out
clc
test
jno
imul
xchg
fsubrl
push
jmp
push
xor
pop
and
nop
mov
jp
aaa
outsl
mov
and
inc
mov
mov
dec
popf
pop
out
in
push
mov
or
adc
jae
add
pusha
jmp
pop
lahf
repz
mov
inc
mov
xchg
in
movnti
clc
xor
jecxz
xchg
xor
cli
in
push
cmp
mov
jb
mov
xchg
insb
sbb
dec
jnp
int3
test
loopne
pop
and
fwait
test
xor
jne
clc
pop
addl
push
pop
sub
inc
cmp
fdivl
pop
pushf
pop
inc
idivl
outsb
std
push
adc
int3
sub
ficompl
insl
in
jno
jle
sbbb
jle
push
fdivrl
mov
es
std
pop
mov
mov
jne
xchg
push
lret
out
ja
sub
jge
and
daa
cmp
mov
mov
ffree
ret
iret
ret
add
mov
adc
xchg
pop
pop
jle
sbb
out
push
inc
hlt
enter
push
out
test
add
int3
lahf
and
push
loopne
sbb
sub
xor
mov
fsubs
mov
outsl
pop
ljmp
push
adcl
mov
add
fchs
push
leave
and
mov
mov
testl
int3
mov
shrb
jae
push
mov
sbb
mov
jmp
and
sub
pop
push
jns
jno
or
dec
mov
jecxz
sub
std
insl
adc
pop
scas
dec
divl
data16
rolb
jns
xchg
cmpsl
jmp
mov
lds
add
mov
push
sub
pop
inc
add
adc
inc
jmp
jae
lahf
lods
cmc
data16
hlt
shll
scas
test
mov
sbb
test
loopne
pop
jnp
ds
cmp
adc
lcall
fs
popa
lock
inc
cwtl
fadds
jnp
inc
daa
adc
or
push
xchg
dec
mov
fdivrl
adc
add
cltd
push
test
data16
fsubl
scas
xchg
jae
ljmp
add
or
jb
fs
insl
outsb
sub
and
insl
ret
scas
cli
mov
stos
cmp
iret
insb
jecxz
dec
push
andl
pop
mov
xchg
jae
repz
mov
mov
jle
cli
out
adc
mov
inc
adc
test
fmuls
sahf
adc
ja
dec
std
lret
sbb
mov
xchg
push
pop
ljmp
lret
lods
out
mov
sahf
push
push
jle
call
leave
icebp
rcrb
arpl
sbb
mov
sub
rorb
test
add
outsl
mov
adc
mov
and
mov
or
jb
movsl
fs
dec
pusha
xchg
xor
fisubrs
mov
mov
into
outsb
sub
jmp
inc
fnstsw
dec
outsl
mov
repz
xchg
pop
cmc
imul
scas
xchg
or
test
sarl
dec
jno
out
cwtl
adc
cli
std
jns
rolb
lea
rolb
dec
fs
leave
push
mov
inc
inc
ror
stos
mov
adc
mov
xchg
jbe
mov
jnp
cli
adc
int3
xlat
jp
into
and
or
rcll
je
sub
or
lret
xor
incl
ret
push
dec
or
jns
fdivl
jmp
sub
xchg
add
pop
stos
stos
aas
es
aas
pushf
sbb
imul
push
jl
stos
fsts
mov
push
int3
jnp
insl
add
fimull
xor
add
add
add
nop
je
fs
leave
cmpsl
and
cwtl
loopne
xor
std
mov
js
lock
sub
dec
fstpt
dec
fistl
mov
scas
negb
sub
cmp
dec
aam
in
hlt
jl
mov
and
xor
inc
int3
push
fsubl
cld
test
sbb
sub
cmp
dec
aam
in
hlt
jl
mov
and
xor
inc
int3
push
fsubl
cld
test
sbb
sub
cmp
dec
aam
in
hlt
jl
mov
and
xor
inc
int3
push
fsubl
clc
test
xchg
sbb
aam
in
hlt
mov
mov
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
movsb
pop
and
adc
add
into
jne
leave
fsubl
mov
test
cmp
sub
sbb
or
and
adc
mov
inc
cld
mov
movsb
dec
cmc
pop
test
push
in
aam
les
xor
and
adc
add
je
fs
push
jbe
nop
mov
movsb
or
pop
loope
xchg
outsl
lea
insb
stos
or
xchg
push
popf
decl
ja
xor
lcall
sbbl
popa
jae
stc
popa
addb
mov
xor
rcrl
int
or
cmp
jmp
sbb
sbb
gs
jmp
nop
fistpll
xor
mov
hlt
in
ret
lds
and
push
fadds
clc
xor
call
shlb
cmp
cmp
pop
leave
in
fildl
inc
mov
dec
pushf
pushf
insb
in
push
nop
inc
mov
sub
js
lahf
test
imul
cmp
xchg
ljmp
dec
js
add
cmpsl
or
cmp
xlat
aad
lds
pop
add
je
fs
inc
inc
or
test
hlt
adc
rcl
sbb
inc
stos
pusha
call
aaa
int3
add
adc
and
fdivrl
push
sub
adcb
mov
mov
dec
in
adc
add
out
leave
ds
cmp
xchg
test
arpl
or
xor
cwtl
inc
mov
test
cmp
sub
sbb
or
and
adc
add
je
fs
cwtl
inc
mov
test
cmp
sub
sbb
or
and
cltd
jnp
in
and
es
mov
mov
ds
cmc
pop
mov
lret
dec
fldl
adc
jp
pop
pop
push
sub
xchg
mov
lds
pop
pop
bound
test
lcall
scas
mov
push
loopne
negl
push
negb
push
sub
mov
adc
inc
inc
cmp
ja
in
or
push
test
aaa
adc
xchg
adc
adc
xchg
dec
lcall
enter
add
push
cwtl
repz
fldl
xchg
popf
add
repz
imul
xchg
in
add
adc
les
cmp
aam
sub
popa
mov
movsb
fistps
movsb
cs
lahf
or
fs
sbb
test
test
test
aaa
pop
pushf
fisttps
enter
bound
orl
adc
push
sbb
cmp
push
push
pop
lds
aam
pop
xor
fcomi
jmp
scas
xchg
mov
adc
adc
xchg
inc
pop
scas
mov
adc
mov
add
dec
mov
adc
mov
sbb
mov
jo
inc
cmp
mov
mov
sub
mov
int3
sub
sub
add
aas
cli
cmpsl
push
in
cwtl
mov
xchg
push
xchg
push
mov
xor
fs
jmp
sub
dec
notb
test
in
pop
aaa
cltd
daa
popf
dec
data16
jno
jg
rcr
test
cwtl
or
push
lods
in
jo
inc
inc
pop
shr
and
popa
out
cmp
mov
cmc
pop
lods
mov
adc
fldenv
and
xor
data16
pusha
daa
cmpsb
test
and
mov
ss
std
adc
cmp
mov
popa
pop
xor
sbb
nop
cmp
jne
fcomps
out
cmpsl
jbe
xchg
fsub
or
imulb
stos
mov
cmp
xchg
adc
and
mov
std
loope
xchg
jg
xchg
sahf
ficoml
decl
xchg
dec
mov
je
clc
fisttps
xor
aad
add
out
push
mov
mov
xor
cltd
cmpsb
add
lret
shll
hlt
add
aam
stos
push
ljmp
xchg
cmp
rolw
cmpsl
mov
iret
jl
jnp
inc
cmpsl
iret
sub
or
std
jne
push
enter
enter
addl
fldl
jae
jge
in
mov
dec
outsb
leave
out
mov
adc
addl
cli
out
neg
adc
sub
adc
dec
cmp
xchg
cwtl
in
in
xlat
mov
test
cmp
ret
into
mov
pop
adc
add
dec
rclb
jbe
mov
cmp
push
jle
jne
push
idiv
mov
shlb
lret
sub
add
and
shll
repz
pop
addr16
or
mov
pusha
cmpsb
decb
loop
or
ds
sub
lds
xor
adc
or
rcrl
xchg
push
jae
add
lcall
repnz
and
test
mov
jp
roll
jbe
inc
int3
cmpsl
mov
mov
or
dec
cmp
push
imul
dec
mov
sbb
pushl
jge
dec
rcrb
jbe
ljmp
fisubs
test
fildl
int
fsubrl
rcrb
gs
mov
fistl
int3
mov
jg
and
fldcw
enter
ror
pop
xor
int3
daa
cltd
jbe
dec
push
xchg
shrb
xor
cmp
push
pop
loop
in
and
cmp
lahf
nop
lret
xchg
fisubl
cwtl
pop
sub
and
cld
pop
mov
lods
pusha
xor
in
les
outsb
xor
fstps
xor
push
sbb
in
mov
lret
pop
push
mov
mov
push
or
pop
or
or
mov
sbb
rcl
insl
pop
outsl
add
xchg
nop
mov
inc
test
jl
xchg
jo
cmp
andb
jp
add
icebp
popf
lods
xchg
sbb
aas
push
enter
push
fs
mov
mov
jbe
push
mov
out
daa
inc
mov
mov
sub
inc
les
pop
or
dec
xchg
xchg
sbb
ret
addb
in
imul
cmpsb
pushf
mov
push
aaa
jmp
sahf
in
loope
mov
sub
bound
inc
pop
loope
lea
lods
ficoms
xor
ja
mov
mov
sub
pop
push
rorl
aaa
push
jecxz
test
scas
push
les
inc
cltd
movsl
push
int3
inc
xorb
mov
dec
xchg
daa
sub
lret
mov
xor
mov
jl
cmp
pop
push
lods
dec
push
jle
scas
stc
xchg
sbb
push
sub
sar
jo
in
hlt
mov
pop
enter
pushf
cld
aam
in
jne
jae
cmp
adc
test
mov
in
pop
mov
xor
dec
cwtl
mov
and
or
aad
jl
dec
popf
jmp
push
mov
mov
mov
les
stc
pop
fdivp
pop
mov
cmpb
gs
cwtl
outsb
movsl
lret
cmpsb
push
fdivs
and
hlt
sahf
jle
xchg
insb
xchg
push
imul
inc
jle
and
dec
imul
inc
fdivrs
andb
pop
int3
inc
sub
push
cli
movups
sub
adc
lods
ret
and
fs
insb
adc
xchg
xchg
jecxz
pop
dec
xlat
int3
mov
and
js
xchg
inc
push
sarb
xchg
je
sub
lock
pop
mov
aam
inc
adc
mov
push
push
dec
xor
std
into
jb
lods
push
xchg
mov
and
popf
jmp
outsb
xor
dec
push
xchg
notb
js
or
les
pop
or
mov
mov
and
jns
pop
andb
lret
fs
add
out
and
mov
mov
and
scas
push
jmp
or
jne
mov
in
fldt
inc
inc
jnp
outsl
push
cmp
pop
xchg
out
mov
and
mov
push
fsts
cmp
mov
popf
fnstsw
push
cmp
pop
adc
xor
movzwl
js
dec
out
jne
aas
or
lret
or
ret
repz
mov
cli
add
jge
jp
mov
pop
mov
inc
lret
dec
push
jge
inc
inc
jne
and
inc
dec
mov
mov
xlat
and
cmp
sbb
mov
inc
aas
sub
shll
xchg
aaa
sub
ret
test
pop
aas
andb
or
dec
mov
in
sbb
and
dec
test
dec
movsl
pushf
push
js
xor
add
adc
sbb
xchg
push
sub
sti
call
mov
aaa
clc
inc
inc
jl
inc
mov
aas
mov
lret
insb
hlt
out
je
movsl
jno
jg
push
fsub
sbb
xor
ds
loop
add
jg
jne
in
jg
in
out
loop
push
lcall
aad
pop
or
xchg
or
ret
out
rorb
sbb
jl
jecxz
cmpsl
mov
xor
mov
ljmp
push
jbe
or
stos
dec
xor
pop
jo
cmp
or
sub
mov
push
leave
call
jg
and
push
add
fs
inc
cmp
in
pop
sbb
jae
push
and
lea
roll
lret
sahf
clc
test
mov
fdivr
mov
sbb
sahf
xchg
ja
pop
xchg
cmp
lock
fst
xor
or
loop
sahf
test
fwait
mov
cmp
scas
mov
scas
sbb
imul
js
arpl
xchg
in
in
cli
xlat
lret
cli
jle
push
xchg
loopne
testl
testl
xchg
pop
push
mov
jns
push
mov
test
call
adc
cs
loop
xchg
data16
loope
pusha
pop
mov
aaa
shrl
jmp
test
bound
sbb
cltd
lcall
xchg
pop
mov
add
out
push
inc
out
out
into
mov
push
xchg
in
mov
mov
add
scas
inc
sbb
jbe
xchg
add
cwtl
rolb
and
fwait
daa
out
dec
add
mov
mov
leave
int3
aam
jmp
or
testl
jl
loopne
mov
xchg
xor
orb
add
jnp
mov
lcall
daa
fs
lret
cltd
jns
cmpsb
in
or
add
adc
sarl
push
mov
jg
in
mov
or
push
fmull
inc
sbb
rclb
int
sub
data16
mov
fsubr
push
pop
ds
int
dec
xchg
js
fxch
or
adc
je
push
enter
add
push
inc
cltd
in
in
inc
aas
mov
lahf
pop
dec
xchg
movsbl
adc
adc
dec
out
adcb
leave
rolb
cmp
gs
ds
scas
hlt
in
pop
call
mov
in
call
mov
xchg
xor
or
push
addb
and
lret
sub
lret
insl
ret
aad
mov
ret
scas
dec
mov
loopne
sbb
fnstcw
pop
jl
pop
sarl
cli
icebp
ljmp
xchg
fisubs
aad
or
cmp
jmp
sbb
pop
insb
fdivl
fwait
xor
lahf
sahf
push
pop
push
dec
fdivs
jmp
mov
punpckhbw
repnz
jecxz
lahf
mov
mov
dec
pop
xchg
sarl
sub
gs
enter
sbb
add
fsubs
add
leave
bswap
mov
popf
sbb
rcrb
jo
test
cmp
cmpsl
insb
shl
pushf
pop
out
add
loop
mov
call
test
ret
adc
push
insb
dec
jns
imul
into
fiaddl
adc
test
push
dec
int3
sub
movsl
ret
sbb
mov
mov
mov
mov
adc
lea
mov
cli
mov
scas
mov
mov
inc
lods
fcomp
mov
fidivrl
in
imul
aad
pushf
pop
subl
cli
pop
loopne
mov
lock
mov
push
mov
sub
add
imul
fwait
and
std
scas
sbb
cli
clc
in
sub
pop
adc
movsl
repnz
lret
mov
xor
mov
out
cwtl
or
jp
sub
cmp
aas
aad
and
fisubrl
dec
andl
cmovne
dec
loopne
cmp
idivl
outsl
shrb
push
int
adc
adc
lods
rcll
adc
push
addr16
jle
lods
test
out
cmp
fisttpll
stos
mov
fildl
push
lret
or
aam
adcl
inc
dec
or
fcomp
imul
push
mov
sbb
cmc
out
inc
jle
int3
iret
jnp
dec
cmp
push
ja
xchg
fwait
fwait
jmp
xchg
cmp
addr16
les
stc
lret
mov
rcl
jle
dec
or
push
incl
cmp
imul
cmp
mov
mov
loop
nop
loop
push
mov
rclb
lds
in
cmp
call
jnp
test
inc
sub
xor
call
mov
pop
stc
mov
rcrb
inc
push
daa
pop
push
das
mov
pop
or
sbbl
lock
xor
pop
mov
cmp
fwait
pop
xchg
jb
inc
aas
loop
xor
int
mov
push
push
inc
test
pop
jmp
lock
lcall
push
xchg
xchg
cmp
push
sub
jmp
out
enter
or
js
movsb
insb
xchg
repnz
push
lea
jo
mov
and
xchg
in
test
pushf
jns
cld
scas
cmpb
push
std
into
mov
test
sahf
popf
cld
push
fcomi
sub
mov
add
daa
in
js
subl
out
pop
aas
movsb
cli
adc
push
or
pop
dec
mov
je
dec
loopne
fucomp
mov
add
jnp
mov
jae
push
scas
mov
stos
lock
neg
ss
push
mov
mov
push
cmp
scas
ds
insl
ss
mov
filds
icebp
push
ds
jle
mov
cwtl
repnz
std
lea
xor
stc
push
or
rol
cmc
cmp
xchg
rorb
insb
fdivs
jns
add
sbb
xchg
or
lods
push
jns
xor
mov
aad
movsl
mov
loop
lods
es
clc
mov
adc
sub
ja
pop
rcrb
or
lock
es
shlb
mull
dec
into
rcr
sbbl
fs
inc
sahf
movsb
jl
pop
xchg
pop
push
enter
movsb
pop
je
mov
sub
fdivrs
xchg
stos
add
mov
pop
inc
fidivl
cmp
ja
mov
in
mov
mov
xor
pop
frstor
dec
or
push
sub
out
orl
or
mov
jne
enter
test
pop
gs
sbb
mov
and
sbb
hlt
sub
ret
push
cmc
imul
or
push
xor
push
sar
cmp
subl
cmp
daa
shll
fwait
loope
aad
mov
cmp
inc
adc
test
sbb
pop
je
push
scas
lds
xor
daa
mov
cmp
ret
mov
inc
fidivrs
dec
test
jb
lahf
jns
ljmp
inc
mov
pop
sub
out
xor
aas
fisttpll
dec
mov
nop
ja
mov
test
negl
pusha
or
and
mov
mov
jnp
inc
cmp
test
jae
roll
and
mov
xor
lds
cmp
mov
das
rolb
sbb
jne
and
outsl
jp
clc
mov
repz
repz
inc
cmpsb
outsb
mov
mov
add
pop
out
fnstenv
mov
mov
addr16
cltd
daa
out
insl
and
jl
test
jb
pushf
mov
push
into
fidivl
and
cli
cmpsb
and
and
shrl
sub
sub
int3
and
sub
movsb
inc
mov
jo
sub
sbb
ja
push
adc
das
xchg
or
out
cmp
mov
cld
jg
rclb
sahf
jecxz
int
aas
inc
inc
adc
test
insl
or
adcl
mov
mov
insb
fstl
adc
pusha
adc
rorb
test
lahf
loope
aad
es
aaa
push
xchg
and
mov
daa
dec
cmpsb
loopne
xor
cmp
das
test
pop
jmp
ret
mov
mov
in
icebp
xor
out
fdecstp
out
inc
sarl
ljmp
addr16
das
out
in
lods
sbbl
jo
data16
neg
mov
call
nop
test
insl
pop
xchg
sarb
xchg
in
cmp
das
xchg
into
cmpsb
pop
cmp
pop
mov
mov
push
mov
les
pop
mov
test
out
daa
lds
add
pop
jmp
add
gs
xchg
insb
int3
pop
aad
cmp
cmp
mov
sub
xor
stos
out
add
jle
stos
cmp
arpl
and
jne
ror
fsubl
in
push
iret
fwait
mov
popl
xchg
int3
fildll
lock
mov
in
stos
push
pop
dec
pop
rolb
fdivrp
shl
lahf
and
loope
movsl
movsl
test
mov
sub
or
ja
sbb
inc
ficompl
sub
iret
push
and
rcrl
mull
push
xor
stos
testl
mov
shll
mov
and
mov
adc
mov
push
mov
and
xchg
xor
dec
mov
shrl
cmp
mov
inc
fidivrl
add
push
mov
loop
popf
hlt
popa
push
adc
test
xchg
sbb
cld
into
iret
sar
inc
loopne
insl
leave
xor
or
mov
test
xor
les
push
loope
into
jno
cwtl
jb
cwtl
adc
lea
lock
stos
hlt
ss
add
cmp
sahf
repz
mov
xchg
mov
gs
insb
pop
pop
adc
mov
sar
push
jp
fimuls
dec
shl
test
js
pop
cli
jp
cmc
in
dec
jno
add
in
movsl
mov
add
or
ret
or
rolb
dec
cmpsb
das
pop
in
rcll
clc
lret
lcall
outsl
loop
inc
icebp
out
mov
xchg
lods
pop
jb
les
outsb
shlb
xor
fs
pop
and
mov
ret
dec
push
notl
inc
mov
into
adc
push
icebp
mov
jno
sbbb
dec
xchg
popf
jle
test
test
je
mov
aam
rcll
mov
in
in
js
repz
jge
adcl
xchg
aad
inc
mov
inc
cmp
xor
jne
out
lahf
mov
push
fs
in
lcall
bound
rcll
decb
mov
sub
sahf
enter
mov
fistps
jnp
outsl
sbb
dec
mov
aad
testb
pop
jne
aas
jnp
push
mov
push
mov
dec
int3
or
sub
scas
scas
andl
inc
dec
add
push
xchg
cwtl
clc
push
mov
push
insb
mov
pop
add
mov
inc
mov
cmp
jl
test
jns
xchg
pop
push
cmp
fidivrs
jp
mov
cmp
sti
add
xor
mov
ja
gs
mov
ficoms
fstpl
xor
hlt
pop
fnstcw
popl
jne
pop
cmp
aaa
fldl
or
sti
test
adcl
pusha
push
sbb
jg
mov
xchg
cli
sub
iret
idivb
rol
jae
scas
mov
std
and
outsl
sahf
mov
stc
sarl
push
or
sub
je
jnp
push
inc
mov
jle
das
dec
xor
push
pop
xchg
fadds
or
and
lea
push
mov
mov
xchg
sbb
add
and
fcmovne
jne
bound
les
out
scas
push
or
les
lea
shr
insb
sahf
fldcw
outsb
push
sbb
andb
ds
mov
xor
pop
mov
in
mov
sbb
sbb
sbb
cmpsb
popa
in
mov
sarl
adc
stc
dec
movsb
sar
cmp
mov
in
jne
gs
push
sbb
int
mov
sti
fsubl
jb
lahf
push
test
out
icebp
pop
and
fdivp
ds
mov
xchg
int
shrb
sub
fsubrs
adc
shl
add
enter
std
inc
mov
popf
mov
push
popf
xor
jecxz
test
in
lock
out
gs
cli
or
mov
movsb
in
xlat
and
cmp
insb
mov
xchg
cmp
sub
jb
scas
add
adc
mov
pop
enter
popf
enter
mov
fcoms
or
call
popf
dec
repnz
jbe
mov
out
mov
lahf
loopne
andb
mov
ret
xlat
subb
pop
pop
add
xor
mov
lock
sbb
dec
test
call
imul
int
push
push
cmpsl
and
sti
mov
xor
push
sysenter
out
out
xchg
mov
mov
sti
jg
dec
mov
pusha
je
movsb
xor
in
xlat
imul
call
lret
pop
stos
sub
mov
xchg
outsl
loope
add
cmpl
out
or
and
in
adc
cmpsb
push
jmp
push
popf
insl
andl
cltd
test
outsb
xlat
movb
and
push
xor
loop
lods
mov
cmp
test
fiadds
or
popl
mov
cmpsb
sahf
or
ds
pusha
popf
mov
and
mov
outsb
icebp
out
icebp
dec
push
push
iret
out
jl
adc
mov
sti
mov
mov
sbb
inc
xchg
div
lret
test
out
ds
or
push
in
mov
xor
icebp
mov
mov
mov
iret
lcall
addl
gs
call
je
fs
cwtl
inc
mov
test
cmp
sub
sbb
or
and
adc
add
je
fs
cwtl
inc
mov
test
cmp
sub
sbb
or
and
adc
add
je
add
mov
test
cmp
sub
cmp
or
fadds
je
fs
sbb
xchg
xorl
idivl
xorb
movsb
push
mov
in
mov
les
shl
rcll
mov
fs
je
test
jae
push
mov
les
aam
in
fucompp
add
adc
sub
xor
push
push
andl
and
pop
ds
ret
sub
add
aaa
scas
inc
cmpsl
inc
mov
xor
push
cli
adc
shlb
idivl
sub
sbb
aas
pushf
dec
pop
mov
push
inc
rolb
in
int3
pop
repz
or
sti
or
cmp
fisubs
in
outsl
out
push
cmp
in
jae
or
xchg
inc
insl
sub
sub
loope
or
xchg
and
imulb
mov
arpl
shlb
in
and
jns
sbbl
fld
fwait
jp
adcl
sbb
dec
jae
repz
and
or
rol
or
mov
push
aaa
imul
jnp
imul
fs
mov
cmc
sbb
or
cmp
rcrb
sub
adc
xchg
push
mov
rolb
les
aam
in
data16
add
mov
mov
jl
inc
adc
fadds
pop
mov
xchg
inc
repz
mov
cmp
adc
sbb
xlat
push
fcoms
pop
xchg
push
loope
repz
xchg
add
or
push
repz
je
enter
mov
aam
in
hlt
jecxz
repz
and
xor
inc
mov
andl
test
inc
movsb
push
mov
les
aam
in
hlt
jecxz
repz
and
xor
inc
mov
andl
test
pop
or
pop
fnstsw
subb
in
pop
mov
sub
push
nopl
or
xor
push
dec
sub
xor
jno
test
fnstcw
jl
mov
int
fucomp
fldt
and
add
mov
fs
lods
or
in
es
in
ja
stos
sub
insl
fnstenv
sub
aam
into
xchg
testb
mov
cli
and
push
jmp
push
cli
rorl
orb
and
jle
xchg
xchg
sbb
stos
shrb
nop
pop
or
rorb
gs
pop
pop
push
and
lods
int
push
js
loope
jns
lods
and
sbb
ror
add
mov
mov
xor
cli
pop
dec
shr
mov
je
xor
outsb
lcall
sub
addr16
jbe
in
jne
rclb
andl
cs
clc
xchg
dec
cli
pop
jle
adc
arpl
in
jl
dec
int3
sti
mov
cmc
cmpsb
mov
iret
arpl
dec
rclb
lods
push
inc
movsb
mov
mov
cmp
push
icebp
cmp
mov
sub
scas
inc
push
mov
pop
push
and
adcl
std
sub
mov
and
fstpl
loope
mov
or
dec
push
pushf
mov
je
push
jb
jle
inc
xor
xchg
push
fadd
cmp
and
push
xor
jae
add
sub
push
stos
sahf
sahf
mov
call
pusha
std
sbb
xor
mov
xchg
das
scas
add
and
jne
push
notb
xchg
cld
cmp
shrb
lea
std
push
fnstsw
mov
dec
or
jae
mov
mov
out
pop
rorl
pop
pop
mov
and
test
dec
bound
xor
test
xchg
arpl
jl
or
dec
xchg
aaa
stos
iret
mov
fs
shlb
sbb
icebp
jne
push
xor
pop
adc
je
xchg
and
aaa
inc
xchg
fldln2
daa
mov
mov
int
xchg
mov
inc
jmp
and
popf
mov
lahf
xchg
imul
or
inc
pop
cmp
jb
jmp
xchg
andb
jl
mov
fldcw
jae
push
fistpll
xchg
xchg
lcall
dec
es
push
ja
sbb
adc
push
jecxz
mov
sub
xor
adc
sbb
jl
cltd
or
or
xor
and
sbb
sbbb
sub
and
mov
push
mov
adc
sbb
movsb
enter
jmp
mov
cmp
xor
aas
hlt
nop
xor
je
cmc
dec
bnd
addr16
sub
cmp
adc
mov
scas
shll
stos
stc
sahf
add
fildl
aad
icebp
push
clc
pop
ret
ret
xlat
pop
push
xor
test
aad
inc
mov
and
fldenv
cld
sbb
cmp
stos
addr16
enter
cld
sub
arpl
mov
pop
inc
inc
dec
jbe
mov
pop
aad
jnp
or
in
decb
ret
adc
sbb
rclb
pop
jae
pop
jne
movsl
outsb
xor
push
or
into
xor
insb
jl
xor
inc
sub
xchg
jb
fs
mov
mov
cltd
xor
cld
dec
mov
les
sahf
jo
arpl
dec
jne
inc
jmp
sbb
jno
mov
jno
popa
enter
fisubrl
sti
loope
cwtl
dec
ljmp
pop
jmp
sub
adc
fmuls
clc
inc
xchg
daa
sbb
in
pop
mov
insb
xchg
sbb
sbb
aas
push
test
xchg
sub
cmp
pop
pop
push
bound
idivl
cmp
dec
sub
pop
stos
mov
fmuls
push
ret
nop
dec
ficoml
jo,pn
call
mov
outsb
cmpsl
incb
jae
pushf
adc
gs
fistps
xchg
adc
in
mov
xorb
cmp
sti
xchg
outsb
push
jbe
or
dec
out
cmp
push
insl
sbb
fdivrs
adc
mov
add
jnp
and
cli
jge
repnz
fcom
out
faddl
movsl
cli
or
aad
arpl
test
push
cmc
fcoms
jl
dec
pop
nop
inc
sub
cmp
ds
mov
dec
pop
inc
cli
lods
addr16
sbb
pushf
pop
cli
aad
mov
notb
mov
addl
fimull
sar
mov
push
inc
fdivs
jle
movsl
lea
mov
mov
push
add
ret
xor
divl
shll
cmp
int3
dec
push
data16
filds
add
outsb
push
fsubrs
add
lock
roll
std
fstp
ret
pop
mov
pop
lods
outsb
jae,pn
icebp
dec
xchg
insb
in
xchg
xchg
ret
inc
test
push
pop
in
inc
cmp
cmp
stc
add
nop
xor
and
xchg
fistl
out
ja
cmp
movsb
and
cmc
jbe
sahf
test
stos
push
lcall
adc
mov
dec
cwtl
cwtl
arpl
push
add
lahf
mov
scas
iret
popf
ds
iret
xchg
cmpsl
inc
lds
xchg
ret
mov
loop
loop
loopne
fstpt
popf
fisubrl
cltd
fsubrs
inc
inc
loop
cmp
xor
pop
js
jno
pushf
test
and
xor
outsl
sbb
inc
stos
call
dec
subb
clc
dec
cmp
jle
sbb
push
lods
mov
add
push
daa
add
mov
jl
stc
or
jae
js
mov
mov
or
mov
mov
ror
xchg
fs
jbe
sbb
jmp
lods
pushf
mov
push
cmp
mov
xchg
mov
inc
bound
shlb
pop
mov
out
adc
clc
push
push
negl
and
jp
jge
aad
push
insb
shll
icebp
aad
dec
fs
push
fwait
ret
sub
inc
sbb
dec
push
imul
push
pop
stos
mov
cmpsl
bound
sub
dec
ljmp
test
loope
lods
sarb
in
les
or
or
pop
cmp
test
cmpsl
mov
sub
sub
push
jnp
sbb
xchg
jne
js
dec
adc
sahf
lods
das
or
rorl
xlat
icebp
jb
icebp
mov
aad
sbb
xor
xchg
in
dec
pushl
push
sub
and
and
pusha
jp
pop
repz
mov
and
pop
fcoms
cmp
cmp
into
divb
mov
and
pusha
fs
icebp
je
das
xor
xchg
dec
std
fstl
shlb
daa
mov
inc
ficoml
inc
dec
jp
fisubrl
push
inc
stos
or
pop
lods
and
pop
rclb
ret
inc
adc
loop
jnp
mov
push
ret
pop
pop
sub
dec
cmp
out
aad
cs
rcrl
das
call
enter
mov
inc
mov
dec
and
das
loope
movsb
jnp
xchg
and
and
or
test
js
sub
pop
insb
cmp
adc
fimuls
pushf
mov
aaa
jo
cmc
xchg
xchg
sahf
and
mov
mov
mov
xchg
sub
mov
or
call
mov
cmp
loopne
mov
or
movl
imul
push
inc
and
in
push
icebp
mov
pop
fnsave
sub
pop
outsl
cmc
enter
add
jne
lods
mov
cmp
dec
imul
lcall
lahf
clc
sbb
mov
int
cli
push
cmp
gs
js
repz
js
lret
xchg
or
push
leave
mov
mov
xchg
pop
jo
jno
addl
aaa
mov
hlt
or
out
fidivrs
jnp
mov
divl
test
das
jno
push
jp
lcall
gs
in
mov
mov
iret
inc
loop
in
insl
test
add
mov
mov
lds
mov
cmc
das
xor
mov
add
hlt
out
cmp
dec
jecxz
jbe
mov
movsb
loope
mov
into
movsl
mov
push
dec
aad
sbb
insb
add
shll
xchg
mov
xchg
mov
aad
or
in
not
or
cmc
insl
fisubrl
lock
cmp
out
in
outsl
mov
dec
sahf
ds
dec
popa
sbb
xchg
sub
jge
in
lcall
jg
orb
pop
pop
lcall
inc
mov
ljmp
cmc
rclb
mov
cli
or
jg
scas
fsubs
pop
and
nop
loopne
nop
sahf
pushf
xorl
pop
push
cld
leave
add
push
rorl
xor
arpl
inc
je
pop
push
adc
rolb
int
test
fcomps
incb
cmp
pop
push
movsl
push
clc
nop
in
mov
mov
mov
call
test
clc
ret
insl
ret
and
daa
push
loope
add
sub
or
cmpsl
in
mov
insb
mov
insl
mov
cmp
sub
lcall
sbbb
push
jae
xchg
pop
or
inc
jge
aad
daa
push
mov
or
xchg
adc
pop
inc
push
gs
insl
push
sub
fiaddl
or
sbb
test
jno
sbb
out
rol
pop
ja
cmp
lea
dec
push
sbb
xor
enter
mov
mov
sarl
ljmp
pusha
mov
jg
xchg
inc
and
fidivl
in
imul
insb
xchg
ds
jb
mov
cltd
adc
lret
movsl
out
cmpsl
std
imul
jp
fs
xchg
rcl
xchg
and
in
and
mov
push
xchg
pop
jp
jmp
xor
mov
rcrb
xor
sarl
dec
daa
scas
mov
outsl
sub
loope
xchg
iret
int
popa
lahf
popa
mov
xchg
xchg
cli
movsl
sbb
push
cmp
loope
mov
ljmp
mov
jg
mov
sbb
mov
imul
inc
in
test
out
sbb
daa
mov
stos
into
pop
cmp
xchg
inc
out
mov
das
fisttpl
xor
mov
orb
or
cmpb
shrb
dec
out
mov
es
ljmp
cmp
mov
insl
js
sbbb
pop
vshufpd
mov
or
mov
jecxz
iret
inc
sbb
aad
dec
mov
pop
xor
fwait
je
rcrb
adc
inc
fists
clc
and
xor
mov
into
jecxz
or
int3
mov
pop
cmp
jae
stos
inc
dec
out
inc
cmp
ljmp
push
jae
pop
cli
fcoms
add
fsubs
jl
fbstp
pop
xchg
insb
dec
out
jg
push
ret
xchg
mov
jmp
mov
jno
sub
dec
push
push
test
push
cs
rcrb
fnstcw
mov
cmpsb
fmull
push
xor
rolb
shr
mov
cli
adc
mov
pop
cmc
sub
ret
repz
gs
cld
rorl
dec
jl
dec
dec
mov
mov
pop
lahf
cmpsb
mov
cltd
jnp
xlat
mov
lcall
pop
into
dec
xchg
incb
aad
pop
pop
sbb
cmpsb
imul
sbb
xorl
xor
or
mov
xor
fldt
adc
xor
arpl
seto
dec
add
dec
bound
subb
sarl
adc
push
fwait
cmp
lea
cld
ficoml
movsl
ljmp
pop
and
mov
adcl
sbb
mov
push
lcall
ja
outsb
push
dec
pushf
cld
outsl
insl
outsl
mov
imul
jle
add
mov
mov
xor
push
pop
xor
push
xor
test
cmc
dec
or
sbb
cmc
xchg
mov
pop
ss
divl
push
dec
aad
icebp
cmp
adc
bound
adc
lock
push
sti
jno
lcall
xor
xchg
add
jl
inc
stos
lret
mov
xchg
out
lods
lret
iret
sbb
xor
scas
sti
and
sbb
aaa
clc
mov
mov
mov
je
mov
inc
xor
int
mov
testb
in
shrl
lods
mov
cwtl
jle
dec
cmp
sub
or
mov
in
mov
clc
shll
add
jg
xor
in
lahf
sbb
xchg
sub
mov
outsl
call
push
jg
lret
push
lods
push
cmpsl
mov
lds
popa
mov
repnz
cmp
scas
aaa
icebp
mov
mov
mov
and
mov
ret
pop
cltd
fwait
pop
shlb
and
or
inc
push
cwtl
loopne
mov
clc
jge
adc
cmp
adc
nop
enter
lret
cltd
dec
add
xor
push
and
xchg
sub
imul
fistps
loop
add
sub
test
jg
stos
jle
loop
xchg
push
add
pushf
rcrl
sti
test
jge
push
inc
mov
pop
mov
xchg
xchg
aad
push
pop
push
mov
pop
and
imul
xchg
fnstenv
mov
xor
dec
aad
xor
cmp
lret
xor
dec
lock
xchg
test
inc
adc
sti
aas
or
rcrb
xor
aas
movsb
mov
mov
into
call
sarl
mov
ja
ljmp
mov
cli
ficoms
sbb
cmp
ljmp
sub
mov
cltd
xor
clc
ret
cli
aad
jmp
lods
stc
sbb
jp
ja
pop
pushf
cltd
addr16
lock
ljmp
inc
lods
jno
jle
ret
das
movl
ds
xchg
pop
fildll
push
pop
test
test
xchg
adc
lea
cltd
xor
ja
scas
mov
pop
imul
mov
and
imulb
jb
test
xchg
push
xchg
add
sbb
mov
xor
inc
sahf
dec
push
xchg
add
xor
ret
stc
mov
mov
cmp
test
dec
mov
in
mov
mov
dec
mov
dec
cmpsl
bound
sahf
sub
dec
or
or
fnop
inc
stc
xlat
nop
or
pop
dec
adc
and
or
jnp
adc
or
movsb
lock
push
xchg
sti
iret
lcall
pop
jo
mov
adcb
loopne
je
arpl
sbb
aam
jl
jp
lods
bound
out
repnz
or
orl
mov
or
loopne
sbbb
data16
xchg
sbb
les
sbb
dec
fnstcw
xchg
scas
aam
xlat
and
cli
mov
rcrl
pushf
into
pusha
fwait
sbb
dec
in
addr16
addr16
out
push
in
lea
mov
clc
jb
fldl
nop
fwait
jge
imul
out
cltd
outsb
add
xor
sahf
movsl
jmp
imul
mov
jmp
push
mov
adc
ja
jae
jae
adc
std
or
add
push
subl
sbb
push
addr16
xlat
ret
lret
data16
and
pop
push
mov
adc
daa
inc
jg
jmp
sub
jecxz
pop
mov
test
push
fsubl
jnp
adc
pop
mov
push
js
fnstenv
gs
jne
lods
xor
roll
xchg
dec
mov
aas
shlb
stos
xchg
cmp
and
fwait
pop
inc
popa
shlb
inc
or
cmp
mov
mov
icebp
int
into
dec
scas
sub
lods
cmp
rcrb
xchg
or
sub
lock
fmulp
sbb
daa
rcr
out
orb
and
pop
popa
cmp
popf
cs
jno
pop
jbe
shl
sub
jle
push
push
push
iret
and
popa
push
mov
pop
sar
std
add
inc
dec
movb
icebp
push
in
ss
jle
lods
add
daa
clc
inc
dec
inc
jge
push
or
insl
pop
enter
lds
repz
std
aad
dec
sbb
cmp
add
mov
sbb
addl
dec
jle
enter
and
mov
jmp
mov
enter
sub
jns
out
sub
pop
mov
into
test
imul
mov
imul
movl
mov
pop
hlt
ljmp
or
cmp
scas
sub
mov
fnsave
jno
pop
fcoms
sub
mov
or
and
xchg
jg
sbbb
sub
je
fadds
ret
negl
sbb
cli
xor
or
mov
fimuls
in
mov
out
fld
insb
push
pop
aaa
push
pusha
mov
rcr
sub
xchg
dec
lcall
outsl
icebp
mov
xor
lods
shll
mov
xchg
add
xor
inc
add
add
jge,pn
in
je
pop
aad
inc
and
inc
outsl
xor
data16
mov
stc
bound
adc
mov
pop
jnp
cmpsb
pusha
ret
push
and
mov
aad
or
aam
stos
mov
aaa
es
sarb
jmp
fbstp
pop
jne
mov
inc
xor
int
loope
cmc
cmpsl
std
jno
jecxz
jne
push
ret
jne
xor
inc
mov
in
cmp
fstps
idivb
jno
lea
xchg
jl
lcall
sub
popa
sub
dec
mov
ds
push
rcrb
mov
mov
ret
sub
pop
inc
popf
scas
mov
mov
mov
divl
jb
imul
fidivl
outsl
adcb
lock
cli
dec
pop
jge
dec
lret
sahf
jb
add
shlb
adc
sub
popf
test
jb
add
insl
int
rcll
and
shlb
add
aaa
int
lods
push
fmuls
adc
jb
jae
adc
sub
mov
sub
push
aaa
call
shr
fildll
mov
dec
daa
push
cmpsb
xor
insb
push
adc
fwait
adc
xchg
jno
into
shl
dec
mov
jle
movsb
popf
xchg
mov
std
imul
adcl
push
ljmp
pop
arpl
in
inc
jb
pop
in
rcr
xchg
adc
xlat
add
xor
dec
xor
sub
dec
xchg
jnp
xor
cmp
sbb
test
mov
inc
shrb
or
gs
sbb
dec
outsb
test
lods
fcmovne
in
mov
xor
iret
push
lret
push
inc
jg
insb
es
or
pop
xlat
push
jne
nop
fldt
out
jmp
sub
fwait
aad
aaa
push
adc
push
mov
cmp
push
pop
jno
daa
std
rcrl
ret
and
aas
mov
push
sbb
xor
sub
fistl
inc
xchg
sbb
add
inc
sub
shlb
cli
lods
add
mov
gs
aad
xchg
push
sbb
mov
jbe
xchg
xchg
imul
cwtl
xchg
push
mov
pop
shlb
out
cmp
sub
bound
ss
add
lods
ror
insl
lods
mov
loop
fldcw
jp
cld
xchg
es
xor
ss
mov
mov
out
hlt
and
or
mov
mov
pop
movsl
mov
jns
mov
mov
ss
std
sahf
dec
repnz
or
sbb
jno
aas
add
mov
push
push
cmp
dec
push
pop
stos
dec
or
pop
rep
inc
xchg
or
cmp
push
sub
fcomps
addr16
lret
repz
dec
popf
fists
hlt
daa
jb
inc
pushf
push
jmp
xchg
int3
cwtl
jl
rolb
lds
insb
aam
xor
std
pcmpgtb
jo
jmp
mov
cs
xchg
ror
mulb
sarl
xadd
sbb
or
adcl
loope
push
pop
pop
push
ja
pop
mov
mov
and
push
mov
fs
inc
ljmp
mov
inc
nop
imul
loope
push
mov
jle
jbe
push
andl
test
int3
imul
pop
test
scas
cmpsl
or
jo
loopne
test
mov
shrl
mov
push
mov
les
aam
in
hlt
jecxz
repz
and
xor
inc
mov
andl
test
inc
movsb
push
mov
les
aam
in
hlt
jecxz
repz
and
xor
inc
mov
andl
xorb
mov
xor
jecxz
repz
and
cmp
subl
push
pusha
inc
jo
inc
push
hlt
and
xor
andl
sti
or
imul
sub
sbb
or
cmp
jae
arpl
cmpsl
jns
dec
inc
ss
rolb
ret
mov
xchg
stc
sub
push
cmp
jae
arpl
adc
push
ret
mov
in
mov
fsubs
sub
jnp
or
push
lret
mov
in
mov
mov
sub
jae
adc
xchg
pop
in
push
cmp
push
jp
mov
popf
imul
or
cmp
cmp
in
shlb
push
packuswb
mov
pusha
pop
cltd
lods
sub
iret
shlb
jecxz
test
outsb
ja
pop
jg
mov
mov
cmp
in
jns
push
pop
inc
ret
pop
sbb
insb
call
mov
xlat
out
add
jle
rorl
inc
add
mov
cmp
mov
sub
cmpsb
pushf
add
aaa
add
rcl
shrl
lods
mov
mov
jmp
mov
sub
arpl
add
adc
pop
cmp
mov
cli
mov
fsubs
push
push
pop
pop
dec
pusha
aas
gs
cmp
scas
mov
lret
xchg
xchg
mov
scas
shrl
inc
sbb
adc
cmp
sub
nop
frstor
ficoml
mov
das
jnp
jge
jo
dec
add
pop
and
mov
jecxz
xchg
clc
sub
fsubs
sub
arpl
adc
push
sarl
jecxz
xchg
clc
sub
fsubs
add
ja
iret
jg
popa
jmp
lods
repnz
mov
ljmp
sti
arpl
enter
mov
jns
popa
repz
icebp
dec
push
mov
fwait
jb
xchg
dec
fnstsw
into
xchg
push
mov
pusha
mov
jp
dec
cmp
pusha
inc
stos
sbb
cld
repz
push
push
sti
inc
jbe
shl
into
or
cmp
mov
jge
cmovno
int
aaa
in
jmp
ljmp
jbe
nop
jne
insl
push
xor
mov
adc
mov
movsl
jae
or
loope
mov
rclb
test
dec
mov
cwtl
sbb
aam
mov
adc
dec
add
adc
in
lock
lret
mov
mov
push
popf
scas
es
sbb
data16
sbb
inc
mov
movsl
call
loop
add
ret
push
mov
cmp
jmp
cmp
stos
inc
mov
lds
sbb
ja
leave
cli
pop
cmpsb
outsb
aam
nop
mov
flds
xchg
repnz
pop
lds
out
cmp
out
stc
adc
in
xchg
add
insl
pushf
sbb
movsb
imul
cmp
mov
adc
scas
shrl
test
js
dec
lret
dec
or
sub
clc
adc
or
subl
lea
insl
sbb
sub
aaa
cmp
mov
imul
sub
cwtl
jecxz
mov
add
daa
in
subb
and
push
pop
pop
stos
xlat
fcom
bound
jb
je
scas
rcl
dec
add
push
fiadds
mov
mov
sbb
out
in
dec
popa
pop
rcr
filds
js
outsl
ret
pusha
mov
fucom
aad
dec
jb
xchg
push
jl
and
xchg
js
cmp
loopne
push
xchg
or
cmp
jp
mov
mov
and
stc
imul
pop
daa
xchg
push
sbb
mov
fwait
pop
scas
dec
lahf
push
cmp
inc
outsb
sbb
pop
movsb
shlb
mov
cwtl
out
mov
mov
ret
dec
jo
xchg
movntps
repz
mov
pop
mov
ss
xchg
cmpsb
ret
rcl
stos
mov
test
xor
sbb
ja
dec
xchg
inc
inc
cmpsb
jmp
dec
adc
mov
out
dec
movsl
dec
cs
fidivl
jl
loop
inc
sbb
in
push
loope
jmp
sahf
lahf
mov
or
sub
shrb
or
into
add
jecxz
fstps
mov
punpckhdq
mov
and
insb
and
imul
mov
cmovge
fwait
jae
in
push
sub
popf
or
inc
sub
xlat
imul
out
jb
jmp
inc
aam
out
mov
mov
xchg
xor
sti
pop
sub
sub
push
add
adc
mov
add
nop
fidivrs
scas
test
sti
cmp
rorb
jo
and
jae
jo
std
test
fstpl
xorl
lret
dec
or
in
jns
sub
pushl
lret
add
cmp
aad
in
jb
cwtl
pushf
cmp
lock
mov
xchg
inc
xchg
inc
cwtl
dec
inc
ficoms
xchg
add
pop
movsl
or
dec
das
and
mov
push
push
cmp
imul
push
sub
mov
es
jl
or
cwtl
adc
push
adc
dec
loop
mov
out
scas
adc
pusha
imul
dec
cmp
or
sbb
sub
inc
loopne
mov
ror
bound
cmp
pop
add
mov
ss
cmpsb
shr
rorl
jmp
and
jne
pop
out
mov
lahf
mov
loopne
cmp
loop
ret
xor
or
imul
mov
pop
xor
xor
push
ficoml
cmp
adc
shl
push
dec
cwtl
cmp
out
js
aam
push
and
sahf
pop
add
adc
jns
addr16
sti
in
aad
outsb
ja
jg
cmp
sub
es
cltd
jp
add
in
cld
fisubl
pop
iret
lcall
jge
les
push
jno
sub
mov
mov
jp
mov
outsl
icebp
pop
fsts
jo
cmp
pop
ret
test
fbld
adc
sub
mov
push
jmp
jbe
dec
and
ret
cmp
enter
mov
adc
in
adc
aas
xchg
imul
icebp
outsb
pop
imul
ja
imul
cmp
aad
sti
rclb
outsb
fldt
jnp
xchg
in
xchg
xchg
std
dec
mov
clc
pushf
mov
stos
xchg
shll
outsb
fwait
das
std
sub
test
xorb
test
cmp
cli
fcoms
push
xor
rclb
push
jne
or
iret
daa
out
jno
jnp
and
pop
jb
inc
popa
sbb
cmp
push
rorb
adc
push
sbbb
inc
imul
lds
call
orb
rcll
jns
pop
movsl
mov
mov
movsl
push
outsl
xchg
mov
call
push
fldl
xor
mov
xchg
mov
shll
fsubl
lcall
shrl
stos
test
orb
xchg
adc
jp
add
adc
cmpl
lret
cwtl
sub
jg
in
add
dec
mov
cmpsb
sub
dec
pop
popa
in
or
sahf
xchg
dec
rorb
sahf
inc
add
jno
lds
mov
mov
dec
or
leave
bnd
stc
int
jge
add
js
xlat
cmp
sbb
push
aad
clc
mov
cmp
aad
repnz
inc
sahf
add
popf
mov
mov
cld
js
out
inc
aaa
test
dec
adc
inc
clc
imul
sub
push
add
pop
cmp
xchg
mov
cmpsl
fsubrl
xchg
mov
xchg
inc
add
repz
popf
test
adc
sub
scas
dec
push
cmp
pop
and
adc
icebp
addr16
mov
aas
sarl
jle
test
lret
fstps
adc
fidivl
xchg
xor
xor
push
sub
adcb
xchg
mov
gs
jl
mov
push
int3
shlb
cmp
jo
sbb
ror
and
iret
inc
push
or
mov
mov
lcall
jle
sub
mov
fs
sbb
and
ret
mov
lods
insl
test
call
jge
scas
test
into
and
jno
push
xor
adc
or
shr
push
cmp
adc
xor
in
lret
cmpsl
sti
imul
dec
push
mov
aam
fstp
jb
dec
insl
ret
pop
and
test
xchg
push
sbb
mov
mov
inc
sahf
add
mov
ret
negb
imul
push
dec
rol
sub
scas
sbb
lcall
jo
popf
adc
pop
imul
push
dec
xlat
mov
and
mov
in
mov
scas
jno
sub
in
mov
xchg
mov
pop
inc
push
dec
ret
popa
mov
cmp
dec
in
cmpsl
or
xchg
cld
push
shrb
js
jp
dec
loopnew,pt
push
sub
and
push
jnp
inc
xchg
stos
mov
clc
std
dec
jmp
cmpsl
ret
xchg
mov
or
inc
adc
pop
lds
test
adc
test
clc
add
sub
int3
sub
or
popf
mov
mov
mov
dec
pop
mov
hlt
or
mov
xchg
push
sbb
and
pop
addr16
mov
inc
jge,pt
imul
cmp
adc
ds
mov
cwtl
pop
xor
and
push
xor
enter
imul
sbb
jns
push
jne
sbbl
aaa
xchg
scas
into
adc
fsubl
jne
push
xchg
test
or
dec
mov
pop
add
test
lock
imul
les
popf
mov
lock
pusha
dec
add
adcb
jne
xchg
scas
or
frstor
or
jns
aaa
dec
mov
mov
ja
clc
push
scas
andb
ret
cmpsl
shl
dec
repnz
sbb
clc
mov
iret
clc
lods
or
je
stos
xor
mov
movsb
xchg
jmp
dec
imulb
inc
arpl
pop
repnz
popf
push
dec
das
sbb
sti
sbb
sbb
cmpsb
stos
or
mov
dec
mov
push
xchg
std
inc
cwtl
jle
jl
xchg
into
adc
cmpsb
aaa
jmp
test
xorl
push
popa
pop
or
dec
xchg
fwait
or
mov
jmp
out
push
mov
mov
lcall
or
push
stos
ret
jge
mov
jns
mov
aad
in
loopne
and
cwtl
ja
pop
mull
sbb
jmp
push
testl
push
sarl
sub
or
push
inc
sub
and
push
loopne
iret
gs
pushf
jp
pusha
push
neg
jl
adc
inc
sbb
mov
aam
int
dec
movsb
adc
cmc
stos
jb
lods
fidivrl
push
bound
push
cmp
in
mov
mov
dec
add
cltd
inc
fwait
movsl
mov
and
lea
aam
mov
es
mov
mov
repz
mov
les
mov
or
adc
in
insb
test
mov
pop
inc
push
daa
ds
stc
dec
js
adc
mov
xchg
dec
icebp
xchg
xlat
jbe
dec
ret
lds
cltd
jns
jge
push
jnp
popf
push
xchg
gs
out
sti
sbb
cmpsb
repnz
adc
add
adc
inc
push
jge
stos
loope
pop
stos
sub
or
mov
mov
dec
xchg
es
sbb
pop
sbb
imull
mov
cli
stos
testb
aam
test
pop
add
mov
daa
js
dec
xchg
fs
and
test
pop
std
or
imull
bound
sbb
testl
inc
jge
cmc
xchg
data16
dec
movsb
insl
xchg
sub
in
aaa
fnsave
push
xchg
outsl
xor
andl
cmp
pop
mov
adc
loopne
and
cld
sbb
out
dec
imull
es
mov
xor
xchg
cmc
jb
popa
fsub
gs
pop
push
or
dec
fiadds
xchg
xchg
add
push
shrb
dec
push
cmc
in
jp
pushl
dec
mov
cmp
sub
mov
push
cmpsl
shlb
xchg
mov
sbb
sub
mov
out
cmp
cli
rol
cli
cmp
lock
adc
sub
xorb
inc
stc
mov
mov
loopne
lahf
in
adc
mov
add
or
jecxz
stos
cmpsb
fwait
adc
sub
orb
sbb
sahf
cli
shll
fiaddl
mov
adc
in
inc
mov
xor
sub
lock
addr16
insb
test
fdivr
jge
mov
ja
mov
adc
fwait
pop
sub
loop
push
jge
ja
pushf
mov
fdivrl
dec
jmp
dec
aaa
adc
xchg
inc
adc
ljmp
lock
sahf
aad
sbb
daa
daa
call
repz
push
insl
sarl
mov
xchg
scas
xor
xchg
mov
sub
loopne
inc
xchg
mov
enter
dec
je
mov
fdivp
add
out
add
pop
int
push
or
xchg
jecxz
scas
repnz
add
dec
pop
add
fists
xor
repnz
je
xor
cmpsl
arpl
imul
or
out
pusha
and
das
pop
push
sbb
cmp
je
ss
aam
ss
xor
iret
jl
das
fmuls
cli
cs
dec
imul
xchg
ljmp
repnz
mov
mov
pop
outsl
cld
sub
fwait
std
mov
jle
xchg
out
mov
push
jnp
test
pop
insb
pushf
inc
add
jnp
stc
pop
gs
mov
icebp
popf
dec
cmp
fwait
lcall
ljmp
push
dec
xchg
stos
xor
iret
pop
mov
fstpl
in
sbb
lret
jbe
or
and
adc
lock
push
inc
sub
xchg
int
stos
inc
outsl
jo
jns
xor
cwtl
pop
lods
sbb
in
mov
movzbl
xchg
mov
outsl
mov
mov
rcll
jecxz
mov
pop
ds
jl
andb
fwait
mov
fucomip
cmc
cmp
dec
shll
in
int
lods
or
mov
xor
pop
ja
xchg
shll
mov
inc
inc
fcmovnu
cmpsb
push
roll
negl
jb
jbe
adcb
xchg
and
mov
fldcw
test
mov
fs
xor
mov
fst
push
fcomp
push
or
sbb
mov
out
addr16
jne
dec
test
imul
je
aad
popa
cltd
testb
jbe
testb
clc
jmp
jns
in
jns
sti
xor
addr16
jns
cmp
repnz
les
int3
andb
jns
pop
popa
dec
jl
and
xchg
gs
or
ljmp
xor
aad
lds
push
dec
mov
pop
cmp
adc
js
fstpl
dec
add
inc
ljmp
std
clc
lods
sub
mov
mov
loope
xchg
ja
sub
cwtl
in
fdivs
mov
push
rcrl
push
shlb
stos
es
movsl
sbb
int
jo
push
sub
cmp
bound
test
dec
mov
xchg
ror
imull
cmc
xchg
fidivl
adc
and
inc
mov
xchg
pop
adc
sbb
xchg
cwtl
in
mov
jecxz
into
inc
loope
push
and
sbb
mov
icebp
stos
cs
xlat
mov
xchg
cli
mov
mov
adc
fidivs
cmc
in
leave
xchg
mov
jae
or
xchg
test
sub
xchg
cli
jnp
add
scas
fcmovb
out
add
fidivl
jle
mov
rorb
jno
es
popf
pop
in
out
cmp
orl
add
test
adc
jae
sbb
movsb
mov
in
mov
insb
dec
xlat
cmpsl
movsb
call
testb
insb
jle
pop
ja
shll
in
pop
sbb
push
cmp
or
inc
pusha
sahf
pop
jmp
adc
cpuid
mov
and
in
mov
push
fidivs
lock
jb
in
mov
sbb
jl
jecxz
jb
xchg
mov
pop
cmp
sbb
pop
or
rorl
pop
or
hlt
add
or
xchg
cli
xchg
fwait
push
pop
movsb
cmpsl
jge
fcmovne
cmp
les
and
dec
and
cmpsb
pop
inc
sbb
ds
ds
push
and
ljmp
jg
sub
mov
xor
jg
sub
push
scas
cmp
sbb
sub
inc
cltd
iret
sbb
push
pop
add
pop
jno
push
lock
cwtl
jne
ja
outsl
cltd
pusha
jmp
xchg
and
scas
fisttps
add
lcall
lcall
ja
cmp
shll
adc
xor
cmp
jnp
cli
xor
test
and
sbb
repnz
fdivl
add
dec
sub
or
aam
mov
hlt
subl
pop
stos
mov
xchg
shl
fdivl
sbb
mov
xor
sbb
and
test
int3
int3
mov
xchg
mov
xor
cmp
mov
mov
cli
and
leave
scas
jae
jmp
or
cmpsl
daa
mov
shll
pushf
addr16
adc
mov
jmp
test
jnp
cmpsl
and
pop
jb
lds
lods
push
dec
out
out
mov
out
or
scas
aad
sub
fildl
stc
sbb
js
gs
popf
insl
pop
lock
push
dec
aas
imulb
fldenv
mov
mov
jmp
jle
insl
jle
sti
dec
lock
pop
ss
xor
push
cmc
leave
cmp
fidivl
movsb
cmp
cmp
xor
jecxz
pop
fnstsw
sti
pop
and
push
lahf
or
std
add
adc
cmpsl
jns
adc
in
jle
hlt
pop
sbb
sub
js
data16
rolb
cltd
aad
pop
mov
scas
cld
dec
leave
jg
enter
or
mov
mov
adc
push
fst
mov
clc
mov
mov
jp
mov
push
int
dec
pop
arpl
pop
nop
movsl
out
dec
mulb
push
inc
add
ficoms
aad
inc
and
mov
push
sub
imul
out
mov
mov
push
dec
or
lds
mov
inc
sub
pop
cmp
jge
sbb
insl
in
jmp
add
mov
jno
mov
jmp
xchg
outsl
nop
and
or
daa
pop
add
cmpsl
jae
das
dec
lea
inc
daa
pop
cmpsl
pop
xchg
sbb
fbstp
dec
ja
ljmp
nop
leave
mov
and
xchg
cmp
push
das
test
iret
xchg
in
ds
lods
xor
xor
scas
sarb
imul
scas
sbb
push
jge
cmpsb
inc
loope
xchg
jno
inc
js
dec
int
loopne
lcall
popa
rcll
fs
xchg
out
sub
and
adc
clc
xchg
pushf
cmpsb
mov
xchg
jge
popa
push
fcmovnu
jp
jne
dec
mov
xchg
mov
das
push
rolb
andl
test
sub
cmpsl
stc
cmpsb
push
or
arpl
add
jg
cmp
pop
xchg
dec
or
pushf
push
jmp
mov
into
add
cld
pop
dec
xlat
ja
lret
lods
push
repnz
push
jge
adc
loope
ja
pop
push
mov
jle
xor
data16
cmc
mov
sarb
sbb
ljmp
cld
mov
test
push
sahf
bound
aas
pop
mov
mov
or
shlb
cmp
jne
fildl
fidivrs
shlb
xor
std
mov
addr16
pusha
rol
test
and
xor
push
or
and
ja
and
jmp
push
inc
in
pop
loope
inc
or
mov
jb
cmpsb
orl
sbb
add
inc
push
das
xchg
fisttpll
and
mov
push
push
lret
pop
sub
push
add
sahf
mov
aaa
stos
aam
bound
inc
mov
xchg
clc
jno
ficoms
inc
push
xor
mov
or
loope
cmp
nop
pop
ret
xchg
ljmp
sti
mov
divl
sub
scas
sbb
jae
cmp
je
shrl
outsl
mov
mov
lds
sub
pop
sbb
bound
mov
ret
ret
xor
fstpl
jp
leave
pop
xchg
stos
sbb
xchg
pop
mov
ds
insl
ja
adc
cmp
xchg
xchg
mov
je
into
cli
bound
cmp
push
movsl
adc
cmpsl
jg
fwait
and
cmp
jle
mov
fwait
mov
cmp
jle
cmp
push
lea
lea
mov
aad
sbb
mov
add
test
in
popf
jbe
in
mov
imulb
jne
mov
jge
xor
enter
popa
jnp
pop
faddl
iret
pop
add
mov
test
push
xor
enter
ljmp
mov
pop
out
pop
movsb
lret
idivb
cmp
mov
xlat
xlat
clc
jmp
jmp
add
addr16
inc
nop
mov
imul
cmp
push
adcb
push
insl
xchg
or
in
pusha
push
les
fsubr
stos
popa
push
fwait
jno
addl
arpl
dec
pop
xlat
dec
shl
stc
neg
out
orb
lds
mov
jo
into
nop
ret
ljmp
cld
inc
adc
push
aas
out
loopne
and
pop
cmp
inc
movsb
les
pop
jmp
cmpl
xlat
push
inc
mov
test
inc
lcall
lfs
sbb
popf
dec
mov
hlt
scas
cmp
dec
insl
in
loopne
mov
pop
mov
aaa
sbb
push
dec
je
int
sbb
pop
cli
outsl
loop
or
ja
xchg
mov
cmp
pop
call
add
pop
loope
push
in
pop
or
mov
imul
lret
dec
faddp
loopne
and
out
inc
pop
out
mov
sub
mov
addr16
scas
inc
lock
jecxz
and
insb
das
or
push
dec
fsub
ret
adc
in
in
les
xor
pusha
fs
add
ror
jbe
pusha
sub
arpl
adc
push
sarl
jecxz
xchg
clc
sub
fsubs
sub
arpl
adc
push
sarl
jecxz
xchg
clc
sub
fsubs
sub
arpl
adc
push
sarl
jecxz
xchg
clc
sub
fsubs
sub
arpl
adc
push
sub
cmp
pop
cwtl
jecxz
in
or
dec
daa
pop
aaa
jnp
imul
lods
dec
xchg
push
leave
clc
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sti
pop
enter
scas
or
cmp
dec
ud1
fstpl
and
aas
jl
lock
jl
sbb
pop
ss
mov
ror
adcb
mov
cmp
sub
out
jecxz
inc
test
and
mov
fidivl
xor
in
scas
stc
inc
stc
xlat
lret
sbb
leave
mov
cmpsb
mov
inc
dec
test
cwtl
dec
popf
push
clc
aam
inc
xor
cltd
or
data16
out
imul
sub
push
fimuls
je
stc
or
out
sbbb
in
cmp
mov
sub
pop
mov
inc
cmp
push
popa
cwtl
mov
adc
mov
dec
mov
sbb
clc
popf
pop
dec
mov
mov
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
push
aam
jp
fisttps
test
mov
mov
ja
addr16
sub
clc
pop
jecxz
cltd
or
pop
pushf
pusha
pop
mov
leave
mov
cmpsb
dec
lret
gs
push
into
push
repnz
daa
sbb
imul
in
cs
jle
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
xor
jmp
fcos
dec
mov
in
cmpsb
dec
xchg
push
lcall
sbbl
and
inc
push
mov
clc
cltd
loope
sti
and
stos
jecxz
lods
push
jbe
mov
addr16
cmp
aaa
push
in
test
call
shll
push
out
cmp
xchg
cmp
mov
add
decl
xchg
hlt
fiadds
or
ljmp
arpl
sbb
add
in
sub
pop
add
sub
aaa
outsb
cmp
pop
insl
cmp
xchg
ds
ljmp
stc
push
lods
dec
lods
insl
or
dec
sub
insb
ja
mov
daa
inc
fwait
add
cmpsb
mov
push
call
jg
jmp
ds
es
add
jge
pop
nop
sti
xchg
cmp
cmp
cmc
xchg
cltd
pop
mov
mov
ljmp
dec
cmp
mov
mov
test
xor
movsl
fnsave
scas
outsl
into
ret
js
stos
repz
sbb
xchg
cmp
cltd
sub
cs
loope
sbb
outsb
data16
sbb
int
dec
dec
movsb
jge
repnz
pop
call
addr16
and
leave
hlt
fldl
in
dec
jae
sbb
addr16
push
fcompl
and
mov
push
lods
pushf
jle
mov
dec
pop
pop
lea
pop
cli
loope
pop
cltd
in
das
jns
pop
aam
sarl
lods
fsts
hlt
xchg
fildll
dec
sbb
sti
and
icebp
or
loopne
nop
xchg
bound
shll
lods
inc
sar
sbb
add
xchg
inc
insb
loope
sub
mov
mov
inc
inc
push
push
jnp
add
mov
mov
shlb
in
sbb
xor
and
xchg
out
jmp
push
push
int
pop
jns
mov
stc
loop
and
sbb
shrl
inc
scas
push
xor
dec
jl
xor
arpl
ja
push
pop
ja
pop
ja
fwait
mov
addr16
sub
lret
jbe
out
push
mov
imul
mov
cmp
rcrb
and
cs
xchg
mov
test
dec
jne
adc
xchg
pmaxub
call
jb
adc
mov
sahf
sub
cmp
sbb
fistpl
jle
popf
dec
aam
adc
pop
ljmp
pop
push
icebp
out
push
ja
rsqrtps
jg
ret
ss
sbb
xor
pop
les
sub
shll
inc
fmull
cmp
push
lock
loope
xchg
fcompl
mov
shll
xor
movsl
and
mov
sbb
mov
iret
sbb
and
pop
orl
popa
mov
loopne
push
and
pop
xchg
push
sbb
data16
cmpsl
and
daa
dec
push
jl
ja,pn
pop
test
add
dec
scas
flds
aas
or
jmp
xchg
rol
inc
enter
add
int
push
mov
mov
add
ret
and
int3
das
or
xchg
mulb
loop
outsl
aas
pushf
loop
mov
xor
xor
nop
addr16
hlt
rcr
ror
mov
icebp
adc
jns
sarb
mov
inc
push
test
xchg
fisubrs
aam
adc
sbb
lahf
stos
jmp
pop
push
flds
popl
pop
sub
or
test
mov
mov
imul
orl
dec
popa
and
push
sar
in
xor
pop
rcl
sbb
xchg
jg
repz
pop
fsubrl
add
stc
std
xchg
cmp
hlt
lret
ja
imul
nop
cs
aaa
repnz
lods
jo
mov
insl
ss
xor
dec
mulps
repnz
inc
and
mov
lsl
icebp
js
xchg
movsb
popa
pop
mov
push
psrad
aad
push
push
cmpsb
mov
inc
decb
into
mov
outsl
cmpsb
leave
xchg
out
leave
cmc
pop
inc
enter
int3
inc
leave
je
cmp
xor
bound
icebp
rcll
sbb
sti
pop
mov
outsl
jo
mov
js
aas
aaa
pop
enter
lret
neg
or
pop
mov
dec
dec
div
xor
lods
jmp
fwait
outsl
and
scas
inc
loope
out
mov
sti
dec
ss
fwait
and
inc
enter
jno
ja
or
mul
or
sbb
bound
js
push
jae
in
xchg
or
push
negb
adc
jmp
addr16
add
adc
movsl
imul
test
mov
test
mov
dec
cmp
scas
lahf
mov
sbb
subl
fcmovbe
jp
jl
pop
lret
push
pop
test
dec
aaa
lret
inc
lds
push
pop
and
fwait
push
fldt
push
mov
js
cmp
popf
cs
xor
dec
cmp
mov
xlat
add
leave
lret
cmp
js
sub
add
mov
mov
test
stc
or
stos
stos
or
in
popa
xchg
mov
jnp
add
icebp
dec
mov
and
xchg
test
repz
test
outsl
xlat
repnz
jns
inc
lret
cmp
cs
pusha
jl
les
cwtl
idivb
loopne
lods
leave
out
repnz
xchg
dec
xor
bound
mov
cltd
jl
xlat
pop
stc
scas
mov
sub
ss
fisubrl
gs
ja
pop
sbb
xchg
cmp
pop
xchg
xor
je
ds
and
lock
sub
fnstsw
lock
arpl
sub
stos
adc
and
xlat
cmp
push
xchg
test
push
mov
pop
out
fwait
cmpsb
add
jle
xor
adc
ljmp
dec
paddusb
xchg
xlat
inc
dec
stos
push
fbstp
add
cmp
cmp
loope
push
sarl
outsb
imul
dec
xchg
or
nop
aad
movsb
and
int3
test
fiadds
fidivs
mov
hlt
cmpsb
jg
mov
mov
mov
sahf
cmp
push
imul
lock
sub
pop
sbb
notl
clc
or
or
negl
xlat
and
push
mov
jbe
sbb
or
sbb
fwait
les
push
arpl
push
xor
or
jno
clc
adc
pop
mov
jg
sarl
movsl
mov
pop
test
out
jno
fwait
lock
push
ds
arpl
mov
adc
pushf
js
sbb
inc
addr16
imul
lods
adc
imul
ja
mov
outsl
and
icebp
cld
cmp
push
aas
push
mov
imul
adc
adc
enter
mov
movb
dec
es
xlat
fwait
and
orb
and
xchg
sti
xor
mov
fildll
xor
imul
pop
xchg
inc
pusha
jge
int
push
sub
sub
imul
mov
lahf
jae
cmpsl
jbe
ds
hlt
push
cmp
int
push
pop
dec
dec
mov
cmpsb
out
push
pop
pusha
stos
pop
daa
mov
add
insl
jge
mov
cwtl
adc
mov
jle
fucomp
fwait
sti
pop
sbb
pop
mov
push
xchg
jne
or
cli
add
xchg
sbb
sbb
shlb
sti
dec
jbe
adc
es
movsb
loop
in
or
inc
in
cs
popf
clc
pushf
xchg
lret
fstl
mull
mov
cld
mov
xchg
subb
sbb
ja
mov
mov
inc
subb
xchg
jg
mov
xchg
in
xor
fiaddl
int3
mov
jns
shll
imul
scas
int
mov
push
push
sub
lret
sbbl
cmp
sub
ret
je
mov
scas
mov
jnp
std
addr16
mov
jnp
in
adc
std
push
mov
sbb
jnp
cmp
addr16
fsubrl
ret
shl
dec
jle
pop
and
fs
dec
outsl
cmp
cs
dec
sbb
roll
add
push
call
inc
test
adc
fdivs
mov
sbb
adc
gs
int
aam
in
scas
aam
xchg
repnz
sbb
insl
bound
aaa
dec
pop
xor
sbb
adc
das
js
mov
mulb
or
sbb
cli
ss
pop
xor
pop
shlb
xchg
mov
int
aas
sahf
mov
rorb
js
add
xor
jae
sarb
ss
ret
sbb
fsubrl
fmull
dec
sarl
and
push
cld
push
and
lods
xchg
xchg
sub
dec
xor
xor
pop
cmpb
sub
ja
aam
repnz
jno
cmp
adc
xor
call
inc
jle
push
sbb
outsl
outsb
adc
jnp
ja
hlt
push
or
push
jecxz
out
cmpsl
fmuls
stos
std
lods
sbb
push
lret
add
sbb
pop
dec
imul
dec
add
std
dec
ljmp
out
mov
dec
adc
jg
out
out
add
repnz
lods
cmp
rorl
insb
mov
andnps
pop
push
push
adc
bound
or
jle
and
cmc
arpl
xchg
xor
dec
addb
fnsave
in
jge
or
enter
je
adc
test
sbb
addr16
lret
iret
nop
sub
fwait
xchg
insb
test
xor
jne
outsl
cmp
in
stc
add
clc
add
ficoms
into
and
mov
push
jg
ret
lock
clc
mov
insb
cwtl
ss
cwtl
cmpsb
pop
sbb
orl
leave
jo
push
jb
call
cmp
inc
aas
jnp
cmp
or
ljmp
fs
cmpb
jge
imulb
push
repz
clc
fisttpll
gs
inc
iret
out
sub
js
fdivr
xor
push
mov
or
add
outsl
es
pop
add
in
push
cli
inc
inc
out
mov
pop
arpl
fcomps
loop
pop
out
sbb
les
sub
rorl
xor
popa
dec
xchg
clc
add
push
cli
stos
std
xchg
out
popl
push
mov
cwtl
bound
mov
dec
cmp
test
mov
in
stos
inc
push
jo
sub
mov
cmovg
mov
mov
push
jmp
cwtl
fninit
shr
je
pop
jne
test
mov
sub
clc
pop
ret
das
sub
cmc
out
push
imul
lcall
enter
aad
fnsave
in
lods
adc
mov
and
cmpsl
mov
mov
test
imul
lret
pop
imul
dec
lods
in
and
leave
vmovsd
inc
mov
jnp
scas
push
push
repz
add
shrl
jnp
gs
and
push
les
sub
lret
sub
cld
ja
adc
imul
cli
jecxz
roll
or
mov
rcrl
adc
pop
cmp
scas
mull
xchg
out
pop
xchg
cmp
pop
lahf
ret
cmc
int3
mov
push
cmpsb
pop
dec
dec
mov
cmpsl
pop
add
sbb
xchg
not
rcll
inc
adc
mov
ret
cmpsb
dec
cmp
pop
pop
fiadds
and
repnz
mov
cltd
mov
lcall
jecxz
dec
subb
pop
jecxz
nop
and
or
scas
cltd
jle
push
iret
and
sbb
jo
aam
inc
rcrb
or
jo
sub
ror
lods
testl
sbb
scas
gs
jmp
push
data16
or
mov
test
mov
popa
test
push
adc
push
mov
shll
ljmp
and
imul
pop
rcll
gs
sbb
add
iret
mov
mov
std
cmp
cwtl
ds
pushl
ss
xchg
sbb
mov
in
sbb
test
sbb
call
jp
subb
fists
xor
insb
lock
lds
add
mov
pusha
imul
or
loop
cltd
rclb
test
hlt
int
nop
jle
pop
cltd
insl
testb
push
and
sbb
add
fcom
les
or
adc
xor
scas
inc
loop
mov
addl
out
js
xchg
repz
daa
test
test
stc
and
xorb
jg
sub
xor
or
inc
and
out
loop
adc
dec
adc
inc
xor
dec
ret
xor
push
cmp
pushf
jne
rcrb
xchg
into
adc
sbb
dec
pop
add
iret
jl
test
xchg
lret
out
daa
lcall
jbe
mov
sub
subb
push
loopne
scas
push
mov
mov
mov
insl
aam
mov
adc
mov
test
mov
jle
sbb
cmpl
add
pop
add
push
inc
lahf
fcompl
ljmp
mulb
cmp
cs
pop
mov
dec
stc
sbb
ffree
xchg
cmp
cmp
lods
pop
pop
mov
out
into
jbe
mov
adc
xor
xor
mov
mov
pop
cmp
dec
xlat
pushf
std
and
xchg
nop
enter
xchg
data16
outsb
sub
push
repnz
subb
xchg
idivb
cmp
add
sub
divl
add
sahf
cmp
or
mov
aad
scas
jl
dec
jne
xor
lock
fs
mov
insb
ss
dec
bnd
add
mov
jno
jb
rcrl
lea
xchg
test
lds
mov
mov
loope
xor
dec
push
outsl
inc
push
fidivrl
and
in
xchg
sub
jnp
push
or
xor
and
insb
sub
add
jno
mov
xchg
pop
call
lods
ret
cltd
test
jle
cmp
push
mov
mov
loope
pop
adc
rcr
cmpsb
lock
mov
push
sub
xchg
cmp
mov
cmpsl
hlt
aaa
hlt
nop
ja,pt
jns
pushf
aaa
xchg
imul
cltd
jecxz
cmc
lock
pop
ljmp
or
jge
push
fucomip
divl
mov
fstpt
aaa
loopne
je
enter
and
aas
pop
test
enter
lcall
add
mov
nop
or
or
add
add
xchg
xor
lds
dec
inc
mov
bound
sahf
shl
xor
std
test
cld
test
mov
push
add
punpckldq
stc
insl
test
aaa
in
mov
packsswb
rcrl
mov
popa
insl
push
dec
adc
pop
push
mov
iret
lock
aam
mov
mov
test
jge
xchg
pop
insl
mov
push
mov
pop
push
insb
mov
mov
in
out
outsl
mov
push
push
pop
push
pop
push
cli
ret
incb
out
ret
out
cmp
or
jnp
jmp
out
cmp
inc
inc
icebp
cld
adc
int
mov
push
int3
inc
xchg
popa
push
or
insl
sbb
mov
pop
sbb
pop
inc
pusha
mov
sar
pop
pop
in
int
rcrl
xchg
adc
out
jle
sub
into
mov
icebp
push
dec
cmp
cmp
nop
mov
enter
iret
pop
xchg
fwait
ljmp
fildl
jns
sub
and
cmp
ss
xorb
neg
add
mov
or
sbb
scas
push
or
into
push
xor
int3
js
movsl
dec
in
push
jns
popa
es
mov
cmpsb
sarb
add
pop
lods
cld
jo
clc
mov
push
outsl
in
cld
mov
adc
sub
xor
pop
lock
repz
xchg
mov
pop
mov
adc
pushf
cs
pop
inc
inc
mov
push
aas
add
test
dec
inc
mov
fs
add
lods
dec
out
cli
inc
xchg
ss
adc
xchg
push
hlt
cmp
fldt
lods
mov
add
push
add
or
fmull
jne
int
jmp
cmp
shrl
pop
das
sub
subb
andb
sbb
mov
data16
scas
sahf
imul
shrb
adc
adc
mov
jmp
icebp
push
lahf
shlb
adc
divb
js
pop
push
lods
mov
loopne
imul
jl
mov
data16
repz
push
xor
clc
push
fisttpl
sbb
adc
and
repz
xor
daa
inc
sbb
repnz
stos
adc
dec
inc
jge
jae
in
mov
cmpsb
and
mov
je
sub
xchg
and
mov
or
xor
sub
and
ljmp
cmp
outsb
jne
mov
pop
subl
sbb
inc
js
mov
pop
jae
test
jg
add
and
es
mov
push
in
out
mov
in
pop
je
nop
mov
or
cli
dec
jbe
es
pop
std
xchg
mov
daa
push
push
popa
fldl
subb
cmpsl
sub
dec
inc
ds
test
cld
out
inc
lods
popl
out
xchg
cmp
cmp
adcb
push
insb
mulb
idiv
mov
ds
pushl
jb
mov
or
xor
add
mov
adc
dec
xor
or
sbb
pop
sar
mov
mov
push
ud1
fsubrl
subb
psubd
xchg
sub
sbb
xchg
cmp
xchg
jne
mov
mov
mov
clc
pop
js
hlt
push
pop
pushw
cmp
jo
icebp
ja
repz
add
aad
mov
test
mov
fmul
out
xacquire
jl
cmp
stos
mov
jne
mov
push
push
push
arpl
imul
adc
aaa
mov
push
cmp
lahf
insl
rcl
test
mov
and
sbb
pop
imul
lods
pop
mov
repnz
scas
iret
adc
lea
mov
adc
and
cmp
push
incl
cmp
int3
pop
push
xor
xor
shl
out
ret
fs
push
sbb
lods
arpl
fstpt
es
add
jle
xor
leave
mov
push
add
jg
mov
loop
jg
mov
push
mov
loope
push
dec
leave
xor
sub
or
in
sbb
xchg
lods
loop
xor
enter
mov
imul
or
mov
mov
aaa
inc
xor
arpl
es
aaa
aaa
xor
mov
sub
pop
lods
imul
inc
mov
sbb
out
xchg
mov
in
scas
mov
mov
mov
mov
mov
cmpsl
popf
shrb
ss
scas
jbe
lods
cld
mov
ficoms
movsb
pop
lahf
pop
lret
sbb
push
call
add
pop
pop
lock
push
or
loop
add
adc
add
jecxz
xor
testl
adc
jno
mov
popl
jb
mov
shlb
push
mov
out
rol
jno
mov
fldcw
test
insb
push
notl
arpl
fisttpl
pop
or
fcos
mov
or
jae
daa
mov
push
sub
popa
jbe
sbb
pop
push
xor
hlt
ja
and
mov
call
xchg
jg
lods
scas
inc
enter
in
jg
cmc
and
popf
js
jae
and
pop
mov
inc
rcrl
sahf
jns
in
cmp
dec
cld
and
dec
cmp
push
lea
pop
mov
outsl
icebp
lea
out
push
out
mov
pop
out
cmp
adc
dec
mov
loop
or
push
mov
sarl
stos
mov
or
mov
mov
enter
mov
fwait
add
dec
jbe
jb
movsl
cld
dec
ss
xor
inc
pushf
and
ficoms
int3
pop
inc
outsl
scas
lcall
data16
xor
mov
mov
sub
cmp
mov
into
adc
jns
jbe
fs
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
sti
cmp
sub
sbb
or
pop
mov
mov
dec
mov
stc
sub
sbb
or
cli
cmp
sub
sbb
or
pop
mov
mov
dec
lea
stc
sub
pop
mov
add
adc
jno
lret
jle
icebp
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
adc
js
push
rcll
and
clc
pop
jmp
cmp
pop
in
dec
std
js
push
mov
fsubrs
jge
insl
call
in
mov
hlt
dec
std
js
push
movsl
cmp
jmp
xchg
cmp
pop
cwtl
insb
out
int
sbb
js
add
roll
xor
rcrb
pop
divb
sub
fadd
int
jmp
mov
mov
out
or
pop
aad
and
pop
pop
pop
addr16
push
or
inc
jp
xchg
sbb
mov
fsubr
pushf
mov
enter
test
pop
mov
push
jge
aad
bound
dec
addb
andb
xchg
sbb
xor
inc
mov
loopne
jge
or
mov
or
mov
mov
xchg
cli
pop
mov
sub
insb
cmp
pop
rorb
add
or
js
push
mov
fdivs
gs
push
call
sub
mov
sbb
jp
pop
loope
lock
xor
or
sub
fcomps
fimuls
inc
jmp
cltd
sbb
cmp
push
cltd
pop
out
aam
fnstsw
lods
dec
cwtl
pop
lods
add
push
rorl
cmp
enter
call
cmp
pop
in
dec
std
js
push
mov
fsubrs
jge
dec
call
cmp
pop
in
insl
jp
in
inc
into
out
or
shll
fbstp
sti
stc
push
sti
rcll
push
stc
adc
and
aam
fsubrs
pop
fsubrs
arpl
test
inc
hlt
cmpsb
mov
loop
scas
repnz
movsl
cs
cmp
aaa
fcmove
out
xchg
les
xchg
sub
shl
mov
jecxz
sbb
cmp
and
loop
stos
loope
leave
mov
lods
jnp
cmp
rcl
cmp
adc
mov
cmp
daa
test
fildll
nop
xor
push
fimuls
leave
fs
cmp
repnz
dec
iret
sub
and
test
sub
divl
cmc
jp
mov
mov
je
fcmovnbe
in
jae
dec
jge
idivb
lea
in
cli
and
mov
adc
popf
sbb
xchg
inc
arpl
popf
adc
aaa
xchg
stos
push
xchg
jnp
cmp
sbb
outsb
pop
xchg
int
leave
mov
and
dec
jb
pop
fdivs
sbb
cmp
jo
icebp
cmp
jnp
popf
sub
test
push
leave
xchg
mov
int
int3
clc
stos
mov
cmc
push
pop
out
aam
pop
and
push
or
pop
movsb
xchg
inc
call
jnp
xchg
pop
xor
cli
stos
int3
pop
push
into
push
dec
cmp
in
fisttpll
mov
adc
test
pop
pusha
xor
adc
adc
mov
and
je
sti
sub
stos
lea
cmc
dec
xchg
aad
icebp
xor
lcall
add
push
push
sbb
inc
push
jecxz
fmulp
mov
subl
mov
fbld
sbb
cltd
jp
ds
sbb
subl
and
dec
add
jns
rclb
xor
inc
cs
mov
iret
mov
push
push
push
jbe
xchg
cmp
fidivl
adc
jnp
insl
mov
adcb
and
push
dec
adc
lahf
call
scas
loopne
add
sub
subl
scas
sti
test
xor
mov
pop
fwait
lds
rcrb
mov
adc
ljmp
int3
sub
add
sbb
dec
fstl
in
push
inc
adc
or
lods
into
mov
repz
inc
pop
movsl
add
hlt
xlat
add
movsl
or
and
in
outsb
lds
mov
push
rcrl
sub
mov
inc
push
iret
imulb
in
jl
jno
mov
incb
sbb
jo
loopne
shr
mov
pop
aas
sti
lcall
add
sbb
xchg
fcoms
mov
in
rolb
add
jne
imul
sub
cmp
out
jbe
insb
lahf
xor
es
ret
or
sarl
dec
leave
push
inc
subb
mov
inc
mov
push
lea
stc
pop
out
lahf
lock
xchg
inc
nop
xchg
dec
pop
pop
arpl
std
int
jp
lods
jge
pusha
ja
pop
add
sbb
test
push
loope
nop
arpl
ljmp
mov
mov
adc
jnp
addl
push
sub
je,pn
outsb
insl
imul
push
inc
mov
pop
imul
mov
out
adc
pop
dec
mov
and
int3
sub
stos
jo
ret
sub
test
inc
movsb
rcrb
inc
push
inc
and
ffreep
mov
repnz
lea
mov
mov
ja
adc
mov
mov
fistpll
pop
and
lock
ds
int3
roll
mov
arpl
jb
dec
mov
nop
mov
or
push
popa
cmpsb
daa
mov
inc
pop
ljmp
adc
jg
xchg
and
mov
pop
call
test
mov
push
mov
stc
inc
sbb
or
in
sbb
rcr
repnz
hlt
clc
inc
xbegin
dec
iret
inc
push
das
lds
addr16
xchg
stc
push
push
gs
sahf
addr16
push
jae
imul
jge
xchg
push
and
lahf
inc
test
or
ljmp
xchg
ljmp
imull
jg
sub
mov
dec
movhps
jmp
lock
mov
add
mov
lret
dec
inc
fildll
imul
dec
jne
dec
cmp
mov
shlb
sbb
fbstp
xor
xor
ss
mov
xor
lods
je
negb
inc
sbbb
adcl
xor
fstp
dec
movsb
xor
adc
inc
scas
sub
jbe
inc
es
xchg
jb
mov
lea
rorb
add
xchg
lods
jl
imulb
mov
push
aam
inc
cwtl
xchg
push
xchg
test
xchg
popf
push
lds
jecxz
pop
mov
cmpsb
cs
mov
sbb
cmp
pop
jmp
jge
dec
sbb
mov
bound
sub
xchg
pop
push
addb
addr16
ret
jnp
xchg
daa
fmuls
inc
rorl
mov
out
mov
addb
pop
push
repz
mov
mov
xchg
andb
cmpb
pop
and
cs
xor
lahf
je
cwtl
hlt
cmp
sti
adc
jl
cmp
xor
test
or
xchg
xchg
shlb
enter
mov
movsl
test
push
out
jae
aam
lods
sub
es
cld
data16
rol
sbb
mov
daa
repnz
push
pop
inc
fsubrl
fnstcw
inc
call
fwait
or
movl
aas
in
std
mov
push
int3
xchg
lahf
jmp
jp
ret
mov
mov
sbb
push
dec
shlb
shrl
es
fwait
leave
outsb
mov
cmp
push
inc
andl
mov
push
mov
aaa
mov
aam
push
je
jo
pop
pop
lock
push
push
jbe
lahf
adc
adc
test
test
sub
movsl
jb
das
cmp
cmp
and
aas
jl
cmp
fstps
push
popf
xor
xor
mov
inc
cltd
mov
stos
lret
jle
jnp
dec
je
int3
shll
push
inc
pop
incb
out
add
xor
mov
xor
xor
jp
repnz
or
push
mov
pop
aam
gs
mov
dec
xchg
rorl
adc
push
sub
mov
lods
xchg
sub
mov
pushl
insb
push
test
lock
arpl
push
sub
repz
int3
sar
int
xchg
nop
cmpb
mov
and
popl
fidivrl
js
call
pushf
sub
mov
ljmp
shl
ds
push
mov
fs
pop
imul
loop
xchg
or
sub
cmp
out
lahf
inc
out
lret
sbb
sbb
sub
outsl
and
mov
out
jle
pop
loope
mov
cmp
and
test
sbb
xlat
roll
and
loopne
mov
out
xchg
pusha
mov
daa
scas
leave
and
or
dec
aaa
je
pop
pushf
mov
xlat
data16
pop
mov
clc
mov
idiv
sbb
push
js
enter
lods
xchg
cmpsb
nop
stc
test
cltd
pop
push
pop
fwait
jge
or
sbb
in
or
xor
mov
in
add
stc
sbb
movsl
cmp
jo
cmp
cmp
stc
adc
dec
int
lret
xor
jns
pop
int
lcall
sbbb
cmpsl
xchg
xchg
mov
pop
adcb
dec
add
sub
cltd
cmp
mov
cmpl
add
cmp
xchg
divb
and
sbb
out
in
and
lods
adcb
outsl
lock
enter
test
ljmp
imul
jns
hlt
imul
js
call
ja
aad
add
or
shll
es
outsb
push
pop
cmp
rolb
incb
xchg
loop
repnz
xchg
or
mov
data16
sub
js
pop
xchg
mov
outsl
mov
pushf
pop
pop
repz
test
pusha
out
popa
test
or
paddusb
cmpsl
ss
lds
mov
mov
rclb
inc
mov
lods
je
movsb
mov
xchg
jle
push
or
add
adc
sub
xor
movsb
cmpsb
xchg
mov
xlat
and
cmc
pusha
jl
mov
mov
int
jg
adc
nop
nop
cmp
push
pop
jge
fwait
pop
imul
outsb
adc
mov
outsl
pop
and
jge
lahf
adc
and
adc
mov
xor
mov
xlat
je
dec
pop
cmp
and
loopne,pn
mov
decl
mov
fdivrl
loopne
popa
push
scas
adc
rclb
outsl
adc
jbe
mov
movsb
icebp
xor
iret
pop
out
add
jo
adc
jg
and
dec
es
int
scas
clc
lahf
mov
jb
sbb
mov
inc
loopne
out
and
int
xchg
imul
pop
ss
lcall
pusha
pop
stos
mov
in
xor
test
sub
cmpsb
push
xchg
pop
jo
clc
test
add
push
outsb
repz
arpl
mov
lods
gs
int3
mov
ja
sbb
test
int3
mov
sbb
test
mov
xchg
mov
mov
popa
int3
fists
scas
xchg
stc
ss
and
xchg
adc
shrl
add
movsb
jp
jno
movsb
xlat
and
cmp
test
fidivl
pop
cmp
jae
in
or
int
aam
insl
cmc
scas
sbb
jno
xchg
imul
dec
cmpsl
daa
pop
nop
scas
popf
movsb
enter
push
xor
test
push
out
add
mov
xchg
xor
pop
mov
xchg
test
add
ja
jnp
mov
aas
jb
jl
aas
push
data16
push
es
movsb
movsl
push
adc
es
loop
bound
loope
je
mov
jns
push
cmpsb
cmp
pop
fisttpll
outsb
repz
ret
mov
push
sub
popf
cmp
lods
sahf
sub
jg
stos
mov
cmp
or
lea
xchg
push
stos
pop
dec
sahf
ljmp
sbb
dec
add
add
outsb
in
inc
popf
out
mov
jle
xor
movsl
xor
testb
or
jge
jae
sbb
enter
aaa
pop
sbb
lahf
es
mov
enter
out
mov
rcrl
adc
mov
notl
xchg
push
jge
cmpsb
inc
loope
xchg
cmp
dec
loope
cwtl
loope
dec
and
mov
outsb
xchg
fdivrs
inc
ret
and
jp
jge
mov
filds
mov
out
add
movsl
cli
add
mov
movsl
pushf
push
imul
mov
sahf
test
outsb
sub
bound
cwtl
gs
call
mov
arpl
mov
stos
and
jle
callw
or
add
and
popf
pop
in
xchg
jo
inc
xchg
push
cld
jmp
inc
stc
mov
cmpsl
jg
push
mov
lea
movsl
mov
mov
iret
xor
adc
sbb
test
ljmp
insb
es
stos
add
inc
mov
ss
stc
add
xchg
into
add
dec
in
mov
xor
inc
or
ret
dec
xchg
dec
into
jno
cmpl
dec
fimull
xchg
stos
insb
arpl
gs
lret
push
scas
cli
sbb
pop
jmp
jg
insl
das
fidivrs
mov
popl
aaa
ret
bts
pop
or
jp
int3
jg
stos
xchg
push
shl
add
push
stos
cld
int
iret
and
nop
ret
dec
add
lods
xchg
mov
sarb
mov
dec
insl
pop
je
pcmpgtw
mov
lods
daa
ficoms
mov
xlat
in
cmp
mov
mov
push
cmp
daa
add
js
lret
dec
jge
mov
and
jg
dec
mov
ds
arpl
pop
push
lcall
test
xlat
mov
push
pop
fprem
popf
loop
xor
jnp
movsl
hlt
pop
dec
addr16
mov
or
mov
sbb
fnstcw
xchg
mov
pop
ja
aad
adc
or
hlt
popl
fmuls
mov
pusha
leave
stos
mov
push
pop
cwtl
jle
bound
push
lods
repnz
sbb
out
pop
jge
lds
push
dec
dec
xor
xchg
outsb
fists
xor
sub
jnp
data16
nop
sub
cld
push
jmp
enter
aas
andb
mov
push
or
pop
dec
add
or
out
xlat
loop
call
das
lret
sti
dec
mov
repz
lods
icebp
lea
push
and
aad
int
xchg
int3
dec
push
nop
jb
add
add
push
daa
ss
pop
jl
je
sub
xor
jae
scas
adc
push
sub
sub
test
or
jo
dec
adc
mov
stc
loope
sti
add
add
jp
iret
pop
xchg
ljmp
cwtl
and
mov
mov
xor
pop
inc
aaa
pop
push
jnp
scas
in
fwait
adcb
into
xchg
jo
add
fxch
mov
test
out
out
jle
push
incl
das
lea
fcompl
push
lret
into
mov
shl
leave
mov
or
movsl
sbb
daa
cwtl
xchg
inc
cmp
fcoms
cld
sub
gs
dec
cltd
push
pop
pop
movsl
jecxz
aaa
loope
xchg
dec
leave
sbb
lods
andl
scas
cmp
push
clc
inc
mov
std
out
bswap
jb
dec
ret
pop
adc
dec
mov
aam
sbb
sub
xchg
lret
xchg
fs
xor
push
xlat
inc
lea
and
pop
jmp
cmp
sti
jl
enter
test
imul
mov
mov
sub
stos
mov
test
mov
aad
out
shrb
dec
adc
mov
mov
aaa
jb
mov
inc
cltd
insb
and
pop
fsts
lds
ret
popa
cmp
pop
ljmp
adc
adc
push
jbe
jmp
lahf
cmpsl
dec
cmp
push
out
or
es
adc
inc
adc
pop
repnz
jbe
lds
push
mov
fisubrs
xlat
rorl
pop
xor
jno
lock
pusha
in
pop
jo
popf
aad
dec
mov
addr16
pop
jl
ret
adc
fs
push
call
pop
mov
enter
push
iret
bnd
out
cli
rcrb
pop
adc
test
push
and
ret
arpl
lcall
loopne
cmp
ds
daa
jg
mov
add
into
aam
frstor
push
sbb
rcrb
xchg
mov
sbbl
mov
or
or
popf
pop
fcmovu
add
movsl
mov
popf
psrld
push
cmpsb
push
outsl
mov
std
mov
bound
xchg
scas
sub
xor
aam
dec
out
inc
aas
pop
xchg
pop
je
push
test
dec
dec
imulb
ljmp
lock
ja
sub
shll
or
scas
outsb
mov
mov
mov
pop
loopne
and
sub
cmc
mov
outsl
ss
cmp
adc
test
push
imul
xchg
bound
jge
bound
cwtl
jbe
jno
in
push
loop
push
insl
xchg
inc
fdivrl
daa
push
movb
sub
dec
adc
sti
xorl
mov
or
testl
in
xor
out
mov
adcl
fistps
sti
mov
roll
out
not
dec
pop
dec
ljmp
sub
neg
pop
adc
dec
stc
idiv
or
out
shrl
push
fmull
imul
mov
cmp
daa
dec
mov
jno
imul
or
xor
pop
div
mov
adc
cli
out
inc
xchg
scas
lods
jle
fdiv
and
cmp
imul
testl
mov
xlat
daa
jo
xor
push
sbb
sbb
pop
cwtl
or
aam
pop
or
int
icebp
lds
add
inc
sub
sub
push
dec
xchg
xchg
loopne
add
popf
or
xchg
sub
pop
adc
mov
adc
fisubl
jl
xor
arpl
sbbb
loop
adc
mov
outsb
push
jge,pn
sub
sub
inc
inc
push
and
aam
in
dec
mov
ljmp
cwtl
enter
jp
xor
dec
call
mov
jmp
jl
sbb
mov
ljmp
mov
daa
jl
mov
dec
adc
orl
push
fdivs
testl
inc
adc
mov
add
imul
push
mov
or
clc
push
adc
test
imul
cltd
loope
pop
pop
movsl
or
push
cmc
and
mov
xchg
xlat
add
es
lcall
test
shll
sub
dec
lcall
fadd
inc
imul
xchg
into
xor
jg
xchg
push
xchg
in
pusha
jle
test
push
lret
lds
pop
rcll
push
xchg
lea
test
sbb
mov
push
int3
sbb
push
push
daa
sbb
xchg
add
rorl
mov
jl
inc
pushf
bound
inc
cld
pop
jbe
push
mov
sbb
add
pusha
dec
adc
cmp
mov
or
es
scas
fildll
or
inc
mov
xchg
test
data16
cmc
cltd
inc
int
fdivs
jmp
cltd
mov
cmpsb
push
pop
sbb
imul
test
into
and
jl
mov
lea
push
add
rol
xchg
sub
dec
das
mov
sub
bswap
and
loopne
xchg
or
mov
adc
mov
ljmp
and
fistpll
push
cltd
insl
insl
mov
mov
ja
sbb
sub
dec
jmp
mov
ljmp
mov
push
inc
stc
and
pushf
sub
xchg
add
out
cld
push
add
in
xchg
dec
movsl
add
in
call
adc
and
ret
dec
das
push
ret
sub
nop
movsb
mov
fcmovnbe
fs
fs
insb
jle
ja
xor
push
inc
dec
push
jnp
mov
cld
dec
mov
fiadds
outsl
dec
sbb
jp
sarb
imul
aad
mov
jnp
loope
loop
sbb
inc
inc
xchg
xchg
add
add
addb
xor
push
dec
xor
js
je
mov
xor
popf
mov
xchg
scas
xor
es
cld
xor
aas
sub
addb
pop
mov
jmp
jno
cmp
outsb
fucomi
test
popf
add
xor
mov
loop
xchg
test
push
lret
imul
push
fldl
push
jne
jmp
xchg
sub
ret
cmp
dec
dec
aas
test
hlt
scas
int3
or
inc
fnop
incb
jmp
sub
push
xor
push
dec
ja
mov
cwtl
inc
pop
cmp
add
js
sub
or
jae
mov
mov
adc
jb
imul
loop
mov
sub
or
iret
and
jno
mov
pop
push
lea
lds
pop
push
pusha
pop
xchg
xchg
stos
mov
jmp
mov
inc
loop
scas
jb
aas
pop
lret
mov
jmp
inc
cltd
popf
sub
and
pop
dec
ret
pop
push
lcall
pop
mov
ret
stos
jecxz
and
mov
data16
aad
sub
cmp
xor
mov
enter
mov
xor
add
mov
or
sbbl
mov
push
xchg
fcmovbe
pop
lods
add
lea
subb
add
pop
or
cmpl
cmp
jae
ds
jge
test
call
in
rorl
mov
push
mov
mov
push
xchg
inc
fcoml
xchg
pop
cltd
inc
mov
test
mov
or
repz
shl
sbb
push
enter
jp
call
nop
fisubl
cmp
adc
sahf
in
mov
add
dec
and
add
es
je
int
mov
fsubr
cs
inc
adc
out
and
xchg
nop
xchg
push
fildl
jnp
test
scas
sub
inc
leave
sub
call
mov
mov
sti
mov
and
dec
mov
push
out
mov
jmp
scas
insb
push
insl
adc
or
jmp
and
idivb
mov
and
std
jns
push
mov
fsubrs
jge
dec
call
cmp
pop
in
dec
std
js
push
mov
fsubrs
jge
dec
call
cmp
pop
in
enter
push
mov
fsubrs
jge
dec
call
cmp
pop
in
dec
std
js
push
mov
fsubrs
xlat
push
dec
call
ret
fsub
xchg
xor
and
adc
add
sbb
or
je
inc
push
mov
movsb
jle
outsb
test
hlt
push
popa
ds
xor
and
adc
add
je
fs
mov
les
outsb
test
hlt
push
ds
les
dec
and
adc
add
je
fs
push
push
inc
pop
sbb
movsb
sbb
je
dec
cmpsb
pop
les
jnp
push
adc
mov
lods
jno
in
lds
dec
outsl
jnp
pop
push
shlb
movsb
jb
sti
into
divl
xchg
push
sub
pop
mov
adcl
mov
ss
jecxz
push
lret
test
dec
mov
adcl
int
jno
fwait
and
add
jne
fs
outsl
sbb
aam
sahf
or
sub
rorl
aam
fildl
xchg
cs
popa
jne
jno
inc
out
sahf
dec
push
repz
sbb
pop
dec
pop
mov
dec
std
adc
jbe
cmp
push
movsb
cmpsb
shll
fwait
loope
and
ds
into
and
adc
add
je
fs
mov
movsb
cmpsb
xchg
jo
jle
adc
ds
lods
lods
pop
mov
insl
lock
lods
sbb
adc
rorl
shrb
cld
cmpps
xchg
dec
imul
idivl
add
and
inc
data16
psrlw
cmc
add
insl
xchg
imul
jge
ja
jl
popa
mov
mov
movsb
jle
outsb
test
hlt
push
in
aam
fidivs
and
adc
add
je
fs
mov
movsb
jle
outsb
test
hlt
push
in
aam
fidivs
insl
push
cmpsb
mov
sarb
lret
push
cli
pop
or
popf
loope
mov
out
daa
push
ficoms
dec
in
push
aam
lahf
add
lgs
sub
pop
ljmp
inc
dec
dec
push
js
mov
out
jmp
ljmp
jmp
int
mov
popa
inc
enter
mov
push
or
pop
int
or
pop
xchg
cli
inc
push
push
push
hlt
jg
pop
mov
xchg
xlat
gs
les
sti
stos
call
mov
mov
xor
call
aaa
ja
pushw
mov
test
cwtl
repnz
mov
dec
es
inc
std
mov
leave
fcmovbe
push
insl
cwtl
jmp
pop
jb
push
xchg
or
les
sbb
lods
leave
jle
adc
inc
inc
or
mov
sbb
and
add
stos
dec
mov
pop
xor
in
neg
test
cld
sub
lcall
pop
jmp
mov
or
leave
xchg
adc
or
and
test
scas
addr16
cmp
in
lret
iret
int
ret
or
mov
mov
jne
lods
fldt
xchg
mov
push
cmc
lret
dec
xor
push
test
aam
xchg
xchg
pop
dec
cltd
and
and
and
lret
movsb
jnp
pushf
hlt
xor
xor
xchg
loope
das
jae
stos
or
push
or
mov
arpl
adc
mov
xchg
mov
pop
add
add
ds
sub
cmp
iret
dec
and
mov
outsl
call
pop
imul
lret
lretw
add
sbb
dec
cltd
sub
jp
imul
sbb
iret
out
push
rcll
and
es
iret
cs
sahf
add
stc
dec
xchg
gs
cmpsl
mov
cmpsb
mov
sarl
shrb
sbb
enter
jg
pop
inc
pushf
ss
xchg
mov
imul
push
mov
dec
popa
pop
jge
xchg
pop
stos
out
into
xchg
mov
out
jl
mov
in
outsl
mov
mov
mov
js
jmp
pop
pushf
stos
add
stos
or
jmp
mov
movsb
imul
mov
mov
imul
stos
rorb
sahf
or
mov
aas
xchg
nop
sub
sbb
dec
sub
pusha
movb
hlt
sbb
mov
je
and
xor
imul
loopne
mov
movsb
addr16
daa
pop
dec
jns
fistl
jb
xchg
ljmp
rol
xchg
pushf
cmc
add
call
pop
stos
add
xchg
mov
or
and
pop
les
in
sti
in
push
or
scas
mov
mov
xchg
push
sarb
lcall
pop
enter
pushf
xor
testl
mov
scas
jb
shr
pop
push
push
mov
lock
xchg
in
or
xchg
xor
cmc
fucomip
sbb
and
lds
mov
scas
into
sbb
inc
inc
inc
pop
outsl
cld
add
mov
mov
xchg
inc
daa
fistpl
adc
xor
pop
push
test
inc
dec
mov
nop
shrb
les
sub
shlb
sbb
ds
dec
aas
mov
in
ss
jge
or
outsl
mov
aam
jns
int3
inc
arpl
aad
hlt
or
lods
cmp
sub
nop
cmp
push
ret
insl
icebp
xor
sub
and
imul
pushf
xchg
dec
fstps
mov
scas
in
leave
adc
popf
sbb
cmpsl
add
les
bound
dec
enter
sub
pushf
cmpl
push
push
fdivrs
mov
and
mov
mov
push
push
loop
mov
ljmp
push
pusha
scas
inc
cli
std
add
mov
or
dec
jp
mov
mov
xlat
fistpll
sbb
cli
xchg
scas
adc
loope
mov
in
inc
push
es
fidivrs
adc
lret
insl
repz
xchg
mov
aam
test
movsl
mov
xor
sbb
push
jle
pop
mov
dec
pop
loope
mov
cmp
xor
adc
inc
mov
mov
pop
in
subl
pop
cmp
out
ss
scas
rcl
xchg
sbb
jmp
mov
inc
sub
mov
cli
lods
xor
ret
sbb
pop
xchg
loope
call
mov
gs
sbb
push
mov
imull
std
sbb
pop
push
aaa
bound
sbb
cmp
and
aaa
and
sub
negb
mov
jle
pop
inc
movsl
xor
mov
push
and
ss
mov
cmp
sbb
push
adc
mov
mov
leave
mov
sub
aas
mov
cmpsb
test
xor
outsl
stos
mov
ficompl
int
or
leave
imul
inc
loopne
xchg
push
jmp
jmp
and
fcmovb
mov
mov
xor
pop
xchg
jge
aad
dec
jbe
ss
dec
in
imul
cmp
pop
in
inc
inc
ljmp
adc
mov
pop
mov
sbb
pop
sub
shlb
je
xorb
rorb
test
jecxz
add
mov
push
lret
das
loopne
mov
subb
jo
jno
adc
push
inc
inc
shr
xchg
inc
lds
and
xchg
xchg
jb
test
aas
pop
sub
xlat
in
and
dec
addr16
push
fists
in
jge
cmp
sbb
push
inc
jle
pop
dec
xor
leave
dec
sbb
sarb
cmc
loop
push
mov
jl
push
fwait
sbb
andb
cli
push
fistpl
out
adc
icebp
inc
es
jno
jp
push
ljmp
repz
add
jns
lret
iret
and
out
imul
push
sub
jecxz
int3
pushf
jae
mov
inc
hlt
dec
pop
push
and
dec
sub
insb
sbb
cs
sub
push
push
icebp
jmp
mov
ret
test
xor
movsb
pop
ret
imulb
js
repz
add
fsubl
xor
and
inc
add
dec
inc
cltd
lea
add
mov
xchg
data16
mov
xchg
mov
outsl
lret
lds
inc
sbb
pop
fnsave
lret
aaa
sbb
push
dec
mov
lret
pop
lcall
pop
cltd
sbb
sub
sbbl
int
push
push
insl
int3
xchg
movsb
mov
push
mov
cmpsb
pop
idivb
push
outsb
sub
outsb
sub
add
daa
shrb
pusha
ja
cmp
addb
lret
mov
out
lods
lds
in
cld
sbb
fsts
pop
arpl
mov
mov
cmpb
cmp
dec
pushf
push
inc
frstor
pusha
loopne
insb
sbb
clc
add
in
data16
test
out
test
jb
sysret
aas
in
cmp
xchg
add
mov
add
push
in
add
mov
and
cltd
stc
push
test
push
jl
fnstenv
in
xchg
int
addr16
sub
das
push
subb
jmp
adc
test
dec
addr16
mov
jle
mov
mov
gs
loope
dec
gs
adc
ljmp
pop
sahf
mov
mov
push
dec
inc
ret
lahf
xchg
pop
out
es
xor
aad
lret
ja
fisubrs
andl
roll
add
movsb
pop
pushf
cmp
pop
lahf
xchg
inc
sbb
movsl
push
lcall
cmp
mov
push
mov
mov
repnz
push
cwtl
pop
les
and
test
ljmp
lcall
mov
or
adc
or
sbb
dec
mov
fdivrl
mov
es
dec
dec
loop
inc
mov
jmp
dec
xor
lret
div
push
pushf
pop
mov
cwtl
sub
out
cltd
cmp
je
mov
dec
jmp
inc
jae
adc
or
sahf
mov
cmp
sub
push
inc
es
mov
dec
adc
ret
sbb
mov
in
or
jo
push
je
int
test
icebp
loopne
popf
adc
jg
push
xchg
pop
fsubl
adc
ss
outsl
pop
incb
and
movl
sarb
cmp
cmpb
icebp
ret
pop
not
out
dec
imul
stos
ss
sbb
mov
daa
mov
cmpsl
inc
scas
adc
and
push
sbb
test
xchg
hlt
aas
push
or
add
sbb
sub
and
mov
mov
shrl
mov
jns
popf
jl
push
lds
movsb
jne
imul
es
arpl
jb
sub
ljmp
es
aam
or
sbb
es
mov
mov
stos
arpl
jl
aam
ffreep
std
push
movsl
jbe
leave
orb
orl
mov
mov
push
cmp
aam
inc
mov
andl
fcomps
xchg
mov
xchg
jnp
lret
or
mov
cmp
popf
mov
fistpll
jae
add
fisttpll
xor
out
sbb
dec
popf
cli
jb
rcll
fistpll
daa
and
rolb
or
or
xor
mov
pop
xor
or
sarl
int
mov
dec
xor
js
xor
inc
addb
lret
aam
add
xor
mov
mov
ret
dec
cmp
loop
sub
stos
pusha
sub
sarl
push
imul
dec
jle
mov
mov
pop
sub
enter
movb
inc
fimuls
sbb
or
jno
sbb
imul
leave
push
jb
jecxz
dec
ljmp
mov
rolb
mov
inc
xchg
jo
add
push
sbb
add
push
sub
mov
mov
lods
xchg
pop
inc
es
fstpt
int
mov
repz
rolb
add
outsl
out
add
mov
xchg
adc
push
loop
ds
scas
xor
cli
fisubrs
out
test
sub
sti
rclb
icebp
insl
sbbl
ret
push
sbb
jae
call
sbb
sub
sti
add
add
repz
add
dec
mov
dec
adc
stos
out
pop
jmp
inc
inc
xchg
dec
mov
ss
jg
cld
loop
cld
push
mov
in
mov
loope
cmp
test
lods
cmp
pop
test
ss
xor
jbe
insl
in
sub
dec
fdivrs
stos
adc
outsb
mov
jg
sbb
repz
aad
and
movsl
orb
fmulp
shrl
mov
sub
scas
aas
cmp
adc
jmp
push
xlat
cli
loope
ss
outsl
fcomp
imul
out
ds
mov
adc
xor
mov
jp
in
xchg
mov
pop
aam
jg
push
mov
push
mov
mov
idivl
add
mov
pop
and
fisttps
push
jne
xchg
pop
sbb
jne
sbbl
push
shrl
sub
push
or
mov
inc
stos
insl
add
ds
loopne
mov
out
adc
inc
lea
pop
mov
sbbl
jmp
lock
fs
jo
stos
sbb
dec
cmp
mov
sub
scas
int
in
jg
cmp
into
jmp
out
jecxz
out
lahf
call
or
or
dec
fsubr
push
inc
jge
sub
lock
mov
sub
adc
or
mov
xor
js
lahf
data16
push
pop
iret
mov
js
push
push
imul
or
rorb
jbe
pop
leave
loope
ss
inc
enter
ljmp
arpl
mov
mov
mov
shrb
add
xchg
cmp
dec
loopne
cwtl
ret
bound
lea
pop
mov
or
mov
shrb
jbe
jmp
imul
cmpl
push
stc
jp
sub
test
cmpsl
aam
jl
mov
ja
mov
mov
imul
xchg
cli
aaa
lods
mov
mov
popf
subl
dec
mov
adc
or
dec
mov
mov
and
cmpsl
cmc
pop
int3
cmc
mov
popa
mov
fldenv
frstor
dec
xchg
jnp
sbb
fidivrs
dec
shrl
dec
cwtl
ja
subl
jnp
std
mov
fbstp
cs
push
jp
jno
and
mov
cwtl
je
loopne
mov
sub
xor
sub
jnp
icebp
das
cs
rorl
mov
roll
mov
push
xchg
xor
cmp
dec
jge
pop
lock
adc
xchg
imul
push
and
mov
out
pop
out
repnz
sub
inc
mov
inc
or
cmp
addr16
mov
jbe
hlt
dec
clc
cmp
jmp
sarb
push
shll
push
insb
sarl
roll
daa
add
in
push
rol
cmpl
mov
psubusw
jle
mov
mov
ret
in
int
sbb
out
dec
add
filds
jo
fisttpl
dec
mov
adc
push
mov
xchg
addb
loopne
in
andps
gs
jp
jmp
int
ficompl
xchg
cmpsl
and
hlt
cltd
out
cmpsl
int3
jmp
pop
mov
cmc
hlt
xchg
pop
ljmp
lods
incl
gs
lahf
jb
adc
repz
and
ds
in
and
adc
jge
xor
in
or
mov
push
test
mull
sub
inc
mov
mov
xchg
lcall
sbb
jno
xor
stos
add
xchg
cld
pop
add
or
addr16
jo
loop
inc
inc
pop
sbb
js
cwtl
sub
nop
test
negb
js
lods
lahf
out
pusha
cmp
pop
jno
dec
dec
loop
dec
push
xchg
mov
add
jae
jmp
push
cmp
negb
rolb
repz
dec
and
inc
dec
repnz
int3
inc
test
jge
or
or
push
mov
or
sti
dec
outsl
shlb
mov
push
in
pop
insl
pushl
int3
or
xchg
mov
and
rolb
int3
testb
fdivp
push
lea
pusha
hlt
push
xchg
lahf
mov
hlt
xlat
cwtl
fs
lods
out
mov
test
movsb
and
shrb
mov
sbb
dec
jns
mov
and
repz
sub
sub
addr16
push
xchg
daa
repnz
jge
aad
dec
sub
xchg
pop
lret
scas
gs
testl
lods
movsl
fisubrl
mov
cmp
mov
int
mov
sub
out
roll
dec
xor
jge
pop
out
mov
stos
xor
popl
or
rclb
pop
push
imul
xor
loopne
adc
test
and
push
cld
pushf
sub
mov
fisttpl
pop
pop
dec
mov
mov
bnd
lret
or
in
push
cmp
xchg
adc
dec
mov
xchg
cmc
mov
and
xor
std
in
popf
fs
xchg
inc
pop
aam
push
lret
lock
push
scas
fiaddl
je
icebp
mov
aam
xor
xor
pop
pop
cmp
out
mov
imul
test
sub
inc
je
lods
dec
pop
jbe
aas
rcl
xor
test
cs
cmp
or
adc
inc
lock
subb
xchg
add
xchg
mov
movsl
dec
push
xchg
pusha
mov
or
std
icebp
hlt
xor
fsubl
or
pop
mov
test
mov
xchg
or
ds
jo
je
rorl
dec
push
cmpl
aas
insl
adcb
jmp
les
adcb
push
cmp
scas
sub
jmp
sub
sub
and
cmp
repz
in
or
subb
xor
lret
cmp
push
out
out
insb
bound
xor
test
mov
xchg
push
and
mov
inc
push
shrb
inc
sbb
xchg
xchg
pop
inc
pop
or
int3
sub
out
je
sbb
adc
adc
bound
add
std
jl
lock
or
filds
scas
loopne
pop
xchg
lods
data16
ret
xchg
stc
out
popa
xchg
data16
js
les
repz
jp
push
mov
gs
mov
push
cwtl
clc
add
notb
adc
mov
inc
addr16
mov
addr16
jno
mov
bt
sub
adcl
stc
cmp
lods
xchg
ljmp
gs
and
hlt
sub
sahf
mov
hlt
push
in
sub
mov
jecxz
and
jp
push
xchg
loopne
mov
movsl
test
or
mov
imul
push
into
fxch
adc
test
hlt
orl
add
cmpsb
sbb
inc
stc
ljmp
xchg
pop
movsb
xchg
enter
add
cmp
xor
jg
add
or
jg
imul
push
cmp
ficomps
movaps
cmc
pop
loope
clc
mov
cltd
pop
clc
mov
icebp
lcall
or
sbb
mov
and
xor
shll
cli
inc
xchg
add
adc
aaa
or
fcomps
dec
dec
and
jg
sub
cmpb
xchg
jno
inc
nop
nop
dec
lea
ficompl
xor
fistl
lahf
inc
mulb
mov
stos
and
das
shll
xchg
enter
pop
std
mov
out
fildll
dec
or
adc
push
jne
or
sbb
sahf
push
cmc
aaa
mov
shll
sti
or
pop
jle
push
lahf
jge
scas
xor
sbb
jae
pop
push
dec
gs
push
repnz
iret
fsubl
lret
js
cmpb
jmp
cmp
fistpl
cwtl
pop
ja
das
loop
and
xor
sbb
orl
mov
mov
xchg
mov
in
fwait
cmc
dec
mov
sub
push
cld
pop
std
pushl
arpl
addl
bound
mov
mov
shlb
div
xor
jne
out
push
lock
sbb
insl
mov
or
fdivs
dec
mov
pushf
call
or
imul
into
cmp
xchg
pop
imul
mov
jp
cmpsb
adc
sub
jo
mov
push
mov
jno
sbb
aaa
jo
pop
test
jbe
push
xor
mov
icebp
add
lret
insb
dec
mov
scas
or
adc
pusha
mov
scas
jno
xchg
add
lea
add
hlt
fldenv
ret
mov
in
mov
pop
mov
fdivl
and
jnp
jne
fwait
mull
or
pop
add
outsl
imul
pop
push
jl
lret
ret
ss
mov
xchg
test
xchg
push
or
lret
gs
popa
mov
pop
adc
mov
mov
push
pop
mov
dec
ret
mov
lods
pop
hlt
mov
push
sub
inc
and
mov
inc
adc
xor
sarb
dec
dec
lods
lods
into
test
xor
mov
popa
rolb
dec
iret
jo
lret
testl
or
cltd
xlat
cmp
in
repnz
repnz
ljmp
leave
pop
adc
dec
mov
mov
inc
mov
jl
nop
aam
xchg
or
xchg
sub
imul
pop
adc
mov
mov
xchg
aaa
mov
mov
stc
mov
xchg
sbb
lret
hlt
repz
movsb
sbb
shll
xor
inc
mov
xlat
pop
mov
xchg
int
int3
movsl
idivl
inc
jb
rol
icebp
js
sbb
call
mov
loope
out
enter
test
lahf
dec
shrl
mov
leave
enter
shll
mov
es
testl
jno
jo
xor
pushf
cmp
jae
xchg
sub
sbb
lods
fistps
aas
rcl
sub
adc
add
je
fs
mov
movsb
jle
outsb
test
hlt
push
in
aam
fidivs
and
adc
add
je
fs
mov
movsb
jle
outsb
test
hlt
push
in
aam
fidivs
add
je
in
push
scas
inc
pop
xor
movsb
ja
push
push
hlt
pop
in
aam
xor
and
adc
add
je
fs
mov
push
aam
outsb
repz
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fisubs
xchg
jge
mov
mov
or
add
add
add
or
add
add
add
imul
pop
add
add
add
add
add
mov
lret
add
ljmp
add
jae
outsb
add
add
js
stc
add
lret
add
add
add
outsb
add
add
add
add
lret
add
add
add
add
add
in
dec
add
add
add
clc
add
add
add
adc
add
add
dec
add
add
push
add
add
add
add
mov
jne
lret
add
add
add
add
add
add
and
mov
add
add
add
dec
add
add
sbb
mov
add
add
add
xchg
rolb
add
add
add
add
add
add
add
add
add
sbb
jno
lret
add
add
xchg
add
add
push
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
js
flds
incb
sub
mov
js
mov
add
insb
add
add
add
and
add
adc
add
add
jo
inc
add
push
add
add
add
rolb
add
add
add
add
add
add
add
add
add
push
add
add
cmp
sbb
add
add
cmp
add
add
add
mov
add
add
add
inc
add
add
add
dec
add
add
inc
add
add
add
add
add
add
push
add
xchg
imul
mov
add
dec
add
outsb
add
mov
movsb
add
str
jl
daa
add
add
add
add
add
add
add
add
push
add
add
add
adc
outsb
add
add
add
loopne
mov
add
ljmp
add
add
add
add
sbb
add
add
testb
add
add
push
inc
add
add
cmpsb
add
add
scas
add
add
lret
add
add
add
inc
add
scas
add
add
add
stos
add
roll
add
add
add
mov
add
inc
add
dec
add
add
add
add
add
add
add
xor
inc
add
pop
add
movb
add
push
roll
add
add
add
add
filds
xor
add
add
add
add
add
add
add
add
add
adc
and
mov
add
add
add
add
dec
add
add
add
ss
add
add
add
add
add
add
add
add
add
mov
add
add
mov
fadds
aam
lock
int
stc
xor
and
mov
and
jo
xor
xchg
jl
or
das
sub
movsl
push
push
out
inc
push
cmp
fsub
sbb
fmuls
mov
or
jnp
sbbl
and
xor
or
js
cmp
clc
pusha
jb
mov
js
or
jl
clc
js
mov
mov
outsl
or
jae
sbb
sarb
sub
sub
xchg
jge
jmp
xchg
inc
xlat
repnz
daa
in
lock
push
sbb
pop
xchg
jb
div
pop
jno
iret
in
data16
es
test
adc
xor
mov
dec
in
fmull
movsl
add
loop
cs
imul
mov
adc
negl
cmpsb
les
testl
push
loope
or
or
pop
pop
jnp
fxtract
cmp
mov
mov
mov
or
xor
push
sbb
and
dec
cmpsl
imul
test
adc
mov
dec
push
in
mov
jno
arpl
mov
xor
or
mov
xor
clc
pop
adc
test
or
out
pop
xor
mov
push
or
mov
bound
daa
xchg
xor
lods
mov
std
pop
ret
movsb
inc
sbb
mov
sub
jmp
adc
push
sbb
test
mov
jno
adc
or
dec
les
scas
in
lock
subb
pop
cmovs
mov
sub
popf
adc
dec
cli
mov
mov
sbb
aaa
add
sub
lods
scas
cltd
test
loope
scas
sub
outsl
movsb
inc
stos
add
es
mov
call
sti
pop
test
and
adc
fadd
les
stos
push
arpl
add
lods
icebp
nop
popa
repnz
js
das
jecxz
out
in
adc
adc
jl
shrb
mov
dec
push
popa
jbe
dec
cmp
mov
ja
mov
roll
movsb
ss
dec
pop
xor
mov
addr16
fnstcw
mov
testl
or
xchg
push
pop
pop
sti
sub
dec
push
inc
sub
decl
ljmp
or
xchg
fists
mov
lods
test
inc
cld
xchg
stos
test
sbb
lret
repnz
fldcw
mov
adc
scas
icebp
into
in
push
nop
xchg
add
cltd
mov
fstl
mov
cmp
pop
enter
add
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
