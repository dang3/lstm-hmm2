call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
lods
jo
adc
cld
push
inc
or
cmp
sub
pop
loopne
sarb
push
pushf
and
fsubl
push
cld
inc
xchg
mov
mov
sub
xor
dec
sarb
mov
lods
outsb
faddl
int3
dec
cld
inc
in
aam
subl
dec
in
fwait
or
pop
pop
out
insb
lds
aam
lods
je
pusha
leave
mov
addr16
xchg
jns
cmc
or
pop
aam
les
fmul
faddl
loopne
sub
loopne
int
inc
push
jl
subps
into
pushf
andl
and
jae
out
mov
jl
dec
movsl
dec
sbb
cld
aam
cmc
xchg
in
sti
jg
int
xchg
inc
adc
mov
loopne
shll
insl
iret
call
popf
and
lret
int3
nop
jecxz
inc
nop
ret
lds
mov
loopne
sub
iret
sbb
in
fisttpll
test
sbb
je
jge
mov
sarb
imul
xchg
fcompl
int3
push
cld
out
jbe
cmp
cmp
sub
pop
ljmp
cwtl
push
int
mov
push
movsl
and
inc
mov
cmc
pop
in
sbbb
sub
stc
inc
jmp
sbb
adc
jne
outsl
clc
dec
mov
dec
mov
fmuls
into
push
leave
and
pusha
int3
push
cld
inc
in
mov
mov
sub
pop
loopne
sarb
xor
lods
jo
pusha
int3
push
cld
inc
in
mov
mov
sub
pop
loopne
sarb
xor
outsb
mov
jae
scas
fprem1
push
xchg
repz
dec
insl
addb
adc
add
data16
pop
lods
cltd
lock
cmp
popa
fsub
leave
xchg
mov
xor
nop
shlb
sahf
notl
xor
mov
jae
cwtl
push
test
imul
pop
sar
or
sbb
inc
push
xchg
into
pop
rcr
sbb
in
adc
sti
call
jo
lahf
out
push
jno
testl
mov
test
aam
fs
int3
jo
cli
leave
pop
das
push
dec
movsl
lods
xchg
movsb
dec
lods
fiaddl
adc
rolb
mov
aad
cmc
jne
out
sbb
push
frstor
mov
mov
mov
xchg
test
bnd
pop
cmp
add
inc
push
pop
inc
push
or
adc
jp
sub
push
sti
dec
jb
jb
inc
xorl
mov
call
pop
xchg
mov
cmp
icebp
add
sbb
push
ffree
fs
inc
push
push
adc
xchg
add
sub
sarl
jno
mov
xor
or
aam
push
cmp
mov
mov
movsl
pop
es
jnp
fdivrl
enter
stos
enter
pop
nop
call
lret
adc
pop
sbb
iret
sti
mov
mov
fistpl
test
stos
and
adc
dec
sbb
xor
out
or
mov
jg
sub
push
out
jo
mov
addr16
ss
icebp
xchg
jl
dec
mov
out
flds
ret
frstor
and
xor
mov
pop
dec
add
add
fadds
mov
mov
aam
mov
adc
and
push
mov
push
or
or
stos
dec
jecxz
imul
jne
in
jns
dec
lret
and
adc
cmp
xchg
addl
push
aas
mov
mov
data16
cwtl
pop
mul
ret
into
jecxz
int
into
mov
das
pop
adc
xor
loopne
lock
aad
push
cmc
mov
je
adc
jb
add
sbbl
ret
sub
xlat
jne
jp
aad
fstl
insl
push
int3
addr16
sub
add
sti
or
mov
and
mov
scas
and
rcrb
test
adcl
pop
lret
jle
in
jge
stos
lahf
inc
adc
fidivl
cmp
pop
jl
sub
mov
test
popf
and
pop
inc
pop
push
notl
sbb
adc
push
pushf
data16
cs
test
adc
int3
adc
jge
xor
fcoml
cmc
mov
repnz
and
push
roll
enter
push
cmp
outsl
lahf
ret
inc
sbb
and
inc
out
aad
repnz
fistl
add
dec
iret
loop
dec
scas
scas
js
fisubrl
jne
adc
or
fcomip
fisubl
stos
sub
loopne
into
scas
data16
pop
adc
sbb
push
xlat
pop
out
adc
mov
mov
out
in
jne
mov
enter
daa
pop
adc
das
xchg
push
jne
outsb
dec
fdivr
add
xor
pop
dec
imul
mov
jmp
xchg
jno
jl
imul
stos
and
jge
mov
clc
inc
out
in
sahf
push
aad
or
inc
into
es
mov
adc
inc
or
pop
mov
xchg
jecxz
adc
sub
jmp
jae
or
jne
dec
mov
adc
and
arpl
push
adc
mov
and
xchg
in
loope
fisubl
icebp
sub
or
int
dec
or
xchg
out
and
mov
sarb
sbb
outsb
mov
into
xor
cmp
hlt
push
sbb
sub
test
jo
mov
push
cld
xchg
push
jp
fildl
sarb
ljmp
dec
mov
or
outsb
mov
cltd
or
adc
sub
push
stos
mov
pop
push
push
out
fsubr
fwait
push
pop
lahf
stos
out
lea
dec
xchg
cmpsb
mov
hlt
in
shrb
outsb
inc
or
mov
push
scas
jno
loopne
dec
xchg
or
xor
fldcw
xchg
out
mov
or
push
xor
add
test
jnp
pop
sbb
pusha
fisttps
push
mov
and
fs
cli
adc
sti
lahf
popf
xlat
push
xlat
ja
push
push
nop
in
xor
xorl
jecxz
push
push
cmp
xchg
push
jle
push
and
rcl
jne
inc
dec
xchg
sub
push
cmp
lds
stos
xchg
pop
hlt
push
pop
lahf
sahf
and
outsl
push
int
cmpsb
dec
scas
fisubrl
call
push
xchg
pushf
dec
mov
jo
mov
cmc
pop
mov
js
test
jge
mov
jecxz
mov
push
cltd
dec
add
cltd
insb
shl
roll
mov
mov
lods
xchg
mov
repz
inc
ss
imul
outsb
xchg
sbb
pushf
je
jl
loopne
movsl
add
int
cmc
xchg
cmp
add
lock
xchg
cmp
test
movsl
xorl
adc
mov
jp
jge
or
movlhps
mov
jle
rolb
cmp
pop
pop
loopne
nop
andb
mov
out
dec
inc
pop
inc
popf
insl
mov
sbb
pop
cmp
aad
mov
leave
fisttps
lock
jo
xlat
sarb
sub
pop
jno
gs
out
data16
mov
sub
pop
sbb
mov
mov
jg
lahf
decl
test
bound
jo
or
arpl
js
push
and
jb
sub
stos
test
mov
sbb
pop
push
pop
data16
push
mov
xchg
pop
add
mov
fbstp
sbb
mov
jo
negb
test
mov
iret
pop
xor
gs
nop
mov
loop
js
lods
scas
outsb
nop
push
aam
sahf
les
shlb
daa
dec
jbe
lcall
mov
pop
cmp
fisubs
popa
mov
mov
test
push
sahf
ja
xlat
mov
stos
xchg
insb
fcoms
bound
xor
push
adc
push
mov
cs
jnp
aam
ficoml
ss
mov
cmpl
mov
mov
pop
xor
mov
loop
dec
fmuls
shll
cmpsb
pop
push
xchg
sub
lds
pop
mov
int
jnp
and
stc
pop
sub
test
aas
cltd
jo
xor
popa
add
mov
lret
ss
into
ret
sbb
dec
imul
push
jmp
inc
sub
xor
jnp
mov
push
sbb
xchg
sub
imul
push
push
dec
and
jae
add
pop
mov
iret
sub
test
loope
mov
notb
popa
add
cmp
add
pop
mov
dec
es
mov
push
enter
out
lahf
outsl
int
ljmp
push
jbe
mov
mov
mov
mov
sub
mov
clc
insl
fs
testl
xchg
pop
inc
adc
add
add
lock
call
xchg
js
push
scas
mov
out
orl
pusha
xor
pusha
pop
mov
mov
inc
cmp
cwtl
push
xor
fisubs
and
insl
sub
rol
pusha
cmp
or
jae
push
mov
test
jmp
sub
inc
cmp
xchg
and
mov
add
jne
pop
lods
cli
or
dec
les
sub
in
in
pop
fimuls
adc
pop
in
js
mov
lds
inc
aam
pop
lea
sbb
enter
push
jbe
add
stos
inc
jmp
pop
mov
push
and
dec
pop
mov
repz
sub
mov
inc
xor
mov
js
mov
repnz
loope
mov
jae
mov
sub
cmp
cmp
lret
pop
rorl
sbb
std
push
xlat
inc
test
repz
aas
filds
mov
sbb
sub
mov
cltd
js
adc
leave
cmp
shlb
test
aas
jno
sarl
mov
xchg
ss
hlt
aam
lahf
iret
jbe
mov
bound
iret
bound
ret
iret
imull
enter
jne
xor
sbb
push
dec
cmc
sbb
mov
cs
mov
push
stc
pop
arpl
sub
xchg
lock
mov
inc
cld
cmc
mov
popf
dec
and
es
adc
add
mov
or
sbb
lods
in
sbb
xor
bound
cmp
pop
lock
xchg
test
ljmp
cltd
inc
pop
hlt
lret
cltd
adc
dec
push
sbb
push
xlat
and
in
mov
popf
dec
mov
and
push
inc
ljmp
stos
hlt
push
dec
mov
push
cmp
sbb
mov
adc
enter
mov
into
sub
adc
push
cmc
and
mov
mov
xchg
jmp
imul
mov
dec
adc
repz
fisttps
mov
arpl
push
pop
stos
push
les
xor
ret
pop
push
out
popa
test
pop
stos
inc
adc
sbb
adc
sbb
pop
lea
out
outsb
cli
xchg
in
xchg
int3
or
adc
into
lahf
mov
in
out
push
mov
out
insl
fnsave
stc
and
xor
xor
sbbl
popf
cmp
iret
xor
or
jne,pn
inc
clc
mov
and
dec
jnp
in
fs
or
jp
jno
xor
cmpsl
mov
inc
xor
mov
icebp
sbb
mov
movsl
cwtl
mov
ret
and
cwtl
xchg
cmp
stos
outsl
call
aas
jbe
sub
push
adc
sahf
push
fidivl
cmp
or
sub
je
pop
lock
add
inc
jne
in
xchg
stos
xchg
or
mov
addr16
ret
cs
fistpll
mov
pop
dec
cs
mov
mov
push
xor
js
aad
xchg
mov
jl
out
das
fs
test
fcmovnb
and
jo
push
pop
pop
mov
push
movsb
cwtl
add
mov
jl
adc
or
clc
cmp
lret
cld
inc
mov
outsb
fsubrs
cmpsb
mov
mov
cmp
xor
mov
xchg
sbb
jae
sti
leave
hlt
push
xor
ljmp
push
sub
mov
add
es
mov
adc
mov
xchg
dec
xorl
and
push
lods
push
popf
sbb
sbb
mov
cmp
inc
xor
lea
xor
clc
push
xchg
movsl
sbb
cli
dec
add
divl
mov
lock
into
cmp
mov
adc
shrl
xchg
cmpsb
push
mov
mov
jge
lret
jno
ja
sar
cs
inc
repnz
call
js
lcall
xchg
mov
xchg
idivl
cltd
lods
clc
into
mov
fucomip
push
lcall
pop
push
pop
push
imul
cmp
cmp
leave
add
mov
cwtl
movsb
add
cmp
xchg
lods
lea
pushf
pop
pushl
mov
xchg
mov
test
jbe
pop
push
cwtl
bound
out
mov
test
sub
fcompl
lea
mov
push
push
mov
inc
pushf
cld
pop
cli
test
sbb
imul
fsubl
mov
inc
inc
ret
jmp
mov
dec
dec
mov
inc
fucom
push
inc
lcall
pop
mov
nop
popf
outsl
sub
push
cmpsb
or
data16
shll
sarl
pop
sub
adc
cmp
push
fdiv
push
aad
xchg
in
outsb
out
sub
push
jle
pushf
lret
xchg
or
in
jae
sbb
dec
mov
imul
sbb
adc
daa
movsl
jbe
xchg
or
jne
pop
leave
xor
mov
inc
sahf
add
and
xor
add
les
sub
sbb
mov
in
dec
fdivr
jp
xor
cltd
xchg
fsubs
xchg
popf
dec
out
pop
inc
mov
mov
sbb
xor
jne
and
mov
push
repnz
lods
lea
pop
mov
sub
data16
xor
jb
dec
mov
dec
mov
jp
pop
jns
jnp
pop
mov
jo
sub
jecxz
shl
movsl
pop
sub
and
mov
data16
cmp
adc
and
xor
out
jl
ds
add
inc
loopne
jnp
pop
sar
dec
cmp
stos
lds
jge
lret
aas
hlt
or
rorb
in
roll
fstpt
and
mov
sub
pop
das
or
test
int
cmp
repnz
movlps
adc
jns
sbb
out
add
cmpsl
mov
loopew
test
xor
push
stos
sti
out
addr16
and
mov
xor
cmp
pop
or
and
dec
jl
clc
fildll
push
ret
popf
cld
inc
popa
push
pusha
push
pop
in
pop
imul
out
jae
lcall
inc
imul
repz
pushf
inc
jbe
adc
jnp
push
cmpsl
lods
cmc
cmp
rorl
out
adc
jmp
mov
sti
in
xor
cld
jb
jno
mov
out
push
xchg
or
mov
sbb
repz
cmp
and
dec
stos
stos
cwtl
mov
pop
lea
test
jns
rcrl
push
lods
and
scas
leave
loope
add
lret
mov
dec
inc
add
ret
jmp
pop
mov
mov
mov
mov
insb
xchg
xchg
fldcw
cmpb
dec
insl
insl
xor
mov
clc
xor
cmp
inc
lret
mov
mov
mov
je
adc
dec
push
pop
xor
and
jbe
int3
cli
loope
jle
dec
in
inc
mov
pop
sbb
push
pop
data16
adc
ret
je
and
mov
or
ret
cmp
xchg
xchg
xchg
push
repnz
es
adc
cmp
mov
push
cs
out
pop
mov
dec
es
mov
sub
mov
pusha
mov
sbb
push
out
jbe
mov
add
hlt
ret
jg
sub
popf
push
mov
out
popa
cmp
mov
jns
or
jle
into
xchg
add
mov
mov
stos
xchg
and
pop
pop
lret
jle
lea
dec
in
push
imul
mov
mov
pop
xchg
ljmp
pop
rorl
xor
sbb
mov
test
test
scas
jno
mov
movsb
adcl
lds
sub
inc
or
pop
and
push
push
pop
pop
xlat
in
or
dec
jae
jne
cld
pusha
pop
and
pushf
or
xchg
and
xor
lea
ss
fwait
les
push
xchg
add
push
mov
ljmp
mov
jle
inc
cld
dec
out
dec
out
fiaddl
dec
xor
mov
adc
clc
sbb
push
mov
or
mov
pushf
hlt
mov
jns
sahf
lods
inc
or
js,pt
dec
push
inc
push
pop
ret
in
lods
push
xor
xlat
out
push
ds
and
pop
inc
inc
fwait
or
enter
shl
popf
test
mov
and
add
add
cwtl
daa
sbb
push
jbe
movsl
mov
sub
aam
or
jne
pop
push
lds
cmp
cmc
mov
xor
xor
movsl
lcall
pusha
lahf
clc
iret
outsb
scas
divl
fwait
or
test
and
outsb
jge
movsb
xchg
jb
adc
mov
add
inc
out
mov
fildll
jmp
lods
mov
adc
pop
mov
cltd
cmp
mov
push
inc
jae
scas
fsub
int
push
mov
lahf
xchg
push
push
xlat
cld
rcpps
aam
jp
inc
xchg
sub
addb
dec
mov
in
aas
xor
xchg
inc
dec
xchg
xchg
adc
or
mov
in
push
call
push
xor
lahf
fcmovu
dec
jp
add
ja
cs
and
add
out
cs
jae
xlat
out
push
mov
xor
sbb
pop
push
add
popf
fwait
sub
dec
addl
cmpsb
mov
test
out
insl
adc
xor
fadds
and
ret
movsb
in
mov
out
pushf
or
xchg
loop
xchg
mov
pop
cs
fisttpll
sub
push
loop
fimull
sbb
sub
lods
shl
xor
adc
xchg
mov
ljmp
cmpsb
test
xchg
scas
push
dec
movsb
call
in
pop
ja
pop
cmc
adc
leave
mov
add
pop
mov
jnp
scas
mov
sbb
sub
xchg
mov
adc
fisttps
xchg
jae
push
loopne
sub
rolb
mov
cli
sbb
lret
outsl
movsl
clc
out
ljmp
cmp
cmpsb
fildl
ss
cs
decl
or
pop
lret
push
movsl
adc
imul
adc
mov
cmpsb
jmp
xchg
hlt
loop
dec
scas
cli
mov
out
gs
int
ljmp
sti
popf
cmpsl
shrb
out
and
adc
pushf
pop
ficoml
aam
inc
add
jo
jnp
mov
or
das
clc
pushf
neg
hlt
lret
dec
jmp
jecxz
int3
mov
rclb
movsb
xor
sbb
rorl
push
or
xchg
dec
pusha
fstpl
push
mov
cmpsl
adc
inc
gs
int3
jle
mov
idivb
dec
pop
outsl
repz
cmp
and
incl
xchg
daa
out
scas
fwait
scas
aaa
xchg
mov
jae
nop
pop
xchg
sbb
insb
inc
add
jns
sbb
adc
aam
push
test
imul
icebp
sbb
pop
ret
adc
hlt
mov
fcomps
addr16
shl
mov
ret
lock
jle
jns
mov
pop
insl
loop
mov
push
or
pop
push
pop
pop
js
mov
cltd
outsl
outsb
and
outsl
out
push
pushf
xchg
mov
popf
pop
pop
cld
mov
and
mov
cmp
dec
dec
arpl
aaa
add
adc
cmpsl
or
sbb
ds
sti
inc
stc
sbb
aad
xor
push
xchg
jmp
lahf
jo
pop
cltd
lods
mov
sbb
dec
xchg
movsl
cmp
or
insb
shrl
dec
sub
dec
repz
arpl
and
push
imul
outsb
mov
mov
pop
dec
out
mov
or
xchg
inc
adc
cmp
shll
xor
dec
mov
dec
add
gs
in
sub
jmp
rcll
loopne
decl
in
iret
mov
shl
jmp
inc
push
push
movsl
fcoms
test
mul
bound
scas
and
and
push
jnp
push
psubw
xchg
xchg
popa
mov
cwtl
pop
jns
mov
jae
pop
movsl
lret
mov
mov
xor
bound
pop
xor
xor
add
dec
jb
or
adc
and
icebp
add
mov
pop
mov
test
es
sub
dec
sbb
sub
cmp
lahf
and
inc
fsubrl
stos
jae
sbb
push
stos
or
ljmp
out
xchg
into
out
mov
cmc
in
notl
jl
mov
xor
pop
cli
xchg
loope
sub
cmp
push
sub
dec
iret
xor
inc
sub
cmpsl
insl
mov
lock
push
mov
adc
stos
mov
arpl
pop
fsubl
sub
pop
out
aad
push
sub
jnp
ss
mov
adc
lea
lahf
or
adc
xor
popf
leave
cmp
push
fldl
pop
scas
lret
jno
mov
cltd
pop
jne
mov
andb
insb
xor
aam
and
xchg
fildl
imul
stos
push
cli
cmc
aaa
lods
stos
fwait
sub
sbb
sti
or
jl
sbb
xor
in
mov
arpl
xor
movsb
mov
mov
push
ret
mov
ds
push
xchg
aas
gs
xchg
push
ja
test
mov
push
loopne
stc
test
rolb
sbb
in
sub
lock
cmp
outsb
xor
cmp
gs
into
lret
xchg
out
push
cmpsl
add
popa
dec
push
inc
dec
inc
loopne
adc
test
rcrb
adc
aam
and
addr16
cli
mov
je
call
shll
sbb
popf
mov
mov
push
mov
pusha
int3
push
cld
inc
in
mov
mov
sub
pop
loopne
sarb
xor
lods
jo
pusha
int3
push
cld
inc
in
mov
mov
sub
pop
loopne
sarb
xor
lods
loopne
pusha
int3
push
cld
sub
sbb
or
cmp
sub
pop
lock
sarb
and
jl
dec
mov
jo
push
cld
shr
sbb
cmpsb
cmp
pop
xchg
push
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
sti
lcall
popa
xor
push
adc
fs
out
push
push
inc
mov
mov
mov
xchg
and
hlt
loop
rcl
ret
xor
pusha
adc
add
bound
inc
mov
xchg
mov
ret
ret
aas
and
pusha
add
cmp
aam
mov
enter
in
xor
sub
sub
inc
clc
xchg
mov
jmp
movsb
in
and
or
in
fcmove
adc
fadds
and
sub
mov
int
push
out
stos
jg
xor
xchg
int3
cs
lret
fstl
lcall
lods
xchg
lret
je
movsb
and
add
loope
sub
aam
adc
pop
dec
add
dec
push
loope
daa
popf
add
mov
pop
fstl
loopne
mov
xor
aam
les
into
lret
jne
in
adc
into
bound
leave
lods
lods
iret
inc
and
pop
lret
hlt
sbb
xchg
and
jmp
fildl
and
add
movsl
movsb
inc
push
inc
fs
mov
hlt
repnz
loop
ror
ret
sub
sbb
or
bound
sub
fst
mov
sbbb
xchg
push
push
xor
jbe
jp
or
adc
and
add
xchg
lock
mov
xchg
ret
xor
inc
jae
insl
add
pop
or
push
adc
sti
xchg
loope
xchg
out
repnz
loop
rcl
ret
xor
add
adc
fs
bound
inc
movsb
mov
mov
in
hlt
loop
rcl
ret
xor
add
adc
fs
bound
inc
movsb
mov
jmp
and
fcomps
lods
mov
rolb
cli
mov
fadds
stc
dec
xor
or
adc
iret
into
cmpl
add
push
out
notb
or
adc
dec
pushf
clc
orl
sub
daa
push
lods
das
sub
icebp
add
cmp
xor
or
dec
movsl
fs
cmp
cmp
outsl
in
ret
lret
or
inc
neg
aas
mov
jge
outsl
xchg
stc
fdivrl
inc
les
insb
pop
mov
push
xchg
addr16
mov
mov
inc
sub
xchg
mov
aad
and
js
rol
xchg
lret
pop
fmuls
sbb
icebp
mov
or
dec
pusha
fs
ret
loopne
cmp
stos
xchg
cmpl
sub
daa
aam
repnz
mov
rcrb
push
xor
mov
popa
movsl
frstor
out
lcall
push
xchg
sbb
pusha
xlat
enter
popa
sub
mov
jl
rcl
into
sbb
bound
fs
push
mov
hlt
mov
inc
xchg
cmp
dec
xchg
jle
cmp
popa
sub
pop
aas
lea
gs
mov
insl
jl
ljmp
xor
cmpsl
mov
inc
add
xor
in
enter
daa
std
mov
jnp
pop
mov
jge
imul
mov
sbb
sbb
popf
sbbb
xor
mov
out
filds
out
or
mov
xchg
jne
jp
out
scas
lret
dec
ja
jnp
cld
icebp
rclb
test
je
mov
out
jnp
bound
gs
ret
ret
dec
xchg
pop
outsl
aas
aam
pop
and
gs
fdivl
leave
push
movsl
cmp
dec
mov
push
mull
jne
adc
out
or
nop
sub
xchg
xchg
fnstcw
add
aaa
cli
dec
add
push
roll
inc
mov
jg
xchg
sub
cmp
sbb
ss
test
add
or
loopne
inc
lods
cmpb
in
xlat
je
out
out
sub
jnp
sub
inc
mov
inc
outsl
add
lea
ret
in
cmc
inc
inc
sub
lahf
mov
fwait
scas
cwtl
sarb
mov
insl
sbb
push
test
mov
gs
sahf
repnz
xor
jmp
pop
add
stc
add
push
mov
sub
call
dec
mov
daa
sbb
cmpsl
jno
xlat
mov
mov
cmc
outsl
xor
sbb
aas
data16
popf
pop
jge
call
push
bound
arpl
stos
sub
xlat
or
mov
sbb
lahf
cld
cltd
mov
adc
sub
xchg
rorl
xor
pop
aaa
loopne
fcompl
or
jno
inc
mov
data16
loopne
xor
push
imul
test
js
sti
mov
or
lods
arpl
adc
out
cmp
and
lods
mov
push
ret
pop
jae
lahf
mov
ss
test
mov
push
add
daa
dec
ret
or
aad
and
mov
rorb
push
jno
push
popf
pop
and
inc
xchg
xor
bound
hlt
ss
mov
inc
subb
shrb
outsb
and
xchg
mov
jg
lcall
rorl
icebp
xorb
jl
aam
xor
push
shlb
jge
mov
inc
shrl
mov
dec
push
xchg
jae
dec
arpl
cs
add
jne
and
movb
dec
jae
cmp
jne
or
jo
roll
repnz
insl
imul
into
push
xchg
ret
ja
lcall
cs
and
fsubl
inc
lea
sti
adc
scas
push
das
js
add
dec
aaa
mov
jge
filds
bound
test
cmpsb
jbe
and
sti
addl
jl
pushf
leave
loopne
popa
outsl
pusha
push
mov
shl
push
cld
mov
push
test
popa
pop
std
js
leave
and
pop
fisubs
xor
pop
lock
mov
xor
repz
rorb
mov
out
test
mov
dec
mov
sbb
lods
pop
sub
cmp
add
rorl
int3
stos
xor
sbb
lds
jp
pop
jnp
enter
sti
push
fimuls
test
pop
sbb
pop
mov
cmc
fnstsw
or
sub
pop
sti
call
jmp
mov
xchg
dec
mov
push
sbb
enter
cmp
add
hlt
popf
ret
push
push
sahf
insb
ja
push
add
xchg
pop
lds
unpckhps
lock
add
jge
frstor
or
pop
jge
inc
mov
adc
stc
add
inc
inc
inc
mov
and
or
popl
mov
loopne
cmp
mov
in
sbb
adc
dec
cmc
jne
push
ret
mov
push
xchg
or
jle
or
cmpsl
insb
ficoms
shlb
pop
add
js
pop
nop
jmp
mov
es
in
cmp
gs
cmp
xor
sbb
or
leave
sbb
pminsw
inc
jnp
sbb
enter
setg
mov
xlat
shlb
ss
loopne
xchg
dec
pusha
push
clc
outsl
jecxz
push
fwait
cmp
insl
lods
mov
movsb
scas
nop
rcll
in
push
dec
jbe
sub
mov
adc
adc
pop
call
adc
pop
cld
mov
rcr
int3
mov
pop
paddd
arpl
mov
pop
cmp
mov
fsin
test
bt
ljmp
jp
addr16
jne
xorl
pop
out
test
dec
cmp
ljmp
inc
sbb
cmpsb
mov
inc
in
sbb
outsb
std
sahf
cwtl
les
test
jge
dec
cmp
ds
and
call
nop
mov
in
leave
imul
mov
push
aad
lea
or
popf
xor
mov
faddl
sub
faddp
les
inc
movl
mov
hlt
mov
cli
mov
repz
dec
mov
dec
shrl
stos
pop
mov
mov
ja
das
pop
cmp
dec
sbb
dec
mov
fnstenv
mov
pop
jno
push
inc
jle
addb
cmc
clc
fistpl
addr16
fs
out
movsb
stc
in
or
jle
cmp
dec
cmp
aas
scas
movsb
stos
arpl
dec
mov
roll
dec
xor
mov
fdecstp
mov
les
ljmp
pushf
sub
aaa
mov
xchg
movsb
jmp
dec
push
mov
movsb
sti
dec
aad
popa
std
dec
pop
mov
ret
dec
stos
sub
icebp
imul
in
xchg
in
fisubrl
fwait
or
xchg
mov
mov
cld
mov
adc
in
mov
mov
dec
cmpsl
adc
jae
or
pop
mov
adcb
fdivrs
sbbb
dec
xor
pop
or
ret
daa
sar
iret
adc
adc
clc
xor
fwait
dec
lock
xchg
call
std
test
jae
sub
cmp
int
add
js
test
imul
mov
dec
pop
in
rcll
loop
repz
sahf
aas
cmpb
adc
repz
loope
jg
dec
push
nop
xorl
pop
sub
daa
das
sub
lock
jecxz
jp
pop
push
or
mov
xchg
dec
sbb
dec
inc
cmp
in
clc
ss
xor
sbb
repnz
call
outsb
idiv
out
sub
jg
or
fxch
mov
or
insl
cmp
nop
inc
popf
pop
shlb
mov
sarb
data16
xor
push
aaa
inc
pop
out
push
mov
mov
push
nop
sbb
jo
sub
leave
pop
hlt
mov
ja
popf
sbb
push
nop
hlt
cld
cmc
js
shlb
xchg
scas
ljmp
lret
adc
mov
sub
sbb
lock
inc
or
js
add
cmc
jmp
inc
fwait
mov
cmp
jb
push
adc
pop
lcall
cmp
pop
leave
xchg
cmpsl
jmp
pusha
movsb
lahf
or
loopne
test
mov
push
idivl
jge
jne
scas
repz
push
loope
xchg
or
aaa
lea
pop
lret
add
enter
jns
pop
cmp
mov
mov
mov
test
ds
inc
and
cmp
dec
cmpsb
push
shrl
xor
ret
test
xchg
lods
fildll
cli
fldt
lret
xor
mov
sbb
popf
pop
xor
cmc
lcall
movsl
scas
dec
and
cmpsl
and
in
les
rcl
sub
clc
xchg
shrl
push
jnp
pop
sbb
mov
popa
imul
jb
mov
sbb
mov
cmpb
repnz
rcl
pushf
and
adc
sbb
and
mov
or
xchg
or
adc
out
add
cmpsb
divb
cmp
jb
sahf
lret
xlat
cli
loop
loopne
lret
inc
lock
shll
sbb
adc
push
push
leave
les
pop
push
jl
push
push
xchg
add
push
out
mov
sti
in
ret
sbb
bound
out
add
or
mov
cld
pusha
into
push
bound
xchg
lahf
clc
daa
or
pusha
or
cmp
cmp
xchg
lds
jns
xor
add
cmpsb
pushf
fsubrs
and
add
inc
adc
imul
pushf
enter
adc
addr16
iret
aad
jo
cmp
dec
fwait
pop
jno
pop
xchg
mov
stc
jmp
test
mov
dec
add
inc
lds
lods
lds
popa
rorb
ja
mov
jmp
jl
dec
repz
divl
mov
in
scas
xchg
pop
repnz
xorb
pop
jne
lret
xchg
das
fists
and
pushf
push
rcrl
in
cmp
push
cmp
hlt
scas
sbb
xor
pop
add
mov
and
aam
pop
pop
xor
adc
ret
sbb
mov
dec
lds
mov
xchg
je
sbb
sub
movsb
imulb
aaa
xor
popa
hlt
std
adc
push
int
mov
out
fsubr
scas
jbe
mov
mov
adc
or
lds
cmp
cmpsl
dec
movsl
scas
push
inc
cmp
out
push
add
mov
rcr
lahf
xor
sub
xlat
dec
fisttpl
add
jne
and
sahf
lock
rcrb
push
inc
sub
sub
xchg
cld
mov
data16
scas
insb
xchg
sub
insb
mov
test
mov
xor
xor
and
push
adc
adc
repnz
pop
inc
inc
das
cmpsl
das
jne
and
lahf
out
es
scas
xor
xchg
dec
push
stos
clc
dec
and
sbb
aaa
ja
adc
nop
xor
in
test
sarl
pop
mov
mov
sbb
loopne
sti
push
cli
in
push
rcll
ret
fists
jne
lret
test
testb
scas
jp
and
jecxz
pop
jmp
and
mov
bound
stos
loop
jl
and
mov
mov
test
sub
cmc
std
arpl
mov
cmp
popf
xor
jmp
jne
push
sbb
mov
or
subb
popa
cmp
clc
add
aam
add
or
hlt
sub
jecxz
mov
movsb
repz
lock
xchg
in
aad
push
xlat
incb
push
mov
addl
cmp
and
je
daa
ror
dec
xor
fwait
dec
std
movsb
dec
sbb
jge
inc
add
sub
adc
cs
sbb
ljmp
pop
lahf
mov
mov
mov
adc
pop
adc
jp
ss
push
rorb
jnp
mov
mov
sub
sahf
jmp
and
cmp
adc
push
jne
xchg
or
jecxz
movl
sti
imul
repnz
stc
mov
in
pop
sub
out
mov
or
icebp
ja
cltd
leave
in
and
int3
pushf
jg
outsb
out
cli
cmp
fs
sahf
push
inc
lret
pop
mov
scas
adc
or
sbb
repnz
fst
lock
xchg
push
sbb
clc
cli
data16
in
xchg
xchg
push
mov
popf
adc
cld
popa
mov
mov
ficoml
aad
jecxz
pop
xor
outsl
sub
negl
loopne
xor
dec
lods
adc
mov
insb
inc
inc
enter
jge
cmp
and
mov
lock
adcl
test
loop
inc
ret
movsl
stc
sub
adc
fucomip
frstor
outsb
or
push
addr16
jne
mov
and
ss
test
push
xchg
scas
sbb
and
shll
inc
loop
mov
mov
movsl
jno
inc
fcmovnb
inc
repz
jo
cmpsb
idivb
dec
push
loop
push
outsl
push
int3
iret
fldt
scas
repz
loope
into
and
inc
dec
xor
mov
ret
insb
push
cmpl
in
mov
jle
mov
jne
hlt
testl
xor
daa
push
mov
xchg
rolb
cltd
push
and
sub
xchg
dec
in
jb
xor
out
push
out
clc
inc
lods
or
testl
sub
sub
sti
stos
pop
inc
rcrl
ss
push
scas
pop
lods
inc
push
mov
sbb
push
cmp
pusha
test
pop
inc
cmp
or
pop
fists
test
pop
test
pop
lahf
cmp
filds
in
jns
and
std
mov
subl
fs
inc
mov
test
dec
lods
sub
int
sti
jle
rcrl
xchg
mov
inc
leave
ss
jns
adc
jl
jnp
scas
test
bound
sub
adc
dec
lcall
int3
lret
imul
rolb
cs
sub
jmp
mov
mov
test
ficoms
out
and
cli
ja
jns
jge
pusha
stc
cmp
push
int3
inc
into
jg
mov
pop
bound
rcrl
mov
add
imul
aas
mov
mov
push
test
cmp
mov
mov
dec
insb
mov
sbb
push
movsb
sbb
xchg
cld
pop
enter
std
lahf
adc
pop
xor
push
lretw
loope
imul
ja
aam
jg
cmc
scas
adc
mov
stos
inc
dec
lahf
dec
lods
ficoml
outsl
scas
pop
out
stos
fwait
xlat
xor
fnstenv
sti
clc
negb
ss
mov
outsb
sbb
pop
cmpsb
mov
push
sub
dec
fisttpll
insl
loop
mov
pop
jae
sbb
nop
dec
je
aaa
push
jae
mov
mov
in
xchg
pop
sbb
xchg
mov
sbb
data16
jbe,pn
addr16
ss
mov
insb
mov
es
popa
call
notb
pop
cmpsl
jle
jb
sub
pop
in
das
insl
jns
bnd
out
xlat
mov
stos
adc
mov
loopne
dec
loopne
cs
mov
adc
and
cmp
in
or
stos
daa
cmp
loopne
mov
movsb
in
sarl
aam
lods
mov
das
mov
fs
in
add
xor
cmp
adc
adc
call
push
xchg
in
jb
aaa
fidivs
hlt
cltd
pop
mov
rcrl
loope
jp
lods
cltd
push
roll
out
loope
sbb
cwtl
dec
int3
push
gs
fbld
push
mov
jge
push
and
out
xor
pop
mov
testl
or
xchg
fcmovb
int3
dec
js
fiadds
pusha
pop
das
mov
cltd
rcrl
xor
stos
daa
push
push
nop
inc
leave
ja
sbb
inc
xchg
insl
addr16
mov
popf
data16
sub
inc
push
add
fisttpll
mov
and
jno
mov
ret
pop
jo
outsb
mov
mov
es
insb
sub
outsl
add
pop
mov
outsl
dec
sbb
lret
scas
lret
ja
fldt
cmp
lds
aas
fsin
mov
pop
repnz
mov
sahf
sahf
xchg
loop
rorb
push
test
or
shrb
cmpsl
xchg
movsl
jl
jg
cs
pop
out
mov
popf
sub
xchg
sub
stc
jne
dec
mov
imul
sub
sub
js
jg
cmp
sub
sbb
push
push
vcmpsd
jo
fsubs
mov
scas
in
lret
or
add
ficoml
jl
sub
loopne
movsb
je
push
shlb
pop
push
inc
arpl
mov
and
lret
fisttpll
test
orl
sub
jae
out
sub
xchg
mov
push
xor
add
out
insb
or
inc
fadds
or
insl
jae
jle
outsb
jae
and
aas
fcmovnu
pusha
test
inc
xor
repnz
jbe
mov
in
add
add
mov
sub
jo
aam
xchg
shrb
dec
add
rcll
mov
pmulhw
leave
cmpb
jb
inc
popa
pop
or
and
xor
cmc
fs
or
int
lds
push
mov
stc
inc
test
adc
push
bound
es
adc
stos
enter
lcall
mov
js
movsl
fidivl
cli
enter
xchg
and
test
or
sbb
clc
jbe
pop
fwait
mov
out
int
cmp
insb
sbb
stos
xchg
scas
subl
mov
jg
aas
xchg
push
or
mov
push
rol
enter
jecxz
sub
lcall
or
mov
test
mov
xchg
mov
pusha
cmpsl
lods
inc
ljmp
xchg
mov
inc
or
into
loop
cmp
std
sbb
and
xor
ja
in
pop
sub
jo
call
push
jecxz
dec
jmp
testl
pop
fs
bound
add
inc
cli
adc
lods
fstps
pop
fildll
xchg
insl
pop
fdivl
adc
xor
scas
shrb
cmp
iret
icebp
nop
bound
pusha
stos
aas
xlat
sbb
xchg
lahf
dec
lahf
lret
jnp
pop
pop
or
cmp
add
jne
mov
mov
xor
cwtl
sbb
mov
not
jnp
stos
faddl
repnz
addb
jb
neg
push
pop
mov
mov
sub
sahf
mov
scas
sar
mov
mov
aaa
iret
jle
ljmp
mov
aad
syscall
pop
imul
xlat
mov
xchg
jp,pn
into
aad
push
outsl
jp
fbstp
dec
fs
adc
clc
pop
dec
push
ret
sub
arpl
ljmp
push
pusha
cmp
dec
adc
push
movsb
inc
inc
int
movsb
outsl
mov
mov
and
hlt
sub
popa
sbb
xchg
push
imul
adc
inc
popf
popa
mov
cmpsb
mov
jnp
push
inc
pop
les
pushf
ds
loop
push
iret
and
jbe
aad
cmpsl
adc
lret
enterw
cld
and
mov
fucom
inc
pop
clc
pop
in
stos
jl
pop
negl
jb
xorb
jns
cmp
leave
test
int
adc
and
xchg
aam
xor
lea
cltd
push
pop
je
cmp
das
xor
popa
inc
test
out
adc
xor
and
lock
je
pslld
mov
test
add
idivb
xchg
ret
lods
lcall
mov
loope
ds
pop
rcll
jp
cmc
inc
sbb
lahf
hlt
mov
insb
ret
pusha
pop
sub
mov
push
cmp
dec
pop
dec
mov
push
inc
loop
into
shr
lock
or
add
adc
shlb
or
in
add
hlt
rcrb
push
xchg
sub
cmc
jg
xchg
adc
insl
scas
sub
shrl
inc
sahf
mov
mov
and
mov
cs
test
cmp
push
pop
pop
fists
dec
roll
xor
rcrl
inc
int
sub
sarb
mov
or
shl
pushf
push
or
sbb
add
push
and
je
fdiv
add
insl
mov
xlat
repz
cmpsl
pop
cmp
add
lahf
xchg
pop
shll
decl
pusha
cmc
in
dec
in
mov
inc
mov
xor
mov
ficoml
xor
mov
in
hlt
loop
rcl
ret
xor
add
adc
fs
bound
inc
movsb
mov
mov
in
hlt
loop
rcl
ret
xor
add
adc
fs
bound
inc
movsb
mov
and
hlt
rcl
ret
xor
add
adc
fs
bound
inc
nop
mov
mov
in
hlt
loop
rclb
xor
mov
cli
cld
popf
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
fs
clc
inc
call
push
int3
and
xor
and
sti
js
push
pop
cmp
enter
call
xor
loopne
lock
enter
mov
subb
add
dec
mov
fisubrl
mov
sarb
push
and
and
push
mov
push
dec
repnz
hlt
cltd
and
xor
int
mov
imul
and
ret
js
mov
aam
lahf
mov
xor
scas
enter
xchg
ljmp
fcompl
mov
xchg
addl
or
sub
sbb
adc
stc
leave
int3
lock
dec
sbb
mov
xchg
xchg
cs
test
ja
popf
pusha
mov
test
cltd
xor
add
sbb
push
mov
cmp
pop
mov
lea
mov
or
cld
shl
cwtl
ret
sbb
jmp
or
pop
lahf
enter
dec
adcb
push
adc
push
push
cmc
jge
cmp
jmp
enter
test
and
xor
loopne
pop
mov
pushf
push
pop
cmp
mov
cmp
test
pop
stos
jne
push
cmp
or
dec
hlt
outsl
stc
fsubs
inc
ss
jb
aam
pusha
orl
loopne
out
insl
mov
in
jecxz
adc
nop
mov
cmp
insb
mov
mov
loopne
lock
push
mov
subb
fsubs
jo
inc
call
xor
loopne
lock
push
mov
subb
fsubs
es
cmp
out
fsubrs
stc
mov
mov
mov
or
fwait
aam
test
mov
mov
push
icebp
lret
mov
sar
dec
aad
out
add
push
mov
addr16
movsb
pop
add
jp
mov
nop
pop
cmp
cli
xor
xor
jae
dec
js
daa
adc
sub
bound
outsl
rclb
inc
mov
sbb
push
cld
scas
fcmovnbe
jge
add
sub
add
in
nop
mov
jno
mov
shlb
xor
hlt
pop
or
je
sahf
xchg
sahf
lea
and
sbb
ds
iret
lock
inc
push
pushf
into
jl
cwtl
xor
fcom
mov
pop
or
xor
xchg
aaa
out
cmpl
lret
xor
in
cmp
xchg
pop
dec
mov
add
repz
add
fs
add
xor
mov
cltd
bswap
adc
inc
push
js
int3
out
nop
adc
xor
or
mov
fcoml
mov
dec
das
adc
test
fwait
jg
jl
fwait
add
call
xchg
or
int
das
dec
roll
push
inc
dec
lcall
and
pop
in
pop
stc
sbb
arpl
xchg
or
xchg
push
add
dec
xchg
push
adc
cmp
rolb
sub
stc
jae
in
lahf
in
dec
iret
mov
lock
dec
cmpsl
adc
sub
adc
clc
mov
lahf
int
jl
mov
rorb
mov
jo
cmp
dec
or
fcoms
test
iret
xchg
jp
loope
and
fidivs
jb
cmpxchg
and
test
mov
sub
sub
les
dec
scas
and
movsb
add
mov
cmp
syscall
add
cmpsb
pop
movsb
sub
sbb
mov
cmpsb
mov
out
jl
int
jbe
scas
add
and
add
pushf
jbe
inc
cltd
sub
pushl
std
lcall
imul
call
xchg
pop
xchg
nop
out
cmp
push
repz
add
ss
psrlq
ret
mov
mov
enter
jle
mov
mov
repz
xor
sbb
xor
dec
imul
xchg
xchg
xchg
lret
jecxz
call
bound
jge
or
out
orl
dec
imul
xchg
outsl
andb
div
cmp
adc
jle
stos
ja
vmwrite
xchg
xchg
cs
dec
fs
cmp
cwtl
pusha
sub
aam
int3
jo
stos
iret
sub
inc
push
adc
and
pop
jp
and
mov
in
push
xchg
xor
push
jne
shlb
or
popf
cmp
xchg
movsl
arpl
lock
insl
pop
arpl
fsubr
mov
inc
out
mov
pop
push
and
aaa
mov
ljmp
addr16
jmpw
and
xchg
jno
test
xlat
jnp
pop
test
mov
in
xlat
and
sub
movsl
add
sbb
in
repnz
cs
jge
jo
fwait
test
aam
dec
and
rorl
and
sbb
cli
lock
jns
xor
imull
jecxz
shl
andb
sbb
jle
out
push
sahf
jg
jae
jmp
add
push
xor
cld
gs
ret
mov
movsl
adc
jl
mov
lea
mov
test
cmpsl
sahf
dec
and
xchg
push
clc
sahf
jl
stos
lret
sbb
icebp
xor
push
inc
enter
clc
test
lret
ret
and
xor
mov
inc
adc
lcall
rcrb
add
push
movb
adc
lret
out
into
sbb
outsb
mulb
sar
outsl
cmc
test
or
dec
jp
push
sar
outsb
xchg
sbb
and
aas
dec
jle
mov
or
fldenv
out
pusha
or
fildll
out
in
cmc
pop
icebp
lods
jb
mov
loope
inc
adc
inc
inc
cmc
xchg
sub
dec
mulps
pop
imul
in
add
enter
fsubp
lock
pop
fsubl
ret
inc
jnp
pop
andb
mov
faddl
cmp
test
pop
adc
jecxz
popa
pop
faddp
loopne
into
sahf
fptan
mov
sti
lret
cmp
in
dec
repz
mov
fldenv
enter
stc
push
jb
lret
push
xor
push
inc
pusha
lds
aam
push
mov
in
fwait
fs
nop
nop
pop
sub
push
xor
pop
pop
sub
push
cmpsl
or
scas
cmp
inc
into
push
and
cmpsl
aam
push
sbb
lret
fisubs
xchg
insl
int
daa
mov
cmpsl
out
push
xor
cmp
test
and
mov
ret
test
lret
or
adc
xchg
and
sub
mov
je
add
xchg
movsl
sub
and
cli
popf
call
mov
jle
xor
les
bound
or
fs
or
cltd
test
jg
jge
sbb
hlt
stos
pop
add
dec
mov
fs
repz
aas
fstps
push
cs
fstpl
cmpsl
cmpl
dec
ds
dec
sahf
hlt
stc
mov
adc
cmp
push
out
mov
lds
ds
push
mov
jno
mov
add
mov
shll
mov
xor
int3
push
int
or
rcll
std
loopne
loope
jecxz
pop
or
lgs
jecxz
repnz
and
sbb
mov
loop
inc
imul
sbb
test
sbb
mov
add
jl
movsb
xchg
xor
add
shll
out
es
stos
cmp
cmc
ror
daa
dec
jne
sub
sbb
dec
loopne
sbb
mov
js
lcall
push
mov
inc
lods
jmp
xchg
add
pusha
hlt
mov
popf
js
mov
dec
mov
cmpsl
mov
js
mov
push
shll
mov
imul
sub
xor
shl
push
jno
mov
xlat
add
dec
adc
inc
mov
mul
out
xorb
ja
cltd
sub
pop
pop
pop
mov
nop
adc
out
ficomps
mov
adc
jge
aas
daa
outsl
mov
jns
mov
les
stc
fisttpl
push
mov
test
xchg
xor
mov
xor
mov
popa
xor
dec
jg
movsb
cmp
pop
xor
imul
push
int3
enter
js
cli
inc
ror
movl
jae
addr16
push
cmp
scas
sbb
std
pop
xor
dec
sbb
pop
pop
sub
lds
lret
adc
push
mov
xchg
dec
jge
rclb
and
mov
pop
lret
sbb
dec
push
jg
push
out
mov
sub
adc
out
xor
cmp
stc
mov
mov
jb
das
mov
pushl
dec
sub
jno
into
pop
push
adc
jno
sub
mov
cmp
push
pop
add
xchg
xchg
fidivs
push
pop
pusha
add
xchg
xlat
jg
aad
test
sub
sub
inc
pusha
ljmp
adc
test
jno
pop
push
in
scas
mov
cld
int3
jns
xchg
fmuls
lret
dec
sarl
and
lcall
lock
and
nop
fidivrl
pop
fnsave
push
pop
xor
cmp
les
shlb
mov
leave
mov
xor
dec
jbe
cmp
aad
pop
lcall
loop
dec
fidivs
and
jbe
stos
xor
pop
insl
mov
sti
mov
and
stc
rcrb
pop
test
cmp
adc
sbb
and
cmp
adc
push
clc
stc
das
inc
or
xor
dec
cmpl
inc
push
ds
negl
sbb
mov
xor
fdivrp
insl
ja
cmp
clc
call
dec
jmp
sub
mov
mov
fsubs
outsb
adc
push
ds
out
orl
adc
xchg
rcrl
cmc
fstl
fcmove
and
scas
out
mov
and
sub
loop
dec
imul
data16
mov
int
mov
out
jmp
and
and
insl
out
and
les
lds
ljmp
xlat
aas
les
inc
nop
push
in
mov
ret
iret
stc
dec
cs
add
aas
cwtl
in
pop
pop
out
bound
add
mov
lock
es
jg
jecxz
or
and
mov
inc
pop
sbb
sub
jmp
pop
lret
loop
jb
leave
xchg
loop
jne
scas
inc
mov
pop
cmp
push
cmp
mov
sbb
or
sbb
fsubrs
dec
cmp
cmp
cmc
test
mov
adcb
sub
inc
lcall
aaa
sub
cli
lds
mov
add
outsl
mov
or
ret
and
mov
or
cmp
ror
xchg
mov
dec
loopne
or
call
mov
inc
orb
dec
insb
push
pop
test
xchg
jp
ja
pop
xor
or
fistl
sar
lods
pop
adc
fistpll
pop
mov
sub
adc
mov
call
pop
std
ret
add
out
lret
shl
movb
and
dec
cltd
repnz
xchg
lea
cwtl
shll
fisubrs
mov
unpckhps
popa
ljmp
aam
cmc
cmp
icebp
mov
pop
xchg
cmp
aad
stos
jne
fwait
scas
push
lret
or
adc
pop
imul
cmpsb
stc
outsl
mov
out
insl
into
cld
sbb
add
jg
icebp
jnp
andl
out
mov
cmp
js
mov
loope
ficomps
pop
ret
mov
pop
insl
aam
lahf
jecxz
pop
pushl
mov
gs
popw
jge
lahf
stos
es
testw
ret
popf
insl
test
dec
adc
fsin
das
lea
fmuls
in
clc
mov
jnp
sti
popa
xor
in
not
cmp
lock
lock
test
out
mov
push
xchg
lods
cs
mov
sub
and
outsb
pop
addl
outsl
pop
mov
mov
das
push
and
rorb
dec
lret
in
jp
out
mov
pop
lds
cmp
lds
loop
sti
pushf
mov
lods
cmp
fs
jmp
insl
and
sub
mov
xlat
bound
ds
add
dec
pop
lret
lock
inc
inc
sarb
popa
dec
sub
inc
in
inc
es
or
xchg
outsl
mov
out
int
push
out
pop
cmc
jb
cmpsl
mov
push
stc
ror
xchg
sub
imul
popf
mov
jae
cli
jbe
dec
popf
fsubs
xchg
push
loope
mov
cli
rcrl
pop
xchg
rcrb
sbb
xor
mov
pop
xorl
cmp
ds
negl
cmpsl
jbe
stos
jecxz
fldl
shrb
aas
fs
pop
scas
rcl
pushf
pop
fildll
push
or
scas
das
int3
xor
push
pop
mov
nop
std
push
out
lahf
hlt
popa
testl
out
int
loopne
pop
and
test
mov
and
jp
cmpsb
push
push
arpl
daa
lods
pop
mov
stc
addr16
es
mov
inc
mov
testb
movsl
movsb
pop
fidivrl
mov
cmpsb
mov
adc
xor
sbb
sub
out
push
dec
inc
or
mov
mov
sbb
nop
xchg
add
add
sarl
inc
mov
addb
daa
lock
or
jbe
fildll
daa
mov
sbb
and
mov
nop
ljmp
cmp
xchg
cli
sub
push
cmpsl
in
lock
nop
jb
dec
movsl
in
xchg
data16
add
jae
dec
fsts
imul
xor
cmp
shl
shr
iret
orl
adc
or
jae
pop
add
rcll
mov
xchg
imul
andb
push
jg
cmp
and
orl
rcr
call
pop
test
inc
push
clc
fsts
sahf
ret
xor
inc
fsub
arpl
pop
roll
mov
das
pop
test
add
push
inc
push
nop
lcall
nop
stc
sbb
push
mov
cli
iret
mov
mov
shl
add
xchg
and
out
adc
jl
aam
stos
ja
xlat
pop
and
pop
jecxz
pop
sub
test
adc
adcl
inc
push
pusha
pop
imul
pusha
cmp
add
xchg
xor
inc
sub
sbb
stos
xor
aam
add
cwtl
js
jge
out
dec
sbb
aam
mov
mov
loop
mov
stos
incl
xchg
add
orl
push
es
mov
addl
cltd
mov
sub
xchg
dec
mov
xchg
mov
jmp
mov
bound
push
mov
xor
fwait
push
mov
orb
pop
stc
cmpsl
or
xor
xor
icebp
imul
int3
mov
clc
aad
icebp
xor
jnp
in
iret
shll
or
xchg
xor
fwait
lahf
test
sub
decb
imul
cmp
movb
add
sub
lods
mov
sbb
stos
lret
into
repz
xchg
int3
or
inc
xor
pop
imul
aad
fwait
dec
std
cli
inc
cwtl
jns
mov
inc
loopw
je
dec
icebp
in
add
jnp
jnp
xchg
push
cmp
dec
mov
jns
sub
lock
and
rorb
inc
je
push
or
xchg
push
out
jnp
inc
mov
popa
cmp
mov
mov
add
dec
insl
jle
and
jns
sbb
push
inc
mov
jno
mov
mov
je
jl
jae
aas
xchg
imul
xlat
popf
enter
lock
adc
movsb
ret
xchg
test
popa
mov
andl
ljmp
lock
aam
jo
mov
out
sbb
subl
and
jno
mov
pushf
sub
orb
leave
xchg
dec
dec
mov
push
stos
fcmovnb
mov
cmp
repnz
mov
lcall
bound
push
scas
scas
test
shrb
mov
push
out
jno
sub
xchg
mov
ror
std
addr16
cmp
mov
and
and
xchg
pop
mov
cltd
jb
xor
lods
in
sub
push
mov
repnz
pop
cwtl
mull
xchg
cmpsl
jo
test
nop
cmp
jno
pop
not
movsl
dec
mov
push
inc
add
pop
fnstsw
inc
rol
out
and
pop
dec
dec
xchg
arpl
jp
cmp
outsl
hlt
lods
and
push
mov
arpl
cli
mov
inc
fimull
add
pushf
dec
sti
lcall
pop
fisubrl
insl
arpl
repnz
cltd
jp
or
pop
ja
jp
mov
out
scas
xchg
repz
testl
hlt
cmp
imul
add
addb
incl
loope
mov
push
std
movsl
jne
jl
sbb
pop
mov
inc
jnp
out
pushl
add
test
aam
xor
scas
inc
xchg
push
test
xchg
pop
rol
xor
in
cwtl
add
add
cmp
out
or
push
jbe
int3
xor
mov
jns
leave
jge
cli
inc
imul
xor
loop
dec
loope
ja
ds
ret
cmc
enter
movhps
inc
fwait
js
pop
cmc
rolb
loopne
ds
stc
inc
sbb
addr16
jo
push
test
and
stc
jne
jae
add
sbb
mov
stc
or
jns
jns
mov
test
loop
push
imul
push
fwait
js
ds
pop
lock
popf
in
mov
push
sub
pop
mov
push
nop
cli
xor
and
add
scas
test
xchg
jecxz
jle
and
ja
js
fucom
repnz
jmp
cmp
fdivl
inc
push
daa
popf
xor
push
fcomps
lcall
sub
adcb
xor
pop
lahf
cmp
mov
std
adc
add
dec
inc
fildll
mov
adc
cmpsl
lret
add
sti
faddp
pop
push
dec
mov
jno
xchg
sbb
push
in
sbb
out
push
repnz
enter
xchg
lods
cwtl
cmp
mov
pop
dec
ret
shll
lods
cmp
jmp
in
repz
popa
push
sbb
adcb
sarl
in
push
xor
inc
int
sbb
push
fwait
int3
int
popf
add
sub
cmpl
dec
jo
movsb
pop
cmc
xor
xchg
mov
sub
mov
and
jae
fwait
nop
mov
cmp
jno
aas
data16
sub
adc
insl
out
lock
call
int3
sub
sarb
repz
push
sub
ljmp
lods
add
push
adc
inc
shrb
and
scas
xchg
and
or
cmpsl
cmp
sbb
test
add
inc
insl
sbb
ret
test
lea
push
adc
mov
repz
nop
push
lods
scas
inc
inc
adc
hlt
xor
push
aad
cmpsb
clc
add
mov
adc
mov
push
sbb
jo
in
insb
popa
arpl
jb
mov
aas
sbbb
dec
enter
loop
sbb
sub
adc
mov
les
out
std
sbb
out
mov
sbb
mov
push
mov
ja
jnp
mov
sub
dec
or
rcrl
inc
xor
mov
inc
bound
fcomi
test
or
mov
mov
popa
lods
lods
cmp
test
cmc
jg
mov
push
and
int3
lcall
pushw
push
adc
mov
lods
aas
repz
lret
mov
jne
stos
in
xor
clc
loopne
loopne
dec
enter
fld
shl
mov
pop
mov
gs
fsubrl
rclb
cmp
arpl
mov
xchg
in
movb
lods
or
add
xor
push
push
jne
mov
lcall
ret
mov
pop
pushf
test
lds
xchg
xchg
xor
mov
mov
cmp
mov
push
cli
call
xor
pop
mov
xor
mov
clc
sub
xchg
in
jns
adc
cs
jp
out
pop
push
clc
dec
sub
aam
sbb
or
push
in
xchg
xor
xchg
mov
push
cli
cmp
xchg
sub
pop
outsl
pop
loope
add
mov
das
cwtl
popf
pop
push
popa
and
or
test
dec
pop
enter
jb
push
inc
sbb
mov
scas
icebp
cmp
repnz
inc
scas
pop
insb
insl
push
jo
jbe
xor
mov
and
push
push
push
leave
loopne
dec
out
les
int3
mov
push
sub
out
scas
in
xor
fst
mov
push
in
jecxz
or
add
push
ljmp
leave
js
fistpl
int
add
ss
cwtl
andb
pop
mov
lock
or
loope
fisubl
xchg
xchg
pusha
push
fdivrl
add
sti
jle
xor
loop
aam
and
mov
pusha
xlat
mov
aam
imul
mov
pop
mov
and
adc
xor
or
push
and
cmpsl
xor
clc
add
push
mov
cmpsb
popf
jb
pop
sub
fs
add
cmp
sub
scas
pop
or
and
lcall
mov
pop
mov
push
sahf
mov
movsb
push
mov
lds
stos
lea
xor
and
pop
jno
outsl
jmp
sarb
jae
sbb
inc
aad
jecxz
aas
mov
mov
loope
mov
or
xchg
jmp
das
popf
inc
xchg
stc
sbbb
pop
popa
scas
popf
cmp
pop
mov
adc
lea
lock
je
xlat
and
add
andb
cmpsl
addr16
in
loope
fwait
dec
mov
push
adc
nop
int
cmpsl
push
cmp
mov
jl
mov
sub
outsb
dec
xchg
pusha
rolb
icebp
sub
dec
movsb
sub
xlat
or
sub
imul
xor
mov
hlt
push
cwtl
and
adc
dec
lock
push
mov
subb
fsubs
jo
inc
call
xor
loopne
lock
push
mov
subb
fsubs
call
and
pop
loope
hlt
jno
insb
fstps
movsb
adc
rolb
cwtl
and
rcrb
mov
rol
push
enter
call
popa
ss
mov
pop
push
shlw
mov
nop
dec
mov
mov
inc
push
push
push
pusha
ss
add
push
and
adc
lcall
andl
pop
popa
jno,pn
add
pop
and
jl
xchg
shll
loop
clc
mov
test
mov
pop
push
jbe
push
and
sahf
xor
inc
dec
ror
out
mov
movsl
lea
add
lahf
adc
fmull
es
mov
mov
imul
pop
jl
outsb
cwtl
test
mov
outsb
add
fwait
insl
stos
inc
inc
cmp
xchg
addl
and
hlt
mov
inc
leave
popf
jne
push
cmp
jecxz
jbe
js
dec
sbb
popa
ljmp
mov
leave
fs
jmp
jle
push
test
dec
icebp
pop
rcl
stc
and
dec
arpl
into
hlt
lods
loope
fnstenv
ss
in
xchg
dec
jl
cmc
xchg
mov
add
popa
das
jno
add
inc
and
jg
xchg
rcrl
or
mov
xor
push
aas
inc
inc
push
je
data16
stc
arpl
cmc
mov
int3
cltd
lds
adc
push
jne
and
dec
push
xchg
loop
jecxz
rcll
icebp
xchg
scas
xchg
aaa
push
jg
add
arpl
adc
jbe
rclw
cmpsb
adc
mov
inc
push
push
push
popa
ss
add
inc
and
rclw
cmpsb
adc
mov
inc
push
push
adc
jb
sbb
push
mov
mov
scas
lods
icebp
andb
add
jno
shrb
mov
xchg
les
aam
and
or
lret
aad
mov
dec
stos
mov
jmp
lahf
clc
aad
inc
inc
daa
aas
out
incb
negb
aas
cmp
incb
notb
dec
xor
inc
in
pop
push
or
sbb
xchg
xchg
das
in
pop
cmpsb
loop
test
adc
push
testb
add
sbb
inc
sbb
call
stos
cmpsb
jmp
and
loop
les
push
movsl
sahf
clc
xor
insl
aad
mov
out
ja
lds
and
pushf
lret
xchg
xor
and
sub
xchg
push
or
sti
lea
test
sub
aad
mov
sahf
xchg
jns
xchg
add
sbb
imul
aaa
mov
cmp
mov
sub
push
les
mov
jo
adc
ljmp
push
sbb
cmp
add
add
dec
mov
popa
pop
xchg
mov
or
xchg
mov
pop
xchg
cs
jmp
jne
mov
xchg
pushf
pop
jns
and
shlb
mov
xor
adc
test
mov
inc
mov
imul
or
scas
or
or
jp
mov
lret
pop
lcall
jl
lock
jne
adc
push
lds
int
dec
cmp
pop
insb
push
inc
mov
jge
xor
xor
popf
mov
les
scas
and
pushf
test
pop
push
dec
fdivl
xchg
int3
pop
adc
mov
push
xchg
je
stc
repz
mov
add
stos
iret
or
call
mov
and
iret
adc
sub
sbb
insl
xchg
sbb
adc
in
adc
shlb
les
fsubrl
popa
and
subb
clc
daa
xchg
aas
movsb
cld
lret
push
stos
adc
fcoms
mov
outsb
aam
inc
pop
xchg
hlt
fbstp
data16
mov
push
setae
lret
pop
pop
push
xchg
js
adc
push
cmpb
arpl
enter
adc
push
daa
icebp
jmp
icebp
stos
cmp
in
imul
dec
mov
cmp
les
push
ss
dec
mov
fmulp
pop
pusha
or
mov
clc
dec
fdivr
repz
sbb
sub
sar
fdivrp
sarl
test
jb
jg
out
out
push
popa
adc
or
sbb
mov
arpl
inc
push
das
inc
inc
or
jecxz
mov
mov
and
lds
lea
or
push
xchg
pusha
pop
stc
repz
popf
push
sbb
pop
subb
or
mov
test
fistl
test
js
fisubrl
jnp
push
sub
cwtl
cmp
repnz
cld
or
mov
mov
mov
subb
lods
and
aas
inc
sub
fadds
jo
fldz
mov
scas
dec
jae
ja
mov
sub
rcr
stos
fs
dec
mov
push
fsub
mov
sti
sub
sar
xchg
mov
and
pushf
or
jmp
mov
dec
je
push
xor
shr
stos
or
and
outsb
scas
cs
mov
jl
stc
inc
outsb
xor
and
lea
test
sub
adc
bound
add
adc
cltd
mov
mov
cli
out
dec
inc
mov
cmp
test
or
test
lahf
cltd
or
push
outsl
mov
jnp
fldl
jl
in
mov
push
int3
imul
aad
aad
xchg
cs
test
push
call
imul
mov
enter
jecxz
cmp
add
daa
and
mov
mov
sub
movsl
mov
mov
and
pop
movsl
scas
xchg
pop
push
loopne
xchg
lods
test
inc
sub
jge
andb
mov
call
cs
cmp
pop
add
xchg
lock
push
cld
arpl
mov
fcompl
lock
xchg
mov
test
clc
ds
inc
gs
add
dec
xchg
adc
pop
pop
and
aaa
cmpsl
mov
scas
hlt
cwtl
in
sub
in
lock
fisttpl
aaa
stc
fcomps
adc
in
in
cmpsl
jle
push
mov
icebp
mov
outsl
addb
xor
clc
nop
pop
aaa
jmp
cmp
sub
sbb
mov
mov
nop
push
jae
data16
sub
dec
adc
insb
adc
rcrb
gs
pop
std
stc
data16
lea
jmp
adc
enter
lahf
into
jmp
sub
aas
xchg
lea
cltd
xchg
aaa
jb
lock
mov
out
scas
jg
outsl
addr16
in
fisubrs
dec
pop
lret
sbb
push
xor
frstor
loopne
sbb
mov
test
xor
dec
fs
gs
out
iret
daa
jecxz
dec
xor
inc
call
adc
enter
scas
rcrb
pop
inc
inc
jbe
add
das
mov
sbb
addl
mov
lods
cwtl
int3
xchg
fcmovnu
sub
in
jae
lea
or
imul
adcl
in
lcall
cmpsb
shll
insb
lahf
nop
cmp
rcrl
jo
iret
sub
ja
pop
mov
repz
and
dec
xor
popf
sbb
cmp
jbe
sub
jle
popf
test
xchg
pop
and
loope
fcoms
sub
stc
or
xchg
sbb
sub
push
hlt
xor
imul
dec
mov
pop
and
mov
jb
cmp
xchg
xor
push
mov
inc
scas
insb
push
push
sbb
jge
xchg
inc
mov
pushf
adc
jae
arpl
sub
dec
lods
xor
xchg
inc
xlat
int
jne
adc
loop
jp
scas
into
push
and
pop
in
das
lods
jb
in
and
sub
mov
fsubs
pop
mov
test
and
push
jmp
hlt
bound
push
les
push
popf
sub
repz
sbb
dec
push
dec
pop
jl
aaa
in
addr16
mov
lods
stos
test
shl
gs
cs
xchg
bound
aaa
lods
xchg
jle
push
rol
ret
push
out
push
sub
xchg
outsb
xor
rol
mov
mov
mov
dec
in
push
adc
mov
pop
inc
dec
adc
adc
sbb
fists
sub
ss
lea
lea
cmp
push
fstpt
lea
cmp
les
cmc
das
into
xchg
leave
testl
imull
sub
enter
sti
lds
outsb
repz
and
mov
add
std
cmp
cmpsl
push
das
lahf
push
mov
cmp
lcall
enter
jp
shl
lea
loopne
adc
sbb
lcall
sbb
xchg
andl
rcrl
sub
loop
xchg
std
insl
jecxz
pusha
jo
and
icebp
fnstcw
dec
fdivl
adc
mov
push
sbb
pop
movl
add
push
lea
shrl
mov
and
sbb
test
jb
jmp
mov
mov
pop
insl
jge
pop
stos
iret
iret
fisubrl
leave
or
ds
adc
sbb
int3
push
cmc
dec
mov
adc
stos
xchg
xor
dec
sahf
sbb
cmp
cmp
jo
push
out
sbb
pop
mov
adc
xchg
mov
ror
push
int3
sarb
addr16
cmp
xor
call
into
mov
sub
sbb
xchg
outsl
and
das
dec
or
enter
mov
lods
addr16
or
cmp
cmp
jecxz
push
ret
sti
sub
xchg
adc
or
mov
inc
in
aaa
mov
mov
jl
pop
mov
add
movsl
incb
sbb
clc
cmp
dec
test
dec
mov
cld
cs
cli
push
cs
sub
jbe
call
adc
mull
inc
jnp
clc
out
roll
test
popa
int3
adc
loope
mov
cwtl
cmp
es
or
in
xor
add
pop
push
jo
fcmovne
scas
test
into
mov
mov
pop
mov
sbbl
jnp
pop
cmp
shlb
sub
adc
jmp
in
in
add
mov
insb
mov
xchg
mov
mov
not
fistpll
jp
mov
movsb
add
inc
mov
mov
sti
or
add
xor
inc
xor
inc
adc
mov
add
orl
mov
lcall
and
push
and
jmp
daa
dec
sub
repz
and
daa
into
pop
sbb
in
jno
in
lahf
adc
adc
sbb
je
jle
cmp
fcomps
add
adc
int
out
mov
stos
mov
xchg
push
inc
add
inc
push
subb
inc
sbbb
lret
jg
or
xor
cmp
ret
and
jns
jg
std
pop
lea
pop
outsl
push
ja
fcomps
loopne
push
addr16
out
add
test
jecxz
mov
cmp
mov
icebp
outsl
data16
and
inc
lock
or
jae
sub
fdivl
test
cmpsb
ljmp
xlat
repnz
mov
mov
xchg
sbb
enter
dec
rorl
add
hlt
outsl
cmp
mov
inc
stos
adc
xlat
mulb
add
pop
push
in
jns
pop
frstor
mov
xchg
add
insl
xchg
jno
pop
scas
adc
jecxz
inc
xor
sbb
sub
add
xchg
clc
jo
adc
loope
jle
nop
lcall
scas
cltd
js
ja
enter
cwtl
jle
inc
adc
push
je
test
sbb
gs
dec
test
movsl
pop
xor
decl
fdiv
xor
push
xor
mov
cmpsb
lds
jbe
xor
add
lahf
pop
inc
jae
aas
stos
out
shrb
mov
jmp
in
push
aam
popa
pop
rclb
add
and
dec
sti
repz
std
test
xchg
jge
movl
xchg
and
sbb
dec
xchg
xchg
fcomps
cmp
dec
jnp
mov
pop
mov
clc
repnz
test
cmp
in
lock
out
push
iret
mov
dec
cwtl
push
in
xchg
ret
arpl
pushf
cld
test
sub
out
es
add
push
and
cmp
xchg
inc
pop
and
movsl
mov
mov
sbb
mov
ja
cmp
lock
dec
test
cwtl
and
mov
orb
push
cmpsb
add
and
mov
lret
ror
mov
andb
andl
and
pop
fidivl
xor
dec
mov
pop
mov
mov
inc
outsl
and
cmp
pushf
jle
mov
mov
adc
sbb
inc
jmp
xchg
adc
repnz
test
cmp
dec
jecxz
aas
mov
xchg
hlt
test
stc
dec
lret
push
movl
mov
rcrl
push
filds
cli
xor
cmpsb
icebp
mov
fsubrl
in
sub
fistl
pop
dec
adcl
xor
inc
das
jle
repz
sub
lahf
mulb
add
stos
mov
data16
lods
and
stos
cltd
push
dec
mov
adc
fsubs
adc
push
mov
imul
test
enter
sbb
mov
push
out
dec
xchg
sbb
sub
mov
out
mov
repnz
out
push
sbb
push
cs
mov
cli
cli
ds
lahf
out
jne
xlat
adc
or
sti
adc
rol
adc
dec
cltd
loop,pn
ds
pop
xchg
les
clc
je
inc
popa
sbb
popa
stos
cli
cmp
leave
pop
push
mov
sub
aaa
mov
ret
jb
insl
inc
adcl
nop
pop
rcpps
mov
mov
cmp
aam
xchg
mov
mov
jnp
jg
pop
sub
sub
shll
shl
cltd
jle
jl
mov
lods
push
lret
lods
aaa
les
mov
adc
mov
ja
icebp
rolb
xor
lea
or
shrl
push
jne
or
pop
mov
mov
inc
lret
sbb
fidivs
inc
push
mov
sub
adc
jge
psllq
or
ret
mov
jns
and
pusha
pop
pop
aaa
leave
mov
mov
push
sbb
sbb
in
sub
mov
pop
fs
push
cld
xchg
mul
mov
test
je
leave
mov
bnd
mov
fwait
ret
sahf
into
inc
ljmp
loop
test
mov
les
fistps
pop
mov
test
inc
and
lret
filds
mov
ror
push
cmp
incl
mov
sub
data16
subb
cmc
mov
mov
pop
les
filds
xor
push
push
sub
cmp
fwait
rorb
shrl
nop
add
popf
jge
loopne
mov
movsl
mov
mov
cmc
add
and
jne
mov
sub
cmp
in
enter
adc
fwait
push
push
sbb
mov
mov
in
loop
sub
imul
mov
outsl
lea
push
pop
cmc
inc
push
push
sub
sti
jge
rclb
imul
scas
and
les
add
push
jno
jb
clc
adc
xchg
push
and
cmp
mov
and
hlt
mov
and
or
mov
dec
int3
sbb
iret
push
sbb
mov
fmuls
cli
lds
mov
push
adc
xor
cmc
fisttps
pop
inc
or
and
pusha
pop
or
cs
out
leave
adc
lahf
aad
es
pop
mov
jo
mov
mov
loope
pushf
add
repnz
or
xchg
enter
popa
jg
decl
int3
push
rolb
sarb
dec
push
dec
movsl
divb
jg
lahf
aaa
andl
mov
mov
dec
out
fnsave
out
cli
mov
lods
negl
je
push
cmc
pop
jmp
in
add
push
in
ficoms
add
sahf
mov
pop
fsubs
xor
inc
push
fwait
scas
imul
adc
mov
fwait
xor
dec
adc
mov
push
in
lea
repz
add
jmp
insb
mov
mov
lds
inc
xchg
mov
int
pusha
test
push
ljmp
and
push
cmpsb
je
ret
scas
sub
add
mov
pop
movsb
test
inc
test
cmp
xor
cmc
ret
inc
daa
gs
mov
or
dec
fs
fwait
clc
xor
pop
test
xchg
sub
mov
sahf
add
pop
dec
outsb
sbb
jge
repnz
jo
aam
pop
cmc
stc
aaa
fisttpl
adc
subb
sahf
int3
les
sti
inc
cmpsl
cmovnp
or
stos
push
xchg
push
cmc
outsl
stc
popa
ret
jmp
stos
and
inc
arpl
and
nop
xchg
lods
inc
cmp
dec
rclb
js
xor
in
mov
mov
adc
lahf
lea
xchg
push
jle
pop
push
ja
pop
adc
xor
fidivl
pop
movsl
mov
lods
lds
mov
mov
jb
andb
push
lret
fbld
inc
pusha
add
cmp
mov
mov
in
pusha
hlt
sub
mov
jno
lret
adc
sub
repnz
mov
xchg
dec
lods
arpl
sbb
cmp
dec
es
cmp
push
or
arpl
cmp
xchg
sbb
xor
pop
rcll
clc
sbb
mov
xlat
or
imul
les
push
fildll
mov
cmp
gs
lahf
pop
aad
mov
sbb
xchg
ficoms
dec
or
orl
loopne
mov
lret
ret
pop
mov
popa
notb
lahf
call
jb
sahf
imul
push
insb
push
pop
pop
sahf
or
inc
xor
lds
add
shll
cmpsl
bound
movsb
mov
mov
mov
push
enter
add
mov
mov
imul
xor
xchg
mov
mov
inc
in
and
xorb
daa
test
pop
in
clc
cld
and
mov
adc
dec
push
push
ds
cs
adcl
mov
mov
outsb
lcall
outsl
loop
sub
cltd
mov
cmp
in
in
fdivs
es
push
mov
push
test
xor
lock
das
mov
sbb
rcl
adc
leave
pushf
adc
ljmp
xchg
leave
enter
stc
in
cmpsb
push
jmp
shl
cmpsb
daa
adc
push
in
xor
add
mov
imul
cmp
cpuid
out
in
mov
add
outsl
lcall
jnp
je
mov
aam
or
sbb
and
aaa
addr16
cmp
pop
icebp
sub
adc
xor
xchg
xlat
sub
dec
lret
or
push
inc
hlt
nop
dec
shl
mov
add
imul
lds
xor
mov
lea
in
daa
pop
or
dec
and
fisttpl
mov
pop
int
inc
ds
das
inc
mov
pop
adc
push
cmp
dec
mov
inc
xchg
jge
hlt
cmp
stos
pop
sbb
sub
je
adc
hlt
jno
mov
cmpsb
push
push
pop
push
data16
adc
mov
add
xor
into
int3
mov
push
popf
adc
fcompl
sub
push
push
dec
lcall
mov
f2xm1
jmp
sub
pusha
mov
jmp
xlat
xorl
lock
pop
in
jnp
stos
outsb
dec
push
leave
xor
and
inc
mov
out
xor
mov
mov
push
pop
testb
pop
mov
ds
mov
mov
sahf
sti
xchg
imull
jmp
ljmp
xchg
push
and
aad
subb
outsl
mov
xchg
je
mov
push
cmp
dec
sti
push
sbb
leave
push
clc
insb
ja
outsl
pop
dec
mov
pop
push
into
jo
sub
pop
enter
and
stos
mov
aad
test
xchg
aas
adc
pop
xor
mov
jg
mov
lds
mov
mov
movsl
inc
repnz
outsb
and
cmp
xchg
sub
outsl
inc
nop
enter
and
push
insl
out
pop
test
in
fiadds
add
xlat
pop
icebp
xorb
jle
je
ljmp
mov
mov
dec
xor
movsb
popa
dec
lret
in
dec
scas
jecxz
hlt
xchg
aam
push
add
rorb
jl
imul
mov
mov
xor
sbb
stos
push
out
test
jnp
arpl
inc
pop
jle
test
int
pop
mov
or
jmp
push
mov
mov
fimull
fsubr
rcr
xor
data16
fiaddl
cmpsb
shll
mov
js
es
scas
imul
out
stc
mov
pusha
scas
and
imul
aas
mov
and
test
xchg
add
or
int3
or
push
pop
add
jl
es
mov
jge
xchg
jmp
adc
xchg
cmp
jne
outsb
cmpsb
pop
scas
gs
in
into
in
inc
or
mov
dec
push
enter
cmp
cmp
xchg
jno
pop
mov
iret
out
hlt
mov
adc
mov
dec
push
fcompl
bound
pop
xchg
shll
push
in
stc
fwait
leave
fnstenv
push
or
and
inc
push
out
out
cmpsl
push
enter
lods
mov
jg
jmp
xchg
cld
xor
xchg
loop
insl
mov
sub
cwtl
ja
out
fs
jnp
xchg
sub
out
in
mov
ja
lea
pop
mov
cmp
mov
jne
mov
push
push
gs
inc
and
pop
movsb
rorl
push
jmp
stos
test
sub
js
jge
test
paddb
dec
mov
movups
jb
adc
push
push
xchg
jno
add
inc
and
rclw
cmpsb
adc
mov
inc
push
push
push
popa
ss
add
inc
and
rclw
cmpsb
adc
mov
inc
push
push
push
popa
ss
add
inc
and
rclw
mov
mov
adc
pusha
xor
add
inc
and
cmpsb
rcll
shl
pop
sbb
add
cwtl
and
and
orl
mov
rorl
loope
icebp
js
mov
cwtl
and
push
fsubs
jno
orl
mov
shrl
mov
push
adc
inc
rcll
popa
lock
sub
lahf
cmp
ds
js
mov
icebp
push
faddl
add
push
add
jbe
cmp
dec
xchg
imul
fs
xchg
mov
mov
lods
and
push
xchg
mov
cmp
int
or
stc
ja
pop
jmp
sahf
inc
fcomps
lahf
adc
sti
fcomps
fstpt
test
adc
inc
call
sbb
sbbl
aas
sbb
adc
mov
jns
push
or
call
jo
xchg
test
mov
cmp
dec
and
aad
push
sub
test
jae
repnz
cmp
or
or
cmp
shrb
pop
mov
and
push
fsubs
jno
adcl
mov
rcll
loope
icebp
sbb
in
js
inc
test
sbb
shlb
ret
push
movsb
and
movsl
adc
jno
push
mov
popa
mov
in
xchg
jns
pop
hlt
jnp
cmp
sbb
dec
leave
xor
inc
movsb
push
fsubs
jno
orl
mov
rorl
loope
icebp
js
mov
cwtl
and
push
fsubs
jno
orl
mov
rorl
loope
icebp
js
mov
fwait
cmc
std
mov
call
mov
pusha
jno
inc
push
dec
lods
xchg
cwtl
test
sbb
cmc
sbb
mov
xchg
rolb
inc
in
bound
in
inc
dec
and
or
jle
out
mov
cmp
push
enter
lahf
jmp
push
shll
pop
jae
mov
pop
ficompl
push
xchg
or
daa
xchg
cmpsb
sbb
inc
mov
aaa
or
es
lcall
jbe
rolb
push
clc
and
aaa
stc
sti
stos
jnp
out
mov
aas
push
in
leave
and
movsb
push
dec
addb
shrl
sbb
adc
push
inc
add
movsb
aas
push
repz
pusha
xor
sbb
sar
pusha
aaa
mov
lods
insl
scas
lea
or
in
sbb
sahf
jmp
and
dec
push
jle
and
xchg
push
test
js
in
lock
iret
pop
jecxz
sbb
cltd
fsubl
and
jae
lahf
push
mov
mov
push
inc
aaa
repnz
or
pushf
add
in
cmp
xor
out
xchg
test
push
aaa
jbe
xor
outsl
outsl
add
ret
or
dec
add
shll
into
jae
adc
jg
pushf
imul
mov
lods
lahf
pop
aaa
jns
jbe
mov
and
sub
popf
stos
jb
adc
movsl
rcr
ja
cmp
dec
jbe
mov
push
push
imul
add
lock
dec
test
or
add
fsubr
cmp
lds
mov
jmp
pop
ret
cwtl
xchg
xchg
enter
lcall
daa
mov
or
adc
mov
ja
in
xor
or
addb
mov
or
ror
jae
mov
or
pop
inc
or
jbe
stos
lahf
je
pop
cmp
bound
add
cwtl
xchg
mov
dec
out
sbb
cwtl
xor
mov
scas
jne
mov
idivl
inc
ret
out
imul
sub
push
mov
add
dec
mov
in
das
mov
cmp
popa
mov
clc
and
sbb
push
addl
and
dec
enter
fldcw
jmp
mov
loope
xor
sub
popf
xchg
mov
sbb
lret
push
pop
or
add
jb
in
jno
inc
mov
xchg
cwtl
in
xor
shlb
pop
leave
add
lret
ljmp
sub
clc
sub
aas
jns
out
pop
hlt
popa
sbb
popa
xor
push
xor
xchg
int
add
mov
pop
jne
sar
std
sub
xchg
xchg
adc
adcb
testl
cmp
jmp
sub
cmp
mov
push
out
push
mov
fs
xor
jb
daa
add
daa
xchg
cmpsb
insl
repz
mov
and
adc
xor
push
lcall
pop
dec
in
xchg
push
shrb
dec
dec
jle
int3
dec
scas
addr16
jmp
cmc
mov
mov
push
jmp
ret
sti
stc
imul
cltd
cmp
jne
jecxz
lods
out
mov
adc
loop
push
lahf
add
sahf
and
sub
cmp
push
mov
rclb
mov
cmp
sbb
insl
leave
lods
pop
push
in
dec
ret
pop
push
ret
packssdw
sbb
push
loopne
or
push
sbb
push
adc
movsb
mov
aaa
ss
xorl
repz
fwait
mov
xchg
sbb
repnz
mov
scas
getsec
cmp
cmp
and
xchg
shrl
or
jne
inc
pusha
mov
fisubrs
cwtl
arpl
stos
icebp
dec
rcrb
iret
fwait
aaa
lock
in
xchg
idivl
jb
outsb
mov
dec
mov
shll
pop
scas
iret
imul
sub
repz
mov
lahf
xor
loop
icebp
pushf
arpl
out
jbe
and
jb
rcr
ret
xchg
mov
iret
mov
cs
push
sahf
sbb
dec
fwait
mov
sbb
daa
push
dec
scas
fwait
decb
cmp
jl
inc
nop
mov
lods
sahf
sbbl
mov
outsb
ja
pop
push
xchg
int
inc
leave
sub
add
sub
nop
mov
cmp
rcll
repz
mov
sub
sub
adc
cli
pushw
in
ret
int
jns
mov
subb
or
mov
outsl
mov
mov
js
jp
jl
pop
push
dec
or
mov
repz
mov
adc
lahf
xchg
pushf
mov
stos
int3
ds
mov
test
pusha
mov
xor
pop
add
sub
aas
mov
jb
add
jo
out
leave
cmp
dec
mov
xor
pop
ja
hlt
idiv
xor
les
test
mov
pushf
push
jge
or
mov
das
inc
cmp
test
aad
clc
cmpsl
fdivrl
pushf
aad
mov
and
xchg
and
out
daa
popa
fnstcw
movsb
cmp
inc
enter
sub
sar
mov
stc
sub
ljmp
ret
cwtl
fstpl
insb
repz
push
mov
shll
or
xchg
xor
or
add
sti
mov
cli
mov
mov
ret
sub
lods
push
adc
add
cmpsb
repnz
xchg
in
xor
into
mov
inc
xlat
mulb
mov
inc
mov
fsubrl
mov
cmpsb
mov
pushf
mov
lods
aad
imul
orb
push
dec
mov
fnstcw
or
sub
add
mov
pop
leave
hlt
mov
fidivrs
lea
mov
enter
sahf
mov
mov
scas
cmc
and
jp
in
adc
jnp
in
dec
mov
sbb
dec
jbe
mov
cmp
mov
jmp
scas
leave
into
cmp
sar
ret
jge
popf
mov
mov
in
jbe
lret
into
adcl
pop
pop
test
mov
lea
push
jp
jno
sub
mov
outsl
ffreep
xchg
lock
popa
sbb
in
xchg
subl
fwait
shlb
fsubs
mov
test
cmp
mov
xor
lahf
push
popf
arpl
xchg
addb
or
mov
pop
div
test
push
push
adc
xchg
iret
lock
mov
xchg
lods
xor
pop
pop
inc
outsb
add
orl
jp
orl
aam
mov
mov
push
and
aam
lock
repnz
mov
addr16
leave
dec
hlt
xor
stos
inc
add
cmp
aas
inc
adc
pop
cmpsl
mov
sub
or
mov
inc
dec
sub
lock
imul
arpl
fstpl
sub
cmpb
scas
ret
cmp
stos
mov
lea
out
jb
push
aaa
add
shlb
inc
lods
imul
xchg
lods
adc
mov
pop
popa
fisubrl
outsl
leave
out
xor
insl
add
enter
and
xor
out
xor
mov
lock
adc
adc
adc
xchg
mov
pop
int3
sbb
cmpsl
les
and
push
test
push
clc
and
sar
mov
mov
pop
in
adc
fidivrs
jl
jge
aam
xorl
sbb
data16
cmp
pop
cmp
pushf
or
fstpl
bound
mov
xor
stos
repz
arpl
fists
mov
ja
imul
cvttps2pi
mov
cli
iret
mov
inc
movsl
sbb
sbb
in
out
ds
pushf
repz
xchg
leave
xlat
pop
adc
sub
xchg
mov
push
in
out
adc
clc
and
pop
push
cmpsl
mov
mov
push
lock
out
inc
fdivl
loope
daa
jle
rcrl
xchg
gs
fs
jo
or
lock
aad
mov
mov
cltd
call
shrl
out
lcall
xor
rorl
in
scas
notb
xchg
sub
push
rcl
fistpl
jno
cltd
out
cmpsl
pop
and
sbb
std
add
sbb
lahf
inc
fwait
and
out
out
popf
out
mov
cltd
xchg
push
mov
loopne
cli
shrl
jle
addb
gs
jecxz
mov
jns
push
push
mov
cmp
and
sti
add
in
rcll
cmp
and
sbb
or
and
movsb
dec
sti
xchg
dec
sub
mov
mov
das
sahf
test
fldl
lcall
cmp
mov
mov
repz
test
xchg
inc
xor
pop
jne
ud0
js
shlb
fisubl
addr16
or
fst
jb
xor
or
scas
jmp
xor
dec
shlb
scas
ljmp
stos
popl
sbb
mov
call
mov
or
das
pop
data16
insb
mov
cmp
sub
or
dec
mov
cld
jae
int3
mov
iret
fcoms
mov
jle
xchg
push
out
mov
inc
mov
arpl
aad
pop
stos
xor
mov
sub
dec
pop
ljmp
dec
clc
outsb
adc
aaa
mov
fs
scas
in
repz
jb
push
test
into
cmp
and
mov
aad
cmp
jne
hlt
xchg
int3
or
insb
mov
add
mov
xor
inc
inc
pop
inc
das
scas
mov
out
ds
sbb
xor
lcall
cmc
cmpsb
dec
xchg
mov
inc
jnp
inc
cmpb
lcall
push
lock
in
push
sub
je
out
xchg
sti
mov
lea
xchg
cs
testb
call
test
rcrb
outsb
or
fsub
or
addr16
test
and
xchg
test
mov
cmpb
aad
shlb
fdivrs
cmpsb
jp
scas
je
pop
xchg
jns
into
and
or
mov
imul
je
xchg
data16
push
mov
mov
sbb
in
or
jno
ljmp
push
test
cmp
and
hlt
sub
push
or
mov
pop
ja
cmc
sbb
mov
xor
xor
sub
out
sub
push
lret
rcl
xchg
pusha
outsb
aad
pushf
jo
push
call
pushf
addl
xor
les
lock
xchg
or
in
idivl
push
sub
inc
outsb
fnsave
lds
sub
or
mov
sbb
sbb
push
push
cmp
mov
es
fistpl
mov
inc
mov
int
cmp
int
sarl
pop
push
xor
in
fistpl
inc
mov
gs
add
jno
out
in
stc
enter
jl
or
pop
cwtl
hlt
xchg
std
dec
push
cmp
jmp
mov
in
pop
inc
cltd
inc
stc
sub
leave
fimuls
insl
mov
mov
adcl
ja
mov
jle
push
out
mov
outsl
mov
fs
outsl
mov
scas
out
dec
push
push
cmpsl
dec
sbb
mov
xor
nop
js
sti
fwait
lret
mov
lods
xchg
insl
xchg
sbb
cmp
push
sbb
call
sub
popf
mov
or
pop
jbe
cmc
xor
cli
lds
pop
jmp
sub
sbb
and
inc
cld
mov
je,pn
jp
ret
xchg
push
insl
xorb
arpl
dec
xorl
outsb
sti
jg
add
jnp
lea
addr16
pusha
in
repz
xor
mov
dec
mov
jecxz
repz
xor
dec
xchg
add
pop
xchg
sbb
push
arpl
out
jg
fs
jno
in
mov
push
sub
sbb
outsb
push
jg
jnp
inc
xor
push
xor
insl
shlb
out
jp
mov
dec
negb
or
inc
cmp
imul
mov
mov
stos
test
adc
pop
or
inc
mov
fadds
xchg
push
leave
push
iret
sbb
mov
or
sub
xor
cmp
push
push
jo
rol
xchg
push
xor
mov
pop
jge
adc
loopne
sub
push
stos
test
mov
js
or
daa
imull
pop
mov
faddl
xchg
mov
test
out
mov
daa
lods
push
mov
xor
adc
lcall
inc
movsb
daa
loop
add
dec
mov
xor
pop
pop
scas
mov
and
or
push
mov
out
inc
jle
mov
xchg
and
jp
arpl
jbe
jnp
mov
jo
jnp
popa
ds
pushf
jle
and
push
dec
popf
add
inc
dec
and
ljmp
mov
mov
and
jne
stos
out
jge
mov
xchg
inc
and
call
mov
or
dec
push
jns
insl
add
in
movsb
andb
sahf
mov
stos
add
sub
xchg
push
push
mov
push
push
mov
lea
cs
mov
loopne
call
frstor
ljmp
mov
sub
pop
ret
pusha
test
movsb
cmp
aaa
jno
js
dec
shrl
adc
call
dec
test
push
xor
lds
mov
nop
add
mov
dec
inc
aas
inc
push
pop
mov
test
inc
imul
sbb
fmull
inc
iret
jnp
sbb
or
movsl
ljmp
jge
adc
mov
add
jg
loopne
loop
inc
insl
inc
inc
gs
mov
adc
adc
add
jno
and
ss
mov
lret
das
pop
test
pop
adc
xchg
cmc
mov
or
loopne
mov
cmpsb
push
cmpsb
roll
add
xchg
push
lds
cmp
mov
imul
sub
shrb
sahf
push
pop
ret
sub
mov
and
imul
cmp
adc
add
mov
push
xchg
ret
lods
aam
and
jg
stos
sbb
pop
and
pushf
call
imul
stos
fildl
push
mov
sti
inc
mov
pop
adc
sbb
stos
enter
and
mov
sahf
xchg
pop
dec
inc
or
mov
or
mov
repnz
aad
pop
leave
shrb
lcall
pop
inc
jae
in
and
icebp
std
cltd
call
mov
and
lret
imul
jl
int3
cmp
inc
arpl
xchg
add
fwait
dec
fs
scas
mov
mov
push
repz
imul
sub
push
test
insb
adc
mov
cmp
push
out
mov
sbb
out
mov
or
sbb
xchg
mov
leave
sub
sbb
std
scas
cld
hlt
into
and
xor
les
cmp
cmp
fs
xchg
jecxz
mov
cmp
dec
jmp
mov
sub
fcomip
adc
mov
out
rep
push
dec
jno
loop
mov
aas
adc
mov
pop
nop
es
insb
xor
lods
inc
xor
push
adc
stc
inc
xor
xlat
lock
jno
imul
or
add
jl
fidivrs
inc
repnz
sbb
test
jnp
je
orl
mulb
add
mov
outsb
int
push
add
imul
pop
push
out
scas
mov
pop
in
mov
lea
pop
je
xchg
pop
lds
mov
cmp
push
cltd
or
add
sbb
push
stos
push
push
mov
cmp
pop
add
jbe
or
xor
mov
sub
loope
mov
and
stos
cld
push
mov
xchg
pop
cmpl
popa
adc
push
das
cltd
lods
sahf
pop
pop
jmp
or
adc
mov
dec
mov
and
aaa
xchg
add
ret
sub
mov
cmp
lret
aaa
in
dec
jp
pop
in
mov
sqrtps
aad
xor
shll
add
mov
mov
xchg
add
cmpsl
xor
lret
arpl
cmc
push
out
jecxz
xchg
mov
bound
push
mov
pusha
or
mov
cmp
sub
push
popa
pushf
cmp
in
inc
push
cmp
arpl
mov
jge
mov
jmp
mov
enter
jl
sbb
dec
cmp
push
aaa
in
jb
or
jg
xor
mov
add
push
lods
popf
pushf
jl
mov
cwtl
pushf
mov
rcr
cld
and
dec
xchg
shrl
jb
shll
inc
test
daa
in
inc
mov
daa
push
xorb
pop
aas
cmpsl
jecxz
rcl
fucomi
aam
fcoms
adc
sbb
mov
divl
sub
push
sbb
push
push
mov
roll
sahf
rcrb
mov
cmp
fisttpl
xchg
cmc
out
jmp
nop
popf
test
enter
sub
inc
cld
or
jmp
out
inc
inc
cmpsb
pusha
repz
or
fwait
repz
fdiv
xchg
dec
sub
lahf
or
mov
cmc
shl
insb
mov
shl
outsl
fcomps
pop
stc
test
or
lcall
push
sbbb
xchg
sub
push
cmp
sub
and
pop
or
mov
sbb
jae
and
jmp
enter
outsl
jo
arpl
xlat
push
add
iret
xchg
mov
or
dec
inc
scas
data16
sub
loope
sahf
outsl
and
cmp
dec
xchg
inc
filds
xor
or
xchg
rorl
cmp
add
pop
lcall
xorl
cmp
cmc
xchg
jge
jne
movsb
and
mov
xchg
insl
jne
popf
imul
addl
inc
add
add
push
ja
xor
test
outsl
jne
cmp
sub
mov
ljmp
mov
mov
mov
add
jbe
sahf
shl
mov
ds
fsub
xchg
jmp
lret
scas
push
cmpl
shrl
xor
mov
mov
ljmp
cmovnp
dec
nop
das
xchg
push
pop
inc
inc
lret
mov
pop
xor
push
cmp
or
in
xchg
jae
xchg
xchg
movsl
fidivrs
lcall
int3
pop
std
wbinvd
cmpsl
sub
add
mov
adc
out
sub
lcall
addb
sbb
xchg
pop
push
call
or
push
sbb
ss
arpl
pop
jecxz
fucom
mov
sarl
push
cmp
mov
imul
mov
fwait
cltd
iret
adc
das
outsb
mov
popl
fisubrl
pop
xchg
aam
push
pop
mov
insb
jo
or
jne
test
xchg
or
add
test
lods
and
jne
js
cmp
cwtl
rorb
adc
sbb
and
sbb
test
in
and
jg
cld
scas
xchg
inc
popa
scas
jl
imul
cwtl
inc
popa
fnsave
dec
mov
addr16
xor
pop
fimull
jne
inc
mov
idivl
mov
sbb
sbb
jecxz
mov
and
lock
or
sbb
aaa
addl
xor
xchg
cltd
mov
loopne
lea
jb
insb
decl
push
xor
push
das
jecxz
mov
dec
push
das
sbb
sbb
add
sti
push
fs
in
sbb
inc
push
fdivrl
and
push
call
pop
cmc
adc
hlt
fsubrs
call
or
or
clc
push
out
jno
adc
jmp
ds
xor
repz
cmpsl
xchg
add
cmp
xchg
dec
add
loop
bound
in
ss
push
cmpb
sbb
pop
scas
cmpsb
mov
sbb
push
xchg
out
rcr
leave
mov
push
imul
mov
data16
pusha
dec
or
mov
testb
jmp
subb
mov
sub
loop
jns
stos
mov
inc
fnsave
jae
xchg
or
cmp
and
js
cmc
add
mul
mov
push
pop
sub
pop
mov
or
mov
mov
mov
mov
adc
test
addr16
xchg
stc
aad
repz
jge
push
cmpsl
cwtl
jns
xor
popa
call
xchg
sbb
dec
rcrl
push
adc
inc
enter
call
xchg
sbb
dec
rcrl
push
adc
inc
enter
call
xchg
sbb
dec
rcrl
imul
cwtl
and
push
fsubs
jno
orl
mov
mov
pop
cmpsl
push
xchg
push
xchg
mov
cmpsl
loop
pushf
out
cltd
out
test
sbb
imul
dec
addr16
stos
xchg
mov
cmpsl
jmp
sti
lret
neg
subb
cmp
or
sbb
imul
inc
dec
ja
stos
xchg
mov
cmpsl
jmp
sti
lret
neg
out
pop
sbb
push
jle
imul
sbb
adc
adc
fcmovnu
testl
hlt
push
loop
xchg
adc
add
out
lock
xchg
inc
xchg
je
data16
sti
dec
aaa
jg
insl
xchg
pop
mov
cmc
enter
inc
jnp
sbb
xchg
inc
loope
shlb
lcall
xchg
pop
cs
sbb
sahf
fsubrs
lock
cli
pop
stos
stos
sbb
adc
xchg
fildl
fucomi
mov
ljmp
cmpsl
mov
shlb
push
js,pt
dec
data16
adc
fldt
aaa
cmpsb
push
out
call
nop
daa
cmp
push
mov
pop
xchg
or
cwtl
jo
outsl
jge
outsb
insb
pop
jle
sti
inc
jno
popl
pop
mov
cwtl
push
mov
cmpsl
jmp
sti
lret
neg
out
pop
cmp
or
sbb
imul
dec
ja
and
xchg
fdivr
int
fucom
mov
pop
xchg
pop
addr16
push
js
pop
push
in
and
add
add
iret
jmp
fcmovb
mov
leave
pop
jb
jne
push
sbb
xor
shll
adc
xor
mov
fildll
neg
out
pop
cmp
or
sbb
imul
dec
ja
stos
xchg
mov
cmpsl
jmp
sti
lret
neg
out
pop
cmp
or
sbb
imul
dec
ja
stos
xchg
fisubrl
cmp
or
inc
add
inc
jbe
inc
xor
sub
int3
ljmp
ljmp
pop
je
sbbl
mov
test
jo
mov
pop
in
loope
or
rclb
inc
jg
mov
cld
repnz
cmp
mov
inc
outsb
stos
push
jecxz
and
fsubr
mov
cli
sbb
or
gs
add
xchg
test
jmp
test
ja
rorb
pop
cwtl
push
and
mov
cmpl
in
data16
xor
mov
stc
test
cmp
fisttps
nop
jg
inc
and
pop
jo
out
sbb
inc
in
int
pop
cwtl
adc
in
add
orl
inc
fisubrs
push
loopne
jnp
sbb
xchg
xor
dec
jno
das
sub
pusha
loopne
into
dec
pop
xor
loop
cwtl
scas
pop
cmpsb
cmpsb
cmp
enter
adc
in
cmpsl
ret
movsl
mov
je
xlat
dec
xor
jl
rorl
push
fisubrl
cmp
addl
lock
std
or
xlat
out
xorl
loope
sbb
and
pop
lods
sub
test
in
ficomps
mov
and
xorl
adc
or
imul
inc
or
int
inc
ds
jl
mov
into
fldlg2
aaa
fwait
cmp
ret
dec
lds
out
jge
and
lods
jno
fst
out
lock
cmp
xlat
push
xchg
std
daa
test
mov
inc
sub
or
fdiv
ds
rcrl
int
ljmp
daa
jg
xor
call
aad
les
in
jae,pt
dec
xchg
insb
rcl
fisttpl
push
test
mov
cli
shl
icebp
sahf
push
insl
out
loop
and
cmp
arpl
stc
dec
adc
out
push
test
xchg
xor
pop
imul
lea
adc
mov
sbb
popf
xor
leave
outsb
into
lcall
dec
clc
cmp
inc
loope
shl
pop
jbe
mov
pop
and
hlt
xchg
mov
adc
in
inc
pop
xchg
xchg
addl
jne
mov
cmp
adc
dec
cmpsl
add
push
lcall
dec
mov
je
and
stos
push
and
dec
rcr
mov
cmp
xchg
lret
test
out
mov
pop
clc
dec
add
inc
jmp
xor
sub
cmp
push
in
inc
lret
lahf
pop
mov
fnstsw
cmpsb
dec
inc
dec
pop
test
lret
mov
lods
andb
test
pop
add
push
sbb
xor
andl
adc
sbb
mov
and
loopne
cmpsl
outsl
cmpsb
push
loop
push
pop
pusha
in
les
mov
inc
push
addr16
nop
aas
sti
fdivp
lock
mov
push
xchg
lcall
inc
adc
adc
aas
test
dec
add
mov
popf
lock
sub
movsl
dec
xchg
inc
xchg
push
dec
daa
movsl
and
jns
or
jmp
mov
in
call
pop
lock
pop
jp
jge
xchg
scas
repz
mov
dec
rcrb
aam
mov
fwait
cmp
push
push
out
xchg
inc
adc
scas
xor
cmp
rcr
add
sahf
testl
push
aam
push
and
pusha
push
or
or
push
ret
jo
pop
add
imul
mov
xchg
scas
xchg
or
and
into
loope
and
cmp
mov
push
push
test
loope
jp
insl
scas
bnd
nop
jbe
outsb
sub
pushf
in
cltd
push
addb
adc
jp
orl
es
aam
or
cwtl
mov
mov
pcmpgtd
cwtl
or
fstps
imul
mov
xchg
outsl
aad
mov
das
inc
jp
mov
pop
dec
loope
fbstp
inc
loop
popa
jae
mov
testl
push
push
fbld
mov
xchg
cld
mov
add
jp
xor
shl
cld
add
jo,pn
push
lock
scas
scas
mov
nop
add
aam
pusha
inc
fwait
repz
dec
js
push
nop
xor
pop
mov
scas
or
aad
dec
pop
in
std
jecxz
shrl
mov
push
loope
cli
push
xorl
imul
xchg
test
dec
lods
loope
in
ja
mov
mov
inc
sarl
xchg
adc
int3
xchg
mov
jae
mov
das
leave
mov
fwait
popf
xor
jne
dec
dec
cld
ret
push
jo
adc
sbb
movsb
shlb
push
lods
jle
mov
lock
ret
push
ja
xchg
add
add
ficoml
sbb
mov
arpl
xchg
arpl
inc
mov
loope
shll
sahf
shlb
sbb
cmp
pop
sbb
add
cmp
out
cmpsl
or
sbb
shl
aaa
sub
dec
arpl
xor
and
mov
scas
push
xor
rorb
mov
gs
inc
in
push
jge
mov
xchg
shll
lret
aam
xchg
out
jp
cmp
adc
mulb
out
out
adc
sub
repz
insb
pop
mov
js
testl
add
adc
mov
imul
adc
addl
push
lock
xor
movsl
pop
add
movsl
mov
test
adc
arpl
nop
adc
jmp
fs
les
and
lret
lahf
aas
and
or
add
push
dec
mov
cmp
xor
jmp
loope
xchg
cld
rcr
pop
scas
dec
mov
push
push
jae
pop
out
mov
push
scas
aam
mov
shl
enter
mov
fldenv
pop
inc
jno
add
mov
push
dec
repnz
jbe
pop
mov
pop
adc
mov
iret
in
pop
pop
sbb
or
stos
popa
jg
in
dec
cmpsb
jnp
xchg
adc
dec
bnd
jl
cmc
and
dec
push
and
cmp
adc
and
popa
mov
sbbb
and
or
cmpb
push
dec
sbb
cmp
xor
sahf
movsl
and
sbb
pop
rolb
cld
sar
pushf
scas
mov
nop
dec
mov
sub
and
mov
sbb
xchg
in
push
inc
jle
lcall
mov
cmp
pop
repz
out
mov
mov
add
inc
shlb
cmp
jne
xor
mov
xor
add
jl
ret
adcb
fdivrs
iret
cwtl
push
cltd
sub
icebp
add
jne
mov
insb
push
mov
inc
inc
dec
repnz
shll
clc
sbb
fwait
xchg
sar
add
mov
mov
pop
out
std
lock
pop
pop
pop
pop
xor
stc
fnstenv
push
ret
cmpsb
cmpsb
jg
lcall
xchg
scas
shrl
dec
sbb
testl
mov
arpl
inc
pop
or
jecxz
jnp
mov
jbe
je
aad
pusha
jmp
adcl
stos
dec
loope
test
movl
add
cld
jno
pop
and
jge
sub
or
in
dec
loop
mov
insb
ss
fildl
sti
lods
jge
push
sub
adc
int3
sqrtps
xor
inc
pushf
lods
arpl
adc
cli
cmp
dec
cmp
icebp
sub
pop
and
add
add
sbb
mov
pusha
sbb
sbb
and
popa
xor
sbb
lahf
xor
push
mov
repnz
lods
pop
out
inc
in
pop
cmp
imul
jl
sub
push
dec
sti
mov
sbb
jecxz
xchg
fistpl
and
mov
mov
or
mov
out
cmc
push
sub
mov
cltd
mov
ja
mov
xor
jmp
xchg
and
ja
lahf
dec
push
aam
lret
jmp
add
scas
mov
or
dec
leave
or
xor
adc
push
jmp
mov
lods
fcmovnbe
mov
in
ljmp
and
imul
xor
lods
ret
loop
int3
inc
and
fwait
cmp
sbb
mov
je
aaa
insl
pushf
adc
divb
aas
lds
out
stc
imul
or
clc
mov
mov
sub
fiaddl
movsl
jge
push
out
sub
rorb
pop
dec
jle
lods
mov
mov
sbb
aaa
movsb
mov
pop
push
loopne
ds
inc
jnp
movsb
or
test
shrl
inc
sub
jbe
sub
mov
sub
loope
ficoms
sub
sti
jae
rcrl
ret
cmpsl
in
cld
jmp
lret
mov
xchg
xlat
xchg
xor
sbb
dec
inc
jae
es
repnz
sahf
insb
pop
lahf
aas
testl
and
jnp
imul
cmp
cmp
jge
jbe
dec
andb
push
inc
rcrb
js
shrl
sub
or
cltd
add
aas
stos
cmp
outsb
dec
push
mov
cmp
and
ret
push
mov
mov
imul
cmp
cmp
outsb
jb
aam
xor
andl
inc
lahf
scas
and
mov
push
imul
hlt
in
pop
lds
and
arpl
cmpsb
std
mov
dec
push
lods
pop
test
xchg
movsb
push
cmp
fsts
or
dec
add
out
scas
jne
inc
loope
aam
fcmovnbe
lret
or
mov
jbe
cmp
movsl
jo
insb
sub
sub
inc
subb
jae
xchg
push
loope
loop
xorb
fwait
cli
push
jl
insb
cld
fdivrs
pop
in
clc
ret
cmpsl
or
mov
scas
xchg
das
les
or
xlat
sbbl
push
cmpsb
and
push
mov
mov
clc
rol
gs
cmp
dec
dec
leave
jecxz
in
in
push
sub
hlt
fdivs
pop
mov
sahf
popa
mov
dec
dec
cmpsb
icebp
mov
add
in
out
cld
jl
cmp
int3
push
xchg
in
adcb
cmp
in
fs
into
fsubs
xor
cwtl
inc
and
aad
and
movsb
mov
fsub
push
push
pop
cs
pop
sbb
cmpsb
lods
in
jg
leave
jbe
outsb
loope
mov
dec
in
or
je
out
lock
insl
lcall
loop
dec
dec
icebp
push
or
stos
push
movsb
cld
jbe
mov
loop
adc
inc
inc
repnz
fwait
nop
gs
fstps
aam
xchg
fdivrs
and
cmp
lods
ja
inc
in
inc
jns
movsb
cltd
stos
imul
pop
xchg
js
add
rcrl
and
xor
xor
lret
test
cmp
push
and
aaa
xchg
sub
nop
or
push
scas
je
aaa
rorl
jno
lret
xchg
ret
adc
push
bound
bound
xchg
mov
push
scas
adc
add
aam
inc
adc
jno
cmpsb
clc
aas
mov
inc
mov
add
push
push
lea
ljmp
testb
push
mov
fwait
notl
mov
std
mov
lcall
dec
pop
ret
cmp
sbbl
aad
jmp
ret
or
xor
cmp
jp
xor
pop
push
incb
test
mov
test
or
mov
xor
imul
push
add
int
shrb
icebp
xlat
push
fiadds
lods
and
jmp
in
mov
lahf
iret
repz
xlat
push
fisubrl
cmp
adc
stos
shlb
xchg
sbb
push
pop
adc
mov
jge
and
fldl
push
inc
jecxz
mov
cmp
xchg
rorl
pop
jle
or
lret
cltd
in
mov
xchg
adc
insl
sub
push
cs
mov
rorb
jle
or
mov
mov
nop
les
xlat
hlt
add
jp
ds
and
push
xor
xor
test
jnp
and
push
or
sbb
enter
test
icebp
xchg
icebp
call
call
hlt
xchg
lods
xchg
mov
jmp
mov
stos
mov
add
push
lret
into
xchg
mov
xor
xor
sbb
jbe
dec
mov
outsb
xor
push
xchg
xchg
add
insl
movsl
test
mov
call
pop
and
fstps
ret
adc
or
cltd
fcomps
push
fmuls
mov
dec
arpl
push
cmc
push
cmpsb
pop
sbb
int
mov
mov
rorl
repz
dec
bound
cmpsb
fucomi
shll
push
pop
scas
sub
sahf
and
iret
xlat
and
dec
jns
and
cld
cltd
ficompl
xchg
mov
sbb
xchg
addb
jne
insl
fiadds
mov
cmpsl
stos
ret
rcrb
pop
scas
push
cmc
lret
cmc
loop
push
ds
mov
negb
jnp
push
xor
mov
push
xor
jo
dec
push
mov
mov
ljmp
pop
push
and
pop
movsl
data16
pop
cltd
sub
xor
imull
inc
lods
mov
sub
mov
xchg
outsl
jae
jae
ret
lods
or
fcmovnb
aas
nop
insb
push
pop
push
cmp
pushf
adc
iret
or
sub
push
sub
inc
pusha
pop
pop
push
scas
in
cltd
loopne
insb
sub
xchg
cli
and
mov
add
dec
mov
aad
pop
xchg
loopne
pop
aaa
sub
mov
dec
jno
and
pop
pop
xor
jl
daa
cmp
fdivrs
mov
fldt
pop
lahf
bound
mov
gs
loopne
jl
dec
mov
mov
ds
pop
jb
das
mov
jnp
xlat
cld
repz
pushf
nop
xchg
loopne,pn
xchg
test
add
cmp
push
into
jbe
mov
jmp
push
mov
pushf
mov
insl
call
jp
or
inc
test
add
out
jae
mov
pop
adc
outsb
test
cmp
add
dec
sbb
jp
mov
sti
push
add
jne
lods
int
out
inc
imul
cli
fidivs
xor
pop
ja
test
scas
add
add
and
out
add
push
and
push
pop
inc
jb
ja
enter
daa
stos
add
sahf
lds
xchg
inc
std
cmpsl
cmp
xlat
addr16
adc
pop
cmp
fdivp
sbb
mov
sbb
fisubrl
pushf
pop
pop
mov
xchg
daa
mov
pop
adc
xor
shll
or
dec
xchg
xor
int
ror
repnz
xchg
nop
in
int3
sbb
cmp
sub
test
lahf
jl
cld
sahf
sbb
dec
xor
in
sbb
jl
rcll
xor
xchg
lcall
sub
adc
and
shlb
push
imul
push
mov
cmp
mov
stos
loopne
out
xor
adc
cmp
adc
imul
cmpl
xor
aas
cmp
pop
mov
scas
lods
push
ss
sbb
or
add
sahf
rcrb
into
xchg
cmp
inc
mov
mov
aad
mov
jae
cmc
jp
add
ja
add
test
popa
das
outsl
or
mov
xchg
pushf
test
fwait
cwtl
push
sarb
and
leave
psadbw
mov
xchg
repz
std
clc
adc
push
imul
or
aaa
lret
cmpsl
pop
sarb
jmp
aaa
sub
inc
sub
clc
push
jnp
cli
int
outsl
stos
repz
pop
inc
insb
gs
sub
outsl
mov
xchg
pop
rcll
or
pop
sarl
dec
faddl
pop
inc
popa
icebp
lds
mov
lret
fldt
or
xor
sub
lahf
lds
push
repnz
fnstcw
jl
and
sub
insl
in
stc
push
loope
jecxz
ret
sbb
adc
jns
sbb
lret
xchg
je
mov
mov
sbb
cmpl
sub
mov
xchg
mov
push
mov
mov
or
xor
inc
mov
jecxz
inc
jmp
mov
mov
xchg
mov
ficoml
subl
int3
push
daa
cmp
dec
idivb
jmp
jmp
push
inc
xor
adc
or
pop
xchg
jle
xor
sbb
mov
cmp
outsb
sti
push
shlb
mov
sahf
mov
jmp
mov
int
jge,pt
les
sub
push
dec
adc
cmpsb
out
sti
fwait
call
mulb
and
cltd
jno
pop
test
sub
pop
xchg
cmpsl
jmp
lahf
lods
iret
cmp
fwait
in
in
dec
jg
leave
push
lock
ja
rorb
jmp
imul
dec
incl
or
inc
dec
repnz
jecxz
cmp
mov
push
loop
pop
cld
arpl
add
push
sbb
push
push
sbb
xor
lahf
xchg
pusha
pop
mov
in
in
xchg
mov
sub
cmpsl
dec
inc
out
mov
cmp
scas
xlat
es
cwtl
push
or
call
aaa
popa
pushf
mov
xchg
ljmp
in
jl
sub
scas
into
jmp
fildl
or
iret
jns
mov
or
outsb
jb
dec
jne
loope
sub
xchg
dec
call
inc
flds
cmpl
mov
jg
ret
les
negl
pushl
push
imul
testb
or
add
int
and
scas
push
test
mov
cltd
fisttps
scas
push
mov
cmp
shrb
xorps
mov
not
cmp
out
call
cmpsl
into
outsb
into
mov
cmp
cmpsb
sub
and
mov
jmp
call
leave
data16
sub
popf
sahf
add
insl
xchg
pop
mov
loop
fstpl
pop
dec
mov
jg
cmpsb
or
shrl
ljmp
push
jp
xchg
ret
call
into
push
mov
xor
inc
xchg
movsb
pop
stos
cmp
leave
xor
mov
rcrb
push
and
clc
xchg
loopne
arpl
clc
jno
insl
mov
call
aad
out
pop
sahf
pop
cltd
or
andb
push
inc
lock
cmpsb
stc
pusha
mov
push
or
xchg
loop
mov
out
or
imul
pop
mov
cmp
in
rorl
les
out
sub
mov
ficompl
pop
mov
enter
pop
outsl
icebp
cli
gs
jo
xorb
ltr
inc
pop
imul
pop
or
xchg
ss
roll
xor
jno
lret
jmp
or
mov
rorb
jl
pop
cli
cmp
test
movsb
mov
sbb
mov
filds
ror
adc
nop
and
enter
test
mov
popa
push
int
negl
and
sub
enter
sub
mov
daa
xchg
push
jg
or
push
clc
dec
mov
add
fcmovbe
mov
pop
jecxz
mov
lret
lret
adc
sbb
add
mov
mov
jne
sub
push
cmp
add
sbb
fs
add
scas
mov
dec
mov
cmpl
jns
add
fmull
add
mov
lea
scas
jae
push
and
pop
sbb
jge
jp
es
dec
stos
andl
enter
mov
out
dec
in
lcall
add
jb
js
test
or
inc
xchg
pop
cmpb
lret
nop
movsl
cltd
push
in
mov
inc
dec
fstl
push
xchg
adc
jl
add
les
jne
jp
mov
js
mov
loopne
loopne
push
xor
sbb
lea
pop
add
es
test
imul
lret
xor
inc
adc
sub
jl
fnstcw
xchg
or
repz
mov
add
inc
lock
lret
inc
jecxz
jbe
insb
lret
cmp
je
in
loop
fildll
jl
bound
arpl
fnstsw
sbb
lcall
test
xor
push
adc
adc
inc
dec
rorl
adc
dec
mov
std
or
loopne
ja
hlt
xchg
hlt
push
jae
ds
ret
cmp
aad
leave
or
mov
push
xchg
sti
lret
neg
out
pop
cmp
or
sbb
imul
dec
ja
stos
xchg
mov
cmpsl
jmp
sti
lret
neg
out
pop
cmp
or
sbb
imul
dec
ja
stos
xchg
mov
cmpsl
jmp
cli
lret
neg
out
pop
cmp
or
sbb
imul
dec
ja
stos
xchg
mov
cmpsl
jmp
sti
dec
negl
aam
les
sbb
repz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
arpl
jae
inc
out
push
jle
inc
pop
pushl
push
mov
ret
outsb
sarl
push
mov
xchg
cs
ds
jae
inc
out
push
and
adc
repz
repz
outsb
fnstsw
popa
sbbl
outsb
xchg
jp,pt
push
pop
inc
dec
cld
cmp
adc
pushf
xor
ja
pop
les
or
sbb
inc
fwait
and
adc
gs
or
dec
lods
mov
stos
repnz
pop
imul
cmp
bound
imul
aas
push
sub
fldl
iret
fnsave
xor
sti
jecxz
repz
out
xchg
bound
arpl
mov
ja
fmull
adc
mov
push
negb
sbbb
or
xchg
insl
xor
ss
mov
sub
dec
cmpsb
jecxz
jecxz
xor
jle
pop
mov
jl
add
push
xchg
arpl
lods
fmul
xor
sbb
jle
mov
pavgb
subl
mov
inc
push
hlt
xor
and
cli
enter
jle
ss
cs
push
setl
fisubs
lods
daa
rclb
push
icebp
dec
adc
jecxz
lahf
sbb
popa
push
outsl
pop
or
adc
dec
loope
lods
add
inc
shlb
or
push
cmc
dec
notl
cwtl
pop
cltd
das
mov
xor
jecxz
repz
ret
outsb
sarl
push
mov
subl
ds
jae
inc
out
push
and
adc
ret
outsb
sarl
push
mov
subl
ds
pop
or
dec
and
dec
pop
push
mov
ret
ss
or
aam
insb
out
lret
mov
subl
pop
add
in
int
add
lds
cld
es
test
fcmovne
jno
lods
sbbb
sub
pop
insl
adc
add
cmp
adcl
scas
addr16
push
mov
cs
nop
mov
ljmp
leave
jo
ficompl
mov
out
cmp
mov
shrb
insl
fisttpl
in
rcrb
notb
ret
mov
pop
outsb
call
add
push
push
cmp
out
ret
push
xchg
sbb
fs
push
cmp
das
sbb
adc
cld
inc
jmp
popf
pop
lods
xor
pop
js
adc
pushf
mov
xchg
adc
mov
inc
pop
or
fwait
popfw
add
cmp
lods
rorl
inc
add
loopne
imul
iret
faddl
scas
icebp
ret
out
insl
push
divb
mov
addr16
ljmp
xchg
dec
dec
fstl
fcmovnb
ret
push
imul
rcrb
scas
mov
imul
mov
cmp
inc
insl
gs
je
cltd
scas
dec
jb
jbe
int3
popf
inc
jecxz
cld
ficoms
jge
xchg
xchg
xchg
popa
dec
shlb
clc
mov
pop
push
lods
dec
mov
ficoms
js
ds
inc
cmp
xchg
cmp
pinsrw
or
lods
cmc
add
ret
addr16
popa
inc
jl
adc
mov
lods
outsl
add
je
icebp
sub
jb
sbb
push
pop
test
test
int3
std
or
scas
fwait
xor
sbb
push
cmp
test
ficoml
add
jnp
add
rol
mov
insl
mov
adc
nop
xlat
push
andb
dec
xor
jns
inc
xchg
ljmp
cmpsb
push
ja
shll
push
insl
xchg
mov
lret
adcb
dec
pop
add
and
outsl
roll
shlb
aas
adc
cltd
mov
and
jecxz
inc
icebp
iret
movsb
jl
arpl
mov
das
add
push
loopne
dec
mov
es
jnp
popf
ret
aad
insl
jb
adc
jmp
fnstcw
aam
jg
xor
pop
xchg
pop
inc
push
dec
rcl
test
inc
xchg
jg
mov
lahf
and
sbb
aad
jl
scas
bound
jo
mov
jg
sub
popf
lods
mov
sbb
daa
mov
pop
jb
aas
je
pop
pop
lods
add
dec
dec
push
mov
adc
shrl
xchg
loopne
push
cs
dec
hlt
pop
lds
fiaddl
loop
push
test
mov
xor
or
adcl
test
mov
mov
adc
jmp
pop
mov
add
outsl
add
xor
sahf
jge
stos
enter
pop
insl
jb
scas
lret
or
test
mov
sbb
jne
or
xchg
mov
sbb
mov
pop
dec
test
pop
sub
cmp
cwtl
add
inc
mov
inc
inc
iret
push
rorb
repnz
test
mov
cmp
xchg
xchg
aas
pop
aas
fdivr
ljmp
repnz
mov
inc
ficompl
cli
sub
sub
out
or
xor
mov
outsb
idivl
in
mov
sbb
sub
push
andl
insl
fdivrl
lock
pop
incl
leave
ss
cltd
pop
pop
dec
not
cmp
jb
jg
xor
icebp
pop
pop
jne
lea
clc
into
fldenv
pop
movsb
cmp
push
mov
jo
sbb
push
pushf
fsts
sbb
les
rcrb
mov
jo
add
mov
or
dec
mov
jg
popa
lret
push
push
enter
and
and
iret
mov
icebp
test
or
jo
xor
into
icebp
sub
mov
out
jns
sbb
adc
cmp
jb
or
out
push
lret
xchg
pop
stc
pop
cmp
cmp
push
xor
dec
sbb
add
fsubrs
lahf
popf
jne
push
xchg
movsl
xchg
or
push
daa
mov
sbb
lret
stos
jmp
stos
fisubs
cmp
cli
repnz
jle
and
and
xchg
hlt
pop
xchg
jp
mov
dec
dec
fisttps
cmp
adc
pusha
fnstsw
push
movsb
es
pfcmpeq
mov
bndldx
insb
popa
paddusw
pusha
repnz
arpl
xor
into
ja
mov
data16
mov
cmp
xchg
enter
int3
inc
cs
lods
cld
cli
lcall
cwtl
jnp
jo
mov
cli
pop
inc
sub
mov
lods
gs
repnz
mov
pop
and
jl
lock
data16
aas
or
test
mov
into
orb
inc
sbb
cmp
leave
push
outsb
or
outsl
cmp
xorl
jg
sbb
divb
inc
xchg
leave
ret
lret
jecxz
ret
dec
mov
sub
repz
fdivs
mov
fwait
or
mov
xchg
mov
pop
xchg
movsl
fidivrl
cmc
inc
aad
jo
mov
inc
xchg
push
mov
jns
mov
pop
sub
xchg
lock
mov
push
fwait
or
cmp
or
mov
dec
and
neg
inc
cmp
stos
in
call
aas
and
cmp
insb
xlat
ja
cmpsb
fcoml
cltd
and
inc
mov
sub
mov
mov
idivb
cs
not
test
sub
es
sbb
stos
clc
jmp
daa
hlt
daa
iret
stc
testb
sub
in
sahf
aam
mov
popa
lahf
shrb
outsl
xor
cwtl
inc
fisubrl
sahf
inc
popw
fnsave
out
popf
xchg
js
xchg
adc
xor
add
sub
lods
add
aaa
pop
inc
shlb
cmp
fcmovb
mov
mov
cmp
popa
mov
xorb
aas
xchg
dec
fistpl
lret
pushf
std
cmp
cmp
aad
xorb
scas
in
outsb
mov
icebp
fnstcw
push
out
sub
rcl
call
sub
in
enter
and
icebp
stos
jge
push
or
dec
dec
push
push
xlat
xor
lock
dec
adc
es
subb
adc
inc
xchg
fildll
dec
xor
push
jge
das
mov
fdivs
xchg
dec
dec
jb
leave
inc
sbb
outsb
pushf
out
or
popf
cmp
dec
inc
mov
rcrl
scas
nop
cmp
ja
stc
add
mov
mov
imul
inc
fidivrl
fstps
mov
push
aaa
pop
sub
pop
mov
ds
xchg
push
cmpsl
int3
bound
cmp
mov
jnp
das
mov
mov
fcoms
addr16
fisubrl
cmpsl
push
leave
unpckhps
sbb
adc
mov
and
aaa
and
sub
ds
cmpsl
pop
jbe
xlat
mov
mov
jmp
cmc
add
dec
lods
inc
mov
pop
cmp
lock
int3
jns
aas
popa
out
and
inc
fwait
ljmp
ret
clc
cld
outsb
stos
mov
sbb
je
incb
popa
dec
mov
int3
cmp
insl
mov
loop
jno
rcll
and
push
xchg
mov
xor
adc
stc
sarl
jns
jbe
cmp
ret
xchg
mov
sub
and
shll
cmp
lret
fcomp
mov
stc
adc
adc
dec
adc
mov
xchg
jmp
cltd
jmp
les
push
int
mov
dec
in
sub
sbb
pop
sarl
jo
and
filds
cwtl
dec
andb
popf
test
and
adc
sbb
out
lcall
ja
sbbb
adc
mov
sub
out
mov
xlat
fcomps
stos
pop
ret
inc
addr16
sti
and
pop
inc
addr16
mov
xchg
aaa
sbb
mov
les
fldt
mov
cli
push
push
mov
pop
dec
adc
adc
lret
clc
sbb
adc
andb
xlat
loop
sti
cmc
jg
xor
mov
mov
mov
stc
or
lahf
sbb
or
mov
cmp
cli
push
out
fcmovbe
popa
dec
push
xchg
out
or
push
sub
mov
aam
xchg
cs
outsb
xor
mov
sub
rcrb
repnz
and
xchg
loopne
cmp
ds
movsl
mov
in
dec
addr16
bound
decl
jmp
sbb
cmp
push
nop
loope
cmp
int
push
add
insl
fprem1
adc
push
push
repnz
sub
inc
out
jns
enter
leave
shrb
ss
leave
stos
xchg
pop
roll
shlb
mov
loop
aam
ja
xor
cmp
dec
pushf
cwtl
add
out
and
inc
in
mov
mov
popf
xor
ret
popf
xchg
daa
jne
rcr
ror
dec
cmp
enter
dec
add
sub
dec
in
mov
dec
rclb
ds
xchg
push
call
adc
js
rorl
je
jl
dec
ss
dec
adc
call
adc
inc
push
jg
sbbb
push
inc
movsl
jecxz
lret
mov
dec
cmp
mov
pop
fucomip
rcr
ret
aaa
push
inc
aam
rolb
lea
jmp
pop
adc
push
sub
in
sub
imulb
imul
push
icebp
out
jno
popf
mov
or
arpl
into
xor
push
jo
push
scas
out
repz
xlat
dec
and
pop
push
int
lea
test
out
sbb
fstps
js
clc
dec
mov
addr16
xchg
sub
popf
sbb
nop
push
insb
pop
mov
outsl
and
negb
les
js
into
jne
dec
test
test
adc
jmp
cmp
leave
scas
push
ljmp
push
sahf
dec
std
out
test
push
mov
jb
jp
add
ds
cli
pushf
jo
shrb
push
pop
pusha
ljmp
dec
jnp
fwait
mov
adc
push
inc
mov
bound
mov
mov
mov
insl
fucomp
pop
movsb
inc
cmp
sbb
fists
mov
aas
add
rolb
iret
test
push
jmp
lock
pushf
push
dec
add
scas
sbb
cs
rsqrtps
add
mov
aad
and
sbb
lea
push
into
loopne
fmull
mov
sbb
sbb
out
cmp
adc
f2xm1
pop
add
repnz
lds
or
mov
sub
xor
push
insb
aas
jp
jmp
shrb
cld
aas
adc
jg
and
mov
xor
mov
test
xchg
lcall
push
sti
fistpl
fistpl
mov
xlat
inc
xchg
stos
inc
sub
shr
sbb
xor
addb
out
sbb
mov
mov
pushf
push
push
pop
jns
mov
xchg
cmp
in
xchg
cmp
scas
sbb
xor
push
outsl
mov
cs
adc
insb
cmpsl
call
sbb
cs
popf
adcl
push
aas
mov
cs
inc
push
mov
mov
and
jo
mov
push
jl
and
andl
aaa
push
jg
out
xor
sub
into
int3
cmc
ret
or
sarl
xor
ret
sahf
push
and
imul
fldl
adc
test
sbb
inc
add
clc
jbe
lea
insl
inc
pop
test
outsb
pop
and
lahf
outsb
cwtl
shll
or
fsts
mov
scas
mov
or
jecxz
xor
aad
sub
js
pop
push
jp
cmp
int3
and
mov
stc
cs
movhps
je
push
add
int
icebp
neg
mov
mov
imul
mov
jmp
sbb
jl
ret
in
es
mov
cmp
adc
cld
sbb
mov
mov
xchg
cmp
movsl
loopne
mov
pop
xchg
pusha
stc
pushl
fwait
ss
jecxz
jmp
ret
push
lret
jae
in
dec
outsl
xor
rcrb
push
dec
dec
sbb
lcall
cld
inc
inc
mov
and
outsl
mov
int3
fildll
fisttpll
push
mov
ficoms
jl
dec
mov
inc
push
inc
jp
jne
mov
xchg
mov
jo
sbb
xchg
xchg
inc
mov
jnp
jge
ss
sub
inc
enter
inc
nop
and
gs
loopne
xlat
adc
std
xor
or
es
pop
addb
inc
cmpsl
and
lds
cli
and
loopne
aas
cmpsb
aas
lret
xor
pop
add
xlat
scas
fs
cli
jmp
pop
inc
jg
add
sbb
fsubrs
xor
dec
push
jle
jmp
fdivrs
je
jbe
sti
jp
jbe
enter
sub
mov
rorb
mov
pop
shrb
lcall
cmpsl
addr16
testb
insb
gs
test
xor
mov
adc
push
loop
rorl
in
push
das
mov
std
xchg
das
fidivl
sub
lahf
cmc
cmp
sbb
dec
loope
push
popf
out
sub
xor
loop
ja
neg
cmp
cli
xchg
out
nop
xchg
inc
pop
and
dec
repz
dec
into
js
shrd
sub
push
mov
pop
and
jb
filds
mov
insl
mov
xchg
push
jo
shlb
pop
das
xchg
int3
xor
pop
ret
hlt
xchg
push
aaa
mov
adc
xchg
or
movsl
icebp
pop
call
test
fidivrl
mov
mov
pop
out
mov
jmp
das
cli
cld
cmpsb
fsubrp
adc
in
movsb
mov
sbb
jo
or
enter
shrb
dec
push
jno
fisubs
std
sub
idiv
mov
lahf
das
lahf
mov
stos
xchg
movsl
test
pusha
xor
sub
and
mov
mov
inc
inc
cmp
sub
sub
out
fwait
rcll
stc
dec
outsl
jb
xor
add
cmp
movb
push
int
pushf
inc
nop
inc
cmp
cmp
add
and
cmp
jle
jbe
cli
xor
mov
shll
shrb
daa
imul
adc
mov
pop
enter
xor
inc
and
jno
xor
mov
shl
iret
test
xchg
adc
xchg
std
inc
int
lods
sub
pusha
mov
lods
mov
and
lahf
mov
jno
fsubl
cmp
in
hlt
inc
popf
push
ret
addr16
xlat
inc
push
cs
or
mov
add
in
cld
cmp
imul
sti
mov
pop
arpl
cwtl
arpl
int3
jmp
cmp
aam
sub
int3
jle
mov
outsb
mov
jbe
dec
lds
adc
xchg
inc
mov
notl
or
cmp
loop
js
lds
pop
cld
xchg
andl
mov
sbb
or
shld
stc
mov
into
mov
fsts
mov
add
push
pop
aas
cmpb
cmp
xchg
pop
ja
movsb
testb
push
adc
int3
and
mov
mov
push
dec
and
pop
mov
push
stos
xchg
jmp
imul
pop
testl
ss
rorl
cltd
sub
daa
jnp
clc
add
xlat
loopne
pop
cmp
dec
lods
fcmovu
ror
add
fidivrl
sub
loope
cwtl
addr16
sbbb
sub
cmc
push
leave
xchg
mov
stc
sti
cmp
inc
cmp
scas
scas
cmp
ss
push
repz
inc
push
or
test
add
aad
xchg
push
ret
or
mov
mov
xchg
mov
mov
pusha
out
aaa
imul
sarl
cmp
cmp
adc
cs
jo
mov
lcall
push
mov
mov
mov
xchg
lahf
pop
xchg
and
orb
cmpsb
mov
sbb
sub
mov
add
dec
into
aas
cmp
sub
xchg
inc
add
and
add
sub
jecxz
jg
movsb
jg
and
cld
icebp
sub
ljmp
mov
andb
iret
dec
xchg
icebp
rcrb
cltd
jbe
push
jge
xchg
add
mov
jmp
cmp
lret
mov
test
cmp
ja
cmp
push
mov
jno
ret
pop
xor
dec
sbb
cmpsl
pop
rorb
test
push
add
sub
test
mov
aam
xchg
or
sub
shrl
lahf
outsb
repz
int3
fneni(8087
xor
jno
mov
mov
ja
pop
mov
mov
jbe
fcomps
addr16
mov
hlt
sbb
insb
ja
pop
pop
popf
mov
aad
rcll
adc
jbe
cmp
popa
inc
outsb
add
push
in
inc
test
fwait
pushf
div
adc
adc
adc
push
cld
adc
nop
pushl
inc
or
ret
jg
repz
ds
xor
les
push
lods
mov
lret
mov
imul
lret
cmp
ja
cld
mov
std
movsb
adc
push
cs
or
icebp
or
mov
push
xlat
out
jns
mov
iret
scas
xor
lcall
mov
ljmp
nop
push
xchg
add
jb
add
scas
lret
sbb
cmp
pop
pop
push
xor
inc
icebp
jge
cltd
sbb
lahf
mov
test
out
pop
jo
inc
cmpsl
cmp
jecxz
xchg
lds
sarb
xchg
adc
je
cld
add
dec
fwait
sub
xchg
repnz
ret
out
mov
dec
rcr
imul
test
popf
inc
and
cli
jb
mov
jmp
add
bnd
adc
jnp
mov
and
mov
out
loop
sub
sbb
hlt
jae
pop
data16
fildl
sbb
fwait
cs
aad
adc
jg
sbb
sub
and
sub
xchg
mov
dec
or
mov
add
lret
xchg
and
decl
sbb
pop
push
popf
lahf
inc
icebp
adc
fcmovu
lea
xor
push
faddl
or
mov
push
fmull
ja
ret
xor
mov
push
movsb
test
shr
add
xor
cmp
inc
stos
pmulhw
lret
jg
scas
imul
ret
cltd
adc
stos
rcll
sub
pop
insb
ljmp
lods
ja
cltd
and
mov
sub
mov
jbe
xlat
les
jo
cmc
mov
mov
push
pop
xlat
xchg
nop
pop
sar
sub
dec
icebp
out
dec
sbb
je
cmp
fimuls
and
or
push
pop
pusha
sub
xchg
pop
pop
cli
js
sti
nop
sbb
int3
sub
stos
stc
scas
fldcw
pop
mov
ds
fnsave
in
sbb
jo
fcmove
jae
push
mov
sub
mov
jl
dec
mov
push
xchg
add
mov
std
push
in
pop
push
loop
and
lahf
sti
cmp
lods
gs
cmpsl
sub
pushf
inc
sbb
out
test
int
out
cli
mov
rclb
sbb
add
sub
lods
loope
lcall
sub
mov
mov
dec
aam
push
pop
inc
push
aaa
sub
aaa
sbb
lods
bound
mov
ljmp
gs
pop
pop
insb
scas
pop
ret
sbb
jns
add
imull
xor
loope
cmpsb
adc
push
mov
icebp
dec
cmpsl
loopne
jne
cs
sti
or
push
jge
xchg
lea
jo
ret
shlb
sbb
insb
js
test
and
and
adc
and
push
push
ror
add
inc
push
cmp
fsubrl
add
rol
pop
push
cltd
dec
sahf
xchg
stos
nop
enter
dec
enter
xor
shrb
movsl
adc
cs
xchg
loopne
daa
es
ja
and
lret
xchg
call
sti
push
cltd
adc
inc
dec
inc
cmc
out
arpl
cmp
scas
inc
test
stos
scas
jns
scas
mov
fwait
lock
jmp
stc
and
add
push
out
push
and
adc
ret
outsb
sarl
push
mov
subl
ds
jae
inc
out
push
and
adc
ret
outsb
sarl
push
mov
subl
ds
jae
inc
xchg
push
and
adc
ret
outsb
sarl
push
mov
orl
ds
jno
inc
out
push
jmp
mov
sahf
subl
mov
imul
loope
shrl
or
or
cmpsb
xor
cmp
jp
mov
mov
fs
movsb
sub
in
hlt
jp
mov
and
xor
test
push
fisubl
cli
test
xchg
sbb
aam
in
hlt
jp
mov
dec
fidivl
inc
cwtl
cmp
fisttpl
lock
movsb
dec
fcom
or
imul
lods
stos
cmc
in
add
adc
xor
add
pop
clc
cmp
cmp
or
aaa
xchg
cli
fldt
push
push
xor
stc
push
aam
pushf
int3
mov
sbb
stos
sti
add
inc
fs
hlt
jp
lret
add
xchg
sbb
sub
popa
xor
mov
pop
inc
mov
adc
fstpt
je
inc
cld
dec
popf
dec
aam
addr16
mov
in
iret
inc
fwait
mov
add
stos
jns
imul
sub
dec
push
andl
call
in
fldt
fldcw
and
hlt
cli
dec
or
les
pop
in
hlt
jp
mov
and
xor
inc
lret
fs
int
fnstsw
cmpsb
sbb
out
repz
dec
aam
cmpsl
push
mov
loope
icebp
push
shrl
insl
les
xchg
je
add
inc
mulb
cld
xor
inc
movsl
cmp
loope
xchg
outsb
lret
pop
fmuls
es
in
hlt
jp
mov
and
xor
inc
lret
fs
movsb
sub
in
hlt
jp
mov
and
xor
inc
lret
fs
cmp
fwait
jmp
dec
add
xchg
and
cld
shl
mov
adc
test
lods
jmp
mov
xchg
testb
push
xor
fisubrl
xlat
mov
xor
or
mov
or
mov
sahf
xchg
out
hlt
mov
dec
xor
ret
lcall
into
push
and
cs
sbb
mov
sub
int
int
and
push
movsb
lahf
test
hlt
inc
imul
mov
or
adc
arpl
mov
neg
push
add
lods
jnp
ss
jmp
push
int3
cmp
pop
ja
jnp
pop
movsl
jbe
push
jno
fwait
pop
icebp
fsubr
jbe
mov
mov
adc
dec
jo,pt
mov
sbb
sub
dec
pop
hlt
hlt
test
inc
in
icebp
or
je
ret
retw
push
mov
in
or
out
aam
and
dec
mov
inc
dec
scas
daa
inc
or
mull
adc
or
mov
test
jb
dec
mov
fistl
lea
movsb
xor
jp
lcall
inc
xor
push
and
mov
movsl
stos
movsb
and
out
cli
dec
fistpll
push
loopne
movlhps
lock
pop
xchg
adc
sub
push
test
cmp
push
lret
popf
in
xchg
hlt
jne
and
pop
lock
push
popa
jb
fimuls
aad
mov
fbstp
fs
sahf
pop
stc
cmp
gs
mov
push
sub
xor
mov
lret
jle
sub
sub
shl
test
xchg
popa
adc
mov
pusha
fcmovnbe
dec
popf
cmp
inc
daa
test
daa
sbb
pushf
arpl
outsb
outsl
rep
repz
cld
lahf
test
xchg
cmpl
add
das
iret
sub
jmp
cmp
push
insb
mov
mov
aam
adc
lock
and
testb
repz
lods
or
sub
pop
add
fcompl
mov
dec
addb
mov
jg
mov
rcrb
mov
dec
or
inc
lcall
cmp
scas
sbb
inc
add
adc
jne
sbb
mov
outsb
ss
push
sarb
mov
andl
insb
mov
lods
jmp
hlt
inc
insl
icebp
lret
test
test
xchg
adc
addr16
xchg
mov
std
pop
push
lcall
sbb
xor
xor
fsubrs
add
in
inc
imul
popa
or
inc
and
cld
ja
xchg
pop
mov
jno
adc
jmp
add
and
cmp
and
jle
ds
cmp
arpl
fidivl
test
pop
xchg
mov
mov
jmp
loop
cmp
lock
mov
cltd
pop
aas
shrb
fistpll
mov
push
call
fidivrl
adc
stos
fwait
xlat
push
js
or
js
aad
in
fadd
jge
cmp
outsb
lcall
adc
nop/reserved
fmuls
pop
outsb
dec
pop
sub
sub
pop
in
add
mov
dec
rclb
jmp
pop
cmp
xchg
loop
call
sub
scas
sarb
cmc
cwtl
jle
add
push
mov
add
cmp
int3
dec
ficoml
push
scas
sub
jnp,pt
outsl
test
lods
in
subb
sti
push
cmpsl
pop
jmp
mov
sub
sub
sub
inc
int
fnstenv
jns
push
popf
mull
insl
loop
add
mov
push
fisttpl
cltd
in
mov
pop
dec
inc
loop
lods
fildll
call
cmp
idiv
cs
sahf
push
rolb
xchg
cmp
iret
popa
jmp
pop
psubb
daa
or
push
pop
inc
enter
jle
jbe
test
mov
pop
xor
in
adc
pop
sbb
mov
cmp
xchg
mov
popf
jne
or
das
sahf
icebp
fidivl
lret
js
fistl
sub
mov
mov
adc
and
fcoml
and
cmpsl
mov
add
loopne
bound
bswap
mov
cld
ss
jl
mov
int3
adc
xor
int3
xorl
insb
stos
stc
mov
pop
xor
sti
sbb
jbe
mov
rorb
jb
js
std
bound
jae
mov
mov
mov
in
ds
inc
cmc
adc
sbb
iret
xchg
and
push
inc
in
pop
mov
xor
rolb
in
xor
sub
fs
mov
cmp
or
inc
sarb
mov
add
test
or
sub
das
mov
push
movsb
jp
not
xchg
and
cmp
lcall
lea
movsb
insb
popf
pop
dec
pop
repnz
js
jle
imul
sbb
aas
inc
and
push
jb
vmovaps
sarb
inc
pop
lock
hlt
popf
aad
testl
lea
push
dec
popf
xor
or
mov
add
popf
int
inc
sbb
mov
or
sub
loop
pop
cmp
je
jno
jae,pt
and
pop
dec
stc
popf
cmp
mov
je
push
inc
test
lret
lret
push
stos
faddl
stc
mov
pop
or
leave
ds
pop
lods
movsb
scas
cwtl
ficoml
add
data16
dec
push
jg
add
fwait
js
add
adc
sahf
inc
sub
loopne
and
mov
mov
sti
pop
pop
mov
push
jmp
call
les
pop
inc
push
lea
jecxz
adc
or
bswap
popf
imul
dec
mov
jno
jno
inc
mov
xchg
fisubrl
dec
dec
push
dec
les
sub
cmp
jbe
stos
sbb
inc
xchg
adc
inc
gs
push
insb
xor
xchg
stc
ret
or
icebp
jp
sbb
js
aaa
jae
mov
les
fists
fnstsw
mov
shll
jne
xlat
push
movsl
push
aaa
add
movsl
jno
inc
outsl
or
inc
loopne
or
lret
fs
fwait
loop
clc
inc
push
jg
mov
sahf
mov
inc
or
mov
and
movsb
fnstsw
test
mul
sbb
out
repz
jge
mov
repnz
push
inc
mov
lods
aad
outsb
add
lcall
outsl
shr
cmp
loope
xchg
jne
out
movsl
mov
leave
arpl
mov
inc
cmp
mov
bound
mov
cltd
pop
mov
adc
cwtl
adc
lods
ljmp
dec
sub
and
movsl
sbb
adc
test
and
mov
or
enter
pop
add
int3
xor
push
inc
mov
mov
push
push
lret
sbb
jg
mov
mov
out
ss
adc
xor
inc
push
notb
mov
out
lea
out
dec
mov
push
jnp
stos
ret
jmp
jo
pop
adc
sbb
sahf
call
bound
aas
mov
xchg
lea
push
add
jge
push
inc
lret
xor
cs
leave
mov
sti
enter
divl
mov
pushf
push
xor
dec
push
jmp
in
mov
repz
adc
movsb
xor
mov
iret
in
js
add
jno
pop
dec
mov
das
repnz
mov
in
push
cmpsl
dec
mov
sbb
scas
popa
std
push
push
cmp
mov
inc
enter
inc
leave
push
jp
mov
xchg
jns
dec
movsb
jle
pop
push
xchg
jne
mov
dec
test
mov
addr16
cmp
filds
jo
push
push
cli
or
add
shlb
cwtl
ss
call
jnp
or
flds
cmp
add
movsb
dec
dec
dec
dec
mov
pop
fcompl
mov
sub
fistpll
lcall
push
out
lds
fdivrs
movsb
vsubss
jns
sarl
pushf
negl
addr16
loop
in
jns
fcompl
les
pushf
push
mov
and
ficoml
aam
mov
sbb
mov
rol
sbb
sbb
xchg
xchg
les
add
mov
push
test
push
pop
aaa
ds
mov
repnz
leave
test
sub
loope
and
hlt
dec
test
scas
mov
mov
cmp
mov
and
dec
push
leave
xlat
mov
sbb
sub
adc
in
jb
lock
repnz
and
leave
sarl
cmc
ss
push
aad
push
aaa
xchg
adc
mov
mov
sub
hlt
mov
mov
inc
aaa
jnp
pop
pop
clc
xlat
in
imul
lahf
pushf
jbe
mov
mov
xorb
pop
test
cmc
ficompl
icebp
push
xor
xlat
incb
mov
xor
xor
dec
push
xchg
jo
dec
je
lock
mov
or
fists
push
jb
fsubp
jge
and
or
dec
or
popa
push
xlat
sahf
dec
push
or
xorb
lahf
xlat
add
ljmp
jae
pop
mov
adc
mov
lock
movsl
mov
or
mov
dec
dec
arpl
jle
dec
push
dec
fimull
stos
mov
ficoms
push
sbb
jl
jg
add
xchg
repz
or
imul
test
test
jns
lock
mov
adcl
mov
int
fmulp
and
adcb
int3
cwtl
cmpsl
cltd
out
mov
cmp
cwtl
in
iret
test
mov
cmp
push
mov
inc
or
and
adc
out
into
sahf
fstpl
mov
or
fsubrs
in
repz
fldl
xor
push
outsl
loope
sub
mov
inc
mov
xor
shrb
movsb
cli
adc
enter
push
ja
mov
fcoml
aaa
insl
clc
data16
loope
out
in
push
sbb
test
pop
aam
gs
jmp
test
rol
inc
jg
int3
daa
mov
ficomps
and
mov
pop
sub
or
mov
lret
adc
sarl
fsubrl
jge
jno
pop
ljmp
add
mov
mov
fwait
adc
jecxz
pusha
mov
dec
mov
cmp
or
test
aaa
decl
in
mov
es
dec
popa
mov
sbb
adc
add
dec
jmp
mov
lea
pop
aad
loop
cmp
call
clc
or
or
loopne
add
mov
ja
sub
xchg
cwtl
cmpsl
andl
mov
jle
ds
push
xor
sbbl
mov
aad
cld
nop
ds
test
repz
mov
sub
movsl
add
pop
cmp
push
sub
add
popa
jae
in
movsl
push
mov
loopne
jbe
stos
or
adc
je
jg
jae
xlat
xchg
stc
scas
int
fdivr
sbb
pop
adc
inc
xchg
mov
outsl
mov
addr16
adc
popa
mov
sarl
push
cmp
mov
xchg
daa
in
insl
scas
mov
scas
and
push
pop
scas
ret
sub
push
mov
out
clc
test
mov
adcl
cli
inc
pop
xchg
mov
repnz
enter
mov
pusha
mov
dec
std
inc
sub
aas
mov
pop
jecxz
repz
in
negl
cwtl
aam
sahf
insl
aaa
sub
data16
or
je
aad
add
ficoml
nop
or
and
icebp
mov
jne
scas
pop
ficoml
mov
cmpsb
outsl
push
mov
inc
pop
sub
movsl
in
rcl
jl
cmp
jbe
insl
in
shr
shrb
pop
cs
fsubs
xor
inc
es
jp
outsl
loop
dec
push
jmp
cltd
mov
shlb
sbb
fdivr
adc
inc
sub
dec
cli
xchg
add
sub
cmp
jg
adc
orl
pop
nop
xor
push
js
lods
push
jle
jno
in
mov
adc
sbb
mov
mov
into
mov
sbb
push
movb
pop
jae
mov
aad
pop
inc
xchg
sbb
fs
lds
dec
add
push
stos
push
movsl
sub
or
xchg
mov
js
inc
push
push
sti
ss
cmc
test
cli
lret
shll
repz
inc
mov
popl
stos
je
scas
out
shrl
or
sbb
xchg
inc
outsb
mov
insb
and
jns
pushf
mov
jne
aad
jns
in
adc
enter
pusha
mov
ds
lds
fwait
inc
scas
mov
dec
sbb
adc
je
cld
insl
pop
imul
jnp
mov
jae
jl
jmp
in
pop
lcall
movsb
lock
leave
icebp
sahf
data16
sub
xchg
rcrl
xor
sahf
shll
pop
add
cmpsb
xlat
xor
daa
push
xor
and
sub
pop
pop
sahf
inc
ret
lods
bound
std
sbb
jge
jno
mov
xchg
arpl
in
or
in
test
aaa
test
push
jb
pop
mov
xor
mov
xchg
xlat
jb
sbb
lret
fs
dec
push
jmp
pop
into
push
sbb
mov
lea
xchg
imul
push
into
pop
imul
pop
mov
mov
sub
leave
insb
cwtl
or
or
dec
xchg
or
cs
cs
ret
jns
imul
sbb
icebp
pop
lahf
jnp
fldl
ret
xchg
mov
mov
aas
repnz
movl
push
push
pop
add
push
ficoms
icebp
in
inc
push
mov
and
mov
test
scas
loop
or
arpl
sarb
dec
add
in
cmp
mov
insl
mov
addr16
mov
movsl
xor
jg
push
mov
pop
push
enter
mov
mov
sub
test
cmpsl
pop
lds
pop
inc
dec
ss
insb
xchg
jbe
pop
pushf
add
inc
xor
faddl
xchg
inc
or
sbb
test
test
sub
popf
jbe
jns
jge
mov
jecxz
or
cmpsb
push
imul
ds
fmulp
add
inc
movsb
test
dec
push
mov
int
stos
mov
ss
scas
dec
fdivrs
test
push
aad
ja
jl
mov
jmp
jns
hlt
les
mov
add
stc
jbe
mov
dec
pop
xchg
push
mov
hlt
js
test
fldcw
negl
imul
idivl
fisttps
add
aas
je
lds
psubusw
mov
call
aad
mov
in
mov
rcl
fwait
dec
cli
push
bound
repz
ss
fisubrs
into
aas
mov
pop
fsts
or
inc
xlat
inc
pop
notb
leave
out
cld
into
xchg
subl
xchg
mov
rcll
cmp
mulb
movsl
call
mov
vandnps
sbb
stc
dec
into
test
inc
mov
or
fmul
out
cwtl
mov
inc
add
dec
xchg
jno
and
leave
pop
jmp
adc
sub
mov
pop
mov
push
movsb
or
jnp
ss
or
mov
popf
jnp
sub
inc
nop
repnz
jge
sbb
leave
daa
jg
dec
fwait
jae
dec
mov
fstpl
or
movsb
imul
add
and
push
movsl
lock
pushf
nop
add
ds
adc
sbb
xchg
lret
adc
movsl
fadds
mov
jne
xchg
mov
dec
pop
rolb
cli
xchg
testl
sahf
adc
lds
add
movsl
lret
mov
pop
outsb
aad
push
popa
dec
lret
stos
bound
test
scas
pusha
inc
test
inc
mov
int3
dec
rcll
or
add
add
sub
mov
leave
in
test
addr16
sub
stos
sub
dec
punpckhbw
push
divb
or
mov
in
pop
mov
mov
lahf
test
popf
popf
loopne
pop
arpl
push
mov
add
add
xlat
scas
jle
lea
lea
cmp
jae
push
test
cld
cli
addb
xchg
mov
adc
or
sbb
loop
lea
repz
mov
inc
ljmp
push
ds
adc
or
inc
add
je
std
mov
lds
sub
sbb
add
mulb
movsb
in
cmp
cltd
call
adc
stos
mov
xchg
icebp
inc
push
fiadds
dec
addr16
ds
dec
jmp
xor
lret
ja
fistps
mov
push
or
mov
push
rcll
jl
aaa
gs
dec
jmp
cmp
loopne
or
sbb
cmpsl
push
cmp
popa
add
sti
dec
jp
mov
shrl
xor
and
scas
and
enter
adc
clc
loopne
jl
or
sarl
xchg
add
inc
fmull
jne
xchg
jno
xorl
and
sub
cmp
ret
and
aam
xlat
xor
cmp
in
int3
dec
sahf
add
pusha
pop
mov
insb
outsb
mov
xor
jae
pop
fadds
aaa
xchg
aaa
bound
in
sub
and
sbb
mov
push
insb
loope
pop
inc
cltd
xchg
clc
les
faddl
jne
stos
sarl
pop
pop
jmp
sbb
cmpsl
pop
sahf
arpl
mov
cmp
cli
push
sbbb
iret
xchg
sysexit
add
xor
jl
cmp
and
sub
popa
test
filds
dec
mov
rorb
xchg
cs
mov
fstpl
dec
loopne,pn
xor
jbe
cli
adc
out
sahf
mov
inc
rcl
cmp
mov
fsubrl
dec
and
cmp
imul
xchg
call
js
movsb
js
pop
sti
js
mov
or
stos
pop
pop
scas
pop
and
sub
dec
dec
xor
ljmp
sbb
sbb
xor
dec
js
cmp
rorl
dec
in
inc
rorb
sti
push
mov
mov
inc
ja
outsl
dec
outsl
push
pop
mov
fisubrl
pushf
mov
xchg
cmp
jbe
in
jbe
jbe
mov
outsl
scas
and
nop
mov
sti
mov
mov
push
cltd
pusha
or
and
lcall
pop
and
lret
jecxz
push
jb
mov
dec
mov
lcall
lcall
fcomps
xchg
dec
jl
stos
in
hlt
fucom
push
je
push
je
mov
and
in
jb
shll
cmp
stos
loop
roll
repz
shll
dec
push
call
add
mov
fwait
xor
jl
push
xchg
add
mov
and
aas
pop
add
fsubl
subl
xchg
fadds
cmp
jo
loopne
lcall
xchg
les
popa
xchg
lods
fsubp
or
add
out
cmp
cmp
xchg
add
xchg
pop
pop
dec
shlb
mov
repz
out
movsl
mov
cmpsb
push
push
mov
stc
push
lret
subb
adc
sub
or
mov
jno
pop
sbb
pop
in
push
or
nop
xchg
fdiv
test
jg
scas
cmp
sbb
mov
icebp
mov
sbb
xor
xor
cmp
cltd
repz
sub
mov
stos
add
mov
adc
mov
xor
cmp
or
inc
lret
rcll
lret
adc
lock
mov
pushf
mov
pop
out
hlt
xor
mov
mov
stos
fcmovu
out
mov
xchg
nop
and
adc
fstps
mov
pop
xchg
xor
das
add
mov
sub
cld
into
push
in
imul
add
jno
fwait
cld
vpsubd
aad
inc
mov
not
into
mov
mov
ret
roll
insl
jg
adc
sub
das
out
ss
add
mov
add
cmpb
in
mov
mov
repz
sub
xchg
cld
out
pop
pusha
and
dec
push
popf
shll
hlt
les
sti
js
test
pop
push
insb
cmc
pop
jmp
loope
aaa
mov
movzwl
push
popf
cmc
add
jae
adc
lret
cmp
add
push
lcall
lahf
xor
scas
pop
movb
ja
mov
push
mov
add
mov
jb
and
es
iret
enter
int3
jg
xchg
push
bound
mov
stos
dec
icebp
adc
les
pop
in
hlt
jp
mov
and
xor
inc
lret
fs
movsb
sub
in
hlt
jp
mov
and
xor
inc
lret
fs
and
mov
inc
dec
aam
in
je
add
adc
and
xor
inc
lret
push
fisubl
cli
test
xchg
sbb
aam
in
hlt
test
xor
xor
and
adc
add
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fsubs
lods
subl
xchg
ret
mov
add
push
or
add
add
add
daa
add
add
add
add
rolb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
and
or
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
les
dec
add
add
add
add
or
add
add
add
dec
add
test
stc
add
inc
add
add
add
add
add
filds
pop
add
add
xlat
add
add
add
add
add
add
add
add
add
mov
add
fldl
pop
add
add
mov
add
es
add
add
add
add
dec
add
add
add
add
add
add
je
pop
add
cmp
pusha
add
add
adc
xor
add
flds
xchg
add
add
add
add
imul
add
add
add
add
sub
add
movsl
add
sbb
dec
add
add
add
add
add
fwait
add
add
add
add
push
add
or
inc
add
add
add
add
pop
add
add
add
add
add
roll
lcall
add
add
add
add
add
add
add
roll
fwait
add
add
add
add
add
add
add
rolb
cmp
mov
add
dec
add
outsl
add
add
add
add
add
or
add
add
add
and
inc
add
add
add
add
lret
add
sub
dec
add
roll
rolb
xchg
imul
in
or
pushf
add
add
add
add
add
add
add
test
xchg
add
pop
add
add
push
add
add
add
xor
dec
add
add
add
lcall
add
rolb
add
add
add
dec
add
add
mov
pop
add
add
xlat
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
sbb
add
add
pop
add
add
xor
mov
sub
push
add
add
cmp
cmpsb
add
add
add
add
addb
add
add
add
add
inc
add
add
add
add
add
incl
xlat
add
add
add
xor
inc
add
add
add
add
add
pop
add
add
add
add
add
pop
and
insb
inc
rcll
mov
fsub
out
and
inc
mov
rcll
mov
or
add
repz
jae
inc
cmp
out
call
mov
mov
out
out
mov
jo
xlat
sub
fists
pop
lcall
sub
lret
mov
pop
popf
xchg
add
movsb
push
es
push
pop
aas
ds
jno
adc
cmpsl
jp
sbb
xor
or
pop
fsubs
mov
enter
mov
add
addb
mov
lahf
jne
mov
out
aam
out
or
and
xchg
pop
pusha
movsl
dec
add
lret
push
push
repnz
push
mov
icebp
pop
mov
inc
push
das
sub
mov
pop
into
inc
push
aad
inc
mov
jmp
inc
pop
push
orb
inc
sarl
mov
mov
push
outsl
stos
out
xchg
push
dec
icebp
pop
mov
mov
nop
outsl
cli
adc
mov
shrl
sub
scas
mov
es
jmp
pop
mov
push
fwait
ret
ljmp
in
or
test
inc
jmp
mov
inc
cmp
scas
and
or
inc
lahf
jmp
add
outsl
push
jb
mov
mov
push
loopne
bound
or
push
add
jmp
xchg
mov
cmp
cmp
clc
pop
mov
sub
pop
out
pop
fistl
mov
fisubl
rcrb
push
subb
cmc
jle
mov
shr
cwtl
mov
push
push
cs
or
je
sahf
insl
mul
into
inc
dec
push
rcrl
sub
aas
add
and
mov
dec
lcall
and
std
xor
das
add
pop
arpl
test
xchg
arpl
ja
pop
movl
mov
repz
hlt
neg
stos
scas
ret
mov
test
xchg
imul
xor
repz
mov
stc
shlb
loope
xor
xchg
mov
icebp
dec
jg
inc
arpl
pop
jne
dec
mov
mov
enter
fs
rolb
push
call
je
test
in
stos
adc
mov
mov
dec
mov
jecxz
aam
int
xchg
mov
jo
add
pop
mov
sbb
cmp
cmp
dec
cmp
loopne
jbe
fldt
cmpsb
jp
adc
pop
sbb
add
repz
ret
int3
mov
mov
mov
mov
sub
dec
and
or
hlt
cmpsb
add
ss
xor
add
and
pop
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
