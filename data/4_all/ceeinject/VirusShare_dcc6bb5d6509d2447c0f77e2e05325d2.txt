call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cld
cmc
in
mov
mov
fadd
stc
mov
movsl
jl
insb
push
popa
dec
inc
cmp
sub
sbb
or
cld
icebp
in
loope
ror
sarl
scas
jl
insb
popa
sub
inc
cmp
sub
sbb
or
cld
push
in
daa
fmull
mov
subl
das
xor
push
bound
push
arpl
mov
in
mov
cld
mov
ja
mov
adc
stos
mov
cmp
xchg
out
dec
dec
ja
push
and
movsl
inc
ds
movsb
sub
xchg
outsb
jp
mov
leave
adc
and
jle
lcall
adc
inc
xor
pop
mov
fidivrl
jno
push
es
jns
int3
mov
aad
sarl
or
hlt
jl
shrl
inc
lods
sbb
push
jge
daa
cwtl
sbb
sub
ds
andb
insb
push
nop
ss
mov
mov
pop
cs
inc
sbb
movsb
sub
inc
insl
push
arpl
pop
subb
xor
sub
imul
int3
sarl
adc
leave
pop
push
dec
jge
or
or
mov
mov
in
stc
in
cmp
hlt
and
pop
jbe
dec
pop
gs
push
mov
shl
clc
mov
sbb
jle
and
or
xchg
orb
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
icebp
in
loope
ror
sarl
cmpl
inc
cmp
sub
sbb
or
cld
icebp
dec
mov
lods
call
test
cmp
sbb
rcrb
mov
popf
lcall
jg
in
mov
mov
popl
dec
adc
addr16
sub
mov
cltd
xor
mov
fmull
pop
dec
push
pop
jmp
cld
nop
pop
aam
push
jmp
or
xor
nop
test
insl
cwtl
int3
outsl
xor
sub
imul
aaa
scas
pop
mov
mov
cmp
jb
fsubs
dec
test
addr16
jle
and
lahf
mov
xor
mov
fnstenv
push
lret
add
xchg
xchg
jg
push
ret
loopne
in
mov
mov
and
cli
scas
mov
std
enter
sub
push
or
sbbl
sbb
sti
jns
aam
mov
mov
pop
mov
cmp
lahf
nop
mov
mov
call
or
je
jmp
sbb
pop
stc
jge
lret
hlt
push
cs
iret
cmp
mov
pop
aad
fmul
scas
or
mov
daa
adc
lret
jl
inc
je
sub
test
mov
imul
sbb
xchg
push
mov
push
adc
pop
les
pop
and
in
dec
lods
mov
mov
in
popa
mov
lret
mov
pop
add
into
push
lock
lods
shll
cmp
nop
lea
push
mov
sub
push
loope
test
jecxz
ficoml
in
call
inc
scas
dec
xchg
cmp
mov
into
jbe
inc
mov
fmuls
enter
aam
pop
fs
cmp
fnstsw
or
mov
dec
inc
cmpsb
test
jge
xor
xchg
ja
fdivl
in
imul
imul
repnz
inc
push
push
mov
mov
fimuls
stc
push
and
dec
aam
mov
aaa
iret
scas
mov
aaa
in
ljmp
mov
mov
adc
push
ret
bswap
xchg
mov
iret
leave
mov
pushf
jge
adc
pop
movsb
cld
or
test
xor
mov
cs
hlt
cmp
xchg
mov
in
pop
inc
cmc
push
cli
popl
jmp
ljmp
scas
mov
adc
test
mov
mov
repnz
neg
fwait
repz
inc
in
cli
out
fistpll
loope
scas
outsb
ret
pop
sbb
xor
jmp
and
push
cmp
sub
mov
mov
movsb
test
sbb
mov
inc
xchg
sbb
in
lea
imul
leave
sub
popf
push
es
hlt
mov
push
lods
pop
pop
popa
ret
js
xor
dec
fdivs
cmp
push
pop
add
daa
out
or
ss
test
lds
xor
ret
push
mov
es
in
jge
jle
test
cmc
mov
fs
nop
inc
lret
mov
addb
outsl
cmp
mov
mov
loopne
loopne
out
xor
mov
xor
sbb
mov
je
push
int
subl
cmc
cmp
ljmp
push
push
mov
mov
ss
adc
pop
gs
sub
outsl
pop
sbb
andb
fstl
xor
jecxz
sbb
out
sub
in
daa
push
adc
int
pop
fwait
aas
es
shrl
mov
fsubp
jle
pushf
push
mov
lods
ret
jns
test
fistpll
xchg
sub
cmp
pop
jnp
cmp
bound
sub
push
es
add
out
jae
bound
or
pop
mov
mov
jb
cmp
incl
repz
addr16
mov
fdivl
jle
in
into
or
mov
and
mov
push
in
les
xor
shl
test
hlt
test
movsl
mull
std
jns
rcrb
outsb
adc
pop
enter
push
out
add
sub
adc
adc
shll
movsb
sbb
lahf
sti
aaa
push
mov
ljmp
ja
mov
jge
sarl
out
mov
in
cmp
adc
int
dec
ret
enter
pop
arpl
cmpsl
js
test
inc
aas
call
mov
lahf
xor
mov
pop
scas
cwtl
and
shlb
jno
jo
stc
mov
mov
sysret
outsb
test
icebp
push
adc
push
add
xlat
adc
dec
xchg
adc
iret
cmp
cs
cmp
xchg
insb
jle
ss
out
fwait
ret
dec
test
sub
push
addl
mov
sub
mov
lret
les
insb
lds
or
and
or
dec
scas
out
inc
mov
mov
pusha
aas
cmpsb
inc
or
fsts
lock
cmp
cmp
movsb
sbb
sbbl
jl
push
cmp
pop
sahf
popf
test
push
sub
jns
mov
mov
repz
dec
xchg
sbb
dec
imul
add
sub
mov
jg
cs
add
inc
les
mov
sub
mov
mov
or
sub
outsl
add
loop
sbb
call
cmpsb
insb
sbb
sub
add
test
adc
dec
out
push
loope
or
adc
push
mov
mov
fsubr
mov
jg
daa
mov
xchg
scas
jae
sbb
jecxz
ret
pop
scas
push
das
imul
inc
enter
xor
adc
jbe
jae
mov
dec
gs
mov
push
mov
or
add
pushf
or
out
into
inc
and
add
lods
ret
in
pop
jmp
inc
lcall
int3
rclb
divl
test
and
insl
stos
repnz
sbbl
pushf
sbb
fwait
push
dec
movb
jb
cmp
outsb
addb
sbb
cltd
jmp
inc
inc
ficoms
imul
fldt
mov
push
sub
or
lahf
jnp
mov
lahf
inc
shrl
add
push
or
cli
jle
push
lods
mov
inc
outsl
xlat
pushf
je
or
mov
mov
out
mov
mov
adc
xchg
mov
add
lods
cmp
adcb
cltd
in
data16
fistpll
clc
andb
bound
out
popl
adc
and
xchg
addr16
jne
or
cmp
in
sub
and
js
xchg
cmp
cmp
or
repnz
out
insb
mov
mov
in
and
lds
pop
push
into
iret
imul
mov
xchg
out
divps
mov
jmp
aaa
push
mull
dec
sub
mov
and
jg
xchg
je
scas
add
lock
inc
xor
push
mov
rorl
das
lock
cwtl
fidivs
add
lods
in
mov
xlat
sbb
movsb
nop
push
outsb
dec
loopne
dec
mov
adc
lahf
stos
int3
pusha
xchg
call
and
mov
lock
jg
and
data16
mov
and
mov
sahf
fwait
dec
add
lea
and
dec
adc
mov
sbb
fs
and
sbb
and
cmp
dec
pop
add
cld
orb
add
loop
cmpsb
xchg
jbe
and
fs
inc
fldl
loopne
ds
dec
cmp
shlb
mov
fsub
fsubrl
adc
adc
adc
out
or
mov
mov
adc
fs
loop
sti
dec
sub
pop
jbe
test
xor
int
or
adc
sub
sbb
xchg
sbb
mov
les
sub
sbb
lahf
clc
lock
dec
mov
fsubr
out
int3
jae
cmp
pop
lret
iret
aaa
xor
or
xorl
mov
test
mov
shlb
cmpsl
leave
sub
xchg
out
cli
and
xchg
shrl
fistl
incb
jmp
sbb
dec
or
jge
in
iret
dec
fadds
sub
insb
fcomps
push
adc
das
sahf
xchg
lret
jl
push
addr16
std
or
movsl
xor
dec
repz
sub
es
bound
or
cmp
out
test
push
push
ja
in
fcompl
or
sahf
lods
popf
pop
mov
cmp
sbb
xor
or
cmc
jns
mov
or
cmpsb
adc
dec
push
xor
lret
fstl
or
sub
inc
into
push
shlb
stos
lds
mov
xchg
das
push
sub
add
shl
mov
xchg
push
add
int
pop
push
je
xchg
pminub
stos
cli
mov
push
pop
popl
xchg
test
out
xchg
push
bound
cmp
call
data16
aaa
xor
cmpsl
flds
mov
rorb
clc
test
out
outsb
ret
daa
je
lods
lds
std
jmp
out
addr16
mov
xchg
cltd
mov
xchg
vmovss
adc
pop
pop
pushf
pusha
pop
adc
out
jecxz
jno
cmpsb
loope
pop
mov
scas
inc
jp
lea
push
dec
lds
and
mov
test
inc
mov
add
cmp
push
aad
xor
jo
mov
aaa
mov
bound
mov
outsb
push
push
dec
xchg
bound
incb
xchg
jg
jmp
loopne
sub
js
pop
push
scas
lretw
jmp
and
and
addr16
push
out
insl
mov
mov
xchg
inc
xchg
sti
lahf
mov
jl
lcall
aaa
sub
fs
loope
xchg
jp
fstpt
jmp
ds
idiv
data16
mov
jnp
and
mov
cmpsl
das
ficoml
out
das
aad
mov
pop
notl
push
sub
lock
inc
push
ljmp
cltd
xor
cmpsl
mov
xor
clc
push
arpl
movsb
pop
inc
or
lret
cs
inc
sub
xor
imul
and
push
in
mov
and
jp,pn
js
add
repz
aad
fs
pushl
xor
push
mov
mov
mov
sbb
gs
xlat
mov
dec
rorl
inc
hlt
xchg
mov
les
jno
inc
xor
mov
push
xor
gs
adc
imul
aas
fwait
cld
add
mov
incl
jp
dec
and
xchg
fwait
js
pop
cmp
push
out
fwait
aas
out
jns
pusha
call
inc
xchg
out
xchg
leave
gs
lahf
icebp
inc
test
and
std
mov
out
out
dec
push
mov
mov
mov
enter
lcall
mov
push
push
xchg
popf
pop
icebp
mov
rolb
sbb
inc
sbb
mov
icebp
xchg
mov
ret
sbb
lret
mov
sbbb
stos
jmp
test
pop
adc
jmp
loop
test
imul
dec
mov
or
popf
in
popa
cmp
xchg
fimull
nop
pop
xor
sbb
gs
sbb
insl
or
mov
mov
or
push
in
out
jnp
pop
pop
push
mov
xchg
jae
std
mov
sbb
rorb
loope
xor
jg
add
je
pop
push
sub
loop
and
xor
jmp
fs
xchg
cmp
mov
dec
xchg
test
ljmp
sti
std
mov
inc
and
arpl
pop
int3
pop
insb
push
mov
int3
addr16
nop
xor
inc
cld
test
lods
and
iret
cmpb
mov
xchg
jecxz
jmp
test
mov
lods
push
dec
inc
pop
int3
ja
insl
or
pop
in
xor
mov
push
cwtl
ficomps
mov
cmpsl
ficoml
jns
pop
adc
stos
add
xchg
adc
mov
lcall
mov
jmp
adc
inc
xor
or
sarl
lea
mov
pop
mov
mov
insl
enter
jns
xchg
mov
scas
loopne
pop
nop
fsubp
in
icebp
mov
fdivrl
dec
mov
xchg
mov
and
int
fdivl
jle
pusha
or
cltd
int
xchg
push
sahf
test
jne
mov
movsl
pop
jne
rorb
add
aaa
shr
xor
jne
inc
loope
adc
jp
adc
sbb
ret
imulb
dec
scas
in
sub
stc
pop
pop
and
fnstsw
ss
stos
pop
out
nop
sub
mov
push
push
fs
add
pop
lcall
test
les
not
pop
mov
fimull
leave
loopne
daa
sbb
insb
out
daa
or
sub
shr
push
push
pop
mulb
pop
js
and
or
clc
pop
xchg
cwtl
mov
test
mov
dec
cmp
xor
mov
cltd
adc
dec
insl
mov
mov
je
or
or
out
movsl
mov
xor
push
xchg
jmp
shl
push
cld
popf
add
sarl
xor
jbe
mov
lea
xor
imul
sub
pop
push
jno
cmpl
nop
bound
insb
xor
mov
add
lret
orl
jae
dec
rcr
mov
push
hlt
aad
rcr
pop
movsl
mov
push
out
in
mov
adc
mov
xchg
mov
cmp
popa
cs
add
cs
lods
out
sti
mov
mov
pop
mov
mov
movsb
fidivrs
cmp
mov
xchg
dec
imul
addr16
in
call
push
or
loope
into
jge
mov
inc
jbe
ret
cmp
lcall
cld
fstpt
loope
xchg
push
hlt
and
inc
cmpl
icebp
enter
aad
orl
loop
and
data16
cwtl
xchg
sbb
std
scas
pop
cmpsb
xchg
and
add
roll
xor
scas
sahf
jb
std
in
fwait
cmp
std
stos
push
stc
neg
fcom
or
lcall
popl
jecxz
sti
clc
mov
fwait
mov
mov
mov
and
sub
xchg
and
cld
and
andb
fbstp
mov
and
out
jnp
lcall
pop
or
cmp
mov
xor
scas
adc
loope
stos
ss
dec
sbb
shr
ds
mov
shll
inc
adc
adc
daa
js
loop
clc
sub
jg
sbb
in
mov
scas
dec
lcall
ja
test
or
aaa
inc
fistps
push
add
dec
mov
mov
jmp
add
lcall
fists
rcr
mov
roll
dec
mov
icebp
inc
rclb
mov
add
jae
xor
xor
push
rcll
fisttps
dec
sbb
gs
loopne
nop
addr16
push
rcr
leave
test
xchg
popf
sub
bound
xchg
jae
movl
fistps
sahf
adc
lret
jp
int
rcll
mov
leave
dec
xor
nop
ss
nop
int3
ret
leave
adc
cs
jmp
jp
lock
outsb
insl
hlt
jnp
jnp
cmpl
int3
fldenv
popf
push
movsb
adc
push
add
in
add
dec
fsubr
test
std
fcompl
pop
loopne
shrl
not
jb
sbb
adcl
jmp
insl
or
cwtl
mov
inc
insb
cltd
frstor
push
jecxz
mov
mov
punpckldq
xor
adc
inc
pop
mov
pop
sub
mov
sub
dec
leave
xchg
ja
repz
int3
mov
sbb
mov
and
xor
dec
adc
push
int3
pop
mov
pop
and
stos
pop
sbb
icebp
fcmovne
fiadds
icebp
outsb
sti
pop
push
mov
pop
xor
cltd
rcr
movsb
mov
cltd
in
mov
loope
sub
dec
cmp
push
xor
movsl
fists
gs
cld
je
add
mov
aam
shll
adc
adc
ret
sbb
movsl
or
add
mov
lods
push
scas
repz
inc
and
ret
mov
jge
jae
adc
loope
icebp
incl
mov
pop
js
loopne
nop
mov
stos
jmp
jg
outsl
sbb
add
imul
lret
cld
jo
dec
push
mov
loope
inc
roll
ljmp
flds
and
cmp
inc
jl
pushfw
ss
jno
lcall
shll
fsts
pop
lcall
mov
stc
in
loop
inc
bound
push
fs
pushf
in
mov
push
pop
loope
lods
les
add
and
jle
inc
sbb
jbe
push
fidivrs
popf
add
lcall
loopne
mov
adc
or
push
jmp
movb
test
inc
and
pusha
mov
mov
xor
aam
rcrl
and
or
inc
sarb
cli
cmc
sub
push
push
je
mov
xor
xchg
jp
push
outsb
clc
int
mov
fistps
outsl
xor
gs
roll
mov
inc
inc
xchg
shll
cmpsb
sub
addr16
xchg
pop
std
sbb
push
mov
je
sub
mov
mov
or
dec
repnz
fisttps
mov
fs
adc
xchg
js
mov
gs
mov
call
out
adc
pop
repnz
outsb
in
pop
or
es
ja
xor
pop
stos
mov
xchg
inc
push
rclb
sbb
cld
cmp
add
pop
dec
push
fndisi(8087
nop
in
dec
jp
mov
mov
out
ds
cs
inc
mov
push
push
inc
sub
xor
pop
fwait
mov
aas
rorb
lret
cltd
jno
and
call
push
js
xchg
and
mov
mov
lock
jecxz
in
rorb
into
cmpsb
inc
mov
pop
int
iret
in
test
test
ret
inc
gs
out
or
mov
sbb
or
call
cmc
insb
fdivrs
mov
fisubs
or
adc
shll
inc
xchg
add
jmp
je
cld
sbb
insl
add
sti
mov
mov
add
lcall
nop
sub
add
and
popf
lcall
lock
cmp
xchg
das
sti
sti
lds
icebp
mov
sub
lods
mov
xchg
pushf
loope
ljmp
cmp
pop
cmp
mov
sbb
jg
pop
jb
jnp
push
xchg
shll
test
mov
push
jle
bound
addb
push
rcrb
and
sub
insl
inc
scas
cmp
fs
inc
lods
lcall
imul
inc
andb
dec
rcr
push
lret
aaa
adc
outsb
pop
mov
mov
mov
xor
test
xchg
scas
jnp
push
out
movl
sti
adc
cvttps2pi
mov
mov
xchg
lods
dec
sub
adc
adc
cmp
int3
rcl
das
xor
sub
inc
fstps
das
sbbb
inc
insb
dec
add
sbb
xchg
in
sbb
pop
lods
cmpsl
sbb
push
sub
in
sbb
movsl
jge
es
add
or
sub
mov
sub
mov
cmc
cmp
shrb
rep
lret
mov
push
fnsave
fidivl
xchg
fisubrl
jo
mov
rol
xchg
or
mov
xlat
and
jge
aad
int3
push
pop
lods
pop
enter
fsubs
cmp
push
pop
or
jmp
push
cmc
jg
dec
in
mov
rorb
fldcw
out
leave
add
jnp
scas
sbb
mov
dec
dec
jmp
in
xlat
xchg
sbb
and
xchg
sub
mov
xor
lret
cmp
fidivrl
xchg
mov
and
pop
sbb
pusha
call
imul
jge
and
mov
pop
pop
mov
imul
hlt
test
enter
pop
aad
push
inc
fwait
pushf
xchg
jnp
outsl
xor
xor
clc
sub
outsb
mov
inc
sub
xor
jmp
mov
pop
fucomp
sbbl
movsl
xchg
sbb
inc
scas
pusha
addr16
inc
sti
ja
sti
idivb
ret
je
sub
addr16
fsubrl
adc
or
dec
mov
add
stc
ret
lods
push
sub
rcll
in
mov
stos
dec
xchg
js
xor
enter
inc
and
aam
sarl
cmpl
inc
cmp
sub
sbb
or
cld
icebp
in
loope
ror
sarl
cmpl
inc
cmp
sub
sbb
or
cld
cmc
in
out
fmul
int3
lds
mov
pop
push
dec
dec
cmp
sub
sbb
or
cld
adc
int3
cmpl
insb
lret
notb
ss
dec
movsb
pop
jecxz
repz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
jp
push
push
popf
imul
cli
adc
bound
push
stos
mov
jp
push
sbb
or
cmp
push
xor
xor
add
sbb
testb
mov
stos
dec
lcall
or
cmp
sub
ficoml
jmp
into
sbb
fxch
sub
add
cmp
lsl
leave
mov
push
jae
lcall
ret
cs
enter
inc
xor
cmpsl
scas
sbb
xor
lods
sti
pop
pop
dec
inc
jno
aam
and
jbe
dec
leave
adc
mov
inc
cmp
mov
mov
push
mov
sbb
push
rcl
test
jle
or
mov
stos
repnz
sbb
sub
sbb
push
and
and
loop
lcall
push
dec
fists
lds
sub
xor
outsl
mov
jmp
lcall
imul
cmpb
cmc
sbb
or
cmp
sub
fisubrl
lret
or
jp
push
pop
mov
xlat
or
jp
push
jg
arpl
mov
jbe
fsts
out
xor
aas
in
aas
shrl
in
pop
loop
mov
inc
ret
dec
popa
xchg
push
mov
test
sbb
push
fiadds
out
or
rsm
xor
or
cmp
sub
fidivl
lret
adc
bound
push
stos
mov
jp
push
sbb
or
cmp
sub
fidivl
lret
adc
bound
push
stos
mov
xchg
loope
mov
in
mov
push
out
mov
or
add
xchg
push
pop
lods
dec
insb
push
adc
sbb
pop
lods
movsb
xor
or
sub
fucomip
popf
in
inc
sbb
loope
out
push
jae
xchg
in
fmulp
mov
lods
adc
mov
hlt
mov
add
xor
xorb
cmpsb
cs
arpl
mov
mov
into
cmp
pop
call
xor
mov
in
push
jecxz
cmp
pop
out
movsl
push
stos
stos
loope
mov
and
stc
adcl
and
sahf
pusha
pop
stos
push
dec
ljmp
rcrl
and
or
push
in
adc
daa
sti
dec
mov
mov
mov
test
jns
push
sub
frstor
pushf
or
ja
mov
fldl
outsl
pop
pop
addr16
sub
andb
jno
cmpsb
das
inc
push
ja
cmp
jmp
test
mov
repz
hlt
ljmp
mov
adc
xchg
xlat
imul
cmp
mov
bnd
scas
pop
add
scas
cmp
push
gs
scas
fcmovbe
lcall
int
jae
or
out
mov
jl
leave
outsb
lret
inc
jns
lods
mov
fiadds
jnp
jae
cmp
mov
scas
cmc
out
pop
dec
aad
or
in
fdivr
cmp
jo
lcall
xlat
xor
ss
push
or
sahf
inc
test
ss
stc
jmp
jmp
adc
test
arpl
cmp
lods
xchg
mov
adc
insl
jb
outsb
jbe
push
aas
push
or
mov
mov
mov
ja
movsb
cltd
inc
xor
fwait
test
xor
cld
lret
stc
push
pusha
jecxz
jp
lea
out
sahf
push
xor
xchg
sub
mov
jge
mov
mov
arpl
lret
and
jb
push
push
jmp
out
sub
ret
dec
lods
jns
xchg
sub
iret
aaa
scas
repz
shl
pushf
fcomps
jmp
outsb
shlb
or
and
or
pusha
add
jmp
out
jecxz
xchg
pusha
sbb
aam
jnp
sahf
xchg
xchg
xchg
sbb
dec
cmp
mov
aam
popa
sbb
inc
mov
sarb
mov
negb
lret
dec
or
mov
mov
rorl
push
aaa
cmp
out
mov
hlt
xor
mov
gs
in
pop
arpl
xchg
shlb
mov
jns
or
lahf
add
pop
andb
orb
adc
push
xor
sub
add
fldlg2
pcmpgtw
xchg
scas
fisubrl
mov
cmpsl
jne
xor
ljmp
jp
loop
sbb
divl
push
jmp
icebp
lods
add
add
movl
adc
sub
jnp
aam
mov
sbb
and
outsb
mov
sub
sahf
adc
out
in
jns
stos
or
dec
clc
or
sahf
scas
pop
lret
jmp
pop
cmpsb
pop
stc
jg
xor
adc
cmpsb
and
insb
mov
test
jle
ss
inc
es
call
lods
add
repnz
fidivl
scas
cmpb
movl
cmp
adc
sarb
out
insl
aam
mov
in
jg
test
mov
and
les
jecxz
pusha
js
pusha
mov
leave
mov
repnz
pop
lcallw
push
xchg
sahf
addr16
pop
add
pushf
xchg
mov
enter
mov
cs
push
add
and
addr16
es
pop
xchg
lret
dec
or
jbe
pop
mov
out
jp
jbe
mov
sbb
jge
add
dec
fimull
jg
lret
addl
lahf
stos
mov
mov
ljmp
test
pop
out
jp
and
pop
mov
xchg
xchg
inc
mov
sbb
inc
std
movsb
cwtl
cmp
icebp
insl
mov
icebp
mov
jno
ljmp
js
add
mov
or
mov
dec
lcall
ljmp
push
jns
inc
cmp
mov
mov
cmpsl
jl
cmp
imul
push
jns
dec
and
fcoml
loope
pusha
dec
dec
sub
and
imull
pop
lcall
fstps
jbe
adcl
call
fs
cmpsl
sbb
nop
jle
adc
xor
cs
scas
je
adc
mov
xor
mov
scas
je
icebp
push
mov
push
jbe
sub
push
ret
cli
int
inc
je
outsl
stc
and
pushf
lahf
xlat
pop
roll
in
enter
aam
fucomi
mov
push
adc
sbb
pop
mov
mov
mov
imul
cmpsb
jl
clc
movsb
mov
sbb
xlat
aaa
fisubrs
sbbb
adc
mov
push
xchg
sbb
dec
inc
and
out
out
cmp
pop
xchg
sub
clc
stc
xchg
push
dec
mov
mov
in
adc
out
call
or
adc
or
dec
sbb
jecxz
pop
lods
jmp
jg
mov
sbbb
add
ja
push
loopne
inc
sahf
fwait
dec
sbb
lock
adc
mov
sahf
and
adc
dec
mov
jp
into
push
inc
cmp
or
push
adc
inc
jne
insb
inc
das
fs
jb
adc
mov
mov
pop
xchg
add
add
inc
jl
or
mov
aam
and
mov
js
imul
xor
repnz
or
sub
jg
hlt
mov
adc
es
adc
fsubrl
cs
adc
xor
xor
xor
into
dec
add
and
lds
out
in
push
adc
sbb
jmp
xchg
pop
ss
inc
shr
inc
xor
jno
je
xchg
adc
push
sbb
cld
cmpsl
pop
cmpsb
pop
mov
mov
xchg
stc
mov
xlat
out
pop
mov
test
icebp
movsb
push
loopne
jmp
je
push
icebp
mov
inc
roll
lret
test
mov
pop
pop
scas
jle
repnz
jbe
sbb
xchg
adc
jnp
pop
test
insl
mov
ret
add
imul
mov
jne
fstpt
dec
or
imul
mov
xchg
push
gs
add
adc
hlt
inc
lcall
imul
movsl
lods
mov
jno
mov
lcall
aam
inc
xchg
or
lods
xor
jo
sbb
repnz
and
outsl
sbb
jae
inc
push
adc
add
mov
outsl
lods
sub
movsb
outsb
adc
lds
or
xchg
mov
pop
notb
mov
mulb
dec
lcall
dec
das
cmpsl
popa
inc
lcall
mov
jno
cli
inc
movsl
xor
cmpb
push
jg
pop
out
sbb
sbb
scas
je
in
sub
mov
inc
or
or
lea
insb
mov
push
dec
adcl
mov
aad
jne
mov
stos
jb
dec
aad
jns
pop
dec
es
xchg
mov
out
ret
add
hlt
sbb
aam
mov
enter
int3
push
mov
fmul
sbb
test
cmp
ds
jo
mov
imul
repnz
rcrb
pop
push
cmp
push
test
loopne
fsubrs
add
inc
ds
test
mov
cmpsl
test
xchg
cmp
push
and
jbe
pop
imul
es
inc
addr16
cmp
pop
repz
dec
lods
xchg
inc
sub
mov
clc
xchg
xchg
and
sahf
lahf
imul
dec
push
xor
pushf
sub
scas
ljmp
mov
aaa
cmpl
mov
jno
das
stc
cmpsb
sub
xor
mov
aaa
stos
arpl
sub
mov
test
jae
sub
fmulp
pop
mov
cmp
or
iret
jo
stos
fisubrl
xchg
enter
xor
jge
and
inc
stc
pop
inc
adc
jmp
mov
das
inc
xchg
add
addr16
xchg
js
icebp
repz
adc
jecxz
int3
sub
fmuls
xor
lahf
rolb
and
pusha
mov
or
ss
ret
das
cwtl
int3
jge
aad
mov
inc
push
sub
sarl
shl
sahf
in
mov
out
push
xchg
lods
pop
subb
outsl
pusha
sbb
stc
adc
pop
arpl
fcoms
cs
cld
inc
pushf
mov
outsb
fs
push
rep
lcall
orb
xor
push
and
imull
push
out
inc
and
jnp
pop
fiaddl
pop
ss
jnp
negb
sbb
sbb
jmp
adcl
in
or
mov
mov
stos
jmp
popa
popa
adcb
les
std
nopl
loopne
sbb
stos
js
aam
cltd
dec
into
sahf
push
adc
adc
addr16
repnz
adc
call
ret
xchg
and
in
imul
push
inc
cmp
scas
dec
repnz
jnp
pop
mov
daa
lds
cld
hlt
mov
pop
mov
mov
xchg
dec
push
adc
out
inc
pushf
cwtl
pop
call
call
xchg
sub
lods
jno
and
in
or
lods
sub
aad
adcb
mov
jns
xchg
jge
cmp
add
mov
sub
das
push
mov
out
stos
das
mov
in
xor
xorl
popf
ret
rorl
xor
ret
add
imul
fidivrl
ja
jle
push
mov
mov
xor
flds
fldl
push
pop
clc
pop
push
cmp
mov
das
xor
je
outsl
test
inc
cmpsl
pop
aas
in
adc
ret
rorb
cmp
fidivl
xlat
rorb
repnz
pop
sarb
jbe
out
addr16
adcl
clc
dec
lret
cmp
arpl
mov
dec
cmpsb
inc
cmpsb
push
rorl
jbe
ret
mov
aaa
push
adc
mov
test
loope
lahf
jae
push
and
jecxz
imul
test
fldt
mov
scas
outsb
mov
aam
scas
test
dec
xchg
into
and
fwait
xor
ss
fidivs
aad
lock
and
scas
in
inc
inc
aam
and
or
pop
subl
imul
int3
das
adc
or
cmp
cwtl
push
adc
dec
std
movsl
sub
imul
ljmp
push
dec
adc
pop
fldenv
pop
nop
dec
divl
push
in
xor
inc
mov
xchg
mov
inc
dec
fnstsw
mov
sub
aas
push
xchg
outsl
outsb
jae
jbe
sub
enter
and
push
and
pop
pop
mov
call
push
and
stos
mov
movsb
xlat
repnz
push
icebp
mov
fldenv
sysenter
jecxz
test
dec
in
inc
mov
ret
pop
roll
stos
mov
decb
add
inc
mov
pop
mov
pusha
pop
cld
dec
out
dec
stc
and
js
cltd
sbb
stos
add
cmp
rorl
loope
test
and
loop
popf
subl
mov
mov
sub
ror
pop
cmp
cmp
pop
aad
sbb
fs
loopne
lds
push
pushf
lea
push
pusha
inc
dec
dec
shrb
dec
cmpsl
ror
pop
lcall
or
fucomi
in
out
mov
ret
or
sbbb
icebp
decl
lea
or
sahf
push
mov
adc
jle
loop
jge
xchg
outsb
stc
lods
pop
in
loopne
arpl
pop
stos
lods
inc
dec
mov
push
popf
jmp
pop
and
xlat
and
and
daa
addr16
call
xor
faddp
cmpxchg
dec
xor
stc
lret
enter
xchg
xor
and
mov
or
pusha
xchg
sbb
pushf
gs
pusha
imul
ret
lock
imul
cmp
mov
sub
push
fists
inc
movl
lahf
insl
rcrb
cmp
call
pop
fcoml
mov
std
jno
iret
adc
mov
mov
loope
pop
jbe
mov
cld
gs
ss
hlt
call
sbb
lds
rcl
test
jge
into
pextrw
push
push
pushf
or
push
adc
stos
push
mov
shl
hlt
push
mov
in
in
push
cmp
hlt
or
mov
mov
in
in
sub
enter
adc
lods
xor
mov
dec
lds
mov
jo
rol
fndisi(8087
std
aaa
es
psubsw
pop
mov
pop
push
and
sahf
pop
ja
enter
or
jno
add
jns
test
fisttpl
sbb
ret
aas
jmp
pop
adc
sbb
pop
into
pop
stos
adc
mov
mov
shrb
inc
ret
arpl
inc
movsb
outsb
cmp
jno
dec
push
pop
sub
add
imul
sbb
push
add
ja
int3
lret
add
sbb
add
inc
inc
add
mov
wrmsr
jmp
sub
mov
cmp
fsubrs
int3
push
subb
and
sbb
out
add
stos
rorl
jae
arpl
jge
popa
test
lock
cmp
add
xchg
cmp
push
sbb
mov
fcomi
jne
mov
push
popa
push
xor
inc
loope
shll
pop
dec
in
popf
mov
pop
cs
push
adc
dec
ret
ficomps
fldlg2
roll
fs
sbb
lock
sub
shll
ss
fadds
push
xchg
icebp
hlt
sub
mov
xor
or
cmp
cltd
sub
push
mov
pop
rcr
add
or
jo
lea
test
push
mov
add
mov
data16
loope
inc
cmc
sub
xor
imul
xchg
stos
cmc
mov
push
dec
xor
int
jecxz
pusha
sub
cs
lahf
stos
dec
ffreep
push
dec
mov
adc
lock
ror
xor
xchg
hlt
fildl
adc
push
push
popf
lret
inc
xor
insl
add
outsl
inc
adc
in
sahf
mov
cltd
adc
mov
mov
xor
popl
mov
jecxz
punpcklbw
cmp
and
mov
in
hlt
mov
xchg
push
pop
xchg
cmp
pusha
andb
mov
dec
dec
lcall
pusha
dec
xor
lret
mov
je
ds
fdivr
add
lock
outsl
sbb
andb
inc
pop
jle
cmp
sbb
cld
cmc
adc
cmp
popf
loop
inc
dec
dec
mov
pop
daa
je
jecxz
inc
mov
adc
mov
stc
fsts
jnp
mov
push
adc
sub
test
je
clc
in
int
imul
arpl
jae
pushl
aaa
push
enter
mov
cmp
cmpsl
imul
add
add
pusha
dec
sub
rorb
sub
mov
subb
mov
cmp
pop
ljmp
lcall
xor
add
pop
jp
daa
mov
sub
jmp
adc
mov
nopl
inc
pop
adc
push
jge
aad
push
bound
xor
and
aas
scas
in
shll
pop
lock
out
dec
jbe
xlat
jge
xor
adc
mov
and
loopne
jg
iret
add
fadd
cmp
mov
jno
push
xor
fstpl
or
cmp
pusha
mov
xor
ficoml
hlt
xchg
add
in
dec
and
add
add
add
or
lods
popf
das
out
je
das
sbb
cmc
mov
pop
pop
pop
mov
aas
xchg
adc
pop
pop
xchg
repz
shll
in
out
mov
push
fiadds
rorl
divb
pusha
adc
add
jge
mov
lods
insb
xchg
adc
rcrb
std
xchg
scas
or
mov
xchg
xor
in
sbb
and
xchg
adc
aaa
xor
out
adc
loope
xor
scas
add
xchg
inc
sub
fiaddl
add
cmp
loopne
aam
inc
jno
jne
inc
dec
adcb
jno
aam
pop
inc
int3
fld1
into
xchg
fcmovnu
jno
js
mov
sarb
test
or
addl
gs
test
push
or
pop
add
cmp
cli
cwtl
xor
jl
sub
mov
mov
mov
scas
and
or
cld
xchg
icebp
inc
pushf
dec
cltd
mov
inc
repz
sbb
test
iret
xchg
fsubrl
nop
xor
bound
jne
cmp
sbb
ljmp
mov
add
scas
cs
js
fstpt
clc
pop
ljmp
jle
out
mov
cltd
addr16
inc
dec
xchg
pop
xchg
cmc
xchg
or
push
std
subb
out
mov
scas
xchg
dec
ret
add
in
shr
mov
stos
loope
mov
mov
ljmp
scas
mov
and
fdivl
cmp
jno
and
mov
iret
dec
cs
xor
fcomps
mov
jecxz
stos
cmpsb
dec
jmp
lcall
out
adc
xor
movb
mov
bnd
mov
add
lods
push
pop
adc
outsb
inc
sahf
jnp
jns
xchg
mov
stc
jo
in
ljmp
movsl
or
inc
mov
test
adc
sbb
mov
jns
in
sbb
add
dec
aaa
push
add
push
mov
or
add
iret
mov
jecxz
daa
inc
int3
inc
movsb
or
je,pt
mov
or
xchg
add
lods
pusha
mov
sti
popa
aam
shrb
xchg
test
arpl
xor
cs
fnsave
xor
int
jecxz
fld
sbb
out
out
jno
dec
dec
outsl
sub
bound
sub
outsl
int3
int3
adc
jae
add
xchg
fdecstp
movsb
jb
lock
call
cli
push
test
outsb
add
xchg
inc
push
leave
jp
aad
cmc
push
mov
jbe
gs
loope
sub
adcb
mov
add
rcrl
dec
negb
jo
push
repz
lcall
mov
cld
jp
int3
call
sub
scas
xchg
int3
lods
mov
mov
nop
fxch
outsl
add
jl
fs
cmp
lahf
data16
cmpsb
xchg
cltd
pop
dec
out
dec
push
cmp
aad
leave
addl
or
xchg
in
cmp
xor
push
loope
insb
dec
mov
add
mov
sub
dec
or
fwait
xchg
lods
xchg
clc
cmp
cld
jecxz
stos
outsl
lea
int3
or
xlat
jl
scas
aas
cmp
sub
adc
insb
outsb
jb
out
sar
call
pop
add
lahf
je
call
add
sbb
out
pop
mov
dec
jecxz
dec
lahf
push
dec
add
aad
inc
fs
std
imul
dec
aam
xchg
jl
dec
adc
movsl
inc
sarl
and
mov
cmpsl
push
or
dec
adc
call
sbb
xor
push
or
mov
lds
insb
jmp
je
repnz
rcrl
cmp
cld
jmp
stos
fwait
ret
and
mov
cmp
fcoml
mov
cmp
mov
mov
outsb
xor
pop
inc
jno
mov
shll
out
lret
mov
ss
add
cmp
pop
inc
xchg
in
and
nop
out
loopnew
and
add
xchg
gs
cld
push
jmp
aas
sbb
xchg
insb
mov
xlat
nop
dec
dec
sar
cmc
fdivl
dec
outsl
mov
mov
xor
push
lcall
ljmp
int3
fcmovnb
fwait
and
lea
mov
loopne
iret
sub
sbb
fwait
rep
popf
dec
test
shll
push
jecxz
inc
add
lds
out
sbb
push
mov
in
inc
add
ss
sbb
xchg
daa
mov
or
lea
and
jp
push
sbb
or
cmp
sub
fidivl
lret
adc
bound
push
stos
mov
jp
push
sbb
or
cmp
sub
fidivl
lret
adc
bound
push
stos
mov
jp
push
sbb
or
cmp
sub
fidivl
lret
adc
bound
push
stos
mov
jp
push
sbb
or
push
sub
fcmove
pusha
test
adc
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jp
lahf
jae
inc
pop
sarl
push
push
and
adc
jecxz
repz
ret
xchg
repnz
xchg
aas
arpl
jae
inc
pop
push
ja
addr16
out
cmpsl
sarl
int3
xorl
icebp
cmpsl
jae
jmp
push
addr16
das
in
mov
nop
icebp
pushf
out
xlat
hlt
mov
xchg
jbe
pop
sbb
cld
adc
mov
test
movsb
dec
cwtl
add
sub
mov
int
call
mov
daa
and
push
xor
pop
mov
jb
jbe
push
orb
bound
jbe
pop
xchg
jo
or
movsl
jg
imull
jbe
dec
jns
or
cwtl
xorl
arpl
push
jmp
and
in
mov
idivb
jp
in
ret
shlb
mov
in
adc
movlps
mul
push
lock
xchg
daa
into
call
fs
mov
inc
mov
fwait
xchg
cmp
lret
jb
out
xchg
adc
add
daa
adcl
imul
and
push
fcos
xchg
inc
gs
fwait
xchg
stc
dec
xlat
andl
push
add
sbb
pop
inc
push
jbe
movsl
out
mov
mov
mov
es
xor
int3
jbe
dec
push
add
insl
xor
popl
jmp
test
cmp
loop
clc
inc
xor
inc
xor
inc
xor
inc
adc
ret
xchg
mull
xchg
aaa
arpl
jae
inc
pop
push
ja
xor
inc
adc
ret
xchg
mull
xchg
aaa
arpl
movsb
mov
mov
and
and
fwait
mov
pop
jns
shll
je
stos
sbb
ret
idiv
lahf
or
mov
insl
mov
pop
adc
jae
insb
aam
pop
dec
mov
adc
and
jl
sub
push
fistl
shll
std
inc
dec
aaa
popf
cs
hlt
jo
sbb
push
sbb
cmpsb
adc
jns
icebp
mov
cld
push
insl
imul
pop
sbb
sti
jns
out
or
cmpsb
push
adc
xchg
shrl
adc
mov
mov
mov
je
in
mov
lds
hlt
arpl
mov
pop
sub
and
and
mov
in
dec
enter
int
add
mov
mov
imul
jnp
sti
push
scas
rcr
popa
jo
mov
push
test
lods
add
movsb
mov
ficoml
leave
sbbb
adc
sub
xor
mov
add
jp
mov
je
or
jnp
pop
mov
dec
rcr
push
mov
jae
mov
jno
mov
clc
sbb
jae
test
ror
xor
cmpsl
js
xchg
hlt
bound
stos
sbb
sub
push
or
xchg
push
push
inc
xor
jle
fisubrs
cli
cmpsb
sbb
jae
xchg
add
jmp
add
mov
call
aas
push
popa
or
mov
push
cld
mov
sti
roll
xchg
xchg
imul
pop
xor
cld
adc
cmp
add
pop
sbbl
xor
insl
add
inc
aad
orb
sub
pop
subl
push
xchg
imul
je
mov
mov
xor
push
sbb
and
in
cs
imul
repz
cwtl
or
mov
and
and
sbb
addr16
mov
jne
push
or
add
out
pop
aaa
iret
cmpl
pop
jns
jmp
cmpsl
sbb
sbb
loope
lahf
or
cmp
arpl
les
clc
pop
push
enter
or
sti
mov
fmuls
mov
jae
xchg
or
mov
into
out
pop
bound
sub
xor
cltd
push
mov
inc
pop
mov
in
push
inc
movsl
dec
mov
xchg
in
mov
lods
jge
cld
data16
je
inc
shlb
pop
or
das
xor
out
inc
xchg
por
jbe
gs
mov
fcomps
pusha
sbb
addb
out
mov
and
ret
dec
clc
xchg
into
fwait
xchg
dec
negb
push
and
jl
cmpsl
cmpsb
push
lods
popa
cltd
mov
sub
repnz
xchg
mov
sarl
push
sub
or
cmpsb
and
enter
jl
test
push
repz
hlt
inc
movsl
fldcw
ss
test
adc
loopne
fsubl
mov
inc
xor
pop
mov
addr16
rorb
add
push
adc
xchg
inc
outsl
ret
and
js
and
test
jg
push
test
push
in
incl
js
jne
flds
cmp
fimuls
imul
icebp
sub
es
cmp
fisubrs
int
neg
or
or
lods
dec
add
mov
pop
scas
orl
ja
shlb
cmp
outsb
stos
repz
test
push
sub
mov
ds
jl
xchg
mov
roll
fisttpl
data16
lret
pop
test
imul
loope
cmpsb
clc
insb
inc
sub
jmp
mov
jae
lods
cld
imul
stc
jmp
mov
ja
jle
mov
xor
adcl
pop
js
ret
mov
cmc
and
jle
pop
jl
sbb
fmull
pushf
ret
movsl
lahf
nop
inc
leave
repnz
cwtl
add
mov
mov
mov
mov
jne
jge
inc
jp
enter
daa
fnstenv
adc
adc
dec
push
dec
dec
xchg
repnz
out
fincstp
cmpsl
fisubl
inc
sbb
sahf
inc
test
in
or
and
call
fwait
push
int
fmulp
xchg
lds
mov
pop
dec
cmp
in
jnp
out
pop
xor
je
mov
idivl
mov
and
rclb
mov
mov
sub
jp
das
push
popf
dec
xchg
jg
sub
dec
mov
mov
pop
jmp
xchg
adc
repnz
ret
das
or
repz
lods
xor
aad
xor
fwait
sbb
jl
cmp
mov
mov
push
and
mov
mov
andl
dec
push
sub
out
push
pop
mov
sbb
mov
add
aam
add
or
in
and
sub
ret
roll
mov
dec
mov
cmpsb
rolb
push
lret
out
add
repnz
call
xchg
push
mov
adc
out
jbe
in
sub
dec
ljmp
hlt
push
sub
rcrb
mov
scas
fwait
cmp
fcomps
jo
pop
imul
cmpsl
cld
dec
xor
into
clc
lods
out
inc
lods
popa
adc
data16
dec
das
push
out
xor
fisubl
lods
add
push
es
jbe
insl
sarb
cmp
cmp
out
lret
movsl
outsb
call
stos
pop
xor
pop
out
pop
inc
js
and
sbb
out
dec
xor
pop
mov
pop
cmp
shlb
out
mov
xchg
ss
jne
adc
xchg
daa
popa
xor
int
mov
ret
xchg
mov
std
sub
inc
and
addb
dec
test
mov
mov
sub
pop
sbb
adc
call
inc
pusha
mov
js
push
mov
pop
out
push
lods
jecxz
hlt
ret
loopne
cmc
jb
insb
or
test
lret
in
ja
lret
adc
std
fldl
popf
cltd
lcall
nop
call
and
lahf
or
out
push
stc
call
mov
lcall
enter
mov
sarl
inc
outsl
loope
sub
xchg
lea
sub
jge
jno
pusha
adc
mov
jno
sbb
jp
mov
cmp
shll
sub
mov
push
sub
cmp
mov
icebp
mov
mov
pop
and
push
aas
push
pop
enter
and
sbb
mov
mov
imul
incb
sbb
sbb
add
cwtl
push
loopne
imul
into
je
jg
mov
and
or
add
dec
cmp
pop
mov
xlat
mov
and
xorl
pop
test
and
daa
roll
mov
or
jne
dec
out
pop
push
movsb
pop
jge
and
xor
popf
inc
push
rorb
mov
cmc
adc
mov
ret
pop
cld
and
popa
xchg
push
cmpl
sbbb
mov
cmp
js
dec
add
je
js
adc
xchg
add
push
mov
jle
lcall
jo
mov
xchg
mov
adc
cli
je
rorb
lea
incb
mov
inc
adc
shl
pusha
cwtl
pop
mov
das
int
jg
sub
xchg
stos
icebp
call
pop
jle
sub
mov
mov
and
add
jge
push
das
into
lahf
adc
inc
mov
cmp
imul
xchg
cmpsb
xor
adc
push
jg
jge
jl
cmp
or
fistl
arpl
loopne
add
sbb
and
jge
xchg
lret
cmp
pop
dec
aaa
test
fiadds
dec
and
mov
movsl
lret
and
hlt
cmp
int3
jb
add
cmp
mov
es
mov
jne
push
lea
add
lret
scas
idivl
sub
imul
out
mov
loope
sub
imul
mov
mov
das
pop
cwtl
aas
mov
dec
cs
imul
insb
pop
cmp
lahf
repnz
cmp
daa
frstor
jnp
jl
jmp
push
inc
xchg
cmpsb
cmp
fildll
mov
out
stc
mov
push
jecxz
cmc
cltd
arpl
push
cmc
shl
movsl
daa
movsl
dec
jecxz
jge
imul
das
jae
add
xchg
adc
mov
xchg
test
mov
addr16
fstl
inc
rclb
in
xchg
mov
and
insl
dec
sarb
mov
mov
sbb
mov
cmpsb
mov
test
cmpl
incb
jnp
mov
mov
jb
adc
fstps
outsb
sbb
in
stc
js
jp
int3
sbb
mov
jecxz
and
lods
ljmp
in
test
add
sbb
pop
add
dec
push
fstps
icebp
mov
xchg
mov
inc
sbb
sub
mov
push
hlt
sub
add
xchg
test
or
xchg
stos
mov
shr
pop
out
ds
mov
or
popf
push
adc
flds
insl
adc
inc
test
ror
js
xchg
dec
cmp
fwait
mov
and
filds
fiadds
jae
add
adc
ds
add
push
dec
mov
inc
dec
stos
cmp
enter
fldt
pop
scas
int3
mov
es
mov
push
pop
dec
mov
lods
adc
scas
adc
cmc
dec
adc
mov
repz
cmp
jbe
mov
or
in
stc
push
mov
bound
push
pop
or
pusha
mov
sbb
cmpsl
push
pop
cs
or
les
movsb
fsave
cli
js
insb
ret
pushf
push
fstps
adc
call
sbb
mov
scas
push
popa
loop
push
movsl
xor
ret
fdiv
or
mov
sbb
and
pop
cld
gs
cmp
jae
jg
mov
leave
jne
outsb
mov
push
jns
add
add
xchg
pop
add
xor
call
ret
pop
arpl
rol
push
xchg
leave
xor
fdivrs
fwait
popf
scas
ret
jle
xchg
push
mov
dec
jg
jne
mov
jle
add
and
mov
cld
push
lock
and
push
jge
lock
cmp
aad
jb
add
adc
add
inc
aad
pushf
orb
cmp
je
jnp
lret
or
push
mov
or
push
adc
aaa
cli
push
movsb
push
in
push
std
mov
fdivrl
dec
imul
data16
mov
xlat
fidivl
xchg
or
mov
pop
adc
sub
lret
push
mov
hlt
sub
pop
iret
clc
cmp
aas
shl
fcomp
or
cmp
mov
adc
fistpll
sbb
xor
aaa
int
int3
test
and
mov
push
test
pop
mov
mov
xorb
xchg
sub
dec
jbe
shr
cs
fcoml
hlt
sub
cmp
int
xchg
cmp
popa
xchg
rorl
inc
frstor
jo
out
imul
jl
and
adc
xchg
movsl
fucomi
cmc
push
push
pop
pop
pop
add
cmp
ret
push
pop
push
and
inc
lods
xor
xchg
sub
adc
jp
push
enter
fimuls
mov
mov
and
mov
xlat
ds
xchg
insl
psraw
lock
cmpsl
fistpl
sub
nop
xor
pop
mov
divl
cwtl
int3
inc
add
dec
sbb
xor
sub
repz
pop
in
inc
stos
dec
loopne
xchg
test
sbb
inc
pop
push
sub
cmp
scas
fucom
add
ja
aas
scas
cmp
in
mov
push
test
push
jns
adc
int
sub
jmp
ja
sub
push
mov
in
test
mov
movsl
jge
das
inc
int3
aad
add
jmp
loopne
adc
dec
add
fisttpl
add
aad
mov
push
les
jmp
xor
or
pop
cli
adc
mov
or
into
pop
sub
lea
xchg
jnp,pn
int
imul
and
in
push
dec
and
inc
imul
movsb
mov
mov
rclb
xchg
add
push
in
test
test
movsb
add
xor
sarb
dec
mov
ja
add
or
sbb
mov
sub
dec
inc
ficoms
pop
sbb
fcoml
lret
rolb
lods
mov
cltd
inc
push
dec
and
cli
xor
dec
jle
cmc
loop
outsl
sub
lods
push
fs
stos
cmc
sbb
sub
pusha
add
adc
dec
pop
cli
insb
int
mov
jnp
mov
imul
hlt
jo
push
pop
fsubl
adc
push
ss
xchg
pop
in
sub
jge
fwait
mov
mov
xchg
push
xchg
imul
add
jnp
les
scas
sub
jge
mov
sbb
dec
scas
scas
insb
cmp
cmp
and
aas
pop
daa
aas
out
mov
insb
adc
aad
jnp
scas
xor
push
in
cmp
roll
sahf
cmpsl
ja
jne
add
les
xchg
mov
enter
call
lret
xchg
add
sub
and
in
dec
subb
testb
dec
push
pushf
out
push
lret
neg
lcall
out
dec
mov
mov
scas
jae
into
xchg
ret
movsb
shll
in
inc
inc
adc
sub
push
pop
xchg
nop
fldcw
fwait
popf
pop
jb
sbb
mov
dec
xchg
mov
jbe
and
cmpsl
lock
xchg
loop
mov
cmp
jge
mov
or
add
sub
cwtl
add
lret
adc
add
les
xchg
add
mov
mov
pushf
cld
xchg
aad
xchg
lods
pushf
xchg
dec
dec
and
sbb
mov
mov
xor
or
test
mov
mov
cmc
fsub
or
jmp
inc
mov
pop
xchg
aaa
nop
inc
cmp
out
test
xchg
gs
jnp
cltd
adc
daa
pushf
into
ret
mov
or
mov
leave
jp
sahf
movsb
xor
test
roll
iret
sbb
and
insl
ja
xchg
hlt
jmp
enter
cmp
loopne
lock
pop
jecxz
mov
call
lods
hlt
sub
imull
lcall
insb
mov
aaa
mov
xchg
xorb
out
push
nop
ret
sahf
and
repz
sahf
and
dec
push
data16
mov
dec
insb
imul
test
pop
jbe
rol
or
data16
pop
add
xchg
bound
inc
push
lds
scas
mov
cs
sbb
push
push
xchg
xor
ss
inc
add
or
jne
pushf
jle
push
and
scas
add
cmc
push
clc
scas
leave
jg
pushf
xlat
push
jb
scas
aam
jbe
aam
push
inc
pop
rcl
and
lret
jmp
add
mov
lds
adc
lea
xchg
xor
adc
inc
dec
pop
pop
mov
cmp
lret
jp
mov
jecxz
push
xor
ret
mov
xchg
imul
js
push
jae
push
xchg
push
add
inc
mov
subb
dec
test
lahf
cltd
negb
mov
add
push
and
mov
xor
jae
call
mov
stos
or
fisubrs
sahf
in
mov
repnz
popl
and
mov
idiv
push
mov
clc
cld
stos
test
test
mov
rorl
sbb
push
xchg
jb
stc
mov
inc
popa
enter
cmp
lods
arpl
jo
mov
outsb
add
cmp
sti
or
lahf
adcb
js
in
shl
test
inc
mov
cs
lods
in
sub
ja
mov
jl
xchg
jecxz
mov
aaa
clc
ret
mov
inc
pop
hlt
xchg
mov
mov
sarb
cmp
mov
outsl
add
ljmp
incl
adc
mov
mov
adc
pop
sbb
mov
in
scas
jbe
adc
jnp
mov
jbe
and
clc
mov
nop
in
sub
dec
sbb
cmp
dec
and
jecxz
pop
and
xor
rorb
aas
outsb
lds
jecxz
add
enter
daa
and
xchg
cmp
xchg
push
and
bound
push
insl
mov
dec
push
icebp
xor
push
shr
xor
iret
and
nop
cmp
dec
bound
mov
inc
cltd
faddl
aas
ljmp
stos
shll
in
shl
sub
pop
and
inc
or
pop
jae
stos
push
and
lea
jo
mov
mov
xor
xchg
cwtl
mov
sbb
pop
adc
inc
mov
add
xor
push
in
mov
mov
xor
lcall
jb
mul
mov
pop
in
push
dec
dec
pusha
sbbl
lret
shr
mov
jmp
fildl
nop
out
out
pop
dec
jae
mov
mov
pop
out
sbb
rcrb
lock
xchg
push
xor
cmp
int3
jg
xchg
jo
aad
sub
xchg
aam
in
mov
jo
dec
mov
popf
subps
clc
xor
mov
iret
test
das
rcr
mov
cli
adc
or
mov
aaa
jno
dec
ret
call
and
je
lret
test
dec
in
push
and
in
or
add
jle
mov
addr16
fs
sahf
mov
leave
pop
sub
daa
lea
xchg
mov
iret
dec
pop
mov
jp
adc
sbb
sbb
leave
ja
fstpt
xor
jae
aad
sub
icebp
das
push
dec
cwtl
pop
nop
or
mov
mov
stc
adc
mov
popf
es
cmp
xor
lods
scas
out
add
push
push
lock
inc
mov
sbb
scas
cmc
mov
cmp
jne
adc
push
in
mov
xchg
in
add
inc
subl
scas
fnstenv
jecxz
jecxz
in
adc
enter
and
incl
das
pop
mov
dec
jl
es
jecxz
gs
stos
or
imul
insl
fs
push
sbb
xchg
and
xchg
cmp
push
jl
pop
mov
sub
xor
insb
mov
push
mov
mov
sbb
xchg
sub
pop
js
and
fldt
dec
in
push
or
dec
xchg
push
sti
faddp
stos
pop
rcrl
insb
push
test
lea
xchg
insl
idiv
roll
sbb
cmp
inc
sub
je
and
out
int3
mov
or
mov
movsb
push
pop
std
xor
pop
push
xor
mov
mov
dec
lods
addl
jo
lods
in
adc
stos
mov
js
jl
xchg
fstps
and
pop
add
mov
dec
fcoml
pop
rcll
call
jb
outsl
jb
or
xchg
loope
mov
mov
aad
dec
adc
and
sti
inc
fucom
punpckhbw
sub
jns
jns
ss
rclb
inc
cmp
hlt
notb
pop
fsub
add
mov
dec
ljmp
shll
add
incb
mov
in
aaa
loope
rcl
ret
cmc
fistpll
xchg
adc
sbb
loope
mov
mov
nop
inc
sub
in
mov
popa
aas
cmp
xor
jle
lahf
jne
or
lcall
adc
mov
data16
sbb
jne
gs
pop
push
popf
arpl
imul
adc
mov
mov
cli
push
mov
jns
pop
imul
jle
out
inc
xor
clc
pop
sbb
add
icebp
fcomip
pop
stos
add
in
push
pushf
dec
inc
push
mov
fnstcw
shl
into
xchg
int
jb
mov
add
sbb
aas
mov
jae
inc
loope
adc
mov
push
call
xlat
mov
clc
pop
imul
roll
adc
pop
sub
jg
mov
xchg
cld
outsb
inc
mov
lahf
and
xor
push
and
adc
ss
ss
rcrl
out
ret
mov
les
dec
int
jae
repnz
movsl
mov
mov
pop
fildl
out
cmp
push
adc
cmpsb
push
xchg
or
mov
cmp
scas
xor
in
xor
add
xchg
mov
pop
push
pop
aaa
sub
lret
incb
mov
arpl
add
mov
jg
mov
fcomp
jae
das
sbb
and
push
add
mov
cmpsl
repz
ret
xchg
mull
xchg
aaa
arpl
jae
inc
pop
push
ja
xor
inc
adc
ret
xchg
mull
xchg
aaa
arpl
pop
cmp
push
jbe
arpl
mov
cmpsl
repz
ret
adc
mov
notl
lahf
inc
das
push
ja
ja
push
add
mov
pop
pop
cmp
sub
sub
lds
gs
inc
fcmovbe
pop
lds
hlt
push
in
xchg
push
cmc
movsl
dec
movsl
pop
push
stos
inc
mov
adc
lret
aad
lds
xchg
or
sbb
dec
movsl
pop
push
mov
mov
adc
shlb
sbb
in
push
xchg
cmp
xor
cmp
xor
cmp
sub
xor
cli
push
mov
cltd
xchg
adc
loop
and
stos
enter
and
adc
or
mov
aad
les
jp
mov
ss
sarl
add
adc
sarl
sub
in
iret
inc
ret
ss
loopne
xchg
hlt
inc
inc
push
jne
leave
adc
mov
add
hlt
cmc
or
jmp
das
mov
out
std
sub
mov
mov
movsl
repnz
push
pop
fildll
jb
adc
pusha
int
int
jecxz
sub
push
xor
in
inc
test
or
gs
and
and
adc
add
push
movsl
pop
and
sub
push
call
inc
mov
lcall
js
and
push
roll
stc
sub
mov
mov
test
lea
sbb
sbb
jp
sub
imul
flds
fcmovbe
sub
cmp
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
aad
lds
cmc
or
sbb
dec
movsl
pop
push
stos
inc
test
popaw
push
fs
add
pushf
jbe
mov
mov
aam
and
adc
lods
sti
enter
out
xchg
cltd
jo
jno
nop
dec
je
mov
sbbl
outsl
push
xchg
test
roll
sarl
cmpsb
aaa
mov
lea
outsl
cmp
jmp
sti
stc
aaa
and
das
in
shrb
adc
insb
addb
mov
mov
test
lea
xor
xchg
frstor
mov
sub
mov
xor
push
test
pop
subb
mov
into
out
xor
aas
gs
insl
iret
out
enter
fsts
ds
mov
add
xor
in
cltd
pop
or
loope
aam
mov
push
dec
in
sbb
ret
js
push
popf
push
fcomps
lea
fst
fmuls
mov
inc
push
cmp
inc
pop
or
js,pt
pop
fidivrs
loop
cmpsl
push
pop
sub
sbb
incb
mov
imul
add
ret
pop
push
jns
pop
lea
and
or
adc
pushf
clc
xchg
inc
jmp
lds
dec
insb
popa
mov
ss
psadbw
cld
stos
or
dec
sub
sub
push
xlat
movb
jp
sbb
inc
push
fisubrl
cmp
jmp
psubw
gs
mov
inc
cmpsb
mov
mov
ret
add
lret
fbstp
sub
sub
jbe
mov
mov
jno
inc
cltd
incb
and
sti
inc
mov
scas
sbb
mov
adc
scas
repnz
jb
xor
pop
hlt
cltd
mov
fstl
xor
mov
push
test
imull
shrb
mov
mov
add
popa
jl
loop
sbb
testb
test
mov
lcall
lock
jge
test
jmp
popf
shl
inc
jecxz
adc
mov
inc
xlat
pop
aaa
loope
rorl
and
pop
fbstp
mov
mov
add
cli
mov
testl
xchg
mov
jae
inc
fistpl
or
mov
jle
mov
push
pop
mov
mov
lock
cmp
add
cld
push
dec
or
mov
or
push
mov
dec
in
or
gs
mov
fstpl
jb
push
or
pop
mov
inc
inc
gs
call
decb
rolb
fwait
sbb
sbbl
and
addl
add
pusha
in
xor
mov
dec
sub
mov
adc
std
mov
leave
xchg
test
pop
lret
call
push
cmp
jp
or
stos
push
rcrb
loop
stos
int3
jb
popf
daa
dec
add
or
or
cwtl
mov
cmp
lods
pop
cmp
in
lret
insl
pushf
rorl
sbb
mov
int
cmp
mov
mov
leave
xor
lea
fildll
mov
lcall
ljmp
pop
push
jae
aam
cmp
xchg
in
push
or
sar
or
xchg
subl
adc
sbb
push
inc
pop
int
rcl
lcall
mov
pop
mov
fldt
stc
jno
push
popa
mov
stos
sub
xchg
lods
call
das
into
cld
imul
mov
mov
aad
aam
jne
cld
sti
mov
fcomps
jp
mov
mov
mov
sahf
sbb
stos
in
mov
leave
cwtl
xor
add
imul
mov
aad
adc
mov
jnp
pushf
mov
or
insl
xor
clc
push
test
xor
fisttps
or
xchg
push
pop
cmp
cs
push
mov
es
repnz
movd
jecxz
pop
add
aad
jae
push
out
lcall
lods
dec
mov
sbb
lock
or
pushf
popf
sbb
jne
xchg
insl
out
push
cmp
pop
das
mov
iret
pop
popa
popa
outsb
add
or
int3
mov
iret
xor
ficompl
clc
mov
mov
mov
adc
xor
psrld
jnp
pop
stc
ja
adc
cmp
push
mov
jb
jl
cs
sbb
rcl
xorl
cmp
sbb
add
or
jg
jle
and
jne
lods
or
nop
in
movsb
arpl
dec
lods
mov
lea
push
popa
in
out
cld
data16
and
xchg
inc
popa
dec
les
pop
aam
sbb
push
jbe
jecxz
add
outsb
fstpt
jle
sub
aaa
xor
mov
dec
sbb
clc
cmp
sbb
arpl
push
aad
xor
fnsave
jmp
rorl
aad
stc
cli
dec
out
es
and
and
ljmp
push
ja
out
lods
int
sarl
js
bound
xlat
imull
js
icebp
mov
in
incl
test
dec
cmp
movsb
xor
data16
ja
pushw
pop
push
loopne
or
pop
push
std
es
mov
icebp
call
das
lahf
out
lea
pushf
lret
pop
je
daa
sarl
clc
adc
iret
push
mov
sub
addl
push
mov
les
mov
sub
mov
fdivs
add
push
cmp
ret
lahf
xchg
ljmp
out
cli
imull
jge
lcall
mov
xchg
aam
sub
cs
push
jb
cmp
leave
jbe
outsb
xchg
add
fiaddl
sbb
repnz
mov
popf
cmp
loop
jp
xchg
popf
in
mov
ret
and
imul
xor
jmp
add
jns
in
popa
xchg
jnp
icebp
cltd
ret
cltd
inc
sarb
mov
movsl
add
jp
scas
pushf
push
or
cmp
repz
nop
inc
loope
pop
cmpsb
sti
pop
sbb
ret
mov
pushf
xchg
mov
sub
add
in
mov
jb
into
mov
xchg
call
push
movsl
mov
out
mov
xchg
jns
cmpsb
mov
or
movsb
sbb
xchg
pop
xchg
lcall
outsb
into
adc
sbb
xchg
mov
jae
lcall
sbb
push
out
mov
xchg
push
push
in
dec
orb
or
stos
js
cmpb
fst
subl
in
mov
mov
neg
pushf
fidivrs
outsl
and
mov
add
and
xor
jno
xor
jle
push
jge
lea
in
inc
lret
xor
imul
push
movsb
lahf
mov
mov
push
pushf
add
movsl
ret
jecxz
cwtl
movsb
mov
lods
push
add
push
stc
scas
sbb
pop
fadd
loopne
outsb
jmp
push
adc
dec
jmp
sub
lahf
push
mov
or
aad
cld
subb
mov
mov
sbb
in
jo
fdivrs
jno
xchg
loop
rorb
sub
jne
mov
cmp
daa
clc
inc
addl
idivb
ret
push
clc
fldenv
iret
mov
push
test
jmp
xor
jecxz
jle
cwtl
xor
jnp
xchg
mov
aaa
jp
pop
cmpsb
inc
cmp
jmp
sub
imull
or
pop
fisttpll
ds
sub
mov
inc
xadd
js
js
adc
in
icebp
add
pop
hlt
or
jle
sub
lods
icebp
insb
mov
push
ds
xchg
hlt
movsl
dec
dec
repnz
cmp
pop
cmpsb
sti
inc
cmp
lcall
sub
call
jne
mov
mov
int
pop
daa
sbb
out
add
scas
cmp
aaa
cmp
jmp
leave
out
ljmp
and
mulb
xor
xchg
push
mov
loop
imul
mov
in
add
dec
mov
scas
xlat
mov
dec
xchg
idiv
cmp
pop
icebp
icebp
jl
xor
inc
push
push
pop
mov
stos
and
mul
mov
ja
test
loope
cmp
jmp
inc
fs
inc
fmuls
enter
sarb
aam
mov
nop
loope
mov
paddsw
in
push
into
mov
jnp
jge
stos
das
xor
pushf
lods
fsubrl
ss
ret
dec
mov
pop
nop
lods
dec
dec
inc
outsb
xor
mov
adcl
out
sbb
cmp
ljmp
sbb
xchg
mov
fdivs
xchg
mov
popf
xchg
mov
inc
sub
faddl
in
jbe
insb
sahf
movsl
cmc
xorl
add
mov
inc
inc
adc
lret
test
or
jge
sbb
out
fiadds
stc
call
cltd
ja
jnp
scas
pop
ficompl
pop
outsb
js
in
incb
cwtl
pop
mov
or
push
sub
insl
sub
add
inc
sbb
repz
test
clc
es
negl
push
mov
mov
cmp
jnp
jmp
daa
mov
arpl
pop
inc
fnstcw
shrb
ret
cmp
jg
sbb
call
add
je
xor
mov
sarb
jmp
push
push
filds
or
fisubrl
shll
lea
addl
icebp
mov
xchg
mov
push
cmp
push
pop
negl
sbb
daa
sbb
clc
fildll
push
cmp
aam
xorl
inc
loopne,pn
push
xor
inc
out
mov
pop
fdivrs
dec
pop
call
je
cmp
aas
push
mov
mov
imull
mov
xchg
leave
aaa
dec
adc
mov
inc
jno
cmp
and
jmp
push
mov
ret
ds
into
clc
icebp
fcoml
mov
mov
aaa
fs
dec
push
pop
adc
push
jl
add
cmp
test
adcl
mov
popf
mov
push
sbb
or
mov
test
add
add
xchg
or
push
push
pop
jno
push
bound
dec
insb
decl
pop
fiaddl
fiadds
mov
add
cmc
inc
and
mov
aas
std
cmp
push
add
mov
fnsave
aad
mov
divl
shll
cmp
sbb
inc
scas
dec
pop
jmp
lods
mov
loope
cli
cmp
cmp
xor
ljmp
push
pop
or
push
into
in
lea
cmp
loope
cmp
outsb
rorb
stos
aam
loope
lahf
pop
jecxz
jecxz
push
mov
loopne
ja
mov
dec
sub
xor
xchg
fadd
jns
and
imul
push
jnp
into
push
xchg
cmp
or
nop
lods
cs
fwait
aas
jbe
pushl
call
repz
pop
lahf
jb
sbb
mov
je
inc
pop
fwait
sub
ret
xchg
rorb
mov
addr16
sbb
adc
frstor
push
xor
rorl
clc
jmp
sbb
and
in
imul
and
les
push
pop
mov
test
pop
cmp
mov
mov
add
stos
dec
lea
pop
es
out
inc
sbb
jbe
loopne
push
psadbw
xchg
dec
mov
jmp
in
mov
mov
mov
aam
and
dec
and
xchg
sbb
clc
jecxz
jnp
fistps
mov
or
int
ds
orl
cmpsl
jo
fidivl
xor
sub
cmp
xor
lock
stc
loope
inc
pop
pop
dec
sub
jae
pushw
sbb
shlb
dec
sbb
outsl
popa
aam
or
lahf
imull
fstps
rcl
sub
int3
stos
fistl
loop
cmp
in
dec
fcmovbe
loope
fbld
int3
lret
icebp
dec
adc
icebp
xchg
rcrl
sub
adc
pop
mov
ja
mov
jae
add
fsubl
and
sbb
inc
repnz
iret
xchg
in
sub
leave
xlat
out
test
in
fistps
push
cmp
xchg
notb
loope
or
cmpsb
pop
push
adc
test
mov
add
mov
push
fdivrs
out
nop
imul
rolb
fimuls
mov
push
mov
ljmp
cs
add
fnsave
ljmp
lds
movsb
and
lahf
repz
scas
mov
fnstcw
pop
shll
mov
setge
mov
cmp
rclb
out
fimuls
cld
sbb
in
mov
mov
mov
movsb
je
add
sub
or
rcl
test
je
fs
dec
sbb
cmp
lret
jns
imul
xchg
xchg
xor
shll
push
mov
jge
stos
test
aad
sbb
mov
fcomps
inc
fildl
imul
pusha
stos
mov
std
sbb
out
popf
xor
and
xorb
stos
jmp
jbe
xchg
sub
ja
inc
int3
pop
hlt
lahf
lcall
mov
jp
test
icebp
xlat
xor
sub
mov
jge
scas
data16
jp
stos
stos
orb
pushf
add
sub
test
hlt
push
cmp
aaa
movb
ret
push
mov
xlat
cld
jmp
push
lea
shll
cmp
xlat
push
in
pop
pop
movsb
dec
xchg
xor
in
cmp
mov
mov
ljmp
inc
adc
mov
aas
cmp
outsl
push
fwait
subb
mov
fldenv
mov
add
xor
test
lds
loop
sahf
mov
add
mov
bound
add
lret
jp
xor
adc
dec
aas
mov
icebp
scas
cmpsl
fcmovne
frstor
mov
dec
push
call
mov
push
in
gs
adc
aas
leave
mov
cmp
stc
push
dec
int3
xor
fdiv
or
cmp
loope
out
stc
cmp
mov
sub
sbb
out
ret
jecxz
dec
ss
lock
sbb
xorl
cmpsl
mov
sbb
call
jne
pop
outsl
call
mov
insb
add
cs
out
pop
inc
and
in
xchg
xchg
data16
mov
pop
dec
inc
inc
nop
dec
scas
sbb
out
ja
aad
mov
mov
xchg
pushf
inc
jns
iret
adc
sbb
imul
mov
mov
xlat
mov
loop
in
or
and
jmp
aas
and
sbb
pop
out
mov
imul
or
mov
ja
stc
out
mov
adc
arpl
mov
movsb
pop
insb
mov
lret
ds
add
jne
sbb
shrl
movsl
into
mov
jbe
and
test
and
inc
xchg
imul
inc
movsl
insl
sti
dec
jle
cwtl
pushf
push
adc
mov
cmp
push
andb
sub
inc
jnp
pop
out
and
push
nop
into
add
fdivrs
mov
fcomps
int3
inc
add
rolb
nop
sbb
pop
dec
inc
test
mov
sbb
lds
stos
push
push
mov
mov
addr16
add
es
mov
inc
jae
bound
mov
jmp
push
cs
jnp
sub
sbb
and
mov
stos
lcall
pop
mov
and
jmp
and
jnp
cmpsl
jg
lods
lahf
jg
sarl
out
mov
push
mov
das
iret
xchg
push
insl
mov
pusha
js
add
jb
xchg
hlt
sbb
xchg
mov
mov
cld
sbb
rcrb
mov
mov
add
jnp
popa
icebp
in
je
ret
jo
shlb
movsb
hlt
scas
sbb
sub
sbb
in
insl
sbb
xchg
mov
orb
push
push
out
cmp
pop
fists
sbb
adc
ss
addr16
dec
shl
loop
aaa
mov
jle
jno
xor
mov
cmp
cltd
mov
mov
xor
push
mov
sarl
dec
mov
add
pusha
jbe
jo
jmp
popf
push
lods
pop
xchg
sub
movsl
adc
cmpsb
pop
out
ljmp
jno
mov
ljmp
outsb
int
cmpb
dec
adc
daa
aaa
mov
pop
cwtl
out
mov
or
ss
jge
shrl
iret
fcmove
and
add
xchg
push
movsb
orl
leave
imul
sub
mov
xchg
push
add
test
iret
pop
mull
adc
jno
insb
xchg
pop
imul
xchg
push
pushf
lds
xlat
jle
mov
sbb
mov
in
xchg
fistps
and
test
aaa
pushf
mov
push
int3
cltd
mov
jl
jo
mov
fstpt
mov
sub
dec
push
push
cmpsl
out
dec
loopne
addb
mov
addr16
imul
jo
cmp
xchg
sub
fiaddl
stos
fsubs
xchg
out
push
pusha
sub
fwait
sbb
enter
jns
shll
add
cld
and
jmp
xchg
lret
mov
inc
add
test
mov
cmpsb
inc
popf
cmp
or
and
add
lods
or
fwait
jo
cmp
cmp
aas
sub
push
jl
push
lock
dec
filds
pusha
push
shlb
mov
sbb
ljmp
cmp
subb
dec
rorl
jns
sub
mov
idivl
pop
xchg
icebp
cmpb
ds
dec
dec
test
or
ja
cmp
sub
out
mov
push
idiv
movsl
cmp
dec
adc
add
pop
filds
push
lret
clc
sub
jno
popa
adc
mov
clc
pop
shll
aad
xlat
and
daa
jecxz
or
xor
repz
inc
mov
sbb
bound
xor
cmp
pop
jno
loopne
addr16
jnp
mov
out
push
hlt
pop
enter
icebp
outsb
cmc
sahf
out
mov
rolb
cmpsb
ret
mov
clc
pop
pop
fwait
mov
mov
out
call
xchg
sub
lret
and
jmp
rcrb
xchg
xor
or
xor
stc
call
mov
or
int3
lods
push
out
stos
mov
cmp
cld
int
ret
adc
xor
add
mov
pmaxub
aad
push
lahf
sbb
mov
pop
ret
stos
mov
call
es
test
clc
arpl
add
rclb
sarl
mov
fcmovnbe
add
daa
andb
into
xor
cs
pop
dec
dec
inc
cld
pusha
inc
cmp
fstpl
cmpsl
sub
jle
cld
cwtl
adc
dec
jp
jb
int
test
dec
aad
orb
jae
sarb
and
sbb
js
lock
popf
xchg
test
sub
or
repnz
mov
loopne
push
adc
fisubs
mov
mov
scas
adc
pop
lcall
push
popa
inc
sbb
ret
movsl
daa
lcall
into
cmp
pushf
out
dec
jg
cmpsb
iret
lcall
mov
sub
test
dec
add
or
add
and
data16
pusha
push
and
xlat
xor
mov
cmp
shrl
inc
push
and
int
cmp
daa
aad
xchg
repnz
inc
scas
ficoml
outsl
scas
and
shr
mov
jle
mov
stos
mov
incb
pop
repnz
mov
push
orl
les
xlat
or
jb
mov
or
adc
stc
mov
or
mul
popf
mov
arpl
add
dec
iret
dec
and
insb
push
out
ret
inc
call
jns
stos
cmp
push
sbb
dec
sub
xor
test
mov
sti
adc
cwtl
jg
add
ds
xchg
inc
pop
icebp
push
stos
cmp
mov
jb
jb
mov
sarl
cmp
adc
fldl
repnz
clc
dec
sub
jns
mov
cmp
add
xor
jno
pop
push
idivl
test
jo
mov
out
shlb
fcomi
pop
adc
fs
add
jge
push
push
jno
test
xor
insl
xchg
scas
int3
xchg
movsb
enter
bound
outsl
pop
mov
xchg
dec
cmpsl
inc
hlt
fmuls
pop
dec
sbb
fsubp
adc
aad
je
loop
cmp
das
xchg
jnp
cmp
leave
orl
add
fcmovbe
sub
cmp
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
aad
lds
cmc
or
sbb
dec
movsl
pop
push
stos
inc
mov
adc
lret
aad
lds
cmc
or
push
xchg
push
jp
dec
movsb
pop
push
scas
inc
mov
adc
lret
aad
lds
loop
or
and
ss
es
push
fnstenv
push
decb
fimull
pop
mov
cmpsb
jge
or
idivb
pop
in
es
push
lea
jbe
mov
xchg
insl
cmpsb
jge
or
out
scas
int
frstor
es
push
jae
add
sbb
mov
mov
int
test
push
dec
inc
pop
lods
scas
dec
pop
rcll
or
insl
sub
xchg
or
loop
cli
mov
mov
sti
mov
repnz
sub
lcall
fadds
inc
sbb
xchg
lahf
fiaddl
push
jle
push
cmp
lea
mov
ds
cmp
xor
shr
lret
mov
mov
xchg
jle
dec
xor
dec
not
out
jmp
cmp
std
push
in
jmp
or
dec
xchg
vaddss
sub
insl
jmp
in
fmuls
mov
cmp
imul
idivb
in
dec
int
fnsave
in
es
mov
ds
jbe
sarb
insl
xchg
jge
or
out
jg
je
inc
stos
pop
mov
add
data16
and
xor
add
adc
sbbl
arpl
aas
call
xor
mov
ficoms
scas
bound
push
jp
push
push
cltd
jne
add
lods
mov
xchg
insl
cmpsb
jge
or
out
push
int
fnsave
in
es
push
lea
jbe
mov
xchg
insl
cmpsb
jge
or
out
push
int
enter
sub
dec
scas
mov
cli
jne
aad
lea
dec
and
dec
das
faddl
add
add
cmc
cmp
dec
fsubr
jae
cmpsl
sbb
ss
dec
push
xor
or
and
push
gs
xlat
or
icebp
int3
stos
jne
cmp
into
mov
or
loopne
ficoml
jmp
iret
daa
add
pop
fnstenv
inc
push
lods
sar
test
jmp
call
int3
hlt
mov
in
cmp
xor
xor
pop
lret
cmc
lcall
shrb
jbe
mov
pusha
sub
sbb
test
inc
out
stos
in
hlt
or
repz
adc
movb
ret
add
test
rorb
mov
shlb
inc
popf
mov
sbb
jp
xor
mov
aaa
std
movsl
out
pop
lret
shrb
pop
out
push
inc
shl
add
xchg
pop
mov
sub
dec
push
xor
ss
pop
add
jmp
cmpsb
mov
cmpsl
int3
out
or
adc
cs
xor
lahf
ret
cmp
ret
je
ret
push
jg
mov
mov
std
insl
push
jecxz
pop
scas
shll
ds
and
mov
mov
lea
xor
outsb
ja
mov
cmpl
push
cli
es
jge
adc
or
add
pop
add
xchg
call
fdivl
mov
das
das
and
out
pop
add
stos
bound
enter
out
mov
fisttpll
inc
and
jns
cmc
sbb
int
mov
rorb
and
enter
dec
lcall
or
dec
popa
push
data16
stc
sbb
subb
xor
out
xlat
inc
insl
inc
mov
add
xchg
mov
xchg
and
loopne
dec
lahf
test
dec
adc
xlat
pushf
movsl
jl
aas
xchg
xchg
into
xor
mov
dec
dec
xchg
mov
rcr
outsl
jo
mov
mov
ljmp
test
iret
lock
add
in
push
cmp
fisttps
mov
cmpsl
insl
out
mov
push
mov
cmpsl
fstps
push
jno
mov
jmp
inc
fsubl
inc
ss
cmpsb
imul
ljmp
pop
jge
shr
dec
xchg
xchg
lods
cmpsl
lds
jns
test
insl
xor
shl
xchg
dec
fimull
dec
divb
clc
mov
shll
outsb
fbstp
and
inc
int3
adc
xor
xor
push
ljmp
dec
pusha
sub
jae
xor
sbb
cmp
stos
stc
adc
cmpb
int
fildl
testl
xor
aad
imul
cmp
lock
dec
pop
in
jno
subl
test
jno
jle
lcall
test
sbb
sbbl
iret
out
jne
insl
push
push
test
inc
or
mov
les
stos
sub
inc
push
mov
dec
pop
cmp
xor
cmp
sub
xor
jmp
push
imul
mov
xor
xchg
lea
mov
fs
nop
imul
mov
mov
jg
sub
scas
stos
ljmp
rorb
sarb
andb
shrb
jmp
decb
mov
dec
andl
adc
andl
pop
stos
ret
data16
fs
jbe
sbb
jle
pop
add
sbbl
pushf
jo
inc
scas
rcrb
arpl
mull
das
jle
mov
xchg
jns
inc
jmp
mov
pop
cmpsb
pop
test
das
xchg
mov
idivb
fucomi
pop
fists
cmpsb
mov
jno
mov
inc
cmp
dec
aaa
repnz
rcrb
pop
addl
ds
jae
push
mov
ret
iret
stc
push
cmp
inc
pop
xchg
jno
add
and
xor
fistps
mov
jmp
out
mov
push
ret
or
out
lods
inc
ss
imul
or
ja
shlb
lret
add
inc
xchg
roll
jle
into
mov
movl
icebp
or
lahf
hlt
scas
mov
sub
mov
pop
nop
imul
cltd
sbbb
cmp
int
in
mov
jmp
push
xor
hlt
rolb
ljmp
pop
cmp
in
js
sub
in
cmp
xchg
jp
xor
into
in
sahf
sti
push
mov
dec
pop
add
dec
loop
adc
fidivrl
mov
pop
cmp
mov
cmp
call
cli
add
data16
outsl
lods
sahf
cmp
je
in
push
dec
pcmpgtd
mov
cmp
pop
pop
inc
sub
sbb
xchg
push
nop
fdivp
xor
adc
and
roll
pusha
test
cmp
jno
mov
xchg
icebp
push
adc
mov
jnp
movsb
idivb
inc
lock
jne
pop
dec
jns
and
daa
fisttpl
imul
push
xor
mul
push
sbb
rclb
xchg
aad
xchg
xlat
and
mov
sti
fisubs
clc
or
les
stos
repnz
pop
mov
sbb
mov
out
outsl
psadbw
faddl
push
mov
cli
push
cli
stc
xchg
mov
stos
pusha
and
sbb
arpl
jl
xor
pop
dec
pop
negb
adc
add
mov
scas
push
adc
xchg
lret
push
mov
jb
test
sbb
psrad
das
cmp
or
mov
lock
mov
jl
inc
push
bound
cmp
and
lcall
mov
aad
dec
outsb
scas
dec
cmp
sti
fists
repz
jecxz
mov
jb
jns
mov
jbe
out
dec
jg
mov
cmp
mov
bswap
stos
jmp
pop
or
iret
cmc
xor
dec
jle
daa
test
dec
ret
mov
notb
sub
fnstenv
mov
jns
sub
rcl
sub
sub
sbb
jb
aas
imul
daa
or
stos
mov
ror
sub
jo
sbb
adc
or
lcall
and
cld
dec
xchg
out
mov
or
dec
xchg
lcall
mov
imul
mov
mov
in
pop
mov
stos
add
jg
xchg
addr16
popa
adc
cmp
cltd
fisttpl
xor
inc
mov
jle
and
pusha
jp
adc
cmp
adc
mov
lods
jge
leave
stc
adc
pop
pop
push
movsb
std
daa
sahf
sub
mov
and
inc
sbb
sub
gs
out
push
cmp
pop
adc
mov
or
pop
loop
mov
bts
push
xchg
dec
popa
testb
mov
aaa
adc
or
lret
inc
inc
lret
imul
sub
sub
hlt
stc
leave
das
pop
sub
sub
stos
das
stc
or
mov
cmp
std
cmp
sub
mov
xchg
jp
fisubrl
or
sarl
push
lock
mov
out
mov
push
push
jo
sub
pop
mov
lock
gs
and
mov
mov
and
xchg
inc
pop
or
jge
sbb
pop
xchg
fbstp
in
rclb
aam
ficoms
cmc
push
das
lahf
xchg
sbb
loope
sbb
mov
xchg
loopne
mov
xor
leave
lods
push
in
loopne
adc
pop
fst
mov
mov
lret
imull
imul
shlb
jg
xchg
mov
stc
stc
in
push
lds
std
clc
popf
sbb
cwtl
pop
insl
fiaddl
or
mov
pop
imul
ret
sbb
push
xor
mov
aam
lods
adc
push
mov
mov
insl
fadds
pop
xchg
xor
fisttpll
pop
rclb
sbb
sarb
mov
jmp
sbb
push
push
ss
lcall
fs
enter
ret
mov
aaa
mov
enter
push
pinsrw
in
lahf
mov
or
xor
lret
cli
inc
pop
out
jns
fwait
lret
sub
add
lock
pop
out
ja
loope
pop
inc
lret
shlb
stc
add
pusha
xchg
icebp
dec
aas
out
sti
repnz
outsb
cmc
add
cmp
dec
or
stc
mov
sbb
mov
or
sbb
fstl
mov
xor
vmovhpd
addb
dec
push
jmp
xchg
in
dec
dec
cmpsb
roll
inc
cmp
ss
movsl
pushf
mov
ss
js
xor
in
mov
push
in
jmp
fisubrl
inc
jmp
mov
std
aad
push
or
or
sub
in
jle
mov
or
jp
gs
or
push
and
and
imul
js
cmp
popl
pop
loop
loopne
mov
mov
nop
into
jns
sbb
pusha
sbb
sub
lods
mov
or
mov
lret
pop
nop
push
out
shlb
xor
mov
mov
inc
and
das
sub
push
repz
dec
dec
xor
into
and
subl
arpl
pop
mov
sbb
int
mov
dec
add
xchg
or
popa
call
sub
xchg
dec
cmp
js
cmc
pop
hlt
enter
jecxz
int
hlt
bound
andl
stos
stos
mov
mov
or
adc
repnz
ja
add
movsb
xor
adc
shll
cmp
inc
xchg
ds
xchg
mov
jle
mov
sbb
jnp
xor
fcmovne
jg
call
mov
xor
mov
addr16
sarb
xchg
push
icebp
daa
push
lods
popf
sbb
dec
cmp
jmp
mov
fistpll
inc
ss
insb
imul
add
rol
out
cmp
mov
pop
sub
mov
xchg
sbb
dec
sbb
jp
push
dec
shlb
iret
cli
sbb
push
xchg
inc
pop
ret
hlt
pop
mov
mov
sbb
mov
sub
inc
jo
sub
xchg
hlt
mov
mov
sub
out
in
sbbb
xchg
sub
cltd
cmp
pusha
subb
and
mov
jns
mov
xor
out
adc
cmp
or
lret
and
mov
pop
jnp
sbb
sub
mov
push
ss
push
jp
sbb
mov
mov
and
or
add
dec
sbb
lcall
and
and
add
mov
sti
inc
das
neg
bound
xor
mov
jg
ror
outsb
pop
rol
lods
adc
std
add
mov
aad
xchg
jmp
ficompl
fisubrl
jge
jbe
lret
jb
jmp
test
sub
pop
aas
sub
xor
rcll
mov
pop
cmp
jle
rcr
or
ljmp
cmp
jns
sbb
hlt
data16
aaa
cld
loope
or
xchg
jo
jmp
ljmp
xchg
out
int3
lds
mov
int3
cli
inc
jmp
inc
std
mov
xchg
scas
in
xchg
sbb
loop
int
ss
dec
and
xchg
push
push
and
das
push
dec
adc
lret
call
jne
jo
adc
mov
ss
aas
shlb
iret
cs
dec
push
sbbl
xchg
cmp
jnp
cmp
or
movl
and
std
cmp
mov
test
or
mov
insl
sub
call
jnp
xchg
add
clc
es
mov
outsb
nop
inc
lods
sbb
cwtl
movsb
aas
jg
pusha
inc
aam
dec
jns
jl
in
icebp
hlt
ja
pop
cs
bound
jmp
scas
int
or
leave
inc
mov
aam
jl
cltd
push
fistl
cwtl
out
into
sub
dec
sbb
dec
lods
cltd
mov
add
je
popa
repnz
lea
aad
in
sub
hlt
cmp
mov
xor
mov
cwtl
int3
movq
fisttps
insl
adc
cmp
daa
outsb
push
or
movsl
ret
ret
xchg
pop
cmp
les
in
inc
xchg
cmpsb
and
aam
out
inc
adc
repnz
mov
push
push
pusha
in
test
add
fsubs
cs
jecxz
pop
fmull
inc
pop
idivl
mov
jl
pusha
inc
sub
andb
pop
jns
cmpsl
push
outsl
lea
lea
push
sahf
add
adc
pop
mov
aad
lahf
push
aad
pop
out
and
xchg
mov
loop
out
mov
orl
ret
sub
push
insl
sub
popa
sub
mov
pop
sbbl
sub
sub
test
fldt
sbb
rclb
inc
test
mov
mov
add
fcomip
daa
lahf
xchg
or
pop
inc
daa
inc
xchg
jne
fsubrs
outsl
pop
pop
addr16
push
in
cmp
lods
jns
or
jns
xor
aad
es
mov
out
mov
adc
aad
testl
aam
pop
jbe
xchg
jmp
pop
push
or
or
xchg
mov
add
shll
dec
mov
dec
cmpsb
xor
inc
pop
stc
repnz
xchg
jo
test
rol
repz
mov
mov
push
cs
aaa
add
xor
cli
mov
add
cmp
cwtl
adc
jnp
or
jecxz,pn
mov
push
cmp
add
xor
mov
mov
push
in
mov
xor
sahf
jns
int3
xor
das
sbb
inc
clc
dec
push
lock
ljmp
xor
or
daa
xchg
int
xlat
popa
aas
or
pushf
pop
mov
pop
push
cmpsl
or
lods
pushf
iret
dec
cmpsl
roll
mov
int
jae
fiaddl
xchg
mov
dec
cmpl
inc
push
sub
xchg
sahf
sbb
test
clc
andb
in
ljmp
imul
jae
mov
sbb
test
bound
cmpsl
fimull
push
jl
fldl2e
leave
and
mov
xor
adc
outsb
xchg
out
add
mov
sub
iret
mov
xchg
sbb
jl
sbb
loopne
xorb
pop
adc
and
in
push
mov
xor
cld
pop
and
adc
movb
pop
sti
mov
nop
jmp
mov
mov
ljmp
and
jne
enter
cmp
pop
leave
mov
mov
xorb
fwait
xchg
cli
enter
imul
mov
cmpsb
jmp
scas
cmp
addr16
andl
mov
repnz
push
insb
and
sbb
fisubrs
pop
std
or
add
dec
mov
in
inc
leave
xor
mov
adc
push
outsb
out
mov
cmpsb
das
gs
and
push
lock
jmp
in
jne
lods
movsl
ja
test
bound
popf
loopne
in
popa
push
dec
xchg
push
pop
mov
stc
movsb
popf
xor
xor
hlt
xchg
addr16
outsl
out
imul
in
dec
jb
jne
call
inc
jbe
mov
ds
lock
sarb
ss
sti
and
scas
fnsave
lcall
je
mov
ljmp
add
push
sub
add
aad
lea
cmpsb
xchg
sahf
pop
fwait
push
out
incl
stos
fwait
arpl
add
xchg
or
sarb
adc
xor
mov
fildl
mov
mov
ss
add
cmp
mov
mov
pop
dec
adc
ret
xor
cwtl
sub
sub
sub
and
sub
nop
sbb
mov
lret
mov
jmp
jle
push
ds
xlat
jge
sub
ja
jmp
mov
pushf
mov
andl
call
sbb
mov
push
xchg
add
and
cmp
mov
addb
sub
push
push
incb
xor
sub
mov
push
mov
jne
sar
mov
mov
mov
ret
mov
leave
movb
stc
insl
jmp
push
add
push
jge
ja
add
lods
ret
aaa
jno
orl
lods
cltd
pop
dec
sub
nop
out
dec
fsubl
ja
int3
mov
pop
jno
push
dec
std
cmp
les
lret
pop
repz
mov
iret
xchg
inc
cltd
int3
mov
push
pop
sub
popa
pop
push
leave
repz
je
test
cmp
sub
shr
pop
inc
mov
out
loopne
or
push
test
fs
dec
or
mov
mov
push
cli
cmc
xchg
jbe
stc
add
and
mov
ret
pop
mov
sbb
icebp
or
dec
ret
mov
sbb
imul
stos
xlat
xchg
sub
outsl
testl
mov
addr16
and
push
test
and
int
dec
daa
int
pop
cmpb
xchg
jl
or
lret
pushf
movsl
jp
jae
pusha
daa
pop
fists
push
repz
pop
inc
dec
dec
movsb
push
js
bound
scas
jle
lcall
idiv
cmp
pop
scas
dec
inc
insb
scas
sarl
or
cmp
outsb
add
enter
dec
jae
int
aam
addr16
ljmp
sbb
mov
imul
repnz
sbb
cmp
fwait
mov
push
aad
cmp
aam
icebp
outsl
dec
pop
jl
cmp
cmp
arpl
xor
mov
adc
cltd
cwtl
xor
sub
lahf
mov
lret
jne
daa
sub
enter
xor
mov
aad
sbb
dec
les
lds
fistpl
or
scas
mov
les
push
mov
inc
movsl
pop
cli
or
ljmp
mov
pop
push
mov
or
inc
xchg
and
sbb
and
aaa
fmull
push
aas
pop
mov
pop
jb
cld
or
sub
mov
dec
jmp
mov
out
cmp
cld
xor
mov
xchg
xor
popf
xor
out
fstpl
shrb
mov
sbb
fcmovnu
mov
mov
movsb
pop
pop
pop
sub
fldt
xor
xchg
fidivs
imul
divl
outsb
cmc
xchg
test
and
or
mov
outsl
xor
xor
xor
push
cmc
adc
push
pop
cmpsl
xchg
dec
sahf
xchg
daa
mov
fstps
aam
xchg
cmpb
jg
fs
inc
mov
rcrw
jecxz
shlb
ja
call
push
fs
out
shl
jnp
lods
mov
inc
push
xorl
ffree
push
sbb
cltd
dec
xorl
xor
mov
fldenv
mov
xchg
jbe
xchg
xor
cmp
and
jnp
xchg
adc
and
xor
fcompl
fcmovu
mov
scas
jl
mov
in
ss
out
pop
scas
dec
sub
dec
movb
cltd
movsb
inc
adc
jg
add
out
movsl
xchg
xchg
sub
cmp
fildll
adc
push
cli
jmp
loopne
cmp
and
imul
out
pop
fwait
fwait
sub
fwait
inc
andb
scas
sub
test
std
mov
inc
arpl
cld
jnp
cmp
scas
repnz
mov
mov
jb
dec
xor
and
jb
jl
pop
in
mov
jne
bnd
xchg
jecxz
cmp
into
std
push
cmp
xor
pop
test
fwait
add
test
leave
push
xchg
add
and
xchg
nop
sti
loop
sbb
scas
int3
sub
subl
sub
or
mov
pop
xlat
inc
jne
dec
inc
cwtl
jnp
sub
adc
pop
lcall
lcall
push
pop
mov
add
bound
sub
aam
andl
mov
jmp
mov
in
mov
dec
pusha
sub
xlat
mov
lds
add
lea
pushf
scas
dec
scas
cmp
push
dec
dec
jne
dec
lods
lahf
sbb
cmp
rcrl
mov
repnz
jb
xchg
icebp
mov
jo
push
mov
sbb
jo
in
jo
insl
lds
mov
add
jmp
xor
cmove
mov
inc
or
rol
hlt
testl
add
sub
adc
push
mov
mov
insb
fsts
test
mov
mov
nop
testl
fnsave
es
push
lea
jbe
mov
xchg
insl
cmpsb
jge
or
out
push
int
fnsave
in
es
push
lea
jbe
mov
xchg
insl
cmpsb
jge
or
out
push
leave
fstl
es
lea
jbe
cmpsb
mov
inc
insl
cmpsb
jge
or
sbb
add
pop
stc
push
lea
jbe
out
xchg
mov
negl
dec
loop
rcrb
ret
cmp
or
sbb
std
sbb
ds
push
movsl
test
mov
gs
sti
or
or
sbb
imul
movsl
stos
push
mov
gs
cli
add
sub
cmp
or
sbb
imul
movsl
stos
std
cwtl
inc
sti
adc
gs
mov
inc
mov
pop
aad
lcall
sub
mov
lret
nop
dec
andl
jo
and
les
xchg
out
imul
jp
mov
in
mov
fs
popf
mov
push
xlat
popa
add
sbb
dec
adc
mov
cwtl
ljmp
lods
sub
sbb
enter
add
pop
pop
mov
sub
fs
xor
push
test
xor
out
xchg
xchg
pop
nop
mov
shlb
stos
test
adc
xor
fldt
xor
lock
rorb
and
inc
jnp
icebp
verw
and
aad
lds
cmc
sbb
imul
movsl
stos
push
mov
gs
sti
add
dec
mov
pop
mov
stc
adc
and
fcomip
fidivs
clc
sbb
mov
fs
aad
push
fnsave
loope
ret
fldcw
fwait
or
sahf
outsb
mov
pushf
cmp
cs
jnp
dec
mov
movsl
stos
push
mov
gs
sti
add
sub
cmp
or
sbb
imul
movsl
stos
push
mov
gs
sti
add
sub
pop
mov
pop
mov
sbb
les
mov
sbb
lret
inc
push
rclb
stc
pop
jmp
sub
loope
std
mov
pop
stc
les
rolb
dec
or
out
push
in
mov
push
sub
jge
or
push
inc
pop
fldenv
dec
outsl
in
lret
and
icebp
jb
cmp
cwtl
mov
jbe
iret
xor
loop
sbb
aad
sahf
push
in
lahf
push
mov
clc
fs
enter
rorb
push
aas
gs
add
aaa
out
lds
sub
xor
cmpsl
imul
mov
push
mov
cmc
dec
fnstcw
adc
fdivr
pop
or
push
adc
rolb
fs
dec
mov
ds
push
in
sbb
pop
mov
or
inc
js
cmp
add
out
or
cmp
mov
push
sbb
fs
dec
sub
jmp
fbstp
or
cmp
insl
popf
test
insb
lods
mov
inc
xor
sbb
push
enter
mov
pop
and
push
mov
or
pop
test
movsb
lret
and
out
xchg
xor
addr16
std
adc
push
lret
sbb
dec
fs
cli
sbbb
loop
jnp
ljmp
sbb
push
out
adc
pop
dec
push
out
mov
loope
push
and
stc
and
push
jg
add
push
mov
push
mov
inc
sarl
repnz
rcll
in
pop
pop
in
mov
cli
fwait
sti
dec
mov
imul
adc
xor
dec
inc
add
mov
shll
les
inc
repz
leave
inc
mov
inc
push
fidivs
mov
jno
or
leave
jl
fwait
push
sbb
test
test
dec
sbb
daa
mov
inc
ss
lret
in
xchg
out
outsb
and
call
xchg
xchg
pop
xor
outsb
add
test
mov
outsl
lret
xchg
mov
sbb
cli
dec
jbe
addr16
jecxz
fnstcw
cmc
inc
dec
std
nop
xor
add
loop
aas
push
and
or
in
jno
dec
movsb
mov
ret
enter
jmp
fistps
sbb
ret
and
loop
lods
push
bsf
out
enter
int3
fucomp
mov
nop
pop
jge
add
loop
jl
lock
movsb
fadds
mov
cmp
int3
jmp
xor
std
fs
pop
inc
negl
pop
gs
push
cmpsb
cmp
add
mov
mul
cmpsb
xchg
data16
sbb
push
rcr
or
std
cmp
dec
loop
shrb
pop
js
cltd
sbb
pop
jp
mov
call
cwtl
jns
pop
aas
sub
lock
cmp
pop
xor
outsl
outsl
nop
test
leave
jne
aad
inc
jno
cmpsl
push
pop
das
or
mov
insb
sbb
inc
or
lret
jae
cli
lock
pop
push
shl
sub
arpl
cmpsb
ljmp
les
adc
loop
mov
dec
rcrl
fwait
sbb
fsts
stos
and
out
mov
mov
mov
int3
pusha
decb
push
adc
stc
inc
cs
lods
mov
enter
popa
insb
push
icebp
out
enter
bound
rorb
jbe
mov
ss
iret
mov
pop
hlt
outsb
pop
out
je
pop
jbe
sub
lods
mov
mov
lret
cmp
dec
movsl
arpl
mov
cmp
xor
aaa
arpl
sbb
lret
and
jno
cltd
jl
add
dec
and
insb
sbb
loope
sbb
fstpt
jnp
jb
aam
popf
mov
add
fldenv
xchg
lock
int
aam
and
pop
cmp
xchg
sar
adc
pmaxub
inc
xchg
adc
sbb
mov
xor
xor
lds
repz
mov
xchg
lods
dec
push
sbb
test
jbe
jmp
sbb
aas
cmp
scas
add
fsub
xor
cltd
inc
jg
jno
push
and
xor
addl
inc
fistpll
mov
sub
jg
and
ljmp
out
xor
pusha
repz
fs
roll
xor
cmc
jle
insl
mov
aam
push
xor
push
sub
fnstsw
lea
cld
fisubrs
sub
test
mov
or
lret
stos
push
das
lods
xchg
push
dec
loopne
je
add
insb
sahf
sub
int3
dec
gs
push
inc
popf
ss
jne
negb
push
or
cmp
mov
jo
in
pushf
ficompl
leave
xchg
imul
fs
and
push
aad
insl
dec
inc
cmp
inc
push
pop
cli
jecxz
jmp
test
mov
or
in
lock
sub
shll
sub
sub
push
inc
in
icebp
repz
jns
gs
mov
jbe
add
out
outsb
cmc
lret
mov
inc
sub
loopne
mov
test
xor
push
adc
dec
and
push
shufps
movsl
and
push
inc
adc
lods
cmp
clc
or
rolb
adc
aad
scas
add
in
mov
sahf
sub
popf
int
mov
mov
rcrl
pop
std
jle
dec
sub
jbe
das
in
mov
outsl
mov
imul
jp
fimuls
push
and
push
outsb
mov
fcoms
movsb
and
ss
push
out
test
cwtl
sti
cmp
push
loopne
jl
aas
insl
dec
xor
das
bound
aaa
adcl
inc
std
fwait
mov
xchg
pop
daa
mov
xor
mov
add
push
test
out
ss
cmp
xor
enter
lds
mov
jb
xchg
and
fisttpll
addb
xchg
test
out
aam
cmpsb
in
fwait
mov
jo
cmp
mov
jb
pop
pop
data16
mov
dec
and
cmc
es
mov
mov
add
mov
or
xchg
aaa
pop
hlt
jg
sub
mov
shl
push
je
cli
sub
mov
adc
loope
pop
sti
les
in
sbb
pop
lds
daa
jns
in
mov
mov
lea
pop
mov
subb
adc
mov
aaa
pop
inc
in
add
mov
orb
lret
push
xor
dec
gs
bound
mov
and
pushf
sub
orl
mov
pop
jo
test
mov
and
imul
nop
mov
out
xor
std
jne
pop
cwtl
dec
sub
jl
test
test
push
mov
daa
xchg
cmpsl
cmc
sub
scas
adc
mov
lahf
push
outsb
popf
aas
xchg
mov
pop
int3
dec
sub
xchg
xchg
aaa
pop
enter
mov
mov
subl
adc
flds
add
inc
fiadds
mov
jo
cmp
sbb
mov
loopne
stos
insl
sti
push
sbbl
mov
sti
outsb
imul
imul
pushl
pop
dec
outsb
in
stos
sbb
mov
aas
and
dec
sbb
lret
outsl
jl
pop
sub
pop
mov
stos
sub
sarb
sbb
cmp
pop
std
cmp
addr16
add
mov
inc
fbld
push
dec
mov
sub
imul
mov
sahf
test
push
lret
lahf
mov
and
shll
test
sub
push
clc
xor
cs
icebp
shrb
adc
jge
pushf
mov
ficoms
lahf
pop
das
movb
lcall
int
sbb
dec
in
pop
cmc
int
adc
loop
cmp
pop
mov
fnstenv
xorb
pop
cmp
push
add
xchg
addr16
test
inc
bound
in
pop
cmpsl
icebp
and
enter
and
mov
imul
sub
mov
fistps
sbb
out
mov
push
std
gs
or
cmp
sbb
pop
lea
outsb
jbe
or
stos
call
and
mov
pushf
arpl
ljmp
adc
test
iret
cmp
cmp
xor
iret
movd
dec
xchg
or
adc
fists
fs
nop
movntq
inc
jo
lea
pop
sbb
orl
and
cmpsl
int
sar
outsb
cwtl
dec
pop
jae
jnp
jnp
shl
push
xchg
mov
cmp
out
or
cmpsl
add
aaa
loopne
iret
jb
jns
mov
xor
insl
jmp
call
clc
fwait
mov
test
lea
pop
mov
or
adc
stc
fs
jne
jo
stos
push
cli
jb
negl
add
sahf
pop
cwtl
nop
or
mov
pop
add
test
fnop
inc
cli
sbb
mov
xchg
bound
pop
cwtl
int
ljmp
scas
xor
cmp
adc
sbb
inc
xor
pop
stos
fistps
add
xor
insb
ficoml
sbb
cmp
inc
sbb
xchg
fwait
push
sbb
lret
scas
lcall
xor
popa
push
cmp
shlb
sbb
scas
sub
pop
mov
cmp
sub
lcall
fsubrl
arpl
adc
mov
popl
ja
fdivr
pusha
int
ss
add
test
jo
movsl
cmpl
lahf
and
fs
dec
stos
fsubrs
ss
stos
test
and
fdivs
xchg
add
outsl
in
xor
arpl
dec
jp
test
sbb
jo
add
xor
xchg
jg
cmp
pop
call
sbb
mov
pop
add
xchg
xchg
sub
xor
jno
add
std
cmp
xchg
js
add
enter
rol
in
or
add
testl
pop
pushf
pop
mov
mov
rolb
ss
lea
imul
xchg
sub
call
lods
popf
or
rorl
shlb
jbe
movsl
push
loope
ret
pusha
jecxz
clc
cltd
movsb
xor
imul
into
dec
ficoml
lcall
lret
fisubl
mov
mov
mov
icebp
lock
gs
xchg
scas
das
fwait
into
xor
mov
aad
das
sbb
push
mov
pop
pop
popf
and
in
xor
std
iret
in
push
int
lods
fdivs
lods
bound
cmp
xor
mulb
std
mov
into
cmc
dec
push
push
loopne
int3
scas
into
out
out
movsb
add
enter
addr16
pop
std
pop
loope
jp
inc
xchg
dec
jo
outsl
inc
nop
push
mov
test
popf
push
cld
scas
adc
xor
insl
loopne
cwtl
bound
inc
shl
jl
int
sub
mov
leave
xchg
push
sub
push
leave
adc
jno
stc
loop
je
inc
add
iret
pusha
aaa
icebp
pop
insl
clc
lods
in
mov
int
fwait
mov
shl
lods
cmp
dec
mov
test
sub
jo
loopne
insl
cmp
fmull
sub
lods
in
mov
xchg
add
adc
notl
roll
jns
sub
sbb
lods
cmp
add
loopne
jb
jmp
inc
dec
testl
adc
rclb
or
add
mov
es
jg
aaa
dec
dec
lret
bnd
pop
ret
mov
lock
fsub
xchg
pop
pop
adc
jae
loopne
push
push
out
push
xchg
push
add
mov
pushf
fistpl
adc
cltd
sahf
loope
fistps
stos
mov
stos
into
cmp
rcr
and
mov
mov
stos
aas
mov
lahf
stos
pop
repz
jnp
fmuls
xchg
iret
lds
std
cmp
andl
xor
mov
test
jno
xchg
in
test
mov
mov
movlhps
xchg
in
add
jg
and
mov
ljmp
pop
mov
lcall
push
daa
inc
rolb
mov
je
cmpsl
mov
cmp
sub
push
push
push
fstl
iret
inc
mov
stc
sub
out
lahf
daa
jge
cmp
mov
mov
jle
not
cmpsl
roll
jo
push
xor
int
sub
shl
imul
pop
dec
leave
xorb
js
mov
aaa
xchg
dec
lcall
aas
fnstcw
mov
js
lret
fwait
ret
mov
out
pop
xor
mov
les
add
push
outsl
inc
xchg
mov
out
in
insl
push
fistps
mov
dec
cmp
cmp
arpl
fbstp
jb
push
js
push
push
push
je
mov
inc
adc
ret
mov
lea
mov
mov
add
rep
dec
inc
popa
or
in
push
jp
cs
out
ret
jp
out
clc
out
fs
int3
sbb
loope
lahf
imul
pop
popa
imulb
rclb
and
xchg
pusha
mov
aas
mov
outsb
push
xchg
pop
imul
aaa
ds
js
rcrb
sbb
push
sbb
aad
pop
jle
sbb
push
cmp
inc
mov
fcmovne
mov
sbb
aas
ss
and
fs
cmpsl
and
mov
cli
loop
stc
arpl
jp
mov
xor
inc
in
or
xor
mov
rorl
icebp
scas
push
sbbb
icebp
test
push
data16
lods
sub
xchg
lret
xchg
pop
lods
and
and
jns
jb
lret
mov
and
sub
push
mov
xlat
sub
enter
mov
mov
cmp
lea
test
fwait
push
ljmp
jns
mov
inc
or
sbb
lahf
inc
jle
mov
aas
lods
and
mov
imul
imul
fdivl
scas
scas
stc
mov
lds
xchg
leave
fistps
or
call
adc
add
cmc
clc
arpl
leave
lcall
push
xchg
lret
or
push
sbb
inc
lea
dec
pop
popa
jo
pop
jl
push
fldt
testb
hlt
mov
clc
mov
xchg
insl
mov
lret
ss
sbb
outsl
mov
mov
pop
inc
int3
cmp
fisttps
xchg
pop
bound
mov
ret
jg
push
adcb
lret
loopne
fildl
mov
xor
pusha
mov
in
stc
outsb
inc
jecxz
fs
lcall
movsl
xor
sbb
mov
out
and
data16
fistpll
dec
fwait
nop
pusha
dec
add
pop
dec
sbb
cmp
push
xchg
pop
cli
aad
outsl
push
push
call
cli
mov
and
cmp
ret
inc
clc
outsb
inc
iret
loopne
pop
lret
js
ud1
adc
lret
sbb
test
xor
addr16
fsubs
xchg
dec
stos
mov
pop
push
ret
push
pop
stc
pushf
mov
pushf
arpl
push
cld
cli
push
jmp
repz
or
iret
sarl
sbb
sti
call
sti
aad
mov
arpl
push
dec
xchg
add
xor
xchg
and
push
leave
lahf
dec
sbb
and
je
in
outsb
push
loopne
pop
jg
in
std
mov
outsl
inc
push
out
shrl
push
neg
jo
lods
fldt
out
cmpsb
cmp
sbb
sub
icebp
dec
push
aas
fcmovnu
cmpsl
inc
xor
insb
inc
or
shll
mov
pushf
inc
cmc
mov
xchg
pop
push
dec
fisubrl
mov
mov
and
or
and
cmpsl
mov
clc
xchg
sbb
xor
clc
in
iret
cltd
ds
arpl
and
aam
jg
nop
arpl
jne
adc
call
inc
daa
out
fldcw
ja
ficoml
mov
jle
pusha
mov
rep
jb
imul
sbb
xchg
sbb
mov
dec
addr16
jp
inc
loop
and
int3
sub
sbb
or
in
ja
xchg
loop
aas
cmp
xorb
inc
xlat
lea
leave
pop
xor
daa
ljmp
jg
shll
sbb
movsb
push
out
push
add
push
mov
xchg
cltd
sub
arpl
fildll
or
or
in
or
mov
enter
push
push
cwtl
mov
scas
push
lret
cmp
dec
call
jl
pop
test
mov
lods
cs
lods
int
std
fs
stos
jbe
mov
mov
pop
cmp
push
sbb
stos
sub
mov
loope
movsl
mov
and
mov
pusha
gs
sbb
xchg
add
cmp
loopne
xchg
cmpsl
xchg
adc
xchg
xor
jge
inc
cmp
loop
sbb
ret
lds
mov
sub
dec
sbb
rcll
repz
jmp
mov
push
xorb
fadd
lahf
inc
ljmp
mulb
call
loopne
push
adc
adc
jge
in
adc
sub
mov
inc
pop
dec
ret
lahf
xchg
inc
clc
push
imulb
mov
enter
add
stc
int
mov
es
fistpll
jb
aaa
je
test
mov
ret
cmp
imul
cli
push
adc
mov
jmp
shl
sbb
and
fistl
outsb
pop
jns
push
sbb
out
repnz
ja
loopne
call
aas
cmpsl
cmp
std
or
jmp
imul
xchg
pop
dec
inc
out
aaa
ret
adc
mov
pop
fnstcw
mov
jo
add
jne
ljmp
fs
adc
xchg
aad
pop
xchg
or
filds
dec
or
push
pusha
mov
sbb
xor
and
cli
sub
or
push
inc
ret
sub
movsl
sahf
dec
jno
ljmp
rclb
out
ret
cmc
push
sub
mov
ucomiss
inc
outsl
jecxz
lcall
inc
dec
inc
xor
outsb
xchg
push
popa
xor
and
inc
lods
mov
sub
xchg
cltd
xor
lret
and
push
mov
push
inc
aad
mov
sbb
ds
cmovg
sbb
xchg
lea
or
mov
cmp
sub
push
xchg
shl
dec
mov
xchg
xor
or
jno
xor
mov
enter
inc
insl
cmp
imul
lret
ljmp
js
lret
xorl
jge
inc
fildl
stos
dec
jge
adc
adc
push
mov
or
ds
inc
mov
clc
popf
pusha
arpl
push
scas
lret
mov
lahf
lret
loopne
les
xchg
push
pop
ds
int
addr16
fwait
sbb
jg
iret
push
movsl
aas
inc
dec
cmpsl
inc
add
repz
gs
xor
push
std
and
mov
scas
mov
add
fsubl
xor
mov
mov
fmuls
movsb
les
scas
es
pop
je
xchg
cld
sub
xor
cwtl
inc
push
jae
cwtl
xor
add
test
sbb
xchg
mov
pop
rol
push
pushw
outsb
out
es
mov
mov
or
in
xchg
ret
out
xchg
jmp
xor
scas
cmp
lret
mov
xor
sahf
fwait
pop
sub
das
and
js
rcl
xchg
cmpsl
dec
ficoml
pop
scas
add
push
stos
xor
sbb
rcll
sbb
xor
pop
subl
xor
repnz
xorl
mov
insl
sbb
out
shrb
outsb
mov
pop
arpl
in
movsb
insl
or
test
pop
and
mov
js
xor
jl
xchg
add
repz
cli
cmp
rcrb
mov
mov
or
mov
aam
add
bsf
adc
icebp
jmp
loope
inc
sbb
pop
jnp
shrb
xchg
mov
xchg
sbb
jno
outsb
xor
rolb
and
sbb
call
xorl
popa
rorb
mov
mov
and
sbb
out
push
inc
sbb
pop
imul
fisttpl
inc
fs
adc
add
inc
in
jo
repz
jnp
inc
xor
push
ja
je
movsb
or
pusha
insb
pop
testb
pop
push
inc
outsl
in
dec
popf
inc
arpl
in
loope
int3
stos
mov
mov
add
orb
imul
movsl
stos
push
mov
gs
sti
add
sub
cmp
or
sbb
imul
movsl
stos
push
mov
gs
sti
add
sub
cmp
jne
in
xchg
jp
dec
mov
movsl
stos
aad
inc
mov
gs
sti
add
sub
cmp
or
sbb
imul
movsl
push
push
inc
out
and
adc
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
jns
imul
push
or
push
fldenv
call
idivb
es
ss
imul
cmp
push
fldenv
xchg
pop
test
pop
aas
dec
ss
imul
cmp
dec
flds
mov
cmpsl
out
int3
nop
push
es
popf
rorb
rcll
jo
sub
fisttpll
lods
lea
jnp
ja
mov
mov
int3
aam
and
dec
pop
push
xchg
push
xchg
data16
fwait
or
inc
mov
pop
sbb
xchg
xor
xor
fldenv
popf
jbe
cmp
adc
div
neg
cmp
adc
imul
mov
testb
subl
leave
or
dec
pushf
mov
cltd
stc
xchg
testb
mov
sub
xchg
lret
jnp
test
movsb
sub
fstp
pop
sti
xchg
mov
sub
mov
roll
cmp
xchg
es
and
imul
pop
sub
mov
jmp
loope
test
adc
add
sbb
jnp
pop
sub
cmp
iret
lods
into
stc
rcll
movsl
fcmovb
out
mov
sbb
add
inc
inc
and
mov
bnd
cltd
aad
fdivl
push
addr16
jbe
inc
sub
cmpsb
leave
mov
xchg
xchg
cltd
out
idivb
es
ss
imul
cmp
push
fldenv
jmp
idivb
es
mov
daa
inc
add
sar
fidivrs
cli
or
lcall
mov
arpl
dec
push
rcrb
inc
push
packssdw
pop
mov
sbb
adc
mulps
test
mov
xorb
repz
popf
rorl
es
int
xchg
lds
outsl
test
ret
insb
icebp
js
lods
dec
mov
js
mov
sbb
shll
pop
or
jno
xchg
loop
stos
inc
mov
out
cmpsb
xchg
dec
add
xchg
push
leave
out
stos
sti
mov
out
mov
or
aam
inc
mov
outsl
jnp,pn
test
in
add
jg
lods
loope
jmp
sbb
iret
xchg
mov
stos
mov
xchg
stc
jno
fsubs
sbb
cmp
mov
imulb
lahf
inc
mov
dec
movsl
xor
cs
xor
or
imul
pop
fldl
mov
mov
mov
mov
cld
jo
gs
pop
mov
movsl
push
out
jns
decl
push
scas
jmp
call
in
repz
and
mov
imull
sbb
sub
inc
mov
into
aam
std
mov
sub
out
ljmp
add
dec
cmp
icebp
dec
pushf
fwait
cld
xchg
sub
push
outsb
lods
adc
icebp
and
and
xorl
mov
leave
int
dec
xor
xlat
push
xchg
xor
lret
imul
cmp
lds
sbbb
add
test
fisttpll
jno
and
shl
lahf
sbb
aad
push
xchg
add
dec
rorb
nop
xchg
leave
outsl
test
or
mov
lods
aam
enter
int3
fmulp
jmp
mov
jp
mov
and
sahf
pusha
fnstcw
dec
add
and
sarl
mov
dec
mov
xchg
sarb
push
push
inc
outsl
or
xlat
iret
jnp
bound
dec
xor
adc
notb
jge
add
sub
cmp
push
xor
mov
push
xor
push
mov
xor
je
pop
lret
movsb
mov
push
cmp
arpl
xchg
sbb
cmc
mov
and
xor
loope
call
jmp
push
call
push
lock
cmpsl
mov
shrl
popf
lods
pop
int3
insl
mov
ljmp
fwait
add
fs
xor
adc
fstl
sbb
dec
xor
mov
lret
sbb
mov
das
inc
push
inc
mov
movb
xor
roll
jo
movsl
mov
loop
les
mov
daa
jge
aaa
xchg
push
pop
ret
mov
mov
cmp
sahf
mov
out
cmc
je
ja
in
cwtl
gs
fdivp
cmp
fildl
mov
arpl
insl
sub
popf
sbbb
lret
in
arpl
aam
mov
ret
out
pushf
shll
repz
aas
mov
mov
imul
sbb
push
out
jecxz
sbb
and
into
cmp
and
xor
test
loope
icebp
dec
and
mov
imul
hlt
roll
adc
and
and
insb
fildll
mov
xchg
cmp
and
mov
inc
or
add
push
in
pusha
div
movsl
inc
scas
jbe
jmp
adc
out
pop
dec
push
add
xchg
fsubrl
jo
rcrb
daa
push
and
mov
fbstp
cmp
clc
add
dec
add
ficomps
pop
mov
cmpsl
lret
xchg
imul
xchg
inc
mov
mov
fnstsw
dec
mov
mov
rorl
shlb
fstpt
xchg
mov
or
or
pop
pusha
inc
mov
jp
jle
xor
dec
shl
daa
xor
pop
aam
jg
test
out
jmp
dec
stc
loop
jmp
jno
jnp
xorb
scas
scas
push
imul
js
sbb
inc
aad
data16
in
dec
inc
mov
pop
adc
xlat
shlb
sub
add
ds
sub
xchg
add
js
dec
add
jo
adc
cmp
in
jbe
xor
push
sub
sub
xchg
jl
pop
cli
cwtl
and
lret
push
insb
adc
mov
pop
jnp
xchg
pop
ja
movsl
pop
nop
inc
pop
fimull
xchg
lods
gs
sub
jmp
imul
lret
outsb
and
lahf
data16
mov
out
roll
adc
mov
testb
jmp
push
dec
mov
cmp
xor
jmp
pop
dec
ss
adc
ret
lods
cmc
mov
ljmp
xor
jp
pop
add
jg
out
jge
hlt
mov
xor
fcoml
mov
jns
pop
mov
adc
xchg
sbb
inc
mov
enter
iret
xchg
stos
mov
ljmp
aas
ret
into
sub
iret
push
push
repz
push
fldl
cmp
sbb
shl
std
mov
lret
inc
cmp
mov
add
hlt
inc
out
jae
add
push
dec
or
leave
scas
jno
push
aaa
inc
mov
dec
lds
jno
xor
out
push
xchg
sbb
jbe
mov
jb
into
or
push
cmc
ss
dec
jmp
xor
lds
fdivs
cld
adc
adcb
cmp
das
mov
push
int
fucomp
out
or
int
jns
das
fistpll
jb
push
adc
fimull
xchg
mov
and
sub
adc
xchg
inc
outsl
add
push
or
rorb
push
sbb
lcall
lds
inc
jno
stos
xor
loop
push
inc
jle
ds
loopne
mov
push
ror
pop
inc
lahf
or
push
hlt
inc
jo
and
int3
icebp
mov
daa
adc
mov
lods
andl
loope
dec
xor
push
inc
in
dec
in
pop
jae
movsb
pop
repz
add
test
cmp
fisubrl
mov
insl
dec
push
int3
xchg
enter
jle
sub
inc
dec
mov
mov
mov
push
sbb
mov
dec
cmp
roll
aaa
or
inc
cmovae
inc
cs
lea
and
stos
cltd
mov
out
movsb
movsb
lret
sar
adc
mov
inc
ret
outsl
hlt
inc
daa
rcll
mov
sbb
shll
shl
adc
or
mov
mov
out
adc
push
mov
mov
js
pop
xor
cmpsl
movnti
popf
adc
stc
cmpsb
add
cli
xor
not
sar
repz
repz
sub
repnz
fimuls
fcompl
js
sbb
dec
push
jmp
xor
inc
mov
pop
stc
sub
sub
inc
dec
xchg
cli
loop
fcomps
dec
aam
mov
notb
mov
xor
inc
mov
push
sbb
es
clc
mov
push
lcall
dec
pusha
xchg
sahf
leave
dec
xchg
xor
cld
pop
pop
inc
jb
out
mov
cmp
inc
cltd
jb
test
xchg
pop
inc
cltd
sbb
xchg
sarl
mov
popf
insl
mov
jb
ret
lock
rorl
inc
inc
or
jg
rcll
loope
sub
test
cmp
inc
cs
shlb
arpl
or
mov
push
call
rolb
pop
or
sbb
imul
popa
cmpsl
sbb
dec
inc
dec
sti
test
mov
or
pop
movsl
lods
xor
dec
inc
mov
xor
insb
out
lds
insb
fstps
cld
nop
jl
mov
lods
std
rcrl
imul
mov
cmp
jno
pop
sahf
shrl
scas
cmp
lahf
leave
adc
xchg
ret
cmp
dec
ret
iret
push
cmp
cmpsb
ret
push
xor
sahf
outsl
aaa
mov
mov
ljmp
pop
adc
mov
add
add
push
mov
out
push
out
adc
shll
cmp
mov
cwtl
ror
repnz
into
xor
cmp
pop
movsb
pop
push
adc
mov
out
sub
mov
sti
mov
xlat
inc
into
cmp
pop
pushf
mov
lods
mov
test
dec
sub
jmp
dec
stc
aad
dec
mov
int
fcmovbe
stos
push
dec
cmpsb
mov
out
fwait
cld
push
ficompl
dec
in
dec
mov
jge
loope
scas
daa
push
les
sti
and
and
mov
outsb
push
idivb
out
sub
into
test
lret
lahf
sub
aaa
or
xchg
movsl
adc
loop
data16
dec
lods
mov
test
mov
pop
sbb
mov
sahf
adc
sub
mov
pop
jbe
arpl
pop
ss
imul
punpcklbw
sarb
cli
push
mov
and
jecxz
dec
xchg
add
sbb
shrl
cmp
mov
daa
fcmovnu
fstl
jno
adc
push
mov
repz
push
lahf
lret
sbb
fsubl
arpl
push
dec
loop
lahf
fsubrl
xchg
movsl
adc
int3
addr16
and
or
test
sbb
add
pop
call
movsb
mov
mov
mov
jno
xor
sbbb
jg
pop
mov
inc
dec
inc
jg
adc
out
mov
in
xchg
loop
sub
lahf
sub
dec
out
ficoms
movsl
scas
xor
dec
push
ss
jmp
add
xlat
push
sbb
inc
in
mov
stos
icebp
shl
es
or
scas
mov
jbe
xchg
cmpb
rorl
sub
xchg
repnz
mov
fs
divb
cmp
pusha
sbb
es
hlt
pop
lock
xor
lret
mulb
lds
clc
jle
sahf
xchg
out
fidivrl
sbb
dec
pop
imul
gs
test
pminsw
andl
xchg
repz
clc
in
pop
dec
push
loop
push
cld
xor
loope
pop
movb
dec
push
fdiv
fdivs
ds
dec
cli
sahf
in
pop
push
scas
inc
dec
mov
imull
push
out
fidivl
movsl
cmpsb
push
nop
sbb
aad
in
push
cltd
popf
cs
xchg
add
mov
fwait
mov
sbb
push
push
rolb
stos
jb
mov
sub
aaa
aas
cmp
push
push
xor
push
push
insb
fisubrs
dec
inc
mov
inc
lret
and
loope
lock
stos
and
pop
pop
test
sub
and
mov
sbb
sbb
lods
lret
shll
mov
lods
cmp
add
stos
loop
movsb
fbstp
imul
mov
movsl
cmp
fsubrl
shrb
outsl
das
into
pop
and
mov
add
aad
jnp
inc
mov
adc
inc
add
push
sahf
inc
cmp
adc
inc
daa
ds
into
xchg
or
inc
pushf
shrb
mov
in
sub
and
mov
fimuls
ljmp
fbstp
icebp
aad
subl
mov
push
aam
jae
pop
and
sti
movsb
ret
test
sbb
sti
and
and
mov
icebp
cmpsb
jne
mov
mov
cli
xlat
jg
mov
add
jne
adc
push
push
ljmp
push
xor
mov
imul
mov
scas
lock
into
mov
add
stos
lret
sub
cmp
in
outsb
popl
add
add
mov
jp
xchg
push
jb
arpl
mov
pop
mov
xchg
sbb
vmovapd
in
adc
movsb
hlt
fcoms
pop
negb
inc
bound
mov
mov
stos
lahf
cmpsl
mov
xor
jge
scas
jge
xchg
sarb
mov
inc
aas
pop
pop
fstpl
jne
push
xchg
cmp
jg
xor
call
sbb
mov
jno
inc
inc
outsb
lock
mov
pusha
sarb
lea
in
aam
dec
ljmp
lret
dec
dec
sbb
add
and
out
xchg
je
popf
lahf
or
xchg
repnz
jle
cmp
push
in
fwait
mov
pop
sti
mov
outsl
mulb
out
and
or
adc
adc
js
sbb
ljmp
lods
enterw
std
push
lcall
mov
jmp
add
ss
mov
int
sub
cmp
add
mov
jbe
rcrb
push
arpl
movmskps
sub
pop
cmp
stos
je
jmp
int
aad
ljmp
cmp
loopne
push
dec
lret
adc
sbb
mov
or
js
cli
mov
rolb
cmp
push
data16
jecxz
mov
scas
push
hlt
in
icebp
mov
push
mov
sub
ficoml
mov
ret
and
pop
paddb
das
shlb
into
mov
or
mov
jle
mov
sbb
sub
mov
rcll
xor
test
push
sub
dec
ljmp
enter
movl
sub
les
std
sub
in
mov
dec
in
xor
insl
out
add
adc
ds
pop
dec
imul
push
iret
cmp
imul
popa
lcall
lea
mov
bound
andb
lods
jae
mov
cli
pushf
hlt
cmp
add
jecxz
in
fcoml
rclb
in
lock
repz
dec
mov
gs
in
and
or
jb
pop
or
xor
pop
int
xchg
pop
stc
or
mov
in
and
pop
cmpsl
mov
loop
xchg
ret
mov
xor
and
mov
sahf
sbb
outsb
mov
mov
popw
cs
scas
insb
push
cmpsb
xchg
push
sub
or
mov
movsb
in
test
into
stos
add
shll
leave
je
or
ds
out
push
jno
fdivrs
cmp
sbb
or
in
push
dec
out
add
shlb
rolb
pop
stos
mov
les
es
and
sub
js
sub
scas
sbb
sub
pushf
pop
rolb
stc
mov
dec
ret
inc
lahf
pop
dec
inc
pop
jge
ljmp
or
imulb
push
and
rolb
out
push
jb
rcll
or
sub
mov
fs
je
fnsave
dec
adc
lret
jg
cmp
test
fsubrl
leave
cmp
xchg
push
jb
in
call
cli
ret
sbb
sbb
stc
dec
movl
push
js
lahf
mov
cs
adc
jle
and
aaa
test
data16
aam
pushf
scas
decl
sbb
daa
icebp
shlb
rcll
int3
xchg
and
lds
pop
ret
or
jle
mov
movsb
test
xchg
mov
or
inc
arpl
sti
out
add
dec
popl
pushf
ss
ja
fisttps
jmp
imul
fs
out
push
insb
addr16
pusha
push
xor
loop
mov
inc
mov
leave
into
push
dec
scas
push
jo
xchg
ret
push
cltd
lods
adcl
inc
mov
and
pop
or
push
xchg
mov
clc
xchg
pop
pop
adc
jnp
andb
in
addl
std
outsl
std
je
pop
jnp
mov
adc
cld
add
or
ret
xor
inc
jnp
dec
jo
out
icebp
sbb
test
mov
shll
stc
dec
cmpsl
adc
pop
lcall
sub
inc
cmp
popf
push
pop
mov
jg
stc
inc
rcll
clc
pminsw
std
pop
xor
stc
cwtl
push
sbb
mov
int
push
in
js
cmp
xor
mov
pop
call
push
iret
mov
in
jl
xor
cmpsb
addr16
cmpsb
out
jmp
fists
fucomip
mov
mov
add
ljmp
xor
adc
mov
xchg
jno
fstps
sub
scas
mov
mov
ja
icebp
mov
sub
mov
aas
inc
cmpsl
xor
insl
hlt
sbb
icebp
loopne
push
ret
cmp
jne
fnstenv
cld
cmp
jnp
add
push
mov
fisubrs
andb
enter
sahf
fiaddl
cli
sbb
xor
jge
jg
mov
push
lock
aam
jbe
ret
xor
jnp
dec
cld
subb
xchg
push
outsl
imul
fsubl
jb
dec
testb
push
lock
mov
mov
data16
gs
mov
ja
jno
xor
insl
and
lods
inc
mov
aad
sbb
ret
push
inc
adcl
pop
insl
dec
test
notb
repnz
pop
or
test
cmp
fbstp
mov
ljmp
aaa
repz
inc
push
bound
cmp
mov
mov
aas
pop
fcomps
inc
pop
stc
pushl
clc
xor
ja
jg
aam
pop
pushf
movsb
and
and
in
cmp
mov
xchg
xchg
rclb
jl
leave
mov
adc
test
arpl
cmp
mov
push
sbb
into
sub
jle
xor
and
mull
fsubrs
cmpsl
dec
or
cmpsl
fstp
repnz
jnp
dec
popf
pop
add
dec
jne
pop
xchg
shrb
pop
in
test
out
sub
xchg
mov
ss
imul
xor
xchg
shr
add
pushf
xor
mov
js
xlat
push
loop
sbb
repz
lock
sub
sbb
and
fidivl
jns
sbb
push
data16
fmull
popf
outsb
push
icebp
into
sbb
cltd
and
arpl
mov
repz
dec
mov
repz
lahf
sub
dec
sub
cmp
es
ljmp
sbb
mov
out
xor
out
mov
push
mov
cli
xchg
aaa
inc
out
cmp
sbb
jmp
mov
add
pop
pushf
pusha
inc
repz
imulb
loop
iret
andb
xlat
int
sbb
cltd
mov
push
push
sar
mov
hlt
ret
add
sbb
bound
inc
lret
xchg
ret
cmp
jge
cs
push
stc
xchg
es
mov
dec
add
xchg
sbb
addr16
das
sbb
lods
sbb
and
lods
leave
shll
outsl
dec
push
icebp
inc
lock
in
mov
cmp
gs
xchg
out
push
clc
jmp
add
ret
adc
and
pop
stc
lods
sub
fists
push
lods
frstor
dec
sub
cmp
xchg
pop
adc
arpl
sbbl
in
add
add
add
call
out
mov
fs
mov
ljmp
mov
shrb
jmp
xchg
xchg
cli
std
xchg
insl
outsl
outsb
push
ret
jnp
test
xchg
fsubrp
add
repz
scas
dec
inc
daa
add
jno
push
in
rcll
fs
loop
divl
cltd
xchg
ret
insl
addr16
push
mov
or
pop
scas
pop
add
gs
push
jge
mov
xchg
jmp
jle
pop
mov
sbb
dec
packssdw
lret
xchg
pop
aad
out
push
sti
scas
and
xchg
rcll
dec
pop
xchg
loop
rcl
sbb
mov
mov
sub
in
in
ss
mov
jb
in
xchg
aas
push
jno
in
lcall
icebp
leave
hlt
mov
clc
xchg
stc
aaa
inc
fstpl
add
pop
push
sub
push
mov
mov
jb
and
insl
out
pushl
mov
inc
and
inc
jge
test
cwtl
sahf
xchg
and
js
cld
dec
cmp
dec
xor
add
push
pop
repnz
mov
mov
lret
mov
sub
fmull
sbb
loopne
or
dec
enter
xlat
adc
ret
pushf
das
jo
jnp
repz
es
cs
enter
adc
icebp
lock
outsl
subl
stos
ds
leave
xor
imul
jmp
mov
negb
xchg
dec
fstpt
aaa
jne
inc
arpl
fwait
lea
aas
mov
mov
int
sarb
clc
xchg
popa
or
sbb
mov
pop
popa
jmp
adc
gs
xchg
aam
mov
pop
lcall
int
shlb
lods
std
cwtl
shrb
sbb
xchg
xchg
test
das
xchg
dec
out
outsb
cmp
mov
inc
xchg
pushf
push
addr16
rcr
adc
inc
jbe
scas
add
inc
sub
adc
pop
enter
and
sahf
sti
xchg
push
imul
cmp
push
fldenv
jmp
idivb
es
ss
imul
cmp
push
fldenv
jmp
idivb
es
ss
push
imul
cmp
push
fldenv
jmp
idivb
es
ss
imul
cmp
push
fldenv
jmp
or
cmp
sub
sub
popa
or
add
xor
and
fistpl
subb
sub
popa
or
add
pop
and
mov
stos
sar
loopne
icebp
cli
in
xchg
fisubl
xor
popa
adc
add
inc
and
mov
test
lahf
aad
cmpsl
int
les
and
fs
mov
mov
inc
inc
push
sub
mov
push
in
pop
lds
inc
cmpsl
inc
sbb
sbb
mov
test
push
cs
xchg
inc
xchg
mov
loopne
push
sub
xor
imul
cli
push
repnz
out
push
add
sub
jge
int3
cmp
andl
mov
dec
rorl
daa
je
xchg
mov
mov
adc
jl
mov
xor
push
mov
push
shr
adcl
sub
filds
lcall
push
aad
xchg
mov
cmp
lret
inc
sub
popa
sbb
adc
push
xor
loope
icebp
loop
repnz
fisubl
dec
sub
outsb
xor
inc
pop
gs
inc
daa
inc
into
mov
enter
adcl
sub
or
push
inc
add
ss
pop
mov
xchg
mov
stos
lret
add
add
or
add
push
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
jmp
mov
hlt
inc
xchg
in
adc
xchg
rcr
iret
fs
mov
cli
xlat
sbb
repnz
rorb
jne
in
idivb
xchg
test
outsb
js
test
ret
inc
roll
rorl
imul
mov
daa
jbe
push
push
cwtl
loope
jns
rolb
sahf
jle,pn
push
push
dec
cmp
jae
aad
dec
jmp
mov
test
xor
pop
in
or
sub
sti
mov
out
in
xchg
mov
push
aad
cmp
mov
into
movsl
aas
popf
and
add
test
ret
jb
add
cmpsl
jae
and
fnstsw
cmp
mov
mov
aas
int3
sub
push
dec
cltd
or
inc
test
imul
cli
and
xchg
add
inc
mov
fnstsw
fsub
mov
pop
sbb
daa
cmp
jae
mov
inc
out
int
lods
stc
adc
ljmp
inc
stos
sub
les
sarb
adc
mov
jb
xor
fxch
ss
enter
stc
insl
jnp
movb
or
cmpsl
outsb
pusha
and
pop
jnp
xchg
xchg
mov
cmp
rorl
jmp
sub
call
push
mov
test
sbb
or
lock
mov
or
adc
jmp
in
xor
adc
outsb
into
enter
fstpl
mov
fwait
iret
xchg
xchg
ret
mov
push
xor
jg
push
fidivs
push
sub
fldt
sbb
or
test
sbb
das
cwtl
adc
fsubl
adc
sub
mov
mov
pop
mov
add
aaa
dec
cmp
cli
mov
das
arpl
mul
and
sub
cmp
jmp
mov
dec
xchg
pop
rcll
push
pop
push
scas
test
imul
xchg
xchg
xchg
cmpsb
cmp
adc
shl
add
stc
add
inc
movsl
mov
call
xlat
push
pop
sbbl
xchg
lods
pop
into
outsb
sub
xlat
and
inc
sbb
add
std
sarl
jmp
fidivrl
data16
xchg
sbb
push
xchg
bound
xor
push
insl
adc
mov
fdivrp
pop
mov
daa
jl
xor
and
iret
mov
cmp
xchg
inc
mov
mov
xor
fdiv
clc
outsb
or
clc
and
mov
arpl
mov
stc
and
or
aam
mov
or
xchg
jl
jl
test
mov
mov
pop
lods
cmc
xor
xor
insl
sbb
mov
or
mov
cmp
lahf
lcall
mov
cmc
jo
jle
imul
arpl
fisubrl
data16
pushf
test
pushw
ret
mov
xchg
sbb
push
pusha
inc
stos
leave
je
das
jnp
adc
cmp
cmp
aas
lret
data16
or
and
mov
int3
loope
adc
pop
inc
das
pop
jp
into
mov
mov
mov
les
jle
loopne
xchg
js
push
fidivl
lods
mov
push
and
hlt
rcl
sbb
add
das
mov
jo
push
and
fmull
xor
jecxz
movsl
jg
popa
leave
es
mov
or
nop
div
bound
cmp
sub
or
mov
repz
mov
jne
cmpsl
xor
in
imul
adc
adc
ret
add
push
adc
insb
mov
aam
mov
pop
sar
sbb
push
cld
ss
mov
mov
sub
outsb
dec
jg
fucom
repnz
inc
mov
push
movsb
jmp
pushf
and
or
js
lea
sbb
push
push
push
sub
iret
test
mov
pop
std
lods
outsb
cmc
pop
stos
jp
cmp
inc
push
cs
mov
das
test
add
ret
push
mov
push
es
xor
inc
aam
cmpsb
and
subl
jnp
or
scas
inc
lods
incl
jle
ljmp
inc
sbb
cmp
ret
push
push
cmp
gs
mov
inc
fs
fisttpl
dec
test
cmc
aad
es
rcrb
in
outsb
inc
decb
cmp
jae
lret
fwait
inc
add
divl
rclb
pop
mov
daa
inc
add
xor
mov
mov
and
mov
stos
jp
pop
pop
xchg
pop
movsl
popf
sub
cmp
pop
inc
movsl
xchg
adc
rcll
pop
repnz
sahf
push
adc
inc
jg
xchg
aam
lahf
jb
roll
popf
sbb
imul
adc
fs
test
pop
push
pushf
shrl
lea
mov
add
mov
pusha
jge
pop
push
cmp
mov
in
cmp
dec
xchg
xchg
in
xchg
sbb
nop
repz
push
sub
or
mov
leave
popf
jg
sub
rcrl
je
cltd
adc
push
idivb
repnz
cmp
cmpsl
mov
xchg
fistps
inc
imul
dec
mov
movzwl
cld
sbb
lock
mov
dec
insb
inc
inc
mov
inc
xor
add
in
push
daa
push
lds
mov
mov
cmp
jecxz
ficoms
lahf
je
pop
mov
cld
lds
cmpsl
fs
ret
mov
out
imul
aam
into
xbegin
lds
jge
inc
cmp
mov
lock
out
pop
push
cltd
push
pushl
popa
inc
or
sub
je
shlb
stos
adc
lret
mov
mov
cmc
bound
mov
ret
push
xchg
daa
mov
jge
pop
imul
fcompl
mov
fs
xor
scas
xchg
adc
aam
mov
out
cld
ficompl
and
leave
xor
jne
jmp
sub
push
mov
shrl
outsl
aas
xor
dec
push
leave
sub
aas
inc
mov
outsb
jns
ret
pop
inc
jp
aas
andl
addr16
push
sarb
adc
dec
mov
ret
jp
mov
pop
cmp
pop
jo
push
faddl
je
xorb
das
pop
add
or
mov
xor
xchg
negl
mov
mov
es
mov
push
push
clc
imul
neg
sub
jmp
cltd
in
scas
inc
adc
sbb
dec
jns
xchg
ljmp
xchg
and
aaa
pop
shll
and
faddl
mov
sub
xchg
cs
push
pop
sub
push
and
mov
pop
sarb
cmp
adc
ds
movsb
ret
shl
inc
cmp
mov
mov
sbb
mov
mov
jns
lcall
mov
cmpsb
push
int3
in
sbb
jae
movsl
push
xchg
or
ljmp
cmp
mov
jg
sbb
jns
mov
js
rcrl
and
in
xchg
or
mov
mov
cmpb
fwait
jp
pop
xchg
dec
and
fnstenv
cwtl
adc
aad
or
cmc
cld
lods
lock
int3
xchg
inc
jmp
pop
sbb
adc
sub
loopne
mov
add
jb
shr
add
inc
inc
iret
adc
notl
stos
xchg
scas
cmp
mov
push
push
stos
jb
mov
push
dec
sbb
cltd
mov
add
dec
xor
in
add
loop
lret
out
xchg
push
fstpl
push
fisttpll
cmp
push
into
mov
and
and
or
push
lret
mov
lcall
lea
adc
in
jnp
mov
movsb
push
adc
imul
out
lcall
sbb
repz
std
aaa
jns
and
outsb
int
mov
jl
push
fsubrs
inc
lea
mov
jmp
out
or
test
pop
inc
dec
stos
pop
repnz
push
fdivl
pop
push
mov
stc
and
lret
cld
jecxz
dec
jne
push
cli
jae
aam
dec
jp
idivb
pop
xchg
cmp
stc
je
or
mov
sub
fsubl
es
xchg
movsb
push
xchg
add
xchg
nop
inc
mov
cwtl
sub
ret
lods
jns
pop
xchg
mov
adc
pusha
repnz
cmpsl
xchg
or
mov
adc
lods
into
daa
fistpl
inc
pop
fcomi
sbb
popa
push
mov
mov
or
cld
test
pop
repz
dec
push
test
in
mov
pop
mov
cld
mov
dec
mov
stos
and
std
enter
mov
movsb
cmp
rcr
jle
imulb
adc
ja
sti
in
add
xchg
jne
je
fimull
stos
loopne
inc
add
ljmp
cmpsb
or
loopne
leave
cmpl
int
and
pusha
jae
sbbb
les
dec
nop
mov
push
xchg
insb
mov
mov
jmp
jae
rep
sub
cmp
shlb
std
loope
mov
or
xchg
cmpsl
cmp
out
lods
mov
mov
pop
cltd
adc
incl
outsb
ljmp
or
jns
xchg
aas
jnp
aam
and
jg
cmc
and
jmp
jmp
push
add
sub
xor
clc
mov
xlat
call
and
push
push
int3
arpl
sbb
enter
or
inc
dec
and
mov
lcall
pop
rcrb
mov
popa
icebp
cld
jecxz
mov
popa
cmp
frstor
dec
pop
pop
sub
pop
xchg
adc
ss
or
idivl
mov
sub
cmp
xchg
leave
cmpl
dec
add
mov
popf
cmpsl
ds
js
test
jbe
pop
iret
and
cmp
or
xor
test
int3
mov
insl
pushf
in
in
dec
aam
call
clc
scas
imull
push
cwtl
fdivs
test
sahf
imul
idivb
mov
addr16
sub
jnp
ss
push
lds
and
jge
cmp
jno
inc
jae
xchg
jnp
negl
add
inc
into
imul
inc
sub
test
in
fs
adc
push
cld
aaa
test
add
or
jno
mov
cwtl
pop
cmpsb
dec
movsb
sbb
clc
mov
fs
lcall
mov
sbbl
aam
mov
gs
push
daa
mov
enter
xchg
xor
sub
push
jno
or
out
nop
xchg
mov
inc
in
push
movsb
sti
das
or
or
enter
sarb
fucomip
pop
push
dec
imulb
push
shl
loope
inc
lret
mov
shr
lds
mov
pusha
movsb
sbb
dec
xchg
aas
jbe
mov
or
xor
jmp
add
cwtl
pop
mov
mov
xor
push
mov
test
lcall
and
into
mov
nop
pop
sti
and
fistpll
scas
cmp
cmp
jnp
mov
inc
sti
adc
sub
pop
jge
adc
mov
leave
jecxz
out
inc
jmp
aad
pop
test
adc
dec
add
sbb
sarb
aas
sbb
sub
push
fsts
test
sbb
xor
ret
push
sub
test
dec
inc
and
out
testl
outsl
icebp
jns
fs
xor
out
pop
mov
mov
hlt
jmp
cmp
rclb
or
pop
jecxz
mov
shlb
cwtl
lock
mov
lret
lock
pop
xor
and
fsubrl
out
out
fldenv
jmp
cmp
arpl
inc
pushf
and
pop
cwtl
mov
bound
int3
sub
pop
leave
xor
int
imul
mov
stos
and
cmpsb
or
mov
push
inc
sbb
cld
sarb
call
cmpsb
push
movups
test
leave
lds
or
inc
shlb
ret
xchg
sbb
xchg
rcrl
push
orl
mov
mov
faddl
mov
add
cmp
dec
pop
xchg
add
cwtl
xchg
ss
ret
movsb
adc
lcall
mov
or
mov
sub
nop
inc
xchg
adc
fisubl
in
push
sahf
inc
mov
rclb
in
test
or
cwtl
add
adc
xchg
lods
movl
aam
push
lds
inc
mov
shl
mov
and
cmp
movsl
repz
xchg
cmp
adc
ret
jne
cmp
and
les
ds
fidivs
fwait
mov
push
and
jecxz
aaa
jp
rcrl
in
sub
jns
mov
push
sub
sub
jnp
inc
dec
fcmovne
or
fwait
das
pop
mov
push
pop
add
call
cld
mov
in
and
pop
insb
cmpsb
add
pop
adc
mov
imul
push
pop
es
xchg
jb
dec
into
loop
mov
loopne
sbb
or
decl
call
mov
and
fcmovnu
jmp
sbb
imul
ret
mov
testb
xchg
jge
ljmp
pop
mov
and
std
push
xchg
sub
aad
paddq
lods
xchg
lahf
call
mov
inc
inc
add
xchg
pop
enter
aad
xor
lret
adc
sub
imul
lea
or
lret
in
mov
je
sub
movsl
fwait
sarb
xchg
lret
shrl
and
jb
fnstsw
add
push
imul
pop
out
fsts
insl
cmp
lahf
pop
xlat
ffreep
movsl
fdivl
fistps
clc
adc
jbe
jge
sub
es
aam
loope
incl
fcomps
in
pusha
sbb
call
enter
cwtl
fisttps
rcrl
movsb
cmpsb
pop
shrb
rcrb
popf
ss
dec
push
xchg
mov
mov
aas
je
xor
sbb
push
mov
sbb
sub
lret
xchg
ja
push
adc
fs
mov
jno
mov
inc
push
xor
loopne
jge
mov
cmpsl
xchg
lds
or
jecxz
lret
pop
mov
fwait
popf
push
mov
xchg
sub
scas
cmpsb
cmpsl
or
pop
out
fmul
sub
icebp
mov
xor
enter
xchg
popa
jae
cli
fldcw
loop
hlt
popa
addr16
test
cmc
sub
mov
insb
gs
mov
lret
test
loop
adc
and
inc
loopne
inc
adc
mov
sub
inc
ficomps
movl
pop
adc
add
mov
xchg
mov
xchg
xchg
dec
dec
xor
or
sahf
aaa
and
fmuls
mov
cmpsl
insb
fdivl
in
add
lret
push
les
mov
inc
scas
mov
dec
lahf
or
movsl
cwtl
jbe
in
push
mov
lods
pop
cmp
outsb
jl
cmp
cmpsb
mov
ror
clc
push
xchg
icebp
jbe
mov
sbb
add
sbb
sub
jg
xlat
pop
jl
fwait
stos
test
jg
movsb
push
push
out
fsubp
not
xor
xchg
arpl
sbbl
push
insl
dec
and
inc
xor
subl
loopne
mov
stos
add
nop
in
sub
pop
mov
fwait
cwtl
mov
cmpsl
xchg
adc
lret
or
or
jl,pt
in
inc
mov
jp
dec
mov
in
jmp
jno
sti
int
in
cmpsl
jge
mov
mov
adc
cmp
in
loopne
add
cmp
stc
adc
dec
addl
dec
or
mov
adc
nop
sahf
daa
add
push
fs
xlat
ja
jge
fsincos
cmpsl
fildl
mov
sti
xchg
movsb
arpl
jne
mov
add
lahf
popa
cli
push
ja,pn
xchg
mov
clc
xor
mov
test
pushf
stos
int
sub
and
adc
xchg
mov
insl
fwait
push
repz
pop
dec
dec
gs
mov
scas
jbe
pop
inc
xor
lock
sbbb
dec
push
pop
inc
push
dec
incb
loop
lret
jecxz
inc
xchg
mov
mov
stc
sahf
sahf
les
cmc
adc
mov
push
nop
daa
lret
pop
sub
dec
mov
mov
test
lea
xchg
lea
xchg
pop
ds
sbb
pop
mov
cmpsl
inc
arpl
cmp
ja
ljmp
jmp
pop
lods
and
add
push
std
enter
inc
repz
push
push
pop
xor
inc
test
push
sub
add
pop
adc
hlt
push
push
lret
cmp
xchg
sbb
scas
movsb
sbb
sbb
push
inc
mov
add
sbb
in
fldt
test
clc
test
xchg
cwtl
pop
out
test
test
xchg
test
aaa
dec
aas
mull
pop
and
mov
add
js
out
sbb
sub
inc
fdivrs
das
enter
nop
add
in
lret
push
jg
sub
pop
cs
push
fwait
scas
adc
dec
out
imul
pop
mov
fsub
cmpsl
mov
xchg
mov
mov
add
out
roll
dec
cs
push
test
xchg
mov
add
rcrb
and
push
push
xchg
xchg
lds
test
lahf
in
mov
and
cltd
dec
xor
rcr
mov
cmp
adc
daa
mov
inc
xchg
dec
stos
mov
out
mov
lea
scas
pushf
add
jl
add
sub
daa
pop
test
push
xchg
xor
sti
ja
cmp
mov
insl
test
int3
cmc
lods
lret
mov
xlat
ss
out
and
cmc
mov
fs
mov
out
test
add
pop
mov
cmp
addb
inc
jp
cs
or
imul
mov
subb
in
shr
or
ljmp
loope
fcompl
inc
mov
sub
jno
jg
shr
cs
aaa
push
sti
out
sbb
sbb
stos
jbe
mov
aaa
fistl
stos
push
paddusw
xor
mov
mov
xor
cmp
jmp
scas
dec
pop
xchg
xchg
testl
sub
pop
imul
sbb
pop
and
mov
or
pop
mov
cmp
cmp
jge
adc
add
in
xchg
push
js
mov
nop
mov
mov
mov
dec
ret
mov
testb
rorb
insl
sbb
pop
je
or
mov
fisttpll
lret
or
cltd
add
insl
xor
mov
stos
lods
ds
stos
lret
call
jl
lret
insb
lahf
test
testl
or
nop
repnz
mov
jbe
push
xchg
jmp
pop
call
loop
shrl
add
xchg
pop
dec
iret
enter
pop
aad
cmp
and
mov
mov
stc
pop
add
mov
adc
jo
xor
out
push
sbb
xor
sti
outsb
dec
ret
fadds
cmp
adc
pop
sti
test
lahf
lock
mov
outsb
cmp
or
aad
test
movsb
pop
pop
aaa
inc
sub
jp
popf
dec
das
sbb
and
mov
cli
adc
fldcw
mov
rolb
std
or
into
xlat
js
ret
sar
iret
das
es
sti
add
mov
iret
stc
xor
push
int3
or
or
idiv
jne
and
xchg
xor
inc
imul
pop
loopne
in
mov
enter
fisttps
lcall
mov
dec
push
push
or
inc
add
or
out
sub
pop
cmp
pusha
loopne
sbb
rcl
push
xor
sub
mov
popf
push
lea
or
xchg
fs
mov
cltd
std
mov
mov
dec
test
clc
mov
cmp
mov
repnz
pop
and
dec
lock
insb
cmpb
jp
add
and
andb
sbb
mov
or
cmp
insl
out
ss
shll
mov
sbb
mov
dec
mov
and
pop
into
inc
mov
in
cmp
sbb
mov
pop
leave
lea
dec
or
sub
dec
les
leave
inc
insl
jnp
adc
shll
aas
mov
sbb
jae
push
jae
mov
jp
push
das
mov
popa
cltd
icebp
shll
stc
inc
icebp
fwait
pop
dec
pop
movsb
sar
inc
ret
fs
or
sahf
stos
push
data16
cmp
sti
push
mov
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
push
push
sub
or
add
fisubl
lret
rcll
loope
xchg
pop
xor
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
aaa
cmp
adc
dec
push
outsl
sub
fiaddl
or
add
add
add
pop
add
add
outsb
add
insl
add
push
rolb
mov
cmpsb
add
add
add
add
arpl
add
add
push
add
add
add
add
add
push
add
mov
add
add
add
pop
add
fwait
add
add
sub
addl
or
add
add
add
push
add
add
add
add
dec
add
add
into
add
add
add
add
add
sbb
pusha
add
add
add
add
repnz
add
lcall
add
add
add
loopne
call
add
stos
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
test
add
pop
add
add
addl
add
add
add
jae
add
push
add
sub
movsl
add
add
or
into
add
add
sub
adc
clc
add
add
pop
add
bound
stos
add
add
add
pop
add
add
add
add
jne
pop
add
add
xor
xor
xor
add
add
addl
pop
add
clc
add
add
add
add
outsb
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
imul
add
add
add
add
inc
add
add
add
add
add
xchg
add
add
add
add
add
outsb
add
dec
add
add
add
add
les
push
add
add
stos
add
add
or
testl
outsb
add
add
and
repz
add
add
add
add
out
add
add
add
add
push
add
add
add
adc
rolb
add
add
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
add
dec
add
add
mov
add
jne
sub
insl
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
cmp
dec
add
flds
cmp
lcall
add
push
add
add
add
add
add
dec
add
les
testl
insb
add
cmp
cmpsb
add
add
push
sub
js
mov
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
push
add
add
js
xchg
add
add
add
add
add
data16
add
or
pop
add
add
les
imul
aam
pop
add
xor
add
add
add
add
add
data16
add
add
xor
add
fiadds
lret
add
add
clc
add
cmp
stos
add
add
add
add
add
add
add
or
add
bound
mov
rcll
aad
jge
fnstenv
xchg
and
push
pop
and
test
call
sbbb
pop
iret
lea
pop
sbb
inc
arpl
mov
inc
inc
je
lahf
test
aam
lock
arpl
mov
pusha
jne
adc
divb
pop
idivb
fldenv
and
lcall
sub
rcrb
jmp
into
jg
lods
fnsave
pop
jl
aad
lahf
pop
popf
xchg
push
mov
add
ds
scas
movzbl
or
mov
repz
and
cmp
repz
push
mov
arpl
lods
xchg
and
inc
movaps
adc
scas
sub
test
sub
faddl
push
mov
mov
jo
inc
shlb
aad
push
cmpsl
pop
dec
xchg
into
sub
mov
scas
sub
lods
push
inc
xchg
loopne
cltd
aad
cmp
adc
cmp
pushf
dec
jns
or
add
inc
shlb
add
add
xchg
sbb
cwtl
pop
cmp
fisubrs
pushf
icebp
pop
imul
push
lea
inc
or
sbb
pop
push
mov
ja
dec
mov
into
stos
testl
cwtl
outsb
xchg
pusha
es
mov
stos
add
sar
shrl
scas
pop
mov
ds
out
lahf
add
sbb
mov
sbb
sbb
rclb
add
push
xchg
or
into
pushf
rolb
cwtl
sub
ds
ljmp
aam
push
pop
and
fsubr
in
mov
ljmp
lahf
jb
mov
aad
aad
push
xlat
scas
or
cmpsb
fsubrl
push
movsl
add
cmp
fdivl
stos
pop
icebp
rolb
fstps
ljmp
jns
ss
sbbb
enter
or
mov
repz
int3
push
notb
push
or
cmc
xor
xor
je
test
popf
xchg
movsb
loope
mov
in
lcall
sbb
in
add
cld
inc
lods
pop
dec
shll
aam
jle
jl
sahf
adc
je
ja
push
jb
add
pusha
jecxz
push
dec
bound
jle
jl
mov
sahf
int3
rclb
pop
xchg
stos
cmc
mov
pushf
fdivs
mov
shlb
test
push
or
xchg
out
mov
push
out
stc
mov
lahf
in
addb
in
and
jmp
mov
gs
mov
gs
aad
xchg
mov
jg
pop
mov
dec
push
aaa
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
