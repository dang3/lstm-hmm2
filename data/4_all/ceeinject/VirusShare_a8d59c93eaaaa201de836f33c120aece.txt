call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
mov
cmpsl
xchg
adc
and
xor
add
adc
inc
divb
addr16
xchg
mov
cmpsl
xchg
xlat
jecxz
repz
pop
push
inc
add
adc
inc
jae
add
xchg
mov
cmpsl
xchg
xlat
jecxz
repz
pop
xor
adc
es
cmp
or
mov
aad
xchg
and
adc
xlat
aad
fnstsw
call
xchg
fsubl
xchg
sbb
cmp
inc
in
insb
std
pusha
inc
or
lds
xchg
loope
sub
mov
push
push
lahf
jbe
cltd
add
or
jg
das
decl
orl
pop
fisubrs
enter
mull
mov
mov
xchg
rorl
xlat
loop
repz
pop
clc
pop
pop
mov
or
mov
fisubrs
repz
fldl
lahf
insb
insb
loop
out
out
pop
fs
cld
scas
rcr
jae
xchg
mov
mov
push
xchg
push
jle
mov
xor
insl
xor
adc
imul
ja
rsqrtps
mov
cmpsl
xchg
xlat
jecxz
repz
pop
xor
add
adc
inc
jae
inc
addr16
int3
out
mov
ljmp
xchg
lea
inc
push
imul
add
add
inc
xor
xchg
mov
ret
stos
stos
xchg
divl
inc
jbe
bound
adc
add
ljmp
xlat
jecxz
repz
pop
xor
add
adc
inc
jae
inc
addr16
xchg
mov
cmpsl
xchg
xlat
jecxz
repz
pop
xor
add
adc
inc
jae
inc
addr16
xchg
mov
adc
das
imul
clc
adc
movsl
lcall
mov
inc
sti
sub
push
mov
lret
icebp
jne
data16
lds
sbb
add
mov
push
push
call
lret
jo
mov
push
dec
mov
call
pop
mov
std
in
mov
in
mov
dec
sbb
jbe
mov
dec
lret
pop
sbb
ljmp
in
mov
pop
xor
and
mul
ror
pop
pop
xor
xchg
data16
sub
mov
mov
inc
lahf
dec
out
mov
sti
xorl
lock
nop
mov
cltd
push
xchg
mov
dec
sub
jb
int
imul
mov
jo
cmp
sbbl
les
and
xchg
sub
push
xchg
xchg
add
jb
sbb
jb
pushf
sbb
lcall
and
or
mov
test
lahf
std
mov
cmp
scas
mov
addr16
jg
addl
daa
cmpsb
lods
adc
loop
inc
loopne
push
and
cmpsb
jl
inc
mov
dec
cmp
int
cmp
or
cmp
call
mov
aaa
add
inc
mov
jb
rol
pushf
or
and
lahf
mov
mov
dec
stos
aaa
xchg
inc
out
jbe
cmp
cmp
add
icebp
popa
or
lods
pop
mov
pop
xchg
out
pop
push
mov
and
out
pusha
cli
and
enter
xor
sbb
into
fxch
outsb
ret
lret
out
push
inc
fbld
loop
daa
mov
jp
pop
pop
ret
pop
aad
fsts
dec
or
mov
aas
pop
xchg
mov
add
scas
les
cli
dec
and
push
mov
mov
mov
sti
mov
outsb
jbe
inc
jge
inc
and
add
movl
pushf
vsubss
add
mov
pop
mov
jmp
mov
cs
push
scas
mov
scas
lret
out
xchg
out
xchg
pop
jecxz
shl
pop
ss
add
imul
jmp
daa
lds
mov
adc
push
and
ret
in
jge
and
adc
in
dec
inc
cmp
push
test
cltd
ret
mov
jb
cmpsl
sti
dec
inc
adcl
jbe
movsb
and
sub
out
icebp
and
xor
rcr
adc
outsl
sub
mov
addr16
setnp
mov
adc
cmc
mov
jb
icebp
adc
cmp
sub
inc
sbb
mov
in
jae
std
push
jno
divb
push
jg
hlt
das
mov
xor
pop
ficomps
test
ret
push
push
fwait
adc
stos
mov
loope
lahf
sub
out
push
pop
jmp
les
clc
push
lds
push
aas
add
jl
sbb
sbb
gs
std
and
aaa
add
push
push
addb
inc
ret
xchg
pop
cmp
adc
push
fldcw
dec
cmc
add
xchg
cmp
cmp
insl
cli
divb
daa
mov
int3
mov
push
push
es
mov
pop
out
or
shll
mov
inc
cmp
scas
push
in
dec
push
scas
cs
es
jl
mov
lret
jb
adc
cmp
pusha
int3
lods
xor
or
xor
leave
scas
or
or
fwait
dec
pop
mov
lcall
mov
push
add
inc
add
mov
push
subl
mov
adc
loopne
pop
pop
mov
test
push
lcall
cltd
push
movb
in
mov
xor
inc
push
cmpsl
gs
js
sbb
jl
jle
addr16
mov
dec
call
xor
cld
fs
add
or
outsb
jmp
add
in
mov
mov
gs
cmovl
lods
in
test
mov
mov
and
sbb
in
pop
loop
fmull
divl
popa
push
fwait
sub
jg
or
jmp
cld
insb
cld
fistpl
ja
lods
sub
xchg
ret
dec
out
aas
gs
sub
dec
push
loope
fsubs
add
inc
stc
inc
ja
popf
or
ss
cmpsl
and
stos
pop
pop
sub
out
jno
push
fst
negb
jge
mov
cmp
das
xchg
scas
mov
shll
xchg
fs
icebp
fisubs
loop
adc
popf
fisubrs
xchg
dec
push
pop
cld
mov
sub
add
rcrb
push
mov
mov
and
cmp
dec
adc
cmc
ret
cmp
cmc
jmp
lods
sub
fdivs
push
inc
fldl
shl
sub
mov
jp
xchg
outsl
fs
rorb
in
insb
adc
in
sub
add
or
mov
enter
mov
push
loop
cmp
mov
test
mov
std
lcall
bound
das
adc
mov
cmp
dec
ret
iret
iret
arpl
es
out
adc
push
adc
xchg
movsl
mov
dec
shll
lret
add
xchg
nop
lds
dec
mov
xor
movsb
fidivrs
or
stos
loop
shr
leave
mov
mov
cmp
push
out
movsl
push
push
shl
jne
or
mov
ds
ret
mov
mov
out
mov
stc
in
jl
inc
mov
jmp
ficoml
jg
and
and
xor
add
cmp
rcrl
add
test
cmp
lods
in
sbb
rorl
mov
js
xchg
pop
push
dec
and
mov
js
scas
sbb
repz
cmp
lock
jns
fmull
lea
ret
fisttps
mov
ret
push
loope
pop
call
push
mov
mov
mov
mov
shll
mov
cmp
sub
push
add
sahf
pop
xchg
test
dec
lret
testl
fstpl
fdivr
cltd
push
push
xchg
cwtl
and
fwait
dec
popa
push
pop
ljmp
add
cwtl
cmp
pop
cli
pop
mov
xor
aad
xchg
mov
daa
popa
int
jno
aaa
fwait
cmp
out
pop
cmp
xor
xor
push
jge
int
in
subb
std
outsl
call
aas
ljmp
sbb
scas
ficoml
insl
or
imul
fdivp
mov
cli
push
stos
jbe
sbb
sbb
jnp
push
mov
test
fisubl
inc
mov
ret
cmp
pop
imul
xchg
sbb
push
movsl
add
dec
cmp
cwtl
mov
cs
xchg
mov
push
js
lock
push
movlhps
pop
dec
xchg
pop
fcoms
or
cli
and
push
mov
jecxz
adc
push
and
ja
dec
negl
stc
dec
dec
adcb
and
mov
sbb
cmp
pop
adc
addr16
xor
inc
minps
aas
mov
das
mov
add
pop
mov
in
jns
loopne
add
pop
lods
out
jno
or
ljmp
stos
push
sti
lcall
lahf
pop
scas
sbb
and
adc
repnz
outsl
repnz
xchg
cmpsb
or
adc
repnz
cmp
lods
sub
add
sti
std
ss
push
sbb
fstpt
dec
cwtl
int
xchg
stc
mov
or
sti
rorb
xchg
mov
outsb
cs
packssdw
shr
stc
push
dec
mov
mov
cwtl
ret
clc
and
xor
cs
pusha
pushl
les
loop
add
rcrl
mov
and
loope,pn
scas
sahf
cmpb
cmp
out
xchg
sbb
dec
xor
mov
int3
dec
cmp
mov
fwait
xor
jne
mov
jns
and
inc
jg
mov
mov
push
xor
sub
les
add
popf
out
ss
ljmp
lods
inc
repz
out
cmp
popf
push
push
push
cli
stos
jp
es
loop
jg
fisubrs
scas
cmpsb
insb
iret
cld
test
leave
shl
lret
or
faddl
sub
inc
imul
fnstcw
xchg
push
jae
sub
lods
pop
or
xchg
inc
adc
dec
jl
push
pusha
dec
sti
shll
sbb
mov
out
pop
in
push
inc
ljmp
adcb
sub
push
in
add
call
rclb
add
cld
mov
jl
popa
mov
sub
xchg
std
sarb
and
dec
dec
unpcklps
adc
jmp
stos
mov
cpuid
or
daa
push
mov
fucomp
xchg
mov
mov
push
and
mov
bswap
int
fs
mov
outsl
iret
adc
lcall
dec
insb
std
lock
pop
into
rcll
adc
pop
xchg
xchg
mov
test
out
jge
push
xor
clc
loop
inc
inc
cltd
scas
pop
pop
add
pop
out
inc
icebp
clc
orb
mov
arpl
sbb
mov
push
mov
dec
mov
sub
mov
push
gs
jecxz
mov
sbb
sti
sub
cmp
in
iret
jg
scas
cld
mov
lds
jne
push
imul
aam
push
or
and
lods
push
cmp
push
jbe
cmp
sub
xor
cmp
mov
inc
xor
mov
adc
ljmp
fsubs
and
arpl
shll
pop
cs
and
sahf
test
jns
xlat
nop
jns
fisttpl
cltd
outsb
add
insb
push
pop
push
push
out
adc
xchg
repz
ret
lret
and
adc
dec
imul
jle
aaa
mov
sub
mov
or
or
aas
and
cwtl
sub
pop
shrb
gs
push
mov
int3
add
adc
sbb
arpl
dec
sbb
jp
sbbl
in
cmp
lods
sbb
popa
call
scas
lock
mov
push
ja
fists
jno
cmp
aam
cmpsl
loop
stos
mov
sbbb
inc
das
into
js
jp
and
xor
push
xor
outsb
lret
loop
fdivrs
add
les
or
add
fwait
xchg
mov
xchg
xor
xor
ds
lds
sbb
jnp
in
nop
enter
fucomi
and
imul
mov
icebp
in
pusha
sub
insl
and
jg
sbb
sarl
mov
inc
xchg
cmp
pushf
lea
sahf
mov
jb
out
cmpsl
mov
rolb
cmp
xchg
clc
aam
jnp
jo
scas
and
imul
inc
scas
arpl
mov
test
lret
mov
bound
cmp
lods
outsl
ss
roll
dec
adc
and
out
sbb
inc
repnz
mov
or
xor
mov
int
insl
or
pop
rcll
jbe
adc
pop
xchg
aaa
shrl
adc
push
jbe
jecxz
pop
or
push
ret
lods
lods
mov
or
fwait
jae
and
ret
xchg
js
and
xchg
or
pop
xchg
out
push
fnsave
repz
gs
jno
dec
arpl
test
mov
test
out
push
add
jg
push
cmpsb
add
dec
rolb
mov
imul
imulb
cltd
out
dec
push
js
cmpsb
mov
cmc
movsl
mov
push
fildll
daa
lcall
test
ljmp
bound
imul
jne
inc
xlat
dec
les
cmp
pop
mov
xchg
lods
in
les
add
ljmp
dec
xchg
sbb
push
je
ret
inc
push
and
fmul
cmp
fxch
cld
cmp
pushf
jl
idivl
jle
insl
rcrb
shll
push
mov
jmp
inc
pop
cltd
pop
xor
loope
gs
jo
and
push
mov
lods
add
popf
pop
shlb
cmpl
mov
aad
add
mov
xchg
iret
jne
cmp
cmp
sahf
lahf
movsb
pop
loopne
push
jbe
inc
aaa
dec
push
or
inc
fcmovne
js
cmp
sbb
sbb
and
fmuls
stos
mov
arpl
stos
out
aaa
rolb
inc
out
lret
dec
lods
nop
enter
aas
addb
pop
sbb
mov
bound
mov
sbb
inc
fs
mov
rorl
enter
xor
xchg
fcoms
std
dec
xchg
xchg
push
std
sbb
xchg
sub
adc
sub
cmp
lods
xlat
idivl
push
adc
push
int3
cmpsl
jne
pop
pop
popa
loopne
mov
imul
daa
fwait
lock
push
popf
jg
cmp
icebp
fwait
mov
and
mov
xor
lret
and
movsl
arpl
arpl
mov
add
and
popf
dec
jle
testb
out
fadd
push
subl
out
sbb
mov
pop
aaa
loop
fnstsw
push
dec
inc
mov
dec
inc
cmp
push
xor
mov
imul
sbb
xchg
inc
subb
lahf
imul
and
adc
test
add
push
nop
sub
fsubrl
jl
adc
mov
not
push
jge
jns
pop
mov
lret
mov
mov
mov
cmpsl
jo
outsl
das
imul
movb
pop
cltd
xchg
jae
icebp
push
pop
adc
shlb
xor
mov
mov
mov
cli
sbb
jg
mov
push
adc
dec
adc
lods
repz
jo
mov
sahf
pop
or
jg
mov
xchg
outsb
and
or
stos
ss
mov
pop
scas
jecxz
mov
sahf
mov
inc
jmp
push
int
cmp
movsb
xor
pop
js
insb
ds
outsb
push
cmp
jo
int
loopne
andl
jbe
jecxz
add
cmpsl
repnz
mov
daa
fisttps
push
mov
cmp
add
hlt
cmp
int
negb
rol
in
mov
or
ds
repnz
test
test
mov
cmp
or
dec
mov
inc
aas
sbb
mov
xchg
fwait
test
stos
xchg
cld
or
pop
adc
pop
add
cmp
cmp
repnz
push
ljmp
and
adc
add
push
int3
add
xor
jl
jmp
movsb
add
cmp
fcomps
pop
jo
cli
test
shlb
insl
mov
xorb
std
cmp
xor
and
push
dec
pushf
and
out
add
cmp
cltd
les
std
stos
jmp
and
pop
mov
lds
jno
fistl
mov
adc
lea
rcrb
sbb
mov
js
pop
mov
shr
push
popf
cmpb
fmul
aas
jo
jecxz
push
push
xor
rolb
pusha
mov
add
mov
insb
imul
out
push
pop
outsl
sub
mov
and
jb
decl
fwait
dec
xchg
outsl
sub
sub
cld
push
je
mov
aas
sbb
pop
andb
dec
cmp
iret
js
xlat
mov
rcrl
xchg
sub
lcall
mov
jbe
fs
lea
push
cmc
and
stos
sub
mov
roll
lahf
jl
sub
fsubr
lods
adc
sub
cltd
or
sbb
cmc
insb
imul
fstpl
inc
call
push
sahf
int3
jno
out
fidivrs
push
call
cltd
gs
loopne
mov
dec
pop
sti
pop
jg
bound
sub
push
scas
sub
sti
jno
or
leave
xor
lret
dec
mov
cltd
enter
shlb
test
inc
in
test
mov
out
int
push
xchg
int
xchg
mov
add
rorl
xchg
jnp
arpl
std
or
sub
adc
and
lret
cmp
or
xchg
movsl
pop
repz
or
push
sub
into
mov
mov
les
pusha
push
popf
push
addr16
shlb
dec
out
cmp
ja
adc
jmp
push
mov
mov
mov
popa
aaa
add
and
pop
mov
stc
mov
jle
rorl
pop
pop
adc
push
mov
cmp
xchg
loope
jge
pushf
adc
adc
std
outsl
aaa
mov
adc
mov
or
cmp
std
iret
test
shll
nop
cmp
fs
mov
cld
add
mov
arpl
iret
ss
mov
mov
mov
adc
leave
xor
mov
xor
jb
jge
mov
jne
mov
mov
and
or
in
fsubs
int3
and
mov
jb
sbb
rcrb
repz
dec
lock
std
xor
mov
gs
fmuls
or
das
cli
cli
fcomps
jp
push
lcall
fisubrl
dec
mov
shlb
mov
or
ds
rolb
arpl
pop
and
movsb
xor
mov
into
push
inc
jae
lea
fidivrs
mov
clc
cwtl
push
sub
test
jns
jnp
loope
sbb
test
out
mov
ret
out
or
imul
mov
push
rcl
sub
aad
push
mov
outsl
mov
jg
hlt
int3
sbb
pop
js
test
jne
test
sub
xchg
push
add
sub
jo
int3
cld
aas
xchg
cld
call
and
insl
adc
cs
push
pop
add
fldenv
sbb
sbb
cmp
inc
je
jae
call
dec
fsts
dec
fisubs
jp,pn
in
adc
xor
aaa
and
in
and
and
sbb
lret
mov
movsl
test
sub
adc
mov
fidivrs
push
ret
out
je
and
pushf
cwtl
pop
lods
out
dec
lods
adc
cld
jp
das
popf
mov
lods
inc
leave
fidivs
je
movsl
mov
push
scas
sbb
xchg
mov
pop
push
or
imul
mov
mov
daa
popl
out
out
loopne
out
aam
xchg
cmc
das
inc
outsb
sahf
sar
sahf
decl
xchg
cmpsb
sahf
arpl
imul
or
rcr
mov
mov
into
popa
jmp
hlt
js
mov
mov
js
ljmp
or
je
lods
cmp
mov
cwtl
lahf
sub
sub
mov
psrld
cmp
test
cmpps
mov
mov
les
jnp
cwtl
lods
stos
add
sbb
outsl
cwtl
lea
flds
add
sbb
mov
out
and
or
mov
mov
out
cwtl
fisttpll
jmp
push
aaa
out
call
aad
rcrb
in
lods
je
loope
pop
xor
cmpsl
jb
mov
or
rcr
lcall
push
sub
das
inc
aaa
insb
popf
mov
sub
lods
adc
mov
pop
bound
cmp
ja
adcb
xlat
iret
sbb
inc
lods
mov
fdivp
fisttpll
imul
dec
adc
bound
outsb
push
lds
mov
pop
or
inc
and
sti
mov
je
lods
mov
xor
sbb
sub
adc
bound
jno
dec
xor
shrb
cmp
repnz
negl
aaa
mov
push
sub
aam
lahf
push
xor
in
shll
cmp
xchg
lret
lock
in
sahf
pop
out
or
sbb
frstor
repnz
jg
insb
pop
fmull
adc
jecxz
test
mov
stos
fstl
xor
shrl
lds
stc
jge
or
pop
test
les
loop
add
leave
xor
xchg
faddp
push
xchg
jae
ret
xchg
xor
repz
int3
loopne
mov
ja,pn
adc
rcrl
cli
and
cmpb
lret
lcall
fimull
xchg
ljmp
mov
xchg
cltd
sbb
mov
sbb
shlb
je
cmp
xchg
lods
and
mov
out
fucomip
cmpsl
mov
dec
scas
in
rcr
and
in
pop
sbb
dec
pushf
inc
xchg
ds
jp
and
or
mov
sbb
lret
arpl
adc
shlb
pop
or
dec
xchg
fsubr
pop
fwait
shll
cli
xor
fcmove
shll
jno
outsb
sbb
pusha
into
adc
jg
in
xchg
repnz
xor
insb
fsubr
cmp
iret
dec
aaa
mov
lods
iret
xor
inc
test
lea
adc
orb
mov
andl
test
pop
xor
add
adc
inc
jae
inc
addr16
xchg
mov
cmpsl
xchg
xlat
jecxz
repz
pop
xor
add
adc
inc
jae
inc
addr16
xchg
mov
cmpsl
xchg
xlat
jecxz
jae
ret
out
pop
mov
daa
adc
inc
jae
inc
addr16
xchg
mov
cmpsl
xchg
xlat
jecxz
repz
pop
cltd
popf
add
fs
iret
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
into
or
cmp
sub
inc
push
aas
subps
add
mov
lods
mov
icebp
mov
cld
shr
or
or
or
sub
pop
jno
popa
jl
insb
inc
xchg
mov
mov
fcoml
in
roll
xor
inc
push
jnp
pushf
push
xchg
repz
popl
or
jo
inc
mov
mov
cmp
jne
inc
xlat
test
xor
hlt
sub
andl
cli
mov
mov
movsl
leave
push
xor
inc
andl
mov
dec
out
adc
dec
popa
outsb
and
jae
in
sub
mov
push
das
sub
int3
popa
sbb
fcoml
cmpsl
xor
pop
mov
test
in
mov
mov
add
shlb
loope
push
mov
xchg
cmp
mov
jbe
int
jno
adc
cld
ds
jae
mov
sbbb
mov
test
xchg
sbb
in
rcr
xor
cmp
cmp
dec
jno
popa
jl
jne
test
mov
jmp
cmc
movsl
outsl
push
imul
cmp
and
jle
add
fmuls
mov
test
cltd
rorl
and
cs
add
push
adc
mov
stc
in
ret
mov
movsb
jne
ds
pop
jo
je
sbb
insb
inc
pushf
mov
mov
fdiv
int3
loope
shr
rcrl
and
sub
pop
jno
popa
jl
insb
inc
pushf
mov
mov
fdiv
int3
loope
shr
rcrl
cmpsb
xor
dec
pusha
add
in
xor
mov
dec
inc
sbb
enter
dec
roll
cmp
dec
lods
idivl
fs
out
sbb
jo
arpl
mov
fisubrl
clc
adc
cmp
jg
test
jns
insl
outsb
jle
mov
mov
pop
fwait
adcl
dec
dec
idivl
xor
xor
in
lea
sub
dec
sub
cmp
sahf
inc
mov
cli
or
dec
jecxz
movd
jb
dec
call
and
cmpsl
push
mov
scas
xor
xchg
pusha
jl
jmp
in
lds
xchg
icebp
andl
clc
add
or
dec
lods
stc
cmp
add
ret
cli
pop
ss
fisubs
pushf
sbb
lret
sub
mov
inc
cmp
inc
mov
xlat
jb
lret
imul
xor
iret
xor
or
xor
add
and
cmp
cmpsl
sbbb
lahf
push
jno
mov
lea
dec
cmp
sbb
lea
fistpll
int
mov
clc
push
sahf
daa
mov
push
into
jge
jo
aaa
shll
mov
subb
dec
pop
ret
adc
and
out
das
push
popa
imul
mov
call
sarb
lock
xchg
fnsave
pop
lock
xor
lahf
xchg
int3
xchg
pop
popf
test
and
outsb
push
sti
sub
or
adc
clc
inc
cwtl
icebp
pop
cmpsl
fidivrl
xchg
aad
fdivrl
jnp
add
jno
xor
shlb
push
in
jmp
xchg
stos
jne
mov
idivb
dec
adc
mov
fistl
popf
push
jo
sbb
repnz
jno
lret
lods
aaa
movsb
dec
sub
mov
imul
aas
movsb
enter
xchg
les
cmpsl
test
mov
lods
outsb
xchg
insb
pop
lock
jne
fisubl
and
or
sbb
and
aas
pop
idivl
push
push
push
sbb
hlt
mov
cmc
cmpsl
sahf
cmp
sub
testl
lea
push
daa
dec
or
mov
or
dec
idivb
dec
sahf
std
sarl
sti
jle
ljmp
pop
push
cltd
movsb
and
rorb
mov
js
in
mov
push
add
add
sub
push
pop
push
aas
dec
ret
mov
push
inc
inc
stos
lods
fldcw
xor
iret
test
dec
outsl
repnz
mov
push
fwait
xchg
lcall
inc
jne
aas
sbb
pop
bound
je
out
out
pop
inc
aaa
inc
cmp
dec
shrb
push
xor
sub
add
push
inc
mov
push
popf
xchg
sbb
out
fcompl
inc
cli
test
inc
mov
popf
xor
xor
bnd
adc
lret
test
xor
push
fcmovu
dec
dec
out
fxch
jmp
lea
add
dec
in
push
stos
decl
ret
mov
mov
js
orb
add
iret
push
fimull
fistps
fmul
lock
jp
mov
sysexit
pop
pop
aaa
xchg
xchg
dec
push
and
fisttps
mov
lock
pop
in
lret
adc
aaa
jb
sub
mov
push
rcll
insl
jg
mov
adcb
mulb
js
cmpsb
loop
dec
cmp
pop
loopne
cltd
mov
gs
int3
mov
fsubrs
imull
stos
loopne
std
or
sub
and
cmovae
int
scas
and
jno
in
xchg
mov
ret
jp
jns
ret
aad
cmpsb
adc
std
std
loop
sbb
outsb
dec
cld
outsl
pop
fistps
sarb
cmp
iret
push
ja
pusha
imull
mov
pop
mov
imul
leave
fsubs
sub
xor
fsubs
push
xor
fisttpll
sbb
or
ss
jl
cmp
in
subl
xor
mov
sbb
aad
add
jecxz
xlat
rorb
or
sbb
mov
in
mov
mov
jp
pusha
or
push
dec
movsl
xor
jmp
cmpb
xchg
or
enter
jp
test
add
mov
pop
sahf
sti
xchg
fwait
pop
test
jne
pop
mov
or
sub
ficoml
scas
roll
and
xor
inc
dec
push
cmp
xor
mov
out
and
cld
fucomip
mov
sbbl
cmp
or
sub
test
loop
test
leave
mov
addr16
daa
add
add
in
add
sbb
cmp
dec
add
mov
or
aas
testb
cltd
pop
adc
out
cmp
xlat
dec
sbb
mov
bound
push
xchg
pop
lods
mov
mov
mov
and
push
dec
lahf
dec
inc
cli
jp
in
call
leave
divb
mov
out
arpl
lret
in
pop
inc
pop
mov
jnp
jbe
cmp
cli
int
insb
mov
mov
stos
adc
pop
scas
out
or
push
push
imul
and
sub
rol
test
out
std
push
dec
aad
dec
push
cwtl
mov
cmp
in
scas
pop
cld
mov
mov
movsl
jmp
push
lds
fwait
cmpsb
nop
xor
dec
stos
dec
call
out
push
add
jge
push
arpl
lods
push
mov
dec
popf
out
shll
dec
and
shlb
dec
test
nop
lret
sub
mov
test
cld
movsb
cltd
test
aad
inc
or
xor
adc
dec
inc
imul
mov
push
daa
fnstenv
xchg
out
fdiv
flds
mov
pop
pop
lds
insb
fidivl
loope
add
test
and
xchg
in
movsb
iret
sbb
lea
lcall
push
adc
jg
xchg
popf
xchg
cmp
xor
pop
mov
jae
jne
mov
aad
sub
and
sahf
leave
insb
add
jb
ljmp
mov
fisubrl
add
pop
push
inc
imul
push
xor
std
into
into
cmpsl
inc
pop
in
lret
clc
arpl
mov
cmc
leave
jnp
sbb
repnz
movsb
into
in
sahf
mov
mov
rorl
pushf
lea
jns,pt
lds
adc
mov
pop
mov
add
push
sbb
mov
mov
nop
mov
mov
cmp
push
push
pop
dec
pop
addr16
sbb
fwait
adc
aaa
ret
add
bound
lds
idiv
lock
jno
iret
cmp
xor
scas
rol
pop
dec
xchg
adc
inc
adc
adc
jmp
cli
pop
jno
rol
popf
jle
mov
push
bound
movsl
sub
mov
hlt
stc
repz
add
rcr
es
sub
jo
repz
out
jae
adc
xchg
inc
inc
jnp
sbb
das
or
fcomps
xor
out
aas
fistpl
dec
out
push
dec
adc
sub
ror
sub
dec
xchg
jnp
and
lock
scas
lret
pushf
call
sub
mov
lods
or
dec
loope
mov
out
test
mov
ds
or
xor
aad
orb
cmp
pop
xchg
mov
mov
ljmp
mov
out
pop
cli
sbb
ret
pop
and
in
cmp
rcrl
sbb
data16
xor
outsb
xor
adc
pop
in
jle
inc
pop
out
out
leave
mov
push
lahf
and
jecxz
lcall
and
test
dec
ljmp
repz
hlt
pop
and
dec
out
inc
sub
jp
repnz
ljmp
or
roll
dec
jae
dec
push
mov
int3
xlat
push
jp
idivl
es
aam
mov
xchg
and
add
in
shl
push
orl
pop
mov
insb
icebp
push
jb
dec
inc
cli
popa
dec
mov
jb
mov
lcall
cmpsb
mov
xor
add
xor
out
inc
push
cmc
pop
stc
add
cmp
outsb
push
aas
es
aad
mov
test
shl
or
pop
loope
fs
fldenv
fmulp
daa
jg
cmp
cmp
call
test
jle
or
popa
push
cld
dec
shrb
inc
inc
push
jg
ficoml
cmp
ror
movsl
cmc
into
lret
or
repnz
fidivrl
pop
das
das
mov
pop
cs
lret
cmp
adc
inc
popa
pop
push
pop
mov
add
sub
enter
insl
outsb
mov
enter
inc
or
jp
clc
into
shrb
add
sar
cmpl
lcall
mov
jb
and
pusha
cltd
jo
mov
lds
in
pusha
mov
push
push
or
testb
stc
ret
push
fisubl
dec
lea
cmp
jns
jp
mov
int
adc
lret
sti
cltd
outsb
mov
or
add
xor
fldenv
sub
push
jae
or
aaa
shrl
inc
cmp
xor
cmp
imul
out
and
lods
sub
aas
push
pop
in
cmp
test
call
add
sbbb
mov
cs
sub
fiaddl
jecxz
mov
dec
das
xchg
lods
adc
pop
int3
dec
or
sbb
icebp
mov
and
popa
pop
push
nop
sbb
rorl
mov
cmpsl
push
int3
ror
mov
loop
pushl
push
sahf
push
or
insb
outsb
push
fisttpl
sub
mov
stos
repnz
fwait
lahf
or
hlt
outsb
js
mov
jb
rorb
cld
clc
movb
jecxz
mov
cli
sub
or
inc
je
mov
xor
dec
pop
popf
adc
test
inc
lret
jnp
shrl
jae
and
sbb
pushf
and
sbb
mov
adc
fimull
loop
ret
jecxz
in
mov
inc
push
jle
inc
imul
les
in
inc
lods
mov
pop
sub
mov
repnz
cmp
cmpsb
xor
movsb
fsub
test
push
or
imul
inc
scas
jb
inc
mov
pop
add
adc
mov
ja
lret
in
in
rorl
sub
jb
enter
roll
cli
adc
mov
sub
jecxz
pop
xchg
mov
mov
sub
jle
xchg
dec
xchg
lret
rorb
lcall
mov
lds
jecxz
add
jns
iret
inc
dec
add
shl
dec
dec
xor
gs
xor
mov
fstpt
vucomisd
pop
data16
outsl
push
mov
unpckhps
push
js
inc
loopne
pop
push
outsl
inc
inc
fsubrs
jae
sbb
popf
xchg
fldl
stc
and
lods
xchg
pop
ret
mov
pusha
push
jbe
dec
ljmp
in
jg
lds
sbb
std
and
dec
xchg
aad
lret
xor
jmp
loop
adc
push
shlb
or
dec
cmp
mov
sub
mov
adc
test
sahf
mov
add
test
sbb
add
pop
sbb
movsb
push
push
adc
pop
mov
das
cmc
mov
gs
sbb
daa
sbbl
stos
jns
dec
fisubrs
orb
jmp
push
lock
leave
push
xor
std
clc
sub
mov
in
imul
adc
and
jnp
xchg
popa
outsb
jmp
in
sbb
xchg
outsl
cli
pop
int3
cmp
notb
test
mov
sub
mov
subb
mov
or
sbb
repnz
lea
xchg
adc
sbb
nopl
xchg
popa
push
mov
pop
pop
bound
jg
pushf
dec
push
ja
mov
jg
aam
mov
in
ja
lods
testl
sub
add
ljmp
loope
andb
mov
sti
jle
dec
cld
js
outsb
cmp
sub
lret
ficoml
and
aas
push
inc
or
or
movsl
adc
mov
sarb
sub
fwait
pop
mov
dec
cs
ja
sbb
ss
adc
pop
test
jns
data16
xor
scas
jmp
add
inc
test
push
shlb
mov
in
roll
mov
out
mov
and
pop
int
cmovg
mov
and
or
fcmovnb
mov
sti
dec
mov
sub
and
fs
dec
sti
sbb
not
dec
sub
pop
cmp
stos
pop
out
pop
rcrb
jmp
negl
push
lret
xor
loop
xchg
jecxz,pn
xchg
add
in
icebp
cmp
or
pop
ja
xor
mov
and
jne
xor
int
mov
nop
int3
shrl
shlb
dec
jp
mov
mov
stos
bound
pop
loop
test
cmp
push
jmp
mov
mov
xchg
ja
pop
mov
jle
popf
gs
hlt
cltd
outsl
xlat
jp
sbb
fistpl
inc
mov
in
xor
fidivl
xor
mov
mov
xor
cmc
out
scas
add
pop
dec
cmpsb
cmp
inc
adc
xchg
and
test
cwtl
mov
fstpt
mov
pop
js
dec
enter
jg
aas
stos
push
gs
and
xor
adc
ljmp
movsb
push
imul
add
in
xchg
dec
jge
ja
adc
xor
insb
mov
test
stos
jge
xor
mov
xor
cli
adc
push
movsl
or
xchg
out
sub
js
mov
push
push
inc
cmp
sbb
pop
aam
push
dec
fildll
aad
enter
jbe
hlt
sub
leave
or
sbb
jle,pt
lcall
cld
add
adc
and
sbb
push
addb
cmc
pusha
lds
out
faddl
lods
rol
push
push
outsb
call
cmpsl
mov
imul
pop
sbb
fxam
add
ja
add
push
daa
sub
jg
and
dec
js
sub
das
mov
out
outsb
and
in
xlat
sbb
lret
sub
xchg
cmpsl
xchg
stos
xchg
fistpl
loopne
out
cmc
aam
push
jne
mov
or
cld
ret
xlat
mov
ret
lret
stc
mov
push
subb
dec
sub
and
lea
gs
pop
jnp
ljmp
data16
aas
push
inc
test
jne
mov
lock
add
dec
adc
shlb
hlt
es
nop
adc
js
adc
cmpsl
in
mov
inc
xchg
xor
popf
stos
and
pop
and
xchg
fwait
in
or
imull
adc
cmc
movsb
mov
inc
fldenv
xchg
js
xor
testl
cwtl
cltd
mov
mov
and
nop
in
xor
adcb
js
add
imul
cmc
imul
in
sbb
xor
pop
hlt
xor
xor
ds
push
jmp
and
fidivrl
sbb
rclb
rorb
and
inc
imul
xchg
scas
insl
mov
and
addb
movsl
or
push
test
dec
mov
cltd
js
adc
outsb
jmp
xchg
xchg
in
je
pop
gs
xchg
mov
sbb
test
cwtl
sahf
shrl
andl
cmp
imul
int3
inc
fdiv
xor
mov
inc
inc
pop
pushf
inc
mov
jle
cmp
fwait
outsb
sub
cli
in
pop
test
jp
jecxz
sbb
popa
out
sarl
popf
out
push
inc
aas
mov
enter
dec
sub
xchg
and
test
movl
mov
adc
inc
popf
pop
inc
mov
pop
fildl
push
jno
xorl
inc
jp
sarb
cmc
sub
scas
mov
adc
adc
pop
outsl
and
out
or
push
xchg
push
pop
lret
rolb
dec
lret
mov
cld
jle
pop
mov
xchg
push
stos
inc
iret
ret
xchg
or
xorb
rsm
xchg
jne
jmp
scas
add
jns
aaa
test
gs
leave
cmc
sub
sub
bound
pop
gs
sbb
mov
mov
aas
cmpsl
push
adc
sbb
out
xor
jmp
mov
pushf
jle
out
and
and
in
mov
scas
and
cmc
sahf
int3
mov
test
in
arpl
stos
scas
adc
out
mov
sbbb
fcmovbe
pop
addr16
push
cmc
sbb
xlat
or
insl
jle
push
je
fnstenv
test
in
push
mov
movsl
ret
mov
sbb
cltd
adc
je
xor
das
xor
ret
popa
jp
arpl
mov
movb
out
loope
jo
icebp
cmp
add
jbe
sub
mov
add
add
push
pushf
cmpsb
stc
xor
add
loopew
outsb
popa
xchg
ret
lds
mov
fwait
aas
les
mov
je
mov
inc
dec
sub
jb
jmp
cmp
es
std
add
jbe
xor
xchg
aam
andl
mov
mull
leave
push
xchg
mov
adc
ret
lcall
xor
popa
popa
aad
adc
icebp
call
push
loop
inc
xor
icebp
arpl
fsts
pop
daa
fidivrs
aaa
dec
scas
sbb
jl
loopne
ja
mov
js
stos
pop
inc
mov
call
stc
cmc
add
mov
dec
sub
fstpl
and
mov
andb
sub
test
jmp
xor
fistpll
in
pop
xchg
adc
add
dec
fsubrs
roll
nop
mov
push
dec
clc
push
insl
jo
aam
jge
push
ja
push
enter
xchg
xchg
hlt
add
adc
fistpll
lcall
lret
lcall
shlb
movb
pop
rolb
mov
pop
leave
sarl
mov
int3
ds
jg
movsl
or
fnstsw
jo
setne
cmc
dec
cmpl
jne,pn
sbb
inc
outsl
iret
jno
into
jg
mov
pop
mov
adc
xchg
outsl
cmc
dec
and
or
pop
mov
in
mov
and
jecxz
into
filds
xor
xor
icebp
ds
stc
xorl
xlat
icebp
inc
cld
add
xchg
out
xchg
cmpsl
jge
cs
xor
sarb
mov
movsl
mov
frstor
xchg
cmp
jle
xchg
xor
mov
nop
cmp
adc
push
jbe
mov
push
mov
insl
add
xor
dec
outsb
fwait
ret
shll
sti
inc
fmull
cmc
or
mov
insb
iret
ret
pop
xor
shl
ljmp
scas
lret
mov
mov
ljmp
jbe
dec
iret
jmp
push
daa
pop
stos
xchg
push
add
shll
mov
aaa
loope
pushf
jb
pop
fbld
enter
addr16
xor
scas
push
mov
push
outsl
and
enter
lea
cmp
push
negb
test
push
push
hlt
inc
rcl
clc
roll
or
out
clc
movsl
test
push
dec
inc
ds
faddl
pop
out
nop
mov
pop
pop
mov
fwait
stos
lods
fiaddl
inc
fildl
mov
cwtl
popf
push
stos
movsl
push
add
mov
test
push
out
enter
sub
mov
xchg
mov
arpl
inc
xchg
subl
out
jmp
or
pop
sbb
jne
push
push
pop
push
inc
cmp
xor
test
ljmp
loopne
cli
mov
push
mov
ds
sbb
cltd
mov
adc
ret
pop
adc
mov
jb
addb
push
inc
push
and
sbb
bound
lods
sub
mov
jne
fdivl
outsl
gs
js
imul
jno
outsb
fldcw
ljmp
hlt
pushf
popf
sub
dec
push
xchg
les
popa
repz
data16
imul
adc
mov
pop
sbb
sbb
test
popf
jecxz
dec
cmp
sbbb
push
mov
or
push
ret
push
adc
jle
lds
ret
cmp
xlat
mov
pop
sbb
dec
jnp
inc
push
aad
inc
jecxz
cli
fistps
int
sbb
sub
pop
add
jge
sub
mov
mov
stc
in
bound
andl
add
popa
jl
insb
inc
pushf
mov
mov
fdiv
int3
loope
shr
rcrl
and
sub
pop
jno
popa
jl
insb
inc
pushf
mov
mov
fdiv
int3
loope
shr
rcrl
and
sub
pop
jno
popa
jl
insb
inc
pushf
mov
mov
fdiv
enter
ffree
sub
cmp
or
sub
pop
jno
popa
cld
push
in
inc
arpl
lods
imulb
adc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
stos
das
dec
rol
xlat
pusha
test
hlt
cli
mov
inc
jo
pusha
and
aaa
add
xor
and
shl
rol
xlat
loopne
nop
mov
xchg
ja
imul
add
jo
and
pop
adc
mov
mov
addr16
sbb
and
adc
inc
imul
and
test
or
push
je
dec
mov
and
in
jb
inc
jne
jle
pop
mov
pop
notl
adc
jecxz
mov
mov
adc
lods
mov
out
ljmp
repz
scas
sub
fisttpll
in
fdivs
mov
xor
loopne
pop
cmpsb
nop
dec
call
jb
and
push
inc
test
stos
adc
jae
lds
sub
mov
xor
ret
mov
daa
push
mov
inc
aaa
add
fbld
idivl
loope
fisubrl
xlat
dec
add
lock
pop
lahf
push
vpmacssdqh
adc
incl
pop
movsb
aam
divl
je
ljmp
das
and
pusha
dec
sub
sub
pop
xor
xchg
addb
leave
in
out
xchg
fdecstp
lds
push
ss
dec
jg
je
jno
inc
out
jg
adcb
mov
fsubp
int3
pop
xor
cmp
push
inc
push
dec
jb
push
dec
xchg
xchg
xchg
hlt
mov
xchg
ja
inc
jo
pusha
daa
adc
add
xor
and
shl
rol
xlat
loopne
nop
mov
xchg
ja
inc
jo
pusha
daa
adc
add
xor
and
shlb
pop
outsl
push
mov
jmp
fsubs
and
sub
mov
mov
movsb
adc
movsb
and
lahf
sbb
lods
sbb
rclb
push
into
and
sbb
aaa
xchg
nop
inc
fsubrs
sub
mov
sbb
adc
mov
hlt
pop
or
daa
aas
add
push
xchg
mov
pop
int
sub
jb
mov
jmp
int
je
loop
fwait
cmp
mov
scas
clc
jb
dec
lods
or
in
mov
fmul
clc
test
test
xor
jg
add
push
dec
shll
out
sub
add
cmc
cmp
popl
and
and
loop
sub
cmc
jle
leave
scas
sub
out
mov
std
cltd
ret
lock
add
aad
fistpl
add
pop
ja
ret
dec
or
and
mov
sti
aas
adc
stos
push
dec
jge
fwait
movsb
sbb
int
xor
dec
cmp
sahf
xchg
std
idivb
sti
cmp
outsb
ss
adc
adc
lea
out
xorl
fcoml
out
fsubs
mov
dec
cmp
sub
cmp
shrb
stos
pop
sbb
ret
stc
fmul
xchg
lock
and
jns
int3
test
inc
stos
scas
jb
js
pop
lds
lea
shrb
mov
jmp
add
xchg
jnp
pop
xor
jnp
xor
adc
repz
sbb
movsb
cld
mov
dec
frstor
pop
sub
ss
push
push
js
mov
call
aas
mov
loope
pop
pop
data16
cmpsl
ljmp
xor
clc
jl
sub
cmp
xchg
rolb
pop
xor
into
cmp
ja
fcmovnb
int
scas
aaa
fwait
sbb
pop
rolb
jecxz
inc
cmp
pop
into
rcll
add
aad
and
push
hlt
addr16
mov
inc
js
mov
loop
xchg
jmp
push
imul
pop
std
inc
add
fcmovnb
mov
adc
or
add
mov
xchg
mov
cwtl
lret
and
cli
jnp
cmp
subb
lds
and
pop
inc
xchg
push
lea
sbb
subb
mov
in
aas
and
test
loop
push
sbb
mov
cmp
js
sub
jmp
sub
loop
aas
test
adc
fisubrs
out
pop
pushf
mov
ss
add
pop
mov
insl
es
fs
sub
inc
xor
out
repz
pop
in
xlat
add
repz
insl
fcomp
into
dec
lret
repz
loope
adc
mov
sub
sti
mov
out
int
jmp
sub
cmpl
jns
mov
repnz
sti
ret
adc
xchg
jno
adcb
sahf
mov
mov
push
daa
push
and
lahf
jmp
in
lret
and
or
mov
sub
pop
xchg
das
stos
or
mov
in
pop
aad
icebp
adc
fdivs
dec
loop
inc
pushf
cmp
rorl
clc
mov
dec
cmp
mov
push
or
mov
sub
adcl
outsb
or
cmp
nop
push
pop
mov
xor
fs
adc
stc
and
into
outsl
ficoml
std
cmpsl
in
push
mov
sbb
add
sub
mov
add
out
fimull
sbb
outsl
mov
pushf
jns
cmp
push
inc
int3
lods
and
xor
pmaxsw
mov
iret
call
or
out
mov
fildl
out
adc
bound
mov
out
into
pop
test
cli
add
jmp
aaa
out
lods
dec
mov
xlat
mov
sahf
aaa
fucomi
dec
or
add
xor
nop
mov
xchg
xor
jns
sub
add
and
mov
js
daa
push
sarl
fildll
jmp
jbe
inc
hlt
push
push
cld
lock
xchg
pop
fsubrs
fsub
inc
ss
and
push
dec
nop
lret
cmp
mov
and
ja
adc
jecxz
incb
outsb
fnstcw
mov
faddl
sbb
outsl
lds
ja
sbb
cli
ja
adc
out
insb
mov
add
clc
mov
push
and
pushf
dec
pop
xor
mov
cmp
pop
in
pop
lock
adc
add
adc
xlat
cmp
mov
sahf
xor
mov
adc
dec
push
arpl
push
and
dec
push
cmp
lds
addr16
scas
mov
into
int
inc
mov
cmp
or
push
stc
mov
bound
xchg
add
adc
jnp,pt
xchg
aad
arpl
out
fisttpl
cmc
std
mov
mov
jbe
rcr
dec
mov
cmpsb
in
fs
pop
and
cmp
jg
ja
mov
loop
clc
xchg
lret
adc
iret
hlt
push
mov
ss
aaa
add
mov
sub
xor
dec
mov
sbb
adc
in
roll
jbe
idivl
inc
imul
lret
cli
cltd
clc
add
icebp
out
in
shrl
insl
push
jo
cwtl
in
xor
cmpsl
jmp
sbb
mov
pop
addr16
inc
and
scas
ja
mov
addl
mov
dec
jbe
mov
lret
es
inc
loopne
inc
ret
int3
test
mov
sub
enter
out
adc
pop
leave
adc
pop
int3
outsb
jnp
sbb
addr16
js
in
lds
sbb
adc
mov
dec
mov
cmp
in
xchg
xchg
out
aas
rcrl
aad
insl
push
movsb
call
orl
call
lcall
mov
or
jae
flds
test
push
call
add
es
lea
add
mov
sbb
push
popa
fmuls
stos
sti
jge
cmpsl
hlt
xchg
ss
dec
mov
pop
pop
sub
aad
jne
mov
popf
xor
repnz
adc
or
add
inc
mov
out
or
push
clc
fsubrl
sbb
mov
jmp
push
bound
sub
cmp
rcrl
bound
xchg
or
jl
ljmp
dec
xor
rcll
mov
decl
cmpsb
out
aad
arpl
icebp
cmc
stos
mov
push
adc
ror
sub
mov
popl
popa
lahf
fidivl
dec
fdivr
sbb
sub
or
cmpsl
scas
insb
aaa
cmpsl
inc
sbb
pushf
adc
aam
sub
push
or
sbb
add
fsubrl
nop
sub
inc
pop
mov
clc
mov
cld
inc
into
mov
pop
scas
xchg
push
xlat
int3
dec
sbb
negl
mov
std
mov
and
pop
mov
fcmovb
mov
xlat
xchg
cmp
or
sub
xorb
or
rcrb
int
insl
mov
xchg
add
adc
and
or
pop
lcall
lea
sahf
sbb
dec
cmp
pop
xor
and
xchg
dec
cmp
pop
outsb
sbb
push
sbb
mov
sub
popa
scas
popf
jl
add
int
pop
mov
sbb
jnp
pop
xchg
push
loopne
sbb
pop
lea
outsl
cmpsl
sub
leave
repnz
jns
mov
lock
xchg
imul
dec
sbb
cmp
arpl
in
nop
pop
mov
out
add
mov
subb
dec
movsb
or
fs
pop
mov
sahf
push
pop
push
mov
and
in
jno
test
mov
ja
cmp
xor
pop
test
push
loope
insl
push
movsl
stc
mov
cmp
mov
push
movhlps
cmp
call
mov
ja,pt
jge
out
add
pop
dec
enter
leave
popa
bound
cmc
roll
icebp
sbb
in
les
dec
push
in
test
rorb
push
fsts
stos
test
lret
xchg
mul
lods
cwtl
pop
ljmp
pop
sub
jge
mov
jno
rep
sahf
cmp
or
out
push
lahf
popf
xchg
int3
jmp
mov
sub
out
jae
je
push
xchg
out
xor
cltd
xor
dec
inc
leave
mov
sahf
hlt
mov
inc
movsb
into
daa
je
rorb
aaa
arpl
sub
jne
push
mov
inc
sbb
pop
out
xchg
scas
je
jns
jl
movl
cmpsb
dec
pop
push
ret
ds
mov
xlat
sbb
lcall
fisubrl
mov
lea
sbb
push
xchg
xchg
stc
aas
xor
aas
or
imul
mov
fiadds
xchg
adc
int
jbe
adc
xlat
mov
jb
jne
pushf
fwait
add
int
scas
jge
mov
push
xlat
test
in
pop
jmp
pop
jbe
lods
es
orb
das
adc
push
movsb
push
gs
hlt
mov
dec
push
mov
jae
pop
jmp
add
and
cmpsl
lret
test
jae
pop
dec
dec
std
jae
out
arpl
sbb
imul
mov
cmpsl
imul
mov
adc
pop
insb
in
insb
in
mov
fs
in
xor
add
add
sbbb
cmc
lahf
add
sbb
or
call
adc
aas
mov
mov
stc
fiaddl
lods
rorl
xchg
sbb
jecxz
cld
mov
into
xchg
lds
nop
push
lcall
in
jns
mov
xor
pop
mov
xchg
jnp
mov
data16
pop
outsb
jmp
ja
ja
and
sbb
mov
cld
inc
push
fidivrs
int3
lea
adc
jecxz
stos
ss
int3
pushf
pop
out
sub
and
pop
mov
mov
sbb
dec
fucomip
inc
sahf
dec
push
cli
mov
cwtl
fbld
aas
lcall
into
add
stos
rorl
mov
in
inc
add
adc
mov
dec
mov
cmp
aas
dec
sbb
and
push
cld
adc
nop
cmpsl
sub
jg
fstl
scas
xchg
mulb
push
xchg
icebp
and
add
xchg
cmp
int
cwtl
sahf
mov
mov
movsb
rcll
mov
mov
into
fcomip
or
lock
sub
rclb
shrb
xchg
subb
lds
jb
xlat
add
pop
stc
push
xlat
imulb
pop
aad
xchg
push
addr16
and
sub
push
dec
xchg
pusha
sbb
inc
in
outsl
popf
xor
inc
nop
lods
ret
jle
andl
leave
bound
xchg
pop
stc
mov
xor
pop
lds
adc
and
mov
jne
clc
fcoms
cmp
loope
dec
dec
out
addr16
cmp
cmc
shll
cmpsb
pop
movsl
mov
cmpsl
mov
push
jae
and
stos
cmp
movl
data16
imul
sub
sub
add
push
dec
jmp
lock
or
sahf
enter
dec
clc
inc
imul
xor
adc
xlat
jmp
je
fcomps
dec
cmp
jne
es
pop
fstl
cmc
cld
mov
out
addl
mov
mov
pop
mov
inc
mov
das
mov
aas
sub
pop
lock
fbstp
and
pop
int3
call
je
xchg
ds
jb
cli
jbe
xlat
orb
mov
lret
sub
popa
mull
xor
pop
pushf
fstps
dec
sub
cmp
cmp
jl
adc
xchg
fs
ja
pop
call
in
dec
and
adc
mov
or
popf
mov
pop
xchg
mov
xchg
sub
aas
inc
inc
std
int
mov
sbb
xor
loope
jb
cwtl
repz
sbbb
sbb
js
aam
mov
fistpll
push
std
shlb
icebp
ret
xchg
inc
mov
inc
pop
sbb
cmp
aaa
addr16
push
mov
cmp
dec
test
lods
mov
dec
mov
in
mov
xchg
scas
clc
sbb
cmp
push
jmp
das
xchg
sub
shrl
stos
sbb
xchg
enter
and
lret
in
icebp
leave
repz
int3
mov
cli
push
arpl
out
jno
inc
dec
pop
stc
cmp
and
andl
shl
cmc
jecxz
jns
add
sub
lds
data16
popa
mov
xadd
lock
pop
lret
data16
loopne
cmpsb
cmp
sub
scas
lods
cmp
cmpb
add
adc
xchg
mov
lock
lods
les
mov
sub
imul
push
pop
or
enter
in
push
jne
into
movsl
subb
cs
jno
push
adc
dec
maskmovq
testl
xchg
repnz
adc
jno
sbb
nop
sub
pop
adc
mov
popa
sub
jmp
js
mov
jns
test
imul
icebp
pusha
push
out
fsubrl
aad
jg
pusha
int
push
daa
testl
icebp
mov
push
cmp
int3
mov
sti
push
pop
js
out
dec
jl
imul
scas
cmp
mov
xor
xchg
fbstp
lret
dec
and
push
jp
pushf
dec
xchg
xchg
cs
mov
mov
xchg
fidivl
xor
in
cwtl
inc
lock
pop
popa
notl
mov
pop
push
mov
jno
mov
lock
es
pop
sbb
add
push
dec
jmp
dec
inc
xchg
sub
pop
push
loope
push
insl
push
dec
jl
inc
push
nop
sbb
gs
cmpsb
rorb
pop
adc
fmul
add
dec
xchg
push
jno
xor
rcll
sbb
add
mov
scas
and
test
movsl
outsl
add
and
cltd
xchg
das
pop
loopne
or
into
mov
cmp
jns
in
fidivrl
xorb
push
imul
sub
pop
ljmp
popl
sub
jle
sbb
xchg
sysenter
adc
cs
lcall
xor
loope
push
mov
push
and
push
push
mov
cmp
xchg
lods
gs
xchg
jne
add
mov
push
cmp
jp
addr16
cmp
mov
or
sbb
dec
push
push
fwait
cmp
add
jns
adcl
mov
jno
lcall
dec
in
repz
mov
or
and
add
lea
sub
cmp
jne
or
dec
sbb
popl
push
clc
sbb
mov
adc
jo
xor
pushf
add
lds
dec
test
sub
push
imul
cmc
mov
cmp
mov
hlt
and
sti
mov
aam
pop
and
xor
roll
xchg
sbb
xchg
mov
stc
sbbl
xor
xor
repz
sub
pop
les
jecxz
in
xchg
xor
cmpb
push
or
sub
push
scas
in
cmpl
pop
xor
popf
pop
adc
int
xchg
addl
sbb
cmpb
out
daa
xchg
movsb
enter
fstl
ja
dec
call
adc
cli
xor
fisttps
call
xor
cmp
addb
ret
push
sbb
mov
sbb
or
cltd
sbb
adcb
cmp
stos
aas
cmpsb
adc
adc
mov
fisubs
fsts
cmc
sahf
insl
jae
and
sub
dec
xor
xchg
mov
out
mov
and
sbb
mov
mov
mov
xchg
lcall
push
dec
cltd
push
cmpsb
xor
data16
mov
enter
xchg
xor
rcl
ljmp
sarb
dec
cmc
adc
cwtl
jg
cmp
adc
scas
dec
cmpsl
sub
adc
stos
pop
test
fwait
out
fs
icebp
xor
sbb
mov
fwait
adc
push
sub
dec
pop
or
xchg
mov
pop
mov
mov
lea
xor
fmuls
xchg
fdivrs
mov
sbb
jmp
xor
out
test
loopne
mov
shl
or
inc
push
or
mov
shl
loopne
xchg
inc
jmp
mov
dec
sub
xor
test
dec
sub
xchg
stc
push
ss
cld
dec
dec
inc
xchg
xchg
mov
sbb
mov
mov
and
or
dec
jne
jae
lret
adc
pop
cmp
outsl
mov
imul
jge
adc
repnz
stos
push
gs
loop
in
xor
mov
adc
and
pop
es
push
lea
popa
adc
push
outsl
aaa
xchg
cmp
add
mov
xlat
sbb
push
jo
jge
scas
sbb
adc
enter
inc
std
bound
fildll
xchg
add
xchg
pushf
andl
xlat
mov
mov
movsb
fsubrp
ret
xchg
outsl
sub
mov
mov
in
mov
sbb
ficoms
test
fidivl
jecxz
xchg
add
aam
and
dec
xchg
jge
sti
and
pop
lret
jno
orb
jge
popf
sub
xchg
out
imul
test
out
ret
cmp
inc
lock
in
pop
mov
mov
jb
dec
pop
nop
inc
add
aas
sahf
rcrl
sub
or
pop
inc
mov
cmp
out
xchg
mov
and
ja
xchg
or
iret
mov
inc
xchg
mov
fmuls
pop
stos
dec
cmp
clc
dec
sahf
push
mov
test
mov
xor
sbb
sbb
fdivrs
inc
sbb
dec
jl
ffree
loope
mov
popa
fcoms
addr16
cwtl
mov
jge
enter
in
pusha
sub
dec
jp
test
dec
adc
push
pop
dec
icebp
mov
dec
pop
sub
xchg
sbbl
pop
and
adc
popa
cltd
dec
stos
push
cmpb
in
lock
add
pop
cmpsb
sbb
pop
out
gs
pop
mov
inc
loope
test
in
ret
inc
fwait
daa
xor
and
enter
add
lcall
jae
cmp
fildll
sbb
stos
mov
push
mov
pop
lret
xor
jo
and
xor
mov
and
jno
out
xor
stc
adc
cmpsb
jmp
mov
movlps
mov
outsb
clc
rcrb
loop
lock
push
aas
xor
sbb
rclb
add
dec
mov
fs
scas
xchg
loopne
push
add
sbb
adc
lret
sbb
stos
xor
lret
and
bound
pop
pop
outsl
cmp
push
enter
gs
dec
pusha
stos
push
sub
mov
dec
mov
xchg
dec
adc
adc
hlt
in
jae
ljmp
mov
dec
sbb
push
mov
push
xor
sti
mov
cmp
lock
push
leave
into
mov
adc
lods
jnp
sub
lods
movl
mov
push
cmc
jo
lock
fistpll
idivb
mov
push
ret
adc
and
inc
push
enter
mov
inc
dec
push
inc
movsl
push
push
pop
movsl
cli
ds
in
das
pop
sbb
mov
fucom
mov
test
mov
out
jp
loopew
aaa
in
cli
mov
and
ficoms
enter
inc
add
push
ljmp
adc
push
mov
mov
pop
dec
cmp
insb
push
adc
xchg
scas
mov
pushf
cmc
push
adc
cld
ret
loopne
pop
in
icebp
out
leave
insl
inc
lods
cs
sbb
loopne
adc
rcrb
and
test
scas
dec
mov
jle
fs
addr16
add
xchg
dec
fdivrl
sti
in
mov
repz
fldl
adcl
in
sbb
jne
adc
jae
xchg
cmp
repz
adc
mov
test
cmp
lret
imul
ja
mov
jp
into
mov
loopne
inc
push
out
fnstenv
loopne
push
xchg
and
mov
cmp
or
movsb
sub
pop
insl
call
push
adc
cmp
jl
decb
je
jbe
shr
stos
adc
sbb
xchg
mov
daa
fdivs
das
pop
jo
in
mov
pop
daa
xor
int
scas
cmp
ds
aad
lahf
xchg
out
or
and
mov
push
movb
sbb
mov
nop
outsl
pop
rol
rcrb
addb
ja
inc
jo
pusha
daa
adc
add
xor
and
shl
rol
xlat
loopne
nop
mov
xchg
ja
inc
jo
pusha
daa
adc
add
xor
and
shl
mov
mov
loopne
nop
mov
xchg
ja
dec
jo
pusha
daa
adc
add
adc
and
rcr
rorb
loope
nop
cmpsl
addb
mov
in
jo
pop
push
cwtl
mov
mov
sahf
fildll
shlb
push
outsl
push
pop
cs
ds
dec
sub
jle
mov
sahf
fildll
scas
ficomps
push
outsl
push
pop
cs
ds
dec
pop
pop
pop
outsb
movd
mov
sahf
scas
xlat
mov
xchg
data16
pop
aaa
ds
sbb
cmp
pop
jle
mov
push
in
or
sbb
cs
imul
in
mov
xchg
fisubs
ss
and
loop
idiv
mov
jle
cs
outsl
mov
aad
outsb
lock
adc
pop
mov
jl
sub
jmp
nop
loopne
sub
aas
dec
shrl
xchg
movq
jno
lahf
push
scas
jmp
inc
iret
scas
into
pusha
pop
mov
push
mov
rcrb
pop
scas
adc
push
js
inc
inc
into
mov
rclb
jg
jg
test
or
loopne
pop
cs
or
cbtw
scas
xor
inc
add
xchg
icebp
loop
and
pop
jp,pt
jl
pop
jnp
jle
mov
sahf
fildll
mov
pushw
ja
inc
cs
ds
dec
aaa
pop
add
jecxz
dec
mov
mov
mov
add
inc
sub
and
insl
in
bound
nop
iret
mov
mov
mov
lock
sbb
jb
js
push
aas
and
sbb
lcall
lret
scas
ficomps
push
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
sahf
fildll
scas
ficomps
push
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
mov
mov
enter
sbbb
fidivl
pusha
jnp
push
lahf
popa
aam
scas
and
xor
fimuls
pop
jl
jp
lcall
pushf
leave
xor
push
mov
jne
and
cmp
inc
sub
fisubl
jmp
das
push
xchg
cltd
mov
push
sub
pop
shl
aad
inc
jbe
cmp
test
orb
cltd
fnstenv
pop
xor
jae
lods
mov
sub
adc
out
mov
mov
in
mov
rcr
in
pop
popa
nop
xchg
lock
push
frstor
push
std
mov
xor
das
xor
xorb
cmp
push
cmp
cmpsl
xchg
movsb
push
dec
pop
data16
imul
bound
xor
and
lcall
sbb
jnp
movsl
orl
add
mov
loop
sbb
lods
dec
pusha
fxam
xor
xchg
subl
adc
repz
test
clc
or
jecxz
subl
cs
loope
hlt
sbb
test
js
inc
popa
out
pushf
cmpsb
sub
stos
cld
stos
xor
rcrb
outsl
dec
es
pop
subb
call
mov
mov
pop
repnz
clc
mov
push
sub
mov
fistpl
mov
mov
sub
andl
xchg
enter
xchg
test
iret
js
xchg
mov
jp
rcrl
inc
cs
cwtl
inc
cmp
xlat
out
ja
loop
out
loopne
and
sbb
xchg
mov
fsubs
leave
pop
in
xchg
testl
jmp
scas
jl
inc
rcrl
mov
scas
inc
sub
adc
mov
jge
ret
stos
les
stos
loop
in
push
adcb
in
ljmp
xor
mov
sub
lahf
inc
es
mov
repnz
cmpsb
outsl
leave
ja
imul
cmp
and
mov
push
cmp
mov
push
sub
gs
ret
jno
jl
pusha
and
mov
rorb
loopne
or
jp
stos
mov
mov
push
mov
inc
scas
add
dec
mov
push
ss
mov
push
sbb
xchg
dec
int3
out
push
mov
adc
adc
mov
pop
div
leave
movsl
mov
insb
clc
mov
addl
ljmp
outsl
cmpb
das
test
xchg
cld
ja
xor
loop
dec
add
mov
lds
test
into
inc
ret
push
mov
jecxz
cmp
or
jne
out
leave
or
pop
hlt
inc
insl
out
mov
jbe
pop
xchg
out
ds
lock
fs
sub
cs
add
out
add
mov
or
cmpsl
lret
pop
shll
or
lods
add
rcll
xor
aas
cmp
xchg
dec
pop
cmp
push
and
sbb
cmp
jns
dec
mov
or
fwait
add
js
imul
cmp
sub
icebp
mov
sbb
lcall
adc
cmp
adc
js
mov
daa
jo
out
push
and
clc
xor
add
shrb
aad
mov
data16
inc
out
call
mov
xor
jg
in
jg
in
repz
pop
js
pop
mov
lret
lcall
imul
and
mov
mov
inc
cmp
xor
and
inc
mov
and
add
jnp
cmp
pop
add
mov
sbb
repnz
rcll
mov
and
ss
jbe
das
sub
les
xchg
inc
push
dec
jno
icebp
lea
addr16
cs
add
mov
ficompl
repnz
bound
dec
and
add
movd
lret
add
fnstenv
xchg
or
push
mov
idivl
adc
stc
jb
inc
mov
lea
js
cli
out
out
rcr
and
mov
movsl
xchg
push
add
shrl
mov
push
std
mov
les
push
pop
xor
stos
int3
aas
cld
add
lcall
jns
inc
daa
sbbl
cmp
cltd
xlat
mov
fwait
gs
push
mov
push
lods
negl
jb
mov
std
sbb
fisttpll
lock
out
mov
lods
push
insb
push
inc
or
inc
and
bound
push
jae
xor
sahf
pop
push
cld
cmpsb
dec
call
jmp
dec
cmp
and
adc
std
insl
cvtps2pd
sub
cltd
insb
jge
pushf
mov
ljmp
pop
jne
cld
sbb
or
sub
scas
and
sub
add
rol
lds
push
cmp
out
add
mov
add
icebp
jp
mov
or
jns
adc
push
std
mov
jp
ffreep
push
or
sti
push
mov
lret
dec
loopne
mov
lret
pop
mov
xchg
les
xor
jp
mov
push
fstpt
lret
daa
jo
inc
xor
fcmovbe
sub
inc
xchg
sti
mov
or
scas
mov
jp
aas
arpl
add
xchg
ret
imul
loope
push
mull
roll
mov
jecxz
addl
or
fucomip
ds
mov
arpl
or
cmp
adc
cmp
push
mov
adc
inc
dec
fs
xlat
out
jecxz
mov
mov
push
mov
sub
adc
sbb
and
test
xor
jbe
testb
mov
add
or
xchg
fwait
aad
cwtl
aas
add
out
in
ret
gs
ss
imul
xchg
lret
push
jae
inc
mov
push
int
int
jnp
or
or
or
lret
lcall
das
cs
outsb
xchg
cmp
cli
and
jge
jae
xchg
or
jle
xor
cmp
les
ss
and
xor
push
mov
std
inc
lret
je
jbe
cmp
mov
rcrb
xchg
ss
dec
imulb
rolb
lods
cltd
sti
sub
rcr
gs
cltd
pop
mov
inc
push
mov
bnd
movsb
dec
cmp
test
iret
and
mov
popa
inc
mov
jae
mov
cmp
out
outsl
inc
xchg
ficomps
loopne
push
push
push
inc
std
cmp
in
or
fadd
inc
lret
clc
stos
nop
cmp
add
xor
inc
push
sbb
out
les
popf
lcall
cmp
and
mov
push
int
mov
outsl
adc
daa
pop
pandn
scas
cmc
inc
xor
dec
movsl
jo
sub
mov
lcallw
imul
insl
push
mov
jno
dec
sbbb
dec
sub
mov
xlat
and
jle
push
fs
inc
mov
daa
jmp
imul
dec
inc
imul
gs
fiaddl
shlb
iret
mov
int
fisttps
cmp
inc
lret
std
inc
lret
jl
fcmovne
jo
out
sub
addb
es
mov
or
or
sahf
ret
addr16
xor
cmc
lock
in
push
out
ss
cmpsl
sub
push
bound
ficoml
sub
lock
into
and
icebp
inc
es
or
add
test
inc
lock
mov
nop
or
mov
jg
lock
dec
idivl
cmc
jnp
in
jmp
nop
loop
and
mov
call
sub
out
enter
push
stos
mov
xchg
push
pop
add
mov
cwtl
adcl
add
or
dec
repnz
hlt
xchg
mov
add
or
mov
and
mov
fdivs
pop
push
push
mov
test
push
mov
stos
pushf
mov
dec
int
xchg
std
xor
pop
xor
dec
hlt
xor
andl
aam
dec
repz
mov
mov
mov
xchg
pop
adc
mov
xor
repz
and
inc
loope
pop
mov
sahf
repnz
iret
dec
and
imul
mov
inc
inc
mov
cmc
xchg
dec
test
aaa
mov
pop
pop
push
insb
lret
inc
andl
lret
scas
push
fxsave
loope
xchg
mov
sbb
xor
add
aad
scas
testl
sbb
inc
push
mov
and
xchg
sbb
int
push
pusha
jnp
icebp
cli
add
andl
fxch
adcl
mov
pushf
fnsave
adc
and
movsl
jmp
pop
jle,pn
jbe
enter
jg
jb
outsl
fisubrl
inc
mov
loopne
lods
cmpsl
xchg
xchg
inc
mov
or
stc
mov
mov
mov
dec
andl
aaa
int3
cmc
jg
sbb
adc
dec
arpl
jns
jge
xor
or
mov
push
or
push
movsl
mov
into
adc
out
test
adcl
mov
mov
dec
cmp
dec
ret
sbb
popf
lods
insl
mov
notl
adc
jo
sub
and
sbb
pushf
addr16
push
les
fwait
in
mov
fldenv
or
sub
hlt
adc
les
insl
xor
push
sbb
xchg
lods
mov
push
cld
sbb
rorb
test
movsb
repz
into
add
repz
lea
add
mov
popa
or
scas
insb
inc
cli
mov
mov
repz
cmpsl
movsb
sub
adc
lea
in
loop
mov
or
mov
les
jb
pop
mov
fs
xor
aad
mov
pop
imul
jb
insl
shlb
jne
and
xor
adc
and
jge
adc
fwait
jb
pop
pop
and
test
mov
mov
jecxz
out
mov
sbb
test
xchg
mov
dec
xchg
push
movb
fcomps
cmp
inc
cmp
lret
imul
mov
adc
fdivl
add
imulb
fiaddl
pop
fdivl
insb
test
cmpsl
insb
inc
jge
sarb
xor
push
pop
xor
mov
out
fbld
cs
mov
or
cmp
and
stos
xchg
rol
addr16
in
ret
outsl
inc
xchg
mov
test
mov
sbb
inc
sbb
aam
push
iret
sbb
iret
adc
push
mov
push
outsb
rorl
fucomip
inc
das
dec
lds
xchg
hlt
mov
hlt
les
mov
sub
inc
test
adc
mov
adc
or
les
fisubs
pop
je
insl
push
cmpsl
push
cwtl
test
aaa
enter
cmp
imul
movsb
sub
xor
jg
fists
cmpsl
into
neg
outsb
movsl
fidivl
jecxz
lea
xorl
and
iret
xor
push
shrb
pop
icebp
xor
adc
mov
out
sar
mov
cmpb
or
dec
es
test
xchg
gs
xchg
fwait
lods
adc
aas
push
mov
fists
mov
cwtl
stos
jmp
inc
aas
mov
jns
xchg
inc
fdiv
or
or
xchg
in
mov
aad
shl
aam
dec
loop
nop
arpl
mov
es
inc
imul
xchg
jnp
pop
scas
mov
inc
fnstcw
nop
outsb
into
pop
aas
push
test
inc
int
enter
or
mov
ljmp
adc
push
xchg
jnp
and
test
sub
sub
or
stos
pop
cli
jo
jg
leave
fcmove
int
test
push
xchg
dec
das
stos
add
clc
sub
ret
pushf
outsb
lret
jae
pushf
xchg
subl
or
xor
mov
incb
jle
jb
pop
mov
pop
mov
aad
adc
test
fs
add
psubusb
xchg
lcall
fmul
test
stos
cmpsb
outsb
jnp
sahf
push
cmp
inc
push
mov
mov
fcomi
cmp
sti
ss
add
mov
mov
cmc
sub
xor
cmp
mov
imul
add
mov
xor
or
and
in
fdivs
inc
fadd
pop
push
sub
xlat
imul
inc
sbb
adcl
dec
insb
push
sub
fs
jno
shlb
xor
adc
insl
xchg
dec
xchg
add
mov
xor
pop
mov
fwait
mov
mov
pop
pop
arpl
sub
pusha
sarl
push
cltd
cmc
imul
fistpll
add
cmp
scas
xchg
xchg
mov
xchg
dec
sbb
ret
sub
push
fdivr
xor
mov
or
mov
push
dec
in
fdivrp
pop
add
push
in
xchg
je
es
jle
loopne
fisubrs
out
mov
sub
cmp
hlt
jp
ret
leave
shll
xor
cmp
add
and
dec
inc
lretw
outsl
out
inc
ja
and
jne
xchg
pushf
movsb
in
mov
pop
jl
mov
imul
adc
xchg
push
dec
and
lret
pop
inc
pop
adc
lcall
mov
sub
fldt
add
pop
scas
insl
mov
outsb
out
hlt
and
stos
scas
xchg
fsubl
adc
lret
mov
push
cmpsb
push
popa
fdivs
adc
out
insb
shlb
ret
xchg
xor
sahf
and
push
mov
leave
mov
sbb
jne
stc
jb
sbb
bound
xchg
mov
outsb
add
or
stc
adc
jp
dec
inc
mov
flds
ss
ds
inc
xlat
clc
in
aaa
add
cmp
mov
jmp
pop
outsl
aam
popf
jecxz
sbb
lret
push
add
ss
cli
mov
dec
test
xor
ss
jbe
jnp
add
cmp
fwait
xor
ret
push
mov
add
jmp
adc
or
and
mov
js
ficompl
adc
imul
push
cld
dec
in
or
add
mov
jmp
sub
call
mov
out
mov
and
sbb
mov
dec
add
ljmp
jp
repnz
cmp
jmp
loopne
jp
xor
mov
in
popa
xchg
cld
imul
xchg
insl
and
cmpsl
jae
arpl
sarl
sbb
test
xchg
sbb
fs
fadds
jmp
daa
stos
push
fstpt
and
push
clc
xchg
lds
repz
lcall
out
addr16
mov
jecxz
push
sub
dec
dec
cmp
fisttpl
lds
incl
xlat
mov
call
add
loopne
cwtl
enter
fcompl
addb
push
ret
xor
dec
dec
repz
dec
jl
xchg
mov
and
jl
inc
decl
mov
add
dec
dec
xchg
inc
pop
sahf
mov
push
mov
xchg
dec
movsl
xchg
mov
push
xchg
nop
int
push
adc
xchg
sahf
mov
xor
mov
push
mov
ja
push
stos
lahf
jmp
aaa
jle
sarl
or
or
cmp
add
mov
mov
cmp
jbe
pusha
das
dec
push
xchg
pop
imul
pop
xchg
cmp
jl
idivl
addr16
jmp
mov
test
mov
repnz
data16
adc
sub
movsb
push
cwtl
mov
xchg
xor
mov
movsl
adc
loopne
adc
push
xchg
jg
pop
ja
sub
cmp
dec
mov
pop
sub
shlb
jbe
gs
js
inc
inc
icebp
pop
popa
aaa
pop
mov
cli
jae
add
sbb
jecxz
lods
cmpsb
inc
dec
inc
jle
inc
sbb
mov
add
bound
xchg
rcpps
clc
and
mov
mov
out
mov
fcmovnbe
jg
punpckhwd
imul
pop
dec
jmp
mov
popf
xchg
fiadds
pop
cwtl
mov
xlat
popa
jne
nop
in
lea
xor
sbb
cmp
sbbb
cwtl
lret
imul
dec
inc
add
sbb
or
xlat
fisubl
stos
mov
out
stc
ja
cltd
sbb
pushf
fcoms
aaa
push
mov
mov
cs
hlt
dec
pop
in
enter
jnp
cmp
mov
movsl
jp
aas
les
or
fmuls
sarb
leave
sarb
mov
jl
or
lret
gs
add
in
mov
fidivrl
inc
pop
cmpsb
xchg
stc
sbb
lock
inc
fiadds
add
fisubrs
lret
pushf
pop
add
mov
pop
cmp
pop
inc
movsl
pop
push
push
pop
test
mov
ss
fildll
inc
cwtl
les
es
test
xor
fsubs
push
xchg
add
mov
aaa
jne
icebp
inc
test
mov
adc
inc
mov
inc
pop
pop
leave
lds
popf
mov
movsb
sub
lods
push
js
lret
mov
adc
fisubs
pop
jnp
ror
mov
popf
loop
repz
jno
or
jne
stos
and
mov
sahf
loope
cmp
dec
mov
icebp
arpl
es
bound
repnz
testl
inc
nop
mov
into
jbe
adc
fildl
pop
mov
add
mov
daa
or
pusha
fmul
adc
mov
jg
lret
loopne
xor
or
pop
inc
test
cmp
shl
dec
out
gs
addr16
xor
xchg
inc
xchg
adc
lock
ss
sbb
and
jb
ret
add
mov
lock
xchg
icebp
sbb
lret
pop
jl,pn
pop
cmp
pusha
adc
mov
xchg
and
push
xor
or
jnp
in
das
push
cmc
lds
aad
stc
shl
mov
mov
lds
std
jl
jns
sub
push
mov
dec
in
ds
mov
dec
or
pop
jecxz
pop
jmp
les
rolb
rcrb
cs
pusha
rorl
xchg
fxsave
cmp
arpl
sahf
cmpsl
div
lods
aad
add
push
enter
loopne
inc
std
das
sbb
mov
dec
add
mov
mov
nop
mov
int3
push
mov
inc
rorl
movsl
out
push
mov
mov
push
lret
xchg
lret
pop
dec
pop
lahf
out
xchg
ljmp
das
iret
dec
popf
cwtl
pop
add
sbbb
jb
das
nop
xchg
outsl
scas
rorb
pop
aad
mov
mov
fwait
cwtl
or
stos
cmp
stc
jbe
into
inc
fdivs
sub
add
jae
leave
imul
jg
and
sub
jns
xchg
add
or
push
or
mov
push
add
movsb
mov
pop
add
stos
ror
adc
clc
pushf
mov
lret
mov
lds
stos
mov
or
out
loopne
xchg
and
jbe
cmp
imul
loop
add
dec
bound
aaa
sub
cli
xchg
jl
sub
and
adc
mov
mov
pop
push
mov
dec
fnsave
push
imul
sbbl
scas
outsb
enter
sbb
xor
aam
sbb
outsl
shlb
push
cmp
inc
inc
adc
out
sub
jno
push
imul
or
cltd
out
inc
push
adc
mov
dec
sbb
notb
mov
dec
pop
addl
loopne
add
pop
or
aam
es
lahf
xchg
add
scas
pop
aas
les
imul
nop
test
xor
roll
les
pop
cltd
mov
inc
aam
bound
test
mulb
mov
inc
lds
jae
js
int3
pusha
fdivrs
mov
insb
mov
mov
or
sbb
jmp
add
sub
gs
jno
stos
imul
hlt
or
dec
repz
int
adc
movb
out
xlat
inc
mov
jne
xchg
addr16
fcom
dec
mov
sbb
dec
xor
bnd
xlat
leave
mov
push
push
dec
push
loop
repz
lods
cmpsl
iret
lea
cmp
push
pop
jp
mov
shlb
jp,pn
add
pop
xlat
pushl
aad
iret
mov
lahf
out
jg
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
sahf
fildll
scas
ficomps
push
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
sahf
fildll
scas
ficomps
push
outsl
pop
pop
cs
ds
dec
cs
pop
outsb
or
sahf
fisubrs
scas
pop
pop
outsb
sgdtl
cs
dec
dec
cmpsl
mov
sub
cmp
sub
or
outsb
adc
loop
pop
mov
fsin
inc
into
stc
into
jmp
bound
push
sub
jle
dec
jns
sbb
out
mov
dec
into
stc
fsubrp
xchg
add
adc
push
push
push
popa
pop
jae
cltd
popf
stos
out
sti
faddl
mov
jns
pop
ja
push
jle
xchg
lcall
sarl
incb
push
ficoml
mov
fwait
jns
sub
mov
pop
lretw
jmp
mov
adc
test
jnp
or
sarb
bound
insl
xor
cltd
mov
push
jl
jo
stc
loop
repnz
push
imul
bnd
pop
jle
mov
pop
in
scas
jns
ja
inc
pusha
and
in
dec
iret
push
fdivrp
rcrl
pop
xchg
cltd
idivb
gs
adc
stos
shrb
mov
mov
mov
imul
icebp
mov
push
arpl
lods
sub
sti
fucomp
jne
push
sub
jns
jo
cltd
and
clc
mov
hlt
sar
jecxz
call
jp
dec
add
sub
adc
in
mov
mov
nop
lret
cmpsl
xchg
mov
pusha
jl
jg
pop
pop
sbb
mov
in
in
in
mov
out
xchg
test
lahf
popf
inc
sbb
outsl
pop
dec
insb
cmp
jns
imul
fsin
leave
into
stc
fsubrp
sbb
or
cmp
sub
jle
dec
jns
imul
fsin
leave
into
stc
fsubrp
sbb
sub
mov
jbe
add
in
mov
sbb
pop
mov
adc
repnz
adcb
fs
and
outsb
ds
cmp
cli
ds
mov
lock
popfw
insl
xor
xchg
mov
xchg
cld
scas
push
adc
xor
mov
pop
je
gs
nop
push
je
iret
loop
lahf
push
dec
fidivs
push
jmp
jge
or
lcall
mov
out
mov
sub
lods
aam
pop
jne
and
das
jmp
or
dec
push
nop
dec
outsl
inc
out
sub
mov
fimuls
mov
fstl
iret
ret
inc
fdivrl
inc
mov
mov
shll
ret
xchg
shll
outsl
sub
out
orps
arpl
xchg
rcrb
pop
adc
cld
or
cmc
fldt
add
xor
add
xor
sar
xchg
ret
bound
dec
dec
lock
mov
push
sub
dec
icebp
fwait
push
das
insl
lcall
jecxz
sbb
lods
sub
out
jnp
or
dec
bound
add
into
repnz
jecxz
rolb
in
adc
stos
pop
xchg
arpl
ds
dec
dec
xchg
test
icebp
pop
xor
add
inc
mov
pop
pop
add
xchg
cltd
pusha
cli
sbb
sbbl
xor
out
iret
sbb
cmp
mov
mov
stc
dec
jb
cmp
out
add
adc
pop
mov
xor
cmp
and
stos
jg
bound
dec
push
sbb
fimull
and
inc
dec
cmpsb
adc
shrb
mov
lret
mov
pop
cmpl
daa
dec
or
cltd
insl
xor
fidivl
nop
add
ret
xlat
testl
mov
inc
cltd
mov
lahf
jns
enter
pop
push
xor
sbb
pop
icebp
shrb
iret
pop
cmp
mov
inc
fistpl
mov
push
hlt
loope
jb
fwait
fs
sarl
lahf
cmp
and
jle
scas
testb
cmpl
push
dec
jnp
fcompl
add
repz
call
cmp
mov
mov
nop
add
iret
adc
mov
pop
mov
adc
out
pop
mov
cltd
mov
mov
mov
sbb
inc
jle
fldenv
lahf
and
pop
jnp
and
mov
je
test
les
aam
ret
mov
inc
les
pop
dec
mov
mov
mov
xchg
add
pop
push
sbb
inc
ret
cli
pop
pop
sbb
sub
shlb
js
outsl
sbbb
jbe
fwait
xchg
enter
or
rorl
pop
xor
cmp
mov
aad
mov
lahf
jge
sti
cmp
cwtl
xor
pop
sbb
xchg
outsb
adc
pusha
fcoml
cli
inc
es
mov
pop
jae
enter
adc
js
inc
les
ljmp
in
cmc
jmp
pop
ljmp
adc
je
imul
hlt
in
gs
jbe
int
sbb
dec
push
jmp
push
popf
push
or
pop
jl
mov
push
mov
add
xor
mov
sbb
mov
stc
pop
insb
cmpb
mov
orl
jae
xchg
ss
dec
test
jnp
xchg
sbb
jne
pushf
and
in
faddl
clc
out
mov
add
in
sub
mov
out
cmp
repnz
or
popa
pop
jmp
nop
out
sbb
hlt
dec
lock
jb
in
push
cmp
stos
scas
shll
sub
xor
aam
lret
or
and
xchg
out
mov
mull
cmpsb
aam
mov
das
loop
int
sahf
arpl
xchg
mov
adcb
push
scas
jbe
pop
sbb
xor
mov
mov
sub
and
sbb
jmp
out
mov
ljmp
stos
push
dec
and
pop
jo
xchg
jno
mov
imul
cmp
xchg
imul
cmc
and
mov
enter
fdivs
movsl
pop
ficoms
lods
lods
xchg
pop
add
and
push
movsb
push
sarb
or
pop
add
lods
jne
lahf
bound
jae
sub
nop
sbb
sub
nop
cmp
cmp
cli
notl
cmpsb
cmp
sub
mov
rorl
das
cmp
pop
ficomps
stos
xchg
ret
ljmp
aas
pop
mov
inc
or
test
call
add
lock
cmp
stc
std
adc
push
sbb
aaa
daa
sub
fs
stc
outsb
sub
shlb
mov
shl
nop
mov
stc
repnz
sbb
xor
imul
cwtl
outsl
or
xor
mov
int3
push
jne
xor
movsl
push
jl
sahf
xor
int
sub
rclb
cs
out
movsl
sbb
lret
std
push
xor
pop
out
repz
sbb
cli
cmc
cld
mov
clc
mov
cmp
je
xchg
mov
hlt
out
or
ljmp
mov
fisttpl
loop
add
jnp
adc
sbbb
mov
pop
mov
hlt
mov
int
push
rcll
pop
mov
aad
cs
ljmp
clc
mov
and
xor
pop
jmp
lock
sbb
lea
addr16
in
xor
xlat
in
nop
outsb
lods
aam
sub
dec
dec
push
daa
stos
or
lcall
dec
mov
fmuls
sbb
inc
sbb
ds
sub
xor
sti
mov
es
enter
test
sbb
inc
test
ds
shl
jg
pop
lds
pushl
mov
sub
mov
rcll
sbb
cld
lahf
xor
push
es
jbe
cmp
out
sahf
jns
clc
stc
insl
lock
add
pop
sbb
inc
inc
loopne
mov
cli
push
repz
loopne
ja
mov
xor
jb
or
jmp
xchg
inc
cli
in
mov
jb
enter
pop
movsb
jp
adc
fisubs
xchg
sub
adc
stc
inc
push
int
jnp
push
mov
xlat
cltd
xor
mov
scas
inc
or
sbbb
mov
mov
pop
jg
adcl
popf
stos
xchg
out
xchg
cmp
push
mov
dec
int
iret
mov
mov
pop
jecxz
shll
in
sub
icebp
in
aad
jnp
lea
mov
repz
pusha
push
jmp
mov
xor
fcmovbe
lods
fiaddl
sub
adc
mov
imul
inc
gs
jae
mov
pop
loope
imul
adc
cs
and
out
mov
add
dec
cmp
sahf
mov
cltd
int3
ss
das
int
popa
xor
iret
mov
sbb
arpl
cwtl
adc
adc
mov
popf
insl
insb
dec
push
int
xchg
sub
daa
mov
cltd
in
mov
insb
aam
and
fcmovnu
dec
fwait
enter
jbe
stos
lret
cmpsl
mov
dec
sub
dec
shll
push
cmp
rcrl
and
cs
cmpsl
dec
pop
inc
jne
or
pop
inc
push
jg
jg
and
lcall
aas
fnsaves
std
pop
daa
sub
dec
sbb
test
jb
dec
fstpt
aas
out
xchg
push
orb
or
push
and
rclb
js
jno
test
imul
rcrl
ds
mov
adcl
lret
jae
inc
rcl
fcmovbe
xor
fadds
addb
sub
repnz
push
movsl
xor
mov
mov
imul
ret
mov
pushf
lcall
sar
addr16
push
into
fs
push
frstor
and
es
add
sbb
stos
test
inc
repz
sbb
movb
xor
cmp
inc
addr16
jne
in
pop
rorb
add
aas
mov
fcompp
push
ss
dec
ss
mov
add
mov
cmp
test
imulb
pusha
cmp
adc
jae
cbtw
out
adc
ja
pop
jl
testl
leave
int
mov
sbb
les
jecxz
rclb
sub
test
aaa
jle
leave
cwtl
lahf
or
lret
and
jg
pop
inc
jge
jmp
mov
aas
pop
subb
jp
push
std
or
adc
cs
call
dec
outsb
dec
cmp
popa
add
xor
mov
shrl
ret
jecxz
daa
inc
into
xchg
stos
xchg
push
data16
pushf
cmp
mov
push
mov
popf
andl
and
jmp
pop
xor
pop
mov
cmp
push
push
inc
in
add
xchg
push
push
adc
jnp
dec
fnstenv
ret
pop
sbb
pop
je
mov
idivb
sbb
mov
aas
inc
or
sti
mov
cmp
dec
add
mov
fwait
lret
pop
xchg
mov
push
aas
loopne
cs
push
pushl
filds
inc
sub
inc
mov
pop
mov
jle
ljmp
or
or
into
push
loope
aas
lock
in
mov
sbb
dec
fistl
xor
lahf
test
lcall
repnz
mov
cld
sub
xchg
pop
adcb
ljmp
pop
fbstp
jae
mov
sub
jmp
xchg
cmpb
lret
test
mov
add
das
jns
repz
xchg
adc
or
xlat
sbb
decl
cli
outsb
bound
push
or
test
jge
stos
sbb
std
fidivrs
iret
or
das
cmpsb
lcall
pushl
out
outsl
scas
mov
popf
xor
dec
and
add
mov
sub
push
cli
push
push
test
jge
out
sub
in
or
sbb
in
inc
push
sarb
xchg
stos
cmp
test
cmpb
mov
mov
shlb
and
mov
mov
fstpl
in
shr
mov
sbb
mov
jne
ss
mov
test
inc
dec
or
mov
cld
dec
mov
inc
movsl
sub
sbb
adc
mov
sahf
imul
mull
xchg
into
subb
and
out
setno
sbb
pop
add
in
jbe
push
xchg
xchg
loopne
jb
inc
inc
in
mov
ror
mov
incl
pop
xlat
push
lds
sub
dec
fcoml
iret
mov
and
pop
sbb
icebp
ret
out
mov
stc
lds
outsb
push
adc
dec
jge
repz
into
and
sub
in
jmp
jle
xchg
subl
cmp
or
pushf
jge
ljmp
stos
testb
cmp
pusha
jo
shrl
or
test
inc
sbb
and
push
int3
fldl
and
adc
push
stos
stos
jge
gs
mov
mov
jge
mov
into
ret
into
fmull
or
push
cmpl
sbb
add
xchg
dec
in
push
loop
jge
dec
lea
js
cld
test
adc
mov
les
test
inc
repnz
xlat
aam
imul
iret
cltd
fistps
call
iret
scas
ss
pop
rcrb
pop
test
xor
insl
mov
mov
sahf
xchg
xchg
daa
mov
fcomps
nop
cld
das
sbbl
or
add
adc
adc
int3
nop
or
lds
lds
aam
cltd
inc
call
fdivr
addr16
mov
test
test
xchg
shrl
lods
mov
ret
or
push
lock
jp
push
and
adc
sub
icebp
aaa
adc
btc
mov
gs
jns
repz
rolb
call
pop
pop
jge
pop
xchg
cs
arpl
cwtl
pop
in
in
xlat
push
cli
adc
or
xchg
xor
test
sbb
inc
xchg
sbb
xchg
jbe
lret
cmpsb
mov
mov
dec
add
pop
push
scas
adc
ss
xchg
mov
insl
adc
ret
and
ss
lret
mov
fistps
aam
mov
jae
mov
hlt
sbb
in
ss
fisttpl
nop
in
dec
stos
in
clc
stos
inc
mov
lret
test
cmp
jmp
hlt
adc
dec
sarb
xchg
or
jae
mov
mov
clc
mov
jle
mov
paddw
xor
jecxz
push
mov
iret
sti
into
pop
pop
fcoms
outsl
or
lea
fstl
in
jg
dec
cld
sub
fldl
add
leave
rorl
sbb
pop
inc
xchg
loopne
out
adc
jecxz
dec
test
mov
in
mov
push
insb
lret
jns
dec
xlat
stos
xor
dec
outsl
sbb
mov
jno
cmp
les
icebp
xor
xor
xchg
cmp
adc
add
push
xchg
dec
enter
or
insl
dec
xchg
lea
js
sbb
pop
sub
daa
cmpsl
add
xor
and
mov
sub
ret
cld
cld
adc
push
or
cmp
or
popa
testb
adc
fldl
add
mov
mov
pop
lods
fcmovne
mov
mov
out
or
inc
sub
pushf
out
mov
pop
jnp
add
addb
test
mov
push
repz
or
pop
mov
dec
pop
ja
arpl
push
repnz
les
shrl
jmp
loope
in
nop
dec
je
popa
inc
stc
movsb
push
test
jae
std
cmp
outsb
mov
inc
leave
mov
pushf
adc
mov
mov
outsl
inc
fwait
addl
sarl
popf
movsl
sub
push
sub
repnz
push
push
lea
das
dec
clc
popf
xor
aas
pop
dec
negb
jno
fs
xchg
cwtl
push
mov
imulb
test
xchg
adc
dec
out
sti
inc
movsl
cmpsl
dec
int3
clc
fsubrs
div
nop
add
repnz
jecxz
cmpsb
cmpl
mov
test
pop
sti
rcrl
mov
aas
fists
mov
push
add
test
and
cmp
bound
fstps
dec
cmpsb
sti
cwtl
out
sbb
icebp
jno
xor
xor
stc
scas
fs
mov
inc
inc
fldl
dec
sbb
jg
out
cmp
je
test
hlt
test
mov
stos
jmp
enter
mov
inc
or
out
pop
push
aaa
shl
test
fistpl
mov
test
jae
or
aas
xchg
cmp
xchg
jle
push
jp
insb
add
iret
jae
xor
push
xorb
jns
call
jne
sub
into
jo
and
imul
xor
or
jbe
mov
cs
adc
lods
aaa
icebp
lods
jae
cli
mov
xlat
mov
cmc
cmp
ja
sbb
jae
and
roll
mov
push
or
jne
out
fs
xor
enter
nop
xlat
add
clc
mov
clc
sbb
nop
sahf
sbb
stos
mov
xchg
mov
xchg
inc
xchg
pushf
mov
fistpl
xchg
test
out
jge
cmc
jmp
add
adc
add
and
fmulp
out
or
sub
pop
daa
ret
jnp
in
cmp
fsub
loope
out
adc
and
pop
popf
cs
cli
add
notb
or
cmp
mov
xor
imul
icebp
push
jle
jo
and
test
push
dec
pop
sti
scas
mov
inc
fldl
sub
inc
std
push
mov
or
repnz
mov
mov
push
inc
inc
sbb
insb
stos
in
dec
jns
gs
xchg
mov
xlat
sub
cmpsb
xorw
mov
mov
ret
push
inc
mov
lret
loop
xchg
cmp
cwtl
sub
lods
cmp
je
and
scas
inc
mov
push
jne
mov
mov
inc
int3
mov
mov
std
add
es
cmpsb
mov
sub
bound
mov
pop
stc
push
rcrl
outsl
cmp
inc
sbb
aas
cmpsl
fadds
rcrl
sbbl
inc
push
int3
stos
xor
xor
data16
sahf
in
into
xor
cmpsl
xchg
xor
mov
push
jle
mov
sub
test
fisttps
loop
mov
insl
push
jp
cmp
push
mov
lcall
cmpsl
ljmp
mov
sbb
faddl
and
adc
lods
xchg
aas
mov
xor
xchg
push
scas
dec
pusha
cli
and
das
icebp
adc
jno
inc
nop
gs
add
lahf
aam
mov
icebp
push
mov
mov
pusha
repz
or
in
mov
xor
lcall
loope
add
dec
jne
dec
sbb
arpl
inc
scas
xchg
and
lret
hlt
add
jne
movsl
cli
push
mov
cmpsb
push
gs
pop
mov
push
sahf
inc
xor
out
xor
xor
inc
mov
push
xlat
inc
scas
dec
lcall
inc
popa
insb
mov
pop
push
mov
cwtl
mov
lcall
ljmp
subb
cmpsb
fisubrl
js
push
inc
stc
mov
or
dec
fcmovnu
cmp
jge
test
jo
test
or
cltd
iret
enter
or
mulb
xor
dec
push
jnp
sahf
inc
ds
lret
fnstcw
mov
jp
aam
adc
popf
pop
cmp
cmp
dec
stos
rcrb
inc
cmp
sub
adc
inc
mov
out
sti
pop
xor
push
pop
in
inc
pop
insl
in
mov
movsl
decl
je
adc
jno
dec
inc
add
inc
je
nop
xor
inc
cmpb
sarb
or
xor
cld
into
ss
pop
inc
dec
cmp
pusha
add
jge
aam
jg
add
mov
sbb
test
cmpl
scas
std
mov
imul
mov
push
dec
xlat
push
js
jmp
push
inc
repnz
cmp
inc
sti
lods
dec
mov
sbb
out
data16
mov
sahf
fs
ss
mov
pop
xor
ds
ljmp
and
inc
push
or
pop
jecxz
ror
shl
mov
jno
lret
pop
jbe
push
out
insl
pop
push
pop
cmp
pushf
and
test
push
scas
imul
xchg
xchg
add
movsl
inc
jno
pop
shlb
cwtl
sbb
inc
and
and
mov
rolb
mov
jae
add
mov
push
js
xchg
clc
inc
repnz
mov
subl
mov
aas
mov
pop
push
lods
fsubrs
pop
mov
clc
sbb
aas
hlt
in
in
jbe
inc
inc
xchg
hlt
out
push
push
repz
add
hlt
in
pop
mov
sub
xor
inc
push
aas
push
repnz
enter
adc
leave
arpl
lods
into
push
iret
jge
int3
ret
lahf
loopne
adc
in
adc
dec
ja
xor
fldenv
cmpsl
inc
jb
mov
cmp
and
mov
in
push
xchg
dec
aaa
in
and
popf
ret
jl
cld
aas
push
incb
scas
sbb
cmp
cmc
ja
xchg
iret
push
sbb
enter
leave
mov
sbb
jae
mov
mov
in
fldl
out
int
xor
xchg
adc
xchg
jb
push
mov
cmp
inc
mov
lret
hlt
pop
loopne
mov
inc
or
sbb
cmp
daa
push
inc
lds
pushl
jmp
rol
popa
int3
mov
push
repnz
pop
fwait
test
ja
push
insb
jcxz
push
dec
sbb
adc
pop
cs
int3
mov
setb
into
mov
das
jns
mov
out
outsb
andb
add
out
sbb
scas
sbb
mov
imul
jg
cmp
push
shlb
add
aaa
cs
dec
lds
sbb
int
das
in
shr
stos
sahf
or
jbe
stc
mov
or
dec
dec
daa
inc
xchg
or
add
clc
jge
leave
pop
sbbb
mov
fwait
push
lahf
sbb
in
cli
sti
pop
iret
lds
mov
loope
mov
rcrb
mov
les
sti
or
xor
mov
rorb
and
dec
sbb
mov
add
inc
adc
cs
xor
adc
add
pop
adc
push
push
or
sub
inc
dec
hlt
fsubrs
xor
pusha
pushf
push
repz
add
adc
xchg
cltd
aaa
ret
insl
and
js
adc
xor
imul
sub
jle
dec
jns
imul
fsin
leave
into
stc
fsubrp
sbb
or
cmp
sub
jle
dec
jns
imul
fsin
leave
into
stc
fsubrp
sbb
or
push
sub
pop
jle
dec
jns
imul
fldz
leave
into
std
ss
cmp
sub
outsb
dec
dec
jns
test
and
sahf
ficomps
xchg
xchg
ja
addr16
push
stc
inc
jmp
jns
or
inc
xlat
jns
imul
fldenv
push
stc
inc
jmp
pop
mov
out
xlat
js
imul
xchg
ja
addr16
push
stc
inc
jmp
pop
mov
les
sbb
pop
mov
enter
jmp
mov
and
xchg
fisubrl
mov
and
and
nop
loop
mov
in
aas
fldlg2
xchg
mov
add
xor
and
dec
bound
dec
or
js
leave
outsl
or
xor
mov
bound
negl
dec
xlat
jg
xchg
out
fidivl
ja
fdivrl
in
inc
mov
xchg
mov
dec
jp
bound
dec
or
jmp
mov
xchg
mov
mov
xchg
call
mov
push
xchg
sbb
push
xchg
mov
int3
loope
aad
lcall
dec
sub
xchg
out
sub
cmp
mov
stc
inc
jmp
pop
mov
out
xlat
jns
imul
fsts
mov
mov
push
std
jae
add
push
xlat
sub
dec
hlt
dec
rorl
movsl
xor
int3
outsl
out
push
xchg
push
cmp
pop
bnd
cwtl
addr16
daa
mov
mov
out
xlat
jns
imul
fldenv
push
stc
inc
jmp
pop
mov
out
xlat
jns
imul
flds
lret
cs
insb
and
dec
orb
aam
mov
inc
orb
lock
fwait
push
aaa
add
in
fisubl
pop
adcl
sti
cld
dec
inc
ficoml
jbe
out
inc
lahf
jnp
aas
jg
lahf
xor
out
fsubp
pop
push
sbb
dec
pop
add
scas
int3
sbbb
fimull
lea
mov
pop
aad
cltd
pusha
cmp
aam
dec
jl
xor
pop
stos
mov
in
ds
pop
out
test
mov
push
jge
and
sub
jo
mov
fdiv
push
scas
push
mov
mov
sbbb
nop
sub
inc
or
jle
outsb
add
imul
mov
push
sahf
cwtl
inc
test
cmp
addr16
and
mov
lds
fcom
pop
fdivs
stos
insb
test
add
or
inc
movsl
js
movb
and
push
or
jae
shlb
jns
mov
out
sub
in
jo
jp
std
sub
scas
jne
orb
fwait
hlt
jg
flds
test
jecxz
mov
ficoml
mov
jp
fnsave
pop
mov
xchg
leave
int
mov
repnz
pop
cmpsl
push
cmc
xchg
fnsave
mov
call
dec
dec
adc
shl
mov
loope
adc
inc
mov
dec
loope
lahf
mov
sub
pop
jnp
outsl
and
mov
out
mov
mov
cmc
inc
sbb
dec
xchg
dec
cmp
scas
enter
push
push
adc
jp
pop
mov
push
xchg
imul
add
pop
cmp
xchg
jmp
test
movsl
mov
fstpl
jnp
cli
flds
mov
mov
iret
stos
jecxz
mov
cmp
inc
in
xor
es
shrl
movsl
cmp
adc
mov
pushl
scas
dec
ds
es
xor
mov
hlt
stos
popa
scas
rcrb
xor
xchg
jbe
es
jnp
cs
loopne
adc
push
paddsw
pop
lock
cld
pop
sub
xor
jno
aad
ret
or
sbbb
dec
iret
xchg
sbb
jmp
jnp
xchg
mov
icebp
cmp
aam
xor
lods
jp
push
push
xor
xlat
sub
pop
xchg
dec
jmp
ret
ljmp
fisttpl
sbb
sbb
adc
push
or
daa
pop
int
mov
sub
shrl
addr16
or
scas
ret
jne
add
cmpsl
in
test
inc
nop
in
rcrl
xchg
adc
stos
lock
mov
jae
sbb
add
sbb
int3
out
xor
andb
cmp
mov
ljmp
enter
cmc
cli
fmull
ficoml
xor
adc
inc
pop
cli
sub
pop
imul
iret
fsubrs
add
xor
pop
mov
ss
mov
mov
xorb
jb
push
and
aad
cmpsb
pop
faddp
and
push
jecxz
insb
loope
mov
xorb
xchg
mov
dec
aaa
jns
out
fwait
int
fisubrl
and
fisubrs
outsb
aas
xchg
push
mov
ficoml
push
sahf
inc
fldcw
imul
fs
mov
cld
jno
inc
and
jg
push
pusha
ds
pop
add
das
jo
xor
mov
mov
and
stos
je
test
lds
pop
subl
int3
rolb
ret
adc
adc
fisubs
dec
and
jecxz
cmp
int3
pop
je
rep
test
cmpsl
add
aas
sub
mov
inc
push
lret
or
jmp
lds
pop
into
popa
aam
outsb
cli
js
or
negb
shlb
stc
mov
ds
mov
xor
and
mov
out
ja
pop
and
adc
popa
pusha
loop
stc
cmpsb
nopl
cs
mov
cmp
ret
outsb
push
or
sbb
xchg
repz
mov
ficompl
int3
pop
shlb
xor
xchg
inc
mov
scas
mov
lret
dec
popa
cld
fcoms
insb
cs
icebp
fmul
push
and
int3
pushf
adc
les
sbb
jle
push
mov
jb
in
jbe
jmp
fiaddl
ret
cmp
dec
lret
adcl
lahf
mov
pusha
mov
pop
mov
jmp
fldenv
das
subb
out
dec
call
inc
sub
adc
add
out
push
lret
fcmovnb
xor
lret
jle
dec
sbb
ja
daa
arpl
cmp
popa
sahf
cmp
hlt
sub
cmpsb
psadbw
mov
push
fimull
faddp
jns
rcrb
lret
aam
ret
iret
cld
mov
dec
insl
push
loopne
pop
or
jne
sbb
fld
push
dec
fs
or
cs
mov
add
and
outsb
test
jns
mov
ds
mov
cmp
pushw
jno
fmuls
lea
and
mov
xchg
push
mov
mov
mov
mov
imul
and
xchg
in
sbb
lret
loopne
push
mov
jl
pop
lcall
arpl
push
repz
loop
mov
icebp
int3
loope
mov
pop
outsl
xchg
or
fldl
testl
sbb
adc
cs
jo
mov
inc
aad
test
shlb
xchg
xchg
popa
lock
mov
stos
jnp
loop
mov
push
mov
inc
bound
lret
in
test
inc
push
or
cwtl
dec
sub
dec
push
push
test
mov
push
roll
pop
movsb
dec
dec
cmpsl
mov
pop
and
enter
jp
loop
and
mov
nop
jnp
mov
inc
adc
sbb
inc
inc
in
inc
xorb
pushf
inc
mov
ljmp
outsl
xchg
or
lret
adc
mov
shll
rcl
xchg
jecxz
jecxz
xchg
push
jmp
loopne
movsb
dec
leave
and
xchg
stc
lock
loope
inc
push
mov
pop
dec
dec
les
pop
ss
xchg
scas
mov
cmp
lds
push
mov
mov
mov
lea
push
mov
and
test
and
jmp
mov
or
sarb
xchg
xchg
mov
jl
sub
adcl
int3
pop
test
flds
add
xlat
mov
push
mov
into
jp
jno
xor
sti
cmc
notl
stos
or
pushf
fdiv
movsb
push
mov
push
dec
inc
dec
mov
and
sub
and
dec
adc
cmp
rorl
sbb
jg
cmc
clc
stos
call
ljmp
mov
scas
fildll
xchg
pop
add
dec
fcoms
xlat
test
jl
mov
les
mov
cmp
stc
mov
test
and
aad
sbb
mov
inc
xchg
std
es
cltd
div
clc
push
inc
or
mov
leave
sub
pop
pop
shll
fnstcw
lea
jne
pusha
pop
lods
xchg
push
or
xor
loop
inc
js
push
dec
ja
cld
add
out
jp
push
aas
test
loope
js
test
push
mov
push
mov
pushf
jg
xor
pushf
ret
pop
and
pop
shrl
add
sub
xor
push
pop
lahf
push
iret
xor
call
in
mov
test
xchg
push
ds
jg
dec
loopne
les
mov
or
lret
xchg
xor
dec
pop
and
jae
mov
popa
xchg
mov
and
mov
mov
mov
inc
mov
lea
fs
cld
push
lcall
lret
xchg
fsubs
pop
adc
fstl
adc
insl
push
mov
fdivrs
dec
fcmovne
sub
xchg
mov
mov
mov
insl
xor
xchg
ja
mov
push
inc
fstpl
cmpsb
test
push
out
dec
fcoms
sbb
std
push
sahf
and
adc
xor
add
and
outsb
or
dec
icebp
or
movsl
mov
mov
lods
imul
pop
rcl
xor
jg
cld
or
cs
or
sbb
popf
test
pop
and
sahf
mov
bound
cld
mov
xor
and
xor
and
loop
jp
daa
and
ja
stc
xor
cli
sub
insb
out
fistps
sbb
popa
add
call
xchg
out
xchg
orl
fcoml
dec
sub
xchg
shll
sbb
mov
dec
mov
mov
lods
aad
inc
push
dec
jnp
fwait
aam
out
adc
iret
stc
inc
daa
cwtl
leave
aas
call
or
pop
cmp
pop
mov
addr16
mov
les
mov
loope
and
sbb
and
stc
pop
pop
inc
cmp
push
sbb
mov
xor
int3
pop
in
jns
adc
xchg
shl
in
pop
inc
imul
push
les
mov
add
or
std
push
aam
fmuls
in
imul
cs
mov
mov
les
test
add
aas
adc
mov
scas
enter
into
mov
test
fsubl
mov
in
out
int
enter
js
jbe
cld
shrb
insb
int
xchg
imul
leave
gs
mov
push
xor
data16
in
out
fisubs
shlb
ret
dec
out
xchg
or
jb
or
and
stos
lea
or
jge
dec
cmp
push
out
push
movd
pusha
fistl
repz
jno
jne
insb
mov
cs
mov
mov
mov
mov
xchg
sub
mov
sbb
call
pop
into
adc
or
cs
out
je
sbb
leave
mov
test
mov
mov
out
mov
push
xchg
ficompl
in
jne
in
jno
adc
loope
xchg
and
mov
ljmp
xor
ljmp
arpl
icebp
scas
out
dec
fsubs
or
or
mov
movsb
ret
sti
mov
lods
dec
sub
xlat
push
push
ljmp
pop
in
ret
cltd
repnz
daa
mov
add
sub
scas
inc
sti
loop
ror
xchg
ljmp
and
mov
fcoms
rclb
shll
and
xchg
shlb
out
lock
sbb
push
adc
cmc
mov
push
dec
cwtl
pop
xor
jns
ss
push
and
dec
xor
data16
fcmovnbe
mov
xor
stc
inc
fcoml
dec
lods
pop
jbe
pusha
es
sbb
clc
mov
pushf
cmp
mov
xchg
mov
add
pop
jle
mov
xchg
jae
repz
xor
in
pop
imul
add
xchg
mov
fistps
addl
adc
shrb
pop
enter
pop
and
testl
outsl
lcall
xchg
sub
mov
je
lods
pop
inc
xor
lret
add
aaa
int3
and
xchg
iret
jg
mov
pop
push
ss
or
clc
adc
inc
les
pop
aad
ja
mov
or
lret
out
dec
lret
xor
inc
popl
js
ljmp
xlat
roll
nop
xchg
jne
std
sub
cmp
in
and
stc
sbb
in
js
je
sbb
jbe
adc
inc
loope
mov
mov
in
xchg
in
lods
das
in
fldt
cmp
aaa
rcrb
aaa
fistl
mov
outsl
dec
mov
and
je
pop
inc
pushf
dec
mov
mov
pushf
dec
lods
adc
into
enter
mov
jg
jle
mov
jns
xor
pop
push
mov
push
jecxz
push
in
cwtl
pushl
enter
popf
out
dec
mov
cmc
idivb
adc
lcall
dec
add
clc
inc
push
sbb
mov
mov
sub
ret
jle
jo
rcrb
mov
sub
ret
je
jg
cmp
inc
xchg
outsb
inc
outsb
jno
or
std
push
or
dec
push
adc
jecxz
sarl
loope
inc
and
popa
adc
push
sbb
das
enter
sarb
adc
mov
or
call
aam
push
mov
stos
jae
xchg
xchg
and
sub
ds
inc
sub
sub
testb
push
mov
jp
pop
lock
sbb
nop
arpl
jb
mov
add
clc
daa
xchg
ss
and
xor
lret
pop
in
xchg
into
test
adc
test
jmp
addl
push
imul
or
mov
out
mulb
dec
mov
shlb
pop
push
cs
mov
movsl
mov
icebp
sbb
pop
loop
xlat
mov
and
mov
rcr
rorb
dec
adc
pushf
test
push
cmp
out
outsl
fdivs
sbb
test
add
sbb
cli
inc
in
xchg
sbb
inc
xor
loop
xchg
cmpsb
cmp
in
pop
fsubrl
inc
icebp
stc
add
add
jo
pop
adc
dec
mov
insl
xchg
pop
shlb
xchg
and
in
push
jl
faddl
mov
mov
mov
push
cmpb
shl
call
inc
xor
adc
dec
jmp
xchg
js
mov
xlat
mov
mov
daa
or
and
in
xor
xor
test
js
je
std
lods
cmp
adc
cmp
out
jp
hlt
or
push
in
sbb
push
fmulp
lret
fldl
sbb
fisubl
jl
in
mov
notl
outsb
movsl
rcll
test
ds
cmpsb
adc
push
test
add
loopne
and
ljmp
dec
rep
jae
icebp
adc
and
mov
adc
jle
push
bound
xchg
sub
out
jp
sub
mov
ljmp
ret
in
aad
in
and
push
rorl
sub
cmp
ret
push
pop
cltd
mov
and
inc
test
jg
mov
enter
sub
xchg
je
aam
int3
ljmp
jge
sbb
out
ljmp
repnz
push
dec
testb
in
dec
les
loopne
inc
mov
xchg
sub
inc
imul
out
insl
pop
lock
std
stos
xchg
and
dec
push
mov
scas
or
and
sub
pop
insb
sbb
xlat
mov
sbb
leave
pop
push
aam
dec
xchg
and
jae
mov
jns
push
push
iret
in
jbe
mov
lret
mov
stc
ljmp
fnstsw
xchg
add
add
enter
aaa
add
imul
stc
and
dec
movsl
lea
jno
or
cli
mov
add
mov
xor
outsb
pushl
inc
xchg
sub
les
xor
inc
movsb
mov
sbb
loop
lcall
add
cmp
mov
addr16
daa
lods
aas
add
inc
popf
mov
stos
xchg
sub
xchg
push
push
push
pop
fwait
movsl
cwtl
fldcw
mov
lahf
xlat
dec
outsl
mov
mov
rorl
sub
adc
fdivl
clc
push
lret
mov
pop
jmp
movsl
sbb
shlb
add
lods
sarl
aad
sbb
inc
lahf
cs
std
or
mov
in
pop
loop
popf
sahf
cmp
into
mov
cmp
and
movsb
and
and
push
pop
das
mov
les
sub
shr
sbb
subl
gs
inc
pop
adc
int
nop
fs
rolb
subb
nop
dec
in
or
andb
cmpsl
mov
aas
dec
out
xchg
jecxz
inc
adc
icebp
push
out
jno
mov
fiaddl
sub
test
xchg
lock
das
sti
loop
enter
xchg
mov
mov
xchg
and
lcall
mov
mov
nop
cwtl
dec
add
sbb
mov
lahf
inc
and
add
sbb
loopne
lret
mov
rcrl
int3
pop
or
mov
pop
cmpsl
sub
leave
mov
adc
xchg
push
fisubl
jbe
arpl
adcb
rcl
cmpsl
xchg
outsb
sbb
xlat
adcl
pop
adc
data16
jp
mov
add
jle,pn
jmp
loop
jnp
aad
lock
inc
mov
push
pop
aad
inc
daa
cmc
pop
jle
stos
adc
push
negb
rcll
push
scas
scas
mov
mov
aaa
iret
mov
jge
or
cmp
outsl
lock
inc
xchg
sbb
push
xchg
fcmovne
nop
push
sbb
test
sbb
mov
cmp
imul
in
jbe
push
rcr
addl
push
adc
or
mov
sbb
outsb
push
push
jge
mov
lea
subl
adc
pop
fiadds
fstps
js
or
pop
jp
jno
cmpsb
out
pop
lret
cmp
adc
leave
ret
es
fwait
cld
rcll
sub
sarb
push
pusha
xchg
out
out
cmpb
jge
subl
xor
jl
push
cmc
add
insl
out
ret
cld
cld
pop
lods
mov
sbb
jg
stos
mov
popa
fucom
push
inc
adc
repz
fwait
lret
and
adc
mov
clc
push
adc
lret
clc
sbb
sbb
cmp
mov
jecxz
push
scas
arpl
sbb
xchg
cli
sbb
mov
and
shll
adc
pop
xchg
mov
pop
mov
dec
jo
jb
fnstsw
add
pop
and
adc
push
inc
cmp
mov
jno
mov
or
aad
and
mov
mov
jmp
and
pop
push
out
push
and
out
pop
lods
sbb
push
mov
fdivp
jg
fiaddl
lea
imul
outsl
xchg
test
mov
shrb
xchg
xchg
sub
nop
aas
fcmovnb
push
call
and
push
mov
loope
inc
xchg
inc
or
lss
add
loop
inc
test
lret
leave
xacquire
sahf
pop
fucomip
mov
int3
jnp
sub
mov
test
scas
hlt
and
push
pop
cmpb
jae
addr16
inc
mov
adc
jnp
decb
fistpl
mov
push
jo
popf
adc
dec
jae
lahf
int3
xchg
push
cmp
push
out
and
xlat
popf
imul
repz
dec
xor
cmp
in
sbb
stc
inc
mov
cs
adc
mov
push
sub
out
sbb
mov
jmp
push
pop
icebp
inc
shlb
cmpsb
and
lock
jecxz
or
add
jg
mov
push
cmpb
or
fs
pop
dec
jbe
mov
push
and
push
outsb
or
out
inc
jno
shlb
rcll
inc
mov
fucomip
sti
fstl
or
lea
lcall
push
cmpsb
mov
cmp
mov
je
cwtl
cmp
test
push
pop
gs
xlat
movsb
push
adc
sub
notb
ret
outsb
pushf
or
or
cmpsb
out
mov
jns
xchg
mov
int
and
cmc
xchg
mov
push
and
dec
icebp
es
dec
add
call
leave
push
and
push
shl
pop
cld
mov
addb
in
ret
xchg
aas
push
jbe
cltd
shll
pop
cld
jne
xchg
xchg
add
pop
loopne
lret
outsl
cmp
sbb
xor
jno
jae
inc
dec
xchg
mov
adc
jmp
frstor
filds
add
jecxz
nop
jmp
movsb
std
loopne
xor
popa
ss
fwait
cld
or
inc
mov
jmp
mov
lcall
or
push
mov
jmp
push
lods
add
xlat
leave
add
adc
insb
cmpsb
inc
sub
out
jns
mov
bound
fs
adc
xor
xchg
mov
dec
or
shrb
enter
pop
mov
jb
pop
adc
adc
and
pop
pusha
nop
loopne
and
mov
mov
lea
mov
push
imul
adc
stc
inc
jmp
pop
mov
out
xlat
jns
imul
fldenv
push
stc
inc
jmp
pop
mov
out
xlat
jns
imul
leave
xlat
stc
inc
jmp
pop
mov
out
xlat
jns
imul
fldenv
push
stc
inc
jmp
pop
mov
out
jge
push
xchg
xlat
mul
not
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
mov
js
add
enter
sub
sbb
or
pop
mov
test
cwtl
js
or
sbb
sub
cmp
call
adc
push
dec
mov
js
or
sbb
sub
cmp
enter
cwtl
push
imul
lret
cmp
push
fmuls
ret
push
mov
add
repz
loop
pushl
cmp
call
movsb
jmp
and
clc
sbb
rcl
ret
push
xlat
push
or
cwtl
mov
mov
xor
pop
lock
sub
jbe
int
clc
inc
jge
mov
push
dec
std
jg
stos
mov
fbld
out
jno
cmp
cmp
push
xlat
or
xchg
push
push
xor
int3
in
enter
jo
popa
aam
mov
leave
shlb
jae
fsubrs
sbb
pop
mov
and
and
xchg
and
popf
jnp
loopne
sbb
outsl
pop
mov
test
cwtl
js
or
sbb
sub
cmp
enter
call
js
push
sub
cwtl
mov
ja
inc
sahf
mov
sub
cmp
or
insl
xchg
push
movsb
insl
mov
lods
mov
dec
clc
insl
jg
std
imul
cld
pop
loopne
ljmp
sub
cmp
enter
call
js
push
dec
mov
js
or
sbb
sub
cmp
enter
call
js
push
dec
mov
pop
dec
fmuls
mov
or
mov
loop
add
pop
movsl
and
int3
movsb
lods
lea
cmp
dec
xchg
and
inc
mov
mov
test
jno
outsl
mov
insb
ds
or
cmpsb
and
lock
xchg
or
mov
clc
aam
push
or
pop
xchg
pop
dec
ror
inc
xor
dec
fs
test
imul
jb
mov
cmc
sub
jl
fldenv
mov
add
sbb
cmp
push
hlt
std
in
outsl
lea
out
imul
cmp
lahf
aaa
adc
xchg
cmc
stos
mov
fs
in
inc
imul
cmp
mov
xor
mov
xchg
in
flds
fiadds
sbb
and
xchg
push
and
add
clc
movsl
dec
cld
je
imul
repnz
fucomip
xchg
sbbl
cmp
bound
dec
or
fadds
loop
lods
xor
subl
out
ljmp
lret
cmc
cmp
cmpsl
jb
push
fwait
pop
fwait
jecxz
adc
aam
xchg
lds
xor
push
cmpsb
sbb
xchg
jge
rorl
xchg
dec
jb
aad
int
das
mov
jo
jmp
mov
or
mov
jl
popf
mov
test
xor
lea
mov
sbbb
sbb
aas
je
stc
lret
dec
ss
mov
js
adc
push
ja
std
and
fwait
lods
cmp
aas
mov
in
pop
es
cmp
test
ljmp
lahf
cmpsb
cmc
outsb
dec
outsb
ret
daa
or
xchg
leave
push
filds
add
sub
test
push
lret
js
adc
in
outsb
mov
rorl
jno
ljmp
stos
push
push
fcoml
lock
pop
cld
sub
icebp
std
mov
stos
cli
mov
mov
jno
cli
xchg
imul
shrb
add
push
out
dec
nop
sub
call
dec
push
lcallw
cs
sbb
fstl
jb
push
gs
push
bound
adc
dec
mov
mov
mov
dec
sub
add
jecxz
subl
in
enter
pop
mov
jno
cwtl
mov
adc
movl
lret
das
insb
pop
xchg
mov
mov
stos
lahf
add
mov
ret
cmp
lods
pushl
xlat
sbb
push
dec
mov
dec
pushf
pop
lock
call
popl
hlt
jl
and
jl
push
mov
pusha
cmpsl
call
ret
pop
js
mov
adc
cmp
adc
and
gs
daa
aam
dec
xor
mov
add
fbstp
mov
push
adc
jne
jge
cli
xorl
clc
pop
dec
gs
int3
sbb
or
mov
jle
test
push
adcl
sub
ja
jb
mov
pop
icebp
sub
xlat
xlat
shlb
mov
or
add
inc
iret
loope
stc
lret
je
pop
lcall
jne
mov
lods
loope
jae
incl
and
daa
ret
sahf
mov
cld
xchg
xchg
cwtl
and
je
arpl
xlat
clc
mov
jmp
sub
jb
pop
in
and
xchg
dec
gs
inc
aaa
adc
mov
daa
adc
inc
xor
mov
test
xchg
daa
xchg
mov
fcomps
lcall
and
fs
mov
pop
jnp
es
iret
lds
test
shlb
cmp
lret
inc
nop
inc
bound
pop
test
and
test
repz
xlat
scas
mov
roll
filds
cwtl
loopne
insb
nop
sub
mov
or
sbb
loope
mov
mov
xor
cmpl
mov
call
pop
mov
or
pop
adc
pop
lret
mov
in
inc
xchg
adcl
movsl
pop
mov
push
clc
ljmp
dec
movsb
cmp
sahf
cmp
and
adc
sbb
fbld
in
daa
scas
scas
push
mov
jge
enter
test
pop
cmp
cli
or
fstpt
mov
mov
inc
inc
outsl
dec
pop
jp
mov
outsl
xchg
xor
lock
cmp
add
lods
fdivl
testb
movsb
mov
lahf
xchg
xchg
cmpsl
push
sti
jle
pop
sub
ret
insb
sarl
sbb
dec
scas
je
add
mov
js
ljmp
sub
jmp
movsl
in
mov
stos
cli
cmpsb
xor
sub
mov
cmpl
pop
nop
and
mov
mov
xchg
xchg
sbb
or
xchg
mov
out
sub
test
mov
and
fucom
or
mov
mov
inc
icebp
adc
lahf
push
out
mov
call
aad
jmp
ss
push
shlb
addl
popa
xchg
xor
push
rorb
sti
push
add
mov
int
push
lret
mov
fdivr
test
adc
mov
lret
cld
mov
jmp
enter
sahf
adc
sti
rcll
cmpsb
inc
mov
fmull
repz
enter
xlat
and
lret
sbb
mov
pop
testl
push
cmpsl
fldcw
sub
jle
ss
sbb
outsl
in
movsb
or
out
stos
jecxz
or
push
repz
pop
lock
gs
fwait
cmpsl
into
sub
scas
mov
mov
dec
pushf
fsubrp
neg
mov
xor
pop
pop
lahf
pop
imul
inc
sbb
imul
clc
mov
pop
outsb
les
xor
hlt
stos
ljmp
jp
adc
mov
pop
mov
xchg
xchg
mov
dec
mov
lds
mov
pop
xchg
xchg
divl
jmp
xor
mov
out
shll
lret
loope
or
xchg
xor
sub
cmp
inc
dec
ja
sahf
mov
lds
mov
adc
sub
data16
in
dec
xchg
mov
loope
repz
mov
mov
or
jno
mov
je
clc
fcompl
mov
dec
mov
std
call
not
mov
or
popf
daa
mov
add
sub
mov
adc
imul
rolb
gs
js
pop
scas
adc
cmpsl
xor
les
jb
shl
insl
ljmp
test
cmp
shlb
jecxz
jbe
stos
mov
xor
push
and
in
mov
add
dec
loope
fdivrl
mov
jnp
mov
std
push
xor
and
dec
mov
mov
jp
or
mov
popa
xlat
je
dec
mov
sti
push
imul
inc
mov
xchg
jb
or
cld
fnstenv
cmp
insl
dec
or
fistps
fs
cmpsl
scas
imul
adc
dec
xor
imul
sahf
xchg
inc
bound
jns
xor
push
inc
popa
sbb
jne
xchg
mov
pop
outsl
ljmp
imul
sub
pop
rcl
or
ja
cmc
mov
add
jae
mov
inc
xchg
ret
imul
loopne
xor
lds
push
fcmovbe
mov
cmc
pop
test
add
add
pop
mov
and
test
outsb
jo
loopne
jo
pop
sbbl
xor
cld
cltd
pushf
pop
daa
push
sub
and
jo
fisubs
mov
ret
scas
and
in
mov
adc
lcall
push
stos
lret
mov
sub
mov
pop
add
mov
dec
popa
inc
outsb
cmpsl
adc
jns
in
lret
frstor
fdivs
into
adc
xor
mov
sbb
lcall
sub
cmp
sub
repz
lea
jno
add
int
push
push
dec
loop
call
push
add
mov
xor
inc
sbb
cmp
divl
sarb
sbb
sub
ds
call
popf
sbb
or
mov
xchg
mov
or
lods
rcrl
ret
xchg
les
sbbl
loop
sub
mov
cmpsb
push
jl
shlb
addr16
fisttpll
mov
outsb
sub
test
enter
adc
outsb
sahf
xlat
mov
les
push
dec
ljmp
add
fsubp
push
cli
pop
js
sub
or
jp
mov
imul
dec
addr16
pop
test
add
push
cmp
test
dec
xchg
in
lds
shl
add
push
sub
xchg
add
out
lret
xor
in
pop
pop
pop
gs
push
fstl
lock
mov
dec
add
scas
aam
inc
ja
jbe
sahf
adc
add
inc
adc
outsb
outsl
adcb
or
mov
jnp
xchg
adc
mov
arpl
mov
sahf
aas
mov
rcll
mov
xchg
aam
fimuls
cmpsl
lret
sbb
in
lods
jne
mov
and
imul
outsb
fcompl
xor
std
sti
sub
add
inc
push
clc
loope
and
mov
nop
push
leave
and
movsb
xor
mov
jecxz
shll
iret
cltd
xchg
or
mov
cmp
imul
in
or
inc
ljmp
push
leave
lret
and
inc
imul
fwait
test
mov
mov
fnstcw
jge
xor
mov
xor
mov
iret
ja
jg
mov
addr16
repnz
cmc
pushf
push
sbb
dec
ds
and
or
call
pop
push
aaa
popl
jno
cmp
stc
sub
push
int
mov
mov
jg
lods
mov
in
xchg
cwtl
jnp
fs
in
cs
or
leave
jns
push
push
xor
iret
into
scas
into
imul
iret
add
mov
shlb
ja
out
cli
and
adc
out
and
and
xor
in
mov
mov
movsb
pop
into
push
mov
in
int
mov
insl
push
icebp
sbb
ret
in
push
xor
iret
jo
push
dec
incl
xor
int
sbb
icebp
xor
jno
mov
xorb
push
bound
cs
dec
xor
xchg
mov
sti
sub
cld
in
shrb
std
lods
sbb
sub
xlat
ds
in
sub
xchg
leave
cmc
add
lahf
ja
sub
push
jmp
jg
mov
or
xchg
out
push
test
cwtl
mov
test
gs
adc
scas
sti
ljmp
cmpsb
push
xor
jp
cltd
xchg
subl
fwait
xchg
js
movsb
ss
mov
mov
je
mov
popf
sub
cmpsb
shll
imul
push
data16
nop
xchg
mov
lods
cltd
add
sbb
mov
or
movsl
pop
adcl
call
cmp
mov
inc
pop
jns
stos
dec
addr16
dec
mov
jle
pop
push
adc
and
push
cltd
xor
xor
pop
mov
subb
popf
push
adc
pop
icebp
ret
out
adc
pop
sub
les
movl
clc
mov
dec
aam
sbb
adc
divb
repnz
jb
inc
inc
mov
xor
pop
push
push
lahf
mov
lret
les
cmpsl
movl
inc
xor
cmpsb
push
xor
xor
pusha
mov
xchg
mov
mov
in
jmp
sbb
dec
pop
mov
movsl
jb
add
adc
jb
hlt
pop
jle
push
xor
arpl
push
dec
jb
test
ss
lea
pop
pusha
jo
dec
jne
jge
scas
cmp
mov
push
int3
adc
inc
rcll
push
popf
scas
movsl
stc
andl
repz
fnstcw
push
sarb
mov
rolb
ss
outsb
jb
icebp
arpl
or
or
cli
lods
cmp
cwtl
jb
jg
mov
push
or
adc
adc
sti
cmp
out
fsubs
mov
xchg
push
mov
test
test
push
and
jbe
out
mov
into
sbb
xor
outsl
stos
div
aas
push
mov
xchg
fucomip
sub
cmp
ret
aam
xor
pop
in
push
push
push
cmpsb
sub
jg
mov
inc
push
rcr
out
call
push
rcrb
cwtl
xchg
fisttps
inc
jae
adc
adc
push
push
jbe
fistl
inc
ds
pop
cmpsb
xchg
xchg
sub
cmp
addr16
aad
ret
das
movsl
jno
sub
sarl
imul
xor
inc
stos
jmp
sbb
pop
lret
and
nop
push
ret
cmp
dec
xor
stc
jl
jnp
movsb
mov
sub
lcall
push
xor
imul
push
fmul
ret
dec
push
inc
inc
xchg
add
inc
or
dec
pop
xor
fs
xor
xchg
xchg
mov
sbb
xor
lea
mov
jnp
repz
nop
xlat
aaa
out
inc
rol
xchg
ret
push
xor
xor
faddl
adc
icebp
out
sbbb
leave
and
push
jb
jecxz
aad
cmp
xor
cs
fcomps
in
add
sub
mov
add
xchg
cmc
mov
loope
and
nop
ds
int3
jge
int3
sbb
sub
test
adc
cli
pusha
popf
in
cmp
push
sbb
into
fildl
out
test
sub
lods
sub
and
or
ljmp
stos
xor
or
xor
cmc
jne
ja
and
fistps
push
je
and
jno
jmp
jp
sbb
mov
movsl
arpl
add
test
dec
mov
ljmp
pop
or
mov
push
mov
bswap
insl
cmp
inc
jb
inc
out
xchg
pushf
mov
jecxz
shll
pop
test
dec
pop
js
pop
fisttps
push
add
cmpsl
cmp
loope
hlt
jmp
lock
and
pop
mul
xchg
jnp
add
pop
movsb
aam
mov
scas
xor
int
pusha
lds
mov
xchg
adcl
in
jge
icebp
dec
xchg
loopne
or
sub
daa
das
push
mov
js
cltd
stc
fmul
fildl
push
mul
sub
ror
mov
in
out
cmp
lock
add
lea
bnd
or
push
aas
lock
loope
sub
aas
das
sbb
push
jae
mov
inc
mov
add
add
pop
xchg
addr16
sbbb
jle
mov
sbb
in
xchg
push
dec
xor
cmp
test
mov
stc
fisttps
mov
sbb
arpl
push
aaa
sti
xchg
add
in
imul
dec
xchg
fidivrl
scas
add
inc
pop
in
push
sub
xchg
mov
shlb
lret
xchg
pusha
jne
fsubr
in
inc
xor
xor
push
xchg
out
aas
and
call
jns
test
add
rcr
push
pusha
es
mov
jo
pop
add
jecxz
out
dec
lock
sub
xor
data16
dec
inc
jecxz
xchg
loop
mov
jmp
lret
sbb
ljmp
cld
push
nop
nop
and
pushf
push
jbe
sub
iret
dec
popf
push
mov
test
jbe
pop
pop
repnz
sahf
loope
popf
aad
aad
stos
movsb
rcrl
out
nop
les
lcall
inc
pop
mov
inc
daa
pop
loope
xchg
lret
sub
inc
sbb
mov
dec
jbe
adcb
inc
imul
pop
dec
out
outsl
add
xor
sbb
dec
lock
jo
cltd
roll
rcrb
cmp
inc
lcall
add
add
xor
xchg
scas
test
sti
mov
ds
shrl
push
ja
ljmp
jg
add
mov
lods
cmpsl
addr16
cmp
cmpsb
lds
inc
mov
scas
jg
jmp
orb
push
adc
add
mov
ljmp
cmovno
imul
mov
hlt
stos
pop
sub
mov
xlat
xor
pop
jo
jmp
sub
xor
loopne
lods
dec
jbe
pop
lods
sbb
jb
outsb
pop
sahf
add
cmpb
cmp
sub
dec
imul
xor
mov
mov
xchg
data16
test
in
popa
arpl
push
enter
ss
push
lret
nop
push
or
lret
dec
xchg
fbld
out
ja
cltd
insl
movsb
pop
cmc
lahf
lods
ret
ret
stos
and
and
jns
push
sarl
jge
into
mov
sahf
adc
pop
out
adc
inc
cwtl
xchg
inc
repnz
leave
scas
jno
leave
stos
sub
lahf
pop
mov
movsl
xor
andb
insb
leave
xchg
add
add
ljmp
xchg
pop
enter
cmp
cs
test
push
mov
sbb
stos
pop
cmpsb
pop
pop
push
sbb
or
mov
outsb
push
repnz
sti
cmpsl
fstpt
pop
aad
sbb
pushf
test
adcl
mov
decb
mov
or
dec
push
fistpl
or
sbb
xchg
movb
loopne
mov
push
lcall
and
repnz
pop
lahf
sub
icebp
pop
and
lds
icebp
popa
xchg
pop
pop
xchg
dec
fidivl
mov
pop
fcoms
shlb
jb
jp
aad
push
hlt
sbb
mov
cmp
jns
fdiv
jne
sub
sub
cwtl
in
dec
sub
xlat
xchg
sub
icebp
cmc
mov
addb
loopne
cmpsb
nopl
sbb
lahf
xor
xor
popf
sahf
shlb
aad
pushl
stc
in
xchg
sub
addr16
add
andb
test
xchg
push
xchg
aaa
aaa
cmc
xor
mov
mov
mov
and
or
je
addr16
out
cwtl
fsubrl
xor
jmp
int
lret
in
lock
pop
xchg
mov
add
movl
cmp
cmpsl
mov
mov
into
test
aas
cmp
imul
fwait
mov
add
mov
inc
push
mov
xor
mov
push
movsb
cld
in
test
lret
xor
mov
insb
ficoml
pushf
insl
repnz
push
jge
fcoms
sti
aaa
add
push
mov
or
jp
sub
in
sahf
test
inc
in
das
pop
pusha
or
js
std
cmp
fldenv
leave
test
test
enter
iret
dec
hlt
cmpsl
mov
jg
xor
xchg
mov
cs
pop
jge
imul
pop
ficoml
push
lods
pop
ret
mov
mov
sbb
iret
push
add
imul
test
and
and
rorl
lock
int
loopne
stos
lea
out
repz
dec
ds
filds
fidivs
jp
mov
fstp
sbb
pushf
in
sbb
test
loopne
pop
cmp
or
scas
jmp
in
movsb
push
inc
xor
mov
xor
push
jecxz
push
mov
mov
xchg
out
xorb
sbb
lock
mov
jl
xor
popa
enter
dec
xchg
pop
popa
shr
pop
les
icebp
sub
mov
adc
push
fdiv
arpl
push
dec
or
xchg
mov
insl
into
ss
dec
push
inc
cmp
push
sti
dec
les
mov
inc
aam
xchg
sahf
mul
push
data16
addr16
pop
mov
jmp
aam
jb
call
dec
jg
adc
jnp
rcll
test
sbb
scas
dec
pushf
rcrl
jns
xchg
xor
clc
lods
jns
push
sub
pop
xor
je
xorl
ficompl
xchg
insb
cld
inc
and
fistl
jle
mov
adc
cs
pop
shrl
push
sbb
daa
arpl
mov
dec
ds
mov
inc
sahf
dec
add
lahf
inc
sub
cld
sbb
enter
xchg
cs
mov
or
or
add
clc
and
sub
mov
popa
nop
sub
inc
mov
jmp
or
out
push
adc
cld
dec
cmp
inc
pop
jns
mov
bound
push
jae
push
dec
aaa
mov
mov
mov
rorb
jg
push
mov
mov
test
dec
pushf
cmp
cli
pop
gs
rol
inc
test
outsl
mov
add
xor
popf
add
inc
sub
cmp
push
sbb
or
sbb
sub
cmp
enter
call
js
push
dec
mov
js
or
sbb
sub
cmp
enter
call
js
push
dec
mov
js
or
sbb
sub
cmp
leave
cmp
sub
sbb
or
pop
mov
test
cwtl
js
or
sbb
test
mov
addb
jg
lock
ret
in
xchg
bound
push
cmc
inc
loope
icebp
ret
and
orl
mov
movsl
jae
bound
xor
and
shlb
loop
xchg
pop
andb
mov
arpl
adc
add
shlb
xchg
es
xchg
daa
int
and
inc
in
xor
cltd
cli
and
push
adc
mov
mov
sahf
lods
push
imul
mov
popw
loope
jp
loopne
outsb
mov
lret
stos
ljmp
mov
fldl
jge
add
sbb
sahf
shlb
xor
sub
inc
cltd
xor
inc
movsl
push
xchg
mov
rclb
add
repz
mov
arpl
jp
or
xor
cmp
cmc
loop
rcrl
jo
push
pop
enter
pop
clc
loopne
push
repnz
in
sub
ret
outsl
outsl
out
andb
mov
inc
test
bound
xor
and
xor
loop
xchg
dec
orb
mov
lret
sub
push
push
mov
inc
cmpb
xchg
xor
or
and
sub
repz
push
out
jmp
xor
push
mov
xor
loop
mov
inc
adc
inc
jmp
xor
and
shlb
loop
xchg
jne
gs
mov
movsl
jb
bound
xor
and
shlb
loop
xchg
jne
gs
mov
repz
call
or
inc
jl
cli
lds
pop
jno
mov
fisubrs
lock
mov
mov
repz
ja
xchg
sbb
mov
js
mov
repnz
sbb
pusha
xchg
out
adc
in
out
test
mov
cmpsl
arpl
movsb
hlt
pop
pop
mov
xchg
mov
fs
dec
nop
int3
out
and
xchg
iret
fcomps
push
cmp
neg
divb
addr16
shrb
int3
sub
inc
mov
inc
sbb
fs
sub
inc
jno
fs
incb
or
repz
cmpsl
pop
repnz
loopne
inc
pop
jg
lret
xchg
lods
pop
lea
cld
dec
sbb
fstpt
stos
inc
sbb
mov
xchg
test
insl
cmp
jnp
mov
mov
jle
adc
inc
sahf
and
cmp
jo
mov
out
mov
lahf
fcmovb
mov
sbb
in
and
das
fists
add
inc
scas
cmp
and
lea
sahf
mov
aam
gs
jno
stos
std
push
mov
je
add
add
std
outsl
cmp
cmp
test
in
or
xchg
aas
out
jne
lret
outsl
and
xchg
fidivrs
lock
repz
pop
xchg
jno
pop
pop
aas
lods
sub
das
dec
call
rdpmc
loopne
data16
in
sti
xor
scas
mov
push
mov
aas
aam
adcl
lahf
dec
int3
mov
or
out
jle
out
mov
call
and
xor
and
mov
out
and
push
or
aas
or
scas
push
add
ret
repz
cmp
sub
lcall
lods
lods
dec
aam
mov
sbb
int
mov
cmp
iret
xchg
jg
dec
mov
xor
mov
and
test
orl
mov
test
and
or
jge
cmp
adc
cltd
dec
dec
dec
sbb
repnz
sbb
call
sub
xchg
ret
inc
out
sysret
add
push
pop
addr16
xor
test
mov
fnsave
push
mov
aaa
push
shl
mov
sbb
lcall
outsb
adc
xchg
cmp
pop
inc
out
jbe
and
movsl
out
int
mov
subb
push
call
addr16
mov
je
pop
ds
scas
inc
dec
popa
jo
fs
mov
sbb
fcoml
or
cmp
subb
jmp
pop
bound
mov
cmpsb
jmp
xor
aad
dec
inc
dec
mov
shrl
push
cld
inc
es
push
rcrb
lret
xor
dec
push
lret
sti
xor
jnp
popa
popf
push
xor
loope
xor
xchg
cmpsb
xor
divl
adc
cld
xor
inc
push
out
das
push
jl
dec
out
and
aaa
mov
jle
or
pusha
xor
dec
ret
bound
add
jle
inc
push
inc
and
xor
xchg
push
sbb
xchg
xchg
into
pop
pop
dec
hlt
jbe
cmp
jge
out
bound
decb
adc
imul
sub
cmp
in
subb
sar
cs
push
push
adc
push
mov
std
addb
mov
dec
push
xchg
xor
bound
or
ret
bndstx
sbb
ss
jns
dec
les
inc
jns
std
in
and
scas
inc
or
sub
sbb
dec
fldl
cltd
mov
inc
push
add
push
xchg
ljmp
pop
cmp
jo
cld
ror
stos
into
movsl
addr16
pop
pushf
cmp
cmc
sbb
rcrb
sbb
ret
rcrl
pop
subl
cmp
leave
popa
imul
jb
gs
jp
popl
xchg
or
dec
stos
das
push
inc
sub
imul
bound
or
mov
mov
sbb
inc
jo
stc
jg
in
sbb
ljmp
inc
mov
sahf
push
inc
lock
or
push
ficoms
pop
push
push
les
mov
and
mov
gs
loopne
cmp
mov
pop
or
insb
mov
lock
cmp
mov
jbe
xchg
nop
dec
pop
arpl
jl
and
das
and
xor
mov
jp
pop
inc
int3
into
cs
dec
cmp
xor
pop
cmp
cld
jmp
add
out
mov
xor
mov
icebp
xlat
out
pop
test
jmp
movsb
dec
pop
mov
imul
xlat
repnz
sti
cmp
sub
jae
sbb
cltd
cmpsb
je
cli
push
lods
jno
lods
adc
cld
in
xchg
push
clc
cmp
jbe
push
xchg
cmpsl
stc
out
jbe
das
shrl
mov
cmc
adc
int3
or
add
inc
shrb
xor
leave
fimull
sub
pop
pushf
loop
cmp
dec
inc
jns
outsl
mov
jl
jae
cli
stc
imul
adc
cmpb
cmpsl
pop
lods
fimull
shlb
lahf
stos
xchg
movsl
stc
pop
out
repnz
mov
popf
loope
mov
pop
mov
and
leave
scas
xchg
movsb
adc
pusha
mov
sub
data16
cmc
cmc
icebp
adc
inc
xchg
push
pushf
mov
lock
loopne
mov
sarb
fsubl
jl
or
mov
cmpsl
std
jecxz
divl
loope
fdivr
fmull
inc
dec
push
jge
scas
loop
fdivs
mov
pop
sbb
outsb
cmp
and
clc
rorl
or
sti
or
jo
shrb
cmp
leave
mov
xor
adc
cmpl
push
fimuls
aam
fbld
test
int3
jo
movsl
xchg
out
lods
pop
pop
lea
pop
cltd
sahf
adc
lock
in
xor
and
incb
pop
dec
and
das
sub
sbb
xchg
or
int
push
mov
in
pushf
mov
cmp
insb
lcall
mov
popa
data16
aaa
fs
push
jb
mov
lret
scas
cmpsl
arpl
cmp
xor
sbb
subl
jge
testl
or
cli
mov
mov
xor
xor
add
das
lods
lds
and
ret
sahf
sub
outsb
sbb
adc
add
testb
fs
inc
push
sbb
jle
cmp
cmp
sar
xchg
movsb
cli
dec
mov
cli
scas
pop
jb
sbb
movsl
xlat
dec
iret
sub
pop
add
fmull
out
inc
fcom
mov
es
push
dec
adc
and
aam
lock
xlat
cmp
insb
loopne
int
ljmp
jbe
mov
int
push
pop
jmp
adc
in
dec
add
sub
insb
fs
push
jge
add
ret
fwait
xchg
adc
add
aam
test
loope
mov
test
mov
pop
loope
lahf
fwait
adc
out
xor
repnz
lods
sub
dec
and
sub
aad
insl
mov
sub
or
arpl
add
iret
inc
jmp
ja
clc
jno
std
push
loope
jg
loopne
mov
fcoml
int3
out
add
xchg
fwait
nop
ret
mov
in
inc
adc
sbb
in
je
mov
aad
sub
sbbl
shll
sbb
cmpsl
jnp
pop
std
xor
xchg
pop
cmp
shlb
fildl
xor
xchg
mov
inc
test
pop
rorl
dec
out
dec
jno
aaa
nop
xor
inc
sub
jl
paddw
push
xor
inc
inc
cwtl
rcr
and
inc
dec
into
sbb
push
fiaddl
dec
bound
cwtl
mov
xchg
aas
push
sti
add
and
xchg
mov
jae
into
sub
jmp
cmp
push
inc
fidivrl
imul
cmp
or
push
cltd
dec
mov
icebp
div
scas
in
xlat
xor
mov
into
or
mov
fs
mov
pop
push
xchg
popf
pop
popl
lds
insl
push
pushf
lods
mov
adc
xor
pusha
sub
stos
push
lods
mov
aad
pop
test
les
lods
pop
fcompl
sub
sbb
inc
push
sub
shl
cmpsl
stc
cltd
loopne
pop
jl
xchg
lea
pop
fsubrp
xchg
inc
jecxz
call
fisttps
inc
jge
test
je
sub
and
inc
adc
and
in
add
push
data16
daa
xchg
push
ret
and
cld
out
jns
pop
das
aam
cmp
sbb
in
leave
or
adc
test
jnp
fsub
jecxz
mov
inc
ja
ret
xor
pop
jo
sti
cwtl
inc
shl
push
add
xor
enter
cmpsl
je
addr16
stos
mov
shll
mov
mov
mov
add
fdivl
inc
push
jns
ja
enter
sbb
jmp
dec
mov
lds
push
mov
mov
rorb
mov
and
sub
loop
pop
imul
test
aad
ret
add
xor
jmp
sbb
std
insl
mov
push
mov
xlat
rorb
pop
mov
addl
sub
push
js
insb
adc
aaa
cmp
mov
arpl
scas
movsl
repz
and
mov
js
stos
outsl
out
jne
mov
sti
push
dec
mov
jmp
fwait
sub
xor
or
sub
dec
add
adc
inc
jno
or
dec
inc
and
dec
mov
xor
mov
or
sbb
fdivrl
cmp
lods
xor
jbe
cmp
fcmovne
int3
xchg
pop
inc
fsubrs
jnp
adc
xor
fcom
xor
testl
mov
xor
repnz
mov
divps
jge
lret
sbb
insb
jge
cmpb
mov
push
cmp
in
lcall
das
test
inc
sub
and
scas
ret
dec
stc
mov
mov
arpl
cmc
loope
into
mov
ja
xchg
arpl
xchg
andb
mov
bound
dec
xor
pushw
pushf
les
enter
xchg
sbb
sbb
mov
xchg
mov
sub
dec
lock
add
imul
ror
ss
xor
pavgb
xchg
mov
add
lcall
fsubs
into
sub
enter
movsl
cmpl
les
insb
sbb
xchg
repnz
and
xchg
jno
jbe
outsb
pop
cmp
push
repz
xchg
ljmp
inc
mov
lahf
ds
fstl
lahf
int
int
insl
mov
lods
in
js
xor
adc
jo
or
or
or
pop
add
out
je
mov
jno
imul
out
dec
inc
adc
clc
add
imul
imul
jae
inc
leave
imul
push
ljmp
fnsave
daa
xchg
fildll
int3
sbb
test
cmpsl
inc
cmp
test
outsb
adc
stc
dec
ret
cmp
xor
adcb
jbe
and
jno
and
mov
xor
leave
push
lcall
and
insl
or
movsl
sub
leave
aas
fwait
adc
fimull
mov
loopne
ljmp
dec
add
xchg
rcr
mov
dec
fidivrl
dec
cmp
mov
xchg
pop
push
mov
rol
xchg
xor
pop
in
or
mov
stc
cmc
rcrb
mov
fists
mov
rorb
jge
push
mov
sbb
scas
out
mov
jnp
loope
push
pop
inc
sbb
push
out
sub
and
xor
cmp
mov
xchg
sbb
js
xor
enter
cmpsl
es
out
into
data16
fcompl
or
loopne
jmp
and
pop
out
orl
int3
insl
xchg
decb
inc
jp
xor
jb
jg
pop
dec
outsl
cmpsb
jbe
std
fmull
aad
test
mov
mov
ss
pop
mov
ds
cmp
das
or
sub
stc
or
jno
pop
or
cmp
sbb
rolb
cli
dec
test
mov
shlb
divps
xchg
mov
test
jns
lds
sbb
loopne
je
mov
gs
pop
jns
xchg
test
std
test
jae
xor
dec
js
mov
or
stos
sub
lret
jecxz
imull
add
js
inc
testb
cld
dec
aas
test
cmp
pop
and
push
fisttpll
fmul
jnp
adcb
cmpsl
xchg
das
push
stos
rcrb
std
in
mov
mull
xor
frstor
aaa
pop
imul
mov
add
pcmpeqw
inc
jmp
iret
outsl
jne
sub
xchg
shlb
adc
mov
iret
mov
lea
jno
aam
add
aas
and
pop
and
stos
mov
sti
iret
push
mov
in
aad
or
ja
lret
mov
mov
cmp
ja
aad
or
xorb
lahf
inc
loopne
pushf
sbb
xor
mov
cld
enter
negl
mov
repnz
xor
or
dec
clc
adcl
xchg
pop
aas
outsl
jno
test
xchg
mov
in
bound
insb
jge
pop
cltd
out
xchg
in
inc
mov
and
xchg
in
adc
shll
inc
xchg
es
jns
push
mov
cmc
test
shlb
add
push
fimull
xchg
mov
xchg
pop
fst
xchg
xchg
xlat
dec
mov
in
mov
fisttps
cmc
out
sub
mov
clc
out
inc
not
cmp
mov
add
outsl
aas
mov
push
fimuls
loope
sbb
lock
mov
mov
push
clc
shrb
push
ret
roll
or
push
lods
inc
cltd
xlat
add
and
adc
jno
movsb
cld
ljmp
push
xchg
dec
xor
lahf
push
inc
mov
cmp
mov
jmp
inc
or
adc
in
mov
mov
mov
cmp
push
push
inc
out
lret
imul
daa
adc
mov
popa
test
jo
cmp
cwtl
mov
jns
mov
in
shlb
outsb
stc
or
xor
inc
ret
push
push
subb
jl
sub
sbb
push
adc
rclb
mov
scas
dec
inc
mov
mov
cmpsl
orb
cmp
popa
inc
lea
das
pop
cmc
mov
xchg
push
arpl
aas
or
mov
andl
adc
lock
in
cmp
lods
mov
sub
loop
dec
fildl
outsl
cmp
outsb
inc
push
jbe
push
pusha
cmpl
lret
popa
cld
sbb
mov
je
inc
into
fldenv
pop
add
mov
stos
lcall
lret
mov
xchg
hlt
dec
push
cmp
sbb
add
mov
cmpsl
scas
enter
push
mov
dec
lret
add
lds
cmpsl
test
xor
xor
and
lret
daa
mov
adc
dec
xchg
cld
lock
xchg
hlt
push
ljmp
in
movsb
dec
push
xlat
push
int
cs
nop
ds
pop
xlat
sbb
mov
jb
pop
iret
push
jge
xor
fnsave
push
xchg
mov
in
fsubrp
ljmp
push
xchg
jecxz
add
lods
push
in
xor
int3
mov
mov
shl
ds
scas
xor
and
xchg
idivl
xchg
push
push
rclb
xchg
jge
mov
fcoml
jo
lret
and
mov
icebp
repz
aad
sahf
cmp
or
pushf
ficomps
inc
hlt
xchg
ss
xchg
test
testb
out
in
dec
fwait
and
jecxz
adc
and
pop
mov
es
mov
adc
test
pop
inc
pop
mov
mov
decl
push
xchg
xchg
push
mov
nop
xlat
jnp
dec
hlt
andl
cmp
push
in
popf
aaa
cmp
repnz
sbb
add
data16
das
orb
lock
sbb
fwait
subb
sbb
js
mov
push
inc
popa
pop
push
cmp
dec
or
andl
pop
or
push
sbb
ret
aad
sbb
push
mov
int
mov
sub
repnz
repz
xor
lcall
bound
test
inc
mov
lcall
faddp
xor
int
movl
jbe
mov
jo
push
inc
je
pop
push
mov
sbb
sub
inc
rol
shll
adc
repz
out
fcoml
xchg
mov
dec
cmp
add
or
js
repnz
out
sub
and
addb
imul
fnstenv
mov
loopne
pop
xchg
mov
push
pop
adc
xchg
mov
push
jg
sub
adc
cli
fs
sbb
pop
insb
jle
mov
rolb
inc
pop
shrl
rorb
or
xchg
push
sub
pop
adc
mov
jae
dec
add
rorb
mov
inc
sub
xchg
xchg
jmp
cmp
cs
add
shll
ss
mov
cmpsl
orl
mov
imul
push
dec
jns
push
loop
sbb
xor
ret
insb
loop
lock
push
inc
sbbb
pop
imul
push
inc
dec
fprem1
outsb
add
xlat
out
dec
pop
sbb
imul
mov
jge
push
xlat
rorl
lret
dec
mov
je
mov
inc
mov
push
divb
test
mov
in
idivl
fnstsw
jmp
pop
test
or
dec
mov
mov
jg
cmc
mov
adcb
xor
xchg
add
in
cli
lahf
lret
and
ss
ret
and
call
lea
pop
jbe
sbb
mov
cmpl
call
ss
lods
repnz
push
pop
or
add
lcall
rcrb
scas
lcall
inc
lods
mov
and
push
and
out
ja
mov
incb
sub
push
ds
push
bound
cmp
aaa
repnz
scas
lret
in
sbb
add
jbe
push
aam
rcll
int3
pop
xchg
in
ret
data16
cld
cltd
mov
test
xchg
add
sti
add
pop
adc
repnz
test
out
shrb
push
xchg
mov
pop
test
mov
mov
gs
fnstcw
jp
push
cmp
cmp
jle
xchg
mov
fstps
and
mov
lcall
or
frstor
fcoml
ret
hlt
xchg
add
out
scas
add
mov
cs
xchg
add
sbb
dec
js
xchg
pusha
dec
ja
add
adcl
adc
cld
mov
sub
jns
mov
call
in
daa
lods
imul
aas
pop
shll
cmp
int
mov
fsub
pop
popf
cmp
sub
fwait
dec
sbb
or
int
imul
test
mov
scas
or
insb
xchg
jle
mov
nop
push
in
leave
outsl
outsl
enter
scas
push
or
testb
adc
ror
add
xchg
out
mov
xchg
xor
mov
lret
fmull
adc
fdiv
nop
sub
imul
in
repz
iret
js
or
xchg
fidivs
add
test
jae
lret
dec
mov
dec
psubusw
or
repz
add
mov
push
test
and
xchg
jo
adc
lcall
xchg
mulb
add
inc
rcrl
orl
enter
ljmp
mov
enter
cmc
lret
imul
pop
push
repnz
cmpsl
pop
jl
cmpsb
pop
js
pop
cld
daa
sarl
sbb
inc
sub
inc
or
mov
pop
fwait
enter
and
push
sbb
ficoml
pop
pop
ret
int3
mov
mov
jmp
adc
mov
dec
and
sarb
mov
add
sub
movsb
xlat
push
shlb
insb
add
das
push
or
and
mov
sub
sbbl
imull
inc
sbb
js
lock
divb
test
jne,pt
out
sub
xchg
xchg
sbb
sbb
lret
lds
lods
imul
mov
jecxz
gs
adc
lret
push
xor
xor
scas
aaa
dec
movsl
fstpt
cmpsl
cmp
movsl
mov
bound
xor
and
shlb
loop
xchg
jne
gs
mov
movsl
jb
bound
xor
and
shlb
loop
xchg
jne
gs
mov
stos
jb
bound
xor
and
shlb
and
adc
andb
mov
inc
jae
lds
cmc
add
xor
add
pop
adc
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
push
xchg
sub
dec
jo
adc
mov
cmp
lods
add
or
add
add
add
lcall
add
imul
add
add
or
dec
add
adc
add
add
sub
nop
add
mov
add
add
add
add
add
add
add
add
add
sub
and
cmp
add
add
imul
add
add
add
add
adc
dec
add
add
add
cwtl
add
add
add
add
add
add
mov
repnz
add
add
add
add
add
add
add
add
add
adc
add
add
or
xor
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
inc
add
add
add
add
add
add
add
sub
jbe
inc
add
add
add
add
add
cmpsl
add
add
add
add
add
sbb
cmp
add
add
add
add
add
add
add
add
add
add
add
add
jno
addb
add
add
add
add
pop
add
push
add
add
add
add
cmp
add
add
add
sub
popf
add
loope
cmpsb
add
add
add
add
dec
add
add
cmp
add
add
add
adc
pop
add
test
or
jae
gs
add
add
mov
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
push
add
add
sub
addb
add
add
bound
das
add
add
popf
add
jbe
mov
jge
xchg
add
add
add
push
add
xchg
sub
xchg
add
add
add
add
add
add
add
imul
add
mov
cmp
add
add
add
pop
add
add
cmp
je
mov
add
add
add
cmp
add
add
add
mov
add
add
add
add
dec
add
lret
add
add
add
add
mov
and
cmp
ja
dec
add
add
add
add
add
add
add
jno
inc
add
add
roll
add
add
add
pop
add
add
push
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
mov
inc
add
iret
add
cmp
add
xor
mov
add
add
jbe
mov
cmp
popl
pop
add
add
add
add
add
popa
add
add
add
jns
adc
adc
cmp
add
pop
add
add
add
and
add
fwait
ret
xor
xor
mov
or
insl
unpcklps
leave
mov
cmp
sbb
fistpll
sbb
adc
xchg
xlat
cmp
cs
aas
xchg
lock
aaa
dec
mov
or
mov
cmpsl
cmpsb
push
movsl
dec
adc
xor
les
and
mov
sbb
sub
popf
dec
scas
mov
out
cmp
push
popf
push
lret
or
ret
cmp
data16
mov
stos
or
sub
lret
mov
cmpsl
lret
sub
or
mov
es
popa
push
pop
sarb
push
adcl
inc
adc
and
mov
mov
or
daa
adc
jne
aad
pop
jbe
js
push
cmpsl
movsl
add
xchg
push
out
xchg
cwtl
in
fnsave
mov
cmp
outsb
adc
repz
cld
call
dec
fisubl
mov
jae
das
sbb
push
movsl
dec
imul
jp
mov
filds
pusha
leave
js
fsubl
xchg
cmpsl
pop
fwait
lcall
lods
xchg
xchg
sbb
shll
push
dec
xlat
outsb
add
popa
adcl
std
dec
lahf
sub
push
aas
dec
xorl
push
into
add
mov
and
sub
rcl
xchg
jmp
int3
je
mov
jge
mov
add
outsl
fmuls
test
pop
iret
pop
mov
clc
btc
inc
push
repnz
and
js
fs
imul
pop
sti
add
lea
jmp
push
jno
sarl
inc
lds
xchg
int
xor
hlt
or
add
fcmovnb
or
push
aaa
mov
shlb
dec
dec
mov
adc
mov
inc
cmp
jns
or
pop
lahf
inc
dec
ja
jae
inc
loopne
fisttpl
mov
push
arpl
into
loope
test
iret
cmp
pop
push
sbb
adc
test
cmpsl
push
repz
add
pop
or
pop
sub
in
sti
sbb
fsubp
je
pop
xlat
jge
loopne
mov
ljmp
dec
lahf
sub
dec
push
out
sub
mov
clc
cmp
in
sub
arpl
jle
sbb
daa
pushf
inc
dec
pop
inc
in
pop
repz
sbb
outsb
push
mov
jb
mov
sub
das
iret
jne
xchg
cli
mov
cmp
jl
loop
adc
loopne
fwait
pop
in
sbb
daa
adc
jecxz
mov
test
lods
aaa
adc
rorb
pop
out
repnz
or
gs
adc
dec
shr
mov
or
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
