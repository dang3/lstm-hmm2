adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
push
daa
pop
aaa
das
pop
aas
pop
push
data16
dec
sub
push
lret
mov
iret
out
imul
xlat
call
sbb
pop
aaa
pop
pop
aas
pop
dec
addr16
ja
inc
jg
test
jge
iret
sbb
out
call
push
daa
push
aaa
aaa
pop
daa
pop
push
addr16
ja
inc
push
xchg
ret
loop
stc
loopne
xchg
stos
pushf
mov
pop
inc
arpl
inc
frstor
push
je
addr16
data16
mov
cmp
adc
daa
xchg
daa
das
insl
das
lcall
mov
inc
mov
dec
push
js
xorb
lods
add
xchg
aad
rolb
sub
jge
addr16
lea
inc
push
inc
dec
cmp
fildll
mov
push
dec
ja
dec
jg
mov
inc
jecxz
dec
testl
jbe
dec
sbb
in
lahf
cwtl
jg
outsl
push
xchg
mov
gs
out
scas
pop
aaa
out
jle
and
mov
repnz
cld
int
fidivs
pusha
mov
repnz
cmpsl
rdseed
sub
daa
pop
aaa
das
pop
sub
pop
addr16
ja
inc
push
xchg
cmpsl
xchg
xlat
out
imul
out
jl
jp
dec
inc
pop
push
sub
xor
insl
and
and
xlat
lahf
scas
fst
shl
mov
mov
mov
dec
pop
pop
dec
dec
cmp
xor
adc
jns
ret
ljmp
popa
lahf
mov
sub
outsl
aaa
push
pop
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
fcompl
jbe
push
shlb
jae
rclb
daa
mov
mov
test
jae
outsl
pushf
loop
push
inc
adc
in
xor
call
jp
dec
mov
loope
xchg
lahf
jae
jbe
xchg
cmp
lret
cwtl
sbb
cld
stc
adc
push
jecxz
push
pop
or
ljmp
adc
test
cmp
xorl
testl
data16
dec
ror
sbb
data16
mov
out
enter
add
subl
imulb
out
inc
dec
shlb
daa
lea
xchg
movsl
mov
repnz
sbb
add
outsl
popa
aad
add
movsl
loope
or
test
sub
xor
jae
mov
hlt
jnp
or
stos
call
jle
inc
jae
mov
inc
hlt
push
xor
rcll
test
sub
int3
aam
loope
sti
mov
sbb
adc
nop
fildl
dec
aad
jmp
and
or
xor
dec
ret
push
cmp
push
je
test
add
clc
mov
inc
dec
out
or
into
bound
imul
cmp
add
push
movsl
push
cmp
in
fistps
push
les
mov
inc
aam
sti
filds
and
scas
fldenv
or
sahf
and
and
mov
add
in
jns
xlat
mov
mov
dec
sbb
lods
cmp
dec
inc
insl
int
mov
cmp
xchg
fnsave
sub
outsb
jae
loope
push
ret
xrelease
cli
add
test
sti
jno
xchg
scas
sbb
inc
xchg
or
or
sub
subb
scas
pop
call
add
mov
xor
gs
std
stos
mov
push
in
sbb
xor
in
int
xor
push
aam
scas
sub
jge
addr16
seto
orl
loope,pn
popf
lret
fdiv
leave
fwait
adc
jg,pn
cli
shrl
ljmp
inc
hlt
xchg
shr
in
jb
adc
mov
jge
stos
inc
and
sti
or
jge
mov
adc
jnp
loopne
jp
or
sbb
bound
out
in
jecxz
subb
js
mov
adc
addb
in
loopne
outsl
xorb
nop
push
lea
ret
loope
sub
in
xchg
adc
push
cmp
stos
stos
and
cli
int
mov
sub
jge
add
pop
lods
dec
stc
sub
int
xchg
add
aas
fucomp
xchg
dec
inc
sbb
inc
ret
push
aas
je
mov
lahf
sti
js
pop
pshufw
loope
dec
xchg
repnz
dec
dec
sti
adc
jo
andl
pop
insb
mov
push
inc
push
cwtl
push
int
jmp
dec
push
rcrb
cmpsb
sbb
cmpsl
jbe
sbb
jmp
test
js
sbb
sub
and
les
add
xor
jl
movsb
gs
cltd
pop
jbe
and
jno
daa
or
sbb
ljmp
xor
rolb
ret
xor
test
outsb
sbb
pusha
nop
sub
out
sbb
dec
xchg
jae
shl
pop
movsb
jno
dec
frstor
jnp
mov
stc
into
mov
adc
aad
lea
xchg
push
stos
sar
into
cmp
decb
xor
stos
push
inc
in
cs
fwait
add
cmp
jg
inc
cmp
sbb
mov
jg
xor
cmpb
or
inc
xchg
push
jg
push
mov
sti
outsl
sti
into
cmp
push
and
fnstcw
arpl
repnz
jp
or
cld
inc
mov
cld
test
pushf
call
int
roll
sbb
loope
lock
sarl
stos
push
xor
push
sub
hlt
mov
pop
pop
sbb
pop
stos
sbb
mov
xchg
cmp
push
stos
loope
mov
xchg
roll
dec
mov
push
addr16
mov
idivb
and
pushf
jae
xor
and
adc
jl
and
xlat
push
call
aad
cmp
cmc
out
jnp
addl
adc
int3
jg
mov
in
cmpsb
jecxz
push
mov
sahf
ss
imul
mov
sub
dec
fdivrs
dec
cwtl
adc
inc
sbbl
int
sbb
loop
jb
test
sub
lods
mov
sub
leave
push
fs
lods
push
jmp
cmc
mov
dec
inc
jbe
fwait
push
xor
dec
push
call
cmp
outsb
cmp
jmp
mov
jbe
add
sub
xor
pop
mov
repz
repz
jne
insb
pop
test
popf
adc
js
xchg
dec
lods
xor
insl
cld
jl
in
or
imul
jl
out
sub
pop
aam
int3
jp
inc
fwait
xchg
jle
shlb
jecxz
int3
jne
ret
mov
mov
and
int
sbb
lock
lret
fisubs
fcomi
and
and
cmc
jo
pop
imul
imul
aam
mov
das
fisubrs
inc
or
sub
pop
dec
and
cmp
jno
xor
mov
js
xchg
mov
sub
xchg
adc
xor
in
imul
push
xchg
mov
lret
lretw
lods
int
pop
lods
pop
sub
cli
jmp
fisttpll
cwtl
or
jecxz,pt
cwtl
push
mov
jg
xor
adc
ficoms
into
jb
in
mov
sbb
out
pop
ret
rep
ror
push
push
mov
xchg
lock
scas
in
jecxz
stos
in
lods
xchg
mov
pop
jbe
aam
and
sub
mov
cwtl
jne
mov
stos
xor
jecxz
repnz
fwait
cmpsb
xchg
test
iret
xchg
adc
xor
cmc
mov
push
pop
inc
arpl
fs
xchg
mov
adc
addl
dec
in
loop
mov
sub
lock
pop
es
call
rcl
in
imul
push
jle
xchg
test
mov
inc
shlb
push
or
mov
fstps
xor
out
xor
sub
sti
add
fwait
adc
add
pop
repz
mov
mov
cmp
push
cltd
push
push
mov
and
dec
sub
in
push
push
mov
out
out
addr16
add
and
jne
test
adc
push
dec
pop
xchg
js
ret
push
in
outsl
sahf
inc
in
ret
out
mov
aaa
or
popf
cmp
cs
push
sbb
fstpt
mov
adc
and
pusha
hlt
fldenv
into
xchg
jb
vcmpps
je
mov
adc
arpl
enter
cmc
inc
push
aaa
mov
stos
insl
or
sarb
test
xchg
js
cltd
mov
sbb
push
jl
mov
std
fsts
push
sbb
add
add
std
imul
test
dec
incl
jae
adc
je
xchg
jbe
insl
fiadds
sbb
shrl
addl
xlat
mov
clc
std
xchg
push
pushf
sub
jecxz
shrl
lret
or
pop
mov
dec
cs
fidivrl
push
ficoml
repz
lahf
pop
jl
mov
cld
or
sbb
in
mov
mov
dec
inc
sub
testl
fstpt
enter
sbb
bound
movsl
cwtl
in
xchg
dec
inc
dec
dec
cmpsb
test
adc
cld
inc
add
std
jo
dec
pop
lret
mov
mov
rorb
in
es
push
inc
fnop
outsl
inc
data16
lahf
adc
fcmovb
pop
cmpsl
add
ret
mov
pop
mov
popf
mov
loop
sbb
inc
mov
test
push
std
jo
fs
loop
mov
loop
cmp
jae
ljmp
pop
jmp
sbb
or
fstps
mov
inc
pop
sub
aaa
jmp
cmp
jns
loop
scas
into
dec
inc
mov
sbb
loop
mov
mov
cmc
inc
pop
dec
mov
jmp
adcb
insb
adc
adc
cmc
int
lcall
pusha
test
pop
mov
into
ja
sub
cmp
ja
mov
mov
loop
dec
sub
xchg
and
xor
in
push
repz
pop
into
outsb
push
add
mov
xorb
rcl
clc
jb
dec
adc
pop
sub
addr16
push
mov
cltd
jle
and
pop
jl
inc
std
movsb
adc
and
sub
adcl
mov
ret
mov
sahf
pop
or
or
inc
pop
out
lods
and
in
mov
jl
xorb
mov
xchg
add
fwait
mov
jmp
dec
jnp
inc
mov
xor
adc
mov
iret
roll
repz
xchg
jmp
sbb
nop
sub
and
out
in
push
dec
cwtl
mov
outsb
pop
xor
pop
mov
mov
lock
xor
jmp
inc
and
jp
mov
rcll
fcomp
pusha
dec
hlt
into
rorl
stos
outsl
or
sbb
and
into
loope
fwait
aas
dec
dec
dec
add
subb
test
insb
inc
subb
test
mov
dec
pushf
mov
out
cld
sahf
sbb
xchg
mov
pop
cmp
jecxz
ret
sub
cmp
push
sub
mov
jo
mov
iret
push
aam
mov
or
adc
popa
ljmp
inc
xchg
repnz
mov
mov
lods
mov
inc
mov
inc
lock
push
sub
xchg
roll
popa
pop
stc
je
xchg
jae
pusha
loop
iret
xorb
sbb
fisttpll
push
dec
sub
xchg
sub
xlat
adc
jae
loop
push
js
and
gs
cltd
sbb
ja
xor
and
adcl
sbb
mov
xor
cmp
push
xor
mov
jl
enter
mov
mov
dec
cmpsl
xchg
fsubl
pop
fcoml
sub
xor
jno
pop
or
test
addb
fdivrs
mov
subl
fcmovu
je
or
dec
ret
sub
jg
imul
and
mov
sbb
mov
push
cmp
push
jb
pusha
add
jo
lock
out
or
or
mov
dec
testl
roll
test
clc
lret
sbb
sub
fcomps
cwtl
jb
cmp
int
in
jge
lcall
pop
xor
adc
lods
sub
sbb
arpl
adc
sahf
cltd
jo
fs
push
int3
out
adc
in
mov
and
and
dec
inc
in
pop
cmp
dec
int
imul
sub
adc
push
dec
cmp
pushf
push
mov
inc
out
jecxz
pop
lods
inc
and
das
test
jmp
std
and
fisttps
push
call
sub
sbb
stc
xchg
out
je
nop
cmp
cmp
cmp
mov
jp
push
bound
cmp
push
lret
add
stos
les
sub
mov
and
sub
test
lods
lds
mov
into
or
mov
xchg
in
pusha
fwait
fwait
xchg
loopne
outsb
cmpsl
cmc
push
roll
sahf
rcrb
imul
in
jmp
jae
pusha
pop
sbb
xor
jle
mov
ret
popf
xchg
and
in
adc
cmp
jge
jmp
loope
movsl
xchg
mov
push
clc
rcll
mov
test
outsl
gs
int
fstpt
and
or
mov
or
jmp
push
aaa
or
inc
jbe
push
in
out
aaa
das
pop
sbb
out
xchg
in
pop
jmp
fcmovnu
dec
leave
and
je
enter
pushf
jae
inc
out
and
xlat
mov
shrb
fcompl
std
in
ljmp
jne
jns
std
mov
sbb
push
insb
jns
aam
jecxz
insb
clc
inc
sbb
cli
pushf
nop
adc
aam
jne
jno
aaa
lods
pop
xchg
jle
xchg
out
popf
adc
scas
jecxz
jg
fistps
jmp
inc
or
fidivrl
aas
mov
fwait
jno
movsl
inc
mov
pop
cmp
mov
cmp
repz
sbb
loopne
mov
jne
fwait
pop
mov
mov
or
adc
out
dec
xor
push
int3
dec
push
push
jl
jnp
nop
jge
ret
lods
jmp
sbb
mov
dec
icebp
mov
mov
pop
cld
lods
pop
ss
hlt
ret
pop
push
dec
cmp
shr
iret
cmp
mov
sub
stos
push
sub
mov
mov
add
sub
inc
sub
iret
dec
adc
adc
push
lds
xor
jae
imul
rcl
leave
mov
cmp
sub
pop
mov
lods
into
icebp
xor
cli
fsubs
pop
es
push
pop
imul
popf
sub
je
test
shll
sbb
cmc
ds
ljmp
test
in
jns
out
addb
jns
cmpsb
add
out
adc
test
and
aaa
pop
lods
xchg
mov
imul
mov
fldl
adc
xlat
xor
sub
push
mov
xchg
mov
je
das
xchg
popa
or
xor
fisttpl
imul
popl
and
stos
mov
outsl
cmp
lcall
mov
fbld
xor
popf
ja
xchg
lods
bound
std
adc
cmc
xchg
aam
add
aam
jbe
inc
mov
into
add
fsts
ljmp
leave
ret
lea
mov
lcall
movsl
mov
xor
lret
mov
pop
jne
lcall
cmp
in
out
xorb
mov
lock
inc
mov
pop
dec
xor
jno
test
xchg
mov
in
std
push
mov
push
imul
rclb
aad
scas
lock
push
xor
jmp
or
pusha
jge
pop
mov
jo
pop
fidivl
fmul
ss
leave
add
cltd
cmpsb
jp
insl
xchg
aam
mov
xor
sub
ret
push
push
sbb
xchg
popf
daa
cli
lods
mov
outsl
sarb
adc
leave
stos
ret
int3
sbb
sub
mov
cld
addr16
fs
ffreep
in
clc
fidivs
adc
in
pop
sbb
adc
js
andb
addr16
sbb
int
pusha
gs
xchg
or
ficomps
jmp
xor
mov
sbbl
push
pop
or
ja
fs
adc
inc
imul
xor
push
jg
ds
cmpsb
sbb
decb
sub
push
mov
mov
inc
sbb
outsl
mov
xchg
movsb
adc
subb
sbb
sti
rclb
xor
imulb
iret
outsb
push
pop
loopne
movsb
in
cmpl
pop
shrl
test
dec
jae
adc
sbb
inc
hlt
fiaddl
rcr
je
lock
pushf
lock
pop
push
push
insl
add
pop
and
dec
pop
repz
dec
aaa
je
push
pop
scas
push
adc
fs
out
rol
cmp
fs
clc
int3
adc
repz
mov
mov
mov
inc
mov
test
popf
cwtl
xlat
out
shlb
addr16
mov
pop
repz
lea
push
cmp
jecxz
js
jns
stc
imul
in
fstpt
popf
scas
aas
insl
sbb
push
rolb
or
jge
filds
fcmovu
xor
inc
loopne
outsb
sarl
es
jo
inc
and
adc
inc
dec
or
scas
dec
push
push
xchg
je
sbb
or
lahf
mov
add
push
jge
jns
and
mov
push
in
cmpl
sub
pop
mov
ja
xor
pop
mov
mov
inc
imull
or
cli
repz
sub
out
popa
xor
ds
jl
xchg
cmp
mov
xchg
orl
add
in
loope
mov
mov
rcrb
pop
rcrl
add
mov
jg
push
cwtl
clc
es
and
inc
subb
lret
push
mov
or
xchg
out
jp
jae
out
cld
sub
xchg
in
fdivrl
jl
imul
xor
popf
or
inc
fmul
addr16
cltd
int
xchg
test
mov
sbb
dec
gs
cli
mov
and
push
xchg
lret
push
into
dec
incl
adc
mov
data16
shr
push
push
inc
adc
fstps
cmpsl
imul
inc
push
dec
pop
pop
and
mov
out
imul
or
sti
hlt
sub
xor
sarl
iret
xor
and
mov
cmp
add
in
lds
mov
mov
pop
enter
push
and
jge
push
out
ja
mov
add
push
mov
mov
pop
dec
ja
fisubrl
stos
add
jl
stos
adc
lds
clc
in
cmp
xchg
cmp
test
icebp
imulb
iret
push
inc
and
push
scas
cmpsb
mov
xor
pop
repz
inc
scas
roll
les
push
push
stc
and
imul
js
cmp
daa
stos
add
movsb
xchg
sbb
and
jb
sub
test
cmp
xor
test
push
shld
cmp
dec
jp
testb
sarb
mov
pop
mov
bound
loope
hlt
int
or
mov
mov
xchg
cmp
xlat
push
pop
insb
jns
loope
add
add
sub
movsb
mov
enter
push
test
mov
mov
add
fwait
xorb
lret
jle
xor
adc
imul
cmp
ja
xchg
into
lcall
arpl
xchg
lock
jl
mov
lretw
lods
sahf
pop
lods
adc
int3
cmp
adc
push
fidivrl
mov
mov
xor
stos
in
scas
loopne
loop
adc
test
pop
sbb
aam
insb
std
popa
clc
cltd
pushf
jnp
xor
test
inc
stos
in
dec
lcall
sub
push
sbb
lock
sub
fdivrl
fldcw
push
push
mul
cmpsb
inc
mov
cld
in
jo
int
mov
push
mov
out
cmp
lock
adc
nop
adc
cwtl
ja
or
add
hlt
and
sti
addb
insl
mov
adc
lret
inc
pop
adc
cs
push
aad
add
ret
movsl
rcrb
int3
pusha
pop
insb
arpl
push
out
cltd
rcll
push
xor
mov
popa
jp
or
hlt
and
aaa
jecxz
sub
out
push
mov
jl
lods
jno
in
into
sbb
int3
testb
pop
mov
lods
xor
filds
pop
xor
loop
lock
xchg
out
and
arpl
dec
scas
mov
rcr
sar
cmp
add
sti
sbb
lea
adc
sbbl
cltd
push
fnsave
cmpsl
in
dec
xor
pop
mov
xlat
xchg
inc
inc
aam
cmpsl
into
insl
nop
insl
or
pop
mov
push
fcmovbe
ljmp
mov
mov
int3
xchg
mov
popa
das
jb
test
mov
bound
add
jns
nop
rorb
lea
mov
push
fcoml
in
in
mov
sti
notl
out
loop
popa
mov
pop
fidivs
test
push
sbb
or
sbb
out
test
sub
repnz
push
cltd
inc
pop
data16
cmp
stos
movsb
dec
mov
dec
or
lahf
or
pop
iret
cmpsb
sbb
mov
test
testb
cmovo
imul
movsb
cmp
cld
ljmp
nop
std
roll
sub
add
mov
mov
lods
and
push
dec
inc
inc
ret
js
sahf
mov
je
push
mov
mov
stos
clc
adc
in
push
mov
xchg
and
sbb
ror
imul
and
adc
sub
cmp
outsb
in
push
ss
lock
mov
mulb
enter
inc
or
mov
pop
mov
and
gs
and
jecxz
xchg
stos
xlat
or
imul
or
dec
in
movsl
lods
pop
inc
dec
dec
dec
ret
jns
cmp
mov
lcall
aad
xchg
xor
std
dec
cwtl
sub
cmp
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
call
pop
aaa
das
pop
aas
pop
dec
addr16
ja
inc
jg
cmpsl
lahf
mov
xchg
imul
into
xlat
cmp
sub
sbb
aas
pop
dec
addr16
ja
inc
call
add
outsl
push
or
cmp
sub
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
scas
xor
and
adc
add
sbb
or
mov
movsb
sahf
xchg
popl
aam
les
xor
and
adc
add
je
fs
push
dec
inc
mov
xchg
popl
xchg
iret
les
xor
and
adc
add
je
fs
push
dec
inc
mov
lock
cmpsb
mov
jnp
jnp
push
hlt
mov
xchg
lods
lods
nop
rcr
repz
mov
inc
push
push
mov
sti
jle
pusha
fwait
aad
cmp
pop
push
pop
xchg
add
add
aaa
xchg
mov
jecxz
push
aam
cmp
leave
push
jo
inc
cmc
das
and
sub
cmpsl
aas
fsub
add
jne
fs
outsl
imul
pop
sahf
mov
dec
ret
fisttpl
sti
xchg
jne
jno
inc
dec
xlat
dec
iret
imul
pop
sub
dec
mov
mov
lahf
add
movsb
inc
sarl
test
test
ror
pusha
xor
and
adc
add
je
fs
push
dec
inc
mov
xchg
popl
aam
lods
dec
pop
imul
inc
insl
cmp
or
sub
rcrl
ret
mov
test
insb
imul
sbb
add
aaa
inc
in
int3
ret
cmc
ljmp
mov
xchg
dec
jge
ja
jl
popa
je,pt
fs
push
dec
inc
mov
xchg
popl
aam
les
xor
and
adc
add
je
fs
push
dec
inc
mov
xchg
popl
aam
les
xor
insl
xchg
cmpsb
pop
inc
or
fsubrs
push
idiv
sbb
rolb
pop
mov
mov
dec
cwtl
xlat
cmp
push
aad
inc
cmp
pop
push
cmp
inc
repz
sbb
add
cmp
repz
mov
into
jle
xchg
mov
in
and
lods
jmp
cmp
mov
mov
xchg
cltd
xlat
jg
sbbb
sbb
adc
fadds
push
jmp
sbb
add
xor
aas
push
pop
or
sbb
outsb
push
jg
test
mov
pop
push
push
repnz
icebp
imul
adc
pop
xor
jbe
jge
pop
lock
cld
in
add
sahf
push
sbb
push
mov
cwtl
push
lock
leave
addb
testb
arpl
pop
or
push
xchg
lods
rcll
fs
xchg
call
cs
push
pop
fistpll
fdivp
pop
repz
add
ss
es
fisubrs
cmp
sub
sbb
xchg
xchg
jg
inc
lret
scas
scas
repnz
rcrb
jns
xchg
and
mov
pushf
setge
or
inc
out
js
lahf
jnp
lcall
data16
and
or
push
xchg
jmp
cmp
xlat
stos
sub
mov
push
cli
ret
inc
les
jnp,pn
fldenv
mov
iret
cmp
sbb
repnz
or
decl
in
ffree
lock
cmp
xchg
loope
insl
adc
dec
push
dec
xorb
mov
shll
imul
outsl
pusha
adc
mov
mov
dec
dec
stos
dec
js
lds
and
add
xchg
or
into
pop
or
or
xchg
cmp
adc
out
dec
cmp
dec
pusha
in
stc
push
mov
loope
sub
enter
out
andl
out
mov
mov
out
pusha
cmpsl
dec
mov
jl
gs
adc
loope
sub
mov
les
mov
inc
icebp
sahf
xchg
dec
adc
mov
push
hlt
jne
stos
pop
je
push
popa
mov
lret
xchg
add
sbb
mov
mov
fistpll
loopne
mov
stos
xchg
sbb
fisubl
bound
sbb
or
sbb
shl
mov
divb
and
clc
out
popa
out
and
adc
jne
push
scas
mov
xor
aaa
ss
fdivrs
push
imul
out
mov
adc
mov
icebp
dec
dec
rcr
data16
xor
or
imull
pop
pusha
sbb
clc
push
jo
pop
mov
mov
jl
rclb
lret
stos
inc
popf
cmp
or
repnz
sub
mov
add
xor
les
dec
pushf
fstpt
sub
or
pop
fistl
clc
push
sub
repz
push
dec
push
mov
sub
jg
pop
fwait
push
push
mov
addr16
orb
adc
inc
mov
imulb
mov
daa
lcall
mov
pop
dec
dec
xchg
push
adc
xchg
fistl
xchg
xor
mov
fdiv
xor
adc
inc
lret
cmp
xor
cmp
mov
inc
lret
and
sbb
mov
nop
push
out
xchg
sub
scas
push
fnstcw
cld
shll
fnsave
out
and
mov
cwtl
pop
decb
test
test
adc
dec
cs
inc
mov
adc
pop
mov
inc
jle
stos
loop
pop
jne
dec
push
jecxz
sbb
sub
ror
inc
rorb
jnp
or
pop
daa
je
cld
adc
int3
mov
call
sbbl
test
clc
loop
pushf
or
dec
rorl
imul
cmp
pushf
outsl
cmp
sub
int
pop
fnstcw
into
rcrl
xchg
push
push
push
jecxz
jb
cmpsb
inc
mov
push
jp
lret
movsb
out
pop
push
stos
hlt
xor
add
mov
jne
sbb
push
inc
jno
and
sbb
inc
ds
sbb
dec
lret
xchg
lret
sbb
stc
insl
aam
leave
sub
fnstenv
pop
mov
and
dec
push
mov
push
xchg
icebp
add
mov
mov
enter
aas
mov
outsl
push
repnz
sbb
push
cld
xchg
pop
cmp
xor
lods
iret
push
sbb
ja
or
clc
mov
sbb
cmpsb
sub
add
sahf
rcrl
insb
and
push
mov
cmp
mov
push
mov
sub
fnstenv
les
push
mov
push
pushf
outsl
jg
stos
bnd
test
sub
lods
pop
jns
leave
repnz
mov
mov
cmc
sbb
aad
adc
mov
inc
divb
dec
add
push
cltd
loope
ds
cmpsb
icebp
scas
and
xchg
cmp
xor
je
fwait
xchg
aaa
cmpsb
in
loope
incb
sub
aam
sub
in
std
frstor
insb
popf
push
iret
cmp
scas
push
repnz
rolb
mov
mov
inc
repz
dec
cmpsb
mov
nop
leave
lcall
testl
jle
adc
push
das
jle
mov
mov
test
sub
lahf
clc
stos
inc
pop
shl
je
push
lods
xor
push
dec
dec
lret
iret
mov
xchg
xor
in
out
popf
dec
js
lahf
movsb
loop
ja
out
ret
xor
out
ljmp
test
push
or
test
pop
xor
test
pop
loopne
xor
cmp
pop
aaa
into
stc
xor
inc
jns
xchg
push
movl
add
repz
lahf
gs
push
cmpsb
jmp
out
sub
xor
or
cli
or
mov
or
daa
mov
dec
sbb
mov
je
lcall
enter
sbb
ret
popf
mov
cmc
out
jae
adc
jbe
out
shrb
sahf
ja
aas
push
loope
add
aad
mov
dec
shll
sbb
dec
lret
into
pop
xchg
sub
inc
sbb
out
cmp
add
dec
clc
incb
or
jmp
lods
mov
dec
xchg
or
cwtl
mov
fwait
out
push
sbb
scas
jge
pop
cmpb
popf
push
dec
jnp
jecxz
jae
ljmp
int3
push
xor
ds
jno
or
addr16
jbe
xchg
mov
sub
jl
repz
cmc
lea
aaa
mov
cltd
leave
ds
mov
cmp
push
jns
and
cli
leave
mov
mov
jge
mov
pushf
call
xor
cs
cmp
addr16
sahf
hlt
mov
and
aas
xor
push
pop
inc
sbbl
popf
addr16
cmc
cltd
mov
fwait
clc
inc
adc
stos
and
jl
sbb
cwtl
adc
xchg
mov
cmp
mov
inc
sti
cmp
stc
das
hlt
pop
call
int
fucomp
ljmp
mov
mov
clc
call
movsb
fadd
inc
pop
fisttps
xchg
xchg
cmc
loop
or
fs
je
mov
push
push
pop
sub
mov
xor
inc
fucomip
icebp
push
dec
sbb
sub
or
inc
mov
jne
rorl
loop
stc
int
mov
fnstcw
xor
push
inc
scas
and
movsl
cmp
insl
mov
insb
loop
iret
pop
sbb
sub
sub
clc
in
cltd
jle
and
enter
mov
rolb
dec
arpl
test
aad
pop
xchg
mov
leave
outsb
fmull
pop
fcoms
pushf
mov
ret
repnz
mov
int3
test
jo
lea
pusha
decb
imul
or
adc
adc
jl
add
jo
dec
pop
mov
xor
dec
xchg
arpl
and
and
adc
push
pop
mov
cwtl
push
stos
in
mov
mov
bound
movsl
jmp
jle
inc
xchg
pop
mov
pop
push
add
dec
int
data16
cmc
es
pop
mov
lea
push
out
es
xchg
stos
jp
jo
jge
cmp
jg
push
jb
lcall
push
sbb
inc
pop
and
fldenv
aam
and
in
sub
lcall
mov
adc
cld
add
cmpsb
sbb
out
xchg
dec
sub
pop
xchg
or
push
cmp
inc
and
inc
mov
cli
in
mov
lea
ret
fdiv
sub
xor
adc
les
mov
imul
push
sub
jnp
xchg
mov
sbb
shrl
jmp
fadd
jmp
out
insl
mov
jo
cmc
mov
dec
sbb
sub
imul
jmp
add
das
rclb
lods
jmp
mov
ret
add
sub
inc
fcomps
mov
cmpsb
adc
in
negb
fsubrs
jne
push
ret
pop
push
mov
push
sub
lods
and
stc
xor
push
sub
int
fcomi
addb
inc
insl
lgs
stos
test
pop
mov
jno
icebp
and
inc
pop
push
int3
cmp
pop
loop
xchg
popf
sahf
clc
pusha
negb
cmpsb
cwtl
push
mull
xchg
pop
lahf
mov
clc
dec
push
es
call
fisttpl
jmp
imul
and
xchg
mov
mov
jp
add
push
int3
or
fldcw
fucomi
shlb
pop
dec
leave
add
sub
jecxz
icebp
cmovs
aas
sbb
mov
cmp
sbb
jecxz
fsts
adc
and
loope
xor
andb
dec
lds
loope
shl
mov
mov
mov
mov
push
sbb
push
js
loopne
mov
mov
cltd
sahf
xlat
mov
mov
popw
pop
pop
bound
sub
adcl
mov
xor
cltd
daa
shlb
in
sbb
pop
adc
das
stos
push
inc
scas
rclb
fistps
sub
cmp
idivl
xchg
jbe
jno
pop
push
jge
and
jnp
aam
insb
cltd
popf
push
testb
inc
cmp
mov
pusha
ds
pop
xchg
xchg
ret
icebp
call
sbb
lret
push
mov
jns
xchg
pop
jno
add
jb
mov
cmp
mov
popf
jmp
shlb
mov
xchg
fbld
mov
lret
fcoml
nop
mov
cmc
lock
dec
loopne
xor
and
or
sahf
cmpsb
out
nop
cmpsl
pop
fstpl
mov
dec
test
cwtl
fs
dec
sbb
mov
cmp
outsb
in
daa
or
jge
jecxz
cmp
or
inc
imul
jnp
mov
sub
dec
pop
std
add
mov
hlt
and
mov
sbb
dec
sbb
icebp
sti
xor
ficoms
lods
lcall
movsb
adc
or
call
movsb
lea
push
vphaddubd
loop
imul
jno
dec
push
push
mov
shl
pop
in
imul
imul
xchg
xchg
push
xchg
push
and
fdivrs
test
pop
insl
mov
mov
fwait
cmp
push
adc
push
cmp
sub
adc
popf
mov
ds
dec
fstl
fstpl
pop
cwtl
aaa
popa
and
daa
push
insb
insb
adc
pop
int3
imull
jne
mov
jae
lds
and
xchg
adc
packuswb
mov
inc
xchg
gs
aad
push
lret
pushf
aad
mov
mov
push
xchg
icebp
and
out
push
rclb
sub
scas
enter
sub
fidivrs
fimull
sbb
mov
scas
or
adc
cmp
cmp
js
mov
dec
mov
shl
in
pop
add
mov
insb
sbb
mov
cmc
sbb
pop
cmp
lods
pushf
mov
lock
aaa
cmc
in
imul
push
sbb
test
enter
js
jne
mov
inc
and
and
shll
add
mov
jmp
jmp
xchg
cmpl
int3
xchg
icebp
xchg
adc
dec
and
in
test
push
push
fidivl
sbb
loope
add
popf
je
xchg
mov
cmp
adc
mov
push
mov
loopne
sub
mov
stc
pusha
jle
aaa
aad
inc
add
mov
jae
and
std
fs
and
stc
cwtl
sub
inc
rolb
js
subb
loop
sbb
sbb
pop
add
or
mov
std
adc
popa
aaa
test
push
mov
mov
ficoml
pushf
scas
pop
push
and
outsb
sub
xchg
push
push
jnp
sbb
push
int3
outsb
arpl
or
adc
jg
decb
cmp
fisubl
cld
pop
aaa
popf
adc
test
pop
popf
adc
xor
pop
mov
mov
adc
xchg
pop
push
xchg
pop
les
int3
push
test
mov
inc
push
mov
es
push
dec
outsb
gs
xor
jmp
aam
xor
arpl
test
sti
loope
out
mov
mov
pop
jbe
cmp
outsb
lds
shl
sub
mov
xchg
outsl
mov
jnp
int
cmpsl
dec
adc
movsl
or
pop
adc
push
fcompl
mov
sub
mov
jg
icebp
mov
sub
xchg
pushw
ret
stos
ljmp
push
push
cwtl
fimull
and
lret
fstps
or
pop
mov
push
cmc
push
jb
bound
and
push
fisttps
enter
mov
aas
add
xor
mov
mov
out
cmc
cmc
mov
jg
xchg
push
pop
jg
movsb
inc
aam
sbb
jns
lret
jo
insl
int
nop
mov
sbb
mov
adc
fimull
or
jle
imul
add
add
sbb
in
push
lods
scas
andb
fistps
cld
xor
pushf
call
in
mov
jg
add
push
pop
jl
sar
inc
jmp
bound
cmp
push
push
shl
add
sbb
xor
xlat
daa
call
sub
ds
outsb
das
in
jecxz
sub
in
stos
push
or
dec
fcoml
xchg
std
gs
nop
pop
test
cs
fstp
imul
pop
pop
add
adc
ljmp
in
xor
pop
shlb
mov
test
mov
mov
cmpsl
ret
lcall
cltd
pop
xor
jl
xchg
jae
cs
xchg
xchg
ss
sub
rol
bound
ret
rcrb
and
mov
inc
jg
shlb
dec
push
out
mov
fcoms
movsb
sahf
and
mov
repnz
push
lahf
mov
mov
cmp
sahf
dec
jl
outsb
jbe
shlb
cld
pop
jns
bound
adc
ret
ds
xchg
out
or
jp
cmp
aam
fnstenv
ja
and
shll
testl
jge
in
mov
lahf
lret
mov
mov
cmp
sbb
mov
int
imul
xchg
and
push
add
jbe
cmp
pop
jecxz
xchg
add
sub
ret
cs
sub
mov
cmp
push
jge
xchg
xchg
lret
ret
mov
leave
xchg
mov
mov
mov
stc
arpl
das
test
or
mov
mov
stos
cli
dec
popl
xorl
inc
jl
jl
lahf
outsb
xlat
fwait
mov
sbb
add
and
pop
repz
fcomps
loop
xchg
inc
xor
hlt
stc
aam
leave
jecxz
mov
push
xor
nop
sub
jp
scas
hlt
push
rclb
aad
mov
popa
nop
mov
mov
das
mov
pop
sahf
pop
scas
dec
push
mov
popa
xchg
mov
dec
aas
dec
cld
jne
pusha
rolb
in
cmp
stos
mov
push
fisubrl
cmp
mov
sbb
mov
fidivrs
mov
mov
stc
cld
leave
cmpsl
stos
or
sub
js
ds
xchg
and
lret
jnp
xchg
gs
jb
popf
fdivs
dec
gs
int3
jne
mov
insl
mov
shrl
inc
lea
rcll
mov
jle
mov
inc
imul
icebp
and
test
sarb
popa
jno
push
and
test
cmp
movsl
sub
aad
inc
jge
shlb
xor
jbe
ds
xchg
lcall
add
imul
push
mov
sbb
cmp
dec
push
cmpb
xorl
jge
ljmp
push
int
mov
ljmp
cmp
mov
pusha
push
cmp
jbe
scas
int3
std
mov
testb
popw
or
pushf
repz
loop
popa
dec
test
and
mov
mov
pop
adc
add
in
inc
shll
stos
cltd
xchg
jo
shr
dec
je
jno
mov
cmc
add
es
in
push
xlat
data16
inc
sbb
loope
iret
mov
inc
inc
push
negb
inc
cld
arpl
inc
jecxz
out
jmp
ret
sbb
mov
ret
rclb
add
jmp
sbbl
sub
mov
pop
inc
pop
xchg
fadds
mov
arpl
sub
in
rcll
add
mov
mov
repz
clc
aaa
and
insl
cltd
or
pop
lods
rorl
in
pop
mov
add
mov
xor
cmp
jnp
and
add
lods
iret
int
pop
pop
mov
fst
jge
iret
je
dec
call
lret
mull
adc
pusha
or
push
cmp
fdivrp
aad
push
gs
arpl
bound
sub
pop
mov
xchg
jnp
icebp
outsb
jo
ja
mov
xor
enter
jne
or
jae
jl
push
mov
adc
mov
cld
cli
es
push
and
sti
insb
jbe
aaa
rcrb
mov
mov
pop
mov
jne
push
fists
scas
dec
jmp
mov
mov
push
icebp
jmp
inc
xorb
rolb
inc
cmp
shl
push
xchg
imul
leave
int
js
jmp
push
or
pop
icebp
cmp
fstpt
and
add
jbe
scas
xchg
pop
mov
lret
push
rol
aas
cmp
xlat
pop
cmpsb
sahf
stos
pushf
push
sub
mov
pop
je
movl
stos
push
js
stos
sbb
push
xlat
movsl
inc
aaa
rolb
fldl
and
push
es
arpl
mov
rcrl
scas
out
jle
iret
mov
fwait
popf
jle
jecxz
and
cli
jge
data16
cmp
jmp
adc
sub
ds
out
sub
jp
idivb
pop
jecxz
xchg
shrl
or
ret
or
test
mov
add
push
dec
mov
outsl
mov
repz
jecxz
shrl
cli
arpl
loope
cli
out
mov
rcl
or
shr
xor
sahf
loope
push
fwait
xchg
scas
or
and
rclb
orl
in
mov
xchg
adc
jge
xchg
xchg
aad
mov
mov
pop
sub
cmpsl
insl
fldcw
jmp
frstor
popa
movsb
xor
pop
jecxz
sti
push
and
aad
and
inc
cmp
cmp
call
mov
pop
cmp
add
adc
shlb
ss
add
outsl
lret
fldl
cmp
push
loopne
mov
sbb
testb
hlt
sub
cmp
jne
fcmovu
push
dec
sub
lea
ja
push
and
xor
rcr
cmc
aam
addl
mov
mov
pop
jp
lret
dec
adc
and
lret
pop
xor
into
push
test
pop
pop
adc
dec
cmp
int3
inc
fadds
aaa
insb
sub
outsl
pop
push
fildl
pushl
and
xor
pop
inc
xchg
in
js
fdivl
jmp
sti
insb
into
adc
cmp
pop
das
out
inc
mov
jns
jg
jmp
shll
xor
jmp
sub
leave
mov
inc
test
std
add
testb
jbe
xor
mov
mov
dec
cmp
or
xor
xchg
mov
add
lds
int3
rcrl
jnp
add
xchg
push
add
cmp
lds
test
in
xchg
cmpl
or
push
and
adc
add
je
fs
push
dec
inc
mov
xchg
popl
aam
les
xor
and
adc
add
je
fs
push
dec
inc
mov
xchg
popl
aam
les
xor
movsb
pop
xchg
jg
outsl
in
push
dec
inc
mov
xchg
popl
aam
les
xor
and
adc
add
je
fs
push
dec
inc
mov
xchg
xrelease
and
xor
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
mov
gs
jne
or
gs
inc
pop
push
add
icebp
aad
in
cmc
ret
test
mov
inc
jno
popa
gs
jne
add
adc
loope
icebp
cmc
roll
mov
inc
push
jne
add
or
fistl
lock
fildl
push
and
adc
rolb
punpckhdq
pop
test
into
sub
and
mov
ret
mov
jno
or
jo
jp
xor
xchg
dec
int3
mov
push
std
and
pop
gs
lds
sbb
inc
and
outsl
jne
add
push
popa
adc
jno
adc
inc
mov
sarl
jnp
std
pop
movsl
sbb
orb
dec
mov
and
xor
aad
sub
cmc
xchg
jl
or
xchg
sub
xchg
mov
andl
or
rcr
mov
cmc
sbb
loop
aam
outsb
fstl
gs
jne
add
or
stc
in
cmc
fadds
xchg
mov
add
popa
add
inc
imul
insb
test
cltd
scas
loopne
cld
repnz
loope
inc
or
popa
xor
inc
jns
and
mov
andb
into
xlat
std
mov
sub
xor
xor
pop
adc
add
icebp
aad
in
cmc
roll
mov
inc
jno
popa
gs
jne
add
adc
loope
shl
roll
mov
inc
jno
out
jo
push
fisttps
inc
pushf
lods
sub
lods
addr16
pop
cmpsl
int
lret
and
fs
sub
shrb
rclb
push
mov
icebp
jle
pop
cmp
cwtl
out
lock
mov
fistps
inc
jmp
cmp
push
jmp
mov
pop
sbb
sbb
or
cmp
add
xchg
out
cmp
inc
mov
imulb
or
scas
iret
adc
jmp
mov
imul
sbb
mov
fbstp
test
add
daa
pop
imul
clc
out
cli
in
out
iret
and
clc
out
mov
xchg
rorb
jp
adc
leave
sub
stos
pop
loopne
cmpsb
push
sub
push
fcmovnu
fiaddl
js
ljmp
ljmp
in
pop
mov
rcl
sahf
movsb
push
cwtl
loop
icebp
lahf
or
out
ja
mov
out
aaa
inc
in
pop
cwtl
andb
ss
in
sbb
jp
pushf
mov
aaa
jbe
inc
inc
out
mov
xchg
loop
dec
and
out
xor
insl
lcall
xchg
stc
jne
jp
jb
imul
mov
jp
les
dec
hlt
arpl
or
jns
push
jle
mov
gs
ljmp
mov
lret
cld
test
sbb
rcrb
xchg
push
push
lret
fs
mov
jnp
xchg
int3
adc
inc
daa
sarl
add
out
dec
test
xchg
push
jecxz
ret
loopne
mov
sub
xchg
jne
mov
and
sub
pop
mov
sub
push
xor
lds
add
movsb
jle
gs
fstpl
cs
sar
jne
mov
bound
sbb
ja
jmp
cmp
sbb
mov
push
and
mov
dec
andb
pop
xchg
mov
sti
pop
jne
jg
jmp
outsl
lret
xlat
mov
xchg
pop
push
bound
cmp
adc
mov
jne
pop
faddl
jp
repz
lds
xor
xchg
inc
ja
pop
push
loopne
bound
fmuls
shlb
push
popf
adc
jmp
mov
mov
push
scas
insb
mov
out
unpcklps
cmp
sub
in
andl
fs
add
mov
adc
outsl
mov
push
push
imul
loope
ficompl
int3
ss
xor
jmp
ret
inc
shll
push
addr16
sub
and
mov
dec
fdiv
lods
xchg
aam
jp
inc
ljmp
xor
call
loope
mov
cmp
lods
sbb
stos
iret
subb
push
test
push
jp
bound
push
jp
cs
ret
sti
ss
dec
push
int3
xor
push
sub
cmc
in
xchg
stos
mov
mov
jnp
mov
mov
adc
out
mov
inc
sbb
jp
sbb
je
sub
mov
lcall
rorb
pop
pop
icebp
mov
cmp
cmp
sbb
negl
ret
push
xlat
add
cmp
into
mov
add
lcall
xlat
jg
push
push
mov
jae
jnp
outsb
mov
dec
sub
inc
or
fcmovnbe
cmp
mov
fisubs
es
sub
ret
or
jae
out
sbb
lock
ja
sbb
sarb
iret
push
mov
jnp
lcall
mov
jmp
jae
mov
pop
push
cmp
add
push
outsl
cmp
mov
lcall
push
filds
fisttpl
push
lret
lret
jnp,pt
movups
adc
sbb
scas
mov
and
xchg
jnp
jmp
scas
mov
cmp
mov
ss
push
into
pop
sti
cs
add
add
dec
mov
sahf
ljmp
pop
mov
and
push
dec
punpckhbw
jl
jecxz
out
mov
in
and
push
and
repz
mov
xchg
push
std
jmp
pusha
adc
mov
loop
adc
push
arpl
or
ret
ljmp
jl
push
ret
mov
scas
or
lea
enter
fwait
or
or
jbe
aam
iret
inc
loopne
cmpsl
and
sbb
in
sub
popa
or
in
loop
mov
insl
push
sbb
pop
insl
sub
mov
dec
pop
mov
jp
addr16
dec
push
push
mov
int
push
test
popf
mov
or
lds
dec
sbb
push
add
jne
inc
mov
mulb
lods
fbld
xor
lahf
xchg
inc
js
aas
and
mov
cmp
mov
mov
jb
adc
dec
add
push
and
add
cmp
jecxz
sbb
popf
out
imul
or
repz
cmp
mov
pusha
xchg
nop
fidivrs
gs
sbb
shlb
cld
mov
jns
lea
push
jge
mov
das
test
jmp
mov
das
cmc
imul
jae
arpl
mov
stos
add
int3
adc
cs
xor
mov
into
filds
xchg
mov
in
pop
add
daa
push
scas
cmpl
loopne
xor
sbb
idivb
xorb
xchg
push
lods
nop
cltd
mov
xchg
inc
push
xchg
push
loope
or
in
sub
addr16
sbb
scas
lds
add
mov
or
out
into
dec
mov
dec
cmpsb
aad
sbb
hlt
mov
jecxz
leave
mov
adcb
add
popa
in
je
cmp
xor
or
mov
add
add
stc
movsl
pop
add
sbb
adc
and
sub
push
aad
push
repnz
cmp
aad
xor
xor
pop
push
inc
in
jo
lcall
and
lret
dec
dec
push
mov
mov
fdivrl
call
inc
xor
adc
in
lods
dec
jmp
scas
subl
loop
insb
mov
mov
shrl
clc
popf
pop
pop
scas
aam
mov
xchg
adc
ja
in
scas
stos
jp
add
sti
push
push
mov
jge
repz
mov
jo
stos
out
cmp
add
dec
sti
jno
and
push
inc
xlat
cmp
mov
jbe
cmp
imul
pop
outsb
mov
shrl
adc
mov
and
add
mov
cmp
std
pop
daa
cmpsb
xchg
arpl
pop
xor
lods
imul
ss
movsl
cmp
or
dec
push
cwtl
xchg
fchs
jo
cmpsb
enter
fdivr
adc
xchg
cmp
cmp
and
jl
cmp
aaa
adcl
inc
out
inc
xor
jl
shl
jo
xor
mov
jbe
mov
adc
mov
int
mov
les
jno
lret
add
jnp
sub
movsb
mov
sbb
jge
xor
mov
rcrl
jecxz
lea
nop
push
sarl
repz
push
pop
xchg
jl
inc
add
jl
sbb
sbb
pop
adc
adc
push
lcall
xor
sub
inc
inc
dec
jns
lea
pop
cmc
adc
sbb
xlat
add
mov
cmp
orb
cld
add
js
mov
sub
push
push
jp
mov
xchg
test
or
cli
sahf
dec
push
call
cwtl
cmp
push
mov
mov
pusha
inc
jns
notb
andb
jb
arpl
loopne
cwtl
mov
cld
sbb
and
sbb
mov
fucomi
lret
pop
fisttps
push
push
push
mov
shr
xchg
fmull
xor
push
jnp
fistpl
xor
pushf
rcll
jno
add
push
inc
mov
push
mov
adc
mov
inc
dec
out
add
dec
popa
jb
inc
rcr
outsl
out
fbld
mov
xor
or
mov
mov
xor
fwait
add
nop
repz
jno
je
xor
fmuls
xchg
push
ss
and
push
push
cwtl
jg
int3
and
cmpsb
scas
add
movsb
cwtl
xchg
fadds
lock
add
aas
pop
xor
pop
jecxz
movl
push
and
xchg
insl
jo
cs
xchg
sbb
outsl
and
loopne
push
sti
in
jge
jo
sahf
mov
sbb
movsb
xchg
mov
pop
lret
pop
xchg
adc
fs
lea
jae
mov
shlb
pop
dec
out
mov
sbb
fdivrp
inc
ret
and
leave
scas
insl
mov
sub
js
jle
xlat
push
dec
out
arpl
sbb
xchg
jmp
ds
test
xchg
icebp
push
add
lret
outsb
cmc
stc
das
imul
cmp
sub
mov
fisubrl
lods
cmovne
xchg
icebp
inc
xchg
or
cmp
loop
jb
repz
sbb
adc
push
cmc
pop
stos
ret
movsl
push
pop
mov
push
xchg
push
js
jnp
in
xor
data16
xor
mov
mov
movsb
out
xchg
inc
neg
inc
adc
inc
les
movsl
pop
pop
jns
jg
mov
fucomp
mov
and
addr16
adc
pusha
aad
add
orb
test
cmpsl
fdivs
and
iret
cs
or
dec
sbb
inc
pop
adc
mov
or
or
dec
gs
xchg
cli
pop
add
and
fldenv
test
pop
or
sub
jecxz
js
sbb
cmpsl
adc
mov
loop
sbb
xor
and
daa
mov
insl
out
ja
mov
xchg
adc
adc
std
push
xchg
xor
movsb
imul
sub
jecxz
cwtl
mov
xor
repnz
loopne
mov
push
rorb
jne
xchg
mov
jbe
sub
jo
aaa
leave
insb
jo
pusha
les
xor
stos
mov
inc
shll
bound
inc
mov
popa
testb
mov
pop
outsl
sti
in
loopne
inc
sarl
cmpsb
xor
jmp
inc
fidivrl
insb
cmp
mov
mov
inc
std
mov
xchg
movsl
test
mov
inc
fistpll
fidivrl
inc
sub
stos
scas
pushf
cmp
sub
pop
test
pusha
ja
push
andl
stos
mov
loopne
sbb
insb
mov
ljmp
in
mov
pop
enter
test
push
aaa
arpl
ror
cmp
stc
pop
in
inc
outsb
or
ja
fadd
hlt
cmp
cmpsl
rol
xchg
push
inc
in
adc
xlat
or
push
adc
sub
mov
in
incl
add
leave
or
loopne
mov
push
or
outsl
bound
ss
mov
js
stos
push
icebp
cmp
ljmp
xlat
mov
lcall
fsubrl
pop
sbb
in
lcall
add
pop
fwait
iret
push
nop
cmp
les
and
or
leave
shlb
or
xchg
imul
cs
push
in
xchg
lds
dec
popf
test
and
lods
es
ret
das
mov
jmp
inc
or
cmp
hlt
repz
jl
outsb
pusha
dec
dec
inc
orb
mov
iret
movsl
push
mov
jnp
in
addr16
jnp
arpl
adc
ret
shlb
mov
mov
bound
dec
mov
xor
imul
push
sbb
push
mov
ds
mov
sti
mov
inc
xchg
add
lret
iret
shll
mov
xor
push
sub
repnz
xchg
mov
push
negl
xor
xor
mov
cs
adc
cmp
aam
xchg
int
add
cs
test
test
fcoms
test
mov
movsb
xor
aaa
pop
xchg
test
out
fdivrp
ds
xorl
pop
int3
mov
gs
enter
and
push
lret
dec
pop
adc
pop
lods
fnsave
pop
push
mov
in
std
jmp
mov
xchg
push
xor
into
nop
mov
rcl
or
dec
xor
data16
xchg
scas
mov
inc
aaa
xor
sti
into
jg,pn
test
outsb
pop
outsl
cmc
cli
push
mov
daa
xchg
fists
repz
je
cmpsl
cmp
mov
inc
cmp
mov
mov
jne
loopne
test
xor
push
sbb
mov
xor
ret
test
lret
sbb
lahf
mov
popf
pusha
jle
mov
cwtl
xchg
dec
mov
mov
pop
leave
pop
ret
sbb
xchg
mov
jl
out
pop
daa
outsl
adc
in
or
or
mov
ds
ljmp
divb
xadd
jne
shrb
nop
pop
sbb
sbb
insb
out
hlt
ja
mov
subb
mov
push
or
ljmp
insb
ljmp
push
cli
sub
add
mov
pop
sti
cltd
xor
inc
dec
imul
dec
in
xchg
shlb
xchg
inc
xchg
clc
mov
mov
rcrl
or
jle
jge
mov
xchg
push
pop
mov
or
rcrl
int
js
or
jb
int3
fidivrs
fdivr
inc
psraw
cmp
push
dec
push
mov
jmp
aad
pop
mov
dec
aad
data16
sbb
scas
add
dec
stc
mov
push
dec
push
aaa
add
xchg
orb
mov
mov
ret
stos
adc
pop
xchg
xor
cmp
outsl
xlat
lods
xchg
mov
stos
push
addr16
adc
push
mov
inc
fadds
add
ja
xchg
jno
mov
lret
fpatan
pop
movsl
jae
dec
fstpt
mov
into
fildl
gs
and
idiv
into
loop
movsl
cmp
das
je
mov
sbb
adc
mov
push
pop
sbb
into
cwtl
add
mov
jnp
push
mov
and
push
mov
ffreep
les
mov
scas
or
xchg
jp
xor
push
lcall
and
in
sbb
xchg
popf
inc
dec
outsl
popa
scas
sub
mov
std
cs
aam
stos
out
std
sbb
scas
in
sub
pop
ljmp
cmp
jmp
and
cmc
shlb
push
add
xor
jmp
jg
mov
sbb
lret
imull
mov
iret
out
pop
pop
outsb
sbbb
inc
adc
outsb
add
push
and
inc
pop
pusha
adc
jmp
add
mov
mov
out
push
arpl
cs
jne
iret
dec
sbb
cmp
leave
mov
fstl
sub
outsb
jge
aam
shr
adc
sub
loopne
rcrl
and
dec
dec
es
andl
mov
mov
shll
movsb
loop
fmull
xor
test
je
lea
push
idivb
push
test
mov
test
lahf
or
sti
push
pop
idivl
pop
ret
xchg
lods
or
js
push
jg
fsubp
dec
jb
xor
lea
clts
jnp
pop
lea
insb
popa
je
loop
lock
iret
pop
mov
ret
jmp
in
test
or
ret
sti
std
xchg
shrl
or
pusha
pop
lods
xor
cwtl
xlat
adc
inc
ds
xor
jae
mov
or
cmp
add
and
fmul
push
or
push
lret
jo
dec
ljmp
inc
aad
jl
xchg
subb
mov
xor
and
mov
pop
mov
adc
icebp
push
or
out
mov
mov
mov
xor
fisubrl
xchg
inc
push
push
mov
in
in
inc
mov
xor
loopne
js
shrb
movsl
insl
fwait
and
mov
cmpsl
movsl
and
sub
fimuls
popa
in
cltd
jl
push
mov
stc
mov
xchg
cmp
add
dec
xor
sbb
jbe
stos
fstpt
jmp
and
add
or
mov
aaa
outsl
lret
pop
add
mov
loop
es
lods
sti
adc
mov
cwtl
dec
std
mulb
add
sub
mov
adcl
ret
xor
mov
in
insb
jmp
xchg
push
jb
ret
jo
faddp
rcrw
mov
push
imul
adc
repz
imul
xchg
imul
cmp
in
dec
mov
imul
jbe
andl
inc
out
scas
in
mov
shll
jb
or
fwait
lret
fistpll
fucom
and
xchg
out
and
push
jo
jno
inc
mov
std
pop
pusha
lds
call
fstl
jg
test
mov
cmp
inc
inc
out
pop
push
stos
clc
dec
sbb
mov
push
sub
sub
inc
sub
out
ljmp
pushfw
or
lods
or
jmp
xchg
jp
and
xchg
adc
or
enter
scas
sbb
inc
push
in
mov
mov
scas
add
lret
xor
and
push
sbb
jl
jbe
push
xchg
and
daa
repnz
or
jmp
ljmp
mov
and
fiaddl
push
mov
gs
arpl
inc
mov
ret
outsb
insb
inc
in
aaa
cmp
mov
and
xchg
lock
mov
or
data16
push
jecxz
cltd
clc
adc
shrl
cmpsb
jmp
jae
test
sub
mov
xor
mov
mov
sti
fsts
roll
imul
icebp
gs
dec
dec
cmpsb
dec
xor
adc
inc
push
in
fs
in
mov
adc
je
push
sub
add
enter
je
outsb
mov
mov
std
and
inc
add
mov
int
push
pop
pop
out
sbb
lret
hlt
shl
arpl
sbb
push
in
mov
orb
cmp
xchg
mov
iret
stos
addr16
gs
cwtl
pop
sub
dec
add
pop
leave
jb
pop
rcl
insb
in
in
fidivl
mov
data16
out
cmc
xchg
inc
jo
add
inc
add
pop
or
or
cwtl
mov
das
mov
fsubrl
xchg
lds
mov
xchg
leave
sahf
fidivl
push
push
xchg
jp
cmp
arpl
cmp
adc
and
in
xor
nop
in
outsl
into
push
cmpsl
in
movsl
div
jb
jge
in
jp
lcall
or
push
int
data16
mov
adc
cld
imul
ret
xchg
gs
fs
mov
sub
jmp
mov
adc
loope
xchg
pop
ljmp
dec
cltd
out
cs
add
fldl
rorb
and
and
js
inc
les
scas
adc
arpl
adc
jae
cs
sbb
and
xchg
lods
shll
call
lods
outsb
jns
inc
sbb
inc
lods
pop
mov
int
xlat
jl
jne
inc
lods
pop
jno
inc
call
inc
xor
pop
mov
sub
sub
mov
shl
adc
mov
fsubrl
adc
cwtl
lea
repz
outsl
push
xchg
and
gs
in
clc
dec
pop
and
cli
adc
pop
repz
inc
mov
fists
in
add
fbstp
sbb
aas
adc
fsubrp
cmp
sbb
inc
pop
dec
popa
push
stos
pop
test
sahf
inc
test
in
jge
insl
addr16
ss
jne
sbb
sar
frstor
repz
cmp
xchg
mov
pop
inc
jmp
xlat
adc
xor
fisubs
cltd
leave
jo
shlb
dec
jecxz
fildll
rcrb
pop
xor
mov
rolb
mov
nop
imul
cmpb
stos
movl
inc
inc
add
out
push
mov
xchg
aam
daa
sbb
in
test
sub
cmp
inc
sbb
inc
aaa
shll
adc
je
xor
das
out
outsb
pusha
icebp
pop
jns
test
push
cmp
xor
les
outsb
lcall
fiadds
stos
jmp
in
les
aad
pop
xchg
xchg
cmp
bound
call
or
repnz
clc
into
mov
lahf
ds
add
pop
mov
jno
cwtl
outsb
jmp
ficomps
test
cmp
fcomi
int3
daa
and
popa
pop
cli
xor
popf
lods
rol
fisubrl
inc
loope
jb
cld
in
jne
lds
in
lods
ljmp
imul
outsl
in
gs
test
adc
lods
pushf
insb
and
stos
ret
js
scas
lret
pop
jl
or
ljmp
xor
add
icebp
aad
in
cmc
roll
mov
inc
jno
popa
gs
jne
add
adc
loope
shl
roll
mov
inc
jno
popa
gs
jne
add
adc
loope
shl
rolb
mov
inc
jno
popa
gs
jne
add
adc
dec
dec
shl
mov
cmp
jle
mov
fimuls
xchg
int3
outsb
cmp
sub
sbb
or
jl
sub
pop
push
dec
out
mov
fimuls
fcompl
sub
sbb
or
jl
insb
push
pop
push
dec
out
mov
fimuls
fcompl
jo
insb
pop
or
cs
or
jo
mov
lcall
cmp
das
mov
jns
sbb
pop
push
jnp
pop
xlat
sbb
xchg
lea
jae
add
adc
arpl
xchg
cmp
or
pop
pop
xchg
mov
test
stos
loopne
stos
lret
addr16
cld
sub
dec
sbb
pop
imul
lods
movsb
popf
ficomps
or
sti
cmp
das
jle
lea
push
push
cs
and
cld
mov
lcall
and
jge
shrl
pop
pop
sbb
cmp
push
or
aaa
dec
out
add
sahf
dec
cmp
mov
jle
mov
dec
dec
sahf
dec
and
mov
fcompl
sub
sbb
or
jl
insb
push
pop
push
or
fidivl
lods
ljmp
inc
dec
jb
bound
adc
adc
mov
fwait
out
pushf
mov
scas
cltd
sti
ret
int3
int3
or
inc
dec
dec
pop
pusha
das
adc
bound
imul
in
fsubs
nop
mov
int3
outsb
cmp
sub
sbb
or
jl
insb
push
pop
push
dec
out
mov
fimuls
fcompl
sub
sbb
or
jl
insb
push
pop
push
dec
out
mov
icebp
pop
push
cmp
sbb
addr16
stos
push
dec
fisubrs
sub
outsb
bound
fcoms
inc
insl
divl
pop
cltd
idivb
cltd
xor
dec
icebp
sub
loope
add
dec
xor
movb
push
mov
cmp
push
mov
xor
mov
push
arpl
jne
es
loop
js
cmpsl
enterw
cmp
jne
sub
and
push
sub
imul
dec
sbb
pop
jge
out
sub
mov
mov
lods
shlb
call
and
jno
js
test
aaa
jne
addr16
pop
mov
loopne
xchg
imulb
xlat
mov
notb
popf
popa
mov
and
sbb
sti
insl
mov
dec
ja
pop
roll
and
fwait
in
pop
mov
mov
stos
es
ljmp
inc
dec
mov
xchg
dec
call
js
jl
jge
into
xchg
outsl
sub
xchg
testb
mov
and
jbe
rcrl
inc
call
cmpsb
mov
sub
pop
stos
sti
pusha
push
inc
in
repz
ja
fstl
out
dec
mov
dec
pushf
pop
jge
cmp
push
pop
push
sub
fs
cwtl
mov
mov
ficoms
jecxz
ret
stos
inc
cmpl
fmull
js
in
inc
outsl
jnp
stos
addr16
mov
mov
fisubrl
mov
aam
push
aad
rol
ficoml
sub
orl
push
movsb
mov
xchg
into
cltd
adc
xor
loope
test
mov
scas
inc
in
fidivs
jae
jb
insb
push
dec
add
pop
xor
aaa
pop
cmp
inc
enter
mov
bound
lods
add
fnstsw
call
dec
addr16
dec
fisttpl
sub
imul
cmp
dec
or
mov
xor
cmp
out
mov
int3
icebp
or
arpl
or
lahf
cmc
inc
icebp
js
je
mov
in
adcl
pop
or
pop
jg
repnz
outsb
test
lcall
into
or
sbb
cs
mov
imul
fistpll
mov
fndisi(8087
out
test
add
push
pop
or
int
sub
jmp
jle
jg
icebp
sbb
and
aaa
mov
cltd
mov
cmpsl
pop
inc
or
call
out
out
movsl
push
imul
mov
ljmp
ficoms
shll
add
jae
jne
adc
sub
xchg
jb
mov
outsb
std
xor
or
mov
pop
dec
iret
in
xchg
xchg
popa
popa
outsb
cmp
mov
bound
outsb
aam
or
mov
cmc
data16
movl
call
and
pop
pusha
and
fdivrl
movsb
lds
les
iret
and
or
jno
pusha
mov
cli
in
ret
dec
push
push
sbb
arpl
lods
pop
sub
or
jl
leave
jl
xor
mov
jne
dec
mov
mov
dec
inc
push
xchg
pop
xchg
inc
mov
je
sub
ja
out
xchg
insl
test
mov
je
xor
push
xor
jno
movsb
xor
sbb
adc
or
xchg
and
pop
inc
pop
dec
or
xlat
push
xchg
sbb
js
xchg
mov
add
call
dec
dec
and
xchg
into
inc
jle
out
lahf
loop
in
mov
loopne
xor
icebp
jbe
push
cmp
ret
cvtps2pd
out
hlt
add
stos
jmp
jmp
sti
bound
hlt
pop
mov
mov
inc
int
ds
mov
mov
mov
out
gs
xor
in
mov
outsl
fs
jle
jle
ja
sub
jne
fmulp
test
mov
dec
out
push
je
mov
jmp
bound
pop
das
movsb
insb
xchg
in
imul
mov
fmulp
xlat
out
jo
orb
add
out
sub
sub
out
pop
stos
negb
push
in
push
jae
jns
addr16
mov
inc
call
and
test
cmp
jmp
sbb
inc
mov
lret
xchg
xchg
popf
push
cwtl
rcrb
cli
jg
scas
jmp
jnp
lds
fcmovbe
leave
inc
rcl
loope
cmp
mov
fbld
fmull
or
test
test
stos
mov
adc
xchg
fstpt
pop
popa
xlat
and
jp
jns
xor
mov
clc
cli
pminsw
pop
std
sub
cmpsl
add
add
lcall
mov
xchg
loopne
push
mov
xor
repnz
fcmovnb
sub
aam
mov
jecxz
jle
les
cmp
stos
pop
ss
cltd
stc
shlb
cmp
adcl
lcall
arpl
sbb
cs
ret
jae
cltd
in
mov
cmpsl
lods
mov
imul
adc
bound
mov
clc
dec
arpl
decl
adc
adc
ret
cmp
repnz
inc
mov
loopne
jge
dec
lret
popl
icebp
and
cmp
sahf
sbb
jns
idivl
sbb
push
xchg
mov
arpl
loopne
pop
or
xchg
add
repnz
repnz
push
idiv
or
call
mov
mov
dec
cmpsb
fwait
push
cmp
jecxz
aad
push
fisttpll
sub
lods
sub
dec
pop
lock
in
mov
mov
mov
inc
dec
in
cli
push
xor
push
xor
imul
sti
aaa
sub
sub
loopne
in
in
stos
adc
dec
test
jl
mov
jp
ret
xchg
push
push
je
lods
sub
aas
daa
mov
pop
lret
repnz
cltd
into
out
cld
pop
in
std
xor
jns
dec
jg
inc
pop
or
inc
iret
dec
inc
movhps
cmpsb
scas
xor
or
ljmp
cmc
mov
hlt
xor
dec
xchg
xchg
pop
incb
sarl
loope
add
mov
push
out
jnp
mov
sub
xchg
jae
arpl
mov
pop
ret
mov
cs
jle
jmp
pop
mov
pop
push
mov
rcll
mov
stos
ficoml
cmp
push
aam
add
add
rol
mov
arpl
or
or
or
fsts
push
cmc
sub
or
fidivl
lea
dec
push
fistpll
mov
in
xchg
les
cmpsb
sub
add
ss
jg
pop
in
adc
stc
icebp
and
adc
jp
arpl
jl
and
cmpsb
ds
aas
shrb
hlt
cmp
insl
xor
push
shl
sti
das
iret
cmc
js
push
fisubrl
aam
add
or
push
or
aas
stc
dec
push
adc
test
mov
mov
push
fisubl
sbbb
aas
sbb
in
xor
ss
enter
mov
jb
jnp
cmpsb
lock
into
mov
mov
dec
aaa
out
mov
add
jns
inc
add
sbb
add
push
aaa
and
in
pop
loope
cli
imull
lods
jl
aaa
mov
dec
mov
fs
cmp
test
loopne
movsl
xchg
nop
sbb
xchg
jnp
cmp
push
jmp
lret
xchg
lret
mov
icebp
in
inc
xor
insl
jae
test
mov
cs
mov
ficoml
push
cmpb
jns
std
stos
roll
leave
je
in
stos
fdivs
lods
xchg
bound
cmp
test
rcl
loop
andl
dec
addr16
pop
int3
fwait
mov
mov
jge
sbb
test
mov
ret
push
mov
sub
jp
pop
icebp
fisttps
jno
inc
lock
fwait
popl
arpl
div
push
cmp
jae
mov
add
call
mov
das
dec
lods
or
pusha
mov
xor
cmp
fnstcw
jg
arpl
or
mov
out
or
push
aaa
cmp
fiaddl
test
pop
rclw
aaa
dec
mov
mov
pop
fucomi
inc
xchg
cmp
mov
fld
mov
mov
xchg
cld
mov
aad
movsl
xchg
pop
add
arpl
daa
int
push
cmp
adc
push
std
js
mov
ret
outsb
cld
and
and
jns
lea
sbb
adc
cmp
jmp
xorl
xor
fnclex
mov
cs
dec
daa
jo
mov
mov
push
mov
push
sub
or
fidivrl
iret
into
mov
js
ja
xchg
test
cmp
popa
and
je
and
movsl
mov
test
loope
loop
xchg
or
push
push
pop
inc
add
pop
inc
xchg
xchg
sub
dec
push
inc
testl
xchg
outsb
sub
idivb
int3
pusha
xlat
sbb
rclb
js
push
cltd
mov
pop
je
fwait
nop
out
addr16
push
and
push
lock
sahf
call
nop
cmp
lahf
xor
mov
add
sbb
ds
dec
into
das
xchg
mov
mov
lcall
pop
addr16
dec
int3
push
push
scas
pop
xlat
stc
pushf
adc
push
inc
stos
cwtl
lss
push
movsl
jg
or
stc
mov
cmp
xchg
jl
jno
or
mov
sti
cmp
es
sub
cmpb
rcll
lods
sti
testb
out
int3
repz
sub
scas
push
jns
inc
inc
out
out
fsub
mov
and
punpckhwd
mov
cmp
popf
xor
cltd
xor
cltd
scas
sahf
pop
ja
fimull
lock
scas
pop
sbb
push
push
sbbl
inc
mov
xchg
int3
inc
jbe
sub
inc
lcall
shrd
lahf
mov
and
mov
cli
xchg
pop
mov
es
or
push
out
popf
int
roll
add
mov
push
sbb
insb
xor
movsb
rcll
popa
daa
sub
add
mov
cmpsl
fmull
aas
jecxz
cmp
pop
pop
fiaddl
and
sub
into
mov
mov
fbstp
mov
jae
or
lock
das
mov
cmp
sub
inc
add
rorb
in
mov
pop
and
or
cmp
das
in
add
push
stos
mov
ret
lret
hlt
test
add
cmp
or
rcll
stos
mov
je
xor
arpl
xor
das
test
dec
stos
cmp
lods
cmp
lcall
xorb
in
scas
jmp
add
xchg
lods
xor
mov
jle
popl
daa
rcrb
jle
mov
cld
cli
xchg
inc
lcall
out
and
mov
lahf
xor
dec
jecxz
adc
or
cmp
shlb
pusha
xchg
adc
lcall
pop
push
fs
or
in
mov
inc
fstl
and
xchg
mov
jge
cmpsb
mov
shll
sti
pushf
sbb
negl
insl
lods
fdivrs
dec
add
loopne
mov
loopne
mov
or
mov
jae
xchg
fistpll
sar
dec
push
pop
loope
mov
push
dec
adc
aas
pop
cmc
pop
rcl
mov
clc
sbb
cmp
ja
ficoms
cmpl
push
jbe
push
cmpsl
dec
pop
mov
adc
jmp
xor
pop
inc
int3
jbe
pusha
lret
or
mov
sub
dec
arpl
dec
or
mov
mov
mov
jbe
jg
cli
mov
leave
cld
add
inc
add
repz
call
xchg
addr16
sub
inc
sub
cmp
sub
sub
daa
or
push
adc
xchg
sbb
lcall
fucomp
push
push
mov
mov
pop
outsb
cwtl
cmp
ds
mov
fs
adc
in
pop
inc
mov
pusha
sub
mov
addr16
call
xchg
jno
mov
pop
cmc
xlat
mov
push
test
xor
jae
adc
icebp
iret
mov
dec
inc
xlat
scas
repz
orb
mov
cmp
lret
das
mov
insb
push
cmp
sbb
cld
inc
ss
andb
idiv
push
pop
push
stos
aas
movsl
sub
loope
xor
cwtl
ds
adc
je
loop
jp
mov
cmpsl
andl
stos
cmp
lcall
lcall
cmp
cmpsl
fidivl
dec
add
and
pushf
js
push
mov
outsb
sub
jno
jecxz
repz
lea
iret
mov
psubq
ret
aas
lock
ljmp
or
loop,pn
loopne
enter
inc
aad
jb
and
mov
testb
dec
mov
mov
jbe
cmpb
lret
cmp
adc
aaa
xchg
inc
mov
imull
pushf
jb
and
dec
in
mov
jno
or
mov
ret
dec
or
push
cmc
add
sub
imul
or
cli
stos
add
call
out
push
xchg
add
mov
cmp
xchg
mov
jns
pop
cmp
or
mov
pop
mov
xor
pusha
aad
jp
sub
ja
stc
js
push
mov
mov
or
decl
aaa
mov
mov
lock
xchg
dec
inc
clc
or
mov
mov
push
cwtl
loopne
lock
and
push
mov
and
pop
mov
dec
push
add
xchg
xchg
mov
dec
in
adc
mov
scas
movsl
xchg
sbbb
rcrb
es
mov
xor
repnz
and
mov
bound
xchg
mov
adc
arpl
or
leave
fadd
popa
pop
in
inc
cmpsw
xchg
sub
test
mov
js
loopne
in
into
shr
lods
les
outsb
into
aaa
cmpsb
sub
and
nop
cmp
xor
cmp
cwtl
fcmovnb
jne
scas
jge
and
aad
call
faddl
rcrl
mov
dec
or
adc
xor
and
pop
cwtl
scas
daa
mov
repz
pushf
xchg
mov
je
inc
cmc
into
cwtl
mov
inc
mov
jno
mov
inc
xchg
adc
mov
out
mov
xor
jmp
jns
sub
lds
push
imull
test
jne
jecxz
div
inc
mov
ror
pop
outsl
jle
dec
dec
pop
fidivrs
mov
mov
xor
push
test
sahf
andl
sti
int3
cmp
and
jge
out
adc
lock
js
add
inc
sub
insb
ficomps
ljmp
ds
je
or
ficomps
jmp
add
xchg
cld
repz
or
sbb
mov
repnz
mov
inc
xor
xchg
jl
dec
movsl
adc
sahf
adc
cmc
lret
dec
jle
mov
fwait
xchg
xchg
int
mov
jbe
insb
pop
in
stos
lret
add
fwait
and
js
push
cmp
int
or
push
xlat
adc
add
scas
je
popa
or
mov
xor
js,pt
popa
inc
dec
pusha
hlt
push
int
mov
test
popa
movsl
jne
popa
out
push
aas
test
or
add
mov
test
or
mov
cld
adc
adc
dec
push
mov
notl
jg
push
push
outsb
test
test
aaa
imull
fmull
vpshufd
and
push
in
cs
mov
dec
pop
data16
je
and
pop
xchg
push
fcmovnbe
and
adc
adc
leave
popa
mov
xor
or
mov
fcmovnbe
mov
push
dec
xchg
mov
push
jg
cmp
mov
push
mov
outsb
leave
jmp
add
adc
andl
push
fldenv
push
push
fistpll
mov
sub
rcl
rorl
or
cmpsb
ss
mov
adc
out
and
addr16
xlat
in
idivb
mov
test
pusha
movsb
jmp
addb
repz
xchg
pop
inc
jg
aaa
fcomp
adc
inc
jg
jnp
xor
aad
flds
popl
jg
pop
xchg
inc
fimull
mov
inc
vcmppd
push
lret
popf
daa
movsl
adc
or
mov
xchg
sub
call
js
sub
dec
or
jl
aas
or
cmp
push
icebp
or
fsubr
jl
loop
or
mov
push
xor
mov
mov
roll
adc
lods
xor
sbb
jo
data16
fimull
fiadds
sbb
aam
arpl
mov
pop
xorl
mov
sbb
jge
sbb
std
out
test
shrb
sub
adc
cmpsb
inc
xchg
mov
shlb
sti
push
aas
int3
loopne
and
imul
les
mov
enter
dec
mov
cmp
ret
xchg
ljmp
insl
sub
xor
cld
inc
inc
sahf
enter
pop
cmpsb
add
lds
pusha
mov
stos
add
rcll
xchg
cli
js
jl
mov
insl
sbb
xor
fmuls
in
int3
add
lcall
push
mov
fisttps
lahf
aaa
and
mov
int3
xchg
jecxz
cld
std
mov
gs
out
mov
leave
pusha
outsb
call
les
mov
lret
mov
inc
add
enter
push
or
sti
xchg
call
xor
mov
test
add
insb
sarl
mov
xor
pop
mov
dec
push
add
or
loopne
cwtl
adcb
push
push
mov
pop
out
jl
mov
sbb
pushf
dec
mov
mov
xlat
inc
adc
popa
cmp
incl
rclb
test
lret
insb
mov
dec
inc
testb
dec
subb
int3
xchg
in
in
jae
enter
push
or
xchg
xchg
push
cld
fcomps
iret
adc
cmp
xchg
addb
shll
in
and
pusha
out
push
sarb
iret
sahf
cmp
jo
mov
fstpl
mov
scas
mov
scas
flds
adc
push
idiv
xor
mov
inc
mov
shll
push
dec
stc
aas
sahf
sbb
lock
popf
push
daa
stc
adc
iret
out
std
sbb
aas
mov
neg
dec
fwait
imul
out
sbb
mov
mov
rcll
ds
sub
mov
mov
mov
push
cli
call
lcall
mov
push
dec
test
xchg
adc
test
test
push
mov
and
loopne
sti
adcl
mov
dec
cmp
ret
and
xchg
push
xchg
loopne
adc
sti
pushf
xchg
std
push
cli
js
mov
call
test
ret
es
cmpsb
xlat
mov
hlt
cwtl
ret
jp
ds
dec
subl
xlat
xchg
repnz
mov
repnz
sbb
cs
pushf
popa
jne
and
jae
push
icebp
xchg
sub
gs
bound
addr16
or
mov
jne
int
mov
or
xchg
jo
jo
sbb
negl
dec
cmp
pop
rep
out
rcrl
outsl
dec
add
add
dec
jns
push
arpl
dec
into
pop
fcmovnbe
test
out
shll
sub
das
lret
and
insl
cmp
je
and
add
add
popf
mov
subl
mov
test
jecxz
fs
repnz
out
popa
int
call
or
lds
loope
scas
ja
aad
mov
push
inc
mov
or
xor
xchg
cmp
lahf
movsl
mov
das
sbbl
movsl
dec
dec
pop
jmp
ficoml
add
jb
mov
xchg
fwait
cli
inc
movsl
xlat
sbb
push
pop
test
shr
aam
popf
pop
mov
push
sub
frstor
leave
sub
adc
xchg
sbb
push
push
xor
xchg
mov
outsb
jo
or
jg
es
cwtl
ja
mov
out
sbb
in
out
xchg
lahf
push
test
fwait
mov
or
test
mov
icebp
inc
aad
mov
mov
es
cmp
mov
sbb
xor
mov
rorb
lcall
lea
jo
pop
dec
sbb
pop
and
inc
fwait
sahf
scas
lret
bound
mov
cmp
mov
push
adc
dec
cwtl
sahf
add
addb
lods
iret
popf
fimuls
fcompl
sub
sbb
or
jl
insb
push
pop
push
dec
out
mov
fimuls
fcompl
sub
sbb
or
jl
insb
push
pop
push
dec
out
mov
fimuls
mov
push
int3
outsb
cmp
sub
jge,pn
insb
push
pop
push
dec
out
mov
fimuls
mov
outsb
ret
jle
in
pop
jnp
hlt
dec
xchg
jle
outsb
mov
xchg
or
dec
sub
out
jecxz
pop
or
push
lcall
scas
leave
mov
sbb
jle
dec
sub
cs
mov
push
imul
mov
mov
sar
sti
into
jmp
add
adc
out
pop
inc
adc
arpl
imul
xor
lods
movsb
xlat
cmpsl
cli
mov
adc
cmp
or
dec
mov
adc
xor
sahf
rcll
xor
lret
fcmovb
lcall
loop
das
dec
ret
pop
push
lret
mov
into
mov
adc
in
idivl
push
insl
jo
jge
push
lock
xchg
int3
arpl
inc
es
fisttpl
jmp
sbb
movsb
cs
push
test
push
adc
mov
and
lret
inc
jo
jmp
dec
jnp
xchg
mov
lret
fwait
push
fwait
mov
pop
fisubs
std
lret
mov
repz
jmp
jl
aam
movsb
imul
fs
push
xchg
xor
sahf
scas
cwtl
inc
sti
mov
sbb
outsb
adc
dec
cs
jnp,pt
jb
subb
mov
adc
loope
jmp
ja
outsb
jle
or
sub
jnp
test
mov
fcmovnb
scas
lret
xchg
je
push
push
das
pop
jnp
inc
dec
or
fmuls
ljmp
out
cmc
jle
cmp
inc
cmp
jnp
imul
out
mov
mov
scas
lret
mov
sbb
jle
dec
sub
cs
jnp,pt
imul
out
mov
mov
scas
lret
mov
sbb
test
aaa
mov
sbb
mov
test
je
int3
lahf
scas
mov
test
pop
or
jge
fsubr
outsl
int3
adc
or
pop
popa
in
xchg
iret
xchg
mov
dec
nop
inc
hlt
push
fcoms
fimull
ds
out
or
push
std
cmpsb
cs
pop
pop
fmuls
ja
cli
ficoml
subl
scas
ffree
or
push
push
jecxz
into
mov
fwait
adcl
cmpsl
inc
jbe
mov
scas
xor
jge
sub
lcall
inc
pop
shll
push
pusha
pop
movsb
mov
test
test
jbe
push
add
dec
out
popf
test
add
cmp
cmp
repnz
outsb
mov
hlt
cs
mov
lahf
ret
mov
sub
lock
cld
push
pop
or
mov
shr
cmp
lods
sub
jge
inc
dec
sar
push
jmp
pop
repnz
loope
jae
add
mov
adcl
mov
sarb
cmp
add
loope
pop
jae
push
push
loopne
ljmp
or
push
and
mov
push
je
pusha
pusha
das
lret
xor
xlat
enter
add
or
dec
imul
std
dec
or
fs
jae
xchg
or
jne
pop
aaa
add
es
enter
pop
inc
cwtl
pushf
mov
jno
jp
mov
ljmp
fs
sti
xor
cmp
push
mov
and
xor
xchg
punpcklbw
add
outsb
add
dec
stc
cmp
nop
jae
insb
lds
cmpsl
outsb
mov
insb
cmp
add
mov
jno
daa
jg
fcomi
fisubs
mov
fstp
mov
data16
mov
xor
adc
adc
mov
push
or
shl
rorl
mov
lret
lock
or
pushf
aam
fmulp
lea
movsl
push
cli
mov
and
push
ss
jnp
sbbb
adc
inc
leave
cmp
lahf
xchg
pop
mulb
out
fwait
pop
inc
out
pusha
jl
mov
sbb
sarb
sub
ret
divb
aas
insb
cmp
fldl
add
mov
les
dec
xchg
int3
mov
push
shll
inc
mov
out
inc
add
rcr
push
out
inc
fimuls
orb
cmp
sub
enter
or
cmp
jmp
rorl
xorb
ret
and
sahf
push
mov
insb
and
loope
and
push
addr16
test
mov
mov
or
lahf
or
sub
icebp
sub
outsl
lods
jecxz
or
dec
sub
inc
dec
test
in
arpl
or
pop
or
xchg
mov
rcr
stos
cwtl
pop
push
jle
lret
inc
xchg
stos
in
and
pop
push
and
mov
jge
mov
test
orl
pop
jno
dec
rclb
dec
and
sbb
movzbl
hlt
mov
shr
push
inc
out
xlat
rcll
pushf
add
cmp
jl
jno
das
out
adc
mov
sub
stos
popf
test
xor
dec
and
push
or
rcll
jo
mov
mov
jge
cmp
push
and
fucomi
mov
stc
mov
pop
nop
pop
lret
dec
or
lret
lcall
cmp
jbe
pop
mov
out
push
aas
hlt
mov
sbb
xchg
xchg
or
ljmp
jae
cmp
push
and
addr16
pop
sahf
in
pop
push
dec
xchg
call
das
ss
push
inc
jb
mov
jo
dec
xchg
vpcmpgtb
imul
fs
dec
and
shlb
and
push
add
ret
faddl
sub
fwait
movsb
xor
push
xchg
mov
loop
lret
sub
lret
xor
adc
and
push
lcall
push
xchg
inc
sbb
xlat
rol
mov
in
fstps
fs
xchg
fwait
test
adc
inc
or
mov
scas
aaa
je
push
js
out
xor
xor
push
into
out
dec
gs
jns
aas
add
outsb
shll
cld
aad
test
push
xor
movsl
loop
aam
xor
jp
mov
sub
fidivrl
push
push
push
xchg
pop
mov
cmpb
std
call
xchg
subb
add
cld
test
out
les
aas
jl
jns
pop
in
or
fwait
xchg
testl
pop
jns
or
fistpll
dec
jp
xchg
mov
insl
outsl
arpl
mov
mov
push
in
inc
loopne
inc
push
enter
dec
out
sbb
pop
mov
mov
jg
cmp
push
emms
pop
push
push
sub
les
cmc
add
add
jg
push
cmp
xchg
lret
add
ret
in
repnz
pop
sbb
out
mov
into
xchg
mov
cltd
sbb
and
ret
or
hlt
or
repnz
pusha
fsubs
aam
call
inc
stos
fists
jnp
fs
xor
je
in
lods
or
in
push
xor
repnz
enter
mov
dec
xchg
out
pop
rclb
cli
push
les
xchg
mov
pop
mov
and
mov
aas
or
jge
rorl
jecxz
cli
adcb
inc
mov
loopne
movsl
sbb
pop
sub
pop
adc
push
jns
mov
cltd
xor
mov
inc
test
jl
es
inc
adc
int
and
and
mov
xor
mov
jmp
adc
pop
notb
roll
cwtl
jp
test
push
hlt
xor
lahf
or
jnp
jns
inc
push
fs
xlat
repz
add
adc
jno
aam
jmp
mov
js
icebp
push
ds
and
inc
lods
pop
fdivrl
arpl
fstp
and
sub
arpl
xor
sbb
ljmp
lock
jnp
push
mov
jge
and
pusha
cli
bound
ret
mov
sub
sbb
and
add
push
xor
push
cmpsl
push
jnp
jae
push
mov
cmc
icebp
fs
out
or
mov
js
shlb
lds
outsb
push
insl
xchg
lret
cmp
adc
xor
lock
mov
in
out
pop
test
shll
mov
xor
jo
rcrl
popa
mov
ja
mov
dec
sbb
push
test
in
fstp
ljmp
in
or
pop
bound
push
dec
orb
je
push
push
int
and
jno
bswap
dec
call
in
and
mov
inc
test
add
loope
ret
ror
mov
iret
mov
lods
xlat
outsl
xor
mov
push
xchg
adc
push
in
add
clc
push
mov
xchg
lds
jns
mov
sbb
jo
jbe
cmpb
xor
push
pusha
xchg
pop
xchg
push
std
cmc
sti
add
in
out
sub
ss
or
fnstsw
popf
gs
inc
cmp
or
in
dec
ret
fcompl
pop
in
test
aas
loope
inc
insl
pop
adc
dec
cltd
add
lea
ljmp
loope
roll
test
push
xlat
repz
mov
daa
out
xchg
jbe
jne
nop
push
jnp
loop
mov
jecxz
lret
sub
jns
sbb
and
adc
add
and
inc
iret
or
inc
jl
fisubl
or
jge
in
push
mov
xlat
adc
cmpb
mov
mov
xor
mov
push
push
fwait
jl
sbb
inc
adc
xor
jno
and
aam
mov
call
into
ficompl
cmp
sub
popa
lods
popf
push
push
xchg
loope
push
jmp
sbb
jecxz
stos
repz
filds
dec
fcoml
adc
test
push
fs
divl
in
xchg
cs
fadds
imul
sbb
xchg
pushl
pop
ss
enter
leave
push
adc
je
jle
in
fbstp
lods
xchg
push
pop
cmp
movsb
xchg
fxch
cmp
outsb
iret
dec
stos
or
and
fs
mov
jbe
pop
adc
mov
leave
pop
mov
ret
sbb
mov
stc
nop
lcall
cmp
loopne
jns
cmpsl
adc
imul
cmpsb
adc
rcll
pop
and
xor
gs
ret
insl
xlat
aaa
pop
nop
stos
pop
scas
xlat
and
adcl
je
pop
dec
das
lods
out
test
cmc
addr16
daa
mov
lret
mov
sbb
lods
cmpsb
push
push
push
gs
fidivrl
push
push
xchg
jno
and
aad
pushf
mov
adc
sbb
or
dec
or
mov
sahf
xchg
fdiv
mov
add
pop
pop
ret
rcrl
lds
and
sub
lahf
addr16
mov
sub
ror
or
pop
leave
pop
push
je
in
add
mov
push
call
stc
loope
and
cmp
sub
aaa
mov
mov
cmp
push
enter
mov
das
pop
or
lret
mov
xchg
pop
das
pop
lar
rcll
pop
mov
jno
ret
push
icebp
lret
and
nop
xor
xchg
int
sub
push
lods
mov
jae
jo
cmc
pusha
mov
leave
adc
jmp
mov
add
das
jmp
mov
add
and
xor
loope
lret
mov
mov
in
mov
mov
cs
pop
cmp
roll
ss
fcoml
or
icebp
dec
nop
mov
sub
dec
cwtl
adc
inc
out
xlat
inc
nop
stos
jmp
sahf
and
out
push
xor
cmp
icebp
fstl
cli
fdivrl
ret
add
call
xchg
arpl
cmp
sbb
mov
xor
push
mov
movsl
mov
cmc
das
xchg
mov
int
mov
ljmp
andb
fisubl
hlt
cmpsl
fs
enter
gs
hlt
add
inc
test
lahf
mov
add
add
movb
je
xor
adc
and
scas
daa
loope
inc
jl
mov
cmp
add
mov
mov
out
pop
push
sbb
xchg
sbb
arpl
enter
cltd
cmp
jge
adc
cs
test
in
pop
outsl
movsl
mov
aam
shll
push
jl
jle
nop
pop
into
mov
mov
sub
push
xchg
fcmovbe
dec
pop
daa
mov
jle
jl
adc
in
pop
cwtl
lods
mov
cmpsl
or
xor
add
xor
dec
and
pop
aad
shll
jecxz
jno
das
movsl
rorl
cmpsl
adc
push
push
inc
sub
sarb
mov
rclb
inc
cld
lds
int
sarb
lea
pop
and
in
cmc
add
rolb
push
add
jecxz
mov
inc
mov
pop
mov
jns
cmp
jge
rcl
cmp
cs
mov
dec
out
inc
stos
sbb
xchg
jo
fiadds
pop
ja
mov
and
imul
movsl
adc
mov
in
mov
daa
out
or
pop
and
mov
jle
xor
mov
outsl
lcall
adc
iret
cwtl
add
sar
and
stos
mov
sbb
jle
shlb
sbb
scas
mov
fmuls
add
stos
fimuls
dec
ds
iret
inc
mov
rcrb
orl
jae
jecxz
imul
gs
loopne
shr
cmp
adc
fmuls
call
fisttpl
mov
shlb
add
mov
mov
mov
and
cmp
cwtl
outsb
xor
or
orb
out
push
jle
stos
cmpsl
mov
push
push
aad
dec
jbe
stos
or
sti
popf
sbb
inc
fsubl
inc
cli
jl
dec
insb
dec
mov
fcoms
push
push
cmpsb
adc
jge
mov
sub
xor
push
popl
lret
lea
test
push
push
or
mov
jo
sub
inc
lods
sub
jle
in
mov
sbb
and
cmpsl
aam
lods
outsb
stos
stc
and
and
loopne
jne
push
mov
add
sub
aaa
jbe
fsubrl
std
push
push
sub
jae
idivl
sbb
jp
mov
mov
ljmp
jo
in
arpl
and
adc
push
jmp
mov
je
pop
cmpsb
jmp
fiaddl
dec
mov
ret
mov
insb
and
cli
inc
popl
insl
mov
lds
pop
push
aam
inc
shlb
imul
fbstp
addb
scas
adc
pop
mov
adc
dec
push
testl
sbb
fildl
cmpsl
int
xchg
xchg
cld
jl
mov
js
pop
incb
rcl
out
leave
test
popa
mulb
ja
gs
ret
aas
mov
inc
cmp
imul
es
fiaddl
int
and
and
das
data16
lds
shrb
addb
pop
in
inc
cli
jmp
outsl
arpl
es
or
fisubl
cmp
sub
xor
int
rol
cmc
jne
sub
xchg
and
xor
push
popf
mov
popf
jle
sbb
mov
mov
xlat
xor
andl
mov
xor
in
xor
aam
and
push
test
insl
cmp
dec
in
xchg
sbb
insb
cmpsb
mov
sbb
ret
popf
sahf
cmp
sar
jno
aam
lret
add
stos
mov
xchg
and
dec
xchg
sbb
imul
or
lea
fxch
push
out
ljmp
repnz
adc
xchg
dec
fisubs
xlat
std
and
xchg
enter
dec
das
pusha
sbb
xchg
cmpsl
loop
xchg
es
lret
adc
xchg
mov
aaa
insl
mov
and
lods
add
sub
loopne
hlt
jns
fs
add
mov
inc
push
sbb
cmp
aad
pop
and
dec
loope
mov
mov
shll
inc
adc
insl
xor
sbb
pop
insl
mov
mov
cmp
mov
mov
clc
rorb
mov
fdivr
out
ret
xlat
push
sub
mov
jle
mov
test
inc
sbb
fldt
add
test
lods
or
outsl
lcall
into
mov
and
bnd
pop
sub
pushf
scas
enter
int3
jmp
sbb
scas
cs
pop
rclb
shll
cmp
adcl
pop
int3
mov
outsl
jbe
xchg
iret
inc
inc
dec
jmp
xor
mov
push
out
add
iret
jbe
int3
jge
fidivl
xchg
sbb
add
loopne
imul
pushf
scas
push
std
push
xchg
mov
mov
xchg
je
hlt
loop
push
cmpb
pop
outsb
jle
jecxz
ret
js
pushf
aaa
or
pushf
xor
push
imul
xor
js
xor
mov
sbb
fmull
or
xor
test
js
xor
nop
push
mov
lret
lock
cmpsb
dec
gs
incb
cmp
fdivs
insb
pop
push
fisubrs
sbb
jmp
cmp
xchg
or
cmpsl
lods
adc
jg
jns
adc
sbb
cltd
sahf
pop
xorb
es
loop
ret
inc
push
cld
push
fisubl
xor
push
loop
dec
sub
rcrl
add
fsubrs
loopne
sub
dec
ds
mov
sub
xchg
mov
pop
sub
mov
add
sbb
js
out
int3
or
adc
outsl
add
aam
sub
loop
jne
cs
setae
push
movsl
mov
cmpl
stc
ret
jae
or
lahf
mov
mov
sub
adc
dec
push
xchg
lahf
outsb
and
dec
insb
adc
jb
push
xchg
scas
out
pop
outsb
leave
mov
pop
pop
mov
push
xchg
sbb
leave
push
adc
inc
jp
rolb
bound
dec
mov
adc
or
mov
xchg
sub
outsl
daa
mov
or
mov
nop
js
mov
mov
mov
ja
adc
cmpl
push
les
jne
ret
lock
pop
in
lahf
je
lock
adc
into
js
popa
xor
sbb
je
icebp
out
jbe
mov
stos
dec
add
in
sub
jae
mov
mov
add
sub
insb
xlat
sti
insb
clc
add
fdivl
pop
insl
and
and
inc
lret
daa
jg
insb
push
mov
mov
rcrb
shlb
sahf
rcrb
add
cmp
mov
dec
sti
xchg
mov
scas
jmp
mov
dec
cld
adc
adc
and
pop
inc
outsl
andl
inc
jne
xor
jb
jle
jg
sarl
aam
int
pop
xorl
inc
sbb
mov
push
fldcw
inc
sub
xchg
outsl
sarl
cmc
adc
jb
cld
inc
lret
add
jge
mov
ficoml
mov
adc
add
pushw
movsb
cmp
cmp
cltd
xor
sbb
outsb
jns
fadd
mov
fstpt
shl
sbb
push
sub
cmp
xchg
aaa
or
cmpsb
push
in
roll
adc
jbe
jnp
decb
pusha
hlt
icebp
icebp
add
or
pop
jb
stc
jne
xor
mov
and
repnz
in
das
rcr
dec
sarl
adc
sbb
mov
inc
fwait
loope
adc
test
jne
arpl
xchg
scas
and
fs
adc
push
pop
or
mov
in
dec
scas
nop
imul
lahf
and
xchg
cli
ja
cmp
mov
imul
xchg
clc
push
mov
ss
fisubl
sub
ds
leave
scas
cld
jne
cs
call
fisubrs
mov
fstpl
je
addb
pop
arpl
xor
cmp
in
pop
fisubrl
aam
inc
cmp
out
aam
sub
jge
dec
adc
mov
sbb
ds
movsl
pop
lds
stos
dec
inc
ds
adc
xor
xor
xor
sbb
pop
add
ljmp
xchg
push
loopne
cmc
loop
stos
shlb
ljmp
mov
or
in
pop
adc
out
mov
inc
cld
fisttps
xchg
iret
and
xchg
sbb
jp
pop
adc
mov
sbb
orb
inc
push
dec
add
mov
xchg
lods
stc
mov
insb
dec
mov
icebp
scas
sub
add
out
repz
xchg
sub
fstl
push
aad
imul
std
pop
inc
lds
cs
cmp
or
xchg
mov
jl
insl
gs
jnp
popf
or
xchg
pop
shlb
jno
loop
in
mov
repnz
jbe
scas
out
aaa
aaa
sbbb
mov
and
adc
enterw
xorb
jne
jae
aad
mov
dec
das
cs
sub
jbe
je
dec
xchg
or
cli
pop
sub
xchg
xorb
push
lods
dec
repz
cld
and
cli
and
push
mov
in
fwait
xor
or
in
mov
and
jl
push
mov
out
mov
inc
fisttps
cs
jmp
mov
push
syscall
xchg
push
adc
adc
pop
inc
lea
mov
adc
fmuls
mov
mov
jae
aaa
mov
fs
std
lods
cmp
dec
scas
gs
jno
jge
icebp
inc
rol
mov
mov
mov
or
enter
sub
lahf
je
xchg
mov
dec
les
bound
push
adc
or
or
lahf
cs
mov
cmp
mov
dec
hlt
dec
cmp
lods
enter
inc
ficoms
xchg
xchg
sbb
or
sbb
add
cmc
je
adc
dec
cmp
clc
cmp
mov
je
stos
push
mov
dec
dec
movsb
pop
out
mov
fldenv
rolb
shlb
fbld
dec
mov
dec
jae
jecxz
jmp
iret
push
rolb
mov
ucomiss
inc
leave
jbe
dec
pop
imul
mov
mov
adc
shl
dec
mov
pop
pop
cs
jnp,pt
imul
out
mov
mov
scas
lret
mov
sbb
jle
dec
sub
cs
jnp,pt
imul
out
mov
mov
scas
lret
mov
sbb
cmp
sub
cs
xchg
jnp
imul
ss
mov
scas
lret
scas
jmp
jle
dec
sub
cs
ds
mov
push
adc
into
stos
test
add
adc
scas
push
mov
data16
cwtl
gs
cwtl
cmp
out
xchg
jg
dec
mov
cmpsb
scas
push
mov
out
push
incl
iret
fistps
aas
psadbw
out
cli
jle
dec
mov
cmpsb
scas
push
mov
out
push
incl
iret
fbld
das
sbb
jg
jp
outsl
ret
or
ss
and
mulb
ss
and
push
lods
out
adc
add
shl
xchg
cmpsl
cmp
inc
into
jo
xorl
aaa
sub
mov
loopne
cmp
push
notl
aad
in
pusha
mov
lds
dec
pop
scas
lcall
xor
scas
adc
xor
pop
fildll
mov
out
jb
push
aas
xchg
jg
mov
aam
cld
and
push
or
jmp
sahf
fisttps
sub
mov
mov
pop
pop
xchg
roll
mov
pusha
les
je
imul
arpl
jp
decl
jne
mov
pop
mov
push
mov
out
push
incl
iret
fbld
das
aas
psadbw
out
xchg
jg
dec
mov
iret
lret
pop
leave
jbe
data16
outsl
mov
scas
pop
jl
pop
xchg
jmp
iret
das
call
in
adc
data16
dec
mov
inc
pop
popf
pop
mov
cwtl
clc
sbb
enter
leave
add
add
fbld
das
aas
psadbw
out
xchg
jg
dec
mov
cmpsb
scas
push
mov
out
push
incl
iret
fbld
das
aas
psadbw
out
xchg
jg
dec
mov
cmpsb
scas
push
fisubrs
adc
or
fs
aas
in
pop
xor
dec
add
or
or
mov
pop
iret
loopne
shlb
mov
out
or
dec
push
pop
das
test
push
mov
pop
mov
dec
ret
sti
jle
adc
adc
loopne
mov
lcall
push
movsb
shll
adc
out
pop
sbbb
cs
lea
fdivl
xor
leave
mov
inc
dec
or
nop
data16
jle
clc
inc
mov
int
pop
inc
mov
xchg
cld
pop
mov
sub
cmpsl
mov
ret
xchg
push
fwait
je
cmpsb
and
daa
xchg
push
sbb
clc
pop
cmpsl
or
ja
outsl
subl
shr
mov
xchg
xlat
outsb
push
jo
adc
test
aaa
lret
xchg
movsb
stc
dec
xchg
pop
add
aam
mov
fcmovnb
mov
pop
cmp
ljmp
imul
test
xchg
js
cmp
test
cmp
aad
jb
and
scas
mov
xor
xor
push
addr16
insb
mov
rcll
adc
mov
dec
fsubs
inc
and
and
xchg
push
add
xchg
mov
sbb
push
fwait
xchg
sub
cmpsl
sbb
mov
inc
fwait
sbb
scas
movsb
or
aad
cmp
mov
mov
lahf
lahf
iret
mov
nop
pop
and
aad
xchg
cmc
sbb
frstor
xchg
arpl
repnz
adc
mov
inc
test
xchg
jne
mov
lods
add
mov
adc
adc
ds
roll
dec
test
out
inc
cld
stos
les
sbb
mov
cmp
pop
sbb
sbb
ljmp
sti
aam
fisttpll
js
lods
xchg
lret
lods
imul
push
jecxz
loopne
cmpsb
out
pop
xor
rclb
xchg
in
call
dec
xchg
xchg
scas
push
insb
push
cli
xchg
and
scas
stos
cmp
xchg
notl
sahf
test
fdiv
pusha
daa
sbb
xchg
jmp
lds
orl
lcall
test
int
clc
jge
jmp
iret
mov
sbb
lahf
cltd
loope
outsl
jl
enter
loop
daa
sbb
jle
or
push
aas
push
inc
int3
jns
out
out
in
jb
cmp
imul
lds
jae
push
movsb
or
sti
inc
ret
ret
mov
test
popa
jg
gs
clc
std
rorb
add
or
out
dec
fisubrs
icebp
outsb
sbb
out
xchg
clc
mov
add
call
cmp
fiadds
insl
popf
stos
jmp
mov
fnstcw
movsb
xchg
divb
lock
das
decl
xor
sbb
fwait
lea
test
cmp
idivl
xchg
pop
xchg
xchg
repz
xor
in
lock
jno
sub
or
insl
and
shlb
hlt
fcompl
sti
in
push
inc
aas
std
je
sub
and
jg
sbb
int3
add
call
lret
test
repz
cmpsl
ds
xor
in
popa
rcrb
mov
aad
sbb
inc
sbb
xchg
pop
ret
into
add
imul
jl
loope
mov
int3
das
inc
push
jnp
mov
js
lahf
fisttpl
popf
sbb
pop
ficompl
test
stos
scas
jp
lea
xor
cld
jg
mov
xchg
add
mov
lret
cs
ret
shll
mov
dec
arpl
jbe
sub
imul
push
jae
out
xlat
loope
leave
push
cmpsb
shll
roll
es
inc
mov
xchg
out
fmuls
cmp
xchg
dec
pushf
adc
mov
aas
and
aaa
subl
popf
and
mov
mov
mov
sub
mov
push
icebp
mov
push
cwtl
pop
sti
cmc
inc
and
pop
fbstp
fdivr
fdivr
outsl
dec
inc
clc
arpl
sbbb
dec
icebp
sbb
fwait
pop
scas
out
sbb
les
inc
div
leave
call
movl
fistpl
aam
mov
cmp
repz
cmpsb
push
imul
xchg
or
cli
das
imul
mov
adcb
andb
or
pop
pop
jae
jae
sub
int
popf
movsl
add
outsb
push
or
push
add
mov
outsb
loopne
out
sahf
add
les
clc
dec
push
dec
mov
loopne
mov
aas
fistps
lods
sbb
popf
jo
shr
in
or
fimuls
shlb
add
jge
test
sbb
cmpb
mov
inc
lret
pushf
imul
pop
xlat
fldenv
nop
mov
xor
and
sub
jns
mov
rolb
je
sbb
fstpl
in
mov
xor
aas
xor
test
mov
cwtl
push
je
dec
jo
sar
adc
push
or
int
lahf
sbb
iret
add
subl
fwait
cmp
int
push
xchg
aaa
ds
push
pop
pushf
repnz
xchg
sub
loop
leave
xor
lea
inc
ror
mov
mov
cmpsb
and
stos
arpl
inc
push
ficompl
cmp
cli
xlat
outsl
jns
repnz
jbe
addr16
dec
pop
lcall
inc
out
jb
rcll
pop
jbe
adc
out
filds
cmp
xlat
bound
add
push
jg
mov
cmp
clc
xor
push
call
les
ds
bound
out
mov
pusha
mov
pop
push
cmpsb
decl
inc
cltd
push
or
data16
adc
cmp
cmp
cmp
push
push
ljmp
insl
imul
xchg
cld
roll
insb
add
fs
daa
ljmp
cld
out
in
popf
jb
jae
adc
mov
loope
jbe
lds
add
in
mov
scas
hlt
cwtl
mov
add
jbe
leave
jp
sbb
mov
orl
xchg
sbb
pop
sbb
push
aas
and
cmp
or
or
push
pop
daa
sub
add
xchg
lock
test
sub
jmp
xlat
rorl
push
adc
push
and
xchg
jbe
into
sub
mov
adc
adc
addr16
fwait
dec
jle
mov
popf
mov
adc
pop
aam
daa
dec
dec
and
mov
bound
cmp
cmc
in
xor
sbbl
andl
repz
mov
pop
fcmovne
imul
lcall
sbb
mov
and
test
add
or
add
enter
cmp
test
fsubr
inc
xor
push
stc
inc
int
push
or
cs
lods
push
mov
imul
lret
xchg
shld
jae
or
adc
xor
cmpsb
popf
pop
in
aad
push
mov
inc
jo
fldt
jbe
in
out
repnz
fildl
cmp
lcall
xchg
lock
int
je
adc
rcr
out
pop
or
inc
xor
sbb
fcoml
push
xchg
pop
lods
xorl
push
or
mov
stos
add
les
lcall
jmp
xor
lahf
aad
das
inc
mov
lahf
mov
mov
je
lahf
inc
push
push
int3
sbb
or
mov
mov
and
pushf
popa
out
into
sbb
sbbl
daa
lock
xchg
in
push
scas
mov
sub
outsb
loop
popf
out
inc
popf
lret
pop
jge
dec
xchg
mov
scas
mov
cli
fldenv
sbb
test
inc
fiaddl
push
xor
push
cs
insb
adc
push
scas
movsl
lods
std
inc
in
lods
cmp
test
ds
cltd
daa
mov
mov
xor
shl
arpl
fwait
sbb
pop
cmp
sbb
jle
and
dec
xchg
dec
sbb
inc
rorl
out
das
sti
dec
sbb
pop
lock
dec
sub
jle
ljmp
inc
mov
jle
pop
xchg
lret
cmp
pop
push
in
lock
int
pop
lods
ret
adc
cltd
cmp
mov
out
test
push
xor
loop
gs
pop
out
sub
and
test
arpl
fiadds
movsb
sbb
mov
imul
dec
mov
dec
loop
jmp
and
xor
sbb
outsb
mov
test
mov
mov
xchg
ds
out
and
lahf
adc
xchg
lahf
add
mov
xor
inc
insb
add
mov
test
or
jo
push
aaa
jne
xchg
ja
mov
or
push
pop
std
sub
shrb
sub
stc
jno
outsb
jge
out
mov
sahf
push
shll
cmp
movsl
gs
and
lahf
mov
sub
push
jg
or
ja
cmp
in
add
push
push
and
mov
xchg
add
test
nop
adc
test
ljmp
imul
jb
push
enter
pop
inc
adc
mov
flds
and
pop
test
xchg
jns
cmp
sti
cwtl
mov
sbb
dec
jae
jns
and
inc
test
mulb
push
sbb
sbb
mov
jl
enter
fs
out
out
in
push
xor
rcr
push
pop
mov
test
aas
and
in
jno
mov
cld
xchg
push
sahf
xor
sub
cmp
sub
idivb
pop
mov
sbbb
lcall
sbb
imul
jl
scas
enter
push
cmp
popa
fcompl
lahf
and
jns
adc
lret
xlat
int3
repz
xchg
fstpl
jbe
shl
push
test
xor
outsl
xchg
addr16
ret
mov
call
pop
pop
push
dec
inc
sahf
clc
mov
sbb
cmpsb
aaa
pop
ss
inc
ficoml
ret
inc
jnp
scas
aas
mov
add
stos
movsb
mov
repnz
insl
sbbb
add
insb
lahf
sbbb
jno
imul
cmp
pushf
mov
inc
xlat
aas
in
bswap
dec
add
imul
fwait
add
in
inc
xor
adc
mov
cmpsl
xor
jb
outsb
es
jge,pt
cld
stos
pop
dec
or
mov
hlt
push
out
push
jp
add
mov
pop
or
adc
fyl2xp1
push
xchg
jb
or
cltd
push
jecxz
xlat
mov
sbb
dec
jnp
dec
cmc
mov
scas
mov
movsb
push
push
inc
ret
mov
dec
out
out
add
push
scas
pop
adc
sbb
or
les
rcrb
scas
push
inc
push
push
clc
inc
in
lret
enter
jne
pop
add
jge
mov
pop
mov
push
movsl
push
xor
inc
dec
loopne
jno
stc
pop
bound
mov
xchg
mov
shll
addr16
daa
arpl
popf
cmpsb
test
jmp
xchg
les
out
jbe
aaa
iret
inc
pusha
cmc
xchg
dec
iret
jb
pop
scas
sti
int3
nop
notl
dec
insl
mov
and
in
in
xlat
jp
cmp
cltd
in
popf
pusha
jno
fimull
xor
push
call
out
and
add
mov
mov
sbb
aad
or
gs
jle
sub
jmp
or
cmc
xor
push
mov
daa
idivl
pop
mov
sbb
push
cmp
stos
jno
adc
add
push
out
fcompl
gs
loopne
and
inc
pop
sbb
sbb
paddusw
xchg
add
adcl
mov
pushf
or
jge
dec
gs
test
jbe
sub
sarb
pushf
stos
js
jg
aas
pop
hlt
loop
divl
pop
cmp
mov
cmpsb
and
adc
std
push
inc
xor
notl
sub
dec
push
pop
jnp
sahf
addr16
mov
cld
pop
or
imul
fcomip
mov
lret
daa
out
shl
jae
dec
jns
push
mov
imul
aas
sahf
into
int
inc
adc
cmp
imul
je
pavgb
xchg
mov
dec
xchg
lock
orb
fistpll
add
sbb
pop
xchg
xor
ret
fstps
fstpl
int3
mov
xsha256
cmpsb
push
sub
cltd
fadd
outsl
jmp
cmp
icebp
inc
scas
sub
pushf
test
lret
xlat
cmp
cmp
inc
fcmovu
mov
xchg
dec
dec
dec
out
lahf
in
mov
mov
testl
mov
xchg
fcmovnu
aaa
pop
push
add
dec
call
adc
pop
or
int
pop
ss
add
xchg
cwtl
in
or
outsl
dec
ljmp
pop
mov
out
adc
pop
nop
data16
inc
pop
arpl
jecxz
cmp
sbb
aaa
xchg
nop
arpl
imul
push
aaa
xor
mov
cmp
jmp
cmp
sub
mov
adc
xor
dec
jbe
adc
call
sbb
mov
push
cltd
test
push
mov
sbb
xchg
jp
lock
and
inc
sub
sub
inc
mov
shl
sub
xlat
adc
or
push
inc
in
xor
dec
in
negb
scas
sub
dec
xor
xchg
adc
adc
inc
pop
and
je
mov
ljmp
enter
cmp
shlb
sbb
dec
orb
push
fucomip
mov
push
out
cmpsb
cltd
stc
inc
cld
int
aas
xor
sub
jbe
lcall
rcll
cltd
iret
pop
push
cmp
jp
aam
jne
rclb
cmp
arpl
xorl
mov
jo
mov
push
or
das
push
xor
leave
les
pop
loop
mov
xor
aaa
push
cmp
cli
push
pop
xor
iret
xchg
into
stc
call
cltd
cld
pop
rcrl
aaa
sbb
lock
push
cmp
fldl
fcomps
daa
arpl
mov
stc
or
ds
hlt
sbb
sub
stos
push
stos
xchg
cmp
push
shlb
sbb
imul
sbbb
inc
data16
out
push
inc
cmpsl
pop
or
sub
lret
fdivrs
gs
inc
stc
jp
xchg
aaa
je
push
sub
xchg
mov
fimull
cmp
sarb
pop
leave
and
sub
fmulp
test
ljmp
cli
notb
repz
push
mov
lcall
mov
sti
xor
mov
movsl
add
push
inc
sub
mov
xor
in
jp
mov
dec
ss
cmpb
jmp
pop
push
std
sbb
fsubl
xchg
mov
ficoms
mov
fwait
mov
cli
pop
sahf
sub
add
fldt
or
out
out
loop
mov
push
movsb
xchg
andb
and
sbb
push
adc
in
dec
xchg
int
int3
sub
mov
fdivrs
sarl
xor
push
sub
cmpsb
insb
scas
mov
leave
and
test
leave
gs
fwait
adc
pop
imul
adc
inc
cld
mov
cmp
pop
in
scas
ret
in
or
dec
mov
imul
mov
fdivr
push
test
jp
out
lods
cmp
mov
dec
mov
in
int3
bndldx
ss
fldz
xor
mov
shll
jbe
lds
nop
adc
das
je
outsb
icebp
or
stc
ret
push
or
cli
cltd
cltd
sub
pop
sbb
or
pop
dec
sub
mov
std
test
pushf
cmp
xlat
xlat
pop
movsb
ja
dec
out
pop
xchg
xchg
xor
push
push
and
sbbl
addb
add
mov
cwtl
adc
lea
pop
adc
lods
shlb
push
daa
sub
js
push
mov
lahf
xor
dec
test
dec
sbb
hlt
ret
cmpsb
xorb
loopne
out
test
add
sbb
sub
mov
push
lods
push
cmp
jb
test
cmpsl
aas
shrl
sub
sub
ss
sarb
mov
mov
and
sbbb
out
dec
push
jo
sub
xchg
out
inc
dec
cmc
and
xor
sub
jg
shl
fwait
push
xor
xchg
fnstenv
sbb
out
dec
inc
sbb
rclb
neg
dec
popa
cmp
mov
lds
pushf
repz
sbb
adc
sub
add
int3
mov
fcmovnu
andb
pop
dec
mov
push
adc
push
cmc
sbb
dec
fwait
mov
in
mov
or
outsl
xchg
dec
jbe
jl
out
jnp
pop
pop
repnz
jmp
std
subl
xlat
les
jg
push
movsb
popf
test
adcb
iret
jo
mov
or
outsb
add
or
xchg
cld
js
cmp
or
in
xlat
out
cmp
push
int
jbe
push
mov
enter
cs
sub
ret
dec
mov
shll
push
sub
pusha
xchg
xlat
mov
aas
or
fisubs
fisubs
jmp
adc
mov
divl
xchg
mov
adc
imul
jmp
mov
ja
push
or
xchg
cmp
sbbb
add
or
push
push
mov
fists
sub
add
movsl
and
mov
popa
iret
sub
jp
aaa
pop
test
ss
aad
mov
jns
pusha
mov
std
cli
xchg
xor
in
push
mov
fistpll
shr
dec
mov
in
mov
lret
fadd
mov
pop
aam
pop
lods
fsubs
cwtl
push
adc
jge
pop
dec
mov
dec
lods
out
mov
stos
or
push
in
ficoms
test
test
arpl
mov
test
jb
and
or
mov
cmp
pop
push
add
mov
lret
inc
out
out
div
sub
cmp
push
leave
aaa
cmpsb
cmc
adc
xor
test
cmpsl
adc
ds
sub
mov
pop
cmpsb
int3
and
mov
sbb
lret
std
mov
cs
mov
xor
push
jne
or
imul
sub
sbb
xorl
and
push
clc
mov
xchg
mov
add
jp
ljmp
dec
enter
xor
lea
push
or
aam
pop
sbb
xor
rol
xor
pop
jb
add
sti
push
pusha
popa
dec
shrb
push
mov
orl
mov
and
ljmp
imul
stos
jp
xor
stos
mov
in
xchg
push
mov
mov
test
lods
xor
xor
inc
lret
mov
test
jmp
push
cmpsb
lods
movsb
popl
dec
inc
out
arpl
cmp
sub
arpl
xchg
or
lock
jl
dec
jmp
fldenv
mov
mov
and
out
leave
push
inc
jne
pop
mov
mov
leave
std
inc
lock
adc
outsb
adc
int3
inc
mov
call
fidivl
gs
outsl
je
sub
mov
icebp
adc
sbb
test
aam
bound
dec
adc
sbb
shlb
adcl
and
dec
aas
out
fsubp
sbb
inc
loope
bound
imul
add
cmp
lcall
sub
mov
fsubrl
cmp
dec
sub
jns
cmc
cmp
pop
and
xchg
sbb
pop
loope
sub
lock
mov
sbb
xor
fldt
cmpsb
sbb
or
and
or
es
mov
mov
cmp
orl
in
add
pop
add
gs
or
cmc
repnz
ret
cmp
dec
mov
or
popf
fidivs
sbb
repnz
jl
hlt
mov
jb
out
jmp
add
xor
out
push
xor
sub
lock
or
and
mov
and
dec
push
jmp
jae
mov
vlddqu
and
push
or
filds
pop
cmpsl
mov
addl
adc
pop
mov
add
and
cmp
dec
or
xlat
fildl
scas
push
orl
xor
andb
inc
pop
lods
pop
xchg
movl
and
into
pop
out
jae
fistpll
mov
xlat
pop
mov
mov
jmp
and
cli
icebp
mov
aam
jmp
mov
jnp
inc
mov
lahf
out
push
incl
iret
fbld
das
aas
psadbw
out
xchg
jg
dec
mov
cmpsb
scas
push
mov
out
push
incl
iret
fbld
das
aas
psadbw
out
xchg
jg
dec
mov
cmpsb
scas
push
mov
out
push
incb
iret
fbld
cs
aas
psadbw
out
xchg
jg
dec
mov
cmpsb
scas
push
mov
out
push
incl
dec
ss
es
shrb
xchg
sbb
idivl
dec
cmpsl
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
repz
clc
sub
mov
sbb
jae
adc
pop
xor
test
hlt
repz
clc
xchg
call
xlat
cmp
inc
jns
or
popa
push
and
lret
or
push
sti
out
mov
pop
push
or
or
adc
or
adc
lahf
in
cwtl
xchg
loope
cld
pop
call
dec
jg
sbb
inc
ja
pusha
cmp
int3
dec
pop
push
rcll
cli
or
jo
dec
inc
pop
into
lods
pop
mov
xchg
pop
pop
ret
mov
inc
dec
in
test
rcrb
rolb
sub
sbb
pushf
push
xor
sarb
call
cmp
imul
xchg
push
xor
movsl
cmp
or
xchg
add
pusha
notb
inc
lret
sbb
dec
fidivrl
pusha
inc
cmpsb
inc
sub
mov
or
pop
sbb
es
mov
repz
sub
xchg
mov
pushf
cmc
cmp
jecxz
xor
jecxz
rcrl
xchg
nop
sbb
outsb
mov
outsb
push
jp
or
push
dec
and
rcr
mov
xchg
lock
cmp
inc
jge
insl
push
or
add
pop
sub
stos
ljmp
int
popf
xchg
pop
daa
jp
sbb
jo
add
add
push
or
rol
ret
stc
xchg
fdivs
sub
jae
arpl
push
and
repz
clc
xchg
call
mov
sbb
arpl
push
and
je
loope
sbb
sbb
push
lret
jnp
and
jle
adcl
sub
jns
rorb
pop
lret
repnz
aaa
rcrl
pop
xor
loopne
gs
push
xchg
inc
sub
xchg
stc
repz
add
out
xor
idiv
jno
sarl
dec
jnp
rcl
lahf
fidivl
and
loope
add
shlb
sub
dec
popa
ds
jg
adc
dec
inc
dec
mov
dec
mov
pop
adc
stc
or
insb
pusha
cmp
aam
cmp
insl
popa
inc
mov
iret
push
or
sbb
mov
ret
pushf
pop
pusha
xlat
pop
into
mov
cmc
xchg
and
inc
insl
sub
cwtl
scas
andl
xor
out
pop
add
add
cmp
mov
cld
out
xchg
cld
in
or
cmp
sub
and
mov
and
inc
push
das
test
xor
or
add
cmc
inc
push
in
cmpsb
cli
shrl
stos
push
sub
lret
push
pop
popf
lods
xchg
xor
dec
test
push
xchg
sbb
mov
clc
adc
adc
aam
inc
dec
dec
int3
xchg
push
loop
in
sub
aaa
testl
in
jl
dec
push
in
out
sbbb
movsb
popf
push
imul
mov
ret
outsl
mov
fnsave
in
sub
cwtl
xor
dec
pop
movsb
add
mov
xor
inc
cs
ficomps
xor
push
jnp
sbb
dec
out
sbb
rorb
or
rclb
xchg
push
in
push
sbb
and
pushf
cld
ret
push
xor
xchg
push
or
sbbb
push
les
nop
clc
mov
aaa
cld
pop
jl
ret
jle
shrl
clc
xchg
je
jge
add
jns
cli
pop
pop
test
nop
std
lods
sub
xchg
cwtl
mov
mov
mov
inc
jo
aas
cmc
aas
cmp
test
insb
fwait
in
bnd
rorb
xchg
push
cmp
mov
mov
in
mov
pop
mov
pop
xchg
sub
shrl
xchg
xchg
add
in
and
mov
dec
jns
dec
push
ds
cmpsb
cmpsl
jge
sbb
int
mov
and
push
mov
mov
leave
cmp
fimull
mov
xor
pushf
jbe
or
lods
push
gs
outsl
inc
sub
aad
cmp
in
movsb
dec
pop
divl
jns
es
out
stos
out
in
cmp
xlat
call
clc
add
fwait
stos
addr16
ds
outsl
sbb
test
mov
enter
push
icebp
cmpsb
push
dec
popa
dec
ja
sub
mov
aam
mov
sbb
mov
in
mov
push
adc
pop
roll
jmp
mov
lods
mov
sub
aam
in
push
cmp
mov
push
test
icebp
push
notl
pop
push
in
insb
fstl
outsb
stc
cmp
jno
das
scas
push
mov
cmp
jb
or
ss
xchg
jne
daa
call
cmc
adc
mov
in
push
cmpsl
cld
in
roll
mov
call
pushf
popf
inc
jb
lret
cmp
mov
or
mov
add
testb
data16
addb
rolb
call
inc
xchg
push
je
test
test
mov
inc
mov
stos
imul
outsl
mov
pop
outsb
call
and
mov
iret
pushf
or
fidivrl
es
push
push
add
jp
push
add
sahf
lahf
dec
sub
cmpb
aas
cld
out
xchg
arpl
xchg
daa
mov
jae
out
rclb
adc
call
push
leave
and
lret
mov
or
ret
jmp
loopne
out
sub
js
xchg
dec
mov
add
sub
call
push
je
sbb
icebp
jge
loopne
and
fs
mov
pop
rcll
hlt
sub
jge
sbb
ret
adc
aam
mov
dec
or
cmp
jmp
inc
cmp
xor
dec
mov
mov
pop
sahf
sub
push
jno
cmpsb
dec
stos
scas
movsl
enter
scas
adc
clc
pop
xchg
pusha
pop
mov
adc
sub
dec
push
cmp
popf
icebp
lds
mov
cmp
lds
inc
les
xor
ljmp
jmp
mov
pop
popf
scas
pop
cwtl
rol
xchg
xor
jmp
inc
mov
dec
movsb
shl
pop
xor
cmpsl
out
cli
sub
cmp
inc
or
dec
les
fwait
je
mov
andb
stc
inc
cmpsb
lahf
mov
imul
sub
fisubrl
cmp
add
rolb
scas
mov
jns
test
in
and
adc
push
mov
and
add
pop
fsubr
aam
lea
inc
cmp
scas
std
add
sub
mov
or
ret
pop
fisubrl
jo
cmp
lock
push
mov
enter
dec
push
inc
ss
out
inc
inc
cltd
repz
repz
popa
fstpl
int3
jp
dec
les
mov
dec
leave
cmp
jg
inc
aas
test
sahf
cwtl
leave
pop
imul
aad
pop
psadbw
aam
outsl
dec
scas
ficomps
testl
mov
pop
push
cmp
cltd
xchg
aaa
push
cwtl
xor
dec
cmp
xlat
push
sbb
iret
pop
mov
or
lahf
mov
not
xor
mov
xor
and
jbe
dec
add
mov
or
addb
iret
sbb
sbb
mov
incb
jmp
or
repnz
xorl
mov
test
add
mov
xchg
and
add
adc
fdivl
ss
add
ret
mov
push
mov
mov
sbb
cmc
test
ss
fimull
aas
dec
xor
stos
pop
inc
fs
mov
sub
adc
mov
pushf
or
jne
nop
hlt
mov
jnp
push
insl
aad
jns
fs
out
fdivs
jae
dec
stos
xor
lret
lahf
adc
fs
fnsave
movsb
pop
popa
sbbb
mov
cmp
and
cmp
push
jne
aam
outsb
testl
mov
xor
pop
flds
andb
ret
sub
push
call
int
out
jle
xchg
pushf
cld
loopne
in
das
pusha
mov
jb
xor
outsb
lds
test
insl
imull
cld
dec
push
popa
xlat
add
test
pusha
les
movswl
jb
scas
test
and
xchg
xchg
xchg
cmpsl
push
cmp
addr16
into
xchg
xchg
dec
popf
aas
in
jge
loopne
sub
mull
jle
or
lods
inc
cltd
or
cmpsb
fcoms
imull
loop
mov
xor
sbb
lods
lcall
jge
and
cmp
mov
mov
dec
inc
fdivs
and
dec
fsts
loop
jno
imul
lea
mov
fwait
jg
out
dec
insb
xchg
sub
ja
addr16
xor
outsb
inc
xchg
push
sub
mov
push
mov
idivl
dec
andl
xor
lcall
or
cwtl
mov
mov
test
lods
xadd
icebp
int
sbb
aad
and
and
sbb
mov
fstpl
mov
test
and
xchg
clc
xor
shl
add
jb
addr16
sub
pusha
fildl
lahf
push
ljmp
scas
jne
ficoml
sub
nop
pop
fld
xor
jle
adc
mov
push
xorl
xchg
pop
mov
dec
push
test
les
inc
loope
push
dec
lods
mov
inc
pushf
je
data16
jnp
test
std
mov
sub
mov
cmpsl
sbb
dec
lret
pop
or
fmulp
in
or
push
xor
iret
adc
jecxz
or
subb
and
iret
pop
lds
mov
rcrb
out
and
mov
fbstp
in
or
sub
cmp
push
inc
xchg
jno
pushf
cmp
sti
sbb
incl
test
mov
inc
jmp
pminsw
scas
in
xchg
pop
lcall
and
cld
cmp
mov
mov
aam
mov
jbe
dec
movsl
nop
in
push
and
or
xchg
and
adc
inc
cmpsb
jge
jnp
cli
mov
push
pushf
xchg
addr16
stc
push
push
xlat
nop
fisubrl
jg
xchg
cmp
lcall
cmp
xor
out
jo
ss
jge
mov
adc
pop
ds
lcall
loop
adc
push
fsubrs
and
cwtl
arpl
pop
not
cmp
mov
pop
xor
pop
ficomps
insl
je
inc
incl
out
mov
or
clc
push
aaa
jmp
cwtl
movsl
jecxz
inc
fs
pop
and
lds
dec
add
incb
aam
scas
imul
bound
inc
gs
popf
lret
icebp
sub
cmp
repnz
clc
pop
push
outsb
js
jns
jmp
xlat
push
popf
jbe
mov
mov
cltd
push
inc
das
cld
mov
push
popf
and
push
inc
fdivrl
cmp
jg
cmp
jbe
in
pop
and
cpuid
push
sbb
inc
pop
mov
subl
sub
mov
cmp
jmp
scas
or
insl
mov
call
icebp
xchg
cli
adc
mov
ret
jp
mov
rcrl
push
inc
add
popf
insl
bnd
nop
sbb
mov
loop
mov
clc
cltd
daa
lahf
mov
push
sub
imul
add
mov
pop
sbb
test
and
or
jl
push
fistps
lret
int
fists
pop
xchg
pop
or
mov
mov
add
out
adc
rcrb
dec
mov
sarl
dec
inc
cli
xorb
lret
lcall
dec
mov
fldlg2
cltd
mov
pop
and
cmp
mov
add
lahf
or
or
popf
and
xchg
adc
xchg
test
inc
jg
push
scas
adc
repz
scas
jbe
sbb
inc
adc
xor
inc
cmp
das
bnd
push
daa
sub
cmp
idivb
ljmp
xor
test
cmpsl
dec
mov
les
fs
jno
jge
repnz
adc
mov
out
and
adcb
das
lods
push
cld
cld
daa
or
mov
imul
adc
cwtl
cmc
mov
push
jnp
xor
push
xor
cmp
xor
sbb
dec
mov
in
out
lods
push
loope
push
ficoms
jns
mov
sub
jp
and
rolb
add
pushf
fs
push
mov
mov
movsb
std
mov
jno
pop
cli
pop
xchg
xchg
mov
or
lock
roll
ficoms
cltd
sub
cmpsl
jmp
cmpsl
pop
and
pop
xor
js
pop
fisubl
jecxz
and
dec
les
adc
xchg
lea
mov
bound
sbb
xor
lods
insl
jne
mov
and
cmp
xchg
es
cli
clc
xor
add
iret
xor
mov
sub
ljmp
lods
or
xchg
sbb
add
xor
popf
push
insl
jge
sarb
fldcw
gs
mov
xchg
mov
das
mov
ja
mov
jne
andb
stos
cmpsl
les
dec
inc
fdivl
pop
imulb
in
insl
push
jnp
mov
lock
notb
hlt
jecxz
jge
inc
lock
add
and
dec
add
cltd
aaa
imul
test
mov
pop
enter
inc
popf
mov
push
sbb
cmp
lcall
add
fcom
inc
push
xchg
out
sub
adc
xchg
sahf
mov
mov
in
das
daa
xor
adc
emms
add
push
jb
push
ljmp
mov
jno
push
dec
nop
mov
sbb
inc
je
or
test
sbb
pop
mov
mov
stos
sub
dec
adc
cs
cs
daa
push
sub
mov
std
xchg
jnp
xlat
xor
jns
out
stos
std
data16
mov
push
rorl
mov
lret
gs
push
in
outsb
pushf
push
test
stos
sbb
adc
cmpsl
iret
in
push
push
push
xchg
pop
xchg
flds
mov
ljmp
or
je
mov
xorl
out
or
jle
into
cmp
or
mov
inc
subb
int
bound
pop
test
sbb
mov
pop
inc
loopne
in
sti
push
enter
sub
popa
cs
pop
fdivs
xchg
movsl
int
xor
repnz
pop
fwait
cld
or
mov
lds
dec
add
push
adc
les
jp
outsl
mov
mov
stos
fstl
sarl
cs
cld
push
insb
out
inc
push
repnz
dec
dec
dec
xchg
or
cmpsl
mull
lods
ss
inc
es
sti
sub
fcmovnbe
lds
jno
lret
divl
mov
mov
xor
andl
int
movsb
dec
jecxz
mov
xor
dec
xchg
in
testb
pop
pop
rclb
lods
std
addl
je
or
pop
and
stos
js
mov
enter
mov
jl
ret
lret
xchg
int3
push
sbb
pop
stc
xchg
dec
in
push
ret
jb
add
xchg
fsubrs
test
outsb
inc
sub
iret
mov
fldl
and
lods
divb
idivb
mov
and
aad
stos
adc
xlat
ja
stos
testl
lods
pop
test
push
sub
shrb
dec
mov
dec
jmp
push
and
call
and
fs
or
divb
movsb
jns
fisttps
fidivrl
or
push
and
sub
outsl
mov
mov
sub
fdivrs
xchg
lods
outsb
inc
out
mov
je
dec
mov
sahf
xchg
mov
movsl
dec
movsb
or
in
sti
lods
out
inc
pop
cmpsb
cmc
pop
scas
xchg
add
out
mov
cmpsl
and
insb
enter
loop
test
sahf
pusha
in
in
pop
cmp
scas
imul
and
fildll
out
jmp
hlt
into
xchg
lret
inc
sbbb
add
test
add
cmpsb
leave
mov
xchg
cmpb
xchg
push
rolb
test
movsb
and
xor
insl
adc
imul
push
sbb
loope
pop
outsl
je
cmp
xor
les
xor
jbe
popa
call
xchg
loopne
lods
sbb
in
ret
in
test
jbe
incl
and
repnz
lret
ljmp
andb
dec
popa
cltd
loop
push
clc
inc
cmp
ds
inc
aas
adc
pop
lcall
fstps
filds
add
and
leave
popf
in
pop
sbb
es
jmp
adc
iret
js
jb
pop
and
in
cmp
add
jmp
mov
movsl
pop
mov
jbe
test
ret
sbb
int
arpl
mov
les
sub
sub
test
cmp
jns
out
cli
mov
jne
fwait
mov
add
std
fs
clc
adc
sahf
fcompl
aam
std
xchg
pusha
out
cmp
pop
mov
imul
add
mov
xchg
mov
inc
loope
fnstsw
pop
popf
push
mov
movsb
test
insl
jl
mov
scas
into
push
inc
push
cmp
dec
dec
jg
loope
rorl
mov
mov
sub
js
jb
iret
iret
call
cli
stos
cmp
imul
push
inc
sub
push
sbbb
movsl
lds
xchg
jl
inc
cmp
cwtl
js
inc
aas
jmp
sub
loopne
das
sbbl
fsubrl
pop
xor
sti
lret
push
and
test
ja
mov
xchg
movsb
push
sbb
scas
lock
dec
sbb
mov
popf
fbstp
inc
repnz
push
stos
cmpb
mov
fwait
inc
and
mov
adc
cmp
cmp
adc
loopne
pop
dec
mov
jge
outsl
push
or
iret
mov
movsl
inc
ja
inc
jbe
inc
pop
and
inc
mov
mov
icebp
dec
pop
std
shr
xor
cmp
cli
sbb
adc
xchg
xchg
lcall
cmpsb
lock
sbb
jp
inc
sbb
stc
shrl
ds
lret
adc
subl
inc
ja
scas
or
adc
data16
mov
pop
test
or
adc
pop
push
sarb
cmpl
inc
fwait
mov
cmp
xlat
int
shrl
ds
insb
loop
sub
push
pop
lret
imul
cmp
mov
pop
addl
sub
xchg
xchg
ret
movsb
lret
push
push
and
xchg
and
ja
roll
jns
jb
rcr
xlat
std
jno
in
scas
stos
arpl
cmpsb
cmp
inc
loopne
out
aaa
int
jecxz
call
xor
push
dec
pop
aam
ret
xor
adcb
lea
sbb
aaa
xchg
ret
in
push
bound
jecxz
lds
adc
jno
mov
popf
test
orb
test
xchg
test
push
fldt
or
xchg
push
inc
jg
scas
sarb
pop
test
mov
sbb
sahf
lea
jle
loope
nop
cmpsl
pop
xor
xchg
cmp
inc
cltd
loopne
mov
and
dec
jb
int3
sub
add
aam
sub
jg
icebp
arpl
lret
sahf
hlt
je
sub
adc
mov
in
outsb
in
push
adcb
mov
arpl
gs
fistps
int
les
repz
xchg
fsubs
and
decb
fisttps
cwtl
dec
mov
lea
push
or
pop
cmpsb
jnp
js
mov
mov
mov
sub
ret
dec
popf
mov
xchg
xor
inc
loopne
pop
repz
repnz
push
dec
or
fcoml
and
pop
and
pop
jge
sub
div
mov
adc
add
lock
mov
push
fs
scas
adc
stos
mov
rclb
sub
jle
in
dec
mov
dec
add
cmp
insb
loopne
push
mov
outsb
lock
xchg
push
dec
cs
push
cmp
test
fstl
or
sbb
dec
adc
cmp
int
in
scas
sub
and
test
or
dec
imul
pop
adc
push
jnp
mov
push
gs
testb
mov
std
push
cmp
xchg
xor
ficompl
xchg
cmp
jecxz
js
xor
mov
xchg
dec
mov
int
mov
inc
jmp
stc
idiv
notb
mov
cli
mov
xchg
aas
xchg
call
cmp
sahf
inc
xor
outsl
lock
sbb
sti
lahf
dec
dec
sub
leave
xchg
in
xor
jg
cmpsb
xchg
mov
mov
dec
sbb
sub
jae
arpl
pop
jecxz
mov
lds
fiaddl
lret
loope
test
cmp
mov
cmc
inc
jg
jns
ret
pop
aad
sbb
xor
in
dec
aas
imul
mov
or
mul
sub
cmp
xchg
sti
inc
dec
push
adc
inc
mov
pop
and
add
test
nop
pop
aad
dec
mov
inc
iret
xchg
fbld
bound
jno
dec
lahf
sub
gs
cmp
add
sub
jo
lds
jno
sahf
inc
fldl
cmp
push
scas
fidivrs
insl
mov
ds
jbe
sahf
jge
leave
add
xchg
stos
test
dec
cmp
inc
or
cmpsb
cwtl
lret
std
cmp
fidivrs
jmp
xchg
in
mov
repz
pop
add
nop
repz
mov
nop
add
stc
lods
pop
dec
sarl
stc
mov
mov
scas
in
mov
cltd
add
insl
mov
jae
js
movsb
pop
inc
add
std
jb
jns
xchg
xlat
jp
out
sbb
shrl
adc
cmp
or
icebp
int3
mov
add
sbb
mov
fcomip
mov
clc
xchg
call
mov
sbb
arpl
push
and
repz
clc
xchg
call
mov
sbb
arpl
push
and
repz
push
mov
mov
call
adc
pop
aaa
mov
mov
xchg
clc
sbb
dec
arpl
push
xlat
jmp
setnp
jl
dec
mov
aad
xor
sub
jl
or
or
cmp
sub
pop
mov
js
push
pop
mov
or
call
fstl
in
std
pop
mov
push
fwait
imull
enter
aam
adc
sbb
fs
pop
mov
js
adc
pandn
or
sbb
in
scas
jmp
sub
and
scas
mov
xchg
cmp
dec
fistps
mov
aaa
xchg
rcl
insb
ret
cmc
and
adc
lods
fstpl
in
enter
mov
loope
in
fst
pop
int3
test
cmpsl
jle
popa
mov
jp
dec
lock
lds
jge
sbb
sub
or
adc
cld
aad
dec
adc
xchg
rcrl
push
sbb
in
mov
mov
or
dec
mov
sbb
mov
push
inc
xor
jge
adc
sahf
lock
cmp
xchg
fucom
dec
fdivrs
rorl
fmuls
push
scas
ljmp
sarl
push
jae
mov
xor
add
adc
pop
mov
mov
push
lret
or
das
aam
or
sbb
push
arpl
mov
test
push
and
int
ret
or
ds
adc
sub
or
cmp
sub
pop
lea
js
push
pop
mov
or
call
fnstsw
in
sub
pop
lea
js
push
or
adc
xchg
xchg
push
adc
test
pop
jl
imul
cmc
fldt
mov
cmp
into
jl
jle
mov
out
xor
adc
inc
xchg
in
dec
adc
jge
dec
stos
mov
push
popa
dec
sbb
pop
mov
movsb
pop
es
add
xchg
aas
adc
xchg
mov
cmp
add
ror
popa
xchg
lret
add
add
push
loop
inc
cmp
cwtl
ds
aas
pop
mov
jg
in
jbe
mov
or
aas
loopne
xchg
hlt
push
xor
rcl
push
pop
les
push
mov
dec
enter
pop
pop
jle
adc
push
lods
xor
testl
sub
daa
sbb
jae
or
les
add
movsb
aaa
push
mov
and
adc
aam
sbb
xor
adc
dec
cmpsl
sub
icebp
andl
ficoml
dec
iret
adc
dec
fnstsw
sahf
test
pop
addb
xlat
fcomps
popf
ret
rcl
push
push
cld
push
imulw
out
sub
cmp
loop
insl
cltd
inc
xor
push
add
dec
hlt
pop
or
sbb
js
or
aas
push
jmp
xchg
rcrl
jecxz
dec
and
rorl
orb
mov
ret
enter
pusha
enter
dec
jb
mov
and
loopne
mov
test
jge
daa
idivl
jg
dec
sarb
sub
cld
jecxz
ds
xchg
inc
adc
pop
rcrb
out
sbb
mov
cmp
and
or
int
das
adc
ss
test
cmp
ficompl
gs
nop
loope
add
mov
and
pusha
dec
push
adc
ds
pop
rorb
dec
push
movzwl
call
mov
cwtl
add
outsb
xchg
divl
jns
and
les
shlb
or
fcomp
es
pop
pop
std
out
pop
pop
pop
add
sahf
or
push
iret
sub
jnp
ss
xchg
popf
dec
test
nop
push
mov
gs
lods
inc
inc
cltd
sbb
ds
in
inc
ret
jb
jno
push
in
mov
jecxz
mov
imul
pop
je
adc
shll
xor
mov
push
xchg
xor
jne
mov
loope
mov
rclb
sbb
in
cmp
es
aaa
lret
add
out
push
cmp
mov
stc
lret
stos
add
or
fdivl
scas
aad
adc
fldt
jg
adc
ja
xchg
cmp
add
testl
jmp
ja
add
in
adcl
jno
lds
add
insb
and
loope
cmp
jne
jno
iret
or
popa
arpl
addr16
insl
icebp
scas
mov
mov
add
pop
xchg
cmp
insl
outsl
movsb
jo
in
enter
gs
add
std
cmp
mov
xchg
aas
fwait
mov
out
movsl
mov
push
das
push
ljmp
jg
push
jo
pop
cmp
cmp
aad
inc
out
addl
dec
cwtl
dec
pop
js
and
mov
movsl
inc
adc
jle
in
loop
sub
xchg
xlat
jecxz
lahf
out
xchg
cmp
dec
adc
nop
mov
inc
adc
dec
xor
mov
or
clc
jl
add
mov
inc
addl
mov
or
mov
pop
enter
jecxz
addb
and
pop
sti
mov
mov
push
cmc
aaa
movsb
fbld
adc
mov
or
clc
sbb
hlt
mov
insb
fiadds
cmp
dec
xchg
mov
or
add
fwait
mov
enter
mov
cmp
dec
test
arpl
dec
inc
into
fs
cld
cmpsl
sbb
pop
clc
ss
clc
mov
inc
orl
inc
jne
sbb
aas
imul
xchg
pop
dec
xchg
ss
inc
repz
cmp
xchg
pop
cmpsb
imul
xchg
rorb
scas
imul
or
xlat
cmp
push
jns
popf
loopne
adc
add
sub
or
sbbb
jmp
lcall
mov
aas
xor
sub
or
xchg
add
mov
in
repnz
fprem
jge
and
mov
ja
mov
sbb
or
mov
je
xor
cmp
movsl
call
jo
jnp
mov
jno
test
jnp
dec
push
ja
xchg
sub
and
xor
sub
add
mov
jbe
push
push
cmpsl
and
insl
repnz
xchg
jge
fadds
fcoms
sub
add
dec
xor
mov
pop
push
add
dec
hlt
pop
out
fdivs
fdivr
pushf
inc
fxch
xor
pop
cmp
loop
adc
push
sub
mov
outsl
sub
mov
sub
jecxz
and
imul
inc
mov
and
imul
push
push
push
mov
jecxz
jle
dec
int
aas
das
mov
test
push
into
lds
sbb
sub
shll
jae
bound
ljmp
jb
leave
je
daa
aam
mov
lods
inc
pop
inc
movb
adc
jno
xor
pop
imul
inc
mov
adc
xorl
imul
stos
fistpl
mov
mov
add
sub
testb
adc
les
stos
sbb
fisubl
xor
pop
mov
aam
popa
dec
xchg
gs
js
add
push
or
das
sub
adc
push
and
aad
popa
pop
das
mov
mov
iret
fdivrl
roll
lock
jp
cli
mov
mov
pop
orb
fsubl
lea
push
addl
in
aam
push
mov
add
mov
pop
pop
lds
dec
xorl
mov
test
push
movsb
cmp
aas
pavgw
dec
rorl
mov
int3
scas
push
outsb
fadd
mov
mov
fnstsw
lret
lcall
in
test
arpl
call
xchg
cmc
addr16
rolb
xlat
decb
inc
es
mov
mull
sub
push
jo
sub
sub
sbb
scas
mov
hlt
ror
mov
call
xchg
shll
xor
mov
subb
test
fsubs
cs
push
pop
or
and
pop
fwait
sbb
movsb
out
jbe
icebp
mov
mov
mov
adc
xchg
mov
out
xor
xchg
and
int
test
call
adc
fdivl
cmp
or
fs
loop
loope
jbe
dec
jecxz
cmp
and
mov
xorl
clc
jp
mov
jle
dec
xchg
mov
rcl
sbb
cli
jge
sbb
lcall
in
daa
loopne
dec
lret
mov
loope,pt
fcompl
inc
cmc
xlat
mov
jo
push
lock
in
jmp
outsl
movsb
add
repnz
push
nop
sbb
dec
and
inc
jno
inc
mov
ret
and
call
sbb
stos
jmp
outsl
jl
pop
mov
add
icebp
sbb
pop
pop
adc
and
push
cmpsl
popa
dec
rol
cwtl
xchg
lahf
lods
idiv
jo
lods
pop
loopne
aad
ret
xchg
pop
push
mov
cmp
stos
add
roll
mov
loope
dec
pushf
or
rcrb
mov
movsl
insl
and
pusha
sahf
pop
test
ss
ret
clc
lcall
jg
mov
sbb
push
movsl
loop
lods
fdivr
add
mov
sbb
jp
mov
xchg
ds
dec
mov
imul
in
jae
adc
and
push
cltd
push
in
pop
pop
xchg
cmp
imull
xchg
nop
mov
mov
xchg
jl
pop
and
cli
and
pop
std
add
fnstsw
mov
aad
cld
xchg
push
addl
lods
aas
sub
jp
mov
jb
cmp
jl
cli
fwait
lret
cmpsb
or
dec
cmc
jae
add
fdivs
and
je
sub
cmp
xor
xor
outsl
xchg
xchg
pop
jle
aam
js
mov
out
mov
enter
outsl
lret
loope
lahf
popf
and
mov
mov
xorb
mov
dec
loope
sub
dec
xchg
cmp
mov
rorb
pop
stos
das
lret
in
or
xchg
jp
notl
xor
rolb
sub
dec
sbb
js
pop
xor
pop
and
leave
mov
lods
mov
jbe
mov
ss
call
or
rolb
shll
xchg
int3
inc
dec
lahf
inc
aas
outsl
shll
out
jbe
rolb
jb
xor
pop
jecxz
loopne
xchg
add
fiadds
xchg
shlb
or
ret
adc
cld
sub
and
xor
mov
out
fnsave
jae
pop
pop
mul
xor
push
or
test
in
out
adc
or
push
or
ret
insl
outsb
repnz
jg
das
lea
ret
or
fildl
cmp
mov
mov
sub
jge
pop
aad
inc
cmp
icebp
insb
popf
xor
cmp
jecxz
jecxz
cmp
push
push
addb
loope
pusha
mov
xor
xchg
dec
mov
test
or
addr16
lcall
push
sbbl
icebp
fsubs
add
jb
das
push
push
adc
fidivl
mov
mov
sbb
add
and
fildll
mov
out
movsb
jle
mov
mov
sub
lahf
push
aas
mov
cmp
lods
add
sub
int
movb
cwtl
dec
cmp
fidivl
adc
and
loopne
push
pop
or
aam
add
xchg
movsb
xchg
test
imul
push
sbb
push
outsb
test
dec
jb
mov
out
xor
imul
decb
testb
shl
lret
mov
xor
ss
xlat
mov
pop
xchg
dec
lea
mov
cld
jp
sbb
repz
jne
push
push
sub
pop
sbb
sbb
pop
sub
add
aad
mov
leave
mov
push
push
popf
fucomp
dec
adc
daa
cwtl
ret
push
or
xor
jne
xchg
push
sbb
lds
std
xchg
pop
mov
mov
xor
loop
lcall
pop
dec
mov
enter
or
jmp
js
aaa
inc
cli
orl
jne
mov
and
cmc
rorb
sub
imul
dec
lret
jl
mov
push
aaa
pop
out
je
and
cmp
or
insl
sahf
or
into
mov
cmp
sbb
lea
cmpsb
inc
or
sbbl
cmc
pop
push
ss
cmp
pop
lods
aas
adc
dec
xlat
jmp
ljmp
cmp
adc
aas
rcrl
and
jmp
popf
mov
xchg
ja
int3
js
cmp
push
repnz
es
xor
cs
mov
fcomip
sub
lea
out
ret
jne
cmp
cmp
movsl
loop
jge
in
or
pop
push
adc
pop
inc
test
or
mov
sbb
mov
xor
ret
pop
push
ret
in
mov
push
lcall
mov
push
cld
mov
jp
pop
rcr
cltd
add
data16
clc
adc
subl
cwtl
loopne
mov
aam
or
jb
pop
inc
xchg
pop
out
pop
mov
out
dec
cmp
mov
shl
int3
dec
pop
std
inc
adc
sbb
clc
dec
sbb
push
mov
nop
test
mov
jns
sub
movsb
xchg
adc
movsb
movsb
aam
pop
sarb
fidivrl
or
xchg
and
ficoml
test
jge
mov
cmp
lret
aas
stos
fld
inc
jb
shll
repz
pop
repnz
and
ret
cwtl
adc
arpl
mov
xor
inc
mov
pusha
push
cli
xchg
aas
loop
in
int3
repz
mov
das
adc
popf
sbb
aam
addb
jb
cmp
jp
add
fsubl
inc
pushf
pop
mov
popf
add
jl
sbb
xor
lret
test
mov
push
mov
push
in
mov
xor
add
in
lahf
add
jmp
pusha
std
mov
lret
mov
inc
mov
xchg
repz
stos
cmp
popf
mov
jno
push
cmp
xchg
jnp
or
cmp
inc
lret
rorb
outsb
and
or
imul
aad
mov
jecxz
xor
push
push
or
andl
loope
fdivrl
outsb
or
ss
sahf
add
mov
xchg
push
pop
scas
iret
mov
shlb
leave
iret
pop
lds
lods
gs
mov
mov
cmpsb
out
cmp
subl
xchg
mov
xchg
mov
and
or
push
jge
push
lods
add
push
insl
scas
mov
mov
hlt
fsubrp
je
clc
jbe
sbb
jp
movsb
into
or
dec
dec
pop
mov
fcmovu
out
sbb
lret
cmpsl
add
jp
insb
js
enterw
pop
jns
adc
js
in
dec
cltd
movhlps
lcall
cmp
or
or
or
push
aam
fsubs
fwait
jl
clc
fdivrs
mov
sbb
mov
hlt
mov
lods
lret
cmp
sbb
movsb
push
cltd
pusha
notl
dec
xor
xchg
mov
pusha
imul
xor
jge
xor
push
int
mov
lahf
sub
mov
push
mov
xor
push
outsb
sbb
sub
fs
outsl
inc
arpl
or
jne
inc
pusha
cmpl
push
xchg
push
mov
jns
mov
xlat
shrb
xchg
cld
sub
daa
iret
sti
pop
notb
fstpl
dec
aam
mov
sbb
imull
mov
dec
add
sbb
gs
imul
loop
pop
aaa
sub
and
mov
add
std
push
hlt
sub
push
pop
lds
cmp
aaa
and
outsb
imul
je
mov
sub
mov
jno
cltd
imul
loop
push
imul
pop
push
movsl
in
orl
out
fs
jg
push
jmp
jge
ret
dec
mov
sbb
and
pop
ss
dec
inc
out
cld
stc
mov
or
and
arpl
in
insb
cmp
add
enter
and
lds
sbb
mov
mov
xor
fwait
sbb
push
clc
adc
pop
mov
inc
lock
push
push
xchg
jp
fsts
fbstp
inc
push
hlt
insb
adc
sub
pop
xchg
jb
xchg
fld
pop
push
xor
arpl
and
pop
in
push
aaa
sarb
and
jne
int3
add
xor
adc
pop
movsl
pushf
add
inc
mov
es
shr
mov
nop
in
icebp
test
pop
testl
jo
pusha
inc
imul
inc
jp
lds
setne
dec
scas
dec
in
adc
stos
inc
mov
das
xlat
jno,pn
loope
insl
add
aas
pop
push
das
outsl
movsl
pushf
dec
adc
shlb
lahf
fcmovnu
jmp
jg
daa
pop
xlat
and
fsub
jmp
lret
jns
mov
jbe
stos
in
adc
stos
scas
test
fsubrp
mov
cltd
or
hlt
pop
adc
mov
mov
icebp
enter
aas
negl
ljmp
push
cmpsl
xchg
aam
mov
inc
enter
add
in
sarb
pop
push
mov
and
call
xchg
or
scas
add
or
xor
dec
sti
out
fisubrl
rcrb
es
imul
fnstcw
mov
xlat
pushf
ret
push
push
mov
test
aaa
jp
ss
jb,pn
jo
cmc
push
fbld
dec
add
adc
adc
fdivr
cmc
dec
sbb
mov
add
aas
adc
and
aad
sahf
icebp
jbe
and
sbb
mov
or
imul
sahf
add
daa
out
sub
mov
inc
pop
std
push
cli
push
icebp
lret
loop
clc
dec
push
roll
pop
mov
xor
jns
in
inc
dec
inc
cwtl
add
xchg
push
push
jae
test
out
popa
mov
xchg
xchg
lea
movsb
fisttpl
nop
sti
neg
sbb
pop
sub
movsl
insb
adc
cmc
sbb
adc
xor
mov
je
fcomps
add
cmp
lods
add
les
call
and
pop
mov
xlat
in
jg
push
and
lods
lock
addl
pop
aad
mov
adc
inc
xor
ja
xchg
push
fs
sahf
jp
int
addr16
xor
inc
stos
xchg
fistps
mov
adc
adc
fisubl
pop
cmovge
loopne
add
or
adc
mov
rcrb
adc
insl
push
movsl
cmp
aas
psadbw
adc
loopne
cli
repnz
fcomip
repnz
push
ds
or
pop
or
xchg
pop
add
js
hlt
mov
dec
loope
sbb
es
push
push
jae
cmp
popf
lods
mov
push
dec
mov
test
mov
pushf
mov
cli
add
arpl
xchg
mov
ds
test
lods
sub
ror
neg
jle
ds
add
fisubs
fsubl
int3
int3
mov
jmp
sti
fs
das
movsb
push
rcl
cltd
sub
pusha
cli
push
xor
jge
js
punpckhbw
sbb
iret
sbb
aaa
mov
push
xchg
ja
and
cltd
adcl
scas
push
data16
push
inc
jnp
cltd
pop
or
sar
push
outsw
insl
std
jo
pop
pop
mov
popf
lods
into
outsl
mov
dec
pop
sahf
pop
das
push
mov
mov
sub
dec
lock
in
jecxz
mov
addr16
fcmovnbe
into
std
test
sbb
and
jo
pop
mov
xlat
xor
jecxz
mov
xchg
das
rol
jb
stos
cmp
test
std
jp
lret
jns
dec
adc
xor
fldl
in
test
icebp
sbb
mov
adc
pop
jle
and
sti
mov
fmul
out
aaa
fiadds
jp
xchg
dec
out
sbb
adc
test
fcoml
movb
daa
jge
insb
scas
hlt
gs
in
cwtl
scas
in
jns
daa
mov
push
aad
sbb
sbb
add
aad
leave
jae
inc
mov
sbbl
ret
inc
test
dec
push
cmp
and
xchg
out
dec
push
dec
push
or
push
es
sahf
push
mov
out
mov
stos
lods
je
addl
mov
mov
mov
rcl
test
mov
xor
call
in
dec
and
dec
xlat
xor
cmp
jnp
and
ret
aas
jbe
lahf
lea
sub
inc
push
and
pop
sti
repnz
out
push
add
sahf
ds
outsb
mov
sahf
xor
push
or
xor
inc
sbb
std
dec
add
lock
push
scas
ficoml
push
enter
push
jae
hlt
inc
push
out
scas
test
je
aaa
mov
dec
and
xchg
out
jl
cltd
push
xor
loop
push
data16
pop
mov
adc
pop
mov
flds
xlat
sar
imul
dec
xchg
fwait
cli
mov
sub
mov
jbe
add
or
stc
icebp
jne
cmp
mov
inc
test
xor
imul
cld
leave
xor
ja
cs
add
aaa
add
jbe
cli
out
fucomp
dec
hlt
das
les
adc
pop
mov
xchg
mov
sub
loopne
and
leave
sub
out
pop
shll
push
push
adc
cmp
fwait
xchg
lea
and
pop
adcb
loope
loopne
cmp
rcr
into
sbb
jbe
xor
or
movsl
outsl
mov
ljmp
jae
pop
fnsave
cmpsb
xchg
dec
cli
push
jbe
mov
pop
lret
push
enter
call
fnstsw
in
sub
pop
lea
js
push
pop
mov
or
call
fnstsw
in
sub
pop
lea
js
push
push
test
test
jmp
fnstenv
in
sub
pop
mov
jl
pop
pop
subb
cmp
clc
lods
push
ja
in
sub
xchg
xchg
lds
push
test
pop
bound
or
add
pop
add
add
add
add
inc
add
add
add
add
add
add
push
add
insl
add
add
jnp
mov
add
pop
add
repz
js
or
add
add
repz
add
add
add
add
mov
add
xchg
add
popl
xor
movl
popl
jl
cltd
add
add
insl
add
add
add
add
add
add
add
mov
fildl
push
add
add
add
push
add
add
add
add
add
dec
add
add
imul
outsl
add
out
add
add
imul
add
js
push
add
add
jge
imul
outsl
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
lret
add
add
lea
xchg
add
jge
jae
outsl
add
sbb
push
add
add
add
push
add
roll
add
add
add
add
insl
add
add
add
int3
add
add
add
xchg
add
add
add
jge
icebp
add
add
add
add
adc
sub
add
or
add
inc
add
icebp
add
add
add
add
add
add
add
rolb
add
add
add
push
add
jge
xor
sbb
adc
clc
add
mov
fiadds
and
lcall
add
add
add
lret
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
jp
xchg
add
aad
cmp
add
add
jge
icebp
add
add
dec
add
jge
xchg
add
mov
push
add
add
add
add
add
insl
add
sub
add
add
add
push
add
add
and
jge
pop
add
add
or
push
add
aam
xor
ljmp
add
add
add
add
add
fwait
add
add
add
add
sbb
adc
push
add
add
add
add
add
dec
add
add
add
inc
add
add
add
lret
add
add
add
add
add
add
sbb
imul
add
add
add
add
inc
add
add
sub
pop
add
add
roll
add
add
add
add
add
imul
int3
add
add
add
add
add
mov
add
add
out
jnp
roll
xor
jge
jge
nop
add
xchg
roll
add
add
add
add
add
add
push
add
cmp
jge
jge
push
add
data16
add
add
push
add
xlat
add
jge
inc
add
add
add
mov
add
add
add
adc
cmp
add
add
add
add
add
test
push
jg
stos
inc
xorb
jno
xor
dec
nop
pusha
popf
mov
sub
hlt
xor
stc
ja
mov
lahf
cltd
in
jmp
cwtl
cmp
test
pop
cld
int
pusha
or
push
add
insl
push
dec
out
mov
shl
xchg
sbb
push
sbb
push
cmp
mov
xor
mov
movsl
into
jle
into
jae
out
mov
clc
imul
push
mov
mov
dec
inc
daa
fmul
lods
cs
sbb
jecxz
jne
fprem
stos
test
test
xor
add
cmpsl
jmp
pop
or
repz
pop
push
sbb
daa
mov
out
cli
div
mov
sub
cmpsl
fsubr
xchg
mov
lret
and
cmc
xor
mov
lret
stos
shlb
cmc
jl
adc
dec
jnp
xlat
adc
sub
adc
fstl
scas
adc
and
in
or
xor
or
xlat
xlat
add
xor
and
js
dec
int
nop
adc
int3
imul
and
pop
cli
sar
test
lock
sub
in
jl
pop
cld
inc
enter
call
into
jg
aas
adc
das
fnstcw
add
cli
adc
and
sub
xchg
dec
dec
fsub
xchg
pop
xor
scas
sarl
or
xchg
loop
jno
jp
aad
mov
adc
adc
push
insb
imul
jmp
mov
lahf
or
lcall
and
jge
lahf
out
xchg
push
lahf
mov
pop
pusha
nop
sbbb
fistps
mov
or
xchg
loopne
insb
sarl
cli
mov
add
add
gs
loop
adc
dec
mov
test
rcrb
das
out
dec
mov
jmp
push
sub
cli
fiadds
mov
mov
mov
into
insl
lock
cmc
jno
jmp
jne
dec
adc
jno
xlat
adc
inc
dec
push
daa
sbb
test
movsl
jbe
ja
aam
add
pop
cld
inc
xor
jo
fdivrs
push
pop
mov
fdivrl
and
popa
ret
ficoms
jo
int
into
lret
out
shlb
mov
mov
push
and
rorb
clc
push
sarb
loop
sub
adc
fbld
mov
sub
jmp
jle
lods
adc
xchg
mov
cmpsb
icebp
or
jg
cmc
scas
out
xchg
mov
cs
cwtl
out
in
add
fcompl
sti
or
arpl
mov
lcall
leave
jae
leave
std
in
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
