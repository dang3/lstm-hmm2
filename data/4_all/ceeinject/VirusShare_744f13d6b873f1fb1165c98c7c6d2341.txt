es
add
add
add
add
cwtl
in
popa
sahf
pop
data16
in
popa
inc
std
sub
js
dec
loop
push
fistpll
push
pop
xor
inc
and
xor
fidivs
out
sub
adc
jecxz
and
enter
loope
inc
bound
adc
loopne
jge
sub
cmpsb
pop
out
repz
jae
adc
or
push
inc
lds
stos
dec
cmpsl
xor
dec
xchg
dec
mov
pop
int3
mov
mov
push
xchg
aad
addr16
arpl
sbb
mov
adc
in
stos
or
inc
or
fwait
fwait
add
lahf
jmp
out
xorb
js
movsl
movsl
int
pop
jbe
pop
pop
icebp
fisubrs
jle
cmc
dec
jae
jnp
repnz
mov
call
mov
fcmovne
xor
sbbb
jo
mov
in
movsl
jns
sarb
ret
push
mov
mov
mov
inc
and
ljmp
cmp
loopne
pop
mov
xchg
test
in
lahf
sbb
mov
or
mov
mov
aaa
inc
sbb
xor
fwait
xchg
cld
lea
pusha
ljmp
int3
xor
in
pop
gs
testb
lods
cltd
je
addl
in
adc
bound
mov
insl
movsl
mov
scas
xorb
iret
xchg
xchg
add
pop
pusha
inc
enter
jle
orl
divl
jmp
and
insl
mov
flds
jle
or
dec
add
inc
inc
add
cmp
popa
es
bound
and
scas
aam
fsubs
movsb
inc
jno
push
das
sbb
inc
jbe
or
sbb
jmp
mov
sahf
test
mov
xchg
adc
add
mov
mulb
xor
out
mov
outsb
push
mov
mov
push
loopne
xchg
xchg
subb
and
pop
sbb
mov
loope
mov
mov
repz
cmc
clc
gs
mov
pop
adc
sbb
jb
xchg
and
pop
insl
ja
or
push
inc
iret
adc
add
mov
xor
add
push
int3
dec
sbb
mov
push
stos
xchg
popf
cmp
stos
outsl
pop
scas
fldcw
sub
mov
jmp
sbb
sbb
in
sbb
jmp
stos
pop
cmpsl
int3
mov
mov
add
gs
out
daa
and
add
dec
mov
xor
xchg
inc
mov
je
xchg
jno
push
icebp
lret
adc
insl
adc
push
test
add
fldl
bound
clc
fidivl
out
inc
xchg
adc
stc
jge
mov
jo
test
leave
cld
sbb
xchg
dec
outsb
lret
adc
mov
roll
inc
popa
andl
sub
mov
lahf
dec
dec
lcall
and
inc
rol
stos
insb
cwtl
sub
mov
push
int
in
lds
cmp
sbb
dec
lret
test
xchg
jmp
cmp
sub
mov
ficomps
or
sbb
clc
sahf
mov
fists
mov
sub
push
cmp
pop
pop
push
jecxz
jae
sbb
sub
cmp
jg
out
lea
pop
fisubrl
pusha
and
push
xlat
mov
mov
aas
mov
test
sub
insl
or
or
pusha
test
and
fldl2e
ficoms
mov
and
out
in
sub
out
popa
dec
xchg
pop
inc
mov
loopne
lods
jbe
js
aaa
enter
das
or
add
mov
lret
sti
add
or
lds
and
in
popa
xor
in
sar
or
dec
leave
das
fdivrp
adc
xor
iret
fisttpll
shlb
cmp
cmp
ret
jb
pop
xchg
dec
ret
mov
pop
lods
aam
jmp
fcomps
push
test
in
mov
pop
jl
jo
add
xchg
insl
adc
outsl
inc
in
rcr
cld
idivb
pusha
out
dec
stc
aaa
es
es
mov
sbb
add
mov
pop
xor
xor
inc
movsb
jo
jl
aad
hlt
les
aad
dec
inc
ret
in
movsb
pushf
adc
incl
es
push
push
lock
lret
outsb
jo
pop
sub
cli
adc
aad
sbb
lcall
lahf
aam
push
sub
push
sar
ljmp
and
dec
lea
pop
cmp
push
lock
ss
jbe
pop
mov
xchg
pop
int3
test
mov
cmpsl
push
mov
rolb
rcrb
push
sub
dec
lock
dec
inc
out
mov
hlt
cltd
jno
cmp
movsl
inc
add
cmp
jle
or
insb
mov
sbb
dec
in
scas
aam
cltd
stc
aam
push
inc
popa
xor
ljmp
popf
push
inc
adc
mov
adc
jb
xor
xchg
sti
je
enter
into
mov
mov
push
repz
or
jno
jp
fwait
dec
lcall
aad
jne
xor
aas
inc
xor
jno
mov
cmpsl
gs
add
mov
inc
ret
gs
jae
pavgw
mov
mov
out
lock
and
add
pop
push
xor
mov
xor
sub
push
mov
pop
fbld
das
jl
pop
adc
xor
jp
fnsave
xchg
jns
dec
dec
lahf
mov
ret
jecxz
sarl
outsl
rcl
icebp
lods
push
mov
pop
or
into
push
ret
mov
aam
xor
dec
inc
outsb
xor
js
shrb
ljmp
aas
xchg
push
xchg
dec
and
pop
push
or
cmp
xchg
mov
imulb
cmp
jbe
pusha
aaa
xchg
enter
pop
cmp
shlb
pop
fcomps
push
call
mov
movsl
sub
lods
pop
stos
xor
fistl
or
push
lahf
cmp
fwait
add
dec
pop
adc
xor
lcall
jecxz
mov
aad
mov
dec
dec
xchg
roll
push
imul
test
sbb
mov
out
sub
push
pushf
jmp
pop
ss
movsb
adc
mov
aad
shl
sub
fidivrl
xchg
ret
hlt
js
mov
popf
push
pop
adc
mov
js
and
adc
cmpsb
mov
add
sbb
jae
lock
sbb
sarl
push
sub
mov
pop
das
dec
clc
sahf
sbb
insb
inc
dec
jl
push
dec
pop
pushf
or
hlt
mov
fldt
repz
jne
adc
popa
test
xchg
rorl
daa
ret
pop
js
outsl
es
ret
out
mov
addr16
mov
outsb
adc
jmp
mov
mov
sub
out
subl
out
xchg
in
fadd
aam
int
fdivr
jne
pusha
inc
movsb
int3
lahf
iret
jmp
inc
cmc
pop
lcall
push
pop
jle
repz
daa
cmp
xchg
loope
jmp
xor
mov
pop
and
lods
mov
scas
jp
push
loope
pushf
les
lcall
adcl
cmpb
jle
inc
insl
rcll
insl
mov
cmp
stc
dec
das
adc
sbb
mov
push
dec
leave
cmp
cmp
stc
xlat
add
roll
cmpsl
sbb
and
fwait
arpl
popa
ret
mov
inc
adc
cmp
jge
das
xchg
or
ds
or
fsubr
xchg
cmp
js
pushf
cmp
or
mov
and
dec
fwait
aad
gs
fisttpl
sahf
adc
ret
rorb
movsb
or
dec
les
or
sub
push
dec
int
mov
mov
adc
movsb
push
idivl
pop
andb
mov
gs
or
pop
rcrl
and
or
icebp
cmp
lea
push
clc
xor
ret
jnp
mov
sahf
mov
and
jae
mov
jae
pop
loop
dec
cmp
or
dec
shr
xchg
scas
sahf
loop
push
jecxz
jno
adc
repz
sub
inc
lds
fiaddl
cmp
lods
inc
mov
add
xchg
aas
cmp
stos
je
sahf
pop
push
adc
xchg
adc
sbb
jo
sbb
pushf
loop
sub
inc
xchg
and
push
mov
cmp
sub
dec
pop
loopne
hlt
cmp
xchg
mov
int3
dec
pop
sarl
push
xor
iret
rorl
adc
bound
fildl
fdivl
mov
loopne
mov
fldl
mov
jmp
mov
xlat
xor
jmp
insb
fadd
cmpsb
push
inc
out
jmp
stos
sbb
xchg
and
lds
cltd
sub
ljmp
and
idiv
mov
pop
fnstenv
cmp
pop
mov
jbe
lods
cltd
roll
adc
jnp
out
xor
jno
push
push
mov
orl
ss
js
inc
mov
push
xor
pop
adc
imul
imul
je
and
mov
add
imul
lahf
add
xor
inc
mov
adc
pop
xor
adc
clc
je
sahf
lods
adc
les
lea
ja
push
lock
cltd
push
into
and
shll
stc
cmp
push
popf
xchg
sbb
push
sti
inc
fldl
dec
sbb
stos
jb
out
loope
and
xor
or
lock
pop
xorb
ljmp
xchg
jae
pusha
mov
pusha
sbb
jmp
xlat
xor
fidivrs
cmpl
pop
pop
insl
adc
out
cmc
and
sbb
lcall
imul
jae
push
in
dec
sbb
push
cld
mov
es
pop
jg
xchg
adc
es
dec
push
popa
call
fldenv
dec
negb
mov
not
js
out
pop
scas
mov
mulb
mov
sub
repz
in
jne
sbb
xchg
mov
data16
addr16
out
js
cwtl
lea
imul
jp
push
mov
xor
xor
aad
push
scas
jno
jb
mov
js
dec
jno
fistpll
inc
call
sbb
add
shl
pop
lds
call
ffree
sub
xor
xchg
cmp
mov
ds
mov
call
inc
add
mov
xor
mov
dec
movsb
xchg
mov
out
mov
jae
ret
pop
sarb
jbe
test
mov
xlat
pop
ja
cltd
popf
sbb
out
cmp
in
mov
imul
addb
inc
fimull
loope
mov
pop
mov
add
aad
jbe
out
jmp
mov
out
insb
xor
popa
inc
mov
mov
xchg
mov
sub
sub
pop
cltd
jnp
fisttps
shlb
pop
pop
xchg
jo
dec
mov
aaa
in
push
xchg
addr16
jle
add
cmp
nop
or
popf
add
or
ds
leave
iret
dec
lods
mov
push
add
outsb
or
sub
lock
jb
test
test
mov
ljmp
fadds
xchg
inc
adc
ljmp
je
pop
not
cmp
or
inc
insl
popa
pop
lcall
mov
or
into
mov
mov
and
mov
cmp
subb
fwait
or
sub
in
sbb
cmpsl
push
lea
cmp
or
mov
dec
push
pushf
test
ret
sbb
test
repnz
aas
aad
lcall
ret
iret
lock
jmp
in
cld
xor
jae
movsb
loop
xor
inc
sbb
or
arpl
aaa
cmp
adc
xor
or
mov
fldcw
dec
pop
lahf
mov
into
sub
jge
sub
int3
mov
and
fcmovnb
cmc
xchg
in
jge
cmp
sbb
cs
jns
or
jo
cmp
pop
inc
mov
call
test
into
xchg
mov
test
iret
mov
outsb
fistl
pop
dec
jo
arpl
les
mov
shrb
cmp
imul
cwtl
or
cwtl
pusha
sti
fildll
test
add
lret
std
pop
cwtl
pop
xchg
and
pusha
loopne
clc
lods
push
push
int3
out
pop
cmp
add
adc
jecxz
adc
mov
icebp
cltd
mov
xchg
pop
les
jecxz
push
in
ljmp
sub
add
ljmp
pop
cwtl
xchg
mov
test
incl
mov
out
sarl
sti
sub
or
dec
adc
stc
xchg
mov
daa
lods
xchg
mov
mov
sub
add
adc
mov
xchg
insb
dec
fdivrs
cmp
or
shlb
adc
decl
or
pop
mov
lds
leave
in
fldcw
cmpsl
lret
enter
je
mov
xchg
movq
jle
sub
aam
sbb
pop
jmp
flds
and
push
shrb
mov
pop
pop
and
je
inc
cltd
xchg
xchg
add
dec
mov
dec
stc
into
dec
je
not
pusha
nop
mov
pop
lock
insb
into
ja
and
push
test
jne
sbb
xor
adc
or
lahf
cmpsl
mov
test
and
inc
push
cwtl
push
jb
pop
mov
mov
movsl
je
jg
enterw
test
xchg
adc
cld
fstpl
cli
stc
aas
jg
inc
stos
mov
mov
xor
call
cmp
enter
push
mov
cli
dec
movsl
mov
or
inc
and
pop
sub
sbbb
cmpsl
mov
lods
adc
in
pop
rorl
xchg
dec
je
mov
push
mov
filds
pop
into
inc
pushf
sub
push
mov
cmp
cmpsl
mov
sub
add
std
data16
mov
push
pop
roll
ss
jecxz
mov
andl
aaa
sahf
scas
or
mov
mov
nop
shll
je
xor
aaa
ret
cmp
dec
lds
dec
mov
sbb
cmp
das
in
outsb
cmp
cld
lods
mov
pusha
mov
pop
sti
push
sbb
in
or
lds
mov
push
sub
ja
gs
dec
test
xchg
push
gs
jecxz
loope
jl
inc
dec
lods
push
jmp
mov
xlat
scas
lret
mov
mov
mov
addr16
mov
mov
in
int3
inc
call
pop
notl
xor
pop
adc
jle
imul
or
mov
divl
or
fistl
add
cltd
insb
cmc
push
pop
ljmp
xchg
sahf
aaa
in
test
mov
enter
adc
ficoml
jp
call
mov
stc
cmp
or
sub
popa
mov
je
stc
test
aas
in
pop
std
mov
sub
repz
loopne
sbb
push
cld
insl
mov
neg
nop
rcrl
cld
xor
and
imul
aaa
insb
lods
movsb
lret
cld
or
inc
add
push
mov
mov
cmp
mov
nop
jbe
mov
xor
je
test
or
stc
push
out
sub
push
fildl
push
out
rorl
aaa
out
dec
cld
add
or
push
mov
or
lret
sub
mov
pushf
mov
hlt
sub
cmp
in
mov
mov
pop
outsb
and
jp
adc
enter
sub
mov
jle
adc
sti
ret
pop
mov
mov
scas
aad
js
jbe
and
outsb
cmp
fnstsw
dec
mov
test
xchg
out
fcomps
in
jns
push
jle
mov
mov
cwtl
and
shr
daa
and
shrb
pminub
daa
js
out
aaa
or
cmc
scas
xchg
andl
aad
outsl
push
inc
pop
ffreep
xchg
sbb
cmc
lds
loope
mov
mov
sub
test
sarb
mov
xchg
stos
push
lods
and
jbe
xchg
mov
or
push
loop
sbb
movl
out
ds
lahf
clc
xor
push
add
jge
push
add
jle
push
fdivl
cltd
mov
xchg
cli
jecxz
scas
pop
pop
adc
inc
jl
jp
je
addr16
or
ljmp
aaa
push
sub
jns
movl
lret
sbb
in
enter
nop
pushf
push
stos
popa
negl
test
out
inc
lds
xor
ss
sbb
jbe
es
es
sahf
inc
xchg
in
test
xchg
jne
dec
insl
xor
in
sub
pop
jbe
jecxz
punpckhbw
mov
dec
lret
aad
jl
push
out
rorb
jge
jbe
mov
and
je
je
mov
fnstsw
out
push
push
sub
adc
lret
cmpsb
push
lods
xor
icebp
inc
mov
outsl
pusha
xchg
mov
xor
das
sub
dec
and
loope
dec
test
jae
xchg
mov
aaa
or
cmpsl
and
jmp
adc
xchg
push
sub
in
int
mov
add
scas
and
repz
jae
mov
fldt
fisttps
mov
call
or
jnp
iret
dec
lret
sub
int
enter
sahf
rcrb
fidivrl
adc
sub
in
ret
dec
dec
pop
push
and
pushf
jp
scas
cmp
repz
enter
inc
sahf
sbb
xchg
jl
inc
scas
in
xchg
out
cmp
and
or
sbb
mov
pop
nop
mov
add
dec
repz
cltd
dec
ret
lahf
jbe
call
jmp
cmp
cld
inc
fisttpll
lahf
lcall
push
mov
and
or
fidivs
inc
into
mov
aaa
push
lods
fsubrs
lea
mov
jle,pt
lods
and
das
push
push
test
dec
out
mov
add
xlat
jb
xchg
movsb
jp
loopne
mov
xchg
mov
gs
into
push
popa
in
arpl
pushf
xchg
out
testb
pop
jnp
add
imull
lcall
adc
push
bound
ret
push
jbe
jb
mov
adc
dec
push
jbe
dec
or
add
pop
and
mov
add
lds
out
inc
add
loop
cmp
jmp
xchg
jmp
fisubs
stc
jl
pop
and
lock
xchg
insl
and
mov
in
js
ficoml
push
sbb
sbb
stos
js
cwtl
outsb
imul
cmc
js
xor
and
push
ret
lret
mov
jnp
lahf
lds
mov
negl
in
sahf
cld
push
xor
xchg
jle
push
sti
lret
xor
fadds
out
xchg
add
add
xchg
pop
daa
mov
test
arpl
mov
ljmp
jp
add
imulb
xchg
push
push
and
cwtl
mov
popf
pop
cmp
xchg
jecxz
sarl
repz
fucompp
and
xchg
lahf
mov
sub
mov
lods
mov
or
or
andb
jl
adcl
mov
cmp
aad
add
loope
adc
lcall
fdivrs
clc
bound
xchg
cs
mov
aaa
ss
xchg
mov
sbb
push
mov
pop
arpl
mov
lret
fldl
test
pop
aaa
pop
and
cltd
fnstsw
and
loop
mov
inc
test
pop
in
rorb
push
or
adc
fistl
ds
push
loopne
es
addr16
into
sub
mov
add
add
add
pop
push
mov
sti
std
lret
pop
mov
pop
dec
cmpsb
popf
loopne
rcrb
ds
sbb
lods
in
jo
or
jg
rcll
orb
pusha
test
pop
sbb
jae
push
test
mov
pushf
nop
add
push
in
mov
cwtl
pop
es
loopne
push
ret
fimull
adc
add
ds
inc
sahf
pusha
fs
xchg
je
xchg
sarl
jne
orl
pusha
xor
mov
bound
loope
test
loope
or
aas
fldl
insb
pusha
ds
xor
dec
mov
mov
test
aaa
negl
cmp
sbb
mov
jmp
adc
shll
rcll
push
lods
shrb
ficompl
mov
clc
enter
mov
es
sub
fwait
mov
mov
mov
pop
or
and
add
mov
mov
ljmp
pop
rcrb
inc
pop
inc
dec
mov
das
fistps
add
nop
jmp
inc
push
sahf
sbb
imul
das
insb
dec
in
arpl
into
push
lods
mov
lcall
jo
loope
addb
fidivs
inc
xor
dec
mov
xchg
push
jns
test
je
and
mov
mov
xor
mov
outsl
jnp
mov
inc
sub
lea
popf
movsb
movb
rorl
in
test
ficomps
push
subl
sub
aaa
imul
imul
mov
loope
lret
push
int3
or
out
lret
and
jmp
bound
test
add
jb
push
es
rolb
js
pop
xor
ja
lea
or
mov
daa
adc
mov
loopne
xlat
pmaxsw
idivb
cs
mov
shl
in
sahf
and
lods
sub
movsb
xor
push
cmpsl
xor
xchg
stos
and
in
pop
cmp
sahf
push
push
dec
rcpps
repz
mov
arpl
push
or
in
and
pop
daa
ljmp
int3
into
inc
pop
repnz
das
mov
mov
aad
ficoml
sub
xor
mov
inc
and
fstps
or
scas
dec
mov
cmp
outsl
push
or
addr16
xor
notl
xchg
add
mov
push
add
pop
nop
sub
push
gs
gs
dec
mov
mov
scas
test
inc
aaa
mov
icebp
rorl
out
sub
aad
cwtl
sub
push
sub
pop
lds
jo
inc
jmp
or
hlt
xchg
mov
xchg
xor
sbb
outsl
jge
push
js
or
mov
jge
call
adc
add
sbb
shll
sbb
das
outsl
cmc
jnp
ss
fldenv
cmp
test
es
loop
inc
outsl
jne
mov
mov
and
add
cmp
icebp
test
stos
out
ficoml
dec
outsl
mov
das
jnp
xor
sub
mov
lods
and
xchg
jnp
xorb
dec
sbb
fiaddl
and
push
test
push
pop
mov
std
ljmp
js
aad
call
mov
pop
pop
push
fsubl
movsb
jae
xchg
jp
sahf
ljmp
lcall
push
std
ja,pt
add
adc
cmp
out
inc
push
test
popa
popa
cwtl
pop
and
lock
mov
sub
xchg
rcrb
les
ret
leave
fistps
shll
sahf
add
xchg
inc
push
push
lret
out
unpcklps
xchg
jbe
and
xchg
inc
stos
mov
adc
scas
in
fstpl
int
fdivl
sub
int3
push
ret
aam
add
and
sti
iret
push
push
out
call
adc
sbb
push
inc
mov
movsb
bound
imul
out
in
ss
lret
out
push
repnz
imul
pop
jne
pop
call
mov
test
jl
addr16
inc
test
cltd
mov
jno
nop
ja
fcmovbe
cs
faddl
xor
pushf
mov
iret
jecxz
mov
popa
cmp
aam
sub
out
lcall
fdivrl
jle
or
and
je
mov
sahf
cli
and
enter
push
imul
arpl
sub
cmp
add
push
or
pop
xor
dec
addr16
sub
xchg
inc
xor
arpl
mov
mov
cmp
pop
ficompl
mov
or
mov
mov
and
jns
test
xor
inc
and
adc
pushf
movsl
adc
ret
ja
cmpsb
in
xor
scas
sbb
push
xchg
xor
xor
adc
mulb
pushf
js
cmp
adc
cmp
jge
jbe
pop
sbb
in
std
push
test
cli
cli
idivb
lods
xchg
fstps
pushf
fiaddl
cmp
cmc
add
movsl
sbb
sub
jbe
add
sbb
push
xor
mov
add
pop
pop
cmpsl
daa
xor
enter
dec
sub
add
mov
je
test
lret
sub
test
mov
cmp
or
movsb
lret
mov
int3
and
pop
mov
fidivs
jmp
negb
movsl
fisttpll
and
pop
mov
lret
add
sbb
jmp
mov
push
xchg
push
sti
ficoml
es
xor
push
aad
or
jae
enter
test
lret
fcmove
mov
xor
cmpsl
lret
xchg
cmp
insl
add
jo
add
xor
adc
mov
ficomps
mov
jle
xchg
push
jo
add
jecxz
nop
push
mov
pushf
repnz
add
sbb
test
lret
dec
into
mov
dec
xor
insl
sbb
addr16
sub
in
test
xchg
mov
pop
lret
jmp
adc
aad
xor
xor
ret
enter
imul
push
sbbb
jg
inc
pushl
and
sub
sbb
lods
push
xchg
pop
cmp
lods
test
imul
vpsadbw
loopne
mov
ss
sbb
adc
xor
cld
sub
mov
out
enter
push
dec
mov
lods
cmp
dec
xlat
icebp
repnz
and
jae
jl
add
call
test
sub
xor
int3
testb
xchg
arpl
inc
mov
pop
push
xor
repz
in
add
push
ret
lock
sub
and
push
in
sub
xor
dec
arpl
push
sbb
push
push
sbb
dec
aas
idiv
dec
mov
ja
push
cmp
or
lahf
shrb
xor
mov
add
mov
dec
lahf
fistl
scas
sarb
dec
fldenv
imul
pop
js
pusha
roll
loop
and
pop
push
mov
ja
sbb
mov
mov
xchg
fsubl
and
repnz
shl
enter
js
sti
sbb
test
pop
dec
cltd
adc
lea
jne
dec
test
dec
divl
popf
mov
hlt
fsts
cld
pop
dec
xor
pop
icebp
push
sbb
adc
dec
inc
lock
dec
xchg
or
xor
je
mov
jp
dec
pushf
or
cmp
mov
lahf
imul
mov
dec
test
ficomps
jmp
icebp
mov
pop
cmp
loop
outsb
mov
loop
mov
sbb
cmp
or
out
sbb
lods
lods
jp
mov
pop
or
pop
add
cmp
adcb
add
jl
ret
add
push
mov
sbb
loop
lods
cmp
dec
imul
cmp
jecxz
jno
shll
sahf
add
sbb
idiv
xchg
and
sbb
jge
subl
vmwrite
mov
out
pop
mov
mov
add
jno
mov
mov
scas
loopne
test
mov
push
shll
xchg
or
and
sbb
jmp
fwait
jecxz
push
loopne
mov
xor
xlat
scas
mov
mov
fiaddl
add
mov
adc
pushf
sarb
xlat
sahf
out
in
or
mov
out
imul
icebp
lds
test
adc
xor
mov
loope
ret
int
sbb
clc
xchg
lcall
inc
sub
fildl
cmove
xrelease
pop
pop
sub
pop
int
fs
orl
inc
mov
sub
call
xchg
rcll
pop
aad
lods
shl
mov
xchg
sbb
jnp
lahf
jo
cmp
jb
loope
mov
imul
frstor
mov
jo
flds
int3
movsl
leave
push
insb
insl
arpl
ret
add
xchg
mov
push
nop
xor
sub
xchg
rclb
inc
jnp
mov
xor
ffree
push
push
ret
inc
jb
les
stos
mov
pop
test
ljmp
lock
test
dec
in
cs
jne
pop
mov
pop
ds
jmp
neg
adc
leave
mov
cmp
insl
sbb
push
adc
mov
cmp
jae
nop
sbb
frstor
testl
outsb
mov
cmp
sbb
fimull
pop
test
jmp
mov
mov
or
cmp
sub
cmp
loop
lahf
mov
fwait
in
cmp
or
clc
inc
sub
adc
outsb
inc
movsb
cs
and
adc
jmp
push
xchg
ds
aaa
sbb
push
in
jle
and
dec
popa
das
mov
fidivrs
push
out
sub
dec
or
mov
movsb
mov
lods
shl
cmpsl
xchg
cmp
pop
roll
subl
les
fidivrl
and
add
inc
push
or
jo
pop
jns
inc
adc
mov
test
pop
in
fwait
jo
xchg
cmp
lcall
mov
xchg
dec
cs
sub
mov
fisttps
aaa
mov
xchg
xchg
jecxz
pop
call
in
js
inc
mov
daa
or
sub
mov
repz
xchg
adc
ffreep
jo
jl
xchg
js
dec
stc
imul
jecxz
add
sbb
icebp
repnz
in
rcrl
fs
int3
xlat
inc
jo
sbb
and
mov
aas
push
movsb
adc
push
mov
int
mov
sti
xor
dec
daa
leave
push
jge
test
jge
pop
adc
stos
jl
pslld
sahf
jmp
jno
or
push
mov
mov
jo
jmp
inc
mov
lock
sbb
adc
mov
iret
add
frstor
sahf
test
mov
out
jmp
pop
test
xor
enter
sbb
and
lahf
shlb
fnsave
out
popf
int
cld
mov
jbe
punpcklbw
xor
fidivrs
inc
jns
lods
sbb
add
cli
mov
cli
aad
xor
mov
insl
jne
push
cld
fdivs
mov
pop
push
push
sub
mov
iret
popf
fistl
mulps
and
divb
adc
push
mov
movsb
mov
jecxz
lahf
pop
in
mov
fldl
outsb
mov
cltd
loop
jl
fucomi
xor
sub
aam
add
ss
mov
js
mov
add
std
add
jp
add
aam
sbb
pop
stc
mov
loope
dec
add
fisubs
imul
cmp
sbb
sbb
bound
adc
aaa
xchg
or
xor
sub
outsl
sub
sbb
push
lea
dec
outsl
into
lock
jbe
mov
mov
or
xorb
xchg
xor
fcoms
and
lods
inc
clc
mov
jge
lret
ss
movsl
mov
mov
stos
bound
inc
stc
jb
test
mov
adc
adc
movsl
jb
sbb
xchg
xor
aam
inc
arpl
push
movsb
mov
xchg
and
cmp
fwait
pushf
jae
sub
scas
sbb
and
hlt
fsubrs
jae
sub
loopne
out
adc
out
adc
adc
sbb
cmp
sub
out
in
loop
jl
cli
mov
jno
int3
pushf
inc
mov
sub
pusha
sbb
xor
test
stos
inc
in
outsb
lret
fmull
mov
jae
out
js
adc
mov
add
in
test
sbb
nop
mov
push
lcall
jno
out
mov
pop
insl
sub
clc
sti
mov
scas
mov
decb
fistpll
ss
inc
fwait
ljmp
lods
shll
ja
mov
rcrb
jp
mov
add
sbb
insb
cmp
xor
mov
out
sub
sti
xchg
add
inc
pop
mov
push
inc
adc
dec
mov
xchg
jp
cmp
lds
test
push
lock
mulb
dec
jge
repz
jge
sti
ret
lds
pop
mov
ljmp
nop
rcrl
xlat
enter
ja
mov
lods
test
ds
push
leave
jge
outsl
push
jecxz
sti
mov
pop
loop
xor
adc
fnstsw
in
int
xchg
shrl
or
and
adc
mov
push
mov
mov
inc
inc
lret
add
inc
loop
sti
push
mov
fndisi(8087
outsl
imul
scas
in
mov
data16
repnz
fcoml
out
mov
or
mov
pusha
fistpl
stos
add
jbe
leave
cmp
cmp
lods
loopne
sub
out
aas
ss
int
clc
sbb
adc
stos
pop
shll
mov
daa
aaa
ds
cmp
sbb
push
repz
jnp
les
lret
loope
ret
jecxz
mov
jmp
cltd
ret
or
stc
int
push
in
sbb
push
fistpl
jg
and
inc
push
lcall
push
jae
xchg
mov
fisubs
adc
xchg
xor
sbb
div
mov
cmp
or
ja
addb
xchg
add
xlat
loope
ror
mov
cli
cmpsb
adcb
jmp
loopne
cmpsl
out
cmp
repnz
sub
dec
pushf
fs
jnp
mov
into
cs
jae
jnp
mov
out
movsl
cmp
push
cmp
xchg
mov
test
pop
pop
mov
xor
push
push
jo
inc
jbe
jo
daa
fsubl
fmul
out
sub
ja
mov
mov
xlat
rcrl
add
in
aaa
fnstsw
xor
fsts
cmp
mov
mov
dec
xchg
adc
shrb
cs
out
dec
outsl
das
out
enter
add
mov
dec
xor
test
adc
into
xor
call
test
lods
inc
fwait
xchg
fmulp
stos
sbb
and
aam
clc
adc
xchg
inc
cmp
cli
int3
mov
cli
call
scas
cli
sbb
repnz
ret
xchg
dec
push
or
xchg
sbb
loopne
fisttpll
lcall
les
or
test
pop
into
and
push
out
add
cmp
movsb
add
push
pop
nop
add
adc
pop
and
xor
sbbb
loopne
inc
jo
fisubrl
pusha
ljmp
sbb
jae
jg
xor
mov
int3
dec
or
mov
xchg
adc
imull
sahf
or
js
xchg
mov
and
and
sahf
cltd
out
push
mov
dec
insb
adc
in
pop
lods
jo
and
push
lds
fisttps
cmpsl
xlat
inc
lds
ss
dec
js
scas
jo,pt
jle
ljmp
xor
jb
shrb
das
mov
fistps
sbb
sub
mov
adc
nop
xchg
sub
adc
fs
sbb
pusha
mov
es
xchg
cmpsb
push
add
add
xchg
add
jno
imul
inc
movsb
sahf
mov
sub
scas
aad
sub
jnp
push
add
repz
je
push
fldt
or
imull
bound
dec
xchg
jbe,pt
xchg
loope
jmp
and
test
ret
mov
leave
lock
pop
pop
mulb
out
adc
sub
adc
push
sbb
faddl
sbb
mov
scas
sub
sub
sub
pop
pop
dec
ss
pop
and
inc
pop
and
loope
inc
add
jne
mov
mov
outsb
ljmp
fnstsw
rclb
sbb
popa
inc
dec
psubusb
nop
icebp
repz
incl
cmp
aaa
and
insb
aam
test
xchg
scas
stos
and
dec
mov
and
fsubl
dec
shrl
push
inc
stos
jnp,pt
call
cmp
inc
lods
jecxz
push
jecxz
cmp
fdivrl
inc
std
nop
mov
mov
outsl
pop
xor
dec
sbb
outsl
in
cmp
cli
xor
sub
sbb
inc
shll
test
cwtl
pop
mov
scas
test
lods
jbe
push
mov
adc
xchg
or
lods
popf
out
sub
std
mov
jbe
push
imul
and
dec
into
sub
mov
mov
cmp
dec
inc
and
scas
mov
inc
jb
jae
push
cwtl
outsl
mov
cmp
mov
cli
bound
cwtl
dec
xchg
push
mov
inc
mov
pop
lcall
mov
xor
and
mov
in
inc
xchg
dec
das
dec
add
and
dec
xchg
je
inc
mov
jmp
or
mov
or
add
mulb
orl
or
movsl
lods
lcall
pop
xchg
movsl
xchg
sahf
xor
xchg
mov
dec
inc
lods
ret
or
repnz
into
jbe
jl
xor
push
inc
scas
xor
mov
in
mov
sub
sti
pusha
enter
cmp
aad
pop
lds
pop
inc
imull
lret
push
inc
cmp
xlat
movsl
cmp
mov
mov
subb
add
fs
aam
and
cmp
aad
clc
jnp
stos
inc
xchg
add
pop
es
dec
add
dec
loopne
and
out
xor
mov
add
mov
xor
std
adc
popf
pop
add
nop
sbb
sbb
enter
cmp
jp
xor
lods
mov
inc
movsb
jmp
shll
cmpsb
xchg
and
aas
test
insb
scas
mov
xchg
or
shlb
and
test
and
movsl
shl
popf
xchg
pop
movsl
dec
js
jecxz
popf
pop
pop
movsb
push
jmp
or
sub
xor
stos
sbb
setne
adc
lret
sub
mov
jg
add
aas
dec
xlat
dec
sbb
ret
cli
or
into
scas
lods
lret
cmp
mov
pop
inc
adc
jl
adc
xchg
clc
leave
and
arpl
xchg
mov
pushf
dec
cs
pushf
cmc
lods
lcall
dec
xchg
push
pop
dec
push
repnz
movsb
push
jecxz
outsb
mov
loop
cmpl
jne
inc
fisubrl
int
data16
dec
loopne
push
or
push
push
add
adc
rcr
push
inc
mov
lea
int3
xor
std
mov
movsb
jecxz
jno
outsb
mov
sbb
push
icebp
add
or
add
sub
xchg
roll
add
push
dec
rorl
jno
jg
outsb
sbb
inc
lret
or
mov
mov
pop
jbe
in
in
inc
test
and
mov
sub
jp
sahf
cmpsb
into
mov
in
sbb
outsl
loop
xchg
rclb
imull
cmp
mov
or
lock
outsl
insl
rcrb
shlb
mov
andl
ja
js
divb
or
int3
mov
ss
ret
mov
loopne
sbbb
mov
mov
fisttpl
jp
pop
adc
mov
cmpsb
iret
mov
jle
push
fstp
icebp
pop
mov
jmp
mov
push
cmpsb
popf
sub
fcoms
mov
test
or
push
in
sbb
enter
mov
aad
jg
pop
xor
outsb
dec
mov
ret
iret
fsubrs
loope
push
mov
adc
push
dec
popf
cltd
sub
mov
loope
jno
sti
push
in
mov
cmp
test
xor
mov
xor
les
pop
fsubs
xor
int
mov
fmuls
mov
sti
add
mov
jle
jo
mov
mov
fdivr
mov
or
cmp
or
mov
ja
pushf
sub
inc
pop
lret
test
mov
sbb
mov
shll
lods
fwait
xchg
cmp
stos
daa
cmc
daa
pop
cli
movsl
je
mov
adc
aaa
sub
cltd
shll
cwtl
mov
dec
sub
cmpsl
mov
jo
ss
iret
cmp
mov
lods
mov
sub
or
dec
je
pop
lcall
lds
fdivs
jae
dec
lret
fucomp
add
and
test
out
frstor
cmp
xchg
pop
and
jl
xor
mov
jecxz
and
cwtl
iret
push
test
out
push
cmp
icebp
pop
cmc
dec
sbb
jnp
jecxz
or
int3
mov
rclb
pop
jo
test
or
mov
jmp
jg
xor
push
nop
cmpsl
push
push
cmp
adc
testb
inc
in
sub
xchg
pop
push
xor
cld
mov
out
cmpsb
mov
jbe
xor
clc
sbb
arpl
cli
in
inc
inc
sub
ret
cwtl
jp
mov
gs
ret
jge
xor
jle
call
push
xor
sbb
jg
shl
pop
addb
es
pop
or
mov
ret
lahf
jo
jnp
iret
ljmp
or
bound
push
and
push
daa
cwtl
cmpsb
or
dec
jbe
adc
ficompl
sub
cmp
je
adc
xor
ret
pop
pop
push
ret
into
push
or
lcall
xor
nop
xlat
mov
xchg
loope
cmc
fimuls
loopne
sbb
pusha
mov
jae
lahf
cli
jb,pn
je
push
push
leave
adcl
ret
imul
xor
fmull
loopne
mov
sub
jbe
mov
cltd
fisubrl
push
add
cmp
sbb
cmp
fnsave
ljmp
push
mov
repz
and
sbb
pop
jge
pop
out
cltd
or
jle
sbb
adc
pop
andl
test
les
adcb
loope
xchg
popa
push
add
stos
dec
cli
jle
push
pusha
mov
or
repnz
sahf
addr16
arpl
fldl
xchg
cli
and
push
gs
jmp
cmp
add
jne
mov
push
sbb
jo
lret
push
das
shrl
cmp
into
dec
xchg
imull
adc
insl
lret
jp
loope
jl
rcrl
insl
cli
xchg
pop
xlat
mov
push
filds
or
addr16
mov
push
lea
jecxz
pop
sub
imul
jl
mov
enter
out
stos
mov
stos
insl
icebp
mov
mov
dec
sub
pop
popa
out
xor
push
mov
stos
jle
arpl
loop
dec
cmp
xor
lock
aad
in
jle
sub
pop
sub
or
xor
stos
gs
jns
mov
cmpsb
push
std
jne
jp
lds
fildll
cmp
fcoml
jg
fstpt
pop
stos
outsl
lret
dec
iret
arpl
or
ret
xor
repnz
stc
into
push
mov
push
xchg
cmc
xchg
mov
xor
pop
jmp
push
into
lret
lock
xchg
shrl
pushf
cs
lea
jb
mov
fildll
mov
hlt
xor
jb
mov
test
inc
mov
popa
inc
pop
xor
mov
ret
repnz
loope
sarl
push
mov
icebp
push
out
decl
add
xor
push
loop
out
jns
test
mov
jle
mov
cmp
test
dec
mov
mov
mov
jno
sbb
jae
inc
int3
add
arpl
test
fldl
lret
xlat
push
xchg
mov
sbb
ss
and
nop
push
insb
addb
jecxz
inc
orb
out
rcll
push
push
sbb
mov
sbb
jno
imul
outsl
inc
inc
cwtl
and
push
into
xchg
mov
add
and
sbb
xchg
movsb
enter
inc
jns
mov
mov
scas
inc
cmp
dec
xor
aam
dec
or
pop
add
jp
xor
cltd
ret
std
add
ret
call
pop
cmp
xor
mov
ja
hlt
xorb
xchg
fwait
daa
shl
sbb
cltd
and
arpl
dec
or
ffree
sarl
add
movsl
push
push
and
or
or
cld
mov
fsubs
dec
out
out
ljmp
test
push
les
pop
in
or
add
and
sub
jmp
sbb
or
lcall
xlat
adc
mov
nop
jno
ja
adc
xchg
and
and
cs
lods
sbb
pop
jnp
mov
repz
and
xorl
sub
xchg
pop
test
ss
imul
fmull
in
ret
xchg
xor
data16
cmp
adc
aad
push
imul
in
xchg
popl
cmp
push
movsl
lcall
add
add
or
cmpsl
sub
jbe
pop
adc
pop
cmc
mov
insl
test
mov
mov
sbb
push
mov
pop
call
rcll
jne
ret
sbb
repz
jecxz
fdivs
es
xor
jnp
lret
das
lds
mov
aam
popa
dec
shll
stos
dec
adc
stc
stc
sub
in
dec
scas
insb
dec
gs
mov
lcall
sub
lock
dec
xchg
es
mov
cld
add
mov
insb
mov
lods
jno
cmp
je
ret
icebp
lods
aad
iret
cli
dec
lret
mov
mov
test
push
jmp
daa
jae
xor
xlat
es
push
aam
mov
scas
adc
daa
push
mov
test
daa
test
add
or
test
int3
lods
jae
ret
addb
aam
mov
sub
movsl
mov
push
imul
and
icebp
xchg
popa
or
ret
sub
shrl
js
inc
push
ds
mov
aam
aam
and
inc
inc
popa
xlat
jp
jnp
fldl
xchg
mov
in
pop
icebp
and
mov
inc
lahf
and
clc
cmpsl
fidivs
cld
mov
scas
dec
xchg
mov
popf
clc
ljmp
push
rorb
fxtract
or
iret
push
and
sbb
aas
sub
and
popf
adcl
and
mov
mov
jno
adc
movsb
sub
xchg
mov
xor
push
inc
xchg
jl
in
andl
lock
pop
loopne
dec
jb
mov
out
xor
dec
jb
mov
push
jb
mov
movl
enter
xchg
dec
jb
inc
in
repz
dec
out
jae
mov
add
int3
leave
outsl
inc
fs
ja
mov
icebp
mov
add
sarl
ss
xchg
adc
enter
xor
cmp
leave
iret
dec
sub
or
cmc
mov
mov
ds
je
fisttpl
mov
push
in
dec
cltd
clc
lea
pop
xor
inc
out
cmc
push
cmp
test
enter
jmp
mov
int
lock
popa
push
fidivl
lret
adc
dec
pop
or
int
fcmovnu
ljmp
sti
mov
xor
int
pushf
cmp
and
and
and
inc
insl
mov
jl
pop
mov
mov
cli
and
lret
mov
in
nop
test
iret
cmpsb
or
inc
xchg
out
outsb
add
js
cmc
pusha
add
shlb
mov
mov
xor
test
xchg
sub
shrl
sbb
lcall
adc
mov
scas
mov
lods
inc
adc
pop
outsl
xchg
add
in
or
orl
xchg
cmp
das
fidivs
mov
adc
out
pushf
testb
std
pop
es
lea
test
lods
into
jo
cmpsb
mov
jmp
shll
xchg
mov
inc
add
int3
gs
dec
add
xchg
or
fs
inc
adc
push
js
sti
nop
cltd
inc
inc
mov
iret
cmpsb
fistl
sbb
popf
and
mov
aaa
out
aam
add
lret
adc
pop
jp
mov
add
xchg
test
adc
push
adc
mov
rcll
xchg
icebp
or
dec
pop
push
cltd
int
inc
inc
rcll
mov
pop
or
mov
add
scas
lcall
call
testb
int
outsb
xchg
rclb
addl
jge
div
sahf
push
popf
cmc
sub
outsb
sub
xor
xchg
in
jns
lods
inc
lret
in
add
jmp
out
mov
push
xor
mov
loop
xor
add
scas
mov
paddq
xor
sub
mov
loop
mov
lahf
scas
daa
stos
jne
ss
enter
adc
aam
and
or
mov
lock
rcrl
aad
nop
mov
dec
ds
mov
movaps
repz
movsb
sub
cmp
inc
dec
lret
fs
in
pusha
lds
inc
inc
and
loopne
cmp
aas
lods
mov
fsubrp
jne
ds
cli
jnp
das
push
ja
fistpll
sahf
popf
lret
loop
pop
or
scas
mov
jno
sbbb
inc
aam
mov
lret
inc
dec
cmp
jp
cmp
out
test
test
xchg
xchg
sti
and
jbe
or
xor
mov
xor
pop
ss
pop
es
mov
filds
scas
push
mov
cmp
push
sbb
leave
jne
ljmp
pop
sbb
dec
jo
pop
or
jecxz
testb
xchg
sahf
in
lret
dec
pop
stos
inc
ljmp
je
sub
sub
xor
push
outsl
sub
imul
sbb
test
jns
test
push
jle
dec
cmp
add
jb
andb
pop
xor
orb
jo
test
sbbb
xchg
cld
je
into
je
mov
jb
xor
adc
jmp
faddl
data16
lea
mull
sub
ret
int
mov
cmpb
adc
sbb
inc
adc
jmp
lock
mov
aad
push
into
fwait
sub
cmp
pop
daa
int3
es
daa
ljmp
rcrl
pusha
fstps
call
sbbb
test
das
sub
fisttps
cwtl
cmp
aam
or
ljmp
out
mov
pushf
add
cltd
fsubp
mov
shr
and
enter
push
enter
dec
mov
in
xorl
mov
mov
sub
pusha
jl
lea
aaa
xor
imul
sub
sub
dec
adcl
and
fwait
out
mov
fs
sbb
xlat
mov
popf
fmull
mov
cmp
bound
inc
add
push
and
and
mov
sbb
sar
fdivrs
repz
mov
sbbb
mov
sbb
adc
or
stc
stos
push
or
aaa
call
sub
arpl
das
pop
mov
mov
cmp
add
adc
roll
es
adc
sbb
into
incb
stc
jno
xor
les
and
push
mov
cmp
push
lds
lahf
test
int
pusha
dec
in
cwtl
sbb
jge
movsl
jno
stc
insl
ds
movsb
jo
mov
cmc
push
in
ret
repnz
fcmovnb
fisubrl
inc
mov
xor
cld
add
adc
mov
lahf
das
push
popa
les
dec
jb
stos
das
int
push
pop
fisttpl
jno
xor
xrelease
out
sahf
aas
pop
mov
insb
outsb
cmp
outsw
mov
nop
fcompl
mov
ja
sub
push
push
loop
cmpsb
push
leave
mov
push
aas
std
add
mov
aas
xchg
xchg
stc
mov
cmp
pop
lahf
xchg
cmp
imul
fldenv
push
mov
xlat
xchg
cmp
jge
cmp
pop
cmpsl
mov
ror
mov
add
in
pop
inc
mov
hlt
adc
popa
lods
adc
mov
cmpb
fiadds
js
jb
inc
cmpsb
emms
std
inc
lahf
inc
stc
dec
aaa
cwtl
or
xchg
and
in
daa
mov
mov
jge
clc
js
cmpsl
mov
iret
loopne
mov
mov
jae
inc
outsb
out
nop
subb
pop
mov
sbb
inc
testl
sub
fwait
pop
testl
cmp
fnstsw
test
loop
mov
dec
xorb
lahf
push
cmpsb
mov
sub
enter
mov
mov
add
dec
add
daa
mov
cmp
fs
mulb
xor
xor
imul
jle
pop
cmpsb
call
and
jp
jl
mov
inc
outsl
fwait
cmpsb
daa
fildll
add
xlat
mov
or
xor
add
xor
or
sub
mov
mul
lcall
repz
pop
fisttpll
nop
arpl
mov
mov
aaa
insl
xor
je
outsb
cmp
inc
dec
ret
iret
sbb
add
dec
inc
sbb
lock
call
push
dec
jl
xchg
ret
imul
and
pushl
gs
je
pop
es
and
add
mov
stos
sbb
mov
add
sub
test
hlt
or
js
fdivr
bound
mov
xchg
mov
ss
xchg
mov
cwtl
fmull
nop
pop
movb
mov
sbb
mov
popa
jle
jle
test
shrb
mov
daa
xchg
jle
cmpsl
ss
mov
xchg
or
mov
add
lea
mov
sub
jp
fcmovne
subl
cmp
sbb
jg
cmp
enter
mov
repnz
jmp
pop
and
sahf
inc
add
ret
lret
jbe
bnd
push
lods
mov
lcall
hlt
add
stos
sbbb
push
mov
xor
scas
test
xor
push
or
movb
inc
pop
enter
enter
sbb
test
xor
call
enter
mov
negb
xchg
mov
stos
mov
push
sub
add
mov
lea
daa
mov
lods
iret
pop
sub
cmp
test
pop
pushf
mov
std
add
out
mov
or
pop
out
xchg
mov
and
push
adc
dec
pop
jge
adc
lret
adc
ds
stos
push
imul
in
mov
shlb
std
xchg
loopne
icebp
sbb
repz
loopne
mov
pop
xchg
loopne
xchg
dec
jmp
cwtl
dec
aad
or
mov
jb
pop
push
dec
repz
in
insb
sbb
mov
sbb
adc
lds
repnz
mov
das
mov
rclb
lcall
cwtl
xchg
fistpll
add
inc
dec
xchg
ret
cli
jmp
hlt
xor
pop
sbb
loopne
xlat
test
rcrl
adc
xchg
ret
jl
aad
pusha
in
or
outsb
xchg
jmp
pop
nop
stc
shrb
sub
jmp
in
in
push
and
sub
mov
rorl
sbb
out
scas
mov
push
fsubl
fistl
jmp
or
movsb
test
adc
movl
mov
cmp
in
loopne
push
stc
in
or
xchg
lds
in
jp
loope
jp
sub
xchg
les
insl
lock
dec
ja
sbb
push
mov
out
dec
lea
jge
mov
imul
arpl
nop
outsb
int
test
inc
in
scas
mov
sbbb
leave
mov
fldenv
sti
xor
aam
shll
mov
or
cwtl
nop
pop
dec
out
jle
jnp
pop
add
test
xchg
in
add
test
pop
fsubs
lods
sbb
test
sbb
mov
ret
scas
mov
and
xchg
jo
fsubr
out
insb
lock
xor
mov
push
shl
imul
sahf
mov
jne
clc
nop
ljmp
stos
mov
sub
cmp
out
or
scas
add
loop
movsl
stos
jmp
bound
inc
divb
mov
dec
xchg
push
push
adc
sbbl
dec
mov
imul
stc
mov
xor
sar
test
push
push
push
out
fcoml
jp
sub
sbb
movb
in
sarb
cmp
mov
add
outsl
mov
dec
popf
mov
addr16
leave
pop
stos
sbb
xchg
test
lret
repz
lahf
inc
es
mov
sti
fs
adc
jae
and
sub
pop
sub
or
lcall
ja
jle
adcb
pushf
lea
jne
fcompl
lret
push
pop
int3
jge
and
xlat
and
rolb
les
cwtl
repz
jge
fs
jmp
idivb
mov
or
xchg
movsb
sbb
pop
xchg
lret
sub
ret
mov
push
add
pop
sbb
mov
je
shrl
cmp
pop
stos
add
test
aad
insl
or
push
aas
and
inc
push
cmp
jns
jno
je
outsl
lods
cmpsb
call
pop
shlb
dec
push
dec
xchg
lahf
jl
pop
test
pop
xor
xor
xor
rolb
sbb
and
test
sbb
hlt
imul
rolb
pop
iret
mov
and
inc
xchg
sbb
add
hlt
add
lods
adc
cmp
out
pop
ds
out
movb
daa
aas
and
insl
or
sbb
adc
das
xor
add
mov
xor
test
sbb
inc
xor
xchg
adc
out
in
dec
daa
or
sti
jo
or
shrl
mov
mov
push
in
popa
fisttpll
jnp
jne
or
sub
pushf
add
pop
pop
mov
xchg
pop
movsl
dec
inc
movsb
pop
lods
in
xchg
shrl
pushf
test
lea
jo
int3
loop
xor
adc
adc
aas
fbld
shufps
aaa
pop
mov
outsb
push
xchg
mov
mov
out
mov
push
jmp
aaa
hlt
test
sbb
push
cmpsb
cmpsb
inc
stos
daa
jg
xor
jo
cmpsb
pop
mov
sub
xlat
xchg
or
push
pop
mov
adcb
test
and
mov
mov
imul
dec
mov
lods
jns
jno
nop
sbb
push
add
in
cmpsl
push
ds
mov
jno
stos
mov
xor
push
aaa
cmp
jo
cs
and
lret
shlb
loopne
jno
movsb
mov
aad
add
punpcklbw
push
pop
out
das
adc
lock
mov
push
xchg
cmp
in
pop
in
sbb
jg
lea
or
aaa
dec
ror
dec
ja
mov
out
xor
mov
jbe
or
test
inc
rorl
push
push
push
jnp
mov
lahf
xchg
mov
js
fmull
cli
les
and
adcb
mov
ja
arpl
push
fstl
push
dec
scas
js
and
cmpsb
imul
je
inc
sbb
shll
xchg
inc
js
or
adc
enter
fs
pop
stos
movsl
add
mov
mov
cwtl
dec
push
cmp
xchg
xor
pop
mov
dec
cmc
fsubrl
xchg
mov
jmp
mov
or
int3
mov
push
sbb
mov
push
mov
arpl
ss
xlat
jbe
cmp
lahf
push
sub
mov
lahf
mov
addr16
or
xor
sbb
inc
push
popa
mov
mov
nop
iret
insb
or
mov
es
pop
sub
add
lods
sub
sub
add
out
jo
jne
sub
push
and
stos
sbbb
nop
insb
in
aaa
xlat
push
repz
cmp
fists
and
and
or
out
sti
add
and
subb
xchg
add
je
shll
cld
ss
cmp
pushl
or
dec
pop
inc
xchg
mov
dec
lods
mov
or
push
inc
pop
out
jle
sahf
jno
jp
pop
or
loop
clc
aaa
cmp
sahf
movsb
sti
mov
dec
jmp
nop
ret
adc
stos
fnstsw
outsb
fbld
push
mov
and
pop
mov
mov
push
inc
or
out
cmc
push
inc
pushf
out
push
mov
in
add
jle
push
scas
and
sub
imul
pop
xchg
fists
jmp
sbb
loope
mov
xchg
fldenv
into
pop
roll
cmp
sub
add
xor
cmp
cs
adcl
sbb
test
jmp
das
push
push
iret
xor
and
mov
or
pushf
lds
add
adc
jae
push
push
fnstsw
test
and
jl
mov
test
movsb
inc
fs
dec
push
int3
rcl
fcoml
mov
ss
es
test
mov
jge
inc
adc
out
dec
outsl
xchg
rdtsc
out
mov
jae
cmc
mov
movsl
or
sbb
imul
fnstsw
add
adc
dec
les
jnp
sbb
icebp
mov
pusha
adc
aam
sbb
cli
leave
cmp
jl
cmp
mov
jle
outsb
and
out
cli
mov
sbb
sub
aam
and
xor
notb
not
mov
js
pop
push
fcomps
jmp
cmpsl
cltd
fildll
cwtl
xchg
jne
jle
push
clc
mov
fwait
push
sbb
xchg
pop
dec
mov
repnz
xchg
cli
out
int3
cmp
rol
sub
mov
mov
mov
inc
ljmp
in
js
adc
fldenv
fcmovnu
stos
scas
lret
mov
jmp
mov
insl
mov
xchg
in
inc
cmp
xor
jecxz
xor
mov
subb
xchg
or
jno
movsl
js
cwtl
cmp
sarl
or
into
nop
push
jnp
scas
xchg
inc
shll
fidivs
and
mov
mov
in
jmp
loop
jg
scas
ljmp
push
jl
xlat
cmp
aam
jecxz
ficoml
pop
or
subl
pop
ds
lods
cmpsb
sub
jns
jbe
mov
es
fistpl
sbb
dec
jecxz
loopne
frstor
sub
sbb
push
shrl
test
mov
xor
cmp
outsl
xchg
sbb
xchg
cli
outsb
ds
movsl
in
push
cmp
or
jecxz
addr16
dec
inc
imul
clts
sbb
and
cwtl
inc
fwait
add
rorb
jg
dec
jno
pop
hlt
cmc
inc
pop
or
enter
pop
into
xchg
adc
in
pop
test
mov
push
or
jae
lret
insb
and
xchg
xchg
mov
xchg
sub
mov
fdivr
push
add
gs
or
and
out
dec
pop
clc
lock
and
and
sub
add
mov
gs
out
shl
dec
cmp
stc
adc
mov
int3
mov
add
pop
out
outsb
repz
xor
pop
fistpll
jno
in
ud0
in
push
xor
push
cmp
fstl
jae
movl
nop
sahf
cmp
or
movsl
pop
lods
lods
lods
pop
flds
std
lods
dec
popa
iret
pop
push
xor
adcb
mov
ret
stos
aam
cmp
cmp
xor
xchg
out
cmp
addr16
fistl
ret
cltd
inc
xchg
mov
push
adc
cli
gs
mov
bound
je
sti
push
insl
repnz
add
cmpsl
loope
fisttpll
inc
and
adc
out
aam
push
in
dec
sbb
push
pop
push
insl
in
pop
pop
aad
jge
mov
push
addr16
and
xor
pop
pop
nop
repz
inc
movl
enter
xor
mov
lahf
xchg
add
leave
movsb
push
mov
and
add
add
xor
addr16
js
adc
popf
bound
push
mov
jb
jo
je
mov
js
push
fadds
mov
add
add
popf
xchg
sarl
fsubrl
sub
push
xchg
cli
mov
setne
push
adc
lahf
ljmp
icebp
inc
les
cmc
inc
mov
adcb
cmp
pop
xor
and
mov
pop
popf
sbb
stos
and
mov
movsl
fsubr
inc
jmp
dec
sbb
cltd
or
je
sub
push
jbe
nop
enter
pop
sub
adc
jnp
pop
push
mov
repz
cld
jne
in
aad
mov
shll
jge
dec
dec
repz
sub
fwait
xchg
mov
jle
mov
or
in
fnstsw
mov
xchg
dec
sbbb
test
inc
xor
mov
push
push
pop
dec
arpl
add
or
xchg
std
mov
sbb
stos
sub
jp
outsl
int
push
std
sub
stc
lcall
jg
mov
aaa
int
js
lret
notl
je
add
and
push
dec
dec
mov
repz
les
rcl
and
into
aas
mov
inc
cmp
xchg
push
add
mov
call
mov
sub
push
cmp
lods
cmp
cmp
adc
push
adc
in
insb
jne
push
or
or
lock
sub
ds
jmp
mov
pop
pop
cld
xchg
out
sbb
lea
sahf
dec
rolb
stos
xor
and
fwait
imul
mov
sahf
ja
in
fs
shrb
pop
xor
mov
vpmulhw
pop
pop
les
xor
out
cld
or
imul
cmp
icebp
inc
or
bound
mov
lods
xchg
jb
push
pop
xor
sbb
les
cmp
jp
sbb
pushf
das
or
sahf
mov
sahf
sbb
sbb
and
push
sahf
fdivr
stos
popf
pop
adc
dec
ljmp
mov
push
dec
dec
lock
pop
fsubrl
adc
dec
mov
or
and
push
test
fdivl
mov
push
xchg
out
sbb
xchg
cld
rcrl
cmpb
push
lea
insb
fucomi
jp
inc
shrl
je
lahf
or
pushw
and
inc
jg
mov
cs
push
pop
cli
add
lods
xchg
mov
and
sbb
xorb
outsl
pop
sub
fildl
or
jecxz
insl
adc
fsubrs
push
xor
mov
leave
sbbb
adcl
sub
inc
sub
mov
out
adc
jle
repnz
gs
xor
out
mov
xchg
fistps
ja
mov
cmpsl
jg
mov
xor
sbb
xchg
leave
fists
repnz
or
test
pop
jne
rcrl
push
lock
fsqrt
fwait
lock
or
inc
xor
adc
cmp
ljmp
sbb
inc
loope
idiv
jecxz
pushf
out
sbb
test
xchg
sbb
idivl
addb
ret
add
push
xor
adc
sub
push
je
pop
and
icebp
mov
add
shl
add
pop
arpl
mov
pop
je
sahf
rorl
add
inc
loopne
xor
ja
pop
fsts
mov
inc
jbe
das
test
push
int3
jb
pop
jp
mov
adc
call
or
push
mov
sub
pop
jnp
mov
pop
xchg
out
stos
cmp
xor
and
and
mov
add
sarl
push
imul
imul
jle
out
dec
in
push
mov
mov
cwtl
mov
xor
sub
stos
fs
jae
adc
sahf
adc
push
aas
lods
in
sbb
cmp
in
lock
sbb
mov
pop
out
mov
dec
cmc
add
pushf
mov
adc
cmp
and
adc
fisttps
icebp
cmc
xor
xor
jmp
fadds
lock
sub
xor
fcomps
xor
push
dec
pop
adc
dec
mov
jecxz
mov
leave
lods
xchg
mov
ds
pop
lods
and
iret
repz
out
in
push
orl
mov
push
loope
mov
sarb
pop
push
cmp
lret
push
add
mov
dec
mov
in
cs
scas
mov
jne
adc
mov
push
mov
sub
mov
mov
mov
mov
cmp
inc
orb
repnz
popa
sti
inc
dec
lret
inc
movsl
jns
mov
fldt
out
pop
in
call
aas
xlat
pop
sbbl
pop
sbb
hlt
cmpsl
sbb
dec
pop
scas
push
cmpsb
lea
jp
popf
mov
rcl
xchg
jo
jg
jno
inc
push
insl
mov
sti
jnp
dec
sbb
mov
aam
xchg
icebp
pmaddwd
inc
push
cwtl
pop
inc
repz
rolb
cmp
jmp
cmp
dec
mov
jno
dec
call
ja
pop
jb
mov
loop
and
ds
push
xchg
lcall
mov
pop
pop
shl
cmp
sub
dec
out
das
loop
clc
fbld
mov
sub
or
ljmp
and
pop
stos
ja
lods
sub
pop
lock
mov
or
xor
push
insl
add
rcl
mov
mov
repz
and
push
cmc
mov
sbb
ljmp
mov
adc
das
push
dec
icebp
add
sbb
xor
xor
incb
jno
cs
add
xor
pop
jnp
pop
lds
mov
xabort
movsl
jae
inc
and
es
mov
lds
adc
rcr
add
movsb
cmp
loope
pop
pop
and
push
mov
jbe
xor
adc
lahf
or
adc
jmp
add
bound
outsl
mov
cld
dec
call
sub
fcoms
adc
xor
das
cmpb
int
sbb
popa
cmp
add
sub
dec
les
cmc
stos
shr
lock
dec
dec
imull
cltd
dec
or
inc
cmc
dec
pop
mov
fs
xchg
xor
ja
and
mov
add
push
add
or
insl
sbb
jge
hlt
sub
leave
insb
out
sarl
jnp
and
mov
xor
xor
push
sti
xor
iret
mov
call
push
sbb
mov
adc
loop
pop
nop
aaa
jb
jnp
es
icebp
out
jge
push
dec
je
std
xchg
lcall
bound
mov
filds
cli
in
inc
pop
pop
pop
dec
adc
test
sbb
mov
std
cmpb
outsl
fcomp
test
xchg
jb
pusha
xchg
xlat
addr16
aam
scas
cli
mov
ror
xchg
or
xchg
jae
mov
incb
push
or
rclb
aaa
rcll
insl
daa
outsb
push
or
cmp
sti
shrl
out
pop
js
inc
addl
daa
adc
cmc
shrb
xor
les
and
jns
fldcw
fsubrl
jmp
push
push
dec
fwait
add
std
add
push
insb
pop
push
or
ret
xchg
xchg
or
inc
push
cmp
jo
sbbl
jge
imul
mov
mov
scas
xchg
jno
mov
push
xor
popf
das
xchg
fcom
sbb
pop
leave
jl
lods
xchg
testl
push
pop
js
icebp
lcall
insb
push
test
sti
and
popa
push
outsl
adcb
je
inc
pop
in
mov
sbb
cmp
push
aaa
shrb
and
xchg
xchg
adc
and
mov
inc
add
je
es
stos
mov
inc
jecxz
xor
movsb
mov
pusha
mov
dec
cmp
jb
xor
fmuls
push
or
fs
stc
jl
rol
lea
pop
ss
jbe
dec
arpl
cmp
dec
in
inc
pop
imul
punpckhbw
dec
mov
rclb
outsl
mov
mov
mov
movsb
in
sbb
add
mov
cmc
pop
aam
cmp
adc
jne
dec
arpl
and
sbb
popa
dec
ss
push
test
out
nop
aaa
mov
or
xchg
imul
pop
dec
negl
ss
int3
push
fcmovnb
push
jg
mov
dec
negl
dec
add
pop
or
cs
lret
fimull
xchg
xor
ret
xor
lret
inc
ss
or
pop
jl
rcr
mov
xchg
xchg
sub
mov
mov
jo
adc
push
pusha
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
in
lods
out
pusha
aas
aam
stos
push
cmp
xor
lods
pop
lahf
mov
adc
fstps
je
mov
lcall
cmovle
jmp
mov
xchg
test
dec
sbb
mov
sub
rcr
mov
imul
fiadds
ljmp
je
mov
and
repnz
dec
cmpsl
into
inc
mov
pop
dec
sarl
cmpsl
dec
jno
or
inc
in
dec
incb
lret
mov
jae
in
or
push
xor
and
pop
add
push
push
cltd
pop
cmp
in
mov
and
inc
in
adc
jbe
sub
add
pusha
xlat
mov
cmc
lret
pop
dec
xchg
xor
std
mov
sbb
notb
jmp
and
out
pushf
add
popa
mov
repz
pop
adc
arpl
clc
and
xchg
insl
inc
lock
push
mov
adc
outsb
mov
dec
cwtl
or
push
pop
fldenv
shr
loop
sbb
dec
and
lea
stos
out
mov
out
cli
xor
mov
xor
daa
cmp
ss
dec
lea
movsb
imul
sub
repz
stos
fistpll
fs
mov
int3
loop
rclb
mov
inc
xchg
sti
mov
cs
in
sub
or
jecxz
shlb
cwtl
pop
lds
mov
sbb
hlt
mov
sbb
imul
jnp
loop
popl
rolb
mov
jnp
pop
pop
pop
ljmp
fcompl
rcr
jns
add
jp
ret
pop
xchg
inc
inc
mov
into
xchg
xor
or
mov
sbb
xchg
cli
mov
xchg
cs
sub
scas
loop
rcr
insb
sbb
jmp
xchg
out
inc
ljmp
rcll
cmp
jg
lret
jo
adc
inc
mov
sub
mov
leave
lods
and
pop
imul
push
lcall
cmp
lea
xchg
xchg
cmp
pop
cmp
imul
inc
xor
fcmovnbe
dec
mov
shll
pop
mov
aas
mov
add
xchg
mov
mov
mov
jg
inc
jnp
mov
inc
out
leave
dec
loop
and
insb
and
push
sub
aad
ret
lea
xor
push
lahf
lock
dec
scas
fmuls
icebp
or
push
test
in
das
repz
ja
cli
dec
xchg
xchg
or
int3
mov
nop
inc
hlt
fisubl
sub
add
stos
pop
leave
je
in
call
loop
mov
xchg
pop
mov
jo
dec
jmp
mov
push
andb
jl
inc
shlb
push
lods
andl
outsl
push
cmpsb
xor
jmp
sbb
jne
xchg
pop
cmpsb
push
rol
inc
xchg
mov
popl
push
je
push
fildl
lods
mov
sbb
pop
and
insb
cmp
fsubr
aaa
fdivs
mov
in
add
push
repnz
push
sub
jl
pusha
cld
add
loop
in
sti
dec
push
iret
mov
stos
cmpsb
sub
mov
cld
lret
sbb
jae
insl
cs
adc
cmp
imul
dec
fwait
pop
mov
push
xchg
cwtl
aaa
popa
lds
adc
mov
cs
push
mov
dec
scas
sbb
dec
loopne
or
rcrl
inc
popf
xchg
xchg
pushf
icebp
jge
and
lret
lcall
pop
sub
inc
sub
cmp
jecxz
stos
imul
andb
or
aad
in
add
orl
clc
jg
push
addr16
out
ja
mov
scas
ret
or
loope
lcall
cmpl
sub
sarl
gs
in
fwait
sahf
pop
pop
repnz
sbb
test
verr
mov
pop
sahf
dec
or
test
cmp
sti
add
aaa
or
jecxz
jbe
in
and
and
cmc
xor
fldenv
inc
cmp
sarl
pop
xor
xor
mov
fmuls
lds
pop
pop
xchg
stos
push
mov
into
jns
inc
mov
xor
loop
scas
jge
hlt
adc
aad
and
insb
ljmp
and
cmp
push
and
push
mov
fwait
adc
inc
mov
out
ret
pop
sub
popf
out
das
mov
das
xchg
inc
push
jo
xor
xchg
mov
adc
mov
inc
ss
fnstsw
aas
sbb
jbe
mov
in
pop
mov
or
movsl
ljmp
in
movsb
scas
jge
or
inc
sub
lcall
sub
mov
mov
js
push
lods
leave
test
stos
out
push
aas
dec
sbb
shll
xor
and
push
loopne
fstpl
adc
sub
popf
mov
or
jge
movsl
fnstsw
push
rep
std
in
jne
in
test
dec
jo
add
aam
imull
sub
jecxz
fildll
bound
test
stos
inc
lahf
pop
pop
lret
out
aaa
dec
sahf
orl
lahf
into
or
xchg
and
cmpb
icebp
fnstcw
jecxz,pt
push
or
loopne
xchg
push
nop
aas
rcll
sub
aas
jnp
push
ja
lahf
aad
cmp
mov
and
or
call
cmpsl
jmp
mov
daa
shr
xor
test
test
push
mov
mov
test
jp
inc
cwtl
fsubl
roll
into
adc
ljmp
loop
clc
adc
in
xchg
inc
mov
sbb
cmp
sbb
aad
cmp
clc
mov
cmpsl
lods
dec
out
xchg
stc
daa
cmp
popf
fwait
jl
cli
dec
xlat
xor
test
cmpsb
sub
mov
mov
and
cwtl
mov
push
mov
and
mov
repz
mov
pop
mov
pop
std
jmp
pusha
roll
call
dec
add
mov
aam
xchg
daa
jl
jl
mov
scas
cs
pop
xchg
ljmp
pop
int3
mov
or
ret
mov
leave
push
and
orb
fistpl
jae
and
adc
or
std
jbe
test
ja
scas
mov
adc
cli
cmp
lods
push
sub
shlb
and
dec
xor
rcrl
ja
scas
mov
mov
lods
sub
cmp
daa
and
cmpb
nop
ret
inc
jmp
push
push
popf
mov
push
cld
popf
xor
mov
fcomp
cmpsl
push
xchg
jne
mov
dec
popa
sahf
cmp
sub
sar
leave
mov
test
loope
dec
jb
or
mov
movsb
fimuls
fbld
jg
mov
cltd
mov
adc
jae
cmc
dec
xchg
fsts
push
xor
sub
sub
xchg
sti
fs
sarl
xchg
test
sub
addr16
cmp
int3
js
lahf
jb
je
and
rcrl
addr16
mov
inc
xor
cmp
xchg
hlt
sbbl
sbb
and
loope
sarb
push
inc
popa
or
outsl
ds
and
stos
insl
call
mov
icebp
push
out
add
mov
je
xor
into
push
cli
es
aaa
out
mov
pop
mov
inc
rolb
das
arpl
pop
jl
iret
or
out
add
push
push
jno
shrl
or
cmovge
dec
dec
mov
fnsave
xor
es
icebp
push
jb
test
sbb
jno
mov
cmc
testl
les
push
shrl
sar
lcall
cs
fsubr
loop
lds
sbb
push
rclb
and
in
jne
mov
cltd
add
arpl
aam
cmp
fldt
jno
sar
lods
lret
xor
or
cmp
cld
lods
addr16
jmp
bound
gs
jno
outsb
push
imul
jno
lds
cmp
and
push
and
push
inc
mov
jae
ficoml
ficoms
adc
pop
cmp
mov
adc
movb
mulb
dec
jo
mov
xchg
xchg
add
inc
sti
movsb
jle
mov
jmp
jae
add
subps
in
xchg
pop
sbb
ds
push
inc
sahf
popa
movl
mov
push
jnp
xor
push
push
dec
out
int
push
adc
cmc
ds
or
pop
jmp
inc
into
or
pop
xor
mov
dec
cmpl
movsl
outsl
mov
xor
mov
dec
pop
cli
dec
pop
dec
in
and
and
dec
pop
insl
ss
inc
fnstcw
int
add
stos
add
nop
in
pop
mov
dec
pop
daa
sbb
inc
cmp
mov
addr16
in
outsb
in
cmp
insl
mov
or
xchg
and
cli
cmpsl
dec
cld
jnp
sbb
pop
xchg
cltd
aaa
adc
ljmp
inc
jmp
and
in
mov
imul
ret
lret
mov
enter
jg
rcr
adc
sub
cmp
sub
call
mov
cmp
mov
xchg
je
dec
adc
cli
dec
aas
and
or
pushf
xchg
sub
push
push
or
jbe
and
mov
lea
sbb
xchg
sbb
loop
lcall
repz
insb
leave
clc
insb
outsb
sbb
scas
clc
mov
out
jmp
xchg
inc
aam
sub
mov
adc
push
jne
mov
xor
ja
cmpsl
jae
outsb
mov
sub
int
xchg
mov
xlat
fnstenv
imul
fldcw
jg
sub
mov
push
scas
out
xlat
mov
into
xchg
inc
mov
addr16
cmpsl
fs
int
hlt
push
idivl
andb
push
xchg
popf
out
lock
repnz
xchg
add
out
cmc
lods
clc
test
cmp
xor
sahf
xor
sbb
fnsave
sub
fdivrl
enter
lahf
jecxz
sbb
pop
aam
mov
jo
sub
out
lcall
or
dec
shlb
popl
dec
pop
xchg
xchg
mov
xor
add
nop
in
lock
xchg
push
push
jg
adc
neg
cmc
jnp
fstl
sbb
sub
and
pop
aad
sub
out
jmp
pop
mov
arpl
pop
xchg
inc
xor
fiadds
add
jne,pn
pop
jmp
jnp
ljmp
adc
out
mov
lds
pop
fwait
push
jbe
in
pop
mov
mov
jae
push
lret
cwtl
bound
faddl
add
jne
roll
movsl
pop
fnstsw
adc
jae
test
shlb
xchg
cmc
jne
mov
push
lods
xchg
push
ret
xor
sub
lds
cmpsl
test
sbb
mov
jne
cmp
leave
out
push
push
sbb
and
mov
jb
inc
insb
repnz
push
gs
dec
fidivl
out
hlt
data16
and
jnp
ret
sbb
mov
jg
lret
fcmovnb
lods
lret
into
ljmp
jl
mov
fs
insl
jecxz
lds
imul
dec
in
add
dec
inc
inc
lds
pop
sbb
xor
roll
push
sub
test
mov
push
push
cmpsb
dec
mov
es
dec
loope
xor
icebp
cli
hlt
cmp
pop
or
in
pop
movsb
stos
mov
xchg
dec
mov
out
icebp
cmp
aas
cmp
push
ss
add
jecxz
xor
loopne
cs
cmp
pop
mov
in
je
jbe
decb
int3
sbb
sbb
push
inc
div
icebp
es
loopne
clc
lods
shrb
inc
xor
je
out
dec
dec
or
sbb
lds
or
sub
jle
xor
test
out
cltd
push
or
js
orl
push
decb
mov
stc
pop
arpl
test
inc
int3
sbb
mov
sub
sub
sti
outsl
int
scas
inc
scas
into
ljmp
xor
mov
inc
call
arpl
jl
dec
sarb
jno
fcoml
lahf
test
sahf
mov
mov
xor
mov
hlt
rorl
pop
mov
jb
out
popf
xor
pop
lret
mov
xchg
movsb
rol
inc
jp
lds
rcrb
sbb
push
ds
repz
fucomip
jno
mov
inc
mov
pushf
mov
jmp
neg
fcomi
xchg
mov
mov
mov
mov
roll
test
pop
mov
popa
inc
adc
push
and
cwtl
sbb
nopl
push
bound
mov
xchg
cwtl
add
sub
and
push
ds
out
testb
pop
aad
out
dec
jb
out
in
fcoms
loopne,pn
cmpsl
jg
xor
lcall
out
pop
adc
dec
jbe
das
nop
stc
adc
xchg
test
mov
rclb
xor
cmpsl
push
pop
lods
xchg
fwait
push
xor
mov
call
and
iret
mov
fiaddl
add
movsl
push
mov
push
or
das
and
rolb
add
int3
repz
lds
lds
add
jns
or
fs
pushf
jecxz
lcall
in
repz
or
sbb
js
test
mov
sub
fnstcw
fmuls
cmp
sub
adc
pop
mov
and
inc
adc
or
jl
xor
push
add
pop
mov
out
mov
ljmp
rorl
lds
fwait
mov
arpl
cmp
fistl
jge
imul
test
into
mov
lods
xchg
xor
jnp
rorl
dec
js
pop
std
test
movsb
or
bound
inc
lods
cmp
push
mov
dec
lret
and
mov
add
loop
mov
push
sbb
leave
imul
adc
xchg
ja
mov
out
call
adc
sbb
in
lcall
add
dec
je
rorl
ljmp
sbb
int3
mov
jl
or
fwait
jnp
jns
push
rol
das
add
mov
mov
or
mov
xor
lods
push
stos
imul
test
loopne
sbb
in
insl
and
push
das
sub
adc
and
pop
std
int
out
pop
and
jge
mov
push
sti
fwait
data16
sub
loope
xor
cs
iret
gs
rcr
subb
outsl
mov
daa
in
pop
inc
pop
inc
in
xchg
mov
repnz
mov
shl
shrl
xor
mov
addr16
mov
inc
aas
movsb
ret
push
sbb
rsqrtps
add
les
sbb
rolb
mov
cli
xorb
lret
lods
dec
inc
and
rcrl
lock
gs
or
mov
sahf
loopne
repnz
js
push
out
mov
inc
jmp
sahf
sub
fmull
push
cmp
fdivrl
fbstp
in
xchg
jno
mov
loope
cmp
sub
ret
jb
jmp
in
adc
pusha
inc
jb
call
hlt
clc
loopne
es
pop
xor
lret
jb
cmpsb
or
cwtl
sub
add
test
pop
fisubs
jg
cmp
mov
cmpsl
mov
pop
ljmp
mov
mov
in
push
jge
cwtl
dec
insb
sbb
sbbl
xor
dec
out
sbb
int3
pop
push
pushf
std
push
test
icebp
pop
inc
int
insl
sbb
inc
sbb
mov
lret
mov
or
mov
cmp
or
dec
cmp
jae
and
and
push
mov
mov
lcall
and
xor
mov
jnp
adc
or
xor
xchg
sub
sbb
mov
ljmp
push
inc
jbe
test
add
jns
stc
repz
sub
out
repz
sub
push
mov
jge
insb
aas
mov
pop
lods
imull
jno
sub
jmp
or
mov
dec
scas
push
pop
arpl
pop
cmpl
mov
xchg
stos
gs
cmp
xchg
pop
dec
fldl
adc
leave
sub
mov
je
push
jno
in
dec
xchg
jo
fisttpll
xor
adc
movsl
jge
imul
mov
lods
sbb
sub
push
mov
xchg
pop
cmpsb
test
adc
mov
xchg
cmpb
fs
xchg
int
int
push
sbb
xchg
and
dec
repz
dec
mov
dec
int3
cmpsb
pusha
mov
sbb
xor
scas
cli
repz
jbe
sub
repz
mov
mov
aam
mov
fwait
lods
jbe
icebp
arpl
mov
orb
pop
fisttps
add
in
mov
pop
adc
int
jno
loop
movsb
and
xor
xor
out
test
push
inc
push
and
inc
add
jns
hlt
pop
sti
add
or
inc
scas
adc
xchg
fsubl
push
stos
dec
hlt
je
mov
sbb
xchg
sbb
nop
mov
cld
cld
loopne
push
add
mov
cmp
inc
lret
sbb
jecxz
jns
fwait
rclb
mov
cld
or
and
and
jb
adc
clc
cmp
out
or
inc
int
adc
call
or
dec
out
push
adc
pushf
xchg
lcall
push
adc
lret
repnz
sub
stc
test
leave
imul
jmp
jnp
cwtl
mov
jb
ljmp
hlt
jmp
ss
and
xor
lock
or
xor
ret
xchg
or
cmc
mov
lds
into
mov
les
scas
push
jae
and
add
fwait
popa
mov
xorb
call
sub
jp,pn
xor
test
mov
push
pusha
sub
or
push
sahf
int3
hlt
shlb
mov
push
lods
cmp
jmp
je
dec
addr16
mov
pop
shlb
push
mov
dec
push
imul
xchg
sbb
ja
inc
movsl
test
jne
or
es
call
adcl
ss
sbbb
add
dec
in
test
dec
inc
sbb
push
dec
inc
mov
or
ss
xchg
cmp
mov
xchg
gs
mov
jp
and
mov
adc
aas
push
push
mov
xchg
sbb
mov
jne
jl
jne
out
inc
rclb
inc
mov
sub
fisubs
ret
jge
bound
push
xor
xor
and
xchg
rcl
lret
cmp
lea
movsl
fidivs
sti
or
mov
xchg
nop
outsb
test
push
push
scas
jnp
sbb
xchg
inc
sbb
mov
lea
fcoml
xor
and
push
out
dec
pop
adc
push
mov
sub
jmp
sub
mov
addr16
pop
out
fidivl
jmp
add
jns
sbb
jne
cs
pop
adc
das
inc
cmc
mov
hlt
xor
pop
das
popf
fcmovne
dec
nop
inc
pop
jmp
mov
cwtl
loope
sub
mov
sub
stos
xchg
sub
mov
mov
sub
jge
insb
psubb
and
mov
iret
fisubs
jg
pop
sahf
shlb
aad
inc
scas
aas
fnstenv
sub
mov
xchg
jno
pop
test
dec
inc
movsl
enter
lods
cmp
xor
xchg
push
add
xchg
xor
lahf
add
ljmp
xor
outsl
or
dec
ss
cld
aas
or
mov
es
pusha
and
out
mov
lds
jp
les
test
repz
jns
dec
iret
ljmp
cmpsl
push
les
xchg
mov
enter
cld
push
mov
add
jp
inc
mov
addr16
aas
mov
scas
jne
ret
hlt
outsb
hlt
test
fldt
jbe
pop
or
sbb
pop
test
jg
insb
cmpsb
sub
pop
sbb
push
lods
mov
pop
and
bound
insl
mov
mov
cs
cld
jle
mov
xchg
subb
push
lret
loopne
test
mov
push
and
into
cli
add
jns
sbb
repnz
inc
or
std
xor
add
scas
icebp
aaa
cld
mov
push
shrb
sti
xor
push
dec
std
push
xchg
mov
mov
jbe
adc
or
cmova
ja
mov
call
or
push
mov
xor
stos
and
int3
sbb
stc
gs
ja
repz
sbb
push
mov
jge
das
and
jp
fmull
jmp
sub
sub
cli
jmp
add
jmp
or
lods
movsb
mov
sub
call
loope
in
inc
lret
out
shl
xchg
xchg
cmp
ja
mov
stos
xor
push
cmp
mov
das
dec
cmpsb
mov
xchg
enter
xchg
xlat
jo
cwtl
jo
cmpsb
add
lret
add
and
cmp
sbb
je
movsb
jle
ffreep
jo
subb
pop
xchg
push
inc
lcall
pusha
xlat
push
jle
mov
cmp
sti
push
mov
cmp
outsb
mov
dec
rcl
enter
or
adc
pop
push
or
andl
icebp
in
in
and
mov
xlat
out
jne
roll
jns
pop
mov
cmp
or
mov
xchg
xchg
inc
sti
adc
inc
fisubrl
sub
mov
pop
jnp
xchg
sbb
mov
add
daa
lea
data16
sbb
aad
pop
je
mov
mov
push
cwtl
push
int3
dec
out
ljmp
and
enter
cmpsb
fbstp
mov
imul
sub
repnz
pushf
inc
mov
cli
mov
mov
loopne
xor
inc
xchg
pusha
lods
jne
sub
or
test
push
std
lea
fwait
mov
inc
sahf
mov
add
sbb
pop
sbb
or
es
push
aaa
movsb
ja
decl
mov
int3
jno
dec
push
scas
mov
push
xor
prefetch
push
jns
dec
mov
jle
pop
in
mov
xchg
stos
fnstsw
mov
out
mov
mov
jge
mov
iret
cmp
icebp
sbb
jb
and
lods
repz
call
or
jne
sub
add
pop
xor
scas
xchg
and
push
push
rorl
cmp
pop
cmp
sbb
or
lret
add
icebp
or
jae
jecxz
out
icebp
push
push
fisubrl
test
pop
cmp
mov
jno
fdivrl
sbb
inc
mov
xchg
int3
pop
and
cmp
adc
pop
popa
sub
pop
punpcklwd
adc
or
in
push
dec
pushf
lcall
fisubrl
js
add
cmpsl
fisubrs
pop
xchg
lods
scas
int3
sub
sbb
imul
add
jge
aaa
xor
cmp
outsb
popa
imul
stc
mov
sbb
sbb
fwait
jno
cmpb
pushl
adc
and
xchg
decb
pop
rcll
push
insb
mov
je
inc
fldcw
add
mov
mov
lods
and
sbb
mov
pusha
std
roll
std
xchg
pop
stos
test
in
mov
push
xchg
sub
push
fwait
stos
or
push
mov
frstor
sub
dec
mov
ss
xor
shrl
or
mov
xchg
mov
sbb
add
xor
adc
mov
loop
pop
jbe
mov
jp
sbb
aad
cs
push
out
fldenv
in
test
shr
mov
push
icebp
das
pop
std
jp
pop
movsl
inc
jmp
mov
aaa
mov
cmp
or
push
outsb
jne
rorb
sbb
cld
imulb
inc
mov
daa
sbb
add
cld
imul
cltd
jns
ja
and
inc
rol
mov
xchg
cmp
push
mov
lahf
movsl
sarb
mov
mov
aaa
cmp
mov
adc
inc
jnp
int
jns
pop
out
mov
fidivrs
ret
sub
stc
cmpsl
sbb
jbe
cmp
fcmovne
mov
popf
add
in
test
das
xchg
pop
ja
sub
mov
push
test
test
or
jecxz
ret
lret
sbb
mov
jb
and
clc
pop
pop
popa
cmp
push
cmpsb
adc
in
push
mov
xor
cmp
lret
stc
jge
mov
ss
mov
push
and
fs
inc
fiaddl
jmp
imul
mov
mov
int3
bnd
pop
jl
jne
mov
inc
arpl
xchg
xor
mov
lds
mov
and
jae
out
insl
inc
outsl
rep
stc
mov
mov
push
add
test
loope
cld
and
stos
pusha
inc
insb
outsl
push
stc
xchg
scas
pop
adc
mov
jb
add
imul
dec
or
int3
stos
fldenv
xchg
xchg
popf
adc
daa
les
das
pop
fbstp
push
lds
xor
mov
add
xchg
jnp
push
xchg
cli
xor
jb
test
xchg
push
pop
loope
jp
jbe
push
arpl
and
xor
lods
xchg
ss
sub
fildll
fcoml
test
sbb
orb
pop
mov
stos
push
dec
add
testb
mov
sub
das
dec
jo
pop
scas
jmp
adc
pop
enter
enter
shl
test
xchg
jns
or
jno
and
or
cld
xchg
js
out
lock
mov
jo
addr16
pop
cmp
fld
aaa
cmp
scas
cmp
lods
test
mov
inc
ret
fidivrs
loope
aad
cli
popa
jg
cmp
jo
jnp
inc
lds
inc
pop
mov
shl
mov
mov
xor
stc
push
push
sub
imul
je
idivl
mov
pop
popf
fs
adc
inc
mov
or
mov
imul
imul
addr16
aas
ret
sub
xchg
add
fs
inc
pop
add
scas
mov
inc
lods
sbb
add
icebp
hlt
seta
ret
ds
aad
xor
es
fldt
mov
xchg
adc
in
orb
push
dec
leave
sub
lods
sbb
cld
rorb
jp
lods
adc
lods
fsub
dec
jbe
insb
lret
sub
call
test
out
les
mov
adc
mov
adcl
adc
mov
sarl
add
dec
aam
out
out
mov
outsl
test
stos
enter
lock
or
mov
xlat
mov
jnp
into
sub
mov
mov
xchg
pop
bound
cwtl
and
and
adc
mov
ja
cltd
iret
fnstsw
sub
sbb
cmp
jne
sahf
test
xchg
incl
cwtl
and
mov
lock
mov
js
insl
sbb
cmpsl
inc
push
mov
sahf
leave
hlt
xor
cmp
add
lods
jnp
mov
les
push
sub
in
mov
mov
lret
popf
xor
iret
ljmp
call
and
aad
cmp
pop
sbb
aas
rcrl
aas
popw
or
adc
mov
xchg
inc
xchg
mov
in
fnstcw
xchg
jb
ds
xchg
std
jecxz
mov
add
daa
lcall
xlat
mov
mov
movsl
cmp
lds
stc
js
or
xchg
movsb
jae
leave
jg
mov
repnz
jmp
leave
and
in
mov
popa
or
inc
xor
inc
push
shll
fistps
jbe
fmull
cwtl
push
cmpxchg
inc
push
lret
jo
out
bound
inc
push
sub
loopne
xlat
shl
sbb
mov
jg
pushf
cmpsb
stos
outsb
test
mov
cld
pop
stos
pop
xlat
imul
movsl
bound
lods
bound
loop
sub
dec
mov
call
adc
cmpsl
xchg
jecxz
pop
test
lea
test
jbe
fistl
imul
in
ljmp
cli
or
mov
popf
rol
stos
mov
sbb
js
leave
subb
mov
nop
pop
mov
aad
sbb
test
call
mov
dec
jl
rorl
pop
jo
xchg
mov
movb
sbb
pop
out
mov
pop
jno
adc
lret
roll
push
xchg
xor
enter
daa
adc
bound
xchg
dec
jle
adc
push
pusha
jo
mov
mov
push
in
incb
int
addr16
cld
loop
shll
ja
push
sub
dec
mov
nop
into
xor
jle
je
lahf
adc
push
mov
mov
popa
adc
dec
hlt
ja
imul
in
xorl
dec
std
pop
gs
mov
sub
scas
stos
std
or
dec
sti
add
pop
jne
aam
xor
dec
push
stos
dec
shrl
or
mov
aad
mov
mov
mov
ss
xor
inc
dec
in
push
mov
das
fsubrl
jle
adc
inc
jmp
pop
clc
mov
cmp
lods
clc
lea
int3
jno
sub
cmp
mov
mov
jp
sbb
mov
xchg
test
int
lret
or
fs
test
jno
jl
fbld
cmp
sub
dec
in
fldt
mov
repz
or
outsb
js
add
outsl
nop
dec
clc
enter
xor
into
imul
sbb
aam
cmp
test
mov
arpl
jmp
or
jl
ficomps
xor
mov
or
movsb
jl
lret
subl
or
testb
ljmp
inc
hlt
push
cli
and
leave
pusha
jl
icebp
mov
popa
inc
pop
int
in
inc
jp
push
bound
shrb
mov
pop
enter
cmp
xor
pushf
xlat
xor
clc
test
push
aad
nop
insl
fnsave
add
test
pop
popa
pop
or
sbbb
adc
les
fs
cmp
inc
sub
jmp
sub
inc
insl
lret
mov
fwait
cli
xchg
into
sub
ds
and
imul
cs
mov
mov
pop
mov
mov
and
roll
insl
adc
fimuls
mov
repnz
adc
cmp
mov
icebp
add
out
jnp
outsl
inc
mov
push
push
fsubrs
sbb
jne
sub
or
adc
sub
push
and
xchg
movsb
xchg
into
xorb
jg
adcl
inc
mov
dec
out
inc
or
dec
scas
sti
inc
ja
pop
inc
stc
rolb
mov
lahf
mov
dec
xchg
dec
mov
xchg
sbb
pop
adc
into
or
in
imul
sti
adcb
roll
adc
sbb
int3
jb
lret
push
or
repnz
fwait
adc
pop
pop
dec
xor
mov
lock
adc
pop
pusha
rorl
cs
xchg
add
ret
cmpsb
add
cmp
dec
push
mov
jbe
inc
xor
mov
dec
in
sbb
mov
and
adc
mov
and
mov
insl
cli
shrl
addr16
loopne
xor
arpl
and
jo
aaa
push
adc
mov
lret
jns
mov
mov
mov
cmc
out
fwait
xor
sar
roll
out
sti
or
negb
cmp
ljmp
pop
pop
xchg
shr
jle
and
jnp
roll
xchg
ret
into
popa
jmp
sti
fisubrl
push
pop
enter
xchg
push
insb
popf
fwait
mov
xor
arpl
and
aas
lahf
push
test
jecxz
les
sar
mov
jmp
lahf
cmp
cs
inc
imul
sub
adc
pop
jae
dec
cmc
popf
or
add
mov
mov
xchg
aaa
xchg
push
cmpsl
fcomp
jle
xchg
aad
sbbl
adc
clc
sbb
test
mov
ror
insb
sbb
pop
insb
xchg
loop
push
dec
jbe
cmc
movsl
fimull
lret
jo
sub
mov
and
push
orl
xchg
or
push
cmpsb
cwtl
stos
cld
jno
mov
xor
pushf
inc
ss
xor
sarl
adc
scas
xchg
pop
pop
mov
out
pop
push
loop
push
hlt
lods
movsl
aad
pop
xchg
or
rorb
adc
cmpsl
dec
xor
mov
adc
mov
and
or
sti
xchg
add
xchg
mov
xor
jo
cld
push
cwtl
inc
or
push
jne
adc
fwait
pop
pop
sub
cmp
xchg
and
push
out
mov
aam
out
mov
or
je
push
push
sbbb
push
mov
add
mov
mov
pop
das
arpl
sub
frstor
cltd
inc
adc
enter
inc
mov
mov
mov
out
mov
negb
cld
aaa
pop
xchg
or
popf
loop
js
xor
push
xchg
push
sub
lods
jp
les
push
inc
shl
xchg
lret
jp
outsb
loope
jl
cli
test
adc
arpl
ror
sbb
icebp
xchg
sub
jb
cltd
jbe
sub
in
sub
mov
and
in
xchg
inc
lods
sahf
outsb
lds
or
outsl
popf
adc
push
bndstx
dec
das
jmp
adc
jge
jle
pop
jbe
loope
cmpsb
xor
movsb
jge
mov
movsl
enter
push
push
test
repnz
sahf
mov
inc
lcall
jg
sti
dec
jecxz
xchg
xor
xchg
xchg
sub
cmp
add
dec
imul
pop
cmpsb
mov
xchg
adc
popa
push
in
out
mov
mov
cs
stc
cmpsl
mov
stos
add
shrl
xchg
sbb
add
or
push
ficoms
dec
roll
jnp
cmpsb
sub
lods
dec
neg
movl
out
cmc
ja
xchg
inc
cmp
push
or
stos
and
xor
jnp
xchg
xor
jle
out
out
add
adc
push
mov
sbb
add
aas
outsb
test
push
mov
ret
mov
add
lea
ljmp
out
loop
bound
cld
shll
scas
ss
sub
lods
outsl
push
pop
inc
loop
dec
and
cs
outsb
aas
cmp
in
xchg
or
xor
arpl
cmp
sub
adc
mov
inc
mov
movsl
call
std
xchg
shl
adc
loope
mov
nop
xor
dec
dec
cmp
xchg
push
fiadds
cmpsb
fmull
jnp
or
jle
and
testb
cmp
lods
mov
sbb
adc
dec
xchg
fsubr
jge
fsubp
xor
add
pop
repz
or
mov
addr16
mov
add
push
fstps
sbb
rorl
jae
in
lods
xlat
cmp
hlt
popf
jb
cltd
mov
hlt
jmp
lods
pusha
and
jae
jle
push
pop
and
xchg
sub
mov
jge
mov
icebp
cwtl
xchg
test
pop
scas
sub
xor
std
pop
and
lcall
or
jmp
sbb
xchg
lods
popf
pop
jns
mov
inc
pushf
popf
out
out
in
daa
xor
xor
xchg
into
cmc
push
out
jo
lret
pop
cmp
jo
jns
mov
pop
jae
ja
or
pop
es
inc
or
adc
aad
mov
fucomp
mov
pusha
js
xor
sub
xchg
icebp
mov
ret
xor
mov
push
inc
ljmp
inc
push
xor
mov
inc
fwait
jmp
mov
fwait
sbb
mov
fsubrp
sub
mov
adc
mov
enter
call
lgdtl
push
pop
mov
aas
push
dec
notb
or
mov
mov
out
xchg
push
adc
fucomi
das
inc
cld
mov
loope
jecxz
adc
pop
repnz
ficoms
int
ds
mov
in
imul
addr16
pop
adc
jge
xor
adc
adcb
fistpl
xchg
add
mov
jl
pusha
ss
daa
or
fists
clc
je
insb
aas
fwait
in
popl
or
inc
orb
sbb
call
pop
pop
push
cmp
popa
mov
imulb
push
push
lock
mov
test
sub
mov
push
cwtl
fdivl
mov
bound
nop
add
mov
pop
popf
cmpsb
mov
add
test
cmpsb
and
inc
ss
xchg
dec
push
je
push
adc
movsl
int3
xchg
insl
lret
addr16
push
lret
movsb
jb
mov
outsb
dec
mov
lea
sbbl
pusha
shll
daa
cmpsb
enter
imul
scas
icebp
ja
mov
mov
jge
mov
dec
ljmp
mov
xor
dec
mov
rcrb
ffreep
inc
pop
divb
inc
arpl
shr
and
xor
mov
js,pt
push
xlat
and
pop
push
lods
mov
xor
xor
aaa
insb
icebp
fldenv
inc
out
fadd
sbb
lcall
mov
mov
stos
addb
add
dec
rsqrtps
adc
jle
jmp
cwtl
pop
sbb
xchg
sub
popf
xchg
and
loopne
inc
fidivs
fwait
cli
inc
jmp
fbld
sbbb
push
push
jle
xor
mov
imul
ret
das
pop
sub
fstpl
leave
stos
sahf
inc
loopne
lock
loopne
imul
or
mov
shrb
xchg
cwtl
adc
push
pop
pushl
jmp
sarb
inc
outsl
add
mov
adc
incl
ss
fcompl
and
xor
rcrb
fstl
hlt
or
mov
inc
push
sbb
sub
jl
out
inc
mov
xlat
loopne
lcall
inc
lods
jne
add
lret
add
jp
xchg
out
addb
dec
or
idiv
cmp
test
push
pop
test
mov
repz
dec
sbb
iret
xor
adc
or
pop
test
inc
cmp
popf
sub
mov
adc
push
jb
subb
add
rclb
leave
jl
xorl
push
out
xchg
sub
cmove
call
cmpsb
pusha
mov
mov
jl
sbb
adc
add
sahf
mov
push
or
mov
push
sub
mov
movsl
sub
inc
cmp
mov
mov
inc
adc
rolb
cli
addr16
jo
fildl
sbb
xchg
jge
push
loop
mov
or
adc
pushf
addl
xor
mov
test
sarl
xchg
mov
jmp
fs
ds
imul
push
mulb
push
neg
dec
inc
jl
or
sbb
popa
sti
pop
jns
shlb
mov
in
lock
test
fadds
ret
sbb
aas
fldenv
rcl
adc
dec
lret
std
cmpsb
daa
bound
or
or
icebp
inc
ret
ljmp
in
push
and
push
into
jns
adc
cld
cmpsl
movsb
sub
out
push
enter
aam
aas
jae
inc
xchg
in
lds
test
lods
pop
stc
xor
out
xor
jae
mov
and
js
xchg
mov
mov
jmp
xchg
sbb
std
push
lcall
insb
mov
xor
in
inc
sub
inc
adc
gs
mov
call
mov
adcl
sub
hlt
cmpsl
sbbw
cmp
imulb
jno
iret
push
mov
movsb
mov
jns
push
aam
push
lcall
or
lahf
or
pop
dec
pop
shlb
cltd
out
xchg
in
movsl
dec
add
add
cmpsb
hlt
cld
mov
add
sub
lret
push
outsl
ja
mov
add
test
cmp
cs
push
adcl
xor
loope
jecxz
xlat
lcall
movsl
sti
lds
iret
mov
xchg
jo
jae
and
mov
and
push
sub
pop
dec
dec
bound
xor
mov
sub
mov
imul
adc
js
test
imul
jle
movups
xor
dec
insb
lea
mov
jnp
mov
push
clc
fsubl
and
push
adc
movsl
sbb
fnstsw
scas
push
and
cld
jg
jno
sbbl
sbb
mov
or
imul
icebp
jnp
cwtl
adcb
or
shlb
sub
fcmovnbe
add
ret
sub
xchg
dec
mov
push
inc
in
mov
fwait
and
packsswb
shr
cmp
lods
sarl
push
push
fadds
in
int
inc
xchg
and
sub
out
push
cs
test
or
shlb
sub
jle
fstpl
dec
in
mov
cwtl
jp
daa
lcall
jp
mov
stos
int
mov
orb
push
icebp
mov
inc
ficoml
ds
ljmp
ss
mov
fbstp
nop
imul
add
inc
pop
stc
or
cmp
sbb
data16
pusha
sub
pop
pop
xor
sarb
pushf
pop
sbb
ret
xchg
or
jmp
dec
les
mov
fdivrl
sbbl
cmp
mov
imul
movsl
mov
dec
jno
test
fildl
mov
dec
lcall
pop
jp
dec
movsb
and
out
inc
jmp
cs
out
or
xor
imul
adc
cmc
add
xchg
mov
sbb
inc
push
in
movl
lds
jmp
and
pop
clc
loopne
popa
lods
ret
mov
leave
cmc
sub
test
adc
fidivl
mov
mov
mov
push
mov
stc
daa
sarl
jns
xchg
sub
out
jne
and
pop
add
addr16
inc
addr16
push
std
cmp
jae
aaa
fcomp
fstsw
fsubrp
sbb
test
and
dec
int
insb
xchg
cmp
pop
mov
pusha
add
and
push
mov
cld
push
in
xor
sub
pop
dec
ret
mov
mov
jmp
xor
jo
mov
jle
icebp
mov
dec
or
popa
loopne
mov
mov
insl
and
push
addr16
ss
xchg
nop
xchg
fstps
faddl
mov
cmp
std
icebp
repnz
fsubl
jbe
icebp
pop
pushf
rcll
inc
sub
add
nop
lret
sbb
xchg
mov
in
cltd
adc
in
mov
sub
imul
pop
mov
adc
xchg
mov
ss
icebp
in
inc
push
lret
inc
or
popa
jne
sub
loopne
jl
sbb
movzwl
pop
mov
pop
negl
shll
dec
xor
jmp
lea
dec
jge
rep
push
sbb
dec
pusha
pop
push
pop
mov
shlb
test
jle
ljmp
cltd
scas
in
xchg
mov
out
adc
test
pop
dec
fidivl
outsl
push
adc
stos
ja
push
rol
add
lret
jge
subl
pop
pop
mov
ja
int
sub
adc
shlb
push
stos
xchg
mov
mov
in
add
adc
pop
test
popf
inc
movsb
xchg
nop
pop
js
loopne
in
sub
push
aaa
aam
push
imulb
nop
add
pop
dec
pusha
xchg
mov
dec
xlat
cmp
jp
and
jbe
pusha
sub
cltd
fcmovbe
adc
in
outsb
shll
sub
neg
fdiv
push
mov
lahf
jnp
mov
aam
ffree
ljmp
outsl
movsl
pop
loopne
sti
dec
sbb
clc
shr
sub
ja
mov
cli
fidivl
fistpl
add
cmp
mov
fcomi
bound
cmp
push
cs
xchg
push
ret
dec
insb
lea
sbb
mov
cmpsl
fildll
popl
mov
daa
and
and
push
xor
push
js
dec
test
push
sbb
inc
mov
ret
cld
jbe
int
lahf
mov
out
test
mov
add
inc
fcompl
aas
xchg
insl
shlb
pusha
and
aam
mov
aaa
cs
pop
or
jl
ret
and
repz
sarl
outsb
sub
dec
lock
jne
and
mov
ret
bound
cmpsl
and
insl
or
push
jecxz
aaa
jmp
cmp
or
ljmp
push
fists
in
movsb
loopne
adc
xchg
sub
test
in
int
sti
roll
popf
pop
adc
in
imul
sbb
cld
aaa
sahf
outsb
leave
repz
push
imul
mov
sahf
xchg
dec
push
stos
mov
push
sbb
aas
mov
sbbl
jae
loop
fildll
stc
and
jle
test
aaa
std
loop
inc
jo
int
testb
in
dec
mov
shlb
fdivrl
sbb
xchg
cli
std
mov
or
mov
in
sbb
jge
popa
cltd
nop
fmull
xlat
hlt
xor
movsl
mov
rorl
fdivs
cmc
push
xchg
out
popa
jp
push
inc
jecxz
adc
cmpsl
jb
sub
out
in
jnp
push
jbe
xchg
pop
or
add
mov
dec
or
and
jo
add
test
push
and
sarb
mov
lock
loope
jno
popa
push
or
or
das
imul
push
mov
jo
sub
jmp
mov
xor
sbb
jne
jecxz
scas
or
push
scas
repnz
sbb
fsubr
xor
and
loopne
popa
or
sar
stos
out
iret
fiadds
dec
xchg
int3
notb
in
inc
aam
test
and
pop
test
and
ss
fildl
call
out
pushf
push
or
jmp
test
sbb
out
sub
popf
sub
stc
mov
cmc
mov
and
xchg
dec
shrl
cmp
and
lret
and
cmp
and
fadds
aas
sti
cmc
dec
or
pop
test
mov
shlb
aaa
rcl
stc
fidivl
out
enter
push
shll
adc
sahf
inc
pop
mov
or
jo
fnstenv
hlt
pslld
out
movsl
scas
imul
jno
stos
xor
xchg
loopne
inc
in
sbb
jae
cmp
lret
mov
or
xchg
fcompl
or
add
mov
stc
test
lods
aaa
xlat
adc
sbb
xchg
adc
out
jae
aam
jl
stos
mov
mov
sbb
mov
sub
dec
ljmp
dec
dec
mov
pop
jp
mov
push
pop
popf
loop
mov
inc
aad
in
inc
or
jbe
div
pop
ss
icebp
jae
jbe
sbb
push
push
sbb
dec
dec
xchg
stc
mov
add
pop
rcrb
scas
pop
insb
cld
jo
les
jmp
inc
xchg
jne
pop
adc
int
xor
in
dec
jle
mov
out
int
fistpll
icebp
or
adc
out
popf
mov
and
test
pop
rorb
outsl
fcmove
push
cmpsb
jmp
cmp
loopne
addb
jne
and
jg
mov
stos
js
out
dec
stc
adc
mov
mov
dec
ficomps
in
dec
mov
or
mull
jae
shrl
ds
test
stc
mov
adcl
mulb
clc
nop
xor
ja
adc
out
xchg
inc
ljmp
adc
in
dec
sub
ds
dec
mov
push
or
push
xlat
stc
gs
lahf
adc
das
arpl
movsl
add
adc
mov
pop
or
aam
enter
or
addr16
scas
mov
leave
cmp
outsb
lds
ret
outsb
add
lret
pop
or
rcl
lods
pop
cltd
jno
inc
fs
ja
int3
mov
iret
imul
sbb
mull
fstpl
call
mov
and
add
ret
mov
stc
pop
mov
mov
dec
pop
fimull
sbb
push
jns
push
and
pop
enter
sbbl
pop
sbbb
push
enter
adc
xchg
in
push
dec
mov
and
mov
in
push
scas
ret
mov
and
pop
lret
add
and
adcl
inc
loopne
jg,pn
cmp
push
out
ficoml
lods
dec
mov
mov
jmp
nop
mov
cmp
or
pop
dec
mov
dec
lock
hlt
xor
adc
out
lock
and
mov
cli
cmc
mov
push
gs
loope
sti
pop
adc
jmp
inc
mov
fsubs
insb
clc
and
dec
in
shrl
cmc
aas
fbld
aas
dec
adc
pop
test
mov
into
sarb
enter
lea
nop
cmpsb
and
jnp
js
mov
mov
inc
push
xchg
mov
push
sub
jne
adc
movsl
adc
and
xor
mull
mov
psadbw
sbb
lret
sbb
sbb
cmpl
lret
in
orl
jg
roll
mov
xor
inc
add
jbe
jns
movsb
inc
adc
das
or
sbb
mov
or
aaa
jge
mov
int
cmp
loopne
inc
xchg
outsb
bnd
out
mov
or
pop
es
cwtl
std
add
jae
inc
imull
sub
xchg
aaa
fisttps
fmull
ja
add
or
mov
push
repz
loopne
fcomps
pop
movsl
leave
mov
sbb
sub
lock
icebp
cs
sarl
push
push
jg
dec
cmp
bound
mov
add
imul
out
sbb
and
xor
flds
pop
lahf
xor
je
fbstp
xchg
or
adc
pop
cmp
mov
inc
test
cmovae
push
daa
adc
outsb
xchg
jp
andl
faddl
push
sub
gs
jp
xchg
sti
lods
shll
mov
pusha
rcll
push
jecxz
sahf
pop
cmpsl
out
push
and
push
xchg
out
pop
stc
negb
and
lret
push
scas
push
test
cs
jmp
roll
xchg
sbb
into
sbb
dec
inc
cmpsb
imul
push
pop
loop
push
pop
jnp,pn
dec
xor
push
mov
inc
cmp
int3
sub
xor
dec
add
cmpsl
mov
pop
das
cmp
out
out
ret
cmp
or
adc
hlt
or
dec
test
movsl
iret
mov
fimuls
or
addl
imul
push
sbb
je
test
pop
push
jbe
test
push
sub
cltd
dec
in
jl
and
ror
std
dec
pop
test
adc
push
cmp
mov
mov
nop
sub
das
cld
leave
inc
inc
jae,pt
insb
mov
inc
mov
adc
into
adc
or
mov
mov
test
insb
add
adc
or
popf
add
lret
fsubrs
rolb
or
inc
xchg
jo
data16
xor
scas
popl
inc
dec
clc
jne
lock
fnstsw
mov
mov
xchg
int3
add
fstpt
mov
les
adc
push
stos
xchg
xchg
mov
ret
mov
pusha
sbb
jg
add
mov
adcl
mov
mov
rcl
shlb
cmp
retw
movsl
mov
stos
and
mov
sbb
mov
or
iret
popa
loopne
mov
icebp
je
in
ret
xchg
jo
and
lcall
int3
and
loopne
fiadds
mov
scas
and
pushf
pavgb
sarl
adc
inc
xor
mov
pop
les
mov
out
aam
inc
or
lret
or
repz
mov
loop
jg
lods
out
dec
adc
jmp
gs
and
jp
push
cmp
jae
push
mov
add
into
xchg
mov
fisttps
nop
scas
sbb
jge
jbe
pop
adc
nop
inc
xchg
inc
aad
stos
into
stos
inc
loop
xor
fbld
xor
or
imul
pop
out
pop
cmp
sub
cmpsl
xor
decl
mov
xchg
aas
mov
dec
enter
inc
mov
aam
mov
pop
stos
addr16
in
addr16
fldt
mov
pop
inc
sub
mov
or
leave
test
enter
jp
and
push
adc
mov
xchg
loop
or
fidivl
jge
lods
inc
stos
iret
jbe
xchg
mov
out
repnz
xchg
outsl
sahf
stc
jle
aas
jns
fisubs
push
cli
mov
movsb
xchg
xchg
push
inc
or
daa
mov
pop
outsb
inc
inc
sarb
icebp
sbbl
adc
push
cmp
shlb
xchg
lahf
pop
repnz
lret
cs
cmp
aas
sbb
decb
push
add
push
inc
aaa
sub
mov
push
test
add
ja
lock
dec
pushf
adc
or
cli
push
test
es
mov
movsl
pop
and
pop
fst
dec
outsb
cli
cli
jbe
pushf
mov
mov
jecxz
outsb
push
mov
xor
stc
ds
loope
ss
or
jl
lock
sub
loopne
inc
in
jno
push
inc
stc
sub
sbb
jno
xchg
push
bound
lods
adc
push
fimull
sbb
loope
stos
roll
jmp
xor
dec
add
mov
int3
cmp
xor
shll
pushf
loop
xchg
xor
sub
push
add
repz
daa
jg
test
mov
jl
sti
or
cmp
cld
pusha
pushf
or
sbb
xchg
sub
xchg
out
cmp
push
scas
pop
adcl
int3
pusha
adc
mov
sbb
ja
arpl
sub
dec
pop
xchg
pop
lcall
mov
dec
mov
mov
out
movsb
push
push
fimuls
bound
out
xor
ficoml
jbe
inc
movsl
push
cmp
sbb
push
dec
out
rcr
mov
mov
jecxz
mov
mov
jne
inc
jbe
cmp
cmp
or
xor
lahf
aam
sbb
cmpsl
xor
sbb
cmp
lcall
add
pop
fidivrs
fistpl
or
xchg
js
add
std
dec
pop
pop
jb
cmpsb
sbb
or
and
int
call
and
enterw
int
jmp
mov
or
cmovp
stos
test
xchg
fistps
adc
shlb
rcll
jmp
sbb
jg
inc
xor
adc
dec
cs
rcrb
mov
lret
push
sub
les
mov
out
aaa
adc
subl
popa
je
jns
fstps
jl
and
lret
loop
cmpsl
std
pusha
cmpsl
pop
mov
clc
ljmp
mov
jno
or
popa
flds
out
sbb
ds
ret
cld
lahf
mov
jb
fnstenv
sub
mov
mov
jge
jne
insb
ret
out
dec
pop
cld
dec
adc
and
jno
inc
cmp
orb
xlat
xor
xor
movsb
es
dec
push
pushf
out
jg
mov
arpl
fldl
add
push
mov
mov
mov
js
clc
in
lods
mov
fisttpll
out
test
dec
pop
cli
inc
jl
addr16
dec
inc
ljmp
scas
sbb
out
jae
stos
int3
les
and
lds
sub
test
sbb
daa
dec
pop
loope
ficoml
rcrb
pop
popf
cmc
int
xchg
insb
xchg
insl
std
pop
int
push
into
ds
loopne
out
push
or
orl
clc
and
shlw
jle
inc
mov
xchg
add
inc
dec
ss
fistl
inc
or
dec
mov
cld
idivb
cmpsl
fsubrs
mov
xor
mov
pop
mov
out
imul
test
xor
mov
jg
aam
mov
inc
movsb
xlat
js
int3
or
je
enter
je
cld
dec
dec
mov
push
adc
mov
test
loopne
pushf
data16
inc
push
add
popa
int
sbb
fsubl
xchg
enter
int
xchg
or
or
add
aas
pop
pop
inc
mov
popf
decb
mov
nop
popf
scas
out
mov
or
arpl
stos
fwait
dec
nop
lahf
loope
or
xor
jmp
insl
jnp
adc
das
push
sub
hlt
insb
stos
loope
inc
add
mov
pop
rcrb
cli
test
fstpl
stos
scas
push
pop
mov
jmp
int3
mov
in
xor
push
jp
dec
andl
jo
mov
cmc
sbb
push
adc
das
pop
pop
jge
outsl
push
pop
jp
js
fisubrl
cmp
cmp
pushf
sbb
icebp
mov
aam
xchg
jl
mov
or
aaa
movsb
lea
es
jle
mov
pop
jo
and
adc
dec
mov
mov
bound
scas
mov
cmp
add
or
daa
fmuls
xchg
push
fdivrl
xor
scas
jae
inc
inc
cmpl
pop
jl
jns
incb
adc
push
or
xor
mov
out
sub
adc
inc
push
adc
fstp
and
ja
mov
negb
lds
inc
sub
sub
out
or
adc
mov
jp
add
push
out
mov
loopne
scas
test
pop
loope
sti
cmp
lahf
xchg
push
hlt
outsl
cmc
mov
aaa
push
xchg
ja
sahf
lods
cld
pop
jp
mov
jmp
mov
and
push
arpl
insl
fldlg2
aad
mov
sub
xchg
cmp
aaa
rolb
push
sub
inc
cld
sub
dec
cld
cmc
scas
popf
xchg
lods
ss
imul
je
rclb
testl
fiaddl
es
test
pop
push
cwtl
and
fisttps
and
cmp
mov
aaa
jne
popf
mov
lods
mov
push
cmp
and
ror
pop
popf
je
mov
inc
xchg
adc
xor
mov
sti
add
mov
insl
cmp
subl
mov
xor
pop
adc
mov
add
popa
mov
mov
xchg
push
aas
and
testb
das
jecxz
in
push
repz
fisubrl
js
aad
pop
pop
xchg
mov
push
insb
push
lods
hlt
push
repnz
xor
sbb
mov
inc
mov
test
in
jecxz
ja
sbb
in
fldenv
pop
mov
inc
inc
fimuls
and
shlb
insb
sub
mov
outsb
ja
loop
mov
and
mov
movsl
aas
out
pop
sub
or
icebp
dec
push
and
xchg
xor
inc
insb
xchg
outsl
or
xchg
or
cwtl
jmp
das
sub
and
testl
adcl
or
fwait
fwait
in
mov
std
and
push
int
push
xchg
js
shll
insb
or
fidivrl
and
cmp
lcall
int3
cld
xchg
mov
and
popa
xlat
add
in
xor
mov
lahf
sar
leave
sbb
jecxz
and
aad
aaa
in
push
jl
sub
loopne
mov
mov
cltd
push
pop
ret
mov
pop
and
mov
rorl
mov
scas
pushf
xor
ss
fwait
mov
and
enter
repz
mov
mov
add
outsl
ficoms
xor
xor
mov
push
jbe
fwait
les
jbe
outsl
cmp
pop
inc
jle
inc
repnz
mov
jno
cmc
shr
mov
push
cltd
test
jns
jb
fs
xadd
vsqrtsd
imul
test
test
mov
push
imul
mov
out
xor
or
inc
fwait
pop
or
fnstenv
ficomps
repnz
cmp
enter
pop
das
xor
cmp
lds
pop
dec
enter
fdivrl
es
flds
jmp
xorl
sti
mov
mov
mov
xchg
arpl
sub
mul
rdtsc
pusha
cli
sti
and
mov
fisubl
dec
mov
xchg
or
push
jnp
and
dec
pop
pop
adc
sbb
roll
jmp
sub
test
movsb
pop
add
add
mov
in
inc
and
pop
pusha
icebp
or
rcll
add
push
mov
add
sbb
and
cmp
cmpsl
pop
xor
sub
push
mov
adc
add
mov
loop
push
mov
std
or
movsl
movb
pop
std
dec
pop
sbb
decb
mov
or
cmp
and
fsts
push
jle
into
and
call
fiadds
push
cltd
sbbb
shlb
imul
push
sub
push
pop
jb
pop
sahf
pop
xor
mov
jecxz
mov
movsl
in
shrb
not
negb
dec
dec
test
xchg
mov
mov
lock
loopne
sub
scas
outsl
dec
inc
nop
popf
imul
lcall
adc
adc
sti
cmp
arpl
iret
stos
push
sti
ret
popa
sub
and
push
cld
cmp
dec
shr
imul
cld
or
loop
jo
xchg
pop
adc
loop
push
test
mov
adc
push
test
pop
rol
es
popa
in
jbe
dec
mov
in
cmp
cmp
add
adc
hlt
xchg
mull
jne
testb
lcall
pop
cmp
es
aaa
adc
loop
sbb
xchg
add
out
scas
aas
mov
out
ficomps
fwait
xlat
or
xchg
jo
cmp
fsubs
adc
adc
mov
mov
sbb
add
dec
mov
sub
dec
orb
test
mov
sbb
test
movsb
xor
mov
xor
sbb
jno
sbb
insl
and
add
outsb
mov
loop
inc
xchg
ljmp
mov
int
jnp
inc
ljmp
xchg
fwait
mov
adc
sbb
subl
mov
cmp
pop
or
dec
shll
flds
pop
and
and
dec
mov
push
cwtl
xchg
push
jbe
aam
push
nop
push
push
ja
arpl
cmp
aam
aas
imul
adc
inc
jge
js
push
jno
test
dec
enter
pop
dec
or
add
test
outsl
mov
add
popf
stos
mov
sub
clc
and
les
jmp
in
push
daa
mov
test
push
xchg
outsb
sub
adc
stos
test
fnsave
adc
sbbb
jg
das
sahf
xchg
jns
lods
xchg
jae
fidivs
out
ds
lea
jecxz
pop
ret
mov
push
push
dec
sbb
ficompl
dec
push
out
dec
sbb
jp
and
or
data16
fisttpll
fdivl
das
add
repnz
cmp
dec
movsb
mov
loop
jg
cmp
cs
popa
out
ja
push
pop
insb
stos
xor
lret
ret
outsb
pop
push
dec
add
lahf
push
add
xor
enter
xor
stc
mov
stos
sbb
xchg
aas
xor
or
push
das
jl
cmp
ret
jle
add
mov
inc
push
lods
into
shl
inc
in
lds
jns
jg
and
or
shlb
shlb
mov
ss
stos
loop
push
jb
cmpsb
cld
add
std
jmp
rclb
mov
addb
xchg
push
inc
dec
and
loopne
rcr
daa
dec
shlb
ret
or
test
dec
sbb
mov
and
mov
jl
push
xchg
adc
mov
push
xor
xchg
xor
fnsetpm(287
pop
mov
fcmovnu
movsb
ljmp
lahf
xchg
pop
mov
mov
cwtl
mov
push
in
ds
and
cmp
inc
sbb
inc
jno
stos
jnp
inc
mov
call
push
stos
fstps
pop
cmp
or
lret
dec
addr16
mov
adcb
mov
sub
sub
jae
sbb
jle
movsb
push
and
xor
shll
cs
jg
jnp
mov
jb
aam
clc
hlt
push
xor
xchg
pop
aas
xchg
test
push
sbb
iret
and
cwtl
mov
pop
push
movsl
jae
xchg
adc
xor
sbb
pop
pusha
pusha
mov
outsb
jmp
mov
fwait
jl
lret
popf
pushf
cmp
push
and
popfw
sub
inc
test
leave
ret
xchg
pop
into
inc
add
mov
cmp
xor
push
inc
xor
in
sbb
cs
mov
pop
gs
dec
neg
jb
add
xlat
and
mov
ftst
lcall
push
or
leave
and
or
test
or
loop
mov
inc
push
sbb
jle
mov
insl
jb
ja
popf
push
mov
sti
call
dec
fcmovne
adc
cmpb
sbb
push
ret
fs
sub
popf
mov
sub
and
xchg
fbld
lahf
mov
or
jecxz
add
adc
popa
xchg
and
push
mov
lret
cmpsl
pop
sahf
jle
sub
shlb
cltd
jne
or
jo
push
out
movsb
aaa
aaa
cmp
shl
repz
inc
out
imul
out
sub
xor
mov
mov
xchg
cmp
mov
mov
shufps
jo
popf
add
pop
jb
jg
scas
out
xchg
inc
rcl
mov
jmp
gs
push
jl
subl
jl
pop
sub
jns
sub
xchg
cs
dec
imul
jb
aam
int
add
dec
or
mov
rol
xchg
add
mov
xchg
cmp
fldcw
sub
mov
jno
mov
cmc
aad
dec
push
in
popf
jns
sbb
xchg
imul
inc
daa
out
mov
std
or
cmp
push
pop
xchg
xchg
sub
sbbl
pop
jns
fs
or
inc
outsl
xchg
lea
rorl
add
jb
add
dec
inc
scas
aam
lods
aaa
xchg
pop
pop
sbb
mov
negb
stos
arpl
jl
mov
push
mov
mov
pop
test
movsb
cli
popf
cmp
push
lods
lret
into
cmp
adcl
daa
adc
int
stc
adcb
push
jnp
cmp
lea
xor
pushf
outsb
mov
and
push
push
inc
outsl
ret
cmc
push
mov
mov
inc
cs
ljmp
sub
std
movsl
cmp
stos
jp
mov
sub
mov
pop
out
mov
out
mov
aam
out
bnd
lret
lods
scas
sti
fadd
cmpsl
push
pop
xchg
sub
dec
in
adc
fnstcw
push
push
js
fdivs
pop
sub
rorl
leave
insb
push
cld
add
pop
jg
rcrb
les
cltd
int
insl
enter
leave
lods
add
jns
popf
mov
loopne
loope
andl
out
mov
ret
scas
pop
les
sub
push
pusha
xor
and
pop
mov
adc
mov
mov
arpl
js
sub
push
or
pop
sbb
lods
xor
jbe
jp
dec
hlt
sub
add
jbe
repz
lsl
int
jno
bound
xchg
fldl
jge,pn
push
std
std
sub
add
jl
stos
push
arpl
fwait
push
push
push
push
ds
mov
inc
inc
adc
mov
xorb
ss
fs
adc
sub
out
inc
outsb
int
add
sarl
stos
cld
test
add
out
lret
cmp
jmp
add
sbb
popa
psrlq
nop
cwtl
cmc
jbe
sub
pop
int3
inc
repz
push
cmp
in
sbb
sbb
cli
test
out
shl
insb
dec
dec
add
dec
ftst
or
mov
and
shr
cli
mov
cltd
inc
repnz
xorb
sbb
inc
outsl
jbe
jne
pop
push
push
daa
xor
stos
repz
out
in
push
dec
jbe
pop
jno
fistpll
or
loopne
dec
arpl
xchg
repz
sbb
dec
stos
pusha
mov
fstpl
pushf
ljmp
mov
pop
dec
and
aam
popf
rcrl
add
das
inc
push
rclb
xor
je
aam
movsb
pop
and
add
xchg
sahf
pop
mov
mov
xchg
ret
fs
sbb
mov
ljmp
int3
mov
inc
jae
ds
xor
dec
inc
xor
mov
fwait
sbb
push
shlb
ss
pop
mov
jmp
stc
ret
sti
sbb
push
cmpb
nop
cmp
clc
insl
jmp
sub
fsub
fmull
pusha
pop
lods
mov
adc
cmp
fsubl
mov
mov
std
lea
sbb
icebp
movsl
mov
cmc
xor
rcll
xchg
cwtl
stos
pop
push
das
inc
out
pop
hlt
add
outsb
fwait
dec
jne
xor
or
data16
adc
xlat
fmuls
mov
jnp
data16
out
mov
push
imul
das
lods
mov
lods
leave
sub
pop
mov
clc
add
jge
outsb
pop
inc
pop
inc
xchg
sbb
push
pop
sub
into
xor
mov
pop
mov
inc
cwtl
cwtl
xchg
mov
push
js
das
test
mov
pop
lock
inc
xchg
jmp
mov
dec
mov
adc
scas
in
or
orb
cmp
sub
or
push
aad
add
and
and
xchg
inc
jns
cmp
inc
dec
mov
dec
add
aaa
xchg
movsl
cmpb
or
ljmp
outsl
testl
fldenv
sub
sti
jae
in
inc
pop
add
mov
lcall
movsl
aas
mov
jmp
cmc
mov
xchg
icebp
lods
xchg
enter
dec
rcrl
scas
es
rorl
mov
mov
loopne
xchg
push
shrl
lods
dec
add
fs
cmp
pop
sub
push
mov
pop
xor
scas
sub
and
dec
lods
lds
and
xchg
outsl
dec
or
xchg
mov
pushf
repnz
adc
xlat
mov
jo
sbb
xorb
and
rorb
push
jbe
fsubrl
and
sbbl
sbb
scas
ror
push
mov
push
push
fadds
pop
pushf
fdivrl
mov
mov
cmp
and
pushf
cmp
or
or
movb
dec
adc
pop
sbb
out
mov
pop
movsb
jno
test
jb
sbb
cmpsb
repnz
adc
xchg
adc
ret
xchg
data16
sub
and
sbb
fwait
clc
inc
rcl
insl
pop
popf
sub
lret
push
sub
pop
inc
inc
jge
inc
push
fstps
xchg
xchg
arpl
xlat
rorl
out
pop
fcmovnbe
jnp
addr16
mov
lret
ja
lret
dec
and
xchg
sti
sbb
shr
mov
ficoml
and
outsb
call
std
cmp
shrb
mov
fcoml
test
cs
mov
insl
xchg
repz
mov
jne
enter
jl
mov
movsb
in
es
jns
xor
pop
das
dec
push
cmp
xor
std
insl
movsb
adc
push
jo
push
pop
jecxz
repnz
sub
adc
push
xor
cltd
stos
add
and
sbb
addl
jl
es
scas
pushf
insb
sbb
adc
jecxz
cmpsl
sub
repnz
mov
jg
outsb
mov
pop
repnz
mov
rep
repnz
cmp
lahf
and
hlt
movsb
mov
shll
cld
pop
arpl
xchg
loope
bound
mov
loope
add
mov
inc
pop
push
out
xchg
pushf
dec
iret
sub
addr16
xchg
mov
or
and
mov
sti
lret
push
adc
aam
cli
pop
jmp
and
aaa
cltd
lock
jp
aam
in
shrb
ss
mov
mov
xlat
fsubs
imul
adc
adc
adc
test
xor
repz
shl
fdivp
sub
push
and
jp
int
mov
fistl
jp
mov
call
cmp
dec
test
sub
arpl
and
dec
insl
in
mov
inc
inc
jne
jle
pop
jmp
or
fsts
call
aaa
test
or
adc
push
push
xchg
in
push
imul
xchg
daa
lods
mov
dec
cltd
and
es
lods
cmp
sub
push
mov
mov
mov
push
cmp
sbb
idivb
mov
mov
jo
popf
fs
or
cmp
insl
push
mov
cmp
dec
aam
pop
loope
mov
cmp
repnz
add
mov
xchg
arpl
or
or
test
stos
mov
pop
push
incb
mov
sub
or
fs
push
cld
pop
adc
push
pop
out
ret
xor
ret
push
dec
pusha
cmp
out
push
lret
mov
and
and
add
jmp
mov
sahf
xchg
es
mov
jg
jae
aas
cli
mov
xchg
lret
sub
and
aad
dec
mov
sbb
push
loope
test
mov
sub
ds
fnstcw
addr16
imul
push
daa
jp
lock
mov
call
push
jp
mov
lds
shll
shrl
test
fmuls
pop
inc
mov
pop
pop
push
sub
adc
lods
mov
aam
imul
xchg
lock
sub
jno,pn
movsl
fucomp
scas
mov
mov
xor
outsb
xchg
and
cmp
xor
cwtl
and
test
dec
loopne
pop
pop
fwait
in
mov
or
jb
mov
in
fidivrs
gs
mov
loopne
cltd
fimull
mov
sub
mov
mov
fwait
rorb
and
or
stos
inc
jle
inc
dec
cmp
fstpl
cmove
and
dec
notb
popf
es
movntps
dec
sbb
fcmovbe
dec
jmp
das
xchg
push
cmp
dec
pop
pop
popa
mov
mov
jecxz
mov
xchg
or
sub
xchg
into
rcrb
andb
adc
dec
and
cmpsb
inc
xor
aaa
pop
mov
lret
dec
pop
push
mov
addr16
jbe
movb
testb
xchg
outsb
lahf
mov
rcrl
movsb
xlat
pop
xlat
scas
mov
dec
subb
sbb
nop
push
in
adc
adc
pop
imul
and
out
inc
push
filds
inc
test
jb
stos
lods
xor
add
pop
jae
fidivl
fidivrs
xorl
sbb
push
lods
popf
xchg
loope
negb
addb
adc
xor
jo
push
pop
out
xor
shlb
xor
xchg
inc
sub
fisttps
arpl
jb
adc
mov
adc
jno
cld
jnp
sbb
je
data16
mov
adc
int3
cmpsl
push
mov
jecxz
rclb
fwait
stc
cmp
jb
or
add
dec
mov
pop
pop
inc
iret
in
loopne
mov
cwtl
scas
loope
mov
sub
mov
cmc
push
test
lea
das
pop
int
lods
dec
cs
fiaddl
lds
jmp
mov
inc
xor
mov
loope
fcompl
sahf
mov
mov
add
popf
sbb
push
pop
push
push
inc
mov
mov
inc
int3
xchg
pop
fucomp
jo
icebp
in
aad
adc
or
jo
jo
sbb
mov
pop
out
inc
shl
outsb
jne
and
clc
jmp
and
add
add
xchg
sub
aas
mov
cmp
jb
lahf
aaa
xchg
insb
jo
test
out
dec
shll
mov
aaa
cwtl
iret
jl
sub
lds
sti
mov
and
int
lods
jb
stc
cmp
rcr
xor
mov
rorb
out
test
push
out
fs
add
sub
dec
iret
pop
movsl
xorl
rcrl
pop
dec
xchg
scas
in
push
or
dec
push
imulb
sbb
mov
cmp
jge
push
ficoms
ror
push
and
jle
sti
inc
lcall
addl
rorb
dec
add
sub
out
out
cmp
jl
xor
lret
fldl
insl
cli
in
addr16
in
daa
and
out
dec
pop
out
loop
xlat
jge
sbb
das
adc
outsb
sub
je
ret
xchg
cmp
mov
les
mov
mov
lock
popf
push
xor
popa
ret
cli
int
lcall
rclb
icebp
mov
mov
jmp
fisubrs
das
mov
mov
jl
xchg
cmpl
mov
ror
add
fdivrl
mov
lods
jecxz
stos
inc
hlt
push
push
dec
and
xlat
or
xchg
sbb
jmp
orl
scas
loope
cwtl
out
fsubrp
lcall
jns
adc
dec
sub
in
fistpl
loop
insl
bound
adc
xor
leave
push
xchg
cwtl
jecxz
push
dec
cmc
pop
enter
call
scas
cmp
xlat
jns
jp
inc
shll
arpl
pop
iret
aas
aaa
test
xchg
sbb
push
hlt
mov
test
imul
lods
stc
fisubrl
mov
and
pop
mov
or
icebp
xchg
jecxz
ja
mov
mov
xlat
insb
lret
mov
cmp
sti
xor
pop
sub
push
jbe
cmp
ja
in
dec
fidivs
fs
enter
and
mov
test
pop
fsubrs
sti
leave
xor
push
lods
pop
sub
sub
mov
pop
hlt
or
into
test
hlt
inc
loop
mov
fidivrl
fdivrp
pop
fnstcw
int
push
mov
data16
movsb
mov
mov
out
dec
adc
notb
clc
mov
lret
add
mov
mov
sub
xor
mov
and
sti
cmpsl
sub
mov
loopne
iret
mov
andb
inc
loop
and
jmp
test
f2xm1
imul
into
cmp
mov
mov
nop
test
pop
pop
mov
add
dec
pushf
xchg
fistpl
ret
jae
ljmpw
xchg
int3
adc
sbb
and
dec
cmp
shrl
std
in
repnz
mov
push
aam
cmpsb
cmp
in
cmp
jmp
fidivrl
xor
xchg
or
outsl
lahf
dec
or
int3
pop
call
fiaddl
add
movsl
in
out
rolb
add
out
leave
adc
test
mov
int3
cmp
mov
mov
aas
inc
andb
push
imul
test
push
cmp
popa
ret
aad
aas
pop
or
mov
stc
add
cs
inc
daa
push
int3
dec
pushf
outsb
or
aas
mov
mov
mov
mov
ret
xchg
or
pop
sahf
or
and
cwtl
out
addb
add
cltd
aam
mov
je
cmpsb
lock
lahf
or
pop
subb
sub
adc
sub
adc
movsb
mov
je
aaa
jae
mov
rclb
mov
or
outsb
pop
xchg
loopne
cs
push
xor
inc
aas
mov
and
fmuls
mov
and
or
pusha
scas
fwait
push
outsl
mov
xchg
cltd
sbb
scas
mov
and
cmpsl
xchg
imull
mov
clc
adc
dec
in
repz
loope
cltd
pushf
push
iret
loop
rclb
shrd
pop
push
mov
stc
in
out
rorb
bound
addr16
in
repnz
fwait
addr16
std
mov
pop
scas
pop
mov
imul
xchg
in
mov
adc
mov
das
fwait
push
pop
bnd
fdivl
jge
mov
jne
and
icebp
sti
sub
fistpl
fdivrs
pop
aaa
xchg
mov
int3
lret
mov
mov
mov
add
cwtl
sub
pop
sub
test
fdivs
jp
lods
jge
jno
ja
fdiv
lahf
fldt
cmp
pop
dec
pop
movsl
mov
jg
test
adc
add
stos
inc
rcrb
xor
or
xchg
xor
mov
jns
push
sub
je
mov
sbb
pop
and
lods
les
hlt
hlt
divb
jmp
pop
out
mov
iret
addr16
push
aad
xchg
add
jbe
scas
leave
dec
xchg
enter
sahf
add
sbb
dec
aaa
xor
xor
in
in
sub
push
sbb
clc
mov
fsub
mov
jo
test
cmp
sbbb
push
mov
iret
xchg
push
adc
repnz
dec
mov
imul
and
dec
cld
cmp
or
mov
jecxz
stos
clc
sub
or
out
test
xchg
sbb
out
inc
xchg
lcall
mov
mov
sub
imul
loope
loop
repnz
ljmp
xchg
push
daa
inc
xor
rorl
int
push
pop
sub
imulb
aas
adc
push
xchg
outsl
test
xchg
push
insl
dec
and
lock
jbe
add
enter
dec
and
sub
push
mov
add
pop
es
xchg
xor
std
cs
dec
in
mov
or
out
adc
fimuls
fdivl
inc
push
dec
lcall
mov
test
mov
out
sub
or
push
out
sbbb
xor
fbstp
inc
js
inc
ret
mov
sbb
pusha
test
mov
cmpsl
mov
andl
sbbb
inc
js
jo
je
xchg
pop
add
adc
dec
stos
cwtl
sub
sbb
insl
add
repnz
fistpll
sahf
inc
jg
and
lods
loope
cmp
stc
add
mov
mov
ret
jnp
imul
sbb
fists
nop
lds
negb
push
call
xchg
ror
js
inc
je
ror
jae
mov
out
ficomps
nop
inc
sti
stos
push
jge
pop
sub
pop
pop
daa
fldcw
rcl
call
xchg
mov
test
fsubrp
lcall
iret
jecxz
pop
sub
in
push
fadd
js
lods
push
leave
add
mov
insl
and
cli
lret
test
cmpsb
or
popf
push
push
pop
lds
cli
jo
add
and
push
clc
lret
aad
cmpsl
fbstp
add
shll
les
in
outsl
jmp
fsub
cmc
mov
sti
push
xchg
jno
jmp
lods
xchg
aas
repnz
jg
push
sub
or
in
sub
xchg
inc
sbb
jge
mov
fimuls
lods
lods
xlat
xchg
popf
xchg
lods
sahf
ret
iret
cmc
lcall
mov
mov
out
push
xchg
icebp
xchg
add
sbb
jo
pusha
je
popa
and
daa
and
xchg
xlat
cmp
push
xchg
fldl
cmc
inc
out
sub
ret
and
js
adc
adcb
and
lcall
aam
sti
jne
ficomps
mov
xor
mov
sbb
imul
nop
scas
icebp
dec
dec
cmpl
add
jbe
adc
pop
push
and
fcomip
xlat
insb
push
sbb
xchg
or
xchg
sti
outsl
mov
cmp
add
stos
jg
xchg
dec
popf
add
xchg
mov
mov
sti
out
fadds
inc
or
sub
adc
fwait
aam
nop
mov
xor
sahf
ficoms
cmpsl
or
mov
ljmp
dec
mov
jnp
popa
xlat
popa
fstpt
int3
cwtl
pop
lea
ja
jbe
add
outsb
jecxz
jae
mov
test
xor
add
das
push
mov
cmp
mov
mov
adc
sub
sub
stos
xor
loop
mov
mov
jp
push
mov
pop
push
mov
cmp
in
mov
ja
add
and
sbbb
mov
inc
adc
arpl
addl
dec
insl
push
insl
cmp
push
scas
push
int3
inc
or
add
cwtl
inc
adc
cltd
pop
push
repnz
fimuls
lds
lea
popa
scas
cmpsl
jl
push
mov
dec
xchg
sub
mov
fcoms
xchg
pop
inc
xlat
bound
sbb
rcl
outsl
enter
in
inc
imul
leave
add
mov
std
pop
mov
filds
aaa
dec
mov
repnz
outsl
xchg
pop
add
xor
push
dec
movsl
icebp
out
jg
adc
mov
popa
and
int3
xor
jae
mov
jb
and
mov
popa
mov
scas
das
movsl
repz
mov
sahf
sbb
rcrl
pusha
fmull
lret
sub
jp
ja
jmp
xchg
in
int3
stos
inc
cmp
movsl
pusha
inc
nop
data16
push
scas
inc
push
cltd
cli
inc
cmp
sbbb
or
xor
jle
push
pop
lret
mov
lcall
sarl
cmp
ret
shlb
leave
jl
mov
orl
add
sub
je
push
inc
shlb
sub
mov
mov
adc
sbb
aas
sbb
adc
pop
dec
push
push
lea
xchg
lret
push
mov
sbb
fisttpll
mov
ljmp
aam
mov
pop
or
add
fwait
out
sbb
xor
out
stos
je
pop
jbe
mov
je
jae
xor
loope
rorl
xchg
add
xlat
adc
outsb
in
outsb
fs
lock
mov
fsubrl
cwtl
dec
jbe
and
adc
sahf
movsb
xchg
aad
xchg
loop
iret
js
pop
cs
push
sbb
data16
jnp
out
shl
push
push
jmp
mov
mov
jno
fs
mov
jnp
nop
repnz
data16
jl
or
dec
mov
xchg
jg
rol
imul
mov
jns
outsl
and
mov
xchg
pop
imul
cmp
jge
ss
xchg
popa
xor
mov
push
add
mov
mov
imul
push
ret
shlb
add
push
or
pop
adc
stc
cmpsb
cmpsb
mov
out
je
adc
test
pop
mov
incb
jmp
inc
icebp
and
cmp
stos
jp
mov
aad
inc
ret
adc
ja
lcall
aaa
lock
push
add
insb
add
mov
rcr
stos
sbb
jmp
test
push
mov
js
stc
jne
mov
into
inc
sub
sub
push
les
push
push
jmp
cmpsl
fs
iret
mov
xor
or
cli
mov
or
in
inc
cli
fchs
rclb
movsl
loopne
xor
mov
sbb
push
popa
inc
imul
push
fs
test
movsl
rol
pop
sub
mov
das
js
mov
cmp
mov
popa
inc
mov
lock
iret
push
inc
and
xchg
arpl
mov
xchg
mov
sbb
add
mov
inc
push
test
fwait
scas
or
and
lods
push
cwtl
pop
xchg
cmpsl
out
rclb
sub
fdivrs
in
addr16
arpl
bound
ds
mov
sbb
lea
lahf
xchg
jne
sub
out
xorb
cmp
inc
cmpl
shr
jp
xor
adc
in
xor
and
xchg
das
in
dec
pushf
xor
mov
out
in
and
jmp
ret
inc
aas
jmp
mov
lcall
xchg
cmp
sub
pop
adc
pushf
mov
imul
sub
in
inc
mov
stos
loopne
fists
inc
mov
push
fwait
cmp
stos
mov
pop
jb
xchg
push
push
loope
repnz
fcmovbe
and
cmpsl
test
shl
ja
mov
ja
sub
inc
xlat
mov
jnp
pop
jnp
sbb
or
cmp
adc
repz
jne
arpl
out
jecxz
outsl
xor
arpl
arpl
xchg
sbb
sub
sbb
imul
push
mov
sahf
incl
pop
jge
or
call
or
pushf
mov
sbb
inc
lea
mov
in
push
jne
outsb
jp
mull
pushf
in
ljmp
clc
cmp
mov
or
mov
stc
loop
lahf
rcr
add
sbb
daa
mov
movsb
xchg
enter
dec
ret
pop
out
iret
fcomi
xor
mov
outsb
push
loopne
pop
test
xor
nop
dec
pop
mov
pop
test
in
loop
inc
sahf
mov
push
pop
push
ret
push
xchg
call
inc
add
adc
adc
fbld
dec
lods
je
jne
repz
xchg
lret
das
in
fmull
mov
fisubl
adc
cltd
fadds
sbb
push
bound
into
cmp
mov
aad
inc
xor
jbe
jno
jae
dec
push
outsl
stos
arpl
and
lret
fsubrl
push
outsl
pop
pushf
ret
pushf
adc
jb
pusha
xchg
fcoms
xchg
lret
imul
or
ficomps
xchg
sub
lds
jp
jne
les
das
add
jne
jnp
inc
sub
push
pop
push
mov
testl
cs
insb
insl
mov
movsl
mov
or
js
sub
sub
dec
out
jns
cmpsl
cmpb
std
out
cmc
lret
movb
jecxz
xchg
xchg
jbe
dec
cltd
repz
data16
add
lret
pop
adc
mov
inc
pop
sub
popl
sub
sbb
adc
xchg
popa
mov
xor
enter
mov
mov
mov
stos
outsl
decl
outsb
jp
test
bound
shlb
jp
repnz
fwait
inc
sub
addr16
pop
imul
out
sbb
ret
cmc
in
lods
push
mov
xchg
lods
fsub
test
lahf
stc
xor
or
addr16
sub
rol
xchg
movsl
fcoml
jne
ret
inc
cwtl
pop
push
cmpsb
push
dec
fcmovu
mulb
jne
dec
mov
test
test
sbb
or
icebp
pop
xor
clc
int
adc
daa
xchg
or
xor
aaa
stc
fidivl
lret
leave
shr
arpl
int
pusha
lods
arpl
or
lret
adc
cmc
pop
pop
mov
push
jecxz
fnstenv
push
cmpsb
pop
rep
cmc
xchg
sub
mov
xchg
pop
fdivs
rorb
inc
icebp
sarb
push
idivl
ret
in
push
mov
or
es
sbb
loope
push
fsubrl
in
adc
or
add
xor
mov
movsl
outsl
jmp
mov
cmp
dec
xchg
movsl
in
ret
xor
cmpps
mov
dec
pop
aas
cmp
aad
sub
outsb
inc
fsubrl
sbb
jmp
and
pusha
xlat
add
xchg
sbb
shll
rclb
mov
fidivrs
pop
push
fcmovb
or
cli
in
cmp
pop
cld
je
ret
call
cmp
fld
les
cmpl
in
addr16
cmp
xor
inc
adc
jno
or
clc
sbb
add
sbb
mov
dec
lcall
dec
add
cmp
or
gs
or
jns
sub
mov
orb
idivb
cwtl
fcmovnb
addr16
cmp
sub
mov
sbb
mov
inc
push
cwtl
pop
int
inc
rclb
mov
xor
mov
daa
xchg
cmpl
inc
and
jge
cmc
fstl
lcall
movsl
sub
call
bound
pop
pop
outsl
mov
lods
out
jno
xchg
sbb
es
or
imul
pop
jae
mov
roll
jno
or
lret
mov
daa
popa
mov
scas
out
adc
mov
sbb
lods
mov
daa
pop
fcoms
xorl
nop
xor
push
enter
inc
or
lcall
rorl
or
xor
cltd
sbb
mov
mov
adc
mov
mov
lock
nop
sub
scas
mov
les
pop
jo
imul
mov
push
mov
inc
xor
xchg
push
mov
dec
cmpsl
lock
cli
push
or
cmp
decl
mov
ret
nop
and
data16
mov
jbe
in
repz
je
inc
lret
fimuls
loop
lds
cld
roll
scas
movsb
sbb
icebp
daa
movsl
lods
enter
insb
lahf
cmpsl
xchg
das
fsubp
jecxz
lods
popf
ss
daa
add
xor
sti
xlat
mov
mov
adc
dec
subb
in
in
cwtl
adc
ss
jg
mov
movsb
xor
out
xor
mov
mov
test
fs
dec
jb
iret
and
sub
sbb
jno
mov
mov
sub
mov
pop
add
push
xor
nop
loope
ja
jae
inc
dec
out
cmpsb
lcall
nop
or
pop
jl
jbe
lds
aaa
out
aas
xor
in
and
sahf
andb
shll
mov
inc
aaa
aam
inc
stos
push
cli
inc
jb
mov
mov
fwait
movsl
jnp
jnp
mov
jnp
loope
cltd
fcomps
inc
leave
xchg
mov
jbe
movsb
cmp
xchg
cltd
inc
push
xlat
dec
jecxz
lods
pop
ret
sbb
popf
lahf
test
int
iret
cmpsl
and
or
add
lock
or
pop
mov
fcomip
lcall
fxch
xchg
in
cmpsb
stos
jge
shll
pop
repnz
adc
or
pop
mov
lods
push
jnp
insb
test
and
cltd
xor
popa
fadds
mov
iret
push
push
jge
fldl
mov
inc
sahf
push
pop
add
outsb
inc
test
pop
push
cmp
push
xchg
mov
ss
stos
sbb
jp
fnsave
cmp
inc
sbb
loop
dec
cs
lods
stos
push
jge
pop
fwait
mov
ret
loopne
mov
mov
pusha
inc
mov
push
jne
es
push
nop
pop
sub
mov
push
pop
ret
inc
popa
jno
jmp
ljmp
les
xchg
aad
je
mov
js
movsb
lea
insb
push
aam
ret
cmc
xor
int3
or
inc
pop
sbb
fbld
ds
out
xor
fidivrl
or
cmp
xchg
cmp
push
mov
jg
sub
push
std
hlt
add
mov
mov
xchg
icebp
pushf
mov
ror
push
inc
and
ret
loopne
cli
dec
xor
lds
and
or
and
rorb
add
outsl
out
shrb
and
fadd
fidivrl
xchg
sbb
ret
data16
cmp
fnstcw
cmc
pop
mov
lret
scas
mov
in
test
adc
cmp
ja
cmp
sbb
push
insl
or
add
dec
xchg
loope
push
mov
roll
enter
and
aaa
and
cmc
in
xchg
sti
push
xchg
sarb
pop
icebp
jns
aam
scas
ljmp
int3
mov
mov
mov
ficompl
jmp
adc
sbb
das
mov
scas
push
or
xchg
es
push
mov
dec
iret
sub
cld
pushf
push
push
ret
sbb
jae
dec
and
cmp
or
repnz
or
rcll
pop
ss
loopne
cmpsl
aaa
xchg
stos
fcompl
popf
xor
pop
or
xchg
lahf
lret
xchg
stos
adc
mov
adc
push
mov
pop
pop
mov
cmpsb
sbb
sbb
xlat
aam
or
sub
cmp
pop
mov
or
out
mov
insl
cli
mov
push
insb
das
pop
and
mov
shr
xchg
iret
adc
ret
stos
dec
sbb
push
test
repnz
pop
hlt
lret
and
xor
xchg
cld
add
test
inc
push
adc
xchg
dec
lds
dec
andl
cltd
xor
lods
xlat
inc
jmp
mov
das
sti
fs
cmp
adc
out
enter
and
icebp
cmpsl
rorb
call
adc
cmp
shrb
pop
and
jl
cmpsl
lcall
iret
lods
in
jg
add
mov
test
mov
mov
data16
mov
jl
add
push
cmp
pop
xor
adc
loopne
addl
jp
aam
ja
xor
imul
in
sub
hlt
or
ljmp
out
ss
push
mov
nop
sub
xchg
jo
dec
sbb
imul
icebp
into
inc
dec
jl
loop
inc
lods
mov
mov
and
aaa
rorl
xchg
sub
ds
push
loop
push
rcll
shll
sbb
dec
xchg
in
push
or
pop
push
dec
pop
stc
aad
or
mov
js
jbe
in
push
mov
outsb
push
and
mov
or
sub
xchg
jmp
stc
xchg
inc
ror
ss
lret
sub
lods
inc
xchg
and
in
mov
movsl
jb
mov
inc
push
xor
cmp
lds
xor
add
add
lods
cld
call
fidivrl
jns
ss
in
outsb
mov
xchg
cmp
jp
aas
jo
mov
call
lock
dec
aad
cmpsb
sarb
ljmp
into
xchg
xor
mov
mov
sub
sub
push
mov
out
into
mov
mov
into
shll
popf
inc
sub
daa
dec
mov
mov
xor
mov
dec
and
scas
scas
or
pushl
inc
cmc
pushf
push
pop
or
xor
push
xchg
ss
es
mov
gs
inc
xchg
js
jmp
or
jns
inc
imul
dec
adc
xchg
xor
or
test
xchg
pop
jo
jp
xor
insl
lret
mov
in
and
cmp
mov
movsb
mov
enter
add
scas
lret
ror
scas
fwait
sbb
pop
pop
lock
in
insb
lahf
sub
mov
sub
mov
inc
pop
cmp
cmp
pop
je
or
dec
nop
mov
jo
sbb
out
or
push
jmp
xor
jge
xchg
pop
xchg
sub
push
bound
je
ja
add
mov
fistl
fldl
xor
mov
sbb
inc
sti
jge
mov
es
mov
sahf
jb
cmp
ds
loope
scas
mov
dec
and
adc
and
pop
mov
push
mov
add
pop
mov
ja
pushf
pop
mov
mov
mov
sti
out
lods
mov
cmp
ss
xchg
dec
cmc
decb
call
sub
fwait
inc
jecxz
mov
ror
int
mov
pop
jno
into
ret
sbb
inc
daa
rclb
xchg
mov
mov
pop
mov
fcom
pop
pop
cmp
jno
jmp
adc
insb
sti
sub
cmp
push
fisttpll
mov
aas
pop
push
lcall
inc
mov
jle
fwait
lea
adc
xchg
cmc
test
or
fldz
icebp
gs
xchg
sub
mov
pop
jbe
inc
jle
pushf
inc
xchg
leave
xchg
pop
mov
mov
ss
fldcw
dec
adc
jo
add
rcrb
mull
cli
aad
out
sbb
inc
jbe
jge
cld
mov
push
mov
repnz
fldt
pop
scas
mov
mov
scas
mov
sub
fwait
leave
aam
push
xchg
xchg
pop
xor
push
scas
push
add
mov
rol
jecxz
and
mov
inc
fs
lret
pusha
mov
test
mov
sbb
pop
sbb
test
arpl
shlb
ret
arpl
cltd
sarb
fucom
jmp
jo
push
mov
mov
lahf
and
bound
xchg
inc
add
push
adc
lock
das
mov
inc
add
jns
ret
sub
pop
push
add
rorb
cmpsb
cmp
repnz
adc
sarb
test
enter
fldenv
rolb
jmp
aaa
or
je
push
imulb
popa
cltd
movsl
or
iret
add
cmp
pop
rclb
stc
push
inc
loopne
pop
push
fwait
adc
jae
lods
leave
outsl
sub
sub
aam
sbb
lock
mov
rcll
and
push
cld
mov
loopne
pop
test
push
enter
push
xchg
les
lods
mov
dec
pop
dec
scas
inc
adc
lods
inc
sahf
out
lods
jmp
adc
int3
pop
xchg
icebp
leave
cmp
int3
pop
mov
push
gs
hlt
decl
pop
into
dec
sbb
inc
dec
into
daa
rcrb
ss
jns
or
adc
outsb
ds
outsb
push
int
pop
ljmp
inc
outsl
lea
and
inc
lret
or
add
orl
and
add
jle
cmp
xchg
pop
jp
jle
test
aas
clc
mov
pop
and
imul
daa
sub
dec
pop
das
cltd
jg
in
aaa
pop
sbb
sahf
rolb
or
cmpsw
mov
sub
mov
cmp
sub
mov
pop
xchg
mov
stc
outsb
pop
jecxz
orb
out
ret
mov
imul
cmp
clc
mov
jmp
rolb
lds
lret
mov
add
shlb
push
add
in
ss
inc
mov
cwtl
in
jbe
jge
andl
xlat
out
inc
pop
inc
inc
jl
pop
and
and
js
ja
cmp
fnstcw
jno
cmp
popf
popf
dec
pop
fcomip
push
mov
and
jmp
popf
push
ja
mov
adc
jl
sub
push
and
cli
mov
dec
cli
jge
fmulp
shr
sub
mov
fldl
loopne
orb
lahf
cmovp
push
in
mov
lcall
sti
inc
mov
insb
xor
mov
push
add
push
push
std
or
dec
add
fptan
sbb
lods
out
iret
pop
sbb
xchg
cmp
mov
insl
setae
pusha
cmp
mov
scas
cli
cmp
das
fwait
ljmp
sbb
lock
nop
fldl
sbb
mov
subl
dec
lds
inc
jmp
cmc
mov
xor
lods
loop
push
mov
push
xchg
sub
lret
or
push
rcrb
or
cmp
stos
jno
and
cli
sbb
mov
pop
je
mov
push
mov
aam
push
inc
les
fs
and
jge
clc
out
push
jb
stc
sahf
xor
jmp
push
inc
inc
mov
inc
test
mov
fwait
xor
imul
mov
loop
sahf
push
pop
jg
mov
cli
xchg
mov
xor
mov
mov
insl
sub
call
dec
sub
sub
pop
add
les
test
mov
adc
inc
cmc
les
add
cmp
add
fsub
jbe
out
nop
jl
or
inc
push
mov
add
fcmovu
dec
repz
popa
cmp
pop
push
or
push
add
cmp
fildl
loop
inc
dec
xchg
lea
xorb
mov
and
into
insl
jmp
mov
pop
mov
jmp
mov
sbb
sti
test
or
xor
sti
les
aaa
adc
push
inc
out
rolb
cmp
cmpsb
jmp
jo
data16
aam
mov
std
mov
push
shlb
push
into
rorb
mov
mov
or
push
dec
jo
leave
imul
roll
shl
sarl
ja
cmp
adc
inc
push
repz
xchg
in
xchg
dec
dec
popa
xchg
clc
cld
sbb
test
pop
inc
pop
in
adc
gs
jnp
enter
rcll
fcoml
and
scas
rcll
jbe
fmull
repnz
jne
and
xor
push
stos
cmp
or
ret
mov
push
xor
sbb
pop
bts
cs
pop
cmp
pop
rolb
fwait
add
inc
fisttpll
dec
adc
or
add
ja
inc
pop
insb
sub
fadds
inc
imul
dec
xor
es
pop
mov
cmp
mov
jge
inc
sbb
push
lds
jnp
sbb
movsl
jle
fcoms
mov
mov
fs
inc
rcll
imul
dec
movsb
and
flds
rcr
fstp
imul
mov
les
adc
xchg
cs
mov
mov
adc
cs
fildl
cmpsl
mov
or
hlt
sub
jne
jecxz
ficompl
sarb
insb
and
jbe
popa
clc
test
sub
popf
push
xchg
sub
aaa
xorb
icebp
cmpb
cmp
test
aad
outsl
jbe
nop
in
xchg
sbb
pop
movsl
push
mov
lea
ja
adc
and
fsubs
sub
cmp
jp
ret
aas
push
inc
fcoms
stos
test
pop
push
mov
push
out
mov
movsl
push
push
addb
pop
into
push
loop
push
iret
push
int3
fildll
cmp
dec
arpl
dec
popa
sti
jecxz
xor
std
negb
fnsave
call
jl
mov
mov
mov
push
andl
dec
jecxz
addb
push
aas
cwtl
scas
rcr
pop
pop
adc
std
adc
cltd
adc
outsb
pop
imul
repnz
lret
mov
test
pushf
lahf
mov
xor
mov
int3
gs
divb
push
test
xchg
jecxz
mov
pop
call
int3
arpl
jnp
movsb
xchg
gs
sbb
jb
and
rcr
push
inc
pop
sbb
xchg
in
iret
and
dec
popf
lret
popf
movsl
lret
sub
sub
cmp
fmuls
push
xor
adc
ret
dec
rcrl
push
mov
cwtl
inc
xor
pop
adc
ljmp
mov
inc
mov
cmpl
mov
cmc
sbb
out
loopne
mov
sahf
inc
mov
sbb
popf
mov
push
test
xchg
nop
nop
adc
or
sbb
scas
cmp
xchg
inc
or
pusha
cwtl
test
call
int
adc
jno
add
mov
fldl
pop
lcall
addr16
xchg
cltd
mov
pop
push
pop
mov
mov
jg
icebp
test
inc
int
std
negl
push
xchg
cmp
or
scas
ficoms
xor
inc
sbbl
loope
xchg
cmp
popa
outsl
shlb
xchg
mov
aam
cmp
test
xchg
mov
aam
xor
mov
mov
pop
mov
inc
cmp
ss
mov
fwait
rclb
incb
popa
shrl
in
jge
roll
inc
dec
xor
cmpb
cwtl
out
adc
adc
push
ljmp
bound
mov
xchg
sub
call
inc
lcall
leave
push
rolb
orl
mov
imul
lods
fiaddl
jle
mov
data16
cmp
sbb
loopne
push
pop
xchg
or
das
rolb
xor
arpl
push
sub
aas
mov
mov
and
mov
dec
es
stos
test
popf
lea
and
mov
lock
mov
in
ja
jbe
dec
mov
adc
sub
inc
mov
pop
pop
and
notb
movsb
mov
jbe
xchg
int
daa
fwait
lds
out
or
popa
outsb
sub
cmp
cmp
jne
icebp
test
leave
and
xchg
push
sbb
inc
fwait
js
daa
jno
jmp
mov
lahf
test
cmp
cmpsb
shl
mov
jo
cmp
and
xlat
int3
out
enter
paddusw
mov
insb
in
xchg
fists
lock
bnd
out
out
mov
inc
jecxz,pn
and
cmp
dec
fcomip
sbb
push
stos
xchg
add
push
add
mov
adc
insb
out
mov
daa
mov
inc
or
hlt
push
jle
mov
push
adc
repnz
and
cli
fnsave
sahf
std
jp
jae
jle
jbe
in
pop
cmp
cltd
lea
xchg
mov
mov
push
ljmp
popf
test
hlt
ds
shll
push
out
mov
fs
test
in
inc
fwait
mov
movsl
xor
int3
inc
jl
nop
sahf
push
clc
lods
mov
fimull
js
outsl
xchg
cmc
mov
or
mov
adc
lret
mov
add
divl
ror
cmpsb
and
jae
cmpsl
jbe
popf
mov
inc
xor
scas
ret
mov
pop
fnstcw
xor
push
mov
mov
enter
xor
jmp
xchg
adc
mov
inc
pop
jnp
and
jmp
in
push
std
xchg
pushf
mov
into
aaa
inc
in
hlt
adc
repz
mov
stc
and
fbld
or
js
inc
add
add
and
mov
sbb
mov
inc
popa
test
iret
add
arpl
popa
pop
faddl
xchg
xor
das
mov
dec
lods
popf
movsb
lock
inc
and
or
mov
mov
imul
dec
addb
stc
xor
or
nop
daa
outsl
imul
lret
int
std
sub
cld
jecxz
inc
sub
rcrb
sbb
push
std
inc
and
mov
mov
add
rcrb
cli
fcomps
fimuls
mov
mov
movsb
push
nop
outsb
cwtl
pop
lret
lcall
and
adc
or
jo
cmc
repnz
or
testb
loope
or
sbb
xchg
sub
jbe
dec
dec
mov
sarl
sbb
push
jp
fstl
dec
enter
jns
or
cli
dec
add
in
sbb
push
int3
push
in
jg
jp
fnsave
jl
outsb
pop
xchg
mov
jle
and
es
aam
mov
fdivrl
mov
jmp
sub
lods
lahf
pop
xchg
mov
mov
sub
and
ret
loopne
sub
test
add
pusha
mov
mov
dec
cmpsl
imul
loopne
movsl
and
mov
lods
adc
mov
adc
pusha
mov
adc
xchg
push
and
jg
xchg
ja
insb
in
sub
rcll
das
adc
xchg
mov
sub
mov
stos
leave
mov
out
jnp
and
mov
and
push
aad
push
loope
fsubr
cmpsl
cmp
jo
mov
loop
ror
cmp
popa
outsb
push
test
cs
inc
sti
shlb
stos
mov
insl
cwtl
lods
sbb
dec
cmp
xor
cmpl
adc
add
push
das
or
xchg
xchg
ja
cmp
test
and
ja
inc
loopne
sub
xor
xchg
jne
mov
mov
arpl
dec
insl
sub
mov
xor
cmovs
mov
xchg
sbb
adc
sahf
inc
dec
in
cmp
adc
xor
push
lea
pushf
fmuls
xchg
pop
mov
test
pop
mov
aaa
mov
repz
xor
fiadds
mov
test
sub
mov
push
arpl
test
out
gs
std
cltd
jno
jg
xchg
push
movb
cmp
int3
fistpl
or
cmc
and
and
clc
jo
pushf
push
xchg
sti
mov
filds
lods
test
ss
hlt
sub
push
push
add
pop
ret
or
push
pop
das
lea
or
mov
divl
scas
cmp
add
mov
push
outsl
xor
mov
cmp
jmp
sub
push
push
pop
xchg
movsb
stos
xor
mov
cmp
cltd
cltd
adc
dec
test
sti
cmc
push
cmpsl
data16
arpl
mov
bound
push
cmc
inc
movsb
push
gs
mov
fnsave
sub
das
and
mov
sbb
sub
mov
mov
rorb
cwtl
rcrw
fidivrl
push
mov
mov
movsl
dec
jp
cmpsl
xor
xchg
xor
shl
mov
push
mov
shrb
inc
loopne
loope
scas
cmpsb
xchg
test
inc
cmp
fisubl
cmp
and
addr16
add
jno
divb
xor
dec
jp
mov
aaa
das
arpl
inc
addr16
daa
lcall
outsl
pop
mov
shlb
je
pop
int
lds
inc
xchg
pop
push
sub
testb
or
cmpsb
cmp
test
add
out
mov
mov
pushf
ret
pop
mov
js
and
lahf
loope
mov
cmp
xchg
loopne
test
frstor
mulb
or
dec
or
les
mov
mov
or
ljmp
push
push
test
mov
cwtl
inc
jns
adc
pop
sbb
add
call
xor
lock
inc
xchg
stos
pop
mov
xor
pusha
js
add
dec
jecxz
hlt
push
dec
mov
xchg
pop
jg
aas
fdivl
xchg
gs
pop
jecxz
test
push
and
mov
mov
in
or
and
sub
jl
aaa
enter
xchg
adc
gs
mov
jmp
popa
and
mov
stos
pusha
mov
push
xchg
call
jbe
jnp
in
push
pusha
jbe
cmc
mov
sbb
mov
dec
stos
push
or
add
sub
js
sbb
repnz
inc
push
out
mov
sbb
fcoms
mov
xchg
iret
mov
add
and
dec
adc
sub
and
dec
popa
neg
rcl
das
dec
sub
mov
jns
mov
xchg
sti
fistl
cmpsb
or
cld
pushf
outsb
sub
sub
loope
pop
push
mov
and
rol
push
leave
mov
shrb
mov
mov
lret
cmp
sub
xchg
repnz
addr16
in
not
adc
and
in
movsl
out
sub
test
mov
out
mov
add
jle
and
xlat
daa
sub
inc
mov
jl
dec
sbb
mov
inc
mov
xor
adc
dec
mov
mov
lea
pop
cwtl
and
insb
push
test
cli
and
arpl
inc
scas
fildll
and
sbb
dec
jmp
loopne
jl
scas
popa
mov
sbb
mov
arpl
sbb
mov
push
test
push
subb
pushf
mov
xchg
bound
push
mov
dec
dec
xlat
jmp
pop
pop
les
push
mulb
pop
in
shl
dec
fwait
and
lock
hlt
aas
push
mov
stos
inc
adc
xor
clc
xchg
inc
fistl
pop
mov
roll
xchg
iret
and
fstpt
mulb
fsubl
icebp
movsb
dec
scas
mov
xor
lods
sub
jae
sbb
jo
cmc
mov
or
fbld
jecxz
jg
iret
popa
std
aas
mov
add
sbb
orb
aam
orb
fwait
int
or
outsl
pop
or
outsl
dec
pop
mov
jmp
mov
push
insb
mov
mov
push
enter
test
pushf
sub
mov
scas
mov
add
fcmovu
ja
sbb
and
aam
sub
sahf
andl
popa
cmp
and
movsl
adc
pop
std
jno
pushf
fsts
inc
shrb
pop
or
mov
fdiv
cwtl
dec
imul
cmp
leave
mov
gs
add
xchg
sub
or
in
and
je
sub
sub
mov
mov
fldcw
fidivl
mov
sub
xchg
addr16
or
push
push
push
xor
shlb
jge
rcll
jp
out
iret
loop
mov
jecxz
pop
iret
inc
sarl
mov
add
sub
sarl
fs
fwait
sub
mov
rcll
adc
mov
and
fwait
lret
outsb
into
pop
sbb
scas
fwait
aas
sahf
gs
add
adc
or
mov
or
seto
inc
and
ds
pop
rcl
mov
rolb
adc
pop
mov
push
pop
inc
dec
mov
mov
dec
arpl
cwtl
call
dec
jns
out
cmp
pop
dec
int
dec
pushf
nop
dec
push
jae
vmulpd
cmp
int
xor
rcrl
imul
popa
loopne
ss
in
scas
xor
xor
cwtl
jbe
dec
push
sub
js
xchg
jbe
sub
js
pop
sub
mov
jae
jns
clc
jmp
sub
xchg
inc
jne
mov
aaa
lock
push
lcall
in
push
jae
lock
outsl
daa
jle
sbb
scas
das
out
cmpsb
stos
js
mov
addl
jno
mov
push
xchg
and
imul
sub
inc
sub
adc
sbb
cmpl
xor
cmpsl
xor
mov
cmpsl
mov
or
call
fisttpll
push
or
neg
out
icebp
xchg
sub
mov
adc
loop
rorb
testl
jp
jl
cmpsb
aad
dec
cmp
repz
js
shll
dec
pop
jnp
ja
in
cmpsl
frstor
jmp
xor
dec
and
iret
pop
in
fcoms
dec
insl
out
aaa
data16
out
insb
dec
mov
add
pop
jnp
xor
mov
lahf
inc
sub
jnp
mov
out
cltd
sti
ja
lret
ljmp
into
lret
xchg
dec
mov
inc
icebp
stos
in
push
jne
stos
mov
sub
mov
dec
sbb
cmp
lods
dec
insb
aaa
dec
push
push
xor
clc
and
in
add
lods
lods
mov
cmc
mov
xchg
in
rorb
jg
mov
test
mov
xor
adc
cmc
mov
lahf
sub
xlat
inc
pop
push
in
jp
test
xor
into
pop
push
fiadds
inc
mov
adcb
adc
out
nop
mov
roll
push
pusha
mov
mov
mov
int3
mov
xchg
pop
and
popf
loope
shlb
push
mov
xor
in
xchg
popf
and
pop
mov
shrl
mov
and
mov
fimuls
mov
xchg
stc
gs
dec
movswl
or
in
mov
mov
lret
mov
pop
adc
sub
add
mov
mov
int3
cs
ret
into
bound
or
push
sub
and
xchg
mov
sbb
cltd
cmp
dec
out
and
jae
shlb
inc
in
mov
loop
insb
sbb
fucompp
incl
inc
aam
sbb
sbb
and
hlt
mov
dec
frstpm(287
enter
rolb
js
mov
xlat
pop
mov
dec
push
imul
scas
popa
fsub
mov
xor
xchg
mov
mov
push
lea
call
or
cmp
and
lods
out
pop
sub
pop
xchg
movlps
inc
and
lods
push
adc
nop
jne
cmp
data16
outsb
lahf
ss
jecxz,pn
xlat
mov
jge
xor
jns
sbb
mov
xchg
inc
cmp
pcmpeqw
add
or
in
xchg
dec
in
jg
int
inc
jns
jno
dec
rorl
xchg
push
jmp
xor
mov
pop
jge
xor
pop
sbb
mov
push
or
sub
add
push
out
jns
lds
shlb
or
xor
cmp
xchg
movlps
out
mov
hlt
fs
in
subl
out
mov
push
or
dec
scas
dec
sahf
inc
stos
pop
and
sahf
xlat
xchg
fstpl
xchg
cmp
jbe
addr16
int3
inc
xor
mov
orb
lds
mov
andb
pop
sbb
add
fnstenv
jl
in
pop
lret
sbb
add
das
mov
test
jecxz
xlat
xchg
rclb
mov
push
sub
inc
scas
into
into
jp
int3
sbb
lahf
insl
adc
mov
mov
fwait
dec
xlat
pop
mov
jae
aam
fldcw
test
inc
je
xor
xlat
mov
fwait
sbb
mov
inc
mov
mov
mov
xor
or
sub
sbb
dec
mov
out
std
fcmovnu
jno
jge
xor
xchg
lock
xor
pusha
scas
nop
push
jae
testw
test
push
sbb
fisttps
adc
xchg
push
in
dec
decb
mov
pop
int
and
sbb
jge
mov
push
pop
mov
xor
cmp
fwait
das
sbb
mov
lods
cmpsl
mov
into
and
repz
add
sub
adc
mov
mov
mov
iret
mov
dec
push
lret
call
lock
push
push
sahf
call
scas
jns
sub
out
xchg
data16
cmpsl
lds
jno
mov
mov
push
jg
sub
push
pop
push
insb
jp
and
cltd
mov
fwait
add
pop
out
dec
xor
inc
mov
das
jmp
sahf
or
les
pusha
pop
inc
cmp
inc
mov
or
jo
loopne
ljmp
jmp
and
sub
ljmp
mov
mov
jge
push
loop
insl
cmpsb
mov
push
and
xchg
dec
cmp
jp
andl
nop
shlb
dec
and
ffree
mov
scas
ret
cli
stos
fstpt
in
xlat
fcomi
outsl
sti
push
push
or
dec
clc
insb
icebp
out
mov
jbe
push
sar
add
adc
xor
pop
les
adc
xchg
sbbl
fisubrs
jns
lock
cmpsl
jae
clc
out
pop
add
lock
sbb
and
mov
adc
cmp
ljmp
and
sub
pop
sti
push
xchg
loopne
push
icebp
in
addl
xchg
insl
or
in
sar
adc
jl
mov
cmp
inc
cmp
leave
mov
mov
add
cmc
fbld
or
xor
sbb
push
xchg
cwtl
mov
dec
ja
jo
sub
daa
adc
sub
mov
push
jg
xorb
bnd
loopne,pt
push
jge
fsubr
out
or
fwait
jg
dec
fstpl
jmp
das
inc
cld
xor
leave
xchg
gs
mov
mov
or
add
push
adcb
sbb
inc
bound
push
and
fs
clc
cwtl
pusha
sbb
xor
add
jbe
inc
fs
adc
lea
dec
subb
lods
mov
hlt
paddsb
stos
push
mov
xor
scas
add
into
mov
adc
sub
inc
mov
push
and
ja
pop
leave
jbe
mov
lret
mov
pop
inc
inc
xor
xor
popf
cmp
cmpsl
and
mov
mov
adc
push
jbe
cld
pusha
rcr
mov
loop
sub
xor
xchg
mov
fstpt
or
sbb
sub
imul
dec
jecxz
sub
dec
push
push
push
decl
out
jns
mov
pusha
add
les
gs
daa
mov
or
jmp
cmpsl
ss
ja
fdivs
cmp
sarl
popa
popf
rcr
pushf
incb
insl
ret
cli
stos
add
into
in
fnstsw
adc
dec
outsl
cmpsl
jl
pop
push
xchg
jl
popf
sarl
or
add
ret
call
sbb
jb
pop
insb
into
test
rcll
cmp
jg
stc
and
out
outsb
js
vpunpckhwd
sub
bound
and
sbb
call
and
int3
and
cmpsb
add
imull
jno
ljmp
push
leave
pop
sbb
inc
cmc
loope
sbb
mov
jnp
push
sbb
xlat
jg
xor
movsl
sub
insl
push
mov
loope
push
mov
or
lret
sbb
fcoml
call
aaa
rorb
push
push
daa
push
pop
cmp
loope
roll
repnz
sub
mov
shlb
inc
jecxz
fidivrl
jecxz
movsl
shl
outsl
add
cmp
lods
sub
push
mov
fwait
mov
mov
sbb
push
xchg
rcrb
mov
iret
out
dec
imul
inc
sbb
push
and
cmp
popw
cld
mov
jge
add
and
out
pusha
push
bound
pop
xor
loope
xchg
add
jmp
push
mov
pop
sahf
xchg
dec
pop
nop
aam
rcr
ja
nop
jecxz
sub
insl
aam
arpl
lcall
pop
sahf
inc
dec
xor
push
fdivl
into
jle
and
dec
xor
insl
mov
jns
or
movsb
lret
xchg
js
push
or
into
mov
int
xchg
leave
mov
xchg
iret
jmp
pop
arpl
mov
sbb
fstp
adc
subl
inc
mov
out
or
adc
arpl
sbb
movsl
push
mov
jno
pop
loope
insb
int3
movsl
sbb
push
mov
cli
outsl
ljmp
xchg
add
mov
mov
xor
test
mov
loop
mov
jns
jb
icebp
xor
dec
jo
aad
test
les
push
int
daa
ja
inc
xchg
cld
and
xchg
std
adc
jnp
lcall
jae
add
and
loope
adc
movsl
lcall
orl
mov
xor
cwtl
out
mov
in
lret
sbb
xor
shll
cmpb
push
andb
xor
cmpsb
inc
shll
xchg
and
and
dec
imul
scas
cmpsb
repz
cmp
bound
sbb
daa
sbb
mov
sub
mov
push
xchg
pop
es
ret
fildl
push
insl
mov
imul
divl
mov
xlat
scas
scas
call
cmp
imul
shlb
js
call
stos
pop
jno
jmp
inc
and
dec
sbb
jmp
push
mov
jp
call
repnz
adc
xchg
push
in
adc
and
jecxz
stc
cld
push
inc
xor
js
inc
push
inc
xor
lods
cmc
scas
sbbb
jmp
test
and
out
jmp
mov
mov
push
add
orb
mov
xchg
and
andl
xchg
push
xor
int
stc
pop
add
and
adc
pusha
jp
arpl
outsl
xor
sbb
and
addr16
pop
je
iret
and
dec
out
div
xchg
mov
mov
jno
or
iret
stos
jae
cwtl
in
and
lea
enter
sub
in
sti
pusha
push
cmp
xor
and
pop
cmpl
push
pushf
or
clc
ja
jne
sti
add
xchg
lahf
inc
pop
mov
stos
xor
into
aas
dec
cmp
sbb
push
inc
sbb
sbb
xor
push
aas
into
out
orb
xor
dec
pop
shlb
scas
mov
cmp
loopne
jnp
pop
mov
cmpsb
push
xchg
test
mov
rol
lods
cmp
push
xchg
push
shlb
jmp
inc
xchg
jle
lea
dec
aaa
xchg
adc
pop
daa
test
jl
leave
addr16
or
dec
or
mov
push
mov
fiaddl
test
add
jbe
xchg
adc
sbb
fwait
sub
push
and
test
xchg
call
sbb
sub
sbb
cwtl
int
or
cmp
xchg
out
push
std
shll
lock
stos
bound
sbb
or
xchg
jae
inc
inc
aas
imul
sbb
jg
cmp
or
jp
inc
dec
dec
aas
dec
mov
xor
pop
sub
mov
jb
stos
mov
data16
mulb
das
xor
or
or
dec
mov
fidivrs
xchg
out
iret
adc
jb
mov
jecxz,pn
mov
pop
jae
xor
aas
push
cld
push
or
pushf
cmc
scas
inc
sbb
addr16
out
movsb
mov
mov
int3
jno
gs
out
adc
dec
pop
cvtps2pi
pextrw
jno
test
pop
lds
inc
adc
mov
sti
xchg
imul
ds
mov
mov
cli
imul
mov
inc
mov
cld
call
xrelease
shl
popa
mov
mov
rclb
inc
dec
out
pop
shlb
pusha
mov
xor
shll
push
dec
mov
inc
popf
sahf
or
in
jne
std
hlt
mov
pop
pop
xchg
sbb
adc
or
es
in
jo
aaa
and
inc
idivl
shlb
ja
dec
out
cld
jo
aam
mov
test
loop
xor
and
dec
jno
jae
or
push
mov
and
push
int
ret
sbb
cmp
cmc
ja
addr16
inc
mov
movsb
adc
fistps
sbb
subb
fdivrs
mov
adc
out
xchg
pop
mov
mov
test
dec
repz
in
mov
and
inc
sarl
iret
dec
std
outsb
dec
mov
sbb
xor
rolb
mov
push
insl
test
mov
adc
fisubl
and
inc
inc
xchg
lea
les
or
arpl
aas
cltd
xor
cmp
fldenv
imul
lods
mov
aad
ljmp
dec
xor
ja
mov
add
ret
rolb
xchg
in
cmp
test
lahf
mov
in
in
mov
dec
adc
shl
sbb
dec
mov
add
adc
ret
mov
mov
adc
pop
dec
sbb
sti
cmpsl
and
jg
and
add
scas
fistpl
inc
xchg
stos
mov
movsb
or
nop
add
in
fistps
jns
shrb
insl
mov
mov
ret
into
add
sub
push
jle
pop
andb
pop
and
scas
xor
pop
arpl
pop
jmp
out
lock
dec
and
jge
jl
aaa
loopne
lods
imul
mov
adc
push
ja
int
shlb
je
sub
cmp
adcl
das
sub
push
flds
pushf
call
daa
stc
jmp
addl
mov
fisubl
or
mov
adc
lock
sub
rorb
inc
fstl
roll
sbb
cmp
push
mov
nop
push
fistps
adc
rorb
daa
faddl
rcl
ss
fisubrl
jp
add
mov
shr
mov
cmc
xor
test
cmp
aam
cli
push
xor
shrl
add
stos
mov
xchg
mov
loop
mov
fistpll
mov
sbb
mov
inc
addr16
nop
xacquire
jp
sbb
scas
fstl
jnp
push
shll
inc
arpl
mov
aaa
cmpb
mov
jns
fadd
dec
aam
das
inc
inc
lds
xor
pop
insl
repnz
xchg
in
leave
insb
fsubl
stos
in
pushf
mov
mov
loop
jmp
sbb
jle
mov
subb
push
mov
mov
jp
xchg
outsl
mov
das
pop
cmpsl
cmp
xorl
stc
or
int
call
movsb
pop
sub
insl
mov
xor
sbb
mov
imul
addl
xor
add
sti
cmp
mov
in
pusha
lret
in
addr16
sub
call
pop
fildll
or
popa
mov
lret
inc
push
ja
inc
push
inc
pop
push
pop
mov
cld
loopne
sub
pop
shrb
aas
push
ret
pop
or
xchg
push
cmpsl
mov
sbb
cmc
iret
xlat
and
sbb
leave
mov
sarl
dec
iret
std
out
vaddsubpd
shl
pop
jnp
push
mov
lock
rcr
lods
sbb
movb
mov
cmp
mov
test
xchg
mov
outsl
enter
out
stos
shrb
mov
dec
outsl
push
mov
mov
cmp
sbb
dec
mov
fdivrp
inc
int3
xchg
pusha
xchg
add
scas
loopne
loopne
jno
xchg
icebp
inc
jge
mov
mov
stos
push
movsl
push
cmp
xchg
xor
aad
les
test
in
pop
lret
jecxz
jl
cmp
and
mov
push
cmp
inc
xchg
or
aad
mov
cmp
pop
push
int3
imul
dec
sbb
roll
push
or
js
clc
stc
mov
fcoml
in
aaa
and
and
adc
pop
jnp
pushf
call
jle
adc
cmp
stc
xchg
push
jp
lods
mov
cmp
pop
stc
aam
leave
xchg
mov
xchg
adc
jno
sti
pop
cmp
aam
and
cwtl
adc
push
addr16
loopne
fidivl
push
hlt
and
nop
pop
mov
add
cld
ret
mov
dec
lock
inc
cmpsl
or
push
in
lods
aas
lret
fstl
add
aam
xlat
jge
adc
or
and
dec
push
mov
cmp
or
ja
movsl
mov
inc
jecxz
push
adc
cli
cwtl
das
enter
aaa
mov
and
loope
rcrl
mov
out
pushf
gs
pushf
adcl
mov
add
or
and
add
dec
rol
cld
jo
test
fnstsw
pusha
xchg
mov
mov
jns
and
andl
mov
mov
enter
xchg
lock
sub
hlt
push
iret
xor
dec
sub
xchg
stc
sub
adc
out
pushf
or
add
mov
push
scas
mov
imul
cli
negl
hlt
lock
shll
adc
jno
xor
and
stc
jae
pushf
xor
jge
mov
sbb
cmpl
lahf
push
push
xchg
pop
cmp
lahf
je
clc
pop
push
push
and
mov
stos
sub
pushf
push
adc
inc
xor
cmp
nop
pushf
lds
dec
loopne
mov
mov
push
xchg
stos
cmpsl
pop
sar
ss
sbb
fwait
insl
and
mov
sub
dec
sub
aam
in
and
cs
push
cmp
pop
popf
pop
sarl
insb
ret
enter
cmpl
adc
sub
sbb
mul
pushf
in
xchg
popa
loop
sub
mov
dec
sub
loopne
inc
ljmp
pop
add
loope
aaa
mov
and
inc
psllq
mov
je
inc
sub
push
or
lods
testb
lret
inc
cmp
or
pop
out
push
cmp
pusha
or
andl
or
and
imul
neg
shlb
in
test
xchg
jl
fisttps
or
adc
test
mov
shlb
mov
inc
ds
ss
mov
imul
cmp
clc
cld
pause
push
gs
jle
ss
xchg
rcrl
xor
cmp
xchg
shlb
xor
sub
sbb
sbb
mov
mov
cld
dec
div
jl
xor
mov
pushl
jnp
mov
fmuls
push
jo
sub
mov
xchg
sbb
in
pop
xchg
add
fidivrl
pop
mov
sub
and
pop
pushf
cmp
sub
cmp
lahf
adc
jmp
out
fadds
mov
mov
push
lods
or
and
popf
dec
inc
sub
adc
fcoml
mov
xchg
mov
ljmp
test
pop
sub
ljmp
mov
push
mov
incl
push
inc
loop
mov
mov
addr16
xor
test
into
imul
test
xor
add
mov
ficompl
or
push
pop
jns
mov
dec
push
mov
add
or
pop
xchg
nop
jg
clc
shr
xchg
outsb
xchg
push
lcall
xchg
dec
mov
repnz
sub
stos
shlb
pop
mov
test
mov
lock
xchg
mov
fimuls
jg
sti
add
test
add
int
mov
dec
int3
or
and
loop
mov
xor
fcmovbe
pusha
mov
cs
pop
test
int
mov
popf
ss
aas
adc
int
jp
aam
dec
repz
movsb
loop
push
mov
and
or
test
fisubrs
adc
xor
push
dec
bound
xor
adc
shlb
push
mov
daa
movl
sti
fsubrp
dec
bnd
std
jo
sub
push
cmp
push
jno
leave
mov
or
repz
mov
push
movsb
out
sub
pushl
inc
loope
iret
jnp
in
adc
pop
in
pop
addb
imul
sbb
in
cmp
out
sbb
mov
pop
lock
dec
and
dec
pushf
cmp
jne
push
push
sub
ret
shll
jo
jns
mov
pop
shrl
pop
xchg
mov
push
ret
int3
jnp
mov
sbb
xchg
jae
adc
arpl
mov
std
cmp
ljmp
cmpsl
loop
sbb
pop
outsb
es
fldl
xchg
xor
fists
sbb
push
cld
in
insb
leave
xor
in
pop
pushl
cmpsb
dec
or
test
or
fisttpl
cmpsl
adc
push
add
pop
dec
cmp
in
subb
pop
xchg
shll
loop
test
lock
ficoml
cmp
test
pop
nop
cli
movsb
inc
xchg
cwtl
imul
sub
add
or
push
test
arpl
sub
dec
sbb
pop
xchg
lods
xor
js
mov
insl
movsl
add
xchg
mov
adc
or
push
mov
testb
and
enter
mov
testb
jns
mov
cmp
mov
xor
xchg
and
and
push
je
mov
jns
inc
mov
jb
push
daa
repz
mov
xchg
int3
hlt
mov
fst
ficomps
dec
outsb
mov
out
jl
jecxz
dec
cmpsb
test
imul
push
addr16
andl
aaa
inc
push
fsub
mov
push
mov
add
in
ret
push
mov
fstpl
dec
sahf
adc
mov
xor
sarb
cmc
cmp
je
enter
out
mov
inc
pop
push
icebp
cmp
lret
stos
ficoms
jmp
fistpll
mov
movsl
movsl
out
out
add
push
jp
loopne
sub
lds
jae
fistl
shll
int
aad
lea
outsb
into
pop
pusha
and
incl
add
or
and
inc
mov
or
xor
out
pop
jb
xchg
push
adc
cmp
insb
jmp
dec
add
shrb
cmp
insl
xchg
pop
sub
push
movsl
orl
mov
push
mov
in
enter
push
sub
xchg
pop
test
test
jnp
movsl
movsb
adc
sub
punpckhdq
rorl
iret
inc
js
test
imul
cmp
outsl
mov
mov
es
mov
test
or
in
or
jae
mov
fcompl
jnp
fs
push
inc
loop
rolb
and
div
inc
andb
mov
stc
add
out
or
decb
or
fistpll
pushf
cltd
jbe
clc
cmp
push
pop
mov
mov
mov
int3
ficompl
inc
scas
sbb
fidivl
mov
fmull
shrb
lea
lods
pop
ret
arpl
mov
loopne
shrl
and
in
xor
lock
xor
ds
mov
sub
xor
subb
out
inc
sub
testb
sub
dec
fnstcw
add
cmp
ljmp
mov
mov
and
push
sub
push
inc
dec
jp
jnp
je
in
addr16
jb
mov
lds
mov
roll
popa
sub
lods
sahf
andb
call
or
fwait
jle
push
xchg
lcall
jp
imul
loop
jl
loope
add
lods
xlat
xchg
and
ja
aaa
push
aaa
in
inc
movsb
rclb
jp
test
and
jmp
dec
cmp
jecxz
sti
xchg
mov
adc
cmp
fcompl
xchg
aaa
xchg
shl
jmp
jae
dec
cli
clc
out
adc
and
ss
xchg
jge
inc
mov
add
fs
je
or
sbb
unpckhps
bound
jmp
xlat
sub
pop
scas
push
cmp
in
imul
adc
inc
popa
jmp
jp
cld
bound
inc
jnp
rolb
fimuls
gs
inc
cmp
nop
inc
cmp
leave
and
shll
inc
pop
adc
mov
push
fldcw
cmpsb
and
ret
outsb
inc
outsb
cli
jns
mov
icebp
adc
test
sti
bound
addl
mov
xchg
mov
clc
rorb
jo
pushf
jo
call
call
andl
int
jne
mov
imul
cmp
mov
or
add
je
mov
fstpt
test
cmp
mov
mov
ss
sub
ljmp
jbe
pop
cmpl
pop
lret
ljmp
inc
inc
int3
arpl
push
enter
mov
jl
xchg
mov
movsb
paddq
jle
sahf
sub
and
xchg
out
push
pop
xor
cmp
loopne,pt
mov
mov
pop
or
je
mov
cwtl
insb
fistpl
mov
adc
scas
cmp
nop
xor
xchg
data16
aas
mov
xlat
add
pop
fiaddl
fmuls
ret
ss
scas
and
loope
add
lahf
push
lret
testb
das
sbb
test
cld
sbb
sbb
lret
and
cli
dec
jmp
xlat
pushf
arpl
pop
mov
pushf
jae
push
dec
push
daa
mov
aas
add
ror
popa
sub
mov
out
sub
cmp
push
dec
fnstenv
hlt
imul
inc
jnp
js
lea
test
fimull
das
or
jecxz
addr16
dec
adc
fimull
cmp
sbb
stos
lods
int
sbb
adc
jnp
ret
and
std
loopne
pop
xor
fmul
sub
lcall
xlat
sbb
adc
lahf
mov
jecxz
aaa
outsl
cmp
clc
dec
aaa
jmp
cmp
add
mov
adc
fnstsw
inc
stos
and
push
cmpb
stc
and
push
movsb
sahf
and
call
push
fbstp
pop
mov
dec
cmp
pop
and
dec
xchg
cmp
jbe
sub
mov
into
and
add
fwait
sub
out
jbe
jmp
stc
xlat
scas
inc
nop
xor
jno
ja
dec
push
and
bound
cltd
xchg
stos
mov
test
les
movsb
jmp
inc
push
push
pop
sahf
int
adc
jp
aad
cmc
sbb
xor
stc
inc
and
push
and
sub
mov
xchg
popa
clc
lds
insb
movsb
dec
mov
in
testl
push
adc
push
mov
mov
mov
sbb
mov
and
or
enter
mov
xchg
hlt
push
test
and
add
loop
pop
dec
mov
popl
sub
es
imul
out
mov
sub
movsl
push
xchg
data16
and
or
or
adc
lds
mov
imul
xor
xlat
stos
mov
dec
stos
pop
stc
pop
cmp
mov
out
mov
and
notl
int
sub
std
xor
aam
or
fisttps
adc
inc
lret
sbb
xchg
mov
mov
mov
shrb
pop
mov
add
jb
mov
stos
fsubl
add
shr
icebp
bound
test
test
call
jmp
push
leave
shll
add
fstl
gs
and
cs
test
and
es
jae
dec
stc
test
pusha
cmpsl
hlt
push
mov
cmpsb
add
in
push
imul
into
out
iret
out
sbb
sti
mov
insb
in
pop
icebp
sbb
push
inc
fcompl
and
xlat
pop
sub
push
mov
inc
xchg
push
mov
push
cmpsb
popa
cmp
loope
fnsave
xchg
fdivl
push
ss
fcoms
jne
aad
in
aaa
xorl
pop
lret
sbb
pop
mov
jecxz
mov
loope
jo
xchg
dec
jo
jae
adc
dec
mov
and
fdivs
int3
int3
push
push
ja
add
or
stos
outsb
jae
inc
movsb
mov
mov
push
cmc
ss
pop
aam
and
les
pusha
pop
and
movsl
cmc
push
cmp
into
pop
fsubrl
loope
testl
in
mov
movsb
pop
push
leave
mov
mov
std
popl
sub
pop
xor
or
lret
into
adc
inc
dec
add
icebp
add
pop
test
movsb
or
daa
mov
xchg
xchg
sbb
stc
ret
adc
fsubrl
sbb
in
pop
arpl
inc
push
call
dec
mov
and
and
xchg
or
pop
push
add
mov
inc
xor
push
stos
mov
adc
mov
fdivrl
adc
jmp
or
sbb
ficomps
sbb
fwait
out
in
jl
addb
mov
je
jl
xchg
lods
add
push
sbb
loop
fnclex
fcomip
notl
ret
fcomp
lods
mov
jg
addl
mov
in
push
loop
out
fsubl
outsl
inc
mov
push
cmc
arpl
inc
xchg
icebp
hlt
repnz
lret
pop
dec
int3
xorb
sahf
mov
imul
xlat
jbe
test
sub
push
in
enter
subl
jmp
mov
jo
push
jb
fisttpl
push
xor
xchg
and
dec
cli
cmp
cld
adc
and
sub
xor
imul
cmp
out
in
sbb
add
sbb
dec
les
aas
pop
mov
addl
mov
cmp
mov
push
xor
mov
fs
stos
out
test
xorl
pop
gs
rcll
mov
sub
pop
push
loop
test
ds
loop
repnz
lret
stos
xor
push
mov
jne
dec
pop
dec
dec
inc
sub
repz
add
subl
pop
cmp
sti
cld
dec
out
or
pop
push
lds
jecxz
loop
in
or
aam
das
mov
subb
sub
jns
out
inc
lahf
jb
sbb
jne
inc
xor
in
andb
test
jno
jnp
xor
xlat
mov
add
bound
sub
mov
mov
mov
test
aaa
shrl
pop
fstl
cs
daa
xchg
shr
shlb
fstl
and
mov
fiadds
or
add
and
and
mov
push
xchg
jmp
cltd
test
mov
mov
paddb
xchg
ss
or
xor
rcrl
xlat
push
ret
xor
mov
popa
sbbb
dec
xchg
hlt
cmp
xor
mov
and
sub
xorl
iret
loop
clc
lods
sbb
cmc
xchg
xchg
dec
ret
mov
sbb
decb
pop
xchg
or
insb
ret
pusha
sbb
in
xchg
stos
int
loope
jae
cld
sbb
in
movsb
ds
clc
call
mov
js
or
sbb
push
adc
pop
and
mov
dec
fs
mov
sub
imul
addr16
mov
stos
loope
ficoml
jecxz
mov
fldcw
imul
repnz
pop
dec
sahf
push
or
lret
add
mov
adc
cmc
or
das
test
aaa
jmp
or
lods
dec
sarl
iret
ja
clc
xchg
popf
scas
call
ljmp
rcrl
and
inc
pusha
gs
fdiv
imul
sti
sub
fsubrs
cmpsl
pop
cmp
into
sub
fcmovnu
mulb
fbstp
hlt
outsb
mov
in
lahf
mov
rolb
insb
jnp
arpl
cltd
sbb
sbb
fs
ljmp
inc
inc
gs
xor
xchg
sbb
ret
xor
jg
mov
jo
clc
cmp
xchg
push
scas
and
dec
cmpsb
add
cltd
add
xchg
repz
or
lret
jmp
jnp
and
out
hlt
insl
sbb
dec
insb
ljmp
mov
test
sbb
pop
fwait
sbb
lea
mov
add
gs
pop
ret
cmp
sti
in
mov
and
pop
or
es
jmp
test
add
add
in
lret
int
outsb
sar
cmp
push
jecxz
clc
lea
jg
mov
pusha
sub
xchg
lcall
nop
or
test
jp
sti
pop
mov
imul
arpl
ret
loop
int
sub
inc
repnz
add
add
stc
sub
mov
push
daa
int3
xchg
pop
scas
in
aam
cwtl
adc
dec
jg
dec
aas
xor
xchg
or
cmp
andb
mov
nop
insl
mov
mov
repnz
sub
push
imul
fwait
jbe
pop
aas
ret
pop
or
test
aad
out
jg
iret
push
lret
iret
pop
add
in
mov
sti
rolb
stc
push
ret
inc
in
pop
scas
sar
xlat
jns
pushf
stos
or
jmp
or
mov
adc
push
clc
xchg
lods
lret
inc
lcall
sbb
jno
roll
wrmsr
push
inc
pop
loop
add
dec
sub
adc
outsb
rol
push
arpl
inc
lcall
mov
dec
add
sbb
inc
pop
mov
jo
mov
outsb
mov
mov
stos
roll
push
imul
jl
xchg
and
ljmp
xchg
cmp
shlb
pop
pop
dec
pop
repnz
add
ds
ficoml
adc
adc
cmp
push
jns
push
cli
mov
shll
ljmp
mov
add
lock
xor
iret
xor
sub
and
imul
cltd
dec
cmp
xor
mov
mov
mov
mov
mov
sti
out
push
sbb
fstpl
out
push
stos
call
jmp
stos
mov
out
imul
fs
lods
jno
or
mov
mov
in
ror
in
or
js
stos
pop
push
pop
roll
xchg
or
dec
lret
cmp
sub
in
data16
jp
testb
mov
add
pushf
xchg
add
inc
sbb
dec
clc
ret
outsb
cmp
dec
in
xchg
sahf
jae
dec
cmp
test
stos
inc
insl
sub
dec
jp
cmp
out
jp
add
roll
sbb
push
sbb
dec
das
mov
ja
cmc
mov
in
lcall
pop
cli
arpl
cmpsb
mov
mov
cwtl
jns
enter
movsb
dec
mov
cmp
stos
add
or
xlat
out
mov
inc
das
add
jmp
imul
jbe
fst
shrl
add
xchg
push
mov
lret
mov
push
fnsave
loop
or
dec
sahf
and
lcall
ficompl
xorb
and
push
mov
and
jg
lahf
test
int
loop
mov
stc
nop
push
fisttps
lods
push
jmp
hlt
fnsetpm(287
cs
sbb
popf
xchg
test
imul
xchg
sbb
int
dec
and
jle
add
mov
xchg
idiv
jmp
out
loop
divl
dec
in
sbb
je
sub
stc
test
and
inc
test
dec
call
jno
iret
mov
cmpb
shr
add
addr16
fwait
xor
jle
pop
div
test
cmp
std
xchg
or
cmp
das
xchg
adc
adc
sub
cmp
inc
dec
push
jbe
pop
sbb
xchg
frstor
test
cld
sub
stos
cwtl
jae
mov
pop
sub
outsb
arpl
outsb
mov
xchg
push
lcall
mov
daa
hlt
dec
push
push
fnstcw
cmp
jne
faddl
or
dec
out
mov
in
mov
pop
sub
fwait
cs
imul
sarb
movsl
add
aam
mov
insl
fwait
mov
pop
leave
push
cmp
dec
cmp
jecxz
mov
pop
push
mov
and
cmp
loopne
leave
das
loopne
or
sti
ja
mov
in
out
mov
jo
scas
jb
adc
dec
addr16
sbb
fdivs
jle
jb
push
sbb
or
sub
mov
pop
mov
mov
xchg
mov
and
mov
mov
xchg
rorb
sbb
or
nop
inc
aad
je
enter
xor
mov
push
or
icebp
cltd
pop
add
xchg
out
xor
outsb
dec
loop
adc
jecxz
pop
insl
xchg
sub
push
imul
xchg
adc
xchg
hlt
in
ja
mov
into
jl
sahf
out
jns
popa
cmpsb
das
adc
call
xorb
test
push
push
outsb
ss
aas
pop
push
rcrb
notl
add
insl
mov
cmpsl
inc
xchg
cltd
into
out
or
jecxz
mov
xchg
test
cmpsl
in
dec
sbb
adc
test
cmp
push
cmp
std
scas
push
xor
push
sti
daa
xchg
mov
scas
xchg
lea
es
test
movsb
fxch
sub
sub
add
cmp
je
fldl
push
out
sar
pop
in
ss
shl
cmp
cmp
cwtl
setbe
pop
xor
xor
je
cmpsb
popf
stos
gs
dec
jo
in
data16
icebp
in
icebp
stos
sbb
xor
add
cld
pop
loope
test
out
push
sub
mov
mov
inc
test
adc
movsl
in
in
add
ds
jge
mov
cmp
mov
cmp
roll
push
enter
out
dec
cmp
repnz
ljmp
cmp
push
sub
dec
jne
divl
fistps
ret
js
add
mov
sbb
icebp
out
sbb
sub
jge
lret
adc
stos
dec
lods
xchg
cmp
push
call
sbb
sbbl
jge
icebp
mov
pop
mov
mov
add
ds
mov
and
cmpb
jmp
stos
mov
sub
mov
xchg
testb
jmp
imull
and
push
mov
pop
test
cmp
jle
inc
sbb
stos
and
jecxz
dec
outsl
lock
sub
enter
popa
cmp
arpl
bound
cwtl
in
div
xor
icebp
pop
sub
sbb
sub
fldcw
ret
push
loope
push
sbb
push
mov
aam
out
div
pop
xchg
addr16
pop
in
mov
jl
jo
pop
jmp
loop
pop
cltd
cmp
or
fs
mov
jo
out
ja
adc
pop
imul
loope
mov
inc
jl
mov
jecxz
rorb
sub
sub
jne
jns
movsb
sub
inc
outsb
in
mov
and
icebp
inc
mov
pop
icebp
mov
dec
mov
sub
fsts
mov
aas
pushf
mov
cmp
sbb
mov
stos
add
ss
jecxz
clc
insl
fisubrs
daa
push
outsb
popf
add
sarb
subb
aam
and
jmp
imul
push
or
fsts
xchg
dec
loopne
jns
sbb
or
mov
inc
fadds
insb
lock
js,pn
jns
pop
cmc
jmp
pop
popf
fdivs
push
mov
xchg
pop
add
adc
popf
pop
dec
xchg
xchg
jle
outsl
mov
and
sbb
popl
stc
scas
push
cld
call
addr16
mov
gs
repnz
cmpsb
mov
imul
cld
fstpt
inc
mov
pop
push
pop
std
inc
pop
push
or
rol
lret
sbb
xor
inc
cmp
sbb
divb
stc
sbb
xchg
jo
lret
pop
pop
imul
mov
aaa
ficoms
ret
js
cmc
pop
scas
add
cmp
jle
notl
fmuls
lds
or
sbb
push
stos
push
mov
add
and
push
mov
cmp
inc
xchg
jns
out
lahf
jle
lcall
or
push
or
jl
test
push
in
in
push
out
dec
outsl
or
push
movsl
inc
cmp
inc
xchg
push
cmpsb
scas
lods
loopne
sub
test
movsb
das
sub
push
push
mov
mov
aas
sbb
sbb
add
dec
fs
pop
dec
movsl
aas
xor
lret
movsb
cmp
ss
sub
subb
inc
pop
xor
mov
lret
ja
fidivrl
mov
inc
xor
in
inc
aaa
arpl
pop
shrl
hlt
and
fwait
mov
cwtl
and
daa
dec
jecxz
ret
cmp
test
jge
cmp
mov
ljmp
rclb
cmp
cmp
cmp
mov
jecxz
in
insb
movsl
sub
dec
inc
xlat
das
sarl
test
jnp
inc
push
add
rcr
mov
dec
sbb
pop
dec
divl
pop
pop
add
loopne
push
into
pop
test
out
aaa
adc
inc
call
testl
jmp
mov
pop
data16
inc
loop
mov
loop
cmpsl
sub
lds
or
lea
mov
cwtl
or
jo
mov
mov
and
mov
orb
mov
test
cmpsb
or
jg
out
and
xchg
outsl
in
cmpsl
xor
xor
fimull
fucomi
sbb
pop
mov
inc
movsb
jo
mov
pop
lahf
lods
jle
test
jne
mov
push
mov
test
dec
fcompl
mov
icebp
cvtps2pd
cld
jg
cmc
andb
subb
out
in
inc
cmp
in
mov
pop
sti
fiadds
out
push
mov
aas
pop
jle
jns
push
testl
outsb
jns
mov
lahf
testl
dec
dec
pop
nop
add
inc
add
insb
es
adc
xchg
mov
add
jbe
mov
jmp
lahf
inc
xchg
mov
popa
push
pop
jp
or
movsl
shl
arpl
mov
aam
and
adc
cli
mov
stos
ffree
sub
cmp
and
mov
int
es
sbb
daa
sar
dec
sahf
scas
mov
stos
fiaddl
add
mov
inc
and
icebp
pop
cli
fdivs
lods
xor
dec
ss
stos
test
and
xor
mov
cwtl
xor
push
xchg
ljmp
inc
adc
es
int
cmp
test
cmp
inc
cmp
push
cli
fisttps
sub
jle
rclb
mov
hlt
lods
push
lods
shl
lock
fldcw
xorl
sbb
lcall
xchg
fldcw
int3
sbb
in
sti
mov
test
xchg
sbb
stc
jl
es
cld
mov
adc
push
xchg
mov
call
mov
and
dec
inc
or
cmpsl
jns
mov
arpl
data16
scas
add
mov
lahf
mov
xchg
push
jne
cmp
pop
iret
cmp
mov
lret
add
dec
sub
pop
add
sub
xor
int
jne
movsb
jns
pop
dec
cmp
sub
xor
test
jno
lods
repz
add
mov
mov
mov
popl
xorb
sbb
mov
or
out
mov
mov
int3
cwtl
popf
inc
mov
sub
push
enter
inc
push
cwtl
push
clc
sub
loopne
and
mov
fildll
jg
sbb
sbb
hlt
data16
xchg
sbb
cmp
push
adc
and
xchg
out
xchg
adc
test
nop
jb
inc
jle
jmp
xor
xchg
xchg
and
pop
push
fcoms
cli
je
inc
popf
mov
fdivrs
pop
push
stc
cmp
and
push
clc
or
mov
jl
sub
xor
xchg
adc
or
fwait
cmp
lods
dec
std
das
adc
xorl
adc
adc
jl
cli
jp
lret
lret
out
pushf
sbb
pop
pop
addr16
aam
aaa
cld
mov
xchg
cmc
pusha
mov
fdivp
stos
mov
insl
sbb
enter
cmp
addr16
jnp
or
rcl
xor
sub
fdivrl
push
dec
sub
movsl
fstps
mov
inc
fs
ja
dec
jge
jp
sub
mov
lahf
or
jl
sub
adc
nop
xor
pop
xchg
fmuls
iret
adc
lcall
enter
mov
cmp
inc
fbld
repnz
fcompl
fidivrl
mov
push
fcoms
mov
adc
roll
pop
sarl
jne
enter
stos
dec
out
popa
cli
pop
rcll
mov
test
mov
inc
sbbl
test
aaa
lcall
shr
xchg
into
cmp
dec
nop
mov
sti
imul
dec
arpl
adc
and
lods
out
stos
mov
shr
mov
repz
ljmp
xlat
cwtl
das
fstl
mov
xor
xchg
ficompl
daa
mov
xchg
adc
jl
mov
lods
sbb
mov
scas
cs
pop
inc
inc
negl
ficompl
es
xor
idiv
mov
xchg
xorl
scas
adcb
ds
xor
push
dec
xchg
xchg
and
mov
inc
mov
js
call
shll
aaa
addr16
adc
cmp
imul
sbb
cli
iret
movsb
jecxz
xchg
adcl
lea
and
iret
jno
mov
insl
dec
aaa
mov
lahf
popa
adc
shr
lods
inc
jle
mov
cmp
call
and
cmp
add
pop
cmpsb
cwtl
add
dec
mov
cmp
rclb
jno
dec
sbb
sub
divb
xor
ja
fmulp
mov
add
sarb
and
and
bswap
arpl
dec
dec
fcoml
cwtl
iret
mov
mov
mov
adc
mov
cmp
inc
mov
sti
or
add
pushf
imul
les
shlb
pop
loop
gs
outsl
repnz
xchg
adc
jno
pop
dec
sbb
repnz
and
push
adc
std
xor
adc
popa
sub
es
xchg
jle
les
and
ret
fnstsw
xor
gs
pop
dec
pop
fcmove
mov
cmp
dec
scas
lds
mov
xlat
cltd
xchg
sarb
cmpsl
je
nop
iret
sub
inc
mov
mov
js
xor
dec
lods
aad
enter
pop
pushf
dec
ret
rclb
aam
cmc
inc
dec
cmp
ja
stos
inc
mov
push
outsl
dec
sbb
test
insl
sub
xor
mov
jb
test
mov
jmp
test
stc
xchg
pop
dec
nop
push
xor
jecxz
cmp
jne
xor
jle
mov
enter
inc
out
ja
std
bound
sub
mov
adc
ja,pn
pop
jae
aas
xor
pop
inc
or
test
pop
mov
xchg
insl
rorb
mov
xchg
ds
ss
outsb
pop
stos
mov
xchg
or
or
fisubl
mov
mov
add
cmpsl
loop
scas
mov
push
mov
imul
jecxz
or
or
lods
call
dec
pop
add
adc
jmp
fstl
sbb
test
inc
mov
or
imul
frstor
ror
lods
push
fidivrs
out
or
rcll
sbb
jmp
leave
sub
cmp
dec
sub
dec
inc
shl
adc
outsl
xchg
sti
int
jbe
int
dec
adc
mov
gs
and
jns
jge
stc
adc
dec
in
and
push
out
fs
js
push
xchg
or
adc
pusha
loope
fisubrs
mov
mov
jge
test
gs
out
sbb
push
test
dec
stos
inc
fsubs
xor
dec
je
das
lods
movsb
setg
push
pop
jmp
push
clc
pop
push
clc
sbb
pop
push
dec
pop
push
jmp
xorl
pop
loope
add
add
mov
ja
jno
ja
fists
jl
mov
cwtl
frstor
jge
jo
pushf
lret
clc
inc
jbe
fbstp
cmp
int3
ljmp
pusha
add
xchg
pushf
and
jmp
aad
push
mov
mov
and
inc
ret
push
inc
lods
pushf
insb
adc
push
fcmovb
mov
sahf
sahf
les
push
rcr
sub
movsb
jp
rcrb
outsl
es
rolb
aaa
mov
push
jno
add
inc
lds
pop
lret
les
jp
pop
ljmp
or
dec
mov
das
add
mov
cmpsb
repnz
xchg
pusha
push
xchg
fdivrs
lret
dec
pop
das
push
xlat
fisttpl
mov
push
or
mov
and
jge
dec
jg
sahf
lret
lds
fcompl
xchg
push
xor
dec
fsubrs
and
push
jmp
push
dec
xor
rcl
mov
sbb
sbb
aaa
sub
dec
xor
dec
lods
repnz
mov
push
leave
sbb
lret
mov
mov
stos
push
mov
or
xlat
clc
and
in
shrl
popf
pusha
lea
mov
in
or
sahf
int3
sarb
in
add
pop
lods
sbb
mov
shll
pop
fsubl
add
sbb
or
jnp
int
push
push
aas
dec
outsb
pop
jo
xchg
pop
adc
shrb
jnp
arpl
sub
out
or
jae
jecxz
mov
mov
jno
fstpt
xor
stos
mov
pop
cmp
add
lock
or
addb
mov
and
leave
insl
mov
clc
pop
lds
dec
mov
pop
mov
notl
pop
imul
and
ja
push
pop
lock
jle
cwtl
sub
scas
or
push
pop
in
arpl
cs
xor
jmp
pusha
pop
shll
pop
sub
repz
outsb
ret
mov
jb
mov
addr16
or
jl
dec
adc
cltd
add
ss
imul
or
mov
mov
das
xor
shrb
popa
xor
jns
adc
and
lds
sbb
in
aaa
aaa
into
adc
or
sahf
sub
scas
sbb
adc
lods
pusha
xor
sub
popf
jne
push
roll
scas
into
cmpsl
lret
fdivrs
pop
ds
popf
fisttpl
mov
or
push
xor
sbb
das
jle
cwtl
insb
in
sarb
and
inc
ja
adc
adc
inc
insl
outsl
iret
insl
mov
adc
sub
mov
outsb
ret
cmpsl
lock
int3
dec
rorb
aas
push
push
sub
stc
adc
icebp
ss
hlt
sbb
adc
andl
cltd
in
and
int
xor
pop
and
or
mov
mov
sbb
testl
aad
mov
out
pop
repz
loope
and
inc
popa
lods
or
mov
mov
pusha
jg
push
test
out
and
add
adc
pop
lods
repnz
mov
xchg
int3
idivl
xor
mov
cmpsb
lahf
lahf
movl
mov
ss
jne
les
mov
cmpsl
pop
bound
jae
mov
out
sub
add
pop
ret
fisttpl
xchg
out
push
div
xchg
shl
lret
cltd
imul
inc
clc
gs
rcr
sahf
loope
pop
in
mov
out
lret
int3
add
adc
push
ficoms
cld
xchg
jbe
mov
or
add
pop
lods
xor
adc
mov
mov
fstpt
out
outsb
js
mov
mov
sbb
lahf
adc
pop
sub
xchg
roll
inc
test
int3
push
push
sub
push
mov
les
mov
sti
add
pop
inc
testl
xchg
inc
or
mov
sbb
xchg
call
pop
xchg
cld
add
sbb
outsb
pop
cmovns
jns
add
pop
insb
and
outsl
add
adc
and
adc
mov
adc
jl
out
xchg
lods
push
mov
sub
out
xor
in
fnstcw
xlat
popf
adc
push
mov
or
pushf
movl
dec
clc
popa
jle
sbb
adc
pop
add
loop
std
pop
push
sbb
inc
or
dec
inc
ss
ja
adc
insb
pop
pushl
xchg
shrl
add
inc
lcall
daa
pop
pop
movsl
push
fimull
cmp
mov
adc
cs
test
pop
sub
xor
das
sub
pop
shll
lock
mov
dec
test
xchg
and
jb
in
mov
xor
mov
scas
xor
dec
int
mov
je
sbbb
mov
mov
pop
pop
jg
dec
out
mov
pop
mov
mov
arpl
fwait
adc
aad
mov
inc
sub
fwait
pop
movsl
je
mov
mov
test
xchg
mov
cs
push
jg
test
call
cmp
push
ficoms
outsb
pop
ljmp
sub
call
xor
jle
inc
pop
or
push
popa
rcrb
fldt
data16
repz
push
mov
add
adc
jecxz
nop
imul
adc
push
lock
dec
and
and
xor
enter
pusha
jb
lea
push
or
lahf
pop
enter
into
mov
add
lds
or
lret
push
or
push
stos
jb
pop
add
mov
mov
std
lods
enter
sti
sbb
scas
inc
mov
inc
pop
lret
jmp
sub
aad
movsl
push
outsl
es
push
stos
jp
cmp
mov
dec
mov
mov
arpl
and
cmpsb
pop
arpl
jecxz
insb
jns
mov
xchg
cmp
adc
mov
mov
in
cmc
sub
push
pop
xor
mov
lahf
test
into
jmp
cmpsl
loope
adc
loopne
push
ds
scas
mov
inc
xchg
xor
decb
inc
push
push
sub
adc
sahf
lds
mov
push
inc
mov
sbb
push
jle
xlat
lcall
je
out
jne
jle
push
push
adc
nop
lahf
shlb
pop
ss
xor
add
out
ja
fcomps
and
sub
and
pusha
call
pop
mov
mov
fs
stos
sbb
and
dec
xorb
aad
mov
mov
pop
fdivr
sub
jle
sbb
or
jo
bound
push
adc
or
scas
push
rcl
les
loop
shl
inc
adc
cmp
out
addb
fnstcw
cmp
mov
push
outsl
imul
in
es
leave
add
ret
mov
out
sub
mov
mov
or
popa
ja
mov
mov
test
enter
dec
test
cmp
call
es
rcrb
add
cmp
push
jp
pop
add
or
cmpsl
daa
or
fcomp
pop
jns
jb
or
adc
jle
pusha
orl
push
pop
adc
jb
sbb
bound
lds
loope
jge
add
jae
cli
icebp
out
pop
pop
int
pop
cmp
xchg
stc
jge
repz
or
add
aaa
fidivs
mov
pop
insl
aaa
pop
and
scas
sub
in
adc
mov
pop
clc
mov
push
mov
out
xchg
xlat
dec
sbb
cmc
mov
adc
clc
fcmovnu
mov
dec
leave
dec
repz
scas
outsl
insb
jg
out
insb
pop
aas
mov
lock
sahf
insb
mul
push
xchg
stc
pop
pop
jo
movsl
js
les
cmp
lcall
imul
jo
shr
fdivl
xor
ficoml
jle
out
jae
push
lret
or
pusha
movsb
pop
out
sbb
ja
dec
dec
or
fildll
jb
pop
movsl
rcrl
xlat
pop
mov
jle
sbb
jae
aaa
jge
out
pop
xor
xlat
jne
movsb
rol
ljmp
push
adc
sub
js
xlat
xchg
xchg
xor
sub
mov
mov
aaa
add
xlat
in
shrb
mov
lea
es
fsubs
inc
mov
fs
in
andl
push
push
cmc
leave
adc
jns
sarb
lods
cmp
push
pop
mov
fwait
xchg
add
mov
inc
and
inc
mov
in
fsubl
out
mov
das
jmp
imul
fdivp
ljmp
je
inc
jl
xchg
sarb
dec
enter
xchg
or
mov
pusha
inc
jmp
sub
stc
pop
popf
fidivrl
scas
push
sbb
int3
mov
inc
xchg
into
pop
push
bound
mov
imulb
loopne
and
in
stc
leave
sub
cmp
xlat
xchg
xchg
xchg
addr16
cmp
push
xchg
dec
pop
or
and
aaa
push
sub
push
push
rolb
cmpsl
mov
pop
push
pushf
mov
and
cmp
push
jb
sub
mov
and
insb
daa
icebp
roll
lahf
nop
sbb
jecxz
and
pop
nop
sbb
adc
es
rcrl
add
cwtl
pusha
cmp
clc
ret
or
add
mov
dec
sub
or
rclb
js
loope
xlat
mov
push
adc
push
icebp
into
jmp
loop
shrl
inc
mov
xorl
xlat
lea
sti
mov
adc
lret
jns
sbb
lock
and
ljmp
aas
imul
insl
imul
dec
fnstenv
cwtl
lret
push
rcr
or
mov
mov
inc
rcl
push
cmp
mov
pop
jno
mov
dec
fnstcw
hlt
cmp
adc
subl
pop
inc
cli
out
pop
aaa
mov
int
js
test
aam
xlat
movsb
jb
imul
in
lret
insl
sub
push
jne
sub
icebp
sub
xor
add
orl
aam
je
jbe
push
push
pusha
scas
int
mov
jne
popa
adc
pop
lret
mov
roll
imul
test
gs
adc
rcrl
xchg
xlat
andb
cmp
cmp
fs
xlat
es
jge
pop
mov
pop
add
movsb
xchg
into
jo
data16
adc
dec
cmp
fstl
cmp
jne
rcll
dec
pop
ret
and
jbe
orl
sub
mov
dec
xchg
mov
repnz
dec
jno
jge
xchg
cli
aad
xchg
or
mov
rcrb
aam
mov
lret
xchg
ss
lods
jbe
fcmovnu
stos
cmpl
push
fnsave
scas
lock
cmpsl
sub
push
add
lret
sub
push
jge
ss
pop
and
xor
nop
or
push
xchg
mov
arpl
mov
sahf
pop
lods
scas
add
jl
outsl
stos
mov
xchg
pop
into
mov
inc
shlb
mov
cmpsl
dec
loope
mov
xchg
cmc
pop
sub
fwait
cmp
dec
jo
inc
pop
dec
pop
pop
mov
repz
adc
negb
and
pop
jns
jne
cmp
mov
int3
orl
rorb
jge
cltd
enter
mov
cmp
les
add
iret
in
cmp
ja
fwait
xchg
stc
pop
push
pop
pop
cmp
mov
ljmp
adc
shl
sarl
push
jno
out
shlb
adc
aas
xor
sub
mov
pop
mov
dec
dec
adc
cwtl
int
push
adc
lods
adcb
mov
and
sarb
and
xchg
fdivr
std
test
mov
cli
inc
or
aas
add
inc
shrl
ss
insl
fiadds
ficomps
shr
es
into
cmp
test
fsubl
dec
cmp
sti
test
and
shlb
clc
add
cs
lods
push
or
xor
ss
mov
xor
int3
sub
xor
call
das
inc
pop
shlb
xor
pushf
sbb
xor
lods
push
cmp
divl
aas
mov
or
cmp
decb
imul
mov
adc
mov
fidivl
add
push
das
clc
cmpsb
dec
mov
push
inc
add
xor
and
sti
out
iret
lret
aas
arpl
loope
out
leave
jp
cmp
ss
sub
movsb
out
sbb
out
cmpsl
faddl
in
inc
xor
out
dec
repnz
lret
leave
cld
push
lcall
push
mov
mov
jle
or
dec
stos
dec
js
loope
cmpsl
jl
dec
dec
mov
sbb
repz
imul
adc
xchg
mov
push
dec
and
xor
xchg
jnp
sti
sbb
fisttps
insb
lock
gs
fidivrs
leave
dec
dec
fs
sub
sub
sub
mov
fcoms
lahf
aas
adc
push
mov
sbbb
mov
xor
push
cltd
xchg
add
call
sub
js
xchg
inc
sub
int
rcll
inc
lock
jp,pt
bound
jne
push
shrl
mov
push
mov
xor
adc
out
add
loopne
in
nop
adc
cmp
mov
and
push
imul
inc
pop
sbb
push
and
and
jb
repz
enter
into
jg
adc
movsl
loope
and
lret
aas
adc
sub
in
hlt
cs
and
pop
xchg
pushf
out
addr16
and
push
test
jae
mov
insb
xchg
lods
ja
aas
jno
cmp
ss
pushf
inc
mov
add
and
andb
cli
mov
add
push
andb
push
scas
and
xchg
scas
inc
outsl
pop
aas
int3
pop
in
mov
xor
imull
gs
cmc
cld
outsl
outsl
pop
leave
mov
jb
adc
mov
fwait
or
in
lcall
push
sbb
imul
in
lds
xchg
rcrl
into
cmpsb
bound
sarl
imul
sti
ss
inc
mov
fs
jecxz
shl
pop
cmp
xchg
cmp
or
mov
mov
out
fwait
pop
push
dec
loop
daa
or
ror
xor
outsl
sub
test
std
inc
push
inc
mov
fistpl
jno
imulb
push
mov
out
shrl
inc
cli
add
cltd
adc
mov
outsb
mov
fs
lods
test
sbb
xchg
in
dec
mov
jle
rcll
pop
pop
push
adc
jl
ficomps
push
cmpsb
lret
ror
pushw
mov
icebp
sahf
mov
dec
or
push
mov
jp
sarb
cmp
ss
test
mov
and
aam
in
cmp
add
push
push
or
fwait
sub
lret
sub
rclb
outsl
nop
cmp
mov
jge
rorl
out
lret
xchg
fwait
lock
dec
out
into
sub
sub
pop
test
orl
xor
cmp
pop
sahf
bnd
add
push
cld
ret
inc
jns
add
jle
rcr
inc
mov
sbbb
lds
sbb
leave
ret
adc
sub
and
adc
jg
pop
fiaddl
pop
sbb
cmc
in
icebp
and
jg
lea
loopne
inc
and
les
mov
sbb
mov
mov
scas
add
dec
xchg
call
fidivrl
pop
rolb
jp
add
add
push
out
mov
rclb
clc
mov
cmc
ret
push
and
enter
popf
jmp
lret
mov
lcall
pop
sub
mov
nop
adc
push
dec
xchg
mov
imull
lds
push
repnz
sbb
push
js
cld
lock
cmpl
sub
pop
lods
mov
inc
mov
add
mov
popa
lret
or
mov
xchg
shlb
mov
jns
sub
pop
adc
jae
pop
outsl
push
mov
stc
jae
push
push
cli
add
rcll
filds
cltd
rcll
xchg
inc
cmp
sub
gs
or
out
jae
out
sar
sub
mov
in
pop
into
lods
push
daa
out
cmp
xor
inc
cwtl
int3
cmp
imul
dec
xor
sbb
jl
pop
ret
jmp
aas
lret
aad
xchg
filds
fidivrl
jnp
pushf
push
xor
js
aaa
mov
or
insb
in
push
stos
cmp
in
ficompl
bound
cmp
in
cmp
inc
loope
xchg
int3
dec
cmp
cwtl
xor
fucomip
in
fwait
mov
stos
stos
cmpsb
cs
or
xchg
mov
imul
adc
test
ljmp
out
rorl
xchg
cmp
mov
add
mov
aam
xor
outsl
xor
js
shrl
sbb
enter
out
ret
pop
in
loop
or
and
leave
dec
push
mov
stos
jmp
cmp
insl
ret
js
mov
sub
inc
movsl
roll
cmp
xor
adc
stos
ret
jne
fstps
es
or
sub
ds
sub
pushf
sub
jb
sbb
out
in
xlat
cmpsb
cmp
mov
jle
add
inc
addr16
fstps
hlt
mov
xchg
mov
pop
dec
mov
push
mov
mov
decb
pop
cwtl
mov
xlat
cmc
lret
adc
ljmp
push
sbbb
shl
xchg
leave
sarb
add
mov
push
sub
pusha
mov
mov
sar
shlb
stc
pushf
jbe
xchg
idivl
mov
mov
cmpsb
and
loopne
sub
jb
mov
dec
pop
xchg
pusha
mov
inc
ds
gs
inc
jmp
roll
mov
cmc
das
out
sub
imul
xor
mov
or
xchg
insl
mov
movsb
push
shll
xor
jle
and
xchg
mov
mov
add
mov
or
jmp
jmp
fidivrl
loop
lcall
adc
movsb
inc
push
mov
adc
inc
mov
cmp
iret
mov
push
push
imul
movsb
push
repnz
andb
sub
mov
clc
mov
cmp
notl
xlat
or
in
ljmp
loopne
out
clc
std
ds
mov
stc
xor
lcall
scas
gs
pusha
fs
jmp
pop
xchg
mov
shlb
in
std
dec
test
mov
inc
xchg
lods
xchg
decl
pusha
lahf
adc
jmp
pusha
mov
test
and
pop
add
ljmp
divl
push
cmp
jmp
aad
pushf
or
jle
cmpl
dec
sub
maxps
dec
popa
inc
leave
iret
out
sub
or
outsb
insl
mov
add
in
mov
mov
lret
and
adc
es
cmp
sbb
mov
sbb
aad
mov
es
push
or
loop
pusha
mov
sbb
lcall
fadd
push
add
ljmp
jns
cld
cmp
lcall
cld
push
enter
cli
xchg
insl
pushf
rcrb
scas
das
rorl
cmp
cmp
mov
enter
inc
dec
jns
push
mov
mov
adc
pusha
aam
pop
dec
aas
aam
cwtl
add
mov
mov
add
outsl
push
push
or
aaa
in
xor
addr16
leave
dec
shll
ds
dec
sbb
pop
jge
add
add
add
add
pusha
add
andb
add
and
add
add
add
add
add
add
add
add
add
addb
sbbb
sbbb
add
clc
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
or
add
testl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
xchg
add
add
add
add
add
add
or
add
add
add
add
pop
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
jo
add
pop
add
add
add
add
add
add
add
dec
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
sub
add
cmp
add
push
push
add
pusha
push
add
add
add
loopne
add
add
add
lcall
add
loopne
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fsubs
sub
mov
incl
push
sti
sbb
mov
mov
out
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
mov
adc
mov
in
or
fstpl
xorb
fs
xor
outsl
push
loopne
loope
mov
rcrl
mov
or
inc
es
cli
testb
mov
push
push
mov
mov
add
add
pop
cwtl
rorb
into
lds
inc
inc
sub
xor
mov
xchg
sarb
or
cmp
add
lret
add
ret
pop
lea
inc
cld
add
sub
repnz
push
nop
pusha
es
sub
lea
lods
stos
add
add
pop
jae
test
jno
mov
mov
mov
cmp
sub
fmul
in
mov
cli
ret
sbb
in
test
das
sbb
rclb
cmp
or
jl
repnz
sub
xchg
sbb
push
test
sub
lcall
cmp
inc
pop
nop
add
rorb
dec
sub
lea
movsb
popf
inc
in
xchg
notl
test
aam
add
ss
xchg
int
sub
or
add
push
push
mov
test
sub
push
cmp
addl
jnp
xchg
in
sub
gs
xor
adcb
push
push
and
push
lea
push
shlb
sub
jmp
or
xchg
inc
push
push
aas
inc
and
mov
test
mov
cltd
xor
adc
push
pop
inc
mov
inc
js
jne
mov
pop
dec
jb
icebp
add
movb
sbbl
jae
mov
or
add
mov
pop
xchg
sarb
sub
xchg
or
mov
cltd
cmpsb
dec
fisubl
inc
or
movl
dec
cld
push
cmp
inc
pop
cmp
aas
sbb
rorb
lret
push
call
movsb
or
ret
cmp
and
xchg
cmp
add
out
mov
pop
xchg
inc
rolb
add
sub
in
xor
leave
push
ret
clc
push
sbb
pushf
inc
popf
sbbb
ret
je
jmp
push
cmp
repz
sub
sbbl
outsl
mov
mov
bound
and
sub
and
in
mov
decb
js
mov
add
add
in
push
test
mov
and
test
jmp
jne
pop
mov
push
add
dec
ds
shr
mov
jbe
jae
shll
adc
add
ret
jmp
cmpsl
and
xor
call
push
push
cmp
leave
pop
add
pop
nop
xor
rorb
inc
adc
fidivs
xchg
xchg
sub
insb
int3
dec
cld
inc
pop
jl
push
ss
or
iret
jge
add
inc
movzbl
add
push
cld
sub
orl
dec
mov
xlat
jne
sub
ret
xchg
pop
jae
or
adc
add
cli
cmp
add
out
or
enter
mov
outsb
cmp
stos
xor
and
cltd
pop
test
js
loope
std
push
test
cmp
in
add
jbe
push
push
call
pop
mov
sarl
xor
in
xchg
pop
jg
cli
xor
int
inc
fptan
mov
jae
push
bound
dec
or
dec
rol
add
movsl
sub
inc
push
jnp
or
cli
movsb
push
not
mov
or
cmp
mov
adc
adc
xor
sbb
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
mov
push
hlt
push
dec
dec
or
cmp
sti
cs
in
loope
adc
inc
je
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
sub
pushf
dec
pop
jno
out
fisubl
or
inc
or
sub
push
nop
cmpsl
add
adc
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
adc
call
sbb
mov
and
aad
and
sbb
inc
or
subl
mov
icebp
and
inc
les
aas
sbb
rorb
cs
and
dec
adc
fdivrl
lret
andnps
int3
testb
mov
idivb
jg
test
and
jmp
fcomps
add
sahf
data16
push
inc
gs
cmp
pop
xor
and
mov
lods
jmp
lods
popf
sbb
stos
pusha
loopne
xor
ss
mov
call
cmp
inc
push
inc
jmp
repz
pop
cld
cmp
or
sbb
clc
and
inc
cmp
add
lea
push
add
test
shr
push
loope
push
lea
add
aad
add
add
call
sbb
push
mov
push
push
dec
imul
enter
dec
and
scas
adc
sbb
mov
lea
lods
sti
add
cmpsb
dec
cmp
push
jbe
insl
jae
bound
sbb
jo
insb
imul
sbb
gs
jae
adc
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
jbe
mov
dec
in
sti
stc
popa
addr16
inc
outsl
cmp
cmp
je
data16
cmp
int
cmpl
push
dec
nop
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
iret
hlt
arpl
jae
jno
jne
fwait
lret
insb
pusha
jo
inc
rcll
xchg
adc
imul
or
adc
lods
dec
outsb
data16
adc
and
jecxz
fs
pop
inc
sbbl
jns
push
xchg
mov
push
xchg
lock
jmp
int3
and
or
and
inc
or
or
sub
or
xor
inc
lds
cltd
and
cmc
xor
mov
or
sbb
xchg
pop
std
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
mov
add
jle
add
call
push
add
add
inc
add
push
add
in
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
add
inc
add
add
add
add
addr16
add
push
ja
add
add
adc
add
mov
add
test
pusha
add
add
add
dec
out
mov
