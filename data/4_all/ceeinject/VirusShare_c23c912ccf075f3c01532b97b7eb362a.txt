call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
je
xchg
pusha
sbb
inc
ja
add
inc
and
jmp
rorb
loopne
nop
leave
xorb
sub
push
or
xor
pop
adc
jmp
rorb
mov
jecxz
test
inc
imul
mov
mov
mov
mov
scas
cmc
mov
adc
xor
lods
repnz
pop
adc
mov
stos
mov
rolb
xchg
and
clc
dec
xor
inc
cmpb
sbb
or
shlb
jl
js
pop
nop
inc
jl
cmp
icebp
sbb
jno
stc
xor
data16
add
mov
xchg
sub
cmpl
push
js
xchg
xor
dec
push
lods
ret
cli
cmc
mov
jbe
je
jmp
int3
outsb
mov
out
leave
mov
sbb
mov
loope
sub
repz
in
xchg
mov
cwtl
out
lods
xor
mov
inc
sqrtps
cwtl
aam
sarb
pushf
test
orb
sub
push
gs
jns
sub
add
cmp
inc
rclb
mov
dec
sbb
addr16
pop
pop
sbb
dec
jne
jo
pushf
call
scas
nop
fldl
in
xor
pop
adc
push
xor
mov
mov
xchg
lods
mov
mov
lods
in
out
dec
and
adc
and
xor
pop
imul
mov
rorb
mov
cmp
pusha
sbb
inc
jns
imul
mov
rorb
mov
cmp
jne
mov
push
cmp
jle
jmp
push
xchg
jp
mov
jp
fldt
xchg
add
sti
mov
sub
lods
call
pop
push
mov
jnp
jp
push
dec
jl
push
xor
push
inc
pop
add
insl
cltd
push
cmp
mov
cmpsb
nopl
jmp
jecxz
inc
dec
stc
pop
mov
mov
add
push
adc
pop
movsl
add
repnz
fstl
jnp
xchg
or
cltd
stos
popa
mov
adc
xor
int
pusha
mov
sub
popa
pop
repz
jne
add
repz
push
mov
dec
mov
addl
xchg
test
xor
or
loop
xor
mov
mov
jo
jb
addl
icebp
cs
popf
andl
jg
ret
pop
ss
cmp
xchg
outsl
lods
aaa
sbb
aaa
aad
data16
bound
std
xor
test
outsl
les
adc
repz
inc
adc
push
inc
enter
testl
stos
fimull
sbb
xchg
xchg
popf
cmp
arpl
inc
sbb
xor
mov
lahf
shll
inc
xor
lahf
loop
sub
xchg
in
mov
les
mov
inc
cmp
mov
shll
pop
pusha
mov
add
ficoms
ss
ret
cmpsb
xchg
push
aam
xchg
or
scas
sbbl
loop
dec
sub
add
push
jb
and
int
add
pop
sbb
rclb
inc
adc
and
cmpsl
push
adc
insl
movsb
jecxz
mov
adc
xor
aad
stc
insl
inc
add
xchg
inc
cmp
dec
out
test
inc
mov
jo
enter
jnp
pop
or
and
das
cmp
push
add
icebp
pop
out
dec
mov
jmp
or
daa
push
nop
or
add
ret
xchg
push
scas
out
jb
push
iret
scas
lret
inc
jno
outsl
cmpsl
lock
scas
mov
js
fildl
daa
jecxz
fs
mov
fcmovnu
out
xchg
mov
lods
mov
inc
js
cltd
sub
lods
scas
xor
dec
lret
loop
and
ret
es
stos
mov
adc
xchg
xchg
jecxz
int3
dec
jbe
xchg
out
mov
out
dec
push
inc
add
xlat
lods
call
cmp
xchg
push
shlb
imul
das
sbb
das
dec
mov
mov
je
dec
pusha
mov
dec
in
std
adc
mov
pop
test
nop
iret
repnz
fcmovnb
inc
leave
xor
sub
std
lea
xchg
mov
add
in
mov
push
cmp
loope
lret
ds
mov
cld
push
clc
lahf
insl
mov
xor
cltd
push
mov
mov
dec
loopne
mov
mov
adcb
pop
sub
lahf
repnz
sti
or
sub
cli
sbb
mov
cs
or
cli
clc
jae
jne
mov
xchg
dec
pusha
adc
or
mov
nop
daa
out
cmp
xor
sti
mov
int3
or
lahf
jne
mov
adc
pop
jl
mov
xchg
icebp
stc
loopne
inc
add
outsl
add
mov
mov
mov
orl
sub
es
aam
and
xor
pop
movsl
addr16
outsl
mov
add
fsts
loope
cli
mov
std
or
and
push
cmp
xchg
roll
ljmp
cs
mov
insl
mov
stos
mov
mov
mov
test
js
out
fadd
out
ja
push
popa
andl
in
push
sub
jg
loope
vpunpckhwd
mov
scas
mov
sbb
leave
sub
adc
xor
jle
in
mov
adc
lods
pop
jbe
pop
ret
xchg
adc
xchg
out
xchg
add
les
js
push
loop
cmp
ja
rorb
xor
psrlw
icebp
mov
jmp
adc
xlat
fdivrs
ret
add
dec
cli
adc
enter
jp
xchg
add
or
popa
cmpsl
das
push
arpl
daa
ret
movsb
jl
cmpsl
lea
push
fisttpll
out
adc
sahf
roll
adc
jbe
iret
fsubs
push
mov
jge
das
test
aam
or
push
add
adc
jo
pop
pushf
xchg
lahf
imul
pop
inc
mov
add
push
push
cmp
mov
or
fmulp
lcall
mov
ss
lcall
nop
dec
addr16
in
aaa
ficoms
and
xchg
jge
scas
enter
pop
sti
std
addr16
movsb
push
gs
loop
int3
xchg
test
sub
mov
dec
push
push
loopne
out
repz
xchg
int3
repnz
loop
std
paddsb
pop
mov
xchg
aas
nop
xor
push
shlb
jge
mov
andl
pop
fisttpll
cmp
fidivs
mov
or
push
adc
xchg
jns
repnz
xchg
and
sbb
xor
cld
adc
nop
inc
push
push
fidivrl
into
xorb
scas
loope
push
mov
inc
and
dec
aas
pmaxsw
push
cwtl
rcrb
outsl
loop
lcall
clc
dec
scas
cmpsb
pop
pop
cmp
stc
cmp
xchg
add
mov
ljmp
push
stos
stos
pop
aas
popf
inc
xchg
ja
sarb
and
int
and
popa
add
fcoms
aam
js
push
mov
xchg
adc
es
in
jae
cs
outsl
clc
rcrb
dec
xchg
inc
ds
je
inc
or
js
push
lock
and
dec
out
sbb
int
lea
pop
jecxz
dec
sub
or
arpl
push
or
push
add
das
das
hlt
bound
push
adc
xor
bound
in
std
add
mov
jno
je
jbe
andl
inc
sub
out
cmp
inc
jnp
dec
ficompl
scas
adc
int3
sbbb
stc
gs
inc
dec
dec
cld
jns
pop
fs
lret
xor
or
and
push
xchg
jl
xor
xchg
adc
pop
adc
sub
loop
xor
rorb
out
sarl
movsl
xor
test
jno
movsb
stos
pop
adc
mov
jns
pop
or
out
pop
mov
fisttps
arpl
cs
test
stos
lock
call
repnz
inc
int
and
sbb
aas
insb
popf
inc
adc
jmp
xchg
arpl
pushf
mov
sbb
dec
cmp
ja
add
int
push
xchg
cmpsl
mov
sbbb
push
or
leave
mov
inc
sbbl
out
add
push
pop
shr
and
outsl
dec
cmc
pop
mov
xor
xchg
jae
lret
stc
js
lods
mov
xor
lcall
fmuls
cmp
jecxz
imulb
ja
cmpsb
sub
xchg
jle
push
clc
and
push
push
and
inc
jne
push
test
jb
and
cmp
inc
fs
cld
push
mov
call
hlt
sbb
outsl
cmpsb
cmp
sub
jnp
test
pop
pushf
aas
lds
pop
sub
adc
mov
out
mov
sbb
loope
mov
xchg
fs
mov
pop
sti
adcb
dec
push
cld
mov
jns
mov
or
aas
int
mov
out
sbb
sub
push
sti
mov
repz
cmpsb
cmp
ja
lcall
clc
cmp
sbb
mov
lahf
pop
and
mov
outsb
push
inc
jmp
or
call
cmpsl
xchg
ret
add
xlat
jns
sub
sbb
dec
xor
add
inc
cmpsb
xor
arpl
fimuls
push
fwait
insl
cmc
push
adc
xor
and
mov
mov
or
addl
sbb
xor
jmp
xor
hlt
pop
mov
in
lods
inc
jbe
push
xor
cmp
sbb
mov
mov
mov
rol
ret
dec
add
clc
mov
scas
inc
daa
cli
jp
dec
inc
jns
mov
shrb
dec
cltd
lods
call
mov
fimuls
jne
lcall
ljmp
mov
and
insb
sub
dec
hlt
and
mov
ss
lret
ret
sbb
popl
jb
icebp
out
inc
movsl
add
sti
jb
xor
arpl
jns
push
dec
mov
out
das
movsl
dec
sub
push
pop
loope
xchg
cmp
mov
jbe
adc
pop
cs
push
add
stos
xchg
mov
mov
nop
cmpl
push
xchg
loope
dec
stc
push
dec
fcmove
cmp
xorl
mov
pop
mov
std
mov
pop
add
loopne
adc
rclb
inc
sub
stos
stc
xchg
and
xchg
mov
in
mov
xchg
les
mov
and
add
ret
add
mov
loope
pop
add
pop
jne
xor
pop
ss
push
lock
std
jg
mov
xor
insl
mov
sbb
cmpsl
dec
icebp
pop
test
cmp
bound
adc
push
sbb
movsb
sti
fnstsw
xchg
push
insb
add
sub
push
mov
dec
xchg
and
call
push
ss
fimuls
and
sbb
das
xchg
jns
sti
and
clc
cmp
popa
and
je
shrb
jle
cli
data16
jo
jl
dec
mov
lods
test
push
mov
xchg
jns
sti
sub
jbe
inc
leave
xchg
aam
les
adc
push
ret
pop
jle
adc
jnp
outsl
push
je
push
inc
lods
cmp
xor
xor
pop
shl
push
test
addr16
sbb
jge
mov
mov
add
sbb
lock
aam
jne
adc
sbbl
lcall
add
adc
mov
arpl
pop
lcall
pop
incl
xchg
cmp
xor
inc
mov
xor
or
and
push
icebp
lahf
insl
jb
inc
xchg
hlt
iret
ror
mov
sub
outsl
ljmp
sub
xor
xor
push
inc
pop
add
jmp
sahf
test
pop
dec
mov
jle
sbb
inc
mov
leave
int3
jg
lcall
xor
inc
mov
jb
je
xchg
outsl
mov
in
push
pop
inc
push
sbb
gs
cmpsb
out
push
cwtl
or
mov
mov
test
xor
clc
stc
mov
or
xchg
add
test
fbstp
imul
sbb
push
aad
out
add
xchg
stos
mov
mov
fwait
loope
out
xchg
out
pop
aad
int
out
xchg
roll
jecxz
xchg
cmpsb
jnp
in
sub
ret
leave
push
pop
sbb
mov
adc
out
sbb
call
push
cmpsl
insl
hlt
mov
add
push
sub
icebp
xor
lcall
cmp
jbe
outsb
iret
daa
pop
mov
dec
lods
mov
mov
inc
cmp
xchg
push
int3
sub
push
addr16
mov
call
mov
sbb
mov
and
insb
mov
mov
sub
outsb
inc
iret
mov
dec
aas
pop
sub
or
leave
adc
fdivrs
push
out
mov
xor
popf
xor
jne
popa
pushf
pop
add
mov
mov
fdivs
or
cmp
iret
mov
jo
imul
cmpb
mov
aas
adc
hlt
xchg
add
sub
sub
mov
cwtl
xchg
inc
mov
push
sti
mov
fmuls
sbb
push
mov
data16
shlb
out
insl
mov
mov
fs
sub
in
cmpsl
insb
adc
lret
fbld
add
mov
mov
xlat
lea
or
jecxz
inc
shlb
or
ret
sub
into
cli
mov
pop
sbb
decl
pop
lret
xchg
xchg
mov
jl
push
cltd
and
sbbb
jecxz
adc
fwait
js
shrb
adc
or
push
mov
mov
inc
test
jmp
ja
cli
loope
cmp
lret
mov
lock
jns
into
test
into
rcrb
sbb
mov
icebp
mov
sarb
das
and
xorl
fstpt
and
fistpll
pop
jnp
sbb
pop
push
push
jno
jp
outsb
rcrb
popa
pop
ljmp
orb
sub
ss
popa
jle
dec
ds
mov
aam
jnp
repnz
lret
cmp
and
inc
mov
cmp
pusha
mov
inc
push
xchg
adc
divl
pop
mov
adc
mov
lods
pop
ror
adc
and
shl
idivl
pop
movsl
pop
jle
in
xor
inc
insb
repnz
jge
enter
xor
pop
js
int3
dec
sbb
stos
arpl
cmp
adc
cltd
notl
sbb
notl
mov
ss
jmp
ret
jb
js
int
pop
pop
ds
xchg
sbb
fstl
adc
sbb
imul
and
mov
insl
shlb
lock
insb
push
loope
sub
xchg
add
das
xchg
mov
sarl
testl
inc
sti
mov
sti
sub
mov
daa
mov
popl
psubd
out
add
aaa
test
jo
mov
mov
mov
je
aas
mov
jg
sbb
loopne
shrb
add
jg
or
jne
pop
or
rcl
mov
imul
push
adc
pop
dec
push
call
push
roll
lea
mov
aam
mov
jmp
inc
repnz
pop
xchg
pop
push
in
adcl
lea
mov
jl
js
in
xchg
ljmp
fwait
pop
fdivr
sub
es
es
pop
stc
fcmovb
push
movsl
enter
std
lcall
sub
or
cld
lods
mov
and
hlt
sub
push
test
sub
andb
and
cmpsb
ror
adc
lods
rolb
pop
repnz
rcrb
out
pop
xchg
imul
mov
mov
lret
leave
repnz
mov
sub
add
lods
sub
jae
jecxz
and
and
mov
add
imul
rcl
push
push
outsb
push
roll
mov
fbstp
sbb
roll
jg
fucomi
sub
fiadds
adc
lahf
sub
inc
pop
rcrl
jge
dec
push
pshufw
adc
jle
cmpsl
mov
sti
imulb
cli
movsl
sub
hlt
mov
in
mov
xlat
inc
pop
inc
mov
push
pop
call
lret
mov
xor
stc
mov
lahf
xor
imul
xor
mov
push
dec
jo
mov
inc
hlt
outsb
roll
stos
sbb
mov
js
xchg
or
mov
stc
mov
clc
sti
clc
push
jb
pushf
shrl
shrl
jo
dec
sub
inc
testb
xchg
inc
lahf
jae
repz
mov
mov
ja
sbb
xchg
stos
mov
jo
adc
dec
jp
mov
stc
test
icebp
mov
daa
dec
add
and
and
inc
jmp
scas
push
fisubs
mov
fwait
int
cli
cmp
jle
push
mov
sbb
jbe
dec
jg
push
sbbl
xchg
mov
inc
jmp
fistpll
xor
jno
sub
jle
inc
incb
fstps
pop
jb
lea
insl
adcl
daa
push
cmp
and
pop
stos
fcoml
mov
sub
jbe
inc
das
jge
scas
outsl
out
clc
into
inc
adc
mov
dec
subb
cmp
sbb
cmc
into
stc
adc
adcb
test
pop
xlat
test
dec
push
xchg
mov
test
fiadds
push
and
xor
popa
sub
mov
lods
mov
mov
or
stos
or
sarb
pushf
lret
mov
insl
mov
fistpll
mov
dec
dec
sub
fsubrs
decb
push
and
mov
gs
jae
lret
push
sub
in
push
fsubr
lahf
ss
dec
pop
cmp
outsl
sti
inc
idivb
dec
push
cmp
lods
inc
sub
mov
sbb
xlat
pop
xchg
dec
sbb
sar
movsl
js
cmp
inc
push
cli
ret
dec
test
add
xchg
mov
push
ret
push
mov
sahf
or
jmp
dec
jg
notb
jo
sahf
xor
add
sub
rol
jbe
fdivr
ret
cmpsb
ret
sbb
ror
and
mov
push
xor
mov
pop
add
imul
pop
iret
inc
ror
xchg
dec
out
popf
jmp
ret
push
call
and
ret
mov
jbe
xchg
xor
fwait
xorb
push
pop
jmp
fisttps
inc
mov
xor
mov
test
lea
xchg
loope
lcall
lret
dec
test
jmp
aad
and
add
call
jl
or
jb
adc
inc
int3
sbb
mov
cmp
jl
loope
and
pop
push
push
bswap
enter
outsb
adc
out
inc
jo
mov
fcoml
test
pop
popa
nop
fdiv
pop
repnz
mov
fstpt
inc
test
cmc
inc
mov
xor
add
push
xor
in
fiadds
xlat
push
adc
cmp
movsl
cmp
ss
pop
ljmp
testb
mov
push
repnz
nop
popf
nop
int
test
scas
cmpsb
hlt
ret
push
pushf
fdivrs
xor
cmc
jl
fwait
pop
outsb
lods
push
enter
jg
sahf
stos
or
jbe
fistpl
push
ja
scas
cmpsb
push
mov
nop
gs
popa
movntq
out
dec
pop
and
lods
popf
lods
sub
sub
xor
pusha
mov
nop
and
jge
mull
push
cmc
mov
loope
sbb
test
shll
sbb
sarb
sbb
xchg
jg
shlb
ret
push
into
gs
sti
das
lods
push
lds
sub
xor
add
add
xchg
clc
jmp
inc
imul
fsubrl
xchg
xchg
mov
arpl
cmp
imul
dec
pop
in
arpl
jbe
adc
dec
sti
inc
jne
mov
addl
jb
lods
xchg
fisubs
repz
fwait
xchg
test
xchg
mov
cmp
sub
pop
cmp
dec
and
or
adc
stc
icebp
adc
cmpsb
outsb
in
lds
jg
mov
mov
add
or
inc
arpl
mov
cld
or
push
or
outsb
in
xchg
cltd
sub
mov
addr16
inc
adc
clc
lcall
in
adc
sahf
test
inc
ja
in
ljmp
jle
stc
xchg
pushf
pop
jmp
cmp
xor
sbb
test
mov
add
adc
sub
cmc
ret
mov
outsb
jecxz
ljmp
fdivrl
daa
dec
test
and
leave
mov
out
lret
add
in
mov
stos
mov
gs
pushf
xor
cli
stos
mov
mov
and
lea
bound
inc
jmp
leave
xorb
rcrb
iret
test
stos
push
imulb
in
movsb
out
ss
add
aas
pop
shrl
pop
hlt
shll
push
pand
sbb
or
sbb
mov
mov
cmpsl
stc
push
movsl
enter
push
popf
popa
mov
pop
fdivr
insl
lds
clc
cmp
cmp
adc
stos
out
xchg
not
fs
sidtl
je
mov
cli
jno
ret
push
addr16
scas
aam
pushf
in
in
pusha
xorl
and
add
inc
dec
lahf
icebp
or
inc
pop
orl
ficompl
and
mov
lcall
into
inc
or
insb
sbb
adc
cmpb
andl
test
mov
sbb
pop
jp
outsb
pop
mov
sbb
sbb
out
aad
pop
cmp
xor
sahf
pusha
fmul
sub
icebp
sub
rcrb
test
jne
dec
push
pop
dec
add
pusha
flds
jg
and
push
bnd
inc
insb
test
data16
into
cmpsb
cmpsb
cmp
xchg
push
pusha
xor
add
xchg
pop
pop
mov
dec
rcl
pop
nop
inc
stos
ret
pop
adc
xchg
testb
push
popa
jl
mov
scas
pop
push
jmp
gs
pop
xorb
js
mov
add
xchg
hlt
cmp
mov
fs
cmp
mov
add
js
dec
mov
pop
leave
lds
in
mov
icebp
je
push
fidivrs
cmpsl
testb
pusha
adc
inc
jns
imul
mov
rorb
mov
cmp
pusha
sbb
inc
jns
imul
mov
rorb
mov
cmp
or
inc
js
insl
and
dec
add
rorb
mov
and
pusha
xchg
push
and
jns
pop
nop
leave
mov
rorb
pop
outsl
ss
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
add
adc
push
add
and
xor
movsb
or
sbb
sub
cmp
dec
hlt
fld
insb
aam
and
xor
add
adc
fs
je
inc
in
push
cld
movsb
or
jl
sub
cmp
dec
hlt
pop
les
aam
and
xor
add
adc
fs
je
inc
in
push
cld
movsb
movsb
mov
testl
xor
mov
ja
in
and
je
iret
ss
clc
xchg
outsb
adc
jns
mov
dec
fs
mov
icebp
lret
dec
dec
lock
mov
jecxz
sub
loope
lds
sub
int3
pop
pushf
sarb
inc
gs
movsb
icebp
fsubp
jnp
inc
inc
dec
jge
mov
cltd
xor
mov
mov
xlat
movsb
jo
shll
mov
fldt
outsb
sub
jg
inc
stc
push
jg
lock
dec
xchg
rcrl
mov
fistpl
or
inc
lret
pushf
mov
fistps
jns
sbb
cmp
cmp
les
jge
mov
add
adc
fs
je
inc
in
push
cld
movsb
or
sbb
sub
cmp
dec
hlt
pop
les
lds
or
adc
push
subl
inc
sahf
push
lods
jno
and
cld
shll
dec
rcll
das
mov
sub
lds
insl
les
faddl
cld
movsb
or
sbb
sub
cmp
dec
hlt
pop
les
and
xor
add
adc
fs
je
inc
in
push
cld
movsb
or
sbb
sub
cmp
dec
hlt
pop
les
and
xchg
aad
push
xor
mov
xchg
dec
cmp
out
ret
inc
push
mov
stc
insl
mov
dec
mov
daa
mov
hlt
int
divl
push
xchg
jmp
gs
repz
decl
aad
jp
add
in
fnstcw
enter
push
pop
add
mov
enter
xchg
sahf
lods
pop
jp
mov
mov
mov
push
js
jmp
and
fwait
push
pushf
dec
data16
aas
push
xor
testl
notb
push
ficoms
scas
and
scas
inc
repz
fwait
ljmp
sbbl
addr16
and
push
int3
ret
push
jo
push
and
or
adc
mov
sbb
xchg
add
fimull
mov
sub
mulb
pop
adc
aad
cld
test
lahf
leave
adc
inc
pusha
pop
mov
sbb
mov
mov
inc
dec
ret
jnp
imul
popf
xchg
clc
out
or
movsl
ljmp
rcl
in
out
push
mov
test
scas
pop
or
mov
imull
insl
testl
lret
push
and
out
loopne
fisubs
jmp
cmp
mov
fstpl
mov
pusha
mov
lcall
adc
push
and
fimull
ljmp
jo
mov
mov
mov
mov
mov
bound
and
inc
mov
xor
fdivrs
lock
cwtl
push
popa
lds
xor
in
push
scas
mov
out
cwtl
dec
push
push
lods
xchg
or
cs
andb
and
daa
cmp
jecxz
lods
inc
xor
shll
in
push
add
inc
lock
stos
divl
jge
mov
sub
jle
mov
mov
fdivr
pushf
xchg
adc
and
cmp
add
sbb
dec
pop
fiaddl
gs
push
dec
or
lcall
lds
scas
add
imul
sub
les
shl
jnp
int3
mov
cmp
jns
arpl
mov
and
sbb
add
adc
pop
push
xchg
mov
lret
sub
outsl
fisttpll
add
xchg
jmp
mov
pushf
xor
cmpsb
mov
jbe
not
mov
or
mov
inc
jbe
jmp
sbb
shrb
xchg
stos
xor
sub
rorb
adc
out
pop
cmc
mov
sti
pop
mov
pop
mov
scas
fwait
mov
xor
push
mov
xchg
mov
cli
popf
leave
jle
mov
ss
rclb
push
bound
jg
cltd
dec
pop
adc
pop
out
mov
jo
cwtl
movsl
not
pop
js
fdiv
es
fs
cmpsl
ret
fisubl
add
and
jbe
aaa
pop
outsl
ds
popa
scas
inc
fisubs
push
jle
jmp
mov
cmp
scas
jno
cmpsb
loop
test
adc
mov
scas
adc
mov
in
jo
sub
or
sbbb
addl
push
jns
push
xchg
and
stos
dec
addr16
mov
sub
and
movsl
and
xchg
and
mov
pop
addr16
in
aam
jmp
or
aas
mov
dec
mov
jne
jns
call
adc
mov
mov
mov
jg
out
pop
nop
add
inc
push
pop
or
adc
push
jp
lahf
imul
shll
out
mov
sbb
jle
xlat
mov
pop
push
push
xchg
loope
cmp
pop
sub
sub
fwait
mov
push
push
add
out
xchg
mov
push
dec
das
idivb
xchg
xchg
mov
inc
mov
or
mov
cwtl
int
test
add
fstl
imul
mov
stc
and
scas
out
addr16
adc
pop
xor
fcompl
jle
into
pop
subl
and
add
ja
mov
cmc
addr16
cmp
aam
ljmp
adc
filds
sub
stos
dec
ja
cmp
sbb
push
push
push
xor
lods
fstpt
cwtl
gs
ljmp
push
sbb
imul
push
in
mov
test
push
sub
or
dec
in
nop
clc
test
mov
aam
dec
rep
xlat
xor
movsl
addr16
fs
xor
in
mov
movsb
xchg
mov
mov
lods
fwait
and
xor
addl
in
sahf
xor
js
stc
adc
xchg
add
fnsave
xchg
sahf
and
or
lahf
sbb
cwtl
ss
mov
rcrl
pusha
out
pushf
leave
aad
adc
movsb
cmpsb
pop
and
mov
movsb
inc
out
xchg
iret
jno
mov
xchg
lret
mov
push
aad
mov
adc
loop
data16
iret
pop
dec
sbb
mulb
enter
pushf
dec
inc
out
sbb
mov
clc
adc
push
and
les
ljmpw
adc
popf
pusha
test
inc
cmp
jmp
daa
cmc
aad
cld
cmpsb
fs
cmp
fmul
sbb
addr16
out
push
je
pop
pushf
mov
dec
jne
scas
lods
push
loopne
dec
xor
push
pop
adc
sbb
push
pop
inc
roll
fcoml
in
in
add
fwait
xor
icebp
and
adc
sub
mov
jae
lea
fcoms
xchg
stos
mov
xor
or
scas
add
test
cs
mov
negl
add
gs
inc
add
and
sbb
aam
jle
cmc
and
repz
fildll
jecxz
and
int
out
aaa
jmp
or
sub
clc
aaa
lahf
cli
and
xor
divb
or
out
push
mov
es
dec
inc
mov
jp
sub
mov
push
ds
cmp
addr16
cltd
shl
dec
xchg
mov
mov
push
mov
jne
xorb
lds
jo
xlat
jne
add
scas
cmpsl
and
dec
fsubrl
je
pop
fcomp
push
filds
ljmp
repz
lods
xchg
jge
fisttps
call
or
jmp
cltd
loopne
mov
out
stos
cmc
adc
in
mov
mov
xchg
fwait
cli
outsl
lea
stc
out
fs
loopne
pop
dec
je
jns
pop
lret
dec
sahf
add
jg
xchg
out
stc
sbb
cmp
sarb
inc
out
popf
imul
sbb
aaa
push
fwait
mov
popf
mov
rorl
adc
push
sub
shll
fsubr
test
xchg
fdivl
scas
fs
jmp
jge
cmp
call
enter
xor
jge
lahf
inc
dec
pushf
loope
adc
hlt
leave
push
add
or
pop
mov
xorb
mov
lock
adc
scas
in
out
jl
mov
sahf
addr16
xor
ret
imul
xor
sub
bound
icebp
adc
cmpsb
sbb
pop
cmp
adc
les
dec
pop
or
repnz
jmp
jge
or
jns
push
jo
mov
pop
sub
cld
fadds
fildll
push
xchg
out
push
jg
out
mov
imul
repnz
cmp
xchg
arpl
cmp
insl
xchg
xor
xchg
jl
and
sahf
mov
movsl
inc
dec
rcll
or
and
add
das
push
divb
ja
shrl
stos
icebp
and
jne
add
pop
or
inc
dec
and
sub
xchg
jg
sahf
adc
pusha
ficoms
stc
sbb
rcrb
adc
arpl
popa
push
mov
jno
test
and
rcrl
dec
mov
jb
in
jno
pop
pop
js
jg
rcll
notb
les
clc
cs
jg
pop
mov
inc
push
lret
fs
test
jns
arpl
sbb
dec
push
dec
sub
cmp
test
xchg
int
mov
pop
in
cmp
mov
pop
cltd
sub
xchg
ret
xchg
cs
jp
pusha
dec
repz
imul
cmp
lret
outsl
jo
enter
pushl
out
mov
xor
dec
icebp
sti
sub
cwtl
sub
mov
add
movsb
adc
sbbb
ficoms
push
or
xor
loop
mov
cli
jle
lret
lds
xor
dec
push
push
fcoml
iret
fmul
mov
mov
inc
test
popa
sub
mov
jae
in
js
popa
je
ja
sbb
ja
test
sti
and
mov
jecxz
enter
mov
and
add
sbb
in
pop
add
popf
mov
xorl
mov
push
pop
and
mov
push
and
xor
xchg
push
mov
mov
divb
fmull
sbb
rolb
clts
adc
imul
or
jbe
sub
push
movups
add
pop
pop
loopne
mov
mov
pop
mov
imulb
add
shll
dec
fistpll
aas
push
push
fnsave
fs
mov
loope
arpl
cmc
sahf
popw
bound
mov
or
scas
pop
rorb
mov
add
lret
pop
push
inc
mov
push
shrl
js
std
popa
add
sarl
xchg
lods
mov
jbe
jnp
dec
stos
push
inc
out
mov
inc
stc
adc
add
jae
push
push
cmpsb
cltd
lds
jb
popa
xor
add
in
sub
sahf
mov
add
rol
test
nop
shlb
and
xchg
adc
add
sbb
dec
fildl
les
mov
pop
leave
and
dec
lea
lret
call
div
and
jno
fidivrs
dec
outsb
xchg
xchg
mov
mov
mov
shrb
or
or
pop
shrb
in
mov
fimuls
push
leave
popl
cmpsl
pop
mov
xor
jmp
bound
pushf
aaa
xor
push
pop
mov
cmp
ret
mov
pop
or
scas
mov
pop
fidivrs
push
fwait
adc
rcl
jl
movb
sti
call
fxch
fadds
cmp
in
push
jle
in
pop
mov
cwtl
scas
inc
xor
repnz
pop
movsl
lcall
xchg
int
insl
push
fs
cmpsl
fistpll
or
dec
dec
test
jo
and
jo
fstl
mov
cli
rcll
lret
mov
cwtl
and
pop
ss
test
mov
ret
mov
and
pop
push
mov
into
mov
or
jbe
je
jno
shll
cli
push
mov
and
mov
mov
sarl
loop
es
jae
mov
repnz
push
int3
arpl
sahf
mov
fisttpll
vmread
xchg
mov
dec
mov
in
mov
out
mov
std
movsl
repnz
jl
cmp
mov
fidivl
mov
inc
and
shl
aam
sbb
xor
ss
push
pop
and
fisubl
rorl
out
rorb
jl
pop
pop
fiaddl
out
dec
xlat
subb
pop
rorb
mov
and
xchg
lock
xlat
nop
es
adc
shl
pusha
les
mov
xchg
mov
xchg
lret
into
imul
les
sub
gs
mov
repnz
scas
add
inc
lret
push
push
outsb
pop
hlt
pop
cmp
jns
adc
repnz
clc
xor
stos
or
sbbb
mov
xchg
ljmp
stc
add
add
inc
sti
cmp
adc
mov
mov
pop
fiaddl
jmp
mov
push
xor
xor
jecxz
add
fcmovnb
sbb
add
pop
clc
stc
adc
cmp
adc
imul
or
cmp
and
add
gs
ljmp
or
data16
ds
dec
imul
jmp
jae
sub
jno
test
fcompl
stos
adc
add
mov
jno
fdiv
stc
scas
sbb
xchg
xor
push
cltd
mov
add
ret
pop
es
push
pop
mov
mov
imul
dec
je
in
jnp
icebp
cld
pusha
fs
arpl
pop
inc
dec
lods
ret
insb
mov
cmp
cmpsb
adc
add
adc
cmc
mov
scas
jo
jno
lea
cmpsl
in
es
pop
out
or
ja
decb
cs
jns
lock
stos
jo
lret
mov
lcall
push
leave
push
in
in
lcall
lahf
add
rclb
cmp
shll
inc
mov
jmp
aam
fidivs
movsb
dec
fdivl
ds
push
xchg
inc
int3
push
stos
fidivrs
inc
fstp
mov
lahf
lret
sbb
and
mov
mov
jno
dec
and
jns
sub
fwait
jne
jecxz
cmpsb
jmp
scas
sub
adc
inc
es
xor
sahf
jle
or
lods
sbb
out
les
sub
ret
repz
sbb
roll
or
jbe
push
push
aad
test
outsb
jbe
aas
add
or
imul
jae
into
arpl
add
jne
das
hlt
dec
cltd
inc
push
cmpsl
push
pop
ja
mov
rcrb
cmp
adc
imul
cmp
leave
inc
and
mov
cmpsl
test
jg
loopne
roll
xchg
mov
ja
mov
loopne
cmp
mov
pop
xchg
push
xchg
ljmp
sub
mov
add
add
fst
iret
pop
orb
mov
rcrb
into
xchg
cmp
sbbl
jge
loopne
sahf
push
aad
mov
in
pushf
or
daa
cmpb
pop
testb
jo
outsb
ss
fnsave
mov
mov
fdivr
int
mov
xor
mov
stos
push
pop
xor
enter
pop
dec
and
jne
mov
dec
jne
mov
insl
xchg
repnz
sbb
idiv
jnp
lock
push
pop
sbb
scas
adc
pop
pop
jg
dec
pop
jno
push
push
mov
das
mov
sub
cld
ljmp
nop
jge
daa
ficoms
in
adc
outsb
mov
add
sar
pop
inc
orl
outsl
pop
and
cmp
loopne
les
inc
les
xchg
dec
imul
add
ljmp
outsb
pop
rol
inc
add
adc
and
xor
push
js
xchg
mov
enter
pop
adc
cs
mov
sbb
fistpl
dec
nop
mov
les
jne
add
pop
iret
mov
in
idivb
dec
fists
adc
or
clc
fwait
mov
mov
fsts
xor
pop
mov
xchg
mov
pop
jge
adc
adc
sub
ss
arpl
outsb
mov
out
cmovbe
or
mov
sbb
push
push
es
ret
int
pop
push
cltd
mov
add
or
adc
out
xor
jnp
movsb
jno
mull
or
and
mov
cmc
add
lret
bound
sub
or
push
sahf
jns
mov
test
sub
pusha
sub
or
add
xchg
mov
adc
lcall
repz
push
je
add
xor
fs
xchg
xchg
fiaddl
int
add
inc
fstpt
repnz
decb
dec
adc
sbb
cmc
out
scas
mov
push
mov
loopne
addr16
lock
jo
push
adc
add
push
lret
xor
xchg
ds
push
jl
inc
adc
pop
sar
mov
icebp
shrb
sbb
pushf
mov
jmp
pop
xor
outsb
pop
iret
inc
sub
sbb
ljmp
sahf
xor
test
jo
inc
add
push
rolb
xchg
in
inc
or
arpl
movsl
popf
imul
xchg
call
inc
call
mov
xchg
pop
sbb
movsl
dec
out
sub
push
mov
push
iret
sbb
dec
outsl
cmp
sub
adc
aas
cmpsl
popf
and
xor
cmpsb
ds
cli
and
xlat
dec
mov
jae
cmp
jns
jnp
es
fisubrl
pop
sbb
fdiv
adc
sbb
push
rep
stc
sahf
xor
push
cmp
mov
push
sub
divl
lret
dec
mov
aaa
gs
mov
xchg
sbb
lods
lret
aaa
push
pop
adc
pop
addb
and
adc
push
mov
test
in
ja
xor
push
xchg
pop
filds
lahf
push
push
fldt
push
js
add
insb
adc
mov
jl
and
icebp
mov
xlat
scas
jl
ljmp
xor
add
sub
jno
inc
js
cmpsb
clc
cmovp
cmp
and
fnsave
inc
mov
add
pop
fists
aad
xor
cmp
test
sbb
mov
jnp
add
clc
or
movsl
jb
push
adc
inc
rclb
iret
jno
fdivp
push
sbb
outsl
outsl
enter
out
stos
loop
dec
mov
mov
fwait
mov
cmc
inc
popa
andl
aam
xor
popf
adc
jns
and
fxtract
mov
pop
add
adc
popa
ds
mov
cld
imull
inc
xchg
loopne
ljmp
pop
das
mov
and
sbb
xchg
xor
das
and
mov
or
mov
rcrb
std
mov
gs
jns
arpl
mov
in
adc
fiadds
aas
jp
vmwrite
push
xchg
and
aas
jb
pop
mov
dec
dec
inc
nop
sbb
test
inc
ret
sti
xor
cmp
fidivl
cwtl
push
btr
mov
mov
jae
and
fistps
fcomps
out
gs
cmp
scas
mov
mov
insl
push
push
sbb
daa
jp
xor
mov
jge
ss
mov
mov
cmp
xchg
loop
or
icebp
push
push
repnz
jmp
mov
mov
in
mov
jo
inc
fwait
cld
out
push
mov
scas
icebp
orb
insl
and
push
or
mov
jle
cmpsl
jecxz
mov
pop
jle
jne
jb
je
arpl
aad
popa
push
pop
in
repnz
inc
data16
pop
imul
xchg
ret
add
add
jne
loopne
fcompl
sti
fistl
add
or
fcompl
das
bound
mov
mov
cmp
xor
dec
sbb
test
pop
jo
pushf
loope
fwait
mov
imul
add
sbb
mov
fidivrs
fstps
mov
cwtl
mov
fs
jl
std
movsb
xchg
add
adc
mov
xchg
mov
mov
mov
int3
mov
cli
mov
jg
clc
push
pop
jae
clc
sbb
andb
ss
es
and
jp
xor
fldenv
cld
inc
ljmp
dec
shrl
std
dec
jg
cltd
push
stos
mov
and
outsl
inc
or
stos
sbb
clc
mov
lahf
icebp
xchg
js
or
mov
pop
mov
shr
mov
jp
outsb
inc
loopne
cmp
fwait
mov
in
shll
cmp
roll
add
mov
bound
popf
ds
ja
push
imul
out
mov
fisubrs
fstpl
pop
popf
mov
dec
in
push
xlat
cmp
stos
subl
movsl
xchg
data16
mov
loop
lods
jne
xlat
cmp
xchg
int
ss
mov
lahf
and
stc
cmp
sbb
out
mov
imull
les
pop
mov
cmp
or
mov
pop
mov
ljmp
cld
push
pop
outsb
inc
mov
and
popf
scas
ss
xor
mov
mov
mov
je
out
repnz
lret
sbb
mov
lock
lahf
xchg
sub
adc
ret
mov
testb
sub
pop
xchg
mov
mov
sbb
cmc
inc
call
push
cmc
ja
fs
mov
jl
out
orb
rep
mov
mov
mov
scas
scas
ficoml
daa
das
insb
loopne
xchg
in
pop
imul
cmp
in
test
andb
mov
clc
movsb
imul
jp
sbbb
and
cmp
adc
repz
ud0
add
rcll
bound
jo
push
outsl
lods
adc
fs
je
inc
in
push
cld
movsb
or
sbb
sub
cmp
dec
hlt
pop
les
and
xor
add
adc
fs
je
inc
in
push
cld
movsb
or
sbb
sub
cmp
dec
hlt
pop
les
and
xor
add
adc
fs
je
inc
in
push
cld
movsb
mov
in
hlt
pop
les
and
xor
add
adc
fs
je
inc
in
push
cld
movsb
or
mov
sub
dec
xchg
les
xchg
sub
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
nop
in
or
cmp
sub
xor
imul
pop
xchg
pop
test
sub
cmp
fstpl
fimull
fidivrl
cli
sub
jnp
imul
mov
fwait
mov
sbb
sti
cmp
roll
ret
or
and
xor
arpl
mov
into
push
stos
and
lods
push
jmp
sbb
bound
mov
xchg
cltd
in
stos
mov
mov
std
jle
out
and
xor
dec
ljmp
mov
icebp
jae
sbbl
arpl
pop
dec
sahf
sti
mov
inc
in
mov
or
mov
dec
cmp
test
cmc
lret
pop
lret
addb
or
cmp
scas
jnp
mov
mov
je
pop
es
push
roll
mov
mov
fidivrl
mov
sub
mov
jp
mov
sti
ret
adc
jmp
cmp
aaa
popa
adc
mov
movsl
lahf
xchg
scas
jnp
lret
mov
or
ficompl
sub
xor
bound
xchg
jb
arpl
sub
and
cmp
and
ds
repz
adc
data16
cwtl
dec
sti
pop
xchg
arpl
or
sub
jns
pop
incl
dec
loop
ljmp
imul
pop
cli
pop
repnz
lcall
fwait
pop
mov
jp
or
sbb
sub
cmp
lret
or
cmp
sub
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
mov
data16
adc
or
dec
cmpsl
mov
stos
loop
xchg
or
iret
pop
or
insb
dec
inc
mov
add
cli
add
push
movsl
stc
pop
pop
adc
cmpsl
cmp
or
adc
inc
pop
jge
rcr
sbb
xchg
sub
loop
loope
pop
mov
or
or
repz
sbb
mov
aam
cmpsb
jbe
ss
lahf
fnstsw
orl
inc
mov
mov
sub
push
pusha
sbb
and
clc
push
sbb
mov
cltd
das
push
mov
popa
lods
pop
xchg
dec
and
stos
sub
scas
std
scas
and
je
jb
out
and
sbb
cli
daa
push
loope
cld
aas
sub
adc
jecxz
or
lret
push
fisubl
xchg
js
and
addr16
mov
orl
dec
test
inc
sti
lods
mov
int
pop
mov
mov
xchg
mov
clc
push
or
or
push
hlt
bound
call
lahf
lret
cwtl
sub
or
int
and
or
jne
xchg
xchg
sub
aam
add
es
xchg
pop
xor
movsb
push
mov
ljmp
mov
into
out
std
inc
and
push
xlat
mov
repnz
out
lea
mov
jp
and
add
lea
pop
jl
xchg
roll
jne
adc
fisubl
dec
imul
mov
xor
test
scas
jns
sub
mov
adc
leave
clc
outsb
mov
out
mov
dec
xchg
mov
orb
cli
jmp
movb
pop
dec
push
dec
outsl
mov
jbe
cld
sub
stos
sub
lret
adc
or
jbe
fdivl
out
lahf
jno
jnp
inc
pushf
cmc
lods
mov
shll
sub
fsubl
pop
imulb
pop
push
jge
add
pop
cmp
sub
repz
faddp
inc
push
pop
add
jl
bound
sub
repnz
xchg
add
xchg
sub
out
std
loope
xchg
mov
dec
cmp
dec
sbb
jle
and
test
mov
mov
loope
lea
dec
loopne
fisttpll
or
cs
push
add
enter
xlat
adc
lods
fcoms
pop
jns
pop
pop
dec
mov
ljmp
mov
scas
ror
sti
sbb
jl
in
mov
sub
dec
push
insl
jae
push
loope
add
data16
rcl
xchg
outsl
mov
dec
xchg
in
sub
dec
pop
pop
sbb
addr16
xchg
push
mov
mov
jmp
rcr
or
hlt
frstor
pop
out
cmp
dec
jbe
cmpb
push
sti
pop
sbb
inc
push
and
in
cld
and
fisubs
mov
iret
or
jbe
insb
icebp
push
adc
negl
hlt
adc
and
loope
and
mov
xchg
add
movsb
xchg
pop
stos
adcl
mov
jg,pt
mov
cltd
aas
mov
jle
shll
inc
sub
jno
aas
xor
add
push
scas
and
jmp
inc
cmp
add
fdivs
inc
pop
sub
js
pop
push
pop
in
lods
aam
sbb
pop
std
into
ds
iret
jo
mov
cmp
mov
mov
push
ret
jb
scas
rcll
jl
in
mov
scas
sub
imul
adc
and
imul
pop
aad
je
xchg
adc
mov
outsb
fcom
test
cwtl
test
rcrb
lcall
jle
cltd
ffree
xor
into
test
addl
shll
or
mov
aam
popa
pop
ret
mov
jnp
xchg
mov
sub
mov
sti
mov
ja
add
aas
adc
aam
int
fcmovu
mov
insb
inc
xchg
push
out
stos
jg
andb
lret
out
jno
add
imul
mov
mov
cmc
pop
sub
lahf
jmp
xchg
jo
mov
cmpsl
jecxz
ljmp
clc
hlt
rorb
enter
dec
jl
or
and
cwtl
jbe
cwtl
ret
rorl
test
xchg
mov
pop
pop
jl,pt
mov
sub
int
xor
scas
fimuls
mov
sbb
dec
pop
gs
xchg
inc
divl
clc
clc
and
sub
cltd
mov
dec
and
jb
jl
add
out
xor
test
aad
push
jge
clc
push
test
cmc
push
popa
shlb
in
jbe
push
stc
dec
call
mov
int
popf
enter
std
pop
mov
adc
jne
test
xorl
out
cmp
in
xchg
sarb
movsb
daa
push
xchg
xlat
cltd
inc
enter
pushf
push
fbld
ja
pop
bound
rcll
lock
lods
pop
imul
loope
xchg
clc
call
xorb
mov
enter
sub
iret
test
adc
mov
xchg
or
mov
pop
or
and
insb
cmpsl
or
in
fxch
ret
inc
loop
cmp
xchg
cmp
push
push
sbb
cmp
lock
movsl
in
and
and
cli
sti
arpl
dec
insb
sub
mov
add
cli
lock
popa
jnp
jg
add
dec
idiv
mov
add
xchg
sbb
jae
mov
dec
daa
dec
cmc
into
outsb
push
xchg
int
xor
push
mov
sbb
sbbb
mov
aam
ja
into
int
pop
int
es
dec
outsl
jno
pop
lods
mov
cmpsl
sti
xchg
mov
push
sbb
fbstp
lods
jnp
or
add
std
mov
adc
cmp
aas
adc
mov
mov
icebp
into
data16
mov
mov
shlb
jg
jnp
sub
arpl
in
cltd
cltd
jne
push
out
push
xorb
inc
add
add
out
test
pop
xchg
xchg
xor
pop
call
call
mov
xchg
jnp
mov
scas
sbb
pop
add
loopne
jmp
or
inc
lock
mov
in
mov
fwait
mov
push
jg
adc
adc
cs
ret
mov
test
add
iret
hlt
in
adc
cmp
std
out
enter
mov
in
imul
sub
push
xor
xchg
jbe
mov
rorb
je
mov
or
or
and
mov
xchg
cmpl
lret
shlb
dec
fwait
xlat
push
jmp
push
and
add
push
sub
adc
adc
sahf
and
mov
and
les
pop
inc
cs
sub
sub
cmp
dec
out
or
ss
jo
stos
ret
lret
mov
lods
cmp
je
test
or
add
test
adc
jbe
stos
mov
xor
ret
int
popf
stos
ficomps
ja
aaa
ds
mov
in
lret
dec
xor
lret
cmpb
inc
mov
add
outsl
sub
lock
pushf
int3
out
in
xor
xchg
jle
fiadds
xor
neg
or
ljmp
cmpsl
mov
inc
pop
xor
dec
daa
aas
dec
jp
popf
push
insb
clc
mov
adc
aaa
cmp
lods
mov
fs
ss
das
sahf
xchg
inc
add
jge
fwait
out
mov
sahf
adc
mov
les
out
imul
xor
out
mov
dec
pop
shlb
xchg
cmp
mov
cmp
lahf
arpl
aam
dec
sub
dec
std
pusha
lods
das
sbb
push
xchg
lret
sbb
xor
xchg
pop
xchg
pop
stc
and
fistl
test
xor
or
subb
les
lds
or
lock
outsb
jecxz
pushf
js
jp
in
outsl
cmp
leave
mov
in
shrb
stos
mov
mov
adc
bound
mov
outsl
fisttps
imul
push
out
fucom
cmp
mov
and
aas
jo
movsl
leave
movl
movsb
cmpsb
dec
ret
incl
ret
xor
sbb
aaa
push
xchg
jl
lahf
push
fsts
xchg
mov
std
ljmp
popa
fdivr
xor
mov
movsl
or
rcrb
pop
xchg
jno
loop
pusha
popa
inc
inc
popf
push
je
out
jge
mov
shl
gs
sbb
and
mov
imul
sar
xchg
sti
repnz
rolb
dec
mov
and
mov
ja
ret
push
add
ret
inc
sbb
call
mov
notb
rorb
and
data16
dec
and
xchg
nop
pop
dec
dec
jmp
stos
scas
push
cwtl
adc
add
inc
mov
dec
insb
aam
sbb
clc
sbb
sti
movsb
lcall
jne
inc
std
inc
outsl
cltd
shrb
mov
loope
test
xchg
push
adc
leave
sub
xor
mov
pusha
push
aas
clc
dec
arpl
or
ficoms
push
inc
jnp
shlb
aam
add
jns
jge
or
sbb
sub
xorb
pop
daa
push
dec
movsl
out
push
enter
push
or
pop
leave
imulb
cmpsb
ret
fdivs
sti
jecxz
pop
insb
mov
jb
pop
jno
jecxz
mov
pop
movsl
or
jo
push
lret
nop
sub
xor
mov
in
je
inc
push
lcall
pop
dec
or
jne
mov
popa
sub
das
loope
popf
inc
aaa
xchg
fucom
push
push
dec
mov
popf
cltd
notb
push
or
jb
lds
call
insl
or
pusha
roll
pop
mov
cmpsl
push
out
movl
sbb
sub
inc
xor
xchg
rorl
std
xor
adc
jge
inc
pop
lcall
mov
in
and
mov
fisttpll
dec
add
test
scas
test
cmp
cmpsb
mov
loop
dec
jecxz
xchg
in
adc
mov
paddd
push
dec
sbb
cltd
mov
cmpsl
test
aam
xchg
les
dec
inc
stos
xchg
adc
stc
cwtl
ret
mov
cmp
movsb
out
mov
or
pop
pop
out
xor
cmc
es
pop
pushf
mov
fists
xor
fimull
lea
stc
insl
pop
loop
es
ja
and
mov
cmp
add
jle
mov
push
add
fsubrs
jo
js
add
aas
loope
sub
lock
aaa
cmpb
mov
bound
jg
push
adc
outsl
jns
loopne
gs
sub
sub
les
mov
mov
push
xchg
xchg
call
sbbl
movsl
insl
add
ficompl
mov
cs
xlat
ja
icebp
dec
cwtl
sbb
fisubs
cmpsl
test
inc
adc
mov
in
inc
aaa
xor
pop
out
pushl
xchg
neg
std
cltd
insl
mov
js
and
jne
sub
inc
jnp
daa
sub
sahf
push
out
addl
test
inc
hlt
lods
push
pop
cmp
cmpsb
mov
xlat
pop
inc
jnp
mov
jl
inc
lahf
insl
cld
inc
jns
xchg
cmp
test
js
sub
std
ljmp
jge
xor
or
jnp
cli
adcb
testl
fimull
sub
cmc
or
jmp
lret
xchg
je
adc
mov
shlb
inc
cltd
pop
jp
scas
sahf
repz
mov
lahf
sub
jns
mov
pushf
mov
shrl
stos
adc
cmpsl
or
cmp
sbb
pushf
lahf
or
aad
and
lea
pop
shrb
inc
jl
jmp
rorb
movsb
mov
inc
jae
push
enter
rcrb
fistl
test
mov
int
lea
push
inc
sarb
jbe
mov
or
cmp
loop
push
sub
sbb
stos
cmp
shll
and
jg
jne
pop
loopne
sub
xor
mov
clc
fcomip
sbb
dec
addr16
xor
sbb
int3
mov
jp
bound
adc
loop
lods
mov
shr
and
xor
nop
fwait
pop
mov
cmp
inc
imul
mov
xchg
mov
test
mov
lahf
popa
daa
adc
ss
mov
ret
call
cld
inc
mov
cmp
ljmp
adc
jnp
mov
outsl
mov
mov
mov
fdivl
into
shlb
call
rcl
mov
jne
add
inc
rcrl
sub
push
dec
outsl
and
addr16
inc
sub
sub
or
or
xor
pop
mov
xor
stos
add
xchg
aad
mov
shrb
push
daa
mov
xchg
xchg
pop
push
fbld
aas
mull
pop
out
dec
adc
sbb
fdivs
cld
pop
out
sub
adc
cmpsl
push
or
dec
pop
pop
or
ret
jno
dec
mov
pop
test
imul
mov
fdivs
mov
cmpsb
inc
jl
mov
mov
and
nop
loop
mov
fisubs
add
cld
dec
inc
mov
xchg
nop
push
inc
shrb
adc
mov
stos
in
shll
scas
adc
faddl
cmp
movsb
in
xor
loop
pop
mov
aas
xor
loope
or
push
dec
data16
mov
xor
xchg
sbb
lret
mov
mov
xchg
mov
icebp
loope
push
push
mov
push
push
jae
inc
mov
das
inc
cmp
enter
lods
nop
cs
sarl
mov
sub
adc
icebp
xor
sahf
dec
scas
inc
xchg
jmp
mov
ljmp
dec
popf
dec
push
out
mov
push
fwait
movsb
sti
and
dec
cmp
push
mov
divl
lret
mov
ret
mov
inc
xchg
dec
sbb
add
push
into
mov
add
xchg
iret
jecxz
aam
test
adc
shl
add
dec
fs
xor
push
dec
test
push
sbb
or
fbstp
andb
jmp
cmp
mov
push
sbbb
jnp
add
and
dec
cmpsl
scas
or
and
test
sub
or
in
inc
sbb
lahf
mov
int
std
add
les
std
out
cli
sahf
xchg
push
cmp
pop
cwtl
mov
outsl
xchg
and
mov
shrb
dec
xor
jge
mov
or
and
nop
or
neg
pusha
push
mov
pop
aas
mov
sbb
or
pop
hlt
ds
ss
scas
pop
mov
mov
mov
mov
dec
inc
or
clc
outsb
aaa
mov
out
or
in
sub
xor
sub
push
nop
inc
je
cmp
ret
test
shlb
imul
stos
sbb
and
mov
adc
adc
and
cmp
sarb
xor
jo
inc
fdivrl
fistps
xchg
andb
stc
jb
and
pop
pop
fldl
inc
in
xor
pop
xor
add
push
pop
xchg
pop
fs
and
aad
sub
xor
add
popf
push
sub
cmp
imul
push
out
sti
mov
mov
jae
xchg
sub
cltd
sahf
out
imul
sub
adc
xor
jb
xorl
shlb
jge
shll
mov
roll
xor
jne
gs
in
push
out
ljmp
cmc
cmp
std
adc
xor
scas
pop
repnz
popf
mov
lock
mov
push
push
test
dec
sahf
faddl
dec
stos
add
mov
push
out
mov
lret
stc
ficompl
repnz
jb
fdivrl
dec
jbe
out
nop
sub
sub
add
cmp
jns
and
pop
mov
enter
bound
xlat
and
cmp
or
decl
xchg
fwait
pop
in
push
out
sub
fistl
sti
icebp
dec
and
add
rcrb
cmp
das
rcl
inc
loope
mov
push
cmpsb
pop
movsl
roll
ret
mov
and
out
mov
jecxz
add
fs
fsubrp
xor
out
jmp
xchg
cmc
aas
add
jmp
rolb
jno
int3
push
cmpxchg
outsl
js
inc
out
test
mov
addl
imul
stc
sub
adc
shrl
dec
std
cmc
stos
sbb
ljmp
je
je
mov
lret
dec
jge
pop
fldcw
mov
fwait
jmp
aam
jo
test
inc
xorl
lds
movl
jne
mov
push
adc
lock
push
sarl
es
jbe
xor
dec
int3
add
enter
cmp
xor
xchg
fcmovnbe
mov
out
xchg
dec
mov
xchg
fcmovnu
rcl
inc
jns
mov
inc
loope
xchg
sbb
fs
push
fwait
mov
push
lea
hlt
xchg
add
sbb
popa
ljmp
icebp
inc
adc
cmpsb
testl
jg
push
subl
or
pop
cld
cld
cltd
sbbb
lret
pop
dec
fst
popa
ds
push
movsb
stos
les
jno
adc
pop
sti
dec
inc
enter
call
aas
mov
push
into
xor
loop
push
fcoms
jbe
mov
aad
xlat
sbb
ret
jbe
in
lret
sbb
dec
adc
ja
dec
adc
repz
enter
addl
push
faddl
lret
cli
xor
lret
and
pop
fwait
cli
sub
inc
fwait
in
lret
idivb
inc
shrl
dec
scas
into
fnstsw
xor
xor
adc
add
mov
cmp
loopne
test
popa
stc
pop
mov
hlt
out
mov
outsl
fstpl
sbb
lahf
jne
mov
adc
ljmp
popf
mov
loope
stc
jno
xorl
xchg
cltd
bound
xchg
sti
push
nop
sbbb
sbb
arpl
mov
sub
fstpl
int
inc
sub
rcrl
add
xchg
cmp
dec
or
icebp
movsl
jle
add
cmc
call
or
arpl
xchg
mov
imul
nop
arpl
mov
push
xchg
adc
std
ljmp
movsb
pop
cmp
les
imul
mov
mov
or
push
mov
and
xor
dec
cmp
inc
imul
sub
loop
mov
sbb
add
mov
pop
arpl
fstpl
shlb
lret
in
sbb
sub
popa
and
out
jb
mov
or
xchg
pop
or
cmp
scas
cmp
ja
sarb
sahf
sbb
xlat
je
push
int3
inc
xchg
inc
and
push
mov
imul
xor
dec
aam
push
pop
mov
mov
mov
mov
sub
mov
add
rol
mov
pop
xlat
sub
jmp
out
dec
pop
cwtl
lcall
loope
add
int
mov
sahf
xchg
cmp
xchg
mov
cmpsb
cmp
mov
xor
shl
int
adc
mov
outsl
push
and
mov
mov
fstpl
inc
daa
cmpsb
pusha
sti
adc
test
repnz
shl
adc
inc
jp
mov
cmp
pop
push
insb
and
push
sub
pop
cmpsb
es
incb
movsb
inc
xor
in
pop
xchg
pop
idivl
inc
jbe
add
xchg
cmp
cmp
scas
jo
stos
sbb
xor
scas
orb
pop
lock
push
insl
pop
jmp
in
sub
je
repnz
outsb
pushf
cmp
ret
mov
aad
in
push
and
scas
nop
or
xor
lret
out
jl
or
adc
sahf
xchg
in
mov
imul
in
adc
pop
mov
and
mov
lock
dec
or
int
rcrl
sbb
xor
scas
pop
and
sub
into
out
xchg
push
aad
das
mov
out
sbb
sub
inc
and
or
pop
fsubrs
or
addr16
je
xchg
mov
pop
mov
sbb
adc
shlb
mov
enter
dec
sub
dec
push
fcmovb
jno
pop
jns
dec
lcall
mov
adc
sbb
aaa
ljmp
xlat
mov
mov
push
call
sub
xlat
std
cmc
xor
and
cmp
cmc
fldl
mov
add
push
mov
shl
lret
or
cli
sub
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
or
cmp
sub
jnp
imul
mov
jp
or
sbb
sub
cmp
lret
or
cmp
sub
jnp
imul
mov
jp
or
push
lret
sub
or
sbb
or
cmp
sub
jnp
imul
jp
jge
xchg
xor
add
adc
mov
or
insb
xor
sub
popf
std
mov
std
popf
in
fnstsw
sub
insl
jge
insl
sbbl
lods
in
popf
std
in
cmp
std
int
cmp
aad
outsl
jge
insl
xor
dec
xor
icebp
mov
and
leave
mov
and
sub
xchg
mov
bound
aas
dec
lods
mov
clc
leave
repz
cmpsb
pop
inc
daa
repnz
jge
outsl
inc
clc
sub
add
and
and
inc
testb
fwait
adc
popf
jo
pusha
lods
mov
int
cmp
insl
or
gs
dec
shlb
and
popf
arpl
out
add
inc
dec
int
std
cs
fidivs
sti
fstpl
cmp
in
scas
into
adc
popf
shl
fisubrs
mov
jge
shr
fstpl
bound
movsl
cmc
lods
pushf
pusha
jb
mov
sub
addr16
insl
or
mov
in
lea
fnstsw
pop
dec
je
fs
jge
pop
bound
push
dec
dec
mov
mov
test
repnz
stc
mov
sbb
js
popa
dec
jge
sub
and
mov
lea
mov
mov
or
popa
push
xor
or
mov
std
in
std
popf
in
fnstsw
sub
insl
jge
insl
or
mov
std
in
std
popf
in
fnstsw
or
addl
lret
movsl
sahf
fwait
mov
jns
pushf
popf
or
stos
in
ss
icebp
leave
punpcklwd
outsl
sti
add
mov
scas
addr16
ret
lods
pop
and
adc
mov
leave
movsb
pop
push
pop
inc
mov
leave
adc
cltd
or
jg
fisubs
lahf
push
mov
sub
sub
test
sub
dec
pushf
lods
fcomip
cmp
push
push
cmpsb
mov
push
mov
sbb
xor
shl
sbbl
out
std
aaa
and
fisubrs
pop
inc
pop
movsb
push
je
and
mov
dec
arpl
sub
cmp
mov
pop
add
lock
lcall
std
lods
push
jp
jecxz
sarl
mov
orw
outsl
jp
ret
mov
fsubs
mov
iret
out
nop
adc
inc
movsl
icebp
mov
out
fcmovbe
jmp
cmp
mov
sarb
sub
jge
int3
int
loopne
ja
imul
adcl
jb
pop
cmpsl
subl
add
cmp
jge
fsubrs
pop
mov
or
lea
cmc
scas
and
mov
sbb
cmp
mov
inc
aam
mov
jg
fsubrs
rcll
leave
pop
out
ljmp
inc
and
shlb
pop
stos
push
cmpl
test
jmp
movsb
add
shl
das
jp
gs
int
xchg
xor
sub
lahf
mov
in
arpl
aas
stos
imulb
jge
mov
enter
mov
pop
arpl
mov
mov
nop
ja
sub
and
rcr
loope
xchg
cmp
dec
lods
stc
push
jns
mov
sub
adc
or
adc
movsl
mov
scas
or
xorl
addr16
enter
popf
ud2
mov
movsl
mov
sub
nopl
imul
icebp
outsb
arpl
jmp
push
mov
mov
jne
mov
test
cmp
xor
or
push
jb
fisttpl
outsb
push
mov
add
pop
jbe
lcall
sbb
mov
xor
sar
and
pop
pushf
lret
mov
stos
cmp
int
ret
ret
test
cmc
sub
sub
fcompl
andl
mov
adc
xlat
sbb
or
sub
movsl
pop
sub
cmp
mov
xor
push
dec
jecxz
mov
fwait
inc
movsb
subl
jg
mov
aas
mov
mov
cmp
xchg
clc
test
cmpsb
xor
fdivs
inc
or
mov
test
adc
push
rcll
repnz
mov
stos
popa
cltd
push
and
mov
rcrb
push
mov
dec
pop
test
outsb
mov
and
imul
push
push
dec
insl
iret
mov
das
imul
repnz
xchg
push
rclb
mov
aas
pushf
inc
inc
insl
sbb
xor
out
les
jo
cmp
mov
popa
adc
repnz
inc
mov
scas
cmpsl
idivb
mov
sub
jmp
jno
fwait
out
sub
int
pop
xchg
mov
leave
jns
mov
in
or
leave
mov
addr16
sar
leave
orl
lds
iret
xor
loopne
aas
movsb
xchg
std
and
xchg
add
push
das
add
cwtl
fcompl
sbb
and
out
movsl
cmpsl
mov
lea
out
and
out
cmp
cld
sub
xchg
push
push
je
adc
lods
and
cs
cmpsl
mov
jne
fmulp
mov
aaa
shl
cmp
xor
cmp
test
and
pop
outsb
sbb
pop
fidivs
loope
mov
jmp
push
aad
out
lea
push
sbb
ret
add
test
sbb
lahf
andb
dec
dec
repz
cwtl
in
cmp
orb
push
loopne
mov
scas
insb
aas
mov
and
add
mov
mov
icebp
enter
jp
sbb
mov
ds
inc
outsl
mov
rcl
xor
xor
mov
xlat
sbb
xor
ficoms
inc
pop
mov
push
xchg
mov
mov
jns
imul
arpl
clc
out
cltd
add
sbb
nop
inc
cmp
mov
enter
sbb
inc
outsl
or
mov
stos
sub
js
mov
sbb
cmp
add
outsb
outsb
push
jmp
xlat
push
in
bound
sbb
mov
sub
push
inc
jb
sub
aaa
dec
inc
mov
cli
and
das
push
mov
mov
mov
insl
inc
hlt
mov
cs
rclb
mov
pop
in
pushf
jl
outsb
mov
xrelease
popa
pushf
sbb
inc
mov
push
lods
cli
fwait
test
dec
pop
xchg
dec
push
xlat
imul
sbb
push
outsb
rcrb
mul
adc
js
movsb
pop
inc
sbb
test
movsl
mov
push
aam
in
test
in
xchg
mov
sbb
xor
outsl
mov
lods
push
insl
shrb
addr16
pop
mov
sarl
incb
jns
dec
inc
inc
jg
pop
cltd
in
in
push
fmul
or
sahf
rcrl
je
adc
outsb
xchg
sbb
insb
outsb
shlb
ljmp
xchg
movsb
jg
push
sbb
lahf
jb
test
in
addr16
mov
and
loop
fcmovbe
jb
mov
sub
cmc
sbb
subb
dec
loope
adc
out
aam
inc
dec
arpl
inc
sub
rolb
xchg
ja
rcrb
pusha
cmp
and
inc
mov
repnz
mov
pop
jecxz
dec
addl
inc
dec
shr
sahf
cwtl
repz
adc
daa
cmp
outsl
mov
sbb
je
lcall
push
jecxz
mov
sub
fisttpl
xchg
fldl
xlat
int
pop
pop
sbb
xor
xor
cmpl
loope
movsb
out
mov
test
mov
movl
xor
sarl
pop
sbb
insl
pop
mov
enter
xor
lock
xchg
movsb
sbb
cmp
in
call
dec
jmp
test
faddl
mov
xor
nop
add
pop
cmp
lods
push
hlt
push
cmp
or
xchg
jmp
dec
leave
xchg
gs
and
in
jecxz
les
and
dec
sub
mov
push
mov
adc
iret
mov
or
or
fcompl
lock
and
lret
mov
sbb
int
mov
sti
or
ja
dec
or
adc
rcrl
mov
shrl
pop
aam
movsb
xchg
enter
adc
imul
push
sub
ds
cld
mov
lahf
cld
out
adc
pop
gs
mov
mov
fs
fidivrs
movsl
pop
lods
notl
mov
xchg
mov
inc
adc
xchg
inc
cmp
lods
inc
stos
ja
aad
out
in
sahf
push
mov
data16
sbb
mov
mov
fsubs
ss
jb
lds
push
movsb
mov
pop
pop
call
cs
int3
dec
jb
dec
in
adc
sti
call
daa
fdivrs
jb
and
repz
std
sub
sbb
inc
scas
rol
jg
mov
lods
mov
fcmove
sub
push
pop
inc
add
daa
ficomps
sar
aam
lcall
add
or
adc
sub
sti
sti
int
ffreep
jnp
cld
cmp
in
test
vmaxsd
jecxz
mov
mov
iret
or
cld
std
inc
loopne
cmpsl
ret
out
push
testb
push
icebp
inc
xor
neg
xlat
jns
in
je
aam
push
push
jne
loop
xor
add
inc
add
adc
addr16
add
sub
cmp
pop
adc
sub
cmp
es
dec
lods
mov
in
jg
or
pop
pop
cld
scas
push
enter
cli
imul
fcoml
push
cmc
pop
sub
lahf
mov
mov
sub
push
mov
cmp
outsb
jle
lods
mov
call
addr16
xor
pushf
adc
pusha
addl
inc
xchg
out
arpl
lock
push
and
test
pop
lret
pop
and
pop
es
add
lock
clc
pop
daa
and
and
cmp
cli
sub
cmp
and
insb
adc
sub
test
push
inc
hlt
outsl
es
nop
mov
dec
and
ss
movsl
inc
mov
aas
jmp
incl
fisttps
xor
aas
push
adc
into
sub
sub
ljmp
push
insl
mov
movsl
push
rolb
std
stos
movaps
test
cmp
dec
lret
and
sub
cmp
in
insb
stos
cmp
lds
and
lahf
in
pop
in
pop
loopne
scas
mov
repz
sub
mov
xchg
xchg
push
ror
mov
push
lret
add
sbbl
inc
les
mov
sbb
add
add
xor
sbb
xor
or
loop
cs
cmp
sub
pop
movsw
xor
jb
test
stos
sbb
shll
pusha
test
mov
inc
pop
inc
jecxz
push
push
jge
mov
mull
dec
cmp
inc
sbb
pop
push
scas
in
sub
push
jecxz
pop
cmp
lret
or
pop
mov
test
sbb
push
pop
inc
js
dec
sahf
cmp
push
daa
pop
insl
out
cwtl
imul
cmpsb
mov
cmpsb
xchg
in
cmp
leave
dec
loop
xchg
sub
or
mov
push
push
or
sub
pop
cltd
inc
sub
sbb
cmpsb
xor
mov
hlt
dec
rcrl
add
jb
stos
push
xchg
pop
arpl
sti
sub
push
int3
add
inc
mov
roll
push
pusha
jno
xchg
dec
jne
in
into
mov
lret
les
add
and
mov
xor
lds
fwait
fwait
inc
repz
pop
cld
dec
mov
in
inc
pop
fwait
inc
and
fs
mov
in
jae
fwait
inc
add
movsl
ja
es
add
test
bound
and
aas
cwtl
and
sub
fidivrs
add
lds
sbb
je
xor
out
or
cmp
inc
mov
insl
test
or
mov
and
andl
push
xchg
leave
jle
ret
adc
ljmp
dec
dec
ss
and
in
mov
imul
out
ret
push
inc
and
pop
fcompl
mov
xchg
test
repnz
sarb
in
hlt
imul
lcall
sarl
into
add
test
es
lahf
gs
lret
adc
out
pop
mov
xchg
push
xor
cwtl
cltd
scas
loope
jnp
pop
add
adc
pop
rcr
jl
ret
xchg
pop
dec
outsl
sub
or
lahf
pop
adc
sbb
pop
loope
pop
hlt
loopne
jg
ja
cmp
andl
pushf
sub
insl
mov
scas
inc
int3
cmpsb
idiv
fidivrs
push
insl
into
cs
sbb
arpl
sbb
jne
repz
xor
mov
jo
mov
stos
gs
add
and
out
sub
push
xlat
ret
stc
ja
push
sbb
push
push
mov
mov
test
mov
and
ret
cs
ret
pop
push
fsubs
mov
cmp
aaa
mov
jmp
push
pop
xchg
call
xchg
repnz
repz
adc
ss
pushf
xchg
ret
addl
push
xor
cmp
adc
dec
std
xchg
dec
aaa
outsb
aad
loop
and
fildl
xor
pop
cld
lods
lock
test
int
jae
jle
mov
loop
push
ljmp
mov
lahf
pop
out
or
mov
sub
add
sub
lahf
inc
sbb
loope
cmp
std
in
or
sub
dec
fwait
pop
dec
mov
cmp
cmp
lods
push
cld
jnp
insb
movsb
jbe
mov
repz
and
dec
xchg
orb
jb
add
dec
sbb
gs
add
mov
sub
adc
inc
out
movsl
pushf
shrl
mov
subl
jae
mov
mov
or
inc
push
cmp
mov
pop
add
bound
movsb
mov
dec
cmp
repnz
cltd
xchg
jbe
test
mov
mov
in
jmp
push
cwtl
cld
das
outsl
and
lea
inc
leave
adc
adcb
dec
insb
outsl
mov
mov
adc
cli
scas
movsb
sbbb
cmp
into
jmp
xor
addl
and
clc
jecxz
and
mov
aaa
inc
enter
popa
pop
add
adc
mov
iret
xlat
inc
dec
ljmp
pop
stos
mov
imul
int
cs
enter
dec
enter
cld
cmpsb
out
hlt
sub
xchg
scas
aad
mov
cs
ja
test
addb
mov
add
movsb
popf
sbb
fwait
add
call
repnz
mov
xchg
divb
dec
test
mov
dec
cwtl
sbb
pop
int
mov
dec
jecxz
loope
xor
jae
mov
fwait
jbe
push
push
jecxz
and
and
stos
xor
or
cmp
imul
push
leave
push
scas
or
mov
mov
cmc
bound
fisubs
imul
call
fmull
sbb
into
sub
lea
jg
cld
or
inc
mov
fidivl
addb
roll
cmp
adc
inc
xchg
mov
push
pusha
div
cltd
xor
lock
jle
xor
add
jns
in
cmp
lret
imul
cltd
js
add
mov
adc
inc
xchg
arpl
in
push
out
push
dec
cmp
cli
into
cltd
mov
push
xchg
push
mov
cmp
push
pop
aaa
dec
popf
cli
push
add
xor
pushf
xchg
stos
adc
adc
imul
test
pop
cmpsl
fildll
out
fisttpll
dec
pop
cltd
inc
push
adc
mov
adc
push
cli
jns
inc
addr16
mov
test
push
pusha
dec
fbstp
lea
and
sub
mov
push
adc
dec
mov
jp
es
into
and
mov
jae
mov
pop
inc
fdivl
fsubr
adc
outsb
mov
aam
inc
je
pop
mov
jmp
pusha
sbb
adc
and
imul
das
or
inc
jecxz
negb
mov
xor
mov
push
sbbl
or
std
enter
loop
loopne
roll
shll
test
mov
icebp
fnstcw
scas
aad
lcall
adc
mov
push
test
mov
hlt
add
jecxz
inc
call
xor
mov
fcomps
pop
out
test
fsub
in
ss
fsqrt
adc
jecxz
test
les
push
and
cmovns
in
shl
int3
push
cmpsb
mov
push
add
mov
out
rclb
adc
pmulhw
dec
push
aaa
sarl
jno
pop
mov
fwait
cmp
push
mov
outsb
sahf
pop
and
icebp
addr16
mov
aad
movsb
loop
movsb
xor
sbb
xchg
inc
idivb
fsts
iret
jb
mov
imul
dec
fs
les
sub
push
jl
dec
popf
cmpb
mov
inc
xor
pushf
push
push
sbb
adc
div
xor
or
loopne
jbe
cmp
aas
push
xlat
cmc
push
and
jb
outsl
cmp
xlat
lret
mov
lds
int3
inc
xchg
cmp
sub
sub
sub
push
aad
ja
push
mov
andb
xchg
les
mov
ds
mov
cld
cmp
xchg
jecxz
aad
movb
ljmp
roll
shlb
mov
mov
sub
sbb
add
dec
fs
insl
frstor
pop
fists
mov
inc
daa
cmpps
push
cmp
mov
shr
lahf
cmp
dec
js
and
sub
mov
out
mov
dec
rol
stos
cmc
mov
xchg
pop
jne
push
sbb
mov
insl
add
cltd
adc
test
cmp
inc
inc
inc
mov
and
inc
repnz
insl
pop
dec
push
inc
xor
xchg
clc
xchg
out
movsb
lods
mov
sbb
fildl
xchg
sub
daa
jo
add
stc
rcrl
pop
leave
inc
jmp
out
push
cs
xor
loopne
jg
push
dec
shlb
cs
and
test
lcall
pusha
push
push
pop
hlt
sub
addr16
pop
icebp
jmp
call
shll
or
rcrl
std
std
cmp
mov
pop
js
in
and
sub
xor
push
mov
stos
aam
aam
mov
or
inc
lds
out
dec
push
dec
in
xchg
mov
adc
ret
das
xchg
aad
adc
mov
jmp
mov
imul
cmp
out
std
dec
adc
nop
sub
sbb
pop
aam
stos
mov
pop
xchg
pop
out
mov
out
xor
lock
mov
sbb
lea
and
out
cmp
shrb
push
fmull
mov
push
jle
mov
push
mov
js
pop
lcall
mov
repz
pop
sbb
ljmp
aaa
mov
pusha
push
int
jg
jb
in
xchg
xchg
lahf
incb
mov
mov
xchg
jae
cmp
dec
fldl
sbbl
xor
hlt
adc
pop
jl
add
sahf
sub
loope
ds
push
jno
pop
or
push
jecxz
pop
cmp
sbb
in
lcall
xor
cmpsb
push
imul
mov
mov
jbe
loop,pt
movsl
cmp
jne
ljmp
cltd
jecxz
sub
cld
inc
je
insl
push
test
dec
aas
xorb
mov
adc
push
sbb
xor
imul
xchg
push
pop
orl
mov
sarb
hlt
xchg
test
push
sub
jae
in
enter
out
xchg
and
fidivl
sub
sub
pop
cld
xchg
mov
push
sub
mov
and
sub
lcall
fistl
mov
or
negb
out
mov
jo,pt
pop
lods
stc
ss
cmc
push
pop
adc
out
push
jnp
mov
aaa
mov
bound
sahf
add
repnz
push
mov
xchg
lds
sub
stos
pop
leave
in
mov
xchg
jb
bound
das
pop
sub
jle
cmp
sbb
inc
fisubl
mov
std
dec
lcall
sbb
push
dec
xor
xlat
adcl
test
dec
test
dec
jo
pop
or
lret
mov
in
xchg
jmp
das
ficompl
push
dec
aad
js
shrl
cmp
sti
clc
ret
push
or
mov
and
cmpsb
add
std
lcall
out
mov
mov
mov
dec
push
sub
in
mov
cmc
scas
dec
test
mov
xchg
and
xchg
inc
push
out
sub
loop
xchg
mov
dec
dec
mov
mov
fidivrl
arpl
icebp
jo
push
fwait
jge
jl
jo
sbb
push
frstor
sbb
bound
ss
repnz
loopne
lods
xchg
jmp
and
mov
in
mov
aam
sahf
pop
outsb
push
shlb
inc
xchg
cltd
fmuls
sbb
mov
or
or
jge
cmp
add
lret
mov
loop
push
sbb
lock
lds
cmpb
jae
sbb
outsb
lret
test
lahf
inc
xor
int3
andb
loop
int3
jecxz
enter
out
stos
mov
rol
lea
mov
pop
cmpb
shll
rcll
adc
sbb
cmp
loope
push
fdivrl
xor
lds
lret
movsl
mov
repnz
and
cwtl
and
xor
out
popa
pop
test
mov
push
jnp
sbb
or
or
mov
std
in
std
popf
in
fnstsw
sub
insl
jge
insl
or
mov
std
in
std
popf
in
fnstsw
lods
add
std
sbb
int
mov
std
in
std
popf
in
fstpl
sub
insb
jge
insl
or
mov
std
lea
lods
inc
mov
inc
xorb
lods
shrb
pop
mov
and
xor
add
adc
popa
xchg
jno
push
mov
movsb
mov
je
fs
lock
xor
push
and
xor
popa
hlt
adc
pusha
out
xchg
push
movsb
mov
insb
nop
jl
or
sarb
and
xor
popa
lea
add
sbb
pusha
aas
lret
rcrb
mov
int3
adc
add
rol
cmp
jecxz
mov
lock
out
insb
in
pop
dec
fcmovnu
cmc
push
cmp
xor
fs
dec
lret
movsl
fistl
iret
cmp
popf
sbb
inc
test
and
inc
icebp
cmp
lahf
jp
dec
pop
movsl
jns
aam
les
out
sbb
xor
loope
or
aaa
loopne
fcoml
inc
shlb
add
clc
imul
rorl
rorl
clc
jno
cmp
dec
dec
sub
push
or
pop
xor
scas
and
mov
or
mov
fistpll
sbb
jo
inc
mov
mov
subb
loopne
lock
xor
cmp
add
adc
pusha
mov
inc
scas
push
movsl
aam
hlt
ss
adc
add
pop
mov
dec
mov
je
adc
cmp
sub
cmp
fmuls
test
dec
rolb
jb
pop
mov
sub
add
push
sahf
inc
jecxz
mov
mov
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
repz
lahf
sti
lcall
imul
popa
gs
inc
pop
stc
hlt
loop
mov
push
push
dec
sub
in
push
incl
add
hlt
dec
negl
cmpl
lds
cmp
mov
dec
mov
adc
jmp
dec
rcl
movsb
cmp
adc
adc
or
jno
movsl
insl
ds
out
mov
or
mov
aaa
jge
in
sub
cmpsb
mov
mov
mov
or
and
mov
mov
leave
cli
fs
gs
mov
xchg
movsb
aad
sahf
sbb
in
and
sti
add
insl
lcall
sub
divb
iret
cs
jp
test
mov
fistl
fsubs
push
outsl
jmp
sbb
and
pusha
add
pop
xchg
sub
push
enter
mov
iret
inc
aam
and
cwtl
or
push
addr16
mov
rolb
lret
mov
pushf
mov
cmpsb
aam
add
xchg
popa
ljmp
pop
aas
sbb
jg
dec
mov
dec
cmp
or
add
mov
add
sbb
fchs
mov
cs
adc
mov
sbb
sbb
negb
add
insb
add
fs
sbb
mov
xor
sub
pop
inc
cmpsb
pusha
mov
divl
pop
or
jns
mov
mov
jmp
hlt
xchg
pushf
dec
mov
xor
jg
ss
test
sbb
rclb
pop
jae
lea
movb
push
stc
push
aad
jae
dec
lea
das
js
into
stc
in
lds
imul
add
fucomi
lahf
cmp
mov
jns
xor
pop
cmp
inc
aas
push
in
in
addr16
xchg
loope
adc
js
cmp
pop
icebp
push
ret
out
fcmovne
shll
sbb
popf
add
js
inc
add
cmc
inc
jno
ror
lahf
inc
shlb
mov
push
mov
pop
jecxz
pminub
push
scas
xor
movsl
mov
xchg
mov
pop
call
repz
push
pop
out
arpl
pop
scas
inc
mov
xlat
lods
pop
xchg
or
cmp
xor
cld
shl
outsl
mov
clc
mov
int3
adc
mov
mov
xchg
sbbb
mov
mov
jmp
pmaxub
mov
les
js
outsb
mov
mov
test
aam
loope
mov
mov
fs
fnstcw
data16
fsubs
aam
aas
std
sarb
aam
loop
lods
fstl
fldt
mov
popf
cmp
lahf
xor
pop
sbb
cs
test
mov
inc
sar
cld
and
call
add
xor
js
loop
test
stc
out
enter
inc
mov
cltd
js
push
testl
mov
push
mov
stc
sub
or
dec
mov
movsb
or
shrb
ss
lock
inc
lret
mov
cmpsb
arpl
arpl
mov
stc
adc
jmp
fnsave
push
mov
lods
adc
cmp
inc
or
icebp
inc
sub
cli
mov
sub
mov
adc
mov
xchg
das
lret
xor
or
test
xor
push
and
cmove
je
pushf
xor
mov
into
lret
inc
sbb
add
push
or
nop
insl
sbb
mov
les
mov
clc
dec
sbb
mov
aad
shrl
imul
popa
fisttpll
popa
or
movsl
sub
xor
xor
leave
inc
cmp
scas
icebp
mov
dec
xor
mov
xchg
jno
or
lods
mov
add
mov
jmp
push
lret
data16
pop
shll
inc
xor
mov
mov
adc
sbb
push
popa
inc
outsb
pop
cmp
inc
mov
sub
mov
cmpsl
add
das
das
loope
fs
jp
mov
dec
add
aas
loopne
in
sub
xor
aas
sub
sbb
lahf
lock
clc
cmpsl
xchg
addr16
lret
inc
mov
into
dec
pop
rcrb
xor
loop
std
push
jnp
test
adcl
push
mov
fnstcw
aad
pop
push
xchg
mov
enter
ja
cltd
push
fists
cmp
in
test
mov
inc
loop
je
popf
xor
mov
add
movsb
pushf
xor
js
psllw
inc
adc
movsb
daa
fisttps
pop
sbb
movsb
aas
arpl
daa
pop
mov
imul
mov
and
xchg
into
xor
adc
loop
icebp
jle
inc
inc
ret
jne
sub
or
mov
mov
pushf
mov
pop
out
pop
div
ret
xchg
dec
sub
rcrb
es
xchg
movsl
out
jb
fldl
jle
sar
adc
aad
cmc
fstps
mov
or
jmp
mov
sub
dec
je
xor
pop
cli
sbb
js
push
and
pop
movsb
scas
mov
out
and
add
lahf
test
stc
gs
in
inc
xchg
xchg
jno
xor
test
popa
test
call
lret
out
add
ljmp
into
cmp
mov
test
shl
pop
aaa
jae
mov
dec
ret
lods
pop
and
pop
mov
and
sbb
dec
lock
ss
inc
cli
ret
ret
rcrl
pushf
je
stos
hlt
lahf
pop
scas
cwtl
ja
mov
jge
out
and
xchg
mov
push
ret
and
or
loope
jg
int
fwait
std
adc
sbbl
add
sub
mov
lea
sub
cld
das
lcall
mulb
pusha
adc
xor
shlb
dec
inc
fsubp
cmp
inc
popl
mov
jno
je
cmpsb
aaa
dec
mov
xchg
or
cmp
add
cmp
insl
lea
mov
push
jnp
rorl
fs
dec
bound
sub
mov
scas
push
lea
mov
cmpsb
xchg
and
or
lods
lods
inc
mov
lret
daa
test
pop
mov
movsb
pop
test
nop
cmpsb
mov
pop
adc
arpl
lea
call
shr
inc
add
lcall
in
inc
into
scas
aaa
stc
test
loopne
sub
or
adc
mov
and
cmp
clc
jge
dec
lods
push
xlat
xchg
lahf
dec
push
sub
or
cmp
inc
out
mov
shrb
and
add
cld
lahf
mov
fsubl
add
scas
xor
xchg
clc
and
xchg
sarb
mov
jo
fisttpll
ljmp
jo
mov
jns
jno
sbb
inc
scas
jecxz
adc
dec
mov
str
and
pushf
out
insb
push
cmp
outsl
sbb
mov
popf
inc
jg
insb
cld
push
ffreep
sub
mov
or
cmpl
cltd
push
dec
pop
push
mov
cmp
xor
test
push
mov
fcmove
jae
outsb
stos
xchg
cwtl
movsb
sbb
mov
xchg
or
mov
mov
fiaddl
cld
lea
sbbl
dec
shrl
dec
or
xor
jle
add
mov
lds
popa
and
stos
mov
add
mov
jp
pop
inc
idivb
jb
test
pop
push
aad
jecxz
jge
inc
daa
psubsw
gs
and
and
lods
jo
push
inc
nop
outsb
sahf
inc
dec
rolb
xchg
mulb
rcrb
das
push
aas
xor
lahf
cs
ljmp
inc
push
out
into
adc
jp
mov
aam
mov
add
dec
xlat
and
mov
cli
jbe
sbb
mov
push
xchg
repnz
lcall
sub
lods
popf
or
and
int3
cmpsb
outsl
in
mov
mov
xchg
and
popf
adc
js
jge
mov
sarb
mov
cmpsl
test
sub
call
inc
xlat
pop
jg
pop
and
lret
repz
loop
aam
sub
roll
lds
mov
push
xchg
test
cs
addr16
lahf
push
fcmovnu
cltd
leave
sub
fdivl
das
lcall
push
sub
cmp
xor
jmp
or
stc
ds
idivb
or
shl
addl
xor
les
push
outsl
lods
add
xchg
cwtl
sbb
daa
bnd
ret
xlat
xor
lods
or
adc
in
int3
or
mov
enter
mov
cmp
pop
scas
and
mov
movsl
pushl
clts
xchg
mov
add
xor
ficoms
loope
and
pusha
fdivl
mov
jns
imulb
jle
xor
dec
std
fiaddl
shrl
xchg
inc
test
jge
test
into
mov
enter
jae
sbb
add
enter
adc
mov
cwtl
stos
adc
cmpsl
xlat
vfrczss
mov
pushf
jnp
fists
xor
loop
movsb
adcl
pop
xchg
xorl
pop
or
andl
insb
sub
jge
out
aad
adc
sbb
ficomps
cmp
fwait
inc
insb
lods
lcall
cwtl
mov
adc
add
inc
rclb
mov
test
xor
and
cmp
add
imul
stos
fimuls
or
int3
jle
popf
movsl
jbe
repz
stos
movsl
cmp
xor
adc
mov
outsl
icebp
mov
adc
cmp
jne
or
stos
loopne
jle
cmp
cs
lds
ja
rcr
dec
loope
pop
xchg
and
push
and
cmpsl
subl
and
gs
test
sbb
sub
test
jp
ret
mov
aaa
mov
fisubl
pop
dec
movsl
in
lods
sub
sbb
push
dec
jnp
jle
inc
stos
jge
xor
pushf
mov
push
mov
mov
xlat
loopne
push
movsb
xlat
enter
xchg
pop
mov
dec
sbb
aaa
jecxz
add
nop
sbbl
stos
dec
imul
fidivl
push
xchg
inc
push
add
push
inc
dec
mov
rcrl
xchg
sbb
xor
push
pop
adc
stc
std
mov
mov
dec
mov
xchg
scas
insb
push
cmpsb
push
jbe
loopne
fistpl
sub
mov
jo
and
adc
lahf
cmp
nop
adc
dec
inc
fiaddl
xor
sub
pop
ret
or
jne
scas
test
lahf
aam
das
gs
and
outsb
or
push
fsub
pop
or
stos
xor
xor
js
pop
cmpsl
adc
push
xchg
mov
loope
lods
ja
lea
cwtl
pop
or
adc
fwait
cmp
enter
inc
or
mov
mov
and
xor
iret
sbb
insl
in
dec
jmp
jnp
das
xchg
dec
pop
jns
sbb
mov
bound
jg
imull
xor
sub
rolb
mov
bswap
add
scas
insl
dec
push
out
cltd
cmp
jle
mov
jle
fnstsw
movsb
in
mov
jg
inc
fbld
pop
cmp
inc
jns
inc
test
and
push
shlb
and
insl
jge
loopne
int3
movsl
xchg
sti
jmp
add
mov
inc
enter
js
xor
fldcw
push
std
or
inc
mov
or
stos
insl
mov
or
mov
es
inc
inc
sub
dec
test
fistpll
inc
xchg
jge
in
pop
cmc
inc
adc
aad
les
js
pop
xor
and
aad
pop
jns
lds
pop
xor
jns
push
loope
lock
fcmovnb
dec
add
in
adc
mov
dec
lcall
call
pop
loope
nop
imul
popa
out
loope
fdivr
outsb
push
fwait
cwtl
loop
cmp
mov
mov
in
test
int3
push
push
mov
dec
sbb
sbb
enter
dec
cmp
xor
call
int
pop
push
ss
cli
ss
mov
inc
call
fcmovnb
cs
scas
jb
fucomp
addr16
jg
mov
adc
mov
into
test
mov
pop
adc
jo
scas
sbb
cli
jp
je
shl
mov
std
out
sti
mov
gs
lods
test
pop
cvtpi2ps
frstor
ret
sbb
pop
sbb
mov
ja
mov
adc
ret
lcall
test
fstps
xchg
lahf
xor
outsb
inc
push
test
and
iret
and
clc
adc
xor
adc
shr
in
mov
dec
in
loope
adc
sbb
xchg
movsb
ljmp
ret
or
and
xchg
jg
mov
add
mov
xor
mov
push
xchg
cli
out
dec
lods
int3
mov
in
outsl
lods
call
adc
xchg
repz
mov
sbb
dec
push
dec
scas
stos
push
cmpsb
inc
fs
sub
sub
int3
jg
mov
adc
jmp
cld
sbb
mov
mov
mov
cmp
pop
divl
movsl
dec
iret
aam
ret
repnz
dec
and
or
int3
jg
mov
mov
mov
stos
cwtl
xchg
jge
imull
fyl2xp1
xchg
pushf
or
mov
js
in
xchg
adc
cmp
lds
addl
or
lea
dec
outsb
rclb
push
push
sub
in
notl
xor
mov
pop
hlt
in
jge
aaa
inc
es
lods
jp
xchg
pop
pop
push
loopne
and
out
pop
insl
push
pop
sahf
insl
ror
inc
adc
mov
xor
sbb
andl
add
ffreep
pop
cltd
xchg
add
sbb
fucomi
addr16
dec
js
mov
gs
fistl
test
aam
stos
scas
scas
mov
mov
sub
cltd
mov
mov
cmp
out
popf
push
sbb
or
or
jnp
lea
nop
mov
adc
mov
add
and
sbb
bswap
pop
out
int
dec
cltd
dec
pop
and
inc
mov
lret
inc
insb
or
ja
out
adc
arpl
insl
mov
mov
sub
fistpll
push
push
or
sahf
in
fistps
in
sbb
enter
mov
add
loopne
add
inc
mov
scas
aad
enter
cmp
mov
das
add
outsl
rcrl
lods
inc
loope
stos
loopne
push
xchg
inc
add
xchg
imul
inc
xor
pop
out
stos
fwait
adc
adc
aad
sahf
out
sbb
adc
imul
jb
les
decb
push
lahf
loop
jg
out
outsb
xchg
ljmp
aad
imul
and
enter
xor
lret
daa
fisttps
in
je
sub
aam
mov
lods
sti
out
lea
rcrb
jle
add
jl
stc
mov
jbe
adcl
sbbl
fcmovnb
push
xchg
push
fcoml
outsl
or
test
cld
inc
iret
sbb
stos
sbb
cmpsb
test
mov
add
jmp
sbb
scas
add
and
add
cmp
lret
pop
or
cmc
and
jb
adc
adc
pushf
leave
repnz
in
cld
and
add
je
cli
xor
or
stos
jecxz
dec
rorb
sbb
shl
js
int
pop
cmp
lahf
mov
sti
jno
jmp
push
adc
jecxz
sub
int3
pop
cwtl
data16
inc
les
adcb
adc
out
cmc
xchg
out
inc
jb
sub
lock
jns
xchg
fstps
push
ret
mov
lret
movsl
mov
cmpsl
cli
ds
xchg
imul
pop
fbld
in
jns
push
pop
inc
ja
fstpl
mov
ljmp
jns
ds
mov
dec
or
pop
jne
lods
and
iret
and
sub
scas
inc
adc
jb
jne
neg
lea
sbbb
clc
mov
outsb
sub
mov
popa
push
mov
call
ja
pushf
sarb
lahf
jo
nop
fstpl
dec
pop
or
xchg
fistpl
jbe
sbb
lds
jecxz
sbb
sbb
ret
or
inc
andl
add
pop
mov
inc
and
not
fdivrs
in
push
movsb
sbb
mov
inc
mov
pop
enter
aad
in
push
or
pop
ss
test
int3
cmp
xor
sbb
je
in
hlt
imul
in
or
sarb
pop
inc
stc
inc
lahf
lods
mov
imul
and
test
outsl
xchg
dec
popf
dec
pop
dec
pusha
sti
sahf
sbb
orl
in
sbbb
sbb
sub
jge
xchg
leave
repz
pusha
shll
in
mov
jg
test
push
mov
out
sbb
pusha
movsb
jecxz
cmp
mov
mov
cld
add
fildl
das
sbb
jmp
add
insl
jmp
sahf
mov
test
xor
jne
bound
out
xor
sbb
cmp
and
dec
mov
push
ljmp
mov
mov
jmp
jg
sbb
dec
mov
or
call
dec
dec
dec
outsb
mov
or
clc
inc
cli
orb
and
rcll
and
iret
or
ljmp
cltd
or
pop
icebp
xor
mov
xchg
sub
out
loop
xor
pop
push
enter
or
or
jno
fisttpl
mov
mov
mov
cmp
hlt
test
add
in
outsl
jmp
pop
xor
repz
push
xchg
mov
movsb
or
add
pop
mov
ds
scas
sbb
mov
jge
imul
sar
out
loopne
test
adc
mov
adc
test
sub
ffree
fsubl
inc
sahf
xor
mov
lods
adc
or
mov
js
lea
add
es
xchg
js
arpl
adc
imull
movq
insb
dec
cmp
rcll
clc
arpl
mov
stos
mov
dec
lea
int
xchg
jecxz
inc
cmp
lods
aaa
in
iret
sbb
cs
jle
pop
push
in
inc
cmpl
js
and
lahf
leave
jle
and
ret
test
in
fistl
mov
pop
cmp
xor
mov
inc
std
jb
and
int3
cmp
sahf
ret
das
jbe
sub
dec
cmpl
xor
fsubrp
imul
rcrb
mov
dec
dec
jae
or
dec
jns
adc
jo
pop
add
xor
jge
push
divb
push
mov
jb
out
push
mov
inc
mov
sub
fs
in
clc
stos
xlat
repz
ret
es
leave
mov
and
lock
and
flds
xchg
xlat
sub
icebp
cmp
sub
lret
das
push
addr16
addr16
lcall
mov
inc
pusha
fisttpl
mov
rcrb
cmc
or
jl
subb
jnp
adc
sub
pop
or
cmp
xchg
jb
and
gs
or
or
inc
aaa
mov
sbb
imul
ja
push
pop
cmc
mov
xrelease
out
addr16
jne
cmc
adc
bound
dec
fnstcw
sti
push
push
sub
loop
daa
cmpsl
jne
daa
outsb
mov
adc
jg
ss
dec
jmp
lcall
sbb
shrb
adcl
push
imul
inc
adcb
and
ja
cmp
aad
lret
xor
negb
js
lea
in
pushf
inc
imul
imul
aaa
cmpsl
pop
add
into
lret
and
in
mov
adc
std
push
xorl
pop
adc
fs
insl
dec
push
popa
rorb
dec
add
and
lahf
rcll
fsubl
mov
or
nop
loop
sbb
stos
push
and
or
out
leave
popl
std
sti
xor
push
mov
mov
and
dec
add
aam
cmp
sub
fwait
rolb
dec
xor
mov
lahf
and
lret
stos
push
ja
in
xor
inc
les
loopne
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
mov
xorl
add
xor
in
aam
outsb
stos
hlt
adc
mov
lret
neg
jmp
sti
cmpsl
mov
mov
inc
imul
or
sbb
sub
cmp
jmp
sti
cmpsl
mov
ret
addr16
ja
imul
addr16
sbb
sub
cmp
add
sti
mov
stos
xchg
mov
das
sbb
sbb
dec
push
inc
dec
dec
mov
mov
sahf
pop
and
sbb
aaa
or
mov
or
mov
jle
mov
push
or
add
or
pop
sub
push
lret
mov
mov
sar
xor
pop
movsb
out
xor
push
sub
push
jb
iret
scas
sub
and
cmp
rcll
ret
out
test
in
and
cmp
mov
dec
jbe
add
adc
sbb
inc
mov
pop
inc
xchg
adc
pop
aaa
sbb
sub
lds
dec
push
sti
sub
js
mov
or
xchg
mov
dec
pop
sub
mov
jmp
sti
inc
mov
fwait
xchg
in
pop
xor
jnp
or
push
mov
test
enter
repz
xchg
out
xor
pop
and
xor
push
dec
pop
jle
push
jb
stos
scas
xchg
mov
into
out
xlat
jb
ret
add
push
pop
gs
sbb
push
push
mov
test
xchg
ja
inc
imul
or
sbb
sub
cmp
lret
neg
jmp
sti
cmpsl
mov
mov
inc
imul
or
sbb
sub
cmp
lret
push
mov
push
pop
cmp
pop
je
and
stc
push
mov
jl
mov
xchg
mov
or
inc
xchg
sbb
insl
in
imul
call
or
xchg
std
mov
shlb
int3
mov
mov
inc
or
mov
aaa
fstpl
out
loope
push
push
adc
aaa
imul
dec
pop
xor
hlt
lea
pop
pop
inc
xor
lods
sarb
mov
arpl
sub
daa
cwtl
push
mov
repnz
jb
dec
ficoml
jp
inc
test
add
mov
jecxz
sbb
push
stos
jb
cmpsl
fimull
mov
cmp
inc
jne
inc
lods
insb
jp
imul
mov
pop
mov
aad
leave
push
xlat
aaa
setae
xchg
in
stos
mov
jle
ja
ret
sbb
cmp
mov
xor
cmp
sti
sub
fists
rorb
cld
adc
decb
or
rcrb
mov
inc
xchg
dec
cs
dec
adc
dec
test
cmpsl
push
cmp
add
and
jle
pop
lcall
rorl
adc
aam
xchg
xor
test
call
inc
clc
out
aas
out
add
inc
jmp
mov
mov
pushf
xchg
nop
lret
into
adc
fcompl
add
cmp
and
pop
pop
or
push
cmp
lret
lahf
mov
insl
popa
sub
xor
xlat
stos
push
int3
std
jge
xor
adc
cmp
out
stc
shrb
fldcw
insl
sbb
sti
dec
sbb
out
jge
xor
cmp
cmp
add
dec
or
lock
hlt
popa
shll
ds
and
add
fsubl
stos
lcall
add
xor
movsb
push
cmpsb
les
xor
out
in
sti
xlat
dec
jnp
scas
cmp
cmpsl
sub
mov
cli
inc
in
cmp
lock
es
shr
ret
cltd
stc
xor
pop
stc
inc
imul
int
fists
lahf
dec
inc
inc
popa
repz
or
ljmp
stos
cmpsl
and
cs
fstpl
out
leave
dec
mov
das
loop
es
lock
push
int3
std
das
jg
xor
jmp
xor
cmp
out
xchg
and
jb
mov
int3
mov
sbb
mov
int3
sbb
xlat
ds
push
xchg
pushf
push
faddl
lods
dec
cs
sub
int
mov
movsb
fldl
movsl
iret
mov
inc
int
cmpsb
push
xchg
pop
sub
xchg
dec
dec
scas
dec
mov
inc
mov
loopne
xchg
cli
cs
push
test
lahf
pop
jecxz
dec
inc
int3
test
pop
out
adc
stc
xor
sub
insl
add
out
mov
mov
sbb
sti
push
inc
test
jle
rolb
pop
push
fnstcw
dec
insl
dec
push
dec
aas
cmp
mov
xchg
xchg
imul
mov
in
pop
and
mov
jae
lahf
scas
jle
jle
stc
and
xor
cwtl
sahf
inc
sub
popa
push
pop
ret
flds
xchg
cmp
dec
rcrl
mov
pusha
lds
sub
pop
push
pop
jg,pn
cmpsb
add
jle
rolb
push
and
ss
dec
jle
lcall
jl
ss
push
mov
push
scas
xchg
push
sub
adc
cmp
insb
adc
inc
imul
jmp
inc
sub
sarl
push
xchg
pop
jb
enter
loopne
iret
xchg
imul
sbb
adc
das
mov
call
cmp
push
sbb
dec
lods
pop
mov
hlt
das
push
xor
xchg
aam
jge
and
sub
test
std
cmp
ds
int3
jp
mov
push
sbb
cld
push
mov
mov
pop
out
fs
xlat
fs
xchg
xchg
addl
xor
shll
jne
pop
ds
xor
inc
xchg
dec
sub
mov
jb
push
jle
fdivp
inc
sbb
fdivrs
stc
mov
cmpl
mov
inc
idivl
adc
push
insb
pushf
call
cmpsb
das
mov
push
das
dec
lods
leave
sbb
jne
cltd
lret
and
sbb
sub
mov
xor
add
jg
jnp
xor
pop
and
jmp
sub
test
dec
or
dec
lret
stc
fadds
mov
adc
in
jmp
aas
mulb
mov
xor
faddl
push
imul
loop
ds
inc
push
cs
cmpsl
sbb
jnp
mov
sub
mov
sbb
aad
fmulp
mov
add
adc
hlt
sbb
outsb
in
test
test
sub
or
in
jg
fs
xchg
sahf
add
mov
cmc
inc
mov
sub
cmc
js
dec
xchg
push
sbb
into
push
insl
cwtl
clc
popa
cltd
clc
mov
cmp
into
inc
mov
xor
outsb
icebp
jge
adc
fistpl
movsl
and
mov
xor
dec
jb
lahf
cmpsb
jb
sub
outsl
loope
mov
cltd
mov
mov
inc
or
fildl
iret
popf
stos
push
mov
jle
lea
leave
cmpsl
out
jb
mov
mov
sbb
shll
add
and
aaa
bound
add
mov
das
pop
fsubrl
sbb
xor
cmpsl
cmpsl
xchg
pop
xor
mov
xchg
rorb
int
push
popf
lret
enter
or
mov
out
xor
lods
dec
pop
fstpl
loope
dec
aad
data16
push
and
adc
mov
push
sub
data16
pop
stc
mov
mov
xchg
cwtl
data16
cli
cmp
xchg
xchg
xchg
int
mov
sub
dec
push
shrb
stc
xchg
mov
cld
cs
jmp
out
pop
arpl
xchg
scas
pop
sub
jb
stos
push
je
loope
frstor
or
shll
sbb
cmp
mov
enter
jne
xor
pop
xchg
mov
add
rcr
and
gs
lcall
icebp
out
jge
jecxz
xor
mov
pop
aaa
fcomp
adc
fisttpl
das
adc
inc
mov
adc
mov
call
out
hlt
fs
stos
pop
repnz
add
das
in
sti
jg
jo
loopne
lock
sbb
push
mov
xchg
hlt
popf
negb
dec
xchg
xchg
outsl
aas
push
jp
dec
mov
hlt
sti
and
and
mov
jl
add
gs
mov
sub
cmp
xchg
cwtl
rorb
arpl
imulb
and
adc
mov
ret
add
stos
jmp
dec
jmp
inc
clc
push
clc
scas
dec
jae
in
mov
mov
mov
lret
jg
mov
arpl
lcall
mov
or
movsb
imul
adc
xchg
pop
mov
sbb
ds
cmp
cmpsb
or
adc
pop
cmp
stos
mov
lds
hlt
mov
insl
ds
dec
jl
jns
clc
xchg
push
mov
sub
sbb
pop
mov
sub
or
or
in
jmp
cltd
fiaddl
jb
lds
iret
test
jle
jmp
sbb
call
movsb
lret
ja
ljmp
jmp
pop
mov
pop
arpl
push
mov
call
out
in
add
push
dec
std
int
lcall
pop
sbb
mov
in
jae
jp
or
movsl
cli
sub
mov
arpl
and
mov
cmp
push
fwait
xor
and
andb
jle
fldt
xchg
xor
pop
xchg
inc
adc
dec
mov
push
adc
lcall
xlat
xor
scas
pop
inc
lret
mov
inc
mov
cmp
mov
push
rcr
mov
ds
jnp
mov
jbe
cmp
mov
aaa
add
sub
call
orl
int3
aad
jo
rcr
xchg
fisubrl
repz
insb
inc
icebp
idiv
xchg
inc
sub
adc
int3
adc
xlat
cmc
out
adc
adc
dec
sarl
mov
loope
fchs
push
xor
divb
adc
cmpsb
adc
shrb
jmp
cmp
nop
or
mov
lret
gs
push
orb
push
cmp
cmp
shrb
mov
dec
add
arpl
test
mov
xchg
push
inc
outsb
mov
pop
popf
shll
cmp
movsb
jns
dec
in
mov
mov
andb
xor
adc
stc
dec
ljmp
adc
mov
mov
xchg
pop
mov
fimull
loop
mov
jecxz,pt
push
push
hlt
adc
ffree
adc
pop
sbb
inc
lock
jns
push
sub
sub
xchg
sti
int
or
cmp
adc
add
jg
test
cld
std
lods
or
aad
aad
xor
orb
arpl
cmp
or
popa
mov
and
jnp
hlt
call
cli
or
mov
sbb
jb
hlt
jo
repz
mov
pusha
psrld
fwait
adc
jo
lret
cmpsl
xchg
repnz
scas
clc
jnp
mov
jns
adc
xor
pop
shl
pusha
out
pop
dec
add
xor
add
cmp
or
mov
adc
add
cmp
fdivs
mov
and
fstps
mov
testb
fisubs
lret
sbb
in
popf
push
jecxz
jmp
lret
pushf
pcmpgtd
cltd
cli
adc
subb
gs
outsb
sub
pop
pop
loop
loop
pop
mov
les
outsl
add
jne
dec
push
sub
std
inc
out
push
mov
sbb
loop
jmp
lahf
sbb
add
push
inc
xor
fsubl
xchg
sub
cmp
adc
js
cmc
pop
in
mov
add
test
or
add
ds
lea
xchg
sub
push
add
in
mov
xchg
lret
push
jae
jb
add
push
pop
loopne
in
pop
cld
mov
jmp
sbb
cmp
mov
psubw
sub
pop
ds
das
sub
mov
mov
add
dec
adc
mov
imul
jge
mov
add
fldt
jl
test
xchg
mov
jno
mov
sub
xchg
xor
inc
loopne
mov
push
pushf
cmp
dec
cmp
loop
addb
xor
or
fldenv
das
arpl
inc
pop
mov
dec
cmp
repz
xchg
cmpsb
lds
adc
icebp
dec
test
dec
push
push
sbb
adc
lcall
lahf
jge
adc
xor
scas
mov
adc
xor
and
dec
jo
movsl
rcl
xlat
test
int3
add
jo
and
ret
xchg
pusha
push
pop
rcll
movsl
filds
sub
fs
push
push
sti
adcl
xor
jne
andl
out
mov
mov
orl
out
imul
adc
jge
repnz
pop
imul
imul
shll
sbbb
push
pop
sbb
and
lahf
scas
inc
inc
testb
mov
or
mov
and
insl
mov
or
jnp
mov
pushl
orb
stos
mov
out
pop
or
repnz
adc
jecxz
add
cmp
sub
xchg
xor
popf
out
jge
add
mov
jge
or
loopne
pop
sbb
xchg
loopne
aam
adc
aaa
sbbb
shll
jo
out
cmp
xor
dec
sbb
add
pop
pop
cld
jl
cmp
out
lods
fwait
and
nop
push
xchg
cmc
and
daa
mov
push
jecxz
les
adc
fsubrl
ret
add
lods
lcall
popa
das
ret
outsl
inc
xor
ss
imul
scas
sti
adc
jno
add
jp
adc
lock
insl
and
lods
cmp
sbb
cmp
test
pop
cmp
push
jl
mov
repnz
aas
out
sub
je
lahf
jmp
repz
and
ret
cmpsb
xor
fists
cld
dec
shl
insl
mov
outsb
xchg
inc
popf
test
push
ret
shlb
and
cli
add
or
sbb
stos
call
sub
ja
cmp
xlat
push
inc
aad
add
xor
loop
jae
cltd
sarb
ret
adc
faddl
scas
inc
sbb
xchg
call
or
xchg
cmp
fcompl
pop
push
jmp
mov
add
or
stc
sbb
adc
dec
mov
adc
xchg
xor
daa
adc
sbb
mov
xchg
scas
pusha
gs
jb
cmp
xor
test
out
rol
cld
mov
sub
repnz
sbbb
cmp
icebp
adc
and
jnp
and
or
cmc
push
pop
xor
sbb
add
sti
jbe
pusha
or
pop
jecxz
test
fsub
pop
test
imul
push
jnp
rcr
imull
loope
sub
fcomp
lahf
add
neg
mov
push
and
ds
arpl
sahf
ja
in
mov
aaa
stos
popa
jmp
jmp
cmp
sbb
dec
inc
mov
insb
push
outsl
sti
mov
push
xlat
int
les
js
sahf
mov
adc
mov
lea
gs
cli
or
cmp
scas
outsl
jne
stos
xor
fisttpl
xor
test
push
lea
bnd
xor
mov
mov
lds
and
aaa
mov
leave
je
clc
cmpsl
pop
mov
mov
scas
ret
test
shrb
inc
iret
xor
jo
or
sti
lcall
rcl
adc
mov
imul
jb
push
or
out
jle
cmp
cli
xor
jmp
mov
aam
adc
cmp
mov
sub
or
and
push
mov
jge
jg
dec
add
cli
cltd
sbb
or
repnz
fwait
imul
movsb
addr16
arpl
add
inc
dec
mov
or
ja
dec
scas
mov
lods
mov
sahf
add
xchg
test
daa
nop
xor
cmp
loop
imull
das
sti
out
fisttpl
iret
add
cmp
repz
subps
xchg
sub
mov
push
shrb
mov
pop
sbb
mov
or
dec
jbe
adc
outsl
cmp
push
lods
ret
pop
jne
inc
ljmp
mov
int
inc
into
dec
les
pushf
sub
mov
sub
or
and
insb
sahf
push
sub
adc
sub
js
inc
test
dec
mov
loop
mov
xchg
int
and
cs
xor
sarl
pop
inc
aas
int
mov
lea
out
inc
decl
adc
jnp
out
mov
jecxz
jmp
pop
notb
and
dec
and
mov
cs
and
xor
sar
inc
call
scas
rep
xor
scas
jmp
sbb
jnp
dec
adc
jmp
jns
jbe
dec
hlt
movsl
fldt
cmp
insl
push
ja
cmpsl
pop
cmp
adc
lock
loope
clc
xlat
sarb
lods
ret
repnz
insb
push
cli
stc
jg
into
aad
sub
mov
lock
in
sbb
fisubrs
mov
addr16
mov
or
dec
add
inc
shlb
dec
pushf
out
scas
hlt
je
dec
insb
sub
in
cwtl
cmpsl
push
mov
mov
mov
xchg
inc
fstps
adc
cld
lods
ds
test
cmp
xchg
mov
mov
subb
lcall
pop
inc
sub
push
sub
add
idivl
mov
add
cli
aas
sbb
or
lock
push
cmp
or
rcrl
mov
sbb
cwtl
sub
jae
mov
push
faddl
mov
aaa
jecxz
adc
lods
fdivp
std
sbb
lock
dec
xlat
sbb
in
sbb
pop
repnz
lock
mov
es
mov
inc
fwait
adc
stc
push
imul
out
lods
fisubl
push
or
aas
dec
inc
xchg
stos
hlt
pop
das
xchg
cwtl
out
shld
lods
lea
pushf
push
imul
cmp
mov
mov
das
das
sub
outsl
hlt
mov
lods
enter
jle
insb
sub
jae
nop
mov
sbb
and
sub
inc
adc
jg
lcall
xchg
sbb
mov
in
mov
sub
iret
and
les
mov
mov
adc
sub
add
jb
test
dec
aaa
ret
cmp
mov
bound
jae
cltd
je
push
js
jnp
lods
mov
or
mov
jg
shl
dec
jo
mov
and
stc
mov
push
cmc
jb
pop
insl
sub
rcrb
js
addr16
cmp
das
push
loope
sahf
push
sbb
int
dec
in
add
push
mov
pop
dec
pop
es
add
mov
sub
cmp
cmp
gs
movsl
pop
adc
xchg
jmp
sub
testb
xchg
mov
cwtl
lea
cltd
in
jae
mov
out
xchg
cmp
push
adc
adc
add
lock
hlt
loope
push
dec
xchg
adc
jns
xor
push
pop
mov
cmp
xchg
int
lcall
and
xlat
int
loopne
mov
rcll
shrb
jmp
lcall
sub
cli
inc
bound
push
test
sbb
xchg
xor
adc
sbb
jp
jge
jge
push
jae
fwait
fwait
jns
js
mov
lea
bound
test
jno
dec
arpl
aas
cs
cltd
inc
cli
loop
inc
add
cmp
aas
mov
add
xchg
ret
sbb
sub
popf
mov
mov
adc
jno
ret
lret
xor
and
push
xchg
xor
cmp
out
test
call
stc
gs
lock
addr16
mov
jo
adc
imul
sti
or
scas
scas
rorb
dec
xchg
mov
test
xchg
push
in
mov
mov
xchg
sbb
and
pop
jnp
or
sub
pop
movsb
or
pushf
cmp
in
outsb
test
and
aam
mov
nop
dec
outsb
mov
add
test
jecxz
leave
jnp
outsl
push
jg
in
mov
fs
sbb
scas
dec
repz
sub
dec
repz
push
clc
cmp
test
dec
sbb
dec
ss
xlat
push
xchg
push
outsl
pop
cs
or
xchg
fcomps
pop
or
cs
cs
xor
jl
or
jge
cmp
mov
aaa
in
cmc
xchg
mov
jmp
shl
push
or
push
sub
shr
and
push
adc
mov
loop
enter
jmp
or
mov
test
ret
cmpsl
test
and
mov
das
inc
leave
cmp
test
cmp
out
adc
enter
shlb
jge
andb
push
jno
shll
mov
push
loopne
ret
call
movntps
stos
in
add
outsb
xchg
xchg
cmp
popf
jnp
cmp
arpl
mov
adc
pusha
data16
jg
out
out
mov
push
addr16
xchg
mov
je
lods
or
and
xorl
jmp
imul
enter
lods
sub
push
outsb
xchg
pop
and
adc
loopne
fisubrs
push
lds
cwtl
mov
inc
shl
imul
vmwrite
dec
ret
test
imul
es
add
jle
or
out
pop
icebp
inc
cs
cmp
mov
popf
add
and
cld
clc
mov
push
aad
cld
lahf
test
push
insb
nop
arpl
shrl
mov
dec
xor
aam
popf
int
sub
das
out
sub
mov
imul
stc
dec
dec
inc
mov
rcrl
dec
xchg
mov
or
addr16
fildl
mov
mov
inc
imul
or
sbb
sub
cmp
lret
neg
jmp
sti
cmpsl
mov
mov
inc
imul
or
sbb
sub
cmp
lret
mov
mov
mov
push
jnp
or
sbb
sub
cmp
lret
stos
fistpl
mov
mov
in
imul
cmpl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ljmp
xor
decl
xchg
jne
cmp
dec
movsl
pop
mov
les
aam
cmc
sbb
ljmp
xor
mov
adc
jp
dec
movsb
pop
mov
mov
sbb
ljmp
xor
mov
jne
test
cmp
aas
fldt
orl
xorb
dec
fwait
gs
push
movsl
in
mov
mov
pop
cmpsl
dec
mov
loop
pop
xor
add
daa
mov
jbe
jb
xchg
imull
pop
movsl
mov
pop
pop
dec
movsb
adc
notl
fwait
inc
mov
outsl
xchg
pop
mov
mov
mov
cmp
mov
add
xor
arpl
inc
inc
push
shrl
xchg
lcall
xor
cmp
mov
fisubl
cmp
lcall
jp
add
shll
cmc
lea
adc
lock
and
fisubrs
out
mov
sub
shlb
dec
into
aam
test
in
or
add
fidivl
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
mov
add
pushf
je
add
and
add
add
cmc
pop
mov
negb
lds
push
pushf
imul
adc
xor
pop
sbb
sbb
out
mov
jo
lea
mov
dec
out
ja
push
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
ljmp
xor
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
ljmp
bnd
dec
fidivl
add
mov
aaa
bound
cmpsb
or
pop
scas
stos
aas
cmp
mov
mov
test
push
popa
sarb
sbb
out
iret
test
divb
lahf
lods
mov
sbb
sub
fidivs
mov
aaa
cmc
test
fidivs
and
enter
xchg
test
xchg
jg
xor
iret
jp
imul
std
adc
ljmp
mov
pop
cmp
mov
jp
pop
dec
push
add
adc
sahf
jecxz
adc
pop
sbb
div
nop
cmp
mov
loopne
jnp
into
cli
add
mov
fldt
sti
mov
cs
or
test
mov
xor
and
arpl
cmp
add
in
xor
dec
adc
imulb
push
sub
divl
push
cs
jns
int
out
jle
cltd
sbb
mov
jae
lods
in
mov
out
ljmp
mov
mov
mov
push
mov
pusha
inc
mov
cmpsl
push
lret
pop
loope
sahf
jne
les
jo
jo
loop
and
addr16
into
stc
pop
stc
ja
xor
aad
movsb
or
push
insl
inc
cmp
or
push
jnp
data16
daa
sbb
lea
mull
cmp
mov
mov
push
enter
outsb
sub
fistpl
xchg
jo
fstps
sbb
mov
daa
mov
imul
dec
call
mov
das
sbb
xchg
sub
mov
xchg
clc
xor
jle
cmp
bound
ja
lea
xchg
xchg
xor
aam
jbe
mov
sbb
mov
sbb
cmp
add
sub
dec
push
cmp
js
cld
ret
pop
dec
decb
cld
xor
cld
loop
loopne
nop
xor
js
push
lret
xor
jge
data16
lcall
shll
xchg
cld
gs
xchg
cmp
std
outsl
mov
or
pop
pop
inc
jo
out
sbb
stc
rclb
xor
fstps
adc
lret
pop
les
das
cld
sbb
and
cmp
mov
xor
imul
rclb
cltd
pusha
in
dec
js
or
adc
pop
adc
xchg
jnp
into
addr16
arpl
mov
cmp
adc
insl
mov
jmp
mov
fldt
push
add
lock
dec
cld
cmp
push
movsl
lahf
adc
pop
push
sub
fmull
or
lds
mov
or
imul
add
push
in
pushl
out
in
mov
popf
aaa
dec
jo
js
and
scas
push
add
fiadds
adc
cmp
int
adc
dec
push
mov
jecxz
mov
and
std
and
aas
loope
test
pop
jecxz
pushf
cmp
sbb
inc
mov
push
pushaw
clc
xor
imull
adc
xchg
aad
jo
loop
into
jae
mov
xlat
bound
sub
mov
push
stos
inc
push
mov
out
mov
imul
sbb
inc
pop
mov
nop
mov
jno
pop
addr16
xchg
outsl
sti
mov
mov
pusha
inc
adc
fmulp
imul
dec
in
pop
out
int
xchg
adc
xchg
inc
push
push
jmp
cmpsb
fnsetpm(287
movb
xchg
movsl
pop
stc
shlb
jle
imul
mov
mull
cmp
lods
cmp
dec
cmpb
add
fisttps
gs
xlat
mov
push
fmull
sub
fwait
pop
movsl
push
negl
or
jbe
imul
xlat
add
dec
ljmp
js
pop
insb
jb
in
shll
adc
popa
movsl
das
push
rorl
jge
ret
adc
fnsave
popa
or
cmp
adc
loopne
pop
pop
in
add
xchg
cmpsl
xchg
aas
push
jle
fidivrl
xchg
stos
imul
pop
mov
xor
jle
jns
or
lret
mov
xlat
int
rcr
popa
cli
xchg
xor
int
pushf
into
into
std
popa
sub
rol
movsl
mov
out
xchg
enter
add
xor
jl
fstl
movsl
add
pop
fwait
push
cmpsb
aas
nop
mov
test
mov
lahf
pop
or
push
push
loope
sbb
insb
shll
nop
ljmp
cmp
andl
xchg
jg
and
pusha
jmp
adc
out
cltd
xlat
jbe
mov
xor
pusha
daa
sub
push
push
lods
lahf
mov
pop
les
jecxz
and
sub
adc
aad
push
xor
movsb
jmp
in
lock
fistpl
pop
test
ret
inc
lods
mov
aam
test
mov
mov
in
inc
das
mov
jns
cmp
ss
jp
pop
inc
movsb
mov
mov
out
jns
adc
cmp
mov
xchg
xchg
int
sahf
arpl
lret
cmp
inc
mov
mov
outsb
ds
icebp
and
jo
mov
in
rcrl
gs
jl
cmp
iret
or
lahf
stos
push
popf
movsb
mov
insl
fwait
aas
mov
stc
mov
lret
adc
inc
clc
cmpsb
mov
rcl
jecxz
lods
and
shl
loop
lock
push
xchg
xchg
push
xlat
ja
cmp
loope
and
ret
dec
daa
test
sub
adc
jmp
int3
out
add
out
add
test
xchg
sbb
pop
idivb
cmp
cmp
adc
mov
lock
mov
push
rcl
xor
mov
mov
nop
adc
jo
mov
dec
out
push
popf
mov
and
adc
cmp
push
dec
push
push
or
and
imul
popl
leave
enter
cmpsl
sbb
imul
iret
ja
sbb
and
test
ss
inc
or
inc
out
adc
push
add
or
test
pop
sub
sti
and
std
sahf
mov
jp
ss
stos
rcll
jns
cs
les
shl
test
push
mov
imul
in
jp
lods
ret
ss
scas
pop
lock
jmp
push
xchg
fidivl
sbb
mov
gs
hlt
sub
test
clc
pop
cli
sahf
adc
nop
adc
mov
out
pop
enter
adc
or
ja
jb
sub
inc
mov
aaa
xlat
scas
repnz
test
loope
lea
inc
cmova
test
push
xor
jge
insb
cmp
sbb
push
fsubs
test
bound
mov
pop
js
mov
cmp
mov
enter
aad
cmp
add
xchg
pop
mov
push
out
jae
mov
neg
or
es
cld
test
inc
es
cmp
push
dec
ss
test
add
sbb
jbe
les
jmp
cs
push
jbe
ret
pop
jb
sub
in
cld
js
xor
mov
push
pop
sbbl
mov
inc
in
adc
scas
push
imull
jecxz
jnp
mov
ret
gs
out
lds
aaa
mov
dec
push
es
inc
adc
mov
bound
mov
dec
inc
imul
pop
shlb
add
pushf
mov
add
outsl
xchg
add
orb
jmp
mov
adc
in
test
fwait
push
bound
je
rcll
xchg
push
sbb
aad
sbb
jmp
cmp
mov
inc
mov
cs
aad
fwait
inc
in
sbb
ss
push
push
mov
push
stos
loop
notb
sbb
or
xor
cmc
xor
cmp
push
and
dec
test
pop
xorb
mov
mov
stos
mov
mov
imul
push
push
lret
or
test
sbb
pop
sahf
in
aam
and
mov
roll
xor
jne
dec
insl
pushf
mull
std
mov
leave
xor
jmp
shrl
cmp
in
leave
loope
pop
sub
popa
and
sbb
sbb
lret
cli
je
pop
aaa
iret
cmp
stos
adc
outsb
inc
sub
xor
outsl
adc
inc
divb
pop
mov
fisttpll
xlat
and
cltd
sub
and
xchg
xor
lock
cld
js
xchg
shl
repz
cmp
xchg
test
int3
jo
mov
xor
pop
jno
and
aad
pop
pop
popf
dec
mov
lock
in
daa
inc
testl
xor
cmp
push
push
push
push
or
hlt
enter
or
sbb
sub
shlb
adc
adc
jl
pop
and
fidivs
imul
mov
push
adc
in
rorb
ss
in
push
in
jno
jnp
stos
add
xchg
push
fwait
lret
lcall
lret
add
les
ds
scas
mov
ja
lret
jl
insl
xchg
mov
or
xchg
xchg
loope
pop
xor
test
and
xchg
inc
rolb
mov
shll
loop
sbb
or
loopne
enter
jg
add
pop
cmpsl
add
leave
movsb
sti
sarb
adc
cmp
add
mov
jmp
jge
jbe
pop
adc
lods
xor
mov
xchg
fisubrl
cmc
xchg
in
and
push
adc
ret
mov
push
add
test
dec
mov
call
adc
mov
inc
loop
mov
in
push
fisubs
mov
mov
or
pop
hlt
pop
bnd
mov
negb
daa
xchg
sbb
cmp
xchg
sbb
in
cmp
cs
ret
call
jl
pop
xorb
leave
in
sub
mov
push
mov
pushf
icebp
jb
les
fistps
xor
lods
sub
lods
mov
xchg
add
rol
ja
js
out
fisttps
in
fst
aad
shl
sbb
jge
daa
cmpsb
rcll
pop
jge
adc
xchg
mov
fdivs
lock
in
in
sbb
cld
xor
sbb
sub
dec
jne
xor
lock
jnp
leave
adc
xchg
dec
pop
jg
mov
in
jg
pop
and
mov
xchg
insl
gs
loopne
xchg
inc
pusha
sub
add
fdivl
mov
movsl
add
out
cltd
jo
fsubrs
xor
push
shrl
ds
scas
dec
mov
fbld
mov
repnz
jl
test
mov
sbb
mov
mov
cld
jbe
pop
pop
negl
aam
mov
scas
mov
arpl
push
out
xchg
mov
out
ss
out
inc
jp
push
sbb
xor
mov
scas
inc
rcrb
push
leave
xor
mov
roll
std
aas
jg
bound
cmp
ret
addr16
fdivs
popf
pop
dec
dec
sub
xor
mov
jae
and
test
cmp
xor
sbb
mov
jl
or
sbb
pop
or
jo
ret
or
das
aaa
insl
jnp
xor
imul
push
mov
cltd
adc
sub
cmp
sbb
int3
adc
enter
cmpsb
xchg
fwait
pop
push
dec
jecxz
leave
or
div
or
shlb
or
imul
stc
xor
dec
stos
lret
movsl
test
pop
pop
jnp
hlt
imul
mov
imul
ret
or
sbb
and
mov
mov
lret
js
stos
xor
sbb
ljmp
in
outsb
pop
dec
jae
scas
lret
mov
movsb
pop
push
push
xchg
test
movsb
test
jb
stc
and
outsl
xor
in
into
fcmovnbe
subb
jge
out
lahf
cs
cmc
ds
inc
lds
adc
lret
xlat
xchg
cld
iret
sahf
enter
arpl
xor
sbb
xchg
lock
cmp
movsb
rolb
mov
mov
in
mov
scas
jge
xchg
or
xchg
sbb
scas
lret
xor
in
jb
and
sti
pusha
xchg
pop
pop
fistpl
lea
and
mov
sbb
jle
add
mov
adc
xchg
cmp
jmp
and
fistpl
cmp
cs
dec
xchg
fdiv
cmp
loope
cmp
sub
push
jge
xor
jp
fidivrs
inc
aam
test
xchg
jnp
pop
xlat
add
sub
push
ds
or
mov
aaa
mov
arpl
js
in
ret
cmpsl
daa
or
sub
hlt
mov
mov
cmp
mov
imul
sub
jle
rorb
stos
hlt
dec
inc
aam
in
ja
push
inc
rorl
scas
fwait
pop
cltd
leave
cmpsl
or
dec
addb
pushl
int
cs
push
mov
jle
out
jle
xlat
adc
dec
inc
les
movsb
push
call
repz
decl
jge
cld
push
in
jns
xchg
mov
mov
push
pop
and
jl
repz
push
pop
dec
sarl
dec
push
jp
mov
jmp
daa
loopne
mov
inc
mov
xlat
das
push
add
inc
xor
fs
leave
popa
inc
outsb
pushf
lret
leave
mov
nop
xlat
add
xchg
jne
jle
loope
cmc
mov
sub
pop
orl
push
mov
dec
shrl
std
mov
fistps
and
jno
popf
inc
int3
and
xchg
jbe
pusha
pusha
inc
xor
mov
lds
mov
neg
ror
pop
aaa
adc
dec
nop
testl
icebp
enter
adc
adc
cltd
bound
cmp
hlt
lds
in
outsb
imul
ss
aad
rcl
mov
pop
in
testl
cmp
add
rcl
xchg
sti
ret
out
mov
bound
int
inc
sub
or
bound
xchg
push
mov
xlat
mov
pop
mov
jp
mov
fwait
sub
movl
jne
ficomps
add
push
test
jo
inc
iret
jecxz
imul
xlat
repz
ror
push
cmp
testb
std
loopne
cmp
dec
push
test
add
xchg
mov
incb
aad
shrb
sub
push
pop
mov
dec
push
mov
insb
mov
xchg
lahf
lret
daa
sub
repz
or
push
mov
mov
leave
push
or
daa
jnp
lea
xor
cmp
jae
out
xchg
add
out
ljmp
icebp
mov
loope
dec
jp
push
aaa
flds
push
dec
xchg
fdivl
out
loopne
aaa
int3
push
fucomip
inc
lock
dec
sbb
dec
sub
in
mov
imul
mov
jae
sub
std
cmpsb
int3
mov
mov
arpl
gs
push
mov
mov
jo
sub
xor
mov
enter
gs
test
pop
fnstcw
insb
jns
icebp
mov
scas
fidivrl
das
orb
sbb
push
ffree
or
test
fs
lock
xor
push
pop
js
inc
inc
std
pop
xchg
pop
arpl
push
cmp
mov
jb
int3
aad
and
fidivl
pop
inc
scas
adc
mov
into
cmpsb
fidivrs
rolb
sbb
dec
popa
cld
lret
insl
mov
push
clc
dec
xor
lret
dec
js
mov
xlat
arpl
mov
pop
movsb
sahf
xor
ret
push
loope
jo
pop
xor
loop
repnz
scas
mov
pop
cmc
add
scas
rorb
sub
fs
pusha
mov
mov
push
cmp
mov
fcomps
fdivrs
call
cmp
adc
xchg
jl
inc
bound
aas
pop
pop
bound
sub
mov
jb
cmpsl
xor
roll
inc
repz
pop
xor
fmull
stc
push
shr
jcxz
sub
mov
push
push
cmpsl
cmp
fidivs
ss
jmp
add
dec
push
sbb
sbb
mov
fbstp
sbb
fs
outsb
mov
push
jl
loope
test
sbb
xadd
das
cmc
mov
notl
pushf
xchg
add
rolb
sbb
inc
scas
rcr
pop
addr16
js
and
ds
sbb
pop
push
int
sub
jge
jmp
ret
gs
je
cmpsl
jo
cmpsl
inc
outsb
and
push
pop
or
inc
lods
std
jmp
fs
nop
sahf
mov
add
std
int
mov
sbb
lds
call
dec
in
cmp
and
mov
push
dec
inc
add
cmp
fbld
adc
sub
or
sub
sbb
cld
leave
loop
push
inc
leavew
ja
fdivr
sub
lods
rclb
inc
je
inc
mov
push
pop
or
dec
sarl
lods
std
clc
mov
fsub
jecxz
xchg
std
mov
mov
lods
jae
retw
push
call
sbb
stc
movsb
movsl
jmp
fsubrl
cmp
mov
xor
out
sub
popa
inc
int3
sbb
in
ss
mov
jae
ret
lcall
gs
cmpb
jb
push
sbb
mov
xor
jp
sahf
mov
and
mov
pop
lret
mov
and
xchg
pop
cmc
cmp
cmp
dec
push
int
xchg
outsl
pushf
dec
lcall
cmp
les
adc
imul
add
sbb
sub
cmp
mov
jno
es
pop
cmp
std
inc
popa
and
xor
cwtl
std
pop
in
mov
or
mov
xchg
jae
rcl
inc
cltd
pop
xchg
out
scas
dec
dec
cltd
and
push
rcl
dec
mov
mov
push
push
pushf
les
and
jg
push
pop
fildll
sub
lods
popf
add
sbb
mov
loope
lahf
sub
cld
icebp
push
mov
js
jp
mov
loopne
push
pop
sub
fwait
dec
sahf
cltd
out
clc
mov
lods
je
cmp
sti
scas
and
xchg
jp
push
cmc
mov
xchg
xchg
xchg
adc
hlt
lods
loopne
mov
jnp
xlat
out
rol
sub
ja
int3
test
dec
fcmove
pop
cltd
gs
movsl
data16
push
and
xor
cmp
sbb
or
cmp
mov
mov
add
jb
mov
xchg
lahf
xchg
js
push
pop
cli
push
std
add
insl
call
push
jmp
les
arpl
push
mov
pusha
jo
lock
pushf
xchg
dec
mov
out
sti
mov
xchg
arpl
loopne
fsts
dec
xor
xor
in
imul
fs
push
scas
and
adcl
out
sbb
shlb
cwtl
xchg
stos
test
or
xchg
fldenv
das
adc
inc
xchg
and
cmp
xor
mov
push
sarl
pop
loopne
mov
push
adc
push
fisttpl
dec
leave
out
sbb
push
out
mov
add
sbb
sbb
fcoml
iret
sahf
pop
movsb
mov
insb
cwtl
int3
popf
repnz
insl
popa
out
xchg
jno
inc
fistl
jns
orl
xchg
fidivl
mov
lret
mov
stos
int
lods
sbb
das
ljmp
cmp
push
lock
nop
sub
add
pop
jb
repz
mov
sub
out
mov
arpl
cld
fwait
imul
xor
sub
and
dec
cltd
mov
xor
pop
mov
cmp
push
in
adc
jns
dec
or
and
xchg
and
int
sub
andb
fisttps
out
repz
jecxz
mov
cmp
push
cmp
cmpsl
aam
xchg
lcall
mov
mov
out
test
std
mov
pop
scas
stos
lock
pop
adc
enter
pop
mov
outsl
xchg
mov
xchg
jl
loop
int3
loope
in
cmc
lods
imul
jo
push
das
xor
cmp
sub
xorb
sti
jl
aad
adc
push
fs
adc
ret
imul
sbb
add
stos
scas
jge
gs
or
sbb
jle
add
xor
inc
inc
add
dec
aad
cltd
or
aam
cmp
mov
fildll
or
inc
pop
push
cmpsb
xchg
outsb
clc
pop
lret
psrld
cmc
and
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
ljmp
xor
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
ljmp
xor
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
ljmp
xor
or
mov
test
ret
mov
repnz
or
mov
scas
clc
shr
cld
sub
sbb
or
jl
outsb
test
dec
mov
cwtl
mov
int3
out
cmp
sbb
add
jl
pop
push
movsl
push
mov
test
xchg
in
hlt
mov
and
jns
jp
sub
push
add
sbb
lret
cli
in
scas
imul
adc
mov
xlat
xchg
pop
push
jecxz
mov
jge
cmp
in
xor
in
in
arpl
pop
aaa
mov
out
pop
sub
jl
pop
shll
icebp
outsl
ror
aas
adc
adc
or
imul
cmp
xor
pop
mov
mov
test
add
in
fsubs
sbb
inc
mov
sub
or
cmpsl
dec
xor
outsb
and
gs
ja
lret
hlt
jmp
cmp
ljmp
adc
or
inc
dec
push
fucomi
jae
add
leave
ret
imul
cmp
aas
sub
jne
mov
pushf
in
mov
aad
and
sbb
xchg
dec
jp
mov
clc
in
pop
mov
cmp
inc
pop
outsl
mov
or
cs
and
dec
out
repz
in
stos
in
mov
jg
dec
pop
sbb
dec
cmp
push
fxch
rorb
in
mov
in
call
cmp
sub
sbb
or
jl
insb
push
mov
cwtl
mov
int3
enter
sub
or
jl
insb
push
mov
in
xchg
lahf
mov
fidivs
negl
mov
pushf
xchg
and
shrb
xor
lret
imull
outsl
jge
mov
cmp
fdivr
fstp
sub
aam
lcall
pop
pop
repnz
test
or
jb
pop
xchg
cmpsl
es
sti
aad
pop
fidivl
jecxz
leave
mov
stos
jecxz
jecxz
sbb
xor
adcl
leave
aas
mov
or
dec
xchg
fbstp
xchg
pop
mov
insl
loopne
mov
int3
nop
jae
test
ret
dec
bnd
and
push
leave
or
mov
cmc
mov
les
dec
cmp
mov
push
sti
fnstcw
loopne
out
push
xor
cwtl
dec
jnp
mov
mov
fistpl
jnp
lret
rolb
cmp
cmp
popa
sbb
jbe
and
sahf
lahf
out
push
mov
or
test
and
out
mov
lods
inc
shll
push
fdivrs
inc
clc
cli
jge
sarl
sub
add
sbb
xor
and
mov
cwtl
jmp
shll
sti
fildl
ss
cmp
mov
xor
mov
stc
pop
int3
mov
adc
xor
clc
gs
in
sbb
add
fadds
test
mov
shrl
mov
sub
into
and
xchg
add
pop
cwtl
adc
sbb
mov
test
xchg
push
aas
xchg
iret
mov
mov
jb
xor
mov
out
std
cwtl
mov
adc
les
push
rcll
leave
ljmp
and
bound
jns
xor
push
xchg
sbb
and
test
adc
jne
imull
in
aam
dec
inc
test
dec
xchg
xchg
lods
ds
lods
arpl
insb
push
mov
adc
cmp
push
mov
sbb
mov
push
loop
mov
int3
dec
add
and
in
and
icebp
adc
cmp
test
jnp
sbb
pop
jno
mov
pop
xchg
xlat
push
loop
out
dec
dec
dec
push
sub
mov
div
popf
push
inc
mov
inc
in
test
js
push
rcll
and
mov
xor
mov
push
inc
cmp
push
lock
pop
cltd
cs
sti
push
lret
xor
adc
fldl
rcrb
das
pop
mov
pop
scas
loop
movsb
mov
inc
fs
lcall
insl
jl
pop
cmp
gs
test
loopne
fnstsw
jmp
insb
stos
addb
cmc
ljmp
loopne
icebp
out
test
dec
or
inc
out
ret
jno
cmp
mov
lahf
je
aas
addb
dec
mov
and
mov
pop
ljmp
xchg
jecxz
stos
push
clc
insb
lahf
xchg
mov
incl
xchg
stos
jecxz
mov
shll
dec
repz
icebp
push
movsl
cmp
imul
fwait
xchg
mov
pop
fcompl
and
pop
in
test
rol
sbb
stc
test
iret
clc
scas
inc
lret
dec
push
hlt
test
push
out
out
sub
out
push
in
addb
xchg
lods
adc
popf
insl
push
add
fadds
out
and
mov
outsl
insl
mov
pop
cmpl
xlat
cmpsb
roll
aaa
lds
dec
push
dec
rorb
lahf
lods
and
sub
or
jg
popf
ret
fcompl
pop
pop
adc
mov
jmp
push
imul
and
sub
and
add
mov
insl
jns
mov
bound
imul
and
in
pop
loope
jge
jb
scas
cmp
movsb
or
jb
test
int3
js
std
out
push
shll
or
sahf
cmp
enter
push
inc
repnz
data16
div
shll
test
dec
mov
cmp
les
sarb
pop
push
jb
imul
ret
rcll
pop
mov
jge
pop
xchg
fisubl
sbb
scas
xor
in
std
mov
mov
add
mov
and
adc
mov
scas
pop
sub
add
das
imul
not
push
xchg
mov
loop
jl
in
mov
push
sahf
pop
std
je
jg
ret
out
fwait
lcall
fmuls
rol
lods
push
jmp
add
cmpsl
push
hlt
sbb
dec
cmp
sub
and
cmpsl
call
lret
andb
push
mov
xchg
mov
cmpsl
jecxz
negl
pop
mov
inc
mov
jne
push
dec
ja
push
sub
subb
push
or
and
sbb
cmp
or
into
mov
or
push
cmpsb
test
fldenv
insl
add
cmpsl
cmpsb
movsb
inc
int
push
fwait
inc
mov
or
push
sub
add
push
fmuls
jecxz
popa
stos
xor
aad
fistpl
mov
jecxz
cmpsb
loopne
ja
lock
int
pop
fistpl
mov
insb
inc
or
lret
gs
dec
push
test
arpl
pop
in
push
mov
ror
shrb
dec
and
jo
xor
dec
fisubs
cmpsb
daa
lods
enter
mov
push
add
xchg
add
ss
inc
adc
imul
xchg
and
out
mov
push
insb
sbb
dec
mov
dec
sbb
fadds
cli
repnz
orl
sbb
sbb
cmp
aaa
rol
add
daa
testl
push
sub
js
mov
ds
and
fdivrs
out
jp
lret
ret
fcomps
add
iret
test
jnp
aad
xchg
sub
cmp
mov
mov
call
fdivs
mov
les
sbb
das
out
stos
psrlw
fs
sub
cmpb
mov
dec
dec
jmp
sbb
inc
lods
imul
mov
mov
sbb
jmp
mov
pop
outsl
shrb
in
jo
sbb
adc
fwait
add
inc
jbe
jg
push
loope
pop
fmuls
or
lock
mov
cmp
xor
mov
clc
ja
add
or
jg
mov
inc
add
not
lods
cmp
loopne
xlat
and
adc
dec
xor
popf
cmp
mov
jo
roll
movsl
push
inc
sbb
pop
pop
rcr
sub
arpl
adc
adc
mov
lahf
mulb
mov
pop
in
xchg
nop
clc
fwait
mov
out
and
xor
imul
jno
jge
inc
int3
dec
mov
roll
push
dec
dec
outsb
cmp
mov
aaa
xor
popf
jl
les
popl
insl
test
popf
fidivl
add
je
xchg
or
mov
and
scas
movsl
cs
adc
nop
cmp
xchg
push
pop
int
inc
jnp
js
inc
movsl
mov
movsb
push
aaa
cmc
mov
xchg
addb
xor
lret
fdivl
lcall
and
call
inc
cmp
out
pop
cmp
inc
xchg
fisttps
das
cs
pusha
mov
loopne
jnp
jmp
mov
push
pop
add
ret
es
or
pop
xor
and
adc
mov
je
push
shlb
or
call
xchg
dec
test
pop
mull
call
das
xchg
adc
push
cli
mov
xor
sti
and
fcomps
imul
daa
push
out
push
pop
movsl
mov
inc
sub
imul
aad
inc
rcll
int
jp
in
lea
push
cmc
fdivl
xchg
mov
cmp
jae
fildll
dec
push
cmp
xlat
cmpsb
das
pop
mov
jg
call
sbb
lods
cmpsl
ja
rcll
jmp
xchg
push
sti
fnsave
mov
fdivs
sub
jg
pushf
stos
push
in
dec
mov
mov
adc
and
sbb
cmp
fwait
inc
mov
xor
mov
stc
inc
fbld
push
out
das
push
push
daa
jnp
cwtl
push
rorl
jnp
sub
xchg
mull
sbb
daa
sbb
jbe
das
jmp
nop
ret
xchg
lcall
cmp
pop
push
pop
dec
loope
inc
arpl
mov
insb
test
jbe
iret
ret
adc
fsubr
xchg
aaa
pop
pop
pop
sub
mov
out
lret
inc
inc
mov
fsubr
fs
jg
outsl
push
out
pushf
sub
shll
sbb
cld
jle
cli
jne
repnz
add
inc
icebp
push
xor
push
push
imul
jg
and
movsb
call
adc
jno
inc
and
add
and
mov
cmp
and
sbb
leave
sarb
cld
pushl
call
cmp
sbb
mov
cli
sbb
xchg
outsb
lock
shlb
je
lods
push
fcoms
cli
xchg
push
sbb
stos
repz
clc
sub
fcmovne
jns
scas
and
mov
jle
clc
dec
sbb
das
rorl
sbb
hlt
arpl
jl
push
cwtl
xor
inc
imul
pop
jae
mov
inc
and
aam
rcll
cwtl
push
gs
add
or
loop
ljmp
loop
push
xchg
mov
in
mov
pop
ljmp
and
add
push
inc
aam
mov
xchg
dec
xor
decl
inc
sub
pop
mov
mov
ljmp
jae
sub
cmp
push
scas
shlb
shlb
mov
pop
sub
sbb
push
out
jecxz
cmp
mov
data16
ss
test
loope
cmc
shrb
sbb
adc
jge
clc
or
iret
mov
adc
sbb
cmp
mov
dec
jo
jno
cmpsb
cmp
cmc
outsb
stc
xchg
sub
mov
and
int3
in
mov
and
push
fwait
rol
and
mov
mov
sub
jns
popa
icebp
inc
jno
push
jnp
cld
and
cld
sub
adc
jno
fcomi
movsb
shr
cltd
cli
js
sarl
loopne
mov
push
cmp
ljmp
xchg
scas
jmp
jne
jnp
pop
xor
sti
sub
mov
push
movsb
pop
movl
lods
test
je
pusha
pop
es
pushf
push
pop
call
scas
inc
sbbb
outsb
shlb
lret
mov
testl
test
dec
xchg
jle
lock
jb
sbb
jmp
pop
test
mov
jmp
hlt
addr16
xor
shlb
orps
and
and
movsb
repz
mov
pop
cli
aas
and
pop
pop
in
inc
mov
out
or
stc
inc
lahf
cmc
stos
jae
or
imul
mull
and
lods
hlt
push
lock
push
popa
inc
xchg
movsb
xchg
push
mov
jg
fwait
push
and
out
sbb
lret
sub
in
pop
or
cltd
or
push
imull
sti
repnz
addr16
int3
test
or
pop
xchg
das
jmp
divb
js
repz
stos
and
cmp
or
jge
imul
xor
ljmp
xor
in
sbb
lods
std
into
inc
push
sbb
sahf
test
ret
adc
sub
dec
pusha
das
lret
fadds
bound
or
jnp
inc
sub
repz
mov
rorb
xchg
sbb
pop
xchg
je
shll
js
insl
jmp
mov
outsb
mov
jbe
in
loope
ljmp
xor
adcb
test
adc
xchg
inc
loop
loopne
data16
mov
nop
push
jmp
inc
call
in
pusha
mov
or
popa
lock
cmp
in
fucomp
aam
ret
xor
fcmovne
jne
or
fst
mov
ss
push
push
xor
popa
js
push
shll
cmp
cmc
test
out
repnz
ljmp
xor
in
adc
test
pop
enter
or
inc
pop
inc
loop
sahf
aas
mov
outsl
mov
repz
or
add
jne
xor
jl
jp
jmp
scas
sahf
or
fidivrl
jg
iret
fnstcw
pop
lcall
jmp
xchg
insb
bound
cli
xor
testl
fstpt
or
mov
insl
cs
in
sbb
push
aam
jge
inc
mov
int
outsb
jae
mov
test
adc
int3
mov
jg
or
into
test
cmp
out
sub
ret
into
adcl
cmpsl
pop
and
lahf
adc
push
leave
and
or
push
xchg
call
jmp
or
insb
lods
pop
call
push
add
roll
nop
in
xor
mov
mov
push
pusha
cltd
mov
cs
xor
or
cmp
ret
mov
pop
mov
es
cltd
cwtl
divb
stc
jg
mov
lds
addl
int
sahf
or
sub
mov
rcrb
fldenv
aaa
push
xlat
mov
out
adc
mov
cmpb
insl
cs
imul
lock
pusha
xchg
sahf
loop
fists
or
bound
push
outsb
xor
mov
pop
cld
inc
or
mov
sub
pop
daa
addr16
cmp
cwtl
out
test
add
stos
ljmp
sub
into
jo
dec
mov
adc
inc
imul
mull
pushf
jb
jg
pop
xor
inc
xchg
test
mov
push
xor
fwait
push
jne
pop
dec
sub
incl
mov
mov
cli
pop
outsl
cltd
adcl
insb
sarb
test
shll
cmp
test
xor
mov
cltd
mov
out
enter
adc
push
imul
fistl
adc
push
pop
jle
add
xor
and
jecxz
fnstcw
mov
mov
sbb
push
iret
inc
and
mov
mov
daa
pop
cmp
xor
and
pop
fwait
mov
mov
and
mov
xor
ret
outsb
dec
mov
enter
sahf
ret
daa
fisubrs
clc
mov
stos
ret
lods
mov
orl
pushl
xor
into
cmp
fsts
je
std
loopne
push
add
add
jle
repz
in
shrl
or
in
inc
sbb
jno
mov
cmpsb
dec
sub
sub
testb
loope
shl
das
test
lock
pusha
into
adc
ljmp
and
jmp
and
ja
pop
mov
lret
pop
mov
ret
xchg
ret
ret
mov
outsb
movsb
adc
rcrl
mov
mov
mov
add
adc
stc
dec
sub
je
cmp
stc
jl
daa
and
cmp
std
adc
xlat
or
dec
inc
lods
in
adc
push
push
cmp
stc
in
imul
dec
mov
frstor
cwtl
mov
loop
inc
std
orb
dec
mov
daa
arpl
incl
jbe
dec
sub
cmc
and
call
stc
jmp
xor
repz
pop
mov
cli
mov
jnp
jecxz
out
sub
aas
xchg
mov
cmpsl
adc
jbe
mov
movsb
mov
adc
push
inc
push
or
bound
cli
xchg
push
mov
xchg
daa
add
xchg
push
fs
enter
jecxz
gs
mov
out
hlt
in
cmpsb
idivb
in
pop
or
lds
xchg
es
leave
clc
push
mov
lds
hlt
ss
inc
cmp
les
in
pop
lods
cmp
fldl
inc
push
xchg
inc
mov
or
xor
into
sub
in
add
out
mov
and
mov
sahf
loop
lcall
and
mov
loope
mov
and
dec
mov
out
in
scas
inc
in
stos
mov
dec
add
cmp
mov
andl
rolb
ds
jp
or
imul
stc
xorl
and
inc
or
std
cmp
jmp
jbe
inc
mov
inc
adc
test
jnp
cmp
or
fnstsw
push
cmpsl
xchg
xor
je
inc
pop
pop
insb
out
btl
pop
ljmp
imul
push
sub
pop
repz
sbb
insl
and
aaa
into
add
jg
cli
pop
and
add
push
in
jle
iret
jbe
aaa
stos
cli
enter
imul
add
xlat
mov
aad
imull
test
cmp
test
cwtl
jge
adc
call
pop
std
aaa
cltd
in
mov
dec
xchg
cwtl
or
stos
loope
inc
shrl
outsb
insl
mov
mov
lea
enter
ljmp
in
sbb
push
imul
sbb
sub
rcl
pop
xlat
pop
stos
decl
outsl
ret
adc
loopne
xchg
repnz
add
mov
clc
and
clc
xchg
push
outsl
add
push
cmp
push
mov
lea
insl
inc
aaa
push
push
rorl
push
xor
jg
in
inc
mov
xor
and
mov
sti
adc
jo
pop
lock
fstl
in
and
cwtl
sahf
leave
jns
push
jne
dec
leave
xchg
lret
fdivl
xlat
fmuls
jo
mov
enter
cld
pushf
inc
test
inc
and
outsb
pop
xchg
mov
mov
jp
shll
inc
cmpsl
xchg
pop
test
add
icebp
add
in
fildl
lds
add
mov
jno
repnz
jb
fmul
repz
jge
cltd
out
stc
jmp
out
in
js
sti
xor
shlb
insl
xor
mov
add
xchg
addb
hlt
push
movsl
popa
mov
ret
outsb
rcr
dec
xchg
das
mov
scas
adc
test
outsb
xor
gs
mov
sub
mov
or
jns
sub
ret
sbb
repz
cmp
mov
lds
or
ljmp
jae
repz
pushf
sbb
jo
jo
push
sti
aaa
push
xchg
xchg
pop
rorl
push
dec
inc
nop
pop
out
lret
xor
sahf
aas
inc
and
push
addr16
xchg
arpl
cmpsl
xchg
jne
sbb
jmp
movsl
mov
shll
mov
iret
or
or
xchg
xchg
sub
jle
mov
das
add
inc
popa
sbb
jo
neg
incl
cmp
bound
mov
pop
cld
push
inc
movsb
bound
pop
sub
dec
jle
addb
jge
cltd
xchg
pop
cmp
and
mov
jnp
faddp
sub
fucomp
xchg
inc
add
pop
leave
mov
jecxz
fstpl
inc
xchg
mov
fnsave
sarb
push
mov
ret
inc
jmp
fmulp
jle
pop
out
stos
sub
aas
xchg
daa
cmp
gs
popf
xor
and
popa
adc
xchg
lods
pop
fidivs
test
mov
xchg
mov
arpl
outsl
inc
mov
cmc
inc
mov
testb
and
fildll
loope
mov
int
testb
sbb
stc
push
je
pushf
ret
verw
subl
xchg
sbb
rcrb
add
cmp
lret
mov
pop
daa
sub
incl
ss
sbb
test
pop
or
out
cmp
sbb
push
enter
pop
jnp
mov
cmp
loopne
jmp
cwtl
insl
mov
add
stos
lds
mov
push
add
cmp
push
mov
or
inc
sbb
xorl
pop
pop
repnz
dec
mov
xlat
mov
jp
rcr
fdivl
add
pop
pop
in
leave
push
mov
or
sub
add
mov
and
mov
pop
mov
and
push
loopne
testb
pop
jmp
cmp
test
mov
adc
rcr
out
pop
xchg
fdivs
pop
mov
jne
stos
sub
mov
std
mov
push
cmp
or
jns
bound
cmp
mov
fdivr
mov
mov
mov
les
dec
into
enter
mov
push
in
pop
subb
jno
dec
dec
clc
test
cmpsb
add
adc
jno
cwtl
outsb
push
daa
enter
jne
jno
rcr
into
xlat
loope
jae
jge
lods
dec
jecxz
fst
pop
jae
divb
mov
xchg
popf
mov
int3
enter
sub
or
jl
insb
push
mov
cwtl
mov
int3
enter
sub
or
jl
insb
push
mov
orb
fmul
enter
sub
sbb
jl
insl
push
mov
jl
enter
call
ret
roll
or
in
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
mov
cmp
push
jle
add
add
add
add
add
jo
dec
add
add
or
sub
add
push
add
add
ljmp
add
add
xchg
add
add
push
or
movsb
add
sub
dec
add
pop
add
add
add
add
add
pop
add
add
rolb
add
or
insb
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
faddl
mov
sbb
lods
add
fiaddl
mov
add
xlat
add
add
add
add
add
add
add
add
lock
pop
add
cmp
push
add
add
add
pop
add
mov
push
add
lods
add
add
add
add
add
add
lds
rolb
add
add
movsb
add
add
popa
add
add
add
add
aaa
add
add
add
add
call
add
jnp
jb
push
add
add
add
mov
add
push
add
lds
iret
add
add
dec
add
mov
add
add
add
pop
add
add
add
add
add
sbb
hlt
add
add
add
add
add
add
add
add
daa
add
add
add
lods
add
add
add
push
push
add
pop
add
add
add
add
and
les
mov
add
add
adc
add
add
pop
add
nop
add
add
add
add
add
pop
inc
add
pop
add
add
cmpsl
add
add
add
add
add
add
addr16
add
add
add
add
add
add
add
add
fwait
add
add
add
add
lods
add
add
add
add
ljmp
add
pop
add
add
add
add
jns
mov
add
add
add
pop
add
add
add
lods
add
imul
add
popf
add
add
add
mov
add
add
add
add
add
xor
daa
add
add
add
add
add
nop
add
addl
pop
add
pop
add
or
pop
add
xor
sub
pop
add
add
mov
push
add
mov
add
add
add
jnp
inc
add
add
add
add
jnp
xor
push
add
add
jne
push
pop
adc
lock
add
jns
mov
add
add
add
inc
add
add
add
add
add
add
add
add
dec
add
add
add
add
daa
add
add
addl
jns
mov
add
add
add
add
add
add
cmpsl
or
popa
js
pop
push
inc
push
lea
add
cltd
iret
inc
sbb
lret
sbb
call
dec
adc
leave
adc
push
popf
mov
xchg
jl
fneni(8087
mov
leave
stc
xchg
jne
or
out
stos
insl
scas
popf
add
lea
jnp
loopne
ds
sbb
push
cld
aam
xchg
pop
aam
loopne
mov
lds
push
cmpsl
int3
lcall
loopne
hlt
roll
sub
sbbb
sub
inc
cltd
hlt
push
xchg
xor
push
js
stos
inc
xchg
push
jg
out
ss
mov
fistps
bound
sbb
repnz
mov
fadds
je
push
dec
push
push
jno
add
pusha
or
adc
shrl
adc
mov
add
loope
js
jl
cmp
and
xchg
ret
mov
or
lock
repnz
sbbb
lods
push
add
bound
pop
int
int3
jl
rcl
and
and
pop
call
inc
cld
int
outsl
ja
push
xlat
pop
pop
lods
or
notb
shr
js
loopne
dec
mov
scas
ja
clc
xor
loope
xor
cld
imul
pop
adc
jmp
dec
xchg
mov
xor
test
shll
pop
inc
lahf
lea
js
ss
repz
add
daa
and
ds
cld
jp
shll
pop
mov
sub
sub
loopne
add
xor
dec
sbb
sub
mov
pop
pop
dec
mov
mov
mov
pop
and
testl
pop
popf
mov
push
mov
mov
sbb
and
cmp
ss
out
push
add
inc
nop
rorl
aaa
mov
xchg
rolb
sub
mov
add
fs
divb
je
repnz
cmpl
adc
sbb
sbb
inc
cmp
adc
call
cmc
xor
filds
in
loop
and
aam
mov
adc
in
or
fiadds
shlb
cltd
fsubrp
in
xchg
mov
lods
cmp
ret
pop
inc
xor
mov
scas
cmp
das
or
jmp
imul
or
mov
mov
in
and
dec
jecxz
mul
or
mov
in
in
sub
out
jns
loope
xchg
fimull
mov
mov
scas
arpl
nop
push
sbb
stos
push
popf
outsl
adc
push
xchg
ds
dec
xor
sub
xchg
inc
fidivrs
and
cmp
xchg
repz
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
