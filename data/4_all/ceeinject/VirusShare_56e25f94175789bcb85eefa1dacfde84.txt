fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
js
imul
lret
dec
pop
cmp
fidivrl
iret
and
jnp
dec
lret
pop
mov
or
sti
aaa
lret
dec
fstpt
stos
sub
sbb
jmp
mov
inc
stos
cmp
jns
sti
leave
arpl
xchg
mov
sbb
jl
push
iret
jg
sbb
mov
sub
rcll
roll
mov
dec
popl
pusha
xchg
ljmp
stos
inc
xchg
lret
xchg
or
and
dec
inc
sub
clc
fwait
or
ljmp
repnz
push
adc
jmp
into
lret
stos
or
cmp
mov
cmpsl
sub
jmp
shl
jo
fs
xchg
jmp
pop
jle
cmpsl
inc
sub
dec
test
adc
pop
mov
fstpt
push
pop
js
cmp
xchg
test
testb
mov
in
ret
lret
ds
push
mov
inc
ss
les
jmp
or
dec
rcr
stos
push
mov
cmp
pop
sti
adc
pop
mov
jne
mov
xor
push
filds
outsl
loop
sti
sub
scas
xor
inc
lds
dec
out
jp
scas
push
mov
push
les
out
in
negl
mov
ret
ja
push
jo
mov
sbb
sbb
jmp
fisttpl
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
sub
push
ret
cwtl
jne
test
adc
dec
dec
sub
sub
shlb
aam
loopne
mov
in
cmpsl
popf
pusha
aaa
jg
mov
jnp
sbb
xchg
pop
loope
sub
xor
lret
call
sbb
xlat
jp
xchg
out
rcll
lret
mov
jo
inc
outsb
cmp
inc
jle
lahf
jl
adc
test
sbb
jl
xor
push
mov
mov
data16
movb
mov
in
popa
cmc
dec
dec
xchg
sahf
mov
jmp
ja
or
imul
ss
out
fnsave
cwtl
xchg
dec
cmp
stos
lcall
and
jmp
div
inc
cmp
fnstenv
jno
inc
and
mov
fsubl
and
dec
test
hlt
fucomip
cmp
cmc
mov
add
cmpsl
mov
xor
mov
insb
out
repnz
push
mulb
sarb
pusha
ret
cwtl
stos
xchg
iret
jo
divb
out
aad
xchg
dec
pop
adc
xchg
imulb
mov
mov
push
int
stos
ret
mov
pusha
jmp
pop
mov
fdivrl
or
sbb
xchg
jmp
mov
test
or
mov
sub
adc
or
mov
in
add
imul
pop
and
push
scas
jecxz
subl
cltd
rclb
xor
xor
cmp
mov
pop
pop
push
sbb
test
out
lret
movsb
xor
xor
push
and
fcompl
add
loope
clc
or
mov
mov
cwtl
rclb
insl
jbe
lds
fildll
sub
cli
mov
aam
mov
cmpsb
insl
fwait
or
sbb
ja
shl
or
rcl
add
in
pushf
mov
pop
hlt
ret
adc
pop
pop
or
cltd
mov
cmc
add
iret
in
adc
scas
jle
push
mov
dec
cmp
dec
loopne
pop
inc
sbb
pop
clc
and
inc
cltd
ljmp
ljmp
sbb
pusha
cmpsl
mov
xchg
jg
jne
pop
xlat
push
iret
popa
pushf
dec
popa
mov
or
fwait
push
stos
mov
jnp
popa
sbb
mov
pushf
pop
pop
jl
xchg
lcall
pop
jge
pop
or
mov
jbe
scas
mov
dec
mov
mov
sbb
divb
mov
inc
jnp
leave
sbb
pop
bound
inc
loopne
cmc
addb
rcr
add
add
lock
sbb
push
push
in
push
inc
hlt
lret
xchg
jp
data16
je
ds
into
jp
xchg
xor
adc
mov
mov
xor
push
into
jb
xor
pushf
test
rcll
pop
decb
std
out
cmc
xchg
lods
dec
inc
sbb
mov
mov
dec
dec
mov
scas
push
loope
and
push
cmpsb
test
cmp
rcll
inc
outsb
sub
cmp
inc
xor
aam
lds
jl
add
mov
pusha
mov
cli
jg
test
shrb
iret
xorb
or
xchg
call
sub
adc
xchg
ds
push
int3
sbb
jne
movsl
dec
pop
xor
cmpsl
daa
lret
incl
clc
pop
xor
daa
popa
int3
imul
loope
loopne
sbb
inc
ret
ja
lds
xor
add
lcall
mov
inc
push
or
ljmp
xor
stc
cmpsl
push
mov
cmpsb
mov
pop
xor
mov
clc
sbb
dec
dec
sub
mov
inc
dec
clc
xchg
or
jae
xor
aad
sub
pop
add
ja
fisttpl
sti
sbb
sub
mov
gs
mov
int
xchg
aam
outsl
pop
mov
mov
out
lret
pop
sbb
pop
jp
cmp
in
add
ljmp
nop
mov
pop
inc
cwtl
pop
sub
test
repnz
and
ret
pop
aaa
into
out
rcr
xor
out
stos
out
dec
cmp
rolb
vminsd
aas
sbb
inc
mov
std
xor
xchg
xor
cmpsb
mov
int3
jo
mov
cli
mov
mov
cmp
add
inc
rolb
xchg
or
and
mov
cmp
in
cmp
aaa
lods
xor
pop
lock
push
xchg
cmp
or
add
sbb
cmp
loope
inc
fnstcw
cwtl
ficoml
dec
popa
rcrb
mov
inc
xchg
sbb
rclb
jns
or
loop
inc
add
shrl
and
inc
mov
pop
mov
gs
insl
iret
test
in
js
pop
push
xchg
outsb
jns
aad
movsl
frstors
lods
cmp
xchg
add
shlb
jle
or
mov
pop
std
lret
clc
and
iret
insb
sbb
mov
push
cmp
mov
ret
push
mov
fs
mov
push
adc
cmp
sbb
cmp
or
arpl
push
jp
mov
jecxz
daa
xor
sub
imulb
mov
mov
xor
ljmp
pop
pop
ds
xor
ja
inc
gs
mov
push
fs
push
repz
jg
jmp
pop
lea
jno
mov
fs
or
lock
icebp
jno
cmp
mov
out
add
frstor
jp
div
notb
imul
sarb
popa
iret
sub
insl
mov
add
out
js
jno
mov
mov
push
loopne
xchg
lock
sbb
sbb
jle
test
lcall
ss
mov
int
pop
in
into
outsl
enter
cmpsl
addb
xor
dec
sbb
stos
mov
fstpt
cmp
mov
jbe
fwait
xchg
inc
jmp
mov
rol
push
pop
inc
cs
and
call
add
add
sbb
stos
xchg
outsl
inc
inc
or
cmpsl
sbb
dec
or
mov
pushf
or
cmp
fists
in
cmp
clc
or
ret
push
lcall
xchg
mov
jmp
mov
add
jl
adc
flds
push
fiadds
jg
das
mov
jbe
and
sub
ja
divb
dec
pop
or
fstl
scas
fcmovnbe
stc
imul
jae,pn
bound
dec
mov
lock
add
jae
xchg
cmpsl
pop
or
xor
mov
pop
loop
cs
test
cmp
pop
test
int
les
push
movsl
mov
jns
ds
push
jbe
loopne
sti
fcomip
call
das
orl
or
das
dec
jmp
lock
lds
adc
mov
jp
fcoms
mov
icebp
fidivl
xchg
movsl
dec
jmp
rorb
sar
dec
fldenv
adc
inc
imul
bound
jge
frstor
cli
rorl
aaa
movswl
pop
inc
daa
sub
std
sub
jmp
sub
scas
pop
push
roll
fst
leave
mov
sub
and
das
and
sti
add
pop
dec
sub
stos
out
and
sub
and
mov
sub
pop
add
bound
aad
stos
pop
inc
mov
ret
ret
sub
mov
push
sbb
scas
mov
inc
push
and
push
mov
dec
jns
ja
add
cmpsb
mov
inc
or
push
addr16
int3
clc
test
lahf
cmp
into
cmp
daa
call
subl
and
or
pusha
out
sub
dec
xor
xlat
sub
cwtl
add
dec
cmp
sbb
sbb
out
pushf
cltd
mov
leave
dec
in
inc
pop
in
call
in
popf
out
and
insb
dec
cmc
lods
iret
jno
flds
call
fcomps
mov
outsl
lret
out
test
cmp
or
popa
xchg
stos
ret
push
lds
dec
fsubp
lods
fsubs
add
insl
lds
xchg
into
mov
jnp
cmp
jo
test
cmp
andl
mov
fwait
inc
pop
sbb
and
cmpxchg
mov
push
retw
nop
jb
jae
out
ljmp
ret
mov
hlt
imul
shll
xor
outsl
aad
xchg
jl
leave
mov
sahf
std
int
inc
lea
jg
adc
stos
daa
in
lahf
sbb
int3
stos
push
add
or
xor
xchg
add
mov
dec
into
pop
cmp
iret
stos
dec
xchg
jnp
jecxz
mov
push
insb
pop
mov
int
mov
rcll
repz
int3
sub
scas
sub
mov
add
rcl
loope
sbb
mov
xchg
and
popa
addl
enter
es
mov
mov
fcoms
pop
sbb
hlt
and
and
imul
or
fstp
test
lds
dec
xchg
lcall
mov
call
ret
mov
push
divb
sub
push
mov
arpl
enter
stc
popf
push
mov
test
push
popa
sub
cmpb
gs
sub
xlat
push
mov
jge
pop
and
mov
test
or
mov
mov
cld
mov
rcrb
push
imul
mov
shr
adc
xchg
mov
mov
jecxz
dec
push
cmp
adc
push
jno
inc
rorb
outsb
sbb
fildll
lret
push
shl
inc
pusha
vmaxpd
pop
inc
sub
jno
push
call
out
pop
idivl
mov
and
mov
lods
sub
mov
leave
lcall
insb
mov
aad
loope
adc
stc
cmpb
les
mov
rcr
pusha
pop
cld
xor
je
jo
ss
mov
cmp
push
push
dec
enter
cltd
mov
sahf
jecxz
add
cli
mov
inc
adc
dec
sbb
push
jns
jae
std
pop
leave
or
inc
dec
add
out
dec
dec
dec
push
call
fildl
pop
jge
inc
sbb
pop
push
jne
cmp
mov
gs
xor
pop
cmpsl
or
bound
dec
push
out
fdivr
scas
jg
outsb
push
jo
or
pop
pusha
cmp
mov
dec
push
xorb
and
add
cmc
and
sub
pop
jns
inc
xchg
mov
mov
mov
inc
stc
lcall
fdivl
leave
cmp
or
and
subb
ror
sbb
enter
mov
aaa
mov
adc
fsubrs
mov
aad
movsl
dec
mov
aaa
mov
dec
arpl
aaa
les
lret
in
pop
pop
or
cld
mov
or
fcompl
jbe
jb
adcl
xor
or
dec
and
mov
inc
out
mov
add
pop
jp
cmpsl
add
mov
pop
or
incl
xor
fisttpl
imul
sbb
cmp
lds
jne
in
mov
and
inc
test
xchg
pop
xchg
or
lods
lds
mul
int3
aas
inc
inc
pop
mov
pop
inc
imul
sti
outsl
mov
and
push
jne
scas
pop
and
xlat
icebp
pop
jmp
aas
fadds
clc
sub
daa
dec
ljmp
lock
inc
aas
mov
aam
mov
cmpsb
sahf
xchg
cmp
or
fnstenv
mov
out
sbb
adc
daa
shll
push
aam
leave
fbstp
push
sbb
xchg
or
cmp
or
mov
daa
push
mov
sub
test
inc
and
mov
mov
inc
jns
outsl
lcall
aas
movsl
add
push
mov
outsl
aad
xor
out
cmp
mov
jne
sub
imulb
test
mov
leave
mov
cmp
test
test
cmpsb
mov
cmp
or
sbbl
mov
inc
mov
inc
jle
pop
in
or
mov
or
xor
out
sub
xchg
mov
into
aam
mov
aad
sub
sub
imul
das
push
iret
enter
pushf
das
pop
addr16
aas
cmp
sub
mov
dec
xchg
cmpsb
dec
push
xchg
outsl
loopne
inc
adcb
mov
inc
cmp
mov
cld
je
push
js
adc
pop
mov
mov
js
cmp
insl
add
test
cmpsb
jmp
bound
mov
inc
fadds
and
dec
xchg
fiaddl
lods
adc
out
mov
mov
push
daa
shl
ljmp
mov
aad
fsubrp
cmp
push
lods
sbb
or
test
cmpsb
xor
jl
lds
bound
mov
pushf
inc
mov
test
sub
jmp
fwait
out
mov
stos
ficomps
sahf
cmp
loop
pop
movsl
xchg
icebp
lcall
add
jns
icebp
xchg
scas
jg
cmp
pop
or
xchg
imul
repnz
aaa
mov
int3
mov
push
dec
imul
mov
sbb
lods
pop
icebp
add
pop
sub
dec
xchg
loop
push
fstpl
xchg
push
sbb
mov
or
xchg
sbb
sbb
inc
xor
jnp
aas
mov
les
pop
xorb
mov
push
mov
dec
call
mov
stos
fisubs
xchg
js
xchg
xchg
les
bound
inc
adc
sbb
cmp
test
and
test
pop
dec
mov
mov
or
clc
daa
fucomp
movsl
mov
xchg
testb
cli
adc
xchg
fdivs
and
inc
inc
repnz
or
shll
adc
push
aas
xchg
je
jb
sbb
cmp
lods
lods
loop
sbb
jmp
sbb
test
lret
xor
mov
xchg
pop
jmp
pop
mov
add
ficompl
int
push
or
mov
sahf
pushf
push
xor
aam
jbe
subb
mov
xchg
lds
icebp
repnz
outsl
cmpsb
das
inc
sub
dec
lret
int
push
and
int3
inc
ret
add
sub
pop
or
pop
push
shld
std
addr16
outsb
bound
aad
addr16
jno
sbb
cmpsb
add
mov
insb
inc
je
mov
sub
cltd
sbb
hlt
mov
sahf
dec
or
dec
push
mov
insb
pop
arpl
std
lock
pop
imul
or
sahf
or
xor
stc
in
pop
mov
rcrb
mov
lret
cltd
jae
rclb
push
cmpsb
dec
es
cmpsl
push
dec
incl
push
xchg
cmpsb
ret
push
fsub
js
hlt
mov
lock
pop
adc
jo
push
pop
jbe
in
cmpsb
test
fldenv
imul
cwtl
fnstenv
lahf
inc
sarb
mov
rcl
push
mov
cmp
sub
aad
inc
sbb
pop
mov
jb
dec
test
sti
ljmp
ja
inc
pop
popa
mov
repz
ljmp
test
jl
or
xor
inc
push
lock
adc
insb
dec
xor
sbb
inc
inc
or
movsl
mov
negb
jne
std
cmpsl
and
in
in
pop
shlb
sub
sub
ficomps
adc
loopne
push
movsb
scas
dec
jae
ds
xchg
scas
movsb
xor
jbe
out
arpl
and
push
icebp
inc
xchg
mov
or
pop
aam
rorb
call
mov
and
mov
sub
mov
mov
mov
mov
movsb
inc
add
and
mov
xor
bound
mov
jo
mov
xchg
xlat
inc
iret
notb
sti
sbb
clc
out
sub
adc
sub
xchg
and
pusha
mov
cmp
rclb
in
stos
dec
jns
hlt
js
xchg
mov
loop
cmp
fcoml
inc
addl
stc
fsubrs
jp
popf
xor
push
addl
mov
mov
and
inc
pop
add
inc
out
cmpsb
scas
jns
imul
pop
ds
add
sub
lods
mov
xor
sub
fists
pop
cmp
repz
sbb
mov
add
adc
daa
imul
mov
sar
int
inc
popa
xor
inc
cmp
arpl
insb
lcall
sahf
cmp
xchg
adc
mov
push
lods
inc
lock
sub
mov
mov
push
xchg
pop
cmpsl
test
xorb
mov
pop
inc
xchg
lock
xlat
lods
dec
jge
in
addl
mov
push
or
push
pop
sub
leave
xchg
lods
stos
sub
adc
in
out
sbb
ficoml
movl
sahf
cmp
lret
cltd
jle
jle
and
mov
pop
mov
xchg
or
jae
fistpll
adc
gs
aam
add
mov
cs
sub
sbb
ficomps
pop
dec
in
mov
out
out
cmp
imul
fwait
insl
stos
and
ret
mov
sbb
cltd
arpl
jnp
add
push
adc
out
sbb
xor
mov
jae
sbb
add
negb
cli
iret
scas
enter
mov
cmpsl
in
stc
jns
xchg
xor
mov
leave
or
jns
xchg
test
out
adc
and
lret
or
movsb
jmp
push
mov
jns
mov
lret
pop
je
mov
jle
mov
test
sbbl
scas
jle
movsb
pop
bound
rcrb
lahf
push
xchg
lret
dec
jnp
rorl
imul
push
or
aaa
lret
pop
bound
stc
aas
push
xchg
dec
pop
or
scas
imul
mov
sahf
xchg
add
out
cwtl
bound
and
out
mov
xchg
test
pop
aas
cmp
ret
jl
sbb
lea
add
fcmovu
ret
cmp
mull
sbbl
add
test
mov
int3
pop
add
dec
jo
fists
and
adc
test
fstpt
movsl
cmp
rcrl
sbb
dec
sbb
or
mov
inc
addr16
push
dec
jae
cs
cmp
cmc
push
stos
mov
dec
or
iret
adc
and
lods
xchg
add
in
in
in
imul
in
pushf
xchg
pop
xchg
in
outsl
push
mov
mov
lret
enter
push
lock
push
sub
and
push
clc
mov
aas
ltr
mov
jae
pop
dec
shrb
imul
repnz
lods
ret
popf
jmp
ror
push
xor
push
push
or
dec
notb
push
add
cltd
add
xor
fucomip
cld
stc
fdivr
rol
lcall
notl
adc
iret
cmp
sar
adc
incl
shl
aas
cltd
inc
repz
fstl
sahf
in
inc
pop
mov
xlat
in
xchg
pop
push
jmp
scas
inc
data16
nop
fstpl
bound
jg
xor
std
test
aam
mov
mov
fwait
shlb
popa
jl
jmp
jg
mov
test
cli
and
movsb
dec
xor
cmp
adc
aaa
cld
roll
or
dec
cmc
xchg
lods
mov
push
jle
mov
out
cmp
xor
push
repz
test
adc
rcll
orb
cmpsl
lcall
icebp
xlat
shlb
jmp
es
in
insl
jns
outsb
je,pn
push
addr16
push
and
sbb
gs
fwait
mov
test
iret
stc
mov
test
aam
push
fisttps
icebp
dec
lahf
gs
dec
lahf
bound
mov
and
push
js
daa
setl
jp
cmp
push
add
ds
and
adc
gs
xor
pusha
sub
dec
and
leave
aas
dec
mov
or
cvtps2pi
outsb
mov
pusha
xchg
lahf
cmp
cmc
push
stos
cmpsb
push
das
inc
add
xchg
jne
mov
inc
jp
cld
mov
outsl
cmp
shll
xlat
mov
and
stos
xor
mov
imul
lock
nop
push
subl
imul
nop
test
mov
nop
xor
jb
dec
cmc
dec
pop
xchg
fwait
cmpsb
dec
fisubl
fisttpll
sti
sbb
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
sti
pop
lret
dec
fstpt
stos
sub
sti
imul
fisttpl
pop
mov
or
mov
mov
fldt
mov
fwait
sti
mov
jnp
dec
lret
pop
mov
sub
outsl
jmp
sti
add
imul
stos
cmp
sti
xchg
adc
jno
lret
sub
mov
je
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
movsb
mov
xchg
popf
lret
in
and
and
push
inc
lret
xor
and
ret
xchg
les
aam
aam
hlt
movsb
nop
pop
sbb
xor
and
es
fs
fstpl
int
fsubrl
dec
daa
sbb
push
cmp
dec
xor
dec
or
mov
pushf
sbb
add
scas
into
mov
daa
pusha
lods
clc
iret
cmp
sub
hlt
mov
jnp
inc
or
popf
jmp
cli
mov
test
push
sbb
test
out
mov
pop
test
cmpsb
mov
add
pop
fucomi
icebp
inc
std
sahf
je
and
aam
adc
outsl
divl
andb
lret
cmp
je
int
xor
cmp
dec
nop
rol
adc
mov
cld
mov
pop
call
fs
mov
daa
fsub
xor
lock
pop
punpcklwd
mov
jl
outsb
mov
gs
jl
movsb
aam
and
adc
les
aam
les
pop
sbb
sub
sbb
xor
cmp
notb
jmp
andl
xor
inc
js
pusha
inc
push
sbb
aam
in
xchg
out
loopne
ljmp
pusha
inc
popa
xor
es
ja
inc
adc
mov
shl
loope
out
les
inc
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
pop
xchg
lods
xor
or
cld
sti
jp
aaa
clc
mov
jae
movsl
mov
cmp
mov
xchg
xchg
adc
gs
jle
movsl
push
push
jmp
addr16
shl
push
fdivl
mov
fstpt
repz
mov
pop
mov
cs
jmp
repz
sub
jne
add
and
out
jecxz
mov
adc
or
popf
cmp
push
popf
loope
test
jo
cmp
dec
inc
mov
dec
inc
jnp
mov
ret
add
test
push
call
sbb
mov
pop
out
push
add
xchg
inc
mov
mov
popf
push
adc
cli
xchg
xor
test
dec
and
in
xchg
inc
sbbl
fisubs
lahf
xchg
pop
adc
or
pop
jle
test
shlb
push
sub
rcl
push
mov
push
repz
mov
loopw
mov
call
sbb
pop
aaa
sbb
mov
stos
mov
test
imul
jbe
pop
dec
xchg
cvtpi2ps
push
in
xor
rorl
pusha
xor
pop
mov
push
fwait
dec
mov
mov
jb
mov
xor
add
in
mov
sahf
int
fsubrl
mov
sahf
push
pop
cltd
mov
js
or
push
cmp
aas
inc
mov
cmc
lret
pop
dec
sbb
repnz
mov
mov
rcrb
inc
add
adc
sub
repz
aaa
stos
stos
test
xchg
push
call
int3
and
iret
fistpll
hlt
pop
pop
xor
aas
add
jecxz
cmc
movsl
xor
add
cli
mov
dec
subl
fdivrs
test
adc
in
pop
dec
incl
ds
mulb
push
inc
push
dec
scas
sub
fcomps
outsb
or
daa
jnp
mov
sbb
and
push
leave
add
int
lahf
mov
mov
test
push
and
jo
in
loop
mov
jns
lahf
repz
xor
scas
lods
dec
dec
xchg
inc
daa
cmp
out
adc
add
xchg
mov
and
jo
aad
mov
outsb
shlb
jl
imul
mov
mov
or
fisubrs
lea
push
push
into
inc
in
mov
xchg
pop
mov
in
jno
in
push
add
ficoms
push
sbb
je
lock
jae
mov
js
movsl
ljmp
scas
push
inc
xor
adc
in
enter
loopne
ljmp
mov
ja
jne
movsl
sbb
inc
popa
xchg
aam
jae
je
insb
cmpsb
mov
into
orb
fstl
ret
dec
add
es
ss
test
mov
xor
jle
xchg
pop
clc
or
pop
xor
adc
dec
inc
xchg
adc
repnz
jle
ficoms
push
sub
mov
test
adc
xchg
xlat
and
adc
xor
jmp
cmpsl
inc
inc
push
imul
pushf
add
loope
cmc
push
inc
adc
dec
mov
adc
outsb
sbb
jae
scas
jg
dec
sbb
test
lea
std
arpl
or
lahf
imul
and
pop
or
sub
shlb
pop
cmp
fstp
pop
lahf
xchg
jbe
mov
enter
les
fiaddl
push
mull
addr16
lods
and
and
jno
inc
mov
mov
or
shrl
outsb
outsb
sub
fistpll
fstpt
outsb
out
neg
push
pusha
jae
mov
jo
ds
roll
xor
loope
cmp
lock
lret
inc
arpl
add
mov
mov
aam
aam
jg
xor
mov
testb
pop
mov
clc
lock
sahf
in
jo
jno
xor
imul
mov
push
pop
sbb
pop
mov
xchg
mov
pop
sbb
loop
bound
lret
in
lret
mov
cli
insl
mov
pop
in
xor
fidivl
fstpl
lods
mov
xor
loopne
je
stos
aad
stos
push
xorb
jno
pop
shrl
rcll
daa
push
or
sahf
mov
out
ljmp
dec
fsub
inc
loopne
shr
inc
scas
out
sub
add
rolb
mov
fsubs
pop
mov
mov
test
imulb
xor
xchg
std
std
and
mov
jae
jnp
jnp
repnz
mov
arpl
add
mov
push
fsub
inc
inc
lods
hlt
add
push
insb
xor
lds
test
xchg
clc
cltd
sti
adc
insb
add
xchg
mov
lds
repz
push
in
jbe
lcall
lods
test
repz
jno
test
pop
pop
shlb
push
xchg
mov
push
lds
lahf
push
xchg
scas
ja
lcall
mov
shlb
ret
fimull
jge
inc
daa
sbb
imul
pop
pop
add
shrl
fisubl
cmp
fs
insb
nop
inc
xor
fistl
je
adc
loopne
or
lods
into
xorl
dec
push
or
lods
xchg
fs
mov
leave
cld
dec
or
fstps
test
int
cmp
andl
mov
ss
aas
pusha
pop
jle
xor
fs
adc
jo
mov
mov
push
cld
xorb
mov
leave
into
xor
cmp
jge
push
ror
cmp
orb
mov
cmp
and
jle
or
out
inc
rcr
aaa
test
mov
pushf
push
int3
cmp
iret
lahf
mov
cli
push
and
aam
xor
addr16
aaa
int
rcr
push
int3
cwtl
rorl
scas
int
cmpl
rcrb
rcll
sarl
sub
ret
push
mov
cmp
fcom
rcl
adc
jb
pop
push
cmc
mov
int
and
and
les
mov
mov
jo
repz
jo
add
adc
fimull
push
cmp
fwait
movsl
dec
cltd
xchg
fdivp
loop
sbb
scas
addr16
xchg
jnp
mov
stos
fcoml
lods
jecxz
jbe
loop
xor
and
push
inc
sbb
iret
sbbb
ficoms
cli
jge
mov
or
dec
dec
inc
sahf
xor
push
aas
loope
in
jle
xor
xchg
aas
and
and
mov
scas
jae
int3
rorb
jl
push
imul
xorb
xchg
xchg
fs
imul
pushf
andb
orb
push
mov
jge
mov
sbb
cmc
add
pop
inc
jecxz
cmpsb
cmp
addb
add
jle
sub
mov
adc
cwtl
xor
inc
std
add
mov
lock
push
sbb
mov
std
fwait
push
mov
jp
loopne
jne
in
add
cmp
jb
mov
or
repz
int
and
sub
dec
lods
mov
mov
out
ds
mov
popa
leave
cs
sbb
xchg
adc
imull
clc
sahf
or
stos
repz
loop
hlt
or
leave
jle
mov
pop
fidivs
clc
xchg
sbb
mov
add
and
negb
mov
lods
cwtl
mov
xor
xchg
xchg
adc
and
cli
xchg
shrb
mov
xor
cltd
mov
je
loopne
or
sbb
mov
in
les
add
ss
repnz
xor
fsub
imul
dec
shr
lods
int
mov
jecxz
mov
cmp
pop
stc
push
sahf
push
hlt
sub
negb
push
sub
orl
fdivrp
movsl
mov
hlt
shll
pop
add
cli
xor
adc
jecxz
push
f2xm1
mov
or
add
push
mov
cmpsl
insb
js
fdivl
testb
mov
sub
pushf
stc
xchg
jne
pop
xchg
pop
xchg
cli
popa
hlt
outsb
addr16
xor
aas
std
jl
out
dec
fcomps
lds
mov
pop
or
cmpsb
mov
insb
divl
loope,pt
fisubrl
xchg
mov
pop
push
int
lret
ja
xchg
enter
call
cmpsl
or
push
xchg
adc
xchg
mov
pop
test
mov
pushf
popa
jge
adc
pop
js
iret
jae
pop
scas
sbb
and
add
jmp
in
xor
jg
inc
cmp
pushf
jp
ret
push
add
testb
xchg
xor
xchg
mov
xchg
jle
and
rorl
jecxz
das
xchg
add
xlat
rcrl
or
cmpsb
repnz
shr
scas
add
nop
lret
lods
pop
mov
sbb
in
adc
cltd
mov
js
inc
push
jbe
xor
loop
mov
aam
pop
iret
xchg
and
sub
aam
jg
inc
push
mov
je
ja
shll
cmp
loopne
pop
cltd
imulb
push
mov
mov
lods
mov
mov
sarl
xchg
jo
pushf
lods
push
jge
int
mov
xlat
push
in
sbb
adc
mov
ret
mov
pop
adcb
dec
pop
ljmp
fildl
into
or
push
pop
movsb
sarl
outsb
cwtl
xchg
mov
mov
ljmp
movb
int3
cld
repz
and
call
and
negl
adc
pop
adc
and
dec
adc
and
pop
sbb
sub
adc
int
jne
sub
pushf
lahf
dec
in
inc
mov
push
push
cmp
push
xchg
ja
stos
cmpsb
push
inc
inc
sbb
pop
inc
lods
and
cld
addr16
inc
out
cld
xchg
es
lods
iret
lcall
dec
push
cmc
push
push
mov
insl
fiadds
add
aam
adc
inc
cmp
aad
sub
mov
leave
test
lds
mov
push
cmpsl
inc
push
jp
jecxz
xchg
lods
sbb
sbb
testb
ret
cmc
mov
cmp
adc
enter
jecxz
ss
int3
lret
iret
dec
in
loope
into
jb
rclb
inc
out
jb
mov
push
xchg
rcll
add
iret
mov
int3
out
gs
dec
mov
fsub
aaa
push
pop
inc
cmpsb
jnp
push
mov
inc
repnz
es
ror
mov
lea
js
adc
pop
add
dec
testl
pop
xor
jg
lds
pop
mov
imul
xchg
push
jne
pop
scas
sahf
clc
shrb
mov
cwtl
push
xor
xor
neg
into
pushl
pop
sbb
jno
mov
adc
loop
pop
push
insl
mov
movb
adc
repnz
inc
loop
add
or
mov
dec
arpl
jecxz
div
mov
push
aaa
cli
or
push
mov
fcmovu
xor
inc
leave
dec
lcall
mov
or
lock
adc
push
fiadds
xchg
pop
imul
pop
and
cmp
jbe
mov
fbstp
sub
pop
sahf
loopne
mov
shrb
hlt
std
and
pop
movsb
push
out
inc
lea
jb
inc
inc
sbb
lds
jbe
in
cmp
dec
addr16
inc
mov
dec
leave
dec
scas
inc
mov
neg
adc
add
xchg
xchg
sbb
aaa
xor
mov
push
jp
add
or
xlat
push
lret
out
xchg
outsl
movsl
iret
adc
arpl
test
push
and
mov
ds
test
cmc
in
dec
popa
js
cltd
and
lahf
scas
je
xchg
add
loope
ds
aad
frstor
imul
add
xchg
jo
xlat
aad
xchg
cwtl
push
int3
icebp
cs
sub
mov
data16
jmp
or
xchg
mov
in
or
xlat
imulw
xor
mov
mov
or
fs
jb
dec
jnp
das
add
test
ljmp
fiaddl
push
xchg
pop
cmp
jae
pop
loopne
dec
jge
xor
daa
mov
jne
lods
pop
cmc
mov
into
add
lahf
pop
dec
xor
cli
cmpsl
lret
or
fadds
insb
add
repz
ret
into
cs
push
fcmovnbe
dec
sbb
and
add
xchg
jno
or
cld
mov
ljmp
lcall
xchg
ret
cmc
in
aas
sub
xchg
stc
bound
leave
xor
dec
adc
adc
loope
aam
movsb
out
lds
and
in
mov
insb
pop
cmp
sbb
mov
jbe
or
and
xor
and
adc
xchg
out
xchg
fsubl
popa
lea
mov
push
push
outsl
mov
dec
sub
shl
push
test
pop
jmp
jbe
xor
in
int
insl
dec
push
into
packsswb
adc
pop
bswap
add
cs
mov
out
pop
orl
popa
jne
dec
popa
cmp
rorb
inc
sbb
in
stc
push
gs
dec
fs
jno
mov
mov
mov
inc
and
mov
xchg
push
popf
stc
jg
mov
jp
pop
xchg
and
iret
stc
mov
pop
jmp
mov
push
pop
sti
imul
rcrb
inc
and
mov
movsb
movsb
xchg
ret
addl
ret
shl
ficoms
adc
push
test
loopne
pop
iret
push
std
adc
sub
stos
mov
imul
and
cmpl
adc
or
shlb
jmp
pop
sbb
data16
cmp
mov
inc
sub
push
jmp
adc
xor
xchg
and
sub
cs
outsb
inc
lahf
in
xchg
jle
std
iret
pusha
jb
hlt
xchg
jae
mov
mov
fdivl
adc
fistps
xchg
icebp
push
push
gs
rcl
or
aam
cmp
mov
xchg
push
add
movsl
stos
lods
mov
xchg
ja
xor
int
arpl
add
adc
shll
into
xchg
fistl
jo
add
mov
arpl
jo
jno
cmp
stos
pop
mov
cld
lock
lahf
ret
je
shlb
mov
xchg
inc
ret
inc
rclb
mov
add
inc
rcl
jnp
enter
repnz
icebp
cli
stos
shlb
sahf
xlat
mov
lods
jle
cmp
sarl
lock
out
clc
cwtl
bound
push
sub
aas
lds
ficompl
mov
bnd
sbb
bnd
push
imul
cs
fisttpll
scas
cltd
jecxz
test
aam
and
dec
add
mov
test
hlt
push
push
ja
cld
dec
lods
push
pusha
out
push
mov
pop
jnp
cmpsb
xor
in
pop
testl
int3
xchg
pushf
aas
pop
pushf
sbb
rcll
xlat
cmp
ljmp
or
scas
stos
add
push
pop
stos
repz
jp
fdivrl
mov
call
xor
add
idivl
xor
mov
imul
xor
adc
adc
ja
mov
cmp
cmpl
xor
pop
jbe
inc
das
cmp
xor
add
sub
dec
mov
lds
mov
lods
pop
imul
inc
in
add
sub
push
inc
les
inc
add
xchg
adc
test
inc
mov
aam
arpl
inc
or
mov
popa
ret
jae
cld
daa
add
es
mov
mov
xlat
dec
icebp
cmpl
outsl
mov
dec
cmp
mov
push
test
lea
es
dec
add
mov
xchg
and
and
mov
mov
test
xchg
ret
jne
add
mov
outsl
xchg
xchg
xchg
inc
push
or
xor
in
stos
cmpsb
inc
push
cltd
jecxz
or
pop
xor
daa
mov
testb
lret
mov
gs
insb
sub
scas
les
xlat
sub
xlat
fldl
arpl
ret
ss
jne
push
mov
mov
stos
pop
jae
js
decb
aas
loope
je
mov
movsb
lock
xchg
bound
testl
pusha
xchg
mov
cmp
cmpsb
sub
outsb
rcrl
and
inc
stc
cmp
jmp
push
ljmp
inc
and
lea
push
sub
test
in
pop
xchg
xor
lds
std
xor
pop
inc
aaa
xchg
xchg
jl
push
inc
test
or
rcr
pop
fildl
aad
xor
test
div
repz
mov
insl
sub
ja
xor
mov
or
jp
jno
mov
jmp
call
push
shll
lea
xlat
mov
xor
jo
adc
jg
cld
inc
adc
adc
out
data16
dec
jle
and
out
or
mov
nopl
lcall
mov
pop
sub
jae
out
sarb
mov
or
loope
push
fs
incl
xchg
loope
fmul
mov
movsl
xchg
data16
mov
pop
inc
sahf
ja
ret
pop
inc
pop
out
xor
jmp
scas
aas
adc
and
mov
or
sub
in
ficompl
ds
cmpsb
orb
dec
push
push
and
push
lcall
or
xorl
or
aam
cmp
addr16
xchg
out
movsl
xchg
gs
xchg
cmp
stc
sbb
mov
rcrl
les
pop
mov
dec
in
xor
fmul
lea
mov
jle
push
cmpsl
lret
and
and
popa
inc
jbe
push
js
or
sbb
in
aam
in
loop
into
inc
pop
scas
lret
xchg
mov
sbb
aam
sbb
xchg
mov
pop
pop
push
stos
cli
call
sub
jmp
xlat
jno
dec
push
xchg
adc
imul
pop
ss
pusha
test
and
add
sub
xchg
push
hlt
dec
fists
adc
loopne
inc
fimuls
negb
xorb
popl
jge
push
add
js
push
pop
push
fldcw
mov
xchg
sub
into
lock
sub
in
jb
xchg
adc
adc
push
jns
leave
cmp
sub
repnz
mov
ds
loop
repz
ror
adc
cmp
hlt
jp
push
arpl
push
div
mov
imulb
leave
mov
cmc
scas
cmc
stos
nop
add
lods
jecxz
mov
lock
into
jne
testb
jp
pusha
sbb
add
mov
add
mov
in
xor
xchg
xor
mov
lahf
imul
add
jl
jbe
je
and
popf
js
cmc
mov
inc
icebp
adc
mov
mov
inc
pop
push
adc
xor
push
rol
mov
arpl
loopne
fcmovnbe
ret
inc
cmc
bound
xor
and
je
daa
pop
in
cltd
ror
mov
je
and
sbb
das
sti
enter
stos
cli
stos
inc
pop
add
pushl
in
mov
mov
pop
aaa
es
push
push
add
das
fwait
lds
jle
bound
jl
add
cmp
mov
sub
test
ficoml
dec
add
in
js
jae
cltd
cmp
inc
lds
and
dec
mov
pop
rolb
shlb
fstp
cmpsb
mov
in
add
enter
lret
fmuls
jno
push
mov
sbb
ss
aad
gs
jbe
lret
jg
ss
mov
xchg
xlat
xor
adc
imul
jns
xchg
pop
or
push
out
scas
sbb
into
stos
jbe
dec
mov
mov
jo
cmpsl
jnp
call
aam
mov
out
repnz
inc
mov
into
jle
rorb
mov
inc
cld
inc
into
dec
bound
mov
jno
xor
repz
inc
mov
cmpsl
jne
int
dec
pop
idivb
and
lahf
test
lea
and
push
sbb
jno
adc
lahf
lret
jmp
fwait
sbb
and
sti
cmp
iret
sbb
cmpsb
sbb
leave
xor
repnz
and
stos
push
cmc
fisubl
ret
not
dec
and
jg
call
sbbl
mov
iret
ja
pop
xor
xchg
das
and
push
lods
cld
cli
mov
dec
pop
pushf
dec
mov
add
push
jb
inc
cwtl
hlt
mov
sub
pop
int
sub
shl
daa
fnstsw
out
in
xchg
test
pop
lods
insl
loope
loop
pop
rclb
inc
scas
mov
cmp
mov
push
cli
pop
push
pop
addr16
push
outsb
std
push
lret
outsl
xor
mov
sbb
mov
add
mov
add
fwait
or
xor
les
inc
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
add
xor
and
add
adc
add
in
xchg
aam
les
and
stos
adc
scas
fidivs
push
arpl
mov
lret
or
sbb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
push
inc
inc
jae
arpl
pop
jae
push
push
inc
rcrl
jecxz
xchg
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
ret
movb
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
in
test
xchg
ret
std
fmul
aad
and
adc
add
mov
xor
mov
sbb
xchg
xchg
ds
dec
xchg
out
jecxz
push
xchg
and
jecxz
subb
mov
pop
imull
sbb
pusha
dec
push
adc
roll
mov
xor
push
adc
add
mov
pop
int
dec
fcom
sub
cmp
lds
insl
xchg
jmp
mov
mov
push
sbb
pop
jmp
sahf
or
ret
sub
mov
or
push
lds
pop
lods
sarl
xor
andl
pop
ret
ds
add
xchg
or
cmpsb
repz
xchg
adc
mov
mov
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
sub
push
jbe
data16
dec
outsl
push
jo
jb
scas
mov
not
ljmp
xor
and
adc
push
jp
dec
xor
inc
mov
sarl
clc
xlat
xchg
loopne
leave
cmp
daa
push
sbb
add
cmp
push
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
out
enter
leave
bound
fs
mov
sbbl
xor
or
movsl
cmp
push
dec
and
mov
or
pop
insl
push
pushf
and
cld
mov
mov
mov
cmp
ret
mov
mov
jge
jae
adc
cmpsl
je
push
xor
push
adc
push
xor
addr16
gs
lods
gs
sbb
aas
test
aad
mov
push
sbb
int3
test
enter
mov
out
xchg
jp
xchg
add
jl
lret
lret
pushf
lock
lret
popa
sub
adc
cmpb
into
jns
cmc
cmpsb
and
and
enter
mulb
out
sbb
mov
es
pop
xchg
pop
scas
data16
mov
sub
mov
nop
pop
mov
xchg
jge
jbe
push
daa
mov
and
fs
cmpsl
repnz
mov
dec
add
inc
int
mov
test
mov
sub
out
int3
inc
mov
leave
push
xchg
mov
inc
dec
or
ljmp
aam
into
lods
dec
pop
jle
int
pop
xchg
inc
lods
rcrl
add
repnz
mov
in
pop
xchg
rolb
mov
fcmovnu
popa
je
cmp
xor
adc
xchg
pop
inc
mov
js
outsb
mov
out
fbstp
insl
jecxz
and
push
push
in
mov
dec
xchg
sub
xchg
gs
jmp
je
rorb
cmp
outsl
fdivrl
xchg
mov
mov
add
sti
jne
movsb
insb
cmpb
sti
mov
push
addb
or
push
lea
xchg
clc
sbb
das
pop
cmc
ret
jns
fnsave
xlat
pop
and
sub
xchg
orl
inc
stc
sbb
push
clc
cs
mov
push
mov
ret
pop
fnsave
hlt
rorl
outsb
mov
jne
js
jmp
in
xchg
pop
or
sbb
push
mov
je
and
ljmp
adc
push
push
into
push
adc
pusha
pop
gs
gs
jle
enter
mov
sub
test
lds
push
push
jecxz
mov
lods
sbbb
scas
lret
idivb
dec
xor
sbb
addr16
jge
push
or
mov
pop
mov
lds
bound
mov
and
dec
lods
shrb
fwait
or
cmc
push
cmp
cmp
jp,pn
je
bound
outsl
cli
cmpsb
iret
aas
dec
fdivl
xlat
inc
xchg
push
cmpsl
out
xorl
push
mov
je
addr16
jns
repz
xor
lock
shrl
adc
adc
cmp
xor
sbbb
mov
lds
push
jmp
xor
sbb
add
gs
add
push
xor
lds
popa
js
mov
push
in
dec
rcrb
outsl
mov
push
sub
adc
jge
out
fistps
jle
add
loope
adc
insb
cmp
nop
je
into
nop
ja
xchg
imul
sub
jecxz
mov
add
mov
neg
and
lock
leave
mov
dec
add
aam
cmp
jbe
frstor
and
push
mov
aad
lock
cmc
adc
pop
daa
xchg
cmp
out
testl
sbb
jns
in
rcl
imul
cmp
add
inc
inc
push
lahf
cs
xor
movsl
in
mov
or
data16
nop
out
in
mov
jns
and
add
cld
lds
sbb
add
cmp
repz
jae
cltd
jb
in
adc
and
dec
push
imull
push
push
mov
ja
and
int3
or
xchg
pop
mov
icebp
adc
lret
cmp
inc
vcmpps
imul
cmc
cmpl
mov
jecxz
lods
xchg
sub
and
xor
rorl
pop
pop
pop
mov
xorb
or
jne
mov
cmc
gs
pop
loop
push
cmp
xchg
push
mov
pushf
pusha
add
cmp
ss
xor
scas
jp
loop
sub
jmp
mov
inc
inc
sti
repnz
sbb
cmp
add
shl
je
xchg
jecxz
cmp
jb
sbb
adc
in
sti
push
scas
mov
xor
fistl
jo
mov
shl
rcll
xchg
lock
clc
mov
push
leave
cmp
clc
mov
cmpsl
int
popa
ss
inc
cmpsl
mov
cmp
jp
iret
and
insb
scas
das
cld
sbb
cs
lret
outsl
std
adc
xorb
movsl
stos
in
imul
aas
push
daa
sub
sub
pop
rcrb
outsl
fnstcw
xchg
cmp
fidivrl
xlat
clc
stos
movsl
mov
mov
inc
jno
mov
and
mov
fwait
insl
aad
in
subl
int
mov
out
cmp
cmc
mov
cmc
inc
xor
pop
test
jb
lea
mov
jl
cvtpi2ps
xchg
jmp
sbb
repnz
push
out
xor
push
add
mov
jb
mov
xchg
xchg
add
notl
cmpsl
push
testb
xchg
bound
popf
mov
out
mov
xor
xchg
mov
call
iret
movsb
mov
jnp
sub
popf
xor
push
xchg
out
dec
push
arpl
ss
jmp
data16
sti
scas
shrb
or
nop
cmp
ret
lock
mov
xlat
cmp
cmpsl
std
cmp
ds
bnd
mov
loopne
push
aad
pop
outsl
dec
or
mov
std
or
add
jno
cvtps2pd
mov
and
fiaddl
add
addr16
hlt
mov
sub
cwtl
sub
cli
jae
mov
jmp
movsl
leave
jle
int
shll
and
cmpsb
sub
cmp
test
fs
push
repnz
outsb
or
fstl
sbbb
xlat
push
xchg
jns
push
fidivrs
repnz
and
sbb
daa
fmull
sahf
fucomi
xor
mov
rep
imul
pop
mov
sbb
clc
dec
pusha
cmp
dec
sub
inc
in
sub
mov
js
pop
mov
mov
and
jns
pop
xchg
cli
jne
lret
lock
pop
add
mov
inc
divl
inc
mov
dec
pop
ret
mov
and
pop
loope
inc
outsb
pop
leave
mov
pop
scas
mov
int3
adc
jecxz
jg
out
nop
push
ds
faddl
dec
inc
xchg
push
add
inc
aas
or
xlat
sbb
lret
jmp
icebp
pop
das
add
jmp
xchg
cli
mov
or
fisubrl
adc
loope
push
lds
mov
jne
cmp
or
push
jb
inc
je
add
movsl
cli
or
lods
fwait
les
mov
lahf
hlt
cmp
and
dec
cld
dec
sub
andl
test
popa
fbstp
shll
sbb
outsb
pop
cwtl
push
fmuls
and
mov
in
adc
sbb
adc
dec
in
popa
jo
jae
sbb
adc
and
movsl
subl
push
jo
mov
push
cmpsb
sub
sbb
jbe
lock
xchg
inc
clc
shrl
lods
xchg
es
xchg
pusha
lret
xlat
stc
imulb
enter
ss
into
ss
and
sbb
push
sbb
sub
mov
sub
aaa
cmpsl
mov
xchg
push
mov
out
jmp
into
xchg
mov
stos
ret
pop
rcll
sub
adc
mov
rorb
cmp
js
cmp
adc
imul
and
loop
xchg
xchg
xchg
and
shl
test
adc
ss
xchg
inc
pop
rolb
dec
fcomp
add
xor
mov
and
inc
shl
data16
rcll
inc
out
mov
jecxz
aad
mov
mov
xorb
xor
adc
faddl
stc
divb
push
in
jae
in
daa
mov
insl
shl
in
mov
add
pushf
movsl
pop
mov
add
sahf
xor
mov
or
clc
bound
and
sbb
mov
push
lcall
or
or
jo
mov
imul
sti
fdivp
mov
cmpsl
insl
cmp
and
xor
insb
mov
push
scas
mov
aas
sub
fwait
pop
sbbl
xor
pop
test
cmp
push
orl
out
aam
imul
lea
cmp
and
sbb
inc
push
andl
rolb
add
lock
stc
ret
jmp
push
sar
dec
sti
gs
enter
out
mov
push
jno
cmp
insb
rol
adcb
out
sbb
movsb
gs
gs
ja
or
aas
aam
arpl
rcrb
aad
loope
add
into
test
pusha
jnp
pop
ds
inc
out
push
aas
hlt
scas
seto
in
pop
pop
jl
inc
cwtl
mov
test
inc
repz
mov
dec
mov
into
outsl
push
outsl
hlt
test
inc
dec
cltd
or
or
or
pop
scas
rol
outsb
sbb
ret
xor
cltd
std
pop
mov
das
mov
lds
popf
adc
push
aad
cmc
sahf
sbb
fnsave
stos
and
lea
lds
dec
jnp
es
push
or
in
inc
aas
push
jnp
add
ret
xor
adc
lea
push
in
fwait
popa
inc
mov
insb
cmp
popl
cmp
js
cmp
andl
sarb
aas
or
test
xchg
cli
fmull
icebp
test
inc
inc
out
mov
adc
enter
xlat
fsubl
daa
sub
popf
jo
cmp
or
cmc
pop
popf
iret
lds
stos
in
stos
xchg
inc
adc
mov
arpl
push
fs
and
lret
in
jo
cmpsb
jecxz
les
or
dec
jnp
mov
push
mov
adc
shl
xchg
fsubs
test
push
test
scas
mov
and
jbe
bound
ret
sub
push
imul
lods
aam
jmp
push
pop
fsubrs
add
pop
fwait
sti
mov
jnp
mov
and
arpl
pop
jno
sub
ficompl
pop
into
outsl
lods
jbe
test
jb
rcrl
jle
and
sbb
test
ja
addr16
jl
repnz
pop
daa
in
lret
mov
xor
dec
test
jge
xor
jmp
ret
fists
dec
inc
or
mov
add
lods
in
mov
out
test
cmpl
sbb
ret
loopne
mov
pop
jbe
lods
cmp
jo
jecxz
push
or
ret
enter
pop
inc
mov
jl
out
add
push
jmp
test
movsl
shll
mov
sbb
leave
sub
xchg
sub
movsb
lock
dec
lret
movb
loope
jge
mov
mov
sbb
adc
push
or
imul
jge
dec
insl
or
jae
negl
arpl
jmp
std
cmc
mov
xchg
movsb
in
js
sahf
sbb
inc
repz
lock
inc
inc
dec
lcall
stos
nop
or
loope
das
xorl
jmp
cs
jbe
mov
jecxz
lahf
cmp
fidivs
or
int
xor
ja
xchg
in
push
pop
xor
push
mov
ss
sub
mov
fs
cmpsl
or
push
mov
or
pushf
dec
pop
fsubl
mov
inc
cmpsb
pop
adcb
rcl
inc
addb
mov
push
lret
xor
rorl
ss
sahf
dec
jne
clc
xor
out
jecxz
push
jecxz
fcomps
adc
sahf
std
repz
and
xchg
inc
xor
rclb
lcall
mov
adc
pop
dec
add
popl
aaa
add
rcll
pop
out
mov
sar
out
inc
dec
sbb
xchg
shl
xor
cmp
xchg
ds
call
xchg
inc
shl
mov
add
mov
push
push
movsl
fwait
inc
mov
popa
add
stos
repz
lea
outsb
test
bound
int3
push
xchg
pop
fildl
ficoml
stos
add
outsb
mov
repz
push
ret
repz
out
mov
push
mov
jecxz
xchg
fimuls
imul
sbb
imul
test
jp
mov
sub
out
pop
adc
ja
rcrl
jmp
xchg
mov
sbb
xchg
ret
cld
sub
ret
jb
jbe
xor
add
xor
hlt
push
test
mov
push
or
jb
inc
xchg
mov
xor
lcall
push
fldl
in
adc
xor
adc
jnp
movntps
mov
push
mov
inc
mov
sahf
outsl
in
xchg
arpl
xchg
in
out
jb
sbb
fimuls
push
scas
idiv
shrb
sbb
fdivrl
gs
push
mov
daa
inc
inc
shl
or
fdivp
or
pop
gs
push
lods
dec
push
rcll
int3
sub
jmp
sbb
nop
lods
leave
js
out
cltd
push
into
ficomps
pushf
jno
mov
adc
adc
xor
icebp
jbe
les
add
cmp
int
popf
int3
inc
fwait
xchg
es
or
pusha
scas
xor
or
stc
cmp
popf
pop
test
dec
ds
and
pop
repnz
pop
cli
cmp
push
pop
add
ret
repz
ficoms
lea
and
jle
insl
and
or
mov
cmp
sbb
bound
outsb
mov
jmp
and
or
sub
xchg
test
add
or
sub
cmc
jb
cmp
jno
negb
je
lahf
cmpsl
lds
cmp
cmc
test
iret
rorb
cmpsl
adc
cld
or
outsl
or
xchg
and
cmp
and
jmp
lds
and
imul
mov
sahf
aam
out
aas
test
daa
insb
sarb
jno
adc
mov
jecxz
outsl
aaa
and
test
dec
outsl
inc
xchg
add
aad
pop
mov
push
xlat
sub
fs
imul
add
xchg
pop
inc
and
inc
enter
dec
xlat
sbb
xchg
mov
xchg
out
icebp
push
jmp
jle
sbb
mov
push
cmpsb
div
insb
push
push
dec
pop
testl
push
mov
shrl
test
mov
sub
fildl
push
mov
inc
in
push
sub
clc
addr16
add
xor
jo
stos
daa
fldt
sub
sub
push
rcrl
fidivrs
add
adc
test
jo
es
loope
pop
movsl
fsts
divb
aad
cwtl
insb
aaa
fcom
push
imul
jmp
xor
insl
icebp
fisubs
clc
or
adc
lret
push
imul
xchg
mov
mull
pop
mov
shrl
iret
test
jno
mov
and
lret
roll
cmp
loop
hlt
rolb
mov
jne
dec
pop
xchg
repnz
fucomip
das
push
aam
notl
lret
daa
popa
cmpb
dec
fmulp
call
in
dec
sbb
and
pop
mov
faddl
push
and
daa
push
and
xlat
in
int3
rclb
xor
push
pushl
xchg
mov
movsb
aam
sarl
mov
add
pop
cmp
lret
imul
cmp
and
gs
xchg
insl
sarb
ja
jnp
cli
inc
cmp
scas
push
dec
and
cmp
pop
ljmp
stos
mov
jb
push
jle
decb
imul
shrl
jns
sbb
inc
add
mov
mov
cmp
in
ret
cmp
mov
and
pop
pop
push
push
idiv
aas
push
jbe
je
mov
stos
jo
test
sub
push
adc
inc
lods
xchg
xchg
jp
sbb
mov
push
cld
cmpsb
cmc
sbb
shl
mov
sbbl
out
inc
lods
ja
out
mov
ret
mov
int3
js
sarb
lahf
mov
pop
enter
loope
sbb
sub
fwait
lahf
in
adc
lock
and
add
fidivl
aam
push
xchg
aam
mov
inc
mov
sub
cli
sarb
fdivrs
pop
fstl
adc
movsl
sub
inc
mov
fistps
xor
insb
sbb
imul
jo
or
cmpsb
shlb
pop
loop
fcompl
lods
push
xchg
cmp
arpl
or
or
movsl
push
cwtl
in
mov
pop
adc
fists
negl
pop
movsl
insl
or
leave
out
mov
add
mov
mov
cmpb
imul
xchg
lea
pop
fwait
mov
jmp
xor
xor
pop
cmp
shl
into
cmp
or
xor
inc
andl
scas
les
or
fwait
dec
nop
mov
fucomp
mov
cmpsl
mov
ret
imul
dec
or
pop
es
and
nop
xchg
and
xor
flds
adc
popa
cmp
in
loopne
into
outsl
cwtl
mov
in
imul
lret
das
test
jg
call
xchg
js
push
jmp
ss
or
int3
inc
outsb
clc
shrb
mov
lahf
mov
fucomip
jg
push
cmp
ss
jmp
aaa
mov
in
mov
ja
adc
mov
outsb
mov
fstps
mov
sbb
mov
cmpb
pop
int
or
mov
xlat
lea
mov
xchg
lgs
jmp
scas
or
scas
adc
sub
addr16
push
or
inc
jbe
pop
pop
cs
cmp
mov
popa
xchg
ljmp
loope
jnp
mulb
pop
or
sub
jne
out
dec
pop
sub
or
push
je
sbbl
and
mov
add
test
sbbb
lret
mov
mov
scas
add
scas
out
xchg
and
or
icebp
add
add
mov
add
jnp
jo
fistl
push
mov
jp
fnstsw
pusha
inc
mov
or
push
jae
add
stc
jbe
call
xchg
jo
ret
and
xchg
movsb
adcl
push
and
xor
and
push
add
pop
gs
lahf
dec
je
pushl
sub
test
adcl
jne
jno
dec
lods
lds
lock
mov
adc
loop
in
jae
test
mov
sahf
or
and
mov
dec
fstp
add
xor
ret
sbb
lret
mov
aaa
outsl
cli
mov
test
out
mov
loop
cmpsl
fs
movsb
push
mov
lods
jbe
push
aas
rcrb
fstps
ret
cmpsb
add
cmp
jg
lock
imul
push
mov
inc
dec
adc
xchg
into
jns
inc
push
sahf
add
fisubs
adc
pusha
xchg
push
lds
jmp
scas
add
and
xor
mov
xchg
pop
scas
rorl
dec
inc
outsb
rorb
pop
xchg
adc
call
sbb
and
xor
das
shrb
fstl
dec
or
cld
scas
aad
xor
dec
sbb
testl
lods
js
sbb
fsub
shlb
mov
into
add
enter
lea
pop
addl
pop
pop
cmpsl
pop
ss
test
nop
mov
sbb
unpcklps
enter
bound
sub
loopne
ljmp
mov
mov
push
pop
cmpsb
adc
pop
into
add
mov
push
cmp
jg
mov
mov
or
jl
out
sarl
aaa
inc
or
in
inc
sbb
lods
jp
adc
sti
int
ds
dec
xlat
mov
shlb
stos
incb
mov
inc
ret
mov
pop
js
pop
cmp
cmc
dec
mov
inc
mov
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
insb
pop
mul
xchg
in
or
dec
pop
pop
push
jp
push
pop
sub
outsb
and
add
ljmp
enter
call
push
pop
sub
cmp
js
push
ljmp
lods
stos
clc
lcall
mov
cmp
sub
or
stos
leave
lret
xchg
into
lcall
push
jl
pop
cmpsb
sar
or
jmp
mov
and
mov
jb
sub
dec
mov
aad
push
in
add
jne
inc
fiaddl
pop
jp
and
gs
outsl
sbb
insl
cmp
fdivrs
ja
inc
fists
daa
mov
mov
pop
test
inc
pop
jge
pop
cmp
pop
leave
test
push
xor
in
fs
stos
popf
out
xchg
mov
mov
cmp
aad
in
pop
pop
mov
stos
stc
sub
out
test
popf
ficompl
pop
lea
aad
mov
std
rcll
sti
mov
inc
enter
clc
mov
jp
push
pop
inc
dec
pop
cmp
js
rorb
push
sbb
pusha
fidivl
stos
clc
lcall
jl
inc
or
push
cmp
jp
xchg
leave
sub
leave
movsb
mov
cmpsb
rorl
andb
pop
jecxz
xor
add
jne
or
mov
cmpsb
stos
aad
lds
sub
push
dec
imul
js
push
ljmp
enter
call
push
pop
sub
cmp
js
push
ljmp
enter
call
jg
test
fwait
adc
daa
cmp
dec
or
fninit
cmp
lahf
xorl
xchg
imul
cmp
in
and
inc
das
mov
insl
pop
popa
icebp
push
push
dec
pop
scas
inc
iret
sub
imul
mov
sub
adcb
ss
cmpsb
inc
shlb
pushf
xchg
out
stos
cwtl
dec
mov
jne
jb
mov
daa
dec
inc
mov
or
fcoml
or
inc
jnp
adc
cmp
insb
xlat
dec
out
mov
mov
gs
push
add
sub
aaa
dec
push
cmp
jb
jno
inc
dec
fdivrl
test
fucompp
sbb
push
xchg
ds
scas
dec
sub
xchg
test
out
into
scas
and
testl
jns
cmp
pop
addr16
sbb
push
rcll
addb
dec
sub
adc
pop
sub
shrb
lds
jae
xchg
imul
sbb
les
out
cmp
or
lods
rcll
xchg
and
sbb
push
mov
mov
mov
push
repz
push
adc
xor
lcall
decl
fsubrl
add
inc
pop
ret
lcall
mov
inc
notl
sbbb
nop
popf
mov
sbb
cmc
dec
rorb
push
sub
or
aad
adc
hlt
jne
sub
and
incb
sub
enter
ret
inc
jns
sbb
xchg
lock
addl
fstpl
mov
hlt
cmp
mov
jns
cmp
dec
adc
ret
jmp
xchg
push
shl
jmp
mov
mov
out
ljmp
mov
pop
sub
loopne
fdivs
push
sub
pop
mov
cmp
sub
xchg
out
mov
sti
gs
insb
adc
ja
inc
divb
mov
push
aam
imul
sbb
fists
sub
pop
xchg
loopne
mov
or
xor
mov
out
and
mov
add
or
jle
fdivs
jle
mov
lcall
lret
xlat
jecxz
push
aaa
dec
xor
xor
scas
cld
jmp
fiadds
xchg
or
cmpsb
cmp
inc
adc
ja
mov
mov
push
fcmovbe
jg
add
inc
push
nopl
cmp
stos
push
xchg
scas
pop
add
fcmovnb
sbb
mov
stos
repz
and
ljmp
jne
scas
std
jb
es
subb
iret
sarl
push
sbb
aam
mov
data16
sub
loopne
xchg
mov
hlt
lods
xchg
sbb
idiv
into
push
scas
mov
mov
push
divb
pop
mov
xchg
movsl
sub
and
nop
pop
sub
pop
and
movsl
mov
and
and
sbbl
cmp
push
adcb
ds
test
mov
pop
xchg
cmpsb
xchg
insl
mov
in
leave
insb
aam
insl
mov
sahf
mov
lea
xor
jle
add
scas
cwtl
call
cmp
cmp
daa
sbb
or
sbb
push
imul
aaa
cwtl
les
flds
mov
out
pop
xchg
jmp
pop
clc
fbstp
rcrb
adc
xchg
pop
jno
in
or
test
mov
adc
cmp
lahf
push
sbbb
xorl
ret
les
xchg
sbbl
imul
xor
mov
sti
and
movd
push
add
sub
add
or
add
enter
cld
mov
jmp
lahf
lret
dec
jmp
and
mov
idiv
insl
adc
mov
imul
or
add
add
mov
cmpsb
xchg
int3
cmp
in
cli
mov
mov
insb
addl
pop
nop
mov
testb
and
push
insl
dec
ret
dec
push
lods
mov
imul
adc
sarb
xorl
jo
add
notl
xorb
fwait
inc
add
mov
lret
mov
or
int
dec
jb
mov
cmpsb
cltd
fcmovnb
jae
jo
fcompl
movl
fwait
pop
rcrb
fs
mov
in
adc
inc
xchg
addl
jg
mov
inc
orb
incb
xchg
int3
orl
xchg
rclb
repnz
sub
mov
insb
cmp
ss
test
xor
sbbl
lea
add
mov
fxch
out
mov
mov
xchg
inc
xor
repz
pushl
xchg
sbb
adc
out
and
push
dec
mov
and
mov
repz
mov
jne
or
xor
mov
fwait
bound
insb
outsb
xlat
aam
imul
lret
in
add
mov
adc
push
cmp
faddl
sbb
test
pop
lret
sbb
mov
fisttpl
add
xchg
loope
rcrb
clc
inc
push
jbe
divb
and
push
movsb
sub
jle
mov
mov
das
iret
mov
iret
jg
and
xchg
sti
dec
sbb
pusha
lock
mov
jae
cmpsb
cmp
pop
mov
pop
sti
and
push
pop
or
fs
xchg
cmp
mov
pop
push
rorb
cmp
inc
and
bound
call
push
pop
cmp
jns
dec
pop
push
or
ja
movsl
cmp
sub
shrl
sbb
mov
pop
roll
xor
out
mov
xlat
nop
mov
daa
aad
pop
hlt
jae
sahf
dec
vcvtsd2si
mov
or
mov
sub
mov
daa
or
data16
xchg
shrl
ss
cmp
stos
pop
dec
sub
jnp
push
stos
shrl
into
test
add
jmp
or
enter
and
cmpl
cld
dec
aaa
int3
psubw
xchg
frstor
and
test
loop
xchg
xchg
push
xlat
xchg
xor
bswap
cmp
xor
push
add
ja
jbe
add
stos
cltd
mov
jne
sub
pop
test
nop
mov
mov
xchg
jmp
sub
push
cwtl
xchg
xor
out
cmp
in
pop
outsl
jge
jl
inc
jmp
cmp
pop
dec
ror
push
cmp
sahf
add
cmp
ds
push
mov
ss
outsl
ss
hlt
xchg
call
clc
pop
add
mov
daa
push
dec
or
test
in
inc
lahf
in
xchg
mov
nop
sub
and
or
gs
mov
xchg
sbb
jae
bound
mov
xchg
mov
lods
push
int3
jne
xor
nop
int
sub
cmp
pop
pop
pop
inc
subb
push
cmpsb
jne
dec
xlat
jo
lcall
rorl
adc
mov
fcmovnu
ljmp
adc
xchg
popa
fimuls
lahf
lds
es
jp
sbb
nop
inc
lock
imul
les
sub
mov
cmpsl
sbb
cmp
add
sub
stos
gs
mov
dec
lcall
adc
stc
xor
cmpsb
jecxz
push
mov
add
add
fisttpll
mov
xor
fstpt
add
bound
rcr
xchg
popa
stc
out
sarl
sub
inc
shl
xor
adcb
fcomip
outsb
add
jns
in
test
cmp
inc
jg
loope
jge
xor
movsb
ja
push
jne
ds
lods
sbb
push
xor
and
lcall
fldt
xor
int3
push
sbb
sub
sbb
movsl
lock
inc
ret
cmp
sub
mov
mov
pop
mov
dec
mov
inc
mov
pop
and
out
mov
loopne
sbb
push
dec
or
mov
incl
bound
ja
stos
mov
jmp
xchg
push
add
push
cmp
mov
jne
in
inc
rcl
cmp
sarb
sub
dec
rorl
push
cmp
inc
adc
mov
mov
daa
fsubs
jmp
ret
push
push
jmp
je
stos
out
int3
or
stos
pop
lods
ret
jb
es
sbb
testb
gs
scas
scas
sub
or
ja
out
xchg
adc
insb
mov
ror
inc
pop
stos
jg
mov
int
mov
call
test
stos
lahf
loop
mov
enter
jno
cmp
mov
mov
dec
fs
fistpll
pop
pop
cmp
mov
insl
fs
in
xor
jecxz
imul
push
fstpt
addr16
pop
mov
in
loopne
sub
push
lahf
enter
cmp
sub
pop
cmp
xor
jecxz
das
outsl
mov
test
out
pop
lret
data16
test
xchg
jnp
mov
ja
cmp
fistps
in
cmp
push
xor
and
jg
dec
jle
mov
pop
js
mov
cmp
and
and
inc
jmp
mov
into
mov
and
mov
aad
insb
or
stos
gs
xor
mov
adc
xchg
pop
cmpb
mov
mov
subl
jmp
dec
and
fldt
push
popa
pop
lret
insl
aaa
lcall
lret
jns
subb
lahf
sbb
dec
cs
push
movsl
popf
data16
push
out
jno
cwtl
cmpb
in
mov
sub
fldt
pop
nop
push
dec
and
push
add
push
fwait
pop
ret
cld
cmp
or
test
pop
jl
cmp
jmp
adc
adc
data16
cmp
hlt
pop
loopne
gs
in
inc
xchg
cmp
xor
dec
push
pop
orl
ds
pop
xor
repnz
xlat
lcall
push
inc
sbb
cmp
pop
push
stos
into
push
movsb
jmp
fisttpll
scas
pop
inc
mov
dec
jl
or
fsubl
add
pop
mov
movl
les
cmc
bound
fucomp
int
out
push
mov
add
out
cmpsb
fisubrs
popa
fcom
loopne
jecxz
popf
jo
in
pop
jge
ss
ss
xor
sub
push
lahf
push
fcomps
push
or
stc
xchg
scas
ja
sbb
pop
icebp
lahf
jb
int
cmc
jae
and
sub
adc
adc
xor
cmc
scas
fldenv
fistpl
fsubr
dec
cwtl
aaa
pop
fldt
sarb
test
cmp
pop
sub
inc
xor
xchg
add
pop
jae
add
lret
xchg
loopne
dec
add
jge
inc
inc
clc
lret
test
mov
jmp
loop
and
sahf
mov
dec
cld
adc
xchg
vmovdqa
call
sub
aam
cmp
addr16
mov
push
or
xor
push
push
fldl
adc
repnz
push
dec
mov
add
popf
or
cmpb
inc
fidivl
scas
into
sbb
addr16
mov
ret
adc
dec
cmp
xlat
pop
xchg
push
nop
xchg
gs
add
imul
daa
shlb
pusha
adc
stos
mov
jno
out
add
es
repz
sub
shlb
jmp
sub
shrb
or
or
sbb
and
shlb
divb
push
popf
mov
dec
cmp
mov
push
pop
jmp
test
inc
leave
sbb
inc
incb
cmpsl
jl
sbb
rcl
in
pusha
adc
mov
nop
dec
popf
push
pushf
jb
scas
daa
femms
or
mov
mov
mov
and
mov
fidivs
cltd
pop
mov
pop
clc
xor
jbe
enter
dec
push
fldl2t
jae
jb
nop
cmpsl
cmc
add
stos
adc
jo
cmc
popf
jnp
enter
xchg
test
mov
dec
push
cmp
mov
push
imul
lcall
add
cwtl
mov
jno
dec
outsl
into
popf
lds
shrl
mov
pop
lods
xchg
push
add
adc
lods
sub
mov
cld
lods
inc
or
cs
fbstp
inc
cmp
push
outsb
icebp
cs
push
movsl
xchg
push
mov
mov
jb
cltd
dec
lods
adc
push
lods
mov
dec
notl
pop
lret
push
mov
or
int3
jp
cmpb
jl
ret
aaa
sub
into
lea
sub
and
xor
mov
xchg
insb
incl
xchg
mov
imul
mov
cmc
mov
decl
lock
repz
push
imul
fisubs
fs
iret
call
fcmovbe
add
popf
inc
jp
ds
push
test
das
xor
sbb
lret
add
xlat
inc
sbb
lret
cmp
push
cmp
rcr
jg
jp
xchg
xor
mov
jns
stc
popf
pop
jle
xchg
add
cli
dec
jnp
cmpsl
ljmp
lret
cmp
gs
xchg
mov
pop
loope
loop
aam
jge
scas
mov
add
lcall
icebp
xor
test
scas
mov
sub
aam
ret
loop
loopne
sbb
cmc
push
loop
xchg
inc
cmp
sbb
mov
pop
dec
aad
fsubl
adc
jmp
add
adc
fisttpll
jg
mov
popa
push
enter
js
lock
push
loopne
andb
mov
mov
pop
hlt
jge
mov
mov
sbb
std
les
or
loopne
es
dec
cmovae
sbb
daa
ficoml
xlat
nop
ret
scas
xchg
mov
jns
mov
aas
call
sub
scas
mov
std
cs
xor
mov
pop
mov
insl
fsubrs
mov
or
call
shl
arpl
pop
outsb
jns
outsb
in
sbb
xchg
sti
lcall
push
xchg
fwait
movsl
xor
cmp
jl
mov
inc
adc
push
sub
aad
mov
mov
xchg
outsb
pop
dec
es
in
stos
sbb
addl
insb
hlt
jnp
fnstsw
cmpsb
jp
dec
cmp
lds
mov
adc
ficompl
fcoml
and
sbb
xchg
inc
out
sub
insb
xchg
outsl
mov
sbb
test
pop
ret
jae
movsb
shrl
faddp
mov
or
mov
jg
aaa
jbe
cmp
or
repz
or
filds
cld
lret
imul
shrl
add
ss
jno
ss
fwait
mov
push
outsl
mov
fiaddl
nop
cwtl
jp
addr16
fs
xor
push
pusha
in
out
fildl
stc
andb
jbe
add
repnz
cltd
repz
mov
cli
add
push
sahf
clc
outsb
addr16
jb
jmp
dec
rolb
inc
jo
cld
jp
pop
fnstcw
inc
jb
mov
xor
addr16
adc
mov
push
popl
cwtl
push
andl
inc
les
mov
sub
sbb
dec
or
icebp
xor
jb
int
or
fistpl
mov
xchg
mov
in
lahf
cmpsb
push
js
adc
pop
outsb
movsb
xchg
dec
sbb
inc
adc
push
movsb
adc
fcomi
push
jno
jb
or
mov
dec
sub
popa
push
int
scas
push
or
test
repz
orl
lds
ja
je
fistpll
inc
dec
xchg
push
mov
test
ret
sbb
data16
lds
sbb
stc
lods
js
lods
test
icebp
adc
dec
mov
pop
sti
leave
push
cld
lahf
sbb
add
adc
out
addl
movsb
xor
adc
jg
jb
jecxz
sahf
pop
insb
jns
cmp
cmpb
add
clc
daa
dec
inc
jbe
arpl
leave
pop
sti
pop
mov
lahf
inc
fcmovnu
ret
test
xchg
scas
and
push
mov
aad
pop
inc
ja
push
idiv
negb
pop
dec
repnz
sbb
pusha
dec
mov
push
test
xor
call
dec
pop
lea
clc
xor
xorl
imull
sysexit
and
and
int3
cmpsb
aad
lods
xor
fnsave
jg
scas
fldcw
sub
lret
xchg
ficoml
xor
lahf
sti
mov
test
or
lea
mov
jns
mov
testb
mov
loope
push
dec
daa
insl
mov
int3
cs
mov
icebp
inc
test
sbb
push
add
push
cltd
add
push
mov
push
sub
push
mov
jle
std
mov
lods
enter
shrb
outsl
pop
icebp
sbb
mov
iret
pop
js
fnstenv
shrl
arpl
cmp
adc
jecxz
leave
rcrb
sar
pop
ficompl
xor
jb
adc
sub
and
add
int3
xchg
push
jle
fidivrl
shrl
sub
nop
add
jno
push
mov
mov
push
mov
push
xchg
pop
ror
jo
test
and
cmpsb
sarl
push
fwait
hlt
cmpsb
mov
fnstsw
out
and
jl
jo
repz
outsb
mov
hlt
lea
jl
sbb
jnp
shl
pop
pushf
and
in
cmp
pop
test
cmc
adc
loop
scas
jno
cmp
enter
add
and
and
sbb
imul
mov
mov
pop
ret
sti
movsb
mov
bound
push
hlt
adc
jmp
dec
mov
mov
sub
adc
pop
mov
sbb
clc
cli
in
jno
jge
push
das
pop
pop
leave
inc
pusha
pop
pop
fildl
xlat
jle
cltd
outsb
adc
cmp
rorl
pop
pusha
in
nop
insl
xchg
jnp
push
aam
dec
or
fdivrs
and
lock
push
lahf
loope
mov
adcl
or
xor
subb
pop
cmp
mov
push
pushf
jae
pop
xor
pop
dec
xor
rolb
mov
add
sti
bound
repz
pop
mov
jmp
mov
stos
cmp
add
cmp
xrelease
dec
mov
push
outsb
in
xchg
cmp
or
mov
adc
mov
in
jmp
jbe
or
jae
fsts
or
in
pop
inc
sub
ficomps
ljmp
jmp
call
pop
cmpsl
imul
pop
mov
aam
cmc
sub
int
add
sbb
sbb
jl
mov
dec
pop
mov
das
outsb
push
fisubrl
insl
bsf
test
add
std
int
pushf
aas
push
je
daa
inc
es
cmpsb
pop
mov
cwtl
cld
cmp
or
and
mov
mov
setns
add
adc
xchg
bound
adc
ja
ljmp
and
xorb
sbb
xlat
mov
and
sti
cmp
adc
jg
xor
imul
and
and
sbb
jge
movsb
add
cmc
loopne
sbb
xchg
xchg
faddl
mov
xchg
mov
inc
jnp
ret
cmp
pop
iret
mov
lds
lock
dec
push
pop
jg
aad
fisttpll
aad
jmp
xlat
jae
add
sub
iret
mov
push
xor
pushf
sub
pop
cmp
or
cmp
std
sub
les
ss
iret
test
jnp
sbb
cmp
ret
leave
out
imul
mov
outsb
loopne
lods
ret
xchg
jno
push
in
icebp
addl
pop
adc
icebp
mov
rcll
imul
int3
cltd
xchg
cmp
inc
mov
lret
jp
out
loopne
jg
insb
aad
cmp
rcrl
icebp
iret
add
pop
les
inc
mull
stos
ds
cmp
je
add
fisttpl
in
idivl
enter
int
mov
icebp
sbb
mov
cmp
jg
rcrl
xor
xor
dec
dec
jge
lods
add
jmp
mov
imul
xchg
push
jmp
sti
dec
ds
les
sbb
pop
sub
fdivrl
pop
or
popa
dec
or
adc
movsb
inc
fwait
jb
mov
and
loopne
pop
push
push
push
lret
cld
mov
adc
add
mov
or
pop
pop
jg
test
outsb
pusha
aas
in
jge
jge
dec
dec
jo
das
les
insl
cmc
add
push
cmp
inc
shlb
lahf
fldt
movsl
dec
cmp
aad
lea
pop
push
ja
orb
xchg
push
pop
xor
pop
cmp
js
push
ljmp
enter
call
push
pop
sub
cmp
js
push
ljmp
enter
call
push
pop
sub
cmp
sbb
pushf
cli
mov
mov
lods
lret
shrl
add
push
pop
add
cmp
js
call
inc
adc
test
scas
xor
pop
gs
jne
and
lret
cmpsl
sti
mov
jae
mov
stos
push
pop
pop
inc
daa
imul
inc
sbb
ja
ja
xchg
xchg
lret
cmpsl
sti
mov
fwait
xlat
mov
mov
pop
dec
daa
pop
cmp
js
ja
sahf
ret
mov
or
jmp
xor
js
dec
imul
cmp
sub
mov
xchg
je
push
es
in
shrb
push
aaa
mov
xchg
fbstp
pop
in
adc
jne
xor
sbb
mov
pop
sahf
inc
pop
cmp
and
dec
push
movsb
icebp
popl
aaa
inc
push
fsubrp
mov
mov
or
ja
xchg
xchg
fstpt
mov
notb
push
mov
fwait
enter
push
hlt
in
mov
inc
xlat
jecxz
sub
add
or
mov
pop
stos
pop
rorl
ds
imul
addr16
aam
sub
sti
dec
and
mov
jmp
clc
pop
lcall
dec
add
les
dec
fisttpl
icebp
rcrb
out
mov
inc
rcpps
bound
jb
add
jge
ja
jmp
repnz
ret
ljmp
test
push
cs
add
jbe
pop
adc
mov
out
stos
call
movsb
movl
sub
cmp
adc
dec
loop
sti
scas
lret
lcall
out
imull
daa
jnp
imul
or
ja
xchg
xchg
lret
cmpsl
sti
mov
fwait
xlat
mov
mov
pop
dec
daa
jnp
imul
or
ja
xchg
mov
clc
stos
cmpsb
mov
in
xor
int
and
icebp
sub
popa
add
das
push
sbb
jnp
jne
fmull
ret
mov
fisttpl
int3
sbb
addr16
dec
repnz
in
xor
fbld
and
xlat
push
lret
pusha
shlb
dec
cwtl
mov
pop
ja
and
loopne
pop
sbb
mov
movsl
mov
xor
enter
jbe
jl
cwtl
xchg
add
cwtl
divl
divb
or
fsubrp
jge
push
dec
movsl
jo
mov
stos
pop
shlb
cmpsb
shrb
xchg
adc
mov
aam
or
outsb
xor
mov
cmp
rcl
add
mul
shlb
cli
repnz
pop
or
stos
push
es
dec
repz
rorb
rolb
jmp
jbe
daa
mov
mov
lret
ss
movsb
or
hlt
cmpsl
lret
and
popf
movsl
pop
or
in
test
xor
sub
sbb
lret
add
in
dec
jg
sbb
adc
enter
sbb
fistl
dec
or
int
mov
arpl
pop
ret
pop
mov
loop
pop
out
adc
pop
sbb
push
inc
inc
lds
js
sbb
or
shrb
pop
loopne
xor
sbb
shrb
ds
out
enter
push
inc
mov
es
push
add
mov
jge
mov
cmp
or
lea
or
jnp
inc
cld
outsl
cpuid
je
nop
lods
mov
sub
out
push
lret
push
sub
int
ret
outsb
cmp
add
cmp
or
xchg
jns
fldt
repnz
pop
adc
idivb
xor
push
sbb
movsl
sub
push
push
call
or
xchg
adc
add
test
push
imull
in
out
andb
pop
lds
mov
popa
mov
jg
nop
testl
repnz
sbb
shrl
cli
adc
mov
rcl
mov
push
fucom
shlb
add
pop
lret
jmp
push
cmpsl
lret
fcmovnu
lret
imul
mov
mov
mov
xlat
mov
push
and
jmp
loop
mov
mov
lahf
frndint
inc
cmp
lea
cmpsb
imul
cmc
mov
push
in
dec
int
mov
call
xchg
jge
sub
sti
fisubrl
je
fisubl
adc
adc
pop
adc
out
push
call
popf
repnz
mov
icebp
xor
dec
dec
ljmp
push
cli
imul
xchg
popf
cli
sarl
rolb
push
jg
xor
cmp
shlb
sub
push
cwtl
aaa
jp
cmp
jmp
pushf
cld
or
in
loop
lcall
jne
int
mov
mov
ret
cld
or
imul
js
sahf
ds
ret
or
push
mov
cmpb
dec
jae
sub
pop
notb
pop
insl
insl
sub
rorl
and
and
popa
aam
push
fdivrl
loop
leave
adc
xchg
mov
cmp
or
fsubrs
mov
add
or
arpl
mov
xchg
push
aas
pop
mov
xor
or
and
xor
xchg
mov
imul
adc
xchg
mov
dec
subl
mov
lea
lcall
out
sbbb
pop
shl
out
mov
jo
ljmp
inc
cmp
scas
mov
or
mov
mov
jp
pop
pop
cmc
mov
and
dec
orl
cmp
fldlg2
or
mov
jecxz
xchg
inc
stos
mov
movsb
in
std
sub
pop
jnp
mov
hlt
mov
mov
shrb
push
lods
xor
mov
jmp
inc
mov
pop
pop
test
mov
cli
int3
or
gs
lods
rorb
sbbl
sbb
fbld
sub
add
ret
shrl
lret
and
xor
mov
mov
hlt
rolb
mov
jns
mov
mov
call
add
push
inc
jmp
mov
fwait
xor
enter
and
push
jmp
mov
cmpb
and
xor
jl
cmc
mov
mov
push
fiaddl
lods
mov
ficoms
cli
ss
and
lret
mov
sub
imul
cmpb
shrb
jecxz
lock
out
sub
pop
inc
xor
lds
js
push
stos
inc
push
mov
mov
push
orb
lods
das
xor
jl
push
jae
cmc
int3
mov
xchg
imul
xor
adc
mov
enter
repz
int
dec
lods
push
mov
push
mov
js
and
dec
jle
push
into
and
xchg
popf
xor
imul
cmp
sub
mov
jp
or
jne
xchg
mov
stc
lret
xchg
sti
pop
mov
popl
cltd
rclb
scas
fistpll
stos
jae
adc
pop
stos
into
negl
mov
jmp
push
icebp
adc
add
into
xor
into
data16
movb
in
lods
push
fcompl
iret
sti
out
inc
outsl
add
movsl
lret
shll
jp
lret
pop
jbe
fnstsw
xor
inc
outsb
push
mov
adc
adc
adc
inc
sub
les
dec
subl
adc
or
mov
movsl
mov
fcomps
adc
add
adcl
mov
ficomps
mov
popa
into
mov
ds
test
jo
call
dec
aaa
lods
gs
cmp
add
mulb
mov
int3
inc
mov
aaa
inc
into
cli
cld
pop
sbb
and
popa
loope
clc
jmp
lods
int3
pop
mov
push
inc
test
sub
adc
cmp
push
push
jns
bound
lahf
jmp
jb
push
jbe
icebp
jge
movsb
dec
addr16
inc
popa
and
cmpsl
subb
cmpsl
addl
push
imul
fildll
mov
hlt
sub
adc
push
repnz
push
sub
popf
sub
sbb
int
push
mov
push
notl
sub
into
iret
popa
adc
jmp
clc
shll
daa
inc
pusha
fwait
jb
scas
ret
jmp
lcall
outsb
jb
sahf
dec
jmp
push
inc
test
adc
icebp
lret
cltd
cmp
les
movsb
mov
add
daa
lods
out
dec
inc
xchg
out
gs
popa
xor
mov
dec
fcomp
dec
mov
fdiv
fdivr
mov
xchg
mulb
in
jne
loopne
lock
or
out
jg
push
and
push
loop
dec
jmp
lock
loope
lea
mov
shll
stos
pop
cltd
xchg
add
or
leave
dec
js
rolb
push
addr16
loope
leave
xor
aam
orl
push
xchg
pushf
cs
and
pushf
lcall
jle
mov
imul
out
cld
dec
das
negb
push
lret
mov
mov
push
mov
outsl
repnz
adc
push
mov
data16
dec
icebp
jns
lret
stos
fadd
cs
mov
cwtl
fsubr
mov
shll
mov
adc
push
rorl
sti
xor
or
inc
mov
or
or
adc
loop
adc
stos
mov
inc
adc
mov
pusha
sbb
pop
jge
rcrl
ss
divl
out
stos
or
mov
daa
aad
mov
in
ret
jb
jecxz
dec
leave
jae
call
shl
mov
cmpl
ja
mov
sahf
mov
fisubl
lahf
inc
or
adc
out
aas
xor
sbb
outsl
dec
xor
pushf
jbe
sub
aam
mov
pop
daa
movsl
and
mov
inc
rorl
sti
int3
jg
xor
xchg
fisubrs
iret
ljmp
pop
clc
and
mov
imul
pop
and
jle
pop
ljmp
clc
call
in
xlat
clc
repnz
push
adc
pop
ret
and
cs
push
sbb
pop
cwtl
aam
inc
cli
divl
lcall
and
bnd
xor
xor
mov
cld
cmp
sbb
jbe
repz
call
fwait
mov
ficoml
inc
mov
dec
bound
mov
add
fldl
stc
and
bound
lret
sbb
cmpsb
pop
out
and
or
mov
imul
mov
lea
push
add
pop
and
lock
mov
xchg
mov
sub
mov
inc
mov
and
or
lret
in
sbb
xchg
dec
movsl
ds
push
add
mov
push
pop
mov
mov
and
lea
imul
mov
scas
jge
mov
cmp
jae
inc
sub
sbb
or
cmc
jmp
ja
sbb
ret
movsb
inc
rorb
fldt
arpl
add
adc
and
les
sub
add
and
test
jmp
jno
clc
push
outsb
testb
inc
ss
aad
xor
gs
loopne
cmpsl
into
jne
jl
mov
or
jno
fstpt
iret
imul
out
fnsave
jno
xchg
sub
rcr
mov
in
adc
sub
cli
and
cmp
mov
jg
push
rcll
inc
test
sbb
idivl
sub
sti
sub
jl
icebp
leavew
pushf
and
call
sub
addr16
inc
sub
cwtl
inc
pusha
test
jp
add
sub
and
movsb
aaa
ret
pop
or
scas
pop
add
lret
pop
incl
jg
cmp
pop
cmc
xchg
mov
mull
sub
push
dec
sbb
add
mov
xchg
fcomi
push
out
mov
test
push
cli
cmc
aad
mov
push
xchg
iret
call
mov
jmp
dec
repz
and
push
loopne
scas
mov
push
out
inc
sub
popf
lcall
cmp
lcall
cmp
subl
mov
sbb
xchg
movsb
lods
fdivrs
push
sbb
rorb
bound
sbb
cltd
popf
out
adc
mov
fwait
ret
xchg
dec
shrl
pushf
mov
push
lret
pop
sar
imul
inc
adc
pop
cltd
lea
aaa
js
adc
jg
dec
push
and
ss
xlat
pop
inc
int
push
mov
dec
sbb
jg
sti
out
lret
adc
cmp
int3
test
nop
cmp
stos
xlat
imul
fildl
gs
fcompl
jg
cmp
jge
xlat
into
insb
incb
dec
add
rolb
popf
mov
jl
xchg
repz
enter
sub
mov
sbb
test
pop
add
mov
push
lcall
pushf
ret
mov
adc
mov
cmpsb
xchg
andb
outsl
mov
jo
mov
movq
mov
mov
aas
hlt
pop
movsb
orb
sub
std
adc
movsb
push
xchg
adc
imul
pop
jo
sub
adc
dec
imul
in
popa
aad
mov
inc
lcall
dec
inc
lock
mov
mov
repnz
je
fstps
mov
into
xor
add
mov
pop
std
push
fists
sbb
cltd
negl
xchg
andb
mov
lea
adc
jne
cld
in
outsb
jo
lds
dec
xsaveopt
in
popa
in
dec
aad
cmpsl
push
fldt
xor
dec
sbb
psrad
xchg
xchg
mov
mov
xorb
in
loopne
cmp
add
das
std
mov
pushf
or
filds
addr16
int3
addb
adc
mov
orl
scas
and
adc
push
pop
sbbb
mov
scas
js
lds
testb
jge
fnstenv
ret
xor
and
call
push
aas
sub
nop
push
mov
mov
ret
mull
jmp
sub
xchg
cld
lods
xchg
dec
and
jecxz
fmuls
outsl
cld
xor
push
iret
inc
sahf
cmp
cld
pop
sub
lret
cmpsl
insl
lcall
pusha
mov
aaa
test
out
mov
jp
xor
in
and
fwait
xor
dec
and
dec
mov
bound
fstpl
lcall
jno
sub
ret
imul
outsl
cltd
gs
andl
xor
push
or
inc
or
mov
push
push
sbb
loope
inc
fidivrs
xor
popa
cmp
adc
cwtl
pop
or
in
inc
imull
lods
push
sbb
shrl
sbb
or
loope
addr16
or
jnp
push
and
mov
shll
pop
bound
hlt
mov
inc
sub
lds
push
popf
push
loope
mov
xchg
jg
lret
cpuid
sbb
or
add
push
jns
shrl
dec
cmp
jl
push
fbld
mov
in
es
lea
mov
fiaddl
ss
add
sbb
cwtl
jmp
xchg
push
push
nop
and
daa
and
sub
jle
stos
xchg
pushf
aad
gs
push
clc
adc
dec
sub
push
and
cmp
pusha
or
mov
xor
incb
fisubs
addr16
adc
xor
fisttpl
mov
ljmp
notl
addr16
cmp
xlat
inc
imul
adc
fstpt
inc
aam
test
lods
jecxz
dec
or
call
inc
sbb
mov
add
jg
in
push
rcll
jns
mov
inc
xrelease
add
loop
je
and
or
xchg
sbb
popf
pushf
sbb
jnp
cltd
mov
jg
and
xchg
sub
adc
mov
pop
iret
mov
aas
push
adc
ds
and
in
cmpb
adc
inc
xchg
mov
roll
ret
lcall
lea
xor
cmp
test
mov
cmp
scas
pop
scas
fwait
ja
mov
repnz
ret
cmpsl
cmp
fistpll
mov
loopne
add
ljmp
jno
dec
lcall
icebp
mov
inc
add
inc
incl
pushf
inc
je
push
je
push
clc
fisttpll
arpl
test
fcmovnb
pop
mov
sbb
lods
stos
cmp
push
mov
cmpsl
pushf
lcall
iret
popa
dec
pop
sub
or
imul
dec
aad
repz
adc
sub
mov
enter
lds
mov
sub
push
jb
mov
push
fdivrs
dec
sbb
push
sub
movsb
add
repz
stc
sub
and
mov
scas
xchg
push
push
cmp
xor
movsl
cli
xchg
cmp
mov
sbb
and
cli
stc
out
add
jnp
shll
pop
outsb
out
out
std
xorl
add
js
shlb
and
pop
dec
lret
xchg
cmp
push
xor
push
fcompp
movsb
clc
ror
sub
out
add
aaa
pop
int3
jns
lods
jne
jne
xchg
mov
ret
mov
leave
outsl
bound
cwtl
and
fadds
stos
loope
xor
pop
js
inc
mov
fst
sub
arpl
sti
and
dec
inc
test
jne
cmc
outsl
xorl
pop
or
xchg
xchg
cmp
sub
lock
movsl
mov
int3
dec
sub
mov
lret
pcmpgtb
leave
pusha
test
or
hlt
jmp
outsb
xchg
cld
adc
dec
sbb
test
js
or
or
rcr
pusha
mov
adc
pop
clc
das
pop
add
cmpsb
jbe,pn
movsl
cwtl
repnz
push
sub
pop
sub
xchg
ja
adc
in
adc
aaa
cmp
or
lods
xor
cmpsl
cmp
or
push
movl
into
add
rcrl
jbe
push
rclb
sti
xchg
daa
pop
or
sbb
pop
gs
xor
or
push
or
stos
xorl
sti
jg
loopne
ljmp
cmp
movsb
sahf
sub
pinsrw
mov
sbb
jg
nop
jg
cwtl
rcl
movsb
mov
stos
mov
rcl
adc
mov
mov
out
push
and
jp
out
sub
push
or
mov
sarb
push
nop
pop
fwait
sti
sub
or
jno
decb
add
test
jecxz
cwtl
jb
lret
addr16
xchg
mov
out
sahf
adc
push
inc
loopne
iret
add
int3
fidivrs
jbe
mov
ret
xchg
cltd
in
dec
clc
es
addr16
out
pop
insb
dec
out
sub
pusha
cmp
into
imul
sti
mov
ja
dec
mov
in
jae
jmp
add
push
insl
adc
mov
jo
push
cwtl
gs
jbe
psrlw
push
add
pop
xor
or
fistl
ds
sbb
ret
iret
push
inc
outsl
jb
mov
out
aad
add
pop
pop
rolb
stc
shll
xchg
and
lods
fbld
xchg
jp
xchg
pop
and
mov
out
mov
mov
cli
int
xor
orl
dec
jge
xchg
mov
lods
scas
sti
pop
cmp
or
or
jmp
fdivs
shlb
cmp
test
adc
sub
mov
imul
xor
sbb
push
lds
fistl
aas
sahf
arpl
pop
stos
ljmp
sbb
sbb
fnstenv
inc
out
fwait
jnp
aas
push
sub
cs
lods
shrb
fstpl
adcl
mov
xchg
mov
ret
add
lahf
mov
aaa
adc
dec
push
adc
lret
adc
push
mov
cld
cmp
mov
inc
ljmp
adc
mov
adc
and
push
iret
sub
outsl
dec
loopne
and
adcl
sub
mov
mov
sbb
dec
jl
aad
stos
and
js
mov
mov
jnp
loope
mull
add
je
adc
mov
and
popa
xlat
int3
orl
jb
jl
lods
cmc
in
add
hlt
jecxz
jnp
mov
das
add
insl
mov
dec
aaa
push
dec
pop
dec
ret
sbb
sbb
addl
ljmp
cwtl
into
jo
cli
stos
jae
fistpll
dec
sbb
mov
mov
call
divl
dec
bound
jl
inc
lods
sbb
cmp
jbe
adc
js
jae
cmpsl
lcall
imul
aam
mov
shll
mov
push
cltd
pop
cmp
fdiv
jae
jp
popf
inc
sbb
lds
sub
adc
xchg
cmp
pop
in
jnp
ret
inc
psrlw
push
or
push
or
and
push
pop
std
fdivl
leave
push
fnstenv
xor
pop
or
arpl
std
sub
jnp
repnz
and
xor
mov
or
rcl
inc
jg
mov
cmpsl
cmc
les
imul
addr16
pusha
arpl
xor
addb
popf
stos
inc
aas
push
out
jb
and
lahf
push
fdivrl
clc
push
push
arpl
call
mov
xor
mov
ret
xchg
cli
cmc
leave
popf
cmp
xchg
loop
xor
cmp
dec
and
dec
xor
xor
cmp
fsubs
js
ret
mov
stc
inc
xchg
cli
pop
fnsetpm(287
and
in
loopne
sbb
sbb
ja
mov
xchg
out
in
jecxz
pop
sub
mov
lahf
scas
mov
xchg
loopne
xchg
jg
pop
dec
stc
int
jl
jno
test
push
and
and
pop
mov
aam
mov
ret
cmp
cwtl
das
test
xchg
mov
and
mov
jae
mov
push
je
clc
movsb
out
push
idiv
sub
mov
mov
dec
xchg
mov
test
ds
fdivrl
lret
xchg
mov
and
lret
daa
daa
orb
sti
imulb
rorb
lods
adc
jmp
fwait
xlat
mov
mov
pop
dec
daa
jnp
imul
or
ja
xchg
xchg
lret
cmpsl
sti
mov
fwait
xlat
mov
mov
pop
dec
daa
jnp
imul
or
ja
xchg
xchg
lret
cmpsl
sti
mov
fwait
xlat
mov
mov
pop
dec
daa
jnp
push
sbb
cmp
xchg
xchg
lret
cmpsb
sti
mov
lds
ja
clc
pop
call
sbb
xchg
fcomip
cwtl
les
fcompp
scas
leave
mov
in
into
test
jp
imul
dec
sub
stc
mov
sahf
fldcw
test
sarb
imul
cmp
pop
sbb
jle
sub
pop
fnstenv
enter
xchg
cltd
in
int3
jns
dec
cmp
cmp
pusha
sbb
std
mov
daa
jb
add
mov
inc
loope
insb
dec
aad
xchg
mov
xor
fidivl
mov
adc
vpmulhuw
cmpsl
shll
add
pop
xor
out
mov
orb
jnp
push
push
movsl
push
dec
das
int3
sarb
mov
mov
sbb
push
out
shrb
jae
mov
mov
pop
sub
loope
addb
pop
insb
arpl
inc
inc
std
mov
gs
add
js
popa
dec
aam
ret
and
dec
out
or
lds
popa
jecxz
outsb
xchg
andl
ds
sub
test
es
fiadds
jmp
mov
cltd
out
mov
imul
sbb
dec
pushf
mov
rcr
imul
negb
or
sub
push
pop
mov
pushf
loop
faddl
push
imul
push
into
add
or
sahf
std
jmp
sar
subb
jns
imul
cmp
pop
sbb
jle
mov
sahf
fldcw
test
jns
imul
cmp
pop
sbb
jle
mov
push
imul
mov
stos
adc
mov
movsb
and
mov
std
mov
les
mov
mov
pop
lods
xor
daa
ret
shlb
mov
jle
je
push
gs
std
xor
daa
mov
inc
in
cld
add
ret
imul
lods
test
je
or
repz
push
test
push
test
fwait
leave
fldt
sub
inc
leave
push
cmp
insb
bound
adc
or
loopne
dec
push
adc
pop
in
push
popa
cmpsb
in
sti
mov
xchg
pop
fiadds
xor
add
pop
test
out
cltd
mov
lcall
lods
ss
je
or
addr16
pop
or
push
test
call
js
sbb
and
das
aaa
test
mov
add
cmp
pushf
popa
xor
aad
sbb
test
lahf
adc
mov
ret
jecxz
cs
icebp
mov
jnp
adc
push
ret
call
pop
add
mov
pushf
pop
lahf
mov
repnz
in
inc
imul
or
cmp
adc
pop
ror
mov
cmp
movsb
andb
cmp
cmp
sub
jns
jno
mov
loopne
orb
aas
insl
jmp
push
addr16
call
es
lret
add
add
mov
out
mov
pop
xchg
aad
and
cmc
loopne
clc
je
pop
jl
adc
jns
enter
pop
dec
cmc
or
mov
adc
mov
incb
lcall
lret
cmpsl
roll
cmpsb
sahf
sti
sarb
insb
push
dec
mov
mov
shlb
xor
mov
jl
push
sub
mov
cmp
add
clc
mov
daa
fcmove
dec
jns
gs
add
add
jge
inc
adc
ljmp
std
or
leave
jecxz
icebp
or
icebp
sub
js
inc
jg
je
and
scas
sub
test
out
mov
mov
push
mov
pusha
pop
push
sub
mov
mov
push
sub
and
jmp
cli
fstl
cs
sti
rcrb
cmp
int3
cmc
xlat
pop
test
mov
out
lods
outsl
je
xor
inc
out
dec
scas
dec
shrb
jge
cmp
push
hlt
ds
xor
inc
jo
cmpsl
pop
cmpb
push
lahf
dec
int3
ljmp
xchg
shll
bound
mov
cmpsl
call
lcall
dec
mov
fdivrp
and
jg
lods
mov
outsb
loopne
add
jno
xor
dec
je
xor
sbb
xor
jl
mov
imul
jo
mov
decl
test
gs
int3
adc
outsl
in
das
rcrl
inc
imul
das
xor
shlb
cmc
rcrb
aas
xchg
mov
rorb
sub
pop
mov
lods
mov
pop
scas
ds
in
cmpl
dec
sahf
sub
sub
adc
push
sbbb
sub
sub
scas
inc
sub
out
or
jne
fistl
dec
jp
mov
jmp
je
adc
adc
dec
divl
mov
mov
pop
jmp
sbb
xchg
jno
add
xchg
hlt
fisubrs
mov
andl
ja
mov
and
es
inc
cld
jne
stos
jne
imulb
xchg
mov
jg
jnp
pusha
inc
inc
je
in
mov
jp
jno
jbe
and
cmp
cs
lahf
jmp
pop
fsubs
xor
imul
mov
std
out
test
cmp
stos
ja
out
out
push
mov
jns
or
loope
and
xor
addr16
test
push
adc
or
xchg
repz
ds
or
fsts
mov
in
pop
data16
leave
outsl
and
dec
arpl
repnz
mov
dec
lcall
mov
and
jmp
jbe
insl
in
xchg
sub
pop
shlb
jb
jl
pop
aam
or
mov
pop
int3
pop
daa
or
out
or
loop
ljmp
inc
outsb
push
pop
test
sbb
sub
sbb
cmpsl
mov
rcl
imul
inc
xchg
movsb
jl
nop
xchg
or
out
repz
cmp
rcrl
inc
jl
jns
mov
rclb
scas
xor
cmp
cmp
sbb
test
lret
outsl
mov
sbb
add
loop
es
lret
fs
or
test
gs
mov
adc
call
sbb
xchg
adc
sub
popa
ja
lea
or
lds
mov
gs
push
outsl
adc
dec
icebp
xchg
pop
mov
inc
cs
ret
pop
mov
add
mov
lds
adc
mov
mov
iret
or
and
xchg
loop
pop
mov
call
fxch
sub
sub
push
pop
xchg
mov
lds
xchg
aad
je
push
ds
cmc
push
popf
fsubs
mov
cmp
sub
orl
adc
sarb
sbb
sahf
mov
shrl
push
push
lahf
mov
mov
fs
push
or
push
in
mov
jae
mov
into
into
aam
dec
mov
add
add
pop
jmp
mov
add
popf
push
xchg
mov
icebp
cmpsl
ret
mov
lock
dec
or
jg
xchg
data16
cmp
cmc
lods
fisubrl
fs
cmp
ljmp
add
cltd
bound
test
subb
mov
int3
jo
icebp
add
iret
mov
inc
decl
or
divl
rclb
sbb
into
mov
shrl
add
mov
xchg
fimull
pop
or
mov
lcall
data16
pushf
jo
loop
jecxz
inc
je
mov
mov
cmc
orb
jp
cmp
rcl
add
jmp
in
repz
clc
fisttpll
pushf
jmp
ror
xchg
push
jg
jnp
mov
lret
xor
ret
in
rcl
mov
dec
xor
add
fwait
dec
mov
pop
scas
sbb
xchg
aad
dec
and
pop
inc
rcrb
xchg
push
lods
cmc
jle
into
xchg
aaa
cmp
enter
addr16
out
jns
jnp
mov
mov
ja
add
in
dec
sbb
mov
xor
popf
sub
jnp
mov
outsl
popf
jns
sbbb
dec
aaa
or
je
or
cld
test
push
aad
adc
mov
int3
xchg
xor
mov
sub
inc
mov
in
and
rcrb
hlt
dec
nop
lods
icebp
repnz
mov
jle
pop
push
xor
xor
mov
imul
sti
outsb
testb
push
xlat
fstl
repz
dec
mov
sub
dec
xor
daa
inc
inc
mov
cmp
icebp
shll
push
test
pop
gs
sub
push
movsb
data16
adc
lods
les
inc
movsb
ret
jns
fsub
leave
pop
lcall
nop
jno
movsb
add
mov
or
xor
cmp
mov
mov
xor
out
xchg
mov
jle
dec
push
xor
out
push
or
push
jo
add
xchg
gs
adc
cmpsb
mov
dec
rcll
pop
iret
jbe
sub
aas
pop
out
cltd
scas
add
pop
ret
ljmp
xchg
push
or
mov
out
mov
mov
pop
arpl
push
push
ljmp
hlt
push
or
pop
in
gs
add
pop
int
adc
jns
cmp
ljmp
push
lret
mov
test
cmpsl
fidivs
sbb
or
xlat
out
out
movsb
xchg
mov
mov
fisubs
les
and
add
pop
inc
fldt
xor
mov
push
push
fsubrp
call
icebp
out
xchg
aam
fmull
adc
mov
and
pusha
enter
cltd
xchg
arpl
mov
jge
and
in
out
pop
cmpsl
and
loope
pop
daa
sbb
and
push
ss
fldenv
mov
int3
test
mov
lods
xchg
lods
shll
mov
mov
cli
dec
xchg
adc
cmp
mov
fistpll
inc
inc
inc
sahf
or
imul
or
mov
dec
adc
sub
and
mov
or
inc
cmp
sub
stos
arpl
add
test
ret
fwait
or
fwait
push
xor
sub
sbb
rcr
aas
xor
mov
jg
mov
aaa
ds
iret
lret
or
data16
and
pushf
pop
sti
add
mov
daa
orb
cmpsb
inc
mov
test
lds
mov
cld
push
and
xchg
xchg
xchg
pop
push
or
add
pop
shl
lock
outsl
outsb
aad
push
mov
adc
shl
insl
and
jmp
outsb
std
adc
hlt
xor
pop
es
cld
dec
loope
adc
ja
pop
dec
inc
mov
mov
in
dec
rcl
push
lret
adc
daa
mov
pop
mov
mov
jg
xchg
iret
and
int3
sub
and
leave
popf
testl
repz
mov
test
aaa
mov
dec
mov
lret
roll
mov
clc
mov
jl
ret
xlat
sub
jno
es
and
sub
imul
xchg
push
and
dec
pushf
inc
ja
stos
sti
test
xchg
inc
xchg
xchg
cmp
mov
loop
push
imul
jl
and
test
dec
and
fwait
push
xor
mov
rcrb
mov
xchg
push
or
add
jnp
mov
inc
addr16
addr16
inc
and
mov
push
inc
adc
push
jne
fnstsw
arpl
sbb
pop
jbe
pop
pop
test
lcall
mov
lret
push
xchg
daa
cmpb
int3
xorb
cltd
mov
sub
fbstp
jne
lods
out
xchg
nop
stos
mov
lock
clc
lret
cmp
sbbl
loope
and
rol
icebp
push
jbe
sbb
inc
out
dec
scas
lcall
pop
stc
inc
mov
call
lods
pushf
adc
in
lcall
jg
clc
movsb
enter
in
mov
scas
movb
sub
fs
outsb
mov
cmp
or
and
inc
dec
jle
enter
mov
mov
sub
or
or
aam
add
shll
loope
pop
les
pop
arpl
and
lcall
js
stc
sbb
cld
daa
sub
add
mov
sub
leave
mov
xchg
sbb
jnp
sub
lock
roll
and
cwtl
sbb
mov
sarb
adc
mov
cmp
popf
cld
xor
divl
mov
and
dec
bound
arpl
adc
jnp
sub
add
xchg
sub
sbb
sub
insw
lods
mov
imul
imul
popf
sbb
insb
arpl
xchg
aam
sub
fwait
ja
mov
and
or
jl
pop
and
ds
gs
fwait
xchg
inc
lds
movsb
dec
mov
jnp
jb
ret
mov
daa
test
mov
and
das
js
add
imul
fs
xor
rolb
fcmovu
xor
xor
scas
jp
sub
gs
hlt
std
fisttpl
fldcw
roll
mov
scas
in
bound
cmp
adc
test
push
and
cmp
xchg
push
push
cmpsb
mov
jne
xor
inc
push
pop
lods
testl
mov
pop
inc
fbld
mov
xchg
pop
xchg
sbb
sub
pop
xor
cmpsl
pusha
adc
pop
arpl
shrb
fcompl
pop
scas
inc
xchg
add
les
shl
mov
pop
movsb
orl
add
and
lock
push
insl
call
nop
dec
jge
std
fcoms
adc
mov
cmc
in
int3
cmp
xchg
or
jl
cmc
lret
xchg
pop
popa
test
xchg
movsl
xchg
lods
push
mov
mov
loopne
testb
sbb
dec
dec
or
leave
pop
sar
bound
mov
dec
out
push
ja
clc
mov
lret
pop
scas
call
mov
jle
jno
cltd
xchg
pop
adc
mov
xlat
insb
xchg
xor
loope
test
into
addr16
and
mov
mov
iret
inc
xlat
jno
cmp
sub
pop
pop
fcomip
out
ja
test
les
stc
icebp
mov
int3
push
mov
sub
and
pop
xor
pop
adc
fwait
cmp
pop
popf
dec
sar
int3
push
mov
negb
inc
cmc
xchg
loope
aas
add
in
hlt
fnstcw
adc
mov
in
arpl
ret
push
add
hlt
ror
mov
jbe
ret
mov
cmp
cwtl
push
add
pop
push
push
shll
in
scas
outsb
push
inc
mov
loope
mov
stc
dec
jge
mov
repnz
mov
lret
jg
push
xchg
fsubrl
decl
or
rcrb
push
push
pop
xor
inc
fcomps
mov
loopne
rcrb
iret
movsl
aaa
add
mov
xor
fidivl
push
aam
xchg
xor
negb
inc
iret
jle
or
and
mov
push
sub
xor
and
or
or
mov
add
push
mov
push
pushf
iret
pop
pop
orl
jo
fs
mov
fwait
cmp
ffreep
ret
sbbl
int3
mov
iret
icebp
cmpsb
push
push
rolb
outsl
xchg
dec
sub
cwtl
or
call
pop
jo
xchg
adc
dec
pop
jl
jmp
xchg
add
shll
mov
cmp
xor
mov
sub
pop
fs
xorl
or
test
out
xor
mov
test
pop
pop
cwtl
outsl
into
adc
pop
fdivs
in
jge
aaa
push
and
mov
cmp
xchg
add
and
mov
inc
dec
movsl
test
insl
lcall
lock
xchg
hlt
test
inc
mov
in
push
push
callw
xchg
scas
mov
arpl
pusha
jp
shrb
mov
adc
loopne
mov
cmp
push
add
sbb
xor
xchg
pop
lods
test
iret
movsl
add
add
enter
cmp
dec
divb
stos
sub
sub
jno
std
push
lods
push
pop
mov
imul
and
push
inc
fwait
inc
xchg
push
stos
lea
pop
add
dec
cmpsb
cmpsl
adc
or
pop
mov
lahf
fisttpll
cmp
push
cmpsb
push
sbb
push
pop
jns
jo
ds
mov
dec
hlt
data16
add
fcoms
mulb
pop
fdivrs
fistps
fimull
and
fistl
loope
test
rorl
add
sub
dec
pop
pop
enter
mov
jbe
pop
xchg
xchg
aam
es
push
into
jg
pop
dec
gs
aas
mov
mov
or
and
call
jmp
cmp
outsb
sub
push
push
in
cmpsb
lock
rcl
push
imul
jmpw
jmp
mov
adc
xchg
cld
mov
inc
icebp
stos
stos
insb
cld
pop
inc
push
cmpsb
sbb
cmp
or
pop
sahf
into
and
jns
dec
inc
xchg
push
inc
loop
mov
xchg
insl
jg
out
xchg
jl
and
loop
inc
or
push
test
aaa
repnz
xchg
mov
test
xor
adc
add
cltd
pop
das
mov
mov
cmpsb
sub
sbb
mov
into
mov
out
mov
repz
or
lahf
jne
rorb
sub
in
aas
sbb
push
stos
daa
xor
popa
daa
xor
mov
sub
test
fildl
hlt
test
jno
shlb
es
sbb
add
lea
adcb
out
push
popf
mull
sub
lods
repnz
or
rcll
cmpl
cwtl
xchg
adc
inc
pop
cmpsb
mov
popf
jb
jmp
stos
popf
shrb
scas
into
mov
adc
ss
aaa
lret
sbb
or
rolb
cli
adc
aaa
jns
push
lock
dec
jle
int3
inc
inc
sbb
push
push
pop
lret
sub
loopne
and
popf
or
enter
dec
pop
cltd
adc
cmp
repnz
movsb
add
cmp
jg
push
jns
dec
inc
mov
mov
mov
int3
and
stos
push
loopnew
jge
ret
mov
inc
pop
lods
jae
arpl
push
or
jbe
hlt
inc
dec
loop
popf
divb
loop
rsqrtps
enter
jo
hlt
pop
pop
aam
arpl
fnstenv
lock
cmp
shlb
mov
sub
xchg
mov
inc
push
nop
imul
lods
xchg
pop
xlat
lock
fidivrl
mov
pop
arpl
daa
add
in
repnz
jmp
dec
dec
dec
inc
or
inc
arpl
push
ret
fldl
jge
mov
jmp
xor
and
sbbb
cmpsb
mov
test
pop
sub
icebp
sbb
sbb
outsb
mov
test
mov
cmpsl
roll
adc
adc
cwtl
jbe
stos
pop
pusha
push
xor
cmp
inc
fcmovb
cmp
fnstenv
mov
int3
add
mov
fwait
push
ret
mov
cwtl
jge
lea
adc
stc
int
sbb
ljmp
push
sub
mov
jg
jo
mov
mov
push
or
frstor
add
shrb
add
movsb
push
sbb
mov
inc
mov
xchg
sbb
push
rcrl
push
mov
add
ds
or
pop
or
add
push
push
pop
mov
jecxz
dec
repz
iret
pop
jmp
popf
jb
scas
cld
sub
dec
adc
or
push
pop
or
pushf
jnp
imul
jne
add
insb
into
sbb
mov
mov
inc
popa
xchg
leave
jae
mov
lods
or
int
rclb
mov
adc
out
jo
add
mov
xorl
mov
push
scas
es
pop
push
mov
or
push
jp
jns
jbe
pop
sbb
push
aaa
ret
inc
inc
pop
fldl
sbb
aas
jne
and
mov
sbb
inc
mov
adc
mov
push
mov
scas
sbb
lods
out
mov
cmpsl
shl
mov
push
dec
dec
xor
push
out
push
mov
lods
adc
inc
out
int
aam
adc
xor
inc
or
sahf
insb
push
jp
xchg
push
sub
lds
add
push
pop
mov
pop
push
cmpsl
mov
dec
leave
std
pop
out
jg
gs
mov
movsb
aaa
dec
sub
ficoms
mov
cmp
stc
stos
jle
je
and
ret
arpl
shl
cwtl
push
sbb
inc
jg
jmp
xor
cli
xchg
jle
xor
clc
and
sub
jle
int3
pop
test
lahf
pop
dec
jp
fnstcw
adc
leave
enter
pop
mov
insl
xlat
jecxz
jmp
ja
sbb
and
fidivl
test
jne,pt
in
pop
out
imul
imul
out
pop
int
sub
clc
xor
movsl
js
cmp
sub
call
sub
cmpsl
lcall
cmp
cs
movb
xchg
movl
sbbl
adc
aam
in
pusha
jbe
sarb
mov
and
dec
subl
xchg
dec
stos
aaa
push
inc
ficoms
imul
fsub
aad
jp
test
add
sub
test
pop
xor
fidivl
push
stos
jle
inc
push
popl
stos
pop
push
and
or
in
jle
fwait
out
push
push
sub
sub
loop
inc
mov
out
pop
pop
add
popf
loop
insb
lret
hlt
insl
fldt
inc
cltd
adc
dec
aaa
jae
jno
sbb
imul
sbb
mov
daa
lods
cmp
mov
je
movsb
movl
scas
imul
orl
ss
mov
and
adc
das
into
pop
test
testl
iret
pop
dec
add
xor
rcrl
dec
mov
bound
xor
stos
leave
mov
cltd
out
mov
jns
imul
cmp
pop
sbb
jle
mov
sahf
fldcw
test
jns
imul
cmp
pop
sbb
jle
mov
nop
fnstenv
test
cltd
ljmp
pop
cs
aaa
cmp
pop
sbb
lcall
leave
mov
outsb
or
xchg
xchg
mov
cs
dec
dec
mov
push
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
adc
and
xor
lea
jb
or
jb
cmp
cwtl
mov
ret
rcl
loopne
lock
adc
and
xor
inc
inc
push
push
pusha
bound
addb
mov
cmpsl
rcl
loopne
lock
adc
and
xor
inc
inc
push
push
pusha
bound
addb
fadd
test
test
je
and
push
mov
fstpt
loope
pop
outsb
sub
jno
test
cmpsl
mov
hlt
ss
add
mov
sahf
ljmp
pop
pop
dec
cmpsl
aas
rcl
mov
adc
shlb
lock
cmc
lret
pushf
jmp
cs
add
mov
cmp
lock
xor
inc
push
in
jo
or
fidivl
aas
rclb
repnz
lock
rcr
aas
sbb
push
mov
push
pop
int
xchg
xchg
das
ret
icebp
adc
pop
out
add
pushf
mov
fldln2
call
pusha
xchg
pop
xlat
cwtl
dec
nop
rcrl
movsl
loop
or
and
xor
inc
inc
push
push
pusha
bound
addb
mov
ret
loopne
lock
add
arpl
inc
add
jb
xor
mov
mov
xchg
adcl
jle
push
push
inc
add
pop
in
shl
lds
inc
mov
adc
inc
pop
dec
or
push
push
pusha
bound
addb
mov
ret
loopne
lock
adc
and
xor
inc
inc
push
push
pusha
bound
addb
mov
ret
loopne
lock
xor
cmc
mov
xor
mov
gs
mov
sti
mov
nop
les
jo
mov
fwait
ds
add
rcrl
mov
inc
shrb
pop
js
test
aas
test
inc
dec
inc
ds
inc
das
fisttpll
insb
loopne
cs
loop
jge
fimuls
aad
outsl
xchg
xor
dec
pop
repz
push
sarl
mov
cwtl
mulb
push
dec
rdpmc
jg
out
sbb
push
mov
or
movsb
cli
hlt
xor
setl
xchg
xor
lret
addr16
sub
push
mov
and
lods
add
dec
outsb
out
jle
inc
push
ss
sub
rclb
jg
cmp
or
xchg
mov
inc
mov
mov
int
fdivrs
call
je
loopne
inc
ja
fcomps
ret
movsl
scas
mov
cmpsl
xlat
sub
cmp
push
mov
out
frstor
repnz
pop
xor
in
dec
outsl
fiadds
dec
sbb
inc
pushf
je
shrl
pop
sub
xchg
js
mov
push
fldcw
sbb
test
fcmovnb
inc
push
jno
lea
loope
jo
hlt
lods
dec
std
inc
xor
scas
inc
mov
mov
bound
ret
cmp
les
mov
xor
mov
iret
mov
mov
mov
mov
test
movb
inc
jo
push
and
add
inc
pop
stos
inc
jmp
fsub
mov
push
test
inc
sbb
add
mov
xchg
cmpl
pushf
push
shr
push
lock
fnstsw
leave
fcomp
ret
sar
and
mov
jo
bswap
push
add
xor
out
mov
pop
repz
ja
xor
les
jns
lds
sahf
jg
xchg
jo
lock
call
outsb
out
bound
insb
xchg
jnp
fld
pop
insl
mov
mov
xor
in
sbb
outsl
xchg
jo
xchg
mov
out
outsb
mov
in
dec
hlt
cmc
in
mov
inc
orl
fs
dec
add
mov
sub
movl
addb
shll
add
pop
adc
and
pop
mov
imul
mov
cmpsb
fs
xchg
sbb
lock
xchg
setbe
ljmp
rcrb
sahf
xor
sbb
xor
hlt
jmp
movl
jae
fiaddl
leave
dec
sbb
in
idivb
push
rolb
in
jecxz
mulb
rcrb
pop
pop
jmp
fdivl
inc
mov
cld
cs
cwtl
adc
cmc
idiv
mov
jae
inc
adc
movb
pop
ljmp
add
push
repnz
call
hlt
pop
xor
std
mov
nop
cmpb
fs
in
pop
pushf
test
leave
rcll
cmp
and
aam
mov
out
push
push
jne
rcll
lock
enter
cli
and
in
sub
xor
outsb
into
rol
ss
xor
dec
mov
push
mov
int3
xchg
jp
inc
js
loopne
dec
test
sti
inc
push
jo
cmp
loopne
lret
and
pop
inc
add
aaa
out
popa
pop
push
mov
test
xchg
icebp
push
sub
lahf
push
cmp
dec
fldl
xchg
repz
ret
daa
pop
imul
std
dec
lock
popa
xor
ljmp
ja
inc
popa
lcall
add
scas
pusha
sbb
dec
popf
pop
mov
fsts
filds
subl
xor
push
sub
insb
sbb
popf
cmpsl
pop
and
cltd
aaa
test
pop
js
pop
xor
lock
add
xor
jmp
movsb
push
mov
jo
mov
ds
dec
push
lock
xchg
cmp
call
adc
adc
int3
mov
cmp
xchg
fistpl
fstpt
xchg
lock
sub
in
out
sub
xor
je
rcr
xor
push
sub
into
lahf
jbe
js
aaa
xor
sbb
shll
sahf
jle
add
cs
scas
scas
shrb
dec
jne
cmp
cmp
inc
jbe
or
in
dec
sub
sbb
pop
adc
and
mov
lret
add
push
ret
rorl
imul
es
js
repz
subb
and
fldenv
adc
cmovb
inc
pop
push
addl
mov
test
pop
add
aas
add
out
ficomps
pop
int
stos
dec
jp
add
jle
inc
and
xlat
and
sub
push
lea
ficompl
cwtl
int3
inc
jns
dec
bswap
cmpl
stos
mov
cmp
mov
inc
out
pop
sbb
outsb
pop
test
jl,pt
xor
cmp
in
jno
mov
rolb
add
in
in
mov
bound
dec
call
cmpsl
sti
jl
and
mov
mov
pop
push
dec
xchg
jno
mov
dec
das
shrb
pushf
sub
xchg
stos
push
jns
mov
push
fcompl
inc
sbb
xchg
push
dec
add
iret
sbbl
neg
arpl
das
fnstenv
mov
jne
xchg
pusha
or
mov
fbstp
bound
fsubl
fcmovnbe
sbb
xchg
sub
outsl
mov
lcall
sub
outsb
jne
aaa
fwait
mov
cmp
push
and
ret
movsb
pop
sbb
mov
out
dec
rolb
popf
je
aas
loop
loopne
and
sti
sbb
adc
jae
xchg
mov
mov
jp
out
shlb
vxorps
cli
cmp
sbb
cs
cmp
push
test
imull
out
es
mov
xor
stos
clc
xor
ret
xchg
mov
in
sbb
jne
mov
sbb
xchg
cmp
in
movsb
imul
ror
mov
xor
push
xor
dec
test
mov
and
and
inc
xor
push
lods
mov
popa
ret
pop
es
jae
mov
or
xchg
jl
rolb
outsb
xor
divb
test
add
pushl
pop
shll
adc
mov
rcrl
in
mov
adc
lds
sbb
inc
insb
push
mov
fisubs
enter
clc
adc
loope
dec
push
movsl
cltd
mov
stos
mov
movsb
cmc
fsubrl
adc
fcoms
hlt
xor
sub
xlat
inc
adc
aaa
pop
shll
ficomps
rcrl
arpl
cmp
loope
add
jecxz
shlb
gs
ds
sar
xchg
ljmp
jp
sti
mov
dec
es
mov
or
arpl
mov
jae
mov
pop
jno
inc
cmpsb
push
int
js
aad
call
pop
jo
cmpsl
shlb
push
inc
rol
or
out
cltd
rcrb
push
push
imul
lods
pop
jecxz
aas
xlat
inc
repnz
nop
roll
fs
sbb
cmc
scas
sub
scas
stos
push
push
sbb
pop
cmp
dec
or
sub
inc
mov
xchg
push
int
cmp
jecxz
fbld
call
cmpsb
push
or
dec
call
into
push
cli
jg
sarb
mov
mov
jae
push
add
push
dec
mov
sub
jnp
or
adc
sbb
mov
mov
adc
fwait
sub
cmp
arpl
repz
or
push
pop
inc
dec
sar
dec
push
stos
add
dec
push
pop
push
enter
cmp
pop
adc
xor
pop
jle
mov
or
mov
add
sahf
pop
les
rol
in
xchg
sti
out
dec
or
or
xlat
xchg
or
out
mov
mov
cmp
sbb
sbb
fs
pop
inc
fnstsw
mov
or
idivl
in
inc
and
or
out
sub
andl
adc
lret
into
fadd
push
imul
punpcklbw
push
add
mov
icebp
insb
xor
cmp
stos
add
push
stc
mov
push
insl
jnp
cmpl
mov
adc
hlt
mov
repz
cltd
pop
pop
add
mov
lds
xor
es
imul
hlt
js
mov
or
pop
dec
mov
pop
mov
shrl
xlat
mov
push
mov
movsl
popa
sub
loopne
sbb
pop
pop
cmp
xor
sub
jge
and
movsb
inc
leave
pusha
shll
roll
xchg
cmp
fildll
dec
scas
add
xchg
sbb
repnz
fcoms
pop
sbb
pop
jns
shrb
jo
insb
lcall
sbb
xchg
xchg
loopne
jno
mov
jo
cmpl
adc
mov
add
jge
enter
cmp
das
pop
sbb
into
out
jo
xor
add
sub
xlat
insb
push
imul
in
and
addb
mov
adc
cld
je
dec
xor
sbb
or
dec
xchg
xchg
push
mov
mov
push
mov
jle
jl
mov
dec
sub
out
xor
or
mov
sub
mov
push
pop
cmp
test
add
xchg
sub
xchg
test
jb
push
in
push
or
and
sub
out
scas
leave
xor
xchg
stos
adc
popf
jne
jl
shrb
xchg
ja
or
push
pop
push
xchg
enter
dec
jle
mov
sub
fcmovnbe
xor
mov
mov
mov
xor
dec
ret
add
test
xchg
jns
push
mov
loop
mov
daa
fst
inc
pop
js
cld
lods
cmp
pop
in
pop
inc
sbb
pusha
cs
adc
out
and
pushf
imul
loope
enter
mov
push
mov
cs
and
gs
ja
fsubrl
adc
jae
test
pop
push
push
sbb
imul
imul
lods
fildll
xchg
inc
scas
stos
nop
fldt
xchg
sub
nop
sbb
pusha
cmpsl
out
jns
mov
ja
inc
dec
adc
mov
push
adc
aas
jae
xchg
add
lahf
mov
adc
sub
fstpt
pop
bound
push
push
pop
nop
sub
sbb
aam
sbb
or
out
addps
cld
movsl
xchg
lds
cmp
scas
jno
dec
bts
data16
adc
popf
lret
mov
jne
or
push
sbb
clc
imul
je
cmp
cltd
pop
loopne
aas
adc
sbb
mov
cmc
dec
int
xor
jno
mov
out
addr16
mov
jnp,pt
cmp
mov
push
enter
lcall
ret
cs
inc
mov
xchg
sbb
ficoms
loop
xchg
push
fiadds
addr16
mov
inc
and
mov
sbb
stos
lret
add
xchg
ja
sarl
mov
data16
imul
popa
jl
xor
mov
mov
fwait
jle
cmpb
mov
cmpsb
movsl
sub
mov
mov
mov
jmp
push
pop
mov
fs
adc
sbbb
adc
cmpsb
sbb
or
movsl
add
xor
jmp
xor
js
inc
or
rcrb
xchg
push
push
mov
xor
in
add
stos
in
sub
dec
dec
es
adc
dec
and
cmp
leave
shlb
add
mov
das
add
inc
push
adcl
ja
loop
or
addr16
iret
cmpb
arpl
inc
sti
unpcklps
fstp
aam
cmp
xor
pop
add
insl
pmulhuw
adc
sbb
push
sti
out
or
jge
mov
adc
ja
rcr
cmpb
dec
shll
mov
push
mov
xor
xchg
pop
out
xchg
mov
out
cli
movb
xrelease
jp
add
sbb
cli
xchg
pop
enter
push
cmp
incl
sbb
loope
push
push
test
inc
fsubs
pop
scas
add
mov
dec
adc
pushf
sub
lcall
xor
xchg
mov
xchg
pop
push
addl
outsb
dec
push
call
movsl
adc
xchg
lock
and
shlb
lock
jge
pop
repz
push
cwtl
add
lds
ja
xor
push
lcall
test
xchg
lahf
lods
shrb
dec
jno,pn
add
scas
mov
xchg
sbb
mov
cmc
lahf
in
aaa
mov
push
hlt
data16
jns
dec
jp
cwtl
lret
mov
dec
jecxz
aad
mov
sbb
jo
xchg
or
xchg
mov
jbe
sbb
nop
outsb
mul
sbb
and
in
dec
into
pop
cmpsb
mov
pusha
out
fimull
mov
adc
test
adc
mov
dec
xorb
iret
test
adc
imul
adc
mov
mov
aad
push
out
mov
jecxz
xor
iret
les
iret
pop
test
push
rol
stos
sub
sbb
xchg
je
dec
sub
aaa
pop
push
out
xlat
sbb
inc
cltd
cwtl
leave
mov
outsl
sub
cli
in
add
lods
jb
movsl
mov
popa
dec
sbb
js
stos
mov
data16
mov
xor
das
push
or
out
mov
cmc
jne
shl
dec
and
push
fs
mov
rclb
nop
outsb
in
cmovge
and
cmc
jo
shll
loope
cmp
cmc
ss
and
lcall
sbb
mov
test
aaa
adc
cmpsl
decb
push
arpl
loope
rolb
cmp
test
cltd
jbe
aaa
push
sbb
inc
add
adc
push
aas
push
scas
inc
jns
jbe
pop
xor
adc
nop
inc
faddl
jl
loopne
mov
sbb
and
test
mov
pop
mov
iret
insb
jecxz
push
cmp
clc
and
cwtl
xchg
cmp
xchg
push
iret
jnp
xchg
out
add
inc
xchg
jo
es
jae
inc
cli
pusha
or
push
xor
mov
pop
mov
and
cli
xor
cmp
dec
movsb
fdiv
nop
mov
cmc
out
mov
or
dec
sub
pop
jne
stos
pusha
dec
imul
inc
aad
xchg
pop
call
dec
xchg
insl
fsubr
addr16
pop
push
das
idivl
fisttps
mov
cltd
movsl
fwait
loopne
jl
popa
aaa
dec
stc
mov
jmp
sub
mov
pop
mov
and
mov
aam
stos
mov
icebp
pop
inc
ret
xchg
mov
dec
push
cmc
scas
aaa
pop
sti
into
in
testb
xchg
mov
mul
repnz
fsub
add
nop
push
int3
pop
xor
xchg
mov
adc
loope
nop
push
loopne
dec
shlb
lods
ja
out
and
enter
mov
push
mov
xchg
mov
mov
inc
hlt
test
movsb
push
jno
out
cltd
sub
pop
mov
pop
out
sub
mov
mulb
cmpsl
inc
hlt
xlat
outsb
add
out
pop
xchg
jp
push
dec
loope
push
rcll
jb
xchg
sbb
data16
cmp
les
test
loopne
xchg
xchg
cld
mov
aas
jne
adc
adc
mov
sti
mov
push
lds
fistl
es
repz
sbb
pop
or
js
test
test
ds
and
pop
mov
fcomp
pop
xlat
je
and
mov
loope
xchg
movsl
push
xor
xorl
aad
hlt
xchg
movsl
in
fmulp
dec
imul
adc
mov
cwtl
ljmp
inc
jne
je
jmp
jnp
mov
iret
mov
testb
xchg
outsb
fstpt
push
idivl
roll
rcrl
out
inc
xchg
jmp
inc
jge
popa
mov
lahf
jb
sub
dec
fiadds
inc
cs
dec
imul
shll
push
pushf
stc
push
enter
xchg
inc
lret
cmpsl
sti
jl
repz
das
adc
push
pop
dec
add
in
out
mov
sub
adc
add
lret
mov
jmp
out
mov
or
push
imul
sbb
push
push
test
aad
fldt
inc
dec
inc
dec
dec
pushf
lods
std
lcall
sbb
mov
rcr
test
mov
jnp
mov
jmp
sbb
filds
adc
mov
dec
xchg
mov
jnp
pusha
fbstp
shlb
lods
or
imul
sarl
ret
mov
lods
dec
in
lahf
xor
push
sbb
rclb
scas
dec
jl
jecxz
sti
xor
sub
movsl
dec
sbb
mov
das
pop
out
xor
sub
lock
xchg
decb
inc
ds
mov
lret
ja
sub
cmc
mov
mov
jle
jne
movsb
test
popa
and
fidivs
frstor
xchg
sbb
adcb
mov
data16
data16
subb
add
add
addr16
xchg
sbb
ljmp
sub
lahf
movsl
insl
out
scas
call
movsb
or
xchg
shrb
inc
les
jmp
mov
clc
mov
je
xor
jb
xchg
insb
popf
daa
shll
cmc
pop
inc
int
adc
adc
pop
ret
arpl
data16
dec
push
ss
mov
pushaw
imul
sti
inc
sarl
lahf
jmp
jnp
into
aaa
pushf
lods
inc
ljmp
inc
inc
add
push
xor
jae
mov
pop
call
mov
lret
adc
iret
mov
or
and
mov
mov
or
and
and
push
mov
xor
shll
mov
jg
nop
pop
mov
das
push
aaa
out
mov
fisttps
cmp
jbe
mov
fdivrs
addb
push
dec
pop
cmp
ljmp
pop
pop
inc
pop
inc
mov
xchg
push
test
cmp
lret
jne
cmp
jp
mov
std
mov
shlb
out
pop
sbb
shll
ljmp
gs
jmp
sbb
mov
push
adc
cmp
dec
mov
ljmp
mov
jo
xor
aad
cld
out
sarl
cmp
stos
jecxz
pop
jl
push
push
xor
lret
dec
xor
cmpsb
push
lret
sub
and
mov
push
rorl
sub
repnz
push
data16
jp
push
push
lea
nop
outsl
lret
cwtl
fdivrs
xchg
in
cli
mov
sub
jl
popf
hlt
roll
popf
lock
xor
sbbl
test
mov
pop
pop
jo
adc
xor
cmp
out
xchg
sbb
cmp
fs
inc
pushf
mov
xchg
cmpsl
repnz
and
sub
xor
lcall
jmp
xchg
xor
iret
add
in
adc
mov
test
adc
jo
hlt
mov
xchg
jmp
push
add
xlat
popf
and
mov
jmp
push
lock
fmull
fnstcw
cwtl
push
in
aam
andl
jnp
mov
jl
fsubrl
in
mov
je
pop
or
sahf
fildll
sub
stos
loope
pop
mov
test
dec
ficompl
adc
push
push
cmpb
loop
inc
adc
idivl
imul
test
sbb
xchg
push
inc
in
jb
mov
add
jns,pt
out
mov
in
adc
cwtl
cld
xor
xchg
adc
push
inc
jge
rorb
orl
das
push
scas
lods
loop
adc
andl
sbb
mov
jne
mov
mulb
shlb
xor
in
add
sub
mov
jbe
inc
out
xchg
cmp
inc
fnstenv
add
sahf
dec
pop
sbb
dec
mov
pusha
fdivrl
sub
xlat
test
ljmp
lds
xor
add
mov
lret
mov
fsubl
inc
sbb
jecxz
xor
lahf
xor
test
mov
push
cmp
lea
shll
cld
jge
js
adc
and
xor
push
push
pusha
bound
addb
mov
ret
loopne
lock
adc
and
xor
inc
inc
push
push
pusha
bound
addb
mov
ret
loopne
lock
nop
adc
inc
push
push
pusha
lock
adcb
rol
shl
loop
repnz
adc
and
xor
inc
inc
push
push
pusha
bound
addb
lds
sbb
sahf
mov
mov
movsl
mov
lcall
cmp
sub
pop
iret
jle
jle
mov
mov
lret
ljmp
sub
pop
dec
outsb
cmp
mov
mov
lret
ljmp
pop
sub
or
push
lcall
inc
sbb
int
popl
scas
inc
popf
lret
jb
test
int3
adc
fcmovnu
call
pop
shll
jnp
loope
ja
mov
mov
mov
cmp
ret
mov
push
push
sbb
mov
push
out
cmc
js
rcl
pop
sahf
mov
test
jecxz
sahf
or
fcomi
lret
adc
das
scas
xor
out
jp
jne
aas
stos
push
es
fucomip
out
imul
ds
and
and
cmp
scas
push
inc
push
cmp
icebp
outsl
enter
mov
cmp
lea
jg
rcrl
mov
lret
ljmp
sub
pop
dec
outsb
jp
add
cmc
fimull
lea
fwait
mov
inc
push
pop
insb
cmp
adc
add
sub
lcall
stos
xchg
mov
ljmp
pop
inc
add
pop
popa
cmp
shll
iret
fcmovu
lret
ljmp
sub
pop
dec
outsb
jp
push
lcall
into
fcmovu
lret
ljmp
sub
pop
dec
outsb
jp
push
lcall
mov
test
sub
clc
inc
push
lods
mov
or
or
pop
pop
test
insl
xor
in
fsts
cs
jbe
mov
insl
cli
shll
imul
cs
mov
sbb
inc
add
pop
scas
pop
into
sbb
fnstenv
test
cmc
loopne
inc
hlt
jb
jbe
pop
lahf
shr
mov
push
cli
add
orl
mov
xchg
xchg
fcoms
js
push
aaa
and
mov
sub
jg
cmp
mov
imul
xchg
out
sub
xor
clc
adc
sub
iret
cmp
dec
in
ret
or
loopne
mov
inc
mulb
mov
clc
xor
mov
push
loop
or
sahf
das
les
aam
mov
pusha
mov
lahf
lds
andl
add
jge
push
inc
xor
outsb
daa
out
mov
std
ret
xchg
or
fs
sbb
cmpsb
cltd
movntps
fmull
sub
outsl
test
lods
test
dec
push
iret
mov
add
pop
popf
pop
hlt
adc
dec
adc
movsb
sub
bound
and
roll
or
imul
fisttpl
jb
or
adc
pop
push
fstpl
gs
inc
aad
xor
inc
inc
or
cmp
and
mov
repz
aas
push
sti
roll
dec
lret
sub
sbb
arpl
lea
xchg
out
dec
mov
fs
out
push
or
inc
adc
imul
rorb
push
sub
jp
xor
insb
push
xor
add
xchg
mov
fldl
mov
cmp
adc
add
or
jle
pop
lret
mov
pop
shrb
dec
xor
mov
add
inc
jge
int
int
pop
imul
xchg
iret
cmpl
lods
mov
xor
insb
outsl
cld
faddl
leave
push
adc
mov
or
insl
mov
call
inc
movsb
test
fwait
inc
xchg
pushf
not
mov
cmc
cmpsl
and
dec
pop
xlat
in
dec
ret
outsl
cld
scas
insb
data16
fs
add
out
sbb
das
mov
jnp
mov
jle
aam
add
pop
jle
sarb
scas
mov
shr
sub
in
int
fdiv
cmp
inc
add
fcomip
clc
mov
aad
dec
xor
insb
sahf
iret
mov
sbb
arpl
lea
in
or
xor
and
push
sub
sbb
in
cs
cli
lcall
sub
and
sub
inc
mov
inc
in
rcrb
pop
sbb
adc
popa
push
popa
add
mov
jmp
mov
out
add
scas
iret
dec
and
mov
pop
pop
ja
imulb
xchg
inc
inc
pop
jl
pop
lods
cld
imul
mov
fsubs
mov
scas
xor
outsl
push
fldenv
rcrl
push
inc
xchg
mov
xchg
mov
jmp
inc
ljmp
and
out
shll
out
adc
dec
push
stos
imul
ljmp
jg
and
test
mov
imul
inc
push
dec
jno
push
lret
jge
adc
pop
sahf
test
icebp
push
lock
iret
cmp
mov
xchg
mov
xchg
fwait
xchg
cltd
fistl
xor
or
push
scas
jg
mov
xchg
pop
push
mov
iret
out
xor
mov
lahf
sub
shll
mov
fwait
inc
lcall
pop
pop
fxtract
and
push
aam
mov
xchg
subl
dec
jecxz
out
imulb
push
scas
cmpsb
push
dec
push
cld
cmpsb
pop
mov
cld
mov
jnp
mov
shrb
adc
xor
bound
std
mov
je
mov
and
xchg
and
mov
mov
shrl
jne
mov
sub
cmp
mov
lahf
sbb
pop
mov
js
mov
sarl
push
pop
xchg
push
sbb
jle
jo
jae
aaa
int
in
into
mov
dec
repnz
jbe
lcall
ss
test
loopne
pop
cwtl
adc
add
jb
and
and
lret
pmaxsw
add
hlt
test
fsubl
mov
push
add
pop
and
ljmp
rcrl
mov
cmp
lcall
adc
aaa
mov
pop
movsb
dec
inc
mov
mov
wrmsr
adc
dec
repnz
push
ret
push
inc
jno
cwtl
sub
adc
fdivrs
jmp
cmp
outsb
mov
scas
pusha
fcomip
punpckhbw
pop
std
push
out
inc
jp
loope
mov
push
xor
xchg
xlat
test
das
cmc
mov
cwtl
aaa
in
out
inc
jbe
jmp
out
pop
xor
push
sbbl
loope
or
jae
mov
out
mov
sbb
jle
fistps
mov
dec
and
sub
loop
ljmp
fnsave
jo
test
dec
inc
loope
push
pop
xchg
push
inc
push
dec
or
xor
dec
xor
or
das
xchg
mov
xor
adc
movb
cwtl
ja
or
ja
add
outsb
dec
xor
jecxz
mov
addr16
outsl
or
sti
sbb
jle
addl
dec
fbld
mov
sbb
jns
adc
js
mov
inc
add
push
or
inc
fisttpll
mov
addr16
and
xchg
mov
and
dec
and
inc
dec
sbb
aas
jge
movsl
mov
cvtpi2ps
dec
pop
mov
nop
stos
cmpsb
sub
leave
mov
jle
push
sub
in
xchg
es
mov
rolb
hlt
jae
rorb
dec
pushf
mov
push
and
fldl2e
dec
mov
and
mov
mov
or
push
push
ljmp
mov
mov
cs
inc
jmp
scas
int3
pop
dec
mov
xchg
push
sub
pop
pop
dec
jbe
fs
outsl
lods
leave
sbb
inc
jecxz
inc
popf
xchg
test
jnp
cmc
aam
movsl
jno
jno
clc
mov
adc
ljmp
inc
int3
sub
adc
shrl
repnz
fldcw
test
andb
pushf
movsl
sub
jne
push
fwait
push
or
xchg
cli
shll
mov
sbb
sub
mov
sub
out
mov
xor
jl
and
dec
fisubrs
rcrl
je
ds
clc
mov
xchg
in
inc
sar
jl
das
mov
add
enter
xor
gs
nop
testl
jae
sub
sub
sbb
out
loop
xchg
mov
mov
int
fs
xchg
loop
in
inc
outsl
ret
fidivrs
jmp
push
add
xchg
adc
jne
mov
pusha
pop
imul
jg
int
xchg
imul
mov
loop
outsl
jno
sbb
in
test
dec
jo
jmp
push
lods
inc
cmp
mov
push
cmc
ret
gs
mov
je
int
push
into
les
xor
pop
inc
testb
mov
rcll
mov
xchg
sub
sub
sbb
pop
inc
push
test
out
scas
insb
jae
cmp
sbb
pop
test
xor
mov
ds
fldl
mov
lea
loope
mov
pop
shll
and
stos
cmp
pop
push
cmc
jnp
xchg
shlb
test
jo
cmp
sbb
add
mov
pop
cmpsb
icebp
xchg
loopne
cmc
and
cmp
push
stc
pop
xorl
sub
xchg
or
sbb
push
fidivl
inc
out
push
sbb
out
mov
cmc
jne
mov
mov
adc
gs
dec
inc
jmp
aam
push
out
sub
mov
xchg
repz
pop
jp
andl
repz
loopne
push
cmpsb
pop
into
lock
int3
out
cltd
cmp
inc
in
sbb
out
cld
repz
pop
jne
jb
cwtl
arpl
ljmp
fistpl
in
pop
mov
test
into
les
inc
add
rol
ljmp
push
aas
xchg
rorb
xchg
mov
xchg
add
push
test
push
push
xor
push
xchg
std
inc
and
imul
fiadds
mov
stos
stc
dec
jle
jmp
fsub
xchg
enter
bound
sti
mov
mov
cld
mov
outsl
xchg
and
hlt
es
sahf
and
insl
pop
cmpsl
inc
cmp
out
push
outsl
icebp
stos
movsl
repz
pusha
mov
mov
mov
mov
sub
fldt
pop
inc
jg
filds
popa
cmp
imul
insl
fwait
xor
xchg
jmp
cltd
fs
into
pop
xor
jl
sub
push
fs
sub
or
and
inc
inc
mov
ret
in
xorl
iret
xchg
sbb
cmpsb
jnp
sub
lods
icebp
mov
adc
inc
jle
mov
adc
cmpsl
pop
or
pop
dec
in
ficompl
clc
pop
pop
ss
xor
repz
pop
aas
mov
stos
mov
hlt
inc
jnp
cmp
xor
xor
xchg
scas
or
daa
lods
jle
dec
jl
dec
cmp
std
mov
test
lcall
mov
test
aam
mov
scas
mov
add
xchg
inc
inc
pop
xor
cmp
adc
icebp
add
push
cmp
cmp
lods
out
out
push
test
cmpb
fadd
mov
adc
leave
movsl
ret
cmp
aaa
sbb
adc
lea
adc
adc
lods
ret
fcomip
shrb
jb
rsqrtps
cmpsb
adc
fldcw
inc
or
push
mov
rorb
mov
jne
xchg
and
push
sub
test
push
mov
arpl
push
pop
mov
jno
sti
sub
hlt
das
jg
scas
mov
shll
movsl
ja
out
add
cmp
lods
psubw
fstl
jge
insb
test
inc
mov
xchg
out
adc
inc
add
pop
pushf
rcrb
into
iret
loop
ret
pop
je
stos
and
xchg
sbb
lcall
sub
rol
roll
ret
enter
xor
pop
or
call
dec
push
xsha1
cmpsb
psrlw
js
ss
and
push
in
add
jmp
sub
int3
jae
test
fmull
inc
xchg
pop
mov
cltd
xorl
adc
sahf
jae
or
inc
dec
and
into
cmpsl
lock
inc
imul
mov
push
sti
dec
in
arpl
test
add
cli
push
push
call
aam
xchg
sub
jmp
or
pop
push
mov
test
in
jno
lods
add
cs
and
sub
and
repz
add
clc
cld
data16
push
cmp
pop
push
ret
loopne
sbb
out
push
movsl
xor
push
dec
lret
fldz
mov
adc
sti
sub
xlat
cmp
mov
ljmp
xor
xchg
dec
stos
pop
lds
pusha
push
in
jb
mov
insl
jmp
loopne
or
test
push
in
shl
movsb
mov
jnp
movsl
fdivrs
inc
dec
repnz
adc
popa
lahf
xor
repz
xlat
fs
out
cs
mov
inc
out
sbb
push
loope
cmp
dec
stc
mov
int
adc
mov
sar
jl
add
adc
cmp
mov
mov
sahf
fstp
insl
mov
xor
out
mov
sbb
push
scas
leave
call
push
inc
inc
mov
addr16
push
push
js
or
xor
xor
cmpsl
push
ds
mov
add
push
mov
jbe
call
cs
inc
pop
push
lds
hlt
jl
nop
outsb
nop
lods
jp
ret
mov
pop
lcall
mov
je,pn
scas
mov
xor
mov
sub
mov
stos
push
jp
fnsave
aaa
nop
std
add
inc
fbstp
and
add
xchg
mov
mov
gs
adc
lahf
sbbb
imul
sbb
pop
xchg
inc
test
dec
push
sar
loope
sbb
jmp
jl
cmp
pop
mov
or
xor
mov
ret
pop
mov
lods
pop
push
cmp
inc
mov
push
jne
fidivs
mov
popf
inc
ljmp
jbe
imul
cmp
push
push
adc
push
lret
es
es
pop
js
arpl
out
xor
or
mov
and
or
test
rorb
add
mov
mov
nop
imul
or
adc
cmp
add
adc
sub
jbe
sub
xchg
and
xchg
or
jl
mov
es
nop
push
xchg
shl
push
adc
fiadds
mov
push
cmp
jnp
and
push
or
in
pop
rcrl
cmp
mov
mov
and
push
mov
test
mov
or
dec
je
push
imul
bound
ss
es
jns
cwtl
cmpsb
or
inc
pusha
lock
ret
test
or
pusha
xchg
pop
lods
adc
fbld
mov
inc
dec
movsl
xlat
jg
insl
cs
jle
jmp
into
xor
and
insb
mov
out
les
lods
arpl
or
movsl
adc
pop
sbb
push
aad
sbb
mov
fisubl
stos
fildl
outsl
scas
lcall
jle
je
cltd
xchg
push
dec
lock
imul
ss
cmp
push
mov
lahf
clc
orb
insl
hlt
xchg
add
fwait
cmpsl
mov
mov
push
test
mov
push
fdivl
mov
mov
hlt
cld
mov
int3
inc
fistps
testb
into
dec
jge
inc
push
mov
and
dec
or
xchg
pop
out
push
incb
sub
outsl
jbe
lods
repnz
jne
mov
mov
push
and
mov
test
sub
mov
and
xor
pop
push
fnstsw
rolb
sbb
jne
repz
out
orb
adcl
rcrl
imulb
rol
pusha
jg
xor
sub
lods
pushl
mov
nop
rcrl
rcl
inc
lret
add
iret
popf
cmp
movsl
xchg
xchg
add
aaa
cmp
push
sub
incl
mov
pop
test
movl
insl
stc
jnp
jecxz
push
push
inc
dec
cli
mov
lret
mov
jle
stos
mov
roll
mov
fcompl
xor
and
cmpsl
mov
mov
andb
addr16
inc
mov
lcall
mov
pop
fwait
jo
loop
add
push
sarl
stc
hlt
cwtl
sbb
dec
inc
xchg
dec
cmp
stos
insb
or
xor
dec
loopne
push
xor
sub
mov
in
jbe
dec
mov
mov
fs
sub
repz
repz
sbb
iret
les
push
out
mov
lcall
lahf
pcmpgtb
inc
lcall
sbb
mov
xor
mov
pop
scas
inc
inc
lds
andl
inc
xor
inc
movsl
outsl
pop
push
shlb
xchg
lea
push
add
sarl
shlb
loopne
adc
xor
pop
subl
sarl
sbb
pop
and
movsl
call
push
dec
jl
add
imul
add
leave
aad
sbb
cmp
loope
in
adc
cltd
subb
ret
dec
outsb
pop
push
mov
mov
mov
mov
sub
inc
imul
dec
mov
imul
jp
push
inc
testb
xchg
fistps
push
mov
test
hlt
or
mov
aaa
loop
mov
enter
or
mov
xor
ds
mov
lock
push
inc
mov
aaa
cmp
aaa
andb
mov
test
push
push
dec
stos
sbb
fwait
sub
adc
xor
inc
or
pop
movsb
mov
mov
cmp
aam
jp
stos
mov
jb
jg
shrl
fwait
repnz
mov
jnp
dec
adc
in
jge
jne
jle
sbb
jmp
add
add
cmp
in
jo
xor
into
stos
sahf
mov
jno
fidivs
cs
loope
gs
cmp
lret
xchg
loope
pop
lcall
lcall
xchg
xor
pop
flds
push
adc
outsl
xchg
add
cmp
cmp
sub
add
add
sbb
mov
leave
dec
adc
dec
fcomps
fidivrl
shlb
or
pop
sbbb
xchg
mov
loop
jbe
mov
cltd
insl
jge
sbb
and
push
lea
sahf
adc
sub
int
inc
not
adc
mov
ret
incl
or
push
orps
pop
inc
cld
push
es
sub
mov
lods
adc
cmpsb
mov
imul
xchg
jle
lds
cmp
aam
cmp
leave
mov
fiadds
cmp
fdivrs
loope
data16
jae
ror
shrd
or
cmpb
repnz
mov
roll
xorb
cmc
mov
outsl
daa
add
lods
dec
sbb
test
int3
cld
fsts
dec
lcall
roll
cltd
mov
repz
imul
pop
jo
sbb
loope
lock
jbe
cmp
les
sbb
inc
out
loop
int
push
das
cmp
xor
push
lcall
push
jnp
xchg
imul
dec
jne
mov
mov
and
or
dec
into
subb
xchg
mov
arpl
loop
pop
jne
lcall
inc
jno
gs
loop
scas
pop
jns
xchg
xchg
sbb
andl
or
add
stos
test
repz
std
pop
rorl
pop
push
inc
shlb
in
int
lret
inc
stos
mov
sub
pop
sti
in
ds
pop
sbb
pop
cmp
jne
mov
faddl
jp
out
ret
dec
shlb
lret
jl
daa
jp
mov
or
mov
fptan
push
add
js
and
shll
inc
fldt
push
rcrl
shlb
or
jbe
add
inc
loop
or
add
mov
dec
pushf
xlat
popf
lods
jmp
lods
mov
fistpl
insb
pusha
mov
push
push
adc
xchg
mov
icebp
sub
pop
outsb
mov
push
pop
add
xchg
in
and
andb
adc
in
pop
mov
cmp
paddd
pusha
inc
mov
fistps
and
int3
fbld
adc
mov
mov
in
sub
ja
push
lods
sub
mov
out
arpl
aad
sub
xchg
xchg
stos
xor
jp
dec
pop
inc
loop
popa
mov
aaa
rcrb
xchg
jns
push
xchg
stc
lds
cmp
mov
mov
fmull
nop
pop
dec
adcb
stc
mov
mov
xchg
scas
mov
cmp
add
fsub
les
popa
pop
popf
sub
or
xor
and
sbb
pop
data16
in
in
mov
lods
pop
mov
xor
xor
pushf
adc
mov
add
int3
fildll
cmpsl
adc
cmp
in
dec
bound
cld
loopne
add
dec
mov
jb
inc
mov
jg
jae
div
loop
jo
pop
mov
jl
call
inc
fsubl
dec
cltd
out
push
notl
mov
and
mov
pop
insb
xchg
mov
lahf
popw
sbb
das
inc
adc
outsl
push
cmp
movsl
enter
cs
mov
loopne
iret
mov
inc
inc
daa
push
cwtl
fnsave
mov
loop
mov
lret
out
aam
adc
add
xor
xchg
ja
test
in
ss
inc
popl
loopne
sbb
inc
mov
push
adc
or
scas
data16
jo
or
rcr
mov
fs
inc
in
shufps
pop
aam
pushf
xchg
inc
fimuls
int3
flds
addr16
fimuls
into
fcmovu
lret
ljmp
sub
pop
dec
outsb
jp
push
lcall
into
fcmovu
lret
ljmp
sub
pop
dec
outsb
jp
push
lcall
into
fcmovu
dec
out
cli
ljmp
sub
pop
dec
outsb
jp
push
lcall
into
fcmovu
lret
ljmp
ds
cmp
mov
test
push
jg
incl
xchg
je
add
or
add
pop
add
add
int3
add
add
push
add
add
add
add
cmpsl
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
rolb
xlat
add
add
add
testl
inc
add
mov
in
add
movl
dec
add
add
pop
add
add
add
add
add
add
mov
and
push
add
add
dec
add
add
add
add
add
add
add
in
add
add
cwtl
add
lock
add
jbe
or
loopne
cmp
add
add
add
jecxz
ret
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
or
adc
popf
add
mov
push
add
fadds
ds
add
push
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xlat
add
pop
add
add
add
add
add
add
pop
add
add
xor
push
add
add
ret
add
add
add
add
add
add
inc
add
add
add
add
add
leave
add
add
add
js
dec
add
jecxz
jbe
xor
add
data16
ds
add
add
sbb
roll
ja
repnz
add
add
add
add
add
cltd
add
add
add
les
xchg
add
add
cmp
dec
add
add
mov
int3
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
ljmp
add
add
add
adc
mov
push
add
add
popl
xor
mov
loopne
pop
add
add
ret
add
add
add
add
adc
inc
add
add
add
add
add
add
inc
add
push
add
add
add
add
ret
add
add
add
insb
add
mov
rolb
add
add
add
add
outsb
add
add
add
add
add
add
add
add
mov
add
add
str
sti
add
add
add
add
add
add
sbb
push
test
add
add
add
adc
dec
add
add
add
add
add
stos
add
mov
sbb
xor
add
add
add
add
add
add
push
sbb
cli
add
dec
add
add
add
mov
add
add
add
add
pop
add
add
add
add
fildl
insl
add
add
add
add
add
add
sbb
mov
xlat
add
add
inc
add
add
add
rclb
push
fstp
fstpt
lcall
fdivrl
xchg
adc
inc
xor
dec
cmpsl
leave
ja
icebp
into
mov
hlt
jmp
out
jge
lretw
mov
sbb
aad
push
cltd
pop
pop
notb
das
pop
test
push
mov
dec
pop
cli
xor
negb
dec
mov
and
inc
dec
push
add
mov
xchg
in
jae
and
repnz
push
pop
xchg
or
cmc
mov
xchg
subb
mov
lods
jnp
aam
push
stos
addr16
xchg
mov
out
sub
jnp
cmc
outsl
push
xor
daa
pushf
mov
sbb
inc
sbb
pop
push
lahf
pop
mov
mov
and
call
sub
sarb
mov
jl
mov
dec
pop
mov
and
lahf
inc
xlat
clc
cmpsb
xchg
pushf
mov
push
mov
mov
insb
add
jle
adc
jmp
nop
and
pushf
mov
mov
push
inc
aas
push
dec
dec
sahf
push
mov
xor
sub
push
push
inc
stos
pop
xchg
inc
pop
xor
pop
mov
cmp
dec
test
mov
mov
mov
cltd
jmp
lock
jo
mov
mov
mov
stc
in
div
in
sbb
push
mov
cmp
xchg
bound
divl
imul
cli
push
push
insl
xchg
xchg
scas
imul
push
outsb
or
ja
pop
jnp
sub
fwait
lods
adc
jae
add
mov
imul
xlat
cmpsl
lcall
sub
adc
xchg
sub
jae
jmp
in
dec
sub
jmp
xchg
mov
mov
jle
cld
jg
jp
add
lea
repz
lret
pop
adc
add
pop
jae
inc
call
inc
cmp
xor
adc
in
fldenv
scas
mov
cmc
hlt
sti
das
mov
aas
roll
mov
repnz
shrl
jle
xor
adc
adc
mov
adcl
fwait
enter
add
dec
mov
out
loopne
sti
inc
leave
je
sbb
addr16
mov
popl
outsl
aas
ficoms
out
add
enter
add
popf
or
push
negb
arpl
test
xchg
sbb
std
js
mov
fmuls
sub
push
xchg
mov
push
fstl
mov
out
es
andl
dec
shrl
mov
and
mov
sub
addr16
test
and
fldcw
push
lcall
cltd
or
leave
js
stc
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
