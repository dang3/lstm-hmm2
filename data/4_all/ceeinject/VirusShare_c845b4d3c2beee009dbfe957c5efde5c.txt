call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
hlt
popf
les
les
fs
je
inc
sub
xor
add
adc
in
hlt
popf
les
mov
test
xchg
test
sbb
and
xor
add
adc
in
hlt
popf
les
mov
test
xchg
std
fs
jp
dec
sbb
dec
add
lods
hlt
aam
lds
fmuls
outsw
jbe
out
scas
push
scas
or
outsl
fimuls
xor
pop
cmp
in
notl
cmp
pop
fisttpl
xchg
add
lea
or
pop
mov
stc
push
jp
fs
push
nop
mov
pop
mov
lds
test
movsb
outsb
movsb
fdivrl
cld
add
loop
test
pop
mov
sbb
or
std
in
xor
inc
mov
fnsave
push
push
rcr
cmp
insl
add
cmpl
adc
xor
push
dec
mov
dec
xor
push
les
mov
test
xchg
std
fs
push
cmp
add
adc
mov
lods
mov
enter
loope
aad
and
dec
cmp
push
pop
cmp
inc
xor
call
mov
loop
fcoms
add
fs
and
jbe
adc
leave
nop
aad
fsubs
xchg
std
fs
push
cmp
add
adc
in
hlt
popf
les
mov
test
xchg
std
fs
push
cmp
add
adc
in
push
cmc
jg
lock
mov
mov
insl
push
pop
lods
xchg
test
mov
insl
pop
inc
adc
jge
xorb
fstpt
sahf
cltd
push
sub
incl
adc
jecxz
pop
cs
orl
cmp
insl
fiadds
cmpsl
leave
mov
sub
jnp
inc
fs
or
mov
xchg
aas
push
loopne
xchg
or
sbb
daa
movsb
mov
or
or
test
jo
or
jle
and
mov
sbb
hlt
mov
out
jecxz
popf
cmp
in
pmuludq
lods
xchg
call
rclb
pop
or
jle
test
mov
mov
inc
pop
fistps
out
jne
fwait
jb
into
fnstsw
mov
sbb
scas
adc
loope,pn
cli
mov
daa
dec
mov
xor
cmp
and
jp
or
movsb
movsl
jecxz
out
push
ffree
pop
mov
fadds
mov
jp
cli
push
lods
test
je
ja
dec
sarl
fwait
mov
aam
clc
push
decb
aad
pop
mov
jle
push
movsl
lcall
mov
lods
sub
xchg
lods
or
js
inc
ret
sub
mov
push
jne
nop
inc
mov
add
inc
scas
data16
pop
xchg
mov
nop
push
xchg
insl
out
sti
fdivrl
push
cmc
dec
mov
pushf
jecxz
rclb
addr16
insb
dec
adc
test
leave
into
dec
fadd
xor
pop
cmp
into
jne
xchg
das
sbb
aaa
jge
and
mov
adc
std
mov
imul
jbe
sti
cwtl
pusha
sbbb
mov
fisttps
adc
orb
ret
pushf
incl
add
shrb
dec
rcrb
jmp
loopne
dec
jp
mov
inc
push
cmp
dec
add
andl
enter
pushf
pop
das
xchg
mov
xchg
mov
or
push
or
ss
fildl
cltd
mov
je
in
and
cmpsb
adc
jnp
inc
pusha
aas
xor
adc
dec
sbb
add
push
mov
mov
out
scas
mov
and
js
daa
add
sbb
sub
inc
pop
arpl
fwait
and
push
or
adc
dec
gs
nop
mov
in
outsb
or
out
dec
and
loop
shll
xchg
xor
enter
mov
ja
les
push
adc
xchg
aaa
andb
ret
sub
mov
leave
cmp
shrl
add
cmp
cmp
dec
in
arpl
ds
decl
mov
ds
stc
sbb
cmp
repz
xor
xor
mov
cltd
mov
cmc
adc
mov
daa
and
and
cmp
std
sbb
out
mov
fndisi(8087
push
pop
leave
iret
scas
std
sub
jne
aaa
ret
insl
mov
aad
das
lahf
fcmovbe
or
or
mov
fldz
mov
std
inc
mov
and
lret
shll
std
je
xchg
mov
mov
das
xchg
mov
lcall
push
dec
int
push
mov
orb
ja
cwtl
inc
int3
push
rcll
add
sahf
out
inc
scas
dec
jns
js
adc
sbb
dec
mov
or
loop
dec
dec
cld
imul
cs
insb
inc
bound
in
xor
cwtl
pop
hlt
dec
clc
dec
daa
icebp
sahf
push
ss
mov
xchg
jnp
addl
mov
mov
xchg
fs
mov
mov
fidivrl
aad
loop
inc
xor
push
jne
add
shlb
xor
gs
jle
cmp
jo
aam
sbbl
loop
and
xor
fs
cmpsb
insb
sti
pusha
cmp
lret
xor
pop
sti
incl
subb
push
repz
repnz
imul
inc
outsl
repz
jb
or
jp
sbb
loopne
jmp
inc
add
lret
cmp
mov
fidivrs
and
sub
and
xor
dec
add
insl
mov
cmp
dec
ret
out
nop
insl
sbb
stos
inc
cmpsb
sti
and
jne
mov
stos
jae
test
mov
bswap
lret
rol
sub
sar
xorl
lret
sbb
adc
mov
adc
cs
testb
aaa
mov
movsl
scas
rorb
sub
dec
clc
pop
mov
mov
popa
out
in
xchg
enter
stos
sbb
movsl
mov
int3
adcb
stc
ds
arpl
and
mov
cmp
cmp
scas
add
fs
or
and
inc
xor
mov
xlat
hlt
mov
dec
push
dec
sub
sub
out
stc
std
shr
mov
cmpsl
das
repz
cld
xchg
sbb
ret
adc
mov
outsb
imul
jns
in
xchg
adc
jl,pt
add
call
loope
adc
ljmp
scas
push
lahf
pop
ds
push
test
int
inc
xchg
xor
or
xlat
inc
cli
mov
or
push
xor
add
push
sahf
add
mov
inc
aaa
mov
cld
adc
pop
ret
outsl
loope
sbb
mov
xchg
xchg
es
dec
test
mov
push
push
sbb
ss
push
mov
xchg
enter
aad
xchg
jp
hlt
lret
test
push
fdivl
lock
and
data16
lods
xchg
mov
cmpsb
or
loope
lds
sbbb
add
dec
outsl
mov
mov
and
xor
decb
sub
push
push
lret
repz
push
push
pop
lret
push
call
stos
mov
pop
sahf
mov
mov
into
call
jo
jb
mov
repz
in
cltd
jmp
cli
and
sbb
in
sbb
fsubr
cs
xor
push
inc
scas
mov
add
dec
cwtl
insb
cmp
outsl
push
sti
orb
sub
mov
mov
out
mov
outsl
iret
js,pn
inc
das
xchg
sub
clc
fldl
iret
push
add
push
addl
fistpll
lea
sbb
pop
in
nop
push
dec
push
and
jo
xchg
jae
shll
std
inc
mov
cmp
jno
js
pop
jge
into
pusha
pop
call
lret
and
jge
popf
mov
cwtl
fisubrs
mov
rorl
sbb
fisubrl
out
pop
mov
pop
adc
adc
mov
jmp
cmpsl
mov
sti
jo
push
into
jb
mov
jle
mov
insb
cld
es
es
out
sub
adc
mov
in
xchg
out
sub
aaa
push
mov
and
mov
and
push
dec
nop
out
je
idiv
jle
sbb
inc
push
hlt
and
cmp
test
mov
addb
dec
adc
mov
xor
fldt
jecxz
and
and
and
mov
jge
je
sbb
test
mov
push
ret
out
dec
scas
add
cmp
aaa
pop
jb
ds
sbb
mov
jecxz
arpl
adc
xlat
scas
pop
stos
scas
outsl
mov
movsl
fdivr
fwait
and
inc
lret
push
leave
lcall
xchg
pop
dec
mov
inc
cs
xchg
or
mov
jecxz
jg
mov
or
sbb
sub
adc
insl
inc
aaa
in
pop
loope
pop
push
sbb
sub
push
enter
or
pushf
fs
adc
and
mov
outsb
inc
iret
jg
sub
push
shrb
cltd
into
mov
xor
in
jo
and
jl
movsb
je
es
rcl
inc
xchg
f2xm1
xchg
cltd
out
pop
das
scas
jmp
pusha
stos
add
or
xchg
cltd
add
call
nop
test
push
test
and
pop
add
adc
bound
cmp
mov
aam
inc
sbb
inc
comiss
out
pop
sbb
aas
xor
lcall
xchg
mov
ret
hlt
lret
test
mov
in
cltd
rolb
push
sahf
mov
ret
mov
stos
mov
loop
xchg
push
or
cmpl
cld
mov
adc
arpl
sbb
mov
add
aad
sarl
call
or
fadds
pop
test
mov
mov
lods
in
xor
xor
fisubs
mov
call
sub
int
xor
inc
jg
or
jge
jecxz
xor
pop
vcvtsi2ss
mov
arpl
mov
sub
jae
add
das
cmpsl
les
orb
stc
jle
fldenv
pop
lahf
or
out
data16
adc
jnp
xchg
cs
mov
les
mov
inc
stos
push
int
leave
xor
movsb
dec
mov
jl
and
xor
cwtl
popa
push
fidivl
jo
int
mov
repnz
in
push
or
ret
jl
xor
pop
addr16
int
mov
sbb
adc
nop
dec
push
jbe
sub
mov
mov
in
ds
pushf
and
popf
ficompl
sbb
clc
and
mov
mov
js
or
aaa
jecxz
sub
rcr
mov
mov
mov
xor
mov
fistl
call
adc
xor
pop
dec
mov
pop
in
movsl
sarl
sub
xchg
lret
add
sub
pop
cmp
jb
dec
push
ret
and
push
aas
ds
lock
mov
cltd
loop
dec
xchg
xchg
xchg
jne
nop
iret
ret
in
imul
mov
jle
arpl
push
ficomps
dec
clc
sub
jae
ss
mov
xchg
out
addr16
dec
aad
repnz
xor
inc
or
cmp
movsl
or
loope
mul
pop
adc
aas
in
push
ja
dec
mov
ret
js
fwait
sbb
sub
add
cmp
jne
js
scas
inc
xchg
push
mov
push
push
dec
or
repz
sub
dec
les
mov
xor
arpl
popa
cmc
pop
out
adc
into
ljmp
ficoml
stos
test
mov
fld
dec
inc
mov
sub
pop
lea
dec
add
adc
jno
bnd
fisttpl
xor
call
lods
call
sub
lods
and
sar
movsl
xchg
loop
repz
sub
shlb
inc
dec
pop
popf
sub
icebp
int
popf
les
mov
test
and
bound
les
mov
mov
testb
std
mov
jl
in
mov
xchg
mov
nop
mov
clc
out
add
pusha
jecxz
repnz
jmp
data16
pop
add
pop
in
cmp
adc
negb
mov
and
pop
in
jp
shrl
adc
leave
fwait
subl
ja
push
lea
iret
sahf
dec
popf
mov
mov
lcall
rolb
mov
xlat
pop
andl
push
nop
xor
cmpsl
xchg
sbbb
repz
sbb
mov
jmp
add
out
xor
jb
mov
mov
aad
test
push
mov
dec
lcall
pop
scas
test
add
jne
mov
gs
popf
repz
xchg
mov
push
lea
pop
iret
je
in
js
inc
dec
jmp
into
jno
negl
sub
jg
sub
rorb
ret
adc
xor
arpl
pop
mov
push
ja
test
cmp
orb
movsb
or
mov
xchg
adc
out
out
sbbb
aad
and
jne
lret
inc
test
and
fwait
adc
pop
jnp
lret
push
inc
rclb
jecxz
negb
mov
and
add
pop
movsl
push
mov
jl
push
add
or
adcl
mov
outsb
insb
std
push
and
stos
ret
stos
mov
ret
fwait
inc
aas
pop
inc
push
mov
dec
in
jno
pop
ja
lods
mov
testb
push
stc
fnstsw
push
jne
dec
in
push
sub
mov
jl
in
jae
jecxz
lcall
outsb
fcmovnu
loop
enter
int
aas
insl
sbb
inc
jbe
pop
inc
pop
push
stc
sbbb
pop
stos
test
mov
gs
add
jmp
jg
fnstenv
mov
repz
inc
pop
repnz
sub
xlat
cltd
inc
fistps
pop
lret
ret
inc
in
adc
xor
inc
rcrb
sbbb
push
xchg
jmp
xor
add
add
push
xor
pop
cmp
js
outsb
jns
mov
rcrl
pop
adc
mov
pop
std
imul
sub
dec
jo
inc
adc
jne
out
xor
dec
xchg
and
jg
outsl
mov
cmp
fidivrs
inc
inc
aam
in
jmp
inc
or
test
ds
push
fmull
mov
sub
push
dec
pop
cwtl
xchg
add
test
xchg
popa
cmp
cltd
insl
cmpl
or
test
out
ret
addr16
jbe
pop
lods
push
push
push
jmp
xchg
add
fildl
xchg
lds
or
xchg
les
adc
cmp
dec
or
pop
pop
jae
pop
in
dec
or
test
cwtl
fdecstp
gs
xor
dec
fadd
fstp
sti
data16
cmp
mov
mov
int
dec
sbbl
or
sbb
push
daa
push
jmp
movsb
sbb
cmc
xchg
jg
push
lea
dec
sub
enter
cli
push
std
sbb
dec
jle
xor
lods
pop
test
jae
stos
mov
adc
popa
mov
cld
scas
pop
ffreep
icebp
out
xor
scas
movsl
fcomps
mov
data16
push
iret
lcall
or
pushl
or
stos
pop
test
test
pop
xlat
mov
sbb
hlt
jo
jge
sub
rcrl
pop
dec
rorb
repnz
lret
inc
jno
cli
dec
inc
pop
adc
jecxz
lahf
lods
out
fmulp
mov
mov
jae
cmp
push
sub
pop
mov
mov
lret
insb
out
add
and
jmp
push
push
pop
push
pop
inc
sbb
xor
bound
push
mov
mov
adc
add
clc
ret
out
mov
mov
rcrb
test
cmc
aas
mov
xchg
in
xchg
fdivrp
dec
test
cmp
xor
jle
mov
loop
and
cmp
ljmp
arpl
jecxz
mov
xor
inc
out
hlt
subb
lahf
outsb
inc
inc
jo
ds
inc
xor
jl
xor
js
mov
pop
jno
xchg
inc
int3
xorb
jmp
mov
jae
pusha
mov
sbb
cmp
cmpsb
push
mov
stos
icebp
push
push
js
cmp
adc
fstpt
test
mov
inc
sbb
insl
fcmovne
sub
scas
inc
lahf
cld
dec
fnstcw
pop
lock
imull
es
out
add
movsb
dec
sub
insb
cltd
ja
imul
xchg
fst
orb
in
repz
scas
mov
xchg
lcall
int
arpl
pusha
out
mov
filds
jnp
inc
nop
adc
sub
cmp
jge
in
mov
lret
pushf
push
js
dec
cmp
mov
shrb
pop
pop
test
in
fsub
jne
das
push
and
daa
hlt
push
out
movsl
push
in
pop
lret
fldcw
rorb
stc
loopne
sbb
out
push
push
jno
cmpsl
iret
push
pop
cmp
push
shll
inc
repnz
int3
xor
adc
add
loope
shlb
into
xor
or
es
jle
jns
mov
push
shr
adc
or
stos
flds
xchg
cmpsb
lods
enter
sti
aad
cmp
insb
lock
popf
jmp
rorb
xor
neg
and
add
jbe
addl
fcmovbe
adc
rol
mov
shrb
xchg
dec
ror
rolb
fcomps
gs
loope
adcb
sbb
jno
mov
addr16
jmp
sbb
clc
adc
cli
scas
bsf
rcl
and
mov
inc
pop
test
mov
add
cmp
pop
xchg
sbb
std
jae
mov
test
loope
fsubl
ljmp
cmp
fcomip
call
call
cmp
rcrb
jno
mov
scas
clc
xchg
lock
mov
sbb
pop
cmp
mov
fdiv
and
dec
cli
mov
out
or
push
xor
sbb
mov
sarb
sahf
add
cmpsb
cmpsl
jno
adc
adc
dec
stos
add
mov
sub
jp
mov
lea
jb
repnz
sub
inc
mov
movsl
add
pop
pop
scas
pop
daa
idivb
dec
mov
mov
stc
xbegin
cmpsl
mov
sbb
mulb
xchg
les
sarb
push
sub
xchg
or
inc
sub
xor
call
push
cmp
vpmaxub
loop
popf
popa
fcompl
pop
mov
jne
dec
aam
xlat
jne
jb
outsb
vpaddq
in
jl
adc
call
lea
loop
ds
dec
cli
test
ss
push
lret
and
daa
aad
pop
shrl
scas
cltd
pop
push
adc
pop
cmpsb
adc
test
sub
std
sbb
fidivs
out
pop
daa
fisubl
add
imul
popw
fs
and
out
jbe
nop
pop
xlat
push
dec
les
insb
daa
mov
xchg
mov
add
jp
mov
jmp
test
push
repz
sbb
push
les
mov
test
arpl
int3
out
mov
pop
inc
add
mov
in
adc
ja
pop
fwait
push
aad
stos
fistpl
push
push
pusha
sbb
stc
inc
repnz
pop
out
xor
shlb
xchg
shlb
fdivr
popa
pminub
pop
sbb
and
add
mov
in
jae
xor
pushf
cli
adc
stos
sub
pusha
pushf
mov
fnsaves
or
dec
in
mov
lahf
xchg
xchg
cmpsb
push
mov
pop
adc
and
rcl
cs
jne
jecxz
xor
fisubs
stc
ror
jl
pop
pushf
popa
sarb
repz
xchg
sub
or
lods
push
xor
mov
in
adc
mov
mov
adc
dec
mov
shll
xchg
xchg
sbb
inc
mov
add
js
jne
dec
imul
outsl
sub
es
push
and
push
push
dec
sbb
cmpsl
lods
jge
mov
subl
les
aad
in
adc
jne
popf
dec
or
movsl
sbb
and
push
popa
xchg
pop
cwtl
or
sub
in
jmp
cmpsl
mov
mov
xor
sub
imull
das
inc
or
fs
xchg
mov
mov
daa
pop
mov
adc
sbb
inc
mov
in
or
xor
xchg
mov
lods
jmp
stos
push
test
push
dec
test
mov
add
fwait
adc
push
dec
shl
lret
or
ss
int3
pop
push
in
pop
xchg
cmp
add
dec
repz
cmc
sbb
xor
pop
sarl
into
repnz
adc
lret
out
xlat
aaa
aam
rcrb
lcall
dec
inc
jl
mov
test
mov
data16
jne
cmp
mov
mov
test
mov
bswap
scas
enter
test
lods
movsb
insl
cmpsb
dec
xor
push
cs
nop
push
loopne
movsl
mov
sub
jp
inc
lods
pop
into
ljmp
cwtl
push
xor
mov
popf
inc
dec
loop
mov
mov
push
adc
ss
icebp
cmpsl
pop
outsl
mov
inc
inc
mov
ljmp
mov
popf
aaa
aaa
je
and
jne
inc
lret
sbb
and
jne
xchg
mov
lds
rcr
xor
cmp
or
iret
push
sar
int
pop
in
invlpg
jnp
fimuls
inc
out
sti
dec
test
cmp
les
inc
lahf
and
xchg
or
shll
cwtl
aam
adc
add
aas
scas
add
push
aam
movsb
int
fldl
je
inc
sub
xor
add
adc
in
hlt
popf
les
mov
test
xchg
std
fs
push
cmp
add
adc
in
hlt
popf
les
mov
test
xchg
std
fs
push
cmp
add
adc
in
hlt
popf
les
mov
test
xchg
std
fs
push
dec
push
lds
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
popf
insb
lea
adc
mov
jecxz
adc
cmp
push
dec
inc
jge
insl
arpl
mov
mov
std
repz
xchg
sbb
xor
inc
jge
insl
arpl
sbb
std
sbb
cs
push
insb
sub
sub
pop
add
xchg
jmp
notb
inc
dec
imul
adc
mov
sbb
imul
and
int
add
mov
pop
shlb
mov
jb
out
int
test
push
cmpb
sbb
mov
xor
mov
jae
push
lea
cli
rcr
stos
js
in
sbb
in
mov
push
inc
fbld
fwait
pop
xor
insl
imul
es
int
jle
test
cmc
inc
pop
adc
add
pushf
pusha
push
jb
jle
es
pop
xchg
aas
inc
jo
in
pop
dec
adc
imul
add
mov
push
xchg
lea
aaa
lods
test
std
sub
arpl
and
mov
fadd
stc
adc
les
cltd
lcall
cmp
cmp
aaa
push
xor
add
call
xchg
mov
mov
push
aas
push
sub
movups
sbb
clc
lds
rclb
in
jecxz
adc
and
dec
inc
jge
insl
arpl
mov
mov
std
repz
jecxz
adc
and
dec
inc
jge
insl
arpl
adc
loopne
lods
sbb
ds
adc
fnstenv
cmp
lods
out
cmpsb
loop
rcll
and
test
popa
les
dec
push
adc
pop
lcall
es
xchg
pop
or
adc
cltd
sbbl
int3
gs
jae
sbb
cmc
xor
repnz
sahf
mov
repnz
xor
and
sub
inc
je
jge
mov
jmp
adc
add
js
js
mov
or
and
mov
add
lods
cli
jne
pusha
cld
loop
xor
pop
imul
fwait
cmc
dec
xor
pop
cmpsb
lods
movsb
call
pop
out
int
fildll
daa
cmp
push
popf
add
mov
shlb
in
push
popa
orl
jecxz
mov
mov
insl
xor
pop
aaa
mov
mov
inc
pusha
lds
mov
loopne
cli
iret
lock
mov
xchg
jmp
cmc
enter
xchg
jl
or
sub
inc
adc
cmp
mov
sub
dec
sbb
fs
add
decl
mov
rorl
dec
dec
es
inc
cltd
add
stos
cmp
mov
repnz
dec
sub
adc
inc
pop
mov
in
scas
inc
pusha
add
cltd
ficomps
movsb
pop
fwait
sbb
add
std
jmp
call
inc
fs
add
jl
loop
cmp
inc
mov
mov
sbb
js
cs
leave
add
cmpsb
rep
outsb
add
test
loop
outsb
enter
lock
sti
sahf
mov
jae
sarb
cs
pop
loop
call
ljmp
notl
clc
cwtl
in
outsb
xchg
into
ja
das
and
push
call
or
mov
icebp
inc
jle
mov
mov
aaa
mov
addl
jge
xchg
and
and
ficompl
nop
sub
sahf
pop
stos
ret
mov
test
mov
dec
mov
mulb
cs
push
je
sar
xor
inc
adc
jp
mov
not
rclb
cmp
in
std
insb
sub
cmc
jb
mov
sbb
xchg
mov
jae
mov
gs
inc
outsl
loopne
xor
mov
mov
fwait
rorb
xchg
adc
mov
jecxz
mov
xchg
inc
mov
xchg
lahf
cmc
adc
inc
jno
push
jno
test
and
xor
add
sub
enter
fwait
repnz
rcr
mov
cld
mov
pop
pop
cmp
mov
nop
sbb
xchg
or
sbb
enter
movsb
mov
add
arpl
xchg
cwtl
jbe
mov
adc
bound
movsl
mov
lret
popa
mov
mov
lods
fcoms
jae
sbb
insl
pop
sbb
mov
and
cmp
sub
test
icebp
out
js
pop
lock
mov
add
push
lds
xor
enter
mov
les
sbb
push
adc
outsb
pop
xchg
addr16
sbbb
jae
rolb
dec
jbe
xchg
dec
cmp
bound
or
mov
cmp
dec
mov
xchg
stc
outsl
mov
push
test
sub
js
or
daa
hlt
jno,pn
aas
lea
jl
xor
sub
loope
push
jl
jbe
sarl
out
cmp
jns
cli
push
fisttpl
sub
mov
and
and
lret
cwtl
jns
nop
mov
pop
or
and
mov
mov
ds
pop
or
adc
pushf
sub
cmc
test
and
sbb
pop
pop
xor
rcrb
aaa
clc
inc
xor
dec
lds
outsb
bound
and
int
xor
out
xor
ljmp
mov
adc
rclb
hlt
xchg
mov
xor
or
jbe
pop
cltd
adc
popf
xchg
cmp
sbb
ret
mov
and
pushf
xor
cmp
push
xorl
lahf
sub
sub
es
in
mov
sub
add
push
cmpsl
mov
shrd
xor
add
fnstenv
and
aas
test
sbb
mov
or
je
sbb
icebp
cmpsl
dec
enter
fisubs
mov
mov
in
std
sbb
inc
cld
xchg
pop
ljmp
xor
mov
stos
popf
repz
xor
popa
add
inc
push
push
mov
jle
cmp
divl
js
xchg
sbb
sti
pop
and
jne
fs
push
orl
insl
into
lods
mov
mov
subb
mov
sub
inc
xor
jl
dec
dec
or
les
icebp
mov
aaa
mov
xchg
js
cmc
pop
decl
sbb
push
sti
insb
dec
pop
dec
loop
dec
aad
push
ja
jg
add
mov
push
in
xchg
loope
sub
pop
inc
lods
fdivrs
sahf
movsl
out
xor
mov
jb
aas
leave
jb
loop
push
aam
cmp
dec
clc
loop
push
lea
jbe
mov
dec
mov
nop
mov
jge
insl
inc
inc
push
incb
xchg
cli
lea
iret
enter
lea
pop
add
jnp
jns
in
mov
push
sub
shr
pusha
sbb
xchg
jmp
lcall
shrb
mov
jg
sbb
ficompl
insb
pop
push
pop
daa
dec
gs
inc
xor
test
xchg
inc
cli
cli
pop
sahf
xorl
enter
sbb
int3
inc
lcall
outsl
xchg
xor
clc
bound
sub
loope
mov
sub
popa
mov
clc
leave
outsb
loop
cwtl
xor
cmp
xchg
in
cli
pop
stos
icebp
ss
js
cmc
xor
and
out
inc
adc
sub
jno
mov
frstor
icebp
or
fcmovnb
mov
fst
jmp
jg
sbb
push
fnsave
popf
add
outsb
out
sbb
jnp
inc
adc
inc
call
outsb
ds
adc
sahf
imul
lods
pop
mov
icebp
mov
nop
pop
repnz
movzbl
adc
inc
push
mov
cmp
outsb
add
addr16
scas
scas
ja
fildll
ret
cmpsl
in
mov
xor
add
stos
imul
ds
aam
mov
adc
adc
jne
or
shll
inc
mov
mov
mov
cltd
lods
and
cmc
test
popf
xor
das
test
lods
jmp
sbb
and
aaa
int3
popf
aaa
adc
test
imul
ret
pop
cmpsb
in
mov
mov
into
jns
iret
mov
mov
jmp
mov
repz
pop
in
aad
outsb
repnz
test
insl
adcl
push
or
ret
fdivrs
add
imul
mov
mov
lods
sub
push
addps
lret
testb
push
dec
mov
lahf
mov
xorl
sub
lret
xchg
shrl
repnz
inc
cwtl
fimull
orl
aaa
aas
lods
push
pop
or
ss
addb
add
popf
notb
sub
aaa
inc
mov
mov
aas
int
sarb
repnz
cltd
repnz
cmp
aaa
adc
pop
pop
idivb
in
add
jge
aaa
sti
xchg
dec
js
jmp
cltd
ja
pop
inc
mov
adc
mov
jg
cmp
pop
mov
push
icebp
sbb
pop
lds
cmp
fnstcw
sbb
stos
pop
das
cmp
in
addl
aas
pop
int
rolb
int
push
pop
into
or
subl
pop
cmpsl
jnp
inc
nop
cmp
inc
into
or
movsb
and
lcall
mov
daa
outsl
dec
jl
rcll
and
jns
fidivs
xchg
fsubr
mov
lret
jmp
cwtl
insl
es
jb
add
insl
test
fstpl
mov
cmpsl
inc
pop
add
outsb
mov
test
mov
sbb
or
sbbl
cmp
loopne
xchg
xchg
daa
scas
ss
jp
jle
sub
in
xchg
dec
ret
sarb
gs
inc
aas
sub
dec
popf
out
xchg
sbbl
pop
push
sub
sbb
pusha
xor
pop
or
and
aad
mov
cmp
push
ss
and
mov
push
fisubl
add
negl
mov
or
sar
in
fisubs
call
push
jmp
jle
cli
into
les
mov
mov
mov
cmpsb
and
sbb
arpl
push
mov
jb
loopne
js
imul
lods
or
push
notl
mov
out
or
mov
mov
fstl
jbe
andb
popa
cmp
lea
jnp
mov
sbb
hlt
dec
in
out
xchg
xchg
inc
jmp
pop
movsl
imul
dec
pop
jle
dec
pop
mov
mov
ss
push
jnp
xchg
push
mov
mov
ljmp
inc
out
adc
mov
dec
pop
cld
jecxz
mov
mov
loope
fnstenv
adc
in
mov
fwait
add
movsl
xchg
es
dec
loopne
adc
fucomip
jb
mov
jae
lahf
ret
sahf
and
dec
fcomps
cmp
cli
repz
pop
jmp
cmp
xchg
into
imul
mov
add
jae
cld
sbb
jp
dec
xchg
js
sub
jl
imul
cmpsb
in
std
dec
lods
mov
ficomps
add
dec
xchg
jmp
dec
mov
and
mov
xor
loopne
loop
jae
sbb
dec
dec
xor
insb
and
movsl
mov
fs
mov
loop
pusha
mov
insl
mov
or
adc
xor
push
hlt
movl
repnz
add
out
lret
jae
hlt
fidivrs
stc
pop
cld
je
and
and
xor
loopne
insl
aam
inc
push
es
pop
or
and
xchg
xor
pop
adc
rcll
cmp
repnz
push
xor
jbe
les
ds
push
xchg
stos
dec
clc
nop
shll
daa
mov
xchg
and
test
idivl
loope
xchg
xor
push
divb
cwtl
xlat
mov
xor
xchg
lds
xor
cmpb
mov
outsb
and
adc
sub
test
or
pop
testl
push
sbb
sbb
fcomp
clc
cld
add
addr16
mov
add
test
stos
out
mov
jecxz
inc
loopne
jno
repz
mov
push
dec
or
xor
sbb
mov
stos
imul
inc
test
in
mov
out
and
shll
idivl
rcrl
in
cld
cmpsl
jmp
pop
jo
addr16
push
je
and
test
in
enter
test
subl
pop
mov
or
movsb
mov
outsb
and
stc
stos
iret
out
iret
aaa
test
out
or
mov
in
mov
cmp
push
dec
out
adc
mov
mov
mov
bound
xchg
out
into
insb
adc
mov
xor
adc
enter
push
or
push
addl
addb
inc
jl
sbb
cli
mov
stos
std
inc
aas
adc
loopne
or
cmp
xchg
js
lds
cmp
xchg
cltd
popf
sub
sub
daa
lods
lret
pop
mov
mov
inc
dec
push
push
cmp
add
ret
out
cmp
inc
arpl
shrl
test
cmp
push
std
shrl
xchg
adc
push
mov
cmp
and
cli
lods
jns
fisubs
ret
mov
fnstcw
adc
les
fucomp
add
ret
and
arpl
push
imul
out
pop
push
or
jl
push
xchg
stc
inc
mov
fsubrs
jmp
inc
sbb
lahf
les
movsl
jp
add
pop
xor
mov
int
scas
jnp
shrl
imul
cmpsl
jae
scas
push
cltd
dec
shlb
xor
push
mov
cmp
not
sbb
lcall
mov
mov
mov
cmp
nop
sti
add
jae
mov
and
jmp
aad
imul
rcrl
outsl
jno
into
ret
jl
inc
adc
scas
fs
mov
flds
nop
inc
sbb
lret
hlt
pop
inc
push
lret
in
outsl
sub
inc
sti
cs
xor
out
int
std
or
jecxz
sub
and
jno
repz
mov
dec
jg
ds
mov
jge
popf
movb
xor
mov
test
jnp
scas
push
push
aas
xor
and
lock
jno
movsl
pop
mov
cmp
into
pop
mov
push
stos
lret
loopne
into
and
fimull
xorl
imul
shrb
enter
jp
jl
xor
std
mov
outsl
fisubl
and
mov
movsl
mov
sahf
mov
lea
shrl
cld
fwait
std
hlt
in
push
and
cwtl
push
iret
rep
pop
in
jle
xchg
jmp
jmp
sub
sahf
mov
xchg
fbld
mov
push
mov
add
sbb
aam
nop
nop
sbb
clc
ds
xchg
popa
adc
das
push
sbb
jle
mov
cmovae
cld
or
int
out
mov
adc
add
stos
movsl
test
mov
aas
out
les
cli
add
mov
repz
out
cmp
and
or
jns
xchg
js
negb
fnstcw
sub
pop
xor
jb
into
jo
xchg
lods
jmp
pop
shl
inc
mov
aam
out
push
jns
mov
mov
hlt
mov
pop
jp
cmpl
cmc
arpl
scas
jg
pcmpeqw
add
jp
fucom
sbb
repnz
mov
xchg
fsubrp
jae
xlat
sub
loop
mov
mov
addb
cmp
adc
sbb
iret
adc
fcoms
into
stc
adc
xlat
xor
inc
jl
mov
in
xchg
pop
sbb
das
aas
or
loope
aad
popf
push
fdivl
jnp
ss
add
xor
test
rcl
push
xor
add
ds
xor
push
and
lods
into
push
cmc
fcomi
mov
inc
cmp
jnp
mov
sbb
pop
daa
fwait
mov
cmp
clc
inc
fstps
in
push
pop
xor
fnstenv
adc
xor
jno
fsts
mov
ds
sub
pop
mov
adc
jp
inc
mov
push
mov
hlt
insb
mov
outsl
loop
aad
enter
or
inc
and
xor
jne
dec
dec
div
and
in
mov
xor
addb
fisttpll
rep
add
call
push
cmp
insb
dec
sub
data16
out
push
jns
shlb
or
mov
push
call
imul
cltd
imul
inc
mov
add
stos
push
rolb
lcall
sbb
xchg
add
mov
xchg
jg
jo
push
dec
stos
pop
inc
clc
jo
push
mov
mov
xchg
psubsw
cltd
add
sbb
sbb
mov
std
jo
dec
push
push
arpl
rcrl
addr16
jp
mov
jb
mulb
cmp
push
pop
jp
push
xchg
mov
pop
in
sbb
cwtl
pop
mov
loope
add
sbb
mov
scas
fdivp
into
jne
hlt
dec
popf
jae
bound
jb
add
mov
xor
fcompl
sub
bts
sahf
jne
sub
cmp
jmp
orl
inc
or
push
pusha
mov
xchg
in
sbb
jbe
add
das
imul
mov
mov
push
mov
push
ds
lahf
adc
dec
push
sub
mov
testb
xor
mov
into
test
mov
std
cmp
orb
popf
ljmp
jecxz
add
pop
sub
test
jg
push
cs
into
in
ret
fnstcw
mov
push
sbb
rcrl
mov
push
fcmovu
in
lret
mov
ficoml
mov
loopne
popa
xchg
or
rcrb
cmp
cmpsb
cmp
lret
adc
pop
mov
jns
mov
int3
in
insl
sub
add
pop
adc
mov
adc
dec
adc
aad
sbb
test
imul
cld
push
mov
mov
jne
shr
push
loopne
ret
test
jg
sub
movsl
xchg
repz
data16
mov
js
mov
mov
scas
sbb
pop
sbb
jb
lcall
mov
testl
pop
xor
inc
notb
out
jp
xchg
cld
mov
lea
shlb
stos
aas
push
cs
les
daa
xor
dec
clc
xor
push
sub
mov
inc
cmp
fwait
pusha
cmpsb
mov
pop
mov
mov
xchg
add
out
fmuls
jp
xor
mov
jl
iret
pop
jo
or
mov
or
push
mov
pop
lods
fisubrl
sbb
inc
jg
inc
das
call
mov
leave
add
inc
mov
xchg
outsb
int
adc
clc
int
orl
lea
jae
scas
mov
mov
nop
jle
mov
and
in
inc
sub
sbbl
cld
les
int3
mov
or
mov
jmp
imul
mov
cltd
shrl
nop
sbb
sub
xor
mov
inc
pushf
add
adc
loopne
adc
sbb
push
add
sbbb
push
jg
ds
out
lret
xchg
aam
mov
cs
setnp
bound
xlat
and
sarl
jns
mov
or
or
das
inc
loopne
clc
xchg
jno
jg
adcb
mov
sti
inc
daa
data16
mov
jnp
outsl
flds
push
loopne
or
scas
cmp
xor
out
adc
mov
dec
or
pop
inc
popa
imul
xor
xor
jns
dec
mov
and
mov
or
js
inc
adc
mul
leave
nop
leave
sub
test
push
jge
mov
stc
push
inc
icebp
add
pmullw
push
into
mov
movsb
outsb
sti
mov
arpl
aas
daa
pop
cmp
push
or
jnp
inc
movsl
push
xor
mov
xchg
mov
lea
sahf
out
fnsave
jle
dec
mov
jecxz
dec
add
lods
ffreep
bound
int3
mov
pop
stos
jo
push
addl
movhps
dec
cs
int
ds
cmp
add
mov
mov
add
add
add
outsl
call
and
cwtl
dec
cmpsl
or
stos
add
movsl
gs
frstor
call
adc
fwait
scas
push
lcall
xor
dec
xchg
and
adcl
sub
int3
cmp
mov
adc
lret
aaa
push
mov
xor
loope
xchg
push
jo
flds
or
add
adc
cmp
sub
or
jb
out
jne
jo
push
push
nop
arpl
idivl
and
inc
adc
dec
in
inc
out
inc
pop
pushf
jmp
jmp
scas
or
jle
add
mov
gs
mov
jbe
cli
ret
cmp
testb
outsb
ljmp
sbb
push
mull
dec
lcall
orb
and
aam
jl
mov
insl
mov
into
dec
adc
or
mov
jae
movsb
loop
pop
mov
testb
jo
aam
popf
fdivrl
adc
mov
ret
cmp
add
adc
hlt
insl
dec
sub
pushl
and
cld
pop
dec
inc
jb
pop
cmp
ret
inc
pop
push
rcrl
or
cmc
push
mov
xor
sbb
add
popa
stos
ja
mov
repz
cs
mov
aaa
shlb
shll
imul
jle
shl
rorb
ret
sub
cltd
mov
in
mov
add
test
lret
push
fnsave
cmpsb
pop
test
cltd
push
daa
mov
and
lret
fs
cmpl
ret
std
repz
jecxz
adc
and
dec
inc
jge
insl
arpl
mov
mov
std
repz
jecxz
adc
and
dec
inc
jge
insl
arpl
lret
lods
mov
std
rep
jecxz
lret
or
and
dec
inc
jge
insl
arpl
mov
mov
std
jae
jecxz
in
or
push
sub
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
repnz
loope
sar
shr
mov
scas
test
pop
addl
and
adc
adc
xchg
fsub
enter
call
xchg
mov
popa
dec
xor
push
adc
add
dec
rcll
inc
loopne
icebp
scas
add
mov
mov
and
pop
pop
push
inc
outsb
pop
sub
mov
push
dec
es
imul
jl
je,pt
and
test
adc
adc
jbe
xor
xchg
adc
push
adc
gs
movsb
dec
movsb
cmpsl
xlat
mov
loopne
cltd
int3
mov
daa
frstor
inc
les
and
fs
cmp
enter
fmuls
mov
push
jo
popa
mov
cwtl
mov
notl
mov
inc
push
loopne
sub
pop
pop
or
sub
or
push
cmp
and
push
xlat
jl
sar
aas
and
dec
imul
gs
fsubrs
js
dec
jb
adc
add
stos
fdivs
repnz
cwtl
mov
sti
push
daa
popa
jno
jns
sub
and
add
xchg
enter
jmp
in
add
xor
and
inc
jne
pop
js
fs
mov
mov
mov
push
and
sub
cmp
dec
push
addr16
inc
dec
popf
cltd
lea
loop
mov
test
pop
popa
dec
push
js
push
adc
add
icebp
fsub
enter
call
xchg
mov
popa
dec
push
js
push
adc
add
icebp
fadds
adc
add
jle
dec
in
incl
inc
sbb
xchg
and
repnz
lods
lds
enter
and
inc
ss
inc
mov
int
sub
sub
jecxz
fadd
push
in
not
dec
shlb
cwtl
pop
pop
pop
push
test
xor
daa
out
popf
lea
or
cmc
loop
cltd
mov
loopne
xchg
js
fstpl
rcll
mov
js
fsub
lods
cwtl
xchg
cmpsl
mov
outsb
aas
inc
mov
xchg
arpl
fnstsw
or
jb
xor
add
fisubs
lds
jle
sub
aam
lret
xchg
addl
pop
push
push
mov
xor
shll
fidivrs
test
mov
add
mov
stc
repz
xchg
mov
leave
mov
mov
mov
mov
stc
jns
or
ret
sub
ret
xorl
add
test
add
jns
push
movsb
int
xor
mov
ja
es
inc
dec
lret
outsb
fimuls
and
cmpsl
sbb
or
iret
mov
pop
xor
das
sub
mov
cmp
adc
xchg
jns
cmp
mov
adc
push
addl
push
cmp
jnp
and
mov
jae
jle
xlat
insl
sbb
lsl
push
cmp
cmp
das
mov
lea
push
lret
cmpsb
mov
xor
js
pop
ss
imul
insb
aam
xor
xor
lret
stos
xor
xchg
sahf
cld
cmp
cmp
add
ljmp
adc
and
notl
and
or
push
lret
sbbb
addr16
xchg
adc
std
or
jmp
or
push
mov
rcrl
push
or
sub
stos
js
push
push
add
into
jbe
fxch
cli
push
filds
orl
push
xchg
sbb
push
test
sahf
cmpsb
mov
xor
dec
push
push
pop
dec
test
sbb
sub
xchg
sub
sbbb
sub
ret
pop
xchg
popa
loop
adc
ret
mov
cwtl
js
push
sub
or
lret
test
loopne
iretw
addb
je
rcll
sub
fidivrs
in
adc
xor
mov
cmp
xchg
js
mov
push
shll
mov
les
clc
shrl
cld
jo
mov
push
inc
sub
push
add
mov
push
mov
cli
popfw
repnz
adc
jmp
xor
call
scas
xchg
in
adc
mov
mov
sbb
sbb
cli
std
movsl
lock
xchg
add
fldenv
stos
repnz
xchg
and
cmp
xor
or
out
lods
fcompl
push
roll
sub
popa
jns
jl
shl
lea
mov
in
adc
sahf
and
push
adc
lret
and
movsl
mov
out
arpl
filds
jmp
mov
scas
imul
cmpsl
or
std
inc
adc
pop
push
sbb
xor
cmpsl
mov
mov
jns
dec
adc
sub
cmp
xchg
mov
mov
cmpsl
jge
out
sub
sub
add
icebp
xor
push
inc
std
jns
inc
pop
scas
dec
push
rorl
addl
popa
adc
sti
mov
xor
xchg
push
xchg
jle
pop
sbb
das
int
icebp
pop
movsl
jle
pop
bound
xchg
fistl
mov
mov
enter
in
jmp
in
adc
pop
popa
fisubl
es
out
into
int
rclb
pop
movsl
lret
stos
lds
mov
mov
push
dec
adc
adc
push
lcall
adc
sub
adc
lcall
ret
out
in
loope
mov
push
movl
sbb
push
in
and
cmc
xor
pop
push
push
push
pop
mov
jnp
lret
inc
in
or
push
aas
shrb
fidivrs
outsl
mov
pop
xchg
icebp
push
push
adc
dec
repz
mov
movsl
ljmp
mov
sarb
icebp
xor
addr16
xchg
addr16
jle
aas
fldt
loop
aad
mov
into
aas
sub
add
xchg
fcompl
in
in
enter
das
push
xchg
out
push
pop
aad
lea
pop
jnp
xlat
push
pop
xchg
int3
int
inc
dec
sub
add
cld
mov
pop
in
test
shlb
push
mov
inc
mov
jge
push
lret
dec
pop
lahf
adc
jmp
sti
lds
cmpsl
sub
mov
hlt
mov
cmp
das
xchg
sahf
cli
dec
or
or
sbb
lahf
and
loopne
enter
adc
loope
lret
fcomps
xchg
mov
xchg
rcll
pusha
inc
rcll
push
adc
pop
aaa
lds
and
adc
adc
xlat
out
push
aas
sub
lock
cmpsl
xlat
stos
fstps
out
popf
mov
add
xor
pop
xor
pusha
out
mov
iret
and
push
dec
into
js
sahf
pop
mov
rorl
xchg
push
aas
popf
fchs
inc
jecxz
fmuls
cld
xor
fidivrs
out
adc
cli
sbb
imul
fistpll
ret
pop
shrd
pushf
sbb
sub
lods
inc
add
inc
jae
or
inc
mov
arpl
addl
inc
push
ss
lds
push
fildl
shrb
adc
mov
data16
cmpsb
dec
lods
rolb
pusha
bound
or
cmp
jb
iret
jmp
inc
cmp
pop
pop
mov
or
or
into
ja
dec
push
lret
jp
lds
and
je
xchg
lcall
cld
xchg
nop
mov
ds
rclb
sbb
aaa
andl
mov
popf
lock
pop
shll
lret
mov
sub
loope
sti
in
pop
mov
mov
mov
sbb
subb
push
add
mov
sbb
pop
dec
pop
cwtl
cmpsl
add
sti
jg
add
cmp
dec
stc
inc
punpckhbw
and
fnstsw
push
push
in
mov
pop
jge
mov
xor
dec
insl
pusha
addl
pop
int3
mov
xchg
mov
movsl
inc
cld
fsubrl
xor
push
dec
sbb
fcoms
fadds
loopne
xchg
xchg
and
add
mov
inc
push
mov
ljmp
arpl
mov
xorb
aas
repz
sbb
aas
shl
and
shl
out
sbb
jge
mov
mov
cmp
push
lahf
cli
sub
xchg
cmpsl
jge
inc
and
in
stos
and
sbb
mov
sub
movl
mov
cmpsb
and
in
adc
add
add
inc
mov
dec
inc
pop
add
sub
iret
jbe
mov
pop
jmp
nop
jge
mov
push
enter
je
cmp
push
or
inc
stc
inc
mov
mov
pop
movsb
test
push
mov
jmp
pop
aaa
ds
xor
cmpsl
cmp
mov
sbb
cmp
mov
mov
filds
stos
inc
call
jl
shll
pop
jge
in
nop
pop
mov
bound
ss
inc
xchg
test
dec
add
xchg
jbe
push
loopne,pt
leave
mov
mulb
cmp
and
jne
leave
fs
pop
sbb
ja
cmp
xor
and
js
jmp
adcl
clc
adcl
test
aam
push
lea
imul
fwait
stc
and
in
push
mov
jmp
aam
addb
cmp
into
cmovge
fstp
cmp
inc
bound
mov
in
pop
push
dec
fcoms
jb
push
rclb
psrad
out
out
addr16
outsl
add
into
jecxz
fdivl
imul
sbb
mov
mov
es
pop
mov
ds
xor
xchg
enter
stos
sbbl
daa
dec
mov
fists
cmp
mov
adc
loopne
push
stos
cmp
call
sbb
or
and
in
xor
xchg
adc
sub
in
mov
or
push
adc
cmp
jg
fidivs
sbb
pop
int
std
pop
cs
popf
shll
mov
xchg
inc
daa
xchg
push
les
xchg
pop
jl
adc
stc
enter
mov
jae
fisubs
jnp
pop
pop
lds
pop
xor
xor
jno
dec
lea
xchg
jns
jne
mov
xchg
aam
out
data16
arpl
rclb
pop
shlb
inc
inc
pop
jmp
add
aad
mov
out
dec
mov
inc
scas
push
dec
push
mov
ss
jecxz
jge
mov
cmp
lock
pop
pop
push
adc
jno
and
push
loope
push
ret
dec
clc
dec
pop
je
mov
test
pop
mov
sub
xchg
inc
dec
imull
ret
cmp
jb
iret
fistl
mov
shl
mov
lahf
mov
loopne
cmpsb
popf
aad
adc
in
in
xor
sbb
cmp
push
pop
lcall
lods
dec
pop
pop
ret
and
loopne
stos
mov
or
or
mov
push
insl
xchg
cmpsb
lret
andl
push
stc
xor
cmp
mov
cs
lods
lds
insl
or
cmp
insl
mov
add
pop
sti
or
mov
repnz
push
jl
das
push
loope
pop
out
sbb
sti
pop
add
in
mov
mov
sub
jge
int
enter
aad
in
outsb
cmp
mov
adc
sbb
xchg
movsl
mov
in
lea
rcrb
push
adc
jns
addr16
scas
decl
in
and
and
xchg
xchg
jb
or
xlat
js
lds
cwtl
push
push
cmc
popa
jae
popf
int
pop
and
mov
jmp
push
or
test
adc
pushf
lahf
xchg
xor
add
out
jns
mov
std
sub
cli
aad
add
push
pusha
add
jecxz
ljmp
adc
scas
adc
add
aaa
out
xor
outsb
cli
jl
add
push
outsl
push
movsb
adc
jge
cld
movsl
jo
xor
in
popa
cwtl
mov
mov
mov
push
push
jl
jb
inc
pop
stos
arpl
ds
add
add
dec
add
xchg
or
cmp
cmp
aaa
dec
pop
jle
pop
mov
and
jns
test
fimull
xchg
dec
cmpsl
push
mov
mov
ret
xchg
iret
xchg
cmp
ja
pop
add
std
lea
dec
insl
cmpsl
das
or
lret
lds
arpl
mov
fildll
xchg
xchg
mov
xor
xor
shlb
xor
mov
adc
pop
std
and
popa
jae
in
jno
and
icebp
outsb
das
dec
clc
aaa
cmpl
xor
mov
jne
jmp
jnp
lods
pop
jp
das
fimuls
jg
fs
inc
sub
mov
xchg
daa
mov
sbb
push
out
sbb
iret
stc
xorb
stos
push
aad
shrb
repnz
imul
push
insl
mov
sti
imul
test
loope
arpl
out
out
outsb
sub
mov
fsubrl
cmpsb
push
xchg
sub
pop
push
lret
lea
push
or
pop
decl
adc
aaa
adc
rcrl
sub
hlt
ret
sub
mov
xor
shrl
enter
xor
cmp
in
clc
and
imul
push
std
lcall
jecxz
inc
and
insl
cld
jp
outsb
mov
gs
ficomps
jno
xchg
sub
mov
daa
xor
cs
outsb
dec
out
scas
jno
loopne
hlt
sbb
and
pop
add
int
cmpsl
push
mov
repnz
mov
or
mov
push
insb
push
movl
fwait
lods
push
mov
repz
jl
pop
movsb
sbb
out
adc
mov
bound
les
mov
leave
lret
lods
xchg
jecxz
sbb
xor
sub
fstpt
shll
jne
sub
fwait
xor
mov
xchg
aad
cltd
jle
xlat
cli
daa
adc
std
sbb
insb
xor
insl
cmp
or
jp
dec
or
aaa
and
cmp
cs
notb
test
push
dec
sbbl
test
or
iret
aam
push
popa
dec
subl
add
lahf
int
dec
and
aaa
jo
aas
test
mov
std
ja
dec
inc
adc
mov
das
into
int3
mov
lret
addb
pop
pushf
insl
psrlq
das
les
or
ss
mov
es
dec
in
inc
jl
repnz
cld
jb
mov
pop
into
jno
xor
xor
fsubrp
xor
inc
mov
xor
addr16
cmpsl
call
lock
jle
dec
sbb
mov
jl
aas
xchg
mov
daa
and
imul
mov
icebp
js
pop
daa
pushf
popa
adc
push
push
pop
inc
scas
add
mov
xchg
adc
jecxz
jbe
pop
insl
imul
push
lds
movsl
lret
dec
mov
push
xchg
es
orb
ss
xor
jp
or
xchg
xchg
cs
stc
std
inc
pushf
jnp
fs
dec
jne
sbb
test
aas
xor
mov
into
subb
pop
dec
stos
cmp
nop
sub
nop
add
xchg
jmp
sub
pop
mov
xchg
and
addb
push
pop
and
test
cwtl
popa
iret
shll
mov
int
jl
or
lods
or
nop
dec
mov
jb
pop
push
pop
in
fbstp
movsl
push
xlat
jns
ds
or
xchg
movsl
cwtl
xchg
inc
push
jo
stos
lcall
cmpsl
fs
add
jb
jg
sarb
xchg
cltd
add
adc
push
mov
jns
xchg
push
subb
or
dec
aas
int3
dec
aam
and
pop
out
cmpb
push
pushf
fldl
aaa
fs
cwtd
imul
pushf
imull
inc
mov
cwtl
incb
out
nop
outsl
add
stc
stos
call
int
jne
cmpsl
in
inc
cmp
scas
pushf
inc
jmp
cmpsl
repnz
cmp
popf
jae
ficoms
out
mov
mov
ret
xchg
ret
outsb
xor
push
iret
mov
test
and
popf
sbb
jns
mov
jp
mov
sbb
aaa
xor
rorb
aas
adc
and
xor
dec
stc
leave
sub
into
lahf
pop
ljmp
jg
push
pop
xor
jg
daa
fdivs
ja
mov
arpl
cmpb
xor
mov
and
cmp
insl
ds
das
adc
mov
fwait
xchg
les
nop
mov
stc
adc
dec
xchg
loope
dec
jbe
fadd
iret
pushl
push
jns
mov
arpl
mov
sub
pop
jge
push
cmpsb
ljmp
cltd
sbb
lock
fildll
fcoms
insb
imul
test
adc
pop
pop
mov
jmp
cmc
pusha
push
das
ficomps
xchg
ret
push
lahf
arpl
cmpsb
shrb
sbbb
pop
mov
add
lea
push
xchg
cmpl
dec
shrb
push
cmp
cmp
int
int3
movsb
xchg
sbb
xchg
repz
mov
sbb
lcall
pop
cmpsb
decb
bound
xlat
pop
jns
lret
inc
pop
out
bound
pop
lods
gs
lea
fmuls
insl
pop
xor
mov
lahf
push
aas
dec
mov
cmpsl
dec
rolb
xor
outsl
mov
sub
int3
hlt
fisttpll
int
mov
clc
cmpb
insl
lods
cmc
notb
outsb
jle
dec
inc
push
ja
ja
fst
mov
loope
sub
mov
stc
push
ljmp
imul
pusha
mov
hlt
mov
dec
dec
pop
pop
cli
jmp
in
imul
movsb
mov
sahf
cmpsb
jmp
mov
add
outsb
xor
adc
into
dec
fwait
mov
mov
les
and
xchg
sarl
xor
jecxz
outsl
loopne
xchg
pop
adc
jae
js
stos
pop
sbb
cmpsb
lret
cmp
notrack
jmp
rcll
and
ljmp
sar
xchg
lret
and
out
inc
data16
push
jl
sbbl
insb
add
lea
nop
ss
shll
add
loop
pop
inc
in
push
mov
push
sub
pop
movsb
popf
outsb
dec
cmp
mov
faddl
pushf
xchg
mov
mov
xchg
and
mov
sbb
pop
lea
aas
dec
aad
mov
sub
pop
stos
or
or
loope
inc
xchg
fmull
inc
xor
jne
sbb
xchg
or
rol
inc
in
fwait
inc
or
push
jecxz
push
sti
and
lret
dec
mov
dec
xor
adc
mov
xor
add
jp
mov
enter
je
stos
cmp
test
shlb
jp
fsubl
adc
out
pop
inc
mov
je
lods
jne
jg
mov
jge
ret
cli
fisttpll
dec
js
or
push
es
arpl
scas
addr16
xor
push
sti
mov
adc
les
test
into
cmp
outsb
adc
in
xchg
cmpsb
neg
sbb
daa
adc
into
dec
mov
mov
sbb
or
or
lret
push
lds
out
ffreep
dec
jne
jecxz
jns
sub
push
sub
pop
cmp
xlat
xor
or
jg
addl
or
xchg
mov
xchg
dec
shlb
push
stos
mov
mov
ret
lods
dec
imul
adc
push
sarb
out
dec
dec
shl
test
mov
xchg
cmp
loope
fiaddl
mov
mov
xchg
or
sub
imul
mov
inc
cmp
shrb
call
dec
jmp
adc
adcl
xchg
outsb
sub
mov
jle
cmp
push
pop
sub
mov
and
xor
inc
jp
lds
sbb
mov
xor
cmp
cwtl
cmp
std
jne
movsl
les
pop
adc
scas
xchg
popf
aam
pop
je
int
mov
loope
cmp
cmpsb
push
dec
adc
push
lods
nop
sbb
shlb
and
cmpsb
es
ret
xor
dec
add
in
and
movsl
lret
out
mov
loop
push
mov
fstpt
ret
jbe
mov
enter
lock
mov
mov
mov
aad
mov
or
pop
fs
imul
shr
out
ds
jne
fucomip
mov
dec
mov
xor
sbb
movsl
mov
negl
xchg
mov
cld
adc
test
out
pushf
and
jg
jne
xor
movb
shl
xor
dec
testl
iret
sbb
mov
push
fsts
mov
mov
daa
adc
pop
mov
push
popf
or
cmpsl
repz
and
stos
jge
pop
mov
push
aad
lods
sti
rclb
popf
add
es
ja
test
inc
pop
sti
dec
xor
push
daa
fidivl
iret
lahf
push
leave
add
or
cmp
stos
xor
cmp
movsb
push
ja
xchg
pop
hlt
jge
inc
fxsave
cmp
adc
and
out
and
jecxz
into
imul
mov
pop
xor
push
out
enter
enter
shl
sbb
dec
cwtl
mov
fsqrt
cmc
mov
mov
inc
into
cmp
push
rol
inc
repnz
xor
jo
jl
jbe
xor
cmpsb
cmp
adc
pop
pop
lcall
hlt
ds
int3
out
mov
movsb
push
ret
push
mov
fists
jmp
push
cwtl
test
fdivr
mov
sub
mov
lods
mov
xchg
pop
jge
adc
rcrb
xchg
aas
andnps
sub
sbb
pop
daa
lret
jno
pushf
sub
pusha
jl
rcr
addr16
outsb
outsl
gs
insl
dec
mov
mov
dec
movsb
sbb
pop
shr
cwtl
mov
test
pop
popa
dec
push
js
push
adc
add
icebp
fsub
enter
call
xchg
mov
popa
dec
push
js
push
adc
add
icebp
fcom
enter
call
xchg
mov
popa
dec
mov
sbb
or
cmp
sub
fdivrs
call
xchg
mov
sahf
loop
js
pop
inc
nop
test
xlat
loopne
pusha
gs
push
inc
inc
mov
dec
jb
fs
rcl
rol
mov
and
jne
gs
push
inc
inc
xor
add
mov
rol
mov
movsl
nop
xlat
addb
push
inc
inc
xor
add
mov
movsl
leave
lret
out
test
jne
cmp
adc
repnz
jmp
xor
jno
jecxz
filds
xor
popf
or
and
in
xor
mov
lcall
sbb
rcrb
lds
cmc
sub
and
xor
stos
hlt
fwait
push
jne
lock
cmp
mov
adc
or
pusha
pusha
out
cltd
lods
inc
xor
and
loopne
es
sub
xchg
push
fcomip
pop
subb
lea
push
mov
adc
add
subb
add
adc
jecxz
lcall
call
in
xorb
movsl
lds
les
addl
xor
add
rcl
rol
mov
movsl
nop
xchg
sub
sbb
jae
inc
and
cwtl
nop
push
xchg
mov
aam
std
xchg
hlt
les
jne
addr16
or
push
jge
inc
adc
add
test
movsl
stos
sti
ror
shl
aad
cmp
xor
and
lock
loopne
rcl
rol
mov
movsl
nop
xchg
addb
push
inc
inc
xor
add
rcl
rol
mov
movsl
nop
xchg
addb
out
add
sub
out
mov
add
jecxz
push
cmpsb
mov
imul
lcall
loopne
test
es
dec
fs
insl
adc
fidivs
sub
ss
dec
packsswb
mov
aaa
outsl
lret
and
mov
leave
fcompl
fsubl
stc
sarl
sub
fisttps
hlt
xchg
aas
iret
in
je
repnz
mov
jle
push
mov
cmp
stos
xchg
pop
rol
push
add
loop
cli
mov
inc
inc
roll
sti
cmpsl
das
push
pop
push
in
sub
mov
xchg
mov
mov
cmpsb
or
cmc
inc
cmpsl
fwait
sarb
xchg
sbb
or
mov
mov
dec
insb
pop
inc
out
int
stc
ficoml
icebp
jge
jg
incb
mov
mov
enter
stc
mov
cltd
xor
pop
mov
jns
inc
mov
fstp
mov
es
sarl
xchg
data16
sub
inc
outsl
in
cld
or
push
mov
das
sarb
dec
rorb
jg
mov
jb
aas
mov
mov
ds
fidivrl
inc
movsb
testl
setns
sub
ds
lds
pop
xchg
add
out
pop
movsl
out
cmp
push
sbb
adc
or
dec
jg
in
outsl
jb
adc
rolb
mov
inc
xorb
cltd
lods
pop
outsb
mov
pop
jnp
imul
cli
push
mov
add
xor
mov
loope
repnz
and
nop
orl
popa
xchg
popa
jnp
int3
repz
js
pop
jge
cs
xchg
jno
dec
sub
add
cli
or
push
stc
jp
adc
sbb
in
and
movsl
insb
jg
push
add
outsl
mov
daa
clc
les
mov
fisubs
into
outsl
mov
cmp
mov
cli
in
andl
out
gs
jo
adc
out
sar
mov
push
cmp
push
cmp
loopne
das
jno
sti
mov
fcmovnb
xor
cmp
xchg
fcmovnu
adc
in
dec
outsl
pop
aad
inc
xchg
sub
mov
adc
push
ja
sub
add
lea
addr16
out
in
movsl
dec
dec
pavgb
and
sbb
es
dec
push
inc
les
pop
in
aam
cmp
sub
mov
sub
je
xlat
insb
lods
sbb
data16
mov
mov
daa
arpl
shll
pop
xchg
stc
adc
and
push
mov
fstpl
out
jno
imul
lds
rcrb
push
lahf
jl
js
fcomps
in
dec
mov
mov
fisttps
mov
cmp
in
inc
pusha
inc
clc
mov
xor
mov
push
nop
loopne
inc
add
addr16
popf
or
pop
dec
xlat
and
mov
or
push
cltd
pusha
pop
push
inc
xor
les
movsb
xrelease
sub
shrb
repz
sbb
push
lea
int3
xor
repnz
in
xchg
cmpsl
and
push
sarb
inc
dec
lods
test
fs
outsl
mov
gs
lret
aas
push
repnz
or
add
jne
mov
js
and
cmp
adc
mov
daa
or
test
roll
cmp
xorb
xor
jae
xor
dec
jo
jg
sub
movsl
fst
in
add
rcll
pop
xor
mov
ss
pop
adc
lods
pop
xorb
dec
aam
add
fdivrl
shl
adc
inc
adc
cli
sbb
dec
xor
bound
xchg
pop
lods
xor
mov
xchg
xchg
stc
out
shl
pop
xor
or
jo
sub
ss
and
inc
pop
fcoms
imul
mov
into
mov
sti
popa
or
popa
or
test
push
mov
jge
add
subl
or
sbb
scas
lcall
cmp
jmp
push
in
jl
xchg
sub
ja
sub
add
hlt
test
dec
cmpsl
or
movsl
cmp
movsl
pushf
imul
mov
movsl
jp
and
test
push
aad
sbb
sbb
adc
enter
rclb
in
inc
repnz
mov
mov
pusha
aas
mov
mov
adc
orb
push
test
fisubrl
dec
cld
lds
in
daa
std
push
stos
test
into
mov
nop
or
imul
das
negl
cli
xabort
push
xor
mov
cmp
scas
dec
out
sbb
fs
scas
pop
jmp
cmpsb
movsl
inc
add
inc
popf
fisttpl
lds
mov
rcll
cmp
lret
xchg
das
arpl
and
cs
stc
adc
rcl
and
mov
fcoms
mov
es
cmp
cmpsb
es
test
xor
dec
in
cmp
leave
sub
call
pop
movsb
ds
mov
out
cmp
popf
or
aaa
clc
daa
sbb
inc
inc
and
cmp
ret
gs
and
cmpb
mov
adc
mov
scas
xor
adc
xor
dec
adc
adc
xchg
outsb
lahf
jecxz
stc
fistpll
adc
mov
inc
sub
test
ja
ja
xor
iret
xlat
js
and
mov
pop
mov
ret
dec
xor
shlb
loopne
add
push
jmp
pop
rolb
aaa
std
insb
flds
or
aaa
cmovnp
aam
inc
mov
and
xor
mov
push
sub
imul
inc
inc
lgs
test
mov
sub
arpl
sbb
mov
mov
xchg
mov
call
dec
subb
fwait
test
outsl
arpl
imul
dec
adc
movb
into
cmp
loop
push
dec
shlb
adc
jle
dec
test
dec
enter
cmpsb
imul
imul
jae
cmp
dec
ret
xchg
mov
test
aas
xchg
dec
lods
imul
jns
dec
push
in
loopne
cwtl
adc
outsb
push
data16
push
mov
cltd
jecxz
add
std
xchg
dec
shl
inc
sbb
or
ja
fcoms
dec
stc
jae
xchg
mov
mov
xchg
stos
repnz
insl
scas
inc
pop
adc
out
sub
in
fwait
into
daa
nop
stos
dec
adc
or
cmpsb
jge
call
push
insb
cmp
xchg
fsubrl
cmp
data16
sub
leave
or
xor
add
xchg
pop
xor
inc
cmp
sbb
rcrl
popf
stc
mov
stos
mov
adc
dec
mov
xchg
xor
push
jg
lods
stos
pop
dec
pop
stos
and
and
mov
int
sub
mov
in
std
fistpll
pop
and
and
sub
inc
or
fsubrl
and
lcall
rcll
stos
fisttpl
lcall
fadds
ljmp
cld
enter
adc
pop
cmpsb
aam
inc
mov
test
adc
popf
pop
in
sarb
adc
and
popa
jmp
sbb
jno
lcall
decl
nop
loop
sbb
xchg
and
and
or
loopne
out
stos
xchg
aam
sbbb
push
dec
jge
adc
xchg
ror
push
pushf
addr16
dec
sahf
adc
sub
test
and
mov
or
sbb
ljmp
mov
inc
data16
dec
and
mov
sub
dec
sbb
add
js
fs
and
add
icebp
mov
fnsave
mov
add
imul
into
icebp
mov
daa
jle
and
or
mov
icebp
xlat
js
insl
inc
mov
lahf
push
fld
push
xchg
push
int3
or
shrb
arpl
mov
mov
sub
cltd
mov
into
loope
dec
hlt
push
pop
or
imul
icebp
icebp
fcomps
and
fs
fsubrl
pop
in
cmc
int
adc
jge
test
cmp
test
add
inc
rorl
push
dec
loope
sbb
hlt
jmp
jne
pop
sub
mov
push
mov
fisttps
dec
mov
imul
orb
addb
daa
iret
xchg
out
inc
or
xchg
pop
add
jo
lret
xchg
pushf
or
dec
push
stos
push
sbb
inc
pushf
movsb
xlat
sbb
and
mov
add
neg
leave
or
push
addr16
xchg
lcall
push
jg
jle
mov
xchg
sti
pop
rolb
xchg
stc
cwtl
jmp
sahf
mov
xchg
lahf
inc
pop
int
outsl
in
sub
cmp
sahf
mov
ljmp
pop
mov
and
cld
add
dec
xchg
mov
cs
lcall
mov
push
or
xchg
add
xchg
jle
pop
test
cmp
jmp
or
sub
out
pop
cld
add
inc
ds
rorl
dec
hlt
adc
out
jecxz
insb
gs
push
pop
push
negl
scas
mov
jp
jb
notb
fucompp
inc
add
jle
test
jmp
xchg
mov
jb
lcall
repz
xchg
fs
aaa
sub
imul
or
fdivrs
dec
jecxz
mov
addr16
xchg
or
cmpsl
in
or
sbb
dec
addr16
mov
mov
mov
push
add
dec
out
jnp
mov
xor
pop
mov
sbb
daa
push
push
ret
sbbl
fdivs
mov
push
lods
push
sub
es
mov
push
scas
pop
mov
and
idivl
dec
xchg
add
adc
aaa
popa
je
jg
std
jae
sbb
xor
mov
pop
test
in
stc
int
ficoms
xchg
mov
ror
call
and
jmp
insl
or
mov
xchg
jp
into
negb
mov
pop
xchg
and
cmpsb
stos
cmp
sbb
xchg
js
jmp
aad
stos
aad
test
fistpll
out
sahf
cwtl
jnp
dec
cli
mov
int
sysret
popf
pop
je
mov
leave
xchg
cmp
push
cmp
imul
add
adc
pushf
fs
stc
test
mov
les
xchg
dec
dec
popw
sbb
sbb
and
fcoml
mov
sbb
fidivs
repnz
rcrl
mov
mov
dec
rcr
hlt
sbb
int
scas
xor
ret
inc
lahf
fadd
std
call
les
rolb
mov
cs
cmp
or
rcll
mov
pop
lret
andl
or
out
inc
hlt
jmp
and
std
popf
sarl
fidivrs
xor
jns
out
inc
sub
mov
or
lcall
jecxz
mov
sub
stos
jb
mov
pop
pop
pop
sub
cmp
fsub
cmp
sub
inc
in
clc
adc
sbb
mov
mov
addb
and
in
xchg
dec
adc
in
xchg
arpl
in
arpl
popf
adc
cld
cmp
arpl
adc
sub
and
testb
push
xor
cmp
jnp
test
std
call
mov
fstpl
movsl
jo
dec
xchg
push
mov
jp
inc
xor
fsub
or
or
aaa
fstpl
sub
cmp
lock
mov
or
stc
inc
or
pusha
aaa
lcall
std
ja
push
jbe
adc
sub
xchg
rcl
fidivl
jbe
faddl
push
dec
gs
leave
dec
cmpsl
add
add
inc
push
test
pandn
add
inc
mov
xchg
les
sub
gs
cli
cmp
lock
insb
repnz
mov
mov
jl
cmpsb
cmp
or
cli
fstl
ss
jo
ss
addr16
cmpsb
orb
ja
sahf
es
jbe
inc
fnstenv
push
pop
out
subps
call
rclb
mov
mov
fsubp
inc
xchg
and
int3
ss
xor
enter
outsl
jnp
pop
push
sbb
cmp
pop
scas
fcoms
mov
xchg
xor
jmp
iret
jno
xchg
cltd
and
lds
rcrb
xchg
mov
adc
mov
xchg
add
jg
xor
sbb
pop
or
add
sub
dec
popa
sahf
mov
sub
cld
fists
cwtl
hlt
js
sbb
cmp
ret
fsubrp
push
and
mov
shlb
loope
mov
fdivs
popa
mov
fsubs
xorb
jae
out
stos
add
sahf
mov
jns
and
lret
fwait
inc
ss
inc
repnz
mov
lds
push
pop
cmp
daa
dec
pop
aas
dec
pop
mov
js
sub
mov
mov
ds
lret
cli
add
andl
pop
cmc
sbb
aam
mov
mov
xlat
pop
sahf
insb
mov
call
call
mov
ljmp
mov
mov
inc
aas
lret
lret
push
pop
std
aam
lret
shl
or
bound
sbb
xchg
sahf
inc
jo
and
rorl
pop
dec
adc
or
inc
inc
cmpsb
cmpsb
test
mov
sub
pop
outsl
pop
popf
pusha
movsl
icebp
xor
mov
mov
xchg
xchg
int
iret
dec
adc
bound
dec
out
push
xchg
adc
mov
mov
outsl
je
lret
sub
sbb
xor
outsl
popf
pusha
mov
movsb
mov
cli
adc
ret
clc
jmp
fsubs
lahf
dec
and
andl
fadd
loop
fildl
push
sbb
mov
int3
lcall
pop
push
xchg
push
or
pop
dec
inc
int
add
cmp
fisttpl
sahf
dec
and
cld
pop
daa
dec
sar
mov
das
or
jo
ds
mov
divps
enter
inc
sub
vsubpd
or
enter
pop
and
ja
cltd
cmp
mov
adc
or
fcmovnbe
mov
dec
adc
fstps
lea
adc
or
xlat
cmp
or
outsl
inc
cli
xchg
gs
fs
mov
clc
push
fwait
dec
xor
cmp
fs
clc
dec
pop
and
and
ds
pop
icebp
hlt
mov
push
xchg
cmp
xor
pusha
loope
mov
pop
subb
push
js
icebp
out
and
test
arpl
push
xchg
das
sbb
sbb
lods
xor
jb
dec
mov
gs
mov
arpl
mov
mov
jmp
and
xor
fsubrs
mov
pop
lock
cmp
shlb
push
push
jge
cmp
dec
dec
jmp
hlt
outsl
mov
jge
int
insl
pop
jb
xlat
dec
or
xchg
outsl
ret
mov
dec
ficoms
jmp
int3
adc
xor
movsb
roll
das
xor
out
or
jae
mov
and
mov
mov
sub
or
cltd
cltd
pop
shll
and
cmp
enter
pop
test
push
sbb
xor
pop
rcll
lret
into
xchg
or
leave
adc
xchg
jl
mov
lods
xlat
or
inc
lcall
pushf
test
xchg
aad
ss
inc
sbb
ss
fldenv
rcrl
test
or
in
and
cld
in
mov
les
popf
lock
test
pop
ljmp
stos
xchg
pop
xor
lds
subb
icebp
inc
fwait
sub
jle
ljmp
dec
inc
cmp
data16
cs
add
inc
cmp
negl
scas
xchg
cmp
dec
cmpps
clc
mov
lods
mov
cwtl
les
in
jmp
std
xor
lea
out
rclb
arpl
out
xchg
xchg
jl
mov
jecxz
mov
outsl
out
and
push
mov
out
dec
push
sti
rolb
adc
fidivs
insl
add
adc
into
jb
add
mov
js
mov
xchg
jmp
xchg
sbb
jae
jns
mov
lcall
sbb
fs
xchg
or
xor
pop
dec
ss
mov
aas
mov
scas
push
mov
adc
js
rclb
test
pushf
add
addr16
dec
mov
dec
imul
nop
insl
lods
jo
fdivrl
testb
icebp
js
out
cltd
shl
std
xor
arpl
pop
fwait
adc
jb
inc
add
or
or
dec
repz
inc
jb
fiaddl
imul
dec
pusha
cs
sub
mov
mov
mov
jne
je
cwtl
mov
insl
add
push
test
movsl
mov
lcall
pop
subl
jecxz
jecxz
jmp
ss
fildll
push
nop
add
lods
out
mov
out
dec
loopne
jl
mov
xorl
lret
inc
out
fs
cmp
or
movsl
mov
dec
pop
fsubrl
movl
dec
push
push
outsb
dec
outsl
sbb
ja
decl
xlat
lods
add
pop
xchg
fwait
adc
scas
or
add
fst
outsl
mov
push
jb
adc
mov
xchg
mov
fcmovu
stos
mov
sarb
inc
jl
mov
inc
out
out
out
lods
or
sub
fwait
int3
je
cmp
sahf
xchg
cmp
push
push
rol
xchg
int3
loope
outsb
add
rcrl
jge
js
cmp
cld
ja
sahf
adc
loopne
sbb
or
cmp
lret
js
or
test
int3
cmp
mov
subb
addr16
into
in
add
inc
outsb
pop
jne
pop
enter
adc
clc
cltd
adcb
loope
es
dec
push
xchg
cmpsl
out
or
mov
ja
loop
loope
ljmp
out
sub
and
cmpsl
mov
repnz
lret
nop
push
xchg
sarb
inc
sbb
inc
lret
or
repnz
adc
add
iret
jb
fildll
or
out
stc
arpl
in
xlat
push
dec
or
cltd
mov
cmp
push
fs
ret
iret
ret
pop
mov
and
jg
addr16
xchg
mov
mov
pop
jecxz
cwtl
mov
xchg
sahf
inc
stos
mov
leave
dec
movsb
stos
pushf
pop
inc
and
jbe
sbb
mov
mov
inc
inc
jecxz
mov
pop
sbb
xlat
pop
leave
leavew
popf
jae
icebp
pop
shrl
jle
mov
sub
add
lods
jg
mov
popf
mov
popf
xchg
hlt
enter
lods
aaa
gs
daa
dec
mov
in
cmp
inc
cli
stos
test
ja
sahf
and
cmpb
ljmp
fwait
sarl
jb
add
jne
fisubs
out
ds
fs
dec
pop
push
shlb
lea
ja
jne
movsl
sub
sbb
iret
pop
push
jecxz
lods
lea
pusha
xchg
in
out
mov
push
mov
cmp
adc
out
sub
jmp
fistl
xchg
aas
loop
rol
inc
movb
lcall
mov
arpl
pop
aam
fidivrl
into
inc
ja
inc
out
aas
or
or
je
inc
dec
mov
pop
lea
data16
imull
aas
and
fiadds
mov
ret
dec
and
jl
mov
push
fisttps
loopne
rorb
ds
sbb
pop
test
fsubl
cmpl
mov
filds
subl
sub
cmpsb
in
or
lds
fdiv
or
inc
push
add
orb
fsts
addr16
jmp
in
pusha
adc
xchg
fs
fwait
or
xor
cmpsb
iret
dec
sub
push
insl
inc
stos
in
lcall
sarl
mov
std
inc
mov
pop
jecxz
push
jb
imul
jmp
jp
xlat
repz
cmp
sub
lahf
mov
fstl
or
mov
adc
rorl
sahf
jbe
iret
inc
icebp
add
adc
outsb
repnz
mov
sub
jb
test
cs
jno
std
xchg
xlat
inc
add
sti
xor
data16
test
adc
and
insb
xor
movsb
or
add
pop
dec
nop
shrl
pop
add
push
fnsave
push
xlat
jmp
push
out
mov
xchg
sub
push
jno
mov
mov
inc
pop
xchg
xchg
xor
xchg
repnz
pop
lea
push
inc
inc
xor
add
rcl
rol
mov
movsl
nop
xchg
addb
push
inc
inc
xor
add
rcl
rol
mov
movsl
nop
xchg
addb
aad
inc
xor
add
rcl
rol
mov
movsl
nop
xchg
addl
xor
add
jp
shlb
push
jp
inc
pop
adc
mov
add
ficoms
inc
cmc
aaa
andb
adc
loop
shlb
jne
add
sbbb
lds
jl
inc
cmc
xor
add
push
incl
mov
das
jp
jb
push
divb
and
xlat
jno
mov
ret
ss
cmp
out
xchg
cmpsb
xor
pop
cmpsl
leave
push
jmp
pop
xor
incb
xchg
ljmp
sahf
mov
cmp
movsl
mov
mov
xchg
cs
clc
mov
cmp
test
jmp
mov
lds
jbe
imul
inc
lcall
adc
xchg
in
mov
inc
sbb
sbb
pop
std
leave
ja
pop
test
cwtl
add
in
leave
mov
xor
shr
addb
cmp
loop
sub
dec
pop
out
push
jnp
mov
inc
lahf
mov
and
push
dec
adc
ror
jne
adc
adc
add
jge
out
leave
push
mov
xchg
or
adcl
movsl
add
xchg
pop
ret
rolw
repnz
xchg
push
or
fistl
inc
decb
dec
movsb
and
inc
lret
rolb
shll
testl
xor
push
in
cmc
xor
add
shlb
jne
add
xorb
in
cmc
xor
add
jp
popf
fwait
int
repnz
or
mov
scas
jne
popf
popa
cmpsb
arpl
inc
mov
jno
pop
mov
loopne
jns
enter
dec
aad
int3
testb
sub
insl
pop
mov
imul
gs
mov
mov
jne
test
sub
xor
xor
push
cmp
inc
dec
inc
dec
add
outsl
mov
jnp
loop
mov
sub
loopne
xchg
xchg
fistpll
clc
xchg
mov
fists
mov
xchg
xor
ret
cmpsl
lahf
and
dec
cwtl
aaa
inc
sti
sbb
inc
cltd
in
out
xor
cmp
pop
cmpsl
js
xor
cld
sbbb
pop
cmp
shll
loop
jecxz
aad
outsl
pop
inc
sahf
test
jge
ret
popf
add
aad
mov
cmp
out
sbb
pop
pop
push
push
nop
fldl2e
mov
dec
aas
add
out
cmc
add
xchg
xor
jne
xlat
jbe
lret
ds
repnz
cmp
jae
icebp
adcl
data16
lret
sahf
outsl
ss
adc
roll
adc
cwtl
adc
push
inc
mov
lahf
add
mov
push
daa
rorb
jae
int
add
test
popa
push
int
add
fistpll
or
or
faddl
add
xchg
jae
adc
iret
bound
mov
fidivrl
cmpsl
cmp
loop
popf
sbb
dec
xchg
xor
jl
shrb
mov
pop
ljmp
int
fldenv
pop
cmp
push
stc
aaa
insl
fwait
test
add
out
dec
xor
outsl
sti
shlb
into
xor
xchg
js
dec
out
ret
or
arpl
aaa
shrl
lock
cld
andb
fimull
jecxz
lods
inc
or
pop
hlt
add
cmp
mov
jl
dec
shlb
or
repnz
xchg
cmpsb
mov
push
mov
and
or
mov
es
and
push
inc
inc
mov
clc
mov
lahf
and
jge
mov
push
mov
jbe
mov
repnz
pop
mov
mov
dec
jg
lock
in
nop
dec
xor
mov
add
movsb
std
cmp
dec
rorl
add
dec
mov
adc
out
mov
shrb
sub
popa
xor
popa
push
fdivs
mov
lret
cmp
jnp
je
pop
mov
sub
mov
fldenv
xor
push
imul
mov
les
mov
and
in
fidivl
mov
fisttpll
jbe
xchg
shrb
jl
inc
fldt
xchg
inc
cmc
mov
addr16
sahf
jl
add
fcomi
jp
cmc
push
mov
es
lea
in
jb
inc
xor
cwtl
sahf
jns
iretw
or
dec
les
repnz
xor
mov
inc
jbe
jg
shll
nop
outsl
fdiv
addr16
xchg
js
fmull
repz
sub
fidivl
and
sub
imul
and
jns
aas
scas
mov
or
leave
ljmp
pop
std
push
cmp
mov
cmp
call
pop
data16
cltd
dec
push
adc
insb
add
sbb
mov
xor
es
subl
cld
lods
in
push
push
mov
loop
outsb
sub
inc
add
xor
pop
mov
xchg
xor
mov
ret
jnp
jecxz
lock
mov
push
xchg
xchg
cmp
fidivs
mov
in
cld
mov
jbe
adc
cmp
mov
std
jns
daa
nopl
push
popa
dec
jg
aaa
in
jle
jmp
sahf
mov
das
test
mov
mov
mov
leave
pop
aam
sarl
sub
pusha
addl
repnz
inc
jne
dec
call
and
pop
repnz
add
imul
fucomp
insl
sub
rcll
cwtl
or
pop
sbb
jge
cmp
xchg
sarl
movsl
or
xor
lods
pop
das
int3
inc
dec
popf
and
pop
cmpsb
cmp
push
pop
ret
lret
add
outsb
pusha
faddl
cmp
dec
mov
mov
outsb
fmul
stos
addr16
fiadds
jge
in
and
js
mov
divl
scas
test
cltd
insl
mov
popa
adc
mov
jl
xchg
dec
test
inc
lret
add
es
dec
out
ds
into
xor
ja
std
jo
or
adc
test
ljmp
movsb
and
test
add
ficompl
imul
enter
add
adc
in
negb
and
into
sbb
lret
leave
push
ss
call
paddsw
adc
dec
sub
ret
push
adcl
mov
push
pop
xlat
hlt
inc
std
outsl
gs
sub
fiaddl
add
lods
mov
push
sub
popa
sbb
lods
mov
push
loope
ja
add
mov
ljmp
aam
inc
call
and
movl
push
cltd
shl
or
sub
push
mov
outsb
aaa
push
jge
mov
test
inc
ss
sti
mov
lahf
punpckhwd
mov
cwtl
mov
lock
ss
fidivrs
mov
or
flds
in
arpl
adc
clc
lods
add
mov
dec
ja
cmc
jmp
xor
jbe
fdivrl
addr16
add
movsl
sub
sub
mov
jecxz
aam
dec
mov
es
hlt
and
test
jl
fildll
adcb
sub
jae
inc
mov
cwtl
into
mov
push
mov
ret
repz
fnsave
and
insb
mov
mov
lret
arpl
aam
xchg
xchg
push
mov
pusha
jo
jp
and
dec
pop
adc
xor
jno
pop
lea
rol
mov
jb
push
inc
push
jp
add
add
sub
push
dec
test
push
jb
and
outsb
lods
cmc
mov
mov
outsl
lods
shr
mov
int
dec
jmp
leave
ret
les
push
add
push
mov
sbb
out
scas
or
das
nop
mov
xchg
jbe
out
pushf
push
mov
in
jle
daa
pop
jge
out
mov
enter
fcomps
test
mov
xchg
cmp
cmpsl
jno
sbbl
adc
pop
clc
dec
cmc
mov
cmp
in
mov
cmp
int
mulb
adc
aam
inc
mov
xchg
iret
mov
jmp
stc
jb
leave
addl
push
adc
cli
repnz
pop
jp
hlt
adc
pop
mov
into
mov
sbbb
shlb
pop
jg
or
js
cmc
pop
mov
push
fsubs
stos
bound
mov
ret
dec
jns
ret
jno
xchg
pop
inc
insb
push
testl
jae
mov
lahf
cmp
cmpsb
push
sub
mov
sbb
push
lahf
sub
sbb
and
mov
xchg
xor
mov
xor
jmp
pop
imul
mov
adc
mov
push
or
aaa
and
mov
rcrb
aad
inc
outsb
fdivrs
dec
lea
cmc
jns
push
pop
sahf
push
lcall
loop
xchg
mov
cmp
pop
out
pop
pop
cmp
mov
dec
mov
clc
aas
lea
push
mov
ret
and
push
in
push
lods
add
rcrb
add
inc
mov
cmpsb
mov
add
mov
and
mov
arpl
jno
pusha
jno
mov
in
pusha
jg
pop
cltd
arpl
enter
test
pop
mov
pop
pop
in
xor
lods
fildll
mov
jp
sub
mov
pushf
je
xor
ret
and
movsb
xor
test
mov
push
pop
cli
xchg
add
and
mov
sbb
in
dec
shl
or
aam
lods
mov
rolb
cmp
mov
popa
cmp
inc
cmpsb
or
mov
hlt
in
rorl
mov
fimuls
sbb
sbb
cmpsb
jg
xor
outsb
pop
dec
lret
mov
push
cmp
add
cmp
fistps
xor
call
insl
and
sub
fcompl
lret
lcall
scas
inc
inc
jno
xchg
jmp
ret
pop
icebp
cwtl
insb
add
dec
inc
out
lds
out
xchg
cmp
inc
adc
adc
dec
and
aam
mov
cmp
call
cmp
mov
mov
jbe
mov
mov
push
xor
fildl
xchg
ret
das
insl
jecxz
adcb
cmc
and
sbb
push
fsts
clc
inc
xor
add
fsubrl
xchg
into
enter
or
popf
in
inc
dec
push
adc
aam
sub
sub
leave
cmp
shl
iret
outsb
loopne
cltd
lcall
lock
outsl
pop
xor
pop
dec
out
xor
xor
pusha
arpl
push
dec
pop
mov
dec
and
loope
in
mov
test
sbb
popf
je
std
dec
imul
enter
dec
dec
mov
cld
xor
add
sbb
sbbl
pmaxsw
xchg
or
fwait
incl
add
aad
mov
xchg
std
nop
mov
inc
xor
in
push
les
pop
push
rorl
stos
mov
insl
outsb
pop
mov
push
nop
push
adc
mov
push
cwtl
pop
insl
stos
adc
pop
hlt
shrl
pop
sub
leave
fisubl
lods
xor
cmpsl
cmp
sub
cmp
jle
movsb
insb
loop
lds
jmp
in
data16
sub
jmp
jb
flds
pusha
outsb
mov
inc
into
cmp
lea
lods
in
mov
cmp
xor
out
aaa
sub
cmp
mov
ret
es
jno
pop
stc
cli
decl
push
mov
or
loop
xchg
jno
mov
sbb
sub
pop
scas
and
pop
dec
mov
loope
xor
adc
bound
std
enter
sbbb
rcrl
outsl
push
subb
ja
in
sarb
inc
xchg
push
fmull
stos
sbb
popf
test
sbb
sbb
js
mov
push
rolb
sbb
ljmp
inc
jp
inc
dec
xchg
test
push
xor
inc
xor
imul
mov
movsl
fimuls
xor
popf
dec
inc
inc
popf
push
fwait
inc
pop
or
test
divl
inc
mov
cwtl
inc
sub
scas
jnp
pushf
movsl
loope
mov
scas
xchg
leave
cwtl
xchg
insb
out
or
mov
cwtl
imul
stos
add
mov
into
ja
in
xrelease
in
mov
and
lret
xor
mov
movsb
xchg
xor
sbb
adc
or
inc
mov
jge
ret
xor
inc
push
stos
es
inc
les
mov
sub
gs
stc
mov
cmpl
out
mov
pop
test
add
xchg
aad
xchg
cmp
pop
inc
adc
inc
push
lock
pop
pop
and
mov
shll
inc
je
loop
add
ja
sarl
xchg
or
push
sub
lret
adc
cmp
xchg
cmpl
sub
test
xchg
sar
inc
push
add
loope
inc
repz
movsb
movsb
add
jecxz,pt
jo
cmc
sub
fisubrs
imul
mov
in
cmp
or
rcll
mov
or
test
fs
mov
adc
imul
inc
pushf
lret
cmp
cmp
sbb
lods
dec
xor
jle
push
sbb
mov
je
shl
cli
ja
fcmove
test
decl
data16
ljmp
loope
mov
and
xor
call
inc
fadd
daa
mov
adc
cmpsb
clc
hlt
rcr
call
or
adc
xchg
dec
insl
sbb
mov
imul
pop
dec
das
ja
jmp
popf
jbe
add
testl
cmp
pop
addr16
xchg
xor
push
inc
push
dec
adc
fwait
mov
idiv
hlt
xlat
push
push
push
sbb
xchg
xchg
int
scas
int3
add
mov
sbb
ret
and
test
cmp
mov
test
mov
mov
xor
mov
mov
xchg
fists
xor
lock
je
jp
insb
mov
pushf
test
sub
fldt
xlat
clc
mov
sbb
sar
out
inc
lock
in
rcll
int
dec
inc
loope
cmpsb
fucomp
mov
jnp
es
mov
and
fnstcw
push
clc
mov
mov
mov
cmp
add
add
inc
and
and
dec
sarb
shll
or
aam
mov
fnsave
lock
outsb
shll
popl
bound
stos
push
push
bound
enter
mov
pushl
dec
push
or
sbb
sub
in
cmp
fists
jnp
xchg
inc
aam
out
xchg
xchg
and
scas
pop
add
inc
jnp
mov
jmp
inc
xchg
or
repnz
ja
add
movsl
cmc
cmc
and
neg
mov
loop
sbb
aam
add
fs
jne
inc
js
popf
aas
adcl
fwait
xor
cmp
jge
mov
fstl
cmp
cmp
or
mov
sahf
call
pushf
lds
mov
mov
repnz
ret
int
inc
or
out
or
outsb
mov
mov
mov
adc
mov
out
cli
xor
dec
push
and
mov
cmpsb
mov
push
mov
imull
mov
sub
int
adc
sbb
movsl
pusha
push
sbb
mov
sbb
je
mov
mov
push
sub
sbb
inc
loope
cwtl
mov
cld
sbbb
stos
ficompl
sysenter
cmp
ds
pop
jmp
lods
push
xchg
xor
sbb
pop
sbb
xorl
icebp
jecxz
push
adc
sbb
pushf
lds
push
adc
push
fnsave
stos
cld
das
arpl
mov
cmp
aam
pop
or
cbtw
arpl
lahf
add
in
sti
mov
mov
imul
subl
leave
lcall
in
cmp
or
cmpl
sbb
clc
mov
or
stos
mov
xor
enter
xchg
call
mov
add
cmp
push
add
and
jns
mov
mov
adcl
xor
popa
push
xlat
dec
dec
sub
jnp
lret
xchg
call
adc
sub
or
cmp
add
scas
lock
xchg
push
inc
inc
pop
jmp
mov
sbb
push
cmpsl
adc
xor
std
cs
xlat
sub
and
lret
shll
mov
pop
inc
xchg
ds
pop
into
insb
xchg
and
or
jns
add
add
leave
fldcw
jge
add
loope
pop
mov
sahf
mov
pop
push
arpl
in
dec
jnp
mov
inc
jne
xor
dec
je
inc
jo
sbb
inc
arpl
cvtps2pd
movsb
rcrb
inc
cmp
cmp
dec
mov
mov
push
ret
pop
inc
fcoml
outsl
jne
dec
xchg
xor
jmp
adc
dec
in
push
int3
add
cwtl
mov
scas
pusha
jne
jecxz
aas
das
xor
cmpsl
adc
divl
jne,pt
inc
test
fneni(8087
xchg
mov
jne
int
xor
push
push
mov
push
jbe
jns
stos
and
fsts
mov
jne
lea
inc
xchg
ds
sub
insb
and
adc
ja
cmp
push
fisubs
les
stc
test
and
jbe
xor
pop
jbe
pusha
enter
fildl
xor
pop
push
gs
pusha
ljmp
sahf
jae
xor
div
cld
mov
in
adc
call
scas
or
push
and
mov
or
imul
jl
pop
je
idiv
sbb
jbe
movsl
mov
ljmp
out
faddl
sarl
adc
notb
xchg
push
cmpsb
sub
ror
and
cmp
test
std
outsb
push
jle
mov
in
mov
test
mov
stos
add
push
in
out
mov
lock
test
or
mov
xor
daa
pop
orl
jne
std
push
lea
dec
repz
xchg
push
nop
push
cmpsb
jle
mov
lods
int
outsl
dec
das
jle
rclb
push
cmpsb
gs
rcrl
ss
jmp
and
stc
xchg
xchg
cld
cli
dec
hlt
cmp
dec
movsl
sbb
ret
das
fnstsw
vmwrite
outsl
mov
fs
pusha
dec
dec
popf
jmp
std
mov
mov
xbegin
mov
mov
jno
inc
scas
sub
insl
lret
loop
hlt
push
test
nop
loopne
bound
pop
ret
xchg
or
and
jbe
outsl
and
mov
std
cmp
mov
and
jp
gs
mov
test
jecxz
push
push
cmpsl
js
jge
add
shrl
jmp
sub
sbbl
popa
sub
int3
mov
pop
ljmp
push
mov
lock
jne
fsubrl
rcrl
sbb
jp
xchg
jno
sbb
lcall
in
scas
cmp
and
xor
fcmove
data16
or
and
lock
into
leave
stc
jno
aam
stos
decb
mov
jg
mov
jnp
pop
push
mov
sbb
jb
and
jle
stos
divl
pushf
cltd
mov
sbb
into
cmp
add
add
mov
fbstp
cltd
ret
cmpl
aad
jmp
pushf
jl
icebp
mov
aas
jle
in
cmpsl
maxps
jge
push
loopne
cli
jb
cltd
mov
inc
mov
movsb
ljmp
call
sbb
repz
push
in
cwtl
fisubl
sahf
filds
cmp
sahf
jns
out
sarb
push
sbb
and
mov
stos
lods
aaa
stc
mov
add
cmp
mov
cmp
test
call
push
push
mov
cs
icebp
push
das
inc
ds
stos
xor
dec
dec
mov
push
inc
push
cmp
stc
ror
mov
xchg
xorl
adc
and
jne
push
loopne
inc
data16
mov
or
pop
pop
sbb
scas
mov
mov
and
dec
clc
sub
rcrl
xacquire
sub
and
out
sbb
push
ds
andl
lods
xor
adc
jmp
cmc
add
out
cmp
jnp
xchg
sbb
fwait
roll
and
mov
cmp
shll
pop
add
dec
out
xor
movntps
mov
adc
jnp
sbbb
xor
sahf
bound
inc
and
leave
dec
aaa
or
dec
inc
adc
test
pop
push
addr16
pop
jno
inc
daa
sahf
pop
inc
mov
jb
push
mov
fildll
data16
push
push
loop
sub
mov
popa
fs
jg
inc
mov
jp,pt
dec
ja
lret
pop
or
pop
mov
mov
pop
dec
fmull
inc
subl
rcrl
rcr
inc
pushf
push
push
pop
in
daa
xchg
or
and
dec
adc
xor
aam
or
test
adc
pop
outsl
mov
imul
add
mov
sbb
mov
sbb
lret
push
pop
inc
fisubrs
lahf
repz
dec
push
add
xchg
add
xchg
mov
loopne
pop
outsl
gs
xchg
push
add
sar
insb
outsl
fsubrs
cmp
push
out
loope
stos
fistl
xchg
cltd
mov
rcl
rorl
jb
xor
vmovlpd
int3
sub
dec
lahf
and
lret
mov
add
sti
jmp
cmp
push
ss
cmp
rorb
inc
cmp
inc
cmp
test
insb
aam
cmp
mov
lds
mov
imul
push
and
xor
rcrl
and
xor
test
in
push
push
and
mov
ds
movl
ret
xchg
in
dec
ficompl
sbb
cmp
mov
lock
xchg
jbe
mov
outsb
iret
sti
test
push
hlt
mov
cld
stos
jb
cmpsb
pop
dec
mov
or
and
jb
arpl
inc
push
ja
mov
popa
xchg
dec
add
lret
xchg
orl
fwait
aaa
or
leave
push
nop
aaa
ds
arpl
imul
pop
insb
xor
dec
leave
lret
pop
pushf
adc
or
mov
test
aad
sarb
push
in
pusha
fidivs
add
xorb
in
cmc
xor
add
shlb
jne
add
xorb
in
cmc
xor
add
ret
jno
add
xorl
in
cld
xor
xor
mov
ljmp
movsl
add
jb
popf
jg
in
addb
in
in
int
std
shr
fucom
int
jmp
iret
lea
pop
inc
dec
adc
and
rcr
int
mov
mov
insl
adc
mov
sub
leave
std
fldln2
call
mov
mov
push
inc
dec
xor
dec
dec
inc
js
or
mov
jnp
insb
sbbl
cmp
cmp
cmc
cmp
dec
lods
lock
lock
jg
inc
xchg
imul
lods
std
push
cmpsb
fcompl
sarb
sub
mov
mov
mov
lahf
out
cmp
out
add
shr
adc
imul
mov
mov
js
mov
push
jge
jecxz
sub
pusha
aas
adc
mov
mov
pop
cmp
jle
cmc
add
sbb
pop
xor
adc
sub
push
mov
scas
cmpb
rol
adc
rorb
and
lock
int
mov
mov
insl
push
cmp
cmp
nop
movsl
ds
fwait
test
mov
int
and
inc
add
xor
and
push
push
lahf
inc
push
xchg
fucom
lcall
in
push
cmp
xor
push
jae
inc
push
repnz
xchg
test
subb
jge
insl
jo
pusha
dec
adc
and
lock
int
mov
mov
insl
jo
pusha
dec
adc
and
test
js
mov
jle
xor
lods
adc
xlat
aas
pop
inc
add
rol
sub
push
mov
leave
mov
xchg
hlt
int3
shlb
clc
mov
inc
inc
jle
dec
popa
shll
negb
aam
pop
cmpb
xorl
mov
jb
mov
add
lds
pop
orl
jg
inc
sbb
dec
and
movsl
addr16
mov
popa
mov
cmp
popf
out
or
andl
fldl
sub
cmp
mov
test
adc
add
xor
inc
cmp
mov
in
adc
aad
mov
pusha
ret
and
xor
fsts
push
fucompp
pop
dec
sbb
jns
shlb
dec
jle
cmc
add
dec
jne
sbb
sbbb
adc
aas
adc
insb
cwtl
or
dec
sub
cmp
arpl
adc
push
dec
icebp
jp
rorl
push
mov
adc
icebp
pop
mov
js
pop
fcmovu
cmp
and
add
movsb
ljmp
addl
push
sahf
fs
daa
and
pushf
fidivl
loop
call
cmp
fmull
pop
out
pop
sbb
hlt
aad
push
ret
add
sbb
sub
out
lds
test
or
shlb
sub
mov
cli
lods
fbld
ficoml
clc
pop
stc
pop
cltd
push
mov
cmpsb
jg
fldt
xchg
frstor
cld
in
dec
inc
mov
xor
xor
xor
in
xchg
mov
push
pop
mov
cmp
xchg
jmp
sbb
jo
jb
popf
inc
mov
testb
fdiv
mov
sub
lds
call
in
repz
cltd
inc
xchg
ds
lea
or
mov
negb
mov
in
loopne
pop
loopne
in
nop
lock
pop
dec
cs
aad
cmpsb
xor
dec
fisubrl
mov
mov
into
cltd
mov
pop
add
pop
push
cmpsb
mov
mov
jns
inc
out
mov
dec
xchg
imul
push
adc
add
xchg
jbe
pop
in
inc
rcr
iret
push
mov
sbbl
or
mov
cmc
mov
notl
roll
cwtl
xor
out
mov
ja
je
jo
into
in
lea
repnz
inc
icebp
cmp
xchg
jmp
loope
xor
add
rep
into
cld
scas
fwait
fs
jns
insb
stc
cld
and
data16
rcr
ds
sub
scas
into
fnstsw
xor
jge
mov
repnz
cmp
shll
fbstp
test
mov
sub
push
jecxz
or
enter
cwtl
mov
jge
dec
insb
daa
lods
lds
lods
test
std
inc
andb
cmp
repz
mov
adc
xlat
in
adc
lock
push
or
cld
or
mov
push
clc
xchg
scas
fisubs
fildl
adc
notb
mov
fcmovnu
gs
sbb
mov
nopl
or
mov
pop
mov
out
push
and
jle
test
sbb
sub
sub
cmpsb
xchg
push
dec
in
fidivrl
hlt
test
div
jl
sbb
jg
fiadds
ror
jno
std
push
sbb
and
leave
nop
leave
xlat
mov
cltd
mov
in
repz
mov
mov
das
jmp
test
mov
jmp
adc
adc
xchg
sub
out
popf
lret
mov
mov
ficoml
aas
push
and
mov
es
jnp
lea
or
pusha
aad
jae
call
adc
mov
mov
mov
and
jg
adc
and
xchg
fnstcw
and
xchg
xchg
jp
test
and
jno
movsl
sub
push
std
adc
jp
pop
sbb
arpl
jae
xor
xor
popf
lea
loopne
pop
push
in
push
outsl
dec
outsl
pop
mov
mov
bound
jne
add
sbb
and
out
loopne
push
hlt
xor
dec
idiv
dec
xchg
xchg
inc
and
leave
inc
xchg
mov
popf
xor
xchg
shll
cmp
sub
cmp
adc
pop
pop
xchg
imul
stos
jle
xor
andb
jecxz
mov
xchg
loope
sbb
jnp
add
push
in
cmp
sub
cmpsb
and
sahf
test
add
sbb
jno
cmc
or
xor
pop
in
pop
xor
fidivrl
push
mov
and
das
gs
loopne
mov
add
ret
loope,pn
js
loop
inc
xchg
sbb
and
cmp
mov
push
fisttpl
mov
lods
add
add
add
fucom
out
mov
inc
xor
mov
mov
iret
adc
sti
inc
in
mov
pop
mov
xchg
jns
xlat
push
pop
add
dec
xor
pop
sahf
mov
jp
and
xchg
mov
fdivl
cmp
gs
sub
add
add
shlb
pop
lods
pop
rolb
sbb
nop
mov
dec
adc
stc
jae
inc
xlat
inc
insb
scas
xor
mov
imull
lret
jle
rcll
and
aas
mov
in
popf
pushf
mov
daa
movsl
adc
sahf
lcall
fldcw
mov
inc
xchg
ret
or
in
js
addr16
cld
pop
jge
jne
std
ficomps
je
sarb
xchg
and
push
push
jmp
jno
jno
stos
sbb
push
fs
mov
out
mov
cmp
fildl
push
repz
inc
insb
enter
inc
adc
push
cmc
add
sbb
scas
lea
or
out
mov
adc
testb
add
int3
adc
hlt
nop
lea
imul
cmp
sahf
cld
xchg
out
push
fisttpll
loope
push
jns
mov
sti
and
mov
sbb
xor
push
mov
daa
test
scas
and
inc
mov
mov
dec
dec
jecxz
mov
dec
cltd
into
sahf
cmp
push
aad
jle
int
jge
push
fstl
inc
dec
sti
nop
cmp
mov
stos
or
mov
pop
pop
hlt
hlt
je
jp
or
hlt
dec
inc
dec
mov
dec
pop
fisttpl
pop
inc
adc
pop
xor
leave
cmc
rcrl
dec
sbb
insb
dec
andb
inc
stc
jge
jmp
sbb
fmull
push
xchg
pop
insl
xor
sub
and
xchg
das
cld
out
push
add
sbb
out
movsb
and
ficoml
pop
icebp
into
inc
cmp
jnp
jne
and
inc
test
rcll
dec
test
mov
push
sbb
pop
rorb
test
mov
dec
mov
inc
bound
xchg
pop
decb
adc
mov
jle
lahf
fxam
push
mov
mov
pop
xlat
push
add
mov
mov
clc
test
push
jbe,pn
or
cmp
cmp
cmp
js
mov
and
cmpsl
sahf
mov
rolb
hlt
jge
insb
mov
xchg
into
pop
pop
jmp
sbb
sub
inc
cmp
lea
test
outsl
jo
mov
cs
push
mov
sbb
lods
jp
fidivrl
aad
push
leave
sbbl
jbe
cs
mov
adc
enter
pop
mov
movsb
push
mov
shr
inc
xor
shl
scas
scas
cmc
jns
jb
nop
sbb
jns
cwtl
popf
mov
cmpsl
aas
dec
into
pusha
sti
ss
aad
pusha
out
test
fucomi
call
inc
sbb
inc
lahf
push
leave
ret
test
int3
shlb
xchg
sahf
cmc
lods
dec
sbb
adc
loop
cmp
xorb
insb
ljmp
mov
je
insl
xor
xchg
decb
sbbl
daa
or
icebp
sbb
and
cmpsb
in
rclb
addr16
in
and
mov
adc
sti
daa
imull
add
jnp
aam
sub
pop
test
out
or
test
aad
les
mov
sub
loop
push
sahf
ljmp
cltd
pusha
test
loope
mov
pop
mull
les
mov
loop
js
lds
xor
add
rcrl
jge
add
xor
push
cmpsl
lock
in
js
xchg
loopne
sbb
sbb
lods
xor
mov
cmc
outsl
sub
sar
dec
bound
sub
sbb
mov
sarl
stos
dec
inc
lds
inc
sbb
push
pop
fsubs
adc
in
inc
pop
shlb
dec
mov
jb
js
pop
outsl
lods
add
xchg
ja
fldcw
incb
jle
push
popa
jnp
daa
push
push
cld
inc
mov
outsl
insb
pop
jns
inc
adc
cmp
pop
cmpsb
stos
xchg
cmp
or
inc
call
arpl
xchg
pop
or
imul
sbb
pop
cmp
jp
dec
push
and
fidivl
dec
inc
rolb
mov
xchg
cmp
repz
adcl
test
lods
lock
lcall
les
repnz
xchg
xor
rcll
dec
sub
xchg
movsl
rep
pop
cmp
cmpsb
jl
jmp
cwtl
pop
scas
loopne
loopne
shl
adc
cltd
lahf
cmp
adc
and
popf
sbb
aad
add
push
jno
pop
inc
test
dec
mov
addr16
mov
cmp
jmp
lods
iret
sbb
outsb
and
and
ljmp
and
leave
aaa
xchg
or
shll
popa
lret
insb
lcall
pop
cwtl
mov
lods
inc
cmpb
pcmpgtw
cmp
fcmovb
mov
cmpsl
idivb
mov
adc
sbb
and
jns
ret
dec
and
cmp
adc
sub
sbb
jmp
jae
mov
or
and
in
pop
pushf
add
push
cli
xrelease
lcall
inc
jb
int3
dec
adc
popa
sub
inc
xchg
mov
lahf
adc
mov
jmp
sub
test
and
jnp
pop
push
adc
out
fcomip
push
repnz
cmpsb
push
sub
pop
ds
dec
jo
test
dec
inc
lret
inc
add
sbb
outsb
shlb
sub
cmp
cltd
ds
jmp
mov
mov
pusha
insb
xchg
mov
test
pop
add
fs
dec
mov
cli
inc
outsb
mov
pop
into
pop
mov
and
wrmsr
push
fldenv
pop
lock
rorb
jle
insl
je
ljmp
dec
add
dec
shr
xor
pop
das
in
mov
stc
sub
mov
xor
lods
js
neg
ljmp
mov
or
push
lods
add
push
jge
cltd
shll
mov
pop
nop
cmp
dec
ss
fcomip
mov
inc
push
mov
test
sub
pop
insl
sub
cld
jecxz
loope
rclb
sub
xchg
out
pop
stos
sbb
mov
aaa
in
jnp
jae
mov
ret
lock
push
nop
lods
mov
jnp
ret
sahf
arpl
pop
int3
jmp
add
pop
daa
mov
ret
push
cld
test
fmull
adc
sti
xor
jnp
xchg
pop
pop
xor
and
nop
inc
in
sbb
repz
add
sub
loope
xor
iret
cld
mov
dec
insl
pusha
adc
stos
stos
jl
jg
inc
xchg
xor
addl
mov
cmp
std
add
insb
filds
div
jo
imul
cmp
and
stc
fdivrs
in
lock
aam
jmp
lds
call
inc
jg
lcall
jns
jae
adc
jbe
dec
push
pop
mov
leave
int3
cmp
add
xor
adc
xlat
push
pop
push
loope
icebp
das
xchg
insl
xchg
pop
arpl
fidivs
pop
mov
jg
dec
jb
loope
jmp
jno
rolb
sbb
sub
mov
lahf
cld
dec
cmp
push
pop
mov
xor
jb
mov
add
outsl
mov
dec
adc
xchg
sbbb
xchg
divb
mov
mov
leave
mov
mov
pop
pop
and
ret
adc
add
cmp
insl
bound
jb
push
out
std
jno
sbb
lea
and
jl
push
push
rolb
test
lods
bound
aas
jnp
test
scas
out
jg
sbb
cmp
stos
or
jne
mov
test
outsl
cli
jae
cmp
insl
out
fnstcw
loopne
imul
imul
sub
push
xor
pop
mov
mov
cs
mov
sub
xchg
mov
scas
adc
dec
xchg
mov
fistpll
pop
sbb
in
and
pop
xor
xor
and
pop
ret
test
mov
mov
fbstp
cmp
rorl
jb
mov
pusha
push
inc
mov
push
cs
mov
inc
cltd
ja
jb
lock
jle
cmpsb
pop
adc
cmp
jge
fistpll
pop
cmp
jmp
movsb
sub
xor
and
and
fiadds
les
and
lahf
jg
dec
push
scas
cmp
pop
loopne
dec
sbb
call
stos
sbbb
lods
lcall
or
pop
imul
mov
rorw
or
mov
push
push
sbb
or
loopne
dec
sub
loop
sbb
fwait
push
pop
nop
imul
test
inc
adc
int
mov
adc
ret
adc
fimuls
shr
mov
mov
jg
pop
push
push
mov
movb
jle
push
je
mov
addr16
jmp
inc
lahf
xchg
cli
xchg
dec
push
jmp
in
mov
popf
stos
push
cld
mov
sub
and
add
cmp
inc
ja
test
sub
cwtl
js
pop
push
loopne
daa
iret
push
jg
mov
aad
pop
fisttpl
or
cmp
mov
bound
movsb
ss
lret
cmp
mov
jo
and
rcl
inc
mov
outsb
push
jg
inc
cltd
insb
in
mov
cmp
cmp
inc
and
shr
push
test
xchg
adc
shll
or
xchg
fsubr
inc
mov
push
test
xchg
sub
cli
push
pop
and
inc
mov
stos
jecxz
push
fmull
in
xor
xchg
cmp
fbstp
or
sahf
push
aad
inc
pop
mov
loop
jae
mov
stc
jne
push
loopne
aaa
cmc
xor
into
sub
mov
ror
or
sbb
adc
jg
xor
decl
jne
dec
jnp
ds
cmp
ss
mov
inc
ret
fidivrs
cwtl
mov
jae
popa
push
push
popf
jp
dec
sbb
sub
lods
cmc
xchg
add
orl
xlat
sahf
iret
push
and
mov
loope
inc
lcall
rolb
pusha
nop
out
loopne
mov
jg
test
inc
xchg
subb
adc
inc
aam
xchg
test
std
dec
xor
adc
int3
jg
hlt
mov
mov
inc
mov
push
add
xchg
dec
in
inc
mov
dec
adc
jle
out
fdivr
and
out
stc
or
leave
lock
mov
mov
ss
cmp
ret
jg
icebp
mov
jbe
mov
das
mov
int3
add
xor
fcmove
out
sarb
add
xor
jge
lahf
xchg
inc
cmp
and
lea
adc
nop
jae
popf
and
adc
cmp
shll
mov
add
adc
cld
out
push
ror
mov
dec
inc
pusha
adc
fdivp
jge
pop
sbb
xchg
mov
sbb
push
dec
ret
call
mov
std
mov
sub
push
mov
and
pusha
dec
ficompl
adc
cltd
rcr
sub
inc
fnsave
sub
scas
inc
cmp
lcall
outsb
jl
mov
daa
cmp
outsl
and
je
aas
cmp
lock
push
adc
cmc
mov
pop
stos
add
ds
mov
lahf
jl
cmp
mov
xchg
out
mov
cli
incb
pop
sbbb
sub
add
adc
dec
test
js
xchg
push
daa
out
and
xor
mov
and
jg
cmpsb
push
shl
es
movsb
adc
and
ficoml
mov
mov
test
imul
xor
aaa
pop
lock
pop
loope
add
mov
test
push
mov
mov
and
jne
jae
ds
cmc
or
sbb
mov
jle
cli
inc
ret
pop
inc
sbb
mov
xchg
imul
mov
dec
jo
mov
fs
adc
or
push
sbb
pop
daa
mov
add
out
dec
pop
xor
repnz
fdivp
jg
adc
sti
jl
test
mov
pushf
out
mov
sbb
add
pusha
mov
jns
loopne
dec
int3
xchg
ret
lds
xchg
mov
mov
mov
ffreep
add
pop
daa
xorb
leave
repz
pop
xchg
bnd
fs
push
das
lock
adcb
dec
call
lret
gs
push
xchg
adc
mov
jg
push
in
call
jp
loope
push
lea
dec
loopne
insl
pop
lods
push
jmp
mov
jmp
imul
mov
adc
fiadds
and
out
push
xchg
push
xlat
rcr
sub
rorl
sbb
mov
sbb
testl
and
mov
pushf
mov
shlb
fwait
movsl
loope
repnz
push
mov
adc
neg
jecxz
clc
test
dec
add
int3
pop
mov
pop
jmp
pop
dec
sar
iret
cmpsl
jbe
scas
dec
or
jl
sub
sub
jbe
mov
aaa
ljmp
test
lret
dec
mov
mov
call
and
jo
jae
fs
or
pushf
cmc
fiadds
inc
addb
xor
lcall
mov
mov
or
sahf
imul
aad
xchg
outsl
push
cltd
ds
mov
dec
push
clc
popa
mov
lds
sub
add
fwait
fwait
in
mov
mov
hlt
mov
mov
pop
xchg
jecxz
xor
add
xor
xchg
push
sbb
out
xchg
inc
test
dec
mov
aaa
in
iret
xor
xor
loope
xor
roll
sub
lods
gs
loopne
mov
ficoml
pop
int
cld
test
std
and
adcb
pushl
inc
ss
sbbb
loope
cltd
dec
xor
in
push
fs
pop
les
pop
mov
sub
cmovb
inc
daa
lds
and
add
pusha
cmp
pop
pop
in
lods
sbb
outsb
cmp
jnp
sti
test
jmp
pop
sbb
into
push
mov
aad
popf
lsl
dec
dec
sub
pop
jb
sarb
xor
fxch
dec
lahf
cmp
rolb
lret
inc
cs
icebp
and
test
call
jb
push
cs
fsubs
lahf
sbb
jbe
sub
mov
sbb
pop
mov
adc
int3
push
mov
push
test
imul
sub
je
ret
repz
jns
fsubrs
push
jg
lret
mov
lods
daa
mov
bound
push
ljmp
jmp
bound
lret
stos
enter
aaa
in
push
daa
pop
jbe
shrl
mov
push
nop
dec
hlt
cmovge
jns
pop
xchg
aas
std
jo
fbstp
into
test
mov
pop
fidivrs
pusha
fsubrl
mov
jo
push
cmp
lods
stos
out
adc
in
lea
cwtl
inc
shlb
cmc
fs
mov
popa
mov
mov
mov
jmp
mov
movsb
rol
pop
pop
leave
inc
xchg
xor
jae
subb
and
movsl
ljmp
imul
xchg
bound
daa
lds
mov
loop
clc
jno
xchg
hlt
ss
les
xchg
or
fwait
test
jnp
test
test
les
adc
and
push
xchg
xor
xchg
pop
inc
das
pop
jno
fstps
cmp
pop
jns
inc
pusha
lea
popf
jmp
jp
inc
add
mov
inc
mov
pop
dec
ljmp
clc
fs
jecxz
in
ss
int
mov
mov
insl
jo
pusha
dec
adc
and
lock
int
mov
mov
insl
jo
pusha
dec
adc
and
lock
int3
nop
mov
mov
insb
je
pusha
dec
adc
sub
in
hlt
in
fucom
leave
nop
mov
and
cmpb
addr16
ror
loop
repnz
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
es
out
test
cmpsl
pop
iret
xor
add
push
testb
push
mov
es
loop
shlb
adc
lcall
jb
arpl
push
testb
cpuid
pop
xchg
cmpb
dec
loop
shrb
jl
xchg
add
jb
adc
pop
ret
jbe
push
jmp
std
sahf
mov
cmp
or
sbb
jmp
lahf
pop
push
pop
mov
jg
repnz
mov
cltd
mov
js
out
pop
and
push
adc
dec
mov
insl
clc
add
xor
inc
popf
cmp
xchg
jae
jg
testb
dec
test
push
leave
test
push
sbb
jecxz
jbe
js
dec
std
sub
ljmp
loope
daa
stc
pop
leave
jg
or
jle
push
xor
jns
dec
mov
and
loop
lods
movsl
inc
arpl
into
jge
imul
jne
addr16
loop
push
es
hlt
inc
loopne
add
es
loop
shlb
jg
xchg
and
jb
ficoms
inc
out
push
shll
inc
xchg
push
lea
mov
stc
inc
xchg
inc
ret
hlt
mov
les
cltd
xor
icebp
inc
ret
dec
xchg
push
test
push
inc
loop
jecxz
roll
movsb
test
sub
aam
out
mov
loop
shlb
data16
add
push
testb
push
mov
es
loop
shlb
data16
add
push
testb
push
ret
adc
and
adc
cmpb
jp
scas
outsl
icebp
pop
daa
push
add
lret
jno
mov
pushf
insl
pop
sub
pop
and
mov
enter
stos
jge
loope
or
cmpsb
or
mov
inc
rclb
js
shll
push
mov
mov
aam
mov
xchg
nop
lea
sti
fisttpll
gs
ds
roll
mov
les
jmp
test
mov
or
jae
into
xor
xchg
icebp
push
aaa
mov
add
mov
cmpsl
das
out
mov
adc
jge
and
testb
inc
pop
shrl
xorb
bound
cmp
or
xchg
pop
push
les
push
int
xor
mov
mov
mov
cmp
call
orl
cmpsl
inc
data16
xchg
sahf
push
idivb
pop
movsl
hlt
iret
xchg
popf
inc
aad
mov
jo
mov
sbb
aas
outsl
jp
js
adc
or
pop
xchg
bound
cltd
imul
mov
lahf
dec
cmc
cmp
dec
jge
mov
push
or
jne
mov
aam
in
inc
icebp
sbb
in
cmpsl
hlt
pop
int
jecxz
mov
sbb
mov
rorb
iret
mov
xchg
xor
inc
in
filds
xor
jmp
adc
loopne
push
arpl
ja
cmpsl
mov
pop
idiv
ret
cmc
and
lret
fwait
xor
arpl
dec
dec
testb
enter
addr16
adcb
aaa
pop
fs
mov
cmp
dec
je
ret
testb
pop
mov
mov
lds
push
mov
dec
call
xorl
lock
mov
ficompl
xchg
andl
push
add
adc
test
or
shl
xchg
jo
push
lahf
dec
lcall
mov
push
jp
aaa
jbe
rclb
pop
sbb
movsl
adc
dec
and
imul
xchg
add
mov
pop
inc
or
xchg
ljmp
inc
out
pop
in
sub
dec
inc
jbe
adc
fld
hlt
mov
clc
add
sub
das
out
xchg
sbb
push
sub
jmp
lcall
sbb
mov
iret
pop
xchg
pop
scas
push
jl
mov
outsl
lcall
adc
loopne
jmp
or
mov
push
add
cld
mov
lea
lahf
enter
push
in
add
leave
out
cmp
dec
dec
cmp
jae
ja
dec
sbb
popa
arpl
icebp
ret
out
ja
add
js
mov
loope
lcall
rorb
pop
mov
sbb
fsubl
int3
push
mov
mov
add
push
aaa
les
rorl
pop
adc
iret
orl
mov
add
jbe
pop
imul
mov
or
lret
dec
sahf
loopne
into
mov
cmp
fs
out
dec
daa
sub
ss
mov
scas
lods
push
in
ljmp
adc
inc
int
adc
or
test
idivb
push
or
push
faddl
mov
icebp
popf
stc
lods
int3
popaw
lea
jbe
mov
repz
insb
stos
pusha
add
insb
pop
pop
jg
ret
xchg
jl
xchg
ljmp
push
mov
jbe
lahf
and
mov
stc
pop
cmpsb
mov
jmp
inc
mov
cmp
jg
repnz
cmp
into
push
push
cli
jle
mov
imul
add
pushf
into
push
and
ret
lcall
cmpsl
pop
flds
faddl
popa
scas
pop
inc
sbb
mov
loopne
popa
stos
push
jns
jo
xchg
jbe
icebp
jne
pop
out
cmc
xor
arpl
cld
lahf
xchg
jmp
aad
fsub
adc
cmp
sbb
and
stos
pop
jge
dec
pop
addb
jbe
sbb
push
pop
or
push
sahf
push
xlat
insb
lods
pop
inc
push
fldl
std
ds
stc
cmp
flds
lret
cmp
xchg
cmpsl
call
out
fisubs
jns,pn
data16
aas
ja
test
jbe
pop
fsubrs
outsl
adc
fcoms
mov
fsts
in
dec
and
movhps
mov
xor
jg
pop
jae
mov
out
mov
arpl
sbb
neg
jbe
test
inc
pop
jecxz
int3
xlat
mov
mov
arpl
sarl
pop
and
sbb
test
insb
insl
je
addb
xor
dec
push
insl
test
adc
jge
jne
mov
imul
lds
insb
mov
mov
jp
mov
sbb
mov
mov
sbb
stos
imul
add
mov
lcall
xchg
jne
push
xchg
mov
pop
adc
out
sti
stos
stos
mov
sti
loopne
loopne
push
and
subb
ljmp
popa
cmp
mov
stos
lret
dec
mov
mov
outsb
adc
mov
mov
mov
nop
push
insl
push
dec
and
mov
fistl
pop
test
sbb
or
sbb
pop
dec
mov
daa
xchg
xchg
sub
lds
push
rcrb
stos
repz
and
jae
xlat
imul
sahf
mov
lcall
fiaddl
jl
pop
jne
xchg
and
stos
ljmp
lds
push
xchg
pop
bound
movl
iret
push
fcoml
jmp
sbbb
fnsave
call
sti
mov
in
popf
mov
lcall
fstl
lret
cli
lods
cltd
pop
daa
arpl
xor
mov
in
sti
mov
add
or
int
xchg
push
push
jmp
outsb
negb
inc
loopne
mov
js
jl
stc
sub
mulb
sbb
mov
js
mov
or
movsl
cmpsl
and
mov
dec
clc
inc
fidivrl
mov
xchg
jg
rcr
leave
adc
mov
in
cld
inc
mov
mov
ljmp
fwait
ret
addr16
jno
cli
sub
push
ja
lock
jmp
adc
mov
sbb
popl
test
lock
les
cltd
xchg
lret
sub
dec
test
lret
repnz
or
cmc
add
pop
cli
adc
mov
dec
cmp
sub
mov
loopne
iret
mov
rorb
js
test
dec
sbb
jae
fistpll
out
movsb
es
push
mov
fs
jbe
lods
mov
rol
das
inc
mov
and
jnp
xchg
dec
xor
mov
lret
push
lret
ds
fbstp
clc
or
pusha
fildll
lret
adc
aas
push
ret
pop
pop
imul
pand
lcall
sahf
add
sbb
or
enter
lret
dec
mov
xor
push
dec
scas
insb
cli
pop
pusha
hlt
xchg
ja
aam
jns
pusha
lret
mov
je
and
jnp
jecxz
iret
das
cmp
push
addr16
loope
test
stc
sub
fwait
stos
repnz
xchg
fisubrl
jbe
loop
jnp
cmp
fistpll
hlt
es
add
and
lcall
xor
mov
test
jo
inc
push
or
mov
popa
test
bound
stos
fcmovnu
leave
fadd
or
adc
and
subl
hlt
fwait
inc
lods
int
pop
push
or
mov
dec
cmp
mov
cmpsl
push
xchg
pusha
sub
mov
repnz
xchg
mov
mull
imul
inc
mov
test
sti
aam
xchg
pop
mov
xchg
jne
sti
add
repz
mov
cmpl
addl
repz
movsb
mov
pushf
sub
aad
ja
xchg
stc
mov
sarb
inc
sub
mov
cld
iret
jle
cs
jbe
aas
jecxz
xchg
loop
dec
and
add
roll
and
in
adc
lret
pop
mov
loope
enter
mov
fdivl
cs
inc
les
fwait
int3
hlt
sbb
adc
and
jl
jbe
add
call
xor
addr16
adcl
mov
xor
add
push
pop
push
scas
adc
xchg
out
push
stc
dec
data16
jns
mov
int3
or
or
repnz
jno
fimuls
or
dec
stos
mov
dec
iret
add
pusha
mov
outsl
ja
lock
adc
mov
and
popa
jae
push
or
aaa
ljmp
xor
lret
lahf
xor
inc
out
daa
push
mov
shld
repz
dec
cmp
mov
sub
loope
jg
or
pop
outsl
xchg
mov
xchg
or
cltd
add
outsb
sbb
std
push
leave
stos
adc
mov
lock
cmp
mov
icebp
sub
push
mov
add
pop
sub
add
xchg
mov
xchg
pop
xchg
out
push
lods
inc
fadds
imul
ficoms
iret
xor
add
jecxz
pop
pop
bound
adc
arpl
mov
pushf
xor
xchg
shlb
test
inc
mov
push
adc
add
sub
and
andb
mov
lds
push
sahf
xor
test
push
mov
cmp
pop
sbb
push
push
cs
imul
mov
aam
or
addl
inc
sbb
pushf
adc
jno
rorl
mov
hlt
jb
jecxz
nop
inc
dec
leave
xchg
mov
call
popf
sar
test
jmp
in
testb
call
inc
je
dec
mov
call
or
cmp
jmp
mov
cmp
sbb
into
movsb
loop
ret
mov
dec
shlb
cmp
repz
cmpsl
mov
mov
fst
int
arpl
inc
jae
imul
adc
test
nop
popf
lret
ret
mov
ficoml
jmp
cmp
pop
xchg
mov
call
scas
dec
pop
test
cwtl
sbb
pop
lds
inc
mov
cmp
mov
mov
dec
jmp
ljmp
mov
jmp
dec
pop
cmpsl
inc
dec
enter
fistl
sub
pushw
aas
inc
andb
dec
shrl
notb
rorl
stc
gs
ficomps
add
punpckldq
mov
sti
test
dec
mov
data16
push
ja
jle
vphaddbq
lahf
xor
or
or
or
push
ret
mov
push
out
cmp
cld
leave
rcr
in
enter
dec
arpl
pusha
flds
mov
push
leave
nop
rorb
stos
mov
jecxz
aaa
mov
adc
pop
or
fstpt
xchg
cmc
mov
pushf
lahf
loop
bound
cwtl
rol
and
movsb
testl
lock
mov
lcall
mov
jp
push
inc
jp
scas
popa
jle
jmp
in
ret
int3
push
movsl
rcll
mov
sbb
or
shll
dec
sbb
int
sbb
movsl
loop
push
adc
inc
inc
cld
or
fstpt
adc
shlb
add
sub
fsubl
mov
mov
pop
and
mov
dec
cmc
out
sub
lret
pop
pop
xchg
mov
inc
adc
pop
shlb
in
fs
je
stc
lods
je
aaa
mov
and
les
je
push
ja
aaa
xor
mov
adc
pop
mov
insb
lahf
push
pusha
xchg
arpl
adc
mov
adc
popf
adcl
loop
push
push
mov
push
sahf
push
add
xchg
mov
dec
lods
cmc
add
adc
cmp
xor
xchg
pop
outsb
pop
test
pop
adc
sub
jae
int3
stc
cltd
sbb
adc
mov
data16
jecxz
ss
xchg
sbb
repnz
jp
mov
add
sub
mov
push
xchg
sarb
je
pushf
adc
mov
rorl
out
fiaddl
lahf
mov
scas
xchg
aad
popf
add
sbbb
lahf
out
pusha
push
adc
mov
decb
iret
lahf
fbld
rcll
sbb
dec
sahf
imul
scas
ret
push
adc
bound
mov
adc
shrb
dec
scas
scas
outsl
dec
and
inc
mov
xor
stc
mov
cmpsb
dec
movsl
adc
dec
insb
aaa
fcomps
jns
sbb
fistpl
test
jbe
ret
xor
arpl
xchg
jmp
lods
lds
in
andl
cld
sbb
mov
out
scas
repz
adc
mov
into
push
jmp
push
ud1
out
or
cmp
sti
arpl
and
xchg
pop
scas
or
xchg
in
xor
leave
dec
bswap
aas
les
sbb
jle
popa
frstor
xchg
sub
dec
sbb
movsl
inc
or
cmpsb
push
call
aam
stc
scas
es
cld
sub
aaa
push
xor
mov
xchg
movsl
sub
and
adc
xor
mov
jae
inc
cmpsl
jo
and
xor
or
adc
inc
inc
mov
mov
imul
test
jae
mov
xchg
test
cmp
sarl
xor
adc
ja
cmp
leave
xorb
shl
lods
and
insb
adcb
jmp
xchg
fiaddl
push
lahf
fsub
fs
out
mov
imul
enter
repnz
push
fwait
int3
addr16
dec
push
test
jge
pop
mov
stos
xchg
pop
imul
andb
push
mov
gs
out
loop
clc
cmp
cmpsb
icebp
add
imul
dec
lret
jecxz
dec
adc
mov
xor
jle
adc
mov
js
jbe
out
outsb
adc
xor
iret
rolb
stc
ja
sarl
and
pop
xchg
lock
popf
sub
inc
lea
jg
cwtl
or
outsb
dec
mov
fnstcw
pop
push
std
cwtl
ret
ret
cmp
outsb
push
xor
into
cmp
xor
cmp
mov
or
cli
mov
push
aas
leave
or
cmp
pushf
scas
insb
sub
jmp
jbe
mov
pop
repnz
lods
sub
rol
rcrb
icebp
cmpb
test
xchg
pop
mov
push
dec
cltd
xorb
mov
pop
push
adc
push
add
pop
inc
mov
xchg
int
or
inc
aas
and
pop
ja
data16
shrb
in
adc
dec
pop
orb
pop
adc
clc
in
fmul
pop
outsl
in
xor
sub
mov
into
int
push
sub
repnz
dec
int
lahf
mov
add
jmp
out
dec
sub
in
add
push
xchg
cmp
fcoms
push
cmp
cltd
mov
inc
pop
out
clc
mov
std
dec
mov
stc
aam
cmpsl
insb
ds
push
push
dec
movsb
fsubrp
sub
dec
rclb
mov
push
mov
push
push
or
push
mov
rcr
push
mov
daa
jbe
mov
aas
movsl
repnz
sbb
xlat
mov
push
sbb
out
mov
stos
xorl
mov
adc
sbb
mov
popf
shrb
push
adc
xchg
sbbb
loopne
nop
ret
inc
inc
pop
rol
mov
xchg
xor
les
fwait
roll
sti
popa
je
push
inc
inc
cmp
add
mov
imul
sub
push
adc
inc
pop
sarb
xchg
cmp
scas
call
xor
xchg
das
fs
add
and
aad
rcll
fs
test
in
cld
adc
cmpb
movl
mov
cmc
pop
adc
pop
jg
dec
jg
mov
imul
in
in
mov
jns
mov
push
xor
add
inc
push
int
mov
sahf
jne
jb
sub
jmp
int3
cld
leavew
and
leave
mov
lods
fbld
jle
adc
inc
bound
jmp
dec
js
frstor
jmp
lds
shlb
mov
sub
and
mov
in
sub
scas
sub
subb
cwtl
lcall
lock
insl
int3
push
xchg
xor
mov
mov
pop
jmp
add
leave
mov
subb
es
das
lret
jbe
ds
mov
sub
out
loop
adc
pop
sub
push
jo
lods
rorb
shlb
rorl
loopne
rcrl
xchg
shr
shll
js
sbb
push
mov
ljmp
xchg
inc
pop
mov
push
pop
popf
mov
leave
or
lods
push
fucomp
fidivl
ret
pop
ljmp
leave
cmp
or
js
mov
add
mov
cli
add
pop
dec
or
adc
je
pop
xchg
mov
push
inc
xor
cli
outsb
das
stc
xchg
push
jnp
sub
mov
push
jne
mov
popfw
xchg
cmp
pop
enter
add
sbb
jnp
rolb
and
mov
clc
lcall
repz
xchg
jo
adc
jmp
stos
bound
out
jbe
jmp
mov
psrlw
jecxz
popf
jae
cmp
inc
jns
out
dec
sub
pop
rcr
sub
in
cmc
mov
enter
sub
mov
adc
jne
dec
adc
push
add
cmp
pop
xchg
out
lea
jne
jb
leave
xchg
ljmp
and
lea
stos
push
lahf
sbb
xchg
push
and
pop
sub
xor
int
adc
push
into
mov
sbb
xchg
jae
or
fs
mov
lods
imul
push
nop
mov
inc
popa
mov
pop
jo
test
lods
daa
mov
cmp
sbb
xchg
adc
pminub
daa
pop
pop
jmp
cld
mov
out
int3
mov
push
mov
add
out
sub
dec
in
adc
pop
arpl
insl
sbbb
sar
xorb
outsb
test
std
cmp
call
fimull
pop
in
xchg
xlat
adc
es
xor
mov
test
fimuls
ja
outsb
add
notl
pop
insb
lret
test
aas
mov
aaa
fmul
or
fwait
movsl
mov
ss
and
ds
sub
out
mov
and
cmpsb
jb
ss
js
test
jecxz
ds
stc
xchg
mov
lret
xchg
inc
subb
or
push
lret
mov
push
adc
lret
outsb
jne
push
inc
mov
pminub
in
les
and
dec
mov
adc
mov
inc
out
add
push
out
cmp
and
dec
mov
mov
mov
jmp
xlat
jg
cmp
inc
add
testb
sub
mov
cmp
ss
pop
mov
adcb
sarb
icebp
or
sbb
adc
push
xchg
repnz
sbb
filds
mov
jge
or
arpl
adc
leave
push
push
enter
in
adc
xchg
sub
movsb
dec
pushf
shrb
push
ja
dec
push
bound
push
fmul
jno
in
outsb
push
inc
and
or
inc
push
jae
xchg
inc
fildl
addb
sbb
fs
es
mov
push
scas
mov
adc
add
and
cmpsb
jp
lret
and
inc
aas
rcrb
cmp
mov
inc
or
ds
cmpsl
dec
mov
mov
sub
jbe
mov
jae
cmpsl
rcrb
out
sub
adc
jb
cmp
movsb
enter
popf
cld
xor
mov
and
xor
and
fbld
xlat
cmpb
iret
or
or
or
pop
mov
enter
push
add
arpl
rcrb
pushf
rcl
or
imul
xchg
sbb
fwait
ss
push
sub
mov
pop
aad
outsl
add
imul
gs
inc
loope
fimuls
jp
inc
fs
mov
bound
sahf
push
sti
mov
inc
sub
loope
mov
icebp
add
jno
jmp
scas
inc
inc
in
and
sbb
stc
or
shl
mov
mov
jnp
mov
or
loopne
outsl
mov
gs
mov
sub
mov
sahf
and
daa
mov
cmpsb
xchg
inc
filds
cmpsl
sarb
push
mov
loopne
push
inc
mov
fiadds
out
addb
lods
andb
push
loop
shlb
data16
add
push
testb
push
mov
es
loop
shlb
data16
add
push
testb
push
mov
es
jecxz
shlb
xor
add
push
repnz
loop
adc
es
loop
push
jbe
cmpsb
int
mov
roll
mov
jne
inc
cwtl
push
pop
and
adc
sub
decl
lds
aad
movsb
jp
pop
xchg
pop
xchg
test
mov
push
call
add
cmp
or
push
aad
rorb
test
mov
mov
push
icebp
and
fcoms
push
mov
pop
jmp
shrl
add
mov
push
pop
adc
sahf
inc
sahf
pusha
sub
rclb
inc
gs
and
ret
mov
lods
cmc
adc
hlt
cmp
sarb
push
les
inc
mov
xchg
ficoms
inc
ficomps
jg
hlt
xor
xchg
sub
test
test
push
mov
xor
mov
add
push
xchg
mov
push
ret
lock
xchg
clc
movsl
xor
pop
pop
scas
loopne
test
sub
loopne
cmp
aad
idivb
mov
dec
jne
cmp
arpl
sti
addr16
pop
push
mov
xlat
in
icebp
jne
dec
sub
test
popa
mov
push
jmp
rcll
lds
aad
movsl
pusha
mov
test
les
or
add
adc
bound
popa
sub
jl
push
divl
sbb
or
clc
jo
push
mov
imul
xchg
adc
loopne,pt
ror
aam
in
lock
enter
sub
cmp
or
sbb
push
test
test
mov
push
call
add
cmp
or
sbb
push
test
test
xchg
pop
aaa
sub
xchg
test
lcall
cmc
js
in
add
fiadds
ds
mov
bound
in
sbb
jns
xorl
mov
mov
inc
sbb
fisubrs
aad
bnd
sub
pusha
in
nop
xor
in
push
xchg
mov
fiaddl
flds
mov
adc
pop
jge,pt
out
cwtl
cmpsl
pop
adc
adcb
jg
pop
rol
lret
call
push
icebp
mov
insl
push
xor
ja
jg
movsl
dec
js
leave
aas
loopne
stos
je
stos
std
xchg
inc
dec
iret
sti
lret
shll
js
fstpl
frstor
test
xor
in
ret
loopne
dec
pop
dec
stos
into
fists
aas
adc
in
out
mov
loope
xlat
xlat
inc
shlb
or
mov
loop
add
and
lret
mov
mov
movsb
pop
ljmp
adc
ret
leave
test
lods
lods
fwait
popf
cli
mov
mov
call
push
stos
scas
pop
add
lods
in
cs
pop
lahf
push
push
mov
fsubrs
icebp
sbb
mov
out
fs
ja
stos
adc
and
imul
xor
xchg
imul
jg
sub
les
icebp
lahf
adc
int3
mov
sarb
xchg
mov
iret
jecxz
pop
cwtl
dec
push
rcr
iret
ret
add
cmc
pop
je
jns
pop
in
lods
pop
lahf
add
int3
fprem1
jae
push
enter
loopne
cmpsb
dec
ljmp
mov
faddl
imul
jne
cmc
push
dec
fwait
ret
sub
cmp
repz
sahf
test
push
ret
mov
stos
jp
cmpsl
bound
testl
in
and
movsb
ret
es
ss
add
in
lea
aad
sub
dec
or
in
rol
stc
adc
call
inc
call
dec
push
mov
shlb
pushf
xchg
mov
mov
adcl
dec
lods
and
jp
stc
xchg
lret
daa
mov
scas
mov
test
and
fdivrl
test
lret
les
fs
pop
in
flds
cmc
push
clc
mov
subl
shlb
in
mov
stos
add
mov
cs
shll
and
stos
call
in
insb
xchg
push
js
pop
cmp
mov
sbb
insl
jne
rorl
icebp
out
lret
inc
mov
fdivs
bound
push
stos
outsl
add
repz
pop
adcb
out
pusha
inc
movsl
int3
pop
inc
out
and
and
sub
dec
fwait
js
xchg
mov
pushw
cmc
hlt
lea
and
bound
ja
xchg
cli
or
cmp
mov
inc
add
cwtl
ss
jmp
andl
imull
cmp
fistpl
add
data16
mov
mov
add
and
xor
clc
loopne
xchg
xchg
dec
push
sti
pop
mov
add
sbb
or
ret
cltd
mov
cld
cmp
sarl
inc
lret
call
push
pushf
add
add
inc
xchg
push
mov
outsb
das
and
dec
in
repnz
pop
orb
lock
mov
mov
int3
xchg
scas
push
fwait
lock
or
sub
dec
xor
sub
sbb
popa
loop
insl
and
mov
aam
xchg
xchg
inc
sbb
mov
stos
into
fmull
add
xor
pop
cltd
neg
clc
test
aas
xorl
xchg
nop
inc
push
mov
mov
push
dec
idivl
mov
adc
mov
xor
loop
xchg
sbbl
xchg
ret
dec
aas
movsb
mov
cmp
movsb
or
mov
sbb
rolb
pop
loop
inc
test
push
sub
and
mov
andb
leave
xchg
pop
cmpsl
xchg
jae
popf
sub
jge
ret
jno
lahf
je
dec
sahf
xor
fidivl
sahf
mov
clc
push
insb
or
outsb
fnstcw
cmp
pop
add
dec
shll
incb
cmp
orb
mov
rcrb
xchg
pop
mov
sbb
mov
aam
int
movsb
fcoms
lods
xchg
stos
pop
add
push
pop
aas
push
insb
mov
rcrl
arpl
lods
and
sub
ds
adc
sub
jmp
inc
fwait
ret
cwtl
sub
cmpsl
mov
jp
mov
shlb
xchg
pusha
stos
pusha
out
in
call
xlat
pop
sarb
mov
mov
mov
push
jg
outsl
aad
xchg
test
mov
xor
fwait
incl
hlt
insb
in
lret
aas
sbb
or
mov
sub
push
ja
sahf
in
in
mov
adc
xchg
shrb
in
xorl
sar
insb
push
cmpl
mov
stos
sbb
movsl
or
in
lods
cld
xor
mov
jge
push
rclb
repnz
adc
leave
aaa
mov
hlt
xchg
xchg
fildl
jns
lret
stc
push
cmp
mov
xchg
jo
imul
inc
inc
shlb
cwtl
mov
movsb
in
call
push
je
dec
xchg
xchg
not
roll
push
test
shlb
aas
sbb
jb
fdivl
push
aam
mov
andl
lret
test
sub
in
dec
xchg
jno
ret
shlb
out
sub
lds
cli
pop
adc
popa
enter
push
jnp
iret
std
push
jl
pop
add
cmp
test
adc
mov
inc
cld
test
and
push
ja
add
pop
cmc
arpl
insb
icebp
clc
lods
sbb
and
adc
cwtl
pop
jns
cmc
jnp
test
les
sub
outsb
lds
pop
ljmp
xchg
call
fwait
push
ret
sub
bound
shll
pop
imul
addr16
rclb
lret
cwtl
push
jae
in
jmp
and
xor
sub
cmpsb
jne
and
shll
bound
add
adc
xchg
and
push
pop
push
cmc
out
cmp
data16
addl
sbb
fiadds
mov
or
jne
clc
push
lret
std
imul
in
outsb
sbb
jle
addr16
lea
lods
dec
or
or
jl
xchg
shll
dec
or
cmp
fucomi
in
aam
out
adc
gs
fstps
lea
insb
cmp
dec
cmc
jge
xchg
and
push
sub
in
xchg
out
add
sub
jne
testl
mov
repz
pop
scas
cmc
dec
stos
mov
out
bound
and
hlt
scas
dec
andl
int3
push
jne
cmpsb
sub
stc
sub
adc
jmp
dec
cs
hlt
xchg
cmp
sbb
cmpb
das
jno
movsl
gs
in
jecxz
or
rcr
mov
jmp
jns
mov
test
push
inc
dec
mov
add
call
into
and
ret
popa
aad
adc
ficoms
or
int3
push
je
into
push
mov
int3
sub
aas
pop
pop
cmp
adc
adc
mov
push
sar
inc
lret
push
xor
jle
xchg
jle
repnz
push
movsb
stos
icebp
and
mov
mov
xchg
movsl
mov
cld
popa
or
mov
repz
dec
adc
jae
mov
fsubrs
dec
es
mov
xlat
xlat
push
test
ret
in
cmp
and
and
test
jnp
inc
arpl
and
insl
adc
fs
pop
js
jnp
jecxz
xlat
int3
ret
xor
and
add
or
or
mov
dec
les
pop
in
push
idiv
mov
pop
cld
push
mov
push
pop
daa
rcrb
in
mov
mul
cmpsl
mov
jecxz
ret
inc
add
mov
jae
mov
loop
enter
cmpb
push
aad
mov
xchg
xchg
out
insb
cmpsl
jno
cmpl
shll
adc
xchg
mov
rcrl
push
flds
mov
or
nop
shlb
lock
scas
das
lcall
scas
xchg
stos
xchg
cmp
movsb
and
gs
popa
jle
push
push
xchg
loopne
scas
and
test
jne
xchg
cltd
mov
sub
fst
jae
mov
icebp
fists
dec
dec
cmpl
or
sbb
aam
adc
or
or
push
aaa
cmp
nop
js
shr
enter
mov
sbb
cwtl
loope
cmp
xor
and
les
xchg
cmp
call
repz
clc
inc
lret
inc
sub
dec
fistpl
out
lcall
adc
xor
inc
clc
arpl
pop
dec
loopne
je
in
jle
sahf
cmp
imul
jno
xor
mov
into
push
pushf
iret
xor
adc
xchg
lock
and
dec
xlat
stc
out
fisttps
dec
int
out
xlat
dec
jo
adc
pop
cltd
sub
jo
cmpb
sahf
ret
shr
lds
jo
stc
mov
in
pop
mov
xchg
sahf
shr
das
leave
out
xor
mov
pushf
dec
mov
ds
pop
aas
das
mov
push
in
cmp
xor
adcl
out
jmp
dec
mov
filds
fcmovbe
adc
insl
sub
stos
dec
lock
je
loopne
add
mov
push
insb
sti
lahf
sarb
xchg
ret
mov
sbb
or
xor
sub
mov
mov
movsb
push
mov
jns
xchg
lea
mov
mov
push
push
adc
les
lahf
push
in
add
inc
outsl
inc
pop
cmp
cmp
sahf
dec
movsb
pop
mov
in
roll
cmp
sti
xchg
int
adc
push
sbb
out
mov
pop
push
mov
insl
jmp
sbb
insl
cmp
in
lods
mov
push
sar
fiaddl
adc
mov
repnz
insl
loope
jno
repnz
xor
repz
push
dec
mov
mov
outsl
pop
push
cmp
cmp
xchg
mov
pop
lds
push
inc
xor
mov
adc
dec
add
dec
sub
neg
lret
popf
fidivs
sahf
scas
aaa
outsl
scas
out
shlb
mov
cwtl
filds
mov
sbb
cmpsb
cld
adc
jmp
xchg
cmp
push
out
orl
adc
pusha
clc
pusha
sub
pop
mov
xchg
ja
lcall
por
sub
push
fs
xchg
iret
push
nop
repnz
in
sbb
mov
sbb
scas
loope
push
pop
xor
push
fbstp
push
mov
sub
cwtl
xchg
sub
sub
rcrb
add
clc
outsb
lods
jo
fsts
rcrl
mov
enter
xor
into
mov
outsl
dec
call
pushf
jecxz
and
andl
js
nop
cmp
xor
flds
scas
inc
je
fdiv
mov
movsl
sub
arpl
adc
mov
mov
in
fwait
push
lcall
jo
xor
push
and
je
inc
xchg
sti
pop
dec
mov
xchg
outsw
add
cmp
dec
and
sbb
repz
xchg
arpl
pushf
inc
inc
stos
sbbl
gs
frstor
shrb
or
cmp
mov
adc
jns
sub
daa
loopne
incb
pushf
mov
jg
mov
jge
sub
out
fimull
xchg
pop
pop
dec
push
enter
adc
sbb
imul
sub
cld
mov
in
and
in
adc
fs
jmp
mov
mov
ds
push
addr16
test
mov
fisubs
cld
pop
ret
cs
mov
scas
ror
lods
imul
xchg
mov
mov
xchg
aaa
inc
sub
cmpl
inc
and
sbb
xor
xor
mov
cli
repz
jp
adc
test
pop
pop
cld
lds
insb
outsb
gs
xchg
sti
cwtl
cltd
xchg
sbb
pop
enter
idivb
jmp
pop
test
jns
shrl
mov
and
cmp
loope
xchg
ljmp
cmp
push
sub
lock
xor
add
xor
test
sub
jecxz
pop
push
jne
sahf
or
mov
into
mov
mov
mov
xchg
pushf
nop
fisubl
in
loop
cmpsb
mov
xor
push
mov
out
shll
xchg
xchg
pop
outsl
xorl
dec
cli
push
push
sbb
lods
mov
icebp
aam
sbb
sbb
lods
das
adc
sub
cmp
push
fsub
xchg
jb
jl
mov
mov
push
add
cli
add
xchg
jp
imul
stos
xor
xor
imulb
and
cmp
inc
mov
mov
fs
mov
inc
pushf
xchg
sub
cltd
das
push
fisttps
jbe
mov
adc
pop
testb
gs
clc
add
cli
sub
xchg
pop
xor
adc
jbe
or
inc
lock
cmp
ljmp
aad
mov
fwait
mov
dec
xor
inc
lret
cmp
xchg
cs
mov
or
in
scas
test
inc
imul
sti
mov
arpl
or
add
jns
cmp
xor
jne
pop
and
or
loop
dec
mov
call
out
loop
inc
pop
jmp
jb
cmp
jle
and
shlb
xor
lret
mov
mov
pop
jmp
push
mov
loopne
mov
test
inc
push
cmp
in
dec
shrl
mov
aam
mov
scas
mov
xchg
mov
shld
sub
lods
stos
sbb
push
ja
or
mov
repnz
mov
fisttps
mov
cli
or
mov
fdivs
mov
shrb
xchg
dec
idivl
in
push
ret
add
or
hlt
push
mov
or
les
mov
dec
iret
dec
pop
push
loopne
cmp
repnz
fdivr
int3
insb
lret
mov
cmp
fucomp
sahf
mov
sbb
mov
add
test
pop
loope
mov
fmuls
ss
mov
jle
push
subb
cmp
push
pop
arpl
mov
cmpb
std
xlat
sbb
int3
loop
insb
xchg
mov
sub
xchg
push
or
xchg
dec
pop
sbb
adc
xchg
push
sbbl
test
or
jmp
ret
setl
or
into
sbb
sbb
dec
jmp
push
aad
jb
pop
pop
cmc
loop
mov
fcmovnu
cli
xchg
xor
das
sbbb
in
xorl
data16
xchg
push
jno
push
rcr
mov
pop
or
popa
and
dec
mov
fnsave
imul
add
inc
mov
jno
jecxz
jmp
xor
icebp
xchg
push
test
lcall
into
mov
pop
dec
loop
int3
stc
jno
sub
xchg
mov
mov
mov
cwtl
out
pop
adc
push
xor
roll
es
adc
jecxz
aad
test
roll
inc
stc
sub
testb
loopne
adc
xor
test
lock
int3
stos
jno
fiadds
cmp
and
pop
push
mov
and
sub
test
inc
dec
push
xchg
or
cmp
or
addr16
cmp
xor
dec
sub
fs
pop
popa
mov
mov
mov
sbb
adc
pushf
sub
cltd
adc
fs
out
iret
fsubl
lds
movsl
pushf
inc
pcmpgtd
enter
fisttpll
int3
cli
clc
repz
das
mov
sub
iret
jns
ja
cwtl
adc
into
imul
cmc
jl
or
inc
push
jbe
lods
sar
adc
lds
imul
xchg
mov
push
out
mov
mov
int3
pop
xchg
shll
mov
add
jbe
sbb
icebp
and
incb
into
leave
fiaddl
xor
rol
sub
loope
out
xor
test
movb
jne
jl
loopne
loop
daa
psllw
mov
jl
out
addr16
test
mov
hlt
out
mov
lock
lods
sbb
sub
inc
mov
sub
mov
dec
es
push
xchg
sub
push
inc
sarb
lods
js
ja
sub
and
jle
enter
push
push
mov
fadd
cmp
mov
inc
repz
das
js
scas
fs
fnstsw
mov
add
sbbl
and
push
cld
jnp
push
outsl
cmc
repnz
testl
sub
stc
dec
adcl
dec
out
stos
out
pop
mov
xor
pusha
je
jmp
int
je
adc
and
fwait
dec
and
ret
pop
lret
and
js
lock
cmp
pop
mov
cs
subl
fucomi
loopne
pop
xor
cmovae
in
dec
and
mov
and
sarl
aas
pop
sbb
sti
xor
cltd
jae
xchg
adc
xor
fstl
sub
sbbb
stc
outsl
xchg
inc
cmp
and
mov
sub
and
xlat
pop
imul
aas
pop
sahf
and
mov
sub
push
cltd
cmc
lcall
jne
rorl
cmp
lods
rcrb
mov
push
xor
mov
test
test
xor
mov
enter
fcoml
add
popl
pop
andb
sub
mov
scas
test
test
test
loop
sbb
or
cmp
and
push
xchg
repnz
stos
push
ljmp
and
dec
imul
aaa
and
inc
xchg
xchg
pop
test
and
pop
dec
push
mov
xor
push
pop
aam
fwait
dec
sub
pop
xchg
xorb
xor
sbb
outsb
and
dec
int3
outsb
decl
pop
gs
dec
mov
fdivrl
nop
into
mov
jmp
scas
ret
andb
xor
cmp
int
adc
insb
cwtl
aaa
aas
cmpsl
out
push
test
in
mov
xor
mov
mov
pop
jle
mov
pushl
push
in
push
pusha
fisttps
push
xchg
leave
cmp
mov
das
clc
aad
add
add
push
stos
popl
ljmp
adc
popa
jge
hlt
add
test
xchg
and
cmpsl
or
std
pop
cmp
xchg
jmp
movsl
loope
inc
ret
idivl
xor
mov
push
adc
jo
dec
leave
mov
aad
mov
add
arpl
ss
jecxz
and
dec
or
ds
js
or
xchg
imul
and
push
cmp
iret
int
jno
outsl
in
fisttpll
push
mov
insl
cwtl
mov
lret
repnz
or
repnz
jle
mov
jo
cs
jne
xor
stos
mov
sub
push
adc
dec
mov
mov
popa
push
inc
jmp
ds
ja
pushf
movsb
jae
iret
fnstsw
or
fstps
int3
lea
lret
and
add
std
outsl
mov
aad
mov
lret
loope
mov
mov
mov
adc
rorl
add
jl
xchg
mov
rcll
mov
xchg
push
rcr
add
cmp
in
mov
fcoms
enter
cmp
xor
in
mov
dec
pop
lods
dec
sub
imul
ja
and
fisubrs
xchg
andl
xchg
and
xchg
dec
das
inc
jmp
mov
mov
les
and
scas
sbb
gs
rolb
les
into
xor
movntq
std
cmpsl
outsb
mov
inc
scas
mov
ja
rorl
xor
xor
shrl
xor
stos
daa
jle
push
fwait
pop
mov
sub
int
lahf
aam
push
sub
dec
mov
sbb
mov
sbb
pop
jbe
xchg
push
stos
insl
lahf
push
aam
mov
fidivrs
dec
xor
insb
dec
mov
repz
stos
add
loopne
mov
xor
dec
enter
sbb
pop
dec
adc
xor
out
les
add
sub
sti
mov
subl
pop
mov
adc
lods
fidivrs
cmpsl
pushf
xor
fcmovu
push
iret
mov
pop
lea
cmpl
lret
imul
pop
push
pop
mov
addb
call
add
cmp
or
sbb
push
test
test
mov
push
call
add
cmp
or
sbb
push
test
test
mov
push
call
add
cmp
or
sbb
push
test
test
mov
push
ljmp
aad
in
pop
mov
sub
cmpsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
repnz
cmc
lods
mov
dec
pop
outsl
xchg
push
add
add
pop
add
add
add
add
add
add
add
add
add
iret
add
adc
sbb
push
add
add
adc
push
add
add
add
add
add
cmp
mov
gs
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
test
popa
add
popf
add
xchg
add
add
add
add
sub
add
cmp
mov
mov
mov
and
and
adc
sub
xchg
arpl
push
add
jo
mov
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
add
lea
flds
add
add
add
adc
add
add
int
and
imul
cmp
mov
dec
add
add
add
add
add
mov
and
add
add
add
add
roll
cmp
add
add
add
sbb
dec
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
jae
or
and
add
pop
outsl
add
add
add
push
add
add
roll
add
add
add
add
add
mov
add
mov
add
or
add
mov
dec
add
lahf
add
add
add
in
add
add
int
mov
add
add
add
add
adc
fiaddl
inc
add
add
mov
push
add
add
add
add
add
push
mov
repz
dec
add
add
add
add
incb
popa
add
leave
add
xchg
or
flds
add
popa
add
leave
add
add
pushw
loope
mov
jno
sub
add
add
rolb
filds
aad
roll
add
mov
inc
add
add
and
add
xor
add
add
add
add
mov
xor
lea
xor
ss
add
add
add
add
mov
inc
add
adc
roll
movsl
add
leave
add
add
add
cmp
dec
add
add
add
add
add
add
add
add
xchg
add
add
add
pop
add
add
add
dec
add
add
add
mov
add
int3
cmp
dec
inc
xor
cmpsb
fdivrs
rcl
xchg
in
adc
aam
mov
sub
mov
push
gs
adc
lock
pop
test
jnp
incl
mov
inc
add
out
push
cli
repnz
fbld
sub
aad
mov
xor
sub
js
dec
int
je
xor
ret
mov
or
stc
call
fadd
mov
adc
clc
or
or
sarl
arpl
pop
loop
ficomps
decl
test
sti
test
lods
cmp
adc
ljmp
mov
xchg
mov
push
mov
loope
bound
into
push
test
shrb
sarl
push
shl
cli
mov
inc
popf
dec
clc
push
adc
or
or
test
mov
xor
imul
dec
addr16
movsb
mov
sbb
inc
adc
jmp
push
mov
adc
mov
jae
movsl
pop
sub
iret
mov
rcll
adc
push
mov
stos
sbb
cs
lds
mov
pop
int3
and
cmpsl
xlat
lock
fisubs
or
sbb
mov
shlb
jb
mov
mov
mov
inc
mov
or
push
mul
xor
ss
add
xor
adc
mov
and
or
lds
sbb
sbb
ret
dec
imul
test
jmp
xor
sbb
test
sbb
inc
icebp
psraw
das
push
jle
lret
and
jnp
cmp
mov
inc
subl
bound
and
repz
jne
push
push
faddl
popa
mov
sbb
negl
pop
xor
popf
inc
jl
jb
daa
test
in
ja
repnz
std
stos
mov
rcrl
aam
fiadds
xchg
mov
mov
test
inc
lahf
push
aam
cld
or
jns
xchg
leave
sti
jmp
adc
hlt
loopne
fiaddl
fildll
movsb
mov
dec
mov
mov
xchg
enter
jns
adc
popf
decb
fidivrs
add
and
xchg
adc
jno
mov
in
ds
jle
sub
insb
pop
jl
add
ret
dec
nop
icebp
insb
es
sbb
ss
inc
movsl
aam
dec
inc
or
lds
push
inc
or
sbb
mov
push
push
jne
pop
or
sub
inc
inc
pusha
push
loop
push
dec
adc
add
jns
icebp
jo
repz
cmp
mov
adc
dec
jle
repnz
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
