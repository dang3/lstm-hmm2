call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
test
mov
add
jae
pop
call
fidivrl
ljmp
std
stos
dec
mov
mov
or
sbb
sub
cmp
lcall
sbb
or
mov
sbb
push
clc
push
enter
xorb
stos
sub
leave
pop
or
or
sbb
adc
fdivr
mov
xor
pop
jno
push
scas
fcomip
out
inc
mov
push
out
repz
imul
add
mov
adc
sbb
aaa
or
lock
stos
push
cli
hlt
andb
pop
mov
xor
aad
adc
imul
rorl
mov
das
cwtl
or
in
sub
daa
fcomip
mov
add
xchg
dec
cmpsl
inc
xchg
or
cltd
in
outsb
fnsave
or
mov
idiv
fdivrs
lcall
ds
inc
xchg
out
fbld
popf
loop
scas
mov
and
jmp
cli
sbb
jge
mov
jns
pop
mov
or
pop
clc
sub
sbb
sub
xor
in
ljmp
xor
sub
loope,pn
icebp
test
cmp
fwait
dec
mov
or
or
dec
std
sbb
sarb
arpl
dec
fdiv
push
fwait
dec
stc
or
adc
sub
imul
dec
call
cmp
lret
cmp
or
sbb
dec
mov
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
dec
mov
icebp
ret
filds
jne
dec
mov
push
mov
imul
and
jge
or
and
test
enter
adc
dec
mov
xor
daa
call
or
inc
jg
inc
pop
ljmp
lods
jno
lock
mov
sti
rcrb
pushf
mov
pop
inc
jg
xor
mov
shufps
add
jb
jo
or
das
je
pop
jle
fildll
test
icebp
mov
mov
popa
in
sbb
dec
dec
shll
xchg
jo
or
or
inc
lock
bound
push
lret
out
mov
pop
sbb
xor
mov
pop
out
std
daa
loop
xor
int3
push
iret
xlat
sbb
mov
sbb
ds
outsb
fwait
jecxz
push
xor
push
mov
out
icebp
push
sub
pop
mov
jb
sub
ret
js
push
fidivrs
shll
or
call
adc
dec
outsb
jg
insl
stos
outsb
fldl
and
pop
jnp
inc
xchg
or
xchg
iret
bound
jbe
outsb
sub
jbe
lea
stc
cmp
into
mov
jns
cmpsl
pop
adc
push
rcl
andb
in
mov
shl
add
sbb
das
jae
int
outsl
cli
pop
loopne
sub
mov
enterw
sub
add
lcall
fcoms
sbb
mov
cwtl
out
popa
cmp
jmp
pmaxsw
imul
nop
out
dec
xchg
mov
shl
inc
mov
inc
nop
sahf
and
xchg
orb
push
pop
lret
loopne
fstpl
push
mov
movsl
loopne
adc
mov
mov
stos
ja
jle
cmovns
js
adc
movsb
cmp
adc
cwtl
jb
fldt
adc
sahf
frstor
jp
xor
lods
adc
push
sub
mov
jl
lds
sub
and
inc
pop
sbb
pushf
lret
add
push
sub
xchg
cmpsb
int3
mov
add
sbb
movsl
fdiv
cmp
cmpl
add
lock
mov
mov
inc
aaa
mov
adc
add
pusha
xor
sub
add
or
lret
rcll
push
sahf
lahf
in
cs
lock
aad
xor
sub
rcrb
mov
add
pop
enter
mov
out
cmp
sbb
call
mov
enter
or
pop
fcmovne
jne
call
cmc
inc
jmp
or
sbb
push
xchg
jb
loop
or
cmp
in
adc
ds
mov
dec
jl
in
repz
xchg
mov
ss
lds
push
out
push
rclb
sbb
push
mov
pop
sbbb
bound
imul
fidivs
dec
insl
inc
jp
cmc
les
leave
daa
pushf
jmp
push
push
add
mov
xchg
mull
pushf
and
js
cld
movsl
out
cmp
push
dec
mov
hlt
push
stos
push
mov
int3
sbb
dec
dec
scas
insl
sub
jne
insb
std
mov
test
fwait
sahf
pop
out
test
fisttpll
xorb
pop
and
xchg
les
push
pop
dec
jp
fstl
in
aam
cmp
cmp
mov
lock
lods
aad
mov
icebp
mov
filds
lret
jno
push
ficoml
lds
call
outsl
sub
adc
adc
xor
std
cmp
stos
sub
test
cwtl
imul
or
xlat
mov
enter
dec
out
pop
das
add
inc
xor
or
jp
push
nop
jb
inc
cltd
pop
cmp
rcr
aam
jb
rcr
mov
sahf
outsb
and
jecxz
mov
push
pop
mov
push
in
or
aas
adc
sbb
jnp
test
call
stos
pop
push
popf
or
ja
int3
or
pop
push
cld
fwait
or
cmp
jecxz
addr16
pop
jmp
aas
mov
loopne
ja
outsl
and
test
xchg
push
mov
xor
adc
es
cs
aaa
sti
mov
and
dec
fcmovnb
std
and
test
fs
jg
mov
mul
mov
pusha
dec
jecxz
mov
adcb
sti
addb
ret
xchg
rclb
mov
sub
inc
mov
mov
leave
lea
cmp
sbb
loope
mov
inc
jg
mov
and
lret
pop
and
rcl
xchg
xor
cli
inc
dec
aas
shrl
enter
xchg
sub
inc
outsl
jne
dec
cmc
icebp
add
mov
sub
jle
pop
and
shlb
fwait
cmp
pushl
mov
sub
ljmp
jo
lds
cmpsb
mov
pop
mov
cs
cmc
sbb
imul
cli
cltd
cmpsb
das
mov
subb
call
sbb
mov
cmp
or
mov
push
aaa
nop
mov
lret
imul
xchg
pushf
jle
sbbl
pop
in
mov
push
imull
dec
pop
xor
aas
inc
xchg
jno
lcall
mov
lahf
sti
mov
fcomp
sbb
mov
mov
mov
insb
hlt
xchg
test
mov
pop
les
loopne
or
sub
mov
jge
push
stc
imul
mov
lret
in
xor
xchg
adc
jmp
push
das
fisubs
mov
test
fnstcw
enter
xor
sbb
adc
outsl
aaa
mov
add
sub
mov
shll
pop
xlat
push
lret
mov
fiaddl
clc
push
orl
mov
push
push
in
push
movsb
jp
rcr
shr
xor
ror
push
das
fbstp
and
sbb
daa
std
inc
sbb
inc
stos
pop
xor
int
mov
inc
mov
rcl
sti
pop
imul
pop
fldenv
rcrl
es
mov
pusha
and
mov
cmpl
sub
xor
lods
sbb
jns
ror
push
ret
js
or
sbb
lahf
cwtl
js
push
in
xchg
pop
adc
lahf
movsl
mov
or
lods
sarb
mov
negb
lahf
int
pusha
leave
fistl
jnp
push
jmp
dec
mov
push
ds
and
fisttpll
xlat
call
jmp
mov
xchg
imul
inc
xlat
pop
adc
fiaddl
mov
in
sbb
mov
adcb
shrb
cmpsb
pop
cld
pop
out
lret
xchg
dec
ljmp
jb
sub
xchg
dec
push
lea
xchg
adc
bound
int3
xor
fisubrl
sub
adc
jmp
fldcw
xor
mov
push
xchg
xor
ja
cmp
jmp
or
aam
push
lret
scas
loopne
sub
push
adc
stos
lods
mov
ret
cmp
fidivl
pop
pop
movsb
pop
aam
mov
ret
or
das
or
push
daa
repnz
pop
dec
arpl
xor
xchg
inc
xchg
push
leave
mov
sbbb
inc
cmp
rolb
fnstenv
sbb
jge
adc
popf
pop
mov
insb
xchg
mov
scas
stc
sbb
inc
ret
fdivrl
les
jno
jmp
pop
shll
adc
push
sub
inc
add
enter
adc
mov
or
cmp
adc
or
lret
jnp
pop
bound
sahf
es
out
push
dec
inc
daa
add
adc
jnp
xor
imul
pop
test
sbb
stos
jmp
fidivl
adc
sbb
push
bound
jle
jnp
xchg
movsl
hlt
movsb
test
jnp
inc
ja
fs
in
push
xlat
out
jmp
js
push
cvtps2pd
jge
cmp
leave
adc
or
mov
mov
testb
hlt
sub
cmp
clc
repnz
jae
les
int
jecxz
fisttps
push
nop
bound
and
adc
shrb
pop
pop
in
inc
movups
out
mov
xchg
jns
sub
add
jns
jb
jle
pop
or
pop
and
jmp
insl
cmp
dec
inc
and
gs
scas
stos
cmp
sbb
int3
adc
lcall
fbstp
mov
cltd
pop
sub
jae
xchg
or
mov
sbb
not
sub
inc
pop
pop
sub
movsb
stc
shll
adc
leave
inc
pop
ljmp
test
xorl
sbb
frstor
push
pop
loop
fidivrs
mov
dec
push
adc
lds
mov
inc
fs
inc
xor
jle
pop
nop
xchg
sbb
int3
aad
mov
cmp
aas
ret
mov
push
shll
pop
push
and
jle
xchg
push
mov
cmp
fucom
pushf
orl
fsubl
xor
rcll
pop
bound
xorb
mov
mov
mov
jmp
cwtl
leave
ficoml
leave
leave
or
add
sahf
pop
sub
cmp
je
pop
jp
pop
xor
out
lcall
out
xor
add
jnp
bound
push
fnsave
daa
add
pop
xor
mov
enter
lods
mov
push
pop
out
xor
sahf
mov
adc
cmp
sub
mov
clc
movsl
or
loope
aas
pop
jmp
sbb
xchg
pop
or
cmc
mov
enter
jbe
pushf
and
push
add
cmpsb
mov
fdivrp
mov
in
enter
lret
add
and
sub
cmpsb
push
add
addr16
adc
jl
inc
pop
jmp
out
sub
cmp
mov
fistl
cld
or
adc
stos
loope
cmp
rcr
clc
mov
push
testb
ret
mov
mov
in
icebp
push
sbb
stos
or
cltd
enter
aam
lods
loop
cs
jns
test
int
mov
scas
jle
mov
push
jl
daa
push
push
cmp
dec
sahf
mov
test
inc
shrb
daa
test
push
rorl
cmp
nop
ljmp
pusha
imul
rcrb
aad
call
push
adc
jns
fs
mov
adcb
add
repnz
out
ss
pusha
sub
enter
pop
loope
jae
cwtl
jg
adc
imul
cmp
and
cli
loope
cmp
fiadds
or
sub
es
bound
ja
inc
addr16
pop
xlat
repz
jo
mov
bound
adc
mov
nop
js
jbe
ret
fistpll
push
int
std
adc
popa
lahf
nop
bnd
cmp
mov
xlat
pop
nop
sbb
xchg
popa
sub
pusha
lock
inc
lods
mov
and
push
dec
add
movsl
jecxz
mov
icebp
sub
ret
dec
xchg
arpl
mov
push
inc
addr16
jmp
popf
data16
insb
aam
sbb
jbe
add
popf
inc
mov
xchg
mov
mov
std
or
pop
inc
pop
xor
cmc
mov
repz
jb
idiv
out
imul
pop
push
mov
div
shlb
adc
pop
in
jae
add
loopne
and
fidivs
mov
adc
and
sbb
pop
outsb
mov
out
sbb
mov
xchg
xor
jae
mov
or
pusha
out
shll
or
push
ret
aad
and
lret
pop
mov
cmp
pop
and
ret
sbb
imul
es
fstl
xchg
jl
int
sbb
cmpb
rorl
movsb
and
mov
cmpsl
mull
nop
loop
and
cs
push
test
insb
aad
xchg
pop
xchg
stc
mov
cmc
ja
mov
out
xrstor
insl
dec
mov
and
xor
mov
cmp
jg
inc
sbb
cmp
adc
adc
rcrl
mov
add
outsb
mov
cwtl
jmpw
mov
push
pop
repz
dec
outsl
ljmp
loopne
or
xor
inc
adc
scas
push
jne
not
sbb
mov
dec
sub
xlat
dec
inc
lahf
js
jo
stos
dec
xchg
mov
push
mov
pop
xlat
lret
xor
test
inc
cs
notl
pop
adc
fiadds
std
out
sti
pop
addr16
inc
dec
movsl
pop
mov
push
xchg
adc
insl
add
adc
inc
add
nop
repz
aas
out
cmp
jl
lret
shll
fisubrs
inc
mov
fimull
xchg
cmpb
outsl
push
push
adc
dec
xchg
mov
and
push
dec
lods
scas
sub
sahf
nop
sub
scas
sbb
mov
outsl
je,pt
dec
cmp
fidivrl
popf
jg
cmpsl
mov
into
inc
ds
adc
stos
out
mov
mov
jae
loopne
cmp
stos
mov
sbb
mov
pusha
pusha
cmpsb
cmc
xor
pusha
push
jb
mov
aam
xlat
or
insb
add
into
shrb
pop
pop
mov
or
xor
sbb
push
and
xor
sub
cmp
imul
pop
not
test
je
mov
push
insb
lock
pop
leave
push
and
fdivrl
aad
add
cmp
xlat
cltd
sub
mov
sbb
outsb
mov
mov
aam
xchg
bound
popa
or
pop
mov
jae
inc
or
pop
xchg
xor
sub
jmp
sbb
addl
cmp
add
popa
js
inc
and
pop
les
nop
sbb
mov
call
in
mov
mov
mov
clc
inc
lcall
in
cmp
cli
imul
mov
lahf
scas
jmp
add
mov
pop
sti
fstpl
mov
jmp
or
push
xorl
enter
idivb
sub
stos
aad
ret
loopne
mov
mov
sbb
adc
out
jl
jae
xor
in
out
pop
jno
test
pop
xlat
lret
dec
dec
dec
cmp
cmp
ljmp
fstps
pop
mov
xchg
mov
cmp
jbe
or
xchg
ds
sbb
pop
jecxz
jg
repz
les
and
aad
xchg
lods
pop
ljmp
repz
dec
sbb
dec
jb
test
pop
dec
lahf
bound
push
push
sbb
ret
xchg
jle
bound
mov
es
std
gs
scas
and
bound
js
or
or
cmpsb
stc
inc
in
repnz
push
xor
sbb
nop
mov
push
fdiv
loope
xor
std
adc
dec
bound
lock
mov
divl
mov
cmp
adc
scas
fldcw
sub
pop
int
scas
sbb
popf
data16
scas
hlt
imul
inc
push
adc
movsb
jg
call
and
faddl
je
ljmp
int3
fisttpl
inc
pusha
stc
sub
adc
sbb
jmp
jne
cmovns
sbb
mov
sarb
sahf
xor
inc
outsb
addr16
pop
cmpsb
gs
cmp
sub
fnstenv
in
cs
dec
packssdw
icebp
in
aad
gs
loopne
cli
cs
dec
stc
gs
push
mov
and
cwtl
xlat
push
stos
lods
shll
xor
arpl
negl
cmp
je
fnstcw
sub
add
mov
sbb
mov
leave
xchg
es
ss
jecxz
fisubrs
mov
aam
enter
sbb
jmp
or
int3
pusha
cli
or
fsub
cmp
mov
cmp
adc
ja
cmova
or
ret
or
jo
xorb
cli
and
icebp
and
ret
adc
faddl
rclb
xchg
xor
je
dec
add
stos
pop
jae
ja
int3
shl
jo
iret
nop
inc
lret
icebp
push
leave
sub
int3
jmp
mov
mov
mov
jo
pop
sbb
mov
fstpl
int3
icebp
xchg
push
push
int3
cvtdq2ps
lcall
fstpt
inc
mov
das
push
jns
ss
jb
add
stc
test
push
test
cmp
insb
sub
jo
in
cwtl
mov
mov
outsl
inc
orl
and
mov
cmp
fsubr
out
test
pop
imul
loope
dec
movsb
ss
lret
cli
test
sub
shll
int3
fstps
adc
sbb
xchg
pop
in
icebp
pop
les
fdivs
lcall
and
add
jmp
jno
addr16
push
mov
fidivrl
lcall
pop
and
pop
jecxz
push
or
je
dec
xchg
outsl
movsb
fsub
mov
cli
fdivl
pop
fisttpll
daa
jecxz
xor
lea
sbb
lock
cmpl
jb
push
cs
movsb
or
dec
xor
xlat
cwtl
push
sbb
cmp
nop
nop
sahf
insb
jae
mov
mov
add
mov
mov
stos
clc
sbbb
cmc
test
dec
mov
ljmp
cmp
ds
movsb
bound
es
sub
sbb
mov
push
sub
inc
xchg
xchg
rorb
fs
leave
popf
rcr
mov
divb
dec
mov
std
cld
xchg
add
stos
dec
mov
xchg
adc
dec
in
mov
pop
jl
aad
ja
pusha
dec
push
mov
sbb
jb
adc
inc
imul
push
sar
mov
and
push
jo
jge
push
dec
stc
lea
in
andl
test
in
sbb
pop
roll
sbb
fildll
adc
stos
ret
or
add
push
repz
push
scas
lds
cmp
sub
sti
or
cmpsb
fidivrs
lods
notb
icebp
popf
add
push
jmp
mov
shll
fwait
pop
fistps
inc
data16
jb
push
jmp
cmpsl
jge
cld
pop
pop
test
push
repnz
or
dec
dec
or
cmp
or
xchg
aam
sub
mov
push
out
cli
hlt
insl
xor
enter
fiaddl
push
out
outsl
sbbb
push
xchg
mov
fnstcw
adc
outsb
lahf
ja
add
clc
pusha
lret
cmpsl
adcl
xchg
push
fisubrs
push
or
mov
mov
outsb
push
iret
add
cmp
fdivs
xchg
jmp
shrb
test
push
fists
xchg
scas
stos
cmp
imul
dec
dec
nop
aam
jge
adc
xchg
sub
inc
sbb
daa
mov
inc
xor
gs
ffree
enter
imul
add
sbb
rcrb
std
mov
sbbb
cmp
cmp
popa
sub
lds
pop
push
pop
lea
jecxz
xchg
pop
mov
pop
test
aad
push
xchg
ret
scas
les
ret
lret
and
mov
lahf
mov
je
mov
jae
addl
push
popa
mov
add
lret
cltd
xchg
xchg
movsl
sbb
stc
mov
jno
scas
or
lods
aaa
call
fisubs
dec
cmc
add
inc
mov
loopne
test
test
cmp
xchg
daa
cltd
sti
pop
rorl
mov
out
out
lods
adc
out
push
in
adcb
scas
mov
pop
in
daa
push
push
sub
mov
xor
mov
aad
mov
jae
jl
ja
rcr
xchg
xlat
ret
jmp
repnz
mov
jle
mov
cmpsl
sahf
stos
mov
inc
in
adc
outsb
stos
or
pop
shll
mov
xor
rorl
inc
pop
fldcw
mov
mov
cmp
jno
das
cs
mov
xor
or
mov
or
cmp
dec
sbb
pop
push
xor
adc
push
or
push
rcrl
lret
enter
lea
push
pop
jbe
pop
sti
xor
les
pop
aam
jmp
stc
and
dec
ret
scas
imul
movsl
popf
and
or
cmp
pushf
mov
in
aas
mov
inc
jmp
cmp
lret
movsb
cltd
loopne
es
adc
sbb
std
xor
in
xchg
sbb
mov
in
xor
hlt
xchg
inc
xchg
loop
or
ss
lock
ss
movsb
push
outsl
xlat
das
pop
xor
adc
shr
andb
push
adc
and
pop
sbb
xorl
push
xchg
sahf
inc
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
dec
mov
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
dec
mov
cmp
jp
or
push
js
enter
test
cmp
or
sbb
dec
mov
test
mov
or
or
sub
mov
xchg
inc
or
outsl
std
loopne
xchg
inc
cmpsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
daa
cmpsb
cmpsl
mov
xchg
xchg
mov
mov
ss
push
pop
push
jbe
data16
inc
inc
push
mov
cmpsl
mov
xchg
not
mov
aaa
es
ss
pop
push
ja
addr16
inc
inc
push
mov
cmpsl
mov
xchg
not
mov
aaa
es
adc
adc
push
and
sub
fucomi
xlat
xchg
jl
repz
hlt
pop
mov
and
sbb
push
outsb
jnp
repz
int3
or
cmc
sub
loop
adc
out
jae
into
mov
inc
push
fmul
dec
adc
mov
xor
out
repz
insl
jbe
xor
ja
inc
pop
clc
inc
leave
jae
jbe
ret
add
jo
cmpsl
xchg
mov
imul
inc
lret
divl
lods
sub
fabs
leave
push
sub
xchg
data16
inc
dec
dec
push
dec
rcrb
xchg
sbb
outsb
out
jg
lods
negb
push
jp
stc
pop
adc
mov
cmp
out
ds
into
add
decb
and
call
xchg
not
mov
aaa
es
ss
push
pop
push
ja
addr16
inc
inc
aas
ret
mov
leave
xchg
mov
sbbb
pop
xchg
aaa
js
arpl
and
xor
call
jecxz
xchg
xchg
mov
mov
insl
dec
dec
outsl
push
bound
or
pop
adc
shl
hlt
hlt
cmpsl
repz
out
xlat
mov
aaa
es
ss
push
pop
push
ja
addr16
inc
inc
push
mov
cmpsl
mov
xchg
not
mov
aaa
es
ss
push
pop
push
ja
addr16
inc
inc
push
mov
mov
push
test
xor
inc
pop
jae
mov
jecxz
pop
ljmp
mov
pusha
aaa
fsubrs
hlt
xchg
cmp
xchg
out
push
dec
subl
inc
mov
lret
nop
sbb
and
mov
mov
xchg
loop
in
jl
cli
jb
aas
fstl
daa
mov
das
inc
sbb
pusha
into
ljmp
mov
dec
sub
inc
stos
repz
jg
mov
xchg
mov
pop
add
mov
add
or
repz
xchg
sbb
pusha
loop
outsb
push
popf
std
sub
sub
pop
and
mov
xlat
cmp
fs
fucomip
mull
adc
push
lret
jne
dec
repnz
or
ljmp
push
cli
add
and
enter
mov
negl
shlb
mov
idivb
cmp
adc
sahf
divb
pop
dec
cs
xor
xchg
jge
mov
mov
imul
adc
addr16
inc
mov
lret
and
mov
gs
sbb
mov
inc
cmc
shll
cmp
movsl
out
mov
add
hlt
sbb
insb
cmc
aad
mov
push
mov
loop
fnsave
push
mov
mov
aaa
or
imul
xchg
ds
mov
push
les
jl
outsl
stos
sbb
xchg
pop
cmp
jge
rolb
outsb
and
into
xor
loop
cmp
out
ja
popa
daa
push
inc
pop
add
pushl
movb
movsb
cmp
xor
mov
and
cmc
sub
ja
mov
xor
or
sub
ss
lods
movsl
adc
jecxz
mov
lret
xor
xchg
adc
lock
scas
pop
lret
jne
loope
jno
leave
xorl
pop
andb
subb
xor
pop
mov
mov
fdivs
pop
jp
or
lods
push
andl
in
cmp
push
loope
xorl
dec
subb
aad
pushw
mov
stos
cwtl
mov
fsubr
cmp
mov
orl
sub
mov
jb
neg
inc
fimuls
mov
outsb
cld
add
fimull
cli
dec
inc
scas
jbe
jns
jo
js
adc
and
idivb
jle
out
out
jns
inc
into
pop
add
xchg
sbbl
dec
faddl
add
mov
loopne
ss
dec
int3
roll
pushf
ds
mov
pop
mov
movsb
out
dec
xchg
iret
sbb
push
pusha
or
pushf
out
lea
lock
mov
repnz
hlt
xchg
leave
mov
xchg
cmp
lea
test
andl
jns
es
fs
sbb
sub
je
jge
jno
adc
cmp
push
push
xor
xchg
out
fsubrs
pop
repnz
or
mov
into
jecxz
clc
pop
imul
stos
enter
mov
xchg
out
data16
movsb
mov
lahf
jg
cmc
popf
repz
push
dec
dec
sub
adc
aam
mov
sub
ljmp
data16
push
in
mov
xchg
and
stos
incb
ret
and
adc
pop
xor
add
lret
lcall
push
clc
adc
fcmovnu
scas
adc
lods
xchg
inc
shll
xchg
sarb
pop
or
sbb
add
int3
sbb
dec
rorb
jle
sub
and
jno
in
sub
bound
jnp
sbb
pop
sbb
dec
shll
scas
gs
mov
sbb
cli
scas
icebp
jo
rolb
xchg
iret
dec
cmp
imul
pop
xchg
sub
xlat
push
dec
jae
jo
enter
sahf
pop
inc
sub
mov
sub
roll
lods
mov
push
cltd
imul
ret
cmp
dec
imul
pushf
int3
movsb
adc
lcall
shlb
rorl
insl
gs
and
add
iret
lret
ret
fwait
xor
pop
push
mov
pop
sbbb
stos
ret
sarl
pop
xchg
mov
pop
std
popf
in
sahf
call
push
push
fidivl
daa
clc
das
outsb
fsubr
fcompl
add
push
aad
iret
push
jnp
test
sub
mov
out
gs
push
adc
test
cmp
xchg
mov
out
adc
insb
inc
xchg
test
cltd
and
jo
fadds
mov
pop
jg
stc
imul
rolb
std
and
push
fildl
or
xchg
mov
add
mov
fcomi
dec
xchg
mov
sbb
xchg
cltd
nop
pop
jecxz
popa
jnp
mov
test
inc
jno
js
repnz
sbb
dec
push
mov
sub
and
dec
jl
adc
pop
lock
and
mov
leave
loope
out
add
ficomps
imul
sub
fimull
pop
sti
dec
lret
mov
xchg
mov
pop
ljmp
sub
or
xchg
sub
mov
add
cld
movsl
dec
push
mov
lods
push
xchg
sarl
push
pop
mov
xlat
or
dec
push
add
jae
xchg
lcall
ficompl
repnz
xchg
add
sahf
test
int3
and
mov
jmp
or
fisubl
jns
or
frstor
cmpsl
mov
pop
fcompl
adc
sti
mov
and
jecxz
int
repz
aad
xor
fcoms
dec
daa
lods
hlt
loope
pushf
aad
pop
mov
cli
fists
popf
mov
aas
mov
rorb
lahf
jnp
fstl
test
sbb
movsl
jp
and
std
mov
mov
cmc
orl
mov
pusha
push
stos
pop
jns
adc
push
jbe
hlt
in
sbb
std
data16
dec
jp
je
or
xor
pop
aas
pop
push
mov
sub
imul
ret
dec
lahf
clc
arpl
mov
sti
ss
dec
push
mov
mov
adc
fs
jg
test
mov
outsb
push
fucom
xchg
adc
mov
xor
mov
mov
and
ja
xorl
mov
mov
push
mov
sbb
jnp
or
xchg
stos
loope
jl
xchg
call
adc
jno
xchg
shl
test
mov
lcall
add
cmp
insb
lcall
xchg
or
pop
sbb
pushf
cmpb
mov
aas
cs
ret
mov
cmp
les
pop
mov
adc
push
in
xchg
cvttps2pi
enter
mov
loop
jne
movsl
mov
fmul
cmp
xchg
data16
mov
or
push
enter
mov
fidivrl
adcb
mov
test
adc
lock
fsubrp
lret
mov
and
std
jl
add
cmp
and
daa
mov
addl
cld
ljmp
inc
shl
inc
mov
dec
push
mov
push
mov
mov
aaa
dec
dec
xchg
xor
dec
loopne
call
pop
dec
fisttps
add
and
add
mov
pop
mov
sbb
ljmp
mov
insb
popf
je
inc
adc
sub
cmp
sbb
jmp
mov
lock
xchg
ja
xor
shl
inc
and
jg
xchg
xchg
adcl
fidivl
xchg
adc
mov
or
addb
stc
mov
int
jns
stos
xchg
les
ror
incb
fs
sub
xchg
shll
in
mov
cltd
loopne,pt
push
or
and
loope
cs
mov
gs
jl
jno
std
fsubrs
push
addr16
icebp
dec
jb
test
add
add
xor
jge
add
clc
add
test
ljmp
fisttpll
sbb
icebp
movsb
ljmp
add
sub
dec
aam
adc
lahf
lret
imul
mov
lds
xor
mov
iret
adc
jne
adc
push
lcall
add
in
jecxz
pop
xchg
pushf
mov
arpl
pusha
pop
push
imul
mov
jp
mov
sbb
xchg
pushf
shll
orb
cs
fcomip
sub
mov
cmp
bound
jne
inc
test
xchg
cltd
iret
fdivl
fdivl
sti
rol
cmp
rorb
adc
pop
mov
pop
and
jmp
scas
arpl
movsl
xchg
jp
mov
icebp
pop
fs
jl
mov
test
jg
jae
mov
jecxz
mov
jb
sub
jo
test
pop
cli
xor
cli
sub
inc
push
int
add
jl
push
jge
into
or
pop
sub
mov
lds
mov
mov
data16
and
sbb
ret
cwtl
aas
rcll
sbb
and
sbb
dec
mov
push
xchg
or
jne
mov
xchg
fisubl
ds
lcall
xor
gs
xchg
lock
push
pop
push
push
xor
xchg
or
mov
push
jl
mov
movsl
leave
or
adc
mov
stos
mov
test
pop
sahf
mov
aas
mov
sub
jns
pop
movsl
mov
inc
test
ret
pop
pushf
jno
inc
ljmp
iret
sub
mov
call
sahf
add
lret
dec
cmp
rcrb
jbe
xor
xor
push
jae
and
outsb
fdivr
cli
pop
jbe
dec
cmp
jp
dec
pusha
fcompl
dec
and
xor
cli
jmp
popf
mov
loopne
cmp
arpl
add
lds
lret
push
jnp
pop
jl
mov
ds
jbe
insb
adc
dec
xor
add
pop
jbe
jmp
dec
rclb
jle
inc
mov
ljmp
add
add
or
fstpl
ret
mov
xchg
out
dec
add
jmp
rcrl
cmpsb
xlat
dec
loop
dec
mov
fsts
xor
in
xor
or
pop
arpl
xor
jbe
push
add
cli
dec
in
or
in
sbb
fwait
jbe
and
out
mov
jno
sub
out
mov
push
mov
repnz
das
leave
or
add
fs
iret
fidivrl
xor
mov
icebp
xchg
pop
aas
fnsave
cltd
out
mov
dec
nop
gs
mov
jns
jbe
push
daa
lds
xchg
push
inc
xchg
clc
mov
hlt
cmp
add
repz
dec
lcall
sbb
rorb
les
fdivrs
outsb
lahf
cmp
sub
cld
rorl
and
int3
or
fldl2e
clc
add
sub
push
sub
mov
mov
cltd
adc
add
inc
shlb
or
push
mov
push
leave
dec
cmp
push
js
adc
mov
sahf
adc
mov
sub
fsubs
stc
andb
mov
jne
push
mov
repz
jmp
in
popa
scas
push
mov
arpl
dec
push
ja
dec
ds
lcall
lea
and
sbb
mov
mov
fs
push
push
and
xchg
iret
push
inc
fsubrp
mov
cmp
js
jns
stos
lods
leave
xor
pop
pop
in
out
mov
mov
lds
pop
mov
and
icebp
adc
and
push
scas
pop
inc
sbb
xchg
push
inc
nop
mov
sbbb
dec
movsb
in
int
push
rol
cmp
jae
pop
mov
addr16
jne
cld
sub
add
test
in
inc
mov
shl
fsubrs
in
inc
jae
daa
loope
sbb
xchg
push
dec
inc
ret
jb
jnp
daa
and
xor
sub
imul
xchg
mov
xchg
xchg
push
push
bound
xchg
cmc
push
stos
movsl
filds
push
and
lods
push
xchg
add
mov
push
popa
mov
mov
fnstenv
xor
rorl
lods
fbstp
pop
pop
lods
mov
xor
pushl
lock
push
in
loope
sub
mov
mov
mov
fwait
pop
iret
pop
push
mov
adc
sub
add
cli
out
mov
inc
push
decb
or
movsb
in
orb
inc
jmp
jo
pop
aam
lea
sbb
jns
push
jae
pop
xor
in
xor
leave
sahf
cmp
lods
add
mov
ficoms
aam
jle
fists
enter
push
dec
push
pusha
jmp
xchg
out
daa
sbb
inc
mov
mov
into
adc
inc
test
aam
cwtl
or
xchg
cld
into
into
loopne
cmp
ret
imul
rcr
jb
in
xchg
adc
cmp
sbb
rcrb
mov
mov
sbb
pop
cmp
daa
dec
or
cmp
mov
jbe
adc
cli
rorl
cmpsb
xor
movsb
imul
mov
jae
jge
fists
daa
pop
sbb
jns
mov
out
xor
push
inc
out
insb
cwtl
loope
jl
cmp
sub
leave
addr16
popa
cmc
fldenv
je
sub
xchg
arpl
outsb
add
mov
cmp
add
xchg
repz
mov
cmp
push
mov
xorl
lods
inc
push
ret
test
fdivp
lock
aaa
and
adc
fs
xor
mov
add
mov
repnz
mov
add
scas
cld
push
cmp
dec
clc
add
sub
in
call
jmp
icebp
cs
aam
test
xchg
cmp
lret
cli
push
inc
xor
scas
jnp
adcb
sahf
dec
rcrb
cmp
mov
mov
mov
cmp
out
mov
mov
cmpb
int3
jbe
movsb
xor
xchg
mov
sbb
fidivl
fadd
ret
jne
stos
jmp
mov
pop
mov
push
scas
add
xor
sbb
inc
dec
mov
jns
repz
pop
and
insl
ja
orb
sub
mov
pop
into
nop
and
add
mov
ret
pop
sub
aad
mov
sub
xchg
pop
or
pop
sub
adc
arpl
std
cmp
jmp
cmc
dec
jae
mov
scas
ja
lods
push
insb
mov
jne
push
mov
popf
les
stc
sub
xchg
out
xchg
inc
aam
in
ds
mov
push
clc
pop
lret
movsb
cwtd
lcall
xchg
xor
dec
cmp
pushl
out
rclb
shll
dec
inc
shll
das
enter
in
mov
sbbb
jp
mov
sbb
rolb
dec
push
and
pop
lret
jae
mov
sarb
add
xchg
mov
outsb
mov
jae
xorl
mov
test
mov
lods
icebp
subb
jne
jmp
dec
cmp
sbbb
push
sub
cmpsb
fs
js
mov
or
cmpsb
imul
cmp
sub
imul
inc
mov
arpl
loop
test
and
dec
add
test
dec
incb
ljmp
jns
pop
cli
les
loope
pop
xor
jg
push
mov
dec
and
xbegin
sub
stc
es
daa
or
dec
mov
mov
add
insl
js
popa
loope
sbb
xchg
pop
dec
outsl
jb
inc
pusha
pop
jecxz
sbb
testb
add
sub
and
mov
add
fstpl
dec
mov
sub
cmp
mov
stos
or
lds
movsb
lock
inc
inc
pop
fs
inc
jl
sub
or
rcll
les
jmp
mov
dec
movsl
cmp
and
je
icebp
movsl
andl
les
jge
pop
push
subl
jmp
jle
mov
mov
mov
push
xor
cmp
mov
adc
popf
int
daa
leave
leave
add
inc
out
jo
aaa
ret
mov
sbb
push
sahf
pop
jl
stc
dec
cmp
or
lcall
pop
outsl
push
sbb
insb
cmc
sub
cmp
push
cmp
mov
dec
lock
jb
mov
std
jb
into
pop
mov
lcall
xchg
les
lahf
sarl
sub
js
fcoml
mov
clc
push
leave
pop
out
sub
sbb
cmp
fsubp
pushf
test
cmp
nop
leave
and
nop
mov
dec
std
in
mov
sbbb
mov
mov
jns
xor
mov
pop
ds
ret
pop
shl
je
cmpsb
dec
dec
in
nop
pop
bnd
or
adcb
pop
mov
in
add
xchg
ss
test
sti
xchg
mov
inc
and
cmp
mov
scas
push
mov
push
subb
rolb
es
aam
cmpb
inc
adc
and
imul
out
fmuls
mov
fs
sarb
addr16
je
shll
mov
js
ret
orl
aaa
addr16
adc
test
xor
mov
fstps
xchg
out
dec
insb
inc
xchg
mov
ficompl
sub
pop
pop
stc
add
xor
hlt
xchg
sub
cwtl
pushf
cmp
or
lea
push
out
dec
xchg
inc
rcl
gs
ljmp
aad
xchg
push
sti
leave
and
icebp
jecxz
xchg
movsb
cmp
fwait
out
xlat
push
inc
jns
mov
sub
cs
sbb
jns
cmc
push
aas
push
mov
adc
fisubrl
test
ficompl
or
lret
adc
cli
xor
outsl
ret
push
mov
ffreep
pop
jno
inc
jnp
add
jmp
stc
jl
fs
cmp
cltd
sbb
push
cli
leave
test
inc
je
sub
repz
js
lods
cmp
js
and
push
sub
jg
xchg
add
fcomps
sub
mov
xchg
in
pop
xchg
loop
aam
lret
xchg
dec
in
stos
xchg
push
inc
mov
outsl
sub
stc
cmp
or
push
or
mov
iret
cmp
mov
ret
es
rcrl
cli
cmp
leave
pop
das
push
lds
imul
mov
ficoml
mov
add
xchg
jecxz
fidivl
mov
out
dec
push
pushf
cmpsb
sar
sbb
jae
inc
sub
iret
adc
test
fwait
clc
jp
je
ret
lret
push
test
test
jge
push
div
pop
jns
inc
cmp
aad
addr16
or
inc
call
outsl
mov
fwait
lods
sub
fs
push
xchg
pusha
cmpsb
mov
push
push
lcall
inc
lret
insb
dec
sub
loop
inc
orl
cmc
sbb
sti
push
add
lret
popa
int
pop
fwait
sub
repnz
cmc
mov
sub
inc
cmp
lcall
or
and
inc
in
sbb
mov
sbb
inc
push
insb
dec
sub
cmpsl
iret
mov
sbb
sti
sbb
mov
cli
sub
in
jmp
and
shlw
xchg
adc
ffreep
lret
sbb
cmp
cmp
push
jns
sahf
cwtl
xchg
cmp
lock
fdivs
add
jecxz
mov
cmp
es
shll
iret
or
fucom
pop
jno
fcomip
rolb
pop
mov
cltd
and
and
addb
call
inc
ss
lods
or
pop
inc
movsl
xor
test
and
push
aad
dec
xor
jbe
jmp
jge
mov
mov
xchg
and
test
mov
add
in
xchg
dec
or
mov
dec
clc
cltd
cmp
into
xor
sub
mov
dec
int3
dec
and
rol
mov
jbe
jne
xlat
daa
push
jg
and
test
or
idiv
adc
mov
int3
inc
push
sub
xchg
mov
daa
xchg
push
test
mov
adc
sbb
jp
daa
jo
stos
mov
imul
pop
gs
mov
or
dec
scas
int
pusha
push
std
addl
push
scas
outsl
sbb
es
je
xlat
out
xchg
popa
shlb
outsl
jge
cld
mov
pop
testb
cmp
adc
loopne
jecxz
push
jle
xchg
mov
xor
dec
cmc
sbb
into
test
mov
inc
fs
aad
adc
push
add
std
shll
mov
xchg
not
mov
aaa
es
ss
push
pop
push
ja
addr16
inc
inc
push
mov
cmpsl
mov
xchg
not
mov
aaa
es
ss
push
pop
push
ja
addr16
inc
inc
push
mov
cmpsl
mov
xchg
not
mov
aaa
es
ss
push
pop
push
ja
addr16
inc
inc
push
mov
cmpsb
mov
xchg
not
mov
aaa
es
pushf
mov
out
out
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
shll
ret
add
adc
adc
jb
bound
xor
xor
mov
ret
add
adc
inc
mov
mov
andl
xor
and
push
xor
pusha
add
adc
mov
in
sbb
pop
xchg
jns
jo
data16
jle
mov
gs
xchg
cmpsl
xorb
mov
out
push
out
sub
dec
sbb
sub
jno
adc
mov
dec
das
pop
movsb
sbb
shl
sbbl
sub
xchg
hlt
jge
ss
cli
mov
popa
inc
dec
test
add
inc
ret
push
rorb
fisubrs
add
dec
test
add
inc
movsb
idivb
outsb
in
mov
mov
sub
xlat
jg
outsb
popa
or
jb
shll
sub
mov
shrb
sub
add
insl
stos
imul
xchg
aam
pop
inc
mov
lahf
push
push
add
mov
xchg
xor
add
adc
cli
jno
inc
add
xchg
mov
push
xchg
pop
loope
icebp
add
and
xchg
push
std
push
in
xor
and
and
adc
pop
out
pop
jmp
insb
mov
inc
mov
pusha
cmpsl
jnp
add
pop
inc
notl
in
fnsave
sbb
imul
mov
xchg
jne
rorl
push
push
mov
bound
xor
and
shlb
ret
add
adc
inc
mov
mov
andl
xor
and
shlb
fs
repz
pop
movsb
push
fcoml
add
cmp
dec
xlat
iret
out
jmp
test
leave
jecxz
add
insl
or
scas
inc
in
xchg
lds
pop
sub
repnz
shll
orb
dec
cmp
call
ds
insb
xor
ss
dec
pop
leave
rcll
push
push
mov
hlt
rcll
sbb
mov
add
inc
leave
lock
add
cmp
jmp
add
loop
in
repnz
sbb
outsl
jae
dec
lret
es
aam
jae
cmp
insb
cmp
lods
cltd
or
or
daa
jge
sub
icebp
pop
out
cmc
xor
cvtdq2ps
xor
inc
xchg
iret
or
jo
popf
cmp
xlat
pop
repz
xchg
lcall
xor
scas
aad
sub
jns
icebp
or
fisttpll
stos
sbb
jmp
jle
mov
xchg
addr16
out
inc
jnp
aam
fucomp
pop
dec
sub
test
mov
test
push
out
sar
test
test
jle,pt
pop
lods
repz
shrb
mov
jnp
and
push
jmp
xchg
xchg
inc
imul
repz
adc
lahf
pop
push
das
popa
xchg
inc
cmp
push
xchg
cmpsl
rcrb
cmp
fiadds
sub
add
insl
mov
cmpsb
insl
pop
fisttpl
xchg
lods
jnp
fbstp
add
mov
test
mov
mov
or
pop
fistpl
jmp
nop
movsl
sti
out
ss
nop
imul
lds
or
add
sbb
mov
in
sbb
cmp
sub
mov
fdivrl
mov
pop
push
add
push
scas
pop
or
cmpsb
stos
loope
in
dec
leave
jmp
sahf
shl
pop
je
ret
sbb
or
and
orl
lcall
mov
imul
loop
pop
xchg
pop
test
push
mov
ret
lods
mov
mov
push
sti
shlb
pop
lods
and
pop
sbb
xor
in
add
popl
pop
push
insb
push
inc
scas
dec
push
lgs
loop
or
jne
add
mov
and
xchg
pushfw
and
push
imul
js
xchg
inc
cwtl
bound
jo
popa
jb
jp
jno
cld
mov
or
xchg
push
fldlg2
stos
divb
xlat
cmp
ffree
jns
jmp
daa
xor
push
mov
rcrl
pop
cltd
jge
std
cmp
xchg
mov
aam
or
dec
and
lahf
cmp
dec
xor
outsl
inc
das
shlb
xor
sbb
mov
jne
add
aas
dec
daa
cmp
repz
inc
iret
decb
pushf
cli
mov
mov
jnp
gs
pop
jno
rcll
pusha
pushl
jg
sbb
insl
shl
pop
les
cmp
xor
mov
inc
lods
test
sti
gs
xor
and
sub
mov
mov
les
cmc
cmp
cmp
ljmp
adc
les
jae
jno
fldl
or
dec
into
sarb
inc
cmpl
out
js
sub
popa
jge
cwtl
jo
mov
push
test
aas
pop
cmp
adc
push
and
jle
mov
test
push
loopne
add
stos
out
out
push
pop
leave
pop
shlb
orl
mov
lahf
mov
xor
push
arpl
dec
mov
test
bound
popa
xchg
sbb
insb
test
jl
mov
imull
mov
fstl
movsl
dec
xchg
push
mov
add
and
adc
mov
sti
bound
aad
mov
lock
mov
outsb
pop
add
mov
and
out
or
insb
push
jge
pushf
adcl
jp
ds
enter
add
popa
sbb
cmp
lcall
gs
fisubs
lds
push
mov
imulb
out
jp
into
cwtl
ds
cltd
lea
pop
or
inc
js
mov
fisubl
js
jl
mov
inc
lret
jecxz
sub
movsl
pop
jnp
push
ss
inc
xchg
push
or
insb
pop
jp
movsl
dec
stc
cwtl
sarl
cld
mov
mov
sub
cmpsl
test
dec
shlb
movsl
mov
or
or
test
and
pushf
stc
fsubl
sbb
aaa
in
jg
xchg
daa
jno
imul
cwtl
and
js
insl
aam
out
pop
or
aaa
pop
test
ret
lret
sbb
fadds
sub
movsl
and
or
jmp
dec
stc
loopne
popa
lds
arpl
inc
mov
jb
in
sub
cwtl
js
outsl
in
mov
mov
push
divl
add
and
rcl
sbb
pop
loope
sbb
lods
inc
pusha
dec
pusha
sub
cmp
cwtl
and
xchg
mov
pop
scas
lcall
repnz
pop
pop
mov
cli
pop
and
fbstp
sbb
test
push
dec
mov
jg
xor
scas
cltd
fisttps
loopne
jno
int3
jge
push
mov
bound
fsubrl
outsl
divl
ja
xchg
pop
ja
outsl
push
and
add
sbb
outsl
into
pop
pop
stc
and
icebp
sbb
daa
mov
pop
pop
lock
outsl
rorb
orl
pusha
jl
mov
sub
push
adc
mov
outsb
fidivs
lods
lods
jbe
xor
hlt
inc
repnz
xchg
mov
scas
faddp
ficoms
and
add
roll
xchg
inc
cmpsl
pop
jnp
aam
andb
out
lods
lahf
push
pop
add
push
jbe
sub
xchg
je
cmp
icebp
adc
xor
js
sbb
cmp
cmp
mov
subl
call
mov
movsl
adc
stc
stos
jl
ret
out
movl
dec
aam
xor
and
pop
mov
gs
negl
push
je
cmovge
xchg
pop
push
cmpsb
mov
gs
ret
loop
push
outsb
cmpsl
xchg
arpl
or
scas
stos
inc
mov
push
xor
xor
adc
jmp
pop
jne
xor
mov
fdiv
cmp
lahf
out
mov
inc
xlat
test
pop
dec
cmpsb
xchg
data16
hlt
movsl
lea
lcall
sbb
fsubrl
arpl
xor
mov
sti
and
xor
sbb
stc
std
pop
out
imul
loope
ja
jecxz
aaa
fildl
cwtl
dec
subb
sbb
mov
sub
aam
xchg
adc
adc
stos
cmp
sub
cmp
scas
and
mov
out
insb
adc
repnz
sbb
mov
imul
push
and
imul
bound
mov
add
and
ret
in
xchg
pop
arpl
xchg
daa
adc
int
jns
mov
sub
xor
mov
sbb
sbb
out
cmpsl
cmp
cmp
mov
mov
divl
rolb
into
adc
and
lcall
enter
frstor
mov
mov
push
std
jae
adc
rorb
sbb
rclb
sub
inc
fildl
xchg
test
int
fiadds
sbb
cmpsb
lock
in
movsl
sbb
rol
push
mov
pop
int
sub
xchg
inc
popa
fisttpl
xchg
or
movsl
jb
pop
sub
jnp
xor
out
cld
jle
xchg
inc
jp
mov
pop
mov
sub
nop
stc
cld
push
lcall
pop
pusha
mov
sbb
pop
or
cltd
sahf
sbb
fisttps
jno
mov
rorb
inc
test
test
imul
arpl
pop
mov
xchg
xchg
jo
ret
push
inc
push
mov
xchg
xor
xchg
mov
nop
adc
mov
jo
test
rorb
loop
jns
outsb
sub
lods
or
xchg
fsubl
leave
leave
in
mov
mov
not
inc
ret
sub
sete
loope
mov
mov
mov
push
iret
repnz
mov
fsubr
xchg
data16
add
icebp
sbb
dec
sbb
mov
mov
loopne
aas
shlb
xchg
pop
mov
data16
push
cmp
push
out
fcoms
out
cmp
movb
jmp
imul
xchg
addr16
jge
aaa
jb
cmp
lods
fcompl
xor
sbb
ret
lods
dec
in
adc
mov
sub
ret
and
rorb
sbb
xor
out
je
mov
scas
pop
std
scas
push
test
jne
xchg
xor
bound
xchg
dec
and
mov
sarb
push
pop
shlb
cmp
clc
mov
sbb
dec
ljmp
or
enter
into
sbb
aas
je
xor
pop
hlt
fiadds
mov
cmp
mov
mov
dec
adc
mov
rclb
aas
stos
lock
out
add
nop
outsb
scas
pop
mov
inc
or
push
adc
cld
out
xchg
aam
insl
std
pop
push
scas
mov
and
movsb
mov
add
addr16
std
cltd
xor
jnp
pushf
sub
adc
mov
mov
mov
movsb
jns
sub
sbb
mov
mov
aaa
out
test
lods
lea
add
mov
mov
xor
xor
push
shrb
outsb
adc
sub
cmp
xchg
add
jo
xchg
in
inc
mov
adc
sti
mov
or
je
push
and
xchg
xchg
mov
adc
jmp
add
or
insl
inc
mov
pop
pop
insb
mov
shrl
xchg
jae
or
ffreep
dec
push
repz
inc
cmp
xchg
mov
sbb
cld
sub
ds
aam
mov
test
adc
out
into
mov
cmpsb
sbb
pushf
out
ja
adc
dec
push
jb
cmpb
mov
mov
aas
cmp
aam
mov
sbb
mov
loop
imul
gs
mov
mov
fwait
mov
pusha
fisubrl
std
insb
jnp
sub
cmpl
mov
fiaddl
add
inc
xchg
fprem
sub
in
mov
test
mov
aaa
adcb
or
insl
cwtl
movsb
dec
cmp
cmp
sub
call
ds
cmpsl
add
ljmp
mov
int
mov
jg
sarb
ljmp
cmpb
xlat
dec
fisttpll
lret
dec
inc
mov
xchg
mov
cmp
ja
dec
add
mov
rorl
lcall
push
out
push
shrl
add
adc
cli
sub
mov
jnp
or
adc
add
mov
inc
jbe
adcb
in
jnp
jae
and
pminsw
lods
int3
jmp
and
loop
lea
ret
movsl
nop
imul
cld
mov
rolb
popa
adcl
or
xchg
xchg
mov
mov
jecxz
or
jnp
sar
or
adc
flds
lods
mov
outsl
jl
leave
test
jg
xchg
mov
das
adc
clc
xor
or
lods
sub
fcmovbe
idiv
fnstsw
push
or
cmp
orb
mov
das
dec
dec
popa
sar
into
pop
fsubl
and
stc
push
add
cmpsb
adc
mov
jmp
sub
notb
roll
pop
icebp
jbe
adc
jle
mov
mov
jnp
fistpl
xorl
push
push
out
sbb
push
fwait
lret
mov
sub
mov
int3
xor
les
inc
sub
push
iret
push
sbb
jmp
add
cmpsb
mov
lret
mov
insl
dec
inc
mov
dec
jmp
sub
stos
popa
sti
ficomps
add
adc
outsl
mov
cwtl
in
stc
leave
es
mov
xchg
jl
push
sbbl
or
lods
idivl
cmp
mov
call
fs
xchg
mov
sbb
cmp
jae
and
inc
mov
jmp
ror
pop
fsubl
enter
je
xchg
or
out
or
notl
call
mov
leave
int
push
cmc
mov
out
jmp
jmp
mov
inc
decl
xchg
pop
mov
cmp
lret
test
push
outsb
ret
addb
jp
mov
sbb
inc
adc
in
cmp
xor
mov
xchg
mov
fmull
push
adc
lret
pop
adc
das
les
jae
xchg
lods
fcoms
cld
mov
lret
fs
mov
notl
insl
shrb
iret
pop
orb
movsl
xor
popf
xchg
adc
and
pusha
test
cmc
jne,pn
data16
stos
out
pop
mov
imul
fildll
popf
mov
sub
sbb
pop
shll
test
pop
jge
out
div
xchg
push
mov
cmp
mov
push
pop
mov
icebp
shr
push
lret
mov
cld
aad
sbb
lock
cmc
push
xor
imul
lock
and
xor
lcall
mov
xor
inc
or
movsl
stos
sbb
ja
mov
ljmp
stc
jmp
pushf
jb
ret
aad
lods
sub
es
pop
jp
lods
cmp
adc
scas
xor
lds
in
ljmp
ror
mov
lret
xor
pop
mov
aam
aad
jae
mov
pop
jbe
pop
xchg
cltd
dec
sub
dec
sub
imul
sbb
mov
dec
pop
rorb
add
mov
add
shll
rclb
pop
add
fisubl
pop
int3
sbb
insb
outsb
nop
jbe
sahf
pop
adc
out
xor
push
inc
hlt
push
lods
sahf
mov
sub
pop
ficomps
mov
cltd
lock
loopne
mov
cltd
gs
dec
stos
jg
es
aad
aas
push
js
popa
xchg
lods
in
dec
jns
adc
jnp
jecxz
scas
mov
orl
pop
push
seto
dec
sbb
sbb
pop
or
jl
cmp
jne
scas
mov
adc
pop
imul
mov
stos
lcall
push
cmp
les
dec
inc
in
add
ret
fs
je
and
insl
inc
dec
adc
addr16
pop
sahf
xchg
sub
pusha
lret
fsts
aaa
daa
sbb
dec
xor
in
fnstsw
pop
add
test
fst
lea
cmpsb
mov
enter
mov
nop
xchg
mov
mov
mov
xchg
pop
pop
and
gs
mov
loopne
aad
jne
mov
cmp
std
roll
aam
pop
rol
jnp
pusha
jle
mov
xchg
push
loopne
flds
js
add
or
ficoml
inc
pop
xchg
pop
leave
es
data16
shlb
shr
les
cmp
jmp
push
aam
rcl
mov
push
mov
scas
dec
out
mov
shrb
cld
inc
mov
cmp
cmp
pop
mov
lcall
push
push
insl
insl
mov
incl
and
stos
or
push
mov
mov
inc
mov
sti
mov
or
add
mov
movsl
or
aam
mov
xor
lds
jp
push
pop
jp
mov
aam
jo
dec
loop
mov
sbb
imul
lahf
xlat
jo
iret
in
dec
dec
sbb
je
push
int3
dec
mov
xchg
mov
cli
cs
mov
mov
gs
daa
xchg
xchg
test
test
stos
inc
ret
jb
jecxz
add
gs
mov
scas
outsb
mov
push
cmpps
xorl
sahf
cmp
int3
in
scas
movsb
fsub
hlt
stos
scas
and
jnp
jge
iret
test
or
sub
in
mov
dec
imul
test
jle
addr16
movsl
ss
aad
aaa
pop
cmc
je
inc
repz
cld
pop
jo
add
xor
mov
wbinvd
dec
std
or
rol
loopne
les
cmp
std
add
imul
les
imul
jno
dec
ret
out
jg
mov
aad
cmpb
or
jbe
push
fwait
bound
xchg
cmpsl
xchg
inc
fsubrl
sub
mov
sbb
mov
or
js
cwtl
in
or
test
rcll
popa
loop
fsts
inc
mov
or
into
adc
cltd
pop
mov
pusha
out
fcomp
sti
cmpsl
popa
or
xor
std
movsb
xchg
mov
add
dec
js
fstps
xchg
stos
lock
das
adc
loop
add
ret
cwtl
xchg
inc
xchg
adcb
and
jns
iret
mov
jno
outsb
hlt
jmp
out
push
push
mov
inc
repnz
shll
push
pop
ss
outsl
mov
mov
and
jecxz
lods
pop
dec
out
cli
sbb
sub
loopne
mov
call
stos
ds
aaa
sbb
or
in
arpl
test
repnz
sahf
cld
mov
jmp
inc
xchg
push
stc
mov
cld
hlt
sub
stc
shll
dec
mov
shl
sahf
sbb
dec
mov
jbe
popf
xchg
push
push
data16
shlb
js
cli
pop
sahf
clc
hlt
in
mov
and
xchg
hlt
cmp
push
or
sub
fwait
mov
loop
incl
dec
mov
or
adc
dec
xor
lock
or
pusha
addb
movsl
fcmovnu
inc
or
sbb
dec
mov
jge
pusha
dec
pop
jl
imul
dec
xor
xor
data16
rcrl
pop
inc
fld
and
mov
sbb
inc
cmc
dec
ja
push
fstl
ljmp
lods
cmp
xchg
cmp
xor
rol
push
xchg
pop
imul
sbb
movsb
enter
fcompl
and
stc
pop
cmp
mov
mov
aad
cld
sbb
sbb
nop
ja
xor
sahf
faddl
enter
xor
pop
mov
push
or
cmc
mov
stc
mov
push
pop
push
inc
cmp
inc
adc
jo,pn
jno
inc
push
repnz
movsb
pop
inc
inc
and
sub
test
jno
aas
push
lea
fxch
rolb
ret
mov
ret
insl
mov
xor
dec
stos
jae
and
sbbl
jp
addb
push
push
jp
in
insb
xchg
dec
in
or
and
cwtl
lods
mov
jmp
xor
loop
mov
nop
mov
xchg
push
in
popa
stos
cmp
cs
repz
mov
in
lret
je
push
daa
and
jg
and
and
lret
push
fs
std
arpl
adc
adc
or
les
mov
pop
outsl
jbe
cli
add
hlt
jge
into
imul
movsl
jmp
cwtl
fmuls
loop
or
or
jno
and
mov
add
cmp
jecxz
int3
pop
xor
push
add
jns
cli
cmp
cmp
pop
pusha
inc
sbbb
sub
inc
mov
inc
stos
call
and
mov
repz
sub
rcrl
jns
loopne
scas
push
push
cld
push
fidivrl
xchg
lret
in
stos
xor
cmpsb
pop
and
push
movsb
inc
inc
xor
jne
mov
mov
fsts
sbb
push
xor
mov
pop
ljmp
adc
daa
inc
nop
mov
decl
pop
mov
loopne
into
jbe
sub
mov
popf
ret
notl
push
ret
adc
or
stos
cmpsl
cmp
shlb
mov
aaa
mov
lahf
insl
adc
les
daa
pop
fisttps
dec
rorb
pop
mov
enter
shlb
daa
int
test
push
pop
rorl
mov
mov
out
mov
adc
movsl
push
or
add
loope
jne
call
or
adc
mov
cmpsb
jbe
shr
movsb
jo
pop
mov
gs
xor
mov
mov
push
adc
test
adc
stos
mov
aad
popa
pushf
jmp
mov
ja
xor
sub
push
repz
pushl
jmp
mov
loop
xchg
popa
xorb
mov
mov
andl
xor
and
shlb
ret
add
adc
inc
mov
mov
andl
xor
and
shlb
loop
add
jno
inc
bound
mov
bound
xor
lret
and
adc
mov
and
fadds
mov
int
cmp
jno
inc
or
and
adc
rorl
lret
xchg
cmp
jno
inc
or
and
pop
add
stos
loope
icebp
lcall
mov
or
jno
inc
adc
and
inc
add
mov
movsb
repnz
xchg
popf
out
sub
jl
sub
lea
bound
adc
jmp
add
push
mov
sub
mov
aas
icebp
orl
je,pt
stos
mov
ljmp
mov
xchg
dec
xchg
mov
fimull
lock
pop
push
fimull
pop
cmp
cmp
cs
test
imul
or
xor
jne
add
hlt
lret
mov
ljmp
push
mov
in
jp,pt
add
ljmp
cmp
addr16
push
pop
test
mov
inc
loope
cmc
out
fisubrl
mov
or
jno
inc
or
and
pop
add
mov
rcll
rolb
or
jle
or
inc
pop
fs
gs
xchg
out
mov
test
cmpsl
hlt
push
or
jp
push
bound
pop
push
sbb
stc
test
sbbl
andl
pop
and
jbe
bound
xor
push
pop
add
mov
rorl
fiaddl
sub
inc
or
and
pop
add
mov
rorl
fiaddl
add
xchg
push
aam
mov
push
cmc
fwait
icebp
ljmp
ret
xchg
cmp
out
stc
lret
das
pusha
stos
imul
mov
or
sbb
scas
popf
jge
and
jl
mov
loop
pop
into
pusha
lret
clc
add
mov
lret
inc
pop
stos
fsubs
data16
imul
popf
dec
mov
add
xchg
or
jo
iret
dec
xor
sbb
cli
mov
je
repnz
inc
inc
push
jecxz
sbb
pop
mov
mov
mov
fbstp
negl
fmull
sbb
push
mov
or
daa
dec
jmp
push
ret
jb
sbb
xchg
inc
xor
jmp
mov
adcl
movsl
shrb
ds
out
nop
arpl
fcmovne
cmp
rcll
lods
cmp
inc
xor
test
mov
sub
cmp
pop
std
mov
push
test
rcr
inc
sub
or
add
leave
mov
xchg
mov
and
cmpsb
fwait
int3
mulb
lahf
inc
push
jle
clc
shll
and
sti
cmp
sbb
xlat
in
cld
sti
repnz
frstor
sub
inc
sub
dec
jmp
iret
nop
xchg
arpl
and
jae
lds
and
in
inc
jns
jne
xorl
pop
insl
iret
dec
or
dec
xor
xchg
stc
movsb
lea
pop
mov
fstpt
loopne
addr16
sahf
and
inc
dec
push
and
fcmovnu
outsb
sub
or
sub
iret
sbb
mov
fs
sub
ljmp
mov
and
cmpsl
dec
or
sti
adcl
jmp
mov
xchg
inc
jmp
xchg
std
in
adc
cmp
pop
add
mov
and
jns
rol
fst
scas
mov
loop
hlt
cmp
mov
sub
es
cmp
mov
and
cltd
jns
xchg
popa
loope
or
mov
lods
add
jmp
mov
mov
jmp
std
stos
insl
lock
xor
std
ds
out
inc
sarl
loop
lds
sbb
pop
xchg
mov
imul
ds
or
andl
iret
rolb
mov
dec
dec
ret
pop
test
pop
or
push
dec
lods
scas
push
fldl
test
pop
test
mov
addl
jne
das
hlt
cltd
addb
fwait
pop
cmpsl
add
call
jno
dec
push
mov
pusha
stos
mov
xchg
xor
fdivl
imul
aas
or
pop
or
pop
cmpsb
mov
sub
movsb
sbb
sub
sbb
mov
lahf
cltd
jae
repnz
add
xchg
jle
pop
dec
pop
stos
imul
div
mov
inc
movsl
and
inc
in
add
push
jmp
adc
in
sbb
or
std
mov
pop
stos
nop
hlt
and
bnd
fmul
xchg
and
cmp
cltd
mov
std
and
cmp
rcll
cwtl
inc
pop
mov
fs
gs
rorl
enter
pushf
lcall
xor
mov
and
mov
push
adc
xor
sub
in
sbb
mov
lret
call
xchg
jo
xchg
sub
ffreep
stos
icebp
sbb
mov
iret
in
push
pushf
lock
inc
cli
cmpsl
lods
fadds
cmp
aam
inc
cmpsl
leave
push
xorb
add
sub
xor
or
fwait
enter
sub
icebp
cwtl
sbb
scas
mov
lods
es
andb
mov
out
push
xor
les
leave
xlat
mov
mov
idiv
dec
xorb
and
push
inc
jmp
jbe
jno
data16
jecxz
icebp
cli
arpl
jo
jle
aas
inc
das
insb
pop
add
shll
inc
sub
fstpl
push
fs
mov
add
pop
sahf
dec
xchg
repz
push
fisubs
lock
std
test
mov
inc
sbb
aad
mov
mov
pop
int
cld
inc
mov
sbb
pop
scas
ljmp
rcll
mov
mov
stos
mov
mov
andb
fwait
push
mov
xlat
add
std
pop
aam
mov
dec
rol
inc
pop
adc
lea
and
push
mov
cmpsb
mov
xchg
mov
out
or
fnstenv
cmp
xor
xor
push
jb
or
xor
outsb
int
ss
icebp
std
sub
pop
mov
sbb
xor
ret
arpl
test
jmp
adc
call
scas
out
cmp
sbb
mov
scas
push
out
mov
out
or
dec
cmp
mov
and
push
daa
jo
iret
inc
push
loope
xchg
aam
subl
enter
pop
push
pop
lds
divl
into
cmpsb
mov
insb
adc
push
mov
fs
pop
scas
push
add
inc
mov
in
push
repnz
add
pushf
das
lock
mov
scas
sub
xor
repnz
push
add
rolb
cwtl
movsb
pop
or
add
xchg
pop
mov
and
mov
cltd
adc
rol
icebp
pushl
mov
add
divb
and
inc
lcall
sarl
stc
inc
addr16
xchg
jo
bt
lcall
add
add
scas
jbe
xchg
mov
bnd
mov
xchg
aaa
add
addr16
sub
lahf
jle
hlt
repz
testl
jae
test
cmpsl
push
or
sbb
or
xor
cltd
mov
mov
and
push
jbe
and
cmp
lea
mov
roll
idiv
arpl
push
daa
insl
fmuls
dec
int3
cld
inc
inc
ljmp
popf
aad
bound
in
push
cld
pop
mov
orb
xchg
push
sahf
mov
sahf
pop
add
leave
sbb
flds
inc
and
add
xchg
xor
sbb
scas
mov
movswl
and
push
ret
out
lcall
push
adc
test
andl
ret
mov
arpl
or
daa
roll
cmp
xor
jmp
movsb
fsts
mov
push
and
test
sub
in
in
repnz
test
loope
sub
ljmp
fucomi
int3
cs
mov
dec
ror
jb
js
fcompl
sub
outsb
cltd
bound
loop
test
xchg
and
inc
das
inc
jmp
or
mov
fwait
mov
es
ja
popf
dec
or
add
lret
subl
inc
jno
arpl
dec
add
xchg
movsl
mov
and
xor
mov
push
push
jbe
or
ror
dec
stc
fxtract
push
xchg
test
int
jl
bound
pop
mov
jg
adc
pusha
rcr
mov
stos
fcmovnbe
jmp
or
dec
mov
inc
mov
ret
add
push
mov
js
mov
lret
in
inc
test
rolb
lret
inc
mov
into
outsl
xchg
xchg
push
inc
mov
sub
jecxz
lahf
daa
cmc
ds
js
lds
int3
pop
leave
sti
in
imul
aad
daa
out
gs
outsl
out
in
int3
sub
iret
pop
lods
shl
loop
or
xchg
test
and
lcall
jbe
outsl
bound
fcmovnb
add
int
add
or
icebp
mov
mov
mov
add
call
test
mov
sahf
ficoms
push
rclb
jb
push
in
cbtw
pop
sub
lds
add
enter
data16
mov
or
shr
inc
pop
fidivrl
sbb
and
jge
mov
or
inc
jmp
push
pop
ja
icebp
loope
mov
mov
shrl
push
push
int
shlb
jo
pop
iret
fs
loop
lods
xor
bswap
inc
adc
sarl
push
jmp
movb
loopne
fcmove
mov
pop
and
adc
mov
mov
je
test
dec
lcall
mov
mov
push
pop
fstl
jle
insl
jae
sub
cmpsb
rclb
decb
and
xor
jae
xlat
jge
repz
roll
jl
mov
push
xchg
and
pusha
dec
cmp
push
out
pop
stos
insl
lock
das
sbbb
sub
xor
jnp
lea
push
pop
lret
push
mov
inc
mov
arpl
in
outsl
push
and
lret
icebp
mov
cld
pop
inc
mov
or
xchg
mov
daa
sub
daa
xor
ret
rclb
xchg
in
in
pop
loopne
aaa
and
in
popl
xchg
or
cmp
mov
pop
stos
daa
jmp
scas
inc
lock
cmp
inc
inc
icebp
negb
pusha
and
pushl
ror
xchg
les
adc
rol
stos
xor
sbb
xor
lea
inc
add
xchg
cmpsb
ss
lea
jp
xor
add
mov
lods
out
lret
or
jnp
xor
sbb
mov
loope
sub
mov
in
je
or
out
fidivl
mov
sbb
dec
popf
fsubrl
pusha
push
mov
mov
dec
xchg
mov
jp
jb
cwtl
pop
stos
mov
or
jmp
mov
ja
and
pop
nop
ljmp
xor
push
fsubl
ss
test
xchg
sub
cwtl
paddsw
ljmp
mov
lret
xchg
hlt
xor
outsb
pop
or
sub
mov
cmp
mov
cmp
es
imul
cmp
ss
adcb
xchg
bound
jo
mov
or
fnsave
mov
int
ja
jb
mov
outsl
scas
and
andb
outsl
jns
movsb
sub
mov
mov
fcomi
jg
add
xchg
lret
pop
dec
or
inc
dec
fcompl
cmp
mov
sbb
pop
sub
ret
pop
xorb
cmp
and
bound
dec
push
ljmp
in
inc
neg
inc
xchg
nop
and
loope
lods
pop
ljmp
jle
cmpl
int3
gs
in
fcmovu
mov
in
pop
mov
pop
std
rorl
mov
push
sarl
mov
push
js
xchg
adc
notb
jae
clc
daa
jne
jle
cmpsl
dec
outsb
add
xchg
sub
loopne
leave
pop
arpl
mov
sbb
mov
iret
fs
scas
paddw
sub
inc
std
cli
inc
xchg
sbb
fcmovu
mov
js
add
das
and
xchg
int3
and
inc
fsubr
mov
mov
sti
xlat
add
pop
cmp
aam
and
out
and
scas
fidivrs
roll
mov
aad
in
jb
push
pop
mov
stc
xchg
push
call
xorb
mov
jbe
aas
mov
dec
xchg
jbe
push
scas
test
sub
subb
pop
inc
int
fs
mov
push
int
add
lcall
mov
daa
test
gs
shrb
in
dec
das
pusha
movl
add
pop
fldcw
imul
sbb
mov
jne
fwait
push
xchg
test
ds
push
pop
aaa
enter
in
add
test
stc
sbb
rorb
idiv
mov
dec
adc
sbb
in
jo
and
sahf
ss
pop
cmc
dec
ss
icebp
pop
push
or
jg
fisubs
lret
scas
push
mov
aaa
cmpsl
int
shrb
int
xor
mov
mov
add
adc
jae
jmp
xorb
aad
and
adc
push
mov
add
dec
pop
pop
cmp
xor
push
jle
cwtl
idivb
inc
sahf
loopne
push
xchg
lock
dec
jnp
imul
xchg
repnz
cmpl
pop
jmp
orl
pop
and
out
mov
pop
jne
mov
dec
lahf
sub
adc
andb
xchg
cwtl
roll
inc
cltd
dec
mov
sahf
fsubl
aam
mov
sbb
outsl
or
dec
mov
enter
in
lods
push
pop
dec
inc
or
notb
xchg
xchg
adc
pop
xchg
mov
jnp
push
cmp
loope
pop
mov
mov
adc
sub
jp
pop
and
push
mov
std
lret
ljmp
fistps
jmp
xchg
and
dec
in
push
ja
rorb
mov
ja
sub
loope
xchg
dec
ret
pop
mov
dec
sbb
push
xchg
and
sub
adc
cmp
popa
ret
mov
sahf
xor
adc
xor
and
mov
aam
rorl
dec
dec
std
aaa
sbb
les
std
imul
movsl
mov
mov
arpl
scas
add
bound
int
aaa
push
xchg
cli
test
sahf
ret
adc
out
push
mov
adc
jnp
jne
push
mov
shl
or
sub
cwtl
jle
push
bound
outsl
or
pop
lret
cs
adc
imul
cmp
jg
or
sbb
xor
sbb
loop
jle
xor
dec
mov
mov
jbe
loop
lea
sub
leave
pop
cmp
out
sahf
adc
adc
or
imul
sarb
jbe
pop
xorb
ja
push
sbb
push
and
enter
mov
pop
pop
mov
out
ret
adc
inc
dec
push
pop
lods
bound
inc
pop
aam
mov
jne
add
lahf
mov
or
lock
pop
popa
mov
xchg
jge
stos
shll
or
outsl
ja
mov
test
or
outsb
mov
out
xchg
or
push
pop
sbb
inc
jecxz
push
and
popf
outsb
or
inc
or
mov
mov
mov
sub
fst
ret
stos
test
cmp
xor
mov
cmp
int
hlt
inc
push
stos
mov
pop
cmp
adc
movups
sub
dec
divb
stos
lcall
bound
xor
ffreep
push
lret
mov
sbbl
adc
xchg
xchg
mov
or
adc
mov
lock
push
lea
push
call
and
push
in
movsl
scas
inc
mov
rcr
pop
and
jns
out
inc
int3
testb
pop
sti
xor
push
pusha
bound
mov
jl
mov
or
xor
inc
cmp
cmp
shlb
dec
sbb
mov
repnz
xorl
out
jnp
cmp
scas
mov
daa
and
push
test
shlw
sbb
daa
pop
clc
lods
pop
sub
mov
jb
mov
negb
out
lahf
mov
lods
adc
leave
xchg
pop
jb
into
pop
adc
dec
push
cmc
mov
lods
xor
lret
pop
push
mov
add
xchg
inc
or
pushf
popa
mov
cmp
sarb
jecxz
stos
mov
jno
jno
out
repz
movsb
out
dec
dec
push
mov
cmpsb
fisubrs
xlat
sbb
pop
lret
xlat
xchg
jge
xorl
rep
pop
add
cmpsb
or
push
fcompl
iret
mov
dec
clc
inc
xor
cmp
lahf
mov
mov
sbb
in
xlat
es
mov
daa
insl
dec
mov
repnz
fwait
xlat
adcl
aaa
repz
pop
sahf
mov
imul
pop
jecxz
push
add
jle,pt
xlat
mov
clc
dec
sbb
xchg
fsubrp
pop
test
xchg
or
mov
and
idiv
sub
adc
cli
ja
scas
in
test
add
cmpsb
adc
dec
ja
fdiv
jp
pop
xchg
decl
jnp
pop
adc
in
ja
add
sbb
and
insb
ret
pop
push
mov
mov
push
xor
out
jl
push
mov
inc
daa
inc
aad
and
ds
dec
mov
mov
inc
adc
xchg
in
in
jns
stos
cmp
dec
test
pusha
cmpsl
in
fdivp
loopne
pop
mov
add
xor
dec
adc
or
rcl
mov
shll
dec
ss
or
lret
adc
mov
cwtl
cli
test
push
enter
cmp
mov
cmpl
dec
pop
jnp
in
lods
scas
inc
cmc
cltd
aas
sbb
push
pop
in
xor
jb
fwait
enter
xchg
mov
mov
nop
adc
js
jnp
imul
push
sub
jmp
xbegin
add
jo
cmp
push
cmp
or
add
cwtl
addl
movsl
subb
xchg
imul
aas
mov
lods
es
pop
ljmp
ljmp
cmp
out
faddl
sbb
ficoms
roll
mov
sub
cmpsl
imul
adcb
rcr
adc
pop
jo
xchg
push
cli
pop
push
lcall
xchg
fmul
push
std
dec
decb
fsubp
sub
test
add
mov
ss
test
test
jbe
push
sbb
jg
inc
std
popa
rorb
dec
call
ret
int3
fcoms
fstpl
add
mov
test
scas
cld
ds
sarb
xlat
push
and
jns
mov
sar
sub
in
sub
or
les
inc
clc
fnstcw
call
les
xorb
jl
sub
push
push
sahf
sub
adc
cmp
xchg
scas
es
jo
mov
outsb
into
xchg
lods
pushf
or
sahf
test
lahf
call
jae
ds
ficoms
mov
les
or
in
mov
sti
ja
test
pop
test
pusha
pop
outsl
ljmp
or
cmpsl
clc
pop
or
adc
add
mov
dec
dec
xor
mov
stos
cli
lcall
rorl
into
inc
jmp
pop
outsb
call
mov
jl
mov
fsubrl
call
or
dec
xor
mov
into
pushf
fcompl
and
sbb
jns
cmp
xchg
lods
push
enter
jbe
cmp
leave
jg
add
sub
xor
stos
loopne
jb
orb
arpl
pop
les
ja
in
jge
lret
sbb
dec
lods
test
mov
sub
xor
inc
pop
sbb
jnp
popl
sbb
jo
pop
and
loopne
dec
cmpsb
popa
or
ljmp
or
repz
lock
icebp
xchg
outsl
or
jo
lock
mov
cmp
loop
movsl
xor
out
pop
pop
xchg
aad
sti
or
jo
mov
mov
sbb
lcall
out
fmull
push
push
cmp
pop
dec
negb
insb
test
dec
jecxz
and
xor
pop
mov
mov
ljmp
inc
push
clc
adc
pop
pop
je
ret
ja
pop
popl
push
int
rolb
mov
push
push
das
in
scas
repnz
inc
inc
loop
push
enter
imul
xlat
sbb
jg
icebp
xchg
fsubs
pop
enter
pop
mov
ret
jae,pt
js
sbb
mov
movb
mov
aam
ret
ficoml
or
int3
push
inc
push
push
pop
aad
stos
mov
lock
jo
jg
add
sti
ffreep
mov
mov
sbb
and
pop
xchg
pusha
add
loope
lahf
les
push
lods
mov
stos
mov
xchg
daa
xor
pop
fmuls
ljmp
pop
xchg
les
mov
inc
lret
jle
outsl
and
aad
and
xor
mov
sti
xlat
lock
push
add
adc
push
pop
pop
mov
inc
pop
ficoml
cmp
mov
jecxz
cmpsb
push
bound
xchg
call
push
dec
lods
xor
add
mov
mov
popf
out
xor
jns
pusha
je
lcall
add
mov
jae
lods
aaa
sbb
or
ret
jecxz
push
jecxz
mov
lods
inc
add
sub
jl
ret
in
mov
mov
add
dec
push
shl
mov
jmp
xlat
repz
dec
adc
lods
test
rorb
dec
or
fyl2x
fnstsw
popa
jmp
clc
jbe
dec
pushf
sbb
xor
mov
pop
out
pop
lods
cmc
hlt
mov
insb
pop
insb
push
push
les
mov
jl
or
adc
loopne
xchg
push
aaa
repnz
add
jne
lcall
push
mov
push
outsl
jno
inc
or
and
pop
add
mov
rorl
fiaddl
sub
inc
or
and
pop
add
mov
rorl
fiaddl
sub
inc
or
and
pop
add
mov
rorl
fiaddl
sub
inc
or
and
fiaddl
lret
loope
pop
xor
mov
and
shll
out
mov
shld
dec
and
adc
inc
ficoms
mov
push
xchg
push
loope
icebp
loop
pop
sarl
and
adc
inc
sahf
push
into
mov
mov
or
inc
icebp
push
shll
int
sarl
or
aas
into
call
imul
mov
inc
sub
leave
pop
inc
into
ljmp
nop
sub
sbb
lret
jg
xchg
lret
or
fwait
pop
decb
fs
pop
aas
cmp
dec
add
and
clc
aas
lds
xor
adc
rcr
out
and
xchg
fsubp
mov
testl
loope
aas
movsl
mov
decb
sbb
inc
ss
popf
pop
sub
jmp
test
sub
push
rorb
in
int
adc
mov
lods
jae
mov
decb
xor
cmp
in
ds
pop
mov
mov
push
xchg
pop
pushl
inc
fidivrs
dec
ds
sbbl
ror
and
xor
mov
popa
shlb
inc
ficoms
out
fsubrs
in
hlt
and
aaa
nop
sub
xor
out
xchg
sbb
mov
jg
sub
xor
and
clc
inc
sti
push
jmp
xor
aad
call
sbb
outsb
rcrl
and
adc
inc
ficoms
mov
push
xchg
push
loope
icebp
outsb
rcrl
and
adc
inc
ficoms
mov
mov
pop
dec
js
into
add
xchg
clc
inc
and
pushf
sar
dec
enter
cmc
push
cltd
cmp
sbb
pop
ljmp
std
int3
jne
popa
ss
lcall
loope
mov
nop
pop
mov
cli
call
out
dec
jg
or
xchg
cmpsb
inc
scas
mov
je
push
xchg
iret
mov
cmc
cmp
jp
or
jle
push
mov
or
lahf
outsl
loope
push
out
inc
fwait
into
fisttpll
cmpsb
imul
in
cmc
push
arpl
cwtl
in
add
je
sbb
aam
jne
ljmp
push
xchg
push
mov
ljmp
subb
ljmp
lds
jo
jne
call
sbb
push
sub
addr16
andl
mov
mov
inc
push
adc
jno
stos
sbb
push
das
push
xchg
popf
push
stc
push
jmp
rorb
sub
sti
xchg
mov
out
repnz
mov
lret
pop
or
aad
test
jae
daa
loope
je
sbbb
stc
stos
mov
xchg
sbb
push
std
jmp
in
lds
and
in
mov
xchg
data16
nop
lods
in
test
sub
sahf
mov
dec
daa
inc
sbb
out
xor
jmp
imul
jo
inc
out
stos
push
add
adcb
insl
in
adc
pusha
add
lea
jns
je
sahf
jb
sub
scas
cmp
push
adc
shrl
and
ret
push
test
pop
mov
push
push
jge
dec
nop
sub
sti
xor
in
insl
cld
inc
xchg
and
add
shll
orb
hlt
adc
jp
movsl
push
pop
arpl
mov
sti
and
mov
subl
das
shlb
ret
push
or
adc
push
cmp
mov
mov
push
orl
lods
adc
pop
add
aaa
rorb
movsb
test
jne
pop
outsb
mov
movsl
loopne
movsb
xor
hlt
stc
scas
cmp
out
dec
sub
mov
push
adc
into
pop
pop
jecxz
jg
adc
push
cmp
dec
frstor
add
clc
das
jmp
jp
mov
cmp
int3
xchg
leave
inc
and
mov
sbb
mov
mov
lock
std
leave
fldt
subb
jmp
cmp
pusha
rcrb
xchg
jecxz
jmp
sbb
rorl
sbb
xchg
cltd
fwait
cwtl
clc
inc
jmp
xorb
lods
xchg
mov
xor
mov
cmp
jnp
xor
mov
inc
inc
fsubs
push
ds
pop
aaa
add
xor
rcll
mov
fwait
daa
lret
imul
cmp
aad
sbb
sbb
cmp
cmp
and
xor
dec
push
mov
push
mulb
and
fistl
push
dec
mov
popa
jl
stc
out
or
inc
inc
inc
test
jge
sub
nop
add
pop
imul
and
dec
lcall
repz
pop
in
mov
add
in
fimull
imul
jo
push
imul
negb
loop
lods
insl
xor
push
pop
or
push
jge
mov
jmp
fsubrs
mov
jg
ss
in
cmp
xchg
aas
test
adc
pop
mov
in
sbb
pop
xor
das
mov
lcall
xchg
push
js
xor
pop
push
push
je
pusha
jbe
rcrb
js
add
rolb
inc
mov
push
pop
or
fbld
jno
cli
mov
xchg
and
jmp
fwait
lods
inc
repnz
daa
pop
loope
js
inc
mov
cmp
xor
arpl
popf
mull
rcll
dec
arpl
cmp
insb
inc
inc
packssdw
or
xchg
and
inc
in
cmp
mov
push
push
mov
sub
jbe
mov
dec
push
xchg
lahf
mov
std
lods
push
jg
pop
dec
js
jmp
in
add
popa
push
pusha
sbb
nop
das
or
jl
xor
jae
loopne
into
in
cmp
cmp
pop
mov
adc
mov
rcr
pop
sub
stc
sub
pop
imul
insl
cli
gs
inc
aam
bound
inc
inc
xor
mov
sbb
iret
add
cmp
sub
mov
testb
fwait
or
inc
jge
mov
dec
hlt
pop
pop
push
aas
xlat
mov
mov
jl
or
je
jmp
add
mov
adc
cs
rolb
cwtl
rorl
or
rclb
icebp
imul
cmpsl
incb
fdivrs
pop
pop
jnp
xchg
inc
inc
jns
or
mov
xor
gs
int3
icebp
jg
pop
mov
das
mov
or
or
cmp
sub
dec
jle
push
jp
rcrl
lret
fwait
out
adc
xor
aam
adc
add
push
fistpll
clc
dec
lods
mov
fildll
mov
fwait
repz
cmp
popf
push
jge
cmp
cmp
int
cltd
xchg
push
mov
loopne
sbb
cmp
push
bound
inc
repz
mov
jp
fs
jg
mov
in
inc
jg
add
out
pop
mov
sbb
xrelease
inc
bound
inc
and
fsubrl
xchg
push
sub
mov
mov
pusha
sbb
fisttpll
es
rolb
cmc
sub
test
frstor
cmp
clc
cmpl
lock
mov
sbb
test
fdivr
pop
bound
aad
in
andb
push
pop
dec
push
sub
pop
mov
jo
xchg
fnstsw
mov
neg
scas
loop
inc
jnp
pop
mov
jae
push
push
sub
lret
dec
push
xchg
pop
and
test
aas
int3
xchg
jb
cld
into
stc
jnp
loope
dec
sub
inc
add
iret
inc
or
xorb
lret
pop
mov
in
and
xor
add
or
jle
inc
sub
pop
jns
popa
lret
inc
insb
fstl
call
xlat
jae
int
cmp
cli
sbb
xor
pop
jle
cli
push
xorl
sbb
test
movsb
orb
xor
sub
xorl
in
inc
cld
pushf
js
mov
jb
dec
pop
push
pop
call
stos
ss
jp
mov
scas
lods
push
pop
push
mov
dec
loop
lcall
aad
popf
mov
mov
xchg
pop
rclb
xor
es
imul
movsl
and
sbb
xchg
dec
pop
mov
test
cmp
mov
testb
imul
outsb
sbb
lret
aas
pop
push
mov
stos
push
out
icebp
scas
loopne
push
dec
xchg
mull
cmpsl
mov
subl
hlt
inc
and
mov
pop
mov
push
mov
aad
mov
int
cld
nop
xor
arpl
push
pop
data16
mov
mov
pop
pop
mov
loope
push
ljmp
jne
test
lcall
push
and
cmpsl
xchg
sub
movsl
jp
out
add
outsb
cmp
in
es
and
fwait
dec
cmp
scas
adc
bound
lock
stos
push
fcmove
dec
sbb
xchg
test
int
pop
sbb
push
imul
shll
in
jae
push
loope
lahf
daa
std
shl
xor
rol
mov
sbb
adc
das
jg
jg
jge
pop
sarl
mov
xchg
je
js
xor
roll
mov
sub
cld
negl
adc
push
xchg
mov
mov
jo
pmuludq
fcmovnbe
insl
xlat
lock
shrb
sahf
adc
add
pop
push
mov
sub
sbb
into
jle
add
rcrb
lret
mov
xlat
add
dec
ljmp
mov
es
jecxz
push
adc
dec
push
stos
mov
enter
js
mov
sti
das
pop
es
push
stos
pop
jmp
scas
outsb
cs
repz
xor
fisubs
test
xchg
mov
in
cld
pop
gs
repnz
jmp
dec
push
jns
inc
sbb
or
mov
movsl
loope
call
mov
jmp
mov
and
cltd
nop
push
cld
jae
or
push
jno
loope
push
cld
test
fiadds
mov
cmpb
lahf
stc
mov
outsl
add
loop
jl
popf
hlt
cmpsl
int
ficompl
xchg
stos
mov
jns
sarb
adc
aad
call
dec
push
gs
jnp
xchg
pop
cmp
adc
lcall
cmp
xor
xchg
mov
pop
fs
push
jno
cmp
aad
inc
daa
popa
test
mov
outsl
ds
test
add
and
mov
pop
repnz
inc
sub
xchg
mov
fmul
xor
movsb
lock
das
inc
push
jno
sbb
xor
pop
cs
push
sahf
mov
pop
mov
pop
add
jl
mov
cli
not
mov
lea
mov
push
mov
les
xor
add
data16
lcall
pushf
jecxz
loope
xchg
sarl
cltd
or
sub
in
mov
inc
xor
mov
mov
movsb
in
pop
push
push
shrl
push
stos
xchg
test
dec
jno
and
stc
fistpl
cs
dec
test
inc
or
inc
cli
dec
outsb
loope
nop
xor
jg
sahf
pop
scas
test
stos
push
push
fstpl
hlt
pop
mov
push
lea
pop
rcl
mov
shll
sbb
push
loope
shll
jne
sub
lds
dec
xchg
fidivrs
es
stos
lahf
scas
lea
jno
jle
out
cmc
je
mov
adc
xor
fldl
cmp
mov
push
enter
xor
aas
dec
add
ljmp
outsl
ret
pop
add
fnstsw
out
outsb
mov
jo
sub
add
scas
ss
ljmp
xor
pop
loop
jne
rcrl
ret
mov
pop
sub
sar
bound
das
pop
jno
and
ret
mov
pop
xor
in
out
sar
fstpl
push
jne
dec
fidivl
mov
xorl
or
or
push
dec
pop
jno
mov
clc
and
inc
rsm
mov
jns
ret
aaa
adc
sbb
das
cmpsl
lods
int3
inc
xchg
push
ret
xor
xchg
in
push
pop
pop
stc
add
movq
xchg
sbb
add
dec
sub
dec
cli
add
incb
fnsave
mov
add
cmc
adc
ja
arpl
in
ja
in
cmp
push
mov
sahf
pop
ljmp
lods
mov
clc
repnz
dec
xchg
fists
fstl
test
mov
insl
popf
shrl
dec
jecxz
and
cltd
pop
push
and
sub
jp
negb
scas
pop
sbb
pop
test
popa
cmp
and
jb
add
pop
mov
cmp
jo
das
sbb
mov
aaa
fs
adc
inc
stos
aas
in
xor
sub
orb
dec
mov
push
bound
mov
jg
add
sbb
mov
lock
push
aas
arpl
xchg
xor
inc
and
shrl
cli
lea
or
xchg
rolb
xor
aaa
mov
loopne
push
adc
fldl
mov
fimuls
out
jmp
jg
mov
das
cltd
rorl
insb
inc
dec
fwait
loopne
into
mov
cmp
in
mov
mov
lods
jge
into
jecxz
je
push
xchg
jle
or
add
fadds
mov
jmp
in
push
movb
mov
xor
test
outsb
stos
or
sbb
mov
fstpl
jmp
shrl
insl
sti
mov
mov
jae
cmp
ret
or
sbb
imul
push
mov
inc
fwait
add
add
das
sub
cwtl
push
mov
cli
cwtl
pop
mov
fimuls
dec
xchg
xchg
cmp
sahf
and
push
dec
push
sub
cmp
xor
lods
pushf
testb
rorb
pop
shrb
rclb
sbb
clc
push
orb
dec
pop
leave
cmp
fldt
or
add
fwait
loop
pop
pop
fcompl
mov
jg
dec
sbb
jl
pop
jecxz
and
pop
popf
jg
push
xchg
dec
iret
aam
cmp
jmp
ficoms
inc
stos
mov
pop
std
mov
inc
push
xchg
add
mov
pusha
imul
aam
xchg
jp
mov
xor
pop
imul
arpl
leave
divl
lahf
ds
adc
push
fsubl
push
aam
pop
cmp
adc
mov
out
push
sbb
mov
push
imul
insl
shlb
or
cmp
jle
outsb
je
push
push
incl
mov
sti
fisubs
inc
sbb
jne
and
sub
jp
and
add
outsl
repnz
xchg
ss
adc
fbld
insb
bound
mov
mov
cld
mov
push
imul
mov
ljmp
divl
xchg
lahf
sub
hlt
enter
push
cmp
dec
loop
mov
adc
xlat
test
int
xchg
lcall
xchg
add
lods
mov
fsubs
das
xchg
inc
push
into
push
out
lock
loopne
movsl
shll
cmpb
dec
out
ljmp
cwtd
int3
pop
push
inc
ffreep
stos
sarb
add
sti
out
lock
inc
mov
mov
mov
cmpsb
es
push
adc
push
mov
enter
pop
outsb
mov
xchg
pop
cmp
stc
clc
loope
ret
jmp
hlt
aas
repnz
jle
mov
jnp
loop
sub
jnp
inc
int
scas
sub
mov
jae
fs
mov
push
add
mov
push
stos
das
mov
loop
xchg
jbe
and
or
jge
mov
pop
fisubs
les
cmpsl
push
scas
pop
rcrb
pop
add
insl
inc
daa
xchg
sarl
cmp
lcall
jbe
movsl
add
arpl
je
push
inc
mov
xor
xchg
xorl
outsl
pop
push
test
andb
mov
test
mov
icebp
push
cmp
in
xlat
or
outsl
test
xchg
mov
ss
in
push
mov
pop
ss
mov
push
das
mov
outsb
addr16
mov
cs
testl
fimuls
sti
dec
mov
jmp
jno
mov
xlat
mov
and
out
dec
adc
jmp
dec
jp
mov
jg
mov
push
dec
cmp
mov
roll
ret
xor
frstor
mov
bound
or
pop
push
sarb
add
ja
ljmp
aam
inc
and
or
mov
adc
out
movsl
mov
jno
lock
push
push
mov
in
aas
pop
dec
aam
xchg
jns
mov
mov
mov
jl
hlt
push
nop
sub
xchg
sbbl
loope
xor
aam
pop
jl
push
data16
xlat
jle
lret
into
mov
and
orb
mov
testb
shll
insl
in
ss
ljmp
push
daa
sub
sub
pop
lds
add
push
jge
xchg
sbb
jnp
aad
mov
cmp
out
outsl
pop
jmp
in
jnp
lds
sub
mov
shr
out
inc
xchg
sbb
mov
sbb
mov
dec
inc
push
repnz
jae
loop
int
cmp
adc
idivb
add
fldt
insl
je
call
mov
inc
das
mov
or
fwait
cwtl
cmp
mov
mov
and
add
jb,pn
xchg
rcrl
jecxz
xchg
into
xlat
iret
push
in
stos
jmp
test
pushf
insl
sub
dec
test
or
mov
dec
jmp
cmp
rcrb
lret
sar
fisubrl
fisubl
add
jbe
mov
jo
ljmp
imul
loop
mov
push
addb
call
stos
adc
ds
xchg
sbb
xchg
or
sub
push
in
jmp
add
mov
mov
loopne
and
sbb
lcall
insl
les
hlt
in
xchg
fmuls
imul
mov
push
jle
sbb
mov
cmpsb
call
push
adc
movsl
arpl
movsb
pop
out
dec
std
in
sub
in
insl
insl
xor
aas
or
jbe
test
movsb
adc
pop
push
add
fiaddl
stos
add
fstl
test
and
inc
lret
lods
sbb
popa
sub
mov
sbb
div
push
xor
mov
sbb
flds
dec
jmp
out
jmp
sarb
sub
xchg
out
and
jo
loop
lods
sar
mov
je
jecxz
mov
cli
inc
daa
int
push
popa
push
mov
cltd
out
pop
xchg
lds
mov
jge
xchg
arpl
iret
aad
lods
je
ds
add
fwait
pop
dec
fdivs
das
pop
xchg
jp
sub
sub
jp
sub
mov
aas
adc
orb
out
ja
mov
and
add
aam
ss
pop
les
sub
pusha
dec
cmp
iret
loop
inc
aas
push
xchg
or
int3
cmp
rcl
sub
jo
inc
cld
je
fstpl
nop
mov
pop
loop
aam
sbb
adc
loop
sti
add
push
xorb
lea
pop
jnp
sub
fmul
fisttpll
int3
and
sbb
cmp
adc
mov
add
inc
lcall
nop
icebp
push
loop
dec
jae
iret
iret
sbb
fmull
fldl
lods
idiv
pop
test
cmp
fists
les
mov
mov
aaa
jmp
pop
cmpsl
xlat
jg
in
mov
movsb
xor
popf
push
pop
leave
lea
cmpsb
iret
adc
add
xor
mulb
fadds
pop
mov
in
mov
lcall
stos
push
sahf
sub
jnp
jl
movsb
fs
out
rol
jg
dec
cmp
fldcw
aaa
mov
orb
fisubs
pop
mov
mov
xor
sbb
push
sub
hlt
es
sbb
fwait
inc
dec
je
add
adcb
adc
jmp
fwait
xor
mov
mov
xchg
xlat
xor
adc
lcall
loopne
sub
xor
dec
pop
sbb
out
pusha
test
xchg
ret
add
sub
jmp
mov
inc
adc
loop
aaa
leave
cmc
mov
cwtl
es
data16
xor
adc
push
jns
dec
or
sbb
xchg
sub
inc
pop
pushl
push
lock
test
cli
int3
inc
lock
xchg
stos
cltd
insb
rclb
jge
or
lahf
cli
push
xor
jo
jmp
mov
std
arpl
shrl
xorb
jg
mov
imul
mov
lds
xor
or
mov
sub
popf
push
cmc
adc
mov
stos
mov
fst
lahf
mov
ret
add
aad
push
sub
loope
lret
push
mov
dec
xor
cld
outsb
cltd
repnz
sub
cmp
out
bound
popf
xor
or
mov
adc
mov
cs
xor
pop
xchg
fisubl
sbb
les
cs
inc
inc
cmp
pop
xor
inc
cltd
inc
mov
jne
aad
mov
cwtl
insl
xor
sbb
sbb
pop
dec
cs
mov
ds
pop
mov
xchg
aas
aas
and
popf
mov
stos
test
es
xchg
lods
cltd
push
bound
push
popa
mov
or
push
or
sub
movsb
jb
push
loope
icebp
outsb
rcrl
and
adc
inc
ficoms
mov
push
xchg
push
loope
icebp
outsb
rcrl
and
adc
inc
ficoms
mov
xchg
push
loope
icebp
mov
rorl
xor
popa
jno
inc
push
into
mov
push
xchg
psraw
outsb
rcr
dec
and
add
sahf
adc
push
jbe
adc
test
inc
mov
loopw
pushf
imul
out
in
xchg
jnp
dec
cmpsl
pop
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
push
dec
mov
cmpsl
stos
dec
mov
jle
push
sti
pop
lret
das
fstpt
jnp
jle
imul
jmp
fists
mov
repnz
in
lods
fisubs
test
adc
sbb
out
lock
inc
or
jmp
jmp
sti
stc
aaa
mov
mov
cmc
out
out
adc
sbb
test
shl
rolb
mov
inc
test
xchg
push
cs
sbb
bound
lock
dec
pop
cmpsl
stos
pop
pushf
inc
dec
ja
push
xorl
xchg
outsl
fcmovnu
fildl
in
cmp
jnp
mov
ror
clc
outsl
cmpsb
push
mov
adc
aaa
addr16
sub
movl
mov
pop
xchg
pop
inc
cmpsl
mov
lods
shrb
stos
insb
jle
sti
loop
testl
push
mov
jge
pop
sti
pop
lret
fstpt
sub
cmp
or
sbb
imul
ret
into
xor
inc
int
frstor
inc
xchg
imul
pop
mov
cli
cmp
cs
lret
iret
inc
call
fs
mov
dec
pop
scas
pop
cmpsb
jbe
sbb
ret
mov
adc
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
fcmovb
push
push
in
cmp
or
mov
inc
call
jmp
in
dec
scas
ja
ljmp
add
jno
sti
ss
mulb
mov
push
mov
dec
inc
pop
sahf
scas
int3
and
ljmp
shlb
cmp
outsb
lds
xchg
cld
mov
and
daa
std
pop
jmp
jg
andb
jo
sbb
or
cmp
push
inc
cmp
test
shrl
cmpsl
pop
push
push
lahf
pop
or
stc
push
lret
mov
add
mov
mov
sti
sub
test
pushf
cmp
and
jecxz
xchg
or
mov
ljmp
add
and
lret
xchg
xchg
adc
gs
mov
shrb
movsb
lods
inc
or
addb
push
push
lods
stos
mov
or
dec
dec
push
mov
imul
movsb
aam
sub
add
fwait
or
idivl
nop
loope
imul
add
push
push
insl
mov
arpl
scas
inc
movsl
in
data16
jg
in
aam
stc
mov
push
pop
add
inc
dec
repnz
les
scas
xchg
sbb
cmpsb
les
mov
rol
push
imul
cs
in
test
mov
fbld
sub
data16
insb
xchg
xchg
push
push
les
fldl
xchg
and
imul
adc
push
fs
xor
push
jmp
mov
or
jge
pop
idivl
pop
jno
and
in
sbb
push
mov
push
movsb
in
sbb
pop
pop
lcall
rol
aas
inc
ret
test
inc
push
shld
daa
push
mov
fistpl
cmc
icebp
clc
fs
inc
adc
jmp
or
arpl
pop
lcall
mov
xchg
jmp
dec
add
addr16
adc
pop
lock
mov
mov
data16
int
mov
dec
fcoms
cmc
out
inc
lcall
jne
cmpsl
mov
and
movsl
push
or
hlt
xchg
rcrb
mov
xlat
add
push
mov
adc
push
scas
dec
adc
js
rclb
mov
add
lods
fisubl
es
adc
mov
sbb
xchg
xchg
notb
cld
cld
add
push
stc
pop
test
mov
rcrb
mov
cmp
jns
adc
rcrl
push
test
mov
stos
dec
add
inc
adc
sbb
iret
repnz
sub
dec
cmc
lahf
outsl
xor
xchg
sub
fwait
sbb
ss
sub
mov
insl
dec
cmp
or
cs
lret
push
call
fsubrp
jp
in
push
sbb
call
repz
cmpsb
pop
dec
lahf
aas
int
cs
ds
pop
out
lret
outsl
aaa
lret
mov
lret
aaa
inc
stc
test
sbb
pop
mulb
scas
sub
jl
fimuls
cmpsb
lahf
add
jg
arpl
push
and
das
adc
mov
jg
fadds
pop
adc
dec
aaa
mov
inc
dec
lds
or
pop
dec
inc
lods
ja
pusha
nop
mov
xchg
cmp
scas
mov
push
sbb
les
les
mov
fwait
ror
bound
cmpsl
xor
scas
shrb
andb
push
stos
aas
or
test
mov
test
mov
mov
out
xchg
movb
sbb
cmpsb
lret
push
xor
pop
push
scas
cmc
lods
sbb
lods
dec
mov
aaa
fwait
rorb
stos
pop
mov
lret
cmpsb
pop
sti
cmp
mov
dec
jp
movsl
cli
push
mov
push
movsb
mov
bound
pop
and
into
jecxz
and
imul
and
add
jmp
addr16
data16
pop
scas
push
xlat
pop
cli
jle
mov
cmpsb
push
or
leave
dec
popf
push
mov
push
outsl
fdivs
jbe
mov
xor
pusha
insb
pop
adc
fstp
negl
fcmovne
aaa
sub
stos
test
test
mov
cmp
mov
lcall
pusha
jl
xor
paddusb
inc
addb
pop
xchg
mov
imul
jp
mov
sbb
into
in
lahf
leave
adc
shrb
into
pop
jne
jae
fs
andl
fbstp
xchg
imul
push
cmp
pop
and
scas
dec
test
out
dec
outsl
mov
inc
cmpsb
or
loopne
xchg
test
push
push
push
mov
xor
and
push
sbb
xor
cmc
jbe
cmp
push
ljmp
mov
sub
mov
adc
cmp
outsl
jmp
jno
aas
cwtl
push
test
inc
sti
inc
cmp
iret
or
insb
in
cmp
leave
mov
adc
sbb
xchg
mov
cmp
cmp
add
and
or
and
dec
push
hlt
xor
mov
sti
sub
inc
scas
or
data16
and
mov
insb
xor
dec
jp
js
aam
or
fwait
xchg
ss
cmp
in
push
or
mov
dec
mov
sbb
mov
inc
repz
leave
inc
sbb
sub
pop
inc
xchg
sub
stos
addl
popf
cs
clc
jge
scas
bound
push
dec
jno
push
scas
sub
push
mov
std
push
cmpsl
aaa
movsb
int
fists
outsl
out
jg
cs
and
inc
aad
add
mov
dec
push
push
lret
mov
arpl
xchg
hlt
xor
shr
cli
call
jl
mov
test
adc
lret
pop
std
pop
loop
or
aaa
push
imul
unpckhps
int
ljmp
inc
xor
pusha
outsb
in
jmp
add
and
hlt
jp
xor
idivb
xchg
add
aam
shll
outsl
cmp
sbb
xor
cmp
inc
xor
ss
push
int3
pop
adc
push
addl
dec
lea
dec
test
sub
orl
and
inc
pop
mov
jmp
hlt
test
push
xchg
iret
loope
pushf
push
mov
sti
sub
pop
mov
inc
sbb
sub
inc
icebp
jne
xchg
jmp
dec
shl
aam
push
lcall
push
sbb
cmp
je
aad
push
in
sub
dec
popa
xchg
lret
lods
insb
jle
push
stos
test
mov
clc
scas
mov
inc
xchg
xchg
push
hlt
sub
adc
fimuls
adc
pop
mov
mov
mov
mov
jns
or
inc
nop
and
pop
xchg
enter
jp
mov
out
sub
sahf
sbb
mov
xchg
into
push
cld
rorl
pop
and
pop
push
adc
lock
imul
dec
and
inc
lret
das
daa
popf
lods
icebp
xchg
outsb
sbb
outsl
pop
pop
nop
mov
js
and
leave
dec
xchg
lea
fisttpl
sub
sahf
sbbl
dec
jne
stos
mov
cmp
lods
push
lea
dec
add
pop
dec
pusha
sbb
dec
push
js
stos
icebp
xchg
mov
sbb
mov
repnz
jp
leave
cmp
inc
jp
in
cmpsb
loop
adc
xor
sbb
inc
inc
int
pop
outsl
sarl
mov
xchg
push
sub
sbb
jae
jmp
cltd
pop
mov
lods
lea
xor
pop
fdivs
adc
or
push
xchg
cltd
stc
outsl
clc
shll
dec
dec
jecxz
xchg
lea
scas
fldt
lahf
mov
int3
add
jg
ficompl
andb
xlat
movsb
int3
stos
push
test
mov
pop
mov
sub
pop
xchg
push
add
rorb
add
dec
sbb
lods
addb
cmp
in
and
outsl
lahf
cs
xor
pop
lcall
jae
sahf
pusha
lods
outsl
mov
int3
ja
repnz
dec
mov
mov
dec
dec
aas
or
rcr
add
ja
mov
push
inc
sbb
or
das
cmp
dec
int3
inc
jge
cltd
test
xchg
push
je
insb
gs
push
icebp
add
out
xor
fcoml
adc
shll
and
enter
xor
jg
mov
push
xchg
imul
lcall
ss
and
fs
fsubrl
mov
pop
or
or
jnp
mov
idivb
dec
movsb
fsin
push
mov
sbb
js
cmp
in
cmpsl
add
jge
aad
sarl
sub
cs
or
cli
ficoms
dec
push
mov
push
sti
addr16
into
push
loop
addr16
into
aad
add
dec
out
jge
xor
int3
add
pop
imul
clc
cli
cld
scas
add
sbb
cmpsl
aaa
push
mov
jecxz
and
or
cmp
std
ds
js
push
add
test
ret
leave
fs
xchg
cmp
das
sub
xchg
sahf
bound
in
stos
cmp
inc
cmp
xchg
mov
inc
jns
lahf
jne
mov
and
popf
pop
pop
adc
sub
movsb
outsb
fwait
movsl
add
js
sbb
adc
pop
btl
mov
stos
lods
hlt
inc
out
xchg
push
fsubs
add
out
bound
ret
fs
xchg
adc
pop
and
add
aad
daa
jge
push
and
jb
cmpsb
scas
setae
mov
or
push
jns
sub
add
movsb
pop
push
add
and
adc
test
push
push
call
push
mov
push
cmc
mov
nop
push
movsb
in
inc
imul
sahf
dec
push
mov
xchg
xor
pop
das
aam
fidivl
mov
xor
xor
rcll
adc
inc
cmp
jne
add
mov
mov
or
add
inc
ud0
imul
and
mov
jecxz
sbb
pop
repz
lret
daa
mov
mov
dec
pop
pop
sbb
sub
mov
fidivrl
outsb
leave
nop
cmp
rcrl
cmpsb
aas
mov
mov
add
icebp
dec
out
mov
and
cs
test
push
mov
pop
icebp
add
sbb
sbb
push
xor
adc
xchg
xchg
xor
in
call
into
xchg
idivl
test
mov
addr16
in
pop
pop
jbe
jno
lcall
out
inc
dec
push
cmp
jle
popa
daa
js
inc
xor
push
pop
scas
dec
dec
jl
add
sbbl
inc
add
dec
call
lcall
lahf
pop
jmp
hlt
nop
icebp
mov
dec
jo
mov
push
jno
movsl
dec
xchg
pushf
lret
mov
sub
and
fimull
mov
xchg
xor
repz
in
mov
movsl
xor
dec
loop
cmc
xchg
loope
pop
sbb
mov
xor
dec
and
pop
lods
or
fwait
dec
jl
cs
aad
xor
and
xlat
cld
jb
inc
cltd
adc
inc
imul
sub
sti
xchg
mov
mov
mov
movsb
dec
scas
loope
inc
ret
movsb
pushf
sbb
cmpsl
pop
jo
inc
adc
fadds
test
dec
add
jg
or
ds
or
jg
outsb
rorb
pop
rcl
lea
inc
insl
xchg
cmc
cmc
loope
xchg
repz
xlat
mov
imul
das
int
xor
out
pusha
adc
jae
inc
stos
mov
cmp
jae
cmp
mov
ljmp
adc
mov
pop
xchg
jne
jae
and
cmp
adcb
push
adc
mov
mov
ret
add
or
pop
mov
jmp
imul
xor
pop
movsl
icebp
mov
aaa
mov
iret
xchg
mov
arpl
sbb
out
dec
data16
outsb
cmp
dec
fsubr
pushf
loope
jns
sbb
dec
negl
mov
lods
mov
add
cmpsb
mov
loop
subb
mov
rcl
or
push
lds
leave
roll
mov
fsubrs
cld
sbb
into
fidivl
inc
js
movsb
cmpsb
daa
data16
ja
outsl
fnstcw
mov
pop
sar
or
sub
push
push
popf
filds
dec
test
mov
push
int
jecxz
inc
push
cmp
cmp
adc
cld
push
jle
xchg
aas
dec
sti
sub
xlat
fdivl
idiv
lahf
sahf
call
rcl
enter
scas
sub
lods
jns
sbb
pop
xchg
repz
loope
ds
call
jle
fisttps
fs
push
xchg
mov
rclb
lock
mov
gs
pop
in
dec
dec
inc
repz
aaa
dec
push
fisubl
in
int
test
mov
add
jns
mov
cmp
xorb
mov
lods
in
mov
scas
leave
arpl
fwait
scas
pop
and
es
ret
pop
sbb
cmp
cmpsb
add
mov
xchg
sub
jp
push
xchg
cmc
int
gs
jns
mov
int
pusha
inc
cmp
scas
xchg
pop
fs
mov
cltd
outsl
adc
or
jp
lret
rcll
std
push
mov
lods
sbb
and
mov
in
push
std
rcrb
push
push
aam
int
rcrl
imul
mov
jno
sti
jno
lea
mov
xchg
insl
mov
sub
rclb
ljmp
test
mov
arpl
sahf
out
stos
pop
and
call
push
or
and
pushf
mov
adc
mov
cli
dec
lret
inc
sbb
or
pop
in
jmp
outsb
call
cmp
mov
pop
push
cmp
sub
test
int3
jno
or
inc
add
mov
sbb
lcall
adc
sbb
fldl
or
add
jg
dec
int
and
or
jecxz
iret
out
jb
icebp
outsb
aam
adc
cmp
icebp
filds
mov
xor
gs
lods
add
mov
in
imul
insb
sub
rcl
outsb
je
rcr
xorl
gs
push
daa
add
arpl
imul
iret
cmp
push
cmc
imull
sti
mov
push
add
cmp
js
xor
movups
push
pop
jno
out
and
mov
clc
call
xchg
in
push
push
div
mov
cwtl
xor
sahf
rcrl
test
and
mov
in
jb
mov
xor
rolb
add
dec
lret
jg
rorl
jae
popa
push
inc
add
sti
mov
sbb
jbe
push
cld
gs
or
dec
vrcpss
ret
mov
jge
mov
lods
sub
dec
lea
es
sub
dec
cltd
out
call
addb
push
jl
mov
popa
loope
pusha
mov
iret
push
in
rcrl
jg
stos
enter
orb
loope
inc
adc
clc
fs
cmp
insb
outsb
roll
shlb
jno
fisttps
scas
lock
pop
cmpsl
fcompl
pusha
adc
popa
imul
xchg
push
sbb
in
in
mov
jbe
push
inc
test
out
push
pusha
fldenv
pop
pop
out
cmpsl
or
ret
popa
xor
cmpsb
lds
jnp
mov
xor
enter
in
xor
mov
lahf
ret
inc
icebp
sbb
imul
lock
lahf
or
push
pop
adc
fsubs
je
push
test
push
repz
mov
mov
jge
sub
into
sub
push
dec
sub
jl
jae
dec
push
imul
xor
repnz
dec
add
bound
les
lea
icebp
dec
leave
inc
rol
bound
repz
xchg
or
xor
scas
or
cli
inc
fdivrs
cwtl
pushf
sub
inc
into
test
mov
dec
fadd
and
add
js
inc
pop
jbe
lret
mov
xchg
arpl
pop
xchg
movsb
fstenv
data16
or
imul
cmp
lret
inc
fs
inc
mov
cmp
pop
shrb
xor
and
test
cmpb
subb
xchg
lods
mov
jge
std
insb
push
xor
mov
test
stc
ja
popa
cmp
dec
xorl
push
int
and
push
rorb
cmp
or
nop
in
dec
testl
jp
pop
imul
mov
adcb
notl
xor
add
jg
mov
inc
push
push
mov
push
movsb
mov
scas
or
aam
icebp
push
push
sti
test
arpl
jo
or
sbb
mov
xchg
jbe
cmp
inc
scas
and
movsb
cmp
inc
emms
sbb
mov
fists
addr16
rcrl
popa
aam
shrb
sarl
push
and
pop
jmp
adc
inc
aaa
mov
sarb
jmp
js
inc
shlb
fnstcw
mov
mov
mov
orl
adc
stos
and
das
jb
out
push
out
jb
dec
mov
loopne
enter
fdivrs
push
aaa
ficoml
jne
pop
cmp
imul
sbb
add
or
jo
out
xchg
push
push
fwait
outsl
in
fistpl
pop
pusha
ret
icebp
sub
or
outsl
test
hlt
add
jno
sti
repz
js
pop
fistpll
arpl
mov
bound
xchg
jno
jo
imul
push
push
cmp
addr16
cmp
outsb
mov
arpl
shlb
mov
iret
loopne
mov
jbe
incb
and
jbe
jecxz
mov
cmpsb
aad
stos
decb
sub
mov
pushf
xchg
sub
inc
xor
lret
mov
out
jp
xchg
jbe
rol
inc
or
js
cmp
fisubrl
jbe
repnz
add
scas
jle
sbb
cmp
xchg
mov
lds
popa
arpl
xor
mov
mov
jg
xor
mov
hlt
call
mov
fdivrs
xchg
dec
cld
fcoml
stc
bound
loopne
testl
and
fistps
jno
lds
std
and
decb
decb
pop
iret
sbb
cmp
call
push
mov
mov
and
or
cmp
aad
dec
test
mov
jp
sbb
inc
test
loopne
fwait
pop
icebp
out
xchg
scas
lock
daa
ljmp
pop
jge
inc
cmpsl
adcl
mov
pop
insb
xor
and
xor
and
shrb
outsl
insb
hlt
and
sbb
sbbb
inc
xor
or
dec
iret
xor
js
sti
or
aam
movb
xchg
xor
inc
clc
aad
jbe
adc
outsl
lret
mov
ficoms
or
push
fisubrl
cld
addr16
sbb
idiv
stos
fisttpl
jg
inc
out
lret
sahf
rcll
or
inc
cmp
push
ret
xor
sub
sub
mov
pop
sub
xor
pop
les
mov
sub
push
mov
andl
pop
outsb
arpl
mov
fildl
push
negl
lds
cmpsb
sub
sub
cmp
push
flds
fistpll
mov
push
scas
inc
addr16
jo
mov
jl
into
pop
ror
stos
popf
sbb
sub
mov
fwait
in
mov
jno
mov
cmp
out
mulb
ret
or
nop
gs
pop
jbe
movsl
sti
mov
sti
negb
add
or
pushf
icebp
sbb
mov
out
ja
mov
xor
test
add
lcall
jno
popa
pushf
subl
std
lds
jo
inc
rcll
xor
mov
ficoms
cmp
loopne
arpl
pop
int3
mov
mov
lods
into
shl
cli
sub
push
push
test
pop
adc
cltd
inc
jl
nop
adc
pop
adc
das
arpl
out
je
adc
cltd
jne
jb
imull
mov
mov
or
scas
and
xstore-rng
cmpsl
add
jle
arpl
arpl
mov
mov
pop
push
push
dec
jae
std
lock
mov
dec
add
mov
or
mov
int
sub
pop
cli
mov
fdiv
inc
in
push
ja
sbb
lock
xchg
repz
sbb
push
mov
pop
in
pop
sbb
sbb
out
fs
inc
fcmovu
mov
xchg
dec
insb
fidivl
mov
xor
push
xchg
out
sub
jp
cmpsb
sub
fsubl
bound
fwait
popa
daa
mov
ja
push
sub
int3
cltd
lea
cmpl
out
int
mov
repnz
int3
sbb
into
pusha
ret
mov
jle
mov
inc
lret
test
int
test
sub
sub
insl
inc
mov
fwait
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
sti
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
cli
pop
lret
aaa
sub
cmp
or
sbb
imul
cmpsl
stos
push
mov
addr16
sti
pop
dec
aaa
pop
daa
aam
les
negl
nop
sbb
repz
dec
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aaa
sub
dec
or
sbb
dec
dec
sbb
test
std
mov
mov
std
adc
sub
cmp
or
sbb
insb
cmp
jb
lods
std
mov
lods
ret
int3
popf
fdivl
cli
push
xchg
inc
push
pop
and
adc
lods
negb
cmpb
mov
add
jns
arpl
test
iret
in
push
daa
add
ja
xor
lock
xchg
xchg
insl
das
lock
dec
jecxz
jns
idiv
mov
mov
xor
int3
adc
ljmp
inc
jge
add
lahf
in
arpl
add
lods
popf
lea
bound
clc
add
sbb
mov
or
sbb
js
dec
in
sbb
pop
int
sbbl
cli
add
icebp
sub
jge
std
jge
lea
jmp
insb
mov
push
sarl
add
int3
nop
and
pop
adc
add
xor
imulb
lods
mov
lods
mov
dec
sbb
insb
daa
jl
dec
add
hlt
lods
in
aad
les
aam
out
push
sub
push
sub
jo
leave
push
adc
cmp
cltd
out
std
int3
mov
stos
fsts
insl
push
jp
jg
jo
ds
cs
and
std
leave
mov
test
enter
std
test
dec
fsubrl
pusha
pop
jo
and
pop
in
lods
std
mov
lods
in
mov
fsubrl
jge
dec
or
sbb
insb
cmp
pop
in
lods
std
mov
lods
in
mov
fsubrl
mov
repnz
adc
in
arpl
jecxz
xor
or
add
int3
ret
push
xor
mov
pop
push
mov
imul
sarl
mov
stc
dec
test
jmp
pusha
shll
jnp
cli
jb
scas
fistl
out
imulb
les
xorb
outsl
aaa
stos
pop
and
push
adc
in
sub
rorl
xor
jae
xor
mov
sbb
adc
fcomi
inc
fidivl
add
inc
insb
test
rorb
roll
clc
adc
sbb
cs
xor
rorl
jp
and
cmp
int
pop
arpl
jne
dec
aaa
inc
xchg
mov
out
insw
lret
mov
cltd
aas
loope
add
cwtl
add
es
push
mov
mov
rclb
fisubs
add
loopne
dec
lods
scas
cld
sub
arpl
sub
push
dec
xchg
pop
test
or
icebp
cmc
or
xchg
dec
jmp
push
mov
movsb
fists
cwtl
dec
pushf
nop
xchg
add
add
iret
lods
pop
out
lds
aas
push
fsubl
jp
lods
jecxz
movsl
lods
lods
push
jae
out
jl
test
mov
sti
lock
nop
mov
inc
mov
sbb
testb
call
adc
fsubl
cmpl
jl
loop
add
out
or
call
jmp
mov
xor
aas
xchg
mov
outsb
xor
es
xor
push
leave
pop
lahf
dec
jbe
or
addl
popa
push
movsl
pop
out
aad
and
jp
jns
jge
aad
push
cld
leave
popa
pusha
sbb
into
mov
lea
adc
mov
xchg
pop
clc
xchg
pop
adc
scas
xchg
sub
aad
jae
or
inc
push
xchg
mov
mov
dec
sti
xor
int
lock
mov
pusha
push
jmp
lods
arpl
std
mov
aad
xor
mov
test
mov
addr16
scas
sbb
inc
stos
mov
mov
loope
cltd
scas
cmp
dec
add
divl
xor
dec
mov
or
fidivl
lahf
jmp
xor
icebp
stos
pop
push
dec
nop
insb
imul
jl
mov
jl
push
rcr
sbb
xchg
mov
jne
sub
cmp
cmp
xor
jg
stos
jo
jno
sbb
cmp
or
aas
das
push
and
rcll
fs
loope
ss
dec
mov
xor
xchg
clc
mov
repz
sti
mov
xchg
mov
mov
inc
call
rcrb
ja
or
mov
xchg
jo
or
scas
mov
shrl
adc
outsb
loope
ljmp
arpl
lea
fs
xchg
les
push
lds
pop
divb
mov
leave
xchg
shrb
outsb
leave
jne
lahf
cltd
testl
sarl
add
aam
pop
les
int3
fisubrl
loop
push
pop
test
adc
xlat
rorl
dec
pusha
sub
test
jge
cmp
cmp
mov
jp
daa
dec
push
loopne
in
insl
jmp
sar
pop
ss
sbb
fcmovu
pop
xchg
daa
ljmp
clc
rorb
in
je
jle
popa
mov
push
aas
aad
jl
inc
xlat
pcmpgtb
mov
fistpll
ja
adcb
fnsave
fsts
xchg
cwtl
je
aad
push
mov
adc
fimuls
or
scas
call
add
push
imul
cli
pop
pop
add
xchg
cmp
or
es
shrb
inc
add
pop
aas
jo
adc
dec
pop
cmp
arpl
mov
add
test
std
fmull
and
ret
out
pushf
lret
pop
out
mov
xchg
push
mov
fistl
xlat
lods
sub
lods
or
stos
in
ret
push
outsb
jne
mov
mov
ss
cld
xor
push
lods
insb
stos
stos
xchg
popa
cmp
gs
popf
cmp
mov
or
cmp
inc
mov
xlat
jle
jne
pop
xor
lds
and
mov
jns
subb
mov
hlt
push
hlt
mov
repnz
xchg
pop
inc
clc
lea
inc
push
pop
jns
cs
out
dec
imul
test
xor
lret
adc
cmp
ret
add
sub
mov
nop
pop
cli
pop
rcl
ss
fucomip
aaa
adc
sbb
jecxz
sarl
inc
cmp
xchg
loope
outsl
ja
mov
lret
fs
push
adc
call
es
les
shll
cs
mov
jl
addr16
lahf
dec
and
sti
bound
fwait
add
sub
and
and
mov
mov
sahf
aad
int3
pop
jle
push
movsb
dec
jecxz
cmp
in
aad
add
sbb
jne
out
stc
add
rolb
add
mov
inc
imul
cmpsb
imul
xor
outsb
ret
fsubs
enter
and
cmpsb
ja
loopne
rcrl
jns
pop
ret
les
bound
jne
jmp
add
das
movsl
adc
stos
dec
ds
aaa
xchg
aas
negl
cli
push
aaa
mov
push
sub
cmp
or
imul
inc
ss
fistpll
xor
pop
dec
push
jo
popa
add
pop
es
shll
dec
test
fadd
inc
shr
int
sti
bound
repz
int3
push
and
sarb
push
push
rorl
in
in
repz
lds
push
dec
adc
cmp
enter
test
sub
dec
mov
pop
mov
or
clc
pushf
in
out
inc
mov
sahf
push
out
inc
mov
jg
into
dec
inc
jne
pop
rorl
pop
inc
xchg
sahf
int
pop
daa
adc
xchg
addl
dec
jl
sub
push
adc
cmp
mov
cmc
andl
jnp
dec
add
lret
jns
loopne
lock
pop
jp
mov
popf
test
out
orb
les
or
fcoms
addr16
insl
push
cltd
bound
mov
int
sub
mov
outsb
popf
fmuls
push
icebp
scas
je
fldt
decl
inc
outsl
dec
fstps
or
xchg
es
push
mov
ret
int3
pop
lcall
pop
and
dec
mov
mov
jne
es
daa
fnclex
adc
fstps
shll
push
in
dec
add
lret
xor
in
cmp
push
loope
add
jb
int
stc
jne
and
loop
sbbl
xor
cmp
jo
or
mov
sarb
pop
rcpps
add
mov
mov
call
mov
stos
adc
or
jo
jp
mov
jb
leave
push
into
mov
jnp
push
popf
jmp
out
ret
xor
adc
push
fwait
dec
nop
adc
dec
jo
mov
std
cmpsb
loopne
fnstsw
pop
aad
push
cmpsl
popf
jmp
and
xlat
icebp
adc
sub
dec
test
cld
loop
jg
mov
push
dec
sub
pop
lcall
dec
xchg
jg
movsb
notl
rclb
ljmp
dec
mov
test
inc
add
cmp
rorb
lea
dec
cltd
insb
scas
ss
jl
mov
fistl
xor
mov
fst
adc
cmpl
xchg
test
fnstsw
es
sub
data16
call
scas
sbb
mov
jmp
aaa
into
enter
cmp
xchg
pop
iret
sbb
int
in
cli
mov
pop
jbe
jnp
or
cmp
push
mov
pushf
jnp
in
jbe
mov
push
jno
insb
bound
subb
mov
dec
popa
mov
ds
inc
fsub
jmp
sub
fwait
insb
iret
xchg
pop
loopne
dec
outsb
mov
sub
pop
xchg
cmp
clc
adc
int3
les
push
sbb
mov
jecxz
inc
push
adc
scas
js
loop
mov
stos
and
mov
pop
sub
add
push
inc
lahf
xor
add
lods
mov
jmp
popa
mov
test
fwait
fwait
loopne
or
mov
push
sub
cwtl
imul
jmp
fchs
loopne
clc
sub
add
or
sbb
xlat
sub
shl
les
jle
aad
or
fildl
ret
mov
cmc
push
pop
std
cmpsl
mov
inc
call
cmp
std
stc
push
lret
xchg
fwait
mov
mov
shr
sahf
dec
mov
push
pop
add
fs
sbb
insl
sub
sbb
imul
ja
cmp
test
fildll
loopne
sub
xchg
add
les
cmp
aaa
sbb
jge
push
test
mov
in
and
cmp
mov
insl
xor
mov
pop
and
test
dec
ficompl
xor
xchg
inc
pusha
dec
jmp
adc
adc
xchg
add
jo
xor
cs
mov
pop
shr
dec
push
pop
push
shll
pop
into
cmp
sub
ret
mov
int3
dec
adc
mov
test
adc
pop
and
or
mov
dec
mov
add
mov
call
mov
mov
mov
push
push
imul
lea
xor
jo
or
into
stc
jo
xlat
aam
sub
lret
pop
movsb
push
sub
cmp
push
push
sti
rcll
xchg
cmp
xor
xchg
ja
ret
negl
push
inc
pop
xchg
jnp
imul
icebp
dec
loop
psrlq
push
pop
sub
mov
cmp
pop
jne
mov
data16
movsb
stos
lea
cmp
mov
pop
inc
push
je
mov
mov
rorl
fdiv
inc
or
jl
fldenv
testl
push
xor
dec
pop
and
testb
decb
mov
push
sahf
mov
outsl
dec
xchg
cltd
push
jae
adc
insb
shlb
bound
popa
pop
nop
idivl
loopne
xor
dec
add
fiadds
in
push
push
push
cltd
pop
mov
cmp
shlb
call
lcall
push
cli
jo
psraw
adc
push
mov
xlat
jnp
sub
das
das
mov
dec
adc
jno
xchg
xchg
dec
movd
je
jg
outsb
call
loope
lret
push
movsl
mov
jg
xchg
insl
std
jp
call
dec
mov
jecxz
lcall
push
lret
sahf
or
jecxz
cwtd
mov
sub
in
dec
sbb
fcompl
fs
out
lret
xchg
sti
aas
add
loopne
jnp
xor
test
sbb
mov
cmp
aas
and
lret
inc
lock
sub
mov
repz
xor
sub
dec
xchg
orb
lock
aam
fidivrl
test
lods
sub
jg
roll
sub
jmp
inc
xchg
xor
xchg
inc
lcall
xchg
aam
jge
lods
adcb
mov
stc
and
into
mov
xlat
or
or
xchg
jecxz
sti
mov
cmc
xlat
jecxz
int
mov
lock
inc
stc
fildl
je
jmp
push
aad
dec
in
jmp
pop
and
dec
xor
imul
sbb
push
xor
or
xchg
push
sti
test
xor
sbb
leave
ljmp
sbb
lahf
push
push
movsb
push
mov
xchg
pop
mov
cld
ds
imul
dec
mov
lds
mov
dec
insl
inc
call
int
mov
jbe
and
frstor
out
lock
dec
lea
mov
mov
push
int3
mov
lret
inc
mov
push
inc
pop
adcb
dec
loopne
sbb
push
and
dec
imul
fidivrs
scas
xchg
fcmovne
jp
and
dec
and
fwait
inc
cmpb
insl
ljmp
aam
repz
enter
mov
clc
loope
into
jg
cmpsl
pusha
aam
adc
loop
push
fs
hlt
inc
daa
pushl
mov
arpl
mov
xchg
pop
dec
xchg
cmpsb
jge
shlb
ret
lds
mov
call
sbb
push
mov
inc
das
outsl
fsubrl
ret
sub
jmp
jl
mov
xchg
inc
imul
sarl
pushf
call
sbbb
test
lahf
jno
and
idiv
lock
pop
jb
aam
pop
push
push
pop
stc
mov
rol
loope
scas
outsb
add
pushf
cmp
test
loopne
mov
sbb
lret
pop
mull
mov
mov
push
into
jbe
sbb
push
repnz
int3
fsts
rcr
pop
inc
in
mov
or
push
and
cmpl
adc
or
jmp
in
in
adc
repz
cltd
inc
push
sub
insb
or
cs
testl
cmp
sbb
jo
xchg
adc
test
pusha
aaa
sub
imul
lahf
roll
fcoms
and
cmpsl
cmpsl
fdivl
or
aam
iret
xchg
xchg
iret
fsts
popf
mov
dec
loop
jge
fcoms
mov
clc
adc
je
aaa
popf
xchg
push
xchg
or
or
leave
jl
mov
or
dec
cmp
pop
test
add
dec
push
shll
mov
push
inc
mov
imul
lcall
lcall
pop
sbb
cmc
mov
decb
lds
sahf
hlt
je
fstps
xchg
jb
sbb
cmpsl
pop
mov
pop
xchg
mov
sti
cli
add
aas
push
adc
lahf
mov
test
test
mov
mov
int3
aaa
fmul
lods
push
out
cmpsl
in
pop
pop
hlt
xor
mov
push
mov
hlt
lea
fcompl
xorl
dec
pop
push
lcall
rcr
inc
icebp
pop
mov
sti
push
data16
cltd
lahf
mov
adcl
outsl
cltd
repnz
addr16
inc
cmp
ja
and
loope
inc
sub
pop
mov
jmp
clc
cld
lods
fcoml
lcall
insl
mov
rcr
insl
ret
repnz
repz
repz
fadd
inc
and
sbb
xchg
xor
push
adc
adc
loopne
mov
adc
mov
loopne
orb
cmpsb
jmp
sub
js
cli
scas
and
jbe
push
add
scas
inc
xor
and
inc
cmp
jl
xchg
ljmp
push
push
push
test
jg
cmpsl
inc
mov
xchg
sar
pop
jnp
gs
mov
jmp
jg
pop
mov
cmpsb
mov
cmp
nop
insb
nop
sarb
mov
cld
add
inc
push
push
stos
push
dec
push
xor
xchg
pop
notb
inc
dec
test
mov
push
mov
xor
xchg
jp
aam
sub
popa
fadds
or
mov
xlat
cmp
sub
iret
aaa
shrl
negb
sti
and
cli
push
mov
mov
xchg
pop
inc
es
lods
cld
dec
outsb
sahf
cmpsb
jle
ret
xor
mov
dec
in
mov
shrl
sub
gs
or
divb
sti
jno
bound
repz
pop
das
sti
loope
push
loopne
dec
and
int
mov
mov
cmp
iret
jp
sbb
ret
jae
mov
add
and
inc
pop
jb
iret
loop
jg
push
mov
arpl
xor
enter
and
rorl
shll
fwait
cmpsb
jp
pop
jno
hlt
ds
dec
push
lods
sti
inc
mov
xchg
decl
lock
out
xor
hlt
pop
cli
roll
dec
or
mov
fstpl
adc
pop
mov
sbb
sub
rcrb
out
dec
pop
pop
adc
mov
pop
or
dec
int
xchg
icebp
and
sbb
iret
mov
dec
mov
sub
pusha
cmp
xchg
pop
rorb
dec
pop
out
pop
mov
and
dec
cmp
sub
cmp
and
jbe
push
or
je
mov
idivl
pushf
lds
js
jnp
push
mov
out
jl
subb
in
aas
notl
in
jmp
mov
nop
mov
pop
dec
cmpsb
stos
mov
jmp
mov
filds
sar
je
imul
xchg
push
xchg
and
push
pop
ljmp
fldt
sbb
movsl
push
leave
test
xchg
lahf
xchg
cmc
adcl
push
bound
xor
fs
and
lcall
sahf
sub
dec
sbb
cmpsb
lret
dec
add
addr16
sahf
pavgb
sbb
and
cmp
stos
mov
lahf
out
cli
adc
pop
lea
lcall
outsl
int
mov
ljmp
clc
sbb
add
xchg
lcall
popf
aad
insl
iret
cmc
fldt
xor
inc
out
test
inc
sub
xor
rorb
fwait
fs
fsts
sbb
xchg
jbe
inc
insl
cli
xor
or
call
add
xchg
inc
or
mov
pushf
dec
or
shr
inc
push
lcall
xor
arpl
xchg
and
das
stos
inc
cmp
cltd
mov
subl
les
fs
mov
adc
shld
popf
movsb
ret
mov
push
adc
out
pusha
gs
ret
jae
cmpb
loop
pop
cltd
sub
popl
pop
add
xchg
jmp
scas
add
leave
inc
jb
pop
das
mov
adcb
in
sub
jmp
out
insb
pop
loopne
mov
icebp
push
inc
jns
into
leave
mov
jg
pushl
jge
jne
xchg
movsb
jbe
fsubl
insl
test
adc
sub
or
mov
inc
negb
lods
test
stos
addr16
cli
divl
mov
lods
push
fcomip
movsb
cmpsl
rolb
or
push
adc
fcoms
scas
and
xchg
and
jecxz
mov
cmp
pop
pop
daa
sub
loop
xor
scas
mov
repz
dec
push
mov
adc
adc
lds
data16
clc
xor
sub
mov
popf
jns
cwtl
sbbl
cld
cmc
gs
mov
inc
mov
data16
inc
jbe
mov
xlat
mov
enter
out
fsubrp
sub
sbb
std
cmp
out
leave
sub
push
jl
and
xchg
aad
ds
insb
jecxz
lcall
and
inc
or
cwtl
icebp
dec
int
mov
lea
xchg
mov
lods
arpl
pop
cli
or
push
jae
cmp
in
sub
jo
xor
call
fidivl
shlb
push
in
rcll
in
iret
xchg
imul
dec
imul
cmp
push
incl
nop
and
push
test
pop
xchg
pushf
mov
xchg
mov
jae
mov
cmpsb
or
and
xchg
push
int
imul
je
in
xchg
sbb
ljmp
cli
sub
lds
mov
cli
jl
lea
ljmp
movsb
test
lock
cmpsb
fs
testl
jp
mov
push
jb
popf
and
les
cld
fimull
in
and
lret
ljmp
aam
mov
fsubrp
leave
retw
inc
outsl
sbb
hlt
lock
or
pop
inc
out
mov
jg
adc
cmpsb
daa
loopne
push
cmp
sub
incl
aaa
jnp
inc
packsswb
cld
jg
add
mov
or
mov
xchg
push
outsb
inc
insl
xorl
xchg
je
insl
sbb
push
ds
jmp
in
jl
sti
jecxz
xchg
imul
imul
sbb
mov
push
inc
adc
cmovge
cmp
std
adc
js
fisttpl
xchg
push
jns
add
inc
out
pushf
xchg
and
lock
fists
mov
mov
cmp
adc
imul
leave
popf
mov
jno
andb
mov
std
lcall
cmp
adc
sbb
outsb
fisttpl
sbb
pop
cmc
les
enter
add
addr16
addl
mov
jnp
cmp
icebp
inc
inc
sbb
int3
adc
test
not
jge
jno
fcmovb
data16
clc
sub
dec
cmpsl
out
jg
cmp
cmp
or
sub
dec
sbb
mov
lods
in
mov
fsubrl
jge
dec
or
sbb
insb
cmp
pop
in
lods
std
mov
lods
in
mov
fsubrl
jge
dec
adc
sbb
dec
sbb
mov
lods
call
lods
cmp
dec
fdivrs
pop
pop
sub
int3
popf
pushf
adc
push
addr16
jmp
xchg
xor
movsb
or
sbb
sub
cmp
orl
jbe
mov
bound
fsubrl
repz
sub
cmp
dec
mov
mov
xchg
jl
mov
arpl
fsubl
in
adc
add
sbb
sub
cmp
dec
stos
pop
mov
mov
inc
shrb
ss
jl
push
cltd
popa
xchg
insb
push
mov
push
movsb
test
bound
test
push
cs
lret
cltd
test
in
clc
jp
repz
imul
pop
push
xchg
insb
cmpl
inc
mov
mov
outsl
adc
sub
dec
pushf
cmp
mov
mov
enter
jl
pushf
xchg
mov
inc
or
sbb
inc
sub
nop
imul
push
add
into
xor
pushf
cmpsb
outsl
in
leave
adc
jbe
sbb
sub
mov
jae
out
fwait
cmp
fs
stos
sar
xor
xor
jecxz
out
sub
push
loope
jl
fistpl
insb
or
xchg
mov
test
in
repz
cmp
dec
mov
mov
mov
jnp
dec
mov
cmp
or
add
push
cmpsb
dec
mov
ret
jle
mov
arpl
fsubl
jl
outsl
imul
sbb
adc
cs
pop
int
scas
ss
and
repz
inc
mov
xchg
sbbb
jl
mov
arpl
fsubl
in
adc
add
sbb
sub
cmp
dec
mov
mov
mov
arpl
fsubl
in
adc
add
cmp
mov
adc
mov
pop
cmp
sti
ljmp
dec
ret
cmp
testl
jp
sub
jno
jle
dec
xchg
clc
lods
pusha
stc
pop
and
xchg
mov
pop
mov
fsubs
mov
cwtl
lods
dec
adc
inc
mov
pusha
xchg
push
push
cld
ret
test
jecxz
push
pop
stos
sbb
cwtl
mov
xchg
decl
movsl
jecxz
ds
inc
cld
mov
jmp
pop
movsb
xchg
pop
mov
inc
pop
cmp
xor
xor
lods
inc
mov
mov
jnp
xchg
lret
adc
sbb
icebp
mov
jbe
dec
rcrb
and
arpl
jne
call
xchg
jecxz
enter
push
mov
pop
add
xchg
outsb
hlt
pop
aas
lahf
adc
xor
pushf
cld
fisttpl
ret
jno
inc
pop
xor
cmc
pop
jp
mov
add
shl
enter
fldcw
xorl
in
jmp
nopl
pop
pop
int3
popa
add
jmp
push
les
ds
pop
cmp
aaa
fdivr
les
push
fwait
inc
cmpsb
les
add
inc
inc
mov
outsl
adc
fwait
test
jge
pop
adc
mov
stos
mov
daa
cli
dec
lret
cmc
pop
rcll
xor
cs
mov
sbb
lods
aad
pop
testb
ret
idiv
iret
test
out
sbb
fidivrs
cld
fs
pusha
ficompl
dec
rcll
adc
inc
jbe
lahf
fsubrl
push
mov
mov
fsubrl
mov
dec
pop
daa
test
lods
add
test
jne
pop
add
mov
jle
mov
inc
mov
pop
rcrb
lods
test
shl
push
inc
in
push
push
stc
pop
ss
mov
cltd
pushf
sub
pop
mov
imul
icebp
pop
pop
xor
shrb
test
push
sbb
pop
bound
mov
and
push
or
mov
mov
inc
fldt
cmpxchg
push
cmp
in
jmp
pop
dec
cld
mov
or
jno
in
mov
push
pushf
in
aaa
jmp
aas
and
sahf
shrl
mov
push
cmp
sub
aas
cs
repz
mov
jp
xchg
pop
out
das
and
jae
lret
and
enter
add
icebp
fdivl
out
std
mov
push
icebp
and
fistps
inc
cmp
jmp
repz
loopne
xor
sub
xor
loopne
stos
or
sbb
pop
pop
adc
sarb
rcrl
bswap
cmpl
inc
int3
into
mov
ss
int3
lahf
xchg
xchg
cwtl
ficoms
fiaddl
jae
imul
xchg
into
and
jns
repnz
jns
add
mov
or
push
sbb
dec
push
pop
push
imul
adc
cmc
dec
xchg
adc
adc
cwtl
xchg
xchg
js
mov
lret
inc
stos
mov
icebp
cmp
sbb
mov
mov
xor
scas
mov
repnz
sbb
sbb
mov
jae
repnz
mov
ret
out
roll
or
rorl
lcall
fiadds
jmp
out
mov
mov
or
xor
jne
add
out
enter
hlt
ror
or
push
jle
test
mov
mov
and
in
sub
out
arpl
stos
rorl
test
jns
iret
inc
mov
leave
or
scas
and
cmc
add
out
jp
push
push
lods
mov
insl
xor
lcall
repnz
imulb
aam
callw
in
dec
adc
xor
sub
push
add
jno
nop
inc
pushf
add
mov
adc
jne
inc
cmp
nop
leave
int
imul
cmp
mov
pop
mov
lods
lcall
je
inc
jge
mov
lahf
insl
sub
sbb
dec
dec
mov
xchg
xor
int
mov
aam
push
cltd
lds
inc
dec
jmp
jl
cmp
test
mov
sti
cmp
jp
push
imul
sub
daa
out
into
xorb
inc
xlat
in
inc
outsl
scas
lods
std
stc
imul
mov
xchg
shl
sbb
jb
adcb
and
pop
cmp
xor
lods
push
jne
cmpsl
mov
movsl
jnp
addr16
imul
add
call
iret
jbe
sub
rol
mov
pop
mov
or
shrl
popa
adc
inc
inc
dec
adc
nop
lock
jp,pt
ret
mov
pop
es
cmpsl
out
cmc
mov
loop
lock
mov
pusha
xor
lcall
push
pop
std
popa
loop
pop
jae
nop
lret
iret
jmp
sbb
sbb
mov
sub
push
mov
xchg
fadds
mov
ret
bound
bound
jno
mov
pop
cld
xchg
sub
jns
addr16
mov
lods
outsl
push
fwait
inc
jb
xchg
lahf
jg
mov
imul
dec
stc
fdivl
insl
lock
mov
cmp
sahf
loop
jmp
mov
das
adc
pop
int
adc
sbb
sbb
xchg
mov
int
fcmove
cwtl
push
mov
pop
push
incb
sbb
push
xor
fs
inc
mov
orb
jge
out
pop
fsub
xchg
cli
cmp
popf
repnz
mov
sub
mov
xchg
sub
daa
lods
and
icebp
push
mov
mov
shr
cmp
popa
out
or
out
sbb
mov
push
inc
add
fnstenv
pushl
lods
inc
imull
stos
jae
in
lcall
dec
adc
fisttps
lds
add
push
dec
xor
inc
stc
loop,pt
scas
int
sub
imul
adc
adc
add
test
dec
jnp
out
lcall
pop
addr16
dec
mov
inc
push
arpl
in
or
mov
and
loop
push
stos
movsb
daa
insl
pop
mov
mov
jl
arpl
inc
push
push
test
sub
push
decl
fcmovb
popf
les
add
sbb
pop
pop
cltd
mov
nop
rcl
pop
ret
out
movsl
pop
lds
test
add
sbb
cmp
mov
imul
in
ret
sarb
push
xchg
cs
inc
jl
loop
xchg
push
mov
pushf
lock
push
cld
mov
mov
mov
push
sbb
sbb
ffree
cmp
shrl
scas
gs
push
mov
insb
cmc
mov
out
sub
in
add
cmpsl
mov
dec
jecxz
ret
aam
ficoml
mov
insb
es
scas
pop
add
fisttpll
mov
or
or
pop
xchg
xor
lods
mov
sbb
fdivrs
lods
mov
decb
inc
pop
mov
push
mov
gs
mov
ror
out
cmc
xchg
mov
sub
sbb
in
popf
mov
sarl
imul
or
xor
scas
lcall
inc
adc
and
mov
cmp
sub
scas
das
and
daa
mov
mov
sbb
lret
push
mov
ljmp
mov
cmpsb
mov
jae
push
sub
cmp
jg
fmuls
mov
mov
rclb
fidivrs
fs
cld
or
fidivrl
negl
adcb
aam
mov
stos
mov
mov
mov
clc
outsl
vpunpcklbw
cmp
or
popf
popa
cwtl
sub
cmp
mov
mov
and
movb
dec
lock
int
std
arpl
xor
fnstcw
stos
filds
push
xor
jl
xchg
outsb
xchg
add
dec
rol
mov
fcmove
jl
sub
leave
jne
xchg
stos
popf
arpl
cmp
sbb
pop
pop
cltd
or
pop
pushf
cmc
cltd
sub
enter
pop
pop
repnz
sub
pop
pop
or
inc
jns
test
jmp
rorb
mov
mov
cmp
fistps
jmp
and
dec
sub
push
lret
xor
mov
dec
mov
outsb
ss
outsl
cmp
dec
mov
mov
scas
pop
dec
addr16
clc
inc
xor
push
lahf
cmp
mov
wbinvd
lret
insb
cmp
clc
imul
lods
mov
outsb
cmp
mov
lcall
dec
scas
outsl
push
jg
inc
xor
sub
bound
jg
jnp
sub
jl
add
sbb
out
pcmpgtb
mov
loopne
and
and
fstpl
pop
mov
dec
out
adc
enter
lcall
out
mov
xor
dec
lods
adc
pop
sbb
outsb
sbb
gs
lods
stos
sbb
movsl
mov
out
jo
mov
pushf
pushf
cmp
mov
jge
xchg
test
mov
inc
fs
and
into
adc
sub
aam
idivb
aad
dec
mov
pop
push
les
mov
pop
lret
mov
test
or
iret
outsl
test
into
xorl
push
or
loope
insb
pop
mov
sub
fsubr
jge
rcrb
je
aad
sub
add
xchg
sub
mov
les
out
icebp
repnz
add
cmp
sub
cmp
ss
lds
mov
lcall
pop
shrl
je
jno
loop
lock
xor
or
stc
sbb
out
pop
add
or
cltd
ss
shlb
pop
xchg
mov
pop
clc
or
pop
cmp
mov
inc
subl
arpl
push
or
addr16
stos
ret
pop
leave
mov
rcll
icebp
test
movsb
xor
jg
pop
adc
int3
mov
jmp
arpl
xchg
mov
and
sbb
pusha
fistps
cmp
mov
xchg
xlat
inc
int
scas
test
mov
cwtl
call
mov
sbb
dec
mov
lret
xchg
leave
imul
mov
xchg
mov
dec
xor
push
jno
inc
inc
pop
xchg
push
fidivrs
inc
rclb
fists
push
jne
ljmp
xchg
cmpsb
and
push
movsl
inc
jnp
adc
and
hlt
or
imul
mov
jo
cmpsl
and
jb
xor
add
je
rcrb
xchg
je
mov
pusha
xor
sbbb
subl
sbb
cs
lcall
cltd
je
in
jne
in
sarl
pop
in
inc
add
repnz
add
fistl
mov
mov
dec
and
or
jp
cmpsb
cmc
lods
push
jo
ffree
lods
fwait
shll
sti
cmp
jle
push
mov
lds
inc
adc
sbb
xchg
push
fidivl
mov
and
mov
inc
jo
nop
inc
mov
pop
xchg
push
or
lods
icebp
xor
fcoms
fsubrl
xrelease
pop
xor
movsl
in
sub
mov
ljmp
xchg
test
cmpsb
out
xchg
inc
xchg
xor
sub
sbbb
inc
lret
rcl
frstpm(287
insl
mov
popa
fcompl
jae
pushf
push
xchg
and
fwait
add
jmp
aam
push
and
iret
mov
scas
rcrl
jns
int
mov
sbb
imul
or
sbb
rcrb
jno
xchg
jbe
loop
jle
and
inc
xor
cmp
and
push
divl
shll
out
mov
div
adc
rol
lcall
outsl
mov
cwtl
popf
shr
or
scas
data16
and
mov
pop
jl
pop
jno
fildl
test
add
xchg
inc
pusha
cmp
add
mov
cli
dec
int
mov
inc
xor
push
mov
dec
add
and
jne
aas
pop
arpl
loopne
inc
hlt
cmpsb
inc
scas
mov
pop
inc
mov
mov
aam
xchg
push
cmp
rcrb
inc
mov
out
pop
roll
push
sub
pop
orb
addl
mov
ljmp
stc
pop
insb
sub
loope
xchg
mov
sub
and
and
sub
dec
or
mov
test
mov
mov
fadds
scas
mov
orb
pop
push
push
bound
shll
sbb
xchg
fwait
sub
in
sub
sub
out
push
sbb
mov
lods
fisubrl
repz
sbb
jno
enter
xchg
mov
pop
push
shlb
push
ljmp
int
jecxz
push
jmp
jbe
inc
mov
inc
push
xor
cmp
fistpl
sarl
mov
mov
jne
std
mov
adc
xchg
repz
ror
jo
test
add
cmp
jge
xor
jl
scas
sti
jo
cmc
cmp
enter
sbb
pop
flds
insb
mov
mov
add
lcall
mov
xor
jo
pop
dec
jne
test
mov
mov
enter
call
addr16
bound
das
sbb
fidivl
hlt
add
xchg
and
scas
fdivs
pusha
jge
pop
and
js
repnz
xchg
movsl
lcall
into
rcrl
test
in
pop
clc
lret
pop
push
mov
imul
mov
mov
mov
mov
mov
mov
sti
xchg
xor
and
call
je
shrb
imul
in
into
aas
imul
insb
imul
ss
inc
sbb
in
dec
call
les
mov
roll
aaa
cld
xchg
pop
xchg
lahf
sub
pushf
add
mov
or
test
push
cmpsb
xor
ljmp
and
ds
dec
push
push
dec
inc
pushf
imull
lds
dec
call
push
fstpt
mov
movsl
stc
mov
loop
sbb
inc
mov
cmp
pop
xchg
into
js
xchg
out
fisubrl
cltd
add
ss
rcl
adc
aas
pop
mov
fsts
aaa
cmp
jmp
dec
mov
mov
jns
jae
mov
adc
ss
pop
rol
fs
mov
dec
mov
jb
sbb
call
imul
or
out
nop
xchg
push
xchg
pop
loopne
sub
rcrl
rcll
int3
and
add
and
sbb
cmp
mov
push
sub
xchg
aam
cltd
jle
xor
cli
aam
cli
mov
dec
fs
outsb
cmp
xchg
filds
iret
mov
lods
adc
cmpsb
or
adc
xorb
icebp
in
mov
fs
cmpsl
js
ljmp
cld
rcr
inc
lea
push
imul
xchg
push
xorb
mov
hlt
pushf
inc
imul
push
sub
data16
mov
sub
dec
and
shrl
add
int
sahf
inc
inc
int
add
mov
xor
rorb
mov
cmp
inc
cli
push
push
rorl
cli
cltd
nop
test
in
sub
jle
popfw
rolb
imul
or
mov
insl
mov
inc
aad
fists
pop
adc
or
leave
rolb
sub
dec
dec
pop
bound
xor
and
bnd
in
mov
jp
roll
pop
out
cmp
adcb
cmpsl
cmpsl
and
mov
push
xchg
adc
repz
mov
int3
int
push
mov
std
pop
pushf
insb
cmp
cwtl
dec
fisubrs
lcall
cmp
outsl
mov
loopne
dec
mov
imul
pop
push
loope
push
dec
pop
jl
sbb
addr16
mov
mov
or
test
daa
sbb
jae
ja
xor
sbb
xchg
ja
or
sub
dec
push
das
mov
out
insb
sub
out
cltd
mov
leave
movsb
pusha
sub
aam
sbb
cmp
imul
push
ljmp
mov
dec
daa
sar
js
mov
sub
mov
pusha
adc
sub
lods
mov
push
in
pop
push
xchg
adc
xchg
insb
or
int3
adc
mov
sbb
jb
fstl
lea
cs
jmp
fs
in
add
lock
adc
jl
mov
push
outsl
imulb
xchg
jge
add
clc
mov
leave
xlat
and
push
nop
cmpsl
popf
xchg
scas
xchg
add
pop
pusha
testb
int
cmp
or
pop
jp
arpl
test
fstps
add
inc
les
clc
dec
push
push
jg
lcall
pop
and
in
int
icebp
sbb
fsub
popa
movsb
dec
fnstenv
inc
mov
inc
call
fistl
test
outsl
mov
lcall
imul
xchg
and
xchg
jno
jns
repz
mov
or
jmp
push
scas
repz
pop
loop
test
jb
aaa
aas
mov
sbb
sbb
mov
adc
jp
push
inc
pop
or
mov
add
nop
add
sub
sub
lock
inc
into
mov
ja
stos
outsb
shr
stos
adc
outsb
arpl
leave
dec
jg
mov
lcall
loope
cmp
rolb
dec
sti
aas
mov
lahf
mov
testb
lds
pop
insl
sub
dec
push
fbld
xlat
cmpsb
shrl
adc
dec
pop
xor
in
push
nop
rcll
xchg
sbb
push
in
push
xchg
mov
shlb
popf
and
cltd
jnp
and
shl
in
mov
stos
cmp
cltd
in
insl
gs
mov
out
jmp
cmpsb
testb
pop
sub
xor
xchg
adc
mov
bound
sub
fldl
sbb
daa
dec
lods
pop
or
popa
sub
push
loope
pop
inc
mov
addb
push
mov
fnsave
cwtl
sub
adc
mov
and
outsb
jp
dec
cmp
outsl
sbb
or
push
ljmp
mov
inc
int3
fcmovnu
dec
lods
push
jge
xchg
ficoml
fisubl
adc
mov
mov
loopne
in
test
mov
push
lahf
popf
push
rclb
fdivp
mov
jb
push
xchg
cli
fidivrs
push
sarb
ds
push
jo
cmp
rclb
mov
jmp
ljmp
jns
inc
inc
lret
push
xor
loope
inc
divb
and
mov
fnsave
dec
inc
xor
pop
cmp
push
xor
cmpsl
in
out
out
lcall
mov
test
pusha
push
lea
cmpsl
add
mov
fwait
adc
mov
aaa
lods
mulb
sahf
push
mov
and
push
cs
lock
fs
scas
push
mov
mov
ficoml
lods
xor
or
jp
out
inc
imul
dec
mov
shl
push
mov
int3
int
pop
loop
out
fcoms
repz
cmpsl
xlat
sahf
ffree
mov
call
add
stos
std
aad
inc
outsb
jo
push
jp
ljmp
cs
lea
sub
test
mov
dec
xchg
and
stc
mov
sbb
jne
enter
sbb
xchg
xchg
mov
in
pop
imul
xor
test
test
test
sarb
stos
add
add
cmpsb
aad
fbstp
loope
add
bsr
mov
test
das
divb
int
notb
dec
outsb
das
inc
xchg
pop
or
mov
dec
les
sbb
call
into
jecxz
insb
pop
xor
test
add
adc
aas
push
mov
lret
sub
ljmp
mov
bound
jbe
sub
jecxz
sarl
dec
mov
mov
mov
arpl
fsubl
in
adc
add
sbb
sub
cmp
dec
mov
mov
mov
arpl
fsubl
in
adc
add
pushf
jecxz
sarl
int3
mov
mov
mov
arpl
fsubl
in
pop
cld
pop
or
sbb
sub
cmp
dec
mov
mov
mov
leave
push
push
mov
pop
pushf
insb
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
insb
mov
aas
lods
or
imul
pop
add
pop
or
add
add
stos
add
add
add
push
add
add
add
popa
add
add
add
insl
add
add
add
add
add
add
insl
add
adc
mov
testl
aaa
add
add
add
add
add
add
add
addb
add
add
mov
add
add
add
add
add
add
adc
mov
inc
add
add
add
add
add
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
incl
mov
add
add
enter
adc
add
add
add
add
add
add
add
and
gs
mov
add
add
add
add
add
add
add
add
add
lcall
add
add
add
nop
add
add
adc
enter
movl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
addl
xchg
add
add
add
add
add
add
add
cmpsl
add
add
add
mov
add
add
add
add
add
add
add
jns
push
add
add
add
dec
add
sub
lcall
add
add
add
add
mov
in
mov
add
add
add
das
add
pop
add
push
add
add
insl
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
mov
add
add
pusha
add
add
add
add
and
and
jae
xchg
add
add
add
add
add
add
add
add
add
jbe
cmp
enter
add
xchg
add
add
pop
add
add
add
add
add
pop
add
add
add
xlat
add
mov
add
add
insl
add
add
add
add
add
add
add
faddl
imul
sub
scas
add
add
add
add
cltd
add
add
mov
xor
lock
add
add
add
stos
add
scas
add
add
jb
push
add
imul
add
add
add
add
add
add
add
add
add
out
pop
add
faddl
pop
add
sahf
add
adc
sbb
into
add
push
add
add
add
add
add
add
out
and
pop
and
mov
popa
test
sub
test
pop
mov
jno
jns
imul
test
int3
lcall
fs
cwtl
fucom
shlb
mov
pop
cmp
fs
add
mull
stos
jl,pn
out
lods
test
loope
mov
andl
scas
rcll
sub
mov
in
lods
das
push
fsubrs
lahf
mov
dec
in
jle
cmpsl
add
rcl
mov
addr16
push
cmp
inc
inc
std
jge
pop
cmpsb
mov
jp
test
adc
sahf
and
mov
push
pop
sahf
movsl
push
in
shll
jne
sbb
cld
ss
shl
stos
cld
jns
lahf
jp
mov
xchg
inc
ficomps
xor
pop
iret
lahf
je
adc
shl
and
outsl
xchg
pop
mov
and
or
mov
push
dec
dec
fsts
dec
imul
loope
fwait
leave
dec
fistps
pop
xor
jns
loope
pushf
or
dec
inc
dec
sbb
sbb
cltd
or
in
movsl
lds
fcomps
cmp
scas
lods
imul
cmp
xor
shll
lret
out
xchg
mov
cs
dec
lds
outsb
lcall
mov
das
packssdw
arpl
dec
dec
xor
stos
cmp
mov
dec
hlt
les
lret
fnstcw
xlat
pop
leave
adc
rcll
sbb
fsts
lds
ret
mov
icebp
bound
pushf
mov
out
inc
sub
jo
adc
inc
lock
dec
push
push
cli
leave
ret
in
popa
inc
subl
pushf
sub
cmp
or
cltd
popa
pop
push
test
inc
push
lret
inc
outsl
mov
mov
dec
or
data16
sub
dec
lcall
and
mov
and
jnp
inc
xchg
loop
fs
cmc
js
push
jmp
push
jno
fnstenv
add
cmp
jno
ljmp
in
cmp
and
dec
and
mov
arpl
lcall
add
cmp
xor
cld
mov
jp
xchg
jb
scas
rcrl
lods
xchg
fcmovb
test
outsb
arpl
jp
int3
xor
sbb
les
lea
rorl
inc
cwtl
push
mov
mov
cwtl
sbb
in
and
mov
mulb
and
and
lods
ret
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
