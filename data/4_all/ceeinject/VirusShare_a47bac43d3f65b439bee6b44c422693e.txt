call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
jns
imul
mov
leave
adc
add
mov
inc
test
xchg
jns
imul
cmp
push
xor
stc
add
mov
inc
test
xchg
jns
imul
cmp
sub
mov
push
int
fidivs
sub
lds
movsl
add
adc
imul
mulb
sbb
push
xchg
jns
icebp
cltd
add
into
mul
or
shl
in
hlt
sbb
mov
mov
inc
lods
fidivl
dec
in
mov
pop
mov
movsb
inc
lcall
mov
mov
xor
mov
movsl
mov
cmp
adc
movsl
insl
mov
imul
xor
es
adc
in
or
mov
test
sub
nop
in
xchg
in
adc
lds
pop
es
test
add
mov
mov
movsl
les
imul
shrl
repz
ficoml
mov
xchg
jns
imul
cmp
sub
stc
add
mov
inc
rol
loope
stc
jns
imul
mov
popa
popf
add
sub
cmp
xor
ljmp
imul
xchg
dec
mov
stos
pusha
mov
notl
mov
sbb
movsl
or
aaa
in
aad
lds
xor
stc
add
mov
inc
test
xchg
jns
imul
cmp
sub
stc
add
mov
inc
test
sbb
out
mov
imul
jl
xchg
mov
xor
dec
add
repnz
das
js
pop
sbb
iret
xor
xlat
mov
dec
xchg
nop
fcmovb
add
lds
insl
nop
mov
and
iret
dec
xor
out
lods
push
inc
and
jns
gs
adc
adcb
out
cmc
les
movsb
and
jp
loopne
fcompl
rcl
mov
es
cmp
and
pop
fcomps
scas
das
ds
xchg
test
addb
mov
or
pop
shlb
test
adc
call
add
dec
cs
pop
jae
xchg
imulb
and
test
es
mov
test
push
jp
dec
out
push
adc
xchg
mov
mov
xchg
leave
jo
xor
rclb
fwait
iret
pop
shrl
fs
jmp
insl
jp
das
shr
pop
push
aas
mov
xchg
ljmp
xchg
push
inc
stos
jp
inc
popa
mov
or
jl
push
sbb
in
sbb
ljmp
loopne
jecxz
hlt
out
pusha
fwait
push
mov
pop
sbb
dec
lods
inc
int3
adc
in
ja
jbe
jmp
les
repz
ja
mov
cmpsl
fnsave
jbe
sub
das
nop
mov
je
js
std
ss
ret
lea
and
addr16
jbe
sar
arpl
scas
push
test
movsl
jno
jb
stc
dec
sub
xchg
jle
mov
stc
idivb
outsb
xor
ret
xchg
sub
add
cs
sar
mov
xchg
push
das
movsb
je
inc
xchg
inc
pop
ja
and
mov
mov
jbe
loop
adcb
push
xor
test
loopne
jns
fcmovnb
add
outsb
aad
out
lods
pop
lcall
sbb
jo
enter
inc
and
mov
bound
test
sbb
xchg
sub
leave
mov
movl
cmp
aas
stos
push
std
xor
es
mov
mov
push
cmp
gs
pop
iret
aas
xchg
adc
mov
jnp
push
sahf
pop
shrl
add
mov
scas
call
movsl
stos
mov
loopne
cs
dec
push
adc
mov
inc
movsb
repz
inc
mov
xor
ja
xchg
fisubl
push
push
sub
mov
ss
xor
scas
or
add
mov
adc
cwtl
mov
push
jo
mov
mov
ficompl
imul
in
add
mov
jae
or
ror
add
and
insl
test
pop
notl
and
cmp
xor
mov
push
loope
or
pop
push
jns
or
out
ret
pop
gs
dec
inc
test
leave
jo
push
mov
mov
add
inc
mov
pop
xchg
sub
fidivrs
mov
add
mov
fcoms
into
mov
inc
pop
push
lret
add
es
ds
out
sbb
xlat
cmp
mov
sub
dec
inc
push
mov
sar
popf
notl
mov
cltd
scas
enter
jmp
mov
push
fisubrs
jge
jno
inc
add
jbe
aam
push
mov
sbb
xorb
fmuls
jns
push
daa
or
test
lcall
xor
shrl
sub
push
jmp
mov
pop
test
test
jp
xlat
push
loop
adc
pusha
jb
and
aam
popa
push
daa
call
push
jmp
sub
ficoms
sbb
mov
mov
adc
cmpb
push
xchg
out
repnz
je
inc
sarb
mov
add
je
lods
pop
sbb
dec
pop
mov
inc
outsl
icebp
xor
ret
inc
call
fcompl
push
gs
dec
dec
cmp
push
or
mov
roll
jg
insl
fs
rorb
mov
push
xchg
adc
rcrl
or
aaa
faddp
adc
jo
mov
push
outsl
sub
and
adcb
ss
lods
push
aas
push
js
inc
push
adc
inc
leave
mov
ret
jl
push
xor
fists
jmp
push
push
sbb
imul
mov
pop
std
mov
push
push
cmp
pop
rorl
pop
outsl
dec
jg
div
les
or
inc
dec
and
lds
xchg
loopne
je
or
add
add
dec
inc
test
out
xor
adc
or
loope
stos
and
or
orl
push
inc
int
jno
fnstenv
adc
or
shlb
imul
enter
ds
aam
sbb
sub
and
sub
sub
and
inc
mov
jl
sbb
mov
lds
xor
mov
pop
mov
push
es
adc
fisttps
mov
clc
out
sahf
in
lret
dec
std
test
mov
test
pop
pusha
cmp
rclb
out
and
mov
movsb
cmp
jp
xor
cld
or
push
rcrb
pop
xor
adc
out
mov
mov
in
ret
inc
jge
xor
push
mov
mov
pop
sahf
das
rcrb
dec
xor
daa
add
pop
dec
sub
test
dec
or
test
cmp
out
clc
jbe
push
sahf
xchg
sbb
dec
dec
ret
sahf
and
add
dec
mov
clc
cmpsl
aad
cwtl
pop
pop
xchg
and
sbb
mov
lods
ret
lahf
dec
es
cmp
sub
insb
dec
xchg
lods
ret
jbe
dec
fldt
cmp
lahf
out
jl
pop
ss
sbb
mov
xchg
inc
lods
jmp
scas
jns
fsts
xor
pop
push
dec
jmp
rcll
xchg
cmp
xchg
test
test
loope
lds
sarl
shlb
addr16
dec
pop
dec
xchg
pop
pop
jns
sub
insb
fdivr
cmp
jns
lds
push
mov
iret
push
repz
and
sbb
add
or
mov
add
data16
push
sbbb
das
sub
ret
sub
fisubs
loop
inc
aaa
sti
push
add
sbb
out
sbb
add
mov
mov
and
xor
cli
sar
outsb
sbb
cmp
pop
cwtl
xchg
popf
out
mov
cmc
mov
ror
push
fldcw
loop
mov
jo
frstor
rclb
fld
pop
pop
into
xchg
inc
xchg
lock
push
or
jge
mov
add
adc
mov
ret
lret
insb
dec
or
cmpsl
mov
cmpl
shll
or
shrl
pusha
popf
cmp
jno
imul
cmpsl
into
push
and
or
dec
out
cltd
rcrl
gs
stc
xlat
imulb
xchg
ljmp
fptan
nop
xlat
pop
push
hlt
shll
ret
pop
mov
daa
dec
jecxz
popf
dec
shl
fsubl
cwtl
jbe
cmp
lds
jmp
or
jae
lods
addr16
inc
and
jecxz
jp
inc
or
pop
push
push
movsl
pop
adcl
adc
sti
jp
push
stos
out
fs
mov
mov
mov
xchg
into
out
mov
jnp
aad
dec
stc
mov
sarb
repnz
out
jl
or
xchg
frndint
push
jecxz
cmp
scas
leave
and
fs
negl
adc
out
out
jp
mov
dec
lret
jecxz
movsb
add
xchg
or
or
scas
push
mov
sub
rolb
or
xor
ret
jecxz
in
add
bnd
or
cmpsl
jnp
cmp
and
xor
push
push
repz
lret
outsb
dec
and
gs
mov
out
add
pushf
rcr
pushf
shlb
rorl
mov
pop
pusha
shlb
push
xor
pop
imul
xor
adc
out
pop
cld
cmc
nop
clc
cwtl
cmp
cmp
xor
dec
and
cmp
packssdw
loop
lret
xorb
lds
cmp
ss
cmp
jecxz
loop
sbb
aaa
cmp
cmp
jp
idivb
loope
xor
inc
in
movsb
or
xchg
pushf
mov
sarb
push
xchg
aas
adc
jecxz
xor
lahf
mov
in
jns
pavgb
iret
mov
pop
stos
push
repnz
mov
js
cmp
ret
cltd
sbbb
aad
jp
xor
out
fs
adc
rcll
leave
sbb
push
sar
test
inc
rcr
mov
push
mov
push
pop
mov
es
jbe
sub
or
out
xchg
mov
jmp
pop
test
mov
test
push
in
xor
out
push
xor
js
add
cmp
shrl
push
ja
jb
push
add
jmp
pop
or
add
mov
popa
dec
lock
in
mov
pop
cmpb
lret
cmc
shrl
lods
fidivs
jle
aaa
pop
and
cld
cmp
pop
dec
pop
xorl
jmp
mov
inc
push
sbb
mov
pop
clc
loopne
fidivl
push
jae
sti
inc
push
push
push
iret
pusha
movsl
mov
mov
fldenv
jnp
mov
jbe
jbe
rcl
xchg
fwait
fwait
lods
scas
fbld
sub
mov
cmpsl
in
incb
addr16
xchg
scas
rcrl
cmpb
xor
dec
fsubr
mov
push
add
aad
push
jecxz
mov
jecxz
inc
inc
cmp
sub
mov
jle
ret
loop
fimull
pushf
and
push
pop
mov
jne
aad
cmpsl
jnp
push
inc
mov
and
lods
sbb
mov
add
aas
sbb
notb
xorl
mov
ja
xchg
ds
mov
test
roll
in
out
adc
xchg
jne
ja
or
xchg
in
push
cmp
xor
sarb
fadd
in
xchg
int
jns
push
mov
xor
add
adc
lcall
xchg
mov
xchg
les
mov
ss
and
mov
adc
xorl
stos
add
inc
shr
jns
inc
mov
cmpsl
fiaddl
xor
enter
mov
mov
not
push
rol
lret
cwtl
dec
inc
adc
pop
sbb
outsl
jecxz,pt
lret
hlt
mov
push
enterw
sahf
mov
or
xchg
jne
mov
jmp
lock
test
rclb
cmp
mov
cltd
std
fcomi
push
testb
or
push
andb
and
fcmovne
inc
sbb
add
enter
mov
fs
or
push
jmp
mov
es
fwait
or
mov
insb
push
in
stc
adc
stos
leave
std
xor
or
xchg
jbe
adc
add
dec
pop
test
and
mov
mov
inc
aam
adc
out
out
mov
xchg
push
mov
lcall
pop
sub
lret
leave
cli
outsb
xlat
xchg
insl
out
and
pushf
inc
enter
lret
addr16
jno
lret
push
add
mov
fidivs
jmp
les
push
pop
cmp
addb
cmc
sub
push
or
es
or
mov
inc
bndldx
push
push
add
or
add
rcrl
inc
push
push
pop
test
sbb
push
dec
jl
andb
cmp
icebp
test
inc
pop
jge
jo
jno
xor
or
cltd
hlt
adc
pop
rorb
idivl
add
add
pop
popf
jl,pt
ret
jle
and
scas
divl
stos
push
std
sbb
pop
clc
xor
mov
xchg
push
or
lret
cmp
je
test
nop
enter
stos
sbb
sub
push
sbb
shlb
adc
iret
jo
inc
outsb
lahf
inc
out
int3
out
dec
cmc
jo
cmp
and
fs
xchg
das
jo
insb
cmp
inc
stc
ret
hlt
mov
add
sarl
push
mov
mov
leave
mov
dec
notb
ljmp
inc
test
sbb
stos
jno
xchg
outsb
inc
inc
add
inc
imul
jmp
insl
inc
mov
mov
enter
mov
xchg
movsl
repnz
pop
xchg
jb
mov
dec
mov
push
push
jp
xchg
cmpsl
mov
adc
and
ljmp
mov
sub
jo
test
daa
inc
push
sub
aaa
adc
pushf
inc
cmc
jl
inc
cs
dec
ja
mov
std
adc
adc
push
outsb
cmc
jp
jge
in
roll
stos
pop
or
xchg
pop
jno
fucomp
dec
nop
sub
enter
mul
mov
cmpsb
mov
cmovle
pop
push
pop
dec
add
sbb
test
or
pop
inc
je
repz
ds
pop
loope
jmp
mov
jecxz
lds
add
int
cmp
pop
jbe
jl
stc
out
mov
call
rorb
scas
cmp
sbb
rorb
sub
jae
imul
dec
pop
stos
push
lea
or
add
or
ds
push
sub
shll
push
adc
sahf
fwait
and
sahf
sbb
sbb
mov
push
add
cmc
jmp
mov
mov
mov
xorl
sub
jo
add
out
arpl
jle
les
into
cwtl
cmpsl
jecxz
js
cld
fildll
xchg
push
cs
inc
fdivrl
cmp
clc
mov
mov
lock
mov
fcmove
or
mov
adc
and
sub
call
in
and
fstp
cmp
cmp
fcompl
pop
subl
rcll
xor
push
push
and
mov
fsubs
cmpsl
mov
push
in
mov
mov
addr16
leave
imul
add
pop
test
inc
dec
out
out
xchg
adc
mov
scas
inc
lods
inc
pop
adc
int
sbb
xchg
shrl
outsb
into
mov
dec
xor
cmpsl
or
cwtl
fnstsw
xchg
out
or
cmp
pop
js
jecxz
data16
cmpsb
pop
inc
push
xchg
fsts
inc
insl
das
cmp
and
push
pop
and
mov
stos
jl
ret
sti
popa
adc
add
xor
hlt
clc
push
dec
cmpsb
cmp
mov
lahf
mov
scas
mov
mov
xor
rcrl
pop
stos
das
hlt
pushf
cs
dec
sarb
xor
hlt
xchg
adc
repnz
or
or
in
imul
mov
or
fistpl
rorl
pop
imul
mov
outsl
int
fcoml
dec
in
xchg
gs
mov
inc
roll
and
fiadds
jnp
rcll
push
ljmp
in
xor
add
fs
mov
push
xchg
push
iret
mov
inc
popl
xchg
imul
int
fiaddl
xchg
int
cmp
and
scas
sbb
outsl
or
xchg
sar
jle
adc
arpl
fstps
negl
stos
jecxz
sti
jnp
nop
out
adc
jecxz
mov
pop
mov
push
hlt
lret
jmp
sub
and
and
jbe
sbb
xor
mov
cmp
sbb
leave
pushf
out
jo
loope
es
cmp
shll
dec
push
mov
mov
out
cld
cmp
lods
insb
outsb
jmp
insb
cmpsl
xchg
int
orb
mov
sbb
jo
adcb
sbb
lds
sub
out
mov
sub
push
add
inc
xchg
stos
mov
rorb
jl
mov
sahf
ljmp
jae
leave
jo
xchg
in
call
inc
push
mov
jnp
push
fsubrl
mov
mov
loop
das
xchg
xchg
xor
xchg
xchg
cltd
dec
mov
dec
sbb
mov
push
mulb
aam
into
flds
stos
pusha
xor
mulb
xchg
add
lock
mov
in
rcrl
push
xor
or
gs
jge
and
jo
xchg
jae
cli
insb
cmp
jbe
shlb
fsubrl
jo
pop
enter
jle
hlt
xchg
adc
lret
adc
mov
add
shrl
int
jae
or
xor
mov
adc
decl
jno
ss
stos
mul
insl
inc
cmpb
dec
sub
es
addl
fidivrl
out
inc
push
lahf
xor
orl
lods
sbb
lahf
cmp
mov
jns
dec
cmp
sbb
arpl
and
jbe
or
push
arpl
call
dec
test
stos
jb
out
pop
jno
mov
inc
add
data16
xor
popf
push
gs
add
fstpl
mov
xor
out
sti
fwait
inc
push
pop
and
adc
pop
mov
lret
mov
lods
insb
loope
mov
dec
mov
cmc
repnz
xchg
or
popf
outsb
sub
cwtl
adcb
fadds
inc
rorl
pop
imul
ja
inc
cltd
rorl
sbb
outsb
movl
cmpsl
shrl
fdivrl
inc
pop
vaddsubpd
jnp
mov
pusha
pop
das
imul
shrb
xor
std
imul
jnp
test
aad
fimull
mov
pop
mov
fldenv
mov
mov
push
push
sbb
jno
mov
outsl
adc
ret
and
jl
data16
xchg
and
push
xlat
mov
jb
xor
ss
stos
cld
mov
push
int
int
pushf
cwtl
jp
pusha
mov
mov
mov
mov
sbb
or
adc
jb
mov
shlb
mov
add
clc
rcrl
stc
sbbl
arpl
icebp
add
icebp
cs
mov
ret
jno
xchg
mov
movsb
jecxz
fs
or
jle
add
dec
mov
push
inc
adc
mov
xchg
or
jo
test
nop
int3
negl
mov
das
mov
xor
lock
push
adc
cmp
sti
mov
sbb
jne
loopne
into
or
shrl
sbb
sahf
mov
je
shl
repz
lds
daa
leave
mov
insl
test
lods
mov
adcl
mov
pop
pop
adc
sbb
push
out
shlb
pop
mov
xor
fs
add
and
les
mov
adc
aad
push
push
imul
leave
mov
leave
push
mov
add
cmp
fs
btr
fwait
xor
rorl
pop
sbb
jo
fdivrl
popf
adcl
xor
sub
lea
lret
sti
inc
enter
mov
sahf
out
ljmp
stos
pop
and
dec
push
ljmp
push
repz
rol
pop
push
push
pop
mov
jl
loope
cwtl
xchg
inc
test
ja
pop
inc
fidivrl
pop
push
cltd
into
shrb
std
mov
pop
mov
into
jecxz
js
lods
into
mov
ja
insl
orb
leave
cld
or
ret
or
aaa
sarb
jl
shll
negb
and
pop
mov
sbb
fcoms
mov
jmp
jle
xchg
into
jle
mov
mov
cwtl
mov
mov
cs
into
int3
or
fisubl
pop
test
loop
scas
jae
jle
iret
stos
ja
jmp
add
and
ret
push
inc
push
push
dec
sbb
inc
sub
test
ret
dec
xchg
push
inc
mov
in
scas
setb
mov
mov
sub
cwtl
es
sbb
jle
fnstenv
push
mov
sbb
nop
jmp
jb
test
pop
insl
jecxz
ja
popa
jl
cmpsb
inc
dec
dec
mov
scas
cld
push
je
jns
sub
sbb
loop
bound
adc
mov
pusha
movsl
adc
xor
stos
ret
mov
dec
jge
ss
mov
fwait
ds
push
push
jecxz
ret
in
cli
fcomps
inc
sarb
adc
cmp
sub
jle
pop
out
data16
xchg
popa
xlat
jo
jl
repnz
jbe
test
std
dec
sahf
int
or
clc
push
bound
mov
or
lods
push
xor
xchg
shrl
and
xor
mov
jnp
push
sbb
jmp
adc
and
cmc
push
js
xchg
mov
dec
push
jns
imul
cmp
sub
stc
add
mov
inc
test
xchg
jns
imul
cmp
sub
stc
add
mov
inc
test
xchg
jns
imul
cmp
sub
stc
add
mov
inc
test
xchg
jns
imul
cmp
sub
stc
add
jbe
inc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jle
outsb
cmp
xor
imul
out
mov
mov
int
fnstsw
outsb
cmp
ds
jge,pn
dec
push
pop
lods
out
in
scas
std
sahf
mov
jle
outsb
cmp
ds
jge,pn
dec
push
pop
incb
loopne
test
xchg
sarb
outsb
bound
stos
cs
xchg
xchg
cmc
pop
cmp
xor
push
fcomps
jbe
cmc
jnp
mov
adc
stos
adcb
rolb
dec
adc
mov
mov
cli
jno
loopne
lods
arpl
test
dec
movsb
pusha
push
in
daa
cmp
cmp
outsl
mov
ds
jge,pt
ret
jbe
rcll
call
add
int
ret
jbe
test
pop
pop
pmaxub
push
adc
into
jb
pop
xor
lods
add
fwait
push
cmpl
out
lock
test
es
mov
fsubl
sub
dec
sbb
push
dec
push
pop
lods
out
mov
mov
int
mov
inc
pop
cmp
push
add
jnp
dec
or
mov
mov
mov
iret
ficompl
or
inc
sbb
cmp
pop
fwait
aad
enter
repnz
mov
aaa
gs
js
insl
jge,pn
dec
push
pop
lods
out
mov
mov
int
fnstsw
outsb
cmp
ds
jge,pn
dec
push
pop
lods
out
mov
mov
int
fnstsw
lret
je
mov
add
xor
fwait
xchg
dec
cltd
jecxz
adc
pop
aaa
push
pop
clc
pop
mov
inc
xor
xor
sbb
data16
pop
clc
cmp
and
clc
mov
lods
fucomip
jmp
inc
data16
test
sbb
adc
lods
loopne
dec
or
iret
push
mov
daa
mov
dec
inc
mov
test
sahf
loop
fs
xchg
or
loop
dec
imul
cmp
repnz
call
pop
sbb
jbe
push
add
mov
repnz
or
leave
aas
jle
adc
pushf
xchg
test
jmp
push
or
fstpl
je
cmp
xlat
pop
inc
xor
pusha
inc
xlat
inc
mov
mov
std
mov
not
xchg
push
stos
mov
dec
lcall
adc
sub
push
mov
insb
fdivrs
jae
js
sbb
sti
ror
cld
loopne
int
push
paddq
fnstenv
lods
mov
aad
push
adc
and
push
data16
mov
push
add
xor
mov
lret
push
jmp
inc
dec
lret
repnz
hlt
repz
dec
jbe
and
and
retw
cmp
sub
sbb
outsl
lods
or
lock
lret
xchg
dec
fistps
loop
mov
outsb
ljmp
adc
aad
sub
pop
push
mov
or
decl
leave
fs
loop,pn
ds
js
das
push
mov
xor
push
dec
mov
out
mov
cmc
sti
cmc
jg
pop
testl
cmp
test
arpl
int3
movsl
pop
sub
mov
or
es
pop
jle
sbb
ljmp
mov
add
cmpsl
dec
repnz
pop
sub
scas
jno
es
outsb
aad
mov
imul
lods
jp
int
push
xchg
cltd
mov
adc
pop
shlb
movsl
insb
cmp
aam
xor
pop
dec
jp
lea
cmp
add
movsb
push
sbb
jg
sub
cwtl
cld
sub
xor
sarl
or
dec
dec
jmp
xchg
and
gs
shrl
mov
add
ret
xchg
cmc
or
pusha
lds
popa
xchg
mov
negb
les
mov
xchg
cmpsb
test
pop
mov
mov
repz
test
aas
push
ljmp
mov
in
mov
aad
fwait
mov
cwtl
push
mov
cwtl
jae
and
insl
inc
rolb
sbb
mov
js
les
inc
xchg
and
pop
xchg
xor
push
in
call
jge
ficomps
pop
dec
dec
adc
jno
fs
mov
or
and
shlb
or
push
sub
add
cmc
mov
fcmovu
out
out
outsb
push
bound
and
popa
cmp
lret
jne
push
arpl
inc
shll
insb
scas
mov
or
insl
mov
scas
push
ret
cli
repnz
call
jl
js
sahf
jge
adc
jle
xor
outsl
xor
addb
inc
or
add
mov
xor
int
pop
lahf
pop
cwtl
adcl
insl
xor
dec
sbb
hlt
mov
sar
sarb
push
dec
add
cltd
insb
cmpsb
add
popf
dec
mov
sbb
rclb
in
push
inc
and
arpl
movsb
js
cmpb
fucomip
jg
popa
aaa
jge
pop
xchg
inc
stos
stos
jne
mov
and
push
into
cwtl
clc
daa
sti
or
sarl
aas
mov
mov
or
jmp
pop
sub
cmp
cltd
scas
cmp
xor
je
push
push
adcl
ret
pop
aaa
ss
loop
jg
pop
xor
mov
push
xor
or
xor
xchg
in
mov
jmp
xor
pusha
pop
sub
or
pop
dec
es
cmc
push
mov
dec
sub
cmp
jl
out
dec
xchg
shll
out
enter
sti
xor
xchg
xchg
adc
xor
into
sbb
hlt
loop
jecxz
stos
pop
and
push
int3
or
jecxz
pop
push
outsl
push
jne
mov
lret
ret
pop
pop
push
push
and
mov
mov
stc
add
mov
lds
mov
mov
dec
loop
xor
repz
add
fcoms
pop
or
pop
stos
jne
add
pusha
add
lds
rolb
repnz
mov
jae
int
lcall
bound
stos
or
push
out
hlt
mov
mov
jns
aaa
push
rcrb
popf
mov
in
test
stos
or
dec
jae
adc
clc
out
call
aam
push
iret
sbb
mov
sbb
movsl
adc
sub
cmpsl
mov
mov
xchg
mov
loopne
push
out
in
adc
adc
dec
ljmp
jbe
imul
cmc
cmpsb
addr16
mov
adc
shll
shlb
enter
iret
jmp
hlt
inc
adc
out
dec
sub
data16
dec
push
cmp
lahf
cli
jns
out
dec
rolb
mov
add
andl
adc
or
jecxz
sub
or
popa
cs
cmp
mov
or
or
sub
pop
repnz
lcall
inc
in
push
xlat
sub
push
sub
sti
pop
fstpl
inc
sahf
pop
mov
xchg
rcll
jmp
in
imul
outsb
cmp
repnz
pop
and
out
sbb
lea
and
adc
xor
adc
cmp
and
jne
sbb
pop
insb
jo
dec
loop
les
adc
mov
rcll
call
cmc
jnp
fidivrs
mov
leave
add
push
jae
push
mov
or
stc
clc
xchg
call
aaa
test
in
pop
cmp
push
or
cmp
cs
test
push
cmp
sbb
lods
mov
pop
jle
mov
pop
call
and
add
push
cli
ret
leave
dec
clc
jg
lea
cmc
lea
filds
fs
fisubrl
add
repz
push
js
xchg
insl
out
xchg
in
or
sbb
xchg
sbbl
mov
cwtl
jb
imul
cld
jo
data16
jb
pop
jmp
add
mov
cltd
loope
test
jo
dec
cld
fistpll
in
lret
jge
dec
sbb
jecxz
mov
sbb
xchg
pop
lock
pop
sbb
and
movaps
mov
sbb
jp
fidivs
cmpsl
bound
scas
mov
dec
xchg
adc
cmpsb
iret
mov
xor
hlt
xchg
cltd
mov
add
add
xchg
sbb
gs
jge
or
sbb
inc
cmc
fs
sbb
idivb
ds
jle
jge,pt
addr16
addl
push
mov
out
aam
in
cmp
into
or
test
or
stos
sub
js
mov
pop
lcall
mov
cltd
mov
mov
jmp
push
rol
in
dec
jbe
xchg
fwait
movsl
cltd
jmp
or
push
out
cltd
lret
adcb
stos
dec
pop
into
cmp
pop
scas
test
jle
scas
fwait
or
fwait
popf
and
push
mov
lret
mov
jo
pop
js
and
pop
cmp
test
and
add
mov
imul
iret
mov
mov
enter
ss
test
jnp
sbb
and
out
xchg
sub
mov
daa
clc
mov
sbb
add
mov
gs
pop
popf
daa
repnz
sub
lods
cmpsl
shr
daa
ret
rclb
xchg
pop
loop
mov
adc
sbb
mov
loop
aaa
add
lret
sti
xor
add
push
or
sbb
nop
mov
push
xor
and
push
in
sub
cs
aad
add
out
loope
dec
shr
adc
ljmp
pop
fmuls
ror
ljmp
adc
mov
and
mov
mov
dec
xlat
sbb
lods
lcall
or
into
cli
jge
test
xor
push
inc
cs
inc
mov
cmpsb
push
cmp
push
aaa
fdivl
bound
jns
je
aad
cmpsl
mov
popa
push
gs
jecxz
jmp
dec
push
iret
dec
icebp
out
push
sub
mov
or
jne
clc
flds
vpslld
fdivs
cld
mov
outsb
add
stos
sub
xor
push
mov
mov
add
andb
cmp
cmp
addl
cmpb
insl
cltd
xor
dec
outsl
mov
adc
jge
out
pop
aad
and
push
mov
fists
pop
sahf
call
testb
call
imul
shrl
sti
jnp
ljmp
sub
xor
xchg
jns
add
bound
push
xchg
pop
decb
inc
add
sbb
push
lods
inc
pop
or
push
int3
aad
cs
ja
adcl
adc
sbb
xchg
dec
rcll
aam
lahf
sub
mov
pop
inc
aas
add
mov
loope
cli
pop
inc
or
mov
sarl
insb
pop
inc
cmp
aad
inc
movsl
mov
out
dec
add
and
in
or
adc
mov
dec
or
cmp
aam
xchg
sbb
mov
jo
sbb
jmp
call
in
icebp
mov
inc
sarb
mov
sub
negb
pop
in
xchg
enter
repz
mov
xchg
mov
dec
xchg
ja
and
xchg
aaa
icebp
dec
fwait
xchg
in
cs
jno
jns
fwait
and
or
mov
cltd
addr16
into
in
inc
push
popa
sbb
movsl
or
jno
push
loop
dec
cmpl
lods
testl
call
scas
xchg
jno
test
push
mov
cmp
pop
out
out
div
imul
test
xor
iret
adc
push
mov
lcall
mov
fcoms
push
aaa
jg
jmp
incb
fwait
popa
out
adc
sbb
mov
sub
in
inc
pop
int
or
mov
fstps
or
adc
cmp
jg
inc
test
push
inc
scas
scas
sahf
sub
test
rcl
sahf
testl
pop
xlat
xor
stos
lock
xor
cs
push
into
movsl
jmp
mov
scas
dec
xor
testb
dec
pop
xchg
int3
negb
xor
sub
aaa
mov
adc
bsr
hlt
mov
fsubrp
cmp
pop
test
pusha
je
mov
adc
aas
stos
push
sahf
mov
aaa
ret
dec
pop
sub
je,pn
lods
cmpsb
push
sbb
jge
add
mov
outsl
xlat
jb
mov
push
pop
stc
insb
les
icebp
lret
out
mov
or
popf
repnz
iret
adc
sub
push
mov
jmp
xor
imul
inc
mov
jo
movsb
pop
inc
lret
fcmovne
cmp
loope
xchg
mov
fs
mov
ss
fcmovne
jmp
inc
or
push
cmpsl
test
clc
sub
incb
cmp
adc
pop
mov
sub
and
add
les
andb
call
fsubs
dec
repz
mov
push
xor
dec
cmp
mul
shll
dec
frstor
rcrl
adc
in
mulb
inc
jg
xchg
test
inc
in
lods
adc
mov
adc
jecxz
xchg
sbbl
adc
mov
dec
push
xchg
pop
xchg
icebp
cmp
or
jg
jmp
insb
shll
loope
cmp
sti
adc
lahf
fwait
lods
mov
lcall
xchg
leave
lods
mov
sub
rcrl
das
sahf
jae
sub
or
ss
or
mov
mov
and
jle
pop
call
mov
mov
push
ja
cli
mov
pop
add
test
dec
pop
mov
xor
out
add
ficompl
mov
call
push
ljmp
xchg
aad
jp
mov
inc
outsb
cld
leave
call
push
std
sub
movb
das
loopne
test
push
arpl
sbb
loopne
pop
pop
arpl
lahf
out
jecxz
stos
fldt
scas
inc
hlt
movsb
push
sbbb
ret
adc
lret
aam
inc
nop
sbb
jbe
es
push
lods
mov
pushf
pop
int3
adc
mov
jno
mov
fbstp
or
addr16
fdivl
sbb
lret
insl
pop
adc
icebp
or
sub
aad
or
xor
decb
dec
xorl
dec
in
jp
dec
pop
in
push
jge
mov
daa
in
dec
xchg
sbb
rcrl
insl
inc
inc
and
dec
loope
stos
push
pop
test
es
jg
sbb
xchg
adc
insl
hlt
aam
insb
push
mov
jo
mov
fists
fsub
or
mov
aad
lret
lods
int
push
cmp
js
xlat
popf
dec
rolb
out
xor
cmpsb
jno
xor
or
xor
lret
xor
inc
inc
jo
xchg
cltd
push
jmp
jno
js
sbb
lea
pop
in
mov
popf
sbb
xchg
cld
or
xor
pop
mov
jge
sti
outsb
test
test
and
cmp
add
scas
push
mov
jl
lock
idivl
pop
xchg
pop
lret
pop
andb
mov
add
jp
pop
ficoml
lret
ljmp
push
popa
notb
cmp
push
aam
js
mov
icebp
dec
cmp
je
ret
sbb
mov
xchg
mov
xor
push
dec
repz
scas
sub
mov
xchg
mov
popa
jnp
inc
lcall
fldl2t
pop
movsb
fiadds
nop
jae
in
add
xchg
leave
fimull
shlb
popa
mov
js
adc
push
cmp
shll
jmp
mov
xchg
aad
fwait
mov
mov
adc
rcrl
stos
mov
pop
cmp
fxch
push
jecxz
jne
addl
pop
add
or
arpl
out
pop
fnclex
adc
xor
xor
jg
imul
xor
adc
test
mov
fstl
loop
jbe
mov
push
adc
cmp
cmp
adcl
jne
and
sahf
dec
das
inc
mov
xor
xchg
mov
dec
cmovle
mov
inc
dec
cmp
stc
cmc
xchg
lret
imul
mov
ss
stos
testl
jnp
add
sar
dec
ret
add
icebp
xchg
bound
xchg
orb
xchg
push
mov
xchg
or
pop
mov
push
mov
enter
repz
adc
test
pop
fcoms
test
aaa
insl
pop
add
lea
inc
clc
lahf
clc
inc
fcom
int
jmp
sbb
push
xlat
rorb
push
or
test
outsl
inc
std
lods
jmp
pop
dec
add
jge
push
add
push
sub
insb
dec
mov
adc
repnz
loop
and
aad
scas
push
add
nop
or
dec
jg
icebp
lea
xor
ja
fisubrl
cmp
fistps
outsl
subb
shlb
mov
mov
push
test
std
stos
push
sub
out
pop
add
test
mov
test
dec
lds
decl
mov
fstl
xlat
loope
and
xchg
push
stos
jg
mov
lods
movsl
xchg
pop
mov
push
push
cmp
movsw
clc
mov
xor
lds
pop
pop
or
cmp
es
mov
inc
lods
push
jmp
xchg
insl
cmp
test
loopne
leave
ret
mov
lahf
data16
and
xor
xchg
add
imul
mov
pop
ret
ret
mull
loopne
sti
decl
push
fs
lock
adc
lea
push
imul
neg
sahf
mov
rorl
jmp
or
and
ret
mov
andl
dec
es
add
jae
sub
mov
movsl
adc
repnz
jae
stos
in
fbstp
xchg
aad
pop
daa
mov
pop
or
lock
jle
xor
mov
xor
je
jp
sbb
sbb
pop
dec
mov
sub
ret
leave
add
out
pop
mov
cmp
or
xor
in
nop
fs
mov
stc
dec
lock
mov
popa
je
pushf
hlt
push
dec
repnz
xchg
lret
mov
push
stos
stc
cmp
call
shll
cmp
popa
cs
fbld
inc
dec
out
pop
adc
mov
xor
xlat
leave
mov
pop
dec
mov
scas
mov
push
sbb
pop
cmp
xchg
lods
cmp
movsb
add
cli
ja
pop
ja
icebp
js
add
repnz
and
push
fistpl
popa
cmc
icebp
mov
pop
lret
fnstsw
mov
add
jp
ret
mov
inc
xorb
mov
popa
repnz
das
rorb
lock
sbb
or
pop
fsts
divl
xor
push
sbb
lcall
dec
imul
aas
dec
sbb
outsb
or
xchg
xor
push
mov
int
add
fwait
in
pop
lods
inc
dec
push
pop
out
sub
daa
frstor
push
and
daa
adc
rcrl
negl
pusha
loop
and
dec
sub
imul
scas
hlt
lcall
jb
repnz
clc
bound
pop
loope
ret
sbbl
inc
mov
fwait
inc
sub
iret
and
and
cmpsb
fisubs
mov
es
lds
jo
jp
dec
push
sub
adcl
loop
xorb
pop
adc
and
fmull
ret
lock
and
insl
dec
fs
lds
pop
mov
shll
stc
mov
add
into
xchg
push
orl
inc
cmpsl
daa
adc
inc
test
or
pop
std
sbb
sbb
lret
lret
add
and
mov
loop
and
test
scas
inc
cmc
xchg
fistps
stos
std
dec
fs
inc
mov
push
jmp
lods
nop
adcb
jecxz
int3
xor
mov
adc
scas
xorl
pop
out
out
add
daa
jle
subl
inc
testb
pop
jne
push
xlat
mov
ja
stc
aas
mov
or
nop
jae
mov
inc
aam
int3
clc
ja
xchg
xchg
nop
les
cli
mov
add
jb
pop
imul
cmpsl
fsubrl
jnp
pcmpgtw
sbb
cmp
xchg
fdivl
test
push
loop
outsb
lds
jle
imul
adc
lret
jp
js
lret
xchg
jg
cmp
std
xor
jmp
out
shrb
jp
mov
mov
mov
movsb
ret
sub
aad
xor
lcall
fcompl
in
mov
xchg
mov
mov
sbb
fwait
leave
mov
push
iret
ds
mov
sbb
push
movsb
es
dec
cmp
out
dec
daa
test
jmp
dec
or
sbb
mov
or
fstpt
lahf
dec
jecxz
insl
pop
mov
scas
mov
sub
pusha
orps
pusha
mov
push
inc
mov
cmp
push
out
mov
scas
pop
xchg
cli
inc
sub
push
outsl
mov
sbb
ja
mov
adcl
fadds
xchg
adc
xchg
push
jo
mov
mov
les
inc
stos
push
pop
lods
clc
xor
inc
add
pop
cli
fidivrs
pop
stc
pop
addl
lret
ret
mov
mov
test
iret
fcoms
xchg
xchg
jle
int
jp
pop
fs
mov
mov
pop
and
ret
lcall
ljmp
test
out
or
push
jnp
mov
pop
adc
mov
or
xor
push
sarb
out
adc
ljmp
jecxz
cwtl
mov
daa
popf
cmpsl
mov
in
pop
loopne
push
cli
sbb
pop
mov
shrb
gs
mov
movsb
and
push
pminsw
push
inc
clc
je
prefetchw
ds
jge,pn
dec
push
pop
lods
out
mov
mov
int
fnstsw
outsb
cmp
ds
jge,pn
dec
push
pop
lods
out
mov
mov
int
fnstsw
outsb
mov
ds
cs
push
dec
push
pop
sub
into
popf
mov
int
fnstsw
outsb
cmp
ds
jge,pn
dec
push
pop
lods
out
pop
je
into
ljmp
jno
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
shlb
jecxz
xchg
mov
sahf
xchg
xchg
rcrb
and
adc
pusha
add
xor
push
mov
ret
mov
and
xchg
loopne
lock
mov
xor
add
push
pusha
add
inc
and
mov
cmp
lods
shlb
sbb
adc
jno
addr16
pop
repz
jl
xorl
ret
mov
adc
jo
sub
out
inc
push
add
daa
cltd
aas
test
lock
outsw
mov
int3
fsubs
add
sti
xor
lods
sub
ja
cld
pop
mov
jnp
nop
push
add
add
inc
inc
sti
mov
stos
mov
orl
loopne
sub
and
in
xor
and
mov
into
dec
rcll
insl
outsl
loopne
sub
jae
and
add
sub
pop
dec
repnz
push
pusha
filds
cli
add
adc
push
and
mov
jecxz
ja
sti
lock
add
xor
pusha
or
inc
and
mov
fwait
cld
in
mov
movsl
mov
pop
push
outsb
push
jle
or
inc
xor
addl
not
xor
adc
sbb
insb
pop
pop
xor
scas
les
mov
rclb
inc
xor
arpl
adc
jo
inc
and
mov
jecxz
xchg
loopne
lock
mov
xor
arpl
adc
jo
inc
and
mov
and
and
add
adc
push
mov
and
mov
and
enter
popl
nop
cli
jg
aad
popf
ror
add
lret
push
inc
cmp
jns
insl
or
out
bound
sbb
call
repz
mov
leave
push
inc
mov
loopne
repnz
out
icebp
sub
mov
fstpt
mov
decb
lret
add
jne
mov
adc
stos
pusha
stos
js
cmp
and
adc
inc
pop
pop
ja
jge
fcomps
fsubrs
jo
mov
ljmp
and
mov
call
pushf
pop
inc
push
repz
sub
mov
add
and
pop
lahf
ret
adc
adc
mov
iret
repz
lahf
sbb
fidivs
ret
and
fld
sub
sub
ror
lock
pusha
mov
jno
cmpb
not
jo
cmpsb
ret
shlb
out
aas
dec
lcall
or
jge
and
pop
pop
xchg
inc
dec
jmp
aad
ret
lahf
mov
adcb
pop
iret
dec
cmp
add
insl
loop
and
adc
pushf
lret
fwait
es
xchg
fdivr
out
je
rcr
jmp
outsl
adc
sub
xor
adc
xor
std
mov
xchg
sbb
in
push
gs
push
out
push
add
and
mov
ficomps
mov
xchg
pop
inc
jb
inc
and
bound
int3
mov
mov
xor
jg
xlat
punpcklwd
push
sbb
xor
jnp
outsb
jmp
fisubl
addr16
push
xor
adc
add
fmull
pop
sbb
jns
push
bound
cmp
mov
add
leave
xchg
jnp
adc
or
pop
shl
sub
xor
hlt
pop
or
notb
negl
sub
loop
shll
push
pushf
adc
lret
shll
out
dec
pop
enter
nop
adc
inc
xchg
in
scas
xor
mov
mov
cmpsb
sub
cmp
das
negb
sub
pop
mov
mov
adc
idivl
iret
mov
sbb
popf
mov
push
outsl
inc
in
pop
pop
sbb
fs
mov
lds
cmp
push
inc
loope
sbb
inc
adc
mov
jge
int3
fldenv
xor
add
sub
mov
push
stos
fldl
pusha
and
into
lret
push
sbb
and
mov
jmp
and
mov
fisttpl
int
xchg
mov
or
fwait
in
jae
adcl
orl
adc
pop
popa
push
jp
out
jb
cs
pop
mov
mov
mov
jmp
out
jns
mov
xor
mov
aam
outsl
push
leave
push
inc
std
ja
ljmp
sarb
test
and
xchg
mov
mov
inc
bswap
and
cs
push
ss
aam
cmp
pop
or
jno
repz
loopne
cmpsb
sti
stos
push
cmpsb
stos
mov
jmp
sub
add
mov
and
bound
pop
jg
pop
xchg
mov
sub
out
in
in
pushf
shrb
out
push
xchg
cwtl
addr16
lret
nop
fucom
inc
lods
inc
adc
je
in
mov
xchg
inc
push
aam
fsubs
out
pop
lods
insl
mov
lret
pop
insb
scas
mov
outsb
xchg
sti
in
ja
push
je
sti
lret
cs
or
inc
push
ljmp
into
pop
enter
imul
xchg
mov
lret
pushl
in
int
sbb
int3
adc
cmp
sbb
jecxz
xchg
test
push
stos
notl
or
aas
mov
or
pop
in
imul
mov
adc
fdivs
cmpsl
js
push
inc
ljmp
jb,pn
add
push
leave
jge
push
mov
push
sub
cs
or
sbb
ljmp
les
sbb
in
sbb
cmc
mov
adc
fcomps
jl
movsb
sub
adc
int3
rcrl
cmp
ja
xchg
add
fwait
pop
xchg
mov
and
scas
pop
jb
imul
mov
pop
test
bound
leave
dec
cwtl
push
clc
xchg
mov
sbb
insb
pop
inc
outsb
and
mov
lahf
das
adcl
push
mov
gs
mov
subl
and
mov
pop
insl
xor
ret
fstl
push
call
pop
push
mov
cmp
cmpsb
jp
int3
sub
xor
jo
and
cmp
testb
lock
cmp
rcll
fincstp
mov
in
push
fldenv
pop
loope
mov
mov
je
cmp
mov
adc
je
jnp
loope
adc
arpl
cwtl
mov
stos
cmp
and
leave
pop
lcall
sub
mov
and
jl
dec
inc
cs
fwait
adc
pop
mov
sub
stos
and
clc
push
dec
jae
imul
cmp
cld
in
sub
mov
jmp
xor
push
xor
icebp
adc
cmpsl
push
dec
dec
or
nop
js
popf
jo
je
shl
daa
xor
sbb
cltd
mov
pop
push
sbbl
or
ret
insb
add
mov
int3
pop
pop
xchg
rclb
push
sub
sub
sahf
sti
pusha
mov
mov
mov
mov
sahf
sbb
outsb
lods
lahf
fisttpl
lods
pushf
xor
out
sbb
pop
insl
sbb
orb
jg
push
push
out
sahf
rclb
push
lea
mov
icebp
jle
sarb
enter
xchg
repz
int3
cmpsb
adc
pusha
jl
in
int3
push
lcall
mov
jmp
sbb
add
adc
aaa
stos
sub
cmp
push
push
cmpsb
and
sbb
rclb
pusha
test
pop
xchg
dec
inc
jp
xlat
inc
inc
orb
mov
xchg
mov
lret
jp
inc
add
shr
nop
mov
xchg
inc
and
sub
lahf
or
in
or
push
xchg
pop
in
adc
mull
popa
cmp
fdivrs
shr
popa
pop
lcall
shll
xchg
dec
lods
or
pop
mov
push
fdivrs
ficoms
je
aas
add
out
ljmp
cmc
cltd
mov
mov
cmpsb
jle
mov
enter
or
movsb
das
shl
pop
in
lret
xor
shrl
pmuludq
pop
test
xchg
aas
rolb
mov
testb
and
push
fwait
add
mov
xchg
std
xchg
pop
mov
mov
out
cmpsb
jp
mov
mov
inc
xor
out
sub
fistpl
into
sub
cmp
out
mov
in
jne
call
and
mov
push
int3
outsl
and
leave
add
repnz
cld
inc
rcrb
dec
pop
xchg
fimull
cmp
push
mov
sbb
scas
test
nop
xchg
fiadds
mov
xchg
in
nop
mov
stos
stos
mov
repnz
adc
movsb
ss
mov
push
mov
add
or
mov
daa
icebp
mov
dec
enter
adc
and
ret
push
xchg
aas
mov
pop
mov
dec
mov
push
jle
imul
lahf
push
and
cli
cli
mov
sub
out
or
mov
fwait
mov
add
or
loop
ret
jb
loop
mov
sub
ret
popf
push
jmp
mov
in
sub
mov
push
xchg
loop
repnz
cmc
mov
outsb
test
dec
adc
jbe
fsubrs
enter
bswap
xor
cmpsb
std
stc
in
rcrl
loopne
mov
and
jl
sbb
push
test
pop
out
mov
push
fucom
jno
fistpll
or
cmp
lea
xchg
jge
push
lock
enter
outsb
jne
cmp
je
scas
adc
push
lods
or
lahf
adc
loopne
lahf
and
and
js
mov
lods
scas
movsl
push
mov
or
js
arpl
and
out
and
add
jns
enter
lea
jne
cwtl
xchg
in
jl
and
imul
scas
push
jl
push
xchg
iret
rolb
adcl
aam
popa
scas
dec
xchg
adc
mov
push
fcompl
jle
fs
test
mov
jge
push
mov
mov
icebp
movsl
inc
or
dec
pop
rolb
inc
adc
sbb
into
and
in
stc
sar
adc
sub
out
jp
inc
pop
es
sti
fnstenv
sub
xorb
fsub
sub
sub
cmp
mov
pushf
les
jmp
pop
and
leave
icebp
int3
aam
xor
out
mov
std
sub
jge
pop
cmpsl
pop
aam
sub
ljmp
lds
mov
lods
xor
daa
outsl
es
cmp
sub
push
daa
mov
dec
xchg
dec
int3
popa
dec
jp
dec
dec
jmp
lds
mov
add
clc
add
out
aad
ds
psubq
pop
push
mov
push
lds
lods
jno
movsb
lods
push
push
out
dec
push
imul
daa
mov
pusha
jg
lods
int
add
paddq
push
cmp
push
arpl
inc
push
push
xchg
jbe
ljmp
sahf
and
fistpl
sub
stc
cmp
xchg
inc
mov
xor
sbb
dec
jge
icebp
xor
mov
pop
aam
jae
add
out
rclb
sbb
xchg
xor
mov
xor
fcmovu
lahf
inc
and
ret
incb
ficoml
out
sbb
xchg
repz
pop
dec
jae
xchg
xchg
arpl
ss
inc
xchg
lods
mov
jecxz
mov
mov
adc
sahf
test
dec
daa
icebp
clc
inc
outsb
or
mov
jmp
lds
out
shlb
mov
push
test
int
daa
out
nop
lods
bound
or
fidivs
cli
sbb
in
daa
enter
push
fimull
inc
sbb
push
pusha
int
ficoms
and
sbb
cmp
bound
jnp
out
arpl
mov
imul
loope
mov
add
jns
cmc
inc
ds
pop
in
mov
sbb
int3
incb
repnz
test
add
sbb
sub
adc
popa
ret
xor
or
mov
loop
jo
js
iret
inc
cs
add
xchg
in
fistps
lods
je
outsl
xor
test
outsl
in
dec
sub
cli
sti
and
push
shll
jmp
cmpsb
dec
es
loopne
push
mov
jbe
sub
fs
cmp
push
inc
xor
mov
insl
jae
fcoms
add
mov
mov
data16
leave
shl
mov
cld
bound
push
xor
mov
xlat
sub
jbe
dec
xorb
call
mov
and
fildll
repz
pop
sar
lods
mov
jns
mov
mov
push
in
arpl
cli
push
jmp
jmp
mov
sbb
out
loope
jns
popa
iret
cmp
testb
in
repnz
add
cmp
mov
pop
insb
js
mov
push
fs
and
ret
xchg
lret
inc
pop
lock
shl
inc
pop
movsl
and
iret
popf
dec
movsl
mov
stos
cli
shrl
push
int3
xchg
xor
xchg
xchg
addb
loope
jne
sub
mov
push
push
add
xchg
jnp
cli
sub
jo
jmp
test
jae
popf
mov
mov
test
rorb
adc
fnstcw
xchg
sub
ja
push
in
std
add
jge
insl
sub
and
hlt
pop
fnstcw
aam
cmp
iret
xchg
lcall
shl
inc
adc
dec
daa
cs
xorl
repnz
dec
mov
sbb
inc
inc
dec
shll
xchg
mov
ljmp
imul
repz
testb
and
lds
inc
lret
repz
push
sub
lret
clc
xor
mov
add
add
adc
cmpsb
arpl
push
inc
xchg
jge
scas
scas
adc
xchg
xchg
iret
pop
imul
mov
test
int
pop
mov
mov
add
std
inc
jp
jne
adc
mov
cwtl
mov
push
es
addr16
mov
insl
movsl
jmp
jg
stos
mov
mov
mov
sar
xor
inc
xchg
mov
or
adc
dec
dec
pop
sti
ljmp
push
fisubs
stc
shrl
cmpsb
xchg
lods
lahf
insb
pop
mov
mov
movsb
roll
bound
andb
int
inc
mov
mov
jno
repz
push
pmullw
sbb
gs
aad
cmc
stc
pop
leave
jnp
dec
mov
mov
mov
inc
inc
mov
mov
lret
inc
clc
std
add
cmpl
mov
adc
pop
adc
xor
mov
cmp
jge
adc
daa
leave
popf
pushf
sti
out
sti
testl
xor
xchg
daa
adc
cli
sub
aad
adc
decb
mov
xchg
push
jecxz
mov
lret
aad
fisubs
push
fisubrl
jecxz
inc
jbe
ficoms
add
sbb
jae
pop
in
fdivrl
push
mov
sub
loope
push
xchg
mov
ljmp
stc
sbb
or
inc
jmp
cmp
out
push
push
xchg
addb
ss
mov
xchg
ja
or
std
mov
jne
movsb
cmp
xor
int3
pop
jmp
sbb
mov
rorl
jns
jg
call
lods
je
mov
addr16
das
jb
xor
imul
inc
add
into
xchg
mov
cmc
outsl
ret
in
test
pop
pop
out
pop
idivl
push
xor
pop
and
xchg
mov
dec
jmp
xchg
xor
adc
xor
push
push
jno
and
cmpsl
test
hlt
outsb
dec
mov
and
test
pop
int3
push
cltd
mov
lahf
pop
mov
mov
push
imul
cwtl
push
add
sbb
insl
call
jg
mov
lcall
push
repnz
repnz
scas
das
xchg
repnz
sbb
int
xchg
ffree
xchg
imul
xor
lahf
stos
mov
and
dec
dec
fwait
adc
std
stos
lfs
mov
sub
outsl
pop
repnz
cmp
out
js
roll
adc
xchg
add
mov
jp
dec
jo
mov
sbb
mov
mov
sbb
cmp
pop
arpl
sbb
iret
push
inc
sbb
sbb
xorb
fwait
push
movl
fistpl
or
enter
cmpsl
test
mov
mov
add
xchg
mov
in
rcrl
filds
sbb
dec
pop
or
ret
mov
xchg
jmp
rcll
aas
les
jmp
aas
sub
mov
repz
add
add
mov
in
lcall
push
clc
test
push
mov
lahf
mov
xchg
shlb
mov
sub
lods
shrl
push
out
add
mov
and
into
ret
ret
adc
addr16
test
inc
je
lret
sub
mov
pop
and
cmc
xchg
push
pusha
inc
enter
jnp
push
out
sbb
out
fs
adcl
ret
pop
scas
outsb
dec
clc
mov
add
or
andl
inc
rolb
test
sub
in
pop
lret
adc
push
int3
fisttpll
sub
data16
cld
add
bound
mov
jno
or
xchg
adc
dec
stos
call
jp
cmp
ja
xchg
fnstenv
incl
pop
in
lods
jp
pop
or
xchg
aas
mov
or
push
pop
inc
cmc
mov
shlb
ret
stos
aas
push
test
lods
scas
and
icebp
shlb
sub
adc
pusha
inc
test
jno
xchg
lret
pusha
ret
test
jle
adc
ja
fildll
mov
mov
insl
imul
inc
xchg
subb
cwtl
pop
mov
xchg
sbb
jb
dec
xchg
mov
pop
sahf
inc
push
cmp
xchg
mov
mov
jp
pop
or
test
fwait
xchg
mov
mov
fdivr
cli
xchg
push
ds
pop
xlat
sbb
pop
add
bound
andl
pusha
sar
imul
xchg
negb
arpl
xchg
xor
loop
mov
xor
pop
mov
pusha
sbb
or
inc
push
inc
fs
mov
mov
sbb
nop
test
out
sub
ret
cmp
ror
mov
fistl
inc
add
cmp
cmc
xlat
dec
sub
and
arpl
out
inc
je
loope
lret
stos
nop
loope
ss
mov
sbb
push
sti
sub
jle
lods
enter
aas
ds
movsl
xchg
std
popa
push
int3
enter
xor
arpl
scas
shrb
pop
lea
cmpsb
mov
pop
pop
leave
cmc
add
jmp
jae
pop
cwtl
adc
push
int3
sbb
mov
or
sbb
sbb
movsl
rep
xor
and
push
or
dec
adc
lret
cwtl
shlb
push
inc
cltd
cs
enter
xor
push
hlt
push
jo
pop
jns
xor
stos
addr16
jl
push
movsl
push
stos
cmp
sbb
mov
rcrl
sub
pusha
cmp
ljmp
jp
xor
daa
dec
jnp
in
pop
nop
jnp
outsb
xchg
repz
sbb
mov
xor
push
adc
mov
jp
addl
lea
adc
cli
jl
xor
xlat
cmp
cmp
rorb
cmp
xchg
fimuls
std
mov
aam
clc
in
rcr
es
xor
test
or
cmp
sti
testl
subl
push
push
mov
mov
or
fisubrl
mov
pop
out
loope
aaa
and
nop
out
dec
cmpsb
mov
mov
mov
enter
call
in
sub
pop
push
mov
arpl
cmpl
aad
sub
push
jae
es
fcompl
roll
xor
jl
insl
cld
add
js
jae
in
out
push
loop
fwait
scas
add
jg
pop
xchg
arpl
cmp
outsb
pop
mov
rorl
sbb
inc
cmpb
in
outsl
out
out
scas
push
cmp
push
mov
mov
pop
mov
sub
push
out
leave
daa
xchg
dec
int
sbb
movsb
dec
sti
dec
inc
push
adc
xchg
sbb
fcoms
inc
adcl
loopne
cmpsb
or
iret
xchg
jmp
test
cltd
lods
xor
mov
hlt
ss
rorl
dec
leave
cmc
pop
mov
movsl
cmp
add
dec
push
addr16
ja
loopne
mov
ret
jns
das
xchg
movsl
nopl
fwait
js
cld
adc
pop
inc
decl
push
jg
mov
jg
insb
scas
cld
hlt
dec
or
mov
mov
rol
hlt
pop
and
adc
mov
cmp
sub
inc
lea
or
or
mov
dec
push
or
push
dec
out
mov
xor
into
shlb
scas
xor
sub
pop
jne
cs
dec
sbb
arpl
or
xchg
add
jp
cmpsl
cmpsb
lods
outsl
inc
out
in
mov
cmp
mov
xchg
popa
sbb
and
out
mov
xchg
fcomi
push
or
or
sbb
mov
faddp
pop
xor
dec
std
stc
inc
sub
cltd
mov
xchg
jo
mov
lret
insb
xor
jnp
mov
push
cmc
popf
in
jno
es
jle
loop
mov
test
sub
cmpsb
neg
mov
pop
icebp
imul
fcomps
or
mov
loope
xor
jge
mov
lret
shll
mov
jo
mov
gs
sbb
or
jp
xor
cs
xor
aam
movsb
pop
mov
cmpsb
sahf
es
mov
mov
negl
aad
enter
mov
and
lock
mov
xor
arpl
adc
jo
inc
and
mov
jecxz
xchg
loopne
lock
mov
xor
arpl
adc
jo
inc
and
movsb
repz
and
add
xor
shll
and
addl
adc
popa
adc
inc
lret
push
mov
ret
xchg
xchg
loopne
jo
inc
and
push
fistpll
fs
fsubrl
imul
add
dec
push
push
fwait
out
cli
jmp
sti
aam
cmpsb
fwait
mov
xchg
mov
jbe
inc
jnp
or
sbb
sub
cmp
fwait
in
test
sti
mov
jmp
xchg
jbe
pop
mov
cs
push
ret
or
add
lcall
ror
xchg
or
pop
das
xor
das
cwtl
cmp
clc
insl
fdivrs
ret
push
dec
fimuls
inc
cmp
push
into
repnz
pop
lods
in
add
push
adc
adc
push
and
jecxz
xchg
fistpl
cltd
dec
icebp
imul
xor
jb
cli
mov
ss
add
mov
js
xchg
push
and
inc
data16
in
sub
jmp
sti
es
push
cmc
cltd
dec
mov
pop
cmpsb
xchg
xchg
mov
cwtl
lret
jae
or
notb
clc
js
fwait
cmp
xchg
imul
inc
ficomps
scas
cmp
fwait
xor
and
ljmp
ret
out
jns
xchg
pop
popa
imul
or
pop
sub
orl
decb
xor
in
jmp
test
cmp
sub
push
gs
pop
cmp
jnp
lcall
lret
cmc
in
xchg
sti
dec
push
shll
ss
bound
add
bound
repz
lcall
aam
ljmp
sbb
cmp
dec
dec
sbb
sub
cmp
lret
out
imul
sti
mov
mov
jbe
inc
jnp
or
sbb
sub
cmp
lret
out
imul
sti
mov
mov
icebp
ret
addr16
inc
sbb
mov
push
int3
dec
and
pop
fmull
lahf
les
push
cmpsb
bound
je
cmp
push
mov
add
gs
pop
jns
mov
imul
fsubl
fucom
cs
push
xorl
test
shlb
push
mov
xor
lea
daa
inc
hlt
mov
mov
fnstenv
add
jecxz
xor
add
sub
mov
fidivs
mov
jg
sbb
jae
out
arpl
mov
push
pushf
rcll
xchg
stos
pop
sarb
mov
out
jp
jns
test
pop
cmp
sub
lret
add
adc
push
dec
gs
aaa
rcl
cmp
push
test
in
clc
in
in
sub
inc
shlb
in
jmp
in
mov
jge
stos
xor
pop
stc
bound
and
ljmp
test
jmp
dec
sub
dec
push
mov
lea
ja
mov
mov
jae
cld
inc
fcomps
orl
shl
mov
mov
jb
xor
mov
stc
and
push
mov
rcr
fstps
rcll
cs
cmp
and
pushf
cmp
out
mov
mov
ss
mov
xor
xchg
cs
xchg
xchg
test
xor
divb
jnp
mull
sbb
jecxz
test
mov
sahf
inc
push
sub
add
mov
addl
mov
or
ficompl
add
pop
pop
rorb
cmp
cld
mov
test
push
jno
push
push
mov
insl
cli
in
jge
jns
ret
adc
and
xchg
lods
into
lcall
jle
in
inc
fldenv
cwtl
pop
aam
rol
jno
and
les
xchg
xor
jne
stc
repz
or
and
xor
int3
pop
sub
aas
fisttps
ret
popa
sbb
adc
imul
xor
mov
mov
cmpb
jae
imul
das
addr16
mov
pop
push
mov
jbe
sbb
adc
inc
hlt
out
aad
push
xor
add
imul
add
pop
cmp
fcoms
shlb
scas
mov
sbb
cld
push
sti
rorl
outsb
mov
in
dec
imul
outsl
adc
out
add
xchg
rorl
mov
add
push
adc
aas
dec
cmp
es
xchg
int3
xchg
je
shll
pop
cmpsb
jno
test
jg
adc
call
jne
nop
mov
bound
movsb
mov
add
loop
xor
cmp
push
sub
test
pop
xor
test
data16
push
addb
mov
lahf
je
enter
mov
mov
sub
pushf
ss
pop
dec
cmp
lret
outsl
fidivl
popa
inc
movsb
test
scas
add
fildl
lea
cmp
adc
pop
mov
addl
in
xchg
test
sub
loope
xlat
mov
push
mov
test
bnd
testb
dec
aaa
cmp
insl
mov
scas
shrl
jbe
sbb
jp
sub
push
movsl
cmpl
jne
sahf
push
push
in
lret
hlt
add
sbb
adc
out
inc
sub
dec
push
push
mov
lret
jmp
fimuls
pop
or
pop
sub
sub
mov
stos
subb
push
jp
loop
push
inc
jmp
xor
bound
mov
mov
add
repnz
fiaddl
xlat
dec
mov
mov
mov
test
cmp
xor
push
inc
mov
imul
ss
hlt
sub
fldenv
and
stos
mov
ja
mov
pop
sbb
pop
into
stos
mov
or
call
cltd
fisubs
daa
loopne
out
adc
add
jne
in
jg
mov
das
mov
pop
iret
mov
inc
and
ficoms
insl
pop
jle
push
mov
push
js
pusha
mov
jle
mov
fcomp
fsubs
cmpsb
pop
out
push
fcom
xchg
aam
lods
add
mov
add
cmpsl
imul
into
mov
jmp
enter
xor
lea
stos
and
call
lcall
fprem
sbb
adc
stos
mov
iret
and
rol
fiadds
fbld
mov
add
ret
xchg
inc
testl
shll
jle
sbb
dec
mov
pop
aam
mov
cs
push
dec
and
les
cmp
xor
xor
mov
repz
cmp
cmp
xor
pop
pop
jg
movsb
loopne
jbe
add
push
and
addr16
pop
mov
movsl
add
dec
fs
adc
popl
jo
jae
add
lret
mov
sub
fnstenv
pop
mov
gs
jmp
mov
dec
rcl
lret
test
out
inc
sub
cmp
mov
imull
mov
into
xlat
mov
add
loopne
adc
or
shr
mov
loopne
mov
mov
or
push
push
add
xchg
pop
ds
aaa
mov
nop
cs
xchg
and
sbb
add
xor
je
mov
xor
cmp
jne
push
js
or
push
cmpsl
or
outsb
stos
fsubrs
ljmp
cmp
mov
mov
mov
pop
lock
lret
mov
jb
jnp
or
addl
nop
dec
or
pop
xor
decb
add
xchg
adc
add
add
cmp
ret
add
add
sbb
push
scas
jb
aas
push
mov
cltd
dec
pusha
add
or
jg
outsb
imul
add
addb
subl
sub
lret
push
sub
mov
popf
inc
negl
cmpsb
xchg
jecxz
push
mov
jge
inc
xor
inc
not
shrl
sub
mov
popa
cmp
jge
mov
pop
mov
jg
or
insb
sahf
jnp
lods
push
or
nop
add
in
dec
xor
out
pop
jnp
aas
push
call
fstpt
aam
aam
imul
pop
push
cmpsb
aaa
out
push
push
xchg
mov
push
xchg
or
push
mov
in
adc
mov
jmp
dec
xchg
rcrb
int3
dec
sub
out
insb
pop
in
pop
and
into
mov
lods
jle
ljmp
jmp
movsb
mov
arpl
ja
mov
pop
xchg
mov
out
fidivrl
add
icebp
mov
mov
push
mov
jbe
lods
cltd
iret
push
imul
xor
popa
and
jnp
outsb
inc
test
loope
lods
dec
mov
pop
push
fistps
xchg
cmp
pop
push
mov
xor
mov
pop
push
in
repz
push
inc
or
mov
dec
sub
sub
in
adc
lret
inc
or
sbb
aas
call
xor
xchg
aas
add
or
cmp
cltd
push
lea
dec
ret
jnp
aad
and
sbb
dec
and
iret
loop
lock
cmp
scas
cmpsl
int3
inc
and
cmp
jmp
jecxz
gs
xchg
push
pop
scas
cld
inc
rcrb
outsl
inc
xor
je
sti
xor
push
into
inc
into
mov
sub
push
stos
repnz
pop
popl
lret
outsb
inc
mov
inc
insl
pop
xor
ss
rcll
cmp
enter
in
jbe
xor
out
jne
mov
out
loope
xor
pop
jbe
ljmp
rorb
adc
cltd
outsb
mov
movsb
fists
push
push
test
stos
mov
xor
fldl
test
scas
mov
mov
xchg
mov
dec
out
xor
xor
push
in
imul
cmp
test
cmp
repnz
mov
cmpsb
data16
sbb
aaa
sub
je
rep
fisubrs
fisubl
cltd
outsb
xchg
pop
stc
mov
rcr
insl
and
mov
and
and
mov
cmpsb
movsl
test
cmpsl
dec
rclb
inc
mov
push
repz
xor
mov
jnp
sbb
jecxz
dec
std
data16
sbb
and
shll
or
mov
int
and
or
sti
jmp
aas
mov
sti
sbb
pop
dec
test
inc
push
loop
test
jmp
fs
jae
enter
fisubs
dec
lret
lods
or
fwait
aas
pop
jp
mov
pop
sbb
dec
or
ljmp
adc
std
loope
sbb
jle
fadd
add
out
imul
sbb
add
cmp
fsub
sbb
roll
shrl
bound
pop
les
jp
push
mov
xchg
mov
sbb
mov
pop
pop
imul
fstl
pop
jl
aad
and
outsb
or
dec
movsb
mov
test
iret
int3
xchg
dec
pop
and
push
jmp
adc
ret
daa
mov
repnz
jge
lds
sbb
or
imul
in
out
jp
cmc
sahf
xchg
jg
hlt
or
cltd
fwait
out
scas
pop
ljmp
jae
adc
aad
jnp
pop
aad
xlat
push
push
pushl
sbb
pop
xchg
adc
shll
adcb
and
outsl
xor
out
jle
insl
fs
xchg
in
lret
adc
repnz
in
fiadds
es
data16
stos
outsb
mov
mov
mov
ret
inc
sub
pop
add
lea
js
sub
fstps
fnstenv
iret
in
or
in
stc
xchg
and
ret
push
sbb
pop
loopne
pop
mov
outsb
daa
xchg
mov
pop
dec
xchg
sub
xchg
cmp
mov
leave
ljmp
ja
and
sub
ljmp
or
xor
shll
int3
dec
and
std
push
aaa
mov
cmpsb
mov
int3
sub
jmp
dec
pop
pop
and
lods
and
pop
cmp
mov
fadds
out
mov
sub
pop
pop
sub
bound
out
cmp
and
imul
stos
adc
pop
call
cmp
scas
xchg
mov
sub
insb
cwtl
les
ds
aad
mov
shlb
mov
pop
jne
or
aaa
into
cmpsb
aam
ret
inc
int
test
cmp
cmp
xchg
fldcw
test
push
inc
ds
jmp
add
mov
pop
es
ret
ds
loopne
cmp
push
xlat
fisubl
mov
push
lret
leave
push
in
movsl
cwtl
xchg
insl
pop
push
and
iret
addb
fbstp
popa
fistps
xchg
sbb
fisubs
hlt
jae
lahf
fimull
inc
push
je
jns
cmpsb
ja
bound
in
mov
push
or
sbb
mov
pop
test
insb
sub
test
movsl
test
test
cltd
rorl
orb
and
cmpsl
int
xor
mov
adc
or
test
push
repz
lret
lcall
xor
stc
int3
es
rorl
sbb
fs
add
mov
int3
cmp
lods
or
add
mov
rcr
dec
sahf
les
jns
inc
push
pop
mov
insb
aas
jnp
fildl
mov
adc
sbb
daa
in
inc
mov
pop
lock
aam
mov
aaa
adc
es
push
sub
sub
mov
or
add
sbb
dec
pop
adc
cld
mov
add
adcb
jecxz
sbb
bound
jb
fdivl
mov
dec
test
test
xlat
lods
push
int
mov
repz
jle
hlt
je
push
aaa
adc
andb
lcall
jb
push
mov
push
or
ss
xor
out
clc
or
pushf
pushf
mov
mov
cmpsl
jno
ss
jl
loope
mov
sbb
daa
mov
xchg
xchg
sbb
ret
stos
sbb
cmp
push
sub
push
mov
es
or
fiaddl
cmp
dec
mov
sbb
repz
inc
sbb
jecxz
xlat
jo
adc
dec
int3
jne
ja
pushf
test
pop
push
add
popf
sarb
insb
push
lds
push
or
push
add
cmp
aad
xchg
ds
xor
adc
dec
push
fidivl
xchg
icebp
cmp
popa
arpl
jo
push
jle
test
mov
sbb
aad
lea
sbb
mov
push
popf
push
das
and
mov
add
push
jge
push
adc
rolb
adc
into
fwait
jo
lahf
sub
sbb
popf
xchg
hlt
stos
test
jns
adc
cltd
jb
jge
mov
cli
cs
stc
cmp
xor
xchg
fincstp
jno
sbb
pop
sbb
mov
sahf
nop
add
hlt
aaa
cmp
fcomi
cmp
repnz
jbe
push
in
mov
inc
jnp
dec
xlat
mov
insb
lods
imul
add
xchg
add
mov
mov
pop
jl
jb
sub
loopne
fstps
call
mov
or
inc
testb
cmp
cmpl
push
test
in
and
out
js
xchg
sub
pop
roll
pop
stc
add
dec
call
mov
stc
bound
aad
push
lock
lods
mov
pop
fdivs
inc
js
imul
push
push
jbe
ja
and
lret
sti
and
xchg
aad
mov
bound
jns
xchg
inc
mov
or
stc
iret
data16
pop
mov
roll
movsl
ljmp
fmull
icebp
cltd
inc
cmp
dec
and
dec
push
bound
sbb
popa
and
mov
push
mov
pop
push
cmpsb
pop
mov
and
cmc
adc
lret
mov
xchg
add
andb
outsl
mov
imul
pop
push
stos
adc
mov
mov
fistpll
or
rolb
mov
and
stos
inc
pop
sub
ds
xlat
sub
adc
pop
incb
fistpl
xchg
or
sub
cmp
jno
fcompl
imul
or
push
xchg
ret
sub
into
add
call
repnz
test
dec
loop
add
mov
subps
mov
inc
and
and
jecxz
cli
loope
or
sub
test
push
rcrl
outsb
jo
sub
sti
jge
mov
add
jo
push
imul
loop
out
movsl
inc
mov
in
adcb
jle
repz
adc
clc
ljmp
pop
jno
and
mov
or
sahf
pop
rcrl
jle
mov
jmp
pop
data16
sub
outsl
sub
and
frstor
imul
jge
pop
aad
popl
insl
repnz
shlb
add
aaa
mov
jns
jmp
mov
mov
adcl
sbb
ficoml
cmp
lea
cmp
or
shlb
inc
rcl
mov
jmp
inc
gs
inc
inc
movsb
dec
or
lcall
stc
pop
xchg
repnz
popl
sbb
xchg
inc
adc
je
repnz
mov
pusha
or
mov
jae
sbb
adc
outsl
shll
xchg
stc
stos
pop
dec
movsl
push
ds
repnz
pop
outsb
push
mov
sbb
mov
push
in
jno
jg
pushf
incl
jle
cmp
cmpsl
fldcw
lds
add
int
jae
xchg
icebp
adc
mov
and
and
pop
mov
fnstcw
mov
daa
sbb
int
loopne
in
sbb
xorb
test
xchg
pop
push
es
sbb
ret
xor
cld
jo
notl
incl
add
mov
pop
jl
mov
adc
mov
cmp
rcl
test
mov
jb
push
flds
xchg
out
aaa
mov
mov
mov
mov
and
add
and
enter
and
sbb
pop
fistpll
add
in
sbb
fidivs
sub
inc
add
and
or
mov
push
dec
jg
lods
out
aas
cmc
dec
push
adc
iret
sbb
in
sub
mov
mov
and
pop
icebp
orl
pop
cmp
xor
and
inc
clc
cmp
sbb
lahf
push
ficoml
and
dec
pop
jbe
nop
cld
aaa
aas
xchg
mov
enter
sub
pop
insb
ret
and
mov
popa
lahf
cs
roll
mov
cwtl
enter
je
xchg
aaa
add
mov
pushf
nop
or
cmc
addr16
push
int
inc
cltd
add
mov
out
and
add
jl
mov
cmpsl
dec
jg
stc
mov
aad
cmpsb
jecxz
or
add
sti
and
popa
movsb
incb
adc
popf
movsb
dec
and
aad
cmp
out
inc
add
into
mov
daa
lret
push
adc
inc
dec
jmp
das
lahf
hlt
mov
lret
mov
pop
mov
stos
cltd
setge
push
stos
mov
pop
retw
mov
cmp
pusha
insb
pop
and
fwait
mov
mov
fisttpl
push
popf
scas
stc
dec
pop
stc
jmp
xchg
sub
outsb
mov
scas
int
aam
adc
jecxz
clc
leave
xor
das
scas
loope
adc
cmp
mov
lret
in
cmpsb
dec
cld
and
xchg
cmp
call
in
sbb
popa
sbb
pop
push
out
rolb
pop
in
pop
jnp
ret
jne
bound
sub
fsubrl
arpl
sbb
inc
jnp
bound
jae
add
pushf
ret
ljmpw
or
daa
gs
push
lods
fisubs
mov
cltd
movhpd
outsl
or
mov
je
pop
scas
push
ss
push
icebp
dec
push
jae
filds
pop
xor
imul
sub
loop
leave
cmp
fimuls
dec
flds
and
sbb
outsl
jp
in
in
mov
sbb
sub
mov
es
mov
inc
fcmovne
cwtl
mov
xchg
mov
xchg
jl
mov
jne
xor
push
dec
jge
fisubrs
xchg
movsb
adc
jae
lods
cmp
and
mov
add
push
dec
cmp
lods
jp
and
mov
mov
sub
bound
out
es
jecxz
les
push
loope
jno
add
enter
rolb
je
stos
mov
sbb
cs
jno
in
adc
push
out
or
push
insl
dec
adc
push
pop
adc
test
inc
negb
pop
into
push
add
pop
fwait
push
gs
sti
xchg
fnstcw
ret
outsb
adc
pop
shll
fwait
jo
cmp
std
pop
or
aam
pop
fidivs
jecxz,pn
inc
xor
sub
sbb
cmpsb
rorb
and
mov
cs
add
mov
pop
loopne
jmp
and
push
cwtl
push
and
icebp
cmp
adc
push
fstl
xor
movsl
sti
das
dec
in
test
xor
cmp
movsb
sub
mov
sahf
arpl
loopne
mov
aam
add
mov
insl
data16
aaa
mov
push
aaa
jle
ja
sahf
jae
add
imul
mov
jns
dec
mov
pop
add
push
dec
int
jo
mov
jg
mov
push
lret
jae
lods
stos
push
pop
jmp
dec
imul
pusha
out
inc
add
mov
cmp
iret
mov
bound
push
leave
jbe
sbb
in
jmp
or
mov
jl
mul
enter
sahf
fisttpll
in
mov
out
nop
sar
movb
das
sti
xchg
test
ficoml
rclb
idiv
lods
sbbl
or
jl
dec
lods
xchg
sub
or
into
in
push
jae
fisubrl
mov
leave
dec
xchg
sbb
sub
int
pop
imul
cld
cmp
cmp
repz
orl
push
fs
sub
pop
or
xor
bound
jne
xchg
inc
inc
loope
mov
out
dec
sti
add
imul
push
push
mov
jl
add
das
push
nop
repnz
lcall
js
push
dec
adc
outsl
pop
and
lea
pop
jecxz
insl
test
sbb
sub
cmp
lret
out
imul
sti
mov
mov
jbe
inc
jnp
or
sbb
sub
cmp
lret
out
imul
sti
mov
mov
jbe
inc
jnp
or
pop
sub
cmp
iret
out
mul
call
mov
mov
jecxz
push
push
or
or
sub
mov
pop
inc
sti
mov
push
jns
imul
mov
jnp
xor
xor
inc
lret
je
je
test
xchg
sbb
aam
in
hlt
push
adc
adc
and
cmp
fs
sti
popf
or
cmp
dec
int3
pop
cld
imul
sbb
into
dec
aad
lea
xchg
mov
mov
inc
sti
imul
mov
push
out
lods
lock
lock
inc
push
scas
mov
or
faddl
mov
pop
aam
popa
jecxz
icebp
sbbl
inc
andb
jnp
push
cld
pop
push
push
xchg
outsl
mov
mov
sbb
mov
out
data16
test
nop
insl
cmp
pop
sbb
fwait
ja
adc
ds
sahf
je
aam
sbb
sub
push
ss
int3
mov
cmp
add
rorb
mov
andl
je
jecxz
dec
xor
add
rclb
loope
repnz
mov
inc
add
pop
mov
add
or
cmp
dec
les
imul
sbb
stos
sub
fstpt
je
call
push
jp
or
das
test
sti
js
push
clc
push
lret
inc
mov
sbb
lret
arpl
pop
test
aam
in
cmpsl
push
inc
out
jno
and
jne
inc
scas
aas
dec
adc
clc
dec
enter
mov
pop
in
hlt
jnp
mov
and
xor
inc
lret
push
sti
test
xchg
sbb
aam
in
hlt
jnp
mov
and
xor
inc
lret
push
sti
test
mov
cld
test
mov
out
xor
enter
mov
push
sbb
push
cmpl
cmp
or
subl
subb
sub
mov
test
push
pop
scas
jge
cli
mov
adc
mov
mov
xor
movsb
jecxz
mov
rolb
fldl
lret
or
enter
adc
mov
pop
push
adc
add
aaa
int
xchg
outsl
lock
std
pop
mov
push
loopne
cmp
sbb
scas
mov
test
mov
pop
rcll
fstpt
push
push
pop
mov
and
test
out
jbe
popf
shrl
jmp
adc
jae
std
lcall
inc
xchg
lea
push
push
mov
add
inc
dec
cwtl
adc
js
xchg
add
jns
lock
gs
mov
loope
clc
testl
xchg
lcall
movsl
sbb
jbe
and
rorl
pop
insl
repnz
cmp
sbb
mov
scas
xchg
fwait
aad
pop
and
test
lret
data16
int3
scas
lret
fstpl
pop
daa
je
outsb
pop
negb
cmp
mov
pop
in
push
cli
mov
sbb
cmp
mov
pop
dec
xchg
loop
lea
lret
dec
imul
mov
inc
lahf
gs
sub
xchg
and
repnz
pop
leave
fcoms
scas
mov
xchg
lods
cs
pushf
add
pushf
dec
hlt
dec
cld
dec
jne
sbb
add
jl
xchg
std
jno
clc
test
je
fisttpll
or
push
in
lock
imul
sar
js
add
push
fdivrs
aaa
out
call
inc
and
mov
sbb
filds
dec
and
lcall
test
xchg
mov
pop
cs
shlb
jo
push
icebp
mov
fdivrs
into
mov
cmp
data16
or
push
inc
dec
inc
mov
lcall
add
fsubl
sbb
adcl
mov
cli
pop
pop
imul
inc
pop
cltd
mov
or
cmpsl
dec
fwait
jbe
aaa
mov
or
aaa
out
icebp
jge
popf
xor
cld
mov
jmp
push
in
std
cmp
sahf
adc
push
cmp
jbe
push
iret
adc
sub
imul
imul
cmpsl
sbbb
ja
mov
push
jb
pop
ret
xchg
mov
add
add
mov
xchg
sbb
cmp
loopne,pn
cmp
add
notb
popf
pushf
movsb
cwtl
pmulhw
cli
or
xor
push
jecxz
sbb
pop
dec
cmovno
push
dec
popf
sub
and
add
sub
and
sahf
jge
adc
xchg
pop
dec
pop
mov
aas
push
stos
insb
jnp
mov
mov
sub
cmpsl
cvtps2pd
pop
mov
dec
lret
pop
in
stc
or
loopne
fnsave
enter
add
mov
shl
cwtl
pop
adc
sub
mov
lods
cmc
daa
cwtl
lcall
lea
push
inc
jne
mov
ret
dec
inc
cmp
fs
movsb
mov
aas
mov
js
shrb
sub
add
cmc
int
pop
mov
out
das
sarb
idivb
push
jne
mov
xor
xchg
in
test
and
jo
xchg
mov
cmp
mov
push
fdivl
out
scas
call
ret
ret
mov
lods
out
lock
adc
or
jne
sti
mov
dec
mov
lret
adc
std
sar
inc
pop
adc
bound
mov
andb
pop
jbe
fs
loop
add
mov
adc
or
cmp
xor
shl
push
cmp
sub
add
add
jp
ljmp
jns
hlt
mov
or
je
mov
test
jnp
rcrl
mov
dec
ss
mov
or
lret
aam
daa
jae
and
jmp
fdivl
mov
rclb
out
push
ret
rorb
jns
stos
mov
xor
imul
test
icebp
xor
in
dec
xor
jo
pop
test
xchg
sbb
jb
or
and
jp
rclb
lock
sbb
or
fstps
mov
mov
inc
adc
outsl
sub
mov
mov
icebp
in
arpl
aam
movb
pop
mov
pop
lahf
sub
adc
insl
xlat
cs
sarl
cmp
nop
pusha
movsl
push
sbb
mov
iret
or
sub
ljmp
inc
stos
cld
cmp
xchg
fadd
sbb
ret
dec
je
xor
adcl
mov
ds
dec
mov
fucomp
out
pop
add
ret
sub
mov
mov
insl
repz
stos
sub
sub
push
insl
jb
xchg
mov
pop
fisubl
xchg
cmp
jns
jnp
cmp
lahf
pop
add
lahf
dec
imul
int
jge
xchg
arpl
mov
add
fcmovnb
push
xlat
jbe
cs
call
fidivs
dec
adc
push
jb
xor
push
sbb
xlat
cli
das
fucom
lahf
cltd
fnstenv
movsb
and
and
add
adc
inc
out
add
inc
pop
popf
scas
icebp
test
push
inc
pop
ljmp
in
jae
int
mov
fidivrl
sub
xchg
mov
push
sbb
jne
nop
scas
call
int3
testb
cmpsl
pop
cmp
mov
sub
xor
lret
dec
dec
push
jecxz
xor
or
ja
lds
or
cmp
pop
roll
fstpl
sub
lcall
cmc
sti
push
ss
jb
sbb
add
addr16
das
xor
pop
add
cmp
lods
clc
rcr
jp
mov
jge
lods
repnz
add
mov
divl
push
daa
jae
call
mov
iret
lods
push
add
mov
jo
out
lods
mov
cmpsb
jne
cld
xchg
adc
or
call
imul
adc
lahf
adc
stc
jge
xchg
or
sub
mov
pop
lret
jmp
mov
hlt
test
out
lret
xor
mov
pop
adc
xor
xchg
mov
sbb
out
icebp
std
test
in
pop
xchg
and
icebp
sub
fisubrs
pop
ret
stos
xchg
loope
sub
mov
sbb
repz
mov
cltd
mov
cmp
dec
stc
push
adc
es
or
and
or
adc
enter
pop
dec
shll
es
loope
adc
jmp
clc
pop
adc
in
shrb
sarb
or
cmp
je
and
hlt
fiaddl
outsb
adc
pop
js
xor
inc
and
push
xlat
mov
adc
pop
sbb
push
jae
jns
add
push
mov
int3
sub
xchg
les
and
lcall
cmp
stos
sbb
push
mov
test
xchg
sub
push
aad
sarl
mov
xchg
sub
ljmp
mov
sub
adc
mov
cwtl
sbb
popf
jno
sub
xorl
loop
repz
insl
dec
divl
pop
repnz
into
jp
imul
adc
jbe
in
fsubp
ja
iret
xor
and
adc
xor
out
pop
mov
js
inc
inc
imul
loope
pop
rolb
faddl
mov
push
inc
xchg
or
mov
test
movsb
repnz
dec
imul
aaa
call
or
das
test
inc
test
xlat
sbb
sar
fwait
hlt
fwait
clc
movsb
nop
popf
pop
out
mov
cmp
push
hlt
add
push
arpl
icebp
sub
lock
mov
aaa
notrack
pop
xstore-rng
cmpsl
test
rorl
jae
xlat
idiv
mov
lcall
insl
andb
jle
push
cli
sub
test
xchg
mov
xchg
filds
jge
lods
mov
mov
js
ljmp
xor
call
lret
jno
push
cmpb
repz
and
out
jmp
add
jle
sarb
add
les
sti
ret
daa
adc
mov
enter
cmp
push
iret
jecxz
adc
mov
jecxz
movsl
shll
or
rcll
sbb
inc
pop
push
xchg
fwait
add
or
ljmp
and
cld
and
jp
add
mov
enter
icebp
jns
fwait
das
xor
mov
mov
in
cld
out
fimull
shlb
or
cmp
xor
jbe
ret
jl
dec
call
leave
jl
mov
mov
cmpsl
outsb
and
lods
and
add
push
popa
push
daa
mov
xlat
mov
inc
fcomps
or
rcl
xor
jne
test
mov
aam
pop
adc
lret
jmp
sub
mov
and
inc
xor
cmp
addr16
leave
sbb
aaa
mov
mov
dec
add
je
jo
js
call
pop
xchg
mov
push
and
cmpb
div
sti
loop
xchg
repnz
cmc
inc
out
pop
gs
call
mov
cmpsb
xchg
orl
test
ss
jne
insb
xor
mov
adc
jb
and
mov
push
nop
mov
or
fcomps
lcall
xor
in
mov
mov
mov
aas
loope
lret
cmp
fisubl
pop
movl
mov
adc
andb
sbbb
adc
ret
jge
or
cmp
mov
or
xchg
cmp
mov
push
push
and
repnz
out
mov
mov
rorl
sarb
fistl
jg
dec
sub
lret
adc
les
ss
vpaddsw
and
push
sub
and
cltd
mov
xchg
aad
push
mov
xchg
shll
mov
mov
and
cmpsl
idivl
jl
and
lret
rcll
dec
jge
cmpsl
sbb
and
repz
scas
popa
dec
outsb
scas
shlb
mov
lds
mov
mov
lret
mov
je
idivb
dec
jns
sarl
je
outsl
add
sbb
in
ret
mov
pop
pusha
dec
lret
decl
popa
sub
lock
push
movsl
cmp
inc
or
mov
hlt
push
repz
daa
mov
jnp
loope
mov
push
xchg
and
test
movsb
lcall
js
sub
mov
lret
and
mov
add
sbb
in
push
mov
cld
jmp
fmuls
popl
fsts
outsl
jno
mov
inc
repz
sbb
inc
repz
aaa
push
push
repnz
xchg
dec
push
lods
stos
hlt
jnp
call
test
mov
cmp
bound
cmpsb
adc
insl
out
or
mov
minps
lret
adc
or
sti
push
leave
dec
jne
pop
fwait
rcrb
add
enter
shrb
xor
dec
fbld
pop
cli
fs
cmc
pop
cwtl
mov
out
add
mov
insl
lods
cmp
cli
dec
es
mov
cmp
or
movsldup
fmulp
cmpsb
in
pop
push
jno
and
popa
ret
cld
pop
jle
ret
aas
xchg
cmp
fcoml
pop
cmc
xchg
pushf
mov
dec
je
addr16
add
loop
rcrb
xchg
cmp
into
int
mov
test
inc
or
retw
es
sbb
push
daa
ljmp
xor
lds
in
sbbl
into
dec
pop
shll
xor
push
insl
push
and
repz
lock
popf
jb
or
rcll
ljmp
ja
arpl
xor
xchg
jnp
adc
push
jo
dec
repnz
daa
inc
fcoml
sub
adc
xchg
daa
and
inc
pushf
cmpsl
int
testl
add
and
add
insl
sahf
mov
mov
mov
aas
pop
daa
lods
lods
repnz
ljmp
add
loopne
andb
xchg
leave
psubusb
sbb
rcll
ds
mov
sub
imul
lahf
xchg
aam
xlat
rcll
mov
gs
mov
add
gs
adc
jp
jno
mov
lcall
pop
lcall
cli
adc
adc
out
insl
js
mov
imul
aaa
and
jg
xor
jne
push
cmp
cs
shl
outsb
mov
je
jbe
xorb
stos
test
inc
lea
adc
mov
inc
mov
sub
les
sbb
ret
xor
jbe
xchg
aam
fistl
mov
xchg
xchg
sti
in
sub
mov
adc
fcoml
or
mov
mov
loop
iret
mov
in
jae
je
shll
xchg
jmp
shr
icebp
cli
dec
pop
aas
xchg
fs
mov
xchg
out
aam
popf
xor
jg
jp
xchg
arpl
and
aam
xlat
cs
add
in
repz
ror
dec
bound
jge
mov
nop
repnz
cli
or
push
mov
hlt
xchg
daa
out
adc
insb
scas
hlt
dec
and
dec
or
adc
cmp
inc
into
and
mov
fildll
push
sbb
jb
iret
xor
jmp
repnz
sub
adcb
fisubrs
add
and
je
clc
cmp
mov
pop
mov
aas
and
fnstsw
lea
xchg
ss
mov
loopne
push
sub
dec
in
xchg
gs
adc
or
lcall
mov
popf
cmp
out
dec
pushf
sbbl
mov
jns
arpl
imul
aaa
mov
dec
clc
arpl
lea
inc
pop
jle
call
or
fsubs
leave
xchg
jne
dec
in
bswap
xchg
mov
xor
lret
push
xchg
mov
es
out
pop
cs
dec
jl
ljmp
push
loope
mov
fdivl
inc
fucomip
xchg
scas
scas
pusha
lds
ss
jle
in
sbb
sub
les
movb
or
pusha
or
dec
lock
push
jae
je
pop
xchg
mov
getsec
lods
fsubp
pop
into
pop
jmp
pushf
sbbb
shl
inc
jecxz
mov
repnz
mov
popf
iret
inc
fiadds
ljmp
roll
imul
pop
mov
jmp
inc
cmpsb
scas
addr16
ljmp
int
sbb
scas
ret
into
dec
mov
jb
es
arpl
in
mov
icebp
decb
faddl
ds
hlt
jne
gs
cwtl
in
xchg
push
mov
dec
shll
rcll
sbb
bound
sti
rcrl
push
xor
orl
aad
mov
loopne
inc
lock
xchg
xchg
jb
ljmp
nop
addr16
jbe
cmp
cwtl
sbb
xchg
add
insl
pop
push
jg
ds
bound
and
jle
add
push
imul
xchg
test
push
test
xor
sub
lcall
and
ss
xchg
adc
lock
ret
jecxz,pn
int
or
add
mov
popa
jmp
pop
inc
sbb
jae
or
lahf
ret
aas
jg
cmpsl
push
loop
jecxz
enter
sti
jnp
mov
imul
int
jecxz
add
mov
nop
sub
and
sub
jmp
jl
cmpsb
icebp
sub
out
xor
fldt
push
scas
jmp
leave
ret
or
adc
aam
sub
bound
pop
mov
xor
dec
inc
jbe
push
fcoms
gs
outsl
nop
call
adc
jle
push
mov
aas
mov
push
ljmp
cmpsb
mov
or
push
xor
popf
push
and
and
bnd
cli
lahf
testb
jecxz
add
int3
and
jle
cs
test
xchg
sbb
cmpsb
dec
fs
cmp
fcoml
enter
test
leave
ss
out
jb
adc
mov
aam
push
sub
push
mov
repnz
icebp
int3
push
test
addr16
stos
ss
inc
jp
lds
je
in
push
out
cltd
mov
mov
lea
add
icebp
dec
jne
loopne
in
loope
lret
mov
mov
add
pushf
xchg
cmc
pop
lret
jnp
cwtl
cltd
dec
pushf
int3
adc
xchg
imul
addr16
lahf
cwtl
sahf
fstps
rcl
popf
mov
add
sbb
lcall
sub
mov
outsb
mov
xlat
push
sbb
clc
xchg
xor
xlat
pop
bound
sti
mov
xchg
in
jno
push
fists
jne
sub
imul
jo
xchg
mov
dec
sub
sub
inc
adc
std
fs
and
jecxz
mov
aaa
sahf
and
rolb
sub
mov
popf
mov
mov
hlt
sbb
and
mov
daa
movsl
and
pop
jg
cld
adc
jae
adc
pop
dec
repz
mov
scas
imul
je
shll
enter
fwait
repz
div
aam
mov
lahf
jbe
xor
jecxz
mov
jns
or
xor
lods
push
sbb
adc
iret
sub
mov
aam
push
jb
jp
xchg
mov
scas
xchg
daa
js
imul
push
jmp
or
repz
sub
jno
filds
rcrl
enter
xor
test
outsl
add
mov
and
mov
popa
sub
inc
mov
pushfw
cmc
leave
inc
and
cmpsb
lahf
shll
mov
pop
lret
loop
repz
nop
jo
mov
movsb
pusha
or
pushf
adc
cmp
cmp
push
push
lcall
push
jno
push
cs
adc
into
pushf
add
jnp
sbb
or
mov
out
inc
push
or
pop
jbe
sbb
push
movsb
jne
or
mov
dec
stc
ret
xor
lret
cmp
dec
xchg
rolb
xchg
mov
push
dec
outsl
ret
pop
bound
jl
int
scas
xchg
daa
cmp
mov
xchg
push
push
add
pop
sbb
xchg
test
pop
in
popa
sub
movsl
insb
and
out
test
es
je
outsb
inc
btc
fxch
imul
and
cmpsb
or
add
dec
sub
adc
or
add
xchg
nop
or
inc
shl
mov
aam
imul
jae
and
mov
pusha
data16
lds
aaa
mov
xchg
inc
bound
rcrb
mov
or
cmp
xchg
and
pushf
lret
cmp
pushf
xchg
loope
push
mov
dec
stc
fs
sub
xor
xor
push
push
mov
into
lods
xchg
xor
int
popf
dec
test
icebp
rcll
pop
xchg
dec
out
fnstenv
inc
pop
mov
lea
ret
xor
pop
stc
push
dec
sarl
es
push
adc
mov
outsb
dec
pop
xchg
andb
cmpb
mov
sub
sub
jg
addr16
rcrb
push
push
js
pop
adc
mov
mov
test
push
sarl
inc
cmpsl
cmp
shrl
and
test
mov
cmp
pop
dec
or
pop
adc
mov
or
out
mov
add
sti
dec
fstps
cmp
pop
test
stos
movsl
inc
out
mov
and
shrl
pop
rorb
mov
add
nop
cmp
push
arpl
jne
cmp
ficomps
pop
aam
pop
mov
jmp
cld
lock
pop
jb
push
jmp
imul
addr16
arpl
xchg
divb
sarl
xor
push
xor
jno
inc
pushf
stos
mov
jae
lods
sbb
dec
add
jecxz
xchg
shlb
shrb
popa
and
loope
cmp
mov
xlat
jle
cld
push
clc
add
and
repnz
clc
xchg
sub
xchg
bound
leave
gs
stc
dec
jl
sbb
daa
xchg
xor
mov
ficoml
jbe
pop
sbb
or
cwtl
push
cmpsl
int3
and
pusha
call
xlat
and
out
sbb
dec
aam
in
hlt
jnp
mov
and
xor
inc
lret
push
sti
test
xchg
sbb
aam
in
hlt
jnp
mov
and
xor
inc
lret
push
sti
test
xchg
sbb
aam
in
hlt
jnp
mov
and
xor
inc
lret
push
sti
test
xchg
sbb
dec
aam
imul
jmp
mov
fsubl
adc
add
dec
cmc
pop
lds
jnp
mov
jbe
inc
lahf
cmp
je
inc
call
mov
mov
lds
jnp
or
dec
gs
jne
inc
jmp
sti
in
xor
mov
lds
arpl
xor
clc
sub
pop
out
jo
jnp
mov
push
mov
fimull
adc
clc
popa
jae
adc
ret
jle
cltd
bound
sub
mov
jnp
push
and
xor
push
pop
cwtl
inc
mov
std
xor
pop
mov
xor
sbb
gs
and
inc
adcl
in
cmc
movsb
scas
xchg
aad
orb
or
pop
xchg
mov
mov
mov
push
xchg
sbb
adc
paddb
mov
push
and
push
lea
and
adc
inc
jbe
lret
clc
adc
sbb
icebp
addl
xor
jge
jne
mov
mov
lds
jnp
or
and
jne
inc
repnz
loop
xchg
xor
mov
lods
push
mov
jp
inc
xchg
pop
movsb
adc
inc
out
sub
cltd
les
andb
xor
or
push
std
pop
or
mov
push
stc
and
pop
fwait
imul
cmc
pop
stos
ud1
jmp
sub
fildl
push
sti
and
stos
adc
pop
lds
jnp
or
cmp
jne
inc
jmp
sti
and
stos
adc
dec
pop
in
cli
jns
xorb
adc
daa
inc
rep
lods
mov
out
jg
jne
adc
mov
xchg
addr16
jle
hlt
js
pushw
mov
inc
xchg
out
outsl
push
outsb
sti
aas
push
icebp
push
sub
cmp
fdivl
js
cmp
shrb
ss
fmul
sbb
aaa
popf
out
mov
cwtl
stc
lret
es
cs
insl
push
adc
out
or
mov
jg
dec
dec
fldenv
sub
cmpsb
jmp
xchg
out
andl
fdiv
stc
inc
pop
mov
aaa
push
pop
sti
lds
xchg
push
pop
rcll
inc
or
jp
mov
mov
pop
dec
imul
scas
popa
in
fildl
cmpsb
xchg
insb
fsubrs
and
flds
insl
jnp
jmp
ret
xchg
jo
or
push
jmp
inc
jb
add
xor
mov
ljmp
filds
or
cmpsl
xchg
ljmp
mov
xchg
jg
vsqrtpd
dec
pop
clc
lahf
repnz
sub
cld
ret
pop
mov
arpl
ljmp
add
xchg
in
cld
cmp
out
test
pop
inc
mov
lods
lock
test
jg
pop
dec
inc
ret
xchg
adc
loopne
test
test
sub
mov
fsub
imul
xor
js
mov
imul
int3
imul
sahf
push
mov
outsl
sbb
daa
mov
ret
out
sub
xchg
cmp
pop
cmp
pop
xchg
push
data16
loop
add
rcrl
lea
dec
xlat
or
jmp
arpl
sub
push
or
pshufw
in
lcall
jle
ret
pop
pop
mov
pop
arpl
inc
rcll
inc
mov
mov
das
sbb
pop
inc
inc
stos
test
xchg
inc
mov
int3
inc
mov
pop
adc
les
ljmp
sub
sub
mov
sbbb
jne
test
idivb
dec
shll
fdivrl
xchg
xchg
fisubrl
leave
push
not
sahf
out
lret
or
imulb
loop
xchg
pop
sarl
jg
js
sbb
jg
add
fwait
or
add
sbb
sbb
fimuls
xor
pop
xchg
mov
rorb
jno
push
jb
and
dec
inc
mov
fisubl
cmp
pop
std
in
in
popf
stos
dec
adc
lods
mov
popf
in
sub
mov
ss
jae
lock
sbbl
mov
cmp
sbb
jge
sti
push
jae
xor
std
sbb
add
inc
sbb
jbe
adc
int
int
data16
pop
adc
jmp
push
enter
mov
inc
pop
test
enter
mov
jno
add
test
iret
pop
jnp
sub
int3
das
test
dec
aad
adc
cmpsb
push
lret
sbb
fidivrs
jecxz
jg
int3
enter
sub
ds
ret
loopne
test
push
movsl
or
mov
imul
outsl
mov
ficomps
jge
dec
or
inc
clc
jg
mov
mov
mov
xor
push
or
insb
pushf
and
clc
xlat
mov
je
sbbb
leave
test
hlt
or
lods
imul
cmpsb
and
or
or
loop
cli
mov
int3
push
stos
in
dec
pop
jle
int
sub
mov
jp
sbb
addl
inc
orl
lock
stos
pop
dec
xchg
cmp
arpl
jp
test
dec
jo
packuswb
xor
add
add
outsl
pop
push
jl
out
push
shrb
jns
es
ja
mov
xor
les
sbb
nop
dec
add
movsb
adc
cmpsl
aaa
push
into
inc
fs
sub
icebp
mov
pop
int3
sti
inc
xor
sarl
hlt
mov
imul
pop
out
mov
inc
test
ljmp
adc
out
loopne
in
hlt
loope
shll
mov
xor
push
fnstsw
sbb
xchg
jb
fldenv
fnstenv
xchg
inc
xor
mov
inc
gs
sub
js
xchg
push
lods
xchg
dec
rorb
les
fwait
mov
loop
into
xchg
inc
add
rcrb
arpl
fisubrl
jge
adcb
inc
jo
push
fistps
call
and
in
mov
mov
ret
les
pop
xor
add
mov
xchg
and
es
jno
inc
xchg
adc
into
lcall
shlb
movsl
clc
mov
fistl
push
mov
std
fildl
lods
aad
popf
bound
cs
inc
push
add
and
add
push
fcomps
in
mov
testl
imul
dec
movsb
lahf
adc
jecxz
ss
das
fsubs
xchg
mov
call
sbb
sbb
mov
cmp
sarb
fsubl
sub
mov
add
push
mov
xchg
lret
mov
jae
xor
push
pop
je
movsb
xchg
mov
xchg
push
aam
xlat
les
frstor
mov
pop
mov
push
out
jmp
mov
mov
push
out
shlb
cmpsb
ret
lods
sbb
cmpsb
jno
jbe
clc
cmp
fs
xor
rcrl
push
sbb
das
hlt
scas
aaa
jb
daa
push
aas
dec
cli
test
insl
mov
push
mov
and
push
xchg
cwtl
mov
iret
pop
addr16
call
daa
xchg
push
cmc
lret
cmc
and
adc
cmp
in
dec
inc
pop
addl
pop
xchg
cmp
xchg
mov
xchg
adc
mov
jge
pop
out
jnp
sbb
adc
xchg
cmp
inc
mov
and
dec
dec
mov
int3
sub
lret
or
fwait
push
add
cmp
loope
adc
push
pop
notb
daa
scas
mov
mov
xrelease
jns
xchg
adc
clc
mov
and
rorl
cmp
nop
or
ds
test
push
and
xlat
in
adc
mov
xchg
fldcw
or
mov
frstor
xor
jae
jne
cmp
testl
ds
cli
dec
lock
push
dec
pop
jo
out
mov
lds
or
loopne
push
xchg
mov
and
push
xor
shlb
adc
xor
xor
inc
xor
or
movsb
pushf
xor
das
pop
cmp
fistl
push
je
or
mov
sti
iret
repnz
or
daa
lods
into
movsl
sub
push
adc
mov
jo
ret
cmpsb
sbb
rcr
insl
push
frndint
push
ljmp
push
sahf
pop
psubw
jbe
fwait
xchg
add
push
xor
cltd
cmpsl
aam
jno
cmpsb
shlb
popf
xor
mov
pop
jp
cltd
outsl
shr
repnz
pop
test
lock
rol
mov
and
cmp
daa
test
sub
movsb
and
sbb
push
sub
dec
dec
jne
or
orb
mov
xor
stc
xchg
cld
mov
mov
xchg
lds
mov
xchg
sbb
mov
jb
add
stos
in
lahf
pop
scas
cli
jne
mov
cmp
cmp
xchg
or
pop
mov
ds
mov
scas
lret
mov
or
adc
add
movsb
cmpsl
pop
jbe
cmpb
and
stos
and
das
mov
lret
sbb
adc
sub
testb
aam
rcr
sbb
mov
lds
push
test
lods
js
sbb
std
and
in
ss
leave
sbb
loop
cmpsb
pop
lahf
jl
adc
jne
data16
fcmovnbe
xchg
adc
mov
mov
adc
fidivl
pop
sub
rcl
in
pop
lret
andb
shll
xor
es
cwtl
stc
pop
xchg
das
das
pop
sbb
in
mov
dec
push
enter
adc
rolb
pop
jb
pop
fstpt
cmp
adcl
inc
dec
fwait
and
out
jmp
popa
or
outsl
xchg
sbb
jbe
aad
scas
insb
ljmp
jnp
xor
push
sti
not
add
pop
mov
mov
sarb
add
dec
and
add
lods
sbb
dec
dec
repz
mov
outsb
add
sub
xor
lret
cmp
xor
sub
jae
jno
sbb
addb
pushf
mov
jge
pop
adc
inc
sub
mov
cmpsl
push
xchg
stc
jmp
subl
adc
mov
or
imul
in
mov
mov
mov
xchg
sarl
sbb
jp
ja
xchg
lock
xchg
and
leave
lret
test
pop
test
dec
out
shll
outsb
lods
sub
aam
scas
lret
pop
rolb
pop
jno
dec
lds
inc
and
leave
fcompl
fcmovne
xchg
lds
sti
lds
jae
push
lock
addr16
cmpsl
and
mov
out
adcl
push
mov
daa
sub
adc
shrl
or
mov
das
daa
jns
repnz
xchg
subb
pushf
fdivl
dec
cld
pop
push
inc
sub
inc
mov
adc
mov
leave
ret
add
xchg
lahf
xor
jo
leave
sub
rorb
test
xchg
mov
lret
int
and
and
gs
sbb
cmc
fstps
enter
adc
jp
and
sbb
jmp
repnz
pop
jno
mov
lods
cmp
lods
push
mov
and
jle
add
jae
sub
adc
ja
add
pop
mov
cmp
push
mov
inc
jo
sbb
test
push
incb
mov
arpl
xchg
setp
jno
pop
cs
cmp
andl
mov
and
data16
repz
jb
loop
loopne
aaa
jg
pop
mov
test
call
lds
lahf
jg
ds
pusha
jmp
cmp
lret
popa
ret
sarl
daa
dec
mov
scas
adc
ja
lock
cmpsb
bound
cld
mov
arpl
inc
rcrl
inc
lahf
xchg
sbb
adc
jo
nop
outsl
or
mov
mov
push
pop
xchg
dec
sahf
pop
mov
dec
mov
xchg
movsb
stos
or
xchg
xor
push
test
push
lods
jmp
dec
in
push
mov
lock
jne
pop
cld
stc
sbb
add
test
jnp
addr16
das
push
sub
sbb
mov
xor
jno
and
xor
xlat
add
stos
rorb
push
orb
xchg
fldt
mov
xchg
mov
mov
fldcw
and
stos
mov
jg
inc
test
frstor
fdivl
pop
scas
mov
cs
sbb
inc
add
push
dec
jp
sbb
lea
aaa
or
jl
push
cmc
fwait
or
dec
push
mov
pop
adc
int
hlt
adc
xchg
repnz
repz
inc
cli
imul
jmp
mov
imul
mov
fidivrs
lahf
push
outsl
cmc
outsl
xor
daa
test
cmc
push
sub
jae
or
and
sub
cmp
movsb
iret
or
push
add
fdivl
inc
push
or
lods
ds
out
mov
aam
out
xlat
adc
jbe
std
cmp
icebp
xchg
sahf
xchg
jecxz
add
inc
push
xor
jae
sarl
rorl
fwait
jge
pop
clc
xchg
dec
repz
xchg
xor
add
pop
clc
aam
adc
lods
jge
or
inc
or
cmp
and
xor
or
mov
cmp
lcall
outsb
xor
inc
xchg
fsub
adc
adc
mov
mov
jne
cmpsl
mov
mov
lret
inc
int
jo
and
out
addb
out
fnstenv
lcall
mov
dec
lods
lods
pop
nop
rorb
in
mov
jge
and
mov
fadds
and
mov
movsl
test
js
stc
and
cmpsl
jo
push
sahf
push
mov
push
inc
inc
cmp
inc
out
mov
pop
mov
cltd
sub
test
mov
xor
movsb
int
inc
cmpsb
xchg
lock
add
loop
ja
jo
pusha
bound
and
bound
nop
out
mov
sarl
test
dec
rolb
nop
call
push
roll
mov
loope
mov
idivl
es
mov
or
icebp
mov
push
out
shll
xor
adc
mov
andl
xor
dec
ficoml
test
xchg
inc
lret
add
sub
inc
scas
pop
xor
shrb
push
push
imul
dec
into
movsl
jnp
repnz
aaa
pop
adc
cmp
int3
out
lods
hlt
mov
sti
cmp
gs
jp
push
lea
stos
pop
sbb
adc
je
dec
mov
jg
lret
mov
pop
out
push
mov
mov
or
add
js
pop
pop
inc
mov
pop
xor
mov
jl
insb
fwait
push
movsl
orb
movsl
bound
aad
mov
mov
lds
sub
xor
cltd
lea
cwtl
pop
stc
xor
sbb
test
cmpsb
aaa
mov
jmp
xchg
sub
loope
sub
push
jb
je
lahf
test
push
test
pop
mov
scas
jo
movsl
iret
and
add
jl
add
inc
pushf
xchg
iret
sub
and
in
hlt
outsl
mov
cmp
gs
mov
or
in
int3
sbb
bound
cmp
mov
mov
cmpsl
pop
aam
xchg
pop
lock
fnsave
pop
in
test
or
jle
test
fs
sbb
das
loopne
xor
aas
test
dec
add
cmp
pop
xchg
hlt
adc
mov
sbb
dec
loop
lret
mov
popf
test
mov
push
imul
roll
xchg
lods
dec
sbbl
push
das
imull
pop
mov
das
test
push
mov
lcall
mov
sti
adc
outsl
loop
jb
bswap
mov
mov
push
repnz
mov
inc
xchg
jnp
mov
repz
or
nop
mov
repnz
int3
pop
outsb
sbb
pop
xor
psubb
shll
pushf
lret
fstl
jge
outsb
or
add
pusha
or
inc
push
movsl
or
imul
imul
shll
inc
in
or
in
and
rcl
push
mov
mov
mov
inc
fwait
push
stos
test
cwtl
shl
lds
dec
jno
jns
push
jne
cmp
inc
xor
add
cmp
mov
jle
sbb
inc
mov
shlb
fstps
push
pop
push
ret
cli
cmp
fsubs
sbb
pop
push
ss
pop
lret
scas
sub
fsubrs
push
ljmp
jne
pushf
lds
mov
xchg
data16
in
stos
ret
inc
mov
cmp
push
loop
hlt
add
sub
jbe
mov
adc
mov
sbb
ret
hlt
jb
shr
lret
lods
mov
loope
push
mov
sbb
xchg
mov
mov
push
cmp
mulb
inc
pop
adc
loopne
jns
cmp
jp
into
pop
pop
pusha
and
in
fmul
lahf
in
shlb
xor
test
jne
fwait
inc
sarb
mov
enter
cmpsl
jle
pop
shl
jge
loope
sub
aad
rcrl
icebp
jge
in
je
sbb
push
jbe
loope
insb
cmp
dec
push
mov
roll
mov
and
in
into
xchg
cli
gs
jge
jbe
cmp
or
cmp
outsb
mov
aam
push
daa
cmp
mov
pop
out
dec
mov
repz
mov
mov
dec
jo
shll
mov
mov
dec
jle
dec
movsb
adc
xchg
adc
adc
pop
xor
stos
inc
mov
cmp
ret
jnp
in
adc
ja
je
xchg
mov
and
in
push
dec
lea
outsb
add
sahf
ljmp
jl
or
push
lea
mov
ds
xchg
jge
mov
push
pop
jg
icebp
xchg
repnz
mov
dec
sbbl
mov
pushf
arpl
xorb
dec
ljmp
cmp
les
cmpps
xor
gs
jo
adc
and
jb
push
test
movsb
xchg
add
mov
and
dec
lahf
aaa
fidivrs
mov
jmp
push
repnz
jecxz
lods
jnp
mov
es
sbb
fdivl
mov
inc
add
insl
fwait
add
mov
push
addb
push
int3
cmpsb
jle
mov
rorl
lds
imul
aaa
jbe
push
sti
sti
imul
in
ja
xchg
in
or
je
inc
cmp
mov
dec
scas
arpl
adcl
and
fisubs
fadd
dec
push
gs
aas
dec
or
inc
pop
cld
and
push
orb
orl
cmp
and
cmp
and
rorb
push
xor
lds
inc
xchg
jb
cwtl
mov
ljmp
push
stos
filds
call
add
into
movsl
push
sub
in
fdivrl
insl
xchg
or
aad
or
int3
inc
mov
lods
mov
popf
clc
jne
add
incb
arpl
mov
jns
sti
mov
sbb
sbb
push
leave
pop
push
insl
pop
scas
dec
adc
push
mov
push
loope
pop
xchg
pop
xchg
movsb
outsb
movsb
dec
dec
sahf
out
and
ret
ss
sar
clc
sub
mov
xor
mov
sahf
into
xlat
push
inc
movsl
mov
dec
and
cli
sbbl
cmp
mov
add
xchg
adc
cmpb
cmc
std
out
mov
cmpb
mov
pop
push
sbb
xchg
cmp
outsl
scas
mov
xchg
sarl
ljmp
pop
dec
clc
ljmp
pop
es
out
inc
dec
fldenv
lcall
mov
add
jno
mov
das
pop
push
andl
pop
jmp
into
inc
xchg
cmp
dec
sbb
int
loopne
stos
adc
dec
or
aam
inc
inc
je
test
adc
aaa
dec
out
scas
xchg
lahf
jmp
sbb
movsb
adc
jnp
xchg
push
adc
mov
lcall
lret
in
test
push
out
fs
add
xchg
add
ljmp
ja
dec
scas
xchg
lcall
inc
stc
imul
imul
cmc
into
fdiv
pop
xor
sub
xchg
mov
jns
inc
lret
rol
sub
and
cmc
bound
push
jo
sbb
add
inc
push
mov
call
insl
xor
mov
lcall
xchg
mov
out
mov
fcoml
cmp
adc
jae
pop
push
mov
push
es
push
pop
xchg
icebp
sbb
inc
sbb
adcb
gs
cmpsl
jo
scas
or
popf
mov
outsb
mov
inc
jb
outsl
std
mov
dec
movsb
idiv
andl
pusha
dec
jae
push
sbb
hlt
aad
mov
inc
ret
test
xlat
cld
stos
sahf
and
lcall
je
das
xlat
pop
hlt
mov
inc
sub
adc
or
pop
popf
jle
inc
subb
jbe
xchg
fwait
sbb
jo
add
jp
std
mov
outsb
icebp
les
add
sbb
sbb
jl
icebp
mov
cltd
lret
insb
or
in
push
and
cltd
dec
jno
iret
arpl
fstps
nop
sub
add
sbb
inc
cmp
in
out
pusha
outsb
ljmp
pop
sub
or
adc
cmp
rcrl
ss
testl
sub
sub
mov
xchg
jp
sub
subb
push
xchg
xor
call
dec
push
sub
jp
push
or
sub
add
fcoml
fisubs
fs
cmp
mov
imul
add
callw
xor
mov
adc
mov
xchg
pushf
loope
dec
in
jne
jle
add
mov
je
in
push
scas
insb
and
dec
adc
and
stos
jns
mov
shlb
mov
outsb
push
or
jmp
mov
rcr
xchg
hlt
ja
xchg
xchg
jp
sarb
xchg
fidivrl
lcall
aad
movsl
or
cmp
jne
inc
jmp
sti
and
stos
adc
pop
lds
jnp
or
cmp
jne
inc
jmp
sti
and
stos
adc
pop
inc
imul
and
sub
fildl
push
jmp
scas
adc
pop
lds
jnp
or
sti
gs
jne
out
jmp
mov
inc
in
aam
les
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
into
out
fidivrs
xchg
mov
dec
scas
pop
jo
jnp
pop
push
cs
or
sbb
jmp
sti
out
lret
fisttpl
mov
jnp
inc
jle
push
add
ds
dec
fidivrs
mov
mov
pop
push
sub
sub
js
pop
insl
jns
jg
scas
mov
mov
inc
or
test
mov
repz
aaa
hlt
jns
and
and
adc
sahf
xor
push
fs
roll
pop
ds
fs
outsl
push
xor
mov
fildl
inc
fs
shl
dec
imul
movsl
psubusb
fmul
jmp
sti
sub
mov
mov
fwait
mov
pop
pop
ds
mov
hlt
mov
popf
cmp
add
cwtl
mov
addr16
dec
push
sub
stos
cmc
stos
pop
inc
sahf
rcrl
xchg
repnz
add
mov
adc
lcall
adc
ljmp
jno
addr16
out
mov
sahf
mov
dec
imul
dec
jle
push
pop
push
aad
adc
sub
cmpsl
mov
sar
fdivrl
sub
or
insb
pop
push
dec
jg
jb
lods
stos
mov
jmp
aad
jmp
sti
test
or
push
adc
jle
stc
fs
inc
outsb
push
push
test
fwait
mov
out
mov
dec
imul
dec
jle
push
sub
cmp
or
sbb
jmp
sti
out
lret
fisttpl
mov
jnp
dec
jle
push
sub
cmp
or
sbb
jmp
lods
jae
xorl
std
and
add
adc
daa
int
adcb
int
push
dec
outsb
jmp
cmp
mov
test
call
xchg
cmpsb
mov
push
dec
out
jmp
pop
dec
aam
mov
dec
bound
ret
pop
enter
fstpt
and
inc
lret
test
movsl
mov
mov
dec
xchg
into
dec
inc
xor
je
sti
fcomps
cmc
add
mov
andb
mov
sub
lock
push
pop
sbb
inc
pop
pushf
into
out
lahf
iret
call
enter
mov
roll
mov
sbb
adc
xor
xchg
pop
sbb
xchg
iret
mov
stc
sub
sti
push
leave
leave
jmp
outsl
xchg
or
movups
pop
nop
xor
les
mov
add
into
sbb
fcmovnb
testl
sub
cwtl
xchg
mov
pushf
fidivrs
sub
sbb
add
sbb
mov
ja
les
out
call
out
movsl
iret
jo
out
mov
cld
mov
push
push
std
push
xchg
push
mov
das
or
sub
push
cltd
aaa
shl
adcb
rcrl
mov
pusha
mov
adc
mov
mov
inc
mov
or
mov
cmp
andl
out
addr16
xchg
mov
jl
mov
les
les
inc
fstl
mov
and
adc
test
mov
xorb
fidivrl
popf
or
loopne
cmpsl
push
push
xchg
xor
aad
cwtl
mov
mov
dec
in
xor
std
cli
pop
data16
and
mov
decb
pushf
pop
xchg
push
les
aaa
cmc
inc
mov
dec
outsb
out
jb
jno
clc
push
imull
imul
or
sbb
insb
xchg
aad
mov
subl
vpunpcklbw
pop
test
mov
lret
mov
outsl
ret
js
imul
sub
push
xor
xor
push
ss
mov
ret
push
mov
jo
mov
das
jne
ret
fwait
push
xor
xchg
mov
adc
xchg
les
mov
ret
mov
bound
divb
add
adc
xlat
mov
clc
stc
xor
cld
fmulp
cmp
js
jge
aaa
fnstenv
xchg
mov
gs
fsub
sbb
aas
fisubrs
inc
pop
dec
data16
xchg
test
fwait
pop
mov
inc
add
mov
cs
mov
mov
xor
dec
mov
out
lahf
adc
or
inc
or
sub
test
inc
mov
imul
aaa
into
lods
xor
nop
dec
jno
test
shlb
pop
insb
bnd
std
mov
ja
cmpsb
aaa
fucomp
test
cld
shll
push
out
notb
xorl
sbb
lcall
popf
ret
inc
jp
ljmp
inc
dec
cwtl
fiaddl
std
jmp
cld
sbb
sbb
rolb
pop
adc
and
jno
sbb
popf
ja
sbb
dec
push
dec
and
int
push
dec
cmp
mov
sbb
sub
or
fldcw
push
arpl
movsl
stos
and
dec
cmpsl
adc
xor
aas
popa
movntq
out
or
push
sbb
shll
cmp
dec
sbb
bound
rol
pusha
mov
sub
lods
cmp
and
imul
push
jae
bound
pop
arpl
movsl
mov
cmpsl
push
andb
fisubrl
cmp
lahf
dec
call
sbb
mov
pop
movsb
ss
pop
push
sub
xor
and
push
or
lods
xor
dec
nop
test
adc
jecxz
inc
push
push
jle
mov
xchg
cmc
mov
xchg
mov
ficompl
aam
inc
cmpsl
and
jae
les
xlat
xchg
jecxz
pop
adc
les
mov
mov
and
pinsrw
push
mov
cs
popf
push
and
cmp
mov
cmp
jnp
pusha
cmp
cwtl
xchg
lds
sub
into
aam
aad
ljmp
test
push
mov
nop
cltd
loope
add
jnp
mov
sub
shrl
dec
sti
dec
xchg
scas
int
das
ljmp
leave
dec
xlat
or
testl
mov
sbb
and
xor
out
mov
cmp
xchg
fs
jecxz
insl
ret
ljmp
push
ficomps
int
punpcklwd
test
fstl
pop
mov
sub
stos
pushf
out
in
cmp
add
stos
xchg
xlat
rcr
sahf
or
mov
insb
jo
lcall
jmp
int
mov
clc
pop
push
push
xchg
jmp
sub
andl
ficomps
add
jp
pop
pop
and
pop
push
or
fcompl
xorl
cwtl
aaa
mov
call
sbb
int3
aad
enter
dec
sub
inc
mov
hlt
or
stos
mov
mov
xor
add
hlt
cmp
andb
push
mov
out
add
aas
sbb
pop
idivl
mov
push
sbb
mov
fcom
push
or
rclb
or
and
mov
jne
repz
cmp
out
xchg
fdivl
int
push
pop
call
ljmp
cmc
test
mov
fnstenv
sbb
add
mov
jnp
shll
xor
imul
pop
int3
shll
scas
mov
mov
dec
fnstcw
sub
stos
push
mov
fiaddl
daa
les
repnz
push
adc
jle
pusha
inc
jmp
out
pop
movups
lret
jns
jecxz
ret
sarb
ss
push
test
jp
push
jmp
aas
xchg
cmpsl
jnp
je
imul
pop
hlt
lods
in
ficoml
xchg
repz
inc
sbb
loopne
mov
or
ss
call
xor
push
cmp
aad
test
dec
jno
pushf
loopne
jno
aaa
in
lods
sbb
incb
stos
and
test
fnstcw
and
in
push
icebp
dec
int3
movsl
mov
sub
test
stos
cmpl
or
dec
add
arpl
movsb
sbb
cmp
notb
sub
push
fcomi
mov
lods
jbe
push
in
xorb
jle
xor
iret
imul
mov
jae
mov
aam
sbb
lahf
xchg
pop
mov
jle
sbb
mov
push
dec
dec
adc
aas
mov
push
loop
mov
stos
movsb
ja
or
or
dec
or
sbb
xchg
mov
jno
add
and
and
movsb
pop
cmc
dec
and
xor
mov
incb
test
repnz
insb
pushf
adc
push
cmpsb
pop
push
movsb
popa
adc
in
bound
popf
mul
mov
int
cmp
test
pop
sub
inc
dec
inc
mov
cld
mov
or
ljmp
scas
xor
aas
mov
inc
lahf
std
mov
test
icebp
push
dec
sub
adc
sub
test
and
add
mov
inc
xor
arpl
popf
out
sub
es
inc
pop
cli
pop
enter
push
lods
mov
pop
pop
aaa
enter
push
imul
jns
mov
xchg
adc
xor
sti
mov
dec
lock
test
push
nop
mov
test
cs
push
dec
outsb
out
mov
dec
scas
xchg
mov
cmp
pop
cmc
in
jp
jp
push
jae
data16
push
test
inc
mov
movsb
scas
out
mov
push
repz
sahf
das
adc
lret
test
mov
test
mov
das
or
adc
xor
in
inc
loope
loop
mov
sbb
mov
and
clc
mov
xor
sbb
push
add
stos
pop
xor
sahf
in
repnz
int3
push
btc
aaa
test
loop
jbe
xor
mov
mov
fldt
call
test
pop
mov
cmpsb
nop
imulb
ds
data16
outsb
mov
pop
add
jo
call
mov
mov
jl
inc
popf
gs
and
mov
ljmp
arpl
xchg
add
test
push
lahf
daa
clc
sbb
sub
sbb
lcall
adc
out
mov
mov
or
aam
pop
fidivrs
mov
pop
lahf
lock
mov
mov
xchg
dec
push
mov
mov
add
fildl
or
cmp
and
jo
xor
sub
int
lret
ds
fcoms
lods
sbb
or
mov
and
xchg
rolb
xchg
add
adcl
add
mov
mov
or
ja
shrl
fnstsw
enter
mov
adc
mov
pop
icebp
mov
mov
mov
and
jp
js
fisubrl
mov
fstps
jl
or
cli
movsl
dec
aam
sub
or
loopne
fistps
leave
inc
imul
loop
xor
andl
sub
fstpl
movb
imul
cmp
mov
lret
ret
mov
jae
sbbl
testb
mov
stc
dec
push
in
pop
jl
mov
jp
sti
stos
mov
out
sub
scas
dec
test
in
mov
mov
xchg
jb
pusha
insl
orl
xchg
or
cmc
stos
popa
in
cltd
xchg
scas
mov
mov
nop
scas
pop
sbb
gs
or
mov
xor
xchg
xchg
lods
sti
pop
inc
inc
and
xor
mov
xchg
repz
mov
cmp
mov
mov
cltd
xor
out
mov
jecxz
mov
add
das
je
ret
js
clc
push
div
add
xor
hlt
add
out
pop
test
and
cmc
jnp
test
aaa
adc
out
pop
xor
fcoml
pop
xchg
jbe
ja
sti
and
out
add
dec
lock
test
jmp
mov
imul
movsl
push
cltd
ds
push
adc
into
pop
push
nop
jae
cmp
mov
sahf
loopne
insb
pop
sbb
pop
pop
lret
mov
arpl
or
out
adc
popa
in
sub
rolb
inc
je
dec
jo
pop
cmpsb
rol
cli
int
and
inc
scas
mov
push
jp
es
jle
dec
inc
xlat
stos
in
cmp
add
mov
jl
sbb
jnp
mov
mov
adc
leave
shlb
dec
outsl
pop
xorb
jmp
in
xlat
out
xchg
pop
pusha
fucom
test
mov
xor
mov
pop
stos
leave
shl
hlt
pop
dec
jg
daa
addb
mov
sbb
mov
jb
pop
xor
mov
ja
mov
dec
or
pop
or
mov
stc
adc
aaa
movsl
leave
hlt
jl
insl
in
xor
fwait
outsb
rcr
xchg
and
mov
dec
mov
inc
icebp
daa
mov
loope
mov
adc
imul
bound
push
and
in
subb
cld
testl
nop
inc
jge
cmp
out
std
test
or
cltd
or
xchg
cmp
ret
rorb
and
lods
pop
loop
adc
and
les
adc
out
and
out
pop
cmc
jg
cmp
imulb
add
cmpsb
scas
xchg
int
ficoml
add
cmp
outsl
mov
cmp
jle
mov
rorb
test
sub
mov
sub
and
movsb
loope
jg
je
icebp
xchg
adc
xchg
arpl
call
cs
cld
mov
imul
sub
int3
lds
cmpsl
popf
movl
pop
daa
rcl
xchg
stc
lods
xor
fisttps
paddsw
sub
jnp
mov
pop
cmpsl
mov
push
cmpsb
cwtl
xchg
xchg
cmc
adc
jmp
push
sub
icebp
or
push
or
sub
adcb
xchg
pop
rorb
jne
cmc
push
ljmp
add
or
pop
movsb
mov
ja
mov
pop
hlt
inc
aaa
enter
std
add
iret
jne
nop
cmp
cmpsl
adc
add
sub
pushf
jne
and
dec
jae
stos
add
dec
inc
push
jae
push
cwtl
add
pop
adc
sbb
mov
xor
adc
push
stos
xchg
lcall
sub
and
inc
repz
fbld
inc
xor
add
inc
loopne
xor
and
add
xchg
sub
mov
pop
scas
scas
repnz
cmp
cmpsl
jne
stos
mov
repz
mov
jo
cmp
gs
nop
rorl
stc
xchg
pop
adc
or
sub
inc
mov
push
mov
fs
pop
xlat
aaa
cmpsl
push
bound
inc
pushl
or
movsb
push
daa
fiaddl
pop
gs
negb
testb
mov
cmp
ljmp
sub
dec
cld
dec
or
movups
push
lock
ss
mov
mov
ljmp
pusha
add
lods
test
mov
les
fs
ds
adc
mov
movsb
push
mulb
subb
xor
sbb
lods
aas
cltd
mov
sub
dec
push
sahf
fistl
int
adc
mov
les
push
fs
cmc
mull
pop
rolb
pusha
add
mov
sbb
add
decl
test
mov
dec
mov
push
pop
in
push
cmp
xlat
dec
cmp
mov
mov
mov
mov
cli
loope
adc
mov
pop
jmp
cltd
xchg
inc
testb
mov
dec
lea
cmp
jg
adc
and
stos
in
popf
loop
lock
push
mov
aam
xor
pushf
mov
fs
xchg
push
add
fiadds
lods
cmp
and
push
pop
dec
cmp
sbb
repnz
dec
cmpsb
push
cmp
jecxz
loope
add
mov
sub
jmp
hlt
and
sbb
shlb
jne
int3
or
addr16
fwait
test
roll
add
xlat
xchg
fstp
mov
insl
popa
sahf
mov
pusha
and
sbb
adc
filds
or
dec
dec
mov
nop
xor
dec
jp
xor
aaa
push
inc
es
mov
xlat
jo
fs
clc
and
fs
in
xchg
mov
cld
inc
hlt
sub
rcrb
aas
imul
fs
jmp
xchg
mov
pop
f2xm1
and
mov
mov
rorl
sbb
adcb
mov
out
or
jmp
or
ret
add
ds
mov
xor
lods
pop
je
xchg
mov
push
in
jns
push
dec
das
or
sbb
xor
cltd
adcb
adc
je
test
cmp
pop
sbb
mov
cli
nop
pop
cmp
push
cmp
int3
inc
pop
insl
push
sub
icebp
mov
or
mov
insb
cmpsb
loop
mov
or
dec
mov
xchg
sahf
adc
pop
push
add
pop
ljmp
ds
mov
sahf
sub
mov
mov
lret
into
xchg
outsb
ret
inc
or
xor
add
sub
inc
daa
test
or
sub
mov
ljmp
push
jmp
pop
mov
cmp
arpl
mov
cmp
or
push
out
shll
sub
repz
cmpsl
sbb
popf
notb
jnp,pn
jmp
aam
push
mov
dec
cmc
inc
mov
cmp
xor
cld
scas
push
mov
into
pop
pop
repnz
mov
addr16
and
and
dec
cbtw
mov
add
or
mov
ja
shlb
inc
jb
and
pop
cmp
push
push
imul
loopne
mov
dec
fnstsw
dec
dec
add
fisubrl
mov
dec
rcl
xchg
and
js
mov
or
ds
adc
mov
sub
dec
dec
fsubl
lds
mov
call
aad
jae
popf
sahf
xchg
data16
stos
in
into
push
rcrb
sahf
rcll
popa
jns
aam
sub
cmp
iret
aam
cltd
jae
xor
cmp
mov
sbb
mov
mov
aaa
icebp
jbe
mov
cwtl
push
fs
aam
lret
mov
cmp
inc
jl
adc
fcmovb
icebp
jmp
xchg
insb
iret
xlat
ja
sbb
fnstsw
jg
shl
jne
sub
outsb
mov
inc
stc
and
jo
out
mov
inc
int
leave
dec
es
cmp
cmp
push
orb
xchg
dec
pop
in
leave
inc
jl
or
inc
iret
jmp
addr16
inc
xchg
stos
cmp
jge
mov
jmp
jp
arpl
cmc
in
std
pop
insl
cmp
popf
push
jno
add
pop
fiadds
push
arpl
decb
mov
test
cli
outsl
xchg
ja
push
mov
aad
mov
mov
cmpb
mov
cmp
sarb
ss
cmpsl
sbb
jbe
rcrl
push
push
jge
mov
test
jnp
loopne
push
cwtl
dec
data16
dec
cmp
in
add
dec
rolb
sbb
dec
xor
sub
and
ljmp
int3
add
lcall
rcrl
mov
lods
mov
rolb
decb
mov
sar
mov
push
test
scas
mov
cltd
fsubrl
jns
mov
pop
push
cmp
xchg
add
je
add
cmpsb
sub
popf
je
pusha
and
das
xchg
jmp
ja
pop
add
fisubrl
fwait
lods
lds
in
testl
enter
and
loop
dec
adc
pop
divb
sbb
cmc
push
xchg
dec
dec
inc
sub
mulb
mov
pushf
loope
xlat
aam
rclb
movl
mov
fucomip
jne
and
cmpsl
cmp
xchg
sub
test
xchg
or
cmpsb
sbb
ds
adc
data16
jecxz
lret
js
stos
out
loope
add
mov
push
fwait
int3
jbe
inc
mov
jbe
or
inc
cmc
add
fs
callw
sbb
pop
jo
mov
dec
scas
out
cmpsl
mov
xor
in
mov
pop
xchg
jns
sbb
push
adc
insl
push
lods
aad
popa
push
std
insb
push
jl
mov
xor
decb
mov
pop
add
cmc
out
push
mov
fisubl
fimull
push
adc
sub
leave
ret
pop
test
xor
pushf
lahf
mov
adc
mov
sub
mov
in
sbb
ds
mov
inc
stos
jp
fcomip
or
lods
cwtl
sahf
inc
test
in
inc
int3
mov
pushl
xor
cmp
lods
push
lods
lods
mov
repz
adc
addb
mov
cmp
adc
fbstp
mov
dec
add
dec
arpl
pop
insl
pop
push
push
jg
push
mov
scas
mov
ret
cld
mov
mov
pop
stc
jecxz
pop
imul
or
sahf
fsubrl
jmp
push
push
iret
cs
shll
dec
pop
shr
cmpsb
mov
inc
repnz
cltd
inc
loopne
cmp
push
roll
fprem
fwait
rorb
loop
pushf
mov
in
cmp
test
add
push
nop
shrb
push
sbb
sti
lods
cltd
ljmp
call
lock
mov
jns
insb
rol
xchg
jbe
enter
addr16
or
aaa
mov
lds
xlat
xor
add
lods
xor
sti
dec
adc
pop
xlat
mov
loopne
and
mov
in
pop
xor
adc
mov
mov
andl
je
lods
mov
std
and
dec
movl
jmp
dec
imul
fildll
loop
loopne
icebp
pop
sbb
jae
test
push
stc
movsb
mov
mov
and
adc
push
push
popf
ljmp
xchg
aad
xchg
sub
jo
cmc
cmc
inc
jo
jo
push
pop
mov
pop
pop
cld
stc
adc
xchg
adc
subl
pop
dec
es
dec
int3
mov
xorl
xchg
test
dec
push
push
xor
mov
in
sahf
cltd
mov
pop
cmp
fidivrs
fcomps
sub
mov
fisttpl
mov
jnp
dec
jle
push
sub
cmp
or
sbb
jmp
sti
out
lret
fisttpl
mov
jnp
dec
jle
push
sub
cmp
or
sbb
out
fdivp
out
sar
fisttps
mov
jg
dec
jg
push
das
push
cmp
add
dec
pmaxub
out
das
fwait
mov
ds
mov
mov
sub
push
xchg
inc
jae
arpl
ja
out
fcmovb
cmpsw
jae
daa
and
ja
inc
divl
daa
xchg
ja
pop
mov
cmpsl
lock
testl
pop
mov
xchg
xchg
push
insl
xlat
ja
and
xchg
out
clc
xchg
notl
cmpsl
inc
out
inc
iret
gs
flds
movsb
sub
jp
je
jle
xchg
push
imull
mov
mov
mov
jge
xor
lret
or
repnz
out
jp
sub
dec
sti
ja
pop
gs
repnz
fwait
xchg
pusha
inc
jmp
lcall
insl
adc
aas
xchg
xchg
lods
gs
mov
jp
push
mov
xchg
xchg
out
daa
addr16
filds
int3
xchg
fcoms
pop
xchg
inc
ret
mov
pop
hlt
pop
inc
or
divl
ja
xchg
aas
xchg
outsl
test
out
les
xchg
xchg
idiv
mov
pop
sbb
test
mov
scas
mov
xchg
daa
js
mov
and
push
divl
mov
lods
pop
xchg
mov
pop
out
scas
aas
mov
push
leave
xchg
add
mov
ret
arpl
push
adc
cmp
divb
out
testl
sarl
xor
pop
rorb
mov
xchg
add
inc
lret
ja
pop
int3
mov
lds
mov
jae
pop
xchg
xchg
daa
xlat
ja
inc
notl
daa
xchg
aaa
xchg
mov
cmpsl
out
testl
pop
mov
xchg
xchg
daa
xlat
ja
inc
notl
daa
xchg
aaa
xchg
mov
cmpsl
out
xor
sahf
aam
dec
mov
iret
insb
dec
pop
add
mov
cmc
xchg
outsl
push
sub
dec
shrl
clc
xchg
add
inc
pop
jae
fwait
rcll
xchg
mov
push
xchg
and
pop
or
sub
push
adc
and
std
loope
inc
jmp
and
mov
int3
dec
push
inc
leave
dec
pop
mov
xchg
insl
cmp
cltd
mov
mov
imul
getsec
aas
adc
cmpsb
nop
adcb
inc
iret
stos
and
in
stos
lock
std
jl
in
jecxz
vpsrld
test
and
stos
adc
bound
push
ffreep
ds
cmpb
fistl
daa
mov
movntq
sub
outsb
mov
out
in
mov
je
push
scas
jae
aas
fcoml
push
sahf
stos
push
js
dec
imul
dec
push
dec
add
orl
fidivs
ud0
push
fwait
ljmp
mov
inc
pop
popa
push
xor
or
or
mov
repz
shl
pop
fwait
pop
dec
pop
cmp
fimuls
arpl
push
inc
out
imul
mov
add
es
inc
fsin
je
faddl
xchg
fcmovne
push
cmp
xor
dec
xlat
mov
pop
repnz
cs
fistpll
fisubrs
ds
sub
push
sub
mov
xchg
aam
stos
sbb
or
jb
cld
int
aad
jecxz
push
mov
sub
push
cmp
aas
add
xlat
mov
push
jno
pop
push
adc
push
jle
inc
inc
xlat
mov
popa
jno
mov
repnz
adc
dec
out
not
or
add
jnp
inc
in
mov
sbb
mov
popa
mov
add
push
aas
sub
mov
pop
mov
xor
icebp
fs
cmp
jns
rcl
dec
pop
movsl
pop
fsubl
or
fsubrs
dec
ja
aaa
aad
mov
dec
std
mov
out
stos
mov
inc
dec
jmp
push
gs
and
and
in
mov
scas
sahf
sub
xlat
mov
jns
shll
inc
xchg
leave
mov
data16
into
fldcw
sbb
aam
sbb
in
rorb
imul
dec
mov
push
in
and
sbb
les
and
fidivrl
cmpsl
sbb
dec
push
or
adc
xchg
and
add
movsl
iret
loopne
loope
sarl
std
and
mov
sbb
roll
fistpl
sub
cmp
insb
dec
daa
inc
imul
pop
popf
xchg
out
mov
and
and
test
in
mov
sub
or
int
rol
jb
fwait
test
dec
cwtl
add
outsb
dec
cwtl
inc
and
sbb
lcall
fsubrs
cmc
pusha
bound
jb
out
mov
xchg
sub
icebp
leave
dec
xor
ret
mov
xorl
in
cmp
or
mov
sbb
or
sbb
xlat
cmpsl
cmp
call
pop
xor
sti
scas
je
imul
inc
cmp
popf
addl
pop
pop
fidivs
js
mov
sub
xchg
bound
ja
push
push
lret
xlat
jnp
sub
jl
or
mov
pushf
jbe
and
pop
mov
adc
rorb
jge
or
aam
push
adc
sub
add
pop
inc
std
add
mov
fists
add
pop
dec
ja
test
loop
jle
mov
sbb
ret
cmp
inc
add
gs
imul
movsl
fsubl
jne
ja
mov
repz
xor
pop
mov
nop
ja
shl
mov
mov
sbb
push
dec
or
xchg
pop
add
adc
cmp
fwait
test
push
adc
in
enter
cmp
jno
cmpsl
lahf
mov
sub
iret
mov
pop
sahf
inc
les
mov
and
idivl
scas
mov
daa
enter
sahf
mov
out
adc
sahf
ja
movsb
ljmp
jnp
or
cs
data16
in
jne
lret
jns
repnz
push
fmuls
mov
cmc
aam
sahf
lret
cld
jnp
push
fstps
icebp
jae
lcall
add
sbb
popa
pop
adc
mov
inc
mov
cmc
xchg
fdivl
mov
cmpsb
btc
rcrl
inc
jns
xchg
out
sti
cmp
outsb
and
dec
xchg
ljmp
adc
icebp
pop
adc
xor
imul
sub
daa
mov
addr16
cmpl
xchg
je
daa
das
sahf
adc
cmp
mov
mov
pop
xorl
inc
mov
cs
push
dec
lea
cs
mov
push
push
adc
pusha
jb
in
aam
mov
lea
sbb
out
push
add
in
insl
les
scas
fwait
sub
out
push
sarb
mov
fadds
aad
jge
inc
shrb
mov
mov
xor
lcall
cmpsb
jne
mov
out
cmpsb
pop
mov
jo
inc
cmp
orb
lock
mov
xor
jp
sub
out
popf
das
dec
insl
sub
adc
xor
mov
cmpsl
mov
jnp
and
scas
subl
lret
mov
stc
add
add
sub
pushf
pop
dec
mov
xchg
jge
cmpsl
jmp
or
pop
fldl
jnp
gs
xor
daa
decb
inc
into
xchg
loope
adc
loope
or
mov
sti
and
addr16
in
push
mov
scas
fwait
dec
in
lds
push
lds
mov
cmc
xor
das
out
inc
je
sbbb
and
rolb
repz
mov
insb
mov
cs
aas
daa
lret
push
xchg
enter
mov
inc
sub
jle
push
stc
sub
into
fwait
loope
add
mov
test
mov
fnstenv
xor
push
xchg
dec
mov
fcomps
in
xor
adc
scas
fstl
push
test
test
repz
jns
jle
add
scas
inc
ficoml
adc
jmp
or
and
outsl
and
call
stos
pop
scas
aam
hlt
xchg
icebp
pop
or
push
insb
xchg
andb
insl
pop
xchg
push
stc
das
sub
xor
mov
inc
ficoml
cmp
fsubl
adc
movsb
dec
sbb
test
nop
mov
sar
push
push
out
cltd
and
inc
mov
cmpsl
dec
mov
or
out
out
mov
xchg
mov
jle
scas
cmp
dec
mov
aas
xchg
rcll
push
mov
aam
popa
in
ljmp
int3
adc
xor
jno
inc
aad
jg
fimuls
mov
jb
xor
and
pop
inc
sbb
insl
ds
arpl
adc
fisubrs
fdivp
dec
pop
dec
les
fstl
cmpsl
jne
rcll
sbb
ja
push
lret
mov
jns
mov
add
stos
pop
inc
add
lret
or
dec
sbb
mov
movl
push
repz
sub
jmp
mov
hlt
jnp
push
mov
into
stc
push
add
and
test
xorl
jge
xchg
fs
jl
adc
ret
movl
aad
outsb
ret
icebp
cld
call
xlat
ljmp
stos
mov
adc
scas
push
xchg
mov
add
xor
or
je
push
push
test
pop
fst
adc
sub
xchg
sbb
sbb
pusha
mov
inc
pop
incl
scas
add
cmp
iret
jb
and
pop
or
adc
lods
test
iret
or
lods
mov
incb
sbb
or
je
push
xchg
and
packssdw
xchg
dec
sbb
sahf
xor
fnstenv
sub
cmp
inc
stc
aad
jp
sbb
cmpsl
loop
andb
inc
loop
lock
mov
shrl
or
pusha
and
movsb
test
sub
out
inc
pop
stos
aam
jo
xor
imul
push
leave
jnp
push
ret
insl
outsl
cs
and
xlat
lock
decl
aam
mov
shrl
adc
testl
lods
lea
cmp
sahf
clc
inc
or
data16
or
xlat
push
dec
mov
jle
popf
loop
cmp
adc
insb
mov
pusha
adc
inc
sbb
fcompl
pop
lds
adc
loop
cmp
dec
cmpsb
mov
jae
ja
push
inc
insb
je
jbe
cmp
popf
insl
fnstsw
imul
xor
inc
mov
in
push
mov
dec
or
xlat
xchg
arpl
mov
in
and
jb
mov
lods
call
xor
inc
in
das
push
jecxz
sbb
add
jne
push
pusha
inc
dec
dec
outsb
lods
stos
cmc
mov
rcrb
mov
cli
sub
xor
lds
mov
gs
sgdtl
mov
jno
jae
mov
mov
and
jg
mov
je
std
iret
or
test
pop
mov
insb
fimull
insl
repz
push
shrb
adc
mov
addr16
lea
mov
imul
stos
int3
add
dec
inc
repz
cli
popa
push
sub
clc
int3
call
pop
push
je
jo
push
addr16
cwtl
test
shr
arpl
int3
repz
add
jge
pop
mov
test
xor
mov
jb
jno
loopne
jmp
cmp
les
ret
stc
ds
ficoml
in
popf
push
aaa
loop
inc
stos
aaa
mov
sbb
ret
adc
sbb
popf
mov
jns
stc
sub
xor
rcr
fstl
stos
push
clc
in
jle
lret
loop
stos
pop
mov
out
jge
in
cmc
adc
cmp
jb
sbb
ds
test
mov
pop
inc
ret
fidivs
pop
nop
je
outsl
xchg
les
test
repz
mov
aad
mov
jecxz
pop
xor
jns
inc
inc
cmc
adc
or
mov
sbb
cltd
pusha
sbb
rcrl
andl
mov
jecxz
rol
cmp
cmc
mov
lea
out
ds
inc
adc
test
add
hlt
movsl
xor
ja
aaa
inc
jmp
dec
fidivrs
mov
movsb
mov
test
or
stos
push
add
cmp
pushf
ret
ret
jp
mov
adc
mov
xchg
dec
mov
lret
cli
pusha
adc
add
pop
sub
js
addr16
int
xchg
mov
xor
sti
jo
addr16
mov
adc
mov
and
mov
or
fsubs
sti
rolb
mov
hlt
and
jp
sub
and
xchg
jmp
xor
cmpsl
into
xchg
loop
aas
or
xor
and
or
add
xorl
and
jecxz
mov
out
lea
sbbl
or
xor
movsl
mov
ficoms
mov
sub
add
mov
xchg
aam
popa
mov
cli
leave
cmp
pop
push
adc
mov
cmp
bound
fadds
pop
mov
dec
push
jge
popa
fmull
and
std
push
mov
ficoml
insl
or
aaa
mov
xor
xchg
mov
dec
clc
js
out
and
testb
sub
adc
enter
xor
xchg
xor
addr16
mov
pop
or
repz
sub
data16
jle
jo
rorl
xor
jb
sahf
addb
rcrl
add
mov
fdivr
lret
push
inc
sti
sti
jl
push
mov
dec
icebp
and
out
xchg
idivb
sub
cmp
pandn
stos
out
push
mov
pop
notb
int
clc
fisubrl
push
stc
dec
push
push
insl
outsl
loopne
xlat
nop
insl
mov
incb
inc
rcl
jno
xor
faddl
subl
pop
add
scas
mov
fisubrs
dec
and
mov
test
in
std
gs
adc
lcall
adc
fwait
out
in
aas
push
xchg
shlb
cmc
mov
imul
add
ds
and
dec
xchg
ror
dec
lods
push
insl
lcall
mov
xchg
mov
xchg
out
mov
lret
sub
clc
dec
push
mov
cmp
dec
decl
lret
xchg
sub
push
push
imul
xchg
arpl
lret
pop
jmp
js
stos
dec
fcmovbe
push
dec
sbb
lods
xchg
nop
push
xchg
stos
mov
pop
bound
daa
sahf
add
xchg
inc
leave
sti
imull
jb
cwtl
mov
lret
lcall
mov
sbb
faddp
imul
and
xchg
in
mov
test
ja
cmp
xchg
dec
fnstenv
push
sbb
xor
int
shrb
mov
pop
or
mov
lahf
sbb
pop
dec
lahf
aaa
sbb
int3
outsb
jmp
push
jg
sub
lds
je
push
lock
mov
gs
and
out
insl
lea
mov
inc
or
mov
in
dec
xchg
insb
xlat
fistpl
push
mov
les
in
and
add
inc
push
pop
cltd
sub
mov
mov
fwait
hlt
loop
push
inc
scas
jns
dec
sbb
out
loop
jmp
iretw
mov
inc
in
shll
push
aas
outsb
aas
mov
gs
int3
xchg
lods
sub
pushf
int
mov
sti
aam
xor
xchg
popa
scas
mov
mov
incb
cmp
inc
mov
lock
ja
test
and
ficoml
mov
pop
cmpsb
cmp
je
icebp
jb
inc
dec
daa
pop
popa
and
xlat
stos
inc
or
lcall
cmp
inc
mov
aad
pop
sub
sti
mov
data16
sbb
adcl
mov
adc
int
mov
mov
cltd
lods
pop
cmp
cmp
sbbl
nop
xchg
fadds
popa
nop
imul
stos
adc
xor
out
push
loop
xchg
sbb
push
repz
inc
xchg
repz
xor
js
push
cltd
stos
rcrl
sbb
lds
push
iret
dec
or
stos
out
cltd
mov
test
push
mov
mov
sub
sub
xchg
test
pop
fldenv
jecxz
rcll
dec
jmp
leave
sub
lahf
and
jo
adc
inc
and
lret
jecxz
in
pop
mov
xor
jg
dec
push
mov
push
jmp
mov
adcb
pop
jbe
mov
sbb
cltd
cmp
mov
and
sub
loope
push
mov
push
scas
push
ss
inc
and
inc
je
add
in
push
sbb
lcall
fdivrs
imul
sub
xor
sub
sbb
mov
push
cwtl
mov
pushf
push
adc
hlt
sub
inc
cltd
inc
loope
dec
adc
cmpsl
add
pop
lock
or
cwtl
es
pop
dec
je
ds
and
lret
int
aas
inc
inc
lods
cmpsl
pop
sub
inc
xchg
fstl
scas
pop
or
xchg
adc
lods
sti
arpl
aaa
shrl
es
hlt
mov
in
pop
repnz
lret
adc
jp
sub
cmp
repnz
adc
ret
out
flds
stos
icebp
jno
mov
mov
ret
ret
jns
hlt
adc
inc
clc
sbb
ds
push
mov
iret
out
fucomip
fnstenv
vpaddb
pushf
daa
jge
sbb
add
add
inc
out
pop
filds
stos
outsl
jecxz
shr
iret
sahf
insb
mov
pop
cmp
jle
mov
fsub
cmc
mov
in
push
ljmp
push
sarb
mov
cltd
sbb
je
hlt
popa
dec
xorb
jge
scas
insb
push
add
enter
push
insb
loopne
shll
imulb
sub
pop
push
dec
adc
cmc
scas
mov
add
xchg
push
mov
inc
push
xchg
in
cmp
fnstenv
sub
cmc
stos
cmpsl
ds
loopne
xor
jl
add
into
in
adc
sub
gs
mov
cmpsl
pop
mov
mov
inc
xchg
sbb
cmp
ljmp
in
xor
xorb
fwait
mov
data16
jle
lret
push
stos
jns
cwtl
pop
xor
sbb
scas
xor
pop
mov
fbstp
sbb
jno
addb
out
adc
jg
sbb
stos
mov
xor
ds
ficoms
in
cmp
add
push
movsb
sti
lds
cmp
fbstp
test
adc
mov
pop
inc
xorl
mov
movsb
das
jecxz
push
in
mov
fwait
les
mov
fsubs
test
xchg
lret
jle
dec
adc
mov
xor
stos
mov
cmc
mov
or
mov
pop
andl
sbb
xchg
inc
mov
xlat
inc
rorb
notl
jmp
cli
mov
loope
idivb
insl
aam
pop
push
xor
push
dec
fnstsw
mov
ljmp
in
data16
inc
add
or
xor
sahf
add
or
inc
jmp
xchg
pop
sub
clc
enter
cmp
in
or
xor
adc
jecxz
cmp
enter
imul
cmc
call
fnstenv
sub
mov
mov
inc
pop
xor
cli
mov
pop
sub
pushf
cld
aas
inc
popa
mov
adc
lea
xchg
insb
add
xor
shrb
inc
rcll
pop
ss
pop
scas
jne
ja
ljmp
mov
fnstcw
std
fnstenv
lods
mov
push
and
cmp
inc
mov
rorl
xchg
pop
in
add
das
push
and
popa
mov
add
stc
lods
iret
jne
out
xor
xor
or
mov
pop
mov
cmc
xlat
pop
and
xchg
mov
push
mov
sbb
sub
ret
inc
mov
out
jecxz
adcl
lret
pop
sarl
stc
jne
dec
mov
std
or
sub
mov
add
inc
pop
movsb
call
add
sub
jne
sar
mov
pop
pop
xchg
sti
in
cmp
negl
btc
xor
push
cmc
pop
sbb
nop
dec
fdivr
cmp
push
dec
sar
pop
jnp
les
sub
sub
adc
cmp
test
push
imul
js
mov
add
and
neg
in
ljmp
xchg
inc
aam
adc
aad
stc
test
inc
mov
mov
arpl
xchg
jecxz
xor
lods
mov
addr16
and
das
jae
add
negb
sbb
adc
pop
cmpsl
loopne
into
or
sbb
adc
mov
jmp
adc
xchg
scas
cld
cmp
ss
aam
mov
jb
fwait
mov
xor
inc
es
out
push
xchg
insl
xor
jnp
sub
clc
jae
out
lcall
sub
fidivs
pusha
mull
dec
daa
call
mov
dec
lcall
jo
jp
push
mov
lret
mov
shlb
fdivs
push
lods
pop
xor
dec
jb
es
inc
mov
adc
idivl
ja
add
jmp
pop
pop
push
in
movb
insb
mov
outsb
rcrl
xlat
repnz
fs
lcall
push
arpl
movsl
je
in
push
addr16
dec
mov
in
xchg
cmp
push
push
mov
ljmp
cmp
aas
gs
shr
cwtl
loop
loop
pop
aad
xor
mov
stc
sub
loop
adc
out
pop
sbb
adc
inc
or
xchg
frstor
daa
mov
sbb
adc
rcrb
lods
jae
insb
ror
xchg
or
xchg
fists
fnstenv
dec
lcall
int3
jp
or
mov
aam
mov
test
outsb
cmp
arpl
or
sbb
clc
adc
out
inc
jp
inc
sti
or
test
mov
data16
aaa
lahf
out
cmp
inc
inc
out
push
dec
push
jp
adc
push
adc
mov
cs
lea
xor
mov
jae
repnz
stc
ret
lahf
lcall
cmp
cmp
orl
mov
outsb
addr16
and
jo
icebp
jg
negl
stos
jecxz
add
inc
inc
scas
mov
or
shlb
mov
inc
pop
sbb
cmpsl
pop
mov
xchg
xchg
daa
xlat
ja
inc
notl
daa
xchg
aaa
xchg
mov
cmpsl
out
testl
pop
mov
xchg
xchg
daa
xlat
ja
inc
notl
daa
xchg
aaa
xchg
mov
cmpsl
out
testl
cmpsl
pop
mov
xchg
xchg
daa
addr16
movl
xor
rcll
inc
icebp
ja
cmpsw
pop
mov
pop
mov
daa
cwtl
sub
nop
push
pop
mov
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
out
jge
or
push
pop
imul
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
movsb
add
add
dec
add
add
add
add
add
add
push
add
add
jl
mov
add
or
mov
add
add
testl
imul
add
add
add
add
add
add
add
add
add
into
add
add
add
add
add
pop
filds
sub
push
add
add
add
add
add
cmp
test
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
daa
add
pop
inc
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
sub
jbe
sbb
pop
add
xlat
add
add
add
add
jl
filds
test
add
sbb
add
or
mov
add
add
js
mov
test
add
add
add
add
add
add
add
add
jnp
jl
test
add
add
add
addb
pop
mov
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
pop
filds
in
and
mov
daa
add
fildl
aas
add
add
test
iret
add
xchg
add
add
add
add
add
add
add
add
add
add
pop
mov
add
add
jl
mov
sti
add
add
add
add
add
or
into
add
add
add
add
add
add
add
xor
pop
mov
add
lret
add
sub
add
cli
add
add
add
add
add
add
add
add
add
add
pop
je
pop
add
pop
cmp
add
add
add
add
add
add
xor
and
or
and
adc
add
pop
mov
add
add
add
add
add
add
add
add
add
mov
leave
add
add
add
add
add
add
lods
add
add
add
sbb
test
add
lods
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
mov
testb
pop
jg
mov
add
xchg
add
add
add
add
pop
filds
incb
jb
out
add
add
imul
xchg
add
add
add
add
add
add
add
testb
pop
jg
aam
jbe
movsl
add
add
add
pusha
add
add
add
insb
pop
std
aas
loopne
mov
bound
sub
mulb
sbb
sti
call
sahf
loope
xchg
inc
movl
cmpsb
inc
add
mov
sub
add
pop
jecxz
and
mov
call
mov
jns
xchg
jp
insl
xchg
push
cmc
mov
sub
add
dec
loopne
loop
iret
stc
xchg
mov
xchg
hlt
mov
jl
popf
movsl
push
mov
mov
add
mov
shrb
push
fistps
lods
cmp
mov
and
dec
add
je
dec
dec
add
adc
push
pop
cld
pusha
in
jmp
pop
adc
in
jg
lods
jle
mov
scas
sbb
and
pop
xchg
cmp
adc
mov
lea
mov
push
fnstenv
add
jbe
adc
pop
nop
cli
push
adc
scas
mov
mov
into
outsb
mov
or
sub
addr16
push
jno
sub
add
sub
xchg
cltd
sbb
cmc
mov
inc
hlt
and
popf
mov
mov
ljmp
jae
dec
andl
adc
pop
sbb
lret
inc
xor
addb
cmp
push
adc
in
push
fsubrl
loopne
ret
add
dec
sbb
lock
xor
or
out
jecxz
pushf
fcmovnu
insl
mov
ret
adc
pop
jnp
fs
das
jnp
inc
mov
je
mov
mov
sahf
cs
pop
daa
jge
fcmovnu
mov
insb
nop
inc
push
fnsave
xchg
ret
jg
push
or
xchg
popf
aaa
adc
mov
cmpb
aas
xor
push
inc
dec
sbb
lods
cmp
dec
inc
in
jmp
pop
test
mov
sbb
jae
mov
insb
lock
test
jmp
or
push
inc
jecxz
inc
rcl
icebp
js
xor
addr16
aad
and
sar
dec
inc
cmc
or
test
dec
xchg
shlb
xlat
sti
sbb
hlt
repnz
mov
pushf
popa
lock
fdivrs
orb
dec
or
cli
mov
in
add
enter
xor
cmp
repnz
push
mov
shrl
cwtl
inc
imulb
dec
fstl
test
mov
dec
adc
scas
dec
sahf
fwait
jg
mov
and
cmp
insb
mov
or
fs
fisttpll
lret
bound
movsb
cli
xchg
lock
inc
es
cmp
mov
jecxz
sbb
jb
imul
and
leave
jb
std
and
inc
jl
jmp
mov
and
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
