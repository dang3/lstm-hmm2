call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lcall
pop
outsb
movsw
fimull
imul
cmp
pop
pop
sub
push
push
lcall
fcmovnu
stos
lret
mov
out
or
pop
cmp
pop
pop
inc
jp
jp
push
cmpl
mov
xchg
rolb
add
sub
and
sbb
jmp
xchg
mov
pushf
lret
xchg
sub
shll
dec
mov
dec
pop
inc
sbb
ljmp
lret
lret
jg
lahf
dec
and
and
dec
or
pop
clc
jp
xchg
xchg
gs
sbb
dec
xorl
adc
cmc
incb
cmpsl
pop
or
or
fisttpl
roll
xchg
or
movd
cmpsl
movsl
sub
icebp
jecxz
dec
lret
adc
cwtl
dec
pop
and
sbbl
sbb
int3
imul
ficompl
js
cmp
sub
std
ficoml
and
lret
loop
in
xchg
inc
mov
inc
pop
sub
les
push
push
jmp
or
stos
fidivrl
add
adc
inc
pop
push
ret
pusha
or
idivb
fdivp
test
loop
sbb
dec
xor
das
dec
or
jp
scas
jmp
aad
mov
lret
in
negl
outsl
sub
pop
jnp
ja
push
jo
mov
ret
iret
lret
mov
fwait
sbb
jnp
dec
sub
sub
jp
push
lcall
fcmovnu
stos
lret
mov
fwait
sbb
jnp
dec
sub
sub
jp
push
lcall
divl
aad
sarb
stos
dec
adc
sub
push
sub
lahf
add
dec
ficoml
push
stc
inc
imul
loope
ss
pop
stos
add
fists
pop
xchg
cmp
pusha
fadds
add
pop
test
add
repnz
pop
adc
add
add
jbe
es
cmp
rcrl
sbb
iret
dec
cmc
dec
ret
test
inc
cld
frstor
push
push
or
pusha
cwtl
inc
adc
inc
out
aaa
adc
inc
inc
and
clc
sub
insb
sub
roll
cmp
cmp
and
pop
out
push
and
mov
lds
adc
inc
es
xchg
pop
push
mov
inc
push
mov
imul
gs
add
inc
add
pop
pop
xor
incl
jle
test
inc
mov
in
test
daa
test
lahf
cli
imul
or
dec
imul
push
pop
sbb
cmc
in
ja
fidivl
xchg
adc
enter
out
xchg
xchg
jl
dec
pop
roll
jle
stos
xchg
cmp
outsl
repz
xchg
jno
xchg
movsl
bound
or
in
les
and
cmp
push
aas
dec
std
outsl
cmpsl
jg
in
lret
xor
test
outsl
fnstcw
mov
cmp
into
xor
add
test
ja
fcoms
movb
clc
sbb
cmpsb
inc
les
mov
sbb
scas
movsl
pop
rcrl
cmp
nop
cmp
cli
stc
in
fwait
hlt
mov
int
push
mov
call
sarb
dec
jne
and
call
movlhps
data16
faddl
fwait
pop
jmp
jmp
sarb
inc
and
lock
incb
sub
mov
dec
inc
xchg
imul
xchg
push
ret
xor
loope
fnstsw
dec
or
inc
and
hlt
xor
scas
mov
pop
int
scas
cli
pusha
ljmp
cmp
fcomps
das
push
add
jge
sbb
inc
fs
js
jg
pop
inc
xchg
inc
cmpsl
xor
out
out
aad
sbb
incl
inc
imul
stc
mov
imul
test
jecxz
cld
into
mov
sub
aam
fildll
xchg
dec
sub
sbb
fs
sbb
xchg
bound
cltd
mov
pop
pop
cmp
add
mov
popf
in
or
testb
mov
aad
mov
xlat
movsb
dec
arpl
xchg
ja
jge
pop
inc
inc
adc
sub
ret
xlat
and
lret
ret
fistpll
arpl
inc
into
insb
sbb
push
push
lahf
insb
add
cmpsl
jp
lds
out
test
dec
in
cmc
stos
dec
pop
cmpsb
sbb
pop
imul
daa
les
sbb
mov
xorl
push
int3
adc
mov
or
adc
stc
mov
jno
out
test
sub
lds
icebp
jns
cld
mov
enter
in
and
jbe
xchg
mov
imul
add
mov
xchg
ret
inc
insb
jmp
xlat
movsb
call
dec
arpl
js
pop
xchg
std
or
repz
vaddps
gs
js
pushf
fisubl
sbb
mov
sbb
sahf
cmpb
jle
and
add
fwait
pop
sub
sti
jns
cmp
hlt
inc
jmp
sbb
or
cmp
sti
popf
rcll
dec
out
shr
adc
sbb
rolb
xchg
and
xchg
in
pop
clc
push
imul
sub
or
mov
out
pop
mov
sub
js
cmpsb
addr16
or
xchg
jnp
dec
xor
push
or
xchg
aas
cltd
xor
das
inc
outsb
fdivs
push
out
lahf
adc
xor
dec
andl
loop
cmp
add
out
or
fnop
pop
ret
mov
jo
add
mov
and
add
lods
mov
mov
mov
push
cmp
sub
xor
add
cmpl
out
mov
ret
into
ds
sbb
loope
pop
cli
popa
sahf
add
cltd
add
test
fisubrl
xor
pop
cmp
xchg
inc
xchg
push
pop
xchg
dec
cmp
data16
pop
inc
xlat
mov
insb
mov
das
stos
out
test
xchg
or
rcl
out
sbbb
stos
pushw
mov
das
pop
ljmp
rorb
and
leave
mov
push
push
sub
push
jp
and
fmuls
sbb
iret
dec
or
add
in
xor
std
cmp
mov
insl
fidivl
push
pop
ja
xchg
out
cld
icebp
les
mov
cmp
outsl
shr
jl
or
testb
push
and
cmp
in
fildll
clc
cmpl
or
xor
or
or
mov
cmp
xor
lret
xchg
test
inc
sti
shlb
jp
in
int
dec
bound
sbb
push
inc
pop
mov
push
and
jecxz
dec
call
add
pop
pop
and
js
add
mov
arpl
shlb
fiadds
mov
mov
and
or
mov
sbb
mov
mov
cmpsb
jecxz
rcrl
loop
fiadds
icebp
stos
popf
imul
lea
push
lret
mov
outsl
je
jnp
cs
xchg
out
xor
int
daa
mov
xchg
push
push
mov
icebp
adc
pop
jb
sbb
cli
stc
lock
enter
test
mov
pop
js
cmc
or
pop
repnz
call
bound
cmp
out
mov
inc
stc
js
cli
outsl
jle
mov
inc
outsb
push
shlb
inc
dec
loop,pt
cmp
add
or
inc
push
out
cmpsb
aad
pop
movsl
dec
subb
into
loopne
fidivrs
cmp
push
xchg
jns
rcl
and
push
push
and
xchg
cmp
sbb
sub
pop
bound
jl
sub
mov
adc
cmc
jg
pop
andl
add
xlat
mov
test
jge
sub
dec
and
push
stos
xchg
pop
stc
mov
mov
cmp
lret
or
cmp
shrl
jae
adc
pop
arpl
loopne
jg
dec
pop
mov
xchg
xor
push
xchg
popf
dec
rcrl
xor
mov
loopne
xor
mov
dec
imulb
mov
testl
test
pop
mov
jae
push
pop
sub
popf
sahf
rcrb
inc
popa
es
push
lgs
push
jae
adc
nop
ret
lcall
out
dec
push
ljmp
fidivl
pop
cmpsb
mov
imull
movsb
push
cmpsl
ret
frstor
add
scas
imul
lahf
stos
fisubs
cltd
incl
mov
pop
add
xor
cmp
or
ret
cmpsl
dec
arpl
adc
std
jmp
sahf
add
jmp
lcall
insb
cltd
jbe
pushf
pusha
adc
dec
and
repz
sbb
sahf
mov
aam
xchg
stos
scas
mov
cmc
sub
cmc
lods
fcoms
repz
mov
mov
insb
jno
aas
push
and
push
cwtl
gs
xor
sub
inc
aaa
stos
push
stos
or
shll
push
adc
leave
int
movsb
sahf
xchg
inc
mov
lcall
cmpsl
sub
mov
inc
lock
ret
pushf
jmp
xlat
pop
fcoml
xor
stc
mov
pushl
rorb
out
fnstenv
pop
cmp
xchg
movsb
lcall
hlt
inc
shrb
data16
mov
ss
xchg
pop
lret
ret
in
imul
xor
xor
push
pop
dec
data16
aam
mov
and
jo
or
fwait
scas
aam
dec
rcrb
std
loop
sbb
in
pop
xchg
pop
mov
fsubrl
xchg
cltd
icebp
mov
ljmp
pop
lods
xchg
sbb
pop
push
int
jge
mov
jge
xor
inc
test
pop
lods
dec
popa
mov
push
mov
xchg
outsl
cmpsl
jne
sbb
cmp
ljmp
stos
add
lret
xor
xor
pushf
lcall
or
stos
icebp
ss
mov
fimuls
xor
fs
cmp
cmp
repz
pushf
or
popa
inc
xchg
jl
ja
dec
push
xlat
sub
fdivrs
push
cmp
loope
outsb
arpl
pop
movsl
rorl
cmp
and
js
dec
sub
push
dec
loope
arpl
push
leave
or
mov
dec
int3
mov
clc
andl
pop
dec
jno
cld
icebp
movsl
mov
add
repz
jo
lods
push
loope
stos
sarb
movsl
pushf
cmpsb
out
data16
scas
mov
push
shll
xchg
inc
rol
xor
pop
popf
outsl
lods
push
aas
pop
call
fsubrl
mov
imul
push
add
and
sub
and
adc
fldenv
xchg
cmp
sub
cmp
mov
xor
inc
imul
jg
push
xchg
sbb
cmpsb
or
lret
sub
movsb
push
dec
fs
pushf
add
fucomi
stos
add
xor
shlb
add
lock
adc
mov
ror
pusha
or
sub
repnz
rolb
add
sti
loop
inc
das
popa
sbb
divb
jae
cmp
enter
lds
mov
ret
sbb
adc
jns
test
push
inc
in
sub
mov
stc
pop
outsb
movsb
je
cmp
int3
loop
pop
jo
jl
lahf
mov
imul
dec
push
inc
inc
fs
cmpsb
or
mulb
fimull
sub
cltd
dec
sub
and
xor
push
mov
sub
dec
inc
mov
loop
nop
push
pop
js
jae
xchg
adc
adc
popf
std
mov
andb
cli
mov
pusha
jecxz
out
roll
fidivrl
fneni(8087
outsl
es
jno
xchg
test
cli
push
outsb
fsubr
stc
shrl
pop
jecxz
inc
pop
dec
jne
xrelease
dec
jmp
pop
or
cmc
mov
fwait
imulb
inc
sbb
inc
in
jg
and
shll
mov
xor
dec
jns
stos
cld
leave
pop
scas
cmpb
cmc
data16
sbb
lcall
mov
inc
ret
push
add
xlat
or
mov
test
inc
aam
xchg
iret
rcr
xor
cvtps2pi
or
sbb
dec
sub
sub
arpl
lods
jle
jl
leave
mov
adc
xlat
std
in
jnp
pop
scas
ret
fisttpl
inc
movl
shrb
mov
mov
mov
or
lds
xchg
inc
xor
push
nop
sub
lret
out
xor
addl
les
dec
xchg
mov
jns
mov
add
stos
sahf
jle
popa
or
sbbb
iret
and
std
cs
push
and
cmpsl
jno
add
xor
popf
shll
add
test
fisubrs
aad
cmp
sub
insl
sbb
imul
push
ficompl
enter
or
outsb
test
xor
rclb
ljmp
call
mov
into
sbb
sub
pop
ja
ja
cmp
iret
push
or
xor
or
js
mov
adc
loope
mov
sbb
test
das
pop
cmp
lods
rclb
adc
test
loop
pop
fcos
fcomps
add
in
enter
lock
je
push
sub
push
xlat
adc
mov
push
sbb
shll
rclb
cmpsb
inc
jl
jo
ret
push
dec
mov
aas
repnz
jno
in
int3
popl
or
sahf
mov
adc
enter
leave
push
inc
iret
out
xchg
mov
pop
out
loope
call
outsl
outsl
fdivrl
outsl
xchg
sub
cmp
inc
insl
cmp
movsb
sbb
mov
cmp
pop
and
sbb
push
sub
xorb
cmc
out
lret
out
mov
inc
push
inc
jle
or
lds
sbb
pop
int
pop
lea
add
push
mov
and
ret
dec
rorl
or
mov
in
or
sbb
push
mov
sub
mov
int3
sahf
stc
fdivl
lret
push
sub
and
out
into
test
outsb
iret
outsl
jmp
sbb
cli
mov
stos
push
cld
cwtl
cld
cmp
cmp
and
inc
add
nop
or
xchg
sub
ret
and
jmp
push
pop
cmp
push
push
and
push
lock
les
push
out
call
icebp
cmpsl
xlat
daa
mov
lcall
xor
pop
loopne
jae
jg
mov
jnp
add
pop
push
rorb
aas
cmc
cltd
jge
inc
into
sbb
daa
stos
in
rorb
xor
insb
cmp
jmp
pop
push
imul
sbb
aam
inc
mov
iret
outsl
rolb
insb
and
arpl
jge
stc
rcl
roll
ret
popa
sbb
pop
mov
leave
mov
jle
xor
fbld
mov
cmp
jmp
mov
add
sub
push
pop
arpl
enter
mov
ss
inc
mov
inc
test
cmp
dec
fwait
cmp
mov
jle
cmp
jb
pop
out
adc
mov
mov
cmpsb
jnp
imul
inc
shl
divb
mov
bound
mov
das
in
mov
add
push
mov
push
mov
lds
test
lds
jp
jne
mov
js
pusha
xchg
pop
nop
cmp
adc
stos
jl
repz
and
out
dec
fldenv
out
dec
xchg
mov
cmpsl
sbb
push
clc
lods
fisttps
inc
pop
add
xor
cs
xchg
mov
in
pop
fldl
dec
xor
jo
push
push
add
add
pop
loope
xchg
fsubs
into
mov
pop
cltd
pop
adc
pop
ja
push
rorl
daa
clc
xchg
mov
pop
or
mov
add
out
ret
movb
test
mov
jo
add
aad
fsubs
adc
sub
out
jo
push
and
push
mov
xchg
scas
mov
lret
push
mov
imul
stos
fs
xchg
mov
pop
or
mov
sbb
stos
imul
scas
and
mov
push
mov
xchg
mov
mov
xor
cmp
cmpsb
scas
mov
pusha
cmc
xchg
pop
mulb
repnz
clc
aad
pop
push
outsl
mov
out
pop
and
mov
pop
or
cmp
push
sub
inc
mov
mov
hlt
sub
add
mov
popa
push
andl
enter
pop
shll
imul
lcall
add
add
pop
scas
pop
test
mov
fdivrs
sbbb
loope
mov
xchg
outsb
aas
xchg
fwait
cmpsl
insl
sbb
pop
test
cmpsl
scas
shll
neg
add
xchg
sub
stos
pop
popa
xor
jb
ror
addr16
in
outsb
xor
xchg
and
and
clc
enter
adc
and
mov
mov
lds
sbb
movsb
dec
jge
add
daa
mov
scas
sbbl
pop
filds
pop
mov
sti
scas
dec
out
xlat
repnz
test
fstpt
daa
mov
push
daa
call
push
jl
xor
das
imul
imul
jae
xor
std
or
in
mov
cs
je
or
jo
jne
mov
imul
nop
sahf
or
arpl
adc
sub
outsl
pop
cmpsl
sub
sub
adc
cmp
jp
push
mov
mov
jns
data16
xchg
xchg
and
aad
sub
push
ja
imul
jmp
in
jg
pop
xor
and
jl
pop
mov
pop
jmp
xor
adc
fsubp
fwait
not
aam
inc
sbb
cmpsl
xchg
sbb
xchg
xchg
cltd
jp
mov
movsl
sbb
mov
aad
xor
jno
pusha
xchg
mov
or
test
add
dec
add
dec
cmp
divb
cmp
jmp
jo
pushf
adc
pusha
sbb
jno
xchg
jnp
sub
inc
mov
sub
jno
es
stc
addb
sbb
push
mov
stc
sub
adc
call
rcll
dec
dec
rorl
adc
in
xor
mov
adcb
das
inc
ficoml
nop
mov
cmpsb
xchg
pop
push
dec
mov
jbe
jns
jecxz
jg
xchg
rorl
add
xor
outsl
pop
dec
or
add
ljmp
and
pop
mov
aad
insb
test
pop
imul
push
jbe
sub
mov
dec
ds
inc
cmpsb
fs
outsb
outsl
sbb
repz
mov
out
pop
push
mov
pusha
clc
xchg
xor
cmp
das
push
xor
mov
inc
nop
or
mov
cld
adc
rcrl
nop
xlat
pop
jecxz
out
inc
mov
jle
and
push
bound
clc
mov
add
add
ss
cmp
or
sbb
lcall
sub
adc
stc
ficoml
fprem1
fbld
xchg
pop
cli
pop
ficoml
aad
jmp
cmpsb
scas
dec
cmp
pop
jp
scas
and
xchg
subl
ja
jbe
shrb
push
mov
pop
mov
scas
dec
mov
frstor
pop
aam
mov
loopne
mov
je
pop
pop
bound
push
testb
mov
cmp
aad
and
adc
outsb
lahf
std
pop
clc
jno
jge
cmp
mov
rcrl
imul
mov
jb
adc
adc
testb
adc
fcmovnb
popa
loop
xchg
popf
xchg
xlat
jns
add
sub
sub
sbb
push
aaa
push
mov
and
in
jb
cs
sub
fldl
ficoml
inc
dec
pop
pop
sub
int3
ret
sub
dec
lret
fistps
xor
scas
les
sub
inc
jae
lret
jg
scas
shll
ret
sbb
mov
mov
gs
imul
sbb
inc
sarl
pop
and
dec
repnz
js
popa
pop
adc
add
iret
test
inc
popf
fiadds
shlb
mov
push
push
xchg
out
mov
stos
movsl
mov
arpl
jo
enter
jp
insl
lahf
sahf
das
insb
rep
pop
xchg
cmp
je
dec
jne
pop
std
and
paddd
or
icebp
leave
mov
das
loop
call
aad
push
cmp
push
sahf
inc
fdivr
jb
xchg
mov
call
xor
mov
fiadds
inc
jmp
inc
cld
cmp
outsb
push
cmp
mov
push
xlat
out
or
sbb
imul
sbb
mov
xlat
mov
lahf
loope
loopne
popa
jbe
roll
pop
lahf
inc
dec
lcall
test
push
inc
test
xor
ss
mov
dec
stos
pop
or
sbb
in
cwtl
pop
push
subb
sbb
mov
into
lahf
jl
pop
imul
sbb
js
sub
popf
movups
xchg
adc
dec
inc
out
jne
fsubrl
stc
mov
movsb
and
lcall
adc
movsl
mov
ret
mov
or
inc
fcomp
ret
cmp
addb
and
out
and
mov
filds
test
cmp
xchg
rclb
loop
xchg
dec
cmp
sub
jle
push
add
push
mov
lahf
add
pushf
add
in
jnp
in
push
in
xchg
mov
gs
loop
mov
sub
mov
jnp
push
push
mov
aas
jmp
into
mov
insb
enter
imull
and
insb
mov
xchg
mov
aas
mov
repnz
je
mov
lock
push
fnstsw
add
pop
push
sub
in
mov
sahf
stc
les
push
push
dec
stc
sub
cmpsb
ret
pop
mov
loopne
xchg
jecxz
xchg
cmp
idivl
jno
ss
out
mov
jecxz
cwtl
dec
ljmp
sbb
pop
cli
out
sti
mov
stos
fcmovnu
stos
lret
mov
fwait
sbb
jnp
dec
sub
sub
jp
push
lcall
fcmovnu
stos
lret
mov
fwait
sbb
jnp
dec
sub
sub
jp
push
lcall
fcmovnu
stos
lret
mov
fwait
sbb
sub
sub
jp
push
sti
mov
stos
lret
or
in
cmc
rcll
mov
xchg
in
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
data16
inc
stos
push
mov
arpl
jae
out
notb
sbb
cmp
push
jp
mov
inc
stos
push
mov
push
ljmp
mov
cmp
push
jp
sub
pop
inc
xor
es
ss
push
loopne
enter
cmp
sbb
cmp
sbb
push
das
into
jbe
xor
lds
and
subl
or
lret
inc
or
mov
or
cmc
fsub
dec
aad
push
pop
mov
aaa
sahf
loop
ret
mov
fimuls
es
and
clc
mov
cmp
mov
cmpsb
jecxz
push
mov
xor
es
out
dec
aad
cmp
xchg
add
push
outsb
inc
popf
stc
cmp
push
imulb
or
lret
sub
mov
cmp
gs
mov
fiadds
popf
sti
mov
pushf
dec
ds
xchg
push
lcall
adc
push
jbe
inc
ficoms
es
push
ljmp
sub
push
cmpsb
jbe
mov
jb
dec
and
xor
dec
outsl
jg
arpl
repnz
mov
xor
gs
add
push
fnstenv
pusha
cwtl
pop
mov
adcl
subl
xchg
or
add
xchg
or
stc
adc
push
xchg
fiaddl
ljmp
sub
cmp
push
jp
mov
inc
stos
push
mov
push
ljmp
sub
cmp
push
jp
mov
int3
std
xlat
jb
cld
lods
lcall
inc
andl
lods
pop
loope
xor
pop
imul
icebp
sti
sub
xchg
fildl
idivl
outsl
test
test
ficoms
xor
aas
mov
in
ficompl
mov
out
cmc
movsb
mov
cmpsb
jle
mov
lret
enter
push
lods
mov
iret
mov
int
inc
mov
pop
sub
jno
add
imul
lcall
mov
mov
xchg
sbb
adc
inc
xlat
lret
push
cmp
xor
pop
dec
outsb
mov
imul
test
and
xchg
add
cmp
mov
xchg
dec
adc
insb
fildl
xchg
sub
daa
inc
lds
xchg
lock
jns
imul
out
fs
sbb
bound
adc
push
inc
addl
mov
adc
andb
imul
in
loop
pop
pop
xchg
cli
push
imul
dec
cli
jne
es
mov
xchg
sbb
mov
fistps
into
clc
mov
push
xchg
mov
scas
sbb
fwait
push
shrb
dec
mov
jo
push
aaa
outsb
cwtl
rorb
jle
or
pop
cltd
jne
add
jg
add
cmpsb
lds
sub
jnp
mov
js
cmpsl
jno
jg
sbb
loopne
and
ss
ja
adc
pusha
mov
push
push
push
jno
pop
jmp
dec
pushf
sbb
sbb
test
jge
cwtl
repnz
sahf
lds
fiaddl
mov
lea
in
imul
adc
lcall
push
fs
mov
jbe
xor
enter
lret
js
negb
lret
daa
outsl
add
repz
dec
sahf
and
sub
add
leave
cmp
jl
jmp
int3
cmc
repnz
bound
lods
mov
iret
xchg
sbb
sarb
cs
out
xchg
stos
gs
xchg
inc
aas
or
rorl
cli
xor
into
inc
int
roll
xlat
mov
mov
or
loop
scas
push
jnp
xchg
icebp
lods
pop
fs
data16
stos
push
pop
test
xlat
push
sbb
imulb
push
dec
xchg
jecxz
xor
and
or
inc
test
cmp
sub
jae
bound
imul
mov
and
shll
lds
push
clc
sbb
arpl
push
cmp
shrb
push
adc
ret
rcrl
icebp
jmp
jae
pop
nop
push
dec
fwait
push
lret
cmp
aas
pusha
xor
imul
ror
rcrl
sub
xor
movsb
fs
insb
adc
mov
insl
fisttpl
mov
or
leave
mov
inc
sub
push
add
enter
push
mov
sbb
testb
xchg
sahf
jmp
pushf
bound
add
add
push
pusha
inc
pusha
dec
and
enter
xor
in
jp
mov
mov
xor
mov
xchg
lcall
cs
mov
push
add
sbb
inc
dec
adc
xchg
push
or
push
sub
aaa
pop
push
add
clc
add
push
xchg
sbb
lea
adc
leave
and
imul
ficompl
gs
inc
scas
sbb
cs
mov
sbb
mov
mov
es
and
adc
dec
mov
ss
xchg
lock
inc
jle
in
xor
fcoms
lret
es
mov
test
mov
and
dec
jl
cmp
mov
jno
rcrb
cmpsb
out
repz
sbb
or
mov
mov
jae
mov
loop
fstpt
fwait
stos
inc
push
or
lret
push
popa
rorb
or
push
mov
push
int3
iret
out
out
mov
cmp
cmpsb
pop
into
loope
pop
dec
mov
xchg
jnp
jae
loop
loopne
out
inc
cmpsb
aas
in
jne
push
stos
sbb
cmp
and
mov
pop
loope
cmovbe
sahf
mov
sbb
aaa
xlat
cltd
xchg
push
ret
clc
leave
insl
inc
mov
sbb
sbb
sbb
mov
jecxz,pn
fmull
cltd
movsl
push
loope
add
sarb
push
iret
xchg
pop
jno
push
xor
mov
popf
or
mov
mov
sbb
and
push
pop
fwait
leave
mov
or
ficomps
and
je
fnstenv
jo
xchg
das
push
test
adc
lcall
jle
mov
jo
pushf
mov
lds
out
lret
xor
dec
movsb
std
roll
loopne
add
movsb
cmp
test
cltd
xor
jbe
call
push
inc
sub
add
lock
fidivrl
or
fidivrl
mov
xor
add
jnp
cmp
in
sub
inc
loope
dec
add
fcoms
sti
in
pop
inc
cmp
xchg
mov
mov
or
repz
mov
testl
and
rclb
sub
out
fs
push
imul
push
repz
xlat
das
test
mov
jmp
cmp
cmp
sbb
mov
xor
cmp
movsl
daa
jecxz
cli
mov
inc
psubb
pop
test
push
jmp
jg
push
cli
dec
lret
stos
push
cmp
sbb
fbstp
scas
add
mov
sbb
sbb
idiv
addr16
cmp
push
mov
aad
imul
xlat
cld
imul
maxps
pop
stc
cltd
out
das
or
jg
into
call
sti
dec
pushf
mov
or
dec
pop
aam
sbb
add
lods
fdivl
imul
jmp
out
fidivrs
push
jo
xchg
and
aad
lcall
or
ljmp
xor
fldpi
cmc
dec
xor
xor
shlb
inc
mov
jmp
adc
xchg
les
lods
aas
cli
lock
jge
rcll
stos
jmp
xor
repz
push
in
xorb
imul
sbb
jns
arpl
fldenv
lods
push
mov
ret
pop
or
jle
ds
pop
xlat
fcompl
add
adc
int3
jb
notb
outsb
jle
add
push
icebp
inc
push
imul
mov
pop
sub
mov
push
arpl
jo
and
adc
test
imul
sbb
inc
sbb
and
dec
hlt
jne
inc
shll
outsb
outsb
sarl
aas
or
jge
adc
inc
cmc
rcrl
addl
mov
adc
insl
ret
lods
fstp
fsubrl
jp
gs
ret
jmp
int3
add
aad
adc
mov
and
inc
xor
mov
cmp
out
shl
stc
inc
loop
lret
cmpsl
pop
or
mov
mov
and
sbb
bound
and
fistpll
xor
add
and
mov
jb
iret
sbb
mov
repnz
xchg
fcoml
push
mov
loope
sub
mov
clc
test
mov
das
sarb
jnp
mov
daa
outsb
pop
mov
add
outsb
clc
andl
imul
jp
das
cmp
xchg
xchg
pop
or
cmp
pop
cmpsl
imul
jle
push
stos
rclb
add
shlb
call
add
and
lcall
sahf
incl
dec
das
inc
push
pop
rcll
clc
pop
adc
insl
sub
cmc
push
stos
sar
ret
dec
popa
mov
lods
pop
xchg
mov
sbb
mov
insb
ror
push
and
adc
gs
sarb
ljmp
mull
in
cltd
mov
sub
push
add
in
xchg
mov
push
rcrb
ds
mov
cld
sub
mov
and
fcomps
or
or
pop
xchg
cld
out
subl
xor
cmp
cltd
scas
movsl
les
leave
jmp
popa
sti
push
jne
in
jbe
enter
shrl
xor
adc
xor
inc
jne
iret
cmp
lcall
mov
xchg
dec
inc
mov
subl
sub
jns
jno
dec
and
mov
mov
push
lea
mov
xchg
sbb
add
jmp
mov
cmpb
repnz
add
icebp
jno
cmpsl
push
shr
sub
daa
stos
xchg
clc
mov
jns
stos
mov
js
push
push
push
std
in
insl
lahf
push
push
imul
sub
jo
out
jecxz
shrb
jo
xor
and
sbb
imul
ret
movl
clc
ret
add
sbb
lods
adc
fisttpl
pop
loop
imull
adc
arpl
mov
or
imul
jno
in
cld
std
mov
jg
nop
pusha
insl
ss
daa
mov
in
in
cltd
inc
add
test
xor
mov
fsubp
pop
and
or
or
cs
outsl
jbe
js
push
jecxz
pusha
sub
jne
aad
mov
pop
jl
and
cmp
or
cmc
adc
jmp
jmp
sbb
mov
add
cwtl
pop
pushf
mov
jmp
sub
dec
cmp
rorb
add
add
out
dec
fdivr
gs
push
adc
jnp
inc
sbb
xchg
pop
cmp
dec
sbb
cmpsl
xor
sti
fisttps
lods
test
cmpsl
dec
in
fisttpll
psrad
into
push
and
xchg
add
mov
outsl
es
cwtl
xor
push
arpl
std
jecxz
cld
hlt
or
lcall
idivl
sbb
pop
xlat
mov
out
aas
ds
adc
sub
out
xchg
insl
mov
rorl
std
jb
aaa
push
sub
fnstcw
jb
adc
sbb
sahf
repnz
leave
add
cwtl
xlat
out
jns
xchg
dec
ds
sbb
std
push
and
repz
adc
jmp
xor
ja
cmp
cld
lods
sbb
clc
outsl
cmp
xchg
xchg
sub
test
mov
push
cmp
out
and
sbb
fstpt
in
cli
add
out
or
adc
sub
sub
dec
out
ror
mov
or
add
lea
fisttpll
in
pushl
aaa
pop
jle
mov
cvtps2pi
mov
inc
bnd
or
rolb
push
push
cltd
or
out
out
push
out
lcall
and
cwtl
addr16
pop
jnp
pushf
sub
dec
dec
xchg
inc
dec
fcmovnbe
mov
jne
loope
fdivl
and
push
outsb
mov
sub
mov
xchg
mov
sbb
lret
cmpsb
fxch
dec
jbe
pop
jge
bound
bound
out
xor
jle
fmulp
or
inc
je
iret
add
bound
cmp
sub
jp
jl
push
mov
mov
daa
int
adc
add
test
xchg
ds
mov
mov
dec
pop
mov
cli
jns
dec
add
mov
outsl
shlb
push
jbe
scas
xor
pop
lods
outsb
cmc
addr16
cmp
fsub
scas
jl
xlat
int3
xor
add
xchg
push
into
sub
lahf
or
jp
cmpsl
or
fs
repz
dec
mov
jb
fcoms
dec
sti
mov
fs
xor
add
push
add
out
clc
dec
adcl
jmp
cmp
out
lds
sub
shrb
repz
mov
cmc
inc
test
push
inc
ficoms
int
push
sub
loopne
sub
or
enter
addl
mov
icebp
pop
jmp
bswap
cli
add
xchg
sub
xor
inc
jo
mov
mov
mov
inc
lahf
loopne
lret
mov
jmp
sbbl
repz
mov
out
in
adc
stos
push
sub
sbb
pop
or
lods
inc
es
repnz
sub
scas
insb
add
dec
jne,pt
fidivl
inc
jle
mov
adc
loop
pop
fisttpl
ds
ljmp
mov
lds
cwtl
push
or
test
mov
adc
jbe
les
push
mov
mov
das
not
inc
pop
lock
jp
jg
sub
dec
jns
imul
push
xchg
jb
dec
out
push
aas
push
roll
fbstp
jae,pt
fisttpl
cmpsb
loope
cs
lcall
aad
loopne
cmp
fadds
les
js
pop
adc
dec
loope
cmp
xor
out
sub
rsqrtps
ljmp
test
fs
lahf
enter
pop
leave
jns
out
sti
int
sub
mov
js
inc
mov
out
hlt
mov
fstpt
jle,pt
cmp
roll
lods
mov
rcrb
pop
addr16
adc
lret
in
pop
xor
jmp
jno
xchg
inc
dec
dec
test
loop
js
sub
adc
sub
addb
rcll
jecxz
popf
aad
push
in
sub
add
icebp
jae
scas
cli
icebp
call
test
repz
pop
pop
idivb
cmpsl
enter
leave
stc
mov
push
inc
lret
xchg
test
pop
pop
insb
std
aam
mov
and
jne
mov
dec
pop
inc
mov
fstpl
subl
or
xchg
out
out
popf
mov
mov
add
mov
outsw
inc
mov
xchg
outsb
add
push
mov
fistl
or
int
cmp
shrl
cmp
movups
push
rdpmc
daa
rorb
daa
stos
negb
dec
cmp
push
push
push
sbb
push
cmp
mov
fisttps
or
stos
sub
fdivl
mov
cmp
adc
sub
outsb
test
jo
mov
mov
cmc
mov
popa
adc
rolb
pop
push
add
outsl
cmp
aas
test
sub
or
ret
repnz
adc
in
mov
xor
or
cmc
repnz
fiadds
aad
fistpl
daa
xchg
cmp
xor
cmp
out
shll
fdivr
in
ret
sbb
xchg
push
xor
xchg
jecxz
lock
cmp
pop
call
pushf
mov
es
push
cmpsb
pop
cltd
adc
mov
xchg
lcall
lret
push
test
dec
xor
mov
dec
push
cmp
ret
sub
mov
mov
push
loope
mov
shrl
sbb
ss
cmp
xchg
sub
sub
sbb
inc
mov
jp
mov
sahf
es
push
add
movsb
or
or
push
daa
fmul
cmpsb
jecxz
pop
xor
sti
push
inc
int
adc
mov
hlt
les
mov
jns
lods
mov
out
add
adc
jb
andb
cwtl
inc
fwait
mov
cmp
data16
lock
cmp
aad
pop
mov
mov
je
xor
add
and
lret
aaa
add
mov
data16
fnstsw
test
and
call
leave
mov
popf
out
outsl
pop
dec
cmp
lock
mov
sub
xchg
cmp
cmp
orb
jmp
ret
call
sbb
mov
inc
ror
jns
mov
or
or
xchg
dec
adc
pop
push
xlat
testl
inc
inc
rorl
lahf
inc
jnp
cmp
stos
fidivrl
adc
je
sbbl
pusha
xor
int
mov
mov
add
je
mov
jno
mov
push
inc
bswap
cmp
mov
movsl
outsl
shlb
out
fnstenv
cmpsb
lds
cmp
loop
ror
push
dec
sbb
mov
mov
cmp
xchg
bound
lea
adc
and
adc
lahf
or
dec
lods
adc
jecxz
roll
sbb
push
dec
cld
js
mov
mov
bndstx
pop
scas
and
aaa
repnz
pushf
into
nop
rol
shll
scas
add
sub
jno
inc
movsl
shlb
push
filds
mov
mov
and
jbe
icebp
into
js
mov
es
test
pop
cld
pop
sub
in
shlb
or
jb
push
lea
and
out
arpl
scas
push
adc
addr16
roll
arpl
push
pop
movsb
jl
ret
inc
xor
or
cmpsl
pop
rcll
lahf
jnp
test
mov
and
loopne
cs
test
xlat
fsts
mov
pop
xchg
mov
cmp
mov
stos
mov
adc
push
cmp
leave
inc
lods
jp
push
push
sbb
fidivl
std
xchg
fisubrl
scas
mov
mov
xor
inc
mov
cld
mov
imul
cld
push
sub
mov
mov
dec
pop
daa
sub
out
push
and
arpl
ret
loop
push
pusha
mov
jmp
out
in
dec
lahf
or
sbb
mov
mov
xchg
mov
fistps
imulb
stos
fisubl
jge
dec
popa
or
inc
lock
cmp
sbb
sub
pop
int
push
push
or
stos
imul
add
mov
xchg
test
out
and
mov
mov
adc
sti
call
out
push
add
inc
sahf
push
pop
sar
cmp
out
shl
in
insb
inc
mov
jne
cli
xor
cmp
daa
lods
stos
dec
outsb
dec
xchg
xor
xchg
xor
out
mov
movsl
das
pop
xchg
inc
ds
sbb
inc
in
lock
push
fsub
inc
in
ljmp
inc
dec
es
cwtl
mov
sbb
inc
lock
mov
adc
gs
or
push
aad
add
dec
mov
js
mov
movl
lret
nop
fs
mov
xchg
jmp
shl
dec
push
xchg
ret
iret
sub
mov
js
in
scas
aaa
fldt
or
fisubrs
aas
into
mov
sahf
mov
iret
mov
jbe
les
shr
popf
jno
aam
in
mov
push
xchg
flds
sbb
xchg
jp
add
enter
jp
ret
xor
inc
cmp
xor
mov
lods
ret
xlat
inc
arpl
cmp
push
filds
pop
mov
xchg
stos
data16
jl
cmpsl
inc
add
jne
scas
out
adc
or
rorb
je
mov
ja
lods
jns
cmp
xchg
mov
sbb
and
xchg
fwait
xor
sub
pop
mov
push
xchg
adc
sbb
out
rolb
test
insb
data16
and
jnp
fildl
inc
nop
or
int3
sti
add
test
sbb
xor
jmp
insl
nop
jae
test
sub
mov
jl
mov
and
test
lret
in
dec
jl
aas
push
adc
sbb
mov
aad
and
loope
push
repz
mov
and
adc
push
xlat
push
or
jge
mov
out
aas
mov
das
cltd
fwait
ds
adc
cltd
add
je
fs
mov
bound
lret
imul
loopne
mov
mov
and
stos
dec
jno
loop
push
inc
in
lcall
mov
mov
scas
jecxz
dec
sbb
std
movsb
xchg
mov
ret
jns
push
xor
xor
mov
test
mov
or
sbb
or
add
iret
xchg
stc
in
sbb
movsl
sahf
ret
dec
daa
push
sbb
jne
xlat
popf
sar
add
nop
test
jmp
xor
pop
dec
xlat
idivl
dec
add
push
iret
push
mov
dec
fdivrl
push
mov
stos
mov
mov
xchg
xlat
xchg
sbb
sub
inc
push
adc
ja
and
mov
sub
std
mov
pop
icebp
loope
push
aad
loopne
lods
sub
ljmp
dec
push
or
mov
fwait
imul
xchg
ja
test
add
sbb
in
mov
cltd
and
repnz
loop
jle
fwait
ja
aaa
mov
ret
push
inc
pop
movsb
mov
jbe
push
jecxz
cmp
addr16
pop
jo
test
fcmovne
sarb
movsb
xor
xor
ret
es
les
pop
xor
pop
sbb
sub
addr16
arpl
mov
mov
adc
inc
jge
inc
shrl
sub
mov
push
call
pop
addr16
lcall
fiaddl
ljmp
sub
cmp
push
jp
mov
inc
stos
push
mov
push
ljmp
sub
cmp
push
jp
mov
inc
mov
mov
push
out
push
cli
out
negb
sub
xor
arpl
jle
dec
push
cli
es
push
push
cmp
cmc
divb
shll
and
imul
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
movsb
rcll
xchg
std
mov
inc
and
jno
add
xor
ret
movsb
rcll
in
aam
les
adc
add
mov
fs
push
and
fisubl
hlt
lcall
xor
pop
imul
or
jne
xor
ret
sarb
insb
outsl
dec
fistpll
jmp
popf
lds
xor
and
add
sahf
das
xchg
enter
or
in
sub
cmp
leave
ret
mov
jae
xchg
add
leave
jle
cmp
push
xchg
mov
xchg
xchg
pop
xlat
lcall
ffreep
mulb
sbb
xor
inc
xor
test
shll
les
mov
mov
test
inc
xor
adc
repz
daa
imul
dec
int3
pop
xor
mov
les
arpl
inc
jmp
sub
and
jmp
and
movsb
les
in
aam
les
adc
add
je
fs
and
cmpsb
rcl
std
loop
repnz
aad
std
mov
fidivs
inc
sub
jl
jne
fs
aaa
and
pop
sarl
call
mov
push
cmp
push
pop
add
jne
or
xor
andb
out
in
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
les
adc
add
je
adc
xor
stos
loopne
mov
xor
aad
cmp
jmp
adc
bound
test
lcall
xor
mov
jbe
fnstcw
in
pop
adc
jmp
or
adcb
cmpsb
xchg
mov
add
xor
adc
cmp
inc
sarl
int3
es
or
push
frstor
inc
and
mov
popf
xchg
imul
mov
mov
mov
pop
dec
add
mov
push
fcoms
adc
mov
and
mov
xchg
mov
rcll
stos
mov
push
jo
jle
mov
mov
xchg
mov
ret
test
loope
lret
xor
inc
cmp
or
pop
pop
mov
sbb
sbb
lds
dec
lahf
test
test
push
loopne
aam
fnstsw
filds
inc
or
or
jo
jb
test
sahf
daa
jb
popf
popf
dec
push
sti
pop
sub
push
dec
aad
into
aam
dec
loopne
mov
outsl
out
jbe
fisubrl
inc
push
sub
sub
or
cmp
movsb
push
add
jl
jo
subl
or
sub
and
push
push
push
mov
mov
imul
cwtl
cmc
in
pop
fldt
pop
insb
push
cwtl
sahf
jne
fimull
repz
stos
enter
out
push
scas
jo
xchg
and
sbb
lods
loopne
fadd
push
sahf
and
mulb
data16
repnz
push
add
dec
dec
scas
or
stos
push
push
mov
scas
push
cmc
pop
imul
test
add
jae
inc
insb
dec
loope
jp
repz
cmp
mov
and
call
dec
add
xlat
push
push
cmpsl
mov
sub
adc
cmp
pop
xor
xor
js
mov
orb
jnp
mov
lea
pop
sub
xor
lret
mov
sub
mov
push
ss
stc
sbb
in
imul
adc
jne
sub
movsb
pop
adc
sbb
mov
push
sub
cmpsl
cltd
movsl
adc
mov
inc
nop
xor
xlat
fmuls
sub
cmp
or
stc
adc
adc
jae
in
mov
icebp
fsubl
jge
fs
fstpt
xchg
mov
inc
fwait
out
lahf
mov
dec
add
decb
mov
mov
jmp
rcrb
or
inc
test
test
add
add
jl
popa
xchg
inc
mov
mov
add
iret
ror
push
mov
xor
cli
mov
aas
lods
cltd
xor
jmp
mov
movsb
pusha
les
and
xchg
push
xchg
lret
jbe
je
das
dec
fmull
xchg
scas
lret
mov
pop
sbb
mov
pop
sub
or
addl
or
lret
jns
pop
xchg
js
or
adcb
clc
pop
push
pushf
lods
icebp
lret
push
mov
scas
add
ds
fcom
inc
mov
pop
cmp
cmp
push
ds
xor
add
jg
jnp
gs
push
jle
lods
aam
push
cs
out
jo
fwait
dec
data16
out
test
sti
sbb
pop
icebp
xchg
ja
jnp
inc
inc
and
sbb
cmp
add
int3
push
insl
cmp
out
lods
jnp
mov
sbb
popa
stos
or
enter
mov
mov
ret
in
movsb
stos
pop
aad
fwait
outsl
rorb
lea
xchg
addr16
subb
inc
arpl
rcr
xchg
xor
push
mov
mov
stos
jecxz
insb
push
fcoms
scas
dec
fxch
dec
rclb
loope
test
mov
add
outsl
pop
sbb
add
jns
xchg
js
out
mov
fstps
jne
movsl
test
dec
pusha
cmpsl
das
jg
nop
mov
sub
cmc
movsl
les
jnp
into
pop
adc
dec
fimull
jl
mov
lock
xor
jne
mov
pop
es
pop
ret
add
fsubrs
inc
jecxz
add
pop
add
jmp
cli
and
negl
or
xchg
mov
dec
lods
xchg
ss
sub
stc
dec
xor
jle
mov
scas
xorl
popf
aad
push
mov
xorb
mov
cmp
sub
cmp
addl
jle
xor
fmull
pop
add
inc
cmp
jecxz
xchg
rcll
jnp
mov
es
sbb
push
xchg
mov
repz
ret
out
and
lds
imul
mov
and
mov
into
xchg
xchg
iret
cmpsl
clc
out
hlt
je
dec
xor
or
jne
push
push
mov
shrl
mov
sti
xchg
dec
mov
lret
inc
je
outsl
out
cmp
push
adc
repnz
in
jmp
mov
pop
fcmovu
mov
jb
and
aaa
xor
insb
outsb
push
sahf
jecxz
add
test
xchg
pop
push
push
out
jle
push
cmc
mov
xchg
push
sub
lds
daa
and
adc
popf
jne
imulb
add
jae
jge
test
adc
in
lahf
pop
cmp
out
push
loop
mov
ret
imull
jge
cs
inc
mov
in
repz
inc
insl
das
mov
cmpsl
test
sbb
out
inc
test
mov
jbe
and
loop
jno
jo
and
jb
outsl
cmp
xor
add
les
mov
sub
add
fucomp
das
daa
mov
int3
ret
movsl
je
pop
pop
jl
mov
mov
sbb
adc
aad
rol
call
inc
dec
and
fisubrs
adc
inc
dec
out
popf
and
mov
movsb
cltd
xchg
aaa
stc
gs
xchg
cmpsb
xchg
cltd
ret
hlt
into
in
nop
sar
jbe
inc
mov
adc
add
push
xor
jmp
xchg
ficompl
add
fcmovbe
push
mov
mov
jnp
dec
data16
push
push
stc
stc
in
xchg
lock
fxam
jae
in
mov
mov
les
push
xchg
js
adc
aad
subb
pop
and
adc
ret
and
and
push
jbe
jg
jae
xor
inc
pop
rcll
cmp
clc
gs
inc
popf
lds
outsb
fildll
inc
lds
sub
js
and
fcoml
cltd
push
sub
adc
inc
movsl
pop
jg
je
shll
inc
movaps
mov
or
and
xor
jbe
push
add
xor
mov
fdivrp
xor
jbe
mov
sbbl
pop
dec
test
ret
movsl
ljmp
mov
dec
je
aad
adc
in
xchg
and
mov
aas
inc
inc
adc
push
inc
imul
dec
and
addl
mov
inc
lcall
in
push
pusha
in
orb
data16
mov
gs
gs
jg
clc
inc
ljmp
btr
loope
jg
arpl
push
cwtl
negl
jns
or
mov
jae
fcomp
dec
fstl
mov
mov
lea
loop
pop
inc
sbb
dec
xor
jle
fmuls
xor
adc
jle
sub
cmp
popf
movl
or
das
adc
ds
sar
push
or
dec
push
pushf
xlat
dec
cmp
push
jle
fiadds
setp
mov
movsl
mov
fcomi
xlat
xchg
sub
xchg
xor
xchg
pop
lods
aam
jne
xor
pop
roll
or
int
cmp
aam
jg
jae
es
lods
sub
sub
jno
push
xor
aas
sbb
dec
int3
cmp
lret
scas
loop
lods
cmp
push
cmp
cmp
call
stc
loopne
sbb
outsl
sub
xor
imul
mov
cmp
xor
cmp
dec
ror
xchg
add
push
shrl
fisubs
inc
call
adc
add
inc
inc
xchg
xor
fistpl
movsl
adc
or
mov
push
inc
push
insl
add
mov
mov
xor
fildl
sarb
inc
repnz
adc
adc
cmp
adc
mov
ror
in
jnp
inc
dec
sarl
pop
shrl
mov
push
jnp
adc
mov
rcr
stos
scas
insl
jl
nop
dec
or
mov
mov
mov
sbb
je
push
cld
pop
sbb
and
out
xor
cmp
fcom
xchg
cs
or
js
jbe
les
mov
push
dec
xchg
sbb
pop
cmc
xor
fsubp
movsb
or
fistpll
subb
ficompl
adc
cld
shrb
fdivr
inc
mov
andl
inc
ljmp
movsl
outsb
insb
out
mov
and
pop
insb
xchg
xorl
mov
cmpsl
pop
cmp
xchg
cmp
out
in
mov
enter
sbb
inc
xchg
mov
mov
dec
and
xor
test
mov
adc
pop
sbb
xchg
mov
ss
xor
outsl
xor
mov
dec
and
jno
sbb
dec
cmc
pop
xor
sbb
mov
pop
out
adc
mov
push
jmp
mov
and
jb
gs
outsb
std
push
or
xchg
sbb
xor
sub
mov
jo
insb
mov
hlt
xchg
mull
stos
iret
or
jno
and
in
mov
add
mov
xchg
sub
stos
jb
ljmp
and
shll
pop
roll
roll
ljmp
cmp
outsb
lret
das
jno
data16
sahf
dec
out
dec
sbbl
push
pop
pushf
stos
test
add
insl
push
test
rol
loop
decb
repnz
jg
loopne
pop
mov
out
loopne
pop
dec
fidivrl
adc
mov
push
mov
cmpsl
jno
xlat
out
popa
jg
mulps
or
mov
lret
ds
mov
push
add
pop
pop
mov
lods
pop
adc
dec
shl
or
ss
inc
arpl
cmpb
mov
jns
mov
popf
pushf
lea
mov
mov
jne
pop
jb
mov
sbb
cmpl
les
sub
les
lret
out
cltd
daa
popf
fmull
cli
pushf
lret
mov
in
movsb
adc
jno
fildl
fdivl
into
pusha
push
mov
pushf
rcll
adc
dec
jge
mov
ja
notb
lahf
cmp
loop
cmpsl
xor
arpl
lret
cmp
cmc
cmp
push
xlat
sahf
dec
imul
shl
add
ja
sub
lock
sbb
jge
jo
out
push
mov
jb
outsl
aam
aas
inc
add
std
or
sub
xchg
divl
jmp
add
jmp
and
aad
sbb
xchg
xchg
pop
mov
mov
mov
lds
lds
mov
add
rclb
scas
push
dec
adc
pop
adc
adc
in
or
lret
xchg
outsb
je
pop
or
ljmp
lods
and
or
dec
negb
xor
mov
rclb
jecxz
mov
iret
andl
mov
ret
mov
pop
insl
int3
jl
mov
add
pop
popf
push
test
div
add
sbb
or
imul
push
f2xm1
div
rcrl
mov
jmp
outsb
jae
hlt
push
int3
jo
cli
lahf
outsl
xchg
dec
sarb
ja
cs
rol
add
cmpsl
popf
insb
pop
mov
add
cmp
test
xorb
call
insl
ss
pop
push
sub
jnp
fcompp
mov
pop
ds
xchg
mov
and
jne
gs
jnp
sub
insb
add
inc
addr16
gs
sub
lahf
cmp
dec
mov
jmp
dec
push
test
xchg
mov
mov
mov
loop
and
pop
mov
dec
lds
inc
push
cmpsl
pusha
dec
loopne
xchg
out
and
ja
pusha
push
dec
aam
mov
xor
mov
lea
cmp
leave
inc
outsl
ds
mov
adc
shll
xchg
mov
enter
cmpsl
xlat
add
pop
mov
xor
inc
aas
push
notb
insl
aas
lret
mov
shl
xchg
inc
xchg
andl
mov
xchg
mov
pop
subb
fbstp
fcmovnbe
negl
jl
pusha
movsl
dec
pop
out
sub
mov
bound
jle
add
mov
fildl
hlt
ja
test
mov
mov
pushf
repnz
mov
sbb
imul
adc
mov
es
shlb
inc
cmp
mov
fcompl
aad
cmp
pop
ror
or
jo
xor
dec
pop
xor
sarb
push
das
lret
sti
push
xchg
mov
arpl
or
sbb
push
es
push
mov
inc
lock
aaa
dec
ds
daa
popf
xor
mov
sahf
jne
inc
fimuls
imul
xchg
mov
mov
adc
or
mov
in
pop
test
lods
cmp
dec
or
mov
push
cwtl
std
xlat
push
fwait
sbb
cld
das
mov
sub
cmc
dec
xchg
sbb
mov
outsb
add
jo
and
pop
xor
adc
push
lret
ljmp
es
lahf
iret
scas
push
lds
clc
imul
inc
addr16
xchg
cmp
dec
mov
inc
mov
mov
int
clc
lds
sub
ret
cmp
call
dec
xchg
cmp
xchg
add
sub
sbb
test
xor
mov
rorl
fdivl
jno
pop
mov
xchg
dec
in
std
cli
xlat
lods
pop
push
mov
and
in
call
stc
in
loop
cmpl
jno
pop
shrb
inc
push
mov
adc
sub
movsl
arpl
jmp
iret
rcll
sub
arpl
pop
adc
mov
push
xchg
cmp
adc
pusha
xchg
cmp
in
inc
sti
gs
ljmp
lahf
mov
aaa
notl
in
mov
scas
shrb
jle
out
pop
lds
and
jbe
and
jns
mov
cli
leave
pop
push
loope
push
cld
or
jl
inc
xlat
fiadds
negb
pop
iret
push
aad
dec
lock
fistl
sub
lahf
mov
and
repnz
cmp
pop
call
xchg
cmp
adc
sub
xchg
shl
push
pop
xchg
fildl
test
inc
add
out
pop
lahf
jns
pop
jbe
pushf
in
cld
xlat
mov
jle
push
xor
lods
test
test
add
inc
adc
mov
lahf
xchg
es
mov
fs
mov
dec
fsubrs
incb
and
les
pop
rcll
call
or
sub
pop
out
adc
xchg
adc
dec
push
test
mov
adc
movsl
daa
pusha
dec
sti
ret
jb
sbb
les
rol
mov
sub
inc
sbb
fs
out
std
push
je
out
mov
xlat
femms
repz
xchg
cmc
repnz
mov
or
gs
push
test
pop
dec
insl
xorl
stos
jmp
push
lds
and
mov
dec
lods
movsb
pop
sbb
add
fnsave
jnp
ja
sub
addr16
sub
out
test
jecxz
sarb
pop
mov
iret
ja
lods
mov
test
call
adc
iret
add
xchg
enter
mov
test
mov
push
ror
mov
jae
movsl
sbb
xor
fbstp
xlat
pop
mov
sti
aas
js
fbld
out
lcall
xchg
icebp
pop
lea
in
sbb
mov
pop
sbb
push
push
mov
pushf
jae
fldt
sbb
outsl
out
ret
dec
mov
fbld
mov
out
inc
pop
sbb
js
push
mov
adcb
sub
in
leave
and
scas
lea
or
sbb
xor
lcall
lods
xchg
addps
cli
outsb
bound
sub
out
leave
adc
clc
xor
fiaddl
rcll
cmp
jae
lds
xchg
adc
pop
push
test
push
dec
sbb
cmp
jo
cmpsl
sub
inc
mov
lcall
int3
inc
adc
scas
cwtl
xor
sub
repz
sbb
cmp
xchg
mov
pop
int
add
push
je
jo
cmpsl
sbb
sbb
ret
and
in
pusha
and
imul
scas
add
push
adc
jge
fisttpll
sahf
cwtl
mov
int3
insb
xchg
xchg
stos
jo
dec
aas
push
out
pop
cmc
mov
push
in
mov
cmpl
dec
xlat
lods
loop
les
stos
mov
sbb
dec
in
mov
add
mov
jp
xor
push
test
mov
mov
jae
and
add
cld
push
sbb
sahf
bound
mov
ss
lods
jl
into
out
dec
test
fwait
jo
js
mov
xchg
int3
setno
mov
repz
cmp
mov
pop
or
leave
inc
mov
insb
add
dec
out
test
jae
lods
pop
fidivrl
mov
xlat
stos
icebp
fyl2x
cmp
mov
sbb
fcoms
imul
lock
mov
xor
adc
test
jecxz
test
cld
push
inc
call
aaa
mov
pop
cmp
mov
pop
cmp
mov
loope
das
lock
or
sti
mov
enter
mov
adc
mov
scas
jmp
shll
or
mov
sbb
insl
pusha
push
loop
loopne
addr16
jmp
out
movsl
jae
jg
xchg
mov
movsl
ret
lods
jecxz
je
xor
mov
cld
cs
xor
push
mov
shll
dec
lcall
xchg
dec
inc
cs
shlb
add
cmp
push
sti
jmp
push
ficoms
push
add
jmp
mov
fsub
pushf
and
in
mov
scas
fcomp
out
xor
jae
xchg
shrl
cmp
sbb
jecxz
jmp
xchg
fisttpl
lret
and
int3
cltd
sahf
rolb
repnz
daa
lea
cld
xor
push
or
inc
jle
fnstcw
lcall
jle
cld
ret
mov
js
fimuls
jns
mov
push
cmpsl
mov
pop
sbb
out
enter
pop
cwtl
dec
jge
lods
mov
jbe
inc
jmp
fisubrs
mov
cmp
cltd
lds
stc
fisttps
loope
push
aad
mull
das
sbb
roll
inc
lret
scas
jo
loopne
pop
mov
jmp
xchg
mov
dec
sub
clc
add
fwait
inc
dec
fcmovnu
cmp
adc
subl
ret
popf
fistps
push
sbb
mov
lret
sub
in
cmpsl
xor
nop
shll
inc
dec
shr
push
js
xchg
mov
mov
jo
loopne
or
adc
stos
call
out
mov
adc
sub
sbb
pop
and
loop
pop
pop
mov
lahf
in
xchg
ret
lods
in
jae
jno
nop
daa
mov
xchg
shlb
insb
sub
mov
pop
insb
scas
dec
inc
negb
pop
stos
and
movsb
cmp
xlat
test
and
adc
lods
les
shr
mov
sub
pop
dec
or
mov
xchg
inc
dec
movsl
sbb
push
add
xchg
scas
pop
xchg
add
mov
gs
dec
nop
or
add
pop
mov
lcall
popf
aad
xlat
add
xor
aas
pusha
mov
fbstp
mov
popa
decl
je
movsl
push
ds
inc
popf
js
jg
subb
cmp
paddsw
mov
in
addr16
and
mov
daa
repz
cmp
callw
add
sbb
xchg
inc
mov
stos
les
jl
jge
pop
xor
and
clc
push
sub
rcll
xchg
mov
dec
nop
btr
add
jno
lahf
sti
inc
mov
inc
sub
push
sarl
iret
dec
nop
cmp
mov
pop
ret
mov
es
fcomip
sahf
mov
dec
xor
dec
lods
xor
xlat
repz
adc
pop
inc
loopne
mov
jnp
clc
push
aam
rcll
and
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
les
adc
add
je
adc
xor
test
je
in
aam
inc
mov
inc
and
adc
add
je
adc
xor
test
hlt
and
aam
les
mov
mov
and
xor
adc
pop
xor
jp
adc
sub
xchg
fidivl
mov
fidivrl
ret
pop
and
pop
add
or
bound
inc
cmp
shrb
xchg
mov
mov
sub
bound
adc
push
pop
sub
xchg
xchg
mov
movsl
lods
xlat
xchg
mov
mov
es
add
ret
mov
and
data16
cmp
xlat
mov
int
in
fidivrl
and
insl
ss
inc
xor
sub
mov
mov
pop
cmp
bswap
mov
add
dec
add
jge
lcall
inc
das
bound
incb
dec
ljmp
ja
cmp
movsl
int
std
push
pop
mov
sub
ret
dec
jp
sub
loopne
loop
xchg
inc
push
stos
fstpl
and
call
adc
xor
jge
insl
dec
lret
dec
sarb
push
insl
adc
bound
jb
inc
and
mov
jecxz
xchg
cli
sub
fsubs
inc
packuswb
ja
pusha
ja
sub
push
aaa
mov
xchg
iret
lods
fistpll
js
jle
je
inc
ss
enter
scas
out
nop
out
xchg
jmp
cmpsb
and
push
push
jb
sbb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
adc
mov
in
test
lds
adc
xor
xor
insl
iret
push
lahf
clc
xor
repnz
adc
into
xor
pop
add
aaa
add
mov
out
cld
lods
mov
mov
mov
enter
pop
mov
sub
movsl
dec
rol
orl
jno
sbb
jg
sub
hlt
inc
fimuls
pusha
mov
mov
mov
mov
lods
push
ljmp
xlat
dec
loopne
scas
jo
xor
nop
in
xor
pop
stos
pop
cmp
testb
jno
outsb
lods
arpl
lods
cmp
ret
mov
sub
daa
push
out
xchg
push
or
mov
fistps
aas
inc
clc
mov
inc
add
pusha
mov
ret
sub
or
jo
leave
jg
adc
pushf
insl
and
jae
int3
les
enter
cmp
mov
subl
ja
push
neg
stos
mov
or
aaa
or
cmc
sbb
hlt
lret
cmp
push
rorb
insl
mov
cmp
loop
je
jle
sub
adc
dec
sub
lret
test
je
cmp
mov
or
lret
call
jnp
hlt
pop
in
or
inc
in
push
ret
or
adc
xchg
inc
push
push
sbb
jbe
or
pop
pop
push
sub
sbb
xchg
out
mov
aas
sub
xchg
xor
push
sbb
fbstp
std
xchg
test
aam
adcl
idivl
dec
not
jge
jnp
roll
or
pop
cmpl
mov
test
stos
push
jne
loopne
rolb
fwait
rol
shlb
xor
mov
mov
and
dec
lods
cwtl
push
and
flds
imul
jo
push
out
dec
outsb
adc
mov
mov
aas
in
mov
orl
adc
inc
in
imul
jl
movsl
lret
dec
mov
pop
clc
push
cmp
add
add
dec
sbb
in
mov
xlat
jb
push
aad
and
outsb
mov
or
sub
aam
xchg
fwait
add
and
mov
mov
cmp
jle
pop
sub
jns
stc
mov
jge
or
xor
ja
sbb
in
mov
fistpl
adc
push
push
testb
in
std
popw
lods
outsl
xchg
xor
mov
leave
cmp
jl
adc
pop
mov
xor
or
shll
rolw
dec
cwtl
gs
pusha
add
push
or
out
dec
cmc
enter
and
or
jns
cltd
mov
repz
or
repz
aad
dec
mov
outsl
jno
xor
fldcw
pop
xor
pop
cmp
jge
mov
pop
sub
je
mov
xchg
cmp
dec
pop
and
imul
add
cmp
xchg
mov
jo
and
int
inc
adc
push
mov
mov
adc
cmp
in
mov
aad
movsl
pop
jge
inc
jo
in
clc
sar
mov
jge
cmp
bound
fidivl
outsb
pop
add
aam
or
jb
cmpl
dec
mov
shrb
rolb
mov
xchg
lock
out
mov
sbbb
push
sbb
shlb
mov
pop
pop
sbb
sbb
lret
mov
test
insb
pop
arpl
push
inc
sbb
rcrb
jo
mov
gs
xchg
cs
inc
das
dec
pop
lods
add
dec
add
std
mov
call
jle
cmp
rorl
clc
push
add
sahf
les
imul
and
adc
arpl
cmpb
inc
stos
mov
push
cmpsb
jmp
lret
push
xchg
sub
aad
int
mov
cwtl
jnp
das
adc
inc
and
push
mov
dec
cs
push
jl
add
push
aam
xchg
inc
leave
repz
sbb
rclb
es
dec
or
cmp
or
cmp
xchg
lock
xchg
out
loopne
pop
xchg
or
lret
xor
pop
sub
aas
mov
pop
xor
or
test
jne
cmpsl
push
mov
lds
shlb
sub
or
inc
insb
and
stos
jmp
mov
addr16
clc
sbb
inc
jmp
sub
fstpt
push
adc
inc
mov
xchg
icebp
enter
bnd
loop
sbb
xor
in
pusha
notb
push
lods
dec
das
jae
pop
ljmp
xchg
pop
and
mov
push
iret
adc
sub
negl
pop
mov
mov
and
sub
test
xor
mov
add
cmp
daa
mov
addl
inc
xor
push
jl
push
lea
loope
out
xchg
push
sahf
xchg
clc
jle
stos
pop
shll
xor
pushf
jns
loopne
jmp
mov
sahf
jno
jge
lcall
adc
cmp
cmc
or
mov
dec
xor
add
ret
mov
push
and
cmp
cmc
push
dec
jle
fwait
xchg
lea
movsl
push
imul
dec
add
movl
inc
mov
cmpsb
into
aad
xor
stos
mov
jl
cmpb
jb
jmp
jnp
loopne
sbb
loope
xor
mov
push
mov
push
aaa
sub
mov
sbb
aaa
cmovnp
or
fiadds
stos
call
xor
daa
lea
loop
js
std
push
movsl
sahf
enter
mov
xchg
jmp
xchg
or
lods
sbb
bswap
hlt
mov
mov
or
fstps
jnp
push
std
mov
and
add
add
jae
inc
pop
or
mov
xchg
mov
push
push
or
sub
test
sbb
test
sub
shlb
dec
call
push
cwtl
xlat
push
pop
xchg
sub
std
mov
and
arpl
int3
cmc
sub
ds
or
addl
dec
outsl
fimull
add
sub
sub
shlb
pop
sbb
int3
push
pop
and
fimull
pop
mov
in
call
ret
aad
inc
enter
aaa
in
js
pop
push
mov
jnp
pop
cmp
addr16
pop
lahf
or
or
insb
pop
cmp
sbb
sub
and
dec
mov
mov
mov
out
pop
ja
jns
mov
add
je
outsb
fsts
cmp
insb
mov
rep
hlt
cmp
sbb
sbb
dec
lcall
xor
movsb
mov
and
in
jecxz
mov
sbb
and
sbb
jno
mov
cli
adc
cld
mov
cmp
test
jbe
mov
cmpsl
rol
subb
jge
cmp
in
cwtl
xchg
xor
stc
adc
jp
push
mov
cmp
imul
cli
jne
enter
and
cmp
fisttpll
push
cmp
inc
ret
mov
pusha
pop
enter
and
and
dec
fsubr
push
and
add
repz
gs
mov
stos
scas
sub
cmp
push
jo
cmp
lods
add
sub
xor
aaa
jb
orl
mov
leave
cmp
mov
cmp
in
mov
inc
and
insl
ret
dec
push
mov
lret
into
push
cmpsb
adc
push
xor
mov
mov
rcr
test
daa
mov
ficompl
nop
xor
int3
addb
fwait
sub
adc
jg
lret
cmp
inc
xor
mov
es
push
add
mov
ds
sbb
xchg
lret
pop
cmp
sarb
cli
mov
mov
xchg
pushf
sahf
out
mov
xchg
mov
sar
pop
pop
sub
jp
sbb
mov
imul
js
addr16
test
and
xor
sub
divl
ss
pop
cmp
xchg
pop
imul
xor
clc
cmp
pop
mov
pop
loope
and
pop
cmp
movsl
cvtpi2ps
mov
sbb
fsub
pop
jg
xchg
daa
mov
pop
xchg
pushf
jmp
dec
sub
repnz
inc
lahf
pop
cmp
icebp
add
js
addr16
in
daa
and
out
icebp
inc
aad
mov
loopne
and
or
push
rolb
les
in
stos
stos
mov
xor
inc
sbb
sbb
xorb
je
sbb
mov
repnz
mov
rolb
mov
outsl
mov
das
sahf
daa
pop
fdivr
movsb
mov
bound
inc
mov
xor
dec
xor
xchg
cmp
decb
add
xchg
sti
and
addb
clc
xor
cltd
or
aas
xor
mov
add
dec
push
pop
mov
pop
movsb
in
mov
jns
dec
cltd
arpl
adc
and
sbb
movsb
addr16
jg
mov
xchg
stos
scas
jmp
xchg
mov
idivb
and
or
popf
pop
mov
in
ja
mov
inc
mov
into
popa
fsubs
mov
les
rol
data16
cwtl
aaa
repz
ret
test
les
insb
shlb
cmpsb
pushf
es
insb
push
fldenv
mov
addr16
je
push
bound
xchg
into
out
cmp
repnz
imul
ljmp
jp
dec
imul
dec
fsubl
xchg
sbb
jo
stos
cmp
cmp
push
inc
xor
push
aaa
jge
mov
cld
jae
testb
jecxz
negb
int
push
sub
mov
push
xchg
pop
push
jae
fildll
mov
pop
fs
pop
jne
jmp
push
cmp
mov
sub
xor
aad
enter
xchg
andl
pop
gs
jecxz
mov
xchg
ljmp
push
jmp
out
mov
subb
pop
sbb
mov
and
inc
and
and
pop
inc
outsb
ljmp
lea
stos
nop
add
cmpb
popl
pop
outsl
loop
pop
sub
xchg
movsb
sub
sbb
xor
cld
shr
mov
push
mov
imul
addr16
jge
or
add
jnp
scas
out
cltd
cltd
jae
popf
aad
add
jmp
and
pop
stos
dec
leave
sub
xor
inc
imul
inc
push
mov
leave
cli
jl
push
out
call
dec
fcmovbe
pusha
orl
mov
shlb
dec
popa
arpl
mov
add
dec
jno
movsb
aam
pop
sub
lret
out
push
jge
scas
xor
rcrl
lret
sbb
outsb
loop
cwtl
push
movsl
lods
push
popf
sbb
add
pop
lcall
xchg
adc
mov
add
adcl
cltd
inc
cmp
inc
adc
lret
dec
imul
rclb
int3
gs
adc
xorl
sbb
icebp
or
mov
pop
adc
aad
pop
lods
or
repz
sarb
cli
not
mov
imul
arpl
aad
pop
lret
mov
pop
gs
mov
lret
xchg
insb
inc
popa
jns
movsl
cmp
pop
int3
outsb
aaa
or
in
pop
xchg
sub
jl
mov
insb
jae
push
push
sahf
jle
sub
adc
into
mov
jae
mov
cmp
jb
lds
adc
xchg
pop
mov
loope
insb
jo
pop
sbb
and
ljmp
popf
mov
out
rcll
xor
das
lods
lods
mov
mov
sub
add
cmpsb
push
movsb
dec
testl
in
xor
jbe
push
mov
lahf
jl
jge
ljmp
int
lock
sbb
and
pop
sbb
repz
pop
ret
push
xor
mov
add
pop
mov
dec
push
sti
mov
ret
addr16
lret
ss
jo
jge
stos
add
and
into
mov
sub
pushf
aam
addr16
out
cltd
popa
cmp
lods
sti
xchg
jo
xor
pusha
jns
mov
lds
jb
mov
or
sub
es
pop
ret
sub
jp
sbb
cltd
lret
sub
test
pop
xor
cmp
xchg
shr
xor
xor
icebp
ja
in
jnp
insl
jbe
addr16
addr16
stos
mov
dec
jno
add
enter
inc
insb
mov
js
loopne
pop
adc
fiaddl
into
jle
sub
imul
sbb
mov
dec
or
aas
in
push
pop
fidivrs
adc
ret
lret
mov
mov
aas
out
cli
mov
push
in
rclb
push
icebp
xor
ret
pushf
arpl
outsl
cltd
fstps
and
xchg
and
in
std
fiadds
push
add
pop
sub
push
fbstp
rcr
mov
mov
cltd
push
inc
sub
adc
push
jns
add
add
jmp
das
pop
push
xchg
sub
cmp
cmc
in
sbb
fdivrl
mov
mov
test
mov
inc
addr16
loop
xchg
sbb
push
xchg
and
and
cmpsl
jns
push
fimuls
and
mov
and
pop
movsl
add
adc
push
lahf
xchg
ret
fcmovnbe
lods
js
add
and
call
and
cltd
pop
cmp
aam
shrl
and
and
fcompl
outsb
or
cltd
dec
mov
movsl
pop
rorl
jmp
push
js
mov
ja
nop
mov
pushf
adc
mov
mov
jg
iret
mov
popa
inc
inc
jb
pusha
jo
dec
arpl
xchg
sub
fdivs
mov
testb
push
adc
out
jg
adc
or
sub
mov
inc
xor
in
hlt
or
sbb
in
adc
fildl
scas
dec
pop
adc
xchg
fisubrl
sub
sub
sub
fiadds
xchg
fcoml
jne
fnstenv
sbb
adc
and
in
addr16
pop
sar
jmp
or
xchg
shrl
dec
jecxz
add
fs
mov
inc
mov
and
xor
sub
push
insl
dec
push
scas
fdivrl
dec
mov
pop
mov
arpl
xor
lret
mov
push
gs
loop
stos
jne
adc
push
aad
mov
push
jle
adc
js
test
insl
roll
arpl
mov
cmp
and
adc
add
lea
cs
sti
cmp
push
adc
push
fwait
and
xchg
jmp
and
les
jle
and
in
push
jns
cmp
popf
insb
jno
mov
dec
or
nop
dec
shr
push
xor
arpl
add
add
aad
imull
push
cmp
pop
in
push
insb
xor
mov
enter
add
pusha
xor
cwtl
addl
in
lds
fdivr
cmp
jae
add
rclb
ret
lods
call
mov
fidivl
aad
xlat
ds
scas
mov
pop
icebp
call
pop
out
push
and
leave
sub
or
sub
jnp
adc
adc
lea
nop
add
add
stos
out
mov
or
jns
fmull
les
sbb
addr16
jne
fs
xor
jg
add
ret
fistpl
fadd
add
sub
outsb
jo
mul
mov
ljmp
xchg
xchg
mov
iret
mov
out
lret
sub
adc
enter
lods
mov
mov
lods
dec
mov
loope
xchg
out
inc
int
pop
push
push
cld
addr16
daa
mov
loopne
xor
push
mov
filds
mov
inc
push
mov
jecxz
jbe
ljmp
fwait
dec
jp
jb
adc
xchg
fisubrs
lds
jo
loopne
and
arpl
adc
ror
int3
fwait
pop
push
or
mov
leave
sub
dec
mov
subl
mov
push
or
sti
dec
cmp
shll
cmp
or
fstl
pop
xchg
sahf
xchg
ss
jle
mov
int3
ljmp
push
hlt
xchg
dec
gs
lahf
add
repz
lods
lcall
cs
lahf
nop
cmc
adc
sub
mov
add
dec
les
cli
mov
mov
mov
mov
clc
ljmp
mov
dec
jge
jge
shlb
inc
dec
ja
adc
je
ds
push
dec
or
leave
lret
add
jmp
aaa
clc
push
test
aam
into
pop
shrl
xchg
aaa
mov
out
shll
fwait
xchg
adc
ret
inc
adc
iret
xchg
arpl
xchg
movsl
das
lret
stos
dec
jmp
mov
roll
pop
cltd
les
lret
mov
aas
xor
btr
inc
add
mov
mov
xorl
and
mov
dec
jmp
mov
outsl
movsl
dec
lret
push
scas
lret
push
icebp
popa
adc
sub
xchg
scas
ret
mov
dec
jecxz
jo
cmpsb
pop
mov
add
leave
jno
xchg
add
ror
lahf
gs
test
inc
mov
cmc
jmp
push
and
es
cld
xor
sbb
movsl
sub
in
sarb
xlat
clc
std
pop
push
adc
sub
add
aas
int3
divl
repnz
in
push
leave
int3
xchg
xchg
arpl
lods
and
fs
sub
mov
cmp
push
push
scas
ret
mov
daa
and
dec
sbb
sub
jo
push
pop
lods
in
mov
xchg
push
and
mov
fstpl
lods
push
iret
adc
popa
clc
pop
imul
or
xchg
js
push
lea
jle
xchg
es
shrb
or
adc
adc
jo
inc
add
mov
je
adc
in
mov
mov
push
mov
stos
dec
cmp
xlat
xor
loope
dec
les
cmp
mov
fldt
rcrl
icebp
cmpxchg
mov
dec
call
push
mov
das
xor
adc
or
lea
push
into
jno
call
cmp
aaa
mov
cmpsl
inc
fs
xor
jg
cmp
dec
add
xor
adc
dec
in
in
testl
mov
dec
lods
stc
pop
jnp
fbld
in
mov
arpl
push
xchg
mov
dec
shlb
mov
addb
sub
mov
shrl
ss
testb
insb
xorb
push
xchg
jbe
push
xor
cmp
jmp
imul
pop
mov
out
dec
shlb
add
sbb
fistpll
adc
std
paddsw
insl
lods
cld
jl
mov
push
jmp
inc
popa
push
mov
pop
out
scas
insl
outsb
xchg
adcl
in
insl
inc
call
and
sub
and
ret
xchg
mov
inc
mov
or
fdivrs
mov
add
cld
in
cmp
subl
push
or
inc
add
lcall
roll
std
fst
mov
add
or
xchg
lahf
push
push
push
test
incb
lea
call
mov
mov
fwait
jge
in
sub
in
jno
mov
mov
repz
sub
adc
mov
or
or
rcpps
sbb
addb
pushf
pop
inc
cli
pop
xchg
es
aad
sub
popf
sbb
sahf
sbb
push
aam
dec
xor
in
nop
push
stos
dec
inc
popf
push
inc
mov
nop
hlt
adc
cmpsb
rorb
sti
xor
xchg
jo
cmp
cli
sub
out
sub
jl
movsl
in
je
pushf
mov
sarl
cwtl
sti
mov
sub
icebp
inc
aam
flds
xchg
sbbb
cld
mov
or
ffree
outsb
mov
ficoml
out
pop
ret
and
in
mov
ffree
adc
in
stos
aad
rcrb
ds
xor
push
and
orl
aad
mov
sbb
test
push
ret
and
rorb
ljmp
jecxz
push
frstor
dec
popa
mov
pop
nop
jns
adc
xchg
imul
cmp
out
cmc
ljmp
stc
test
sub
out
sbb
mov
xchg
mov
test
dec
xor
push
mov
aam
clc
jecxz
ljmp
mov
in
loope
xor
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
sahf
repnz
mov
jle
outsb
ss
push
jp
or
jb
inc
mov
sbb
cli
in
push
lea
inc
lods
je
rclb
inc
repnz
ljmp
mov
jb
add
xor
ret
cmp
inc
repnz
andb
pop
mov
out
mov
jb
add
xor
ret
repnz
pop
mov
ljmp
faddl
jge
push
sbb
sub
xor
jno
js
mov
pop
mov
dec
div
lds
lock
xchg
fwait
push
xlat
test
or
lcall
lods
push
arpl
decl
sti
xchg
jb
arpl
adc
inc
pop
loop
pop
mov
mov
loop
pop
fnstsw
push
mov
stos
repnz
call
cltd
out
push
popf
cmp
dec
push
xchg
ja
fimull
pushf
mov
xor
mov
xorb
fisttpll
sub
enter
call
aaa
jecxz
pop
jb
jae
pop
hlt
aad
test
sub
xor
push
loop
repnz
mov
push
mov
add
pop
push
lods
adc
fwait
pop
out
dec
xchg
arpl
pop
loop
daa
mov
mov
mov
popa
and
jae
ret
and
lret
loop
push
mov
cmp
sbb
incb
bound
mov
xorl
andb
pop
mov
out
xlat
jb
add
xor
rclb
inc
repnz
andb
pop
mov
out
xlat
jb
add
xor
rcrl
dec
iret
jns,pn
movsl
je
mov
in
mov
icebp
inc
pop
dec
push
and
call
lea
ljmp
fistl
mov
cmp
movl
sub
iret
adc
imul
int
imul
test
lcall
jle
cmpsl
pushf
push
inc
mov
cltd
jg
es
adc
scas
pop
je
jl
lods
lahf
in
fcmovb
pop
and
cld
fistps
mov
aam
push
push
xchg
lds
sbb
dec
add
push
sub
lock
test
ret
ds
sub
push
pop
aaa
in
rcr
push
out
daa
mov
sub
stos
in
js
mov
jnp
lcall
jbe
sub
inc
stc
daa
pop
push
lahf
pop
and
scas
jae
push
or
fldcw
fsts
jp
xor
iret
add
mov
mov
jecxz
dec
mov
nop
aad
adc
enter
cmp
jae
mov
scas
lahf
push
jmp
cmpsl
shrb
xchg
cli
pushf
mov
xor
addr16
ja
std
outsb
shrb
mov
leave
cmp
out
pop
sbb
fsubrp
inc
xchg
leave
loop
xchg
inc
cli
sbb
dec
sub
call
and
sub
mov
jmp
cmpsb
pop
push
cli
cmc
adc
mov
loope
dec
sbb
cmp
into
orb
shr
repnz
cmp
cmp
lods
in
dec
xchg
adc
pop
jae
adc
mov
inc
fisttps
mov
adc
dec
adc
inc
outsl
mov
inc
or
push
and
das
icebp
jge
test
fwait
rcll
arpl
or
fisubs
sub
scas
or
inc
adc
notb
adc
leave
aas
adc
xchg
jbe
dec
pop
leave
push
xlat
int
and
mov
xor
mov
loope
roll
push
and
xor
outsb
dec
lods
pop
les
xchg
jl
pop
cmc
into
in
cmp
mov
pop
lcall
hlt
jb
mov
dec
sarb
int
add
iret
rcr
mov
mov
adc
inc
clc
rolb
ror
aam
cmpsl
cmp
sti
rorl
push
xchg
xchg
sub
push
xchg
push
cld
xchg
xchg
inc
xchg
push
pcmpeqd
pushf
push
les
pop
cmp
xchg
lds
xchg
mov
test
jecxz
arpl
pop
jmp
outsb
hlt
inc
shll
push
and
fistpl
lret
mov
insl
push
xorl
bound
mov
pop
mov
xor
aam
and
loope
iret
add
je
jp
adc
in
inc
pop
mov
add
mov
cltd
mov
xchg
mov
or
popf
xchg
popa
sbb
sti
mov
mov
mov
clc
sub
outsl
cli
pop
clc
or
je
cmp
out
xchg
out
outsb
sub
mov
insb
push
stos
not
pop
pop
negl
outsb
xchg
icebp
cmc
xchg
ficoms
ret
jle
bound
in
icebp
adc
je
and
dec
jg
jne
push
mov
mov
mov
push
pop
inc
arpl
inc
stc
popf
pop
and
mov
jmp
jmp
test
lcall
pop
and
or
mull
push
fwait
jne
xchg
pop
cmp
out
dec
add
sub
xchg
cwtl
mov
pop
mov
sti
outsb
dec
xor
outsl
add
data16
adc
xchg
sub
pop
fstpt
push
sbb
mov
push
je
push
add
mov
mov
mov
jmp
sarb
fnstsw
arpl
insl
fisubs
lret
cmp
cs
xor
pop
outsb
pop
mov
addb
imul
stc
adc
mov
and
and
lcall
push
xchg
fwait
les
add
addr16
jbe
xor
fwait
dec
dec
mov
xor
jns
push
jno
call
and
into
fcoms
dec
outsl
mov
inc
or
sub
lcall
jmp
es
jl
inc
js
cwtl
pushf
mov
into
mov
pop
imulb
rol
mov
sbb
mov
cld
cmp
inc
dec
cmp
xor
into
add
rcrl
add
ret
sbbl
jmp
mov
in
fcom
addb
dec
or
insl
pop
cmp
lods
xchg
xchg
xor
in
mov
fdivrl
fdivs
stos
test
sbbb
sub
inc
or
xor
fcomp
jl
in
iret
out
pop
lds
or
dec
popa
pop
push
decb
out
mov
hlt
inc
out
test
scas
sbb
scas
push
and
jne
mov
push
test
and
pop
add
call
dec
mov
das
int
rcl
mov
adc
ss
test
sub
movsl
scas
inc
int3
mov
pop
xchg
xchg
push
dec
iret
icebp
fdivrs
xchg
cmc
xorb
and
mov
cmpl
cmp
nop
outsl
into
mov
mov
jl
ficompl
lods
cld
js
loopne
pop
outsb
push
adcl
in
es
test
in
loopne
mov
pop
and
mov
loop
je
mov
aam
call
ret
jmp
jle
jne
and
mov
dec
push
test
test
push
jecxz
jbe
xchg
cmp
pop
jns
insl
xor
sahf
test
pop
sub
insb
push
push
stc
xchg
jns
mov
xchg
fwait
add
mov
cmpsl
lcall
xorl
jl
lahf
inc
out
sbbb
mov
stos
xchg
sbb
dec
imul
shlb
sbb
mov
adc
dec
loope
sbb
inc
mov
mov
movsb
cmp
xchg
aaa
scas
add
cmp
mov
xchg
rorb
or
popf
jg
mov
cmpsb
mov
pop
and
test
aad
mov
hlt
outsl
adc
jbe
mov
imulb
lds
and
testb
aam
mov
mulb
push
or
in
bound
or
popf
cli
rclb
in
or
ret
pop
cmp
add
loopne
push
test
stos
pushf
dec
pop
xor
add
fstl
inc
cmp
pop
test
pop
xchg
and
add
xchg
mov
dec
cmp
cmpsl
shl
adc
pushf
pop
xor
xor
jl
push
xchg
inc
inc
push
jne
dec
inc
xor
daa
pop
cmp
xchg
pop
push
lret
nop
movsb
push
sub
mov
std
mov
mov
and
mov
cld
mov
ss
mov
jle
cmp
adc
test
dec
lcall
mov
pusha
ds
or
push
ja
addr16
adc
cmp
push
cmpl
sbbl
adc
xor
jle
rcrl
xor
sahf
jmp
mov
push
inc
inc
aam
push
sub
inc
rcr
call
out
xchg
jg
gs
rcl
mov
push
ffreep
xchg
out
inc
fwait
mov
mov
and
inc
enter
adcb
repnz
lret
pusha
daa
add
into
mov
add
decb
js
clc
jmp
mov
jns
out
ret
mov
cmp
cld
lret
adc
cmp
push
mov
sti
mov
push
ret
fistpll
push
insl
addr16
xor
xor
mov
sahf
adc
std
ljmp
icebp
jbe
enter
out
sti
cmpl
mov
xor
inc
dec
mov
or
pop
pop
jns
jae
jae
jb
dec
adc
mov
aam
stc
loope
gs
xchg
mov
das
js
mov
je
xor
lret
xor
jmp
addl
icebp
imul
dec
into
out
aam
cs
insb
int3
inc
xchg
cmp
add
mov
ret
scas
adc
xor
mov
daa
stc
sbb
and
lret
mov
imul
sub
daa
pop
sbb
loope
out
mov
lods
add
and
jae
shrb
in
test
xor
lods
fldenv
test
sbb
clc
scas
fistl
lock
dec
or
in
push
cwtl
push
push
inc
add
push
add
jbe
jp
mov
and
jp
or
add
xchg
or
fs
push
mov
or
icebp
scas
or
xchg
push
and
mov
fcoms
loope
ret
out
xor
cmp
sbb
lcall
jb
stos
incb
mov
xlat
jge
fstpt
mov
adc
sbb
adc
and
daa
jg
push
xchg
lds
sub
pop
popa
fisubrl
inc
scas
pop
rcrb
dec
push
cmc
xchg
aad
xchg
jne,pn
gs
lea
cmc
scas
int
push
or
ljmp
clc
adc
cmpl
mov
sub
xchg
hlt
sti
popf
add
call
adc
cmp
lret
in
out
jl
inc
push
popf
push
aas
push
pushf
mov
stos
pop
inc
adc
push
mov
jg
sti
outsb
pop
jne
jne
add
push
insl
movsl
jl
mov
mov
fdivrl
daa
loope
xor
cmova
enter
mov
lds
mov
psrlq
jp
jnp
inc
mov
call
iret
sahf
xor
adc
mov
jo
loop
inc
dec
mov
int
and
dec
lcall
cmp
icebp
mov
in
iret
aas
adc
fwait
rcl
sahf
repz
add
mov
inc
push
insl
jbe
pop
add
pop
dec
sbb
in
mov
pop
les
mov
and
rcrl
jne
push
ficomps
and
rcll
push
es
push
cmp
adc
mov
xor
in
inc
sbb
pop
cmp
add
or
push
mov
repz
mov
sbb
jno
push
jp
loop
clc
xor
jb
pop
fcoms
dec
mov
add
inc
cmpsl
gs
outsl
mov
add
push
mov
jo
mov
xchg
adc
into
xor
in
push
sbbb
and
pop
push
mov
test
adc
xlat
dec
cltd
test
jge
out
lea
cltd
add
shrl
movsl
jle
push
mov
fisubrl
pop
sbb
ret
inc
mov
fistpl
lahf
in
popf
adc
and
pop
dec
inc
ja
xor
out
das
das
es
scas
mov
subl
nop
idiv
inc
mov
jp
xchg
jnp
inc
adc
add
outsl
pop
dec
sbb
sub
lods
fcomip
imull
repnz
sub
and
push
mov
getsec
dec
shll
fisubl
xchg
cwtl
andb
adc
or
daa
sahf
fistpl
sahf
jl
insb
aaa
call
add
push
insb
jns
push
mov
test
addr16
push
scas
das
sub
sbb
pop
push
adc
dec
xchg
cmp
sub
add
call
gs
test
in
mov
aaa
and
mov
arpl
sub
pushf
outsl
jo,pt
jge
push
inc
mov
lods
rorl
fbstp
cmp
jae
ret
xor
imul
xor
cmc
xor
daa
mov
and
outsb
and
lea
jle
sbb
mov
mov
sbb
adc
pop
cld
xchg
push
mov
lea
fisubrs
or
mov
fincstp
stos
in
cli
popa
lods
mov
mov
divl
cltd
sbb
sbb
mov
idivl
pop
fiaddl
scas
in
sbb
in
jmp
jne
les
pop
rol
lea
jg
ror
adc
mov
sub
out
inc
lret
arpl
xchg
jne
in
jae
xor
inc
iret
xchg
incl
sub
ss
rcrl
cltd
out
mov
add
aad
fsubrs
not
sub
cmp
xor
in
outsb
popa
decl
mov
cld
jns
lcall
push
roll
stos
push
into
jbe
lahf
mov
sbb
dec
pop
mov
cmpsb
fistl
sub
setge
ror
sbb
jmp
jle
dec
or
xchg
xchg
insl
mov
stos
cmp
xchg
mov
dec
mov
sub
cli
sbb
pushf
mov
fcoml
jae
hlt
add
add
out
inc
pop
bnd
inc
ret
lods
adc
gs
xchg
lret
test
jmp
icebp
outsb
rcr
lods
sti
mov
cmp
add
sub
xchg
sbb
paddusw
test
pop
shr
dec
pop
add
and
mov
lds
sub
aas
push
adc
mov
pop
and
fstps
pop
cs
clc
je
jae
ja
pmaxub
jmp
mov
fildll
push
mov
sahf
adc
lea
outsl
add
pop
mov
out
lret
and
jle
test
adc
cli
or
sahf
push
lahf
pop
pop
fwait
into
add
or
lds
jge
inc
insb
or
xorl
clc
mov
mov
fsts
movsb
sbb
fidivl
sbb
arpl
insl
dec
cwtl
jg
scas
leave
push
int3
aad
ds
or
pop
testl
lret
pop
cwtl
loop
jo
hlt
dec
dec
lret
lods
loopne
sub
inc
jl
sbb
sbb
lea
or
call
push
mov
insl
cmpb
add
mov
mov
cwtl
add
jns
call
push
lods
or
shr
scas
lea
fdivrs
jb
jecxz
pop
xchg
jb
cmp
loope
sub
ja
fs
pop
adc
mov
xchg
add
pop
shrl
lds
ret
aaa
aam
imul
xor
mov
push
testl
jge
outsb
test
or
ljmp
mov
mov
inc
popa
int
rorb
sub
cwtl
mov
add
je
nop
or
loop
inc
cmp
mov
jne
jb
xchg
mov
ror
int3
or
or
movsl
cli
xchg
in
pusha
xchg
popa
adc
testb
mov
mov
xorb
inc
sub
add
lcall
shl
int
jle
mov
sub
xchg
movsl
lods
sub
push
xor
invd
test
jo
in
mov
dec
push
lret
movsb
pop
rorl
arpl
mov
cmp
mov
mov
xor
jno
jecxz
pop
mov
add
jns
das
inc
or
aad
into
xchg
pop
test
mov
jb
jno
sub
xchg
mov
loopne
cmpsl
loope
dec
imul
inc
aaa
jmp
fcoml
sti
jno
das
mov
sahf
imul
pop
mov
xor
fnstenv
lret
inc
dec
scas
xchg
dec
and
cli
xchg
dec
mov
xor
imul
aam
lods
xor
inc
sbb
pop
mov
loope
sub
test
movsb
pop
loope
mov
inc
add
ud2
mov
pop
add
mov
subb
gs
push
and
addr16
pop
adc
jae
mov
sbb
cltd
add
sub
pop
add
mov
dec
pop
dec
push
into
xchg
adc
jns
or
mov
sub
out
shrb
sub
pop
jmp
nop
stos
das
xchg
adc
mov
clc
pop
stos
gs
or
lds
repz
mov
clc
test
xor
cmp
add
aam
pop
imul
jge
mov
add
or
inc
jmp
mov
testb
xor
in
xchg
and
xorb
insb
jne
jg
adc
add
ss
pop
fistl
push
mov
mov
xor
rcrl
jb
in
xchg
leave
mov
mov
or
gs
sbb
xchg
mov
jl
stc
xchg
outsb
mov
push
and
xchg
mov
xlat
fists
or
fildll
out
adc
test
mov
or
mov
cmc
xchg
sbb
adc
pusha
jl
sub
jne
std
pop
mov
cmp
adc
or
cli
insl
ffreep
cmp
push
adc
test
loopne
insl
sub
sbb
sbb
dec
fldt
jno
lock
xor
jg
jecxz
xchg
roll
aad
loop
sbb
adc
fisubl
inc
mov
and
and
mov
and
scas
aam
mov
jb
sbb
fs
pushf
inc
push
or
jno
int3
pop
popa
jge
mov
jne
fistl
int3
lcall
and
out
sbb
and
fsubrs
dec
pop
cmpsl
inc
or
lret
loopne
jns
lds
pop
sub
jle
xor
std
and
xor
ljmp
sub
mov
sub
jbe
inc
push
pop
aas
std
mov
pop
ret
std
pop
shrl
cmp
dec
add
test
jp
adc
adc
js
ja
pop
xchg
repz
loop
push
fwait
loope
sub
loopne
aas
lods
iret
es
inc
dec
in
clc
push
mov
int3
pop
ja
cwtl
sub
pop
les
and
push
adc
inc
xchg
mov
not
scas
loope
out
popa
pop
out
sar
sbbb
std
pop
adc
inc
stos
adc
xchg
xor
or
sti
out
dec
dec
mov
pop
add
xor
add
test
cld
enter
pop
mov
sbb
mov
jbe
inc
xor
pop
jecxz
and
pop
inc
fsubl
call
sbb
fsts
movsl
lahf
push
dec
jo
push
push
test
sarl
mov
push
xor
stos
sti
adc
scas
adc
out
lods
jae
push
push
mov
lcall
dec
je
mov
mov
js
cmpsl
lcall
jo
stos
mov
pop
inc
sahf
jle
mov
enter
bound
out
mov
repz
xchg
shl
and
adc
inc
mov
mov
add
xchg
mov
je
out
fwait
clc
mov
sub
inc
fstsw
icebp
stos
xor
xlat
roll
enter
jecxz
and
and
xchg
jmp
inc
push
mov
cmp
jl
dec
mov
dec
fisubrs
sub
in
push
bound
add
xchg
cmp
insb
loop
mov
add
lret
adc
cmc
out
mov
call
rcl
outsb
pusha
arpl
jae
je
cltd
int3
negl
lods
xchg
mov
push
call
data16
imul
in
pop
jae
or
test
addr16
or
icebp
jecxz
movsb
insb
adc
xor
jmp
fs
js
cmp
add
or
dec
sub
cmpsb
dec
add
fnsave
leave
push
inc
into
jmp
inc
sarb
sbb
mov
ret
inc
sbb
push
cld
cwtl
mov
pop
dec
and
popf
push
adc
sbb
push
sub
mov
xorb
and
pop
in
stos
nop
lods
jecxz
lret
mov
sbbl
mov
and
mov
adc
jg
movntps
xor
scas
add
add
lret
cmp
sub
in
and
pop
push
jmp
lahf
scas
mov
xor
push
popa
mov
jp
push
xchg
xchg
adc
and
repnz
into
mov
lods
popf
inc
test
lods
sub
and
xlat
and
cltd
sbb
jle
enter
sub
ja
bound
fucomip
popf
inc
lods
push
sbb
loope
dec
jge
lods
int3
lea
sub
fwait
pusha
mov
dec
push
gs
inc
push
daa
aaa
pop
adc
mov
sub
add
ss
dec
dec
sub
fbld
call
cmpb
add
out
fs
jne
jne
add
out
cmpsl
xchg
test
jno
popa
aam
xlat
hlt
movsb
stos
repz
fwait
add
scas
pop
pop
mov
mov
inc
add
inc
into
mov
sub
pop
js
int
mov
dec
daa
inc
cmp
insl
mov
inc
gs
and
mov
cmpsb
pop
xchg
mov
or
and
xor
jb
cltd
add
das
and
jae
adc
call
dec
insl
push
movsb
and
divl
and
xor
pusha
xchg
mov
push
jl
test
push
cmpl
es
adc
inc
repnz
andb
pop
mov
out
xlat
jb
add
xor
rclb
inc
repnz
andb
pop
mov
out
xlat
jb
add
xor
push
push
aaa
bound
cmpsl
andb
pop
mov
out
daa
jb
add
xor
cmp
or
xorb
pop
mov
sbb
jge
movl
lcall
xchg
cltd
mov
popf
ret
nop
lret
and
ja
adc
arpl
xor
inc
daa
push
fbld
out
xchg
jecxz
repz
cmpsl
roll
and
pop
add
pop
arpl
aaa
inc
daa
push
or
andl
xchg
iret
repz
ret
pop
rcll
sub
jae
adc
xor
inc
es
push
xchg
mov
nop
jg
and
movsb
xor
data16
in
inc
int3
fs
stos
jb
push
lcall
outsb
insb
sbb
pushf
iret
and
rcrl
mov
xchg
mov
stos
scas
xchg
lcall
mov
js
les
int
push
cltd
shr
arpl
push
xchg
pop
mov
xchg
sub
es
cwtl
in
lcall
jb
cmp
push
daa
outsb
push
cmp
test
jmp
stos
pop
ss
push
add
dec
or
jg
xor
pop
push
scas
fdivrl
adc
push
aaa
push
in
mov
orl
mov
pop
shll
add
ja
sbb
inc
inc
adc
mov
mov
stc
mov
mov
cmpsb
mov
daa
insl
push
jge
push
imul
xlat
loop
stc
mov
sub
incb
aam
outsl
pushw
pop
adc
jg
or
sbb
ss
hlt
movl
ret
cmpsl
rcll
inc
xor
adc
arpl
jae
inc
daa
push
xlat
mov
out
xchg
jecxz
repz
cmpsl
rcll
inc
xor
adc
arpl
jae
inc
daa
push
xlat
mov
mov
in
xchg
ret
lods
adc
div
push
pop
mov
and
xchg
jp
frstor
xchg
add
jnp
sub
sarb
mov
xlat
scas
jmp
bound
int
xor
test
mov
inc
out
xchg
sbb
push
mov
loop
adc
nop
sti
je
push
lock
addl
xchg
fnstenv
dec
sub
fnstenv
and
xor
jb
sbb
shlb
lahf
stc
mov
mov
xchg
mov
add
sti
jne
dec
or
add
cmp
cmp
lock
movl
ds
pop
xchg
shlb
sbb
xorb
sbb
fimull
test
hlt
rcr
addr16
das
ret
ss
cmpsl
jle
mov
sub
lret
test
mov
fildl
scas
int3
cmp
jmp
test
shlb
fildl
or
rcrb
inc
and
adc
fwait
subl
mov
jbe
mov
add
pushf
sti
ret
in
fldl
xchg
mov
loope
test
lret
enter
jl
hlt
sbb
ret
scas
ret
mov
push
or
movsl
in
call
hlt
dec
inc
out
in
int
fcmovnbe
xchg
out
rcr
std
repz
idiv
imul
cmp
sbb
xchg
and
cli
push
push
sbb
pop
mov
jno
push
loopne
push
jp
fildll
outsl
shlb
lret
mov
movsb
outsb
and
jno
fisttps
jo
movsb
ret
scas
add
mov
xor
test
sbb
adc
xor
mov
and
shlb
imul
inc
pusha
out
xchg
enter
movsb
or
xlat
jg
ss
mov
push
cmpsl
aad
pop
icebp
insb
iret
xchg
add
hlt
popf
pop
subl
addb
les
jl
adc
test
mov
add
imul
pop
lock
add
mov
mov
inc
adc
pushf
lahf
aas
cmp
add
pop
cmp
cmp
mov
and
inc
cli
les
xchg
cmp
add
inc
mov
pop
mov
rcl
sti
pop
dec
xchg
xor
leave
xchg
mov
sbb
out
sahf
mov
jecxz
or
mov
out
test
mov
fidivs
divl
jbe
cmp
inc
les
test
pop
jnp
iret
addb
js
cs
sahf
cmpsb
adc
test
loopne
imul
enter
cmp
cmpsb
subl
fs
or
es
and
fdivs
adc
or
adc
cmp
sbb
ret
lret
push
std
pushf
push
cs
cmp
shrl
xor
subb
add
xor
iret
mov
insl
jbe
mov
push
and
jmp
cs
push
dec
push
add
ljmp
cmp
add
vmptrld
es
and
mov
xor
push
fstl
xchg
xor
andl
ret
fsubp
repnz
andl
test
int
int
or
dec
mov
dec
ss
aas
jb
pushf
inc
shlb
cmp
das
pop
pop
lahf
pop
xor
cmpsb
test
outsb
in
cmp
xchg
sbb
adc
stc
push
inc
out
fldl
lahf
out
inc
imul
cmc
js
jb
ret
cmp
rcl
int
mov
arpl
lds
xor
fwait
jmp
jecxz
sar
mov
add
push
mov
stc
jno
pop
sti
and
xor
out
jo
out
push
jecxz
mov
adc
insl
xchg
jl
push
mov
adc
mov
push
fsubrl
out
enter
jp
mov
sbb
lcall
cmp
xchg
scas
out
mov
jb
cmc
or
mov
arpl
cltd
aam
ss
pop
icebp
sbb
sbb
jl
xchg
lock
int3
je
icebp
gs
push
sbb
shr
ja
and
pop
enter
cmp
mov
pop
or
or
mov
aas
out
icebp
flds
enter
popa
lret
adc
pop
inc
ja
xor
test
fsubl
cmp
mov
mov
lcall
pop
ficoml
cmp
mov
nop
call
popa
jecxz
cwtl
in
scas
mov
push
pop
or
mov
loope
jno
shlb
sub
int
aam
sbb
in
fcoml
das
vzeroupper
pushf
lret
insb
sbb
inc
sbb
adc
idivl
test
ror
push
repnz
cmp
push
scas
cmp
add
and
mov
clc
jecxz
mov
scas
jb
xchg
xchg
nop
push
scas
test
imul
test
iret
sub
pop
pop
jmp
pop
ljmp
cld
mov
cwtl
iret
jns
sbb
das
mov
push
adc
out
pop
mov
xor
divb
fidivl
cmp
loopne
or
add
adc
push
jb
mov
sub
mov
jge
lcall
and
test
cmp
stos
in
je
fsubrl
ja
fimull
mov
popf
add
xchg
inc
or
lahf
or
inc
mov
sub
push
dec
xchg
pop
cwtl
ret
stc
ret
loop
adc
cwtl
lods
mov
adc
ret
jle
push
imul
rclb
fildll
sub
cmpsl
inc
jno
adc
cld
js
loop
sub
sbb
imul
mov
lret
add
bound
jnp
adc
mov
and
rcpps
dec
adc
xor
cmp
out
adc
mov
int
mov
pop
mov
adcl
pushf
call
mov
or
lahf
and
mov
faddl
pop
adc
cmc
bound
in
push
xor
xor
mov
pop
lock
adc
rcrb
fwait
adc
loope
mov
add
outsb
inc
lea
push
stos
repz
xlat
xor
fcmovu
bound
dec
or
add
les
scas
and
lods
stc
or
push
lods
ljmp
dec
pop
les
mov
adc
or
jnp
xchg
xchg
mov
sbb
je
mov
loop
jne
daa
imul
repz
cmc
test
sub
pop
int
push
cmp
mov
adc
adc
xlat
flds
inc
mov
leave
cmp
and
mov
cwtl
mov
notl
call
mov
pmaxsw
lcall
or
rorl
jle
pop
pop
outsb
aas
ret
cmp
dec
mov
daa
fisttpll
in
ljmp
hlt
mov
cmp
sahf
pop
adc
pop
sub
test
xor
repnz
xlat
push
neg
scas
fld
mov
popf
sbb
adcb
or
das
dec
js
inc
mov
leave
jmp
jp
iret
sbb
mov
sub
fists
and
ret
mov
stc
ljmp
out
and
mov
push
lds
lret
loopne
rdpmc
lock
loop
ja
add
ftst
shl
jge
addr16
in
mov
mov
or
data16
adc
inc
aaa
mov
int3
xor
scas
adc
xchg
xchg
and
int
jl
mov
icebp
ret
adc
sub
dec
shrl
mov
bound
sbb
repz
xchg
inc
push
movsl
sub
cmp
or
xchg
xchg
and
addl
fldl
iret
add
aas
dec
dec
mov
xchg
fnstcw
xchg
adc
push
cmpsb
ja
es
xchg
inc
pop
or
subl
pop
nop
pop
jmp
and
push
inc
in
xor
fwait
cmp
into
fptan
test
sbb
jb
shlb
mov
cmp
adc
mov
xlat
and
test
xchg
xchg
or
int3
dec
mov
ss
and
int3
or
mov
lods
push
dec
and
hlt
inc
xchg
js
fisttps
into
push
test
push
mov
fbld
mov
outsb
and
cmc
fistpl
xchg
je
or
out
das
sub
clc
in
mov
cwtl
lcall
stos
dec
xor
inc
mov
pop
das
cmpl
inc
jns
adc
add
dec
lcall
adc
jmp
in
insb
push
jmp
or
loope
and
test
inc
sub
mov
fcompl
jg
enter
imul
in
dec
scas
lods
pop
jnp
sbb
push
out
push
dec
jae
mov
add
or
lea
cmp
pop
rcrl
cmp
data16
testb
fimull
mov
insb
mov
adc
jmp
add
and
push
mov
fadds
and
imul
rcrl
mov
flds
fs
sbb
dec
jne
int
rcrl
mov
pop
sbb
jns
sub
dec
nop
jns
loope
cmp
ss
test
lods
bound
jge
jecxz
sbb
lahf
shlb
aas
cmp
les
fwait
gs
fcmovbe
inc
dec
xor
xor
rorl
fistpll
insl
scas
fwait
mov
aas
push
xchg
sbb
sbb
fbstp
mov
fucom
pushf
mov
outsb
in
rorl
sub
fcmovnb
jg
lret
scas
fwait
mov
gs
push
add
sbb
lods
scas
fsts
jecxz
add
xchg
sub
dec
cmc
mov
bound
cmp
popa
sbb
das
pop
popf
sti
cmp
pop
into
js
ss
xchg
outsb
pop
enter
push
and
adc
xchg
dec
jmp
pop
mov
jl
inc
lcall
cwtl
loope
imul
out
cli
jl
add
ds
insb
push
or
pop
test
icebp
repz
das
fwait
mov
ret
jnp
insl
jns
ficoms
add
insl
sub
sbb
mov
lcall
lcall
and
popf
rolb
js
cltd
clc
outsl
nop
xchg
pop
lcall
mulb
cmpsb
sub
cs
add
jecxz
sbb
outsb
std
mov
and
push
les
mov
mov
insb
shll
ficompl
fcoml
push
fldt
inc
sahf
jae
rcrl
adc
ret
insb
sbb
ret
fmull
xchg
adc
adc
mov
ljmp
inc
negl
mov
mov
jne
aaa
lret
jle
push
arpl
pop
and
loope
and
mov
in
cmpb
push
and
sub
enter
arpl
lahf
dec
jne
fbstp
push
jnp
icebp
rolb
xor
push
push
push
out
insb
mov
movl
dec
fadds
int3
js
loope
in
xor
ljmp
pop
movsl
cmp
hlt
imull
decl
inc
mov
sub
mov
sub
mov
pushf
sbb
insb
lods
cmpsb
xchg
inc
jns
push
test
or
mov
sti
and
cmp
outsl
and
cmpsl
push
int3
dec
ja
ljmp
xor
mov
mov
ds
inc
pop
dec
das
orl
out
or
stos
adc
mov
repz
pop
popa
in
or
imul
jbe
push
xor
pop
xchg
mov
add
xchg
jge
pop
jbe
fildl
mov
out
jp
xchg
cmp
push
std
clc
fadd
punpckhbw
jp
push
fisubrl
sbb
clc
je
jmp
xchg
jecxz
movsb
fdivrl
pop
and
sub
mov
popf
out
iret
in
sahf
sbb
mov
push
xor
push
iret
push
bound
fidivl
xchg
lds
mov
inc
lods
pop
xor
iret
lret
dec
xor
mov
xchg
pop
or
mov
sub
dec
jge
lcall
les
pushf
popa
out
inc
dec
clc
gs
mov
push
repnz
aaa
sbb
gs
mov
sub
sbb
jge
lea
xchg
hlt
push
push
int
cmpsl
popa
pusha
mov
test
movb
add
and
mov
ja
and
inc
jne
imul
inc
push
lcall
insb
jl
mov
pop
push
and
jge
test
adc
sub
xchg
out
push
imul
xor
lods
mov
push
shrb
ds
mov
sarl
sbb
dec
lock
lods
sub
movlhps
jbe
xor
jae
test
aad
or
shll
cmpsb
mov
cld
sbb
jecxz
sbb
push
sbb
out
pop
shll
decl
mov
sub
les
adc
shl
xchg
pushf
xchg
cmp
inc
mov
sti
ss
loope
or
enter
popf
pop
jnp
rclb
xor
adc
mov
lods
mov
pushf
push
mov
push
add
iret
xchg
add
leave
in
mov
outsl
add
sbb
dec
stos
out
xlat
fucomp
xor
adc
adc
stos
das
pushf
sub
inc
fisttpl
cwtl
das
jmp
rcrb
nop
pushf
rorb
repz
ja
sub
xchg
xor
flds
push
cmpsl
imul
jge
cmp
out
sbb
mov
repz
int3
es
or
repz
std
test
adc
or
loop
add
cmc
push
dec
sarl
dec
adc
and
cmp
outsb
push
sbb
mov
cs
jne
adc
or
xorl
jno
call
and
in
jecxz
aam
lods
jno
aam
jns
pop
mov
add
movsb
sub
jle
cld
cmpsb
mov
xchg
or
out
mov
inc
or
stos
pop
lahf
add
rorb
sti
sbb
jb
xchg
lods
sbb
sbb
leave
pop
aam
shlb
inc
xchg
lret
mov
fldt
jbe
imul
scas
ret
and
xor
popa
aas
mov
cli
pop
cli
fisubrs
mov
imull
cltd
add
imul
dec
in
mov
aaa
scas
fisttpl
inc
jae
sub
jns
adc
push
lret
in
hlt
push
out
fnstenv
inc
mov
movsb
fs
jo
int3
mov
clc
jp
mov
orb
rorb
mov
cli
in
js
imul
out
mov
push
add
or
add
jae
push
jbe
push
push
xchg
mov
xor
mov
push
xchg
nop
sub
jge
sub
push
push
aad
dec
cmp
inc
insl
mov
mov
push
or
inc
loopne
jle
push
aas
cltd
lea
pop
or
loope
pop
jmp
and
pop
fimull
push
fdivrs
adc
sti
sbb
xor
adc
xor
add
pop
test
mov
sbb
jmp
fnsave
cmp
ret
jg
test
cmc
in
cmp
fnstenv
insb
aaa
dec
cmp
xchg
inc
test
jae
mov
pop
cld
aam
adc
dec
divl
sarl
mov
jecxz
jb
sub
jp
aad
ja
pop
xchg
xchg
push
gs
mov
jg
aad
mov
sub
mov
add
ret
test
in
or
arpl
pop
xchg
fsub
sub
mov
jecxz
mov
xchg
sbb
xor
loope
add
sbb
repz
repz
add
dec
push
les
int3
cmpsl
scas
mov
mov
testb
mov
notb
shrl
mov
adc
fmull
add
pop
push
xor
mov
popa
stos
pop
out
adc
push
shll
pop
adc
mov
sub
lea
jnp
cli
aad
pop
jo
jns
mov
repnz
adc
iret
lret
fiaddl
lock
dec
adc
pop
out
pop
dec
push
and
lret
jl
sub
adc
bound
xor
and
inc
mov
jo
int
lods
sub
mov
mov
cld
dec
jmp
adc
or
lahf
cs
dec
push
pop
pusha
mov
cmp
adc
inc
out
mov
rorb
dec
pop
idivb
insl
adc
fldenv
xchg
cmovp
jl
cmpsb
add
and
mov
xor
push
repnz
dec
cli
fcomip
fisttpl
push
adc
nop
outsl
push
shll
jmp
mov
jge
popa
lods
test
outsb
mov
scas
loop
cmp
ja
mov
mov
jb
and
sahf
mov
aaa
cmp
aam
adc
clc
shll
cmp
xor
cs
mov
push
and
pop
xchg
sbb
popw
jl
mov
in
or
enter
std
inc
cwtl
inc
stos
cmp
xor
push
dec
cmp
js
out
cmpsb
mov
inc
cmp
mov
mov
dec
pop
adcl
test
jnp
mov
testb
pop
sbb
movsb
int3
cmp
scas
mov
xchg
stos
or
test
sub
fwait
ret
cli
pushf
push
jne
xchg
repz
pop
jns
inc
add
sbb
xchg
mov
nop
pop
arpl
sub
mov
lods
mov
icebp
js
popf
xchg
xor
arpl
jl
mov
push
push
cmp
ds
push
outsb
jl
outsb
fsubs
adc
add
ret
and
or
inc
enter
sub
dec
cmp
aam
dec
inc
sub
mov
push
add
jl
add
ret
pop
aad
addr16
jno
inc
lret
jecxz
or
shl
pop
xchg
xor
mov
lcall
or
mov
js
pop
iret
push
inc
mov
aad
mov
pop
sbb
jmp
aas
cmpsb
jo
push
or
cmp
subb
je
fisubrl
pop
in
jno
popa
outsl
pop
cltd
lock
lds
negb
mov
jecxz
pop
dec
xlat
xchg
test
outsl
out
pop
notb
or
jbe
push
int
aad
pushf
subb
or
and
xor
mov
into
test
xor
pop
push
xchg
mov
movsl
bound
mov
mov
cmpsl
xchg
sbb
cmp
dec
push
fwait
andb
das
xchg
inc
das
or
cmp
insl
je
stos
sub
scas
cmp
mov
inc
sti
push
push
insb
jnp
dec
push
call
cmpl
or
and
jbe
std
pop
pop
jnp
pusha
pop
test
test
jb
cmp
cwtl
xchg
cmpl
mov
fildl
xchg
inc
jmp
pop
xchg
mov
subb
fsubs
mov
leave
inc
inc
scas
mov
int3
fs
inc
add
xorb
pop
xor
icebp
push
aad
ljmp
cmp
inc
mov
mov
mov
bound
mov
xchg
sbb
or
inc
cmp
push
push
sar
and
pop
cwtl
jne
sbb
cmp
xor
pop
push
movsl
aaa
sbb
fwait
jecxz
xchg
sbb
loop
pushf
aaa
rorb
mov
cs
and
jbe
cs
adc
xor
les
jne
inc
enter
into
mov
push
int
in
push
jbe
jmp
mov
lcall
xor
mov
mov
and
imul
add
inc
cmc
cmp
inc
in
xchg
sub
testb
xchg
inc
sar
andb
scas
mov
scas
cmp
scas
lcall
stc
mov
in
data16
je
mov
dec
jb
lea
cmp
or
std
mov
or
sarl
sbb
cmpsb
test
cld
dec
or
inc
ficomps
cmp
fadd
dec
and
outsb
in
fsubl
out
daa
and
xchg
hlt
sahf
pop
clc
mov
hlt
mov
xchg
jae
dec
int
outsb
mov
lcall
adc
push
dec
sub
mov
cmc
mov
push
jmp
jne
push
xor
sbb
adc
lods
mov
stos
push
push
jne
sub
dec
shr
jle
jecxz
adc
daa
mov
xchg
sub
cmp
mov
cltd
bound
shlb
in
sub
subl
mov
cmp
xchg
jecxz
repz
cmpsl
rcll
inc
xor
adc
arpl
jae
inc
daa
push
xlat
mov
out
xchg
jecxz
repz
cmpsl
rcll
inc
xor
adc
arpl
jae
inc
daa
push
xlat
cmpsl
les
xchg
jecxz
repz
cmpsb
rcll
inc
xor
arpl
pop
bound
jae
inc
pop
push
iret
mov
iret
xchg
xchg
jecxz
jae
inc
daa
sub
fdivrl
fs
jmp
mov
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
and
xor
or
aaa
xor
cmpsb
lret
test
aam
in
hlt
and
and
xor
inc
jne
inc
fs
or
test
mov
test
aam
in
hlt
and
and
xor
inc
jne
inc
fs
je
test
aad
nop
xchg
push
ja
pop
add
and
out
fdivrp
insl
addr16
loope
insl
xchg
int3
push
outsl
xchg
stos
leave
push
lret
js
mov
inc
jne
mov
lock
mov
shlb
in
movsl
fiaddl
sbb
pop
xor
dec
cmpsl
aam
xchg
or
sbb
mov
in
sarl
inc
popa
aad
and
or
arpl
push
push
mov
cmp
and
mov
cmc
sub
jo
inc
xorb
int3
push
fnstsw
jnp
fmuls
pop
push
mov
xchg
jne
cmp
aad
sbb
ljmp
insb
inc
xor
xchg
lock
jne
jmp
add
xlat
loope
add
adc
and
xor
inc
jne
inc
fs
je
test
mov
cmc
aam
in
popf
inc
add
inc
and
xor
and
cmp
aad
rclb
arpl
movsl
mov
inc
push
xor
sub
sbb
or
shr
clc
notl
aad
mov
fwait
inc
inc
xor
push
and
push
inc
fs
je
test
mov
cmc
aam
in
hlt
and
and
xor
inc
jne
inc
fs
je
test
mov
cmc
aam
in
hlt
and
leave
push
mov
xchg
push
insl
bt
ror
sbb
push
stc
pop
fs
dec
out
mov
pop
xchg
jmp
imul
sbb
push
sbb
add
or
fcomps
add
repnz
xchg
pop
add
mov
popa
js
hlt
cmp
jns,pn
adc
inc
and
or
cmp
stos
xor
cld
imul
push
add
mov
jae
out
mov
cmpsb
cli
pop
pop
test
js
dec
jns
push
in
mov
cld
xchg
loopne
neg
imul
loopne
pop
mov
or
add
rorb
and
ret
out
push
lret
pop
outsl
aas
fcompl
mov
pop
das
jo
adc
mov
adc
jae
or
cwtl
ds
lock
aad
and
inc
mov
lods
mov
adc
push
pop
into
aas
fwait
ja
dec
mov
aam
repnz
jno
jg
sbb
loopne
mov
push
rcrl
sbb
jns
mov
add
push
pop
daa
mov
dec
lret
lret
xor
pop
jnp
loop
sbb
nop
mov
sbb
insl
rclb
mov
imul
mov
xchg
sub
mov
jae
push
rolb
lahf
rcll
or
pusha
push
daa
fwait
nop
icebp
into
dec
aad
imul
sbb
add
inc
sbb
lret
jb
fiadds
arpl
movsb
sbbl
dec
mov
pop
sbb
pop
jl
loopne
jle
xor
out
test
jo
sub
loope
or
fwait
jae
outsl
adc
xor
push
loopne,pt
cmp
xchg
je
outsl
inc
notl
dec
jge
mov
pop
mov
daa
mov
in
cmp
ret
jns
out
loopne
fcmovb
mov
sub
ds
sbb
jmp
fs
adc
int3
mov
ret
mov
push
insl
fisubrs
les
andb
mov
jae
and
enter
mov
test
xor
pusha
add
add
cmp
scas
pop
in
push
push
xor
pop
in
sahf
movsl
jns
rcrb
push
mov
aaa
sbb
cmp
xor
pop
dec
jb
lret
jns
mov
outsl
bound
xchg
addr16
mov
mov
mov
jns
stc
sub
xchg
shlb
shrl
rorb
add
mov
inc
stos
imul
or
lea
fisttpl
mov
nop
test
mov
sbb
dec
inc
cmpsb
add
roll
loopne
adc
jb
je
dec
cmpl
rcrl
push
icebp
dec
mov
xor
mov
push
clc
pop
jmp
rcll
jo
outsl
rcrb
adc
mov
cwtl
lock
test
jg
mov
loope
xchg
or
lcall
mull
leave
lret
ja
sbb
popa
pop
adc
or
mulb
mov
cmp
push
and
fistpl
mov
pushf
rcr
sub
mov
scas
cmp
popa
add
cli
repnz
jno
andl
push
push
js
outsb
inc
fs
imul
pop
subl
xor
out
dec
pop
hlt
jns
push
add
sbb
mov
les
int3
iret
jg
mov
mov
rcrb
ds
repnz
fstps
icebp
mov
jb
mov
pop
jbe
and
cmp
cs
mov
mov
mov
shl
and
cs
jae
sahf
xchg
xor
out
add
cltd
pop
mov
insl
or
icebp
dec
mov
and
cmpb
gs
cli
cmpsb
loop
push
xchg
cmpsb
pop
push
xor
xchg
pop
fldenv
mov
mov
bound
xchg
jo
icebp
jl
ljmp
xor
mov
mov
cld
push
add
rcrl
mov
fcomip
in
negl
std
stos
loope
lret
push
daa
bsr
out
in
nop
and
outsb
setp
mov
cmovle
pop
add
notb
imul
and
repz
push
aam
lods
and
cltd
push
lds
imul
jo
pop
inc
and
mov
imul
loop
adc
inc
xchg
mov
jp
fildl
sub
mov
sbb
push
dec
cmp
fildll
lret
push
mov
cmp
sub
ficompl
adcl
mov
fimull
add
mov
xchg
or
mov
test
divb
mov
dec
das
lock
cmpsl
adc
shll
inc
daa
invd
mov
in
pop
std
xchg
adc
mov
insl
or
xor
jo
or
mov
stc
dec
or
jnp
push
jae
idivb
dec
inc
or
test
or
cmp
into
xor
lcall
sbb
jns
mov
out
and
bound
into
lods
pop
xchg
jo
cmp
cmpsb
cmpsb
cmp
shll
ret
inc
jne
or
inc
daa
inc
or
mov
xchg
xor
aad
mov
ret
push
inc
jbe
es
out
jns
sub
mov
dec
inc
sbb
inc
iret
cli
hlt
mov
daa
enter
ffree
loopne
iret
xchg
push
xlat
or
jge
sbb
int
adcb
or
sbb
cs
cli
xchg
or
and
pop
sbb
fmulp
gs
ljmp
incb
ss
lock
jl
pop
scas
dec
js
call
divb
sahf
decl
sti
adc
xchg
fidivrl
test
movsl
leave
push
test
and
cmp
xchg
fsts
scas
push
push
mov
outsl
shl
or
mov
jmp
imul
or
pop
mov
scas
les
jge
xchg
or
jg
pop
cli
clc
cltd
xlat
pop
xor
push
mov
arpl
dec
push
xor
inc
rorb
daa
js
enter
rorl
or
adc
or
xchg
xor
movsb
pop
cmc
fisubrl
push
je
insb
pop
and
mov
sarb
xchg
push
in
adc
and
shll
sar
fistpl
mov
cmp
out
push
jl
pop
movsl
sbb
imul
nop
jmp
and
dec
mov
stc
fiaddl
lods
loop
mov
push
js
outsb
adc
xor
int
pop
xor
ds
popa
mov
mov
cmpsb
or
dec
push
mull
inc
push
mov
dec
in
in
mov
mov
outsl
sarl
repz
and
das
mov
mov
gs
lea
insl
lcall
dec
add
stos
mov
add
addr16
sbb
hlt
sahf
cwtl
xorl
in
pop
xchg
jbe
cmp
mov
inc
enter
fcomip
xlat
sbb
push
lock
sbb
arpl
enter
mov
pop
stos
fstpl
jb
cmpsl
jg
and
movsl
mov
add
dec
fwait
outsb
add
jno
push
adcb
add
es
stc
add
cld
in
test
jg
jns
test
jae
lds
push
pop
mov
jns
iret
push
cmp
and
jl
mov
or
inc
and
cmpl
pop
dec
inc
lds
cmp
hlt
pop
test
pop
sarb
pusha
flds
adc
arpl
sub
add
add
xor
add
mov
ss
in
push
dec
adc
popl
leave
lods
repnz
insl
jno
in
out
mov
lea
arpl
dec
fstps
movsl
inc
add
mov
mov
mov
inc
lds
xchg
pop
ja
loopne
in
lea
loope
addr16
popf
into
sahf
adc
mov
lock
nop
xor
adc
imul
loope
push
out
and
mov
popf
les
test
mov
test
dec
jns
sbb
ss
mov
mov
outsb
sbb
les
pop
mov
or
repnz
leave
sbb
xor
add
dec
mov
in
push
xchg
int3
daa
xor
xorb
out
dec
stos
arpl
adc
int
lods
adc
or
jnp
push
scas
add
div
lock
pusha
sbb
out
mov
dec
sbb
push
test
stos
dec
and
movsb
cmp
bound
hlt
bnd
fldcw
insb
scas
je
mov
inc
xlat
loope,pt
lret
mov
das
cmpsb
les
jbe
mov
rorl
cmp
push
mov
inc
jns
jle
out
push
mov
xor
jle
pusha
lret
add
cld
lahf
pop
jl
lock
xchg
xchg
rcll
push
cmc
inc
sahf
sub
or
adc
jmp
jno
adc
mov
xor
call
loop
loop
push
sbbl
jo
xlat
push
xor
pop
ficoms
pop
fdivl
mov
sbb
add
adc
pop
mov
mov
adc
sahf
sbb
mov
fidivl
sub
fsubs
je
shll
movsl
cmp
shlb
loope
insl
sbb
es
adc
mov
gs
out
xor
pop
add
xsaves
call
cmp
xor
je
cmpsl
adc
or
ret
lret
pop
pop
ljmp
fs
gs
pop
xor
push
aad
mov
xor
fnstsw
or
push
leave
cmpsb
xchg
inc
mov
mov
cwtl
pop
addr16
cld
pop
subl
es
sub
mov
push
adc
adc
mov
inc
in
adc
jle
cli
test
movsl
and
cltd
jecxz
imulb
cmc
pop
adc
jge
mov
test
outsl
fwait
add
iret
sbb
mov
add
push
call
jae
xchg
fldcw
lret
push
jbe
sbbb
mov
imul
imul
inc
jmp
jmp
mov
lcall
sahf
jo
imul
jmp
imul
jp
cmpsl
cld
shlb
cld
adc
mov
jmp
xor
push
mov
mov
push
leave
sub
aad
aas
push
in
dec
push
mov
push
xor
sub
cmp
and
mov
addr16
mov
movsl
adc
enter
mov
mov
xchg
pusha
push
stc
and
fnsave
jmp
xor
test
loopne
cmp
enter
mov
add
aam
jg
aad
or
cmpsl
nop
xchg
lret
sub
shll
gs
jo
mov
mov
mov
popl
loop
dec
loop
stc
push
push
lea
dec
call
pop
jge
jl,pn
xchg
add
test
mov
mov
or
dec
ss
inc
mov
ss
add
xchg
mov
jmp
es
movsb
adc
pop
jmp
scas
nop
xor
ret
mov
jo
jg
lea
mov
jae
jne
xor
inc
jbe
rcrl
and
daa
imul
cld
aaa
jmp
adc
rep
pop
push
dec
cmp
push
mov
or
mov
jne
inc
mov
or
ret
lcall
pop
pushf
imul
sub
ds
jo
cltd
fwait
test
xchg
and
fisubrl
add
subl
pop
imul
inc
lods
jecxz
mov
inc
out
pop
imul
ds
out
ja
cmp
push
jnp
cmp
fwait
ljmp
add
and
pop
loopne
sub
mov
cmp
mov
cmpsb
push
sahf
cmp
jne
lret
loopne
into
int
negl
sub
jne
vpcmpq
imul
ret
pop
jb
and
fwait
push
call
inc
mov
pop
jae
flds
sbb
ror
rcll
push
wbinvd
mov
test
cmp
mov
cmp
adc
and
push
test
adc
insb
xchg
sub
pop
mov
adc
push
ret
int
loopne
sub
cmpsl
repnz
mov
push
pop
das
pop
enter
cld
pusha
xchg
lcall
aad
mov
mov
jnp
pop
dec
leave
xchg
mov
sahf
push
mov
mov
sbbl
jne
mov
into
jmp
jg
rcrb
fidivs
int3
push
les
orl
mov
or
and
xor
inc
fbld
and
jnp
add
xchg
mov
loopne
xchg
test
ja
push
das
pop
cmp
sbb
mov
xor
push
lods
movsl
adc
js
pop
jg
sbb
out
mov
daa
ja
mov
lea
mov
xor
pushf
fs
mov
inc
xor
jg
aam
pop
inc
xor
out
pop
sbb
and
cs
dec
stos
in
xor
jg
cmp
out
xor
inc
in
popa
pop
aaa
insl
lea
cmc
or
xchg
into
xchg
mov
dec
or
cmp
inc
pop
push
cwtl
fadd
inc
cmpsl
sbb
xor
out
dec
adc
mov
lret
mov
jp
sbb
inc
xchg
sar
or
cmpsb
sbb
ljmp
and
ret
js
push
mov
sub
inc
iret
mov
pushf
jo
push
mov
jae
ljmp
xor
pop
mov
add
test
lahf
adc
add
sub
add
add
insl
repz
mov
pushf
sbb
cwtl
gs
sub
mov
inc
cmc
or
sub
jns
ds
sahf
sahf
xchg
test
shl
xchg
dec
adc
sahf
cmp
out
std
mov
push
aaa
fnstenv
outsl
pop
test
pop
lret
sbb
int
stc
jg
sub
lret
inc
rcr
insl
pandn
movups
fs
push
adc
lret
lds
mulb
stos
and
mov
pushf
xchg
and
xchg
shll
push
stos
test
test
mov
push
inc
jle
ret
data16
mov
sub
stc
mov
into
jbe
dec
xor
stc
xchg
rorb
push
push
pop
es
adc
cmp
or
out
jns
sbb
repnz
insb
sbb
lcall
sbb
jnp
push
dec
mov
sub
jmp
iret
mov
mov
mov
cld
popf
inc
call
jge
movsl
lods
daa
pop
inc
shl
sub
push
out
scas
pop
std
test
xchg
mov
out
jmp
repz
imul
negl
or
jecxz
xor
sub
adc
push
push
sbb
bnd
test
dec
int
xor
jae
lds
dec
das
jmp
cltd
push
rcrb
jbe
test
sub
ficoml
push
hlt
mov
das
sbb
sbb
xchg
sub
sbb
push
lea
rcrl
xchg
mov
add
jae
leave
jnp
push
jno
cltd
mov
aad
and
mov
pop
fwait
rolb
xorl
add
add
jg
dec
es
dec
inc
mov
jbe
xchg
mov
xchg
je
enter
sti
jo
jge
xor
mov
and
and
hlt
mov
push
jnp
mov
inc
adc
pop
leave
aas
out
jbe
roll
loope
je
push
jge
andl
shrb
jmp
cmp
push
add
xor
rcl
fstpl
sub
xlat
and
stos
mov
mov
aam
xchg
addb
stc
fwait
push
mov
lock
js
or
dec
lret
or
je
pop
dec
cmp
and
fld
loop
or
icebp
push
xor
cmpsb
xor
adcl
lock
pop
mov
rcrb
ret
dec
repz
pop
iret
pusha
leave
dec
mov
sub
out
xchg
in
push
mov
push
les
jne
xor
enter
fwait
add
ficompl
jne
cmp
aaa
in
xchg
push
out
fisubs
dec
imul
pusha
push
mov
pop
fcoml
mov
movsl
jb
insb
pop
into
inc
mov
popf
and
pop
aas
push
negl
ret
icebp
sbb
sbb
fwait
call
pop
push
xlat
shll
loopne
xchg
lcall
inc
movsl
ret
in
popa
xchg
push
mov
outsl
stos
add
movsl
pop
insb
popf
sbb
mov
mov
fidivrl
int
outsb
and
push
fcmovu
lcall
and
add
rcll
aaa
xchg
pop
jb
movzbl
cld
loope
shrb
lret
xchg
push
cmpsl
mov
mov
pop
push
imul
paddusw
adc
popa
lea
jecxz
lods
pop
adc
xchg
xchg
pop
inc
loopne
pop
incb
outsb
mov
in
lahf
inc
jo
mov
mov
notl
mov
mov
inc
jb
add
lret
cld
int3
dec
es
jo
test
call
adc
mov
mov
xchg
fsub
insb
add
out
leave
xacquire
adc
push
inc
mov
movsb
ss
sbb
and
jne
mov
push
ss
jge
add
aaa
shll
ds
cmp
ss
rcl
lds
pop
lcall
gs
je
jg
jecxz
mov
xchg
adc
bound
mov
pop
or
pop
and
sti
mov
arpl
xchg
ret
pushf
xorl
lods
cs
sub
lret
push
jo
test
mov
mov
dec
xchg
icebp
cmp
incb
cmpsl
fldenv
jbe
mov
push
jbe
or
int
sbb
add
in
push
push
pop
mov
std
jp
cmp
mov
out
cltd
test
fimuls
mov
imulb
push
xlat
mov
and
xor
nop
out
hlt
in
mov
and
imul
sbb
jne
jl
test
ljmp
mull
dec
negb
xchg
testb
mov
jb
mul
je
repz
mov
aaa
adc
ds
sub
pop
jg
ja
sub
inc
pop
jb
inc
mov
or
mov
rcl
scas
xchg
cmp
push
aam
xchg
add
push
xchg
enter
add
aad
sub
cmp
xorb
mov
push
and
xchg
mov
cmpl
arpl
into
lahf
pop
adc
movsl
xchg
dec
pop
fwait
int
lcall
push
mov
repnz
or
sbb
xor
imul
jmp
ret
and
mov
sub
cmp
cmp
jg
sahf
push
les
shrb
xchg
fwait
push
cmp
ret
int3
int3
fcompl
das
lods
mov
popf
lret
jecxz
dec
data16
lahf
xorl
scas
outsb
xor
or
sbb
mov
lods
inc
push
cld
adc
test
sbb
mov
jnp
ret
and
pop
or
pop
jl
mov
add
push
xor
repz
push
in
mov
push
outsb
mov
push
aas
cmp
pop
pop
mov
pusha
inc
jg
dec
push
push
mov
pop
and
fisttps
lods
into
xor
mov
push
add
nop
aaa
cltd
out
daa
dec
js
cmp
test
cmp
mov
xor
xorb
mov
mov
xor
mov
xor
leave
in
jmp
push
fwait
ss
ret
je
imul
leave
shll
aas
ss
leave
mov
push
push
adc
lock
enter
out
out
push
sbb
std
and
dec
aam
and
xlat
xchg
cmc
divl
cmp
rcr
cmpsb
and
push
ss
add
push
xor
insb
push
or
push
jmp
mov
inc
sbb
cmp
dec
imul
fisubrs
xchg
adc
or
sarl
or
sub
rorl
pop
cs
test
dec
jp
and
int
cmp
or
nop
rorb
pop
xor
lock
loopne
cli
inc
jb
hlt
jg
negl
adc
out
cs
xchg
ror
xor
mov
jl
jae
jo
arpl
add
popf
xor
cmp
sub
xor
std
or
inc
cmc
lea
lcall
int3
cld
fisttps
mov
xor
mov
sub
xchg
dec
gs
ficoms
pushf
fidivl
mov
inc
int
out
and
negl
sarb
mov
sub
sub
insb
pop
aas
and
stos
pop
sub
subb
pop
cmp
xor
mov
mov
cmp
pop
sub
fwait
inc
int
mov
xor
cmp
mov
sti
adc
sub
stos
xchg
imulb
pop
jecxz
sub
mov
jg
push
pop
fimull
cmp
out
lahf
and
cmp
push
inc
fs
je
test
mov
cmc
aam
in
hlt
and
and
xor
inc
jne
inc
fs
je
test
mov
cmc
aam
in
hlt
and
and
xor
inc
je
inc
fs
je
test
mov
cmc
aam
in
hlt
and
and
xor
inc
jne
lds
pop
test
das
movsb
xchg
ret
xchg
dec
jge
cmp
dec
repnz
ret
jp
or
cmp
jb
inc
ljmp
adc
repnz
ret
push
jp
or
pop
lret
and
push
cli
and
xor
loop
repnz
ret
jp
or
cmp
jb
and
pop
and
jge
xchg
push
repnz
mov
cmc
jns
mov
es
mov
mov
add
jle
dec
jg
mov
xchg
mull
mov
lea
fistps
ljmp
mov
cmp
or
out
lret
adc
lods
add
andl
repnz
loop
ds
or
fidivl
mov
inc
sub
jg
lcall
pop
mov
ja
cmpl
iret
adc
pop
mov
adc
dec
dec
aam
jb
inc
jp
jp
push
mov
lret
aaa
lahf
filds
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
mov
scas
sub
lds
dec
or
mov
jle
outsl
fsubs
mov
and
pop
cmpb
xor
aaa
test
out
inc
or
iret
or
or
cmp
cmp
jb
inc
ljmp
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
divl
add
mov
fidivs
sub
rcrl
icebp
sbb
mov
sti
sahf
outsb
and
mov
mov
cltd
dec
rorb
data16
inc
xchg
fnstcw
iret
js
lret
adc
push
mov
jns
repnz
loopne
movsb
sbb
data16
aad
mov
jne
mov
mov
int
mov
mov
into
jecxz
inc
repnz
mov
aaa
insb
imul
clc
hlt
push
xor
aad
xlat
scas
mov
fstp
add
inc
cmp
in
sbb
insb
lret
mov
andl
and
call
fstpl
das
adc
addr16
xlat
or
lret
repz
pop
or
xchg
das
scas
ja
jle
adc
lods
pop
in
int
sub
out
out
mov
xchg
hlt
xchg
call
in
and
int
jmp
jno
lcall
sub
stos
sahf
jmp
push
out
dec
push
dec
lret
sub
pushf
andb
bound
dec
xor
cld
pop
xchg
out
cmpb
and
add
mov
jno
mov
mov
inc
pop
xchg
sub
dec
arpl
dec
scas
pop
ss
cmp
dec
xor
lea
or
mov
xchg
js
sbb
imul
jbe
aad
mov
jbe
int
daa
mov
iret
icebp
clc
mov
mov
mov
jnp
xchg
std
or
iret
arpl
pop
aaa
cs
xchg
sub
js
pop
mov
out
sub
in
push
or
jl
mov
sarl
ds
xchg
into
sbb
pushf
push
lret
sbb
int3
cmp
add
jnp
dec
xor
or
ljmp
js
dec
sbb
dec
shlb
fs
dec
pop
sub
jae
push
mov
cwtl
jl
fisttpll
vcomiss
lcall
push
mov
pop
xor
int
pop
jno
mov
stos
mov
lahf
jbe
out
in
push
or
fidivs
call
jecxz
imul
push
xchg
stos
xlat
ret
aad
jno
lcall
cltd
mov
mull
sar
in
out
xchg
mov
iret
lret
es
push
hlt
stc
nop
mov
arpl
xor
cmp
shrl
push
arpl
ret
fsubrl
or
push
sub
into
jb
fimuls
fildll
mov
iret
jo
sbb
xor
jno
mov
fisubrl
push
and
scas
xchg
and
outsb
cld
sbb
cmp
fucomp
xchg
sbbb
dec
fnsave
xor
call
xlat
mov
dec
nop
adc
fs
divl
jmp
mov
adc
and
sub
mov
clc
adc
sub
je
adc
mov
test
and
sbb
sbb
pop
nop
popa
dec
inc
push
mov
mov
ja
jle
add
mov
jg
mov
xchg
xchg
sub
daa
push
stc
and
dec
loopne
mov
sub
jbe
mov
jnp
and
jl
mov
mov
out
arpl
rcrl
into
loopne
lds
ljmp
ficomps
testl
lahf
add
pop
sub
jmp
push
mov
jl
xchg
mov
ss
mov
inc
cld
pop
add
inc
mov
addr16
jmp
mov
add
fwait
mov
pop
lahf
add
mov
sbb
movsb
adc
shl
sbb
jle
inc
jmp
xor
std
add
rolb
pop
cmc
cmp
mov
sub
lods
loope
fistpll
decb
mov
and
insl
test
push
sarb
inc
cmpsb
xchg
adc
xorb
stc
pop
push
xor
in
push
lods
sahf
push
cmp
mov
inc
loopne
in
dec
ficomps
test
pop
xchg
sarb
ret
into
vxorps
mov
mov
inc
hlt
push
adc
int
repnz
sub
push
mov
mov
xchg
rcrb
loope
sbb
xor
jbe
nop
adc
mov
push
cmp
mov
inc
mov
lcall
xchg
cwtl
lret
xchg
inc
push
inc
mov
popa
shrl
insb
mov
inc
xor
popf
lahf
cmc
in
jae
push
mov
add
idivl
adc
stc
negl
icebp
imul
sub
pushf
mov
xor
adc
mov
dec
jne
add
inc
pop
fwait
lods
xchg
sbb
gs
mov
iret
lods
mov
mov
push
xchg
dec
dec
mov
mov
xchg
adc
mov
aaa
jg
jnp
sti
pop
cltd
ret
lea
icebp
imul
outsb
jae
loopne
mov
lds
sbb
ret
and
ds
xor
cmp
sub
and
jns
push
dec
rcl
lock
jmp
pop
icebp
sti
mov
pop
or
aaa
sub
lock
xlat
roll
lods
add
stos
stc
mov
addr16
insl
mov
fnstcw
jae
arpl
jb
rcrb
test
mov
clc
pop
xchg
stos
ljmp
push
mov
or
cmp
repz
arpl
test
or
mov
sub
fisttpl
push
pop
data16
pop
ljmp
pop
mov
xorb
jecxz
mov
pop
pop
mov
adc
rcl
mov
in
imul
mov
mov
pushf
push
loope
xchg
dec
test
push
ret
and
xchg
mov
cmp
jno
jmp
xchg
in
scas
lock
xchg
out
add
mov
jb
nop
sarl
sahf
pop
and
or
pushf
mov
cmp
sbb
lret
push
call
icebp
in
pop
xchg
inc
xor
inc
add
push
fnstenv
cld
cmp
xor
fucomi
xor
mov
popf
or
das
pop
inc
iret
mov
jne
jns
add
push
mov
inc
cld
fistpll
repnz
xor
mov
push
pusha
in
add
clc
stos
cmp
and
cld
pushf
pop
push
ret
pop
ret
add
in
lcall
test
xchg
xchg
je
mov
stos
icebp
fistps
int
cmpsb
adc
cs
pop
lret
or
pop
pop
dec
jge
call
fistpl
xor
lods
dec
lahf
adcl
mov
test
xlat
mov
jbe
jp
daa
popf
outsl
orb
push
insb
dec
sbb
pop
in
push
hlt
sbb
push
je
leave
pop
lret
inc
jae
sub
mov
pop
push
mov
mov
loopne
aam
cmp
das
sbb
dec
in
cwtl
aaa
fnstcw
or
inc
jp
inc
imul
fildll
pop
jle
mov
lods
pop
xor
in
sbb
pop
call
test
jae
cmp
divb
les
or
pop
dec
int3
ds
xor
add
stc
in
lds
inc
jns
jns
lahf
mov
test
dec
adc
daa
sub
mov
xor
adcb
in
ret
dec
inc
and
and
out
dec
loope
out
cmpsl
pop
pop
cmp
inc
iret
jmp
leave
cmp
test
mov
adc
lea
mov
adc
add
imul
lds
and
rcll
sbb
and
mov
inc
test
test
xor
mov
ret
inc
faddl
push
addr16
std
pushf
scas
lods
mov
ds
loope
mov
push
xor
loopne
fcompl
loopne
cmpsb
repnz
dec
in
shll
shrb
pushf
int
or
xor
ja
and
mov
test
popf
dec
ljmp
fstl
in
and
cltd
and
cmp
fs
mov
pop
lea
adc
out
dec
sbb
xor
mov
mov
test
ret
lea
outsb
jle
mov
mov
lret
iret
roll
push
xchg
aad
sbb
mov
dec
cmc
and
mov
mov
pop
flds
push
mov
out
or
add
clc
and
inc
dec
dec
out
jmp
or
popa
insb
add
insb
xorl
or
xor
pop
push
and
imul
cmpsl
stos
inc
fs
dec
mov
les
rclb
scas
outsl
xor
sar
cs
mov
mov
ja
push
inc
sti
add
push
mov
mov
sti
lock
cmp
roll
arpl
mov
and
lods
sub
das
notb
xchg
dec
or
inc
mov
mov
popf
xor
imul
dec
and
aaa
push
and
das
or
in
pop
add
mov
pop
clc
rclb
xor
jnp
jo
mov
cmp
loope
hlt
jmp
pop
adc
xchg
pop
fdivrs
shr
enter
jmp
xor
sub
pminsw
ret
test
icebp
sbb
jae
xor
icebp
pusha
jo
add
pop
cli
lea
xchg
mov
js
stos
loop
xor
enter
rep
lret
sub
test
push
mov
mov
xchg
mov
imul
add
mov
sub
cmp
jmp
jns
in
outsl
jae
clc
mov
cmpsb
pusha
dec
leave
push
iret
pop
jo,pn
add
inc
aaa
test
push
pushf
cmc
shrl
dec
inc
and
jmp
cmpsl
daa
xchg
in
fdivl
dec
mov
jbe
xor
fistl
das
ja
pop
cmp
roll
adcl
jle
jge
mov
and
jne
pop
xchg
sbb
fistl
ret
adc
movsl
jmp
orb
ja
aam
je
hlt
cmp
rolb
roll
jp
shll
pop
push
pop
dec
lock
data16
and
cmp
loop
jle
sub
mov
xor
leave
sub
push
adc
mov
inc
into
mov
aam
mov
dec
mov
sbb
stos
jge
xor
sbb
mov
lcall
sahf
mov
add
cmp
fdiv
mov
cmc
sub
push
test
adc
add
in
inc
dec
insl
dec
push
fstpl
and
test
repnz
cmp
mov
cli
cli
pop
inc
fsubl
arpl
popf
sub
idivl
stos
int3
mov
repz
or
jns
sbb
ljmp
sarb
inc
fbstp
or
sub
cmp
sar
sbb
or
mov
jns
push
push
push
out
jg
fimuls
sub
sub
fmul
adc
jl
jbe
jbe
hlt
or
sbb
call
sbb
sub
inc
subl
cmp
xchg
fprem
mov
push
push
inc
mov
jmp
dec
sbb
jp
mov
add
inc
xchg
inc
jp
inc
dec
repz
inc
loopne
nop
in
lods
cmp
xor
pop
xchg
push
daa
push
pop
shll
cli
aaa
es
xchg
push
push
xchg
movsb
ss
sub
jle
out
cmp
inc
jp
idiv
mov
xor
mov
lock
fistpl
sahf
insb
adc
and
in
xorb
cs
xor
inc
jmp
stc
movsl
mov
stc
mov
pop
mov
inc
inc
inc
jb
sbb
and
dec
nop
outsl
add
inc
mov
pop
fisttps
lret
inc
or
adc
adc
lea
pushf
xchg
mov
fistpl
mov
pop
mov
jns
cmpsb
ss
mov
xor
sbb
cmp
cmpsl
inc
add
lods
mov
pop
jmp
rcrb
inc
mov
es
sbb
xor
jecxz
loop
fstl
and
and
in
jle
cmp
int
iret
xor
mov
jp
loop
sbb
sbb
aaa
lods
rep
rclb
lock
cmc
test
xor
jns
pop
aaa
insb
push
xlat
sub
aaa
jb
xchg
inc
cmpsb
mov
pushf
fisttpl
dec
adcl
jnp
icebp
mulb
out
or
addr16
pop
test
rorb
inc
enter
popf
cmc
dec
repz
inc
mov
jl
sbb
inc
in
add
daa
lea
sub
dec
jmp
int
mov
jbe
xchg
adc
es
mov
int3
push
push
addr16
popa
rcl
fidivl
xchg
cmp
sbb
xchg
add
sub
imul
pop
mov
jae
pop
arpl
jl
cmpsl
imul
pop
ret
mov
ret
push
scas
mov
xchg
mov
out
in
lcall
sub
dec
mov
inc
daa
or
loope
out
cmp
aad
jno
pop
sbb
popa
sub
pop
xchg
imul
add
inc
add
adc
cs
adc
sar
push
into
iret
cmp
imul
cmp
ret
hlt
cmp
ljmp
mov
pushf
adc
cmpsb
mov
test
jns
mov
mov
aas
pop
xchg
in
lret
or
cmp
fdivrl
xchg
test
out
adc
scas
push
shll
xchg
mov
push
push
in
or
mov
add
sbb
sub
mov
sbb
hlt
mov
movsl
jno
lock
inc
out
adc
andl
out
dec
and
insl
jecxz
in
fwait
rcrb
xor
mov
mov
adcl
xor
ja
fnsave
xor
mov
pop
lret
ficoml
lret
rorl
scas
lods
xchg
inc
scas
or
sbb
rcll
xor
in
outsb
divl
pop
jmp
xchg
loop
mov
push
inc
push
hlt
outsl
pop
xchg
in
lret
in
or
mov
fildll
jecxz
push
lods
push
cmpsl
insl
pop
push
push
out
bound
sub
sub
int
clc
add
lret
fsub
mov
mov
dec
mov
ss
fmuls
jo
dec
arpl
insl
lcall
scas
jmp
mov
dec
jnp
lcall
push
dec
xchg
xlat
insb
jo
addr16
pop
add
mov
mov
dec
add
sbb
sub
xor
dec
push
dec
mov
add
add
shll
lahf
or
lock
pop
jle
mov
aad
cmpsb
arpl
mov
pop
sbb
imul
and
dec
cmp
call
aam
insb
add
sub
pop
inc
imul
adc
adc
nop
inc
sbb
rcrl
or
pop
jg
mov
test
xor
bound
into
in
dec
pop
and
mov
and
in
add
fwait
cmp
and
and
sub
aas
and
andb
push
cmpsl
fnstsw
movsb
mov
add
pop
pushf
movsl
hlt
cmp
inc
mov
and
imul
sarb
xchg
xchg
stos
pop
loopne
inc
cmp
pop
daa
loopne
popf
orl
mov
xor
xchg
stos
xor
subl
cmpsb
or
mov
jns
sbb
imul
scas
test
xor
mov
dec
mulb
test
dec
movsl
adc
sti
fbstp
sub
test
ret
imul
idivl
cmp
inc
outsl
pop
les
lods
adc
ja
fisubs
sbb
add
pop
jp
or
xor
les
lret
adc
orl
jg
cwtl
inc
and
sub
dec
mov
adc
lahf
hlt
aam
push
mov
mov
cltd
adc
jne
cltd
cwtl
jge
mov
les
push
mov
int
mov
sub
in
mov
pop
add
stos
sbb
in
std
dec
add
outsl
orl
mov
in
or
xchg
out
sti
mov
cltd
rcl
sub
repz
pop
cwtl
mov
add
pushl
pop
pop
cmp
das
xchg
and
xchg
mov
int
data16
subl
jae
push
dec
das
xchg
aam
and
les
sbb
inc
push
cmp
pop
ljmp
inc
cmpsb
in
inc
in
int3
cmc
pusha
push
lock
xor
cmp
iret
repz
je
add
xor
push
lcall
orl
mov
xor
xor
insl
popl
daa
outsl
jno
int3
stos
std
jae
sub
or
rolb
jecxz
rcl
sbb
mov
inc
pop
pop
dec
jg
adcb
inc
inc
ret
imul
lea
insl
sarl
jmp
mov
scas
scas
sub
arpl
arpl
xchg
jnp
aaa
enter
add
cmpsl
das
inc
cmp
or
push
jns
and
shl
cwtl
rcrb
lds
or
fisttpl
add
mov
xchg
fimull
lock
add
pop
sub
and
mov
in
and
shrb
push
and
cld
cs
mov
dec
loopne
mov
pop
sub
mov
or
xchg
push
sbb
sub
pop
mov
sub
cwtl
imul
mov
xchg
dec
insb
mov
add
sub
movsb
stos
icebp
mov
outsb
sarl
daa
mov
scas
or
mov
adc
sub
in
pop
iret
ljmp
je
and
mov
cmpsb
in
mov
xchg
sbb
lods
mov
scas
pop
jbe
test
sbb
xor
cld
dec
mov
inc
aam
cmp
cmp
rclb
push
xor
in
cmp
add
jecxz
push
or
fs
dec
data16
out
fldenv
loope
cmp
out
lret
fnsave
mov
cmp
nop
xchg
pop
push
sbb
das
or
and
mov
jecxz
repnz
fistpl
inc
cwtl
mov
xchg
mov
mov
out
out
xchg
aad
push
sub
xchg
or
aam
outsl
pop
xchg
jmp
add
shr
int3
jl
lahf
and
loop
mov
push
fidivs
cmp
mov
inc
addr16
sbb
fs
aas
and
cmp
dec
jle
cmpsb
jns
test
push
lods
dec
inc
cmpsl
mov
repz
push
jno
pop
pop
pusha
cmc
dec
in
xchg
mov
pop
popa
movsb
ret
sbb
jne
loopne
in
mov
outsb
adc
int
jns
sahf
push
aaa
dec
in
stos
andb
cmpsl
push
push
mov
jp
jbe
int3
and
mov
popa
add
mov
jno
repnz
shlb
mov
add
inc
adc
hlt
jecxz
lods
or
add
out
add
xchg
loop
nop
push
cmpl
scas
dec
adc
mov
and
hlt
xor
cmpsb
into
rolb
pop
lret
pushf
dec
subb
cmp
loop
sub
sbb
ljmp
xchg
aas
add
adc
sbb
in
hlt
rcr
xchg
or
and
pop
xchg
ds
mov
ja
cmp
call
dec
jl
and
mov
daa
sub
inc
test
scas
push
mov
inc
cld
shr
mov
or
lock
push
pop
jae
in
addr16
ret
cmpsl
rclb
add
leave
ljmp
idivb
popw
bnd
into
loopne
xchg
push
and
loopne
mov
fcmove
and
in
mov
das
enter
cmp
shll
iret
sbb
mov
jne
mov
shl
dec
push
mov
icebp
pop
cli
loopne
mov
inc
cld
cmpsl
sub
fdivrp
xchg
leave
loope
jns
loopne
adc
jecxz
inc
popa
and
sahf
adc
test
push
popa
sbbb
iret
in
aas
push
pop
xchg
lods
daa
mov
hlt
test
cmp
add
xor
test
sbb
shll
sbb
inc
aad
add
push
or
dec
pop
pop
dec
jne
jb
push
icebp
xchg
movsl
cltd
inc
jne
sti
cmc
pop
cltd
pop
xchg
push
mov
mov
jmp
push
clc
mov
sbb
xchg
pop
popl
mov
push
dec
mov
xor
in
and
dec
std
mov
and
mov
adc
popa
orb
popa
sub
movl
or
xchg
cmpsl
mov
fcompl
sbb
mov
aad
mov
popf
mov
pop
aam
jae
rolb
mov
loop
shll
mov
hlt
mov
divl
dec
addb
es
or
and
dec
and
pop
lret
rcrl
pop
and
orl
pop
aaa
outsb
adc
mov
add
out
aas
les
pop
cmp
mov
lods
xchg
xor
rep
inc
and
mov
mov
lahf
pop
xor
jp
or
cmp
jb
inc
ljmp
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
repz
ret
push
jp
or
cli
lret
call
add
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xlat
dec
loopne
jae
and
out
lods
int
add
add
add
pop
add
push
add
addl
popf
add
add
add
add
add
add
movb
add
add
add
add
adc
add
add
add
mov
add
xor
flds
lcall
add
add
arpl
push
add
add
jmp
jnp
lcall
add
add
add
add
add
add
jl
push
add
add
add
add
add
add
add
outsb
add
add
xor
dec
add
add
add
add
add
add
jae
addl
pop
add
add
add
add
outsl
add
add
sub
pop
add
add
add
add
add
add
add
dec
add
add
add
add
add
out
data16
add
movb
add
add
add
add
lods
add
add
sub
fwait
add
add
adc
add
int
push
add
add
add
mov
lcall
add
pop
add
add
sbb
add
add
add
pushf
add
add
adc
dec
add
sub
int3
add
add
push
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
pusha
add
arpl
data16
add
add
dec
add
add
add
inc
add
add
jae
dec
add
int
pop
add
add
add
inc
add
loopne
leave
add
add
add
add
addb
add
add
add
add
jge
xor
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
jp
push
add
flds
mov
cmp
xchg
add
cmpsl
add
add
jg
add
int3
add
add
add
pop
add
add
movb
add
add
xchg
dec
add
inc
add
add
add
add
dec
add
add
add
add
and
mov
add
add
jnp
lret
add
add
add
push
add
lret
add
sub
add
add
add
enter
sub
mov
jae
mov
push
add
outsb
add
add
add
add
add
add
add
add
add
push
inc
add
add
and
push
add
add
add
add
gs
add
add
add
pop
add
add
add
pop
add
sub
add
add
pushf
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
dec
add
add
loopne
xor
adc
add
add
add
insl
add
add
push
dec
add
add
add
add
add
add
add
add
add
add
add
scas
icebp
xchg
faddp
jecxz
xlat
or
add
sub
pop
add
pop
jmp
or
ret
and
fistpl
push
filds
pop
ljmp
movsb
sbb
ror
gs
jmp
movsb
push
push
mov
sbb
sbb
push
test
das
ret
cmp
das
xchg
mov
pop
xchg
dec
int
cli
push
aaa
ljmp
imul
mov
mov
inc
rcrl
add
fs
xor
mov
icebp
xchg
pop
arpl
cmp
mov
sub
out
dec
out
nop
dec
lods
sti
jg
mov
add
mov
aas
std
pop
push
cld
lock
pusha
xor
xchg
inc
jg
push
jp
fisttpl
clc
pop
daa
and
mov
ds
cs
mov
and
mov
inc
int
iret
and
pop
add
in
xchg
and
int3
push
dec
jns
in
jns
pop
adc
insl
jmp
fistpll
les
add
out
mov
sbb
loop
mov
jecxz
aaa
test
dec
fwait
repz
or
imul
push
add
cs
jmp
mov
sbb
pop
daa
xor
adc
mov
and
inc
pop
mov
mov
sbb
bts
mov
sub
mov
mov
shll
dec
xor
or
rcll
add
mov
outsb
popa
loop
call
jns
mov
xchg
mov
xor
arpl
cmpsl
popa
out
enter
jl
lcall
in
fwait
aam
lcall
loope
notb
outsb
dec
test
or
pop
dec
jnp
xor
add
push
inc
cmp
cmpsl
outsb
pop
lcall
fstpt
sub
in
mov
in
cmp
jmp
fisttps
int
cmp
cmpsl
hlt
jecxz
in
add
sahf
ret
mov
mov
mov
jb
out
repz
mov
repz
insl
lahf
jle
adc
pop
lods
scas
pop
cli
inc
push
sahf
dec
setnp
dec
test
xlat
loop
in
stos
cmp
neg
mov
xor
inc
mov
call
adc
stos
pop
mov
icebp
and
push
push
lock
out
sbb
push
jle
jge
js
cmp
cmp
loopne
sarb
addr16
jecxz
rol
cmp
cmpsl
sub
jo
out
push
cmp
mov
pop
sbb
lret
jo
jp
xor
xchg
fmuls
push
fbld
xchg
lods
sub
js
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
