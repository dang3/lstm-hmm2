call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
js
xor
mov
fwait
in
aam
and
xor
add
adc
fs
ret
push
xor
test
xchg
in
hlt
inc
les
test
mov
out
push
adc
fs
push
rclb
sub
in
hlt
pop
les
mov
pusha
out
int
mov
push
push
movsb
xor
dec
jmp
lds
mov
jno
stos
rcrb
dec
cmp
push
jle
xchg
mov
fstl
add
add
lea
mov
fwait
xchg
imul
lret
jge
lahf
cltd
pop
adc
add
dec
jae
clc
sub
jae
push
test
mov
les
sbb
mov
and
loop
cltd
xchg
inc
in
hlt
stos
dec
push
sub
sti
into
inc
addr16
mov
fld
inc
int
pop
add
xor
mov
push
roll
stos
fmuls
xchg
sti
xchg
aam
je
mov
sub
ret
dec
dec
loop
insl
fists
jns
pop
push
dec
xor
adc
adc
and
push
loop
xor
in
hlt
inc
les
mov
add
adc
fs
lret
push
mov
in
jbe
push
mov
hlt
inc
mov
test
inc
mov
lock
cld
push
mov
mov
and
out
lods
sbb
cs
aam
pop
mov
gs
xchg
sbbl
dec
in
add
addr16
adc
sbb
jb
inc
les
mov
add
adc
fs
inc
rclb
xor
in
hlt
inc
les
mov
add
adc
fs
inc
rclb
icebp
std
pop
ss
dec
sub
std
mov
shrl
movsl
rcrl
inc
jno
xor
dec
inc
out
fadds
cmp
arpl
stos
pop
aas
jmp
pop
pop
push
and
mov
mov
gs
pop
sbb
cmpl
add
popf
lahf
fmull
mov
add
les
int
sbb
pop
xchg
call
cmp
pop
fcoml
negl
mov
jns
jne
pop
mov
rorl
xor
adc
xchg
out
mov
or
sarl
xor
fldenv
pop
push
leave
mov
addb
push
ret
arpl
repz
mov
data16
jmp
jmp
lret
imul
jnp
aaa
dec
das
or
popl
or
cs
dec
push
mov
pop
imul
jl
lock
inc
cmp
insl
dec
das
sub
sub
decb
lds
fcompl
xor
scas
sbb
into
adc
sub
xchg
insb
scas
jmp
pop
pop
mov
sbb
mov
lret
jns
cmp
popf
xchg
lods
mov
sub
sub
bound
xchg
ljmp
adc
fs
shlb
rcrb
xor
dec
sbb
hlt
mov
xor
enter
pop
ficompl
and
ljmp
ficoml
imul
lock
mov
shlb
inc
xor
xchg
rcl
mov
xor
pop
jno
mov
fisttps
add
mov
xor
negb
loopne
or
push
jae
inc
test
pop
repnz
adc
insl
add
icebp
mov
cltd
sarb
fs
mov
push
scas
jmp
dec
fistpl
pusha
pop
cli
fistpl
stos
mov
pushf
lahf
repz
mov
loope
fsubr
cmc
mov
and
jns
sbb
sub
mov
inc
test
push
mov
pop
arpl
cmp
imul
mov
xchg
in
stos
clc
xchg
test
cmpsb
cmp
std
cmp
adcl
mov
sbb
cmp
cmpl
sbb
inc
jle
out
jne
lock
pop
notl
push
lret
mov
sbb
dec
repz
outsl
xor
sar
fs
popa
xor
pusha
in
mov
std
dec
or
add
imul
lret
cmpb
pop
sub
add
jmp
mov
aam
ljmp
sub
pop
mov
incl
mov
ret
mov
and
flds
negl
ret
add
mov
fistpll
enter
aad
repz
lds
test
scas
adc
push
or
ret
mov
sub
cmpsl
iret
cmp
and
cmc
xor
pop
cmpsb
sbb
cwtl
mov
lret
setge
movsb
xchg
mov
test
push
adc
lret
add
aad
mov
jl
sbb
push
loope
mov
adc
jo
fnsave
push
cmp
fmuls
xchg
fdivl
sahf
jmp
push
pop
stos
cmp
xlat
inc
imul
add
icebp
cmp
gs
leave
ret
push
mov
pop
and
lahf
cs
out
and
mov
stos
xchg
mov
jp
sub
xor
lock
loope
cmp
das
shlb
pop
call
popl
call
stc
fstps
mov
mov
out
pusha
dec
test
jb
cmpsl
inc
in
loop
into
imul
fwait
nop
pop
cltd
jp
pop
shl
movsb
fcmovne
div
pop
or
push
add
fmuls
movsb
mov
fs
out
lds
insb
xchg
stos
rorl
pop
mov
fstl
in
sub
sbb
lds
fnsave
cmc
xchg
pop
cld
jmp
xchg
add
les
mov
aam
insl
inc
testl
mov
stos
bound
mov
shl
shl
xchg
test
jle
jle
cmp
fiadds
or
loopne
mov
push
fs
mov
pop
test
lret
mov
mov
cmp
adc
jge
add
sti
stos
outsl
xor
pop
inc
push
adc
subl
push
add
adc
jb
loop
pop
in
inc
data16
aas
subb
mov
fidivs
leave
mov
mov
stos
stc
adc
popf
dec
aas
movsb
mulb
dec
shlb
lret
out
sbb
mov
jl
add
subl
pusha
mov
adc
mov
jbe
movsb
mov
pop
ja
xchg
and
incb
imul
add
or
je
sub
mov
mov
sbb
sbb
xchg
cmc
mov
jne
jae
std
pop
jecxz
idivb
je
popa
inc
shl
sub
arpl
jae
mov
sbb
mov
pop
into
repz
popf
cmc
and
adc
push
inc
and
in
stos
frndint
and
mov
lret
dec
mov
testb
lret
xor
inc
inc
add
adc
mov
subb
int
push
dec
ret
enter
push
pop
mov
dec
xchg
push
in
pop
into
incl
jne
inc
aad
je
push
mov
xchg
sahf
cmpsb
cmp
test
cmpsl
inc
mov
dec
in
mov
dec
dec
push
and
sub
and
mov
push
add
test
call
lock
lahf
jo
cmpsb
and
testb
push
cmc
dec
push
js
cmpsb
mov
in
mov
mov
sbb
push
push
stc
fs
shll
icebp
xchg
repnz
fadd
add
int
jns
shll
pop
rorl
fsub
jl
mov
adc
or
jno,pt
add
xchg
repnz
mov
push
lcall
ss
cld
mov
sarb
mov
movsb
divb
dec
stos
cmp
sbb
je
inc
mov
adc
adc
fdivr
or
xor
and
stc
rcrb
adc
mov
orl
cmp
mov
jno
test
clc
mov
dec
xchg
xchg
in
or
mov
pop
add
mov
or
rcll
jmp
icebp
adc
aaa
sub
jp
push
stos
push
sub
sahf
pop
adcb
xchg
imull
or
jp
sarl
jecxz
outsl
cmp
add
push
sbb
stos
mov
ror
sbb
cmp
add
orl
sbb
add
dec
mov
inc
arpl
sbb
repz
fwait
movsb
sbb
pop
outsb
lods
pop
inc
lcall
movsl
xchg
adc
nop
bound
ljmp
ljmp
stos
mov
adc
push
out
add
jbe
inc
jecxz
adc
pop
sbb
dec
mov
sbb
jg
outsb
nop
jns
mov
dec
imul
mov
sub
and
fidivrl
jno
add
bound
mov
insl
xchg
sbb
xchg
flds
xchg
push
shll
cmc
jae
test
aam
outsb
test
lock
in
add
and
jmp
mov
inc
add
pop
dec
jp
or
mov
dec
fisttpll
sbb
or
lret
jo
push
inc
pop
es
adc
loop
cmpsb
ljmp
je
test
repz
ljmp
hlt
or
ss
dec
lahf
les
test
int3
leave
mov
in
fisttpll
adc
testl
push
mov
push
jb
mov
div
mov
inc
pop
lcall
cmpl
inc
sub
mov
pop
mov
mov
roll
sub
add
sbb
cmpb
stc
rolb
scas
xchg
mov
rorl
and
ja
cmp
inc
adc
sti
push
loop
aas
cmpsb
jge
add
iret
sub
mov
arpl
pop
pusha
ss
jmp
xchg
inc
das
scas
sub
or
rcl
sbb
popa
cltd
out
sub
xchg
mov
and
test
xchg
jnp
out
outsb
xlat
cmp
stos
xchg
lock
jb
fnstenv
cmp
jne
pop
cmp
ja
aas
mov
in
cmpsb
insl
or
cmp
sub
cltd
daa
fcompl
and
lcall
sub
cmp
pop
imul
in
call
loope
es
cltd
popf
pop
aam
das
andl
orl
inc
aas
or
aad
jl
aam
icebp
pop
mov
mov
xor
in
andnps
int
cli
push
xchg
shll
jns
push
mov
fs
iret
or
ret
xor
push
iret
popf
popf
mov
ret
lds
adc
stos
test
inc
push
es
movsl
lods
pop
out
cmpsb
xor
push
sub
push
fwait
and
scas
jo
mov
and
and
jbe
sub
out
adc
sahf
inc
sub
jnp
add
ja
sbb
in
sbb
das
xchg
xchg
int
jle
sub
cmp
xchg
js
std
pop
leave
pop
dec
imul
mov
cmp
test
pop
cmp
add
or
push
and
fldl
xor
lods
or
movsl
imul
fs
loopne
mov
inc
xchg
cltd
mov
sub
adc
dec
jecxz
pop
add
mov
pop
cmp
jmp
popf
fisttpl
mov
arpl
sahf
cmp
test
loope
jbe
push
add
rol
xchg
in
inc
aam
xchg
ret
sti
add
push
ds
out
jbe
fwait
xlat
inc
sahf
sub
push
xor
mov
inc
or
cli
stos
cmpsb
push
test
pushf
jnp
sub
shll
and
scas
addl
and
les
adc
pop
inc
cs
out
scas
and
add
rclb
nop
rcrl
mov
cli
jle
jmp
adc
xor
cld
mov
jne
shlb
pop
in
bound
dec
lret
mov
loope
cmp
outsl
cmpsl
mov
scas
inc
in
dec
jge
lahf
outsb
jns
pop
std
jae
test
inc
pop
mov
mov
xor
scas
rorl
inc
or
call
je
rdmsr
inc
insl
lahf
popf
cltd
jo
aas
cmpsb
and
fsubrl
jp
iret
mov
iret
xchg
xchg
fistl
ror
pop
in
pop
aas
out
push
pop
sbb
xlat
xchg
das
daa
and
jp
stc
jg
lds
shr
dec
push
sub
lcall
aam
icebp
imul
ret
inc
mov
and
mov
push
adc
mov
jne
inc
push
enter
mov
test
sar
cmpsl
popf
and
push
or
mov
pop
fisttps
sbb
add
or
push
mov
xlat
ss
mov
dec
mov
push
lahf
mov
scas
movsl
jle
mov
push
push
pusha
push
or
scas
pop
gs
lock
test
ss
push
cmp
sbb
lock
push
and
fwait
data16
push
stos
dec
fimuls
adc
rorl
out
jp
xchg
not
shlb
aaa
dec
push
pop
and
pusha
xor
lods
test
sub
push
and
mov
aad
in
jnp
xchg
mov
fbstp
leave
jae
xchg
or
adc
inc
jne
pop
push
loope
sar
js
jae
add
sar
mov
push
icebp
mov
cs
mov
outsl
jbe
test
and
fwait
pop
cli
cmp
loop
mov
mov
pop
hlt
mov
gs
or
xlat
cmp
in
push
push
inc
jecxz
mov
ds
xchg
arpl
jo
popf
imul
ret
pusha
ds
and
sbb
push
imul
push
fwait
aaa
xor
clc
shll
inc
mov
mov
test
setle
xor
hlt
gs
add
pop
pop
cmpl
pop
aad
xchg
mov
cmp
je
hlt
pop
clc
int
dec
fadd
cmp
mov
jmp
dec
or
xchg
cli
sbbb
shl
lret
cmp
push
stc
stos
xor
fnstsw
jo
addr16
cmp
adc
rep
add
cmp
data16
ljmp
test
pop
cs
mov
mov
ror
xchg
cltd
mov
and
lahf
iret
sbbl
lcall
xchg
js
push
mov
xchg
notb
pushf
add
ds
mov
stc
inc
outsl
cmp
xor
cmpsl
test
mov
pop
inc
pop
jb
lcall
push
lret
sub
cmpsb
xor
les
scas
add
sub
cmpsb
out
lea
test
call
xor
xor
in
add
pop
dec
lret
or
sbb
rclb
imul
and
lcall
je
mov
xchg
mov
test
movsb
cmp
arpl
jae
aas
cli
cmp
mov
mov
push
cmp
xchg
data16
pop
out
lods
mov
dec
sbb
adc
je
add
inc
cs
ljmp
leave
adc
sbb
in
rorl
mov
mov
decb
mov
cli
stos
addb
push
arpl
aaa
ljmp
xchg
adc
jo
or
popl
stc
xchg
sbb
sub
lock
gs
mov
and
xor
adc
in
loope
dec
push
adc
or
and
out
stc
fiadds
jmp
xchg
push
xor
adcb
jae
daa
cmpsl
adc
jmp
scas
scas
dec
inc
outsb
adc
aas
inc
in
pop
cli
flds
cwtl
clc
adc
sub
cltd
and
pop
cmpsl
in
and
bswap
int
and
ljmp
scas
add
stos
push
lea
jge
jo
mov
xor
nop
push
into
testb
scas
daa
xor
loope
sbb
jns
push
mov
sub
sbb
push
gs
and
icebp
outsl
getsec
add
outsl
aas
mov
dec
dec
cs
jne
adc
out
xor
subb
int3
int
cmc
pop
cltd
adc
push
mov
fnstenv
cmp
push
mov
dec
rcll
imul
fistps
mov
insb
dec
cmpsl
adc
fdivs
xor
mov
pop
dec
jne
fwait
out
add
test
enter
aam
pop
lahf
cmp
fstpt
bound
es
jne
pushw
dec
rcll
lds
in
mov
inc
pop
dec
sbb
hlt
je
xchg
add
dec
sub
or
dec
insb
mov
add
jb
or
jp
in
add
mov
imul
inc
mov
cld
vmovntps
in
lcall
push
fs
insb
popa
xor
jl
inc
js
jne
inc
in
scas
add
cmovae
in
add
dec
xor
add
jl
add
cwtl
aaa
add
dec
popl
mov
mov
rcl
cmpsl
incb
dec
push
inc
insb
cwtl
push
enter
add
arpl
xor
or
arpl
sti
jbe
dec
lea
or
cmpsb
sub
add
fistpl
and
sarb
in
jno
push
out
push
sbb
xchg
xor
shll
sar
xchg
add
hlt
pop
cwtl
inc
insl
call
fnstcw
add
jmp
xlat
loop
sub
mov
lahf
sahf
insb
mov
cmp
add
push
or
aas
sbb
ljmp
jle
adc
pop
mov
mov
test
jecxz,pt
flds
xor
xlat
or
sbb
push
fcomps
iret
imul
mov
aad
mov
push
pop
hlt
jo
xorl
in
popa
call
out
xor
stos
push
das
xor
push
aaa
cmp
insl
pop
arpl
pop
test
mov
test
inc
movsl
adc
insl
push
movsl
mov
jne
push
pop
mov
or
vmread
out
jg
cmp
mov
lds
jmp
loop
push
fiaddl
addr16
cmp
push
jge
pushf
push
out
int
loopne
xchg
lock
sahf
adc
jbe
out
jmp
ret
lods
inc
test
ret
xorb
pop
fnstsw
cmp
imul
imul
mov
out
int3
adcb
push
fs
pusha
xchg
push
jge
adc
hlt
cmc
xchg
pop
repz
lret
or
cmc
loop
iret
dec
lahf
pop
push
mov
inc
xchg
mov
fsubrp
pop
jl
loop
sub
fistl
xchg
aam
push
xor
bound
bound
int3
add
cmp
jnp
cs
xor
pop
mov
push
or
mov
pop
inc
mov
cmp
call
xor
repnz
xchg
xor
mov
push
dec
ja
out
nop
inc
in
imul
subl
push
mov
pop
pusha
xchg
xlat
push
dec
xchg
mov
sbbb
lret
shll
jge
clc
adc
cmp
insb
inc
sbb
insl
fxch
inc
mov
and
repnz
push
push
cmp
sti
insb
sbb
push
sub
mov
fdivs
xor
push
outsb
int3
pop
rolb
movsl
cmp
adcl
mov
cmp
push
cmc
cmpsb
push
test
daa
xchg
roll
xor
sbb
cs
lret
lods
pop
loop
repnz
stc
sarl
ja
jb
loop
loopne
ret
sar
push
mov
jns
movsl
mov
fsubp
popf
rolb
sbb
sub
pop
ret
mov
adc
mov
mov
push
bound
mov
inc
insb
xchg
jg
scas
out
sub
push
adc
push
add
popa
adc
add
daa
xchg
mov
ret
ja
jae
mov
mov
pop
jb
sbb
or
sub
hlt
cli
out
rolb
aad
mov
inc
inc
cmpxchg
cs
test
xchg
push
in
xchg
divl
pop
mov
and
ret
and
mov
pop
outsb
fwait
and
test
xor
fidivrl
jne
push
or
cmp
jae
add
mov
insb
mov
aad
push
ret
inc
push
cld
dec
pop
addl
fdivrs
adc
xor
lea
dec
adcl
stc
ret
arpl
jb
jg
xchg
in
push
sbb
xchg
jb
popl
cmp
test
cmp
ss
inc
shl
inc
dec
bound
je
insb
insb
jo
or
iret
cltd
fwait
fwait
adc
sbb
xchg
popf
xor
out
cmpsl
jae
rclb
outsb
out
dec
fstpt
dec
lea
jge
cmp
repnz
xchg
inc
fmuls
dec
inc
push
testl
pop
xor
inc
pusha
mov
cmp
ds
sahf
and
mul
outsb
dec
xor
call
out
test
cmp
xor
sub
sub
mov
sti
or
cmpsb
into
aas
sbbb
cltd
dec
pop
fdivl
sub
addr16
or
in
dec
mov
cli
xlat
test
popf
push
mov
add
jns
fnstsw
xchg
dec
dec
aad
dec
lea
xchg
lods
out
xor
add
fists
mov
js
dec
adc
sub
scas
cmp
inc
sub
pop
movsb
movsl
jo
jp
sub
lods
neg
add
call
hlt
push
sbb
movsb
jne
lret
pop
mov
aam
push
sbb
push
cmp
in
adc
jecxz
loop
jns
js
jae
loope
loop
mov
jno
pop
pop
aas
jne
or
xor
repnz
call
ret
stc
mov
scas
stc
fwait
fwait
pop
cmp
addr16
mov
test
fnstsw
popa
adc
mov
or
fsts
push
xchg
rclb
sbb
out
mov
call
lret
sbb
int
and
mov
ficomps
push
inc
jle
jno
sbbl
or
test
movb
mov
cmpsl
mov
mov
xor
pop
pop
leave
adc
lock
and
scas
iret
aaa
cmp
pop
aam
adc
push
outsl
aam
inc
lods
int3
test
pop
aad
jle
aas
push
dec
push
inc
jb
xchg
push
pushf
add
fisttpll
mov
outsl
fisubl
xor
scas
lret
cli
es
mov
mov
test
xchg
in
hlt
inc
les
mov
add
adc
fs
inc
rclb
xor
in
hlt
inc
les
mov
add
adc
fs
inc
rclb
xor
add
xchg
in
je
les
mov
add
adc
divb
jecxz
push
movsb
push
mov
test
xchg
in
hlt
ret
aam
and
sahf
sub
arpl
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jecxz
repz
push
roll
ret
dec
out
testb
jae
inc
les
and
test
je
fs
push
roll
mov
adcl
arpl
jae
aaa
hlt
push
les
xlat
xor
adc
dec
rcrl
sub
xchg
push
arpl
jae
xor
push
lret
jge
stos
je
or
jecxz
mov
or
test
xchg
test
and
push
fcompl
mov
mov
fdivl
es
add
jecxz
or
std
bound
call
mov
movsb
mov
test
push
push
je
adc
in
dec
sti
sti
arpl
cmp
out
pop
add
adc
sbb
xchg
sbb
fadds
jns
in
xchg
fcmovb
scas
fdivl
sub
xchg
push
jnp
jnp
test
jb
jl
sbb
mov
out
roll
imul
je
jae
inc
rcrl
xor
and
or
jae
inc
int
frstor
lods
xor
movsl
adc
inc
iret
cli
dec
out
shrb
popf
ja
and
pop
testl
andl
fists
xorl
push
lea
add
addr16
jno
adc
mov
shlb
mov
adc
add
hlt
jae
inc
aam
les
mov
movsb
add
fs
push
roll
mov
adcl
arpl
jae
inc
aam
les
mov
movsb
add
jecxz
jne
push
jns
pop
inc
cmp
add
rcrl
enter
ret
sub
fcoms
test
pop
mov
mov
mov
cld
lcall
sub
push
pop
inc
dec
mov
fwait
lea
call
xor
jmp
out
es
jo
std
lock
scas
push
outsl
aam
notb
test
xchg
shll
cmp
nop
mov
stos
call
and
icebp
adc
xchg
mulb
inc
test
in
mov
in
outsl
push
clc
jp
out
mov
popa
or
fwait
jne
pop
loope
mov
add
pop
pusha
in
test
insl
lods
pop
xchg
dec
stos
push
mov
jae
mov
bound
nop
pushf
lds
inc
into
inc
fisubs
jb
pop
mov
fnsave
test
sub
cmp
xor
and
jmp
mov
scas
jns
mov
push
dec
adc
pop
rcll
fistl
inc
jb
inc
ds
mov
ja
lods
out
and
push
jl
mov
xchg
cld
sbbb
test
push
and
fisubrs
in
sahf
sub
idivl
sub
fcoms
mov
and
int3
and
mov
fistps
mov
sub
shlb
bound
pop
mov
stc
cmpsl
daa
mov
in
sub
int3
ret
adc
dec
push
movsb
jo
bound
scas
iret
add
dec
mov
cmp
mov
push
divl
sbb
jne
lret
jle
xor
inc
mov
xchg
mov
cltd
ret
fwait
out
sbb
push
mov
pop
add
shll
movq
pop
cs
sbb
mov
or
mov
stos
test
inc
xchg
mov
cmp
mov
cmp
inc
cltd
out
adc
pushf
and
dec
sub
imul
pushf
sbb
mov
ss
sub
loope
mov
mull
add
or
mov
xchg
xor
clc
jo
out
notl
and
in
add
sar
int3
sbb
pushf
jmp
outsl
fwait
and
inc
and
enter
loope
out
rorb
sbb
lock
push
and
sub
mov
out
sbb
add
adc
test
mov
int3
flds
mov
pop
pushf
sbb
xchg
loope,pn
mov
arpl
sub
xchg
in
xor
push
push
add
mov
jae
movsb
arpl
xchg
xor
out
mov
pusha
dec
sbbl
jns
cmp
scas
xor
or
cs
push
mov
cwtl
jle
movsl
data16
cmp
or
sbb
cmp
cmp
xchg
and
add
pushf
mov
ja
push
mov
mov
fistl
orl
int
adc
int
pop
mov
adc
add
lcall
sub
push
sub
fistpl
daa
incb
push
rorb
lods
lahf
ds
jb
inc
sti
adc
sti
and
daa
daa
push
jae
sarl
add
add
mov
push
int3
or
cs
dec
mov
or
push
add
arpl
mov
stc
add
out
fdivrl
in
jbe
jne
shlb
and
movsl
jmp
xor
pop
add
inc
subl
movsl
mov
faddl
lcall
xor
stc
push
testb
decb
cmpsl
cmp
loope
mov
cs
sub
push
or
mov
pop
mov
pusha
jmp
subb
add
cltd
or
insl
stos
leave
push
pop
push
xchg
leave
in
and
xchg
push
xchg
jmp
mov
in
insl
push
xor
mov
xchg
dec
or
shll
inc
mov
sbb
ficoml
mov
xor
xor
adc
pop
fiaddl
das
pop
mov
test
adc
insl
inc
ss
push
mov
and
jb
sbb
xchg
cmc
or
lds
fiaddl
inc
xor
lods
mov
push
jns
pop
insl
sub
std
and
loopne
xchg
push
test
data16
int3
or
jecxz
mov
shrb
lret
jo
ret
adc
setns
ss
dec
js
divb
lcall
fs
mov
sub
out
pop
stc
stc
cmc
fdivp
and
movsl
xlat
arpl
sbb
push
jl
mov
jo
xor
jno
and
shl
dec
push
add
mov
xchg
subb
leave
movsb
iret
push
sbb
jmp
jp
fcoml
nop
pop
lods
sub
int
bound
fwait
add
dec
pop
cwtl
or
sbb
lds
sbb
mov
xchg
jae
cmpsl
nop
xor
sub
cwtl
dec
mov
xor
dec
xchg
bound
leave
mov
push
shrl
cmp
and
jo
les
dec
shrb
lds
cmp
push
divl
sbb
cmpsb
jge
scas
nop
mov
add
sbb
mov
push
popf
and
mov
push
xor
dec
adc
stos
cmp
mov
push
mov
std
scas
pusha
sub
lods
push
in
stos
cli
adc
sbbl
dec
clc
pop
lock
sbb
push
sub
sbb
stos
mov
cld
stos
add
pop
popl
je
mov
mov
out
std
lcall
push
push
or
dec
push
push
movsb
scas
pop
sbb
xchg
sub
inc
ljmp
rcrl
mov
xor
mov
fidivrs
xlat
jg
sti
push
in
subb
cmpsl
sub
mov
xchg
imul
icebp
repnz
adc
jmp
stos
sub
mov
and
push
jbe
aas
push
sbb
loope
ljmp
inc
jp
test
shll
in
adc
jg
rorl
xchg
push
popa
push
inc
mull
adc
cmp
std
test
out
mov
mov
leave
insl
out
add
imul
cld
stos
push
sub
push
cs
jle
jecxz
push
and
loopne
in
push
mov
or
cmp
es
test
test
lock
pop
scas
idivl
in
or
jmp
inc
adc
fldl
jl
les
hlt
bound
idivl
add
fsts
push
in
fs
inc
lods
sub
je
pop
xchg
fists
rorl
pop
out
fwait
add
rcr
xchg
inc
jge
dec
gs
mov
mov
sahf
or
sub
shlb
packuswb
inc
push
sar
ds
jnp
or
and
dec
pop
sbb
xchg
add
xchg
and
iret
pop
or
xor
pusha
jmp
push
repnz
sub
xorl
arpl
adc
xor
fwait
push
dec
in
sbb
loopne
mov
mov
lock
stos
jbe
aam
fwait
sbb
cwtl
mov
sbb
out
jle
mov
movsb
dec
sub
pop
xor
xchg
xchg
cmp
inc
pushf
xchg
mov
mov
outsb
call
shl
add
sub
mov
call
adc
ret
outsb
sub
add
shrl
repz
or
mov
xor
sbb
cmp
cmp
jo
dec
repnz
hlt
lret
rclb
or
inc
dec
inc
jmp
jb
sahf
pop
inc
lds
jg
cltd
sbb
xchg
data16
movsl
jecxz
imul
sti
repz
jcxz
push
cs
push
repnz
gs
xor
dec
dec
ret
jo
jle
jl
mov
jb
mov
or
dec
mov
aam
stos
sbb
inc
inc
idivb
xor
test
mov
pop
add
fsubp
cmp
loope
sahf
ret
fadd
loopne
in
sti
sarl
pop
xor
xchg
inc
in
cmp
sbb
pop
std
inc
mov
insb
jmp
test
push
fisubrs
imul
pop
or
push
add
repz
aaa
sbb
scas
das
in
rcll
add
enter
std
lcall
inc
dec
and
into
dec
in
xchg
xchg
add
int
adc
cmc
scas
mov
xor
pop
pusha
and
gs
mov
scas
push
inc
imul
lret
pop
add
sbb
imul
or
aad
sbb
jecxz
sahf
ja
cltd
dec
dec
dec
and
lcall
fld
and
jmp
jg
inc
rclb
sub
je
mov
test
xchg
dec
ljmp
les
jne
jno
mov
pop
or
or
cltd
xchg
enter
pusha
loop
ss
repz
lahf
mov
push
gs
mov
mov
add
xchg
inc
std
lahf
mov
inc
das
lret
dec
sbb
test
dec
mov
mov
insb
movsl
test
push
jge
jmp
mov
pop
int3
dec
rolb
aaa
mov
push
imul
push
lcall
add
lcall
push
xchg
jg
xor
mov
in
xchg
fstps
mov
push
or
jmp
loope
daa
sbb
dec
xor
sarb
dec
cs
mov
cmp
jno
pop
xchg
sbb
mov
test
pop
cltd
lea
sti
hlt
bndldx
out
in
cmp
cmc
repz
jno
push
pushf
or
lds
enter
push
push
jno,pn
lret
xchg
jmp
iret
rcll
jo
dec
mov
outsl
imul
repz
aam
push
sbb
sbb
pop
lahf
xchg
bnd
ret
push
mov
xchg
imul
xchg
sub
divb
pop
xchg
inc
jmp
pop
mov
loopne
jnp
ret
cmp
mov
pop
lret
xchg
inc
fnstcw
lret
mov
xchg
repz
fnsave
test
dec
or
cmp
popf
push
lcall
movsb
nop
dec
adcl
xor
movsl
pop
cmpsl
or
or
and
rcl
fnstsw
cmp
sub
jl
dec
je
jl
inc
bound
mov
jmp
sub
xlat
mov
mov
pop
pop
cmpsl
nopl
popf
sbb
repz
ds
ljmp
stos
movsb
push
rcrl
ret
add
dec
mov
out
push
inc
fsubrs
lret
push
push
push
inc
push
andb
test
jnp
mov
jb
lcall
mov
std
mov
mov
xchg
stos
arpl
mov
and
fwait
clc
clc
test
stc
mov
push
pop
ljmp
and
aam
push
sbb
push
aad
pop
dec
cmp
jge
std
pop
pushf
out
xchg
mov
je
ljmp
sub
xor
fcomps
into
mov
jnp
test
movl
sbb
pushf
cmp
loop
jmp
adc
pop
push
std
add
jp
inc
out
fiaddl
popa
movsl
ret
add
loop
or
andb
push
xor
stos
jno
dec
out
pop
ja
pop
stos
aaa
xor
cld
push
jp
jnp
sbb
lahf
jp
rcll
adc
pushf
scas
ret
jecxz
icebp
sub
push
dec
ja
mov
and
dec
gs
and
cwtl
cmpsl
jnp
pop
push
jbe
loop
in
mov
aam
jb
test
iret
or
add
lahf
ja
add
aad
dec
cli
ret
push
insl
sbb
xchg
dec
lods
lods
lods
iret
mov
mov
es
or
push
sti
and
jne
inc
xor
mov
les
stc
cmp
add
inc
inc
xchg
je
rol
addr16
lret
lea
add
lea
popf
pop
scas
gs
jg
imul
and
ss
ss
loop
push
xchg
orl
pop
push
arpl
pusha
mov
adc
inc
sbb
ret
dec
mov
out
popa
out
cmp
mov
add
jne
jle
mov
or
cld
pop
stc
xor
push
pop
mov
rclb
pop
inc
in
scas
ss
aas
pop
out
mov
adc
cmp
in
pushf
inc
movsb
xor
pmaxsw
mov
lret
out
inc
and
insl
icebp
mov
pushf
push
fs
sbb
loop
nop
inc
mov
xor
add
cmp
fnsave
data16
mov
inc
addr16
jg
or
pop
loope
ret
add
dec
shlb
in
or
stos
js
lods
mov
pop
daa
divb
jge
popf
lds
xchg
sti
push
push
imul
pop
loope
sub
mov
inc
pop
cmc
jle
pop
movsl
gs
add
bound
cmp
sbb
repz
loopne,pt
adc
sub
mov
adcb
js
cmp
xlat
sbb
sbb
mov
jl
mov
stc
fdivrs
jnp
inc
cmp
pop
mov
insl
dec
add
or
mov
jmp
data16
xor
pop
test
xchg
rorb
dec
cs
call
push
sbb
das
rclb
xchg
adc
sbb
push
jecxz
ret
xor
daa
push
repz
int3
jg
jmp
dec
cltd
mov
dec
inc
inc
inc
repz
cmp
fadds
nop
loopne
push
dec
out
jge
daa
mov
stos
cmp
xchg
xlat
pop
xor
pop
push
ds
cmp
ja
lea
cli
cltd
xchg
ss
lcall
jno
add
arpl
movsl
xchg
cwtl
inc
mov
jno
push
iret
test
scas
enter
mov
loopne
cli
pop
cmp
dec
cmp
cmp
sub
call
xchg
jnp
xor
aas
push
test
jbe
aas
pop
push
dec
add
inc
std
push
lods
shr
sub
sbb
pop
cmp
loopne
push
adcb
cmp
aam
out
stc
repnz
shlb
fimuls
sub
mov
push
int3
inc
sbb
mov
lods
push
stos
mov
lods
popf
cmpsb
inc
loop
rclb
stc
cmp
mov
jge
insb
cmpsl
ss
jp
aam
sbb
mov
subl
push
icebp
dec
jae
lret
test
sub
jb
lahf
push
mov
aaa
aad
rclb
fcmove
inc
push
fnsave
test
shlb
push
aas
sbb
sub
push
xor
sub
repz
fldl
jne
lods
cmp
adc
in
fnstsw
iret
mov
add
xor
aas
push
notl
repnz
add
je
or
and
mov
mov
out
jb
out
cmp
leave
enter
testl
and
pushf
imul
push
aad
jnp
enter
xor
cmpsb
stos
mov
test
dec
mov
jb
adc
test
mov
jne
cmp
pop
andb
ret
sbb
icebp
stos
sti
popa
sbbl
aaa
adc
sbb
xor
mov
cmp
inc
lods
mov
scas
xor
sbb
jbe
adc
mov
repz
divl
mov
js
or
xor
insb
popa
movsl
mov
adc
cmp
push
mov
and
dec
arpl
lret
mov
iret
scas
repnz
lods
subb
rorl
pop
push
adc
cli
rcr
push
shlb
cmp
bnd
lcall
dec
or
xor
pop
repz
aas
xlat
mov
cli
xlat
ds
call
lock
imul
push
popf
add
rolb
lcall
sbb
dec
mov
add
cli
rcrl
jb
das
rorb
adc
inc
scas
push
xchg
clc
mov
aam
or
jp
cltd
outsl
cmp
nop
sahf
jnp
cmc
test
insb
cmp
pop
xchg
add
ss
pop
push
inc
popa
loope
inc
sub
xchg
pusha
fnstcw
xchg
into
inc
stos
adc
jnp
jbe
repnz
das
mov
push
jo
cmp
lret
les
push
mov
negb
lock
add
repnz
pop
jg
sub
inc
or
es
sub
lret
or
shll
icebp
ret
lods
push
out
rolb
subb
dec
push
push
adc
test
push
jbe
mov
jl
inc
lock
inc
jmp
sbb
aaa
jnp
and
pop
or
in
fiadds
call
ficompl
and
jp
sti
xchg
cld
negb
cmp
das
mov
rcrb
jmp
fidivrs
shll
add
out
jg
stos
test
sub
rcrl
out
in
cmp
mov
lahf
fistps
incl
loopne
inc
sub
xchg
mov
pop
je
push
jmp
pop
mov
inc
pop
sub
mov
cmpsl
imul
add
push
cmp
cmp
push
fwait
js
dec
xchg
mov
add
sbb
mov
push
or
sub
ficoml
adc
pop
or
aad
jae,pt
push
xchg
filds
das
stos
loop
push
test
cmp
mov
mov
sti
sub
lods
insl
dec
das
sbb
push
adcb
cmovl
fsubrs
sbb
push
mov
push
push
or
sub
push
sete
mov
mov
std
imul
jge
sub
fsubrl
out
inc
inc
stos
mov
mov
xchg
xchg
mov
dec
sub
mov
rcrl
roll
sti
test
mov
sub
stos
jl
add
jb
jns
dec
sbb
jno
adc
hlt
adc
xor
sti
aad
mov
call
push
cmpb
int
jle
jge
mov
lds
jns
daa
jo
dec
mov
pusha
xor
mov
cltd
add
adc
jns
mov
push
xchg
aas
pusha
push
mov
repnz
enter
loop
clc
sbb
inc
or
int3
mov
xchg
jb
push
int
push
xchg
cmpsb
ret
int
mov
repnz
fstps
and
mov
insb
mov
add
icebp
mov
loopne
pop
adc
test
mov
cwtl
sbb
jl
loop
rcrb
sbb
jg,pt
xlat
subb
cmp
jbe
jp
xchg
popa
sbb
divb
dec
testb
add
mov
test
lcall
in
jp
lret
mov
push
jae
scas
jecxz
int
dec
test
jp
jg
ljmp
xorl
jb
jge
cwtl
dec
adc
cmpb
xlat
push
cs
cmpsl
add
pop
sbb
lea
and
outsb
outsb
dec
inc
push
aad
xlat
cmp
daa
sbb
inc
fisubrl
out
stos
adc
mov
out
nop
mov
dec
loopne
cwtl
ret
mov
cmp
into
pushf
jnp
adc
lret
lds
call
enter
fs
add
and
mov
add
jns
into
lds
inc
jne
fdivrp
or
faddl
hlt
sub
pop
pop
push
cmp
inc
lahf
mov
mov
mov
mov
sub
sub
sti
stos
sub
sub
stos
in
add
bound
adc
lods
shll
mov
sbb
cwtl
orb
lea
inc
mov
pop
sub
test
pop
mov
xor
xchg
xchg
jmp
call
inc
push
and
imul
xchg
inc
js
sub
xchg
imul
inc
push
mov
lret
add
std
das
adc
sub
xor
jnp
hlt
dec
ret
pop
inc
adc
mov
adc
iret
fidivrs
xchg
in
pop
test
inc
dec
or
add
dec
pop
rcr
or
or
icebp
sti
inc
jle
pop
in
out
lods
add
adc
mov
gs
cmp
fs
push
and
outsb
jmp
pop
inc
sti
decl
push
and
addl
loope
lea
cwtl
ljmp
add
inc
addl
adc
jae
mov
lahf
subl
dec
sub
test
push
add
mov
jno
inc
mov
pop
cmp
cmp
push
xchg
test
mov
mov
sub
dec
jmp
jle
test
mov
adc
pop
add
sahf
dec
subb
mov
sarb
adc
sub
out
or
jns
and
inc
mov
dec
push
jmp
in
or
dec
lods
mov
ja
jmp
js
xchg
inc
mov
scas
jb
jecxz
roll
mov
adcl
arpl
jae
inc
aam
les
mov
movsb
add
fs
push
roll
mov
adcl
arpl
jae
inc
aam
les
mov
movsb
add
fs
push
roll
mov
adcl
arpl
jae
inc
aam
lds
mov
movsb
add
repz
push
roll
mov
adcl
arpl
jae
jmp
cmp
pop
cld
imul
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
add
xor
and
in
fadds
aad
xchg
nop
xorw
push
shll
ret
jbe
push
loope
adc
add
xor
and
push
cmpsb
inc
mov
xchg
andl
push
shll
icebp
ss
push
loope
or
sbb
sub
cmp
dec
cmpsb
pop
mov
xchg
mov
sub
fsts
je
push
lods
arpl
xorb
push
cmp
pusha
inc
ja
test
and
inc
stc
add
and
out
sub
mov
xlat
popf
sub
inc
dec
hlt
mov
sahf
adc
test
dec
inc
pop
push
and
push
ljmp
addr16
cli
andl
xchg
shll
cmp
pop
adc
adc
clc
movl
sbb
arpl
shll
loope
inc
jnp
or
pop
dec
cmp
xchg
rclb
push
gs
shll
icebp
inc
stc
arpl
push
jbe
fisubs
orb
outsb
cltd
or
int3
inc
icebp
push
xchg
fsts
push
fsub
sbb
xor
and
inc
cmpsb
push
mov
xchg
mov
jbe
inc
mov
ss
loope
jge
fs
and
daa
idivl
popa
out
or
pop
ret
cmp
dec
movsb
dec
addl
pop
push
cmpl
and
sbb
dec
stos
pop
xchg
js
mov
sbbb
mov
jno
popa
xchg
xchg
xorw
push
shll
shll
push
loope
adc
add
xor
and
push
cmpsb
inc
mov
xchg
xchg
xorw
push
shll
shll
push
loope
adc
jecxz,pn
xor
pop
cmp
shll
pop
sbb
xchg
fs
out
jno
aad
jecxz
add
xor
pop
mov
inc
out
cs
cltd
fwait
add
sbb
inc
popf
inc
dec
add
ret
cmc
mov
pop
xor
daa
inc
push
adc
into
iret
bound
ja
xor
hlt
pop
fs
mov
out
dec
sbb
xlat
enter
dec
out
jae
arpl
in
mov
lods
lods
popa
mov
adc
and
arpl
jns
in
daa
fwait
add
push
cmpb
inc
test
mov
jbe
test
push
aaa
mov
lret
sti
lea
out
rol
js
xor
push
test
scas
lock
add
hlt
sbb
lds
and
xor
ret
movsl
int
add
jmp
inc
fwait
jp
pop
pop
fldt
and
sbb
xlat
sub
rorb
add
xor
mov
xchg
add
add
sbb
inc
inc
add
mov
jne
sbb
mov
xor
dec
sbb
mov
mov
jp
dec
aam
sub
hlt
repz
xchg
hlt
push
push
cmc
jmp
aas
mov
and
sbb
pusha
mov
pop
pop
sub
and
push
cmpb
sub
daa
jnp
and
mov
xchg
mov
std
loop
stc
lods
aad
popa
repz
std
jle
xchg
out
push
push
lret
dec
mov
add
fisubs
inc
mov
ret
shlb
cmpsb
mov
dec
pop
das
pop
popa
jae
dec
inc
sti
jl
clc
pop
cmp
push
fmull
sbb
ret
fldl
dec
testb
or
movsl
lret
ja
arpl
sub
xlat
lds
add
adc
int
push
shlb
xchg
test
add
pop
cmc
or
xchg
cld
mov
sbb
sbb
mov
dec
jmp
xor
adc
xchg
cmp
pop
mov
sub
sub
dec
cltd
pop
imul
xor
les
das
daa
pop
rclb
xor
ficoms
shlb
xor
inc
lcall
in
sub
ret
lds
push
vdivss
xor
and
out
and
dec
add
bound
int
jno
fdivl
scas
cmp
das
pop
and
pop
ss
push
les
sbb
rorl
shr
insl
clc
dec
add
cwtl
cmp
sbb
ret
cmc
cmp
fmul
sbb
cs
daa
cltd
and
jne
shl
lds
adc
pop
daa
fld
data16
sub
and
jo
in
mov
stos
cmp
jg,pt
mov
shrl
mov
or
repz
nop
xor
icebp
adc
cmp
cli
clc
std
ds
sbb
outsl
adcb
mov
lds
adc
pop
out
xor
push
pusha
mov
dec
add
sbb
scas
cwtl
cmp
xor
movsl
inc
pop
sbb
fnstsw
xchg
in
jae
jae
aam
dec
in
jecxz
xchg
pop
xchg
mov
loop
mov
or
sti
stos
push
jge
pop
das
pop
shlb
jns
int
shlb
inc
shrb
call
sbb
aaa
push
ret
jmp
mov
repz
rorb
mov
cmpsb
les
in
shlb
arpl
add
out
mov
xor
clc
inc
in
aas
lret
stc
jo
cmp
mov
push
xchg
xlat
movsb
sbb
xchg
imul
mov
out
mov
sub
test
push
lcall
fyl2x
cltd
jbe
cmp
adc
push
jo
mov
es
jne
push
dec
pushf
mov
jnp
push
cli
jae
mov
sbb
mov
popl
pop
pavgb
xor
xor
jp
cltd
mov
cmp
mov
sub
divb
shll
test
std
jbe
inc
and
nop
icebp
pusha
add
sub
lcall
or
mov
mov
jb
fisttpl
xchg
jecxz
icebp
lret
mov
pop
push
mov
mov
shrb
adc
stos
pushl
lock
test
es
fists
mov
das
into
lret
inc
and
icebp
fisubs
xchg
aam
mov
cwtl
test
enter
in
fldt
pushf
stc
sbb
inc
out
adc
or
mov
jbe
and
jns
ss
pop
push
inc
dec
mov
mov
cmpsl
xchg
inc
adc
test
mov
inc
mov
sub
jb
loope
jg
xor
mov
mov
fs
jb,pt
jmp
ljmp
jns
mov
fnstsw
jle
sarb
ss
mov
cmp
xor
push
leave
scas
fs
rcrl
lahf
nop
mov
gs
cmpsl
jmp
repz
dec
cltd
cltd
popl
pop
sahf
cmp
or
in
sbb
js
shll
lods
sbb
push
cmp
add
hlt
xchg
push
ret
xor
push
and
lret
pop
dec
adc
adc
pushf
push
dec
and
out
js
stos
mov
lds
cmp
and
repnz
in
lcall
xchg
loop
sub
push
mov
or
fisttpl
shrb
repz
xchg
orl
add
xchg
repnz
mov
fcomps
outsl
sbb
leave
in
sbb
jae
dec
sbb
int
faddl
mov
mov
jmp
mov
test
ror
cmp
insb
push
adcb
push
push
jo
cld
xchg
lea
push
cmpb
scas
sbb
aas
shl
movsb
test
stos
lock
aas
mov
insb
imul
dec
enter
fwait
inc
data16
test
xor
subl
sbb
pop
adc
or
bound
cld
mov
lds
data16
cld
push
loop
imul
stos
push
enter
stc
loopne
jge
dec
jg
outsb
mov
hlt
shr
mov
xlat
je
dec
sti
nop
test
in
addr16
inc
xor
rcr
push
lcall
in
sub
pop
cmp
or
insl
and
and
push
imul
add
xchg
fisubrs
popa
enter
popa
pusha
dec
bound
xlat
gs
pushf
push
adcl
xchg
pop
rcr
and
mov
pop
movsb
or
pushf
push
xor
cs
into
mov
inc
mov
mull
jbe
sub
daa
and
lods
push
xchg
rorb
pop
push
outsb
imul
mov
pop
sti
out
fbstp
dec
xor
xchg
test
mov
out
mov
jno
cmp
xlat
jae
rorb
clc
test
loop
add
inc
lock
or
aad
mov
jp
pop
les
jae
insl
xchg
lahf
cmp
and
ja
repnz
aaa
jns
sbb
mov
mov
std
push
sub
repnz
mov
push
xchg
cltd
sub
push
mov
repnz
mov
add
xor
jnp
adc
xor
cmc
ja
in
cmp
decl
jmp
arpl
in
push
lcall
leave
in
sbb
aad
add
jmp
cmp
sbb
sbb
sub
push
rorl
xor
xchg
outsl
imul
lret
xchg
pushw
mov
mov
push
call
lods
out
rorl
and
dec
into
and
or
call
fisttpl
or
shll
insb
push
je
in
inc
imul
insw
sbb
andl
movsb
popa
push
sub
out
shll
cmpsb
je
pushf
fimull
mov
jne
xchg
mov
in
add
sbb
sub
cmp
mov
in
hlt
jne
jge
rcrb
test
mov
dec
mov
pop
dec
rorl
mov
mov
aaa
lcall
in
lcall
jecxz,pt
sti
mov
cmp
je
loop
in
jne
jbe
cltd
pop
mov
mov
cld
imul
fstps
sub
imul
inc
push
cld
std
hlt
pop
aas
shll
pop
xchg
ljmp
popf
add
icebp
cld
dec
mov
test
or
push
xor
or
jmp
rclb
pop
imulb
sti
imul
shl
xchg
jg
mov
in
pop
sahf
xchg
iret
cmp
pop
ficomps
and
andl
dec
fdivr
icebp
or
add
loopne
add
xor
shrb
cmp
aad
movsb
sbb
out
scas
aam
dec
sub
dec
es
out
xchg
pop
int
xchg
jecxz
lahf
mov
jecxz
mov
jns
sub
mov
push
pushf
mull
and
out
sbb
mov
push
xchg
inc
or
ret
leave
mov
addr16
inc
push
push
shrb
mov
jle
xchg
movsb
add
or
mov
cs
inc
mov
roll
pop
dec
sarb
inc
sarb
sbb
adc
inc
mov
cmp
lahf
jns
scas
inc
add
mov
or
shrl
adc
loopne
int
fimull
iret
sbb
mov
fstl
cmp
stos
mov
test
cmpl
comiss
rorb
aas
outsb
push
xor
jo
sub
enter
or
out
je
sub
std
mov
jl
push
stc
inc
adc
int3
jne
and
add
adc
sub
add
cmp
or
arpl
or
push
rol
mov
xor
movb
mov
jae
pop
scas
das
mov
pushf
mov
lock
inc
or
out
movsl
jae
jbe
aam
call
pop
xor
mov
loopne
sub
push
mov
stos
add
push
pop
addr16
mov
std
test
dec
or
popf
repnz
and
es
mov
mov
mov
insl
mov
mov
fs
dec
test
pusha
scas
cmpsb
and
cmp
popf
pusha
fstl
popf
sbb
dec
mov
push
call
inc
mov
leave
imul
ret
call
pop
rcrl
push
std
mov
pop
jo
mov
ret
and
fists
mov
fs
pop
cmpsl
add
xlat
roll
push
cmpsl
test
fidivl
ljmp
repz
and
pop
jnp
inc
cmp
jnp
push
and
in
push
push
xchg
xor
mov
sub
xlat
and
out
data16
pop
imul
cmp
pop
aam
xchg
stos
pushf
insl
cmp
sub
test
sub
fwait
xlat
or
mov
test
or
ror
movsl
test
cmp
sbb
out
cmp
push
stos
jns
cltd
inc
jne
scas
dec
jno
lahf
imul
mov
aam
js
aad
fs
cmc
mov
fisubrs
push
rclb
pop
push
xchg
push
cmpb
cld
sbb
stos
jl
xor
mov
scas
rcrl
jmp
movsl
cmpsb
mov
fmuls
jno
dec
das
push
xlat
and
lods
lret
dec
jmp
cmp
and
arpl
in
sub
cmp
dec
xchg
cltd
pop
lcall
xchg
shrl
jnp
test
ret
mov
push
dec
jns
in
stos
inc
pop
dec
dec
data16
mov
cltd
insl
and
add
push
mov
lcall
push
add
call
mov
fs
jnp
xor
icebp
and
stc
sub
lcall
out
int3
scas
orb
scas
in
mov
stc
push
shrb
lret
pop
out
xchg
nop
mov
or
call
adc
sub
sbb
jne
and
cs
jo
ss
jae
xchg
sub
aad
in
sbb
ss
jno
cmpsl
or
add
subb
dec
cwtl
test
dec
or
and
sub
inc
push
lret
mov
mov
fsubl
mov
inc
outsl
enter
arpl
test
je
push
jge
test
arpl
inc
dec
dec
jne
or
pop
pop
cli
adc
jg
mov
ss
sar
pop
in
adc
aas
xor
rcll
cmpsl
jae
pusha
xchg
outsl
test
ret
out
mov
jmp
ds
pop
or
push
imul
cmc
mov
mov
scas
fstl
push
jge
cwtl
inc
inc
pop
in
ljmp
enter
ljmp
aam
mov
jl
fnstenv
pop
adc
mov
xor
add
in
sub
sub
push
gs
sbb
or
mov
inc
adc
popf
mov
sub
inc
test
das
mov
xchg
pop
xchg
nop
addr16
jle
cmpsb
roll
scas
aaa
lock
inc
mov
lcall
xchg
les
lea
pop
sub
ljmp
adcl
out
pop
mov
movsl
stos
xchg
es
mov
sbb
mov
into
push
push
adcb
dec
and
imul
dec
add
sar
xor
pushf
pop
sub
popf
sbb
lcall
mov
gs
or
dec
jge
push
adc
jno
lds
wbinvd
adc
out
xor
push
adc
push
and
xchg
sahf
sarl
dec
inc
out
push
inc
ljmp
lahf
pop
sbb
std
call
andb
test
adc
sub
cmpb
mov
cwtl
cmc
jns
sbb
ss
or
sub
iret
out
xor
stos
inc
fiadds
mov
cmp
das
cmc
or
stos
jne
insl
fisubrs
add
add
jmp
mov
pop
push
mov
int
jle
lods
add
loop
js
dec
mov
inc
mov
mov
mov
sub
lock
jg
lds
pop
mov
cmp
popa
mov
xchg
jmp
push
mov
or
fwait
xlat
mulb
mull
sub
imul
lods
out
sbbb
test
popa
mov
cli
jo
popa
inc
movsb
sub
push
xchg
add
pop
push
and
repz
push
rorb
test
insl
cmp
movsb
mov
push
jnp
rcll
je
mov
dec
pop
inc
mov
popa
pop
push
dec
pop
mov
sbb
lret
sbb
fstl
push
xchg
stc
aad
and
push
outsl
cld
into
cmpl
jo
sub
sbb
jle
cmp
sbb
mov
cli
jno
jnp
sub
stos
mov
cmp
push
cli
mov
jle
adc
sub
shl
dec
push
lods
out
ret
mov
push
les
cmp
int
push
pop
outsb
jmp
sti
mov
push
shrb
fcmovb
es
sbb
out
push
mov
repz
clc
sub
dec
mov
inc
jnp
push
ficoml
sbb
ret
dec
aam
shll
imul
cwtl
xor
jo
push
roll
loope
pop
ss
ret
and
stos
cmpb
jnp
pop
or
and
xchg
cwtl
movsb
shr
jns
adc
cmpsb
pop
adc
ret
sbb
in
fwait
xor
aaa
mov
out
push
mov
sub
jl
mov
mov
xor
insl
iret
popa
sub
mov
xor
adc
jbe
xchg
cmp
into
stos
pop
imul
mov
push
cmp
inc
or
imul
xlat
hlt
jbe
and
cmp
push
addr16
out
dec
call
push
push
cmpsl
rclb
ljmp
xchg
pop
ljmp
jo
in
adc
cmp
jp
push
jg
push
mov
xchg
xor
ret
mov
mov
mov
xor
rep
inc
fcomps
mov
stos
and
dec
cltd
push
cmc
std
loope
jns
movsl
cmc
prefetcht1
push
add
das
pop
cmp
int
pushf
cmp
or
mov
sbb
imul
test
hlt
adc
add
arpl
inc
ja
test
jno
les
jmp
mov
hlt
mov
out
das
and
in
mov
xchg
push
and
pop
mov
fwait
mov
aas
scas
dec
and
inc
int3
mov
arpl
jns
gs
andb
hlt
push
xchg
xchg
ror
inc
repnz
dec
push
inc
mov
add
or
and
mov
popf
push
dec
inc
mov
xor
outsl
mov
mov
lret
clc
sub
pusha
out
push
loop
dec
jle
and
repz
outsb
dec
add
pop
into
push
and
add
pop
enter
jge
lret
orb
lods
cmovne
push
cmp
repnz
jbe
mov
nop
pop
adcb
fisubrs
mov
jmp
dec
sub
std
cltd
mov
xor
cmp
mov
imul
jle
and
jg
mov
pop
cmp
jae
arpl
sub
pop
cmp
jnp
ret
fildl
jno
sub
inc
mov
in
cs
scas
push
mov
push
adc
add
mov
or
push
push
cmpsb
lods
inc
xor
loop
mov
lret
mov
pop
hlt
mov
js
xchg
mov
jbe
adc
or
mov
fimuls
cmpsb
xchg
loop
ljmp
push
rorl
add
dec
sub
xchg
mov
or
sbb
cmp
fs
rolb
out
cmp
pop
enter
mov
xchg
sub
hlt
js
jmp
faddl
imul
or
mov
cmpsb
mov
cmp
orl
jecxz
lahf
popf
je
cs
mov
dec
xchg
out
xchg
cmp
popf
std
push
out
idiv
and
and
xlat
daa
sub
xor
insb
shrb
mov
or
push
mov
jp
pop
filds
add
cwtl
imul
pop
into
mov
fimuls
and
loop
sbb
sti
insb
iret
xchg
aam
push
pop
jb
out
imul
add
out
and
jg
dec
cmp
or
stos
or
fcomi
cmc
out
and
xchg
push
dec
push
das
and
mov
out
xor
lcall
fs
lret
jbe
testb
jno
mov
outsl
push
out
lret
sarb
pop
sub
ja
into
xor
mov
rcl
inc
push
jne
mov
cwtl
out
loop
loopne
push
cmpsl
ror
sub
enter
insl
scas
xchg
insl
or
imul
sbb
cltd
push
stos
cmp
aas
mov
fs
andl
loop
mov
add
popf
add
dec
pop
xor
in
popf
inc
sub
repz
das
cmp
je
cmp
sbb
stc
subb
aad
icebp
mov
mov
sub
sbb
repnz
ret
inc
add
popa
inc
cmp
add
cmpsl
dec
popf
iret
mov
movsl
push
pop
out
pop
or
bound
addr16
push
or
test
xor
ror
cmpsl
mov
inc
xchg
mov
sti
lret
out
adcb
cmpsb
add
cmp
test
adc
jbe
sub
sbb
or
push
dec
dec
sub
shll
mov
add
dec
arpl
les
push
ljmp
dec
fsub
dec
lods
aaa
xchg
dec
out
sbb
jb
inc
mov
xor
mov
roll
inc
repz
pushf
add
js
mov
inc
sahf
cltd
ss
in
xchg
aaa
pop
inc
mov
rol
cltd
xchg
pop
jno
inc
and
adc
dec
jb
fs
add
push
pop
sbb
mov
int
push
xchg
inc
aas
call
shl
insb
mov
mov
inc
or
dec
loop
dec
in
loope
cli
outsl
cmpsb
sbb
fstp
pop
and
mov
leave
push
xchg
xchg
cmp
or
mov
mov
and
insb
push
xor
pop
sbb
add
sbb
inc
jmp
std
mov
ret
xor
adc
jp
mov
sahf
xor
loopne
call
adc
push
aaa
cmp
jp
xor
test
imul
aad
mov
imul
cli
adc
sbb
or
fsubp
jecxz
inc
add
je
pusha
push
or
sbb
call
xchg
sub
inc
lods
fildl
insb
push
leave
cmc
mov
frstor
cmp
jle
pop
std
ja
and
push
pop
std
adc
xchg
popf
mov
std
fdivrl
cmpsb
mov
dec
aad
andb
mov
xchg
jno
idivb
and
push
cmpsb
inc
mov
xchg
xchg
xorw
push
shll
shll
push
loope
adc
add
xor
and
push
cmpsb
inc
mov
xchg
xchg
xorw
push
shll
shll
push
loope
adc
add
xor
and
push
cmpsb
inc
mov
xchg
xchg
xorw
push
shll
shlb
push
jecxz
adc
add
xor
and
push
cmpsb
inc
ss
push
loope
outsb
cltd
jle
sbb
and
stc
push
jmp
xchg
addb
loopne
shlb
and
adc
pusha
gs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
jne
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
jne
popa
jno
xor
daa
je
sub
shll
jg
cmc
das
dec
negl
ret
daa
inc
sbb
push
push
add
iret
psraw
sub
loope
lds
pop
enter
push
fcmovne
dec
adc
fwait
mov
xor
in
lock
mov
xor
je
inc
pop
sti
inc
lret
jo
lds
call
mov
push
icebp
xor
les
and
loop
adc
pusha
aaa
mov
push
dec
aam
loopne
rclb
jns
stos
lock
fists
inc
incl
daa
xor
roll
scas
dec
and
add
adc
sub
sub
add
popa
clc
mov
push
inc
inc
inc
jmp
movsb
mov
addb
rol
xor
and
adc
add
je
fs
inc
inc
cmp
movsb
loopne
clc
or
mov
sbbl
jnp
pusha
add
sub
jmp
out
loopne
int3
nop
xchg
mov
mov
imul
push
popa
jne
push
pop
jno
push
pop
aas
ret
clc
div
movsb
cmc
mov
in
aam
shlb
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
adc
add
je
fs
inc
inc
push
mov
mov
push
xchg
xchg
and
jge
xchg
inc
pop
jne
mov
loopne
sub
inc
jmp
push
xchg
and
mov
pop
cwtl
in
fs
push
test
mov
add
mov
pop
jmp
add
out
cs
add
mov
cmp
stc
add
mov
xor
pop
ljmp
mov
fildll
dec
sub
stos
popa
mov
cmp
or
sbb
sub
dec
add
lds
inc
inc
inc
xchg
sbb
loopne
sub
fbld
insl
and
fcmove
pop
mov
adc
mov
sub
dec
adc
adc
lock
mov
dec
lods
jno
push
mov
lret
sub
xlat
cmp
roll
or
and
pop
sbb
jae
fcompl
sub
dec
dec
push
cmp
out
cmp
xor
adc
pushl
shll
pop
lahf
popa
in
int3
mov
out
loop
int3
andl
jecxz
inc
out
adc
sti
inc
dec
shll
mov
js
push
jg
xchg
test
bound
ffree
push
jb
add
sub
mov
repnz
cwtl
in
shrl
lds
inc
push
jp
add
or
mov
stc
insl
xchg
shlb
mov
cmpsl
adc
lret
aam
inc
pop
mov
sub
mov
rorb
jp
lcall
jns
inc
arpl
fwait
ljmp
sub
mov
aas
xor
mov
leave
mov
pop
cmp
mov
loopne
ljmp
jle
or
add
fisubl
test
mov
pop
cmp
or
bnd
mov
popa
addr16
repnz
xchg
adc
mov
insl
jge
outsl
in
aam
cmp
test
repnz
xchg
pop
nop
pushf
lds
mov
roll
xor
lahf
sarb
jns
mov
xlat
lods
pop
jge
lods
cwtl
push
mov
push
out
or
movsl
fcmovbe
test
stos
fs
push
dec
ficoms
adc
jl
call
pushf
aas
xor
in
out
cltd
or
push
dec
repnz
int3
sub
shlb
inc
mov
stos
inc
jle
aad
fyl2xp1
and
stc
xchg
int3
add
aad
ja
arpl
fistps
in
aaa
pop
mov
cmp
xchg
in
mov
mov
or
imul
jnp
aad
jns
imul
ja
rolb
fidivs
add
ss
cmp
fs
test
add
or
cs
imul
rorb
aam
mov
sbb
push
mov
movsl
jl
stos
enter
ret
xor
or
push
sti
sarl
test
inc
ljmp
mov
lods
jb
and
inc
lret
daa
xor
cltd
cmpsb
into
arpl
fsubr
js
scas
mov
ret
rorb
pop
insl
jle
stos
jl
cli
sub
jl
lods
xor
inc
add
cmp
loop
xor
or
and
cmp
xchg
and
jg
mov
inc
bound
sti
and
xchg
and
int
insb
mov
imul
xor
test
lret
js
stc
daa
cli
cmc
sbbb
scas
mov
clc
pusha
fmuls
out
lcall
test
ud0
imul
pop
add
in
push
push
inc
push
enter
stc
or
inc
push
inc
out
das
inc
mov
in
mov
cmpsl
xor
cmc
sti
inc
push
xchg
and
or
in
mov
mov
test
test
icebp
mov
aas
test
inc
dec
mov
xor
fcoml
movsb
xchg
cwtl
cmc
dec
push
out
pop
jl
out
add
idivl
adc
divl
imul
and
ljmp
adc
pop
inc
hlt
mov
jnp
or
clc
lds
pushf
pushf
or
nop
popf
outsl
repnz
sbb
aas
outsl
mov
movsb
jecxz
mov
icebp
cmp
sub
js
movsb
mov
xchg
xor
xchg
adc
add
xchg
mov
adc
xchg
pop
pop
dec
lret
xor
mov
imul
push
add
imul
sbb
insl
xchg
jge
or
sbb
loope
adc
xchg
adcl
ds
xor
mov
fstps
sub
pop
idivb
xchg
imul
xchg
push
loope
fnstenv
xor
fwait
cmp
dec
sub
lods
pop
fucomi
ja
ds
in
scas
out
add
stos
jae
shr
adc
out
or
dec
and
xor
outsl
mulb
mov
dec
add
jae
repz
pop
mov
cltd
popa
cmp
inc
pop
xlat
adc
jp
idiv
mov
cmpsb
pop
mov
cltd
ljmp
nop
out
sahf
jmp
mov
iret
insb
iret
inc
sbb
ja
sbb
je
mov
les
pop
outsb
in
fadds
xchg
sbb
or
jg
inc
adc
fwait
xchg
pop
das
fistpll
in
pop
movb
xchg
gs
aaa
and
add
pop
pushf
test
jg
int
xor
sub
pop
mov
dec
ficomps
push
sbb
jg
inc
xor
or
sub
mov
push
adc
out
jge
fmul
inc
mov
out
inc
sbb
hlt
mov
insb
rcrl
xor
out
ss
xchg
aas
jbe
xorb
or
push
push
sub
jl
jmp
inc
out
js
cmp
push
push
dec
daa
or
adc
jle
fisubs
push
in
pop
subl
ljmp
push
inc
cs
cld
jl
pop
jle
loopne
mov
in
push
and
xchg
lahf
push
pop
call
pop
je
xchg
adc
mov
int
lods
test
inc
push
or
pusha
mov
and
add
mov
jo
mov
cltd
out
jg
cmpsb
push
das
mov
fidivs
int3
mov
cmp
push
das
pop
adc
push
pop
jae
sub
outsl
mov
push
cmp
popf
push
jp
pop
xchg
sub
cmp
std
in
call
ds
fwait
mov
mov
and
into
mov
addr16
and
add
pop
es
jmp
lret
test
imul
stos
push
cmc
inc
jbe
xchg
cmc
sub
cwtl
sbb
sarb
cld
sbb
add
daa
shl
dec
popa
cmp
ljmp
lret
out
lea
in
lds
in
xchg
pop
lcall
rcr
cmp
pushf
mov
push
cltd
arpl
and
repnz
xchg
stos
pop
call
dec
movsl
inc
out
pop
and
adc
and
xchg
notb
sub
pop
cmp
or
sub
cmp
jo
aas
insl
inc
popf
pop
out
and
es
sub
and
or
sbb
das
in
popf
loop
dec
in
jmp
add
pushl
ror
or
xor
mov
jmp
std
inc
lods
jno
pop
jne
int
lds
fwait
in
test
pop
std
outsl
mov
cld
cmp
or
testl
hlt
cmc
loopne
jbe
jge
mov
push
nop
nop
aaa
adc
cmpsl
sahf
jnp
lods
sub
aam
fsubrs
shlb
enter
add
test
jae
push
cmp
fsubrp
test
cmp
in
mov
adc
inc
in
mov
mov
sub
scas
and
aam
inc
pop
sbb
test
dec
dec
mov
jno
imul
repnz
xchg
lret
xchg
pop
mov
push
fstpt
push
lea
subl
mov
inc
mov
pop
jmp
cwtl
dec
insl
movsb
ret
mov
loope
push
lods
pushf
ds
movsl
xor
or
push
lock
pushf
add
inc
js
jmp
xor
mov
xor
xor
xlat
repz
int
insl
mov
cmp
xchg
test
shl
cmp
repz
jb
bound
pop
sbb
popf
ja
test
int3
movsb
and
or
repz
loop
cld
mov
lret
divb
sahf
mov
sbb
bound
mov
stos
in
xchg
shrb
cwtl
adc
and
and
pop
dec
push
jb
cltd
dec
cltd
sbb
incb
jno
sub
jmp
dec
lock
call
mov
mov
es
repnz
daa
xor
mov
add
lea
xchg
jns
rcrl
icebp
xchg
gs
scas
mov
xor
sbb
inc
pop
in
cli
cmc
test
lds
js
push
out
inc
lcall
test
insl
mov
lods
dec
es
test
push
inc
mov
shlb
mov
ss
push
shr
cwtl
enter
rcr
add
fcoms
mov
clc
push
repnz
pop
int3
imul
lahf
jg
mov
push
xchg
insl
fdivl
es
into
pusha
and
ds
fcoms
gs
stc
adc
mov
dec
xor
mov
fbld
shlb
fcmovnu
test
and
icebp
or
lahf
push
clc
fimuls
cmp
sub
sub
mov
dec
push
pusha
aas
pop
mov
popa
dec
movsb
pusha
sub
push
push
test
xchg
das
mov
push
arpl
leave
jle
fucomp
test
jecxz
imul
push
push
and
pop
imul
mov
jl
adc
pop
repnz
out
dec
mov
insl
es
aas
mov
fdivl
adc
pop
loop
xchg
cs
sub
dec
movsl
dec
inc
loopne
sbb
insb
xchg
add
aam
or
sbb
add
out
sbb
adc
add
imul
outsl
das
cmp
jbe
loop
mov
sbb
fsub
cmp
sahf
sub
in
jg
and
jae
xchg
es
or
cmp
das
mov
pop
inc
add
int3
push
loopne
sbb
or
pop
int3
mov
outsl
adc
loopne
or
or
imul
ja
cmpsb
xor
sbb
jb
jo
xchg
int3
xchg
adc
or
scas
loopne
test
sub
dec
ja
ljmp
xor
rolb
fimuls
andb
incb
push
enter
insl
cmc
fwait
sbb
dec
pcmpgtw
xchg
fimuls
or
les
push
jae
xchg
insb
loope
hlt
mov
mov
call
enter
fbld
imul
repnz
pusha
aam
in
adc
push
adcb
insl
mov
cli
cltd
mov
lods
popa
add
fucomi
push
cmp
jo
pop
xchg
cli
push
and
xor
fstpl
std
mov
fsubs
loopne
add
andl
pop
ja
out
roll
in
iret
fs
xchg
sbb
fwait
arpl
jae
jnp
stos
and
add
fcoml
jl
das
mov
in
fnstsw
arpl
cmp
lods
pop
sub
data16
das
scas
fldt
xlat
rcl
stc
test
push
xchg
mov
frstor
and
out
xchg
mov
enter
mov
cmpb
mov
xor
lcall
aaa
jmp
xchg
js
sbb
jae
arpl
loopne
push
pop
jg
ret
xchg
out
lock
push
ljmp
mov
fnsave
orb
sbb
loope
ljmp
push
xor
pop
test
out
aaa
sbb
lret
lret
adc
lods
pop
test
jns
mov
jle
and
or
out
inc
xor
sbb
pop
outsl
scas
inc
lret
aas
jmp
ljmp
test
adc
mov
and
inc
fdivs
lret
push
dec
mov
clc
repz
jmp
cmp
insb
sbb
add
test
lcall
nop
call
dec
jmp
shlb
stos
adcb
adcb
jle
icebp
gs
dec
cmpsb
cmp
cmp
mov
ljmp
call
dec
ss
sub
jle
cli
dec
stos
stc
xor
jbe
sbb
xchg
mov
leave
in
lahf
popf
lods
cmpsl
sbb
pop
and
xchg
jae
in
pop
mov
imulb
mov
repnz
xlat
mov
mov
sub
shlb
push
dec
xor
sahf
and
push
jns
mov
addl
or
fcmovne
insb
popl
xor
mov
aas
inc
out
lret
jbe
dec
cmp
scas
and
leave
ret
xor
rorb
inc
sahf
hlt
or
js
cmp
jo
std
xchg
cld
add
cmp
sub
or
pop
cltd
pop
or
call
jno
jo
jp
inc
pop
iret
or
test
lret
cmp
jbe
lock
mov
jg
mov
push
sti
fwait
pop
cli
push
fnstcw
cmp
jae
sahf
aad
cmpsb
fiadds
push
add
push
xchg
fsts
adcl
daa
inc
cmp
jge
movsl
mov
mov
sbbl
stos
out
out
stc
test
test
lea
in
pop
or
jnp
pop
inc
mov
pusha
xor
lock
pusha
xchg
or
inc
mov
divb
adc
fisubrs
or
out
push
add
mov
repnz
cmp
call
mov
inc
imul
shrl
add
jp
cmp
or
adc
cmp
ret
dec
scas
jb
fidivs
movsb
mov
add
vpsubw
ret
and
or
xor
sbb
or
stos
lock
cmpsb
out
sub
aas
pop
sbb
push
mov
dec
adc
xchg
roll
andl
jp
and
addl
mov
cltd
and
ret
adc
mov
in
inc
fadd
stc
scas
mov
aas
inc
fs
or
sbb
xchg
jle
aam
dec
add
bound
daa
leave
leave
cmp
cmc
call
adc
xchg
mov
testl
outsl
jmp
and
leave
je
jecxz
dec
sbb
add
in
or
call
loop
std
in
repz
xchg
cwtl
scas
push
mov
pushf
xchg
das
imul
pop
lcall
in
popa
imul
sbb
xor
hlt
cli
xlat
hlt
push
xor
jbe
push
rep
lcall
rcll
mov
xchg
fcomi
sbb
shll
mov
jnp
mov
adc
or
xor
arpl
push
stos
outsb
iret
ds
rcrl
fadds
cmp
jb
ret
popf
push
xor
mov
xor
inc
addb
xor
and
into
ficoms
jl
jg
jae
lcall
add
ffree
pop
dec
ds
cmpsl
mov
mov
xor
das
cmpsb
sbb
orb
sbb
sub
dec
out
arpl
jl
add
in
dec
push
loopne
outsb
jne
xor
mov
clc
ja
push
jo
xchg
dec
sbb
sub
inc
jp
cmove
rdpmc
lock
mov
push
sbb
jmp
in
dec
fs
push
sub
arpl
xchg
ss
das
cld
xor
ret
data16
mov
xlat
sbb
sarb
inc
pop
or
jg
push
mov
sub
xor
repnz
xchg
fstpl
leave
stc
sti
es
sar
test
bound
xchg
dec
call
cmp
insl
jl
idivb
addr16
scas
idivl
mov
test
test
xor
dec
xor
imulb
nop
aas
pop
popf
and
adc
in
inc
lods
mov
scas
mov
mov
cmp
or
adc
mov
loopne
xchg
xchg
mov
shr
cmp
push
or
movsl
test
dec
and
push
sub
inc
rcr
lods
lods
push
xor
fs
sbb
into
clc
enter
hlt
das
xor
mov
dec
shll
cmc
inc
push
les
inc
mov
mov
pop
cmc
roll
mov
adc
mov
jl
sbb
sbbl
sub
add
movsb
addr16
mov
hlt
sti
jo
gs
or
imul
add
in
push
shlb
mov
or
xchg
loop
and
push
xchg
ds
mov
outsb
or
xorl
sbb
cmp
push
decb
lahf
clc
jmp
sbb
and
mov
lods
push
loop
add
cmp
cmp
mov
xlat
out
mulb
cmp
or
dec
sbb
into
mov
movsl
mov
inc
jno
cs
ret
jmp
mov
xchg
aam
dec
outsb
subb
cmpsl
mov
pop
sbb
xchg
roll
repnz
roll
mov
xor
mov
loopne
jb
leave
cmc
sahf
add
and
cld
inc
push
push
mov
test
xchg
outsb
jp
jp
rcll
js
inc
ss
xchg
pop
sahf
in
xlat
mov
andb
push
fsubrp
push
or
loop
fistps
inc
std
icebp
xor
mov
dec
mov
pop
add
frstor
sbb
stc
push
fs
dec
fsubp
syscall
cli
xchg
stos
out
adc
int3
mov
jmp
shl
mov
mov
enter
arpl
fs
add
arpl
add
lret
bound
ljmp
in
add
sbb
push
push
or
sbb
fimull
lods
xlat
mov
or
fwait
test
mov
clc
mov
adc
rcrb
addr16
sbb
stos
mov
sbb
inc
movsl
mov
enter
popa
fdivrl
inc
addr16
sub
jmp
inc
sub
add
jb
ja
push
gs
xor
mov
xchg
fisubrs
cli
sbb
cmpb
mov
loope
mov
cmp
mov
std
test
test
scas
ljmp
sub
dec
cld
dec
fwait
stos
loope
or
cmp
sbbb
loopne
mov
mov
jecxz
fistpl
bound
cltd
jae
and
inc
xchg
ss
jl
mov
xor
aam
daa
shlb
fldt
gs
mov
jnp
and
mov
pop
mov
lods
mov
subl
inc
cld
and
iret
mov
mov
out
stos
arpl
jmp
out
sahf
dec
mov
sub
add
mov
push
fstpt
ret
into
insl
cmpl
xchg
dec
jnp
bound
add
mov
test
mov
mov
cmp
dec
xor
aad
and
pop
outsl
inc
jbe
cmp
inc
ljmp
aam
in
or
mov
inc
into
cld
mov
ja
out
sub
and
and
sub
add
sub
and
loop
movsb
popf
loope
pop
mov
scas
push
je
push
mov
pusha
push
fcoms
aam
ficomps
sub
xchg
stos
xchg
cwtl
sub
dec
mov
push
iret
pop
pusha
std
inc
mov
pushf
mov
sbb
insb
call
jae
or
xchg
dec
adc
jae
dec
rcrl
sbb
shrb
mov
inc
sbb
xor
fldenv
pop
mov
fs
clc
test
add
xor
push
jb
jae
icebp
rolb
sbb
inc
xor
adc
dec
cs
outsb
or
iret
in
lea
cwtl
push
int
pusha
xchg
cmp
or
jle
and
ret
lock
jg
movsb
lahf
push
xor
fisubrl
jno
sbb
inc
pop
mov
cmpsl
push
pop
ficoms
jl
dec
push
jne
outsl
mov
push
xchg
stos
popl
mov
faddl
dec
out
iret
loopne
adc
mov
xchg
mov
fisubrs
enter
and
jl
repnz
cmpsl
adc
mov
je
ret
pop
jge
ss
jne
cmp
dec
xor
adc
das
sub
shrl
push
pop
mov
dec
xor
jo
push
ja
xor
push
jle
iret
or
push
xchg
xchg
cmp
loope
out
inc
arpl
repnz
mov
leave
pop
imul
mov
movsl
lahf
add
jnp
inc
mov
decb
test
fldt
pusha
lret
push
out
xorb
sahf
xor
decl
fldcw
or
pop
jb
sub
jne
test
add
and
xchg
repz
outsl
lahf
jnp
push
lock
or
push
and
out
popl
or
jp
cltd
std
xchg
mov
dec
sbb
cmp
dec
fdivl
pop
lahf
adc
rolb
lock
shlb
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
adc
add
je
fs
inc
inc
push
mov
movsl
mov
addb
rol
xor
and
mov
call
mov
popf
jecxz
repz
int
mov
sbb
cmp
add
shlb
insl
xor
rcrl
or
int
in
mov
inc
add
arpl
adc
insl
xor
xchg
roll
aam
lds
or
jae
add
jl
push
pop
pop
adc
lahf
fimull
sbb
push
dec
adc
xlat
pushf
push
ljmp
jb
aaa
add
lea
mov
mov
dec
add
jge
ret
adc
je
mov
mul
sahf
xchg
or
imulb
fsubrp
mov
arpl
ret
outsb
in
insl
xor
ret
rcl
bound
int
int
cltd
mov
into
in
jecxz
rcrb
mov
jno
fsubs
or
bound
push
or
fimull
notb
out
push
test
in
dec
jae
xor
jb,pt
jmp
inc
inc
popa
js
in
mov
adc
mov
ret
sahf
mov
setp
jecxz
repz
mov
or
jae
add
inc
and
jl
lea
fadds
xorl
pop
add
adc
add
cmpsb
in
hlt
xchg
lahf
rolb
cltd
loope
es
js
dec
jae
add
inc
or
leave
lahf
clc
iret
xchg
frstor
or
jae
add
pop
and
jge
rcrl
or
frstor
or
jae
add
pop
and
jge
testb
inc
xchg
inc
dec
and
xchg
pusha
xor
bound
mov
in
fdivrs
mov
scas
lods
xlat
jb
loopne
mov
loopne
push
pop
push
fmul
fcomip
mov
jmp
inc
cmp
stos
outsl
outsl
outsl
jge
mov
add
loopne
jbe
push
stos
fwait
cmp
fnstenv
shrb
pop
adc
and
cs
ss
lods
ret
lret
mov
sbb
fbld
das
or
aaa
add
scas
std
xchg
inc
jg
xor
sbb
daa
imul
jnp
xor
mov
lods
and
mov
push
dec
out
xchg
pop
jbe
cld
sarl
pop
xchg
sahf
jecxz
xor
jp
cmp
jl
xchg
mov
and
leave
scas
xchg
sub
stos
mov
movsl
xlat
push
ud2
mov
pop
inc
fwait
cmpsl
test
inc
ret
pushf
cli
lock
lret
lcall
arpl
cmc
testb
pop
out
lea
cmp
dec
fwait
div
mov
jmp
dec
adc
sub
add
les
add
sub
mov
xor
leave
sbb
cmp
adc
int
sub
xchg
std
mov
xchg
sub
sub
les
fsubrs
stos
lahf
inc
neg
rclb
xor
test
mov
sqrtps
mov
mov
xchg
daa
js
adc
stc
push
jns
pop
ljmp
mov
enter
out
push
push
and
adc
mov
mov
adc
jb
aad
out
add
mov
adcb
lcall
int
mov
push
jo
add
mov
inc
aad
out
loop
movsl
in
mov
addb
jae
cmp
xor
aas
lcall
mov
cmp
pop
test
pop
xchg
sahf
ss
leave
fadds
sub
cmp
pop
clc
lds
mov
sub
push
xor
xor
mov
cli
scas
jo
push
sti
sub
andb
mov
inc
pop
jmp
out
xor
cmpsb
lret
mov
mov
mov
dec
jmp
movsb
and
cltd
repnz
jnp
sub
and
rolb
pop
and
stc
es
pop
insl
aam
pushf
mov
cmpsb
cmc
cmpsl
lds
lds
jecxz
mov
jno
repz
jge
pop
and
jb
xchg
xor
sbbl
cmpsb
popl
fs
jno
cmp
cmp
sbb
lahf
sbb
stos
cmp
mov
and
push
icebp
xor
mov
xchg
pusha
add
lcall
aad
clc
jp
enter
mov
mov
sub
test
push
aaa
sti
test
cmpsb
rcrb
sbbl
mov
in
sbb
cwtl
imul
in
jecxz
cs
jecxz
inc
ret
mov
enter
int
sbbl
and
jmp
jge
std
xlat
and
imul
pop
repnz
fucomip
cld
in
out
insb
stos
jmp
xchg
lods
out
cmp
dec
loop
push
push
pop
dec
sbb
and
push
mov
faddl
mov
cmp
and
mov
int3
shrb
and
xor
and
dec
es
jp
insb
pop
mov
dec
mov
mov
dec
es
ja
sub
push
mov
sarl
shll
loope
sub
mov
jmp
test
and
mov
adc
cli
movl
pop
stos
das
into
faddl
sub
shlb
and
and
mov
iret
cmp
stc
add
enter
mov
jbe
aas
movsl
shlb
ret
arpl
ss
fdivrl
add
jns
int
fwait
daa
mov
fidivl
or
sub
ret
mov
and
loopne
jbe
scas
negl
clc
mov
mov
popf
or
jbe
sub
xor
pushl
cmpsb
pop
icebp
jl
in
dec
dec
xlat
mov
scas
dec
mov
popa
and
jns
mov
fwait
inc
push
pushf
mov
adcl
dec
pusha
jg
or
and
lahf
mov
in
lods
dec
adc
enter
add
fcompl
sub
into
outsl
inc
repnz
icebp
xor
inc
stos
inc
cmpsb
push
mul
outsb
sbb
aam
pop
dec
xor
sub
into
push
cmpsl
dec
mov
adc
cs
xor
lea
jns
fcompl
dec
and
adc
stos
dec
into
rcrl
adc
push
or
xchg
movnti
push
cli
clc
dec
dec
adc
jp
shlb
lods
dec
push
add
inc
loop
dec
cmp
ds
pusha
inc
add
addl
xchg
aas
xchg
inc
xor
add
mov
push
sub
sbbl
loopne
movsb
inc
pop
mov
fldl
cltd
sub
and
cmp
jns
sub
sub
adc
sbb
jl
push
test
jbe
sub
xchg
mov
sbb
sub
add
dec
flds
mov
dec
mov
pop
imul
fcomp
jmp
test
pushl
fwait
mov
xchg
push
outsl
cld
cs
adc
fstpt
stc
or
or
leave
out
enter
push
mov
icebp
xor
bound
sub
mov
mov
outsl
adc
notb
cli
add
movsb
mov
jp
jp
xor
std
pop
js
out
xchg
popl
or
adc
scas
and
sub
ss
rcll
shlb
push
sub
cmc
fisttps
sbbb
rcrl
sub
cmp
shl
icebp
fwait
lcall
push
scas
pop
into
cs
mov
cmc
mov
mov
adc
fadds
or
repz
or
mov
into
pop
cmpsl
jb
in
mull
xor
das
jle
xchg
push
add
push
adc
popa
hlt
das
insb
movsb
dec
loop
cld
lret
jb
pop
push
mov
pop
int
mov
pop
cmc
test
repz
cmp
xchg
mov
mov
jecxz
sbb
sbb
outsb
jnp
jmp
in
and
addr16
mov
mov
cmp
leave
mov
fisttpll
sbbl
push
xchg
aaa
ds
test
mov
movsl
orb
push
add
inc
mov
jnp
loope
xchg
fwait
sub
adc
and
int
mov
popa
arpl
out
push
int3
add
imul
adcl
insb
add
daa
sub
aas
mov
insl
and
sub
lods
pop
push
lods
testb
jbe
jmp
sub
mov
jno
xor
sbb
fucomp
mov
pop
lods
imul
imul
dec
scas
cli
sbbl
stc
ss
xchg
jge
mov
push
fcmove
fisubrs
dec
inc
inc
adc
xchg
lods
jae
loope
ljmp
sub
mov
cmp
data16
mov
lock
sbb
xor
fwait
addr16
std
adc
loop
imul
inc
imul
test
fimull
call
bound
xchg
insl
test
mov
enter
ror
inc
scas
lds
imul
clc
mov
xor
out
jns
xlat
arpl
fcomps
mov
popf
imul
xchg
sbb
fxch
push
loop
or
pusha
sahf
push
sbb
or
xor
aas
dec
xlat
xchg
lock
je
push
in
xchg
mov
or
stos
cmpsl
mov
call
cmp
lea
or
mov
sahf
jle,pn
jg
pop
nop
jns
mov
mov
mov
cmp
or
cs
ss
cmp
xor
jmp
jge
pop
js
out
out
sub
inc
insb
adc
mov
js
shll
outsb
jns
imul
repz
dec
lret
add
std
addr16
scas
sbb
jmp
sub
or
cmp
outsl
mov
push
arpl
and
push
push
movsl
jmp
rorl
decl
fdiv
cmp
jp
popf
add
jmp
cwtl
outsl
call
jb
test
bound
or
sbb
push
ds
popf
cmp
jg
mov
pandn
je
test
inc
dec
clc
xorl
dec
int
int
dec
ret
xchg
sub
out
push
in
xchg
ja
push
lock
sbb
cltd
scas
inc
in
pop
orl
sub
add
dec
sbb
cwtl
inc
adc
jp
mov
push
mov
sub
sub
xchg
mov
call
push
cmp
pop
fldl
adc
sub
xchg
add
test
lea
call
mov
jg
sub
push
lea
fdiv
fadds
insl
jp
ret
mov
or
mov
xchg
mov
iret
lret
jp
mov
shll
jmp
and
sahf
push
lods
jnp
sub
xor
push
lahf
in
ja
hlt
insb
inc
ret
stos
aaa
mov
jae
jnp
ljmp
mov
ret
mov
pop
sub
scas
fwait
jno
imul
movsb
test
in
push
mov
jbe
mov
mov
jnp
gs
fst
mov
jl
out
lret
pop
call
fdivp
inc
xchg
pop
in
xor
xor
stc
mov
mov
jno
xchg
mov
xchg
sub
and
pop
add
notl
sub
xor
sub
push
call
pop
outsl
or
fistpll
pushf
mov
jmp
test
mov
cltd
xor
mov
cmp
shlb
out
fcmove
sbb
int
shr
addb
pop
and
jne
pop
push
and
jns
ljmp
xchg
mov
movsl
out
sbb
in
xlat
aad
adc
out
gs
mov
call
xor
inc
add
call
in
cmp
pop
sbb
adc
fstpt
adc
adc
scas
repz
stos
mov
pop
adc
push
pop
cmp
in
pop
cmp
jb
mov
notb
push
ret
push
jbe
div
add
sbbb
jb
jl
int3
int
mov
jge
inc
jnp
jns
lods
insb
sbb
clc
add
add
sbb
mov
int
insl
testb
daa
cmp
fwait
or
popf
pop
dec
add
sbbb
xchg
stos
and
sarb
inc
mov
pushl
or
mov
fcmovne
and
dec
pop
adc
mov
pop
ljmp
sbb
test
dec
push
mov
or
pop
fs
in
dec
leave
test
outsb
ror
fs
aas
xchg
out
icebp
xchg
enter
mov
mov
mov
clc
xor
mov
shrl
sub
dec
imul
test
and
insl
mov
lret
mov
loop
lock
or
sbb
inc
roll
or
mov
dec
add
mov
ja
inc
xchg
lahf
sahf
xchg
testl
cmp
int3
add
aaa
xor
mov
loopne
bnd
in
loop
mov
daa
mov
xor
push
addl
sub
lret
das
je
sahf
cmpsl
push
mov
fimull
in
pop
fiaddl
jp
sbb
repz
ja
cmpsb
sub
out
imul
and
mov
mov
xchg
call
pop
in
andl
clc
shll
arpl
testl
xor
xchg
and
dec
pop
flds
push
or
cmp
mov
mov
fsubl
shr
xchg
cld
arpl
push
sub
pop
fisubrs
rcl
fcomps
jl
push
adc
xchg
nop
mov
lahf
xchg
loopne
and
xchg
push
xor
ljmp
jb
or
sbb
in
imul
jnp
movb
push
and
pushf
sbbl
add
adc
sub
dec
cld
jle
fimull
push
dec
xor
insb
aaa
int3
incb
xor
in
sahf
stos
xor
sbb
push
or
nop
cmp
mov
rcll
inc
mov
adc
sub
cmc
jg
in
jno
fsubl
push
and
mov
jmp
dec
test
dec
cwtl
sbb
jb
clc
sub
ficoms
pop
adc
add
add
test
inc
out
jg
jp
es
out
xor
test
ret
fiaddl
test
mov
sbbl
repz
out
inc
andb
pop
cmc
outsb
shl
movsl
jo
loopne
in
adc
nop
aam
or
adc
mov
imul
mov
sbb
data16
filds
ret
leave
fadds
mov
lahf
mov
mov
push
call
lods
lahf
inc
xchg
sbb
mov
or
sarl
mov
iret
out
push
push
sti
jo
mov
aam
adc
cltd
pop
stos
mov
adc
pushf
pop
es
mov
imul
jne
test
es
pop
popa
popf
in
ret
dec
and
inc
jb
daa
cmp
leave
les
pop
adc
mov
mov
sub
push
out
mov
jae
lcall
idivb
push
and
inc
pop
sbb
cltd
sub
xchg
mov
jge
mov
icebp
jne
sub
xchg
lods
inc
push
cmp
insl
cmpsb
mov
aad
jae
shll
daa
dec
jge
sub
out
subb
cwtl
data16
push
ret
test
mov
lahf
inc
dec
sbb
push
jmp
jbe
xchg
sarl
je
shrl
test
ror
pop
fldenv
mov
in
fisttpll
mov
adc
frstor
loop
lds
insl
ja
or
cmp
inc
mov
insl
mov
xchg
and
data16
int3
inc
mov
ja
inc
sub
das
add
push
loopne
pop
xor
decb
fistpl
dec
aaa
stos
lahf
mov
test
cmp
test
cmp
mov
dec
lret
pop
fsubs
pushf
inc
lahf
push
lcall
iret
push
add
fcmovu
mov
cwtl
in
push
dec
or
xchg
inc
cmp
loopne
mov
popf
ljmpw
int3
rclb
filds
push
jle
loop
mov
stos
adc
xor
ret
sbb
adc
outsb
mov
mov
js
xchg
jae
gs
dec
movsl
push
mov
insb
inc
or
dec
adc
and
lahf
jmp
adc
mov
fsub
sub
push
bound
xchg
lret
addr16
aam
lcall
insb
daa
add
or
mov
dec
dec
stos
xor
or
or
popf
jae
out
sub
popa
out
mov
mov
testb
xor
out
pop
cmp
rorl
loope
add
xor
add
add
test
ljmp
cmp
dec
stos
cmp
push
mov
xchg
jge
int3
in
mov
test
mov
sbb
stos
push
dec
cli
arpl
mov
mov
and
inc
clc
add
mov
adc
mov
cmp
iret
dec
and
inc
leave
or
adc
jecxz
jmp
pop
xor
jecxz
sbb
push
push
adc
fwait
mov
sbb
push
push
inc
jl
xor
mov
imul
jns
lahf
xchg
mov
xor
adc
add
adc
xchg
rol
dec
fwait
leave
outsb
jge
or
xchg
movsb
sar
sbb
rolb
hlt
and
adc
mov
cmc
stc
ljmp
adc
dec
mov
xchg
push
imul
loopne
popf
fnstsw
stos
mov
jle
pop
movsb
repnz
cwtl
add
xor
cmp
movl
mov
jp
lea
jo
aad
dec
ja
pop
jne
dec
lds
adc
inc
out
pop
arpl
popf
pop
adc
ds
sub
inc
shl
push
outsl
stos
inc
inc
imul
cmp
push
mov
adc
mov
push
and
sbb
jl
jo
mov
push
dec
mov
outsb
dec
imul
inc
mov
and
xlat
sbb
xchg
cmpsl
pop
das
fidivrl
cwtl
xchg
cmpsb
ret
add
sbb
push
fbld
or
fildl
vshufps
call
sbb
or
and
bound
scas
pop
test
add
inc
push
aaa
mov
sbb
mov
mov
push
push
daa
cmp
cli
xor
xchg
lret
insb
enter
xchg
mov
jge
enter
dec
xchg
pinsrw
push
adc
adc
sub
lods
rorb
rclb
in
xor
or
push
jl
sti
pop
push
bndldx
sbb
lock
dec
or
adc
outsl
mov
xorl
es
xor
bound
xor
mov
orl
mov
movsl
pop
das
xor
fimull
inc
adc
add
insl
addr16
sub
xchg
push
mov
mov
clc
ja
cmove
inc
fwait
inc
inc
ficoml
cs
mov
push
iret
fildll
outsb
rcrb
cmpsl
lret
cltd
pop
mov
cmp
adc
cmp
aad
jg
movsl
sahf
pop
or
dec
sub
inc
leave
pop
pop
das
jmp
cwtl
lea
shlb
repz
mov
jge
xor
jnp
push
pop
sub
push
xchg
mov
mov
movsl
test
lahf
push
icebp
test
inc
mov
test
and
or
ss
pop
sub
xchg
jecxz
shl
sti
fs
mov
in
insb
bound
pusha
dec
nop
je
lcall
pop
pop
leave
fists
pop
cmp
out
subb
jg
in
cmp
sub
sub
test
aad
data16
insl
iret
movsb
iret
flds
inc
jp
cltd
jge
std
or
pop
sub
out
sarb
insl
ss
add
jo
push
dec
std
inc
inc
leave
xchg
test
push
ja
inc
leave
pop
mov
pop
cmp
or
inc
imul
scas
cmp
fbld
fs
add
xor
and
jecxz
lds
add
mov
inc
or
xor
lock
lahf
sub
dec
call
cs
leave
add
fiaddl
sub
mov
add
push
fstp
mov
sub
add
lods
xchg
movsb
cli
or
cltd
daa
sahf
cltd
jp
xchg
sarb
adc
out
sbb
jp
js
mov
pop
inc
pop
mov
sub
pop
xor
sub
mov
push
shlb
stos
inc
pop
mov
hlt
pop
xchg
mov
add
adc
inc
jmp
inc
or
xchg
adc
jae
mov
sbb
stos
push
test
stc
in
scas
movsb
mov
dec
fadds
sub
sbb
hlt
jno
dec
jle
sbb
cmp
mov
jmp
pop
std
cld
lret
insl
pop
sub
fwait
push
inc
subl
std
inc
stc
fsub
add
mov
sbb
loopne
adc
filds
add
jg
filds
push
cli
ror
call
sub
loopne
leave
jle
mov
xchg
add
inc
xlat
jp
mov
hlt
add
insb
inc
repz
int3
mov
mov
fstl
cld
sbb
subl
les
movsb
fldcw
push
rclb
dec
arpl
in
sub
ror
mov
cmp
std
ljmp
lret
shlb
pop
ljmp
scas
lods
jbe
lret
mov
pushf
lods
repnz
fld
ret
push
mov
pop
dec
mov
jp
adc
into
xor
cmpsl
stos
insl
jmp
adc
sbbl
push
mov
cmp
pop
iret
jle
fimull
fmuls
adc
roll
popa
cltd
push
push
ljmp
stc
adc
loop
mov
dec
jg
sbb
mov
sub
mov
xchg
mov
jns
push
mov
lret
sti
loop
ds
js
inc
mov
cmp
inc
shll
cmp
mov
inc
add
fsubs
adc
cli
aaa
push
cmc
cmc
mov
or
or
push
cmp
inc
mov
lods
or
push
jne
fucomip
dec
lea
icebp
xchg
cmp
popf
loop
repz
mov
or
jae
add
pop
and
jge
rcrl
or
frstor
or
jae
add
pop
and
jge
lea
arpl
xchg
frstor
or
jae
add
pop
and
jns
mov
cltd
jecxz
repz
mov
or
jae
jae
arpl
push
adc
dec
arpl
sub
adc
aad
xchg
or
cmp
sub
pop
aad
in
cmc
insb
or
mov
push
inc
gs
jne
aad
xchg
sub
cmp
sub
xor
insb
fisttps
xchg
mov
loopne
lock
adc
outsl
ret
arpl
pop
in
mov
inc
pushf
xor
stc
into
jmp
inc
popa
loopne
xor
pop
xchg
mov
ds
push
mov
les
or
inc
popf
sbb
scas
add
push
cmp
pop
inc
fs
loope
popf
add
or
and
adc
lds
pop
mov
mov
push
mov
insl
pushf
pop
lods
pusha
adc
fsubrl
adc
or
dec
pop
xlat
mov
xchg
or
orb
sub
hlt
cmp
sbb
sti
mov
pmullw
insl
adcb
lods
nop
xchg
enter
loopne
mov
jge
insl
movsb
ret
mov
inc
pop
aad
mov
pushf
adc
cmpsb
inc
fcoml
int3
gs
ja
pop
lret
stos
movsl
jo
mov
jl
add
arpl
test
mov
in
aam
cmc
dec
aam
lods
xor
or
mov
xor
or
aam
rcrb
mov
mov
nop
sbb
es
push
in
je
add
jne
test
sub
pop
aad
in
cmc
insb
add
mov
push
int3
gs
jne
test
sub
pop
aad
in
cmc
insb
add
pop
push
or
out
add
fsubl
sbbb
push
ds
pop
mov
inc
test
jnp
sbb
pop
jp
dec
jecxz
outsb
fcmovnbe
adc
out
stos
sahf
je
movsl
sub
mov
push
mov
in
jg
push
push
or
faddl
cmp
sbb
adc
inc
or
cmp
sub
aaa
xchg
pop
pop
sahf
cmp
adcl
inc
mov
pop
xor
ficoms
nop
xlat
push
je
jne
shll
aas
out
jne,pn
es
lcall
lret
jl
xchg
mov
mov
neg
pop
scas
insl
mov
fldl
mov
sbb
adc
sbb
cmp
add
pop
xchg
cltd
loop
in
sbb
sub
sbb
clc
std
stc
add
lret
mov
dec
lcall
xchg
pop
test
xor
iret
rol
enter
mov
stos
cmp
xor
jnp
and
push
mov
push
push
insb
in
jo
or
pop
mov
mov
in
cmpb
pop
imul
call
jne
mov
outsb
sahf
sbb
fs
lcall
test
rcrl
jmp
es
mov
lret
test
mov
orl
sub
lea
sub
pop
mov
mov
out
into
test
cmp
mov
dec
movsb
out
je
sub
mov
and
rolb
cmpsb
adc
and
shll
int
jge
fcomps
cmp
cmp
jle
cmpb
xlat
lods
int
insl
fxch
iret
pop
and
lods
cmp
cmp
das
jae
cmp
cltd
hlt
loop
imul
jb
es
popl
mov
xchg
jnp
in
lods
inc
xor
loope
jbe
sub
and
add
sub
std
lret
mov
loope
push
pushf
sub
push
jmp
idiv
xchg
fisubrl
arpl
int3
xchg
icebp
in
mov
lock
add
dec
fcoms
xorb
pop
movsb
pop
js
in
test
enter
push
inc
gs
das
push
sub
adc
ds
in
movsl
loopne
add
cltd
cmpsb
enter
loopne
lret
addr16
fldl
out
push
mov
movb
pop
rorb
dec
mov
mov
and
xor
add
out
jecxz
mov
or
aas
js
popf
lods
cmpsl
imul
test
mov
xchg
ds
sbb
xchg
fwait
sti
or
and
push
scas
les
add
cmp
sub
mov
mov
add
into
iret
inc
insb
lahf
mov
lret
or
pop
mov
std
fidivrs
cmp
aam
pop
mov
movsl
sub
push
movsl
mov
mov
pop
push
test
and
hlt
movsb
push
imul
xlat
insl
lods
adc
pop
push
xchg
lods
jle
inc
dec
inc
or
bound
negl
loope
pop
inc
jle
xor
or
shr
xchg
push
nop
push
lods
cmpl
ret
rorb
cmc
dec
dec
or
test
pop
shl
cmpb
repz
adc
xor
ret
jmp
add
aam
test
pop
pop
in
idivb
sub
fldenv
push
dec
jne
stos
outsb
roll
ret
push
and
stc
mov
jbe
addb
sti
sbb
and
mov
pop
movsl
imul
sub
inc
scas
mov
imul
mov
xorl
xor
cmp
fsubs
xchg
rcrl
inc
hlt
jle
adc
push
fwait
and
push
mov
and
dec
xchg
jnp
jne
and
add
icebp
lods
das
or
aam
cmp
jg
cltd
cltd
adc
insl
push
pop
imul
mov
adc
and
aas
or
divl
cmp
cmp
sub
lcall
sub
loopne
in
pop
inc
mov
xor
inc
movsb
or
mov
and
lahf
xor
or
and
adcb
add
sbb
pop
lret
lds
jb
sub
jp
div
push
xor
mov
idivl
cmp
cmp
cmp
push
xchg
cmp
jb
mov
xor
sti
out
xchg
xorl
xor
pop
shll
mov
or
mov
adc
nop
cltd
jbe
stos
movsl
fstpt
add
mov
call
das
add
incb
dec
xchg
push
jns
xchg
xchg
test
test
jns
add
daa
imul
add
lock
jae
jmp
popa
fldcw
or
pop
int3
shrl
pop
dec
ss
imul
mov
xor
iret
sub
clc
inc
test
cli
clc
lahf
sbb
bnd
xor
inc
rcr
mov
xor
loope
sti
jne
or
or
inc
mov
fsts
xor
rcl
subl
sbb
push
rol
gs
and
mov
std
enter
jle
adc
xor
push
dec
lds
pop
mov
fidivs
sbb
test
or
jbe
push
mov
adc
imul
and
ret
test
push
dec
xor
cmp
inc
scas
cmp
stos
std
shrb
mov
jbe
hlt
push
mov
ja
sub
and
xchg
sub
lahf
mov
xor
or
push
adc
push
sbb
es
or
push
ror
aad
push
fdivp
cmp
into
daa
add
ds
add
call
je
pop
push
cmp
jmp
jge
lahf
mov
add
movsl
cmpsb
outsb
or
dec
dec
adc
test
call
orl
pop
test
add
cmp
xchg
imul
adc
idivb
shlb
aad
cli
mov
push
and
dec
addr16
pushf
push
or
dec
xlat
push
push
jne
int3
push
lods
in
mov
lcall
push
mov
xor
mov
xchg
add
daa
arpl
les
mov
add
mov
push
fdiv
xchg
xchg
fsubrl
and
imulb
out
xchg
ret
enter
insb
push
sti
out
xorl
xor
divb
icebp
mov
sub
mov
sub
test
test
out
dec
push
sti
out
adc
rcrl
int3
cmp
xchg
xchg
fscale
add
test
push
movsl
xchg
xchg
mov
sub
shr
or
in
movsl
dec
cmp
xchg
dec
fistpl
pop
or
pop
and
xor
dec
add
xor
shlb
dec
add
sahf
es
out
roll
pop
hlt
mov
stos
mov
sbbb
jmp
je
mov
add
sahf
or
push
pop
mov
nop
ja
repz
rorb
pop
mov
jns
push
push
xor
mov
ret
outsl
sbb
cmovb
xor
mov
xor
fsub
ds
shrb
or
lret
popf
cmp
inc
add
lcall
and
outsl
add
cli
int
and
pop
out
shl
adc
mov
mov
ljmp
mov
xchg
in
xchg
sbb
add
jmp
popa
aad
adc
in
scas
add
inc
mov
pop
mov
jmp
sbb
outsb
push
pusha
sub
in
pushf
std
lcall
adc
out
shrl
xchg
ret
sub
or
sub
push
or
jae
pushf
addb
loop
jnp
inc
loope
stc
jl
pop
xor
cmp
in
imul
sub
sbb
pop
pop
insb
cmp
fwait
pop
sbb
call
sub
push
scas
jge
cwtl
sbb
inc
inc
fidivl
sub
and
add
dec
loop
stc
jmp
out
test
xorb
aam
cld
mov
pop
mov
or
mov
mov
jb
mov
mov
push
inc
inc
adc
ja
in
mov
aad
fidivl
dec
rolb
rsqrtps
mov
je
inc
testb
and
loop
sbb
les
hlt
lea
sbb
std
cltd
insl
or
fs
fcompl
mov
add
dec
sub
pop
movsb
popa
adc
xor
addr16
call
fiadds
push
mov
push
stos
add
pop
mov
out
push
movsl
cmp
sub
shlb
inc
mov
jb
in
or
testl
xchg
nop
mov
notb
dec
xchg
push
or
mov
xchg
push
cmpsb
leave
xchg
inc
repz
js
es
stos
push
pop
or
and
pop
cltd
inc
stc
cmp
stc
incl
cmovle
sar
cwtl
inc
xchg
fisubs
mov
push
mov
or
mull
aad
adc
lea
xor
repnz
cmp
mov
xchg
add
mov
inc
mov
shll
ror
ud1
ret
lods
cmp
hlt
out
dec
push
mov
adcl
imul
rcl
cli
add
pop
mov
push
fnstcw
xor
jns
mov
and
ss
into
cmpsb
add
mov
cltd
mov
addr16
jle
and
cmpsb
cmp
outsl
lahf
mov
inc
and
daa
adc
les
xchg
and
stc
sahf
dec
mov
cmp
jbe
and
ret
outsl
adc
push
stc
lods
pop
sbb
add
call
sub
or
vphaddwq
xlat
xor
pop
lret
cmp
std
cmpsl
xlat
sub
adc
mov
xchg
jge
and
adc
xchg
xor
movsb
ret
in
fists
xchg
mov
ss
daa
jmp
xchg
repz
adc
sbb
movsb
or
or
dec
xchg
and
ffree
mov
es
dec
pop
aam
stos
jmp
fidivl
fnstsw
sbb
push
dec
cmpsl
pop
pushf
mov
fnstcw
movb
insl
pop
sbb
inc
hlt
aaa
mov
cmpsl
enter
ds
cli
add
mov
fnstsw
dec
cmpsl
mov
into
xchg
imull
and
test
ljmp
sbb
xchg
push
jle
push
xor
mov
gs
push
ds
dec
mov
inc
and
mov
push
out
jge
imul
pushf
mov
sub
outsl
pop
loop
or
dec
fs
test
stc
or
sbb
jge
push
or
outsb
mov
dec
repnz
push
ficoms
cmpsb
pushf
push
sahf
daa
lods
mov
mov
nop
sbb
pop
addb
fisttps
pop
lcall
outsb
pushf
jmp
fisubl
sbb
in
sar
dec
arpl
clc
push
pop
push
cmp
popf
cli
sub
fs
jne
pop
or
sub
in
mov
ficomps
pop
filds
ljmp
loope
pop
pop
xchg
loope
sahf
mov
rol
jecxz
movsb
sbb
idiv
fucomp
dec
adc
cs
int3
repnz
sub
add
fucom
rorb
lods
push
mov
lea
inc
sbb
and
stc
cli
out
mov
imul
sub
mov
jae
mov
add
cld
test
aas
insb
push
dec
pop
cmpsb
in
lods
out
aam
hlt
stos
shl
xchg
pop
pop
push
and
xlat
mov
lods
in
mov
lret
jb
ss
or
push
out
mov
push
addl
adc
popa
mov
cmp
push
cmp
push
rol
iret
adc
sub
pusha
mov
or
loop
pop
mov
pop
fisttpl
fiadds
mov
pop
fcomip
stc
addb
sbb
xchg
lahf
jbe
loopne
lock
daa
adc
mov
int
cmp
testb
ds
or
pop
xchg
push
lret
cmc
shrb
aam
pop
and
mov
data16
das
sub
push
add
mov
mov
mov
pop
pop
dec
js
mov
cli
dec
mov
sub
jns
sti
popf
lods
fnstsw
inc
push
mov
fildl
cmp
sbbl
lods
lahf
imul
popf
pushf
iret
mov
subl
stc
stos
call
pop
ds
in
popa
xchg
sbb
mov
and
shrl
popf
jp
test
mov
adcl
cld
adc
xor
in
mov
mov
fstpt
lds
insb
xchg
push
bound
inc
dec
push
xchg
xor
iret
test
hlt
jmp
or
aad
shrb
cmp
sbb
das
mov
mov
mov
lcall
int
mov
xor
int
sqrtps
aad
jbe
mov
repz
aam
repnz
mov
stos
or
add
push
rorb
data16
cmc
ja
incl
adc
sub
lret
sbb
notb
jg
sub
inc
clc
xor
lock
outsb
orl
fnstcw
mov
pop
xor
inc
imul
adc
xlat
dec
scas
and
sbb
mov
jae
out
call
and
je
add
fisubl
jb
addr16
into
sbb
loope
xchg
inc
push
fisubrs
aas
fdiv
adc
insb
jl
inc
sbbb
mov
imul
jmp
out
pop
test
test
fcom
leave
pushf
xor
mov
lods
or
loope
pop
dec
or
mov
sbb
jecxz
pop
mov
mov
pop
add
ss
aaa
or
mov
push
jl
xchg
mov
mov
mov
adc
jne
inc
xchg
aam
adc
sbb
push
xchg
xor
outsb
mov
out
or
shlb
int
fbld
or
fistpl
adc
sti
fstl
das
add
cli
and
les
mov
std
or
mov
outsl
in
dec
pop
rcrl
and
jne
xor
sbb
dec
push
and
mov
mov
ljmp
stc
jne
out
out
mov
inc
xor
clc
into
cmpb
iret
fimuls
mov
cmp
stos
sarb
stos
pop
sbb
in
sahf
test
xlat
push
push
sbb
or
shlb
dec
pop
pop
add
xor
es
imul
push
sub
jmp
scas
lcall
and
loop
add
mov
cs
cld
leave
popf
mov
cld
enter
jecxz
stos
cmp
in
push
dec
mov
pop
sub
seta
or
mov
cli
ja
call
sbbb
inc
gs
sbb
adc
sub
jae
pushf
hlt
loopne
mov
out
inc
std
adc
aad
push
mov
xor
pop
pop
stos
cmpsb
pop
and
in
pop
mov
xor
mov
dec
pop
adc
std
testb
aam
mov
cwtl
jno
ret
arpl
xor
aad
rcll
cmp
add
and
jl
pop
inc
push
cmpsl
lret
in
pushf
cwtl
mov
mov
mov
lock
sbb
jb
pushf
mov
or
xchg
add
cmc
mov
adc
pop
daa
push
jg
das
jne
xor
rcrb
icebp
cmp
mov
mov
ja
shrb
outsl
or
lret
loopne
inc
pop
add
loop
xchg
ss
adc
cwtl
pushf
sub
sbb
pop
push
test
mov
lret
jp
loope
das
jno
pop
jg
sub
mov
aas
out
scas
idivb
and
je
dec
add
xor
std
int3
call
dec
xor
mov
out
gs
fwait
jnp
addr16
test
mov
jg
xchg
mov
out
sub
add
insb
cmp
int3
xor
add
xlat
icebp
mov
and
test
inc
sub
cmp
mov
in
aas
or
and
fdivrs
xchg
push
fs
fldenv
pop
mov
adc
sbb
insb
xor
or
mov
push
cmp
int3
fdivrl
lcall
mov
outsl
stc
sbb
dec
xor
lods
xor
or
cmpsb
add
adc
ds
add
lds
add
and
rcrl
xchg
mov
mov
adc
push
rorl
mov
pop
in
jb
insl
stos
outsb
mov
inc
jmp
push
adc
imul
mov
add
jg
xchg
jp
push
scas
xchg
add
cmp
xchg
pop
xorb
cltd
idivb
out
xor
bound
int
dec
push
mov
adc
jb
pushw
call
aam
jmp
xor
mov
fdivs
outsb
jmp
bnd
xchg
mov
scas
jbe
push
push
scas
xchg
push
inc
inc
sahf
jnp
inc
filds
scas
dec
aaa
sub
sar
xchg
ret
dec
call
xlat
repz
pop
das
mov
cmp
test
mov
pop
sub
sahf
mov
inc
icebp
fisubrs
ret
xlat
inc
decl
sub
jle
dec
mov
push
cmp
minps
push
xchg
ret
mov
lret
add
adc
icebp
jg
or
jge,pn
hlt
pop
push
lea
pusha
dec
jae
test
aad
mov
aad
sbb
pop
jl
mov
jle
jmp
cmp
pop
mul
jns
leave
mov
mov
popa
sbbb
daa
push
fsubrl
into
inc
xor
testl
arpl
outsb
pop
pop
out
ss
lds
mov
fwait
mov
cmp
inc
xchg
jp
shll
in
lret
jle
jae
jp
lret
cmpb
in
inc
ficompl
fists
ljmp
mov
pushf
inc
push
imul
cmp
frstor
fwait
jge
push
test
mov
pop
jl
and
adc
addb
mov
insl
mov
std
lcall
popa
icebp
add
ja
and
out
mov
push
jns
mov
shll
mov
sti
fisttpl
pop
rol
rol
jnp
shl
out
bound
jne
jmp
jp
gs
inc
and
or
sbb
pop
pop
lds
pop
adc
mov
test
outsl
imul
addr16
shrb
shrb
ret
out
and
xchg
mov
jecxz
push
jge
add
dec
jg
mov
js
cmpsb
cmpsl
fwait
mov
or
push
pop
cmp
jnp
outsl
shlb
test
xor
push
test
mov
jbe
lret
dec
push
fstps
sub
fcmovbe
sub
jg
pop
sub
div
and
push
sbb
cli
mov
cmp
ss
cltd
nop
out
pop
sbb
lahf
aaa
rorb
mov
pop
pusha
mov
sub
cmp
ret
int3
lahf
mov
xchg
shl
jecxz
push
lock
and
outsl
out
fidivs
sub
cmp
and
int
mov
stos
mov
sar
ret
mov
int3
daa
mov
mov
xor
out
int3
xor
sbb
jp
push
add
packssdw
lods
xlat
jle
repz
pop
and
cmp
mov
xchg
fsubrl
mov
mov
jg
adc
daa
mov
mov
jg
mov
aam
jns
xchg
mov
iret
push
cwtl
mov
xchg
sub
stos
xor
and
mov
sub
out
sbb
pop
and
pop
pop
and
nop
xlat
sbb
iret
daa
scas
outsl
mov
enter
nop
loope
cld
push
jae
push
and
call
sbb
cmp
xlat
aaa
loop
fs
adc
test
aad
aas
dec
mov
push
lret
cmpsb
mov
sahf
pop
add
testl
mov
stc
aad
sbbl
test
push
bnd
push
pusha
cmp
xor
mov
inc
push
add
push
ds
pop
mov
cmp
loope
xchg
mov
mov
sbb
jp
sub
stc
lds
adc
fsubl
subl
xor
xorl
dec
je
sbb
xchg
enter
fdivrl
add
pop
jl
lea
xchg
nop
dec
push
xchg
ja
pop
adc
jbe
lods
jno
jge
lret
mov
mov
jmp
mov
dec
fwait
cmpsb
or
ficoml
xchg
decb
sahf
add
xchg
jno
xchg
shll
lea
push
stos
lods
repz
es
fisttpl
fcoml
gs
jne
test
sub
pop
aad
in
cmc
insb
add
mov
push
int3
gs
jne
test
sub
pop
aad
in
cmc
insb
add
les
fs
je
add
mov
lds
loope
lds
cmp
faddl
gs
in
test
push
mov
mov
pop
mov
orl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
or
pop
bound
sbb
ds
cmp
fsubrp
stos
sti
push
lret
mov
sahf
sub
jle
dec
sbb
jnp,pn
dec
push
pop
xor
fsubrp
cmp
lret
mov
sahf
sub
cmp
imul
jbe
add
sub
out
cwtl
scas
lods
jmp
mov
mov
mov
pop
sub
or
sub
mov
gs
add
jbe
mov
jno
aad
insl
les
imul
mov
icebp
mov
pop
adc
add
mov
mov
aam
push
daa
popa
pop
push
scas
ds
cmp
scas
out
fwait
iret
push
and
pop
jo
dec
pop
fistpl
outsb
sbb
enter
add
test
adc
pop
xchg
pop
imul
push
fistpll
jno
loop
mov
out
xchg
sbb
shl
stos
int
test
mov
fstp
adc
xchg
ret
xorl
popa
lock
jle
pop
in
mov
icebp
mov
test
or
fxtract
call
cmp
pop
imul
ds
push
pop
mov
int3
fwait
loop
xchg
sti
push
lret
xchg
fldt
and
push
mov
and
fistps
lods
fimuls
insl
jmp
stos
negl
dec
cmp
pop
xor
jl
insb
push
addr16
sub
negb
mov
dec
sbb
jle
bound
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
sub
dec
mov
sbb
push
dec
ret
add
pextrw
popf
icebp
in
cmp
aaa
popa
lock
aas
loop
mov
cmpsl
insb
je
out
mov
mov
arpl
mov
clc
pop
inc
les
xchg
imul
lea
fildl
xchg
into
xor
adc
icebp
sub
inc
repnz
adc
imul
push
shll
and
adc
stos
mov
add
pop
mov
sub
or
jno
push
cmpsb
jo
sbb
mov
adc
clc
add
push
mov
mov
loopne
int
arpl
mov
inc
or
add
dec
adc
enter
add
xor
cli
xor
sbb
rol
push
enter
scas
push
mov
ja
jns
popa
xor
fnstenv
addr16
push
into
add
outsb
mov
bswap
aam
mov
sbb
sbb
sub
in
psrad
xchg
in
leave
jo
shll
and
xchg
dec
lret
jp
mov
push
cmpl
shll
pusha
loopne
lahf
pop
std
pop
sub
int3
adc
int3
mov
fildll
lahf
cltd
stos
je
xchg
xor
mov
sti
sbb
mov
or
clc
xorl
sbb
enter
test
xchg
mov
sub
aas
mov
jae
repz
dec
insl
inc
arpl
sbb
cli
add
adc
arpl
lea
cmp
adc
add
push
push
out
push
jae
test
das
and
pop
out
jnp
iret
cmp
clc
xchg
loope
pop
cli
or
mov
std
repz
sub
mov
push
cmovg
and
or
dec
mov
iret
popa
jle,pt
mov
pusha
fcomps
push
jo
cmpsl
cmp
jmp
icebp
inc
xor
mov
fidivs
fbstp
sub
std
roll
ficomps
and
inc
sar
aas
ficompl
cmp
mov
mov
adc
mov
outsl
fstpt
push
mov
push
lds
mov
adc
add
loope
sahf
hlt
dec
jp
sarb
or
mov
sahf
xor
xor
out
inc
dec
mov
out
dec
mov
idivb
mov
pop
repz
outsb
mov
dec
adc
popf
sbb
popf
mov
mov
mov
popa
scas
mov
out
inc
and
hlt
xchg
xor
mov
je
mov
in
not
insl
pop
mov
test
and
loope
adc
imul
cmp
mov
pop
ret
call
stc
pop
loope
inc
jecxz
inc
dec
xor
jge
sbb
xchg
mov
inc
fimull
push
cmp
pop
aad
repz
hlt
or
enter
xor
mov
jl
jmp
sahf
imul
lret
fistps
test
into
mov
cmp
hlt
mov
jno
or
or
je
ret
mov
cmpb
and
jb
in
adc
cmpsl
xchg
pop
pop
push
push
rorb
in
mov
and
test
pop
dec
sbb
and
test
std
sub
ss
xlat
cmp
cld
inc
lock
jmp
sbb
shl
test
mov
imul
aas
fldenv
add
insl
call
mov
stos
aaa
std
mov
movsb
pcmpeqb
dec
sub
dec
shrl
hlt
rcll
and
fcomps
insb
add
clc
pop
movsb
out
mov
int3
dec
cmpsl
mov
icebp
ret
xor
test
scas
sbb
pop
or
push
dec
mov
jne
mov
pop
fmull
xor
call
mov
lods
pushw
hlt
pop
je
test
popa
mov
xchg
adc
or
xchg
iret
mov
es
aaa
and
mov
xchg
sub
dec
jnp
into
add
pop
idiv
fstpl
int3
xchg
sti
shrl
mov
pop
cmp
nop
iret
shl
sub
xlat
jno
fcmovnb
ja
gs
fcoml
adc
jne
jnp
or
adc
cmp
jp
cli
sarb
add
out
call
push
pop
ss
popf
add
cs
jl
cmp
ret
sub
sarl
or
push
mov
call
in
sahf
add
iret
imul
or
lods
movsb
pop
stc
jne
scas
push
pop
les
add
call
inc
sub
adc
sbb
mov
xor
inc
xor
jmp
adc
adc
in
dec
pop
or
and
sti
bound
mov
stos
mov
push
das
dec
jp
fadd
insb
lods
or
ret
ror
in
mov
pusha
jb
outsb
pop
xor
cmp
xchg
or
cwtl
lds
pop
stos
sbb
mov
icebp
jb
in
push
notl
add
xchg
sbb
add
inc
add
add
dec
dec
push
rcrl
icebp
movsb
leave
das
mov
inc
lret
scas
adc
lea
cwtl
stos
mov
punpckhbw
imull
pop
pop
test
push
gs
cmp
popf
add
shl
popf
mov
mov
not
xchg
clc
add
jl
push
rorl
out
lret
adc
out
aas
imul
sub
dec
jnp
pushf
jnp
in
icebp
gs
adc
rcrl
arpl
rep
adc
adc
inc
mov
push
mov
repz
fcomp
int
push
add
xchg
adc
cwtl
sbb
jmp
repnz
pop
out
rol
lret
adc
fistpll
insb
fnsave
add
popf
pushf
push
ss
lcall
xchg
push
jne
jb
or
mov
jbe
mov
sbb
outsb
fcmovu
ja
xor
mov
sbb
push
push
pop
lea
in
push
data16
adc
int
dec
jmp
jbe
dec
rol
lods
lds
fdivrp
mov
leave
jp
or
repz
jge
leave
fistl
ds
negb
ss
push
call
jne
cmp
out
cwtl
adc
aaa
or
scas
mov
fmull
leave
dec
imul
rcrl
cmp
loope
dec
ljmp
sub
adc
xchg
jbe
cmpsb
add
daa
leave
dec
cmp
stos
pop
mov
sub
xlat
mov
xor
aad
ljmp
cli
xchg
sub
xchg
ret
cmp
insb
andl
mov
aaa
ror
cmp
dec
dec
mov
ret
cmp
or
lock
fists
adc
push
mov
lock
xor
and
mov
sbb
inc
mov
sub
fwait
and
dec
popa
jb
cmpb
aaa
pop
push
jmp
cmpsb
xchg
fwait
movsb
ja
jno
xchg
pusha
in
ljmp
push
ljmp
or
cmp
in
in
pop
inc
jbe
addl
xchg
xor
imul
or
ja
adc
lds
pop
pop
dec
dec
pop
mov
test
adc
xor
enter
add
inc
jg
js
dec
xchg
popf
in
je
sbb
lods
lahf
outsl
js
divl
pop
mov
mov
fistps
mov
mov
or
sbb
and
jbe
sub
addr16
imul
mov
mov
lret
psadbw
jp
xchg
hlt
jecxz
or
push
rclb
add
pop
pop
jno
push
pop
inc
push
fcmovnu
out
or
cmpsb
aam
std
orl
jo
gs
push
lds
add
sub
mov
sub
mov
outsl
add
fcompl
btc
in
scas
dec
jle
sub
mov
adc
iret
cwtl
jno
out
les
pusha
daa
and
dec
ds
and
in
std
xchg
movsl
fcoms
test
ret
adc
std
test
movsb
or
and
mov
pop
int3
mov
add
cmpsl
pop
leave
mov
scas
cmp
gs
stc
sbb
iret
xchg
mov
gs
addr16
clc
int3
loopne
xchg
fwait
imul
ret
xor
cs
jb
push
enter
fwait
clc
or
stc
fcomi
out
cmp
jge
test
pop
or
pop
ret
adc
cs
inc
jo
mov
jl
jbe
loopne
xlat
inc
lcall
adc
pop
push
jno
fsubrp
jb
jle
mov
mov
mov
cmpsl
cmc
mov
fisttps
shl
fsubrl
add
out
lods
push
push
dec
fstpl
lret
pusha
mov
aas
out
aam
imul
gs
cmc
bnd
push
cld
sbb
fmulp
outsl
popf
xor
loop
and
sbb
mov
sub
stc
mov
scas
push
inc
push
xchg
xchg
pop
adcl
and
das
lret
dec
test
pop
and
bound
sbb
inc
adc
cmp
movsb
add
mov
mov
imul
xchg
push
test
pushf
repnz
ret
push
or
push
dec
aam
mov
js
fsubrl
jb
sbb
stos
test
and
push
out
pop
pop
iret
cltd
rorl
movsl
push
test
adc
jmp
jmp
mov
mov
stos
jmp
pop
pop
ja
leave
fcoml
aad
test
dec
repnz
mov
pop
sub
mov
pop
ret
fwait
ds
push
xor
push
lock
fs
mov
dec
inc
leave
jge
stos
es
and
xor
push
inc
gs
lods
cmp
dec
repnz
adc
xchg
xor
mov
push
xchg
ficomps
adc
mov
rorb
xor
adc
xor
mov
sar
cmp
pop
jp
xor
pop
stos
jb
add
xchg
fldl
lock
sbb
pop
clc
ja
bound
mov
clc
push
inc
sbb
pushf
fst
add
lahf
movsl
push
popa
dec
mov
mov
icebp
mov
jnp
popa
in
push
paddd
fmul
movsl
xchg
mov
inc
popa
xchg
push
xchg
and
lcall
ret
aad
mov
add
push
push
adc
jae
andl
imul
pop
loop
add
jmp
ljmp
lret
js
movsl
cwtl
pop
loope
in
jnp
sbb
lea
jmp
aaa
rclb
ja
mov
cwtl
out
mov
pop
inc
test
mov
push
adc
push
jmp
or
push
mov
pop
dec
sub
xor
jo
xchg
inc
call
ret
gs
loop
jo
imul
sbb
decl
jb
mov
mov
icebp
xor
xchg
int
or
mov
lahf
jle
ret
adc
mov
lea
dec
xor
fistpll
ja
orb
jmp
jmp
push
pushf
and
faddp
adc
and
mov
push
fistpl
jle
dec
rcrb
cmpsl
push
into
sub
xchg
pop
sub
pop
leave
popf
pop
mov
mov
jmp
adc
pop
movsl
leave
dec
xchg
or
imul
jbe
mov
lods
jl
xchg
int
pushf
jp
or
xlat
pop
xchg
push
adc
xlat
xlat
mov
cmpsb
xchg
mov
testl
or
sti
and
int3
push
dec
imul
sub
mov
pop
dec
adc
out
sbb
push
data16
lock
test
mov
inc
outsb
outsl
insb
mov
not
jge
jbe
pop
mov
stos
adc
clc
adcl
inc
mov
int3
jl
sbb
xchg
pop
mov
dec
adc
jmp
lcall
adc
jnp
movsb
jns
push
xchg
or
scas
sub
mov
scas
dec
dec
movhlps
inc
sahf
add
das
inc
daa
push
data16
fwait
aaa
adc
jo
jnp
mov
and
add
cwtl
pushf
push
xchg
push
push
xchg
mulb
add
cmpsl
sub
mov
out
sub
mov
xchg
push
dec
and
mov
adc
mov
lret
lret
jno
and
cmp
ret
clc
pop
fadds
pop
mov
enter
sbb
negb
fsubrl
cmpsl
gs
xchg
pusha
or
xor
shrl
data16
adc
xor
xor
mov
pop
aam
inc
mov
push
mov
xchg
jae
ret
sbbb
dec
push
jl
fwait
shlb
xchg
push
iret
in
test
lea
dec
out
bound
pop
mulb
dec
adc
fistl
mov
lods
sbb
mov
xchg
sbb
push
cmp
sbb
dec
pop
pop
cmpsl
xor
sub
adcl
fidivrl
cmp
mov
jg
xor
ficoms
add
mov
pop
sub
jmp
push
bound
sti
push
rcl
iret
jns
mov
pop
cwtl
jp
push
add
test
insl
inc
xor
push
jle
das
loopne
fadd
mov
cmpsl
divl
xor
cmp
adc
push
addb
popa
insb
pop
mov
out
loop
cmc
jmp
cmp
dec
mov
jle
fldt
dec
push
push
mov
scas
cmp
push
xorb
scas
dec
xchg
lock
sbb
or
pop
and
mov
and
sbb
call
call
xchg
jl
and
cmp
roll
xor
sub
cmpsb
bound
mov
rclb
imul
jb
xor
iret
dec
mov
pop
lret
jne
pop
xor
push
inc
push
loopne
mov
subb
repnz
jae
popf
xor
mov
inc
imul
ds
mov
pusha
mov
adc
inc
or
sbb
inc
loop
leave
rcrl
lret
mov
mov
push
mov
outsl
cmp
repnz
jp
jle
push
add
dec
popf
cmp
adcl
jns
sub
xchg
popa
mov
ficompl
out
jns
fnstenv
jle
rol
pop
xorl
and
add
jo
outsl
pop
and
sub
ret
je
mov
cli
leave
pop
sarl
and
shr
insl
cmpsl
loopne
fstl
cli
mov
push
lods
cmpsl
pop
cwtl
or
jmp
push
push
movsl
je
mov
sahf
or
push
cwtl
orb
cmp
lods
sti
inc
inc
aas
ror
not
int
addr16
out
aam
lret
push
adc
cmp
pop
dec
dec
sbb
rclb
stc
inc
mov
mov
mov
sub
rcr
std
inc
call
sub
jmp
push
mov
push
adc
xorb
jbe
mov
adc
push
cli
push
push
xor
cmp
dec
lcall
movaps
scas
popa
test
lods
insb
mov
push
inc
pop
cmpsl
sub
cmpsl
pop
ja
lea
inc
adc
cwtl
mov
xor
insb
mov
adc
ja
icebp
push
push
sbb
sbb
inc
add
div
aad
xor
sub
xor
pop
lahf
lahf
int3
cmp
push
or
or
daa
mov
shrb
mov
das
dec
fcoml
inc
jl
fimull
xchg
repnz
lods
or
sub
sbb
add
cltd
push
xchg
fucom
lret
lret
mov
xchg
mov
pop
mov
push
lret
inc
adc
inc
fmuls
and
inc
inc
test
jo
cltd
add
rcll
xchg
in
adc
into
aad
push
sar
jns
out
std
inc
shrl
adc
addl
sub
cld
cmp
sarb
jg
jp
mov
xor
xchg
mov
xor
jl
ss
aad
lahf
enter
in
inc
jle
enter
mov
push
test
jl
jl
lcall
or
aas
cmp
aad
popf
fldcw
sbb
xor
mov
inc
mov
push
lea
aad
mov
icebp
int
and
insb
inc
imul
clc
cmp
xchg
mov
mov
int3
je
pop
sarl
jle
lds
es
sub
or
add
or
jae
fdivrs
sub
inc
cli
movsb
sbbb
dec
xchg
push
shrl
xchg
lahf
gs
adc
sbb
mov
mov
pop
xor
enter
enter
stc
out
test
hlt
jb
pop
push
call
push
sub
dec
pop
inc
push
lea
outsb
movsl
into
xchg
lock
sahf
xchg
xor
pop
orb
sub
jle
call
fstpt
and
adc
negl
lds
sti
push
in
mov
scas
pop
cmovs
push
data16
cmp
lret
idiv
pusha
push
lret
pop
pop
push
lcall
test
jo
and
arpl
sub
jns
inc
imul
int3
push
push
loope
dec
inc
mov
adc
stc
and
ljmp
lods
sahf
mov
jne
lock
rcrb
jb
adc
xor
mov
je
negb
or
push
in
je
scas
lea
or
mov
mov
iret
inc
xor
jl
jns
fldt
push
jnp
mov
and
dec
adc
test
aam
cmp
pop
push
clc
or
adc
cmpsl
and
mov
jg
pusha
lods
xor
cmpsl
fbld
movsb
adc
das
push
cmpsl
or
xchg
cmp
dec
sub
test
icebp
push
js
popa
ds
jne
jbe
and
mov
int
stos
lods
mov
sub
daa
sahf
sahf
fucomi
push
shrb
lea
push
sub
cmpsl
shl
jp
dec
mov
lods
cmp
sbb
lret
lds
ja
test
lcall
popa
xor
and
scas
ret
nop
pop
or
loop
or
cmp
mov
movsl
adc
cld
lcall
out
adc
xor
in
mov
fistl
mov
cmpsb
mov
push
aad
scas
cmp
push
jp
adc
mov
adc
inc
in
call
in
dec
insb
pop
out
fiaddl
enter
gs
stc
or
pop
insb
xor
xchg
push
mov
lret
jg
lods
pop
xor
jle
loop
out
jno
mov
pop
cld
fs
push
in
ror
adc
loopne
cmp
and
cmp
cwtl
sub
mov
loopne
sub
cmp
pop
lret
pop
sbbl
mov
pop
stos
lock
lock
fldl
pop
xor
notb
sbb
sti
test
mov
sbb
enter
out
adc
mov
mov
dec
mov
and
lds
jo
into
mov
mov
repnz
sbb
repnz
fistpll
cmp
mov
jnp
mov
mov
adc
add
cmc
xchg
call
mov
push
ds
mov
mov
sarl
add
stos
or
mov
outsb
inc
in
push
outsb
cltd
cmp
mov
lahf
push
jns
lds
dec
imul
push
aam
dec
pop
and
dec
lds
shrl
pop
ljmp
xor
cmp
jo
in
repnz
xchg
pushf
xor
push
inc
aas
popf
fcmovb
or
lock
sbb
pop
xchg
xchg
push
ficompl
mulb
pop
mov
sub
ret
out
shl
testb
mov
mov
adc
ss
mov
mov
in
inc
inc
icebp
bound
pushf
push
into
xchg
push
push
xor
lods
push
out
cmpsb
arpl
cld
mov
aam
int3
std
add
sahf
test
and
loope
jnp
mov
or
pushf
and
mov
push
jge
rclb
int
movhps
mov
jecxz
sbbb
test
jecxz
push
bound
loopne
cmp
add
sub
xor
cmpsl
out
shr
mov
push
into
sahf
cmp
pushf
fwait
xchg
clc
pushf
decb
aad
test
cmp
lock
mov
mov
mov
out
sahf
js
adc
dec
repz
pop
inc
je
imul
inc
dec
mov
and
cwtl
ljmp
sbb
stc
lods
enter
dec
push
mov
jae
mov
gs
sbb
nop
imul
aad
call
adc
xor
xchg
lcall
je
sbb
and
jl
or
outsb
dec
sub
ret
leave
repnz
pop
pushf
je
sbb
push
das
cmpsl
mov
insb
xchg
xchg
in
lods
dec
jg
pushf
xor
mov
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jo
push
sbb
jp,pn
dec
or
stos
out
mov
xlat
jmp
sti
mov
sub
sbb
imul
ds
mov
ficoms
push
and
fwait
test
xor
and
ja
and
add
push
inc
xor
sub
or
les
xchg
ret
xchg
ret
adc
and
adc
jae
arpl
add
hlt
mov
mov
hlt
xchg
movsb
jecxz
roll
adc
or
inc
nop
mov
cmpb
mov
sbb
push
push
inc
sub
mov
push
das
inc
mov
xlat
pop
mov
dec
enter
xchg
nop
sub
pop
cwtl
xor
mov
arpl
add
cmp
xchg
imul
and
jecxz
rcll
ds
sbb
aaa
andb
les
loope
pop
pop
mov
ss
test
lret
jb
arpl
pop
add
cmc
dec
in
push
push
cmp
dec
jecxz
add
repz
enter
lahf
add
mov
insb
addl
mov
xor
lret
cmp
call
mov
cmpsl
pop
out
jl
loop
mov
roll
and
add
jae
arpl
mov
mov
cld
repz
jecxz
roll
and
inc
pop
xor
pop
pusha
ss
hlt
ret
mov
mov
mov
movsb
std
mov
add
pop
and
es
push
insl
xchg
mov
aam
mov
jne
mov
xchg
sbb
jo
jbe
jnp
inc
and
adc
add
hlt
mov
mov
mov
movsb
jecxz
roll
push
adc
jae
arpl
add
hlt
mov
mov
mov
movsb
jecxz
roll
xchg
jl
sti
xchg
loopne
add
cmpsl
popf
mov
out
push
sub
and
in
push
loop
push
dec
jae
fcoml
xchg
mov
push
mov
bound
cmp
hlt
cld
stc
loop
inc
cltd
jmp
mov
ficoms
mov
add
adc
cwtl
movsl
pop
mov
mov
push
jg
jb
in
and
lcall
repnz
inc
push
fdivrl
je
enter
daa
pop
loopne
or
loop
xchg
pusha
in
addr16
cmp
pop
dec
insl
cmp
lds
jns
push
pop
out
fwait
xchg
push
test
pusha
lock
dec
pop
push
cmpsb
or
xlat
mov
inc
add
stos
xchg
std
lret
test
lods
testl
int
nop
outsl
mov
cwtl
jp
xor
jne
and
aad
adc
leave
bound
sbb
test
lahf
xchg
aam
add
comiss
add
jae
fdivl
pop
test
push
sub
cmp
mov
xor
xchg
aam
leave
inc
cmp
or
pop
mov
mov
and
movsl
xor
mov
stos
mov
xchg
sahf
inc
add
inc
daa
rcll
add
out
jle
movsb
push
pop
mov
std
sbb
push
mov
jge
push
into
movb
mov
fsubrl
mov
in
dec
jle
in
add
rclb
cmp
shll
cltd
jle
mov
int3
sbb
dec
aaa
sbb
popf
popa
push
nop
das
add
xor
mull
cmpsb
jno
mov
call
sbb
mov
sbb
push
sti
and
pop
jbe
aam
mul
das
pop
rcl
sbb
enter
mov
cmp
loope
mov
mov
xor
cmpsb
mov
subl
xchg
insb
sbb
cmpps
jle
dec
cmp
mov
nop
xchg
mov
dec
sbb
mov
xor
aaa
push
sub
pop
stos
sti
sti
or
mov
sbbb
out
fwait
pusha
mov
gs
xlat
outsb
adc
push
sbb
fnstsw
fnsave
mov
ret
add
loopne
mov
dec
aas
lock
dec
hlt
adc
xor
andl
cmpsl
mov
adc
push
scas
test
dec
icebp
inc
popf
xchg
cltd
xchg
push
push
sbb
jp
rclb
xchg
adc
notl
cmpsl
test
jmp
nop
inc
outsb
fisubrs
sbb
jp
data16
dec
add
xchg
fsubs
push
xlat
dec
adc
rolb
sarb
lcall
add
lret
jmp
filds
xchg
clc
inc
int
fstl
xchg
jne
mov
push
out
mov
shlb
mov
mov
jp
cmp
repz
add
lret
dec
shl
push
xor
jb
inc
mov
cmp
xchg
mov
fldcw
es
or
lea
jp
push
scas
fnstsw
inc
jp
or
cwtl
lcall
push
lret
and
sbb
gs
xlat
fisubrs
out
fs
mov
adc
mov
add
aaa
out
cs
fldcw
add
ss
mov
data16
std
lret
subl
pop
out
dec
cmpsl
cmpsb
mov
in
dec
mov
xor
ljmp
fstps
test
xchg
mov
fadds
lods
mov
mov
aad
add
out
and
lds
addr16
pop
out
js
xchg
adc
ds
orl
push
dec
das
xor
sub
cmp
pop
sarb
rorb
dec
orl
dec
rcrb
mov
mov
mov
clc
jle
add
cwtl
aad
les
sbb
imul
xrelease
or
fsubs
rol
xor
and
loopne
sbb
enter
aas
and
pop
aam
and
into
in
pop
sbb
push
pop
ss
sub
movsl
fdivr
cmp
add
cli
lds
sub
mov
cmpsb
mov
push
cmp
and
gs
mov
jnp
mov
das
push
popl
add
xlat
jne
sub
push
addr16
cmp
icebp
pop
lock
xor
subl
xchg
rcrl
mov
pushf
mov
or
js
in
mov
xor
push
lret
jns
lock
aaa
jns
por
mov
sub
andl
xchg
push
lea
cmc
fistl
in
sbb
push
mov
roll
lret
out
mov
mov
arpl
push
int
clc
inc
arpl
popl
pop
mov
adc
popf
and
outsl
xchg
push
divb
xor
adcb
inc
ret
lret
mov
xchg
ljmp
aam
pop
jb
test
xchg
leave
in
into
xor
repnz
and
stc
subl
stc
dec
sub
nop
jecxz
or
fs
fstpl
ret
aas
outsl
fistl
and
adc
xorl
mov
and
mulb
mov
mov
push
sbb
hlt
lds
aam
mov
lahf
fnstcw
aam
hlt
movsb
out
mov
xchg
dec
popl
and
rcll
cmpsb
sub
inc
add
imul
inc
nop
mov
xchg
jl
fimuls
xchg
scas
int
jp,pt
jnp
nop
in
cmp
mov
leave
dec
idivb
add
inc
or
cmpsl
sub
inc
cmpsb
cmp
adc
divb
mov
aad
rcl
or
push
inc
dec
fstpt
or
je
push
repz
cld
incl
mov
aaa
adc
ds
fbstp
push
fsub
test
mov
xchg
inc
test
out
inc
sub
sbb
loopne
pop
dec
movsb
hlt
insl
mov
fstpl
fs
aam
popa
mov
dec
mov
xchg
dec
imul
mov
or
sahf
icebp
shll
mov
fadds
pop
outsb
arpl
sti
cltd
jbe
adc
pop
dec
adc
mov
jne
mov
adc
out
sbbb
insl
xorl
pop
push
lds
bound
stc
lods
xchg
gs
dec
mov
lock
adc
and
push
or
ja
scas
adc
or
test
add
pop
sbb
sbb
pop
cmp
lods
jge
jo
cmp
mov
loopne
gs
mov
jns
or
mov
jo
rorl
add
nop
dec
cmpsl
ja
pop
dec
inc
data16
cmp
pop
pop
cs
clc
push
xor
adc
pop
movsl
jge
pop
dec
push
or
xchg
sbb
dec
test
loopne
test
daa
rcll
lock
lcall
push
int3
and
sub
jno
mov
adc
sbb
es
ficoml
sahf
and
in
cwtl
ss
or
pushf
add
int
adc
stc
sti
xor
call
lret
mov
jg
or
jne
push
rolb
int
or
push
or
xor
gs
js
fists
int3
mov
pop
repz
mov
or
in
xchg
sub
pop
movsl
idiv
arpl
shl
push
mov
push
ds
jg
popf
pop
and
dec
adc
lods
call
and
mov
or
jnp
sahf
repnz
xor
ss
std
add
or
cmp
mov
imul
pop
cmpsb
subl
and
mov
xchg
xor
bound
and
in
xor
sbb
add
dec
fisttpll
mov
jno
cwtl
hlt
addr16
cmp
cmp
ljmp
out
cli
xchg
jecxz
adc
nop
stc
and
and
adc
insb
mov
sub
mov
fwait
xor
lret
mov
fmull
rcrb
push
call
push
pop
sub
push
in
rorl
xorl
sbb
pop
inc
jle
loopw,pt
jb
xchg
cmp
sbb
div
mov
push
aas
xlat
in
call
out
cmpsb
pushf
nop
adc
fstpl
mov
sti
xor
push
faddp
inc
sub
ss
das
mov
lods
xor
ljmp
lret
sti
iret
cltd
movsl
int3
mov
je
hlt
cs
rolb
push
lock
push
lock
daa
pop
int3
pop
fdivr
jo
enter
sbb
inc
xor
call
dec
mov
sbb
mov
test
or
xor
cwtl
in
adc
fdivs
or
add
subw
inc
mov
outsl
mov
lea
scas
lret
mov
aas
or
cmpl
cwtl
cmpsl
jle
shrb
xchg
cwtl
push
outsl
push
in
test
cmc
xor
adc
fistl
pushf
lret
dec
pushf
cmp
adc
add
cmp
inc
add
mov
cmp
cld
and
dec
jmp
ja
mov
je
pop
js
lods
pusha
adc
gs
fsubrs
push
mov
adc
jg
push
mov
hlt
push
sub
push
adc
mov
fs
punpckhdq
pop
mov
nop
repnz
cmp
cmp
xor
into
push
and
jp
lret
jbe
sub
pop
int3
aam
sbb
xchg
lods
mov
mov
mov
push
addl
ljmp
int3
fisttps
jl
mov
aaa
cmpsb
mov
inc
lahf
andb
mov
in
imull
sub
faddl
outsl
xor
and
sar
jbe
popa
fwait
inc
lds
and
xor
xlat
mov
mov
stos
popa
sub
mov
add
mov
lret
jge
sub
testb
xchg
aaa
cmp
push
mov
call
push
inc
pop
sbb
mov
add
out
mov
sbb
cli
ds
cmp
in
xchg
stc
pushf
mov
mov
rcrl
ret
enter
cmp
in
stc
push
jo
loopne
adcl
es
mov
ss
iret
ja
imul
repz
mov
and
or
fcomps
lret
or
fsts
adc
test
aaa
outsb
or
arpl
xor
sahf
or
push
push
sti
jle
dec
aad
cltd
lea
mov
xlat
lret
mov
xor
rclw
and
or
lods
inc
mov
mov
sub
jecxz
add
jl
dec
cmpsb
jg
movsb
sub
mov
sub
mov
push
mov
jo
sahf
mov
fsubrs
or
push
cmp
pop
scas
jecxz
sbbb
mov
jp
push
mov
xor
mov
push
mov
inc
xor
es
fiadds
enter
repz
repz
lahf
inc
mov
mov
ret
mov
jecxz
lea
push
sub
lcall
push
pusha
icebp
lds
mov
push
or
pusha
jle
repz
jp
clc
sub
and
push
pop
add
adcl
sbb
dec
and
adcb
sarb
inc
lret
inc
cmpsb
xor
scas
inc
jnp
in
mov
pop
addps
or
push
dec
outsl
xchg
dec
nop
dec
add
les
xchg
dec
inc
adc
lret
mov
loopne
daa
mov
outsl
nop
xchg
mov
je
and
xbegin
and
std
sar
or
cmp
push
sahf
fwait
or
out
test
xchg
xchg
fisubrl
jle
add
inc
jno
popa
lds
fsubr
std
push
stos
test
in
aas
dec
ja
adcl
push
pop
fidivl
andl
aam
dec
push
les
data16
mov
cmp
mov
in
and
movsb
or
test
imul
scas
push
mov
aas
daa
movsb
in
cmc
pop
mov
fdivrl
inc
inc
dec
adc
mov
and
das
sub
call
mov
pop
cmp
test
or
mov
movsb
mov
fimuls
notl
push
mov
sub
iret
push
ss
imul
mov
addb
mov
adc
pop
mov
push
in
dec
filds
cmpsb
jg
jbe
invd
stos
lea
mov
mov
ret
imul
loop
mov
pop
inc
daa
mov
popf
nop
cmp
imul
mov
loopne
or
ficoms
add
fs
mov
push
add
sbbl
pop
sbb
adc
push
xor
jo
inc
mov
sti
add
loopne
mov
jnp
aad
inc
mov
push
dec
add
stos
inc
jne
lock
mov
insl
adc
sahf
cwtl
xchg
fwait
ja
out
mov
fimuls
data16
inc
out
and
and
and
pop
out
push
ljmp
push
mov
stos
mov
imul
sub
jnp
jecxz
push
mov
jle
inc
incb
add
dec
cmp
arpl
shlb
push
test
sub
dec
rolb
pop
mov
lds
xor
adc
or
cmp
mov
inc
out
sub
popf
fs
push
adc
xor
insb
cwtl
push
sub
xor
mov
push
dec
ffree
or
sbb
add
push
lret
pop
dec
jg
into
inc
int3
cmp
loop
mov
scas
sub
and
loope
adc
push
stos
dec
jno
pusha
aad
pusha
add
in
jns
aaa
arpl
ret
arpl
push
mov
in
jno
pop
stos
pop
ret
xor
cwtl
ljmp
cmp
mov
sbb
push
das
jg
jp
and
out
jno
inc
std
push
idiv
imul
negl
xchg
cs
aam
imul
lret
push
aad
stos
and
into
adc
jb
stos
punpckldq
ret
mov
sub
jb
pop
arpl
bound
sub
mov
das
sbb
ret
aam
cwtl
out
xor
lahf
sub
out
iret
mov
pop
mov
sub
add
mov
xor
xchg
sub
in
sti
xchg
in
mov
add
cmpb
lds
lcall
fsubr
push
fbld
pushl
mov
fsts
xor
jmp
into
out
inc
mov
and
call
pop
imul
and
mov
lods
mov
pop
addr16
icebp
loop
fimuls
adc
shlb
push
push
jle
add
imul
pop
call
push
mov
mov
pop
jg
lods
sub
dec
inc
dec
xchg
lods
cmpb
jle
and
jmp
xchg
dec
out
dec
mov
sbb
xor
clc
xor
fisubs
or
sti
adc
fcmovnbe
outsl
xchg
jmp
mov
jle
cmp
mov
aaa
and
je
call
xchg
xor
mov
push
sub
lods
lcall
outsb
cmp
pop
popf
xchg
and
jno
xor
inc
mov
cvtps2pi
repz
cwtl
push
loopne
jge
pop
cwtl
mov
xchg
fldl
jge
mov
ljmpw
sub
pusha
mov
sbb
hlt
jns
ret
pop
lahf
xor
xchg
int
pop
sbb
es
mov
mov
div
sub
sbb
leave
ja
push
and
inc
iret
rcrl
shr
add
or
stos
xlat
push
mov
cmp
inc
stc
mov
add
cmpsl
pop
ljmp
dec
jnp
sbb
inc
fwait
ret
or
jge
movsb
mov
stos
clc
mov
ljmp
add
dec
mov
add
das
xor
icebp
lahf
repnz
jns
aam
xchg
mov
stos
mov
mov
insl
out
lcall
sahf
dec
inc
xor
jo
mov
adc
cmp
pop
mov
rorb
dec
cmp
je
mov
call
sub
jbe
cmp
cli
adc
cld
mov
inc
and
mov
imul
mov
mov
xor
mov
sub
or
mov
push
jl
popf
xor
adc
cs
rcl
and
gs
xchg
movsl
outsl
fnstenv
inc
pop
dec
sbbb
cmp
cmpl
or
cmp
movsb
fnstsw
inc
lods
pop
andl
mov
out
xchg
addr16
ds
shll
into
clc
in
push
scas
mov
xor
negb
xlat
aam
fsubr
mov
add
mov
lea
push
xchg
nop
jne
xchg
adc
jno
imul
cmp
mov
adc
pop
dec
inc
and
stos
cli
fstpl
lea
stc
fld1
cmp
sub
lret
dec
notl
adc
lret
and
fldcw
mov
mov
insb
lock
dec
and
push
cmp
mov
ret
push
mov
jb
ffree
inc
gs
sbb
subl
or
push
jbe
inc
jb
pushf
inc
jecxz
add
mov
int
xor
push
and
cmc
pop
lret
sarb
test
mov
loope
jmp
sbb
dec
mov
jns
and
cmp
mov
popf
push
fimuls
pushf
js
shr
mov
cmp
xchg
mov
sti
loopne
mov
test
add
sub
mov
and
cmc
dec
lock
mov
ljmp
les
daa
pusha
fldl2e
lods
push
xchg
xor
jge
sub
icebp
cmp
insl
xchg
or
inc
xchg
fs
movsl
cmp
int
add
and
pop
rcrl
adc
jecxz
orb
sti
js
imul
ret
into
jle
insl
and
nop
loop
xlat
shrb
jp
and
push
pop
pop
adc
cmpsl
int3
popa
cs
call
and
mov
ficoml
daa
pop
cwtl
lret
or
outsb
loope
fildl
ffreep
sub
mov
gs
mov
mov
sub
add
cld
outsb
sbb
or
jp
jecxz
jle
ret
mov
mov
les
int
lahf
xchg
pop
es
or
lea
mov
xchg
gs
bound
outsl
enter
pop
sar
mov
test
ja
sub
push
pop
roll
imul
in
repnz
jb
jl
je
mov
dec
inc
cmpsb
inc
popa
scas
sbb
shrb
in
iret
inc
test
loopne
aas
mov
sahf
jno
push
jno
add
incb
loope
inc
jg
or
cltd
insl
inc
and
in
adc
in
cli
push
dec
jns
mov
xlat
push
out
sub
popa
lds
ljmp
xchg
mov
xor
insb
mov
ret
jge
aas
push
add
and
mov
enter
in
add
imul
fnstsw
xlat
mov
rorl
clc
dec
fpatan
lret
decl
int3
sub
rorb
into
loop
mov
jo
xchg
loopne
leave
adcl
popf
sbb
lds
es
in
pop
shlb
aaa
stos
cld
fldl
or
or
lcall
mov
dec
js
cli
in
or
lds
xor
fildll
xor
not
push
jne
clc
das
jb
fwait
push
mov
inc
mov
and
jg,pn
adc
vcvttpd2dqy
push
out
cli
adc
mov
shlb
lds
cli
jae
and
ret
repz
dec
push
mov
fldcw
movsl
xchg
mov
cmpsb
in
adc
daa
pop
rclb
outsl
mov
lahf
xchg
fisttps
hlt
push
mov
or
sahf
push
xor
in
mov
sub
or
xchg
xor
xchg
std
rcrb
inc
sbb
loop
es
cmpb
imul
xchg
xor
push
xlat
stos
lcall
xchg
lods
repz
jle
xor
sbb
mov
imul
adcb
mov
lea
in
js
scas
pop
mov
adc
mov
pop
adc
pop
repnz
sub
xchg
out
cmp
aas
sub
mov
loope
ja
daa
dec
in
insl
push
dec
mov
enter
push
mov
out
in
mov
iret
mov
rorb
jmp
cmp
jecxz
pop
outsl
add
leave
pop
mov
and
push
dec
push
mov
inc
push
inc
or
stos
insl
dec
repz
andb
aaa
dec
jp
adc
pushf
mov
or
into
cmp
mov
and
ficomps
lods
cmp
ficoml
shlb
clc
sahf
push
adc
fsubrp
push
adc
mov
adc
adc
ja
int3
scas
fistps
scas
dec
movsb
or
in
push
dec
mov
aad
sahf
jb
call
xchg
loopne
jmp
adc
inc
add
and
adc
add
hlt
mov
mov
mov
movsb
jecxz
roll
push
adc
jae
arpl
add
hlt
mov
mov
mov
movsb
jecxz
roll
xor
inc
add
les
mov
mov
mov
mov
xchg
shrl
xor
and
adc
jae
arpl
test
jle
hlt
ret
jnp
sbb
sub
cmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
adc
les
cmp
push
add
or
pop
add
push
add
add
sldt
add
add
adc
add
add
imul
nop
add
add
add
add
jns
insl
add
cmp
mov
and
insl
add
add
add
add
sbb
inc
add
insb
add
nop
add
insl
add
add
add
inc
add
add
add
add
add
or
add
add
add
add
mov
add
add
adc
imul
xchg
add
add
sbb
adc
add
lds
rolb
add
add
add
faddl
add
sub
jg
mov
int
add
add
add
add
lcall
add
or
insb
add
insl
add
add
add
adc
pop
pop
add
filds
mov
add
jns
and
fwait
add
mov
inc
add
add
add
add
add
insl
add
add
xchg
add
add
add
mov
lret
add
add
add
add
xor
add
add
add
add
add
push
add
add
add
add
in
add
add
inc
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
push
add
add
add
add
and
jnp
push
add
enter
lret
add
sbb
jne
rolb
pop
add
jns
filds
jns
test
jmp
adc
xor
add
add
add
add
pusha
add
test
xchg
add
add
add
add
add
mov
add
add
xor
add
add
dec
add
add
add
leave
add
add
and
out
pop
add
inc
add
add
add
add
insl
add
add
in
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
add
add
add
add
dec
add
add
mov
or
add
add
add
add
jns
scas
add
add
add
add
add
add
add
add
loope
and
add
add
add
add
add
add
or
sbb
adc
add
add
add
add
xor
add
add
adc
add
add
popa
add
add
int3
add
cltd
add
add
add
adc
add
add
add
and
add
add
pop
add
add
add
push
test
mov
sub
gs
push
xor
mov
fucomi
scas
movsb
fcmovbe
cld
add
sbb
cmp
xchg
xor
shl
and
mov
popf
and
rolb
xchg
jns
add
loop
adc
hlt
in
add
insb
call
popa
push
call
and
jecxz
mov
shrl
pop
push
lods
xchg
xor
pop
loopne
std
mov
fsubr
stos
insl
out
mov
cmp
iret
mov
pop
addr16
inc
inc
mov
and
in
jns
or
fildl
xchg
cmpsb
out
sbbb
or
adc
fwait
rol
sbb
shll
mov
mov
push
xlat
stc
fisubl
push
or
nop
leave
jno
mov
scas
jg
mov
inc
or
mov
loope
cmp
stc
push
adc
in
mov
push
cmp
xor
cwtl
mov
pusha
adc
xor
or
das
or
repnz
hlt
mov
leave
push
cwtl
test
pop
xchg
mov
xor
test
loope
push
cmp
sbb
and
ficoms
cmp
fs
out
inc
mov
pop
cmpsb
aam
jb
fldenv
arpl
pop
jg
push
push
mov
jmp
push
dec
popa
dec
dec
xchg
pusha
mov
addr16
outsb
in
xor
mov
scas
shrb
dec
gs
sub
out
dec
jae
cmpl
enter
mov
fwait
rcrl
push
pop
das
xorl
mov
cmpsl
addb
xchg
mov
or
jno
into
xchg
insb
pop
shlb
jl
test
add
jo
sub
ror
loop
clc
jecxz
movsb
movsl
push
neg
push
iret
mov
call
dec
pop
jbe
adc
out
test
stos
ret
outsb
out
pop
lods
mov
cmc
out
xor
std
pop
or
push
sub
mov
jecxz
scas
call
xorb
nop
mov
cmp
in
inc
adc
sub
loopne
stos
or
mov
xchg
stc
mov
sbb
call
jno
ss
sub
dec
and
jbe
add
das
jp
andl
jbe
sub
sahf
aad
inc
imul
dec
lret
jo
lahf
mov
and
scas
cs
jl
adc
out
mov
fmuls
or
mov
and
dec
in
fs
cmpsl
and
mov
push
shll
add
push
mov
mov
jbe
adc
xchg
mov
mov
cmp
bound
xchg
mov
aas
psraw
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
