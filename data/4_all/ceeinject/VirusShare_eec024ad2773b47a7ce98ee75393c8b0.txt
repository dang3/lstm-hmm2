call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
dec
cmpsb
and
pop
cmpsl
cmp
fs
jmp
flds
jmp
mov
jbe
data16
xchg
imul
sub
sbb
or
icebp
push
jmp
mov
js
inc
fwait
jbe
bound
jb
inc
sub
shlb
out
mov
cld
sbb
sti
push
loopne
mov
mov
and
add
add
shrb
pop
in
ret
xor
xlat
aas
sub
daa
add
daa
int
mov
xchg
mov
pop
ret
cld
ret
aam
jmp
ret
jmp
jbe
inc
cld
sbb
push
sub
imul
out
mov
cmp
aas
or
adc
mov
xor
inc
movsl
out
mov
stos
xchg
jnp
mov
ret
repz
xchg
and
leave
xchg
daa
ds
clc
lret
fisttpl
xchg
jnp
dec
aas
pop
imul
or
sbb
repz
lret
adc
push
push
and
imul
jbe
cltd
mov
out
inc
adc
and
lret
ds
or
sbb
pop
ret
sub
xor
sbb
adc
repz
ret
xor
sbb
outsb
xchg
push
or
das
lret
inc
stos
sbb
jmp
test
adc
sub
add
shrb
lds
dec
test
ja
dec
aad
ja
jae
fs
inc
jmp
mov
fimull
inc
lcall
sti
push
jmp
lret
es
jbe
data16
imul
sub
sbb
or
sti
push
jmp
lret
es
jbe
data16
test
add
and
mov
iret
movsb
pop
push
pop
cwtl
jl
cmpsl
cld
mov
mov
std
xchg
cs
into
dec
jg
mov
es
fisttpll
test
movsb
pusha
jno
scas
ficoml
push
mov
testb
shlb
pop
xlat
pop
xchg
inc
fsts
push
dec
pop
insb
in
xor
xchg
icebp
xchg
xor
xchg
adc
stc
push
push
insl
popa
jmp
mov
adc
push
bound
inc
mov
pop
xchg
fisttpll
mov
cmp
iret
sbb
push
clc
sub
jge
je
lcall
movsb
not
pop
jo
leave
mov
sar
xchg
data16
pop
push
stos
adc
mov
and
mov
mov
xchg
icebp
outsb
repz
push
push
or
into
cmpsb
or
and
jo
or
lods
out
ss
xchg
dec
lock
lods
jno
cmp
xor
hlt
loope
subb
fsubp
sub
call
decl
dec
mov
jbe
test
test
int
cmp
xor
sub
pop
mov
sti
pop
out
adcl
stos
daa
adc
out
hlt
ret
mov
dec
mov
ljmp
jnp
xchg
in
loop
xor
sub
sbb
dec
dec
jge
mov
fsubs
jno
add
inc
cmp
dec
in
mov
mov
in
cmp
jl
hlt
sbb
jo
or
xchg
insb
lret
sub
test
iret
mov
push
pop
in
repnz
ror
inc
in
push
insl
xor
xchg
out
or
inc
pushf
add
repz
cmp
push
int3
and
sbb
ljmp
js
mov
data16
fisttpl
adc
mov
int3
leave
repnz
pushf
movsb
pop
cmp
cmp
push
xchg
stos
inc
push
sub
pop
les
cmpsl
int3
inc
scas
repnz
xor
xchg
loop
mov
in
push
fistps
ds
mov
push
dec
fimuls
movsb
repz
out
push
std
pop
ljmp
push
adc
call
sbb
stos
popa
push
ja
add
pop
dec
outsb
sbb
adc
shr
je
je
gs
movsl
jp
mov
aas
mov
cmp
lahf
xor
xchg
cmpsb
add
in
or
mov
pop
cs
push
dec
and
jecxz
test
or
pop
outsb
inc
cmpsl
mov
jnp
sbb
repz
imul
dec
push
sbb
lcall
or
jnp
xor
adc
inc
push
push
shl
and
stc
mov
jns
int
mov
les
les
mov
jo
sub
sbb
mov
in
cli
push
aam
andl
and
cmp
imul
xchg
fwait
lds
pop
mov
xor
and
push
adc
test
sahf
mov
outsl
sbb
inc
or
adc
cmp
mov
cmovns
mov
push
pop
fimuls
fisttpll
lds
test
xchg
cmp
loope
and
dec
cmp
mov
cmp
add
frstor
jl
pop
jle
inc
clc
or
and
xor
lcall
push
out
testb
dec
aam
sbb
into
xor
add
mov
stos
push
roll
mov
adc
dec
pusha
inc
jl
pop
test
xor
jmp
xchg
leave
outsl
test
data16
mov
cmp
cmovle
pusha
jle
jp
outsb
out
test
shr
orb
mov
mov
push
or
rclb
out
mov
xor
popf
push
mov
in
imul
mov
jg
cli
int3
push
dec
icebp
cmc
mov
sbb
cmp
jmp
je
fdivs
cmp
mov
and
pop
into
or
mov
push
push
pop
mov
pop
in
clts
push
ljmp
les
lds
cmp
pop
adc
push
mov
jno
push
or
cli
arpl
daa
repnz
ja
xchg
mov
fs
cmc
jns
stos
jp
dec
data16
mov
cmpl
andb
imul
add
in
inc
nop
dec
mov
sub
pop
jbe
pop
jnp
mov
mov
jge
jecxz
push
mov
sub
or
stc
hlt
rclb
orb
ja
mov
gs
cmp
int
aam
es
into
loopne
pushf
ljmp
lock
adc
das
test
aam
mov
test
xchg
ret
cmc
mov
outsl
pop
stc
fcmovnu
mov
daa
fidivrl
cli
mov
test
or
jecxz
mov
inc
jge
cmp
jle
lods
lock
es
xor
inc
rolb
cmp
je
in
ja
push
shr
push
adc
pop
jl
dec
fs
outsb
xor
push
insb
and
enter
pop
in
in
push
pop
jecxz
pop
into
xor
repnz
out
gs
inc
movsb
adc
loop
mov
push
xchg
stc
enter
insl
mov
inc
dec
std
test
xchg
mov
adc
les
fyl2x
fnstenv
jecxz
mov
pop
push
push
cmp
jecxz
ret
in
lcall
std
dec
add
fs
and
in
or
pop
sbb
jge
roll
inc
repnz
jge
inc
insb
loop
fiaddl
lods
and
loopne
out
enter
push
loop
pop
flds
pusha
cld
cmc
sbb
insb
aaa
mov
xor
inc
push
cmp
lock
mov
aad
pop
dec
out
pusha
daa
loop
loope
adc
mov
shlb
pop
sbb
shlb
cwtl
xor
stos
popf
pop
hlt
int3
jle
sub
jecxz
les
fstl
cs
in
psllw
mov
jle
faddp
sbb
fstpt
insb
and
push
jnp
pushf
ret
out
push
and
mov
cmp
lret
add
mov
mull
testb
xchg
in
mov
movsb
fisttps
ret
mov
es
jb
cmp
mov
jp
idivb
cs
inc
aad
jge
loope
mov
xchg
xchg
popfw
mov
xor
pop
insl
adc
ret
out
jno
sub
dec
push
stc
inc
incl
and
test
dec
dec
aaa
and
or
mov
cld
divl
subb
push
fwait
aad
xorb
or
sarl
leave
sbb
mov
mov
cmp
fstps
stos
mov
xor
ljmp
loopne
mov
mov
adc
jmp
adc
das
shll
mov
ret
push
sbb
addr16
mov
pop
jl
shlb
insl
fidivs
test
jl
or
xor
repz
and
dec
hlt
cltd
mov
add
es
mov
dec
pop
adc
cli
aaa
out
and
sub
call
adc
mov
fcmovu
push
push
jecxz
xor
andb
pop
stos
sbb
lea
jne
mov
xlat
in
sarl
lret
mov
cli
add
dec
or
lds
pusha
outsl
daa
ljmp
outsb
in
or
cmp
push
adc
in
mov
inc
add
xor
dec
pop
fs
pop
mov
xor
push
sbb
aam
mov
mov
jl
movsb
adc
fstps
out
sbb
or
add
mov
stc
sbb
jne
into
leave
orl
mov
js
sbb
cld
shl
test
mov
popa
adc
mov
mov
pushf
insb
scas
xchg
xor
arpl
shlb
and
adc
mov
add
xor
lret
add
cmp
jle
add
xchg
fnstenv
aad
sahf
sbb
out
push
in
inc
sbb
enter
adc
dec
mov
inc
dec
or
popa
xchg
mov
mov
mov
scas
dec
scas
add
test
popa
xchg
in
ds
pop
mov
mov
inc
mov
adc
push
in
jnp
lret
push
sti
jmp
cwtl
mov
hlt
cmp
and
fxch
lret
pusha
call
push
leave
lock
lret
mov
cmp
sahf
popf
or
imul
lcall
test
into
cwtl
add
xor
push
test
inc
fs
in
sbb
sub
xchg
mov
into
mov
aas
lock
ret
mov
lea
add
pushf
je
inc
sub
rol
fnstsw
stos
pop
inc
test
hlt
mov
mov
mov
lea
shll
sbb
adc
aad
bound
loop
push
in
xchg
and
pop
js
bnd
les
mov
jns
push
mov
sub
cld
cmpb
icebp
add
jle
stos
xchg
push
cmpsb
pop
popf
test
pop
xor
mul
pop
jmp
arpl
xchg
sbb
and
xchg
or
lcall
sbb
arpl
in
fs
and
fimuls
inc
push
sbb
enter
dec
ljmp
enter
dec
jnp
int
int3
sub
pop
jbe
lock
icebp
inc
out
dec
out
mov
loope
notb
dec
or
int
adc
sub
and
addr16
es
and
lock
mov
add
fnsave
aam
cwtl
sub
notb
test
rorl
in
cmpsb
xchg
out
dec
std
cmp
mov
ljmp
fisubrs
and
test
negl
push
push
inc
add
xor
rolb
clc
mov
rcr
dec
and
es
out
inc
out
xchg
scas
or
nop
cli
int
jnp
cmp
fcompl
lret
lea
dec
push
fdivr
cltd
mov
out
mov
inc
int3
negb
test
jb
fdivl
in
pop
cmpsb
xchg
out
cmc
out
sbb
fsubp
add
lret
fildl
dec
out
lods
cmp
jmp
loope
xor
adc
pushf
arpl
fldcw
push
pop
call
xchg
lret
push
add
stc
mov
jbe
mov
push
sbbb
dec
movsb
inc
sahf
sbb
push
out
mov
sbb
jb
dec
or
rclb
push
call
lds
daa
pusha
inc
cmp
je
imul
popa
mov
ficompl
repz
rorl
dec
out
movb
dec
fbstp
rol
inc
aaa
cmpsl
push
jmp
rcr
das
popf
scas
dec
int3
test
adc
adc
insb
gs
dec
lahf
test
mov
cs
dec
mov
jne
adc
shr
mov
ret
rorb
insb
inc
test
jge
fs
sub
xchg
mov
cmpsb
js
jmp
jne
dec
add
iret
sbb
icebp
icebp
scas
lret
jb
push
stc
xchg
je
xor
fisubrl
shll
push
cmpsl
mov
cmpsl
or
pop
pop
and
xor
xor
cmp
outsl
adc
icebp
fcoms
add
xor
daa
lds
loope
dec
out
mov
pop
cs
and
add
mov
mov
fcomp
pop
sub
daa
loop
push
fisttps
int3
aad
mov
shll
mov
popl
dec
aad
xchg
fsubrs
push
inc
arpl
mov
int3
loop
jle
daa
je
jg
xor
test
loope
ds
jno
push
insl
lods
jmp
es
mov
jnp
test
fcomps
jmp
fcoml
in
sbbb
out
push
in
cmpsl
arpl
jl
out
ret
cmpsl
fmuls
in
jmp
jg
stos
ja
test
cwtl
jae
dec
das
and
push
dec
scas
xchg
in
sub
gs
inc
adc
mov
fisubrs
aad
pushl
mov
mov
ss
dec
mov
in
cmp
mov
adc
scas
in
ds
jb
lock
sub
lahf
push
repnz
leave
das
adc
daa
cld
pop
fcompl
roll
sub
in
lods
xor
push
jle
jnp
mov
cmp
and
adc
popf
sbb
push
xchg
or
popf
hlt
add
icebp
negb
shlb
or
scas
data16
sub
xor
push
iret
adc
mov
and
int
jge
xor
sub
loope
sub
xlat
pop
out
push
mov
adc
pusha
aas
clc
cli
xchg
inc
jecxz
add
jg
sbb
rol
rcrb
or
push
and
mov
repz
lds
mov
shlb
repz
test
pop
repz
mov
add
rcrl
or
loop
add
pop
sarl
add
push
in
jp
ja
rorb
cmp
lods
ljmp
or
pusha
shll
pop
in
jb
mov
mov
sbb
push
or
sbb
jl
movsb
inc
out
outsl
sahf
and
cmp
movsb
cmp
fsubrl
cmp
mov
mov
sbb
sbb
enter
pop
pop
pop
gs
imul
inc
and
cmpsl
jmp
lcall
into
pushf
push
sub
je
fs
or
mov
aad
adcl
notl
outsl
mov
loop
mov
pop
xchg
inc
dec
stc
sub
push
rcrb
cmpsl
lret
fsubs
aaa
stos
int3
enter
mov
adc
shrl
dec
push
inc
mov
rclb
pop
lods
jb
mov
mov
lds
test
je
push
add
add
mov
daa
test
mov
cltd
out
iret
out
in
in
cmp
xchg
shlb
dec
subb
scas
push
shrl
inc
ret
push
popa
inc
mov
add
insb
dec
pop
fisubs
sbbb
mov
pop
imul
ss
sar
test
cmpsl
cmc
fstl
mov
mov
and
xchg
fstp
pop
mov
mov
and
add
xchg
sub
icebp
out
hlt
cmp
cmp
and
xchg
sbb
mov
aaa
dec
xchg
movsl
cli
mul
push
mov
in
xorl
jge
mov
fs
scas
lret
movb
pop
psllw
dec
sub
jl
pop
popa
xchg
sti
xor
aaa
and
scas
mov
imul
cmp
pushf
lret
xchg
sahf
xchg
repnz
in
ljmp
sbb
rorb
and
cmpsb
mov
mov
pop
and
testb
jne
pop
adc
push
pop
loopne
fptan
fdivrl
xlat
dec
in
out
mov
clc
mov
jo
jae
out
cld
imul
cmp
aam
mov
push
hlt
fucomi
int3
jbe
mov
add
into
dec
sbb
shlb
gs
arpl
aad
pop
mov
pop
outsl
je
pop
cmp
inc
jbe
add
xor
aaa
shr
outsl
mov
mov
leave
aam
sti
ret
insl
fisttps
xchg
stos
jle
cwtl
ja
push
je
cli
pop
mov
orb
jg
inc
pop
inc
dec
push
outsl
in
inc
int
shrl
daa
cltd
cmp
xlat
lods
inc
mov
inc
mov
pop
aas
adc
aam
rcl
inc
adc
cmp
jecxz
mov
and
lods
inc
iret
dec
les
into
sub
out
adc
fidivrl
and
pusha
mov
incb
ret
or
mov
xchg
pop
dec
and
xchg
sbb
in
lcall
arpl
nop
dec
and
loope
adc
mov
mov
jo
lock
xchg
ds
mov
sub
jo
pop
dec
es
shr
xchg
xchg
xor
add
sbb
add
shlb
pop
test
pop
dec
sub
mov
push
stos
in
repnz
push
dec
inc
push
mov
repnz
ret
cmp
or
psrld
repnz
je
mov
jl
sbb
jo
test
xchg
sbb
xchg
jnp
add
movsl
mov
les
jecxz
hlt
push
pop
clc
xchg
hlt
cld
sarl
or
and
outsl
cli
movsb
xor
cmpsl
mov
inc
lods
aad
mov
call
pushl
sbbb
inc
pop
pop
fisubs
cltd
pop
cmpsb
xor
movsl
outsb
addr16
dec
inc
xchg
mov
stos
lcall
xchg
in
js
dec
scas
xchg
mov
loope
mov
push
inc
push
cmp
imul
add
shl
pop
dec
rcll
sub
pop
aas
cmpsl
out
add
lods
jge
cltd
cmp
stc
mov
or
xor
xchg
outsl
out
and
rcrb
in
sub
mov
pop
and
inc
out
lcall
lret
jl
das
test
stos
xor
js
add
test
push
lret
aaa
fsubl
js
dec
call
sub
and
in
movsb
movsb
popf
enter
lret
adc
stos
cmp
sub
and
push
not
mov
mov
mov
lea
mov
push
ss
leave
arpl
popf
push
pop
shl
out
pop
fistpl
lahf
in
loop
in
leave
add
daa
lcall
pusha
shlb
mov
inc
icebp
mov
int
imul
mov
xchg
mov
pop
pop
push
push
push
fcmovnu
mov
repz
cmp
fcmove
pop
pop
pop
jne
popf
jbe
hlt
dec
mov
sahf
push
fs
out
arpl
pop
jae
repnz
dec
sbbb
out
xchg
and
cli
add
scas
mov
jmp
pop
in
push
xor
cmp
data16
push
xchg
push
adc
js
push
or
sbb
sub
xor
adc
xchg
xchg
xor
mov
mov
loopne
jb
add
imul
lds
out
loop
mov
add
mov
lret
fldcw
push
pop
mov
rclb
rclb
xor
test
ljmp
insl
movsl
or
mov
mov
js
mov
or
out
sbb
bound
xchg
repz
sbb
and
std
add
cmp
cmp
sbb
dec
push
std
sub
push
sbb
dec
pop
jmp
addr16
mov
pop
test
daa
imul
mov
pop
sbb
mov
ror
fs
iret
cmp
enter
jns
or
mov
cmp
push
sub
ljmp
rcll
int
pusha
sbb
push
cmp
rorl
add
mov
xor
mov
sub
je
std
xchg
xor
movsb
cmp
xchg
mov
lahf
or
das
in
or
pop
jbe
out
sbbb
repnz
jno
xchg
and
lahf
aad
mov
mov
fs
push
loopne
repnz
jne
push
sub
lods
fbld
popa
ja
sbb
push
ds
incb
add
rcr
sbb
cmp
mov
stos
jg
mov
hlt
push
je
add
add
fcomi
push
icebp
repz
test
loope
popf
jbe
mov
jne
mov
xor
adcl
flds
iret
pop
test
push
test
dec
mov
mul
icebp
subl
xchg
subb
cmp
jge
mov
cmp
ja
insb
test
mov
mov
nop
dec
add
pop
sbb
pop
fs
in
mov
xchg
pop
lock
jnp
jns
cmp
pop
jnp
clc
mov
fstp
fstpl
xchg
les
int3
mov
jge
sbb
jge
lods
cmpsb
scas
xor
push
ror
leave
fwait
mov
and
pop
cli
xchg
cs
mov
repz
es
in
xor
cld
pop
push
fcomps
sub
inc
daa
into
adc
mov
fsubr
rcrl
icebp
mov
int3
push
out
xor
std
in
popa
mov
repnz
cmpsl
inc
out
fstl
aas
insb
daa
push
movsl
mov
loope
add
sti
pop
jmp
push
xor
sbb
sbb
aam
in
mov
pop
lds
movsl
xor
inc
in
ss
orb
mov
mov
lods
insl
inc
cld
lahf
add
fnstsw
rcll
or
jb
aad
bound
mov
pushf
fmull
movsb
ja
aas
imul
gs
adc
rclb
sbb
loopne
ss
addr16
cli
in
add
lea
cmpsb
neg
inc
cwtl
jmp
scas
pop
cmp
xchg
fucomi
iret
cmpl
int
or
adc
pop
pop
leave
mov
sbb
push
jmp
sbb
loop
xor
shlb
cli
in
sub
xchg
iret
push
mov
lret
push
repz
add
adc
xchg
or
jnp
inc
or
sbb
shrl
lret
push
push
pop
dec
popf
inc
out
or
enter
popa
mov
mov
pop
mov
cmpsb
cmp
sub
sbb
or
sti
push
jmp
lret
es
jbe
data16
imul
sub
sbb
or
sti
push
jmp
lret
es
jbe
data16
imul
sub
sti
pop
jmp
fbstp
lret
das
mov
jg
orb
bound
dec
out
sub
fwait
jbe
es
adc
jno
lret
push
int3
and
fs
je
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
movb
sbb
cmpsb
mov
or
das
dec
sarl
loop
xchg
stc
sub
fldenv
sub
bound
adc
in
pop
and
repnz
in
mov
cltd
mov
sub
jp
or
push
sub
loope
lods
lcall
lods
cmc
leave
cmp
sub
pop
inc
dec
add
repz
in
push
mov
mov
fs
xchg
xchg
shll
fidivs
mov
mov
push
pushf
jmp
push
icebp
sbb
ret
sub
cmp
daa
shrl
xchg
jmp
ret
cmp
add
fnstcw
mov
mov
cmp
jns
add
mov
ret
stc
lods
sbb
push
cmp
mov
sar
orb
rorb
ljmp
push
sub
enter
stc
mov
xor
ds
rcrl
mov
mov
mov
xlat
clc
rcll
mov
mov
fnstenv
bound
add
cmpl
lret
aas
fisubrl
mov
rorl
mov
sub
pop
push
daa
popa
or
and
ljmp
loopne
xchg
out
rcrb
push
jle
add
aaa
jno
xchg
fsubl
out
xchg
test
mov
push
dec
or
sbb
and
mov
loop
xchg
stc
sub
fldenv
sub
bound
adc
imul
mov
loop
xchg
stc
sub
fldenv
dec
mov
pusha
dec
xor
out
repz
rcrl
jmp
imul
das
adcb
fisubrl
popa
aas
add
lods
jecxz
jbe
arpl
imul
push
std
cmc
lcall
rolb
rcrl
cmp
adc
push
lret
dec
xor
pop
mov
xor
xlat
xor
mov
add
and
lret
adc
ja
mov
lcall
sbb
mov
add
lock
inc
data16
dec
and
enter
sbb
mov
cs
lea
lds
stos
test
leave
ror
in
jne
mov
push
aaa
lea
int
fnsave
cli
fmulp
dec
mov
pop
push
add
xor
push
pop
mov
sti
and
loop
insb
into
inc
idiv
divb
es
pusha
push
sahf
inc
xchg
ljmp
mov
inc
adc
lahf
test
push
push
add
iret
lods
jl
jp
mov
cmovl
inc
push
insb
arpl
lock
pop
outsb
cmpsb
xor
movsb
mov
sbb
leave
jbe
rclb
scas
sub
and
xchg
mov
fcoms
push
cmp
sbb
sbbb
ja
xorb
daa
push
xor
lret
push
dec
mov
and
mov
dec
mov
inc
inc
neg
cmpb
dec
mov
ret
jle
or
push
mov
push
dec
dec
sbb
test
jb
mov
movsb
xorb
imul
mov
das
mov
fucom
das
scas
add
xor
imul
pop
xor
popf
xchg
mov
out
mov
pop
push
and
mov
cmp
idivb
les
mov
inc
aam
jecxz
adc
mov
mov
inc
repnz
stc
inc
pop
mov
sarl
mov
lret
dec
mov
add
fwait
test
out
repz
or
shrl
cltd
test
les
int3
sub
lea
insb
out
jge
mov
pop
xor
or
inc
ljmp
inc
sbb
xorl
sbb
clc
lahf
bound
adc
out
push
jb
mov
daa
xchg
jle
iret
or
xchg
push
jmp
jp
mov
sar
addr16
xor
xor
ret
fldt
inc
pop
pop
test
hlt
shll
bound
insl
jmp
shl
es
xchg
loopne
sub
ficoml
mov
sub
leave
xlat
in
ficoml
xchg
int3
mov
xchg
mov
stc
in
cmpsl
lcall
and
sub
and
hlt
into
sbb
imul
push
nop
xor
mov
push
pop
inc
loop
adc
bnd
inc
push
je
sbb
pop
dec
stos
leave
aad
or
pop
movsb
inc
sub
in
xchg
scas
xor
jmp
xchg
inc
push
mull
iret
cmpsl
cmc
out
shl
fadds
pop
call
sub
mov
mov
mov
mov
lcall
xor
fnstenv
push
adc
sbb
lret
hlt
mov
adcb
not
xor
push
movsb
and
cmp
bound
mov
or
aas
aas
mov
cli
sbb
call
or
mov
mov
inc
lock
in
inc
ds
and
fsubrl
out
les
test
inc
jl
xlat
dec
aam
fimull
pop
xor
mov
enter
out
and
dec
push
sub
mov
mov
jmp
in
xchg
mov
push
mov
imul
cmpsl
mov
xchg
fidivl
test
lods
es
int3
or
add
cld
dec
mov
es
in
adc
outsl
jbe
movb
mov
dec
mov
push
clc
ja
aas
fimull
jmp
xlat
popa
pop
jbe
xchg
into
int
mov
rorb
ss
xchg
cmpsl
push
pop
pop
lea
je
aad
mov
mov
pop
xchg
stos
sbb
xor
lods
and
xchg
ret
or
pop
loope
xorl
insl
adc
les
mov
mov
ss
jp
mov
cmc
and
mov
mov
fisttps
sub
sub
fnstsw
adc
jge
movsl
leave
roll
into
lods
push
xchg
setnp
xor
sahf
repnz
jecxz
loope
data16
aad
push
sbb
pop
movsl
imul
stos
jecxz
mov
movsl
xor
pop
pop
sbb
sbb
dec
ja
into
aaa
jne
inc
faddl
dec
pop
frstor
ret
lock
or
pop
pop
and
sub
mov
stos
daa
push
aam
mov
inc
outsl
stos
mov
cmc
cmpsb
pop
adc
repz
cs
scas
jo
cmp
sbb
push
out
fisttpll
sbb
mov
lret
repz
dec
lret
inc
in
jae
in
imull
add
pop
sub
test
adc
ret
negl
sub
jnp
push
cwtl
sbb
dec
shrb
mov
jmp
in
sub
cmpsb
pop
lods
sti
jns
adc
inc
xchg
mov
sub
mov
and
testb
xorb
loope
outsb
lods
shrd
xor
jno
push
mov
lock
lcall
sbb
add
push
ljmp
jl
xchg
daa
mov
pop
lcall
mov
inc
repnz
out
in
ffree
and
pop
cltd
inc
xchg
dec
mov
add
inc
popa
adc
xor
pop
pop
dec
insb
hlt
lcall
call
lods
sub
sbb
sbb
cmp
inc
negl
cmp
mull
cmpsb
mulb
hlt
cmpsl
xor
xchg
pushf
and
inc
ljmp
dec
int
lock
repnz
dec
cmp
andl
push
lock
lds
or
out
ss
pop
jb
in
fisubrs
out
add
divb
pop
xchg
jg
lock
imul
sarl
jge
jne
lock
leave
xor
stos
jbe
ret
mov
dec
mov
inc
jecxz
andb
inc
pusha
in
es
mov
mov
and
dec
push
inc
adc
adc
ja
daa
lods
call
addb
jo
je
xchg
adc
mov
dec
cltd
sbb
jge
lea
jns
xchg
add
push
icebp
push
cld
shll
inc
pop
push
test
lds
ret
lret
out
xor
mov
push
cmpsl
in
daa
xchg
jnp
mov
sbb
xchg
xchg
cli
mov
hlt
sbb
lea
mov
aaa
jmp
push
adc
push
fdivl
ljmp
imull
adc
jbe
inc
sarl
sub
jmp
lahf
test
pop
fsubs
mov
nop
xor
or
arpl
pop
mov
pop
loop
cmp
xor
xor
push
mov
arpl
lcall
lcall
testb
lea
sti
popf
jmp
pop
sbb
lret
adc
jl
adc
xor
fisubrl
repz
fldenv
sub
mov
sbb
jge
loop
call
add
pop
fwait
xchg
bound
add
lahf
dec
mov
insb
mov
push
test
xor
insb
js
mov
add
sub
inc
jl
jb
dec
out
mov
sbb
or
lcall
pop
lahf
mov
ja
jge
cli
xchg
jo
cmp
mov
xor
cmp
scas
xchg
das
sub
aam
mov
pop
jmp
movsb
out
ljmp
jmp
cmc
pop
sub
ror
sub
dec
je
dec
push
stos
adcl
fs
rolb
ret
sbb
inc
xorl
in
out
mov
lock
inc
xchg
jp
sbb
dec
enter
popf
dec
jnp
push
or
std
testl
outsl
jge
xor
add
aas
loope
lret
cli
icebp
cmp
jns
ds
nop
cmp
lock
insl
inc
fwait
addr16
push
mov
adc
insl
aas
arpl
push
sbb
hlt
xor
and
scas
imul
in
push
mov
push
mov
cmc
aaa
jne
nop
into
fwait
xor
mov
shll
into
enter
jecxz
bswap
cmpsl
inc
push
push
sarl
in
subl
popf
adc
sub
push
or
dec
xchg
adc
movsl
add
mov
sub
or
ds
leave
mov
jno
lret
aaa
cmp
jl
das
dec
xchg
cmp
daa
jecxz
pop
cli
adc
pop
mov
pop
push
fucom
aad
je
cmp
insl
xchg
popf
inc
js
xchg
in
fdivr
ja
inc
jnp
cmp
test
cmp
cld
loope
sub
mov
ss
xchg
pop
sbb
dec
cs
enter
rcr
insb
or
xor
jbe
mov
popf
add
pop
dec
sbb
roll
nop
adcl
inc
in
cltd
cld
out
insb
cmpsb
jae
pmaddwd
rorl
insb
adc
les
sbb
ljmp
mov
xor
mov
inc
into
mov
loop
and
clc
andl
pop
sbb
mov
andb
fildl
mov
int3
push
jmp
fcompl
jae
and
fsubrs
add
int3
in
addr16
mov
adc
adc
or
pop
pop
push
mov
idivb
sarl
inc
adc
outsl
iret
rcr
and
inc
in
sub
push
pop
dec
dec
daa
testb
nop
add
or
out
cwtl
cmpsl
and
shl
pusha
leave
pop
loopne
rcrb
fisubl
xor
cpuid
scas
inc
das
test
outsl
jnp
inc
xchg
js
mov
cmpsl
scas
std
outsl
mov
fistl
icebp
adc
imul
mov
in
icebp
aam
lcall
ja
jo
mov
add
jl
add
ficompl
cmpsb
in
rcl
fldenv
or
xor
add
sub
push
and
sahf
push
mov
and
bound
sbb
rolb
ret
clc
imul
adc
lret
das
dec
scas
out
lret
fs
inc
test
lret
cmpsb
fbstp
sahf
push
xor
test
in
jmp
and
cmp
rcrl
mov
adc
insb
xchg
ja
dec
mov
testl
mov
dec
mov
popa
dec
mov
in
test
hlt
xchg
outsl
inc
add
rorl
clc
call
outsl
add
mov
bound
imul
addr16
fwait
adc
in
mov
cmp
icebp
add
stos
and
negb
push
inc
xorl
adc
or
mov
or
push
mov
das
or
lods
addl
negl
mov
aas
mov
push
mov
mov
xchg
mov
fwait
in
mov
leave
adc
push
jge
xchg
adc
jne
push
pop
and
cmpsl
scas
inc
insb
xchg
jmp
lock
and
mov
jno
in
hlt
clc
fdivl
in
cmpsl
call
into
mov
inc
aad
sbb
ret
mov
and
rcll
mov
pop
ljmp
pop
mov
sbb
mov
out
rclb
js
or
sbbl
mov
xor
mov
sbb
and
ja
jo
jnp
inc
in
jmp
jge
in
ja
iret
repnz
push
mov
mov
out
std
roll
add
repnz
xchg
pop
mov
int3
mov
mov
pop
int
push
js
mov
sbb
mov
pushf
xchg
fisttps
out
pop
cs
jnp
call
es
movsb
arpl
mov
pop
mov
cmp
scas
pop
das
pop
jmp
inc
test
add
lods
int3
dec
mov
sub
and
mov
lock
out
push
and
xchg
add
idivl
sbb
fadds
lret
or
pushf
pop
xor
shll
lea
inc
iret
popa
roll
mov
ja
inc
and
sti
push
enter
and
jno
int
fstl
lock
xchg
sub
shl
mov
dec
xor
pop
jmp
call
sub
incb
shlb
cmp
sarl
mov
xchg
int
add
cltd
sbb
sbb
out
bound
movsl
mov
xchg
arpl
add
std
cmpsb
push
clc
mov
mov
sbb
lods
mov
les
subl
add
sub
fisubrs
inc
adc
cmp
in
fisttpl
xchg
lods
leave
dec
scas
push
fstps
aaa
push
inc
mov
fildll
push
stos
out
jae
xor
repnz
jnp
pop
add
test
std
xor
cmp
insl
imul
cs
or
push
cmpsl
mov
lret
adc
outsb
insl
mov
aas
xor
fmul
lods
jae
jo
pop
mov
int3
pop
jle
adc
adc
fwait
sub
mov
dec
xor
stos
push
sbb
mov
cltd
insl
hlt
lods
std
xchg
pop
sbb
push
sbb
hlt
mov
fcom
mov
jno
sar
mov
testb
cs
and
mov
and
inc
loope
xorb
into
cmpsl
jmp
add
orl
rorl
mov
mov
sub
adc
inc
xchg
pop
pop
cmc
dec
cmpsb
and
es
into
andl
mov
dec
mov
jae
lret
or
sbb
leave
ljmp
lods
xchg
out
mov
cmp
lret
jbe
xlat
xchg
pop
add
push
xchg
mov
cmp
js
cltd
push
dec
adc
mov
jge
adc
cli
mov
mov
push
lret
xor
mov
mov
and
sbb
or
sub
xchg
jl
aam
adc
addb
xor
shlb
sbb
cmc
clc
cmp
xor
test
dec
mov
jnp,pn
pop
xlat
pop
jo
sbb
cmc
movsb
cmp
mov
call
add
jae
aam
xlat
pusha
sbb
dec
pop
cmpsb
jmp
pop
daa
xlat
ja
jns
movsl
push
add
mov
inc
je
mov
shll
dec
cmp
sbb
mov
movsl
jnp
jno
pop
and
jo
addl
add
sub
ficoms
ja
stos
lret
add
sbb
cld
arpl
loop
rclb
shll
fincstp
outsb
push
lods
cmc
call
mov
ret
clc
js
mov
jle
dec
add
dec
dec
dec
jecxz
add
xchg
mov
cmp
jbe
movsb
mov
mov
dec
mov
scas
mov
mov
add
loop
jo
jecxz
pop
int
sub
inc
inc
sbbl
adc
stc
mov
mov
jge
and
popf
inc
mov
sarl
jns
pop
dec
push
jecxz
jge
xor
inc
fidivs
xchg
dec
dec
add
jbe
mov
lds
pop
cli
lock
or
and
roll
aas
dec
push
sbb
jg
push
cltd
cmp
cmp
sub
fistpll
fcoml
cmpsl
lea
dec
lret
jns
sti
scas
dec
inc
or
lods
aam
scas
adc
daa
lea
ljmp
mov
aaa
call
xor
mov
into
sahf
dec
jo
filds
push
das
sub
xor
dec
in
dec
dec
pop
int3
dec
mov
arpl
adc
test
into
out
stos
roll
in
aaa
insb
sbb
sub
lods
inc
dec
in
xlat
popf
enter
and
xchg
and
sub
adc
cld
outsb
rcr
fidivrs
push
lret
mov
xor
pop
lds
mov
aas
ljmp
mov
fwait
pop
in
or
in
addr16
fidivrs
inc
mov
out
sub
cwtl
es
les
sti
ds
mov
out
adc
jb
sbb
movsb
sbb
das
test
leave
adc
lahf
nop
fisttpl
outsl
pop
or
cltd
sub
in
das
xorl
fmulp
sbb
push
xchg
jne
or
nop
arpl
sbb
movsl
jge
aaa
adc
pushf
addr16
adc
push
mov
pop
jo
dec
or
xor
mov
or
dec
mov
mov
jmp
push
push
gs
sub
invd
cs
mov
mov
dec
out
ss
aam
sub
popf
jle
out
dec
dec
hlt
scas
add
gs
mov
aas
fs
mov
push
dec
pop
test
pop
xor
mov
jns
sub
push
popa
jg
sbb
and
das
or
pushf
and
js
iret
nop
sub
ss
cmpb
xchg
mov
loope
clc
insb
sbb
arpl
test
into
mov
lods
nop
clc
rolb
test
in
xlat
scas
clc
cs
cmc
jmp
cld
js
adc
pop
push
inc
cmp
mov
cmp
pop
fwait
outsb
xchg
mov
dec
sub
mov
jecxz
inc
fxtract
dec
imul
pop
xchg
mov
out
xchg
xor
mov
dec
mov
mov
sbb
push
cmp
mov
adc
loope
insb
mov
fimuls
outsl
stos
and
and
cmpsl
adc
hlt
pop
aam
cmp
pop
ror
cmp
adc
sbb
dec
les
loope
out
push
cmp
push
rorb
cli
cmp
cwtl
mov
jp
es
mov
dec
movb
add
popf
xchg
je
out
cwtl
jle
and
jecxz
int
mov
mov
clc
xor
cmpb
out
es
repnz
je
movsl
mov
aas
pop
push
cmc
cwtl
mov
cwtl
jle
adc
sub
cmp
jae
pop
mov
hlt
sub
sarl
pop
jl
iret
insb
ds
js
push
or
notb
xor
add
fistpll
inc
pop
pusha
sub
push
or
or
adc
rcll
lahf
popa
mov
add
shlb
xor
xor
mov
lock
pop
xchg
dec
cmpsb
pop
cli
xchg
lcall
dec
subl
add
sbb
pop
xor
jl
inc
and
cmp
dec
mov
icebp
movsb
aam
insb
xor
or
push
xchg
stc
rclb
dec
outsl
push
mov
test
xchg
pusha
push
fdivs
stc
push
je
daa
mov
decb
or
mov
and
je
loop
jmp
and
fisubrs
push
jb
xchg
cmpsl
pop
push
xchg
mov
arpl
add
add
cmp
out
daa
xor
test
test
jle
mov
loopne
fs
mov
xchg
icebp
rorb
jo
adc
sahf
jae
xchg
mov
sahf
mov
adc
ror
mov
adcl
pop
dec
out
xchg
iret
jecxz
shrl
mov
sbb
int
test
lahf
add
pop
xchg
cmp
call
aam
dec
dec
jbe
dec
test
push
pop
aad
cmp
sub
dec
push
adc
aas
test
int3
mov
inc
aam
fnstenv
stos
mov
dec
stos
fcomp
add
xchg
sub
sbb
add
icebp
cmpsb
push
cmp
mov
or
das
mov
mov
pop
out
inc
dec
test
sahf
mov
mov
or
xlat
push
int3
dec
and
scas
popa
jmp
fisttpll
pop
js
adc
int3
aaa
add
dec
cmp
pop
rcrl
sub
lods
cltd
mov
inc
mov
sub
lahf
or
sbb
stos
leave
xchg
aad
test
bound
jg
pop
ss
adc
js
or
jge
or
cmp
aad
stos
call
adc
out
xlat
sub
pop
add
pop
jge
and
test
stc
inc
dec
mov
cmp
lret
inc
xchg
push
mov
mov
push
insl
jbe
mov
xchg
scas
imul
leave
mov
and
std
clc
push
jmp
jnp
jb
sub
adc
or
lds
popf
xchg
pop
ss
and
push
mov
xchg
popf
gs
sbb
push
cmp
or
out
icebp
dec
daa
push
adc
dec
xchg
and
imulb
nop
jo
popf
fnstsw
xor
daa
data16
sub
pop
mov
clc
adc
sub
jns
mov
dec
or
mov
lods
in
repnz
adcb
sub
bound
adc
imul
mov
loop
xchg
stc
sub
fldenv
sub
bound
adc
imul
mov
loop
xchg
stc
sub
fldenv
popa
jb
bound
adc
shll
and
popa
ret
cltd
loop
xchg
stc
sub
stc
mov
sub
bound
adc
imul
cltd
loop
in
or
dec
es
ss
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsl
ja
inc
dec
push
pop
sub
pop
bound
jb
out
idiv
iret
xlat
fbld
xchg
lahf
outsl
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
idiv
mov
xlat
fbld
xchg
lahf
outsl
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
neg
mov
stc
mov
leave
loope
in
cs
ss
and
cmp
sub
cmpsl
sub
cmpsl
scas
or
shr
lret
divl
das
mov
or
loope
adc
push
mov
xchg
cld
jb
and
es
out
popf
jb
xchg
mov
mov
and
jbe
xor
or
mov
ds
gs
out
out
dec
dec
icebp
aas
pop
scas
filds
test
das
sub
cmpsl
cmp
push
gs
aas
notl
or
sub
mov
popl
ljmp
fildll
div
clc
pop
pushf
pop
mov
popf
lods
aas
aaa
xchg
lret
mov
xchg
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
idiv
iret
xlat
fbld
xchg
mulb
imul
and
pop
dec
dec
jle
bound
dec
cmpsb
xchg
repz
movsb
stos
mov
fcmovb
test
or
pop
popa
inc
pop
jae
popw
jnp
movsb
cmc
xchg
shl
cmc
fsts
aaa
cs
aaa
aas
pop
movhps
out
idiv
iret
xlat
fbld
xchg
lahf
outsl
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
idiv
iret
xlat
fbld
xchg
lahf
outsl
rclb
cld
mov
fwait
sarb
push
andb
mov
inc
xor
push
jmp
pop
int
adc
push
daa
call
cmp
out
mov
lods
rcl
scas
xlat
mov
mov
push
jge
sub
mov
adc
lret
call
adc
mov
mov
jb
inc
loop
fsub
in
mov
fbstp
push
nop
pop
adc
jns
mov
scas
test
adc
sub
je
jle
pusha
xchg
enter
cmp
or
sub
lea
adc
je
mov
mov
mov
push
xlat
mov
push
mov
jo
jae
sub
jg
mov
adc
lea
sarb
aam
xchg
push
dec
fisubs
fucom
jl
jb
lcall
mov
and
adc
cmpsb
cmp
sahf
mov
leave
and
stos
dec
lcall
adc
sub
sbb
pushf
jmp
fimuls
stos
fwait
stos
lods
push
pop
out
mov
sti
push
cmp
lret
sbb
and
dec
test
movsb
daa
notl
insb
lods
imul
mov
sub
cmp
mov
cmp
push
inc
jmp
pop
dec
cltd
push
int
push
mov
push
mov
fidivrs
in
adc
and
sti
inc
pop
mov
cmpsl
fwait
stos
jge
mov
jnp
xchg
inc
cs
jmp
adcl
iret
test
or
pop
test
js
or
and
outsl
mov
inc
mov
sub
scas
clc
lret
rorb
jmp
sub
test
popf
outsl
sbb
jbe
jo
xor
jns
pop
inc
xor
out
cwtl
push
adc
xchg
fistps
or
mov
push
dec
inc
jne
jb
cmp
lahf
rclb
mov
cmp
mov
cmp
jne
aas
adc
and
imul
out
xor
dec
push
pusha
lds
or
cmp
lods
shrb
inc
cs
jl
shld
lret
push
dec
push
test
xorb
xchg
sbb
xchg
inc
lods
cmp
clc
or
sub
dec
sub
adc
inc
pop
ret
subb
or
pop
mov
mov
sub
fstpl
ljmp
pushf
or
push
lret
addr16
lock
adc
test
stos
or
push
xchg
push
cltd
sub
inc
add
mov
loope
out
ret
outsl
gs
enter
loopne
pop
sub
push
inc
jnp
sub
lret
and
cmp
mov
repnz
lods
add
mov
sahf
enter
xchg
pop
dec
pushf
sbb
test
cltd
add
adc
mov
inc
adc
je
jae
add
xchg
je
lods
add
and
imul
or
insl
push
lods
mov
inc
enter
xor
sub
out
insb
nop
repnz
cmpsl
ffree
fcomp
adc
cmp
push
pop
pusha
mov
mov
test
fwait
pop
pushf
add
pop
mov
inc
cmpsb
das
adc
lcall
fistpll
xor
sbb
inc
loopne
ds
jp
push
cmpsl
or
jmp
jecxz
jns
push
mov
push
arpl
in
adc
lcall
jo
fstl
push
mov
out
loopne
out
mov
dec
mov
imul
sahf
pushf
cltd
push
popa
sub
mov
pop
jbe
mov
psrld
sbb
call
dec
pop
xor
int3
test
pop
popa
mov
rorl
dec
mov
xor
inc
and
xchg
jo
add
dec
shll
lds
mov
pop
cmpb
xchg
divl
pushf
dec
mov
outsb
sti
mov
movsb
cmp
jle
inc
push
out
lret
repnz
jae
out
dec
cmp
inc
in
or
fs
aad
cmpb
dec
lcall
inc
cmp
add
popf
dec
push
dec
les
and
pop
inc
xchg
cmpsl
gs
jle
icebp
dec
sti
movsl
sbb
in
sbb
sub
stc
mov
insb
lods
cmp
xchg
dec
orb
and
mov
lea
es
cmp
repnz
xor
pushf
dec
and
sub
mov
les
xor
aaa
cwtl
fidivs
daa
xchg
fcompl
push
lret
shll
pop
insb
sbb
jns
jl
leave
jle
jecxz
push
ja
ret
into
push
mov
jg
test
xchg
push
lret
adc
enter
out
outsl
sarb
je
pop
xor
test
stc
jp
lret
iret
loopne
mov
push
push
push
push
test
cmp
inc
jne
push
in
cmp
aad
es
lret
xchg
mov
icebp
adc
aam
mov
hlt
inc
sahf
ljmp
ret
in
imul
cs
jnp
inc
call
xchg
gs
inc
into
sub
push
cmpsb
mov
divb
jbe
inc
jp
add
mov
sbb
push
mov
enter
pop
cmp
js
xor
ret
pop
fmul
fdivl
mov
test
data16
mov
sarl
push
xor
ss
push
test
inc
adc
xor
testb
mov
mov
popf
movl
clc
sub
enter
insb
aam
dec
sub
sti
adc
dec
pop
adc
addr16
sub
or
or
jno
mov
aaa
push
lret
adc
sbb
mov
clc
cmc
jl
push
mov
popf
outsl
pop
leave
sbb
dec
lods
cmpsb
dec
jae
jle
sahf
pop
stos
mov
jnp
mov
push
out
out
setns
lea
add
sub
adc
rorl
fistpll
fidivrs
lret
mov
div
gs
stos
jnp
adc
stc
loope
das
add
aam
sbb
adc
push
stos
into
push
popf
movsb
mov
dec
or
into
pop
out
stos
xor
mov
mov
out
or
ljmp
xchg
ficoml
sub
dec
hlt
dec
mov
fldt
andl
add
and
inc
out
jp
and
or
rcl
and
repz
je
repnz
fsts
testb
adc
data16
cmp
inc
pop
sarb
les
and
dec
movsb
mov
add
mov
cwtl
lock
aam
in
into
adc
dec
sbb
ja
cltd
ja
or
jbe
mov
sub
pop
es
adc
and
xor
lods
icebp
sub
mov
outsl
jo
mov
pop
imul
js
adc
popa
sub
enter
mov
and
das
in
pop
push
insb
out
sahf
dec
sub
push
pusha
shll
mov
and
jb
daa
lahf
iret
lea
jle
dec
les
xchg
sub
jnp
jns
mov
inc
lods
cmp
stc
int
mov
aam
dec
gs
ss
xchg
mov
sahf
cmc
sarb
ds
inc
int
imul
add
shrb
das
mov
inc
xchg
out
xchg
clc
xlat
and
int3
adc
add
stos
mov
jl
xor
scas
mov
scas
arpl
xor
mov
mov
mov
or
jo
xchg
dec
and
in
xlat
cmc
push
out
lcall
mov
add
add
mov
test
mov
push
mov
inc
iret
cmp
in
test
pop
out
mov
pop
sar
mov
into
jmp
clc
bndldx
fidivs
ds
cmp
add
xchg
adc
mov
adc
std
fcoms
popa
movsl
cmc
cmp
mov
adc
dec
xchg
sbb
pop
inc
out
cmp
dec
sub
ljmp
fstl
iret
and
mov
ljmp
push
test
hlt
icebp
xorl
das
jae
rorb
scas
in
cld
call
addr16
clc
jecxz
cli
pop
mov
jg
dec
in
into
fnstsw
pop
cmp
sbb
dec
in
out
repz
dec
push
pusha
rcll
mov
jno
sbb
xor
out
imul
inc
mov
add
lret
pop
xchg
cmpsl
mov
jmp
mov
jle
or
pop
sti
pop
ret
jns
sub
imul
repnz
xor
mov
cli
out
pop
sbb
lock
xor
cmpsb
sti
mov
pusha
test
arpl
xlat
jbe
jno
out
mov
mov
cmp
in
xor
data16
mov
lock
sub
mov
dec
dec
mov
imul
mov
outsb
jg
mov
pusha
test
inc
xor
das
into
xlat
std
xor
lahf
int
dec
jmp
movsb
pusha
push
jno
cmp
mov
sahf
fwait
push
rcrb
adc
adc
sub
out
hlt
pop
mov
das
insb
adc
and
or
out
aaa
clc
mov
fstps
sbb
mov
fisubrs
mov
out
jns
adc
ds
ds
jb
cmp
push
adc
repnz
jns
mov
inc
aaa
jns
fnsave
loope
add
dec
lret
ss
into
inc
jge
sbb
jnp
pop
lret
insb
jbe
or
xor
push
or
jge
pusha
add
jne
hlt
xchg
je
in
and
xor
lcall
add
in
clc
ja
lret
pop
stc
adc
dec
dec
sub
dec
xchg
stos
jns
insb
daa
cli
jge
cmp
arpl
dec
gs
hlt
sti
mov
out
loopne
push
scas
jl
sub
push
mov
xchg
mov
inc
xchg
prefetch
sbb
out
dec
push
and
mov
jbe
arpl
std
mov
jmp
jno
daa
je
push
lret
push
adc
jbe
xorl
adcl
mov
inc
mov
ljmp
mov
xchg
dec
adc
iret
repnz
fidivl
sbb
pop
jns
std
test
mov
cmp
pop
jnp
repnz
mov
inc
push
adc
out
lods
xor
or
fstl
cmp
push
cmp
xchg
pop
jmp
mov
pop
loopne
or
in
stos
sub
jae
stos
lods
pop
je
mov
insl
sub
sbb
adc
adc
inc
add
cmp
dec
xor
push
add
arpl
out
xor
or
fisttps
add
or
sub
or
cmp
aam
jbe
ss
scas
cmpl
xchg
jmp
fwait
sti
iret
mov
std
out
je
cmp
xor
jl
stc
sub
mov
sub
xor
cmc
int3
push
add
adc
mov
adc
cmpsl
jne
add
shll
mov
mov
cmp
cmp
int3
pop
lret
jp
sbbl
sahf
cli
push
pusha
pop
pop
jnp
stos
lds
das
clc
sbb
filds
adc
jg
into
jecxz
adc
push
test
adc
fmuls
push
nop
jo
jmp
in
adc
outsb
or
and
je
adc
xchg
repnz
daa
iret
clc
in
cld
mov
add
in
ret
lea
popf
orb
fwait
xor
or
fldcw
and
aam
dec
ds
gs
push
sbb
add
aam
mov
inc
movsb
sub
pushf
loope
sbb
jmp
aas
push
cli
mov
bound
test
fstpt
sahf
lock
fdivrl
push
les
xchg
cmpsl
adc
push
xor
shrl
jo
xor
lods
mov
mov
and
hlt
jp
cmc
add
aad
mov
arpl
in
fwait
adc
or
push
loope
or
jl
dec
insb
bound
daa
xchg
cmpsl
mov
jge
cmp
shrl
int3
push
repz
int
outsb
iret
mov
cli
inc
rcrl
dec
icebp
inc
pusha
pusha
in
mov
add
insb
arpl
leave
sbb
testl
ja
ds
cmpsl
xchg
pop
jnp
nop
push
inc
nop
js
rcl
xchg
mov
fidivs
bound
daa
mov
mov
adc
hlt
in
adc
int3
and
mov
int
es
pop
mov
scas
cltd
inc
push
je
add
gs
pop
aas
or
or
addr16
sbb
dec
pop
add
cmp
lret
scas
mov
leave
shl
out
jno
jmp
xor
fidivl
mov
sub
adc
out
ja
sub
and
test
cmc
enter
pop
add
iret
loope
shr
popa
mov
sub
xor
fistl
shlb
push
xchg
out
cmp
xor
orb
cmp
cwtl
fsubrs
imul
adc
and
movsb
scas
out
pop
dec
xor
scas
lcall
shl
int
loop
lcall
cltd
add
cmp
stos
ss
outsl
call
xchg
stos
sar
mov
adc
jge
cld
rcrb
jo
xchg
loope
mov
pop
aad
add
mov
sub
cmp
jge
mov
js
cmpsb
or
sub
fistl
cmp
aas
mov
mov
and
inc
jl
fisubs
xor
shlb
adc
jo
lret
aas
cmpsl
mov
repnz
push
cld
fwait
int
push
pop
int3
or
sub
ljmp
movsl
in
pop
cmpsl
call
dec
test
lret
clc
xchg
inc
mov
aaa
pop
adc
xor
bound
xor
shll
flds
filds
test
cmp
ljmp
dec
cld
jnp
xorl
pop
sub
pop
or
xor
sbb
dec
cltd
push
mov
mov
or
sbb
es
sbb
lds
jb
mov
cmp
mov
inc
xor
movsl
or
sbb
pop
mov
aam
cld
sbb
sbb
pop
mov
fsub
push
xlat
imul
or
std
loop
push
out
add
push
mov
jbe
sub
push
dec
pop
arpl
mov
or
mov
fs
adc
inc
aaa
rcrb
dec
movl
sbb
pop
adc
movsl
loop
out
mov
push
flds
adc
lahf
ret
lret
sub
dec
incl
cmpsb
dec
shll
lret
repnz
or
mov
fsub
lea
xchg
and
pop
out
push
add
stc
pop
iret
insl
xchg
fs
push
and
out
test
mov
vdivss
pop
inc
insb
xchg
out
fnclex
xor
cmp
fwait
std
mov
pop
pushf
loopne
jge
sub
rorl
loop
inc
lods
dec
loopne
pop
stos
or
mov
cmp
and
imul
lret
push
sbb
loop
cmp
nop
xchg
or
cltd
mov
fidivrs
or
or
dec
push
cmpsl
add
mov
ret
jmp
int3
xchg
xchg
xchg
or
fdivl
out
adc
xlat
ja
inc
mov
lea
push
les
push
addr16
and
sahf
mov
fnsetpm(287
idivl
and
pop
inc
cmp
inc
js
sub
int3
call
int3
addr16
lods
xor
add
jno
subb
arpl
mov
xor
jns
sbb
shl
or
dec
mov
iret
icebp
adc
rcr
jne
pop
push
mov
loop
lret
add
sarl
repz
push
xchg
pop
outsl
inc
inc
adc
inc
aaa
sarl
add
sbb
js
xor
shl
lcall
aad
xchg
icebp
outsb
push
pop
mov
fnstenv
push
push
adc
insl
mov
adc
gs
je
in
sub
fwait
inc
int3
lea
jns
std
adc
jbe
add
xor
stos
add
add
scas
jns
sub
mov
std
push
pop
ficoms
scas
dec
vmaxpd
add
sti
fs
xchg
into
jl
cld
mov
ret
jle
insl
outsl
ret
shr
jle
or
icebp
xor
insb
adc
mov
adc
out
jmp
adc
ret
or
and
lods
add
aas
popf
sub
mov
adc
add
jno
fisubs
shr
push
jmp
sbb
pushf
inc
bound
mov
inc
movsb
sbb
inc
and
in
aaa
cmp
push
pop
call
stos
fdivr
pop
imul
das
ficoml
cmp
mov
ret
xchg
in
sahf
mov
mov
dec
xchg
clc
ror
inc
sbb
cmp
stos
cmp
jecxz
shrb
fucom
sbb
cltd
cmovl
sbb
fmuls
sbb
dec
push
pop
flds
pop
jns
repz
push
test
or
dec
mov
push
inc
cmp
neg
repnz
add
fs
push
insb
lods
pop
pop
or
loopne
adc
sbb
and
int3
xchg
sbb
or
add
ja
xchg
inc
cld
imul
pop
hlt
and
cmp
mov
cmp
movsl
stos
jo
push
push
andl
cmpb
in
imul
xor
stos
cmp
xor
lcall
dec
pop
rcl
mov
sbb
and
xchg
lahf
push
xchg
sub
dec
mov
dec
dec
pop
push
int
pop
idivb
ds
aaa
sbb
jp
jg
pop
cmp
or
popa
mov
int
stc
xor
clc
std
mov
lds
xchg
mov
fnstcw
jnp
pop
addr16
pop
repz
xchg
ret
fsubrp
cmp
repz
pushf
ljmp
test
loope
scas
pusha
or
or
roll
popf
outsb
lock
mov
and
insl
notl
push
and
ds
xor
fsts
sub
mov
iret
add
cmpsl
ret
mov
jno
lds
inc
in
pop
not
and
jg
repnz
and
mov
in
dec
insb
xchg
in
faddl
inc
pop
jb
add
jecxz
jmp
pop
movsb
cmpsl
movsb
outsb
pusha
out
mov
dec
add
push
ss
sbb
cmp
or
adc
shrb
test
jle
push
and
mov
sub
sti
sbb
push
pop
inc
das
in
adc
loope
bound
or
adc
jbe
mov
pop
push
hlt
sub
shl
test
adc
in
or
sarb
inc
pop
and
xchg
mov
inc
push
adc
sbb
dec
out
leave
popa
cmp
ja
adc
fwait
mov
cs
pop
cltd
dec
das
cwtl
or
add
cmp
sub
push
mov
stos
gs
pop
sbb
pop
in
pusha
ss
lods
int
push
dec
jb
in
testl
je
mov
mov
sub
sbb
fidivl
xchg
lea
add
pop
enter
lds
push
in
add
xor
jo
jp
jb
push
xchg
jecxz
in
or
mov
lds
dec
inc
jne
sti
inc
sahf
and
stc
pop
js
inc
inc
imul
cmp
xor
jmp
pop
int
lret
dec
xor
add
out
negb
xchg
push
and
dec
shll
push
jb
icebp
out
dec
call
jbe
jg
inc
stc
fs
mov
inc
pop
xchg
push
push
and
sbb
pop
fld
rclb
lahf
faddl
popa
add
iret
cmp
daa
ljmp
loop
fisubrs
fisttpl
repnz
test
cmpsl
mov
test
push
push
jp
xchg
xchg
push
fsub
push
ret
mov
cwtl
out
xchg
inc
mov
xor
ja
dec
lock
fsubl
jg
push
mov
imul
and
ror
sti
mov
mov
xor
inc
mov
fwait
xchg
test
fsubrl
mov
push
insb
or
inc
mov
cmp
fnstcw
jns
movl
nop
int3
lods
xchg
aam
ror
sub
sbb
cmp
pop
adcl
mov
xor
push
out
movsb
cmpsl
lret
add
pushf
test
dec
clc
out
sahf
pop
sub
out
dec
fxch
and
fs
add
mov
repz
xchg
pop
xchg
jg
mov
pop
testl
xor
cmp
out
sbb
inc
sarl
xchg
xor
mov
out
cmp
cli
and
dec
pusha
jle
ja
xchg
loop
pusha
cs
leave
rol
push
out
out
scas
inc
push
mov
fnstenv
addr16
fcoms
sar
xor
in
mov
mov
aaa
jl
jg
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
idiv
iret
xlat
fbld
xchg
lahf
outsl
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
idiv
iret
xlat
fbld
xchg
lahf
outsl
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
idiv
iret
xlat
fbld
xchg
lahf
outsl
ja
inc
dec
push
pop
daa
das
aaa
aas
pop
movhps
out
notl
iret
xlat
test
daa
aas
inc
js
push
mov
aaa
call
dec
xchg
pop
xor
sbb
sbb
cmp
test
std
cltd
jmp
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
sbb
sbb
das
je
or
in
leave
mov
push
mov
fmul
stos
pop
lds
sub
add
mov
mov
popf
cwtl
test
mov
je
inc
enter
mov
or
jns
and
mov
pushf
pop
mov
sbb
or
out
xchg
fldl
les
or
iret
call
mov
insb
iret
xchg
pushf
in
jns
cltd
cmp
imul
xchg
bound
fldenv
idivb
pop
cmp
test
ret
lock
insl
cmpsb
push
jb
inc
jnp
mov
mov
jns
sbb
cmpsb
xchg
test
std
cltd
jmp
mov
cmp
jge
or
dec
cmp
rolb
clc
ljmp
and
pop
sbb
sbb
dec
cmp
lds
cli
call
sahf
dec
xor
outsb
sbb
or
out
jge
and
mov
fucom
int3
fistpl
pop
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
xchg
pusha
out
pop
sbb
jp
sahf
dec
cmp
out
jnp
into
or
dec
adc
repnz
lds
js
movsl
adc
pop
test
out
fs
pop
or
ljmp
cs
xor
xchg
loopne
std
sub
test
jp
fbstp
lock
push
cli
pop
and
cwtl
stos
pop
enter
and
sbb
mov
adc
rcrl
sti
jp
adc
cs
or
lret
int
add
fildl
repnz
dec
cltd
or
scas
loop
mov
jp
mov
xor
push
add
adc
adc
dec
jecxz
mov
in
testl
xorl
inc
xchg
rcrb
dec
mov
pop
stos
sbb
jp
imul
ud2
jmp
pop
cmp
jbe
lds
nop
popa
test
push
bound
je
aas
add
xchg
movsl
mov
hlt
mov
mov
xchg
ficomps
iret
leave
aad
or
sarl
mov
or
sti
testl
xchg
xchg
pop
or
in
cmp
xchg
out
adc
cmp
scas
idivb
push
mov
push
outsl
xchg
decl
mov
cmp
jbe
adc
xor
pop
jnp
pop
ss
jo
fcmovu
xchg
fprem1
adc
and
add
xor
and
pop
stos
push
in
lcall
movsl
xor
adc
or
loopne
xor
jmp
push
mov
sarb
adc
clc
mov
scas
or
imul
imul
rcrl
pushf
dec
repnz
shll
fistl
push
mov
lcall
adc
ljmp
and
sub
inc
ficompl
dec
sub
cmp
mov
mov
aas
mov
sub
dec
fbld
popa
enter
shlb
icebp
repnz
notb
daa
and
enter
or
mov
loop
nop
dec
mov
sub
jle
push
je
dec
inc
xchg
test
mov
pop
std
ss
fldcw
aaa
mov
bound
int3
adc
test
push
test
jns
iret
enter
iret
shll
pop
call
xor
jmp
jno
insb
jge
and
mov
mov
push
mov
mov
nop
mov
pop
lahf
push
add
cmpsl
pop
adc
insl
jb
data16
mov
mov
cmp
mov
ret
fbld
sub
je
mov
lret
pop
fstpt
cmpsb
jne
outsl
int3
push
mov
lcall
xchg
jo
rorb
cmpsl
jl
jno
pop
frstor
enter
ret
xchg
int3
mov
leave
or
gs
stc
cs
sahf
xlat
fwait
mov
mov
fisttps
pop
push
jmp
jp
cmpsb
ret
movaps
cmp
xchg
push
xchg
scas
nop
xchg
dec
push
mov
arpl
pop
adc
les
or
mov
mov
push
pop
out
divl
popf
xchg
sti
popa
aam
jge
hlt
jb
lock
out
fwait
in
mov
and
aaa
jp
lret
std
cli
sub
xchg
lret
and
mov
insb
add
pop
pop
jg
sub
out
stc
rolb
jb
mov
les
sbb
cmpsl
inc
mov
mov
push
nop
mov
mov
push
mov
stc
adcb
into
mov
add
xor
xchg
adc
mov
adc
ja
inc
cmpl
dec
mov
xor
cs
ffreep
xor
cmp
adc
into
or
pop
cli
add
mov
fucomip
stc
mov
mov
stc
inc
mov
out
mov
fildl
cs
cli
aas
loop
jno
lods
pop
dec
push
scas
push
cltd
aam
pop
scas
pusha
lret
jmp
jge
loopne
xor
les
push
mov
test
lret
cmc
push
sbb
imul
loopne
inc
int3
xlat
adc
lds
inc
push
add
stos
leave
test
sbb
js
inc
loope
push
into
sub
rorl
mov
rcrl
xor
sbb
add
lret
pop
sbb
cmp
imull
push
hlt
xchg
ror
shll
push
loop
push
cli
xchg
enter
out
imul
mov
jg
aas
mov
sbb
jnp
sbb
xchg
loope
sub
popa
out
mov
imul
lcall
aad
push
push
shll
cmp
or
nop
push
lds
sub
fildl
xor
loope
xchg
lcall
mov
cli
xchg
shrb
or
mov
and
out
imul
adc
push
mov
std
or
js
out
aas
adc
or
mov
dec
sahf
shrl
fidivs
inc
testl
mov
movsl
sti
cmp
jbe
inc
adc
or
shll
sub
xchg
stos
addr16
popf
jae
xchg
and
xchg
and
and
fnsave
les
mov
adc
push
cmp
lcall
or
outsb
cmp
mov
xlat
out
int
jbe
add
call
dec
shr
inc
jb
jo
out
or
add
cmp
lcall
insb
shrb
add
nop
inc
iret
dec
xor
push
mov
adc
push
inc
dec
or
inc
loope
gs
stc
sbb
cmpb
or
loop
pop
lods
clc
cli
pop
push
push
repz
inc
xor
lds
rorl
adc
in
popf
mov
jo
inc
xchg
enter
fmul
fldcw
fcmovnbe
inc
xor
imul
push
aaa
jb
mov
fildll
jmp
fimull
call
push
pop
push
xor
hlt
repnz
cltd
addb
lret
lods
xlat
xchg
add
xchg
mov
ja
pop
push
mov
sub
add
sub
add
imul
push
aaa
pop
arpl
dec
cmp
ds
sbb
sbb
aaa
fnsave
dec
lods
mov
sbb
xchg
movsl
stc
jns
dec
lock
lret
mov
fcomi
adc
jg
shll
or
gs
xchg
jo
pop
and
adc
mov
push
mov
out
cmp
pop
sti
xchg
or
xor
mov
adc
ret
mov
mov
int3
xchg
cs
pushf
out
in
mov
inc
xor
int
popa
test
xor
mov
add
xchg
pop
sbb
loopne
int3
xchg
dec
jmp
call
cmp
loope
pop
icebp
adc
sbbb
jae
inc
mov
int3
push
pop
or
mov
out
xor
iret
loope
jo
testl
aaa
adc
xor
xchg
pop
out
pand
jecxz
push
repz
shrl
sahf
lahf
inc
in
xchg
insb
nop
imul
pop
adc
pusha
ss
shl
dec
jmp
and
lret
push
test
jb
cli
dec
leave
fstl
adc
addr16
fisubs
cs
mov
ret
setl
cld
add
les
cmc
aaa
or
sarl
add
jp
loope
inc
cmp
lods
xchg
inc
pop
daa
scas
fdivl
and
add
cmc
push
stos
adc
xor
dec
pop
aaa
mov
fs
push
push
test
fadd
pop
xchg
push
cmc
aad
xlat
or
xchg
outsl
and
int3
loopne
sti
inc
pop
notl
mov
xchg
leave
xchg
insb
push
and
test
inc
stos
pop
sahf
jae
push
pop
mov
xchg
in
imul
adc
mov
and
jae
fmuls
aam
pop
test
fnstenv
cmp
jbe
cli
mov
gs
cmp
adc
and
in
push
and
ror
mov
adcl
sub
clc
stc
mov
xor
imul
mov
mov
sub
cs
sbb
or
or
adc
nop
lret
pop
add
clc
pop
scas
xor
mov
mov
std
pop
fstps
sub
int
in
ficomps
mov
pop
shll
cmp
mov
dec
inc
nop
movsl
test
fwait
fdivl
addr16
push
test
and
jae
mov
daa
sbb
aad
notb
out
push
push
das
ret
pop
or
rorl
lret
pop
sub
mov
mov
cmp
call
adc
ror
out
push
jb
push
cmp
sub
cmpl
test
push
add
shlb
inc
arpl
cs
addb
in
inc
jae
sub
popa
cmc
aas
addr16
std
xor
ret
int3
insl
adc
fisubrs
sbb
test
or
bound
sarl
js
fists
call
or
inc
mov
mov
push
cmp
pop
lods
daa
add
negb
push
mov
cmpsb
inc
cwtl
sub
xor
dec
ss
adc
mov
cmp
sbb
push
sub
test
sar
fisttps
iret
jmp
enter
jmp
cmp
testl
sub
ljmp
xchg
pop
add
mov
xchg
ret
aas
dec
xor
dec
mov
andb
adc
sarb
jp
sbb
pop
stos
sub
xor
push
xchg
rcrb
mov
push
mov
mov
arpl
push
daa
nop
mov
jmp
and
xchg
loop
sbb
cs
scas
test
insl
cmpb
push
xor
lret
jl
sbb
adc
add
jo
rol
cld
xchg
mov
cmp
mov
negl
jbe
dec
bound
push
repnz
or
int
out
sub
fmuls
push
ja
lea
mov
loop
shll
fidivrl
sub
or
imul
push
in
mov
adc
pusha
fstpl
pushf
inc
movsl
push
xchg
stos
add
mov
es
loope
lods
in
jbe
fbstp
mov
adc
sub
popa
jp
jno
loopne
pop
push
cmp
and
pop
stos
stos
lock
aaa
scas
test
js
pop
lods
jnp
cltd
inc
adc
outsl
out
pop
iret
sub
cmp
jne
add
add
in
enter
out
aas
das
cmpsl
mov
cmc
and
out
enter
dec
cmp
decl
jle
inc
and
add
cwtl
or
xchg
cmc
cmp
stos
jno
xchg
in
push
loop
test
sbb
mov
popa
add
jl
fdivr
and
hlt
xor
test
pop
movsl
fldcw
scas
andl
mov
dec
rorb
jnp
dec
mulb
push
xor
xchg
scas
fiadds
sbb
fimull
mov
shrb
sti
stc
out
dec
mov
shll
push
dec
push
inc
xor
cld
cmpsb
mov
aam
adc
xchg
int3
lea
scas
and
std
jmp
or
mov
lret
xchg
xor
jg
cli
lods
mov
movsb
lret
adc
cltd
lcall
adc
mov
test
or
popf
loop
mov
mov
popf
adc
sbb
ret
cmpsb
sarb
jbe
sbb
pop
out
decb
popaw
clc
adc
lahf
cltd
cwtl
adc
popa
cmp
movl
sti
or
int
mov
inc
inc
mov
push
hlt
stos
fcmovnu
mov
sbb
imul
jbe
pushf
jne
les
inc
loopne
cli
and
stc
push
aaa
andl
xchg
js
iret
and
test
push
frstor
push
stos
pop
fldenv
or
push
jno
mov
dec
call
cmp
scas
jnp
jge
push
das
lods
xorb
pushw
push
adc
or
xchg
fildl
fimull
push
fisubrl
mov
sub
incl
sbb
sbbb
push
iret
inc
add
push
jae
and
inc
jmp
outsl
aam
fistpl
pop
fs
roll
add
mov
add
shll
sbb
inc
adc
or
mov
jge
js
xor
dec
adc
xchg
stc
clc
jb
lods
pushl
movsl
xchg
lahf
ljmp
dec
jns
jmp
or
xorb
inc
rorl
adc
and
xchg
push
stos
or
sbb
sbb
adc
and
cmp
rorb
aaa
stos
js
sbb
jl
mov
cmpsl
mov
jbe
dec
xor
cmp
inc
pop
or
lock
jmp
adc
and
into
and
insl
pcmpeqd
mov
pop
cld
negl
fs
sahf
adc
mov
dec
ja
pop
push
aad
lods
and
jns
or
int3
es
shrw
inc
push
int3
cld
jle
mov
pop
mov
fcmovne
in
push
sbb
in
mov
or
and
rorb
out
clc
and
mov
call
jns
ss
add
mov
mov
dec
outsb
call
adc
sbb
in
fptan
mov
xchg
mov
cmp
xor
lea
pop
pop
ret
pop
pop
inc
push
dec
mov
push
je
push
test
pop
adc
mov
xor
pusha
sbb
mov
aam
call
cmp
mov
jb
ret
leave
pop
push
pop
jp
push
popa
pop
hlt
ljmp
mov
repz
lods
lcall
sahf
lds
outsl
xlat
ljmp
stos
and
call
data16
mov
mov
adc
in
fstps
scas
cmp
subl
lds
jns
cmc
and
icebp
mov
negb
sub
dec
mov
inc
add
out
adc
add
cmp
cmp
jnp
push
mov
icebp
mov
pop
je
scas
test
gs
int3
xchg
xchg
mov
insl
pop
and
push
nop
push
push
pop
es
outsb
pusha
pop
push
mov
or
fidivrs
addr16
adc
test
push
push
push
fldcw
dec
adc
mov
xchg
or
pushf
mov
xchg
es
mov
cmc
imull
insl
roll
sbb
repz
movsl
inc
clc
push
inc
push
and
mov
inc
insb
orl
fdiv
test
in
mov
xor
cmp
pop
pop
fsts
loopne
les
int3
cltd
xor
aas
xor
mov
and
cld
aam
in
addr16
adc
gs
aaa
jecxz
mov
pusha
call
mov
xor
mov
aas
mov
insl
push
or
cmp
lahf
sarb
out
cmp
lahf
cmp
inc
xchg
mov
mov
add
and
rorl
sub
mov
pusha
jo
sbbb
aas
jb
pop
arpl
aaa
movsb
pop
jne
push
fs
dec
push
mov
je
xlat
adc
mov
mov
call
dec
addr16
je
sbb
cmp
and
add
imulb
imul
lahf
insl
call
adc
ficompl
imulb
xlat
adc
jae
dec
js
cltd
test
jl
pop
nop
loope
sti
xchg
sub
fstps
mov
xchg
push
mov
sub
mov
add
enter
and
push
inc
in
mov
push
sub
xchg
inc
mov
mov
add
inc
jb
push
dec
test
daa
add
cwtl
inc
and
xor
jbe
or
sbb
inc
gs
sbb
pushf
mov
add
cmp
cltd
addl
icebp
cs
cmc
jg
inc
or
enter
out
or
shl
mov
pop
out
sub
mov
cld
xor
aad
dec
test
ds
cmp
mov
add
mov
xchg
popa
aad
jnp
xor
mov
xlat
pop
and
jbe
jbe
cmp
sbb
cmpsb
call
inc
pushl
mov
or
and
fidivl
pop
push
insb
mov
pusha
xor
fs
mov
rcll
inc
add
adc
data16
ja
dec
cmc
sub
jae
jbe
mov
mov
sub
pop
mov
mov
imul
cld
cltd
mov
cmp
or
cmc
cmp
loope
dec
je
ds
lcall
ljmp
insb
clc
fisubs
popl
ret
and
cmp
sbb
fsubs
sbb
and
scas
fimuls
push
addr16
mov
sub
stos
lods
adc
stos
cld
pushf
sub
in
arpl
ret
call
mov
ljmp
push
and
inc
rcl
jmp
test
push
jmp
in
sub
pop
jge
jns
pop
mov
pusha
fistpll
pop
push
push
lahf
push
cs
jecxz
sti
xchg
inc
outsl
push
arpl
mov
sbb
stos
jo
movsl
fnstsw
sub
scas
pusha
mov
inc
jnp
sbbb
enter
popa
xchg
or
xchg
jae
and
push
sti
dec
mov
out
data16
or
in
sbb
in
sbb
icebp
lds
insl
call
testb
adc
dec
loope
sub
popf
push
add
subl
mov
lods
lods
repz
add
sti
and
dec
fildll
hlt
pop
nop
call
scas
ss
mov
rorb
in
lret
and
mov
out
cmpsb
xor
mov
in
sti
cmp
dec
inc
jno
scas
shl
and
xchg
mov
aaa
sbb
call
loop
popl
into
mov
daa
lret
mov
movsl
mov
xor
inc
inc
inc
inc
push
jbe
insb
rol
jbe
scas
jns
divl
es
int
inc
ja
outsl
loop
in
popf
cmp
lods
loop
mov
inc
lret
mov
fimull
mov
xor
gs
arpl
popf
call
jmp
pop
inc
dec
bound
imul
xor
adc
cmpsl
dec
jecxz
mov
sti
in
jno
and
pop
bound
inc
push
rsm
sahf
lret
pop
sub
mov
idivl
cld
lods
push
out
rorb
or
sub
dec
adc
add
or
iret
push
hlt
js
mov
mov
xchg
jg
inc
xlat
ficomps
cld
cli
and
mov
fwait
jmp
cmpsb
adc
jmp
out
mov
jne
in
imul
sbb
outsb
mov
ss
idivl
fstps
add
mov
add
cltd
mov
dec
gs
xchg
loop
xor
ljmp
fcom
sub
inc
jnp
ret
xor
das
scas
cmp
xchg
cwtl
je
pop
sahf
xchg
lahf
imul
into
push
or
insl
outsl
mov
mov
sbb
out
jmp
xor
subb
cmp
js
adc
cmp
pop
inc
fisttps
jmp
test
mov
add
adc
adc
rcrl
xchg
repnz
cmc
fwait
lds
dec
iret
test
dec
gs
add
inc
and
mov
lea
stos
sahf
pushf
icebp
lretw
push
cmpsl
rcrb
divb
mov
inc
leave
rclb
xor
gs
mov
mov
or
pushf
aam
mov
mov
cmpsl
sbbl
lds
cmp
mov
andb
int
mov
fs
rcrl
jnp
rclb
out
push
lds
or
lahf
das
orl
jns
push
push
sbb
mov
jns
push
dec
loopne
aam
dec
adc
adc
mov
imul
in
test
xlat
push
pop
sub
xlat
pop
icebp
pop
jnp
dec
dec
xor
mov
push
iret
idivl
and
cwtl
sub
and
cmp
sbb
incl
push
dec
cmpsl
inc
leave
out
xchg
inc
add
dec
jb
xor
pushl
jns
std
jg
cmp
enter
fisttps
mov
inc
int3
aad
mov
rol
std
add
stc
mov
mov
adc
push
mov
lods
push
and
mov
scas
lea
or
mov
adc
cmp
xor
nop
movsl
sarl
inc
popa
push
mov
jne
lahf
mov
mov
mov
sbb
jmp
sarl
outsl
and
xchg
fistps
sbb
popf
test
aaa
cmp
daa
repz
mov
int
je
stos
cmp
or
andb
mov
xchg
into
add
cmp
fisubl
add
daa
ficoms
mov
sbb
jl
fstpl
sahf
lods
idivl
and
loope
ljmp
inc
mov
mov
jbe
lret
jecxz
cmp
mov
push
xchg
test
jecxz
insl
mov
dec
adc
ja
das
jnp
push
roll
adcb
int
jbe
mov
test
test
mov
mov
push
mov
xlat
dec
data16
in
rcl
sbb
mov
rcrl
std
cltd
jmp
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
mov
jmp
mov
cmp
jge
or
dec
cmp
int3
test
std
cltd
jmp
mov
xchg
or
jp
xchg
xchg
mov
cmpsb
add
pop
mov
inc
iret
and
fmulp
ja,pn
cmpsl
push
mov
outsb
xlat
jle
pop
out
arpl
aaa
sahf
inc
out
push
addr16
ja
xchg
ds
cs
xchg
negl
mov
mov
pop
divl
out
ja
jecxz
mov
iret
jnp
push
lods
das
movsl
adc
scas
pop
xlat
daa
cli
pop
adc
mov
movsl
movsb
mov
or
dec
addb
add
cmpsl
push
mov
imul
push
jno
jecxz
and
dec
push
cmp
mov
out
or
stc
push
push
cmp
and
mov
inc
xor
stos
xchg
mov
mov
xlat
jle
jle
mov
pop
jg
ret
scas
mov
xchg
ja
xchg
shll
dec
loope
cmp
divl
xchg
sbb
jno
jle
into
filds
in
sahf
cld
fbld
dec
repnz
addb
repz
dec
sti
mov
es
push
mov
hlt
inc
push
mov
xchg
sub
sbb
dec
cmp
hlt
dec
pop
scas
inc
test
mov
xlat
rol
inc
ss
pop
jbe
imul
lret
gs
sub
ja
xchg
inc
ret
jno
add
xor
jb
push
push
fwait
cs
xor
xchg
stos
and
cmpsl
jp
pop
mov
and
fildl
fs
adcb
into
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
mov
in
testl
out
mov
pushf
adc
xor
arpl
clc
es
mov
xchg
mov
cmp
and
dec
das
call
mov
push
dec
xchg
push
cmp
pop
push
mov
fs
in
mov
push
loop
pop
test
jno
jnp
cmpsl
inc
les
test
inc
imul
adc
sbb
lods
addr16
and
xchg
jae
xlat
outsb
test
sub
ficomps
mov
pop
push
mov
insl
hlt
out
data16
or
in
xor
sub
test
adc
mov
mov
std
test
mov
jo
inc
fildl
stos
lret
in
add
mov
xchg
mov
sbb
subb
rcrb
bound
loop
pop
nop
push
lock
jmp
and
and
lea
jno
and
in
pop
add
cmp
cltd
in
shlb
mov
stc
ret
dec
out
xor
pusha
leave
and
out
fwait
adc
mov
fidivrl
arpl
test
xor
int3
sahf
shl
mov
inc
shlb
lds
ret
pop
add
push
repz
jno
mov
andl
popf
roll
sub
out
mov
mov
xchg
mov
sub
test
and
jo
or
shrb
jg
cmp
or
pop
in
in
lcall
test
loop
insl
sub
jae
xlat
push
popa
inc
jle
cmc
jle
and
and
test
dec
dec
push
movsb
mov
mov
xchg
lock
dec
clc
not
jp
mov
out
jg
dec
add
fstpl
popa
ja
cmpsl
call
clc
sub
jecxz
out
cmpsb
mov
push
pushf
push
mov
lods
inc
adc
xchg
imul
stos
xor
and
addb
dec
push
lds
insb
push
adc
xorl
mov
mov
outsl
adc
sbb
std
mov
stc
inc
adc
jg
sbb
cmp
push
fsts
xchg
push
cld
imul
adcb
adc
cmpsl
in
stos
jbe
or
testb
xchg
or
jle
fdivp
jb
push
outsb
or
dec
push
add
push
fadd
mov
push
sahf
push
imul
cwtl
lock
mov
or
push
aaa
jp
sahf
pop
push
stos
or
cmc
into
call
push
push
ret
inc
ja
dec
lcall
sarl
scas
je
cld
loop
mov
shrl
push
js
xor
xor
inc
push
pop
jb
push
xchg
mov
jo
cmp
imul
into
mov
addr16
sahf
frstor
xor
in
scas
aam
aaa
jp
shl
dec
negb
pusha
push
out
dec
mov
dec
add
jbe
jp
mov
inc
lds
cmpsb
and
sarb
aad
mov
xchg
pop
cmp
sbb
add
mov
bound
popf
data16
inc
mov
push
jge
mov
xchg
pushf
subl
test
pop
aam
or
mov
insl
sub
setnp
adc
pop
mov
xor
push
cld
xchg
out
sub
xchg
insb
repz
pop
jns
sub
adc
cmc
lcall
js
inc
ds
and
and
rol
xlat
pop
cwtl
cmp
stos
xchg
fs
cld
sbb
loope
out
xchg
in
mov
into
test
jg
xchg
aad
sbb
iret
daa
popf
sbb
pop
ljmp
xchg
lods
inc
js
insb
add
test
imul
cmc
outsb
sub
lea
stos
test
pop
push
in
cli
inc
inc
out
jmp
dec
push
movsb
sub
je
or
or
pop
adc
lods
sub
sti
jecxz
fmuls
xor
int3
xor
xchg
xchg
js
jno
aam
lock
mov
test
mov
cmc
mov
push
outsl
mov
ret
mov
mov
push
xor
pop
lods
xchg
gs
jge
mov
sub
nop
add
xor
aad
sub
clc
gs
mov
jmp
rolb
lcall
fs
and
inc
jge
jge
cltd
jmp
aas
add
xor
nop
scas
in
and
stos
mov
insb
std
sahf
in
repnz
mov
shll
stc
jl
sub
outsl
aam
xor
push
push
mov
mov
mov
and
clc
mov
insl
loop
aam
shll
jecxz
sbb
sbb
mov
inc
mov
jnp
push
sti
scas
js
pusha
add
sahf
addr16
lret
mov
sub
and
cli
pop
out
inc
push
rcll
mov
and
lret
mov
mov
sbb
into
rcrb
lea
pop
push
xchg
pop
pop
xor
push
lret
in
xor
and
out
aas
out
stc
dec
pop
sbb
jae
es
sbb
test
mov
incb
sub
jno
jle
add
sbb
vpmovq2m
stc
and
push
or
sub
fldl
stc
pushf
test
pop
push
mov
dec
outsl
xchg
jg
mov
xor
mov
push
jno
addl
sub
push
lret
adc
lret
out
lret
sub
aas
idivb
data16
rorl
repz
outsl
or
movsb
lods
popa
sti
sub
mov
fs
mov
ret
jnp
lds
add
scas
and
sub
xchg
push
mov
or
fucom
mov
mov
jl
sti
cmpsb
jae
xchg
cs
lahf
fiaddl
dec
pop
xchg
andl
loope
add
inc
repz
das
cmp
fsubrs
and
aas
in
sub
push
dec
lret
xchg
pop
cwtl
fimull
mov
lahf
push
ficompl
add
dec
pusha
lahf
sbbl
jns
aas
jae
cmp
mov
mov
xchg
pusha
push
cmp
mov
aam
shrb
or
mov
fnstcw
xchg
int
mov
xchg
jmp
lret
ss
pop
mov
fwait
mov
xchg
sbb
addr16
mov
outsl
call
push
mov
dec
lcall
xchg
mov
dec
dec
cltd
pop
je
pop
pusha
adc
add
cmpsl
mov
cwtl
adc
push
lcall
icebp
daa
sub
addr16
or
add
mov
adc
jae
mov
push
dec
popf
imul
sbbl
aas
ret
inc
lods
xor
roll
hlt
jecxz
lret
mov
push
cmp
arpl
mov
and
cs
insl
out
cwtl
fadds
out
jb
mov
mov
pop
rcll
mov
insb
jbe
lock
pop
push
decl
in
pop
shrb
jb
cli
push
adc
test
ljmp
nop
or
nop
inc
fisttpll
push
push
sti
cmpsb
lods
or
out
pop
mov
jo
add
repnz
add
mov
sbb
rol
aaa
add
mov
sbb
sub
in
adc
sub
mov
mov
sub
lea
adc
shrl
jmp
xchg
mov
xchg
ficoms
xor
xchg
loopne
mov
push
xor
dec
fnstenv
and
add
and
push
pop
mov
or
repz
sahf
pop
xchg
insb
lea
rolb
add
and
shrl
dec
mov
sub
es
inc
movsb
mov
pop
mov
mov
sbb
mov
dec
data16
push
cmpsb
out
ja
fs
je
test
push
lock
decl
jp
iret
incl
jne
daa
jle
push
popf
insl
stos
and
pop
lret
pop
lock
pusha
mov
cmp
push
lahf
outsb
jo
mov
or
lea
mov
and
testl
mov
and
in
lods
mov
lret
repz
push
dec
ret
int
aas
dec
jo
mov
scas
jno
das
mov
mov
mov
jno
jge
cmpsb
mov
cwtl
mov
push
int3
mov
pop
sub
or
or
cmp
mov
and
cld
xor
lock
push
cmc
cli
into
mov
mov
ret
sub
pop
pop
fbstp
mov
cmp
mov
jmp
pop
pop
arpl
jns
pop
push
pushf
xor
repz
and
push
scas
repz
std
mov
add
xor
push
mov
jecxz
shll
or
in
jmp
imul
xor
and
push
xchg
mov
dec
mov
push
pop
loopne
inc
out
ficomps
scas
roll
into
cwtl
stos
out
dec
sbb
repz
jo
sbbl
mov
or
neg
sub
push
enter
jl
or
inc
dec
pushw
out
dec
ret
sbb
fnstsw
xchg
xchg
bound
xor
aaa
mov
aas
in
cmp
dec
and
lahf
push
mov
pop
js
xchg
add
movsl
mov
cs
adcl
adcb
push
cmp
lret
pmulhuw
mov
scas
or
inc
outsl
jge
mov
push
xor
xchg
push
js
bound
ret
sub
mov
pop
mov
dec
add
addl
push
repz
adcl
cmp
movsb
popa
sahf
cmp
xchg
movsb
dec
adc
inc
mov
mov
jge
mov
lods
lret
cmp
out
mov
inc
adc
mov
pop
push
test
jle
ljmp
push
fidivl
sbb
push
xorl
and
fwait
push
xor
xchg
push
ss
or
in
cmp
rcr
xor
test
cmc
cmp
adc
fsubr
cmp
in
xchg
pushf
push
divb
scas
jne
add
cmpsl
aad
lods
into
lret
inc
ret
cmpb
adc
add
or
mov
sti
sub
and
xchg
mov
out
lods
mov
add
rcll
xchg
dec
das
mov
das
jecxz
xor
sub
orl
in
je
dec
xchg
addr16
mov
lods
gs
mov
movsb
mov
mov
add
pushf
lods
mov
sbb
add
pushf
sahf
mov
je
inc
popa
lds
fnstcw
mov
cmp
sbb
outsb
or
cli
paddusb
lcall
mov
xchg
xchg
out
push
es
push
mov
aam
or
repnz
adc
adcl
push
nop
js
push
jno
or
into
inc
andl
jbe
negb
dec
in
cli
sbb
lea
aam
clc
xor
daa
adc
adc
xchg
sbb
jns
cmc
sbb
ret
jnp
pop
dec
in
add
stc
fidivrs
aam
mov
std
sbb
xlat
add
mov
gs
add
sbb
aas
mov
in
mov
xchg
jle
mov
xchg
adc
pop
dec
xchg
popa
dec
mov
clc
ds
lret
adc
int3
sbb
push
and
add
fidivrs
test
xchg
mov
pushf
push
clc
test
and
add
sahf
sbb
pop
mov
in
sub
mov
lods
xor
and
pop
dec
mov
lods
mov
test
push
out
rcr
xchg
bound
mov
test
cmova
enter
pop
push
out
ficoms
orl
ljmp
or
dec
jle
xor
shll
pop
daa
xchg
repnz
leavew
mov
out
pop
push
fisubl
jecxz
mov
mov
enter
popa
fistpl
jbe
clc
lret
outsl
outsl
pop
adc
lret
lods
ljmp
or
jne
dec
shlb
cmp
adc
nop
mov
jb
cltd
and
fcmovbe
add
mov
aaa
cwtl
sbb
orl
or
push
in
btc
into
cwtl
insb
repz
mov
je
fdivrs
add
or
jo
and
or
jle
sub
push
sub
sub
add
sbb
and
cmp
leave
mov
arpl
inc
mov
add
jbe
cmp
mov
ss
jl
lea
clc
cmp
push
xchg
sti
inc
nop
lds
stc
cmc
insb
add
rcrb
xor
adc
repnz
xor
cwtl
mov
test
xor
std
dec
int
adc
call
fisubs
les
sbb
inc
shll
pop
fsubrs
ret
loope
ljmp
sbb
mov
or
fxch
push
insb
int3
mov
sar
dec
xchg
leave
adc
pusha
imul
xchg
jle
pop
aas
mov
inc
ss
insb
je
pop
ljmp
mov
mov
xchg
pop
pop
dec
outsl
sbb
daa
mov
mov
push
add
jne
adcl
inc
jae
sbb
jecxz
lcall
leave
dec
cmpsl
and
push
je
clc
scas
pushw
das
or
xor
sbb
mov
jnp
call
sbb
and
mov
sub
sbb
enter
push
dec
and
adc
insl
dec
push
stos
lods
insb
pop
pop
push
lcall
sbb
push
lods
fcom
insl
orl
sbb
in
sub
push
pop
mov
xchg
loop
mov
xchg
imul
addr16
ja
dec
push
sbb
daa
push
pop
fidivrl
inc
mov
mov
jb
orb
pop
pop
pop
out
insb
adc
adc
out
push
negl
dec
rcrl
loope
popa
mov
pop
adc
clc
and
sbb
inc
lret
adc
cli
fdivrl
orb
shll
test
pop
or
sub
aas
push
lcall
mov
repnz
inc
cmpsl
fs
dec
cs
push
xchg
ss
pop
in
xchg
enter
aas
loopne
das
add
dec
mov
xor
clc
leave
in
addb
int
jecxz
jno
shlb
pop
jnp
inc
pop
add
insl
mov
sbb
add
imul
push
or
mov
andl
or
sub
adc
inc
xor
cmove
mov
or
mov
subl
xchg
hlt
add
enter
push
testl
mov
fmull
push
sti
jg
imul
ror
add
mov
imul
lea
jb
push
in
fisttps
inc
mov
mov
mov
pop
push
lds
stos
cmp
mov
out
cmp
popa
jne
pop
repnz
fwait
sbb
dec
dec
pushf
or
out
lcall
inc
fsubrl
gs
cmpsb
sti
dec
bound
cli
orb
cli
repz
imul
cmp
arpl
and
or
pop
fs
lcall
cmp
mov
mov
je
jbe
add
lock
push
inc
sbb
add
push
sub
jne
mov
adc
dec
fs
dec
ja
test
mov
ljmp
adc
aam
or
insb
stos
lcall
pop
bound
loopne
jns
mov
sub
sub
cmp
icebp
repz
xor
mov
jns
icebp
inc
jg
daa
push
push
lahf
dec
xor
cmp
xchg
sbb
push
and
mov
popa
sub
in
test
jne
pop
xchg
inc
test
cmpsl
mov
mov
jg
mov
pusha
mov
and
mov
loope
cmp
daa
test
insb
jl
testl
sub
imul
pop
mov
add
sahf
jae
lods
pop
adc
out
js
rcll
and
repz
leave
mov
xchg
lcall
ret
mov
cmpsb
pop
fwait
jg
stc
clc
jl
mov
jnp
aad
js
dec
outsl
ds
pop
lock
fcoml
sbb
jle
imul
lods
cmpsl
push
inc
sbb
arpl
jbe
pusha
mov
xor
mov
push
vmread
lahf
push
pop
pop
loope
pusha
bound
pop
and
int3
xorl
xor
adc
adc
sti
inc
and
movsb
in
and
cmp
pop
or
in
scas
and
insb
test
pop
mov
inc
jecxz
loopne,pn
gs
jmp
adc
call
mov
je
sbb
push
bound
xor
dec
data16
xor
rorl
xor
cmpb
stos
dec
rcl
mov
pop
lret
add
mulb
xchg
mov
imul
dec
nop
dec
or
jns
aad
xor
pop
push
adc
xchg
sbb
xchg
and
ljmp
ja
cmpsl
xor
or
insb
mov
or
sbb
leave
push
xchg
xorb
sbb
ret
addr16
lock
scas
scas
xor
rorl
out
pop
and
mov
icebp
inc
mov
xchg
subl
gs
jl
lods
inc
clc
jbe
push
imul
loope
repz
aaa
xchg
mov
data16
lcall
jg
repz
jg
insl
lea
out
push
xor
adc
or
sub
push
xchg
outsb
loopne
subb
loopne
hlt
xchg
rorl
cmp
aaa
jmp
in
sbb
xor
aad
outsl
mov
div
cmp
outsl
les
repnz
dec
fs
stos
dec
outsl
dec
imul
fimuls
enter
xor
push
and
int
fadd
hlt
push
fldt
xchg
gs
imul
jl
repnz
and
movhps
push
sbb
dec
jg
xchg
sub
mov
xor
test
xchg
in
mov
mov
sub
scas
push
icebp
cmp
movsb
jmp
ret
cmp
aas
sbb
mov
mov
mov
or
movsl
gs
xlat
ficoml
mov
cmpsb
mov
pop
xchg
in
xlat
push
dec
js
arpl
test
and
mov
mov
icebp
mov
jo
lock
cltd
mov
iret
jae
push
inc
xchg
subb
jle
xchg
push
or
inc
popl
mov
dec
adc
mov
fdivl
cld
sub
sub
adc
xchg
and
and
mov
loopne
or
inc
test
and
lea
out
jnp
call
or
clc
pop
jb
or
cmc
in
rorl
pop
adc
mov
push
mov
pop
pop
sub
lret
sbb
adc
push
lret
sbb
mov
add
adc
out
jb,pn
aam
in
cmp
cli
xor
dec
shrb
push
sbb
gs
mov
fs
repnz
nop
sar
mov
xor
cli
jae
je
aas
stos
jns
jl
mov
adc
sti
movsb
push
stos
daa
sbb
out
add
in
or
pop
addb
pop
test
cmpsb
testl
inc
inc
mov
mov
mov
aad
repz
jmp
sti
int3
rcrb
push
push
mov
call
mov
mov
adc
push
rorl
lds
mov
mov
cmp
sarb
movsl
xchg
xlat
and
fists
sub
or
cmp
js
clc
add
push
mov
and
test
fsubr
adc
fs
loope
push
sbb
loopne
dec
les
and
mov
cmpsb
xchg
cli
xchg
fwait
pop
or
dec
push
mov
mov
add
xchg
in
je
xor
mov
imul
pop
cmp
ljmp
sbb
jns
jo
pop
fsts
mov
push
in
dec
inc
lret
xchg
push
xchg
loopne
int3
mov
pop
test
jno
mov
mov
rcrl
ljmp
es
mov
lds
and
std
and
stos
jmp
push
mov
cmpsb
dec
xchg
fdivrp
sbb
sbb
inc
lods
xor
ljmp
sbb
add
repnz
or
imul
push
ljmp
mov
push
or
push
outsb
call
inc
add
je
mov
add
lea
cmp
xchg
iret
cmp
pop
mov
mov
pop
test
addr16
out
sbb
mov
adc
daa
push
push
push
out
sub
or
xchg
sub
pusha
pop
fcoms
mov
lahf
jecxz
arpl
xor
and
ljmp
cli
movsb
or
data16
test
rol
jmp
sahf
outsb
out
shlb
movsl
xor
iret
xchg
in
push
xorb
aaa
ds
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
daa
mov
xlat
out
push
addr16
mov
xchg
xchg
ds
push
mov
outsb
jle
dec
pop
pop
adc
pop
sahf
inc
out
inc
addr16
neg
xchg
push
imul
test
dec
movsl
pop
mov
xchg
pop
mov
call
and
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
fmuls
push
mov
xor
add
jne
test
loope
shll
and
insb
adc
out
push
and
rolb
and
xor
xchg
cmpsb
dec
sub
repz
push
mov
and
cld
test
mov
adc
jle
jmp
je
pop
cmc
stos
inc
xor
lcall
mov
lds
sbb
sub
and
sti
push
mov
push
cmp
imul
lds
sub
sbb
adc
fsts
sti
lea
adc
and
jno
movsb
rolb
mov
scas
or
cli
mov
xor
dec
jo
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
xor
call
sbb
xchg
sbbb
mov
sub
sub
out
adc
movsl
sbb
dec
mov
pop
cmc
cltd
inc
pushf
jns
jae
pop
pop
sub
cmp
adc
sbb
shrl
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
adc
and
sti
add
ret
pop
mov
mov
sub
hlt
jle
jae
imul
and
aaa
cmp
mov
hlt
add
cmp
adc
push
mov
sbb
fistps
sahf
mov
outsb
icebp
mov
bound
pop
or
mov
pusha
aad
enter
xchg
out
imul
lret
daa
cmp
adc
jg
dec
rorb
cli
sub
lahf
fisttpll
mov
mov
adc
stc
mov
int
or
xchg
fiaddl
subb
xchg
int3
jecxz
inc
sub
inc
mov
ret
fcoml
jecxz
jbe
fidivs
int
jl
and
inc
and
add
xlat
scas
sub
ds
mov
mov
push
mov
mov
sub
push
sbb
pop
stos
inc
cmp
inc
popa
repz
sub
notl
sub
pop
in
iret
mov
arpl
cmp
xor
sbb
pop
bound
stos
and
sub
test
sub
adc
push
cmc
cmp
idivb
shlb
inc
lock
mov
out
mov
int3
bound
bound
jbe
pop
insl
jbe
lock
jbe
mov
int
cmp
mov
mov
push
cmpsb
mov
mov
bound
jbe
ds
sbb
or
scas
scas
in
push
inc
mov
adc
push
jge
into
xorl
mov
mov
stc
and
lret
sahf
movsb
xor
xor
cmp
sub
and
mov
lods
and
outsl
in
lds
sti
neg
arpl
mov
lea
xor
in
and
test
jg
out
sbb
cmp
shl
hlt
mov
jo
sti
rorb
sahf
fstpl
rcll
mov
pop
push
dec
cmpsb
jmp
adc
cs
imul
sbb
dec
dec
jmp
inc
jne
testl
leave
sti
test
jl
inc
das
test
jge
pushf
iret
ret
pop
pop
sti
mov
sub
loopne
lahf
sub
pusha
pop
clc
lea
aaa
push
jo
xor
jmp
imul
gs
aad
mov
pop
lcall
pop
xchg
lret
jnp
movl
pop
sub
mov
fs
mov
fimull
lahf
outsb
adc
mov
or
adcl
dec
adc
push
mov
sar
insl
push
dec
in
mov
pop
sub
test
test
add
pop
lss
sarl
lcall
leave
inc
push
mov
out
inc
jl
jno
mov
cmpsb
mov
js
push
pop
outsb
rorb
mov
clc
dec
jns
or
sub
ret
popf
and
fisttpl
mov
lret
cmp
loope
push
inc
jo
cmc
vpmacsdd
leave
fdivs
xlat
mov
je
popf
xchg
jg
pop
sub
test
sbb
pop
sbb
mov
test
cmp
mov
mov
lods
fldenv
stos
mov
push
sti
movsl
jo
push
add
mov
push
sub
fsubr
adc
roll
dec
inc
sbbb
imul
pop
outsl
push
push
add
out
and
loopne
cmp
movsl
ds
xchg
dec
inc
dec
shll
ret
inc
xchg
imul
push
outsl
add
dec
inc
fwait
mov
test
mov
push
insl
lods
xor
ljmp
xchg
jl
ds
loop
fcomps
shlb
fsubr
scas
push
dec
pop
std
jg
add
pop
rorb
ret
sub
jmp
js
dec
xchg
cli
cmp
bound
xlat
es
xor
fimull
aas
inc
mov
push
mov
and
cld
test
fistpl
fists
neg
mov
mov
cmpsl
and
ds
mov
into
jne
mov
insl
adc
pop
stos
cltd
xlat
mov
aad
or
xchg
or
ja
clc
repnz
stos
sub
xchg
ftst
out
mov
pop
out
lcall
jnp
aad
and
add
pop
jp
std
mov
sti
add
pop
outsb
cmp
cmp
and
loope
or
pop
mov
out
aam
in
inc
sbb
lcall
mov
jae
xchg
fsubrp
scas
xor
fstpt
xchg
hlt
dec
or
es
mov
cs
and
mov
les
push
enter
shll
push
sub
outsl
xor
cmp
lods
pop
pop
les
fdivs
rorl
lcall
push
notl
or
enter
mov
rcrl
addl
mov
mov
test
adc
mov
out
fldl
fistpl
pop
hlt
fimull
dec
ret
in
stc
or
fdivrs
xchg
lahf
leave
mov
mov
in
lock
stos
ds
mov
lods
dec
in
jle
ficomps
mov
pop
push
test
jns
and
mov
xchg
cs
rcll
xchg
jb
jae
add
xlat
adc
ror
and
inc
xchg
shlb
gs
sub
inc
mov
dec
ljmp
push
push
pop
xor
pop
out
ficomps
dec
mov
push
dec
daa
aad
rcll
and
pop
mov
xchg
pop
mov
push
movsl
aas
movsb
out
xor
push
test
test
inc
lcall
jnp
sbb
int
nop
repnz
sub
mov
iret
loopne
pop
dec
in
inc
dec
pop
and
inc
pop
mov
sub
xor
sub
push
int
pop
mov
mov
fs
mov
pop
push
stc
cmp
arpl
test
jo
xchg
jo
scas
pop
mov
xrelease
or
outsl
ds
sti
pop
mov
fistpl
dec
dec
mov
sbb
adc
mov
pop
sub
repnz
cmc
mov
shll
mov
mov
je
jg
mov
and
push
in
cmpb
call
xlat
ljmp
sbb
add
inc
jg
insb
fstpt
aam
enter
jge
xlat
xor
push
in
insl
cltd
mov
sbb
mov
mov
sbb
rorb
shll
out
sti
xor
and
jnp
xchg
arpl
mov
push
repnz
mov
jge
clc
lret
movsl
jbe
js
pop
xorl
xchg
je
dec
inc
shrb
addr16
mov
pop
cmp
fmul
pop
mov
mov
sbb
xor
add
fs
lods
rorl
add
jg
inc
repz
idivl
mov
fwait
hlt
popa
and
aad
enter
dec
sahf
push
in
fisubs
pop
mov
xchg
in
push
test
dec
or
inc
outsb
int3
push
fildl
sub
ljmp
aad
cmpl
push
insb
fstpl
in
mov
and
mov
loop
mov
pushl
addr16
ret
movsl
inc
pop
xchg
jg
stos
rep
pusha
lock
mov
clc
in
arpl
sti
cmpsb
stos
lcall
ja
push
cmp
add
jae
vcvtsi2sdl
push
jle
popa
out
push
xor
popf
mov
data16
sbb
test
in
jno
ss
test
inc
pop
and
push
mov
fstp
jle
xorl
jbe
xchg
nop
sub
pop
cmp
stos
mov
sub
or
mov
movsl
dec
test
xor
shll
pop
pop
xchg
push
inc
pop
mov
ss
xchg
ljmp
fcoms
decb
lods
loopne
mov
add
out
adcl
jno
test
push
xor
mov
fwait
xor
or
xorl
imul
sbb
out
add
insb
lcall
and
pop
xor
fistpll
stos
or
je
xlat
shll
ss
mov
ret
pop
sbb
fldcw
mov
mov
lea
adc
insb
inc
cmp
in
sub
dec
bound
adc
and
sub
sbb
decb
cmp
or
cltd
in
les
fdiv
xor
int3
push
mov
xchg
aad
ds
adc
dec
mov
imul
addr16
cmp
jge
fdiv
mov
adcb
fmuls
xchg
cmp
ljmp
and
sbb
or
mov
mov
or
cwtl
mov
fs
dec
jl
pushf
inc
frstor
xchg
sub
add
rorb
push
aas
test
popa
push
mov
add
test
xchg
mov
repz
push
xlat
cmp
sarl
je
notb
in
xchg
lret
lea
inc
test
stos
jno
sub
daa
popa
lea
mov
sbb
lods
pop
jbe
scas
movsl
outsb
out
popf
push
mov
jg
xchg
out
jb
mov
inc
fimuls
cmp
hlt
xor
es
jae
aad
dec
xchg
push
pop
pop
mov
pop
xorl
xlat
mov
cli
stc
mov
add
or
orb
call
mov
rol
push
inc
sub
push
add
mov
cmc
mov
mov
and
push
mov
fwait
ds
xorl
mov
aad
nop
cmc
loopne
nop
test
data16
mov
nop
cmpsb
sbb
cmpsb
inc
fstp
cmc
and
test
push
mov
pop
add
int
or
xor
shrw
cmc
adc
jno
loopne
repnz
mov
push
or
lret
and
pop
mov
xorb
inc
push
mov
lock
xor
push
push
push
hlt
pushf
inc
inc
sub
cltd
push
or
fldenv
shlb
stc
sbb
mov
cmpsb
mov
sub
loopne
xchg
pop
lcall
stos
xor
loope
pop
fwait
inc
and
jmp
cmc
js
mov
inc
push
mov
and
adc
lods
xlat
out
aaa
or
xchg
mov
xor
or
dec
mov
lds
fimuls
or
sbb
fiaddl
mov
adc
mov
rolb
lods
imul
jle
loope
test
xchg
jecxz
sub
xchg
lods
jmp
xchg
or
lock
push
lods
push
scas
cmp
mov
fadd
std
mov
or
sti
mov
mov
mov
test
in
popf
mov
loop
mov
test
adc
sub
cltd
out
repz
in
adc
decb
insl
cwtl
popa
arpl
cmpsl
fistpll
out
dec
pop
hlt
mov
pop
cli
call
imul
mov
orb
lock
ds
lret
das
daa
jmp
add
push
push
mov
push
rolb
adc
xchg
fisubs
sbb
out
or
mov
jae
fcomip
push
loope
enter
push
jmp
jne
rcrl
add
xchg
out
int3
jg
ret
and
xchg
push
cld
pop
test
and
mov
mov
mov
leave
cs
adc
mov
and
imul
xorl
xor
jo
in
loop
cmp
daa
push
cmp
push
lret
push
cmp
mov
jl
pop
jg
jns
lds
push
add
mov
inc
popl
insb
inc
mov
ds
mov
and
mov
icebp
add
sbb
mov
sub
push
pop
lcall
outsl
ret
dec
gs
mov
test
pop
cmp
sbb
xor
aam
inc
mov
jbe
out
and
cmp
mov
cwtl
inc
int3
shl
jle,pn
in
cmpsl
jb
or
dec
jae
into
in
lret
inc
jecxz
xor
js
sub
test
mov
and
shlb
xor
push
hlt
inc
in
out
stos
div
pop
xor
add
push
clc
sub
mov
insl
adc
or
jp
dec
add
test
shll
sub
cs
mov
int
fists
cmp
fcomip
mov
mov
cmp
and
cmp
push
lods
jp
xchg
rcll
fildll
js
popf
sub
pop
and
arpl
into
mov
jo
mov
gs
xor
pushl
xchg
pusha
lahf
int
ljmp
cmpl
mov
push
cmp
cwtl
and
lods
ret
les
nop
or
add
pop
loop
mov
xchg
mov
xchg
stos
out
in
jecxz
push
and
dec
cmp
sbb
ficomps
jl
jbe
sbb
dec
push
push
adc
lret
sbb
and
in
jg
outsl
in
adc
and
mov
and
add
sub
fsub
aam
jecxz
cwtl
psrad
mov
xor
imul
dec
fcmovnu
ret
enter
cli
xor
push
shr
loop
mov
sub
nop
and
es
mov
or
dec
repz
clc
sarl
mov
lods
das
sbb
push
movsl
ja
out
push
sub
mov
lods
push
mov
test
stos
mov
push
arpl
repnz
push
stos
cmp
mov
push
cmp
dec
or
int
cltd
add
addr16
push
jae
shlb
sarl
mov
test
ret
pop
movsb
xor
subl
add
adc
inc
mov
dec
pop
es
sahf
aaa
aam
in
fwait
das
popf
mov
jbe,pt
fnsave
stos
ds
xchg
femms
pop
ljmp
pop
push
test
repz
xchg
lea
lds
cwtl
shlb
les
mov
lahf
scas
mov
xor
dec
sbb
data16
cmpsb
xorb
stos
in
xchg
lret
pop
stos
sbb
xor
inc
pop
fs
jmp
pusha
sub
or
sub
mov
pop
cmp
xchg
je
jae
fidivs
loop
mov
arpl
xchg
xchg
mov
sbb
add
stos
push
sahf
pop
imul
mov
bound
jl
jle
and
movsb
dec
adc
mov
or
data16
ret
repnz
or
lahf
mov
int3
int
xor
test
aas
mov
pop
cmp
mov
rolb
nop
mov
cmpsb
icebp
inc
movsl
inc
pop
xabort
mov
popf
int3
push
inc
mov
sub
and
cltd
ds
push
xchg
das
sub
cltd
sbb
mov
sbb
jo
leave
push
out
mov
les
daa
cmp
mov
clc
and
adc
jbe
xchg
sbb
xchg
or
fldt
popa
mov
mov
les
je
scas
and
test
es
and
mov
faddl
imul
es
ja
mov
cltd
sahf
leavew
push
xchg
or
loope
add
jbe
mov
add
pop
daa
pop
pop
push
fwait
and
movsl
xchg
jecxz
cli
dec
test
mov
scas
pusha
sbb
in
mov
and
dec
test
inc
jb
lret
dec
in
push
sbb
sti
mov
push
push
push
out
jne
nop
arpl
push
fildl
into
cltd
and
scas
dec
mov
add
sub
ficomps
cmp
aam
lods
jae
clc
jge
sbb
cmc
cmc
push
xchg
dec
pop
cwtl
das
mov
loope
repz
mov
inc
sub
jl
stc
ffreep
cmp
test
aas
loope
sub
add
pop
rcrl
xchg
inc
outsl
jmp
mov
addr16
and
pop
dec
repz
dec
fwait
jnp
jae
sbb
sarb
nop
loop
jo
arpl
sahf
jg
or
mov
pcmpeqw
mov
iret
sbb
xchg
inc
jbe
insl
popf
mov
inc
movsb
xor
xor
jo
inc
fdivrs
ret
imul
out
ss
add
shl
stos
push
ds
xor
inc
xchg
push
in
pusha
push
sub
das
enter
sbb
inc
clc
scas
inc
es
jge
xor
hlt
pop
pop
idivl
int3
jo
sbbl
fucom
in
es
shlb
add
add
movsb
stc
into
mov
xchg
lods
cmpsb
stos
iret
dec
scas
and
jmp
ret
mov
pop
out
mov
rcrb
sarl
fistl
sub
and
xchg
jmp
arpl
dec
ret
insb
int3
sbb
clc
xchg
in
pushf
jmp
roll
lret
insl
bound
mov
inc
dec
xchg
mov
leave
out
dec
push
xchg
subb
jle
cmp
out
dec
mov
rol
mov
mov
rorb
push
dec
lock
push
enter
cmp
das
xchg
add
int
mov
dec
inc
mov
xchg
inc
adc
adc
sub
insb
rcrb
or
jmp
mov
adc
test
jno
out
and
or
lret
ret
inc
push
ret
xchg
cmp
dec
test
sbb
sbb
add
dec
out
cmpsl
sbb
or
sub
xor
push
js
mov
sub
mov
jmp
fnstsw
dec
fisubl
pusha
xor
iret
nop
cli
ret
cs
mov
mov
mov
mov
sbb
movsb
movsl
pusha
rep
xor
push
or
pop
mov
inc
jb
add
mov
sbb
decb
lret
jp
mov
js
cmp
lods
inc
ja
jnp
decl
push
dec
aam
imul
js
outsb
xor
cmp
les
xchg
repz
icebp
outsl
lock
mov
adc
insb
inc
pop
sub
loopne
fistps
stos
popa
sub
subb
and
out
push
jmp
insl
xlat
cmp
imul
and
xchg
cmp
iret
sub
push
and
mov
xchg
push
call
movl
lret
pop
lcall
rcl
ss
insb
xlat
roll
jbe
push
or
mov
mov
mov
and
push
dec
cli
out
mov
push
push
cmp
xchg
call
push
frstor
inc
lret
insb
xor
adc
ss
or
aad
push
fnstenv
movsl
insb
mov
loopne
nop
aas
xor
pop
andl
cmpsb
pushf
or
jbe
or
loope
fstl
mov
mov
adc
adc
jnp
cmp
inc
pop
out
sub
mov
add
mov
ss
cmp
mov
and
leave
call
mov
enter
cmp
mov
xor
mov
push
mull
iret
data16
push
bound
mov
or
jns
out
sbb
js
adc
cmc
jns
loop
jp
shlb
loopne
cmp
repz
ss
lea
add
and
in
add
sub
out
cltd
movsl
loope
push
jp
gs
dec
test
or
mov
mov
sbb
bound
loopne
push
dec
push
ss
out
pop
insb
push
les
and
push
push
or
les
mov
pusha
mov
popa
inc
sub
dec
adc
sbb
shrb
lret
fldl2t
xchg
ret
sahf
aam
lret
inc
add
clc
aad
stos
cmp
jecxz
in
ljmp
xchg
mov
jno
jnp
pop
jge
sbb
xchg
mov
sub
jl
mov
mov
inc
call
rol
or
je
inc
idivb
mov
shlb
cld
subl
fimuls
scas
stc
sbb
shlb
mov
cmp
js
les
jmp
push
push
fwait
xor
push
and
arpl
inc
scas
stc
xor
xor
inc
stos
mov
adc
push
and
sarb
xchg
adc
push
sahf
and
cmp
cmc
add
xchg
mov
add
xor
sub
jnp
fiadds
jle
aas
loop
add
cmp
xchg
mov
and
jno
daa
fidivrl
movsl
mov
cli
inc
scas
push
call
cld
fcoml
hlt
lret
or
pop
jl
mov
iret
icebp
leave
or
es
pop
jmp
push
mov
jl
mov
shlb
pop
repz
in
imul
outsl
movsl
jo
int
or
test
sbb
fadd
gs
pop
dec
push
mov
outsb
cmp
test
sub
je
mov
xchg
mov
add
es
jnp
inc
in
cs
and
or
imul
fwait
shll
cmp
add
leave
das
sbb
adc
mov
add
push
push
cmpsb
cmpsl
xor
mov
jnp
cmp
sub
dec
pop
icebp
jo
out
outsl
sub
in
popf
fcoms
mov
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
cmpl
sub
cmp
or
sbb
ljmp
xor
mov
jne
test
dec
movsl
pop
mov
lds
push
mov
or
add
popa
and
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
xor
leave
or
xchg
movsw
push
mov
lds
aad
in
cmc
push
add
xor
cmpsb
gs
jne
test
push
movsl
push
mov
add
push
cmc
push
add
xor
cmpsb
gs
jne
test
mov
leave
xor
dec
nop
fs
push
pop
divb
and
jno
inc
outsb
dec
lea
sub
je
xor
icebp
les
sahf
data16
lret
xor
mov
js
adc
cmp
lret
js
push
scas
sbb
stos
into
cmp
ja
sub
mov
cltd
movsl
xchg
jne
xchg
aaa
test
sub
popl
sbb
cmpsb
loopne
jne
or
fists
cmp
jmpw
cli
push
cmc
sbb
push
lret
mov
mov
xorl
insl
mov
xor
test
sub
mov
hlt
mov
pusha
ljmp
ret
cmpsl
sub
jecxz
data16
gs
inc
popf
inc
xchg
and
mov
notb
movb
cmpsb
gs
jne
test
movsw
push
mov
lds
aad
in
cmc
outsl
inc
cltd
popa
out
mov
daa
cmpsb
add
ja
test
lock
push
aad
xchg
inc
pusha
divb
inc
pop
mov
adc
sbb
push
les
cmpsl
aaa
mov
les
dec
mov
push
pusha
mov
pop
mov
gs
jne
test
movsw
push
mov
lds
aad
in
cmc
push
add
xor
cmpsb
gs
jne
test
movsw
push
mov
lds
aad
in
cmc
push
add
sbb
mov
addb
movsb
cmp
lds
das
fwait
and
stos
lods
nop
or
xor
jno
into
push
pop
mov
push
xchg
pop
ret
dec
popa
pusha
add
sub
cs
and
jle
insb
aad
cli
add
cmpl
ja
mov
aam
and
mov
cmpsl
mov
mov
adc
mov
mov
cwtl
dec
int3
mov
pop
enter
mov
stos
cmp
out
shl
jne
sub
mov
jmp
sub
sti
test
sti
fistpll
leave
xchg
leave
icebp
outsb
out
mov
jg
ret
test
sub
xchg
cs
push
out
sbb
jae
loopne
jmp
pushf
in
and
dec
mov
jl
mov
push
cmpl
add
jmp
mov
adcl
mov
shll
add
push
aas
aas
add
lods
fbld
pop
cmp
jl
inc
adc
mov
xor
stc
sbb
jmp
pop
jmp
sub
xor
ds
pop
sub
data16
lret
inc
add
or
mov
inc
imul
out
ret
jmp
or
adc
sbb
fwait
jne
or
mov
push
xor
into
ret
push
push
cwtl
cmpsl
or
lahf
or
iret
inc
not
sub
or
inc
lds
mov
push
push
fisubrl
cmp
stc
lret
inc
mov
aaa
push
js
adc
ret
cmp
js
push
repnz
jmp
incl
or
hlt
out
test
jle
sbb
gs
pop
fiadds
add
mov
lret
push
dec
xchg
xor
loope
adc
pushf
div
mov
inc
es
push
pop
cli
scas
xorl
mov
or
ret
dec
mov
mov
or
add
push
out
aas
add
ret
pop
xchg
or
mov
sub
js
nop
mov
negb
and
stos
or
aas
rclb
xor
movsb
mov
fdivl
xchg
scas
sub
in
jb
mov
sahf
imul
out
or
mov
js
pop
out
adc
std
in
out
xor
mov
jo
xchg
insb
shrl
fs
sbb
cmp
cmp
jns
jbe
xchg
push
jp
jecxz
add
adc
sub
adc
pop
hlt
aad
dec
add
pop
add
mov
pop
sbb
mov
mov
stc
xchg
push
sbb
jne
adc
mov
xor
arpl
sbbl
test
pushf
push
call
mov
push
mov
pop
xor
ret
jns
adc
push
rclb
adc
pop
push
ret
or
inc
pushf
filds
jg
les
cld
pusha
out
sti
cwtl
dec
mov
mov
outsl
mov
jbe
repnz
and
sbbl
push
jle
push
mov
push
in
cld
jnp
roll
stos
mov
sbb
adc
add
push
mov
jp
jp
xchg
sti
pop
mov
inc
sub
sbb
push
out
or
sarl
enter
mov
jns
pop
cmp
xlat
neg
fidivrl
rol
lods
dec
xor
mov
xlat
in
adc
cmpsb
and
jecxz
fs
popf
jb
xor
push
sbb
in
push
stc
mov
repnz
jmp
cltd
dec
iret
aas
xchg
and
aam
push
xchg
sub
outsl
sahf
rcl
cmp
mov
inc
sbb
stos
lcall
jne
stos
sti
rep
sbb
lahf
xor
sahf
push
roll
stos
test
sbb
push
xor
push
xchg
dec
xchg
call
mov
mov
insl
mov
mov
mov
dec
inc
mov
loop
nop
dec
fsubrs
xlat
xchg
lods
frstor
dec
icebp
sbb
shll
testb
cmc
mov
push
adc
insb
pop
fsubrl
movsl
jg
sti
mov
push
add
push
and
sub
mov
mov
add
lea
dec
jmp
inc
pop
xor
or
lods
xchg
cltd
ror
mov
jl
pop
sub
push
dec
sbb
push
in
ret
xchg
push
loope
cs
test
sar
add
test
repz
jmp
cli
or
push
iret
push
sub
lret
mov
sbb
int
mov
inc
sbb
jecxz
mov
repz
das
insl
aad
jl
sub
or
pusha
and
cltd
in
inc
movsl
fwait
sbb
push
int3
cmp
jbe
sbb
test
cli
push
in
mov
pop
stos
inc
fsubs
pop
and
xchg
xor
sbb
push
test
stc
and
or
add
pop
imul
cs
shlb
mov
sub
repnz
addr16
mov
shll
pop
leave
imul
push
mov
mov
add
xchg
add
xchg
rolb
rolb
xchg
mov
loop
dec
test
enter
fsubrp
mov
add
push
mov
ja
xchg
test
or
shll
adc
shlb
jg
js
xchg
mov
lret
push
cmp
ss
sti
mov
pop
add
enter
clc
mov
adc
jl
ljmp
in
dec
bound
call
dec
lea
and
cmpsb
mov
dec
ljmp
addr16
push
jmp
imul
jb
mov
jmp
sbb
push
nop
mov
out
inc
sub
test
lock
imul
mov
push
lcall
xchg
int
mov
push
push
mov
mov
jnp
cmp
jp
icebp
adcl
xchg
ljmp
repnz
pop
or
bound
stos
push
mov
and
jp
adc
negl
imul
clc
mov
nop
sbb
inc
or
inc
cmp
and
jno
sbb
mov
test
jo
std
mov
lahf
out
dec
xor
dec
movsb
sub
cmc
add
loopne
ljmp
cmc
inc
push
xor
data16
flds
fsincos
mov
adc
arpl
lds
adc
fwait
inc
jmp
ss
sub
sahf
les
outsb
xor
mov
call
pop
imul
in
xchg
push
fadd
adc
in
clc
ja
mov
mov
mov
add
inc
add
fstl
sbb
pop
mov
xor
and
pop
push
in
sub
std
pop
arpl
stc
xchg
mov
and
add
xchg
cli
mov
push
ja,pt
loope
xor
lods
and
jno
mov
mov
push
inc
outsl
in
cltd
mov
test
sub
xchg
push
sub
bnd
jecxz
fdivrl
push
out
pop
lock
dec
adc
mov
lcall
push
sub
inc
fcomps
imul
fldl
jl
divl
jne
orl
int3
mov
jp
int3
decl
mov
xor
fisttpll
mov
dec
jp
sub
add
lcall
push
jle
jmp
xorl
in
sbb
movsb
push
mov
lahf
add
das
cs
xor
test
dec
lods
push
mov
push
mov
in
imul
pop
pop
int3
jmp
pop
std
in
js
xchg
aam
loopne
lds
fsubl
fisttpl
fdivl
mov
fdivs
cmp
ret
cmp
adc
arpl
push
fwait
xor
clc
insl
jne
insl
push
inc
in
cmp
andb
xchg
popf
inc
popf
dec
jb
sbb
out
fnstsw
xchg
addr16
rclb
xchg
or
add
cld
lret
mov
aaa
lock
ja
ja
and
je
repnz
ret
add
repnz
mov
push
push
rcll
jbe
orl
push
dec
push
mov
jbe
cli
pop
pop
or
ret
popf
inc
popa
jne
pushf
outsb
call
cmovno
out
and
sub
daa
out
clc
cmp
adc
sar
xchg
jmp
add
add
mov
jle
test
mov
xor
xor
and
scas
push
and
mov
sub
sbb
rcr
cmc
or
pop
mov
mov
mov
adc
sbb
out
cli
and
ja
push
dec
xor
testb
sbb
mov
dec
arpl
out
sbb
push
pop
jmp
mov
loop
mov
push
icebp
mov
movsl
inc
jp
jecxz
popf
xchg
and
sbb
movsb
insb
adc
mov
push
cmc
sub
test
jge
xchg
and
pushf
cmp
lret
xchg
divb
mov
cmp
mov
or
xor
jbe
push
cs
dec
or
and
imul
dec
pop
sub
ljmp
dec
push
scas
pushf
loope
mov
out
fcmovnb
jl
push
jns
int
fldl
ss
xchg
popa
cltd
into
xchg
sbb
jg
lds
test
xlat
cmp
xor
outsl
sub
dec
inc
pop
push
scas
inc
jge
hlt
mov
imul
roll
or
pushf
inc
push
xchg
push
mov
cmpsl
test
push
xchg
and
sarb
sbb
add
fmull
xchg
shll
in
mov
lret
adc
mov
adc
mov
push
leave
xor
inc
sbb
dec
loop
or
jo
inc
pop
pavgw
dec
mov
push
cwtl
sbb
cmp
out
cmpsl
push
stos
or
xchg
scas
jmp
sbb
xchg
fmuls
pop
inc
subb
push
scas
clc
test
test
push
ds
in
xor
dec
or
icebp
ja
cmp
jo
sbb
mov
stos
push
out
or
push
push
out
dec
lds
sub
mov
jmp
shll
cmc
inc
jbe
repz
and
mov
fwait
xor
add
mov
lahf
movb
lret
in
fnstenv
shrl
adc
mov
push
mov
mov
int3
arpl
call
test
dec
xchg
test
sub
mov
xchg
ficoms
in
mov
add
push
popf
into
sti
mov
pop
stc
and
xor
insb
xchg
dec
call
and
mov
movnti
mov
jbe
clc
inc
sbb
lods
inc
ret
push
iret
pop
inc
cmpl
mov
negb
or
int3
push
or
mov
xchg
add
jle
mov
aad
mov
ds
pop
or
aam
rcrl
sahf
push
popf
dec
out
bound
jecxz
push
stc
sub
inc
fldt
filds
dec
popf
std
dec
mov
xchg
stc
cmp
js
or
aaa
pop
xchg
popa
and
push
lret
leave
mov
sti
push
adc
mov
add
mov
push
sub
cwtl
push
mov
in
cmp
inc
xchg
in
out
cmp
sti
jmp
dec
sub
out
xor
cmp
cmpsb
fdivrs
and
dec
dec
cmpsl
sbb
dec
idivb
and
adc
fs
arpl
sub
std
ds
cvttps2pi
nop
insl
inc
adc
mov
mov
leave
fld
mov
adc
mov
in
and
push
outsb
xor
ds
nop
adc
mov
jbe
or
fists
cmp
sbb
push
xchg
fucomp
mov
xchg
movsb
div
out
inc
popf
cmp
aaa
inc
mov
inc
dec
repnz
mov
xchg
sbb
loope
jmp
xchg
xlat
divl
enter
mov
sahf
xchg
icebp
dec
jle
shll
cmp
jb
pop
add
mov
inc
ret
dec
call
enter
adc
cs
adc
lret
sahf
sti
lret
cmpsb
lods
sub
pop
xlat
pop
push
popa
call
mov
rorl
xor
push
push
mov
mov
pop
cltd
dec
mov
jle
add
xchg
ret
push
js
xchg
stos
lods
cmp
inc
sbb
bound
cli
fs
hlt
mulb
ss
mov
pushf
pop
xor
hlt
or
mov
and
pop
cs
mov
sti
arpl
inc
imul
out
sbb
leave
mov
jo
mov
incl
pusha
jp
xor
xchg
mov
adc
mov
es
mov
in
xor
xor
imul
ljmp
add
dec
jl
cmc
and
jp
ficoml
or
cmp
jns
mov
out
sub
sbb
inc
mov
movsl
add
lcall
test
stc
sub
aas
push
in
or
add
out
inc
inc
sahf
xchg
adc
test
lods
sbb
mov
lcall
int3
lret
inc
jmp
stos
das
xchg
xor
mov
test
pop
pop
sbb
sbb
popa
cmp
mov
mov
xor
hlt
and
scas
into
fwait
xor
lods
adc
xor
push
fsubs
xor
jbe
sub
cmp
fs
sbb
shll
add
je
data16
lret
cmpl
inc
movsl
pop
jae
mov
mov
and
bound
xchg
jl
mov
lods
aas
inc
push
lds
call
aam
repz
mov
leave
xchg
xchg
fnstenv
movl
pop
cltd
repz
mov
mov
loop
notl
cmp
xor
push
std
out
pop
inc
mov
fcomps
pop
enter
outsl
xor
jp
cmc
lods
enter
shll
pop
mov
test
xchg
dec
dec
mov
sbb
push
pop
cwtl
push
pop
mov
in
dec
fcoml
aam
imul
dec
dec
cmp
mov
ljmp
in
fxch
mov
adc
outsl
adc
mov
pop
nop
mov
popl
cmp
insl
enter
inc
rcrb
int3
call
outsb
mov
pop
stos
pop
sbb
push
adc
movsl
xchg
cmp
dec
add
loope
sarb
cli
stos
inc
inc
pop
sub
xor
fcompl
dec
fidivl
test
aam
sub
sbb
cmp
bound
sbbl
fucomi
push
and
push
ds
jmp
mov
nop
inc
pop
add
mov
loopne
shrl
lods
jle
pop
jnp
mov
lods
jecxz
dec
clc
sti
adc
sti
adc
jne
adc
mov
pop
rolb
jns
insl
sub
cmp
push
loopne
mov
lock
dec
call
shrb
push
fsubs
mov
jae
inc
lret
cs
lds
pusha
adc
in
add
sub
and
and
cmp
inc
lea
inc
cwtl
call
in
jp
mov
jle
mov
push
pop
cmpsl
jge
jmp
dec
jno
ja
lock
jecxz
xchg
movsb
push
dec
shrb
xor
pop
pop
add
mov
inc
xchg
xlat
inc
ja
lods
cmpsb
out
jge
pop
cmp
int3
inc
outsb
push
ljmp
outsb
xchg
leave
mov
out
mov
cmp
rcr
out
mov
and
fildll
jns
daa
fstl
int3
xchg
push
jne
dec
and
mov
lds
xchg
jecxz
adc
xor
ficoms
bound
sbb
nop
inc
aad
fmull
lods
xor
in
icebp
lret
pop
sahf
test
fsubrs
sub
mov
mov
testl
xor
jg
and
or
sahf
jle
cmp
sub
add
das
in
dec
shlb
loopne
cltd
popf
cs
dec
pop
dec
int
mov
jne
sub
mov
xchg
arpl
popa
jo
pop
mov
aam
cmc
outsl
stc
scas
imul
jne
in
jle
adc
mov
cmpl
xor
int
leave
pop
pusha
or
push
xor
in
xchg
rolb
xor
scas
mov
mov
cmp
outsl
in
xor
scas
lds
adc
insl
push
dec
pop
push
inc
cltd
and
fcomip
pop
sbb
iret
push
icebp
enter
and
xchg
and
gs
mov
sbb
lock
loope
int
insb
fwait
insl
mov
mov
mov
inc
stos
lahf
pop
aad
ljmp
je
push
cmp
cs
xor
add
icebp
mov
inc
cmp
dec
mov
ja
les
pop
sbb
xchg
or
or
mov
sbb
mov
sub
mov
sysenter
add
enter
fcompl
or
adc
or
nop
insb
rcl
pop
lock
es
mov
inc
and
push
jns
sbb
mov
into
and
adc
imul
push
pop
das
mov
mov
lret
fnsave
loope
jp
adc
ja
cmp
stos
add
xchg
xlat
and
arpl
adc
sbb
push
jb
or
loope
push
mov
sub
inc
jns
stos
jmp
loop
negb
inc
sbb
jne
clc
mov
add
xor
movsl
lret
mov
pop
sbbb
dec
mov
icebp
pop
inc
aad
mov
or
dec
and
clc
and
mov
aam
mov
sbb
sbb
loope
imul
cmp
mov
fistpl
loope
cmc
xchg
fdiv
sbb
lahf
pop
add
mov
jbe
cmpsb
pop
inc
sti
mov
movsb
cld
jbe
mov
call
pop
fnstsw
cwtl
xchg
jp
mov
lahf
xchg
mov
add
mov
insl
push
fwait
cmp
mov
jno
jle
in
pop
or
sub
xchg
or
inc
cmp
xor
das
mov
cli
je
fcomip
and
mov
rcrb
gs
imull
push
test
push
pop
or
ds
jecxz
imulb
test
cmp
push
aam
pop
int
jge
dec
adc
and
xor
ficomps
cmp
cmp
fwait
xlat
repnz
lock
pop
cmp
ret
push
mov
scas
in
insb
aas
out
les
or
adc
and
inc
lahf
mov
negb
pop
lock
push
pop
movsl
loope
mov
inc
jle
adcl
das
hlt
negl
push
sub
sbb
adc
mov
shll
jb
adc
lods
aam
push
adc
inc
mov
scas
dec
cmc
push
or
insb
mov
pop
sbb
shr
imul
mov
mov
inc
scas
je
xchg
jecxz
push
jns
add
xor
test
pop
or
add
jne
push
leave
stc
aad
subb
repnz
pop
push
out
jae
aad
sub
pop
dec
pop
cmp
daa
cmc
cmpl
xchg
cmp
xor
or
jle
stos
in
fs
ret
xor
hlt
pop
and
loopne
imul
inc
lock
jbe
jl
fwait
shr
mov
dec
dec
jb
adc
pop
mov
loopne
movsb
xchg
fs
jo
inc
pop
pop
jp
push
adc
xor
and
in
push
jg
fimuls
sbb
adc
fistl
pop
mov
and
lock
pop
arpl
imul
inc
xchg
lcall
cmp
mov
std
dec
std
inc
jle
xchg
xchg
imul
push
inc
add
pop
adcb
clc
jbe
fidivs
sbb
sbb
aam
push
clc
sub
stos
xor
mov
adc
and
jne
repz
pop
shll
dec
movsl
pop
test
mov
cmp
and
movsl
sub
mov
sub
dec
push
or
push
fidivrs
xchg
push
lods
mov
mov
imul
mov
rcl
xchg
cld
adc
adc
mov
pop
mov
arpl
ss
jl
push
push
mov
adc
fstpl
adc
mov
cld
push
mov
insb
dec
inc
push
or
sbb
gs
loopne
cli
cmp
dec
ljmp
hlt
pop
mov
mov
lcall
incl
sub
adc
xchg
addr16
dec
ret
and
push
add
push
inc
in
mov
repnz
push
fwait
mov
mov
lret
push
negl
xor
cmpsb
gs
jne
test
movsw
push
mov
lds
aad
in
cmc
push
add
xor
cmpsb
gs
jne
test
movsw
push
mov
lds
aad
in
cmc
push
add
push
xor
es
cmc
xchg
push
mov
lds
aad
in
cmc
push
add
xor
cmpsb
gs
jne
test
int3
orps
fsts
jle
outsb
mov
mov
inc
xchg
push
inc
lret
add
xor
and
push
mov
arpl
mov
mov
ds
jecxz
inc
repnz
sbb
int3
daa
lods
jae
arpl
xor
daa
mov
filds
sbb
outsl
int
cmpsl
inc
mov
add
adc
shlb
mov
sub
xchg
idiv
loopne
and
mov
mov
and
lahf
jle
in
push
sub
orl
fsub
addr16
xchg
add
adc
mov
xor
lock
out
jbe
loop
add
pop
mov
add
push
cld
out
int3
mov
xor
cmp
and
xchg
into
mov
cmp
repnz
mov
push
push
adc
and
inc
fiadds
pushf
sahf
push
sti
jle
dec
mov
inc
pop
mov
stos
rolw
push
adc
and
mov
push
or
addl
mov
sbb
xchg
sti
test
and
xor
xchg
inc
dec
ss
jae
mov
inc
iret
dec
sarl
xchg
repz
pop
pop
loope
xchg
imul
cmp
mov
test
loope
cmc
sbb
cmp
sub
jb
imul
out
arpl
inc
stos
cmp
sub
loop
pop
or
hlt
sub
mov
cmp
mov
push
mov
es
push
stc
and
loope
mov
ret
cmp
or
push
jecxz
adc
add
xor
and
push
mov
arpl
mov
mov
cs
jecxz
adc
add
xor
and
push
mov
arpl
sbb
cld
dec
lahf
mov
mov
rolb
adc
cld
cltd
dec
shrb
rcl
push
push
mov
sti
push
mov
std
or
dec
mov
imul
ficoml
jp
inc
jg
fmuls
popa
int
mov
fs
inc
in
enter
aam
int3
nop
ret
mov
cmp
adc
mov
cld
dec
and
lock
xlat
js
sub
mov
ljmp
incl
stos
movq
pop
jp
fstl
mov
xchg
push
mov
pop
sarl
jo
xorb
xlat
lret
sub
stos
pop
ljmp
pop
jg
xchg
add
aad
fiaddl
ds
repnz
imul
fwait
jl
inc
adc
cmp
fwait
int3
insl
pop
sub
ds
gs
out
push
sub
adc
add
test
loope
inc
dec
das
dec
arpl
neg
scas
addb
sbb
inc
sbb
aas
xor
mov
je
xor
xchg
ss
nop
jg
jle
mov
dec
lcall
jae
xor
cmpsb
push
sbb
sbb
icebp
jl
sbb
insl
fcmovnbe
mov
iret
aas
ja
xchg
fsubl
cmp
sbb
shll
call
xchg
lods
shll
pop
cltd
or
addr16
push
repz
sub
in
cmpsl
repz
lea
ss
jns
psadbw
testb
mov
mov
mov
sub
std
addr16
xchg
aas
sbb
or
cs
mov
mov
xchg
adc
add
stos
or
inc
add
icebp
push
out
push
pop
lods
add
mov
sub
or
fnstsw
xchg
jno
aad
fidivrl
and
es
flds
bound
push
mov
loop
push
add
sbb
movsl
adc
in
leave
int3
dec
mov
hlt
jge
adc
add
xor
xchg
lcall
ret
stc
adc
or
push
test
mov
sbb
jge
add
pop
sbb
ret
out
or
rcrb
push
push
aam
jg
mov
mov
adc
lret
sbb
mov
je
cmp
mov
cmp
mov
dec
gs
out
fs
mov
fwait
outsb
push
adc
subb
je
inc
dec
cmp
dec
pop
push
movsb
lock
lods
repz
lods
movsl
andb
pop
pop
xorb
or
mov
mov
loop
int
push
mov
in
pop
xor
dec
andb
sbb
daa
dec
push
xchg
push
cltd
mov
dec
dec
mov
lret
pop
lds
fstpt
lret
test
cli
inc
xchg
add
fdivrs
mov
stos
mov
xlat
or
add
mov
mov
cld
pop
lcall
out
xchg
mov
popf
xchg
ss
es
cmp
ret
push
and
dec
jecxz
ret
das
jnp
xchg
and
push
repz
test
bound
test
das
jl
inc
pop
push
repnz
add
mov
popa
adc
mov
adc
fldenv
daa
xchg
in
or
int
mov
cmp
shrb
pop
cld
repz
pop
sbb
sbb
sbb
es
dec
mov
sarl
pusha
fildl
daa
xchg
orl
aaa
sbb
dec
push
out
icebp
ljmp
fdivl
sahf
mov
loop
fsubs
mov
in
xchg
add
inc
cmp
cmp
adc
xchg
push
into
lcall
popa
push
popa
cmp
add
inc
mov
cmpsb
push
test
addl
xor
pushf
xor
pop
mov
int3
mov
arpl
and
ret
xchg
movsb
insb
push
push
sbb
dec
push
xor
and
enter
cmp
push
addr16
into
jo
xchg
or
ret
cmp
mov
push
scas
ljmp
cmp
jae
and
aad
adc
and
pop
cs
test
mov
inc
add
aaa
sbb
out
out
pop
sbb
popa
sar
jl
adc
mov
cmc
cmp
out
in
js
push
mov
loop
aaa
dec
sbb
int
and
dec
pop
or
jb
popf
xchg
jns
dec
test
dec
xor
lods
add
sti
inc
sahf
and
fidivs
fdivr
mov
stc
fadds
mov
inc
jl
sbb
ds
scas
and
pop
ret
lcall
mov
add
xchg
arpl
sahf
fwait
pop
cmp
jp
fisttps
and
cld
mov
pop
add
inc
adc
imul
shll
cmpsl
adc
js
mov
scas
fwait
push
int
jnp
xor
and
shll
loopne
jae
sarb
lds
pushf
push
bound
into
rcl
stc
or
sbb
mov
loop
or
negl
iret
jne
mov
clc
addr16
sub
push
jo
adc
mov
imul
pop
mov
imul
mov
adcb
jbe
js
jo
xlat
jo
add
frstor
mov
bound
fdivrl
pop
lret
push
mov
xor
aas
mov
data16
add
dec
stc
push
mov
xor
adc
bound
inc
pop
cltd
shrb
outsl
shlb
xchg
xchg
mov
jg,pn
ret
sub
mov
js
movsb
jg
out
push
test
out
icebp
inc
sarb
and
sub
push
adc
arpl
call
adc
dec
xchg
cmp
cmp
xchg
pusha
dec
xchg
and
movsl
mov
enter
dec
fwait
cmc
inc
jl
mov
xor
adc
lahf
jg
and
pop
out
push
push
xchg
fsubrs
fistpl
xchg
loopne
pop
ret
xorl
cmp
push
cs
push
scas
dec
add
sbb
fstl
sarb
mov
or
jmp
fmul
inc
xor
xor
mov
lret
js
ror
lret
add
mov
addb
jecxz
cmpsl
hlt
adc
xor
mov
push
repz
rorb
jnp
cmp
bound
popf
loop
aaa
lds
outsl
jns
xchg
mov
out
push
jne
jno
enter
dec
fmull
cmpsl
aas
cld
adc
cmp
clc
sbb
mov
dec
popa
xor
lcall
testl
lea
es
scas
mov
popa
jne
push
int3
jle
push
xlat
rcrb
enter
sub
clc
cwtl
mov
test
rorb
lock
ljmp
jno
and
sti
sbb
out
js
push
jnp
jnp
dec
iret
jb
lret
sub
in
and
int3
call
jecxz
test
inc
mov
mov
fists
dec
out
or
popa
sub
dec
ds
scas
add
add
mov
inc
fs
jmp
jns
jae
push
pusha
or
jmp
loop
loopne
mov
fmull
and
xchg
cmp
jno
xor
xor
rol
dec
mov
pop
pop
pop
jo
test
fdivr
in
mov
out
lods
lods
insl
or
dec
cli
or
sahf
lcall
test
in
and
lock
inc
repz
jno
jmp
js
mov
test
adc
jo
cmpl
fs
scas
xchg
xchg
sbb
lret
pop
jno
mov
sub
call
into
or
loope
xor
xchg
cmp
mov
push
dec
fsubrp
lcall
xchg
es
mov
cli
sub
fsts
daa
mov
cltd
jnp
jae
int3
pop
push
inc
or
adcb
fdivrp
repz
mov
gs
or
bswap
push
add
insl
and
aas
xchg
xchg
dec
push
scas
adc
call
pop
adcb
cltd
shlb
or
ficoms
and
sbb
adc
sub
xchg
adc
pop
adc
hlt
dec
imul
sub
sbb
or
inc
imul
xchg
sub
std
cmc
jbe
push
add
xor
enter
push
loope
push
push
inc
outsl
sub
jbe
adc
cmp
pop
shlb
jbe
dec
out
sbb
hlt
es
sub
out
jns
jae
push
mov
scas
jle
sub
or
cmp
xchg
lret
pusha
lret
lret
mov
xchg
je
dec
sbb
out
xchg
adc
cwtl
mov
daa
icebp
mov
aam
add
outsl
push
push
mov
mov
sub
imul
out
mov
cmp
pop
divb
ds
adc
jnp
xlat
addr16
test
xchg
leave
sub
arpl
cmpsb
and
mov
add
loopne
iret
sub
add
cli
lods
movsl
jbe
test
cmp
push
sub
int
or
loope
or
cwtl
jmp
addr16
test
dec
sbb
cmp
leave
xchg
movsl
hlt
loope
pop
popa
sbb
js
inc
movsl
add
push
pop
sti
sub
cs
jl
xchg
dec
shld
outsb
negb
jp
or
jmp
in
dec
mov
or
int
sti
add
sbb
in
sub
ja
xor
gs
push
cmc
push
adc
lods
js
ds
mov
xor
push
fcmovu
xchg
scas
int
xlat
jo
ret
push
fdivp
mov
insb
out
ljmp
pop
jmp
sub
dec
push
or
jbe
jge
jbe
adc
fs
sbb
pusha
push
shrb
and
test
ljmp
xchg
cmp
mov
mov
sti
out
mov
rorb
jmp
mov
cmp
cmp
cwtl
ja
js
arpl
mov
cmp
jge
popf
ss
ds
jp
or
pushf
rorl
cmc
js
sub
movsb
aaa
sbb
bound
push
xlat
loop
cwtl
cmp
in
loop
pop
lea
push
pop
push
jmp
loope
mov
xchg
cmc
leave
andl
adc
insl
add
ljmp
imul
je
repnz
xchg
popa
mov
popa
ret
mov
push
mov
pop
jno
adc
and
ud2
xchg
decl
cmp
pusha
sbb
stc
lahf
mov
in
jbe
cmp
imul
dec
mov
out
pop
sbb
add
pop
adc
and
jecxz
dec
ss
mov
cmp
cwtl
rcll
mov
jg
mov
sbb
dec
stc
xor
test
icebp
popl
ss
and
push
pushf
in
les
sub
jecxz
test
mov
stc
xor
movsb
filds
outsb
inc
xchg
mov
lea
cs
push
filds
inc
aas
scas
outsb
out
imul
pushf
sub
add
pop
pop
xchg
push
cltd
iret
jbe
test
test
cs
xor
repnz
cmp
mov
movsb
jl
push
mov
roll
cmc
mov
mov
sbb
push
inc
icebp
push
fmuls
add
push
sti
popf
sbb
jb
inc
dec
xor
mov
loop
iret
and
aaa
mov
in
pop
subl
cmp
mov
lock
inc
lods
es
dec
jge
xchg
add
sbbb
daa
cld
outsb
icebp
cli
mov
cmpsl
fs
pop
push
xchg
test
test
dec
and
mov
adc
sub
mov
jo
mov
test
or
mov
mov
lahf
mov
leave
addr16
sbb
scas
push
rorb
mov
push
jae
ret
das
dec
lock
xchg
lock
in
inc
pop
scas
xchg
sbb
jle
cwtl
inc
mov
inc
dec
scas
stc
jno
mov
sbbb
jg
xchg
mov
and
ds
pop
js
push
inc
fiaddl
mov
std
mov
pop
cmp
stos
call
sbb
cmp
int3
cmp
test
sub
jb
inc
sbb
sbb
mov
fmuls
push
xchg
adc
sti
lret
adc
mov
fmuls
xor
add
dec
and
outsb
cmpsl
jl
xchg
pop
add
testb
inc
mov
jno
cmp
push
sbbl
xlat
les
adc
and
icebp
adc
fbstp
je
fcomps
push
push
cmp
out
xchg
addr16
dec
jno
xor
or
in
test
out
mov
xchg
dec
xchg
cltd
in
dec
and
fcompl
int3
mov
notb
dec
add
in
mov
add
repz
fwait
shll
lock
in
xor
add
mov
mov
andb
mov
cmp
inc
jg
in
add
outsl
test
xchg
ficoms
pop
sub
outsl
fiadds
test
outsb
test
push
scas
fsubrl
fimuls
mov
out
xchg
lahf
dec
and
stc
aad
aaa
in
sbb
xlat
jg
pusha
mov
cwtl
icebp
lret
mov
and
call
testb
mov
repnz
je
xor
jmp
sbb
daa
ljmp
mov
mov
lock
jle
sbb
and
fadds
xor
mov
pop
sbb
mov
adc
test
push
lock
push
ret
fcoml
mov
mov
imul
cmp
sbb
push
xchg
mov
jle
xchg
es
dec
push
or
addl
push
xor
xchg
aad
mov
inc
decb
testl
add
add
sub
mov
gs
out
mov
out
adcl
ss
jle
jb
xor
scas
xor
aas
rorl
mov
imul
in
in
xor
push
rclb
scas
mov
mov
fnstenv
in
outsb
xchg
je
xchg
test
adc
xor
inc
popf
push
lods
mov
sbb
mov
sbb
pop
test
cmpl
fmuls
sub
inc
cmp
inc
lcall
inc
lahf
add
leave
jle
sbb
pop
loopne
or
ret
lret
addb
pop
int3
cmp
adc
das
mov
pop
inc
shrb
mov
pusha
popf
dec
popa
mov
jg
pop
add
nop
jbe
mov
pusha
push
push
out
mov
out
aas
fwait
sub
rorb
jecxz
aam
loope
dec
jp
jge
clc
outsl
pop
xor
adc
std
xchg
mov
jae
insb
ds
add
aas
pop
leave
lock
mov
dec
shl
fldl
outsb
cld
das
jae
sub
push
pusha
ds
adc
mov
das
aam
sub
cmp
and
jbe
or
test
xchg
jge
loop
pop
add
adc
jmp
bound
sbb
idiv
inc
sub
lret
xlat
pause
stos
pop
ror
adc
sbb
sub
add
bound
addr16
jle
xchg
fnstsw
push
dec
mov
dec
loope
push
ret
jo
into
inc
or
jecxz
mov
outsb
sbb
sbb
or
cmp
jb
addl
adc
test
out
xor
loop
jb
icebp
xchg
mov
fucomip
jl
in
sbb
out
pop
aam
mov
jmp
pop
insl
out
dec
inc
xchg
mov
lea
arpl
cli
std
xchg
dec
xchg
in
and
xchg
mov
ljmp
push
sub
mov
mov
pextrw
pop
aas
mov
fldl
test
popf
fs
pop
cmp
lods
shlb
arpl
adc
dec
sbbb
pop
cld
hlt
pop
fsubrl
nop
les
insl
adc
aaa
out
shll
insb
mov
xchg
dec
adc
push
mov
jecxz
mov
ret
cwtl
fidivl
mov
cwtl
xchg
and
xchg
out
scas
imul
lret
fpatan
outsb
jmp
je
jmp
and
ja
dec
and
xor
or
icebp
mov
jno
mov
pushf
push
sarb
sub
orb
jb
test
cvttps2pi
aam
xchg
pop
cmp
push
int
movsl
out
fisttpll
sar
add
xor
dec
cmpsl
push
fs
cmp
sub
xchg
sahf
add
or
xchg
loopne
jae
jne
imul
mov
inc
sbb
jmp
in
jbe
sbb
into
fdivrs
and
nop
jae
sub
into
fs
shll
cmp
and
mov
in
xchg
pop
mov
fsts
rorb
push
out
sbb
cmp
shll
xchg
arpl
adc
cli
dec
xor
outsl
sahf
pop
mov
or
xchg
stc
fsub
sbb
mov
gs
mov
dec
cmpsl
jl
push
xchg
jl
push
popf
call
push
fnstsw
pop
lahf
add
and
sbb
ss
shll
dec
push
cmc
xor
jbe
pusha
xchg
aam
xchg
in
icebp
movsb
rcl
icebp
mov
out
lods
shlb
outsl
and
movsl
outsb
inc
ljmp
sub
cmp
xchg
push
pop
xor
sub
lea
mov
jle
cmc
negl
mov
lods
fdivs
imul
call
xor
adc
in
fwait
xchg
push
mov
repnz
lods
mov
rol
cwtl
adc
movsb
inc
xor
daa
lods
loopne
pop
jle
gs
mov
adc
cmp
addr16
fnstcw
pop
add
add
and
mov
mov
out
cwtl
in
mov
sub
and
es
cmp
popa
xor
mov
sti
enter
mov
cmp
lods
dec
lahf
pop
and
movsb
int3
test
sbb
dec
fnstsw
or
inc
ret
dec
jnp
mov
pop
enter
nop
aad
or
jmp
xor
aad
add
cmp
aaa
ret
pop
jl
cmp
sub
cmp
sub
enter
movsl
mov
push
add
mov
mov
mov
lock
jno
scas
mov
or
addr16
sbb
mov
stc
mov
pop
ret
push
lahf
inc
inc
xchg
sub
adc
sti
lahf
sub
or
inc
push
mov
arpl
adc
int3
pop
imul
or
pop
insl
sbb
ja
lods
das
jle
aad
ret
pop
pop
js,pt
dec
pop
sub
mov
cmpsb
xor
out
mov
cmpsb
insl
push
aaa
std
lret
cmpsl
xchg
or
jnp
add
xchg
mov
xor
daa
arpl
xchg
xchg
xor
fs
add
in
mov
inc
lods
cltd
cmp
jecxz
jns
das
gs
sbb
add
iret
loopne
out
call
dec
or
enter
les
lods
sub
int3
lods
in
pop
iret
imul
fdivp
ss
aad
inc
aaa
test
mov
add
xchg
cmp
mov
cmp
pop
dec
mov
adc
mov
in
mov
loop
xor
out
sahf
loop
jns
fadds
movsb
sub
mov
jle
jb
xor
jnp
xchg
ret
mov
sub
inc
in
and
push
int
dec
cltd
xor
fsts
jns
enter
sbb
test
ljmp
add
sbb
and
mov
fdiv
in
pop
das
mov
mov
and
dec
ret
rorl
test
push
push
pop
sub
jo
and
mov
dec
bound
testb
sub
jp
fcompl
ret
push
loopne
test
and
icebp
cmp
or
rcr
sbb
insl
test
sbb
lea
inc
push
mov
jl
lods
mov
pop
pop
ss
in
jge
daa
xor
cmc
into
mov
mov
insb
test
xchg
ficompl
scas
and
rcr
lahf
inc
ljmp
lods
outsl
sbb
jmp
sbb
add
pop
sub
jp
iret
aad
roll
adc
pop
cmp
inc
fidivs
adc
jo
in
fbld
dec
and
mov
cmp
movsl
sub
pop
pop
mov
loop
imul
adc
imul
adc
stos
icebp
fs
lret
mov
xchg
shlb
mov
insb
loopne
mov
or
arpl
fstl
or
scas
add
pop
jb
jbe
sbb
rcrl
int
shrl
arpl
jle
rcr
jbe
sti
mov
outsb
jbe
fcompl
test
mov
cwtl
imul
aam
mov
dec
mov
pop
dec
in
xor
pop
stos
or
mov
mov
or
cmc
out
out
mov
lods
ret
mov
mov
cs
jecxz
adc
add
xor
and
push
mov
arpl
mov
mov
cs
jecxz
adc
add
xor
and
push
mov
arpl
mov
ds
cs
loop
pop
incb
out
cmp
daa
lret
pop
scas
ja
push
mov
pop
mov
shrl
repz
arpl
adc
cld
inc
cltd
fisubs
mov
mov
pushf
icebp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
jp
add
add
mov
add
add
or
add
xchg
add
xchg
add
add
add
ds
add
or
add
add
add
inc
add
or
xor
fwait
add
add
fwait
add
add
add
add
dec
add
add
xchg
add
add
add
add
xchg
fwait
add
add
add
add
add
test
cltd
add
add
add
add
fldl
sbb
inc
add
add
add
add
loopne
mov
mov
add
push
add
sub
add
add
add
add
add
add
add
add
or
inc
add
pop
add
or
fwait
add
stos
add
add
add
add
dec
add
pusha
add
add
add
add
add
add
add
add
out
add
add
or
js
dec
add
add
push
add
add
add
pop
add
add
add
add
jl
cmp
xor
inc
add
add
dec
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
inc
add
lcall
add
xchg
add
or
add
add
add
push
add
test
sbb
pop
add
add
dec
add
add
add
add
add
add
add
and
movb
add
or
add
mov
add
add
add
add
bound
add
insl
add
dec
add
add
add
das
add
add
add
mov
add
add
add
sbb
push
add
add
popf
add
add
add
mov
in
add
add
inc
add
add
add
dec
add
add
add
and
sub
add
add
add
add
stos
or
and
dec
add
cmp
add
add
add
add
dec
add
dec
add
add
add
popl
fwait
add
add
add
dec
add
inc
add
add
invd
dec
add
add
add
add
add
add
add
pusha
add
add
jns
out
add
add
add
add
add
add
add
pop
add
das
add
add
add
add
add
add
add
add
add
sub
mov
add
add
dec
add
add
add
add
loope
add
add
js
fiadds
inc
add
jns
out
add
add
pop
add
add
add
pop
add
add
jmp
add
sub
push
add
push
add
add
add
add
add
push
add
add
dec
add
mov
add
fwait
add
add
add
add
add
add
sub
dec
add
sub
pop
add
add
pop
add
add
add
add
lock
jmp
loopne
lcall
notb
ja
jge
jl
outsl
jle
int
dec
lea
jb
sbb
iret
out
les
xchg
movsb
jecxz
xchg
mov
leave
cmp
cmp
pop
dec
mov
mov
iret
xchg
lods
inc
shrl
lea
inc
fildll
loopne
or
jle
push
xor
popa
and
mov
pmullw
inc
and
mov
es
mov
repz
cli
outsb
sbb
and
adc
sub
adc
pop
test
mov
sub
push
cmp
test
scas
jg
jge
and
inc
imul
xor
mov
mov
xchg
cmp
pop
fwait
jb
mov
cmp
mov
xor
pushf
data16
adc
mov
test
and
inc
sahf
int
push
push
mov
push
cltd
lret
movsl
cmpsb
xchg
mov
icebp
in
pop
imul
xlat
shl
cmc
jl
pushf
mov
out
or
mov
cmp
loope
sbb
pop
push
pop
aad
jae
jmp
mov
fs
inc
inc
aam
test
mov
push
cltd
and
pop
dec
fldl
xchg
xchg
sub
pop
push
std
outsb
movsl
dec
arpl
mov
int
lahf
cld
adc
or
mov
int
sbb
adc
jp
jecxz
fadd
orl
ret
push
rcl
stos
mov
dec
jp
pop
xor
incl
mov
push
lcall
cwtl
pop
arpl
orb
add
ret
icebp
fdivs
ljmp
add
test
or
stc
or
dec
inc
stos
imul
daa
pop
clc
cmpsb
js
jmp
xchg
test
xchg
cwtl
mov
lcall
ds
jl
adc
addr16
rcll
js
mov
push
jmp
xchg
adc
nop
or
push
mov
fwait
jno
pop
jae
add
mov
mov
cltd
repnz
and
es
shlb
xor
push
inc
push
shlb
lret
pop
sub
jbe
sub
insl
scas
add
mov
sub
test
ret
pop
ret
faddl
jne
and
outsl
subb
adc
lock
into
in
in
cmp
sahf
and
mov
test
inc
add
out
js
adc
imul
call
inc
cmp
in
jg
mov
jbe
out
stos
or
pop
adc
push
jle
loopne
adc
ret
xchg
mov
stos
in
jge
inc
add
xrelease
fidivrs
lock
lea
cmp
add
pop
cmpsb
mov
addb
cmp
mov
out
dec
in
out
pushf
adc
sub
stos
cmp
jne
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
