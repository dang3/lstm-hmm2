call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ret
loop,pt
repnz
mov
loop
xlat
cmp
push
cmc
jb
add
xor
loop
repnz
subb
mov
out
push
push
jb
add
xor
loop
repnz
add
sub
out
push
fstl
scas
pop
lods
push
jno
insb
cld
pop
cli
mov
sarb
xchg
sbb
xchg
sub
mov
stos
mov
xor
scas
jno
aad
insl
outsb
mov
test
push
mov
icebp
inc
loope
adc
xor
mov
mov
int3
sarl
push
pop
daa
sub
jp
fadd
add
pop
inc
inc
out
cmp
popf
iret
sbb
mov
pop
repnz
xchg
jle
dec
jae
cmpb
push
pop
into
ficoml
out
xor
mov
xor
cmp
mov
mov
mov
int
test
pop
adc
cmp
cmp
mov
push
int
jle
pop
adc
aaa
mov
adc
and
hlt
pushf
loop
pop
loop
repnz
subb
mov
out
push
push
int3
jb
add
xor
and
push
jnp
pop
add
push
mov
data16
test
cmp
jl
insb
mov
push
mov
pushf
aaa
out
loopew
mov
stos
sbb
repz
push
mov
inc
out
push
into
jb
add
xor
loop
repnz
subb
mov
out
push
into
jb
add
xor
pop
xor
mov
dec
ds
sbb
and
dec
mov
add
xor
push
jge
loopne
inc
std
sub
cli
mov
sub
dec
mov
das
lret
push
xchg
push
test
insl
adc
aad
adc
and
push
rorl
xchg
loope
fs
push
mov
outsl
mov
out
out
add
sbb
push
xchg
sub
adc
mov
fildl
shlb
or
cmp
or
sub
or
mov
mov
dec
imul
repnz
repz
insb
pop
dec
and
xor
push
addr16
push
and
pop
mov
cmp
fildll
sarb
mov
test
jg
sub
sub
sahf
pop
push
sbb
sbb
arpl
pop
mov
adc
cwtl
xchg
sub
sbb
pop
add
push
adc
sbb
mov
add
int3
out
jg
mov
inc
pushf
loopne
test
adc
sarb
sbb
inc
adc
push
pop
cs
pop
addl
xchg
mov
aaa
xchg
js
sbb
jecxz
popa
mov
cmp
add
push
pop
mov
ds
iret
mov
cmpsl
lock
aaa
hlt
and
add
nop
pop
enter
addr16
sahf
mov
sub
mov
mov
adcl
pop
inc
sti
hlt
mov
xchg
int
ficoml
add
or
call
sahf
lods
stos
shrb
notb
lock
pop
cmp
rcr
fdivs
in
ds
imul
sub
mov
outsl
daa
out
cmpsl
leave
aas
cwtl
iret
outsb
cmc
mov
out
push
cld
sbb
scas
into
cmp
pop
popf
xor
stos
dec
inc
xchg
jmp
sti
dec
mov
push
dec
and
sbb
enter
jno
jo
or
fld
push
and
incl
jb
cmp
pop
andb
adc
in
jmp
je
lods
dec
xchg
pop
mov
jns
xor
cs
add
xchg
out
xchg
scas
add
int
out
mov
sahf
lds
lahf
inc
lock
lret
mov
jge
mov
int3
jne
shrl
aas
in
enter
pop
cld
jae
mov
sub
loopne
xor
jb
mov
pop
loope
or
push
mov
fiadds
cmpsb
dec
rcr
xchg
cwtl
add
inc
xor
mov
rorb
sbbb
or
add
xchg
push
cmp
dec
ret
dec
or
imul
push
ds
lret
sahf
pop
jmp
arpl
loopne
push
push
icebp
mull
imul
push
cmp
jg
pop
or
adc
cli
ss
test
pop
sub
xor
fsubl
jl
cli
imul
cmp
test
fisttps
movsb
mov
lcall
loope
cmp
pop
push
scas
loope
fsts
and
fsubl
adc
mov
icebp
adc
outsl
inc
pop
mov
push
jmp
hlt
sti
in
cmp
and
test
sub
push
push
pop
push
xchg
and
mov
orl
push
mov
loop
cmp
mov
movl
xor
fwait
insl
cmpsl
cli
push
and
testb
or
imul
mov
scas
mov
addr16
bound
loop
pop
mov
out
push
les
int
out
imul
cmp
jge
add
fmull
xchg
in
shll
out
xchg
ret
stos
outsl
fs
sub
push
ret
inc
movsl
cmp
xchg
lea
xchg
sub
sbb
jnp
add
mov
sub
xor
sub
cmpsb
dec
mov
adcb
jle
sbb
pop
inc
xor
xchg
cmp
mov
inc
mov
test
add
sub
fcompl
test
cmp
inc
dec
jb
xor
sbb
or
cmp
adc
and
jno
sbb
cmp
les
or
aas
mov
mov
xchg
int3
xchg
xor
outsl
imul
dec
pop
fidivrl
add
sbb
ds
rcrl
or
andb
bnd
popf
jo
cmp
dec
jle
les
ficoml
add
adc
sti
adc
or
fnsave
and
pop
or
mov
push
into
jmp
cmc
fisttpl
add
push
fisubrs
jne
enter
mov
subb
popf
aaa
enter
dec
jnp
out
mov
jecxz
sbb
mov
jbe
jl
add
in
das
mov
das
push
aas
roll
fwait
adc
imul
lret
lret
je
jp
pop
loope
or
divl
pop
incl
mov
repz
sbb
fisubrs
call
clc
bnd
test
sub
xchg
adc
leave
ret
in
jb
cmp
sub
pushf
xor
gs
jle
xchg
sbb
lcall
das
xchg
sub
sub
and
movb
adc
in
mov
xor
push
pop
pop
pop
jg
mov
pop
mov
lret
xchg
dec
sbb
inc
push
mov
inc
int
fdivrp
sbb
gs
xor
ss
and
mov
fimull
push
mov
jb
pop
mov
mov
mov
xbegin
add
cmp
inc
push
mov
xchg
mov
dec
stos
pop
sbb
daa
stos
lahf
jns
jmp
mov
jge
pushf
cmp
jecxz
adc
aam
mov
aas
and
mov
jecxz
test
jae
adc
add
ret
in
test
rolb
pop
mov
xchg
inc
xor
pusha
rcl
aas
test
mov
loope
add
xchg
mov
filds
pop
mov
cld
fisttpll
gs
mov
adc
and
inc
shrl
xor
fisttps
leave
mov
mov
mov
shr
push
mov
mov
xor
cwtl
mov
shlb
mov
inc
mov
aas
lret
jb
inc
ret
pop
and
aas
int3
cmp
jl
mov
cmc
push
das
loopne
pop
mov
into
clc
and
mov
pop
jns
test
cmp
xchg
pop
push
jnp
inc
out
ss
shl
addl
adcl
mov
pop
rol
mov
push
mov
push
js
inc
out
insl
xor
and
and
int3
sbb
fucomp
test
pop
jne
dec
jl
out
out
inc
in
lods
lods
and
nop
push
dec
cmp
fstl
adcb
test
sahf
cmp
mov
mov
sub
cmpsl
and
or
sbb
push
mov
inc
pop
push
pop
cmp
pop
push
aad
cld
jae
test
daa
aaa
ds
dec
jl
xor
cmc
mov
and
cmpsl
pop
xchg
fstl
lret
mov
inc
pop
push
pop
pop
inc
in
daa
test
cmp
stos
jle
pop
lret
lods
aad
mov
and
add
pop
call
mov
rep
xorl
sub
mov
cmpsb
out
out
gs
jnp
shlb
sbb
out
hlt
add
pushf
jge
xor
pop
xchg
sbb
test
in
pop
aam
push
cmp
cwtl
mov
mov
mov
sbb
mov
rsqrtps
inc
aaa
into
mov
pushf
loop
in
sbb
add
jnp
out
mov
cwtl
insb
mov
and
mov
adc
pop
cwtl
movsb
popf
add
push
push
lods
jns
outsb
or
mov
mov
lock
mov
add
inc
cmp
xchg
fdivr
mov
xchg
sbb
cmp
push
daa
addl
jp
icebp
push
pushf
jmp
mov
mov
dec
ds
sbb
sub
movsb
mov
inc
out
ret
jo
push
push
inc
loope
movsl
jecxz
pop
xor
jnp
and
pop
dec
mov
push
dec
mov
inc
das
std
cltd
inc
adc
sub
flds
push
sar
in
imul
std
mov
iret
bound
cmp
mov
imul
xlat
push
inc
inc
fidivrl
xchg
imul
xor
mov
bound
dec
ret
lret
add
imul
jns
in
pop
adc
inc
xor
cmpsl
push
inc
sub
pop
in
add
lea
mov
and
std
faddl
lret
xor
scas
fstpt
repz
xchg
adc
mov
xchg
sbb
mov
adc
lcall
sahf
js
andb
fstl
mov
lea
imul
fisubrl
or
ds
jle
dec
clc
xor
jbe
std
insl
loope
jle
pusha
cmc
mov
mov
into
xor
cmpsl
pop
mov
leave
les
sti
ret
jmp
repnz
fildll
and
stos
lahf
mov
sti
jae
test
add
call
mov
dec
mov
xchg
sub
sub
mov
in
or
mov
sub
fmuls
or
push
or
outsl
in
mov
test
add
dec
test
inc
lock
dec
push
fistpll
adc
ret
push
ficoms
cld
pushf
out
int
out
xchg
push
push
in
test
mov
xor
lahf
cmpsl
mull
das
pop
int
negl
adc
pop
or
add
out
aaa
sarl
add
mov
fucomi
cli
loopne
fs
loope
shrb
xlat
clc
cmp
pop
std
and
mov
sbb
pop
cmp
xlat
pop
jp
or
movsl
movsl
ss
adc
inc
imul
cmc
push
cmp
sbb
daa
pop
out
mov
rorb
pop
jp
pusha
fimull
mov
lock
mov
dec
into
or
in
inc
xor
sub
xchg
hlt
sub
sub
pop
mov
test
inc
pop
cs
dec
arpl
jmp
insl
aaa
pop
inc
xor
or
stos
cmp
xorl
xchg
negl
repz
adc
into
sbb
sub
push
pusha
shll
mov
mov
xchg
or
and
push
cmp
xor
lahf
jb
stc
aad
add
adc
in
jg
mov
cmp
pop
lcall
ret
sub
cmovle
int3
mov
aas
jge
hlt
clc
push
inc
lods
pop
inc
jl
cli
cli
int
pop
pushf
repnz
or
in
pushf
test
push
sbb
sahf
int3
or
and
or
das
sub
data16
movsl
pop
clc
lcall
jb
jmp
sub
push
lahf
push
jne
jb
mov
lods
or
dec
mov
sub
imul
jbe
jmp
pop
frstor
inc
lret
nop
pop
sbb
call
adc
pop
icebp
filds
repz
ja
push
cmpsb
pop
aam
push
fstpt
sub
fnstcw
cmp
popa
stc
pop
adc
mov
xchg
in
cwtl
mov
jnp
mov
jl
xchg
jnp
push
mov
xor
dec
ror
in
push
sub
movsl
cli
repz
pop
icebp
rcrl
popf
inc
bound
cld
mov
nop
stos
inc
leave
or
mov
lahf
push
lret
sub
int3
mov
pop
dec
leave
jne
das
cltd
cmc
add
lret
adc
in
sub
push
push
and
mov
repnz
push
push
ret
pop
sti
and
adc
and
ljmp
lods
cmc
and
dec
repnz
repz
arpl
mov
lret
lock
xor
adc
add
adc
call
clc
in
out
cld
sbb
mov
fwait
inc
mov
and
pop
test
dec
mov
test
loopne
popf
push
popf
add
jns
jg
dec
jmp
mov
cltd
pop
sub
mov
icebp
outsl
xor
cs
jp
cmp
adcl
dec
fs
mov
jmp
popa
sbb
adc
fisttpll
outsl
data16
add
xchg
and
clc
test
dec
test
push
jnp
jb
dec
and
sbb
xchg
mov
shr
enter
aad
sbb
cmp
or
hlt
jne
sub
pop
pop
xlat
lahf
aaa
in
jnp
jno
jl
dec
notl
rorl
jbe
dec
push
cld
jo
push
repnz
sbb
hlt
int
xchg
out
jnp
or
cli
lock
pop
pop
std
rol
mov
inc
aad
sbb
or
enter
imul
inc
inc
shll
stos
jge
insb
jae
xchg
dec
pop
cs
pop
cmpl
shrb
push
rol
inc
mov
jl
int
in
int
adcl
lcall
fcomi
div
data16
out
ljmp
pop
clc
sub
sub
and
dec
fucomip
push
mov
pop
sarl
lcall
xchg
sbb
pushf
das
fcmove
into
scas
clc
xor
stos
pop
fsubrl
mov
xchg
pop
mov
pop
addr16
dec
sbb
les
pop
roll
and
sbb
out
sub
rclb
loopne
jl
mov
hlt
lods
je
jl
xchg
push
fimuls
mov
es
into
lods
mov
xor
mov
push
pop
mov
push
iret
enter
add
cmp
xchg
mov
loop
into
outsb
in
dec
rorb
jns
mov
cmpsl
inc
call
or
xor
adc
add
jge
pop
pop
sahf
and
jge
out
xor
mov
push
adc
orl
mov
xor
test
pop
pop
cs
test
rcr
and
lret
and
cmpsl
lahf
aaa
or
sub
fisubs
dec
aas
mov
sbb
sbb
repnz
adc
andl
aam
aad
mov
push
lods
xlat
cmp
add
shrl
and
xchg
mov
lock
xor
xchg
jecxz,pn
pop
inc
lods
mov
arpl
and
pop
ljmp
movsb
repnz
ja
xor
mov
icebp
dec
je
dec
lcall
es
mov
popa
stos
scas
imul
fadds
imul
and
jae
pushf
mov
movsl
inc
xchg
pop
je
lock
push
jo
push
imul
or
fiadds
lcall
xlat
shlb
jle
lods
xchg
xchg
rcll
imul
addb
jo
fst
cmp
jnp
aaa
mov
iret
daa
sbb
jb
sbb
add
shl
add
das
aas
outsb
xor
cmpsl
mov
outsl
cld
out
mov
push
out
inc
aaa
popf
jecxz
popf
or
sub
or
cmp
fcomps
and
int
lcall
push
push
idivl
out
shlb
stc
pop
mov
pusha
jne
test
bound
scas
push
lea
push
fcompl
cld
mov
stos
inc
daa
addb
jbe
ja
jo
call
movsb
in
mov
fcoml
mov
sbb
add
sub
out
fisttpl
imul
and
dec
jne
mov
xchg
pop
repnz
mov
pushf
xlat
in
js
pop
mov
fdivs
or
and
shrl
fstp
out
mov
jg
loope
xor
ds
jge
enter
add
add
xor
adc
mov
jg
fsubrs
enter
add
lahf
in
das
call
out
xlat
adc
push
ret
loop
push
out
ret
jl
push
daa
sub
mov
jmp
mov
int
ss
dec
hlt
mov
enter
sbb
test
jge
js
or
dec
or
fiaddl
divb
jne
and
jne
and
adc
push
add
jo
scas
sti
aam
stos
and
insl
stos
hlt
loop
cmc
fistps
movsl
sbb
xlat
loopne
adc
movsb
sahf
cltd
add
cmpsl
pop
movsb
jge
jg
add
cli
dec
mov
dec
lahf
push
mov
imul
iret
orb
dec
xor
jno
mov
xorl
es
pop
gs
ja
push
or
lods
in
mov
push
or
scas
jo
xor
into
xchg
xor
shlb
xor
out
xchg
femms
imulb
andb
imul
push
cmp
sub
cltd
cli
mov
jb
fnstenv
shl
cwtl
call
mov
insl
dec
inc
pop
sbb
aam
mov
mov
mov
xor
lds
add
sub
daa
cmp
lret
add
pop
imul
xor
sbb
dec
push
mov
outsl
adc
sti
pop
mov
pusha
lea
cmp
andl
push
cmp
push
movsb
mov
lahf
lock
jp
rcrl
lahf
xor
pushf
dec
jmp
cmp
outsb
pop
jecxz
pop
push
xor
xchg
imul
jmp
adc
sub
jnp
test
and
pop
mov
inc
adc
arpl
leave
or
mov
xchg
dec
mov
add
imul
das
mov
cli
nop
lea
stos
mov
in
xchg
mov
movsl
xor
xlat
cmp
aad
loopne
incl
fldl
add
aam
cmpsl
cmp
jne
ficomps
mov
ss
sti
mov
movl
dec
inc
cmp
jbe
sbb
popa
sbb
cmp
mov
shl
sti
pop
gs
out
in
int3
or
enter
iret
ljmp
loop
adc
mov
or
cmp
xchg
lods
ficompl
xlat
ret
sbb
arpl
xor
xchg
loopne
inc
mov
lods
cmpb
xlat
hlt
arpl
cmp
add
out
mov
aad
add
dec
adc
adc
jns
pop
bound
ja
and
mov
dec
or
je
dec
sbb
xchg
aam
add
sub
stos
jle
nop
xchg
fcmovnu
je
mull
popf
adc
test
xor
cmp
dec
inc
cmp
jge
jno
push
nop
push
mov
adcb
and
outsb
bound
inc
xchg
inc
mov
vpxor
movsb
nop
jg
xchg
push
add
inc
dec
into
ret
push
cld
sub
je
pop
in
mov
aam
orl
insl
xchg
arpl
mov
out
add
lahf
or
aad
sbb
xchg
out
pop
loopne
sbb
or
fbld
mov
inc
aam
push
sub
push
and
jb
jo
mov
and
je
adc
dec
cltd
push
lock
lods
fcmove
cltd
bound
or
rcl
xchg
mov
aas
aaa
pop
fistps
xchg
loopne
jle
cmp
imul
xchg
gs
mov
das
fs
test
pop
xchg
xchg
adc
das
mov
into
mov
sbb
cmp
jle
inc
sub
popa
xchg
outsl
sbb
xor
mov
sbb
add
sti
mov
lret
fisubs
dec
imul
je
dec
push
push
scas
cmp
lock
cwtl
scas
fisttpll
mov
test
iret
xor
mov
xor
inc
pop
test
and
and
incl
iret
fstpt
pop
vandnpd
mov
aad
xchg
in
test
and
cld
fidivrs
push
daa
xor
mov
pop
sbb
ss
repz
dec
push
sbb
stos
leave
in
sbb
test
sbb
rcl
daa
vpaddb
pusha
fsubrs
jne
xchg
lds
rcrb
mov
push
pop
lock
pop
dec
mov
std
mov
mov
and
in
insb
pop
dec
nop
jmp
stc
cli
add
push
xor
cmp
xor
stos
adc
mov
arpl
or
mov
jmp
pop
xor
repz
cld
sub
xchg
fdivrs
outsl
pop
jge
insl
jnp
dec
mov
fsubp
cmp
xchg
jg
ja
sbb
insl
movsb
fldcw
ljmp
into
adc
mov
loope
add
cmp
mov
stos
xchg
and
dec
roll
jb
sbb
jbe
je
xlat
dec
das
adc
cmp
xor
jb
add
out
enter
cmp
inc
adc
stos
scas
in
lret
cmpb
int3
movsb
lret
jns
test
out
inc
mov
xchg
iret
push
mov
sbb
leave
inc
dec
les
lds
repz
sahf
stc
fisubl
fwait
or
dec
sbb
and
push
movsb
sub
hlt
icebp
jecxz
mov
nop
and
js
push
inc
push
add
dec
repnz
subb
mov
out
push
into
jb
add
xor
loop
repnz
subb
mov
out
push
into
jb
add
xor
loop
repnz
subb
push
mov
out
push
cli
into
jb
add
xor
mov
lcall
xchg
mov
adc
enter
jne
lcall
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stos
add
jmp
fistpl
vpaddq
mov
fldenv
dec
sbb
cmp
dec
or
int
mov
lret
jmp
push
pop
jns
dec
sbb
adc
dec
jmp
ret
inc
shl
mov
fsts
popa
jl,pn
add
inc
sbb
sti
cmc
orb
stc
jb
add
or
push
pop
xchg
sbb
dec
out
push
inc
cmpsb
inc
stos
or
aaa
xor
inc
adc
sti
dec
orl
jle
sbb
insb
cld
test
stos
shr
addr16
cmp
jns
cmp
and
shr
insb
push
fwait
stc
imul
fnstenv
cmp
push
pop
popa
push
ret
mov
test
fwait
jno
inc
lret
push
mov
idivb
dec
sub
jns
mov
push
hlt
push
hlt
and
mov
add
dec
mov
cmp
pop
in
sub
in
sbb
sti
out
cld
mov
cltd
rorl
cmpb
arpl
push
and
jae
jnp
pop
outsl
rcrb
lret
xchg
lds
adc
insb
push
jl
sbb
js
sbb
in
fsubr
sti
stos
clc
into
or
cltd
cmp
mov
dec
add
or
popa
or
dec
push
inc
and
outsb
lds
lret
xlat
stc
stos
leave
or
dec
imul
pop
or
fistpl
stos
leave
or
dec
imul
pop
or
cli
pop
fsubs
xchg
into
cmpsl
daa
jnp
inc
in
lret
shll
inc
hlt
inc
popf
add
sub
xchg
mov
lcall
enter
js
pop
adc
dec
hlt
xorb
cwtl
dec
or
orl
iret
xor
adc
xchg
and
cmpsl
jo
mov
lea
push
mov
sub
and
mov
sarb
aad
fsubrs
and
mov
xchg
test
lahf
dec
push
xchg
movsb
and
out
movsl
xchg
out
mov
push
jo
or
cmpsb
adc
pop
add
or
data16
pop
lods
jo
sub
xchg
shlb
or
test
xchg
scas
das
aad
dec
lret
into
and
sub
xchg
test
inc
std
daa
sub
fldcw
push
xor
add
shr
push
push
popa
sbb
ja
jp
jno
mov
fs
outsl
leave
daa
in
fdivrp
adc
fwait
push
test
daa
iret
mov
cmc
mov
sbb
lock
mov
out
cmc
mov
add
jecxz
adc
outsl
xchg
push
dec
cmp
stc
inc
clc
jge
sub
cli
leave
xchg
sbbb
stos
inc
xchg
mov
xor
lods
out
daa
loop
dec
mov
iret
shlb
or
dec
add
iret
dec
jnp
loope
mov
pop
jge
mov
rorl
je
adc
sbb
mov
fcmove
lock
sbbb
rcrb
push
xchg
xchg
loop
push
inc
dec
in
jb
loop
leave
mov
pop
lds
jnp
in
mov
add
inc
lds
outsl
test
daa
mov
jp
pop
mov
mov
inc
pop
cwtl
inc
jne
clc
insl
js
movsb
cmp
inc
inc
push
test
and
xor
inc
mov
jnp
imul
xchg
inc
xchg
fmuls
fs
shlb
stos
adc
push
pop
fcomps
xchg
lahf
and
xor
aam
cwtl
dec
lods
xchg
xlat
out
mov
inc
adc
mov
sbb
dec
cltd
mov
xchg
mov
pop
or
mov
sbb
add
xor
ret
fyl2x
fs
lahf
xchg
xchg
movaps
dec
mov
stos
push
dec
xchg
rcl
or
dec
nop
push
loope
imul
sbb
enter
test
xbegin
jecxz
jecxz
push
in
cwtl
imul
jl
and
loope
xor
adc
bound
xlat
loopne
and
dec
sbb
xorl
inc
ljmp
inc
mov
imul
mov
push
jge
mov
test
sbb
outsb
addr16
inc
inc
jbe
xorl
sub
scas
mov
sub
mov
mov
adc
sti
test
scas
and
cmpsb
je
fsubs
mov
scas
sub
hlt
mov
scas
and
aam
add
xor
dec
dec
idivl
adc
movsb
inc
adc
in
mov
xchg
lock
sbb
adc
cmpsl
mov
nop
xchg
xchg
jmp
and
gs
test
push
lock
jne
ficoms
pop
lret
xchg
and
leave
lods
jl
insb
mov
xor
ret
xchg
jb
roll
jp
inc
mov
jno
out
mov
shlb
jp
mov
jle
or
das
loope
call
pop
ficoml
pop
testl
push
and
mov
mov
hlt
add
xchg
mov
movb
daa
aaa
cltd
enter
fs
jb
xor
jg
mov
leave
cmpsb
add
mov
js
int3
cmpsb
and
daa
sub
jmp
sbb
jns
mov
push
dec
call
pop
xor
fs
ja
in
ficompl
mov
xchg
gs
test
inc
mov
lret
sub
sub
mov
lea
test
jno
fistpll
test
xchg
sbb
pop
sbb
fcomp
scas
int
jns
lods
int
mov
add
mov
cmp
ret
ljmp
out
mov
xchg
outsb
icebp
push
xor
mov
and
jge
pop
test
add
push
dec
and
fs
pushf
stos
scas
cmpsb
repz
mull
fsts
rclb
dec
dec
int3
insl
xor
shrb
pop
popf
sbb
mov
pop
pop
push
rcrb
push
out
xchg
jbe
push
cmp
adc
fld
mov
cmp
push
repz
ja
mov
sub
mov
xchg
adc
xchg
mov
cmpsl
cmpsl
filds
sbb
add
int3
jbe
mov
out
dec
dec
push
mov
dec
push
cltd
jb
sbb
cli
test
insl
or
stos
cli
repnz
leave
pushf
lods
stos
pop
adc
mov
mov
clc
arpl
insl
adc
adc
pop
mov
inc
sub
aaa
mov
ret
mov
fisttps
lods
xlat
sbb
test
fs
sbb
inc
or
pop
cs
scas
shll
call
pop
pop
lcall
lret
push
adc
ret
inc
mov
rolb
mov
adc
sub
xor
in
xchg
sahf
jns
sub
lret
push
sbb
clc
sbbl
lock
loop
fidivrl
les
inc
lahf
sarl
js
aam
les
in
clc
mov
test
cs
dec
icebp
xorb
call
daa
lods
sub
test
pop
push
rcr
dec
push
hlt
insl
or
subl
loope
xlat
mov
xor
pop
or
sbb
test
push
int3
push
pop
xor
jp
daa
pusha
cmc
dec
sub
jl
cmp
xor
jns
mov
addr16
mov
mov
jae
out
shl
push
mov
cmp
test
mov
rcr
add
jl
adc
jle
fs
pop
adc
loop
sbb
push
shll
fldl
jno
sbb
sbb
xchg
scas
inc
jecxz
stos
sub
dec
xchg
mov
jns
xlat
sbb
jl
aaa
adc
sbb
sti
inc
jno
lods
xor
push
xor
ret
mov
xor
xor
dec
push
sbb
cwtl
mov
fs
adc
jae
mov
pop
pop
lock
inc
xchg
sbb
sbb
mov
pop
jne
push
or
mov
inc
xchg
mov
push
jb
cwtl
int3
movsb
jge
jbe
adc
dec
ds
jbe
mov
xor
gs
and
and
push
sub
fists
fistpll
imul
jno
inc
test
jge
aaa
adc
fcoms
jnp
dec
sbb
pop
in
xor
lock
int3
mov
xchg
inc
outsb
mov
pusha
leave
jne
push
in
fildll
fbld
push
dec
dec
push
lahf
inc
push
xchg
xor
in
sbb
add
mov
into
mov
sbb
outsl
cli
jle
iret
inc
sub
rcll
xchg
add
xchg
inc
out
ds
cli
pop
out
jmp
fildll
decl
push
mov
cmp
mov
pop
in
or
add
fdiv
pop
cmpsb
ror
push
mov
jne
inc
movq
xchg
mov
loope
add
rorl
mov
xchg
jg
jmp
lods
in
mov
fs
popf
in
out
add
stos
xlat
mov
pop
lret
adc
cmp
lea
repz
scas
stos
push
stos
imul
inc
xlat
jge
jne
xchg
scas
cmp
bound
imulb
push
jmp
mov
xchg
jge
shlb
and
adc
mov
sub
jbe
sbb
push
jmp
fcom
xchg
in
sub
fmull
inc
cmp
in
les
test
cmp
or
sub
fmul
into
popf
lds
mov
stos
gs
mov
jmp
add
dec
stos
repnz
push
inc
and
push
je
dec
push
sub
add
cmp
mov
pop
lret
icebp
out
push
mov
and
adcb
pop
pusha
sbb
pushf
mov
mulps
test
leave
test
sahf
cmpsl
pop
and
aad
shll
imul
icebp
dec
adc
jle
jge
xorb
cwtl
mov
lods
repnz
ss
ret
fidivl
into
mov
insb
jp
or
dec
popa
ja
sub
sub
add
xchg
lea
and
repnz
push
xor
inc
jmp
flds
xchg
cld
cmp
ja
xchg
call
mov
aam
shll
int3
hlt
jns
jle
pushf
pusha
push
out
lods
ret
fsubrl
aam
popf
pop
cmpsb
in
out
jnp
out
xor
inc
je
shrb
xchg
cwtl
adc
or
adc
leave
leave
cld
mov
jno
addr16
dec
or
negl
push
pop
jle
mov
aas
push
das
mov
pop
mov
repnz
dec
xor
lods
cmpsl
mov
fsubs
xchg
mov
push
inc
mov
adc
and
xor
int
test
sbb
mov
mov
pop
pop
xor
imul
ss
mov
cmpsl
int3
insb
push
inc
addb
sbb
mov
pop
stos
lret
push
push
pop
bound
insl
xor
iret
andb
sub
fwait
clc
inc
push
loopne
aaa
cwtl
mov
frstor
inc
xchg
nop
inc
sti
js
clc
mov
nop
in
ds
adc
fldl
jnp
rolb
sub
fldenv
mov
xor
jb
ljmp
mov
lock
dec
imul
out
fs
mov
dec
pop
fstp
push
imul
xor
pop
int3
fisubrs
test
pop
sub
push
sbb
push
lahf
jb
inc
inc
sti
adc
xlat
push
insb
imul
arpl
shll
sub
adc
addr16
mov
xchg
lahf
idivb
aaa
fwait
cmpl
ja
fisubs
sbb
sub
mov
or
xor
sbb
mov
js
imul
loope
imul
cli
rorb
fisubrl
sbb
jge
clc
inc
mov
movsb
pop
hlt
jp
clc
xchg
adc
orb
call
inc
jecxz
push
adc
xor
insb
mov
push
push
fadds
std
push
dec
sbb
jp
cmp
mov
sub
fnstcw
sbb
sbb
add
jno
mov
enter
jb
push
loopne
jo
dec
arpl
ds
scas
xor
cmp
cmp
cwtl
jae
pop
jo
mov
pop
out
sbb
hlt
in
inc
mov
xchg
subb
adc
jle
mov
sti
inc
add
shll
imul
mov
jle
aas
test
sub
dec
cmpsb
popf
pushf
xchg
fsubl
jb
lods
cmp
dec
sub
hlt
inc
push
fistps
sbb
mov
mov
popf
enter
dec
push
dec
and
outsb
jg
xor
mov
sbb
js
sti
enter
loopne
nop
leave
lods
in
or
aam
mov
add
cld
icebp
pop
insl
or
dec
cmp
jno
or
jecxz
sub
pop
sbb
int
jb
and
cmp
and
inc
insb
jecxz
mov
std
mov
mov
mov
add
in
mov
lret
outsl
xor
test
lds
daa
loopne
xor
add
fmull
inc
cli
cli
hlt
fidivl
in
nop
div
mov
cwtl
rorl
jo
arpl
cmp
enter
popa
mov
pop
inc
mov
sbb
cmpsl
adcl
fcompl
or
movsb
rcr
in
sbb
mov
add
jecxz
movsl
mov
dec
jae
mov
sbb
data16
push
in
ds
jmp
inc
sub
insb
cmp
in
pop
arpl
xor
int
mov
xchg
pop
pusha
push
enter
cmp
movsl
or
cmpsb
pop
mov
sub
icebp
cmc
mov
cmpsb
xlat
jo
inc
push
ds
pop
insb
xchg
inc
lods
jl
push
test
sbb
icebp
jns
leave
dec
and
popf
sub
cld
mov
nop
jbe,pt
shll
dec
dec
cmp
sbb
sarb
add
xor
or
out
inc
mov
bnd
mov
jge
sahf
lahf
leave
in
xor
xor
les
mov
movsl
testl
push
xor
or
ret
xor
fsubrp
mov
mov
bound
add
add
notl
cmp
mov
adc
xchg
push
into
xchg
lea
pop
inc
mov
bound
jnp
mov
cltd
leave
adc
into
xchg
int3
mov
push
shlb
fimuls
bound
mov
push
mov
movsl
mov
jae
loop,pt
sbb
mov
dec
mov
addr16
adc
mov
daa
mov
or
in
andb
outsb
dec
sub
dec
cmpsb
mov
adc
xor
push
sub
and
dec
add
into
xchg
mov
shll
xor
or
idivb
and
or
push
sub
mov
pusha
in
rcl
xor
cltd
sti
add
cmp
popf
ret
lret
rolb
inc
les
sahf
xor
mov
pusha
push
adc
mov
pop
imul
clc
gs
mov
push
xor
test
or
sbb
cmc
movsl
popf
test
lock
mov
and
mov
mov
dec
push
xor
test
and
mov
pop
cli
imul
push
dec
sbb
mov
pop
test
push
stc
lods
or
pop
imulb
pop
popf
cltd
add
nop
adc
sub
push
mov
jg
xchg
loop
mov
fcompl
lods
push
pop
inc
pop
dec
sub
into
and
jmp
cmpsl
jle
pop
nop
stos
inc
xor
pushl
outsl
aaa
sub
inc
fistps
pop
push
clc
in
sbb
insb
outsb
shll
mov
mov
test
ret
out
sub
or
mov
cs
out
jbe
scas
mov
cwtl
into
xchg
aas
pop
aad
jp
fidivs
test
pushf
jb
mov
cmp
addr16
xchg
into
stos
mov
fmul
aam
xchg
and
mov
call
mov
mov
push
jnp
inc
cmp
fldenv
inc
inc
into
stos
mov
sub
adc
mov
fcmovnb
sahf
out
mov
mov
jnp
and
out
push
sbb
sub
inc
mov
jmp
adcl
add
outsl
loopne
test
in
xor
les
adc
adc
add
mul
test
or
addb
fsub
push
fldenv
and
dec
adc
lods
cmp
dec
setne
fisubl
mov
in
dec
sbb
fbld
orl
inc
fistl
xor
cli
xchg
sbb
and
call
aam
andl
mov
adc
je
push
pop
outsb
fimuls
loopne
push
inc
xor
xlat
stos
push
fcmovbe
je
push
fs
lret
adc
fcompl
repz
loope
out
or
xor
sahf
and
xor
test
jne
mov
test
data16
bound
test
jns
inc
test
popa
in
test
pop
sub
adc
and
xchg
data16
daa
ret
mov
mov
push
cmp
fimull
inc
insl
stos
xchg
test
icebp
xor
xchg
dec
jbe
or
movsl
xorb
popf
mov
pop
jl
cmp
outsl
cmp
mov
lcall
lods
repz
fimuls
in
sub
cld
fisttpll
jge
inc
dec
js,pn
push
scas
dec
sub
lds
push
push
sahf
xchg
fucom
and
and
aas
pop
inc
sbb
stc
pushl
add
xchg
xor
out
push
fs
push
loop
mov
movsb
test
cmp
popf
inc
add
js
mov
mov
orb
pop
mov
rcrl
push
xchg
jbe
cmp
fdivrl
fs
adc
mov
loop
clc
inc
cmp
pushf
cltd
clc
ljmp
mov
stos
or
dec
shll
out
lret
stos
in
dec
cmpsb
into
dec
dec
sbb
cmp
daa
enter
pop
fbld
arpl
push
push
jl
scas
push
or
aaa
repz
lea
jnp
pusha
cmp
int
aad
lea
cltd
xchg
add
push
adc
add
push
inc
sbb
repz
sbbl
add
inc
pop
sub
adc
int
insl
inc
adc
notb
aam
and
movsl
jb
aad
outsb
out
leave
push
out
xchg
roll
xor
jb
ffree
imul
add
sbb
add
cmp
mov
rcr
jb
mov
and
loope
xchg
mov
or
jae
sbb
jno
outsb
mov
in
push
cmc
cmp
test
cs
push
addr16
and
repnz
cmpsl
lahf
fistps
dec
jne
lock
fucomip
pusha
aaa
xorb
push
pushf
scas
sub
repz
jnp
cli
or
mov
dec
sbb
out
mov
in
sub
xchg
testb
mov
fsubl
push
shrl
or
or
dec
mov
in
rorl
jmp
dec
pop
ss
jle
cmp
inc
jg
pop
push
mov
dec
rcl
negb
loopne
pop
in
cmc
mov
dec
rcr
insl
pop
iret
stos
in
fiaddl
dec
mov
loop
pop
insb
lods
mov
mov
in
adcb
or
jp
int
loope
movsb
inc
test
lret
xchg
out
adc
mov
movsb
jae
mov
xchg
icebp
dec
pop
jno
dec
lahf
lret
rcrb
mov
nop
pop
mov
xor
pop
sar
xor
inc
jo
ret
ljmp
insl
dec
fiaddl
push
xchg
inc
lds
ljmp
inc
jnp
adc
cmc
xchg
or
sahf
cwtl
mov
cmp
inc
pop
sbb
test
ds
jb
aaa
mov
push
fisubrs
fisttpll
mov
call
and
jb
add
xor
or
adc
ficoml
push
add
outsl
cltd
sub
psrlq
sbb
adc
subb
jecxz
enter
and
mov
hlt
add
cwtl
adc
add
repz
push
es
mov
rcll
cwtl
shr
jnp
inc
xor
mov
daa
adc
lods
jo
int
adc
sahf
xorl
lock
test
loope
jne
mull
push
mov
ss
cltd
je
inc
xchg
inc
xor
xchg
cmp
movsb
lods
jb
idivl
lahf
out
je
cli
test
sbb
mov
sub
lahf
lret
aam
mov
ds
push
in
pusha
insl
mov
sti
sub
or
push
pop
adc
insl
jle
dec
sbb
push
push
ja
jl
shll
sub
or
cmp
cmc
out
addr16
xor
int
jnp
sub
cmp
gs
add
imul
clc
stos
or
jae
cmpl
insl
push
cmp
cmp
movaps
jp
mov
mov
mov
sbbb
mov
mov
pop
push
fisubl
int
dec
sbb
sahf
cmc
mov
mov
lea
leave
cli
pop
sbb
cltd
cli
nop
lcall
pusha
mov
xchg
and
jbe
xor
ficomps
shl
sahf
or
aad
sub
jae
jb
js
sbb
xchg
loopne
outsb
cmp
or
jle
into
stc
mov
sbb
pusha
sti
lret
leave
cmpsl
mov
inc
sarl
jno
lcall
jo
inc
subb
xchg
out
sti
dec
mov
or
js
cmp
or
and
xor
cmp
sbb
ss
loopne
ja
mov
iret
mov
imul
fbstp
fnstsw
jg
test
bound
xchg
addr16
test
lods
lret
sub
sub
or
sbb
inc
push
ja
gs
jne
scas
lods
lret
roll
pop
cld
sbb
mov
mov
mov
mov
leave
imul
fstl
xchg
loope
lret
and
lcall
les
addr16
fcoml
push
inc
xor
rorb
mov
xchg
cmpsl
pop
push
cwtl
loope
aam
negl
mov
inc
dec
ret
adc
xor
int
lds
sbb
mov
pop
sarl
jg
add
inc
dec
rcll
pop
dec
mov
cmpsl
or
loop
ret
mov
sub
test
xchg
icebp
jno
inc
imull
ret
inc
xor
fmuls
inc
inc
imul
mov
inc
mov
xlat
mov
xor
dec
sbb
in
rol
jmp
xor
lret
jmp
or
dec
imul
pop
or
fistpl
stos
leave
or
dec
imul
pop
or
fistpl
stos
leave
fwait
sbb
stc
pop
sbb
cmp
dec
sbb
jmp
fstpt
stos
leave
fwait
pop
mov
jnp
shll
icebp
aam
in
hlt
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jae
arpl
pop
inc
leave
hlt
push
dec
jge
or
repz
loop
rcr
ret
mov
orl
pop
inc
dec
xor
and
repz
jecxz
rcr
ret
leave
jae
mov
mov
arpl
icebp
inc
dec
xor
add
repz
out
int3
shl
in
mov
pop
pop
push
sub
sbb
push
test
sbb
sub
pop
sbb
mov
inc
out
ret
xlat
cmp
call
cmc
int3
cmp
aad
pop
decb
fsubl
sub
cmp
dec
mov
push
add
js
insb
push
inc
ss
mov
mov
rcll
jecxz
fisubrs
jae
arpl
dec
inc
icebp
adc
ss
xchg
loop
idivb
mov
test
push
adc
fimull
mov
insb
nop
adc
sbb
mov
test
mov
aam
dec
enter
shrl
movsb
stc
adc
jecxz
cs
cltd
add
push
fldl
xor
and
adc
add
ror
ret
xorl
sub
imul
dec
push
inc
ja
add
xchg
mov
call
cmp
insb
xor
sbb
push
gs
pushf
mov
sarl
in
clc
mul
push
das
arpl
cmp
das
sub
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
inc
mov
int
and
clc
inc
hlt
inc
test
rolb
aaa
fcmovnbe
mov
outsl
lcall
cmp
add
repz
xchg
gs
xor
mov
pop
mov
mov
adc
dec
and
les
aas
xlat
or
fisttpll
in
cld
sarl
sbb
stc
jp
xchg
sbb
or
add
cwtl
enter
leave
sbb
je
fidivl
lock
xchg
dec
rcll
out
outsl
xlat
sbb
sbb
push
sbb
aaa
ja
pop
xor
daa
mov
fisubrl
insl
lods
popf
test
xchg
aam
push
les
dec
mov
mov
and
into
inc
mov
sbb
icebp
add
push
fldl
es
daa
in
inc
es
xor
rcrb
cmpsl
pop
cld
mov
pop
lret
mov
aas
add
cmpl
jp
or
mov
push
fs
sbb
fdivs
shlb
jbe
jl
cmpsb
mov
adc
out
jne
out
pop
aad
neg
jne
jae
push
adc
and
notb
stos
cmpsb
adc
or
cmp
push
test
out
jb
or
test
movsb
mov
sub
mov
add
push
mov
sbb
das
push
pop
fs
push
inc
lea
mov
fcomp
push
test
dec
adc
in
imul
divl
or
pop
push
mov
out
test
sub
aad
mov
push
movsb
pop
clc
mov
popf
fwait
adc
cmp
jge
es
sub
and
stc
icebp
out
adc
sbb
scas
pop
sub
movsl
scas
orb
dec
mov
lock
dec
xor
sbb
add
aam
adc
in
jae
sub
sahf
rcrb
or
mov
mov
andb
bound
fwait
or
loope
daa
xor
pop
lcall
inc
xchg
sarb
adc
addr16
lea
add
lock
cmp
bound
fcoms
sbb
sti
mov
inc
outsl
add
shrl
add
sbb
xlat
lret
dec
dec
ret
add
das
jp
test
les
push
dec
mov
and
cmp
pop
add
or
or
fmul
ljmp
xchg
dec
mov
popf
iret
sbb
inc
xchg
ret
and
xor
fdivs
sbb
fmull
lods
adc
mov
imul
lea
aaa
aaa
ret
rcrl
push
xchg
jle
arpl
jns
movsl
adcb
int3
ss
leave
and
inc
or
mov
dec
or
shll
inc
lock
rcl
sub
sbb
shlb
push
pusha
sub
lock
jmp
dec
push
enter
pop
cwtl
mov
jns
or
int
cld
clc
dec
outsl
inc
cli
out
mov
sbb
scas
xchg
xchg
sahf
push
pushl
out
jle
mov
or
add
jle
dec
hlt
lods
faddl
sbb
xchg
and
add
pop
les
adc
mov
lret
into
or
mov
insl
js
mov
adc
pop
sahf
mov
lods
stos
sbb
test
lods
or
int3
push
xchg
push
adc
outsl
xchg
popf
jecxz
rcll
mov
fiaddl
cwtl
cli
int3
daa
mov
and
and
addr16
scas
xchg
fisttps
xor
cmp
jns
jno
daa
rorl
adc
lahf
sbb
or
adc
cmpb
or
jecxz
dec
outsl
mov
imull
inc
and
push
dec
mov
shlb
mov
or
push
les
ljmp
jb
shlb
inc
push
in
and
lret
push
sti
sub
inc
push
test
xor
jecxz
fstps
in
jmp
adc
jg
mov
iret
lds
data16
xchg
mov
mul
xchg
xor
xor
std
dec
add
stc
or
adc
in
leave
cmp
lret
out
dec
out
xor
insb
and
cltd
xchg
js
mov
adc
insl
cmp
subl
pop
in
ss
and
loope
xchg
ljmp
push
jl
outsl
pop
fimull
std
into
lcall
movsl
sti
and
cmc
cmp
int3
lods
insb
push
add
outsl
push
loopew
adc
push
mov
loope
je
push
dec
iret
push
mov
shrb
add
daa
mov
jg
rorl
fisttpl
sarl
cmpsl
mov
cmp
in
xchg
push
enter
pusha
lret
mov
sbb
jno
push
in
mov
ljmp
aas
mov
test
mov
enter
mov
or
jg
mov
sarb
and
jg
inc
add
pop
push
clc
andb
addr16
mov
mov
gs
and
cmp
fimull
mov
pusha
negb
pushf
testl
add
div
cmp
addl
enter
xor
stos
aas
inc
rcll
arpl
lds
call
jg
out
in
and
lea
adc
inc
and
test
cmp
xor
pop
mov
int3
flds
dec
cs
ss
icebp
pop
lahf
mov
inc
call
out
out
idivl
ficompl
sub
push
mov
mov
addb
pop
xor
mov
stc
minps
stos
sarb
loop
mov
pop
test
inc
or
lret
jecxz
pusha
cld
insb
add
and
dec
jl
aaa
dec
sub
mov
loopne
mov
fdivrs
add
push
and
std
ljmp
mov
add
ljmp
jle
cmc
mov
addr16
pop
das
add
scas
faddl
sti
mov
xchg
iret
dec
in
cmpsl
out
add
fsubs
lret
pop
mov
mov
adc
arpl
sub
mov
adc
push
daa
lcall
fnsave
inc
sub
cmpl
stc
lods
insl
mov
cwtl
dec
in
cmpsb
jle
in
sbb
es
ljmp
xor
xchg
andl
pop
push
insl
or
icebp
push
pushf
or
fbld
ss
je
pop
popf
iret
add
sbb
and
stos
and
dec
in
xchg
push
cmp
sbb
add
int3
test
cmp
nop
jle
je
mov
cmpsl
mov
jg
nop
ja
into
mov
dec
or
test
imulb
daa
mov
popf
cltd
dec
roll
and
or
out
rcr
pop
add
nop
out
fmull
xor
cmp
pusha
and
hlt
mov
psadbw
cmc
mov
pop
lret
add
sbb
mov
mov
lret
push
scas
test
daa
les
cld
test
fs
out
sub
bnd
orl
xor
cmpb
or
sbb
sbb
das
testb
xor
cmpsb
xchg
je
lock
outsl
roll
cmp
pusha
int
xchg
stos
cmp
xor
fidivl
or
movsl
xchg
mov
inc
fcompl
push
mov
enter
mov
xchg
mov
flds
sbb
adc
or
sub
ja
mov
in
repz
andl
push
popa
sub
cmp
imul
and
mov
add
jns
dec
lcall
addl
mov
idivb
inc
outsl
sti
adc
out
das
subb
clc
pop
inc
addr16
js
orb
jmp
hlt
inc
jb
jne
insb
mov
and
sbb
jmp
mov
rcrb
sti
mov
lahf
test
jl
sub
icebp
xor
pop
pushf
leave
cli
movsb
rcrl
xchg
loop
daa
jp
sarb
mov
or
pushf
push
or
shll
cmp
xchg
call
rcll
movsb
pop
lret
mov
fdivr
es
mov
in
aam
mov
jmp
lea
jecxz
ds
add
js
gs
aam
popf
push
in
sub
fisubrs
or
jo
les
and
data16
lret
ret
jmp
mov
or
scas
mov
xchg
mov
int3
cld
int3
or
flds
shll
sahf
sub
mov
sub
xchg
dec
jae
faddl
and
adc
testl
imul
lods
nop
push
lcall
movsl
sub
hlt
loope
mov
test
es
inc
ret
mov
mov
xchg
mov
xlat
in
fnsave
mov
aad
xor
xchg
jle
push
mov
pop
imul
jbe
mov
mov
xor
xor
push
cmp
iret
aam
inc
sbb
dec
out
dec
scas
add
adc
adc
int
cld
push
out
cmp
mov
idivl
and
popa
jmp
push
add
and
std
clc
popf
pusha
icebp
add
push
xchg
dec
roll
mov
xchg
jbe
mov
dec
jp
mov
mov
jecxz
orl
out
movsb
rcrb
ret
sbb
mov
in
mov
cmp
xchg
fisubs
rclb
dec
mov
dec
sarl
fistl
jb
imul
sbb
and
and
push
sti
dec
dec
mov
pushf
fs
mov
inc
aam
mov
imul
xchg
xlat
enter
and
loopne
sbb
cld
push
enter
addb
jae
ja
pop
stos
jp
lret
mov
or
sbb
xor
sub
dec
sbb
pop
adc
and
sub
mov
cmc
lret
mov
test
mov
bound
mov
pop
mov
mov
pop
and
mov
lret
inc
arpl
push
int
adc
dec
pop
xor
cwtl
and
adc
push
std
adc
push
inc
dec
push
adc
and
mov
out
clc
push
push
call
das
mov
adc
sbb
mov
test
scas
andb
psraw
sbb
push
and
add
mov
xor
leave
outsl
xchg
hlt
cmp
addr16
test
les
rorb
sbb
in
dec
xchg
pop
push
push
xchg
out
scas
iret
nop
sub
aas
imul
jle
fldcw
mov
add
mov
ret
adc
fwait
cld
fisttpll
cmp
shl
or
xchg
add
adcb
fsubrp
adc
push
pop
push
into
xchg
mov
push
mov
jmp
push
insl
int3
jecxz
outsl
outsl
jo
insb
mov
fldcw
flds
mov
cmp
or
sbbb
movsb
xchg
inc
rcll
mov
mov
jne
lock
lret
add
mov
inc
fucomip
rcrl
cmpsb
xchg
add
ljmp
jns
test
adc
xlat
push
push
cli
lds
sbbl
cmp
or
push
cld
push
addb
push
dec
insb
adc
insl
xchg
lods
fisttps
loop
pop
in
pop
jmp
inc
test
sub
jmp
dec
ja
jge
les
cmp
pop
leave
daa
push
clc
out
data16
shll
add
pop
inc
mov
xchg
pop
call
aad
jl
pop
or
jecxz
pop
ret
shr
test
js
sahf
adc
call
push
mov
in
mov
cltd
pusha
aaa
imul
lods
stc
or
inc
icebp
mov
and
add
fs
mov
dec
ja
cmpsb
movsl
cs
xchg
pop
xor
aaa
adc
stos
pop
je
mov
aaa
ficomps
lods
clc
xchg
and
inc
cltd
loope
jo
sub
imulb
in
add
test
ret
and
push
inc
push
push
dec
les
out
cld
push
cmp
iret
adc
jnp
mov
fnstsw
jmp
cmp
lret
test
fnstsw
in
hlt
or
loope
fimull
std
adc
and
jl
cmpsl
dec
es
push
cmp
or
push
jno
and
enter
push
jno
sahf
icebp
fcomip
incb
sub
jns
popf
mov
pop
imul
mov
jae
cmp
into
lods
dec
mov
jne
sub
in
jecxz
out
pop
push
adc
sub
add
outsb
xchg
xchg
shrb
mov
shlb
int3
adc
or
cmpsl
jo
les
inc
jl
xor
sarl
inc
sub
rcrb
add
sub
gs
sub
clc
add
push
aaa
mov
sub
call
mov
push
ljmp
mov
pop
jecxz
cmpb
scas
xor
shrl
xchg
repnz
mov
adc
mov
xchg
push
mov
mov
rorb
or
mov
add
cltd
imul
mov
pop
push
cld
std
sbb
jle
push
inc
pop
push
pop
mov
mov
jnp
je
cli
or
sub
call
aaa
push
push
sbb
or
jle
inc
pop
xchg
lea
xor
mov
cmpsb
cmp
aad
push
mov
insb
or
cltd
dec
aam
call
loop
push
loope
sbb
mov
sub
or
sbb
ljmp
mov
data16
xchg
int
adc
lahf
lcall
into
mov
out
stos
inc
inc
gs
add
jp
stos
cmp
and
test
adc
inc
sub
adc
push
mov
int
repz
push
out
jl
iret
push
cmp
sbb
aaa
pusha
mov
sbb
mov
test
stos
dec
ret
mov
mov
enter
rclb
jmp
jle
cmpb
movsl
imul
mov
pusha
and
out
xchg
mov
ljmp
leave
push
or
or
sbb
fwait
xchg
lcall
jle
aam
loop
dec
dec
and
mov
mov
add
les
pop
add
sub
fbld
xchg
mov
pop
repnz
xchg
mov
xor
sbb
adc
push
push
data16
nop
inc
xor
mov
mov
cmp
cli
push
shr
dec
ja
sti
fs
or
test
sahf
out
xchg
stos
pop
lock
push
xor
xchg
insb
test
cli
xor
cmp
imul
js
adc
inc
ss
inc
cwtl
data16
ret
mov
cmp
mov
cmp
jl
out
pop
xor
and
push
nop
enter
ror
int3
movsb
enter
gs
adc
and
loope
push
and
cmc
scas
xchg
loopne
and
xor
inc
adc
push
lcall
cltd
clc
pop
xchg
icebp
mov
sub
pop
adc
push
sbb
das
adc
test
pop
fsubp
adc
xchg
inc
or
pop
pop
repz
mov
lods
rcll
mov
fbstp
mov
cmp
leave
sub
or
xchg
add
add
adc
int
push
fstps
inc
call
subb
pmaddwd
ret
inc
nop
lods
dec
sub
mov
and
loop
jns
mov
mov
mov
test
mov
pushf
pushf
mov
lret
icebp
push
je
int3
or
adc
repnz
sbb
sbb
push
xchg
outsl
sbb
mov
test
addr16
mov
sbb
lock
dec
or
jae
fcmovnbe
shrl
int
into
cmp
call
ljmp
jne
andb
jl
fnstsw
xchg
adc
dec
or
mov
fsubrl
pop
iret
add
arpl
imul
imul
in
addr16
fimull
inc
cli
jae
rorl
lcall
xor
hlt
cwtl
stc
push
shrd
or
ret
call
adc
int
add
inc
adc
sbb
adc
fs
jbe,pn
xor
in
pusha
adc
push
lods
lods
scas
inc
push
xor
sub
inc
mov
push
sbb
movsl
jae
sub
out
popf
in
xor
lcall
inc
popf
lea
jbe
or
ja
into
push
sub
in
mov
xchg
js
jb
jl
nop
iret
stos
cltd
lods
inc
mov
out
mov
jge
jb
and
repnz
xor
lahf
adc
and
or
jae
jp
lcall
jg
rcrb
mov
pop
add
popf
pop
push
mov
shl
fcoml
dec
pop
adc
movsl
mov
add
mov
sub
in
in
dec
shlb
xor
fnstcw
push
adc
aas
in
iret
inc
cmp
lret
push
les
idiv
mov
scas
sbb
push
cld
out
xor
ja
add
mov
js
sub
and
xor
popa
push
jecxz
movsb
inc
or
push
test
fsubrl
jnp
enter
lds
mov
out
lods
pop
jb
add
aaa
push
clc
insb
xchg
adc
nop
out
lahf
mov
insb
dec
inc
and
aas
mov
push
or
sti
pop
xchg
push
jle
sbb
mov
lods
inc
in
les
or
jbe
fisttpl
sub
es
aaa
push
lcall
insb
jp
mov
lds
mov
jg
mov
sti
inc
and
pop
add
leave
dec
sub
lret
push
loopne
cmpxchg
data16
sbb
pop
clc
mov
inc
xlat
cmp
mov
add
sbb
xchg
int
dec
enter
cmp
ret
lods
push
sbb
rcrl
test
cltd
jl
lcall
js
out
inc
mov
pop
insb
xlat
imull
push
inc
in
mov
push
out
negb
cmp
rorl
and
mov
push
xlat
in
pop
xchg
and
daa
arpl
sub
pushf
cs
mov
sub
inc
dec
xor
sbb
pop
jge
inc
and
or
xor
dec
cmp
pop
call
dec
adc
nop
xor
int
cmp
push
push
fstl
adc
sti
aam
xchg
dec
xchg
pop
inc
ja
inc
inc
andl
pop
sub
pop
inc
add
xchg
inc
xor
adc
or
std
js
in
xor
jo
mov
or
sbb
xchg
xlat
jnp
jmp
and
lods
pop
pop
fisubrl
xor
loopne
xor
cmpsl
push
fnsave
sahf
or
imul
shll
aad
push
movsl
push
pop
icebp
mov
cmpsl
adcb
jnp
inc
scas
adc
dec
dec
std
les
repnz
jbe
imul
bound
lahf
arpl
hlt
arpl
out
jecxz
mov
int3
es
jnp
ds
cli
mov
pop
cmc
xchg
inc
and
jnp
int
cli
stos
dec
mull
push
icebp
pop
in
sbbl
and
add
xchg
test
push
push
pop
or
jle
add
add
push
movsl
mov
mov
mov
out
cmp
lock
lods
fisttps
adc
std
pusha
pushf
in
ret
aad
cmp
imul
fildl
out
fidivrs
adcl
cmp
xchg
fcmovne
cmp
std
push
pop
dec
dec
sub
imul
shll
movsl
jge
push
sbb
jo
repnz
cwtl
mov
jmp
or
mov
lods
pop
and
stos
divl
fsubrl
jl
or
ret
fstps
push
cmp
repnz
push
gs
rcl
adc
add
dec
mov
sbb
ja
mov
add
in
adc
das
aaa
addr16
or
loope
mov
bound
sub
stc
pop
insl
aas
mov
rorl
fldenv
xor
sub
xchg
cld
test
dec
push
and
out
and
pop
and
sbb
sbb
and
fwait
lods
dec
mov
mov
add
sub
lock
add
adc
pusha
push
push
pop
adc
fwait
pushf
leave
lods
mov
inc
cltd
sub
mov
repnz
jbe
sub
jae
outsb
repz
or
imul
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
jecxz
shll
inc
dec
mov
and
repz
jmp
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
jecxz
jns
ret
mov
jecxz
repz
sub
sbb
sbb
push
mov
push
jmp
data16
or
jns
dec
out
push
test
es
push
test
jbe
data16
or
jns
dec
out
push
test
inc
clc
xor
cmpsl
or
cli
popa
negb
pop
dec
out
or
dec
add
loope
lods
shr
and
xchg
jp
mov
push
out
xlat
imul
push
arpl
stc
inc
outsl
pushf
stos
std
stos
jmp
sahf
mov
sub
pop
shlb
stc
jge
xchg
or
call
pusha
rcr
leave
call
dec
and
insb
xchg
lret
push
and
cmpsl
push
push
rolb
into
jns
jmp
insb
fsubrs
jns
in
mov
loope,pt
lock
out
jle
jae
data16
popf
add
leave
cltd
daa
outsb
lods
xchg
push
and
mov
stos
mov
jmp
addr16
leave
sub
sbb
imul
pop
push
test
es
push
jmp
data16
sub
call
adc
shlb
and
adc
ret
sbb
and
rorb
cld
sbb
lahf
jns
loopne
test
aad
xchg
jns
dec
out
push
test
es
push
jmp
data16
or
jns
dec
out
push
test
es
push
jmp
data16
in
adc
add
and
aaa
adc
jae
push
addl
jo
cmc
out
pop
outsb
or
jle
sarl
scas
hlt
rcrl
jbe
or
test
mov
jp
or
out
cwtl
xchg
inc
lahf
push
sub
jle
xchg
or
mov
fisubs
cld
mov
sbb
pop
pop
lea
popf
jmp
mov
xor
mov
mul
sbb
fdivl
dec
dec
fdivrs
shr
xor
aas
ret
stc
inc
daa
lret
jp
mov
adcb
xchg
cmpsl
mov
jb
push
mov
shlb
xchg
data16
test
adc
dec
pusha
and
mov
cmp
js
xchg
mov
mov
or
push
xchg
icebp
enter
xor
dec
or
dec
xor
out
mov
fadd
adc
mov
push
pop
sub
mov
inc
inc
sbb
cmc
pcmpgtw
mov
mov
xchg
ret
add
sahf
rolb
and
cld
lods
roll
sub
arpl
push
pop
loope
push
jg
imul
int
adc
inc
sbb
xor
mov
pop
pop
jnp
scas
mov
fwait
lahf
out
mov
ret
sub
sbb
test
xchg
jp
sbbl
std
add
add
inc
sbb
cmp
mov
dec
jae
imul
lods
dec
nop
push
loop
xor
inc
fcomps
dec
sbb
mov
testl
dec
enter
fs
dec
pop
lock
aam
iret
mov
inc
mov
fwait
push
imul
jo
fsts
repnz
pusha
push
lret
dec
mov
mov
mov
es
adc
into
stos
in
jge
inc
xor
push
fisubl
dec
mov
xchg
pop
lcall
add
scas
scas
repz
call
cmp
out
push
stos
mov
popa
adc
push
addr16
xchg
add
xchg
gs
repnz
xor
jg
push
mov
lahf
add
je
sar
outsb
cmpsb
jge
iret
sbb
sti
icebp
jns
xor
adc
dec
xchg
inc
cmp
rep
fwait
data16
mov
lret
mov
ret
pop
mov
dec
das
inc
mov
aaa
jmp
cltd
push
xor
ror
sub
fmull
pop
and
jnp
xchg
sub
call
imul
pop
cmpsb
or
int3
cmp
adc
push
pop
repz
shlb
int
dec
jae
xor
push
fwait
add
shr
xor
stos
adc
ja
mov
mov
fnstcw
and
push
sahf
xor
xor
inc
xchg
xchg
cwtl
mov
sbb
into
jae
data16
pop
clc
jns
dec
lods
push
pop
decl
adc
int3
xor
ret
xor
cmp
or
inc
xchg
mov
nop
fdivs
in
imul
mov
int
cmp
pushf
mov
ret
shll
mov
ljmp
andl
jns
xor
cmp
mov
addr16
fsubrs
mov
sbb
insl
stc
sbb
adc
call
mov
dec
push
cwtl
lret
inc
and
xchg
into
clc
or
outsb
loopne
imul
sbb
mov
out
jge
cmp
pop
std
test
inc
shl
jnp
cmc
mov
lret
test
notl
gs
mov
jp
sbb
loop
dec
ljmp
jb
aam
inc
push
orb
sbb
dec
int
push
inc
shlb
stos
icebp
mov
jnp
clc
adc
int
repz
aam
cwtl
rcrl
xlat
push
clc
sbb
xor
insb
popa
scas
xchg
aas
dec
or
sub
pop
mov
ja
out
add
js
mov
dec
cld
push
ret
mov
iret
lea
cld
jmp
outsl
mov
adc
inc
out
cmp
int3
push
clc
dec
cmpsb
fcmovne
sbb
repnz
scas
mov
jno
dec
test
loop
shlb
mov
test
out
into
out
hlt
sub
cmp
in
iret
loopne
imul
pop
pop
sbb
push
scas
ret
mov
ja
cmp
orb
int
pop
inc
mov
les
cmp
lods
fnsave
jmp
dec
sbb
inc
repnz
cmp
int3
cmpsb
push
mov
lds
flds
popf
pop
and
stos
pop
jnp
ds
dec
or
mov
push
xor
stos
outsl
xor
pop
mov
xlat
xchg
jnp
imul
sbb
in
adc
mov
cmpsl
ficoml
mov
enter
sub
push
add
test
lret
fcompl
aam
cmpsb
xchg
adc
sub
push
sub
ja
mul
lods
push
pusha
mov
dec
test
add
int
push
xchg
cwtl
imul
movsl
dec
inc
push
sarb
data16
je
push
or
pop
adc
je
lret
fists
jg
cmp
inc
dec
jecxz
ds
sub
push
xlat
lods
ja
ret
repnz
dec
js
stos
mov
loope
mov
icebp
cmp
and
xchg
sub
int
pop
aam
xchg
inc
mov
push
nop
cmp
icebp
repz
mov
xchg
and
push
mov
test
and
cmp
ror
dec
sub
mov
pop
mov
ljmp
bound
xchg
jle
mov
scas
aaa
sbb
jne
xor
arpl
lods
hlt
mov
pop
aaa
cmp
sbb
retw
imul
mov
mov
in
mov
aad
dec
stos
loopne
or
repz
mov
jge
push
jl
jnp
addr16
jae
fs
in
sti
or
fimuls
and
adc
mov
inc
fdivl
idiv
fsts
lret
and
int3
test
test
dec
loop
dec
cmp
les
xchg
mov
insl
subl
ss
push
adc
cmpsl
add
xchg
aaa
xchg
add
dec
jns
xor
mov
rcrl
dec
aad
imul
dec
sbb
jmp
dec
or
pop
popw
mov
lcall
xor
repz
aad
dec
loope
xchg
xchg
xchg
lret
jae
jge
out
shlb
lahf
cmpsl
dec
sbb
jg
mov
leave
pop
jg
out
aaa
mov
push
xchg
mov
xchg
mov
add
and
test
or
sti
cmp
lea
cmp
xchg
mov
xchg
push
adc
mov
cmpsb
gs
push
jbe
pop
popa
or
inc
fldenv
shrb
lods
dec
insl
inc
inc
and
rorb
xchg
or
icebp
js
subb
push
and
stos
cmpb
xor
aaa
imul
jle
mov
out
mov
or
cmp
jge
ljmp
fdivrl
sbb
mov
lcall
sbb
test
inc
add
xchg
mov
mov
loope
sub
cld
ret
cli
mov
into
xchg
insb
or
lock
gs
push
cli
mov
push
jns
aaa
gs
outsb
mov
popf
enter
iret
int3
fsubs
lret
push
xchg
jno
mov
insl
dec
in
xor
out
stos
sbb
jle
sti
ja
and
sub
fnsave
xor
nop
test
xor
nop
out
mov
jl
mov
in
push
adc
sbb
xchg
imul
scas
mov
loope
scas
push
loop
rcrb
sbb
or
mov
mov
jbe
aas
loope
addl
stc
or
in
addr16
push
push
jb
mov
lea
and
jns
pop
rcrb
std
inc
adc
mov
nop
cli
es
sbb
pop
mov
push
loopne
jbe
push
dec
jb
or
js
fdivl
sbb
pop
dec
dec
hlt
pop
mov
inc
leave
cli
notb
jle
loop
cmpsl
and
adc
lock
hlt
mov
cmp
std
inc
in
fisubrl
dec
movsb
push
sbb
sbb
jnp,pn
or
jmp
sbb
lret
cmp
sub
lcall
fstps
jae
rolb
ret
icebp
cmpsb
push
mov
pop
insl
orl
cmpsl
mov
push
lahf
mov
add
sbbb
inc
out
sub
sbb
and
mov
in
imul
xchg
bound
jne
inc
and
cmpsl
xchg
lret
mov
jl
or
js
int
ds
data16
es
jne
in
arpl
fadd
mov
xchg
xchg
ficompl
xchg
addr16
lock
test
rol
mov
outsl
jle
cli
adc
xchg
jae
push
pop
adc
addr16
or
cmp
sbb
cmp
inc
cld
fld
and
push
jge
and
and
in
push
mov
iret
neg
mov
xorl
mov
sbb
xor
or
aad
paddsw
jbe
imull
rorb
iret
cli
mov
mov
dec
leave
dec
inc
mov
push
add
xchg
aam
mov
inc
and
aam
or
xchg
lods
dec
mov
or
sub
add
call
push
inc
cmpl
dec
xchg
pop
add
mov
lcall
arpl
inc
dec
xchg
jo
jns
iret
jl
mov
fildl
lods
mov
fsubs
mov
ret
daa
push
sub
rorb
lret
addr16
adc
cmp
xor
push
mov
mov
xchg
add
rcr
and
pop
iret
movsb
jbe
dec
xchg
jg
dec
inc
xchg
sti
mov
data16
pop
and
inc
adc
test
push
sub
js
in
bound
daa
in
loopne
js
das
mov
sub
or
sbb
add
sub
inc
add
adc
arpl
hlt
imul
xchg
cmpsl
das
int
push
ret
sbb
push
sub
shrb
icebp
dec
jp
int3
jle
sbb
mov
sbb
inc
adc
add
aaa
call
jns
mov
inc
mov
test
mov
out
dec
cmpb
jmp
repz
ret
sbb
in
leave
xchg
sbb
mov
and
adc
inc
push
aas
pop
inc
xor
push
clc
mov
mov
jne
leave
sbb
leave
fidivs
pop
inc
ret
movsl
fwait
mov
repz
jle
cmp
sbb
ljmp
loope
cmp
jnp
js
xor
or
and
ss
push
jno
push
cmp
pop
jp
push
lea
add
ds
and
xor
push
in
pusha
int
repnz
notb
pop
dec
lods
add
and
ljmp
xchg
mov
fistps
and
adc
push
mov
push
adc
push
add
mov
and
adc
xor
add
dec
ja
xchg
xchg
sbb
pop
adc
cmp
nop
xor
lret
inc
mov
pop
push
add
sub
or
and
lds
mov
lea
pop
into
ljmp
jbe
push
lea
dec
insb
rep
fildl
ret
mov
jg
xchg
mov
pop
je
stc
rcr
pop
push
incb
into
sbbb
dec
scas
sbb
xor
mov
pop
popa
test
cmpsb
test
adc
dec
jae
loope
sti
mov
stc
add
js
jmp
push
filds
xchg
dec
aaa
mov
iret
sub
inc
jbe
mov
or
out
pusha
insb
or
pop
xchg
loopne
jmp
negl
pop
cmp
sbb
dec
fsub
pop
adc
sbb
fwait
push
sbbb
aad
incb
cmpsl
popa
insb
mov
ja
mov
stc
or
inc
jb
adc
cmp
mov
fistps
in
fnstenv
jl
popf
sbb
int3
repz
cmp
jmp
cmpl
scas
sbb
jnp
cmp
enter
push
leave
in
push
ss
mov
jno
mov
pop
cmpsl
xor
imul
cmp
fisttpll
loop
xor
xchg
push
cmp
fdivrp
pop
cmpsl
fptan
jnp
roll
pop
lcall
mov
pop
add
cmpsb
adcl
subl
imul
jp
pop
lcall
jle
out
out
lcall
leave
push
scas
jb
lret
cmp
fcomps
pop
dec
xor
pop
mov
rcrl
cmc
lea
sub
or
lock
rolb
jae
or
mov
ja
mov
sub
push
pushf
enter
pop
jecxz
sub
cli
or
lods
hlt
pop
movsb
repnz
mov
mov
mov
mov
dec
mov
mov
cli
je
leave
mov
mov
stos
push
pop
mov
adc
add
addl
add
mov
loope
fistpl
in
int
or
bound
shl
rol
repnz
outsl
bound
inc
test
insb
xor
xchg
sub
sub
push
test
std
xchg
adc
int
cmpsb
test
xchg
adc
loop
divb
lods
adc
xchg
push
cmp
dec
repnz
push
andb
roll
xchg
dec
cmp
adc
js
xchg
xchg
mov
lds
dec
cmp
jnp
xor
test
sbb
jne
cli
movsl
mov
imul
mov
inc
dec
notb
mov
out
mov
outsb
lret
sub
dec
sub
je
fxch
inc
fwait
add
sub
or
hlt
call
inc
jp
mov
js
js
aam
jl
mov
jae
mov
adc
push
aaa
adc
push
lods
shlb
imull
daa
xor
sbb
lods
mov
lret
int3
ljmp
fsubl
movsl
mov
imul
sbb
decl
mov
xchg
mov
icebp
dec
loopne
mov
inc
fld
inc
arpl
cmp
sub
cmpsb
xor
sub
movsl
push
jl
dec
sbb
cs
test
xchg
fists
pop
jp
add
das
call
adc
ficomps
cltd
icebp
dec
jmp
mov
into
insl
mov
inc
aaa
stos
in
rolb
mov
mov
int
mov
push
ds
sub
sbb
xor
mov
xor
hlt
xor
aad
cli
mov
rcll
sbb
ror
shlb
jl
jp
ret
fcom
ss
cmp
xchg
mov
cli
inc
popf
mov
add
rolb
hlt
push
popa
cmp
sub
ret
xor
pop
clc
cltd
mov
cmp
sbb
fs
pop
xor
mov
test
ret
or
iret
xor
sbb
add
sbb
fwait
push
jb
fwait
sub
push
sbb
pop
or
dec
add
mov
dec
cld
xchg
lcall
outsl
gs
push
or
ljmp
pop
cmp
pop
int
xor
adc
stc
jge
sbb
fsubr
out
jecxz
inc
and
outsl
jge
test
jno
mov
jmp
mov
mov
pop
arpl
cmp
cli
dec
scas
clc
sbb
add
movsb
cwtl
mov
sub
repz
cs
mov
xchg
lret
ja
mov
loope
repz
push
sbb
outsl
ss
push
xchg
cmp
fnstsw
fidivl
fs
xchg
mov
pusha
cltd
jno
sub
dec
les
adc
xchg
fcompl
mov
jecxz
pop
pusha
fadds
inc
je
cmp
mov
out
push
xorb
jne
mov
mov
sbb
inc
inc
mov
sbb
xor
js
fsubrl
sub
ficoml
je
inc
ljmp
mov
push
mov
inc
jle
mov
sbb
mov
mov
repnz
adc
push
clc
mov
call
xchg
lcall
fsubrp
outsl
outsl
neg
jle
pop
mov
mov
int
in
push
jnp
stos
or
into
movsb
out
adc
lcallw
cmp
cmp
add
or
add
dec
sbb
mov
scas
inc
sti
popf
dec
aaa
enter
loopne
imul
mov
pusha
cwtl
ror
fs
hlt
pop
cmc
jmp
fs
mov
scas
pusha
addr16
out
cld
loop
inc
dec
lds
jne
sub
inc
mov
mov
sub
xchg
mov
sub
xor
or
and
lods
test
jnp
dec
pop
adc
ret
stos
pop
ljmp
xor
rcll
sbb
lret
adc
clc
add
dec
mov
pushf
aam
loope
mov
cmp
mov
stos
mov
xchg
movsb
or
jo
icebp
mov
jp
adc
fldenv
pop
aaa
outsl
int
popa
pop
mov
xchg
adc
shlb
jno
insl
jb
hlt
out
daa
mov
loopne
cwtl
mov
div
pop
push
add
lods
divb
imul
flds
inc
mov
adc
mov
fdivr
cmp
out
and
idiv
xchg
flds
clc
idivl
mov
stc
xor
adc
movsb
push
and
cmp
jmp
inc
add
pop
xor
dec
jbe
mov
or
and
out
fsubs
adc
mov
jne
or
test
out
aas
and
ret
push
out
test
xchg
sub
push
sbb
fs
xchg
aam
push
gs
inc
scas
ljmp
imul
or
dec
or
push
dec
adc
es
push
mov
or
push
fimull
loop
stos
cld
mov
and
and
sbb
inc
notb
push
int
test
mov
pusha
inc
cli
lods
addb
std
movsl
push
arpl
shl
jnp
test
xchg
dec
jg
fisubrs
mov
push
push
jmp
out
lds
push
fstpt
xor
aad
pop
insb
std
sbb
cltd
add
sti
in
das
fcomp
jns
xchg
or
test
add
pop
out
adc
xchg
or
pop
mov
lahf
fisubrl
mov
fwait
pop
push
arpl
adc
bound
xor
cs
pop
pop
jge
dec
fs
popf
mov
cmp
jg
cmp
pop
into
das
daa
stos
jg
add
stos
addb
sub
jns
xchg
push
mov
cli
push
ljmp
mov
cltd
jp
add
xchg
sub
inc
ds
and
cmp
fdivrp
out
and
in
pop
loopne
pop
cmp
addr16
inc
mov
jae
int
fldcw
and
stos
or
imul
mov
lds
mov
and
add
pusha
clc
push
cmc
jne
xchg
mov
inc
adc
jne
vpcmpeqw
jg
sbb
out
inc
sbb
test
sbb
mov
and
push
push
mov
ret
and
js
mov
lahf
popl
cmp
and
xlat
adc
lret
sahf
enter
mov
je
dec
or
movsb
ljmp
outsb
aad
lret
call
fiaddl
dec
loope
mov
pushl
andb
idivl
lods
mov
inc
sub
out
fstp
push
sahf
dec
add
aas
and
mov
fisttpl
or
jecxz
inc
dec
xchg
or
push
and
les
mov
mov
pop
int
xchg
popf
inc
inc
jge
imul
fiadds
push
mov
push
scas
cmc
xchg
shl
into
mov
icebp
movsb
cld
out
ljmp
xchg
mov
mov
xor
leave
adc
imul
aad
pop
lea
pop
mov
mov
aam
sub
pop
shl
mov
xchg
and
out
lahf
or
xor
pop
mov
inc
add
int3
aad
scas
adc
sti
mov
cmp
jl
loope
mov
add
leave
mov
call
scas
mov
sti
add
xor
call
fwait
popl
mov
pop
pop
fcmovne
push
push
je
jmp
dec
mov
pop
aad
xchg
cld
pop
adc
mov
imul
mov
mov
or
cli
out
xchg
add
stos
pusha
adc
mov
sbb
mov
add
mov
fcompl
xchg
sbb
dec
pop
and
xor
sbb
imul
pop
push
test
es
push
jmp
data16
or
jns
dec
out
push
test
es
push
jmp
data16
or
jns
dec
out
push
test
es
push
jmp
fsts
cmp
imul
pop
push
test
es
and
push
mov
cltd
outsb
nop
and
adc
add
imul
loopne
sahf
sub
icebp
scas
movsb
or
push
movsb
inc
aam
les
nop
and
and
add
je
rclb
mov
xor
hlt
xor
les
nop
cmp
mov
dec
lock
loopne
adc
dec
fistl
test
pop
inc
fsubl
pop
jecxz
lds
das
addr16
cld
pop
imul
fstps
xor
xor
test
sub
movsb
js
push
add
imul
xor
cmp
dec
xor
cmp
inc
sub
adc
les
jnp
or
add
movsl
notb
jno
mov
in
int3
call
mov
xchg
add
fstpt
dec
jo
and
movsb
das
inc
mov
pop
adc
pop
add
push
pop
sbb
aam
and
pop
push
mov
mov
outsl
imul
test
xor
hlt
adc
les
adc
adc
push
lock
loopne
adc
in
push
cld
inc
aam
frstor
inc
nop
inc
stc
jno
pusha
loope
xchg
or
pusha
movsb
sbb
arpl
push
cwtl
and
pop
mov
mov
in
jno
push
ret
add
add
mov
movsb
jb
push
icebp
jb
xor
les
aad
fmuls
rclb
mov
movsb
add
in
aam
les
nop
and
adc
add
je
rclb
mov
movsb
add
in
aam
les
nop
out
dec
fildll
and
sbb
lcall
testl
imul
dec
pusha
ljmp
mov
rcrl
call
fisttpll
push
and
loopne
fisubrl
dec
jle
add
push
mov
cmp
les
sbb
imull
movsl
dec
push
push
cmp
inc
lods
dec
cs
add
lods
outsb
call
sbb
pushf
mov
mov
sarl
adc
mov
cmp
xchg
jae
push
sbb
xor
mov
movsl
popa
sub
dec
dec
mov
hlt
pop
lods
sub
xchg
jb
lds
andl
xor
out
cs
sub
divl
mov
jp
pop
push
sub
sub
cli
lahf
imul
addr16
ficomps
arpl
mov
sarb
test
xor
adcb
mov
or
or
ds
addl
xor
mov
leave
in
mov
mov
imul
inc
ss
mov
notb
idivb
mov
test
lods
xchg
pushf
pop
adc
shll
inc
cmp
test
sbb
sbb
enter
push
jecxz
jl
and
std
jo
bound
rclb
loopne
lret
or
out
lret
dec
sub
stc
pop
mov
ss
in
out
ss
dec
jl
faddp
inc
addl
push
pop
es
dec
xor
inc
pop
mov
push
popa
push
les
cmp
fdivrl
clc
loop
shlb
addr16
sbb
loop
mov
mov
cmpsb
mov
mov
loop
sub
mov
push
xchg
and
addr16
sub
lahf
jae
mov
adc
adc
xor
jl
mov
add
inc
push
and
out
pop
pop
xchg
popf
insb
pop
mov
sbb
adc
adc
std
mov
ficoms
sub
addb
gs
jnp
mov
addr16
push
out
mov
jne
clc
sub
xchg
sub
les
jno
xchg
sub
cli
pusha
adcl
loope
xchg
dec
dec
sbb
mov
nop
movsl
cmp
into
cmc
pop
gs
and
xor
sarl
stc
ficoms
push
lds
movsl
jl
sbb
call
lcall
aaa
jecxz
push
sti
aad
and
andb
out
les
fistpl
sbb
push
or
loop
jmp
popa
out
call
scas
pop
out
dec
cli
std
push
jae
and
or
lahf
ret
les
addr16
in
mov
mov
xor
push
cltd
pushf
sahf
mov
bound
push
jo
adc
out
jg
cmp
cltd
push
test
test
fdivs
push
mov
add
pop
adc
out
sbb
lahf
shlb
push
inc
push
push
cmp
pop
inc
ds
cmp
push
leave
je
or
jno
stos
pop
sbb
jge
xor
jle
adc
mov
int3
inc
add
enter
push
bound
lret
push
push
sub
mov
mov
out
sahf
jge
cmpsb
push
add
mov
and
xchg
pop
enter
ljmp
pusha
mov
jp
inc
push
inc
adc
mov
int
inc
stos
daa
xchg
leave
mov
movsl
sub
sub
lods
push
fs
sub
and
fimull
dec
jae
fprem
jecxz
rolb
dec
repnz
imul
mov
xchg
dec
andb
adc
sub
sub
pop
sahf
mov
add
arpl
aaa
xor
fsts
adc
push
sbb
shl
leave
mov
jmp
int3
lea
inc
dec
fwait
dec
aad
pop
and
je
inc
sub
insb
pop
repz
xchg
enter
je
xchg
ljmp
add
mov
dec
lahf
add
inc
mov
lret
imul
scas
in
je
mov
adc
cmpsb
push
aam
addl
inc
enter
lea
mov
mov
pushf
xchg
sub
xchg
outsl
in
dec
mov
enter
sub
scas
jg
xor
inc
mov
ret
xor
inc
stos
pusha
stc
or
cmp
xlat
jg
pop
push
push
ljmp
movsb
cmp
rolb
inc
mov
dec
nop
push
and
push
lock
xor
mov
iret
into
jns
aad
xchg
icebp
mov
jbe
and
mov
pop
or
test
add
std
push
mov
jl
pop
fdivs
and
xchg
mulb
dec
outsb
mov
xlat
xor
dec
xor
stos
aam
and
fdivs
xor
inc
sub
cmc
pop
test
out
rdtsc
addl
add
lret
stos
fucom
mov
mov
andb
jno
ljmp
sbb
bnd
mov
jecxz
lahf
fsubl
inc
mov
decb
jbe
test
in
imull
ret
xor
pop
cpuid
xor
inc
and
mov
scas
and
and
ret
in
jne
or
lods
lock
xchg
mov
out
and
jl
call
inc
fwait
mov
lea
rol
fcoml
mov
pop
dec
xor
cwtl
jnp
aam
call
sti
ljmp
cli
loopne
push
push
andb
fdivrs
iret
xchg
clc
test
gs
loop
jge
or
cmp
insl
fs
pop
dec
rcrb
rcl
lcall
sbb
bound
xchg
dec
out
add
xchg
call
scas
mov
outsl
into
push
movsl
scas
xor
out
inc
jg
mull
cmp
out
cmpsb
loop
xor
mov
insl
pop
ljmp
in
cmp
movsb
mov
movsb
jb
mov
adc
adc
jle
jns
and
inc
mov
lods
mov
cwtl
xchg
mov
and
lahf
cmp
add
or
in
mov
ds
mov
mov
xor
xor
push
cmp
xor
add
in
or
aam
adc
std
aam
sub
inc
mov
cmp
dec
call
pop
test
and
cmp
or
jecxz
fisubl
icebp
add
roll
sbb
ror
lahf
mov
jmp
cmc
int
movsb
or
mov
callw
sbb
adc
inc
dec
adc
and
xchg
sbb
jge
cmp
in
out
push
inc
jb
fildll
outsb
or
add
jne
in
inc
inc
leave
adc
adc
add
lret
dec
jp
mov
cmp
fcoml
andb
cmp
or
icebp
xchg
clc
cmp
loop
mov
jge
pop
fwait
sbb
jl
sub
pop
push
jg
sub
inc
push
or
insb
pusha
sub
inc
outsb
jecxz
jnp
lahf
xor
cmp
pop
fists
aam
movsl
and
adc
inc
icebp
fnsave
or
pop
ret
pop
inc
ljmp
ret
mov
test
push
in
pop
iret
or
push
out
add
cwtl
jmp
lds
outsl
sti
or
xchg
ljmp
jae
lods
push
xchg
sarb
popf
sahf
outsl
sub
popf
add
ja
fsubr
xor
xchg
xchg
jne
and
or
lods
mov
or
jne
xchg
push
movsl
enter
jmp
scas
das
add
and
std
ds
fs
js
popa
hlt
aad
push
xchg
xchg
jnp
es
arpl
jae
dec
movsb
mov
arpl
fdivs
adc
inc
and
mov
icebp
pop
arpl
mov
jmp
mov
xor
pushf
jb
push
sahf
or
mov
test
hlt
adc
lock
and
notl
xor
insb
nop
dec
or
pop
pop
mov
loop
dec
mov
push
xchg
xorl
loope
add
movsl
push
cmc
stc
insl
mov
test
cmp
add
sahf
scas
loopne
les
add
mov
mov
jne
ja
stos
data16
sbb
cmp
and
fbstp
mov
add
cmp
fldl
push
xchg
mov
mov
mov
and
push
outsb
aaa
les
filds
push
lock
inc
rcl
insl
out
mov
scas
or
stos
push
cmp
inc
fdivr
test
aas
cltd
cmp
push
std
mov
xchg
daa
dec
pop
ret
lds
inc
jns
inc
into
imul
sbb
adc
pop
mov
mov
loop
add
in
ja
xor
lahf
or
cmp
jmp
xor
jmp
jnp
addr16
or
dec
sub
mov
sahf
and
leave
cmc
loopne
pop
lods
fsubs
mov
cmp
test
dec
cli
ret
rolb
mov
jo
imul
lock
das
jmp
jge
pushf
mov
mov
ljmp
cmp
adc
movsb
jns
push
cmp
out
push
cmc
dec
or
lahf
movsb
cltd
rcpps
sbb
stos
cmp
in
jl
insb
idivb
repnz
and
out
scas
fsub
test
fimuls
je
lcall
outsb
add
sub
fcomps
aam
insl
idivl
xor
push
fcoml
mov
jae
hlt
and
jl
loope
fmul
outsl
jge
mov
xor
dec
xor
idivl
loopne
fstps
push
mov
nop
add
xchg
and
sub
adc
loopne
out
sbb
mov
dec
mov
aad
ds
push
aad
add
testb
sarb
push
jo
hlt
inc
sbb
addl
aas
and
xchg
out
stos
fistpll
jae
push
movsb
in
sarl
xchg
adc
xor
mov
loope
fildl
leave
cmp
cmpsb
fwait
jle
inc
aam
arpl
fnsave
sbb
push
mov
es
dec
popf
adc
push
jns
lret
xchg
sub
cli
push
cwtl
mov
cmpsl
dec
adc
jp
lahf
ja
adc
lret
mov
popf
xchg
addl
cmpsb
pop
xchg
pop
push
clc
scas
popf
hlt
inc
repz
dec
shll
push
out
jbe
ljmp
and
aaa
lcall
js
je
ret
lds
xchg
mov
call
inc
fistl
fisttpll
mov
out
sbb
cld
push
in
jl
sbb
dec
xor
jp
dec
jo
fstpl
das
mov
inc
add
add
dec
xor
and
mov
std
push
cmp
sbb
testl
int
and
xchg
test
pop
icebp
dec
push
or
push
ss
xchg
lods
fs
iret
fists
and
mov
cmp
push
loopne
fucomi
jae
push
enter
jne
ds
les
ds
shlb
mov
and
aas
cmc
jp
push
jmp
add
sbb
lret
stos
aam
mov
cmp
xchg
cmc
or
and
mov
jnp
pop
das
mov
adc
ds
mov
enter
std
sub
pop
sahf
pop
js
dec
push
mov
or
jae
insb
call
or
adc
arpl
jno
loope
test
lret
pop
xor
neg
aaa
mov
add
adc
mov
xchg
in
or
pop
movsb
dec
stc
lahf
pop
sti
das
xor
push
jmp
je
cs
in
jb
or
lret
lret
or
cmpl
sbb
nop
push
insb
out
ja
pop
dec
fcmovnu
mov
mov
adc
mov
mov
inc
ja
ja
sbb
mov
gs
mov
cmp
inc
les
stos
mov
cmp
imul
jmp
cmp
mov
arpl
adc
sub
pop
adc
mov
xchg
test
popf
mov
add
mov
popa
or
mov
std
and
aam
aas
sub
jne
and
fs
and
push
cli
xchg
adc
xor
jmp
cmova
and
outsb
and
xchg
xor
ficompl
push
xor
loop
pop
jp
adc
aad
sub
mov
testb
or
mov
push
mov
and
sbb
in
fwait
inc
pop
pop
lcall
cmpsb
shll
std
imul
mov
std
in
cmpsb
cmp
jl
mov
jge
outsl
pop
outsl
dec
cmp
xchg
loop
cli
outsl
mov
mov
out
xchg
cwtl
rolb
rclb
jg
lcall
iret
sub
mov
sbb
int3
lods
rclb
fsts
stos
pminsw
addr16
cltd
and
mov
mov
sub
adc
rcrl
gs
mov
push
call
pop
lods
lea
dec
outsb
inc
rcrb
aad
mov
daa
arpl
lcall
jg
loope
inc
or
sub
xchg
loop
in
and
cmp
mov
sbb
xchg
aas
orl
mov
sbb
fcomi
dec
add
iret
mov
das
in
je
sbb
scas
loopne
adc
mov
inc
and
test
sbb
shl
pop
jmp
jecxz
adc
and
push
aam
xor
inc
pop
cs
or
iret
ds
ljmp
sbb
push
and
adc
fcoml
mov
add
push
or
adc
push
or
dec
add
add
test
adc
mov
push
pop
cmpsl
dec
xchg
test
mov
mov
dec
in
pop
and
jge
lcall
lcall
mov
push
mov
sub
int3
lods
push
cwtl
daa
xchg
shll
loope
push
insl
dec
jecxz
cltd
or
push
bound
fistpll
les
add
rcr
dec
test
bound
and
xor
adc
mov
xor
xor
mov
inc
es
jno
mov
push
xchg
ljmp
xchg
mov
mov
call
mov
ss
push
xchg
cmp
cmp
dec
into
xor
dec
add
dec
popf
int
jg
jg
mov
dec
scas
dec
xchg
lahf
sahf
add
lds
xor
call
sub
and
sarb
push
sti
push
mov
dec
push
lret
mov
and
mov
pop
mov
pusha
xchg
and
push
lret
xor
sub
pushl
idivb
imul
adcb
fstps
icebp
push
out
mov
mov
les
mov
test
mov
arpl
xchg
push
pop
das
push
or
int
out
stos
add
jno
pop
fwait
scas
testb
aad
cmp
xor
aas
jge
push
sahf
sahf
mulb
sbb
ret
cmpsl
out
lcall
data16
aaa
loop
push
sub
xchg
dec
or
xor
sub
in
cmp
mov
insl
mov
xlat
hlt
and
insb
cmpsl
cmc
imul
sub
rolb
xchg
xchg
push
js
hlt
push
jnp
pusha
mov
subb
lea
mov
mov
push
pop
adc
and
push
js
outsl
xor
push
pop
fwait
fs
xlat
or
mov
pushf
cmp
add
sub
roll
push
lcall
dec
push
into
movsb
pop
lcall
imul
add
insb
inc
insl
mov
inc
dec
scas
and
aad
pop
pop
mov
stos
lods
fisubs
lcall
ja
add
inc
sbb
push
or
in
jae
mov
cmp
repz
pop
in
pusha
adc
dec
dec
xor
push
add
data16
divl
jle
sahf
cltd
idivb
pop
lcall
aaa
cs
or
mov
popa
and
rolb
xchg
cld
scas
insl
adc
sub
loop
adc
cmp
sbb
sbb
cli
push
or
jp
inc
int
arpl
push
cwtl
inc
icebp
add
push
test
cmpsb
xor
push
xchg
sub
stos
and
inc
aad
fstpl
and
cmp
xchg
divl
repnz
mov
xor
mov
stos
mov
in
stos
add
sub
push
sar
add
fisubrl
push
cmp
sub
stos
and
mov
mov
aas
shlb
push
out
mov
repz
je
push
or
inc
mov
add
jnp
cwtl
inc
adc
rorb
imul
int
lcall
popa
mov
jno
imul
sub
lds
or
loope
or
aam
movntq
jne
mov
popa
push
arpl
int3
icebp
push
mov
pop
stos
stos
mov
adc
je
push
xchg
add
cmp
xchg
and
adc
addr16
jo
mov
and
jl
leave
cs
cli
cmpsb
pop
push
pusha
sbb
lahf
es
js
mov
out
shrb
jmp
dec
idiv
cld
cltd
inc
jecxz
push
or
aas
pop
mov
fisubrl
jp
add
addb
arpl
test
sbb
and
addr16
mov
push
mov
rorb
sarl
adcl
and
xchg
call
imul
jp
inc
sub
cmp
es
or
jo
stc
adc
and
xor
xor
popf
xor
mov
sub
fnstcw
fwait
lods
aaa
popf
mov
jmp
rcl
loop
sbb
pusha
add
cltd
mov
xor
xor
and
ja
inc
cld
insl
add
jmp
sub
xchg
xchg
sbb
shlb
pop
push
test
pop
jg
pop
cwtl
pop
xor
dec
mov
pop
xor
call
or
xor
mov
inc
test
loopne
cmp
and
out
dec
mov
inc
in
test
add
movsl
insb
mov
roll
pop
dec
push
sbb
repnz
mov
sbb
and
cmc
sub
mov
mov
jns
out
aas
fwait
jns
mov
enter
insb
sbb
and
mov
add
insb
loop
enter
mov
std
fistpll
adc
xchg
in
pop
jge
outsl
or
hlt
push
je
leave
push
inc
jg
test
es
fs
xorb
mov
inc
iret
pusha
mov
stos
pop
cmp
inc
xchg
jns
ss
ucomiss
stos
or
dec
xchg
arpl
adc
or
popf
pop
lods
popf
jns
and
lcall
movsl
leave
xchg
dec
jge
ja
mov
sbbb
xor
cmpsl
lret
stos
and
xlat
mov
popf
pusha
mov
dec
cmp
mov
add
in
jbe
xchg
push
repnz
iret
xorl
std
dec
push
inc
push
jae
and
dec
gs
cs
out
dec
call
mov
clc
aam
in
push
sti
les
or
adcl
xchg
idiv
into
imul
and
test
clc
mov
out
cld
dec
cli
sbb
ja
sbb
mov
paddd
inc
cmpsb
lret
fidivs
stos
cltd
cmp
inc
mov
js
or
pop
and
andl
pop
test
mov
fcmovnb
iret
and
jmp
out
jmp
daa
sub
add
jecxz
pop
mov
iret
lods
fsts
int3
arpl
ss
and
in
add
or
mov
push
xor
imul
mov
add
nop
inc
fsubrs
or
jo
jmp
fcoml
mov
shl
lock
testl
pop
je
scas
mov
in
cwtl
dec
sbb
movsb
ja
stos
cwtl
sub
ret
movsl
pop
jne
or
outsl
fucomp
pop
cs
or
dec
aaa
sub
or
call
nop
sub
or
enter
sub
mov
jge
inc
or
sbb
cmp
cli
fwait
movl
xor
mov
lret
out
cltd
sbb
sub
dec
js
mov
les
push
fnstcw
cs
jmp
mov
mov
pop
mov
lods
jo
mov
fstps
xchg
adcl
jae
es
ljmp
mov
adc
ja
xor
jl
cmp
std
neg
cwtl
and
or
mov
inc
push
hlt
push
push
sarb
das
or
stos
cli
nop
add
add
outsb
call
cmp
jl
sti
insb
in
inc
and
lahf
and
dec
mov
push
arpl
jb
jle
movsl
mov
mov
push
lock
loopne
adc
hlt
push
in
aam
les
nop
and
adc
add
je
rclb
mov
movsb
add
in
aam
les
nop
and
adc
add
je
rclb
mov
movsb
add
push
loopne
aam
cmc
pusha
add
add
je
fs
les
dec
adc
xor
sub
dec
mov
fucomip
repnz
sti
cmpsl
ss
jbe
inc
ja
and
addb
push
daa
out
xlat
test
not
out
xchg
mov
xchg
jbe
push
pop
push
pop
push
jne
daa
cmp
jbe
inc
notl
out
xchg
incb
lcallw
inc
and
aaa
addr16
push
push
jno
gs
cmpsl
xlat
cwtl
sbbb
subb
push
leave
jne
dec
and
loop
shlb
inc
aas
daa
in
andl
js
mov
out
mov
mov
jmp
addr16
jbe
out
movb
mov
sbb
push
repnz
mov
fsts
mov
scas
mov
cmp
xchg
mov
aaa
stos
jge
clc
adc
jmp
cmp
jb
sbb
xor
and
stos
adc
pop
ss
push
enter
inc
idivb
cmp
dec
or
ret
sahf
and
mov
and
es
test
idivl
xchg
push
in
sahf
ja
addr16
pop
sub
push
aaa
jb
xchg
mov
mov
xchg
xor
xor
pop
aaa
and
pop
je
xor
jle
xor
xlat
jecxz
shl
pop
das
aaa
xor
push
cmp
push
je
insb
jae
push
ja
sahf
lds
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
xor
ljmp
popa
and
out
mov
imul
xchg
xchg
mov
mov
popf
pop
popa
jne
icebp
pop
xor
mov
push
cmp
xchg
scas
enter
insl
jmp
mov
or
imul
fldt
stc
jmp
inc
rsqrtps
repz
mov
jmp
sbb
mov
xor
and
scas
repnz
and
push
mov
xor
ret
loope
jae
xor
fisttps
lea
add
lock
or
xchg
ret
div
cmpsb
mov
lods
jg
adc
dec
sbb
dec
ja
mov
xor
add
mov
repnz
in
dec
and
lea
sub
leave
data16
call
xor
mov
fwait
rorb
add
bswap
lcall
je
lahf
outsb
xorb
xor
inc
pop
push
sbb
loope
and
jb
push
mov
jno
test
sbb
sti
mov
js
lods
gs
call
sarb
mov
mov
and
adc
out
adc
in
cltd
add
loop
rcl
in
leave
jmp
shl
ds
push
jmp
and
gs
loope
jnp
xchg
sub
push
sbb
subb
push
cmp
daa
ret
inc
add
cs
push
movsb
jne
xor
out
cmc
cmp
sarb
aaa
push
cmp
movsb
call
mov
out
ficoms
mov
ret
adc
gs
fwait
std
andl
xor
push
pusha
insl
scas
lock
pop
pop
ret
fildll
repnz
les
and
dec
cmpsl
xchg
dec
and
or
sbb
leave
pop
ja
xor
or
and
scas
aas
fdiv
outsb
ficoml
ret
jl
dec
mov
in
shrb
dec
clc
mov
pminsw
push
stos
mov
loope
and
pop
inc
js
or
loop
jl
inc
and
fstl
insb
loop
or
jno
mov
fwait
sbbb
cmp
push
lret
cmp
mov
mov
adcl
cs
jnp
mov
push
jp
cmc
push
inc
clc
inc
loope
and
jg
das
jbe
repnz
enter
movsl
movsl
pop
and
es
adc
fwait
addr16
orl
xchg
add
cld
test
xlat
mov
jle
stos
cmpsb
fdivrs
fisttps
xor
in
pop
inc
mov
sub
ror
lea
pop
sbb
fdivrs
pop
rol
fcompl
addr16
iret
cmp
xchg
inc
add
xchg
sbb
adc
jle
stos
cmp
outsl
mov
jne
jp
call
mov
cmp
fiadds
pop
dec
fdivrl
clc
lods
or
xchg
pop
pushw
inc
inc
ror
jb
jg
lret
incl
adc
xchg
pop
mov
lahf
mov
dec
sbb
sbb
rorb
ljmp
add
sub
dec
imul
mov
jl
xchg
lret
sbb
mov
sbb
adc
push
je
rorb
imul
adc
and
cmp
sti
scas
pop
test
sub
add
mov
pop
cmc
inc
std
jb
adc
cwtl
popf
xchg
int3
outsl
sub
out
adc
outsl
mov
or
jmp
xorb
jecxz
cs
call
push
ret
sar
aas
rcrl
sub
dec
xlat
ja
adc
inc
add
mov
imul
std
fcmovbe
rorl
add
push
add
shrl
divl
add
test
imul
repz
movsb
push
lock
mov
dec
dec
push
add
inc
sahf
cmpsb
jmp
out
mov
loop
out
mov
mov
aad
mov
push
sub
lea
and
inc
mov
dec
mov
mov
mov
inc
cmc
nop
out
pop
aaa
xor
cmc
or
push
sbb
mov
sbb
dec
pop
cs
lahf
stos
pusha
cwtl
push
fsubs
push
dec
sbb
jge
int
mov
push
xlat
int
iret
test
cmpsl
mov
cmp
mov
pushf
incb
std
add
and
hlt
int3
inc
pop
ffree
mov
dec
xchg
popf
push
dec
sub
adc
testb
push
cmpsl
mov
push
leave
mov
js
cmpsl
cli
or
adc
or
pop
mov
sub
cmp
mov
aaa
cmpl
fsts
pop
lock
ljmp
fmuls
sbb
push
xchg
sub
es
stc
cmp
sbb
iret
push
sub
adc
sbb
sub
xor
mov
sub
add
push
incl
mov
and
es
mov
push
shrb
mov
inc
add
clc
mov
push
fsubrl
sarb
sub
or
mov
mov
nop
adc
add
xor
data16
fs
shlb
or
jle
add
sti
scas
insb
mov
jecxz
je
pop
xlat
or
int3
sub
into
cmc
xor
stc
notl
sbb
fdiv
sahf
pop
push
cmc
mov
xchg
or
in
dec
adc
xchg
loope
adc
mov
adc
dec
push
stos
add
pop
dec
mov
and
mov
lret
jno
ja
cwtl
fdivrs
add
addl
ss
cmpb
xlat
pusha
imul
mov
xchg
addl
push
sub
xor
fwait
imul
lods
mov
or
sub
popf
mov
sbb
lods
sub
xor
dec
pop
dec
test
xchg
das
or
sub
lcall
xchg
andb
pop
pop
jne
pop
mov
in
dec
dec
scas
inc
icebp
or
out
push
push
sbb
dec
xchg
mov
loope
dec
stos
popa
cld
sbb
and
fidivl
dec
dec
sub
fimuls
sarb
js
mov
inc
mov
cmp
push
mov
mov
cli
cli
add
or
outsb
mov
xchg
cmpsb
pop
popa
mov
jecxz
iret
add
dec
pusha
sbb
lahf
mov
fsubs
loopne
nop
das
jg
sub
shlb
cmp
je
lods
xchg
or
push
bound
push
cmp
iret
in
mov
push
or
pop
pushf
es
push
dec
pusha
mov
cmp
arpl
jo
stos
int3
mov
inc
push
hlt
sar
shl
ja
mov
ficompl
and
mov
fistpll
in
xorb
cmp
popf
add
enter
repnz
insl
mov
mov
out
loope
fidivrs
lods
loop
cmc
std
loope
push
shrb
movsl
xor
dec
jg
mov
shl
cmp
in
insl
cmp
xchg
xor
mov
loope
fdivs
mov
jle
ja
test
fisttpll
pop
stos
addl
in
cmp
lcall
fs
cld
sub
fidivl
pop
dec
fwait
daa
mov
push
cmp
push
push
push
add
in
adc
cmp
and
pushf
inc
pop
imul
arpl
dec
pop
bound
xchg
xchg
push
movsl
and
pop
fldcw
pop
js
ficoms
mov
int
mov
cmp
fdiv
push
imul
aaa
scas
pop
loope
scas
sub
cmpsb
and
and
js
or
scas
arpl
xlat
push
mov
cmp
cmp
movsb
mov
or
xchg
lcall
pop
dec
push
js
rolb
jp
add
sbb
in
daa
push
push
rcr
rcrb
xor
outsl
mov
sub
aas
nop
sub
cs
cmp
out
mov
xchg
xor
in
mov
mov
dec
xchg
pop
dec
lahf
rorl
sbb
ret
dec
sub
and
insl
add
in
or
mov
insb
jecxz
bound
xchg
adc
mov
pop
insb
je
pop
pop
adc
push
bnd
add
scas
xchg
sub
jne
push
lahf
out
push
inc
jno
add
add
and
into
mov
pop
jo
xchg
push
xchg
lods
test
scas
icebp
dec
sbb
loope
push
mov
stc
xchg
push
add
sbb
rcll
sti
in
jnp
ss
popa
push
les
lcall
lds
add
idivb
push
lret
shlb
lods
ja
scas
xor
mov
mov
ljmp
das
mov
xor
xor
mov
dec
je
mov
adc
jno
aaa
pop
sbb
adc
pop
scas
addr16
xor
add
xor
jp
sbb
mov
addl
pop
fs
inc
daa
fidivrl
lret
inc
add
into
pop
cmp
dec
xor
push
adc
fidivs
sbb
jnp
popa
add
scas
or
mov
sti
aaa
mov
add
dec
shll
push
mov
jmp
das
scas
sbbl
jns
sub
push
loop
addr16
insb
dec
cmpsb
or
mov
ss
xor
outsb
cmp
lcall
jmp
stos
sbb
into
and
ret
xlat
test
sti
insl
arpl
lcall
pop
stos
or
dec
jmp
jge
ret
dec
and
idiv
jmp
cmp
xor
xchg
fmul
gs
in
aaa
sub
or
mov
xor
push
dec
sub
sbb
sub
xor
fcompl
adc
pop
sub
mov
xchg
out
push
xchg
scas
inc
lods
and
cmp
jbe
and
xchg
sarl
mov
int
adc
mov
cmp
or
add
xchg
icebp
xchg
add
push
adc
int
mov
enter
or
in
dec
aaa
cmpsl
sti
popa
arpl
out
cmp
xchg
sbb
push
fdivrl
cld
aas
icebp
lahf
or
inc
cmp
mov
std
fisubrl
xchg
cwtl
inc
std
add
iret
imul
and
pop
ja
insb
inc
jne
cmp
xor
adc
mov
test
lock
imul
idivl
jmp
shrb
int3
sub
mov
insl
arpl
popa
cld
cwtl
aam
inc
push
lea
mov
jns
test
addps
insl
xor
orl
or
adc
pop
pop
lods
jle
xor
mov
aam
insb
fstps
inc
inc
repnz
ret
xorb
dec
pop
ja
mov
adc
ret
dec
nop
inc
int
out
xorl
jnp
jb
mov
stos
mov
out
inc
test
inc
pop
xor
or
pop
xabort
movsb
fstpt
add
les
notl
fstps
and
dec
xor
lahf
jnp
push
sbb
loop
fildll
das
daa
adc
jmp
lods
sarl
pusha
push
xor
sarb
and
and
add
cmp
jmp
mov
cmp
push
mov
shll
mov
cpuid
popa
repnz
mov
and
pop
int
rorb
adc
nop
jg
sub
add
in
cmp
xlat
fs
push
push
dec
xchg
mov
adc
jmp
inc
or
xchg
dec
inc
inc
popa
lahf
cmp
loopne
movsl
add
inc
dec
mov
in
sub
and
lahf
xchg
idivb
repnz
dec
cld
popf
popf
fisubs
mov
cmp
insl
fbstp
imul
sarb
cltd
lret
push
loop
aad
int
and
xor
dec
sub
inc
imul
leave
sbb
rolb
int3
mov
pop
sbb
pop
mov
adc
fdivs
pop
pop
aaa
clc
mov
loop
push
xchg
inc
or
js
sahf
adc
clc
int3
lods
adc
movsb
push
je
aam
cmpl
mov
push
icebp
aam
cmpsl
cmpsb
movsb
mov
and
sub
or
in
or
movsl
ficoms
dec
adc
pop
pusha
xchg
imul
and
cmc
ret
das
inc
cmp
divl
pop
aad
xchg
pusha
mov
and
test
mov
mov
add
leave
sub
mov
lock
adc
repz
add
rcrl
adc
and
mov
out
cwtl
sar
push
sbb
imulb
jnp
popf
scas
les
nop
ja
test
lahf
sti
out
adc
jl
arpl
dec
pop
push
ljmp
and
xchg
iret
mov
sub
mov
iret
push
sti
int
add
enter
xor
cmpsl
xchg
or
add
aad
mov
push
jmp
dec
mov
sub
lea
add
dec
movsl
mov
and
shr
in
out
nop
sub
pop
pop
scas
or
das
movsl
int
test
cli
sahf
aaa
or
add
cmpsl
call
in
in
loopne
push
mov
fbstp
and
pop
xor
jg
lea
iret
inc
notb
adc
mov
int3
adc
jp
mov
jle
mov
sub
into
adc
ds
cmp
jae
repnz
sbb
push
and
jge
jns
pop
xchg
jmp
xchg
pusha
xor
lea
ja
and
xor
outsb
xor
daa
mov
cltd
inc
mov
jmp
out
loopne
cmp
mov
ficomps
xchg
out
mov
inc
les
fdivs
xchg
int
mov
leave
call
adc
mov
in
jnp
pop
adc
cmp
sarb
int
in
gs
sub
push
fldl
lods
pop
jge
popa
sbb
mov
nop
add
dec
imul
push
adc
mov
in
out
cli
arpl
dec
and
jnp
fldt
mov
roll
mov
sub
imul
cmpsl
mov
cmp
sahf
inc
cli
mov
dec
sub
iret
adc
push
cmp
or
mov
mov
xor
out
xchg
and
pop
loop
xor
movsb
add
ds
pop
pop
loopne
adc
push
mov
or
pop
dec
adc
aad
and
or
adc
mov
jb
insb
inc
mov
mov
add
lret
insl
fwait
cwtl
dec
rcr
sub
das
and
lods
shr
push
xchg
jno
sub
lret
mov
adc
imul
gs
jno
adc
jg
imul
or
add
mov
mov
shrb
push
orl
jns
decb
push
sbb
or
xchg
inc
xchg
sub
push
push
movsb
repnz
gs
mov
jbe
mov
loope
xor
lods
push
test
lret
mov
into
mov
mov
stc
dec
and
mov
mov
jb
icebp
out
das
mov
lds
decb
outsl
rcll
or
popa
cld
scas
ret
add
lret
clc
or
and
mov
or
scas
xchg
shlb
sbb
mov
mov
scas
pop
mulb
pop
hlt
ljmp
insb
in
jb
xlat
mov
push
pop
cld
mov
xor
push
mov
jbe
lret
xchg
inc
add
add
and
pop
rorl
cwtl
and
adc
je
inc
cmp
push
test
lods
pop
shrb
inc
insb
prefetch
add
xor
xchg
popf
std
stos
int
mov
rorb
inc
xchg
inc
pop
xor
dec
pusha
sub
mov
js,pt
push
ljmp
in
lret
adc
jo
mov
test
mov
mov
es
daa
mov
mov
xchg
dec
aad
iret
mov
push
xor
insb
clc
lock
repz
dec
dec
dec
or
lock
imul
xor
pushf
jbe
arpl
sub
aas
insb
mov
xor
call
popa
cld
add
cld
push
sub
movsl
mov
mov
loopne
scas
xor
mov
lea
mov
in
xor
ja
cmp
add
mov
pop
call
push
push
or
mov
add
pop
xor
or
adc
inc
lcall
and
daa
sar
mov
mov
scas
pop
call
sbb
adc
jo
jb
loop
sbb
cld
mov
sub
sub
inc
aad
adc
ret
pop
ret
push
jae,pn
nop
hlt
pop
mov
cmpsb
enter
movsl
scas
out
adcl
mov
inc
inc
cli
add
inc
and
pop
mov
in
or
clc
or
fsubp
sahf
xchg
push
jae
pushf
lcall
or
out
outsb
loopne
fdivrs
das
in
andl
jmp
inc
xor
push
cmp
inc
addb
into
push
jp
test
les
roll
ret
les
ret
inc
and
xor
and
mov
cwtl
mov
subl
fiadds
aas
adc
fisttps
mov
sar
in
add
jmp
pop
mov
cld
or
rorb
gs
aad
enter
cltd
shll
sub
into
dec
xor
cmp
fsubrs
xchg
dec
ss
mov
mov
mov
dec
test
sbb
xor
nop
hlt
popf
jbe
jecxz
loop
push
mov
in
outsb
loopne
push
mov
cld
mov
stos
es
outsl
in
lahf
negl
movsl
cmp
xchg
je
sti
imul
sub
cmp
push
xlat
testb
inc
lret
inc
mov
adc
imul
adc
mov
std
scas
lcall
lods
sub
cmp
or
mov
push
adc
insb
jl
arpl
jle
xlat
sti
push
fstpt
daa
xlat
xor
ljmp
imul
arpl
jg
adc
ret
xchg
pop
cltd
xor
cmpsl
sti
cmpsl
addl
mov
out
stos
pop
push
aad
inc
js
dec
pop
fldt
sub
loope
pop
stc
push
cmp
sub
push
imul
xchg
sti
fsub
mov
jnp
pop
ljmp
icebp
lahf
sbb
pushf
scas
mov
outsl
scas
mov
xor
mov
mov
or
jg
repnz
cmp
xor
sub
ja
xor
push
dec
xor
adcb
push
int3
sbbb
jp
adc
punpckhbw
sbb
push
xchg
hlt
mov
mov
jnp
lret
out
fidivs
fsubl
jmp
popa
adc
cmp
out
out
ljmp
mov
pop
jno
hlt
fadds
dec
in
push
arpl
mov
jmp
mov
and
cmp
outsb
push
shlb
in
sbb
dec
imul
pop
xchg
repnz
and
enter
sub
mov
xchg
cmp
jl
xor
or
imul
cmp
push
cmp
jmp
mov
cmpsl
mov
cmpsl
mov
imull
ret
sub
push
sbb
jmp
adc
cmpsb
hlt
dec
adc
sti
mov
enter
mov
push
xchg
fmuls
aad
lea
jno
sub
mov
fidivrl
in
lcall
les
or
out
aam
ja
fists
mov
cmp
push
fs
jecxz
add
in
aas
adc
inc
pop
movsl
lock
push
sbb
lea
out
test
cltd
adc
addb
or
xor
sub
ljmp
jmp
mov
cld
icebp
addr16
cmp
loop
cltd
in
loopne
test
dec
mov
popf
movsb
sbb
shlb
mov
xchg
arpl
out
xchg
or
mov
insl
sbb
jle
jmp
sub
pusha
bound
sub
sbb
push
xchg
pop
arpl
ja
fcomps
add
mov
sbb
jmp
dec
pop
and
jo
test
pop
xchg
pushf
mov
jmp
fisubs
or
jg
dec
add
and
out
inc
adcb
xor
shlb
pop
leave
jo
pop
inc
inc
cli
jae
xor
fstps
sub
lods
out
inc
outsl
mov
adc
pop
cmpsb
cld
enter
jecxz
push
mov
mov
push
jnp
enter
lds
inc
shrl
aaa
cwtl
inc
mov
ss
pop
pop
dec
mov
fwait
dec
fcoml
cmp
adc
xchg
out
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
cmc
inc
ja
out
xchg
mov
xchg
jbe
dec
ja
addr16
das
pop
add
es
xlat
fcmovb
dec
idiv
out
xchg
cmpsb
xchg
push
mov
in
ja
adc
mov
fcoms
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
add
imul
jle
pop
xor
lret
nop
jmp
rcrb
dec
add
imul
sbb
pusha
cmp
sbb
jmp
rcrb
dec
add
imul
sbb
pusha
cmp
mov
pushf
mov
xchg
ljmp
add
imul
ret
xchg
add
out
adc
inc
imul
movsl
or
iret
or
sarl
cmp
push
mov
add
or
adc
xor
lret
fninit
addr16
ja
int3
outsb
stc
movsl
jl
mov
adc
sub
mov
adc
inc
out
jo
cmp
cmp
push
dec
fsts
xor
sbb
test
testb
aad
mov
enter
fs
jb
sbb
jne
mov
inc
and
sub
mov
sbbl
aas
lret
cmc
mov
adc
jns
or
push
sub
jo
sbb
jmp
rcrb
sub
cmp
das
data16
jbe
das
jbe
inc
add
mov
fimuls
lods
fsubrs
aas
inc
sub
insb
and
jl
mov
idiv
fdivrl
cld
mov
cs
pop
fs
push
sbb
dec
sub
push
sub
jo
sbb
jmp
rcrb
dec
add
imul
sbb
pusha
cmp
sbb
jmp
rcrb
dec
add
add
flds
cmpsb
push
jp
or
xchg
mulb
adc
mov
push
andl
insl
cltd
fdivs
cmpsl
sahf
insb
or
sbb
xor
fsts
adc
nop
into
cmpsb
repz
leave
xchg
or
imul
or
das
mov
cmp
or
cmc
arpl
push
xchg
into
jge
or
sbb
movsb
bound
outsl
or
sbb
cwtl
aam
mov
andb
sub
cld
fsubrl
daa
mul
inc
or
outsl
fcomp
jb
push
stos
pop
repnz
push
or
fidivl
pop
ds
ja
lret
push
cmpl
mov
insl
jg
mov
xor
sahf
mov
mov
mov
mov
scas
out
or
fstpl
stos
divl
mov
lock
push
sbb
jl
in
dec
dec
or
frstor
jmp
negb
aam
push
xchg
cmp
mov
adc
ds
shlb
xor
bound
ljmp
rolb
pop
xor
cmpsb
test
pop
frstor
adc
addr16
popaw
fnsave
pop
pop
or
stc
fs
mov
bnd
cld
scas
out
incl
dec
mov
das
test
bound
popl
and
jg
cli
push
fstpl
scas
xabort
lock
cmpsb
aad
cld
inc
adc
into
fs
mov
lahf
cmp
in
mov
push
mul
add
test
add
insb
push
mov
sbb
pop
pop
push
loope
outsl
shlb
daa
xor
fisubrl
xchg
movsb
cmpl
xor
jecxz
repnz
fdivs
fisubrl
lea
loopne
testb
xlat
repz
stos
ret
movsb
cld
xor
pop
in
scas
jp
pusha
xlat
jns
out
push
insb
mov
mov
std
push
cmpsl
insb
orl
adc
jne
aas
jecxz
les
cmp
cmpsb
or
adc
lds
stos
cmp
and
jg
pop
insb
fldl
pop
jp
add
adc
mov
ret
xor
mov
shl
mov
inc
push
xchg
and
xor
cmp
icebp
repz
mov
hlt
xchg
and
test
ret
xor
inc
pop
jo
dec
test
inc
rclb
fildl
jae
adc
loop
sub
mov
pop
stc
nop
lcall
insl
dec
ret
icebp
gs
push
push
je
pushf
mov
rcl
push
adc
push
arpl
xorb
xchg
push
fldcw
iret
repz
sub
andl
mov
jae
inc
xor
sub
add
pop
test
jb
ret
stos
jmp
jnp
pop
xchg
jg
xlat
imul
les
outsb
sbb
mov
pop
add
lret
sub
mov
inc
arpl
leave
arpl
pop
cltd
dec
out
sub
ja
sarb
mov
js
decb
out
sub
dec
sub
inc
lea
shrl
and
add
fstps
mov
dec
xchg
int3
sbb
cwtl
hlt
cwtl
sub
mov
pop
aad
out
fcom
out
cli
add
mov
add
mov
rcr
outsl
subl
addr16
lds
mov
push
pop
inc
mov
xor
and
es
mov
and
push
jae
add
cmp
cmp
in
adc
ds
dec
adc
fists
jns
add
out
in
dec
dec
fimuls
inc
in
gs
idivl
mov
das
and
in
cwtl
test
cmp
cmpsl
dec
pop
lods
stos
sbb
sub
add
hlt
adc
repnz
out
shlb
in
dec
imul
adcl
fwait
pop
sub
stos
cmc
mulb
mov
inc
xchg
add
xchg
imul
rcrl
leave
inc
gs
iret
push
or
xor
jo
mov
ret
sbb
out
xor
int3
mov
repnz
in
lock
data16
pushf
int3
jmp
pop
sti
xor
movsl
ja
add
mov
sti
mov
imul
aas
xchg
gs
lds
rcr
xchg
push
loopw
call
negl
data16
mov
sub
mov
push
iret
hlt
sub
imul
or
out
int
fcoml
js
xchg
mov
adc
push
aas
xchg
mov
cmp
add
popf
mov
mov
cmc
lcall
hlt
xor
inc
mov
mov
sbb
xor
or
cltd
mov
enter
xchg
mov
pop
lahf
aam
jle
xchg
iret
push
loop
aad
add
sub
test
movsb
sbb
lahf
imul
mov
rcrb
pop
movsl
xor
loope
adc
addl
xchg
loopne
pop
int3
inc
mov
cmp
dec
and
sbb
sub
or
jmp
test
or
mov
cmp
adc
pop
fsub
add
stos
rorb
test
xor
lret
lods
scas
jae
mov
mov
mov
xchg
fldt
adc
and
lret
push
and
mov
movl
lock
mov
pop
sarb
shlb
dec
or
fistl
push
sub
lret
sbb
gs
cld
jbe
pop
daa
sub
std
xlat
scas
xchg
jmp
push
push
je
cmp
ficoml
adc
xorb
or
add
fisttpll
push
mov
push
popa
jbe
outsb
mov
lret
pop
scas
movsb
imul
inc
lcall
fcmovnb
call
pushf
push
pop
fsts
dec
inc
jbe
nop
dec
sbb
sbb
fidivrl
outsb
sbb
lods
out
icebp
pmaxub
pop
xor
mov
dec
jne
mov
test
push
lea
jle
pop
inc
dec
adc
sub
cmp
mov
aad
adc
mov
sbb
xor
clc
imul
dec
cmp
or
das
stos
cmp
call
in
insb
dec
adc
sbb
mov
insb
mov
aas
cli
pop
xchg
js
enter
cwtl
and
inc
mov
pop
in
fwait
scas
data16
jnp
imul
popf
jo
xchg
cmpsb
fstp
and
and
or
push
jae
pop
mov
jl
adc
leave
ja
push
js
shlb
nop
inc
lea
sbbl
por
push
shlb
add
pop
mov
fisubrl
imul
or
pushf
lcall
inc
shll
dec
test
sub
pop
mov
fs
push
xchg
jl
mov
dec
shlb
cmp
push
xchg
jae
fnstcw
dec
clc
lret
pop
add
lds
repnz
mov
rolb
push
mul
pop
popf
sub
jnp
cmpsl
js
outsl
sub
pop
sub
fdivr
add
aaa
or
sub
jmp
jl
shrl
testb
lahf
cltd
mov
push
ljmp
adc
xchg
mov
jg
sbb
dec
stos
pop
aad
jno
test
jnp
push
adc
nopl
xor
mov
jp
ret
push
out
xchg
test
pop
pop
out
inc
dec
xor
rol
fdivl
push
push
inc
rcrl
int
test
or
jnp
out
imul
mov
sbb
dec
fstpl
sub
jmp
cmpsb
or
leave
insl
adc
fwait
imul
xor
fidivrs
xchg
fsubl
pop
jle
xchg
push
test
in
mov
sti
rcr
call
jmp
addb
mov
jl
outsl
rolb
mov
fsub
and
xchg
imull
scas
mov
jno
cmp
mov
mov
jne
xchg
gs
sub
out
and
ret
mov
pop
fs
inc
and
dec
data16
add
or
cmp
xchg
call
cmp
xlat
cmp
dec
in
mov
push
or
cmp
xchg
dec
andb
sbb
outsl
iret
lds
inc
imul
arpl
repz
mov
addr16
out
cmp
call
jle
adc
insb
pop
dec
enter
and
es
cmp
into
xor
cmpsb
mov
sbb
pop
fisubs
stos
dec
insb
insb
popa
movsl
and
test
adc
inc
sub
and
push
sbb
inc
iret
inc
mov
push
test
pop
ljmp
and
and
inc
and
subl
rclb
test
fidivl
mov
sbb
inc
mov
pop
adcl
stos
hlt
and
fiaddl
aam
xor
test
out
add
gs
adc
inc
inc
pop
nop
fcmovb
mov
cmpsb
je
lods
mov
cs
pop
mov
mov
test
xchg
xchg
imul
xchg
out
inc
rcrb
out
outsb
jno
pop
cmc
or
test
fldcw
popa
add
inc
in
adcl
xlat
pop
in
cmp
and
pusha
jnp
jl
lea
lcall
jb
fnsave
cmp
aam
dec
sbb
bound
nop
out
sbb
inc
mov
xchg
xor
fiaddl
sub
pop
movsb
push
pop
out
out
mov
dec
scas
test
mov
ja
add
hlt
xchg
fcomps
stc
xorl
mov
cltd
sub
mov
xor
xchg
mov
fiadds
inc
nop
inc
scas
fnstsw
inc
dec
cld
adc
frstor
test
out
fisubl
mov
dec
ss
decl
mov
cmp
aaa
aad
test
cmc
sahf
mov
or
pop
mov
movsb
daa
sub
ret
xchg
call
cmp
jl
mov
fstpt
hlt
add
mov
mov
mov
aas
push
dec
xor
out
push
inc
popf
aas
dec
sti
push
or
adc
mov
movsb
pop
pop
inc
cmp
xchg
clc
mov
add
fldl
popf
xor
mov
icebp
rol
fwait
imul
lahf
or
lahf
or
out
and
ret
jmp
and
xor
cld
mov
imulb
xor
fistps
push
jmp
aas
in
adc
push
inc
sbb
xor
rorl
dec
mov
dec
add
mov
pop
adc
pop
xor
mov
or
pushf
cltd
in
jb
int
pop
sub
mov
test
mov
push
jns
inc
movsl
imul
cli
repnz
enter
ds
into
sbb
dec
cltd
lea
test
ds
jp
iret
mov
or
fwait
or
xchg
pop
adc
insb
add
sarl
jp
dec
ud2
cld
jg
fisubrl
ret
jb
push
inc
sub
dec
fsubr
mov
sti
fwait
pushw
mov
mov
sbb
sbb
push
adc
hlt
in
mov
repnz
dec
xor
push
les
add
loop
cmp
fidivrl
push
jge
fwait
cmc
icebp
inc
lahf
xchg
dec
push
cld
cli
mov
cltd
cmp
mov
js
aam
mov
insb
outsb
or
movsl
and
fistps
addr16
rolb
xchg
push
cli
jle
mov
and
sti
push
pop
scas
push
clc
enter
cmp
mov
scas
add
mov
fldl2e
mov
pop
scas
andb
subw
pop
in
shl
inc
mov
fisubl
hlt
jle
pop
sbb
xor
stos
push
inc
cmc
push
ss
pushl
in
fwait
jo
jae
pop
jge
lds
fnsave
lret
add
movsl
mov
cmp
jecxz
rolb
xlat
push
push
adc
push
sub
mov
push
dec
scas
mov
cltd
xor
add
mov
into
repnz
les
add
fdivp
jb
xchg
sbb
push
cltd
loope
arpl
lods
dec
outsb
adc
xor
jp
pop
bound
imul
sbb
xor
fcoms
pop
sbbl
test
xor
sub
mov
lods
xlat
ret
stos
adc
bound
sti
dec
out
dec
push
stos
add
jl
imul
ja
rcl
xor
pminsw
dec
shlb
hlt
dec
in
or
sbb
sub
fmull
sub
test
repnz
add
imul
add
out
jo
movsb
push
neg
ljmp
jnp
sub
popf
mov
sub
or
sbb
xchg
jmp
xchg
scas
push
into
push
nop
mov
pop
shlb
add
mov
outsb
sbb
inc
mov
lods
and
xchg
das
jecxz
mov
push
orb
ret
fsubl
ret
lret
icebp
bound
mov
xlat
in
loopne
sub
adc
outsb
push
sbb
push
or
lret
sub
mov
adc
int3
pop
sbbl
pop
hlt
movsb
rorb
lret
jmp
mov
test
xchg
bnd
aas
stc
shrl
cli
push
into
mov
xor
sbb
mov
and
cmp
clc
insl
push
push
decb
xchg
stos
push
test
and
xor
xchg
fsts
aaa
jmp
clc
push
push
xchg
mov
jg
stos
fimull
dec
test
fdivrl
push
sub
dec
cltd
aas
mov
outsl
inc
stos
mov
je
dec
popa
lods
jmp
mov
add
inc
and
mov
add
mov
loope
add
daa
cmp
pusha
outsb
cwtl
icebp
testb
sub
sub
mov
inc
sbb
les
dec
int
add
mov
jbe
mov
mov
insl
jnp,pt
mov
fs
lret
loope
ret
orl
and
sbb
inc
xor
mov
and
fisubrl
mov
jmp
dec
sbbl
cmp
mov
loope
es
inc
pop
imul
adc
nop
and
mov
stos
inc
sbb
mov
js
loopne
pushf
pop
movsb
mov
gs
push
enter
lds
test
rcll
insb
aaa
fchs
cmpsl
addr16
lds
push
inc
sarb
nop
icebp
repnz
lea
aad
cltd
pushf
mov
in
jb
pop
push
lret
pop
sbb
lea
pop
xchg
bound
sub
jp
andl
mov
dec
pushf
adc
dec
loope
fs
arpl
mov
cld
repz
mov
cld
outsb
pushf
add
mov
mov
sub
ja
lret
sbb
into
jbe
jae
ljmp
and
mov
iret
mov
adc
jno
mov
dec
rclb
pop
imul
rol
mov
cli
sbb
adc
das
fistpl
add
mov
mov
popa
xchg
mov
inc
xchg
sub
pushf
sub
xchg
insb
mov
adc
xlat
fildll
cmp
jp
outsb
push
mov
rcr
pop
aaa
arpl
mov
test
data16
mov
xor
add
fildl
testb
stos
and
mov
sub
cmp
inc
lods
scas
jecxz
fcompl
adc
mov
arpl
sub
add
lcall
lock
lcall
outsb
jae
inc
mov
enter
xlat
add
or
dec
outsb
lods
pop
mov
sarl
imul
sub
mov
xlat
mov
pop
test
sub
adc
outsb
sar
dec
lret
jb
lods
test
movsl
cmc
lcall
arpl
mov
inc
int3
ret
cmpsb
lock
xor
test
aad
fisttpl
pop
insl
pop
xchg
xchg
rcrl
aas
leave
xchg
fs
xor
jp
jg
mov
mov
mov
hlt
and
jnp
mov
mov
rorb
sbbl
bound
mov
jo
nop
push
movsl
adc
movsb
fld
inc
pop
pop
or
scas
mov
or
clc
add
sbb
arpl
es
mov
sub
mov
stos
fdivp
pop
nop
dec
les
sti
push
enter
jmp
lock
ja
jne
pop
push
push
lock
pushf
jmp
lret
mov
mov
mov
xchg
xchg
xor
stc
and
jmp
insl
icebp
mov
xchg
imul
dec
rcrb
dec
fisubl
cwtl
jle
fidivl
dec
movsb
mov
add
push
mov
gs
sahf
xchg
mov
cltd
ljmp
test
stos
or
mov
imul
add
pop
mov
aad
jmp
imul
push
add
add
movsb
loopne
mov
xor
xchg
mov
add
jl
lds
mov
out
insl
sahf
or
scas
outsb
jl
mov
es
aad
arpl
mov
shrl
insl
mov
cmp
ljmp
stc
jg
jg
jne
dec
divb
xor
popf
and
imul
adc
jecxz
jmp
dec
cmp
sarb
jp
add
scas
insl
mov
inc
push
lods
inc
jl
mov
call
mov
sbb
fidivl
or
mov
ss
in
rorb
loope
add
shll
lret
jle
mov
push
jbe
loop
mov
addl
cmp
jmp
or
shrb
jg
mov
les
dec
popf
push
in
loope
jnp
inc
dec
lods
xchg
outsl
dec
jo
and
add
int3
arpl
adc
inc
sarl
lahf
daa
mov
out
sbb
scas
dec
xchg
lret
andl
clc
xchg
sarb
and
ret
cmp
imul
insb
xchg
mov
dec
pop
ficomps
lods
and
in
filds
inc
mov
out
call
mov
xchg
inc
mov
ja
lds
pop
imull
int
adc
dec
xorl
adc
test
std
push
int
jecxz
push
repz
sub
into
mov
xchg
imul
add
out
popa
insl
jmp
negl
jp
cwtl
push
add
pop
sbb
sbb
das
or
jb
sub
repnz
loope
ret
pusha
jbe
fwait
in
sub
inc
rcrb
or
outsl
pop
dec
loopne
cli
pop
dec
stos
call
out
mov
jbe
movsb
mov
push
inc
je
xchg
mov
movsb
lock
add
add
enter
sbb
mov
ljmp
inc
inc
scas
push
cmp
mov
cmpsl
popf
xchg
ja
fsubp
lret
or
add
fs
and
jb
repz
xor
out
loopne
dec
lock
adc
and
xor
and
dec
xchg
add
inc
fadds
push
push
mov
dec
mov
clc
test
lock
sahf
and
cmp
lea
mov
mov
xchg
cmc
loope
sub
fstpt
fidivrl
inc
lds
fsubrl
inc
movsb
and
ret
ret
jle
scas
aaa
sub
push
les
lret
loop
movsl
adc
mov
pop
fistpll
push
cmp
mov
xchg
scas
push
leave
jge
movsl
out
fnstcw
cmp
popf
inc
dec
aam
aam
call
adc
sbb
and
mov
and
and
lods
pop
mov
gs
rorl
adc
and
push
rorb
clc
add
add
dec
int
stc
pop
dec
lahf
gs
xchg
sub
push
fmull
mov
pop
enter
cmpsb
push
aas
inc
xor
push
xor
mov
add
inc
jnp
push
push
xchg
popf
scas
aaa
jmp
adc
xchg
sbb
cmp
in
iret
out
repz
scas
popf
add
stos
fsubrp
ret
stos
imul
out
test
fldl
fsubs
or
inc
sahf
dec
ret
sub
mov
and
les
aas
fmulp
leave
fs
push
push
data16
jmp
inc
adc
xor
mov
arpl
mov
xor
inc
gs
popl
fld
ret
mov
xlat
push
dec
xchg
fcomip
mov
arpl
subb
dec
lahf
push
adc
inc
dec
mov
fdiv
lcall
fcoml
push
pushf
push
dec
les
es
push
aas
mov
xlat
cmp
mov
mov
hlt
sti
and
push
sbbl
cmp
xchg
cmp
adc
icebp
jmp
adc
dec
cmp
pusha
dec
pop
dec
into
out
pusha
arpl
jmp
pop
fsubrs
fmuls
pop
or
test
std
push
pop
nop
mov
push
sbb
inc
push
ja
pop
leave
es
xchg
or
xor
fwait
pop
pop
bound
cmp
fstpl
mov
mov
out
pop
rolb
xchg
pop
ficomps
or
add
jge
lds
in
adc
cltd
jno
xchg
sub
and
out
int3
adc
mov
inc
das
push
jmp
outsb
mov
test
ret
xor
test
shlb
lahf
in
push
mov
and
push
and
or
push
sub
jo
sbb
jmp
rcrb
dec
add
imul
sbb
pusha
cmp
sbb
jmp
rcrb
dec
add
adc
jns
or
push
sub
jo
sbb
jmp
rcrl
dec
add
imul
sbb
test
jg
cmp
stc
decb
das
push
pop
inc
xorps
addr16
mov
test
xor
adc
add
inc
cmpsl
push
push
mov
addr16
pop
loopne
loopne
shlb
sub
xor
add
adc
inc
cmpsl
push
dec
mov
jg
push
stc
pop
call
into
and
adc
das
call
aas
ds
sub
ja
adc
inc
sub
xor
and
aas
push
cli
cmp
jle
mov
sti
outsl
mov
mov
sarb
mov
push
fucomip
into
or
out
movl
pop
test
cmp
fildl
sbb
repz
andb
xor
push
out
xchg
lds
mov
cmpsl
adc
mov
loopne
loopne
mov
push
pop
rol
ret
popf
push
mov
lret
jg
in
and
test
xlat
mov
idiv
pop
test
dec
adc
les
js
sbb
push
push
sub
pop
mov
mov
rorb
nop
mov
cmpsl
push
sahf
mov
mov
add
pop
lock
sarb
into
and
sub
sbb
or
pop
cmpsl
push
cmp
adc
fs
xchg
jp
daa
mov
dec
stos
xor
loop
lds
lret
leave
fstps
repz
jnp
pop
mov
xchg
push
mov
adc
daa
ret
and
mov
pmullw
pop
lock
shlb
xlat
and
xor
add
adc
inc
cmpsl
push
push
mov
addr16
pop
loopne
lock
shlb
xlat
and
xor
add
adc
inc
cmpsl
push
push
mov
adc
jnp
outsb
xor
mov
cli
inc
insb
xchg
shll
aas
cmc
nop
stc
or
cmp
mov
adc
daa
lahf
pop
pop
push
std
or
mov
outsb
adc
xchg
adc
gs
es
adc
lods
mov
pushf
leave
repz
lahf
movsb
imul
inc
inc
push
mov
fistpll
adc
nop
jo
pop
push
xchg
ja
cld
pop
ror
xchg
xor
jnp
and
inc
lods
mov
xor
inc
mov
fmulp
aaa
pop
mov
mov
cmp
mov
or
ds
push
cmp
cmp
push
addr16
into
jmp
mov
pop
iret
or
jno
lock
jb,pn
jno
mov
sbb
testb
cmp
pop
movsb
xchg
mov
aaa
xor
mov
push
mov
inc
dec
cltd
lods
int3
out
lock
loopne
dec
adc
xor
xchg
clc
popf
mov
adc
lods
cmp
sbb
jne
and
fisttpl
adc
call
ljmp
adc
or
mov
addps
jne
mov
add
test
fadd
xchg
or
pop
or
popf
sub
mov
or
test
test
or
or
lods
insl
mov
shl
mov
lret
clc
and
insl
ds
mov
cmp
jns
cmp
iret
jnp
in
lret
dec
mov
xchg
jl
out
and
lds
cmp
adc
and
xchg
idivl
into
aaa
iret
push
mov
sbb
fimuls
lcall
imul
cvtps2pd
insb
mov
cli
dec
push
add
or
mov
mov
mov
xchg
stos
incb
mov
cmp
loopne
and
mov
inc
mov
pop
sbb
je
arpl
in
inc
xchg
pop
and
stos
div
inc
mov
xor
dec
jge
dec
and
insb
cmp
or
push
adc
mov
pop
data16
pop
or
inc
rolb
adc
jp
fwait
xchg
into
and
sbb
orb
fiaddl
jbe
in
cmp
mov
pop
cmpsl
add
push
dec
movaps
push
or
movsl
sbb
add
enter
mov
xchg
mov
jne
xlat
cmp
xchg
push
rolb
int3
add
add
cmp
test
movsb
inc
jo
loop
jae
fistps
arpl
inc
ljmp
fsub
cmp
adc
mov
ljmp
cld
dec
jecxz
out
addb
mov
push
jmp
cmpsl
lret
push
mov
mov
fisubrl
lock
fs
xchg
jecxz
and
xchg
or
sbb
out
add
inc
sbb
and
pop
cli
hlt
mov
loope
cmp
push
in
inc
pushf
sbb
push
jp
push
dec
cli
xlat
mov
jo
jg
iret
mov
and
add
outsb
add
push
push
lods
loopne
and
mov
out
jle
into
xor
mov
ds
inc
push
sbb
cmp
aam
in
xchg
out
arpl
jns
and
xchg
testb
insb
not
push
dec
mov
stos
sbbl
movsl
bound
cmc
mov
or
mov
xchg
dec
inc
jecxz
repnz
or
adc
insl
stc
pusha
push
add
adc
xor
ljmp
test
nop
add
jecxz
in
add
sub
imul
movsl
push
scas
fidivrl
insl
jne
jp
inc
cli
lods
xor
adc
xlat
out
fcoml
testl
enter
or
pop
lds
loop
sbb
pushf
pop
ss
movsl
or
notb
jle
adc
mov
or
lock
sub
push
push
xchg
mov
pop
dec
mov
jecxz
ret
pop
xor
sbb
xor
icebp
repz
xor
mov
loop
pop
xor
and
js
sub
in
stos
int
iret
mov
mov
push
inc
mov
aaa
sbb
cmpsl
push
pusha
cmp
outsl
inc
leave
les
lds
or
mov
sub
lods
sbbl
jae
dec
jle
cs
decl
sbb
xchg
sub
inc
cmp
pop
mov
dec
sub
push
xor
mov
outsl
rorb
sub
jns
sahf
repnz
jl
out
jecxz
ss
xchg
mov
loop
addr16
fwait
mov
push
sbb
push
popa
pop
cmp
sub
bound
mov
roll
push
jle
lahf
jecxz
cmp
cmp
iret
out
out
cmp
or
xor
ss
push
lahf
sub
flds
lods
fisubrl
jl
cmp
xchg
jnp
mov
data16
jmp
sub
add
sbb
shll
xchg
mov
mov
idiv
cmc
add
xchg
xchg
call
xchg
js
mov
subb
add
out
aad
xchg
xor
and
nop
xchg
aaa
or
pop
in
and
pop
test
sub
cs
pop
xor
xchg
ljmp
push
imul
mov
push
popa
jecxz
xchg
les
outsb
mov
mov
popa
lods
mov
int3
and
jno
fisubs
int3
movsb
stos
in
mov
mov
mov
hlt
push
adcb
lea
xor
push
popa
cmp
adc
iret
cmpsl
jae
push
or
sbb
scas
mov
xchg
ret
xchg
adc
insl
in
aas
mov
icebp
mov
pop
or
std
sbb
sbb
xchg
in
sub
pop
dec
rorl
mov
push
and
aaa
aaa
adc
jl
lcall
push
mov
pop
rorb
imul
sub
addl
inc
incl
lods
xchg
dec
js
sub
data16
xchg
out
push
push
adc
into
mov
inc
adc
sbb
adc
lret
test
cli
icebp
pop
pushf
pop
pop
hlt
push
jl
mov
and
lods
ds
mov
pop
cmp
pop
sub
inc
sbb
jecxz
dec
in
lea
cmpsb
negl
sbb
push
xor
loopne
xor
sub
cmp
xchg
jmp
push
outsb
cmp
mov
dec
ficoms
add
push
fisttpl
or
test
cmp
out
inc
xlat
or
fidivrl
mov
sbbb
adcb
dec
daa
out
les
cmp
negb
xchg
aaa
xchg
in
outsb
cmp
repz
jnp
add
jg
aam
fmul
test
dec
rcrl
bound
daa
test
in
dec
pop
adc
testl
stos
shlb
cli
out
mov
sub
cmpsb
jp
lret
fwait
adcb
shll
xor
lret
mov
push
cmp
adc
movsb
jnp
loop
loope
mov
add
cmp
addl
popa
mov
scas
mov
pushl
dec
or
les
popa
mov
dec
push
pop
xchg
cmpsb
idivb
repnz
iret
lret
mov
pop
mov
in
cmp
pop
xchg
leave
sbb
nop
push
inc
mov
lret
sbb
and
shll
mov
mov
dec
or
jg
dec
cwtl
xchg
jae
dec
add
loope
inc
call
stos
pop
imul
mov
shlb
xor
inc
lods
in
or
or
data16
stos
jge
mov
jg
stos
sbb
xlat
fwait
or
test
nop
sahf
daa
cmpsl
jo
mov
in
push
gs
daa
dec
cmp
cmc
mov
jnp
mov
cmp
add
fstl
andb
lods
or
in
cltd
and
call
push
pop
xchg
mov
and
xchg
mov
cli
lods
stc
ljmp
cmp
leave
mov
hlt
mov
insb
jae
inc
sahf
mov
add
sub
adcb
outsb
add
shrb
jle
cmp
pop
lcall
fwait
sub
cmp
inc
faddl
fnstsw
xor
in
xor
and
xor
cmp
sarl
mov
add
sub
push
outsb
testb
outsl
incl
xchg
sbb
cs
inc
mov
xor
add
imul
ss
sahf
add
ds
dec
mov
push
icebp
outsb
pop
jno
push
lods
xor
inc
mov
xchg
mov
pop
in
mov
sbb
les
adc
bound
ja
cltd
test
cmp
test
ret
xor
iret
adc
mov
mov
mov
or
mov
mov
mov
imul
xor
ljmp
sbb
mov
xor
xlat
ror
inc
push
ret
add
inc
mov
or
sar
imul
jg
ror
push
stc
sahf
sub
xor
filds
call
mov
les
sub
cmpsl
jb
popf
dec
stos
out
and
push
lret
add
pop
mov
daa
dec
ss
inc
mov
outsb
and
test
cld
xor
xlat
or
fcomps
lds
mov
xor
push
pushf
fbld
pop
xchg
mov
add
mov
loopne
sbb
aas
mov
jmp
xlat
js
mov
mov
jae
mov
jp
call
inc
in
movsl
dec
cwtl
dec
js
lcall
push
cmp
bsf
movsl
mov
jmp
cmp
sub
xchg
pop
inc
push
andl
iret
cmp
xor
or
jecxz
mov
or
leave
xor
and
dec
mov
pop
xor
lcall
gs
jb
int
xor
pop
dec
push
pop
adc
stos
imul
pop
es
cmp
mov
add
cld
xchg
cltd
push
add
fsubrl
xchg
cmpsb
and
dec
xchg
add
pushf
push
pop
rcrl
loope
outsb
jne
test
and
push
int
and
ficomps
mov
ret
ja
inc
xchg
pushl
popf
lds
stos
sbb
push
xchg
lret
ds
imul
mov
or
lret
addr16
mov
lea
lret
cmpl
push
je
xor
test
leave
js
xchg
pop
ja
pop
xchg
imul
int3
and
xlat
push
das
inc
inc
into
test
jecxz
mov
add
push
push
mov
mov
or
dec
sahf
inc
dec
sub
dec
xchg
push
xor
fists
push
aas
addr16
xor
pop
test
mov
push
les
mov
flds
es
ds
repnz
lcall
stos
ror
inc
stos
xor
jne
pop
in
test
iret
jmp
std
pop
xor
aas
sub
jnp
mov
adc
in
jo
push
sbbb
mov
add
sub
mov
ret
les
sbb
push
cmc
subb
push
sub
sub
cmpl
xor
icebp
movb
xor
lahf
adc
addl
xchg
icebp
and
and
xor
cmc
ret
ret
scas
cmpl
inc
pop
cwtl
pop
xchg
jge
loop
jo
imul
lcall
mov
mov
add
pop
mov
pop
adc
push
shlb
dec
imul
movsb
xor
shl
cltd
lods
jno
hlt
cld
loop
inc
lcall
xchg
xchg
push
inc
shlb
pop
xor
cmp
mov
test
push
mov
das
rcll
mov
mov
pop
setno
xor
imul
popa
inc
sbb
jle
daa
lcall
into
mov
xchg
jns
repz
mov
sbb
and
pop
rclb
inc
paddd
inc
push
aam
adc
out
fsincos
mov
into
dec
xchg
movsl
xchg
sbb
push
dec
mov
xlat
movsb
mov
pushf
xor
shlb
movsb
sub
ret
lods
stos
popa
mov
xchg
sub
mov
test
jmp
push
sbbl
sub
mov
mov
mov
pop
xlat
aad
lcall
fidivrs
mov
rcl
and
mov
outsb
dec
fsubr
pushf
aaa
lods
add
or
push
jb
adc
push
outsl
or
adc
xor
imul
xor
mov
add
sbb
out
dec
add
mov
and
dec
xor
mov
adc
aas
xor
mov
nop
or
jae
mov
dec
xchg
fldenv
adc
push
cwtl
in
and
xor
popf
add
sarl
push
xlat
sti
xchg
push
inc
and
mov
rolb
sbb
pop
sub
jae
and
add
shl
xor
cmp
adc
mov
hlt
popf
dec
sbb
outsb
sub
insl
sbb
mov
inc
mov
aad
icebp
pop
addl
mov
fisubrs
je
movhps
into
ret
rclb
adc
pop
fldt
mov
mov
xor
in
fstpt
or
push
data16
jmp
xor
add
hlt
push
adc
stc
jmp
cmp
sbb
aam
lahf
sbb
mov
xor
pop
jbe
das
stos
in
outsw
mov
test
jnp
and
pop
jmp
jl
lret
adc
mov
int3
adc
mov
hlt
mov
std
jmp
or
data16
clc
push
jmp
push
stc
dec
jb
xchg
xor
dec
pop
out
adc
ljmp
inc
xor
int3
push
call
aas
inc
faddl
lock
adc
mov
fidivl
repz
mov
pusha
jne
sbb
pop
cltd
jo
mov
pop
es
and
loope
fxam
loop
sti
dec
js
sahf
adc
ror
test
in
inc
add
call
jg
xor
jmp
xor
lods
xor
pop
push
sbb
out
test
dec
test
mov
or
xchg
adc
xchg
lods
jecxz
clc
fnstenv
xchg
testb
inc
push
nop
cmpl
pop
shlb
in
sbb
adc
or
dec
pushf
push
loop
sbb
jno
cltd
ret
sti
bound
sbb
push
push
rclb
js
xchg
call
sub
cmc
push
sbb
xchg
mov
stos
fs
fdivrl
test
jno
sbb
mov
mov
push
adc
sbb
push
sti
adc
sbb
test
inc
enter
cmp
cmp
xor
pop
push
xor
lods
data16
cmp
ja
or
dec
pop
icebp
lock
adc
mov
pop
cli
mov
mov
cmp
ret
cli
and
and
pop
je
into
xor
push
xchg
pushf
pop
pop
enter
out
dec
in
fisttps
jns
mov
filds
sti
cmpb
xlat
sbb
jecxz
ror
cmpsb
and
mov
fbld
rclb
xchg
pop
dec
inc
pushf
and
loop
jmp
mov
sub
jmp
jo
mov
xor
dec
push
lret
jb
daa
or
jb
data16
pop
sbb
iret
adc
sub
daa
icebp
repnz
dec
jmp
inc
mov
inc
push
xchg
pop
dec
mov
fnstcw
lods
mov
stos
push
dec
xor
dec
adc
insl
and
sti
push
mov
xor
jg
int3
insb
pop
pop
inc
mov
mov
ret
push
adc
push
add
loopne
adc
mov
fsubr
enter
rcl
pop
and
testl
data16
jns
ss
push
xor
mov
ja
xor
push
fistps
xchg
xor
shll
fsts
xchg
rcr
pop
push
shll
sbb
test
push
jmp
xchg
dec
roll
mov
in
pop
push
xchg
cmp
enter
jl
out
push
cmpl
and
xor
dec
dec
lcall
dec
mov
mov
add
das
and
out
mov
sub
mov
std
push
stos
jmp
or
mov
addr16
das
and
out
fdivp
jb
dec
jno
shl
out
sbb
inc
cmp
sub
scas
fadd
mov
lea
ret
sarb
lret
dec
ljmp
ret
loop
shrb
adc
cmpsb
xor
or
iret
mov
daa
arpl
jp
sbb
xchg
leave
pop
repz
jbe
and
cltd
jae
cmpsl
jnp
pop
sub
or
cld
sbb
movsl
outsb
xor
insb
sbb
cmc
jecxz
call
add
movsl
mov
cmp
daa
xchg
mov
cltd
push
adc
lahf
aas
push
ret
xor
jns
xchg
adc
js
xor
jmp
lret
popa
rclb
mov
scas
dec
data16
push
nop
fwait
jae
sub
jb
and
cltd
loopne
xchg
cmp
dec
mov
mov
int
rcll
push
and
sarl
or
leave
push
into
dec
mov
add
sub
xchg
scas
sub
scas
iret
xchg
sub
ljmp
and
or
lock
mov
movsb
add
loop
add
mov
testb
mov
xor
pop
push
sub
xchg
lret
mov
imul
jecxz
mov
pop
rcl
out
cld
pop
mov
lahf
lock
into
testl
cs
fs
mov
ds
mov
aas
sub
jp
sub
cwtl
cmpsb
mov
nop
aaa
enter
inc
adcl
mov
int
loope
movl
push
pop
fldl
loop
out
jne
xor
sarl
add
lahf
scas
test
daa
mulb
xor
mov
jp
pushw
add
bound
outsb
adc
xchg
fisubrs
mov
sub
mov
into
add
arpl
outsb
adc
mov
and
mov
std
push
clc
push
decl
mov
and
push
mov
cwtl
jecxz
push
adc
out
lret
or
fldcw
pop
call
xor
add
jge
jo
push
jbe
ret
pop
jecxz
add
pop
pop
ja
push
lods
xor
lods
pop
popf
jecxz
call
dec
xchg
pop
movsb
jnp
inc
mov
sbb
outsb
pop
dec
out
shll
daa
push
sbb
call
jae
icebp
dec
pop
aaa
add
xchg
xor
push
jbe
insb
imul
jle
add
fstps
and
push
cmp
pop
imul
ds
ss
cmp
cmp
imul
jecxz
inc
shlb
mov
or
lret
aam
dec
in
pop
or
mov
inc
cmp
pusha
in
xchg
fabs
mov
jae
rcll
hlt
rol
jnp
clc
jmp
or
cmp
push
sbbl
popf
jmp
ja
fwait
addb
in
enter
dec
mov
pop
adc
cwtl
mov
ljmp
lret
inc
dec
nop
ret
xchg
rorb
js
je
mov
pop
insl
jae
sahf
or
jo
add
test
lahf
stos
jmp
loopne
mov
negl
sbb
sub
lds
mov
mov
ret
out
cmp
xchg
xor
jp
popa
xchg
js
push
fistpll
and
mov
push
push
inc
dec
or
push
stos
cmpsl
syscall
icebp
jp
mov
out
xchg
sarb
shll
dec
imul
fwait
dec
pushf
xchg
xor
xor
add
lea
push
jnp
fs
mov
push
aaa
mov
stos
xchg
sub
lret
fsubl
push
ss
xchg
lods
repnz
pop
out
outsl
xor
add
cmp
adc
stos
cmpsb
jns
dec
adc
mov
jbe
or
xchg
xorl
repnz
and
aaa
or
stos
mul
outsl
cld
sub
push
jno
pop
adc
pop
push
int3
dec
jbe
cmpsl
fcompp
jle
cmp
pop
inc
sub
lock
movsl
es
pop
fstpl
xlat
xchg
pop
fisubs
xor
in
cmp
in
jne
cld
insb
mov
lods
jecxz
jbe
jge
outsl
xchg
pusha
ret
mov
cmpl
int
xchg
mov
or
xchg
xchg
pop
pop
jbe
cli
cltd
xor
push
pop
roll
ficomps
sbb
and
mov
dec
mov
shlb
xchg
sub
mov
fnstenv
pop
loopne
lock
shlb
xlat
and
xor
add
adc
inc
cmpsl
push
push
mov
addr16
pop
loopne
lock
shlb
xlat
and
xor
add
adc
inc
cmpsl
push
push
mov
addr16
pop
loopne
lock
shlb
xlat
and
xor
add
adc
pusha
xchg
inc
movsl
push
push
movsb
inc
mov
test
adc
shlb
pop
add
loopnew
cmovs
pop
das
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
xchg
shrl
lcall
add
pop
add
or
push
push
add
add
imul
ss
add
add
add
add
add
leave
add
enter
incb
mov
pop
add
add
xor
add
add
jns
call
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
jno
push
add
add
add
and
or
pop
add
add
add
add
pop
add
add
sbb
xchg
xchg
ret
add
add
into
add
in
mov
sub
add
add
add
add
pop
add
add
and
jb
push
add
add
js
inc
add
dec
add
sub
dec
add
call
add
pop
add
xchg
xchg
pop
add
mov
add
add
add
add
add
add
add
inc
add
add
pushf
add
add
add
or
bound
leave
add
add
add
add
add
add
add
add
addl
sbb
cmpsl
add
dec
add
sub
add
add
add
add
add
mov
add
jns
mov
add
add
add
add
or
dec
add
add
add
call
add
push
add
add
mov
or
add
adc
push
add
add
add
js
pop
add
add
in
dec
add
jb
in
add
add
add
add
add
inc
add
enter
and
cmp
jmp
add
add
add
add
xor
mov
add
add
add
add
add
mov
xchg
inc
add
add
add
add
add
add
add
add
add
xor
mov
lret
add
add
dec
add
add
add
add
add
add
add
dec
add
add
jo
adc
push
add
add
ss
add
add
add
imul
inc
add
add
add
add
mov
add
add
add
add
add
add
test
mov
adc
enter
push
add
pop
add
fiadds
push
add
add
add
add
sbb
cmpsl
add
add
or
cmp
xor
addl
push
add
or
or
cmp
xor
imul
ja
popa
add
add
add
add
add
add
inc
add
and
mov
add
add
and
mov
add
add
add
add
add
add
add
cltd
add
dec
add
add
add
jmp
add
cmp
mov
add
add
add
add
add
fiadds
aad
xor
inc
add
add
add
add
add
add
add
add
add
add
adc
data16
add
add
sbb
addl
sbb
add
add
add
add
jns
pop
add
push
add
add
add
xor
ss
sti
inc
xlat
out
cmp
mov
or
mov
dec
xlat
cmp
fisubs
fwait
ja
add
lds
mov
in
adc
jnp
xchg
xchg
pop
pushf
mov
ljmp
xchg
mov
insl
sub
fs
lds
std
fsubr
jge
test
xlat
movsl
icebp
lcall
or
fs
mov
daa
cmp
rcrb
or
add
iret
push
imul
fstp
cltd
in
or
pop
jo
mov
xor
fcoml
pop
arpl
xchg
in
cli
ljmp
cmp
in
addr16
jo
adc
xchg
lods
push
cmp
pushf
fnsave
jbe
push
mov
inc
lahf
dec
adc
fdivl
pop
dec
push
pop
bound
fstpt
daa
arpl
push
int
jne
lea
pushf
loopne
testl
clc
xor
loope
adcb
or
cwtl
hlt
movsb
mov
sub
cwtl
rorl
mov
and
mov
shlb
jns
pop
sbb
cmp
cmpsb
je
iret
loope
push
mov
xchg
in
cmp
fs
clc
stc
clc
dec
shll
cwtl
cltd
mov
enter
pop
les
in
cwtl
mov
sbbb
shll
or
cmp
mov
insb
jo
or
in
cmc
inc
int
add
outsb
push
mov
pusha
in
add
aad
push
jbe
jg
mov
iret
shl
daa
gs
or
add
sub
jo
pop
sub
jecxz
in
pop
inc
imul
ret
add
stc
test
fcomi
jmp
popf
lcall
push
call
loop
scas
xor
xchg
xor
push
or
push
leave
jae
lret
dec
add
aas
stc
xchg
rcl
add
std
ja
sub
sub
aaa
imull
dec
orl
fistl
push
jnp
repnz
add
add
adc
repz
and
or
movsl
push
cld
push
xchg
jne
cltd
cmp
loope
jnp
dec
cmp
and
inc
and
or
aaa
sub
out
pusha
pop
cltd
iret
mov
cld
loope
lods
mov
ss
arpl
subb
jp
mov
insb
lea
roll
mov
push
into
add
cmp
xchg
dec
add
cwtl
scas
mov
in
lods
sub
addr16
and
sbb
in
ret
mov
xchg
daa
jle
cmc
cld
mov
addr16
pop
or
add
mov
shr
add
mov
outsb
adcl
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
