call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ret
dec
loop
bnd
std
push
jg
sub
push
lret
sti
jb
add
xor
loop
repnz
mov
push
fistl
sti
jl
add
and
fcmovne
lret
dec
cli
shr
imul
add
test
movsb
or
jle
gs
stos
pop
mov
shrl
andb
repz
fsubrs
stos
or
push
cli
incb
cmc
inc
shrb
xlat
test
xchg
mull
jnp
imul
xchg
mov
push
lcall
cmp
popa
mov
inc
dec
push
xor
popf
jb
adc
jbe
data16
xor
sub
sarl
xchg
arpl
mov
leave
and
fwait
push
into
lea
std
lcall
xchg
dec
pop
mov
jge
mov
xor
inc
mov
cli
enter
stos
and
xor
movsl
push
push
jge
nop
mov
mov
mov
inc
lcall
or
mov
xchg
sbb
stos
pop
pop
dec
or
sbb
xor
scas
or
inc
icebp
outsl
hlt
fs
push
mov
inc
popf
mov
push
addb
ja
push
cli
pop
lret
mov
lea
orb
xchg
cmp
mov
xor
ficoml
cmpsl
or
lcall
cmp
lret
sti
jb
add
xor
loop
repnz
mov
inc
fistl
sti
jb
add
xor
pop
fadds
sub
sbb
mov
stc
stc
inc
fwait
push
pop
mov
in
nop
mov
inc
pushf
rorb
adc
dec
dec
xchg
pop
test
xchg
mov
leave
jns
mov
fucomi
mov
mov
adc
add
pusha
xor
popa
add
push
cmc
push
loopne
adc
cs
push
mov
sbb
mov
sub
test
sub
and
and
divb
mov
cli
cs
call
sbb
cmp
in
dec
dec
fcoml
sbb
mov
mov
lret
into
jno
flds
cli
leave
sbb
mov
shll
add
in
jne
push
imul
mov
dec
and
mov
adc
xchg
pop
pop
rcrb
ret
mov
or
add
fisttps
push
and
imul
mov
iret
test
and
sub
add
xor
sub
jb
in
mov
ss
lret
adc
rcrl
das
sbbl
sub
and
add
xlat
imul
js
inc
sub
dec
sub
out
cld
mov
lds
and
dec
stos
arpl
xchg
and
int3
hlt
inc
sub
push
jg
sbb
sub
repz
sbb
inc
sub
cld
xchg
stc
push
loopne
mov
xchg
pop
jbe
jl
ljmp
clc
dec
call
add
inc
add
in
loop
pushf
fs
sbb
js
xchg
mov
push
mov
xor
jns
nop
aas
jae
mov
orl
add
dec
enter
pop
mov
sbb
xor
push
aaa
sub
je
and
jbe
and
pop
stc
aaa
jecxz,pt
movl
xchg
bound
push
jmp
stos
push
mov
xchg
dec
ss
hlt
push
insl
xorb
dec
je
inc
push
das
subb
jp
aas
outsl
roll
shrl
inc
in
and
mov
lsl
pop
movsl
pop
push
std
pop
mov
fwait
add
out
pop
sbb
jge
sbb
or
out
mov
cmp
mov
imul
add
add
out
inc
push
cmc
jl
pusha
test
jge
push
add
sarb
dec
lcall
and
adc
fwait
xlat
inc
inc
sub
mov
pop
add
xchg
adc
pushl
inc
sub
cs
push
inc
out
movl
mov
pushf
stc
hlt
inc
call
shlb
pop
jge
daa
test
andb
push
loope
pop
pop
xchg
xor
fimull
movsl
jae
adc
adc
xor
cwtl
repnz
xor
mov
mov
pop
or
mov
int
mov
sbb
dec
das
ficompl
popf
rorb
lret
add
out
xor
cmc
aaa
incb
adc
push
dec
rorb
sub
xchg
push
fcmove
lods
scas
and
adc
jl
test
push
pop
sbb
push
pop
in
inc
mov
push
je
mulps
pushf
xor
enter
pop
xchg
dec
dec
xchg
mov
and
mov
cmc
sar
sbb
cmp
cs
imul
int
idivb
divl
push
mov
push
cmp
jmp
sub
es
push
adc
inc
add
fsubrs
aas
loop
inc
insl
loop
fiaddl
add
dec
clc
inc
pop
xor
xchg
js
mov
jmp
push
rcl
divl
fyl2x
rcll
mov
lret
or
add
aad
ret
mov
inc
or
push
mov
dec
testb
or
js
pop
xchg
push
enter
xor
pusha
cmp
sbb
sub
sub
sub
and
or
or
mov
loop
hlt
lea
fwait
adc
loope
xor
adc
cmp
push
mov
push
pop
out
lods
insb
push
cld
dec
inc
sahf
and
xor
inc
movsb
ret
push
addr16
adc
sbb
or
add
and
jle
aaa
sub
sbb
sbb
xor
mov
pop
mov
push
pushf
testl
cmp
repnz
xchg
mov
push
ljmp
xor
movsb
jmp
bound
sbb
fsubrs
push
ja
fmulp
adc
fists
xchg
or
mov
jb
lods
xchg
inc
and
and
dec
es
sbb
fs
adc
loope
out
sbb
mov
xchg
out
xchg
lds
out
push
aad
dec
mov
je
int3
mov
mov
mov
cmc
pop
lret
outsb
push
scas
jg
sbb
add
mov
scas
inc
rcll
jnp
leave
stc
sti
in
outsl
imul
dec
call
sbb
loop
mov
repnz
mov
sub
dec
fstpl
das
lcall
into
mov
cmpb
sti
insl
lret
mov
in
sarb
and
es
push
mov
pusha
dec
push
bound
mov
lea
sarl
sbb
pop
jns
stos
or
rorb
addr16
lods
arpl
push
aam
sbb
dec
push
pop
xor
movsl
outsl
xor
push
nop
enter
rorb
imul
rolb
das
xchg
sahf
or
dec
in
insl
and
jns
cmp
and
mov
mov
stc
add
mov
pop
daa
bound
out
mov
out
aaa
test
cltd
adc
xchg
loop
xchg
push
imul
sbb
mov
aad
add
lock
and
test
test
mov
repnz
xchg
ret
jno
je
inc
ljmp
ret
sbb
aad
stc
repz
cmp
push
fwait
mov
gs
or
mov
ror
push
aam
cmp
sarb
jg
pop
jae
cs
sbb
jnp
fstl
pusha
jae
ret
fstpt
icebp
and
negb
sub
push
xor
mov
sbb
aad
xor
cmp
xchg
popa
cmp
jge
xchg
inc
sahf
fisubl
sub
inc
fcompl
in
push
pop
cmc
adc
repz
daa
xchg
pop
inc
dec
xchg
jmp
je
push
addb
test
popf
adc
and
sahf
sbb
outsb
sub
dec
xor
mov
mov
sbb
mov
es
out
jb
inc
push
mov
add
movsl
mov
or
fdivp
mov
mov
or
and
mov
pop
jg
push
int3
mov
enter
push
rcll
cmp
outsb
cmpsb
adc
and
repz
cltd
leave
arpl
inc
add
int
lcall
aam
jae
jo
or
fnstsw
sbb
fists
jbe
notb
push
into
dec
out
sbb
outsl
pop
test
out
sbb
lret
lret
fcmovu
stos
dec
out
and
clc
jmp
imul
push
push
adcl
mov
mov
out
mov
mov
push
sbb
pushf
sarl
out
ret
xorl
inc
sbb
loop
pop
mov
mov
pop
out
lds
push
jg
inc
jno
xor
ds
jecxz
pop
rcll
arpl
dec
sbb
push
adc
add
data16
xor
lcall
fnstcw
mull
ds
movsb
sub
movsl
fdivrl
mov
pushf
mov
xor
shrl
adc
cmp
lea
in
cltd
pusha
ficompl
or
fisubrs
adc
and
cmp
ds
insb
addr16
mov
inc
int3
repnz
xor
mov
cltd
sbb
ss
xchg
jb
adc
mov
mov
sub
push
lcall
mov
sahf
fs
repnz
dec
pop
adc
sub
lea
pushf
cmpsl
aad
out
cmpsb
mov
scas
test
or
test
into
inc
leave
call
scas
imul
fsubs
sti
push
sub
pop
sarl
in
push
mov
mov
cmc
insl
adc
fisttpll
into
repz
insb
nop
and
ss
andl
lret
xlat
lock
pushf
loopne
sbb
mov
xlat
stc
inc
dec
repnz
ffreep
mov
test
push
pop
pop
adc
sarb
jmp
push
dec
cmp
sbb
loope
fidivl
pmaddwd
movsl
testl
xor
lcall
rcrb
add
sahf
pop
test
aas
popf
adc
mov
rcr
push
stc
test
jb
lods
shlb
bnd
lds
push
add
stos
jmp
mov
xor
cs
jnp
sbb
das
mov
xlat
or
in
dec
pop
mov
rclb
inc
xchg
add
add
inc
shll
dec
mov
inc
fmuls
xor
insl
push
lret
iret
stos
shll
mov
sbb
sbb
dec
dec
outsl
or
mov
mov
in
xchg
push
jl
nop
test
ret
scas
push
jmp
ja
mov
orl
inc
xor
insb
adc
jno
adc
inc
rolb
shlb
pop
sbb
push
xchg
jnp
sub
sbb
xor
data16
hlt
repz
loop
jge
mov
sub
push
repnz
push
pop
test
add
sti
push
rolb
inc
cmp
loope
into
mov
mov
mov
sti
rcrb
dec
out
jb
test
xchg
sub
cld
icebp
push
mov
cmp
jnp
pusha
hlt
nop
mov
leave
lret
sub
addb
mov
sub
add
xchg
pop
jae
xchg
sbb
decl
push
repnz
pop
popa
xchg
stos
and
push
and
outsl
sbb
ret
mov
out
mov
xor
or
cmp
xchg
stos
fld
mov
mov
outsb
adc
or
adc
or
sahf
test
sub
lea
aas
cmpsl
lret
inc
and
xchg
clc
scas
pushf
adc
jae
int
pop
aad
jge
pop
xchg
cmp
xchg
sub
stc
mov
leave
insb
sbb
inc
inc
xchg
or
repz
jns
outsb
repnz
add
lods
push
dec
shrl
out
ret
xchg
fisttpll
bnd
lahf
sbb
or
pop
movsb
and
mov
lcall
inc
sbb
add
out
adc
es
loop
jne
andb
lret
and
cmp
out
cmc
inc
sub
mov
inc
leave
or
xchg
lret
imul
lahf
sub
add
leave
mov
out
out
outsb
iret
int
xlat
push
adc
mov
and
lods
inc
out
sub
jp
adc
push
mov
pushl
les
inc
ss
test
xchg
into
pcmpgtd
push
mov
lret
insb
sbb
inc
xchg
cli
out
or
cmp
cld
xchg
fcmovbe
push
pop
mov
push
cmp
and
bound
and
add
dec
mov
sbb
arpl
fnstenv
incl
mov
lret
pop
das
das
lret
mov
jmp
mov
inc
aaa
xchg
mov
adc
ja
movsb
mov
inc
pop
add
jecxz
add
int3
arpl
std
movaps
sub
iret
and
cld
cmpsb
mov
add
iret
movsl
and
mov
dec
iret
repnz
aam
movsb
cmp
mov
lods
mov
stos
lods
pop
sub
and
insl
pop
xor
xchg
add
mov
or
adc
ret
mov
lret
cmp
loopne
iret
dec
shl
mov
scas
test
aas
out
clc
or
out
jecxz
add
outsl
sub
add
sub
ds
xchg
cli
push
shll
xor
jne
push
stos
xor
or
pop
std
roll
addr16
addr16
fsubrs
sbb
push
outsl
xor
adc
add
gs
div
xchg
and
mov
add
mov
pop
xor
xchg
xor
push
pop
push
dec
xchg
jns
cmp
nop
add
push
sbb
pop
mov
and
out
dec
aaa
pop
stc
sti
and
mov
push
test
mov
stc
imul
int3
fucomi
test
fldenv
push
mov
mov
dec
xchg
orl
cmp
adc
ficompl
mov
sti
sub
mov
scas
adc
mov
mov
and
sahf
nop
clc
push
shl
mov
cmp
notb
mov
inc
sahf
clc
inc
sbb
movsb
movsl
pop
lock
mov
adc
inc
std
mov
test
cwtl
idivb
push
jmp
lock
and
cmc
or
frstor
push
aas
movsb
inc
mov
sub
std
sbb
push
sbb
adc
jnp
add
sahf
fisubrl
call
push
pop
push
mov
stc
mov
push
xor
xchg
cmpsb
stc
ret
test
push
ret
cmp
mov
pop
or
sub
sbb
xchg
inc
stc
sbb
in
lahf
add
cli
int
fcmovne
imul
lds
xchg
je
add
jmp
inc
test
push
dec
and
aad
sbb
xchg
mov
sub
cmc
fs
add
inc
insl
pop
push
and
adc
loopne
or
repnz
jmp
call
mov
inc
add
fildl
dec
in
fsubrl
loope
pusha
pop
sahf
or
dec
lea
je
jle
mov
lret
mov
pop
jo
xchg
lret
in
mov
aas
lods
mov
push
enter
movb
mov
pushf
inc
mul
cmp
dec
cmp
and
lds
xchg
arpl
jns
int
jmp
and
jmp
dec
mov
dec
mov
sahf
xor
push
inc
sar
aam
repz
sti
mov
clc
sub
dec
dec
mov
cwtl
push
lods
test
or
add
repnz
out
adc
cli
sbb
clc
rcr
lds
mov
mov
pushf
imul
pop
mov
gs
ret
imul
ret
xchg
js
mov
sub
int
push
add
lcall
mov
bound
and
inc
pop
xchg
int
mov
das
mov
xchg
or
pop
in
adc
xor
sbb
in
sub
jnp
jmp
ss
mov
xchg
cmp
push
repnz
enter
enter
mov
and
in
xchg
push
test
stc
aam
jle
mov
fsts
xchg
imul
push
cmp
mov
sub
push
fcomp
push
int3
cmp
icebp
repz
sbb
sarb
dec
adc
cmp
jge
mov
pushf
add
pop
inc
mov
or
xor
mov
bound
mov
sbb
rol
xchg
mov
lods
add
mov
testl
jae
xor
mov
push
sub
fnstcw
push
pop
test
or
pop
loop
es
mov
inc
sbb
rorl
cld
pop
int
mov
sbb
faddl
rcrb
std
cs
ffree
jbe
pop
test
stos
mov
add
xchg
dec
or
loopne
mov
adc
cmp
xor
jl
adc
lahf
inc
or
sub
lret
das
inc
or
nop
aam
and
sbb
out
add
outsl
push
ss
mov
or
stos
sahf
sbbb
sbb
sbb
xchg
jp
or
int
push
enter
sub
inc
adc
sar
hlt
roll
addr16
dec
xor
sbb
mov
cwtl
push
jbe
rcll
ja
jae
dec
push
xlat
push
sub
push
mov
or
shll
shll
or
lret
or
and
add
or
pusha
pop
outsb
jne
fmulp
insb
pop
outsb
mov
pop
xchg
stos
shll
imull
push
jecxz
push
xchg
inc
lds
std
icebp
cmp
lds
fcomps
mov
les
nop
ret
xchg
aad
mov
int3
movsl
xchg
js
hlt
repz
dec
push
xor
mov
mov
jge
movsb
sbb
rcll
pop
pop
pop
cwtl
sahf
test
call
jae
or
push
test
dec
into
jnp
aas
push
xchg
pop
cmpb
fcomps
insl
ficoms
ljmp
out
pop
into
aad
mov
inc
adc
xor
iret
stos
sub
dec
inc
leave
mov
sbb
je
mov
mov
outsl
mov
fdivl
pop
ja
lcall
inc
cmc
jle
or
push
into
mov
lods
mov
fwait
or
loop
sbb
push
xchg
stc
arpl
cmp
mov
repz
and
adc
adc
nop
movsb
sbb
mov
cmp
ret
pop
push
daa
subl
adc
lea
fdivrs
cwtl
icebp
jb
bnd
jo
insl
into
pusha
pop
inc
adc
xchg
xor
lahf
push
sub
and
ret
orb
adc
std
pop
mov
pop
dec
push
fstl
mov
mov
cmovns
sahf
sbb
cmp
sub
xlat
out
cmpsb
jl
push
push
mov
lods
sub
mov
inc
ficompl
pop
outsl
xchg
ds
dec
cmp
push
insb
imul
inc
cmpsl
jmp
xchg
inc
in
xor
icebp
xchg
sbb
or
adcl
inc
fistl
or
lret
andnps
test
add
stc
in
hlt
out
add
push
inc
psrlq
or
leave
notb
mov
cmp
pushf
dec
sub
outsb
fs
popf
push
insl
das
push
xor
and
adc
test
cltd
jecxz
imul
scas
add
insb
int3
lods
movsl
aad
pop
cltd
hlt
stc
test
movsb
sbbl
adc
sbb
dec
dec
jne
add
pop
popf
xchg
pop
xchg
push
push
or
xchg
ds
mov
pop
cmp
movsl
scas
out
sbb
lcall
std
xchg
mov
in
leave
pop
jbe,pn
add
xchg
ret
sub
rclb
aad
inc
fcmovnbe
in
xor
cmp
mov
jb
push
rorb
orb
jge
mov
xchg
clc
jg
int
pop
jne
xor
hlt
scas
cmpl
fidivrs
test
mov
ret
stos
and
call
inc
jnp
or
cmp
mov
inc
push
jp
pop
popf
adc
mov
inc
sbb
lods
clc
or
lret
adc
movsl
in
push
jmp
mov
sbb
hlt
sub
pop
imul
pop
and
stos
outsb
adc
mov
mov
stos
sub
aad
lds
cmp
fwait
sub
lret
mov
aaa
pop
or
sub
pop
lock
and
dec
xchg
js
js
ret
fsubrl
inc
dec
je
push
mov
sub
inc
adc
pop
out
andl
aas
mov
xor
inc
mov
fcmovbe
dec
mov
mov
imul
cmc
push
lods
lods
cld
push
mov
ret
ffree
call
mov
sbb
xor
dec
btr
loope
repnz
cmp
push
int
loopne
xchg
jle
lret
insl
push
aaa
ja
pop
movsb
fstl
mov
ljmp
jb
jmp
ds
cmpsl
hlt
and
shlb
mov
hlt
dec
pop
push
adcb
sbb
int3
mov
mov
popa
fisubs
jne
and
into
mov
cmpsl
adc
cmp
cmp
xor
jnp
faddp
popa
out
sbb
mov
mov
imul
mov
pop
sub
loope
mov
dec
into
cmpsb
lret
and
test
fwait
mov
into
fidivs
mov
or
dec
cmp
fucom
popf
and
insb
dec
mov
add
dec
pop
sub
push
add
sbb
int3
add
or
jmp
dec
pop
subl
jp
xor
stos
jp
mov
add
shll
jle
xor
cmpsl
test
bound
xor
scas
iret
loopne
jae
push
nop
jnp
xor
dec
into
pusha
aaa
lods
sbb
inc
nop
rclb
xchg
jns
lret
lods
cmp
cld
and
cli
cltd
dec
pop
fldl
inc
and
rorl
dec
sarb
add
jg
cmpsb
push
pop
mov
cmp
pop
cmpsl
stos
adc
stos
add
inc
arpl
jg
mov
jb
pop
xchg
and
xor
cmp
pop
loopne
inc
cmpsb
xchg
out
sbb
loop
mov
test
mov
sbb
shrl
mov
out
pop
sti
mov
or
fisubl
add
mov
dec
call
sbb
sub
push
lret
sti
jb
add
xor
loop
repnz
mov
inc
fistl
sti
jb
add
xor
loop
repnz
mov
inc
add
sti
jb
add
xor
jecxz
repnz
sbb
sub
sti
jb
jne
lcall
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
jle
outsb
bound
dec
iret
jb
dec
dec
cmp
ret
out
loop
repz
cmpb
mov
push
outsb
bound
dec
add
adc
and
xor
shr
loop
repnz
inc
rclb
mov
push
outsb
bound
dec
add
adc
and
xor
ret
int
lods
repnz
sub
stc
xlat
lock
sbb
ss
dec
lret
push
cltd
sub
xchg
lret
sbb
xor
repz
add
stos
fcoml
iret
add
mov
sbb
mov
aas
fists
jle
arpl
pop
dec
mov
scas
test
test
arpl
xchg
sahf
shrb
mov
inc
cmp
or
sbb
je
lock
add
sbb
cwtl
jge,pn
rclb
xchg
xchg
orb
ret
pop
mov
cmpsl
mov
add
shr
insl
scas
repnz
mov
mov
dec
stc
push
sarb
out
push
xor
out
and
sarb
xor
bound
dec
add
adc
and
xor
ret
out
loop
repnz
cmpb
out
jp
das
or
dec
add
inc
inc
pop
xor
xchg
mov
shl
shlb
aaa
or
cmp
dec
add
bound
pusha
push
mov
xchg
loopne
repnz
adc
scas
into
enter
cmp
or
adc
and
xor
ret
out
loop
repnz
cmpb
mov
push
outsb
bound
dec
add
adc
and
xor
ret
out
loop
repnz
cmpb
mov
ja
pushl
adc
leave
xchg
lds
jecxz
loope
lret
stos
push
pusha
jecxz
jb
mov
sbb
sub
lret
lods
popf
pushf
mov
cltd
inc
and
call
aaa
out
push
nop
xor
mov
mov
inc
xchg
scas
fs
pop
xchg
cmpsb
nop
xor
lahf
shll
xchg
mov
bnd
cmpsb
xor
inc
dec
lock
lcall
lods
out
hlt
mov
fistpl
push
xor
or
push
aad
cmp
cmpsb
shrb
dec
mov
outsb
cli
cmp
xchg
sub
jbe
mov
inc
or
pop
add
sbb
xchg
in
lret
lcall
add
fisubs
outsb
sarl
enter
xor
cmp
mov
add
mov
mov
push
cltd
icebp
pop
xchg
pusha
cmp
or
mov
mov
xor
ljmp
ret
sbb
cmp
sub
push
jecxz
int
sub
dec
stos
ljmp
pand
test
ljmp
inc
pushf
or
mov
into
insl
lahf
inc
lds
fadds
mov
xor
nop
push
pop
lea
adc
cmc
lods
inc
stos
test
pop
ds
rclb
fdivrl
aas
std
push
out
mov
idivb
mov
hlt
jecxz
xchg
add
cmpsb
test
sarb
das
stos
movsl
cs
push
cltd
sbb
aas
push
mov
pop
sub
outsb
push
mov
dec
xor
pop
and
sub
popa
adcl
xchg
mov
in
mov
mov
je
dec
xchg
jl
inc
arpl
mov
lret
sti
push
add
add
mov
int
mov
xchg
ficomps
lods
pop
shl
push
xlat
mov
jg
lds
pop
xchg
xor
insb
mov
sarl
jl
jae
xor
mov
mov
lods
sbb
xor
call
rorb
pusha
inc
test
sahf
bound
cltd
mov
xchg
pushf
pop
push
mov
sub
movsb
or
stc
mov
inc
and
and
fimull
or
mov
mov
jp,pt
cmp
in
jae
xor
out
pop
push
push
lock
or
in
movsb
je
cmp
js
xchg
shr
push
in
aam
xor
push
inc
sarl
xchg
leave
dec
scas
dec
cmc
mov
addb
xor
mov
mov
std
loope
into
je
xor
sarl
mov
xor
mov
js
push
filds
xchg
and
in
xorl
roll
hlt
cmpsl
cmp
cmp
dec
sbb
movsl
mov
sub
std
dec
jns
loop
movsb
mov
xchg
clc
das
cwtl
or
aam
dec
into
mov
mov
xchg
popa
sarl
xor
or
push
sbb
imul
dec
xchg
nop
xchg
push
outsb
push
loopne
mov
inc
gs
leave
loope
dec
loop
push
push
inc
ja
cmp
sub
push
nop
mov
into
adc
mov
push
or
add
lds
ret
xor
lahf
jae
cmp
jp
and
cmc
gs
and
or
push
and
cmc
adc
adc
adc
repz
and
sti
dec
add
jl
adc
xchg
mov
xorps
sar
or
or
cmpsb
in
pushf
sqrtps
xchg
ljmp
fstl
in
add
sti
dec
rcpps
test
jg
pusha
jae
jno
stc
ds
xor
cmp
stos
pop
xor
and
sub
pop
jg
roll
ss
sbb
sub
loopne
gs
mov
adcb
hlt
jb
cwtl
ja
inc
enter
ss
cs
mov
call
stos
mov
xchg
aam
add
or
inc
lods
push
mov
mov
add
sub
fildll
sub
lods
je
mov
jb
mov
rolb
and
dec
add
mov
hlt
dec
inc
push
pushf
adc
loop
popa
jbe
loop
push
push
mov
enter
pop
pop
ss
lahf
or
adc
sbb
inc
mov
iret
es
dec
daa
pop
fwait
cwtl
dec
pop
cs
mov
in
int3
ss
dec
mov
fcmovne
ss
clc
jcxz
pop
hlt
and
cmp
mov
push
cmpsl
lods
pop
cmp
dec
loope
jl
outsl
cmp
shl
adc
in
jne
pop
fs
ja
pushf
roll
mov
dec
xorl
popf
lret
sub
push
mov
mov
dec
stc
mov
xor
clc
push
insb
push
adc
out
pop
jnp
pop
sub
fstpl
scas
push
stc
fstps
inc
call
sbb
xchg
sub
das
xchg
jae
bound
std
add
leave
aad
inc
cmp
je
cmp
push
lods
fwait
shrd
dec
sarl
stos
enter
fbstp
insl
xor
stos
jae
push
movsb
enter
add
push
and
sbb
push
test
push
xor
jae
aad
stos
pop
mov
aas
push
jne
and
cmp
orl
push
mov
xchg
cmp
xchg
push
movsl
and
sbb
imul
loopne
out
jbe
aam
and
jl
mov
or
loopne
adc
mov
ss
clc
pop
pusha
popa
push
insl
insl
ja
and
inc
jle
inc
push
pop
orl
jmp
frstor
in
int
or
xor
lds
push
xor
adc
es
dec
dec
mov
push
jmp
dec
push
pop
sbb
clc
pop
xorl
sbb
mov
ret
mov
repnz
cmp
adc
pop
in
loope
mov
or
js
in
sub
or
xor
sti
lret
loop
xor
xchg
xlat
dec
out
call
cltd
or
sub
cmpxchg
adc
mov
and
xchg
js
repnz
dec
lret
lahf
rorb
pop
lods
dec
jbe
cld
dec
dec
lock
imul
xor
das
pop
repnz
call
cmp
xor
rclb
xlat
enter
cmp
mov
mov
cmp
mov
mov
jp
and
fs
pop
mov
into
add
ret
es
int3
ss
and
mov
repnz
fnstsw
int3
or
popa
adc
add
imulb
int3
cli
out
lods
outsl
out
xchg
xchg
xchg
cwtl
insl
fwait
sbb
sub
or
outsl
test
pop
into
adc
iret
stos
js
scas
xor
aaa
ds
out
ds
repz
sti
cld
fmull
pop
adc
jge
icebp
mov
mov
into
scas
jecxz
lea
mov
lods
in
push
push
push
xchg
lods
fisttps
arpl
pop
adc
jae
loope
and
cmpsb
loope
call
fwait
push
hlt
and
dec
nop
xchg
lret
push
sbb
cmp
inc
and
in
test
xchg
cmp
lds
filds
rolb
cmp
push
push
dec
jg
mov
sub
jmp
inc
mov
or
les
lret
nop
lods
xchg
pop
fsubr
iret
xchg
mov
sub
orb
push
dec
cmp
pop
adc
and
jo
xchg
mov
cmc
pop
mov
pop
add
mov
out
jg
dec
shlb
icebp
dec
adc
add
scas
adc
popa
jle,pt
xchg
adc
add
jle
xchg
sahf
mov
fcom
add
or
aas
rcrl
sbb
pop
jns
out
cld
xchg
call
jno
cmp
lret
lahf
xchg
mov
and
fisttps
xorl
cmpsl
dec
shll
dec
arpl
mov
and
mov
mov
shrl
jl
mov
dec
fucomp
cmp
sahf
mov
paddusb
xor
in
lret
movsl
stos
push
xor
jo
jno
js
cwtl
sarl
leave
shlb
xchg
popa
mov
push
or
loopne
add
and
or
jp
or
outsl
adc
jmp
popf
int
lcall
movsl
adc
in
insb
mov
adc
jl
icebp
fcomip
sbb
push
jp
mov
adc
scas
sbb
mov
inc
jno
ret
jle
sbb
xchg
cmp
lea
push
pushl
pop
cmp
fcomps
cmp
dec
xchg
jp
pop
repnz
mulb
xor
es
paddusb
fmuls
insb
fistpl
clc
xorl
sub
out
sub
dec
out
inc
out
icebp
popf
xchg
shl
or
lods
push
aad
shrb
popf
cwtl
xor
xor
inc
lea
lret
cltd
adc
mov
pop
push
push
icebp
push
sub
cli
icebp
xchg
jb
stc
inc
mov
jo
fsubs
pop
mov
les
stos
mov
jecxz
dec
test
repz
jae
aas
sub
xor
repnz
cmp
jl
int3
and
and
addl
stos
and
xchg
jmp
cli
cmp
into
pusha
or
dec
mov
sbb
out
movsb
mov
push
arpl
cwtl
lods
std
fcomps
adc
stos
sub
xchg
lea
scas
nop
or
xchg
enter
adc
add
mov
xchg
mov
mov
in
add
lret
jno
int
jb
nop
mov
mov
ss
push
xchg
dec
add
int
adc
cmp
insb
lret
jl
out
sub
dec
test
cmp
cmpsb
or
sbb
pusha
add
xchg
test
mov
jne
inc
xchg
mov
mov
lea
jmp
sub
or
push
repz
or
push
shlb
pop
clc
sbb
push
scas
ret
repz
jg
fs
jno
xchg
dec
cmpsl
jno
fwait
imul
mov
dec
mov
outsb
arpl
cmp
inc
mov
scas
jo
xor
sbb
or
fld
xor
std
mov
arpl
addl
shrl
inc
push
push
mov
xchg
out
out
stc
inc
shrb
pop
lret
mov
mov
sbb
data16
enter
jnp
mov
pop
xlat
push
add
repz
jle
mov
aad
and
mulb
test
pop
movsb
stos
das
dec
daa
sbb
mov
lods
push
enter
push
test
imul
ja
xchg
push
sbb
movsb
sarb
mov
add
and
cs
or
test
or
arpl
xchg
xchg
lea
fs
repz
mov
jg
mov
test
in
mov
pop
xchg
test
cmp
fldenv
pushf
aad
xchg
in
outsb
adc
cs
jb
mov
out
call
cmc
jmp
mov
idivl
in
pushl
popf
mov
hlt
adc
xlat
xor
ret
mov
sub
push
jp
push
icebp
scas
fisubrl
pop
movsl
popa
outsb
test
xchg
and
push
push
leave
mov
sub
les
mov
inc
stc
lret
repz
jno
or
or
ret
push
or
jge
out
sar
repnz
mov
push
test
sbb
data16
dec
sub
movsb
sub
aad
out
out
ficoml
in
jle
in
xchg
xor
push
push
aas
dec
cmc
fcomi
mov
add
dec
xchg
or
loopne
xchg
mov
jnp
mov
setnp
sbb
sbb
inc
push
stos
sbb
sub
push
sbb
push
mov
out
jecxz
stos
outsb
lret
cmpl
dec
lret
inc
mov
popf
cmp
cld
push
push
pop
dec
out
lods
dec
mov
and
data16
push
sub
mov
cltd
pop
pop
in
out
adc
fldenv
orl
out
jne
mov
jg
nop
pop
sti
cwtl
shl
stos
jle
sbb
push
loop
loope
inc
mov
dec
fisttpl
ljmp
shlb
jle
pusha
sub
aas
pop
jno
into
mov
imul
int3
adc
fimuls
mov
push
loope
popa
addr16
test
mov
lret
cmpsl
jp
cmc
rcl
pop
test
pop
and
or
dec
xchg
push
movsl
subb
push
jno
rcr
insl
es
mov
and
cmp
das
jmp
outsl
lods
ds
add
mov
push
ficoms
sub
and
jae
test
mov
iret
fdivs
mov
mov
fsubl
lock
lret
pop
or
and
call
imul
test
dec
jge
pusha
popl
dec
xchg
add
iret
scas
rcll
movsb
mov
xchg
fnsave
stc
jbe
jne
stc
enter
sub
rep
dec
xchg
fiadds
xor
inc
call
and
mov
or
cmp
mov
xor
test
sub
cltd
xchg
or
insb
or
div
push
mov
push
rcrl
mov
loop
cmp
xorb
mov
in
aam
ljmp
mov
arpl
jg
push
loopne
push
inc
jg
cmpsb
push
sub
testb
adc
outsl
push
pusha
cmp
mov
push
cmc
sub
aas
inc
icebp
mov
subb
mov
ss
movb
sbb
into
or
xor
shlb
push
fadds
cli
mov
mov
test
dec
mov
xor
adc
xchg
bound
aaa
jo
subb
add
aad
movsb
mov
xor
outsb
scas
mov
rol
hlt
adc
das
sbb
mov
stos
mov
sbbl
pop
cwtl
push
sbb
sbb
push
dec
push
mov
jg
aad
xor
dec
jns
nop
fistpl
dec
jg
call
add
lcall
mov
mov
jno
mov
adc
enter
cli
stos
and
dec
cwtl
sbb
bound
jg
je
idivl
negl
mov
mov
stos
adc
lcall
sar
fldt
das
or
lret
fldt
mov
or
cs
mov
xchg
lea
and
push
icebp
aam
xchg
pop
xchg
in
push
mov
imul
sub
mov
outsl
adc
icebp
test
out
dec
push
xor
mov
test
and
bnd
push
lods
jno
adc
xchg
pop
add
mov
cmc
cmp
popfw
pop
cmp
push
jns
or
dec
mov
mov
sub
orb
push
aam
test
adc
xor
test
mov
mov
xchg
cmp
ja
push
in
mov
adc
stc
in
movsl
sbb
mov
je
sbbb
inc
lods
jo
sbb
call
push
xchg
pop
fisubs
inc
mov
int
int3
ja
movsl
inc
lcall
jp
jecxz
notb
dec
dec
ss
fcmovu
lock
dec
imul
adc
jg
lret
popf
dec
in
push
xlat
adc
mov
and
mov
dec
insl
push
sti
jmp
add
bound
les
add
jl
in
pop
bound
andl
sti
cltd
or
pusha
cli
sahf
fs
dec
pop
mov
lods
ret
call
xchg
adc
xchg
enter
and
mov
mov
push
scas
ds
jg
enter
adc
dec
fistps
push
repz
cmp
cld
jle
pop
sbb
iret
pop
loope
pop
cmc
or
push
cs
daa
adc
pop
inc
nop
divb
mov
stc
mov
imul
jno
dec
ss
and
inc
add
in
addr16
mov
clc
mov
seto
inc
popf
pusha
mov
jne
insl
test
cmpsl
adc
sbb
add
ror
adc
xlat
mov
mov
push
mov
cli
cmpsb
mov
mov
and
jbe
pop
cltd
int
xchg
jp
sbb
cmp
push
in
cmp
inc
in
mov
sub
push
inc
adc
push
sbb
loope
push
jno
jmp
adc
out
insl
rcr
rorb
adc
ja
int
jns
jmp
sahf
ja
or
and
movsl
jg
sub
in
mov
mov
adc
xchg
dec
stc
mov
push
es
dec
mov
mov
in
imul
or
jle
cmp
mov
nop
inc
enter
sbb
cmp
xor
mov
out
xchg
inc
or
mov
fildll
inc
icebp
cmp
jnp
mov
push
jne
adc
cmpl
cs
inc
insl
ret
decl
sbb
lods
sub
add
xchg
sbbl
pop
push
mov
int
jmp
jno
clc
xlat
sub
cmc
jmp
push
push
xor
xbegin
push
mov
and
mov
dec
lods
ss
xchg
or
pop
mov
push
cmp
call
xor
inc
xchg
or
mov
jge
adc
cld
sub
sbbb
mov
jb
popa
mov
lret
std
mov
movsb
lds
pusha
dec
dec
cmp
repz
ss
scas
inc
push
fmul
inc
pop
mov
sbb
mov
dec
push
xchg
movsl
push
cmc
out
xchg
pop
aam
lcall
sub
mov
pop
mov
popf
shrb
ja
adc
inc
es
jg
iret
mov
js
jo
add
add
xchg
pop
andl
shl
test
je
roll
imul
and
sbb
pop
leave
mov
jmp
scas
push
sub
push
xorb
xchg
adcb
idivb
inc
or
xchg
cs
or
xlat
sbb
jle
adc
mov
pop
mov
mov
in
ja
je
or
cltd
cmp
push
xchg
push
xchg
jg
pusha
pop
jne
inc
or
scas
dec
lret
pop
imul
push
mov
fs
jg
push
sti
loop
dec
mov
inc
add
or
dec
js
inc
repnz
int3
cwtl
rclb
fcomp
mov
fstp
pusha
mov
jns
xchg
das
inc
xor
fbld
lods
push
test
cmc
mov
add
ret
push
jns
out
int
inc
adc
addr16
in
sub
mov
js
xchg
shll
fistpll
rol
jmp
mov
decl
fwait
stos
add
push
test
push
scas
sub
mov
inc
orb
jmp
push
mov
or
cmp
add
mov
imul
cmc
mov
sub
or
leave
cwtl
or
xchg
push
adc
ljmp
rcr
mov
inc
and
mov
mov
mov
imul
cmp
cmp
pop
mov
packsswb
sbb
insb
into
push
nop
add
dec
xor
mov
rcrl
sahf
imul
imul
adc
fidivrs
ds
int3
add
nop
adc
jo
cltd
mov
inc
pop
jns
lock
sarb
xchg
jo
iret
cmp
jo
and
dec
sahf
cmp
aas
sub
jle
repnz
xor
push
push
mov
lea
pop
popa
xor
aam
pop
bound
fcoms
repnz
xor
into
daa
and
mov
and
jge
test
jnp
das
inc
cwtl
push
dec
rcl
test
movsl
sub
lds
adc
lock
inc
outsl
repz
mov
mov
mov
xlat
popf
push
adc
jle
ficomps
mov
inc
iret
sub
insl
mov
imul
out
pop
sub
rcr
std
lods
jo
sbb
push
fcoml
in
imul
mov
mov
cmp
sbb
pop
test
inc
fidivrl
jno
imul
inc
add
repz
decb
adc
push
jge
dec
push
mov
in
mov
pop
popa
js
xor
lea
daa
push
in
movsb
arpl
cwtl
pop
fwait
mov
subb
push
fmulp
mov
sbb
nop
frstor
jl
xchg
sub
aaa
add
jge
sub
daa
es
xor
jne
pop
rcll
std
add
jb
cmp
jle
push
ret
faddl
xor
mov
pop
cmp
mov
sbb
gs
jb
xchg
or
push
xorl
sbb
mov
pop
sub
or
pop
lret
dec
mov
addb
outsb
jno
stos
js
and
sbbb
inc
mov
jns
xchg
jecxz
sbb
ja
cmp
sbb
dec
int
pop
add
dec
fstp
imul
dec
sbb
inc
dec
fisttpl
mov
dec
add
adc
and
xor
ret
out
loop
repnz
cmpb
mov
push
outsb
bound
dec
add
adc
and
xor
ret
out
loop
repnz
cmpb
mov
shrb
pop
jb
cmpb
and
mov
ret
out
loop
repnz
cmpb
mov
push
outsb
bound
dec
add
adc
and
xor
ret
inc
dec
fdivp
mov
shlb
jno
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
inc
jbe
data16
jbe
pop
out
lret
ss
js
fdivrl
outsb
negb
xchg
xchg
ds
mov
inc
into
push
data16
jbe
push
mov
mov
dec
push
out
negb
jecxz
xchg
cmpsb
cs
inc
dec
push
js
sub
push
push
xchg
es
ss
and
sbb
push
lret
pop
rcrl
cltd
adc
and
dec
sub
in
lds
dec
jecxz
pop
pop
jb
inc
cltd
inc
or
sti
into
push
jno
xchg
scas
sub
sbb
int
push
mov
xchg
mov
mov
dec
fmul
std
xchg
cmc
push
mov
and
subl
lret
mov
xorl
lahf
pop
jno
mov
cmp
jae
xchg
or
sub
shll
add
or
ss
cmp
ret
sbbl
push
xchg
pop
push
pop
pop
into
inc
add
dec
jle
dec
jbe
cmp
sarb
outsb
or
cmpsb
ds
in
inc
into
push
data16
lret
es
lods
cmpsb
out
idivb
adc
lods
inc
mov
aaa
lock
sti
bound
mov
iret
cs
xchg
pusha
rorl
imul
mov
inc
out
push
shlb
sbb
shld
add
ret
outsl
loop
pop
std
add
push
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
mov
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
or
or
xchg
fidivs
rcrb
xchg
mov
mov
popf
std
push
sbb
push
pop
sub
movsb
cmp
ljmp
xor
pop
and
mov
jnp
mov
out
jno
mov
dec
cmpsb
pop
jl
sbb
sub
daa
out
js
pop
xlat
sbb
scas
push
jo
outsb
inc
mov
add
movsl
arpl
fucomi
xor
mov
flds
adc
in
mov
lea
adc
stos
lods
jno
push
pop
adc
cmp
push
jmp
test
rcrb
movsb
xor
cwtl
adc
std
inc
ja
enter
lcall
in
xchg
jge
mov
movsb
js
push
sub
aad
jecxz
imul
pushf
out
mov
mov
in
sbb
test
cmp
ds
xor
jle
xchg
push
fst
lock
push
fs
mov
je
stc
mov
mov
xor
sub
cwtl
pop
jle
mov
inc
adc
dec
cmp
mov
lods
mov
push
dec
ror
xlat
cmpsb
sbb
push
addr16
jbe
fistps
inc
cwtl
in
das
adc
scas
icebp
fimuls
push
dec
xor
add
push
rcll
inc
loop
jnp
ret
pop
or
imul
in
pop
jmp
cmp
inc
dec
scas
push
jmp
cld
ljmp
xchg
popa
add
xchg
or
dec
icebp
lods
ja
test
add
lret
sub
mov
outsb
imul
mov
sbb
aam
cmp
mov
xor
lock
adc
ss
mov
pop
add
mov
dec
mov
mov
jg
loopne
aas
dec
frstor
fs
pop
faddp
lds
sahf
pop
cmc
pusha
and
and
dec
jl
data16
lahf
aas
fwait
ljmp
xor
imul
pusha
or
pop
xor
mov
add
adc
popa
imul
xchg
and
and
cmp
sub
sub
jnp
mov
cli
std
mov
add
popf
mov
out
out
sti
fstp
fcomi
cmpsb
mov
cld
out
pop
call
fiaddl
fsubrs
add
pop
cmp
jle
pop
mov
out
leave
push
push
iret
push
pop
inc
sub
es
and
mov
insl
sbb
lcall
pop
mov
and
pop
es
es
lahf
mov
fwait
mov
mov
fistl
imul
out
incl
mov
lods
mov
enter
insl
xlat
sbb
mov
mov
push
mov
push
xorb
std
push
xchg
mov
push
loopne
jg
dec
out
dec
fiadds
fstpl
and
int3
mov
insl
mov
shl
inc
cmp
test
xchg
jmp
sub
and
jae
xchg
stc
movsb
insb
add
out
sub
insl
pushf
add
iret
xor
ret
imul
cwtl
cmc
xchg
and
stos
pop
xor
adc
stos
mov
ljmp
fs
cmpsb
repnz
pop
popa
leave
sub
fisttps
push
jl
mov
sub
push
clc
push
iret
mov
popa
adc
test
pop
faddp
add
xchg
loopne
sar
mov
push
clc
cld
sbb
push
hlt
das
inc
aas
ret
mov
sub
hlt
rorb
repnz
jmp
mov
aaa
lahf
pop
sub
shll
jge
inc
int
mov
int3
aam
pop
xlat
mov
popf
stos
dec
or
pop
sbb
cmpsl
out
aad
int
ja
adc
push
data16
movsb
add
clc
push
mov
mov
jnp
jns
out
loop
jnp
rcrl
lcall
cmp
cmp
andb
stos
jge
aam
dec
loope
into
dec
fsts
push
repnz
mov
hlt
faddp
pop
test
test
inc
xor
or
test
icebp
fs
push
lock
or
sbb
mov
pop
into
das
jns
frstor
bound
pop
orb
dec
and
ret
inc
dec
add
mov
adc
push
dec
mov
xchg
pop
jmp
sbb
cltd
mov
lock
mov
test
xchg
dec
cmp
popf
dec
fisubs
xchg
sub
test
jmp
aaa
push
rorb
cmp
lret
push
popf
adcb
insl
xchg
mov
dec
cmc
mov
test
mov
xor
dec
mov
xor
xor
lret
pop
lahf
mov
mov
or
dec
bound
cld
daa
shrb
aaa
mov
les
fidivrl
sbb
sbb
cmpsb
fbld
test
hlt
data16
inc
cli
andb
enter
dec
rcr
sbb
sub
or
cmpl
pop
inc
jp
push
or
push
pusha
mov
sbb
int3
mov
jae
mov
and
jecxz
push
sbb
push
test
xor
sub
push
loop
in
push
roll
cmc
sbb
ljmp
in
jo
inc
sbb
ljmp
out
movsl
sbb
xchg
pop
popf
jmp
inc
out
mov
in
dec
pop
aas
dec
cmpsb
sbb
lret
and
jp
fmul
add
out
inc
xchg
xor
addl
sbb
or
mov
ja
sbb
dec
mov
sub
ds
hlt
sbb
sbb
mov
shll
jo
mov
cmp
repnz
mov
xor
pop
test
cmpsb
enter
lods
cli
add
pop
repz
mov
cwtl
pop
or
cld
std
mov
add
pop
sbb
decb
inc
mov
adc
cmp
add
mov
or
js
int
push
sbb
xlat
faddp
inc
mov
test
ret
rolb
xchg
loop
clc
and
lahf
sbb
pop
dec
pop
int3
jnp
xor
inc
jp
inc
cmp
push
mov
shll
test
aaa
xchg
cltd
xchg
dec
stc
fstl
das
cli
mov
jg
mov
mov
daa
xor
add
shrl
and
xor
lcall
jno
xchg
ret
xor
cwtl
rorl
mov
mov
xchg
sub
aas
cmpsb
shlb
pop
lods
xor
enter
pusha
mov
ljmp
rcl
hlt
add
lods
cmpsl
fstpl
outsb
gs
stos
push
pop
mov
sub
shrb
mov
aad
cli
or
jne
in
outsb
stos
or
jmp
test
xchg
pop
sub
or
addr16
mov
lea
xor
or
test
dec
push
ret
sub
pushf
add
daa
cmp
add
push
lcall
push
inc
lock
adc
ret
cli
das
in
incl
and
sbb
test
mov
mov
jno
adc
pop
inc
sar
adc
pop
inc
mov
cmp
rcl
dec
movsl
mov
ret
xchg
inc
or
mov
jno
clc
std
pop
sti
push
jo
fstpt
loopne
inc
mov
int
mov
xorl
cmc
or
mov
and
adc
xor
mov
lods
test
sub
cli
push
div
adc
mov
clc
mov
add
out
je
xchg
inc
adc
outsb
pop
iret
sub
push
adc
cli
xchg
jmp
outsb
mov
mov
or
mov
ja
xorb
out
inc
subb
in
outsl
fsts
popf
mov
sub
push
pop
xchg
int
movsl
lods
cmp
insb
push
adc
into
sbb
std
jge
and
aaa
mov
jecxz
pop
pop
mov
fwait
test
hlt
outsb
popa
push
aad
pop
rcr
loop
fwait
cmp
mov
ficoms
jmp
push
jle
cmp
dec
jmp
jg
inc
loopne
mov
popa
add
jns
mov
into
push
adc
adc
sub
push
out
stos
xchg
test
daa
popa
mov
push
stos
addr16
push
push
gs
pusha
cmp
dec
push
inc
inc
adc
inc
mov
xchg
or
negb
sub
sub
nop
incl
outsb
jo
in
orb
adc
cmp
and
cmp
aam
in
mov
xor
insl
cmp
imul
pop
in
dec
in
aas
orb
xchg
pusha
mov
xor
adc
pusha
int
jl
mov
loope
or
call
or
mov
pop
mov
lcall
jp
mov
add
loopne
enter
push
add
mov
icebp
pop
adc
adc
jnp
shlb
inc
jmp
call
jb
add
inc
pop
rorb
xlat
clc
mov
lods
addr16
jno
xchg
int
lods
lret
imul
xchg
or
or
xor
out
movsb
push
insl
xchg
das
enter
or
mov
or
mov
adcb
call
jmp
lea
inc
xor
xchg
xchg
or
adc
inc
jno
lret
push
repz
popf
pop
in
jne
loopne
rclb
andl
sub
and
sarl
arpl
jne
pop
arpl
mov
ret
xchg
movsl
inc
and
jbe
andl
pop
repnz
mov
jb
jbe
sbbl
lcall
cmp
xchg
into
xchg
jmp
insb
fsincos
shrl
ja
and
cmp
cmpsl
les
aaa
mov
cs
stos
dec
arpl
fdivr
add
movsb
mov
lds
or
stos
mov
aam
imul
xchg
jo
int
add
into
cmc
jmp
lahf
in
es
shlb
cwtl
call
out
xchg
sti
out
adc
test
push
adc
xchg
xchg
cmp
sbb
cs
addb
loop
insl
inc
test
out
jmp
cmpsl
fimuls
into
les
mov
clc
lret
lods
int
sti
das
adc
lret
stos
push
inc
popf
fcoml
sbb
xchg
pop
lret
bound
xchg
repz
ret
adc
ret
cmpsl
dec
inc
dec
je
daa
and
sub
sbb
mov
aas
xchg
mov
daa
and
aaa
inc
xchg
add
fs
sti
push
mov
adc
stc
add
lahf
xchg
xchg
dec
fadds
nop
out
mov
inc
cli
inc
cmp
pop
enter
aas
divb
insl
imul
ret
pop
in
inc
ret
xor
js
and
enter
lret
mov
mov
push
jge
inc
dec
pusha
fs
pop
dec
xchg
fwait
push
out
aad
jne
popf
dec
out
add
repnz
jle
sub
stc
icebp
lds
jge
test
dec
jmp
loop
adc
pop
or
loope
mov
jge
pop
mov
out
mov
xor
test
xchg
cmc
ret
xchg
lret
pushf
jnp
aaa
out
mov
cmp
add
int
leave
je
mov
inc
cli
add
test
es
inc
mov
and
mov
pop
pop
icebp
cwtl
insb
test
pop
mov
gs
ss
call
rcl
cmpl
jmp
cmpsb
sub
and
and
adcb
push
mov
stos
sbb
push
push
pop
xor
test
shrb
into
loope
mov
mov
xchg
in
scas
ljmp
ljmp
fs
fistl
xor
xchg
push
jge
lock
pop
jo
adc
and
push
cli
movsl
filds
or
cmc
arpl
mov
sbb
mov
and
loope
fbstp
mov
test
arpl
push
push
daa
stos
loope
aad
cmc
jmp
or
mov
pop
pop
pop
mov
test
pop
shl
cmp
sub
data16
xlat
fs
cmp
pop
mov
sarb
push
lock
lahf
cmp
inc
xchg
fdivl
mov
xchg
mov
cli
repz
mov
aas
ja
mov
sarb
icebp
xchg
and
pop
push
cmpsb
pop
ret
and
ss
or
and
push
daa
insl
cs
call
fs
out
daa
dec
subl
repz
mov
aaa
ret
cs
mov
aas
or
sbb
cmp
cmp
jno
jo
ds
js
push
cli
xchg
cltd
es
pop
jmp
ret
negb
in
xchg
mov
and
pop
mov
push
push
push
pop
jge
fcmovb
mov
adc
jbe
add
xchg
repz
lret
inc
test
adc
ja
fisubs
jge
and
pop
or
in
mov
bound
dec
adc
icebp
pop
and
test
push
aas
mov
out
jecxz
imul
add
scas
lret
int3
clc
inc
lcall
rcrl
mov
aaa
dec
jmp
out
scas
movsl
mov
popa
das
mov
xor
test
pop
cmp
fdivrl
cmpsl
mov
loope
inc
and
dec
xchg
movd
test
sbb
inc
out
adc
jbe
daa
fsubrs
jmp
add
leave
inc
andl
rol
sahf
cmp
sbb
repnz
ljmp
mov
lods
cmp
pop
push
aam
repnz
xor
sbb
push
test
mov
out
ds
js
xor
fs
sbb
and
inc
ljmp
in
jle
xchg
pop
sarl
pop
enter
dec
sub
pop
mov
pop
xor
pop
ss
les
insl
adcl
das
inc
unpckhps
jle
dec
inc
clc
in
bound
fisubrs
push
sbb
jle
in
mov
lret
inc
mull
scas
data16
lret
xchg
out
imul
dec
pushf
sub
out
ljmp
fsts
mov
or
cld
repz
cmpsl
pop
add
push
lret
pop
fmul
pushf
rorl
push
loope
add
sarb
adc
cmp
into
rclb
in
stc
sbb
jb
pop
pusha
inc
imul
rorb
mov
nop
stos
out
push
outsl
inc
jne
fnsave
icebp
lea
mov
test
movsb
movsb
dec
out
nop
aad
out
push
insl
jnp
fisttps
in
jne
aad
push
cmpsb
insl
jl
ljmp
jg
push
or
rcrl
lods
insb
mov
sbb
shlb
sub
icebp
arpl
call
test
cmpl
scas
cld
add
dec
divb
sbb
hlt
sub
jecxz
sub
dec
int3
js
adc
lahf
mov
cmp
popf
xchg
testb
ja
and
imul
or
out
aas
xchg
or
xchg
orl
xchg
aam
rcrl
cwtl
add
and
jl
jl
inc
fst
add
sub
imul
mov
jl
xchg
xor
dec
cmp
arpl
jg
add
dec
stc
cmp
ljmp
sar
dec
jle
enter
pop
jge
xchg
fnstcw
push
imul
mov
mov
mov
aam
jbe
mov
ljmp
pop
sbb
cmpsb
cwtl
sbb
lods
push
pop
aas
cmp
pop
clc
pop
frstor
fldl
pop
or
testb
std
sbbb
into
test
pop
mov
pop
lds
mov
shll
cmc
sbb
cmpsb
jmp
std
mov
mov
jbe
pop
sti
imul
or
ret
pop
pushl
inc
daa
andb
or
loope
add
xchg
das
dec
jle
add
add
or
mov
pop
add
add
xchg
adc
or
pop
pop
adc
xlat
les
pop
xchg
dec
icebp
push
mov
inc
sub
std
lods
mov
or
sbb
ds
xor
jecxz
ds
in
std
loop
mov
fs
mov
add
in
xor
sub
repnz
lods
icebp
hlt
test
jge
aas
mov
mov
pop
jo
jno
cmp
push
test
or
xchg
xchg
test
int
pop
jbe
adc
cs
push
aas
mov
pop
out
cmpsb
xchg
arpl
push
jae
jo
jge
jb
dec
pop
mov
add
in
pop
push
out
xor
xor
repz
pop
add
or
lods
lds
xor
and
mov
push
insb
sub
loop
jbe
sub
mov
or
das
push
push
sbb
pop
jne
or
mov
mov
out
je
cli
shr
mov
mov
xor
xor
sar
xor
in
sub
jl,pn
ds
loopne
lea
lahf
leave
xchg
leave
call
sub
or
sbb
lcall
outsb
std
push
cwtl
xor
repz
ret
xchg
je
jecxz
movsb
cwtl
cs
stos
mov
outsb
pushf
sub
dec
xchg
push
push
jg
mov
lahf
icebp
xchg
je
inc
leave
loop
sbb
scas
sbb
cmp
in
enter
and
adc
enter
sub
js
push
fcomps
jle
inc
xchg
xchg
dec
repnz
dec
mov
into
stos
std
loopne
push
adc
push
aaa
nop
push
adc
fldcw
fsubp
fs
cmpsl
mov
imul
out
pop
out
sbb
push
push
mov
fistl
daa
fidivs
inc
insl
jge
enter
ja
jo
lret
dec
lods
push
iret
das
lahf
jmp
add
xchg
jg
dec
mov
sub
or
js
jg
in
push
popf
inc
jecxz
pop
xchg
int
out
and
mov
ret
jae
leave
ss
out
mov
mov
repnz
or
lods
rcl
stos
mov
jecxz
orb
adc
xor
adc
lahf
scas
sub
icebp
mov
or
sub
mov
insb
sbb
loope
movsb
out
xor
fs
xorb
adc
and
adc
jno
out
nop
pop
mov
lea
and
fimull
and
jns
jne
std
cmpl
pop
pop
xchg
pop
xor
mov
pop
pushf
and
loopne
xor
mov
sub
jno
adc
xchg
pop
jp
xchg
xchg
inc
movsl
rorl
repz
cmp
leave
scas
test
cmp
loop
mov
es
add
jae
sbb
iret
push
outsb
cmp
pop
mov
ljmp
sbb
in
fdivrp
fcmovnb
push
pop
stos
clc
mov
and
int
ljmp
in
test
cmp
fldcw
sarb
xchg
mov
fcmove
pop
leave
cld
mov
das
test
js
mov
mov
test
insl
bound
mov
incl
add
adc
dec
mov
jl
mov
mov
stc
fstpt
out
stos
stc
mov
cmp
cmp
mov
xlat
jl
hlt
addb
pop
fwait
insb
jg
xchg
mov
push
shr
scas
and
mov
fcmovb
into
fsubrl
or
addl
mov
data16
imul
lret
dec
lcall
xchg
into
jl
shrb
mov
stc
sub
addb
sub
jecxz
loop
aaa
leave
rorb
xchg
div
mov
scas
in
xor
outsb
ret
mov
daa
adc
push
cmp
pop
push
inc
movsl
mov
imul
mov
add
push
lret
nop
jecxz
adcl
loopne
push
and
push
xchg
xchg
scas
arpl
pop
xchg
pop
xchg
xchg
mov
add
bnd
push
jle
sbb
adc
in
in
cltd
sub
pop
cmpsl
int
test
sbb
cmp
popa
scas
loop
scas
jmp
inc
add
mov
repnz
imul
shr
jae
jne
mov
iret
in
jle
and
pop
mov
or
xchg
mov
push
out
xchg
movsl
mov
and
inc
test
inc
adc
fdivrs
push
shll
mov
loope
push
sbb
mov
lcall
add
in
sbb
push
out
sub
aas
dec
lods
dec
arpl
nop
int3
leave
pusha
in
and
sahf
pop
pop
sti
mov
popf
sub
mov
dec
pop
lret
leave
out
sbb
fsubrp
cld
jns
aaa
cmp
or
add
fsubr
cmp
lahf
pop
jmp
sti
mov
sbb
test
enter
aam
add
add
addl
jb
inc
repz
jmp
jo
fadd
add
push
pop
push
clc
add
dec
aaa
mov
aad
xchg
fs
lret
jo
ret
call
data16
push
mov
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
mov
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
int
out
data16
jbe
push
mov
mov
dec
ja
push
push
xchg
xchg
cmp
loop
jbe
jbe
push
sahf
push
mov
mov
aam
outsb
subl
rorl
fisttpl
stos
push
mov
cmp
push
fildll
sbb
mov
imul
mov
fwait
push
stos
push
mov
dec
jmp
aad
or
cmp
lcall
imul
cs
push
int
sti
jle
dec
loope
leave
scas
or
dec
out
sbb
pop
pop
iret
pop
fimull
clc
ja
popa
les
and
adcb
arpl
cltd
xor
mov
pop
icebp
inc
outsb
fidivrs
mov
mov
adc
xor
jo
popa
imul
ss
push
ret
push
dec
cmp
lods
and
stos
or
mov
fidivrs
scas
sbb
pop
sub
pop
mov
sti
outsl
aam
cmp
xchg
push
pop
jge
mov
inc
xchg
clc
pop
fidivl
sub
lret
mov
cmp
notb
je
fs
loope
inc
test
sub
fwait
dec
cli
jmp
std
hlt
push
or
lods
push
or
ds
outsb
lret
jle
dec
jmp
imul
ja
mov
jae
dec
dec
mov
dec
pop
xlat
or
mov
sahf
fidivrl
mov
pop
push
pop
scas
adc
dec
pop
xlat
or
sbb
fsubrl
outsb
repz
or
add
pop
cmpsl
push
mov
dec
clc
jnp,pt
jnp
sub
pop
sti
scas
or
cmp
dec
pop
into
imul
mov
fwait
push
stos
push
mov
dec
jmp
sti
scas
or
cmp
dec
pop
into
imul
mov
xchg
popa
push
mov
inc
rol
inc
insl
popa
mov
repz
lods
iret
loopne
xor
jp
leave
int3
xor
outsl
je
es
xlat
xlat
xchg
mov
insl
sahf
pusha
xor
bound
jecxz
xchg
and
imul
inc
scas
or
push
leave
into
fstps
add
jle
xchg
cmpb
ret
cmp
movsb
and
enter
int3
rorl
sahf
leave
gs
test
inc
stc
icebp
idiv
sbbb
fs
ljmp
sbb
dec
push
cmp
ljmp
add
lcall
pop
das
push
mov
or
pop
mul
je
cmpb
aam
sbb
pop
or
cmp
jecxz
mov
jne
push
and
or
xor
jnp
dec
aas
or
js
push
push
mov
mov
sbbl
test
loope
jo
into
mov
rcll
jecxz
into
or
dec
cld
xchg
shll
mov
enter
inc
mov
jae,pn
sbb
out
fists
jmp
cmp
data16
in
jne
xchg
dec
mov
mov
dec
mov
out
adc
pop
and
loopne
int3
int
xor
cs
aas
aaa
movsb
aad
jge
jmp
in
sbb
push
lds
jns
adc
xchg
mov
int
loope
lods
ljmp
add
mov
fwait
out
fsubrs
mov
mov
adc
jbe
jmp
adc
mov
jecxz
jns
and
ficompl
dec
add
mov
xor
push
cwtl
and
sub
pop
lret
lahf
push
sub
mov
cmp
stc
ljmp
dec
jns
sbb
aaa
testb
adc
mov
adc
jl
dec
repz
adc
aas
cmp
cmp
and
es
mov
push
inc
fs
xor
push
jmp
mov
fdivrl
loope
cmp
jp
jbe
pop
addr16
iret
idivl
std
hlt
scas
sbb
mov
cmova
ljmp
lock
arpl
hlt
lea
or
inc
test
lods
sbb
stos
jg
push
stos
inc
bound
insl
pop
cmpsl
test
sub
cmpsb
pop
jl
out
rclb
addl
and
cwtl
jbe
iret
in
in
sub
push
or
scas
cmpsl
push
loop
mov
roll
or
roll
push
out
sub
jle
leave
pop
jle
lcall
jg
fidivrl
pop
iret
int3
icebp
jp
jns
xchg
test
iret
pop
pop
lods
sbb
inc
adc
test
in
das
cmp
cmp
adc
loope
mov
dec
cs
test
push
push
repz
lret
gs
fldcw
inc
jnp
jb
xor
inc
lea
push
addr16
and
push
dec
clc
mov
mov
adc
mov
jg
xorb
fwait
lea
xor
push
rcll
pusha
pop
ret
mov
mov
mov
pop
int
divl
test
call
mov
adc
or
inc
mov
push
aaa
add
cs
mov
inc
and
jle
mov
mov
int3
dec
inc
mov
cli
sarb
in
xor
dec
arpl
xor
xchg
cmp
fimull
stc
xor
out
addb
or
mov
negl
jp
int3
jp
and
sti
test
add
xor
adc
in
xchg
sahf
fs
leave
ja
popa
lods
or
jo
out
pop
mov
pop
add
cmp
cmp
in
xor
pop
lret
add
mov
and
jns
stos
notl
orl
imull
mov
add
mov
das
sbb
xor
sbbb
hlt
lea
or
rcr
mov
ja
push
nop
xchg
cmp
es
add
daa
loopne
les
xchg
push
cmp
das
mov
dec
daa
aas
notb
iret
xor
rcr
fcoml
xor
or
fucomi
shll
dec
addr16
jbe
push
xor
mov
inc
jne
inc
or
xor
mov
and
push
sahf
push
icebp
sbb
mov
sbb
xchg
out
sahf
fmul
arpl
scas
adc
sbb
push
jno
test
out
adc
sbb
hlt
jne
test
mov
mov
jo
sub
fsubrs
pop
cmc
sub
daa
shll
cmpsl
pop
and
mov
mov
loopne
and
ja
repnz
xchg
inc
int
or
ljmp
cmpsl
ss
shl
lahf
pop
mov
jae
cwtl
test
mov
pop
lcall
jl
popa
and
addr16
pop
push
add
mov
sub
push
pop
bound
push
jle
push
mov
cwtl
xor
adc
jle
mov
icebp
jg
mov
jmp
jmp
out
lret
inc
xor
sbb
movsb
cwtl
shll
imul
cltd
mov
pop
push
push
addr16
mov
pop
push
adc
sti
jo,pt
ret
outsl
push
fimuls
cltd
sbb
insb
sub
push
stos
cmpsl
mov
ja
inc
fwait
loopne
push
sarb
mov
mov
rcll
adc
pop
leave
mov
and
or
push
xchg
mov
sub
imul
jmp
xchg
inc
pop
xchg
or
or
mov
ds
and
pop
js
sub
out
jg
xchg
push
rolb
in
hlt
push
scas
sbb
cltd
int
mov
loopne
pushf
fmuls
mov
push
xor
mov
jge
imul
sub
cltd
scas
push
sub
mov
aas
faddp
pushf
dec
dec
xchg
stos
mov
adc
popa
xor
mov
xchg
lret
push
outsl
test
pop
xchg
bnd
mov
push
pop
add
cmp
ja
movsl
xor
mov
or
cmp
sbb
sbb
int3
popf
jle
rorl
sbbl
or
in
push
and
pop
mov
push
das
fcomi
pop
in
insb
cmp
sub
lret
test
sbb
jg
fcmovne
dec
push
cltd
push
cs
lods
dec
stos
bound
pushf
fiadds
loopne
jnp
and
lret
out
aad
cwtl
inc
xlat
pop
mov
testl
add
cli
icebp
xor
push
in
push
ss
mov
cmp
mov
mov
insb
cmpsb
pop
sub
addl
jo
pop
popf
or
iret
fsubrp
std
sub
or
dec
fldt
xchg
pop
mov
push
xor
jnp
inc
push
shlb
shlb
cld
sbb
aaa
arpl
pop
pop
inc
popa
dec
add
lret
push
mov
lods
pop
ss
jo
movsl
push
scas
dec
dec
mov
push
ret
cli
push
and
mov
jecxz
mov
js
in
repz
mov
sarb
cli
adc
push
cmpsl
mov
cs
fisttps
mov
mov
aam
or
inc
adc
dec
sub
shl
sub
mov
in
shr
or
adc
jbe
mov
cltd
sub
leave
std
data16
or
mov
fwait
sub
rcll
loop
rolb
mov
in
mov
enter
das
dec
pop
out
xchg
pusha
test
cwtl
cmp
jnp
mov
int3
push
jecxz
push
rorl
sarb
bound
idivb
sbb
inc
mov
and
dec
in
xchg
pop
jnp
pop
fmul
dec
jecxz
testb
hlt
xchg
shlb
nop
cmpsl
testb
add
and
cmp
nop
inc
cltd
mov
div
lcall
inc
fsubrl
jne
sub
iret
lret
adc
iret
push
adc
dec
mov
lock
out
out
adc
fistpll
push
dec
negl
sbb
inc
cmp
pop
imul
fcomp
mov
test
shrb
daa
sbb
xchg
add
pop
push
sbb
lods
hlt
lret
out
adc
shlb
fidivs
pushf
pop
and
lods
lret
pop
pop
rol
popf
pusha
insl
fwait
sub
mov
stos
sub
loop
ljmp
xchg
outsl
and
ds
mov
xchg
mov
subb
sbb
or
insb
fucomi
aas
nop
xchg
xchg
sub
and
aam
and
xchg
inc
rcl
and
std
mov
xlat
xor
adc
and
mov
sbb
mov
mov
iret
adc
adc
aad
subb
pop
dec
jne
adc
cmc
js
adc
std
and
xchg
pop
or
dec
test
out
sub
pop
sub
pop
int
aad
xor
nop
rclb
sbb
xchg
out
test
dec
pop
inc
mov
pop
test
jne
mov
cli
gs
std
mov
xor
mov
mov
stos
cmp
push
sbb
push
xchg
aaa
sub
mov
imul
xor
fisttpl
mov
cmpsb
xor
cmp
mov
xor
add
and
jl
popf
shll
in
dec
int
insl
in
inc
add
movsl
adc
addl
dec
test
mov
fldt
sub
sub
into
mov
test
push
ficoms
fnstcw
loop
mov
pushf
fists
pop
dec
lret
bound
push
pusha
mov
mov
imul
test
push
xchg
fsubs
jbe
or
jae
inc
xchg
jne
lea
imul
insl
sbbl
stc
fdivl
sti
fsts
movsb
insb
mov
insb
out
push
mov
fs
and
movsl
push
xchg
xlat
cli
push
xchg
add
add
jb
push
cld
jbe
adc
xchg
in
and
mov
push
bound
jno
inc
daa
les
stc
ja
dec
sub
enter
scas
clc
fdivl
je
loopne
cltd
icebp
pop
mov
enter
mov
push
aad
ds
mov
iret
lret
dec
movsb
lods
lret
jp
filds
mov
cltd
pop
add
cld
adc
movsl
mov
push
sbb
inc
add
lock
popa
push
ja
orl
or
cmp
leave
scas
ds
jmp
and
xor
ret
negb
xchg
gs
jge
aad
je
dec
fdivrs
mov
pop
iret
push
push
adc
inc
push
jl
cmp
and
int3
out
mov
fisubrs
fisubrs
dec
adc
pop
pop
xor
push
inc
or
jae
mov
fnstcw
shrl
jge
movsl
mov
icebp
dec
xchg
out
inc
pop
push
sbb
mov
jmp
and
andb
mov
pop
push
xor
push
stc
cmp
in
adc
jl
and
mov
push
sbb
sbb
xchg
mov
into
imul
sub
adc
lds
jg
xor
sbb
xor
mov
pop
jno
lret
xchg
lahf
into
push
enter
push
mov
sbb
and
ficomps
sub
xchg
jmp
in
insb
sbb
sbb
push
das
lcall
repnz
in
mov
push
lret
jg
inc
nop
cmp
jecxz
or
cmc
add
into
lods
mov
mov
enter
jp
scas
xchg
ret
add
icebp
lds
shrb
rcrl
int
jbe
mov
ret
mov
xor
inc
fldenv
pop
je
adc
fs
pusha
and
push
hlt
pop
sbb
and
jae
mov
sub
out
mov
cmpsl
ret
outsb
or
add
pop
sbb
mov
je
push
mov
mov
and
inc
pop
lret
cmp
or
or
lods
sub
std
insl
adc
push
movsb
pusha
sahf
push
loopne
inc
jb
repnz
mov
leave
test
lods
nop
mov
pop
in
inc
iret
mov
xchg
dec
pushf
jb
dec
xchg
pop
repz
jp
mov
fwait
inc
adc
cli
pop
adc
rcll
iret
faddl
fmulp
pop
repnz
jnp
push
push
mov
leave
xchg
rcrl
les
shr
in
arpl
movsl
pop
xor
push
pop
aas
enter
cmp
cmp
nop
jmpw
daa
add
sbb
jbe
repnz
insl
xlat
adc
fwait
xor
dec
and
jno
pop
popf
sbb
jb
mov
mov
push
sub
xor
sti
push
cmp
arpl
aaa
xor
add
scas
test
insl
cwtl
fmul
aad
cmp
mov
inc
fdivs
leave
pavgb
andb
pop
push
adc
mov
daa
dec
or
rcll
dec
pop
mov
ret
inc
xchg
aaa
jmp
popa
scas
add
pop
xchg
push
scas
frstor
hlt
mov
push
or
pop
out
xchg
fdivl
scas
push
es
aam
scas
xchg
xor
dec
jge
out
pop
push
popa
ret
inc
xchg
test
test
pop
ss
cmpb
mov
fs
push
and
pop
stos
mov
lret
jno
xchg
insb
test
shll
shrb
sbb
cs
dec
mov
mov
jecxz
add
test
lock
testb
in
cmp
mov
sub
pushl
pop
jge
ret
inc
outsb
outsl
xor
leave
cltd
sarl
sub
mov
jne
xchg
mov
clc
cli
cmp
lods
aam
das
cmp
push
jo
mov
push
stos
fcom
enter
cmp
test
je
test
imul
ret
ss
add
sbb
leave
scas
mov
sub
push
dec
sbb
or
lods
xchg
imul
cmpsb
inc
add
shlb
mov
push
dec
fwait
add
push
shrl
push
jge
scas
mov
mov
inc
adcl
rolb
xchg
test
lret
out
outsb
roll
lods
sahf
xchg
cld
fistpl
push
inc
mov
or
inc
mov
bound
or
ret
cmp
aaa
cmpl
ficoml
pop
add
inc
je
jae
jb
pop
mov
jp
or
mov
ja
sub
and
cli
sahf
inc
cmp
jge
mov
and
cld
adc
mov
aam
jnp
popf
in
xchg
mov
push
stos
loope
js
pop
rorl
aam
loop
clc
jl
fcmovb
lea
bound
das
aaa
sti
and
cmp
daa
cli
ficompl
fcomi
lahf
pop
das
shlb
pop
mov
sbb
xchg
fwait
sbb
lods
dec
jmp
sub
outsb
fiadds
push
adcl
sbb
std
jo
bound
stc
adc
and
jle
mov
in
cmp
xchg
ds
in
mov
push
inc
sbb
lock
outsl
xchg
push
inc
fldt
shll
idivl
sahf
sbbl
cli
add
int3
jmp
hlt
cli
xchg
int3
and
cmpsl
and
pop
inc
out
test
inc
mov
psubsw
and
daa
pop
jecxz
xor
popa
adc
mov
sub
adc
jg
mov
pop
fnstsw
cmp
into
out
cli
insb
addb
imul
push
push
pushf
gs
sbb
gs
sbb
adc
aad
data16
jb
ds
or
sub
xorb
mov
jg
and
pop
in
lds
fidivs
sub
sbb
dec
sbb
call
lcall
cwtl
and
mov
push
jmp
lcall
inc
cmc
ret
mov
mov
pusha
lret
scas
stos
aaa
fs
test
popa
pushf
fcmovne
mov
shr
gs
into
daa
cltd
jg
jle
mov
popa
mov
mov
ljmp
pop
dec
in
outsb
sahf
scas
mov
mov
sbbb
mov
xchg
insb
xor
fucomp
adcl
and
jb
test
aam
sbb
adc
data16
or
repz
push
test
fstps
dec
out
fistpl
out
xchg
fucom
jne
xor
add
push
gs
fbld
mov
jo
fcomi
repz
add
or
pop
imul
fidivs
hlt
pushf
roll
xchg
mov
lahf
in
es
pop
repnz
inc
sub
out
hlt
imul
mov
push
movsl
sarb
add
test
cmp
cs
fcomip
mov
adc
popf
in
test
stc
insb
fstpl
jbe
cld
imul
adc
cmp
sbb
xor
xchg
cmp
aas
push
lret
and
clc
icebp
inc
cmp
push
in
push
test
pop
cmp
sub
mov
clc
adc
gs
or
jge
mov
and
cmpsb
loopne
and
cmp
daa
movsb
ljmp
jno
test
dec
xchg
and
in
stc
adc
xchg
iret
jp
lret
inc
icebp
adc
push
jge
fcmovnbe
xor
sbb
push
lea
sbb
outsl
scas
scas
sbb
inc
or
lcall
sub
lcall
inc
movsb
and
movsl
sbb
inc
nop
lods
out
inc
jecxz
outsl
and
test
cltd
mov
in
mov
pop
sub
dec
cmp
repnz
mov
outsl
xor
and
sub
outsb
add
out
dec
in
mov
mov
lods
push
or
push
dec
js
mov
out
mov
dec
iret
rorb
sbb
jnp
je
sbb
dec
inc
and
int3
test
lret
daa
push
mov
out
adc
inc
and
xlat
lcall
test
add
orb
movsl
and
or
pop
or
in
push
jl
pusha
ss
jns
mov
mov
jbe
rcr
sbb
loopne
inc
sbb
clc
les
fwait
in
push
popf
mov
mov
popf
and
lcall
mov
data16
xchg
jne
stc
sbb
push
test
popf
es
enter
in
xor
inc
loopne
fdivrl
jecxz
and
out
pop
sbb
xor
cs
mov
shlb
add
arpl
jno
push
add
fdivr
xchg
imul
xor
add
pop
pop
pop
mov
inc
jnp
push
mov
movsl
mov
repz
mov
and
loopne
xchg
test
stc
int
lock
adc
test
inc
out
cltd
aad
js
cmpsb
sub
mov
test
insb
inc
mov
int
push
sub
js
adc
push
test
or
sbb
push
jo
aad
fcomps
aam
xchg
push
pop
rcrb
jmp
sub
dec
mov
out
es
jae
push
adc
sbb
mov
out
jo
testb
push
loop
mov
jae
add
or
push
and
pop
sub
mulb
fisttps
lea
in
jnp
xor
popa
or
pop
push
adc
or
mov
ret
fsubs
nop
inc
sub
into
std
add
in
sub
popf
sbb
pusha
jecxz
cmpsb
popa
jb
pop
sub
rolb
lret
scas
mov
mov
mov
cmp
sbb
enter
and
fdivs
jns
dec
cmp
sbb
xchg
mov
aam
enter
cmp
in
mov
outsl
or
pop
push
loope
stos
call
popa
jbe
fsubl
lcall
jp
xchg
sbb
add
fdivr
push
cs
push
out
mov
inc
fs
inc
mov
push
sbb
mov
sbb
cltd
push
es
adc
je
les
xor
out
bound
mov
test
or
push
arpl
dec
mov
das
packssdw
sub
test
addr16
subl
out
xchg
fwait
leave
pop
fcmovnb
gs
mov
lea
pop
or
jl
ja
shr
push
ret
adc
xchg
push
sbb
cmc
add
dec
pop
in
sub
pop
aad
xor
push
xor
push
shll
inc
add
pusha
repnz
xchg
mov
xor
mov
mov
lret
xor
xchg
xor
adc
hlt
cmpsb
andb
dec
lret
jbe
or
cmp
cmp
hlt
mov
addb
andl
push
out
rclb
xchg
cld
xor
je
lock
dec
js
inc
stos
jae
rcrb
add
lods
rclb
pop
out
inc
into
aaa
fdivrs
ret
adc
xor
cmp
aaa
xchg
jae
inc
pop
in
hlt
int
out
push
and
mov
ret
sub
mov
dec
jmp
sti
scas
or
cmp
dec
pop
into
imul
mov
fwait
push
stos
push
mov
dec
jmp
sti
scas
or
cmp
dec
pop
into
imul
cs
ds
push
mov
mov
dec
out
pop
sti
scas
or
xor
dec
pop
iret
ficomps
push
dec
push
sti
outsb
lret
jle
into
imul
push
hlt
inc
mov
sub
and
adc
add
cmp
or
sbb
bound
or
sub
push
lods
mov
pushf
xchg
in
loop
ja
ret
sub
cmp
or
sbb
insb
bound
inc
pop
push
lods
mov
pushf
xchg
in
loop
repnz
sbb
sub
cmp
or
sbb
insb
bound
inc
pop
push
lods
or
test
mov
and
sub
jl
cwtl
cmpsl
push
outsb
cmp
mov
addr16
pushf
adc
fs
in
inc
loope
lea
stos
adc
xchg
dec
add
jmp
adc
mov
cmc
xchg
jle
out
insl
mov
lods
pop
dec
jae
imulb
jecxz
xor
aaa
cmp
adc
jb
int
lods
lods
jns
fiadds
jge
ret
xchg
or
rol
dec
int
xchg
dec
push
pop
sarl
adc
push
sub
leave
pop
shll
jmp
pop
mov
mov
xlat
mov
xchg
fsts
int3
mov
jb
cmp
or
sbb
insb
bound
inc
pop
push
lods
mov
pushf
xchg
in
loop
repnz
ret
push
push
xor
jns
add
xor
add
mov
aam
adcl
das
and
pop
add
sub
adc
dec
xor
mov
std
mov
faddl
gs
ja
bound
inc
pop
push
lods
mov
pushf
xchg
in
loop
repnz
ret
sub
cmp
or
sbb
insb
bound
inc
pop
push
lods
mov
pushf
xchg
in
loop
repnz
ret
sub
cltd
jnp
mov
push
mov
ror
cmc
cmp
xchg
lds
in
push
sbb
push
adc
or
test
pop
mov
cmp
mov
cld
mov
scas
cmpsl
call
adc
icebp
lret
pop
clc
ret
fstpl
movsb
dec
lea
add
mov
fst
loopne
push
sub
loopne
dec
xor
hlt
rcl
stc
adc
inc
xlat
jnp
sbb
or
mov
out
mov
dec
ffree
xchg
push
and
mov
sahf
xchg
jne
ret
sti
jno
cmp
cmc
or
cmc
mov
mov
sbb
dec
fwait
dec
sbb
scas
and
out
pop
xchg
in
dec
sbb
popf
es
inc
dec
mov
leave
sbb
psubw
fisubs
sbb
subb
cmp
call
inc
mov
sbb
adc
clc
xchg
pop
pusha
bound
imul
inc
jo
xchg
in
mov
gs
and
fisubs
and
repnz
xchg
repz
inc
fs
aam
aaa
pusha
jbe
pop
adc
pusha
xor
movsl
enter
pop
ret
mov
les
sbb
popa
movsl
fwait
lahf
faddl
sub
das
in
sarl
dec
movsb
fimuls
fstpt
loopne
scas
roll
fnstsw
xor
dec
lds
push
lret
jbe
pop
sbb
xchg
icebp
das
hlt
push
test
inc
mov
add
scas
add
int
or
aas
push
and
xchg
pop
into
mov
arpl
sub
jno
mov
in
nop
push
push
dec
adc
jbe
sti
jg
dec
lock
testl
mov
or
lfs
push
cltd
andb
lock
lret
arpl
int
rcl
xchg
jns
pop
daa
mov
push
cwtl
mov
mov
pop
adc
out
push
mov
push
shll
jp
stc
dec
sub
scas
xor
or
movsl
aam
nop
sarl
call
xor
mov
push
hlt
lock
and
icebp
out
mov
push
ss
stos
push
sbb
fisubrl
pop
scas
cmpsl
ud0
mov
adc
xchg
sarb
cmp
jge
xchg
jmp
fstpl
pop
adc
test
adc
test
popf
mov
ja
cltd
ljmp
dec
popa
mov
fucompp
cmp
sbb
ljmp
shrb
push
sti
add
inc
dec
xchg
mov
inc
jg
push
sbb
sub
sbb
icebp
leave
out
jne
jecxz
mov
mov
pop
mov
mov
sub
mov
icebp
test
sbbb
xor
lar
rcll
cmpsb
dec
ss
push
rep
repnz
cli
push
je
push
cmpsl
scas
mov
test
adc
pop
cmp
cli
popf
notl
aad
rorb
mov
dec
push
xor
test
stos
xchg
xchg
add
ljmp
mov
dec
js
int
pop
sbb
dec
mov
jne
sti
mov
and
shlb
cmp
push
inc
mov
sub
jb
and
push
xor
in
les
iret
insl
add
push
mov
fs
sub
stc
jbe
jb
repnz
je
mov
sbb
inc
sbbb
aad
lds
fldl
dec
aas
lcall
adc
ljmp
and
in
mov
aad
dec
cmc
mov
bound
mov
fldcw
sahf
cmp
loope
jne
cmp
enter
ficoml
jg
leave
lods
jle
insb
or
mov
inc
dec
rorl
movsl
fwait
dec
cld
hlt
getsec
and
sbb
fcoml
mov
outsb
mov
push
and
lret
adc
add
sbb
jno
out
cs
ja
ljmp
cmp
iret
icebp
gs
das
mov
adc
mov
jb
push
dec
movsl
cmp
pop
xchg
sti
movsb
jae
or
sbb
out
lods
mov
lods
repnz
fldpi
push
lock
mov
in
jnp
mov
ds
out
adc
jns
fnstenv
xchg
and
and
repz
jmp
insl
sub
sub
lds
mull
pop
sub
pop
ret
cmp
inc
clc
out
mov
sub
push
dec
sti
pusha
cmp
push
add
scas
inc
mov
in
xchg
out
mov
push
fwait
bound
sbb
jb
push
cld
xchg
nop
xchg
mov
rclb
and
cli
and
add
les
cmp
push
xchg
xor
andb
push
dec
jmp
mov
popf
in
xor
and
mov
daa
ret
xor
imul
test
les
push
popa
movsl
mov
and
das
lcall
in
xor
int
and
pop
jge
inc
dec
xchg
je
adc
or
push
xor
popf
adc
clc
fstl
xchg
movsl
leave
loope
mov
mov
lock
enter
mov
movsb
das
lock
dec
inc
daa
in
sbb
adc
mov
cwtl
sbb
sbb
mov
lahf
mov
adc
or
fsts
ret
push
orl
mov
cmp
jge,pn
arpl
cmc
stos
mov
push
add
rcr
add
ljmp
cmp
adc
ss
ja
mov
and
loope
pop
mov
or
inc
loope
jne
push
mov
out
xchg
push
or
imul
cmpsb
adc
ret
pusha
leave
loopne
push
js
or
jl
cld
mov
movsl
sbb
mov
test
adc
lds
cmp
pop
xor
add
jecxz
cli
push
pushf
inc
lcall
adc
xor
ret
cltd
dec
dec
push
xor
fsubs
inc
pop
cwtl
dec
sbb
in
test
out
mov
inc
mov
mov
push
mov
insb
fsts
jbe
stos
mull
leave
mov
out
stos
xchg
setb
and
push
repz
adc
aas
scas
add
xor
or
in
int3
push
xchg
aas
cmc
jo
in
jg
es
jp
push
sar
fcmovu
out
and
jle
stc
mov
in
push
ljmp
xorl
add
gs
cmp
dec
fs
arpl
leave
scas
insb
push
or
dec
inc
shl
xorl
adc
lcall
idivl
jl
add
jp
xchg
movsl
repz
cs
cmpsl
mov
dec
int
jl
pop
inc
faddl
lret
mov
es
gs
and
mov
out
int
add
cmpsl
jg
add
add
add
xchg
cmpsb
add
sub
mov
inc
lods
sti
insl
push
jno
fs
dec
adc
pop
xor
mov
mov
lea
js
mov
sysenter
jo
jecxz
cmpsb
movsb
popf
and
push
lods
lcall
push
xchg
xorl
adc
pushf
dec
ds
in
pop
adc
movsb
test
insb
adc
loope
cltd
lret
mov
dec
gs
xchg
fsub
ret
mov
data16
push
mov
fwait
pop
push
lfs
dec
hlt
xchg
cmp
push
lcall
dec
std
das
daa
mov
lods
inc
pop
sub
add
push
push
pop
sub
add
pop
mov
pushf
fimuls
imul
mov
sahf
es
ds
shr
call
pop
pop
lods
outsb
dec
sub
iret
push
sbb
incl
sbb
push
lea
das
ja
outsb
xor
cmp
sti
lods
add
mov
pop
mov
addl
mov
rcl
sbb
and
pop
test
cmp
push
push
or
inc
adc
mov
cmp
aam
inc
push
xlat
imul
xor
inc
pop
or
jmp
xlat
jl
adc
sub
pop
adc
test
lods
add
sub
adcb
adc
sub
push
test
pop
add
or
stos
push
mov
fdivl
js
mov
js
popa
cs
sarl
dec
sti
inc
pop
sub
mov
pop
xchg
push
cmpsb
insl
popa
add
mov
dec
lcall
mov
cmp
lret
addr16
sti
shrb
mov
mov
outsl
hlt
fwait
inc
push
decl
dec
jecxz
movsb
push
mov
pop
rcrl
addr16
lret
in
pop
clc
xor
movsl
mull
mov
dec
leave
cmpsl
add
jle
adc
cmpsl
mov
stc
daa
cmovp
lods
sti
lds
fistpl
sub
sub
out
cwtl
xor
jo
outsb
xchg
nop
hlt
cltd
jmp
push
mov
mov
imul
leave
adc
inc
testb
ret
mov
sub
cmpsb
sahf
cmc
jno
sub
jle
lret
sbb
jecxz
inc
jne
pop
xchg
mov
ja
xchg
mov
jmp
pusha
shrb
cmp
faddp
adc
jecxz
movsb
imul
mov
jl
dec
js
fdivrl
sbb
nop
xchg
outsb
fs
push
or
sbb
sub
adc
imul
xchg
xor
xchg
cmc
mov
mov
jecxz
pop
push
jl
mov
xlat
mov
push
adc
je
cmc
lcall
push
add
pop
lcall
repnz
lods
xchg
fbstp
push
sub
fbld
outsl
shrl
lock
int
sahf
mov
loop
sbb
cmp
adc
fwait
shlb
cli
push
jge
dec
pop
lcall
pusha
or
mov
mov
and
mov
data16
mov
inc
aaa
mov
mov
xor
cwtl
sbb
pop
cmp
add
outsb
adc
xchg
adc
add
lock
incb
std
cmpsb
or
adc
subb
cmp
imul
pop
push
sub
mov
jne
subb
pop
fwait
mov
push
mov
orl
cmp
xor
add
repnz
pop
aaa
mov
leave
aas
out
or
jmp
dec
and
adc
loope
xor
loope
mov
int
notb
lcall
fdivs
les
out
xor
sarl
pusha
pop
lods
dec
fsubs
ret
mov
loopew
xor
std
popf
sbb
sbb
push
jbe
and
lcall
mov
sub
sbb
sub
fildl
pcmpgtd
out
push
mov
lret
nop
fcmovbe
lret
notb
jmp
cs
add
repz
out
lahf
pushf
aaa
lea
sbb
pop
xchg
xor
ret
movaps
xchg
ss
aad
sbb
movsl
ljmp
arpl
and
jne
adc
outsb
or
mov
imul
lods
stos
mov
and
fsubr
rorl
pushf
repnz
pop
push
adc
pushf
inc
jne
add
add
add
lock
push
adc
popf
dec
add
xor
aad
jns
push
adc
iret
xor
in
inc
sub
pop
popa
sub
repnz
or
mov
sbb
ja
fistpll
test
pop
shrb
loop
sub
lds
xchg
jno
js
push
jns,pn
add
lods
mov
push
shrb
cmc
cmp
mov
inc
push
mov
adc
sub
push
imul
or
add
addr16
in
loop
push
dec
mov
nop
sbb
xor
sbb
xchg
inc
popa
stc
cmp
sub
divl
push
test
sub
outsl
mov
loop
or
popf
xor
fwait
testb
push
es
sbb
add
pop
jle
or
jmp
pop
pushf
in
lock
sub
sbb
adc
inc
lods
std
frstor
js
fcmove
cli
fwait
cmp
test
dec
je
sbb
std
test
scas
ret
pushf
mov
cmp
jmp
cmp
lds
xlat
fwait
mov
push
cmp
sub
repnz
outsb
ds
pop
mov
mov
test
pop
mov
inc
or
mov
inc
ds
sahf
sbb
lods
outsl
popf
mov
popf
cwtl
dec
cmpsl
test
push
enter
sbb
bound
mov
mov
and
aaa
pop
push
insb
lahf
adc
mov
push
lret
jnp
sub
or
stc
cmpsl
int3
push
popa
mov
icebp
inc
push
fsts
dec
hlt
addr16
in
aam
sbb
mov
adc
cld
push
rolb
ja
sub
movsl
cmpsb
icebp
les
inc
jecxz
adc
gs
pop
sbb
inc
aam
pop
and
popf
mov
aam
inc
sbb
push
push
imul
shr
into
rcrb
mov
out
pop
rol
int3
cld
lods
inc
cmp
lcall
cmc
push
or
into
insl
adc
xor
ret
adc
icebp
cmc
sub
in
xor
mov
inc
mov
mov
mov
mov
aam
les
into
cwtl
out
inc
and
xchg
loopne
adc
aad
mov
push
add
cmp
neg
rcl
test
mov
cld
mov
push
repnz
jb
rclb
push
fwait
pop
ja
xor
and
arpl
add
xchg
xchg
stos
inc
pop
data16
xchg
push
xchg
incb
mov
xor
jl
mov
lret
jae
jmp
pop
bound
pop
xor
cltd
push
imul
mov
mov
adc
stos
sti
in
xchg
and
enter
xchg
pop
pop
hlt
es
push
xlat
outsb
cmpl
fldl
out
mov
jmp
jge
jg
movsl
sub
mov
lret
fcmovb
inc
xchg
push
mov
pusha
and
int
xor
xchg
sbb
cmpsl
ss
insl
lods
rcl
mov
mov
push
or
addl
push
out
insb
fdivs
mov
mov
mov
arpl
push
push
nop
xchg
push
push
pop
xor
sub
imul
fimull
rolb
out
and
jp
jmp
aaa
je
lret
rorb
pusha
aam
push
sub
push
rorl
lret
out
js
leave
or
mov
or
nop
ss
cmpsb
xlat
pop
xchg
call
inc
ret
dec
dec
lock
subb
add
rolb
lods
cmp
jecxz
push
and
mov
divb
mov
lea
lds
jb
and
repnz
xchg
push
fldt
dec
jnp
outsl
adc
lahf
ss
jae
push
push
sub
pop
pop
nop
frstor
lods
test
int
add
stc
ffree
xor
loopne
add
dec
add
popf
push
outsl
in
push
stos
push
mov
out
cltd
repz
jnp
in
and
inc
cltd
xchg
mov
js
xchg
xor
and
int3
rcl
shlb
stc
stos
push
push
xchg
aad
lret
incb
arpl
movsb
and
push
mov
pop
movsb
ret
mov
sahf
xlat
inc
into
lods
mov
rcll
or
jne
push
adc
mov
jl
mov
xchg
pop
negl
mov
popa
or
out
test
push
pop
push
pop
add
or
int
and
push
js
lods
push
inc
push
pop
fs
xor
dec
add
push
in
iret
lods
mov
mov
int
fnstenv
sub
rol
dec
pop
xlat
mov
cwtl
lea
and
ja
ja
cmp
cltd
sub
jmp
ss
push
push
cmpsl
sub
lds
in
ret
dec
aad
xor
inc
gs
jg
sbb
jmp
insl
mov
bound
inc
loop
pop
xchg
xor
sub
fcmovne
push
xchg
mov
lods
jns,pn
mov
fcmovnb
idivb
fcomps
dec
test
mov
mov
lds
pop
push
loopne
and
push
sbb
xchg
clc
dec
pop
mov
jle
add
adc
insb
sub
rcrb
sbb
add
lea
setb
icebp
cmp
and
sbb
xor
push
lock
imull
cmc
sbb
std
rolb
dec
pop
addr16
cmp
mov
es
inc
adc
pop
add
fwait
pop
mov
xor
scas
insl
or
out
rorb
jge
lods
xchg
push
and
sarl
dec
lahf
xor
xchg
mov
out
fldl
sub
cmp
mov
dec
addb
lahf
push
add
adc
aaa
xchg
inc
inc
cmpsl
and
sbbl
dec
mov
dec
sbb
andb
loopne
std
test
mov
sbb
sbb
inc
lea
imul
mov
outsl
fimuls
scas
dec
sbb
push
ja
loop
add
or
or
out
idivb
push
cmpsb
popa
fsubl
adc
jb
test
adc
jl
testb
add
mov
mov
mov
rclb
mov
and
clc
mov
insb
push
addr16
loop
inc
mov
loop
loop
pop
ret
add
movsb
push
add
inc
inc
bnd
dec
aam
ret
lret
inc
or
sbb
test
insl
inc
xlat
clc
push
scas
iret
mov
sub
testb
dec
mov
mov
mov
out
mov
sbb
pop
shl
dec
push
loope
and
fnstsw
add
cmovg
cmp
in
jns
lods
cmp
fst
int3
or
ljmp
push
lcall
or
psubq
mov
aam
sbb
mov
mov
add
push
repnz
xor
in
and
rolb
pop
xchg
lret
inc
out
cmpsl
mov
and
lods
xchg
mov
and
mov
gs
xlat
dec
cs
xchg
stc
sbb
pop
test
cmp
xchg
push
mov
js
xchg
sub
mov
movsb
pop
cmc
xor
lret
mov
ror
adc
pop
outsl
lods
imul
inc
adc
imul
lock
lock
push
daa
mov
imul
fidivrs
in
sbb
movsb
lret
idivb
push
stc
fstl
pop
ljmp
sbb
repnz
mov
add
mov
es
cmp
cs
jl
in
shll
ret
data16
sbb
and
xchg
outsb
ljmp
pop
add
ret
cld
jmp
cmp
loopne
sub
mov
sbb
inc
jecxz
popf
xor
dec
hlt
cmpsb
or
mov
test
mov
and
lret
fs
lds
lods
gs
mov
pop
sbb
hlt
xor
push
bound
xchg
sbb
and
and
push
int3
fimull
inc
cmp
sub
xor
insl
jbe
mov
mov
imul
xchg
push
pusha
out
test
mov
aam
xor
dec
test
push
sbb
test
leave
inc
mov
arpl
jle
lods
out
jle
and
or
pop
lea
mov
mov
je
in
movsl
mov
dec
clc
inc
jbe
fwait
add
adc
mov
sbb
or
cmpsb
xchg
in
fs
aas
fldl
xchg
and
jns
adc
jb
dec
test
negb
add
jmp
add
andl
lods
mov
ds
cmp
mov
mov
cld
cmp
cmp
mov
mov
jecxz
test
clc
adc
lahf
add
out
ret
push
jp
dec
jecxz
mov
and
cmovp
into
outsl
in
dec
xchg
call
bound
lretw
in
push
xor
outsb
shrl
mov
jns
lahf
lods
mov
lods
inc
scas
jo
sbb
shl
in
inc
jmpw
xor
pop
mov
out
lock
pushf
test
push
dec
test
inc
cs
push
mulb
incl
addl
fidivs
mov
adc
sbb
jnp
mov
ret
imull
sbb
fs
push
push
ficomps
xchg
sub
les
clc
push
mov
out
mov
into
jb
rcrl
call
cld
cmp
push
cmpsb
iret
xchg
mov
xchg
cmpsb
dec
shll
jle
nop
mov
cmp
lods
out
lret
pop
sbb
add
bound
or
adc
arpl
ljmp
cld
call
insb
cld
fimull
aas
call
mov
test
mov
pop
in
test
cmpsl
sahf
lea
nop
pop
fisttpll
sbb
rcrb
outsb
xorl
mov
jl
sbb
pop
sbb
pop
insl
imul
ds
sahf
adc
pop
sbb
push
cmpb
adc
arpl
xchg
mov
jge
cmpsb
add
insb
bound
inc
pop
push
lods
mov
pushf
xchg
in
loop
repnz
ret
sub
cmp
or
sbb
insb
bound
inc
pop
push
lods
mov
pushf
xchg
in
loop
repnz
ret
sub
cmp
or
sbb
insb
bound
inc
pop
push
lods
and
in
loop
repnz
ret
sub
cmp
or
sbb
insb
bound
inc
pop
push
lods
mov
pushf
in
push
or
out
ja
cwtl
pop
test
mov
jl
push
decb
out
adc
cmp
cmp
js
js
mov
pop
test
mov
push
call
out
sbb
sub
js
xchg
outsb
cwtl
pop
mov
mov
push
lock
loop
jmp
and
or
ss
mov
adc
push
xor
jbe
cmp
in
xchg
shrl
outsb
mov
cmp
add
fldcw
and
inc
aas
inc
and
xchg
bound
mov
inc
cmp
push
or
sti
ja
pop
push
imull
fdivrl
sahf
movsb
fcoms
lea
mov
sbb
fsubrs
jle
mov
sbb
mov
pop
out
pop
sub
es
pop
sbb
cmpsl
mov
test
xorl
pop
call
push
stc
xchg
test
cmp
and
aad
push
outsb
js
test
jae
repnz
out
enter
cmp
cmp
scas
sub
and
dec
mov
push
icebp
push
loope
adc
add
xor
and
push
sub
jge
dec
mov
test
xchg
popa
pop
pusha
mov
stos
push
lret
or
push
sub
mov
push
mov
lods
jno
jns
pop
stos
jnp
cmp
aaa
into
add
sbb
cmp
movsb
fcomps
call
out
sbb
sub
cmp
push
outsb
cwtl
pop
test
mov
push
call
out
sbb
sub
cmp
push
imul
mov
dec
cmc
and
adc
sahf
mov
pop
mov
stc
jno
inc
sub
or
out
inc
addr16
cmp
jecxz
incb
test
movsl
das
loopne
mov
fldenv
xchg
mov
pop
lret
push
sbbb
outsb
fsubl
mov
std
data16
mov
jne
and
clc
test
mov
xchg
test
les
cmp
xchg
sar
insb
in
test
mov
xlat
push
sti
out
out
shrl
mov
jmp
rorl
mov
sbb
das
sub
out
jl
das
std
les
jno
jne
stos
in
lods
add
add
mov
das
xor
in
gs
sub
lahf
lret
pop
imul
fcompl
stos
xchg
das
movsl
xchg
dec
sbb
sbb
jne
ficompl
inc
push
mov
leave
dec
pop
out
bound
dec
out
in
sbb
ds
jb
out
out
cmpb
cs
push
pop
mov
adc
cmp
push
xchg
roll
cmpsb
out
test
jnp
gs
pop
push
mov
jne
inc
popa
int3
push
in
addb
test
dec
fimull
mov
or
jmp
scas
dec
sbb
cltd
test
shlb
xor
xor
sub
les
out
dec
mov
cmc
jb
push
scas
rol
fisubrs
bound
add
push
mov
jbe
nop
inc
addb
fnstsw
insl
test
or
lahf
cli
shlb
jnp
add
test
sbbl
test
cmp
or
jp
lret
lcall
inc
nop
pop
or
push
idivl
inc
out
popf
lcall
rorl
lea
cmp
notb
out
pusha
dec
ret
loop
jnp
pushf
rcrb
add
inc
repnz
mov
adc
mov
xchg
cmp
stos
lods
popa
lds
out
adc
outsb
inc
sub
mov
lds
hlt
sbb
das
jo
inc
test
pushf
stos
iret
loop
mov
and
adc
test
and
push
scas
or
or
jbe
pop
pop
or
mov
sahf
js
or
pop
ret
push
dec
and
mov
je
xchg
pop
insb
mov
xorl
andb
dec
mov
out
mov
je
into
xchg
cmp
movsb
adc
not
mov
rcrb
jb
lret
je
xlat
add
dec
rcrb
cmp
icebp
outsl
dec
lds
aaa
lret
cli
mov
data16
out
add
mov
sahf
loopne
mov
lahf
outsl
cmp
push
mov
push
mov
gs
aam
scas
adcb
je
aad
int3
insb
cwtl
fstpt
mov
sbb
out
fwait
stos
popa
cmpsl
pop
and
dec
vpxor
mov
loopne
inc
cmpsl
pop
leave
dec
mov
adc
pop
daa
push
sti
inc
insb
cmp
out
ret
mov
jbe
daa
das
arpl
lds
roll
test
sbb
daa
cmp
mov
lock
jo
xor
ds
push
mov
out
sub
cmp
adc
aad
int
nop
cmp
add
mov
inc
imul
out
xchg
adc
fcmovbe
cs
incl
imul
mov
iret
fcoms
aas
arpl
les
mov
stc
data16
mov
xor
lods
inc
pop
or
subl
sti
test
inc
cld
fstps
fwait
or
xchg
in
test
aaa
bound
shlb
into
in
pop
rcll
jmp
out
or
popa
and
in
ror
repz
jo
or
push
sub
and
dec
mov
jae
dec
out
jecxz
and
pop
sti
pop
mov
push
pop
jnp
into
xor
loop,pn
test
or
outsb
js
jp
mov
les
sub
stos
jl
dec
or
stos
mov
dec
pop
push
or
leave
int3
enter
push
push
inc
jg
ds
loopne
mov
jmp
daa
sub
push
lahf
cld
or
aad
loop
adc
repz
xchg
test
nop
pop
jmp
jae
out
test
xchg
xchg
nop
jge
and
xor
gs
faddl
xor
jnp
add
arpl
push
sbb
data16
inc
loope
ret
lret
jno
fcoml
jmp
fcomps
out
popa
jle
lret
pop
ss
adc
cltd
in
jns
jbe
in
xlat
std
and
movsb
repz
outsl
and
arpl
ffreep
sbb
sbb
int3
movsl
loope
mov
adc
cmovae
pop
dec
cltd
fistl
push
sbb
and
mov
das
xchg
dec
jb
pop
adc
enter
andb
sub
int
rcll
out
dec
rclb
out
cmp
dec
cltd
sbb
lds
in
dec
jl
iret
loopne
pop
cmp
sbb
add
push
sbb
outsb
shlb
push
adc
jbe
int3
dec
xchg
cmpsb
cmp
imul
mov
hlt
mov
rcll
jecxz
lea
repz
jp
inc
leave
push
mov
jns
pop
insb
int
outsl
daa
ja
fisttpll
ficompl
jb
dec
push
es
pop
push
push
dec
hlt
pusha
out
imul
fdivrl
je
jp
sbb
adc
repz
pop
cmp
xlat
in
mov
xor
or
out
popf
mov
bound
ljmp
sub
clc
sub
push
or
das
outsb
cmpsl
pop
jge
sbb
inc
imul
mov
mov
loop
cmp
cmpsl
inc
xchg
sbb
dec
xchg
mov
iret
mov
adc
dec
hlt
and
or
js
jmp
pop
adc
push
and
sub
dec
add
lock
out
or
pop
sub
jbe
dec
lods
movsl
jb
pop
push
ja
dec
xchg
jle
inc
inc
popa
xor
pusha
addl
add
push
test
mov
push
add
das
les
adc
fstpl
cltd
dec
dec
inc
stos
mov
mov
sahf
fmul
xchg
pop
shll
test
scas
out
inc
sbb
jb
cmp
cmpl
sarb
jg
jbe
mov
fcompl
inc
or
cs
or
dec
mov
jns
repnz
mov
xor
jno
data16
mov
imul
fisubrl
subl
repz
dec
jecxz
es
nop
xchg
mov
cwtl
andl
daa
jb
jle
lock
aas
cmp
and
mov
lods
ret
enter
mov
ret
mov
adc
insl
push
pushf
imul
xorb
mov
bound
and
and
mov
fildl
out
inc
test
jnp
aaa
loope
xlat
sbb
sbbl
and
aad
xlat
cli
ficoms
mov
pop
push
outsl
in
imul
loop
scas
cltd
cmpb
int3
shrl
cmp
test
pop
stos
ret
xchg
adc
jne
aam
ss
add
push
ss
mov
insb
xlat
mov
push
clc
dec
enter
das
shrb
inc
hlt
jecxz
testl
movsb
cwtl
stos
fwait
jbe
mov
mov
fildll
xchg
adc
push
int
test
int
sbb
pop
movsl
filds
cwtl
rorb
lret
jecxz
enter
pop
dec
pushf
lods
xchg
push
fnsave
pushf
or
pop
shrl
cltd
or
rcll
adc
mov
sub
jo
in
repnz
adc
inc
pushf
pop
sbb
or
pop
dec
out
or
cmp
gs
xor
push
sub
xchg
sahf
repz
jmp
dec
cltd
jg
in
add
stc
push
cmpsl
pop
in
and
out
fldenv
arpl
popf
push
in
in
xor
push
je
cmp
and
and
dec
push
jne
mov
aad
aam
add
inc
lods
scas
mov
sarb
daa
es
and
xchg
cmc
jg
out
aam
xchg
xchg
adc
outsl
mov
fisttpll
enter
fisubs
clc
dec
sub
outsb
popf
add
lea
dec
jge
adc
push
dec
out
pop
adc
aaa
hlt
xchg
dec
aad
bound
aaa
aad
gs
sub
push
jg
rcrl
orb
lcall
sbb
sub
shlb
test
jb
dec
scas
pop
sbb
jecxz
push
call
movsb
lahf
jbe
pop
ror
fimull
xchg
xchg
mov
add
or
out
lahf
pushf
xchg
push
xor
mov
call
daa
ret
pop
sub
loope
enter
leave
repz
fsubp
and
ret
mov
mov
aam
fisubl
lcall
inc
or
nop
in
faddl
xor
mov
pop
xor
out
xlat
adc
jno
xchg
xchg
filds
adc
sub
out
push
pop
cmpb
adc
dec
shll
xchg
jb
lods
ficompl
sti
stc
mov
das
in
jne
scas
adc
sbb
fdivrs
mov
mov
insl
ljmp
inc
xor
out
mov
das
pop
cmp
cmc
cmpsl
call
ja
sarb
mov
scas
inc
adc
das
js
xorb
jecxz
adc
hlt
aas
call
xor
mov
mov
jno
lock
jbe
pand
andb
push
mov
jne
dec
mov
int3
xchg
mov
bound
mov
subl
xchg
or
xor
push
out
out
cli
aas
shrb
inc
fadd
stos
xchg
fsincos
lock
jg
in
lods
cmpl
sbb
mov
add
arpl
pushf
icebp
and
dec
push
jle
ds
out
dec
jg
repz
push
test
inc
add
fisubs
loop
mov
rcll
mov
mov
dec
jb
lods
xor
sarb
sarb
insb
mov
cmc
insl
mov
dec
clc
sahf
pop
mov
jge
insb
add
cwtl
mov
fnsave
xorl
sbb
aad
pushf
inc
jmp
das
imul
sub
pusha
pop
pop
adc
xchg
mov
push
push
and
out
lret
cmc
and
or
daa
sbb
jne
in
mov
sti
cli
daa
in
mov
loop
popa
popf
mov
lahf
and
push
addr16
mov
inc
xchg
xchg
xorb
sub
icebp
rcrb
ja
ljmp
leave
xor
das
mov
cltd
xchg
sub
or
fisubs
sub
fstpt
daa
addps
and
sbb
test
mov
hlt
push
test
jb
jne
sbb
cmp
test
and
jg
xchg
pop
dec
shll
cmpsb
sarb
xlat
cwtl
repz
inc
jmp
adc
testl
add
cltd
cmp
sub
adc
inc
cltd
pop
mov
rcrb
test
xor
sbb
jo
sbb
stos
inc
jg
mov
adc
popa
pop
push
xor
lea
fwait
xor
dec
sbb
cmpsl
and
push
xchg
rcl
shll
jne
lock
mov
sbb
je
cli
jge
test
in
ret
fists
and
inc
popa
fisubl
mov
pop
enter
arpl
imul
fwait
mov
xor
pusha
mov
sbb
icebp
mov
inc
out
insb
xchg
ret
adc
jmp
in
xchg
add
out
mov
add
iret
loopne
xchg
aas
data16
jno
std
add
test
add
enter
mov
inc
add
test
stos
leave
gs
inc
mov
loopne
test
aam
cmpsb
pop
out
mov
sbbb
mov
cs
aas
test
ljmp
rorl
iret
scas
lahf
stc
arpl
cmc
pop
fwait
notl
mov
insb
mov
mov
lods
pop
and
repz
push
pop
outsl
xchg
xor
data16
arpl
inc
jle
xchg
popf
xchg
out
pop
shll
xchg
aam
sbb
adc
jecxz
and
or
xor
jns
jne
inc
test
dec
lock
dec
mov
xor
lock
and
jl
xchg
iret
sti
mov
mov
outsb
fs
mov
and
incb
stc
xlat
mov
jb
xchg
jnp
xchg
mov
cmp
cmp
mov
int3
mov
pop
jle
xchg
push
dec
pop
ss
pushf
sbb
in
mov
jg
clc
inc
btr
cs
adc
mov
adc
cli
xchg
stos
inc
jbe
mov
rorb
inc
out
je
aam
jne
jbe
sti
inc
push
adc
aad
clc
outsl
loope
adc
in
mov
add
dec
outsl
movsb
mov
shl
sub
mov
dec
inc
inc
dec
xchg
dec
stos
out
adc
hlt
out
ja
adc
jb
mov
add
mov
sbb
arpl
enter
scas
insl
arpl
add
test
dec
cwtl
push
pop
mov
data16
lcall
jb
xchg
rcll
pop
pop
jp
movsb
add
mov
cmc
pop
iret
nop
mov
test
jmp
add
movsb
dec
mov
ds
or
sti
pop
mov
jp
cmp
enter
idivb
add
loop
sti
dec
pusha
sub
mov
aas
lret
and
insb
sub
addr16
push
xor
mov
and
cmc
sbb
bound
ss
movsb
stos
mov
pop
dec
leave
dec
pusha
insb
ljmp
xchg
pusha
xor
outsb
sub
lods
leave
fnstcw
add
rcll
mov
daa
or
stos
sbb
dec
adc
fldl
dec
fcmovne
adc
cli
cmpsl
jae
ljmp
cmpsb
mov
addr16
outsl
xorb
jmp
lret
cs
xchg
jle
xchg
jg,pt
lock
lods
mov
xchg
mov
cmpsl
outsb
mov
jbe
dec
je
test
lahf
call
sbb
repnz
lret
in
cmpsb
sub
movsl
repz
xchg
fsub
leave
clc
cmp
insl
fs
lods
push
push
fimull
add
inc
es
mov
dec
test
sbb
xorl
pop
push
mov
or
or
lahf
lret
lret
mov
adc
xlat
movb
adc
ret
fimull
add
jg
push
push
jge
fs
inc
push
or
in
sbb
inc
das
movsl
sar
out
xor
sbb
adc
inc
fildll
ficompl
and
mov
adc
add
xor
stos
sbbb
int
xlat
cltd
xor
mov
filds
push
gs
jbe
and
sub
int3
lahf
pop
divl
mov
shlb
adc
pop
or
into
imull
sahf
mov
push
push
xor
dec
ja
in
mov
dec
sub
xchg
jg
add
jecxz
sbb
xor
mov
subl
mov
out
sbbl
mov
jns
test
pop
leave
ja
sub
mov
inc
aam
or
mov
mov
add
mov
call
fisttpll
lock
shl
movsl
mov
add
mov
cmp
daa
pusha
mov
sub
insl
adc
mov
cltd
stc
adc
jne
lcall
dec
popf
add
mov
or
lods
push
call
cmp
pop
lcall
test
sub
xchg
scas
xor
mov
pop
bound
sbb
dec
lods
imul
pusha
rcl
mov
or
xor
jae
ja
add
adc
cmc
loope
rep
fmuls
xor
stos
xchg
xorb
mov
popa
in
dec
or
push
or
stos
xor
andb
loop
aas
pavgw
lahf
fcomip
sahf
fs
jmp
lds
aas
addr16
push
xchg
int3
inc
jnp
or
pusha
test
cmp
mov
enter
add
lret
sarl
dec
fisttpl
push
mov
mov
movsl
adc
pop
data16
nop
sbb
hlt
xchg
rcl
mov
xor
add
ja
sub
ret
mov
inc
add
ljmp
mov
sbb
test
pusha
pop
add
xlat
xlat
ja
insl
pop
shlb
das
test
add
or
movb
add
sub
mov
mov
mov
repnz
sub
nop
mov
xchg
mov
pushf
and
sbb
out
pushf
sub
iret
inc
push
les
push
xlat
enter
aad
movsl
add
testb
outsl
daa
mov
sub
fdivs
fs
dec
lea
add
pop
sub
xor
jg
cmp
dec
das
ret
mov
dec
sbb
fidivrs
xor
icebp
aaa
and
xchg
sbb
push
sarl
idiv
cld
insb
push
or
sti
out
mov
mov
cmc
push
pushf
fstps
dec
ss
orb
pop
adc
popf
lret
sbb
mov
dec
or
jg
xor
cltd
rorl
or
arpl
mov
jbe
add
es
push
call
adcl
xor
add
decl
sub
in
adc
dec
jns
movsl
adc
arpl
popl
jl
jno
cmp
test
cmp
push
insb
lret
sbb
cli
imul
popa
jl
jmp
dec
and
jno
push
stos
mov
mov
ja
push
push
dec
or
push
stos
push
movsl
xor
orl
stos
movsl
xor
js
subb
dec
mov
jecxz
push
fs
dec
sahf
jg
sbb
pop
cmp
inc
or
sahf
sub
nop
cmp
sbb
ret
nop
sarl
jnp
mov
inc
push
imul
enter
leave
loop
jno
jns
mov
hlt
cld
dec
inc
mov
xchg
push
jae
out
push
test
xchg
or
push
subl
lea
jl
in
xchg
push
xchg
mov
add
and
sbb
movsl
inc
shlb
mov
lods
jg
mov
xor
push
orl
lea
and
cmp
dec
push
shrb
daa
cmp
adc
cmp
inc
lret
in
jmp
xchg
push
aam
or
mov
scas
addl
push
loope
mov
iret
jne
add
out
ss
mov
outsb
xor
scas
daa
cmp
or
and
mov
sbb
ja
mov
mov
fildll
clc
push
mov
shlb
xchg
imul
adc
cmp
scas
jne
pushf
fisttps
pop
fstpl
aaa
fnstcw
into
push
xchg
push
mov
jl
ja
les
idivl
imulb
mov
xor
mov
imul
hlt
push
movsl
in
pop
xchg
shlb
out
ffreep
sbb
mov
mov
mov
dec
jb
ds
xor
call
in
repz
int3
int
xor
lea
push
nop
popa
repz
push
xchg
mov
test
out
cmp
jmp
mov
mov
mov
idiv
imul
inc
xchg
mov
mov
cwtl
adc
std
mov
loope
sbb
insl
test
mov
adc
pop
pop
adc
pop
sbb
pop
jp
adc
xchg
mov
jno
arpl
mov
scas
add
xchg
xor
xor
xor
xor
xchg
das
loope
jp
mov
mov
lahf
mov
xor
xor
push
dec
jo
pop
scas
cli
cmp
add
push
ret
sbb
rcrl
sub
mov
jbe
popf
or
and
push
inc
jae
rorl
sarb
out
aam
movsl
in
mov
push
pop
jle
cwtl
fsubrs
cmp
mov
mov
xchg
popa
insb
cmp
dec
movsb
sbb
mov
mov
add
dec
xchg
mov
mov
cld
dec
xchg
test
div
inc
int3
lea
ffree
test
inc
pushl
xchg
repz
mov
lds
push
push
cmp
aad
push
pop
je
jns
jge
mov
sub
mov
inc
and
mov
test
cmpsb
pop
or
xchg
mov
lods
sub
mov
lods
sbb
push
stos
jbe
push
xchg
xchg
pop
add
cld
shr
xor
callw
mov
add
adc
add
push
push
xchg
cmp
out
inc
adc
adc
xor
adcl
and
outsl
jl
add
sbb
mov
jge
in
xchg
mov
pop
cld
dec
push
cwtl
test
lahf
lods
negl
sbb
push
push
int
push
pop
imul
xor
xchg
inc
xchg
repnz
enter
sbb
cmp
cwtl
or
mov
push
call
out
sbb
sub
cmp
push
outsb
cwtl
pop
test
mov
push
call
out
sbb
sub
cmp
push
outsb
cwtl
pop
test
mov
push
call
out
sbb
sub
cmp
imul
mov
push
call
out
mov
sub
dec
leave
shlb
popa
xchg
jno
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aaa
add
adc
add
je
push
cmp
xor
clc
addb
test
aam
aam
push
add
js
add
je
fs
push
bound
andb
ret
aam
repnz
adc
inc
add
dec
bound
mov
loope
lahf
nop
xchg
mov
xchg
data16
insl
fidivs
fs
mov
xchg
repz
xchg
lret
mov
in
shrb
cmp
or
push
xchg
xor
lods
fldcw
jp
aas
shl
adc
mov
push
lret
les
adc
adc
ja
loop
movsb
insb
andl
clc
repz
and
mov
inc
stos
mov
mov
xchg
pop
jp
or
ror
lahf
sub
xor
cltd
iret
mov
lods
fistps
daa
xchg
xchg
pop
roll
jecxz
mov
adc
mov
testl
cmp
repnz
add
adc
add
nop
inc
sbb
push
jb
cmpb
loop
mov
mov
loop
mov
outsl
push
shll
je
sub
inc
add
loope
xchg
mov
pop
data16
sbb
or
idiv
xchg
hlt
cld
fimuls
xchg
test
push
push
inc
daa
cs
push
bound
andb
ret
aam
repnz
and
adc
add
je
fs
push
bound
andb
ret
aam
repnz
addb
rol
jecxz
xchg
fstpl
scas
hlt
imul
bound
push
sub
outsb
shl
nop
mov
pop
push
imul
lods
in
adc
jbe
adc
imul
je
and
pusha
cmp
xchg
pop
in
cs
es
sbb
imul
in
ss
and
int3
jnp
mov
repnz
dec
std
add
in
xor
mov
sbb
dec
and
xchg
les
adc
push
daa
dec
mov
shll
mov
cmpl
cmp
sbb
add
jae
pushf
cmp
jnp
icebp
jno
fmul
loopne
lret
cmc
ret
lods
sub
loop
scas
shlb
inc
rol
push
adc
enter
sbb
stc
rcll
int
movsb
inc
or
mov
negl
in
into
lcall
cmp
add
dec
lahf
xchg
inc
cwtl
pop
dec
pop
dec
and
inc
add
addr16
inc
xchg
or
loopne
and
add
lret
xor
mov
xchg
ficompl
dec
mov
lahf
je
icebp
in
cli
fldl
jle
push
push
fcoms
sbb
or
push
gs
fcomp
jmp
dec
mov
test
sahf
inc
ds
movb
scas
movsb
xor
mov
shrl
xchg
lea
push
or
int
ljmp
mov
aaa
sbb
inc
lcall
pop
dec
inc
mov
popa
shlb
mov
fisubrl
inc
pusha
bound
add
cli
jnp
add
dec
adc
jnp
sub
out
int3
jbe
ljmp
cmp
nop
fdivs
loop
sub
inc
mov
test
fwait
popa
pop
adc
jns
pop
fstpl
pusha
or
cs
adc
push
inc
mov
aad
sub
jno
sub
cmp
cs
in
xchg
repnz
hlt
jl
jl
aaa
imul
fimull
ds
js
dec
push
push
lret
aam
dec
std
push
fldl
inc
adc
jl
mov
shl
notl
dec
cmc
loopne
xchg
gs
inc
movsl
lea
fs
sbb
push
xor
stos
ret
sub
icebp
stos
outsb
dec
pop
push
lret
sbb
rol
aad
pushf
int
mov
test
shr
loop
leave
mov
mov
cld
aad
xor
mov
pop
add
jb
mov
repnz
test
rcpps
xlat
mov
jmp
lods
ja
or
xchg
es
orb
push
sbb
sub
rclb
leave
and
adc
stos
cmp
faddp
xchg
sbb
and
arpl
adc
push
mov
and
push
push
push
xchg
aas
lods
lea
cmpsb
xor
sbb
dec
and
sub
test
inc
xlat
push
ja
adc
fwait
mov
loope
pop
sarb
dec
stos
mov
cld
or
lahf
setns
stc
pmaxsw
notb
push
dec
pop
adc
jno
shl
pop
xchg
adc
or
out
push
cli
jp
cmp
repnz
or
repnz
mov
mov
sbb
cltd
and
dec
lret
les
inc
rcll
fbld
sbb
shl
fisttpl
clc
les
cmp
arpl
pop
xchg
pop
pop
inc
jb
mov
sbb
push
stos
aad
adc
sbbb
xlat
xor
dec
popfw
fcoml
inc
fistpl
fsts
das
cs
mov
inc
clc
inc
lods
shll
pushf
shrl
insb
cltd
test
sub
adc
lcall
fidivrs
test
and
sub
test
mov
push
pop
push
loop
outsl
rclb
sbb
dec
pop
decb
fbstp
xchg
aaa
mov
and
cmpsb
add
ret
xor
dec
inc
into
mov
popa
pushl
fwait
cmp
and
aam
das
mov
loopne
add
out
lret
mov
cmp
pop
or
pushf
mov
inc
jl
mov
sahf
push
push
mov
pusha
xor
adc
pop
insl
xchg
sti
cmp
inc
xchg
xor
popa
shl
adcl
jbe
jmp
inc
add
test
jg
mov
xlat
add
ret
dec
repnz
ja
and
sub
imul
mov
imul
cld
mov
pusha
cmp
out
out
jg
push
mov
mov
sar
add
sbb
jmp
inc
xor
enter
mov
pushf
adc
sub
push
jns
sub
inc
lret
and
outsl
imul
cmp
jg
lahf
popf
jg
mov
sub
adc
dec
jge
lcall
repnz
std
pop
fwait
mov
addl
lcall
ret
cltd
sub
and
or
movsb
mov
rorl
test
jnp
jl
cmp
mov
mov
jae
and
stos
sub
xor
adc
add
add
movsb
mov
jg
in
sub
leave
push
in
sbb
dec
mov
mov
mov
jno
bound
scas
pop
movsl
xor
stos
push
cld
push
pop
mov
jle
fcomi
push
sbb
fldenv
inc
mov
jp
pop
dec
or
add
mov
lock
pop
sub
leave
pop
std
fdivrp
andl
cwtl
sbb
adc
mov
sub
repz
mov
and
push
cmp
cmpsl
lods
sub
push
xchg
push
gs
es
cmp
ljmp
sub
cmp
jb
push
xlat
inc
push
fcoms
enter
push
pop
pop
xor
xor
sbb
mov
cmp
mov
jno
or
or
scas
sub
sbb
inc
hlt
gs
call
mov
inc
lahf
sub
sbb
cmp
lds
int
adc
mov
shl
pushf
loope
sub
out
js
imul
mov
es
pop
mov
push
mov
repnz
adc
insb
aad
clc
push
cwtl
xor
adc
mov
xor
icebp
out
jmp
and
das
push
sbb
lds
pushf
into
cmpsl
aas
mov
cmp
jp
mov
add
or
out
fndisi(8087
out
cli
sarb
scas
iret
jo
ds
xor
aaa
lds
int
filds
adc
xchg
dec
nop
test
mov
fistps
xchg
dec
sub
jnp
mov
pop
xor
inc
jle
popa
sub
cmp
enter
mov
mov
lcall
pop
insl
push
mov
cmpsb
lret
popa
dec
mov
lods
inc
arpl
jno
fiadds
dec
adc
pop
xchg
repz
lea
iret
mov
mov
push
shll
inc
mov
or
jne
aaa
aam
pushf
mov
mov
pop
bound
outsb
lods
sub
mov
bound
and
mov
mov
jl
call
gs
sbb
cmpsl
sub
mov
loopne
ss
dec
cs
add
cwtl
lea
fadds
push
int3
mov
hlt
movsb
ret
mov
add
xor
xor
pop
lds
movsl
inc
mov
andb
xchg
out
lret
enter
cld
sbb
xor
and
mov
mov
testb
xchg
or
repnz
add
ret
outsb
out
fbld
ljmp
aam
addr16
cmp
sub
popa
ret
fcompl
int3
outsb
cmpsl
in
fmul
adc
push
cmp
insl
jge
sub
out
push
jl,pn
inc
ljmp
pop
pusha
xor
jmp
adc
cmp
lods
sahf
mov
mov
fwait
mov
add
jecxz
test
icebp
jnp
push
outsl
dec
and
and
push
ss
pop
das
in
adc
dec
icebp
xchg
je
xor
mov
cli
inc
fcmovne
repz
fmull
sub
sbb
mov
mov
stc
push
mov
lret
cmp
push
jbe
daa
jno
insl
fimuls
je
fcoml
idivl
clc
aad
loope
into
jp
pushf
and
andb
xchg
insl
sahf
rorb
cld
lcall
leave
xchg
adc
push
xor
data16
aad
add
add
mov
and
cmp
push
xor
mov
rcl
mov
xchg
sbb
jne
in
cmp
repnz
lea
scas
mov
dec
xor
push
pop
popf
sbb
fwait
pop
xchg
adc
sbb
cmpsb
pop
rcrb
test
jmp
enter
jbe
cmp
das
sub
mov
xorb
movsl
mov
aam
cmp
xchg
sti
into
fs
mov
sbb
xor
movsb
insb
sub
xchg
fcomi
loopne
sbb
xor
xchg
jno
fidivl
pop
cwtl
and
jo
mov
cmpsb
mov
push
pop
mov
sub
mov
push
ds
and
aas
fdivrs
jns
inc
and
iret
add
sti
cmp
mov
rcr
sbb
movsl
clts
ret
fldt
mov
push
rcrb
pop
sub
fidivs
xchg
jno
inc
shrl
mov
daa
out
and
mov
dec
push
mov
and
cmc
add
add
sbb
pop
cli
push
jp
lret
loop
add
push
push
fistps
jl
sub
add
lods
es
repz
xor
fs
shlb
std
xchg
add
outsl
mov
cmpsb
add
jmp
pushf
filds
je
je
push
dec
mov
cli
push
lds
inc
call
stos
mov
pop
int3
insb
rcr
es
in
minps
jne
fldenv
in
jnp
jae
fstpt
mov
aad
mov
mov
push
sti
adc
mov
iret
jecxz
mov
mov
xlat
jmp
fcomip
sub
xor
jp
dec
sbb
mov
negl
filds
scas
push
sub
sbb
lods
push
adc
dec
push
shlb
dec
movsb
xchg
popa
pop
adc
jb
cs
mov
pop
dec
lret
scas
adc
imulb
xchg
leave
fcompl
shrb
dec
clc
dec
popa
push
mov
sbb
cld
sub
mov
xor
cs
fbld
movb
out
mov
mov
jnp
xchg
into
and
jns
xor
xchg
xor
jo
ficoms
xchg
sub
xchg
out
xchg
add
scas
dec
shrl
mov
or
pushf
inc
jno
aam
xchg
jns
arpl
leave
cmpsb
leave
leave
into
or
rcrb
push
pusha
mov
fs
pop
cmovbe
inc
mov
fldcw
pop
jmp
int
push
cmp
lret
ss
cmpsb
push
add
xchg
xor
push
jae
push
test
cmp
adc
push
push
rorb
dec
and
pop
stos
pop
xor
cmpsb
aaa
add
pop
aaa
bound
lcall
jne
movsl
mov
lods
popf
xlat
sbb
rclb
jbe
pop
xor
cmp
movsb
dec
or
cld
inc
fmul
call
pop
inc
mov
xchg
arpl
pop
dec
fmuls
insb
cld
sbb
mov
aam
dec
faddp
lods
enter
jo
mov
psubq
xchg
jb
sub
add
inc
jnp
mov
lods
mov
push
xor
jne
stos
inc
mov
pop
lahf
fiaddl
and
xchg
mov
out
cmp
or
and
cmpsb
push
ds
fidivs
xlat
jnp
inc
inc
xor
lods
stc
imul
mov
out
sub
sbb
paddq
loop
in
test
xor
enter
mov
xchg
mov
bound
mov
add
out
outsl
out
cs
cli
clc
jbe
pop
pop
cmc
dec
je
jno
and
icebp
pop
pop
pop
movsb
mov
jns
add
mov
and
lcall
adc
mov
mov
inc
insb
in
jmp
stos
mov
cmp
test
cmovge
bound
mov
jb
or
pop
loopne
pop
xchg
and
mov
or
cltd
or
scas
pop
int3
into
movsb
pop
or
ret
jb
cmp
aad
cltd
leave
fwait
out
jnp
cmc
fmul
jns
loopne
mov
pop
imul
jnp
jle
mov
aad
in
loope
aad
cld
lret
jmp
imul
aaa
or
jg
sbb
or
push
in
in
gs
mov
mov
push
sbb
rcll
push
push
mov
push
movsl
mov
adc
imulb
hlt
mov
shr
sbb
arpl
sbb
subb
cld
cmc
repnz
repnz
xor
aad
jbe
xor
push
out
in
daa
jg
lods
sbb
movsl
pop
add
pusha
cmp
jg
xor
or
les
lods
inc
sti
and
push
shl
sub
mov
mov
aaa
es
lds
adc
test
call
mov
std
test
sar
cmp
mov
push
pop
aas
fstenv
call
adc
jle
js
and
adc
adc
cmp
sbbl
icebp
mov
popf
outsl
dec
dec
push
jbe
pop
jg
repz
dec
inc
test
add
xor
out
adc
jl
aas
dec
leave
je
testb
hlt
rol
cmpsb
xor
push
cmp
jmp
push
jb
dec
mov
pop
cmp
icebp
and
aam
add
jl
mov
xchg
addr16
push
cmp
xor
test
mov
scas
lret
mov
push
rol
out
push
jg
or
outsb
mov
dec
xchg
jg
jg
push
push
hlt
adc
jge
lea
xorl
jae
sbb
clc
loop
xor
mov
jo
sarb
rclb
push
and
sbb
hlt
test
push
dec
fildll
sbb
jge
addr16
cmp
push
pop
loop
push
in
clc
fnstcw
testb
add
pop
mov
mov
pop
fsubl
lcall
cs
popf
daa
js
dec
in
push
icebp
cmp
sarl
jmp
push
sbb
std
aaa
mov
push
xor
xor
outsl
fucomp
ficoms
push
xchg
mov
mov
lea
and
push
ljmp
or
inc
mov
lea
test
cwtl
mov
sub
mov
inc
shr
mov
or
in
roll
dec
pop
xchg
daa
add
movsl
mov
in
mov
sahf
fistpll
xlat
outsl
and
insb
lods
xchg
jo
loope
lcall
dec
xchg
mulb
cmpsb
push
mov
xchg
push
cs
adc
push
fwait
pop
jo
leave
lea
cmp
lcall
push
adc
adc
push
std
cli
and
insb
addb
lret
lret
sbb
mov
mov
in
call
roll
sub
icebp
orl
fwait
lret
test
jle
loopne
adc
outsb
addl
adc
ret
fsts
inc
dec
push
loope
aaa
pop
inc
cmc
push
sbb
xchg
xor
add
fwait
jl
lea
xor
jp
lock
jbe
push
sub
push
push
fs
call
or
cmp
ljmp
xchg
js
icebp
sub
pop
imul
xlat
push
and
fistl
lock
lea
icebp
mov
and
stc
jb
mov
mov
popf
pop
pop
dec
jge
mov
lcall
or
repz
and
roll
jge
jecxz
leave
or
mov
add
inc
sti
mov
loop
or
jl
fbstp
lcall
ret
mov
out
dec
sbb
lods
cmp
out
aas
les
lret
sbb
or
fmulp
repz
adc
sbb
movsb
xlat
mov
push
test
jae
or
cmpsl
test
aad
fxch
leave
or
hlt
pop
nop
stos
cmp
in
adc
xchg
mov
adc
inc
in
fwait
mov
mov
cmp
inc
les
jg
sub
dec
ljmp
sub
adc
mov
xor
mov
dec
mov
pop
in
sbb
decb
sbb
nop
mov
test
nop
lret
push
imul
popf
jle
aaa
mov
jno
out
loopne
jmp
dec
pop
jne
push
push
std
and
xchg
loopne
dec
inc
sarl
fnsave
mov
cmpb
out
add
push
or
xchg
jge
std
rorb
mov
or
dec
andb
je
xchg
mov
xchg
stos
sub
insb
es
push
dec
pop
add
fnstcw
loop
jae
outsb
push
push
lods
sub
push
mov
je
cs
leave
push
data16
pop
movsb
aaa
test
add
cmp
sub
dec
sbb
popf
or
je
jae
jg
rcl
stc
in
lods
out
jl
cmp
out
push
push
js
lret
pop
pop
xchg
lahf
push
pop
jmp
adc
jb
in
lret
test
sub
xor
insl
stos
insb
push
enter
scas
jnp
mov
shrb
add
sar
shrl
add
ret
mov
cmp
fimuls
pop
sbb
mov
xchg
pop
inc
ficoms
adc
rcr
xor
out
xlat
dec
mov
dec
mov
pop
es
std
fisttps
popf
lods
mov
mov
pusha
lahf
adc
mov
or
sarb
xchg
fdivl
scas
out
in
int3
dec
inc
sub
add
out
pop
sbb
repnz
mov
xor
sub
push
cmp
add
ss
fwait
pop
adc
shlb
mov
fcoml
out
in
rclb
rorb
jp
push
hlt
lcall
outsl
push
push
mov
xor
sub
sbb
push
ljmp
mov
data16
push
iret
dec
push
mov
in
pop
sbb
mov
mov
hlt
add
dec
or
xchg
xchg
into
adc
push
fcomi
test
lods
jmp
outsb
mov
cmp
cltd
hlt
mov
inc
sbb
jns
lds
mov
lea
pop
std
cltd
and
pop
lods
mov
lahf
test
xchg
movsl
inc
cmp
sti
cmpsb
fisttps
adc
push
lret
and
push
popf
gs
push
out
repnz
xor
arpl
insl
pop
mov
inc
xorl
rolb
nop
jo
subl
rcll
xchg
out
jns
fistpll
cmp
das
out
lods
jns
data16
rolb
popf
inc
jb
jae
push
imul
mulb
pop
jp
addb
mov
push
mov
aad
pop
jno
xchg
std
fistpll
lahf
gs
mov
pop
fisubrs
lock
mov
xchg
fsubrp
mov
push
daa
cld
out
adc
and
push
jg
stos
lahf
outsl
ds
je
das
pop
shll
mov
ljmp
pushf
pop
cwtl
pop
jae
inc
lods
push
jne
pop
pop
out
es
cli
stc
dec
loope
dec
fisubrl
push
les
stc
lods
fs
popa
aam
popa
push
cltd
test
repnz
cmpsb
es
sub
adc
xor
and
mov
in
xchg
lock
movsl
xor
lods
dec
loopne
roll
shl
inc
or
push
in
push
ds
add
adc
jmp
imul
test
lods
adc
stos
xor
cmp
rcrw
mov
std
mov
and
mov
lods
fidivs
sub
or
mov
jns
mov
mov
lods
cmpsl
inc
adc
fs
push
ds
push
sbb
leave
jbe
js
push
sub
test
movsb
dec
int3
or
add
xor
sub
movsl
loop
out
sub
push
outsb
das
test
push
outsb
movsb
cld
dec
fwait
es
adc
in
dec
jmp
pop
lahf
xchg
cmp
mov
xor
mov
cli
jg
adc
mov
mov
mov
test
push
jecxz
jne
scas
or
ljmp
rcrb
push
sbbb
movsl
dec
shr
out
cmpb
pop
in
xlat
xor
mov
iret
jg
dec
xor
stos
pop
fbld
shl
std
into
aad
cmp
je
cmp
loop
xor
add
xor
mov
sub
iret
lret
dec
popa
inc
jp
sidtl
jge
jmp
data16
imul
fdivl
push
add
xor
push
push
bound
andb
ret
aam
repnz
and
adc
add
je
fs
push
bound
andb
ret
aam
repnz
adc
je
add
in
fs
push
arpl
mov
hlt
rcl
loop
repnz
js
dec
and
je
je
push
loop
lea
test
orl
sub
add
dec
outsb
xor
and
rcll
leave
repz
data16
add
push
inc
jae
arpl
xlat
ss
shll
inc
repz
data16
cmp
imul
cld
xchg
push
mov
cld
sbb
or
add
jg
dec
rcrl
pop
inc
adc
jnp
jp
dec
and
sti
mov
pop
adc
xor
xchg
cmpsb
mov
sbb
jl
dec
data16
fldcw
xchg
sbb
xchg
sahf
or
in
jp
loope
sbb
lds
xchg
push
jl
jecxz
pop
fldcw
xchg
pop
jbe
and
enter
dec
test
jbe
push
fwait
andb
imul
clc
mov
ljmp
mov
or
adc
jns
dec
push
rolb
push
xorl
ljmp
jns
ret
and
add
jl
scas
sub
pop
enter
dec
mov
jle
insb
dec
leave
mov
cmpsb
adc
roll
xor
inc
pop
jae
jp
mov
fwait
push
stos
das
mov
pop
rep
cli
addr16
xchg
data16
push
roll
aaa
aam
cmpsl
jno
push
and
addl
xor
inc
mov
sbb
out
push
lds
leave
daa
sub
aam
bound
and
es
adcl
adc
xor
sub
inc
jae
arpl
xchg
push
addl
mov
inc
repz
adc
and
jae
arpl
xchg
push
addl
mov
inc
repz
adc
dec
movsb
jl
outsl
pop
int3
cmp
stc
mov
cs
jno
cmpsl
jae
cmp
cwtl
mov
dec
popf
inc
jp
push
mov
insb
sbb
mov
sbb
lea
mov
icebp
pop
repnz
out
ss
lret
sarl
outsl
mov
adc
pushf
ljmp
pop
sbb
jecxz
inc
jo
and
pop
jno
in
les
jns
out
lcall
das
xor
iret
in
jge
idivb
xor
lahf
jb
dec
arpl
ds
out
mov
call
mov
pop
mov
fdivp
xor
es
lods
mov
jecxz
in
gs
rorl
mov
mov
inc
mov
cmp
fldl
or
ret
loope
ficomps
jg
lods
int
into
fwait
add
and
xor
jno
pushf
stc
hlt
lahf
adc
and
fidivs
test
out
pop
xchg
add
std
cmpsl
dec
cld
fistl
dec
fcompl
clc
push
lods
movsb
sbb
outsb
frstor
push
movsb
stos
daa
jno
movsb
es
add
addr16
jb
or
js
push
cmpsl
lahf
scas
cmp
das
xchg
pop
out
dec
push
lret
xchg
xchg
and
xor
or
dec
mov
xor
fbld
mov
adc
dec
mov
enter
and
xchg
out
mov
mov
jnp
adc
imul
fs
xchg
mov
fwait
pop
pop
enter
dec
fistpll
jne
ret
pop
cltd
xor
jbe
or
adc
xor
or
out
mov
and
loope
arpl
loope
or
cld
pop
out
mov
mov
repnz
lea
clc
pushf
insl
sub
js
pop
mov
sarl
loop
in
add
inc
fdiv
sti
fistpl
lock
outsl
divb
add
cmpsl
insb
stos
lods
sbbl
and
aad
sarl
jle
mov
dec
pop
adc
push
loopne
mov
nop
jns
mov
daa
or
lret
fidivs
mov
inc
mov
iret
sub
pop
mov
push
cmp
push
sub
fstp
sbb
xchg
icebp
mov
dec
aaa
insl
das
xor
cli
insl
shlb
push
jae
adc
mov
mov
push
mov
test
pop
mov
push
in
jno
add
sub
jo
mov
inc
push
movl
mov
mov
cmpsb
add
push
lds
add
add
in
mov
ss
leave
aam
stc
mov
dec
adc
inc
xor
xor
std
mov
cmp
pop
stc
mov
insl
push
cmp
arpl
mov
cli
std
xchg
jecxz
dec
inc
adc
xor
cwtl
test
push
jbe
in
cld
test
jmp
in
leave
add
aad
sub
cmp
scas
jecxz
xchg
xor
xchg
adc
or
jbe
frstor
adc
in
out
out
and
out
jns
into
addl
jno
addr16
xchg
shlb
pop
imul
xor
inc
in
les
les
mov
adc
xor
pop
iret
jo
cmp
xchg
push
call
sbbl
push
roll
sbb
cli
stc
sbb
outsl
or
cltd
dec
sub
sbb
je
or
ret
push
pop
jg
cs
repnz
push
jl
imulb
subl
pop
cmc
sub
cmp
rcll
loopne
cmp
push
lea
rorl
xchg
icebp
xchg
sbb
inc
mulb
xchg
mov
mov
arpl
rcr
sbb
mov
scas
icebp
mov
popf
scas
fstl
jno
out
mov
and
mov
mov
jno
adc
jle
xchg
out
ss
iret
int
adc
shr
dec
dec
pop
sahf
mov
loopne
lret
orb
pushf
aad
gs
and
xchg
mov
bound
scas
push
cwtl
repnz
out
ret
cltd
add
je
push
stos
cmp
and
bnd
pop
daa
mov
movb
or
pop
inc
xor
fs
mov
mov
xchg
lcall
fs
jle
adc
dec
sub
mov
pushl
orl
mov
in
les
nop
arpl
push
mov
mov
dec
adc
bswap
in
mov
adc
sub
adc
pop
nop
sbb
jmp
outsl
pop
dec
or
ret
testb
test
sbb
nop
insl
repnz
xchg
fldcw
push
icebp
fsubrl
fldenv
xchg
sbb
sub
add
adc
add
lock
push
dec
cmp
movsl
pusha
mov
inc
cli
jg
ljmp
popf
mov
mov
nop
pop
outsl
sarl
les
fs
jecxz
cmp
popa
jo
aad
into
push
add
dec
test
loope
dec
ljmp
pop
sti
jne
jo
sub
xchg
pop
mov
popa
cmpsb
cmp
popf
sub
xchg
and
daa
fldenv
mov
jbe
movsb
int
sbb
jb
jl
sbb
adc
imul
add
mov
mov
sbb
push
imull
jle
mov
pushf
or
mov
cmp
push
mov
push
or
mov
int3
out
xchg
repz
add
sbb
std
mov
sub
adcb
pop
mov
xchg
xchg
fdivl
ljmp
leave
mov
test
rcll
push
aaa
es
cltd
loopne
adc
or
push
xchg
mov
popa
push
or
stos
cmp
push
or
test
dec
mov
fldt
jb
cld
pushf
xor
pop
outsl
pop
cmp
xchg
iret
in
xor
and
out
mov
ret
and
sbb
rcll
inc
jns
cmp
jl
divb
jge
notl
and
out
test
mov
lock
xor
insb
test
cmp
aam
jae
insl
les
push
dec
xchg
enter
jae
and
addl
jns
cli
xor
xor
xor
outsl
jns
push
inc
not
inc
xor
mov
adc
pop
sub
lret
jnp
and
cmc
ret
bnd
je
lods
add
js
imulb
mov
xchg
push
shll
cmp
cli
add
mov
fcoml
fcmovnb
mov
mov
jbe
add
dec
fdiv
test
sbb
scas
mov
xchg
push
add
push
or
push
mov
shll
loope
push
aas
pop
sbbl
cmp
xchg
movsl
pop
lods
popf
js
mov
addr16
mov
aad
repnz
aas
pop
clc
or
xor
pop
sbb
lret
sti
push
lcall
test
sub
enter
sarb
add
loope
jp
mov
popa
clc
push
andb
mov
sbb
fwait
mov
cwtl
sub
fsubs
mov
into
ret
and
ret
push
push
adc
inc
mov
fdivrl
aad
sbb
rolb
mov
subb
pop
push
xor
jmp
frstor
add
add
xor
roll
lret
pop
xor
cli
mov
lock
nop
mov
jp
add
add
dec
jmp
test
int
aad
cltd
xchg
and
mov
sbb
mov
fsubp
sti
xchg
adc
sbb
inc
and
push
sub
jle
or
outsl
rorb
pandn
pop
inc
sbb
scas
xchg
mov
cmp
sbb
out
inc
pop
dec
pop
sub
pop
fwait
ljmp
mov
mov
xlat
or
mov
jne
lods
mov
repnz
popa
outsl
mov
mov
push
subl
loope
mov
cmp
int3
and
or
add
out
addr16
rolb
cmp
jne
je
jnp
add
aas
or
cmpsl
mov
jne
or
mov
adc
cmp
push
ds
cmp
and
shrb
mov
jge
jg
lcall
bnd
inc
fimull
push
fisttpl
jle
jnp
xchg
lahf
mov
or
cmp
mov
cmpsl
dec
movsb
push
mov
mov
ljmp
cmp
jae
cmp
pop
mov
notl
add
popa
jmp
xchg
jnp
lock
pop
push
sbb
jg
ret
dec
mov
in
into
xor
ljmp
repnz
std
sub
adcb
js
out
addb
fdivrl
pop
adc
pop
ret
mov
push
insl
and
push
fs
and
pop
shrb
aam
repnz
mov
mov
jo
push
and
push
adc
imul
aas
pop
fidivl
pop
mov
add
mov
test
sahf
popa
aad
in
repz
aad
xchg
adc
sbb
or
and
xor
or
ret
ret
out
and
add
mov
ja
jl
fs
add
push
cmp
cld
std
sub
sub
cwtl
pop
fildl
ss
pushf
push
or
push
outsl
fnstcw
sub
repz
ficoms
aad
fisubrs
loop
insl
fistl
and
rcr
out
inc
movl
ret
and
cmp
push
pop
frstor
jne
sub
cmp
xorl
lea
mov
add
adc
ret
filds
dec
adc
pop
mov
shll
dec
adc
mov
mull
mov
or
inc
xlat
pop
jne
int3
or
xlat
pop
ss
arpl
xlat
pusha
lret
jg
sbb
outsb
call
pop
lret
jb
cmc
jmp
inc
outsl
ss
fstpl
xchg
cmp
int
cmc
jle
pop
sbb
push
repnz
aaa
mov
push
mov
pop
pushf
fwait
shlb
in
mov
std
lret
popa
push
xchg
sbb
repz
jno
and
mov
out
sub
enter
cmpsl
xor
sub
push
decl
ljmp
push
fdivl
out
jl
jbe
sub
sbb
shrl
lock
fidivrs
clc
fnstenv
in
ljmp
test
sbb
pop
pop
out
pop
sahf
jae
filds
dec
adc
push
iret
stos
mov
into
lahf
stos
pop
push
jae
mov
cmc
xchg
into
in
jnp
pop
test
xchg
cmp
stc
ret
int
sub
cmp
and
jae
adc
sub
gs
inc
cmp
outsb
sbb
hlt
jae,pn
push
pop
iret
add
sbb
pop
ja
cmc
jg
lea
cmp
jp
xor
cmc
aas
int
or
mov
jo
jae
adc
xorl
push
mov
repnz
ja
mov
cmc
inc
sbb
into
jns
cs
or
and
aas
add
ljmp
sbb
sub
mov
jecxz
pop
xchg
popf
into
push
or
pop
push
leave
add
add
jge
xchg
xchg
fldenv
push
mov
fcompl
pop
sub
mov
repz
mov
mov
mov
es
popf
hlt
lods
jmp
pop
insb
int
mov
stos
notl
pushf
dec
lea
js
xchg
js
popf
fdivr
mov
push
xchg
into
or
dec
pop
pop
jp
ljmp
testl
popa
sbb
cmpsb
test
sub
xchg
mov
push
loopne
add
outsb
aad
cmp
mov
mov
cli
inc
xchg
dec
outsl
mov
sbb
add
scas
xor
jnp
cmc
xor
jbe
mov
es
fmuls
movsb
sti
push
loop
jp
add
sbb
jecxz
xlat
aaa
sub
dec
movsl
adcb
sbb
cmpsl
inc
add
add
add
pushf
mov
jnp
fbstp
in
nop
dec
stos
push
or
das
xor
cli
test
xor
inc
push
jl
adc
call
xchg
push
loopne
cld
xor
fnstsw
shl
cmc
mov
xor
ljmp
push
jae
test
mov
movsl
sbb
inc
push
lret
add
adc
mov
aas
xor
dec
pop
dec
jae
fisubl
adc
imul
mov
mov
mov
repnz
cmp
jns
in
xchg
aaa
pop
arpl
adc
loop
sbb
dec
xor
stc
lods
cmp
add
sahf
sub
cli
mov
enter
lret
cmp
in
dec
dec
push
push
pop
mov
hlt
or
dec
arpl
fwait
pop
mov
xor
inc
mov
xchg
adc
inc
pop
popa
mov
jmp
fs
dec
push
daa
repnz
lcall
test
mov
adc
test
inc
add
push
mov
mov
jl
enter
addb
pop
leave
dec
cs
cwtl
xorb
jns
push
push
outsb
hlt
in
pop
xor
int3
push
out
push
add
insb
rolb
orb
mov
rolb
adc
inc
jmp
negb
cmp
test
testl
cmpsb
push
ffree
es
loope
jle
adc
pop
cwtl
pop
lock
cld
inc
cmp
dec
xlat
outsb
jne
aas
jl
stos
les
sbb
js
jp
cmp
fstl
clc
mov
fs
fists
mov
ja
popa
ret
mov
xchg
pop
pop
and
push
jnp
xor
xor
popf
les
xor
je
mov
mov
xchg
mov
hlt
xlat
loope
rcl
gs
insb
outsl
jmp
push
mov
stos
arpl
mov
popf
out
push
mov
lods
movsb
ficoml
jb
nop
in
or
push
inc
movb
mov
fisttps
int
push
jp
test
push
adc
test
or
loope
mov
xchg
lds
cwtl
mov
sub
ja
mov
cmp
mov
clc
cmp
addb
sbb
clc
dec
mov
shlb
ds
imul
mull
mov
push
push
dec
adc
arpl
inc
inc
mov
ljmp
and
mov
jle
out
rolb
mov
adc
test
jbe
jo
push
jbe
inc
jno
ljmp
pop
mov
int3
and
scas
jbe
testl
repnz
push
outsl
cmp
lock
push
adc
push
xor
not
testb
add
aaa
shlb
add
mov
adc
and
sti
jge
fsub
xor
testl
fiaddl
js
xor
fistps
add
dec
xchg
fmuls
xchg
push
pop
fdivs
mov
dec
cmpsl
cmpsl
cs
lahf
inc
mov
aad
aaa
arpl
fstl
xchg
sbb
jne
add
jmp
mov
jo
hlt
js
js
sbb
xor
dec
cmp
inc
jbe
adc
cmp
addl
ret
lods
dec
mov
cmp
fs
dec
add
sahf
stos
and
and
bound
xchg
cs
xchg
decb
ror
sbb
popa
stos
pushf
and
adc
mov
or
pop
sbb
sbb
imul
sub
nop
testb
or
int3
xor
repz
jns
push
add
test
insb
mov
mov
adc
jecxz
lcall
xchg
mov
insl
sub
pop
add
sub
push
or
mov
mov
popf
stos
push
cltd
lock
sbb
and
add
jmp
pop
call
or
loop
dec
push
idivl
test
rcrl
jmp
adc
and
loopne
outsb
and
cmp
add
jb
push
and
dec
arpl
sarb
loope
mov
cs
es
dec
into
lods
pop
pop
adc
faddp
jecxz
add
in
jmp
orb
sub
ret
stc
fists
add
mov
cmc
in
and
in
push
mov
dec
sub
push
xor
leave
mov
ds
clc
addb
pop
aad
cmpsb
inc
adc
jno
out
dec
lret
aas
sub
fbstp
fildl
mov
mov
adc
mov
lahf
mov
cmp
jno
fisubl
test
mov
clc
mov
mov
inc
xchg
dec
inc
mov
lret
movsb
jmp
push
imull
aaa
push
lea
cmp
popf
sub
cwtl
add
push
xchg
fs
lahf
mov
mov
lret
push
adc
sti
cmp
and
sbb
xchg
fists
and
std
fldt
cmpsb
push
jae
mov
insb
ss
sahf
pop
cmpsl
bswap
xchg
add
insb
or
cmp
scas
or
or
in
add
or
push
aaa
lret
imul
movsb
mov
and
hlt
mov
mov
ret
repz
inc
std
sub
sbb
jmp
lret
or
popa
scas
xchg
icebp
vprotq
test
testl
xchg
sbb
mov
jns
dec
test
sbb
pop
and
sub
mov
rcrl
pusha
lret
and
mov
xor
jp
leave
leave
sub
xchg
push
das
mov
cli
or
inc
push
sbb
repnz
jmp
xchg
pop
pop
sbbl
rcl
xchg
or
clc
cmp
int
pusha
xor
inc
mov
insb
addr16
xlat
cli
imul
test
aam
jg
icebp
xor
subb
into
in
jns
cld
push
add
inc
push
rol
lahf
outsb
mov
pop
xchg
push
orl
or
xchg
sahf
add
mov
imul
sub
add
xchg
in
lcall
xor
sub
hlt
adc
and
cmp
out
xor
sub
inc
sbb
jb
cld
dec
fwait
int3
mov
test
push
inc
subl
xor
dec
filds
fsub
and
mov
xchg
push
hlt
ret
sub
fwait
mov
lods
xchg
test
cmp
inc
repnz
pushf
adc
push
stc
push
cmp
or
push
mov
mov
inc
mov
mov
rolb
es
movsb
bound
jge
mov
test
inc
xchg
popf
outsb
add
jmp
sub
add
sub
xor
daa
push
in
sbb
xchg
push
mov
add
xchg
andb
xorl
int
cmpsl
push
xor
push
dec
test
mov
dec
and
adc
js
dec
cwtl
test
ja
pop
dec
jnp
push
div
in
cwtl
xchg
mov
pop
xchg
jbe
push
movsl
pop
dec
lret
and
dec
hlt
and
add
out
stc
add
mov
es
cmp
fmull
jbe
dec
mov
jmp
push
ret
sbb
cmp
int3
or
loop
mov
call
popa
xchg
jo
and
sub
mov
mov
sub
ficoms
cli
xchg
imul
pand
inc
sub
js
mov
or
or
insl
xchg
into
xor
and
mov
adc
test
popa
aam
adcb
xchg
daa
sbb
inc
scas
enter
jmp
cmpl
outsb
adc
sub
pop
xorb
leave
scas
adc
leave
cmp
ror
adc
pop
lret
js
cmpsl
jne
xor
push
sbb
shll
hlt
adc
loope
cmp
mov
mov
fs
adc
mov
test
jo
push
sub
aas
cmp
mov
mov
cmpsb
add
xchg
sub
ret
cmp
cmp
pop
enter
fwait
mov
hlt
shl
sbb
inc
fs
and
aad
cmpsl
out
mov
jmp
jnp
dec
jge
lods
xchg
stc
pushl
mov
push
fwait
scas
jne
lock
gs
xor
imul
imul
sub
mov
int
and
mov
sub
cs
cmp
mov
cwtl
mov
fstps
notb
jmp
repnz
sar
adc
xchg
sub
loope
sub
mov
dec
aam
pop
lods
jo
sbb
mov
loope
pusha
fdiv
jg
lock
inc
xchg
cmc
test
cmp
in
in
and
push
leave
and
push
jmp
adc
jge
jb
aas
mov
xchg
push
repnz
movl
cmp
or
out
dec
scas
xchg
cltd
or
mov
mov
sti
out
daa
xchg
mov
je
fs
imul
aaa
mov
pusha
mov
push
cltd
xorb
fdivrl
xchg
xor
or
xchg
mov
cmpsb
push
inc
jae
arpl
xchg
push
addl
mov
inc
repz
adc
and
jae
arpl
xchg
push
addl
mov
inc
repz
adc
and
jae
arpl
xchg
push
addl
mov
inc
repz
bound
xchg
aaa
addb
inc
repz
es
push
jl
sbb
mov
cmp
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ficoms
jl
xor
sub
lahf
dec
jne
test
pop
add
add
add
add
pop
add
pop
add
add
add
repnz
add
add
inc
add
add
add
add
add
insl
add
add
push
add
xor
enter
xor
gs
add
push
fildl
adc
push
add
popf
add
pusha
add
sbb
cwtl
add
add
add
add
popl
filds
inc
add
popa
add
inc
add
dec
add
arpl
inc
add
add
or
add
and
pop
add
add
xor
inc
add
add
pop
add
add
add
pop
add
add
fildl
sbb
mov
xchg
add
add
pop
add
xor
in
inc
add
add
add
mov
add
add
int
jno
flds
roll
faddl
push
add
pop
add
lret
add
add
add
and
add
add
fldl
bound
pop
add
fildl
ja
xchg
add
add
add
push
add
cmp
int
fldl
push
add
add
dec
add
dec
add
add
add
add
fadds
or
add
cmp
add
add
add
add
add
adc
add
push
jecxz
adc
bound
inc
add
add
add
add
add
stos
add
add
pop
add
add
or
add
add
push
fildl
xchg
rolb
add
push
add
add
add
dec
add
add
add
add
pop
add
add
mov
add
add
cltd
add
mov
xchg
add
add
push
add
mov
add
xchg
add
add
add
add
xor
dec
add
cwtl
add
dec
add
add
add
or
add
xchg
add
add
and
or
add
add
add
add
add
add
add
add
add
and
xor
add
push
add
insl
add
add
add
add
add
and
xor
push
add
dec
add
add
add
add
xchg
add
add
jne
repnz
add
add
sub
js
dec
add
push
add
or
add
add
cmp
enter
xor
push
add
add
add
cmp
popa
add
add
add
add
xchg
add
add
add
or
inc
add
dec
add
add
dec
add
add
add
dec
add
add
add
add
add
add
push
add
add
add
pusha
add
add
pop
add
add
add
or
add
add
add
add
jl
cmp
and
ret
add
cmp
cli
add
add
add
add
push
add
mov
add
add
dec
add
add
add
inc
add
pop
add
cmp
add
pop
add
add
sbb
pop
add
add
add
add
add
mov
add
outsb
add
flds
add
and
addl
add
mov
movsl
pop
xchg
adc
outsb
mov
ficoms
adc
or
sub
and
in
int3
push
loop
xor
lods
shr
out
xor
xchg
inc
add
movsb
sarl
dec
jnp
mov
add
nop
outsb
adc
sub
in
xlat
lcall
popf
mov
xor
dec
pop
pop
icebp
and
mov
pop
aaa
scas
les
pop
je
pop
popa
xchg
out
pop
pop
xor
cmpsl
and
pop
addr16
dec
mov
xor
xchg
daa
das
inc
ret
push
mov
sbb
ljmp
mov
aam
call
inc
movsl
out
psrld
fcomp
or
cmpsb
or
fiaddl
dec
loopne
loopne
fisttps
cmp
push
stos
lock
add
scas
jno
sbb
into
jns,pn
ret
pop
outsl
rcll
jmp
rcrb
mov
mov
testb
push
into
cs
outsb
inc
mov
icebp
push
and
and
xchg
push
xchg
lcall
mov
adc
clc
int
add
shrb
lahf
jp
push
add
sub
shl
push
cmp
sahf
push
mov
jl
popa
xchg
mov
inc
push
mov
push
fs
sub
push
mov
cmpsl
or
fwait
dec
mov
cwtl
inc
push
mov
lods
inc
iret
jmp
enter
dec
dec
repz
mov
das
icebp
dec
stos
inc
int3
cmp
cmp
xchg
push
sub
fstps
sbb
scas
mov
in
lock
popf
xor
jle
sbb
inc
and
and
cmpsb
aad
mov
cs
pushf
or
fdivs
in
xchg
scas
mov
xchg
cli
mov
sbb
out
mov
ljmp
cmp
es
cmp
ret
mov
inc
subl
sub
cmpsl
xchg
ss
sbb
xchg
push
xchg
sub
inc
jecxz
stos
bound
bound
test
add
pop
pop
sbb
xchg
xchg
xor
xor
fsubp
xor
jae
nop
push
popa
dec
enter
iret
xchg
pop
push
push
idivl
xor
push
mov
add
call
dec
test
mov
int
insl
jnp
cmpsb
mov
mov
xchg
add
cmpsb
movsl
dec
gs
sarl
lock
pop
test
sbb
cmp
pop
mov
leave
mov
movsb
jbe
dec
lods
cmc
cmpsl
out
lock
lcall
mov
xchg
dec
mov
add
cmp
fstpl
mov
nop
mov
or
iret
out
adc
nop
dec
xchg
in
mov
and
icebp
fsubrs
xchg
les
fisttpl
ss
andl
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
