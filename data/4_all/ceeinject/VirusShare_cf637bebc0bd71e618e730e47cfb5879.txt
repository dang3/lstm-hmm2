call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jmp
jle
outsb
stos
aas
enter
mov
sbb
out
sub
or
cmpsb
jle
outsb
stos
push
mov
add
jp
sub
pop
out
push
cmp
push
clc
or
mov
fiaddl
xor
sbb
ficomps
and
dec
call
test
mov
lret
or
mov
dec
xor
inc
cmp
push
pop
push
lea
pop
xchg
test
cmp
pushf
and
xor
add
rorl
xor
mov
sahf
arpl
sti
testl
lcall
cmp
jb
push
imul
jp
outsb
push
or
mov
into
add
or
rclb
addl
sub
adc
dec
std
stc
cltd
dec
push
pop
push
outsl
hlt
cmp
adc
or
push
push
push
std
jne
scas
das
pop
lea
ret
sub
lret
or
les
or
outsb
dec
push
ret
ds
lods
fsubp
data16
push
bound
sbb
adc
arpl
dec
lcall
pop
aas
lea
push
loope
lret
cmpsl
sbb
add
dec
fistps
iret
sbb
dec
lods
and
push
rcll
arpl
pop
fldl
adc
push
mov
lcall
pop
out
sub
sbb
lret
outsb
stos
push
mov
cs
jp
dec
pop
out
sub
sbb
or
sbb
in
cmp
add
jno
mov
fidivs
sbb
cmp
movl
mov
in
mov
or
mov
jno
or
int
or
mov
jbe
inc
cwtl
int3
jmp
jne
int
lds
mov
and
sub
aaa
adc
xchg
dec
lahf
testl
lahf
notl
inc
ljmp
sbb
ret
packuswb
xchg
pop
lea
mov
jle
mov
mov
scas
mov
stos
shlb
cmp
mov
jecxz
xor
inc
imul
lea
inc
lret
jbe
mov
sbb
fcmove
xor
mov
mov
hlt
std
movl
lret
in
lods
push
lds
mov
xchg
adc
pop
outsl
jle
inc
dec
lods
add
ja
sarb
fwait
jg
cwtl
and
push
xchg
ss
test
mov
in
das
push
std
jne
aaa
sub
mov
in
insl
jp
sub
fldt
dec
in
fldcw
rolb
pop
jbe
pop
mov
sbb
cmpsl
adc
sub
jnp
stos
mov
push
xlat
das
outsb
jle
sbb
je
lcall
jecxz
in
jno
hlt
mov
sub
mov
pop
adc
cld
movsl
push
pushf
loopne
jns
daa
arpl
pop
pop
sbb
add
fdivl
mov
les
popa
sbb
xchg
xor
aaa
or
jg
xchg
lods
xlat
test
xor
iret
stos
stos
in
mov
cmp
jo
jmp
mov
pusha
scas
dec
int3
mov
lock
jle
out
inc
cmp
xor
aad
mov
dec
std
and
mov
push
enter
mov
jb
mov
add
push
mov
ljmp
out
fiadds
cmpsl
mov
pop
jle
dec
lods
dec
movsl
xor
loope
shl
dec
push
sbb
and
sub
mov
push
pop
imul
mov
fs
iret
and
imul
aad
add
cltd
sti
xrelease
sahf
sbb
ljmp
jno
add
out
loope
xchg
jl
ja
inc
adc
cmpsb
cs
push
lgs
movsb
push
icebp
jo
jne
jno
and
mov
jno
add
shrl
cmp
push
jg
mov
cmp
andb
sub
cltd
notl
cwtl
xchg
aam
add
jnp
dec
popa
mov
push
pop
xor
sbb
pop
syscall
and
mov
push
xlat
dec
dec
adc
decl
pop
pop
subb
adc
jle
cmp
inc
add
rcrb
jae
xchg
mov
pusha
test
mov
in
popf
lock
jno
push
out
into
mov
out
inc
xchg
arpl
stos
lret
lds
add
les
pop
jmp
sti
xchg
jns
gs
das
xchg
mov
push
rorl
add
dec
bnd
pop
and
sahf
into
std
outsb
dec
push
sub
cmp
hlt
out
inc
in
jne
sbb
bound
ss
sbb
xchg
jmp
clc
xor
ja
cmp
xchg
push
jl
mov
push
loopne
in
lea
nop
sbbl
sbb
daa
lcall
and
aad
inc
pop
gs
daa
mov
mov
and
or
popf
rcl
cmpsb
inc
movsl
std
sbb
test
and
lret
repz
sbb
daa
test
xchg
jecxz
inc
xchg
jg
xor
inc
test
pop
int3
inc
loopne
jae
pop
cmc
push
push
sub
mov
dec
add
jmp
fdivs
jbe
cmp
pop
outsl
inc
mov
mov
iret
add
test
mov
iret
cmp
pop
aas
xor
inc
mull
outsb
and
add
jle
pop
sti
xchg
cs
pop
mov
pop
ja
loopne
call
in
and
jo
rcrb
mov
daa
xrelease
in
mov
mov
xchg
jle
sbb
mov
mov
lret
mov
lret
stc
lea
and
call
or
xchg
mov
sub
pusha
addb
push
adc
adc
ds
outsl
out
hlt
ja
mov
fadds
adc
and
or
adc
lret
xor
mov
aad
jno
or
orl
addb
out
pop
dec
jb
sub
in
push
sbb
cmpsl
rcrb
inc
add
or
xchg
fwait
mov
in
pop
and
ss
es
lcall
stc
mov
xlat
mov
lea
das
and
mulb
nop
fidivl
std
inc
ret
dec
inc
or
mov
cmpsl
pop
xchg
sub
decb
imul
leave
aaa
adc
jp
pop
adc
sbb
or
xor
sub
lods
pop
dec
fincstp
mov
mov
dec
mov
lcall
push
pop
adc
sbb
mov
mov
sbb
pop
popf
cmc
sub
sub
and
mov
mov
das
and
sub
mov
lret
add
mov
es
repnz
add
xor
or
xor
jb
cmc
sahf
out
js
push
mov
pop
lds
sbb
sbb
mov
mov
mov
xchg
outsl
outsb
aam
mov
dec
sahf
int3
out
fwait
mov
in
push
insl
inc
add
ds
sbb
enter
shrb
fistps
cmp
ljmp
ss
dec
mov
push
fdivl
ja
stos
btr
jge
call
mov
int3
inc
jecxz
dec
mov
adc
pop
jbe
hlt
popf
jb
sub
aas
ficompl
xlat
pop
mov
jbe
pusha
aas
cmp
in
cmp
add
inc
inc
js
stos
jae
hlt
outsb
mov
xchg
pop
int3
push
xchg
xchg
mov
jecxz
std
test
test
xchg
mov
pop
and
lret
xchg
arpl
int3
mov
jb
popl
add
xchg
pop
popa
mov
pop
test
ds
icebp
out
in
sub
in
pop
sub
and
lods
fwait
cmp
sub
out
mov
loopne
mov
das
jae
inc
clc
mov
into
push
into
sub
mov
insb
insl
push
xchg
imul
pop
cs
jle
test
jmp
scas
push
test
inc
ljmp
iret
lahf
iret
lods
inc
push
fnstenv
sbb
fisttps
aam
xor
pop
mov
lret
dec
push
sbb
stos
push
mov
sub
xchg
jl
gs
in
mov
sbb
loopne
mov
cli
shl
ret
sarl
imulb
movsl
pushf
mov
cmpsb
push
xchg
test
add
and
mov
cltd
imul
cmpsb
shrl
fwait
add
mov
jb
orb
pop
push
xchg
fmull
fs
js
cmp
ljmp
data16
push
jne
mov
add
jno
push
repnz
mov
pop
fimuls
lcall
dec
test
aad
dec
js
aam
mov
xchg
jg
push
sub
cmp
cli
xchg
loope
or
xchg
pop
jnp
in
imul
test
leave
xor
mov
popa
inc
pop
dec
push
push
dec
into
loopne
and
roll
imul
mov
mov
insb
daa
sbb
test
mov
push
jno
lret
lea
dec
lds
cmc
das
adc
dec
or
inc
inc
subb
mov
push
xor
pop
jg
out
es
testl
cs
xor
out
sub
mov
test
arpl
ret
inc
mov
loopne
xor
icebp
mov
adc
insb
push
aaa
clc
ror
mov
loope
mov
repz
add
xchg
inc
pop
into
sub
mov
stc
xor
cld
lahf
lea
add
xchg
xchg
jno
cs
sub
mov
sarb
ja
push
dec
add
cli
push
xlat
push
push
dec
add
loope
pop
add
sub
out
adc
adc
sub
in
out
inc
push
push
mov
lods
or
inc
sub
adc
cmp
dec
cmp
flds
xchg
inc
inc
cmp
jo
call
jmp
pop
nop
clc
and
movsb
inc
dec
mov
inc
shlb
das
jge
fcomi
pop
push
pop
iret
jmp
xchg
hlt
outsb
mov
fcomp
inc
add
mov
xchg
dec
repnz
add
repz
inc
fistps
jmp
pop
repz
fdivrl
mov
movb
pushf
jmp
fsubrs
sub
cmpsb
je
mov
ljmp
int3
xor
jle
out
movsb
dec
mov
out
xchg
insl
sbb
cltd
sbb
cld
icebp
and
icebp
jge
xor
mov
iret
xor
dec
xlat
les
and
out
xor
dec
jno
jae
icebp
mov
push
test
adc
push
mov
das
dec
popf
movsb
dec
mov
loopne
inc
sbbl
inc
sbb
sbbb
add
mov
add
or
hlt
lcall
xchg
mov
sbb
sbb
sbb
sub
mov
out
mov
mov
sti
cmp
leave
add
nop
das
shlb
add
xchg
adc
imul
push
loopne
push
push
cmc
cwtl
sahf
in
fdivrs
sub
lahf
dec
sub
gs
fimuls
mov
imul
and
lods
scas
sub
ret
dec
imul
cmp
test
aad
stos
jns
and
dec
in
mov
sbb
das
cmpsl
sarb
shrl
les
addr16
dec
out
push
add
dec
jge
dec
lods
cmp
scas
icebp
adc
pop
popf
xchg
pop
imul
les
fldl
loop
xor
loop
pop
adc
adc
cli
stc
and
sti
loope
mov
xlat
out
call
pop
ljmp
inc
test
pop
jne
dec
cmp
inc
cs
gs
xchg
daa
aam
in
push
es
sub
pop
addr16
add
lods
std
aad
pusha
jns
mov
push
xor
outsl
stos
sbb
push
cmp
add
cli
jl
sbb
adc
xchg
arpl
test
das
xor
sbb
or
sub
adc
or
jno
js
xlat
negl
jmp
cmp
mov
addr16
push
dec
pop
outsl
jmp
mov
jecxz
cwtl
call
paddusw
jp
shrl
adc
bnd
xchg
mov
xchg
mov
adc
sbb
lret
not
dec
insb
ljmp
sbb
outsl
sbb
test
or
sub
dec
or
xchg
and
xlat
fmulp
cmpl
popf
lret
in
jns
fcmovnbe
and
stos
popf
popf
ret
xor
out
lcall
jmp
lea
stos
push
repz
in
push
push
jnp
xlat
jbe
lds
dec
mov
xchg
cmp
pop
lods
xor
notl
out
xchg
mov
jne
xchg
insl
inc
scas
push
shrl
gs
sbb
mov
aaa
lds
jg
cmp
add
in
or
js
shll
das
pushl
jnp
or
mov
inc
sar
ss
aaa
dec
inc
add
aas
add
aaa
rdmsr
aad
inc
pop
xor
outsb
pop
xor
mov
pop
cltd
mov
in
nop
pop
jbe
out
out
xor
ret
in
cmp
test
xlat
push
pop
fisttpl
dec
loopne
mov
xchg
orl
addr16
mov
dec
repz
xchg
and
jo
scas
data16
lahf
insl
ljmp
rorb
popf
fwait
cmpsb
mov
fldt
call
dec
fnstsw
insl
xorb
ss
sbb
int3
ret
jmp
clc
mov
push
jns
push
shrw
ja
fmul
push
mov
sar
xchg
in
lods
insl
loop
std
fadds
jns
jge
bound
pusha
ds
repz
fsubrs
push
sar
sub
dec
sub
loope
and
filds
iret
adc
movsl
add
mov
mov
mov
daa
jb
xchg
int
and
push
dec
push
ret
adc
and
and
fwait
scas
mov
test
sub
stos
sbb
xchg
dec
xchg
adc
jb
pop
or
mov
xchg
sti
push
dec
sub
and
test
xchg
in
addr16
xlat
cld
dec
iret
loope
lahf
cmp
cmc
cld
rcll
cmpsl
sbb
sbb
push
lahf
add
dec
dec
cltd
pop
dec
mov
adc
mov
mov
sub
fmull
adc
outsl
test
nop
movsl
addr16
push
pusha
mov
sub
out
int
fdivrs
pop
mov
inc
jne
rorb
sub
fimuls
and
adc
push
cmc
mov
fidivrs
mov
subb
add
je
sbb
das
xchg
mov
dec
mov
repnz
stc
mov
jecxz
xor
mov
push
sbb
xorb
sbb
jmp
test
dec
iret
lods
xchg
sub
fsubr
push
data16
mov
rolb
jecxz
imul
push
adc
in
fldcw
mov
sbbl
inc
pop
pop
daa
dec
shrb
add
pop
cmp
pop
push
testb
or
pop
outsb
fldt
fwait
cmp
daa
stc
data16
movsl
pusha
mov
sbb
sub
jae
jb
call
and
add
push
sbb
idivb
das
cmp
sbb
in
bound
mov
test
clc
xor
push
push
jle
sub
or
scas
xor
jge
movsb
inc
dec
pop
in
lods
enter
in
sub
dec
sbb
arpl
shll
clc
ljmp
sub
ds
adc
popa
cmp
std
sub
mov
lods
les
lods
addr16
and
sbb
mov
out
jne
test
out
leave
pop
mov
sbb
pop
xchg
rolb
add
pop
ss
cld
rol
shlb
rorb
xlat
xchg
adc
adc
mov
or
loopne
pop
out
inc
add
sti
movsb
roll
cmp
popa
push
jl
jl
or
loope
mov
arpl
roll
jae
shll
lret
cmc
aaa
cmpsl
jg
push
pusha
add
mov
add
sub
xorb
xchg
xor
push
mov
dec
mov
push
jmp
or
jno
test
sub
das
pop
andb
inc
mov
ds
divb
cvtdq2ps
adc
adc
push
imul
dec
and
mov
push
cmp
lods
xor
js
cltd
fldl
jnp
out
cmp
repz
xchg
lods
or
sar
sti
mov
push
lea
hlt
jmp
loop
push
sub
pop
lret
lcall
jmp
cmpsb
xchg
icebp
mov
push
movsb
and
scas
sub
out
icebp
les
mov
addr16
push
mov
and
cltd
lds
fisubs
inc
push
dec
test
int3
xchg
outsl
or
stos
fsubs
dec
sbb
incl
inc
or
pop
lea
mov
jle
inc
mov
and
jge
sub
fsqrt
clc
les
scas
xchg
shll
xchg
pop
xor
mov
adc
inc
into
fbstp
sbb
push
leave
cmp
rcrl
adc
or
sub
dec
rcll
scas
outsb
or
jb
jno
inc
pop
mov
push
test
mov
mov
movsb
mov
aaa
and
and
pop
inc
stos
clc
jl
int
jnp
xchg
call
lds
test
push
add
lods
ret
jecxz
add
jo
ss
dec
movsb
inc
cmc
cmc
lods
mov
fbld
mov
push
loope
pop
movups
add
rol
sahf
fcmove
out
mov
or
aad
jecxz
mov
int
das
jmp
popa
mov
iret
addr16
sahf
addb
xchg
pop
mov
ljmp
popf
mov
mov
dec
movsb
push
mov
enter
int3
insb
push
out
jle
xor
jmp
test
jmp
fisttps
push
loop
imul
pop
movntq
out
add
xchg
xor
push
dec
pop
ficoml
sbb
sub
and
hlt
mov
movsb
xor
xchg
jle
pop
lret
sbb
xor
outsl
fbstp
aaa
push
jbe
pop
cs
idivl
xchg
ret
mov
out
lods
pop
push
sti
leave
shlb
adc
movsl
repz
add
into
push
push
and
in
cmpsl
aam
sub
sahf
popa
jecxz
loop
lea
cmp
dec
repz
ss
mov
mov
adc
mov
test
out
push
push
push
clc
mov
jno
std
shll
test
mov
leave
mov
inc
fidivrs
fnstenv
vpminsw
dec
repnz
xchg
xor
divb
mov
xor
jp
mov
mov
jmp
sbb
jo
dec
add
jns
xchg
cmp
out
fidivs
add
mov
divb
pop
daa
ja
add
lret
mov
scas
jbe
adc
lahf
cmp
adc
les
test
cmpsl
out
xor
mov
test
mov
lock
ror
jno
rclb
je
add
inc
in
stos
cmp
mov
mov
mov
jbe
ds
data16
lods
mov
test
dec
fdivs
mov
xchg
inc
sbb
idivl
sub
repz
aaa
mov
jns
mov
pop
jge
pop
xor
fmul
push
test
dec
xor
jne
mov
cmovbe
dec
arpl
or
xor
adc
fsubrs
out
pop
cli
adc
sub
out
mov
data16
adc
shl
jmp
push
sub
push
mov
notl
mov
sub
and
mov
imul
mov
jb
or
mov
sbb
outsb
jle
out
je
addr16
pop
mov
flds
imul
mov
xchg
pop
mov
jb
or
arpl
imul
lcall
sbb
ss
lret
mov
stos
xchg
mov
scas
cltd
mov
pop
xor
imul
push
pusha
pop
adc
or
jno
mov
push
jns
scas
push
mov
dec
aas
add
divb
adc
mov
flds
cmpsb
push
jp
lret
ret
mov
cmp
inc
pop
and
aad
xlat
pop
out
inc
test
pushf
arpl
sub
sbb
shl
add
nop
pop
sub
test
jmp
push
adc
or
fnstcw
scas
icebp
stos
aas
in
lcall
mov
daa
andl
addb
orb
aaa
fwait
sub
mov
pop
mov
inc
jecxz
mov
push
sub
sti
les
cmc
jecxz
and
dec
and
loopne
sbb
in
addl
and
lods
sub
lahf
test
int3
pop
xchg
sbb
rorl
call
inc
inc
clc
fdivrp
adc
movsb
shrb
clc
lods
out
hlt
pop
push
cli
dec
cs
call
adc
repz
jl
push
movsl
inc
jp
cs
xor
xor
fwait
in
cltd
aam
fisttpl
insb
subb
test
mov
push
jg
mov
sbb
pop
lods
dec
iret
mov
fistpl
repnz
dec
xchg
push
stc
add
xor
cmp
ljmp
pop
pop
or
and
sbb
dec
lea
sub
jg
cld
add
xor
push
and
and
sub
es
mov
scas
sbb
adc
cmc
jns
push
jl
add
ret
cmp
ja
scas
insb
and
lds
lods
push
ds
adc
sub
mov
stos
fs
imul
pop
mov
xchg
test
lcall
loopne
and
int
jnp
dec
sbb
mov
sti
dec
or
insl
das
xchg
add
push
call
adc
jo
xor
jne
jge
xlat
imul
add
jbe
daa
inc
adc
sarb
push
lcall
or
into
jecxz
add
mov
jae
cmp
lea
add
test
mov
iret
stos
enter
mov
icebp
pavgw
pop
int3
movsl
dec
mov
cld
or
in
inc
vmovss
push
stos
test
or
inc
jmp
pop
cmc
sahf
inc
inc
lock
mov
lea
outsb
stos
push
mov
cs
jp
dec
pop
out
sub
sbb
lret
outsb
stos
push
mov
cs
jp
dec
pop
out
sub
sbb
stos
data16
push
mov
cs
jp
mov
lcall
mov
cli
cs
push
stos
push
mov
test
pop
cltd
pop
out
div
in
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
pushf
add
andb
cmp
dec
insb
pop
rep
dec
jl
mov
pushf
int3
in
fsubr
in
int3
cld
test
and
sub
cmp
mov
pop
jle
dec
jl
mov
mov
in
aam
or
aas
pop
inc
jne
imul
xor
loopne
int3
lods
jmp
push
cmp
insl
not
jno
or
pop
or
and
lock
xor
and
rcrl
jecxz
or
and
mov
xchg
xlat
stos
mov
test
orl
cld
jecxz
leave
and
or
mov
pushf
inc
jae
iret
jmp
leave
in
imul
push
xchg
mov
sbb
out
mov
dec
jae
jl
dec
jae
call
outsl
les
ret
test
outsb
mov
fnstenv
arpl
outsl
je
push
push
cs
popa
int
mov
in
push
shl
adc
sbb
rcrl
mov
mov
cld
in
int3
cld
lds
sbb
sub
cmp
dec
je
fs
push
jl
int
call
stc
int3
out
scas
popf
mov
jns
sub
inc
jns
or
and
xor
vpmullw
call
repz
in
cltd
mov
mov
dec
pop
imul
add
or
jmp
call
fdivr
in
int3
cld
fmull
sbb
sub
cmp
dec
insb
pop
jl
dec
jl
mov
pushf
int3
in
fdivr
in
int3
cld
fmull
sbb
sub
cmp
dec
insb
pop
jl
dec
jl
mov
sahf
xor
bound
add
ret
jnp
sub
dec
enter
mov
jge
jnp
mov
int
ret
lods
add
pop
and
adc
push
andl
shr
mov
mulps
sub
add
xor
aas
pop
mov
push
je
sub
cmp
insb
sub
pop
mov
pop
les
das
cs
xchg
cmp
xchg
cmp
jmp
cltd
mov
mov
or
push
dec
dec
pusha
mov
dec
ljmp
out
daa
outsb
sbb
xchg
mov
inc
inc
mov
xor
dec
iret
repz
sbb
push
insb
fwait
cltd
fisubs
cmpsb
push
aas
add
jno
lret
ret
sub
stc
sti
mov
sub
fwait
gs
aaa
ret
aad
mov
adcb
inc
add
add
pop
mov
mov
fwait
shl
insb
push
and
gs
jae
daa
and
xor
cltd
shrl
gs
push
fisttpl
leave
insb
aam
lcall
repz
fucomip
jns
nop
push
sbbb
adc
and
xlat
mov
jp
xor
out
shlb
scas
pop
pushf
mov
cmc
outsl
push
loope
stos
and
or
sbb
mov
dec
pop
or
out
mov
adc
fsubrl
push
lret
leave
jle
lret
inc
dec
sbb
dec
pop
mov
test
cmpsl
cmp
mov
dec
fdivrl
notb
in
sub
cmpsl
ficoml
inc
imul
fldt
jp
push
cmpsb
bound
adc
cmpsl
sub
popa
xorl
lds
testb
push
inc
mov
stos
insb
int
add
dec
call
testl
push
idivl
adcb
js
inc
mov
cmc
pop
sti
orb
sbb
ret
in
cmpsl
cmp
push
xor
fsts
adc
lcall
push
in
pusha
sbbl
popa
jbe
dec
pushf
mov
and
addb
and
out
mov
loop
ljmp
mov
and
test
movzwl
xchg
sub
test
lea
and
in
mov
mov
and
dec
jne
mov
inc
iret
mov
outsb
insb
xor
test
scas
leave
cmp
imul
mov
cmc
pop
imul
inc
icebp
clc
pop
pop
clc
popf
rcrb
addr16
mov
js
mov
inc
xchg
lcall
push
xchg
xchg
dec
movsb
loop
push
dec
mov
jns
cmp
dec
rcrb
and
sbbb
inc
mov
inc
xor
adc
inc
mov
icebp
mov
mov
pop
xlat
or
cld
and
and
inc
imul
loopne
push
testl
stos
int3
pop
or
loopne
aaa
mov
in
xchg
lahf
mov
int
popf
outsb
test
rcrl
xchg
add
jp
adc
adc
add
das
and
inc
popf
pop
and
or
cmp
mov
add
in
sub
cmc
push
stc
mov
cmp
push
jmp
xchg
popa
pop
xchg
loopne
ficomps
and
xchg
jg
imul
fwait
sbb
iret
jb
lods
mov
pop
xchg
lret
cwtl
popa
test
jb
movl
xor
mov
xor
cmp
or
xlat
bound
jnp
jns
movsl
sbb
sub
or
inc
pop
pop
and
sub
xor
outsb
in
mov
xor
pop
mov
loopne
ja
imul
jle
les
loopne
cmp
jo
ja
sub
test
loopne
das
add
insl
push
jne
or
enter
mov
dec
pop
jo
jno
out
dec
into
jnp
mov
dec
and
xlat
mov
rcl
mov
adc
dec
cmp
rclb
das
adc
adc
mov
fisttpll
notb
sub
and
xor
in
lock
test
bound
cmp
push
sahf
mov
sub
inc
jle
and
aam
frstor
mov
push
xchg
ret
add
jg
inc
push
mov
rolb
sub
sub
push
xor
mov
adc
aad
aam
and
xchg
pushl
aaa
mov
ljmpw
das
outsb
mov
and
jnp
pushf
xchg
inc
insb
mov
leave
sbb
or
loope
aaa
dec
pusha
movsb
push
scas
inc
add
int3
imul
add
inc
dec
je
outsb
mov
cmc
xor
jle
xchg
jg
fs
aam
test
mov
fisttpl
subl
iret
pop
mov
cmpl
or
lcall
mov
and
pushf
inc
and
addb
lret
scas
push
cld
ffree
mov
stos
cmp
jns
nop
cs
scas
add
lahf
xchg
xlat
ds
outsl
hlt
es
pop
xor
fdivrl
jp
int
add
inc
and
inc
fildl
idivb
stc
add
lret
mov
adc
and
mov
cltd
das
insb
adc
jge
cld
pop
movsb
add
hlt
ficompl
jno
test
fistpl
cmp
pushf
jge
fnstenv
jp
cmp
scas
cmp
ds
or
sbb
call
sub
iret
cmp
jle
xrelease
ficoml
pushf
cmpsl
jb
into
cli
jmp
movsb
pop
mov
jecxz
ljmp
rclb
cld
out
push
cmpsb
loope
xor
iret
cmp
in
pop
out
jno
dec
jmp
or
mov
lcall
out
repz
test
jae
push
mov
push
push
jae
in
sub
sub
adc
out
arpl
sbb
jb
xor
leave
jl
mov
jg
lret
push
vmwrite
and
jmp
sahf
mov
out
and
jge
aaa
mov
and
or
jae
sub
adc
mov
sbb
jnp
add
sub
cmpsl
xchg
mov
lcall
sub
mov
dec
push
adc
dec
loope
or
inc
xor
xor
adc
rcrl
sub
aad
testb
fldenv
sbb
popa
ljmp
pop
and
mov
hlt
in
adc
mov
aas
daa
jge
imul
inc
popl
push
xchg
sarl
inc
or
add
add
aad
insb
cmp
or
add
inc
dec
sbb
inc
ljmp
push
add
pop
adc
dec
cld
push
hlt
push
push
in
addr16
sbb
and
add
in
mov
ficoms
pop
add
iret
jmp
rcr
aad
mov
inc
ds
jns
or
aad
or
mov
int
sbb
cmp
mov
ud0
ret
mov
xlat
lods
sarb
in
enter
das
dec
fisubl
mov
jmp
cmc
xlat
aad
jno
mov
push
push
push
sub
add
test
add
sahf
ss
sti
fcmovbe
push
fldt
push
xchg
mov
cmp
cmpsl
jl
mov
mov
adc
loop
jns
jl
or
ja
inc
jmp
sub
xchg
sbb
out
fnstcw
mov
inc
arpl
ljmp
push
push
je
lret
fisubs
inc
aaa
cmpl
jnp
das
dec
and
gs
mov
mov
rclb
or
cld
mov
jp
scas
out
dec
push
sbb
jecxz
push
xor
xchg
pop
outsl
cltd
daa
in
pushf
popa
dec
xor
sub
adc
addb
pusha
dec
lahf
and
fidivrl
in
push
cmpsb
cltd
pop
push
push
pushf
dec
cmp
cltd
pop
sti
outsl
data16
sti
outsb
std
sbb
stc
and
ds
xchg
bnd
xor
aam
push
jecxz
cmp
xchg
jns
inc
push
adc
sar
fbld
sarl
lock
in
add
push
push
and
jle,pn
ret
lcall
int3
fisubs
dec
mov
and
jo
ror
lods
cmpsl
in
mov
lods
pushf
xor
sbb
loope
jmp
mov
in
ljmp
popf
adc
xchg
inc
jns
sub
xlat
aam
inc
adc
dec
stos
call
lret
sbb
xlat
mov
pop
loopne
stc
inc
scas
outsl
xchg
test
pusha
xchg
cmc
cmpsb
mov
cmpsl
push
dec
xchg
inc
int
shll
mov
mov
ljmp
adc
xchg
push
jecxz
dec
cmp
shll
repz
adc
jnp
rcr
lods
int
jecxz
and
pop
int
push
push
or
xor
xlat
sub
or
pop
mov
mov
clc
cmp
inc
fs
jge
add
scas
cmp
xor
xor
mov
lcall
call
xor
inc
and
cmp
int
fdivs
cmp
loopne
mov
mov
outsl
cmp
movsb
xchg
pushf
insb
jmp
pop
xchg
pop
and
jmp
sbb
dec
push
inc
hlt
mov
or
pop
iret
jmp
mov
and
pop
sbb
push
scas
jl
cli
sbb
arpl
pushf
rcrl
stc
push
push
or
cmp
movsl
dec
pop
sbb
inc
inc
jno
and
xchg
sub
cmc
or
lret
sub
inc
mov
mov
scas
xor
pop
pop
inc
filds
push
cmp
inc
and
xchg
fs
stos
dec
xor
outsb
data16
xlat
jns
inc
mov
cli
push
ss
push
mov
imul
enter
sbb
sbb
dec
popa
mov
mov
inc
cmpsl
jecxz
sbb
xchg
adc
out
in
or
and
subl
iret
xchg
xchg
rol
test
mov
or
jae
in
mov
push
ja
mov
std
push
pop
or
movb
in
sub
xchg
mov
inc
aaa
les
add
mov
arpl
fstpl
jge
mov
xor
add
lret
mov
dec
sub
mov
push
into
nop
sub
enter
aad
pop
jne
push
mov
mov
mov
mov
gs
mov
and
icebp
loop
push
mov
in
sub
loope
hlt
movaps
sub
pop
jge
mov
rorl
cmpsb
jns
cmp
idiv
dec
into
inc
adc
inc
adc
sub
lds
pop
xchg
jp
mov
leave
aaa
mov
and
add
push
pop
ret
js
xchg
and
fidivrs
xchg
sbb
xchg
xchg
enter
std
lahf
fsts
sub
sahf
shl
aaa
das
mov
cwtl
add
popf
shl
add
ret
sbbb
mov
lahf
sub
scas
mov
push
ds
je
scas
lds
add
sbb
inc
shrl
sub
mov
lret
add
sbb
adc
fstpt
movsl
jmp
fsubrs
das
fbstp
testb
scas
push
adc
mov
mov
test
jbe
lds
lods
daa
mov
xchg
lahf
push
mov
andb
iret
shrb
add
fs
repnz
jb
jns
push
xor
mulb
and
sbb
lods
push
push
inc
sub
dec
add
mov
addb
lods
mov
adc
add
out
fidivrl
ficoms
fs
aaa
ljmp
movhps
mov
xchg
test
mov
and
pop
loop
add
and
add
call
mov
xchg
fstpt
xor
adc
lock
aaa
mov
mov
dec
pop
adc
jmp
mov
ja
or
cmovne
adc
insl
sbb
mov
push
test
inc
jg
in
sub
mov
jecxz
cmp
mov
add
or
or
insb
add
test
movsl
push
in
aaa
sub
jg
lret
inc
rorb
cmpsl
sub
lahf
outsb
rorl
sarl
ret
adc
jo
scas
sub
inc
je
imul
mov
mov
dec
push
sar
adc
fdivl
or
cmp
cmp
adcb
fwait
mov
jge
dec
imul
jmp
scas
cmp
sti
cs
sti
jb
stos
push
xchg
add
jecxz
bound
inc
mov
testb
xor
dec
xor
arpl
sub
pop
je
add
sub
xchg
inc
lret
cmp
mov
loop
dec
rorl
xchg
xchg
and
cmc
mov
dec
mov
pushf
movsb
rorb
sbb
and
sbb
leave
mov
cmp
das
lock
jge
jb
fnstenv
fsubrl
loopne
push
sarl
or
andl
mov
bound
nop
sbb
hlt
out
sbb
rcl
push
pop
mov
mov
mov
lods
clc
sub
jne
pop
xor
jb
sbb
pop
pop
mov
pop
jne
push
out
insb
test
loopne
jbe
outsb
xchg
sub
dec
aaa
subl
xorb
lret
lret
in
adc
xor
push
addr16
lahf
in
arpl
repnz
push
fs
arpl
in
pop
push
js
and
mov
jle
mov
cwtl
mov
sbb
jmp
cs
movsb
jo
ljmp
cmp
add
inc
mov
sbb
or
sub
in
jb
cmp
xlat
mov
ljmp
test
sbb
shll
mov
testb
aaa
jo
push
jg
cmp
int3
sbbb
sbb
dec
cmp
loopne
sbb
pop
and
int3
inc
add
rep
xchg
jne
mov
jg
and
addl
mov
jge
aam
mov
push
xlat
push
pop
mov
pop
hlt
xor
out
mov
dec
rolb
addr16
add
repz
or
mov
arpl
dec
push
aam
aad
mov
out
aas
dec
adcl
add
cmpsl
sarl
mov
push
mov
jae
lds
jp
rcrb
mov
or
movsl
xchg
test
inc
out
dec
mov
xor
adc
push
sahf
notb
fdivrl
sti
popa
cs
sub
sbb
adc
mov
sub
in
movsb
sahf
movsl
cwtl
movsl
jne
inc
jg
add
xchg
fimull
xlat
cmpb
je
jae
js
add
aaa
xchg
mov
push
inc
xchg
jae
cs
cmc
ret
mov
adc
and
inc
out
rcr
push
mov
sahf
in
jne
shll
arpl
mov
mov
and
add
movsb
rcl
pop
fmul
mov
popf
aaa
adc
push
jl
adc
push
xor
in
imul
and
mov
push
pop
gs
mov
insb
in
pop
jae
sti
mov
sub
fwait
movsl
jle
push
push
sub
fwait
hlt
fwait
sub
adc
pop
stos
jb
test
push
sbb
push
fs
or
pop
in
push
imul
mov
xchg
push
push
insl
mov
setge
test
lods
push
jb
mov
xor
ficomps
cmp
dec
jp
and
pop
xchg
gs
jb
sbb
sub
in
inc
fistps
mov
jecxz
hlt
sub
adc
fsubrl
mov
cwtl
daa
and
and
dec
cs
adc
fimull
xchg
repnz
jns
mov
addb
out
aaa
shrd
dec
mov
push
and
adc
pop
or
cmp
xor
xor
jmp
inc
mov
xchg
push
jg
xor
push
mov
out
mull
cmp
lahf
jge
mov
es
mov
movsb
ss
fisttpll
nop
loopne
mov
popaw
sti
mov
xorb
sbb
push
xor
sbb
mov
jnp
and
pushf
sarb
pop
enter
dec
es
pusha
movsl
xchg
mov
sahf
add
adc
enter
fistl
or
int
test
and
pop
xchg
into
scas
jb
mov
xchg
push
sub
add
sub
popa
dec
dec
mov
xchg
pop
imul
push
xor
fmul
mov
mov
xchg
mov
lcall
mov
dec
lcall
dec
xor
cmp
add
pop
mov
inc
xchg
repz
shrb
in
pop
jl
inc
inc
int3
push
pop
pop
ljmp
sub
fstl
sub
add
aad
insb
mov
cmpb
jno
push
test
outsl
leave
lret
sub
and
cmpsl
jae
adc
sti
mov
in
andb
inc
push
mov
mov
lea
or
xchg
push
out
xor
jb
repz
mov
aam
stos
mov
xchg
or
test
cmp
stc
mov
add
jo
ss
es
imul
dec
xor
xor
fistl
call
mov
std
mov
push
push
cmpsb
inc
lcall
mov
lcall
xchg
inc
add
mov
popf
icebp
popa
les
xchg
popa
mov
pop
repz
sbb
pop
xchg
jge
movl
xlat
mov
xlat
out
subl
mov
xor
or
mov
adc
mov
fldt
cmp
mov
cld
lahf
movl
sbbb
call
jl
jecxz
pop
les
icebp
insb
fidivrl
inc
lods
mov
fiaddl
movsl
inc
cli
mov
into
mov
mov
xchg
cmp
pop
push
xchg
jns
sub
ret
das
add
out
pop
jo
dec
repz
clc
in
pop
ret
push
nop
std
aas
ja
les
mov
scas
shlb
insb
push
stos
std
popf
loope
dec
pop
into
xchg
cmp
loop
mov
xchg
hlt
lods
inc
xchg
push
jo
cmpsl
and
divl
in
cmp
push
adc
cld
lahf
out
add
xor
and
mov
inc
push
push
sub
sub
pushf
ficomps
mov
cwtl
adc
xor
cmp
inc
xor
adc
sahf
xchg
mov
pop
adc
in
mov
insb
jge
push
ret
rcll
push
pop
cmp
movsb
sbb
push
mov
icebp
clc
xchg
cmp
pop
and
pop
adc
or
dec
sbb
adc
cld
fucomp
and
repz
rorl
push
mov
paddusw
in
and
insb
inc
lret
mov
out
gs
insl
lock
xor
xor
cmp
das
inc
pop
icebp
lcall
aam
xor
sti
fldcw
or
mov
inc
sub
hlt
add
jl
fildl
mov
jo
and
push
dec
cltd
cmp
sbb
in
int3
in
mov
jecxz
and
loop
and
push
ljmp
jg
cmc
push
push
insb
cwtd
jge
sbb
mov
fwait
sub
jecxz
inc
jo
inc
mov
pop
mov
stc
nop
imul
pop
pop
add
cmpb
in
outsl
stc
sbb
std
dec
mov
lods
out
addl
mov
jmp
cmc
adc
adc
adc
mov
pop
aad
xchg
outsb
scas
ja
mov
movsb
push
std
fwait
jb
sub
iret
pop
cs
idiv
lcall
sbb
pop
stos
fmuls
nop
dec
lock
lds
pushf
repnz
jmp
or
xchg
add
fdiv
cmc
xchg
test
dec
leave
cmpsb
add
pop
push
cwtl
sbb
lea
pop
popa
std
inc
pop
sbb
cmp
inc
sbb
jle
xlat
cmp
repnz
in
sbb
clc
lods
mov
adc
cld
stc
jo
aas
popa
and
imul
cmp
mov
nop
xchg
es
dec
sub
pop
add
inc
test
jmp
lock
stos
ror
adc
sbb
and
scas
hlt
repnz
fisttpll
jae
cmpsb
or
pop
jae
jmp
shlb
inc
cmpsl
sbb
mov
xchg
lahf
popa
divl
test
and
loope
push
cmp
ss
mov
xor
leave
pop
dec
cmp
sti
jp
in
test
and
add
sbbb
sbbb
sub
and
cli
push
insl
inc
sbb
loopne
cld
nop
mov
lea
or
mov
ja
iret
test
pop
jmp
fldl
adc
daa
shrb
fdivs
data16
pop
and
test
mov
fnstenv
cltd
push
lret
push
enter
je
lods
mov
in
int3
cld
fmull
sbb
sub
cmp
dec
insb
pop
jl
dec
jl
mov
pushf
int3
in
fdivr
in
int3
cld
fmull
sbb
sub
cmp
dec
insb
pop
jl
dec
jl
mov
pushf
dec
in
fdivr
in
int3
jl
or
sbb
sub
cmp
dec
insb
pop
jl
dec
jl
mov
mov
cld
in
int3
cld
sbb
sub
xchg
xchg
imul
add
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
incl
jo
pusha
iret
push
mov
inc
rol
shlb
loopne
nop
subb
push
movmskps
inc
out
jo
pusha
iret
adc
and
sarb
outsl
test
dec
nop
pop
subb
pop
mov
out
jo
pusha
iret
adc
and
cmpl
and
jns
jae
jp
js
mov
lahf
add
inc
mov
cld
sbb
sbb
loopne
cld
incl
scas
test
cmp
add
jge
gs
outsl
das
xchg
je
cmpsl
pop
pop
test
lret
das
mov
repnz
inc
into
dec
sarb
outsb
mulps
adc
xchg
pusha
ret
adc
lret
adc
dec
outsl
rolb
lret
call
imul
xor
sbb
pop
ret
or
into
and
loopne
imul
ja
out
scas
cmpsb
js
aaa
popa
add
lock
stos
push
cmpb
or
movsl
mov
cmpl
incl
jo
pusha
iret
adc
and
lock
loopne
nop
aas
subb
pop
mov
xchg
adc
clc
dec
fistl
popa
sti
xchg
pinsrw
mov
cmc
dec
jmp
push
xchg
xor
push
cld
insb
ljmp
ret
cmp
mov
cmp
popa
mov
lea
scas
xor
shrb
loopne
nop
aas
subb
pop
mov
out
jo
pusha
iret
adc
and
lock
loopne
nop
aas
subb
pop
mov
lret
mov
or
dec
lods
sub
enter
outsl
mov
bound
xor
cmp
ja
jnp
dec
idivl
adcl
xor
inc
jb
xchg
sbb
cmp
cmp
mov
dec
lea
adc
arpl
sbb
or
out
or
mov
pushf
ret
mov
shll
add
and
adc
je
mov
negl
and
mov
add
scas
xchg
jecxz
adc
cmp
add
mov
outsb
inc
mov
shll
frstor
ficoml
pop
xchg
clc
xchg
out
add
xchg
mov
pusha
aad
inc
lret
out
idivb
into
incl
pop
push
test
in
fistps
int3
mov
cmp
sbb
mov
pusha
mov
cmp
sbb
scas
jle
push
push
add
xchg
xlat
xlat
mov
imul
and
cmp
or
or
sbb
sub
jp
sbb
jg
xor
sub
movsl
sbb
data16
and
and
int
shl
xchg
pop
mov
xor
xchg
dec
stos
pop
inc
pop
cmpsl
lock
xchg
je
clc
in
and
emms
mov
add
adc
inc
inc
sub
xchg
gs
xor
fisttpll
or
mov
push
mov
mov
icebp
xchg
cmpsl
ja
push
hlt
inc
addr16
dec
dec
mov
cmpsl
push
in
fwait
out
or
sbb
pop
push
jb
mov
mov
fwait
push
xor
mov
sub
aaa
rorl
xor
mov
mov
sub
jae
xchg
clc
mov
cmp
or
sti
negl
push
popf
and
ss
push
ret
xchg
inc
adc
pop
mov
imul
dec
sub
into
xchg
je
sbb
in
mov
mov
shll
out
and
gs
adc
cmp
mov
pop
jne
jg
push
jp
out
cs
jb
gs
in
push
dec
jno
mov
adc
cs
or
push
push
push
aas
push
pop
loope
lret
pop
std
out
push
daa
push
pop
in
adc
xor
adc
test
or
orl
push
adc
push
sub
fs
test
aam
xor
movsl
maskmovq
imull
and
fwait
scas
adc
mov
mov
cwtl
jns
dec
mov
fwait
decl
ljmp
hlt
cltd
sbb
movsb
inc
xchg
pop
sbb
cmp
cmp
mov
xchg
lods
dec
dec
popf
out
pushf
fwait
lret
leave
cli
push
mov
movsb
mull
add
incb
test
stc
clc
pusha
mov
leave
aas
and
fisttps
cmpsb
es
orl
mov
pop
lret
das
jp
dec
lcall
xchg
out
daa
xchg
jmp
jns
fmul
testl
cltd
scas
dec
and
aaa
push
or
pushf
lods
sbb
or
dec
shrb
call
cmpl
pop
add
outsb
pop
imul
lret
cmp
stc
movsl
lret
cmc
and
sahf
sbb
pop
ds
or
jecxz
aaa
add
clc
mov
adc
jg
pop
popf
lahf
aad
ret
inc
mov
add
bound
push
es
mov
scas
lret
add
pop
fcoms
xor
dec
pop
fwait
pop
or
jg
and
adc
jp
icebp
ret
push
outsb
and
rorl
in
add
mov
out
sbbl
movsb
int3
sbb
out
jbe
pop
insb
ret
mov
jns
sub
sub
mov
pop
add
and
lahf
pop
and
insl
test
lret
sub
bound
sbb
push
je
loopne
push
sar
cwtl
jp
jb
mov
dec
scas
in
or
sbb
xchg
insl
or
inc
cwtl
shr
std
adc
xchg
out
dec
arpl
mov
pop
xor
loope
in
cmpsb
stos
movsb
jg
cld
aad
push
pop
mov
add
imul
mov
cli
mov
test
mov
mov
mov
inc
cmp
push
mov
scas
pop
out
cli
je
inc
lds
pop
jmp
push
jp
cli
ret
dec
addr16
jns
enter
cmp
mov
fistl
add
sub
scas
fdivrl
or
fadds
ja
fnsave
push
ja
ret
push
sahf
out
test
mov
sbb
out
ficompl
pusha
jmp
arpl
cmp
lretw
mov
pop
rcr
jle
cld
lret
mov
or
popa
push
out
in
inc
lcall
sub
fisttps
mov
iret
or
push
stos
out
shl
xor
sahf
test
test
xlat
jae
inc
sub
nop
dec
lret
lret
add
sbb
int3
into
fldl
dec
mov
fadd
mov
aaa
sub
sbb
imul
test
js
rcll
or
push
mov
mov
ret
fs
fxch
test
add
adc
pop
out
push
iret
into
mov
adc
cs
in
xchg
jmp
roll
fnstenv
or
cmpsl
das
loopne
int
rcr
fisttps
cwtl
ss
jmp
sub
dec
and
mov
pop
jmp
cwtl
cs
enter
sub
cmp
movsb
adc
test
add
mov
inc
data16
xchg
test
pop
call
sti
fidivrs
pop
or
push
cmp
mov
mov
icebp
xor
fdivr
in
jno
leave
sti
jnp
pop
es
roll
mov
mov
out
data16
das
jae
movsb
bndstx
dec
push
jle
test
fucomip
sti
xchg
and
nop
mov
lods
lds
in
mov
adc
popf
and
jne
js
divl
scas
pop
insb
xchg
repz
push
leave
add
pop
push
cld
pushf
mov
das
bound
cmc
push
enter
xor
dec
mov
pop
xlat
paddd
mov
sbb
dec
inc
pusha
adc
orl
pushl
sub
test
mov
js
sbb
in
popa
xchg
pop
std
sub
iret
cmp
leave
push
hlt
or
addb
add
fcmovnb
int3
ja
das
int3
jnp
mov
cltd
inc
out
cmpsb
shr
mov
sub
int3
mov
xchg
les
xchg
repnz
sahf
mov
out
lcall
adc
lods
dec
lcall
mov
sub
stos
int
out
scas
int3
sti
sahf
sub
outsl
jge
mov
and
or
pop
jnp
bound
nop
jbe
insl
pop
pinsrw
sahf
orb
loop
dec
sti
xchg
sbbb
fists
cmpsl
jg
or
adc
or
fs
cmp
pop
xchg
push
sahf
add
stos
fwait
jmp
jb
mov
sub
imul
out
test
push
popa
cli
mov
xchg
in
insl
push
fs
fistl
data16
xor
ret
sbb
push
adc
cmp
dec
cmovbe
sbb
test
rorl
cmpsb
outsb
jae
popf
or
add
and
and
mov
scas
hlt
mov
cmp
mov
aaa
iret
adc
mov
pop
jb
fwait
push
mov
adc
mov
popf
jae
int3
inc
std
shll
out
sbb
jne
mov
mov
push
mov
push
or
and
enter
movb
insb
mov
jo
or
loopne
jnp
popf
and
xor
sub
sub
fwait
cmp
jae
dec
push
sub
fadds
test
jb
jle
adc
mov
imul
sub
testb
xchg
push
cmp
sbb
nop
push
sub
popa
sarb
ret
mov
jnp
cmp
decl
ss
adc
push
test
mov
mov
or
adc
jg
mov
lret
pushf
dec
push
mov
popf
jmp
mov
dec
pop
push
jbe
mov
inc
fcmove
fstpt
mov
inc
mov
popf
xchg
lods
cmpsb
aad
in
outsl
xchg
dec
imul
adc
push
lods
pop
cmp
data16
sub
mov
iret
pop
inc
cmc
jmp
movsl
je
mov
dec
sub
dec
xchg
mov
inc
sbb
lcall
mov
mov
fwait
inc
mov
pop
xchg
push
sbb
cmp
jns
repz
xor
movsl
mov
jns
fwait
stc
mov
mov
cmp
loope
outsl
inc
and
std
cmc
jno
repnz
mov
inc
mov
mov
jae
mov
mov
int3
mov
insb
cmc
xchg
adc
pushf
inc
outsl
lcall
ret
movsl
sub
cmp
cmpsl
mov
push
ret
scas
mov
mov
xor
in
test
dec
pushf
xor
aas
push
pop
loop
mov
pop
push
loop
rol
and
sbbb
cmpl
lds
ret
outsb
inc
incb
js
cmp
sub
dec
fs
sbb
lret
rcll
mov
daa
inc
jmp
cli
jb
orb
push
sub
fadds
fcom
mov
daa
cs
mov
mov
xor
ret
sbb
or
mov
imul
lret
lds
aad
sub
mov
mov
cmpsl
rorb
or
arpl
mov
dec
cs
lock
jge
mov
xchg
roll
dec
jae
insb
push
jb
or
add
mov
jno
jl
movsl
sahf
orl
mov
add
add
hlt
loopne
mov
or
pop
out
in
je
add
andl
cmpsb
das
dec
sbb
ss
rcrb
les
inc
hlt
fisubs
test
out
loope
xor
sarl
or
jo
popf
and
xchg
xchg
scas
xchg
push
rorl
dec
xor
movsb
push
pop
jmp
repnz
mov
xchg
mov
sub
adc
sbbl
mov
dec
push
imul
add
lds
and
call
inc
int
cmp
cmc
negl
xchg
xchg
test
mov
test
inc
or
sub
es
xchg
mov
cmp
cld
and
mov
lock
jo
mov
and
out
pop
and
xchg
cmpl
add
mov
mov
sub
dec
add
jo
mov
movsb
push
and
sbb
jp
dec
out
fwait
add
and
sar
sub
lahf
in
pop
sbb
loop
and
dec
xchg
scas
sbb
cli
push
sub
stos
or
addr16
arpl
sahf
dec
xor
inc
inc
inc
insb
scas
pusha
shlb
sub
cmpl
push
jge
lods
enter
pop
cmp
sti
jl
sbb
mov
pop
inc
dec
push
int
mov
pop
cmp
sti
inc
cli
popaw
sbb
push
daa
jle
je
mov
cmp
push
gs
jno
push
pcmpeqw
push
mov
add
sub
pop
add
outsb
shlb
fldt
sbb
jl
and
popa
add
lea
xchg
mov
dec
xorb
in
daa
stos
jno
sahf
fwait
rcrb
testb
xchg
stos
cmp
mov
push
shll
add
leave
or
pop
xchg
lret
hlt
mov
sbb
movsl
or
inc
icebp
cmp
xlat
cmp
andl
in
cmp
jl
fstl
push
icebp
shlb
negb
sbb
jae
push
fstpt
jae
inc
fs
inc
jle
fnstsw
fstps
mov
test
mov
pop
popa
cmovp
jl
cltd
fnstenv
sub
jge
mov
mov
pop
dec
pusha
xchg
sub
jnp
ret
mov
push
push
lahf
adc
inc
jae
dec
int
inc
jae
sub
or
pop
xor
lds
fbld
xchg
jp
xchg
lods
fldl
ljmp
sti
mov
nop
mov
dec
leave
cmpsl
data16
rorb
adc
rcrb
and
xor
mov
out
jb
sahf
jg
adc
js
lret
jb
inc
mov
dec
sbb
or
mov
hlt
jmp
xchg
in
mov
mov
or
pop
orb
add
daa
sub
sarb
lahf
cmp
mov
sbb
push
sbb
sub
out
jle
mov
xchg
int
push
fwait
jp
roll
test
or
or
add
push
push
bound
mov
movsb
hlt
or
lret
cmpsl
and
movsb
jbe
lret
scas
int3
shl
xchg
mov
into
dec
push
sub
push
xor
data16
push
sub
outsb
outsl
fs
mov
inc
adc
pop
cmp
vmovdqu32
push
call
inc
insb
and
out
lcall
in
out
xlat
xor
fiaddl
push
sti
les
adc
mov
cwtl
push
rol
cltd
dec
xor
mov
es
mov
fwait
cmp
lods
sbb
imul
out
repnz
subl
cmp
out
out
sbb
pop
insb
mov
bound
xor
mov
add
cwtl
add
test
dec
sub
out
stc
sti
shlb
js
jmp
sahf
push
js
es
inc
scas
sbb
push
ffree
std
movsb
add
sub
inc
jl
lods
loope
dec
insl
pop
rclb
insb
cwtl
mov
loope
cmp
js
fiaddl
pop
sub
mov
cltd
add
into
hlt
inc
scas
cwtl
movsb
or
jecxz
cld
lret
inc
mov
mov
int3
sti
mov
inc
mov
out
dec
mov
sbb
pop
loop
sbb
imul
cmpsl
pop
and
and
aas
test
jmp
adc
xorb
mov
aas
mov
xor
cmpsl
int
testb
movsb
popa
sbb
cmp
aas
inc
add
push
repnz
jne
sti
and
dec
lods
jg
adc
sub
les
jns
cmp
adc
and
push
inc
inc
inc
sbb
dec
jl
sbb
lea
fs
xor
and
scas
outsb
jbe
imul
push
pop
sub
lea
jle
pusha
test
outsl
cltd
xchg
inc
scas
mov
popf
cmp
sbb
adc
loope
mov
and
pop
or
sub
mov
arpl
sbb
arpl
inc
loopne
gs
sbb
idivb
or
cmpsl
in
sub
sbb
and
inc
push
xor
adc
hlt
into
mov
push
mov
pop
xor
or
jle
mov
or
xchg
es
jbe
push
pop
aaa
push
pop
test
inc
iret
out
sbb
pop
popf
or
cmp
loope
xchg
pop
adc
xor
in
repnz
mov
fmulp
ljmp
cmp
rcll
stc
push
dec
out
fcoms
sub
insb
rcrb
jbe
das
icebp
dec
out
sub
sub
into
adc
pop
sbb
mov
das
out
ret
out
std
xor
mov
jo
test
jle
test
xor
arpl
add
jbe
sub
cs
pusha
inc
xor
ficoml
idivb
mov
sub
inc
out
pop
pop
pop
int
xor
adc
pop
jno
fistpll
xor
repz
mov
cmpsl
fldl
fs
sbb
repz
xchg
icebp
xchg
rorb
mov
movsl
adc
test
popa
jl
mov
mov
jne
lock
push
and
leave
repnz
jecxz
cmp
push
loopne
pop
xchg
push
or
test
mov
cmpsb
sbb
pop
push
cmc
jmp
adc
adc
jae
mov
out
and
out
sarb
mov
xchg
movsl
dec
adc
aam
in
push
mov
and
or
push
repnz
pop
xchg
xchg
push
dec
inc
call
xrelease
dec
inc
int
pusha
enter
jmp
jno
fbstp
sbb
push
inc
and
enter
xchg
fwait
mov
sub
aas
out
mov
mov
ss
repnz
js
dec
cmpsb
xor
mov
xchg
jno
xchg
shll
xchg
lods
arpl
xchg
xchg
or
loop
dec
mov
fdiv
push
test
pushf
cmp
into
fdivl
lea
pop
sbb
push
jecxz
aad
xchg
xchg
dec
lds
sbb
mov
int
or
stos
inc
ss
adc
mov
lea
cmpsb
pop
jge
adc
jo
or
jp
mov
pushf
pop
mov
test
popf
sbb
mov
mov
lea
bound
add
fs
rcll
mov
xor
cwtl
dec
dec
mov
nop
inc
pop
push
adc
mov
sub
mov
test
mov
cmp
mov
mov
in
mov
into
push
leave
mov
das
cltd
jne
pop
push
pop
xor
inc
pop
sarb
mov
mov
dec
outsl
add
cmpb
mov
enter
xlat
mov
push
movsl
mov
sub
hlt
mov
outsl
and
scas
adc
negl
push
lods
add
rcll
popa
pop
mov
dec
sub
push
inc
xor
mov
add
push
rorb
stos
pop
xchg
add
jmp
jmp
push
mov
jb
pop
cmp
sbb
add
sub
xlat
subl
add
rorl
test
push
aaa
xor
inc
sbb
cmp
and
movsb
lret
add
mov
sub
enter
adc
jo
push
loop
arpl
test
inc
jp
call
add
push
mov
movsb
add
mov
push
cltd
sub
push
and
push
push
test
adc
mov
scas
adc
out
in
xchg
jp
icebp
xor
test
jmp
int3
mov
xchg
fisttps
repz
jp
jbe
cmp
xor
and
out
dec
out
enter
dec
pop
ret
push
fisttpll
pop
dec
dec
and
push
ret
ficomps
sub
std
jge
push
frstor
sahf
pop
stos
hlt
or
test
jmp
or
xchg
leave
xchg
enter
cmp
ficompl
ret
shr
je
adc
pop
sub
xor
repnz
fldt
push
push
scas
dec
mov
sbb
cli
mov
jne
ja
or
mov
jge
pop
nop
sbb
push
sub
aad
iret
lods
dec
and
mov
or
repz
insb
xchg
adc
xchg
inc
push
cs
xchg
lods
add
push
es
std
adc
rcll
fisubrl
pushf
xor
fcomps
lcall
mov
and
call
call
jne
push
mov
adc
movsl
cltd
sbb
idivl
dec
xor
or
out
gs
imul
xor
test
mov
pushf
pusha
mov
rolb
mov
push
clc
jb
pop
adc
mov
and
test
mov
jnp
into
call
lret
push
clc
insb
ret
cs
frstor
jne
jp
enter
lock
les
test
xor
mov
popl
movsl
jb
sub
in
cmpsl
push
pop
std
into
fadd
dec
sbb
sarb
sbbl
enter
jl
pop
pushf
mov
or
popa
icebp
xchg
xchg
outsb
insl
lock
fnstenv
outsb
aad
mov
mov
mov
xor
iret
fs
dec
in
rcll
test
jmp
adc
rorb
and
adc
insl
ficoms
test
out
insb
pop
lahf
sbb
and
iret
cltd
js
add
call
mov
xorl
jge
popf
js
pop
pop
sub
jbe
ss
movsl
sbb
test
jo
mov
cs
cmpsl
jo
inc
or
or
jp
inc
lods
out
cld
int3
dec
outsl
mov
mov
jbe
rorl
lcall
pop
mov
fs
add
in
loope
add
sub
dec
add
pop
cli
movsl
sbb
jecxz
enter
mov
lret
icebp
leave
out
pop
lock
out
in
mov
mov
pushf
cmp
in
mov
sbb
hlt
mov
cwtl
call
push
mov
mov
lods
aas
mov
call
mov
insl
mov
push
test
jecxz
push
xchg
bnd
iret
movsl
pop
mov
push
out
fcomip
jp
fidivrl
repz
test
arpl
pusha
iret
adc
and
lock
loopne
nop
aas
subb
pop
mov
out
jo
pusha
iret
adc
and
lock
loopne
nop
aas
subb
pop
mov
out
jo
pusha
iret
adc
and
lock
loopne
nop
aas
subb
pop
mov
out
jo
pusha
iret
adc
and
jg
lds
loopne
out
or
dec
loopne
lock
pushf
push
mov
jae
or
ds
rclb
jecxz
repz
pop
xchg
dec
mov
pushf
push
mov
jae
add
adc
and
xor
cmp
sub
xor
insb
inc
pushf
push
mov
jae
add
adc
and
xor
ret
sbb
das
xchg
dec
xchg
dec
orl
sbb
adc
pop
aaa
out
xor
arpl
sbb
ja
addr16
clc
jns
cmc
hlt
push
push
sbb
pop
dec
div
xor
loopne
sub
fcoml
dec
fcomip
jg
pop
repz
pop
xchg
test
jl
cmp
or
cmp
jmp
dec
movb
dec
sbb
mov
inc
fnstenv
xchg
je
imul
jp
xor
xor
pop
repz
xchg
mov
jbe
insl
adc
fsub
in
mov
cld
push
xor
xchg
mov
inc
outsb
ret
js
rorl
adc
mov
jg
stos
add
mov
sub
cwtl
add
hlt
and
adc
cltd
cmp
rcrb
jl
jns
pushf
push
mov
jae
add
adc
and
xor
ret
sbb
or
cmp
sub
pop
xchg
dec
mov
cwtl
xor
and
mov
mov
mov
mov
nop
pop
mov
add
add
daa
jmp
data16
andb
mov
outsl
repz
je
testb
flds
and
push
les
repnz
and
xor
ret
sbb
or
cmp
sub
pop
xchg
dec
mov
pushf
push
mov
jae
add
adc
and
xor
ret
sbb
or
cmp
sub
pop
xchg
dec
mov
pushf
xor
push
or
shrl
lods
scas
jo
add
stos
andb
and
and
mov
fcoms
fadd
push
jbe
push
jg
lea
sbbb
movsb
sti
adc
pop
fs
jg
jo
pop
fstp
cmp
and
dec
ljmp
and
mov
movsb
sub
push
pop
test
out
dec
addb
push
inc
popf
cmp
mov
sbb
pop
jo
dec
jecxz
and
inc
xchg
jns
scas
jne
jl
icebp
orb
scas
push
imul
or
xor
in
addr16
js
cmp
lea
or
jns
mov
mov
ljmp
lcall
lret
das
adc
lret
pop
xorb
add
test
imul
jne
stos
mov
mov
fldt
dec
fdivl
imul
pop
das
cltd
add
pop
mov
aaa
dec
sbb
clc
insl
cltd
gs
aam
add
jne
into
stc
ljmp
mov
and
repz
and
xor
mov
mov
popa
cwtl
stos
ljmp
add
sbb
mov
inc
lods
leave
push
daa
jle
jo
cltd
imul
jecxz
pop
movsl
bound
in
loopne,pn
dec
ja
jne
cmp
into
mov
jl
mov
gs
push
lcall
sbb
dec
and
imul
int
xorl
inc
jg
jae
mov
xor
push
mov
sbb
ja
stc
dec
mov
xchg
or
cli
mov
mov
inc
push
ret
or
test
xlat
xchg
mov
inc
aam
cmpsl
jle
mov
xor
jo
jg
cltd
ljmp
push
out
and
mov
les
fists
lahf
call
sub
xchg
out
pop
add
mov
mov
mov
inc
insb
push
mov
fcmovne
andl
jp
xchg
rol
jle
jns
or
scas
scas
pop
dec
mov
shll
rclb
jb
stc
push
cld
stc
mov
push
out
loop
push
int
or
pushf
xchg
or
jle
pop
mov
sub
dec
ja
cmp
push
or
jge
mov
pusha
sahf
notl
cmc
test
xchg
xchg
arpl
jmp
andb
adc
adc
cs
push
in
push
rep
jbe
and
lcall
push
xchg
fs
mov
imul
jecxz
imul
loope
sub
and
cmp
add
je
les
fnstenv
mov
test
lcall
inc
into
pushf
imul
inc
jb
pop
std
mov
loope
lods
std
repz
jmp
push
sbb
mov
out
or
insl
scas
add
cmp
test
dec
sub
mov
popa
jle
call
and
sub
mov
add
iret
mov
cmp
mov
shlb
add
and
ljmp
sub
out
fs
dec
inc
mov
add
mov
mov
add
aas
jecxz
dec
pop
in
cmpsb
xchg
pop
xchg
cmp
mov
xchg
loope
cld
les
sbb
xor
sub
shl
xlat
xlat
sub
xor
pop
add
and
dec
push
adc
test
out
pop
dec
push
push
mov
adc
insb
cltd
jnp
int
imul
add
push
sbb
divb
bound
enter
rclb
imul
es
fstpt
bound
fs
adc
in
loopne
in
arpl
add
popf
scas
in
push
ja
mov
push
cmp
mov
jge
or
int
test
push
ficompl
pop
jl
push
jnp
pop
lret
sti
cmpl
mov
jecxz
daa
inc
aad
jbe
and
adc
mov
push
scas
ss
mov
pop
test
xor
bound
stc
jns,pn
inc
jge
adc
packssdw
fnstenv
inc
or
and
cmpsl
adcb
xor
sub
cli
xchg
xchg
adcl
insb
out
movsb
sub
push
test
es
mov
addl
jle
sbb
fisttpll
scas
sbb
ret
mov
mov
subb
rcl
sbb
mov
pushf
inc
sbb
scas
rcr
les
movsl
and
fwait
cmpl
or
cmpsl
out
inc
jne
repz
sub
fistpll
and
and
arpl
or
popa
mov
xor
in
fisubrl
rolb
loope
mov
retw
cmpsb
sub
pop
subb
divb
jge
es
sub
lock
cmp
jp
rcr
xchg
push
and
inc
dec
dec
mov
repnz
mov
pusha
shrl
ljmp
fwait
mov
daa
call
outsl
jb
daa
add
repnz
jmp
xlat
movsl
stos
nop
sub
mov
ret
movsl
add
adcb
in
mov
jne
lock
fcoml
test
adc
sub
xchg
call
lcall
add
cmpsb
or
daa
int3
push
pop
fwait
mov
std
or
xchg
mov
xchg
pop
jge
inc
fsts
nop
xor
mov
js
nop
dec
mov
fnsave
pop
shl
fmuls
icebp
jmp
das
mov
xor
setbe
dec
into
inc
pop
mov
orb
or
xchg
clc
ja
jmp
cmp
clc
jb
or
jb
imul
mov
fwait
pushf
insb
je
int3
jns
mov
sub
xchg
dec
add
add
push
ret
sbbb
and
adc
fcoms
je
scas
mov
enter
mov
xchg
xchg
sub
fcmovnbe
push
jecxz
fiadds
jb
sub
adc
imul
cmpsb
and
xor
sub
push
inc
enter
and
ret
inc
outsb
sbb
gs
add
data16
in
xor
pop
xchg
test
scas
mov
pop
jb
inc
xchg
inc
xchg
adc
push
mov
cmp
dec
xchg
ss
stc
fiaddl
xor
stos
sbbb
add
mov
mov
mov
mov
push
hlt
pop
mov
pop
fwait
popa
test
mov
sbb
lret
inc
pop
xchg
cmp
jmp
daa
pop
push
cmc
and
pop
lock
clc
scas
add
and
mov
aad
pause
inc
jle
push
jle
push
addl
out
dec
add
outsb
xor
sti
loop
jg
cmp
in
data16
or
xchg
int3
aas
dec
movsl
push
inc
test
adc
stos
pop
ljmp
test
cltd
mov
adc
inc
lods
xor
fs
aam
icebp
sub
ret
xchg
dec
dec
dec
mov
mov
outsl
sti
cld
enter
mov
pop
add
xor
out
pop
mov
inc
mov
in
mov
test
scas
lods
cmp
out
psubd
jmp
pop
cmp
sbb
hlt
jno
xchg
daa
inc
dec
mov
ret
popa
cmp
mov
push
add
out
inc
cmc
ret
ficomps
sbb
cmp
xchg
mov
mov
insb
and
sub
mov
sbb
movsl
shl
imul
push
test
jl
loope
push
popa
xchg
jecxz
sub
cltd
mov
cmpsl
das
sub
out
out
mov
ret
dec
insl
outsb
fisttpll
test
sub
pop
mov
mov
leave
mov
inc
jnp
push
jg
fldcw
out
jg
sti
fmuls
adc
jb
push
mov
leave
add
arpl
dec
les
add
ds
pop
stos
lcall
insb
mov
test
and
push
lahf
pop
fisubrs
addr16
sbb
jmp
pcmpgtd
mov
mov
cld
jbe
fdivr
decl
sub
in
cs
lea
push
lret
adc
imul
dec
mov
xchg
rolb
or
stos
pop
loop
cmpsb
lret
sbb
cmp
mov
xor
pop
in
test
lock
rorl
adc
mov
and
decl
call
std
mov
scas
into
subl
cs
shlb
cmp
int3
mov
leave
mov
std
pop
in
int
in
lcall
mov
add
call
jecxz
into
popa
dec
jg
xchg
rorl
adc
sub
xchg
lock
xchg
push
int3
out
sub
imul
pop
lods
stc
pop
jecxz
sub
fs
pop
xor
enter
push
ljmp
es
and
call
jle
xchg
int3
mov
cs
or
push
pusha
mov
inc
push
pop
das
fistpll
cmpsl
cltd
mov
loope
inc
cmp
in
jbe
and
mov
xor
adc
lods
cwtl
push
pusha
sbb
adc
mov
movsb
cmp
jecxz
xchg
push
cs
cmp
fisttpll
loope
jle
je
sbb
adc
imul
jae
and
push
lret
inc
xchg
cmp
insb
dec
ss
xor
ds
aas
sub
aaa
test
mov
pop
sbb
dec
add
in
test
shrl
inc
sbbb
dec
xchg
mov
pop
lock
testb
sub
pop
cmp
imul
repz
xor
roll
out
es
push
xchg
cmp
out
enter
sbb
adc
dec
aas
mov
aad
inc
inc
clc
mov
sbb
xor
lods
adc
inc
mov
in
pop
mov
xchg
jne
jl
incl
jg
xor
mov
sbb
mov
pmaddwd
lret
shrl
sti
xchg
int
stc
hlt
push
sbb
jle
mov
fists
mov
add
and
sbb
dec
mov
cmc
jne
iret
dec
decl
pop
ret
cmp
in
dec
mov
shlb
adcl
aad
fdivp
sbb
xorb
jo
dec
xchg
and
sub
sub
loopne
adc
pop
cmp
cmp
pusha
out
rcl
dec
push
imul
scas
loopne
test
push
inc
vmread
rclb
sub
test
push
leave
xchg
inc
pop
cmp
mov
cmp
imull
dec
sbb
hlt
jg
cmc
jns
mov
and
test
cmc
je
jge
add
jmp
xchg
adc
mov
test
lret
inc
leave
data16
jmp
aas
cmc
xchg
aas
pop
pop
cmp
mov
sahf
cmp
imul
out
mov
xchg
out
sbb
jecxz
mov
test
mov
cwtl
xlat
in
pop
dec
adc
push
pop
in
dec
roll
jno
xchg
insb
xchg
cltd
jb
repnz
rcll
insb
sub
rcrl
sbb
stos
sti
rcll
pop
push
cli
loopne
imul
push
pusha
or
xlat
inc
xor
jg
ss
sub
cltd
iret
add
push
sub
jmp
fsubrl
aam
or
adc
jg
div
imul
lds
test
mov
repnz
sti
xchg
sub
mov
sbb
and
pusha
push
push
xchg
cltd
inc
pop
daa
adc
push
sbb
xor
and
jmp
sbb
adc
adc
inc
cmp
fwait
test
push
add
mov
aam
lret
push
fisubl
jne
mov
test
xchg
xchg
sub
fcmovnb
push
xchg
mov
pusha
js
leave
mov
imul
stos
jno
jnp
add
dec
mov
add
dec
jmp
add
shlb
test
or
xchg
cwtl
cltd
jne
jae
and
popf
sbb
pusha
push
insl
inc
inc
neg
scas
into
sub
stc
std
mov
je
in
aaa
hlt
outsb
jp
cmp
pop
lret
lds
mov
mov
pop
fwait
dec
cmp
fiadds
dec
sub
jle
mov
imul
mov
inc
sub
push
mov
and
gs
jno
ljmp
adc
out
dec
addr16
mov
jno
pop
scas
out
subb
mov
popa
jl
push
mov
adc
xor
jmp
in
movsl
mov
add
xor
fsubr
dec
adc
mov
xchg
cmpsl
movzwl
negl
add
pop
mov
ret
jno
iret
movsl
pusha
in
popf
aaa
add
add
mov
mov
jge
sbb
ffreep
xor
xor
movsl
mov
mov
imul
jecxz
sbb
cltd
inc
ja
dec
pop
cmp
jmp
jns
jp
mov
ja
adcb
sbb
cmp
pop
or
mov
stos
pop
sbbl
mov
jp
imul
xchg
dec
imul
popa
mov
pop
or
dec
dec
cs
std
nop
push
in
cmp
in
xor
mov
sub
adc
push
mov
iret
mov
or
push
jg
pusha
repz
push
sbb
addr16
adc
xor
iret
pop
int
xlat
mov
subl
mov
and
imul
or
pop
mov
mov
js
pop
push
shr
test
push
mov
movsb
mov
fs
xor
rcrl
cmpsb
rcr
cwtl
cmpsb
int
pop
push
rcrb
repnz
std
adc
fidivrl
sbb
int3
pop
adc
push
push
mov
xchg
jp
pop
rcl
dec
xor
out
mov
mov
cltd
inc
dec
jecxz
and
xchg
daa
mov
sub
lahf
movsb
sbb
or
inc
aam
dec
divb
and
inc
adc
mov
icebp
popa
mov
addl
stos
cmp
orl
xor
inc
loope
addr16
push
leave
dec
xchg
mov
into
cli
mov
adc
inc
sti
sbb
add
jno
movsb
pop
movsl
jbe
jnp
cltd
icebp
shrl
sbbb
aad
sub
shrl
into
ret
dec
popf
jo
scas
test
fsin
mov
js
int3
es
pop
or
inc
adc
lret
or
add
ss
cltd
cmp
or
movsl
movsl
jae
jp
push
stos
leave
ja
jbe
push
mov
push
add
add
sub
push
inc
dec
int3
scas
loope
push
fld
imul
out
inc
mov
jne
div
cmp
aaa
jbe
cwtl
imul
insl
sbb
sub
lcall
xchg
pop
inc
sbb
mov
ss
inc
xchg
js
push
dec
addl
pop
mov
xchg
or
add
add
arpl
pop
inc
jne
je
or
dec
call
mov
push
pop
pushf
pop
pop
push
repz
inc
ds
rclb
stos
xchg
or
pop
push
or
mov
or
not
jbe
lods
cmpsb
jmp
inc
jmp
xchg
mov
sub
push
or
popa
test
popf
repz
insb
xlat
jne
pop
xlat
scas
cli
push
sbb
push
mov
icebp
enter
or
pusha
cmpsl
push
push
xor
into
js
xchg
fs
cmp
sbb
andb
dec
and
or
and
lret
das
sahf
xor
leave
push
mov
push
aad
push
mov
xchg
dec
addr16
inc
fnsave
rcrl
loopne
and
push
jg
mov
mov
lahf
lret
cmp
mov
mov
pop
xor
mov
push
daa
lock
in
mov
dec
fidivrl
out
sti
pop
std
mov
sbb
cmpsl
std
mov
and
cld
jl
fs
jmp
aad
pop
and
imul
out
sbb
inc
mov
dec
out
and
filds
jmp
xchg
push
das
fs
arpl
sbb
and
push
ds
inc
lret
roll
xchg
dec
xchg
adc
mov
cld
inc
jne
mov
jecxz
dec
test
ja
adc
frstor
jb
add
stc
sub
xorl
loopne
xchg
lret
pop
pop
sub
dec
sti
js
mov
orl
and
popf
xor
cmp
adc
mov
xor
sbb
and
xchg
adc
mov
scas
jge
in
xor
sti
clc
dec
mov
add
andnps
cmp
outsl
cmpsb
sub
pop
imul
in
sbbl
push
fs
mov
lods
data16
mov
in
cmp
scas
pushf
test
or
mov
and
add
clc
in
xor
pop
sbb
aaa
repz
stos
loope
mov
clc
repnz
movsb
scas
lods
add
dec
std
xchg
scas
shll
iret
in
jno
sbb
inc
mov
lret
js
loopne
push
jne
sahf
imul
les
xchg
xorl
or
xchg
sahf
fimuls
or
inc
rol
dec
fs
hlt
inc
fbstp
and
mov
insl
loopne
and
in
xorb
loope
mov
or
jae
ss
aad
or
or
shlb
out
jl
addr16
fcmovb
sti
int3
fsubr
lods
cmc
sbb
mov
inc
das
mov
loop
out
cs
lcall
dec
xchg
jmp
call
mov
addl
push
jnp
mov
jb
bound
adc
test
inc
xchg
sbb
bswap
dec
mov
jmp
mov
sub
add
mov
ds
and
fcomps
scas
les
andl
lret
leave
inc
arpl
gs
cmp
repz
xor
ret
sbb
scas
push
jne
jmp
popa
mov
cmc
mov
aas
sub
jne
or
jle
scas
jmp
jno
sub
push
out
and
pop
jbe
mov
dec
adc
aad
or
gs
aad
out
push
xlat
loope
xor
xor
ret
and
mov
ret
jl
jns
fisttps
dec
sbb
cmp
fisubs
les
xchg
mov
mov
mov
sub
pop
pop
ljmp
push
pop
pusha
movsb
in
ret
dec
push
add
add
repnz
popf
cmp
lret
mov
or
jno
mov
jnp
jo
cmpsb
sbb
inc
push
pop
add
pop
push
ds
sub
or
jno
pop
imul
inc
mov
cmp
xchg
dec
rolb
jle
adc
aad
out
dec
in
mull
adc
mov
adc
and
or
push
mov
lcall
test
int
mov
enter
push
xchg
int3
scas
insb
int
mov
ljmp
ljmp
loope
test
add
cmp
cmp
xor
cmp
mov
imul
mov
dec
lds
mov
ja
or
arpl
mov
cli
in
ds
je
push
pop
roll
sub
xlat
cld
test
adc
aaa
xor
gs
sbb
fs
fistpll
inc
mov
mov
ljmp
pop
xchg
mov
popw
shrl
sahf
movl
pushf
dec
or
ja
nop
cmp
and
dec
jns
inc
jg
das
push
fiadds
xchg
mov
adc
lds
dec
jge
mov
mov
push
scas
inc
test
mov
dec
clc
push
inc
jns
pop
xchg
stos
cld
or
cmp
iret
ficoml
cs
fistpl
sub
jge
out
mov
dec
outsl
into
test
jl
xor
cmp
stc
icebp
mov
push
lret
dec
jno
xorl
xchg
add
shlb
repnz
xchg
clc
mov
sahf
repz
out
sti
mov
sub
repnz
shl
jbe
mov
popa
jmp
mov
mov
xor
ja
and
imul
push
jge
cmp
movsl
add
sub
sbb
xchg
aad
lahf
xchg
repz
data16
frstor
repnz
or
cli
idiv
xchg
sub
xor
cld
push
sarb
sbb
in
pushf
mov
test
sbb
aas
je
adc
insl
in
int
in
pushf
xchg
rolb
mov
ret
incb
cmp
jecxz
cli
dec
cmpsl
out
imul
sbb
ret
dec
adc
movsb
adc
adc
nop
idiv
arpl
hlt
cltd
out
sub
mov
rolb
fcmovbe
jecxz
iret
lret
and
shrb
and
icebp
xor
or
adc
roll
add
idiv
jae
pop
mov
adc
and
xor
ret
sbb
or
cmp
sub
pop
xchg
dec
mov
pushf
push
mov
jae
add
adc
and
xor
ret
sbb
or
cmp
sub
pop
xchg
dec
mov
pushf
push
mov
jae
add
adc
and
xor
ret
or
cmp
sub
pop
xchg
dec
mov
pushf
push
mov
jae
add
adc
mov
sbb
cmpsb
dec
cmp
pop
hlt
aam
mov
orl
int
fstl
and
sub
xchg
insl
test
or
lds
adc
lea
push
lods
inc
mov
mov
or
lds
xchg
in
ret
std
lea
mov
repz
mov
cmp
push
mov
decb
pop
push
scas
inc
pop
xchg
or
or
hlt
cmp
jb
sub
jne
bound
shll
insl
outsb
jl
int
xchg
push
sub
xor
xchg
std
ficoml
and
pop
mov
or
lcall
in
push
jmp
push
inc
inc
in
mov
xchg
jp
js
out
rcl
sbb
push
fsubs
ljmp
bound
push
or
pop
push
xchg
vaddpd
dec
and
mov
inc
popf
sahf
shlb
cmp
pop
dec
xchg
imul
cmp
adc
lea
popf
push
lods
std
mov
dec
insl
fwait
jge
or
mov
push
push
stos
imul
enter
and
xor
add
adc
sbbb
lods
xchg
push
in
into
stos
sbb
add
cmp
ss
lock
adc
pop
test
popf
push
test
xor
gs
push
lods
inc
mov
xchg
insl
test
or
lds
adc
lea
push
lods
inc
mov
xchg
insl
test
or
lds
mov
dec
or
notb
mov
pop
cmp
jbe
mov
int
mov
aam
mov
cmp
sarl
inc
xor
loope
add
xchg
mov
das
clc
mov
mov
jns
outsl
sti
das
push
hlt
fdivp
xor
and
ja
jecxz
fimuls
lods
scas
mov
xor
dec
dec
inc
rcl
push
fisttpll
cmpsl
xchg
pop
scas
pop
and
test
js
mov
imul
add
ret
jbe
cwtl
push
out
movsl
es
and
pop
in
xchg
or
ret
scas
adc
and
xchg
ja
cmp
repz
lret
lret
cli
mov
pop
adc
stos
insb
add
stos
cmp
loopne
in
sbb
adc
jb
out
sub
and
imul
test
cmp
add
in
sahf
mov
aas
mov
and
dec
iret
movsb
in
mov
loopne
imul
stos
cmp
popa
xor
std
mov
push
arpl
and
stos
mov
jl
lret
mov
pop
cmp
mov
jle
aad
mov
lock
push
rcl
loop
outsb
imulb
into
cmp
test
cmp
scas
leave
rdtsc
xchg
lock
pushf
jmp
daa
rol
push
lea
dec
rolb
popf
jbe
clc
fistpll
sarl
mov
movsl
pop
stc
mov
mov
sub
or
jns
mov
mov
dec
shll
lcall
loopne
push
lahf
out
mov
shll
test
sbb
add
sub
dec
xchg
cmp
push
roll
jg
shr
pusha
enter
lret
push
scas
mov
and
addl
push
in
shrb
mov
shlb
mov
fmuls
jb
sbb
pop
adc
cmc
daa
ficoms
lock
sbb
test
add
mov
mov
add
ljmp
jno
test
fcomps
jp
call
stos
imul
fwait
inc
data16
jns
shll
push
std
dec
jae
push
rcrb
push
sbb
dec
scas
out
and
dec
in
and
icebp
dec
fwait
js
movsl
lret
sbb
xor
push
sub
shr
jmp
stc
cmp
cmp
pop
fdivrs
es
ds
push
xchg
dec
mov
cmp
fidivs
loope
or
cmp
push
dec
test
scas
xchg
jl
fsincos
jae
or
pop
cmp
fcoms
push
out
in
cmp
lock
outsl
xchg
xorb
mov
in
push
push
jmp
pop
xchg
in
movl
cmpsl
xor
inc
pop
pop
lods
jo
and
ljmp
jl
adc
pop
mov
xchg
sbb
cmpsb
inc
xor
sub
jg
nop
sub
inc
in
shlb
mov
xor
cmp
lods
add
aad
jbe
mov
aas
add
sbb
mov
mov
call
or
call
lahf
cmpsl
fldenv
ss
leave
jno
sub
and
jne
jg
test
lods
mov
mov
push
cmp
jns
push
dec
mov
outsl
aam
insl
in
insb
and
mov
dec
cwtl
xchg
iret
pop
mov
xchg
jg
out
scas
je
mov
xor
int
dec
in
loope
dec
sub
jno
add
push
add
addr16
cmpb
push
repz
popa
sbb
push
movsl
addr16
sbb
inc
or
outsb
xchg
xchg
dec
inc
dec
out
icebp
xchg
mov
push
imul
addr16
xchg
cmpsl
sub
jg
dec
pop
or
inc
xor
cmp
mov
outsw
push
pop
sti
dec
inc
push
iret
testb
popa
add
arpl
rclb
mov
fwait
insl
sbb
popa
jb
loope
arpl
push
insl
iret
jg
sub
jmp
jne
arpl
dec
jp
pop
mov
test
enter
insl
fwait
sti
test
inc
mov
imul
aam
lcall
xchg
lea
push
scas
jns
out
sbb
sbb
je
sbb
jl
js
call
xchg
mov
mov
or
shrb
cmc
push
lret
inc
xchg
ret
mov
repz
push
pop
mov
fldt
add
cmpsl
test
sbb
fs
sub
sbbl
cmp
cmpsb
xor
adc
sbbl
aaa
jnp
jno
mov
cmpsb
fincstp
cld
push
sbbb
pop
rcl
mov
cmp
lret
repz
in
int3
dec
pop
add
adc
xor
sarb
xlat
adc
adcl
icebp
inc
jp
popf
sahf
cwtl
shll
insl
pushf
bswap
sarl
push
mov
inc
fiaddl
inc
mov
test
mov
jnp
sbb
cmp
dec
aaa
mov
shrl
fwait
cmpsb
mov
pop
or
out
andl
les
xchg
sbb
inc
push
lea
jecxz
push
in
ret
loop
icebp
push
test
push
ja
out
test
cmp
orb
test
jle
out
in
pushf
ja
ss
xor
fcoms
inc
push
dec
hlt
daa
sub
dec
cld
push
mov
hlt
adc
dec
cld
sahf
mov
cmc
mov
sahf
fcom
sbb
fdivrl
lea
sub
sbb
rcrl
iret
lcall
jecxz
add
jmp
inc
jnp
pop
popf
movsb
lods
mov
jmp
xorb
mov
sub
jge
mov
lcall
adc
xchg
mov
lock
jecxz
push
dec
pop
sub
loop
jns
mov
pop
jmp
add
bound
add
dec
movsl
sbb
xor
popf
mov
and
sub
inc
xor
mov
inc
inc
js
mov
adc
into
push
or
jb
sbb
sbb
mov
xchg
and
fs
js
xor
and
in
pop
mov
jnp
cld
sub
cli
ds
mov
dec
stos
jb
sar
stos
clc
mov
outsl
ds
xchg
mov
es
mov
pop
xchg
arpl
adc
adc
sbb
mov
pop
inc
inc
dec
pop
cmp
out
and
mov
jno
call
push
enter
mov
lods
leave
jb
insb
jbe
fsubp
leave
mov
push
inc
jnp
inc
mov
add
cmp
mov
jns
aas
mov
inc
inc
mov
dec
lods
jge
jbe
std
xchg
add
fwait
jne
rcl
xchg
mov
cmc
lea
ret
inc
jno
jbe
testl
les
adc
pusha
dec
test
ficoms
xchg
jne
cmp
mov
xor
mov
jmp
push
lods
and
mov
dec
ret
ljmp
push
push
punpckhwd
ficomps
out
out
mov
dec
lret
mov
dec
pop
xor
pop
xor
cltd
shrl
mov
jb
lahf
or
out
dec
cmp
mov
and
lret
or
pop
jg
or
mov
test
in
les
int
xchg
pop
push
adc
or
and
xchg
stos
mov
jnp
xorb
addr16
cmpsb
lea
pusha
aam
dec
mov
out
pop
push
or
aad
mov
shl
mov
les
cli
mov
push
push
filds
rorb
stc
les
loopne
lods
in
xchg
jp
lods
loope
adc
shl
and
cld
xchg
or
ja
and
mov
ja
in
jo
scas
imul
xchg
mov
adc
addl
dec
out
addr16
push
fs
and
pushf
mov
pusha
in
ljmp
pop
mov
pop
xor
aaa
mov
scas
clc
pusha
push
sub
or
and
in
or
adc
xchg
jne
repz
push
mov
and
jge
in
push
inc
dec
je
sbbl
lods
adc
into
shlb
sub
or
rorb
sub
shlb
imul
mov
mov
repnz
in
jne
jb
shlb
sbb
add
test
flds
add
movsb
jle,pn
lea
mov
or
loope
jle
test
icebp
mov
rolb
sbb
pop
fwait
lcall
mov
pop
jecxz
mov
xchg
push
fdivrl
aaa
pop
push
inc
adc
push
push
mov
add
stc
pop
jo
fwait
stos
lock
pcmpgtd
pusha
dec
stos
dec
inc
jp
shrl
stos
mov
jmp
xchg
ret
xor
bound
adc
je
mov
push
mov
sti
pop
arpl
inc
sahf
pop
sub
jnp
and
pushf
dec
pop
jae
lock
push
aad
call
jo
mov
or
cld
fiadds
push
jl
adcl
lahf
cli
scas
pop
insb
mov
pushf
mov
mov
mov
lds
jg
je
and
inc
mov
sub
jge
scas
cmp
shlb
push
ljmp
data16
jnp
js
icebp
inc
rcll
push
popa
and
bswap
push
jg
sub
cmp
push
sbb
or
adc
movsl
mov
mov
daa
daa
mov
lods
xor
adc
or
mov
jecxz
pop
ds
push
lcall
inc
push
cwtl
mov
xor
cltd
cmpsb
outsb
imul
cmp
or
data16
mov
xchg
jb
fisttpll
push
cltd
dec
jno
cli
xchg
adc
ret
dec
imul
pop
in
test
inc
inc
sub
js
icebp
xchg
xor
int
ffree
jl
lock
jle
sti
mov
mov
lock
mov
sub
dec
ret
mov
push
sahf
loopne
pop
add
in
aas
xor
push
filds
std
pop
mov
addr16
xchg
sub
andb
sbb
cmp
dec
icebp
les
adc
sbb
cmp
sti
mov
mov
iret
in
sbb
inc
cmp
mov
fadds
mov
orl
leave
out
js
pop
mov
sar
push
jg
sub
cltd
pop
sbb
and
jae
repnz
xor
pop
or
int
negb
mov
cmpsb
adcl
test
loopne
fisubs
add
inc
mov
inc
mov
and
pop
cwtl
ficoms
adc
lds
pop
inc
std
lock
dec
mov
aam
sbb
mov
repnz
add
pop
stos
in
sbbl
stc
fs
sahf
stos
pop
loope
push
push
xchg
xchg
mov
cwtl
jns
nop
inc
inc
fcmovu
pop
pop
js
mov
jno
nop
jo
popa
out
inc
jb
jbe
into
and
jno
inc
std
lods
jae
rcrb
out
cltd
sbbl
les
in
push
cmp
movsb
xor
test
push
lret
xor
mov
sub
sbb
jne
jae
dec
mov
jg
mov
add
inc
pushf
icebp
loop
test
mov
test
mov
testb
loopne
mov
sbb
inc
jb
xor
add
mov
ret
faddl
shrl
out
add
insl
incb
lcall
xor
push
mov
fs
arpl
js
ljmp
imul
aad
imul
pushf
ds
mov
sbb
add
or
add
sub
mov
daa
int3
add
nop
mov
mov
mov
mov
mov
int3
adc
or
js
jmp
inc
or
add
cmpsl
js
or
cmp
jg
fst
mov
and
inc
push
pop
add
aas
and
jne
cmp
pop
push
push
fxch
and
cld
push
sub
lcall
add
pop
inc
call
sub
mov
test
lahf
add
iret
xor
imul
or
mov
loop
inc
rcrl
adc
dec
cvtpi2ps
fidivs
repz
arpl
insb
movsb
cmpsl
jne
push
adc
fdivs
mov
dec
loop
or
push
iret
rorb
arpl
jns
and
pop
or
xlat
xchg
mov
sbb
movsb
jl
lcall
push
mov
aaa
pop
das
fsubrp
test
cmp
mov
aaa
add
adc
cmp
mov
adc
sbb
add
icebp
jb
pop
dec
xor
sub
jecxz
and
jge
imul
jecxz
sarl
div
out
out
mov
ds
movsb
and
lret
pop
dec
and
xor
push
es
cmp
sbb
iret
push
xchg
call
shl
xor
mov
movsb
shll
pusha
arpl
jbe
mov
ret
fnsave
sub
icebp
dec
pop
mov
sub
lods
insl
fcomi
cmp
div
cmp
cli
mov
leave
mov
movsb
insb
mov
cmp
sbb
sub
add
adc
push
in
push
scas
iret
dec
sub
idivb
sbb
jbe
sub
mov
sarl
mov
dec
mov
fiadds
mov
xor
clc
pcmpgtd
cmp
xor
ds
shll
jecxz
shrl
push
loopne
cmp
in
pop
test
aad
lea
jo
mov
mov
insl
ds
aad
adc
cltd
push
xchg
imul
call
adc
daa
push
cmc
mov
mov
inc
cmp
arpl
xor
sbb
sub
es
push
or
and
stos
push
pushf
sbb
rcrl
and
jns
jno
pop
mov
in
icebp
and
mov
inc
push
jmp
adc
xchg
rol
lea
bnd
fs
jmp
decl
mov
ja
int3
and
movsb
push
push
es
inc
mov
insb
call
faddp
or
mov
pop
mov
and
pop
push
cmp
pusha
jo
xor
sub
sbb
addr16
outsb
sub
mov
cmp
scas
pop
pop
fisubs
in
data16
fldl
mov
aaa
sub
push
mov
or
push
pop
cmp
mov
sub
sub
out
cmp
jae
inc
sub
pop
clc
push
mov
mov
jbe
ja
or
fimuls
sub
xor
mov
and
xchg
ss
pop
aam
sbb
mulb
loop
cmp
and
leave
lea
or
fisttps
icebp
xchg
push
out
test
sub
fcomps
notb
pop
rorl
xchg
imul
repnz
lods
cmpsb
and
mov
or
test
loope
std
pop
arpl
push
xor
out
xchg
in
mov
mov
jle
int3
lods
jae
push
adc
loope
cmp
jmp
leave
insb
std
stos
lret
icebp
and
jmp
xor
aas
repnz
mov
cmpl
inc
dec
inc
call
jb
or
lret
roll
xor
pop
lock
out
cmp
lret
ficoml
movsb
cwtd
into
lds
sarl
inc
push
in
dec
jmp
adc
dec
pushf
cld
movsb
enter
loopne
or
fwait
xchg
or
push
loope
xchg
sahf
fildll
jge
fcmovnbe
jle
add
lea
bound
in
loop
movsl
mov
mov
sbb
add
clc
sbb
in
into
pusha
dec
into
mov
pop
test
ja
stos
mov
push
add
aam
mov
arpl
fidivrs
decb
into
cld
hlt
dec
pop
mov
test
aad
aaa
jecxz
xor
sbb
sub
cmp
jp
insb
inc
inc
dec
lea
inc
push
mov
cmp
xchg
pushf
push
or
pop
pop
mov
aas
popa
adcl
mov
sbb
xchg
aas
mov
lods
jmp
jnp
insl
fwait
xchg
lahf
xorl
push
fisttpll
push
pop
icebp
ljmp
xchg
push
sbb
sub
and
cmp
outsl
and
pop
cmp
ror
adc
add
mov
xor
ss
jbe
data16
mov
xor
daa
aam
xor
sbb
dec
adc
pop
loop
xchg
testl
push
leave
cli
lret
movsl
out
pop
in
jmp
hlt
sub
addr16
dec
lods
mov
cmp
test
nop
inc
or
mov
cmp
mov
push
mov
sarb
jnp
aam
sub
lods
xchg
dec
test
mov
imul
mov
decb
xchg
mov
push
xchg
fsts
inc
repnz
and
dec
dec
and
push
jecxz
mov
push
mov
inc
xor
push
jle
bound
fldt
lea
mov
andb
andb
mov
add
pop
jmp
mov
mov
dec
insb
iret
fnstsw
dec
movsb
in
subb
pop
or
test
mov
mov
int3
es
xchg
sbb
imul
je
in
je
in
stc
data16
push
push
pop
push
and
sarl
dec
dec
test
sarb
mov
jo
icebp
xchg
stc
pop
in
dec
ljmp
shlb
icebp
loopne
mov
pop
mov
add
cwtl
mov
les
mov
dec
mov
mov
stc
dec
xchg
mov
loopne
das
mov
add
loope
cltd
lahf
shll
dec
dec
dec
imul
add
xchg
sbb
cmpsl
cmp
inc
push
or
push
jae
pop
scas
dec
outsl
sbb
scas
xchg
inc
jg
adc
and
movsb
jns
cmp
push
int
mov
in
push
cs
iret
aaa
mov
mov
jl
jne
inc
addr16
pop
mov
push
fisubrl
nop
mov
gs
arpl
dec
ret
push
mov
cmp
xlat
lock
dec
jns
xchg
add
shl
es
mov
mov
lods
data16
sub
sbb
xor
xchg
test
in
clc
test
push
je
call
xlat
inc
enter
ja
mov
mul
fldcw
bound
aad
dec
sub
mov
mov
hlt
shll
scas
sbb
and
mov
ret
insl
pop
pop
inc
pop
sub
push
scas
scas
insl
gs
mov
fcoms
insl
add
pusha
int3
push
lods
ds
mov
nop
sbb
inc
or
cmc
mull
mov
loopne
jecxz
inc
in
std
movsl
sarb
pop
filds
mov
ret
push
scas
add
fnstsw
cld
sbb
dec
sbb
lods
pop
test
pop
out
sbb
jne
icebp
mov
les
mov
fisttpl
push
push
or
cmp
push
push
mov
jns
xor
pop
in
sbb
cmc
add
stc
pop
xchg
fwait
add
inc
xchg
andb
pop
pop
push
fidivrl
jns
cltd
pushf
sbbb
movb
dec
jne
inc
add
cld
xchg
rcrb
fwait
addr16
mov
rorl
pushf
addr16
sub
sti
sub
loop
cmpsb
fucomip
cmp
notb
imul
mov
leave
jge
gs
out
aaa
pop
popa
idivl
int3
ljmp
fcoms
or
lcall
in
in
loope
frstor
pop
jns
ds
mov
cmp
adc
scas
incb
cmp
and
insl
in
ljmp
lret
lret
idiv
lock
out
pop
add
and
pusha
test
mov
fs
jae
cs
jbe
push
movsb
push
inc
orl
or
pop
inc
pop
and
stos
cwtl
sbb
ljmp
dec
jle
test
jle
sti
xchg
push
out
test
jge
test
std
fidivl
or
push
sbb
in
jecxz
repz
data16
jp
sbb
sar
fcoms
adc
add
lcall
outsl
inc
mov
mov
into
dec
mov
mov
mov
xor
add
addr16
pop
jp
iret
sbb
mov
dec
and
lahf
push
pop
jnp
into
jo
push
xchg
shr
inc
sti
and
lahf
into
aas
imul
mov
inc
dec
jl
mov
aad
scas
lds
test
pop
adc
fucomp
add
ret
hlt
adc
sub
ljmp
mov
divl
int3
push
fcmovne
or
fwait
mov
mov
in
pop
lods
dec
lds
mov
lahf
movb
pop
fisttpll
in
sbb
jne
gs
push
lods
inc
mov
xchg
insl
test
or
lds
adc
lea
push
lods
inc
mov
xchg
insl
test
or
lds
add
lea
push
lods
inc
mov
pushf
insl
cmpl
sub
or
popf
in
sub
sbb
mov
pop
idivl
insl
test
addb
ret
lds
and
mov
movsl
test
push
add
jne
xor
popa
and
xchg
cmc
mov
test
loope
test
inc
xor
imul
cs
jno
adc
xchg
in
or
mov
std
popf
in
lods
shld
dec
fisubs
sub
inc
adc
adc
stos
push
aam
in
testb
roll
mov
jno
mov
adc
push
or
orb
test
shlb
inc
mov
and
adc
cld
sub
mov
jmp
add
mov
xor
inc
aad
cmp
rorl
roll
incb
adc
int
inc
add
and
repnz
xchg
clc
jmp
addl
out
xor
adc
mov
mov
mov
xchg
mov
enter
xor
scas
xor
sbb
mov
mov
mov
xlat
insl
xor
insl
sbb
pop
mov
loop
lahf
out
jecxz
clc
mov
push
push
push
add
cs
and
mov
rclb
mov
negb
jne
and
adc
add
mov
test
rcr
movsl
test
mov
movsl
icebp
push
add
jne
xor
popa
and
xchg
cmc
mov
test
mov
movsl
icebp
push
add
jne
xor
popa
and
inc
dec
add
repnz
pusha
mov
cltd
inc
js
out
and
jge
dec
adc
xchg
lcall
je
jl
dec
mov
jne
xor
in
adc
in
push
pop
and
push
out
mov
jnp
divl
cmpsb
jbe
sbb
and
pop
or
fs
aad
adc
pop
dec
and
aam
and
sub
mov
or
test
mov
mov
mov
jne
sub
xchg
push
add
je
repz
arpl
rorb
das
outsl
fisubs
mov
iret
mov
push
ds
pop
xor
mov
in
enter
xor
mov
dec
inc
add
pop
mov
cmpsl
out
mov
ja
mov
stos
cmp
adc
xchg
std
sub
xor
jge
and
xor
or
fcompp
push
fnstenv
lret
imul
outsb
cmp
xchg
pop
stos
pop
cmpsl
repz
icebp
js
cltd
insb
push
inc
xor
xchg
fidivrs
push
sbb
in
shrl
das
stos
push
test
inc
mov
jle
add
push
xchg
std
inc
rolb
test
hlt
mul
decl
lock
inc
insl
fnstsw
lret
xor
lods
sarb
imul
cmc
xor
adc
stos
les
jle
or
aas
push
and
lods
mov
fists
sub
push
icebp
lock
pushf
xor
out
mov
cmp
inc
outsb
mov
xorb
pop
js
add
adc
or
push
in
jle
std
adc
jnp
and
xorl
rorl
push
sbb
dec
mov
adc
mov
call
sbb
sti
push
sahf
pusha
sub
jno
sahf
hlt
sub
movsb
out
out
mov
loope
jmp
mov
bound
push
inc
cmp
mov
push
in
xor
out
push
push
cmpsl
dec
pop
and
push
push
popa
push
inc
adc
sub
mov
int
pop
pop
fadd
mull
xor
shll
pop
fisubrl
aad
adc
lods
pop
adc
mov
cmp
stc
sbb
cwtl
std
imul
in
push
and
mov
sub
punpcklwd
push
cmp
incl
pushw
scas
jmp
xchg
mov
ja
fwait
adc
xor
bound
dec
mov
push
add
insl
sbb
shr
mov
push
ljmp
jle
dec
cli
and
and
ret
subb
div
jl
mov
add
or
xchg
stc
shl
pop
adc
adc
pop
aaa
fisubrs
cmp
clc
add
and
push
ror
repz
push
aam
in
std
xor
popa
adc
xlat
jns
push
and
xchg
call
xor
jge
bound
fcmovbe
cmpsl
mov
aas
repnz
lea
out
dec
pop
dec
pop
movsb
js
push
lcall
mull
push
mov
test
sbb
rcll
fwait
mov
stos
sub
sbb
and
mov
movb
jbe
movsl
mov
outsb
mov
jmp
insb
sbb
sub
ficoms
pop
loop
ss
pop
or
iret
xchg
sarb
xchg
lret
xor
in
imul
daa
mov
xchg
es
cmp
xor
push
cmp
mov
imul
in
shrb
nop
lcall
cltd
add
cltd
nop
xor
bound
and
test
out
adc
ja
movsb
bnd
dec
lcall
cmp
scas
cmp
or
rcrl
aaa
push
adc
pop
inc
add
es
pop
adc
aaa
mov
out
icebp
xor
insl
sbb
mov
xor
stc
pop
cmp
aam
lret
or
add
adc
add
pop
or
out
inc
arpl
imul
push
cmp
icebp
dec
sarb
add
aad
repz
pop
mov
jg
outsl
mov
call
leave
test
insb
mov
mov
ljmp
movlps
mov
add
dec
out
lock
pop
or
js
xchg
into
sub
enter
ja
push
inc
in
xor
in
out
lock
sbb
stos
cmc
jne
add
jns
pushf
das
subl
mov
sbb
and
push
add
jns
dec
pop
and
je
dec
adc
in
xor
aad
cltd
sub
mov
ret
push
popf
aas
mov
ja
stos
cmpsl
stos
mov
sbb
imul
repz
xor
test
sub
xchg
mov
repz
in
shrb
sub
push
dec
les
imulb
cmp
push
inc
imul
inc
movsb
cmp
cmp
scas
mov
lcall
and
inc
addr16
mov
cmp
popf
insb
fcomps
add
insb
mov
repnz
out
jmp
lods
cmpsb
insb
push
scas
sbb
stos
mov
dec
fisubrs
outsl
add
jp
adc
ficomps
lds
pushf
js
push
xchg
out
push
push
adc
push
jmp
nop
ja
leave
inc
add
sub
sub
mov
ljmp
sti
mov
repnz
jge
mov
mov
pop
lret
movsb
xchg
lret
pusha
imul
repz
jb
jo
jmp
in
push
out
adc
adc
cmpl
xor
test
ljmp
test
and
bound
cli
push
mov
sub
jnp
ret
ret
jge
sub
psubd
push
jp
loop
cmp
sub
bound
cmc
sti
sub
out
lods
cltd
pop
xchg
adc
aam
sarb
or
call
in
xor
aas
pop
cmp
sbb
dec
jle
in
std
or
mov
call
ljmp
cltd
cld
test
push
sbb
sub
ljmp
mov
shlb
fdivs
inc
addr16
addr16
push
xor
cli
into
inc
mov
lret
cmp
negb
sub
inc
nop
ds
xchg
push
push
sbb
arpl
cmc
mov
mov
adc
or
mov
xchg
les
xchg
add
xchg
lods
jns
cmpsl
mov
push
sub
fnstcw
loopne
sbb
sub
and
dec
rcl
pop
adc
sub
xorl
pop
xchg
ja
jle
into
aaa
mov
iret
sbb
cmp
mov
gs
xchg
loop
insl
mov
mov
xchg
ljmp
xchg
inc
jns
iret
lods
in
xor
xor
mov
cli
sub
jb
cmpsl
xchg
loop
dec
out
adc
popa
mov
out
sub
test
dec
xor
add
mov
outsb
jmp
sub
aad
cwtl
mov
push
sbb
sub
pop
sbb
lret
mov
push
stos
mov
adc
cmp
lods
lds
lock
mov
fimull
fsubrl
ja,pn
and
call
cmpsb
xor
jno
cwtl
cmpsl
mov
sbb
test
push
popf
movsb
cmpsl
lods
dec
adc
aad
movsb
lcall
mov
jne
xchg
xorl
jl
push
and
sbb
clc
push
in
scas
xchg
sarl
je
push
adc
push
imul
fiaddl
fcmove
les
pop
mov
outsl
pop
repz
ja
push
pop
lea
mov
mov
mov
ret
pop
hlt
in
xchg
sub
mov
xchg
sub
mov
fistpl
test
xchg
repnz
mov
sbb
stos
testb
out
xchg
dec
stos
mov
jg
add
sti
mov
lahf
xor
lahf
xlat
mov
mov
mov
scas
sbb
test
pop
mov
hlt
jnp
mov
rolb
arpl
ss
out
jb
cld
outsl
jg
stc
push
test
mov
xorb
fistpll
jge
les
call
mov
and
jmp
pop
or
cmp
rol
fcoml
filds
sub
insb
outsl
fcoml
cmpsl
call
icebp
xchg
jg
pop
dec
sbb
xlat
push
jmp
and
bnd
jmp
fcmovnu
out
mov
xor
mov
and
or
dec
inc
lea
push
movsl
jmp
xchg
jecxz
or
mov
fmulp
adc
insb
fiadds
in
pusha
movsl
dec
pusha
dec
dec
cmp
ds
push
sbb
xlat
xor
mov
cmp
imul
xchg
movsb
icebp
pop
lahf
and
push
adc
sub
into
clc
dec
mov
jne
and
and
mov
adc
mov
cmp
imul
mov
scas
or
out
cltd
jmp
fs
fsubs
push
pop
sub
push
lods
iret
daa
outsl
lds
xchg
mov
in
xchg
mov
rcrl
mov
test
jns
aas
clc
push
cmovs
xor
shll
jbe
mov
mov
lret
fucomp
pop
xor
and
lcall
fwait
jmp
xor
push
fdivr
pop
incl
fbld
cmpb
cwtl
add
imul
xor
rcll
rorl
mov
cmp
push
jae
movsl
inc
xor
scas
test
leave
mov
lahf
add
add
in
xchg
dec
fnstsw
add
mov
mov
push
dec
cltd
subb
lods
pop
pushl
push
push
sbb
mov
je
push
mov
es
cwtl
mov
sub
lea
test
ss
pusha
test
jb
insl
test
jo
adc
mov
pop
add
das
gs
xchg
jecxz
pop
jno
mov
bound
lea
sahf
xchg
sub
push
clc
rol
jg
cmpsl
adc
movsl
mov
scas
popa
movsb
sbb
jl
cli
iret
jge
xor
mov
push
pop
push
push
testb
fs
or
add
lret
ljmp
loop
mov
jae
jbe
cmp
mov
pop
jno
xchg
cmp
stos
loopne
lods
loope
xchg
js
jae
out
xrelease
and
ss
imul
mov
push
int3
lea
rcr
jg
orb
cs
jnp
test
insb
fcoms
jmp
adc
imul
or
push
lahf
lods
mov
in
sbb
loopne
cmp
pusha
or
jb
inc
repnz
in
jae
out
js
aas
push
stos
shrl
xorb
pop
jle
lret
sti
daa
test
and
add
aam
pop
addr16
jne
gs
test
lods
push
xchg
stos
in
xchg
lods
push
or
arpl
jmp
insb
lret
bound
push
xchg
cmp
fsubrl
push
jnp
push
mov
jbe
push
jb
cld
mov
add
xor
mov
cmpsl
enter
push
je
mov
push
imul
les
push
lret
lret
pop
icebp
jno
icebp
rcrl
lock
mov
lcall
adc
stos
mov
sub
mov
fbld
xchg
push
dec
add
addr16
mov
stos
icebp
inc
add
fisubrs
mov
inc
jb
mov
push
in
fisubl
or
inc
jns
stos
jnp
mov
sarb
loopne
mov
add
ja
xchg
xchg
push
inc
enter
cmpsb
inc
pop
mov
adc
sub
add
mov
clc
mov
out
jae
xor
sahf
mov
dec
pop
or
jno
xlat
cmp
adc
test
aad
cmc
orb
fisubl
mov
dec
lcall
movl
inc
scas
sbb
iret
pop
push
inc
js
jecxz
fistps
icebp
jb
leave
addb
mov
negb
lret
inc
xchg
mov
mov
sub
fdivrl
cwtl
or
or
popa
jl
cmpsb
cmp
ljmp
sub
flds
mov
rorb
push
or
fldt
sub
loope
icebp
loop
fstpl
push
mov
sbb
shl
sbb
and
lahf
sbb
enter
push
push
xorl
mov
add
out
cwtl
cmp
pusha
lea
inc
ss
ficoml
and
shl
lcall
or
enter
arpl
sar
inc
pop
mov
xor
jne
lret
mov
mov
mov
sbb
and
addr16
shlb
sbb
sub
push
jle,pn
mov
inc
fsubrp
pop
xchg
add
sbbl
sub
sbb
push
shlw
xchg
leave
xorl
xchg
arpl
stos
inc
jmpw
adc
jo
andb
movsb
mov
outsl
icebp
mov
adc
push
test
movsb
sub
out
push
mov
test
fwait
push
push
and
pop
jbe
ds
cmpsl
sub
jns
and
loopne
pop
pusha
ret
cwtl
sub
push
out
xor
cmp
test
push
and
gs
xchg
clc
and
xchg
stc
mov
inc
mov
xorb
test
lcall
mov
jnp
stc
push
movsl
std
adc
shll
mov
sbb
ljmp
pop
pushf
pop
inc
and
jno
xor
xchg
add
xorl
jmp
pop
das
or
inc
mov
sub
sbb
pusha
add
pop
pop
into
shll
dec
push
push
jg
das
xor
cmp
and
inc
jnp
and
push
mov
jbe
cmpsb
fnstsw
aam
imul
push
xor
pushf
pop
bsr
dec
shl
jbe
jae
mov
imul
lret
push
xchg
loop
fimuls
stos
je
pop
repz
mov
cmp
loopne
or
mov
hlt
cli
dec
xchg
imul
xor
into
fld1
fdivrs
jmp
pop
aam
js
cmpsl
mov
sbb
cmpb
push
mov
cmp
mov
push
movsl
sbb
mov
jns
mov
rolb
push
sbbl
jo
add
add
sub
rclb
xchg
lock
mov
push
fucomip
mov
xchg
ds
cmp
dec
xchg
xlat
test
mov
stc
in
pop
sbb
js
pop
xor
sub
icebp
mov
or
inc
fistpll
xchg
and
movsl
or
or
jbe
lods
adc
xor
jae
pusha
mov
enter
or
icebp
sbb
jb
sub
jnp
lahf
and
jl
lret
or
aaa
scas
dec
repnz
and
ljmp
inc
cwtl
sub
lahf
popf
nop
adc
mov
add
cs
sub
enter
dec
cmp
daa
dec
jmp
jg
mov
sbb
jne
fwait
add
mov
ret
mov
jmp
xchg
stos
sbb
mov
pop
dec
cltd
inc
mov
movsb
cmp
ljmp
mov
jae,pt
push
dec
pop
dec
clc
stc
cmp
dec
sahf
std
jne
insl
imul
ljmp
mov
jg
xor
sbb
cs
fcmovnu
add
addr16
and
mov
jle
ret
sarl
rorb
fdivs
jbe
in
pop
es
mov
int3
push
cmpsb
test
mov
lret
fmul
adc
sti
lret
inc
mov
push
das
shlb
sbb
cmp
mov
push
xor
xchg
xchg
inc
adc
xor
lods
dec
repnz
je
fnsave
jno
repnz
cmpsb
enter
xor
sahf
insb
and
jg
dec
imul
daa
xchg
mov
lea
enter
sub
lock
inc
addb
push
scas
fadd
pop
lret
adc
pop
adc
out
cmp
scas
sbb
or
rorl
mov
adc
add
and
stos
jae
in
and
out
jae
int3
nop
or
cmp
and
cmpsb
mov
scas
sti
pop
clc
cmp
insl
pushf
loopne
aaa
push
aad
push
shrl
roll
lock
xchg
lahf
xchg
xchg
and
cld
push
fwait
jge
cmc
mov
fwait
push
xchg
iret
ficompl
loop
sarb
test
pop
ss
comiss
pop
jle
cmp
dec
add
sub
scas
adc
scas
mulb
ljmp
pop
out
adc
les
xchg
and
and
dec
out
sbb
push
outsl
cltd
add
xchg
arpl
mov
or
jae
sbb
cld
adc
lea
cmp
adc
aas
inc
je
addr16
pop
shll
jp
xlat
rcr
shlb
cli
xor
cmp
jbe
int3
mov
add
aas
scas
jg
in
or
inc
sbb
cmp
iret
stos
aam
repnz
clc
sbbb
mov
sbb
push
pop
dec
and
fisttps
stc
fwait
or
enter
int
dec
adc
sbb
push
push
gs
dec
sbb
sbb
test
jecxz
jne
cmpsb
sbb
sarl
leave
mov
sub
sub
mov
jbe
cmc
out
lea
inc
or
jge
adc
pop
lds
bound
fwait
cltd
jl
imulb
jp
dec
aad
mov
or
jnp
pushl
push
push
pop
addr16
mov
imul
ret
dec
jl
mov
jmp
mov
mov
push
mov
in
aas
ss
sbb
rcrl
and
orl
test
xchg
mov
mov
cli
in
popl
aaa
adc
mov
and
popf
sbb
cmc
mov
rolb
sbb
aad
mov
int
mov
inc
cwtl
fsub
les
scas
int3
pop
add
sahf
les
loopne
out
cmp
mov
and
lret
aaa
outsb
push
gs
dec
fdivp
sub
sub
lret
sub
sti
or
scas
jae
test
jmp
jmp
das
jae
stos
push
in
lods
sar
call
mov
out
gs
out
fdivrl
jp
cmpsl
daa
mov
inc
pop
jecxz
mov
std
int
push
mov
jb
fiadds
cmc
pop
push
jmp
sbb
sbb
or
jg
in
mov
jae
inc
call
outsl
and
add
sbb
push
mov
jmp
cmc
shll
dec
icebp
xor
ret
xchg
and
hlt
xchg
xor
push
mov
adc
jno
sbb
cs
cmp
lds
push
push
insl
xlat
push
lods
xlat
add
or
aaa
out
mov
add
pop
cmp
inc
dec
mov
int
mov
xor
xor
xchg
hlt
pop
cmp
pop
pop
pop
stos
pmulhw
loope
fcmovnb
xor
pop
cmp
pusha
fs
push
jl
loopne
jecxz
daa
push
mov
push
out
cmpsl
pop
pop
adc
gs
fbstp
cwtl
stos
jno
imul
lock
sbb
and
sbb
imul
jle
out
mov
in
push
add
push
mov
or
push
jb
cs
sarb
hlt
and
cmp
out
xchg
adc
mov
add
imul
sti
out
adc
inc
mov
es
pop
gs
lret
imul
xor
test
or
or
test
test
sub
mov
jb
push
scas
push
cmpsb
out
xchg
mov
aad
mov
add
cmp
dec
and
imul
pop
push
ja
fs
xor
aam
jo
xchg
aam
es
adc
aas
ljmp
add
sbb
ja
pop
std
inc
stos
outsl
subb
adc
mov
dec
sub
xchg
mov
rcrl
das
test
mov
push
sbb
push
stos
nop
es
sbb
inc
add
dec
test
mov
pop
aad
addr16
fdivrp
jnp
dec
je
ljmp
xchg
push
das
test
mov
pop
sarb
fdivrl
movsb
mov
jp
in
jge
and
dec
cld
js
xchg
jmp
or
xor
xchg
mov
int3
frstpm(287
cs
lahf
adc
xcrypt-cfb
cmpsl
fs
not
sahf
cmp
shl
clc
and
sahf
cmp
xor
bound
push
shrl
in
inc
lea
push
push
push
loopne
insl
mov
mov
es
les
xchg
scas
scas
cli
jmp
repnz
xchg
dec
dec
xchg
fdivrp
outsl
cwtl
and
xchg
call
jge
rcll
lret
pop
insl
push
jmp
cmp
dec
notl
stos
pop
pop
ljmp
insl
jg
or
in
xchg
roll
push
add
jne
xor
popa
and
xchg
cmc
mov
test
mov
movsl
icebp
push
add
jne
xor
popa
and
fprem1
fxam
mov
roll
push
flds
jne
xor
inc
daa
jno
add
mov
roll
stos
mov
inc
leave
lea
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
in
gs
push
scas
inc
mov
ja
popa
push
pmulhw
aam
lds
mov
movsb
fiaddl
gs
push
scas
inc
mov
adc
pmulhw
das
lds
mov
movsl
pop
xchg
sub
gs
push
scas
inc
mov
adc
cmpsl
in
mov
mov
xor
rcrb
adc
cmp
xor
out
fidivrl
mov
ret
mov
and
add
xor
sub
lahf
jmp
sbb
mov
dec
mov
cmp
popf
aas
jge
lock
lea
and
xor
push
sahf
scas
jo
cmc
repnz
sub
ret
gs
push
nop
shl
lcall
xor
pusha
add
jae
shrb
mov
mov
pusha
push
sub
sub
jl
pause
dec
test
vcvtpd2dqy
mov
lea
gs
rolb
in
push
in
lcall
mov
pop
movsl
cwtl
xchg
jnp
jle
gs
push
scas
inc
mov
adc
pmulhw
aad
lds
mov
movsl
pop
xchg
outsl
test
add
and
jbe
inc
fists
pusha
scas
popf
push
imul
jmp
sub
or
mov
cmpsl
ja
push
dec
mov
xor
or
int3
ss
fidivl
fists
pmulhw
aad
lds
mov
movsl
pop
xchg
outsl
test
gs
push
scas
inc
mov
adc
pmulhw
aad
lds
mov
movsl
pop
xchg
outsl
test
pusha
fcomps
arpl
icebp
cmp
in
mov
cli
mov
repnz
mov
and
inc
int
mov
andl
mov
cmpsl
cmpsl
or
add
xor
pop
adc
mov
xlat
mov
fcoms
push
jnp
xor
sub
repnz
ret
lret
into
mov
jmp
pop
cmp
sti
loope
flds
aam
cmc
lds
outsl
dec
imul
sub
ljmpw
out
jns
in
push
xor
loopne
mov
enter
loope
pop
push
adc
inc
pop
aas
lret
or
push
es
push
jle
or
push
ret
jmp
ficomps
mov
dec
pop
out
jae
adc
push
mov
mov
sub
xor
es
out
lock
cmp
das
sbb
xchg
xlat
cli
dec
pop
pop
imul
call
dec
sbb
bound
rorl
test
cmp
jmp
jb
push
cs
pop
ret
dec
add
pop
jl
pushl
xchg
push
enter
and
jnp
sub
or
add
cltd
bound
call
negb
sbbl
dec
pop
sbb
or
xor
cmovae
in
jg
adc
and
sbb
mov
aam
test
dec
enter
sbb
stc
ret
insl
xor
xchg
sbb
stc
pop
sub
mov
and
jb
test
lcall
ret
das
pop
mov
aaa
loop
push
jb
add
push
sub
test
aaa
mov
sub
bound
mov
fildll
divl
dec
test
mov
outsb
cmp
dec
pushf
inc
out
arpl
inc
cs
scas
out
inc
insb
ljmp
jo
out
je
cmp
mov
cmpl
movsl
std
xchg
incl
lcall
mov
push
push
jnp
lds
mov
mov
and
int
scas
ds
mov
push
in
push
mov
lahf
mov
adc
mov
adc
lahf
jbe
cli
fstp
into
mov
adc
jmp
daa
cmp
ja
push
bound
sbb
push
out
in
cmp
and
pop
aaa
or
pop
mov
stc
pop
ljmp
scas
repz
xchg
pop
out
imul
idivb
mov
and
daa
mov
out
rol
mov
push
cmp
stos
or
outsl
int3
rcr
push
jb
es
xor
xchg
mov
and
mov
je
hlt
call
sarb
sar
ja
daa
xor
pop
je
sub
dec
and
jg
test
jbe
addr16
cld
mov
pop
int
sti
repz
xlat
je
xlat
hlt
popf
ficoml
rorl
and
jb
mov
dec
shrl
and
xchg
fldl2t
and
das
mov
in
sbb
add
cmp
sub
mov
pop
fidivl
loop
mov
mov
cwtl
and
sub
mov
enter
adc
nop
sub
mov
out
enter
or
addr16
mov
popa
mov
cmp
jb
mov
pop
sub
loope
lcall
adc
mov
cwtl
mov
xchg
cwtl
xchg
in
and
imul
or
mov
xor
rcrb
in
in
insb
outsl
push
lods
inc
out
stos
xchg
pop
aam
call
repz
push
mov
fisttps
jae
mov
xor
inc
add
dec
sub
imul
loopne
rolb
mov
push
or
fmulp
in
pop
sarl
enter
xchg
fsubrs
add
mov
adc
jb
xor
push
rdpmc
test
and
xor
test
and
push
xchg
or
out
jno
dec
mov
sbb
mov
sbb
stc
mov
insl
mov
add
les
xlat
lea
mov
cmp
and
sub
fs
add
movsb
adc
daa
fcoms
ret
aad
inc
cmp
dec
arpl
cmp
pushf
out
lods
and
mov
stc
adc
lea
dec
pop
ja
sub
jns
dec
aad
push
pushf
scas
push
jae
inc
stos
inc
out
test
or
insb
mov
cs
aad
jle
fs
repnz
mov
xchg
lock
adc
stos
pop
dec
lahf
sub
sbb
and
mov
push
ret
hlt
pusha
fwait
cmp
loope
fwait
popa
ja
cmp
mov
mov
pop
fcompl
jp
cli
xor
lahf
pushf
fs
adc
loope
mov
sahf
xchg
stc
push
cmc
iret
fdivrl
adc
add
xor
pop
lods
add
xchg
call
xchg
subl
jmp
int
and
mov
jl
cmp
jge
sbb
sahf
nop
shrb
es
dec
mov
or
out
arpl
sub
pushf
xchg
dec
aad
pop
mov
push
int
andb
adc
aaa
or
xor
jg
xlat
jno
xchg
es
sbb
cmc
repnz
add
int
xchg
test
jle
imul
dec
es
mov
sbb
xchg
push
sub
filds
dec
sarb
das
cmp
test
fistl
insb
gs
daa
ficoml
in
inc
push
aam
js
mov
push
lea
cmc
mov
xor
fst
cld
xchg
shrl
fldl
push
shlb
xor
lods
movsb
xchg
repnz
mov
ja
cmpsl
xor
jl
call
daa
nop
fiaddl
lock
push
into
pop
or
sub
adc
cs
pop
clc
shrb
fs
aaa
or
lea
movsl
mov
jp
mov
fcoms
dec
nop
out
fucomi
imul
cmp
in
mov
ret
bound
rcll
movsl
pop
jnp
cmc
mov
and
dec
aas
inc
scas
inc
xchg
sub
mov
adc
add
push
pop
mov
xchg
adc
int
je
add
cmc
mov
in
pop
out
ss
outsl
ja
rorl
jns
fists
mov
push
mov
jo
jne
pop
daa
scas
fiadds
sub
stc
popf
in
xchg
dec
jns
aaa
cmp
xor
lods
in
testb
out
push
mov
mov
mov
xchg
sub
dec
adc
lret
jmp
jne
test
scas
vcvtpd2dq
cmc
js
sbb
pop
out
pop
pop
push
add
jo
mov
inc
dec
xchg
into
das
mov
lcall
fildll
out
rcrb
fisttpll
inc
pusha
icebp
jnp
mov
repz
add
repnz
lock
std
mov
jbe
mov
dec
mov
jle
repz
jmp
mov
pop
into
push
popa
in
addr16
bswap
lret
shr
fisubs
push
test
data16
mov
xor
pop
jge
jmp
mov
lods
or
cmp
mulb
loope
mov
inc
pop
jp
or
cmpb
fs
repnz
jns
ret
mov
mov
jnp
nop
xchg
lcall
sbb
jle
into
leave
and
lcall
jl
pop
fucomip
jns
es
cmp
inc
sar
xchg
clc
loopne
vmptrst
jbe
sahf
fadds
pop
dec
js
movsl
xlat
mov
in
mov
jb
je
inc
repz
mov
je
or
out
insb
xor
xor
popa
xchg
daa
xchg
popa
dec
lea
stos
push
sbb
dec
xchg
incb
daa
stc
xor
and
xchg
test
aaa
dec
icebp
sahf
mov
and
cs
int
cmpl
pop
xchg
outsb
aam
iret
loopne
pop
sbb
jne
cmp
push
arpl
jae
sarl
orl
and
popa
ja
negb
push
adc
pop
jne
orl
in
mov
mov
adc
xchg
push
ds
mov
lcall
push
jg
xchg
test
push
push
sub
adcb
inc
mov
test
add
mov
or
scas
mov
mov
lea
xor
roll
or
mov
push
insl
sub
andb
pushf
jge
stos
sahf
pop
fsubl
jo
xlat
lea
es
mov
jno
popf
cmpsb
cmpsb
movsl
mov
lock
mov
fs
xchg
add
mov
aaa
xor
fldcw
add
loop
and
adc
cli
mov
jge
repz
add
jmp
fildl
cmc
subb
loop
rclb
fstps
outsl
fimuls
add
loope
into
xchg
inc
and
and
and
leave
xchg
jecxz
dec
inc
inc
inc
mov
mov
orb
jno
sbb
repz
xor
jge
jae
nop
lods
popf
loopne
pop
daa
mov
inc
in
dec
lods
lret
comiss
or
out
in
cmpsb
aad
sbb
pop
dec
aam
das
or
add
lahf
mov
mov
ret
loope
mov
cmp
pushf
xor
out
push
dec
add
dec
mov
mov
data16
stos
cld
sbb
adc
outsl
outsl
outsb
addr16
pop
fdivs
test
sub
fbld
fwait
and
and
or
push
rclb
jb
ds
and
pop
dec
sub
int3
out
bound
pop
addb
lcall
jg
jb
cltd
aas
mov
xor
mov
out
je
mov
mov
lret
mov
dec
lea
xor
cmp
aad
not
lcall
mov
nop
lock
mov
pusha
addr16
xor
push
repnz
dec
int3
sbb
decb
pushf
inc
leave
enter
mov
xchg
cltd
arpl
mov
fld
pop
fbstp
mov
je
xchg
mov
mov
sbb
fnstsw
outsl
ljmp
lret
lret
ret
dec
mov
out
mov
fidivl
popa
je
or
mov
mov
jnp
shl
ret
data16
dec
cmp
jg
push
ds
and
push
mov
push
xlat
mov
and
jne
xchg
push
xor
jp
outsl
push
int
in
push
xor
flds
fstps
shll
cmp
xorb
add
adc
test
mov
xchg
mov
push
lret
cmc
jnp
jne
ss
shrl
cmp
lods
and
jb
bound
ret
call
push
mov
mov
mov
leave
cwtl
fwait
mov
cmpsl
adc
std
add
mov
bound
push
sbb
lods
gs
add
cmp
mov
aas
scas
xor
test
cli
shrl
mov
jp
cwtl
pop
lds
icebp
into
fstps
imull
icebp
clc
cmpsl
fadds
inc
test
mov
jmp
test
gs
movsb
std
or
inc
repnz
cmp
pop
mov
dec
sti
inc
stc
xor
cmc
jge
and
lret
loope
push
lcall
push
cmp
push
das
mov
add
int3
push
xor
pop
dec
in
ret
jl
fs
xchg
hlt
and
ret
dec
subl
fst
push
pop
hlt
cmpsl
dec
add
add
mov
add
fucomip
sbb
arpl
sub
xchg
hlt
jne
or
xor
add
sar
movsb
add
pop
jmp
xchg
push
xchg
das
cmp
icebp
or
imul
test
aad
lahf
fisttps
push
xlat
dec
cmpsl
pop
and
pop
adcb
fbld
mov
adc
mov
adc
jle
movsb
xchg
dec
dec
cmpl
iret
lahf
popf
sbb
mov
pop
jns
rcrb
mov
dec
movsb
sbb
popa
cld
cmp
stos
pop
xlat
inc
or
ficoml
jp
lcall
mov
or
pop
inc
movsl
in
fwait
pop
outsb
mov
fnstsw
test
or
inc
scas
jp
jns
jecxz
ret
mov
mov
cs
or
lcall
stc
pop
cmp
sbb
hlt
xor
sub
je
lods
mov
out
fs
lret
fnstcw
testl
test
repz
sub
sbb
insl
sub
imul
push
lret
jnp
add
mov
pop
jns
in
lea
xchg
push
mov
fiadds
mov
add
jnp
mov
fldt
loopne
jne
lret
stc
aas
testb
and
aam
mov
ret
sub
pop
lods
mov
push
mov
xchg
adc
loopne
test
push
xor
fwait
dec
ds
imul
push
std
gs
adc
repnz
ljmp
adc
and
loopne
cmp
es
inc
adc
loope
faddp
sub
lahf
xor
jg
dec
cmp
pop
mov
cmp
mov
xchg
das
loopne
jno
ror
xlat
add
scas
loop
aad
inc
out
xorl
popa
lret
sbb
push
not
cmpsl
aad
mov
fldl
mov
pop
in
das
push
inc
mov
fcoms
leave
mov
dec
lret
in
adc
jne
sti
mov
or
jge
and
cld
lea
scas
dec
dec
js
lcall
imul
incl
sbb
in
mov
rcll
mov
push
cmp
dec
sbb
mov
jmp
iret
or
push
cmpsb
mov
mov
mov
aad
jp
stos
div
add
or
cmpsb
sub
pop
iret
cli
sub
negb
call
mov
les
sbb
mov
xchg
sar
dec
and
jo
xabort
xchg
add
ds
popf
pop
adcl
popf
movsl
rorl
dec
and
shrl
into
sub
pop
hlt
fcoml
push
lods
mov
insl
dec
cmpsb
fdivl
pop
mov
in
mov
outsb
xor
loope
pop
in
inc
test
jb
js
mov
leave
pop
aas
in
mov
push
movsl
outsl
test
mov
sbb
inc
dec
cmpsb
jae
push
inc
jecxz
dec
mov
sub
xor
adc
fwait
rcl
xadd
lret
clc
xchg
in
mov
bound
cmp
or
jl
mov
loope
into
or
je
cwtl
lods
mov
mov
and
dec
sbb
push
adc
and
or
ds
rdmsr
cmpsl
jle
or
pop
mov
jmp
mov
lods
les
sbb
repnz
movsb
cmp
enter
push
pusha
fisubrl
inc
outsl
mov
jb
rorl
hlt
test
jno
das
mov
dec
fimuls
xor
or
pop
sbb
lcall
cmp
ret
lret
mov
inc
sub
inc
xor
and
inc
mov
clc
rcrl
sub
arpl
arpl
repnz
stos
push
mov
gs
aad
call
mov
xor
in
cmp
fmulp
nop
jle
xchg
clc
std
outsb
ds
jl
or
dec
add
inc
lahf
sahf
or
pushf
xchg
xchg
push
pop
rolb
pop
adc
jecxz
xchg
add
jp
pop
scas
in
xchg
imul
lods
loope
dec
ret
jmp
and
xchg
sub
clc
cmp
dec
je
mov
in
imul
add
test
pop
cwtl
mov
mov
and
cmpsb
dec
cmp
in
rcrl
xor
aam
test
sub
inc
jge
out
ss
dec
dec
or
dec
cmp
sahf
push
notl
popf
nopl
fs
aas
push
gs
sub
stos
push
mov
js
cmp
sahf
ljmp
jno
jmp
jp
push
jge
ss
scas
xor
xchg
aaa
pop
adc
lock
dec
mov
mov
movsl
push
test
mov
xchg
xchg
pop
in
mov
inc
sarl
leave
mov
mov
pop
into
mov
xor
pop
xor
roll
push
cmp
inc
xor
and
out
sub
dec
add
jbe
aad
jae
mov
mov
mov
cli
pop
xchg
jge
dec
fldcw
pcmpgtw
mov
orb
mov
and
sub
jp
or
movsl
adc
ficompl
sti
xor
idivl
xor
sarl
xor
cltd
dec
into
xchg
jg
and
pop
mov
aad
xchg
dec
pop
daa
pop
cmpsb
push
fildl
dec
pop
or
pop
dec
pop
and
cmc
sbb
aam
scas
fimuls
out
mov
ds
inc
adc
sbb
call
cmc
jle
sbb
mov
mov
jecxz
insl
sahf
sti
add
mov
add
and
jns
pop
lea
leave
inc
xchg
xchg
and
mov
idivl
or
mov
enter
lcall
pop
pop
les
pop
mov
mov
inc
adc
cmp
sbb
mov
jmp
outsb
lods
call
adc
das
aad
movb
and
je
out
jns
mov
mov
and
aam
push
xchg
out
lcall
jo
pmullw
xchg
mov
imul
inc
sub
and
mov
add
test
jnp
adc
cmp
mov
cmp
sarl
or
leave
addl
repnz
subl
clc
js,pt
jno
daa
testb
adc
lahf
iret
outsl
and
add
jo
stos
dec
jmp
mov
sub
push
repz
testl
repnz
lea
fimull
jnp
sub
pop
lods
in
jo
xchg
imul
xchg
and
mov
cmp
aas
out
lock
cltd
and
push
clc
xor
int
sbb
jmp
xor
pop
sbb
dec
int3
push
arpl
clc
fiadds
stos
mov
icebp
push
insb
mov
xor
inc
pop
adc
rorb
xor
sbb
pop
sbb
out
lods
vorpd
xor
fs
xchg
jnp
aaa
pop
xchg
push
xchg
push
adc
or
bound
mov
icebp
ficomps
cmp
dec
cmpb
xor
jno
leave
rcrb
subb
ljmp
lea
mov
add
out
sub
xchg
fidivrs
imul
sub
call
in
pop
lcall
adc
jno
push
mov
test
sub
jb
mov
mov
mov
test
mov
sbbb
push
adc
popa
jbe
inc
add
sub
nop
pop
pop
fs
test
cmp
xor
push
jl
jle
mov
inc
mov
mov
js
xchg
lods
pop
test
test
mov
int
addr16
pop
and
pusha
mov
dec
jne
push
ror
sbb
xchg
add
mov
cli
ret
inc
sub
out
clc
inc
cmp
xchg
jne
mov
in
orb
dec
lea
stos
push
call
aas
sub
sub
mov
jg
mov
lret
mov
repnz
fnstenv
sbbb
shll
mov
je
and
scas
dec
pushf
adc
dec
and
fcmovne
icebp
subl
in
xchg
repz
pop
dec
mov
pop
push
mov
dec
sub
pop
aam
mov
pop
inc
jl
loopne
je
leave
int3
cmp
into
in
je
mov
ret
aaa
or
out
pop
jp
pop
andl
incl
aas
xor
cmp
mov
scas
xchg
test
and
xchg
ret
cli
leave
pop
adc
jle
add
and
xchg
lahf
adc
xor
call
into
adc
cmp
dec
xchg
push
not
lcall
cmp
stos
mov
or
xchg
push
jae
mov
push
jmp
and
cmp
ret
cmp
and
nop
mov
jno
clc
mov
rorb
fwait
cltd
dec
mov
mov
dec
pop
mov
adc
out
push
jae
push
inc
scas
in
cmpb
testl
inc
pop
dec
cmp
scas
xchg
dec
and
inc
and
push
test
dec
sbb
faddp
nop
movsb
push
pop
lods
aam
popa
jns
mov
mov
data16
jb
mov
fsubrs
add
test
popf
mov
dec
push
dec
adc
xchg
and
cmp
lret
adc
shlb
push
cmp
cld
ficomps
cmpsl
call
outsl
popa
ret
or
mov
jle
pop
das
sbb
mov
mov
jge
and
pop
ss
das
pmulhuw
inc
pop
sub
adc
jnp
jmp
inc
xchg
ret
xor
data16
lahf
arpl
and
push
pmulhw
aad
lds
mov
movsl
pop
xchg
outsl
test
gs
push
scas
inc
mov
adc
pmulhw
aad
lds
mov
movsl
pop
xchg
outsl
test
gs
push
das
inc
mov
adc
in
aad
lds
mov
movsl
pop
xchg
outsl
test
fs
push
scas
inc
mov
adc
pmulhw
ret
mov
addl
in
stc
fucomp
int
pushf
cli
ret
cltd
rol
lea
dec
dec
sbb
sub
leave
fucomp
int
mov
test
insl
sbb
pop
or
cmp
shr
loope
icebp
aam
movsb
nop
mov
test
push
adc
jl
inc
dec
dec
inc
or
mov
xchg
push
jne
mov
push
dec
mov
pop
test
insl
cmc
adc
loope
push
fldenv
stc
xor
jbe
dec
pop
pusha
add
xchg
dec
movsl
mov
movsb
inc
push
add
push
subb
xlat
jmp
lods
stos
jmp
mov
sub
xchg
enter
sub
or
std
mov
lds
xchg
jns
xor
sarb
shlb
ss
and
push
test
lock
insb
sbb
mov
or
cmp
leave
or
and
add
addb
jl
jns
dec
push
pop
sub
stc
int
xlat
mov
mov
inc
gs
jne
inc
jo
add
xor
cwtl
lods
in
pushf
fmull
ret
mov
adc
adc
jne
insl
jle
sbb
leave
in
pushf
lods
jmp
in
into
out
aad
in
loope
add
or
sub
jl
jp
dec
jno
push
pushf
mov
mov
pop
jge
insl
jns
imul
sbb
leave
in
stc
fucomp
int
mov
test
insl
jns
imul
sbb
or
cld
sbb
push
and
gs
cmp
xchg
pop
inc
movsl
inc
mov
fs
xor
push
push
mov
lock
retw
jne
divb
push
rolb
rcl
dec
icebp
data16
repnz
inc
ret
aam
mov
fdivrl
les
cs
into
inc
pop
dec
cmpsl
mov
cmp
pop
icebp
test
add
cmpsl
adc
adc
jns
cltd
or
push
xor
mov
enter
and
aas
popf
lahf
test
xor
clc
jg
sbb
and
jmp
mov
adc
push
scas
add
jae
mov
fnsave
jne
sub
jle
inc
cmc
xor
push
mov
inc
push
dec
cld
and
fnstenv
dec
das
aam
in
xor
mov
adc
fs
mov
cmp
in
les
repz
lods
int3
adcb
lods
jmp
dec
ud1
out
out
mov
sub
aas
dec
push
push
pop
mov
fimull
inc
test
push
pop
and
ljmp
mov
xchg
xchg
push
pop
ficoml
repnz
in
sti
add
nop
bound
or
dec
xchg
or
movsl
fisubs
es
movsb
and
clc
jns
stc
push
mov
sub
stos
test
pop
jo
lds
mov
xchg
dec
sbb
fldenv
mov
lcall
mov
xchg
adc
mov
jg
out
pusha
jge
dec
fcoms
inc
adc
mov
inc
inc
adc
inc
stos
lret
and
aam
out
mov
stos
mov
push
call
push
push
pop
lret
mov
mov
pop
mov
jmp
xor
adc
push
lcall
loop
ror
xchg
aaa
bound
add
inc
mov
sub
inc
xorl
addr16
push
jl
inc
lret
call
imul
popf
mov
mov
les
shll
icebp
loope
icebp
fnstcw
stos
xchg
xchg
add
rorl
dec
lret
add
frstor
mov
dec
jbe
in
in
push
nop
lret
ror
inc
adc
mov
lcall
stos
mov
pop
mov
stos
dec
in
daa
pop
mov
in
add
fcoms
sbb
push
pop
stos
xor
cs
in
je
dec
cmp
test
jnp
mov
pop
xchg
push
pop
cs
in
das
pushf
sub
cmc
jecxz
cmp
xor
sbb
push
cmp
adc
in
xorb
in
imul
popw
xchg
jmp
mov
cmp
xchg
rcrl
push
cmp
jae
lcall
pop
mov
in
dec
jg
out
inc
insb
add
mov
xchg
mov
xchg
push
xor
repz
cli
add
inc
in
cmc
ret
inc
cmp
push
or
mov
cmpsb
insl
push
fcmovu
out
shl
mov
jbe
mov
push
fstps
push
dec
jmp
js
mov
xchg
mov
ljmp
popf
push
ss
fwait
pop
repnz
lahf
aam
adc
int3
mov
cli
movsb
in
outsb
shl
fcomps
out
jne
cmp
push
mov
iret
test
and
jl
or
xor
nop
pushl
andb
mov
mov
rcrb
inc
repnz
data16
mov
cmc
push
lock
fmuls
and
outsl
adc
out
rcrl
and
and
cmc
and
xor
inc
dec
cli
jne
adc
xchg
ret
mov
jae
mov
dec
cmp
xor
cwtl
sub
dec
jnp
dec
cmpsb
or
mov
pop
fildll
mov
inc
dec
out
cmc
out
inc
aam
cwtl
inc
mov
test
mov
faddl
daa
mov
js
das
add
aas
mov
lcall
movsl
mov
push
sub
inc
jns
jl
ficoml
pop
and
into
add
lods
xor
sarb
stos
stos
test
cmp
daa
xchg
mov
push
push
clc
and
call
in
push
mov
enter
or
repz
cmc
mov
repnz
jne
out
jno
lahf
into
and
inc
stc
add
outsb
popa
pslld
cmpsw
lea
stos
cld
cmc
decb
push
mov
and
repz
xchg
mov
cmp
lods
daa
sahf
ja
push
adc
shll
insl
ljmp
scas
outsb
mov
push
outsl
xchg
adc
and
scas
push
xchg
jbe
cld
jp
rorl
outsl
fcomp
icebp
movsl
and
xchg
pushl
movsl
xchg
adc
xor
and
es
repz
mov
or
push
aam
test
sbb
mov
cmp
ds
xor
mov
stos
push
movlps
mov
jge
cld
jnp
daa
and
popf
test
ret
je
sbb
sbb
dec
aas
mov
cmp
loopne
jp
and
push
mov
sub
sub
arpl
pop
movsl
xor
pop
jp
inc
sbb
inc
sbb
cmp
dec
test
or
cltd
int3
dec
outsb
cli
or
in
xchg
imul
enter
xor
push
popfw
xor
push
xchg
inc
jle
icebp
pop
mulps
sub
jno
insl
arpl
sbb
out
sub
add
das
fildll
das
mov
bound
sti
mov
fs
push
dec
mov
rolb
xlat
xor
pop
lahf
mov
xchg
out
iret
sub
adc
dec
mov
mov
out
sub
push
lds
push
cmp
push
cmp
movsl
into
imul
jecxz
xor
push
xlat
xchg
add
mov
fistl
adc
xor
cmp
add
xchg
aam
push
fistl
or
jo
pop
aas
or
or
inc
hlt
iret
popa
popf
pop
push
sub
shlb
inc
icebp
test
jmp
or
stos
adc
incb
loop
jp
sar
sti
testl
xchg
push
pop
add
and
xor
adc
call
ds
xchg
xor
or
inc
loope
ror
and
sub
mov
jmp
sub
mov
fildll
in
outsb
rcll
negb
xor
jle
in
aad
mov
push
aas
ja
aad
ljmp
push
bound
sub
popa
aaa
iret
xchg
out
insl
fcoms
orb
in
cmp
out
mov
cmp
ss
fiaddl
int3
subl
lods
push
roll
loope
out
jmp
nop
ljmp
shl
lcall
adc
sub
mov
daa
dec
jae
push
push
mov
dec
in
push
inc
xor
inc
ret
mov
jle
sbb
cmp
cmc
loope
dec
xchg
or
in
adc
out
push
inc
sbb
or
mov
pusha
sti
mov
in
out
stos
sahf
push
fwait
jnp
xchg
or
loop
mov
add
fsqrt
or
jbe
sub
adc
outsb
mov
lock
mov
sub
loop
cmpsl
mov
xor
cmovbe
sbb
sub
and
mov
add
in
jecxz
pushf
xor
in
push
in
xchg
lods
and
push
jns
mov
lcall
xor
cmc
je
mov
or
lock
ret
or
out
es
xchg
jae
or
sub
push
or
or
ss
loopne
xlat
cltd
cmp
bnd
add
daa
jnp
lods
loop
push
pusha
jbe
push
les
mov
frstor
lret
mov
mov
popf
orl
mov
adc
subl
notl
sub
xchg
movl
fwait
js
jne
shl
stc
push
pop
test
mov
dec
or
mov
stc
outsb
loope
fisubs
in
in
sarb
arpl
mov
lret
xor
lcall
aad
cwtl
add
mov
sbb
mov
out
inc
ljmp
jp
clc
test
jmp
popf
loope
inc
rorb
or
pop
and
mov
orl
popf
lret
xlat
add
xchg
and
push
mov
adc
ss
dec
and
pop
sub
push
inc
out
jecxz
loop
mov
loope
les
shlb
ja
sub
nop
movsb
leave
sbb
inc
dec
and
mov
or
or
cmpsl
mov
in
rol
and
adcl
sub
loopne
lea
pusha
jmp
out
popl
dec
scas
ja
les
mov
cltd
jecxz
xor
add
xchg
push
fisttpl
frstor
movsb
cmp
jne
add
or
in
pop
fdivl
mov
je
push
or
gs
out
nop
hlt
out
or
push
int3
cmp
xchg
mov
xchg
ja
mov
push
js
addr16
fmuls
pop
in
pop
push
out
fdivs
mov
scas
xlat
mov
cltd
inc
repz
aaa
jmp
dec
fimuls
and
push
mov
inc
mov
add
and
sub
or
and
jle
mov
cmc
inc
int
out
test
jnp
mov
xchg
sbb
jp
or
dec
jge
jmp
inc
jg
test
cmpsl
dec
sbb
movsl
daa
ds
cli
sbb
or
mov
cwtl
dec
add
pop
shlb
sti
push
insb
xchg
stc
enter
popa
jae
pop
mov
dec
xor
bound
stc
push
sqrtps
mov
lods
xchg
mov
lret
cmp
aam
fcoms
bnd
cmc
fstl
dec
or
or
jno
movsl
xchg
inc
pop
andl
push
dec
enter
mov
mov
adc
icebp
xor
movsb
jns
push
cmc
movsl
pop
pushf
cmpsl
cs
outsb
repz
inc
or
jge
jmp
jle
jp
out
fs
in
jae
sbbb
lds
les
stc
pop
out
jp
lahf
repz
addr16
lcall
cmpsl
cltd
dec
int
mov
mov
xchg
or
xor
cmp
jp
push
mov
icebp
jl
pop
add
call
or
insl
fs
pop
js
sahf
hlt
mov
ss
les
dec
mov
adc
ja
fs
dec
or
mov
xor
in
xor
xchg
sub
enter
hlt
mov
fadd
dec
out
cltd
stc
int
sbb
les
int
mov
and
adc
pop
mov
dec
jno
jbe
int
sub
pop
scas
aad
pop
and
sub
insl
test
imul
adc
enter
add
cltd
and
lcall
mov
xchg
sbb
popa
aaa
pop
std
adc
cmp
icebp
leave
in
es
mov
aam
adc
sbb
stc
jecxz
jno
fstl
adc
and
fdivl
loopne
mov
sbb
xlat
idiv
sarl
push
jne
cmpsl
xchg
push
aad
lds
mov
xor
fsubrl
add
push
mov
xchg
mov
mov
jb
andl
mov
push
push
fisubl
cltd
movb
arpl
dec
pop
sbb
xor
or
fildl
stos
dec
test
sub
lcall
sub
jl
inc
outsl
cli
jecxz
xor
or
out
push
es
imul
xor
xor
push
xchg
insb
mov
addr16
add
insl
inc
and
arpl
or
mov
xor
std
sub
imul
jle
mov
pop
and
cs
and
fiadds
fs
les
pop
push
pop
testl
xchg
insl
loope
inc
fidivl
outsl
cmp
aad
es
xor
inc
testb
cli
inc
stos
xchg
mov
mov
push
pop
sahf
in
das
ret
fcompl
inc
cmp
cmp
lea
fxch
push
inc
mov
aas
and
xor
jo
in
jno
fsubrs
cmp
shl
stc
jns
scas
mov
rolb
mov
xchg
dec
loopne
imul
jb
jne
clc
add
add
sub
dec
addl
lahf
icebp
cmpb
jne
mov
mov
pop
bound
ds
sbb
inc
xor
fldenv
cmp
mov
popa
add
fnstcw
cmpsl
cmp
mov
xor
rcll
mov
mov
sarb
mov
jle
leave
dec
dec
fisubl
aad
sbb
jg
lods
sbb
lcall
es
sub
jg
insl
or
mov
cld
sti
sbb
lds
in
imul
fwait
xor
sbb
xchg
test
fistl
dec
lds
ffreep
in
fwait
add
ficompl
loope
sbb
mov
xor
dec
dec
iret
pop
aam
loope
or
and
mov
adc
daa
adc
aad
out
inc
adc
pop
and
adc
adc
or
inc
into
pusha
or
pop
inc
cmp
cmc
jl
popl
pop
xor
or
icebp
fdivrl
adc
popf
dec
xor
cli
and
inc
mov
or
mov
fdivp
out
sbb
mov
xlat
std
mov
adc
and
push
outsb
fwait
lret
sbb
or
sbb
hlt
jbe
stc
mov
sub
push
xor
loopne
pop
jae
mov
clc
push
adc
cmp
jns
std
inc
fwait
ja
std
lahf
clc
out
cmpsl
lret
lret
or
fcmovbe
mov
out
mov
lret
cmc
mov
sbb
adc
shrl
fcmovnbe
imul
push
outsl
insl
jp
dec
adc
out
adc
mov
mov
adc
push
xchg
fdivs
bound
subl
xchg
cltd
mov
inc
adc
adc
xchg
popl
pop
ss
cld
sub
test
in
jns
adc
sahf
sti
aam
mov
cld
xchg
arpl
das
dec
push
add
xor
sbb
dec
or
cld
sbb
movsl
adc
jg
xor
or
jecxz
ficoms
dec
ror
repz
in
dec
divl
lcall
cmp
aaa
push
or
cli
and
aaa
cmp
aam
mov
insl
adcl
mov
lret
mov
ja
inc
and
jne
dec
loope
jae
add
fwait
sbb
and
dec
mov
xor
xchg
test
rcrb
iret
pop
and
loopne
fildll
xor
adcl
mov
xchg
lock
xor
nop
int3
mov
mov
and
add
les
or
stc
fsts
inc
mov
loop
push
mov
mov
jo
or
mov
stos
adc
mov
mov
ret
mov
and
sub
sbb
adc
in
jge
lods
pop
nop
or
mov
dec
rclb
enter
jno
lcall
jbe
or
adc
loope
mov
aas
dec
cld
sbb
mov
daa
push
sbb
mov
pusha
inc
push
xor
push
cmp
cmovl
in
dec
out
or
jnp
jecxz
sbb
addr16
add
sbb
movsl
mov
out
nop
inc
adc
cmp
lds
push
das
mov
mov
xor
jg
mov
xchg
faddp
mull
dec
fdivs
and
ljmp
mov
pop
cmp
cmp
in
add
inc
cmc
jae
lcall
mov
jo
filds
icebp
push
lods
adc
jb
subb
fcomip
in
jmp
xchg
sub
jb
imul
mov
movsl
sub
dec
stos
lahf
mov
int
push
xchg
xchg
pop
lret
js
mov
pop
aam
insl
push
movsb
movsb
cmc
push
outsb
or
cmp
cld
in
outsl
mulb
pop
jns
or
mov
xlat
loop
push
dec
dec
cmp
cwtl
popa
inc
outsl
xor
test
fwait
pop
adc
pusha
mov
pop
push
mov
xchg
and
add
ljmp
pop
js
pop
sbb
fsubrl
scas
sti
out
push
mov
jae
push
in
into
aas
push
fxch
in
pop
div
aad
std
clc
push
adc
mov
movsl
rcll
adc
enter
je
loop
sarl
pop
or
dec
jno
push
pushf
and
ficompl
decl
out
bound
ljmp
jbe
ret
sbb
xchg
pop
addb
jmp
int3
cmp
fcmovnbe
xchg
or
loope
rorl
sbb
mov
jne
lahf
mov
jb
aas
mov
mov
sbb
mov
mov
inc
sub
xchg
es
sbb
mov
repz
mov
cltd
adc
movl
sub
inc
mov
lahf
loope
in
test
test
and
pop
loopne
sub
cmp
inc
int
test
imul
js
fidivrl
imull
adc
lods
jno
std
sbb
mov
push
clc
ljmp
or
xchg
cmp
ds
dec
push
int3
jmp
jae
adc
cmp
cmovo
xor
movsb
jle
aas
test
jbe
sahf
cmp
test
add
out
push
in
inc
ret
xchg
loopew
testl
cmp
lcall
dec
push
push
aam
setbe
ljmp
cmpsl
pop
cmp
jle
sub
inc
ljmp
mov
or
into
adc
ss
mov
ret
aaa
dec
lods
fsubrl
jae
test
mov
or
ret
stc
call
adc
fsubl
push
cmpl
ljmp
mov
mov
imul
dec
push
ss
sbb
pop
and
jae
in
or
stc
lea
mov
pop
iret
imul
xchg
aam
mov
jo
jcxz
push
mov
sub
rol
dec
jp
outsb
xorl
mov
stc
push
cmp
daa
push
pop
sahf
mov
aas
into
jge
add
sbb
pusha
imul
cmp
inc
adc
mov
lahf
call
enter
out
hlt
dec
pop
add
in
mov
addr16
dec
scas
jbe
pop
in
cltd
addb
pusha
jo
add
jbe
out
add
lahf
shl
mov
adc
jge
aaa
ret
sub
xchg
or
daa
fldt
and
movsb
pop
ret
sahf
mov
imul
shlb
std
scas
fistps
inc
test
sbb
hlt
xchg
xchg
ficoms
jecxz
mov
rol
push
push
push
inc
xor
mov
leave
and
pop
cwtl
enter
fisubl
sbb
lods
inc
dec
lret
out
ds
jecxz
popf
mov
fistl
mov
cmpsb
adc
jle
mov
jl
aam
loope
adcb
test
out
mov
push
xchg
pop
popa
cmp
cmp
nop
or
rcrb
jo
add
mov
cs
add
xchg
mov
outsl
aam
test
dec
jo
negl
call
stos
clc
pop
testl
insl
je
test
in
or
xlat
jne
adc
push
test
pop
lods
xchg
or
js
les
or
loope
add
xchg
addr16
jecxz
pop
xchg
das
lea
nop
pop
push
outsb
mov
push
fimuls
fnstsw
dec
and
push
shrl
jge
xor
ss
and
cmp
outsb
scas
rcrl
mov
imull
std
xchg
int3
cli
pop
sbb
mov
xor
arpl
insb
js
ror
mov
and
mov
sbb
mov
mov
jnp
ret
and
rclb
out
add
cltd
pop
aaa
lcall
ljmp
shlb
repz
aas
icebp
popf
pushf
iret
xchg
mov
dec
sbb
cli
in
inc
fistpll
push
push
ss
sub
pop
sub
push
add
push
pop
mov
add
popf
lods
mov
lds
mov
mov
add
test
data16
pop
inc
mov
adc
div
sbb
inc
push
repnz
ror
das
cwtl
sub
add
adc
fs
mov
inc
call
out
pop
dec
daa
inc
xor
cwtl
shl
or
cmp
mov
in
inc
push
js
ljmp
aad
dec
mov
dec
cmp
add
mov
or
out
push
mov
add
insb
dec
cmp
mov
inc
mov
movsb
mov
addl
xchg
xchg
outsb
scas
pop
push
sub
scas
sbb
imul
pop
lahf
mov
push
cs
fdivr
pop
mov
sub
imul
shll
je
pop
into
loop
mov
jge
fwait
mov
shl
pop
cmc
xorl
int
mov
test
insl
jns
imul
sbb
leave
in
stc
fucomp
int
mov
test
insl
jns
imul
sbb
leave
in
stc
fucomp
int
mov
test
insl
jge
imul
sbb
iret
fucomp
int
mov
sub
rcrl
cmp
adc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
rolb
push
movsl
cmc
xchg
lock
addb
add
add
add
or
add
add
add
mov
add
add
add
add
add
add
xor
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
or
add
es
add
and
xchg
add
add
add
add
add
enter
inc
add
add
add
add
or
stos
add
add
add
add
leave
add
inc
add
or
add
add
add
add
add
add
add
add
add
or
sbb
movl
jno
or
fadds
sub
xchg
add
add
push
add
add
add
xor
stos
add
or
faddl
adc
xchg
add
add
arpl
and
and
add
mov
jmp
and
faddl
jno
loop
add
scas
add
add
sub
add
add
and
or
into
add
add
add
add
mov
enter
xchg
add
add
add
add
jbe
aas
add
or
popa
add
push
add
insl
add
add
add
test
inc
add
jmp
movl
push
add
add
add
add
add
add
add
add
add
faddl
imul
add
add
lahf
add
add
add
popa
add
add
jbe
mov
add
add
add
sbb
add
add
add
add
add
add
add
or
push
add
add
add
inc
add
sub
movsl
add
add
add
add
add
push
add
add
data16
outsb
add
add
add
add
add
add
add
popl
sbb
popl
sub
or
inc
add
int3
add
add
add
add
inc
add
jbe
dec
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
lea
inc
add
push
add
add
sbb
mov
add
add
add
sub
sbb
or
jo
jbe
inc
add
add
add
xor
je
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
xchg
add
sbb
add
into
add
mov
ret
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
leave
add
add
xchg
add
push
add
inc
add
pop
add
sbb
sbb
mov
or
int3
add
add
add
add
movsb
add
add
add
add
add
adc
or
cmp
jb
add
inc
add
inc
add
add
add
add
jno
mov
add
and
inc
add
add
sub
adc
jbe
add
add
add
add
popl
mov
add
cmp
cld
add
add
mov
add
add
add
add
add
cltd
roll
mov
leave
push
ljmp
xor
lock
ljmp
test
fdiv
jae
test
and
lahf
adc
data16
dec
xchg
fmull
cli
cmp
imul
ja
xor
and
jno
xor
inc
mov
cmp
dec
lods
insl
pushf
push
mov
das
lods
insl
and
fdivl
add
enter
lods
pop
pop
jmp
negb
inc
xchg
xchg
mov
in
stc
cmp
or
cmp
imul
repnz
sub
cmp
shll
stos
loopne
movsl
add
dec
sub
aad
pop
dec
push
data16
or
xchg
bound
xor
cmpl
es
sarb
sub
jb
sbb
push
sub
dec
mov
xchg
dec
rorl
push
cld
push
add
mov
les
push
mov
movsb
aaa
ficoms
mov
and
movsb
jecxz
lret
xorb
jae
mov
mov
lcall
mov
jp
sub
mov
inc
rcrb
xchg
cmp
enter
sahf
jl
push
mov
xor
in
repz
xor
jp
inc
lock
repz
das
pop
sbb
pop
or
cli
sar
shll
insb
nop
pop
stc
loopne
jecxz
adc
shrl
cmp
mov
lock
inc
sub
or
mov
dec
hlt
mov
jae
pop
push
inc
pop
mov
jecxz
ror
mov
psrlw
je
dec
push
movsb
pop
push
pop
adc
pop
nop
lods
cmp
and
jo
sub
jo
sbb
pusha
imul
or
adc
mov
jmp
add
inc
jns
pop
cwtl
int
jae
loope
ficompl
mov
sti
je
arpl
fstpl
pusha
scas
cmp
fsubr
into
ds
mov
aad
out
popf
mov
fwait
sub
fisttps
popf
int3
cmpsb
add
mov
lock
frstor
popf
pop
xchg
int
cltd
mov
mov
add
and
jae
int3
add
push
ret
leave
mov
in
sbb
add
test
scas
mov
or
outsb
popf
add
or
outsb
sahf
xchg
shlb
mov
mov
inc
add
add
out
aas
lods
xchg
adc
pop
push
or
mov
je
or
inc
imul
in
jl
idivb
mov
inc
sub
cmpsl
pop
out
dec
xor
insl
adc
pop
dec
or
pusha
lret
adc
adc
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
