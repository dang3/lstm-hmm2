call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jns
imul
hlt
pop
pop
pop
ja
add
mov
enter
test
leave
jns
imul
cmp
imul
mov
leave
mov
test
leave
jns
imul
cmp
jno
inc
or
pop
lret
in
leave
mov
out
cmp
xor
mov
mov
popf
or
std
adc
aad
and
loop
add
repnz
add
insb
inc
mov
mov
test
into
flds
sub
popa
scas
pop
inc
cmp
mov
pop
imul
and
aam
cld
daa
mov
jns
imul
push
pop
cmp
pushf
add
mov
jmp
mov
push
sbb
mov
mov
pop
sub
adc
test
ljmp
test
xchg
leave
lcall
mov
sbb
jmp
es
mov
imul
cmp
imul
mov
leave
nop
mov
sub
sbb
or
das
pop
pop
jge
or
rorb
mov
fxch
movsb
sbb
or
cmp
and
pop
popa
cmp
mov
lret
movl
ss
jl
adc
or
mov
leave
mov
sub
dec
or
jns
imul
mov
leave
mov
scas
les
data16
inc
sub
in
mov
ficoml
lock
hlt
adc
xchg
ret
lods
cld
mov
mov
dec
fistl
mov
mov
popf
mov
out
leave
dec
movsb
fwait
imul
or
lock
imul
sbb
or
or
pop
mov
push
les
mov
jle
xchg
mov
jg
in
shlb
adc
mov
mov
inc
and
or
lods
sbb
pop
add
lahf
xorl
mov
or
lcall
insl
xor
scas
mov
or
add
xchg
sbb
mov
stc
loopne
in
js
push
sub
dec
dec
and
mov
shrl
pop
jmp
stc
sbb
jle
popf
xor
xchg
xchg
leave
dec
popa
mov
loope
add
in
repnz
sbb
repnz
insl
and
lods
sbb
or
sbb
filds
add
or
cmpsb
or
cltd
insb
je
mov
lcall
xchg
shlb
adc
iret
aad
mov
mov
fwait
lock
jl
mov
in
pop
or
fsubl
adc
scas
out
xchg
shll
lcall
dec
push
jbe
gs
inc
xchg
stc
clc
sub
into
fwait
lcall
xor
xor
outsb
aas
mov
push
push
scas
pop
addr16
popa
jne
sbbl
xchg
cmp
add
mov
insl
mov
xchg
testb
mov
push
inc
movsl
sbb
aas
hlt
mov
pop
jg
daa
sbb
movsb
imul
xor
xor
fimull
adc
inc
cmc
cmpsl
dec
mov
mov
fdivl
xchg
inc
mov
cmpsl
loope
adc
lea
push
repz
lea
push
rorb
insl
rcll
inc
imul
lods
mov
nop
sub
jnp
xor
mov
push
in
jge
push
cmp
scas
xchg
loope
sub
push
out
sub
mov
sub
jecxz
jmp
and
cmp
and
adc
pop
rcrb
shll
daa
dec
adc
je
shrl
inc
movsb
ds
fldt
pushf
mov
mov
repnz
outsl
cmp
add
and
lea
imul
xchg
jmp
push
fcomi
mov
test
enter
imul
or
sub
cltd
in
or
and
out
inc
lock
aad
mov
je
dec
pop
cmc
lea
andl
pushf
jns
ljmp
sub
ljmp
enter
mov
mov
das
sbb
inc
push
mov
imul
stos
mov
mov
push
inc
scas
adc
xchg
sbb
insl
xchg
push
addr16
out
shr
xor
mov
pop
pop
xchg
push
addr16
cwtl
mov
cmp
jb
fsubl
xchg
cmp
and
sbb
push
pop
inc
xlat
outsb
push
dec
cmp
xor
js
push
rcrl
mov
adc
mov
add
sbb
inc
cmpsl
push
sub
mov
dec
cs
in
mov
push
dec
push
cmp
scas
or
test
adc
xchg
testl
xor
cli
adc
out
sbb
pop
dec
sub
push
xlat
xchg
mov
sbb
mov
cld
clc
mov
adc
xlat
jp
add
push
lcall
xor
test
fimuls
fiadds
jae
cmpsb
pop
out
sbbb
lods
or
mov
in
stos
enter
lea
fwait
sbb
lods
fistpl
pop
bound
fistps
inc
into
aas
leave
lret
mov
sub
mov
in
inc
ja
sarb
mov
mov
mov
or
adc
mov
icebp
sbb
add
sti
fs
insl
outsb
mov
xor
push
dec
ret
or
mov
pop
mov
outsl
ret
sub
mov
adc
xchg
sbb
aaa
std
sbb
lret
sub
push
sub
adc
push
jp
bound
aam
pop
mov
xchg
mov
inc
mov
adc
dec
cmp
pusha
fidivs
mov
mov
adc
in
push
pop
imul
push
js
aaa
pop
cmp
mov
addr16
cmp
les
scas
mov
test
xchg
sub
push
in
inc
and
icebp
mov
cmp
xchg
rcrb
or
ljmp
xchg
adc
adc
shlb
push
imul
iret
ret
lret
insb
out
jle
icebp
sbb
lret
add
lods
push
jne,pt
clc
mov
jge
add
lock
add
scas
rorl
aad
jge
clc
fmul
add
cmp
and
in
xchg
inc
mulb
in
dec
movsb
jle
jno
jp
or
cmpsl
push
xchg
out
mov
ja
call
pop
and
pushf
pop
sub
sub
inc
mov
sbb
mov
call
mov
and
pop
xor
int3
sbb
cmp
sub
cmp
lahf
test
fdivrs
sub
repz
mov
mov
std
inc
sahf
pop
dec
int3
in
test
pop
sub
add
in
mov
sub
push
jno
stos
aam
or
jae
push
or
mov
pop
jge
scas
inc
loope
bound
stc
mov
mov
xchg
cmpb
cli
push
xorb
vmovdqa
imul
xor
mov
lret
icebp
test
cli
cltd
repz
aaa
mov
adc
mov
xchg
clc
call
repnz
sbb
adc
stos
aam
xchg
mov
pop
addl
cmp
push
in
in
les
addr16
mov
insb
dec
cli
sub
icebp
lods
clc
push
stc
cmpsb
push
inc
lods
lock
stos
sub
adc
in
enter
and
in
adc
nop
mov
mov
sti
push
sbb
int
into
sahf
nop
xor
rolb
pop
push
out
add
pop
jb
mov
lret
jb
stc
adc
xlat
fisttps
push
push
dec
xlat
cmp
sbb
test
mov
sbb
jp
xor
scas
pop
dec
push
sub
add
pop
ret
jb
or
and
pop
jle
movsb
scas
push
insl
sbb
outsb
pushf
call
jno
popa
fwait
pop
xor
lret
sbb
div
pusha
scas
loope
repnz
in
filds
pusha
int3
push
js
mov
and
inc
nop
jg
jbe
inc
xchg
xchg
sbb
add
int
out
hlt
insb
stos
and
xor
insl
xor
adc
add
js
cmp
dec
and
loopne
cmp
cmpsb
out
xor
mov
mov
ret
cmpb
xchg
mulb
push
add
xor
sbb
cwtl
add
cmpsl
adc
icebp
sti
je
cmp
xchg
pop
push
sbb
int
push
pop
fsub
or
inc
cwtl
adcb
push
and
xchg
pop
cmp
imul
push
push
and
pop
hlt
roll
in
cmc
xchg
dec
jg
mov
mov
add
push
rolb
jnp
bound
dec
cmp
cmpsl
aam
or
out
jo
jmp
and
inc
out
sub
lret
xchg
lea
lret
movsb
lcall
sahf
cmp
movsl
iret
pop
push
sbb
and
jnp
test
xchg
adc
jns
movsl
xor
push
and
lods
data16
jmp
cmp
mov
mov
jecxz
pop
xor
stos
sbb
mov
cmp
hlt
pop
in
xor
fwait
subl
flds
pop
in
mov
mov
push
push
pop
inc
fcoml
mov
push
pop
outsl
ljmp
out
pop
xor
push
cmc
mov
push
push
in
dec
or
pop
and
lahf
fisubl
jno
and
push
in
inc
and
jne
mov
mov
scas
inc
xchg
shll
fs
sub
mov
out
lds
stos
fmull
pusha
loop
and
dec
and
in
cmp
ja
mov
mov
xor
sub
mov
shrl
aam
loope
cmp
loop
pop
mov
push
fsubrl
rol
cmp
xor
pop
dec
dec
icebp
cmpsl
lock
cmp
adc
mov
mov
mov
lods
das
xor
data16
call
in
add
inc
das
mov
adc
mov
jno
jno
sbb
dec
lret
adc
push
scas
sti
sbbl
loop
idivb
sbb
push
dec
xor
sti
jcxz
dec
jmp
push
push
sbb
pusha
insl
ret
rclb
ret
adc
daa
arpl
stos
xchg
xchg
cltd
dec
sub
fcompl
fbld
add
mov
inc
lock
in
addl
loope
jg
xor
inc
fdivrp
lahf
inc
daa
enter
sahf
sub
sub
mov
and
dec
je
outsl
push
push
test
push
jp
push
mov
cmpsb
std
mov
push
jno
insl
jo
shrb
cmp
pmaddwd
es
hlt
xchg
add
rol
lods
push
sbb
stos
test
or
les
nop
inc
or
dec
add
orb
mov
mov
mov
sbb
fs
addr16
adc
push
sub
loopne
fstpl
and
xchg
pop
jg
fists
add
inc
dec
cmc
push
ja
pop
mov
push
mov
fwait
push
mov
adc
mov
push
testb
push
jge
in
sbb
jns
lcall
mov
jmp
out
xchg
xor
movsl
jl
sti
mulb
fnstsw
push
push
loop
ss
jno
inc
movsb
inc
movsb
lea
mov
cmpsl
sub
stc
fiaddl
lods
inc
xor
xlat
sub
sarl
or
mov
ret
out
jmp
test
cs
ret
dec
cltd
pop
imulb
loope
jmp
ja
push
mov
mov
sbb
push
ficoml
add
xor
mov
fs
or
pop
mov
sub
fnstenv
add
xor
jle
jmp
ljmp
pop
and
repz
outsl
data16
cs
and
cmp
in
test
mov
jns
nop
jns,pt
popf
pop
adc
or
push
push
enter
gs
fadds
xor
sub
push
rdpmc
cs
and
adc
rcl
scas
std
aas
mov
cmpl
test
jecxz
sbb
dec
dec
inc
imul
loopne
dec
mov
dec
pop
mull
test
xchg
imul
or
pop
inc
out
mov
icebp
jl
mov
cwtl
jle
call
adc
push
xchg
loop
mov
clc
xor
mov
out
pop
jp
jb
loope
sbb
mov
stos
sub
mov
icebp
xchg
pop
cli
out
fcoms
sbb
outsb
sub
popa
mov
jb
clc
push
adc
xchg
ficoms
into
mov
pusha
jg
repnz
out
cmpsl
and
test
dec
in
push
mov
popf
sarl
jg
ljmp
sbb
adc
and
lret
loopne
dec
fsubl
or
aad
push
and
dec
subl
sbb
xor
rorl
rolb
dec
push
or
jmp
fcom
pop
lods
and
sbb
cmp
mov
int3
shll
add
and
jg
sti
dec
or
shrl
push
push
push
xchg
repz
lea
pop
je
add
mov
ds
popf
jns
xlat
stos
sbb
clc
inc
aas
mov
or
fcomi
cmpsl
rclb
test
stos
lret
inc
sub
or
cmp
dec
and
data16
jne
jbe
cs
repz
out
jbe
push
aad
popa
pop
lods
ss
mov
pop
sti
xchg
adc
fwait
pop
jmp
aad
xor
sbb
xchg
mov
add
shrb
stc
fwait
sarl
imul
or
imul
int3
xorb
clc
cs
dec
mov
das
movsb
mov
push
stc
aaa
add
lcall
xor
sbb
or
dec
or
pop
shr
scas
sahf
push
mov
rorl
lods
imul
inc
and
mov
mov
incl
or
sub
adcb
int3
loopw
pusha
dec
or
movsl
addr16
insb
add
adc
xor
xor
mov
sub
xchg
cmovne
fldl
aam
cmp
cmp
imul
push
and
repz
js
sub
dec
or
xor
jl
addr16
push
js
and
jnp
xor
inc
enter
fnstenv
int3
lret
push
or
sub
xor
dec
bound
xchg
std
xor
inc
mov
xchg
mov
xor
adc
jle
adc
les
std
loope
ret
in
ffree
arpl
dec
sbb
pop
cld
lret
lret
add
jbe
adc
loope
popa
jns
stos
call
test
xchg
mov
xchg
add
mov
or
ret
fisubs
popa
inc
hlt
sbb
ret
roll
ret
test
popf
aam
out
ss
nop
aam
popf
pop
imul
sbb
fldl
jnp
push
push
decb
jecxz
or
add
repz
sti
or
test
adc
mov
jle
iret
cwtl
cli
out
sahf
mov
in
or
lods
and
shll
xchg
mov
jle
dec
jecxz
xor
add
sysret
cmp
ja
adc
push
in
lret
jo
lahf
test
fwait
pop
or
jnp
test
mov
ljmp
imul
fimull
in
jbe
push
xor
repz
push
mov
es
pop
pop
xor
pop
sti
mov
sub
xor
incb
repz
lock
xor
xor
in
cmpsb
and
mov
mov
mov
pop
and
inc
pop
pop
ret
sti
dec
movsb
shll
adc
cmp
mov
outsb
ret
lahf
push
mov
sbb
imul
jno
sti
or
ja
jge
sbb
jmp
adc
adc
out
mov
mov
aad
push
mov
das
xor
daa
movsl
out
inc
and
mov
int
mov
push
sbb
xor
dec
xchg
insb
in
jmp
push
scas
add
or
dec
cltd
stos
lcall
xchg
outsl
das
ss
aam
aas
inc
dec
lahf
shl
out
or
js
cmp
repz
pusha
bound
xchg
fildl
push
sbb
mov
imul
push
xchg
mov
xchg
ss
mov
ja
ficompl
pop
sarl
scas
fisubrl
scas
test
mov
pusha
test
add
fsub
and
xor
sti
shll
es
std
pop
aam
xor
and
fidivl
sub
mov
push
cmpsb
mov
mov
jo
subl
shll
add
pmovmskb
sbb
inc
pusha
icebp
mov
leave
sub
or
leave
inc
or
fwait
inc
lea
add
push
jae
addr16
stc
xchg
ja
mov
aas
cmp
mov
addr16
ss
ret
pop
mov
and
lcall
cmc
and
cs
mov
mov
inc
scas
ljmp
sarb
hlt
or
push
insl
pusha
mov
addb
inc
roll
push
std
cmp
jbe
xchg
pusha
stos
stos
inc
out
je
and
push
call
mov
mov
inc
pushf
cli
push
cmp
pop
mov
mov
dec
lret
out
adc
notb
jb
rcr
jno
xor
cvttps2pi
pop
fs
and
xchg
sub
iret
pop
filds
loopne
mov
sar
xchg
mov
adc
arpl
jg
dec
cmp
stos
rcrw
xor
mov
xchg
push
pop
inc
adc
pusha
out
xchg
mov
leave
or
nop
fisttpll
sub
push
xor
cmp
outsb
sbb
pop
into
or
add
sbb
lahf
xor
cmp
cwtl
dec
lods
fcomps
xchg
push
mov
sti
es
sub
addr16
insb
loope
shrl
int3
test
sbb
arpl
add
cmp
push
rcrl
mov
sbb
stos
jno
adc
adc
inc
fmull
adc
dec
ss
sub
call
jge
jne
pop
inc
jne
mov
pop
mov
or
sbb
push
mov
out
sbb
mov
clc
repnz
test
leave
loope
gs
push
jo
adc
fs
in
push
xchg
jge
add
jb
out
loope
mov
mov
addb
jmp
sbb
test
insl
push
pop
je
aaa
shlb
mov
lret
push
push
filds
imul
or
fwait
inc
repz
adc
call
xor
arpl
loopne
insl
enter
jno
in
dec
inc
test
push
gs
lods
cmp
xor
push
dec
movsl
ljmp
jae
movsl
push
push
dec
mov
push
fadds
lea
jg
nop
gs
mov
int3
mov
xor
jno
xor
dec
jmp
push
out
xor
cmp
mov
imul
cli
and
loope
add
sub
sar
mov
aaa
ljmp
add
sar
push
pop
repz
mov
js
lods
push
pop
aad
icebp
lret
das
sub
in
aad
push
push
mov
shrb
cmp
adc
lahf
inc
fldt
loop
pop
add
lcall
mov
adc
mov
mov
lahf
lahf
leave
in
ret
repz
out
fisttpll
rorl
xchg
ljmp
out
xchg
push
mov
js
push
mov
pusha
jno
xchg
mov
jecxz
cmpsl
add
ds
mov
dec
in
insl
pop
mov
stc
scas
scas
or
addr16
xor
dec
shll
popa
lods
popa
mov
cmpsl
rolb
sub
fwait
mov
outsl
xlat
test
cmp
lea
frstor
dec
inc
es
add
stos
daa
ret
aas
ret
fwait
inc
mov
mov
and
or
sbb
loop
out
pop
mov
inc
fwait
dec
pmulhuw
mov
xor
and
in
rol
call
jecxz
les
cltd
rorl
xchg
sub
ljmp
push
or
ret
sub
bnd
add
out
sub
sub
jl
pop
std
gs
pop
push
xchg
or
pop
aam
cld
and
pop
lcall
enter
inc
sub
dec
push
mov
out
loope
bound
push
dec
addr16
push
lock
sti
adc
notl
int
pop
test
shlb
adc
aad
clc
js
inc
cmp
dec
mov
rcrl
cbtw
xor
sbb
mov
mov
push
pushf
lahf
cmp
xchg
inc
push
pop
xor
pop
stos
and
lock
mov
or
sub
add
lahf
pusha
mov
xor
rcrb
js
fsubl
mov
mov
dec
ja
leave
mov
mov
es
add
shlb
fsubl
repz
mov
xlat
xor
push
fmull
or
out
lock
sarl
ret
xchg
xor
fwait
test
inc
jle
pop
inc
mov
mov
orb
mov
push
mov
cli
inc
cmpsb
in
scas
add
std
nop
ret
aaa
cs
cmp
lods
mov
into
cld
sub
data16
push
faddp
stc
or
ret
push
out
cmc
in
xchg
or
outsl
fisubs
jl
sbbl
mov
icebp
push
stos
call
add
into
jno
adc
movups
ss
lock
xchg
cmp
fldl
aaa
sub
sti
loop
and
push
ss
in
cld
xchg
out
xor
lahf
aaa
enter
gs
push
mov
dec
stc
rolb
mov
popa
dec
sbb
pop
in
cmp
loope
mov
or
or
push
shl
push
pusha
arpl
popf
jg
cmp
xlat
into
mov
leave
fldcw
adc
cmp
dec
aaa
fisubrl
cmp
sub
lods
xchg
xor
sbb
ret
add
sbb
insb
fsubrp
in
sbb
inc
adc
pop
testb
jns
imul
mov
leave
mov
sub
dec
or
jns
imul
mov
leave
mov
sub
sbb
mov
pop
mov
mov
leave
mov
fmuls
sub
dec
or
jns
imul
mov
leave
dec
jno
push
jmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
faddl
jno
popa
in
movsl
and
loope
aad
lods
shrb
dec
icebp
push
addl
faddl
jno
popa
in
adc
fadd
push
rorl
insb
xchg
outsb
mov
mov
mov
aad
in
hlt
or
and
scas
add
out
js
dec
testb
cs
inc
push
add
pop
out
push
xchg
add
mov
xchg
nop
push
rcr
mov
mov
mov
mov
push
mov
pop
xchg
sarl
int3
pop
aam
inc
mov
mov
pop
test
xchg
leave
push
insb
xchg
xchg
mov
mov
xor
pushf
add
mov
push
loope
and
cmp
pop
int3
xor
add
stc
jl
rol
shll
adc
imul
mov
mov
add
data16
push
add
ret
cld
cs
mov
shr
mov
mov
fdivl
popa
in
push
pushf
adc
pop
fsts
clc
jne
add
adc
mov
mov
bound
and
shll
lods
dec
cmpb
xchg
jns
push
ret
push
int3
inc
ds
movsl
push
adc
xor
jb
xchg
sub
xchg
insb
ljmp
fsubrl
test
xor
dec
icebp
jl
insb
xchg
sbb
or
cmp
sub
faddl
jno
popa
in
adc
lods
rcrl
icebp
jl
insb
xchg
sbb
or
cmp
sub
fsubrl
into
jnp
out
jge
arpl
xor
mov
lds
cmp
aad
stc
jno
nop
add
ja
jge
arpl
or
cmp
inc
xchg
fs
xor
or
add
dec
daa
xchg
repnz
mov
jmp
call
lret
sbb
sub
call
lea
mov
lea
jne
popf
es
jge
sub
cmpsl
cmp
sub
cmpsl
popf
and
jne
in
hlt
out
mov
fwait
add
vmovshdup
add
and
imul
insb
sub
addr16
mov
and
mov
pop
mov
pop
loop
pusha
adc
cltd
mov
xchg
sub
mov
adc
xchg
push
incb
repnz
stos
es
leave
push
sub
into
xlat
mov
scas
or
int3
and
lods
stos
adc
cmp
icebp
sub
inc
shrl
ss
xchg
addr16
inc
sbb
dec
sti
sbb
sbb
out
cmp
add
mov
jmp
sub
mov
xchg
cld
mov
mov
inc
das
test
mov
jl
mov
lea
pop
push
fwait
add
scas
xchg
sub
lret
fwait
xchg
popa
cmpsl
inc
mov
inc
imul
gs
fisubrl
push
fldcw
and
mov
xor
pop
out
sbb
insl
jge
fsubrs
lcall
or
mov
and
data16
xchg
mov
inc
ljmp
push
or
out
push
pusha
mov
xorb
scas
lcall
cmp
clc
and
cwtl
sub
mov
ljmp
jmp
add
xor
mov
leave
dec
incb
shl
addr16
dec
int
inc
lret
adc
cmp
cmc
rcll
push
daa
fistpl
or
insl
or
xor
mov
ja
jno
cmp
jl
add
rcll
or
inc
aam
in
lods
repnz
mov
xchg
lock
or
orl
mov
jge
mov
fwait
rcrl
popa
dec
sub
xlat
inc
xor
cmpsb
or
or
shlb
popf
roll
xlat
rcrl
or
push
movsl
xchg
push
into
cltd
add
cmpsl
iret
outsb
push
adc
mov
xor
lea
ljmp
xchg
test
stos
out
pusha
dec
xchg
push
mov
sti
adc
xchg
and
mov
cmp
mov
mov
movb
mov
enter
arpl
shll
jl
loope
aaa
stc
hlt
or
sbb
sbb
add
and
cmpsb
rcl
cmp
inc
dec
fnstsw
jne
in
test
sbbl
imul
ja
inc
mov
xor
inc
out
sub
adc
into
mov
xor
sbb
andl
imul
adc
lcall
das
lods
negl
daa
and
nop
adc
rorb
pop
pop
jp
into
mov
aas
loopne
dec
cli
xchg
push
xchg
cmp
mov
ja
add
push
pop
sti
cmp
std
std
push
cmp
push
cmp
adc
sbb
sbb
cli
mov
int3
pop
push
push
jle
push
adc
mov
ljmp
lea
or
mov
cli
mov
or
pop
int3
imul
out
cld
stos
outsl
jbe
and
xor
ljmp
pop
mov
ret
mov
push
xchg
cs
mov
mov
cltd
insl
push
adc
mov
pop
shll
daa
sti
jns
ds
js
stc
jmp
loop
xchg
rcll
mov
ds
lods
rcrl
sbb
inc
hlt
ret
dec
add
loope
fwait
or
and
push
rcl
jg
xor
test
dec
mov
pop
xor
cmpsl
jge
test
movb
inc
ficoms
cmpsb
cld
lock
out
dec
testl
jl
popa
loope
scas
stos
scas
mov
cmp
and
xchg
jo
test
std
mov
and
and
out
mov
push
aam
add
adc
sbb
mov
in
inc
fmull
cmpsl
adc
loope
aam
mov
jns
push
cmp
loop
int3
cmpsb
jae
movsl
je
stos
sbb
dec
dec
adc
outsb
lds
and
cmpsb
jae
in
lret
push
sub
cli
jno
and
mov
mov
stc
xchg
gs
fiaddl
pop
insb
dec
aas
inc
arpl
repnz
ror
jmp
mov
cmp
fldt
ss
outsl
push
rcrb
sbb
cltd
stos
xor
cmp
jae
das
ss
mov
call
inc
xchg
jle
cmpl
subl
es
inc
and
test
cmp
mov
push
add
aaa
cmc
mov
sahf
js
in
loopne
je
roll
or
add
test
mov
pushf
cltd
cmpl
movd
lds
pop
mov
mov
lcall
fsubrl
test
dec
push
xchg
test
push
bound
and
xor
stos
push
out
negl
aas
stc
add
arpl
sbb
fiadds
sub
mov
xor
sub
push
push
sbb
icebp
test
fildl
loopne
iret
dec
cli
mov
std
mulb
cmp
cmp
sub
adc
test
add
daa
ret
insl
or
cwtl
mov
pop
fisttpll
and
inc
and
mov
test
add
outsb
add
mov
push
lock
mov
pop
aam
jns
adcb
daa
movsl
push
pop
or
sbb
leave
testl
aas
ljmp
cmp
sbb
xor
inc
dec
enter
lods
adc
push
inc
add
inc
aam
lahf
xor
mov
dec
std
js
cs
scas
fcmove
cmp
fimuls
pop
sub
pop
or
loopne
mov
inc
inc
cmp
xor
or
and
imul
xchg
push
and
jb
pop
push
mov
fcmovne
insl
icebp
mov
sbb
xor
insl
mov
pusha
icebp
scas
mov
flds
adc
leave
sbb
loope
dec
rol
ss
jmp
jl
inc
fwait
lahf
push
mov
movsb
dec
mov
mov
in
outsl
mov
lock
rcll
mov
pop
flds
ficoms
cld
dec
cmp
cld
loop
push
mov
movsb
std
jb
dec
pop
add
cmp
std
ret
add
into
sub
mov
mov
cltd
xchg
jnp
push
and
ljmp
int3
out
pop
xchg
imul
jae
add
es
mov
push
mov
jo
push
mov
nop
int
dec
pop
add
jnp
mov
imul
jne
or
inc
mov
inc
jmp
adc
push
pop
out
push
xor
test
in
push
lods
imul
sbb
push
push
pop
xor
and
imull
sub
pop
ss
pop
pop
pop
mov
fsubs
jmp
xor
scas
sbb
push
inc
aam
imul
das
inc
jo
mul
dec
xchg
dec
add
gs
jno
arpl
inc
fdivl
jo
jb
push
pusha
dec
add
addb
fs
mov
cmpl
push
xchg
repnz
pop
lods
aam
or
aam
and
dec
int3
mov
in
xchg
xor
ret
mov
test
idiv
adc
xchg
test
mov
in
mov
cmpsl
pusha
mov
outsb
xlat
push
ret
dec
lret
push
sub
add
rcrb
loope
dec
pop
xchg
cmovno
ja
in
sub
xor
and
mov
sbbb
mov
jle
add
inc
dec
andl
cmp
push
xrelease
loopne
cltd
outsl
xchg
xor
insb
xor
loop
jmp
scas
pop
dec
push
sub
xchg
mov
scas
notb
pop
test
push
in
jle
test
push
shrb
pop
andl
shll
lea
mov
inc
ljmp
popf
lds
fcomps
in
dec
adc
sub
jnp
mov
shll
std
and
sub
inc
mov
cli
jg
sbb
shrb
aas
xchg
inc
inc
sub
cltd
pop
mov
out
xchg
shl
xchg
xor
lods
pop
xchg
int
aaa
push
cmc
xchg
aam
pop
gs
imul
sbbl
shl
cld
cmc
pushf
ds
sub
cmc
and
inc
jnp
in
jnp
xor
sbb
push
sbb
inc
and
test
lcall
lcall
out
mov
leave
adc
js
jne
jmp
out
pushf
and
aas
ret
pushf
mov
shlb
shll
popa
sub
add
test
mov
pop
jge
ja
pop
lret
iret
rorb
icebp
or
call
jecxz
stos
das
cmp
push
psllq
sub
dec
out
dec
adc
push
lea
outsl
dec
rcll
test
pusha
vcvtdq2ps
packsswb
repz
mov
jmp
xlat
inc
sbb
jecxz,pn
mov
jp
sbbl
dec
test
xor
lods
inc
repz
mov
sti
lret
repz
pop
sbb
mov
imul
lea
add
add
push
sti
adc
xchg
out
jp
dec
add
hlt
push
xor
sbbl
mov
sub
les
sahf
out
mov
inc
aas
add
addr16
pavgw
or
mov
push
xor
mov
dec
outsl
popf
inc
orl
and
js
adc
xchg
aaa
fisttpll
inc
out
out
dec
inc
outsb
cmc
ds
sarb
fldt
xor
loopne
jmp
pop
or
mull
subl
mov
test
mov
sub
pop
sub
jbe
enter
jecxz
jnp
rcrb
inc
into
loop
mov
xlat
insl
dec
add
in
pop
push
jne
fdivrs
or
mov
fistpl
push
jmp
jmp
pop
stc
or
adc
mov
mov
jp
add
push
shlb
sub
push
aaa
cli
insl
pop
ds
dec
icebp
lock
fistpll
pop
cmp
sub
pop
std
out
add
or
ljmp
inc
mov
add
xor
inc
pop
js,pt
clc
mov
mov
inc
in
js
stc
enter
xor
mov
jae
insb
mov
outsl
inc
inc
pop
adc
xor
aam
negl
pop
pop
cli
mov
mov
addr16
rcll
mov
mov
dec
rolb
adc
mov
movsb
into
push
and
sbb
mov
jbe
sbb
movsl
push
sbb
push
mov
cmp
outsb
pushf
and
repnz
nop
xchg
mov
add
out
jns
or
pop
mov
pop
mov
aad
dec
xchg
or
mov
xor
shrb
pop
cltd
jge
xorb
mov
repnz
inc
and
mov
push
add
cmpsb
mov
or
sti
jl
imul
mov
mov
arpl
jg
outsb
sub
fiaddl
inc
add
imull
das
jbe
fcomip
nop
push
or
pop
pop
inc
loop
ror
jmp
jno
repnz
xorb
scas
pop
fists
lahf
andb
xor
movl
fistpll
xor
pop
and
imul
test
push
mov
sbb
adc
mov
mov
ret
lcall
cld
cli
mov
mov
sbb
sub
rcrl
mov
pop
push
std
xchg
add
jmp
and
sbb
add
jecxz
mov
dec
xchg
dec
cli
addr16
and
sub
dec
mov
sbb
xchg
xchg
loop
mov
lock
out
aam
mov
add
pushf
filds
mov
pop
cmpsb
push
and
lods
push
insb
push
repz
pushf
icebp
jae
push
leave
dec
or
sarl
or
inc
ss
jae
pusha
mov
jg
xchg
sub
mov
aad
ljmp
mov
and
enter
hlt
xor
dec
pop
mov
or
adc
pop
or
push
loopne
fsubr
pop
push
cmp
lock
es
pushl
or
jp
adc
mov
loop
inc
arpl
add
xchg
xlat
mov
cmpsl
mov
fiadds
lock
mov
fstpl
dec
mov
jg
adc
lea
fs
bound
lahf
pop
pop
into
and
push
jmp
cwtl
or
cli
sbb
pop
movsb
lret
stos
push
jmp
pop
cli
repnz
dec
lret
sub
mov
into
cmp
loop
pop
icebp
imul
pop
inc
lret
subb
movsl
xchg
jbe
sub
movsw
mov
push
sbb
ret
inc
mov
adc
fiadds
mov
sub
jb
sub
mov
jnp
clc
pop
testl
dec
adc
insl
xor
aam
mov
push
sub
adc
inc
cli
test
and
test
sub
or
aam
adc
addr16
push
jae
xor
push
in
lods
and
out
push
pop
sub
in
xchg
mov
mov
aaa
xchg
jb
pop
and
ret
and
shll
std
ja
lcall
sbb
stos
mov
movsl
adc
cs
ret
test
aaa
dec
and
xchg
aaa
sub
mov
mov
adc
icebp
or
cmp
stos
inc
fsts
dec
mov
mov
dec
fistl
xor
shll
or
xchg
xchg
inc
sbb
pusha
sbb
test
mov
std
cmp
sub
xor
js
and
and
dec
fimuls
xchg
test
sub
adc
addr16
xchg
stc
pushf
or
out
inc
bound
stos
push
pop
push
scas
xor
pop
dec
and
into
mov
xor
cmpsl
aaa
sahf
aas
fnstenv
or
inc
inc
mov
and
pop
pop
inc
aaa
addr16
adc
rorb
test
jb
shlb
add
xchg
xchg
fnstenv
push
dec
sub
lock
shll
iret
or
ja
arpl
dec
jo
imul
shlb
cmp
rcrb
ds
jae
and
std
lret
xor
movsb
andb
lods
push
outsb
pop
cmp
inc
sub
aad
outsl
outsl
clc
and
pop
pop
insb
pop
jne
jno
aaa
call
jne
loopne
mov
fdivrs
xor
mov
mov
clc
test
jo
fldl2e
jmp
mov
sahf
push
jmp
mov
ljmp
xor
dec
mov
push
pop
outsl
add
adc
sti
fcoml
push
out
push
rcrl
push
xorb
lock
jl
jbe
stos
xchg
sbb
xor
add
in
insb
shrl
pop
testb
and
ret
inc
outsl
stc
leave
test
sbbl
sbb
test
and
out
xchg
inc
cmpsl
adc
and
idiv
push
xor
add
and
xchg
dec
or
test
mov
pop
sbb
in
xlat
scas
daa
scas
mov
add
mov
jl
fdiv
mov
dec
ss
adc
sub
pop
pop
mov
mov
jecxz
pushf
inc
and
sbbb
mov
adc
add
les
orl
out
jge
aaa
xor
adc
inc
pusha
and
jmp
bound
mov
inc
das
xchg
aam
ret
shl
nop
sbb
add
xor
xor
ds
ret
sbb
test
out
sbb
jbe
adc
in
jecxz
or
data16
mov
rcr
sub
xchg
and
sub
jl
sarl
arpl
dec
jae
aaa
fildll
test
jbe
push
push
mov
fcmovne
jae
sub
adcb
in
pop
xor
pop
in
push
push
push
imul
add
sbb
xchg
xor
rcl
push
aaa
mov
pop
mov
les
icebp
mov
add
jecxz
inc
aaa
lods
cmp
nop
mov
ja
sti
out
adc
mov
lret
xchg
adc
rorl
movsl
add
mov
divl
sub
push
pop
cmpsl
popf
decb
test
cmp
jge
and
cmc
adc
in
in
add
rorb
pop
test
shll
lock
fisubrl
pop
popf
cmp
push
lahf
cmp
loope
adc
sub
sub
sub
cmc
mov
cs
inc
sub
xchg
movsl
mov
xchg
mov
xor
mov
cmp
sub
hlt
or
sub
fs
pop
je
pop
aaa
call
sbb
jo
push
mov
pusha
and
push
loope
jnp
jb
test
cmpsb
popf
lea
mov
jge
or
pop
sti
sub
call
push
in
gs
sub
add
in
inc
jae
sbb
mov
or
or
push
repnz
dec
mov
movsl
fwait
jge
or
pop
xlat
mov
mov
in
sbb
mov
ret
jo
cli
xchg
gs
gs
scas
add
dec
movl
xchg
or
stos
lret
mov
sub
push
dec
in
inc
inc
mov
xchg
ds
call
sub
out
rorb
or
push
stos
mov
clc
and
jno
out
fisubs
fcomps
xor
aad
addb
shrl
mov
fcoml
mov
pop
push
adc
jnp
test
sti
dec
hlt
das
mov
xchg
gs
sbb
cmpl
mov
mov
xor
xchg
mov
cwtl
insl
adc
xor
push
pop
inc
fwait
mov
pop
test
das
and
adc
sbb
cli
and
mov
jmp
add
fildll
push
cmpb
loop
cmp
mov
mov
or
inc
shll
jge
out
cld
sbb
subl
push
aam
mov
in
mov
mov
clc
lahf
cmp
ret
lods
push
gs
aas
jmp
clc
lock
pop
stos
inc
lods
adc
test
outsb
out
pop
test
jle
fstps
pop
and
jmp
push
lcall
outsb
jnp
sbb
imul
lahf
iret
cltd
into
sbb
and
inc
popf
stos
out
inc
add
lea
jbe
push
sub
xchg
pusha
sti
scas
push
cmp
shll
push
mov
je
shrl
lea
xor
es
cmc
ficoml
push
inc
shlb
mov
xchg
stos
fwait
in
jg
out
jecxz
pop
mulb
xchg
lret
rcrb
cltd
insl
mov
lret
or
or
sub
cmp
add
add
test
dec
mov
imul
xorl
inc
aas
cmp
pop
cs
mov
mov
or
or
pop
fsubrl
mov
jne
push
iret
into
add
sbb
adc
mov
mul
xor
test
push
sarl
out
xorb
into
or
cmpsb
inc
mov
inc
inc
clc
sbb
pop
push
xchg
cwtl
fldenv
cld
pop
xor
fnstcw
enter
sub
fidivrs
pop
dec
cmp
push
push
stos
lock
cmp
insb
jg
bound
mov
push
push
cli
fldcw
cmp
jnp
aam
mov
enter
popf
inc
in
and
sbb
push
lods
rcrl
cmp
xor
pop
cld
sbb
jno
xchg
jae
imul
mov
call
test
pop
and
push
lods
ret
cmp
mov
dec
movsl
aad
sub
and
pop
cmp
inc
lods
add
xor
fs
out
ds
scas
movsl
push
jnp
and
addb
bound
shll
mov
arpl
lock
test
nop
out
and
mov
cmp
ja
mov
adc
test
outsl
xlat
dec
xor
mov
rcl
inc
call
addr16
jnp
popa
in
adc
lods
rcrl
icebp
jl
insb
xchg
sbb
or
cmp
sub
faddl
jno
popa
in
adc
lods
rcrl
icebp
jl
insb
xchg
sbb
or
cmp
sub
faddl
jno
popa
in
adc
lods
rcrl
icebp
jl
push
mov
mov
enter
in
adc
insb
cs
ds
jl
sbb
xchg
or
inc
pop
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
scas
pop
mov
dec
mov
adc
xchg
xchg
cmpsl
push
mov
outsb
xlat
ds
negl
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
rorl
mov
outsb
xlat
jle
dec
negl
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
aam
cltd
push
scas
cmp
sbb
scas
pop
lret
inc
jb
sub
in
int
cmp
outsl
push
in
dec
imul
xchg
mov
mov
add
jno
mov
pop
cmp
or
out
jns
repnz
cltd
pop
xchg
std
rcrb
fisubs
pop
dec
xorb
mov
inc
out
inc
out
cltd
daa
pop
mov
lock
loope
cmp
cmc
jg
xor
dec
pop
packsswb
out
pop
add
jbe
xchg
imul
repnz
pop
dec
loop
clc
sub
inc
pusha
xlat
jmp
and
cld
pop
xlat
sar
das
pop
or
push
sti
xchg
mov
pop
lahf
pop
pop
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
inc
ret
jle
inc
enter
sbbl
scas
movb
les
jo
add
cmp
gs
ja
push
leave
add
ja
loop
xchg
push
out
bnd
add
xor
jae
dec
cli
ss
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
mov
pushf
jl
dec
popf
sub
call
out
aaa
loopne
xor
inc
data16
mov
cs
jmp
jb
ror
sub
jo
xchg
add
xchg
pop
insl
mov
push
add
mov
lods
push
xor
adc
pop
cmp
pop
sbb
xchg
inc
jo
outsb
mov
ljmp
ret
pop
ret
stos
mov
bound
xchg
shl
xchg
nop
lahf
xor
shll
out
loopne
pop
add
in
adc
mov
xchg
pop
call
loope
pop
lcall
mov
pop
int3
mov
jmp
adc
nop
cld
roll
into
and
ret
or
ret
andl
negb
aaa
jne
jbe
lods
add
cmp
insl
inc
mov
jp
in
movsb
imul
mov
call
pop
dec
inc
hlt
and
in
jbe
mov
or
xor
jb
adc
cld
ftst
mov
jecxz
mov
sahf
cmp
sub
nop
push
jge
arpl
and
push
pop
sub
cltd
fiaddl
cwtl
in
pop
scas
cmc
not
rorl
cmp
ljmp
jbe
mov
adc
mov
loope
inc
sti
sub
adc
mov
aas
add
xchg
cmp
xchg
ficomps
push
xchg
mov
sub
cmp
outsl
int3
iret
mov
push
adcl
xor
sub
nop
pop
push
arpl
pushf
push
inc
inc
repz
xor
jmp
xor
add
or
jmp
sbb
ret
dec
icebp
adc
or
push
mov
cltd
add
add
in
insb
mov
jmp
xor
rolb
xlat
jno
mov
push
adc
and
mov
jns
outsb
pusha
sarb
sahf
rcll
and
cmp
icebp
add
sbb
jp
cwtl
add
idivl
or
push
push
stos
js
pop
push
fisttps
mov
inc
dec
pop
shrl
and
mov
popf
or
xchg
aaa
mov
jns
jmp
arpl
cmp
xchg
cmpsl
pusha
loope
ja
aas
adc
fidivrs
in
cmp
or
ret
sub
push
hlt
sahf
pushf
fnstenv
dec
push
push
dec
xor
loopne
loope
shrl
fisubs
xchg
or
add
cld
dec
pop
cmc
xchg
ljmp
cmp
int3
je
xchg
or
mov
ljmp
pop
scas
jne
jg,pn
mov
or
xchg
add
and
sbb
jno
dec
or
and
lds
push
sub
fcoml
lret
dec
cs
out
stc
add
adc
or
jecxz
xchg
sbb
mov
mov
fwait
push
lahf
dec
lds
and
and
lea
lcall
xor
idiv
mov
inc
push
push
inc
shr
sahf
mov
popf
mov
mov
sub
adc
pop
xchg
ret
jecxz
into
sbb
xabort
xchg
rep
in
in
sub
sub
pop
xor
outsb
mov
jo
xor
pop
imul
add
or
xlat
sub
mov
rolb
ljmp
es
pop
adc
mov
hlt
adc
mov
jno
sbb
cli
rorl
adcb
test
push
call
mov
fcmove
or
scas
int
in
lcall
mov
fst
mov
jecxz
call
mov
sbb
pushf
cli
xor
lret
stos
add
lea
jle
call
add
addl
sbb
push
insl
add
popa
xorl
aaa
inc
inc
xchg
cltd
mov
fwait
jne
fbld
mov
jns
and
jge
addr16
imul
mov
xchg
and
lds
jo
xchg
pop
mov
pop
cmpsl
test
mov
xor
arpl
cmp
xlat
int
mov
lock
and
xchg
jmp
push
adc
cmp
mov
sti
fstl
inc
jmp
ret
dec
adc
lret
insl
mov
iret
inc
mov
sub
xchg
pop
ljmp
icebp
add
sub
jb
xchg
aas
push
or
loope
or
sub
push
mov
inc
cmp
mov
popf
in
shl
jno
pop
lahf
add
lret
dec
push
mov
mov
adc
sbb
xchg
sbb
arpl
mov
and
fistpl
outsb
les
jbe
aaa
inc
mov
push
cwtl
pop
sub
ja
arpl
decl
pop
adc
or
stos
out
aaa
in
ffree
neg
icebp
jle
mulb
test
dec
scas
hlt
dec
jp
orb
inc
inc
push
lcall
jb
shl
add
xchg
inc
adc
ss
outsl
lods
inc
loopne
imul
add
outsl
jmp
xchg
push
in
aam
arpl
fneni(8087
push
xlat
inc
adc
inc
dec
mov
pop
jp
or
gs
cmp
scas
mov
sub
mov
int3
mov
les
mov
test
fisubs
jg
repz
outsl
and
jg
add
pop
out
cli
mov
fistps
sub
xchg
push
mov
stos
and
mov
in
nop
out
ret
lds
hlt
leave
aad
into
cmp
insb
mov
xor
inc
xor
jmp
jecxz
mov
pop
dec
mov
cwtl
xor
push
ret
inc
cmp
xchg
push
dec
cmp
pop
cli
push
xchg
cld
pop
cmp
sti
fisubs
cwtl
lods
imul
decb
adc
xchg
call
test
imulb
iret
inc
rcrb
mov
jmp
push
adc
inc
lock
dec
xchg
pop
test
mov
fiadds
dec
aad
adc
movsb
cmp
cld
inc
pusha
clc
jbe
dec
dec
pop
sub
sub
push
ljmp
sahf
xlat
fistpll
lret
loope
out
pushf
add
xlat
dec
push
add
xor
jnp
call
pop
jge
fsubs
test
jecxz
xchg
sbbb
lds
xlat
fcomip
mov
jg
outsl
into
mov
es
cmp
sub
xchg
call
xchg
ficoml
xchg
push
test
sbb
je
loope
mov
lahf
addr16
pop
out
out
xchg
aas
test
xor
push
jmp
jg
cs
inc
sbb
add
out
test
inc
cld
cmp
fstl
cmp
dec
clc
bound
adc
arpl
fs
fdivrl
mov
je
and
call
cltd
shlb
jmp
icebp
scas
xor
mov
or
sbb
jp
mov
lods
pop
add
loop
nop
pop
bound
or
dec
mov
insb
jg
gs
add
lahf
imul
push
mov
push
add
ret
inc
sbb
enter
pop
lods
movsb
inc
sbb
leave
mov
rolb
aad
pop
insl
push
sbb
xor
je
push
or
add
sbb
push
inc
jns
mov
push
std
ja
ss
and
daa
leave
pushf
xchg
daa
imul
hlt
add
fs
xor
push
iret
add
fsubr
iret
adc
or
xchg
sbb
lods
sti
enter
decb
lods
fldt
jg
mov
test
dec
movsb
shll
sub
adc
mov
push
xlat
and
mov
pusha
cwtl
cmp
ss
cmp
sahf
movsb
pushf
incl
xchg
in
mov
xor
or
xor
push
arpl
out
sarl
mov
or
jp
pusha
test
dec
popf
adc
add
nop
ret
fwait
lods
inc
in
int
inc
fnstcw
negb
nop
pop
stos
mov
push
inc
xchg
cmp
jbe
sub
dec
add
cmc
in
lods
imul
adc
call
enter
data16
lods
ja
xchg
xor
and
pop
lahf
lods
add
les
fs
sbb
ds
in
dec
xlat
inc
inc
lods
mov
divl
dec
cmpl
outsb
xchg
lret
js
jl
xor
outsl
cltd
push
pushf
jb
enter
pushf
dec
jle
jns
rcrb
rcrl
divl
lret
fdivp
lcall
div
xor
insb
and
fcompl
fsin
sbb
mov
movsb
mov
movsb
andb
inc
mov
inc
pushf
popa
lods
sahf
cli
add
dec
cmp
ljmp
in
or
ja
xor
mov
sbbl
hlt
dec
stc
jae
pop
scas
xor
aam
outsb
leave
mov
andl
jns
fistpll
movsb
push
xor
subl
xchg
push
mov
mov
repnz
lret
sub
jne
stos
or
cmp
push
sahf
inc
std
dec
aam
jl
stos
mov
stos
leave
in
mov
xchg
adc
fimuls
jmp
or
cmpsl
ds
dec
mov
call
fists
push
cltd
rolb
shlb
std
outsl
add
lods
mov
in
jns
adc
cmp
jp
or
mov
or
push
clc
popf
inc
mov
popf
fwait
add
adc
add
and
dec
jbe
cmpsb
adc
std
xlat
jb
inc
mov
test
cmpsb
xchg
and
jb
stos
pop
dec
pop
pusha
jnp
and
fucomp
iret
dec
xchg
imulb
ret
jmp
cmp
insb
pop
stos
pop
aad
cvtpi2ps
xchg
sbb
cmp
mov
nop
ficomps
shll
jo
movsb
lea
mov
inc
cwtl
fucomi
or
sti
mov
pop
lea
bound
sarl
pop
repnz
pop
dec
and
push
xchg
or
dec
mov
jne
jl
pop
pop
div
les
test
clc
adc
sbb
cmp
sarl
push
sbb
or
xchg
daa
data16
sahf
add
clc
mov
add
adc
pop
mov
jo
cs
adcl
xchg
xchg
adc
adc
sbb
jl
movl
jne
in
mov
jo
scas
testb
pop
pusha
pop
test
jae
popa
sbb
xorb
xchg
popf
xchg
jnp
orl
fs
loop
fsubl
je
and
jbe
out
inc
lods
das
mov
jp
in
ficoms
and
mov
inc
mov
cmc
push
xor
cs
mov
cmp
imul
and
add
imul
mov
xchg
pusha
iret
popf
imul
add
xlat
pop
jo
call
push
scas
cmpsl
pop
xor
sbb
mov
add
gs
push
aaa
mov
pusha
pop
pop
cmp
cmp
lret
adcb
sub
loopne
push
mov
inc
mov
rcrl
outsb
movl
lret
out
shl
in
es
faddl
jmp
add
movsb
mov
out
addr16
push
jae
mov
jmp
sbb
jae
into
or
jno
pop
fildl
or
dec
add
incb
and
in
lods
test
gs
outsl
or
roll
or
rcll
iret
int
mov
mov
dec
fstps
addr16
lock
ljmp
scas
cmp
cli
ret
mov
push
jo
setnp
mov
mov
jo
cmp
jp
sub
adcl
push
ss
mov
in
inc
out
sbb
fimuls
adc
push
call
in
popa
fs
scas
cmpsb
cmp
cltd
push
add
test
push
sahf
scas
std
push
sbb
jecxz
orl
fwait
push
mov
mov
jbe
jb
scas
leave
mov
aam
data16
cs
fwait
jge
insb
push
enter
sub
pop
adc
mov
mov
sbb
rcrl
pop
sbb
cmp
jge
addr16
aam
xchg
dec
scas
data16
nop
ds
add
xchg
mov
fiadds
imul
and
push
ror
push
icebp
mov
dec
fmuls
imul
pop
xor
xlat
jg
jo
and
cld
sub
sbb
gs
mov
stos
mov
or
fwait
cmp
add
roll
cwtl
aaa
and
and
mov
aad
mov
loop
jl
lods
fdivrl
and
fadds
inc
jne
jmp
loopne
into
inc
scas
dec
dec
je
jae
cmp
or
cmp
and
adc
shl
adc
xchg
sbb
xchg
lret
int
mov
dec
push
sbb
ret
inc
cmp
inc
lods
ss
mov
mov
in
jge,pt
adc
cmc
jno
cs
scas
leave
or
xor
sub
dec
ret
push
loop
cmp
arpl
fwait
rcll
jns
mov
in
sbb
lret
adc
orb
push
mov
cmpsb
push
sub
popa
pop
jecxz
sbb
jo
xchg
mov
enter
pop
data16
test
mov
or
jb
xor
rol
hlt
test
push
xor
rorl
lcall
lock
or
sbb
and
insb
mov
mull
jge
and
push
jns
push
rcll
je
subl
mov
in
xorl
scas
sbb
lds
mov
and
sbb
jo
lods
mov
jg
sti
outsl
out
sub
sub
and
jbe
int3
cmp
lret
xor
cmp
add
faddl
push
sbb
cmpsb
outsl
into
adcb
mov
mov
fistpll
xchg
push
hlt
jno
sbb
mov
sub
call
mov
repnz
cmp
cwtl
popf
iret
xor
das
inc
popf
notl
lcall
jp
add
add
sub
and
mov
xchg
addl
iret
xor
js
dec
std
ret
push
add
mov
ret
cmc
ffree
cmp
push
push
push
sub
ds
push
test
loopne
sbb
jp
xor
inc
fcompl
je
cmp
inc
jne
lret
push
inc
pop
xor
mov
jnp
lret
mov
daa
cwtl
sub
fistps
add
out
lret
lea
ja
adc
sbb
insb
insb
sub
mov
call
sahf
sbb
or
fimull
and
adc
add
mov
mov
out
sbb
leave
fmuls
inc
fcompl
cli
dec
pop
arpl
into
adc
mov
adc
aad
call
or
pop
leave
pop
push
push
cs
cmpl
jge
gs
int3
movsb
mov
pop
push
loop
mov
sbb
inc
xlat
movsb
inc
aam
adc
out
jg
loopne
lret
jp
ret
jnp
int3
testb
add
ret
leave
ljmp
push
nop
xchg
popa
adc
jbe
es
fsubrp
ret
fs
dec
mov
test
jb
test
jae
xchg
and
xchg
sbb
mov
adc
pop
cmpsl
insb
addl
pop
xor
lds
inc
lods
xchg
cmpsb
stos
adc
dec
loope
mov
into
mov
sti
clc
fcomi
and
aad
loope
mov
jp
mov
test
inc
out
add
test
and
lret
sbb
mov
inc
dec
cmp
add
movhps
insl
sub
inc
sub
ja
hlt
cs
cld
push
mov
daa
inc
pop
and
push
lcall
ss
shll
and
mov
popa
stos
js
xor
jle
fnstenv
js
loop
push
les
or
cld
sbbl
test
jbe
and
jge
and
mov
pop
lods
jg
aaa
insl
cmc
xchg
es
mov
fistpll
pop
int3
popa
movsb
inc
lahf
sub
call
lods
popf
adc
pop
test
mov
jo
push
jge
cmpsl
pop
daa
lods
or
mov
scas
inc
xchg
xor
sub
jb
cmc
lods
jbe
xchg
aad
shll
xlat
dec
std
rcll
pop
imul
rolb
push
inc
jno
lods
push
mov
jecxz
cs
repnz
jbe
inc
aad
jp
jno
cld
je
sub
fwait
cmc
mov
dec
sbb
aam
add
test
push
dec
add
pop
nop
scas
dec
jmp
rorl
jge
sub
nop
clc
mov
adc
fwait
inc
or
adc
in
xchg
sub
adc
jg
mov
stos
push
testl
or
mov
cld
mov
clc
dec
popf
cltd
incl
add
jb
pop
cmp
pop
lock
popa
out
mov
daa
inc
rclb
pop
mov
lods
rclb
idivb
push
adc
mov
or
mov
adc
inc
ja
aam
inc
push
dec
pop
jp
mov
stc
fistpll
jo
add
ret
mov
jae
cli
test
out
rorb
scas
xchg
dec
fucomi
cli
and
push
pop
push
insl
sbb
loope
cmovb
lea
jne
pop
and
inc
repz
aaa
popa
cmpsb
and
push
mov
bound
adcl
lock
adc
jmp
inc
xchg
mov
xor
pop
xchg
xor
insl
nop
mov
sbb
aaa
xor
add
mov
adc
push
jecxz
mov
fstpt
cmp
pop
divb
stos
push
movsl
cmp
cltd
repz
dec
jmp
mov
sbb
fs
inc
fdivrs
inc
mov
enter
fistps
or
jnp
sub
je
push
jmp
add
loope
jle
test
add
cmovbe
mov
das
pop
cmpsb
adc
inc
lahf
aad
out
aam
cmp
sub
push
test
push
mov
sub
and
xor
inc
sub
ss
push
xor
inc
jl
cltd
lods
leave
jno
shll
add
mov
imul
clc
xlat
inc
push
inc
loopne
inc
insl
inc
mov
movsl
inc
jno
lods
arpl
addl
aam
mov
fs
or
mov
data16
int3
and
xchg
sub
pop
pop
repnz
js
mov
bound
sbb
mov
rcrb
and
and
sar
and
das
sub
lret
fsubs
mov
or
or
jae
sbb
and
add
dec
cmp
push
mov
adc
fldcw
push
dec
pushf
mov
sbb
fmull
cmp
cmp
cmp
sub
popf
rcl
and
adc
pop
mov
dec
loopne
or
jns
sub
dec
add
adc
pop
add
cmp
jmp
ret
repnz
push
dec
pop
test
lock
push
sub
or
fldenv
test
popa
hlt
adc
xorl
jmp
out
push
push
inc
jmp
pop
dec
lahf
dec
sbb
dec
test
xchg
push
jecxz
daa
mov
insl
bnd
outsl
int
pop
out
mov
dec
jp
cmc
ret
mov
add
cs
jne
pop
xchg
mov
jne
nop
cmp
mov
mov
je
pop
xchg
jb
or
xor
outsb
xor
pop
push
dec
inc
fs
loop
out
mov
pop
cwtl
and
lcall
cwtl
sbb
and
insb
dec
imul
pop
cmp
and
add
cli
imul
jb
mov
cmp
jne
test
dec
sub
ffreep
lret
shlb
jecxz
movsb
pop
or
inc
xchg
mov
sbb
mov
pop
adc
stc
out
inc
int3
mov
mov
outsb
dec
shlb
push
std
xchg
shrl
mov
xchg
inc
insb
xchg
xchg
ds
dec
lcall
jbe
rclb
outsb
sub
repnz
inc
jmp
std
repz
jns
xchg
dec
xor
inc
xchg
mov
push
mov
push
lcall
syscall
in
fs
mov
cmc
call
gs
fmull
stc
adc
int3
pusha
test
cmp
aad
pushf
dec
cmp
pop
mov
cli
movsl
and
lds
fisttps
loopne
fwait
adc
jle
clc
push
leave
and
lretw
dec
es
data16
aas
gs
xchg
dec
mov
das
xchg
xchg
lock
or
out
push
adc
add
dec
jno
inc
mov
xchg
out
movsl
fwait
jae
jmp
sub
mov
mov
inc
aas
sub
mov
das
fucomp
jbe
sbb
out
mov
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
scas
pop
mov
inc
out
push
addr16
ja
xchg
xchg
cmpsl
push
mov
outsb
xlat
jle
dec
negl
stos
pop
mov
inc
out
push
addr16
ja
xchg
xchg
aas
cmpsl
push
mov
outsl
xlat
jle
dec
negl
scas
pop
mov
inc
out
push
jle
dec
ja
xchg
xchg
xchg
or
out
sbbl
pop
mov
imul
push
lock
faddp
push
stc
push
jmp
dec
test
mov
imul
cmp
dec
fnstcw
leave
outsl
clc
push
jmp
dec
mov
dec
dec
sbb
inc
imul
cmp
sub
sbb
xchg
faddl
faddp
adc
testl
cmp
sub
pop
or
mov
dec
inc
pop
insl
inc
pop
inc
pop
push
adc
in
or
inc
mov
mov
mov
loop
xchg
mov
rorb
mov
mov
stos
mov
loop
ljmp
push
push
jle
cmp
jb
pop
imul
sbb
or
xor
leave
das
and
loopne
xchg
mov
dec
int3
pop
test
scas
xchg
adc
push
sub
es
jmp
mov
push
dec
push
add
pop
pop
pusha
popa
adc
xorb
jmp
sbb
mov
push
jecxz
sub
push
cmc
pop
call
imul
cmp
call
stc
cs
jl
pop
out
pop
int3
xor
cmp
sub
pop
ficomps
test
jnp
sbb
adc
daa
lret
cmp
jecxz
xchg
dec
cmp
pop
dec
mov
mov
adc
daa
fcompl
std
ret
sbb
sbb
adc
cmp
sub
fnstcw
leave
push
stc
push
jmp
dec
mov
mov
imul
cmp
sub
fnstcw
leave
push
stc
push
jmp
dec
mov
sbb
push
pop
scas
and
push
mov
leave
int
insl
mov
loop
add
sub
inc
hlt
sub
ret
pushf
imul
fmuls
inc
cmpsb
movsl
add
jns
insl
push
stc
adc
push
inc
xor
cmp
pop
push
out
loop,pt
lret
cld
dec
lret
mov
inc
ja
arpl
jnp
push
cpuid
mov
mov
stos
xchg
int3
popa
idivl
adc
test
enter
dec
push
push
xchg
aas
mov
gs
sub
push
jb
outsl
jbe
xor
sti
add
mov
popa
pop
jnp
add
and
jno
fwait
jbe
mov
fistpl
jns
lcall
inc
lock
test
mov
ss
mov
ficompl
cmpsl
rolb
jae
cltd
xchg
xor
fstps
in
pop
movsl
mov
stc
loope
pop
jecxz
mov
dec
call
push
jo
sbb
ljmp
push
pop
pop
cs
lcall
sub
pop
jmp
mov
movsl
jg
mov
sti
lea
or
out
adc
jbe
pop
add
pop
scas
mov
cmp
pop
add
cltd
push
jp
xchg
out
test
jno
mov
add
test
adc
jo
dec
enter
push
je
xchg
add
movl
loop
mov
jae
cmp
test
pcmpeqd
mov
cmp
into
loop
inc
das
adc
je
stc
dec
cmc
lret
repnz
movsl
mov
mov
jo
mov
xchg
cld
dec
push
ljmp
pop
dec
add
push
int3
add
xor
mov
or
popa
repz
fiaddl
jle
out
mov
xor
pop
push
mov
lret
xchg
mov
js
sbb
jmp
out
cli
mov
push
loopne
sahf
ds
dec
divb
mov
xchg
push
ret
fmulp
stc
aaa
addr16
sub
in
icebp
insb
nop
mov
cld
lret
fbstp
xchg
movsl
push
sarl
cltd
add
adc
and
mov
int3
mov
sti
sub
ret
nop
loopne
sub
std
lahf
movhps
and
shrb
pop
mov
iret
icebp
cmp
popf
addr16
and
add
ret
ja
fmull
out
addr16
outsb
fsubrl
and
add
xor
enter
mov
test
mov
mov
mov
push
js
aaa
nop
out
pop
pushf
aad
pop
mov
popl
push
addr16
jmp
jl
mov
cli
jne
push
add
jno
ret
xchg
add
std
cs
ljmp
out
mov
xchg
xchg
outsb
fdivl
ja
add
outsl
and
lods
sbb
lock
push
pop
imul
cmp
lret
pop
je
pop
pop
push
sub
and
enter
add
jecxz
icebp
sub
loopne
lds
jmpw
sub
jo
lock
jbe
loopne
jne
jno
sub
lods
add
dec
sbb
into
shrb
fnstcw
out
dec
ret
fsts
and
xchg
sbb
lret
jmp
pop
outsb
mov
sahf
js
into
pop
xchg
movsb
andb
lods
pop
mov
mov
or
fidivl
xchg
xor
ljmp
pop
lret
sub
xorb
test
pop
jno
mov
cmp
in
mov
inc
arpl
out
and
subb
sbb
aas
in
cmp
xor
sub
dec
add
pushf
iret
ret
sbb
mov
loop
jb
cwtl
mov
push
test
xor
sbb
pop
dec
daa
sarl
subl
ss
mov
xchg
fdivrs
mov
dec
mov
gs
adc
push
vpcmpgtd
fsubs
adc
cltd
jnp
adc
or
outsb
inc
or
lock
pcmpeqd
std
rcll
and
jb
testl
dec
sub
xchg
xchg
cs
cmp
jae
xor
popf
fiadds
leave
scas
subb
lods
js
cli
inc
and
dec
xchg
shrb
sub
fwait
dec
sub
cld
ret
pop
enter
and
inc
outsl
xchg
popf
dec
xchg
sbb
leave
cmp
repnz
dec
lods
ret
arpl
sbbl
mov
imul
xchg
call
scas
movsl
stos
pop
sarl
mov
ja
stos
push
jmp
add
adc
int3
and
jle
fbld
rorl
hlt
dec
mov
or
cmp
adc
das
add
push
pop
mov
sub
xchg
hlt
fldenv
out
outsb
add
dec
or
lret
push
sub
mov
inc
adc
add
out
cmp
mov
cmpsl
bound
or
xchg
imull
nop
and
iret
lret
fdivrs
shll
out
adc
adc
out
fcomps
mov
mov
inc
cmp
sbb
nop
loope
mov
jb
mov
shl
cld
rol
movsl
add
fiadds
in
xor
lds
add
sahf
aas
cmpsb
xor
jmp
dec
popf
jge
out
jecxz
fcmovbe
add
push
cmp
and
add
dec
mov
lock
dec
fiadds
sbb
frstor
mov
inc
filds
jbe
dec
push
fimull
pop
push
jp
cmpsl
mov
fisubrs
lds
or
js
lcall
les
sub
mov
gs
shll
test
mov
xor
mov
push
daa
jl
cwtl
in
ljmp
mov
inc
mov
rcrl
fimuls
jmp
mov
call
call
loop
hlt
xor
in
xchg
and
push
shrb
jg
in
nop
sub
sub
cmp
or
mov
push
or
inc
xor
insl
xor
mov
iret
dec
and
pop
xor
cmpsl
mov
xchg
dec
mov
dec
xor
add
popf
cmp
stos
sub
cmpl
adc
cmpb
pop
std
xchg
imul
sub
jnp
cld
pop
add
fimull
sbb
shll
sarl
jns
dec
hlt
movsb
sub
sbb
arpl
push
ds
test
mov
dec
mov
inc
ret
pusha
cmp
mov
mov
into
xor
imul
icebp
out
xor
pop
lea
fs
sahf
repnz
setno
fdivl
stos
pop
test
fcoml
sbb
inc
fidivrs
loope
pop
xchg
faddl
or
jbe
pop
sbb
out
mov
or
pop
dec
xchg
lds
repz
ja
insl
and
mov
ds
cmp
dec
test
push
call
mov
faddl
out
data16
bound
xor
mov
pop
cmp
xchg
les
adc
and
hlt
adc
ja
repnz
adc
pop
test
pop
mov
or
bound
xorl
in
shlb
orl
popa
jp
cmp
jmp
inc
sbb
adc
jb
jb
daa
cli
fisttpll
cmp
xor
test
data16
andl
int
pop
pop
call
xor
xchg
lret
fcmove
jle
pop
int3
sahf
sbb
std
cmc
daa
das
sbb
or
outsl
incl
push
es
xchg
scas
pop
shlb
push
imul
xchg
mov
in
add
pop
addl
lock
nop
xchg
fidivrs
rcl
cmpsl
mov
jbe
aas
cmp
movsb
jg
dec
arpl
loope
stc
xor
ret
xor
mov
movsl
jnp
xor
pop
mov
dec
mov
push
sub
and
movsl
testb
subl
out
mov
mov
data16
fsts
cltd
iret
adc
jl
pop
imull
add
dec
xor
cmp
mov
or
push
mov
shll
cwtl
outsb
or
js
push
mov
mov
repz
xor
cmp
cmpl
adc
jnp
push
xchg
dec
cli
cmpsb
xchg
and
cmpsb
insb
jecxz
mov
pop
adc
insl
xchg
shll
lds
daa
inc
dec
fwait
jp
fs
int
out
cmpb
into
test
mov
sbb
icebp
pop
push
leave
test
out
pushw
jp
mov
push
lea
incb
stc
out
jge
sub
std
fdivrs
pushf
mov
sub
jmp
lock
jge
fstl
adc
loopne
push
cltd
lds
mov
xchg
into
jg
pop
sti
pop
xor
xlat
fldcw
mov
rcr
dec
rorb
jp
movsb
cs
sub
inc
and
push
inc
add
lret
xor
add
and
adc
jl
adc
call
ficomps
stos
ss
xchg
or
fcmovb
mov
mov
sbb
adc
in
push
scas
adc
icebp
dec
dec
or
jl
std
xchg
pop
adc
jmp
jb
ret
les
mov
ret
insb
sub
mov
pop
inc
out
pop
pop
outsl
lret
int
dec
pop
stos
inc
adc
lret
stc
sub
xchg
inc
fiaddl
inc
xor
jne
and
and
xchg
sbb
add
mov
hlt
dec
ds
jbe
mov
inc
xor
adc
inc
scas
repnz
fisttpll
int
mov
sub
jnp
mov
subl
mov
pop
and
fcomi
jmp
shrl
in
retw
sbbb
push
push
add
stos
adc
daa
xchg
jge
std
stos
sub
mov
cmp
aam
sbb
mov
dec
fwait
notl
mov
adc
xor
fsts
pop
popa
jae
xchg
roll
loop
ja
std
pop
js
sbb
jge
in
xchg
ret
cmp
sub
inc
adc
imul
lret
scas
add
jns
xor
sbb
test
ss
adc
mov
orl
inc
imul
add
push
ds
out
out
push
shll
inc
mov
push
addr16
hlt
cli
nop
divb
lahf
addr16
je
aas
rcl
xchg
mov
js
out
imul
dec
testb
push
das
pop
and
pop
es
xchg
inc
les
sbb
repnz
cltd
out
pop
popl
add
in
xlat
sub
cmp
push
fnstenv
sub
xchg
add
aam
sbb
and
cmp
stos
test
mov
push
mov
outsb
xlat
aas
js
pop
mov
pop
mov
jmp
stc
mov
jmp
xchg
sub
pop
pushf
test
std
mov
cmp
jne
int3
fdivrs
sbb
inc
hlt
ds
imul
pushf
out
xchg
int
jp
jecxz
out
fadds
test
in
xor
inc
jecxz
ds
out
mov
mov
es
or
pop
popa
movsl
and
test
xchg
pop
loope
push
clc
cs
sbb
gs
out
jae
jl
hlt
push
sbb
mov
gs
sub
das
pusha
idivl
pop
lds
das
inc
jecxz
lret
mov
mov
out
and
test
push
leave
loop
shrb
les
mov
sub
ret
add
and
and
mov
pop
mov
pop
lea
aad
dec
ds
sahf
mov
push
mov
ret
pusha
xchg
divl
dec
fwait
add
sbb
je
add
adc
pop
push
jns
inc
adc
arpl
and
mov
pop
or
and
cmp
mov
sbb
dec
jno
pop
xchg
xorl
push
mov
je
dec
dec
inc
movl
pusha
incl
cmpsb
lea
clc
push
jo
jne
mov
mov
sub
test
ret
cmp
aaa
out
mov
mov
in
xchg
insl
xchg
loop
add
outsl
mov
push
gs
mov
std
mov
mov
sub
add
mov
mov
sub
iret
lock
hlt
mov
lea
cmp
nop
inc
jae
stos
mov
xorb
test
adc
data16
call
leave
popf
mov
int
push
jnp
js
sarb
mov
xchg
pushf
cmpl
jmp
insl
push
pop
scas
lret
add
fnstcw
incl
arpl
vorps
jle
push
xchg
dec
insb
jbe
mov
sbb
loopne
cmpsl
lcall
and
xchg
add
aad
mov
mov
iret
sti
push
std
gs
dec
cmp
insl
cs
pop
aam
dec
or
stc
inc
xor
jo
mov
or
bound
and
ret
add
and
push
ljmp
loope
roll
fsubl
push
sbb
adc
mov
ljmp
push
cs
je
xchg
sbb
jne
loop
stos
cli
mov
jnp
aas
xchg
dec
and
hlt
les
mov
fucomi
mov
ljmp
imul
inc
call
cmp
pusha
and
xchg
mov
roll
fbstp
cmpb
xchg
jo
aaa
clc
xor
and
adc
cmp
jns
cmpsb
iret
xor
push
adc
cmp
pusha
and
test
shl
and
lret
sti
into
mov
sti
cmpsb
xlat
imul
sbb
jle
and
insb
cmp
loop
popf
adcb
pushf
mov
push
enter
scas
call
sbb
fdivl
xor
test
mov
inc
or
cmp
pusha
rcl
inc
mov
cli
push
or
push
sub
ds
dec
mov
mov
pop
loop
ss
int3
jmp
mov
das
sbb
test
mov
jns
stc
cwtl
dec
or
xchg
shl
or
rcr
pop
pop
lcall
mov
push
imul
sbb
mov
repz
sbb
sbb
test
enter
pop
dec
into
int3
pop
cs
mov
xchg
cmp
xorl
clc
push
in
gs
out
inc
sub
sub
jle
push
xor
rol
mov
jecxz
mov
subb
or
xor
fisubl
scas
lcall
xchg
out
mov
es
hlt
inc
outsb
ret
mov
mov
sbb
cltd
rorb
leave
pop
inc
cmp
repnz
xchg
aaa
shl
xchg
xlat
popa
fdivrl
lds
popf
add
pushf
adc
mov
and
das
adc
rolw
aas
pop
jns
xlat
xor
xchg
fiadds
loopne
jnp
xor
out
inc
scas
and
sbb
mov
scas
jnp
jne
es
dec
flds
sbb
and
fdivr
mov
outsl
repnz
lock
ficomps
into
mov
js
push
jg
sub
mov
pop
es
movsl
es
push
push
movsl
lock
test
leave
pop
js
jo
les
ljmp
xchg
lock
out
mov
sub
add
jl
push
lret
mov
push
lock
and
cmp
aas
sub
outsb
push
dec
mov
ficompl
nop
add
pop
jle
ror
es
dec
out
jge
mov
imul
sub
out
popa
sbb
or
mov
scas
addr16
push
push
pop
out
stos
mov
or
cli
jns
sub
dec
lock
xchg
ja
pushf
insb
mov
pop
xor
add
push
iret
fwait
movsl
cltd
cmpsb
jnp
pusha
outsl
daa
pop
add
push
xchg
int3
mov
jecxz
jle
sub
shr
fisttps
out
push
loope
xchg
sub
cmc
inc
mov
loop
mov
popf
cmp
ljmp
mov
mov
push
sbb
outsb
cs
push
and
pop
and
sbb
inc
ljmp
jns
sbb
hlt
jmp
and
mov
sbb
shl
mov
fxch
pop
test
cmp
inc
push
push
or
mov
cmpsb
cmp
mov
and
lods
sbb
inc
pop
lcall
mov
stc
jno
fs
test
stos
or
test
std
pop
jb
cmp
and
pop
sti
cmpsl
insb
insb
shrl
in
dec
scas
dec
fstpt
lahf
jle
jge
jb
adc
jmp
ror
sbb
add
rcl
aas
jno
and
mov
cmpsb
adc
add
xchg
roll
adc
shl
adc
outsb
pop
cmp
mov
jmp
and
add
cmpsb
out
ds
jecxz
cmp
xlat
add
jb
pop
fwait
rcll
xchg
mov
jo
jno
jb
aad
idivl
and
push
dec
jmp
mov
pop
in
mov
inc
popf
jle
mov
cmp
jns
or
cltd
xchg
jle
jmp
xchg
mov
cmpsb
mov
cltd
push
push
xor
hlt
inc
loopne
adc
in
int3
rorl
lea
out
lret
out
add
test
mov
jbe
jecxz
mov
out
pop
sub
adc
jp
adc
or
pavgw
ljmp
imul
std
or
add
movsl
movsb
jp
test
enter
or
cmpsb
cmp
mov
jne
push
xor
movsb
icebp
sbb
or
dec
mov
shlb
dec
xchg
sub
mov
adc
cs
dec
push
mov
lret
fstp
cmp
repnz
lods
mov
and
test
xchg
push
test
cmc
add
daa
mov
test
cmpsb
dec
mov
mov
je
jo
int
mov
or
and
dec
lahf
je
inc
in
ret
xchg
adc
inc
mov
xchg
sub
add
cmc
inc
pop
icebp
adc
push
popa
inc
mov
test
xchg
fdecstp
lret
enter
sahf
or
out
mov
aad
xor
jne
jmp
mov
in
add
jnp
arpl
cmp
out
hlt
cmp
jne
shl
pop
mov
dec
js
ljmp
jl
lea
nop
aas
jmp
nop
jl
sub
mov
stos
sbb
shrl
ret
pop
add
jns
stos
add
iret
lahf
pop
jb
andl
adc
mov
sbb
add
xor
aad
mov
xlat
loopne
inc
int
cmc
cmpsb
xor
push
cmc
and
mov
xchg
ret
call
jb
jg
loop
lea
pop
add
mov
sub
mov
sbb
jo
stc
sbb
sub
nop
adc
jne
mov
mov
adc
jno
push
add
cltd
jl
out
mov
pop
fisttps
test
popf
cltd
pop
dec
ljmp
push
dec
xchg
into
mov
std
xor
dec
imul
xor
repz
inc
pop
sub
dec
cmp
pop
setae
sbb
mov
mov
or
sbb
test
mov
pop
pcmpgtb
pop
sar
test
loope
mov
loop
or
bts
inc
enter
arpl
enter
mov
mov
xchg
sub
add
cmp
cld
rcrl
jg
xchg
loope
xor
pop
sub
das
pushf
inc
cld
add
jle
popa
jge
ficomps
orb
xchg
out
sbb
aaa
ret
repz
push
fisubs
daa
fcomp
int
mov
popf
fdivrl
lds
sbb
imul
jl
sub
subl
sbb
cwtl
divb
in
cmc
mov
jb,pn
out
xchg
fcmovu
xor
sub
mov
loop
das
pop
mov
cmp
push
fcompl
mov
iret
les
shr
flds
mov
mov
ffreep
pop
and
pop
and
mov
fadds
popa
stos
rorl
pop
sub
xor
aad
mov
or
mov
sti
fidivrl
mov
push
push
mov
dec
shrb
push
inc
adc
cmp
notl
jle
out
push
push
sbb
sbb
mov
cmpsl
dec
xchg
in
js
ffree
pop
mov
mov
popa
sbb
or
mov
into
xchg
cltd
stos
cmp
xlat
mov
push
inc
stos
notb
out
inc
sbb
dec
xlat
shl
xlat
cmp
sub
enter
inc
int
xlat
pop
faddp
in
push
inc
jns
push
pop
push
mov
inc
data16
lock
cmp
pop
adcb
cld
mov
xchg
xor
push
mov
test
shl
push
xchg
jo
inc
dec
dec
leave
jns
imul
cmp
sub
fnstcw
leave
push
stc
push
jmp
dec
mov
mov
imul
cmp
sub
fnstcw
leave
push
stc
push
jmp
dec
mov
mov
jns
imul
push
sub
fnstcw
leave
stc
push
jmp
dec
mov
loop
aam
mov
or
cmp
cs
arpl
divb
inc
mov
jg
dec
push
fistps
dec
je
loopne
lock
iret
rcr
mov
nop
lahf
pusha
outsl
jo
inc
dec
push
pop
and
xor
loopne
lock
shlb
pusha
std
jo
inc
out
pop
and
xor
add
adc
loopne
lock
mov
clc
mov
outsl
jo
or
add
stos
sbb
mov
adc
popa
in
repz
iret
or
and
xlat
lret
xor
adc
aas
ret
mov
pop
xchg
lret
cltd
cmpsl
pop
iret
pop
scas
dec
jl
mov
in
jno
dec
push
xor
jl
pop
mov
mov
push
push
jo
add
cmpsl
scas
jo
pusha
pop
mov
push
loopne
adc
lock
scas
sar
and
jecxz
nop
addr16
sbb
fcmove
or
jp
pop
adc
mov
fcomip
cld
fdivrs
cwtl
scas
jo
lret
shrb
clc
dec
jecxz
out
es
mov
pop
aam
mov
orl
push
push
and
xor
add
adc
rcr
xchg
mov
nop
icebp
adc
xor
sub
push
jno
pop
push
push
inc
data16
mov
mov
aam
cld
lret
in
into
in
aas
sub
ds
sbb
inc
push
or
popa
push
test
jmp
ret
repz
hlt
push
cmp
and
jo
popa
dec
xor
add
adc
loopne
lock
iret
rcr
mov
nop
lahf
pusha
outsl
jo
inc
dec
push
pop
and
xor
add
adc
loopne
lock
iret
rcr
mov
nop
lahf
pusha
outsl
jne
int
add
mov
sbb
push
in
imull
test
jne
int
scas
sahf
sbb
mov
sbb
or
out
push
sub
xchg
adc
sub
push
push
xor
xchg
and
or
les
jo
gs
or
jns
repz
loope
shl
sahf
mov
adc
jge
addb
and
imul
imul
dec
lock
scas
lods
scas
pop
call
movb
push
push
js
cmpsb
and
push
negb
or
insl
ja
push
xor
es
aaa
pop
mov
stos
inc
lods
shlb
ret
mov
das
enter
iret
fsubp
in
sub
in
mov
or
int3
sub
shrl
jg
outsl
mov
scas
outsl
fwait
cmp
rcll
ljmp
pushf
add
sub
xchg
or
xor
mov
cwtl
rolb
dec
or
into
xchg
sahf
push
outsl
push
in
xchg
dec
or
cmp
mov
jle
in
test
in
xchg
and
test
subb
jno
enter
xchg
fiaddl
in
aad
mov
fdiv
cli
or
jo
pop
cli
sbb
jecxz
cmp
stos
xchg
aaa
push
lret
inc
loope
test
imul
add
jo
ret
int
in
pop
sbb
xchg
scas
loop
fsubr
push
sarb
in
xlat
add
and
and
push
scas
rcl
dec
repnz
jle
imul
mov
add
outsl
decl
sahf
and
mov
cmp
ret
jmp
mov
shrl
cmp
add
lahf
pop
add
popa
ja
xchg
iret
mov
jns
xor
cld
aas
mov
mov
add
lcall
loope
mov
cmp
sbb
daa
xor
xor
loopne
cmp
push
lods
xlat
push
adc
and
sti
sbbl
lcall
dec
and
subb
lss
test
cmp
sbb
imul
xchg
sub
sub
mov
mov
cmp
sahf
fdivrs
enter
mov
push
je
nop
ljmp
loopne
lret
adc
repz
repnz
xchg
push
push
and
call
insl
out
ficoms
and
mov
cld
leave
aaa
jo
fsub
fdivrs
xchg
dec
flds
push
sbb
and
das
sub
dec
movsb
push
ss
mov
ficoms
faddl
es
cwtl
sbb
pop
adc
add
pop
aad
cmp
or
xchg
sub
xchg
jae
xchg
sub
into
hlt
jge
test
mov
xor
xchg
loop
fs
mov
adc
mov
std
pop
fsubrl
enter
mov
fstps
push
cltd
lods
push
mov
daa
pop
in
sub
cmp
shrb
sub
cmpsl
cmp
sbb
or
push
sub
aad
outsl
les
ret
sub
test
sti
int3
std
jo
adc
mov
dec
or
xchg
push
imul
cmp
aad
scas
mov
test
das
ret
mov
orl
xchg
xor
cmp
sub
or
adc
int3
or
int
pop
jle
mov
pusha
jge
imul
jns
test
in
lock
aam
nop
mov
mov
aad
push
cs
dec
xor
ja
or
lret
dec
xor
jmp
data16
push
enter
jnp
fistpll
loope
xlat
sbb
mov
addr16
add
push
ds
fiadds
sbb
jno
shl
or
cs
mov
cs
in
enter
ficompl
lods
sub
sahf
test
sub
cmpsb
insl
rcll
idiv
push
aaa
loop
lods
inc
roll
outsb
inc
or
flds
mov
jnp
push
push
pop
cltd
mov
cmc
mov
fstpl
mov
jecxz
je
inc
mov
inc
test
in
inc
jne
mov
sub
icebp
inc
cmpsb
jecxz
sub
jno
jge
pop
cmp
xchg
pop
xor
aad
fidivl
and
sbb
add
cmp
dec
mov
rcl
jecxz
mov
jl
icebp
pop
ret
cmpsl
sub
rolb
sti
adc
and
addr16
out
push
outsl
and
pop
clc
loopne
ret
movhps
ret
inc
cmc
mov
in
mov
sub
cld
add
iret
adc
mov
xchg
pop
cmc
stos
std
loope
insb
jb
into
test
mov
sub
dec
std
push
inc
sub
pushf
cmp
pop
callw
or
pop
mov
mov
jbe
insb
jl
scas
or
addr16
jp
jnp
jge
test
adc
sub
fwait
and
lahf
mov
scas
mov
out
int
fnop
fbld
sbb
jg
add
and
es
ss
mov
inc
add
mov
adc
outsl
out
addl
iret
es
in
shr
push
iret
and
lods
push
and
pop
and
ja
or
pop
imulb
loopne
mov
dec
add
addb
jl
xor
lods
jmp
xchg
dec
or
xor
setg
xchg
inc
push
mov
inc
add
mov
dec
lods
rcrl
or
pusha
push
inc
pop
mov
xchg
inc
and
adc
fwait
adc
shll
sub
xor
inc
dec
sbb
xor
rorb
push
ljmp
js
xchg
xor
lcall
lods
xor
mov
mov
xchg
mov
outsb
fwait
int
or
and
je
jne
sub
mov
ds
lods
roll
mov
xchg
adc
inc
push
inc
mov
pop
pop
rorl
adc
cmc
mov
push
repnz
xorl
popl
sbb
mov
add
lret
mov
jne
jmp
mov
fdivrs
enter
sub
in
or
jp
lds
sbb
flds
cmp
adc
aaa
ljmp
pop
adc
mov
mov
and
test
mov
or
sub
leave
xor
mov
fcomi
rcrb
in
and
push
cld
pop
roll
dec
test
sbb
arpl
push
lea
and
fdivrl
popf
pop
add
repz
mov
popa
mov
sbb
jb
fnsave
lea
pop
xchg
push
inc
imul
mov
xchg
cmpsb
into
fiaddl
jns
adc
and
sbb
and
jo
scas
sbb
mov
xchg
or
lock
adc
xor
dec
cmpsl
test
out
push
gs
out
aaa
popf
mov
or
sub
xchg
loop
fisttpll
adc
aaa
or
sub
sarl
iret
fsubrp
insl
loopne
mov
sarb
mov
hlt
jmp
test
sti
dec
or
push
jno
xchg
popw
hlt
add
cmpsb
add
lret
repz
rcrl
cmp
les
or
mov
test
daa
sub
outsb
gs
push
or
jno
insb
or
lods
mov
lds
lods
jl
mov
aam
pop
mov
gs
rcrb
jmp
push
jnp
call
xchg
jae
imul
nop
mov
or
aad
cmp
push
into
pop
or
jo
adc
push
pop
add
xchg
iret
add
jg
xor
testl
and
mov
cmp
scas
cmp
push
dec
in
gs
adc
xor
js
neg
pop
popf
mov
sub
and
adc
inc
aam
and
mov
cli
mov
sub
mov
sub
clc
mov
and
insl
xor
cmp
mov
and
mov
fwait
ret
pop
popa
inc
push
cld
or
repz
sahf
and
mov
jb
lods
sub
inc
movsl
lods
mov
movsl
inc
xchg
fs
adc
xor
ret
out
std
ds
imul
pusha
mov
aaa
rol
fs
xchg
mov
enter
popa
subb
adc
pop
sub
sub
aad
inc
push
xorb
rolb
or
jl
jae
jecxz
sub
jle
icebp
cmp
sub
xchg
fmul
pop
dec
ja
inc
push
ljmp
adc
add
leave
sbb
pushl
jo
out
aas
nop
in
pop
mov
adc
outsl
outsl
mov
cmp
sub
jge
leave
sub
adc
sub
or
dec
jmp
sbb
sbb
mov
add
dec
in
lahf
jns
jg
call
mov
fwait
inc
jge,pt
push
dec
adc
and
ret
stos
gs
roll
lods
or
mov
push
push
pop
and
sahf
xor
mov
pusha
ror
push
repnz
loopne
fcmovbe
xrelease
mov
fstl
scas
jl
pop
outsb
mov
and
adc
ja
mov
testl
scas
and
sahf
pop
rolb
adc
cmpl
pop
aam
mov
mov
fists
and
ret
divb
jo
cmp
fwait
test
sbb
jle
lcall
cmp
cmp
xor
and
test
pop
or
inc
out
lret
sub
sbb
or
movsb
addr16
xor
jae
and
push
cmpsb
xor
lcall
or
mov
sbb
insb
int
arpl
mov
or
push
push
sub
adc
push
mov
jp
xor
aaa
inc
or
mov
loopne
push
xor
hlt
mov
aam
inc
dec
or
push
sbb
ja
push
repnz
mov
cmp
jmp
lret
dec
mov
mov
loopne
daa
mov
jne
dec
and
jge
stc
adc
mov
mov
xchg
mov
mov
flds
fsubl
cmp
stos
xchg
mov
push
pop
lahf
xor
sub
and
dec
jns
fcomip
cmp
rcl
mov
push
loopne
aaa
stos
lahf
push
xor
pop
xchg
sbb
sub
aad
mov
inc
mov
stos
xor
and
push
jmp
mov
sub
jl
cltd
and
sub
rol
mov
incl
ljmp
cmpsb
lods
rcrl
inc
pop
or
mov
mov
sbb
lds
xchg
inc
jb
push
in
pop
andl
jp
fnsave
decl
jb
inc
dec
iret
por
movsb
xchg
push
or
rol
lods
and
lods
pop
sbb
sbb
ret
cmp
jne
xor
test
fldcw
adc
push
mov
pop
ljmp
mov
mov
xchg
pop
dec
push
ds
leave
pop
sub
mov
xor
lret
ret
push
insl
jecxz
pop
xchg
cmc
ret
mov
lods
cmpsl
mov
push
jns
adc
sti
and
xor
ds
fadd
xchg
push
mov
cmp
pop
das
jle
jge
mov
xor
push
pop
aas
push
mov
int3
pop
int3
ficoms
cmpsl
or
dec
fs
and
push
test
mov
ret
xor
ds
sub
subl
ret
adc
xchg
inc
scas
mov
cmpsl
push
out
xor
mov
test
cmc
xor
je
adc
xchg
add
nop
cmp
adc
or
arpl
xorl
cli
mov
bound
mov
cs
push
stos
inc
ljmp
lds
push
fdivrs
jmp
sti
sbb
cmp
push
mov
movsb
out
lods
ret
mov
fisttpl
insb
pop
js
stos
cmpsb
aad
fsts
sub
loop
jmp
sbb
pop
lods
das
xlat
icebp
imul
mov
xlat
mov
scas
push
shlb
jp
and
sbb
iret
jae
cmp
sub
push
cmp
xor
pusha
aad
inc
inc
ds
push
into
inc
pop
in
push
pusha
movsl
ja
xor
mov
loopne
popf
mov
push
scas
rcr
pop
cmp
insl
jo
clc
out
push
inc
xlat
pop
sub
inc
inc
fsubl
out
adc
nop
ss
mov
enter
sbb
adc
ljmp
and
mov
pop
sbb
cltd
jge
iret
sahf
mov
xchg
cmpsl
dec
pop
pushf
xor
adc
pop
les
jge
loope
push
mov
cmp
push
push
in
in
sub
mov
jne
popa
outsb
inc
sub
pop
mov
rcl
and
fmul
jg
movsl
js
dec
pop
pop
ss
fdivrs
adc
stos
lods
cmp
jge
lret
iret
mov
jmp
adc
js
scas
stc
mov
fwait
sub
mulb
push
add
push
mov
out
cmpsl
iret
out
cmp
sub
jp
shlb
fldt
ljmp
dec
and
mov
add
insb
fstps
push
push
push
and
mov
fmul
mov
call
mov
cmp
lods
aaa
inc
loop
xchg
and
mov
xor
fabs
je
popf
lret
jp
je
iret
inc
mov
sub
mul
mulb
cmc
fdivp
or
repnz
insb
sub
lds
fstl
and
xor
fisttpll
mov
jb
lahf
and
mov
cld
cmpsl
push
cs
add
mov
aam
sub
mov
mov
call
adc
inc
sti
bound
pop
inc
int3
mov
cmp
fnstenv
aam
sub
jb
mov
test
gs
pop
mov
sub
push
aad
pop
addr16
jmp
sbb
xor
mov
es
inc
mov
stc
in
pop
dec
xchg
jmp
test
dec
xor
sbb
ja
fcoms
inc
mov
cmp
sahf
push
jne
iret
nop
add
leave
js
inc
data16
ficoml
test
and
pop
pop
mov
gs
inc
popa
leave
and
imul
mov
mov
leave
adc
out
sbb
bound
jne
adc
add
test
lock
stc
icebp
xchg
inc
call
pushf
xchg
movsb
inc
mov
popa
out
mov
and
pop
movl
xchg
xchg
and
dec
cmpsl
pop
in
pop
adc
cltd
add
mov
cmp
in
leave
add
sbb
test
mov
lcall
mov
pop
cmp
sar
xchg
test
test
dec
dec
into
mov
mov
rcl
imul
jmp
inc
xor
mov
sub
cmc
adc
imul
das
adc
adc
push
rcll
out
hlt
cmp
add
jns
mov
jmp
test
rcl
jl
lcall
repnz
xchg
test
js
into
cli
fcomps
mov
out
aad
cmp
cli
lcall
or
cli
imul
mov
lods
sarb
lods
sub
sub
push
repz
aam
je
push
dec
fsubr
imul
mov
cmp
lcall
call
mov
lds
mulb
lret
cmp
das
adc
mov
xor
push
lahf
in
sub
and
or
mov
lock
jbe
stos
mov
inc
sub
or
cwtl
sbb
dec
inc
inc
inc
into
loope
mov
mov
inc
jo
dec
jge
fisttpl
adc
push
xchg
inc
aas
nop
jbe
mov
stos
mov
lahf
push
mov
dec
xchg
dec
mov
test
fsubr
sar
popf
and
xchg
cmp
jnp
jnp
in
lods
outsl
ret
sbb
nop
fwait
and
pslld
cmp
inc
and
mov
jecxz
cmp
imul
les
mov
xorb
xchg
dec
pop
push
in
push
or
cmc
xchg
inc
mov
lret
or
ss
sahf
inc
ja
bnd
and
xchg
push
sbb
pushf
sbb
ja
add
test
cltd
loop
push
repz
xchg
add
dec
pop
daa
adc
cmp
jp
dec
xor
sbb
mov
and
mov
call
sahf
out
divl
popf
jns
mov
push
data16
dec
pushf
aad
sti
mov
repz
out
sti
dec
je
dec
mov
inc
xchg
pop
pop
dec
jmp
jl
jne
inc
test
pop
in
pop
mov
dec
pushf
mov
adc
xor
dec
pop
adc
push
repz
shrb
fimuls
lods
sub
scas
add
mov
out
cmc
out
mov
xchg
push
mov
jmp
sbb
pop
or
adc
jge
mov
push
mov
xor
push
cmpsb
push
push
jmp
lds
dec
int3
push
mov
pop
sbb
sbb
clc
cmp
add
sbb
insl
into
rorb
insl
sbb
aam
stc
fiadds
cmpsl
into
ficompl
not
pop
sub
add
mov
decl
add
ljmp
push
and
and
les
fincstp
jns
ds
mov
jne
fiadds
xor
xchg
inc
push
xor
scas
movsb
mov
call
popf
in
cmpsl
dec
lahf
xchg
xchg
mov
jo
insb
movsl
mov
dec
xor
int3
jae
mov
pop
push
in
js
je
push
jl
push
sub
stc
test
call
add
xorl
cmc
push
push
hlt
fs
je
sub
xlat
dec
adc
leave
dec
ds
outsb
insb
xor
mov
xchg
add
push
fwait
icebp
sub
mov
mov
fwait
jecxz
imul
movsb
mov
popf
mov
jns
aas
pushf
xlat
and
sub
adc
rcrb
sbbb
lret
sub
mov
in
popf
fldl
mov
out
jbe
cmc
stos
dec
xchg
aas
pop
in
pop
lea
jl
sahf
xchg
or
push
fistpl
out
mov
shr
sub
adc
jo
xlat
pop
stos
or
jo
push
rorb
andb
mov
outsl
inc
inc
test
pop
inc
cmp
repnz
inc
sub
loop
les
add
imul
out
shrb
stos
add
sbbl
int
xor
je
sahf
into
mov
nop
enter
neg
add
mov
jmp
dec
add
mull
data16
aaa
xchg
jecxz
insb
sahf
sbb
mov
arpl
xchg
cmp
sti
inc
adc
in
bound
sti
es
pop
rorb
mov
jbe
outsl
out
pop
lods
movl
pop
xchg
das
ds
shl
lahf
sbb
adc
addr16
push
sarl
mov
fbstp
sub
sbb
pop
ficompl
sbb
int
xchg
mov
add
je
aam
jecxz
pop
push
not
lcall
pop
jl
ret
js
adc
dec
mov
xor
dec
es
sbb
pop
sbb
xlat
jmp
subb
add
xchg
test
and
jp
adc
dec
fcoml
or
cmp
popa
fwait
clc
inc
lahf
lea
int3
pop
xlat
outsl
mov
xor
scas
cmp
xchg
shrl
int
dec
xor
cwtl
fisttps
and
mov
dec
jnp
push
mov
and
pop
dec
jbe
dec
mov
arpl
push
shl
out
sub
aaa
cld
sbb
popa
xchg
loop
mov
and
cwtl
push
jno
sar
movsb
shl
dec
out
sbb
fcmovnu
call
mov
mov
sti
mov
mov
imul
insb
fadd
inc
mov
cmpsl
out
mov
jns
test
push
nop
push
dec
stc
fistpl
sub
inc
call
jecxz
inc
fisubrl
ds
aad
or
lret
daa
adc
jp
test
js
pop
test
pop
popa
xor
addr16
and
rol
arpl
jg
and
or
lahf
and
jle
xor
mov
jecxz
lret
mov
mov
mov
add
push
push
mov
out
iret
cmc
jle
sbb
sbbb
add
loop
or
mov
and
cmpsb
adc
or
xor
jb
or
cmp
hlt
aaa
out
mov
jecxz
outsl
jge
dec
xchg
jg
and
and
xor
add
adc
loopne
lock
iret
rcr
mov
nop
lahf
pusha
outsl
jo
inc
dec
push
pop
and
xor
add
adc
loopne
lock
iret
rcr
mov
nop
lahf
pusha
outsl
jo
inc
aaa
push
pop
and
xor
loopne
lock
iret
rcr
mov
scas
xchg
lahf
popa
outsl
jno
inc
dec
push
pop
and
xor
add
lock
push
shrb
jg
outsl
pusha
cmpsb
lcall
movsl
xchg
shrb
cmp
dec
cmp
cs
cmp
jp
push
lcall
stos
fidivrl
xchg
cmp
jnp
cmp
sub
pop
dec
or
push
lcall
mov
cli
arpl
imul
sub
push
addr16
stos
jmp
lods
stos
and
dec
jno
popa
pop
stc
js
inc
repz
pop
jle
dec
icebp
sub
repz
das
sti
fiaddl
repnz
loopne
outsb
xchg
mov
mov
scas
pop
stos
orl
jmp
lret
rcrb
and
lret
or
xchg
mov
clc
incl
filds
std
stos
jns
lret
mov
sub
pop
mov
cmp
out
push
fidivl
sbb
push
push
cmp
nop
ror
stos
in
inc
mov
pop
fmuls
cmp
jp
xchg
outsb
pop
sti
pop
xor
jle
fildl
push
repnz
dec
ret
scas
pop
cmp
dec
jp
jg
lcall
stos
lret
and
cltd
sbb
or
pop
and
add
mov
into
mov
or
or
pop
cmp
sbb
jg
pop
and
pushl
mov
adc
out
call
jae
imul
dec
jle
pop
add
mov
hlt
mov
ljmp
pop
sub
pop
cmp
jp
push
lcall
stos
fidivrl
ljmp
pop
sub
pop
cmp
jp
push
lcall
out
aam
jmp
ljmp
insb
jp
dec
mov
shrb
mov
popa
mov
mov
aas
pop
movsl
repz
lea
dec
ljmp
insl
stc
insl
bound
jnp
mov
fincstp
jecxz
dec
inc
pushf
outsl
mov
jg
daa
fcmovnb
jecxz
jb
xchg
cmpsb
add
fcmovbe
pop
gs
or
lods
scas
aad
dec
xor
dec
mov
test
jg
sbb
insb
sbb
dec
mov
outsl
push
jp
jmp
and
lret
addr16
jo
sti
lcall
push
cmpsl
inc
fidivl
fstl
stos
push
aaa
xlat
xchg
imul
std
or
sbb
push
sbb
imul
sub
std
push
xor
sub
das
xor
mov
sbb
enter
test
cmp
leave
push
into
xor
rcll
inc
mov
mov
cmp
inc
sub
addb
lock
mov
pop
test
mov
movsl
or
enter
fwait
mov
sub
mov
scas
jge
cmp
jle
loop
sbb
dec
mov
mov
cld
or
enter
mov
nop
ret
fistpl
lds
fiaddl
push
jl
sub
movsl
adc
jno
push
iret
sbb
jge
and
mov
mov
dec
out
or
int3
pop
push
notb
sbb
inc
xchg
sub
mov
cwtl
inc
xor
aas
lret
iret
repz
dec
pop
jbe
cld
aas
sarl
mov
xchg
cli
data16
sti
inc
dec
fiaddl
call
add
scas
xchg
or
xor
add
mov
dec
mov
jl
enter
jne
call
jae
aas
int
mov
pushl
or
test
inc
outsb
aad
stos
push
mov
cld
mov
sub
mov
popf
pop
adc
test
sahf
inc
xchg
lahf
in
inc
add
rorb
ss
dec
mov
jge
jae
insl
mov
cltd
ds
jbe
cmpsl
cmp
sbb
mov
sbb
enter
adc
pop
xchg
mov
push
rcrb
jnp
cmp
and
xchg
fst
sarb
mov
mov
leave
jp
cmp
fcomps
inc
nop
in
data16
push
ds
enter
xchg
mov
push
mov
int
inc
cmpsb
and
pop
jmp
xlat
xor
dec
jge
push
add
clc
xchg
test
insb
insl
insb
inc
mov
das
rorb
push
mov
rclb
inc
dec
call
into
bound
lcall
jae
fdivl
push
jle
inc
call
and
sarb
xor
stos
stos
or
xchg
jge
adc
lods
push
or
out
jmp
ja
cmp
cld
cli
mov
adc
imul
sbb
into
jl
and
mov
mov
popa
mov
xchg
das
test
test
jae
and
push
or
lcall
mov
push
xor
and
or
mov
fisubrl
cmp
lods
rorl
inc
ret
ja
mov
sbb
fmulp
subb
shlb
inc
ss
jg
popa
shlb
mov
mov
addr16
int
outsb
int
xchg
jmp
cmpsl
xor
fdiv
js
mov
pop
or
shll
mov
fwait
or
lret
sub
test
jle
fbstp
es
jnp
and
mov
add
mov
lret
jl
ror
lods
inc
pop
pushf
cmp
lcall
lret
aam
sahf
icebp
sbb
lret
cmp
push
incl
jne
push
pop
add
jo
test
out
adc
incb
push
gs
dec
or
cltd
push
dec
mov
sbb
jae
dec
mov
scas
push
jbe
inc
xor
call
pop
cmc
sbbl
bound
daa
mov
pop
sbb
fistps
xchg
mov
sti
inc
push
sub
cmp
sub
lret
int3
dec
cmp
pushf
push
adc
mov
jo
arpl
cld
test
aam
js
push
jmp
cld
cmp
push
std
and
cmp
sbb
mov
stos
mov
mov
enter
sub
std
xor
iret
push
mov
je
push
jne
sub
std
add
cmc
les
test
mov
push
adc
push
xchg
xchg
adc
sub
mov
in
popf
lahf
les
mov
push
pop
loopne
addr16
sbb
std
dec
xor
adc
mov
pop
dec
rcrb
shrb
pop
fnstcw
jge
pop
mov
fldenv
mov
adc
or
cmpsl
div
adc
xorb
out
xchg
mov
cmp
inc
sarl
and
mov
lcall
cltd
in
sti
adc
cmpb
inc
ss
mov
mov
out
shlb
stc
mov
add
cmc
data16
jp
mov
stos
dec
leave
outsb
stos
pop
fistps
or
adc
cmp
dec
out
orl
xchg
ret
mov
dec
cmpb
shl
xor
mov
mov
sbb
lds
pushf
mov
inc
jae
mov
mov
pop
mov
repnz
faddl
imul
xchg
pop
mov
xor
mov
cltd
clc
mov
hlt
sbb
sub
insl
mov
cli
test
sbb
outsb
inc
lcall
psrlw
sarb
hlt
icebp
add
mov
jge
pusha
adc
ds
das
inc
jg
shl
fsubp
enter
pop
mov
loope
lods
ds
cmp
lds
push
pop
sbb
pop
sub
nop
into
or
dec
pusha
repz
in
scas
mov
movsl
xchg
jno
sbb
ljmp
ss
jmp
mov
mov
loope
shrb
stc
jle
xchg
in
xor
push
add
stos
cs
lods
pop
iret
push
mov
push
insb
fisubs
cmc
add
mov
inc
inc
fs
xlat
negb
mov
js
xor
mov
cwtl
clc
mov
popa
test
movsl
out
jb
testb
pop
arpl
add
aas
mov
add
sub
add
ljmp
dec
das
pop
ss
push
loope
or
pop
xor
cmp
dec
push
adc
mov
adc
subb
or
negb
testl
cmp
lahf
cmc
sbb
xor
ret
cmpsl
inc
jns
mov
ljmp
xchg
movsb
aas
push
inc
pop
fistps
ja
inc
xor
inc
jbe
jmp
adc
jmp
jecxz
fs
cmp
call
sub
xor
mov
cmc
dec
es
fildl
jns
js
idiv
sbb
jb
pop
or
adc
fst
and
outsl
add
jp
dec
inc
push
sahf
loop
add
testb
fisubl
push
inc
setl
xor
fdivrs
push
jecxz
fsubrs
cmc
mov
cmp
cltd
jae
lcall
mov
lods
mov
xchg
dec
mov
pusha
jle
sub
mov
push
jmp
stos
mov
movsb
shl
cmp
sub
sbb
mov
xor
test
cmpsl
xor
in
pusha
loopne
fstl
mov
popa
mov
into
mov
cmp
mov
cmpl
mov
push
icebp
out
pusha
dec
das
sbb
imul
cmp
fwait
sub
mov
test
mov
mov
pop
test
sbb
sbbb
cmp
test
inc
fcmovnbe
push
imul
xchg
rep
pop
xchg
shll
sub
adc
lret
push
mov
sbb
push
outsl
and
add
mov
inc
and
stc
cmpsl
in
lret
loope
inc
int
cs
enter
mov
sub
cmpsl
mov
pop
insl
mov
andl
out
popa
aam
sbb
or
xchg
stc
imul
shll
mov
and
test
enter
xchg
nop
test
mov
xchg
adc
push
xchg
dec
push
mov
mov
std
daa
dec
dec
xor
jne
rcr
or
adcl
pop
xchg
mov
dec
jo
cmp
cli
jae
inc
push
inc
fs
dec
leave
movsb
mov
icebp
inc
cmp
lock
xchg
dec
out
adc
fwait
addr16
pop
xchg
cld
cmpsl
pushf
shlb
jl
xchg
push
xor
and
neg
shl
aad
xchg
mov
push
bound
aad
cmp
add
pop
dec
ret
push
cmp
jae
ficompl
xor
imul
xchg
jb
fsub
lret
gs
and
push
rcl
ljmp
sub
ds
push
pushf
ret
imul
adc
jl
mov
push
in
faddl
ds
and
or
hlt
lret
push
les
aas
inc
cmp
dec
mov
sbb
insl
and
jle
or
dec
add
gs
hlt
add
clc
inc
dec
push
mov
push
leave
and
jg
inc
push
ffree
orb
stc
fildll
dec
dec
testb
mov
imull
jae
jmp
das
in
cld
icebp
int3
scas
insl
pop
into
lahf
cltd
insb
imul
ds
and
aad
xchg
sbbb
dec
fisubrs
jp
inc
jo
cmp
repz
add
movsl
jle
mov
fstps
push
mov
iret
rcrb
mov
int3
das
test
push
popa
out
add
dec
nop
in
mov
push
es
in
movsb
mov
dec
pop
fldenv
les
out
loopne
inc
sbb
dec
and
stos
test
enter
test
stos
scas
insl
push
jp
jne,pn
sti
inc
rcrl
aam
fst
lods
enter
push
push
imul
mov
aas
repnz
jbe
mov
inc
and
mov
cmp
mov
mov
adc
or
xchg
in
mov
sbb
sub
cltd
scas
repz
jnp
test
mov
mov
push
dec
outsb
aad
adc
stos
mov
pop
mov
sub
stos
jns
loopne
push
std
lcall
mov
mov
push
pop
repnz
je
bound
mov
int3
sub
add
and
dec
jge
in
mov
fwait
push
cmp
cmp
inc
mov
inc
das
mov
out
scas
rclb
into
push
fisttpll
sbb
stc
out
shr
push
mov
push
inc
cmp
insb
mov
sub
movsb
negb
insl
mov
add
ret
in
cmpb
adc
js
pushl
loop
dec
movsb
push
push
pop
mov
cmpl
or
data16
cmpsb
enter
lock
or
mov
cld
pushf
and
mov
mov
sti
pushf
pushf
pushl
icebp
outsl
adcl
iret
adc
inc
sarl
or
or
test
and
xor
mov
pop
add
divps
imul
pop
shrl
mov
std
adc
adc
pop
push
add
sub
pop
sbb
ficoms
lods
lea
xchg
dec
pop
fdivs
std
sub
aas
pop
mov
push
insl
mov
test
sub
push
je
test
aas
pop
xor
imul
push
push
rcrl
mov
mov
mov
push
dec
xlat
in
push
cmp
mov
dec
mov
mov
aaa
add
mov
xchg
mov
loopne
dec
out
pop
sarb
adc
fdivr
jnp
inc
push
pop
pop
mov
mov
rorl
test
jl
sub
out
mov
mov
outsb
pop
out
jb
adc
mov
and
push
push
imul
push
outsl
fiadds
and
iret
fsubrs
pop
lret
pop
fsubl
adc
inc
cltd
sub
mov
andl
icebp
sbb
push
inc
cld
inc
jp
mov
loopne
imul
cmp
pusha
loop
inc
or
xchg
jmp
adc
push
sub
fimull
mov
xchg
aad
cld
mull
or
inc
rorl
add
xchg
test
cwtl
out
or
push
inc
jecxz
loope
jg
add
std
ficompl
aas
pop
mov
mov
jbe
mov
jne
sti
lcall
sbbb
pushf
sarb
sub
dec
xor
orl
mov
push
xchg
cs
nop
scas
mov
repz
push
push
cmp
add
sub
lods
lret
andb
jg
in
divb
or
dec
arpl
testl
add
dec
dec
adc
test
arpl
lock
dec
movsb
fs
lock
fidivrl
adc
out
cmc
inc
test
cmpsb
mov
les
or
repnz
leave
xor
lods
push
orl
inc
push
stos
sbb
ret
stos
sbb
clc
lret
addr16
and
shrl
dec
sti
enter
sti
xlat
in
aaa
mov
icebp
mov
jmp
push
rcrb
mov
cmp
pop
test
js
mov
push
xchg
aaa
push
cmp
aas
jmp
xorl
mov
ret
aad
imul
mov
ja
fmul
movsl
mov
mov
cwtl
outsl
cwtl
mov
pop
shll
jne
inc
rcrb
or
mov
jl
loop
in
and
push
push
leave
enter
hlt
stos
rorl
lea
cli
inc
mov
fisubl
test
inc
xor
repz
outsl
fs
inc
leave
jne
dec
das
jbe
mov
jae
add
or
test
mov
aaa
push
xor
mov
mov
leave
mov
push
loop
add
daa
jb
clc
cmp
lea
loopne
adc
jbe
jne
mov
in
sub
xor
xchg
fs
aad
rclb
imul
in
loopne
nop
call
push
faddp
fidivrl
or
or
mov
pop
or
mov
aas
jge
adc
js
xchg
mov
mov
jle
ret
sarl
mov
into
cwtl
push
bnd
inc
iret
mulb
sbb
xchg
shr
mov
ljmp
maskmovq
testl
ret
push
cmp
mov
fdiv
xchg
das
sub
insl
jp
sbb
xchg
pop
xchg
enter
out
cmpsb
cmp
mov
adc
mov
ret
jns
cwtl
cmp
sbb
pop
mov
loop
stos
push
pop
ljmp
test
cmpsl
outsb
jno
cmp
in
push
mov
aam
inc
scas
xor
adc
sub
push
cmp
mov
inc
imul
add
mov
sub
sub
and
lods
add
adc
mov
jnp
xchg
or
jnp
adc
cmp
or
jl
push
fs
fidivrl
push
fimuls
das
mov
mov
and
sub
xchg
aad
mov
xorl
push
ja
int3
insl
xchg
dec
aaa
jge
mov
jecxz
jno
inc
es
mov
notl
shrl
fadd
ss
push
mov
push
ret
clc
mov
adc
aas
and
sbb
mov
test
cmp
or
jp
std
dec
jge
stos
aaa
jle
shll
xor
cld
lahf
and
repz
inc
adcb
sti
xchg
sahf
filds
into
mov
pop
cwtl
cld
mov
inc
xorl
cmpb
sti
jne
nop
xlat
xchg
dec
jecxz
sahf
fistps
push
addr16
push
leave
mov
dec
jmp
vpacksswb
add
loope
jae
mov
add
test
dec
insl
mov
mov
xchg
stc
dec
ret
test
loopne
dec
dec
fnstenv
fnstcw
cli
test
rorl
and
daa
push
sar
sub
in
int3
call
sub
pop
or
push
out
fdivrs
pusha
mov
pop
jae
call
aaa
jno
in
xchg
mov
sbb
mov
inc
data16
cmp
add
insl
xchg
and
cs
es
ficoms
lcall
out
sbb
mov
jnp
icebp
lock
adc
xchg
push
cmp
and
sbb
scas
inc
insl
cmp
pop
push
cmp
loop,pt
or
pop
sahf
stc
pop
push
xlat
lcall
push
std
fwait
jmp
lret
movsl
mov
mov
int3
leave
fisubrs
lahf
les
test
js
jle
icebp
mov
mov
gs
int3
repnz
dec
jl
mov
jo
data16
test
test
scas
sbb
outsl
stos
clc
push
fidivl
xor
adc
jns
fld
or
lods
add
loope
mov
loope
out
loopne
iret
dec
stos
insl
scas
fimuls
mov
push
and
leave
mov
stos
sbb
andb
rorl
or
in
lods
and
movb
xchg
pop
mov
push
and
and
shlb
ljmp
mov
lcall
int
xchg
lods
inc
mov
les
cld
shl
sbb
outsb
xchg
pop
out
jge
aad
add
xchg
lock
sbb
xchg
pop
adc
insl
imul
mov
sub
maxps
jg
daa
sbb
jl
fnstenv
inc
xchg
jo
ret
cmp
xchg
and
pop
lret
sbb
cwtl
push
mov
sbb
adc
data16
xor
addb
cmp
mov
jg
mov
gs
add
stos
xchg
jge
cmp
fnstsw
dec
pop
push
into
push
mov
ljmp
outsl
push
jge
loopne
cld
ret
sub
fsubrl
lock
mov
lods
xchg
rcl
xor
cmpsb
aad
ficomps
ja
fs
add
sbbl
icebp
mov
fcoms
push
and
or
sbb
xchg
push
xchg
insb
push
addb
outsl
cmp
adc
in
popf
sub
inc
pop
cmp
add
adc
test
mov
push
in
icebp
incl
cmpsb
jmp
dec
push
sub
sbb
outsw
jl
jno
into
xlat
jbe
out
cli
sahf
push
lods
rcrb
rorb
outsl
aad
fs
sarl
xchg
dec
or
xlat
call
bound
push
fwait
add
dec
and
fidivs
rcrb
mov
jo
mov
outsb
add
rolb
push
xor
repnz
sub
pop
lea
lock
xor
sbb
ja
fsts
ret
jp
aad
and
and
jns
xor
outsb
mov
cmp
dec
inc
out
lods
pop
mov
sbb
xor
fistpl
inc
jecxz
int3
cmc
cmpsl
dec
ret
lock
push
in
bswap
xor
add
push
in
or
js
pop
out
dec
mov
sarl
pop
adc
arpl
sub
jecxz
inc
push
leave
add
cmp
cmp
xor
jns
dec
dec
jnp
movaps
ss
xor
dec
jp
jnp
repz
sbb
fwait
pop
cmp
add
rcr
mov
pop
mov
fcoml
aam
mov
aam
imul
cmp
scas
cmp
xchg
aam
fwait
test
inc
adc
sub
sahf
in
mov
dec
fs
sub
mov
aad
mov
add
inc
push
frstor
ds
lods
int
mov
lds
ss
sub
aam
push
lods
mov
lods
or
int3
and
xchg
and
js
jns
sub
icebp
sti
jmp
mov
loope
cltd
dec
add
test
jmp
xchg
scas
mov
pusha
add
cmp
pop
rclb
and
call
fwait
push
fwait
stc
int3
or
negb
mov
in
or
insl
es
scas
dec
add
push
in
sub
cmpl
sub
mov
insb
adc
cmpsb
inc
sub
loope,pt
mov
cmpsb
dec
addb
xchg
ss
daa
sub
jo
xchg
mov
mov
jo
mov
push
rcll
push
fmulp
call
test
xchg
in
addr16
mov
sub
mov
inc
ret
rol
cmp
or
push
cmp
jecxz
stos
dec
mov
mov
dec
hlt
rcr
and
mov
aaa
adc
adc
push
inc
ja
xchg
inc
popa
movsb
jae
inc
bound
xor
ja
aaa
add
sub
inc
jecxz
sarb
lret
fwait
ljmp
pop
sub
pop
cmp
jp
push
lcall
stos
fidivrl
ljmp
pop
sub
pop
cmp
jp
push
lcall
stos
fidivrl
ljmp
pop
sub
pop
and
jp
push
lcall
stos
fisubrl
ljmp
pop
pop
pop
shlb
xchg
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
nop
dec
cmpb
mov
dec
shlb
loopne
adc
add
xor
and
jo
pusha
pop
nop
dec
cmpb
mov
cmp
adc
pusha
std
xor
and
xor
cmpb
mov
cmp
mov
mov
popf
adc
les
nop
sub
jge
add
adc
pop
and
sub
or
gs
js
mov
adc
pop
sbb
test
popa
clc
inc
incl
xor
lods
lret
lods
jmp
cld
xor
inc
and
dec
pop
fists
divl
fdivr
in
lock
cmpb
lods
jmp
mov
shl
shlb
sub
iret
adc
cmp
in
push
jo
jg
xor
sub
arpl
in
lds
iret
data16
inc
or
in
popa
push
mov
inc
xchg
pop
movsl
xchg
test
add
inc
fiadds
sahf
nop
dec
cmpb
mov
cmp
adc
add
xor
and
jo
or
ljmp
cmpb
sub
js
rclb
mov
jne
je
pop
test
sbb
int3
xor
jb
and
nop
cmp
js
inc
movsb
js
push
jne
push
in
dec
push
call
xor
cmp
or
pop
rorb
loopne
adc
add
xor
and
jo
pusha
pop
nop
dec
cmpb
mov
cmp
adc
add
xor
and
jo
pusha
pop
nop
sub
loopne
adc
int
jl
mov
pop
ret
in
mov
sbb
iret
das
xchg
adc
or
push
fists
loope
movsl
loop
and
jbe
stc
js
sub
aas
or
outsb
outsb
add
mov
dec
pop
test
cmc
fldenv
cs
push
xchg
add
push
fwait
mov
lods
jae
mov
xchg
ljmp
scas
cltd
sub
mov
inc
add
js
cld
fwait
call
jge
je
movsl
arpl
in
xchg
out
fwait
dec
jnp
jle
push
lret
sbb
mov
enter
inc
dec
adc
pop
cmp
insb
loopne
orb
decl
das
xchg
out
inc
test
sahf
fisttpll
pop
pop
pop
add
call
or
sarb
enter
scas
sbb
or
xor
pop
pop
aad
mov
lcall
dec
cmp
es
mov
cmp
adc
scas
mov
jns
andl
and
cmpsl
or
xchg
dec
ds
push
push
outsb
cli
shlb
jp
sbb
xor
iret
add
lcall
loope
ljmp
pop
push
cmp
cs
fnsave
mov
dec
mov
jl
fwait
imul
outsb
cmc
push
inc
loop
inc
cwtl
cmpsl
ret
and
cmp
sbb
add
cltd
adc
xchg
jp
into
ficoml
cmp
test
ret
popf
lahf
ficomps
jbe
push
pop
mov
ljmp
insl
shll
and
cli
push
dec
add
pop
jo
mov
jne
setle
mov
mov
shl
push
orl
xor
add
xorl
sub
cld
mov
xchg
jns
cmp
cmp
and
jo
outsb
dec
sub
negl
cmpsl
popf
test
int3
adc
jg
into
ficoms
mov
push
stc
out
mov
es
loopne
test
mov
cwtl
into
add
mov
and
mov
lret
mov
cmc
mov
xor
push
cmp
in
inc
pop
int3
add
lret
or
push
mov
or
sub
movsl
sub
dec
jae
int3
jmp
and
push
jo
mov
into
pop
rcl
insl
icebp
mov
xchg
fcmovb
cmp
out
ror
gs
popf
movsb
imul
inc
les
call
ret
mov
ret
pop
pusha
mov
sarl
xchg
xlat
daa
xchg
push
mov
push
mov
lret
add
jae
sub
xchg
cmovp
mov
cmp
jle
sbb
mov
xlat
stos
iret
xchg
mov
sbb
icebp
cmc
sbb
jmp
xchg
add
fwait
add
and
push
push
cmc
rcll
lods
push
sub
inc
push
mov
xor
lret
push
sbb
pop
pop
or
fcmovu
sbbb
dec
mov
mov
jo
fnstcw
pushl
xchg
cmpsb
fdivl
and
data16
es
sbb
fcomps
push
fdivs
add
jg
ds
fs
es
dec
dec
or
pop
sub
pop
fnstcw
inc
xchg
sub
es
dec
add
xor
xchg
jl
cmp
xor
mov
mov
mov
sub
mov
insb
sbb
lcall
mov
xorb
sbb
xchg
jge
dec
adc
and
pop
sbbl
lea
push
loopne
add
shlb
imul
xor
fs
dec
clc
mov
mov
jno
cmovbe
jmp
insl
out
mov
loop
ljmp
sbb
inc
sub
scas
inc
inc
fwait
ss
cmpsl
inc
sbb
test
or
inc
mov
loopne
push
add
sub
into
mov
push
lahf
lods
sbb
add
cmpsb
outsl
je
sar
fs
push
mull
xchg
add
cmp
add
jne
loopne
jae
mov
das
xor
mov
xor
xchg
jg
sbb
sbb
sbb
daa
lea
loopne
rcll
jbe
adc
gs
pop
cmp
movsb
and
icebp
cmpl
nop
cmp
aaa
gs
mov
aaa
lock
jno
adc
push
adc
mov
inc
subb
aas
cwtl
test
into
jecxz
push
cmp
pop
ljmp
popl
xchg
mov
sbb
xchg
dec
test
pop
jnp
lods
cmp
ret
push
or
orl
stos
sub
or
jecxz
testb
idivl
push
ds
ror
iret
fistl
pop
in
aad
daa
les
push
cmpsl
or
shl
pop
clc
cwtl
mov
lods
and
inc
dec
pop
cmp
cld
out
inc
mov
pop
pop
aaa
dec
fsub
fucomip
test
lret
pushf
les
jae
push
das
aad
mov
popf
push
cmp
addb
sbb
mov
ljmp
sub
or
mov
sbb
imul
mov
mov
push
cmpsl
fldcw
mov
and
int
iret
imul
pop
mov
mov
lds
lods
loopne
and
pop
pusha
jg
mov
and
dec
ljmp
and
xor
aaa
or
cwtl
jl
out
cmp
mov
xor
jns
dec
es
das
inc
xchg
push
lret
das
aad
push
gs
enter
stos
adc
pusha
xchg
adc
mov
add
jg
das
outsb
push
mov
xchg
iret
outsl
sub
or
aad
into
repnz
pop
rolb
fwait
lods
jl
cmp
movsb
add
sub
and
stos
cmp
mov
fs
xchg
jl
rep
add
dec
push
in
sbb
out
jae
pop
jo
pop
repz
mov
add
notl
sti
sbbb
jmp
stc
aaa
cmc
les
dec
add
lret
add
and
repz
fisubrl
jp
popa
add
sub
and
xchg
xor
and
sbb
push
jle
adc
fisttpl
pop
cwtl
pop
pop
xchg
mov
sahf
cmp
rorl
aaa
nop
and
sbb
cli
and
push
sbb
pop
jmp
hlt
in
pusha
dec
inc
jae
repnz
pop
arpl
inc
nop
xor
mov
xor
xchg
dec
and
jge
scas
mov
movsb
push
out
std
rcrl
cmpsb
dec
stos
rcrl
aam
mov
push
mov
adc
xor
push
aad
cvtps2pd
xchg
and
ljmp
or
mov
repnz
inc
mov
fmul
cltd
or
mov
daa
stos
mov
sbb
xor
or
mov
in
scas
push
lret
test
ret
cvtpi2ps
pop
or
pop
gs
mov
push
or
inc
hlt
cs
add
mov
pop
lret
pop
test
mov
pop
push
repnz
int
adc
add
insb
cs
out
mov
pop
mov
sub
mov
xor
mov
jg
push
add
add
pop
ljmp
mov
test
stos
fidivs
popa
insb
stos
lret
xchg
std
push
push
fs
mov
sbb
push
test
sub
outsb
xchg
adc
mov
mov
popa
test
or
inc
mov
jl
xchg
jno
mov
push
andl
add
inc
scas
repz
enter
jnp
scas
push
lods
push
sbb
sahf
mov
ret
fs
add
into
or
xchg
div
push
repz
cwtl
js
idivb
jo
xchg
pushl
lds
shrl
sbb
dec
repz
shll
mov
loope
cwtl
movsb
mov
in
mov
mov
pop
leave
pushf
cmc
cmp
xor
jp
adc
xchg
addb
mov
pusha
and
inc
data16
int
stos
and
push
mov
xor
pop
loop
cmp
shr
adc
mov
ds
repnz
test
std
mov
pop
inc
fcomp
mov
push
and
dec
xlat
xchg
sub
int
pop
jo
pop
test
mov
dec
and
adc
mov
test
aam
xor
fnstcw
stos
jp
push
mov
xor
pop
mov
dec
inc
popf
push
fdivl
jo
cmp
shll
or
test
cli
jns
mov
shlb
dec
cmp
mov
push
movsl
rorl
loopne
and
inc
mov
and
adc
pop
mov
cmpsb
fs
mov
test
idivl
dec
pop
xchg
mov
push
cltd
stc
fucomip
inc
data16
cli
mov
enter
pop
sbbb
adc
dec
jbe
xchg
sbbb
hlt
test
dec
imul
lods
sub
in
push
daa
popl
cli
insl
mov
out
jbe
sbb
sbb
fdivp
and
divl
push
or
mov
push
mov
mov
fdivs
xchg
inc
xchg
sub
jle
dec
pop
sub
imul
adc
bound
xor
and
movsl
jo
aas
lds
repz
sub
pushf
mov
lock
stc
xor
sbb
pop
dec
or
arpl
mov
xorl
sbb
aad
aad
dec
jbe
iret
sub
cmpsb
or
testl
mull
aam
sbb
or
inc
pop
or
jbe
movl
lods
outsb
ds
push
outsb
adc
sub
push
std
enter
das
lods
stos
outsb
das
mov
mov
mov
lret
in
mov
add
push
dec
inc
pop
pop
jecxz
jne
xchg
push
mov
push
push
out
xchg
ret
repnz
push
bound
adc
mov
idivl
lcall
xchg
push
mov
inc
adc
add
push
lahf
fisubrs
inc
jp
iret
subl
dec
aad
cmp
adc
sbb
stos
add
cmp
sti
jl
pushf
adcb
divb
jbe
call
adc
fsubrp
xchg
xor
sub
lret
fwait
mov
mov
push
sbb
or
out
adc
lret
and
and
or
aaa
and
iret
dec
popa
arpl
inc
inc
xchg
ljmp
and
sub
jb
jae
and
cmp
icebp
push
fnstsw
scas
or
stos
scas
rolb
add
movsl
xchg
mov
push
add
mov
out
pop
pop
sub
jp
jecxz
pop
cmpsb
jmp
pop
xchg
lret
test
add
sbb
push
mov
les
loop
jg
shlb
mov
je
pop
sbb
imul
ffreep
cmp
jne
push
movl
ds
fcoml
cmc
xchg
addl
das
scas
push
dec
xchg
loope
arpl
inc
xchg
mov
popa
pop
push
xchg
cmpsl
hlt
stc
jge
push
xchg
not
cmp
xchg
jbe
xchg
adc
inc
pop
jno
test
incl
lret
or
push
xor
mov
cmp
mov
minps
in
sbb
out
inc
js,pt
popf
push
push
pop
and
sbb
inc
sbb
pop
fisttpl
data16
js
pop
pop
xor
dec
call
pop
sub
dec
cmp
dec
sub
xor
sbb
jo
or
and
in
jle
dec
push
mov
cmpsl
aas
dec
add
test
fists
in
inc
push
xchg
out
hlt
sar
mov
push
cmp
daa
mov
mov
push
dec
pushf
cwtl
mov
pop
mov
mov
lret
fmull
cld
jl
pop
lret
dec
push
xchg
cli
xchg
cld
cmpsb
fucomi
ss
mov
adc
lds
dec
out
lods
outsl
test
pop
push
jle
in
pop
adc
pop
leave
movsl
dec
jecxz
fimull
pusha
test
repnz
stos
jle
rcr
push
mov
inc
jp
mov
es
mov
das
xchg
xor
mov
lock
or
mov
push
adc
inc
bound
lods
pop
jmp
xlat
nop
cmp
or
hlt
outsb
jnp
ljmp
sbb
pop
jg
imul
sub
jg
mov
ss
xor
or
out
mov
dec
add
adc
jo
sub
push
test
sbb
pop
cmp
push
add
xchg
or
cmp
test
pop
in
pop
icebp
lods
je
fsubs
cmp
jg
mov
mov
stos
outsb
sbb
cs
enter
or
mov
pop
stc
sarl
ret
inc
push
mov
sar
xchg
sbb
in
sahf
mov
icebp
in
adc
or
mov
sbb
sbb
lods
jne
xchg
cmp
xor
add
inc
sbb
fwait
sub
out
aam
cmc
add
sar
mov
push
jmp
arpl
adc
inc
sub
jmp
fidivl
add
mov
fsubl
imull
hlt
out
mov
mov
aaa
iret
mov
pop
rcrb
or
pop
js
in
mov
pushf
daa
movsl
add
sbb
sbb
cmp
dec
sub
gs
in
mov
jecxz
arpl
mov
xor
adc
jg
sbb
lea
into
inc
adc
xor
data16
inc
adc
jmp
gs
mov
cmp
inc
jecxz
aas
adcl
mov
out
jne
repz
lret
push
jp
jbe
and
xor
aad
and
cmp
int
insb
sar
dec
xor
pop
lea
cmp
sub
cmp
dec
in
xchg
lea
sbb
int
xchg
xor
mov
data16
or
fdivs
scas
movsl
js
out
test
pop
adc
mov
sti
cmp
in
xchg
pop
test
push
out
shl
sub
imul
xor
dec
lahf
pop
xor
out
scas
mov
adc
arpl
dec
jno
lods
stc
int3
xor
shll
fcmove
mov
and
sub
lahf
push
loope
mov
test
mov
out
dec
rol
xchg
out
icebp
sbb
jns
xchg
stos
inc
nop
js
sub
mov
pop
test
jl
mov
add
aaa
into
mull
cld
mov
xchg
push
ss
repnz
pop
stos
leave
and
pushf
adc
mov
xor
adc
jno
add
cld
ja
out
pop
dec
aam
sbb
push
mov
mov
aad
cli
pop
clc
popf
pop
pop
push
pushf
sarl
imulb
push
and
sbb
out
mov
arpl
xor
test
adc
mov
outsb
sbb
js
rcll
leave
adc
cld
pop
ljmp
mov
insb
lahf
fisubrl
adc
je
ja
pop
cmc
stc
jp
xor
mov
test
xor
adc
xchg
ret
xor
in
scas
rcll
lahf
push
and
sbb
and
pusha
pop
movsl
clc
inc
or
jle
rolb
jns
aas
jno
pop
out
lcall
sarb
xcrypt-ecb
cmpsl
dec
sub
sbb
jg
xchg
aad
out
cli
cs
sub
cmp
sub
rcrl
decl
mov
xor
jl
lret
jnp
test
push
jg
adc
pop
cld
pop
mov
cmp
mov
dec
in
aas
cltd
mov
mov
inc
dec
sbb
jle
push
jnp
xchg
mov
cmp
xchg
stos
imul
lahf
adc
push
xchg
popa
push
add
xchg
dec
std
fdivrl
jae
in
outsb
in
push
mov
mov
jne
mov
pushf
mov
lock
xor
or
imul
mov
lret
mov
out
sbb
xchg
cmpl
rolb
scas
insl
xchg
jg
daa
or
outsl
or
push
rcll
lahf
xchg
orl
outsb
leave
stc
jmp
dec
out
daa
rorl
ss
jnp
ret
sub
lods
adc
push
repz
ss
shl
je
xorb
cwtl
push
jmp
lods
repz
nop
push
cmp
out
or
ds
dec
add
cmp
inc
or
push
sub
aam
and
js
outsb
push
shlb
fstpl
aam
mov
cmp
arpl
nop
pop
xlat
cmpb
or
inc
ds
xchg
lods
adc
mov
lret
xor
imul
push
mov
clc
dec
xor
fimuls
pop
ljmp
sbb
or
lods
scas
nop
sti
in
dec
cltd
sbb
sub
int
outsl
shr
push
push
outsl
xchg
mov
les
cmp
pop
add
imul
cltd
mov
in
or
out
adc
into
add
fwait
push
inc
js
mov
push
push
ljmp
cmpl
rorl
jne
into
rcll
xchg
dec
mov
pushf
adc
ljmp
adc
pop
testb
jecxz
jg
xor
xchg
mov
cli
mov
mov
lahf
dec
fwait
xchg
sahf
roll
enter
dec
dec
jmp
sub
inc
loopne
xor
scas
bound
jp
lea
cmp
enter
sti
aad
sti
inc
or
call
mov
mov
dec
add
movsb
mov
mov
mov
push
push
ss
pop
call
xchg
inc
repz
push
xor
das
or
lahf
std
push
call
or
sub
push
xor
loope
push
push
cmpsl
fisttpl
lret
xor
aad
push
bound
fcmovb
lods
popa
xchg
stos
outsl
imull
xchg
sbb
dec
in
add
or
jb
jbe
bound
cmp
scas
push
hlt
jmp
pushf
dec
inc
inc
cmp
xor
push
test
loopne
shl
dec
sar
jb
imul
ja
lods
stos
or
test
sarl
clc
sbbl
push
imulb
lret
adc
dec
daa
xchg
aam
dec
test
movsb
cmp
push
dec
std
xchg
mov
push
xchg
sub
add
pop
jmp
dec
insl
jne
sarb
adc
push
es
xor
arpl
jle
dec
push
mov
cmpsl
orl
push
jl
and
dec
dec
inc
or
sub
mov
nopl
movsb
test
mov
jo
add
or
dec
push
cmp
ficoms
negl
add
xor
dec
add
jecxz
lcall
mov
call
pop
jecxz
xchg
inc
xchg
fcomi
lcall
push
pop
rorl
loopne
iret
push
xchg
push
mov
jb
jbe
es
fisttps
das
pusha
mov
in
pop
shlb
inc
sbb
in
call
pop
insl
xchg
andl
mov
inc
add
cmp
clc
or
insl
or
xor
mov
dec
and
xor
jae
test
mov
sbb
mov
sub
outsl
dec
jl
movq
pop
roll
lock
xorb
xchg
ltr
sbb
clc
pushf
movsb
and
repz
loop
int3
xlat
jbe
mov
jb
call
inc
test
and
in
dec
out
xchg
into
push
mov
fsubrl
mov
enter
adc
daa
bound
outsb
push
clc
sbb
in
cmp
cltd
sub
loope
ret
sbb
or
xchg
je
jns
fdivrs
cwtl
fstpt
lods
ret
lret
or
in
mov
cli
inc
or
dec
dec
mov
and
cli
pop
daa
or
mov
push
ror
sbb
inc
mov
shr
jg
mov
sbb
das
pop
or
pusha
negb
sub
add
loop
js
aam
stos
das
cmc
sbb
test
in
push
push
and
mov
sub
js
cmp
sub
rep
stos
mov
dec
inc
xchg
or
sahf
insb
iret
or
loope
ss
inc
movsb
loope
fninit
sarb
xchg
push
cmp
push
hlt
pcmpeqb
or
pop
dec
xchg
dec
jecxz
cmp
mov
mov
jno
dec
adc
lcall
mov
pusha
or
xchg
xor
out
or
imul
cmp
push
push
imul
mov
push
dec
mov
nop
jne
sub
cmp
sbb
xchg
pop
ret
movsb
shlb
loopne
mov
sub
pop
or
xchg
nop
fs
sub
mov
sub
mov
dec
cmp
xchg
out
xchg
icebp
push
pop
push
sti
sub
xlat
or
jne
add
dec
jae
add
insl
mov
cmp
adc
add
xor
and
jo
pusha
pop
nop
dec
cmpb
mov
cmp
adc
add
xor
and
jo
pusha
pop
nop
dec
add
insl
mov
cmp
nop
int
std
xor
and
jo
pusha
pop
nop
dec
cmpb
mov
mov
adc
stos
push
xor
push
ljmp
lahf
sub
bound
inc
sub
jge
sub
mov
loop
rorb
and
sbb
or
cmp
sub
pop
and
add
pushf
loop
mov
add
cld
sub
mov
pop
pop
sub
or
pop
repnz
jmp
ficomps
mov
mov
pop
bound
outsl
sub
cmp
mov
sti
lods
or
sbb
cs
movb
lcall
iret
push
dec
push
shl
dec
ffree
loop
lret
xchg
cmp
jo
inc
iret
cld
push
leave
cmc
xchg
jle
pop
pushl
sbb
fdivrl
mov
mov
aaa
lock
sbb
push
dec
das
out
cmp
inc
sub
cmp
sub
dec
aaa
jl
mov
mov
sahf
lods
aaa
leave
icebp
inc
rolb
imul
shll
bound
dec
add
sbb
pop
sbb
jp
xchg
jecxz
repz
adc
insl
or
push
jb
mov
jb
addb
dec
push
sub
pop
cmp
sbb
jmp
cli
and
mov
mov
fiadds
sbb
arpl
push
es
push
stc
dec
and
or
xchg
loop
mov
fwait
mov
jb
bound
dec
inc
inc
inc
push
dec
push
jle
inc
pop
lock
loop
xchg
out
mov
xlat
xchg
ror
loop
sbbb
push
inc
inc
dec
adc
dec
adc
repnz
loop
sarb
int3
xchg
cld
sub
sbb
or
cmp
sub
pop
and
add
loop
sarb
int3
xchg
cld
sub
sbb
pop
or
ret
push
inc
lods
aad
push
xchg
imulb
adc
movsb
das
jg
arpl
in
out
inc
lock
adc
mov
stos
loopne
add
ss
nop
adc
popf
xchg
out
pop
enter
sub
pushf
push
xchg
pop
call
mov
out
repz
mov
dec
popf
into
add
push
fsubrl
imul
jns
in
aas
adc
jae
add
ss
push
pop
mov
fistpl
movsb
jmp
cmp
jecxz
fnstsw
mov
cmpl
mov
cltd
stc
cmc
in
icebp
xchg
jbe
sbb
imul
fisubrs
lock
iret
mov
xor
lahf
mov
pushf
js
mov
call
pop
cs
and
inc
sbb
bound
cltd
lret
idiv
fs
push
mov
sbb
pop
repnz
inc
arpl
stc
sub
mov
mov
ret
jbe
or
shll
nop
out
test
cmp
test
jbe
push
jg
dec
rol
outsl
fcomps
ljmp
mov
add
pop
jo
sbb
push
dec
jge
cmp
xor
pop
dec
inc
loope
dec
loop
xchg
dec
sti
pop
jmp
pop
lods
daa
xchg
inc
xchg
mov
fistps
push
mov
jle
cmc
cmp
fwait
jmp
xchg
mov
fpatan
lcall
mov
or
out
and
data16
adc
cli
or
dec
fucom
addl
lods
xchg
les
fldt
out
xchg
je
into
into
pop
dec
fs
sti
lock
int3
jns
dec
or
lds
dec
ret
popa
cmpsb
shll
xlat
xor
inc
xchg
xor
jmp
lea
pop
mov
aad
pop
loopne
jl
mov
sbb
or
xchg
nop
push
dec
bound
inc
cld
into
dec
bound
bound
ret
sbb
arpl
fstpl
mov
enter
jno
xor
push
sar
pop
cmp
lea
rorb
add
or
enter
xchg
gs
inc
jle
pop
ljmp
mov
cmp
push
les
pop
cmp
mov
es
add
add
adc
pop
xchg
inc
vmovq
mov
push
addr16
stos
dec
xor
jmp
rcrb
xor
sub
xchg
je
aad
call
xor
or
adcl
cmpb
mov
jecxz
lock
leave
sbb
sbb
mov
cmp
pusha
das
mov
movsb
push
or
hlt
inc
leave
mov
jge
mov
in
cmp
mov
inc
push
xchg
xchg
lret
outsb
gs
mov
fsub
orb
loope
mov
rcl
xchg
repz
fnsave
js
adc
mov
cli
jae
test
mov
push
scas
aaa
fimuls
adc
push
adcb
lds
pop
inc
aad
push
sbb
aam
or
pop
lock
sbb
xorb
inc
jmp
in
jne
cmpsb
mov
call
test
dec
mov
xor
cmc
jae
or
scas
cmp
cmp
adc
repz
sub
inc
mov
jg
push
or
cmpsb
pop
stos
cli
out
jecxz
out
mov
inc
ja
sub
xchg
fsubs
aaa
popa
in
fwait
mov
dec
fwait
mov
sar
dec
pop
dec
fwait
lahf
xchg
xor
push
dec
push
pop
jle
out
mov
xchg
xor
mov
loop
sbb
mov
adc
jne
cli
iret
test
sbb
pushf
or
dec
dec
loopne
add
mov
pop
fwait
dec
cmp
enter
push
movsl
pop
adc
adc
test
sub
dec
gs
xchg
shll
dec
inc
shl
mov
xchg
divl
or
xchg
and
sbb
idiv
loope
lahf
cld
pop
mov
cwtl
pushf
lahf
dec
pop
lods
ret
sarl
sub
mov
gs
jno
lcall
add
xor
pop
sub
iret
hlt
popf
pop
fnstcw
mov
insl
repz
sub
adcl
or
lahf
les
push
iret
inc
pop
pop
xor
sub
push
or
sub
cltd
cld
inc
sbb
push
lods
sub
add
lods
js
push
push
sbb
dec
cmp
pushf
jp
sub
xchg
imul
pop
adc
pop
xchg
gs
inc
fnstsw
in
xor
lret
mov
ds
rorb
lods
fisttpll
clc
or
xchg
repz
leave
mov
jne
pop
jns
mulb
mov
dec
notb
ret
sub
cmp
call
inc
jne
aas
aaa
mov
jb
je
jl
cltd
sub
dec
sarl
sbb
cmp
mov
push
push
sti
adc
or
pop
je
pop
pop
inc
test
cmp
pop
add
loope
or
ss
sub
sbb
cmp
mov
mov
or
mov
inc
cmp
inc
jmp
aas
xchg
sahf
add
xchg
mov
pushf
xchg
mov
ficoms
or
shlb
sbb
stos
or
insl
rcrb
or
dec
stc
jp
or
jecxz
fdivl
arpl
scas
sarb
or
or
icebp
jo
sbb
push
jecxz
adc
addr16
adc
mov
repz
xor
cmp
xchg
add
xchg
sub
subb
lock
fnstcw
ljmp
aas
int
mov
mov
dec
cmp
fstps
pop
imul
jle
fstpl
jns
mov
loopne
add
push
sbb
scas
clc
dec
rol
mov
dec
mov
popf
fstpl
xchg
jbe
sub
jge
and
xchg
jb
cwtl
insb
sar
inc
pop
adc
call
ja
push
call
mov
fnsave
ret
int3
pop
sub
inc
mov
pop
jns
neg
push
js
addr16
das
mov
popf
cmp
das
mov
clc
push
mov
xchg
xchg
gs
daa
mov
xchg
pop
push
icebp
loopne
sbb
rcll
pop
test
dec
and
rcrl
mov
fnsetpm(287
inc
adc
jnp
daa
movsl
sahf
xchg
adcb
dec
lds
sbb
es
lods
pop
inc
jg
jbe
imulb
lods
or
call
das
mov
fadds
and
mov
mov
lds
and
es
or
pushl
push
push
jns
icebp
int3
outsb
mov
hlt
fnsave
mov
and
mov
lret
sbb
out
mov
cmp
sub
sub
adc
data16
aas
faddl
pop
ffree
outsb
outsl
insl
sbb
add
sub
push
inc
rcll
or
test
arpl
cmpsl
test
xchg
dec
or
jo
out
cmp
aad
mov
out
in
inc
mov
aam
mov
sbb
jmp
leave
orl
sbb
push
fimull
fcoms
jp
mov
rorb
add
mov
movsb
push
js
xchg
inc
aam
ja
mov
dec
bound
leave
add
or
add
add
sar
roll
xchg
test
aam
cmp
push
in
addr16
xor
rcrb
sbb
shll
arpl
push
cmp
or
pop
cmp
lret
jmp
cmp
mov
mov
test
push
xchg
subl
scas
insb
dec
rcr
mov
pop
js
cmpsl
or
cwtl
fwait
gs
test
cmpsl
jno
loope
add
pop
xlat
fs
jle
gs
out
or
shr
daa
mov
sub
cmpsb
aad
add
sarl
pop
push
daa
add
cmp
and
push
or
sahf
bound
mov
mov
jl
ffree
in
add
xor
cld
cli
data16
cmp
shl
pop
call
icebp
add
dec
dec
ss
or
pop
jecxz
out
push
stos
mov
insb
outsb
pushf
xor
jne
icebp
ja
mov
push
lods
add
mov
fwait
imul
das
cmc
xchg
mov
sub
les
gs
sbbb
sub
sub
pop
lret
mov
out
dec
and
sbbl
xor
test
xchg
push
je
jmp
cmp
imul
pusha
push
inc
sar
sub
outsb
gs
imul
mov
mov
fmull
adc
pusha
js
jae
sbbl
adc
inc
sub
push
stos
js
test
adc
into
out
inc
inc
int
out
popa
mov
mov
das
pop
lds
je
mov
repz
pop
jbe
repz
pop
adc
jmp
push
mov
sub
jp
jmp
dec
adc
bound
jp
mov
xor
mov
mov
jecxz
arpl
fs
lea
mov
into
mov
mov
push
out
sbb
test
ds
daa
cmpsb
in
stc
sbb
pop
xchg
adc
mov
inc
push
mov
sbbl
sahf
mov
daa
mov
movsb
shrl
int
adc
in
add
lcall
pop
pop
pushf
cld
inc
inc
lret
ret
jb
xor
mov
lods
cli
fldcw
push
cli
jnp
gs
xchg
arpl
pop
cmp
push
dec
adc
adc
or
adc
std
cld
push
add
dec
mov
lcall
jp
mov
pop
cmp
xor
mov
pop
add
and
or
inc
push
xchg
rcrb
dec
shr
pop
pop
sbb
mov
lret
pop
pop
cmc
es
movsl
push
pop
test
mov
fwait
lcall
sti
imul
aas
mov
aaa
js
std
lret
iret
dec
call
adc
int
stc
mov
push
fsubrs
cmp
mov
jae
jb
xorl
mov
divb
mov
test
pop
call
or
test
dec
xchg
adc
imul
mov
fnstenv
xchg
jl
push
test
or
test
push
sbb
mov
push
inc
jb
shl
sub
data16
add
insl
xor
xchg
loop
jecxz
cli
sbb
movsb
shll
cltd
mov
add
xchg
jl
sbb
xchg
sbbl
lret
lods
mov
lods
std
add
push
sub
mov
cmpsl
mov
pop
cmpl
jne
jle
adc
dec
sahf
enter
or
lret
pushf
or
cmp
stos
jl
push
sahf
notb
pusha
push
ret
dec
mov
push
xchg
or
pop
mov
scas
idivb
pop
pushw
ljmp
loopne
sub
in
xchg
addl
loope
push
cli
pop
sbb
fists
cltd
xor
lds
movl
loop
mov
push
jns
dec
iret
mov
js
not
and
sub
pop
pusha
xchg
jne
lds
and
jbe
pop
je
out
pop
add
cld
pop
cmpsl
fcomps
mov
add
lret
cmp
ror
push
mov
addr16
adc
push
aad
enter
xlat
fwait
pusha
sub
loop
pop
mov
test
jecxz
push
cmp
aam
fisttpll
inc
xor
orb
iret
mov
push
sbb
inc
hlt
fidivrs
call
test
sti
sti
and
mov
mov
lods
inc
cltd
out
inc
test
lret
test
inc
dec
mov
roll
cmp
inc
hlt
xchg
jae
fdivr
mov
shld
jno
out
push
inc
inc
pop
xchg
mov
mov
pop
insb
and
pop
sub
hlt
add
cld
jmp
pop
fiadds
jmp
sub
rorb
sti
inc
cltd
sbb
test
imul
pop
in
cmpsl
loope
outsb
fcompl
nop
fcoms
inc
and
inc
in
pusha
inc
add
aad
cmc
or
add
test
xchg
inc
arpl
bound
bound
lret
mov
cmp
mov
std
xchg
fldl
inc
aam
movsb
jp
cmpsl
pop
out
pop
push
mov
or
fmuls
mov
movsl
sarb
mov
mov
mov
sub
push
in
scas
rcrb
mov
jmp
and
push
lock
stc
dec
jbe
mov
ss
or
fldt
aaa
jno
orl
push
loop
lahf
repnz
mov
mov
push
mov
inc
pusha
or
adc
ficomps
mov
in
fdivrs
jbe
dec
mov
mov
addb
xchg
dec
xorb
sub
xchg
popa
es
call
icebp
js
popa
dec
out
repnz
dec
adc
addr16
mov
jle
lret
adc
mov
push
xchg
jle
sbb
cltd
loop
xor
adc
mov
sbb
dec
fs
mov
in
outsl
lds
test
cmc
int
stos
sub
push
and
es
mov
in
aad
mov
fucomip
test
aad
xchg
pushl
cs
dec
mov
rcr
lods
xchg
cmp
add
sahf
mov
push
mov
xchg
and
xchg
addb
clc
movsl
shll
decb
add
fidivrs
aad
push
bswap
into
xor
bound
mov
pop
ja
inc
xchg
jecxz
mov
movsl
push
mov
adc
lds
ror
cmpb
adc
in
jmp
and
xchg
pushl
outsl
repz
add
jp
jb
divb
lock
inc
mov
sti
enter
ds
call
in
fs
stos
dec
aad
xchg
pop
in
xchg
dec
inc
jp
adc
fisttpll
jae
mov
aad
ficompl
nop
mov
hlt
sub
jmp
pop
pop
mov
call
push
xchg
insb
xchg
pop
outsl
inc
outsl
cmpsl
push
mov
scas
cltd
cltd
mov
push
cmp
xchg
sub
mov
lret
add
jg
add
mov
out
imul
mov
jbe
dec
hlt
aam
lcall
and
add
jp
xor
les
shll
fld
into
fwait
or
out
inc
scas
push
lcall
gs
das
and
popf
pushf
sarl
jnp
inc
shr
pop
inc
hlt
adc
inc
out
je
nop
arpl
lods
imul
lret
pop
or
jns
add
push
out
mov
and
and
or
or
gs
pushf
adcb
mov
adc
pop
sbb
ljmp
pop
lea
or
loop
mov
jno
jge
test
inc
pop
and
cmp
rcll
outsl
outsb
adc
cs
sahf
dec
cmp
mov
xor
fcmovnbe
cmp
pop
popa
das
sar
or
aad
cmpsb
jmp
and
sbb
mov
sbb
ret
imul
fsubrs
jo
mov
dec
cs
repnz
packssdw
fisubs
push
push
popf
loope
jae
mov
xchg
push
push
jnp
pop
ret
pushf
pop
sbb
cmp
iret
adc
clc
inc
aam
insl
fcompl
mov
pop
ficoml
xor
test
sbb
jmp
jae
add
sub
and
test
xor
andb
popf
xchg
test
pop
fcmovu
das
pop
sub
mov
pop
dec
adc
shll
jnp
xchg
mov
push
dec
out
sahf
add
mov
jp
loopne
sbb
sbb
mov
inc
lods
mov
xor
sub
xchg
or
gs
fcompl
pop
sub
cwtl
cmp
inc
clc
mov
xchg
pusha
push
push
popa
xchg
fmulp
jb
push
mov
mov
andb
and
lret
icebp
push
aas
add
xchg
fidivrs
jle
mov
test
stos
or
call
outsl
pop
push
sub
aas
pusha
imul
das
mov
stc
add
jecxz
stc
fstp
xchg
inc
mov
mov
add
stos
push
add
mov
dec
test
pusha
adc
push
xchg
imul
mov
push
add
imul
ret
lods
jge
fwait
cmc
ss
fdivr
add
sahf
or
pop
mov
iret
loop
sbb
inc
out
lds
pop
adc
xor
add
outsl
or
cmp
jge
or
lcall
push
jno
data16
pop
aad
popf
insb
or
mov
stos
or
cmp
fisubrl
adc
xlat
xchg
sub
ja
daa
shlb
aad
dec
gs
outsl
push
ret
lods
pop
jbe
jo
aam
jecxz
cltd
mov
stos
lds
or
clc
dec
xchg
scas
mov
out
cmp
mov
adc
mov
cs
dec
and
pop
hlt
jmp
repz
mov
inc
mov
or
push
popf
sbb
call
pop
mov
outsl
js
mov
pop
lods
idivl
mov
sbb
add
test
mov
adc
int3
divb
adc
les
dec
ret
inc
push
mov
add
adc
sub
adc
add
lahf
dec
mov
push
or
push
lods
mov
lret
jecxz
test
out
inc
sbb
sub
imul
sti
dec
sti
in
icebp
xchg
imul
jecxz
cmovo
pop
xor
rcll
push
stc
mov
das
cmc
add
jp
jge
inc
mov
outsl
sarb
pop
loop
cld
adc
mov
loope
test
xor
sbb
push
cmp
loop
int
and
outsl
lcall
mov
stos
and
push
push
imul
pop
mov
inc
movsb
int
imul
push
cmovo
call
jbe
and
mov
push
jae
cmp
cltd
cs
loopne
lret
pop
push
stos
xchg
push
lods
sbb
int3
ds
mov
xchg
mov
fdivl
clc
push
rol
imul
pop
pushl
mov
jns
pop
cmpsl
pusha
and
mov
push
mov
inc
dec
push
lds
cmpl
mov
pop
test
stc
mov
pop
add
inc
nop
idiv
cli
mov
push
adc
xchg
xchg
and
push
popa
bound
xlat
outsl
cmp
outsb
pop
push
sti
add
push
cmc
inc
insb
lods
je
adc
pop
mov
xchg
call
mov
lods
arpl
cld
and
and
add
and
or
sbbb
add
enter
pushf
test
xchg
shl
mov
fst
outsl
popf
arpl
inc
or
arpl
fstps
adc
lods
pop
mov
fidivl
mov
xor
pop
lods
and
in
in
cmp
pop
or
pop
or
jbe
jnp
jp
mov
out
hlt
pop
in
int3
stc
out
adc
shr
adc
ss
inc
out
pop
xor
jno
lods
mov
dec
mov
outsl
hlt
outsl
int
popl
mov
mov
shlb
addr16
push
gs
negb
fstps
jo
sub
mov
data16
xchg
or
sub
xor
rolb
xchg
sbb
pop
cld
ret
mov
jns
xchg
inc
outsl
jbe
mov
lods
add
inc
pop
popf
mov
aad
cmpsl
push
aas
dec
xchg
push
lret
fs
push
xchg
scas
aaa
jmp
out
in
sub
nop
inc
shll
aad
xchg
and
mov
test
dec
pop
or
cwtl
pop
out
leave
mov
xchg
jl
sbb
push
push
cltd
sub
js
in
outsl
in
out
inc
out
add
sub
mov
jge
cmp
mov
outsl
xchg
cmc
fstps
add
lods
cli
lods
rcrl
lock
cwtl
xchg
es
mov
popf
pop
stos
xchg
in
pop
mov
xchg
xlat
pushf
sarl
push
sub
adc
pop
and
cmp
lret
fisubrs
sub
mov
das
int
mov
mov
push
add
imul
inc
movb
sbb
in
stc
xlat
xor
in
add
jb
xchg
push
xchg
rorl
cmpsb
or
cmp
in
arpl
or
jne
fcmovu
sub
xchg
inc
mov
cld
pop
inc
pop
and
fsubl
xchg
mov
out
pop
cli
out
mull
inc
lret
mov
sub
fcomp
stos
push
dec
sahf
sbb
mov
fwait
add
test
push
roll
frstor
xorl
add
test
fldl
mov
jb
mov
es
mov
lods
xchg
insb
add
pop
push
daa
cmpb
or
fdivrs
sub
mov
and
or
cmp
xor
adc
repnz
loop
sarb
int3
xchg
cld
sub
sbb
or
cmp
sub
pop
and
add
loop
sarb
int3
xchg
cld
sub
sbb
push
and
sub
pop
and
adc
insb
repnz
loop
mov
cmpsb
int3
xchg
cmc
mov
inc
clc
push
call
xor
xchg
cld
subb
ret
movsb
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jmp
bound
push
pop
jle
aad
xchg
arpl
lahf
push
or
add
add
add
add
pop
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
out
xchg
sub
sbb
jge
or
jo
add
sbb
insb
add
fiaddl
sub
pusha
add
add
pop
add
or
jge
sub
add
sbb
add
add
add
or
add
mov
or
push
add
add
add
testb
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
add
add
add
add
sbb
arpl
pop
add
cmp
add
incl
inc
add
add
add
pusha
add
add
add
push
fiaddl
add
push
add
add
faddl
xchg
add
lea
imul
add
add
add
add
mov
add
add
jle
sbb
aas
add
lcall
add
push
or
insb
add
add
add
add
add
add
add
rolb
add
add
add
push
add
push
addb
filds
sbb
lods
add
aaa
add
icebp
add
add
add
add
add
mov
cmpsb
add
lods
add
add
add
fadds
mov
and
push
add
pop
add
jns
sbb
jo
fiaddl
ret
add
jo
pop
add
add
add
addb
pop
add
popa
add
add
add
add
lcall
add
add
mov
add
add
sbb
arpl
and
add
push
add
add
flds
addb
pop
add
add
add
add
add
push
add
add
inc
add
add
add
add
sbb
nop
add
mov
pop
add
add
add
add
add
add
add
mov
add
outsb
add
add
add
lahf
add
flds
mov
add
add
add
insl
add
add
add
or
sub
add
insb
add
mov
jge
mov
add
add
add
add
add
add
jmp
pop
add
add
add
jnp
fiaddl
in
inc
add
add
add
gs
add
inc
add
add
xchg
add
lds
in
add
loopne
xor
add
rolb
cmp
pop
add
add
faddl
roll
dec
add
add
dec
add
push
add
xor
ret
add
add
add
add
add
add
add
sahf
add
rolb
and
add
pop
add
add
outsl
add
out
cmp
adc
add
add
xor
movups
out
nop
jmp
iret
and
fimuls
sub
out
jno
push
mov
xchg
inc
cltd
jno
mov
fistl
jnp
dec
pop
pop
in
int
das
or
sbb
cmp
scas
xchg
ja
jmp
ss
and
popf
bound
das
in
mov
mull
js
out
and
mov
add
mov
pop
scas
mov
icebp
cltd
push
push
xchg
stc
dec
dec
outsl
add
xchg
pop
add
shl
testl
icebp
xchg
cmc
aad
jmp
mov
push
clc
xorl
mov
out
outsb
and
xchg
adc
mov
movsl
les
or
cld
mov
test
pop
mov
outsb
andb
adc
push
ret
lods
pusha
cmp
pop
pop
repnz
and
push
in
inc
cli
nop
lea
out
xor
fdivrs
cmp
dec
popa
mov
sub
shll
xchg
jl
mov
mov
mov
insl
aas
jne
and
shlb
test
mov
sub
out
loopne
and
pop
fld
roll
ds
aaa
stc
test
cmp
cmpsl
sti
pop
pop
jp
sbb
push
push
inc
mov
out
fdivrl
jp
je
pop
jecxz
arpl
push
cwtl
xchg
mov
sbb
pop
pop
and
cld
sbb
scas
es
adc
push
repnz
or
loope
push
iret
dec
stos
jge
loope
mov
lahf
cld
push
scas
lahf
in
cs
les
and
add
dec
mov
popf
add
pop
jns
iret
outsl
add
inc
sti
dec
jle
daa
aad
daa
test
insb
and
repnz
adc
stc
and
jns
mov
gs
sti
js
aad
adc
or
cmp
std
lods
xor
jge
cmp
cmpb
sbb
mov
cmp
out
and
fiadds
or
push
addr16
sbb
fldenv
outsl
inc
std
pop
cmc
mov
xor
incb
data16
into
into
xor
add
xchg
mov
aaa
daa
shl
xchg
daa
adc
or
cmp
fistps
push
insb
cld
and
sub
movb
fldl
xlat
stos
std
mov
fimuls
add
sub
out
push
stc
cwtl
xchg
mov
movsl
cld
push
xchg
ljmp
sbb
icebp
clc
mov
idivb
scas
scas
pop
and
sarl
int3
inc
out
repnz
cmpxchg
cld
mov
in
cwtl
sub
out
test
aad
cwtl
jl
add
jmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
