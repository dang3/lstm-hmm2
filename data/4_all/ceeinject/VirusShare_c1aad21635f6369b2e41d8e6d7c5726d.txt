call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aad
lds
fwait
mov
rclb
push
gs
push
add
xor
ret
jecxz
repz
addl
push
inc
inc
push
add
jae
sub
and
adc
xchg
mov
inc
inc
jo
add
jge
data16
push
dec
push
pushf
xchg
xchg
xchg
test
and
xchg
enter
and
cwtl
sahf
fistl
js
sarb
xchg
push
sbb
mov
loopne
ljmp
jle
stos
dec
mov
outsl
xchg
push
push
dec
call
mov
lea
mul
hlt
nop
ret
roll
xchg
xchg
mov
push
push
mov
pushf
inc
jb
push
insl
sahf
xor
adc
fisttpll
mov
xchg
mov
movsb
dec
inc
pusha
mov
sbbl
xor
mov
add
pusha
dec
shrl
mov
adc
add
imul
iret
dec
pop
mov
repz
xchg
in
xchg
addl
push
inc
inc
sti
jne
gs
adc
cmp
mov
stc
es
rcl
in
adc
inc
and
or
jo
insb
jl
push
jno
test
lahf
rcl
jmp
xorb
inc
es
and
dec
push
adc
and
xor
test
push
inc
inc
push
jne
gs
add
xor
ret
jecxz
repz
addl
push
inc
inc
push
jne
gs
add
xor
ret
pusha
test
rcrl
or
sub
repnz
out
in
test
jnp
xchg
add
and
adc
jmp
xchg
mov
sub
and
pop
stc
cmp
mov
int
inc
stos
popf
inc
daa
addb
enter
mov
shl
mov
js,pt
dec
movsb
arpl
jns
jg
xchg
or
xor
cs
or
imul
dec
pop
mov
in
inc
cmp
pop
inc
jmp
test
leave
notl
mov
jae
out
repz
pop
aam
add
out
mov
xor
mov
sub
mov
sub
dec
aaa
pop
fisttpl
aaa
insl
push
call
mov
pop
loope
inc
movsb
mov
int
movsb
imul
mov
subl
cld
imul
push
mov
cmpxchg
or
je
sub
arpl
push
adc
jae
fbld
enter
lods
in
loop
mov
lret
mov
inc
fdivrs
sub
jmp
adc
push
aad
fstpl
inc
in
push
xor
sahf
ljmp
bound
adc
jae
insl
inc
inc
dec
mov
ret
sub
imul
test
addl
or
addr16
das
lret
lods
push
nop
subl
xchg
aam
fmulp
loope
js
pop
andb
pusha
jge
in
mov
jo
pop
sahf
mov
sti
add
sub
out
pusha
notb
rorb
jnp
out
cld
pause
mov
mov
inc
push
lods
lods
test
aam
xchg
mov
or
dec
or
push
mov
test
jb
add
mov
xchg
lods
fwait
inc
and
cmp
mov
rclb
inc
loopne
stos
pushf
fmul
mov
or
jmp
jp
sbb
out
pushl
bound
mov
mov
rcrb
imul
rcll
mov
das
sub
jb
dec
lcall
iret
stos
ds
mov
pop
fisttpl
xchg
insb
push
ljmp
and
cbtw
mov
lea
pop
mov
dec
xor
ret
sub
pop
adc
jge
test
fwait
insb
sbb
test
enter
push
arpl
fs
gs
imul
cmp
scas
addr16
icebp
lds
and
lret
cmp
push
movsb
dec
jmp
push
push
int
imulb
in
mov
movsl
xchg
adc
jb
icebp
stos
adc
pop
loopne
fcmovb
aas
cli
cmp
cmp
dec
or
pop
jg
xor
aaa
mov
adc
cmp
mov
jg
sub
das
scas
aaa
mov
test
mov
das
adc
inc
mov
repz
cmpsb
adc
incb
mov
mov
loope
and
push
sbb
mov
dec
mov
in
xor
repz
das
ficompl
jge
mov
in
jns
mov
xchg
loopne
push
andl
sbb
mov
scas
out
ss
gs
jge
loopne
sub
js
adc
push
rol
add
push
xchg
and
sbb
jnp
sbb
cli
pushf
push
scas
insb
cmp
in
or
rcrb
les
mov
jbe
int
jl
push
xchg
cmp
fcmovnbe
stos
pop
in
scas
mov
push
arpl
or
out
fcomip
jmp
jge
xchg
xor
testl
pop
jbe
mov
in
push
mov
push
xor
adc
mov
cmp
dec
dec
test
daa
jmp
mov
push
sub
adc
jg
xchg
es
scas
out
flds
mov
xor
repnz
inc
xchg
dec
adc
cmp
mov
imul
in
gs
pop
ja
xlat
pop
dec
mov
sti
push
add
scas
addl
fisubrs
mov
inc
fistpll
lods
sub
out
lea
mov
faddl
arpl
stos
bound
stc
cmpsl
movsb
fsubs
loopne
jne
jno
test
mov
xchg
push
or
les
shr
inc
dec
popa
push
inc
push
je
andb
rcr
cmp
jns
arpl
stos
in
pushf
push
push
add
cld
dec
xchg
fs
push
jle
sbb
negb
add
inc
xchg
addr16
xor
dec
cltd
xchg
inc
test
mov
inc
mov
pop
xor
sub
mov
mov
shll
ret
and
or
int
and
clc
shlb
call
jl
push
push
mov
ljmp
das
sub
fnsave
cwtl
int
ret
std
sti
or
add
sub
ficompl
das
cwtl
jmp
adc
sbb
and
out
and
sbb
jp
lret
or
push
iret
xchg
movsl
add
dec
mov
movsb
xor
arpl
mov
ret
jae
mov
sub
adc
lock
pusha
test
scas
add
dec
test
rorl
jne
out
or
pop
inc
pusha
and
jmp
roll
mov
stos
fimull
lcall
movsl
pop
adc
das
and
bound
shrb
xchg
arpl
test
pusha
cli
loop
leave
dec
cmpxchg
fwait
dec
orb
xor
loopne
movsl
daa
fisubrs
shll
mov
dec
mov
xor
push
push
xchg
mov
sub
mov
popa
je
movsb
mov
adc
or
xchg
push
pop
inc
add
jle
xchg
fcoml
push
mov
pop
mov
jb
or
jecxz
lcall
ror
adc
loop
loop
mov
fldenv
lods
jns
mov
sahf
clc
fwait
push
pop
cmp
add
xchg
fwait
sub
lret
pop
push
mov
lret
test
push
fidivrs
or
test
lods
fld
ret
fstpt
sbb
ss
arpl
cmp
shlb
out
xlat
lret
inc
adc
mov
movsl
jg
push
enter
mov
push
stc
int
popa
scas
data16
shr
sbb
dec
cs
sub
cmp
jmp
jns
pushw
lods
popa
xor
sub
xchg
mov
fldcw
roll
cmp
sbb
xor
daa
push
int
pushf
inc
jle
pop
cmpsl
data16
mov
fdivrs
mov
aam
or
dec
jo
jecxz
jno
mov
js
or
xchg
cmp
andb
icebp
push
mov
pop
in
frstpm(287
mov
dec
fmuls
mov
dec
push
xchg
jb
mov
ss
jg
or
jecxz
mov
sti
aad
mov
scas
pop
sub
inc
js
sub
test
loop
and
push
lea
fs
sti
stos
pop
lret
pop
out
daa
cmp
fwait
xchg
inc
dec
add
or
xlat
fmul
and
fimuls
sbb
shrb
fsub
imul
jnp
inc
stos
jae
jle
pop
clc
test
dec
mov
sahf
mov
cmp
adc
cmp
iret
mov
ficoms
lods
outsb
jp
out
cmpsb
sbb
lds
mov
scas
pop
jb
scas
sahf
out
fisubrl
inc
push
push
int
insl
add
ret
psraw
std
xchg
adc
in
jge
mov
lahf
cmp
pushf
xchg
cmc
push
adc
cltd
nop
mov
ss
inc
les
out
aas
je
inc
adc
or
jmp
mov
faddl
shl
lods
mov
loopne
cltd
and
or
flds
push
inc
sbb
push
and
inc
sahf
sbb
pusha
and
dec
inc
out
pop
dec
sbb
jmp
loope
mov
mov
xchg
push
or
xchg
lea
test
push
mov
xchg
iret
adc
ds
rolb
mov
and
pop
pop
insb
mov
addr16
mov
cmp
std
and
inc
xchg
sbb
lock
cmp
jle
ja
push
xor
icebp
push
movsb
out
mov
jp
ret
nop
adc
insl
pushf
stos
xchg
or
je
jle
push
cwtl
sub
mov
cmpsl
arpl
cmp
insb
test
test
add
push
fidivs
cs
aad
jae
test
or
dec
int
rclb
les
imul
and
or
and
add
sbb
lds
inc
jle
dec
push
or
sub
xchg
fdiv
lock
aad
push
pop
into
and
mov
fbstp
jns
cwtl
aam
adc
rol
xchg
jmp
cwtl
cs
icebp
loope
and
je
sub
mov
push
push
shld
jo
daa
int3
les
cld
negb
fmull
addr16
push
movsb
mov
lret
jne
jne
and
out
negb
inc
mov
and
xor
cmpsl
shl
xchg
addr16
mov
push
arpl
mov
jg
mov
bound
sub
enter
clc
aam
sti
into
lods
lcall
stos
mov
xor
test
fbstp
scas
mov
mov
mov
and
jge
xor
xchg
lods
fsubrl
std
aaa
cmp
sbb
mov
jg
xchg
add
xorl
lods
dec
out
jg
movsl
fs
sbb
mov
outsb
lret
push
dec
aaa
stc
xchg
add
cmpsl
jae
add
dec
dec
addr16
mov
jecxz
cmp
dec
das
enter
ss
push
inc
mov
sub
aam
orl
cmpsb
sub
sbb
and
inc
mov
ds
mov
les
mov
dec
aaa
rorl
stc
ss
mov
xor
ljmp
jns
ljmp
xchg
mov
andl
xchg
sub
rcrl
movsb
add
loopne
adc
or
les
adc
sbbl
push
jo
cld
insl
iret
add
shlb
sbb
aas
insb
add
ljmp
mov
cli
mov
or
cltd
lcall
mov
xchg
sarl
or
in
xchg
lods
cmp
mov
mov
mov
cmp
in
pop
test
fmuls
orb
sbb
fimull
inc
inc
mov
pushl
sub
mov
xor
mov
sub
hlt
cmpsb
gs
cmp
xchg
xchg
data16
adc
fs
dec
mov
inc
rorb
test
ficoms
add
sub
push
ret
movsl
dec
adc
xchg
dec
sbbb
push
jo
loopne
leave
sbb
out
popf
rol
lret
push
or
ja
xchg
pusha
mov
mov
stos
or
pop
bound
pop
xor
pop
sti
stos
adc
jbe
lock
xchg
fmulp
jge
clc
mov
jge
dec
xor
int3
insb
mov
sahf
mov
sub
xlat
and
pop
jge
cmc
dec
push
and
sub
xchg
jmp
push
cmpsb
jl
jge
cmp
jae
mov
pusha
dec
fs
fcomps
push
xchg
mov
fildll
loopne
dec
add
lcall
pop
push
std
adc
sub
icebp
pop
jb
ss
cmpsl
dec
enter
mov
or
outsb
and
sbb
jmp
inc
add
lahf
cld
stc
inc
in
xor
into
repz
insl
lret
inc
int
add
stos
pop
test
sarb
imul
sahf
insb
leave
lret
cmc
cmp
cmp
ljmp
inc
cmp
jnp
mov
mov
fmul
or
test
lret
test
ds
push
sbb
std
mov
cmp
xchg
xchg
mov
loopne
sub
jmp
rorl
pop
mov
xor
cmpsl
push
add
ss
adc
mov
addr16
adc
shrb
and
addr16
movsb
xchg
cltd
jle
dec
jecxz
jne
fstpl
sti
inc
and
sub
mov
jo
lcall
mov
or
in
ret
xor
shrb
and
mov
and
ja
ficomps
fisubl
sarl
cmpsb
push
pop
pusha
lahf
dec
aas
sahf
paddq
enter
fwait
lahf
ljmp
mov
icebp
pop
dec
dec
inc
fisttpll
mov
add
ds
inc
xchg
clc
gs
mov
sarl
jnp
ljmp
xor
xchg
cwtl
jge
cld
in
sbb
lret
add
lcall
insl
addr16
dec
movsl
mov
add
fwait
jne
das
xor
ljmp
dec
test
fbstp
push
adc
xchg
sub
orps
loopne
loopne
pop
or
aas
push
nop
pop
inc
sbb
fldcw
cwtl
mov
shlb
in
dec
stos
mov
dec
cmp
cmp
mov
fstl
or
pop
das
jecxz
dec
pop
pop
daa
repnz
mov
in
jb
iret
dec
cs
add
or
pop
arpl
mov
lret
and
cmp
scas
jns
fildll
std
mov
rcll
insl
or
xor
push
pop
ds
stos
fadds
adc
mov
arpl
push
cmpsl
cmp
lock
or
dec
inc
repnz
out
sbb
push
mov
and
xchg
out
sbb
and
cld
popf
sbb
xchg
pop
insl
lret
loope
jne
loopne
in
sub
mov
inc
sarl
mov
cltd
sbb
dec
cli
pop
add
add
mov
aaa
mov
inc
and
adc
jae
jb
hlt
add
push
imul
out
adc
cmpb
aaa
dec
sub
jae
int
into
push
mov
outsl
pop
aad
pop
ret
cld
sbb
enter
cld
jmp
or
mov
jle
ret
cli
addb
or
mov
cmp
iret
push
jns
adcb
push
or
clc
xchg
adc
inc
adc
pop
jno
sub
mov
adc
mov
inc
ror
dec
repnz
out
pop
sub
dec
cmp
add
pop
int3
pop
push
mov
add
push
imul
cmp
jecxz
mov
mov
push
dec
ss
mov
stc
repnz
cltd
lods
insb
insb
or
xchg
xchg
jge
pusha
and
cld
jg
add
xchg
sub
sub
xor
out
hlt
mov
idiv
add
rclb
lahf
aas
or
mov
or
sbb
xchg
shrb
pop
daa
add
rcr
jmp
mov
jns
jbe
xlat
sbb
dec
inc
pop
xchg
imul
out
stc
adc
push
cs
loopne
addr16
fdivrs
cmpl
mov
test
inc
cmpsb
lea
mov
fcom
scas
or
sahf
fmull
xchg
add
rcr
push
mov
in
icebp
adc
into
jne
pop
dec
test
and
adc
test
test
imul
sub
shrl
dec
es
andl
std
cmp
ljmp
je
mov
or
lcall
inc
push
and
xor
lds
divb
cmp
fstpl
ss
clc
adcb
sahf
movl
aas
xchg
jecxz
sub
cmp
add
cld
mov
and
out
or
push
sub
loop
mov
sbb
sbb
add
js
xor
aad
jecxz
jmp
call
and
add
shrl
sahf
push
add
xchg
stos
test
outsb
es
fsubrl
lahf
mov
pop
shrb
ret
dec
lcall
pop
std
popf
or
cmp
or
fidivrl
fsts
xor
sti
pop
sub
lods
jbe
js
mov
mov
movsb
loope
mov
pop
mov
icebp
stc
pop
jae
outsb
sahf
in
arpl
sub
sub
imul
subl
call
xor
rcll
add
les
bound
mov
js
leave
adc
mov
xor
pop
push
pop
sbb
mov
das
loope
push
mov
sub
adc
dec
subl
or
jne
pop
sbb
loopne
pop
movsb
jg
lret
pop
mov
stc
fdivl
sub
mov
xchg
xor
pusha
xsaveopt
jbe
in
fcoms
rolb
xor
pop
les
sub
push
jne
push
xor
pop
push
cli
in
fisubrl
xor
popf
cmpsb
mov
fisttpl
push
cmpsl
or
pushf
test
mov
std
jns
das
pop
out
adc
scas
dec
dec
ljmp
cmp
ja
mov
iret
pushf
loope
cmp
and
dec
sbb
andl
ret
xor
ja
ljmp
fcompl
test
int
aas
jno
lret
push
sub
jae
out
sarb
inc
mov
mov
adc
pop
add
stos
jo
and
pop
push
push
fs
adc
adc
movsl
sbb
jmp
jle
into
sub
pop
enter
inc
stos
icebp
push
std
cmp
lahf
je
aaa
inc
addb
addr16
fistl
outsl
aas
in
or
je
xchg
jmp
rorb
js
scas
mov
inc
mov
ret
mov
stos
xor
xchg
push
pop
fisubrl
jecxz
movsl
aaa
cli
jne
cld
inc
mov
push
cmp
mov
pop
jns
rorl
lret
out
sbb
push
lds
ret
pop
xchg
jns
gs
repnz
push
mov
dec
xchg
inc
pop
sub
sub
mov
aad
lods
sub
pop
xchg
sub
repz
dec
insb
sub
push
mov
push
jae
icebp
ror
movsb
jns
cli
addr16
inc
movsb
cmc
or
jmp
push
fwait
in
jo
ret
sbb
mov
mov
jle
xchg
loope
jg
roll
and
cmp
pusha
pop
movsl
and
fidivrl
cli
and
jbe
jno
mov
cmp
fstps
out
aam
mov
and
or
xor
xchg
fsubrp
adc
jg
and
cwtl
pop
notl
scas
mov
gs
or
mov
mov
sbb
js
or
pop
jg
imul
repnz
lret
arpl
out
nop
mov
testl
insl
mov
mov
push
mov
fisttpl
adc
mov
test
pop
scas
std
mov
push
pushf
in
jno
cmp
sbb
lret
iret
adc
jmp
adc
in
imul
mov
jno
mov
mov
adc
insl
xor
fwait
in
sarl
add
in
ds
fs
jnp
sub
out
mov
nop
fdivs
sahf
hlt
movsl
stos
mul
add
les
cld
fidivrs
jno
inc
in
lret
data16
jge
movsl
mov
and
and
mov
repnz
aas
fadd
cltd
sbb
or
push
rorb
add
rorb
icebp
into
icebp
rolb
jle
add
cltd
or
fnstsw
push
fildll
add
jno
mov
ja
dec
lods
or
leave
cmp
or
stos
popf
rcrl
push
push
and
jp
insb
dec
dec
int3
and
sbb
mov
ficompl
lods
and
jne
cmp
sub
insl
xchg
inc
pop
loop
xchg
inc
es
sbb
in
addr16
sub
das
sbb
xor
fcoml
idivl
test
sub
jg
xchg
fsubs
into
mov
addl
or
adcb
sti
lcall
push
add
lods
push
lret
inc
xor
enter
insl
sub
test
out
cli
rorb
test
aaa
add
push
in
and
lret
push
cltd
dec
in
test
dec
icebp
push
push
xchg
call
lcall
scas
pop
and
jne
imul
test
xchg
sub
jnp
daa
lock
inc
xchg
and
out
add
mov
cmp
lods
mov
adc
lcall
sub
lock
mov
inc
fisttps
sarl
rclb
dec
mov
mov
mov
fsub
notb
lret
loope
push
negb
cmp
std
bnd
lret
jg
xchg
mov
arpl
and
mov
iret
xchg
xchg
movzwl
jne
in
cmp
out
sbb
or
sub
jmp
sub
test
push
popf
outsb
and
mov
adc
sub
cmp
jae
sbb
sahf
outsb
les
lods
fcomps
inc
push
cmp
les
adc
out
mov
in
xchg
addl
push
inc
inc
push
jne
gs
add
xor
ret
jecxz
repz
addl
push
inc
inc
push
jne
gs
add
xor
mov
notl
cmpsl
movsl
mov
inc
inc
push
jne
gs
pop
add
xlat
aad
lds
cmc
pop
in
xchg
addl
push
mov
gs
jnp
imul
fimull
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
and
adc
add
jge
add
and
mov
cmpsb
clc
xchg
ret
hlt
mov
les
adc
add
je
xor
ja
loop
repnz
ret
test
hlt
in
aam
les
adc
add
je
xor
adc
loope
hlt
in
out
xchg
out
in
cs
add
insl
aaa
jnp
xor
mov
popa
push
sahf
cltd
sbbl
jge
push
fsubs
jmp
stc
fbstp
mov
or
sub
mov
cmp
mov
nop
dec
xchg
and
cld
sahf
fstps
rorl
loop
repz
add
push
pinsrw
add
push
add
and
repnz
push
sub
movsb
mov
push
sub
dec
xchg
addr16
xchg
mov
inc
sbb
psrld
les
cmp
fs
sti
pop
pop
insl
out
mov
repz
mulb
sub
adc
and
adc
add
je
xor
adc
test
hlt
mov
aam
bound
push
add
adc
inc
cmp
les
shll
lock
inc
push
push
push
ja
inc
xor
popa
das
ja
push
add
xchg
sub
test
mov
and
push
daa
popa
sub
adc
add
loop
repnz
ret
hlt
mov
les
adc
add
je
xor
adc
test
hlt
mov
les
mov
xchg
mov
push
fcomi
pop
bnd
stos
mov
add
call
jp
lret
and
jecxz
or
push
jae
jle
mov
xlat
jge
and
inc
pop
out
lahf
pop
loopne
xor
mov
inc
movsl
adc
sarl
sbb
das
pusha
bound
mov
ror
dec
pop
cmc
xor
lcall
icebp
pop
orl
stos
scas
dec
lock
ljmp
inc
adc
imul
sbb
shrb
mov
leave
repz
sub
in
test
or
in
xor
jmp
mov
push
loope
add
pushf
imul
daa
lods
cmp
pop
sbb
pop
test
push
cmp
sbb
pop
mov
outsl
push
pop
hlt
ja
inc
mov
stos
notb
add
out
sub
out
xor
push
into
mov
int
pop
push
pushf
cmp
int3
dec
xchg
shll
mov
sbb
xor
sbb
enter
sahf
outsb
clc
pop
scas
aam
mov
xchg
or
in
mov
add
xchg
pop
xor
jb
leave
dec
inc
and
jg
inc
pop
inc
dec
fwait
or
xchg
jecxz
add
jmp
inc
sub
jmp
push
call
mov
or
push
loope
xchg
pop
bound
notl
mov
cmp
stc
js
mov
push
fwait
mov
or
push
push
rcl
xlat
aas
xchg
pop
cmpsl
mov
test
aam
je
mov
std
mov
add
pushf
lods
cmc
orb
ret
es
mov
shlw
mov
mov
mov
fsubrl
add
xor
lods
ret
lds
mov
mov
sarb
mov
or
repnz
push
jl
mov
xchg
fcmovu
pop
mov
jmp
fisubrs
push
cli
xchg
pop
mov
pusha
rcll
sub
aam
sbb
out
xchg
addr16
lea
push
xchg
jle
mov
xor
negb
mov
push
rorl
inc
push
sub
dec
pop
dec
sbb
sub
mov
out
imul
lret
repz
in
sbb
mov
fcomps
fists
dec
std
rolb
inc
ss
jge
jle
adc
lock
pop
lret
ret
lret
mov
cs
jo
lods
std
outsl
dec
adc
adc
hlt
repz
ja
sbb
mov
lahf
cmpsl
mov
jb
js
fs
push
sbb
and
loop
ss
addb
lahf
push
push
cltd
pop
jno
mov
cmpsb
ss
js
xchg
popa
mov
daa
sahf
cld
insl
hlt
aad
sbb
dec
out
test
xor
jb
xchg
xlat
pusha
inc
xchg
out
out
pop
iret
mov
popa
sti
dec
push
mulb
call
mov
out
xor
iret
dec
lods
sub
mov
loop
mov
sbb
adc
mov
mov
pop
sbb
cmp
stos
cmp
jg
mov
push
xchg
shlb
int3
pusha
sbb
xchg
mov
enter
inc
daa
pop
sub
outsl
push
jo
cli
xor
mov
lahf
mov
inc
out
arpl
jb
or
mov
dec
jge
jo
mov
inc
movsb
sub
das
jle
into
ja
lahf
rorl
sbb
fwait
pop
xor
push
cmc
scas
xor
pop
sbb
add
or
cmp
push
jbe
add
xlat
jmp
repz
push
inc
lods
fdivs
in
pop
js
xor
pop
cli
mov
lods
push
stos
push
push
add
inc
pop
mov
add
ret
push
fnstcw
hlt
cs
or
push
add
ret
xlat
lods
add
cld
dec
inc
xchg
sub
add
out
mov
jbe
dec
lret
pop
aam
out
mov
inc
inc
sub
add
or
hlt
lods
push
jne
dec
push
adc
repz
mov
les
pop
cltd
xor
xor
mov
fbld
ja
lods
outsl
call
test
ljmp
jle
bound
bound
jno
mov
jne
outsb
js
jae
and
push
loop,pn
push
add
inc
inc
popf
sub
xchg
and
jb
addb
inc
sub
nop
inc
mov
lret
push
mov
inc
rorl
or
and
in
cmp
dec
jecxz
push
rclb
popf
jp
testl
mov
hlt
mov
xchg
and
test
fiadds
xlat
xor
jno
into
mov
adc
loopne
push
dec
mov
jge
or
xchg
xchg
add
add
mov
xchg
inc
pop
icebp
xchg
mov
mov
add
inc
gs
nop
adc
popa
adc
cmp
jo
add
inc
repz
in
movsl
jle
arpl
loop
cld
xchg
mov
jl,pn
pop
pop
inc
mov
lods
shl
lea
pop
imull
mov
out
out
mov
mov
adc
push
adc
sbb
and
imul
ja
mov
jmp
push
in
lock
xlat
inc
dec
sbb
cmp
xor
dec
mov
icebp
ret
stos
and
cli
pushf
fildl
or
mov
xchg
push
jp
jno
dec
jo
loopne
icebp
popf
cli
xchg
movsb
ss
lea
adc
adc
rorb
outsb
and
fsubp
inc
add
or
loopne
ret
divl
mov
mov
add
mov
sbb
in
je
dec
sbb
nop
je
add
add
test
in
repnz
cmp
lahf
lods
rcrb
int
pop
negb
clc
mov
push
insl
and
repnz
sti
push
lahf
xchg
mov
xchg
sub
mov
mov
sbb
int
inc
adcl
lret
nop
fwait
mov
scas
add
cmp
sub
outsb
or
sbb
out
mulb
cmpsl
inc
icebp
or
sti
add
popf
or
mov
sub
xor
pop
shrl
xchg
cmp
inc
sbb
in
mov
mov
jg
inc
adc
or
or
cmpl
push
adc
inc
in
cwtl
int3
mov
adc
lret
aas
jns
test
cmp
es
sarb
mov
or
icebp
je
xchg
push
lock
sub
cmpsl
cmp
je
out
sti
shrb
sbb
xchg
jb
mov
aaa
arpl
cwtl
enter
jae
das
cld
xchg
mov
movsl
sbb
pop
mov
mov
jl
jno
sub
dec
mov
faddl
adc
out
movl
jbe
outsb
mov
call
rol
mov
mov
cli
insl
mov
xor
sti
js
sarl
ljmp
mov
lea
lahf
mov
push
pop
fnsave
jo
call
mov
daa
sbbl
or
push
pop
pushf
add
out
push
in
mov
cmp
lret
out
mov
lret
inc
dec
push
cmp
adc
int3
or
sub
sahf
lock
rolb
cmp
call
div
sti
pop
out
test
adc
inc
xchg
jno
lret
pop
jbe
in
int
jp
mov
arpl
daa
rcrb
call
add
pop
cmp
mov
in
mov
pop
out
add
mov
lret
sbb
dec
loop
js
jnp
add
ficoms
jg
jne
adc
or
adc
pop
int
jmp
lcall
cmp
mov
hlt
lcall
je
mov
adc
inc
testl
and
xchg
dec
cmp
mov
mov
icebp
jo
xchg
stc
xchg
pop
in
addr16
movsl
adc
adc
and
pop
xchg
shlb
or
jle
shll
aaa
insl
add
push
movsl
mov
or
daa
and
dec
sbb
xlat
jmp
sub
mov
lds
test
repnz
push
pop
into
lret
fiadds
dec
cmp
in
add
dec
ret
mov
mov
add
push
cmp
shlb
call
cwtl
mov
xchg
inc
stc
xchg
lcall
cmpsl
or
imul
or
loop
fbstp
mov
fisubrs
add
mov
adc
mov
repnz
ds
jo
cmp
ret
fwait
or
stos
mov
cmp
or
mov
mov
pop
xor
call
enter
jmp
mov
or
push
and
mov
mov
jl
hlt
aam
in
pop
and
jo
sbb
push
inc
scas
ret
push
or
cmpsl
rcrl
mov
xor
sbb
pop
mov
lods
jbe
push
xchg
lods
add
outsl
fstpt
gs
outsb
mov
or
inc
imul
push
or
pop
push
pop
idivb
movsl
imul
loopne
pop
rep
xchg
and
mov
sbb
jle
enter
mov
adc
jo
mov
andb
jno
sbb
cli
push
nop
mov
fwait
push
inc
mov
push
ret
xchg
mov
clc
insl
loope
flds
call
sub
or
jle
loop
mov
mov
mov
xor
mov
mov
dec
insl
mov
inc
jge
dec
dec
or
addr16
push
aaa
pop
or
into
jl
rorl
into
cs
popa
cli
outsb
sub
mov
xor
xchg
negl
fisubrs
insb
stos
aaa
cli
or
lods
or
pop
leave
adc
nop
es
callw
lds
movsb
inc
adc
sub
scas
mov
sub
btr
xchg
sbb
or
jne
orl
mov
bound
fistl
and
fldpi
int
sbb
mov
xchg
aad
or
xchg
jo
xchg
and
inc
pop
cmp
mov
decl
outsb
test
scas
aaa
jb
leave
mov
jp
and
fistps
mov
mov
or
nop
enter
push
xchg
mov
clc
test
insl
push
xor
push
jp
jnp
add
pop
testl
xor
pop
outsl
andb
lahf
sbb
addr16
lea
loop
push
xor
jp
jbe
push
insb
adcl
ja
insb
mov
nop
ljmp
pop
xor
popa
sbb
jl
popa
mov
add
mov
fisubs
push
mov
xor
xor
pop
mov
push
jmp
mov
inc
mov
mov
inc
call
xor
cmp
adc
mov
test
aas
xlat
pushf
xchg
insb
pop
sub
nop
popf
pusha
sub
jp
pop
or
jb
or
shlb
or
ffree
cwtl
mov
in
inc
jmp
dec
mov
lret
pop
xor
fbld
imul
xor
xchg
mov
imul
cmp
add
stc
aaa
sti
mov
mov
cli
mov
movsb
xor
push
pusha
hlt
stos
dec
test
push
sub
sahf
jg
cmc
int
subb
push
popf
lods
mov
mov
pop
lea
xlat
mov
std
dec
fstpt
mov
xor
and
pop
shrb
inc
shll
repnz
stc
xchg
cmc
scas
dec
loopne
pop
hlt
test
add
push
sbb
notl
mov
pop
sbb
scas
add
shl
push
mov
ror
gs
jae
or
cltd
inc
stos
adc
jno
outsb
push
jns
out
das
icebp
mov
mov
int
imul
mov
add
je
or
enter
jae
mov
xchg
dec
stos
outsl
cmp
popa
in
mov
shr
mov
mov
stc
jb
lock
test
iret
mov
add
mov
sub
aas
dec
xlat
jge
mov
inc
imul
rorb
or
and
popf
insl
pop
xor
pop
rcl
cmp
aas
ds
xchg
dec
mov
sub
outsb
and
add
add
cmpsl
mov
adc
stc
aas
fisubs
add
push
mov
test
pop
dec
push
and
lcall
add
scas
add
lods
imul
dec
lods
scas
xor
sub
rorl
xchg
scas
adc
lret
adcb
inc
or
cmp
inc
leave
adc
loop
ret
movsb
pop
hlt
and
imul
mul
and
sbb
dec
call
push
xor
push
cmpsb
outsl
mov
cli
dec
gs
js
mov
jbe
fisttps
and
pop
jb
mov
xchg
pop
or
rcrl
push
lea
outsl
adc
mov
insb
std
mov
adc
mov
je
inc
push
es
shl
cld
mov
in
adc
xor
add
mov
push
cld
pop
mov
sarl
out
notl
and
push
aaa
mov
dec
cmp
pop
xlat
pop
popa
movsb
dec
repnz
setle
adc
int3
inc
push
addl
lds
outsl
jp
popa
pusha
out
sub
das
dec
or
lods
in
into
jecxz
dec
insb
aaa
cmp
push
add
dec
pusha
adcl
setb
stc
das
lods
movsl
mov
inc
aam
test
lods
adc
mov
test
mov
add
mov
sbb
lea
cmpsb
and
ljmp
jle
pop
pop
cmp
push
push
in
je
add
inc
and
xor
xchg
cltd
sub
sub
fadds
jl
inc
popa
psadbw
popl
sub
stc
jne
dec
jbe
jae
sbb
xor
mov
pop
cmp
sbb
sarb
xor
inc
sbb
xor
loope
sbb
pop
pop
andb
jmp
cmp
pushf
dec
xchg
shr
lock
mov
sub
clc
push
mov
les
push
cmp
xchg
into
or
or
adc
jb
sub
inc
outsl
sahf
mov
aas
scas
ret
cmp
nop
pop
lock
ja
insb
sbb
inc
sbb
fdivl
loop
stos
fsubs
ja
mov
jge
fsubrl
ljmp
push
or
repnz
mov
lods
dec
fcomps
les
sub
ss
fldt
sub
add
inc
ljmp
les
xor
or
mov
push
inc
push
out
or
imul
jp
sbbl
dec
xchg
sbb
pop
pop
out
mov
imul
cmpsl
mov
push
mov
cmp
sub
lahf
bound
jae
fadds
outsl
jmp
pusha
add
jge
jne
mov
addr16
in
jno
jmp
cmp
adc
mov
clc
xchg
xlat
shrb
push
xchg
rcll
repz
jl
mov
sti
xorb
adc
inc
enter
lret
jb
bound
icebp
insl
movsb
fisubs
mov
fwait
push
push
in
dec
not
pushl
shr
in
bound
jnp
mov
cwtl
ficomps
mov
fistps
ffree
pop
xchg
adc
ret
lcall
orl
jae
and
cmpsb
jno
sub
sbb
ja
in
dec
fs
mov
push
mov
cld
lret
cmc
sub
outsb
mov
mov
inc
jb
addl
jb
out
sahf
call
xor
clc
lret
push
repnz
movsb
test
inc
mov
test
outsb
mov
xor
inc
aad
enter
pop
shlb
bound
adcb
pusha
or
cmp
xchg
imul
pushf
adc
jbe
mov
jo
sbb
and
fcomp
int
in
xchg
adc
pop
mov
stos
scas
xor
xchg
pop
mov
mov
mov
repnz
movsb
xor
shll
inc
and
jmp
inc
loop
and
and
mov
adc
popw
pop
lret
movsb
scas
jle
mov
clc
test
inc
and
test
shlb
popa
ss
in
arpl
cmp
dec
cli
add
es
push
outsl
std
int
bound
fxch
jge
setl
sti
scas
push
or
jns
push
call
sar
sahf
inc
sub
fsubl
outsb
sbb
pop
mov
std
jp
mov
push
pushf
jge
inc
ret
jge
insb
je
xchg
out
cltd
ret
inc
xchg
out
in
outsl
stos
mov
xchg
dec
xor
aad
xor
stc
lret
lock
pushf
sub
sub
addr16
mov
push
inc
ret
and
mov
jnp
mov
mov
pop
or
sbb
xor
out
cmp
xorb
ret
and
repnz
jmp
or
xor
cs
mov
in
mov
dec
mov
fdiv
mov
push
idivb
xlat
mov
dec
fstp
mov
add
iret
jl,pt
shll
jecxz
and
divb
cmovl
fsubp
mov
lock
xor
pushf
lret
mov
lods
push
or
sbb
cmp
stc
fstpl
je,pt
sbb
pusha
mull
adc
and
and
inc
cmp
adc
mov
dec
lock
adcb
push
loope
mov
lcall
cs
lret
dec
add
cmpsl
int3
ljmp
dec
cmp
lock
mov
xchg
in
mov
or
sahf
loop
rclb
ret
xor
jge
mov
in
stc
xchg
nop
sub
push
fcoms
xor
dec
aaa
movsl
xlat
rol
icebp
fstpl
add
subl
xor
mov
ss
popf
shll
ljmp
push
sub
pusha
sti
jo
nop
jo
decb
push
adc
dec
repz
push
inc
and
dec
push
mov
sub
rcr
movsl
jge
or
xchg
mov
sbb
dec
sti
jmp
xlat
or
mov
fstl
rcrb
dec
scas
aaa
push
jmp
push
in
pop
inc
les
mov
out
sar
in
cmp
lcall
inc
ja
test
lea
cmp
push
idivl
insb
mov
mov
and
jmp
jns
sti
cli
adc
stos
cmp
xchg
jg
movsl
push
and
push
into
adc
cmp
jb
dec
sub
lock
sbbl
mov
ret
or
in
mov
arpl
add
ret
mov
fsubs
inc
add
daa
pop
aad
out
stos
mov
lds
inc
subl
push
push
jae
mov
sarl
stc
xchg
mov
sub
mov
add
mov
cmp
nop
pop
cmc
in
pop
inc
arpl
in
sahf
lahf
pop
jae
call
in
sub
mov
fsubr
lret
cmp
adc
movups
xchg
jo
sahf
stos
insb
stc
das
filds
scas
in
sbb
or
xchg
push
pop
fstpl
inc
adc
div
testl
sbb
in
and
xchg
movsb
hlt
jns
fiaddl
js
mov
inc
aas
push
pop
sbb
jg
and
mov
dec
hlt
jne
rclb
sti
mov
in
idiv
ds
and
sbb
lahf
jmp
or
or
pop
lcall
repz
out
imul
inc
test
inc
and
pop
mov
out
sbb
mov
xchg
andl
leave
int
xchg
pop
fcoml
cmp
bnd
test
lods
outsb
neg
pop
or
rcr
in
push
imul
jmp
inc
adc
cwtl
iret
sub
mov
sar
imulb
jae
mov
pop
push
ret
adc
js
pop
lret
scas
inc
orb
xchg
jne
jmp
sti
aas
fimuls
push
lea
ds
loope
mov
xor
orl
dec
lods
aad
les
jo
shll
and
inc
pop
sbb
pop
dec
jmp
add
std
fnsave
mov
in
cld
adc
cmp
fnstcw
daa
scas
dec
movsb
in
push
pop
lods
push
test
mov
jbe
add
cmc
push
cmpsb
les
mov
jmp
dec
into
jge
imul
mov
daa
push
mov
mov
scas
shll
add
addr16
sub
xchg
or
js
aaa
push
xchg
push
lret
fistpll
cld
outsl
xor
xchg
aad
mov
pop
xchg
mov
dec
std
ret
test
jecxz
roll
dec
insl
push
shrl
jb
inc
add
je
xor
adc
test
hlt
mov
les
adc
add
je
xor
adc
test
hlt
mov
les
adc
add
je
xor
adc
ret
hlt
mov
les
adc
add
je
fs
add
rorb
pop
pop
ds
subl
dec
sub
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
cmp
sub
sbb
or
xor
cmovne
shl
lods
cmpsl
pushf
xchg
mov
cld
xchg
in
in
cmc
int3
adc
or
jl
insb
gs
jne
mov
ja
lds
cmc
int3
sbb
or
cmp
jl
insb
jge
bound
sahf
vphaddbw
ljmp
mov
imul
push
xlat
mov
jle
insl
fldcw
hlt
mov
sub
in
push
cli
xchg
add
inc
and
jmp
dec
enter
mov
and
mov
or
je
in
ja
insl
sbb
lds
cmp
nop
in
dec
pop
xor
add
pop
pusha
filds
lea
jne
mov
std
push
movsl
sbb
insb
inc
cld
xchg
movsl
sbb
in
ljmp
hlt
xchg
in
ss
lea
loopne
arpl
in
push
mov
mov
movsb
test
jp
push
pop
fs
add
fdiv
fld
cmp
sub
sbb
or
jl
insb
gs
insb
dec
pushf
mov
lods
mov
cld
int
in
in
movsl
jbe
jo
inc
sbb
or
sbb
add
icebp
lds
clc
test
movsl
nop
addb
aaa
or
adc
and
xor
xchg
aad
iret
shr
xchg
cmpsb
in
xchg
mov
mov
inc
outsb
xor
insb
gs
jne
test
mov
cld
aad
in
cmc
int3
add
sbb
or
jl
insb
gs
jne
test
mov
cld
aad
in
cmc
int3
add
icebp
pop
into
push
jns
fcmovbe
sub
aaa
pop
faddl
outsb
call
or
mov
std
addr16
add
sbbl
add
fndisi(8087
stos
aam
cmpsl
lahf
faddl
mov
test
adc
mov
lahf
sub
push
ljmp
std
ds
lods
aad
rorb
sub
shlb
rclb
xchg
adc
cwtl
repz
mov
cmpsb
addl
loope
xor
inc
ja
ss
push
mov
loopne
mov
out
roll
mov
loop
and
xchg
mov
sbb
inc
sub
xchg
mov
test
xlat
repnz
pop
shlb
in
imul
or
mov
xchg
bound
shr
xchg
or
sti
adc
lahf
dec
imul
ret
mov
mov
jmp
mov
pop
push
cmpsb
sub
and
test
jo
and
bound
ret
ss
jbe
mov
cltd
and
paddsw
push
stos
ljmp
adc
dec
mov
mov
push
cmp
outsb
lea
xor
stos
in
pop
mov
cmpsb
xchg
xchg
stos
sbb
nop
pop
mov
pusha
push
adc
es
shll
subb
xchg
mov
xor
fsubrp
fs
pop
and
inc
fistl
jne
js
outsl
dec
sub
mov
adc
lret
or
add
jl
push
aas
pushf
cmp
jnp
orb
cmp
or
dec
or
sahf
insl
lock
jno,pn
jge
mull
call
adc
dec
mov
cmc
pop
pop
mov
loop
stos
xor
jb
mov
mov
push
mov
adc
mov
out
movsl
aam
add
jbe
or
daa
test
push
test
add
mull
cbtw
sahf
lret
or
mov
popa
and
push
data16
push
shr
or
arpl
cmpsl
cltd
xor
aas
insl
in
outsb
das
in
test
ja
xor
mov
xchg
mov
cmp
aas
sti
mov
add
rcll
mov
subb
cmp
sbb
ljmp
fldt
popf
push
out
jb
and
mov
xor
jmp
mov
into
je
push
push
das
mov
or
xchg
mov
stos
lds
ret
int
rclb
cmp
cmp
add
daa
cld
dec
gs
test
imul
cld
loope
fnstsw
cmp
pop
dec
cmp
call
add
sub
or
insl
cmp
out
or
idivl
fwait
je
mov
fwait
jnp
jecxz
sahf
sbb
gs
loopne
aas
inc
dec
adc
push
ss
cmc
mov
shll
sub
adc
xor
outsb
mov
sbb
cmp
mov
das
pop
mov
or
fsts
scas
sub
stc
adc
mov
xchg
and
addl
jle
mov
xor
lret
adc
lds
nop
mov
stos
cmpsl
adc
xor
push
and
ret
outsl
out
cld
je
sbb
lcall
dec
pop
xor
inc
adc
jno
in
xchg
mov
leave
add
xor
mov
mov
or
insb
adc
cmp
xor
sahf
jno
leave
inc
scas
ljmp
xchg
fdivl
inc
push
inc
jmp
fdivl
add
nop
aas
pop
mov
or
sti
sub
movsl
mov
fstps
and
cwtl
jl
mov
sbb
in
movsb
shrb
mov
cmp
pushf
iret
cmpsb
pusha
add
dec
add
out
cwtl
xchg
in
inc
mov
xor
in
adc
mov
push
fs
cmc
ret
popf
and
aam
loop
rcrl
in
pop
jl
lcall
adc
inc
mov
cmp
aam
sbb
mov
sbb
fiadds
js
cmp
push
mov
jbe
pop
inc
mov
push
fstpt
cmp
xor
or
adc
outsl
dec
and
cmp
push
adc
pop
mov
pop
imul
push
fcomip
popa
inc
enter
es
adc
out
cmpl
pop
repz
mov
movsl
pop
jp
filds
cmp
adc
jp
int
movsl
notl
mov
pop
js
xorl
sahf
icebp
int3
icebp
mov
dec
mov
and
push
sbb
jmp
popa
sbb
outsb
sub
outsl
icebp
sbb
sub
sbb
fldcw
sbb
jp
lcall
cmpsl
call
shll
inc
push
inc
push
pslld
loopne
mov
jne
out
sub
sbb
or
xor
dec
out
es
cmpsl
mov
jp
and
sub
xchg
bound
sbb
inc
inc
sub
pop
outsb
stc
sbb
pop
sbb
add
mov
fwait
adc
jbe
jo
dec
adc
jo
push
mov
popf
mov
pop
hlt
mul
mov
sbb
ror
sub
stos
ds
jp
in
cs
push
aad
sbb
mov
adcb
insl
stos
push
ss
sbb
cltd
cmp
mov
jns
and
push
dec
fstps
xchg
fidivl
add
mov
mov
sbb
daa
lea
cwtl
movntps
int3
push
lahf
jmp
sub
in
jmp
sbb
sbb
es
dec
xchg
adc
das
jo
popa
jno
iret
rcl
jg
push
sub
loop
jo
xchg
scas
push
or
sub
push
push
sub
push
test
and
sub
outsb
orl
mov
and
out
add
push
jno
aam
lods
mulb
lods
call
add
cmpl
rolb
jle
xchg
push
daa
pop
out
adc
fwait
cmp
push
cmp
stos
ret
adc
push
sbb
fwait
scas
icebp
mov
stos
add
dec
loop
rorb
pop
xchg
je
aas
xor
decb
ljmp
and
cli
adc
xchg
xor
enter
leave
fwait
stc
movb
lahf
pop
cmpsb
push
jp
dec
mov
and
dec
push
movsl
cmpsb
lds
popa
push
sub
leave
cmp
pop
leave
jns
dec
push
loopne
jnp
test
fs
subb
add
ds
mov
dec
push
inc
insl
ret
ret
inc
and
test
pop
sub
fsubs
mov
jg
dec
adc
jl
lods
xchg
je
add
push
inc
lret
dec
push
mov
adc
jnp
cmp
cmp
push
out
jle
stos
movsl
sysret
xor
mov
push
les
sub
sbb
jecxz
addb
fisttps
cmpsb
arpl
and
mov
mov
and
out
ret
aam
test
lds
movl
cwtl
pop
popl
nop
dec
int3
sub
clc
and
xlat
ljmp
cld
cmp
dec
lds
test
jno
pop
xchg
adc
pop
and
rolb
insb
adc
dec
test
lret
cld
sbb
mov
sbbl
test
out
in
imul
cmpsl
daa
loopne
rorl
popa
lock
scas
pop
outsb
rcrb
clc
pop
cli
ret
cwtl
sahf
adc
mov
sub
sar
scas
in
mov
mov
fldenv
mov
sub
add
xor
cmp
ja
shrb
pop
ja
rcrl
jno
xchg
sahf
push
shll
int
ret
jnp
xchg
push
xor
loop
add
mov
xchg
outsl
pop
sbb
enter
inc
icebp
mov
lock
rclb
test
or
inc
xchg
sbb
lds
and
inc
fcomps
ficoml
data16
aas
xchg
nop
adc
lcall
mov
pop
add
jmp
ss
xchg
push
insb
mov
cmp
fwait
shl
sbb
cld
mov
rcl
lock
xor
jno
mov
or
adc
mov
cld
xchg
mov
clc
and
leave
test
pushf
movsb
ja
inc
mov
mov
lods
cmp
mov
sbb
cmc
push
jle
xchg
movsl
imul
pop
movsb
xchg
adc
in
bound
clc
sub
outsb
cs
stc
pushf
push
dec
divb
push
dec
jmp
std
dec
inc
cmpl
and
js
cmc
xchg
rcl
cmp
push
xchg
mov
or
mov
sbb
mov
cmc
sub
push
cmpsl
mov
and
push
sbb
mov
or
jp
sbb
aam
mov
subl
and
stos
pop
pop
and
push
pop
xchg
mov
jns
mov
aas
push
movsl
test
test
xlat
clc
xor
pop
xor
push
hlt
and
popf
sub
outsl
push
in
jne
or
xchg
jae
aas
popf
popa
bound
pop
sbb
cmp
cmp
inc
subl
and
push
gs
dec
cmp
push
outsb
jg
test
cmpsb
inc
loopne
xlat
xor
cmp
xor
push
fldenv
push
subb
leave
aam
mov
pushf
xchg
push
sub
jmp
and
jp
push
mov
jne
add
pop
ja
xor
addb
inc
lcall
out
mov
call
mov
mov
push
fwait
mov
fwait
icebp
dec
push
xor
mov
pop
test
xor
pushf
hlt
dec
movsl
and
lret
cmp
or
sub
xchg
cmp
and
je
dec
fsubs
or
mov
ds
ds
out
sub
add
fwait
mov
mov
test
dec
sbb
aam
sahf
dec
xor
lea
push
sub
shlb
in
dec
xchg
or
aam
fstp
bound
fwait
mov
mov
mov
repnz
mov
bound
out
mov
jl
nop
xor
xchg
sahf
inc
enter
pop
and
dec
cmp
loop
enter
pushf
fisubl
cmp
data16
xor
out
imul
jo
jb
std
push
and
mov
xchg
dec
clc
shrl
inc
push
aam
push
int3
and
mov
pop
lods
lods
cmpsb
ret
pop
std
aam
cmp
xchg
xchg
inc
in
and
xor
inc
xchg
fdivs
pop
fimull
enter
lods
inc
lods
xchg
pop
iret
jbe
sub
cmp
inc
cwtl
inc
cmp
adc
adc
mov
push
or
je
loope
xor
and
mov
out
lret
mov
sbb
pushf
mov
and
aad
rcr
pop
loope
jbe
adc
adc
inc
inc
test
mov
jb
cld
addr16
sub
mov
cld
xchg
in
iret
mov
push
in
imul
push
mov
lahf
jl
popa
cltd
test
pushf
sbb
je
out
sub
lods
and
out
add
cltd
xor
cld
mov
mov
push
xchg
outsl
xchg
xor
scas
mov
pop
xor
sbb
cmp
cmp
aas
pop
iret
hlt
xchg
mov
iret
adc
sahf
lcall
repnz
push
movsl
in
addr16
pushf
clc
hlt
enter
jno
mov
xor
cmpl
aas
in
push
mov
inc
je
cltd
stc
out
pushl
roll
and
subl
xor
loope
addr16
insb
mov
xor
cmp
adcl
add
mov
incb
test
out
test
mov
lret
mov
gs
ret
loope
fisttps
sbb
pop
test
shll
mov
pop
aas
lods
les
mov
lahf
or
pop
inc
fsts
cmp
pop
in
pushl
hlt
push
es
mov
xlat
leave
add
dec
cmp
outsb
scas
xor
iret
or
jbe
adc
mov
xchg
addr16
lret
pusha
sarl
adc
vprotd
lock
aad
in
xor
ds
add
mov
xor
xchg
ret
sub
outsb
sarb
nop
notw
inc
mov
or
pop
mov
xor
or
sub
and
xchg
mov
imul
out
sbb
popf
sub
fldt
jmp
xchg
adc
xor
dec
movsl
jl
call
ret
testb
fsubl
fnstcw
lret
scas
add
xchg
add
xchg
mov
or
insb
sbb
pop
mov
pusha
adc
repz
adc
push
push
dec
pop
mov
rcrb
mov
js
loop
xchg
mov
push
les
mov
gs
das
jns
or
call
sub
cmp
xor
mov
push
mov
je
dec
xchg
adc
call
add
ret
dec
sbb
fmul
xchg
pop
cmp
nop
jp
jle
sbb
sub
gs
in
dec
mov
testb
mov
dec
divb
push
mov
stos
xchg
mov
push
add
push
mov
outsl
es
pop
mov
gs
je
xchg
cld
fildl
xor
fbstp
popf
imul
mov
test
cltd
mov
addb
cmp
or
jle
push
in
and
out
shl
clc
pop
inc
dec
mov
test
mov
daa
jg
out
jae
mov
inc
cmpsb
jecxz
icebp
mov
dec
pop
das
nop
dec
sbb
int
js
pop
add
and
test
adc
xchg
faddl
sbb
mov
dec
ror
enter
push
test
mov
scas
and
incl
inc
cmp
xchg
stos
dec
call
ds
mov
xor
inc
inc
xorb
lret
push
pop
enter
lret
dec
inc
cmpsl
inc
repz
lods
and
push
lcall
test
movsl
pop
add
fwait
push
mov
ds
xchg
fiadds
and
push
lahf
sbb
out
adc
xchg
andl
scas
call
mov
mov
sti
daa
sub
in
dec
repnz
lods
push
push
and
arpl
outsl
sbb
mov
push
sti
rol
mov
aaa
mov
mov
sbb
inc
fld
cwtl
mov
in
xor
adc
lcall
cmp
fcompl
insb
add
sahf
sarl
nop
out
insl
in
lock
in
lods
pop
mov
daa
out
mov
adc
push
inc
cli
or
aaa
mov
adc
xor
sub
sub
jnp
mov
dec
mov
mov
int3
and
mov
in
insb
mov
jmp
mov
dec
ficoml
gs
cli
or
out
pop
ret
int3
int3
push
add
pop
ficoml
push
sub
fimull
subb
jmp
sbb
enter
cmp
data16
or
jmp
inc
lds
or
fsts
cs
lahf
and
xor
xchg
and
cmp
jnp
rol
daa
push
adc
sub
pop
out
xchg
mov
mov
sbb
push
or
rcrl
sub
loope
ljmp
rolb
in
lcall
ljmp
push
pop
int3
pop
inc
scas
add
out
mov
pop
lret
xchg
adc
add
add
repz
sbb
adc
aam
or
mov
inc
jmp
in
popa
inc
mov
push
pop
cli
or
ror
cwtl
stc
int3
in
cmp
sub
or
jl
push
stos
sbb
mov
test
mov
test
fadds
es
jns
xor
xor
stos
shr
icebp
mov
es
and
test
jecxz
stos
dec
adc
inc
pop
clc
xor
and
adc
aaa
repz
dec
jo
mov
push
cmp
and
dec
test
clc
jp,pn
sahf
test
cmp
jle
insl
imul
imul
mov
insb
push
dec
dec
les
push
aad
clc
mov
stc
sti
addl
std
xchg
xor
loop
sub
push
inc
aam
dec
imul
fcoms
jle
push
mov
push
das
pop
mov
dec
mov
xchg
or
lods
or
push
dec
movsl
mov
mov
xchg
pop
pusha
cmp
and
jns
fidivs
jle
in
loop
pop
dec
std
insb
je
or
xor
push
add
adc
jl
mov
std
cwtl
jmp
xor
or
xor
add
and
xchg
dec
xchg
mov
xor
mov
mov
enter
out
inc
and
jnp
push
xchg
and
int
rolb
insl
xchg
out
push
jmp
inc
fimull
rolb
mov
lock
sub
rcrl
je
lock
xchg
inc
or
lods
xor
cmp
bound
push
gs
inc
sub
push
inc
rcrl
cmpsl
sub
cmp
pop
lret
aad
orl
mov
mov
mov
mov
aad
ret
xchg
xchg
in
dec
push
cmp
push
push
pop
mov
jne
loope
mov
ret
dec
push
inc
jle
scas
out
loop
enter
cltd
out
ret
test
add
inc
fsubp
jne
mov
rorb
pop
sub
inc
mov
fldt
test
out
cmp
sub
mov
cli
mov
lods
jnp
test
jmp
sub
movsw
popa
mov
mov
out
add
pop
jg
sbb
in
cmp
mov
pop
jbe
push
out
mov
inc
into
dec
movsb
xor
shr
pop
inc
popf
add
cs
lea
negl
ficoms
bt
cmp
int3
loop
mov
and
lods
adc
rorb
out
int3
aaa
push
mov
push
inc
popf
or
xchg
inc
mov
mov
fisubl
add
rolb
andb
push
cs
push
or
insb
sbb
lods
into
fisttps
dec
popf
jns
xor
mov
fcmovbe
dec
dec
xchg
mov
pop
cli
hlt
enter
mov
testb
dec
push
rcrl
mov
lret
in
dec
mov
push
xorb
pslld
or
test
jg
or
out
sti
sub
shrb
cmp
insl
outsb
aad
in
ficoml
mov
cmp
or
fucomi
mov
arpl
ds
pop
pushw
test
cs
jge
loop
add
clc
ljmp
pop
dec
mov
repnz
inc
cli
clc
jns
fisubrs
push
clc
add
jb
or
mov
or
and
push
sahf
rolb
mul
mov
mov
pop
xchg
insb
int3
stos
cmpsl
add
ss
and
push
bound
daa
push
stos
pop
pushf
movsl
lret
or
fisubrs
mov
subl
arpl
mov
inc
mov
ret
mov
and
shlb
test
inc
insb
push
das
cmp
data16
and
and
xchg
fstps
ljmp
push
or
mulps
iret
lods
insb
int
xchg
test
fnstenv
loope
std
outsl
cmc
cmp
js
and
pop
dec
xlat
mov
push
jnp
in
lahf
cld
mov
xor
std
in
sub
aam
out
sbb
xor
jnp
aam
lods
outsb
sbb
jmp
sub
pop
outsl
lret
aad
dec
outsl
or
jae
dec
sahf
scas
stc
adc
push
mov
test
loop
shrl
lret
push
sti
lahf
xlat
xchg
pop
sub
mov
lock
call
sbb
dec
or
or
loop
test
ja
int
xor
repnz
out
fnclex
subl
cmpsb
ret
subl
aas
cld
jecxz
inc
and
iret
stos
fwait
dec
dec
pop
rorl
dec
mov
scas
cwtl
ret
inc
and
push
mov
mov
daa
push
rorb
mov
mov
inc
inc
cwtl
in
cmp
sub
and
add
cltd
cmc
mov
jecxz
sti
test
icebp
cmp
mov
ds
pop
or
insb
in
mov
in
lahf
jmp
icebp
insb
cmc
sbb
pop
jb
jbe
adc
mov
int3
in
dec
arpl
repnz
aas
orl
push
jp
lea
pop
cmp
add
dec
xchg
aas
fs
pop
xchg
ss
jmp
rolb
orb
fwait
mov
fstps
insb
gs
jne
test
mov
cld
aad
in
cmc
int3
add
sbb
or
jl
insb
gs
jne
test
mov
cld
aad
in
cmc
int3
add
sbb
or
jl
insb
gs
jne
test
mov
cld
shr
in
int3
xor
sub
sbb
or
jl
insb
in
cmc
dec
jp
push
setl
adc
and
xor
mov
xorl
insl
movsl
xor
ret
adc
add
jo
pusha
xchg
inc
mov
mov
inc
mov
jb
add
adc
and
xor
shlb
jo
add
jno
popa
inc
push
mov
mov
imul
loope
sarl
shrl
and
call
adc
or
jno
cs
inc
mov
stc
jp
ror
mov
and
out
movsb
jge
cmc
scas
push
pop
lret
pop
sub
in
rorb
test
mov
dec
repnz
mov
sahf
pop
mov
mov
push
cmc
push
imul
push
mov
xor
adc
ja
xchg
mov
mov
adc
inc
icebp
and
shlb
jp
int
xchg
out
adc
jmp
insl
inc
sub
dec
jp
mov
popf
xchg
xchg
sbb
jmp
xor
push
rolb
add
and
or
aam
mov
mov
bound
adc
sub
sub
pop
mov
testl
out
inc
mov
push
sarl
shrl
fisubl
lret
add
jno
popa
test
inc
lds
in
std
arpl
jae
push
test
movsb
pop
pop
stos
xchg
stos
jle
gs
add
mov
loop
in
leave
ja
jno
and
inc
mov
mov
xchg
fs
lock
add
pop
xlat
movl
mov
adc
and
xor
ret
adc
add
jno
popa
xchg
push
mov
mov
jb
add
adc
and
xor
ret
adc
add
jno
popa
xchg
push
mov
movsb
aad
inc
shll
aas
ljmp
push
js
xchg
push
ss
mov
xchg
sbb
inc
mov
xchg
cmpsb
pop
mov
and
outsb
push
mull
mov
call
js
in
orb
fwait
xor
xchg
xor
decl
popf
add
enter
je
stos
loope
jno
call
shrl
sub
test
adc
cwtl
inc
faddl
mov
sbb
pop
rorl
out
cwtl
enter
pop
out
insb
xor
cmp
andl
bound
mov
mov
cli
call
popf
lea
mov
or
jecxz
xchg
aas
int
sub
cmp
xor
and
mov
test
mov
xorb
movsb
jno
jecxz
jecxz
mov
jmp
jl
out
mov
es
repnz
mov
test
sbbb
fs
into
add
sbb
pusha
cwtl
js
int
stos
fwait
and
cmp
or
mov
add
and
or
test
in
out
xchg
fistps
mov
mov
sti
jne
sub
lods
cmpsb
mov
repz
xor
lods
cs
push
push
lcall
pop
test
hlt
mov
push
cltd
mov
cmp
arpl
popf
aas
mov
dec
dec
sub
icebp
loop
xchg
adc
scas
or
add
rcl
push
fcoms
xlat
adc
xchg
js
popl
adc
inc
add
pop
adc
andb
lods
scas
testb
sbbl
xor
cmc
add
lret
es
mov
jno
sbb
mov
insb
jl
pusha
jmp
repz
fidivl
add
cli
test
mov
scas
mov
push
in
push
mov
decb
inc
push
push
mov
lret
fsts
mov
lea
sti
in
xor
fidivl
push
inc
jb
les
adc
ljmp
in
stos
jmp
imul
out
cld
mov
hlt
rorb
icebp
inc
sub
fwait
clc
xor
lods
aad
mov
std
divl
stos
fbstp
inc
in
test
dec
xchg
mov
mov
mov
cmc
cltd
bound
call
inc
sbb
jmp
dec
in
test
adcl
fdivrp
dec
mov
and
mov
ja
mov
ret
jns
fcomip
es
jle
mov
inc
andl
mov
lods
dec
hlt
rorl
add
or
adc
cmpsb
adc
xchg
mov
push
scas
push
and
dec
jge
or
stc
xchg
pop
or
test
fidivrs
jg
in
sbb
jne
cmpsb
fistpl
xor
scas
mov
xchg
imul
cmp
push
pop
movsl
jns
cld
shl
mov
popa
movsl
add
shl
in
insl
add
xchg
negl
call
repnz
insl
loope
mov
xchg
fcmovne
add
enter
es
nop
lret
nop
add
imul
lea
cmpsl
fdivrl
push
or
mov
fsubrs
int3
adc
pushf
and
scas
pusha
lods
xor
clc
lea
push
mov
xlat
push
xor
mov
adc
data16
pop
fisttpl
jbe
test
jno
push
or
data16
add
or
std
sahf
repnz
hlt
int3
add
jmp
in
sub
mov
fldl
sub
aas
jo
mov
dec
scas
inc
inc
ss
mov
divb
ds
pop
add
fnsave
sbb
mov
mov
jecxz
or
jae
lds
in
test
fsubrs
mov
call
cmpsl
call
dec
dec
clc
pop
mov
jle
mov
sub
push
in
mov
push
in
dec
repnz
xchg
in
adc
mov
and
jp
and
fwait
sbb
inc
pushf
add
and
fsubrs
lods
lock
cli
push
xchg
push
jmp
cmp
mov
cmc
insb
stos
dec
int
pop
lea
js
int
xor
sti
pop
lods
push
out
scas
imul
pop
popa
push
clc
les
jl
cmpb
xchg
sqrtps
pushf
jb
or
into
or
pusha
stos
sub
lret
ja
dec
push
adc
and
mov
ret
xor
inc
mov
daa
jle
fs
fdivrs
test
xchg
popf
add
sub
or
rcl
xchg
sahf
lods
stos
sbb
dec
btc
ja
mov
add
xchg
sbb
sub
lcall
or
js
and
mulb
std
mov
mov
sbb
data16
cs
pop
pop
jae
fiaddl
xor
ds
mov
mov
aad
cs
outsb
mov
inc
jg
pop
jle
jnp
inc
cmp
fsts
adc
inc
inc
jmp
sti
push
iret
loop
imul
scas
cmp
les
or
jmp
cld
add
sbb
mov
mov
sbb
mov
add
xchg
lret
mov
daa
call
xor
pop
repnz
out
outsb
sahf
sub
jbe
dec
js
sub
pop
xchg
jle,pn
fistpll
inc
daa
pop
add
and
iret
loopne
push
sbb
cmc
mov
pusha
adc
fsubp
xchg
out
sbb
sub
fiaddl
push
dec
dec
pop
inc
adc
xchg
xchg
and
mov
fwait
cli
lock
repnz
in
add
fcomps
les
mov
enter
insb
xlat
ja
xor
pop
aad
inc
jne
push
js
aaa
cmp
inc
and
movsl
sbb
cmp
addb
xlat
cmpsb
push
dec
je
xor
scas
shll
test
mov
jle
gs
jno
fwait
xor
pop
push
popa
mov
inc
cmp
mov
push
jne
jae
arpl
loop
popf
scas
adc
es
inc
or
lods
outsl
ret
or
dec
rclb
xor
mov
xchg
xchg
jge
pop
sbb
cmc
sub
pushf
mov
out
stc
test
xchg
dec
jbe
out
xor
call
stos
xor
loop
rclb
add
pop
adc
xchg
or
aas
dec
jb
cmp
adc
jnp
jno
pop
lock
lahf
aad
movsl
add
arpl
imul
adc
xor
ss
shll
sub
pusha
jnp
push
mov
push
loop
cs
push
sub
cltd
adc
dec
leave
pop
aas
in
push
add
xor
sahf
inc
mov
push
insb
rorb
inc
adc
push
sahf
inc
dec
pop
or
aaa
lods
jns
aaa
jb
push
dec
cmp
add
mov
je
dec
mov
ret
inc
push
xchg
add
lahf
jmp
scas
mov
jo
dec
cwtl
dec
and
jmp
insl
mov
fidivrs
mov
out
movsb
sub
cmc
xor
push
inc
call
gs
adc
leave
ss
or
adc
mov
jb
fwait
repnz
xchg
gs
dec
enter
mov
mov
mov
in
pop
sub
add
adc
ja
xchg
push
test
push
xchg
imul
cmpsl
lahf
add
jb
xchg
mov
movsl
sbb
inc
sbb
daa
fdivl
jno
mov
in
add
adc
pushf
lret
and
addr16
dec
dec
daa
jns
mov
das
jnp
inc
in
or
cmp
inc
out
jmp
ret
dec
mov
divb
mov
es
add
sub
lahf
dec
jns
shl
pop
jg
insl
jmp
arpl
mov
pop
out
xchg
jnp
or
and
sahf
addr16
pop
xor
fidivrl
xor
dec
mov
call
push
leave
outsl
lods
mov
xor
mov
jno
pop
test
dec
cmpl
push
andl
lods
cmp
loop
leave
mov
loop
aad
lods
fcomps
cli
in
imul
fildl
pop
push
cmpb
stc
pop
test
adc
xlat
popa
mov
clc
lods
orl
jl
insb
leave
fsubs
mov
leave
sbb
fsubs
leave
rolb
and
jg
pusha
jb
or
jbe
or
add
mov
push
cli
into
cmp
lods
rcrl
int3
in
mov
lret
xor
sub
mov
outsl
pop
adc
js
int3
xchg
or
add
in
and
out
cs
inc
xchg
leave
or
cs
pop
jmp
adc
dec
arpl
or
ds
in
xchg
nop
xchg
les
xor
stos
add
jo
lret
xchg
in
dec
and
jge
mov
les
add
xlat
inc
sahf
out
mov
push
pop
stos
and
outsb
xorb
mov
bound
add
push
jecxz
push
in
movsl
stos
icebp
jne
cmp
sbbl
jno
ja
push
jmp
das
cmp
jle
xchg
and
out
les
fdivp
iret
dec
pop
or
jmp
adc
jle
lahf
sbb
mov
dec
mov
fstl
xor
andl
mov
int3
movsl
jo
rcrl
cmp
cmp
dec
add
stos
jne
xlat
outsl
push
push
loop
pop
jb
lcall
add
and
xor
repz
lds
mov
sarb
pop
jae
scas
sub
mov
daa
jmp
mov
pop
cmp
cmp
xor
aam
mov
inc
jnp
incl
ss
int
mov
add
in
adc
dec
dec
or
add
repnz
lcall
jb
push
jecxz
sbb
sub
es
mov
mov
sbb
ljmp
inc
add
sti
xor
ror
mov
dec
jns
mov
hlt
push
aas
lds
sub
in
stos
jl
cmc
mov
lods
and
jmp
fstps
pop
fildl
dec
jg
in
repnz
subb
lods
mov
cmp
xor
lock
sbb
mov
lea
enter
xchg
in
iret
ficoms
xchg
sub
cmc
sbb
out
or
or
jbe
es
adc
and
in
inc
pushf
cmpsl
xor
les
jnp
dec
xchg
imul
cmp
aad
sbb
fisubrs
or
rcr
mov
add
iret
loop
mov
pop
xchg
mov
pop
sbb
push
add
xor
or
adc
xchg
xchg
and
shrl
in
lock
adc
cmpsb
adcb
adc
xor
insb
std
clc
mov
jae
ffreep
test
inc
test
repnz
mov
mov
xor
es
add
and
ds
push
xchg
insl
add
mov
fistl
lcall
ss
int3
filds
pop
js
cmp
notb
sahf
mov
push
jnp
stc
lahf
adc
mov
dec
and
xchg
ret
fiadds
sub
xchg
js
testb
xor
add
dec
adc
push
enter
in
pushf
mov
bound
leave
mov
out
adc
push
int
jecxz
test
loope
mov
frstor
fbld
adc
pop
jae
push
insb
push
cmpsb
xchg
mov
xor
jnp
mov
fiadds
xchg
bnd
mov
je
push
and
or
push
adc
js
xchg
aas
in
enter
cli
cmp
das
shll
fldl
pop
cmp
push
sti
jle
jnp
inc
push
push
adc
pushf
sub
xchg
decl
xorl
jge
xchg
inc
mov
movsl
dec
cmc
das
jp
and
mov
cltd
jmp
pushf
mov
loope
mov
outsb
or
stos
mov
xlat
adc
testl
cs
adc
clc
mov
ret
fidivrl
stc
mov
mov
shlb
or
inc
inc
insl
jns
fistpll
inc
pop
lock
mov
ja
arpl
xchg
jnp
dec
and
fdivrl
jecxz
cmp
loop
iret
xchg
stos
shl
xlat
es
out
push
mov
js
mov
shll
repz
xor
mov
mov
fmuls
stc
jns
aaa
test
dec
lea
and
insl
sahf
in
inc
and
mov
xchg
add
ss
xchg
xlat
lcall
outsb
sbb
push
jg
sbb
scas
sub
xchg
jo
mov
inc
jl
jns
add
mov
mov
mov
add
outsl
sti
adcl
repz
sar
ficompl
mov
add
outsl
jle
jno
jmp
sbb
mov
lmsw
mov
pop
outsb
mov
mov
loopne
lds
dec
lds
cmpsb
mov
push
mov
leave
leave
imul
pop
loopne
les
jae
jecxz
ret
cmp
test
ret
sbb
jl
rcrl
test
sub
jbe
xor
aas
dec
inc
xchg
stos
mov
mov
xchg
shrd
inc
push
inc
fdivrs
or
push
andl
lock
push
mov
test
and
test
mov
std
stos
mov
shll
cltd
sub
mov
dec
jl
loopne
jne
rclb
dec
xor
sti
xor
push
out
or
mov
sub
cld
js
push
test
daa
pop
and
adc
inc
movsb
mov
addl
xor
movsb
ret
cmp
and
adc
fs
dec
je
ret
icebp
add
mov
cltd
mov
push
pop
loop
out
mov
xor
jle
out
add
js
fucompp
mov
push
xchg
gs
cmpsb
push
cli
jns
enter
pop
cmp
aas
jg
pop
leave
loopne
cli
int3
lods
cmp
and
pop
mov
loop
loope
lcall
adc
lcall
push
mov
cmp
or
pop
or
jbe
and
fwait
mov
sub
outsb
mov
and
add
mov
dec
jae
sub
aas
lock
scas
shrl
inc
mov
je
push
repnz
mov
cld
in
dec
adc
mov
inc
cwtl
cmp
repz
out
rolb
add
aam
lods
mov
inc
push
mov
cli
loop
pop
sub
pop
jl
int3
pop
les
out
test
cmp
pop
imul
push
pop
cmpsl
xchg
xchg
inc
les
mov
lcall
mov
sbb
fldl
inc
fwait
push
pop
dec
jecxz
add
jecxz
push
sub
ljmp
mov
inc
jae
inc
fsubrp
gs
mov
push
repnz
sbb
and
inc
pop
outsb
dec
mov
movsl
adc
je
mov
cmp
sti
cmpsl
push
iret
jns
dec
popf
or
add
bound
ds
fcoml
pop
mov
int3
enter
adc
in
and
cld
leave
shlb
pop
js
or
dec
mov
jbe
fisubrs
cmp
into
sub
inc
mov
or
in
insl
js
mov
hlt
lahf
mov
js
dec
add
jne
push
fisubs
inc
subb
dec
insb
cmpsb
int
loopne
es
xlat
or
outsb
xchg
adc
lret
out
sub
inc
int3
mov
aam
roll
dec
ja
push
mov
fidivl
int3
add
jmp
adc
jnp
pusha
ja
out
push
and
enter
into
push
and
jmp
cld
paddw
icebp
push
mov
adc
lods
enter
adc
dec
aas
cmp
cs
add
int
sbb
add
std
test
mov
hlt
adc
cmpsl
or
ret
addb
jecxz
stos
cltd
or
push
test
pop
fsubp
ret
test
inc
cmp
mov
xchg
std
fsubrs
pop
aam
test
shrb
jecxz
mov
dec
popf
xor
xchg
push
aam
inc
mov
shrl
push
sub
std
jbe
aam
lret
mov
mov
cwtl
sub
loopne
xchg
push
mov
mov
sbb
dec
jns
push
ja
sbb
pop
pop
add
jecxz
add
inc
rcll
inc
loop
frstor
mov
popf
adc
stos
ret
scas
jg
xchg
lods
adc
and
cld
pop
xchg
mov
cwtl
push
jmp
mov
jmp
inc
fcomip
xor
das
mov
mov
inc
mov
mov
xor
js
fsubr
add
dec
ss
mov
adc
mov
inc
sub
outsb
das
xor
inc
mov
gs
aam
mov
adc
iret
jmp
add
stos
mov
shrb
dec
jmp
pop
xor
or
lcall
adc
clc
sbb
xchg
test
xchg
ljmp
and
push
cs
sub
fcompp
sub
and
add
lods
sub
stc
enter
test
xchg
push
in
xor
and
lcall
popa
jmp
sti
enter
xor
xor
xorl
lea
jbe
adcl
mov
xchg
push
cmpsl
mov
xor
leave
xchg
push
js
and
testb
sbb
xchg
les
xchg
bound
dec
sarl
dec
mov
push
js
cs
push
cli
mov
sub
sub
or
pop
les
aaa
jg
mov
outsl
pop
inc
mov
shlb
or
loop
xor
xchg
add
pop
mov
rolb
xchg
shlb
popa
das
sub
inc
cwtl
pop
adc
jnp
les
dec
sub
lds
or
inc
dec
mov
mov
mov
sbb
cmp
flds
in
movsb
cmp
add
push
cmc
mov
mov
jecxz
psubusw
pop
push
or
add
push
hlt
mov
xor
and
jmp
add
popf
cmp
jno
sub
xchg
fwait
lret
arpl
push
jge
inc
test
adc
aam
mov
add
inc
mov
add
jo
aas
cld
data16
jecxz
negl
dec
push
fs
vmovups
mov
jne
xor
mov
cmpsb
pop
cwtl
push
iret
ds
popf
dec
inc
dec
and
and
add
xchg
and
inc
inc
dec
addr16
xchg
int
popf
mov
test
sbb
dec
mov
leave
mov
repz
scas
dec
out
push
cmp
movsb
add
aaa
push
push
fs
lret
mov
jg
lret
push
mov
dec
fstps
jbe
movsb
iret
mov
in
xor
movsl
int
ds
push
jae
jbe
push
mov
or
sbbl
fucom
sub
and
xor
sub
xor
cmp
mov
sahf
std
negb
unpcklps
and
xchg
icebp
pop
adc
push
xchg
clc
jge
js
shrl
xlat
out
sub
movsl
mov
ret
cvtdq2ps
cmc
enter
nop
stos
pop
jnp
jo
add
mov
lret
cmpl
add
fstl
popa
mov
idivb
push
arpl
clc
push
sbb
add
shl
leave
inc
sub
out
cmc
pop
in
push
xchg
je
or
fwait
dec
scas
jnp
push
sahf
into
jp
dec
mov
clc
xchg
lods
jmp
cli
cltd
mov
mov
push
in
adc
pop
scas
fstpt
jg
xor
push
in
pop
pushf
mov
or
cmpsb
pop
loop
shll
mov
cmp
rorb
and
jno
clc
ret
add
mov
aas
aad
mov
lea
shr
pushf
pop
pop
sbb
leave
sbb
add
ja
push
lods
mov
push
mov
mov
mov
clc
out
dec
dec
xor
mov
loop
jae
sti
sti
lcall
sarl
cmp
adc
mov
jmp
pop
dec
in
movsb
lcall
push
sbb
insb
lods
sub
push
sarb
iret
aam
xchg
stc
inc
popf
adc
outsl
nop
int3
jbe
adc
ret
shll
out
pop
repz
cmpsl
cmp
fcoms
scas
sbb
mov
sbb
cmpsl
inc
dec
xchg
cmp
push
adcl
jne
mov
lds
jb
adc
cmp
lea
adc
and
xor
ret
adc
add
jno
popa
xchg
push
mov
mov
jb
add
adc
and
xor
ret
adc
add
jno
popa
xchg
push
mov
mov
jb
add
adc
and
xor
ret
adc
add
jno
popa
xchg
push
mov
mov
jb
add
adc
and
xor
ret
mov
or
insl
scas
pop
mov
imul
push
filds
cmp
jmp
and
adc
rcrb
mov
sbb
mov
pop
leave
and
adc
fcomps
dec
mov
sbb
jmp
and
pop
pop
jmp
mov
cmpsb
sbb
mov
inc
ret
push
or
leave
mov
dec
sub
and
xchg
and
das
psubsw
mov
add
push
mov
int3
and
leave
out
fcomps
and
xor
xor
or
in
add
push
js
fnsave
mov
adc
loope
loopne
or
mov
jg
xchg
imul
and
jne
scas
cltd
xor
data16
cltd
jge
dec
fdivl
mov
cmp
mov
mov
inc
mov
push
jmp
add
out
adc
pop
dec
mov
jae
cwtl
jmp
cmp
lods
arpl
lea
mov
jns
imul
cmp
or
push
leave
cmp
adc
mov
xchg
imul
push
nop
pop
pusha
pushf
sbb
xor
push
fidivl
jge
jns
imul
mov
subb
and
adc
jbe
je
test
pushf
cmp
mov
sbbb
or
jo
inc
fsts
and
adc
rcrb
mov
sbb
jmp
and
adc
jg
mov
xchg
andb
inc
sbb
mov
inc
dec
or
dec
lods
dec
out
jle
leave
add
pop
lcall
mov
mov
adc
mov
push
loope
dec
pop
add
xchg
in
imul
jmp
mov
xor
xor
dec
arpl
lcall
pop
stos
pop
xor
adc
aas
jae
icebp
push
inc
out
fnstcw
mov
adc
addr16
or
or
add
mov
decl
inc
cmp
sub
mov
adc
lea
or
mov
je
push
pop
ffree
int3
jge
jbe
aam
or
in
cmp
outsl
mov
xor
push
inc
cwtl
ficompl
into
sub
test
fcomp
or
mov
lods
and
shrb
scas
dec
ja
jb
jnp
out
xor
push
add
push
sti
dec
inc
dec
mov
cmp
and
in
mov
lcall
add
mov
push
sbb
pop
mov
push
imul
add
js
call
lcall
mov
loop
xchg
add
inc
push
loopne
or
call
aad
add
push
cs
insb
je,pt
pop
fimull
jno
jp
scas
push
jecxz
mov
lods
shll
fstl
in
mov
jg
xchg
movsb
scas
mov
shl
fcoml
ss
push
sbb
pop
cli
cli
frstor
call
rclb
cmp
outsb
xchg
xor
shrb
mov
lret
xor
movsb
mov
cmp
call
jmp
mov
hlt
ret
adc
inc
push
aas
test
in
repz
pop
leave
cld
dec
cmp
lock
cmp
and
hlt
je
ljmp
mov
loop
cwtl
subb
fcompl
push
mov
stc
mov
adc
scas
aad
and
mov
pop
sbb
xchg
xchg
mov
push
test
aaa
lods
loope
pop
adc
test
or
push
jecxz
pusha
ret
add
cli
jp
ret
ljmp
xorb
imul
lcall
mov
enter
lods
stos
jmp
add
jmp
pop
cmp
int
and
icebp
cmp
pop
mov
push
ds
arpl
xorl
xchg
sarb
fisubs
test
pop
nop
push
out
adc
mov
addr16
pop
cld
fsubs
or
jo
pop
sub
push
loop
jge
jo
pop
xorl
xchg
movntps
cld
cmc
or
data16
xor
test
test
push
arpl
outsl
push
in
mov
outsb
out
and
dec
xor
pop
or
inc
fildl
faddl
mov
sbb
xchg
stos
les
sub
imul
scas
out
and
imull
lds
mov
adc
addl
test
in
cmp
pop
inc
sub
ficoms
fsts
sub
cmp
push
loopne
je
out
sub
shl
xchg
xchg
icebp
or
dec
mov
and
push
test
sub
push
mov
imul
iret
pop
sti
mov
jl
cmp
shrl
add
cld
fwait
jae
data16
push
mov
cmc
inc
aad
add
ret
add
ret
in
addr16
jg
mov
fs
mov
cwtl
out
into
mov
notb
and
mov
pop
dec
sub
mov
sub
les
sub
mov
repz
dec
rdpmc
add
inc
lahf
test
into
xlat
mov
xchg
enter
mov
inc
mov
jo
or
mov
cmp
repz
stc
loope
aaa
mov
xor
mov
and
mov
push
call
xor
sub
cli
adc
daa
mul
adc
push
dec
das
mov
outsb
cli
push
sti
std
pop
aas
cwtl
sahf
adc
sub
aad
in
mov
ljmp
arpl
pushf
mov
iret
push
xor
adc
mov
push
dec
pop
mov
sbb
sbb
jg
push
cmpsb
test
mov
add
or
xchg
jmp
inc
push
dec
jo
push
sbb
and
mov
xchg
push
jae
repz
mov
push
and
in
xchg
mov
mov
mov
xor
pop
jmp
dec
fcmovb
lcall
add
int
adc
xchg
mov
mov
add
push
jle
arpl
pusha
in
push
hlt
cmc
inc
outsb
pop
das
outsl
cmpsb
sbb
xchg
pop
lods
insl
js
test
popa
mulb
or
popf
dec
cmp
mov
jg
lret
cmp
movsb
daa
movsb
mov
ja
inc
mov
in
push
push
xchg
xchg
pop
rcll
xchg
std
and
xor
enter
cmp
sbb
or
push
mov
sarl
bound
loope
std
xor
inc
orb
sti
cmp
ss
lds
nop
fstpl
ret
lods
std
mov
out
cli
jnp
and
adc
in
xor
sbb
insb
xchg
int
pusha
and
pusha
jnp
add
lods
jmp
dec
in
mov
arpl
scas
pop
aam
dec
push
lret
jp
cli
in
iret
sub
pusha
xchg
xchg
mov
jno
mov
adc
mov
xor
inc
je
and
dec
loopne
insb
and
ret
shlb
jno
inc
adc
sub
ss
xchg
or
push
jmp
xor
mov
fwait
dec
pop
cli
cmpsb
add
inc
cs
push
mov
or
mov
jmp
andb
push
sarl
and
mov
imul
ds
xor
mov
sub
gs
jecxz
leave
xor
mov
loope
or
mov
inc
sbb
cs
mov
mov
add
mov
fstpl
sbbl
fs
int3
movsl
inc
add
push
gs
cwtl
lds
pop
pop
gs
or
mov
pop
jae
pop
add
sbb
mov
jmp
sbb
inc
mov
inc
es
add
gs
push
push
xchg
ror
les
enter
rorb
int3
inc
push
and
imul
inc
std
push
mov
and
les
jns
jl
pusha
dec
xchg
sub
push
test
adc
mov
pop
mov
add
mov
aad
bound
sub
pop
insl
imul
or
sti
mov
ret
inc
rcll
js
loopne
jge
cmpl
int
sub
dec
mov
pop
mov
inc
dec
data16
jbe
inc
popf
stc
and
mov
mov
mov
cmp
xchg
inc
popl
mov
js
cltd
cmp
fisttpll
push
mov
inc
add
mov
cmp
jg
or
rclb
cld
cltd
test
push
fwait
add
jle
pushf
fidivrl
and
mov
mov
cmpsb
sbb
data16
ljmp
and
adc
mov
out
lret
imul
addb
pop
add
test
enter
xor
aad
sbb
stc
sub
sub
jbe
ja
dec
jecxz
mov
es
outsb
inc
movsb
mov
adc
imul
imul
dec
and
cmp
inc
xchg
jecxz
insl
rcl
dec
mov
aam
stos
cli
test
xchg
lock
mov
sub
lds
mov
test
imul
mov
and
or
mov
xlat
ss
xor
mov
fs
test
aad
std
mov
hlt
mov
push
dec
lock
out
jns
ss
repnz
mov
sti
xor
push
mov
insl
mov
cmpsb
mov
pop
pop
mov
dec
js
or
cmpsb
out
stos
xchg
mov
lret
sbb
or
pop
xor
repnz
in
adc
pop
mov
mov
leave
daa
mov
fisttpl
ss
into
adc
sti
xchg
adc
sub
ret
sbb
cmp
lahf
popf
mov
fcoml
mov
xchg
push
add
testl
in
popa
in
bound
and
add
mov
imul
test
mov
sub
mov
rcll
fst
inc
jae
and
in
dec
xchg
inc
push
ljmp
aas
fdivr
add
jecxz
cmp
setne
ljmp
fucom
mov
and
push
aaa
xchg
stos
aam
pop
test
and
inc
test
inc
lret
lods
iret
dec
dec
sub
icebp
hlt
mov
sbbl
dec
push
cmpsl
int3
cmp
xor
stc
xor
pop
lds
movsl
in
cmp
jl
notb
imul
enter
inc
out
dec
repnz
add
sarl
test
push
mov
neg
or
add
push
out
in
aaa
pop
fs
mov
pop
clc
das
leave
pop
xor
pushf
xor
jae
inc
es
or
push
or
jecxz
mov
pop
not
pop
sti
adc
mov
push
repz
sti
add
pusha
popa
xchg
mov
insb
rclb
mov
jge
mov
inc
mov
shrb
mov
lret
dec
fiaddl
aam
mov
lahf
mov
mov
loopne
imul
mov
aam
pop
test
ret
or
jecxz
test
cmp
pusha
pop
add
jmp
movsb
mov
mov
mov
or
hlt
jle
push
xor
or
sub
and
pop
adc
or
gs
mov
fsub
pop
nop
in
adc
mov
sub
push
mov
leave
adc
push
sarb
and
clc
in
cmp
mov
and
imul
ja
popf
mov
cli
fldcw
pop
icebp
ds
push
push
xor
xor
pop
cs
sbb
lea
divb
jl
call
add
xchg
xchg
sahf
pmaxsw
lods
sahf
arpl
ljmp
mov
xchg
std
inc
bound
xchg
add
mov
popf
dec
sub
pop
sbb
push
lods
fs
ss
push
push
jecxz
fists
std
xchg
lods
dec
lock
loope
cmp
push
push
mov
mov
mov
cli
push
xchg
cwtl
xchg
cmp
xchg
dec
sub
ret
sbb
rcrb
mov
dec
sub
and
fstl
pop
add
aaa
inc
cwtl
stos
ret
pop
add
xchg
outsb
inc
sbb
and
stos
sti
mov
sub
mov
enter
test
push
jecxz
sbb
sub
outsl
repnz
xor
xchg
mov
outsb
jg
je
test
outsb
xchg
push
pop
and
test
and
cwtl
push
dec
dec
add
xorl
mov
pop
sarl
pushl
dec
xchg
xchg
loop
xor
pusha
loop
stos
shlb
ret
xchg
dec
cmp
sub
push
popa
pop
push
movsb
jge
test
insl
jle
rolb
mov
push
test
cmpsb
js
jnp
push
punpcklwd
test
filds
dec
jns
push
jnp
js
adc
jnp
enter
aaa
stos
repnz
sahf
aaa
inc
xchg
pusha
mov
cs
and
cmp
pop
mov
pop
in
cmp
testb
adc
jnp
jle
pop
call
jb
inc
icebp
iret
cmp
xchg
cmpl
fs
addr16
dec
fsubl
push
xchg
popf
mov
sub
cwtl
jl
mull
dec
jg
lahf
xor
jmp
imul
mov
popl
push
dec
rep
dec
mov
adc
sbb
jb
bswap
adc
and
xchg
mov
inc
ljmp
mov
sarb
xchg
cmpsl
dec
adc
ljmp
push
lods
ret
enter
dec
or
std
pop
push
adc
stos
dec
daa
cmp
popl
or
pop
dec
jmp
mov
push
lock
dec
and
jge
fiaddl
add
jo
and
mov
vmovaps
bswap
cmp
roll
daa
sbb
or
add
stos
gs
cmp
add
jp
test
xchg
cmp
mov
cmc
add
push
ss
jmp
cmpsb
fidivs
push
idivb
test
push
aas
movsb
adc
cld
xor
and
cmpl
mov
out
sub
mov
and
pop
xchg
push
mov
or
enter
xchg
lret
loop
lahf
aam
test
dec
fwait
mov
push
xchg
incl
mov
loop
pop
pushf
cmpsb
adc
into
in
add
repz
cmp
mov
add
push
popa
inc
movsl
mov
and
imul
add
mov
fs
hlt
sub
sbb
jno
les
pop
jae
out
dec
or
inc
loope
push
imul
jmp
aad
movl
add
sub
mov
jae
mov
push
and
pop
pop
out
cltd
fucomip
movsl
test
mov
cltd
xchg
xchg
insl
pop
scas
sub
and
mulb
pop
xchg
aam
jle
mov
inc
fxch
jbe
lcall
adc
addr16
pop
daa
xlat
sbb
mov
in
jmp
hlt
cmp
lret
out
mov
mov
popf
adc
cmp
cmp
push
repz
fisubl
jbe
push
out
mov
dec
dec
sti
jg
mov
mulb
pop
inc
add
dec
dec
or
add
scas
sbb
dec
sub
or
movsl
mov
pop
adc
and
mov
push
xor
movsb
testb
inc
lods
mov
fcompl
push
mov
js
int3
push
pop
aaa
bound
test
mov
pop
mov
loopne
cs
sub
push
loope
sbb
iret
xchg
lahf
adc
add
lds
or
xor
jo
xchg
lahf
sahf
call
loop
pushf
cmp
sub
in
aas
mov
mov
push
xorl
test
or
cld
daa
mov
mov
jo
cmp
and
loop
mov
dec
das
unpcklps
pop
pop
or
fs
pop
mov
cs
and
xor
mov
in
lods
xchg
xorl
or
fistpl
cmpsl
cwtl
push
mov
test
cmp
test
ds
leave
and
mov
and
cld
jne
ret
fdivrl
lock
jmp
mov
ret
add
dec
pop
mov
mov
push
daa
lea
xchg
dec
adc
shll
jo
xor
sahf
int3
fcomip
add
addl
jno
fsubrs
fdivs
int
mov
jecxz
sub
and
mov
push
inc
pop
mov
stos
xor
clc
dec
pop
test
or
pop
jle
repnz
add
xorb
and
add
sbb
push
lock
dec
clc
ja
lods
les
cmp
inc
out
jns
popa
pop
rcrb
in
xchg
add
dec
orb
daa
rorb
push
imul
pop
sub
lds
pushf
sbb
sbb
ror
jg
stos
adc
mov
call
enter
enter
jp
sbb
add
out
xchg
sub
and
lea
daa
scas
pop
out
cmp
popf
repnz
and
push
cmpsb
lock
mov
jmp
inc
jmp
jge
addb
push
lds
pop
scas
or
sbb
adc
inc
mov
pop
inc
push
mov
mov
fwait
out
and
das
mov
outsb
lret
xchg
out
out
shlb
mov
sbb
adc
sub
fisttps
loop
mov
jo
push
test
cmp
cs
xchg
sub
and
jns
ja
rclb
xor
subl
or
sarl
xchg
or
sub
jo
mov
jmp
mov
sbb
dec
clc
addr16
xchg
dec
orb
sub
pop
mov
lcall
or
insb
pop
cld
imul
out
shr
insb
lahf
pop
inc
and
push
ljmp
or
xor
or
mov
push
loopne
pop
movsb
sub
addl
jne
fnsave
popa
nop
or
xchg
in
stos
addr16
lcall
fcmovne
scas
cltd
pop
xchg
jnp
fdivrs
mov
pop
subb
into
jo
inc
fnstenv
arpl
lret
arpl
xchg
push
ficomps
test
mov
in
lahf
out
fbld
push
cmp
xor
cwtl
lea
sub
pop
test
mov
scas
outsb
cltd
or
mov
mov
int
push
arpl
push
pop
mov
jp
divb
xchg
push
mov
mov
sub
pushf
cmp
cmpsb
sbb
push
pop
pop
sub
scas
mov
xor
push
test
jl
xchg
jae
and
out
decb
hlt
sbb
popf
cli
mov
mov
xchg
outsb
inc
in
cmp
lds
fldl
adc
imul
lahf
pop
adc
cmp
and
or
les
insl
or
sbb
mov
cs
adc
in
or
loope
call
testb
fiadds
es
int3
shrb
sbb
dec
jb
xor
cmp
scas
jno
popf
in
test
jno
adc
movsb
sbb
popa
int
or
pop
lret
sbb
jae
aad
or
test
fisubl
sub
mov
clc
das
push
movsb
lock
mov
cvtpi2ps
push
pop
jnp,pt
imul
arpl
int3
or
and
and
roll
into
add
and
ret
cmp
int
popf
dec
xor
cltd
mov
and
aaa
out
jo
cwtl
xchg
daa
mov
jnp
push
or
jo
xchg
or
nop
cmp
std
xor
jae
adc
test
adc
insl
pop
out
call
lods
add
adc
aad
insb
jno
jns
or
and
push
in
push
std
call
push
push
lret
dec
and
dec
mov
sbb
lods
lea
cltd
call
jg
and
lds
or
mov
lea
ja
mov
cmpsb
fld
pop
mov
mov
jle
sti
ljmp
lret
lcall
inc
lahf
and
fstpt
sarl
jne
inc
test
frstor
mov
out
mov
xor
data16
lahf
stos
ljmp
and
insl
push
jle
cmp
adc
shlb
sarb
dec
cmp
scas
rcl
cwtl
icebp
loop
sbb
pop
dec
std
aas
sub
mov
insb
cltd
add
or
inc
or
sub
fsubs
jb
mov
jne
data16
movsb
dec
std
mov
inc
dec
mov
leave
aaa
and
jp
adc
sub
test
repz
test
hlt
lods
icebp
mov
adc
pop
xchg
ljmp
incb
mov
xor
dec
mov
sub
dec
jne
push
fwait
enter
js
rcr
adc
dec
jnp
adc
mov
mov
mov
lcall
mov
add
xlat
int
add
push
lock
cmp
in
pop
pushf
mov
jge
push
scas
jmp
gs
adc
adc
jo
xor
sub
sbb
and
stc
stc
out
inc
fcomi
and
jb
mov
mov
xchg
pop
mov
cmc
lret
out
imul
jl
sbb
xor
jecxz
dec
aam
out
adc
push
push
cmpsb
in
or
push
scas
loope
mov
push
mov
add
movsb
test
sbb
mov
pop
lcall
mov
iret
xor
in
into
clc
cmp
rcl
jb
stc
pop
fcom
negb
daa
mov
cwtl
mov
pushf
mov
out
xor
sbb
cmp
lock
mov
pop
sbb
xor
cmp
mov
mov
mov
sub
inc
dec
mov
jnp
cmc
negl
imul
mov
sbb
and
or
mov
mov
or
jg
pop
inc
outsl
push
ss
sbb
jb
lret
dec
mov
sbb
jmp
and
adc
rcrb
mov
sbb
jmp
and
adc
rcr
dec
mov
sbb
jmp
and
adc
rcrl
mov
sbb
or
fsts
push
xor
jbe
push
xor
mov
jl
rorb
or
cmp
sub
pop
xor
adc
icebp
mov
mov
mov
sub
dec
jno
inc
adc
inc
pop
pop
sub
jl
insb
add
or
cmp
ret
int3
lea
sbb
pusha
add
dec
xor
dec
or
add
icebp
lods
clc
movsb
fistl
out
pop
das
jb
xchg
cmpsl
add
push
pop
pop
nop
jp
lock
xor
shrl
cwtl
push
icebp
xor
cmp
push
fnstenv
fucom
std
adc
mov
lock
in
lret
sub
push
loop
cltd
mov
aam
pop
cld
repz
int3
mov
shll
adc
xor
icebp
rol
jns
mov
leave
std
push
jle
mov
sub
sarl
imul
jno
inc
subb
dec
in
cltd
movsb
sbb
xchg
das
inc
scas
bound
add
sbb
mov
or
push
divb
jns
adc
or
xor
adc
icebp
mov
mov
mov
mov
out
negl
or
or
mov
ret
lds
in
aaa
dec
and
and
and
push
sub
mov
mov
mov
lods
xchg
nop
lcall
aaa
pop
xor
es
popa
sub
jo
push
cmpsl
mov
mov
cld
xchg
in
sbbl
sub
pop
xor
adc
icebp
mov
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
icebp
dec
ss
repz
nop
sub
lret
mov
jmp
push
fbstp
adc
inc
stos
imul
aad
cmpsl
or
stos
pusha
fucomp
stos
push
mov
jecxz
add
dec
pop
les
scas
push
pushf
xchg
push
out
enter
pop
xor
mov
testb
mov
push
bound
outsl
adc
imul
and
or
clc
add
xor
repnz
pop
icebp
inc
mov
inc
xchg
movsl
inc
es
btcl
aam
push
mov
cmp
pop
in
pop
cld
addl
pop
insl
push
aaa
in
jle
out
dec
mov
faddl
xchg
jl
repz
fidivrs
mov
sbbl
inc
insl
ds
pop
ret
mov
cs
cmp
jbe
lret
out
dec
or
lret
not
je
sbb
out
scas
push
mov
pop
and
xor
out
push
pop
test
push
push
pop
scas
push
aad
pop
cs
sti
shld
push
mov
jecxz
arpl
insl
inc
inc
clc
push
inc
orl
sub
inc
jb
adc
pop
mov
and
adc
ljmp
fs
pop
jae
bound
inc
ja
imul
sbb
shrl
cmp
xchg
cmp
cmp
cmp
xchg
adc
outsl
jbe
dec
add
adc
fdivl
addb
dec
std
fcmovnb
push
push
mov
sbb
and
cmp
fwait
xor
dec
jae
adc
mov
lret
xchg
clc
dec
sub
push
movsb
pushf
jp
mov
pop
loop
insl
shl
sbb
outsl
fdivs
fisttpll
push
jb
loopne
repnz
outsl
bound
sahf
jb
xchg
sbb
stc
and
mov
popa
xchg
push
outsb
test
loop
mov
push
push
mov
sub
cmp
mov
cmp
pusha
sbb
movl
mov
xchg
in
cmpsb
cmpsl
fsubr
adc
jp
and
out
scas
sbb
icebp
mov
push
add
in
popa
sub
add
inc
lds
mov
cld
outsb
clc
push
sahf
aad
mov
clc
mov
ret
dec
scas
inc
call
ret
inc
scas
jmp
in
pop
popf
mov
iret
push
fucomi
add
pop
push
adcb
mov
jmp
xchg
cmpsb
clc
cmp
frndint
stc
and
in
inc
sbb
pop
rorb
negb
mov
and
arpl
mov
sbb
mov
sti
mov
sub
mov
dec
loopne
lcall
shr
sub
cmc
addr16
or
test
lock
inc
fsts
adc
arpl
dec
xor
fildll
mov
mov
inc
dec
aam
arpl
dec
fdivrs
jg
adc
or
add
push
fcmovnb
jmp
xchg
sbb
loopne
inc
sub
das
jle
inc
and
pop
aaa
repz
es
std
push
mov
daa
adc
lds
mov
cmp
jg
lcall
pop
aaa
out
movsl
cmpb
roll
push
sarl
into
inc
cmpl
loope
push
and
lods
test
jbe
adc
xchg
insb
std
xor
xchg
lods
xor
push
notl
mov
mov
nop
subb
dec
std
or
mov
dec
fldt
cli
cmp
push
adc
push
stos
nop
clc
xorb
lods
insb
sbb
cli
or
sbb
mov
ljmp
fsts
inc
mov
pusha
loopne
fists
sbb
mov
mov
push
js
loop
push
pop
push
jecxz
or
sub
mov
cltd
sbb
push
fwait
dec
dec
sbb
push
cmpsl
fisubs
lahf
jb
nop
fsubrs
push
stc
mov
movsl
nop
cltd
into
push
iret
and
mov
stos
loope
fwait
and
lcall
pop
lret
sub
icebp
pop
ja
gs
outsb
scas
add
loopne
in
inc
pop
xchg
xor
call
pusha
xor
aas
sbb
xchg
test
xorl
xor
in
mov
jne
fildl
push
jl
rolb
lret
mov
mov
into
shr
and
mov
inc
ja
sbb
push
mov
lock
jecxz
pop
sub
xchg
mov
inc
mov
push
push
xor
pop
jp
mov
repz
or
xor
xchg
mov
loop
and
cmp
dec
outsl
lds
stos
loop
jecxz
ds
mov
add
sub
adc
out
int3
outsl
shrl
imul
loopne
cmpsb
std
sub
jns
ds
out
xchg
fdivrl
hlt
rcr
hlt
scas
ret
outsl
adc
andl
ret
outsl
sub
aas
jmp
push
adc
mov
pop
jg
add
mov
xchg
fbld
rcrb
loop
fimuls
mov
jbe
and
xchg
and
lcall
lods
jp
repnz
rol
mov
xor
popa
or
insl
or
test
sbb
dec
insl
or
lods
pop
jns
inc
jecxz
inc
in
mov
pop
push
sbb
and
adc
jp
xor
rclb
flds
cmpsb
jmp
push
xchg
push
add
push
mov
dec
dec
stos
ret
js
sbb
jmp
push
and
nop
cmpsl
sub
sub
test
sub
repz
xor
mov
bound
push
shlb
push
fcomps
sbb
rorb
pop
lret
subl
mov
f2xm1
mov
iret
das
add
mov
in
stos
pop
cmp
out
out
gs
dec
lret
lods
out
dec
push
ret
jae
lods
daa
dec
push
aad
lock
dec
sarb
pusha
daa
mov
fiadds
ljmp
mov
xchg
mov
test
dec
das
sbb
hlt
and
and
and
ret
inc
mov
incb
xor
mov
sbb
and
sub
jo
js
xchg
or
sbb
loope
outsb
push
xchg
addr16
insb
das
rcr
jl
jb
pop
push
xchg
stos
push
jnp
xor
mov
test
data16
jl
adc
mov
ss
push
push
jge
xchg
rclb
or
lcall
addl
push
mov
mov
icebp
dec
mov
mov
scas
lock
mov
pop
push
movsb
xchg
aad
add
cmp
outsb
leave
add
btr
or
fwait
lds
xchg
pop
lahf
repnz
add
xchg
adc
int
adc
addb
pop
enter
lea
fdivp
pop
pusha
push
arpl
inc
mov
sbbl
and
leave
xchg
insb
aas
sbb
lock
dec
cli
dec
cmpsb
cli
lea
xor
push
shrl
inc
es
ss
mov
lret
or
mov
out
add
and
lods
testl
inc
jo
aad
add
fwait
data16
cmpsb
loope
add
dec
pop
cwtl
cmc
lods
in
mov
mov
xor
pop
dec
cmpsl
repz
xor
cmp
aad
rcrb
xchg
pop
mov
int
and
shll
and
sbb
jbe
outsb
jnp
adc
dec
es
scas
int3
cmp
in
mov
es
into
stos
outsb
and
push
inc
leave
and
sub
popf
xchg
imul
jle
push
scas
mov
pop
lods
adc
in
mov
bound
dec
mov
or
jmp
or
adc
hlt
pop
adc
adc
data16
dec
fldcw
add
out
jmp
mov
pop
enter
mov
add
outsl
dec
or
ljmp
movl
xor
and
push
jmp
insl
cli
enter
test
sub
inc
fistl
or
xchg
xchg
mov
dec
lret
ficomps
inc
scas
pop
push
sahf
jecxz
dec
push
mov
jne
inc
xchg
cld
sub
in
ret
test
aaa
or
and
push
sbb
js
je
dec
aad
jo
add
aaa
out
fmull
xchg
add
hlt
add
sbb
mov
pop
mov
adcb
fmuls
and
xor
cwtl
xchg
out
pop
pop
std
insb
cwtl
xchg
jbe
bound
daa
jl
in
sub
mov
insl
fistpl
sub
or
pop
mov
sarl
cmpsl
loopne
mov
in
dec
das
lds
fwait
inc
lods
push
push
cmp
inc
pop
push
not
mov
in
add
jg
sbb
push
lea
movsl
inc
dec
push
add
pop
iret
insl
push
pop
shlb
rorb
pop
lret
mov
comiss
and
jle
es
popa
in
adc
xchg
and
pop
enter
ja
clc
and
sub
ret
and
sti
sbb
xor
test
mov
psubusw
into
xlat
leave
es
xor
push
push
push
cmp
lcall
sahf
in
xlat
std
sbb
das
sbb
dec
fcomp
je
hlt
xor
ficomps
aaa
fs
cmp
cmp
aas
jnp
xchg
in
mov
xor
sub
mov
repnz
cltd
jg
pop
mov
out
xchg
in
aaa
and
scas
mov
xor
push
rorb
mov
jmp
fiadds
and
mov
nop
inc
xchg
inc
lds
jmp
outsb
dec
adc
adc
out
mov
sbb
imul
sbbb
rclb
mov
int3
xlat
pop
cmp
and
inc
pop
lock
ret
fcompl
sbb
mov
outsl
push
jbe
fs
ljmp
cs
dec
rorl
stc
pop
cmp
sub
xor
movsl
or
ja
ja
dec
or
cmp
ja
dec
and
and
les
push
lock
imul
adc
xchg
ja
in
mov
add
gs
sbb
ja
mov
sti
out
jg
add
jp
pop
add
add
xor
mov
adc
ss
fcomi
into
inc
jb
and
jne
test
xchg
and
lds
adc
inc
push
mov
mov
std
lret
pop
mov
cli
sbb
pop
add
insb
mov
pop
incb
inc
lret
std
cmpsb
ljmp
lods
sbbl
jae
ja
push
jp
xor
and
scas
dec
lea
movsb
mov
shr
pushf
mov
loopne
or
iret
out
xlat
jmp
sbb
cmp
fldl
add
ljmp
dec
mov
into
movsb
in
add
fdivr
adc
cs
std
ret
mov
xchg
je
mov
xchg
loope
mov
repnz
push
push
sbb
divl
push
insl
push
jbe
inc
dec
xchg
out
les
rol
dec
imul
pop
cld
xlat
popf
fsubrl
sar
fsub
add
test
test
jle
inc
jns
out
jns
aaa
lahf
dec
mov
mov
jns
push
jno
jb
js
stos
adc
int
jmp
or
mov
std
shll
loop
push
and
mov
test
sar
in
or
mov
ror
cli
ret
addr16
idivl
add
inc
insl
dec
xor
mov
pop
xchg
inc
fistl
fisubl
xor
ficompl
jnp
xchg
out
push
js
push
pop
imul
and
popf
int3
loopne
mov
std
fstps
hlt
clc
and
mov
repz
popf
cmc
adc
out
adc
aad
das
xchg
mov
repz
or
popf
aad
jp
mov
push
jns
jg
stc
cmpsb
loopne
dec
les
push
pushf
mov
mov
pop
mov
jmp
lret
in
sbb
rorb
roll
jbe
insb
mov
xor
outsl
dec
jg
lahf
lds
outsl
fdivl
out
fisttps
scas
mov
push
aam
mov
mov
pushf
jbe
mov
mov
stos
scas
stc
inc
lret
xchg
push
bound
scas
xchg
mov
inc
movsb
cmpsl
stos
cmpsl
push
shrl
data16
and
fsts
and
mov
jp
mov
adc
in
mov
push
and
push
sbb
inc
fisubs
push
add
andl
sub
jmp
mov
xchg
adc
xchg
stc
fs
mov
mov
mov
mov
shrb
repz
and
int3
popf
mov
outsb
mov
sbb
pop
fcoml
or
mov
pop
mov
pop
mov
pop
pop
xchg
sub
and
in
mov
jmp
fiaddl
fsub
mov
call
adc
test
bound
or
xchg
or
adc
add
iret
ja
les
and
xchg
test
inc
imul
gs
scas
dec
push
cmpl
mov
test
xchg
icebp
push
mov
pop
repnz
insl
add
fdiv
push
adc
pop
shld
ret
jecxz
cld
mov
ret
dec
jp
fidivl
fists
jns
int
dec
aad
adc
in
sbb
xchg
mov
ds
xlat
push
das
mov
mov
fistl
fsubl
int3
mov
or
cmp
icebp
ljmp
adc
jge
add
lcall
aam
lock
and
xor
xor
cwtl
cmp
push
adc
loopne
cmc
in
jnp
xor
js
xor
dec
in
mov
fistpll
push
jo,pn
popa
cmp
push
sbb
xchg
mov
sub
ror
call
test
push
adc
popa
add
xor
or
inc
pop
dec
xor
jno
push
fdivrs
and
arpl
shl
movsl
int3
fisubrl
imul
lods
lock
adc
stos
and
test
adc
insl
icebp
addl
les
outsl
data16
lcall
iret
sbb
pushf
dec
sub
inc
pop
cmp
stc
xor
jmp
adc
adc
movsb
repnz
jbe
lret
iret
cmp
xchg
loope
les
pop
cli
push
repz
into
pop
or
mov
jecxz
xchg
jb
ret
mov
lea
add
es
ss
idivl
test
pop
data16
cld
lret
and
gs
lcall
or
mov
inc
push
pop
lods
in
stc
mov
iret
arpl
je
dec
int
aaa
imul
addr16
outsb
sbb
or
jb
hlt
icebp
cmp
sahf
cmovle
xchg
and
and
xchg
jb
and
sub
inc
sbb
jae
xor
sub
push
mov
mov
outsl
xchg
cwtl
es
lds
lock
pusha
adc
mov
testl
mov
in
pop
insb
idivl
sub
add
adc
out
jg
pop
lahf
cmp
in
mov
in
cmp
inc
add
into
cmp
xchg
fsts
adc
hlt
lret
pop
add
mov
test
add
fisttpll
rorb
jge
add
in
adc
rol
xor
jle
jp
pop
push
movsb
push
mov
mov
jo
pushf
lds
push
and
fsubs
or
lretw
pop
test
leave
rcrb
cmp
insb
pop
leave
mov
out
popf
dec
das
xor
xor
push
and
cmp
sahf
xor
cs
dec
push
pop
inc
jmp
lret
inc
mov
in
ret
push
subb
jl
frstor
mov
push
sub
ficoms
and
les
and
pop
les
arpl
mov
sahf
jle
dec
loop
popf
imul
enter
fnstenv
cmp
aad
lods
sti
jge
lods
adc
jp
lret
fildl
jge
mov
lret
aas
fildll
and
imul
mov
pop
add
mov
ljmp
inc
scas
leave
push
push
das
jno
push
es
repz
cwtl
jmp
das
inc
lds
mov
clc
cltd
pop
sahf
lods
lahf
fs
lcall
cmp
es
ficomps
push
lock
std
out
or
out
cmc
add
pop
fs
loopne
mov
and
or
or
jmp
out
dec
imul
mov
movsl
mov
std
cmp
jle
insl
xchg
popa
loope
jbe
or
cli
and
sbb
mov
mov
outsl
lds
dec
into
sub
les
mov
out
cmp
es
iret
rolb
xchg
test
cltd
adc
insl
pop
in
mov
sub
aaa
loopne
fstpt
mov
lods
inc
cmp
cltd
xor
push
jp
xor
ds
mov
scas
xor
jnp
fcoml
and
inc
push
push
or
ret
jmp
sbb
push
cmp
imul
pop
sub
shr
add
ljmp
xchg
mov
lods
repnz
sahf
fs
xchg
pop
and
repz
rorb
mov
xchg
bound
ret
loop
push
mov
jns
test
jecxz
out
out
mov
push
sbb
cli
cli
jnp
flds
xchg
pop
insb
push
out
roll
and
das
jmp
in
movl
mov
xor
leave
push
leave
jns
test
pop
inc
sub
jns
pop
insb
sbb
dec
push
pushf
arpl
imul
ja
and
fidivrl
popf
nop
roll
mov
and
inc
cmp
push
and
fdiv
adc
data16
and
or
and
cmp
fldt
fnstsw
clc
jns
cltd
scas
test
pop
aaa
xchg
add
add
or
fildll
dec
rolb
lea
sbb
pushf
aas
dec
notb
ljmp
ss
leave
dec
mov
loopne
mov
mov
fnstsw
mov
fisubrs
xor
mov
aaa
jns
fidivrl
orb
jge
dec
sbb
test
mov
or
and
stc
leave
stos
das
push
push
test
fnsave
cltd
xchg
lock
into
mov
shrl
mov
dec
sar
xor
ss
add
jmp
cmp
sbb
adc
inc
pop
fcmovne
je
or
sbbb
xor
fimull
push
mov
xor
xchg
xchg
cpuid
cmpsl
jl
dec
sub
inc
fisubl
add
dec
mov
lahf
stos
or
aaa
pop
and
movsl
rclb
fcmovnb
test
sbb
cmc
mov
pop
fwait
movsb
test
add
jl
sti
xor
mov
push
jbe
mov
filds
fsubl
gs
ljmp
and
mov
push
sub
adc
ss
push
adc
cmc
lcall
mov
movsl
or
movb
jmp
push
fidivs
mov
cmp
dec
sub
xchg
lahf
adc
or
xor
or
push
out
bound
push
inc
mov
or
mov
daa
mov
bound
dec
fbld
sbb
movsl
mov
sbb
ret
and
into
rcll
push
pop
stos
jbe
xchg
out
cmp
fs
sbb
inc
push
aaa
into
jnp
mov
les
add
cmp
in
sub
add
dec
inc
stos
hlt
fisttps
ljmp
jb
outsl
cs
mov
js
rcrl
sub
adc
mov
mov
add
fsubrl
inc
inc
xchg
gs
add
xchg
mov
pop
pop
rolb
and
pop
cmp
and
jp
xchg
ss
mov
das
ljmp
cmp
sbb
jp
sub
xchg
sub
or
nop
jbe
bound
add
or
aam
sbb
std
out
aad
addl
push
fwait
sub
fcomp
mov
inc
inc
sbb
sbb
xchg
xchg
loopne
enter
pop
out
aas
push
std
fistl
inc
test
rclb
cmp
fisubrs
mov
aas
aad
fistl
adc
jge
jmp
dec
mov
out
fdivrl
sarb
enter
xor
add
cld
movsb
add
fidivrs
inc
fnsave
dec
jecxz
ljmp
pushf
nop
lret
mov
push
out
sub
push
test
cmp
pop
loope
inc
jo
sub
fcomps
sti
fbld
gs
push
add
clc
jbe
pushf
jl
ja
inc
rdmsr
cmpsb
pop
mov
pop
dec
push
subl
inc
shlb
rorl
mov
loope
mov
int3
mov
sbb
or
cmp
sub
pop
xor
adc
icebp
mov
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
icebp
lods
rcr
enter
in
sbbl
push
sub
xor
js
pop
add
test
fdivl
insb
sbbl
sub
sub
xchg
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jp
push
pop
xchg
dec
test
dec
pop
mov
cli
add
and
mov
push
mov
push
pop
xchg
dec
test
hlt
sub
sbb
or
ficoml
add
push
stos
lcallw
lods
push
pop
mov
cmp
sub
sbb
or
cli
xor
pop
mov
lret
cmp
adc
es
and
icebp
es
cmp
and
fwait
out
and
pop
decb
cmp
push
popf
mov
lds
cmp
lret
outsl
fisubl
adc
cmp
movsb
pop
mov
pop
cmpsl
aas
out
cltd
cli
xor
and
jle
sti
ljmp
add
push
xor
xlat
sbb
mov
outsl
fisubl
mov
loope
stos
mov
pop
mov
xor
xchg
cltd
fmull
adc
mov
mov
lret
roll
rorl
jle
inc
xchg
aad
xchg
lods
pop
sbb
jmp
sti
ljmp
inc
mov
push
pop
lea
cmp
sub
sbb
or
cli
xor
cmp
or
stos
jl
dec
mov
mov
xor
and
cmp
pop
test
or
ficoml
mov
mov
cmp
sub
fisttpll
int
out
jmp
hlt
outsl
stos
bound
mov
push
mov
xor
xor
mov
movsb
xor
sub
sbb
or
cli
xor
and
adc
add
je
fs
movsb
pop
xchg
dec
test
hlt
sub
sbb
or
cli
xor
and
adc
add
je
fs
mov
adc
les
jp
sbb
fisttpl
or
push
ds
cmpsl
dec
sbb
or
icebp
ret
pop
mov
xchg
sub
cmp
mov
enter
mov
in
rcll
sub
sbb
out
adc
enter
nop
adc
mov
mov
or
daa
jg
sbb
push
mov
roll
es
roll
sbb
inc
call
cwtl
ficompl
imull
pop
dec
lret
ret
cmpsl
addr16
sub
and
cli
xor
or
cmp
and
fstps
repz
insl
leave
pop
inc
testb
mov
pop
pop
inc
xor
push
sbbb
mov
shrb
jmp
ror
xchg
mov
xchg
sub
mov
ret
or
xor
and
xor
push
sub
imul
jne
lret
ret
inc
hlt
fstpt
movsl
inc
inc
mov
movsb
cmpsl
insb
stc
jmp
push
inc
push
sub
jge
lds
sub
sbbb
stos
mov
xchg
xchg
fmuls
cmp
fcomp
add
ret
cltd
xchg
add
xchg
mov
scas
inc
push
jmp
or
loop
and
cmp
loope
pop
jbe
push
mov
dec
inc
xor
adc
cltd
fcomps
pop
ret
jecxz
shlb
inc
mov
leave
cmc
mov
and
lods
in
cmp
push
jnp
xor
jnp
dec
mov
shlb
dec
push
lahf
les
les
mov
stc
xchg
adc
insl
mov
in
mov
loope
les
push
mov
and
shrl
adc
adc
ret
jb
scas
adc
cmp
pop
jo
jnp
push
xchg
lahf
add
xchg
lds
insb
jl
outsb
mov
cmp
les
xchg
lahf
dec
mov
in
test
pop
cltd
ss
jp
adc
mov
or
lea
mov
mov
mov
jg
xchg
into
iret
stos
fadds
testb
sbb
test
mov
dec
int
jg
mov
xchg
cmpsl
out
cmpl
scas
jbe
iret
popf
xchg
into
and
or
mov
cmp
dec
lods
in
xchg
cli
sbb
call
aaa
xchg
push
insb
loope
arpl
xlat
xor
imul
jg
lret
mov
xchg
js
leave
fucomi
mov
sub
jg
ret
outsl
mov
loope
pop
fs
add
in
loopne
inc
mov
in
fisttpll
faddl
shrl
cmp
and
jmp
sbb
sub
cmpsb
mov
inc
adc
or
cmp
rorb
dec
je
sbb
jmp
lret
lods
dec
and
cmp
inc
xor
sbb
jnp
mov
cli
adc
mov
sbb
icebp
dec
cmc
andb
pusha
fnstenv
mov
adc
push
loop
inc
loop
sbb
mov
lret
adc
addr16
gs
js
jle
mul
dec
mov
xor
and
loopne
call
jns
xchg
daa
mov
stc
mov
outsb
xchg
out
jl
scas
jle
movsb
xor
nop
or
mov
rol
in
cs
sbb
and
es
mov
adc
lock
push
mov
cs
pop
ficoml
rorb
adc
outsl
add
mov
mov
int
flds
lods
outsl
jge
push
lahf
pop
cmpsb
xor
dec
mov
jnp
call
sbb
icebp
bound
push
lahf
imul
aad
xor
push
jbe
push
cli
aas
scas
int3
stos
push
test
push
xchg
xchg
pop
test
xor
cmp
mov
enter
push
in
inc
pop
mov
cmp
xor
mov
jge
mov
arpl
mov
pusha
lcall
in
ret
inc
lods
sbbl
sub
test
pop
arpl
inc
dec
mov
xchg
stos
mov
inc
add
bound
inc
mov
mov
sbb
add
out
popf
cmp
sbb
and
pop
sub
inc
cltd
test
push
jae
insl
adcb
sub
shrl
xchg
inc
wbinvd
int
fistl
ficomps
pop
inc
fdivr
push
and
sbb
clc
movsl
pop
cmp
in
xchg
adc
out
pusha
in
pusha
xchg
pop
notb
xor
loopne
sub
sahf
cld
or
cmp
ss
xorl
insl
sbb
mov
cmp
pushl
mov
xchg
jge
mov
push
arpl
xlat
push
inc
jecxz
mov
pop
daa
pop
sti
cltd
dec
xor
pop
jmp
into
mov
arpl
lods
dec
adc
in
pusha
nop
push
jg
std
or
xlat
aaa
ds
mov
mov
test
mov
mov
pop
pop
mov
xchg
in
cmpsl
imul
pop
mov
cmp
sti
push
cmp
cmp
jg
mov
inc
inc
js
loop
cmp
das
jnp
add
pushf
in
dec
inc
lret
leave
int3
and
lea
es
jb
lods
xchg
cmp
adc
jne
sahf
sub
xor
and
fdivrs
lahf
scas
mov
ret
and
int
xor
cmp
mov
fsubrl
dec
icebp
mov
loope
icebp
cmp
shlb
in
repnz
adc
mov
insb
ja
push
push
adc
mov
mov
mov
sbb
ljmp
adc
aam
rcrl
dec
pop
pop
sub
adc
fwait
setp
outsl
mov
dec
sbb
sbb
hlt
mov
out
scas
xchg
sahf
cmp
ja
sarl
mov
mov
pop
mov
icebp
scas
loopne
sbb
cltd
xlat
sub
loopne
imul
or
subl
pop
je
sub
lret
xor
xor
mov
push
sarb
shrb
test
push
inc
shl
or
adc
shr
gs
in
mov
inc
mov
out
cwtl
cmp
jp
enter
in
sub
xor
cld
jp
popl
sbb
sbb
clc
xchg
sbb
xor
or
xchg
cmpsb
pop
mov
testb
inc
data16
jbe
push
fs
lret
shll
int3
push
leave
fidivrl
adc
ja
sbb
lret
lcall
sub
pusha
jg
adcl
xchg
ljmp
inc
shl
loope
mov
adc
cltd
mov
loop
xchg
or
add
cmpsl
stos
jae
rorb
jo
pop
rcrb
pop
pcmpeqd
fisttpll
jae
imul
xorl
add
sbbb
inc
mov
mov
jmp
add
xor
sbb
fisttpl
pop
push
add
aas
inc
and
pop
je
or
push
into
repnz
int
arpl
mov
inc
nop
mov
xor
arpl
jmp
ret
fidivs
clc
mov
notb
vpaddsw
daa
lods
into
adc
popl
push
adc
pop
std
idivb
divb
insb
xor
sub
sub
das
imul
xchg
push
dec
push
jge
pushf
ds
aaa
fistps
addr16
or
xor
ljmp
sub
stos
lock
popl
divl
xorl
loopne
icebp
mov
shll
mov
jae
scas
testl
into
sub
subl
lods
pop
adc
push
dec
add
insl
jl
scas
xor
imul
out
push
jnp
les
rclb
repnz
cmpb
xor
out
and
das
mulb
ljmp
xchg
je
ja
jbe
inc
mov
aaa
mov
jbe
inc
pop
lahf
mov
adcb
movsb
jb
pop
aaa
xchg
repnz
pop
lret
adc
mov
imul
mov
arpl
and
pop
fstl
sbb
dec
and
xor
in
jge
stos
inc
xor
loop
push
arpl
into
stos
pushf
int
or
mov
mov
inc
mov
xor
mov
mov
push
lcall
imul
inc
push
shrb
ds
add
imul
or
cwtl
imul
and
lahf
sbb
lret
sbb
xchg
sahf
jp
cwtl
cmpsb
and
mov
sbb
aad
push
adc
mov
adc
mov
dec
mov
lcall
and
fistpl
mov
cwtl
imul
xor
cmp
xor
inc
in
xor
cmp
lea
movsl
lods
cmpsl
lahf
inc
repz
sub
cmp
stc
cli
dec
int3
xor
mov
repz
mov
mov
adc
pop
adc
cmp
imul
nop
arpl
inc
fwait
dec
sbb
sahf
call
pop
stos
or
in
pop
xchg
mov
sub
add
xor
out
dec
popf
out
cmovo
je
andl
inc
add
sahf
push
sub
adc
lahf
mov
adc
popf
sti
mov
push
xor
mov
dec
xchg
fisttps
fistpl
movsl
mov
add
hlt
dec
stc
shll
mov
adc
rol
sub
adc
dec
ucomiss
push
xorb
jecxz
test
int3
shlb
andb
jmp
jl
test
das
int
jo
data16
pop
aas
mov
out
aad
pop
mov
inc
iret
je
jbe
pop
xchg
xchg
lret
inc
pop
xchg
sbb
jne
xor
xchg
push
pop
ljmp
adc
fdivl
push
or
cld
int3
sarb
mov
mov
fcmovnu
std
mov
xchg
insl
shlb
mov
mov
dec
mov
sarb
jle
adc
inc
imul
add
jb
rolb
mov
inc
scas
add
mov
in
and
rdpmc
mov
mov
add
or
aad
mov
stos
mov
or
or
ja
icebp
test
stos
and
jo
pop
add
cli
push
mov
aaa
xchg
fnstcw
in
xor
xor
inc
mov
inc
js
dec
dec
shrl
pop
gs
push
pop
lea
lret
xchg
pop
mov
nop
and
aad
add
fwait
std
in
push
fnstcw
outsb
out
enter
aaa
rol
gs
out
adc
mov
roll
ror
mov
push
cmp
and
adc
push
push
sub
push
fdivl
add
cmp
ss
jb
mov
mov
int
or
cmp
lods
dec
data16
jne
jge
icebp
mov
inc
fwait
dec
pop
dec
dec
mov
mov
sbb
add
adc
pop
mov
inc
inc
or
mov
je
adcl
shl
fnstsw
jo
ret
pop
test
mul
inc
pop
sti
xchg
mov
jg
imul
das
push
iret
shrb
jmp
cld
fcomps
ret
and
int3
xor
mov
lea
mov
and
out
sbb
xor
aaa
adc
jo
cmp
fsub
pop
out
inc
mov
inc
push
push
push
ds
insl
mov
loop
or
fcomi
and
xlat
icebp
popf
adc
push
pusha
pop
sahf
cld
jle
fstpl
xlat
adc
sub
jle
pop
sti
pop
push
lea
lods
neg
es
ficoml
pop
stos
push
ljmp
cmp
incl
ja
add
pop
push
push
gs
arpl
xor
or
gs
rcr
out
rcrl
test
xchg
pop
sahf
xchg
in
jecxz
push
and
add
clc
movsl
es
sbb
jae
lahf
push
inc
js
roll
jmp
nop
pushf
test
rcl
push
push
pop
ret
add
ss
cmp
inc
xlat
jp
or
sub
xchg
add
pop
xor
in
addr16
pusha
pop
pop
sbb
movsl
add
inc
enter
dec
cmp
push
sub
sub
xchg
dec
int3
xor
jns
rorb
out
jg
lods
loop
gs
and
sahf
xchg
pusha
orb
shlb
iret
cmp
xor
cmpb
dec
mov
mov
mov
xor
xor
cwtl
jnp
daa
lcall
test
xor
loop
adc
cs
sahf
pop
jmp
bound
test
adc
jne
xchg
lret
sbb
repz
test
and
std
daa
sti
mov
fisttpl
adc
stos
jl
push
hlt
test
jbe
mov
pop
adc
xor
lods
loop
cmp
cmp
insb
xor
shl
pop
lret
cmp
adcb
imul
lcall
movb
iret
test
mov
nop
sbb
sub
cmc
dec
das
scas
sbb
jle
popa
lea
mov
fisttps
dec
cmpl
nop
jp
mov
dec
adc
mov
dec
xchg
ret
push
lretw
add
popf
sahf
sti
cmpsb
jl
stos
push
lret
and
lret
mov
mov
enter
xor
mov
fnstcw
pop
mov
std
lds
movsb
fcoml
pop
add
call
cmp
rolb
sahf
mov
scas
jecxz
cs
insb
adc
cltd
scas
insb
xchg
mov
adc
arpl
push
bound
not
test
mull
inc
add
stos
lahf
and
fdivrp
jl
sub
cmp
sarb
imulb
push
xchg
mov
sti
leave
popf
adc
fwait
sub
mov
pop
ret
aaa
icebp
pop
xchg
movsb
btc
dec
shl
xor
out
les
std
push
imul
outsl
jae
mov
dec
mov
mov
sub
pop
pop
cmp
xchg
pop
fsubrl
jg
fwait
pop
push
stc
lret
fadds
push
inc
sahf
adc
cli
xor
mov
sti
es
dec
add
loopne
movsl
es
loopne
inc
mov
jae
lcall
xor
cmp
jg
fcoml
push
iret
mov
clc
aad
jo
push
xchg
or
es
mov
sub
cli
sbb
pusha
ltr
je
mov
jne
mul
outsb
mov
idiv
mov
push
nop
pslld
adcb
in
scas
pop
adc
das
les
les
loop
pop
in
mov
jb
and
fwait
jmp
jo
out
leave
pop
imul
xor
xor
and
je
mov
jbe
lret
gs
sti
mov
int3
xor
jge
dec
sub
and
test
add
cmp
rcrb
mov
inc
ficoms
mov
lods
outsl
jns
dec
lods
mov
push
jne
into
dec
push
insb
jne
fwait
pop
hlt
add
aad
in
pop
stos
dec
adc
fld1
inc
push
mov
or
jb
je
push
fsubl
cs
dec
into
dec
jae
ret
mov
mov
lds
into
jle
ret
lret
pop
jecxz
test
cmp
cmp
jle
mov
dec
sub
out
xor
icebp
fiaddl
bound
outsb
les
testl
cmp
aad
cmp
cmc
and
ret
ja
push
pop
xor
jo
mov
ljmp
push
pop
sti
mov
adc
cmc
cmpsl
mov
dec
fcmovne
cmp
jmp
jb
or
jle
insl
jmp
cmp
pop
loop
sub
mov
cld
jbe
add
cmp
call
std
stc
sbb
daa
in
inc
movsb
inc
out
adc
add
pushf
insb
jb
aaa
cmp
in
popf
sub
add
lock
inc
mov
lahf
or
mov
pop
aad
xchg
fimull
ret
cld
nop
cmp
dec
jl
pop
dec
sbb
push
sub
fcompl
pushf
mov
dec
or
inc
stos
gs
adc
pop
scas
inc
scas
pop
xchg
adc
daa
push
cld
xchg
subb
unpckhps
movsb
xchg
movsl
push
stos
mov
aas
mov
fxch
int3
cmp
push
add
adc
das
pop
xor
mov
dec
sub
in
jecxz
cld
jle
outsb
sbb
push
push
in
outsb
pushl
adc
mov
pop
rcrb
out
call
je
fsubl
push
lds
jmp
push
in
hlt
xchg
sbb
mov
push
mov
xchg
dec
lcall
lea
das
ljmp
cmp
int
stos
ror
pop
push
nop
adc
int
push
xor
sbb
aas
cmp
cmp
lahf
push
xchg
or
or
mov
push
cltd
aas
repnz
iret
in
sub
mov
cld
cmp
enter
gs
aaa
outsb
inc
dec
test
dec
movsb
imul
xchg
outsl
inc
push
sbb
lea
popa
and
push
in
cmp
lods
xor
outsb
sbb
mov
orb
mov
adc
jmp
shl
mov
test
cld
xchg
iret
and
shrb
sbbb
and
pop
lds
push
pop
cmp
pusha
pop
jmp
rorl
pop
lret
nop
inc
adc
mov
mov
lahf
xchg
movsb
test
xchg
mov
xchg
push
loope
lods
sbb
xor
jg
movsl
or
fnstsw
imul
push
push
loopne
test
xor
xor
or
dec
cmp
ret
xchg
out
jbe
mov
in
imull
stc
or
leave
fsubl
adc
mov
scas
and
iret
add
jae
cwtl
iret
push
lcall
jmp
insb
shlb
movsl
fisubl
xchg
xchg
insb
add
cmpsb
popa
dec
mov
jge
mov
loop
stc
divl
lods
jge
loop
pop
inc
mov
notl
nop
xchg
sbb
aam
push
data16
sub
ror
sahf
ljmp
cli
adc
arpl
pusha
and
and
dec
movsl
sbb
cli
loopne
ret
int3
insb
jl
ja
cmpsb
xchg
xchg
pop
or
stc
mov
test
out
fucomi
pop
mov
xchg
push
push
mov
and
ss
mov
loope
xor
pop
sahf
jb
push
push
scas
ret
ja
or
add
ss
repnz
fstps
mov
or
inc
pop
fs
inc
xchg
addb
rol
stos
jne
in
movsb
mov
cmpsl
inc
push
inc
cld
inc
or
stc
or
and
sbb
xchg
mov
mov
xchg
in
jl
pop
push
inc
sbb
ror
xchg
jle
mov
or
inc
inc
jge
push
jp
mov
ss
jle
test
rolb
xchg
inc
mov
push
push
out
movsb
test
pop
roll
mov
incb
add
pop
adc
mov
mov
je
sbb
sub
and
das
mov
dec
outsl
in
sahf
pop
inc
cmp
xchg
cld
mov
cli
or
loop
push
dec
mov
jmp
insl
sbb
mov
adc
adcl
cmpsl
mov
add
cld
mov
jbe
or
push
mov
test
pushf
push
cmp
aam
je
insb
xlat
sub
jno
mov
adc
idiv
mov
mov
dec
xor
xor
xchg
and
pop
xchg
mov
shll
xor
ja
roll
lcall
sub
xlat
jnp
sbb
shrd
mov
insl
clc
popf
xor
and
push
xchg
test
stc
jo
mov
loop
inc
adc
sbb
cmp
mov
pop
cmpsl
in
sti
pop
cmpsb
sbb
dec
mov
or
or
xchg
shl
inc
repz
in
aaa
xor
inc
inc
dec
lcall
out
adc
push
mov
sub
add
cld
xchg
ljmp
dec
addr16
dec
adc
icebp
sub
lea
xlat
stos
cmp
lock
in
dec
int
fldenv
push
insb
cmp
adc
mov
in
inc
push
and
fsqrt
decl
add
out
mov
sahf
int
mov
daa
ljmp
in
jmp
rcll
fiaddl
push
rcrb
sub
aaa
shlb
push
test
mov
pop
or
imulb
xchg
scas
mov
inc
mov
cmp
shl
shl
mov
out
xchg
mov
adc
or
push
loope
xlat
mov
cmp
pusha
movsb
cwtl
sbb
stos
inc
mov
mov
add
movsb
test
imul
popf
jbe
sbb
lods
pushf
fwait
xchg
cmp
xchg
movsb
pop
xchg
dec
test
hlt
sub
sbb
or
cli
xor
and
adc
add
je
fs
movsb
pop
xchg
dec
test
hlt
sub
sbb
or
cli
xor
and
adc
add
je
fs
movsb
ficoml
in
aam
cli
xor
and
adc
add
push
mov
mov
mov
cmp
sub
sbb
or
xor
mov
lret
cld
ficompl
ljmp
aad
in
cmc
fst
mov
mov
inc
in
push
cmp
add
jge
stc
lds
cmc
fldl
in
mov
inc
or
jne
add
insl
xor
das
in
cmc
ret
test
mov
jnp
or
dec
jne
push
aas
jno
inc
xor
mov
inc
int
daa
cmpsb
push
pop
pop
add
mov
int
scas
imul
cmp
jge
push
test
jns
mov
lds
sahf
jge
xchg
leave
arpl
enter
mov
push
cmc
mov
or
mov
add
push
xor
cmp
aam
in
loope
test
test
dec
in
in
jbe
inc
mov
push
dec
inc
jl
insl
adc
pop
subb
xor
or
test
jbe
data16
add
inc
sbb
dec
push
test
bound
sub
and
xchg
add
xor
mov
fnstenv
cli
push
loope
xor
mov
aad
in
cmc
cmp
dec
mov
inc
xchg
push
dec
gs
adc
hlt
test
push
leave
mov
mov
lds
or
das
push
or
test
lahf
iret
in
mov
or
mov
cmp
push
jp
push
sub
icebp
xchg
loope
fcoml
int
std
movsl
in
mov
inc
or
jne
add
insl
xor
mov
test
xchg
std
movsl
in
mov
inc
or
jne
add
insl
xor
jg
insl
and
inc
and
lret
je
xchg
pop
ds
xor
sub
mov
sbb
test
pop
and
mov
mov
dec
dec
mov
cli
gs
dec
push
or
sbb
jecxz
xchg
inc
pop
idivl
fmuls
and
loopne
imulb
arpl
out
mov
movsl
cmp
push
mov
or
cmp
sub
rorb
std
cmpsb
mov
xchg
sti
clc
adc
int
pusha
popa
mov
aaa
int3
scas
dec
or
push
sbb
out
sbb
and
std
or
pop
lahf
sti
mov
sti
repz
jp
sub
aas
out
xchg
test
call
add
jge
jle
lods
aad
jbe
xor
rcll
xchg
mov
or
jbe
popf
loop
sbb
imul
in
imul
ss
cmp
outsl
int
lea
lods
cmpsl
jle
adc
jbe
daa
data16
xchg
addl
js
or
and
out
inc
sub
and
outsb
out
cld
xor
xchg
inc
je
in
lock
jg
shl
int
jns
fidivs
aaa
ret
sbb
xchg
insl
dec
std
mov
sbb
xor
mov
leave
test
sarb
lock
test
sbb
inc
jno
pop
mov
xchg
ljmp
and
mov
scas
adc
outsb
mov
cltd
lcall
sbb
shr
int3
aam
imul
fisubl
or
dec
dec
test
adc
cmpsb
xor
shrb
pop
subb
cmp
add
sbb
xchg
int
divl
pushf
sub
ss
mov
jne
xor
shrl
je
ficomps
ss
jge
stc
enter
pop
or
movsl
mov
mov
or
inc
lea
sbb
loopne
sbb
cs
lock
sbb
xorl
xchg
test
push
in
sti
or
loop
mov
test
mov
mov
loopne
sbb
imul
or
je
shrl
imul
mov
xchg
bndstx
pusha
dec
dec
sub
sub
sbb
or
call
lret
sbb
fidivrs
pop
popf
cmp
add
ja
stos
xor
mov
adc
loope
out
lds
jmp
pop
dec
cmpsl
add
sti
lods
and
imul
dec
xchg
aas
aaa
sub
mov
in
fcoms
punpckhdq
loope
or
dec
test
inc
push
pushf
add
and
call
nop
loop
mov
xor
cli
xor
fs
negl
xor
notb
in
mov
sub
mov
push
and
pop
push
xchg
sar
cli
sbb
test
push
or
imul
int
mov
loop
dec
xor
sbb
hlt
pop
mull
fildl
outsl
sbb
test
ret
and
idiv
sbb
jne
sbbl
pop
mov
push
out
xchg
sti
in
dec
int3
ja
shll
test
rcr
imul
pop
push
cli
sbb
scas
sbb
adc
and
aam
xchg
pop
xor
rclb
divl
and
xor
cmc
pop
push
jecxz
mov
fdivrl
int3
jg
out
jb
mov
mov
nop
mov
xor
xchg
int
sbb
or
adc
push
and
pusha
xrelease
test
mov
js
or
inc
ss
pop
xchg
repz
sbb
dec
imul
pushf
icebp
mov
cld
xchg
sti
je
jne
pusha
push
mov
add
adc
mov
mull
mov
aad
sarb
lea
out
pop
fs
ret
cmp
pop
jecxz
add
movhps
add
and
push
push
movsl
dec
push
xchg
push
js
icebp
pop
cltd
jle
inc
test
in
pop
dec
xor
in
imul
push
fildll
add
mov
sub
push
repnz
mov
xor
xchg
std
sub
push
add
out
push
mov
sbb
hlt
adc
adc
cmp
dec
lcall
jns
mov
aaa
je
xor
cli
pop
xchg
loope
mov
adc
cmp
popf
add
fldcw
orl
mov
outsl
insb
das
jmp
and
roll
mov
pop
mov
fstl
test
clc
es
xchg
faddp
cmp
movb
stos
add
jo
dec
dec
dec
cmp
ja
mov
xchg
loope
insl
dec
jno
repz
popl
in
aad
fsubrs
xbegin
push
dec
xor
dec
mov
mov
push
int
fistl
mov
inc
or
fcoms
push
outsb
sub
xor
jmp
jb
mov
aas
pop
and
sub
jo
stos
sahf
movl
mov
shrl
mov
addr16
mov
stc
sub
iret
test
or
fistps
sub
aas
dec
sub
fsubr
mov
fdivrs
adc
adc
inc
sub
xchg
cltd
in
add
jmp
mov
arpl
and
out
ret
and
shll
jb
dec
ret
int
aas
xchg
lock
out
in
movsb
jecxz
xchg
xlat
test
scas
cmpsl
push
movsb
daa
sbb
push
adc
add
into
addr16
push
xchg
or
test
bswap
push
adc
negb
js
stos
adc
ja
cmpsb
aad
cmpsb
scas
jle
add
test
or
sbb
dec
orl
inc
xchg
jmp
out
jge
jge
mov
not
jbe
pop
test
pusha
fs
xchg
add
sbb
dec
fsubl
sub
enter
sub
sbb
sbbb
inc
arpl
inc
addr16
sub
and
leave
arpl
leave
or
or
pop
mov
repz
add
xor
mov
cmp
loope
fcmovne
jp
inc
or
and
lea
pop
in
test
push
adc
scas
dec
nop
ljmp
lahf
leave
or
stos
lock
sub
ja
rclb
add
sbb
or
imull
test
int3
sub
add
pop
cmp
mov
scas
push
aas
roll
icebp
jae
pop
and
pop
or
xchg
loope
aas
lahf
in
push
repz
or
jmp
cmp
mov
and
shr
jne
cwtl
sahf
in
mov
cmp
push
xchg
mov
add
lods
cmp
stos
or
dec
inc
pop
sbb
hlt
movsl
fsubrs
mov
xchg
pop
sbb
outsb
push
inc
pop
and
xchg
pop
cmp
inc
sub
inc
jge
fwait
scas
mov
stos
gs
mov
add
adc
pop
out
lds
push
push
aas
sbb
sub
lret
jno
xor
aam
mov
mov
and
sub
cmpsl
sub
xlat
pop
jle
loopne
mov
jecxz
pushf
loope
in
cmp
add
pop
push
out
mov
mov
xchg
or
call
mov
movsl
adc
out
jns
shr
ljmp
xor
rcr
dec
sub
rol
clc
in
xchg
dec
adc
or
imul
inc
sub
pop
lret
cmp
shr
stc
int3
jp
jae
sub
adc
mov
outsb
inc
inc
andb
cmp
push
mov
pop
xchg
lahf
test
repz
push
xchg
dec
cmpsb
shrl
shl
imul
sbb
out
call
sahf
push
fstcw
jno
mov
or
in
mov
ljmp
lock
sbb
out
push
lea
and
movsb
rcrl
mov
cmp
test
orb
movsb
jl
jge
sbb
mov
push
shrl
orl
jg
push
cmp
outsl
sbb
rcll
flds
roll
fs
mov
add
and
add
scas
in
jp
loop
popf
pop
mov
mov
mov
inc
sti
mov
push
imul
cmp
stc
int3
mov
add
loope
scas
in
and
je
loopw
mov
lret
arpl
pop
sarl
test
fdivs
or
ret
sbbl
lret
mov
push
icebp
cmp
leave
fisttps
adc
enter
aas
add
incl
fcompl
sub
cmpsb
mov
dec
xor
add
dec
std
int3
or
movsl
outsl
into
pusha
pop
add
in
loopne
std
addb
int3
lcall
adc
fistpll
cmove
movsb
or
sbb
stc
rorl
shll
pusha
and
sbb
out
test
imul
sub
mov
sahf
outsl
insb
push
mov
sub
jle
inc
mov
stos
shl
adc
lock
ljmp
jle
push
mov
xlat
insl
dec
adc
pop
mov
mov
call
xchg
rcl
faddl
test
test
add
mov
add
fidivl
outsl
inc
inc
fwait
xor
mov
and
push
stos
adc
imul
cwtl
jns
pop
je
add
out
and
push
xchg
out
insl
pop
jmp
in
int
xchg
sub
loopne
scas
adc
xor
fldcw
inc
push
and
and
nop
inc
jmp
cwtl
sub
rclb
jg
pop
jne
ret
jge
mov
cmpsb
sbb
fsubrs
mov
or
pop
cmpsl
outsl
cmp
xchg
cs
pop
sbb
xor
mov
dec
aas
ficompl
loope
lret
ljmp
cmp
inc
mov
pop
fcmove
sub
push
lret
lea
mov
pop
adc
cmp
xchg
mov
jmp
pop
xchg
iret
loope
jmp
mov
and
fbstp
sbb
xor
sbb
sahf
fwait
outsl
push
das
jnp
in
mov
xor
mov
add
or
movsl
mov
mov
je
inc
daa
jge
mov
push
roll
sbb
dec
add
test
movsb
popa
pop
loop
pop
out
negb
xor
xor
popa
jge
xchg
roll
or
frstor
addr16
sbb
lods
pop
push
adc
xor
mov
loope
inc
mov
test
xor
es
mov
mov
xchg
xchg
lock
sub
sub
psllw
lds
stos
sbb
sarl
and
rcrb
rorl
push
mov
sbb
fdivrl
pop
data16
mov
adc
pop
jne
fildll
xor
jne
pop
push
cltd
or
xor
jne
and
xchg
addr16
xchg
or
in
mov
dec
xchg
sub
sub
imul
test
mov
push
fcmove
sarb
inc
loop
loop
popl
insb
adcb
out
popf
jns
popf
xor
imul
cwtl
lahf
mov
iret
mov
xor
pop
iret
pushf
jne
sbbl
xchg
out
js
jge
cmpsb
jp
out
aad
outsl
mov
adc
addl
imul
scas
mov
fs
insb
push
push
shlb
mov
push
outsl
or
mov
pop
stos
jmp
pop
push
fs
adc
pop
add
js
push
loope
push
sub
jo
inc
popf
and
lods
mov
dec
push
push
mov
dec
subb
fsubrl
out
add
inc
int3
mov
jmp
lock
mov
loop
cmp
jl
imul
mov
pop
push
clc
mov
mov
insb
pop
add
cmp
lahf
xlat
pop
in
test
sbb
mov
mov
je
or
js
je
out
or
rcrb
jmp
mov
inc
and
inc
iret
cwtl
add
or
inc
jl
inc
sub
inc
xor
sub
pop
cmp
fistl
sub
sarl
mov
cltd
mov
les
cmp
mov
call
ljmp
int3
in
jbe
fucomip
adc
sti
loope
mov
cli
or
jb
sub
in
mov
lcall
jno
pop
je
mov
or
mov
pop
bound
ja
ret
fwait
inc
adc
sub
lret
xor
xor
jnp
pop
insl
ja
das
aam
clc
movsl
fcompl
cmp
rclb
aam
outsb
mov
aas
xor
aaa
lock
inc
mov
pop
sub
mov
dec
mov
es
ja
js
fs
ror
loopne
js
fcomip
lea
pop
test
aad
or
inc
shl
xchg
pop
mov
ret
mov
or
and
aas
pop
sti
jecxz
add
mov
mov
in
mov
lret
data16
in
inc
lea
sbb
adc
push
jno,pn
inc
pop
test
pusha
push
or
push
adc
aaa
rol
aaa
imul
mov
lods
out
fwait
xchg
scas
cmpsl
arpl
and
xor
sti
mov
inc
xor
pop
aad
lods
shr
mov
ljmp
mov
lea
sahf
loope
inc
pop
cmp
js
test
xchg
push
sub
add
icebp
mov
jne
mov
movsb
inc
dec
ja
lds
mov
jo
pop
andb
scas
popa
repz
and
hlt
decl
mov
in
dec
sub
mov
daa
pusha
fmul
inc
cld
mov
xor
push
xchg
mov
sti
sbb
mov
arpl
iret
movsb
repz
mov
arpl
out
mov
inc
insl
lds
dec
pop
ljmp
repz
mov
add
dec
push
out
push
mov
mov
pushf
cmp
loopne
pop
repz
jno
iret
mov
inc
fildll
pop
or
scas
std
xor
shlb
mov
addl
push
push
jmp
push
dec
push
and
pop
sbb
in
mov
push
int
jae
mov
and
shl
cmp
push
xor
roll
out
bound
xchg
mov
jns
cmp
cwtl
aaa
mov
hlt
mov
pusha
dec
jae
and
or
cwtl
xor
inc
lret
outsb
stc
fs
pop
xor
mov
mov
insb
loope
dec
in
les
jo
or
mov
mov
loop
sub
jle
cltd
outsl
hlt
fcompp
neg
icebp
push
add
sar
push
in
shll
rcl
pushl
sbb
call
iret
mov
push
imul
stc
xor
enter
icebp
push
stc
jae
sbb
movb
fistl
leave
or
rcll
loopne
jne
sti
ror
insb
sbb
mov
roll
inc
gs
cmc
scas
push
or
cmp
cli
cltd
fldl
pop
jne,pn
cli
jnp
rcrb
leave
popa
mov
cld
adc
mov
outsb
xor
cmp
arpl
pushf
cmc
subb
cmpsb
inc
aam
decb
lcall
mov
in
xchg
fidivl
test
fiaddl
rcrb
aad
cltd
sbb
mov
int
cmp
fimuls
in
cld
jne
add
unpckhps
push
push
arpl
lcall
cltd
add
adc
mov
outsl
mov
out
int3
insl
xor
xlat
inc
sti
scas
adc
aaa
decl
cli
xchg
cmp
pop
fsubr
cmp
sarb
rcll
mov
jne
repnz
test
stc
and
push
sahf
mov
mov
push
cmp
jne
ljmp
sub
jg
or
xchg
mov
mov
in
loopne
push
and
dec
jne
std
pop
sti
jmp
adc
xchg
sub
insb
ljmp
cmp
loopne
lea
ret
not
fadds
out
lahf
jl,pn
inc
and
xor
out
fsubl
dec
icebp
cmpsb
fstl
dec
jb
sar
jmp
out
inc
fsubl
shll
gs
aas
iret
mov
and
dec
lret
push
movsb
jle
xor
mov
add
call
sub
insl
push
or
incb
and
rcrl
mov
push
lds
hlt
mov
aad
iret
daa
push
mov
adc
dec
adc
out
aaa
aam
mov
sub
add
out
cmpsb
imul
sub
in
sti
data16
movsb
mov
call
data16
ss
mov
jp
sbb
adc
cmc
js
push
sub
cmp
cmp
mov
iret
push
jp
jmp
jns
mov
mov
movsb
mov
shll
je
and
std
sbb
jae
jecxz
out
outsb
cld
test
and
out
popf
shrb
sub
mov
mov
push
dec
inc
ret
in
das
and
int
pushf
push
cmp
push
push
mov
or
mov
xchg
pop
mov
test
loope
mov
andb
xchg
clc
jne
cmp
fdivs
rcrb
jg
push
imulb
jae
aas
add
mov
mov
push
and
inc
mov
mov
and
out
loope
shlb
fs
push
jns
xchg
shr
hlt
insb
or
loop
sbb
inc
push
cmp
popf
push
cmp
add
lret
push
dec
cmp
adc
cmp
push
push
imul
bound
lcall
add
enter
jle
jmp
outsb
in
mov
mov
sub
std
sub
frstor
out
std
movl
and
push
incb
bound
cmpl
je
push
pop
inc
cmpsl
fs
jns
sbb
sub
es
ja
lcall
pop
fsubl
arpl
ss
outsl
in
repnz
adc
xor
pop
ficoms
or
ret
mov
sbb
or
jl
fwait
daa
mov
jno
jmp
push
bound
lods
fwait
das
outsl
movl
lret
pop
fdiv
imul
sub
fmul
iret
xlat
xchg
std
shl
lcall
dec
lods
add
cli
in
ficompl
outsl
pop
jo
movsl
stc
cmp
shlb
push
inc
or
outsb
fs
cmp
adc
adc
xchg
pop
xor
pop
mov
daa
mov
or
xchg
outsl
xchg
rorb
dec
lahf
jb
inc
outsl
test
pop
push
jmp
jl
add
or
and
stos
and
sbb
xorl
xor
dec
or
and
mov
xorb
jecxz
mov
inc
fwait
data16
push
test
mov
inc
leave
cmp
out
data16
leave
xchg
inc
adc
in
cltd
ror
ret
xor
xchg
mov
pop
xor
inc
imul
ret
mov
and
in
int3
jnp
sbb
testl
rorl
jae
ljmp
pop
or
lcall
or
push
lock
cltd
aad
pop
call
sarl
pop
mov
cmpsl
mov
add
popa
xchg
pusha
jbe
push
pushl
mov
lret
dec
push
push
add
fidivrs
outsl
mov
cmpsl
dec
into
test
jge
cli
xchg
xchg
sbb
nop
fdivrs
insb
insl
std
pop
xor
imull
in
and
iret
add
mov
jb
loope
fstps
add
int3
dec
scas
shrl
sub
xor
jne
in
inc
and
aam
xchg
jae
mov
loopne
outsl
inc
adcl
jp
mov
xor
lahf
mov
imul
jecxz
loope
add
xor
gs
inc
arpl
or
mov
mov
icebp
fmul
stos
and
data16
pop
addb
sub
pusha
pop
sbb
cmp
or
pop
repz
jg
pop
popa
dec
incb
mov
or
cld
dec
pop
sbb
ret
fs
leave
lds
add
add
inc
es
cmp
xchg
shl
das
cmp
or
push
ja
pop
adc
mov
xor
mov
call
dec
ja
push
sbb
xor
jbe
adc
outsb
and
jns
in
sub
rorb
stos
and
jle
arpl
ds
push
mov
cmp
das
aad
daa
pop
cmp
ljmp
cvtps2pd
sbb
inc
outsl
in
sti
fldl
jo
sub
outsb
mov
std
fwait
or
fdivp
loop
stc
mov
and
mov
inc
inc
mov
dec
stos
add
jb
fsubrp
push
adc
inc
push
jo
dec
pop
xor
cmc
mov
mov
mov
mov
icebp
aam
bound
movsl
or
sub
bound
push
xor
testl
in
mov
cmp
mov
ljmp
mov
cli
in
cmc
fldl
in
mov
inc
or
jne
add
insl
xor
mov
test
xchg
std
movsl
in
mov
inc
or
jne
add
insl
xor
fucom
lods
hlt
dec
test
xchg
std
movsb
sub
push
int
sub
adc
mov
rcl
out
icebp
fldl
insl
dec
sbb
gs
ljmp
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pushf
add
cltd
in
jge
mov
lret
jbe
add
or
add
push
add
add
and
add
add
add
xchg
add
add
add
popl
dec
add
rolb
and
fs
add
add
testl
pop
add
add
inc
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
stc
add
add
add
jge
xchg
add
add
add
arpl
mov
mov
dec
add
add
and
add
add
aam
add
add
imul
add
int
addl
inc
add
add
add
out
mov
add
add
push
add
mov
mov
mov
add
or
std
add
add
add
add
adc
push
add
add
add
add
add
add
sbb
fildl
jg
push
add
add
testl
std
add
add
add
add
add
lahf
add
add
add
add
add
add
outsb
or
add
add
add
add
add
test
std
add
add
add
add
jno
clc
add
add
pusha
add
add
lret
add
add
mov
stc
add
add
add
add
add
add
push
add
add
test
and
xor
add
add
add
add
add
scas
add
add
add
add
movsl
add
add
xor
add
add
add
add
pusha
add
add
add
mov
fadds
pusha
add
xchg
add
mov
add
push
add
pop
add
add
add
pop
add
add
add
add
add
aam
mov
testl
adc
add
add
clc
add
add
add
add
add
add
add
mov
popa
add
cs
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
mov
rolb
xchg
add
add
clc
add
add
add
lahf
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
testl
push
and
pop
add
mov
pop
add
add
add
add
xchg
add
adc
add
add
lea
addb
add
add
add
lret
add
add
adc
and
mov
add
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
fildl
pop
add
add
add
mov
add
mov
sbb
push
add
add
add
add
add
add
cmp
add
leave
mov
jno
mov
mov
inc
test
inc
push
lock
mov
cmp
fisttps
xor
push
scas
jecxz
or
dec
lods
and
sti
pushf
fwait
pop
inc
or
and
daa
std
cmp
addr16
dec
aam
int3
ficoms
rolb
aad
imul
jno
and
sarl
pop
lock
cmc
xchg
movsl
fstl
in
sbb
rolb
lea
pusha
faddl
jo
imul
stc
lcall
or
jno
popf
rcr
movsb
sub
inc
mov
negb
adc
outsl
sub
pop
and
clc
xchg
add
mulb
xor
aam
mov
das
pusha
mov
outsb
cmpsb
sbb
jmp
push
mov
cmp
dec
fldt
push
and
mov
divl
pop
ret
int3
add
pop
dec
inc
inc
pop
dec
lea
in
xor
sahf
dec
popa
hlt
jb
xchg
jns
add
cmp
pop
mov
shll
popf
mov
xchg
inc
sub
xor
push
pop
jmp
rcl
add
stos
or
nop
dec
int3
std
dec
faddl
fcom
sub
dec
adcb
mov
test
int3
push
mov
int
xor
sbb
pop
adc
push
mov
hlt
rorb
xchg
clc
outsl
dec
mov
sarl
shrl
push
stos
lret
aaa
pop
push
sbb
cmc
jle
dec
inc
lea
adcb
stc
mov
adc
dec
adc
and
add
jl
mov
inc
xchg
repz
mov
mov
inc
or
ds
lock
xchg
dec
aad
dec
shlb
lods
insb
mov
and
push
mov
or
out
cmpsb
popf
hlt
leave
lcall
cmc
out
dec
xchg
add
rcrb
xor
ja
hlt
loopne
jp
fisubs
sarl
ret
push
mov
outsb
push
arpl
movsb
pop
in
sub
push
sub
add
pop
jecxz
mov
pop
das
dec
xchg
in
mov
or
cltd
jno
sbb
adc
sbb
test
cmp
cmp
cmp
fidivrs
mov
lods
cltd
xchg
lods
cmp
sbb
adcb
daa
mov
jecxz
test
xchg
mov
mov
jbe
or
pop
loop
push
jae
mov
mov
out
stos
sbb
repz
mov
rcll
xor
mov
xchg
inc
push
mov
push
cmpsb
and
clc
and
add
or
sti
outsl
sbb
lahf
xor
insb
lret
cmp
or
inc
fidivrs
test
dec
cmp
xchg
call
lock
jecxz
std
push
nop
xor
push
mov
mov
pushf
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
