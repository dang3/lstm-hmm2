decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
fdivr
lods
xchg
shlb
jbe
dec
add
popa
cmp
mov
mov
fdiv
lods
loope
rorl
jl
dec
add
pusha
cmp
or
sbb
in
mov
fdiv
lods
loope
rorl
pop
popa
sub
push
pusha
adc
imul
rorb
mov
cmp
or
cld
movsl
ljmp
in
pop
in
outsb
cmpsb
jl
icebp
mov
sub
lea
out
mov
dec
es
addr16
mov
dec
dec
cld
lret
cmp
push
enter
xor
push
sahf
pop
insb
xor
add
mov
rolb
xchg
push
flds
mov
rcll
fldenv
cmp
fsubrl
sub
add
jl
push
daa
rcll
dec
pushf
xor
mov
loope
scas
fs
cld
lea
jle
push
jne
rcll
loope
imul
or
jecxz
in
mov
fdiv
lods
loope
rorl
jl
dec
add
popa
cmp
or
pop
aam
ret
popf
xchg
jmp
enter
call
bound
inc
sub
pop
and
jle
jns
adc
repnz
mov
xchg
fildl
insb
sub
push
xchg
stos
cmp
dec
lods
mov
movsb
mov
loope
rorl
jl
dec
add
popa
cmp
or
sbb
in
mov
fdiv
lods
loope
rorl
jl
dec
add
popa
cmp
or
sbb
in
rcl
mov
adc
sbb
repnz
ds
mov
push
push
insl
mov
pushf
test
sbb
jnp
popa
roll
or
or
out
shrb
int3
jnp
jge
leave
inc
add
add
ret
int3
lret
in
xchg
jnp
mov
call
call
shlb
xchg
or
mov
xor
out
clc
jbe
test
xchg
gs
imul
and
lods
mov
cmpb
inc
sbb
repnz
xchg
hlt
jns
lods
pusha
push
mov
xor
push
jp
push
orb
addr16
push
adc
xchg
iret
je
call
and
fmull
bound
dec
sub
pop
js
xchg
xchg
sub
stos
push
xchg
pop
jbe
push
addr16
pop
imulb
xchg
jae
int
mov
stos
mov
iret
sub
jg
xorl
cmpsl
rorl
int3
mov
imull
or
or
xor
mov
sbb
push
and
push
jb
mov
xchg
pop
test
sbb
mov
shlb
loopne
movsl
dec
xchg
jmp
and
outsb
mov
lret
movsb
loop
jae
sarb
cmp
insl
pop
cmp
mov
stos
jl
aam
inc
pop
cmp
popa
xchg
jg
or
xlat
loopne
or
sahf
xchg
data16
leave
sbb
lods
push
sbb
stos
sbb
mov
add
and
inc
inc
xchg
mov
mov
sub
scas
insl
jo
mov
cmpsb
fsubl
decl
sbb
mov
test
sbb
pop
push
lods
inc
push
mov
mov
or
mov
mov
enter
popf
lds
inc
daa
pop
rclb
iret
ds
add
into
or
push
and
movsb
cwtl
movsb
or
cmp
push
inc
lcall
or
cli
jo
sahf
sbb
fs
imul
dec
fisttpll
lahf
jnp
lods
fs
jae
fstl
mov
mov
mov
fs
fcoms
loop
fwait
mov
imul
and
ret
xchg
and
sahf
subl
add
adc
dec
jo
dec
xchg
push
ror
push
in
add
cmp
jg
lahf
and
jge
jp
mov
dec
in
fidivl
adc
push
xor
popa
pusha
divb
push
add
xor
das
mov
in
cmc
stos
xchg
into
lds
jecxz
in
pop
inc
in
fsincos
cmp
jl
mov
or
mov
push
jl
insl
nop
jno
movsb
test
jecxz
cwtl
mov
pushf
and
shlb
dec
jae
push
daa
xor
and
andb
stos
mov
into
or
push
popa
fadds
push
js
jmp
nop
outsl
dec
inc
decl
mov
test
test
clc
ret
stc
repnz
nop
je
jo
lret
fadds
shll
pop
imul
lock
repz
dec
aam
lods
jbe
add
and
xor
mov
jmp
sub
aas
xchg
cmp
add
push
jge
das
les
fwait
es
fimull
hlt
rcrl
out
test
lcall
pushf
orl
sub
dec
jnp
in
add
push
mov
inc
fmul
dec
xlat
inc
inc
mov
es
xor
and
test
fidivl
data16
push
lahf
jo
fisubrs
aas
dec
fbstp
add
das
insb
xor
xor
or
arpl
outsb
pop
mov
add
rol
mov
inc
ret
pop
lret
enter
inc
add
frstor
mov
inc
test
push
stos
loope
movsl
push
push
lcall
jp
xchg
jmp
adc
fdivrs
pop
out
sbb
insl
cmpsb
rolb
mov
inc
cld
inc
imul
ds
or
dec
test
xchg
icebp
mov
xchg
shl
in
and
int
divl
mov
shll
add
cltd
imul
or
push
popf
js
imul
cmp
ss
xchg
xor
xchg
filds
mov
mov
pop
in
repnz
mov
sbb
adc
mov
fldenv
mov
jno
cmp
mov
jmp
hlt
bound
pop
pop
fstpl
mov
test
dec
pop
mov
push
mov
sbb
jp
aaa
pop
push
fisubs
add
jge
testb
out
and
pop
ret
ljmp
xor
add
imull
inc
dec
pusha
cmp
or
dec
add
and
gs
mov
out
adc
out
pop
fld
dec
pusha
pop
inc
xchg
lret
int
fidivrl
pop
fiadds
pop
jne
or
sub
xor
mov
popf
xor
idivl
pushf
mov
push
xor
jp
mov
push
mov
out
test
inc
mov
inc
mulb
xor
sub
jb
jae
pusha
stos
lret
sub
aam
div
sbb
leave
dec
pop
test
aas
or
jae
cmpl
sti
pop
je
pop
push
or
mov
pusha
in
xchg
test
ret
inc
movsb
jmp
sub
fidivrs
or
in
mov
js
dec
mov
jle
data16
or
gs
adc
mov
add
and
imulb
jns
inc
popa
jmp
repnz
cmp
adc
in
and
nop
pop
sahf
mov
and
mov
inc
loope
int3
out
inc
xchg
mov
adc
je
mov
jb
ljmp
mov
scas
stos
xor
sub
mov
lock
pop
icebp
stos
mov
out
pop
add
xchg
lock
bnd
cmpsl
fistpl
rcrl
cmp
aaa
shr
xchg
pop
jne
push
out
push
ss
call
mov
jns
add
pop
jp
nop
lret
jg
jns
pop
mov
andl
push
sbb
dec
pop
jp
dec
jg
scas
repz
adc
xchg
mov
imulb
icebp
je
gs
push
les
jnp
arpl
cmp
aad
shr
rorb
aaa
xchg
stc
imul
mov
pusha
mov
dec
stos
inc
or
movsb
mov
push
pop
pop
xchg
clc
fildll
mov
sub
add
sahf
lcall
sarl
lcall
sbb
jne
loope
out
push
in
or
ret
and
in
shrb
cmp
inc
jge
jno
mov
out
add
mov
enter
pop
fstp
negb
xor
inc
xlat
and
mov
repz
fs
int3
sbb
lods
jle
mov
sub
jl
mov
mov
jb
push
xchg
sub
jle
int3
mov
inc
rclb
cli
pushf
lcall
jmp
inc
sbb
pop
mov
xchg
outsb
mov
lock
add
xor
outsb
jge
cltd
sbb
pop
stos
addb
or
cmp
sub
in
inc
mov
inc
scas
pop
clc
xor
mov
push
mov
lcall
aaa
push
das
xor
sbb
jnp
int3
adc
fidivrl
dec
enter
rcll
inc
xor
push
sub
fmuls
sub
lcall
xchg
adc
icebp
nop
jl
push
in
or
dec
lcall
push
xorb
ss
aad
test
into
mov
dec
call
fistpll
push
cwtl
pop
sub
ret
jb
or
loope
pusha
div
lock
mov
dec
cli
insb
jecxz
mov
lret
out
cmp
sbb
inc
dec
cwtl
push
dec
int
stos
pusha
call
test
dec
test
jmp
mov
push
jle
arpl
xor
dec
in
mov
mov
icebp
jmp
scas
movsl
daa
test
in
fwait
mov
popa
sub
in
jb
jnp
cmpsl
jbe
cmp
jb
popa
rorb
mov
push
insl
repnz
sbb
fwait
mov
je
roll
ljmp
and
bound
xchg
sarl
cmpsl
cwtl
and
lahf
test
int3
pop
and
mulb
les
mov
hlt
sub
cmp
in
mov
lods
xor
out
test
or
cwtl
mov
sbb
dec
push
or
lods
cmp
adc
push
sbb
repnz
xchg
add
and
out
js
ss
xorl
ds
lock
push
cmp
dec
xchg
jns
sbb
fbstp
add
push
js
inc
iret
xchg
xchg
adc
testl
xor
push
adc
cmpsl
jecxz
sbb
dec
rol
andb
adc
inc
mov
xchg
lock
aad
inc
or
cmpsl
xchg
jge
dec
out
and
pushf
push
dec
sbb
jecxz
pop
jb
xor
pop
and
lcall
in
je
int
sbb
iret
rep
dec
and
jnp
push
cmpl
and
xor
frndint
jl
jp
push
cmp
and
ret
xlat
mov
fyl2x
test
xchg
mov
push
into
mov
negl
and
fidivrs
mov
fsubrs
push
jmp
mov
into
fxch
ds
xchg
cmpsb
mov
mov
jge
and
movsb
std
push
cli
mov
movsb
dec
repz
mov
aaa
pop
and
mov
jo
fucomip
add
cs
sahf
das
test
mov
outsb
xor
lods
lahf
pop
sti
lahf
test
add
sub
movsl
leave
dec
mov
sbb
jl
das
dec
cwtl
mov
mov
add
jnp
mov
mov
jbe
je
pop
jmp
add
mov
cmpsl
mov
notl
mov
stos
pop
push
loopne
insb
mov
pop
jle
push
mov
sbb
cmp
hlt
dec
mov
in
pop
stos
decl
lret
insb
pop
dec
stos
rolb
out
pushf
and
xor
pop
jae
cwtl
testb
xchg
cmpsb
mov
xchg
adc
mov
xor
gs
mov
je
imul
inc
xchg
mov
arpl
fnstenv
addr16
push
outsb
sbb
mov
outsb
test
mov
add
inc
jl
test
sbb
pop
in
or
sbbb
sbb
pop
lret
jmp
mov
lcall
cld
adc
test
xor
dec
ss
pop
add
mov
stos
popa
jg
cwtl
mov
xchg
or
xchg
xchg
mov
nop
dec
dec
lods
xor
cld
dec
scas
insb
shrb
mov
call
pop
jae
popf
test
and
sub
mov
xchg
test
add
push
jp
je
cs
out
das
aaa
jb
and
xor
jge
jecxz
jl
xor
aas
adc
jnp
shr
aad
mov
in
je
aad
inc
push
xlat
negb
iret
test
xor
roll
and
jle
es
daa
adc
adc
xchg
test
shrl
cmp
addr16
jno
sbb
mov
pop
fmulp
and
sbb
sub
mov
int3
jge
xor
push
cmp
fnstsw
mov
fistpl
pop
adc
test
xchg
push
xchg
je
lret
imul
pop
lret
jle
jb
jmp
push
sbb
mov
roll
pop
aam
rorb
arpl
push
enter
pop
arpl
mov
push
in
xchg
sti
pop
and
lret
xchg
in
xchg
mov
int
jne
lods
add
cltd
inc
js
nop
popf
mov
cs
pop
mov
leave
jmp
xchg
insl
dec
incb
pop
mov
flds
mov
nop
jle
pop
adc
xor
pop
pop
inc
jnp
mov
mov
jmp
adc
out
cmp
fldenv
in
ljmp
mov
dec
push
jl
push
mov
mov
jmp
mov
jno
xor
push
fs
xchg
push
xor
fwait
push
arpl
sbb
ret
cwtl
mov
sub
loop
cmp
pop
ds
cmp
idivl
ljmp
inc
ljmp
or
addr16
repz
lahf
mov
cmpsl
outsl
dec
cmp
mov
mov
push
lock
jmp
fadd
roll
mov
test
inc
cmp
int3
ss
into
invd
addr16
adc
mov
cmpb
sub
cmp
inc
push
outsl
mov
ja
cmp
sub
sti
mov
sub
sbb
mov
mov
xor
pop
xchg
fcoms
fldt
inc
ds
cmp
add
jb
dec
pop
mov
push
rclb
add
jmp
push
mov
mov
add
aas
cmp
cmpsb
jo
jnp
inc
insl
xchg
cli
sub
scas
jecxz
mov
nop
cmpsb
inc
add
or
xchg
pop
lock
stos
std
stos
jo
sbb
inc
jecxz
pop
test
add
in
stc
loopne
sbb
sbb
cmp
sub
lret
jl
js
lret
mov
pop
jmp
xor
inc
jae
imul
mov
in
test
addr16
dec
or
sbb
loop
mov
xchg
sbb
lcall
pushf
jge
and
mov
roll
cmc
or
add
xchg
pop
pop
divb
pop
sti
mov
and
pop
aaa
outsl
pop
in
je
call
jo
outsl
mov
xchg
pop
pop
jle
push
jmp
popa
sub
out
mov
in
mov
jecxz
loop
clc
xor
xchg
cmp
mov
testb
add
push
lds
jmp
into
mov
fildl
and
and
call
or
sub
into
leave
xor
sbb
sub
data16
dec
jmp
pop
lock
sahf
sub
fiaddl
rolb
es
movl
sti
sbb
ljmp
popa
pusha
popf
icebp
jmp
addr16
enter
idivb
mov
xchg
fstps
daa
lahf
fldl
aaa
jne
stc
dec
es
in
insb
shrb
push
push
daa
xchg
mov
xchg
fidivs
dec
sbb
arpl
push
xchg
jbe
add
stos
xchg
cmp
pop
jnp
dec
testb
jae
xchg
sbb
insl
out
xchg
adc
scas
les
adc
sbb
mov
outsb
gs
mov
iret
cmp
xchg
cmp
outsb
leave
and
cmp
jns
adc
dec
cli
in
pusha
xchg
leave
xchg
add
cmp
xor
jne
sbb
in
pop
jp
dec
ja
inc
gs
jp
aaa
jg
mov
sbb
fisubs
and
push
cmp
orl
inc
pop
xor
dec
bound
jns
popa
jp
pop
scas
sbb
pusha
or
insl
push
jb
aam
popa
in
shrb
enter
pop
shlb
movsl
sbb
xlat
sub
jmp
and
mov
pop
loope
loop
adcb
mov
imul
js
mov
mov
cmpsl
or
addr16
xchg
cmp
jno
loopne
ret
das
in
scas
xchg
sti
lahf
lcall
les
repz
call
loop
fs
and
enter
outsb
adc
cmc
mov
inc
or
mov
mov
push
shll
cmp
mov
in
in
pop
mov
sub
arpl
incb
dec
inc
mov
filds
leave
leave
and
mov
cmp
jl
push
mov
icebp
aas
jg
lahf
jg
data16
arpl
xchg
fs
testb
xor
aad
inc
dec
sbbl
ret
jge
test
xlat
aas
jns
andl
jo
ja
js
lds
mov
scas
xchg
insl
add
jno
lahf
add
xchg
push
lods
in
je
lds
mov
inc
and
pop
mov
int3
popa
cmp
sbb
adc
adc
mov
or
dec
jne
lds
int3
rorl
lock
push
mov
icebp
dec
addl
pop
sarl
leave
in
dec
int3
add
sub
xchg
dec
push
mov
fwait
movsl
inc
xchg
in
std
jbe
cmp
push
movsb
daa
das
inc
jle
movsl
pop
call
rcl
mov
cltd
jb
das
out
dec
inc
jg
out
push
dec
and
jmp
mov
xor
loop
mov
int3
idivb
add
fs
add
fcmovu
jb
les
fcom
push
test
sahf
or
js
inc
jp
mov
lcall
ss
jae
xchg
xor
pop
mov
push
addl
pop
inc
fnsave
lea
push
adc
das
negl
sub
mov
dec
xchg
in
call
rorb
sahf
fisttps
mov
in
xchg
ja
fisubrs
mov
xchg
mov
adc
scas
push
jle
lods
sub
loopne
or
cmp
nop
mov
push
dec
in
pop
pop
jecxz
cmp
shr
test
aam
test
jne
adc
push
lret
lods
outsb
mov
mov
shl
outsb
cmp
and
push
or
outsl
addl
enter
lret
sbb
sub
hlt
ret
out
cs
in
push
mov
jnp
push
pop
fwait
out
xor
cmp
push
jge
adc
xor
aas
lahf
popa
inc
scas
into
push
mov
inc
aaa
movsb
dec
lock
ret
call
jmp
int
jae
ljmp
addr16
pop
mov
out
pushf
pop
push
xchg
push
js
dec
fdiv
lret
sbb
flds
adc
insl
add
sahf
cltd
mov
insl
dec
cltd
or
lahf
sbb
ret
xchg
pop
jg
sbb
pop
push
xchg
imul
in
cmp
shrl
sti
cmpb
lahf
mov
xchg
lret
aad
mov
jne
or
fisttpl
inc
mov
xchg
loopne
push
test
xchg
shll
jle
mov
out
in
cmpsl
fldl
test
jns
adc
popf
xchg
add
mov
add
scas
inc
add
mov
das
dec
pop
sarl
jb
push
push
push
dec
int3
sbb
push
xchg
lret
and
push
dec
inc
jl
aam
enter
or
mov
adc
iret
movsl
pop
sub
jmp
jl
out
in
sbb
dec
pop
dec
push
xor
xchg
ljmp
jge
jnp
and
push
int
and
mov
enter
lahf
clc
jg
or
call
repnz
lea
dec
dec
push
adc
mov
aas
mov
rorl
jmp
lea
jle
inc
xchg
loope
psadbw
inc
mov
adc
push
sub
push
xchg
loope
aaa
mov
jns
neg
xchg
aad
cmc
sbb
out
popa
cmp
es
mov
pushf
sti
in
cmc
push
pop
repnz
mov
mov
cwtl
icebp
mov
xor
test
adc
les
jecxz
cld
jnp
inc
js
xorl
xorb
outsb
sti
push
lods
pop
mov
push
ret
mov
insl
cmp
and
xchg
mov
xchg
mov
mov
ja
inc
jg
xchg
jg
jmp
xor
lock
mov
inc
aaa
pop
cltd
popa
mov
scas
add
cli
sahf
adc
mov
sbb
pop
bound
dec
pop
enter
xor
dec
sbb
or
mov
sbb
jb
pop
pop
dec
pop
arpl
dec
enter
mov
ja
xchg
shll
jno
add
or
cltd
dec
pop
cmp
sub
in
ret
mov
fs
gs
in
lcall
mov
icebp
mov
dec
ljmp
stos
or
imul
data16
add
aas
aam
pop
add
test
aaa
loopne
mov
add
sbb
push
xchg
sar
movl
mov
into
mov
int3
and
mov
mov
in
lds
mov
sub
xor
add
inc
sub
fcomps
in
fidivs
sbb
std
inc
pop
mov
or
push
cld
dec
iret
repz
xor
loope
pop
jb
std
cmpsb
lods
sub
sub
cmp
xchg
push
or
rolb
mov
pop
sub
xchg
xchg
pop
xchg
xor
int3
mov
xor
iret
dec
inc
xor
xchg
gs
pop
mov
cmp
mov
add
incb
dec
cmp
jle
popl
mov
inc
out
dec
call
pop
pop
inc
jbe
push
enter
pop
ret
scas
int3
sbb
rorl
jl
dec
add
popa
cmp
or
sbb
in
mov
fdiv
lods
loope
rorl
jl
dec
add
popa
cmp
or
sbb
in
mov
fdiv
lods
loopne
rorl
jl
dec
add
popa
cmp
or
sbb
in
mov
fdiv
lods
loope
push
mov
into
insb
mov
movsb
jmp
jecxz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
sub
cmp
or
sbb
mov
add
lods
sarl
in
cmp
mov
inc
cmp
or
sbb
insb
add
and
sarl
cmp
mov
inc
cmp
or
sbb
insb
add
and
imul
mov
inc
pop
push
or
jo
movsl
div
inc
sti
movsb
xor
add
inc
mov
jae
pop
mov
push
pop
jecxz
xchg
cmpb
mov
jae,pn
arpl
std
jge
icebp
push
loopne
sbb
or
or
popa
add
lods
cmp
mov
pop
or
addb
sub
cmp
lods
sbb
dec
add
leave
scas
pop
into
and
cmp
adc
mov
cmp
mov
jecxz
xor
xor
mov
cmp
loope
mov
pop
fnstsw
xlat
ret
scas
iret
pop
xchg
mov
push
pop
sar
mov
shll
mov
mov
mov
mov
inc
cmp
or
sbb
insb
add
and
sarl
cmp
fsubrs
dec
push
or
insb
insl
push
adc
outsl
pop
popa
lods
movsb
fldenv
in
loopne
loop
mov
pop
push
imul
jne
push
push
xor
mov
pushf
sahf
in
loop
cli
mov
or
arpl
jo
and
jl
dec
and
sarl
cmp
mov
inc
cmp
or
sbb
insb
add
and
sarl
cmp
mov
inc
sbb
xchg
shll
ss
int
lods
cmpsl
pop
stos
neg
and
xor
jb
xchg
sbb
xlat
sub
and
xchg
jmp
incb
int
lcall
ds
rclb
out
sbb
into
lock
ret
mov
pop
add
leave
dec
subl
idivb
inc
repnz
pushf
inc
test
sub
xchg
mov
addr16
stos
mov
xchg
mov
ds
out
mov
decl
cmpsl
cmp
call
fnstsw
xchg
xchg
cmc
jmp
push
xor
pop
mov
cmp
cmp
add
scas
push
mov
frstor
cmpl
mov
push
in
adc
cmp
fidivrl
aad
jp
cli
inc
lret
test
adc
ss
lahf
mov
ret
shrb
mov
out
inc
and
fldcw
enter
pop
jbe
aaa
jg
into
push
fidivs
jns
fwait
lahf
or
iret
loopne
jmp
and
push
mov
dec
rorl
mov
pop
lret
pop
inc
push
or
sub
push
xor
and
sub
rcl
pop
ja
cmp
push
pop
xchg
in
jge
jmpw
jp
sbb
maskmovq
testl
mov
jnp
out
sub
pusha
dec
icebp
loope
imul
push
gs
push
out
and
sub
mov
fimull
pop
movsl
rolb
add
push
xchg
hlt
push
insb
mov
call
push
fsubs
rcrb
mov
mulb
aas
push
mov
addr16
test
dec
lock
rclb
cmc
mov
mov
ficomps
pop
stc
movsl
xor
add
pop
rcll
jno
inc
in
fstl
mov
aad
and
add
pop
aam
push
add
rcll
push
mov
sbb
js
xchg
cld
sbb
stos
xlat
adcb
sbb
lret
hlt
ja
xlat
es
mov
mov
adc
scas
in
mov
fidivrs
loope
jmp
subw
popa
or
xchg
pop
add
fmull
pop
test
movsl
sub
and
negb
jecxz
test
loope
es
xor
sub
stc
inc
mov
outsl
jo
aam
out
aam
daa
daa
sarl
movsb
fsubs
out
lret
push
xchg
or
sub
pop
lea
mov
hlt
jno
inc
adc
sbb
jg
out
xchg
fnsave
sbb
les
jae
das
pusha
imul
pusha
and
popa
lods
mov
arpl
push
rclb
sub
push
imulb
sbbb
scas
cld
movsl
stos
aas
loope
cmp
mov
jle
das
lret
movsb
in
addb
xor
mov
pusha
jp
jae
ror
push
cs
aam
pop
mov
fimull
jg
and
cli
in
andl
xchg
sub
inc
mov
add
mov
imul
cli
jb
cli
fnstsw
jo
idivb
adc
lock
jb
dec
cmp
shr
adc
test
mov
inc
lret
ret
mov
pushf
mov
lods
iret
sahf
frstor
into
and
mov
nop
inc
cmpsl
inc
inc
sarb
test
xchg
jnp
es
in
pop
and
pop
sub
adc
inc
and
test
add
dec
lret
sub
add
cwtl
mov
lahf
call
xchg
mov
out
ffree
movsl
jg
ss
test
or
dec
dec
imul
push
add
mov
insb
push
sbb
mov
sahf
jno
ss
mov
and
xchg
test
mov
lcall
push
shlb
data16
pop
xchg
rcll
push
lock
sub
pusha
iret
mov
push
dec
pop
test
push
push
icebp
push
xchg
dec
sbb
mov
mov
movsb
add
in
sub
outsl
push
inc
test
ss
inc
fdivp
inc
fsubrs
push
or
enter
std
int
mull
fdivl
inc
lea
cld
test
mov
enter
pop
lret
cs
mov
fs
mov
xchg
into
mov
inc
lahf
xchg
inc
sub
adc
xchg
mov
cmp
insb
mov
sbb
sbb
add
jnp
lret
mov
lahf
cmp
pop
jns
and
add
jl
fmull
sub
aaa
jnp
iret
xchg
sub
inc
jno
test
movsb
jmp
mov
and
divl
ljmp
sub
fwait
lock
addr16
shrb
cmp
fisubs
push
mov
scas
sub
in
aaa
aam
mov
push
push
jnp
popa
xchg
sub
ljmp
jb
add
mov
lahf
inc
jno
aad
sub
add
lret
cmpsb
sbb
out
mov
xchg
pop
aam
sahf
push
popl
cltd
ljmp
loop
loopne
xchg
in
mov
fldl2t
aam
mov
fistps
mov
xor
jmp
test
sbb
push
inc
dec
ja
hlt
out
pop
aas
lea
jp
jns
xlat
push
lods
or
lret
or
inc
out
aas
pop
decl
test
gs
cld
out
sbb
loop
dec
sbb
leave
pop
xchg
xchg
add
rorl
mov
jl
int
cmp
out
add
cmp
outsb
fadds
repnz
xor
stos
inc
cltd
push
dec
add
insl
popa
inc
repz
xchg
pop
xchg
xchg
or
popa
ret
push
mov
xlat
dec
pop
adc
test
sbb
movups
mov
push
push
mov
cld
lods
sub
addb
mov
xor
lea
out
aad
jo
mov
gs
adc
sbb
xor
loopne
xor
or
and
je
inc
sbb
dec
outsl
xor
mov
cmp
cmp
cmp
sbb
popf
sub
inc
xor
add
pop
jo
mov
or
or
or
insl
imulb
mov
aas
jecxz
stc
sub
jecxz
sub
inc
imul
std
adc
imul
shlb
jmp
push
or
lcall
daa
mov
jmp
pop
out
test
das
stc
pusha
jbe
mov
rcll
sub
sbb
dec
pop
dec
ja
adc
jae
sbb
or
loope
mov
imul
xchg
cld
iret
sub
pop
lcall
mov
sar
adc
cmp
cs
aam
iret
push
bound
cli
test
push
mov
aad
mov
cmp
sarb
xchg
push
xor
add
jecxz
mov
in
jnp
loop
in
inc
pop
sub
out
sbb
pop
adcb
push
dec
pop
loop
dec
xchg
push
cltd
push
or
in
mov
enter
gs
mov
push
loope
lahf
shrl
fistps
xchg
fs
clc
dec
loopne
pop
jg
pop
pop
into
or
pextrw
cmpsb
cmp
out
and
mov
add
popf
mov
popf
hlt
pop
imul
aam
adc
in
dec
push
aam
or
xchg
movsb
inc
jge
lods
xlat
sbbb
cmp
jp
in
sbbb
mov
mov
stc
pushf
test
andl
xchg
fbstp
pop
pop
add
and
negl
xor
jmp
and
push
and
cld
in
in
arpl
push
rclb
mov
jecxz
xor
cmovg
add
fwait
call
dec
lret
mov
out
repz
mov
in
das
enter
in
clc
pop
jnp
and
repnz
push
inc
push
and
sbb
push
lret
lret
in
sbb
push
clc
add
push
add
sahf
pushf
loopne
xchg
sti
retw
xchg
out
in
cmc
leave
pushf
mov
mov
jle
sub
push
dec
jge
dec
mov
mov
pop
loop
jnp
jbe
and
mov
out
jmp
sbb
das
fstps
scas
sub
cli
jae
outsl
testl
mov
mov
or
add
ficomps
cmp
sub
loope
ffree
outsl
sbb
lock
adcl
xchg
or
pop
xor
mov
xchg
and
jae
xor
cs
mov
stos
sbb
sbb
dec
in
test
mov
xchg
cli
pop
insl
push
jmp
cltd
add
cmp
wrmsr
jne
mov
mov
stos
pop
and
mov
jmp
loope
push
mov
inc
rorl
inc
outsl
xor
sbb
les
std
pop
lods
pop
aad
xchg
inc
push
xchg
mov
mov
adc
xchg
test
xlat
fs
mov
rcll
mov
fwait
int
sbb
sub
or
inc
sbb
cmpsl
imul
mov
fmuls
pop
fldenv
mov
and
in
pop
stos
mov
out
gs
sbb
xchg
cld
rcrl
mov
inc
int3
inc
addr16
xchg
xchg
dec
sub
insb
stos
imul
or
in
scas
xor
hlt
cli
inc
scas
repz
loope
push
fldenv
dec
pop
push
sarl
movsl
adc
outsl
mov
dec
cmp
loopne
shr
jl
push
jle
cltd
mov
ds
jb
jbe
loope
mov
and
mov
sbb
pop
outsl
pusha
xchg
inc
sahf
sub
mov
mov
negb
adc
xor
cmp
mov
in
aam
inc
mov
pop
mov
aad
mov
adc
addr16
loop
test
in
scas
in
je
mov
test
sub
arpl
faddl
mov
sub
inc
cmpb
into
xchg
sbb
sub
test
mov
sub
daa
push
pop
rol
nop
cmp
outsb
mov
jecxz
push
lock
xchg
mov
add
test
xorb
sub
or
repnz
jg
les
lret
repz
xor
rcll
jecxz
clc
and
ret
push
push
add
pop
mov
mov
inc
stos
sub
cmpsb
nop
aaa
cld
fidivrs
mov
in
enter
ret
pop
incb
ljmp
dec
lret
mov
aam
leave
mov
das
fistps
mov
mov
pop
pushf
fwait
push
scas
push
mov
add
add
popa
mov
mov
gs
in
into
pop
arpl
add
jg
mov
jp
cmp
jbe
dec
stc
xchg
sbb
mov
cltd
xchg
das
int
sbb
xchg
movsl
xlat
jecxz
adc
cmp
bound
testl
or
pop
sahf
lcall
mov
cmp
sbb
mov
dec
fldl
xchg
jp
hlt
pusha
out
push
push
mov
xchg
jne
mov
mov
sub
sahf
pushf
shll
add
pop
xchg
add
lahf
mov
jg
xchg
out
pop
ret
lods
ficompl
stc
dec
aaa
mov
scas
test
stc
dec
jl
add
sti
mov
inc
js
or
dec
mov
rcrl
sbb
mov
bound
imull
sbb
xlat
pop
cmp
fwait
in
sbb
cld
xor
add
pop
subl
jb
in
je
mov
cmpb
cmp
jnp
sub
loope
sahf
scas
in
jp
mov
xor
in
jecxz
in
dec
loop
cmovae
das
lret
scas
sub
inc
adc
jns
inc
add
aas
loope
out
jg
divb
lods
push
add
mov
jne
and
imul
and
rcr
insl
inc
cltd
pop
xorb
leave
aas
fs
mov
sbb
stos
neg
cmp
jbe
cmc
sarl
xor
mov
lahf
push
sbb
incb
cs
sub
hlt
addr16
add
xlat
mull
add
or
sub
into
dec
sub
jbe
mov
mov
xchg
xor
push
stos
mov
popa
xor
dec
pop
dec
in
arpl
xorl
mov
aas
daa
mov
xor
cmp
xlat
sbb
stos
mov
pushf
sbb
js
out
ret
dec
xchg
push
push
push
inc
lret
xchg
adc
push
out
stos
js
mov
scas
movsb
roll
mov
cli
inc
jbe
sti
mov
inc
test
outsb
cmp
mov
mov
jl
cmp
xor
mov
inc
push
or
in
mov
call
jecxz
sub
aad
bound
es
push
insl
arpl
mov
lock
enter
mov
insb
leave
test
mov
stc
loop
mov
adc
cmp
push
lods
call
inc
sbbl
repnz
inc
pop
icebp
or
mov
and
in
jno
rcrl
mov
mov
lcall
scas
je
bound
push
xlat
xor
mov
mulb
sti
ljmp
or
xor
cs
mov
test
xor
data16
mov
iret
sbb
arpl
outsl
cmc
jmp
inc
add
or
mov
fisubs
insl
and
pop
xor
xchg
std
xchg
xor
mov
ja
jg
push
dec
imul
popa
aaa
incb
push
mov
sarl
push
add
hlt
fnstsw
lret
enter
stc
xchg
insb
shrl
adc
lds
cmpsl
xor
mov
faddl
sub
jno
push
cmp
push
add
mov
popa
fidivrl
jne
jmp
jno
add
adc
sbb
sub
rcr
dec
jnp
imul
in
loop
std
and
mov
aas
push
mov
jg
mov
les
mov
mov
and
lea
mov
dec
xchg
lret
jecxz
push
xchg
clc
leave
cmp
xchg
mov
and
outsl
inc
aam
xor
mov
pop
flds
jge
mov
dec
je
fsubrp
push
xor
aam
mov
cmp
add
mov
pop
aaa
or
push
scas
sub
test
fidivrl
inc
cmp
movsl
imul
mov
fisubrl
xor
mov
and
into
jg
popf
xor
je
ret
mov
mov
mov
imul
lret
out
cld
orl
mov
push
aaa
xchg
push
cmp
iret
xor
pop
mov
mov
int
hlt
sbb
pop
xor
out
inc
mov
addr16
jg
popa
test
hlt
dec
sbb
cltd
xchg
fs
mov
fwait
push
cld
lea
mov
lods
fs
pushf
rcrb
cmp
movsl
es
cmp
loope
mov
sub
mov
pop
xchg
fwait
and
xorb
stos
or
std
lcall
xchg
mov
out
adc
das
dec
jecxz
int
pop
inc
mov
outsl
mov
jecxz
push
add
lret
pop
bound
pusha
add
mov
rclb
xor
ret
sub
notb
cmpsl
cs
pop
push
shlb
imul
ret
xchg
and
decb
pop
lcall
pop
test
mulb
and
js
add
pop
popa
and
fsubrp
jecxz
paddsb
notl
adc
push
mov
mov
and
orb
dec
fucomi
mov
stc
imul
rcrl
movsb
push
or
cmpsl
adc
and
push
test
ret
orb
push
pushf
push
movsb
mov
daa
adc
jbe
mov
iret
inc
rolb
cs
and
in
dec
xchg
dec
push
mov
cmp
bound
mov
shlb
jnp
push
pusha
inc
aas
repnz
cmp
arpl
fwait
dec
cli
fsub
jp
jo,pn
lret
add
mov
int3
dec
fdivs
cmpsb
insb
in
adc
push
sbb
int3
dec
scas
movl
sbb
xor
sahf
call
push
add
xchg
shll
mov
jae
clc
sarl
cmp
mov
cmp
xchg
push
or
push
cld
lods
iret
pop
jp
sub
push
test
inc
dec
cld
jae
adc
cli
mov
stos
rolb
or
sub
outsb
movsb
xor
lods
dec
cli
push
roll
add
jns
movsb
pop
call
js
jmp
les
pop
inc
pop
mov
outsl
stos
sub
push
sahf
psllw
xor
rclb
add
push
rorb
dec
inc
daa
ljmp
sbb
adcl
xchg
into
xor
bound
adcl
add
xor
pop
ljmp
xchg
stos
sahf
adc
iret
test
jne
xlat
jb
lret
loope
dec
fidivrs
jno
mov
xor
cmpsl
pop
mov
jno
ret
sbb
jo
sub
aaa
cmp
and
cld
dec
or
in
cmp
popa
test
push
aad
aaa
add
sub
bound
add
sbb
in
mov
push
mov
fisubl
imul
jp
sub
mov
test
inc
cmpsl
test
or
mov
in
xchg
jmp
or
sahf
sbb
jae
push
jo
lret
icebp
sbb
addr16
popa
sti
mov
jg
and
rdpmc
dec
xchg
inc
icebp
adc
xchg
int3
rorl
leave
jge
jne
mov
inc
mov
pop
fisubrl
adc
in
xchg
lods
jp
jno
push
out
sbb
xchg
pop
push
pushf
cmp
outsl
mov
and
xchg
std
cmp
test
jle
push
inc
roll
fbstp
lock
rep
inc
std
dec
popa
in
push
pop
js
cmc
jb
ljmp
xchg
andl
mov
cmp
push
mov
movsl
dec
inc
divb
ja
xchg
iret
nop
push
cmp
add
mov
std
arpl
or
xchg
jle
outsl
xchg
pop
inc
mov
or
dec
mov
jbe
xchg
sbb
sbb
mov
inc
mov
call
movsb
mov
sbb
dec
mov
mov
out
nop
or
and
mov
pusha
inc
movsl
pop
mov
pop
and
je
loopne
xchg
ret
lods
test
sbb
test
xlat
mov
or
lods
icebp
sub
out
cmp
pop
dec
pop
push
fdivs
mov
xchg
aaa
pop
aaa
loopne
lcall
fisubrs
mov
adc
pop
gs
adc
out
xchg
jnp
outsb
out
fimull
lahf
jge
sbb
jae,pt
out
mov
or
push
jle
loop
lcall
pop
rorl
stos
sub
in
sbbb
push
add
sbb
mov
and
int
ljmp
cmp
push
inc
cmp
pop
mov
mov
ss
adc
lock
xchg
aad
insb
sbb
dec
test
mov
js
cmp
ja
lods
ja
fcompl
divb
xchg
xor
mov
ss
rcr
pushf
jge
das
scas
xor
sub
push
pop
sub
mov
jae
xor
mov
fwait
popf
sbb
push
adc
daa
pop
adc
push
int3
dec
mov
in
or
and
pop
es
push
adc
cwtl
imul
and
add
mov
es
pop
sbb
jmp
enter
stos
mov
dec
fcomps
out
pop
push
and
fs
lcall
jle
mov
mov
dec
pushl
or
adc
push
mov
imul
dec
xorb
pop
jne
jecxz
and
xor
sti
aas
fadd
mov
stc
mov
ret
in
xor
sub
sahf
push
outsb
test
cmp
sbb
xor
jmp
sub
enter
push
dec
jbe
insb
cs
mov
imul
ret
dec
sub
or
or
das
xchg
fwait
stos
push
fistpl
cmp
cwtl
and
push
mov
xchg
into
insl
aam
xchg
push
inc
les
dec
inc
pop
xchg
icebp
iret
inc
lods
xchg
rolb
add
mov
daa
fisttps
push
mov
mov
out
mov
inc
xchg
ficoml
and
je
shrl
aaa
jae
lcall
xor
into
cmp
adc
cli
mov
push
jp
inc
call
inc
iret
pop
jb
fwait
pusha
mov
mov
push
push
insl
cli
mov
add
mov
shlb
jl
cmc
inc
mov
push
gs
push
mov
imul
fldl
cld
insl
sbb
add
sbb
cs
cmpsb
push
test
sahf
fcoml
cmp
inc
imul
xor
int
arpl
in
mov
je
lahf
xchg
fs
fstpl
popa
pop
mov
inc
jge
xor
mov
push
push
or
add
and
sarl
cmp
mov
inc
cmp
or
sbb
insb
add
and
sarl
cmp
mov
inc
mov
jno
add
and
xor
pushf
icebp
in
cmp
mov
inc
cmp
or
sbb
insb
add
and
sarl
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
call
mov
call
pushl
push
push
call
add
push
call
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pushl
addb
repnz
out
mulb
sub
and
add
bound
mov
xchg
addb
rol
in
bound
and
cmp
add
jb
push
bound
inc
inc
push
or
ret
fdivrs
lock
dec
add
jo
and
add
and
repz
jns
cmpsl
sbb
push
roll
mov
mov
test
lods
jae
mov
out
jge
out
imul
int
fsubrp
in
jmp
cmp
loop
mov
xchg
lret
add
push
xchg
sbb
xor
xor
adc
cld
lea
sbb
mov
repz
rcl
adc
dec
daa
mov
ret
std
add
addr16
out
inc
lods
mov
pop
insl
outsl
inc
jge
shll
adc
jne
repnz
sbbl
aaa
iret
aaa
dec
mov
push
jg
sbb
push
mov
fidivl
les
push
pop
mov
mov
xor
cmpsb
loop
sarb
shlb
mov
adc
adc
mov
es
mov
int
in
out
pushf
push
xchg
pop
cmpsl
mov
push
inc
mov
popa
sbb
add
in
loope
out
fwait
mov
mov
or
push
ja
outsb
xor
cmp
add
rol
inc
loop
ret
out
mov
loop
rcl
ret
xor
and
adc
add
bound
push
inc
inc
mov
mov
xor
loop
rcl
ret
xor
and
adc
add
bound
push
inc
inc
mov
data16
cmp
jmp
jnp
std
jno
xchg
pop
xor
xchg
icebp
fnstcw
mov
stc
mov
ss
add
stc
fdivl
stc
outsb
fbstp
push
mov
push
dec
push
sub
leave
aad
lcall
bound
dec
mov
cltd
jecxz
jmp
in
ds
sar
pop
add
ret
sahf
xchg
push
xor
gs
mov
push
fneni(8087
cmpb
mov
lret
mov
fucomi
jmp
addr16
enter
insb
jne
lret
jnp
xchg
push
push
push
mov
add
mov
inc
outsb
outsb
dec
arpl
sbb
push
mov
adc
lcall
cmp
mov
movsb
in
shll
mov
sti
lods
insl
xchg
and
into
popf
sbbb
pusha
lock
add
pop
jmp
ss
cmp
repnz
xor
or
jp
and
cmp
mov
jmp
movsb
push
insl
push
daa
cmp
movsl
push
repz
fdivl
push
out
es
adc
data16
movsl
push
into
out
std
xchg
push
sub
testl
mov
mov
cmp
pop
sbbb
add
xor
cmp
cmp
adc
push
in
fdivr
or
dec
hlt
sub
mov
filds
sub
adc
aaa
pushf
push
movsb
xor
fcoml
icebp
sbbl
xor
leave
xor
enter
adc
and
sub
xor
ret
sti
mov
sti
adc
push
iret
push
pop
pop
popf
orl
pop
loop
out
arpl
or
les
pmulhuw
imul
xor
sti
ljmp
ret
aas
dec
inc
xor
mov
dec
pmulhuw
pop
nop
xor
pusha
inc
gs
push
mov
ret
jbe
mov
iret
mov
aas
and
lock
xchg
cmp
insb
movsl
in
fisubrl
cwtl
call
lret
mov
jo
cmp
or
or
pusha
lods
daa
xchg
jnp
in
aas
pop
pcmpgtd
xchg
pop
cmpsb
cmp
or
test
adc
test
icebp
mov
sub
test
rcr
pushf
data16
mov
mov
mov
inc
pop
pop
cmp
hlt
xchg
xchg
lea
xor
imul
movsl
push
stos
ds
or
inc
out
imul
lock
and
xor
mov
cmpsl
hlt
xchg
xchg
mov
mov
dec
fstpt
mov
out
insb
xor
xchg
cmpsl
sbb
adc
sbb
pop
imul
push
sub
iret
cmpsl
out
js
lods
std
in
jne,pt
or
dec
test
cmp
addr16
jbe
mov
stos
mov
loop
push
lea
pop
xchg
push
rcll
mov
cltd
in
imul
or
push
sub
pop
test
test
mov
sbb
dec
cltd
pop
mulb
test
hlt
dec
enter
sbbb
aaa
cmpl
xchg
lahf
enter
in
lds
icebp
and
xchg
jns
mov
xchg
push
shrb
in
pop
inc
xor
or
cli
mov
push
and
and
aas
add
mov
sub
mov
inc
pop
fwait
mov
lock
int3
cmpsb
cmp
cmp
lahf
sbb
sti
add
test
daa
stos
pop
push
jnp
cmp
inc
mov
xor
lahf
das
and
daa
rol
jne
xchg
xor
lods
jnp
xchg
repz
push
pop
jbe
clc
lret
lcall
push
ret
cmp
mov
icebp
subb
in
jno
data16
cwtl
sbb
mov
pop
clc
mov
adc
dec
in
mov
inc
fsubs
mov
lahf
iret
xchg
mov
push
dec
es
cwtl
packssdw
mov
or
adc
xor
xchg
push
sbb
shll
xchg
dec
mov
test
fwait
xchg
add
push
movsb
rorl
or
mov
dec
jno
fldl
mov
ds
and
mov
xorl
negb
stc
nop
outsl
gs
or
cltd
pop
out
jb
xor
je
mov
pop
jecxz
lcall
dec
adc
dec
jo
sbb
jmp
popf
addr16
mov
sti
sbb
popa
mov
add
or
scas
pop
mov
and
in
and
sbb
lea
scas
rclb
pop
lds
mov
cmp
mov
movsb
cmp
mov
cmpsb
jnp
ret
pop
lahf
rcrl
sub
mov
scas
pop
sbb
or
in
stc
iret
adc
mov
inc
movsl
xchg
sub
test
pop
and
mov
inc
fwait
xor
cmpb
jo
sbb
pushl
pop
enter
xor
out
outsl
inc
sbb
scas
mov
xchg
or
aaa
mov
mov
sti
dec
jno
popf
mov
ds
sbb
mov
inc
outsb
jmp
rolb
xor
sub
pushf
jno
sub
push
push
inc
pop
mov
xchg
cmc
inc
xor
inc
fcompl
scas
repnz
call
push
dec
add
pop
je
push
pop
cmp
clc
push
mov
mov
mov
sub
add
jle
xor
out
repz
inc
add
or
inc
pop
pop
dec
movb
pop
fsubrl
repnz
jae
repnz
andb
mov
push
xor
in
xlat
shr
or
hlt
xchg
iret
pop
in
xchg
pop
data16
mov
lods
add
mov
xchg
leave
or
pop
and
aad
gs
rcll
xor
aam
or
sub
dec
icebp
std
jle
jno
in
scas
dec
cwtl
les
mov
ss
jp
mov
cmp
fwait
cmpsb
sbbb
jp
pop
inc
mov
jb
icebp
cmp
push
push
sbb
out
dec
and
pop
dec
fiadds
adc
dec
shrb
xor
scas
dec
outsb
out
or
pcmpeqw
inc
scas
dec
negl
sbb
stos
rol
sub
mov
pop
and
pop
xlat
rcl
in
sub
movsl
fmuls
fidivrs
int3
and
popf
lock
mov
dec
push
rolb
jle
cmpsl
pushl
add
sub
jmp
loop
xchg
jae
pop
pop
jp
jae
sbb
xchg
inc
inc
std
push
lock
cmp
jnp
shl
and
lods
cmpsl
mov
dec
add
adc
test
ljmp
pop
scas
add
pop
or
fcomps
xor
pusha
sahf
pop
add
push
dec
mov
mov
and
sub
call
jge
pop
icebp
mov
das
ss
mov
mov
and
pusha
les
and
rcl
into
dec
js
sub
or
mov
fsubrs
ficoml
mov
shr
aam
and
jmp
movsb
xchg
fnsave
push
jae
out
cmp
sbb
dec
ljmp
add
pop
cs
xchg
mov
ds
mov
call
or
cli
das
push
mov
pop
into
icebp
push
fcoml
push
mov
or
pop
pop
lcall
adc
push
cmpsb
jle
das
in
cwtl
popa
mov
cmp
das
add
lea
adc
pop
or
pop
icebp
sub
out
and
jnp
scas
or
ja
in
mov
insl
lods
xor
repnz
pop
test
xchg
lds
cmp
and
push
loopne
lods
aaa
sbb
addr16
xchg
cmp
jns
sub
sub
push
rcl
push
sbb
aaa
ljmp
push
std
add
xor
movsb
outsb
ja
test
clc
pusha
out
mov
cwtl
inc
and
addr16
test
cmp
imul
dec
sbb
addb
test
aaa
jnp
jae
imul
jecxz
imul
insl
mov
mov
adc
imul
into
mov
cmpsl
rcrb
xchg
in
jae
jmp
jbe
inc
je
push
repz
jb
push
cmp
shrb
xor
arpl
add
pop
add
mov
xchg
ja
push
in
jge
sarl
and
lahf
inc
mov
pop
jnp
adc
push
jmp
xchg
sbb
adc
jmp
loope
in
lret
mov
test
mov
lds
sbb
xor
adc
fisttpl
popa
cmp
shrb
subb
adc
enter
or
hlt
gs
push
sarb
mov
add
cmpsl
cmp
dec
stc
jge
or
into
sub
jp
in
das
push
in
cmp
sbb
loope
or
into
loop
xor
xchg
rcrl
dec
call
into
pop
push
ficoml
orb
mov
out
je
jmp
imul
scas
in
into
jae
inc
pop
int
int
xor
push
sbb
faddl
or
leave
xor
mov
clc
stos
xchg
insl
cmp
ret
push
dec
xchg
into
add
push
fcompl
fwait
insl
into
jg
out
jecxz
out
outsl
lods
dec
xor
ss
sbb
cmp
dec
xor
int3
rcrl
aam
cmpb
mov
sub
fnsave
or
pop
jnp
inc
xchg
xchg
xchg
xchg
stos
push
js
mov
lahf
jge
mov
sbb
sub
cli
inc
fsubs
mov
mov
xchg
xchg
cmp
pop
movsb
aad
mov
stos
mov
xor
scas
ds
jo
shrl
fsts
arpl
lock
and
cltd
subl
jge
xchg
sub
mov
cld
or
jge
test
ret
jo
ljmp
add
aas
aam
dec
mov
add
sbb
insb
xchg
mov
popf
mov
sub
or
gs
sar
sub
jnp
mov
and
mov
imul
mov
mov
push
pusha
pop
xor
push
and
xchg
enter
xchg
xchg
mov
pop
gs
mov
add
dec
and
mov
xor
mov
add
shl
dec
add
lea
loope
shl
or
das
mov
or
and
pop
movsb
sbb
aad
jb
shll
or
xchg
aam
sub
xchg
cmc
or
enter
ret
mov
std
dec
dec
push
out
pop
insb
cmpl
cmc
and
xorb
cmp
jg
icebp
rcrl
mov
inc
lock
insl
mov
popf
mov
pop
jae
and
test
out
mov
push
dec
mov
dec
ljmp
add
ds
push
push
out
popa
mov
dec
push
jbe
cmp
andl
nop
mov
add
ds
call
cmp
test
ljmp
cwtl
mov
mov
adc
and
cmp
jle
imul
and
mov
xlat
push
fmuls
jge
sub
js
test
push
ja
cmp
out
lahf
xchg
icebp
rcll
iret
pop
add
jbe
cmp
and
jg
adc
add
push
daa
dec
push
pop
xor
adc
outsl
fildll
inc
das
push
xor
cmp
repz
bound
xchg
xchg
xchg
or
mov
jp
fdivrl
fisttpl
push
movl
sub
orb
mov
xlat
and
lret
fdivrs
cmp
je
int3
test
and
stc
int
dec
or
dec
push
dec
pop
sbb
mov
int3
dec
cmpsb
push
fcompl
stos
sub
mov
push
xchg
cmp
push
loop
inc
xor
cmpsl
pop
rcrl
roll
jecxz
out
pop
add
sar
movsb
pop
inc
int3
sub
test
xchg
cmpsl
lret
in
icebp
nop
lahf
mov
adc
in
fs
sub
cld
insb
in
and
adc
gs
mov
insb
jp
mov
or
xor
mov
leave
inc
enter
in
sti
push
push
adc
mov
and
and
mov
iret
adc
mov
fdivrl
cltd
sbb
xchg
jns
add
mov
jb
xorb
fs
js
lods
test
sbb
das
sub
mov
sbbb
ret
pop
push
fcomi
movsl
push
stos
and
aam
fcmove
xchg
fiaddl
popa
mov
popa
arpl
addr16
out
cli
inc
dec
gs
mov
sbb
ret
dec
push
dec
jmp
ret
dec
jo
mov
ret
xchg
inc
outsl
xchg
shll
cmp
jge
mov
aam
sbb
addr16
mov
xchg
pop
shrb
xchg
sub
repnz
sub
es
xor
add
add
filds
cmp
mov
popf
or
sbb
cmp
adc
adc
lock
das
mov
mov
pop
scas
sub
loopne
pop
je
fidivrl
add
lods
add
sub
insb
pop
inc
fcoms
pop
out
jo
enter
push
push
fsts
cmp
push
mov
rclb
orl
mov
call
mov
cmc
mov
inc
jns
movsb
movntq
out
fmull
pop
pop
sbb
jno
jmp
stc
adc
fildll
or
pop
adc
mov
xchg
jbe
or
cmp
icebp
cltd
xchg
add
loop
and
dec
outsl
sbb
dec
mov
out
in
adc
aas
mov
cli
add
shll
or
iret
iret
test
popf
pop
xchg
xchg
xchg
imul
iret
mov
test
stc
sub
mov
in
sub
mov
cs
pop
ret
cmp
fnstcw
mov
sub
xchg
movsl
bound
jl
fistl
pop
and
fisubrl
cmpsb
or
rcrb
or
cmp
lods
xchg
jge
into
xor
stos
nop
mov
or
outsl
pop
cmc
decb
jmp
xor
xchg
jle
mov
dec
loopne
sbb
stos
mov
fimuls
rorl
gs
or
cmp
xchg
cmpl
xchg
and
pop
inc
outsl
jo
call
mov
sti
push
push
mov
std
int3
std
jg
mov
aam
ss
pusha
mov
and
lods
pop
shr
stos
xchg
movsb
cs
sbb
stos
inc
icebp
xchg
insb
jge
arpl
cmp
aam
das
xchg
sub
mov
mov
mov
cld
sarb
mov
add
lods
push
mov
sbb
xchg
cmc
into
cs
dec
sti
cmp
mov
fnsave
sbb
in
jp
and
jae
adc
or
jmp
mov
mov
testl
ja
cmovb
js
nop
outsb
xor
jmp
int
push
stc
add
cmc
mov
jbe
into
sbb
mov
insb
and
sbb
mov
imul
sbb
lds
add
pop
mov
std
dec
idivl
mov
shl
jge
je
xor
push
xchg
xchg
bound
push
jecxz
in
out
call
sbb
mov
cmp
fistps
sahf
ds
popa
or
sahf
ret
xor
inc
cmp
dec
call
outsb
jns
push
dec
dec
nop
jbe
call
sarl
cmp
hlt
inc
ljmp
mov
or
pop
ja
rclb
paddsw
test
jge
add
jmp
jnp
or
daa
mov
push
and
dec
pop
lea
mov
mov
push
test
outsb
xor
cld
movsl
sub
mov
sbb
lds
mov
sbb
lods
add
addr16
cmp
xchg
cmp
xchg
int3
dec
pop
sub
cld
shrl
lods
adc
add
mov
mov
xor
iret
mov
mov
ljmp
add
xchg
sub
mov
add
fdiv
sbb
lea
mov
lock
dec
xchg
notl
push
data16
arpl
std
popa
jno
or
es
pop
fidivl
int
shrb
push
dec
push
push
inc
or
loop
pop
or
aaa
push
inc
xchg
sti
leave
cmp
outsb
lods
nop
shrb
test
pop
in
and
aad
mov
push
in
pop
shrb
xchg
or
add
dec
xchg
ss
mov
fdivrs
add
mov
sub
ret
fisubs
jne
cmp
sahf
pop
int3
fdivl
loop
adc
outsl
jmp
pop
sbb
jne
fwait
nop
push
inc
inc
test
dec
sub
and
cmp
je
sahf
jecxz
gs
push
and
int3
mov
je
mov
into
mov
inc
leave
fstpl
mov
sbb
xor
sub
mov
enter
dec
arpl
jb
pop
mov
sarb
fs
add
icebp
or
mov
push
jmp
dec
sub
pop
or
xchg
inc
mov
fs
pop
out
test
sub
ja
pop
jbe
adc
or
jp
jnp
jle
sub
rorl
mov
push
and
jo
sbb
or
pop
data16
int
or
loop
xchg
or
out
jbe
xchg
imul
movsl
popf
es
lock
cwtl
lock
movsb
test
push
xchg
std
add
mov
movb
sahf
xchg
insb
js
repnz
lods
ret
mov
testl
jb
dec
mov
push
in
jo
sub
inc
cmp
xchg
outsb
mov
sub
scas
sahf
sub
lods
inc
outsl
cmp
mov
fsubrl
clc
or
or
cmpsb
cmpl
dec
sub
cmp
test
jne
inc
in
sbb
arpl
and
mov
add
jne
mov
mov
jmp
hlt
push
outsb
and
test
aad
in
pusha
aaa
jne
adc
arpl
aas
xor
adc
imul
loopne
cmpsb
or
sub
sub
lahf
push
inc
xorl
inc
xchg
sbb
pop
xlat
popf
test
mov
mov
icebp
mov
xchg
fnsave
mov
push
pusha
push
jmp
add
jl
negb
lahf
xor
mov
mov
jle
dec
repz
stc
repnz
jg
lods
inc
fsub
inc
xchg
dec
cmp
sbb
jg
xchg
movsl
add
sbb
rorb
cmp
jmp
add
cli
ret
fcoms
enter
pop
sub
xor
test
repz
cwtl
push
pop
cmp
lods
mov
out
pop
sbb
cmp
into
movsl
push
std
rcr
or
adc
sbb
inc
ror
fsubs
repnz
in
push
addr16
popa
mov
cld
les
cmpsb
xorl
adc
lock
aas
mov
in
popa
pop
cmpl
xlat
popf
push
sub
mulb
push
inc
push
mov
arpl
in
in
popa
sbb
pusha
mov
mov
imul
sbb
pop
cli
jbe
xchg
mov
inc
fisubl
pop
add
mov
fmull
or
aaa
ficompl
in
adc
xchg
pushf
loop
lock
sub
mov
loopne
gs
mov
outsb
dec
sub
pusha
mov
inc
cwtl
popl
xlat
jae
popa
push
lods
dec
cmc
xlat
xchg
shlb
cld
imul
das
test
fxch
jg
mov
push
sbb
cs
filds
dec
mov
jp
mov
mov
or
cs
mov
jle
out
inc
fstpl
rolb
adc
mov
or
test
fdivrl
and
fisttps
test
addb
in
dec
mov
mov
lods
jno
adc
xor
stc
imul
popa
and
and
pop
rorb
dec
mov
mov
loopne
mov
pop
mov
fcmovb
pop
mov
fstpl
lock
add
mov
mov
int3
sub
jo
aaa
ret
adc
sbb
popl
fstps
movsb
fsubrs
jl
sbb
jle
sub
in
rcrb
xchg
orl
mov
outsb
add
xor
jp
loopne,pn
add
jle
lock
gs
hlt
jl
pop
cltd
ljmp
lcall
addr16
iret
mov
addl
cmpl
repnz
arpl
es
test
hlt
pop
gs
out
jae
dec
in
in
mov
das
cmp
lods
xchg
sahf
xor
loop
rcl
ret
xor
and
adc
add
bound
push
inc
inc
mov
mov
xor
loop
rcl
ret
xor
and
adc
add
bound
push
inc
inc
mov
mov
xchg
repnz
rcl
ret
ret
and
sbb
push
or
jnp
push
pop
jb
stos
push
mov
jbe
ret
repnz
push
inc
add
int
mov
or
sbb
xchg
mov
test
test
popa
and
fs
xor
inc
je
fs
mov
mov
xchg
movsb
in
hlt
aam
hlt
aam
sbb
pusha
xor
and
es
inc
je
fs
lods
mov
in
ret
and
aas
daa
push
sbb
xor
push
cmp
hlt
enter
in
sbb
add
int3
dec
int
clc
daa
adc
sbb
test
or
xor
sbb
cli
sti
fs
fdivs
sbb
or
stos
pop
cmc
out
int3
mov
push
pop
jmp
fwait
icebp
xor
out
je
and
jnp
dec
pop
test
adc
adc
pop
cli
add
dec
test
add
mov
jnp
dec
loopne
mov
xor
aam
les
int3
adc
into
push
jne
leave
daa
lods
loope
imul
pop
jg
and
pushl
lret
adc
movsb
movsb
jbe
bound
xchg
test
out
hlt
int
cmp
sub
insb
pop
inc
outsb
dec
xlat
xchg
shl
loope
lock
mov
add
xor
or
adc
sbb
or
xchg
lret
nop
aam
mov
pusha
xor
inc
push
popa
add
inc
xor
push
adc
xchg
xchg
out
hlt
aam
and
xor
add
adc
fs
je
inc
je
movsb
xchg
mov
test
hlt
aam
and
xor
add
adc
fs
je
inc
je
movsb
xchg
ja
fnsave
cld
cmpsb
lret
pop
fcomps
cmp
cli
sub
jae
movsl
les
cltd
imull
jle
inc
mov
and
or
cmp
ss
push
mov
add
inc
dec
mov
mov
pop
mov
push
dec
inc
dec
push
push
ss
or
int3
mov
cltd
jns
roll
cld
loopne
icebp
cmp
mov
mov
adc
push
in
fildl
xlat
mov
int3
jo
xor
xchg
sub
mov
sbb
fwait
push
sbb
mov
mov
cmp
push
sbb
fs
jmp
cmp
es
xor
popf
inc
mov
xor
mov
jno
xchg
push
jns
jbe
adc
call
xlat
out
sbb
aad
outsb
mov
add
leave
xchg
scas
mov
jmp
pusha
loope
addl
dec
xchg
repnz
movsl
and
mov
test
mov
pop
ss
adc
popa
jl
shl
popf
rorb
mov
mov
fistps
pop
jno
roll
in
cmpsb
add
cmp
push
dec
shlb
adc
mov
bound
sub
push
mov
jg
mov
mov
mov
test
jge
sub
jge
ficoml
add
dec
idivl
sub
mov
mov
lods
rcl
aaa
mov
js
arpl
mov
scas
adc
sub
jle,pt
xchg
movsb
cmp
sub
inc
jb
and
flds
pop
call
add
sub
add
in
push
add
sub
les
pusha
into
dec
jl
scas
dec
xor
xchg
sbb
test
and
fbstp
or
sbb
pop
stc
or
jp
mov
adc
rcl
pop
lods
xchg
dec
in
int3
push
cmpb
loopne
cmpsl
mov
movsl
cltd
mov
inc
or
hlt
xor
jb
xor
mov
aam
cmp
sbb
mov
lret
orb
cmp
pop
jl
les
das
xchg
pop
sbb
mov
jae
movsb
mov
xor
pop
dec
les
rol
mov
shl
mov
ja
js
inc
mov
xchg
and
into
xchg
repnz
push
lret
push
int3
cltd
pop
mov
inc
jb
repnz
jne
aad
stos
ret
fnstcw
loope
mov
movsl
hlt
sub
fs
cli
fwait
rclb
mov
and
div
pop
insl
push
mov
leave
aad
adc
pop
push
push
js
push
cli
cli
sbb
push
xlat
jecxz
arpl
adc
fsubs
aad
fcoms
fcoml
cmp
mov
add
ds
jecxz
push
or
sti
popa
lods
inc
test
cmp
dec
inc
adc
lea
add
inc
lea
adc
or
push
pop
enter
add
test
scas
mov
rcr
pop
sbb
xlat
add
xor
mov
fimuls
jmp
test
ficomps
lahf
outsb
cmp
xchg
cltd
xchg
push
lea
pop
and
or
inc
inc
fsubs
popa
fmull
pop
jno
stc
iret
add
rcrb
aad
cmp
lods
cmc
or
iret
fsubl
inc
add
add
repz
out
fdivrs
mov
ror
and
and
xchg
js
dec
xor
xchg
movsb
popa
lock
pop
mov
push
iret
xchg
pop
mov
or
add
cwtl
push
imul
cs
outsl
les
in
ss
call
push
push
mov
jb
add
cwtl
out
xchg
shr
lahf
daa
das
jno
add
adc
cmc
insb
pushf
imul
notb
jnp
mov
mov
dec
sub
std
or
pop
out
gs
mov
cs
or
jle
test
or
or
enter
imul
pop
sbb
movsb
repz
loop
and
cmpl
cmp
popa
mov
jne
dec
fimuls
cmpsb
adc
push
xlat
add
xor
dec
lods
stos
movsl
popf
cmc
pop
inc
jno
xor
fldcw
fs
mov
pop
adc
imul
aam
test
in
test
lods
dec
pop
mov
ds
jl
xchg
pop
mov
iret
loop
ret
push
xor
jb
pop
ds
dec
push
dec
insb
push
fs
and
sar
sub
xor
repz
in
mov
push
fbstp
xchg
lcall
fdivs
mov
decb
int3
bound
push
and
mov
mov
cmp
mov
bound
sbbl
roll
out
add
dec
je
cwtl
out
into
das
jbe
nop
rcrl
dec
or
xorb
push
xor
pop
dec
mov
sbb
iret
sbb
repz
das
andl
or
out
xor
and
pop
or
push
out
lret
lods
rorl
in
jmp
jge
mov
scas
out
cmpb
xchg
jmp
test
es
pusha
lret
das
repz
xchg
cs
inc
push
iret
repz
gs
push
push
xchg
popa
call
add
imul
shll
out
std
cs
pop
std
dec
cmpps
jno
pop
aaa
hlt
mov
pop
popf
sub
ljmp
mov
bound
sbb
sub
fsts
je
cmpsb
cs
vmaxpd
jo
icebp
ja
out
jmp
and
ljmp
inc
into
test
xor
insl
and
lcall
inc
jo
jle
and
orl
pop
aaa
ret
push
xchg
ret
dec
push
lcall
test
out
and
sbb
pop
shr
shll
push
data16
pop
push
pop
jl
cmp
popf
nop
pmulhuw
sbb
andb
lock
and
push
in
call
sahf
addb
ja
ret
and
fs
call
inc
lea
push
das
ljmp
mov
daa
mov
repz
popl
ss
mov
xchg
jbe
mov
cltd
repz
mov
push
data16
shrl
out
fucom
ficompl
mov
fs
pop
and
xor
lret
sbb
rorl
in
lret
lock
rolb
gs
fisubl
leave
sbb
and
pop
movsb
dec
icebp
imul
jecxz
mov
pusha
xor
arpl
inc
push
fildl
push
in
subb
into
xor
iret
je
sbb
shl
addr16
stos
mov
jo
mov
scas
insl
jnp
adc
cltd
stos
jno
jae
push
xchg
mov
sbb
fiadds
inc
js
stos
enter
push
faddp
xchg
push
jmp
mov
fbld
movsl
mov
test
and
add
mov
push
outsb
loopne
mov
jg
clc
aaa
mov
sbb
aas
stc
jge
dec
pushf
nop
repnz
cltd
or
fimull
pop
rcrb
loop
mov
mov
imull
xchg
mov
or
mov
push
mov
xor
inc
cmpb
adc
stos
fwait
mov
dec
push
mov
pop
mov
dec
sbb
jns
pop
es
or
pop
push
mov
pop
ror
and
sub
cld
jb
cmp
jle
or
rcrl
mov
loopne
adc
jmp
cmp
xchg
loopne
jle
push
fs
inc
inc
cmp
ret
cld
fwait
mov
push
test
jb
cmp
test
fs
in
pop
ja
pop
out
out
fs
lahf
cmp
lds
mov
dec
xchg
fld
enter
mov
inc
dec
adc
jno
fstpt
mov
fstps
push
jnp
enter
or
mov
pop
bound
out
push
jne
push
lahf
dec
js
mov
cmc
dec
jb
loope
and
add
fstpl
mov
and
inc
jg
movl
xlat
jns
getsec
push
add
and
inc
imul
jp
xchg
pop
aas
lcall
mov
mov
adc
lret
iret
lret
mov
imul
jmp
cmp
mov
and
inc
adc
sub
repnz
pop
adc
ficoms
out
dec
mov
popf
xchg
sti
or
pop
mov
daa
in
pop
lods
into
xchg
outsb
sbb
lret
cvtpi2ps
and
cs
push
jne
or
out
inc
push
and
std
add
mov
loope
mov
clc
mov
ficoms
sbb
and
cmpsb
push
adc
sbb
and
imul
in
orb
and
das
mov
sub
outsb
adc
inc
out
in
ja
fisttpl
hlt
mov
shrl
cli
push
cltd
jl
sub
push
mov
jecxz
or
adc
xchg
mov
jg
enter
repnz
andb
mov
xor
dec
jo
rorl
fst
notl
and
les
mov
sub
inc
jecxz
jmp
xor
orl
orb
sub
cmp
fs
outsl
cmpb
inc
mov
outsb
outsb
mov
lret
lahf
pop
nop
cltd
dec
out
mov
add
dec
cmp
imul
lahf
cmp
and
adc
push
pop
sub
mov
or
or
mov
in
pop
and
enter
add
mov
dec
mov
push
push
das
lcall
adc
pop
mov
inc
and
lds
xchg
or
xchg
xorl
jp
mov
fiadds
mov
test
movsb
mov
icebp
inc
aas
adc
loope
adc
lock
sbb
cmp
subl
js
and
add
pop
lret
mov
hlt
mov
xorb
dec
mov
in
jl
xchg
mov
lds
sbb
test
mov
outsl
iret
js
jb
cmp
xor
pop
jg
push
adc
sbb
pop
mov
add
pop
out
je
lahf
out
inc
sbb
mov
shll
shll
dec
fstpl
clc
test
loope
push
inc
add
scas
or
rclb
jno
add
mov
dec
stos
lock
jge
sbb
cmp
int
sub
sbb
jae
dec
mov
cmp
aas
data16
cmpsl
jl
add
es
adc
rolb
or
pop
fst
aaa
pop
mov
lcall
lahf
mov
sbb
xchg
fdivr
and
xor
cmp
xor
pop
jg
dec
xchg
inc
mov
je
add
dec
cmpsl
addl
ss
xchg
dec
or
adc
rcrl
fsubs
outsb
jb
jnp
xor
inc
je
in
inc
aad
shl
xchg
in
rdmsr
fcomps
stos
sarl
aam
adcl
rorl
lea
dec
dec
popf
jae
loope
pop
outsl
sub
push
or
jecxz
stos
sbb
mov
test
sbb
arpl
aam
imul
cld
adc
ja
add
out
ret
rcrl
fstl
cli
jbe
pop
lods
jp
mov
sbb
pop
mov
jne
sahf
mov
sub
xchg
dec
sub
clc
and
sbb
gs
xchg
out
in
fldl
movsl
fwait
mov
nop
mov
incb
mov
push
movsl
mov
cli
mov
push
dec
arpl
rcr
stc
pop
hlt
dec
addr16
jnp
call
dec
repnz
clc
addl
jp
inc
mov
mov
jecxz
shll
mov
das
adc
loopne
cmp
cmp
sub
insb
sbb
mov
and
and
or
iret
fisttps
fucomi
ljmp
push
mov
ljmp
icebp
mov
lahf
or
repz
jp
cltd
mov
shlb
sbb
cmp
xchg
dec
fstl
pop
stc
imul
adc
inc
xor
ficoms
xchg
cmp
dec
push
aad
shrb
inc
push
adc
loope
dec
out
adc
push
inc
jg
std
mov
outsl
vcvtss2sd
jl
je
push
cli
dec
addr16
adc
je
inc
cmp
das
aas
pop
movsb
test
push
jbe
cwtl
push
mov
mov
repz
and
pop
inc
xor
loopne
ret
adc
sub
inc
jp
aam
mov
and
outsb
aaa
jno
movsb
add
fdivl
enter
dec
ljmp
jecxz
loope
xor
push
push
dec
pop
jo
xor
in
pushf
dec
andb
mov
pop
sub
fadds
adc
push
and
imul
rol
xor
pop
sub
fcompl
daa
in
xchg
jl
push
rcrb
dec
push
ret
dec
push
mov
pushf
jl
iret
mov
mov
lods
mov
or
sarl
std
adc
push
call
and
push
jmp
lahf
xchg
add
fistpl
testb
rorl
jecxz
fmull
add
mov
pop
call
out
test
jb
leave
out
repnz
in
cmp
jns
mov
dec
repz
std
mov
dec
cmpsl
imul
imul
sahf
mov
push
jne
jno
pop
lock
and
ss
mov
scas
cmp
pushf
lock
pop
push
cmpsl
xlat
inc
mov
or
pop
sub
test
in
fimuls
sbb
xchg
mov
dec
mov
ret
jmp
sti
int3
or
or
pop
imul
loop
push
sbb
pusha
mov
cmp
pop
inc
mov
sbb
jmp
pop
dec
inc
stos
test
lahf
ja
xchg
jle
stos
nop
pop
xchg
pop
out
loop
mov
pop
sar
mov
sbb
pop
push
sahf
lock
jae
cs
mov
push
data16
xor
ja
jnp
rcrb
shlb
push
dec
mov
jg
xchg
sbb
leave
dec
jne
pop
xlat
sub
mov
cmp
adc
sbb
mov
sbb
pop
jno
insl
xor
aas
pop
xor
jmp
mov
shll
lea
adcb
jmp
xchg
aad
out
pop
test
aam
pop
testb
addb
inc
out
in
fistps
mov
fstpl
add
pop
adcl
in
test
or
imul
sub
imull
sbb
xchg
mov
scas
push
inc
adc
sub
adc
in
js
sahf
xchg
sbbb
cmp
or
mov
mov
mov
pop
push
imul
gs
icebp
hlt
ja
sub
mov
cmp
add
jb
ss
in
cli
xor
xorl
jbe
and
pusha
jnp
add
ss
add
enter
and
ja
pop
stos
and
rcr
js
das
aaa
icebp
cmp
pusha
lea
cli
stos
ret
mov
push
mov
sbb
ds
add
cmp
cwtl
add
adc
inc
movsl
data16
add
xlat
push
test
mov
mov
xchg
lods
loope
aad
jns
cli
imul
es
jp
outsl
jnp
in
lods
sub
inc
cld
sbb
add
ljmp
out
stos
cmp
cmpsl
mov
push
mov
xchg
inc
rcl
shrl
mov
clc
js
push
cmp
mov
icebp
dec
divl
test
insb
les
inc
push
ss
stc
arpl
xor
cmpsl
lcall
add
add
jge
inc
dec
jo
enter
mov
jle
sbb
push
xchg
mov
sahf
adc
push
pop
insb
xor
fcmovnb
mov
dec
ds
adc
xor
rcll
jno
add
gs
fimull
push
icebp
dec
int
pop
popf
sub
mov
mov
call
dec
inc
jbe
push
outsb
nop
and
std
mulb
lret
add
mov
xor
icebp
cmc
mov
mov
lods
repz
loope
data16
mov
scas
adc
sbb
cld
stc
call
lods
xchg
xlat
inc
cmpsb
loopne
into
mov
test
push
cmpsb
sbb
outsl
jg
dec
insb
lcall
xchg
adc
fidivl
inc
loop
fsubr
dec
sub
sub
fbld
adc
div
pop
xor
xchg
es
mov
pop
cs
int3
pop
out
pop
push
jnp
mov
mov
cmpsl
xchg
inc
and
jb
mov
xchg
pop
enter
cmpl
cmp
ss
inc
mov
daa
mov
pushf
pop
or
jo
adcl
or
xchg
shrl
stos
adc
sbb
pop
clc
ficomps
out
dec
mov
sbb
lods
xlat
stos
fldt
andb
daa
sub
xchg
pop
andl
adc
fs
push
and
pusha
xor
roll
adc
jmp
int3
inc
popf
scas
cltd
mov
dec
xor
dec
xchg
sarl
sbb
ret
filds
test
pop
push
aam
imul
adc
int
in
lcall
push
mov
loopne
push
sbb
adc
sbb
xorl
out
mov
sbb
int
fidivs
jbe
mov
sub
push
pop
cld
mov
arpl
out
aaa
stc
out
mov
enter
sti
adc
mov
dec
stos
push
iret
push
test
inc
in
jns
in
lds
ljmp
hlt
dec
sbb
adc
inc
leave
pop
jmp
scas
pop
aas
mov
cltd
popl
push
mov
jb
push
jmp
inc
inc
xchg
jecxz
pushf
or
or
xor
xchg
icebp
repnz
cmc
cmp
nop
mov
cmpsb
dec
pop
mov
movsb
jmp
scas
dec
call
in
fadds
icebp
decb
mov
dec
push
cmp
xchg
or
into
daa
ficoml
add
aam
xor
inc
push
scas
mov
sti
xchg
jmp
sahf
pop
dec
cmpsb
pop
cld
into
fsubl
and
cwtl
dec
js
mov
sarb
stc
movb
lds
movsb
push
iret
mov
mov
add
fwait
imul
or
sub
cmp
jnp
repnz
jecxz
mov
mov
stos
outsl
fwait
insb
pop
mov
add
in
leave
fmuls
repnz
xor
mov
cmpsl
xchg
loopne
and
push
iret
aas
cli
jmp
push
inc
mov
test
andb
pop
fs
xchg
cmp
test
push
lods
mov
sub
xchg
sbb
shll
cmp
rcrb
inc
imul
ss
cltd
dec
scas
shrb
jg
push
pop
movsb
inc
or
and
adc
sbb
test
aad
add
xchg
cmp
jmp
add
test
iret
sub
jne
lret
adc
adcb
popa
pop
lods
aaa
lea
inc
jbe
lods
push
add
es
mov
test
and
sub
add
inc
daa
rcrl
cmp
mov
cwtl
pop
adcl
push
test
div
scas
sbb
push
jne
xor
lahf
pop
ljmp
sub
stos
out
jecxz
or
cld
xor
mov
cmp
daa
pop
pop
dec
aaa
fadds
sub
or
rorl
sbb
adc
mov
aaa
and
ljmp
lret
in
xorb
shl
repz
es
sub
loope
add
dec
imul
cmpsl
fprem1
gs
mov
push
push
std
push
bound
into
dec
push
call
subl
adc
cmpsl
mov
sub
mov
mov
outsb
push
ja
or
lock
xor
out
ret
in
jmp
hlt
gs
nop
jbe
cmpb
sbb
test
repnz
or
les
lahf
mov
cmp
je
insb
int
xchg
in
dec
dec
sbb
push
hlt
repnz
mov
mov
xchg
adc
gs
out
test
inc
add
lret
add
es
aam
dec
mov
in
orl
loop
or
and
push
cwtl
fsubs
sub
and
push
aad
shrl
fwait
arpl
pop
ss
jne
icebp
push
xchg
loope
mov
or
iret
inc
mov
lea
cmc
shll
fildl
in
leave
mov
pop
inc
sbb
repz
sbb
push
adc
lods
out
fwait
adc
aam
hlt
aam
and
xor
add
adc
fs
je
inc
je
movsb
xchg
mov
test
hlt
aam
and
xor
add
adc
fs
je
inc
je
movsb
xchg
mov
test
hlt
aam
and
xor
add
and
inc
inc
jo
pusha
nop
nop
addb
aam
les
and
adc
scas
scas
xor
push
adc
cld
cmp
mov
mov
xchg
iret
loopne
rolb
pushl
das
add
adc
pop
jo
inc
outsl
push
jmp
lahf
mov
cmpb
out
sar
mov
xor
aas
adc
or
jo
inc
jg
aaa
mov
addr16
shl
mov
shrb
cmp
inc
jb
jno
xor
daa
cmp
and
loope
sar
scas
call
fcomip
xor
ret
sub
jo
mov
or
jnp
arpl
arpl
das
fdivrl
adc
enter
push
imul
adc
add
jno
fidivrl
push
call
int3
test
pop
mov
pop
jne
jo
lds
push
in
xchg
dec
test
xor
icebp
adc
pop
iret
stos
test
lock
pop
mov
jg
jo
xchg
loopne
shlb
sbb
fs
je
das
fistps
or
pop
jo
inc
jae
jo
add
xor
cmp
enter
xor
arpl
pusha
or
outsl
inc
jl
aam
leave
mov
cmpb
out
rcrb
and
adc
pusha
push
jo
inc
jg
out
in
icebp
fildl
mov
fwait
xchg
test
pop
dec
xor
pop
fs
cmp
push
ret
aad
in
nop
cmpsb
mov
mov
imul
push
inc
jne
push
xor
push
ds
jecxz
repz
into
repnz
cmc
pushf
into
fcomip
out
sar
mov
xor
add
adc
pop
jo
inc
jg
mov
mov
lock
sar
mov
xor
add
adc
pop
jo
inc
jg
mov
jg
add
xchg
leavew
in
stos
dec
inc
adc
sarb
fldcw
jle
inc
cmp
jmp
xchg
mov
and
push
mov
mov
dec
push
in
lret
mov
lods
lods
aam
insl
mov
dec
lcall
insl
or
xchg
stos
movsb
fsubs
and
push
mov
inc
push
xchg
sahf
call
ret
cmp
pop
bound
lods
pop
mov
cmp
nop
xchg
les
mov
ss
pop
jnp
xchg
inc
xor
imul
dec
aaa
lods
pop
mov
jno
leave
mov
fwait
jp
dec
xchg
sahf
push
test
add
movl
cli
jg
sub
ds
out
and
aam
jle
sub
rolb
cmp
into
mov
imul
add
fwait
mov
iret
aad
int3
xchg
add
add
push
and
xlat
cltd
fimuls
pop
imul
add
out
out
and
sbb
mov
outsb
das
ja
cmp
pop
sub
and
cmpsb
roll
jbe
ficompl
inc
xor
lret
jg
int
nop
outsb
or
jecxz
pop
pop
jecxz
and
push
js
cmp
mov
inc
xor
std
push
repz
mov
ja
lret
orb
cmpsb
out
mov
pop
rorb
push
mov
shl
movsb
jne
mov
jecxz
repnz
push
pop
dec
mov
repnz
sbb
mov
xor
jp
mov
cld
jnp
xchg
pop
dec
ss
push
sbbb
and
sub
div
in
add
loope
repnz
test
or
jle
xchg
dec
push
in
fs
cmp
nop
ret
sti
jne
hlt
push
inc
xchg
xlat
cmc
or
leave
adc
scas
xor
std
mov
jno
or
pop
and
mov
stos
sbb
fisubrs
pop
mov
scas
and
jle
mov
fisubl
pop
adc
out
ficomps
lods
fwait
test
sahf
loop
fbld
pop
xchg
subb
aam
xchg
xor
mov
sbb
gs
pop
out
fld1
cmpsb
and
pop
pop
shll
jb
out
jge
sub
nop
addr16
fadd
xlat
divb
sub
lret
adc
fs
test
sarl
mov
adc
or
mov
rorl
jp
fildl
into
mov
mov
lcall
clc
int3
mov
in
push
int3
out
sub
imulb
push
bound
pop
cmpsl
mov
pushf
sahf
add
fcom
shl
dec
and
je,pn
aaa
pusha
jno
xchg
add
nop
pop
mov
cmc
shlb
xchg
add
mov
mov
mov
and
jle
inc
push
aas
mov
xor
push
xchg
jns
lods
iret
pusha
jmp
mov
adc
neg
pop
xor
fwait
hlt
imul
fwait
dec
mov
mov
sbbb
fnstsw
pop
inc
enter
sti
dec
jp
test
ret
das
nop
pop
add
inc
dec
sbb
push
mov
data16
rcr
sub
add
ret
jmp
aaa
xchg
push
lahf
push
sarl
mov
pop
out
rcr
dec
mov
lret
and
leave
cld
ljmp
mov
xchg
jnp
es
pop
xchg
scas
sub
push
mov
xchg
movsl
cltd
test
scas
ljmp
int3
aas
pop
inc
sbb
fwait
push
mov
dec
adc
pop
jle
jg
inc
or
xor
xchg
push
jo
insl
outsb
cmp
push
mov
mov
mov
pop
lret
xor
jno
or
mov
test
gs
gs
cli
inc
jne
std
push
stc
lods
aas
push
pop
or
imul
fwait
test
lock
xchg
fyl2x
inc
add
sarl
or
icebp
xor
ret
cli
aad
cmp
or
fisttps
sub
cltd
inc
scas
add
jp
es
cmp
dec
pop
out
inc
mov
add
leave
shl
ret
mov
repnz
adc
lcall
dec
dec
dec
inc
fistpl
daa
std
loope
push
or
xchg
jne
push
push
aam
mov
dec
jg
or
cmp
stc
ret
lods
push
mov
jg
test
adc
jp
jae
jb
xor
fistpl
decl
mov
fbstp
mov
inc
fistpl
push
and
xor
xchg
into
cmc
push
aaa
add
inc
faddl
test
push
push
ret
lcall
in
lods
sub
andl
aam
cli
mov
ret
mov
inc
sub
push
into
aaa
push
jb
int
roll
je
push
sub
sub
inc
scas
lods
jo
pop
add
xchg
imul
cltd
ss
mov
dec
sub
mov
mov
bound
dec
sub
jl
mov
xor
addr16
jns
pop
jnp
imul
sarb
push
and
stos
and
jmp
push
mov
popa
xchg
nop
dec
push
sbb
lock
insl
test
adc
mov
cmc
scas
mov
and
mov
cmpsb
loopne
popl
xorl
push
and
mov
mov
fsubrl
xchg
movl
out
adc
xor
cmp
xchg
sarb
jecxz
test
xor
adc
push
add
dec
ret
movsb
stc
jnp
mov
cli
pusha
dec
dec
add
in
jnp
icebp
scas
scas
lods
not
mov
imul
push
inc
jg
sti
sbb
mov
fldcw
or
pop
or
push
daa
sahf
pushf
testb
jno
mov
pop
sub
dec
sub
adc
dec
cs
loope
push
repz
xor
push
adc
mov
pop
loope
addb
mov
leave
cmc
jno
inc
into
push
repnz
outsb
xlat
jg
jl
cmp
fsubs
scas
jl
repnz
lahf
sub
pop
lea
sbb
jno
sahf
sbb
icebp
xchg
dec
mov
jo
cmp
cwtl
inc
aaa
sub
popa
jae
jno
sti
rolb
enter
ffreep
add
test
jle
cltd
xor
pop
bound
sahf
xchg
sub
sbb
sub
insl
sub
fnstsw
jmp
cmp
add
vmovapd
xchg
push
inc
pop
fcoms
enter
stos
ds
lret
adcl
adc
jbe
not
pop
mov
scas
mov
andl
lcall
test
ss
sti
je
mov
ja
mov
arpl
les
adc
pop
adc
add
mov
jmp
or
in
push
push
rcll
sbb
pop
mov
fucomp
inc
negb
test
jecxz
mov
xchg
jle
pusha
rorl
scas
lods
out
rcl
addr16
pusha
or
lods
fistpl
adc
inc
push
lds
fimull
add
mov
jmp
lret
pop
es
addr16
in
mov
in
inc
icebp
xor
outsb
aaa
fbld
bnd
cmp
xor
es
jns
mov
mov
xor
lahf
dec
test
or
sub
add
xor
inc
test
out
add
fists
fbstp
bound
iret
pop
out
sbb
xchg
int3
dec
pushf
hlt
push
xor
mov
adc
popa
mov
or
mov
daa
test
sbb
add
xchg
push
push
cltd
mov
insb
andl
xchg
xor
sub
push
pop
or
into
sub
jmp
mov
jg
sbb
push
cmp
call
jo
inc
sbb
cmpsb
movsb
mov
inc
push
pusha
xorb
adc
fldt
aam
push
mov
lcall
jno
in
and
aam
mov
mov
jmp
iret
cmp
xchg
add
dec
arpl
std
in
mov
pop
lds
pop
inc
shll
out
pop
push
shlb
pop
dec
mov
pop
out
shrb
stos
or
lods
call
cmp
cmpsb
mov
adc
xchg
mov
jg
xchg
add
cwtl
data16
out
mov
inc
dec
ret
mov
or
fdiv
mov
sbb
inc
outsl
adc
push
xor
cmpsb
add
mov
or
jns
sub
inc
repnz
push
mov
cmp
push
adc
cmc
pushf
dec
xchg
sbb
dec
lahf
int3
lret
insb
and
sbb
adc
sub
insb
push
out
dec
cs
jns
pop
shll
pusha
xchg
daa
or
insl
and
mov
out
push
idiv
xchg
movsl
insl
insb
mov
cmp
scas
push
xchg
cmp
negl
push
sahf
rcll
in
jmp
inc
shll
or
push
cld
or
rorb
sub
mov
clc
push
pushf
movsb
imul
add
adc
loopne
repz
out
sarl
loopne
mov
jle
adc
add
mov
push
cli
gs
or
iret
jecxz
rcrl
cs
mov
in
pop
mov
dec
push
inc
mov
sbb
jl
dec
mov
subl
adc
lret
xchg
add
add
add
mov
dec
and
addr16
inc
xchg
add
sub
inc
push
and
pop
push
dec
imul
xor
jp
xchg
movsb
cmpsl
loope
jnp
mov
iret
add
inc
out
fs
dec
daa
jecxz
outsl
lock
xor
pop
scas
aam
ret
or
inc
sahf
inc
out
jno
mov
jge
cmp
out
fldt
int
icebp
std
mov
or
mov
nop
mov
fs
sub
cmp
fdivr
xor
pop
inc
ret
mov
push
lahf
push
add
stos
leave
xlat
jge
cmp
mov
inc
movsb
int
pusha
sub
cmp
inc
imull
repz
jge
cs
sbb
gs
jmp
or
in
mov
loopne
adc
adc
pop
xchg
xor
dec
shll
pop
notl
insb
jnp
jo
stc
enter
mov
cmc
push
jl
jg
stos
or
in
sub
add
and
stos
dec
pop
shlb
aaa
scas
sub
inc
movsl
mov
cmpl
jbe
lds
inc
rcr
mov
jl
jl
lods
les
and
mov
pop
sub
mov
iret
filds
andb
imull
mov
or
ljmp
mov
in
pushf
adc
aad
mov
push
or
or
scas
pop
insb
sub
out
sub
cwtl
scas
jb
jne
or
sahf
enter
add
sar
adc
adc
fldenv
mov
in
xor
cmpsb
add
testl
shr
imul
stos
xchg
lock
jle
add
add
jp
insb
dec
les
jns
andl
mov
sahf
mov
xor
movsb
pop
xchg
clc
insb
and
push
into
fisttpl
in
insb
mov
jne
mov
inc
dec
xchg
insl
cmpsb
push
pop
fdiv
aam
jg
cmc
nop
mov
pop
cli
test
mov
mov
shrl
fwait
daa
jb
pop
pop
ss
cltd
pop
xchg
cmpsb
inc
push
mov
push
sbb
push
cmp
inc
rcll
cmc
mov
sarb
loope
pop
fsin
lret
dec
mov
dec
out
inc
sbb
shlb
xor
lret
adc
jge
mov
push
lret
adc
xchg
nop
jns
dec
push
pushf
in
movsl
test
movsl
setae
enter
cmc
mov
gs
cmpsl
loopne
imul
dec
pop
fstl
xor
mov
jg
mov
jne
jns
cmp
js
xchg
frstor
mov
mov
bound
inc
sbb
jno
mov
rolb
popa
pop
push
jb
jnp
sbb
lods
ficoml
orl
inc
sbb
out
iret
into
outsl
fistpl
cmp
xchg
xor
push
test
mov
mov
sarb
fsubl
xchg
or
or
out
inc
leave
xor
inc
movsl
pushf
mov
sbb
mov
pop
shll
mulb
sbb
mov
mov
mov
rcr
test
lods
shl
jne
jl
pop
and
pop
lods
popf
test
lcall
xchg
clc
jo
adc
pop
xchg
pop
jl
lret
inc
cld
stos
fisttpl
mov
lock
add
xchg
rclb
cmp
sbb
pop
and
jae
jo
adc
dec
xchg
les
ds
call
jb
cmp
dec
inc
push
cmpsb
lods
rolb
push
jnp
rorb
add
push
rolb
int
xor
out
or
lcall
popa
out
ficomps
bound
stos
addr16
cmp
sub
lret
or
int
into
rcll
pop
rcrl
out
test
jo
hlt
gs
pop
cmpl
dec
ficoms
loopne
mov
dec
loopne
dec
gs
call
into
push
sbb
sub
xor
add
xchg
lret
add
ljmp
frstor
jne
jge
orl
mov
lods
push
mov
push
cmp
mov
fists
dec
jns
in
lcall
fwait
mov
pop
fsubrs
repnz
jb
or
dec
ret
es
out
sub
rcrl
inc
test
push
and
pushf
fucomp
in
xor
jb
lcall
xor
pop
xchg
xchg
pop
mov
xor
aaa
jae
and
and
xorb
loope
les
fiadds
faddl
and
inc
mov
mov
xlat
push
sub
cmp
jae
xchg
sbb
loop
pop
jecxz
or
mov
movsl
repnz
push
push
fisttps
movsl
cmp
sbb
push
ss
loopne
in
dec
insb
jge
imul
pop
cmp
push
add
mov
cmp
push
repnz
aaa
aad
mov
or
mov
rorl
mov
in
sbb
mov
sub
notb
mov
push
stos
xor
repnz
inc
bound
loop
nop
aad
jmp
mov
stc
inc
dec
rcl
rcll
iret
push
cmp
lret
pop
push
mov
mov
out
sbb
pop
mov
adc
lcall
arpl
fldl
scas
bnd
mov
xor
mov
sub
cmp
mov
sub
adc
jmp
xor
mov
loopne,pt
or
xor
popf
mov
pop
ret
fsubrl
cmp
sti
push
clc
lock
sub
sub
sar
mov
repz
and
jecxz
int3
mov
dec
pop
cs
lahf
pop
fwait
xor
test
and
sahf
xchg
scas
or
sbb
std
shl
mov
adc
mov
enter
movsl
jo
stc
fmuls
lret
sbb
push
xchg
mov
dec
sbb
cmp
hlt
mul
inc
cmp
sub
and
js
inc
arpl
sbb
outsb
push
mov
and
shll
mov
loopne
outsb
lahf
fcomp
sbb
adc
push
js
ds
fiadds
xor
scas
cltd
adc
mov
loope
cmp
sbb
inc
inc
adc
cltd
jb
das
cmp
xorl
inc
mov
xchg
aaa
rcrl
cltd
push
mov
or
pushf
xchg
cwtl
inc
int3
and
cmpsl
or
movsl
leave
push
dec
xchg
ret
js
pop
stc
mov
into
adc
xor
dec
loope
mov
pop
loopne
subb
rol
mov
lret
or
dec
js
cli
push
jecxz
or
jno
pop
in
mov
mov
sbb
xor
mov
xorb
sub
mov
rcrl
xchg
xlat
test
add
test
mov
clc
mov
jmp
inc
lea
jns
dec
sbb
xchg
cmp
aaa
aas
data16
push
addr16
jns
dec
sub
xor
test
sbbb
cmp
das
fistpll
xlat
lahf
dec
cmp
and
pop
test
xchg
test
xchg
sahf
lcall
jecxz
adc
inc
pop
sbb
jae
add
insl
fisubs
es
insl
jg
imul
push
pop
shll
pop
mov
xor
repnz
insl
clc
and
lcall
jnp
cltd
inc
jno
fisttpl
mov
aad
mov
fs
inc
add
rcrb
or
ljmp
aam
or
cwtl
les
ljmp
fs
ret
mov
js
and
pop
dec
repnz
push
loope
cltd
sub
test
gs
ret
dec
in
mov
push
stos
rcr
cmp
or
mov
xchg
jns
inc
cltd
xchg
inc
data16
mov
addl
adc
jecxz
cmp
sbbl
inc
sub
pop
gs
sub
push
xor
es
mov
mov
cmpb
push
xchg
or
loop
and
push
and
insl
loop
cld
push
leave
add
arpl
inc
jno
cmp
stos
push
cs
lock
lret
inc
xor
lretw
inc
sub
inc
cmp
dec
fwait
imul
sarb
pop
stc
push
push
xor
mov
push
jp
in
test
lods
pop
fwait
sahf
adc
scas
dec
sbb
inc
inc
push
jle
pop
imul
stos
scas
int3
lea
sub
sahf
sub
sbb
stos
jle
add
lcall
pop
jl
ja
std
test
sub
add
push
mov
xor
jl
mov
xchg
mov
shrb
xchg
aaa
movzbl
xor
push
rorl
xchg
xchg
testl
pop
sbb
push
ret
or
inc
cwtl
imul
aas
xor
pop
lods
xchg
mov
pop
pop
std
imul
and
andl
push
cwtl
jne
xchg
xor
repz
mov
imul
imul
stos
fdivrl
test
sub
frstor
ret
out
xchg
mov
mov
rcr
or
adc
rcll
and
pop
in
dec
adc
pop
add
ja
loope
cmp
jne
push
mov
adc
push
cwtl
xchg
dec
stc
lret
push
lcall
or
ss
push
mov
ja
jnp
or
xchg
out
mov
xchg
dec
mov
je
daa
sub
jle
lahf
xor
cld
xor
imul
xchg
mov
mov
jmp
lock
push
jnp
push
push
sbb
sub
aaa
add
pop
mov
rorb
push
out
mov
mov
loop
pop
mov
repz
fs
loopne
cld
rorb
or
xchg
mov
push
cmp
into
aas
lret
in
and
ret
inc
lods
xlat
mov
push
sub
and
repnz
dec
inc
fwait
aad
jns
insl
push
aaa
movsl
mov
jbe
xor
jmp
aad
pushf
fldcw
sbb
sbb
pop
sahf
push
mov
jle
lcall
sahf
cmp
stos
cld
es
shll
movsl
rorl
popa
mov
xchg
add
stos
bound
aad
in
int3
int
push
inc
hlt
and
jge
test
mov
movsl
mov
and
jo
lock
fistpl
fistpl
pop
in
sub
mov
jmp
gs
ficoms
repz
adc
fistpl
cmp
sub
lret
js
mov
cmp
or
scas
pop
cwtl
test
inc
rcrl
scas
inc
push
push
cmp
jmp
sub
aad
fwait
xchg
pop
fcmovnbe
xchg
loopne
xlat
sbbb
jge
popf
imul
loop
cmpsb
cmpsl
or
jg
dec
pushl
jecxz
sbb
call
xor
or
popl
jecxz
pop
jae
and
xlat
lds
add
cld
cltd
cltd
mov
xchg
mov
mov
push
jle
addr16
pop
lea
loopne
mov
out
call
test
mov
xlat
addl
mov
je
jp
xchg
push
mov
mov
push
lret
repnz
sub
or
cmp
shrl
and
mov
cmp
out
movb
adc
jnp
les
popa
xor
xrelease
jge
mov
sub
adc
dec
hlt
stos
faddl
ret
mov
mov
stos
mov
xlat
inc
cmp
push
in
movsb
int3
mov
mov
fsts
sbb
jae
cmpsb
nop
cmpsb
sub
mov
and
mov
insl
dec
lcall
shrl
mov
jns
mov
mov
jnp
xchg
cmpsl
mov
cmpb
out
sar
mov
xor
add
adc
pop
jo
inc
jg
mov
mov
lock
sar
mov
xor
add
adc
pop
jo
inc
jg
mov
mov
lock
sarb
mov
xor
add
adc
dec
jo
inc
xchg
push
fwait
mov
lahf
nop
iret
loopne
lock
sarb
and
lcall
xlat
nop
mov
ljmp
push
fimull
pop
out
pop
jp
push
pop
dec
lds
mov
cmpsl
sbb
ljmp
aaa
stos
daa
lcall
out
testl
sbb
ljmp
cs
aas
lcall
mov
dec
leave
push
shll
ljmp
fsubrs
mov
rcrl
xchg
mov
cmp
jno
push
es
filds
nop
mov
jl
mov
pmovmskb
iret
mov
xchg
hlt
lret
popa
loopne
or
in
mov
jmp
jb
daa
movsl
imul
lcall
xchg
push
dec
ja
pop
mov
clc
jp
jp
xlat
aaa
insb
cmp
in
pop
sbb
sahf
xchg
pop
mov
push
push
xchg
out
xchg
ret
mov
sub
cli
xchg
pop
js
js
xchg
or
add
mov
in
rcrb
push
ljmp
aaa
stos
daa
lcall
lcall
dec
fidivrs
scas
sub
mov
push
scas
inc
popa
jecxz
jnp
push
sahf
outsb
lahf
cmp
inc
hlt
pop
xchg
pop
ljmp
scas
inc
cld
inc
adc
pop
mov
sbb
jle
push
mov
mov
lret
xor
pop
mov
jp
push
pop
xlat
dec
cmp
or
ficoml
inc
mov
pop
mov
jp
push
pop
xlat
dec
cmp
or
popa
jbe
push
pusha
or
inc
and
sbb
lret
mov
fwait
mov
mov
arpl
push
fisubrs
or
int3
inc
sbb
sti
adc
inc
jo
js
pushf
add
gs
or
mov
inc
decb
out
push
xchg
mov
sub
jecxz
cld
jnp
icebp
ja
mov
idivl
stos
mov
and
or
mov
in
add
push
imul
cmpsb
gs
jmp
std
addr16
icebp
cwtl
fsubs
xchg
sahf
xor
das
aaa
arpl
jg
loop
in
push
fdivrs
mov
add
dec
pop
fsubr
dec
repz
inc
stc
in
mov
mov
outsb
adc
cmp
popf
aas
lods
xor
xlat
mov
pop
addr16
and
scas
and
xlat
dec
fsubl
push
rclb
xchg
xor
lahf
jae
push
jnp
and
jae
in
adc
cltd
movsl
popa
mov
rorb
into
ljmp
and
ss
data16
sbb
xlat
add
pushf
dec
inc
or
xor
inc
jmp
lahf
mov
mov
pop
repz
in
sub
int
inc
outsb
fidivs
or
lcall
mov
mov
sub
push
cltd
ffreep
dec
cmp
xchg
xchg
cmp
fsub
mov
shlb
pusha
arpl
or
sub
fdivrs
popa
xchg
push
rcr
fidivl
cmp
xlat
ss
xchg
add
inc
xchg
jns
fldenv
push
push
pop
pushf
xchg
sbb
xchg
pop
aaa
push
shrb
idiv
data16
outsb
inc
pop
out
jmp
pop
sbb
add
xchg
xchg
call
mov
stos
repz
or
jae
mov
pop
test
fwait
or
or
jno
std
cld
xchg
sahf
jg
adc
dec
jns
or
insb
test
daa
push
imul
in
out
mov
xchg
negl
je
mov
out
dec
mov
jo
je
out
out
mov
int3
xor
fcompl
int
rcll
or
or
sub
adc
jns
in
testb
js
popa
arpl
inc
cmp
mov
fadd
es
outsl
pop
push
pusha
add
pop
dec
jl
jb
push
repz
aas
mov
popf
mov
xchg
cmpsb
push
mov
mov
xor
and
lds
ret
xor
iret
jne
imul
pop
icebp
cmp
adc
pusha
movsb
cmp
mov
xor
out
push
es
aam
lret
mov
dec
xchg
ficomps
and
xchg
mov
sub
cmp
enter
add
jae
xor
cltd
mov
adc
outsb
arpl
dec
shll
mov
dec
test
arpl
cmp
ljmp
out
sbb
inc
mov
iret
jb
jbe
push
add
add
repz
xor
sbb
cmpsl
mov
in
adc
in
lahf
js
sahf
cmc
ss
adc
lahf
xchg
or
add
int3
int3
pusha
ss
lea
sti
mov
mov
fcoml
lods
xchg
lret
daa
cltd
xor
ja
or
xchg
fdivl
sub
mov
ret
fcoml
cmp
jno
and
lahf
mov
jo
xchg
push
mov
mov
orl
jae
add
dec
push
mov
sti
xchg
xchg
push
fsts
shrb
imul
inc
dec
mov
lret
mov
cs
data16
dec
in
xor
push
fisubrl
loopne
fcmovnu
dec
push
out
fcomp
dec
push
lret
aaa
xlat
and
pop
add
ja
fdivrs
cmpl
push
xchg
inc
cld
mull
jae
scas
aam
test
or
xchg
push
bound
cli
mov
popf
mov
in
cwtl
jo
xchg
notb
mov
outsb
mov
ret
lret
cli
ret
xchg
push
adc
xor
push
fisubs
xchg
shrl
jbe
fists
xor
aaa
sbb
xor
faddp
xchg
jg
out
ret
ljmp
pop
ret
int3
jo
mov
sbb
sti
mov
faddl
gs
inc
or
arpl
push
mov
sbbb
xor
mov
and
pushf
jb
sub
pop
ret
mov
jcxz
mov
sti
mov
mov
xorb
testl
dec
adc
cli
inc
dec
or
inc
pop
jle
pushf
enter
and
stc
adc
xchg
pop
movsb
inc
stos
jp
mov
add
neg
or
mov
inc
nop
xchg
out
roll
sub
xchg
mov
sbb
dec
loopne
pop
push
jl
push
lret
sub
inc
push
pop
stos
enter
mov
and
dec
mov
xor
les
int3
sub
rorb
pop
cmp
insb
mov
push
out
addl
xchg
inc
xor
movsl
icebp
loop
or
ficoms
sar
mov
out
das
mov
add
mov
lods
xorl
lahf
and
idiv
nop
push
pop
lods
mov
fmuls
in
pop
andb
push
mov
scas
loop
lock
movsl
negb
xchg
add
out
dec
dec
ljmp
daa
jle
mov
jge
test
dec
lea
aaa
stos
imul
mov
test
nop
xchg
or
xchg
aas
repz
out
or
inc
pushf
scas
push
mov
jb
ss
orb
test
fsts
add
and
sub
inc
inc
mov
adc
pop
jmp
cmc
xchg
mov
outsb
rcll
les
inc
add
add
pop
popf
stc
fwait
push
sbb
mov
inc
mov
add
ja
pusha
cmp
rorl
sbb
fimull
dec
mov
insl
and
and
sub
jb
aad
mov
pop
push
pop
das
addr16
mov
scas
js
push
out
and
xorl
jl
dec
jne
dec
popf
xchg
mov
std
lcall
in
dec
fisttpl
xchg
sbb
mov
cld
cli
sub
ret
inc
inc
add
pop
mov
cld
test
fisttpl
cmp
neg
adc
mov
pushf
cwtl
or
push
jbe
mov
in
mov
movsb
dec
dec
xchg
insb
dec
js,pt
orb
sbb
mov
lret
xor
cs
inc
in
sbb
loopne
pop
mov
notl
jns
movsl
pop
mov
pushf
test
push
add
sbb
lods
xchg
and
cli
sahf
xlat
std
push
test
incl
push
adc
push
ror
js
inc
pop
adc
xor
mov
xchg
stc
push
test
jno
jg
adc
push
pushl
test
cmpsb
cli
sub
cmp
or
ficoml
mov
xor
add
cmp
stos
dec
mov
je
shlb
les
lea
jmp
dec
sbb
mov
inc
sbb
and
mov
push
sbb
sbb
xchg
lahf
popf
adc
xchg
rcrb
inc
scas
or
jle
add
scas
jo
xorl
add
arpl
inc
jle
push
adc
test
dec
xor
test
sbb
mov
cmpsb
jle
lahf
mov
in
fcmovnb
cli
out
cmp
sub
push
into
cli
mov
mov
insl
outsb
push
mov
js
loop
pop
imul
js
clc
insl
aas
push
add
cld
mov
pop
and
jmp
push
mov
push
loop
and
pop
inc
sbb
fimuls
push
fimuls
xor
jno,pt
lds
lret
rcrl
sti
out
notb
pop
sarl
mov
adc
xor
cmp
pop
push
aad
in
jmp
jmp
rcrl
inc
mov
stc
push
sub
sbb
adc
clc
xor
sti
lock
cmp
cmp
enter
jne
shll
arpl
mov
test
dec
cwtl
andl
mov
shlb
cwtl
test
mov
dec
ja
jbe
in
subb
push
ja
cmpsb
ret
ss
xor
ficompl
lods
loopne
xor
cmpsl
add
mov
jns
adc
out
aam
mov
add
add
add
push
sti
dec
stos
adc
push
imul
sub
jnp
fwait
sub
dec
lahf
pusha
fsubl
jnp
cmpl
stos
sahf
mov
push
rolb
fisttps
je
in
push
push
pop
adc
aaa
cmp
lret
ljmp
pop
shrl
rolb
jg
mov
js
jmp
mov
cmpsb
arpl
repnz
and
adc
xchg
rolb
push
jcxz
lods
add
cltd
loop
arpl
sbb
pop
cmp
stos
icebp
cmc
inc
rsqrtps
mov
lds
lret
and
les
sbb
dec
and
xor
xchg
loope
push
out
pcmpeqb
push
sti
and
and
sub
add
push
mov
fisttpl
and
data16
mov
push
xor
cli
bnd
push
icebp
movsb
sti
xchg
sbb
sbb
js
sub
outsl
fcmovne
fs
sbb
imul
push
xchg
sbb
popa
adc
scas
ss
in
movsl
sub
dec
inc
sub
lcall
addr16
cs
pop
cs
cmp
test
rsm
mov
push
shll
mov
mov
pop
push
push
aam
mov
pop
pusha
daa
stos
pusha
leave
sub
out
mov
mov
xchg
pop
call
dec
movsb
ret
push
sbb
dec
in
movsb
nop
frstor
or
enter
and
push
aaa
and
mov
jnp
lahf
sub
xor
xchg
xlat
movb
cvtpi2ps
ss
out
out
jge
inc
outsl
cmp
xchg
inc
in
push
xor
jne
mov
pushf
pop
ret
xchg
sub
xor
or
or
cmp
dec
clc
mov
push
or
insb
jg
and
jbe
movsb
jg
jecxz
lcall
nop
or
in
stc
xchg
xchg
int
mov
imul
imulb
call
pop
movsl
xlat
inc
xchg
dec
push
mov
ljmp
sbb
xor
sbb
inc
and
jae
addr16
xor
push
mov
loop
fs
mov
dec
incb
scas
pop
lahf
daa
jl
add
sub
mov
push
imul
rcll
mov
leave
mov
arpl
orl
xor
aaa
mov
cmpsl
push
and
lahf
pusha
or
push
pushf
mov
jb
pop
xor
push
sub
adc
cmp
push
into
adc
jp
mov
lahf
popa
add
repz
js
dec
sub
ret
xor
cmpb
jecxz
or
jle
inc
mov
cmp
in
jmp
push
mov
aaa
ret
jo
repz
test
push
sub
xor
sbb
push
arpl
or
lds
cmpsb
xchg
call
cwtl
loop
push
jne
dec
xchg
xchg
and
dec
test
dec
pavgb
nop
ljmp
and
sarl
pop
push
or
mov
leave
jno
fists
mov
daa
mov
addr16
pop
pop
xlat
arpl
mov
or
and
push
test
popa
xlat
test
imul
jle
mov
fidivrl
rclb
mov
fmull
and
lcall
repnz
xor
adc
cmp
jecxz
sub
in
cli
dec
aaa
aas
add
mov
dec
xchg
out
sarl
dec
popf
imul
inc
pop
push
cli
dec
jns
sarb
cmpsl
sarb
aad
aaa
jnp
adc
or
in
adc
movsl
xchg
in
aas
sub
mov
cmpsb
adc
inc
push
daa
mov
ja
lahf
mov
js
jbe
jns
jmp
gs
leave
dec
adc
lods
mov
sahf
mov
inc
pop
fdivs
cmp
jbe
aaa
lock
aaa
lods
sti
movsl
and
inc
jp
jl
shrb
or
pop
pop
jg
inc
add
filds
pop
jg
popf
popa
mov
adc
jp
ljmp
inc
lcall
pop
mov
mov
ret
jae
inc
fcoml
sub
push
inc
add
or
add
sbb
dec
pop
loope
subb
dec
jnp
mov
insl
sbb
ja
cmpsb
ja
inc
lahf
out
aaa
pop
lds
jecxz
jp
dec
sbb
out
mov
cmp
loope
lods
push
and
jmp
mov
fistpll
int
out
mov
pop
or
es
imul
lods
jmp
xchg
stos
and
les
push
into
ds
pop
mov
dec
or
push
cmp
insb
idivb
jp
push
xchg
imull
ja
mov
push
mov
mov
repz
popf
adc
or
push
sahf
out
ds
inc
lcall
lds
or
and
pop
cmp
in
std
clc
and
fdivrs
adc
add
mov
mov
dec
mov
pop
jge
stos
fisubrs
adc
xchg
movsl
mov
adc
int3
fsubp
inc
nop
push
scas
or
testb
sub
and
outsb
sbb
adc
int
inc
fldcw
mov
xchg
push
mov
sub
xor
add
cltd
mov
jp
imul
sti
loope
dec
sbb
mov
hlt
cmp
leave
movaps
sbb
add
ds
out
mov
out
and
inc
mov
sub
outsb
rorl
pop
or
addr16
or
and
and
dec
or
out
lret
jo
jo
gs
test
sbb
shl
jp
xor
or
push
jo
in
sub
and
lock
adc
imul
outsb
lret
xor
xor
mov
or
sub
push
sti
or
dec
add
and
pop
pop
cmc
cmpsl
jmp
adc
ret
imul
push
lods
xor
jns
cli
jne
js
or
stos
mov
mov
icebp
adc
insl
xor
push
int3
inc
adc
and
push
or
in
push
movsl
ret
and
jbe
inc
das
jmp
imul
mov
cmc
mov
pop
sub
lods
pop
stc
and
fimuls
jbe
mov
andb
scas
push
push
cmp
icebp
adc
test
and
dec
cwtl
das
or
adc
cmp
lret
outsl
and
in
cmp
stos
sub
int
ficoms
mov
loop
adc
mov
sub
cmp
test
dec
pop
jbe
mov
sub
test
jecxz
push
shrl
jns
roll
mov
inc
jae
shll
or
cli
cs
rcrb
test
pop
daa
stos
addb
cmpsb
mov
jne
jmp
pop
push
pop
xchg
mov
xcrypt-ofb
cmpsl
stos
in
push
loopne
xor
pop
add
xchg
loopne
pushf
test
jle
mov
sub
inc
pop
pusha
and
jecxz
xor
out
stc
pop
push
sub
cltd
movsb
pop
mov
push
sub
jle
hlt
nop
scas
frstor
cmpsl
cs
out
enter
and
fisttpll
and
repnz
cmpsb
cmpl
mov
pop
push
and
push
adcb
je
push
or
mov
mov
scas
push
jp
jb
mov
lods
pop
mov
and
adc
mov
push
add
ret
mov
cmp
push
call
push
push
lock
fcompl
mov
xor
int3
into
ficoml
jle
add
shlb
or
imul
outsl
stos
cmp
cmp
cmp
xor
push
test
or
das
shrb
into
mov
les
js
outsl
mov
jmp
adc
pop
lea
inc
adc
cli
jbe
fildl
imul
loop
xchg
fiadds
push
vpmacssww
sbb
bswap
mov
pop
shrb
xor
xor
rol
mov
rclb
sub
xor
repnz
out
xor
fimuls
inc
and
mov
cltd
mov
cmc
xor
and
jne
es
adc
adc
xor
syscall
fdivl
xor
sub
pop
xchg
popf
and
pop
outsl
cmp
gs
push
loopne
sbb
sbb
add
jae
mov
cmp
fcomps
push
dec
lock
xchg
sbb
mov
out
mov
stc
lea
mov
pop
jae
sub
xchg
xchg
jb
adc
cmp
sub
xor
or
pop
jg
cmp
popa
push
icebp
addr16
and
ficomps
scas
cmp
xchg
fdivp
out
xchg
shrl
jae
idivb
outsb
sbb
test
clc
lds
lea
adc
fmull
jmp
test
data16
push
push
inc
fstpl
mov
rol
lods
mov
arpl
pop
cltd
inc
and
fs
xchg
pop
scas
aas
roll
inc
cs
or
adc
mov
gs
add
bnd
js
cmc
std
or
and
or
imul
dec
cmp
jae
push
rol
fst
xor
aas
pop
inc
xor
out
and
lods
aaa
lods
cwtl
sti
cmpsl
xor
in
mov
aas
setl
ja
or
ds
xchg
std
adc
into
jb
cld
clc
adc
xchg
mov
cmp
lret
sahf
fst
sbb
ja
mov
push
sbb
stc
inc
movsl
inc
push
xchg
add
sbb
stos
movsl
popa
mov
cwtl
jg
lds
fcmovu
sbb
or
jge
jle
mov
out
push
lret
push
add
xor
rcl
add
lcall
or
decl
test
leave
pop
cmp
out
pop
xchg
jmp
addr16
or
or
xchg
shll
shrl
lret
repnz
pop
push
sbb
popf
mov
ret
pop
push
aaa
inc
bound
bound
pop
adc
jecxz
dec
xchg
xor
mov
aaa
int
xor
sbb
xor
movsb
std
mov
test
xchg
test
das
sbb
sti
clc
mov
inc
sub
popf
addr16
in
je
push
loop
mov
jle
cmp
rolb
inc
push
shl
lea
jmp
adc
pop
es
not
clc
lret
test
stos
dec
mov
dec
push
jne
mov
shrd
imul
push
gs
xor
out
sub
fbld
popa
inc
lcall
stos
enter
insl
sub
sbb
sbb
xor
das
jecxz
xor
jno
mov
mov
cmp
lods
cmp
push
psubusw
mov
xchg
imulb
jne
loope
mov
and
in
addr16
inc
sbb
pop
add
jl
mov
testl
aas
jno
pop
loop
jo
dec
repnz
aaa
xor
subl
mov
dec
cmp
push
or
xchg
xchg
mov
push
fwait
ds
mov
adc
outsl
cltd
mov
or
cmp
cmpsb
ds
xchg
sub
leave
cli
lcall
dec
lret
call
stc
adc
xor
fucomi
scas
pop
jg
cmp
scas
cmp
fidivl
push
push
and
cltd
call
aam
jbe
rcl
add
dec
pop
and
jp
ficoml
hlt
daa
dec
outsl
cwtl
mov
inc
pop
stos
repnz
fs
push
loopne
fisubl
aam
shl
inc
push
in
hlt
jo
sbb
pop
stos
cs
subl
loope
mov
mov
or
or
ret
cs
sub
cli
sahf
ficoms
sub
push
mov
in
inc
mov
and
lahf
push
sahf
inc
xchg
xchg
sahf
xor
pop
jle
jmp
lods
push
mov
xchg
dec
jo
pushf
sbb
xchg
inc
shrl
sbb
mov
repz
mov
mov
test
out
in
and
xchg
shrl
in
inc
jmp
pop
mov
push
ds
fcom
sbb
iret
leave
out
cli
je
mov
bound
test
fs
or
imulb
jge
jb
adcb
sub
xor
and
popa
and
divl
je
mov
test
js
movlps
add
sub
sbb
push
add
cmp
adc
enter
test
test
xchg
mov
or
shrl
xor
outsb
call
cld
cmp
pop
push
or
dec
sub
in
cs
add
hlt
add
into
jl
inc
push
push
ja
gs
pop
mov
stos
daa
lcall
out
xlat
dec
cmp
or
ficoml
inc
mov
pop
mov
jp
push
pop
xlat
dec
cmp
or
ficoml
inc
mov
pop
mov
jp
push
pop
xlat
dec
cmp
or
ficoml
inc
mov
pop
mov
jp
push
lock
dec
mov
aas
mov
js
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
dec
and
push
pop
pop
push
std
mov
movsl
fst
lods
std
in
in
adc
dec
and
cmp
test
test
mov
stos
fst
lods
cmc
mov
or
sbb
sub
sub
gs
ljmp
fldcw
insl
push
xor
jmp
cld
mov
mov
test
int
mov
stos
les
push
aam
xchg
gs
cmp
jg
inc
ret
lock
dec
int
faddl
lea
popa
ljmp
xor
or
add
lods
cmp
adc
adc
dec
stos
sub
sub
push
fiadds
sub
vmovd
mov
mov
sub
xchg
dec
xchg
test
cld
mov
push
out
sub
mov
int
call
fisubrl
stos
out
ds
insl
cwtl
push
or
enter
nop
push
xchg
dec
cmc
cwtl
in
fsubrl
jge
dec
and
cmp
mov
popf
std
lods
int
lods
fnstsw
jns
pusha
scas
push
or
es
and
gs
xchg
sub
mov
shlb
jp
fs
pop
dec
push
or
dec
inc
adc
ss
mov
in
aad
scas
rolb
cmp
dec
sub
or
test
mov
movsl
fst
lods
lds
adc
dec
and
cmp
xchg
in
test
mov
movsl
fst
lods
lds
adc
mov
daa
sub
mov
cmp
mov
out
mov
lcall
sub
nop
pop
mov
arpl
jge
lods
mov
dec
and
mov
lock
xor
xchg
mov
mov
pop
push
clc
add
cli
xchg
cmp
fdiv
push
lcall
out
mov
cmpsl
jb
cmpsl
fcmovu
adc
outsb
cmpsl
and
pop
aam
cltd
lds
mov
push
mov
xrelease
or
mov
je
inc
dec
xor
add
adc
pop
dec
mov
testl
test
mov
sti
sub
or
xchg
stos
imul
sub
out
jb
xlat
rcr
cmc
mov
insl
and
rorl
test
int3
into
xor
mov
pop
adc
add
cmp
push
cmp
push
pop
jae
sub
je
out
dec
inc
lcall
sahf
cmpsl
aam
roll
in
xchg
lret
push
xchg
pushl
jno
cltd
push
pop
push
add
test
andl
push
iret
mov
xchg
lock
clc
out
lock
xchg
cs
sbb
add
les
add
or
cmp
les
push
and
or
pop
xor
into
mov
adc
ret
test
outsl
mov
or
repz
outsl
mov
jae
testl
mov
fwait
movsl
push
mov
mov
push
sub
sbb
ja
sub
cli
jl
xchg
out
int3
ljmp
dec
test
xchg
cld
xor
mov
movsb
adc
push
cmp
xor
lahf
xor
loop
mov
je
fsubr
pop
mov
psubsw
in
and
pop
movsb
cmpl
push
mov
shrb
movsb
pop
dec
imul
dec
clts
fisubrs
lret
fildl
ja
mov
cmp
adc
jbe
cmp
lds
repnz
fisubs
jae
nop
adc
addr16
in
pop
cmp
scas
nop
mov
in
add
adc
cmp
inc
sub
and
scas
jae
jg
or
or
cmp
and
and
stos
call
pop
sbbb
enter
add
xlat
popa
sub
sub
ret
enter
ja
pusha
testl
sub
push
adc
fnstsw
and
and
test
sbb
lcall
lcall
orl
lahf
scas
adc
push
js
test
xchg
add
or
pushl
and
dec
push
mov
lea
out
stos
cmp
ret
pop
jb
lods
into
es
push
push
push
and
jnp
movsl
pop
xchg
pop
fs
xor
push
or
aad
mov
adc
sti
aad
add
push
addl
push
pusha
push
popf
mov
push
sahf
push
and
mov
jmp
jne
or
inc
ret
nop
jg
cmp
test
popa
sti
test
push
ficomps
jo
loope
loop
inc
movsl
daa
movsb
popa
mov
divl
movb
int
jnp
mov
idivl
test
inc
jecxz
mov
sub
push
and
stos
push
and
scas
into
lcall
push
test
daa
std
cwtl
dec
test
push
sarb
xor
iret
push
jns
mov
sarb
sbb
adc
loopne
pop
push
lret
fwait
sbb
hlt
mov
inc
dec
xchg
add
fwait
adc
das
std
out
push
divl
pusha
adc
mov
sbb
andl
cmp
out
xchg
xchg
jmp
mov
mov
mov
lds
sub
test
imul
mov
fidivs
push
jle
test
jns
out
in
ss
icebp
fwait
in
push
pop
hlt
js
lret
cwtl
movsl
sbb
sbb
in
out
jecxz
lods
jg
leave
int3
lea
mov
enter
test
jl
jo
xchg
or
mov
mov
xchg
mov
in
fadds
loop
adc
iret
leave
sar
mov
mov
mov
xchg
out
icebp
outsl
add
and
xor
cmpsl
jle
cmp
sbb
adc
jno
jle
and
fiadds
call
sbb
xorl
jp
stc
in
mov
shlb
fimull
faddl
cmpsl
adc
clc
pusha
lods
pop
push
fxch
xchg
adc
scas
xor
inc
inc
or
jecxz
cmpsl
std
add
scas
pop
mov
jmp
push
push
push
mov
inc
mov
in
inc
add
sub
call
inc
dec
stc
stos
ficoml
and
out
jl
frstor
fldcw
fsin
int
les
xor
aad
fstpt
add
pop
and
hlt
mov
cmc
xchg
jp
in
sbb
inc
mov
call
or
aad
and
daa
push
cmp
mov
es
cmpsb
leave
jmp
imul
xor
ds
mov
jbe
insl
sti
fisttpll
outsb
rcll
mov
cld
loop
pop
jnp
jbe
pop
sbb
and
dec
push
xor
dec
in
sub
in
jmp
scas
icebp
inc
ljmp
fnstcw
test
mov
inc
movsb
or
mov
into
repz
mov
arpl
cwtl
loopne
adcl
xchg
sahf
scas
ror
xchg
nop
rorl
fcmovne
movnti
xchg
lock
mov
cld
ds
push
call
pop
mov
iret
into
xor
pop
call
adc
pop
sbb
add
mov
jp
inc
sbb
sub
std
cli
adc
aas
cmp
cmp
cmp
lcall
notl
xchg
xor
mov
dec
js
xlat
mov
addb
pop
mov
pusha
or
mov
inc
inc
push
test
shl
xor
jecxz
mov
mov
push
dec
adc
xor
jno
ss
jecxz
es
mov
and
xorl
mov
pop
lods
sub
jg
sarb
dec
add
sbbl
inc
insb
arpl
outsl
and
push
daa
xchg
into
push
inc
popf
jbe
pop
imul
push
out
inc
xchg
cli
mov
cmpsb
aaa
test
fisttpl
sbb
xor
jle
dec
and
push
test
adc
test
cmp
mov
xchg
push
stc
loopne
loope
imul
ret
mov
into
xor
xchg
mull
xchg
jno
mov
adc
xor
jo
ficompl
fmuls
sti
push
in
ja
jg
je
or
js
lret
jp
dec
movsb
pop
out
pop
mov
push
mov
iret
add
xchg
mov
push
addr16
js
mov
dec
popa
aaa
cmp
pop
rcl
scas
fsubl
cmp
movsb
and
mov
call
add
lods
mov
jg
stos
and
fsubrs
lahf
movsb
cmpsl
mov
jb
je
sbb
ret
or
mov
add
iret
pop
je
jge
xchg
sarb
xor
dec
out
fstpl
xchg
xchg
inc
xor
out
stc
imul
in
out
das
std
iret
inc
jg
popa
jge
movsl
dec
dec
and
push
mov
bound
insb
xor
mov
add
cltd
push
xor
sub
mov
jle
mov
leave
lcall
and
add
sbb
mov
sbb
or
imul
popa
movsl
or
movsb
push
call
and
jge
test
rcr
pop
cmp
loopne
push
mov
mov
jmp
popf
movl
lock
cltd
lret
lock
sbb
push
adc
cmp
sbb
int3
in
rolb
leave
push
xor
mulb
jge
mov
lret
xorb
mov
adc
dec
inc
pop
jmp
fcoml
loope
lahf
mov
ret
mov
jl
pop
cmc
dec
pop
sub
mov
jp
fstl
cwtl
cmp
push
out
mov
popa
xlat
jmp
aas
sbb
bound
mov
cs
inc
mov
nop
add
mov
lret
out
inc
ljmp
jmp
push
push
xor
lahf
cmpsb
fstps
adc
repnz
mov
je
shll
push
inc
inc
ljmp
js
jp
pop
lret
dec
nop
clc
in
dec
push
out
jne
andb
enter
scas
ret
mov
iret
dec
mov
test
or
pop
ja
cld
repnz
mov
cmp
sbb
mov
xor
add
movb
dec
mov
and
mov
shl
push
mov
popw
into
cmp
outsb
insb
jecxz
and
dec
dec
cmp
and
cld
aad
push
fcoms
and
fiadds
cwtl
addl
sbb
jmp
and
xchg
shlb
or
xchg
dec
in
je
insl
pop
aaa
orps
jmp
inc
mov
lahf
xchg
ljmp
fsubrs
into
xchg
xchg
jo
rcrb
cld
es
xchg
push
and
hlt
ljmp
aad
mov
js
jmp
jmp
cld
sbb
fidivrl
dec
xchg
xchg
cmpsb
lods
loopne
insb
lock
imul
cmp
pop
mov
jg
mov
faddl
fisubl
xor
stc
inc
lret
out
pop
push
iret
xor
scas
das
mov
leave
cli
pop
pop
or
jno
adc
js
inc
mov
shrb
dec
xor
mov
dec
push
scas
adc
and
das
popf
insl
sub
cmpsl
popa
add
mov
and
xchg
and
mov
sub
popa
ret
repz
cmp
xchg
dec
or
push
out
push
bound
pop
push
lcall
addr16
mov
daa
ljmp
dec
iret
lock
or
repz
daa
dec
cwtl
pop
aas
jbe
add
pop
out
add
test
mov
in
cmp
enter
xchg
into
imul
movsl
aas
rolb
rolb
pop
imul
cld
pop
icebp
and
ss
aas
jnp
mov
loopne
mov
ss
dec
cmp
jno
and
jbe
loope
pop
mov
cmc
cmp
pop
push
mov
mov
add
in
adc
push
insb
and
push
and
push
mov
add
push
mov
fiaddl
out
xchg
xchg
cmp
dec
scas
inc
shrb
mov
xlat
adc
jp
add
mov
xlat
xor
aad
mov
jnp
outsb
shl
lret
negl
clc
xchg
das
movb
jae
pop
mov
lea
dec
cmp
mov
iret
push
xchg
mov
inc
lock
dec
dec
addr16
pop
xor
mov
and
sub
test
add
test
sbb
push
insb
stc
stos
lret
test
test
push
adc
inc
xor
and
xor
repnz
xchg
push
aaa
cld
inc
call
sbb
scas
inc
add
xchg
dec
ja
clc
pop
xor
fdivrp
adc
sub
leave
sbb
out
pop
in
pop
dec
aaa
fistps
adc
xor
add
out
ficoms
fimull
push
fstpt
cli
dec
xchg
inc
movsl
xor
and
test
ret
je
addl
mov
stos
xlat
jae
push
lret
dec
adc
iret
dec
jmp
cmp
pop
rorl
arpl
adc
adc
pop
mov
pop
xlat
mov
jp
xchg
mov
mov
pushf
dec
mov
lds
pop
lods
out
push
mov
mov
push
pop
jae
insb
pop
int
dec
test
imul
icebp
or
aam
xchg
or
inc
jnp
xchg
push
mov
mov
or
addr16
or
push
mov
out
xor
xchg
sub
movsl
lahf
movhps
gs
ret
test
adc
aad
xor
neg
add
fistps
aad
aam
fnstcw
ja
xor
dec
push
rcr
subl
xchg
add
mov
lea
sub
mov
cld
imul
push
es
bound
push
pushf
adc
and
add
pop
insl
add
jecxz
xor
adc
mov
lret
loopne
mov
xchg
mov
push
xchg
movsb
cmpsb
pop
lret
xchg
xchg
ss
push
imul
push
adc
xchg
xor
or
jle
lods
mov
loop
push
mov
stos
mov
mov
mov
xor
stos
ds
lods
mov
cltd
mov
fidivl
mov
jge
lret
lcall
pop
lahf
mov
outsl
cmp
mov
or
fdivr
mov
orl
mov
jbe
adc
dec
inc
push
inc
lods
rol
out
sub
nop
lock
sub
enter
lea
cmpsb
sbb
insb
divl
xchg
and
sub
mov
jecxz
in
jne
pop
hlt
icebp
xorl
adc
sbbl
push
lods
xchg
jne
js
lea
movsb
add
adc
scas
adc
sahf
inc
inc
mov
icebp
ret
xchg
xchg
xchg
cmp
xchg
mov
xchg
or
fcoms
movsl
pusha
xlat
stos
and
or
adc
mov
jg
in
xchg
inc
inc
cmpsl
lsl
adc
xchg
dec
imul
fistpll
inc
dec
movsl
jae
shlb
outsl
xlat
and
fcoml
ss
arpl
dec
push
rcrb
dec
pop
cld
xchg
stc
adc
arpl
insb
or
dec
pop
xchg
mov
pushf
std
jge
mov
cli
jb
lea
outsb
cmpsb
xchg
inc
mov
inc
lcall
cld
in
sub
mov
adc
inc
insb
fiadds
xchg
stos
mov
lock
rcl
add
fdivr
mov
and
pop
sub
push
xchg
jbe
mov
jg
repz
imul
cwtl
js
fwait
es
cmp
cmp
cld
xchg
mov
rcrb
jo
imul
repnz
gs
xchg
enter
push
imulb
notl
xchg
mov
adc
mov
sbbl
add
pushf
mov
clc
jp
fidivrs
je
jp
test
repnz
sub
or
xlat
flds
mov
xor
mov
lahf
jl
cmpl
push
iret
inc
ds
xchg
and
lea
xchg
aad
scas
mov
dec
insb
jns
cmp
outsb
cli
mov
cmovp
js
insb
mov
push
idivb
in
mov
in
sbb
icebp
push
jb
xchg
lock
mov
pop
arpl
mov
aad
sub
jl
jge
jno
sub
shr
push
lods
enter
lret
jl
ja
push
fbstp
sarl
sbb
add
sbb
xor
pop
inc
and
sub
lock
cmp
mov
push
sub
push
scas
xchg
mov
jae
push
ljmp
arpl
repz
cli
xchg
mov
mov
lret
push
xchg
addl
in
push
out
mov
iret
jnp
or
stos
jl
lcall
in
test
or
inc
sbb
push
inc
mov
jnp
out
mov
arpl
push
scas
test
scas
test
negb
xchg
mov
lods
or
push
mov
lahf
push
add
lret
test
insl
daa
pushf
xchg
sub
adc
sbb
mov
ror
jmp
add
cmp
jp
inc
inc
mov
in
sbb
test
nop
test
inc
aaa
je
adc
test
mov
icebp
push
icebp
test
sbb
cmpsl
shrb
popa
inc
mov
jle
lods
arpl
push
mov
push
cli
pop
int3
out
fwait
stc
mov
pop
inc
test
stos
enter
jmp
adc
jmp
adc
inc
loop
xor
nop
cli
out
imul
repnz
add
xor
icebp
jl
sbb
cwtl
sbb
stos
jle
scas
pop
ss
mov
inc
insl
push
clc
mov
leave
fxch
pusha
inc
ja
jle
movsl
popa
mov
or
mov
sbb
test
sti
jmp
or
jne
psubb
mov
mov
pop
pop
dec
fs
xchg
int
mov
push
rdtsc
sbb
xor
cld
jl
mov
fnstsw
fisttpll
pop
pop
out
cwtl
jae
sarl
loope
lahf
or
adc
negl
jge
inc
loope
in
in
mov
arpl
mov
fisttps
mov
mov
inc
sbb
je
mov
mov
xor
outsl
inc
xchg
lock
orb
fdivp
mov
aas
std
repz
pop
adc
pop
idivl
nop
push
jb
push
dec
lea
mov
fistl
stc
aas
movsb
enter
decl
into
add
enter
in
sub
mov
cwtl
jp
push
ja
leave
and
push
push
sahf
ljmp
pop
add
push
and
stc
hlt
data16
mov
jecxz
ja
sub
stos
cmp
in
imul
push
stc
cmp
ss
push
shrl
fwait
sbb
js
insl
imul
push
xchg
sbb
movsb
xor
mov
inc
test
aaa
cmpsl
mov
dec
ja
mov
pop
inc
stos
inc
les
iret
pop
rclb
lods
jbe
inc
inc
paddusb
gs
scas
mov
inc
les
negl
pop
jbe
mov
mov
lock
lcall
cmp
cmovl
inc
push
cli
fimuls
mov
lret
lret
jle
lods
jmp
les
movsb
fidivl
inc
loopne
std
ljmp
and
imul
and
mov
mov
xchg
cs
cmpsl
pop
hlt
test
mov
into
std
pop
movsl
add
cmpsb
aaa
mov
sbb
cmpsl
xor
jge
or
cld
dec
and
int
sbb
repnz
pop
and
icebp
or
mov
adc
clc
pop
mov
pop
divl
in
push
xchg
stos
ja
lea
add
sub
sub
and
inc
popa
fbld
mov
xchg
adc
ret
xchg
mov
push
mov
lea
cmpsl
fstpl
inc
loop
ror
test
or
arpl
sbb
enter
fbstp
and
int
cs
icebp
bound
push
mov
dec
imul
add
pop
cmc
mov
dec
pop
fs
pop
loopne
jmp
sbb
test
in
data16
lods
or
lods
xor
pop
and
js
test
jb
mov
push
mov
xor
daa
jmp
mov
push
imul
pop
xor
xchg
jp
icebp
insl
hlt
and
sbbl
mov
dec
addl
jp
inc
cmpsl
sti
mov
and
adc
mov
ss
cmc
sbb
and
les
pop
scas
notb
int3
stos
jmp
adc
rcl
mov
pop
cmc
scas
mov
jmp
adc
cmp
jle
popa
sbb
adc
in
repz
or
fidivrs
sbb
test
mov
push
enter
out
out
into
loopne
push
es
loopne
adc
fbld
sbbb
mov
js
out
push
pop
adc
sbb
lods
lock
insb
mov
xchg
mov
pop
sub
jg
inc
lods
jg
fsubrs
mov
imul
and
shlb
xchg
mov
xchg
sbb
lcall
fidivl
adc
out
in
sbb
xor
mov
jbe
roll
dec
repz
pop
and
pop
adc
mov
xchg
in
arpl
ret
add
in
inc
mov
mov
mov
add
and
repnz
add
clc
aaa
out
cli
xchg
mov
mov
jecxz
pop
test
lds
mov
and
sti
loop
fsubl
mov
outsb
inc
jg
lcall
fdivrl
xor
sub
outsl
std
add
mov
movsl
jmp
pop
cmp
in
ret
or
mov
mov
testl
inc
and
loopne
popf
push
mov
dec
add
pushf
stc
sbb
stos
jne
push
pop
enter
fldt
xchg
xchg
dec
hlt
insb
andl
inc
lret
pop
push
mov
mov
lret
and
and
idivb
inc
pushf
repnz
jge
dec
and
cmp
xchg
in
test
mov
movsl
fst
lods
lds
adc
dec
and
cmp
xchg
in
test
mov
movsl
fst
lods
lds
adc
dec
and
cmp
xchg
in
test
mov
movsl
fst
lods
les
adc
dec
and
mov
push
jp
pop
int
stos
mov
jb
bound
sti
js
dec
fcmovnu
adc
fwait
pop
jmp
call
pop
fsubrs
test
mov
jmp
sti
js
dec
fistpl
sub
insb
imul
fsubrs
enter
cmp
jmp
sti
js
loopne
pop
stos
adc
add
out
add
jnp
sub
push
shrl
cld
je
fwait
push
mov
jo
test
ljmp
cwtl
daa
push
scas
xor
mov
adc
les
dec
out
pop
push
int
test
mov
les
mov
adc
les
jbe
jnp
add
scas
out
xchg
imul
sbb
mov
mov
sub
sti
push
stos
sub
out
pop
mov
and
test
adc
push
jge
nop
cwtl
sbb
fldl
mov
mov
fwait
sbb
mov
pop
fdivrs
push
mov
adc
pop
bound
jae
jae
pop
in
call
rcrb
inc
or
sti
mov
int3
fistl
sub
cwtl
imul
dec
fcomps
sub
negb
or
push
int3
popa
jge
scas
leave
mov
pop
ja
leavew
outsl
stc
mov
mov
jge
inc
fisttps
mov
je
lea
scas
xor
dec
hlt
pop
jmp
aad
test
sti
cmp
dec
mov
sbb
jnp
dec
enter
test
mov
jmp
sti
js
dec
fistpl
sub
sbb
jnp
dec
enter
test
mov
jmp
scas
inc
jmp
je
mov
sbb
push
outsl
push
jl
and
sub
insb
test
sbb
loop
push
mov
jmp
out
pusha
cmp
lcall
inc
clc
xchg
jbe
mov
in
and
mov
ljmp
fldt
inc
cwtl
inc
sti
or
ret
sahf
fisttpll
cmp
sub
jb
and
add
fistps
dec
lcall
mov
or
push
xchg
enter
popa
mov
repnz
fldcw
loop
popa
or
add
xchg
or
aam
fsubl
cli
mov
xor
push
loopne
cwtl
mov
fimuls
sahf
lret
cmp
push
call
repz
lea
sub
push
sti
les
fwait
mov
xchg
imul
cmp
adc
push
mov
lea
sbb
push
insl
rcll
cmpsb
pop
clc
mov
jne
xorb
and
jle
stc
xor
mov
mov
adc
inc
pop
lret
push
or
jb
addr16
movsb
out
adc
mov
loop
adc
push
icebp
push
mov
pop
lret
int3
xchg
jp
test
sbb
xchg
dec
sbb
scas
out
mov
neg
mov
and
jo
andb
sub
test
or
loope
cs
add
fistps
mov
andb
xchg
ss
scas
mov
ret
xchg
xchg
addl
cmp
sbb
jge
xchg
sbb
es
sbb
mov
dec
outsb
std
fiadds
sbb
les
ficompl
gs
xchg
nop
std
imul
ror
add
and
scas
leave
insl
and
add
test
insl
xchg
iret
movsl
scas
pop
pusha
insl
mov
push
cmpsl
xchg
clc
jg
mov
mov
mov
mov
lahf
or
test
lods
cmc
imul
xlat
xor
out
push
jns
and
adc
xchg
mov
add
inc
shlb
fdivp
lahf
out
std
lret
inc
jo
mov
pop
andl
fmul
in
jae
cs
xor
push
xor
xchg
bound
jl
je
mov
mov
mov
or
imul
cwtl
push
mov
sbb
jge
or
je
lods
es
js
pop
sbb
cld
fs
pop
aad
arpl
pop
inc
sbb
dec
insl
fucomi
in
cmp
call
cli
ds
or
aaa
jbe
cmpsb
xor
int3
addr16
pop
push
jl
and
adc
pop
ss
jecxz
sbb
js
jae
movsl
sub
pop
punpckhdq
mov
jno
insl
pop
and
pop
scas
clc
sub
rorb
mov
lds
gs
or
fnstenv
scas
cmp
negb
rcrl
dec
mov
fisubs
pop
push
cltd
ret
subb
sbb
xchg
cmpsb
filds
mov
test
out
arpl
or
jbe
es
push
popa
scas
dec
lret
aas
push
mov
cltd
push
leave
push
mov
pcmpgtd
cmp
imul
lahf
daa
ds
enter
je
sub
xchg
fldl
fidivrs
sub
adc
sbb
rclb
std
ss
jb
jge
inc
push
dec
sbb
rcll
jp
inc
mov
imul
pop
mov
mov
xor
inc
jecxz
xchg
sbb
lret
mov
pusha
ret
inc
icebp
inc
fidivrl
xchg
and
rcll
jecxz
adc
add
pushf
jns
dec
mov
adcb
into
jl
pop
xor
xchg
push
and
test
mov
sahf
mov
push
cmp
lea
mov
sahf
ja
jno,pt
mov
pop
inc
aad
insl
pop
dec
imul
add
jecxz
and
xor
add
and
inc
jg
xchg
mov
mov
test
stc
frstor
out
js
fists
cmp
pop
lods
les
std
fcompl
jns
clc
dec
jmp
stc
lahf
cmp
lret
sbb
mov
cmc
loop
out
int3
inc
jle
clc
aad
mov
xchg
call
aas
pop
mov
cmpsb
sub
and
subb
ret
pusha
inc
adc
inc
lcallw
mov
in
and
leave
outsb
add
dec
scas
push
add
mov
lods
sti
lret
cmpsl
jnp
or
pusha
lcall
lea
mov
in
rolb
sub
stos
sahf
shrb
xor
ljmp
pop
ds
mov
and
imul
and
xchg
stos
sbb
add
xchg
repnz
dec
scas
lret
sub
jbe
cmp
pop
add
pop
pop
js
ljmp
daa
pop
xchg
xor
add
push
push
mov
inc
inc
push
mov
scas
fistpl
in
outsb
in
and
loopne
and
adc
cmc
jmp
mov
fbld
je
cmp
inc
mov
sub
pop
arpl
jnp
shll
out
into
rcll
sbb
mov
fisubl
dec
cmpsl
scas
lcall
jno
int3
add
lds
adcl
imul
add
jae
xchg
lret
pusha
inc
jle
bound
mov
test
add
mov
mov
push
xorl
pop
jecxz
nop
and
ficoms
xchg
dec
es
mov
jno
xor
lret
cli
mov
fadd
in
cmc
fisttps
push
loop
or
jbe
lds
sarb
andl
mov
mov
data16
push
negl
sbb
jmp
pop
stc
jp
dec
loope
xor
test
je
dec
cmc
or
aas
dec
sub
cltd
out
jns
mov
clc
mov
stos
xchg
push
pushf
mov
cmpsl
rcrl
sbb
cs
xor
jge
mov
add
jns
je
jl
add
push
in
jne
dec
push
iret
sti
out
rcll
push
loope
sub
repnz
stos
fcompp
into
stos
push
mov
je
lds
ljmp
mov
sahf
fidivrl
adcb
test
and
aaa
jle
cmp
test
inc
sbb
ret
mov
mov
mov
adc
aaa
mov
mov
cmpl
dec
xor
sub
scas
add
fidivs
pusha
std
cli
jo
mov
inc
lret
pop
xor
pop
add
push
jl
dec
leave
fidivrs
xchg
mov
inc
cmp
mov
inc
fidivl
out
inc
pop
mov
fdecstp
xchg
sub
stc
ljmp
xlat
dec
xor
cmp
gs
adc
push
mov
icebp
test
les
les
adc
or
xchg
fcomp
jge
mov
adc
fs
xchg
sahf
std
pop
and
es
mulb
daa
call
xor
aaa
push
into
shr
or
ret
dec
rcll
fidivs
mov
push
inc
aaa
sub
loop
mov
sub
test
inc
pop
dec
dec
adc
arpl
push
or
xorb
add
repnz
mov
enter
or
sbb
pop
jg
popa
loopne
aam
lods
ss
cmpsl
rclb
in
cmp
and
test
push
mov
sub
push
pop
push
sub
fcmovnb
push
rclb
cmp
xlat
cmpsb
loope
aas
push
insl
fwait
subb
xor
cmp
adc
jmp
pop
shl
lret
mov
add
mulb
sahf
push
clc
pop
mov
adc
add
cwtl
and
mov
ret
mov
jne
leave
pop
jecxz
pusha
movsb
lea
cwtl
xchg
cmc
adcl
mov
aad
xor
push
das
push
push
mov
jmp
fbld
cmp
sub
jecxz
std
sbb
mov
adc
out
mov
cmpsl
lock
leave
cmp
dec
sbb
push
negl
mov
or
sbb
lds
xor
xchg
or
leave
leave
andb
ret
imul
jno
or
and
jno
add
or
push
mov
sbb
pop
test
mov
xor
pop
ljmp
imul
insl
insb
loopne
add
in
adc
fiaddl
repnz
icebp
add
mov
fcomi
fcompl
add
incl
aas
xchg
push
or
sbb
sub
sub
mov
pop
xchg
cli
mov
xlat
cmp
jl
mov
dec
stos
push
cmpsb
cwtl
mov
pop
sub
dec
iret
shll
loope
adc
sub
imul
jg
in
dec
cmpsb
les
into
jl
popf
add
inc
icebp
out
xchg
or
pop
mov
xor
push
aam
jno
je
cwtl
and
call
inc
sti
jp
lret
lea
sti
lods
and
dec
cmp
icebp
imul
dec
mov
test
dec
fldt
mull
jl
ja
cmpsb
ds
rorl
out
and
dec
fisubrl
test
dec
decb
aas
imul
aaa
loop
push
mov
imul
outsl
test
pop
jecxz
mov
jbe
mov
inc
aam
or
add
pop
xchg
js
scas
notl
cmp
jae
adc
push
gs
and
and
in
pop
mov
scas
pop
hlt
pop
inc
mov
push
push
push
mov
dec
iret
rorb
enter
popf
sub
out
adc
fs
popf
jp
dec
xchg
mov
iret
cmpsl
in
and
shrl
call
std
sti
push
push
xchg
pop
sarb
arpl
iret
test
stos
aad
enter
xor
clc
sarb
fmul
arpl
xchg
cmp
xchg
cmpl
insl
ja
fs
movsb
and
push
sub
push
and
jnp
push
xchg
scas
imul
push
aam
les
sub
data16
movsl
sbb
add
flds
push
inc
jle
cwtl
aad
leave
jecxz
adcl
ljmp
add
cmpb
push
xchg
mov
or
pop
push
test
mov
xor
dec
sbb
subb
rcll
loop
xor
in
gs
stc
int
mov
test
or
inc
cmp
and
push
aaa
out
sbb
cmp
push
mov
std
inc
add
rcrl
pop
and
sub
out
andl
pop
mov
lods
sub
pop
and
inc
push
stc
fstpt
mov
add
lds
sbb
fistpll
or
pop
pop
add
loop
sahf
inc
mov
loope
andb
out
xor
lahf
add
sbb
dec
es
mov
std
loopne
cld
test
push
inc
jle
pop
test
popf
icebp
jl
xchg
mov
in
outsb
sbb
fisttps
xor
pop
or
movsl
inc
je
mov
scas
sahf
push
sbb
das
pop
rcrl
jno
add
call
pop
addb
or
shr
inc
std
mov
aaa
pop
mov
cmpsl
dec
xchg
or
push
xchg
aas
mov
rcl
dec
jo
je
rclb
frstor
sbb
ficompl
sbb
lret
cmp
subb
xchg
xchg
sbb
fcoml
scas
les
adc
mov
dec
mov
inc
sub
in
faddl
sub
inc
sub
xchg
adc
sahf
repz
shrb
push
push
xchg
adc
enter
aam
out
jne
ja
and
in
inc
imul
mov
cmpsl
dec
and
les
cmpps
roll
cmp
and
adc
enter
jnp
insl
mov
js
addl
add
mov
mov
movsb
and
repnz
rolb
cmp
addb
popf
xor
pop
pop
inc
cltd
add
adc
add
imul
mov
mov
dec
jne
lret
jg
push
mov
inc
mov
out
pop
into
cli
in
mov
inc
xlat
fldl
daa
cmp
push
insb
mov
push
out
push
jge
pop
clc
fsubrs
lcall
add
aaa
lds
pop
mov
adc
dec
int3
adc
xor
or
sarb
push
test
and
jmp
inc
mov
jne
jecxz
sub
cmp
addr16
test
jmp
fildll
pop
sbb
and
arpl
cmc
xor
cmp
adc
xchg
rol
jge
popa
stos
outsl
push
push
jo
pop
inc
stos
mov
shlb
inc
jo
jb
fdiv
popa
lds
pop
inc
imul
lahf
and
icebp
cmp
xchg
fwait
xchg
jg
sub
aad
fsubr
loopne
mov
xor
sbb
mov
mov
push
jg
mov
adc
cmp
or
mov
jl
mov
mov
xor
cwtl
sbb
nop
in
js
mov
ja
mov
pop
js
fsubrs
mov
jmp
leave
fisubl
sbb
dec
rcl
dec
insl
cmp
movsl
aaa
mov
jle
gs
push
in
adc
in
jecxz
pusha
movb
jns
std
mov
sub
pop
cld
adc
loop
sbbb
adc
cmpsb
arpl
fldenv
xchg
arpl
addb
cwtl
mov
mov
ja
ljmp
cmpsl
add
aam
rcrb
mov
sub
out
push
pop
mov
inc
mov
dec
adc
outsl
jnp
xorl
pop
addr16
pop
into
scas
icebp
mov
loopne
dec
mov
mov
push
sub
inc
push
subb
sub
std
cwtl
dec
add
movsl
adc
out
push
lods
mov
cmp
jmp
inc
call
sub
dec
mov
ds
or
mov
insl
jg
loopne,pt
mov
fmull
stos
sub
jae
mov
jmp
lahf
js
cmp
pop
int3
mov
dec
es
aas
fsubrs
mov
fdivrs
xchg
js
sub
fisubl
mov
fs
push
aas
in
popl
call
pop
sti
cwtl
mov
dec
imul
jl
lock
mov
xor
movsb
lods
hlt
mov
inc
add
xor
sub
addr16
jne
jnp
cli
jl
add
inc
ret
sbb
insl
sar
mov
test
nop
pop
inc
push
fisubl
jecxz
out
mov
push
std
jns
punpckhdq
push
xor
xchg
mov
push
pop
push
js
lret
push
sbb
into
hlt
sbb
cltd
pop
test
adc
inc
jb
push
mov
icebp
adcl
jno
mov
int
rorb
in
cmovs
xchg
test
repz
daa
add
cmpsl
xchg
rorl
xchg
mov
aad
mov
ret
jg
insl
adc
mov
cltd
lret
add
xchg
mov
mov
stos
jns
out
aam
sar
push
adc
sar
lds
adc
cmp
adc
stc
xlat
icebp
outsb
mov
pop
add
dec
cli
cmp
xchg
mov
in
or
ja
jl
int3
fcmovb
push
call
jae
fistl
mov
stos
scas
jecxz
cmp
push
imul
adc
push
push
dec
jecxz
out
adc
in
insl
ljmp
cmp
push
jne
stos
and
stos
lds
ds
push
scas
sub
dec
adc
mov
xchg
out
iret
push
ja
fs
mov
outsb
pop
js
in
test
adc
mov
sbb
into
testl
and
call
inc
sbb
les
inc
in
xor
cs
xchg
pusha
and
mov
out
push
mov
ret
ret
test
ljmp
filds
adc
sbb
aad
jle
cmp
std
xor
je
notl
test
xchg
xchg
pop
sbb
into
movsb
xchg
popa
push
out
cmp
jo
mov
jecxz
cmc
cmp
repz
xchg
add
mov
adc
test
ss
cli
mov
loop
test
andb
bound
bound
pop
movsb
in
cli
out
pop
ss
cwtl
mov
inc
not
cld
jmp
fdivr
adc
push
es
clc
clc
scas
adc
mov
or
or
lret
test
movsb
mov
dec
mov
adc
pop
mov
add
xchg
mov
loope
inc
das
cmp
mov
insb
mov
sub
ja
add
jecxz
xchg
das
mov
adc
sub
shrb
or
xor
daa
and
adc
sti
int
sti
inc
cmp
jb
mov
cltd
jo
testl
les
cmp
aaa
sub
pop
add
xor
pusha
hlt
adc
xchg
sbb
xlat
mov
adc
or
cmpsl
sbb
dec
pop
pop
cwtl
xorb
pop
and
mov
jmp
lock
int3
sub
int
leave
push
dec
das
mov
xlat
arpl
fldcw
loope
dec
cwtl
pop
jb
enter
cmp
loopne
ret
out
add
daa
mov
in
push
push
xor
or
sti
outsb
into
insl
arpl
xor
add
popf
fsubrl
jne
jge
repnz
cltd
add
ljmp
inc
pop
repz
push
js
mov
cmp
pop
mov
out
sarb
push
rcrl
jg
sbb
dec
popa
sarb
pop
mov
add
mov
pop
inc
add
ret
cmp
dec
and
hlt
and
inc
pop
ljmp
and
shrb
ss
xor
sub
iret
dec
shll
cmp
jle
dec
mov
dec
popa
icebp
sbb
imul
test
and
out
mov
fistl
arpl
pushf
lcall
out
leave
cmp
sbb
lret
stos
stos
jns
jno
movsl
out
fwait
les
or
dec
repz
add
fisubl
cmp
dec
dec
hlt
cmp
xor
faddp
xor
addr16
repz
test
adc
sbb
outsl
testb
dec
les
fisubrl
scas
or
orb
es
push
aas
and
lahf
js
repz
jl
pushf
iret
stc
pop
mov
mov
cli
jmp
mov
dec
test
dec
inc
out
push
nop
flds
sub
clc
fstp
and
mov
out
sti
mov
adc
xchg
lahf
push
test
mov
shrl
rcll
int
fists
insl
mulb
xchg
xchg
mov
test
pop
pop
pop
sbb
sub
xchg
sub
push
pop
pop
mov
mov
cmovge
inc
imul
mov
jnp
out
jo
nop
mov
jg
pop
jecxz
imul
push
inc
pop
outsb
cmp
xlat
fwait
mov
lods
mov
sbb
mov
stos
mov
lds
jns
ss
xor
aad
out
dec
push
arpl
int
pop
jb
aas
ja
fisttpll
das
jmp
sbb
jl
sbb
mov
test
rcrl
pop
out
mov
ret
mov
jecxz
aas
xor
xchg
cltd
lods
daa
mov
ret
daa
inc
and
fstpl
call
daa
lds
inc
in
mov
mov
or
inc
mov
dec
xchg
imul
mov
data16
jno
sbbb
addr16
pop
push
and
aas
andl
in
cmp
sbb
sbb
adc
popa
pop
jge
pop
adc
mov
movsl
cmp
push
in
jne
add
loope
negw
scas
ss
insb
dec
sub
fsubrs
mov
iret
mov
call
xchg
jecxz
mov
dec
and
dec
imull
adc
std
dec
sbb
jg
xchg
jmp
xchg
inc
add
sub
add
inc
stos
dec
sub
les
stc
gs
jl
xor
and
cmp
test
andl
xor
cltd
out
repz
lods
mov
add
add
inc
pop
xchg
cmp
out
dec
dec
inc
mov
mov
fstl
fisubl
and
sub
xchg
jno
push
cltd
dec
jmp
out
add
imul
popf
bound
xchg
test
xor
xor
sbb
lret
xchg
imul
add
add
aad
push
push
test
mov
in
jle
adcl
or
sbbl
rorl
xchg
outsb
jmp
arpl
and
aas
xchg
sbb
insl
js
and
pop
stos
sub
sbb
jnp
dec
enter
test
mov
jmp
sti
js
dec
fistpl
sub
sbb
jnp
dec
enter
test
mov
jmp
sti
xor
xor
pop
stos
sub
sbb
jnp
dec
enter
test
mov
ljmp
pop
stos
sub
sbb
jnp
loope
pop
scas
pop
and
addr16
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
jmp
sub
jp
dec
add
push
add
add
add
aam
add
popl
jae
loopne
roll
add
add
add
add
add
add
cmp
add
add
add
add
add
add
outsb
add
add
or
mov
and
mov
push
add
mov
xor
inc
add
add
add
add
add
add
jl
out
add
add
add
mov
insb
add
je
insl
add
add
add
add
add
add
adc
pop
add
add
add
add
add
mov
mov
insl
add
add
insl
add
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
add
pop
add
add
add
dec
add
add
or
add
mov
adc
pop
add
lods
add
add
js
xchg
add
add
add
add
add
add
add
add
add
loopne
push
add
add
add
add
ret
add
and
out
pop
add
add
add
add
add
and
add
add
push
add
jae
pop
add
add
pop
add
xor
fwait
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
outsb
add
and
add
popl
pop
add
daa
add
add
add
add
mov
lret
add
add
add
add
add
add
add
jae
and
add
add
push
test
xor
add
adc
aas
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
sbb
xchg
cmp
ja
fwait
add
outsl
add
add
add
add
roll
daa
push
imul
add
add
add
add
add
add
add
add
dec
add
mov
add
insb
add
dec
add
push
add
ja
mov
push
add
insl
add
mov
jl
pop
add
and
cmp
cmp
mov
mov
add
add
pop
add
add
add
add
add
jnp
movsl
add
inc
add
add
sub
mov
add
add
add
jmp
xor
add
outsl
add
add
add
mov
add
add
mov
add
add
mov
outsl
add
leave
add
add
add
sub
jg
xor
push
add
add
or
add
add
fadds
push
add
add
add
add
push
add
or
add
sti
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
xor
cmp
dec
add
add
out
pop
jns
jno
imul
jecxz
fildll
xchg
cld
mov
insl
push
mov
pop
sbb
and
aas
xorb
mov
aad
lret
into
nop
dec
adc
xor
sbb
sub
jl
pop
jmp
hlt
lock
stos
std
push
add
or
inc
pop
inc
fmul
mov
movsb
add
int
shl
mov
rorl
in
test
mov
pop
sub
divl
ret
jmp
gs
xor
enter
clc
out
pushf
push
push
cmpsb
and
sbb
lea
insb
mov
mov
arpl
sbb
mov
out
stos
gs
test
push
and
push
ret
loope
cmp
push
jno
int
faddl
pop
adc
pop
mov
mov
adc
mov
push
sub
dec
aaa
leave
sarb
jnp
jge
in
xlat
jns
sbb
push
aam
jo
adc
mov
sub
cmc
inc
sbb
pushf
xchg
lds
aas
mov
popa
andl
push
sub
jo
in
test
mov
sub
rcr
mov
imul
or
movl
into
adc
mov
pop
adc
push
stc
dec
popf
xor
gs
mov
push
test
and
adc
sub
pop
in
jae
fadd
inc
pushf
pop
fwait
mov
fnsave
dec
mov
pop
addb
adc
mov
xor
adc
xlat
dec
insb
test
jmp
rolb
cmp
cltd
rcrl
fbld
xlat
mov
test
adc
in
lret
rolb
xchg
pop
cmpb
out
xor
in
pop
pop
mov
test
sbb
test
dec
cmp
divb
adc
aaa
add
cmp
jmp
lret
or
and
add
or
pop
jp
ja
mov
jg
mov
cmpsl
enter
lods
cmp
xor
jne
int3
cmpsb
sti
test
lret
fidivrs
arpl
mov
xchg
inc
adc
jb
rcl
xor
loope
leave
cld
lock
out
out
leave
xchg
divl
in
pop
push
or
pop
and
out
lret
sbb
xchg
mov
cmp
pusha
lock
push
xor
test
dec
cmp
add
add
sbb
push
adc
jmp
repz
push
test
jmp
jmp
jns
mov
outsb
aas
sti
loop
ret
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
