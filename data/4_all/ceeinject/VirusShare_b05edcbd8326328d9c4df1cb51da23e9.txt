call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jne
gs
push
inc
inc
cmpl
add
aad
mov
movsl
test
gs
push
inc
inc
xor
adc
in
aad
lret
lds
xchg
test
dec
push
pop
inc
sub
cmp
add
mov
lret
sti
shl
sbb
or
adc
ret
push
push
nop
pop
sbb
mov
dec
push
mov
hlt
es
xor
nop
pshufw
mov
xchg
xchg
jp
mov
push
idivb
lds
mov
dec
xchg
mov
pop
movsl
xchg
adc
inc
pushf
jge
adc
xchg
and
ljmp
sbb
push
cmp
push
lahf
test
add
cmp
and
aam
xor
movsl
push
xchg
jnp
lock
adc
add
out
or
mov
sub
div
xchg
xchg
test
push
push
inc
inc
and
sbb
in
cmc
std
in
aad
lds
xchg
test
sbb
and
push
xor
push
inc
dec
pop
push
add
in
mov
mov
test
out
call
add
xor
imul
xchg
jecxz
loope
adc
or
jge
and
add
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
ljmp
lret
rolb
movsl
jle
xchg
fsubs
jmp
fists
mov
pop
cwtl
fsubr
lea
pop
pushf
adc
es
pop
cld
cltd
inc
fistpll
shl
xor
cmp
or
xchg
jns
adcl
in
mov
test
addb
cmpsb
out
sub
add
lret
sbb
sbb
push
inc
sbb
dec
test
inc
out
sub
ds
push
repz
and
cmp
pop
sahf
lea
cmp
neg
sub
jp
cmp
push
cmpsb
fiadds
push
stc
je
adc
andl
cmpsl
or
dec
sub
inc
icebp
shl
push
sub
int
lea
js
cmp
add
loopne
insl
mov
data16
sbb
movsbl
xor
divl
fcmovbe
test
scas
lcall
adc
pop
or
stos
cmp
mov
and
sbb
sbb
out
pop
mov
sbb
rcrb
ds
lea
fmuls
repz
jbe
fstps
jmp
loopne
lods
sub
push
push
pop
and
jnp
inc
xchg
ret
iret
jne
jp
pop
call
cwtl
mov
pop
or
cmp
adc
pop
adc
and
cmp
pop
int3
aad
mov
mov
lahf
push
sarb
out
hlt
outsl
imul
and
test
aam
push
sub
sub
inc
adc
lcall
dec
jl
aaa
jmp
pushf
lds
push
testl
shrl
repz
and
jg
dec
add
inc
mov
outsl
xorb
mov
mov
movsl
sti
negb
add
cmc
inc
cmc
lock
loope
cmp
inc
imull
xor
push
mov
cmc
or
inc
call
jb
repz
adc
cwtl
in
or
outsl
xor
sub
sub
scas
inc
or
das
mov
outsl
fdivs
fs
lods
clc
ja
xor
xor
scas
scas
mov
test
mov
fcompl
sqrtps
popf
rol
jae
jns
fs
cmp
sbb
lods
pop
int3
mov
cmp
in
inc
adc
jne
adc
mov
stos
ljmp
mov
mov
or
les
mov
push
xlat
xor
aaa
add
repz
fmuls
mov
or
out
xor
mov
push
or
xorl
lret
ds
shlb
hlt
and
clc
cld
shl
repnz
add
jmp
fcmovb
pop
jo
repz
out
dec
ds
and
je
push
mov
xor
mov
sbb
cmpsl
adc
sbb
subb
lods
or
add
xchg
fiaddl
lahf
int3
fcomps
pushl
dec
in
lods
hlt
sbb
jmp
xchg
test
sar
xor
ss
loopne
pusha
jl
or
addr16
sbb
imul
xor
pop
aam
xor
push
outsb
ss
loop
sti
sbb
lds
loopne
sub
out
insl
test
in
ficoml
jb
mov
mov
jnp
lea
repz
cmp
sub
mov
jae
adc
pop
aad
jns
push
push
cmpsl
std
inc
jb
cli
mov
lret
jge
dec
into
dec
stc
inc
xlat
adc
gs
dec
push
cld
lret
dec
jbe
test
ud1
inc
lods
fs
addr16
fsubr
fcoml
dec
aaa
testb
repz
fldt
aaa
dec
xchg
cli
divb
flds
cmp
int
xchg
xchg
push
fnstenv
mov
mov
xor
mov
cmp
sbb
ss
in
out
or
xchg
mov
dec
test
gs
dec
fldt
mov
and
movsb
and
repnz
in
movsl
push
push
cwtl
cmp
enter
inc
dec
inc
mov
jae
mov
cs
add
or
cmc
mov
je
pop
mov
iret
sbb
sub
mov
cmpsl
mov
test
sbb
insb
cmp
cld
xor
out
into
add
inc
data16
movsl
inc
cmp
lea
stos
and
cli
repz
fwait
inc
or
mov
xchg
or
fmul
inc
pop
cmp
dec
push
faddl
dec
mov
jb
jmp
xlat
call
cmp
movsb
push
lock
dec
xor
jb
mov
push
in
xchg
sbb
xor
or
jg
pop
lds
sub
daa
mov
mov
in
fs
fisubrl
sub
rorl
leave
inc
into
insl
pop
push
mov
out
pop
mov
pop
rcl
cwtl
xchg
ret
push
arpl
das
out
testb
sbb
imull
mov
idiv
jb
mov
mov
cmp
dec
jae
jae
nop
mov
iret
sti
add
sarb
cmc
jae
repnz
test
sarl
adc
jae
and
cmp
pop
bound
iret
jmp
and
sbb
lods
sti
in
iret
xchg
cmp
cmc
imul
outsl
xor
and
push
cmp
sub
mov
push
push
jl
lret
mov
pop
cmpl
mov
jno
mov
jmp
cmpsl
or
cwtl
add
mov
cmp
aad
test
pop
xor
jge
cmp
std
adc
jns
jmp
push
aas
stos
inc
sub
mov
mov
sbb
cs
adc
outsb
sti
cmpsl
mov
xlat
jmp
pop
xor
jno
loope
mov
pop
shlb
orl
fsts
and
xor
cld
mov
sub
divb
sub
pop
push
pop
and
push
or
sbb
pop
add
push
mov
cs
xor
jns
sub
mov
jns
insl
inc
or
aas
sub
push
int
and
adc
cmpsl
cli
pop
mov
xchg
test
pop
repnz
lahf
xor
shrl
lret
pop
xlat
pop
and
dec
in
and
inc
xor
icebp
test
sub
leave
xor
stos
aam
cmp
jne
inc
and
repnz
push
es
aam
mov
in
mov
pop
outsl
inc
out
adc
call
mull
ss
jne
pop
aad
pop
cld
sbb
outsb
mov
push
cmp
or
mov
xchg
xchg
shll
imul
mov
xor
adc
jbe
lret
sahf
imul
cltd
pop
idiv
ja
aas
shr
js
mov
mov
mov
xchg
jno
xor
jge
xchg
lret
out
cmp
cmp
adc
dec
fmuls
sbb
push
out
and
push
leave
or
pop
out
jg
inc
call
push
inc
dec
mov
js
cwtl
loopne
stos
pushf
out
mov
test
imul
bound
jae
stos
mov
std
or
pop
enter
sub
dec
mov
fstpt
mov
push
push
popa
jns
dec
push
inc
popa
add
sub
xor
std
xor
fnstsw
enter
or
shrb
pop
movsb
xor
std
push
mov
jnp
pop
push
xor
pop
mov
jmp
sub
and
xchg
cmp
leave
mov
jp
and
mov
testb
inc
push
or
or
daa
pxor
cmp
cmp
pop
mov
dec
fcomps
out
movsl
jl
add
sbbl
xor
inc
andb
sbb
into
filds
sarb
add
push
jl
movsl
xor
sbb
sub
aad
mov
in
mov
rcr
icebp
icebp
jmp
adc
push
xchg
sub
mov
out
mov
sbb
leave
add
inc
lret
mov
jae
or
add
imul
dec
mov
jo
mov
mov
mov
pop
or
stc
and
sub
xlat
xchg
lods
lahf
dec
xchg
loop
xchg
mov
jecxz
add
sub
fwait
push
mov
push
popa
enter
jnp
das
loop
cmp
les
std
ret
shlb
sub
xor
sub
adc
repnz
xchg
mov
adc
test
shll
xor
push
xor
and
adc
mov
int3
pop
add
out
fdivrs
sub
sbb
repnz
push
rorb
pop
and
and
pop
movsl
sub
lret
jl
dec
jmp
dec
enter
aam
dec
adc
lods
push
inc
lds
mov
cmp
mov
fcom
lods
xor
stc
ds
or
push
fadds
decl
in
add
aam
adc
and
cs
jp
dec
lock
jp
adc
cwtl
sub
lea
mov
ret
xchg
jns
jecxz
nop
inc
pop
xor
fsin
jl
and
stc
outsb
out
adc
ds
out
push
mov
int3
and
jp
mov
leave
sbb
ficompl
mov
cmp
xchg
lods
pop
das
lret
pop
mov
in
dec
mov
int
and
and
cli
push
push
repnz
nop
in
xor
fstp
or
ja
sub
pop
aaa
dec
mov
sbb
cli
cs
pushf
xchg
out
sub
jmp
test
push
js
jno
lods
daa
xchg
or
fistpl
arpl
inc
adc
fcmovne
pop
daa
inc
lret
mov
sub
addr16
push
movsb
addb
mov
jbe
lods
xchg
insb
shrb
repnz
fnstcw
iret
mov
push
xor
jo
or
fldl
push
mov
adc
xor
rol
popa
push
rcl
adc
sbb
scas
fwait
adc
jecxz
xchg
cli
inc
into
flds
mov
mov
int3
sbb
inc
cvtdq2ps
pop
shl
int3
movsl
inc
inc
pushf
xchg
xor
xor
popa
paddusb
or
stos
lcall
std
mov
fucom
repnz
movntps
push
mov
sub
sbb
mov
mov
lds
pushf
addr16
pop
lcall
loope
sub
xor
push
push
js
loopne
les
mov
sub
mov
and
ret
add
das
add
lret
pop
mov
enter
fsubl
add
dec
out
shl
cltd
popa
sbb
or
inc
stos
loope
insb
cmp
sub
out
xchg
pop
aaa
adc
loop
push
aaa
sarl
dec
xor
xchg
jae
je
jmp
inc
rclb
das
mov
pop
xchg
xchg
icebp
clc
jns
in
xchg
fidivrs
sub
fldcw
pop
cli
dec
xchg
or
sbb
decb
pop
sbb
rcrb
push
imul
pop
lea
inc
inc
inc
outsl
and
fucomp
lods
push
sahf
repz
aas
jo
stos
pushf
cmp
jb
mov
sub
into
inc
xor
lds
out
pop
xchg
and
pop
ret
fwait
mov
jno
movl
mov
mov
scas
pop
adc
ror
mov
fbstp
mov
mov
int
mov
dec
aad
inc
int
out
pop
sarb
and
repz
lock
imul
push
cli
sub
mov
adc
cmp
or
cwtl
jbe
stos
popa
pop
stos
gs
or
or
xchg
jmp
outsl
inc
sbbb
loop
je
inc
xchg
aam
inc
mov
and
xor
shll
cmp
xor
or
bound
sub
pusha
adc
incl
movsl
testb
test
lret
aad
rcrb
fiaddl
mov
mov
popf
sbb
mov
adc
pop
jg
dec
shll
ljmp
mov
call
cmpb
mov
mov
push
pop
subl
cmpsb
mov
scas
and
aas
cmp
je
movsb
inc
dec
call
test
flds
inc
mov
aaa
imul
rorb
lods
mov
stc
lcall
inc
iret
mov
jmp
push
inc
arpl
jmp
dec
mov
jns
in
mov
ss
or
xor
bound
mov
or
cmpsl
fwait
inc
int
push
ds
xor
inc
cmp
pop
add
lods
nop
xchg
jge
rcll
dec
push
outsb
jns
xor
shrl
data16
xor
cwtl
push
add
cmc
cmp
call
mov
xchg
test
mov
mov
leave
ret
cli
daa
subb
xor
nop
and
cld
adc
mov
mov
sub
pop
std
sbb
cmp
and
lock
je
xlat
mov
arpl
out
popf
pusha
pop
enter
inc
mov
fsubr
mov
ljmp
in
xchg
jge
xchg
cli
pop
mov
inc
ds
mov
orb
sbb
clc
xlat
jecxz
jae
xor
lret
lock
fcoms
dec
and
dec
movb
jb
or
sub
jns
outsb
dec
ret
inc
pop
jl
inc
xchg
xchg
sbb
hlt
mov
lock
add
jae
mov
jp
adc
ret
clc
das
dec
mov
mov
xor
pop
adc
pop
adcb
mov
pop
lea
mov
mov
sahf
enter
or
test
in
mov
sbb
cmp
test
adc
std
es
pop
in
adc
dec
jnp
ret
lcall
clc
outsl
mov
mov
fnstsw
inc
sub
mov
movsb
and
loope
fmuls
fstps
addl
pop
push
or
out
notl
test
mov
push
cs
repnz
push
push
mov
loop
xchg
out
loope
test
mov
cld
fldl
mov
lea
jmp
leave
lret
add
dec
pop
xchg
fisttps
movl
cmc
inc
adc
in
popf
test
sub
mov
cmp
mov
xchg
fyl2x
sub
stos
into
or
xchg
or
inc
mov
sarb
fnstenv
mov
lea
or
xor
sub
lock
jne
or
jnp
mov
jecxz
jecxz
xorl
movl
adc
es
js
insb
fiaddl
add
sti
inc
aam
or
pop
mov
lahf
sbb
xchg
ret
mov
add
sbb
jmp
mov
pop
lret
cmp
loopne
sub
lods
jne
or
sbb
xchg
and
mov
das
subb
lret
jae
inc
add
std
das
lods
jmp
aaa
push
inc
xchg
sahf
xor
aad
int3
push
lea
or
cmp
add
call
and
mov
out
shll
jge
daa
ds
ret
mov
dec
pop
out
mov
sbb
mov
sbb
or
js
pop
das
mull
scas
popf
push
cmp
xor
fnstcw
insl
lret
fbld
in
lret
mov
int3
xchg
stos
adc
ret
ret
mov
sub
fptan
movsb
sub
inc
cmp
repz
sbb
jg
cmp
inc
in
or
lcall
jo
mov
adc
jnp
test
inc
test
mov
int
inc
call
lret
or
fstl
mov
sub
subl
out
int3
and
dec
or
mov
push
in
popa
out
dec
addl
es
push
jae
int
cltd
fdivrs
je
fdivr
add
xor
push
or
dec
lahf
mov
into
jl
fucomp
test
jl
setno
dec
sub
pushf
cmp
lret
das
push
lea
aad
hlt
jmp
mov
loopne
mov
in
mov
xor
mov
mov
lret
adcb
orl
repz
out
test
loopne
pop
cmp
hlt
and
dec
cltd
sbb
nop
xchg
push
std
cmpsb
cmpsl
pusha
jb
or
add
inc
or
adc
ret
push
pop
outsl
cli
shr
fs
mov
int
fstl
idivl
ss
das
scas
or
test
aad
pushf
call
adcb
shll
push
push
xchg
arpl
fcmovu
mov
lods
inc
mov
mov
jle
das
mov
adc
dec
xchg
cld
mov
enter
out
sbb
add
fdivrl
outsb
xchg
rcll
mov
xor
xchg
loopne
mov
out
jo
shll
js
fimull
xchg
lods
insb
jle
subl
sahf
repz
scas
shll
aas
mov
and
push
jmp
mov
push
mov
rolb
leave
fwait
sti
push
outsb
inc
jo
mov
out
test
enter
jne
cmp
mov
xor
ss
vmovsd
adc
sbb
test
mov
and
xchg
outsl
jae
subl
cmp
sbb
je
jecxz
insl
mov
daa
rcrb
xchg
dec
imul
cltd
movsw
popa
ljmp
orb
dec
push
mov
push
mov
scas
fistpll
call
mov
repnz
xlat
pop
xor
mov
pop
push
fcoms
popa
sub
dec
mov
and
pop
jp
mov
out
js
mov
pop
jg
out
inc
mov
mov
cs
push
fadds
enter
xor
aas
push
lret
sub
dec
imul
add
add
sub
push
add
sub
pop
dec
or
xchg
fildl
xchg
sahf
cmp
scas
lock
cld
or
cmp
push
mov
jne
push
cmp
pop
mov
dec
dec
sbb
push
mov
add
loop
or
popf
mov
xchg
addr16
pop
pop
sahf
xchg
mov
femms
arpl
xchg
and
pop
mov
adc
movsb
fs
jns
mov
jb
add
add
push
aaa
cs
mov
subb
push
add
scas
push
pop
lods
dec
loope
fstpl
xchg
in
outsb
jp
mov
loop
scas
rcll
push
xor
sbb
cmp
lds
mov
push
jne
inc
fnstenv
sti
mov
lea
dec
inc
jno
cld
or
mov
in
push
stos
cmpsl
adc
xorl
popa
addr16
repz
ljmp
sub
dec
fisttps
loope
push
jbe
mov
les
cltd
cltd
inc
hlt
sub
mov
sbb
ljmp
push
inc
shlb
popl
jo
jle
jmp
int3
add
jp
in
cmp
test
sub
int3
into
or
popf
std
jb
dec
jmp
adc
fldcw
ja
jae
in
inc
push
mov
imul
mov
sbb
mov
push
sub
aam
outsl
test
xor
xor
outsb
push
mov
lods
jbe
xchg
xor
mov
inc
imul
adc
je
sbb
sbbb
sub
jmp
xor
mov
shrb
cmp
mov
daa
and
aad
mov
and
int
or
insl
and
dec
pop
push
ret
add
fiaddl
xchg
fadds
subb
test
pop
or
gs
arpl
jle
insb
sub
pop
enter
pop
imul
aad
negb
movsl
dec
sub
inc
addl
sbb
mov
cmc
cmpb
sub
sub
add
xor
out
in
xchg
and
or
jmp
je
jge
enter
sarb
xchg
and
loope
stos
push
jp
dec
fcmovnbe
jb
iret
push
data16
loope
sbbl
or
cmp
testl
lret
ficomps
jecxz
into
cmc
or
and
rorb
adc
dec
jb
int
jne
inc
mov
or
cmp
test
xchg
in
jae
pop
ficomps
in
addr16
cmp
cmp
mov
outsl
xchg
sti
jno
and
sbb
inc
adc
sbb
inc
lods
mov
repnz
popf
mov
mov
pop
and
inc
inc
movsl
in
xchg
pop
pop
scas
or
xor
insb
pop
mov
mov
dec
popa
test
hlt
js
pop
jg
xchg
cmp
jnp
sub
xchg
sbbl
ljmp
inc
mov
je
push
gs
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
xchg
push
push
inc
inc
aaa
xor
test
jg
lds
push
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
rcrb
or
cmp
sub
pop
repnz
ficoms
stos
insb
push
and
jo
popa
lods
adc
add
xor
and
rcrb
or
cmp
sub
pop
orb
or
inc
mov
pusha
lods
sarb
and
rcrb
or
cmp
sub
pop
orb
insb
push
pushf
arpl
adc
dec
fwait
push
movsb
jl
outsl
mov
out
mov
xor
jo
out
out
push
inc
mov
cwtl
sbb
sbb
push
pop
mov
dec
hlt
pop
out
mov
jae
inc
lahf
mov
addr16
lods
mov
imul
xchg
jmp
adc
cmpb
scas
push
pushf
adc
jo
mov
lock
jno
and
xchg
rcrb
sub
jp
pop
xchg
dec
xor
pusha
lds
jp
sub
int3
inc
sub
mov
repz
pop
and
xlat
andb
arpl
cltd
cmc
inc
sbb
fsubl
and
subb
adc
cmp
pushf
mov
inc
int
pushf
jne
mov
or
cmp
sub
pop
orb
insb
push
pushf
inc
mov
pusha
lods
adc
add
xor
and
cltd
jge
insl
nop
sbb
cmp
sbb
xchg
jo
sbb
adc
mov
je
dec
nop
pop
lds
enter
xor
adc
push
mov
lahf
pop
mov
orb
insb
push
pushf
inc
mov
pusha
lods
adc
add
xor
and
rcrb
or
cmp
sub
pop
orb
insb
push
pushf
inc
mov
pusha
lods
adc
add
xor
and
rcrb
jmp
test
push
mov
mov
jae
pop
jnp
mov
sub
cmp
shll
sub
add
mov
push
push
scas
cltd
cmp
push
push
adc
jne
cmp
outsb
push
sahf
stos
repz
inc
test
add
mov
jne
inc
cltd
imul
sbb
in
cli
pop
xor
add
dec
adc
or
sbb
sbb
push
pushl
pop
jmp
inc
lds
filds
adc
mull
clc
ja
lock
add
mov
inc
stc
dec
xchg
mov
ret
mov
mov
das
cmc
adcl
mov
jg
xchg
int3
outsb
aam
into
dec
lahf
notl
pop
cmp
and
pusha
sarl
sti
pop
xlat
bnd
fsts
mov
xor
inc
mov
push
std
loope
mov
cmp
decl
sub
push
mov
xlat
aaa
pop
cmpsl
idiv
fisttps
push
cmp
push
jle
xchg
push
add
jne
xchg
pop
gs
fwait
lods
cmp
jae
testl
pop
pop
jo
cwtl
add
test
push
outsb
jg
cwtl
jbe
and
mov
pop
pop
xchg
mov
stos
sarl
pop
mov
out
ret
xor
xchg
xchg
push
test
push
pop
sarb
jbe
dec
repz
mov
lret
insb
idivb
mov
or
icebp
cmpxchg
imul
das
mov
push
xchg
xchg
xchg
and
das
pop
jne
out
cmp
push
xchg
hlt
cli
inc
das
adc
cmpsl
push
pop
jmp
adc
pop
dec
ja
nop
sub
xchg
lods
pop
sti
fs
sub
leave
data16
out
loope
pop
mov
test
adc
dec
outsl
ljmp
adc
lods
scas
mov
xchg
pop
scas
addr16
out
and
sbb
rolb
jecxz
pop
dec
std
fs
jo
and
add
mov
push
sbb
lods
inc
dec
cmc
js
enter
mov
movsl
mov
dec
add
cmp
jo
loopne
cmpsb
fwait
lock
std
test
insl
or
xchg
mov
pop
cmpl
mov
adc
cmp
mov
shl
jae
insl
mov
in
and
and
pop
lret
sub
enter
dec
push
lds
hlt
aaa
mov
into
inc
dec
fsubl
lock
cmp
xor
pusha
mov
sbb
stos
cmp
push
dec
and
xchg
pop
loopne
subb
insb
lret
sarl
leave
int3
xor
cmp
test
xor
popf
add
adc
cmp
icebp
stos
popa
sbb
adc
pushf
push
in
pop
icebp
mov
sub
inc
jg
pop
lods
outsl
mov
mov
mov
or
icebp
neg
mov
xchg
jbe
cwtl
pop
mov
mov
or
in
pop
mov
xor
dec
int
sub
incl
cmpsb
fimuls
pop
xchg
out
pop
movsb
loopne
fucomp
imul
mov
push
sahf
sbbl
add
or
mov
sbb
sbb
in
scas
and
mov
loope
andb
fistps
call
xor
adc
push
stos
push
fdivs
mov
cmpsb
stos
mov
rcl
and
push
jnp
loope
push
sub
std
bound
add
push
in
les
pop
je
mov
repz
icebp
or
rcll
test
ret
sbb
xor
daa
mov
dec
into
fcoms
das
and
push
ja
lcall
cli
jl
cmp
mov
ljmp
mov
neg
inc
mov
aaa
hlt
in
icebp
fidivrs
sbb
or
push
jo
in
cltd
jp
call
rcrb
xor
sti
sbb
pop
mov
pusha
push
dec
cmp
or
mov
push
shr
scas
add
lret
lea
cmpl
popf
push
outsl
mov
push
inc
psrlq
jbe
mov
ss
add
pop
sub
mov
push
cmc
xor
inc
lods
add
xchg
out
bound
ljmp
incl
jo
fadds
pusha
inc
mov
push
int
push
rcl
jecxz
adc
xchg
fmuls
dec
mov
out
test
testl
enter
mov
dec
push
call
and
les
mov
outsb
jns
stos
fsts
test
aaa
rol
pop
add
and
mov
fsubrl
iret
pop
imul
aad
rol
mov
mov
adc
lea
pop
imul
sbb
decb
fwait
mov
xchg
pop
pushf
cmc
lldt
and
adc
clc
andb
iret
mov
addl
xchg
inc
movsb
xchg
das
lock
and
add
mov
aas
xchg
sub
mov
fisubrl
jmp
outsb
and
div
xchg
pop
ror
mov
arpl
jnp
hlt
dec
dec
dec
xor
pop
aas
sub
xchg
mov
outsb
das
inc
dec
lods
add
jp
iret
add
pop
or
jmp
push
loop
fcoms
xor
test
mov
cwtl
mov
mov
mov
cmp
ljmp
sti
test
jg
pop
lret
push
xchg
dec
fcomip
arpl
sub
out
xor
xchg
fninit
and
inc
jns
dec
out
outsl
push
lahf
pop
push
jl
or
andb
mov
mov
icebp
ss
push
pop
int3
jno
push
jb
repnz
imul
loope
mov
std
movsl
shr
repnz
pop
jbe
xchg
pop
mov
and
sahf
arpl
pop
std
cmp
and
dec
jb
ret
add
cmp
xchg
std
fcmovb
and
jle
data16
push
jmp
fidivrs
mov
pop
shlb
mov
in
sbb
sarl
mov
stos
adc
and
cmpsl
ret
xchg
fmull
and
jge
push
push
inc
into
subl
or
dec
out
adc
lods
dec
rep
or
ret
or
sbb
jecxz
adc
ret
daa
xlat
add
jmp
mov
outsb
inc
cmp
pop
inc
movsl
mov
mov
jns
sbb
jmp
sahf
rorl
xor
jmp
pop
outsl
out
cld
jmp
divl
insl
je
xchg
popl
sbb
pusha
lds
sub
add
cmpsb
ficompl
cmpsb
popa
ss
inc
loop
insb
or
fstps
cmp
push
je
mov
fisubrl
lret
lods
cmp
das
or
push
lds
xor
xor
das
sub
les
lea
sbb
dec
je
pop
push
sbb
mov
movsb
xchg
stc
mov
test
out
dec
arpl
xchg
int3
cmp
jno
adc
jmp
outsl
mov
lret
pop
add
sub
or
sub
xchg
pop
mov
fmuls
mov
mov
push
hlt
mov
cmp
or
add
mov
imul
cltd
push
test
pusha
mov
adc
push
decl
movsb
out
xchg
jo
push
jb
loope
mov
test
loopne
out
fwait
dec
xchg
cs
shrl
out
xchg
je
xchg
push
daa
add
pushl
nop
dec
jae
jne
dec
popl
dec
xchg
sbb
inc
int
sahf
cli
pop
push
movsb
xor
loopne
inc
cld
jp
ret
arpl
mov
adc
xchg
inc
je
mov
inc
fimuls
mov
mov
push
mov
add
out
sub
pop
cli
int3
rorb
pushf
repnz
inc
pop
pop
mov
mov
ss
std
or
mov
cmp
sbb
jp
int3
sub
scas
sub
lahf
adc
xchg
sti
mov
sub
mov
and
xchg
std
add
pusha
xor
filds
outsl
das
jns
mov
mov
adcl
pop
mov
push
mov
incb
fmull
mov
insl
ret
loopne
pop
loop
ret
or
and
ja
das
mov
xchg
sub
pop
and
loop
ret
test
mov
ret
cmp
push
or
mov
pushf
inc
rorb
fwait
lods
lods
adc
dec
fdecstp
out
clc
xor
xchg
je
mov
xchg
mov
lcall
popa
jp
in
aad
scas
outsl
xor
dec
inc
aad
shlb
outsl
repz
scas
int3
mov
lea
sub
sub
and
fdivl
data16
sub
adc
sbb
mov
cmp
push
rorl
bound
mov
lcall
dec
push
jmp
jl
or
stos
loope
test
stc
into
push
rcll
xchg
xadd
out
push
js
or
push
xor
jno
push
inc
addr16
bound
popf
ds
add
mov
sub
pop
sahf
lds
gs
lods
jbe
or
outsb
push
jbe
and
xchg
setle
mov
mov
cmpsl
in
xchg
repz
lea
fwait
push
fcmovnb
mov
jg
pop
adc
add
pusha
cmpsb
mov
push
mov
cld
nop
xor
mov
mov
imul
and
popf
mov
mov
inc
ror
fstl
mov
incb
mov
pop
mov
cmp
out
mov
mov
in
xor
jbe
push
nop
test
nop
xor
pop
fidivl
int3
cmc
cmp
movq
dec
or
stos
jmp
push
iret
movb
imul
xchg
je
js
jb
movl
dec
dec
dec
je
daa
push
pop
in
into
inc
adc
lods
lcall
rcll
popa
push
cmp
xchg
sub
js
sti
sti
cmp
fsubrs
xchg
mov
pop
lock
xchg
add
push
into
mov
dec
repnz
sbb
or
adc
push
mov
shr
aaa
das
mov
and
jle
stos
lret
mov
arpl
mov
lcall
enter
sbb
mov
addr16
cwtl
sbb
sub
or
stc
adc
push
xchg
faddl
adc
lea
pop
jo
ret
mov
push
pop
cmpsb
pop
or
iret
sbb
push
dec
mov
adc
mov
lods
cmp
jb
clc
push
ljmp
mov
dec
xchg
jns
shr
or
xchg
xor
aam
daa
out
scas
into
add
fiaddl
xor
or
les
xor
outsl
sub
cltd
std
scas
mov
or
lcall
call
lods
pop
sbb
and
cs
popa
pop
arpl
adc
fwait
rcrl
lea
aad
test
mov
fs
jnp
imul
dec
call
xchg
test
rolb
cmp
sbb
daa
movsl
out
call
lahf
cmp
test
adc
das
arpl
jne
xor
adc
ljmp
mov
in
mov
subl
sbb
cmp
into
call
ret
cld
into
adcb
in
cli
mov
bound
popf
mov
lock
in
repnz
xor
push
inc
movsb
out
out
in
xor
bnd
daa
fdivrs
fisttpl
mov
scas
dec
das
dec
xchg
dec
aad
cs
rol
or
sti
aaa
cli
mov
arpl
add
mov
adc
sub
xor
cmp
and
push
cmp
lods
pop
lock
and
leave
imul
repnz
fwait
aam
subb
xor
sub
lods
mov
rclb
adc
mov
sbb
pop
out
lds
pop
push
jecxz
lcall
sti
inc
mov
or
or
jg
lods
and
jne
sbbl
xchg
xchg
sbb
push
xchg
out
inc
pop
adc
cwtl
mov
addr16
dec
or
test
imul
loope
cli
hlt
popa
decb
mov
jmp
mov
cmp
nop
sarl
adc
mov
cmp
data16
pop
ret
test
xchg
out
scas
test
fwait
mov
dec
lods
in
xchg
jae
arpl
mov
ficomps
or
cs
adc
cs
or
in
test
ljmp
mov
cmp
lock
iret
rol
add
int3
sub
test
es
xchg
into
pop
add
mov
mov
into
aas
inc
push
mov
or
sbb
xor
les
loope
imul
aam
fmull
into
ja
mov
cmp
and
mov
popf
into
test
std
repnz
imul
mov
rcrl
dec
pop
mov
mov
rorl
sbb
push
dec
jo
add
mov
psllq
iret
leave
aaa
fs
out
push
pop
fsubrs
lret
pop
insb
add
and
incl
mov
sbb
mov
popf
and
lcall
add
add
xor
outsl
cltd
orl
clc
pop
insl
mov
push
lods
jb
imull
dec
lret
ljmp
ljmp
mov
xchg
jp
mov
insl
push
dec
js
add
cmc
sbb
push
xchg
dec
push
mov
push
dec
pop
hlt
or
popf
stc
or
dec
push
push
in
jecxz
in
in
xor
xchg
and
push
and
fisubrs
or
mov
dec
movsl
mov
andb
mov
push
xor
inc
aam
mov
mov
mov
mov
dec
lret
adc
inc
insb
repnz
into
push
test
push
ror
stos
pop
mov
push
sbb
pop
call
arpl
test
push
jecxz
icebp
inc
ret
fcomip
pop
push
push
rcl
testb
mov
pop
xor
dec
fstp
mov
mov
or
xor
mov
push
outsl
pop
jmp
clc
xchg
dec
cmp
pop
jnp
and
aas
insb
lcall
outsb
mov
ja
add
xchg
scas
adc
fldlg2
icebp
and
mov
dec
inc
mov
jecxz
mov
ljmp
mov
cmp
sti
lock
fdiv
jecxz
out
jne
orl
xlat
adc
je
dec
repz
add
cld
or
add
negb
mov
pop
pusha
push
add
lahf
les
cmp
shl
fs
rclb
cmp
shrb
popa
inc
mov
mov
mov
sbb
xchg
jae
cmp
hlt
icebp
arpl
dec
adc
loopne
mov
mov
pop
sub
sub
jp
call
dec
xchg
icebp
push
push
stc
andl
in
pop
and
nop
lret
pop
sub
fiaddl
in
mov
imul
data16
push
imul
jb
pop
xchg
jae
shr
dec
outsl
mov
cmpsl
mov
jl
pop
pop
out
rolb
inc
and
xchg
and
jae
jnp
sub
mov
loop
dec
mov
fidivrs
cmpsb
ja
mov
jmp
xchg
add
lea
pop
popf
test
les
xchg
xchg
scas
pop
sub
xor
sub
test
jp
mov
mov
ficomps
pop
pop
ja
sbb
sub
pop
cmp
mov
adc
inc
lods
arpl
repnz
lds
daa
loope
push
sbb
in
scas
int
aaa
movb
ljmp
pop
inc
idivb
mov
jp
mov
jecxz
in
and
stos
sbb
lods
lcall
or
mov
push
inc
loope
sti
aam
mov
mov
movl
out
sub
jo
daa
sbb
inc
push
test
xchg
cmc
jo
dec
divps
and
push
add
scas
lcall
stos
push
mov
xchg
insb
push
scas
push
xchg
ret
dec
addr16
movsb
add
call
cmp
mov
sub
lret
mov
xor
std
cmp
div
push
dec
aaa
pop
inc
stos
and
shr
repz
gs
cs
clc
add
xchg
push
push
dec
mov
cmpsl
outsb
inc
adc
popf
icebp
push
popf
enter
dec
xor
int3
es
dec
les
dec
dec
fisubs
out
fistps
scas
mov
lret
or
inc
lea
cmp
inc
mov
lcall
sbb
movsb
fildl
sbb
pop
test
das
and
lods
jno
arpl
imul
push
cld
lods
loopne
adcb
xor
stos
cmp
jne
aaa
jnp
fwait
cmp
mov
lea
jno
inc
ljmp
lods
add
sub
pushf
inc
out
mov
lcall
or
dec
inc
push
push
jae
ret
mov
negl
and
push
call
add
scas
imul
dec
and
or
fsubr
iret
and
cld
cli
fdivrs
mov
pusha
mov
in
mov
jo
enter
nop
dec
and
pusha
inc
ds
mov
sub
sub
incl
test
fstps
das
int3
xor
xor
icebp
push
push
ljmp
or
and
inc
sarb
rcrl
mov
pushl
sub
xlat
icebp
test
inc
and
mov
out
jp
jne
in
mov
ja
xchg
and
push
call
inc
push
das
add
out
out
mov
jne
stc
in
xor
xor
inc
loop
adc
adc
lea
sub
mov
inc
inc
rorl
mov
das
in
inc
movl
outsb
out
std
pop
push
mov
push
add
mov
sbb
out
cmp
xchg
sbb
mov
movsb
lods
int3
sub
cmc
or
lahf
xchg
push
ficompl
aam
imul
jmp
xor
ret
inc
inc
das
adc
cmp
mov
pop
imul
and
aam
cmc
lea
and
pusha
and
xor
jp
fisttpll
sarl
jge
xchg
push
pop
adcl
or
push
incb
repz
insb
test
pop
push
pop
push
push
test
mov
pop
stc
mov
in
xor
mov
ret
cmc
js
dec
inc
adcl
loopne
test
sub
gs
dec
jo
mov
sbb
sbb
or
scas
dec
sbb
in
sbb
push
daa
mov
cmpsl
subl
arpl
adc
jl
jl
add
outsb
sti
ljmp
push
popf
push
mov
dec
stos
subl
xchg
jo
test
enter
mov
pop
mov
pop
cld
xor
pop
in
jb
jg
jbe
sti
out
int3
jmp
pop
in
rcr
sarb
fs
lds
shll
ss
cmpsl
in
or
fmull
cmp
mov
lret
arpl
mov
jbe
cmp
fdivr
xor
dec
stos
jns
arpl
push
insl
in
lods
adc
stos
lods
pop
mov
inc
out
repnz
mov
cmc
adc
and
shll
subl
jae
sub
in
xor
cld
sub
cs
in
pop
sub
cmp
mov
mov
ljmp
leave
clc
arpl
mov
xchg
sarb
adc
test
fadds
mov
pop
out
inc
jbe
enter
jecxz
arpl
sgdtl
setno
ret
sbb
jle
orb
es
scas
sbb
test
jmp
xchg
lds
out
lcall
in
jp
popa
mov
jmp
mov
adc
bnd
sti
mov
pusha
mov
mov
xchg
std
sbb
lds
jle
jns
clc
mov
movsl
sahf
repnz
mov
sbb
mov
mov
and
lahf
mov
and
dec
mov
xchg
mov
les
xor
repnz
mov
fldl
popf
xchg
dec
ret
inc
sahf
leave
xor
adc
ret
lock
sbb
pusha
popa
sbb
xchg
jle
cltd
andl
clc
call
fsubr
lret
test
push
pop
mov
pop
cwtl
test
sbb
cmp
push
pop
pushw
mov
pop
or
sbb
cmp
aaa
xor
pop
stos
push
orb
loopne
nop
pop
orb
insb
push
pushf
inc
mov
pusha
lods
adc
add
xor
and
rcrb
or
cmp
sub
pop
orb
insb
push
pushf
inc
mov
pusha
lods
adc
add
xor
and
rcrb
or
cmp
sub
pop
orb
insb
push
pushf
inc
mov
pusha
lods
adc
add
xor
and
rcrb
or
cmp
sub
pop
orb
lods
push
pushf
inc
fidivrl
xor
push
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
add
outsl
fwait
jg
mov
jb
inc
mov
jnp
cmp
or
sbb
outsb
jnp
dec
scas
pop
mov
mov
jg
psubq
lret
das
fisttpl
ret
cmp
and
std
pop
popf
dec
scas
pop
mov
or
push
mov
out
and
insl
xchg
jp
dec
shlb
cmp
sub
ljmp
sbb
mov
rcrb
adc
nop
cld
mov
ds
push
push
cmpsl
dec
in
aad
data16
mov
rcrb
scas
xor
and
mov
ljmp
shrl
and
mov
sbb
bound
fcomip
test
add
add
out
adc
mov
ljmp
mov
sbb
in
out
jns
pop
push
movsb
scas
cs
je
pop
or
js
daa
xchg
push
jmp
imul
pop
sbb
lea
sbb
cmp
mov
sub
cmc
test
mov
shll
sbb
out
cmpsl
jnp
push
lods
dec
mov
mov
jg
movswl
lret
das
arpl
fxch
test
out
xchg
xchg
aas
mov
iret
or
sbb
inc
mov
fistps
jp
add
adc
shrl
sbb
adc
pop
test
adc
ja
sbb
push
lahf
ds
dec
mov
or
cmp
das
fstpt
sub
cmp
or
sbb
imul
mov
mov
jg
psubq
lret
das
fstpt
sub
cmp
or
sbb
imul
mov
and
les
test
push
test
pop
and
call
pop
or
lock
jae
ljmp
dec
pop
xor
push
out
js
xchg
pusha
jle
xor
adc
fdivrl
sub
dec
ds
fsubrs
outsb
lods
popl
pop
push
mov
jg
push
dec
ud1
jg
add
lcall
xchg
sub
pop
cli
fwait
dec
pop
scas
add
or
push
lock
ljmp
xor
negl
into
mov
push
pop
in
sbb
loopne
push
ret
or
ret
pop
sbb
cmp
push
icebp
mov
mov
arpl
xor
cwtl
xor
cs
xchg
push
pop
mov
mov
fcompl
push
shrb
cmp
inc
out
push
clc
in
sbb
cwtl
sub
mov
jne
or
pushf
pop
cmp
insl
adc
sahf
shrl
sahf
inc
pusha
pop
aam
clc
mov
jnp
aam
or
xadd
hlt
imul
data16
jne
ja
adc
xlat
inc
gs
repnz
shrb
js
jl
in
xor
cltd
jge
fwait
jbe
gs
inc
and
or
add
jne
cmp
icebp
mov
mov
jae
outsl
pop
or
sbb
fisubrl
add
adc
popa
jle
dec
xchg
pop
in
pop
mov
in
fcmovu
cld
pop
pop
into
mov
jb
stc
or
and
in
pusha
fwait
ljmp
fistps
inc
popa
lcall
mov
dec
out
popfw
aad
jne
jmp
xor
pop
fists
mov
jne
cmp
adc
jp
or
mov
mov
loopne
sub
xchg
mov
push
dec
mov
mov
or
fcmovne
pop
arpl
hlt
div
pop
fwait
outsb
jl
cs
sub
arpl
jp,pn
push
lds
lret
data16
lock
ljmp
gs
xor
cmp
rcrb
cli
mov
dec
mov
xchg
ljmp
icebp
fcomp
xor
imul
adc
dec
jge
orb
pop
xor
js
sub
sbb
sbb
outsb
mov
sbb
sbbb
mov
xchg
xor
shll
mov
and
pop
clc
adc
ret
test
mov
jp
cmp
adc
cmp
push
xor
or
and
lcall
lcall
aas
xchg
jns
fcomps
pop
cmp
lahf
mov
rcll
fsin
and
cli
cmp
and
jge
xor
gs
aaa
nop
jae
xchg
mov
push
mov
aad
mov
jns
enter
mov
rcrb
imul
int3
pop
inc
outsb
sbb
pop
push
sti
mov
cmc
xchg
push
jno
je
int3
mov
insb
mov
and
sar
mov
into
add
mov
cmp
push
adc
mov
sahf
adc
fcmovnu
in
ja
jle
inc
testb
out
cmc
pushf
adc
jp
dec
loope
cmp
adc
push
pop
push
push
std
shll
mov
jl
xchg
pop
rcr
push
imul
or
pushf
cmpxchg
std
sbb
rcrl
jns
jo
push
int3
xchg
mov
pop
sub
xchg
sub
lahf
sbb
inc
sub
mov
incb
insb
roll
push
movsl
add
negl
jae
and
lcall
mov
mov
xlat
andb
sti
shrb
mov
push
jg
mov
lea
mov
jecxz
lods
imul
pop
mov
mov
xchg
out
mov
adc
loope
xchg
adcb
adc
cmp
sub
and
sub
loop
sbb
aas
ljmp
sti
cmc
mov
lcall
inc
lea
mov
addr16
xor
movsb
movnti
or
shlb
test
add
in
mov
stc
rorb
lcall
out
jle
cwtl
mov
movsb
pushf
loope
pop
ljmp
mov
push
cmc
cmc
jns
and
pop
ljmp
inc
rclb
loop
adc
roll
mov
xor
and
shrb
mov
cmp
test
nop
xor
inc
push
aas
jbe
out
dec
dec
lret
fbld
fs
add
sbb
repnz
mov
in
sbb
shrb
dec
popf
mov
mull
mov
mov
add
or
shlb
addr16
jle
mov
add
imul
lcall
xchg
adc
xor
cmp
js
cmc
std
fildl
stos
inc
fcomi
gs
pop
pop
hlt
data16
push
or
add
jae
jns
lret
push
sbb
jno
inc
call
dec
jbe
aas
es
sti
imul
xchg
sub
pop
aaa
sub
dec
not
aad
cli
mov
lret
loopne
push
fbld
push
cmpsl
ss
subb
ljmp
or
sub
out
xchg
imul
and
sbb
ror
adc
je
in
push
and
ds
subl
insb
les
push
add
outsb
push
arpl
ljmp
jmp
out
cld
int
xchg
mov
fidivrl
or
sbb
jmp
inc
mov
pop
cld
mov
sub
lods
fdivs
imul
and
push
mull
and
scas
push
sub
ret
pop
xor
lret
and
sub
test
inc
pop
ror
int3
std
mov
orb
xchg
lret
push
push
fwait
in
dec
jae
and
push
or
sbb
imul
call
cld
and
ds
int3
jle
in
jns
adc
pop
cli
sub
sbb
in
cmp
out
xchg
add
push
scas
ds
pop
aas
add
xchg
pushf
xchg
xorb
shl
fists
inc
ds
mov
in
adc
mov
lea
xlat
iret
dec
sub
outsl
push
pusha
lock
mov
pusha
into
rorb
popa
mov
push
test
test
jle
add
xchg
mov
xor
daa
push
push
popf
xor
xchg
daa
stos
test
aam
movsb
dec
add
pop
jg
mov
inc
and
add
jp
call
scas
in
push
ja
jno
pop
aad
lock
adc
addl
ds
in
out
pop
xchg
and
sbb
adc
outsl
cmc
adc
inc
sbb
pop
jp
into
xlat
out
jb
sbb
call
fwait
xor
or
lods
cmp
shll
in
or
aad
pop
or
daa
add
cmp
or
cmpsl
jb
mov
lds
cld
sbb
cmc
mov
stos
frstor
out
or
notl
gs
xor
mov
xor
and
icebp
out
clc
hlt
mov
pop
jg
test
xchg
pop
dec
and
xchg
and
jbe
push
jle
aam
xor
clc
dec
scas
pop
pop
shll
sbb
jecxz
add
xchg
lcall
and
inc
repz
jae
rcl
mov
shlb
jp
pushf
sbb
jo
mov
fsincos
sub
mov
mov
sub
mov
jmp
lcall
scas
lea
shll
sar
fisttpll
mov
cld
ret
mov
icebp
inc
xchg
aad
lods
push
jnp
mov
add
mov
cmp
out
sbb
jne
sbb
push
or
enter
dec
imul
mov
or
fs
leave
sub
das
jmp
cwtl
mov
test
sahf
sbb
outsb
test
cmp
idivb
ret
scas
mov
dec
pop
pop
in
lds
inc
and
sub
loope
jp
cmc
xchg
dec
push
sahf
loope
outsl
pop
jae
mov
cltd
insl
push
xor
outsb
testb
and
fdivs
xor
std
fs
sub
push
sti
repz
call
adc
clc
xchg
in
adc
mov
cmp
xor
push
dec
sub
inc
ljmp
in
pop
sbb
sbb
shlb
and
push
adc
jp
into
out
cmpsl
popa
push
scas
mov
mov
mov
movsb
xchg
xor
loopne
andl
pop
cli
cli
sub
add
push
adc
push
jne
jo
jmp
clc
fiadds
inc
hlt
into
add
xchg
mov
mov
fsts
dec
int3
imul
iret
jl
pop
imul
ret
sub
xchg
push
add
negl
sarb
fisubs
xor
jecxz
psrad
sbb
pop
ljmp
mov
pop
mov
out
inc
fdivs
scas
adc
cmp
xor
repz
or
cs
and
sbb
push
andl
int
pop
jno
out
mov
jnp
mov
in
mov
pop
xor
clc
ficoms
pop
pop
lret
inc
shl
je
and
xchg
adc
aam
sbb
adc
mov
push
aas
jge
stos
sbb
inc
jl
test
test
popa
sbb
or
sbb
repnz
outsl
mov
mov
fcomps
js
push
setg
or
cmp
jno
lcall
vmovmskpd
cmp
xchg
inc
mov
movsb
cmpsb
dec
cmp
sahf
mov
cmpsb
pop
inc
pop
sahf
add
shr
sbb
dec
negl
cmpsl
push
xor
xchg
push
dec
inc
lds
mov
xchg
mov
inc
xchg
push
and
aaa
xor
sarl
jmp
and
imul
jmp
cli
push
in
imul
je
mov
mov
xchg
xchg
daa
in
push
aad
mov
xor
stos
shrl
aas
ret
jg
fdivl
scas
stos
loopne,pt
ds
cmpsl
sub
push
cmp
sub
or
pop
or
adc
add
sub
mov
inc
loopne
iret
push
add
inc
inc
cwtl
pusha
push
cwtl
das
mov
addr16
leave
jbe
fimuls
dec
push
addr16
sbbl
mov
dec
dec
loop
sbb
sbb
push
inc
lcall
add
imul
cwtl
jnp
cmp
jno
fildll
inc
push
fucom
jge
cltd
fstpl
or
jecxz
inc
mov
ror
ss
xor
adc
fistps
sbb
lcall
call
fistpl
mov
lock
push
rolb
add
sbbb
xchg
dec
sbb
es
cmpl
pop
cld
cli
insb
pop
push
pushf
inc
xchg
jo
mov
sarl
mov
arpl
xor
outsb
and
mov
loope
arpl
inc
pushf
filds
mov
xchg
fldl
arpl
daa
aas
je
shlb
out
idivl
int
and
je
xor
pusha
imul
loopne
stos
cltd
xchg
rcr
xor
mov
imul
mov
and
mov
mov
adc
clc
dec
mov
int3
mov
js
lea
add
xchg
ja
dec
mov
dec
mov
data16
divl
jno
or
sub
dec
aam
dec
xchg
inc
dec
loopne
out
fnstcw
arpl
pause
mov
push
imul
jmp
jecxz
mov
cmp
pushf
xor
pop
pop
adcb
dec
xor
cmpl
in
enter
inc
scas
pusha
sbb
sub
push
mov
sub
add
cmp
clc
stos
push
pop
fistpl
out
jne
pop
adc
pushf
and
test
jp
pop
pop
notb
std
inc
cs
hlt
jno
sbb
jb
popf
push
push
stc
cmpl
adc
fiaddl
pushf
mov
fcmove
ret
mov
xchg
pop
jae
mov
adc
jecxz
stc
mov
ja
clc
std
aam
push
call
cltd
sbb
add
or
or
imul
call
das
add
pop
jo
js
sbb
cmpsl
xor
cmp
add
aaa
jle
pop
shrl
xchg
adcb
es
ja
cli
dec
adc
pop
sub
xor
push
lcall
in
cld
mov
xor
jno
js
inc
pusha
add
inc
sbb
dec
xchg
adc
xor
sub
cld
stc
jge
icebp
xor
inc
xchg
lods
clc
lods
and
mov
cltd
setnp
outsl
mov
cld
loope
fs
out
add
mov
and
and
mov
cmp
clc
outsl
cli
or
fbld
xchg
sbb
or
pop
mov
fwait
mov
pop
stos
scas
pop
mov
es
sahf
xchg
adc
xchg
mov
mov
cld
in
add
fnstsw
in
xlat
push
popf
add
les
cwtl
aaa
inc
pop
ret
cmp
test
fwait
pop
cli
inc
test
mov
sbb
shl
bound
inc
out
pop
fsubrp
fnstenv
sbb
mov
das
mov
aaa
lahf
pop
or
std
dec
insl
outsl
das
pop
lar
add
jmp
jecxz
js
jnp
insb
mov
jae
int3
lock
adc
jle
call
test
fdivrl
andb
adc
ss
adc
jne
lret
xor
lahf
lcall
lods
jp
lret
pop
test
and
leave
pop
mov
mov
mov
fimull
cmpsb
and
push
frstor
out
jne
inc
cmp
nop
mov
arpl
and
sbb
and
jle
jne
xchg
mov
mov
mov
dec
xchg
sub
jl
in
jae
cmp
pop
add
adc
push
xchg
or
movsb
lea
pop
out
stc
cmp
dec
jbe
mov
sub
into
loop
inc
or
xchg
icebp
mov
add
mov
push
aad
inc
jne
adc
jmp
lcall
out
push
adc
inc
fsub
imul
int3
pushf
xchg
ficoml
xor
imul
shlb
repnz
mov
push
cmp
fdivrl
movsb
inc
call
jbe
mov
test
test
or
adc
push
int
fidivrl
mov
push
or
add
mov
pop
jno
mov
cmp
lods
clc
out
push
rcrl
push
add
stos
mov
prefetch
push
pop
std
daa
inc
and
stos
je
scas
push
xchg
inc
fnstenv
es
add
add
sub
into
sbb
pushf
cmc
daa
arpl
lahf
xor
out
push
out
pop
das
mov
out
pop
sti
xor
out
pop
mov
fbstp
xor
stos
mov
xchg
in
and
adc
and
adcl
xchg
xor
fld
repnz
cmc
mov
in
jbe
push
stos
pop
or
xchg
add
stos
jne
inc
lret
adcl
lods
xchg
push
cs
popa
add
jp
push
lret
fadds
jns
in
inc
shll
enter
push
lods
shl
fidivrs
icebp
pushf
test
cmpl
push
lock
jmp
fisttps
mov
and
mov
ret
xchg
lret
imul
cmc
cli
out
lret
dec
out
mov
insb
cmp
xorl
jbe
lds
mov
xchg
and
lret
cmpb
jno
lods
pop
mov
ficomps
mov
inc
fstpt
and
arpl
lods
pop
call
mov
shll
add
pop
sbb
fsts
dec
test
pop
xor
jle
push
sarb
psubusb
push
xchg
mov
mov
xchg
pop
aad
enter
or
rorb
push
insl
in
push
add
repnz
nop
popa
movsl
out
cwtl
pop
inc
mov
cmp
aam
jmp
push
push
ss
xor
add
leave
xor
lret
and
sbb
test
and
mov
lds
leave
sbb
cmpsb
enter
scas
inc
sahf
mov
add
lods
or
xor
xor
push
push
inc
test
inc
pop
mov
cmp
fldcw
inc
sbb
outsl
mov
xor
gs
mov
add
ja
and
fstpt
jg
add
or
xor
mov
xor
fnstcw
xchg
mov
pop
pop
pop
mov
test
outsb
cmpsb
sbb
cld
aam
mov
pop
and
xchg
or
or
aad
adc
fimuls
lcall
lret
push
inc
push
fwait
mov
insb
sahf
adc
shlb
mov
cwtl
dec
mov
pop
dec
test
rclb
rorl
insl
inc
test
test
shlb
shrl
je
and
mov
jle
jnp
dec
xchg
and
pop
scas
mov
lods
cmp
pop
jle
xor
pop
jne
add
in
pop
dec
pop
push
and
rorl
pushf
pop
jg
mov
lret
inc
or
mov
pushf
jmp
jmp
daa
push
repnz
scas
sub
mov
or
stos
aam
pop
inc
jb
jecxz
mov
mov
in
xorl
repnz
ficompl
inc
aas
ds
push
add
fdivs
loop,pn
add
scas
mov
mov
into
adc
scas
mov
adc
pop
call
push
scas
pop
push
pmaxub
inc
paddw
and
jecxz
mov
mov
int
sbb
dec
push
jnp
xchg
scas
push
inc
adc
jne
sar
insb
fsubs
scas
fdivrs
popa
jb
stos
cmp
dec
mov
hlt
enter
cmp
mov
sub
cmc
or
jmp
stc
or
xchg
add
pop
mov
fwait
cmp
das
cld
and
cmp
loop
stos
push
xor
nop
sbb
repz
in
cltd
lea
in
or
in
adc
xchg
mov
lahf
xchg
xchg
add
and
andb
dec
jne
arpl
pop
pushf
pop
mov
add
enter
popf
fadd
cld
mov
test
jl
jmp
faddp
cltd
mov
dec
sub
test
unpckhps
std
xchg
sbb
xchg
dec
mov
dec
pop
gs
xchg
imul
es
mov
push
or
test
icebp
push
or
xor
aaa
shrb
mov
jle
gs
out
fxtract
dec
fsubrs
push
in
sub
pop
rcrl
or
add
and
push
ficoml
faddl
add
cs
and
fildll
dec
arpl
stos
sti
popf
push
loopne
mov
faddl
pop
test
outsl
insb
push
push
shrl
add
movzbl
adc
test
push
insb
dec
xchg
cmp
add
pop
inc
mov
xchg
jo
std
adc
mov
and
insl
dec
add
and
arpl
mov
xchg
mov
pop
mov
iret
mov
and
cmpsb
or
push
sbb
sub
mov
sub
push
rcrl
scas
jnp
jbe
push
ja
addr16
mov
pusha
cld
sbb
ds
lods
outsb
stos
scas
enter
rolb
shrl
cmp
pusha
mov
or
pop
bound
cmp
call
jmp
iret
es
lds
in
and
scas
les
add
jb
adc
jmp
mov
dec
xor
xor
add
sub
adcl
cmp
aam
and
loop
cmp
pop
shlb
cmp
cmp
ret
jp
mov
inc
shr
xor
aaa
add
push
dec
sbb
lret
mov
add
pop
or
test
dec
and
test
push
add
add
adc
sahf
popa
in
push
jmp
mov
dec
jo
sbb
mov
ss
mov
gs
xlat
sub
push
out
adc
push
test
adc
ret
in
xor
xor
xor
lahf
sbb
pop
div
aas
leave
ljmp
lahf
jnp
imul
ficomps
sub
push
mov
push
aad
imul
cmc
stos
lods
jnp
sub
push
sub
movsb
mov
ja
insb
xchg
xchg
pop
cmp
xchg
jle
cmp
icebp
lock
sbb
sbb
jp
mov
fistps
pop
add
dec
pop
clc
mov
xchg
jno
pop
rep
xchg
psubq
lret
das
fstpt
sub
cmp
or
sbb
imul
mov
mov
jg
psubq
lret
das
fstpt
sub
cmp
or
sbb
imul
mov
fwait
outsl
fwait
jg
ud0
lret
das
fidivrl
das
iret
cmp
add
pop
sti
imul
mov
add
jg
por
lret
das
pop
ljmp
iret
les
out
sbb
mov
movsb
rorb
mov
mov
xchg
fcomps
push
jp
push
cs
pop
es
outsb
push
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
fs
jbe
cs
pop
inc
dec
out
push
outsb
push
sahf
decl
iret
fidivrs
out
mov
test
dec
pop
xor
cmp
push
add
out
out
lahf
repnz
pop
push
dec
out
outsl
add
in
or
add
fimull
sub
in
lret
mov
out
sub
sub
fwait
push
imul
sahf
addr16
mov
arpl
xchg
pop
sbb
jno
cltd
iret
mov
lock
mov
repnz
jp
jecxz
mov
cli
rcl
loopne
mov
std
clc
sub
pop
mov
negb
xchg
jbe
fsubrp
imul
cmpsb
test
outsb
mov
fidivs
in
cmp
dec
out
xchg
jbe
jnp
outsb
add
push
or
push
xchg
jmp
xor
sub
push
mov
fsubs
push
mov
inc
jg
outsl
push
shl
loope
scas
int3
fisubs
out
push
jle
outsb
ds
cs
pop
ds
and
outsb
jb
or
rol
loopne
popf
lock
fdivrs
bsf
push
adc
sub
adc
sbb
sahf
int
lret
sarl
loop
cli
dec
pop
arpl
inc
xor
adc
push
jae
cmpsl
mov
mov
incb
push
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
jno
out
lds
cmp
jle
lock
sbb
pop
pop
sbb
pusha
sub
movsl
xchg
jb
xchg
fdivl
dec
pop
imul
mov
add
lds
repnz
or
cmp
lret
or
adc
add
sbb
lods
shll
roll
out
inc
push
lock
stos
dec
arpl
imul
inc
lcall
adc
push
repnz
pop
ja
cmpsb
movsb
dec
mov
ja
pop
insl
and
lods
or
rcr
stos
fmulp
jne
cmc
notl
orb
cmpl
inc
jecxz
clc
lea
stos
and
loope
pop
into
add
addr16
popa
push
js
and
int
icebp
dec
stos
xlat
shrb
test
mov
std
out
cmc
mov
es
cld
mov
roll
mov
int
sub
test
addr16
insl
sbb
jmp
ret
fcomp
out
fs
out
dec
stc
jne
pop
div
int
push
lds
insl
imul
lcall
nop
mov
dec
push
mov
mov
xchg
ljmp
and
jl
and
jnp
sub
push
pushl
int
pop
ret
fsub
or
push
push
add
js
add
in
xchg
sub
das
mov
cmpb
jne
icebp
fdivrl
inc
sub
mov
lods
cmp
pusha
pushw
jne
jnp
gs
fwait
pusha
lea
add
pop
lret
mov
adc
mov
dec
nop
cmp
cmp
stos
mov
in
cmc
repz
enter
into
rorl
idivl
xchg
add
pusha
push
push
enter
sahf
iret
aad
iret
or
jmp
popa
xchg
in
fdivr
mov
ss
sar
daa
testl
push
into
pop
lods
repz
xchg
lahf
jo
out
push
out
sbb
add
push
adc
imul
jns
scas
addr16
out
cmc
test
imul
dec
inc
xchg
stos
push
mov
pop
idivb
add
neg
push
add
dec
jmp
lea
das
adc
adc
pusha
pop
xchg
adc
jl
cld
inc
fnstsw
and
adc
loope
ret
and
movsb
dec
lcall
aas
cmp
into
inc
fiaddl
int
insl
xlat
sub
push
cld
add
gs
cli
xchg
imul
les
push
jbe
or
jae
sub
adc
sub
xor
inc
cmovns
sbb
pop
push
scas
in
inc
shl
aaa
push
test
repz
in
mov
sahf
in
mov
cmpsb
pop
dec
pop
imul
dec
clc
test
hlt
in
xlat
pop
lea
mov
enter
mov
rol
jg
dec
pop
xchg
stc
mov
mov
mov
inc
rcrl
ret
or
sbb
cli
out
sahf
jne
cltd
mov
test
sbbb
xchg
xor
popa
ds
xchg
mov
cmp
inc
jecxz
mov
mov
ret
into
mov
cmp
cli
sbb
or
add
bswap
shlb
lcall
gs
aad
push
aad
dec
outsl
fisubrs
inc
out
bound
push
in
mov
aas
mov
mov
pop
add
lahf
cmp
nop
test
adc
es
jns
ljmp
mov
pop
mov
js
mov
jnp
push
mov
adcl
rorb
icebp
ljmp
icebp
je
scas
lret
cmp
jo
lds
pop
lds
out
les
jo
mov
scas
stc
fucomip
outsb
cmp
mov
mull
xor
sub
icebp
xor
dec
pop
or
dec
push
mov
das
mov
inc
xchg
jnp
imul
jmp
adc
je
jp
cmpsb
sub
sbb
dec
or
sarl
bound
test
dec
les
jbe
mov
sbb
cmpsb
pop
sub
add
mov
add
and
mov
out
jbe
popf
inc
in
add
jl
pop
cwtl
and
xchg
or
mov
sub
fbld
pop
call
nop
lods
push
xchg
rcrb
or
push
dec
xchg
ja
mov
add
jmp
mov
shrl
js
das
push
mov
fwait
cmp
xchg
xchg
jnp
pop
data16
mov
arpl
repz
in
inc
fcoms
stos
push
sbb
sub
ljmp
sub
imul
adc
pusha
in
stc
mov
jb
push
push
mov
dec
inc
mov
fldt
aam
jp
mov
or
aad
inc
or
xchg
stos
mov
mov
mov
push
enter
xlat
dec
inc
insl
out
rcl
mov
test
lahf
dec
sbb
or
loopne
scas
into
xchg
xchg
mov
dec
sub
mov
iret
test
xor
fcomps
or
dec
addr16
inc
and
cwtl
push
mov
sub
stos
mov
jae
repnz
shlb
push
fcmovne
jge
aad
dec
ds
mov
sub
imul
cmp
movsl
iret
outsl
xor
push
mov
mov
mov
jecxz
gs
insb
cmp
psrlq
int
sub
and
ret
out
inc
imul
inc
and
jnp
xchg
mov
into
sub
addr16
lcall
mov
jb
ja
cmp
push
leave
test
inc
add
adc
pop
sahf
stos
mov
outsl
mov
jl
or
cli
lds
clc
sub
movsl
dec
ss
jl
leave
mov
mov
call
mov
fstpl
gs
fdivrl
and
push
fnstcw
cli
mov
push
jno
nop
xchg
mov
sbb
adc
out
mov
mov
lret
xor
cmp
xchg
push
adc
sbb
addl
icebp
mov
push
imul
push
int
pushf
test
movsb
lcall
or
xchg
mov
in
pop
push
and
mov
add
test
scas
push
idivl
sub
add
outsb
and
fisubrs
or
xchg
loope
loope
or
imul
jo
ljmp
movsl
xor
add
test
xor
push
pop
or
and
inc
int3
cli
data16
std
nop
popa
mov
jle
fstpl
cli
and
pop
repz
es
cmp
lcall
std
stos
ss
inc
ret
xchg
push
sbb
stos
daa
lea
mov
fistps
xchg
and
stos
pop
or
xchg
jo
xor
fisubrl
lods
jns
xchg
popa
cmp
nop
cmp
adc
movsl
mov
movsb
imull
push
mov
mov
push
in
pop
mov
and
sahf
ret
ss
mov
xorl
scas
push
and
or
xchg
inc
push
scas
sbb
mov
cmp
mov
pusha
push
rorl
mov
dec
repz
ret
decl
inc
cmp
sahf
dec
mov
addr16
daa
inc
pop
insb
mov
sub
sub
jmp
jno
xchg
test
out
loopne
lcall
test
sub
pop
mov
adc
xchg
stc
loopne
in
int
sbbb
sub
cmp
movsl
xchg
repz
and
hlt
sub
bnd
and
stos
inc
jbe
xor
ss
sahf
fs
cmovle
adc
lock
sub
xchg
xor
test
and
lods
push
icebp
rcr
ljmp
and
inc
xchg
sbb
xor
inc
into
pushf
or
lods
mov
mov
jbe
xor
nop
ja
rol
sahf
adc
adc
pusha
dec
mov
push
repz
loopne
call
out
xchg
jno
push
lods
imul
add
out
mov
subps
jns
insb
hlt
dec
insb
repnz
movsl
imul
xchg
xchg
test
cmp
call
push
or
lods
pushf
add
stos
out
mov
jae
or
sbb
daa
movsb
adc
int
imull
jns
das
fadd
movsl
push
ja
fbstp
sub
add
adc
adcl
scas
sbb
into
adc
add
pushl
jp
and
mov
jl
push
invd
aad
push
xlat
sbb
testb
sarb
mov
or
jo
mov
push
add
testb
jl
addr16
jnp
addr16
rorl
mov
outsb
sub
mov
dec
lods
repnz
mov
pop
loop
test
js
push
enter
or
or
push
fwait
sbb
sbb
pop
dec
rorl
xchg
ljmp
and
xor
mov
fsts
add
mov
pop
mov
insl
jb
mov
cli
pop
adc
inc
push
arpl
add
frstor
neg
jae
outsl
clc
mov
shll
and
or
xchg
paddsb
pushf
enter
icebp
dec
push
mov
jae
sub
cmp
cli
rcpps
sbb
or
es
push
aad
inc
cmp
jne
mov
ror
orb
adc
out
daa
ficoml
imul
mov
dec
inc
xor
pop
or
sbb
pop
repnz
outsb
dec
push
mov
sbb
pop
adc
mov
inc
jle
dec
jmp
jmp
xchg
mov
orl
cmp
jle
cmp
inc
sub
ja
inc
sub
subb
stos
leave
add
adc
pop
or
xchg
popf
jbe
lcall
xlat
mov
xor
enter
cmc
xchg
outsb
outsb
mov
movsb
adc
popa
insb
popa
je
jg
jne
mov
xchg
add
or
lea
stos
aaa
in
shr
pop
loope
das
and
lods
stos
jo
push
xor
sarl
pusha
cmpsb
inc
pop
cmp
pop
jmp
adc
xchg
pop
repnz
fdivl
gs
ret
cld
dec
push
lcall
fsubs
xor
ja
mov
cmp
js
xor
bound
jb
pop
leave
je
jno
xor
push
pop
adc
xlat
jg
add
fiadds
testb
and
jg
lret
ljmp
xor
out
mov
and
pop
adc
out
jg
push
xlat
or
cmpsl
inc
add
subb
jnp
cli
jp
adc
dec
cld
repnz
adc
jns
or
sbb
sti
jecxz
mov
cmc
dec
mov
gs
mov
in
fwait
repnz
mov
in
mov
inc
push
push
mov
ret
nop
incb
bound
mov
jnp
xlat
movsl
sbb
jb
inc
stos
and
mov
repz
jns
sub
rcrb
movsl
dec
pop
inc
enter
pushf
mov
ljmp
cmp
incb
iret
pop
or
cli
jle
sub
out
lds
jbe
jnp
xor
dec
mov
pop
mov
sbb
cs
aaa
or
idivb
jb
push
icebp
andl
les
repnz
push
out
xchg
aam
adc
repnz
pushf
fwait
push
mov
inc
jne
mov
mov
xchg
adc
and
popf
mov
jge
scas
mov
xor
jle
bound
add
stos
inc
out
jmp
imul
test
je
mov
mov
mov
out
jl
add
cld
cmp
lahf
xlat
idivb
push
mov
push
daa
pop
mov
jp
xchg
pop
push
jns
sahf
test
lcall
loopne
jb
lods
adc
pop
repnz
jg
das
xchg
insb
lret
stos
mov
cs
jae
cmp
cmpsl
nop
ret
test
mov
enter
sbb
xchg
inc
pop
cmp
mov
fcompl
leave
pop
xor
fldl
xchg
jo
test
pop
ret
xchg
dec
jo
enter
dec
mov
rclb
xchg
fbld
out
jno
jnp
push
or
xlat
mov
add
scas
mov
cmp
mov
mov
andb
lea
jae
mov
and
jecxz
jno
xchg
jmp
push
inc
cmp
fwait
xchg
imul
dec
cltd
int
movsl
mov
jne
lcall
jle
pop
mov
hlt
jge
andb
in
pusha
cmpsb
sbb
flds
inc
jecxz
shll
push
sbb
cmp
and
push
andnps
in
stc
cmp
lret
pop
ja
cmpsb
mov
andb
lods
es
mov
sub
push
les
popf
mov
sbb
scas
and
dec
xor
mov
sub
sbb
js
mov
sub
nop
ss
sbb
ljmp
insl
les
jb
ja
ret
jle
xor
les
sti
xchg
icebp
xor
pop
mov
cmp
inc
int3
call
cmpsl
clc
mov
in
adc
bound
mov
push
dec
pop
jno
adc
fmul
fisubrs
andl
cmp
and
fndisi(8087
xor
sbb
mov
cs
enter
adc
outsb
shr
adc
imul
mov
andb
andl
addl
lea
push
test
mov
push
push
xchg
inc
or
stos
daa
hlt
in
sub
test
stos
lcall
sahf
imul
adc
imul
mov
cmp
mov
lock
inc
push
outsb
aam
stc
ja
and
cwtl
enter
into
aas
call
inc
xchg
inc
test
lret
insl
cltd
sbb
inc
hlt
je
mull
leave
dec
dec
icebp
pusha
xor
xor
sti
inc
bound
testb
pushf
out
sub
sahf
ljmp
adc
in
inc
pushf
sub
inc
push
add
jecxz
sbb
xchg
pop
sub
test
lds
jnp
imul
lahf
loopne
shrl
les
add
jp
cmpsl
inc
scas
mov
ja
inc
int
jle
dec
pop
hlt
popa
xchg
loopne
cmp
adc
and
ret
aam
mov
call
inc
sub
aas
xor
imull
cmp
flds
mov
mov
or
dec
push
dec
std
movsb
mov
mov
adc
sub
mov
adc
inc
gs
stc
dec
stos
sub
xchg
pop
cld
decb
in
cmp
in
xchg
movsl
pop
mov
ret
sahf
xchg
push
sub
mov
jnp
std
mov
sub
sub
ror
inc
fwait
mov
jns
or
xchg
je
cs
in
sub
sbb
stos
lea
andl
sbb
nop
push
popa
xor
jae
aad
mov
idivl
push
xor
cmc
pop
mov
sub
addr16
xchg
inc
loope
and
xchg
dec
push
jl
and
mov
daa
out
inc
push
jg
aam
mov
inc
dec
popa
nop
aad
mov
das
or
mov
cmpsb
and
push
pop
jmp
fisttps
leave
push
out
aaa
mov
or
sbb
insl
mov
out
pop
ja
mov
sub
lret
xchg
js
out
cmp
adc
out
aaa
push
sti
aas
dec
and
or
lods
pushf
loopne
xchg
pop
gs
gs
fcomps
cld
gs
mov
imul
cmp
enter
jnp
leave
dec
sub
stc
ds
mov
mov
outsl
repz
and
out
and
add
xchg
in
aam
outsl
loopne
sbb
test
mov
int3
add
xor
ret
jge
orl
mov
dec
ja
test
push
adc
push
lock
scas
dec
fisttps
inc
fiaddl
test
fcompl
xchg
int3
popf
xor
inc
ja
aad
jne
in
mov
and
sub
jg
jb
sarb
fcomi
stc
pop
sbb
imul
add
add
popf
dec
idivb
pop
test
inc
test
mov
mull
lds
hlt
aaa
and
scas
mov
int3
ficoml
and
or
stos
add
ljmp
push
es
pop
out
insl
adc
into
push
movsb
fnstenv
sub
add
ja
and
mov
add
push
cmp
fs
test
aaa
insb
out
cmc
dec
mov
add
inc
mov
fcmovnbe
mov
mov
pop
lods
inc
dec
pop
loopne
cltd
inc
pop
push
xchg
js
xchg
mov
push
mov
call
subb
pusha
lods
push
mov
jecxz
call
xchg
jb
sbb
jns
daa
xor
lds
adc
fwait
mov
sar
push
mov
cwtl
repnz
lds
xor
jmp
mov
jae
jl
cmpsb
icebp
mov
ret
sub
aam
mov
enter
xchg
xor
movsb
callw
pop
int3
idivl
out
mov
push
ds
mov
or
inc
lret
or
xor
adc
jecxz
outsb
dec
jecxz
jbe
jno
ja
xor
montmul
cmpsb
add
jmp
or
in
les
popa
movsl
sub
sti
lahf
aam
mov
mov
leave
mov
cs
or
and
stos
lcall
inc
stos
inc
mov
rorl
add
dec
push
jle
jle
jg
ret
pushl
sbb
jns
jp
or
push
popa
push
jae
mov
and
fstps
or
ljmp
pushf
pushf
ds
cltd
lds
les
icebp
pop
inc
out
enter
sub
stos
into
imul
jecxz
pop
cmpsb
enter
and
mov
fidivrs
mov
jg
add
inc
fs
mov
or
mov
adc
cltd
sarl
and
pushf
outsl
scas
or
xor
inc
push
push
and
cmp
xor
mov
leave
mov
mov
jmp
into
mov
hlt
cmp
cmpb
data16
dec
add
arpl
xchg
pop
jle
test
repz
or
repnz
lods
add
add
lahf
inc
movsb
mov
mov
jmp
test
ja
add
dec
cs
dec
cmp
dec
lcall
cmc
mov
xor
into
scas
into
xchg
pushf
xchg
int
jns
out
fsubrl
repz
int
ljmp
jne
mov
xchg
dec
test
jmp
xor
rcr
shrl
repnz
push
les
lret
mov
cmp
je
mov
push
push
lcall
jp
insb
cmp
pop
mov
push
call
daa
inc
sahf
pop
imul
push
xchg
cmp
mov
hlt
cmp
add
out
jecxz
fsubrl
je
mov
in
mov
outsb
add
movsb
or
rcrl
jg
add
mov
mov
xor
add
aas
stos
rcl
pop
push
lods
arpl
push
sahf
enter
call
or
xchg
scas
jne
aam
das
imul
hlt
rclb
xor
mov
call
add
mov
imulb
mov
ret
and
inc
pop
and
add
insl
push
call
lock
mov
call
out
push
sbb
pop
test
test
clc
sbb
pop
pop
sbb
xor
xchg
mov
add
jg
insl
in
xor
test
sub
mov
enter
clc
outsl
rcrl
push
lods
ds
mov
decl
or
adc
shll
add
mov
dec
dec
lret
scas
push
cmpsl
sbb
loopne
lret
adcl
rep
faddl
icebp
pop
dec
rcl
lock
xchg
mov
pushfw
lods
adc
aam
movsb
das
xlat
xor
mov
pop
push
adc
rclb
pushf
lret
fsubrs
mov
mov
add
je
mov
and
sarl
pop
dec
xor
mov
jnp
mov
ja
rorl
or
lock
mov
bound
pop
lret
push
cmp
dec
push
jecxz
cld
jae
test
mov
xor
fistl
cvttps2pi
fsubrl
lcall
ret
loopne
dec
in
shrb
inc
push
xlat
addr16
lcall
pop
mov
mov
or
stc
out
call
mov
lret
mov
lea
cltd
sbb
push
sub
mov
jno
pop
lods
push
les
dec
pop
lcall
aas
test
test
mov
push
or
mov
cmp
push
jl
inc
sbb
dec
mov
test
push
mov
add
adc
shrl
out
xchg
mov
dec
push
fcompl
lods
div
sub
mov
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsl
push
lahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
fcoml
leave
cmp
roll
loope
icebp
and
and
pusha
inc
nop
push
andb
mov
and
xor
rcll
add
xor
and
jo
pusha
inc
nop
push
adcb
adc
and
xor
rcll
add
xor
and
jo
pusha
inc
scas
push
fcoml
rcrb
xorb
xchg
pop
loopne
adc
je
push
or
xchg
xchg
subl
mov
testl
sbb
adc
jl
stos
test
mov
mov
jg
in
mov
mov
and
iret
sbb
add
jns
filds
or
ja
loope
push
cmp
mov
pusha
mov
psllw
test
rolb
xchg
xor
adcl
xor
inc
xchg
in
dec
push
pop
incl
xor
lea
fnstsw
push
lcall
aad
xorl
adc
ds
jmp
push
jns
push
inc
pop
mov
cmp
cmp
in
loopne
adc
add
xor
and
jo
pusha
inc
nop
push
andb
mov
and
xor
test
in
aas
fadds
les
push
jmp
fs
gs
push
mov
ja
xor
mov
and
push
in
and
xor
fs
xor
mov
cmpl
pusha
inc
nop
push
andb
mov
and
xor
rcll
add
xor
and
jo
pusha
inc
nop
push
andb
mov
and
xor
rcll
adc
pop
xchg
cmp
push
sub
and
mov
mov
sub
pushf
lods
mov
mov
pop
pop
jbe
jae
ss
adc
pushf
add
xchg
and
push
adc
insl
push
dec
dec
pop
sbb
mov
cltd
and
pop
pop
sub
push
pop
and
das
dec
push
xchg
jge
sub
push
rolb
dec
lods
testl
andl
lret
xor
and
push
icebp
or
pop
or
stc
or
dec
lds
into
pop
ljmp
cmc
inc
xchg
mov
or
jl
inc
sub
insl
out
inc
aas
and
pop
icebp
pushf
jecxz
lods
adc
mov
pop
lock
jo
out
add
out
std
mov
jecxz
push
add
andb
cs
das
push
enter
lea
push
fistpll
lret
stc
mov
inc
out
xor
shll
insl
lock
dec
stc
xchg
mov
loopne
mov
add
inc
mov
sarl
sub
loopew
pop
stos
push
xchg
in
fbstp
leave
sub
and
mov
leave
call
in
jg
out
je
xor
jl
test
pop
ficompl
mov
std
and
add
dec
frstor
and
pushf
cmp
or
insb
or
test
rclb
or
push
sub
mov
pop
movsb
int3
lds
movsl
divb
mov
push
in
add
pusha
in
mov
mov
dec
insb
pop
mov
jbe
lods
mov
pop
bound
dec
faddl
push
push
adc
jno
dec
lret
jo
add
cmpsb
out
or
xor
mov
stc
fistps
xchg
xor
ljmp
test
xor
cmp
jecxz
mov
movsl
addl
mov
shll
stos
loope
and
push
dec
cld
cmpsb
ss
cld
dec
dec
or
push
in
mov
mov
inc
sub
or
outsl
into
bound
push
ss
es
nop
jmp
and
shlb
cltd
test
or
aam
push
xor
pop
mov
loop
pop
or
mov
nop
add
imul
rolb
mov
popf
outsb
mov
cmpsb
dec
cmc
xor
sarl
cmp
fdivrs
jge
dec
int
or
inc
aas
pop
sub
stos
sbb
popa
or
jge
popf
cltd
mov
mov
mov
pop
mov
insb
adc
aaa
call
cmp
jb
loop
leave
add
fcom
cwtl
dec
nop
call
dec
mov
and
icebp
pop
bound
dec
add
call
sub
push
xor
cli
sti
fisttpl
mov
sbb
ret
jns
dec
rcrl
insl
testb
cli
jle
adc
stos
cmp
add
or
repnz
test
sbb
test
repnz
movsl
es
sbb
test
sub
push
cwtl
iret
out
jae
mov
je
aas
pop
sub
sbb
add
mov
xor
and
xor
inc
sbb
sub
ja
sbb
xor
js
mov
xor
add
shl
push
js
sbbb
cmp
lahf
sbb
pop
cmp
movsl
das
mov
ficoml
loop
add
dec
mov
add
hlt
mov
pop
xor
dec
and
jnp
sbb
xor
inc
mov
and
std
movsb
mov
ss
lret
loop
jp
fwait
mov
push
inc
imul
push
loopne
pop
jmp
repnz
repnz
js
and
adc
scas
and
es
or
mov
add
lcall
adc
sub
jne
pop
mov
rorl
add
mov
sahf
xchg
jno
cmp
or
xlat
scas
cwtl
lock
cmp
mov
fcoms
inc
popf
jmp
pop
dec
testb
mov
mov
mov
cmc
pop
jp
sub
out
sub
dec
pop
push
negl
mov
out
dec
push
or
or
mov
sahf
test
bswap
dec
jmp
mov
aas
jns
adc
push
sub
mov
xlat
fcoms
in
test
push
mov
out
notb
and
sahf
mov
dec
test
in
push
leave
ja
fisubs
loopne
adc
insb
loop
je
xorb
daa
fs
and
jle
lea
cltd
out
dec
aas
mov
fcom
adc
outsl
mov
pop
sarb
xor
mov
adc
pop
xor
dec
add
cld
or
out
loopne
js
mov
ss
dec
inc
jb
dec
dec
daa
lock
sahf
pop
push
js
xchg
lea
jle
push
push
mov
push
mov
loopne
pop
sbb
call
sub
gs
shrl
push
and
mov
pusha
mov
xchg
sti
push
or
into
in
cmp
movsl
cltd
in
sbb
fdivrp
push
out
jge
dec
fiaddl
pop
scas
rcrl
ja
and
std
mov
jb
push
adc
je
dec
filds
sbb
cmp
jne
jnp
pop
push
cmp
in
inc
sbbl
sub
movsl
movsb
adc
lret
pop
cmp
ss
mov
jmp
sub
xorb
je
cmp
and
xor
and
push
sbb
xor
icebp
inc
xor
add
repz
pop
das
inc
sub
out
into
enter
xchg
fwait
insb
pop
in
xsha1
cmpsb
iret
scas
xchg
dec
stos
lahf
out
add
and
mov
pushf
cmp
test
std
xchg
and
dec
mov
pop
dec
mov
in
mov
xchg
jl
cmp
push
and
pop
cmc
mov
test
mov
jne
mov
dec
call
lds
loope
dec
leave
inc
add
outsb
jmp
cmp
pop
lock
js
push
imull
sub
mov
das
add
push
mov
into
loop
fcos
xchg
push
jmp
cld
push
out
test
stos
cmp
mov
xor
pop
jg
add
and
cli
pop
xchg
cmpsl
mov
xchg
or
popf
push
add
xor
or
mov
sbb
test
cmp
fcmovnu
add
push
inc
jbe
addl
lock
js
adc
sahf
xchg
rorb
dec
lret
mov
stos
pop
jle
jne
popa
xor
adc
sti
scas
push
and
dec
gs
test
and
into
xchg
lds
les
xchg
xorl
mov
mov
pop
add
xchg
loope
lods
test
repnz
mov
jle
fbstp
pop
stos
repz
imul
out
pop
cltd
repnz
lcall
inc
and
call
mov
lcall
sbb
or
pop
stc
adc
ret
pop
cmp
mov
xor
orl
fidivrs
popf
fnstcw
fnsave
sbb
ret
shl
or
and
lret
sbb
je
pop
jae
enter
mov
jne
inc
out
dec
and
lahf
or
repz
pop
mov
std
aas
aaa
daa
out
call
sub
pop
inc
cld
iret
xchg
popa
jge
xor
pop
loope
gs
and
leave
ret
lock
std
loopne
repz
ja
xor
sbb
fs
andb
cld
add
stos
dec
and
push
jp
lret
dec
pop
mov
xchg
push
pop
or
stc
repnz
aaa
dec
dec
dec
mov
xor
cmc
mov
ficomps
imul
xchg
lcall
cmp
in
push
imul
out
es
dec
mov
jbe
ficompl
mov
jp
js
faddl
scas
fwait
add
int3
je
cltd
push
cmc
lds
cmp
sarl
add
pop
dec
pop
xchg
xchg
mov
stos
pop
sbb
push
cmp
push
xchg
test
scas
jb
sub
outsl
xchg
lock
sti
cmp
test
out
sub
adc
incb
out
pop
dec
dec
push
sti
push
adc
fmuls
data16
push
mov
pop
sub
sub
xor
inc
mov
int
sbb
rcr
and
jmp
lret
xlat
shrb
pop
pop
adc
cltd
cmp
outsb
mov
lret
sub
or
mov
subl
jnp
mov
adc
add
xor
add
or
lods
mov
mov
sub
mov
push
xchg
jae
add
es
into
sbb
jge
in
xchg
movsb
cmc
cmpsl
mov
movsb
mov
push
repnz
and
lds
push
mov
jnp
out
mov
xor
shl
es
jo
call
mov
sahf
mov
fwait
xor
mov
mov
xorb
dec
jg
lcall
aaa
push
sub
add
lods
aad
mov
pop
hlt
fs
push
mov
sbb
fdivrs
cmp
out
dec
mov
cld
mov
fidivs
fisubl
dec
lret
push
ja
mov
fs
push
or
jmp
fidivrl
add
popa
mov
push
ret
out
mov
inc
ret
cmp
mov
inc
add
mov
jp
push
imulb
add
xchg
arpl
test
cld
dec
cmp
rcl
cmp
andl
sbb
sub
out
push
xor
mov
stc
loop
insl
dec
xchg
pop
mov
pop
adc
jg
shll
inc
stos
scas
fbstp
lcall
aaa
mov
enter
loope
out
testb
mov
mov
dec
sbbl
push
paddusb
popf
push
cmc
mov
lock
push
xchg
fxch
fnsave
cmp
daa
inc
inc
jmp
xor
pop
stos
mov
adc
inc
popa
xor
xchg
es
cmpsl
movsb
aam
sbb
add
lret
jo
push
add
hlt
fwait
loopne
ficomps
mov
pop
cmp
xchg
clc
jo
push
xlat
call
sub
in
pop
pop
test
test
jb
sub
repz
xor
iret
rorb
rorb
insl
les
mov
loope
jno
ret
pop
roll
push
fstps
adc
sbb
fnstenv
push
rcll
push
mov
loope
scas
movsb
lea
lock
roll
test
inc
sti
out
out
fisttpll
cmpsb
xlat
enter
adc
mov
and
cmpsl
loope
push
add
and
jnp
cmp
xchg
mov
adcb
mov
roll
mov
leave
cmp
lds
stc
sub
xchg
xchg
fwait
sti
call
xor
adc
das
cld
popa
xor
xchg
jbe
shll
jne
cmp
sarb
inc
data16
dec
dec
arpl
mov
dec
out
mov
mov
popf
popf
rcrb
xor
xchg
inc
lea
cmpsb
cmpb
dec
mov
ss
jne
iret
test
cmpl
sub
out
jnp
dec
xchg
inc
jo
aam
adc
cli
lods
rolb
fwait
lea
pop
popf
xor
cmpsl
pop
lret
movhps
ret
pop
inc
jbe
mov
es
jbe
xchg
xor
lahf
jmp
addb
not
dec
mov
jecxz
and
cmp
popw
inc
add
out
mov
ss
call
jle
mov
mov
mov
clc
mov
mov
sarb
cmp
sbb
jno
fstpl
jg,pn
cltd
push
push
adc
xor
shrb
push
xchg
scas
push
ja
outsl
lahf
int3
shlb
pop
repz
mov
ds
cltd
bound
push
bound
cmp
pop
hlt
data16
arpl
sbb
add
dec
adc
xchg
sbb
hlt
xchg
dec
test
test
hlt
mov
jp
inc
mov
movsl
sub
jl
push
jecxz
stos
movsl
sbb
jge
jae
sysenter
xchg
in
gs
pushf
int
sub
out
in
ss
push
mov
pop
jbe
xchg
mov
adc
mov
ljmp
xor
or
enter
outsl
sbb
out
sub
loope
xchg
pop
cmp
xorl
add
dec
ljmp
push
divl
push
std
call
mov
mov
out
xchg
lret
push
movntps
out
in
pop
lods
push
lret
inc
mov
out
and
mov
xor
xor
rcrb
iret
aad
and
sbb
out
xchg
mov
fs
repnz
push
lret
imul
sbb
xchg
xor
inc
sbb
adc
adc
icebp
rolb
inc
inc
adc
daa
pop
fisttpll
pop
and
mov
pop
and
loopne
cmp
mov
push
daa
push
inc
add
mov
xchg
adc
inc
inc
push
sarb
repnz
lds
mov
mov
adc
lret
and
test
sbb
add
and
cmp
testl
pop
lds
or
adcl
enter
loop
sbb
addl
push
in
jne
mov
loopne,pt
sub
fsubr
lret
cmp
dec
fwait
loop
inc
pop
mov
xchg
fmull
adc
cmp
inc
repz
mov
adc
lcall
pop
int
lods
add
add
dec
fcomi
inc
sub
stos
jg
adc
movsl
dec
xchg
pop
add
mulb
ss
lods
add
push
popa
dec
xchg
xor
jecxz
xor
sbb
jne
and
in
lock
stc
push
jle
dec
loopne
inc
and
imul
push
xor
mov
pop
mov
aad
test
std
jno
mov
jno
push
inc
shlb
pop
lret
sbb
mov
jo
rorl
inc
out
pop
ret
mov
jmp
xor
decl
in
andl
dec
repz
push
adc
cld
push
cmp
fsubl
jmp
and
scas
out
test
inc
xchg
addr16
xchg
pop
push
jns
pop
ljmp
push
mov
les
dec
rolb
xchg
xor
sub
call
shrl
pushf
fmuls
xchg
mov
jae
mov
rolb
out
adc
es
mov
ljmp
pop
shrl
cmp
shr
cmp
fldt
mov
push
jle
xchg
lds
xchg
mov
lret
push
addr16
mov
add
jp
push
sbb
adc
inc
jg
push
fnstcw
jno
pushf
fiaddl
scas
sub
mov
push
push
nop
jp
lods
xchg
jmp
add
cmp
mov
lret
cs
cltd
mov
adc
testb
ret
inc
repnz
js
dec
ret
sub
dec
dec
dec
test
dec
xchg
mov
ror
dec
add
or
pop
imul
shlb
mov
push
lcall
jb
std
push
xor
jp
xor
lds
addr16
aad
int
push
imul
rcl
lods
imul
jg
shlb
mov
xorl
loopne
add
cli
rep
jo
push
jmp
lods
inc
mov
cmp
adc
mov
adc
mov
loopne
in
cmp
dec
pop
fistpll
out
mov
or
or
sbb
sti
stos
pop
jae
stos
ja
or
pop
sti
stos
sbb
outsb
and
mov
dec
out
jl
jg
xor
inc
es
dec
pop
jmp
test
jecxz
insb
jmp
movsl
subb
xchg
mov
pop
lea
outsl
sti
loop
daa
fldl
mov
xor
and
popf
inc
mov
jne
pop
lea
mov
aaa
mov
sub
stos
je
stos
inc
lods
add
loop
ja
ds
aad
rorb
sub
in
les
sub
sbbb
xchg
mov
inc
add
stc
mov
or
sbb
inc
lods
ljmp
cmpsb
rcrl
sub
fwait
scas
sbb
xchg
sub
aas
bound
adcl
subb
xchg
pop
ljmp
adc
push
sbb
add
mov
add
leave
xchg
in
xchg
pop
jbe
aaa
jbe
pop
mov
ret
push
push
aam
fcmovu
int
arpl
mov
adc
in
and
ds
sbb
pop
rcrb
sahf
lock
push
ljmp
lods
cltd
cmp
xor
jo
insb
test
stc
sub
inc
sti
push
mov
loope
ss
ja
mov
sbb
push
lret
scas
fnstenv
or
and
push
sub
xor
in
insb
pop
adc
daa
push
inc
push
outsb
dec
ret
xor
insb
into
lret
fdivrp
jge
push
adc
xor
cmpb
scas
xchg
mov
jno
sti
pop
xchg
mov
push
xchg
cli
pop
sahf
test
ds
add
out
sub
mov
xchg
mov
into
inc
cmpsl
sub
cs
cmpb
push
adc
mov
pop
mull
data16
mov
mov
add
pop
jmp
push
or
out
inc
cmp
jle
out
push
mov
cli
popf
xchg
je
movsl
lahf
jns
call
xor
xlat
inc
ror
mov
fmull
addr16
dec
leave
rorb
mov
mov
xchg
inc
cmp
stc
cmp
fbld
gs
xchg
into
lea
mov
hlt
xor
loopne
mov
sub
jo
ja
pop
sub
mov
dec
jns
jp
in
fmulp
bsf
es
aad
loop
pop
pop
push
lcall
mov
sbb
sarl
fiadds
in
and
jmp
movsb
jle
jno
pusha
sub
push
push
ja
xchg
mov
cmpsb
pop
testl
adc
int3
inc
pop
lcall
xchg
cmp
and
dec
mov
das
adc
fimull
push
gs
test
pop
mov
test
pushf
ficoml
cld
xchg
and
adc
hlt
xor
arpl
mov
std
cld
fwait
xor
mov
aam
insl
loope
mov
aad
cmpsl
iret
cmpl
push
or
cmp
cmp
fsubrl
cwtl
pop
imul
jnp
jg
xor
cmp
mov
aad
pop
shlb
sti
call
jno
xlat
rcrl
scas
xlat
lods
ds
in
mov
mov
gs
mov
std
cltd
cld
pop
add
and
adc
push
repnz
dec
push
out
inc
jge
int3
mov
add
pop
dec
cmp
add
stos
jge
out
inc
adc
push
mov
adc
sahf
out
outsb
mov
xor
out
les
push
lcall
fsubs
cli
repz
jno
mov
popa
scas
sbb
cmpsb
clc
xchg
cli
xor
and
inc
lock
js
pop
repz
cmpsl
inc
divl
jmp
inc
mov
mov
in
std
outsb
stos
fisubrs
add
pushf
mov
addb
add
mov
or
lret
mov
lds
cmp
js
je
pop
or
repz
jge
xor
in
in
mov
pop
fst
or
sbb
popf
fcoms
cmpsl
test
clc
std
movsb
pop
lea
push
xchg
in
test
jo
lcall
or
or
sbbb
add
mov
and
jnp
adc
cmp
cmpsl
or
cmp
add
testb
pop
int
sub
xorl
negl
push
in
add
iret
jno
mov
sbb
pop
sub
adc
daa
orl
pop
div
je
es
shrb
pop
xchg
mov
les
inc
gs
lds
insb
inc
xor
add
xchg
xchg
ljmpw
mov
test
or
add
sbb
push
cmpsl
mov
lea
cmp
mov
popf
js
pop
pop
push
xchg
xor
mov
out
hlt
repnz
adcb
fcmovbe
nop
popa
xor
pop
push
mov
push
pusha
mov
mov
push
xor
cmp
sub
outsl
cwtl
fisubl
pop
add
addr16
out
lods
mov
fmuls
inc
pop
jge
loop
mov
lcall
jne,pt
pushl
pop
loopne
mov
test
jno
dec
adc
push
pop
cwtl
pop
push
cmp
clc
jmp
out
xchg
mov
lds
insb
add
sahf
out
movsl
jmp
jne
jae
add
push
xchg
inc
mov
nop
push
andb
mov
and
xor
rcll
add
xor
and
jo
pusha
inc
nop
push
andb
mov
and
xor
rcll
loope
icebp
and
jno
pusha
inc
nop
push
andl
adc
and
xor
rcll
add
xor
and
push
xchg
shlb
push
sub
mov
xlat
jbe
cltd
aas
fimuls
into
pop
push
imul
pop
pop
inc
and
sub
xchg
jmp
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
lods
ret
in
mov
mov
cltd
bound
es
or
adc
popf
shr
sbb
mov
outsb
dec
xor
andl
cmpsb
push
stos
inc
mov
mov
add
push
dec
enter
fadd
push
mov
xor
mov
xchg
call
sub
push
cmpsb
or
and
test
jns
jbe
adc
jl
cli
cmc
test
pop
sub
out
xor
xchg
push
ss
mov
jbe
adc
mov
cmpsb
test
sbb
lcall
sub
inc
or
adc
incb
jge
int
sarb
rcrl
fdivs
mov
in
aad
push
jns
dec
es
push
sub
jbe
sbb
leave
cmpsb
test
out
jae
gs
and
xor
cmp
inc
loop
out
jecxz
lds
xchg
xchg
mov
jnp
dec
sub
popa
or
sbb
xchg
loope
lret
test
mov
lret
lahf
in
mov
jno
push
sub
inc
cmp
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
xchg
mov
es
fbld
push
lret
sbb
pop
idivl
ss
xor
out
adc
xor
aas
pushf
hlt
xchg
or
rep
inc
in
mov
incl
mov
pop
jl
rcl
leave
inc
adc
cmpsb
xchg
mov
out
fisubl
inc
or
lods
xorb
sub
pop
dec
hlt
fadd
scas
jns
sbb
jbe,pn
nop
cmpsb
xor
mov
inc
dec
sub
js
sbb
out
push
sub
dec
adc
lcall
jb
test
jecxz
mov
xor
lock
xchg
pusha
and
fwait
sti
andb
je
and
lcall
adc
add
xor
sbb
pushf
nop
fucom
fldcw
int
or
insl
mov
xchg
mov
mov
sbb
or
lock
push
add
ss
stos
adc
mov
in
mov
jg
pop
int
stos
pop
pop
mov
jne
daa
aad
inc
imull
stos
add
in
xor
icebp
fs
repnz
mov
inc
movsb
cltd
loope
cmp
ja
push
mov
fdiv
nop
jmp
inc
rol
dec
outsl
pop
sti
mov
pop
adc
dec
mov
jb
mov
cmc
enter
icebp
mov
dec
push
xor
and
sub
fsubs
jle
movsb
insb
ret
push
jg
sub
pop
xor
adc
xchg
movsb
ficompl
mov
xor
pop
cld
outsl
lret
cmp
mov
or
jne
push
push
xor
inc
ss
icebp
cmpsb
mov
stos
lods
lock
and
lods
jo
lcall
adc
inc
add
sub
jne
nop
stos
push
rorl
dec
lret
push
cltd
in
lcall
mov
jne
xchg
xlat
sbb
cmc
pop
jge
xor
mov
jmp
mov
outsl
sti
push
or
xor
add
sbb
insb
mov
xchg
icebp
cltd
pusha
adc
ds
xchg
inc
outsl
add
je
cmp
and
cmp
cmp
movsb
int3
mov
jmp
xor
push
xchg
pop
jg
or
test
push
insl
es
iret
mov
shr
xor
lret
pop
adc
outsb
inc
mov
cld
outsl
xchg
dec
and
fwait
int
fstpl
jp
ljmp
daa
fsub
xchg
jp
insb
movsb
outsb
adc
xor
mov
cmpsl
push
arpl
jnp
ficomps
sbb
clc
mov
add
push
adc
lods
jne
and
jb
fiaddl
or
push
std
dec
vpsrad
rcrl
fs
rorl
in
and
repz
dec
mov
test
stc
mov
aad
xor
enter
pop
pop
lds
loope
je
mov
xchg
nop
jo
xlat
jle
lcall
push
cltd
and
and
shlb
adc
inc
sbb
dec
shlb
adc
push
jne
jecxz
push
ss
mov
xchg
mov
adc
dec
cmpsb
repz
popf
sub
insb
sub
cmp
mov
roll
icebp
cli
fidivs
mov
lea
jl
cltd
jo
jp
lds
cmp
xor
testl
xchg
mov
sub
repz
mov
mov
cmc
vmwrite
push
ljmp
mov
add
call
sbb
mov
ret
xchg
hlt
or
mov
fsubrl
jge
mov
lods
jle
adc
sbbl
add
pushf
scas
pop
sbb
push
jmp
incl
mov
push
ljmp
ss
js
cmp
mov
xchg
pop
adc
mov
arpl
out
aad
push
jle
fucomi
iret
ret
xor
xor
dec
pushl
imul
arpl
call
decl
push
add
sub
pop
push
and
xor
sbb
stos
adc
ficoms
xchg
sahf
mov
daa
xor
nop
fidivs
ss
out
sub
pop
sub
add
movsl
sbb
xchg
das
lea
mov
shlb
loop
add
push
out
shll
add
cmp
rcrb
pop
cmpsb
out
pop
lock
inc
push
pop
pop
cmp
das
dec
aaa
out
test
push
lock
popa
dec
imul
mov
sbb
mov
mov
bound
inc
cmp
push
leave
scas
aas
adc
clc
dec
pushl
js
mov
shll
lahf
ljmp
mov
jae
dec
loopne
add
mov
ljmp
flds
and
dec
sbb
dec
xchg
stos
jmp
pop
xorb
in
sbb
jae
test
cmp
inc
cmp
aas
push
jmp
mov
shrb
pop
lcall
frstor
ljmp
mov
pop
idivb
add
scas
sbb
add
pop
xor
sub
lahf
dec
inc
test
popa
mov
cmpsb
sti
and
pop
pop
lret
fs
ds
jne
test
cmp
cmpsb
jecxz
push
repz
pushf
xor
lret
dec
cli
inc
stc
push
repz
jb
lret
fisttpl
push
mov
pop
jmp
out
sahf
mov
mov
lcall
rorb
pop
xchg
fisttps
pushf
stos
icebp
je
add
push
fimull
and
mov
negl
xor
stos
inc
arpl
adc
aaa
fwait
jge
adc
mov
lods
push
pop
sub
pop
lahf
push
int
enter
jle
add
stos
cld
mov
cmc
stos
es
sub
or
fdivl
mov
ss
lret
push
and
out
xor
add
push
dec
xor
mov
outsl
add
cmp
jo
sbb
subl
imul
adc
test
mov
cmp
es
sbb
jnp
je
or
jecxz
xor
fsubs
mov
addr16
inc
adc
jecxz
test
and
insb
outsb
mov
dec
sub
adc
cli
xor
xchg
xchg
adcb
cmc
ss
scas
test
hlt
xor
lcall
jg
push
push
mov
out
and
jmp
pop
adc
dec
clc
push
fldt
push
ret
sub
push
movsb
cmp
inc
dec
jns
outsl
popa
fsub
outsb
adcb
mov
mov
lcall
mov
lock
cwtl
push
inc
ja
and
lcall
xchg
jmp
mov
jno
aaa
shl
lcall
int3
mov
jno
test
fisubrs
and
mov
mov
je
fmuls
xchg
and
loope
xor
sub
jmp
lods
push
lock
pushf
ss
repz
mov
add
icebp
mov
mov
aam
rorl
inc
js
jne
mov
daa
jecxz
fcmovne
lea
xchg
mov
nop
pop
je
into
gs
fdivl
xchg
fsubl
aam
addb
push
in
adcb
rcll
lahf
jbe
inc
push
push
jecxz
test
rcll
mov
ror
xchg
pushf
aaa
popf
push
and
addr16
adc
mov
test
add
pusha
outsb
push
xchg
mov
das
cli
jbe
in
lea
and
lahf
enter
push
cmp
or
push
imulb
pop
mov
mov
stos
leave
cltd
mov
add
mov
mov
xor
mov
inc
test
mov
push
adc
push
jnp
and
aam
fisttps
rcrl
mov
jecxz
ja
pop
stc
cmpb
es
jmp
jb
lea
out
pusha
nop
xchg
cmpsl
xor
push
mov
mov
push
sub
popa
fisubrs
xchg
xor
js
mov
sarb
addr16
jp
ret
rcll
shlb
mov
cmp
stos
push
scas
negl
js
sub
mov
jle
push
mov
mov
popf
pop
stc
adc
arpl
push
sub
in
ja
int
or
sbb
imul
push
xchg
cwtl
lds
sbb
cmp
ja
xchg
push
loope
jp
jg
lods
mov
and
ja
outsb
in
das
dec
mov
adc
movsb
loop,pn
push
dec
cli
mov
or
or
pop
xchg
jmp
push
push
outsb
mov
int
sbb
mov
stos
mov
aaa
inc
add
mov
imul
and
dec
jbe
mov
ret
fstl
popf
xchg
pop
sub
push
aad
mov
in
jecxz
jge
add
dec
jecxz
sahf
lea
into
push
sahf
or
mov
int3
je
mov
add
lock
inc
mov
fsubl
inc
repz
inc
jge
pop
into
adc
aad
sub
mov
ja
dec
loop
push
push
in
inc
cmp
stc
dec
jecxz
mov
mov
mov
aad
or
call
jns
mov
mov
sub
xorb
push
into
lcall
popa
xor
test
add
mov
movsb
shl
test
insl
rcrl
or
jns
test
add
and
xor
and
sbb
stc
fwait
stc
xchg
inc
cmp
cmc
pop
mov
pop
add
mov
imul
or
cmpsb
add
aaa
dec
nop
dec
je
adc
in
inc
sub
hlt
xchg
dec
push
push
xor
dec
or
jnp
sbb
pop
sarl
std
mov
out
push
roll
mov
lcall
adc
sub
sub
scas
es
ror
iret
cmpsb
xchg
sub
push
jl
cld
fbld
in
lods
pop
jns
imul
or
push
sahf
in
in
inc
lock
roll
add
lods
xchg
ss
adc
imul
push
clc
pop
jg
adc
inc
out
jbe
negl
jecxz
mov
rcr
bound
jecxz
sbb
test
loopne
in
inc
stos
inc
insb
push
stc
sahf
add
mov
lahf
mov
push
jle
mov
mov
enter
or
cmp
imul
xor
jns
xor
stos
leave
sub
out
add
sub
sub
add
mov
shll
dec
xor
mov
mov
mov
or
or
es
pavgw
shl
jb
sub
adcl
enter
in
or
mov
push
stos
jo
inc
inc
dec
rcrl
jo
mov
mov
cmp
push
cwtl
mov
add
mov
mov
mov
int
mov
faddl
aaa
cltd
loop
das
notb
jae
dec
mov
push
lcall
inc
add
aas
sbb
lods
std
out
outsb
test
mov
mov
xchg
add
leave
add
mov
cli
mov
insb
mov
imul
addr16
xchg
mov
pop
xchg
pop
xchg
xor
test
jnp
test
pop
cmp
mov
nop
aad
pop
push
outsb
push
rolb
aad
arpl
es
fildl
cmp
hlt
and
and
jne
int
fs
sahf
jb
add
int
push
xchg
imul
paddsw
lret
mov
into
ret
mov
add
push
test
jmp
call
and
add
xor
jmp
ljmp
test
ja
fsubrl
movsb
stos
stos
jecxz
mov
je
lret
aam
cmp
das
add
cwtl
ret
sub
test
bound
js
mov
mov
sub
cmp
jg
cwtl
imul
insb
pop
lret
push
fisubs
insb
ret
push
imul
pop
mov
mov
fdivrl
mov
ret
ret
adc
daa
out
pop
dec
cmp
loopne
movl
dec
push
jne
add
mov
xchg
mov
daa
pop
xchg
into
xor
xchg
push
mov
fildl
outsb
push
xchg
xchg
sbb
outsl
mov
jno
add
xorl
cmp
sub
enter
mov
sbb
cmp
add
test
ret
cmp
daa
inc
leave
adc
cwtl
in
fisubl
dec
and
aaa
and
inc
mov
cmp
mov
int3
mov
push
insl
jae
aad
test
jns
xor
cmp
adc
sub
mov
and
test
pop
cltd
testl
inc
repnz
xlat
mov
or
cmpsb
sub
mov
aam
movsl
pusha
push
out
js
into
dec
int3
mull
test
xchg
xchg
dec
jbe
jl
rolb
sbb
ret
decl
ss
adc
push
cmp
xlat
into
loope
fcompl
jmp
lahf
sbb
push
daa
sbbl
int3
jnp
jnp
les
mov
dec
pop
in
dec
repz
adc
rorb
dec
insl
stos
lahf
loopne
inc
push
js
shll
lods
mov
cld
mov
xor
cmp
xchg
add
xor
rcrl
stc
mov
inc
call
movups
cmp
lret
push
sub
in
enter
cmp
jge
movsl
pushf
sahf
pop
lcall
jno
adc
sbb
pop
pop
pop
ss
cmpsb
and
and
testb
mov
nop
push
scas
push
sub
pusha
stc
lret
mov
inc
xor
xchg
fidivs
or
and
pop
lcall
icebp
push
push
dec
addr16
scas
aas
jp
pop
sub
inc
fldl
push
lock
cmp
test
aad
mov
pushf
mov
fs
jne
outsb
test
jo
cmp
fstpl
sbb
fldl
in
loopne
les
test
mov
addr16
and
frstor
mov
jo
dec
adc
push
lret
mov
xchg
mov
xor
lcall
add
cmc
loop
into
stos
pop
xor
mov
sbb
xor
add
xlat
xchg
pop
sarb
imul
xchg
and
bound
into
jmp
arpl
cmp
and
push
jb
scas
inc
imul
mov
jg
push
dec
jp
xchg
jno
movsb
in
xchg
popa
jae
test
ret
sbb
ja
mov
mov
sti
push
jl
push
imul
sbb
test
ja
ja
or
dec
dec
xor
add
push
lods
mov
aad
mov
test
dec
call
arpl
xor
lcall
pop
xchg
jle
inc
sbb
shl
scas
sbb
mov
jmp
sahf
stos
into
rorb
dec
ljmp
add
dec
mov
or
xor
lret
movsb
in
stos
es
test
push
je,pn
inc
sbb
pop
shl
inc
daa
int3
icebp
xchg
scas
testl
mov
mov
into
pop
sbb
or
outsb
sub
add
and
lret
jns
repnz
sub
pop
mov
or
nop
mov
pop
or
pop
sbb
sbb
fs
ja
dec
cmp
xor
ret
les
dec
fwait
dec
mov
aad
out
xor
lret
test
mov
and
aad
add
dec
popl
call
pcmpgtw
and
out
roll
js
push
jae
rorb
icebp
test
loopne
adcl
lret
adcb
jmp
sbb
in
addr16
or
jb
cmc
dec
lods
and
loop
cmp
leave
faddl
push
bound
adc
mov
push
xor
inc
scas
xor
and
popa
ror
lods
add
in
add
jecxz
fstps
aad
test
jl
xchg
mov
scas
sub
jbe
test
xor
jl
loope
outsl
push
and
jge
dec
ret
mov
mov
imul
push
sub
sbb
insb
ret
enter
pop
and
repnz
mov
decb
arpl
je
jbe
icebp
mov
xchg
mov
scas
insb
adc
dec
aaa
add
sub
pop
movsl
mov
call
jno
aaa
adc
lock
jns
add
imul
cmp
sbb
jno
pop
xchg
mov
add
fsubl
mov
mov
mov
orb
jp,pt
inc
cmp
stos
add
pusha
stos
in
aaa
adc
inc
sbb
xchg
repnz
push
jle
push
cmp
and
es
ds
rorb
cs
and
sub
sbb
aam
js
leave
pusha
mov
imul
pop
mov
pop
sbb
ljmp
clc
cmovns
mov
fiaddl
lret
adc
and
pop
clc
fisttpl
adc
fisttpll
loope
pop
aaa
insl
nop
jp
loope
cmpsb
mov
mov
popa
lea
inc
dec
pop
dec
dec
outsl
mov
rolb
push
jne
sub
mov
int3
lea
out
int
rol
mov
out
add
add
mov
push
loop
push
fidivl
repz
fwait
adc
sbb
test
ljmp
jae
inc
push
inc
adc
scas
into
mov
imul
sbb
pop
add
cmp
push
aaa
imul
mov
lock
pop
pop
push
inc
dec
je
mov
inc
add
sub
js
loopne
sub
jne
mov
cltd
pop
cmp
add
or
adc
dec
rorb
test
std
lret
jae
pop
sbb
out
loop
or
cmp
ret
call
push
or
and
lods
or
jmp
scas
rcrb
pop
es
in
sahf
andb
pop
les
inc
inc
scas
sub
pop
test
jmp
cmp
orl
bound
pop
adc
in
cmp
fnstcw
xor
sub
rol
outsb
mov
imul
lods
clc
dec
mov
ss
sbb
in
dec
push
xchg
gs
mov
sbb
cs
je
dec
outsl
test
cmp
sbb
mov
iret
inc
dec
fildll
das
je
subb
sti
lea
hlt
pop
xor
push
aam
pop
outsl
bound
push
testl
aad
pop
dec
push
nop
stc
outsl
pop
andb
jbe
dec
lock
and
cmpsl
adc
add
lods
pop
popf
and
icebp
clc
test
dec
sbb
cmp
adc
sub
xlat
and
dec
ret
mov
xchg
sar
enter
and
sbb
aam
xchg
icebp
daa
imul
cmp
jo
mov
lock
mov
into
and
scas
fiaddl
js
aaa
mov
sbb
pop
mov
popa
scas
out
add
hlt
dec
in
add
imul
test
pop
mov
loope
repz
sub
mov
push
mov
inc
ljmp
xor
add
dec
xchg
push
push
mulb
mov
pop
movsl
sbb
sub
fldcw
jg
fisttpll
adc
sub
fwait
sahf
addb
in
enter
push
imul
aam
into
and
fisubrl
pop
cmpsl
lds
ds
aaa
push
ja
std
xor
pusha
movsl
or
call
addb
data16
mov
daa
inc
stc
movsl
daa
jecxz
pop
shr
mov
hlt
fisubrl
adc
adc
outsb
adc
add
cmp
jnp
push
xchg
cwtl
jg
out
leave
mov
lret
je
nop
inc
dec
loop
dec
dec
push
push
xor
sbb
enter
fidivrs
add
imulb
sbb
dec
stos
dec
push
pop
cmp
fwait
call
xchg
sti
mov
stos
xchg
rcr
mov
sbb
mov
pushf
arpl
and
lcall
push
xor
xchg
jmp
cmp
lret
inc
jo
xchg
popa
mov
mov
xlat
adc
mov
push
fimuls
and
xchg
and
sbb
ds
call
dec
or
cmp
adc
mov
or
cbtw
add
or
jb
push
pop
cmc
xor
push
daa
test
and
push
pop
xchg
xchg
mov
adc
testl
iret
xor
lds
and
push
add
mov
ljmp
jns
mull
xchg
fcoms
xorb
shll
xchg
cmpb
daa
lahf
cmpsb
cmc
stc
fnstenv
pop
shlb
push
ret
nop
mov
mov
test
jb
jg
movsb
in
xchg
add
stos
fdivrs
dec
es
push
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
leave
cmpsb
test
out
push
imul
pop
push
sub
jbe
sbb
leave
cmpsl
test
out
push
imul
pop
push
sub
testb
sbb
jns
sbb
cmpsb
scas
mov
jbe
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
hlt
mov
mov
out
lret
imul
adc
cmp
ds
push
jp
mov
mov
into
ljmp
push
fdivrl
outsb
fs
dec
push
jp
sub
pop
xchg
xor
xchg
loopne
enter
cmp
push
inc
sbb
cmp
sbb
push
fmulp
mov
lds
and
imul
in
push
adcb
push
xor
fimuls
push
ds
shl
aad
push
pop
sub
and
mov
dec
mov
sbb
mov
pop
sub
les
mov
scas
lcall
jmp
es
ja
push
cli
push
aad
cmp
pop
sub
push
dec
pop
inc
xlat
push
ljmp
sub
push
es
dec
sbb
push
lret
jg
ret
cmp
gs
push
test
cs
icebp
cld
pop
push
scas
and
scas
xchg
outsb
push
mov
mov
into
ljmp
push
sub
push
jbe
data16
jb
dec
fisttpll
cli
mov
mov
lahf
mov
pop
dec
ds
jo
add
cmp
scas
int3
mov
lcall
leave
sub
outsl
dec
js
or
add
pop
or
stc
mov
sahf
xchg
xchg
fcmove
ljmp
push
sub
cmp
jle
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
jle
dec
push
jp
mov
xlat
xlat
notb
rcl
jno
xchg
add
pusha
lock
into
loope
xor
lahf
and
loope
clc
int
jo
in
adc
shl
inc
push
clc
mov
push
sub
jno
popf
cmpl
lret
xchg
add
and
add
test
inc
imul
into
jns
sub
xor
mov
pushf
icebp
fsubs
repnz
loop
addr16
add
js
push
adc
sbb
push
adc
pop
pop
jge
jnp
fwait
dec
imul
das
sbb
mov
rclb
add
xchg
cmpsb
adc
lods
stos
popf
insl
out
xor
scas
jl
pop
cmp
adc
pusha
lock
aaa
dec
ret
enter
pop
in
pop
xor
or
mov
xlat
or
mov
out
and
jo
mov
fs
shlb
mov
sbb
movl
test
gs
mov
das
bound
idivb
cmp
mov
sbb
or
lret
ljmp
stos
jge
insl
mov
push
push
add
xchg
into
test
sub
push
sub
rcll
jecxz
loopne
mov
inc
jae
add
movsb
ss
or
inc
ds
iret
mov
mov
and
mov
add
dec
scas
lds
add
int3
push
mov
sub
call
cmc
nop
cmp
aas
jle
iret
fs
push
gs
push
add
or
cmp
pop
daa
gs
lds
or
je
jl
pop
mov
cmp
shr
enter
arpl
outsb
dec
pop
daa
fimull
repnz
sub
das
fdivrl
xchg
inc
inc
or
sti
fsubrp
inc
mov
and
cld
mov
push
pop
sub
repnz
cltd
sbb
xor
sbb
cmp
mov
dec
orb
push
sarb
mov
sbb
pop
cmp
cmp
cmp
mov
roll
xchg
add
xchg
mov
add
sub
movsl
jo
dec
shll
mov
jbe
out
push
xchg
je
sub
cs
mov
sbb
pop
inc
add
mov
movsl
leave
hlt
mov
fwait
rcll
push
lods
lret
sub
and
jne
xor
les
adc
mov
nop
inc
xchg
mov
inc
sbb
xchg
cmpsl
xchg
fadd
fcmovbe
mov
stos
in
xchg
mov
lods
pop
jmp
mov
clc
or
test
sub
movsl
int
stos
jnp
fwait
inc
push
test
pushf
aas
mov
push
movsb
test
mov
cld
repnz
mov
mov
out
mov
movb
xor
aad
les
mov
mov
adc
clc
push
aaa
ss
sti
mov
fwait
or
add
mov
and
fistpll
daa
stos
daa
push
mov
mov
std
and
cmp
push
push
iret
cmc
in
pushf
outsl
scas
jecxz
adc
arpl
push
xchg
xchg
fs
ja
jmp
jle
bound
lcall
jle
fbstp
fisttpll
xchg
add
cmpsb
dec
fs
clc
sbb
aam
jne
xchg
dec
aam
test
mov
push
aad
push
fsubrs
addr16
push
sub
mov
cs
xor
mov
out
test
ja
addr16
pop
sbb
or
push
test
jnp
ret
aas
xchg
push
xchg
xlat
push
loopne
ret
nop
repnz
inc
clc
xchg
fwait
punpckhdq
push
push
or
add
lods
call
xor
out
dec
aad
or
loop
and
push
and
pop
lock
pusha
lea
and
push
cmp
xchg
and
in
mov
sub
inc
loope
loopne
dec
push
cmp
or
out
push
cmp
enter
mov
jle
out
and
ret
lret
ljmp
lret
test
js
sar
call
mov
repz
sbb
out
das
push
sub
sbb
push
je
cltd
push
ja
pop
add
test
cmp
cmp
sbb
das
or
ret
cmp
or
in
mov
cwtl
mov
clc
xor
decl
sub
mov
push
dec
pop
pop
push
and
inc
test
add
push
mov
inc
loop
mov
push
inc
leave
cli
sahf
xchg
mov
mov
js
ret
jl
ds
incl
lods
imul
pop
dec
adc
push
xor
mov
aaa
cmp
sub
int
adc
add
and
mov
daa
in
add
gs
sahf
jno
xor
je
int3
pusha
dec
mov
lds
mov
hlt
vpunpckhqdq
xchg
cmp
arpl
xchg
push
sbb
sub
cli
movsb
push
dec
xchg
ret
sbb
mov
test
aas
fsubrs
out
loop
popf
int
adc
inc
lock
jl
mov
sbb
jmp
daa
push
out
nop
or
bound
inc
loop
push
adc
sbb
addb
mov
popl
inc
mov
cmpsl
into
insl
fld
xchg
lret
test
fldcw
add
or
push
adc
fstp
lret
int3
fsubr
ret
jmp
xchg
dec
inc
and
xor
fstpt
rep
mov
outsl
rcrb
mov
inc
iret
aad
fmul
adc
cmp
dec
add
lretw
jae
jb
jmp
aam
loop
and
nop
or
out
push
push
jne
mov
popa
push
add
add
or
and
aam
scas
xchg
ds
push
fwait
cmp
adc
lds
test
imul
setnp
or
jno
aaa
add
jb
mov
inc
daa
inc
and
inc
dec
popf
idiv
call
ljmp
into
xchg
sbb
sub
js
sbb
into
jl
jns
ret
lock
lcall
xchg
mov
xor
jno
dec
imul
in
es
and
insl
mov
and
cmp
mov
jo
out
out
pop
sub
pop
inc
outsl
movsl
adc
cmpsb
gs
and
sub
inc
loop
loope
or
int
and
xor
scas
fwait
in
dec
sti
loop
xchg
cwtl
sbb
and
rclb
mov
shl
push
mov
pushl
test
subb
jno
mov
mov
mov
push
xchg
mov
lock
out
jecxz
lods
imul
es
jno
pushf
daa
in
pop
mov
push
mov
test
out
inc
lods
pop
cmpsb
push
addb
adc
test
sub
mov
sub
rcrb
gs
push
shrl
lock
fldl2t
sti
mov
inc
dec
loope
test
fwait
pop
jae
lods
push
inc
lds
lcall
rcrb
pop
xchg
iret
bound
icebp
popa
sub
ret
shlb
mov
addr16
stos
or
call
pop
cmpsl
adc
mov
mov
sbb
jno
add
jmp
mov
das
cld
clc
cmpsb
pop
inc
ret
mov
push
cmp
cmp
pop
mov
dec
dec
cwtl
notl
nop
dec
aaa
add
dec
and
mov
popf
push
jl
in
mov
in
xor
lock
loop
popf
std
stos
sub
cmp
mov
dec
mov
aad
cmp
adc
fisttpll
in
jecxz
dec
lock
outsl
dec
jp
pop
mov
lret
clc
dec
pop
fistl
push
imul
lcall
int3
fsubl
cwtl
and
xor
das
arpl
mov
idivb
dec
dec
icebp
xor
and
roll
push
pop
movsl
insb
xchg
xchg
pop
repz
jb
mov
je
push
lds
adc
cltd
cli
jns
rcr
lds
rorl
and
cli
dec
pop
pop
jecxz
addl
jo
pop
push
pop
or
or
mov
in
cmpsl
adc
iret
jge
pusha
aas
and
mov
sbbl
adc
in
enter
rorb
lock
into
sbb
or
sub
mov
mov
mov
push
inc
fwait
iret
dec
daa
jb
fwait
inc
and
push
or
mov
sarb
mov
xchg
mov
push
jnp
xchg
mov
inc
cltd
sti
adcb
and
mov
outsl
push
cs
mov
mov
int
and
es
sub
mov
push
pop
jbe
sahf
sub
push
out
xchg
aad
popf
rorb
popa
xchg
or
mov
test
and
add
jne
fdiv
dec
jge
xchg
daa
incl
and
mov
inc
and
dec
mov
out
dec
test
cltd
addb
mov
stos
data16
mov
aam
jns
inc
adc
aad
sarl
repz
pop
jb
es
das
lods
jecxz
mov
std
les
divb
loope
dec
add
dec
dec
inc
cli
push
sub
pushf
fxch
loope
mov
adc
fdiv
push
mov
repnz
push
adc
pop
lahf
pop
push
push
jl
and
into
sbb
mov
fisttps
pop
or
or
mov
stc
pop
loop
mov
loope
push
je
call
dec
cld
inc
cmc
dec
jg
xor
lahf
inc
mov
or
jo
xchg
imul
cmp
adc
cmc
inc
dec
jmp
mov
stc
inc
pop
adc
xchg
std
int
roll
mov
jecxz
lret
cmpsl
out
pop
sti
xor
jge
lock
clc
fcmovnbe
mov
orb
cs
xchg
jb
fimuls
and
mov
and
pop
cmp
inc
dec
lahf
jp
jecxz
ja
insb
mov
lret
shlb
mov
xchg
inc
and
mov
push
mov
adc
test
jbe
push
repnz
adc
jecxz
inc
xchg
test
push
das
das
sarb
fildll
subb
andb
push
lret
rorl
popl
mov
xlat
dec
addr16
and
dec
jo
mov
scas
icebp
pop
and
mov
cwtl
mov
stc
fistpll
jo
xchg
insl
jns
fcoms
mov
or
adc
inc
or
insl
fsts
scas
and
int3
test
ret
call
or
mov
adc
sub
repnz
js
mov
cltd
cmp
insl
jg
adc
mov
out
xchg
sub
cmpsl
sub
popa
jo
fisubrl
adc
stos
je
mov
adc
fsts
add
mov
inc
inc
scas
inc
xorl
insb
int3
out
fidivrl
jns
lods
pop
shlb
pushl
jge
dec
jecxz
mov
dec
jns
jle
out
push
fsubs
add
mov
aad
clc
dec
neg
inc
cs
add
cltd
mov
dec
cltd
mov
mov
into
push
xchg
daa
sbb
push
adc
add
sbb
mov
pop
pop
scas
xchg
add
cmpsb
cmp
ret
push
mov
aam
negl
cmpsl
ds
lea
and
mov
movsl
int
setnp
jmp
jge
in
fs
out
pop
cmp
xchg
in
test
dec
pop
or
xchg
outsl
mov
jp
shrl
push
fwait
xor
mov
in
mov
mov
js
xor
out
xchg
pushl
in
or
sub
iret
sub
pop
or
mov
mov
adc
jl
loope
jno
es
inc
jb
inc
xchg
sbb
mulb
jge
fnstsw
lods
mov
gs
xchg
or
int
addr16
es
mov
in
test
sbb
ret
dec
dec
aam
insb
aad
lods
jnp
cwtl
jle
jo
xchg
mov
mov
xor
fisubs
repnz
pushf
dec
sbb
add
idivl
xchg
lods
mov
adc
out
pop
das
rcll
push
ja
aaa
inc
add
fwait
jle
and
cmp
xor
cmpsb
inc
or
dec
rcrb
xchg
push
jns
in
test
cmpsl
pop
ffree
fdivr
pop
neg
leave
out
mov
pop
outsb
sub
push
faddl
shrb
fcompl
enter
adc
ret
aaa
push
push
jbe
sbb
xchg
and
xchg
cmp
jbe
pop
cld
push
fs
gs
sbb
cs
mov
ret
repz
and
mov
std
pop
ljmp
outsl
lods
add
jecxz
jbe
daa
es
inc
mov
mov
into
mov
dec
scas
push
gs
xor
dec
fadds
fstpt
fwait
mov
fsubs
inc
leave
int
mov
shrb
xchg
ret
jno
pop
or
and
mov
sbb
mov
mov
mov
push
into
adc
dec
js
es
pop
sbb
in
jmp
adc
xorb
jbe
xchg
lcall
ss
and
sbbb
xchg
dec
stos
xor
add
into
loopne
xchg
das
call
sarb
filds
cmp
imul
sbb
sub
adc
mov
sub
bound
flds
imul
loope
icebp
jmp
sbb
inc
test
loop
gs
xchg
inc
and
stos
mov
pop
jge
ja
lock
call
jno
inc
mov
jle
push
fnsave
jg
aas
jl
jnp
ss
mov
jo
pushf
int
add
jl
jecxz
xorb
or
and
mov
jle
in
stos
sbb
dec
repz
sbb
enter
push
and
pop
popf
mov
xchg
cmp
fcoms
rol
or
fsubr
jae
fwait
xor
jl
cmp
test
dec
stos
mov
in
push
popf
stc
sub
sahf
jp
inc
xor
mov
in
xchg
sub
push
out
mov
push
mov
jns
add
adc
push
xchg
cli
cmp
sahf
pop
cld
mov
mov
loop
push
mov
xchg
push
sub
incl
test
iret
push
bound
xchg
nopl
xchg
in
in
fs
gs
sub
add
mov
and
loop
add
sbb
dec
xchg
je
pop
ror
inc
scas
jbe
or
test
loop
mov
leave
aam
mov
xor
mov
jae
add
subb
call
in
lahf
mov
or
in
add
sub
mov
sarb
and
xor
sub
xchg
and
lods
adc
jmp
mov
ret
mov
mov
enter
scas
fidivl
pop
rcr
lock
jl
sub
dec
daa
into
jmp
sbb
dec
fcoml
jl
inc
lret
push
mov
aaa
xlat
popf
sbb
or
subl
and
adcb
push
push
mov
cli
and
mov
imul
in
and
sbb
inc
jbe
mov
cmpsl
inc
insl
lret
sbb
mov
mov
inc
inc
cltd
data16
lret
xchg
pop
mulb
inc
and
xor
inc
das
push
loope
mov
loope
sahf
pop
outsl
lret
adc
jl
imul
cmc
push
inc
push
cmp
inc
loope
imul
fldcw
pop
js
pop
xchg
xor
mov
jno
add
cwtl
lods
ljmp
ja
mov
repnz
repnz
push
popf
aas
into
xor
mov
ljmp
mov
ficompl
es
xlat
mov
jmp
mov
into
cli
jo
cmp
popa
dec
int
js
test
aam
push
add
xlat
lret
cs
cmpsl
in
mov
je
sub
xchg
push
sbb
imul
xchg
or
movsb
dec
cvtps2pi
xor
cmc
fistpll
sub
jp
mov
gs
test
dec
jmp
into
xor
inc
lds
ds
mov
daa
leave
lock
dec
or
dec
adc
iret
pusha
mov
mov
ljmp
jle
push
sti
aaa
inc
xchg
mov
in
mov
sub
out
and
pop
mov
cmp
xlat
lahf
pop
or
inc
and
pop
subb
cwtl
test
ffree
ds
pop
and
xchg
stos
repnz
and
out
scas
out
leave
jnp
xor
shl
mov
leave
mov
ds
mov
sub
test
add
dec
out
rorb
insb
sbb
jnp
adc
sub
and
cltd
jno
hlt
loopne
les
add
out
mov
mov
loop
daa
out
insl
push
repnz
jnp
xchg
xchg
cmp
mov
test
mov
xchg
push
xor
cmpl
pop
std
pop
es
adc
test
push
adc
mov
icebp
shrb
sbb
adc
adc
adc
repnz
sbb
int3
enter
jecxz
jge
dec
imul
and
push
adc
mov
icebp
and
push
enter
adc
outsl
and
in
bound
mov
xlat
daa
jecxz
cmp
mov
mov
cmp
pop
adc
add
push
cli
movsl
mov
lea
mov
enter
mov
xor
pop
ss
fcom
pop
adc
dec
fwait
add
mov
mov
or
out
lea
adc
mov
in
lret
pop
mov
push
sti
pop
scas
rorl
pop
call
arpl
sbb
mov
rcr
cwtl
mov
inc
loopne
imul
push
clc
out
test
shlb
int
jb
leave
out
dec
mov
loope
xor
test
or
scas
stc
dec
adc
xchg
push
loopne
push
adc
and
add
add
aas
mov
cmpsb
cmp
inc
fwait
sub
add
icebp
pusha
rcrb
sub
jg
adc
nop
lret
test
jne
inc
sub
and
push
cld
stc
mov
xchg
movsl
cmp
faddl
add
test
pop
add
and
jb
daa
adc
jbe
jp
sbb
sbb
ss
rol
cld
rcr
outsl
mov
xchg
push
lds
inc
aas
jne
test
sub
fs
mov
fiadds
mov
mov
inc
jmp
sub
fcmove
or
out
mov
jne
cmp
mov
sahf
dec
leave
jb
jns
sub
xchg
sub
ffree
div
popf
leave
jbe
xlat
push
mov
lods
sub
mov
aas
jle
sub
or
pop
fwait
rol
cld
xor
mov
push
enter
loop
xchg
adc
mov
cmpsl
inc
jae
and
xchg
xchg
add
xor
ds
rol
sbb
add
lcall
outsb
add
sub
das
arpl
fs
mov
movsl
xorl
push
cmp
pushf
sub
hlt
aam
mov
std
ljmp
pushf
mov
out
cmp
mov
repz
cmpsb
aam
mov
in
rclb
adc
mov
pusha
sti
xchg
stos
iret
int
mov
bound
sbb
jecxz
mov
sbb
xor
mov
push
fcmovbe
sti
push
jnp
push
ss
std
or
in
dec
cli
sub
adc
dec
enter
cmc
cs
push
fucom
les
scas
cmp
std
stos
lds
int
push
jp
fcmove
sub
push
mov
nop
int
pop
rcrb
call
mov
shr
fucomip
dec
jae
cmpsl
and
push
pop
repnz
pop
mov
icebp
adc
fsts
mov
call
fsubrs
mov
mov
fiaddl
sub
nop
ja
out
ss
xchg
xor
add
rcrb
icebp
mov
ret
mov
inc
dec
jg
add
cmp
add
in
add
push
into
int
or
daa
and
xlat
enter
lods
insl
xchg
mov
into
clc
or
push
mov
inc
out
jmp
sbb
lahf
dec
pop
xchg
ror
in
mov
sti
mov
jp
adc
pop
mov
inc
ret
and
movsb
enter
dec
sbb
out
fcomps
dec
pop
dec
and
mov
xchg
xchg
imul
fsub
jle
or
scas
sbb
adc
out
cmpsb
add
push
mov
cltd
rclb
scas
mov
sbb
es
repz
icebp
pop
insl
add
lock
inc
std
pusha
lret
mov
hlt
jo
repz
insl
inc
push
test
sbb
push
pop
mov
adc
jmp
pop
outsl
mov
nop
lret
mov
mov
jle
pop
jle
sti
sub
daa
cmp
push
ljmp
hlt
mov
mov
sub
mov
movsl
test
sub
sti
arpl
test
xor
pop
push
jbe
stc
xor
pusha
aam
cld
out
mulb
mov
push
sbb
movsl
add
or
pusha
cld
cli
and
pop
or
pop
je
fisubs
cld
pop
lds
imul
outsl
enter
sbb
rorb
add
frstor
add
fcmove
ljmp
push
sub
cmp
jle
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
jle
dec
push
jp
mov
mov
into
out
fdivrp
or
push
or
push
xor
jp
dec
arpl
lcall
cli
out
lret
dec
push
cmp
cmc
shll
xor
and
aam
cmp
insl
fwait
sbb
lsl
stos
sub
fwait
popf
jmp
stc
mov
sub
adc
insl
sbb
dec
sub
fwait
pushf
mov
fldl
frstpm(287
mov
mov
add
inc
and
out
fcoms
mov
icebp
sub
push
jge
add
sbb
out
push
sbbl
pusha
fcmovnu
pop
lea
mov
sub
push
call
xchg
mov
mov
sarl
mov
sub
or
jnp
aam
dec
inc
xor
es
call
lret
enter
xchg
lret
sub
andl
fcoml
jns
adc
ljmp
mov
pop
lock
loope
test
mov
cmpsb
pop
std
clc
dec
stos
std
dec
test
fdivrs
mov
xchg
and
sub
clc
ret
cmpsl
out
stos
leave
shll
adcl
fiadds
sub
lret
jge
insl
adc
imul
xchg
mov
sbb
fst
aad
xchg
lret
lods
mov
jns
cmp
dec
adc
adc
and
cwtl
decl
aam
enter
sub
push
je,pt
push
aaa
mov
out
xchg
cld
in
loop
aam
in
mov
jge
jl
pop
js,pt
prefetch
dec
sub
mov
popf
jmp
sti
mov
sub
jge
insl
sbb
dec
sub
mov
popf
jmp
sti
mov
sub
in
mov
repnz
push
adc
rcrl
mov
fs
or
inc
jge
enter
jge
inc
mov
imul
xchg
cmp
add
scas
movsl
or
xchg
lods
xchg
dec
add
inc
push
adc
cmp
cmp
cmp
and
push
rcrl
js
mov
pop
hlt
ret
sbb
aas
roll
jle
jle
lock
popa
fdivrp
mov
adc
jecxz
add
rcr
pop
sub
add
scas
and
xchg
call
clc
or
adc
xchg
push
decl
lret
aas
stos
add
into
insb
and
push
xor
decl
inc
cmp
divl
xlat
daa
cli
cmp
pop
out
add
push
ja
out
pop
call
loopne
sbb
jo
sbb
sub
inc
lcall
bound
repnz
cmp
std
add
fs
je
ret
jp
sti
arpl
xchg
lret
xchg
cmp
test
nop
stos
inc
pusha
fwait
dec
fists
mov
xchg
or
roll
mov
daa
push
fsubrs
jmp
cmp
cs
add
rorb
cmp
cltd
or
loop
xor
ret
into
aam
sbb
sti
fcoms
mov
repz
repz
sbb
sub
leave
dec
ljmp
push
stos
jg
mov
clc
icebp
push
test
roll
or
shlb
popa
cwtl
in
sahf
pop
flds
scas
inc
lcall
dec
mov
fmuls
dec
daa
fbld
mov
adc
int3
inc
js
es
subl
xchg
pop
hlt
inc
inc
out
sbb
mov
mov
cltd
dec
xchg
iret
jg
fldl
lods
pop
and
jnp
pop
mov
adc
rcrl
test
pop
sub
jecxz
cld
adc
pop
js
icebp
imul
xchg
fidivrl
ret
dec
jge
jbe
nop
sbbb
sarb
xchg
repnz
movsb
or
inc
and
gs
push
mov
jns
lea
out
xor
inc
data16
imul
push
mov
jb
insb
mov
mov
or
mov
push
add
mov
xlat
movsl
mov
fwait
out
imul
cltd
test
xchg
movsb
and
mov
mov
sub
out
xor
push
jmp
movsb
and
iret
jg
cld
sub
mov
enter
xchg
test
add
ficoml
ret
movhps
sarl
sahf
stc
enter
mov
pop
or
call
or
ret
cs
xor
leave
int
pop
mov
loop
jge
cmp
mov
inc
fidivrs
jbe
test
dec
dec
jl
jecxz
notb
or
mov
call
int
rorb
xchg
push
adc
xor
inc
jnp
iret
cmpsb
sub
mov
mov
pop
add
dec
or
cld
scas
aas
adc
test
mov
leave
inc
rcll
xchg
sub
fsub
das
jb
ss
outsb
push
incb
insl
jecxz
in
pop
scas
push
fwait
fwait
dec
out
jge
nop
xlat
add
add
loopne
inc
shll
push
adc
sbb
jno
mov
cmp
pop
xchg
int
jno
dec
mov
jmp
lcall
das
or
shl
nop
inc
add
mov
xor
loope
mov
inc
mov
jns
inc
cmp
bound
sbb
in
clc
out
adc
test
add
push
cmc
dec
bt
inc
mov
sbb
push
and
mov
into
and
js
jne
adc
cwtl
divb
pop
cmp
aas
ret
arpl
xchg
cmp
cs
gs
xchg
pusha
into
mov
insb
or
adc
push
out
lods
cltd
or
adc
push
ret
push
addr16
fnsave
inc
xor
sub
mov
mov
adc
and
shl
cmpsb
push
jg
mov
out
add
jnp
outsb
cmp
add
cli
in
or
sub
dec
inc
cltd
outsb
sarl
lea
pop
jg
in
xchg
testl
repz
adc
adc
dec
sbb
sub
mov
push
jb
inc
jmp
stos
adc
ds
jnp
dec
dec
loop
mov
into
pop
xchg
les
cmp
dec
aam
adc
pop
push
cltd
ficoml
fisttps
xor
mov
in
xchg
fsubrp
notb
sub
xor
mov
repz
in
outsl
sub
mov
ja
in
lcall
gs
mov
in
iret
inc
test
pop
icebp
push
xor
xorw
add
xor
mov
lock
mov
push
jg
int
sbb
test
lods
mov
rorl
mov
in
cmc
popf
jae
adc
sbb
mov
add
xchg
jns
push
movsb
adc
mov
add
push
jb
je
push
in
and
push
lods
bound
movsl
jg
jb
test
jno
ljmp
add
jo
or
or
out
dec
sbb
je
adcl
movb
ss
push
imul
push
push
push
xchg
sti
loope
shl
stos
cmpsb
jmp
sub
mov
jmp
cmp
inc
lea
pop
jp
mov
pop
push
cmp
sbb
xchg
add
xlat
ljmp
insl
out
shrl
add
rcrb
adc
imul
dec
out
adc
add
stos
inc
int
int3
arpl
jle
xchg
cmp
and
ss
sub
mov
xchg
cmp
stc
xor
push
jno
adcb
cltd
cmp
imul
dec
sub
mov
mov
popf
xor
push
xlat
int
stos
js
test
dec
push
fistpll
jnp
xchg
pop
lods
sub
xchg
cmpsb
dec
mov
ds
add
xor
sub
or
push
ja
xchg
in
aad
inc
cmc
loop
aas
je
es
sti
cld
out
jb
arpl
mov
imul
je
inc
pop
lock
outsb
adc
fcomip
sbb
xchg
mov
xor
inc
mov
sbb
aas
std
sarl
leave
outsl
sti
xor
pop
inc
pop
in
adc
add
mov
rcl
movsb
push
xchg
ljmp
aas
push
jb
in
push
jl
push
sbb
jle
jns
xchg
pop
pop
mov
insb
sub
mov
cmc
loopne
int
fmuls
dec
popf
cmp
sti
add
push
mov
dec
push
inc
mov
cmp
add
decb
or
cmp
cmp
je
xor
arpl
add
stc
adc
pop
lods
ss
stc
cmp
inc
inc
pop
stos
mov
xor
jp
inc
inc
mov
nop
add
cltd
jns
sti
cmp
jb
lahf
cmpsb
push
in
lods
xor
mov
cmp
push
imul
pop
mov
jno
out
mov
fistps
push
jno
cs
xlat
hlt
lock
lret
inc
frstor
add
nop
pop
pop
mov
enter
adc
data16
jbe
dec
rcrl
mov
lret
aas
jo
mov
push
adc
lods
movsb
out
movsb
cmpl
xchg
dec
dec
dec
test
xchg
pop
sub
popf
in
cwtl
pop
mov
faddl
data16
popf
mov
mov
cltd
sahf
mov
mov
push
adc
or
les
sub
and
dec
aas
sub
jns
stos
repz
and
outsl
inc
sbb
dec
test
jo
xor
adc
dec
jp
adc
lret
lods
and
pop
out
xor
pop
js
jae
out
and
push
sbb
repnz
loop
and
push
jl
mov
pushf
lds
pusha
pop
je
xchg
mov
cmp
ss
or
push
and
cld
fimuls
fstpt
aaa
and
jne
ljmp
les
test
fwait
cltd
pop
add
lods
int
std
aaa
orb
addr16
adc
jp
cmp
dec
roll
xchg
mov
add
test
lods
jg
gs
push
pop
popf
add
inc
pushf
pop
pop
fcmovnu
cli
dec
and
xchg
loope
bound
fsubs
mov
adc
and
add
popf
sub
mov
scas
in
adc
ja
sbb
mov
xchg
jo
hlt
lods
aaa
sbb
rcrl
jns
xchg
mov
adc
mov
lods
and
jecxz
sub
stos
dec
jg
incl
and
xchg
out
xchg
sbb
int
push
test
xchg
lock
fcompl
jmp
fiadds
fsts
lock
jns
mov
or
movsl
cmp
push
fwait
xchg
mov
lock
shlb
mov
adc
sbb
mov
cmp
inc
mov
mov
aaa
in
mov
or
jle
shl
push
adc
cmp
xchg
add
jge
test
and
pop
pop
sbb
test
lock
mov
in
cmp
leave
or
inc
lcall
icebp
cmp
jae
stc
or
or
pop
rcll
test
and
mov
ja
clc
shl
int
mov
enter
mov
mov
jl
xchg
sbb
cld
es
stc
dec
jb
inc
test
repz
popf
shl
sbb
movsb
lods
dec
adc
pop
addr16
dec
lret
cld
mov
xor
pop
cs
mov
xor
xchg
lret
out
xor
mov
and
pop
lds
dec
mulb
inc
pop
scas
aaa
cmp
mov
add
movb
call
das
jl
sbb
push
lahf
mov
lods
pop
dec
pop
movsl
mov
cmp
jne
jnp
mov
icebp
in
push
xchg
pop
inc
adc
popa
sbb
and
push
lock
hlt
es
loop
xchg
pop
ret
scas
and
push
add
dec
sub
ljmp
cltd
inc
aad
call
icebp
inc
inc
mov
ffree
in
and
mov
insb
fnstsw
sub
mov
das
mov
fcoms
mov
icebp
in
mov
das
stos
mov
dec
xor
mov
inc
jmp
aam
sahf
push
inc
ljmp
cltd
mov
mov
push
push
mov
add
es
inc
pop
sbb
fcmovnbe
mov
lock
push
xchg
push
adc
or
bound
mov
test
addr16
and
xchg
cmp
out
push
loop
cld
xor
negb
jae
mov
gs
sbb
popf
and
aad
push
mov
xchg
add
pushf
add
mov
mov
mov
jg
lock
inc
rcll
fiaddl
xor
inc
or
inc
inc
sahf
dec
les
sub
cs
mov
push
ss
push
push
lcall
push
aam
lahf
cmp
mov
mov
aaa
stc
fimull
enter
clc
or
movsb
mov
adc
std
mov
test
aam
test
orl
inc
cmpl
xor
int
sbb
imul
ret
pushf
sub
mov
test
sti
pop
scas
sti
in
loopne
and
popf
repz
push
cmpsb
vpackssdw
sub
adc
test
push
or
and
sarl
pop
jle
pushf
outsb
xchg
fwait
pop
je
and
out
out
scas
jmp
xchg
jb
mov
push
jno
repnz
jmp
or
lret
sub
fistl
test
rorl
push
inc
shr
sti
and
push
outsl
inc
and
push
add
outsb
test
fdivrs
out
loopne
jg
aad
shll
in
lods
jnp
mov
mov
xchg
not
jg
std
test
bound
xchg
test
xchg
mov
fdiv
montmul
cmpsb
ret
push
lea
sbb
shll
into
pop
jp
xor
out
or
adc
push
incl
mov
pop
fistl
adc
jecxz
cmp
ds
mov
mov
dec
orb
pop
in
push
mov
mov
jb
jg
jge
xchg
sub
inc
or
cmpsb
push
insl
pushf
std
or
adc
pop
mov
add
mov
fmull
ror
out
in
subb
mov
pop
negb
sub
js
loope
shrb
idivl
mov
scas
adc
dec
dec
push
repnz
cmc
xchg
add
xchg
push
ds
fadds
xor
push
and
cmpsb
nop
lods
push
push
jo
lahf
dec
sub
loope
inc
jb
jo
dec
aad
or
bound
inc
mov
bound
popa
jae
cmp
lea
int
sbb
xor
inc
mov
mov
mov
add
cmc
mov
mov
add
pusha
in
mov
rolb
imul
fs
loop
sub
idivl
fs
clc
aam
fldcw
cmpsl
xor
or
xchg
arpl
rcrl
xor
jns
jne
mov
cmp
in
testb
cltd
ds
je
push
outsl
or
in
xchg
push
sbb
cli
or
jb
subl
and
rcrb
test
mov
push
into
mov
pop
adc
xchg
incl
sbb
lods
and
fists
cmpsb
mov
mov
shll
jle
cmp
pop
mov
adc
int3
rcrl
push
addr16
leave
xchg
dec
dec
sbb
cmpsb
enter
adc
lret
in
sysenter
cltd
push
loop
xor
push
data16
sbb
jecxz
cmpsl
xchg
ret
int
js
lods
in
mov
cmp
xor
pop
pop
mov
sarl
aad
test
repz
inc
cli
jp
sarb
pop
aam
pop
push
jl
xchg
lret
add
out
es
xchg
enter
bound
in
xchg
mov
mov
and
push
addr16
adc
sbb
inc
jnp
sbb
test
mov
xor
movsb
stos
push
les
adc
aam
iret
or
mov
push
pop
es
enter
or
inc
adc
fwait
sbb
pop
or
popa
repz
jno
mov
xor
lods
testb
outsb
insb
pop
or
cmc
es
cmc
lods
mov
fldt
pop
adc
in
mov
adc
sti
and
mov
xor
cli
xor
stc
icebp
xor
stos
mov
push
cmp
mov
pop
jmp
out
adcl
mov
mov
cmp
scas
jmp
xor
nop
xchg
xor
aas
or
lret
push
inc
add
and
push
imul
add
jle
cmp
push
jne
in
push
imul
aaa
sub
fidivs
cwtl
jbe
push
inc
insb
imul
lea
or
mov
rcrb
adc
aam
cwtl
mov
ret
mov
out
jle
icebp
and
pushf
cmp
mov
test
cmp
sbb
xchg
cmpsl
ret
adc
scas
clc
xchg
insl
stc
jecxz
gs
int
sbb
mov
push
ds
xchg
cmp
pop
dec
das
push
inc
pop
mov
test
int
pushf
mov
test
leave
sbb
shll
jg
lods
shl
ds
mov
xor
inc
lret
xchg
insb
fcmovnbe
in
pop
xlat
in
cs
mov
lds
fwait
movsb
ljmpw
sbb
jle
jge
or
inc
inc
fcmovne
cmpsb
lea
push
into
xchg
iret
fwait
hlt
and
cmc
lret
orl
adc
push
inc
pusha
adc
shll
rcrl
sub
mov
roll
and
notl
sbb
mov
loop
inc
iret
mov
lock
test
mov
xor
sub
sarb
mov
sub
add
mov
jge
inc
aaa
and
cmp
pop
repz
int
adc
inc
das
call
stc
fxch
pop
jns
jp
inc
xchg
and
aad
fwait
mov
bound
cmpsb
cmp
sbb
repz
lret
mov
sbb
leave
add
std
cmp
aas
adc
jle
out
rcrb
hlt
cmp
xchg
add
mov
jecxz
cwtl
and
stos
dec
mov
lret
repnz
push
jnp
ds
mov
popa
cmc
clc
adc
mov
and
call
xor
mov
mov
xchg
inc
bnd
mov
stc
push
dec
cld
loopne
addr16
push
add
mov
test
fdivp
inc
jns
inc
pushf
mov
popa
in
js
popa
push
fbld
dec
scas
push
mov
jmp
push
push
push
cli
and
aam
loope
jns
stos
cwtl
add
fcoms
aas
aam
ljmp
mov
sub
dec
mov
pop
aad
sub
dec
sarb
pop
loope
outsl
pop
lret
dec
mov
test
inc
sbb
das
xor
mov
inc
push
pop
push
xchg
mov
repz
psrad
xchg
loop
cli
and
lret
jno
dec
scas
add
ret
pop
xor
fsts
je
jns
jns
lods
into
popa
cmp
cs
hlt
inc
jge
inc
cwtl
mov
ret
or
xlat
mul
adc
inc
lcall
lods
add
and
cwtl
bound
into
jg
cmc
fs
sbb
in
das
scas
mov
lcall
lods
or
daa
inc
and
add
or
enter
aaa
inc
fadd
out
cmp
popa
pop
push
ret
in
push
inc
arpl
jbe
addr16
mov
adc
dec
push
push
jne
mov
mov
mov
sub
pop
xlat
in
les
xchg
and
xchg
mov
enter
fadd
ficompl
aaa
stc
lcall
hlt
jcxz
dec
add
test
daa
sbb
sbb
aam
or
cmp
jg
push
push
xchg
mov
and
leave
sub
or
sub
cmpsl
lret
mov
mov
or
or
and
jnp
sub
idiv
pop
cs
xor
sub
loope
inc
xor
pusha
lcall
call
out
es
sbb
aad
fs
mov
pusha
pop
mov
adc
out
lock
and
and
lret
in
ds
push
jmp
fwait
add
pushf
lock
fldcw
popa
mov
sbb
cmp
jb
imull
fwait
lods
adc
cltd
push
leave
push
testl
in
stc
into
inc
cmp
movb
fcmovnbe
jne
out
mov
adc
stos
pop
sahf
push
adc
nop
mov
sub
mov
sub
ret
lcall
sbb
sub
push
loopne
ret
popa
fs
fwait
lea
in
sub
inc
dec
fnsave
aam
inc
dec
hlt
and
and
lcall
xor
ret
or
je
shrl
rolb
xchg
insb
test
lods
xchg
jne
dec
lcall
ja
loopne
jp
fldcw
dec
dec
data16
or
cmp
insl
test
dec
lret
jbe
divb
dec
pop
push
outsb
adc
add
in
inc
in
scas
xor
div
shlb
and
sbb
aad
push
sarb
jae
or
xor
cmp
inc
sti
dec
fiaddl
imulb
test
scas
jne
mov
neg
dec
push
jo
stos
adcl
jecxz
adc
je
jl
iret
leave
mov
out
xlat
or
mov
push
xchg
fs
enter
jmp
or
push
mulb
fdivl
dec
add
mov
add
xchg
push
pushf
add
imul
or
in
jp
std
mov
shlb
lahf
inc
dec
add
sub
pushf
jp
ja
dec
pop
mov
add
sti
sbb
xchg
or
pop
mov
test
sbb
jp
cmpl
pushf
js
mov
adc
inc
cli
jecxz
fwait
mov
sub
ss
shll
sub
lods
jnp
sbb
xchg
push
cs
test
les
mov
repnz
jae
push
lahf
pop
arpl
es
cmp
inc
aaa
mov
jae
mov
jo
mov
divb
or
cmp
jno
not
and
jae
cmp
int3
bound
stos
inc
shll
jge
ss
cs
out
outsl
push
in
sbb
jp
fwait
sbb
xor
insl
sbb
dec
sub
mov
popf
jmp
sti
mov
sub
jge
insl
sbb
dec
sub
mov
popf
jmp
sti
mov
sub
sbb
imul
fnsave
mov
popf
jmp
sti
mov
sub
cmp
or
sbb
lret
lods
pop
fstl
push
mov
in
ljmp
and
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
scas
pushf
ret
adc
addb
daa
jmp
add
add
or
push
add
add
add
add
push
das
add
add
pop
add
or
xchg
add
add
add
add
lahf
add
add
movsb
add
daa
add
add
add
jb
loope
adc
add
add
add
add
mov
add
jb
loopne
push
add
lahf
add
xchg
add
sbb
mov
add
add
add
mov
xor
ljmp
add
add
add
add
add
outsb
add
pop
add
add
arpl
adc
pop
add
inc
add
add
adc
movsb
add
add
lds
into
add
add
add
lcall
add
sbb
insl
add
add
add
test
add
add
add
sbb
mov
add
add
add
add
ret
add
add
add
add
push
add
add
outsl
add
add
add
add
add
rolb
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
das
add
add
add
mov
insb
add
hlt
add
add
add
or
mov
mov
push
add
add
add
ret
add
add
add
add
add
add
add
jle
movsb
add
add
mov
movsb
add
add
hlt
add
inc
add
add
add
add
add
add
xchg
add
add
push
add
add
add
add
filds
xor
xor
insb
add
bound
imul
add
test
add
ret
add
add
push
add
add
add
add
add
cltd
add
add
push
in
add
rolb
ret
add
xor
ret
add
out
add
iret
add
add
add
add
jb
addb
add
add
add
inc
add
cmc
add
add
mov
adc
add
jb
fiaddl
mov
add
and
jl
flds
push
add
add
add
popl
push
add
add
add
add
add
mov
mov
or
add
insb
add
add
add
add
add
pop
add
add
out
add
push
add
add
add
push
add
xchg
add
dec
add
mov
add
pop
add
add
add
add
pop
add
add
add
sub
mov
add
add
sub
pop
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
popf
xchg
xchg
push
out
imul
dec
or
insb
jnp
imul
cmpsl
and
shrb
fwait
mov
js
mov
shlb
test
jmp
popf
xchg
aad
jo
fsubr
faddp
test
jg
xchg
add
repnz
push
outsb
inc
sbb
mov
jns
in
fiaddl
pause
aas
xchg
push
stos
sbb
inc
int3
mov
xor
pusha
inc
ret
dec
cwtl
jp
outsl
fisttpl
addb
mov
test
repnz
pop
aaa
lret
cld
inc
cmpsl
xchg
cmp
rcrl
dec
stos
insl
pop
stos
mov
mov
pop
jae
andl
dec
pushf
mov
pop
subl
aaa
fdivr
add
push
into
pop
mov
pop
into
sahf
push
outsb
cs
adc
out
inc
cmp
pop
xlat
mov
mov
int
add
cmp
dec
cmp
add
mov
inc
add
addb
imul
inc
es
jecxz
popa
fsts
out
push
int3
adc
jns
pop
outsl
into
push
sbb
lahf
sti
or
push
inc
lods
jp
mov
cmp
jbe
mov
test
movsl
and
shl
ror
cwtl
push
pushf
pusha
sbb
cwtl
std
xchg
ror
out
mov
pop
fucom
dec
lea
dec
in
sub
jae
push
sti
lds
mov
aaa
xchg
out
sub
add
mov
adc
hlt
push
cmp
mov
cmpsl
or
mov
jge
cmp
loopne
in
int
sti
mov
sti
call
out
data16
or
insl
loope
mov
jmp
sub
fcmovne
xor
and
inc
xorl
and
jle
cmp
cld
add
aad
lock
insb
xor
inc
dec
sbb
mov
cmpsl
mov
in
xor
jecxz
adc
or
fstl
loopne
inc
sub
jne
orl
adc
pusha
ja
inc
mov
cmp
and
mov
jo
aam
stos
inc
les
cltd
pop
add
shrb
jnp
imul
jb
or
sub
pushf
in
shl
test
dec
pop
mov
dec
add
sbb
adc
or
sbb
add
dec
inc
add
ret
mov
xor
sub
call
jecxz
jmp
mov
jge
xlat
mov
les
das
or
cld
xchg
mov
push
decl
in
sub
sbb
dec
push
out
sahf
ljmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
