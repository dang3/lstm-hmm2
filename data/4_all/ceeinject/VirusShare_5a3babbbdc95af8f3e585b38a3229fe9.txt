call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
mov
movsb
pop
cmc
xor
rclb
movsl
and
push
lds
adc
mov
movsb
push
aam
les
gs
test
cmp
and
jp
inc
cmc
je
fs
cs
mov
gs
xchg
adc
daa
push
mov
pop
cmpsb
and
rolb
rcll
sahf
and
jge
test
mov
dec
js
movsl
das
sahf
xchg
mov
pop
jg
rorl
xchg
sbb
stos
clc
cmp
and
rcrb
hlt
lcall
sub
cld
mov
std
in
lods
push
or
push
cmp
xchg
adc
iret
fidivl
dec
mov
push
xchg
add
inc
mov
movsb
push
rclb
xor
imul
inc
lods
leave
cmc
mov
sbb
inc
jno
pop
dec
sbb
lds
sbb
aam
aam
ds
push
adc
imul
lods
fwait
test
mov
push
dec
loop
dec
jmp
cwtl
lea
dec
sbb
movsb
push
aam
les
gs
adc
lods
mov
movsl
sbb
push
in
push
xchg
insb
jmp
fadds
cmp
test
aam
xorl
lods
sub
shlb
movl
jne
xlat
lock
jno
data16
mov
xchg
inc
xchg
in
jl
popa
fs
fsubs
push
cwtl
inc
les
gs
adc
add
xor
and
push
lds
in
adc
mov
movsb
push
aam
les
gs
adc
add
xor
and
push
lds
in
adc
leave
add
mov
int
pop
jp
cld
pop
bnd
movsl
divl
xor
jl
in
in
notl
or
lret
daa
out
ja
or
jb
iret
mov
dec
out
mov
loope
mov
push
aas
gs
mov
int
rcr
popa
jno
or
loopne
xlat
std
mov
mov
mov
mov
cmc
pop
push
push
repz
push
loope
orps
sbb
sbb
arpl
mov
movsb
sti
cmpsb
mul
or
movsb
mov
mov
imul
mov
movsb
cmp
push
push
flds
notb
lea
push
pop
in
sub
repz
movsb
clc
push
xchg
xchg
bound
popf
sub
mov
and
movsl
leave
loopne
lea
shrb
mov
push
or
mov
loope
movsb
jae
mov
es
push
push
inc
outsl
pop
in
pop
lcall
cli
cld
pop
jns
fstps
inc
adc
test
mov
aaa
cmp
push
insl
aad
cmpl
scas
dec
mov
rcll
adc
adc
xlat
stc
pop
cmp
xor
or
and
jle
stc
add
inc
xchg
dec
jl
and
add
stos
fldt
faddl
lds
sbbb
mov
dec
cwtl
testb
adc
sar
loope
or
mov
cmp
push
xlat
jae
jae
movsl
stc
and
decl
stos
mov
dec
add
movl
lea
loop
or
pop
mov
in
mov
shl
jbe
mov
loope
cmp
sbb
sub
and
test
fdivl
lds
fdivs
hlt
insb
xorl
fs
push
ficoml
mov
cmp
and
jb
frstor
shl
test
shr
xchg
adc
xor
mov
fimuls
shll
outsl
or
sbb
adc
sub
or
xchg
rcr
out
pop
sub
mov
scas
mov
add
adc
mov
dec
imul
out
mov
xor
jmp
aam
imul
imul
mov
int
mov
jg
roll
dec
cld
daa
dec
add
sub
jns
adcb
leave
dec
xchg
fbld
aad
lahf
xor
pop
sbb
mov
fisubl
push
push
adc
sub
iret
mov
pop
lds
push
rcrl
push
sub
jle
and
sarb
stos
out
cld
pop
xor
push
in
call
sbb
add
ja
leave
lock
jnp
mov
ret
sub
push
xlat
aas
adc
or
add
in
push
js
scas
adc
cmp
ret
test
fcoml
push
and
add
fdivs
bound
pop
outsl
loope
out
aaa
xchg
sbb
das
iret
out
sbb
xor
scas
fcompl
fs
fsubrs
pop
jmp
xchg
mov
lahf
sbb
aaa
fcomi
dec
ljmp
mov
sbb
aad
scas
fcomps
cltd
adc
xchg
mov
aaa
repnz
mov
test
dec
test
adc
daa
fisttpll
out
push
mov
jbe
jle
dec
test
xor
adc
movsl
hlt
bound
jno
cli
and
cmp
orb
mov
fs
add
ret
mov
xor
scas
push
imul
and
mov
int3
inc
std
push
and
sbb
and
lock
mov
add
jecxz
and
popf
mov
dec
imul
clc
mov
daa
rolb
mov
shl
push
cwtl
add
push
aam
mov
mov
mov
mov
xchg
jbe
ret
dec
call
popa
in
jmp
int3
cmp
xchg
clc
popf
outsb
loop
adc
jb
dec
inc
repnz
or
mov
ja
shlb
out
out
adc
pop
xor
cwtl
scas
sub
jmp
addr16
dec
iret
mov
pusha
jb
pop
in
aam
sub
add
mov
ss
adc
jb
cmp
jae
mov
or
mov
xor
sub
add
popl
mov
and
pop
in
mov
dec
scas
adc
mov
lret
and
pop
insb
loopne
rcl
push
call
mov
loopne
lret
mov
sub
xchg
pop
ja
cltd
lea
jge
imul
pop
push
jno
aaa
jle
testl
push
xchg
leave
mov
out
mov
sbb
xor
xor
aam
mov
mov
popf
shl
jl
xchg
punpckhdq
out
in
shll
stc
xchg
icebp
dec
jecxz
jmp
mov
pop
push
jp
ss
jbe
mov
dec
inc
and
shl
jae
int3
adc
test
imul
clc
push
mov
jbe
mov
imul
xchg
dec
inc
push
xlat
lret
lods
dec
add
push
and
sbb
adc
jl
mov
jmp
les
gs
pop
mov
mov
and
ja
insb
adc
mov
insb
gs
inc
repz
les
adc
scas
out
push
movsb
rclb
test
std
nop
jl
jmp
in
arpl
out
adc
ja
gs
imul
scas
int3
jns
mov
adc
sbb
inc
lods
cmc
or
faddl
nop
ret
mov
add
cld
stos
inc
dec
decb
aaa
xor
fidivl
aam
adc
gs
lret
or
xchg
leave
and
nop
sbb
ds
jns
shrl
cld
inc
lahf
sbb
and
repz
and
push
shrl
or
into
jns
enter
adcb
mov
cmpsl
scas
mov
scas
popf
ljmp
ja
jne
insl
push
push
or
pop
out
fsubrl
xchg
sbb
ljmp
or
inc
enter
mov
movsb
ret
out
sub
ret
addr16
xchg
sbb
push
into
add
ja
repz
add
es
pop
adc
scas
adc
ret
rcrl
out
stos
or
sub
das
pop
inc
xor
inc
cmp
and
sub
xor
cmp
sub
sarl
lcall
stos
out
data16
and
cmpsl
cmpsl
nop
cmp
push
pop
mov
push
pop
push
ja
mov
es
mov
inc
pop
xchg
cmp
dec
fcoml
iret
add
adc
or
cmpsb
lcall
lods
mov
pop
pop
xor
mov
cmp
jmp
rorb
or
mov
push
or
sub
mov
cmp
xor
push
fidivl
or
or
pop
mov
xchg
out
jb
xor
pop
jg
cmp
sub
adc
bnd
mov
xlat
roll
pop
mov
jne
in
cmpsl
dec
or
sti
xchg
stc
mov
mov
cmp
out
mov
hlt
mov
in
out
jmp
pop
cmp
aam
adc
dec
shlb
sarl
fisubrs
jmp
cmc
mov
cmpsl
xor
xchg
or
jnp
mov
rolb
sbb
sub
xchg
push
ret
push
insb
inc
inc
mov
xor
adc
fwait
xor
cmp
sbb
dec
jns
sbb
xchg
push
adc
call
shl
xchg
hlt
dec
mov
push
sbb
push
nop
imul
push
mov
push
mov
mov
jmp
je
es
iret
and
mov
lods
shl
push
sub
pop
jno
out
dec
adc
or
out
inc
cmpsb
dec
mov
sbb
jle
jg
rcll
xor
icebp
and
cmc
leave
in
mov
cld
movsl
rcrl
xchg
outsb
insb
lahf
scas
lock
scas
inc
dec
out
call
or
popf
idivl
fsubs
in
xchg
inc
aam
loope
mov
clc
xchg
sub
adc
in
or
xchg
pop
imul
dec
jl
dec
cmc
insb
push
and
mov
fistl
lahf
jbe
cltd
xchg
mov
adc
dec
and
pop
push
pop
iret
pop
mul
mov
cwtl
add
mov
lret
clc
enter
cltd
aas
fwait
jns
and
sbb
lahf
jle
shrl
fdivrs
add
into
sahf
add
js
and
mov
pop
movsl
fcomp
lock
sbb
enter
push
and
pop
and
dec
and
test
stos
out
inc
sbb
jl
or
test
aaa
andl
icebp
outsb
movsb
mov
sarb
push
inc
fs
pop
std
fmul
and
test
rol
repz
fsubl
mov
cwtl
pop
sub
pop
test
cmp
jno
inc
inc
insl
ljmp
in
pop
lea
xchg
cltd
fildll
loopne
xchg
repnz
ja
dec
imul
adc
out
lds
xor
loopne
mov
jb
add
dec
cmp
xchg
mov
cmp
and
adc
jg
insb
loopne
fildll
sub
addr16
stc
stos
cmp
mov
fldl
sbb
xor
std
lods
arpl
mov
mov
loop
stos
xlat
repz
or
jp
cs
cwtl
sbb
mov
xchg
out
pop
frstor
jmp
fwait
inc
jecxz
mov
adc
in
shrb
shl
mov
lret
and
jmp
jno
into
stos
aad
xchg
scas
scas
int3
push
mov
in
inc
push
jne
jle
rclb
fcomp
push
hlt
and
fwait
pop
jae
sbb
cld
lds
push
test
add
pop
mov
test
jno
test
push
loop
bound
rolb
lretw
fsubr
loop
js
sub
fsubr
test
into
popf
sub
cli
mov
out
popa
pusha
adc
mov
lods
scas
xor
xchg
pop
shl
test
dec
mov
mov
and
inc
enter
xchg
sub
push
pop
adc
pop
mov
inc
mov
fistps
mov
pop
and
jno
stos
and
test
mov
adc
out
clc
inc
sbb
push
fisubrl
stc
sti
mov
jb
dec
test
dec
sbb
out
pop
rorb
iret
sub
dec
adc
jecxz
and
shrb
push
imulb
and
les
cmp
dec
mov
add
outsl
push
test
pop
jb
mov
adc
cltd
in
xchg
inc
or
testl
lahf
dec
scas
lahf
loop
or
sar
test
stos
in
pop
add
cwtl
xor
pop
or
cmp
fcmovne
inc
int
cltd
sahf
cmpsb
in
test
outsb
cmpsb
lods
sahf
repnz
lods
jns
es
cs
pop
pop
jo
push
faddp
test
cmpb
dec
pop
loope
shlb
xor
jg
mov
arpl
ret
les
and
mov
jp
mov
stos
cmpsb
dec
mov
cmc
pop
fdivrp
mov
gs
fsubrs
cmp
dec
and
shrl
cs
popf
dec
and
fs
inc
testb
pop
mov
sub
pop
loopne
fimuls
xor
mov
add
enter
loopne
jae
xchg
sbb
data16
xchg
sub
cmp
scas
hlt
mov
push
lds
sbb
pop
jge
lods
in
leave
adc
mov
push
push
je
repnz
dec
xchg
xchg
mov
mov
loope
ficompl
xor
cmpl
mov
aad
movsl
std
add
in
popa
push
ret
mov
or
mov
test
jle
popl
mov
idiv
insl
loope
repnz
jbe
inc
pushf
pop
adcl
outsb
pop
dec
pushf
jle
sbb
fnstsw
into
jmp
gs
and
stc
add
nop
les
cmp
push
sbb
out
xlat
cmc
mov
adc
inc
je
push
push
out
mov
xor
push
mov
outsl
test
mov
push
xor
xorb
out
dec
pop
cmc
ss
jo
sub
push
enter
cmp
dec
lods
lahf
mov
cs
ja
je
lds
push
pop
mov
rcrb
adc
imul
test
adc
filds
adc
lock
es
mov
jmp
insl
mov
adc
out
push
mov
scas
lret
push
notb
push
int
scas
mulb
adc
adc
xchg
add
adc
pop
out
inc
stos
stos
fistl
xor
sar
jge
mov
js
inc
int3
jp
pop
xchg
loope
in
in
mov
pop
or
pop
dec
sbb
mov
pop
nop
xchg
jg
addr16
adc
add
jbe
xchg
add
jp
les
pop
scas
mov
sbb
cmc
aam
cmpsl
jge
xor
movsb
add
hlt
adc
out
in
and
mov
lahf
fsubl
outsb
jno
mov
dec
mov
mov
or
scas
xchg
mov
andl
les
out
inc
stc
jle
je
in
loope
sbb
fistl
mov
leave
insb
movsl
imul
xor
mull
jl
mov
mov
aad
arpl
data16
movsl
push
ljmp
xchg
cltd
jo
in
push
mov
pop
out
sbb
jno
and
pop
or
pop
jbe
push
inc
mov
notb
xor
lcall
andl
cmp
inc
mov
xchg
cli
or
add
out
adc
repnz
lahf
addr16
rcrb
xorl
addr16
insl
push
fldcw
or
fwait
add
pushf
pop
xor
shlb
adc
and
mov
push
ret
insb
xor
inc
inc
lods
cmp
jp
xchg
push
xor
iret
cld
cmp
or
dec
dec
mov
in
in
mov
xor
or
fisttps
dec
sub
cmpsb
add
cmp
dec
nop
nop
pop
movb
mov
and
mov
in
fidivrl
cmp
add
fisubl
jp
and
rcrb
cmp
cld
inc
loopne
sbb
mov
scas
movsb
mov
cltd
cmp
fidivrs
pop
push
dec
mov
das
movsb
mov
xchg
je
cmp
divb
pop
xchg
shl
jns
xchg
inc
int3
loop
repz
pushf
and
mov
inc
repnz
cwtl
inc
push
xlat
mov
pop
stos
pushf
jge
jecxz
xchg
int
int
xchg
imul
lahf
lret
push
jns
pop
mov
testl
mov
fmull
sbb
loop
loope
arpl
in
inc
icebp
dec
fs
adc
mov
pop
andb
pop
lret
lret
mov
dec
add
lock
popa
jl
clc
adc
movsb
ror
sbb
fistl
lea
mov
out
loope
and
mov
jp
push
jmp
lea
push
push
jmp
add
xor
push
dec
and
jns
subb
stos
xchg
mov
xlat
xchg
jg
daa
inc
pop
cs
adc
insb
add
inc
into
sub
xchg
xchg
dec
mov
push
or
cmpsb
loopne
xor
push
pop
inc
dec
sub
cli
xor
mov
xor
test
sbb
xor
decb
jne
inc
aad
lock
out
jb
lods
insb
jge
mov
push
mov
cld
or
data16
sti
scas
xchg
jnp
ds
loop
push
pop
cmc
mov
or
add
dec
jne
insl
fstpt
adc
adc
inc
push
adc
lods
or
repz
push
xor
add
leave
cmc
imul
xor
push
xor
xchg
add
inc
fldcw
push
out
ss
test
movsb
fwait
sti
cwtl
and
bound
sbbb
daa
imulb
dec
in
loopne
aas
outsl
jno
xchg
dec
ds
cmove
cltd
leave
ret
fdivs
sub
cmp
stos
jl
dec
xor
jno
cltd
daa
test
test
movsl
jecxz
or
inc
xchg
insb
into
cli
mov
test
and
push
add
cmp
mov
pop
jmp
in
push
pop
popa
sub
sti
pop
mov
ds
js
xor
mov
dec
xchg
subb
mov
cmp
jae
fildl
aaa
sahf
mull
movsl
fcmovnb
push
sbb
test
cmpb
xchg
jb
cs
mov
out
push
cmp
mov
mov
out
call
add
aam
cltd
push
xchg
imull
aas
push
mov
jbe
fsubp
mov
orl
adc
jl
cmpsb
div
pop
int
xchg
jmp
push
cmc
xchg
ljmp
mov
fmuls
sti
push
xor
ja
divb
in
pop
sbbl
leave
pushf
inc
out
cmp
sbb
or
and
mov
insl
and
add
and
addl
and
scas
xchg
mov
fnstcw
cltd
mov
mov
movsl
pop
jno
push
and
sarb
mov
push
sahf
mov
ds
pusha
fidivrs
cmpsb
or
push
fdivrs
pop
sti
mov
out
divl
xor
cmp
xor
icebp
movsl
or
sub
cltd
sub
mov
add
push
inc
pop
sarl
mov
pop
mov
sbb
test
dec
out
push
pop
xchg
xor
sbb
inc
sti
cmp
jmp
fstps
xlat
mov
sarl
es
js
cli
lret
inc
insl
sbb
inc
lock
sbb
int
xchg
adc
lock
pusha
mov
dec
xchg
aam
add
hlt
push
jg
jae
or
adc
pop
mov
ss
cmp
sub
cmp
xchg
cmc
data16
iret
mov
clc
fisttpl
or
add
mov
repnz
pop
adc
push
repz
popa
push
dec
jge
mov
sbb
pop
mov
ss
or
adc
out
pop
pop
shrb
cmp
lods
popf
cmp
or
stos
xor
fcoml
dec
mov
cltd
sbb
test
mov
mov
outsb
mov
sub
into
gs
in
movsl
lret
movsb
push
sub
add
inc
rorl
add
out
daa
jge
testl
sarl
sub
daa
incb
test
mov
pop
adc
push
xlat
xor
mov
cmp
lods
push
testl
int
xchg
push
imull
xor
jbe
xchg
rorl
dec
je
lahf
mov
push
fstl
jno
inc
iret
pop
mov
out
push
push
incb
les
cmp
cmp
mov
inc
mov
mov
dec
mov
xchg
sbbl
xchg
jns
loopne
lods
xor
shrb
gs
stos
push
repnz
icebp
push
iret
jae
adc
ret
pop
adc
cmp
jmp
outsl
or
testb
das
bound
sub
cwtl
mov
outsl
ss
mov
sub
hlt
stos
es
inc
xor
cltd
ret
les
cwtl
out
movsl
sub
test
sbb
mov
push
dec
int3
sub
push
ds
sbb
setbe
gs
jnp
ret
cmp
mov
mov
pop
push
mov
mov
scas
xor
and
jo
clc
pop
sub
aam
out
jo
movsl
call
adc
das
dec
push
cmp
sub
jg
inc
ficoml
sbb
push
sub
icebp
enter
ret
cli
push
ficomps
cmp
gs
std
data16
in
sub
pop
sbb
out
or
dec
dec
mov
sub
cmpsb
lds
aad
push
cmpsl
in
sti
xchg
or
lcall
sbb
aaa
lret
je
cltd
cmp
test
pop
add
popf
out
je
pop
mov
orl
dec
out
xor
push
dec
insl
repz
lea
lret
pop
ja
mov
enter
inc
mov
aas
mov
bound
pop
xor
in
pop
or
pop
lret
push
jb
add
aaa
nop
jecxz
imul
mov
test
sarl
jo
mov
xor
dec
pop
aad
pop
jmp
sahf
push
dec
add
mov
mov
xor
scas
pushf
js
mov
sub
xlat
xlat
inc
sbb
sub
inc
in
int
shll
adc
lea
mov
jle
sub
add
mov
in
das
cmpl
into
mov
es
sub
lods
lock
iret
js
sub
mov
hlt
in
test
mov
movsb
push
aam
les
gs
adc
add
xor
and
push
lds
in
adc
mov
movsb
push
aam
les
gs
adc
add
xor
and
push
lds
in
adc
lods
and
scas
jne
gs
adc
movsl
sub
cmc
jge
adcb
and
les
gs
jmp
scas
pop
xor
push
mov
or
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
imul
in
adc
add
outsb
mov
cs
ret
xchg
pop
mov
sub
es
and
and
add
jno
popa
lods
push
pushf
inc
jmp
cmc
pop
inc
dec
icebp
pop
loopne
rcrl
or
cld
cmp
or
sbb
push
pushf
push
mov
cmp
and
jp
jo
jns
jnp
mov
pushf
pop
outsl
test
bound
pop
nop
pop
pop
insl
pop
test
into
enter
cld
adc
sahf
and
insb
pop
xchg
outsb
mov
mov
cmp
in
and
push
ret
or
icebp
pusha
bound
pop
dec
mov
pop
insl
rcrl
push
ret
movsb
adc
push
shl
xor
icebp
leave
mov
mov
or
xchg
lcall
xchg
imul
adc
jne
and
mov
mov
mov
loopne
pop
je
in
shll
mov
int3
repz
jl
push
xor
shl
cld
and
adc
push
int3
popa
mov
pop
mov
pop
cwtl
dec
jmp
sbb
dec
inc
cld
inc
xchg
je
lea
stc
sub
lds
jne
pxor
outsb
movsb
imul
xchg
add
cmp
sbb
push
xchg
pop
xchg
mov
pop
mov
add
pushf
inc
mov
pop
orl
rorl
and
adc
add
jno
popa
lods
push
pushf
inc
mov
pop
orl
rorl
loop
dec
mov
or
dec
das
out
lret
sbb
insb
shlb
cs
dec
pop
push
inc
fsubl
push
insl
jb
sbb
subl
or
int3
cli
fcmovnb
xchg
mov
mov
sbb
cli
sar
push
insl
fwait
mov
inc
jnp
sbbl
add
mov
int3
rorl
jmp
dec
fistpll
popl
push
es
mov
fstpt
ljmp
xor
dec
dec
data16
out
sbb
std
ds
jecxz
mov
inc
adcb
ds
mov
or
out
xor
adc
mov
aas
cmp
inc
test
arpl
or
pop
std
int
idivl
pop
jmp
inc
les
push
in
int
stos
into
sub
into
enter
fwait
push
inc
scas
cld
xchg
test
pop
pusha
cmp
mov
addr16
hlt
scas
jno
adc
ds
jmp
and
fistpll
fsts
dec
pushf
mov
pop
stos
mov
aas
test
xlat
push
push
shrl
loope
cmpsb
or
cmc
sub
test
add
mov
jbe
mov
std
sti
xor
fwait
dec
pop
es
mov
cmc
pop
pop
adc
movsl
lods
push
cld
lods
add
mov
and
les
stos
cmp
mov
push
sbb
lock
cs
add
cmpsb
mov
in
xchg
rorb
pop
pop
cmp
cmp
scas
mov
in
fs
and
dec
jg
out
push
ret
cwtl
cs
clc
cwtl
outsb
push
scas
iret
ljmp
and
lret
sti
pusha
add
inc
push
pop
mov
stos
test
mov
jnp
daa
cmp
cmp
insb
ja
je
stc
out
lahf
adc
lds
adc
lcall
aaa
shrb
and
cltd
loopne
xchg
dec
sarb
adc
cmp
mov
xchg
add
cmc
pop
push
xor
pop
imul
inc
pop
stc
test
inc
adc
mov
jl
ficompl
repnz
sub
cmp
xchg
or
push
sbb
ret
icebp
mov
pop
mov
int3
pop
and
mov
rclb
push
push
xor
mov
push
cmp
fidivrs
popa
inc
fs
mov
and
ficoms
inc
popf
cs
lret
popa
xor
xor
cmpsl
movsl
pop
and
pop
add
lret
lea
fwait
jecxz
sub
mov
cmpsb
jecxz
sahf
lods
or
cmp
daa
cmp
sub
push
subb
inc
mull
push
pop
and
aam
ljmp
pusha
cwtl
repz
dec
add
ret
cltd
push
subb
push
jg
cmp
popa
xor
and
push
stos
jb
das
jnp
setle
push
pop
outsl
inc
movsl
mov
push
dec
in
cli
jns
test
pop
loopne
repnz
or
jmp
jnp
shlb
push
mov
dec
jne
push
out
int3
xchg
xchg
mov
cltd
je
je
or
ret
xchg
add
mov
enter
or
sbb
sub
ja
fwait
mov
add
jns
mov
insl
repz
pushw
pop
test
jmp
aaa
or
cli
cmc
xchg
push
sbb
pause
cmp
pop
fidivrl
lods
xchg
insb
sbb
addr16
out
cmpsl
bound
inc
lcall
sub
fs
push
adc
mov
and
adc
fscale
icebp
xchg
mov
sub
add
jb
cmp
mov
pop
out
mov
popf
enter
mov
jno
dec
test
and
daa
sarb
daa
adc
mov
test
pushf
dec
jecxz
mov
dec
iret
ljmp
faddl
dec
movsl
push
fsts
xchg
popf
mov
fs
pusha
sbb
les
rcll
or
repz
orl
popa
or
stc
mov
std
pop
ss
sub
mov
dec
cmc
xchg
shlb
adc
mov
in
sarb
sbb
sbb
out
movsl
stc
fbld
cmpsl
lock
push
clc
cwtl
lret
xchg
lret
mov
call
int
outsl
aad
jno
xor
sub
push
outsl
cmp
fiadds
inc
repnz
jmp
mov
mov
sub
xlat
xchg
mov
rclb
cmp
sti
jecxz
pop
cmp
dec
jmp
sbb
jno
and
jmp
addr16
add
lds
sbb
scas
push
test
dec
cmpsb
push
out
mov
es
sbb
mov
cmpsb
rolb
xchg
inc
sarb
xor
pop
sub
xchg
inc
sbb
shlb
inc
mov
int
test
aaa
inc
js
sub
mov
dec
jp
jle
daa
subb
nop
mov
loope
movsb
je
mov
pop
mov
and
movsb
add
stos
push
cmpsb
mov
mov
cmp
and
sub
adc
push
or
mov
loopne
push
mov
xor
add
stos
mov
or
dec
sahf
push
lcall
mov
ret
pop
ljmp
jnp
fisubs
loopne
rcrb
mov
lcall
xchg
mov
inc
daa
or
not
xchg
roll
jmp
mov
clc
test
jg
sub
pop
addr16
out
xchg
xor
mov
xchg
or
rclb
movsb
or
and
loop
cltd
mull
sbb
fmull
shr
dec
dec
sti
stc
ds
pushw
jecxz
shlb
pop
jg
imulb
scas
das
mov
in
cltd
cmp
pop
pushf
jns
popf
jmp
mov
add
and
popf
out
mov
adc
cmp
inc
test
imul
xlat
lods
arpl
arpl
mov
out
pop
pop
xchg
les
xchg
dec
sti
jae
call
inc
in
push
xor
sahf
jae
scas
jno
gs
loopne
push
loopne
dec
or
pop
mov
push
loope
dec
inc
mov
jae
incb
jo
and
or
sub
mov
fsubrl
das
mov
xchg
clc
ds
lret
iret
insb
xchg
inc
icebp
lret
xor
daa
imul
jle
xchg
pop
pop
gs
mov
pop
cmp
add
int3
jo
mov
or
jo
mov
add
sbb
inc
ror
or
sub
test
leave
push
mov
adc
ret
jge
leave
hlt
test
mov
sub
mov
test
mov
test
or
das
pop
in
ljmp
cmp
jp
pop
popf
and
sub
or
xchg
fildl
mov
mov
pop
pop
pop
xor
add
xchg
push
lret
shl
cmp
inc
mov
repz
out
stos
and
sahf
fxtract
icebp
jb
pop
rolb
iret
adc
inc
fstl
addr16
fwait
push
push
stos
pop
gs
xchg
test
and
sahf
pop
xchg
fcomps
arpl
pop
lret
negb
mov
shl
lret
sarb
mov
mov
pusha
adc
aas
rolb
pop
sbbb
test
mov
test
cmpsl
test
std
fstps
call
mov
mov
dec
stos
push
mov
mov
jns
repz
arpl
pop
pop
iret
or
jle
das
mov
push
test
jnp
mov
es
repnz
cmp
or
cmc
mov
pop
jae
je
jno
aam
shrb
movsb
mov
lods
loope
rcll
xor
daa
aas
dec
nop
pushf
sarb
int3
aas
inc
cltd
jno
push
int3
outsb
xchg
cmc
cmp
sar
daa
xchg
mov
add
or
mov
iret
jmp
push
ds
addl
sub
add
mov
fisubs
das
das
mov
add
fisubrl
test
inc
int
xchg
fistpll
arpl
mov
sbb
xchg
or
faddl
push
jns
dec
imul
std
cmp
clc
mov
int3
jle
xchg
inc
scas
loopne
cs
aam
push
fildl
neg
scas
add
out
imul
sub
addb
ret
cmp
sbb
insb
inc
rol
and
mov
xlat
fldenv
mov
mov
imull
fs
mov
mov
andb
jns
popa
in
bound
rcl
testl
dec
pushf
stos
cltd
mov
sub
test
movsb
out
shl
int
fimull
xchg
andb
dec
loop
movsb
cmp
inc
sbb
pop
in
mov
dec
fisubrs
pop
dec
mov
cmp
push
out
sarb
jnp
mov
daa
bound
les
iret
push
jge
sbb
jle
mov
mov
into
scas
pop
stos
cltd
mov
jo
jbe
cmpsl
fdiv
fmull
das
and
cmp
push
in
adc
add
test
dec
cmp
push
popf
or
push
aas
fldt
xorb
cmp
std
mov
push
roll
cs
cmp
jmp
jmp
mov
jl
mov
mov
sbb
jns
insl
daa
mov
mov
mov
enter
stc
clc
stos
mov
shll
lea
stos
push
lret
jae
mov
ja
xor
nop
addr16
fistpl
in
lea
sti
sub
jnp,pn
loopne
test
jae
ret
jbe
shll
fnstenv
and
pop
sbb
mov
or
shll
xor
adc
push
cmp
js
inc
pop
lods
ret
shl
inc
lahf
fs
out
pushl
ja,pt
sti
daa
xor
mov
jg
fcomps
mov
scas
mov
xchg
and
hlt
orl
xchg
and
xchg
pop
sub
cmp
push
or
mov
dec
add
inc
cmp
repz
sbb
les
lods
popa
insb
sarl
divl
out
cmp
fcompl
rolb
repnz
jmp
imul
cmpsb
push
dec
imul
dec
idivl
bound
pop
rcrl
fcmovu
xor
aaa
add
fsts
pop
add
pop
mov
in
jmp
mov
imul
aaa
mov
cmp
jns
jae
mov
dec
jp
cmc
outsb
cmp
sub
cmpsb
in
loop
or
enter
test
push
je
pop
lock
or
stos
inc
adc
mov
push
lock
imul
cmp
or
and
adc
and
inc
sub
cmp
shlb
int
push
mov
xchg
push
push
or
mov
push
push
push
lahf
data16
pop
loope
xlat
orl
icebp
stc
mov
mov
xor
sub
xchg
adc
mov
xchg
fucom
push
mov
sub
arpl
leave
mov
es
xchg
pop
mov
and
mov
add
lods
sbb
rorb
nop
std
pop
adcb
pusha
ljmp
jne
add
mov
mov
cs
mov
push
adc
fsubr
test
jnp
mov
sbb
movsb
xchg
loope
cld
xchg
jb
mov
test
aam
pop
push
xor
fwait
clc
mov
aaa
push
scas
adc
push
aad
adc
pop
movsb
sub
xor
sub
lret
sub
push
stos
repnz
sub
aad
cmp
xor
cmpsl
jns
fldenv
adc
and
fnclex
mov
out
arpl
loopne
mov
insl
fiadds
mov
jns
pusha
jle
jmp
push
cmp
xchg
negl
lret
aad
mov
xchg
icebp
pop
outsl
fcomip
fnstcw
lods
addr16
cmpsl
repz
stos
or
shll
jge
adc
push
jae
mov
add
lea
mov
sbb
aas
inc
cld
and
int
cmp
test
test
ror
sbbl
les
push
ret
sub
push
clc
dec
add
fisubl
or
inc
mov
or
mov
cld
negl
jl
dec
insl
out
sbb
popf
pop
out
fwait
jp
cld
aaa
les
iret
xchg
mov
mov
ljmp
jns
mov
pop
cwtl
frstor
popa
pop
sbb
push
mov
dec
sahf
shll
mov
xchg
push
movsl
mov
sub
hlt
pop
mov
cwtl
inc
out
mov
mov
dec
or
adc
cwtl
dec
icebp
enter
pusha
mov
ljmp
jns
dec
push
jp
mov
dec
jecxz
mov
ret
push
testl
sbb
xor
rcr
fistpl
fstps
rcr
xchg
mov
pop
pop
xchg
out
outsl
adc
mov
roll
xchg
lret
inc
adc
jge
xor
adc
shll
lahf
mov
enter
mov
pop
pop
mov
rcrl
roll
push
jnp
mov
pop
jmp
iret
sub
xor
test
jp
out
in
cltd
mov
add
jl
push
je
jg
sub
fdivl
mov
popf
xor
dec
adc
push
dec
add
imul
lahf
add
adc
fimuls
xor
data16
jns
aam
aas
les
inc
call
mov
fcomip
cmp
sbb
sub
dec
insb
roll
in
xor
push
loop
and
loop
jp
lods
ret
or
xchg
xchg
ljmp
jnp
subb
das
pop
sbb
flds
mov
add
add
jmp
loope
shrl
cli
push
imul
leave
cmp
cmp
mov
mov
fcmovnb
mov
push
int
jo
pop
andb
repz
subb
push
xor
xchg
roll
cld
ljmp
mov
push
jecxz
dec
cmp
inc
mov
int
push
scas
sbb
imul
bnd
mov
in
lahf
xor
lret
mov
jbe
pop
inc
loop
push
cmp
shr
push
dec
or
mov
pushf
pop
lock
xor
inc
or
leave
out
jp
jl
inc
aas
iret
in
aad
cwtl
xor
or
sahf
out
sahf
sub
adc
jne
in
mov
cmc
add
jecxz
jno
mov
cs
scas
cs
mov
or
or
pop
cmpsl
inc
push
dec
rolb
test
in
pop
ljmp
mov
sbb
push
jmp
cmp
xchg
pushf
xorb
mov
sub
jmp
daa
bswap
loop
jmp
xor
imul
leave
lcall
mov
cli
mov
and
cmpsb
add
fdiv
push
addb
xor
jmp
dec
dec
jmp
push
or
push
adc
frstor
scas
jnp
enter
push
xchg
dec
dec
xchg
rcll
cmp
mov
adc
stc
cwtl
push
call
sahf
jp
inc
xor
xchg
pushf
hlt
and
pop
leave
pop
sub
jno
cld
shl
gs
cmpsb
jae
and
emms
mov
or
and
insb
test
iret
imul
sub
mov
pop
mov
adc
int3
jp
dec
fnstsw
push
add
and
cmp
addr16
adc
sub
xor
bound
in
loop
shll
out
xchg
xorb
xchg
pop
jp
push
mov
pop
scas
adc
jecxz
leave
sbb
fs
jle
pusha
out
dec
aam
push
outsb
add
sbb
lods
sub
lea
lock
and
aam
leave
jns
aad
ret
jle
jmp
push
mov
notl
add
je
pop
jo
mov
mov
ljmp
mov
in
dec
gs
and
adc
jns
cs
repz
or
stos
aas
call
mov
int3
mov
incb
test
jmp
arpl
pop
pop
das
cli
fadds
xchg
cmpsl
roll
adc
popa
sarl
mov
jno
movsl
mov
and
fninit
out
lods
bound
and
and
pusha
jp
jnp
stos
aad
mov
mov
fmulp
cmp
dec
add
jg
dec
dec
push
mov
inc
cld
mov
sub
or
and
xlat
add
push
es
fstpt
dec
mov
std
aad
aas
filds
shlb
adc
cmp
into
repz
xchg
fwait
stos
sahf
pushf
lea
mov
pushf
sub
cmp
mov
push
mov
repnz
sbb
mov
inc
or
out
pop
cli
add
popf
aam
repz
jle
repz
and
xchg
into
lret
lret
push
aad
call
arpl
pop
cmpsl
mov
sub
arpl
bound
or
pop
aad
fidivl
shrl
sbb
and
les
lds
or
pop
push
dec
icebp
clc
rcrl
xor
xor
stos
xchg
mov
outsb
push
dec
lret
das
pop
loope
dec
lds
inc
mov
imul
mov
dec
lock
gs
jl
cld
int3
bound
nop
push
js
lds
sarb
mov
out
sbb
sahf
add
jo
dec
cld
adc
or
pop
subb
pcmpeqw
cld
xor
mov
adc
xor
push
loopne
sub
aam
push
test
cld
push
dec
popa
adc
loopne
cmp
or
loope
push
dec
inc
hlt
dec
xchg
fstps
cmp
fistpl
push
cmp
outsb
sub
jge
rorb
lods
popf
xchg
pop
sub
cltd
pusha
mov
cld
xchg
inc
xlat
pop
mov
pop
mov
pop
jg
arpl
stos
int3
xchg
jne
adc
pop
pushf
mov
inc
lret
inc
ja
test
mov
push
mov
and
sub
gs
xchg
outsl
dec
int
andb
ret
fucomip
xor
int3
add
jb
dec
aam
cmp
sub
adc
out
push
add
and
mov
inc
sub
xor
sub
add
jbe
ss
das
xor
sti
addr16
dec
lcall
push
lds
dec
dec
orb
enter
mov
in
push
test
xchg
out
scas
mov
jmp
mov
xchg
pop
scas
imul
sbb
mov
mov
scas
mov
xchg
add
lret
inc
aad
negb
scas
jno
mov
and
call
sbb
es
jne
push
ljmp
add
iret
jg
push
add
and
sbb
ss
enter
jnp
pop
std
sbb
mov
mov
cmp
jne
pushf
enter
pop
fcomp
adc
adc
pop
mov
push
cmpsb
subl
mov
jne
imul
jae
mov
and
aam
cmp
int3
jp
or
sahf
imul
test
iret
xchg
inc
outsl
loop
jb
inc
bound
mov
sbb
cs
mov
in
test
aam
pop
orb
das
insb
vpaddq
jno
je
mov
xor
call
ja
loope
jp
clc
cld
lods
rep
pop
inc
out
xorb
leave
cltd
mov
scas
sar
mov
add
mov
xchg
dec
add
push
pop
jae
call
push
inc
xchg
test
push
aaa
std
inc
pop
or
sub
insl
mov
or
jmp
pusha
xchg
mov
pop
call
fwait
vcvtsd2ss
push
jae
ds
push
push
mov
stc
call
jp
stos
sbb
inc
icebp
inc
add
xor
sbbl
sub
fnstcw
xchg
cltd
jg
mov
dec
xchg
aaa
loop
mov
out
xor
adc
stos
xchg
clc
pop
cmpsb
out
js
imul
xor
sub
add
stos
jbe
les
fcom
push
or
cs
cmpb
and
jno
xchg
push
data16
cmp
daa
int3
mov
int3
fst
not
xchg
out
pushf
ret
sub
dec
divl
jmp
movsb
mov
xchg
ja
or
pop
outsl
push
pusha
push
fwait
adc
pop
add
mov
dec
imul
mov
or
jcxz
cmp
mov
stc
sub
imul
cwtl
out
stc
call
dec
or
andb
jns
aad
xchg
mov
out
in
adc
cmp
cmp
xor
mov
adc
push
imul
testb
and
pop
mov
inc
mov
pop
cmp
scas
popa
repz
dec
mov
or
xchg
popa
cmpb
mov
pop
and
in
dec
cmp
mov
pop
xchg
mov
stos
or
lods
add
lock
push
int
in
js
pop
push
mov
and
dec
mov
cli
lcall
xor
lock
dec
sub
jecxz
inc
jne
mov
imul
and
jbe
or
add
jno
popa
lods
push
pushf
inc
mov
pop
orl
rorl
and
adc
add
jno
popa
lods
push
pushf
inc
mov
pop
orl
rorl
and
adc
add
jno
popa
lods
push
pushf
inc
mov
pop
orl
lock
cld
adc
int3
jno
popa
lods
rcrl
cmp
xchg
repz
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
mov
fs
mov
xchg
push
aas
cmp
das
pop
dec
dec
shrb
outsb
jg
mov
fmulp
into
iret
out
out
mov
add
pop
pop
das
cs
pop
cmp
outsb
jg
xchg
mov
into
imul
in
femms
cmp
push
dec
dec
cmp
sbb
mov
repnz
push
pop
out
push
add
aad
push
xor
jg
push
mov
aam
nop
in
lret
popl
adc
fistpll
fwait
add
icebp
loope
jg
shlb
xchg
xchg
adc
loopne
inc
inc
hlt
jne
fwait
mov
push
ljmp
pop
rorl
in
fmulp
loop
push
fwait
out
jp
out
enter
mov
jae
fisubrl
outsl
arpl
jno
in
push
mov
stos
out
xchg
jbe
jnp
outsb
xlat
xchg
cmp
cli
data16
jmp
push
sub
push
out
sub
dec
shlb
mov
rcrl
mov
out
out
out
femms
pop
ds
push
dec
inc
jle
outsb
jle
lret
popf
int
mov
jbe
mov
pop
sub
add
add
adc
out
test
out
mov
fwait
xchg
int
jnp
jp
dec
dec
cmp
or
call
lret
mov
lahf
cld
into
out
out
lcall
femms
pop
ds
cs
pop
dec
dec
pop
jle
outsb
jg
mov
fmulp
into
out
out
lcall
femms
pop
ds
cs
pop
dec
dec
pop
jle
outsb
jg
mov
inc
lds
and
loopne
xchg
push
jecxz
aaa
jae
pop
mov
lret
leave
fnstsw
hlt
adcl
adc
int3
icebp
add
test
xor
sbb
imul
adc
xor
lcall
js
outsb
push
ljmp
mov
fwait
mov
gs
jmp
pop
jns
sbb
mov
mov
push
or
sbb
mov
mov
push
mov
repnz
add
and
mov
adc
mov
cmp
jge
lock
imul
add
adc
aaa
jnp
sbb
ja
mov
dec
dec
stos
push
shrl
xlat
sbb
push
clc
dec
xchg
das
mov
iret
push
repnz
popf
outsb
lock
xchg
cmpsb
lahf
jb
je
stos
add
loope
rorb
mov
mov
lret
cwtl
cld
addr16
dec
fsts
rcrl
mov
mov
icebp
roll
into
test
sub
addr16
ljmp
push
inc
add
out
mov
rol
and
test
inc
add
rcrl
lods
ljmp
and
xchg
push
mov
ret
cmp
pop
leave
pop
cmc
push
push
push
mov
fcomi
aam
lcall
cmp
lret
dec
test
fnstsw
xor
jmp
inc
push
jo
mov
les
xor
sub
dec
mov
mov
outsb
pop
outsb
mov
dec
jge
lea
pop
in
xchg
or
mov
mov
scas
xor
cltd
fadds
enter
mov
and
push
fldpi
jmp
cltd
push
jg
jmp
adc
sub
xor
push
sbb
in
or
fcoms
mov
mov
cmp
or
call
push
dec
add
mov
ljmp
je
sbbb
insb
out
xor
cmpsl
pusha
adc
iret
loope
lods
jl
mov
push
mov
adc
mov
xchg
xchg
jno
and
jnp
cmp
fcmovne
bound
das
out
das
add
cltd
sahf
pop
pop
outsl
scas
stc
push
sub
jnp
or
mov
cmp
jle
or
sub
mov
sbb
test
fstps
scas
inc
push
lods
mov
outsl
rcrl
inc
jecxz
stos
push
and
cwtl
sub
mov
cmc
push
jns
xor
pop
inc
les
mov
mov
or
movsb
es
xor
mov
and
fiaddl
frstor
stos
push
sub
mov
or
je
lods
loopne
aaa
ss
inc
stos
icebp
out
psubd
pop
ret
xor
je
pop
mov
clc
lock
or
mov
pusha
rcll
mov
nop
mov
add
xor
pop
out
mov
fnstsw
daa
and
sub
and
popf
mov
add
sbb
enter
je
and
insb
sti
sbb
dec
sbb
mov
in
sbb
dec
mov
rcrl
scas
ds
push
icebp
shlb
mov
sub
fwait
and
movsb
sbb
pop
cmc
pop
arpl
mov
sub
lock
data16
cmp
popa
mov
jg
or
sub
push
xor
js
fistpll
dec
aad
sahf
loopne
ljmp
movsb
pop
xor
pop
out
popa
xchg
call
pop
mov
push
insb
out
or
pop
mov
add
je
mov
jne
mov
stos
scas
push
xchg
jmp
dec
dec
push
xchg
imul
adc
or
or
jo
je
aad
jl
xorb
repnz
out
add
mov
nop
inc
andb
loop
in
hlt
xchg
in
mov
dec
xlat
and
xor
roll
jecxz
sub
negb
mov
adc
mov
adc
xchg
dec
movsb
xlat
sbb
pop
out
cwtl
icebp
sub
fmuls
ljmp
popf
cmp
push
pop
test
cmp
lcall
cmp
jae
pop
add
loope
adc
adc
in
pop
cmc
rol
js
dec
push
sbb
dec
sbb
rorb
mov
or
popa
jnp
adc
out
scas
mov
sub
sub
fisttpl
xlat
sub
adcb
pusha
repnz
pop
aaa
sti
hlt
xorl
xor
bound
rcrl
dec
mov
dec
cmp
out
cld
add
ja
shl
scas
pop
js
and
add
aas
out
adc
ljmp
insb
test
cli
iret
push
dec
es
push
fwait
inc
ds
sahf
jns
cmp
ljmp
leave
dec
dec
in
or
jbe
inc
dec
js
imul
push
xchg
lahf
push
leave
int3
jp
dec
ror
lds
daa
cmp
sbbl
push
adc
bound
icebp
pop
cmpsb
mov
xlat
jp
filds
lods
push
js
add
call
mov
or
pop
and
sahf
cmp
and
imul
inc
mov
rclb
and
lea
push
or
rolb
ds
ficomps
or
mov
pop
lods
movsl
dec
jecxz
int
lea
push
adc
imul
cmp
test
mov
lds
in
and
test
pop
ds
or
cmp
xor
sub
xchg
push
add
cmp
sub
imul
sub
push
add
sbb
xor
dec
push
mov
xchg
pop
inc
insl
and
dec
outsb
push
sub
sub
out
jne
scas
pop
decb
push
and
das
and
imul
jns
xchg
rorb
negb
loope
or
sahf
jnp
repnz
into
and
xchg
pop
pop
fnstcw
mov
insl
stos
inc
push
bound
sbbb
into
or
sarb
inc
mov
xchg
or
inc
popf
addl
pop
sub
adc
outsl
dec
inc
dec
xlat
xchg
cmpsl
xchg
jnp
inc
addr16
fists
mov
cmp
cmp
popf
rolb
pushl
jbe,pn
cs
cld
idivb
add
sbb
adc
or
push
cld
leave
fstpl
loopne
mov
add
xchg
das
insb
into
inc
loopne
sti
cld
lods
imulb
pop
nop
jle
mov
mov
inc
cmp
pop
rclb
adc
push
insb
mov
cmpl
mov
jnp
pop
sub
and
nop
and
dec
adc
punpcklwd
mov
ret
dec
xor
ret
dec
iret
pop
xor
push
sbb
pop
mov
ficoml
mov
cld
add
jae
les
mov
mov
clc
mov
add
mov
xchg
pop
mov
or
xchg
and
aam
xorl
daa
fldcw
or
pop
lahf
mov
pop
clc
dec
add
push
dec
and
frstor
cltd
shrl
ficomps
loopne
in
mov
mov
mov
lock
and
pop
sub
dec
xor
mov
pop
mov
insl
cmp
inc
call
jp
stos
lcall
scas
movsl
mov
es
cmp
aas
adc
in
adc
lret
sub
cmp
dec
cmp
icebp
out
sub
dec
and
iret
inc
fwait
inc
shrb
push
stos
enter
out
or
sbb
repnz
out
dec
out
bound
cld
push
sarl
in
scas
adc
arpl
jno
in
cwtl
clc
push
int
call
push
xchg
jp
leave
pop
test
insb
je
repnz
or
mov
cltd
scas
fmulp
inc
xchg
ret
lahf
ja
lea
mov
push
cli
cwtl
jmp
cmp
sti
arpl
sbbl
cltd
shll
dec
mov
xor
mov
push
push
sub
sbb
cmc
cld
xor
pop
mov
sub
arpl
and
jo
push
jne
insl
int3
and
mov
push
cmp
and
xchg
jg
sar
stos
jl
repz
xor
cmc
out
push
addr16
mov
cmpb
xchg
dec
int
xor
movsl
inc
insb
je
push
jae
mov
ret
scas
in
and
imul
rcrl
imul
lcall
inc
cmp
stc
lea
adc
loopne
lret
sbb
sbb
mov
jbe
or
leave
lods
jns
jnp
mov
xor
int
lret
mov
int3
mov
jle
loope
stos
xchg
je
ret
test
push
aaa
pop
inc
xchg
sbb
push
sarl
in
in
fstl
stc
outsb
inc
dec
xchg
cmp
ja
lods
mov
mov
leave
gs
hlt
scas
mov
cmp
push
mov
mov
subb
out
sti
mov
mov
xor
dec
pop
ljmp
xchg
mov
cs
ja
inc
mov
xlat
xacquire
call
test
or
fs
dec
inc
and
ret
and
test
inc
sti
ret
cmp
push
imul
jmp
or
ret
loop
push
je
jmp
iret
jmp
mov
or
xchg
push
dec
push
adc
hlt
xor
jp
sub
jb
mov
and
or
shrb
lea
inc
lret
not
shll
and
add
addr16
and
and
or
fdivs
out
out
cmp
mov
hlt
push
dec
adc
nop
mov
je
cmp
xchg
dec
inc
or
adc
fwait
movsb
scas
push
cmc
or
outsb
popa
push
pop
mov
daa
lock
mov
mov
dec
mov
pop
insl
stos
lea
xchg
dec
dec
cmp
das
xchg
mov
sti
or
mov
in
xor
scas
fimuls
orl
dec
pop
addr16
or
dec
sub
mov
ret
add
aad
add
sti
addr16
jns
xor
add
lret
cmp
xchg
sub
xlat
jno
jp
aas
bnd
cli
sub
jmp
sub
xchg
lahf
dec
jcxz
mov
or
movsl
sub
nop
test
std
jae
outsb
in
adc
cld
or
sbb
sahf
jmp
clc
mov
cmpsb
cmc
push
hlt
std
adc
or
sub
adc
out
mov
leave
dec
faddl
sarl
test
xchg
or
mov
add
std
fiadds
mov
fists
add
clc
mov
aas
nop
jmp
lcall
push
xor
dec
dec
xchg
ret
aam
cld
jl
inc
movsl
inc
cmp
std
adc
daa
arpl
mov
std
pop
and
jl
jle
in
or
mov
xchg
mov
adc
mov
repnz
pop
xor
pop
sbb
hlt
and
cmp
aas
leave
add
call
cmc
xchg
push
push
or
mov
mov
es
cli
sbb
cmp
cmp
outsb
pop
sub
out
and
pop
dec
dec
push
insb
call
lret
add
and
cmp
dec
cs
hlt
movb
fsubrs
push
push
into
add
mov
or
push
sar
pop
gs
add
dec
xchg
sbb
jecxz
mov
xchg
pop
ficoml
sti
psubw
popf
pop
insb
fwait
rcl
fistpll
xor
jp
mov
adc
xchg
push
loope
xor
outsb
test
mov
ret
mov
sub
je
or
push
ja
xchg
cmp
popf
mov
popa
sub
pop
sbb
adc
inc
arpl
fcmovnu
and
add
hlt
inc
mov
and
jge
ret
xor
cmp
repz
inc
adc
data16
call
inc
sub
xor
bnd
pushf
cmp
shrl
mov
pop
inc
test
aam
add
mov
test
mov
fdivs
cmp
push
inc
insb
mov
insl
push
hlt
or
test
jo
push
push
xor
jl
push
add
pop
fstp
test
int3
jne
outsl
mov
push
outsb
pop
cli
jnp
lods
inc
loopne
push
or
repz
inc
out
jb
jne
mov
xchg
sbb
cs
out
ret
lret
mov
push
dec
pop
outsb
mov
jle
and
mov
in
cmc
dec
test
sbb
and
and
arpl
xchg
adc
lahf
outsb
cmp
xchg
jmp
xor
mov
aam
pop
leave
aam
enter
lods
insl
mov
lods
popf
fistps
fcmovnu
jb
aad
jmp
jns
imull
dec
out
icebp
push
lcall
jp
jbe
xchg
scas
xchg
jo
mov
jge
add
mov
xlat
cmpsl
adc
fcomip
and
int3
sub
mov
adc
mov
movsb
lods
fdivrl
arpl
mov
cmp
dec
cld
stos
mov
insl
movsb
sub
andl
push
adcl
adc
push
shll
push
daa
ja
inc
push
xchg
jle
add
xchg
xor
dec
test
lret
shlb
sbb
iret
xchg
pop
cmp
dec
mov
lret
mov
push
jecxz
outsl
test
cs
outsl
mov
sahf
out
and
outsl
sub
out
xchg
lret
inc
outsl
adc
dec
xor
cwtl
int
xor
xchg
mov
or
add
adc
adc
push
pop
lcall
roll
mov
ficompl
loope
addb
jnp
fwait
imul
xchg
or
or
xchg
das
sub
lock
inc
dec
xlat
xlat
adc
pop
adc
add
mov
popfw
push
cli
mov
sbb
mov
es
jne
aas
std
das
daa
popf
scas
dec
sbb
mov
js
lods
add
in
dec
lds
or
xchg
add
inc
mov
sahf
cmpsb
aad
cmp
cmp
fs
faddl
mov
repnz
xor
in
hlt
or
shll
cwtl
sbb
insl
andb
pop
inc
sarl
mov
mov
cmpsb
push
xchg
in
lock
lret
cmc
fs
lret
arpl
xchg
inc
and
jo
push
mov
in
mov
xchg
adc
or
dec
xchg
sub
dec
adc
lea
jno
or
loopne
xchg
jns
sbb
lea
adc
cwtl
in
jp
stos
das
inc
pop
mov
mov
add
mov
iret
jbe
aas
jne
jg
scas
dec
and
inc
jl
call
pop
fucomi
repz
xor
jg
add
xor
push
xor
test
gs
xchg
lahf
stos
shrl
cmc
add
cmovs
dec
mov
push
jg
xlat
push
xchg
push
inc
ds
mov
mov
dec
and
imul
insl
inc
sbb
cmp
shlb
data16
movsb
adc
mov
aad
popa
test
out
call
dec
and
or
sbb
pop
add
xor
lret
pop
iret
adc
cwtl
xor
mov
cmc
mov
push
jnp
shlb
outsl
test
jge
cwtl
push
daa
ljmp
out
shlb
fidivrs
adc
jne
das
movsb
xor
xor
in
aam
sahf
dec
ret
adc
out
fs
inc
ss
out
lahf
pop
push
jne
dec
subw
jnp
fistpl
sub
mov
stos
imul
call
mov
mov
jmp
mov
lret
push
xchg
pop
pop
fimull
add
data16
mov
jge
add
fstps
mov
mov
pop
xchg
push
imul
addl
lods
je
fisubl
push
mov
mov
rcrl
pop
or
fst
or
mov
mov
aad
push
out
in
test
xor
sti
aaa
fwait
test
hlt
outsl
enter
pop
imul
mov
mov
xor
notb
stos
sbb
push
adcl
xchg
cmpsb
stc
mov
std
dec
mov
arpl
push
or
jb
push
movsb
adc
push
popf
jmp
mov
cwtl
cmp
jnp
ret
ja
js
pusha
push
push
or
daa
hlt
sub
shl
push
aaa
xchg
rorb
or
cmp
mov
xchg
popa
lret
mov
test
out
out
movsl
pop
inc
shlb
mov
int3
mov
cmc
vmovntdq
pop
sub
test
pop
pop
mov
jecxz
sub
rcrl
lea
or
ja
pop
rorb
cmp
adc
inc
pop
push
mov
add
inc
les
push
in
hlt
pop
push
addr16
movsl
int
rcl
add
ja
std
jno
push
sahf
arpl
fistpll
mov
jno
jmp
rorb
xchg
fbstp
stos
ficompl
syscall
lea
mov
pop
or
xlat
xchg
add
jle
dec
sbb
adc
pop
or
in
inc
fmuls
and
mov
lock
hlt
mov
jno
popf
xor
test
mov
mov
test
into
push
sbb
push
int3
enterw
outsb
sbb
adc
jmp
aaa
or
ljmp
and
mov
insb
clc
xchg
rcrb
xor
fdivs
dec
sub
and
stc
je
dec
push
sbb
jp
out
stos
lods
movsl
cmp
ds
pushf
dec
das
xchg
or
dec
das
dec
mov
xchg
inc
cmp
pusha
test
push
or
sbb
cmp
cmp
aas
push
or
icebp
orb
arpl
dec
mov
aaa
jmp
mov
out
jle
push
rclb
jecxz
xor
inc
mov
popf
mov
xchg
test
mov
cli
inc
sbb
not
ds
or
xchg
mov
daa
sbb
pop
sbb
pop
or
pop
mov
pop
mov
jg
ss
fmul
es
ja
dec
test
rolb
mov
scas
inc
sub
lods
enter
dec
inc
mov
imul
mov
stc
mov
mov
fs
or
jmp
push
test
mov
fxch
push
mov
add
sbb
scas
adc
cmp
adc
loopne
insl
inc
outsb
jg
jl
std
dec
push
jnp
adc
jno
cmp
aam
lea
into
negb
mov
mov
mov
lahf
cmp
add
xor
cmpsb
add
xor
mov
push
fiadds
jge
add
and
lods
mov
push
test
cmp
inc
jg
loope
push
repz
push
xchg
mov
cli
mov
mov
fsts
cmc
fmulp
jne
lea
shll
lods
adc
and
mull
mov
sbb
cmovp
out
aaa
popfw
sti
inc
mov
repz
mov
imul
jmp
int
mov
mov
sub
jb
jecxz
mov
cli
repnz
ja
inc
rclb
push
std
inc
inc
fwait
xchg
gs
popa
push
test
fucomip
xchg
sbb
icebp
adc
and
push
test
stos
xlat
add
push
sbb
dec
mov
loopne
fcomip
xlat
sub
bnd
mov
and
or
rolb
push
outsl
repz
nop
push
jge
inc
xchg
mov
pusha
xor
gs
inc
dec
adc
sarb
bound
cmpsl
and
push
mov
add
add
movsb
xor
scas
insl
or
into
ret
xchg
gs
sbb
and
mov
push
sbb
mov
lea
loope
cmp
shlb
inc
jge
aas
cmp
shr
call
out
jcxz
xchg
sub
push
jnp
xchg
jl
cmpsl
pop
cmp
add
add
xchg
mov
fnsave
jne
outsb
lods
mov
dec
addr16
lea
and
aas
mov
cmp
adc
sbb
daa
jg
lcall
or
jmp
gs
jae
cmp
mov
insl
test
lock
mov
dec
xor
mov
inc
inc
inc
inc
sbb
adc
xor
jns
dec
xor
aam
je
hlt
inc
cwtl
mov
rcrl
test
and
mov
mov
nop
les
push
jmp
push
jl
enter
ss
ret
add
ret
stos
fildl
mov
hlt
or
insl
aad
addl
scas
jbe
jns
push
inc
xchg
in
ljmp
loop
hlt
dec
mov
adc
repnz
jbe
mov
jne
jg
arpl
sarb
mov
test
outsb
aaa
sti
xor
xor
fs
arpl
into
out
out
lcall
femms
pop
ds
cs
pop
dec
dec
pop
jle
outsb
jg
mov
fmulp
into
out
out
lcall
femms
pop
ds
cs
pop
dec
dec
pop
jle
outsb
jg
mov
fmulp
into
out
out
lcall
femms
pop
ds
cmp
dec
pop
jle
outsl
jnp
mov
mov
out
out
aas
push
femms
mov
das
cs
sub
and
popf
iret
mov
std
mov
adc
outsl
sub
aas
jge
insl
mov
mov
int
std
scas
in
pop
sbb
outsl
sub
aas
jge
insl
addr16
cmp
lods
sbb
scas
in
cmp
insb
push
pop
dec
or
imul
insl
mov
cmp
flds
or
incb
and
setne
imulb
movsb
xor
push
mov
rdmsr
xor
and
test
cmp
push
aas
jge
xchg
and
stc
rcll
inc
mov
pushf
insb
or
dec
repz
outsl
in
minps
testl
add
inc
adc
mov
sti
ret
xchg
shl
push
nopl
subl
and
ret
imul
fldl
xor
and
jg
int3
or
shrl
pop
xchg
invd
jl
cmp
mov
data16
inc
ss
cmp
mov
test
out
lods
jnp
test
cltd
sbb
pop
sub
or
lock
jmp
mov
mov
cwtl
scas
popf
pop
jno
sbb
inc
insl
xor
push
decl
xchg
fsubrl
cli
idivb
cli
in
cmp
popa
jg
pop
inc
data16
push
or
mov
mov
fxch
mov
int
std
scas
in
pop
sbb
outsl
sub
aas
jge
insl
fistps
out
lods
lahf
fisttpll
in
pop
sbb
outsl
sub
aas
jge
insl
fistps
das
jl
sbb
shrl
mov
imul
mov
call
aam
cmp
out
jecxz
and
fs
mov
xor
repnz
jno
ds
mov
sub
mov
push
leave
outsb
test
fisttpl
push
xor
and
mov
xchg
lret
xchg
clc
sbb
sub
mov
xor
call
test
push
dec
xor
mov
out
ret
or
out
xor
stos
pop
jl
cmp
push
sbb
mov
push
cs
mov
es
fsub
cmp
xor
push
inc
push
mov
pop
jbe
clc
jne
xchg
lcall
cmp
lahf
addr16
arpl
orl
mov
roll
outsl
jg
sahf
cmp
out
cmp
mov
loope
lods
cmc
mov
divb
int
fiaddl
loopne
cmpsl
sub
xchg
lret
mov
xor
lret
sbb
lea
std
fistl
jecxz
or
lods
loopne
sub
leave
fistpll
sub
stos
imul
cmp
mov
mov
mov
mov
xchg
test
or
mov
cmc
fnstcw
cmp
movb
mov
aad
xchg
les
imul
in
mov
ret
icebp
jl
cmp
movsb
mov
idivb
mov
cmc
and
mov
push
dec
push
push
popa
sub
add
sub
cmpsb
es
aas
xor
or
mov
leave
jg
push
pop
inc
jnp
or
xor
stos
ret
jecxz
js
out
jnp
sahf
dec
mov
push
add
mov
mov
mov
cmp
jmp
push
push
dec
xor
iret
test
in
mov
in
shll
push
inc
cli
scas
adc
lods
mov
aaa
and
insb
dec
mov
pop
out
adc
dec
pop
mov
xchg
xlat
lea
dec
lods
push
xor
and
push
adc
scas
adc
adc
or
aam
add
fldl
or
pop
jne
push
push
dec
mov
out
pop
dec
leave
fadd
je
xchg
cld
roll
and
dec
in
in
cmpsb
fisttps
sbb
ficoml
xchg
out
ja
dec
dec
aad
fcmovbe
dec
aas
sub
and
pusha
push
test
addl
inc
jno
xchg
out
shrb
jno
push
xchg
shlb
pop
xchg
jb
repz
push
pop
sbb
ds
out
pop
or
mov
xorb
mov
xchg
stos
addr16
std
jno
cmc
pop
jmp
insb
mov
mov
and
lock
cltd
pop
mov
sub
and
or
es
pop
jns
psubsw
sbb
cld
sbb
jle
pop
mov
dec
jg
js
jns
jmp
out
lcall
outsb
fwait
jl
outsl
xlat
les
mov
jmp
xlat
cmp
in
mov
push
and
std
and
xorl
out
fsubrl
mov
mov
and
push
push
insl
pop
leave
inc
aas
pop
sbb
rcrl
adc
inc
push
enter
dec
loop
inc
inc
andl
push
add
dec
and
lret
pop
imul
ret
insb
ror
sti
popa
dec
pop
cmp
movsl
and
sub
shrl
cmp
sbb
rorl
dec
shlb
imul
into
push
stc
mov
shlb
in
cmp
shl
pop
popa
insb
in
cld
inc
mov
scas
push
and
xchg
nop
adc
mov
mov
cs
fwait
test
and
jne
test
adc
shll
mov
shll
mov
adc
mov
xor
jb
pusha
and
adc
mov
js
je
pop
test
pop
mov
inc
xchg
stc
push
jp
jo
and
test
movsb
loope
lret
ret
mov
fwait
pop
pusha
pop
inc
and
iret
scas
xchg
stos
jge
imul
in
call
popf
fisttpll
imul
int3
lret
dec
cmp
xchg
pop
imul
inc
inc
mov
jmp
push
dec
loope
test
loope
xchg
adc
std
fsubrl
jne
or
jle
jae
dec
hlt
out
push
and
sbb
movaps
into
lods
dec
mov
enter
stc
mov
loop
jo
std
loope
pop
lods
testb
xchg
inc
aas
jp
xor
xchg
outsl
push
ja
jae
xlat
sub
rorb
sbb
mov
aam
js
fsubrl
jle
mov
xchg
shrb
mov
repz
mov
scas
pusha
add
sti
inc
pop
push
add
lret
cmp
outsb
cmp
inc
xorb
push
stos
mov
insl
pushf
add
jnp
arpl
cmp
push
xor
sub
divb
xchg
enter
pop
adc
stc
xor
mov
pop
sahf
int
xchg
and
inc
pop
rep
pushf
xor
les
mov
pop
adc
sub
jbe
jp
jns
mov
and
push
xor
jne
pop
nop
arpl
imul
imul
jne
dec
mov
jnp
cmpsb
sub
jl
dec
pop
ljmp
negl
fs
orl
fnstcw
jmp
or
lods
or
jl
pop
sbb
mov
push
fsubrp
xchg
jb
jle
mov
call
xor
std
outsb
push
aaa
or
lcall
jg
in
xchg
test
mov
ret
imul
push
dec
nop
mov
push
cmp
pop
test
lods
mov
int3
jmp
lods
jle
add
dec
xor
and
loopne
int
mov
jge
aaa
clc
add
ds
in
lock
rcrb
test
pusha
xchg
loop
add
adc
jecxz
push
mov
mov
dec
dec
cwtd
or
pop
push
inc
xchg
fmulp
fadd
repz
and
inc
sbb
cmpsb
xchg
and
add
fwait
js
adc
sbb
push
in
push
add
or
jns
push
mov
cmp
jmp
jae
in
into
imul
sbb
ss
loop
pop
dec
out
movsl
scas
jle
fnsave
lods
jge
xor
gs
sub
or
out
adcl
mov
xchg
lds
jae
pop
lds
xchg
lds
stc
dec
sub
adc
jne
inc
mov
push
sbb
mov
add
push
adc
sbb
dec
fbld
jo
outsl
aam
imul
sub
fisttpll
xlat
mov
or
cmpsb
pop
push
in
push
and
mov
jg
cmp
pop
je
dec
pop
or
dec
mov
pop
jp
out
or
andl
sbbb
xor
jle
addb
xchg
mov
xchg
jno
insl
into
cmp
les
lods
or
jae
test
push
cmpsl
inc
movsl
cwtl
jecxz
or
or
xchg
sti
sbb
add
in
pop
fsubr
aas
add
jp
inc
cmp
les
dec
xor
pop
je,pt
inc
add
fadds
sbb
cwtl
mov
xchg
out
ds
mov
sub
std
in
mov
fisubl
inc
xchg
gs
xchg
ljmp
xchg
mov
testl
dec
testb
das
sbb
arpl
xor
push
mov
mov
push
dec
mov
setne
push
ljmp
aaa
xchg
fildl
push
out
mov
lds
cld
adc
sbb
es
cmp
cmc
fwait
add
cmpsl
out
loope
out
stc
and
lahf
mov
cmp
repz
idiv
sub
cmp
jg
out
mov
imul
jne
mov
ds
cmp
movsb
imul
cmc
or
pop
jno
push
je
out
jno
roll
mov
ljmp
jno
pop
jl
inc
test
cwtl
push
je
xchg
pop
test
mov
sarl
add
mov
mov
addb
cmp
jb
loopne
cmp
shl
sti
int
lret
cmc
scas
pop
out
hlt
push
cs
xchg
pop
dec
outsb
loope
adc
das
pushf
mov
movsl
shll
in
dec
cmp
loop
sub
sbb
add
inc
pop
ffreep
cwtl
sbb
mov
cmp
or
sbb
lods
rcrb
dec
inc
rcl
stos
xor
es
xor
cmp
push
dec
pop
push
outsb
ret
clc
cmp
jge
sub
int3
ret
jo
pop
pop
ficomps
push
shll
lds
stc
dec
xchg
dec
jl
or
xchg
mov
insb
imul
cli
jo
dec
pop
sti
or
add
sbbb
jle
int
repz
jbe
lret
in
mov
dec
inc
xor
dec
mov
xor
push
jb
or
or
mov
cmp
lods
in
out
pop
pusha
ja
hlt
pusha
sti
das
adc
push
or
jbe
jmp
pop
pop
cld
insl
cmpsl
push
xchg
sbb
or
call
in
ljmp
xor
cmc
push
sbb
pop
cmpsb
cmp
xchg
cmp
dec
dec
negl
jnp
popf
lock
and
jbe
cmp
jnp
js
scas
imul
push
push
orl
std
mov
testl
scas
leave
and
ror
inc
pop
fcom
das
popf
pop
es
movsb
imul
sub
pop
nop
adc
stc
mov
shll
pop
dec
dec
mov
out
mov
loopne
or
in
and
push
lods
pop
jns
movsl
push
sbb
ds
and
cmp
ret
sub
or
fistpl
je
mov
and
add
iret
xchg
xchg
mov
jl
dec
mov
int3
adc
xor
or
je
ja
shlb
lock
sub
leave
cmp
mov
imul
cmp
push
or
jge
and
push
dec
arpl
xor
lret
mov
orb
xchg
add
and
mov
fwait
outsl
insl
lret
push
jge
scas
xchg
dec
mov
pusha
jae
or
sbb
sub
adc
inc
loopne
add
jnp
mov
andl
fldt
pop
notb
out
or
repz
out
out
sbb
xor
pop
shll
or
or
xchg
stc
add
test
loopne
pop
push
sbb
or
dec
dec
lds
lds
jnp
in
mov
imul
pop
or
dec
in
mov
test
jae
jl
imul
negl
stc
mov
lret
int3
sub
and
cmp
int3
popf
xchg
and
frstor
add
add
lods
in
ss
mov
jmp
xchg
dec
ret
mov
pop
jg
cmp
jmp
mov
jl
mov
or
scas
mov
mov
pushf
push
mov
jl
ljmp
pop
xor
push
push
fisubrs
jbe
sub
dec
sahf
rcrb
in
add
xor
pushf
js
or
mov
leave
lahf
jns,pn
loopne
dec
es
movhps
dec
jg
sahf
sbb
cld
int
enter
les
sahf
repz
or
adc
add
mov
dec
cld
mov
mull
inc
adc
pop
in
cmpsb
add
pop
mov
test
cmpsb
jno
xchg
xchg
mov
icebp
sub
mov
mov
jno
cmpsl
dec
sbb
push
mov
popa
add
adc
es
mov
push
mov
les
popf
cmpl
inc
je
cmp
add
inc
mov
popa
imul
aas
pop
mov
sahf
icebp
push
mov
mov
jmp
mov
pop
loop
mov
xchg
add
pop
dec
in
push
test
call
popf
xor
lcall
stos
xor
pushf
and
mov
call
rclb
imul
adc
aam
dec
mov
fidivrl
fwait
xor
lret
push
hlt
sub
repz
dec
jnp
adc
add
mov
aaa
movsb
jbe
cltd
jae
pop
icebp
std
fs
lea
faddp
cmp
enter
add
lods
addr16
mov
adcb
jg
shr
lret
push
mov
cmpsl
sbb
or
dec
stos
push
cli
aas
mov
xchg
out
stos
xchg
stos
add
mov
push
popa
mov
test
inc
addr16
mov
out
jmp
mov
gs
mov
addr16
sbb
roll
gs
xchg
cmpsb
add
add
jp
aaa
dec
es
sbb
aam
sbb
imul
dec
mov
lea
mov
fidivs
xor
or
or
add
test
jae
int
inc
mov
mov
dec
xchg
pop
or
fidivs
repnz
dec
mov
lea
inc
ds
setle
shl
arpl
stos
mov
mov
repz
ljmp
fimuls
or
adc
or
push
dec
xor
xor
or
lret
imul
daa
in
btr
and
lret
pop
subl
rcrb
pop
fisttpll
jbe
dec
mov
xchg
cs
jno
je
ret
shrl
jne
sti
cwtl
jecxz
sahf
addr16
mov
add
cmpsb
mov
dec
xor
ret
insb
push
mov
ds
aas
jle
mov
dec
jae
lahf
add
sti
add
pushf
insl
adc
push
enter
insb
and
shlb
insb
aam
add
hlt
idivl
subl
jg
jo
sbb
insl
shl
jle
lea
jno
les
and
std
inc
fadds
fmull
popf
mov
pop
add
sub
stos
sahf
dec
push
mov
xlat
cmpsl
rcrb
call
andb
das
sub
pop
adc
ja
cmc
fldl
or
pop
ja
daa
sbb
xchg
sbb
loope
fstpl
bound
add
cmc
sbb
push
js
popa
inc
xchg
pop
movsl
push
lds
sbb
mov
and
lods
arpl
sbb
mov
dec
jg
mov
mov
sarl
lcall
sbb
sarb
movsl
dec
enter
fistpl
mov
push
mov
pusha
insl
push
sbb
jg
aas
jns
adc
insb
leave
sub
lcall
xchg
mov
movsl
cld
mov
aas
pop
out
cmp
sub
scas
jl
movsb
jbe
sbb
out
fnsave
mov
adc
js
imul
scas
mov
cmp
cmp
outsl
push
cwtl
repz
mov
adc
push
in
rolb
leave
jae
imul
inc
scas
out
cmp
or
and
push
stos
mov
cld
daa
sub
xor
push
fsubrs
push
jo
lret
jnp
in
jnp
add
ja
xor
lds
and
mov
ds
out
mov
lods
scas
shlb
jae
or
iret
scas
pop
cmp
dec
mov
sub
mov
fnsave
sbb
xchg
shr
mov
add
inc
pop
inc
inc
sar
mov
mull
xchg
or
repnz
cld
push
pop
mov
popf
stos
adc
enter
mov
ja
jl
test
dec
mov
mov
ss
adc
lock
fsubs
ds
adc
mov
int
push
test
push
jecxz
push
aaa
xor
mov
push
repnz
pop
sbb
mov
aaa
jns
rcrb
cmc
or
clc
leave
stos
out
sbb
aas
in
inc
add
dec
call
pushf
mov
pop
xchg
inc
xor
addl
in
lret
push
mov
pop
or
sbb
mov
xchg
xor
inc
aam
stos
das
push
cwtl
pop
fldenv
push
pop
sti
and
lock
dec
testl
lcall
sub
cmc
mov
out
test
xor
loopne
dec
jge
movsl
sbb
push
aad
lahf
sub
jno
loope
pop
xlat
mov
xor
cmp
sbb
cmp
dec
fstpt
dec
xchg
lea
cld
push
inc
pop
jae
jecxz
popf
inc
adc
stos
xchg
incb
jne
ss
jno
sbb
dec
daa
jnp
mov
xchg
push
insb
mov
dec
out
test
and
jge
sub
push
les
lods
pop
dec
loopne
push
mov
and
ss
xor
les
shlb
lcall
push
or
jmp
daa
mov
outsb
mov
xor
push
xchg
sbb
jle
cmp
sub
add
mov
add
in
lds
inc
sti
mov
push
insl
out
jns
push
fs
xchg
sbb
sbb
cmpsb
ljmp
and
mov
pop
mov
add
outsb
xor
sbb
movsl
cld
shrl
sub
fildll
popf
and
ss
xchg
push
lret
lret
jnp
mov
out
jne
sub
pop
mov
mov
or
mov
push
xor
xor
or
aas
out
push
sub
inc
out
jb
popa
xchg
jb
stc
dec
out
scas
test
cmp
lcall
cwtl
insb
inc
mov
inc
or
pushf
add
dec
xchg
ljmp
es
push
nop
pop
and
push
test
xor
sbb
cld
ljmp
aaa
inc
sub
std
dec
subb
dec
enter
cwtl
push
fists
ss
popl
push
jne
mov
and
das
addr16
mov
xor
fmul
in
cmp
je
xor
sbb
add
outsb
jge
push
sbb
adc
cmp
adc
push
arpl
aad
in
pop
rcrl
jg
outsl
mov
icebp
mov
test
dec
push
mov
out
push
lods
js
mov
push
lret
mov
and
inc
jns
add
jae
fs
js
out
adc
adc
dec
sahf
lahf
adc
pop
daa
push
cmp
or
sbb
addr16
out
les
cmp
xor
lcall
dec
inc
inc
inc
cs
cmpsl
outsl
cwtl
xchg
es
je
iret
insb
sub
mov
cmp
loopne
orl
cmp
clc
insl
das
lods
rcll
out
inc
jl
dec
cmpsl
mull
or
adc
ljmp
fsubrp
xor
sbb
lods
pop
repz
sub
sub
addr16
iret
cs
xchg
in
mov
push
mov
dec
shrb
or
js
lahf
dec
jmp
movsb
fwait
adc
adc
dec
arpl
je
out
mov
cmp
pop
outsb
push
inc
mov
dec
mov
imul
mov
push
xorb
and
jge
jbe
leave
ss
pushf
outsb
ds
inc
shll
cmp
push
dec
mov
cmp
rorb
mov
outsl
xchg
das
cmp
adc
inc
jae
add
imul
dec
mov
sub
fisubrl
lods
dec
mov
cld
daa
jmp
mov
cmc
subb
cmp
inc
inc
popa
sub
shll
sti
roll
xor
int3
je
out
repnz
scas
outsb
imul
loop
mov
sbb
sub
test
ficoml
in
scas
mov
or
push
inc
pusha
xor
jno
sub
test
frstor
rorb
cltd
lret
or
movsb
jb
pop
xor
mov
jne
cmp
dec
jns
rclb
arpl
adc
mov
in
in
test
push
jnp
jb
scas
mov
jl
fs
mov
push
mov
or
inc
loope
imul
lcall
roll
das
adc
inc
inc
test
outsl
add
shlb
std
mov
pusha
cli
mov
xchg
push
es
xlat
call
pop
popf
sbb
je
jno
stc
es
andl
or
or
fisubrl
xchg
pop
in
sbbb
lods
cmp
mov
sub
lahf
push
shlb
ljmp
xchg
mov
imul
cmpsl
push
lods
or
lock
pushf
jle
inc
pop
sahf
push
out
dec
pop
insb
cmp
shl
xor
sub
add
aam
mov
leave
inc
fnstsw
inc
nop
mov
loop
pop
or
out
je
or
xchg
test
dec
aas
lea
fisttpll
in
pop
sbb
outsl
sub
aas
jge
insl
fistps
out
lods
lahf
fisttpll
in
pop
sbb
outsl
sub
aas
jge
insl
fistps
out
lods
paddusw
in
pop
sbb
outsl
sub
aas
jge
insl
lret
popf
xchg
lea
fstpl
adc
mov
aad
outsl
pop
push
adc
ja
mov
inc
lods
xorl
negb
or
cmp
sub
pop
movsl
leave
xchg
ja
mov
inc
lods
aaa
fsubl
int3
pop
cld
pop
in
out
out
xlat
cmp
sub
pop
xchg
dec
xchg
xchg
jle
dec
mov
aas
int3
paddb
in
out
mov
or
pop
mov
and
push
shrb
or
push
shll
std
sbb
das
es
sbbb
imul
scas
test
or
push
sbb
cli
xchg
lods
jb
into
repz
mov
xchg
sub
cmp
movsb
dec
add
hlt
push
mov
add
cld
dec
shll
addl
sahf
jo
lods
enter
call
out
loop
cmp
cmpsl
mov
addl
fidivrl
cmpsl
push
enter
pop
jmp
and
ret
aaa
in
dec
dec
cmpsl
mov
adcl
adc
mov
inc
in
or
or
sub
sub
xchg
push
jle
push
mov
aaa
int3
pop
cld
push
in
out
sbb
or
cmp
sub
pop
mov
add
xor
xor
inc
mov
int3
pop
mov
mov
movsb
push
mov
aas
in
ljmp
mov
daa
test
mov
cmpb
xchg
aas
int3
daa
loope
jecxz
adc
or
cmp
das
leave
jg
daa
int3
pop
cld
pop
in
negl
or
cmp
sub
pop
cmpsl
dec
xchg
jl
insb
ja
mov
inc
lods
aaa
fsubl
int3
pop
cld
pop
in
negl
or
cmp
sub
pop
cmpsl
dec
xchg
jl
insb
ja
dec
xor
pop
adc
adc
cmpsl
push
cmp
repz
fisttps
jmp
popa
in
push
push
dec
xor
and
ljmp
leave
push
inc
mov
mov
leave
and
jecxz
mov
jae
cld
imul
nop
jg
dec
shrb
jno
xor
push
add
repnz
sbb
out
repz
jb
adc
add
and
popf
sahf
and
dec
jg
gs
and
and
sub
xor
sahf
int3
xchg
inc
or
mov
test
pop
loop
push
sbb
loop
je
or
inc
pop
push
cli
ljmp
clc
in
mov
ss
hlt
frstor
scas
scas
neg
sub
rcrl
mov
sub
jl
add
cwtl
shrb
movsl
addr16
inc
punpckhwd
mov
in
jge
out
push
push
inc
pusha
mov
frstor
repz
sub
shll
sbb
pop
sub
pop
pop
push
dec
hlt
scas
les
daa
push
or
loop
mov
icebp
push
loopne
lods
xor
push
into
sub
mov
push
mov
jecxz
popf
sbb
pop
outsl
pusha
mov
push
or
loop
cmpsb
cld
pop
sbbl
jmp
add
pop
lods
xchg
movsl
pop
cmpsl
jnp
inc
inc
and
mov
mov
xor
movsl
imul
js
push
inc
mov
inc
sub
stc
popf
pop
add
cmp
clc
nop
sbb
and
lret
push
xlat
and
jmp
stos
test
loope
test
or
jo
fisubl
xor
cltd
not
orb
movsb
mov
fstpt
pop
mov
cmp
jg
jns
dec
cmp
dec
jbe
pop
pop
mov
jmp
test
ficoml
cmc
jle
jno
or
ja
in
push
es
into
lsl
ret
call
notb
cmp
mov
loopne
jnp
mov
adc
gs
inc
cli
sbb
shrl
push
stos
imul
cs
insb
xor
xchg
icebp
bound
imul
adc
ret
lret
ss
add
sub
arpl
adc
cmp
fnsave
in
in
jmp
pop
mov
cltd
ror
pop
mov
fwait
sbb
xchg
xchg
jecxz
out
xchg
cld
les
fwait
icebp
xlat
inc
pop
popf
lahf
sbb
pop
jbe
mulb
out
mov
mov
mov
cmp
or
lods
or
mov
pop
cmpsb
in
insl
or
mov
jle
movsl
sbb
sub
xchg
fnstcw
imul
cmp
mov
and
mov
sbb
test
into
xchg
sar
jns
sbb
je
jl
push
repz
repnz
dec
ret
addr16
stc
sub
pop
loopne
sarl
ds
add
gs
jmp
xchg
gs
jb
lahf
or
aad
shl
cmpsb
fsubrs
pusha
mov
push
daa
in
arpl
add
inc
inc
ret
insl
xor
das
add
inc
loopne
sub
aad
add
mov
adc
pop
and
jp
fidivs
shl
mov
test
sub
push
pop
ljmp
jp
imul
test
inc
cmpsl
sub
jns
pop
sub
jb
aam
das
sti
test
dec
jecxz
loopne
sbb
pop
mov
fidivl
push
out
or
clc
jle
pop
cwtl
xor
aad
add
nop
mov
out
mov
rorl
jmp
pop
sub
push
fsubr
xor
cmpsb
test
scas
mov
pushf
and
or
leave
xor
ja
jle
pop
jge
es
xchg
hlt
pop
and
dec
mov
mov
jnp
aad
pop
js
cmc
mov
push
jae
stc
inc
push
mov
mov
xor
sub
fneni(8087
movsb
pusha
dec
adc
jmp
cld
mov
push
sbb
js
sub
mov
xlat
stos
insl
dec
bound
jmp
and
and
sysret
mov
lss
sbb
mov
or
xchg
sbb
call
das
and
pushl
in
ja
jo
push
jae
mov
insl
mov
mov
or
push
in
loope
pop
pop
fs
sub
or
add
mov
in
xchg
push
jb
cld
jne
stos
and
cmp
test
cmp
sti
test
test
shrl
loope
push
pop
or
cli
ljmp
cmc
adc
ljmp
mov
mov
ret
pop
sar
push
aaa
mov
xor
jb
adc
lock
sub
leave
xchg
mov
into
xchg
shrl
mov
xchg
dec
adc
cmp
sub
xor
mov
test
insb
pop
jae
imulb
inc
sbb
movsl
outsl
inc
push
fs
daa
ds
mov
pop
adc
sbb
loop
push
rclb
in
orl
not
dec
push
daa
enter
mov
adcl
add
mov
cltd
cmp
rcrb
pop
and
stc
jb
dec
into
dec
movsl
pop
testl
xchg
sbb
or
dec
mov
fs
add
adc
call
testb
fisubrl
cmp
scas
je
jno
xchg
xchg
mov
ja
adc
cmp
sub
jge
loope
or
mov
out
ret
jnp
or
push
gs
ja
cmp
aas
cmp
cmp
addb
scas
gs
std
adc
test
les
mov
or
lds
cmc
je
clc
int
dec
out
cmp
pop
arpl
jle
jp
dec
movsb
mov
sub
in
cltd
mov
mov
mov
shll
pop
sub
outsb
or
mov
dec
fs
dec
mov
sbb
pop
sbbl
and
jns
lds
push
jecxz
xor
xchg
pusha
mov
orl
loop
add
mov
stos
lock
jmp
lcall
fidivs
stos
xor
pop
jmp
or
pushf
std
insb
mov
out
mov
cwtl
xor
mov
gs
outsb
addr16
cmp
ljmp
stc
mov
xor
icebp
cli
cmpsb
ss
dec
pop
ja
sbb
fmuls
inc
rorl
popa
imul
in
mov
test
rolb
or
ror
dec
and
push
jmp
call
mov
mov
jno
lcall
daa
test
xchg
sbb
or
insl
jne
inc
lret
mov
stos
mov
mov
adcb
add
adc
outsb
xchg
and
les
cmp
test
ja
mov
sbb
cmpl
push
sar
shl
inc
in
int3
pop
mov
sub
xchg
les
jo
cmc
sti
and
cli
mov
mov
loopne
lods
into
cmp
or
int3
je
movsb
mov
call
jmp
and
pusha
fcomi
inc
mov
outsl
insl
jg
jbe
push
mov
aas
sub
movsl
ss
popf
cmpsb
pop
mov
mov
lock
dec
jl
fsubrl
mov
push
sbb
xor
es
adc
negl
push
in
xchg
pop
pop
sub
cmovae
jns
add
xchg
cmp
pcmpeqw
push
dec
lret
cmc
adc
dec
adc
pop
xchg
fnstenv
inc
sbb
int
sub
stos
push
imul
sbb
jne
andl
fildl
fwait
cmp
dec
mov
fdivs
add
ret
out
mov
cmp
add
fadds
call
inc
ret
fdivs
jno
add
jb
add
das
cmpsl
ret
cli
hlt
mov
in
xchg
xchg
sub
ljmp
pop
sbb
add
sub
repnz
inc
xchg
pop
jnp
test
fxch
out
test
dec
or
ja
add
inc
gs
out
or
das
aad
push
cld
fsubl
mov
outsl
ret
mov
loop
pop
out
fnstenv
jge
fistps
call
xchg
mov
fstl
popa
mov
push
inc
setnp
cmp
and
pop
loop
mov
das
or
sub
mov
into
in
sbb
mov
fnstenv
test
xchg
addr16
dec
push
jbe
sbb
insl
lcall
mov
push
jp
jp
dec
jle
mov
xchg
xchg
inc
aam
movsl
insb
cmp
or
xchg
fldcw
jnp
fdivr
in
xor
inc
lods
inc
sub
shlb
into
in
jge
push
mov
mov
mov
cmc
jbe
jnp
fadd
sbb
stos
in
test
movsb
adc
mov
fsubr
lret
add
rorb
stos
mov
aam
or
ret
sbb
das
nop
scas
cmp
outsb
pop
mov
addr16
jno
push
jo
in
insb
adc
pop
icebp
dec
xchg
stos
push
cmp
jns
daa
les
jg
ret
jl
rcr
aad
iret
daa
addl
add
jle
push
or
ficoml
push
push
sub
add
cmp
push
mov
clc
sub
xchg
iret
cmp
mov
enter
loopne
inc
push
in
pop
push
adc
xchg
jo
xchg
fdivl
and
decl
test
je
out
outsl
sahf
cmp
and
xor
insl
paddsw
pop
mov
mov
out
push
cmp
adc
into
into
dec
out
ret
jge
cmc
add
mov
shr
jnp
adc
in
out
lcall
mov
mov
out
in
aaa
mov
jns
adc
jmp
mov
movsb
push
fsubl
push
xor
orb
push
jnp
sbb
cltd
enter
int
cs
insb
mov
push
addr16
mov
into
lret
lock
push
jp
daa
or
leave
stos
xchg
ds
jg
loopne
fldl
inc
sti
div
iret
sbb
sub
data16
bound
es
cmp
push
xchg
iret
cmc
dec
mov
clc
je
fwait
mov
shll
ret
imul
cld
mov
sti
sbb
jno
dec
sahf
aad
adc
movsb
popf
xor
ja
rorl
int3
sbb
pop
roll
ret
dec
data16
mov
or
sahf
xor
in
push
pushl
mov
in
lea
push
aad
int3
cld
or
scas
cmpl
cli
push
out
xchg
dec
orb
sub
insl
stc
outsl
pop
mov
ficoml
mov
xor
sbb
pop
mov
cwtl
or
or
dec
ds
sub
js
cmp
test
out
inc
dec
nop
mov
push
lea
popf
add
lret
fwait
lss
fsubrp
lods
nopl
int
inc
int3
xchg
sbb
stos
out
inc
xchg
in
add
das
mov
fsubrs
dec
test
sahf
jecxz
jl
adcb
cs
lret
stos
cmp
shll
in
sub
sbb
dec
out
inc
pop
shlb
outsb
popf
add
adc
outsl
imul
int
nop
push
pop
sub
lret
dec
adc
lahf
inc
out
les
outsb
sbb
test
hlt
xchg
fadds
xlat
loop
imul
xlat
popf
and
sub
pop
and
or
xlat
jg
dec
and
lods
lahf
addb
fwait
pop
cltd
push
nop
test
ljmp
inc
es
stos
hlt
and
dec
mov
or
push
dec
mov
or
aas
iret
mov
enter
lods
loop
shll
mov
test
pop
inc
jno
jge
mov
and
shll
sbb
test
jae
fdivs
dec
int3
pop
xor
insb
iret
xor
out
adc
dec
jecxz
lret
inc
and
nop
bound
push
jl
stc
sub
cmp
aad
dec
and
es
test
cmp
lods
dec
popa
push
ja
mov
imul
pop
insl
gs
pop
push
jns
movsb
lret
sbb
cmp
and
cli
cmp
int
adc
cmp
xchg
xchg
outsb
rcrl
iret
mov
test
mov
mov
add
out
fisttpll
out
fisttps
mov
testb
sbb
ret
sbb
out
call
mov
push
loope
pop
sahf
push
pop
icebp
ret
es
ljmp
push
arpl
dec
mov
jnp
movl
ret
fsubrl
xor
mov
cmc
in
cli
cmp
xlat
sbb
sti
adc
bound
sbbb
es
or
jbe
jg
mov
jnp
popf
dec
in
jnp
inc
inc
lods
enter
jnp
ret
mov
sub
mov
mov
push
mov
pop
and
dec
push
pusha
xchg
push
and
sub
lods
mov
push
adc
sahf
xchg
iret
cmp
mov
test
ja
movsl
jne
cli
mov
aas
cmp
pop
rcrb
dec
movsb
jg
sub
stos
adc
xchg
das
ja
or
loope
mov
iret
inc
lods
pushf
inc
lds
test
and
cmp
inc
mov
add
push
je
dec
sar
fcomps
sbb
add
and
out
dec
imul
lcall
ss
xchg
int3
adc
and
or
push
in
shlb
leave
or
cmp
rolb
mov
pop
nop
ja
repz
cmp
xchg
lods
popf
adc
mov
fbld
xchg
scas
push
nop
in
sbb
push
ss
adc
je
adc
lods
dec
mov
pop
sub
cmp
push
orl
fsts
xor
mov
pop
xchg
mov
lock
ret
mov
pushf
fwait
mov
mov
pop
jg
aad
jne
shl
ficoms
mov
mov
push
sbb
pop
xor
push
adc
fcmovne
ficompl
int
push
push
fisubl
jp
in
in
push
push
pop
mov
pop
dec
jbe
inc
lods
xchg
jbe
xor
push
inc
xor
popa
cmp
sahf
gs
sub
inc
in
bound
adc
adc
sub
mov
mov
test
xchg
icebp
icebp
push
cmp
lock
or
push
jne
repz
movsb
sbb
lret
addr16
xchg
xor
and
or
xor
int3
std
adc
xlat
popf
test
fcoml
inc
cmp
or
inc
pushf
or
pop
out
push
dec
hlt
test
inc
pop
jmp
imul
lods
xchg
cmpsl
fxch
push
notb
ljmp
push
mov
pushf
js
xor
ja
xor
arpl
loop
clc
cmp
xchg
sub
xchg
jae
shlb
sub
push
mov
mov
out
xchg
bound
push
mov
sub
movzwl
xlat
in
xchg
mov
mov
mov
nop
dec
aas
outsl
mov
sahf
test
lea
jns
mov
mov
out
mov
xchg
xchg
dec
pop
inc
jnp
push
cmp
mov
aad
out
cmp
sbb
andb
xor
jecxz
movsl
pop
sub
and
mov
inc
push
push
lret
sub
movsl
mov
dec
jg
mov
adc
pop
pop
sub
cmc
adc
dec
dec
sub
std
mov
jle
adc
arpl
add
add
adcb
sbb
jl
iret
inc
in
clc
push
pushf
test
mov
xchg
ljmp
cmp
xor
jns
pop
mov
mov
mov
in
push
sbb
aaa
cmp
call
inc
ljmp
ss
aas
test
push
adcl
jnp
pop
test
das
xor
push
das
pop
sub
and
mov
jb
mov
fs
adc
mov
mov
and
jo
cmpsb
xchg
cld
ljmp
addr16
loop
loope
adc
mov
pop
cmpsl
pop
xchg
insl
or
pop
inc
dec
push
fs
sub
cltd
cli
push
sub
mov
xor
scas
jb
nop
dec
push
mov
fldt
mov
or
push
jo
cs
jmp
aaa
and
sbb
pshufw
inc
in
andl
mull
xchg
cs
xor
roll
out
imul
cmc
in
in
jmp
push
dec
mov
jge
jno
xchg
add
mov
ror
adc
cmpsb
and
rorb
sub
sub
add
cs
mov
out
scas
xchg
adc
pop
mov
or
add
fwait
cmp
fs
mov
repnz
aas
ret
stos
imul
cmpl
xorl
pop
ret
stos
cmpsl
imul
jno,pn
sbb
sbb
aam
stos
inc
sti
adc
loopne
jp
out
mov
mov
pop
clc
xchg
or
pop
sahf
mov
xchg
jb
ds
fucomp
sbb
mov
mov
shlb
add
loopne
nop
lret
lret
mov
dec
cli
fisubs
rol
repz
xchg
repnz
jae
xchg
mov
daa
shl
out
xchg
rcll
loop
popf
dec
mov
inc
out
fdivrl
push
stc
faddp
pop
push
lods
push
dec
cmp
push
mov
js
fiadds
je
loope
jp
mov
xchg
lahf
mov
adc
push
dec
inc
jns
out
mov
test
inc
xchg
dec
push
rolb
mov
dec
sbb
in
enter
xchg
or
dec
push
dec
cli
xchg
sahf
pop
les
enter
lock
out
xchg
loope
rclb
frstor
jecxz
mov
inc
dec
and
fldcw
pop
jno
push
ds
pop
paddsw
int3
pop
dec
mov
fdivr
movsl
push
rcll
push
daa
or
sbb
xchg
faddl
push
int
mov
rorb
out
in
lock
pop
dec
orb
cld
subl
icebp
arpl
cmpsl
push
cmp
jmp
addr16
xchg
push
push
mov
sub
loopne
push
idivb
xor
pop
jns
test
mov
ss
sub
es
fisttpll
ret
cmpsl
inc
inc
addr16
loopne
outsl
mov
das
inc
cmp
cmp
test
add
push
lcall
push
push
shrl
lahf
mov
push
test
dec
inc
mov
sbb
idivl
sbb
or
inc
mov
jno
lock
mov
fcmovu
cli
push
sub
cmp
into
sbb
popf
movsb
xchg
cs
cmc
int
lret
mov
jl
pop
fstps
xor
addr16
aam
add
insb
sbb
lahf
cmpsl
loopne
push
lods
push
mov
push
jae
sbb
js
out
imul
jg
cmp
xchg
add
cmp
mov
aas
push
in
stos
push
popa
lds
test
lods
push
icebp
shll
iret
dec
dec
mov
ljmp
pop
jno
jge
dec
test
call
insb
icebp
hlt
add
pop
in
sub
pop
je
addl
sub
mul
pop
scas
mov
pop
mov
jmp
out
pop
push
sarl
bound
mov
pop
ljmp
sub
sbb
mov
frstor
xor
adc
pop
mov
push
cli
and
xchg
inc
adc
jmp
cmp
mov
push
inc
gs
inc
imul
divl
out
mov
jo
mov
cltd
lock
push
imulb
adc
pop
pushf
xchg
sbb
mov
es
and
dec
jl
out
scas
aaa
push
push
or
dec
dec
cld
out
xchg
lahf
dec
iret
icebp
test
adc
das
in
dec
adc
inc
mov
push
insl
out
add
pop
or
loope
cmp
arpl
push
arpl
in
dec
push
out
push
mov
divb
adc
dec
rcrl
ljmp
xchg
loop
cmp
xor
pop
sub
test
test
sbb
push
adc
imul
mov
jge
push
cwtl
lods
xorb
adc
add
ja
add
dec
mov
pop
add
into
push
pushf
cmp
repz
shll
test
imul
ljmp
lods
mov
dec
jns
and
mov
imul
nop
xorl
cld
pop
add
push
xlat
and
lcall
lea
insb
cltd
jnp
adc
shll
inc
stos
cmpsb
cltd
pop
add
jb
mov
lds
popa
hlt
pop
inc
sahf
push
jb
pop
mov
daa
int3
pop
cld
pop
in
negl
or
cmp
sub
pop
cmpsl
dec
xchg
jl
insb
ja
mov
inc
lods
aaa
fsubl
int3
pop
cld
pop
in
negl
or
cmp
sub
pop
cmpsl
dec
xchg
jl
insb
ja
addr16
cmp
lods
aaa
fsubl
dec
pop
cld
pop
in
negl
sub
pop
cmpsb
dec
xchg
jl
insb
ja
mov
inc
lods
xor
cld
xchg
or
cmpsb
jge
pop
rcl
mov
cmpl
adc
sti
dec
lret
pop
pop
and
fidivrl
fwait
ljmp
pop
test
or
sti
dec
lret
pop
fldt
stos
cmp
or
stc
pop
leave
dec
fstps
inc
mov
sbb
jns
dec
arpl
sub
sbb
mov
jl
push
lret
sbb
mov
outsb
xor
xchg
xchg
inc
and
rol
ficomps
and
xor
test
ljmp
cmp
lret
icebp
fsts
je
aaa
and
dec
sub
xchg
xchg
ljmp
jl
jmp
ret
sub
in
fld
pop
test
xor
or
cltd
or
pop
jmp
fistpl
inc
stos
rcll
sbb
je
sub
cmpsl
stc
sub
dec
cmp
cld
adc
cwtl
movsb
pop
sbb
cmc
adcl
inc
mov
stc
js
cmp
cltd
in
sub
loope
in
mov
lods
lret
or
imul
sub
les
fwait
lahf
stos
jmp
or
pop
shrl
stos
cmp
jmp
pop
fsts
test
or
sti
js
push
aam
loop
cltd
sub
pushf
xor
inc
clc
dec
in
dec
jmp
mov
dec
les
dec
in
negl
fnstcw
jnp
ja
push
jo
mov
cmp
insb
iret
cmp
jmp
dec
fstps
sub
sbb
jns
dec
lret
pop
fldt
stos
cmp
jmp
dec
fstps
sub
sbb
sbb
push
lret
cwtl
pop
aad
rcrb
sub
imulb
mov
mov
sub
inc
cmpsb
stc
push
sbb
es
ja
dec
fsubrs
fisttpll
xor
shlb
loopne
aas
lock
sbbb
jle
jo
add
aaa
mov
mov
lods
adc
pop
push
adc
lock
std
fwait
jno
xchg
and
push
sbb
push
push
and
sbb
pop
dec
out
pop
ret
jmp
hlt
push
shr
int3
or
clc
decb
cli
adc
cmpsb
pop
sub
pop
scas
mov
cmp
aam
insl
loopne
in
fists
and
loop
test
enter
jecxz
lock
ljmp
or
mov
fwait
aaa
mov
inc
or
lret
cmp
pop
push
or
add
sbb
mov
adc
cs
inc
loop
mov
jge
and
or
daa
icebp
rcrl
arpl
sbb
add
fimull
lcall
or
adc
push
pop
int
inc
and
and
test
ds
jle
jbe
test
insl
cmp
mov
mov
cs
mov
push
addr16
int
inc
xchg
mov
jecxz
std
mov
lret
mov
cs
out
test
or
xor
lret
push
and
lret
clc
repz
aam
jo
out
test
and
xor
in
sub
inc
mov
aad
clc
push
out
mov
jns
xor
fisttps
shl
jp
add
pop
adc
jns
sub
movsb
je
mov
sbbl
arpl
fildll
loop
sub
movsl
sbb
cmp
add
imul
and
or
dec
xor
imul
sub
shrb
xchg
mov
lret
sub
sbb
sbb
sub
jecxz
arpl
adc
scas
cmp
imul
xchg
mov
cmp
mov
jp
add
mov
push
adc
add
cmp
sbb
imulb
xchg
or
ds
jbe
xor
add
int3
sbb
mov
cmp
shrl
es
je
cld
inc
pop
dec
pusha
and
lcall
lea
push
lods
movsb
mov
mov
out
loopne
and
lcall
out
add
loope
inc
mov
adc
les
les
or
pop
inc
mov
lret
add
add
mov
push
jge
outsl
cli
outsl
clc
cmp
mov
clc
cltd
xor
mov
adc
jne
pop
stc
lods
or
mov
add
or
pop
jp
xor
dec
movsl
jno
and
inc
js
dec
xor
adc
ficompl
scas
and
and
and
push
or
mov
dec
mov
out
jb
frstor
push
pop
arpl
ja
aad
out
sarl
out
inc
test
test
pop
dec
fwait
and
xchg
mov
adc
jb
mov
push
add
cmpsb
mov
sub
sahf
fwait
mov
mov
nop/reserved
out
lea
ds
stc
inc
sti
mov
jb
add
lock
leave
push
rol
jg
dec
lret
cli
fstps
je
cli
sbb
ja
mov
add
stos
stc
pop
call
cmp
mov
cmp
ret
add
aas
sbb
inc
pushl
xchg
es
dec
insl
add
xchg
sub
bound
ret
xorl
movsl
je
cmpsl
scas
adc
nop
push
mov
incb
ret
daa
jno
in
sub
bound
jae
lret
and
das
jl
scas
outsb
sbb
mov
dec
lods
push
inc
rcrl
xchg
dec
out
fldcw
inc
dec
xorl
xlat
aam
push
jge
shll
dec
mov
mov
cmpsl
xor
cmp
aam
popf
divb
jp
call
leave
adc
mov
pop
cli
movsb
or
add
jne
movsl
dec
loop
ret
mov
pop
movl
popf
iret
outsl
cli
jb
adc
sub
outsb
out
add
mov
leave
decb
pop
dec
and
jecxz
test
or
in
add
mov
and
pop
push
cmc
stos
cli
jl
push
es
adc
jp
cmpsb
outsl
sbb
cld
dec
sub
pop
jl
int
leave
xor
and
popf
mov
xchg
pop
icebp
adc
les
ss
jmp
push
rclb
xchg
scas
fidivs
hlt
pusha
push
scas
mov
lock
inc
jge
add
dec
cmp
mov
pushf
push
fwait
push
xor
pop
movsl
fld
jbe
ljmp
cmp
inc
fstpt
in
xchg
stc
sbb
rorl
hlt
xchg
jmp
inc
stos
and
mov
aas
mov
cmp
inc
mov
and
mov
or
adc
lret
jmp
and
cmc
jg
shlb
das
loop
int3
push
das
test
pusha
inc
cmpsb
dec
fxch
add
loop
push
fdivs
ret
sbb
lock
push
out
test
dec
pop
sbb
mov
add
mov
icebp
or
dec
fcmovnb
pusha
mov
dec
mov
or
mov
jns
rcr
in
test
fwait
sbb
push
adc
scas
cmpsb
mov
sub
imul
outsb
notl
loopne
lret
cmp
clc
jne,pt
sbb
xchg
sar
dec
push
lods
mov
das
mov
imul
bound
aas
cltd
out
cmp
push
or
sbb
pop
adc
push
push
scas
dec
imul
add
sub
cmp
scas
cltd
xor
cmp
jg
insl
call
testb
dec
iret
cmp
in
and
xchg
inc
or
and
push
mov
xor
lahf
mov
ret
in
icebp
push
push
mov
scas
adc
lahf
inc
lds
mov
fsubrl
inc
sahf
inc
inc
dec
test
fisttpll
mov
mov
dec
cmc
mov
sarl
scas
cmp
mov
dec
dec
roll
xor
pop
leave
push
cmp
test
popf
stos
push
pop
cmp
pop
mov
cmp
xor
outsl
pop
dec
pop
add
ret
pop
xor
subb
push
ficompl
dec
ret
gs
das
adc
push
xor
dec
jne
das
pop
in
stos
jecxz
lahf
push
test
push
in
mov
mov
mov
hlt
add
xchg
push
mov
cmp
pop
pop
or
push
inc
cmp
ret
add
lcall
ficompl
std
in
outsb
sarl
add
add
xor
or
stos
pop
sarb
bound
pop
mov
ret
cmp
stos
fwait
lret
xchg
stos
adc
dec
mov
data16
in
fwait
xchg
sub
inc
inc
das
rcll
jl
fwait
rep
out
stc
push
xor
aam
jp
lahf
cmp
lahf
dec
add
dec
ret
add
sbb
data16
lret
cmpsb
mov
aaa
jae
lods
aas
ss
sub
xor
fsubrs
or
popf
mov
dec
out
rorb
or
inc
xlat
cmp
lods
sub
jl
pop
lret
add
popf
daa
jo
mov
shlb
cmc
xor
fmuls
inc
jae
dec
push
int3
pop
les
jmp
xor
shl
in
mov
insb
mov
add
cmp
adc
and
nop
inc
jb
mov
xchg
lods
mov
aas
jne
mov
jne
hlt
fisubrl
pop
jne
or
ds
and
xchg
cmc
stos
psubsb
pop
dec
xchg
mov
and
stc
out
movq
inc
push
js
cmc
ljmp
das
mov
out
gs
mov
xor
mov
push
pushf
call
mov
push
pop
xchg
sub
push
adcb
mov
filds
push
mov
push
cmp
xor
push
aad
inc
sbb
mov
and
test
or
lahf
cli
dec
pop
and
inc
jno
jnp
inc
sahf
lea
inc
fisubrl
cmpsl
in
pop
pop
sti
dec
sub
push
lahf
sub
idivb
cli
jge
cmp
add
sbb
nop
test
jg
push
sbb
jp
or
push
out
fisubrs
pop
xor
cli
hlt
xchg
jmp
lods
dec
test
and
scas
mov
jne
popa
sbb
add
ja
sbb
lods
cmp
add
mov
xor
cmp
into
inc
bound
mov
mov
pop
shlb
sbb
test
shll
fiadds
pop
in
ss
jne
outsb
add
jl
and
in
jp
test
int3
lcall
xorb
inc
adcb
push
adc
outsl
repz
cwtl
je
lods
sub
sbb
imul
cmp
mov
je
shrl
sub
or
and
push
arpl
scas
dec
pop
push
push
add
cmpw
scas
add
movsl
pop
push
jns
enter
sti
mov
inc
push
ja
mov
mov
pop
mov
cmp
cmp
push
lret
test
pop
sbb
dec
push
adc
pop
inc
sbb
cltd
xor
fs
dec
movsb
ja
sahf
arpl
in
or
xchg
xchg
insb
sbb
je
sub
mov
movsb
mov
jl,pt
in
xor
jno
mov
sub
add
add
mov
xchg
test
or
shrl
push
cmp
ljmp
push
lock
mov
cmp
movsb
pop
sbb
sub
push
mov
xchg
stc
mov
pop
stos
jecxz
sub
lret
ret
pop
in
and
mov
jbe
call
data16
cmp
and
lds
sahf
jmp
fbstp
mov
xorb
lret
mov
mov
xchg
fsts
pop
and
add
pop
clc
xlat
or
idivl
das
mov
aad
sbb
lret
xchg
std
aad
data16
ret
movsb
mov
inc
insl
push
insl
cmpsb
mov
inc
fstl
pop
pop
push
add
test
mov
imul
mov
pop
sti
and
push
ja
or
ret
imul
and
sbb
xor
inc
cmp
test
jb
xor
nop
mov
cwtl
scas
push
push
scas
or
aaa
inc
pop
mov
add
xor
sbb
add
push
cltd
pop
pop
xor
sub
es
notl
or
xchg
inc
and
xchg
xor
cmp
dec
imul
xchg
push
es
dec
jle
cs
mov
lods
loop
fwait
sbb
pop
mov
pop
es
mov
cltd
loope
xchg
rclb
and
mov
aam
es
test
stc
icebp
cwtl
pop
xchg
sub
inc
xchg
ja
pop
cld
inc
loopne
imul
in
cltd
adc
fcmovnu
or
inc
and
pop
mov
mov
jg
pusha
in
into
repz
xor
int3
cmc
test
xor
cmpsl
jl
lods
lcall
loopne
insl
mov
or
cmpsb
lods
xchg
cvtpi2ps
pushf
mov
out
std
fstpl
sub
add
fistpl
cmp
inc
testl
popf
int
pop
or
xchg
adc
mov
icebp
jbe
mov
push
xchg
imul
arpl
cs
cmc
mov
xchg
xor
dec
or
cs
inc
loopne
movsb
push
jecxz
cmpsb
cwtl
fucomi
jecxz
clc
lea
popf
insb
aad
jo
pop
xchg
daa
divl
cld
mov
call
sbb
xchg
ds
jecxz
cmp
mov
inc
jb
add
stc
stc
and
mov
inc
adc
out
fdivrl
cmp
jae
arpl
lods
sub
push
ret
cmpsl
mov
leave
ret
jns
sarb
adc
test
lods
push
iret
js
dec
pop
xchg
xchg
push
pop
sbb
lds
scas
ret
sub
or
add
mov
gs
mov
push
dec
jge
lret
mov
nop
lret
fnstcw
not
sbbb
in
pop
test
xor
sahf
xchg
fldl
inc
mov
push
aam
stos
stos
sub
pop
mov
das
pushf
popf
xchg
nop
mov
add
popa
cld
int
inc
push
aas
pop
inc
lods
or
ljmp
xchg
cmp
ds
jae
add
imul
rcl
ja
insb
pop
mov
divb
push
add
cmp
xchg
xor
xchg
into
test
mov
je
and
shll
cmpsl
jmp
aaa
cmp
push
cmp
dec
fsub
cmp
loop
inc
pop
stc
stos
loopne
push
mov
aam
enter
sbb
or
aad
bound
imul
xor
dec
cmpb
sti
sub
lods
loopne
adc
xorb
jae
pop
ja
dec
push
push
adc
scas
push
cmp
fwait
xchg
sti
sub
cmp
pop
scas
mov
dec
insl
jnp
fdivl
push
cmp
xor
nop
cld
lea
push
stos
mov
sub
iret
sarl
dec
cwtl
or
dec
adc
movsl
aad
sub
es
cltd
ret
in
dec
add
shrb
xor
xor
out
sbb
stos
int3
or
jmp
adc
cltd
add
out
out
inc
cmp
xor
adc
cmp
std
cli
dec
pop
ficomps
loop
aaa
push
leave
dec
fs
test
sbb
insb
inc
fistpll
arpl
imul
inc
jb
mov
int3
jp
lods
mov
lahf
pop
or
add
inc
pop
inc
and
dec
jl
jae
mov
and
xchg
inc
xchg
les
pop
add
insb
mov
fadd
cld
and
adc
clc
pop
xlat
int
sahf
cmp
rclb
pop
test
pop
jmp
cmpsl
out
std
push
out
sbb
mov
fimuls
and
clc
mov
pop
inc
sbbb
sbb
fdivrl
aas
and
out
push
dec
xchg
stc
inc
int
mov
ret
aad
je
mov
add
xor
test
or
jb
push
js
pushf
and
lds
jl
xor
jne
jb
dec
jo
push
repnz
sub
lods
xchg
pop
push
xchg
xchg
pop
add
repz
jns
xchg
inc
popf
sub
fwait
inc
or
dec
in
mov
mov
nop
pop
neg
lret
cltd
xchg
dec
jge
push
inc
movsl
mov
jo
dec
movsl
cmp
sbb
icebp
push
ljmp
pop
and
pushf
lds
insl
subb
imul
sub
cltd
dec
inc
test
add
inc
sub
pushf
shll
dec
or
sti
jae
mull
ficoml
out
es
mov
xor
mov
adc
xchg
subl
scas
xchg
sbb
out
lock
mov
pushf
xor
pop
fstpt
xchg
out
faddp
dec
addb
dec
jp
xchg
js
sti
fldl
int3
mov
ja
push
jl
lret
daa
mov
or
adc
push
mov
arpl
mov
dec
lds
mov
rclb
outsb
data16
in
pop
pushf
jne
fisubrl
pop
add
jb
rorb
lret
cmp
cmp
std
and
jbe
jmp
lods
cmpsb
and
pusha
rolb
daa
imul
int
scas
ret
xchg
fists
xor
push
dec
loop
fildl
test
sub
pop
ljmp
push
xor
addr16
push
das
mov
mov
cmp
fisubl
push
lds
inc
sbb
cmp
mov
les
push
add
inc
nop
and
icebp
lret
out
movb
fisttps
ret
out
loop
pop
xor
inc
inc
fdivl
out
andb
nop
scas
andb
xchg
xchg
testb
jbe
lret
fiadds
jp
cmp
icebp
and
ds
mov
ret
or
dec
xor
xchg
xchg
jb
mov
mov
xor
rcrl
adc
cs
and
in
stos
addb
jb
cmp
into
mov
imul
imul
jnp
xor
cs
adc
subl
int3
imul
cld
lea
loop
inc
fimuls
mov
repz
inc
add
jne
inc
or
cmp
pop
pop
fisttps
jae
mov
out
daa
movsb
hlt
lcall
sub
or
inc
jl
cmp
je
cmp
inc
pop
or
sub
ss
int
cmp
imul
jl
aas
mov
or
add
testl
leave
or
stc
cmpsb
or
subl
sub
mov
stos
pusha
pushf
inc
gs
popaw
xchg
add
es
or
sbb
inc
adc
add
jp
xor
dec
pop
xor
addr16
jl
cltd
sub
mov
sti
addr16
loope
jle
subb
repnz
push
mov
jbe
mov
je
loope
clc
push
xchg
adc
add
and
xor
mov
ret
lds
lods
xor
gs
sti
jg
xchg
cmp
cmp
dec
xchg
lea
mov
jno
dec
in
sbb
xchg
test
xor
test
pop
cld
fstps
dec
sub
sbb
sub
fadds
mov
mov
sbb
jo
jle
sbb
fidivrl
xchg
call
inc
sbb
add
cmp
mov
jmp
es
movsb
lcall
ret
adc
jb
pop
std
lcall
xor
scas
push
jmp
aam
xlat
int3
xchg
mulb
push
stos
add
sub
push
xchg
ss
cmp
pop
inc
mov
enter
xchg
movsl
fistl
in
xchg
int
jo
and
mov
int
aam
out
xchg
inc
pop
insl
jno
xchg
bound
rcrl
cmp
stos
dec
and
push
inc
pop
pushf
or
andb
addr16
or
push
in
jecxz
lahf
push
movsb
add
dec
adc
pop
ljmp
out
cmp
dec
push
mov
test
lcall
aad
in
stos
scas
stos
mov
pop
movsl
or
sbb
out
mov
bound
cmp
scas
and
push
out
lcall
ss
jne
test
outsb
pop
cmc
loop
cmp
pop
popa
stos
add
mov
lods
divb
roll
xor
lret
lret
dec
sbb
dec
jne
sar
cmp
pop
je
gs
icebp
xchg
and
addr16
or
inc
shld
and
add
sahf
mov
pushf
adc
sub
cmp
xor
imul
sbb
jbe
dec
pop
pushl
shlb
push
mov
mov
dec
pop
push
nop
in
bound
pop
das
aad
pop
aad
cltd
lods
dec
xor
das
shlb
pop
xlat
xchg
bound
mov
sahf
js
adc
std
push
lret
ljmp
mov
dec
pusha
or
outsl
mov
ret
dec
dec
enter
sbbb
lock
jb
adc
pop
sub
iret
loop
in
push
xchg
mov
lea
jbe
imul
jmp
sub
adc
push
xor
mov
xchg
enter
push
dec
ljmp
or
or
enter
mov
in
mov
or
lret
hlt
je
mov
test
movsb
mov
pop
mov
cmpsl
test
adc
sub
test
shrl
in
mov
sarl
cmp
xchg
js
cmp
pop
subb
jg
cs
xor
mov
and
clc
add
cld
cmp
adc
inc
sub
out
scas
and
subb
and
add
test
ss
xor
inc
mov
lret
jmp
sub
lcall
push
adc
cmc
cmp
cmc
sbb
loop
xorb
sti
push
ss
lods
xchg
adc
movsb
pop
gs
add
or
sti
jbe
pop
fldt
stos
cmp
jmp
dec
fstps
sub
sbb
jns
dec
lret
pop
fldt
stos
cmp
jmp
dec
fstps
sub
sbb
jns
dec
mov
fldt
stos
cmp
or
stc
jnp
dec
fcomps
sub
sbb
jns
dec
lret
pop
fisubrl
stos
cmp
push
xchg
push
shll
fldcw
mov
popa
in
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
std
sbb
cmc
ffree
int
jo
repz
jge
insb
jns
push
dec
push
cmp
adc
in
cmc
ffree
int
mov
test
jne
gs
push
std
inc
sub
adc
fstp
int
mov
popf
lea
xor
dec
push
cmp
push
arpl
fnsave
es
xchg
sbb
sbb
mov
add
push
dec
mov
data16
dec
xor
inc
lods
dec
arpl
jo
and
popf
mov
mov
sbbb
in
ficompl
fdivs
jge
cmp
insl
xor
or
cmc
mov
int
lcall
push
xor
daa
stos
ret
lret
cmp
fisttpll
xor
push
aad
xchg
xchg
call
xor
dec
sarb
add
adc
jg
pop
push
adc
popf
popa
mov
jbe
inc
pop
cli
lea
fst
int
mov
pushf
lea
pop
dec
dec
cmp
add
cltd
cmc
mov
movsb
aam
repz
stc
jmp
or
cmp
sub
js
popf
mov
mov
call
stc
sbb
adc
xor
cmp
inc
pop
jno
js
cwtl
movsb
in
nop
mov
mov
mov
test
jne
inc
dec
push
cmp
add
in
cmc
ffree
int
mov
test
jne
inc
dec
push
cmp
add
enter
loop
inc
cwtl
scas
shlb
jp
or
pop
push
pop
iret
je
mov
sub
test
dec
cmp
push
cli
ds
lret
mov
mov
mov
sub
or
mov
int3
or
fildl
std
les
pusha
dec
mov
cwtl
sub
fmuls
scas
or
scas
pop
xor
push
cltd
mov
sbb
stos
xchg
aam
dec
add
jmp
jmp
insl
aas
dec
sbb
cmp
sbb
hlt
inc
imull
jge
xchg
xor
adc
das
pop
cli
daa
push
mov
adc
sbb
addr16
mov
and
push
dec
enter
sti
push
mov
and
repz
iret
out
outsl
clc
pop
loope
cmpsl
or
push
mov
lahf
mov
sub
sti
mov
iret
bound
inc
rorb
mov
xchg
inc
je
mov
loop
nop
push
push
std
arpl
xorb
sub
je
push
jecxz
int
adc
test
cmp
xchg
call
sub
push
cwtl
out
sub
in
push
insl
out
mov
sti
xor
adcl
mov
mov
shlb
push
loop
fst
and
js
mov
jnp
jo
mov
rolb
push
xlat
adc
add
jae
inc
mov
data16
clc
dec
pop
outsl
fildll
jnp
or
sbb
push
pop
push
out
cwtl
xchg
sub
jmp
push
mov
in
pop
mov
std
adc
call
inc
xchg
mov
jle
mov
loope
dec
add
stc
jle
dec
shr
shll
pop
imul
mov
cmpl
pop
mov
push
xor
xchg
insl
and
cmpsb
pop
cmp
and
pop
sub
xchg
mov
xchg
pop
cwtl
cmp
jbe
mov
add
mov
mov
dec
or
jle
lock
push
ret
arpl
mov
xchg
fmuls
out
aaa
or
xlat
sahf
xchg
fisubrl
andl
mov
mov
jo
dec
mov
sbb
lods
mov
mov
rorb
xchg
add
ja
aaa
adc
dec
movsl
mov
mov
ja
rcrb
mov
jns
in
addl
enter
mov
dec
icebp
cltd
sbb
sbb
fwait
xor
int3
pop
mov
roll
pop
mov
sub
pop
dec
shlb
push
cmc
push
jnp
out
jne
dec
lds
cwtl
xchg
cmp
sbb
and
and
jns
ja
jp
mov
cld
lock
xchg
pop
movsb
lods
jmp
sti
flds
insb
cmp
inc
aam
adc
mov
cmc
lret
inc
fidivrl
cmpsb
cmp
inc
inc
adc
out
movsb
pop
in
or
jge
lret
cmc
cwtl
push
xor
mov
insb
sbb
ljmp
add
pop
iret
test
rcrb
lahf
mov
and
std
jge
mov
jo
lea
dec
aam
cld
test
inc
sub
xchg
mov
in
jmp
test
pop
addr16
lods
iret
mov
insb
push
sbb
mov
add
cltd
ljmp
mov
inc
lret
jo
pusha
imul
dec
cmp
push
jle
sbb
adc
mov
mov
jns
xor
fstps
sbb
idivb
mov
fnstsw
xlat
xchg
outsb
pop
nop
imul
lods
mov
jle
inc
xor
int
pop
fsub
loop
or
sbb
inc
jns
nop
shlb
fwait
bound
dec
out
in
mov
ja
aam
or
popf
stc
subb
pop
dec
pop
mov
cmp
push
sti
sbb
sti
inc
lret
fcom
add
xor
dec
rorl
in
mov
rorl
fs
pop
dec
into
xchg
or
jg
adcb
xchg
pop
std
add
jl
or
mov
aas
xor
sahf
stc
xlat
scas
jae
pop
and
cmpsb
dec
fidivs
movsl
xchg
inc
adc
in
mov
pop
test
lds
lds
rcl
cmp
lret
sub
jmp
dec
clc
dec
mov
mov
mul
cmpb
call
repz
mov
repnz
adc
adc
or
scas
jb
push
cwtl
das
out
mov
fwait
fnsave
int
jns
scas
gs
rcrb
stos
testl
out
sbb
xchg
in
dec
sahf
lret
push
jae
addr16
push
out
cmp
outsb
add
add
sub
ss
or
insb
cmp
sub
dec
fs
xchg
in
push
test
in
cmc
shll
cwtl
push
leave
mov
adc
mov
ret
mov
mov
mov
aad
ficomps
inc
mov
push
mov
mov
rol
insl
shll
or
lcall
out
push
movsl
xchg
jmp
add
lahf
cmp
inc
hlt
jno
push
mov
dec
lock
xchg
pop
dec
loope
mov
mov
aam
pop
pop
addb
scas
fistl
je
push
jne
and
mov
sub
decl
xchg
and
in
and
jp
jne
je
mov
adc
lret
leave
sub
jecxz
push
push
xchg
jbe
or
add
cmp
loope
adc
cmp
sub
insl
int
push
leave
nop
dec
inc
lods
movb
stos
or
pop
mov
jae
adc
pop
add
mov
sahf
lods
shrb
inc
adc
sbb
shrb
add
mov
jae
js
push
jbe
inc
xor
and
lods
xor
mov
loop
cld
dec
xchg
dec
sub
or
iret
mov
popf
cmp
pusha
push
sub
bound
lds
sub
in
push
lret
sahf
dec
mov
hlt
jl
pshufw
js
jb
mov
jg
adc
bnd
jg
xor
neg
pop
sarl
leave
jmp
cmp
loope
jmp
mov
in
dec
mov
loopne
push
xchg
jle
push
pusha
es
jns
mov
push
insl
fst
out
mov
sub
cmpsb
sub
push
test
dec
inc
sahf
push
mov
out
mov
and
adc
scas
mov
and
repnz
fisubrs
aaa
dec
jp
lcall
pusha
sbb
imul
mov
lret
jle
mov
sahf
aas
leave
xorl
adc
mov
das
mov
jns
imul
mov
push
jo
push
jg
mov
add
cmp
xor
mov
outsl
xchg
or
jg
lcall
ja
nop
fldcw
push
pop
sub
fidivl
adc
imul
ret
clc
insb
pop
or
test
add
mov
or
out
test
mov
movsl
xchg
jo
sub
pop
adc
leave
jg
and
mov
push
mov
aas
lahf
stos
cltd
imul
into
pop
or
mov
js
xor
adc
sub
gs
cmp
dec
inc
inc
pop
add
xchg
faddp
push
dec
or
cmpsl
xchg
push
nop
shlb
in
fsubs
lahf
cld
into
dec
adc
scas
mov
pop
push
xchg
add
lahf
int3
mov
jl
add
mov
int
test
and
mov
mov
adc
xchg
add
mov
ret
push
leave
inc
test
in
add
xor
xor
cmp
iret
xchg
xor
pop
insb
lock
and
loopne
das
fnstsw
add
mov
push
push
aad
xchg
ds
int3
fwait
and
clc
inc
lcall
xor
bound
push
movsb
ljmp
pop
lret
mov
ljmp
es
jns
xchg
int
dec
jmp
push
loope
jecxz
dec
icebp
push
dec
mov
lods
jmp
mov
dec
mov
in
dec
dec
push
das
and
xor
jp
adcl
adc
sbbb
ljmp
scas
js
and
xchg
repnz
dec
mov
dec
jmp
sub
and
add
daa
fnstsw
insl
jmp
mov
xchg
xorl
cs
das
or
push
aad
call
scas
cmp
into
xor
aaa
adc
cwtl
jp
push
adc
or
dec
mov
jb
sub
cmp
cmp
movsb
adc
jp
daa
jmp
outsl
xchg
cld
lahf
cmp
jno
jo
add
test
mov
sub
fildll
cmp
daa
pop
or
mov
lret
push
mov
cs
cmpsl
mov
dec
leave
jp
int
stc
add
push
xchg
jo
xor
lds
scas
jnp
xor
dec
orl
insb
fisubs
fisubs
add
popf
mov
in
aas
mov
ret
bound
push
push
test
lahf
popf
ljmp
ss
push
or
les
dec
nop
jns
push
lahf
cmpsb
lock
ffree
or
cmp
rcr
gs
inc
mov
or
mov
pop
in
jmp
cld
das
rol
js
push
mov
push
or
popa
pop
xchg
mov
dec
adc
mov
jae
dec
push
mov
inc
or
fstpt
fcmovnbe
dec
shll
add
mov
dec
testl
cli
movsb
enter
stos
adc
or
cmp
in
hlt
dec
bound
inc
inc
mov
mov
or
jmp
mov
sub
data16
xchg
in
sub
cld
dec
xchg
divl
push
daa
popf
sbb
dec
or
pop
cmp
fwait
dec
jg
mov
adc
movsb
mov
jns
xchg
pop
jge
loop
lahf
cmp
inc
cmpsl
push
jnp
mov
lret
jmpw
push
jmp
cltd
sbb
or
push
xor
inc
mov
xchg
dec
sbb
or
jae
cmp
jno
inc
icebp
test
push
add
inc
push
push
lods
push
js
pop
mov
mov
adc
js
jb
out
clc
dec
xor
sub
pop
lock
push
mov
cmp
lcall
push
dec
inc
inc
popa
cs
outsl
stos
sti
gs
mov
gs
aaa
push
dec
ror
mov
sub
cmpsl
mov
fstl
dec
sub
dec
or
cmp
jge
inc
movsb
mov
push
push
cmp
imul
jo
shll
mov
clc
pop
icebp
adc
movsl
dec
addr16
out
and
lods
test
push
out
nop
icebp
in
xor
ret
pop
aas
jne
sbb
or
jno
idiv
mov
lods
jae
imul
dec
push
and
mov
adc
mov
push
ss
adc
je
xlat
inc
fdivrp
adc
mov
lret
out
mov
sub
sbb
aam
mov
js
push
mov
xchg
inc
lods
pop
shrb
push
and
add
aam
arpl
lcall
add
cmp
fstps
daa
fdivrl
daa
cmpsb
insl
lock
imul
inc
mov
inc
mov
cld
mov
jne
add
dec
xchg
sub
and
pusha
add
stc
fiadds
fcmovne
add
cwtl
aad
push
ret
xchg
and
int
aam
adc
or
xchg
sahf
jecxz
push
enter
int
jmp
or
jnp
adc
movsb
int
cmp
insb
in
or
addb
inc
int
fs
ss
arpl
mov
jg
dec
cmpsb
int3
outsb
js
mov
mov
jb
shl
mov
not
xchg
pop
ret
xchg
pop
mov
dec
fcoms
or
sbbb
je
scas
inc
jb
sub
jnp
jle
mov
roll
inc
mov
lsl
push
inc
test
cli
insb
inc
popf
push
mov
jbe
test
les
and
fisttpl
lret
mov
mov
push
sbb
int
pop
jge
in
stos
aad
pop
cmp
cmpsb
loopne
push
xchg
or
pop
jne
mov
iret
or
xchg
hlt
imul
push
or
xor
sub
xchg
or
or
mov
out
or
push
jecxz
call
xchg
insl
in
out
cmp
xor
sub
dec
adc
int3
xor
sub
out
frndint
mov
xor
inc
ljmp
mov
push
xchg
aaa
testl
icebp
xor
pusha
xlat
scas
int3
arpl
cmp
movsl
loope
fldt
loop
inc
mov
out
jno
lret
push
ja
add
jmp
inc
add
out
insl
mov
jb
imul
mov
pusha
pushf
cmp
sbb
test
mov
ret
xchg
fldcw
and
xchg
mov
ret
add
iret
and
mov
shrb
hlt
insb
jbe
outsb
lods
cmc
sbb
cld
sub
push
xor
xor
pop
mov
mov
iret
jne
sbb
notw
xor
jae
mov
adc
cmpl
pusha
scas
out
pop
insl
sub
test
sub
sbb
pop
pop
inc
cmp
js
aad
sub
cmp
in
jmp
pop
mov
imull
out
add
cltd
jno
je
sti
scas
leave
stos
imul
ret
inc
jnp
pop
test
push
add
and
jo
icebp
cmp
lahf
push
shlb
fcmovnbe
adcb
inc
xor
adc
aam
pushf
add
push
enter
js
out
sbb
add
or
jb
mov
push
sbb
mov
orl
pushf
and
and
mov
sbb
nop
shlb
and
mull
negl
in
dec
ficoms
cltd
mov
sbb
decb
pop
mov
mov
test
xchg
pop
and
por
push
inc
gs
mov
idivl
out
mov
push
push
std
dec
mov
cmp
vpshufhw
mov
and
sub
adc
xchg
sti
lcall
pop
mov
lods
ljmp
pop
xor
les
mov
in
and
fwait
xlat
in
ret
add
xor
fstpl
mov
jae
fwait
outsb
gs
cmc
pop
xchg
outsb
cmpsl
or
ss
xor
xchg
and
fiadds
push
sbb
push
not
inc
data16
xchg
stos
and
das
leave
inc
popa
sub
push
lcall
cmp
loop
mov
xor
aam
fmul
dec
dec
fs
in
cmpsl
mull
das
mov
jnp
push
mov
push
or
xchg
sub
scas
jecxz
mov
stc
frstor
or
and
pop
aad
fsubrl
push
xor
bound
pushf
addr16
jbe
dec
sbb
mov
cmpsb
call
in
das
cmpsl
push
and
cmpsl
mov
lods
mov
pop
xor
jg
mov
aaa
data16
inc
pop
je
sarb
bnd
mov
je
adc
dec
je
cmp
int
dec
jmp
sti
sbb
jno
xchg
mov
cmp
cwtl
cmc
mov
outsl
cld
es
ds
cli
addr16
mov
sbb
ss
mov
or
jno
ret
repnz
bnd
test
stos
adc
fsubrp
mov
ds
int3
call
ror
jecxz
mov
pop
jb
sbb
xor
mov
pop
sarb
cmp
inc
out
das
xor
mov
pop
repz
mov
mov
stc
dec
loope
rcr
lods
rclb
int3
sbb
xor
lock
es
shlb
sub
sub
mov
mov
scas
sbb
push
fcmove
jno
xchg
adc
cmpsl
push
fldt
dec
cmp
stc
xlat
fstl
ljmp
xor
cmp
pop
leave
pop
nop
repz
daa
adc
jmp
sub
pop
rolb
lahf
dec
das
arpl
inc
loop
je
lret
jl
lods
rorb
subb
push
out
pop
iret
mov
xor
sbb
jle
mov
inc
adc
ret
rcll
pop
in
lea
int
cli
mov
hlt
int
aam
fwait
div
pop
jl
mov
icebp
dec
lret
mov
dec
pop
pop
mov
jg
and
mov
xor
adc
les
cld
test
mov
fidivs
ret
in
push
adc
sbb
xchg
inc
jbe
je
adc
insb
frstor
and
push
shlb
xchg
sti
mov
inc
adc
inc
shll
ds
or
movsb
mov
and
rcll
repnz
mov
pop
sbb
lret
out
inc
inc
push
adcb
cmp
js,pn
jb
push
mov
xchg
dec
jmp
jp
imul
ljmp
test
xchg
mov
xor
xlat
sub
add
in
pop
xchg
cld
push
sar
push
movsb
repz
add
mov
arpl
push
cmp
adc
and
jle
and
int
shl
aas
js
sub
pop
sbb
lret
das
push
mov
jmp
xchg
test
and
pushf
mov
pop
subl
les
pop
add
push
movsl
icebp
add
or
cmp
scas
xchg
scas
mov
jp
dec
cmp
and
enter
iret
cmc
fistl
in
popf
cs
mov
jns
push
js
pushf
pop
cmp
cmp
jl
inc
fdivl
lock
ret
ds
xchg
mov
lret
lcall
scas
idivl
xor
icebp
sub
addr16
aad
sub
push
stos
xor
or
scas
mov
xchg
pushf
or
mov
cmp
insb
ja
mov
push
lcall
cmpsb
shl
jns
pop
add
push
xor
ja
cmp
push
cmp
les
cmp
movsb
push
pushf
repz
xchg
xchg
push
jns
shr
into
or
ret
sub
jmp
dec
adc
mov
add
adc
cmp
sub
rcrl
adc
bound
xor
inc
dec
mov
or
pxor
push
jb
jecxz
adc
xor
jle
push
stos
mov
mov
pop
aas
cmpsl
pop
xchg
shll
leave
es
push
jae
pop
cmp
push
js
sub
push
dec
in
outsb
into
mov
stos
loop
push
dec
or
int
xlat
push
enter
in
jo
push
adc
out
cs
ret
jae
inc
mov
aad
push
movd
aas
lahf
jns
xor
in
cli
out
ret
jo
jno
cmp
mov
or
out
cltd
cli
ja
push
fists
nop
cmpsl
leave
jg
push
leave
jmp
adc
mov
aaa
bound
out
test
sub
jl
nop
pop
inc
dec
icebp
pop
push
das
movaps
sbb
xchg
jmp
mov
test
mov
push
pop
mov
add
mov
dec
mov
test
adc
inc
mov
popa
mov
rorl
xor
xchg
sbb
fcmovnu
outsl
out
lock
mov
lea
cmp
sbb
out
dec
sbb
movsb
pusha
dec
ss
push
sbbl
mov
pop
aad
pop
and
jg,pt
pop
mov
gs
add
insl
jo
cmc
repnz
adc
lock
faddl
outsl
mov
outsb
sahf
stos
and
inc
test
cmc
mov
out
mov
push
mov
int3
lods
mov
cmpsl
mov
jns
or
sbb
cmp
adc
inc
bound
negl
fstp
sahf
push
ss
mov
pushf
imul
push
jbe
int3
iret
sub
mov
loopne
jl
lahf
inc
mov
xor
out
mov
loopne
adc
jp
sub
mov
mov
cmpsl
sbb
inc
nop
sbb
jge
sbb
and
inc
inc
lahf
xchg
leave
lods
fsubrp
das
push
outsb
mov
mov
mov
adc
into
push
test
jg
cmp
call
insl
pusha
idivb
insl
add
test
insb
outsb
rorb
jecxz
dec
cwtl
lcall
rcrb
adc
sbb
icebp
pop
test
fdiv
enter
xor
out
ffreep
mov
adc
daa
lahf
lahf
imull
push
repz
and
loope
nop
sub
ret
outsl
inc
jg
or
pop
daa
dec
sbb
push
sub
fsubrl
int
mov
test
jne
inc
dec
push
cmp
add
in
cmc
ffree
int
mov
test
jne
inc
dec
push
cmp
add
insl
cmc
pop
vpmullw
test
jne
inc
dec
push
cmp
add
adc
ffree
int
mov
test
fcomip
inc
dec
and
pop
lret
jge
cmpsl
push
inc
inc
lret
bound
mull
cmp
loop
xchg
cmp
loop
cli
inc
lret
bound
xor
ret
pop
loop
pop
orb
sbb
dec
jb
bound
xor
push
push
loope
cmpb
or
data16
fsubrl
stos
and
or
xor
pop
mov
jns
inc
cmp
lcall
sub
out
lods
lret
push
out
adc
mov
cmpsb
xchg
scas
xchg
stos
dec
mov
ljmp
sbb
cmp
mov
dec
mov
movsb
mov
xchg
sbb
pop
xor
mov
fdivrl
sub
cmpsl
xchg
cmp
in
outsl
es
adc
lcall
stos
sub
pop
out
sarl
pop
mov
pop
outsl
xlat
cli
iret
xor
adc
addr16
ret
adcb
xchg
cmp
dec
mov
mov
push
cli
inc
lret
bound
xor
and
repnz
loop
xchg
and
or
mov
mov
les
imul
cmp
sbb
push
out
lret
pop
in
ljmp
out
jmp
mov
pop
cld
pop
cmpl
int
push
leave
or
cmp
add
sarb
dec
repnz
loop
xchg
cmp
ljmp
bound
xor
ret
pop
loop
xchg
cmp
ljmp
mov
ljmp
pop
insl
mov
xchg
or
or
hlt
hlt
in
mov
push
in
or
and
adc
loopne
xchg
sub
out
inc
xchg
scas
push
fnstsw
fwait
mov
adc
mov
push
nop
aad
push
cmp
das
lods
sub
mov
aas
decl
addr16
es
ss
decb
aad
push
enter
mov
mov
and
jnp
mov
dec
movsl
dec
push
xor
test
xor
icebp
pusha
shrl
pop
or
popf
lock
aad
loope
and
pop
sub
push
and
jne
mov
push
push
mov
xchg
or
or
pusha
movsb
outsb
push
sub
faddl
gs
addr16
sub
aas
ret
pop
aas
mov
subl
enter
mov
clc
push
pop
sbb
dec
xchg
pop
push
mov
dec
shl
dec
jg
cld
add
fisubrs
jecxz
inc
push
in
cmpsl
sbb
xor
movsl
jle
adc
add
mov
cmp
fdivp
xlat
cmp
ret
test
push
and
pop
jge
mov
subb
sub
sbb
mov
xchg
sub
insl
pop
mov
xchg
stc
pop
stos
iret
mov
hlt
repz
and
dec
or
jbe
out
xor
push
pushl
fsubl
out
adc
inc
dec
lods
adc
push
mov
jmp
mov
std
punpckhbw
pop
cmp
add
mull
push
imull
inc
cwtl
xchg
mov
ret
sbb
dec
pop
inc
push
mov
add
xchg
xchg
mov
cs
xor
jb
scas
push
pusha
loopne
jmp
imul
mov
sub
js
jp
cld
jae,pt
push
cmpsb
adc
call
enter
jno
repz
add
jmp
insb
loop
repnz
xchg
inc
fbld
add
rorb
adc
cld
xor
sahf
int3
scas
add
cmp
xchg
out
lret
sbb
fwait
jg
inc
cld
sub
adc
mov
in
xchg
mov
and
sub
hlt
loope
jbe
mov
and
repnz
test
adc
or
cwtl
daa
mov
notb
jb
push
in
movsl
mov
daa
xchg
add
div
sti
pop
push
jge
js
mov
xor
jo
sub
mov
push
in
fnsave
and
hlt
and
cltd
rcrb
jp
js
subb
faddl
and
cld
mov
sub
adc
xchg
jo
push
xchg
cmp
sub
int
ss
mov
add
pop
push
lock
cs
ljmp
leave
test
jp
add
andl
data16
lcall
mov
mov
ret
or
sub
lahf
rorl
add
or
aad
arpl
sahf
ds
sbb
push
sahf
popa
mov
insl
lods
or
lahf
adc
mov
mov
cmp
enter
mov
jle
gs
call
test
sub
add
daa
sub
in
jg
repz
movsl
jl
xor
jae
aas
movsl
je
cmpsl
stc
pcmpgtd
sbb
iret
shrl
mov
or
iret
add
loope
push
xor
add
mov
sbb
or
daa
push
push
lods
pop
std
add
ljmp
or
dec
bound
addr16
clc
inc
jns
idiv
xor
jl
xchg
clc
dec
mov
inc
repz
fdivs
cmp
nop
push
pop
ficomps
icebp
sbb
mov
lcall
and
out
xor
andb
hlt
fbld
fisttpl
dec
cmpsl
or
lock
int
daa
lahf
pop
adc
pop
lret
mov
dec
mov
mov
sub
les
pop
jns
mov
mov
jle
hlt
xchg
pop
xchg
subl
sbb
imul
aad
mov
int
xlat
rorl
fidivrl
adc
xlat
or
enter
neg
xchg
sbb
adc
out
cs
ja
pop
xor
and
clc
sbb
dec
and
es
gs
andb
lods
jmp
or
xor
or
pop
lds
dec
movsl
xchg
cli
mov
cmc
loop
mov
xor
mov
dec
shl
shl
pusha
and
cwtl
mov
push
pop
mov
pop
mov
adc
mov
jl
jb
sahf
push
xchg
subb
sub
scas
rcrb
mov
ror
daa
sahf
cmpsl
sbb
and
fistl
ja
cmp
insl
mov
push
iret
icebp
push
xchg
jne
fisubrs
sti
aad
inc
scas
iret
mov
or
dec
xor
and
jmp
gs
xchg
push
sbb
out
cmc
negb
sub
sbb
xchg
cwtl
sysret
cmp
jns
cmp
nop
inc
jmp
cs
aam
mov
pop
scas
data16
rorl
mov
mov
lahf
or
dec
adc
or
push
sar
lcall
mov
xor
push
data16
sar
mov
mov
cmp
push
pop
push
lret
cmp
ss
test
mov
jns
xor
dec
xor
sbb
nop
cmp
ret
adc
fsubl
cmc
mov
push
rorl
mov
mov
out
or
or
popl
imul
add
xchg
in
lock
xor
in
inc
jecxz
shll
aam
and
xchg
mov
sbb
xor
rcrl
loope
das
in
jb
push
out
mov
in
xchg
adc
fdivrs
xchg
pop
movsl
mov
sets
sub
addr16
pop
push
pop
out
adc
adc
xor
add
insb
movsl
push
lods
pop
rclb
pop
and
jecxz
cmpsb
dec
loop
mov
insl
mov
pop
mov
or
movsb
ja
and
in
mov
pop
outsl
je
roll
fdivrs
add
sbb
ret
cmp
imul
aaa
loope
fwait
mov
fwait
insb
lods
pop
push
push
fwait
leave
adc
mov
shll
or
sahf
data16
jecxz
inc
dec
mov
sub
mov
aad
xlat
xchg
push
lret
lahf
pusha
cld
mov
pop
clc
add
mov
mov
outsb
xor
jge
inc
jne
fs
sub
pop
andl
stc
cmp
add
call
sbb
or
mov
sub
push
mov
jo
sub
or
push
sbb
mov
test
fcoms
fs
ds
pop
pop
push
push
movsb
mov
push
sub
dec
out
jp
push
loop
jae
mov
adc
fsts
fstpl
push
add
lods
insb
dec
rcrb
cmpsl
push
push
nop
mov
push
pop
pop
xor
pop
xor
sub
mov
sub
cmc
or
std
scas
lea
pop
jnp
fsubs
cwtl
sub
mov
sub
faddl
or
and
mov
pop
sbb
stos
or
sub
xchg
fdivrl
subl
pop
xchg
sbb
mov
pop
test
or
pop
hlt
push
mov
mov
add
lds
push
xor
lock
fsubrs
stc
pop
imul
and
add
orb
repnz
popa
mov
shrb
xchg
inc
and
and
and
cwtl
xchg
and
clc
repnz
std
fbld
jbe
sub
cmpsl
jae
repz
xchg
xchg
mov
mov
lcall
gs
sahf
leave
dec
fdivrp
xchg
sahf
adc
push
enter
mov
cmp
rcll
hlt
cmc
mov
stos
outsb
punpcklbw
inc
data16
pop
sbb
sub
adc
push
rorl
loope
es
and
add
stos
xor
jns
push
lds
rcr
jle
cmp
mov
fstps
pop
push
sbb
sahf
cmpsb
sbb
paddusw
push
es
push
adc
xchg
add
push
sahf
push
xchg
adc
adc
cmp
jmp
out
paddd
push
sub
nop
dec
adc
aas
and
inc
lock
jno
inc
das
mov
jb
mov
nop
and
push
ficompl
mov
cmp
cmpsl
add
jo
and
pop
ljmp
pop
jae
je
adc
inc
or
dec
out
ret
out
jo
xor
pop
jno
cs
jg
sbb
mov
lds
rorl
cmp
push
cmp
bound
call
iret
cmpsb
adc
aas
push
jg
lea
sbb
mov
ret
scas
xorb
cwtl
scas
dec
mull
inc
mov
mov
rcrl
xchg
jno
fucomip
mov
xchg
cmc
cwtl
fimull
rcl
je
pop
faddl
jmp
mov
in
pop
xchg
push
shll
mov
mov
mov
lcall
aad
and
inc
push
cmp
xor
sub
dec
xchg
adc
shlb
adc
mov
mov
push
push
aaa
jmp
xchg
mov
sub
out
bound
loope
mov
adc
jge
pop
adc
xor
outsl
sub
jecxz
loop
cmpsb
mov
stos
cmp
lods
mov
add
push
iret
xchg
push
clc
ds
push
stos
xor
pop
add
lcall
push
loopne
mov
lcall
or
outsl
push
mov
pop
clc
call
mov
jmp
xor
pop
ficoms
jmp
cltd
jp
sbb
lds
ss
sub
pop
or
ss
add
icebp
jb
xor
mov
mov
cmp
jge
inc
sbb
cmp
fnsave
and
sub
sbb
add
cld
or
or
and
or
push
and
subb
add
loopne
data16
add
ret
cltd
pushf
xchg
test
sbb
inc
mov
cli
insb
mov
rorl
mov
adc
negl
xor
jg
fadds
push
mov
pop
loopne
inc
sub
stos
aam
pop
add
cltd
inc
sahf
jb
mov
adcl
je
dec
xchg
pop
pop
inc
movsb
inc
pop
mov
pop
out
jb
push
jge
mov
aad
lods
inc
adc
ds
addr16
fs
nop
lret
out
mov
in
les
push
add
xor
jne
cmpsl
dec
xchg
xor
xor
lock
sbb
xlat
sbb
popf
pop
enter
jmp
lods
mov
push
or
push
mov
xor
ja
xchg
pop
repnz
xchg
loopne
lret
push
push
xlat
add
xchg
mov
mov
xor
dec
pop
leavew
xlat
std
scas
jae
js
xor
lret
fildl
popf
cmp
push
jmp
jecxz
mov
scas
and
mov
andl
test
test
scas
int3
add
lret
mov
cli
mov
dec
or
lcall
and
jne
popf
lcall
mov
mov
lds
xor
adc
xor
push
bnd
mov
call
mov
test
sbb
sbb
loop
dec
mov
outsb
in
pop
dec
xchg
dec
cmpsb
out
push
out
xchg
inc
xchg
cmp
push
test
jg
and
or
out
add
jecxz
xor
lret
mov
std
pop
ss
imul
out
sahf
ljmp
icebp
xor
add
pop
jno
repz
inc
push
lea
xor
imul
add
test
fnsave
das
dec
add
call
fs
mov
in
mov
es
js
lret
xchg
lods
mov
outsl
dec
push
addr16
jecxz
pop
or
pop
sub
add
adc
xchg
xor
clc
inc
inc
out
mov
inc
pop
movsb
pop
sub
lea
or
jb
pusha
fdivrl
fcomps
stos
pop
pop
js
lret
adc
mov
jae
mov
notl
fisttps
je
xor
adc
xchg
out
std
cmp
popa
xchg
push
insb
mov
cmp
dec
and
mov
cltd
insl
or
mov
out
shll
adcl
adc
leave
jno
mov
xor
std
push
mov
cmc
js
int
xchg
inc
pop
add
cmp
cmpb
mov
icebp
test
xor
jnp
ror
jne
mov
call
push
xor
cmp
std
ret
bound
mov
mov
in
dec
mov
leave
sbb
test
push
cmp
addr16
xchg
sbb
inc
icebp
xchg
xchg
jo
out
sub
call
test
pop
fisttpll
iret
sbb
shlb
adc
out
movsl
aas
cli
rorl
shll
mov
sbb
aas
or
add
mov
mov
movsl
cmp
and
push
push
pop
cmp
int3
aaa
jmp
sahf
gs
lret
imul
pop
inc
js
jg
push
lock
sbb
sub
push
adc
pop
and
mov
pop
lods
jmp
mov
rolb
lcall
cs
adc
mov
dec
dec
xchg
mov
pop
stos
mov
in
arpl
stos
mov
xchg
and
mov
inc
dec
push
cmp
pop
cltd
mov
xchg
mov
in
pop
mov
int3
push
rcrb
mov
push
sub
out
inc
mov
stos
xchg
pop
mov
out
into
sbb
sbb
pop
add
sub
je
andb
ljmp
pop
mov
jmp
and
add
jp,pt
rcrl
mov
in
jb
jge
push
pop
insb
enter
add
cmp
dec
loop
imul
mov
popl
sahf
jecxz
and
lcall
dec
mov
aaa
lahf
scas
adc
mov
dec
cmp
jge
mov
outsl
ret
dec
add
mov
mov
add
and
stos
pop
into
adc
loope
outsl
stos
mov
lock
popa
out
or
push
or
push
jp
jnp
jno
inc
bound
sbb
cwtl
or
mov
mov
dec
sbb
mov
jne
cli
lods
adc
loope
rcr
loop
fsubs
jo
popf
loopne
push
aad
aas
dec
scas
inc
ss
pop
sahf
jns
add
and
ficoms
in
xchg
adc
rolb
jge
cmp
xlat
pop
jae
enter
adcl
push
bnd
xchg
inc
pop
inc
dec
aam
xor
cmpsl
cmp
jmp
pop
jo
in
xor
mov
cmpsl
xchg
orl
shll
and
push
dec
add
push
xor
out
cmp
dec
jno
daa
inc
movsb
push
cmp
fsubs
xchg
cmp
xlat
lods
outsl
xchg
repnz
pop
pusha
cmpsl
jns
pop
mov
jno
aam
inc
cmc
in
aam
int
lcall
dec
xor
sub
insl
and
arpl
decl
and
test
mov
mov
test
in
mov
xorb
cwtl
mov
pop
shrl
cmp
jae
push
fstpt
push
mov
add
fdivs
mov
sub
aas
add
xor
push
pop
ret
repnz
sub
sbb
call
mov
push
push
and
cmpsb
adc
ret
mov
jl
push
hlt
xchg
xor
ret
adc
insl
bound
dec
add
stc
lret
sti
imul
jns
les
mov
mov
ss
rol
out
imul
jo
ret
sahf
push
mov
dec
xor
hlt
and
daa
scas
test
outsl
std
imul
sahf
je
movsb
mov
decb
add
fcmovbe
dec
pusha
lahf
add
lea
mov
push
leave
scas
or
xor
adc
cli
bound
lret
shll
mov
xor
sub
and
push
inc
cmp
mov
leave
enter
jbe
xchg
or
cmovge
cmc
ret
xchg
sbb
loope
add
mov
stos
div
mov
shlb
pop
lret
mov
dec
loopne
scas
fistl
xchg
pop
fwait
dec
xor
xor
icebp
popa
pop
cltd
aad
push
jno
adc
cmc
dec
jmp
loop
arpl
cmp
out
xor
jge
jnp
sbb
rorl
mov
mov
fisubs
inc
inc
lods
negl
movsb
pop
daa
jbe
mov
iret
xchg
ljmp
sub
sbb
mov
mov
inc
rorb
clc
in
popf
lret
xor
or
loopne
pop
or
sub
adcl
fldenv
pop
aam
scas
mov
imul
xchg
into
clc
dec
add
xor
cwtl
clc
push
push
inc
inc
jae
out
cmp
les
jb
out
cmpsb
cmp
push
cmp
and
add
andb
xchg
rol
js
js
push
inc
cmpsb
mov
mov
dec
shr
xchg
divl
pop
sub
mov
push
fwait
mov
dec
call
jb
testb
push
sub
rolb
jmp
rcr
xchg
push
xor
and
cmpsb
inc
xchg
push
mov
lcall
push
mov
outsb
xor
std
add
andb
push
jbe
push
or
jns
js
in
bound
fsincos
bound
mov
in
pop
adc
jnp
cs
out
stos
inc
mov
inc
or
mov
das
pop
scas
int3
cmp
xor
das
dec
xor
stc
pop
loopne
rcr
push
push
mov
stos
mov
push
pop
repnz
mov
aad
push
outsl
scas
inc
or
fsubrs
push
push
arpl
push
fldcw
ficompl
add
or
inc
sub
sti
push
dec
fs
adc
cwtl
cmc
clc
or
push
out
scas
outsl
jns
mov
add
nop
test
mov
adc
add
mov
addps
fisttps
inc
mov
sahf
test
mov
in
mov
lcall
jns
fldt
xor
dec
shlb
mov
outsl
fwait
sbb
repnz
shll
sahf
je
mov
je
cmpsb
inc
cli
sub
mov
inc
pop
xlat
jnp
mov
ja
add
les
and
jg
lds
sbb
inc
test
mov
mov
xchg
adc
cmpsl
inc
fistl
cwtl
push
xchg
xchg
ds
and
inc
inc
test
dec
in
cmp
mov
mov
out
sub
imul
jae
es
nop
mov
add
lea
in
fidivs
pop
xchg
pop
fimuls
movsb
xchg
mov
setno
add
pop
cltd
shll
aaa
jns
mov
iret
test
inc
loope
adc
dec
cld
mov
in
stc
mov
mov
cmpsl
into
clc
popa
jg
outsb
movsl
sahf
cltd
mov
dec
aas
js
and
and
and
ljmp
xor
stc
jb
lcall
mov
sbb
xor
imul
jge
les
es
cmpsl
mov
jecxz
mov
adc
insb
mov
mov
sub
test
fs
push
mov
mov
or
das
sub
xchg
mov
cltd
pop
out
repz
fdivs
daa
mov
or
pop
xchg
shl
in
data16
out
pop
outsl
inc
cmc
lds
daa
sbb
test
push
ja
push
and
inc
inc
fidivrs
inc
mov
in
aad
sub
repz
mov
pop
ljmp
std
and
popf
sbb
inc
mov
inc
pop
and
out
xchg
inc
dec
movsb
cmp
jo
fnstenv
mov
dec
push
in
xor
push
ret
pop
add
lahf
das
in
cmp
adc
incb
or
push
fidivs
dec
mov
jmp
or
lds
loopne
sub
fisubrl
in
in
shl
mov
cmp
cltd
inc
xchg
or
std
enter
in
mov
mov
cli
repz
mov
fmuls
add
out
loop
ficoms
mov
dec
gs
pop
jno
pop
stos
xchg
xchg
xor
test
mov
mov
je
int3
add
push
bound
xor
ret
pop
loop
xchg
cmp
ljmp
bound
xor
ret
pop
loop
xchg
cmp
ljmp
bound
xor
ret
pop
loop
xchg
and
repnz
inc
inc
jb
bound
xor
and
test
repnz
xchg
pop
sbb
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ljmp
cli
pushf
xchg
pop
out
xchg
xchg
or
add
add
push
pop
add
add
push
pop
add
add
add
pusha
add
cmp
adc
leave
add
mov
add
add
add
add
xchg
add
add
add
mov
add
add
add
rolb
add
mov
add
add
add
add
jb
lods
add
movsl
add
and
xchg
add
sub
sti
add
add
add
in
add
mov
call
add
add
or
jl
int3
add
adc
movsl
add
add
add
pop
add
add
add
add
add
add
add
sbb
loope
js
jno
mov
xchg
add
fildl
pop
add
add
mov
pop
add
add
mov
add
fildl
loop
movsl
add
add
add
jg
add
cmpsb
add
add
jb
sbb
sub
add
add
ret
add
adc
adc
add
add
add
add
scas
add
add
add
xchg
add
add
add
add
add
pop
add
add
add
pop
add
push
add
add
movsl
add
add
add
add
add
sub
mov
jp
add
add
add
add
add
pushf
add
add
add
cmp
mov
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
mov
icebp
add
mov
add
add
add
add
add
add
add
add
jge
addb
add
add
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
arpl
jne
dec
add
add
add
movsl
add
add
add
and
pusha
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
mov
add
sub
testb
add
loope
movsl
add
jge
add
cmp
dec
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
incb
jp
arpl
adc
add
test
jb
pushf
add
xor
dec
add
add
add
add
add
sub
dec
add
add
rolb
pop
add
insb
add
aaa
add
add
add
adc
add
jae
add
push
add
pop
add
add
sahf
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
cwtl
add
add
add
add
int
and
nop
add
add
add
int
xchg
movsl
add
add
mov
add
adc
add
add
jae
pop
add
add
add
aas
add
add
sub
out
add
add
add
adc
add
verr
add
add
add
add
add
out
add
adc
jge
mov
add
add
add
add
add
add
add
add
add
add
jno
add
mov
adc
mov
fsubp
fstpl
push
dec
test
js
pushf
xor
push
pop
mov
lods
jo
ficoml
stc
lods
stos
mov
sbb
data16
andb
mov
cmp
addl
push
jae
sub
fstl
push
loope
xor
adc
in
inc
arpl
cmpsl
mov
test
lock
xchg
pop
sbb
mov
jae
imul
in
mov
sbb
daa
lock
xchg
lahf
pop
ret
pop
js
int3
lcall
xchg
inc
pop
sbb
jo
lds
movsb
sub
enter
or
jecxz
shl
mov
ret
or
outsb
pop
stc
ret
loopne
jae
add
mov
dec
cmp
popa
lea
movb
pop
push
mov
xchg
and
subb
sbb
lock
inc
jmp
mov
jbe
ja
lcall
add
push
push
mov
mov
inc
inc
mov
les
sbb
dec
dec
mov
enter
pop
mov
push
imul
xchg
mov
mov
int
in
mov
fsubrs
xchg
movsb
mov
pop
js
mov
jmp
outsl
jg
sub
mov
jno
inc
and
adc
adc
push
sbb
in
shll
adcl
adc
iret
out
pop
add
xchg
xchg
xchg
clc
dec
lock
jle
or
xlat
mov
into
imul
jne
aam
mov
jns
jl
pop
dec
mov
mov
inc
fisubs
cmp
cmp
cli
push
sub
inc
sbb
mov
cmpsl
orb
dec
cmp
adc
gs
test
add
jmp
lods
fistpl
enter
enter
jno
pop
pop
les
arpl
mov
mov
daa
icebp
hlt
pop
jle
and
test
or
adc
cld
push
and
aas
mov
adc
loop
fistpll
xchg
push
mov
and
shll
inc
mov
int
dec
and
or
je
std
pop
xchg
lret
inc
add
jb
je
ficoml
shl
out
cmp
popf
mov
mov
sbb
fs
mov
test
into
test
popf
mov
jae
sbb
iret
rorb
cs
data16
cltd
xlat
inc
xlat
sbb
and
jl
sub
push
lds
push
icebp
sub
cs
xchg
das
test
inc
adc
pop
jns
js,pn
or
jle
into
js
aas
outsb
sbb
push
ret
adc
jle
js
push
pop
ljmp
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
