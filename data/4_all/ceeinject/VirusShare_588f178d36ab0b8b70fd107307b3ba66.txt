call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
add
adc
sub
pop
mov
in
push
ss
xor
arpl
adc
add
in
jecxz
jecxz
ret
adc
mov
sub
movsb
arpl
mov
hlt
adc
add
ljmp
adc
fs
push
jae
push
cmc
sbb
outsb
mov
adcl
lahf
insb
lods
adc
inc
pop
jno
iret
jp
mov
rcrl
sbb
mov
ja
mov
je
pop
icebp
arpl
mov
xchg
dec
lock
in
cmp
jle
jecxz
lcall
hlt
xorl
mov
hlt
mov
popa
repz
sub
inc
xchg
mov
jnp
subl
add
je
in
or
ljmp
push
mov
jecxz
arpl
subl
je
pop
pushf
clc
inc
jnp
nop
cltd
mov
hlt
sahf
sti
sub
mov
dec
push
push
sub
mov
out
jl
xor
les
shll
jecxz
roll
adc
fs
push
push
jnp
dec
test
sub
cmp
adc
sbb
mov
cmpsl
adc
add
sbb
pop
frstor
and
sub
xchg
jbe
lcallw
mov
rcll
int
ljmp
arpl
push
xlat
ss
push
mov
arpl
sarl
ret
jno
dec
mov
push
jae
arpl
in
hlt
adc
add
repz
xor
add
adc
mov
push
jae
arpl
in
hlt
adc
add
repz
pop
mov
stos
pushf
adc
push
pop
dec
adc
lods
les
cmp
lahf
int
mov
push
mov
lds
adc
hlt
cltd
je
leave
fstps
pusha
out
xchg
in
pop
mov
and
or
inc
in
maxps
cmp
mov
and
cmc
arpl
or
es
adc
or
out
rorb
mov
arpl
stos
jle
mov
xchg
mov
xor
outsb
hlt
scas
fbld
aam
int3
and
pop
mov
jecxz
sti
cmpsb
push
mov
cwtl
rorl
mov
shlb
fnsave
inc
pop
cmc
sub
in
popf
testl
push
imul
push
or
lods
out
stos
inc
outsb
int
pop
rorl
arpl
lea
sbb
je
divl
jg
pusha
push
ret
mov
jae
mov
insb
xor
mov
mov
mov
mov
jl
pop
cli
insb
inc
sti
xchg
push
and
in
mov
test
sarb
jo
xor
and
repz
push
int3
es
repz
xchg
adc
xchg
sbb
shl
fsubl
cmp
lods
enter
movsb
rclb
imul
mov
ljmp
mov
popf
xchg
dec
scas
xchg
jmp
rorb
or
jmp
xor
rep
sahf
adc
lret
outsb
loope
dec
int3
sub
mov
enter
dec
or
aaa
adc
sti
pop
pop
adc
fnstcw
and
inc
aas
and
insl
xor
arpl
nop
dec
sbb
sbb
adc
dec
inc
faddl
gs
add
mov
in
pop
pop
push
inc
add
sbb
xchg
leave
rorl
cld
xchg
lea
popa
xchg
test
into
push
push
fcoms
mov
pop
cmp
sub
sbb
jle
push
shll
jmp
jne
pop
sub
inc
jo
and
inc
outsb
jecxz
sbb
push
cmp
aaa
test
lea
lret
pop
test
pop
xchg
lret
sub
jns
dec
inc
cwtl
push
mov
cmp
sub
push
test
clc
pop
xchg
lahf
in
mov
addr16
jle
shll
dec
es
adc
adc
dec
xor
popf
cs
mov
jne
jle
or
adc
repnz
push
popf
inc
addr16
cmp
mov
popa
dec
push
rorb
xchg
pop
pop
shll
jbe
mov
mov
xchg
fisubrs
jle
loope
sub
and
fistl
xor
and
pop
jp
test
out
jnp
dec
insl
out
aad
out
clc
in
add
loope
lahf
push
mov
movsl
repz
cmp
or
test
iret
fisubrs
mov
mov
inc
ja
andl
jmp
mov
cmpsb
cmc
mov
roll
jnp
mov
out
jno
pusha
test
jb
add
pop
jo
mov
pop
sub
shlb
pop
test
sub
add
sub
sub
or
cmp
cmc
jbe
movsl
lock
dec
mov
icebp
js
mov
fsubl
mov
adc
imul
les
mov
and
cli
mov
add
inc
aam
imul
aad
dec
jo
or
sbb
shrb
shll
lret
sbbb
xor
insb
or
addb
dec
aad
cmp
mov
jbe
or
out
or
sub
fnstenvs
mov
stc
pop
scas
jl
in
mov
sub
in
push
xor
loop
fwait
cmp
sub
push
negb
sbb
fsubp
mov
inc
inc
bound
dec
lods
adc
xor
ret
mov
arpl
mov
icebp
mov
jnp
imul
mov
dec
or
into
sahf
or
cmp
jo
shl
add
inc
fistpl
add
inc
fidivrl
xchg
mov
iret
cwtl
dec
aas
or
ds
fsubl
sti
pop
lret
fbld
xchg
xor
push
dec
jmp
jnp
ret
dec
fldcw
mov
sbb
sahf
in
movl
dec
push
sub
dec
or
stc
shll
ss
pop
repz
test
jns
insl
jecxz
pushf
push
flds
es
lea
sbb
roll
jle
mov
or
arpl
pusha
scas
fstpl
and
cltd
bound
push
jb
lds
push
into
push
jne
dec
dec
clc
add
xchg
adc
cmp
test
shlb
ja
push
mov
jbe
mov
mov
mov
and
jle
es
jmp
ror
fcmovb
or
mov
cmpsb
add
in
push
ja
add
pop
shrb
les
xchg
cmp
jmp
int
adc
scas
xor
pushf
sti
test
inc
mov
ficoms
popa
fimuls
add
adc
addr16
sarb
ret
cmp
pop
cmpl
pop
std
sti
mov
cmp
add
inc
xor
add
and
or
arpl
scas
cltd
sbb
inc
je
flds
inc
stos
fstl
test
adcb
leave
shr
ret
test
mov
lds
push
add
lea
ror
xchg
pop
sub
sbb
fsubrl
dec
movsb
xchg
addr16
add
aaa
xchg
hlt
lds
or
adcb
xor
outsb
adc
cmp
jae
and
mov
aaa
inc
cs
add
sar
inc
push
or
adc
out
lods
xor
mov
loope
mov
mov
popa
popa
aaa
mov
jbe
adc
out
lods
adc
xchg
xor
pop
mov
jmp
push
cmpsb
adc
sbb
add
imul
fcmovnu
lcall
cld
jge
xchg
xchg
inc
jns
pushf
rcr
shll
or
pop
fs
xchg
icebp
or
and
test
jnp
or
es
insl
fnsave
adc
xchg
dec
fisubl
xor
rcrb
or
outsl
xor
mov
add
es
inc
xor
in
scas
add
or
test
push
adc
popa
sub
dec
outsb
lcall
mov
dec
xor
sub
cwtl
imul
lret
aam
fs
mov
push
or
and
add
outsb
out
int
mov
les
mov
je
cmpl
mov
bound
pop
jle
or
dec
dec
lcall
inc
lret
inc
lea
gs
mov
in
movsb
adc
pop
xchg
mov
mov
mov
pop
ja
jge
ljmp
sbbl
add
or
inc
push
aam
push
pusha
scas
xor
dec
out
cmp
stos
mov
xchg
mull
jg
xchg
pop
pop
inc
mov
sub
dec
pop
lret
ljmp
fnstcw
fists
sbb
mov
mov
pop
popf
sub
mov
xor
mov
and
in
push
jnp
fsub
push
enter
into
stc
bound
in
jle
fwait
testl
dec
or
inc
or
mov
or
sarl
sub
mov
mov
jo
fldenv
push
rclb
push
mov
mov
mov
cltd
gs
ss
fwait
leave
sub
pop
aam
cmc
push
sub
aaa
adc
sahf
dec
jle
dec
cmp
dec
jae
out
cmp
test
push
mov
adc
xchg
arpl
fidivl
mov
shll
mov
pushf
sbb
push
mov
movb
and
lcall
call
sub
jle
jmp
inc
jb
xchg
subb
movsl
push
lcall
cltd
cmpsl
popf
push
push
aas
cwtl
aam
pop
je
sbb
mov
fdivrs
push
movsl
push
sti
andl
inc
ss
clc
rorl
add
and
cwtl
ret
pop
sbb
jle
or
stc
lods
xchg
mov
sbb
pop
pop
stos
pop
sbb
call
sahf
sbb
mov
mov
ficoms
sahf
test
ret
rorb
xor
lock
push
ret
inc
mov
dec
ret
icebp
in
mov
insb
pop
cmc
and
imul
xchg
imul
lods
sbb
popf
mov
add
mov
ja
sub
rorb
cmc
and
and
dec
sub
std
or
repnz
shlb
cmpsb
sub
mov
inc
les
xchg
in
lea
out
jns
mov
cmp
cltd
stc
dec
shlb
vaddps
pop
lods
pusha
inc
add
enter
fsub
push
es
lret
nop
and
scas
inc
push
mov
lods
ret
subl
mov
push
test
cmp
dec
sbb
inc
pop
sbb
cmpsb
mov
ds
jne
xor
adc
dec
shrb
inc
cmp
icebp
cmp
in
jge
xchg
jbe
add
cmp
test
and
das
jl
and
xor
enter
mov
lods
outsb
outsl
dec
mov
sti
in
sti
cwtl
push
fcoml
insl
sbb
lds
pop
pushf
inc
push
mov
sub
adc
gs
repnz
outsl
mov
lcall
mov
pop
andb
shl
leave
xchg
and
push
scas
inc
cmp
jne
loop
push
jg
call
push
jle
repnz
and
dec
movsb
mov
mov
into
xchg
and
bound
pop
mov
pop
jbe
andb
pusha
add
clc
std
fs
mov
out
hlt
imul
push
xor
cltd
in
test
sub
add
xlat
xor
repz
test
sub
adc
inc
popa
xor
jmp
repz
mov
add
mov
jl
dec
push
xchg
mov
push
iret
in
mov
lods
xor
idivl
sbb
jb
xchg
mov
rcrb
fisubrl
add
int
xor
lods
sbb
je
out
aas
inc
dec
push
jl
mov
loope
mov
jo
stos
out
inc
in
fwait
test
add
jecxz
fnstcw
sti
push
adcl
lahf
mov
add
cmp
mov
jp
push
fistps
outsl
das
xor
das
sysexit
pushf
fisubrs
xlat
test
data16
mov
addb
or
pushl
add
outsl
jmp
call
jns
dec
in
mov
aaa
rclb
movsl
sub
and
es
shlb
sub
das
popf
dec
push
cmp
imul
loopne
jb
repnz
mov
icebp
aad
cmp
add
cmp
or
pop
enter
sti
adc
ljmp
into
aaa
push
inc
and
sub
adc
dec
fcoms
cli
js
or
or
clc
aam
ss
jle
xchg
dec
addr16
jg
inc
or
clc
jns
and
fisubs
jle
mov
mov
inc
addr16
push
inc
int3
mov
shrb
popa
jge
test
pop
jle
lds
cwtl
push
xlat
pop
insl
adc
ret
in
cmpsb
mov
adc
pop
inc
cld
nopl
sbb
pop
push
dec
pusha
push
push
push
movl
dec
mov
push
outsl
out
movsb
xchg
push
movsb
and
xor
xchg
js
cmp
stos
mov
mov
jecxz
inc
incb
mov
rcll
inc
mov
enter
cltd
xor
aas
sbb
pushf
decb
xchg
cwtl
pop
pop
jecxz
xchg
mov
or
test
popa
jne
call
pop
test
in
mov
sarb
cmp
jbe
test
sbb
push
xor
dec
les
pushl
or
mov
ljmp
push
es
lcall
adc
xor
push
shrb
insl
mov
mov
push
int
popa
notl
loopne
and
stos
ja
in
and
adc
add
movsb
cmpsb
stc
in
enter
jle
ret
push
jl
push
inc
test
cmpsl
dec
adc
jns
stos
push
mov
mov
inc
cmpsb
xchg
cmp
jecxz
add
push
ret
gs
jns
test
int
data16
mov
push
sub
repz
jmp
mov
sub
push
out
ret
inc
mov
mov
sub
rol
mov
xchg
ret
adc
add
mov
xor
xor
repz
dec
iret
dec
dec
jg
lret
adc
pusha
xchg
repz
je
call
or
mov
sbb
pop
jae
pop
nop
jnp
repnz
push
dec
jae
xor
cli
in
jmp
dec
mov
in
xor
sub
ss
and
or
mov
mov
mov
std
test
insl
fwait
dec
lcall
std
outsb
dec
mov
push
mov
mov
push
jne
xor
cli
les
lret
stos
lds
jecxz
adc
mov
inc
loopne
es
aas
xor
and
mov
stos
jge
mov
jno
sti
sub
int3
dec
inc
ds
dec
stc
mov
jmp
sbb
cmpsl
sar
push
mov
ficompl
add
pushf
pop
inc
stc
aad
dec
pop
mov
sbb
inc
mov
int3
dec
lcall
sub
pop
in
jge
mov
imul
popf
stos
sub
cld
arpl
add
mov
dec
leave
cld
addr16
testb
lods
sbb
cld
jns
pop
sbb
repnz
cmp
xor
cmpsb
repz
inc
enter
je
and
adc
xchg
xlat
and
js
inc
xchg
cmp
jo
sbb
xchg
gs
shl
rcrl
jae
clc
xlat
sub
push
mov
ljmp
loope
sub
inc
jne
mov
pop
mov
stos
test
loope
dec
sbb
int
aas
pop
out
mov
xor
xor
bound
ss
insl
stos
mov
jns
jbe
gs
rorl
xor
push
insb
outsb
sbb
or
or
inc
cmpsl
popa
xor
dec
outsb
pushf
push
push
add
cmc
jns
lret
sbb
add
addr16
mov
inc
push
adc
dec
or
push
xchg
dec
lcall
pushf
in
dec
pop
cwtl
lock
push
movsb
mov
cmp
mov
lods
jmp
dec
jge
jne
nop
dec
jge
push
rorb
jae
push
fwait
test
add
daa
pop
inc
scas
idivb
imul
imul
cmp
cmpsb
inc
sbb
xchg
movsl
das
int
cmp
cmpsb
cmp
pop
cmp
mov
stos
in
sarl
jmp
pop
push
jmp
mov
ja
movsb
lods
dec
or
sub
mov
fsub
jmp
addb
call
incl
pusha
mov
xchg
or
push
add
and
ret
cmp
js
pop
out
add
movsb
sub
push
push
jns
mov
cmp
push
xlat
repz
out
xchg
mov
mov
add
das
inc
push
jae,pn
mov
mov
jmp
sbb
pop
sub
adc
shlb
ret
pop
pusha
sti
pusha
ljmp
arpl
movsl
pop
scas
aam
add
dec
arpl
inc
andb
pop
jnp
jecxz
fadds
fldl
push
mov
mov
dec
dec
int3
cmc
mov
jle
or
sahf
cmp
pushl
and
add
jb
outsl
push
mov
outsl
jo
das
sti
out
xchg
imul
gs
je
mov
push
int
xlat
icebp
fisttpll
arpl
push
add
loopne
hlt
das
test
les
hlt
adc
mov
dec
ljmp
mov
cmp
mov
xchg
nop
shl
into
push
adc
cmp
fs
bound
div
movsb
push
loope
adc
adc
sbb
int3
push
fadd
mov
jecxz
cld
nop
jle
insl
pop
dec
dec
and
fs
push
cli
dec
cmp
or
enter
xlat
outsl
cmp
mov
les
or
inc
pushf
test
xor
loop
loop
scas
pushf
lods
bound
mov
popl
pop
scas
sbb
ret
ss
lcall
and
or
cmp
addl
fcmove
sub
add
push
dec
sub
inc
and
sbb
testl
jg
shlb
jb
outsb
mov
les
roll
pop
jae
jge
ja
and
adc
jae
inc
push
sub
ss
test
shll
cmc
insl
mov
lea
and
fstpt
push
inc
cmc
outsl
mov
cld
mov
dec
in
enter
mov
int
cmp
pop
and
fisubrl
xchg
loop
cmpsb
fsubl
shrb
or
mov
lcall
jae
daa
movsl
mov
pop
or
dec
movsl
lods
jo
mov
out
fldt
cmc
add
inc
push
adc
or
sbb
out
ss
mov
fsubrs
ds
cli
ljmp
adc
insl
add
fistpl
out
rorl
movsl
mov
out
fldl
pop
mov
insl
mov
fptan
jp
jne
mov
pop
icebp
jmp
popa
cmpsl
outsb
das
mov
jge
inc
jae
shrl
int
mov
sbb
popa
sub
xor
js
addr16
fidivs
sub
stc
stos
fadd
and
jge
outsb
pop
mov
cmp
in
mov
jl
inc
scas
mov
enter
jne
and
xlat
inc
daa
add
daa
push
or
mov
adc
ret
dec
mov
lcall
and
dec
imul
push
xlat
shll
xchg
jnp
scas
mov
repnz
mov
andb
icebp
out
or
dec
push
push
xchg
mov
jno
shlb
mov
push
mov
sub
xor
jb
xchg
dec
add
pop
scas
add
loope
call
in
cltd
das
adc
xlat
popa
sbb
inc
mov
pop
jno
or
xorl
test
mov
push
mov
repnz
out
cmp
push
and
into
sub
lods
rorl
push
jne
out
roll
sti
ficoml
jae
cwtl
cmp
sahf
push
mov
cmpsb
fs
jge
jb
ds
cmpsl
dec
push
lock
sub
add
fisubrl
push
adc
inc
xor
adc
loop
rolb
jmp
repz
sahf
jb
fwait
mov
push
or
ret
lcall
sbb
sarb
or
rclb
xor
xchg
jbe
sarb
jns
out
ret
sub
adc
xor
xchg
rorl
outsb
pop
sbb
sub
insl
pusha
out
shl
mov
test
push
out
aam
inc
mov
xchg
jmp
push
repz
inc
repz
scas
xor
mov
mov
cmp
mov
loop
daa
ja
mov
cli
jo
inc
inc
in
cld
call
inc
iret
push
or
mov
sarb
cmc
mov
cmp
xchg
mov
pop
xor
xor
lock
std
cmp
shll
push
cld
loopne
imul
xor
adc
int3
xchg
and
dec
roll
xor
imul
shrl
rcrb
in
outsb
jle
ret
iret
pushf
xor
addr16
add
arpl
cmp
adc
ja
movsb
adc
push
xchg
movsl
shlb
inc
xor
lcall
jne
mov
push
adcl
fdivp
sub
inc
pop
xor
cmp
and
add
xchg
rcr
in
sbb
and
aad
dec
mov
outsb
lret
into
inc
inc
notl
cmp
push
mov
ret
xor
sbb
jecxz
sub
or
mov
xor
cli
outsb
fstpt
stos
mov
pop
stos
sub
jne
push
loop
std
mov
subb
dec
enter
cmp
loop
enter
mov
inc
mov
mov
mov
repz
lahf
hlt
lret
mov
xchg
fmull
xchg
stos
dec
movsl
push
mov
inc
xchg
jo
lock
lock
add
adc
mov
push
jae
arpl
in
hlt
adc
add
repz
xor
add
adc
mov
push
jae
arpl
in
hlt
adc
add
repz
xor
add
adc
mov
push
jae
arpl
in
hlt
adc
xor
and
xor
add
adc
mov
push
mov
jecxz
insb
stos
or
cmp
sub
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fnstsw
jge
mov
cmp
insl
int
frstor
mov
pushf
add
fnstcw
sub
or
pop
cmp
test
xlat
popf
jmp
dec
lahf
pop
out
insl
cmpl
dec
sbb
jnp
mov
cwtl
sti
out
stos
hlt
lea
pop
push
xchg
nop
fimull
mov
push
loop
lods
bound
es
shr
sbb
testb
loop
cmpsb
dec
mov
inc
and
data16
jo
bound
enter
bound
stc
or
dec
adc
mov
add
or
cs
pop
sub
xchg
or
cltd
cmp
dec
in
adc
in
into
fs
out
mov
mul
dec
adc
mov
lcall
ficoms
inc
inc
mov
pop
out
clc
fldln2
ss
aad
sti
dec
xor
or
cwtl
dec
jo
stc
xchg
popf
lods
lods
xor
pop
or
jge
or
pop
cmp
add
fwait
std
mov
lds
sti
cmp
sbb
jne
gs
fdivrl
push
pop
push
movsl
cli
outsl
flds
mov
leave
mov
sbb
gs
xor
lahf
fdivs
mov
std
mov
jae
push
jne
gs
xor
cmp
test
stc
popf
jmp
dec
cmp
insl
sbb
or
pop
cmp
test
stc
popf
jmp
dec
cmp
loopne
das
out
push
push
pusha
pop
lock
jbe
testb
pop
lret
sbbl
sti
loopne
push
jmp
cmc
clc
decb
xor
loope
mov
jnp
inc
lahf
or
fsts
push
xchg
fdivs
loop
ds
xor
mov
scas
fwait
or
fsubrp
testb
sub
and
frstor
add
pop
int
xor
mov
adc
repnz
arpl
xchg
pop
test
mov
repz
add
int3
jecxz
xchg
jns
jb
inc
xchg
dec
out
sub
sbb
inc
xchg
arpl
jne
mov
cs
sbb
dec
mov
dec
push
or
inc
jge
adc
addb
mov
cwtl
iret
dec
insb
fdivs
cmp
ret
lahf
movsb
jg
not
ss
in
push
lret
cwtl
pop
je
jb,pn
sub
dec
sub
add
aam
negl
xchg
and
repz
jge
imul
mov
jnp
push
cmp
js
ss
jmp
sti
pushf
add
hlt
das
mov
mov
mov
scas
dec
dec
das
lahf
cmp
xor
cltd
das
hlt
lret
xchg
xorb
aaa
out
popa
aam
jmp
mov
jnp
into
dec
inc
xchg
cmpsb
or
clc
ds
iret
test
xorl
xor
mov
aad
lahf
mov
add
lret
dec
aad
sub
mov
imul
push
neg
rorb
fadds
cmp
insl
in
pop
leave
std
xchg
aad
mov
insl
adc
push
inc
xor
cwtl
sub
aad
out
mov
dec
lods
xrelease
sub
mov
mov
es
mov
movsb
shll
std
mov
leave
shlb
lds
icebp
in
pop
jbe
mov
dec
int3
imull
jge
sub
xor
gs
push
jg
leave
add
popf
das
mov
repz
cmpl
mov
cmp
loop
lods
aas
add
dec
mov
pop
out
mov
test
push
mov
push
adcb
xor
cmp
xchg
push
cmp
cld
and
add
pop
aaa
xor
jecxz
shrl
in
dec
mov
das
movsl
sub
lods
xchg
adc
arpl
out
mov
mov
cmp
xor
ret
std
scas
cltd
or
movsb
sub
addr16
popa
call
xchg
test
sub
mov
push
push
jnp
xor
and
mov
sahf
jbe
cmp
dec
insl
scas
push
xchg
js
lds
push
ljmp
int3
outsb
testb
or
xchg
sub
aaa
sbb
push
sub
imul
xchg
out
cltd
dec
xlat
clc
mov
out
add
maxps
loop
enter
sbb
popa
pop
enter
sub
bound
out
bound
inc
cli
mov
mov
pop
clc
es
cmp
cmp
cld
popa
or
and
mov
mov
jbe
jbe
adc
sub
push
aad
ret
push
enter
inc
xchg
or
sub
ror
xchg
mov
pusha
push
aam
hlt
adc
fstpl
out
pop
xlat
add
in
pushf
cld
rcl
outsl
imul
push
adc
div
xlat
into
out
pop
push
rcrb
adc
rcrb
add
or
cmp
ror
orl
lds
mov
sbb
icebp
xchg
stos
and
scas
out
push
jns
sub
std
push
mov
mov
jb
adc
in
into
insl
xor
jo
adc
dec
mov
shrl
push
nop
lcall
lds
mov
data16
push
push
mov
xor
xorb
mov
dec
sbb
cld
add
stos
lds
mov
and
jno
mov
jne
nop
clc
sub
dec
stos
push
ljmpw
in
cwtl
jb
xchg
into
ret
and
xchg
sbb
pop
sbb
mov
subb
test
pop
mov
sub
aaa
ss
cmp
fs
pop
sub
imul
xor
or
mov
or
or
cmpsl
mov
push
push
shrb
sbb
nop
push
es
add
xchg
inc
push
jno
sbb
js
fdivrs
gs
or
leave
fmul
out
pusha
pop
lods
fcmovnb
pop
jno
popf
mov
lret
arpl
insb
in
jmp
inc
in
lret
xchg
mov
mov
dec
insl
add
or
pop
inc
sarl
fst
lods
mov
xor
pop
icebp
dec
cs
ja
mov
and
xchg
adc
push
iret
out
mov
cmpsl
adc
pop
mov
dec
pop
add
add
mov
insl
add
enter
mov
xor
cmpsl
mov
inc
jmp
clc
xor
ja
dec
mov
or
push
in
mov
in
xor
mov
push
mov
lahf
loop
push
fsub
or
pop
repz
mov
mov
rolb
adc
xchg
push
adc
inc
mov
push
nop
in
jns
insl
inc
pop
stos
repnz
jbe
add
test
cmp
push
aaa
inc
inc
movsb
cli
pop
lds
out
push
jbe
jo
ljmp
jnp
and
faddl
in
call
dec
popf
dec
jg
mov
jb
pop
lahf
icebp
mul
push
xor
or
xchg
xchg
nop
xchg
or
inc
jmp
sbb
or
data16
mov
xchg
mov
jmp
popf
jge
jns
push
inc
scas
addr16
ljmp
xor
push
inc
inc
outsl
adc
push
int
pop
stos
fimuls
lock
lock
lret
cld
cmp
or
pop
mov
hlt
push
cmp
scas
fistpll
cmp
pop
pop
fstpl
and
mov
add
mov
jno
push
jge
sti
xor
xlat
imul
push
rolb
and
cli
sbb
mov
sbb
mov
sub
pop
popa
repz
mov
lods
iret
outsl
cmp
cld
cwtl
fists
adc
mov
xchg
test
out
jp
dec
add
call
jbe
cmpsl
inc
andl
inc
enter
cltd
push
rorl
les
test
mov
sub
dec
insb
sub
loope
inc
fwait
add
shrb
cwtl
mov
or
xchg
loopne
dec
pop
pop
inc
lods
popf
movsl
mov
xor
shll
and
int3
push
lds
mov
xchg
push
ja
lret
ds
std
or
mov
push
push
sbb
je
shlb
add
out
cmpsl
jmp
stos
idivl
and
inc
add
sti
inc
or
push
fwait
push
jp
sti
mov
push
xchg
xchg
jo
sbb
inc
mov
cmpsb
cmpsb
data16
fimull
mov
movb
in
fisubrl
cmpsl
cltd
aad
inc
inc
jle
dec
fcomps
lods
and
test
pop
arpl
push
ja
out
data16
or
mov
jg
in
outsl
jae
test
inc
fnstsw
xchg
out
repz
out
xchg
push
jg
in
add
bound
push
xor
jg
movb
in
test
hlt
or
ss
test
sbb
inc
test
js
mov
jno
push
or
and
cmpsb
ret
xor
shrl
or
adc
cmp
dec
mov
adc
cmpsl
adc
pop
jp
sahf
cmp
ja
out
testb
in
loop
cmpsl
lret
mov
push
inc
jg
mov
push
lock
pop
sbb
xchg
push
filds
cmp
jns
imul
insl
mov
mov
lea
inc
xchg
sub
loope
push
fistps
enter
std
dec
bound
popa
fidivl
mov
sbb
stos
adc
mov
and
xor
jns
mov
sarl
pushf
mov
cmc
and
mov
movsl
nop
pusha
mov
add
ss
push
adc
cs
mov
xor
and
bound
loope
shrb
cmp
push
jp
add
int3
push
ret
jb
out
xchg
addr16
fcomps
scas
arpl
xor
movsb
jne
enter
aas
stc
push
push
inc
inc
cmpsb
add
aad
and
mov
ds
pop
fcompl
dec
sahf
add
icebp
pop
pop
dec
push
push
or
inc
add
popa
sbb
insl
sarb
dec
mov
stos
repnz
repz
fcmovbe
mov
sbb
loopne
jno
rolb
inc
inc
cwtl
es
jno
imul
xor
sbb
sub
mov
addr16
sbb
push
insb
push
push
aaa
mov
loop
arpl
push
adc
sarb
push
fsubl
sub
stos
mov
popa
pusha
push
mov
popf
cmp
dec
or
mov
xor
pushf
jns
lret
scas
lcall
testl
push
ja
test
cmp
imul
xchg
dec
push
das
xlat
jb
outsb
sarb
test
cwtl
shrl
mov
cmovo
gs
and
imul
sub
adc
xor
ss
cwtl
inc
call
jo
inc
arpl
bound
popa
daa
push
sub
lret
lods
dec
adc
inc
cmp
cmp
sub
jmp
inc
fnstsw
jbe
mov
mov
adc
jg
xchg
adc
pop
out
jl
into
ret
movsb
scas
jnp
dec
and
mov
das
pop
sub
jmp
jle
mov
lret
movsb
inc
sub
insb
fsubs
jl
aas
cmp
sub
lcall
int3
mov
imulb
ret
mov
mov
cmp
push
or
fisubl
mov
les
lds
loop
test
mov
xchg
jb
jmp
dec
add
mov
inc
sub
sub
es
shlb
mov
inc
xlat
pop
jo
std
bswap
shll
shr
punpcklwd
adc
pop
mov
mov
cli
ret
sub
mov
repnz
push
add
jb
out
fistpll
insl
push
std
xchg
dec
xor
mov
mull
into
dec
xor
inc
das
jo
rcrl
lods
push
aaa
cmp
pop
imul
sub
out
jb
mov
mov
bound
xchg
and
mov
aas
leave
push
test
test
push
adc
inc
dec
xchg
cmpsl
sbb
sub
push
add
ljmp
xchg
dec
adc
pusha
lea
mov
incb
loopne
mov
loop
push
and
or
cmc
loop
push
int
mov
adc
popf
in
inc
add
mov
pop
clc
dec
and
push
mov
mov
cmp
ss
into
cwtl
ret
inc
mov
mov
xor
jg
or
mov
jmp
pop
push
sub
enter
xchg
cld
js
sub
xor
mov
outsl
jle
mov
mov
push
xlat
aam
fdivrp
jno
shl
xchg
add
and
inc
add
sbb
or
movsl
mov
pop
inc
lods
nop
inc
push
and
imull
ljmp
sbb
test
ficoml
in
in
rcll
or
add
scas
mov
fcomp
add
ja
mov
mov
mov
sbb
out
rol
clc
inc
pop
clc
xchg
mov
mov
pop
jl
inc
out
imul
call
jle
dec
gs
outsl
mulb
int3
mov
pop
jp
xchg
loope
in
push
adc
insl
gs
repnz
or
cwtl
push
lret
add
in
jg
addr16
iret
js
dec
fisubrl
ret
pop
pop
add
sub
jmp
mov
mov
xchg
sub
adc
pop
lods
sub
pop
mov
sbb
subl
jmp
push
in
aas
cmp
xchg
mov
sub
dec
mov
mov
cmp
shl
pop
mov
jge
sarb
rcll
jl
sar
xchg
mov
test
out
mov
xchg
add
mov
insl
movsl
lods
cmp
dec
mov
mov
mov
lea
push
and
mov
jbe
xchg
test
lods
adc
in
std
test
lcall
shlb
fistps
jnp,pn
cmp
xor
fisttpll
adc
inc
hlt
fisttps
jne
jns
cmp
sbb
dec
jbe
push
lds
mov
xchg
adc
das
ds
jno
lods
sti
test
pop
arpl
jmp
and
sbb
clc
xor
or
pop
or
adc
sub
and
in
stos
test
outsb
ret
aad
push
cmp
mov
add
adc
lds
mov
das
push
sub
inc
or
loop
nop
dec
out
aas
xor
icebp
mov
cs
adc
push
mov
jo
push
push
or
cli
xchg
and
aam
aas
pop
and
cmp
aas
int
xor
movsb
inc
outsl
rclb
shrl
jmp
outsb
mov
jle
cmp
in
mov
lds
mov
dec
sbb
out
jmp
pusha
xor
mov
fildl
in
pop
fistl
lock
cmp
loop
movsl
gs
fsts
sti
sbb
adc
jbe
add
sbb
lock
out
enter
adc
add
ljmp
int
aas
jmp
mulb
enter
outsl
inc
and
pop
inc
and
or
ljmp
clc
xor
and
sub
aam
push
mov
jne
repnz
cmp
mov
dec
jg
or
mov
sub
inc
inc
aam
in
fwait
xor
and
leave
jp
pop
push
repnz
movsb
dec
xor
sub
mov
aaa
xor
bound
fsts
cld
andl
mov
movsl
sbb
mov
nop
ljmp
inc
mov
loopne
movsl
or
jno
call
fistps
out
std
call
out
rclb
inc
test
mov
cmp
es
addb
les
pop
mov
mov
mov
cmp
jb
stc
jno
out
out
jb
ljmp
jbe
adcl
aas
sbb
test
pushf
cs
jecxz
sbb
ja
inc
pop
push
sbb
jno
ret
jge
neg
xlat
sub
jns
in
inc
cltd
xchg
inc
fiadds
xchg
testl
imul
shlb
inc
repz
inc
xchg
stos
xchg
pusha
loopne
sub
add
pushf
les
out
pop
add
jg
stc
sti
test
sarl
jb
cmc
icebp
popf
inc
sbb
aaa
dec
cmp
jno
mov
inc
xchg
dec
stos
outsb
and
inc
in
push
push
cmpsb
jne
lret
inc
adc
aam
scas
or
cld
xor
or
pusha
test
xor
aad
pop
icebp
push
addr16
mov
adc
pop
push
dec
pop
cmp
pop
jb
push
dec
loopne
adc
jl
sub
outsl
xor
xchg
rdpmc
push
mov
or
sbb
in
lcall
sub
loope
rcr
das
ficomps
jne
adc
xchg
les
mov
mov
imul
std
mov
mov
xchg
mov
arpl
inc
clc
jecxz
dec
popf
push
mov
sarb
enter
nop
cmpsb
cmpsl
and
push
cmp
sub
stos
sub
pop
fmulp
sub
cmc
and
out
and
ret
push
xchg
lret
repnz
push
mov
into
loopne
lods
mov
fbstp
mov
rorl
or
in
fdivr
pushfw
pop
push
jo
pop
jp
jb
mov
pop
jne
mov
nop
push
shrb
fwait
cmp
or
and
xor
or
loope
aam
dec
push
lock
outsl
adc
inc
and
jbe
sar
nop
shll
mov
jns
adc
fcoms
add
ror
insl
cmp
movsb
in
and
enter
push
jp
test
sahf
arpl
lcall
or
mov
outsl
push
inc
movsb
mov
or
dec
xor
and
add
xor
sahf
rorb
aad
nop
add
idivb
add
jg
cmpsl
xor
cmp
cs
adcl
push
in
js
mov
xchg
cwtl
push
dec
outsb
jne
sbb
jnp
in
cmp
aam
shlb
ss
dec
fwait
add
push
dec
add
rclb
mov
inc
insl
dec
lahf
fwait
test
loop
jmp
dec
shrl
pop
mov
lahf
outsb
testb
fwait
push
mov
sbb
sbb
stos
pop
sub
scas
je
dec
pusha
js
push
test
xor
pushf
and
lds
lahf
cmpsl
jp
xorb
imul
dec
and
ja
ret
fs
repnz
loope
and
movsl
je
fdivrp
ds
push
fmuls
insb
jecxz
or
mov
mov
je
push
mov
dec
pusha
add
mov
mov
sbb
mov
outsl
jbe
push
imul
push
lret
rclb
jp
imul
loop
out
addb
pop
dec
test
stos
jg
or
xacquire
ror
lret
fisubrl
lods
lret
or
pop
and
xor
imull
ret
sub
sar
or
rcll
lods
rclb
xchg
bound
testl
call
cmc
or
sbb
mov
sbb
repz
pop
insb
fldcw
pop
cmp
add
sbb
jecxz
cmp
cmp
div
xchg
ja
xchg
xlat
push
jae
pop
fs
adc
adc
xor
outsb
inc
pop
mov
mov
adc
push
add
sbb
pop
ds
ret
into
stos
mov
jle
jbe
sahf
ds
sbb
ror
sbb
xchg
icebp
push
jmp
ret
fdivrs
sbb
push
bound
into
ficomps
cmp
lock
and
test
lock
lret
mov
fiaddl
push
cmp
mov
cmc
push
into
push
js
xor
mov
push
cli
addr16
pop
add
ret
fwait
or
jnp
push
add
popa
mov
rol
lock
xorps
mov
pop
enter
shlb
xor
dec
insb
incb
enter
stos
mov
jle
pop
mov
xchg
popf
cltd
sub
xchg
sti
xchg
mov
fiadds
xor
inc
mov
loope
and
das
pop
xor
mov
push
adc
bound
cmp
adc
nop
and
adc
lret
flds
xchg
mulb
mov
rcll
add
pop
sbbl
ret
xor
pop
testb
lods
lds
or
insl
lods
lods
out
xchg
mov
mov
mov
push
dec
add
lahf
jle
adc
ja
jl
mov
ljmp
cld
or
mov
dec
push
mov
pop
xor
pop
mov
pop
push
shlb
adc
mov
out
or
test
and
xchg
leave
fistpl
mov
aam
enter
fisubl
sbb
addb
cmc
mov
mov
les
cmp
inc
xlat
aam
cmpsb
add
adc
add
mov
or
cmp
jp
xor
mull
cmc
xor
add
jl
or
dec
in
movsb
inc
out
push
incl
jge
movsl
loope
aam
aam
jmp
sub
push
lods
rorb
mov
sub
sbb
pop
fwait
mov
fadds
lret
ret
scas
jno
adc
aad
test
or
mov
js
lods
pop
ret
xor
enter
cmpsl
lahf
or
ss
or
and
fsubrl
inc
or
dec
mov
mov
movsb
mov
mov
dec
pop
push
sbb
or
stos
sbb
pop
sti
pop
push
lea
rorl
mov
lods
out
ljmp
into
loope
jae
pop
test
out
dec
les
scas
adc
push
pop
inc
movsb
jle
mov
bound
and
jo
daa
mov
mov
ret
pop
daa
fwait
or
pop
fists
js
mov
int3
mov
push
adcb
xlat
and
xchg
cmp
dec
test
pop
or
lcall
lret
int3
adc
fisttps
cs
in
mov
popf
cmpsb
and
dec
sbb
lret
stc
cmp
mov
outsb
out
lret
cmp
insl
mov
mov
or
jns
or
shll
ror
sbb
shrl
scas
test
lods
cmpsl
icebp
lods
sub
jns
imul
cltd
std
mov
fnstcw
sub
jge
or
pop
cmp
test
stc
popf
jmp
dec
cmp
jge
or
pop
cmp
lods
in
cltd
std
orb
mov
int
std
jge
or
fnstcw
add
std
cli
adcl
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
push
cmp
jbe
pop
es
ss
js
fdivrl
xchg
xchg
jmp
inc
or
sub
push
dec
push
jns
imul
out
neg
jecxz
xchg
stc
cmpsb
jmp
push
and
jbe
push
push
push
popa
imul
out
rcrl
movsl
ret
mov
cmp
dec
stc
mov
inc
jb
xor
enter
fdivs
inc
testb
xchg
sti
jae
dec
fwait
cld
scas
cld
mov
inc
sbb
mov
push
out
push
cmc
xchg
lret
mov
dec
int
repnz
test
xlat
and
xor
jp
lret
sbb
jae
and
cs
sub
leave
jbe
shr
mov
xchg
cmpsb
lea
xor
cltd
ss
cmp
mov
aad
xchg
into
stc
push
icebp
pop
jmp
jle
dec
dec
popf
mov
rol
xchg
stc
or
jmp
push
cmp
jbe
push
pop
push
jns
jo
add
mov
xchg
xchg
jecxz
jmp
das
pop
daa
pop
aaa
sub
bound
imul
mov
xchg
repnz
rorl
sub
push
cs
adc
jns
cmp
fisubl
call
add
pop
gs
adc
push
jns
imul
mov
xchg
xchg
stc
cmpsb
jmp
push
cmp
jbe
push
dec
push
jns
imul
mov
xchg
xchg
stc
cmpsb
jmp
jle
or
xor
jno
sarb
xchg
mov
and
popf
std
mov
xchg
pusha
or
fwait
or
xor
fidivs
icebp
inc
jbe
dec
and
icebp
jmp
mov
jns
cmp
in
out
call
subl
and
test
or
aam
jmp
jmp
push
and
dec
je
mov
sahf
sbb
and
sbb
sti
nop
stos
cmpsl
mov
pop
es
mov
pop
xchg
addl
push
mov
test
push
mov
adc
pushf
or
popa
dec
push
cmc
ret
xchg
loopne
xor
mov
in
adc
push
adc
jns
jg
test
cmp
sahf
out
shlb
xchg
sub
insl
imul
jb
push
insb
pop
and
pop
hlt
mov
mov
sbb
push
pop
or
shrl
mov
stc
pop
sub
outsb
push
or
lret
mov
dec
push
sbb
jnp
test
jge
jle
jne
pop
jb
loope
mov
jle
add
mov
popa
jnp
jl
sbb
shrl
mov
sbb
movsl
mov
push
jnp
ret
add
gs
xlat
and
push
lods
outsl
adc
addl
gs
dec
imul
mov
cmp
dec
or
pop
mov
jl
mov
call
sub
aaa
xchg
frstor
in
cmpb
idivl
loop
mov
int3
pushf
and
adc
addr16
xchg
or
cmpsb
test
stos
sar
mov
filds
adc
jo
ffreep
cmp
fldcw
xchg
push
or
or
mov
cs
adc
or
dec
adc
les
or
sub
inc
je
dec
addr16
cwtl
xor
sbb
add
mov
int
incw
mov
bound
in
inc
fsubrl
sbb
enter
popa
in
mov
cmp
dec
push
leave
mov
pop
mov
adc
mov
jb
mulb
loope
les
jb
xchg
subl
xchg
sahf
outsl
jp
cmpsl
xchg
xchg
add
xor
cmp
xchg
adc
mov
or
xor
mov
mov
call
in
lret
add
addr16
xchg
movsb
dec
push
and
inc
xor
iret
mov
xor
xor
cmpsb
adc
push
cmpsb
sahf
sbb
lret
sbb
rcll
or
into
xchg
subb
cmp
or
inc
ds
mov
sbb
cmp
sbb
imul
jle
std
dec
ret
rcrl
insl
sub
fwait
test
cmpsl
lock
scas
inc
out
dec
aaa
scas
cltd
pop
sub
roll
or
xor
dec
dec
inc
dec
mov
test
push
jbe
mov
xlat
mov
xchg
xor
loop
xorl
insl
mov
jp
ss
sub
ficoms
xchg
addr16
mov
cmp
cmc
add
jg
ds
popa
lds
fs
clc
dec
mov
dec
in
xor
outsb
adc
imul
fnstcw
stc
lds
xor
push
or
hlt
sahf
int3
outsl
mov
inc
push
lea
mov
push
pop
jp
bound
and
sahf
sub
adc
jge
test
xchg
clc
mov
rol
in
dec
push
mov
outsl
inc
fscale
cltd
jmp
hlt
jl
mov
mov
cmp
cmpsb
inc
xor
subl
cmpsb
sbbb
pusha
sub
pop
je
sbb
jmp
mov
orl
out
mov
or
jbe
lods
mov
stc
mov
dec
fsubl
ja
pop
xchg
stc
xchg
push
xor
call
cltd
cs
js
pop
xchg
pusha
jg
dec
fnstsw
add
xchg
les
movsl
nop
or
nop
aam
nop
imul
pusha
xchg
xchg
jne
xor
cltd
push
adc
les
test
jl
outsb
sub
pop
nop
cmc
xchg
and
xchg
loopne
nop
fwait
sbb
imul
mov
add
mov
sahf
test
add
in
cmp
xchg
or
or
and
xor
std
imul
out
insb
sti
rorb
and
adc
cli
mov
pop
cmp
aas
jmp
pop
xchg
cli
mov
sahf
mov
or
hlt
jne
cmc
aad
fwait
mov
xlat
cmpsb
shlb
push
xchg
mov
stos
pushf
jnp
or
or
sbb
imul
jp
mov
push
xor
loop
add
das
mov
call
mov
ret
inc
push
xlat
loopne
jae
pushf
xchg
jb
in
xchg
mov
inc
xchg
shlb
mov
in
insl
cmpsl
test
sub
clc
inc
and
mov
aas
and
or
jg
or
sub
repz
xchg
roll
cmp
das
inc
push
sbb
mov
pop
cli
push
push
lds
cmpsl
jmp
dec
sbb
pushl
inc
movsb
roll
scas
rol
jg
sub
fistps
shrb
pop
sub
inc
sub
inc
scas
outsl
fwait
test
push
mov
pusha
arpl
repnz
in
icebp
repnz
hlt
psubq
adcl
mov
rorb
sbb
call
mov
add
xlat
mov
xchg
lahf
push
xor
dec
add
test
lret
and
mov
sbb
cmp
add
idivl
js
aas
popa
inc
mov
mov
imul
test
cmp
lods
les
ret
xor
mov
out
stos
xchg
lret
dec
sbb
fsubp
js
ljmp
cs
sbb
test
pop
push
xchg
pop
pop
xchg
mov
jg
push
out
cltd
xor
dec
sub
int3
add
xor
int3
fs
xor
xchg
xchg
aad
or
jno
ss
mov
fcompl
and
push
popf
sti
mov
mov
mov
push
or
mov
add
mov
cwtl
inc
lret
xchg
pop
fwait
mov
jne
mov
mov
movsb
cld
adc
mov
das
mov
aaa
push
pop
incb
add
fisttpll
inc
cvtps2pd
testl
or
mov
es
leave
and
repz
dec
push
in
xchg
mov
jb
mov
lret
rcrb
push
arpl
ficomps
sbb
sub
jle
ret
subb
cmp
mov
adc
jae
pop
int
sti
cwtl
pop
faddl
sbb
cmp
test
sarb
pop
push
mov
ljmp
jae
lcall
push
fsubl
test
push
std
xchg
push
out
inc
push
cmp
test
lock
pop
js
jp
lcall
jmp
rcrb
adc
ss
ret
pop
add
out
imul
int
lea
enter
inc
mov
inc
sbbl
jge
xlat
jg
cmpsb
inc
fwait
jmp
mov
pop
aad
push
or
or
and
xchg
xor
out
sar
push
test
adc
mov
popf
cmp
mov
movsl
xchg
jmp
std
pop
outsb
ficoms
les
bsr
sub
mov
cmpsl
xor
dec
mov
push
popa
cmpsl
lret
out
push
aam
in
dec
inc
dec
sbb
call
add
clc
imul
lock
into
je
data16
dec
lds
dec
fbstp
addr16
cmpsb
jns
movsb
cmpsb
sub
cmp
roll
orb
sbb
jno
push
int3
or
jbe
push
jb
ljmp
out
fs
std
cltd
fisubrl
ljmp
dec
int
or
out
test
mov
rorb
xchg
rorb
mov
xorb
jle
hlt
lret
xchg
mov
sub
mov
mov
cmc
mov
adc
sub
lea
cltd
lret
cmp
sbb
incb
rclb
mov
or
repnz
and
adc
addr16
jecxz
jp
dec
push
sub
repz
outsl
push
repnz
and
mov
jnp
mov
and
in
jae
fistps
loope
inc
aas
leave
and
test
inc
adc
orl
repz
add
pushf
xor
xor
pop
xchg
iret
mov
cmp
iret
cld
stos
lods
test
pand
xor
xchg
notb
ficoms
movsl
xchg
push
pushf
fildl
outsb
mov
mov
xor
shl
push
or
dec
sub
add
dec
loopne
imul
mov
pusha
mov
rcll
clc
outsb
lea
sbb
or
mov
sbb
scas
add
stc
icebp
rcll
sbb
stos
sbb
ror
lock
pusha
subb
into
mov
xchg
jns
sbb
loop
jmp
lods
mov
mov
je
xlat
mov
cmp
lds
popf
ss
jp
imul
xchg
mov
shrb
xor
cmp
jb
mov
cwtl
ss
into
jg
imul
das
dec
das
xor
leave
sbb
and
repz
and
int
lret
cmpsb
popf
in
sub
xchg
xchg
xor
sub
clc
pop
shl
xchg
mov
scas
xchg
jbe
hlt
mov
xchg
adc
scas
xchg
sbb
push
mov
xor
pop
xor
test
cmpsl
aad
jb
add
xchg
dec
pop
push
ljmp
jmp
inc
out
push
jo
xlat
mov
jge
sub
xlat
pop
imul
ljmp
popf
or
leave
cmp
stos
mov
fdivrl
imul
popf
in
test
pop
pop
mul
ss
inc
in
mov
scas
xrelease
jge
sbb
or
jbe
cwtl
push
mov
dec
repnz
imul
dec
mov
ret
imul
mov
push
inc
arpl
lret
mov
push
push
aad
sahf
dec
and
les
mov
adc
cli
adc
cmp
sbb
jmp
and
mov
or
aam
ds
mov
sub
inc
and
cmp
aam
xor
fnstsw
xchg
stos
fs
not
out
pusha
inc
xchg
pop
lahf
cmp
fcomi
mov
mov
inc
pop
cmpsl
cwtl
xchg
mov
scas
dec
inc
dec
jle
shll
das
push
xor
int
nop
out
lret
add
mov
mov
cwtl
repz
sahf
or
lods
mov
fsubs
or
inc
dec
cmp
clc
push
nop
sahf
inc
mov
test
popa
inc
push
pop
adc
cwtl
dec
ljmp
add
test
cmc
sti
mov
or
test
mov
aas
xorb
mov
inc
stos
test
les
mov
mov
dec
cmp
add
cltd
stos
sbb
arpl
imul
add
xor
cmp
pop
xchg
cltd
mull
cltd
lods
add
adc
cmp
notl
mov
test
imul
dec
lock
mov
and
mov
inc
rcrl
fcmovbe
or
mov
enter
ret
stc
and
mov
fcmovbe
repz
mov
or
cltd
lcall
pop
mov
cmp
mov
xchg
imul
jae
add
push
cs
push
push
jo
cmp
push
frstor
add
push
call
ret
imul
fcoms
and
or
das
idivl
loopne
lods
clc
push
inc
xchg
and
sbb
or
inc
addr16
sbb
aad
xor
not
popa
pusha
movsl
mov
and
lods
fs
jae
movsb
push
adc
int
mov
pop
leave
pop
mov
sub
inc
and
cld
scas
enter
dec
insb
or
push
sub
or
sarl
push
out
jle
in
das
ds
test
inc
and
lret
jno
mov
cmp
sub
movb
mov
inc
cmp
lret
ljmp
cmp
lods
jp
cmp
loope
jmp
icebp
pop
lahf
push
cmpsl
xor
lcall
shl
sub
push
ret
popa
jge
stos
xor
int3
aam
hlt
dec
sarl
out
mul
inc
push
xorl
push
std
cld
insb
insl
lock
scas
movsl
data16
lea
sahf
pushf
jno
and
xchg
jae
and
cs
xor
sbb
jl
and
sbb
adc
test
outsb
shl
jbe
movsb
inc
testb
sbb
cmpsl
mov
das
jne
inc
and
hlt
mov
lahf
mov
out
xchg
push
lods
xchg
aam
leave
aas
dec
inc
lahf
inc
es
pop
jl
jp
sub
sbbb
sbb
mov
adc
lea
imul
mov
data16
sbb
sub
sbb
outsl
mov
lret
mov
sub
push
dec
or
or
sub
and
adc
xchg
xchg
cld
fs
bound
shlb
decl
jecxz
pushf
int
jnp
xchg
icebp
jp
dec
test
out
or
sahf
lds
or
shrl
adc
movsb
icebp
pop
xchg
xor
cld
cwtl
cmpsl
aaa
cmp
test
shlb
xlat
les
icebp
jp
ret
icebp
loope
cmp
ss
pop
mov
lods
pop
insb
push
repnz
jns
inc
lods
adc
std
data16
mulb
mov
ljmp
mov
sti
js
push
ret
imul
xchg
adc
cmpw
mov
es
mov
add
fcmovbe
add
jnp
nop
jnp
je
and
mov
into
push
loope
cs
sbb
pop
push
add
loop
div
dec
jno
in
ret
pop
add
into
push
insb
add
mov
and
cmpsl
popf
test
jge
mov
pop
in
aad
dec
outsb
cmp
iret
add
hlt
idivl
cwtl
jmp
pop
cmp
mov
pop
jp
ficoms
bound
pop
ret
lods
shll
js
jp
and
mov
sbb
loopne
inc
std
push
arpl
mov
lcall
aam
sbb
jg
fwait
and
jno
scas
arpl
jp
les
cmp
out
push
fisubrl
les
dec
jne
addr16
cmp
mov
adc
loopne
and
jns
call
jge
aad
mov
shll
pop
inc
repz
push
fdivs
shrl
lds
push
pop
add
jge
inc
mov
pop
dec
mov
sbb
mov
sbb
push
pop
imul
loope
iret
mov
cmc
call
sub
cmc
mov
sbb
outsl
hlt
lea
bound
arpl
pop
pop
shr
inc
cmp
mov
inc
inc
sub
xchg
imul
lds
pop
push
clc
xchg
pop
jb
lock
sti
or
mul
daa
lods
add
fidivl
jne
cld
gs
jae
subl
jae
jmp
hlt
in
mov
outsb
jmp
mov
clc
aas
iret
adc
sbb
push
stos
insb
adc
inc
pop
fcompl
jle
ljmp
add
xor
lahf
test
out
xor
mov
mov
jp
jle
mov
clc
inc
into
adc
iret
fistpll
sub
mov
pop
fwait
in
add
gs
sti
insb
xchg
xchg
in
mov
mov
outsl
xor
call
push
xor
or
inc
stos
mov
popf
pop
pop
mov
rorl
mov
sar
cli
test
shrb
push
aad
imul
ds
or
out
or
jnp
int3
out
inc
movsb
loope
mov
pop
xor
xor
mov
dec
pop
add
jns
dec
push
mov
iret
test
xor
or
mov
jae
bound
sbb
fdiv
scas
insb
arpl
loop
mov
push
ret
in
pop
jo
in
call
loop
cmpsl
dec
add
outsl
or
lcall
sbb
cmpl
mov
jbe
addr16
mov
loop
cmp
push
adc
popf
jmp
ret
push
call
js
pop
xchg
call
jnp
mov
in
loop
mov
push
adc
dec
inc
cmpsb
jno
inc
mov
add
xchg
dec
pusha
loopne
sub
cmp
leave
jle
popf
rolb
mov
clc
in
je
sub
test
mov
adc
cwtl
xlat
stos
jb
pop
int3
out
pop
mov
ret
ja
repz
adc
dec
mov
call
push
daa
mov
insl
rcr
pushf
loop
stos
out
lea
dec
inc
lods
dec
sarl
fdivl
loop
dec
pop
push
popa
mov
xchg
imul
mov
sbb
les
sub
popa
mov
push
dec
and
out
stc
mov
xor
sbb
lods
insb
xchg
aad
fistps
bound
sub
mov
filds
pop
pop
jnp
inc
in
and
int
fnstenv
mov
inc
out
push
mov
mov
cmp
xchg
xchg
rorb
pop
iret
test
ret
sbb
mov
popf
xchg
std
and
scas
pop
dec
and
cli
cld
imul
ja
enter
dec
cmpl
scas
pushf
dec
popf
add
push
inc
and
mov
and
sub
add
stc
jp
pop
sub
rsm
decb
inc
inc
into
lds
jp
or
test
jl
sti
cmp
lea
and
hlt
subb
dec
mov
adc
mov
pushf
imul
roll
insb
in
outsb
das
xchg
jno
mov
push
mov
sub
push
test
xchg
xchg
cmpsb
inc
gs
and
mov
push
ljmp
notb
push
je
and
scas
fdiv
notl
fwait
lcall
jle
fcomp
jne
or
jg
jo
hlt
mov
aam
mov
lcall
leave
jae
mov
ja
mov
aaa
imul
jmp
ret
adc
jns
popf
ret
loopne
and
and
nop
loop
inc
add
push
push
cmp
dec
inc
sub
lahf
adc
add
popf
jno
and
mov
and
inc
sbb
pop
in
test
loopne
mov
or
lods
xor
fsub
andb
push
mov
jecxz
push
lcall
mov
cmp
mov
sahf
add
and
dec
subl
push
ds
out
xor
xor
movsb
das
dec
es
cmc
xchg
out
sub
push
mov
scas
xor
add
push
push
outsl
push
mov
imul
mov
aam
xchg
xorl
loope
add
adc
jge
pop
pushf
adc
xchg
cli
std
fwait
stos
rolb
add
cli
pushf
test
mov
mov
and
hlt
mov
sbb
rcr
mov
mov
icebp
adc
cmp
adc
in
loopne
std
call
push
int
cmp
mov
adc
xorb
mov
mov
sahf
loop
lods
dec
jno
nop
dec
add
xchg
out
cmpsb
test
xor
les
insb
je
sbb
int
xchg
jmp
cmp
test
mov
rcl
mov
repz
insb
add
in
mov
lcall
mov
inc
push
aaa
cmp
mov
adc
add
xor
dec
push
inc
rcr
outsl
push
cltd
enter
xchg
iret
inc
inc
int
xor
sub
adc
mov
push
adc
or
lds
adc
adc
aad
dec
aas
add
xchg
adcl
insb
xor
inc
cmp
jg
popa
scas
pop
and
pushf
lret
ljmp
les
imul
fwait
xor
add
jl,pn
xchg
mov
std
xchg
or
adc
jmp
or
popf
sbb
cmp
xor
pushl
cmp
xor
xchg
movsl
les
fs
inc
dec
and
imul
aaa
pop
test
sti
loopne
lock
mov
or
icebp
icebp
mov
xorb
psubsw
das
inc
imul
push
dec
push
jns
imul
mov
xchg
xchg
stc
cmpsb
jmp
push
cmp
jbe
push
dec
push
jns
imul
mov
xchg
xchg
stc
cmpsb
jmp
push
cmp
jbe
push
dec
push
jns
imul
mov
xchg
xchg
stc
cmpsb
jmp
sbb
push
cmp
jbe
push
dec
push
stc
es
jl
out
subl
dec
movsl
pop
xchg
outsl
test
xorb
enter
daa
fists
sbb
inc
mov
xchg
outsl
test
pmulhw
aad
lds
xor
out
add
lahf
push
in
inc
mov
xchg
outsl
test
pmulhw
aad
lds
xor
mov
jne
push
lock
rorl
xchg
add
cs
enter
cmc
dec
cmp
push
push
xlat
pop
mov
out
adc
cmpsl
add
sbb
push
js
cmc
mov
loopne
sub
and
out
cli
jb
cli
gs
call
dec
pop
iret
dec
lcall
aaa
into
pop
outsl
lcall
das
addb
mov
pop
push
inc
ss
sbb
mov
sbb
mov
test
hlt
adc
scas
and
push
into
xor
scas
and
or
lds
sub
dec
mov
cwtl
adc
arpl
fstps
scas
or
fidivrs
xchg
jno
aad
jb
pusha
ljmp
xchg
lcall
jbe
movsl
pop
xchg
outsl
test
pmulhw
aad
lds
xor
out
add
lahf
push
scas
inc
shlb
pop
roll
ret
push
nop
arpl
outsl
inc
stos
inc
stos
xchg
repz
and
xor
rcrl
outsl
les
nop
pop
cmpb
mov
stos
push
in
add
cmp
das
out
rolb
movsl
or
pop
loopne
mov
in
aad
lds
xor
out
add
lahf
push
scas
inc
mov
xchg
outsl
test
pmulhw
aad
lds
xor
out
add
lahf
push
scas
inc
mov
or
cli
cmp
push
pop
stc
xchg
push
lcall
andb
jge
orb
pop
xchg
mov
rorl
cmp
sub
rol
daa
dec
mov
mov
add
mov
int3
mov
jmp
jp
rol
icebp
xchg
clc
pop
sarb
sub
addr16
mov
das
mov
lods
mov
adc
cmc
rclb
inc
jp
jl
ret
roll
fildl
shl
push
fiaddl
in
imul
cmp
sbb
ja
in
add
xchg
sub
jle
or
inc
push
or
adc
nop
hlt
frstor
cmp
or
movsb
mov
rolb
leave
into
mov
jno
lret
cltd
or
nop
aad
inc
clc
jbe
add
frstor
mov
jl
dec
cmpsl
stos
sub
jo
ja
ljmp
jmp
test
inc
xchg
lock
dec
mov
test
push
mov
lea
mov
movsl
lods
cli
inc
aaa
mov
cmpsl
imul
sub
and
mov
imul
dec
sahf
subl
mov
cmpsb
cmp
lret
sahf
faddl
fists
push
fxam
int3
daa
jp
sahf
ror
leave
ja
inc
out
xlat
mov
fimull
stc
mov
or
subl
shrl
js
mov
mov
cmpsb
inc
hlt
mov
sbb
pop
sub
sbb
aas
add
icebp
pop
adc
out
mov
test
xchg
inc
int
sbb
imul
add
push
inc
out
lcall
ds
pop
ret
pop
aam
push
adc
adcb
and
jp
shl
data16
dec
int3
and
push
inc
push
adc
cmpsl
or
cmc
jg
in
jae
test
sub
xchg
mov
pop
dec
mov
inc
jae
mov
push
dec
adc
pop
sbb
nop
cmp
loop
inc
std
popf
jg
loop
sbb
ja
xchg
insl
mov
testb
mov
pop
adc
lea
out
jne
jl
and
enter
push
cmp
imul
loop
ret
in
xchg
sarl
clc
or
xchg
test
sbb
sub
pushf
enter
sub
movsb
cmp
adc
flds
fisubs
aad
mov
xchg
cmp
repnz
pop
outsl
xchg
dec
nop
dec
or
cmpb
push
les
shlb
and
mov
mov
push
out
scas
lret
mov
or
loopne
js
std
and
out
ret
mov
cmp
push
aas
notb
divl
push
push
negl
fistpll
add
fadd
dec
loope
bound
lret
sub
jge
mov
cmp
rorb
mov
das
cli
sbb
cmp
dec
ret
psrlq
fistps
xchg
rcl
xchg
xchg
inc
fisubrs
jle
pop
das
inc
mov
jno
mov
in
sub
test
je
jle
mov
pop
aam
xchg
add
imul
cmp
iret
or
adc
push
push
outsl
rcrl
test
data16
sbb
fdivrs
ret
das
xchg
decl
xlat
sbbl
and
shlb
push
jb
jg
add
xchg
or
repz
xchg
rcl
scas
push
test
xor
jo
sar
pop
shrb
mov
stos
and
sahf
aas
jno
jne
xchg
jo
stos
mov
mov
ds
mov
sahf
rolb
jp
mov
or
shll
push
xchg
bound
ja
es
nop
loop
mov
test
mov
pop
mov
lcall
adc
cs
jp
jmp
loopne
add
je
dec
push
daa
cmp
mov
add
out
lahf
mov
jns
adc
sbb
push
add
cmp
imul
mov
sbb
testb
push
das
pop
clc
loope
mov
push
test
fadds
mov
xchg
stos
jne
sahf
icebp
xchg
lcall
push
int3
cmp
push
sub
jp
push
xchg
mov
push
out
jns
std
push
aam
ljmp
notl
sahf
sub
sbbb
jle
sti
int3
jmp
pop
shlb
cmp
push
jecxz
je
iret
clc
fdiv
lds
push
ss
scas
fmuls
jno
sub
inc
cmp
fimull
stos
add
sbb
pop
in
icebp
mov
mov
es
nop
mov
in
mov
sbb
pop
xlat
out
mov
jnp
push
sbb
scas
cmp
mov
dec
jl
jno
ror
dec
mov
mov
adc
pushl
adc
dec
out
cld
and
icebp
addr16
mov
cs
and
jne
fdivrl
xor
inc
pop
jge
js
loopne
push
dec
sbb
mov
xor
adc
jne
test
stos
repz
loope
lds
mov
movsb
sub
or
hlt
sub
pop
cli
add
mov
lea
xchg
lcall
cmc
loop
das
das
scas
add
js
scas
mov
xor
rorb
daa
jbe
mov
rorb
push
fucomi
mov
scas
cmp
loopne
repz
iret
add
int3
and
imul
adcb
lcall
cmp
push
sub
out
sub
mov
mov
jmp
movsl
xor
push
adc
movb
mov
bound
or
jle
and
pop
add
test
sbb
mov
out
imul
jb
push
movsl
xlat
out
cmc
jp,pt
mov
cmpsb
xchg
lock
lcall
jbe
push
or
ret
mov
pusha
mov
push
mov
jnp
dec
mov
sub
pop
das
dec
jo
out
test
pop
jno
mov
push
lock
pop
test
sahf
fwait
mov
sahf
sbb
adc
out
jns
jnp
inc
lret
in
insl
test
shlb
ficompl
adc
adcb
xchg
lahf
lcall
lock
movsl
inc
adc
or
repnz
sub
ret
ss
xor
lahf
push
dec
mov
xor
repz
in
xor
pushf
lock
loopne
mov
jb
push
sub
pcmpgtw
lea
pop
cmp
stos
data16
ja
pusha
dec
mov
xor
stos
ret
bound
std
les
push
pop
sub
inc
cmp
mov
inc
out
inc
xor
xchg
xchg
inc
pusha
fldt
adc
push
mov
insl
adc
sbb
call
push
shlb
hlt
cld
inc
push
mov
mov
ljmp
jbe
push
shr
lret
or
pusha
push
jmp
or
jge
adcl
fldt
pop
sarl
sbb
push
lret
ret
add
in
xor
adc
jae
rcrl
mov
js
or
jl
pop
test
scas
aam
cmpsl
nop
pop
pop
add
ss
adc
test
and
lock
mov
lods
cmp
mov
xchg
pop
xchg
adc
sbb
lds
sbb
sbb
push
or
js
lcall
jle
mov
bound
scas
fldenv
push
mov
arpl
inc
pop
and
jmp
in
and
imul
subl
clc
cmpsb
shrb
stos
rcl
test
ret
testl
mov
jmp
imul
xchg
sub
push
mov
ljmp
inc
jnp
js
lcall
jge
test
in
push
in
inc
ret
pop
jp
xorl
xchg
push
roll
cmp
ja
adc
bound
rcll
mov
and
pop
xchg
push
mov
mov
xchg
add
mov
sub
dec
stos
push
jmp
insl
mov
stc
outsb
xchg
mov
inc
lret
cltd
pop
jno
insb
mov
jecxz
cmpsl
xchg
testb
mov
ljmp
fbstp
xchg
add
test
leave
in
xlat
mov
fldcw
sti
mov
fisubs
push
es
shlb
cmpb
dec
cs
cmp
popf
movsb
mov
mov
mov
mov
mov
in
or
ljmp
je
pop
and
sbb
dec
loopne
stos
add
xlat
push
psubsw
xchg
fs
adc
lea
es
inc
cltd
xor
loop
adc
mov
insb
mov
cmpsl
push
cmp
dec
xlat
leave
insl
lret
cmp
inc
mov
bound
pop
jg
div
jnp
jp
mov
adc
lock
pop
xchg
xchg
out
push
mov
clc
aas
jnp
loop
jnp
ss
push
adc
jo
pushw
sub
dec
xchg
jb
sub
std
stc
ds
aaa
and
scas
xchg
lret
mov
dec
mov
sbb
inc
inc
insb
mov
ja
xchg
sbb
pop
jns
jnp
xor
jge
pop
hlt
daa
js
xchg
shrb
inc
mov
leave
pop
adc
xchg
cwtl
pop
push
leave
jne
mov
lret
pop
xchg
adcl
inc
xchg
add
jnp
push
out
into
pop
sub
loopne
mov
mov
arpl
outsb
or
jnp
outsb
push
shrl
mov
popa
mov
mov
dec
mov
fdivl
inc
popa
cmc
pop
out
fs
imul
cmc
std
mov
loope
add
adc
jb
leave
std
das
lock
mov
leave
add
cmp
xor
mov
arpl
mov
les
rolb
add
jne
pop
sub
mov
hlt
fs
mov
cmp
clc
popf
insl
or
dec
daa
sub
cmp
cld
pop
notb
xor
repz
push
push
and
fstpt
out
cld
repnz
add
fadd
clc
cmpsl
adc
jp
test
daa
mov
push
jmp
pop
mul
sub
xchg
push
cwtl
xchg
ret
push
push
outsl
repz
test
xor
add
mov
sti
or
pushf
jne
sbb
dec
cmp
pop
mov
adc
aad
hlt
inc
push
fistpll
test
and
movsb
sub
mov
ljmp
es
mov
movsl
sahf
cmp
push
cmp
mov
lods
mov
test
aam
test
mov
adc
movsb
or
xor
leave
lock
mov
cmp
mul
jge
adc
out
add
mov
dec
rcl
jmp
or
inc
push
test
xor
mov
push
cmp
jb
pop
std
xchg
lret
add
iret
fsts
or
daa
inc
cmpsl
or
cmpl
sbb
out
cmp
xchg
mov
mov
cwtl
inc
jns
mov
ds
push
iret
es
inc
add
sub
imul
push
pop
pop
minps
test
loope
mov
imul
mov
out
ss
xor
cwtl
adc
push
cmpsl
dec
bound
push
jl
dec
cmpsb
cwtl
icebp
adc
test
pop
out
ret
sub
push
scas
push
push
adc
xor
pusha
setae
int3
cmp
push
xchg
cmp
jo
fildll
fbstp
xchg
jae
and
xor
jo
fwait
ja
fwait
adc
decb
das
xchg
shll
dec
xor
movsb
out
fadds
adc
dec
xchg
sahf
shrd
or
mov
stos
addr16
das
imul
dec
sub
pop
xor
sub
insb
call
popa
or
rcll
fimuls
lret
repnz
mov
adc
sbb
fcompl
push
lea
lret
icebp
inc
pop
and
add
pushw
test
call
pop
lea
mov
add
pop
les
scas
cmp
dec
pop
shll
mov
mov
lret
jecxz
mov
mov
mov
insl
cld
pop
std
mov
and
ja
mov
cmp
sub
inc
nop
add
add
push
mov
jbe
dec
xor
nop
mov
and
and
mov
jl
sbb
es
push
shlb
xor
aam
loope
in
lock
gs
inc
and
scas
testb
push
fs
mov
cmpb
and
in
hlt
mov
fucomip
mov
js
lcall
movsb
pop
sbbb
jb
dec
cli
loop
loopne
mov
enter
outsb
cmp
jl
imul
push
inc
data16
dec
mov
aaa
push
lods
mov
dec
cmp
shl
mov
call
push
inc
pop
mov
test
adc
xchg
mov
or
push
mov
stos
popa
or
xchg
xor
leave
int
sub
inc
aas
pushl
in
sti
sub
or
stc
or
mov
xchg
pop
je
leave
gs
movsl
fnstsw
xchg
push
jmp
cli
mov
sbb
ds
sarl
lods
adc
push
ljmp
loopne
call
sbb
jge
pop
jg
ret
ja
sbb
add
call
outsl
cmp
sahf
jne
pop
and
mov
aad
flds
jno
popf
repnz
std
dec
sub
mov
call
int
inc
or
xchg
ror
scas
xchg
clc
sbb
scas
shlb
jae
or
fs
lahf
or
les
pop
imul
cli
mov
les
cmpsl
orl
inc
mov
xor
pusha
sbbb
xor
add
and
jae
xchg
lcall
lahf
stc
pushf
jo
pop
test
lret
pusha
sbb
mov
cld
fdivrl
cmp
sbb
xor
dec
clc
cltd
pop
sub
cmp
out
xor
and
into
std
aad
je
mov
sahf
negb
js
jle
mov
jg
shll
sub
mov
jnp
sub
stos
or
into
jg
xchg
addr16
sub
mov
cwtl
nop
out
adc
lods
xlat
push
push
nop
jnp
shr
push
loopne,pt
test
xor
xchg
sub
or
xchg
inc
push
xor
lds
jns
out
fdivl
movsb
xchg
sub
das
dec
sub
mov
xor
xchg
xor
lods
bound
fwait
call
jmp
dec
fwait
cltd
push
jmp
cwtl
repnz
outsl
je
test
jne
adc
cmpsl
std
mov
roll
jg
test
test
repnz
mov
or
es
mov
dec
icebp
int
aaa
fs
push
sub
out
jbe
cmpsb
es
lcall
mov
mov
dec
xlat
dec
sbb
inc
jge
mov
push
mov
aam
lcall
push
jg
mov
out
gs
lock
lahf
mov
int3
test
mov
fcoms
add
sub
out
fwait
cmc
xor
les
xlat
clc
cmp
sub
divb
xor
pcmpeqw
push
add
lret
jne
ret
sub
push
pop
mov
loop
pop
sbb
ds
movsb
xchg
and
jecxz
repnz
mov
sbb
cmp
xor
and
and
add
jbe
popa
pop
je
icebp
sub
jns
xchg
cld
icebp
sub
inc
sti
ja
clc
sahf
cmp
mov
daa
or
xchg
aaa
cmpsl
in
in
and
loop
rcrb
cmpsb
inc
imul
sub
fstps
jo
xor
cwtl
dec
loope
pop
or
inc
dec
lcall
cltd
andl
xor
mov
and
inc
add
jle
repnz
outsb
fsubrs
movsl
add
daa
sbb
sbb
adc
call
sub
dec
shr
push
inc
adc
or
clc
mov
push
jnp
and
xchg
test
mov
aaa
mov
fildll
incb
mov
inc
lret
pop
sbb
sti
cmpsb
lret
lock
inc
xchg
sti
push
push
adc
insb
sub
lds
aam
mov
clc
dec
lock
pop
lock
jge
dec
xchg
call
xchg
mov
adc
sub
scas
rclb
clc
sub
mov
mov
pop
xor
jae
call
pop
insb
sbb
loopne
out
dec
push
pop
adc
in
pop
dec
sbb
pop
mov
sub
idiv
mov
pop
rol
imul
mov
and
xor
enter
sahf
push
movsb
enter
mov
shll
imul
mov
cmp
mov
sarl
lret
jmp
jns
jne
mov
cmpsb
sarb
push
addb
ja
shlb
jns
cmp
xchg
in
stos
fistps
cli
cmp
fisubs
dec
ret
data16
sub
into
xchg
cmpb
push
mov
mov
adc
mov
lret
lret
stc
inc
ret
add
push
lds
jl
stos
js
and
adc
out
stos
test
mov
fistpll
sbb
push
bound
mov
enter
mov
add
dec
xchg
imul
push
pop
inc
aad
sbb
mov
cmp
cmp
push
jnp
jl
sub
adc
push
adc
or
add
leave
into
push
mov
test
add
lar
cmp
pop
jo
lods
push
andb
add
xchg
or
mov
ror
xor
cwtl
ret
xchg
or
clc
shrb
inc
xchg
jne
mov
aad
stc
jecxz
dec
pop
jno
jno
sub
outsb
push
sub
and
add
out
xchg
dec
stos
xrelease
fldt
outsl
loop
loop
pop
stos
mov
xor
mov
inc
ljmp
xchg
mov
jne
loope
cmp
cmpsb
pinsrw
xchg
pop
hlt
push
adc
inc
mov
push
imul
jae
mov
sub
out
ljmp
pop
push
add
sbb
ja
iret
stc
ds
mov
repz
call
in
pop
scas
pop
jg
rolb
filds
lret
mov
mov
cwtl
fbld
mov
test
stos
pop
ds
cmpsb
rolb
in
inc
jnp
dec
inc
cmp
jns
mov
jle
and
sahf
lret
push
sub
leave
xor
roll
stc
sbb
xor
push
mov
imul
pop
stos
cmpsl
push
pminsw
xchg
jg
test
test
jp
pop
in
xchg
pushf
xor
shrb
lods
mov
xchg
lds
sub
lds
test
into
jecxz
cmp
sarb
push
fs
cmp
enter
fs
addr16
movsb
hlt
xlat
and
daa
shl
xchg
inc
push
push
fidivrl
add
jp
push
mov
xor
add
dec
add
jmp
adc
int3
xchg
dec
pop
sbbb
sbb
pop
push
mov
push
icebp
pop
xor
xor
xchg
in
xlat
inc
int3
out
das
xor
xchg
arpl
fs
push
inc
lahf
jmp
inc
xchg
dec
stos
xchg
shll
mov
xchg
cmp
dec
sub
fmul
xorb
mov
pop
cmp
js
and
arpl
pop
adcl
push
adc
dec
insl
rclb
mov
rorl
jmp
jmp
inc
andb
pushf
sub
jns
scas
and
icebp
inc
in
in
shl
mov
lea
mov
out
lea
pop
insb
mov
push
mov
lds
into
mov
sub
repnz
into
xor
mov
inc
stc
inc
sbb
or
addr16
shrb
test
repnz
jbe
pusha
pop
pop
xlat
add
movsb
xor
cmp
cmpsl
imul
js
jb
cmp
pop
push
xor
ret
push
sbb
imul
fisubrl
sbb
xchg
mov
int
lret
lcall
scas
mov
mov
jnp
in
push
push
pop
stos
jmp
outsb
lret
pop
shll
cmp
mov
dec
out
xor
outsl
mov
jno
scas
and
int
movsb
mov
jge
lds
push
sbb
jmp
sub
loop
stos
fadd
shr
jne
inc
jl
jo
clc
mov
sub
gs
leave
int
mov
add
xchg
sbb
add
mov
sub
lret
mov
and
popa
test
leave
imul
mov
mov
stos
outsl
test
pmulhw
aad
lds
xor
out
add
lahf
push
scas
inc
mov
xchg
outsl
test
pmulhw
aad
lds
xor
out
add
lahf
push
scas
inc
mov
xchg
out
test
pmulhuw
xor
and
pushl
gs
push
scas
inc
mov
xchg
outsl
test
pmulhw
push
das
inc
aas
lret
jne
out
add
pusha
lods
push
mov
pusha
add
inc
lods
add
inc
pop
add
rclb
loopne
nop
roll
add
inc
popa
xor
inc
adc
mov
rclb
mov
and
pusha
add
inc
popa
xor
inc
adc
mov
mov
sahf
les
push
adc
xor
lods
test
cli
loope
adc
mov
rclb
movsl
mov
js
sbb
dec
imul
mov
mov
dec
xor
jle
outsb
rcrl
lock
cmp
ljmp
andl
mov
xchg
movsb
outsl
roll
imul
inc
xor
stc
push
push
sub
xor
jg
sti
aas
push
jecxz
lock
outsb
in
fsubrp
rcrl
xor
ret
push
dec
mov
loope
sub
repz
push
in
xchg
rcl
fdiv
into
cwtl
ret
xor
int3
fistl
testb
icebp
jle
mov
push
test
xor
push
adc
xor
inc
adc
mov
rclb
mov
pusha
sbb
js
popa
pop
add
jne
jo
pushf
aam
cmpl
xchg
in
xor
push
jge
popa
push
xor
cmp
add
mov
mov
fistps
out
inc
and
adc
and
xor
pop
jno
inc
adc
mov
rclb
mov
and
pusha
add
inc
popa
xor
inc
adc
mov
rclb
mov
and
jne
mov
jae
stos
inc
cmpsb
jle
jmp
test
gs
xor
popa
fisubrl
int
insl
out
push
add
fs
mov
in
lcall
ja
nop
add
filds
pushf
push
lods
mov
add
adc
push
call
cmp
fsubs
outsb
inc
xor
loope
add
lods
lcall
inc
into
adc
negb
push
xchg
xchg
cmpl
push
xorl
scas
stos
mov
mov
cld
xchg
mov
scas
roll
jns
sbb
mov
lods
mov
adc
aas
std
jle
fidivrs
lret
jg
jmp
pop
mov
repnz
out
jns
aad
js
sub
stc
setae
daa
cmpsb
iret
je
movl
loope
jmp
xor
jge
inc
or
inc
movsb
or
dec
inc
mov
outsb
notb
and
and
outsl
out
jmp
into
jno
lods
mov
mov
sub
loope
push
mov
push
ret
mov
lret
fs
out
jle
mov
roll
cli
mov
ror
mov
xchg
mov
fimuls
mov
shrl
or
insb
push
cmpl
fldenv
inc
inc
sbb
xorl
sbb
aas
out
mov
enter
push
mov
lods
xor
mov
fnstenv
sub
push
xchg
jle
js
mov
xchg
mov
mov
rolb
icebp
pop
dec
insb
mov
fs
xor
xchg
shlb
mov
xchg
inc
push
arpl
in
ds
aad
pushf
mov
enter
mov
push
lods
jecxz
repz
fiadds
sbb
test
mov
lods
pop
cs
add
mov
cmp
push
inc
sub
in
in
and
pop
mov
sub
sbb
xor
daa
push
lds
cmp
pusha
iret
mov
adc
test
xlat
sbb
aaa
xchg
testb
or
inc
inc
add
xor
inc
cli
cmpsl
and
xor
nop
xchg
push
or
jecxz
fisubl
push
inc
pop
aam
sbb
and
or
dec
cmc
or
add
mov
dec
mov
sahf
enter
mov
sti
jno
sbb
add
sub
and
add
je
xor
pop
jno
add
movb
or
mov
lods
daa
lret
fdivr
cwtl
and
mov
cli
mov
jl
rcll
imul
inc
pop
rclb
inc
inc
jb
push
js
jle
dec
in
add
cld
icebp
pop
and
repnz
add
sbb
fcmovb
mov
sbb
jmp
shll
jnp
mov
cld
scas
ja
xchg
rorl
jl
scas
cltd
dec
mov
dec
inc
pop
decl
xorl
les
shlb
pop
and
ffree
jge
popf
in
cmp
inc
enter
mov
dec
std
dec
xchg
shll
aas
cmp
test
outsl
loopne
pusha
or
lock
jbe
xchg
add
mov
sbb
sbb
mov
ret
stos
fsubrs
mov
inc
xchg
pop
in
lcall
pushf
ret
xchg
lret
jb
call
fwait
lahf
test
inc
push
iret
mov
push
sbb
das
mov
xchg
in
int
and
jno
or
mov
mov
jge
jle
mulb
dec
cmpl
ja
inc
test
inc
xor
mov
enter
lcall
hlt
repnz
ret
or
std
sub
popf
stc
enter
jno
out
pop
imull
sbb
mov
sbb
ljmp
mov
fisttps
addb
pop
fisttpl
lods
jmp
addr16
lea
movsl
pop
lock
mov
mov
xor
stc
or
ljmp
add
test
cwtl
mov
in
and
lds
movb
in
mov
aaa
mov
pop
dec
xchg
les
dec
fidivrs
mov
scas
lds
mov
mov
lret
bound
lcall
push
mov
aas
xor
shlb
push
rcr
add
imul
data16
mov
and
stos
testl
jge
mov
inc
push
int3
ja
test
xor
jbe
std
xor
idiv
pop
hlt
push
fsub
sub
dec
cmp
push
mov
aam
and
adc
in
popa
imul
adc
fildll
in
jo
scas
jp
sahf
mov
adc
jmp
cwtl
cmp
lret
dec
hlt
cwtl
mov
arpl
or
sbb
mov
jg
lods
fsts
jle
pop
loop
imul
test
bound
sub
lret
call
dec
xchg
sub
cmp
lods
jg
jle
insb
push
add
shlb
sub
sbbb
outsb
pop
js
jecxz
push
mov
xchg
push
inc
in
aas
or
xor
sub
mov
iret
in
or
pop
and
sub
leave
mov
leave
in
sarb
sub
xchg
adc
inc
adc
stos
xor
cmp
movsl
repz
movsl
inc
cmpsl
out
mov
ja
roll
xor
mov
sar
mov
gs
test
lahf
adc
outsl
mov
push
xor
mov
inc
and
shlb
aad
stos
out
insb
cmp
fs
or
jb
movsb
addb
cmp
fmul
sbb
ret
in
mov
xor
jle
hlt
push
popf
cwtl
dec
and
int3
mov
inc
or
xchg
idivl
out
in
sbb
mov
dec
push
int
mov
repnz
adc
jne
call
mov
xor
popf
add
sub
xor
sti
inc
jg
scas
jg
xor
dec
or
or
test
mov
add
iret
call
jb
adc
outsl
into
inc
aam
iret
or
push
lock
mov
mov
xor
in
stos
xchg
popf
mov
insl
lahf
xor
sbb
sbb
or
mov
andb
bound
sti
xchg
jmp
daa
cwtl
and
popa
mov
jb
sub
lahf
sub
inc
cmp
sbb
out
test
jae
lret
xchg
sbb
dec
ljmp
jp
out
test
lds
addb
jmp
and
or
sbb
xor
xor
jne
bound
cmpsb
mov
sub
imul
test
jbe
into
das
sub
lret
push
jne
aam
sbb
push
popa
int3
ret
push
sar
fcoms
mov
sti
dec
mov
xlat
push
repz
push
add
stc
pushl
roll
fstl
xor
pop
aas
cmpsb
inc
and
divb
outsl
aad
in
jo
insb
loopne
gs
mov
push
jge
inc
adc
xchg
cli
push
xchg
or
or
cmp
test
dec
push
sub
mov
adc
xor
sub
add
test
xchg
adc
xchg
xor
lret
sub
fcomps
movsl
clc
lret
add
sbb
or
lahf
sbb
mov
cmp
xchg
popa
pop
mov
scas
imul
test
push
cmp
fnsave
push
pop
pop
cmc
pop
xchg
in
cmovae
das
cs
jb
lods
ss
mov
jnp
jno
sbb
mov
gs
test
sbb
sbb
and
and
inc
jae
push
or
test
xor
inc
mov
clc
test
adc
fsubl
enter
in
inc
imul
ds
mov
ss
shrb
mov
and
ljmp
stos
add
adc
push
popa
mov
push
xor
les
xchg
fists
les
add
lods
sarl
inc
pop
jecxz
rorb
xchg
sub
mov
mov
mov
cmp
sub
fwait
mov
outsb
push
lds
call
je
and
push
cltd
subl
sti
jne
mov
imul
fistps
mov
bound
sarl
test
and
es
jns
imul
mov
cmp
in
sbb
mov
imul
jle
int
pushf
jbe
cmp
addr16
mov
sarb
fldenv
les
aad
hlt
mov
xchg
pop
test
enter
push
out
aad
jb
mulb
in
rorb
dec
fs
lcall
dec
adc
xchg
and
pop
leave
mov
sbbb
inc
mov
fwait
stos
and
mov
movsb
or
add
popa
cltd
hlt
mov
into
push
mov
xchg
aas
mov
insl
test
push
or
and
roll
xchg
and
cmpsl
mov
lahf
cmp
lret
inc
scas
and
stos
addb
jno
xchg
bound
packssdw
pop
mov
maxps
test
push
dec
out
sbb
pop
out
fldt
mov
lods
xchg
icebp
inc
push
jno
mov
push
mov
stc
mov
push
add
lock
jle
sub
mov
add
add
fistpl
cltd
and
icebp
movsb
fwait
dec
mov
add
push
insl
packssdw
sbb
push
out
xchg
dec
mov
sbb
je
cli
mov
aaa
xor
movsb
xchg
out
mov
loop
xor
jmp
dec
mov
scas
outsl
xor
ja
lret
cmpsb
add
imul
sbb
push
lds
pop
icebp
out
test
xor
cmpl
and
mov
stos
mov
shl
adc
mov
mov
xchg
sahf
lret
out
push
shll
and
cmp
jno
xorb
insl
stos
xchg
imul
mov
push
add
cmpsb
cmp
xchg
ret
lret
add
rcr
xchg
aas
sbb
or
mov
scas
lock
imul
imul
jb
int3
sbb
das
loop
xchg
nop
and
ljmp
fbld
inc
stc
xchg
adc
jbe
jl
mov
mov
push
in
xchg
clc
xchg
clc
and
adc
cmp
adc
popa
cmp
ret
pop
pop
push
pushf
es
lret
mov
ficoml
mov
fadds
add
gs
jp
shl
dec
cld
je
sub
fdiv
cltd
aad
xor
aam
and
and
push
outsb
lahf
imul
jbe
or
sar
rcr
sti
repnz
push
mov
inc
mov
rclb
insb
out
icebp
jp
sub
call
fidivl
imul
test
pop
jo
into
jnp
cmp
cltd
fwait
jl
or
enter
mov
repz
test
xor
pop
fwait
mov
xchg
xor
and
mov
mov
add
sahf
push
cmp
jae
jno
divl
into
cwtl
int
fstps
test
js
adc
mov
pop
dec
xchg
stc
sar
shrb
mov
gs
mov
popa
iret
shlb
inc
sub
push
lret
add
adc
cs
cmc
sub
jmp
ret
dec
sbb
xor
dec
cs
cld
jmp
xlat
jns
dec
push
mov
mov
cmpsl
mov
cmp
mov
dec
nop
addr16
gs
mov
shll
ret
mov
fmuls
push
pop
sbb
repz
arpl
fs
mov
push
jo
xor
out
sub
xor
out
jecxz
es
je
pop
fadds
dec
xor
xchg
imul
bound
xlat
xlat
sub
shrl
jl
mov
hlt
mov
cs
jb
jl
push
fidivl
add
data16
jl
aaa
pop
clc
incb
addr16
insl
inc
mov
xchg
inc
pop
stc
icebp
jecxz
pop
adc
dec
cmpsl
std
lds
imul
or
test
outsb
xor
inc
ret
roll
push
ss
push
in
xor
jae
scas
mov
daa
fdivl
fcomip
int3
pop
pop
inc
les
pushf
ljmp
mov
push
sti
and
out
mov
xchg
xchg
pushf
push
mov
pushaw
mov
push
jp
aad
ds
shrl
cwtl
or
sbb
push
mov
mov
clc
jle
scas
aam
fwait
mov
mov
into
in
stos
es
push
lods
dec
lock
or
mov
mov
mov
mov
lret
jge
mov
mov
data16
mov
pop
sub
outsb
icebp
insl
sub
outsl
lea
push
sbb
scas
mov
lahf
jns
dec
sub
fwait
xchg
pop
add
mov
or
xor
mov
lock
mov
in
jb
sub
inc
mov
fsubs
xchg
fldl
cld
mov
and
cmpsl
dec
mov
push
call
mov
sbb
clc
xchg
test
cli
insb
jns
push
icebp
nop
ficoms
test
cwtl
sub
pop
mov
les
pop
das
int
ss
lea
shrl
cmp
xchg
adc
int3
fwait
mov
int
xchg
out
cmpsl
mov
stos
addb
gs
into
lods
jge
fs
out
sub
inc
dec
sahf
nop
out
mov
adc
xchg
rcll
dec
in
ljmp
andb
dec
stc
shll
push
cs
nop
pusha
fsubrs
stos
add
cmp
iret
je
aas
inc
cmp
inc
mov
push
pusha
inc
je
imul
push
ret
dec
sbb
bswap
add
clc
lahf
out
test
jae
dec
cmp
jns
cld
cli
and
cmp
mov
sar
icebp
sbb
xchg
xor
mov
lods
shr
or
mov
gs
dec
pop
adc
cwtl
mov
movsb
mov
insl
add
loope
call
push
mov
hlt
mov
adc
sub
pop
add
jmp
push
rolb
or
outsb
xchg
inc
pusha
loope
cmp
fildl
addb
pop
aaa
dec
dec
mov
fadds
fnstsw
out
xor
dec
sbb
daa
mov
je
call
mov
xor
pushf
int3
lock
in
decb
cmpb
mov
mov
int3
adc
push
out
xchg
jecxz
pop
addb
mov
cmpsb
or
xchg
xchg
jg
mov
mov
add
push
inc
out
mov
mov
xor
es
leave
cwtl
sub
aam
inc
or
lahf
xchg
sbb
xor
sbb
jl
data16
cmpb
idiv
imul
mov
pop
das
dec
sbb
sub
idivl
xchg
jl
cmp
jns
adc
fimuls
cmpsb
mov
xchg
sahf
push
inc
jb
cmp
movb
sub
mov
inc
inc
cmp
pop
aad
dec
lock
cmpsb
mov
sbb
gs
mov
or
loop
pop
fimull
cmc
inc
jg
and
dec
cmpb
add
xchg
cmpsb
mov
js
and
mov
outsb
lret
jnp
enter
xchg
nop
roll
push
mov
enter
imul
addr16
xor
and
push
arpl
lret
icebp
into
lea
cmc
dec
ret
insb
ss
sbb
stos
loop
or
sbbl
jp
push
fdivs
push
and
lcall
je
pop
rorl
xor
push
mov
mov
push
rolb
push
jp
jmp
je
lcall
mov
sub
negl
pop
jecxz
jno
xlat
pop
int
cwtl
shl
sub
decb
ficompl
sahf
jl
xor
movl
xor
or
sbb
hlt
jecxz
push
ficomps
shrl
jae
fsubr
jbe
sarb
xor
les
sbb
dec
adc
rclb
aad
stos
cmp
jmp
ds
push
and
push
fwait
imul
les
dec
fnstcw
pop
adc
or
xor
push
mov
sub
rcll
jg
into
sub
shll
shlb
pop
pop
fwait
cmp
gs
add
subps
push
ja
jmp
outsl
popa
dec
sbb
add
in
mov
je
andl
mov
sahf
daa
adc
mov
scas
pop
addr16
add
cwtl
jo
and
push
adc
jmp
sub
mov
hlt
xchg
cmp
mov
leave
mov
add
xor
push
ret
jbe
xlat
dec
adc
mov
cmpsb
jno
xlat
dec
adc
or
in
and
push
lret
in
gs
loope
push
adc
inc
negb
lahf
mov
or
dec
sbb
lret
nop
enter
rorl
pminsw
pop
jae
ljmp
pop
stos
loopne
xor
popf
movsl
mov
out
xchg
inc
or
xchg
daa
lahf
mov
ja
xchg
or
sub
sbb
dec
cwtl
cwtl
stc
mov
ss
cmp
mov
dec
bound
into
std
adc
cltd
std
pop
sbb
jl
cmp
leave
clc
mov
jl
lods
loop
xchg
les
cwtl
shl
mov
mov
dec
in
adc
mov
dec
stos
cwtl
in
mov
ret
sbb
sub
ftst
lcall
outsl
or
push
aad
jo
in
mov
aas
or
adc
xchg
mov
ss
int
mov
shl
jle
insl
fidivrl
push
into
mov
jle
sbb
jecxz
xchg
jnp
xor
xor
mov
or
push
jnp
inc
xchg
imul
insl
inc
push
jbe
imul
aaa
jg
sub
push
hlt
cmc
fwait
push
aas
push
jle
bound
popf
add
lods
es
les
lea
sub
sbb
repz
lods
push
cmpsl
mov
jnp
cmp
sub
push
mov
ret
lock
data16
repnz
sahf
fst
mov
fistl
sub
bound
mov
pushf
cmp
and
jno
dec
mov
aas
mov
push
mov
pop
mov
xlat
inc
xor
ficomps
aad
popl
shlb
icebp
shll
enter
mul
dec
data16
out
cli
rol
loope
cmp
jno
add
add
loopne
sbb
mov
push
jge
scas
lcall
test
sahf
in
das
stos
xor
ds
sarl
daa
lcall
or
and
dec
scas
adc
jle
stos
pop
dec
mov
icebp
aaa
ja
rolb
push
add
nop
scas
in
jle
push
add
mov
aad
sbb
push
popw
pop
inc
sbb
out
mov
test
movsb
add
test
mov
data16
and
mov
mov
inc
ljmp
xor
aad
pop
xor
cmc
jp
jbe
out
lds
add
pusha
es
pop
std
sahf
cltd
mov
push
mov
xor
testl
mov
pop
cmpsb
add
mov
sbb
cmp
cmp
mov
aam
imull
dec
out
xor
das
mov
and
pop
mov
in
xchg
dec
gs
lret
xor
and
test
mov
pop
adc
push
and
xor
sbb
test
or
jmp
inc
orl
ss
lret
into
xor
repnz
das
fidivrl
jns
push
dec
lods
xacquire
imul
inc
push
cld
jge
shrb
push
mov
cmpsl
addr16
xchg
and
mov
js
sub
dec
and
andl
fiadds
arpl
iret
jb
out
sbbb
das
sub
inc
adc
mov
cmpsb
mov
dec
cmc
sub
out
mov
fcompl
cwtl
mov
jecxz
sbbl
pop
test
xor
mov
test
cld
scas
subl
test
mov
mov
jmp
xor
cmc
popa
sbb
fs
mov
sub
push
jecxz
stos
inc
inc
jmp
mov
es
push
xor
xor
inc
mov
inc
push
daa
cmpsb
into
mov
lahf
jle
lret
jno
or
sub
not
or
cmp
dec
clc
das
fisttpl
les
cltd
pop
out
push
shrl
adcb
cli
add
mov
jecxz
pop
jnp
test
pusha
add
inc
popa
xor
inc
adc
mov
rclb
mov
and
pusha
add
inc
popa
xor
inc
adc
mov
rclb
mov
and
adcl
and
roll
mov
rclb
mov
and
pusha
add
inc
popa
xor
inc
nop
push
jmp
rclb
pop
mov
mov
sub
sbb
or
les
and
movsl
lods
xchg
mov
arpl
fadd
int3
cmp
sbb
or
jl
jl
pop
inc
cmp
mov
lods
mov
mov
int3
out
and
ret
adc
gs
push
mov
leave
repz
stc
aad
mov
mov
push
jns
imul
and
xchg
loope
cwtl
push
cs
addr16
and
mov
cmp
cmpsb
sub
or
lahf
jle
shll
int3
outsb
jae
pushf
je
push
sub
xor
mov
test
notl
and
adc
mov
jnp
or
push
fcompl
shrl
push
pop
je
lcall
pop
notb
arpl
js
out
shlb
fdivl
jecxz
js
mov
or
push
push
xchg
test
and
xchg
negb
sbb
aam
xchg
arpl
or
lret
and
or
jl
insb
push
pop
std
push
inc
mov
fwait
xchg
xchg
in
hlt
aad
mov
pop
push
jns
imul
xor
aam
in
lds
mov
mov
push
lods
inc
push
outsl
into
arpl
add
cmp
ss
enter
stc
jmp
in
mov
cmp
sub
js
dec
xor
insb
push
pop
inc
dec
mov
movsl
lods
xchg
pushf
test
fadd
int3
xor
sbb
or
jl
insb
push
pop
inc
dec
mov
movsl
lods
xchg
pushf
test
fadd
int3
xor
fwait
pop
push
cmp
or
xor
and
pop
jbe
mov
adc
aas
sbb
mov
cmp
sub
mov
repnz
notb
fldl2t
ja
fwait
sbb
pop
mov
jae
dec
hlt
dec
test
mov
repz
clc
xchg
into
jo
xchg
adc
lds
fwait
jnp
jp
cwtl
jb
fsts
mov
ljmp
out
stos
nop
mov
adc
jl
adc
test
nop
push
mov
inc
and
das
lahf
dec
xchg
xchg
test
xchg
dec
cmc
and
sub
sbb
adc
push
inc
pop
aad
cmp
stos
xchg
les
out
pusha
aad
mov
repnz
sbb
outsb
pop
xchg
out
sbb
and
iret
sub
mov
fwait
jnp
ljmp
in
pop
js
sub
push
mov
jo
xor
push
dec
xlat
sub
out
sbb
dec
sub
xor
lock
arpl
fmull
add
pop
dec
mov
inc
cmp
mov
inc
out
sub
or
xchg
add
repz
sbb
xchg
in
hlt
aam
jae
sub
lea
outsb
cmpsl
or
dec
out
dec
and
sbb
sub
iret
or
arpl
dec
incb
out
gs
lret
mov
inc
mov
pop
or
pop
cmp
ja
js
dec
ficoml
xor
out
inc
jle
xchg
addr16
mov
iret
out
rcrl
fimuls
out
cmp
xchg
push
pop
or
imul
test
lea
pushf
aam
cld
push
loopne
stos
lods
repz
mov
xlat
xchg
rcl
mov
sti
add
adc
int3
sbb
adc
les
pop
adc
test
xchg
push
subb
filds
push
mov
cwtl
sub
mov
push
adc
xor
inc
mov
dec
stos
aas
fmuls
aad
fwait
mov
shl
call
js
hlt
ljmp
lgs
dec
jno
sub
outsb
dec
test
gs
mov
and
cmp
test
mov
cld
push
sbb
rol
pushf
xchg
addb
xor
fs
cmpsb
stos
fs
fstps
xor
in
mov
sub
sub
ret
jmp
mov
and
outsl
movsl
arpl
sbb
mov
adc
adc
sub
or
stos
fldcw
out
sub
dec
cmp
daa
push
xor
out
lods
sbb
jecxz
out
pop
xor
push
ret
lret
rolb
or
into
leave
and
mov
stos
cmpsb
lods
xchg
nopl
gs
pop
cmp
scas
nop
mov
mov
mov
and
xor
pusha
iret
mov
stos
rclb
adc
fwait
out
or
inc
sarl
mov
push
ror
pop
jno
jnp
pop
leave
fcomps
mov
push
cmp
push
mov
pop
enter
and
sub
push
add
push
icebp
test
mov
xor
or
sahf
mov
lcall
mov
sub
dec
xchg
rorb
test
jo
mov
jge
adc
outsl
add
aas
rcr
push
sar
mov
inc
sub
icebp
mov
adc
out
cltd
loop
add
aad
sub
scas
inc
fdivr
stos
or
cmp
imul
lahf
or
les
xchg
pop
mov
cli
push
xor
push
cs
in
push
or
lret
push
mov
ret
dec
dec
mov
testb
mov
inc
inc
mov
mov
repz
fldcw
xchg
das
mov
pop
stos
push
outsl
ret
cmp
fcoml
xlat
jne
gs
mulb
cmp
rcl
push
mov
leave
cmp
aad
and
xlat
mov
pop
cmpsl
aas
and
pop
mov
cmp
ds
add
fwait
hlt
lcall
dec
inc
je
push
jns
jecxz
sub
cmp
pop
push
lcall
xor
push
push
addr16
inc
xchg
cmp
rorb
mov
xchg
or
test
out
xchg
jecxz
mov
mov
es
sahf
mov
ret
jo
aaa
dec
xchg
mov
mov
outsl
sbb
and
loopne
out
jne,pt
mov
add
adcb
pop
bound
stc
add
mov
push
dec
mov
imul
test
int
std
pushf
cmp
outsl
icebp
push
mov
add
fwait
mov
mov
inc
mul
xchg
or
inc
xor
fsubp
or
xor
jno
ret
or
iret
cwtl
jg
sbb
lea
clc
jg
mov
fs
insb
pop
hlt
mov
insl
cmp
adc
cmp
add
ja
cli
lock
sub
and
xchg
mov
fistpl
xor
and
cmp
fistl
add
jnp
mov
mov
pop
ja
push
pop
loope
dec
out
adc
pop
test
or
shll
jae
adc
shlb
mov
lock
fwait
out
call
cmpsb
jg
sarl
sub
roll
add
dec
and
in
cmpsl
or
pop
xchg
shl
dec
dec
test
cwtl
leave
scas
mov
xchg
pop
out
es
int3
push
sbb
xchg
icebp
adc
or
xor
xor
scas
popf
mov
inc
test
pop
mov
and
mov
lcall
aas
xor
xchg
jecxz
sub
pop
daa
loop
push
mov
repnz
mov
imul
es
adc
fcomps
sti
adc
sub
ret
stc
lds
push
sbb
xchg
add
aam
mov
call
dec
push
xor
push
js
fistpl
sub
sbb
gs
xor
in
cs
cmp
incl
push
test
jo
fiaddl
mov
cmp
pop
sbb
mov
jp
out
xor
cwtl
mov
jecxz
pop
aam
or
cmp
cmpsl
sub
aas
mull
sub
stos
cmp
or
adc
test
add
stos
push
movsl
push
inc
outsb
movsb
loopne
sub
push
push
and
outsl
bnd
sbbb
xchg
pop
leave
sbb
loope
jae
add
loopne
mov
fwait
push
inc
inc
xor
xor
jne
loope
aam
adc
fstl
stc
and
xchg
jo
inc
fildl
ljmp
push
cmpsl
sbb
outsl
dec
int
int
imul
sub
es
mov
push
pop
in
scas
fiaddl
or
mov
inc
or
dec
pusha
push
push
movsl
pop
mov
inc
nop
jl
fldl2e
inc
sarb
xchg
test
mov
int3
jmp
or
add
and
lret
sbb
mov
mov
data16
or
pop
jnp
and
inc
movsb
hlt
xchg
pop
or
rcll
xchg
sbb
adc
in
ror
ret
mov
cmp
jns
mov
and
out
sub
loop
call
int3
and
add
iret
mov
std
hlt
inc
popf
lods
imulb
lahf
cli
daa
shl
adc
mov
pop
push
int3
xlat
pusha
mov
jno
xchg
xchg
lods
push
insl
adc
into
xchg
movsb
xlat
mov
xor
push
pop
aam
or
mov
and
scas
mov
dec
repnz
sbbb
adc
or
jmp
xchg
jmp
test
add
add
cmp
in
lock
adc
mov
sub
subl
int
mov
addr16
jbe
int3
sub
jns
pop
pop
and
xchg
outsl
jne
inc
mov
or
idivl
js
mov
mov
mov
dec
int
int
dec
insb
sarb
add
in
cld
inc
les
sub
push
dec
clc
xchg
mov
psubq
add
icebp
xor
pushf
push
lret
cmc
pop
sub
or
mov
clc
or
jmp
fidivrl
out
xor
shrl
dec
cmp
pop
cld
xchg
push
mov
or
lock
scas
sub
pop
dec
lret
cmpsl
mov
mov
jno
ds
fcmovne
dec
mov
xor
insb
das
pushf
loopne
jo
dec
imul
ds
pop
lahf
or
enter
push
loop
sahf
popf
push
mov
arpl
xchg
cli
addb
shl
test
xlat
gs
ficoms
cmp
add
xchg
std
xchg
and
rcll
push
loop
add
cmp
mov
jne
mov
pop
lahf
cmpsl
xchg
adc
inc
mov
fldenv
xchg
hlt
pop
push
add
mulb
push
pop
unpckhps
jmp
repz
inc
push
or
push
add
das
ja
out
shrb
mov
sbb
shrb
jno
test
popa
lods
inc
in
loop
fnstcw
add
in
ljmp
dec
stc
mov
push
into
push
mov
out
je
jg
leave
xchg
mov
ret
inc
jle
pop
lret
aam
or
dec
add
out
pop
mov
cltd
jecxz
fldpi
scas
jecxz
cli
adc
lahf
call
icebp
stos
jecxz
jo
jne
int3
mov
cltd
jne
inc
and
pop
or
jbe
cmp
add
movsl
daa
cwtl
or
add
xor
loopne
fidivl
jecxz
enter
cs
xor
mov
mov
out
adc
es
or
xchg
dec
test
fisttpll
notb
xor
jge
sbb
hlt
and
adc
xchg
mov
mov
cltd
stos
pop
imul
cltd
fiadds
icebp
das
lock
fsubs
jae
push
out
into
lock
cmpsb
repz
push
aaa
xchg
push
mov
mov
pop
dec
jge
jno
xchg
sbb
mov
lods
lods
sbb
decb
and
cmp
and
pop
push
xlat
sbb
pop
mov
mov
and
outsl
jg
mul
leave
jl
ds
aaa
test
outsb
mov
int
out
aad
mov
movsl
xchg
dec
or
mov
in
push
pop
mov
cmp
and
imul
xchg
xchg
cmp
inc
push
cmp
inc
sub
sub
jg
xor
push
cld
sub
cmp
outsb
fcomps
push
paddsb
hlt
fisubrl
orb
xchg
or
fsub
ljmp
and
vorps
lds
mov
loope
add
ljmp
imul
mov
push
adc
mov
insb
mov
fsubr
inc
bound
fmul
and
pop
dec
push
xchg
push
out
lods
ljmp
push
mov
je
repz
popf
cli
data16
sub
lods
push
iret
xchg
xor
add
add
fldt
adc
sbb
or
movsb
sub
sub
out
lret
cmp
jmp
xor
jmp
inc
mov
xor
je
stos
pop
cmc
jbe
and
dec
push
ss
or
test
ret
in
iret
pop
or
cmp
xchg
jg
push
inc
jmp
inc
lret
test
popf
jno
lahf
mov
adc
mov
je
mov
pop
mov
pop
jg
adc
xchg
lds
mov
xchg
out
lock
xchg
and
ds
or
dec
std
cmp
sbb
int
clc
xchg
and
adc
divl
shrl
add
es
dec
rcrl
mov
jne
mov
fimull
adc
loop
cs
fs
mov
jmp
xchg
lods
xor
xchg
cmp
pop
inc
adc
pop
mov
test
push
jno
sbb
scas
xchg
lahf
cmpsl
in
push
out
mov
out
cmc
pop
mov
out
push
sub
test
leave
in
adc
mov
pop
pop
jno
pop
add
fdivs
pop
scas
jp
mov
jle
sub
cmp
inc
cli
div
and
push
sub
xchg
jecxz
loope
leave
fmull
cltd
dec
out
xchg
bound
sbb
movsb
cmp
fcomip
jmp
in
jbe
fsub
push
jae
sbb
jne
xchg
loopne
inc
loop
push
test
xchg
xchg
xchg
cmp
stos
jae
rcll
ret
cli
sbb
out
rcrl
dec
stos
leave
sub
push
js
and
xor
outsl
cltd
sbb
fwait
sbb
xchg
inc
cmc
xlat
mov
push
je
jo
dec
pop
pop
sbb
cmp
ret
mov
inc
loopne
sbb
mov
xlat
adc
out
push
sub
inc
xchg
testb
shrl
push
push
push
mov
in
mov
mov
pop
pushf
cmpsb
adc
adcl
add
pop
cmpsl
pop
into
negb
xor
mov
dec
and
xchg
es
push
adc
xchg
insl
inc
sbb
add
lret
xchg
ja
mov
lock
mov
out
in
ja
cmpsl
lret
cmp
pop
mov
loope
cli
xchg
pop
shlb
cmp
dec
stc
xchg
pop
cmp
in
lea
lods
xlat
ficompl
in
jno
xchg
and
add
mov
lcall
insl
adc
xchg
mov
jmp
testl
and
arpl
div
out
pop
jl
aam
repz
hlt
jbe
cmp
inc
jl
and
inc
cli
add
cmp
test
push
ret
arpl
push
pop
sahf
rclb
cmp
ficoms
sub
repz
aam
jbe
pop
lock
push
call
test
fsubs
test
subl
sti
insl
into
xlat
in
xchg
pop
jbe
loope
leave
pusha
xchg
test
jns
mov
movb
lods
inc
jle
or
sbb
jmp
xchg
xchg
mov
jno
mov
cmp
repz
imul
jnp
int3
pushf
xchg
enter
pushf
jns
idivb
out
push
adc
adc
out
ljmp
fistpl
loopne
scas
cli
xchg
mov
nop
jo
popa
or
fcmovnbe
sbb
dec
incl
push
jae
das
mov
pop
mov
rcrl
sub
cmpsb
jmp
stos
pusha
adc
push
aas
mov
push
add
inc
cmp
repz
outsl
out
push
mov
mov
test
sarl
outsb
mov
jmp
fistps
mov
sbb
adc
jb
pop
mov
arpl
cwtl
lods
push
pusha
mov
pop
cmpsb
xchg
mov
mov
scas
sahf
dec
out
push
in
xchg
fstl
in
mov
wrmsr
test
in
mov
or
or
nop
fsubl
lea
pop
inc
out
ss
ficoms
stos
cmp
shrl
and
mov
inc
xchg
push
fstpl
pop
sbb
inc
not
scas
cmp
iret
dec
pop
mov
in
xchg
stos
mov
out
insl
mov
shll
negl
pop
or
mov
cs
bts
outsl
add
xchg
and
jecxz
popa
pop
and
icebp
dec
pop
andb
sub
xchg
sub
dec
pop
ja
stos
pop
xor
fs
sti
lar
mov
cltd
outsb
test
aam
xor
mov
xchg
sub
lds
adc
adc
add
mov
int
sbb
pop
and
cmpb
mov
sub
stos
adc
sub
mov
pop
sbb
add
add
rclb
jb
cmc
stos
rcrb
scas
sub
adc
mov
aad
jns
or
add
aaa
in
mov
ljmp
cld
cmp
hlt
push
repnz
mov
nop
pop
sub
mov
inc
cmp
pop
out
push
mov
cmp
adc
cmp
test
pop
pushf
cmc
popa
dec
inc
enter
and
jbe
int
andl
jb
add
test
jae
xor
push
aad
clc
pop
xor
jnp
mov
mov
test
sbb
mov
mov
jmp
in
push
rcrb
sub
push
outsb
orb
lret
pop
in
jp
mov
mov
lods
adc
ret
dec
jg
in
rcr
icebp
into
mov
test
cmp
sub
jmp
or
pop
sbb
xor
sbb
jbe
divb
cmp
fimull
daa
leave
cmpb
and
adc
fisubl
xor
mov
and
mov
ret
mov
mov
dec
sub
sbbl
mov
xor
mov
cmc
je
cmp
aam
pushf
add
cmc
sbb
mov
jl
lret
jl
imul
push
jp
mov
or
xchg
adc
dec
inc
sbb
in
cmp
lds
fnsave
or
outsl
bswap
out
cwtl
xlat
dec
mov
mov
mov
push
jmp
subb
xchg
dec
icebp
mov
xchg
int3
cmp
std
lret
and
xor
outsl
mov
jmp
icebp
pop
push
das
jge
sub
clc
fwait
andl
lahf
std
pop
and
adc
add
ret
clc
out
loopne
cli
sub
test
mov
mov
or
jo
pop
dec
xor
inc
sub
lods
outsl
mov
dec
lahf
jl
mov
cmpb
test
iret
aas
mov
sbb
cmp
and
lea
push
mov
test
mov
leave
jle
imul
pop
insl
adcl
mov
shrl
ss
or
sub
scas
pop
aas
js
sbb
int
add
rolb
jae
cmp
cwtl
sbb
loope
hlt
xchg
xor
stc
lahf
mov
divl
mov
aaa
mov
xor
cmc
xor
daa
push
inc
xchg
push
out
sahf
or
out
xchg
mov
mov
push
jno
in
aaa
push
xor
sbb
mov
push
pop
mov
ret
test
cwtl
aas
loopne
mov
cmp
scas
int3
xchg
sbb
ret
loopne
inc
adc
push
popf
push
cltd
sbb
fldenv
outsl
insl
mov
arpl
mov
adc
in
ja
popa
mov
cmp
or
mov
aas
sub
andl
xchg
xor
jl
sub
xor
dec
sub
out
sahf
jno
sti
xchg
pusha
mov
mov
cmp
xchg
cmpsb
or
sti
sbb
mov
out
cmpsl
pop
cmpsl
lds
popa
push
test
sub
dec
xchg
mov
dec
in
inc
hlt
or
inc
test
mov
cmp
fbstp
adc
jb
popf
loop
cmp
loopne
xchg
inc
mov
in
push
data16
repnz
ljmp
enter
mov
xchg
lcall
outsl
movsb
mov
faddl
or
into
test
mov
in
stc
inc
lea
lret
daa
sbb
aad
dec
addb
adc
mov
scas
sbb
cltd
cmp
add
enter
add
and
push
out
and
push
and
mov
mov
pop
mov
out
stos
mov
xchg
sti
mov
adc
adc
jg
stos
mov
enter
ss
inc
hlt
mov
lahf
mov
stc
pop
and
lcall
jne
xor
jo
mov
mov
pushf
pop
cmp
push
pop
ret
mov
mov
sub
inc
mov
hlt
pushf
decb
test
test
shrl
mov
jle
ss
insl
leave
fldenv
push
mov
shrb
jg
outsb
cmp
xchg
push
daa
push
inc
outsb
dec
popf
imul
outsb
imul
cmp
insl
dec
and
cmp
mov
imul
push
jecxz
nop
cmp
jge
lds
out
mov
stc
mov
data16
decl
push
add
imul
adc
and
cwtl
sub
les
in
jecxz
and
add
sub
sahf
lea
dec
fs
push
arpl
lds
lcall
and
mov
push
ljmp
jnp
xlat
stc
das
lds
push
ja
cmpsl
imul
inc
and
outsl
mov
fidivl
sbb
bound
lret
sahf
fldenv
and
std
push
aad
roll
rcl
sahf
sahf
adc
pushf
push
jne
and
push
inc
clc
pop
adc
sahf
sub
pop
push
pop
rcll
push
inc
mov
addr16
or
mov
sub
push
push
imulb
repz
dec
jg
hlt
in
adcb
sbb
xchg
add
or
pop
ret
int
ljmp
cmp
sub
sbb
or
jl
insb
push
pop
inc
dec
mov
movsl
lods
xchg
pushf
test
fadd
int3
xor
sbb
or
jl
insb
push
pop
inc
dec
mov
movsl
lods
xchg
pushf
test
fadd
int3
xor
sbb
or
jl
insb
push
pop
inc
dec
mov
movsl
lods
pushf
pushf
orl
sub
sbb
insb
push
pop
lds
pushf
test
xorb
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
into
dec
and
outsb
adcl
adc
into
mov
sahf
icebp
mov
mov
xor
jle
outsb
add
jno
in
ds
cs
mov
mov
mov
mov
outsb
add
dec
push
pop
ds
into
ret
shl
cmpsb
in
mov
movsl
rol
xor
or
inc
push
ljmp
adc
ss
mov
insb
xor
xor
jo
popf
xor
xchg
loopne
jae
imul
rclb
cmpsb
xor
and
or
das
inc
and
pop
inc
test
and
sbb
or
roll
loope
adc
sbb
dec
xor
add
mov
shrb
icebp
jae
enter
out
mov
and
leave
adc
push
test
pop
das
inc
into
loop
mov
push
adcl
sarb
cmp
mov
out
iret
loop
adc
leave
push
outsb
stos
cltd
mov
rol
inc
add
dec
sarl
outsb
or
jno
popa
mov
rcr
into
incb
sahf
fisttpll
scas
sbb
and
push
or
jb
inc
push
pop
cmp
lahf
test
call
cli
nop
cli
mov
jo,pn
and
push
bound
aas
cs
mov
mov
scas
stos
aaa
sub
inc
outsl
bound
adc
cs
fidivs
out
sbbl
xor
jle
outsb
add
jno
popa
ds
cs
fidivs
out
sbbl
xor
test
dec
sub
xchg
xor
mov
mov
sub
xchg
aas
icebp
jg
aaa
cmovg
fstpt
cmp
cmp
aam
push
js
or
dec
and
cmp
mov
sahf
rcll
js
cmp
add
aad
push
inc
lahf
add
bound
stc
and
cmp
pop
or
push
cmc
pop
flds
mov
ja
in
sub
mov
enter
mov
and
movsb
add
daa
das
push
repnz
data16
decl
lds
cmpb
inc
into
push
in
push
rclb
cmp
xchg
rol
js
push
xchg
in
and
cmp
dec
mov
enter
sub
mov
lcall
mov
fs
es
orb
rcrb
jo
inc
add
cmp
xsha256
cmpsb
push
jecxz
lcall
xor
add
xchg
sbb
push
push
push
cmp
std
insl
add
movsb
arpl
orl
lods
jo
xor
jbe
push
test
loopne
cli
push
shrb
insb
xchg
in
icebp
push
push
fsubp
pop
shlb
hlt
jge
mov
xor
push
mov
test
push
inc
xchg
and
push
mov
pusha
sub
or
mov
push
mov
ds
sbb
and
nop
pop
fwait
aam
push
add
xchg
jle
xor
out
stc
loope
call
sub
adc
or
or
mov
mov
ret
add
inc
push
mov
cmc
jp
and
xchg
cmpsl
xchg
mov
mov
sub
leave
mov
gs
pop
sbbb
mov
leave
fimull
jecxz
fstl
sub
inc
inc
into
sbb
dec
sub
or
data16
inc
add
addb
sub
jg
add
lods
cwtl
mov
sub
fs
dec
rcll
arpl
push
sub
pop
ljmp
mov
push
cmpsb
lcall
jg
lret
push
fildll
imul
dec
cmp
mov
out
xchg
addr16
xchg
ret
pop
call
lea
call
push
ret
push
dec
insb
push
frstor
fwait
add
and
push
cmc
sti
mov
sti
test
or
xchg
movsl
lods
insb
mov
ret
sbb
lock
fdivrl
ljmp
jl
pop
pop
push
iret
shll
mov
lcall
sub
jbe
imul
adc
mov
js
es
mov
rcrl
nop
xchg
sbb
je
psubd
mov
lret
out
push
push
out
insb
xchg
xchg
or
mov
subb
push
lds
jmp
mov
or
adc
aaa
xchg
sub
xor
stos
rorb
mov
lcall
cmc
push
fxtract
mov
movsl
push
xor
movl
pop
lret
cmpsb
ljmp
push
sub
into
sub
into
mov
in
mov
lea
mov
sbb
pop
cmp
scas
pop
mov
cltd
out
mov
add
stos
mov
push
push
mov
xor
sbb
loop
xor
pop
push
movsb
stc
pop
xchg
pusha
adc
cmp
push
shll
jge
and
out
inc
jno
les
loope
push
xorb
ss
jne
cwtl
jb
inc
outsb
jnp,pn
movsb
inc
enter
es
nop
filds
test
mov
mov
adc
sarb
mov
lcall
shlb
xchg
mov
mov
ss
lea
mov
or
adc
hlt
jno
xchg
push
xor
mov
rcrl
or
ret
sub
xchg
pop
cwtl
arpl
jbe
jo
call
or
pop
jle
std
popf
pop
adc
ja
sbb
push
lcall
push
mov
test
out
es
and
scas
xchg
mov
dec
lcall
aaa
addr16
xor
nop
pop
ret
int3
mov
lcall
xchg
dec
and
dec
dec
push
sbb
nop
or
loop
and
add
mov
pop
fdivs
inc
cmc
fidivrl
sarb
ficoml
aad
in
pushf
xchg
pop
fsubr
push
pop
call
sub
mov
mulb
add
ret
push
andb
inc
sbb
ss
mov
idivb
inc
repnz
xchg
sub
or
mov
jmp
les
push
sub
and
je
xor
test
idivl
push
ret
mov
pxor
push
jno
or
mov
fldlg2
add
imul
mov
xchg
fdivrs
subl
les
adc
imul
mov
jle
incb
dec
clc
fstl
cmpsb
mov
add
popf
lods
fildl
shlb
or
xchg
xor
add
mov
inc
and
cwtl
repz
aas
xlat
push
testb
mov
cmp
les
pop
add
ds
in
mov
jge
pop
test
jae
sub
pop
daa
cmp
loope
push
jbe
and
adc
jmp
pusha
int
lret
test
mov
add
push
and
ljmp
movsb
xor
pop
ret
fstpt
ret
pop
pushf
lds
dec
ds
sti
push
and
mov
xchg
in
mov
xchg
cltd
shll
or
fadd
cmp
aaa
fld
mov
ss
les
ja
mov
mov
movsl
sub
in
fldpi
sbb
insl
push
xchg
push
fmull
outsb
das
or
into
in
loop
cbtw
pushf
scas
jl
xchg
sti
mov
dec
out
fwait
sbb
das
scas
xor
mov
cs
outsl
negl
iret
pop
shrb
xchg
icebp
jmp
lahf
inc
push
pusha
cltd
in
in
shrb
push
pop
cmpsb
and
cmp
repz
lods
repz
xacquire
xorl
push
or
mov
and
adc
bound
mov
dec
xchg
sub
xor
and
int
pop
aaa
aad
shrb
sub
push
dec
xchg
leave
dec
jecxz
hlt
cld
fcomps
mov
pop
jl
test
int3
jbe
outsl
loop
movsl
push
dec
pop
iret
push
dec
cmpsb
pop
mov
jo
lret
imul
or
rolb
repz
inc
jge
out
jg
or
or
pop
xor
xor
mov
sti
mov
ljmp
sub
push
xor
and
and
mov
enter
movsl
xchg
cs
ret
pop
jle
mov
repz
jno
hlt
push
pop
xchg
clc
or
ds
in
add
jp
enter
adc
add
mov
adc
in
jmp
and
insb
mov
les
scas
icebp
add
aaa
dec
push
das
int3
sarb
push
ja
sbb
leave
loop
or
dec
push
ss
div
pop
or
popf
xchg
add
mov
cmp
insl
pop
ds
testl
inc
data16
sbb
adc
test
mov
mov
loope
bound
cld
loopne
mov
mov
lahf
mov
sti
rcr
fucomp
sbbl
jmp
cmc
bound
add
push
ljmp
pusha
imul
push
sbb
xor
dec
lret
pop
add
mov
jmp
xorl
loop
push
cmp
sub
mov
jp
xchg
sub
xor
jge
dec
fdivrs
pushf
cltd
lea
lock
mov
out
pop
loop,pn
mov
jmp
aaa
cmp
test
jo
in
xor
xchg
cmp
js
out
pop
dec
iret
jmp
lods
cmp
inc
jbe
mov
ja
pusha
push
mov
aad
add
int
out
fdivrl
insb
mov
sbb
mov
aas
clc
into
add
test
fwait
popa
movsl
add
enter
in
and
push
fisubs
call
mov
sub
rcrb
sbbl
inc
fwait
inc
das
lret
or
sbb
sti
test
rep
shll
add
push
mov
icebp
mov
inc
xchg
jge
ret
or
cvtps2pd
lock
fcomip
and
push
fstp
jbe
fwait
xor
adc
adc
ss
xchg
or
sbbl
icebp
inc
cmovne
jae
jge
pop
push
cld
imul
iret
jl
xchg
cmp
ret
jp
xor
mov
sbb
jns
xorl
dec
enter
or
cltd
inc
or
outsl
mov
sbbb
sbb
pop
inc
std
lock
insl
sti
jb
mov
arpl
shl
add
xor
into
daa
mov
cmpb
std
test
mov
jne
cmp
in
mov
cmpsb
or
mov
sbb
pcmpeqw
jmp
scas
jge
pop
xchg
or
mov
std
popa
sbb
dec
mov
shrb
fisttpl
xor
and
and
daa
setg
stos
sbb
bound
mov
fidivs
xchg
int3
pop
sbbl
movsb
jp
pop
mov
mov
mov
lds
sbb
cmpsl
call
cmp
dec
inc
sbb
jl
mov
sub
ror
andl
pop
out
push
out
clc
mov
repz
push
xor
dec
es
loop
cmc
stc
jbe
jp
in
add
pushf
or
pop
sbb
inc
ss
pop
mov
or
fucomi
aam
xor
sub
xor
push
lcall
push
jb
arpl
mov
lods
jns
fsubl
add
mov
out
mov
int
dec
push
out
mov
lret
fiadds
inc
and
fs
push
stos
inc
arpl
out
in
cmc
lcall
fwait
cli
lds
sub
insb
bound
hlt
test
stc
in
xchg
mov
jl
push
mov
xor
movsl
mov
dec
subb
pop
mov
xchg
test
inc
lods
negl
scas
outsb
mov
mov
nop
psignd
mov
add
sti
ret
push
mov
and
shrl
mull
xor
add
repz
rcr
gs
jp
repz
jmp
jmp
mov
sbb
lods
loop
jo
xor
fldcw
xor
in
lds
mov
xor
sahf
movsb
add
loop
push
jbe
fwait
xor
lea
sbb
bound
mov
jns
test
xchg
inc
fdivl
add
aad
sbb
js
loop
xchg
add
sub
cld
insb
push
lods
and
dec
sbb
jno
dec
sbb
into
lea
xchg
pop
sub
mov
mov
mov
out
cmpsb
adc
jns
sub
sbb
mov
in
adc
cmp
fnstcw
lret
inc
sub
jecxz
loopne
jg
or
fst
test
incb
stos
mov
out
insl
int
or
call
lret
mov
in
mov
mov
adc
dec
shr
inc
jge
fnstcw
out
subb
or
ret
and
jb
cmp
mov
nop
lcall
xor
orl
fnstcw
fildl
out
push
pusha
sbb
xchg
shl
xor
or
nop
addr16
adc
or
and
lret
mov
inc
into
pop
mov
out
ret
scas
lahf
pop
jnp
push
sbb
movsl
sbb
pop
stos
sub
xor
add
xlat
adc
ljmp
nop
mov
fisubl
and
fisubrs
and
test
test
push
lock
in
and
xchg
out
adc
and
mov
mov
adc
inc
jp
in
or
mov
inc
adc
mov
xchg
jg
and
jbe
ficomps
ljmp
insb
pop
jl
fldenv
pop
or
jmp
cmp
pop
sbbb
imul
hlt
jle
mov
mov
adc
loope
pop
test
jg
add
fwait
sbb
mov
stos
sarl
arpl
xor
add
incb
mov
imul
ds
sbb
pop
imul
inc
mov
xchg
cmp
mov
push
pusha
nop
jbe
imulb
jno
xchg
add
sbb
sub
push
lods
mov
je
stos
iret
jle
push
lcall
xor
dec
xlat
mov
clc
inc
fwait
xchg
aas
pop
mov
push
pmuludq
push
and
xor
mull
xor
push
in
hlt
xchg
dec
jae
repz
sidtl
pop
mov
lods
push
rclb
fwait
sbb
clc
add
mov
test
sbb
pop
inc
out
mov
add
dec
adcb
sbb
aad
rcl
push
inc
test
sbb
ror
ret
es
cmp
pop
aas
icebp
dec
movsb
or
stc
loopne
les
es
push
dec
idivl
xchg
mov
aaa
ds
int
adc
aam
dec
xor
mov
add
sub
repz
pop
or
xchg
adc
test
popf
clc
add
xor
ret
mov
pushf
xor
shlb
in
mov
test
dec
dec
add
sub
hlt
sub
mov
test
or
push
movsb
sub
xor
mov
mov
repnz
aam
push
push
js
mov
jbe
push
mov
jl,pt
scas
adc
inc
mov
sti
mov
push
jbe
out
lret
and
or
xorl
push
add
dec
jbe
push
adc
cmpsb
dec
jmp
pop
lods
cwtl
sub
pop
mov
xchg
push
xchg
stos
lahf
xor
mull
call
dec
das
and
sub
or
mov
mov
insl
cld
test
sbb
gs
fcomps
jo
shlb
lods
loop
mov
cmpsb
sbb
les
or
jmp
fs
mov
sbb
xchg
lock
enter
arpl
call
push
push
push
push
xor
mov
std
add
mov
jge
test
add
ljmp
inc
dec
stos
sub
sbb
fldenv
fcmovu
jle
jp
pop
sbb
xchg
xchg
sub
pop
add
pop
inc
push
mov
add
scas
les
sub
xlat
jns
daa
pop
shlb
sub
sbb
xor
movsb
lods
out
aaa
push
frstor
cmc
fisttps
xlat
rcrl
dec
aas
fs
and
addr16
aaa
and
pop
out
lock
push
movsl
pop
add
mov
out
sbb
xor
test
jae
aad
out
orl
loop
or
jno
mulb
aam
or
std
xchg
push
mov
sbb
mov
mov
test
xor
rcrb
mov
sbb
nop
cmp
pop
sub
or
xchg
inc
lods
rol
ret
scas
aad
xor
xorl
dec
jp
jmp
stos
cli
ja
push
loope
xor
add
pop
imul
scas
xchg
subb
cmpsl
sbb
pop
mov
xchg
pushf
mov
mov
ss
test
jmp
sbb
adc
aaa
sarb
mov
xor
jno
mov
icebp
dec
in
std
popa
and
jge
push
lods
jg
cs
pop
into
lods
mov
testl
inc
jmp
dec
jb
ret
into
pop
dec
cmp
mov
mov
int
jbe
cli
add
sbb
adc
jge
call
inc
mov
cmp
rcl
orb
push
cltd
xlat
mov
clc
sub
xlat
aas
push
and
mov
movlps
pop
lock
les
jp
or
jbe
mov
sti
icebp
mov
clc
fsubrl
int3
mov
aad
jmp
outsb
xor
fdiv
dec
andb
aad
jmp
sbb
and
les
push
jnp
addr16
les
or
sub
iret
xor
mov
insl
into
mov
repnz
idiv
mov
subl
xlat
into
dec
cltd
xchg
mov
push
xadd
adc
adc
lds
in
sbb
mov
jb
xor
fdivs
outsb
xchg
mov
inc
int
and
push
cmp
sbb
and
enter
test
mov
mov
ret
pop
in
push
push
fiaddl
sbb
or
insl
jmp
lea
enter
and
filds
sbb
mov
mov
cmpsl
es
xchg
in
pop
sbb
mov
and
mov
xchg
cli
xchg
inc
dec
stc
lds
xor
pop
sbb
fcoms
test
mov
mov
leave
pop
fucomip
idivw
mov
mov
dec
sub
cmp
testb
ret
dec
hlt
push
lcall
xchg
dec
in
scas
xlat
jo
lret
pushf
sbb
inc
mov
out
lea
int3
cwtl
imul
and
mov
lods
in
mov
cld
scas
andb
std
push
addl
loopne
mov
loope
push
sub
testb
xchg
scas
test
into
mov
xlat
jmp
clc
cmp
sahf
shrb
das
mov
rcrl
dec
shl
lods
mov
xor
sub
xchg
cmc
inc
mov
shrb
lret
int
mov
or
aas
xor
pop
imul
lea
pushf
cmpsl
mov
lds
jp
ss
dec
pop
cmpsb
stc
bound
pop
lods
mov
ret
jne
push
lret
push
or
inc
aaa
cmp
push
mov
fcmovu
cltd
add
or
mov
add
scas
fs
xchg
jg
xor
das
out
out
cmp
pop
in
outsb
rorl
jl
or
sarb
pushl
xchg
loop
add
fcomps
mov
out
adc
mov
pop
fists
cmc
pop
mov
stc
and
mov
int3
jge
push
adc
nop
mov
xchg
fwait
and
jecxz
in
in
dec
mov
data16
rorb
stos
jns
jae
test
cmp
xor
jle
sbb
ja
es
and
imul
aam
test
push
jae
sub
mov
data16
pop
xorb
adc
lahf
cmc
sub
cmp
jp
and
mov
adc
test
xchg
loope
cmp
push
jg
jge
adc
out
stos
pushf
and
ljmp
sub
add
or
shll
testb
call
fistps
xchg
sub
push
jg
dec
pop
jecxz
gs
mov
adc
mov
add
mov
scas
sti
enter
sub
ss
rdmsr
xchg
or
mov
ficoms
cmp
push
nop
sarl
mov
test
add
xor
add
fldcw
pusha
daa
aaa
adc
ljmp
add
pop
xchg
std
ljmp
pop
insl
icebp
lds
add
stos
mov
inc
lret
and
push
mov
lcall
xor
lcall
rorl
push
inc
mov
mov
adc
inc
xchg
lods
mov
shrb
xchg
out
cltd
add
loopne
movsl
in
xor
fisttps
loop
mov
fldenv
cmp
insl
scas
daa
insl
jb
arpl
mov
mov
popa
cli
pushf
daa
insl
in
mov
ret
neg
mov
inc
je
adc
sub
cmp
clc
in
sub
dec
imul
and
fsubr
enter
jge
push
shrb
loope
sahf
shlb
data16
xchg
popf
push
cmpb
mov
mov
cmp
pop
sub
pop
loop
lret
sbb
sbb
xchg
mov
push
sub
adc
adc
adc
aam
aam
adc
mov
xchg
fldcw
or
push
inc
decb
ljmp
andb
mov
arpl
xor
or
and
pop
out
add
and
add
aad
xchg
pushf
sbb
add
jno
popa
ds
cs
fidivs
out
sbbl
xor
jle
outsb
add
jno
popa
ds
cs
fidivs
out
sbbl
xor
jle
outsb
add
jno
leave
ds
cs
fisubrs
mov
sahf
icebp
mov
mov
xor
jle
outsb
add
jno
popa
shrl
inc
fimuls
or
imul
jns
push
inc
cs
ds
mov
or
jl
push
jp
imul
les
hlt
mov
cld
test
xchg
fdivl
push
jo
or
jl
insb
adc
and
xor
lods
aam
les
fsubl
push
mov
bound
dec
fsubs
out
hlt
xchg
jmp
cli
mov
nop
mov
inc
pusha
cmp
js
insb
int
mov
lahf
pop
ret
loopne
mov
fcomps
out
rcrb
rclb
push
in
ljmp
fdivrs
hlt
jo
add
mov
fsubl
shrl
sbb
mov
sub
fsubr
inc
lods
adc
pop
mov
xchg
test
mov
adc
push
stc
fs
andl
mov
xchg
lods
sub
add
or
xlat
in
imul
int3
faddp
jl
mov
fwait
xchg
xchg
andb
xlat
je
xor
pushf
mov
in
sbb
rorb
mov
sbb
ds
mov
lds
in
xlat
mov
movsb
addr16
jp
sbb
or
cwtl
add
adc
cmp
ss
ljmp
sub
int3
rclb
pop
push
push
push
add
dec
dec
pop
mov
mov
fwait
mov
add
movsb
test
push
outsb
adc
jno
ja
es
mov
hlt
mov
testb
push
add
pop
add
push
dec
xor
les
cld
test
xchg
fsubl
push
sbb
or
jl
insb
adc
and
xor
les
cld
test
xchg
fsubl
rcr
inc
int3
addr16
test
cwtl
out
push
pop
mov
popa
decb
mov
adc
addl
cmp
into
sub
cmpsl
pop
in
out
in
fsincos
cmpsb
clc
aaa
xchg
push
data16
leave
mov
sub
pop
mov
cmp
cmp
mov
fistpll
shrb
mov
arpl
mov
js
or
inc
pop
xchg
insb
test
lret
daa
insb
cs
lcall
sbb
ds
jnp
stos
loope
push
inc
pop
dec
adc
scas
bound
mov
std
adc
cmpb
push
xchg
iret
adcb
mov
xor
mov
call
addr16
sbb
add
sahf
push
frstor
lea
pop
cmp
xchg
adc
jmp
fwait
sbb
pop
and
fimull
pop
fidivrl
loop
sti
mov
push
and
in
and
push
stc
ds
jp
add
pop
in
fs
sarl
cmpsl
xchg
fstpt
cmc
jge
dec
aad
inc
pop
push
and
jecxz
shrl
push
ror
mov
daa
cmp
mov
inc
pop
xchg
das
sub
mov
push
outsb
int3
into
test
int
ljmp
sahf
rorl
and
sub
leave
sbb
cli
mov
push
stc
push
cmp
push
jbe
aaa
divb
jg
lea
pushl
mov
stos
xchg
adc
push
mov
int
decl
or
push
ret
pusha
push
int
mov
fs
aad
and
popa
xchg
mov
sub
ror
sarb
ljmp
call
imul
xchg
cmpsb
jl
loopne
aaa
xor
cwtl
in
sub
test
pop
lods
hlt
sbb
push
repz
xor
lods
pop
fldl
cmpsb
stos
test
push
adc
test
jmp
cli
adc
or
adcb
jbe
or
sbb
pusha
insl
imul
jmp
not
pop
push
mov
and
cmpb
or
lret
jne
ds
in
aam
jmp
xchg
jp
imul
or
mov
data16
fmull
in
lret
cld
adc
lret
mov
out
je
inc
out
pop
or
push
push
pusha
push
inc
cmpsb
push
xchg
pop
pushf
mov
xlat
iret
push
push
lds
mov
sub
mov
jnp
adc
fimull
xchg
scas
ljmp
lods
mov
jmp
pop
lret
lahf
shll
lock
fimuls
jp
pusha
xchg
sub
lds
shll
push
add
fcomps
xchg
std
data16
adc
int
jp
xlat
xchg
testl
xchg
dec
and
aad
adc
pop
mov
jo
gs
jae
mov
gs
out
sub
cmc
inc
mov
ror
xchg
das
aaa
call
movsb
xchg
loope
push
orl
mov
cmpsl
jl
push
xchg
pop
mov
pop
push
lahf
gs
dec
in
jle
mov
lea
inc
pop
int
jecxz
mov
mov
mov
int
and
inc
dec
jl
mov
std
cmc
lcall
movsb
xchg
mov
frstor
cmp
lret
sub
imul
jnp
in
xchg
jno
xchg
dec
add
sbbb
movsl
or
jno
inc
cmp
xor
fcomps
daa
and
and
notb
fsubrs
xchg
in
pusha
adc
insb
mov
sbb
lcall
mov
mov
ret
xorb
sahf
fcomip
out
imul
iret
mov
mov
xchg
jbe
shld
imul
mov
or
sub
out
inc
mov
inc
test
xchg
stos
or
repnz
addb
xorl
add
out
and
add
push
and
test
sti
jb
mov
fdivl
and
or
mov
and
adc
and
in
arpl
fwait
jbe
cs
hlt
in
sbb
repz
das
sahf
dec
loop
dec
hlt
out
inc
jb
adc
out
xchg
mov
cmp
and
dec
int
out
cmp
sub
xchg
bnd
inc
out
sub
lcall
xor
roll
imull
rorl
or
push
pop
mov
shll
int3
cltd
fildll
pop
hlt
mov
add
subl
imul
insb
aad
push
mov
outsl
jo
rol
inc
adc
test
rcrl
das
out
mov
fnstenv
push
xchg
in
push
bound
xchg
inc
pop
push
mov
test
jmp
insl
add
popa
gs
mov
cltd
push
inc
or
or
xor
ja
jnp
pushf
addr16
out
repnz
frstor
pop
popf
adc
mov
out
push
nop
push
sbb
mov
lods
lcall
dec
pop
aad
mov
mov
dec
jle
or
pop
xchg
adc
mov
add
mov
dec
outsb
into
ja
scas
sbb
ret
mov
mov
sbbb
sahf
or
dec
cmc
push
cld
cmpl
inc
adc
aam
jb
in
out
sbb
movsb
ljmp
in
adc
orl
cli
xor
push
enter
fisttpll
ljmp
mov
loope
ret
fsts
mov
js
or
dec
loopne
in
sbb
xor
aam
scas
jns
mov
dec
and
pop
insb
les
jmp
ja
stos
jp
and
xchg
lret
jnp
xor
add
inc
scas
mov
xor
int3
push
aas
add
rcrl
icebp
dec
test
hlt
jae,pn
inc
aad
cmp
cmp
or
movb
jne
xor
call
sbb
enter
push
push
lods
repnz
and
mov
addr16
sub
fists
mov
push
in
or
daa
mov
cmp
sbbb
push
add
push
cltd
lods
xor
ffree
movsl
xchg
lahf
pop
popf
ss
dec
or
test
lret
sarb
xchg
hlt
mov
les
mov
leave
sbb
dec
outsl
add
int3
adc
mov
in
das
jmp
or
pop
divl
jp
mov
sub
cmp
jge
dec
mov
jecxz
adc
ficompl
fisubl
in
lret
dec
out
fnstenv
stc
push
ljmp
repnz
ds
cs
cli
sub
jl
dec
fists
out
jp
sahf
xchg
sbb
mov
pusha
mov
or
iret
pusha
loope
in
xchg
test
mov
inc
orb
fmuls
test
rcll
pop
stos
mov
add
or
fcmovne
out
sub
lods
cmp
enter
mov
sbb
popf
movsb
mov
popf
out
jecxz
call
fsubp
imul
mov
push
pop
sub
xlat
daa
mov
add
jb
sbb
xchg
gs
fmull
negb
adc
push
jecxz
test
cmp
xchg
aad
xchg
ds
div
nop
lods
out
and
ficoml
push
lcall
test
orl
adc
jp
fmull
scas
out
insl
aas
pushf
imul
xchg
dec
push
mov
imul
gs
pop
mov
sbb
pop
xchg
pusha
call
mov
jp
add
mov
stos
outsl
mov
mov
add
push
mov
cmp
cmp
xor
mov
sub
repnz
xchg
scas
xchg
push
jbe
cmp
ffreep
jbe
in
and
inc
pop
scas
repz
icebp
je
enter
fsubl
mov
mov
loopne
pusha
in
xchg
pop
and
or
mov
rorl
xlat
pop
leave
repnz
xchg
cltd
test
fistl
mov
pop
cmp
push
sub
repnz
dec
out
cmp
movsb
insb
stos
sbb
lods
sbbb
mov
xorl
mov
sub
dec
add
pop
ud0
cmp
pop
test
aaa
or
pop
pop
dec
in
jl
mov
adcl
xchg
cmp
or
cs
test
sub
push
sub
sbb
and
enter
sarl
dec
dec
clc
das
sub
jns
dec
insl
push
in
pop
xchg
adc
sub
addr16
pusha
mov
daa
popa
outsb
inc
cmp
mov
xchg
loop
and
test
push
pop
or
xchg
lret
sub
pop
push
and
push
mov
inc
or
pop
aad
jae
pushf
inc
stos
pop
pusha
in
mov
inc
rol
stos
and
movb
cmp
enter
pop
dec
loope
dec
add
xor
rcr
mov
sbb
cmp
pop
fcomps
pop
xchg
mov
iret
mov
in
sub
add
popf
movsb
jmp
es
mov
jmp
push
xchg
je
push
in
ja
jg
bound
add
jge
enter
and
sahf
xchg
sub
dec
ja
mov
lahf
test
stc
or
mov
bound
mov
lock
push
jecxz
out
jbe
insl
lcall
test
push
xchg
sub
inc
mov
outsl
imul
xchg
test
jno
arpl
jle
jno
mov
cwtl
mov
stos
cld
add
stos
fnstsw
fistpll
mov
aas
inc
or
cmp
int
test
ljmp
std
popf
stc
jge
push
xchg
je
inc
lahf
and
icebp
or
or
nop
and
arpl
mov
xlat
dec
add
push
and
and
ret
cmp
arpl
test
jae
inc
inc
xchg
stc
daa
cld
lcall
fucomip
pop
stc
out
jmp
mov
xchg
test
movsb
cmpsl
call
add
mov
fisttpl
adc
dec
push
cs
aas
mov
xor
xchg
push
sbbl
xchg
mov
mov
pop
pop
inc
push
xchg
inc
outsl
loopne
cltd
rcrb
rorl
dec
scas
in
addb
std
xorb
push
insl
fcomp
adc
cmc
push
cmp
dec
pushf
jns
pusha
and
into
and
mov
ret
mov
das
std
sti
dec
sub
fisttpll
scas
shrb
ja
rol
out
push
inc
sub
pop
nop
jb
push
xchg
data16
mov
aam
xor
lds
cmc
jecxz
sbb
mov
popf
add
jl
mov
lods
leave
pop
mov
jnp
dec
mov
out
ss
movsl
outsl
cmc
adc
cmp
cwtl
and
lods
fld
cmp
push
into
cmp
cmp
jecxz
cmpsb
xor
iret
mov
xor
js
iret
mov
dec
mov
xchg
lods
mov
xchg
pushf
cmc
jp
outsb
add
sbb
mov
lcall
cli
ds
push
scas
dec
sub
pop
test
out
xchg
lret
ret
jbe
insb
inc
in
jns
lods
fistpll
add
js
fidivs
je
mov
std
xchg
aaa
jl
cmp
aaa
xor
loope
and
and
daa
pop
add
int
mov
data16
xchg
cmp
and
inc
aaa
and
lods
stos
and
scas
mov
jle
pop
cmp
sbb
test
pusha
out
push
push
pushl
sub
scas
pushf
jne
pushf
push
adc
repnz
ds
fldenv
das
mov
push
pop
pop
push
xor
jbe
jns
dec
sub
test
push
notl
cmp
xor
sub
xlat
push
fdivl
or
out
xchg
mov
lea
jge
in
pop
popf
and
push
xchg
pop
or
dec
or
pop
lcall
mov
push
test
ficompl
icebp
in
inc
sub
outsb
daa
nop
mov
es
xor
push
mov
sbb
cltd
push
push
sub
push
pop
xor
pusha
scas
fsubrp
enter
pop
mov
xor
daa
insl
mov
fisubl
cmc
mov
lock
insl
push
dec
mov
pop
js
pop
xor
mov
lret
jecxz
icebp
fwait
dec
pop
push
faddl
dec
test
scas
xchg
scas
inc
xor
cmp
lods
push
push
popf
cwtl
icebp
fs
jge
iret
or
icebp
and
loop
dec
fistps
lea
cmpl
push
adcb
int
into
xchg
lahf
adc
xlat
jmp
push
mov
mov
daa
push
test
inc
mov
bound
cmpb
jle
push
dec
test
data16
lock
ds
cmp
mov
hlt
test
arpl
sub
sbb
push
cmpsl
inc
dec
outsb
or
rcl
jp
jge
negl
add
fmulp
pop
stc
imul
xchg
adc
jp
sub
adc
cmpsl
sbb
or
je
bound
decl
cmp
in
and
xlat
mov
prefetch
sub
lret
add
flds
rcl
adc
scas
push
pop
out
lock
fsubl
sub
jae
add
push
and
cmp
push
sbb
mov
jo
dec
mov
imul
mov
aam
cs
jl
rorl
cmpsb
cmpl
jno
addb
fcoml
lea
gs
cmp
or
cld
cmp
cwtl
cwtl
or
roll
jp
xor
and
fucomp
loope
inc
lods
aad
push
xorl
push
inc
push
cmp
inc
and
push
call
jne
add
or
xor
cmpsl
and
imul
push
mov
add
jbe
or
add
or
aam
gs
stos
std
xchg
addl
mov
shr
cmpsb
jae
cmc
lcall
push
mov
pop
cltd
dec
adc
out
xor
dec
adc
sti
aaa
inc
stos
cmp
aam
dec
dec
sub
cmp
out
aam
dec
fs
lods
mov
orl
repz
aas
xor
ljmp
mov
push
cmp
push
scas
pop
fildl
dec
imulb
arpl
or
cmp
mov
cwtl
push
cmp
pop
test
daa
push
or
sub
xchg
jle
sahf
aas
iret
sub
push
sarl
push
jmp
hlt
aad
jb
xchg
ljmp
xchg
ret
rorl
leave
sub
in
mov
push
sahf
sbb
add
inc
xlat
sub
movb
jnp
mov
xor
add
sarl
cmp
ret
push
jp
mov
adc
andl
insb
out
mov
rcrl
stc
jno
jl
push
cmp
and
mov
cmp
sbb
movsl
xor
test
out
in
mov
shr
ret
outsl
scas
sahf
push
jle
int
add
mov
daa
inc
pop
xor
push
dec
sbb
lock
xor
cmpsb
icebp
push
stos
lods
xor
jg
movsb
inc
xchg
sub
call
leave
lods
mov
dec
or
xor
data16
push
lahf
mov
mov
cmp
mov
xchg
aad
les
hlt
lea
js
je
jb
bound
push
dec
stc
out
cmp
mov
push
cli
xchg
ds
or
cs
addr16
lret
mov
cmpsb
add
addb
pop
adc
ficompl
xor
adc
mov
cs
pop
jmp
jae
pusha
xchg
mov
imul
shl
add
mov
aad
jg
in
jno
orb
mov
xor
roll
mov
es
loop
mov
bound
inc
sbb
xchg
sub
or
loope
sub
sahf
negb
arpl
dec
imul
cwtl
xor
test
inc
dec
mov
fwait
mov
pop
faddp
lret
mov
xchg
test
loopne
adc
addr16
arpl
push
dec
pop
mov
push
sti
rolb
lret
lea
js
xchg
add
cmp
cmc
insl
pop
dec
jb
aad
xchg
into
incl
scas
dec
mov
mov
fwait
pop
int3
movsb
and
call
pusha
mov
repz
hlt
add
mov
cmp
mov
add
stos
int
push
aad
cmp
fimull
movsb
xchg
mov
fstpt
test
and
sub
rcl
popa
mov
jecxz
jne
sub
loop
inc
push
adc
xchg
lcall
mov
sahf
int3
fadds
enter
sahf
push
jnp
scas
jg
insl
shll
cwtl
imul
xor
jp
lock
mov
outsl
icebp
stos
popf
add
adc
pop
and
movb
gs
fstpl
cld
insl
push
xchg
push
es
mov
ret
insb
mov
cmp
lcall
rolb
movsb
sub
mov
mov
in
xchg
repz
add
add
push
lods
int
call
inc
icebp
mov
in
lahf
xor
and
mov
xchg
cmp
push
cmp
iret
push
iret
adc
cwtl
xor
sub
mov
mov
cmp
aas
nop
shlb
add
dec
or
das
ffree
ret
cmp
loop
scas
add
lds
mov
sbbl
faddl
stos
mulps
mov
xor
movsl
in
cld
idivl
jg
jge
or
push
stc
xor
mov
jle
jecxz
fdivr
lds
or
test
xchg
ret
cmp
inc
sub
adc
mov
jns
icebp
xor
push
aad
dec
icebp
aam
bound
pop
enter
dec
inc
fcoml
pop
jae
or
mov
dec
sbb
es
int
mov
push
shl
xor
dec
inc
loop
ret
xchg
dec
ja
mov
lret
cld
pop
xor
fcmovnb
pop
adc
mov
add
mov
xchg
dec
dec
inc
fisttps
mov
iret
jns
lods
push
enter
movsb
in
ljmp
ficomps
add
in
sub
lret
scas
das
add
test
loope
sahf
push
mov
outsb
xchg
or
inc
rclb
pop
dec
pusha
mov
aas
mov
sbb
aaa
inc
inc
iret
je
inc
fnstsw
movsl
push
xchg
and
icebp
xlat
xor
scas
out
jns
adc
xchg
xchg
mov
cmp
push
mov
movsl
xor
jns
in
outsb
pop
xchg
cmc
cltd
mov
add
pop
push
adc
push
cmpsl
mov
add
add
mov
pusha
mov
mov
mov
fldenv
jmp
test
repz
adc
outsl
sub
xchg
and
std
js
pushf
aam
jnp
add
enter
cmp
test
outsb
push
xor
movsb
mov
out
xor
loop
in
in
gs
inc
xchg
in
fs
and
xchg
fiadds
mov
pop
movsb
inc
or
cltd
into
imul
movsl
notl
push
inc
ja
mov
addr16
mov
shrd
stc
lock
adc
jns
and
dec
pop
imul
sub
mov
fwait
out
dec
lea
fisttpl
mov
test
mov
clc
jb
add
test
loop
push
mov
addr16
xchg
push
stos
adc
arpl
gs
rclb
mov
xchg
jno
push
jmp
xchg
ret
pop
lea
fstpl
mov
cwtl
xchg
xchg
mov
sti
cmc
cmp
push
cmp
ds
clc
jnp
stos
inc
notl
inc
mov
push
out
inc
int
mov
push
comiss
add
pop
pop
add
outsb
paddd
stos
icebp
jae
adc
sub
lahf
inc
dec
jbe
in
dec
cltd
pop
pop
fwait
rorb
mov
pop
cmp
adc
add
pop
pusha
push
jl
jae
and
scas
in
push
inc
mov
lcall
loopne
out
cmp
cmp
push
mov
dec
xchg
das
push
pop
lods
stc
mov
jmp
cmp
xchg
insb
mov
ret
out
std
lcall
add
xor
mov
lret
out
subl
sub
xchg
sbb
stc
xchg
jae
adc
mov
in
outsl
jecxz
mov
inc
jb
cmpsb
les
aam
jp
rolb
sbb
or
cmp
cmp
mov
mov
xor
nop
adc
jns
or
sti
jmp
es
pop
add
push
mov
jo
mov
mov
push
repnz
and
pop
xchg
dec
test
xchg
mov
outsb
xor
push
icebp
xchg
mov
rorb
or
jnp
aad
jp
lods
into
cmp
lods
js
jecxz
xchg
jnp
pop
mov
jl
insb
adc
and
xor
les
cld
test
xchg
fsubl
push
sbb
or
jl
insb
adc
and
xor
les
cld
test
xchg
fsubl
push
jl
or
in
add
adc
and
xor
les
cld
test
xchg
fsubl
jo
inc
fs
jl
jl
pop
and
xor
les
ss
orl
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
sbb
xor
jle
push
add
pop
or
add
add
add
pop
or
add
add
add
add
add
add
addb
add
add
add
add
mov
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
dec
add
add
add
add
add
add
add
add
and
arpl
daa
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
addb
add
add
add
pushf
add
add
pushf
add
lahf
add
add
add
add
add
add
add
add
add
push
add
or
test
add
add
incl
fiaddl
mov
add
add
add
add
add
stc
add
add
add
add
add
addl
add
mov
add
add
add
add
add
add
push
add
add
bound
fiadds
add
add
add
add
add
add
add
add
mov
push
add
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
test
add
jl
mov
add
daa
add
add
add
mov
add
in
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
cmp
pop
add
add
add
add
add
in
inc
add
add
add
pop
add
xchg
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
test
daa
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
daa
add
sbb
pop
add
add
add
mov
ss
add
add
add
add
add
add
add
add
add
add
incb
jno
outsl
add
add
add
daa
add
or
pop
add
add
pop
add
add
add
mov
fs
inc
xor
mov
jnp
cmp
pop
cwtl
ds
and
fnstcw
dec
ljmp
push
nop
pop
mov
or
jge
shrl
out
fnstcw
popa
aad
adc
and
cmp
dec
cmc
jno
cmc
inc
test
mov
add
call
adc
cvtpi2ps
add
xchg
jl
lds
and
mov
jne
fistpll
push
shll
loope
ljmp
inc
fcomps
fldenv
pop
aam
xchg
sbb
sbb
sub
leave
jmp
add
cmp
sbb
add
add
scas
push
jp
dec
int
fstps
loope
xchg
mov
rol
cltd
mov
repz
xchg
push
xchg
daa
outsl
mov
cmp
fbstp
mov
pushf
dec
bnd
mov
mov
les
mov
and
push
hlt
mov
cli
mov
mov
pop
call
cmp
push
adc
outsl
push
xor
in
jb
test
cmpl
jle
mov
push
je
cli
in
or
push
jne
xor
mov
mov
loop
push
std
pusha
daa
jmp
xor
jns
lret
lods
sbb
cltd
mov
inc
sub
pop
cmp
clc
xor
cmp
xor
jle
cmp
mov
shlb
fldt
pop
movsl
and
cmp
jle
jo
ret
xchg
clc
mov
xchg
or
int3
mov
loop
xchg
adc
jecxz
icebp
loop
icebp
jecxz
jmp
popa
mov
jl
in
hlt
loope
in
pop
sbb
ja
shll
pop
adc
cwtl
and
mov
mov
fcomp
popl
push
push
sbb
fildl
mov
sbb
dec
lods
xor
fs
pop
sbb
mov
xchg
add
pop
popf
xchg
fs
outsb
js
push
push
add
ja
das
mov
in
xchg
cmp
data16
mov
and
sub
outsl
adc
clc
sub
popf
xor
and
pop
jns
shrl
adc
dec
or
movsl
outsl
cmp
int3
jo
cmp
inc
int3
shrl
mov
cmp
xchg
push
or
movsl
inc
cmp
and
pop
mov
arpl
es
adc
fs
fsin
cltd
loopne
xchg
mov
mov
mov
jmp
std
xchg
push
cld
loop
mov
stc
xchg
test
leave
std
cmpsl
jb
popf
stc
adc
in
lret
mov
into
lods
cmp
mov
xor
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
