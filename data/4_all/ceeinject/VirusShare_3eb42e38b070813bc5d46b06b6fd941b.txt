call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cld
and
stos
fdivrl
ret
xchg
mov
sbb
cmp
pop
insb
imul
cmp
in
stos
fdivrl
lods
jmp
sti
mov
sbb
cmp
aas
sub
sbb
or
cld
sbb
sub
mov
add
sub
dec
imul
sbb
or
cld
mov
and
sahf
insl
out
lahf
clc
outsl
cmp
cmp
mov
nop
cmp
hlt
cs
dec
lds
int
xor
nop
jg
pop
out
aam
rorb
cld
lret
sbb
lock
mov
stos
sub
mov
lahf
fwait
ret
or
aam
lds
jecxz
or
fucomp
fmul
mov
stc
fcompl
dec
dec
jns
mov
pop
jl
loop
sub
push
or
xor
pop
push
scas
arpl
insl
aam
cmp
hlt
pop
imul
jns
adc
fstpl
mov
outsb
push
add
repz
sub
dec
into
ret
pop
fsubrs
or
mov
int3
lret
mov
inc
mov
jl
insb
repz
and
sub
sbb
dec
stc
xchg
in
aas
out
lcall
clc
stc
lcall
xor
and
push
pop
sahf
cmp
mov
jo
mov
xrelease
or
cmp
inc
push
imul
cwtl
fldt
fldt
jl
insb
sub
dec
cmp
sub
sbb
or
cld
fwait
in
stos
fdivrl
lods
jmp
sti
mov
jl
insb
sub
dec
cmp
sub
sbb
or
cld
pop
stc
add
in
xchg
mov
dec
gs
test
pop
in
fists
enter
enter
iret
sub
loope
dec
aas
sub
jge
mov
insl
fdivs
loopne
xchg
inc
jo
loopne
pop
pushw
adc
repz
cli
aam
in
push
sub
mov
imul
mov
mov
jp
adcb
loop
mov
daa
mov
xchg
add
xor
insl
arpl
ret
cltd
mov
cmc
ss
mov
imul
test
xchg
cmp
lcall
outsb
jp
shrl
sub
xchg
push
add
mov
rdtsc
inc
fwait
shll
cmp
imul
daa
lahf
jnp
iret
call
sbb
repnz
xchg
jle
mov
dec
mov
imul
fdiv
push
out
cld
jecxz
lcall
js
jns
outsb
fistl
fcompl
and
cmp
mov
jl
push
jg
leave
sahf
pop
cmp
mov
outsl
out
cmpsl
jecxz
cmp
and
cmpsl
sub
push
test
sbb
pop
insb
mov
mov
push
inc
outsb
dec
fdivs
push
fsubp
lods
xchg
es
pop
lock
repnz
lret
ljmp
sbbl
out
cmpsl
inc
popa
push
negb
mov
cs
shl
adc
out
xchg
inc
jp
ret
xchg
xchg
bound
nop
jle
stc
lret
pop
dec
push
bound
fnstsw
dec
aas
push
cli
popa
add
or
inc
test
mov
or
mov
loope
xchg
cmp
stos
mov
cmpsb
mov
sahf
mov
orl
add
test
imul
enter
push
and
jl
test
jmp
insb
outsl
ja
rol
push
out
mov
jns
insb
adc
loop
pop
mov
mov
repz
test
mov
insl
daa
jg
in
xlat
sbb
mov
sbb
dec
lcall
mov
push
in
adc
rclb
dec
leave
push
add
inc
add
rolb
xchg
mov
fisttps
mov
stos
xor
mov
xchg
sbb
xchg
sub
scas
sahf
add
imull
adc
es
pop
mov
and
dec
push
mov
inc
inc
lea
ret
iret
int
cwtl
cli
pop
sbb
sbb
icebp
cmp
in
cmpsb
cwtl
gs
les
sub
add
stc
je
dec
mov
outsl
movsl
bsr
dec
mov
xor
inc
out
mov
jo
jmp
mov
jne
sahf
push
int
adc
aad
xchg
pop
jbe
fstp
mov
cld
sbb
pop
pop
inc
cmp
cmp
jne
insl
pop
jl
popa
mov
outsb
jp
mov
push
adc
mov
sub
push
mov
iret
pop
jns
imul
jns
lods
cli
loop
adc
cmp
inc
or
int3
sti
mov
addl
cmp
lcall
shlb
add
iret
ds
xor
adc
cli
movsl
push
in
testl
je
lock
jb
push
push
adc
cltd
and
scas
and
lret
test
out
xchg
addr16
test
add
push
xor
lahf
and
fdivl
aas
ret
roll
shlb
daa
cmpsb
loopne
adc
orl
leave
test
je
stc
mov
in
xchg
js
outsb
addl
call
test
int3
insl
jnp
nop
rolb
and
jp
mov
cltd
push
enter
mov
imul
fimull
mov
jns
pop
xor
bound
push
push
lock
push
sub
or
out
imul
sbb
mov
push
push
cwtl
mov
mov
div
pop
popa
dec
mov
mov
xor
ds
add
out
rorl
sub
ret
cld
xchg
sbb
xchg
push
aam
sahf
das
je
push
cmp
sub
pop
jge
sub
out
std
nop
push
dec
mov
jle
popf
jbe
js
xchg
pop
cltd
cmpsl
fwait
test
lods
dec
pop
xchg
mov
movsb
in
insl
ss
sub
inc
and
popa
or
add
inc
sbb
aad
push
sarl
mov
or
hlt
fsts
inc
dec
das
xor
sbb
adc
sbb
inc
cs
sahf
jae
push
cmp
aas
inc
mov
add
in
jns
or
mov
push
insl
mov
mov
sti
and
das
movsb
xor
sahf
inc
jmp
mov
test
jg
dec
ror
imul
xchg
jp
push
cmp
mov
or
nop
xor
pop
imul
cmp
mov
jae
lea
fmuls
mov
lret
push
jle
icebp
fimuls
adc
pop
sti
sub
pop
dec
stc
sahf
jle
outsl
pusha
lret
mov
add
fldcw
push
push
cmp
dec
sub
dec
ffreep
das
pop
out
ljmp
repz
push
fs
ret
aad
fidivrl
cmp
xor
sbb
rcrb
mov
or
iret
insb
xor
sti
inc
out
mov
xor
mov
outsl
movsb
mov
jnp
sbb
lret
or
mov
xor
loop
adc
xchg
cmpsb
testl
mov
pop
jns
out
sarl
pushf
out
sahf
cli
outsb
call
pop
sub
outsb
jl
je
pop
fisubrs
push
push
loope
jne
add
test
js
sbb
js
mov
shrb
fidivrl
jnp
std
lods
or
mov
mov
and
stos
jmp
jae,pn
in
mov
cmp
pop
fwait
std
jle
inc
xor
add
pusha
sbb
ret
dec
daa
push
and
push
call
pop
out
out
and
mov
outsl
dec
jno
jo
orb
push
jl
fsubrp
adc
cltd
inc
pop
jns
nop
cmp
dec
pop
cmpsb
pop
popf
xor
rorl
mov
mov
dec
sub
mov
lcall
cmp
loopne
push
jle
mov
inc
stc
cli
sub
push
and
fistps
stc
dec
jge
xchg
bound
push
jns
in
in
mov
push
xor
push
mov
aaa
dec
mov
lods
cmp
xchg
xor
dec
loop
repz
insl
repz
in
in
ret
test
adc
gs
pop
or
insl
loop
je
pushf
push
loop
cmp
movsl
addr16
cmpsb
nop
insl
stos
add
cltd
pop
and
inc
mov
ss
dec
mov
jecxz
inc
mov
cmp
mov
dec
jbe
fisttps
cs
pushf
in
jle
mov
xchg
test
shlb
adc
xlat
icebp
mov
jbe
inc
insb
movsl
jbe
dec
das
lds
cli
cmp
push
pop
pop
mov
xchg
clc
push
dec
add
js
cmp
push
ljmp
in
movsb
mov
or
and
inc
lods
adcl
pop
pusha
mov
cld
faddl
ss
mov
sysexit
push
dec
scas
repz
data16
pushf
stos
and
xor
fcmovb
dec
and
outsb
pop
data16
iret
cmp
dec
and
xor
xor
add
lock
push
pusha
jne
mov
push
and
fcoml
mov
xlat
sti
add
adc
sbb
cmp
cmpsl
loop
push
loope
dec
faddl
dec
dec
hlt
sbb
scas
dec
push
test
fwait
test
jne
fnstsw
xlat
cmp
mov
mov
push
into
inc
lea
add
insl
sahf
mov
push
push
insb
inc
test
mov
insl
jmp
inc
loopne
dec
xor
or
mov
and
orb
shlb
and
pushl
lret
or
loopne
test
or
push
pop
test
jne
mov
adc
out
xchg
push
mov
ljmp
mov
jb
adc
cmp
call
dec
in
aam
and
xor
ficomps
mov
push
xchg
mov
dec
xchg
push
std
ror
iret
cld
shrl
test
mov
in
ficompl
jae
out
scas
into
in
out
adc
sub
mov
jecxz
enter
in
gs
ljmp
adc
faddl
subb
mov
roll
nop
dec
xchg
or
sbb
pop
add
into
aaa
mov
cmpsb
loop
out
call
fnstenv
and
xor
or
js
ret
lods
cmpsl
inc
jl
inc
lea
add
xor
mov
push
andl
mov
mov
push
mov
js
mov
mov
cmc
push
dec
sbb
mov
or
clc
xchg
mov
stos
out
jnp
jo
aaa
cmp
adc
in
sbb
aam
in
pop
call
test
bound
arpl
fstl
jae
fstpl
xlat
loopne
into
jb
cli
leave
adc
shll
sbb
dec
or
test
fnstcw
adc
loopne
int3
jle
cltd
pop
stc
inc
add
cs
paddusb
testb
cmpb
mov
pusha
and
bnd
sbb
fsubs
xor
mov
sahf
cmpsb
adc
sbb
insl
imul
mov
in
repz
lahf
inc
mov
arpl
ja
push
pop
adc
in
aam
in
add
push
movsl
lods
push
xchg
in
outsb
cld
xchg
in
adc
jge
mov
ret
push
mov
pop
mov
push
adcb
sbb
and
insb
iret
sub
push
das
dec
cltd
in
jnp
cs
push
mov
dec
lds
or
adc
sub
push
outsl
lret
sub
das
popa
sbb
int
jl
xchg
cmp
rcrb
add
adc
adc
inc
pushf
sub
test
rolb
mov
xchg
push
leave
hlt
mov
nop
dec
cmc
dec
mov
lds
iret
stc
dec
sub
inc
pusha
add
adc
pusha
mov
lret
cwtl
leave
icebp
mov
xor
jp
pop
cs
imul
mov
pop
repz
pop
pop
pop
test
test
cmpsl
xor
icebp
cwtl
int3
add
push
pop
js
xchg
loop
push
or
cmpsl
xor
fidivs
mov
scas
fsubr
add
sahf
mov
ss
movsb
and
rcr
or
daa
sbb
pop
sbb
add
lock
or
adc
setno
push
jbe
stc
jns
fsubs
or
out
xor
and
stos
mov
movsb
mov
jae
daa
and
movhps
nop
add
cmp
xchg
cltd
mov
aas
rcrl
cmpb
push
and
add
cmp
jnp
outsl
ja
inc
dec
cmp
mov
pop
sbb
dec
rcrl
jo
fidivs
and
lods
imul
mov
pushf
mov
sub
adcl
jo
push
test
dec
dec
push
add
bound
rol
sti
scas
sbb
ja
add
jns
lahf
dec
and
shl
in
xchg
xor
jb
jae
aad
push
or
xchg
and
pop
or
add
cld
fsubl
push
adc
xor
and
and
lcall
out
fdivrs
cmpsb
mov
jae
fsubrl
xchg
inc
jg
or
cmp
mov
push
mov
pusha
dec
inc
test
cltd
xchg
ret
mov
pop
xchg
and
sub
addr16
lods
ss
arpl
sbb
xchg
out
aas
and
push
imull
sbb
and
mov
arpl
xchg
popw
cmp
xchg
cwtl
sbb
and
mov
dec
mov
mov
lds
pop
xchg
dec
pop
xchg
adc
lods
in
popf
fildll
cmp
push
addl
mov
divl
int
sub
fildll
test
or
aaa
add
popf
or
ljmp
xor
jbe
out
push
popl
xor
imul
sbb
jmp
mov
or
sbb
out
das
lods
lret
ss
pop
mov
sbbb
sub
inc
mov
pop
shlb
pop
cld
jne
or
fidivrl
enter
sbb
test
pop
jl
mov
or
pop
ljmp
dec
mov
jnp
push
jl
add
sbb
xor
or
sbb
cmpsb
repnz
test
shrb
cld
add
sub
jg
jns
nop
data16
cmp
xor
mov
notl
add
xor
imul
sub
sti
jl
xchg
sbb
push
push
sbb
push
adc
pop
mov
cli
lcall
jne
inc
jno
and
in
scas
jmp
cmp
sub
imul
movsl
loopne
inc
ret
jnp
cmp
imul
sbb
repz
fcompl
and
bound
lret
or
mov
pop
aas
xor
or
sbb
out
jle
mov
xchg
sub
pop
lret
mov
aad
js
mov
insl
enter
add
mov
pop
and
int
dec
adc
cmpsb
icebp
pop
cmp
ss
iret
add
insl
pop
mov
outsb
test
repnz
inc
imul
dec
sbb
xchg
stos
loope
subb
push
sahf
js
jle
out
sbb
cmpsl
aam
adc
jmp
rcl
mov
mov
popf
sub
in
mov
lahf
aas
ja
jle
into
lahf
pop
fnstenv
xchg
sbbb
inc
pushaw
pushf
pop
push
add
idivb
mov
cmp
pushf
imul
out
or
jb
and
popl
xor
sbb
or
add
pop
pushf
test
adc
mov
and
es
rcrb
and
icebp
push
sbb
das
pop
xchg
jne
push
test
test
dec
mov
popl
xchg
jns
cmp
insl
pop
in
jecxz
add
cmp
scas
and
mov
test
xchg
test
push
jp
cmp
jge
mov
adc
inc
or
xchg
mov
mov
sarb
test
xchg
mov
mov
jae
mov
repnz
xor
jnp
cld
and
inc
dec
add
xchg
mov
mul
dec
icebp
loope
pop
sbbl
lret
and
fcoms
fcoms
mov
mov
cmp
sbb
dec
xchg
and
xor
pop
lret
iret
pop
enter
into
inc
std
fwait
js
or
gs
add
stc
bound
movsb
or
popa
stos
mov
push
js
test
std
mov
lahf
cmp
add
in
inc
mov
mov
mov
sarl
stc
push
scas
dec
mov
movsb
addb
je
xchg
mov
je
pop
push
push
sbb
in
cmc
push
xchg
mov
dec
clc
mov
pop
and
fxch
push
mov
in
mov
sub
mov
dec
in
sub
popf
sbb
fidivrs
xor
push
push
xor
or
and
scas
fimuls
mov
pop
xor
jp
inc
push
xchg
std
popa
and
mov
sub
lahf
lds
testl
out
sub
out
xchg
inc
inc
fdivrs
arpl
inc
pop
xchg
scas
dec
mov
rorb
ror
test
repnz
add
mov
lods
das
repz
pusha
push
sub
xchg
out
and
gs
ja
xorl
adc
pusha
enter
fcomip
mov
hlt
sarb
mov
xor
rdpmc
lret
aad
ret
test
inc
add
icebp
test
clc
das
jmp
cmp
mov
mov
fs
repz
in
mov
mov
ss
and
movsb
cmp
out
sub
test
repnz
adc
mov
push
lret
add
jns
adc
mov
sarl
push
ret
add
ror
mov
out
daa
and
rorl
ret
test
push
sbb
test
daa
mov
xor
push
and
fisubs
enter
mov
hlt
pusha
test
adc
nop
push
push
add
aad
cmp
mov
sub
pop
aad
gs
push
mov
sbb
cltd
push
aaa
loopne
fldenv
or
cmp
es
outsb
sti
lea
fcoms
fildl
sahf
scas
mov
out
loopne
imull
pushf
jnp
lock
sahf
jns
clc
ss
cld
imul
scas
sub
add
and
sub
pop
sbb
xor
push
cmp
xor
push
or
test
inc
mov
jbe
inc
sub
or
aaa
add
sbb
out
sub
nop
and
inc
nop
pusha
xchg
lods
rolb
bound
cltd
adc
loop
test
jb
xchg
movsb
adc
cmpl
dec
ret
or
fistps
int
scas
cltd
in
insl
ss
or
cld
dec
popa
fisttpl
push
pop
mov
jp
dec
push
cltd
xchg
fwait
sbbb
test
incb
adc
sbb
in
mov
adc
xor
inc
adc
bound
mov
loopne
nop
std
pop
sub
ret
frstpm(287
pop
fstl
fs
jbe
lea
xchg
fs
cmp
ret
popf
xchg
addr16
inc
test
xchg
loopne
sti
rcrl
nop
mov
int3
dec
push
mov
lods
adc
jmp
loope
push
xchg
das
orl
mov
xor
aad
mov
inc
pop
xlat
lods
in
jb
gs
or
into
inc
js
dec
pop
push
scas
lods
negb
rclb
xor
pop
add
xlat
cmovp
sti
ret
xor
repnz
inc
mov
sub
fldt
jmp
and
pop
imul
jp
aam
das
lods
adc
xor
add
mov
pop
data16
cmc
cs
jp
cmp
aaa
push
mov
push
xlat
cmp
pop
mov
ds
inc
and
in
test
shll
push
ret
iret
xlat
jmp
stc
add
pop
pop
imul
rcll
hlt
bnd
mov
rorb
nop
sbbb
je
aad
movhps
out
push
scas
fisubl
xor
xor
in
lea
sub
and
pop
fisttps
push
jl
or
xchg
mov
ret
sub
sarb
fmuls
xor
in
shl
and
inc
in
lods
jnp
cli
pushf
sub
lret
outsb
movsl
xor
aam
dec
mov
jnp
cmc
loop
mov
out
lret
sub
lock
loope
or
jae
inc
pop
xchg
loop
sti
icebp
pusha
shlb
imul
xor
mov
stos
xor
xchg
sbb
sub
ficompl
das
mov
int3
cltd
lret
mov
mov
push
adc
rclb
cli
popf
into
push
pop
dec
fwait
test
adc
out
mov
add
sbb
jmp
sbb
enter
call
fsubl
jo
jmp
mov
mov
jg
pop
mov
pop
jo
jg
pop
mov
adc
insl
mov
and
jp
negl
push
or
bound
pusha
push
das
pop
popl
and
popa
aas
cmp
mov
nop
fidivs
push
adc
lods
cmp
sbb
in
dec
loope
jl
out
xor
pop
dec
test
mov
jnp
mov
fsubr
mov
adc
movsl
stc
mov
inc
mov
sub
xor
xor
adc
lcall
fwait
xchg
insl
lea
lcall
test
rclb
rclb
xor
mov
test
movsl
xorb
and
sar
stos
decb
into
and
cld
push
jge
jbe
cmp
and
shll
imul
aad
imul
sbb
stos
sub
fnstenv
mov
xor
and
lds
loop
add
sub
fs
fwait
hlt
mov
add
jle
push
push
mov
mov
xor
dec
sub
mov
xchg
and
jno
dec
lret
jle
mov
push
aas
cli
jo
mov
pop
roll
dec
movsl
cmp
jno
in
test
int3
lret
mov
sti
mov
jl
insb
sub
dec
cmp
sub
sbb
or
cld
fwait
in
stos
fdivrl
lods
jmp
sti
mov
jl
insb
sub
dec
cmp
sub
sbb
or
clc
cwtl
in
mov
mov
cli
mov
jl
insl
and
dec
cmp
dec
or
cld
mov
and
xchg
enter
sub
sbb
jae
and
sbbl
xchg
jecxz
repz
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
pop
cmpsl
daa
xchg
aaa
xchg
and
lret
jns
daa
cmpsl
pop
mov
ja
addr16
out
arpl
aaa
xchg
push
out
xlat
ja
xchg
xchg
daa
pop
mov
xchg
xlat
addr16
testl
xchg
out
xchg
aaa
out
xlat
ja
jecxz
mov
iret
shlb
and
xor
les
daa
lcall
inc
xlat
push
loop
pop
pop
dec
rcl
push
clc
fidivrs
jg
xor
ja
fdiv
sbb
in
das
cmpsl
lret
mov
imul
cli
int
inc
jecxz
and
dec
arpl
ja
scas
out
or
stc
mov
stos
push
std
and
outsl
and
xchg
shll
stos
mov
mov
xlat
bound
fcomi
jg
ret
sarb
mov
xchg
fsubs
xchg
dec
out
ja
cltd
out
testl
stos
or
mov
adc
cmpsl
call
xlat
addr16
push
sti
mov
es
mov
filds
mov
xchg
je
out
inc
adc
test
push
hlt
push
pop
mov
cmpsl
daa
xchg
aaa
xchg
xlat
rol
inc
aaa
or
pop
ja
addr16
imull
outsb
mov
out
xchg
dec
xchg
xchg
cmp
xchg
es
jae
xor
add
shlb
push
repnz
xchg
fwait
xor
loopne
lds
inc
iret
bound
add
out
inc
in
loop
fsts
xlat
ja
xchg
xchg
daa
cmpsl
pop
mov
ja
addr16
testl
xchg
aaa
xchg
push
out
xlat
ja
xchg
xchg
daa
cmpsl
pop
mov
ja
addr16
testl
jp
inc
mov
aad
out
fisubs
push
pushf
bound
xor
ds
push
imul
shrb
jb
or
mov
pop
sbb
jbe
xor
mov
shr
xchg
jns
inc
cltd
sbb
or
cmp
cltd
arpl
ss
repnz
sub
loope
pop
fstpl
cmpsl
xlat
jp
ja
enter
aas
js
cmpsl
jo
jp
inc
jp,pn
iret
inc
adcl
cld
mov
rol
mov
addb
pop
aas
lods
pop
push
movsl
fs
gs
mov
lret
mov
xor
xchg
mov
iret
loopne
jae
js
cmp
cmp
popf
inc
or
pop
test
sti
jge
shll
dec
jl
mov
pusha
sbb
movsl
inc
mov
sti
mov
dec
mov
scas
test
movsb
int
cmp
pop
lods
scas
popa
fiadds
inc
xlat
xor
outsb
lcall
mov
pop
jmp
push
xchg
xchg
jg
push
jne
scas
jne
or
mov
test
sbb
inc
mov
cmp
stos
jns
pop
test
call
lods
dec
in
push
jmp
mov
in
push
nop
push
or
in
imul
mov
orl
mov
ss
imul
into
jle
cs
out
dec
inc
cmp
pop
mov
es
mov
inc
xor
fnsave
mov
sti
push
test
stc
sbb
mov
inc
pop
jp
out
test
xchg
fcomp
pushl
int3
cmp
mov
hlt
cmpsl
jmp
mov
lock
sahf
sub
mov
pop
out
ficomps
fldcw
dec
popf
cmpsb
fidivrl
les
mov
xchg
xchg
lock
cmp
adc
jb
and
int
pop
jge
adc
cmp
ret
jne
pop
and
ds
in
inc
sub
mov
and
cmc
imul
jle
stos
sbb
scas
xchg
lock
mov
jne
lock
sbb
xor
fcmovnbe
repnz
lret
or
repz
fildl
mov
negl
adc
test
jno
cmp
out
jbe
aaa
jo
int3
mov
mov
xor
scas
add
sub
ret
pop
add
in
xchg
and
sbb
imul
or
or
push
xchg
imul
or
push
mov
jbe
pop
int3
test
cmpsb
sub
fwait
push
inc
jmp
jmp
test
addr16
adc
push
dec
mov
dec
xchg
xchg
popf
jne
dec
mov
icebp
or
mov
push
hlt
and
pmullw
int3
int
mov
pop
fwait
pop
jbe
call
adc
mov
cmp
mov
mov
test
ret
jg
pop
adc
psubsb
xchg
in
icebp
shll
rorl
push
loope
out
lea
sar
lret
jae
dec
gs
dec
les
popa
adc
mov
fs
leave
adc
pop
test
inc
mov
scas
sub
dec
sub
fcom
insb
sbb
repnz
ficompl
test
and
std
loop
ja
jmp
push
inc
sub
getsec
out
mov
mov
push
iret
testl
pop
repnz
test
xor
stos
fcompl
mov
mov
sub
xchg
jmp
jae
das
mov
jbe
andb
sub
sbb
aad
sub
cmpsl
stc
inc
daa
pop
int3
pop
pop
stos
mov
pop
xor
mov
sbb
or
rcll
adc
cmp
xchg
in
sub
pop
pushf
cmp
adc
icebp
jmp
inc
dec
pushf
enter
sbb
pop
idivb
jg
je
add
inc
push
mov
aaa
and
pop
pop
aaa
sub
push
adc
mov
js
mov
shld
sub
mov
outsl
hlt
inc
outsb
aas
in
js
std
in
xchg
fisubs
sti
addb
lret
out
cmp
push
xchg
repnz
mov
rcl
mov
orb
push
mov
xor
pop
adc
gs
dec
ficomps
xor
mov
cli
test
dec
inc
lret
push
add
lods
sbb
icebp
outsl
stos
sub
out
push
aaa
in
clc
arpl
test
out
mov
jbe
mov
stos
sub
lret
ljmp
lret
cli
out
xor
jp
jp
mov
jl
mov
rolb
lods
test
xchg
fcoml
sbb
jae
cmp
inc
dec
mov
cmpsl
dec
jg
mov
pop
dec
push
or
inc
out
mov
jo
insb
dec
out
push
xchg
sti
cmc
fcoms
fs
iret
xor
jp
sbb
fildl
jnp
ret
or
inc
cmp
insb
dec
dec
xorb
push
cs
push
mov
cmc
lea
ja
into
mov
pop
test
int3
in
adc
lea
repz
push
cltd
cs
push
jne
adcb
je
mov
outsb
cmpsb
xchg
cmc
out
lds
stos
and
fnstenv
sub
popf
sbb
dec
mov
mov
push
and
mov
mov
mov
insb
mov
xchg
pop
int3
clc
pop
mov
mov
popa
bound
or
daa
mov
lret
loopne
lock
push
lods
jp
pop
sbb
scas
xchg
ja
movsl
xchg
andb
mov
cmp
imull
js
lahf
shr
push
or
es
dec
divb
xlat
mov
out
stos
nop
sahf
arpl
dec
push
iret
out
cld
out
jl
jae
adc
xchg
xchg
mov
add
lds
rcll
repz
out
mov
xchg
adc
cwtl
ds
add
sti
fs
xor
ret
testb
popl
test
out
xor
iret
cmpsb
dec
push
mov
out
in
jnp
push
dec
in
pop
mov
jge
rolb
jmp
sub
push
ljmp
shlb
mov
insb
addr16
mov
push
test
mulb
int3
int3
fistpl
mov
fisttpll
sbb
dec
jle
pop
or
stc
push
movsl
aas
test
mov
sarl
mov
jns
mov
loopne
and
mov
mov
das
xor
mov
icebp
test
std
clc
sub
negb
rcrb
mov
movsb
in
adc
push
pop
mov
stos
push
push
xchg
in
push
sub
and
jecxz
imul
ja
xchg
inc
sbb
inc
loopne
jne
data16
sub
push
movsb
jl
adc
xor
lds
fistl
mov
jns
pop
insb
popf
mov
and
push
out
test
arpl
into
xor
mov
popf
clc
sbb
xchg
jo
cmpb
pushf
mov
insb
jae
cmp
stc
cmp
into
pushf
xchg
mov
jno
int3
ss
sub
popf
push
mov
xchg
jle
jb
adcl
pop
jecxz
imul
orps
lock
inc
sahf
sub
jns
cmpsl
cmc
lods
jns
mov
out
stos
or
add
ja
lret
fsubl
sbb
sbb
test
bound
lcall
arpl
out
sbb
das
stc
jo
loop
pop
insl
push
xchg
sbb
push
popf
jnp
cltd
push
push
pop
jle
out
aas
cltd
jno
adc
lods
add
popa
clc
cmp
mov
mov
enter
rcr
mov
cltd
shlb
sbb
aaa
lret
cld
testl
push
sub
outsl
inc
jb
ljmp
stos
or
js
inc
shll
mov
out
sarl
push
mov
sbb
cmp
mov
imul
jp
out
adc
pop
add
mov
jle
pop
cmpsb
mov
fucomip
xor
cmp
sbb
int3
enter
rol
mov
scas
psubd
jecxz
xchg
jecxz
xchg
movsb
clc
cmp
ss
out
mov
lret
stc
jl
fists
pop
pop
pop
pop
mov
ds
into
and
cld
repz
pop
or
popf
or
int3
push
gs
repz
adc
push
jb
cld
cs
or
call
xchg
xchg
push
and
loop
test
insl
gs
mov
dec
pop
lods
or
stos
adc
cld
stc
daa
push
pop
sbb
ljmp
sbb
es
repz
pop
outsl
repnz
int
add
je
pop
or
adc
mov
xchg
push
xlat
call
es
sbb
sub
lods
fcmovb
loop
pop
inc
pop
lods
sbb
mov
and
lock
inc
scas
cmp
inc
inc
mov
test
insb
push
push
test
lret
jb
cmpl
push
ret
orb
mov
pop
out
in
pusha
sbb
dec
fildll
loop
repz
inc
sub
sarl
test
mov
xorl
xorb
mov
insb
in
bound
fwait
adc
inc
dec
xchg
jbe
or
mov
mov
xor
repz
adc
mov
das
dec
and
pushf
fimuls
leave
popl
imulb
pusha
push
fmul
and
mov
aas
outsl
imul
xchg
or
dec
add
in
stc
sbb
or
stos
insl
outsb
inc
or
xor
cli
jecxz
add
add
ss
mov
mov
pop
bound
jbe
and
lods
std
insb
xor
mov
and
lret
mov
in
mov
repz
mov
mov
loopne
sbb
outsb
insl
aad
js
into
bound
pop
pop
test
sub
cmc
clc
cs
rclb
pop
adc
sub
ss
pop
ds
jle
test
and
jmp
orb
out
add
fmull
push
and
outsl
mov
lcall
add
pop
mov
pop
out
xor
pop
pop
scas
sahf
xor
push
cmp
dec
or
mov
jno
inc
pop
out
ret
pop
les
into
insb
jp
push
stos
loopne
jbe
or
mov
jo
in
cmp
sub
and
add
stos
stc
adc
in
add
flds
js
popf
mov
ljmp
and
sub
aaa
and
bound
in
mov
push
sbb
and
in
setl
mov
adc
mov
pop
sbb
test
cwtl
aad
or
push
out
xlat
push
test
sbbl
add
push
pushf
dec
rorb
sub
pusha
jmp
jo
jne
adc
fisubl
xorb
loopne
jge
int3
insl
imul
pop
pop
xchg
sbb
add
dec
or
std
mov
mov
mov
test
sti
testl
jge
mov
into
adc
pop
lret
fists
jb
testl
aad
in
pusha
jo
in
lock
jnp
fcomps
bndldx
sub
adc
loopne
sahf
and
adc
cs
sub
in
jo
mov
sbb
xchg
fbld
sbb
adc
lahf
xor
mov
aas
lret
xor
stos
int3
inc
fidivrs
add
add
jle
movsb
lret
xchg
scas
pushl
inc
cwtl
loop
inc
cmpsl
aaa
xor
repnz
imul
aam
mov
mov
sub
dec
add
and
sti
sbb
mov
pop
std
add
jg
sub
jmp
in
rcrb
sbb
test
pop
int3
xchg
popa
pop
mov
fiadds
in
lahf
jmp
xchg
adc
jge
mov
push
lcall
pop
std
mov
mov
scas
cmpsl
scas
ss
pushf
push
jnp
jg
mov
lret
and
int
fistl
cmp
divb
add
jl
mov
pop
or
jge
xorb
leave
adc
dec
mov
adc
and
daa
mov
jp
test
push
and
cltd
or
fdivl
push
adc
or
jg
and
mov
inc
adc
mov
jae
pushf
jecxz
mov
xchg
lret
cmp
outsb
aam
dec
inc
decb
shrb
fmulp
mov
push
push
cwtl
xchg
push
inc
jl
cmpsl
jmp
pushf
das
lods
stos
pusha
lds
mov
push
sti
mov
fs
mov
loope
adc
loopne
ja
push
adc
jbe
loopne
movsb
mov
or
iret
or
dec
push
cmp
sub
push
xor
xorl
jns
pop
mov
dec
sub
pop
push
add
insb
dec
shlb
stos
sub
into
in
mov
push
cmp
xor
lods
es
shrl
xor
cmp
stc
shlb
sbb
test
cmp
mov
mov
fmuls
adc
js
sbb
xchg
pop
mov
xor
outsb
inc
and
inc
jo
mov
push
mov
out
stc
insb
push
inc
iret
ss
inc
imul
pop
jnp
push
and
cmp
push
push
mov
jne
xstore-rng
cmpsl
add
out
push
sub
lret
adc
sub
xchg
cmc
cmp
cmp
sub
jle
adc
xchg
clc
xor
out
xchg
push
add
js
mov
adc
mov
or
out
or
pop
stos
mov
jae
pushf
fwait
xor
add
jb
mov
or
jb
jl
pop
inc
insl
adc
mov
pop
sub
push
jp
daa
leave
mov
cmp
insl
data16
lods
jl
pop
imul
push
stos
aas
shll
push
add
sub
push
loop
loopne
imul
int
or
sub
fnstsw
add
pop
sbb
xor
sub
int3
jb
neg
fcomps
std
dec
dec
imul
cwtl
popa
rorl
gs
or
sbb
lahf
mov
jge
lods
jbe
dec
and
dec
sub
loope
and
dec
adc
cwtl
dec
imul
scas
dec
pop
sbb
out
lods
push
loop
inc
xor
xor
mov
fsubs
jnp
popf
lret
mov
divl
jno
shl
movsl
mov
ficompl
mov
add
jbe
in
scas
mov
xorl
dec
push
movsl
outsb
add
mov
inc
iret
aaa
scas
movsb
inc
inc
hlt
jmp
push
stos
out
pop
or
pop
pop
push
fdivrp
mov
xchg
push
je
mov
push
cmpsl
fcomip
inc
mov
mov
xchg
jmp
sub
imul
pusha
loopne
dec
mov
xor
fbstp
imul
pushf
popa
shll
out
ret
inc
jb
test
adc
outsb
cmpb
mov
stos
gs
xorb
test
pushf
add
jae
or
mov
mov
pop
push
push
lret
jge
int
xor
lods
xchg
pop
shll
out
repz
inc
adc
hlt
inc
pop
lea
out
sbb
test
sbb
jge
jmp
or
arpl
adc
mov
jnp
inc
cmp
scas
mov
pop
xchg
adc
jbe
nop
jl
mov
sti
mov
or
fdivrl
mov
xchg
das
inc
sub
xchg
scas
fsubs
popa
add
xchg
push
fstps
in
pop
ja
inc
mov
mov
stos
push
cmp
xchg
adc
inc
aas
pop
popf
push
xchg
xor
loopne
mov
mov
sti
repnz
xchg
add
movsl
shll
jo
push
inc
scas
dec
push
or
mov
xor
fistps
sub
pop
dec
nop
fistpll
fstps
xor
mov
pushf
mov
or
nop
cmpsb
movsl
lret
test
push
xor
lods
lret
fnsave
stos
xchg
mov
pop
mov
dec
mov
adc
mov
sahf
dec
sti
mov
or
popf
insl
mov
dec
xor
or
rorb
lea
mov
cltd
in
imul
in
js
xor
xchg
lret
pop
imul
enter
mov
mov
pop
je
test
xchg
adc
cmp
push
sbb
sbbl
mov
scas
cmpb
pop
inc
out
ljmp
xchg
aaa
jle
cmp
divb
test
les
cmp
dec
sbb
mov
mov
out
xor
jge
stc
adc
push
cmpsb
mov
icebp
jno
lods
cltd
jg
jno
jno
cs
or
xchg
lret
pop
mov
pop
pop
and
cld
clc
mov
repz
aad
inc
and
xchg
cmpsb
dec
push
jmp
push
lods
loop
inc
outsl
shl
les
arpl
jb
testb
popa
lahf
in
mov
test
push
jp
adc
in
stos
dec
add
push
std
jp
insb
aas
cmpsl
js
mov
lcall
xor
inc
add
iret
mov
mov
ret
popf
or
insb
in
add
loop
fwait
js
ret
jnp
add
adc
push
pop
decb
mov
dec
cmpl
aas
insl
inc
push
cmp
cli
into
cs
dec
add
or
ss
and
fstp
cmpsb
loope
dec
inc
rolb
cltd
sub
xchg
fisubrs
fnstcw
fcompl
mov
fwait
sub
in
out
lock
add
mov
pop
or
maskmovq
rcrl
hlt
loope
push
or
rorb
sbb
push
add
sub
shlb
aam
arpl
pop
enter
in
jns
pop
mov
mov
mov
test
les
mov
jg
adc
lock
movsl
dec
and
jp
adc
cmp
push
loopne
pop
stc
xor
mov
jno
aad
addb
pushl
cltd
sbb
lret
sbb
arpl
xor
mov
imulb
leave
mov
xor
mov
push
xchg
cmp
jo
mov
jno
dec
jmp
add
mov
ss
and
xor
shl
aad
outsb
xchg
mov
push
pushf
stos
bound
orb
pop
sbb
mov
pop
mov
shrl
mov
dec
mov
loopne
adc
jne
test
fisttps
adc
loopne
add
dec
lods
call
sub
dec
mov
iret
aas
ret
imul
and
push
sbb
sbb
adc
sbb
lods
arpl
adc
inc
ds
sbb
mov
mov
fs
rcrl
scas
dec
mov
lods
dec
xchg
add
shlb
jne
sub
add
and
imul
mov
add
push
shll
sbb
sub
cs
les
scas
pop
insb
sub
in
mov
mov
loop
rolb
daa
mov
and
out
jl
lock
mov
mov
push
inc
mov
mov
pushf
jo
jnp
pop
in
or
loopne
incl
push
in
icebp
pop
cwtl
enter
inc
jle
adc
fnstenv
fnstcw
ja
iret
pushf
adc
insb
dec
js
mov
les
sub
mov
outsl
xor
dec
and
test
dec
jae
and
xlat
mov
mov
imul
stos
pop
and
mov
pop
loopne,pt
es
jbe
and
pop
xchg
or
ret
xlat
inc
stos
or
mov
push
ret
scas
push
cmc
in
dec
xchg
out
mov
out
add
divl
push
in
or
data16
push
mov
pusha
add
mov
cmc
push
and
pop
adc
ret
or
arpl
roll
daa
xor
icebp
xchg
repz
push
stos
out
jbe
sub
out
jb
jge
mov
fisubl
cmpl
mov
ss
andb
scas
pop
in
mov
add
aas
lahf
xor
push
loop
mov
inc
fbld
dec
cld
std
jmp
push
lea
push
mov
out
cmp
push
pop
dec
sbb
and
jae
hlt
movsb
leave
jmp
add
sahf
mov
aas
dec
xor
push
jns
xor
in
pusha
pop
sub
cmpsl
mov
mov
mov
in
jno
xchg
sub
fiadds
rorb
gs
mov
mov
inc
enter
add
mov
and
push
mov
xor
sub
xchg
jnp
inc
int3
sbb
mov
sbb
xchg
in
cmp
push
mov
pop
lret
cmpsb
and
aad
xor
fldcw
xchg
aaa
xchg
push
out
xlat
ja
xchg
xchg
daa
cmpsl
pop
mov
ja
addr16
testl
xchg
aaa
xchg
push
out
xlat
ja
xchg
xchg
daa
cmpsl
pop
mov
ja
addr16
testl
xchg
aaa
xchg
notl
xlat
mov
xchg
xchg
daa
push
pop
mov
ja
addr16
pop
inc
adc
pop
xchg
inc
out
xlat
test
or
lcall
sbb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
bound
jb
inc
adc
sub
inc
or
jae
inc
loop
repnz
mov
rcll
and
push
add
jae
arpl
push
adc
mov
ret
mov
rolb
adcb
and
push
add
jae
arpl
push
adc
sbb
mov
lret
mov
mov
jb
xor
bound
inc
and
addl
pand
add
gs
mov
or
mov
or
add
fcompl
push
push
pop
xchg
xchg
lcall
outsl
jl
and
loop
cwtl
pop
cmp
repnz
out
push
dec
daa
es
xor
roll
and
arpl
fdivrl
loop
loop
dec
insb
hlt
rcrl
sbb
sub
dec
popf
roll
fsubrl
xchg
push
cltd
jb
jbe
inc
adc
repnz
push
hlt
shrb
das
jecxz
pop
bound
dec
popf
movsl
dec
faddl
push
repz
std
es
mov
cmp
mov
add
ret
jb
inc
adc
and
arpl
push
adc
mov
mov
mov
rcll
and
jp
push
pop
jnp
addr16
not
mov
xchg
fistl
popa
xor
and
adc
jno
cmp
add
inc
xchg
lock
xor
in
nop
out
lock
xchg
or
jo
jnp
data16
arpl
push
adc
mov
mov
mov
rcll
and
push
add
jae
arpl
push
adc
mov
mov
mov
rcll
push
mov
sahf
fistpll
push
test
push
or
out
movsl
or
pop
cmp
rol
hlt
push
jmp
mov
stc
icebp
jmp
fmulp
je
xchg
inc
mov
adc
push
mov
cmp
loopne
fs
add
add
sub
popa
mov
dec
push
jne
outsb
adc
scas
inc
jbe
dec
das
insb
or
lods
mov
iret
fsubs
adc
xor
ja
mov
mov
in
mov
sahf
repnz
dec
xchg
or
gs
fstpl
xchg
mov
pop
lock
cli
out
pop
mov
jb
jmp
cwtl
jns
inc
and
aam
xchg
aad
push
les
dec
sub
mov
mov
ljmp
cmc
into
pop
pop
sarl
jle
lahf
jb
dec
outsb
dec
jecxz
push
aas
push
leave
pop
jge
lahf
test
pop
mov
push
xchg
mov
adc
aad
pop
dec
and
pop
nop
sub
adc
mov
xor
and
add
mov
inc
mov
lods
frstor
and
fwait
mov
cmp
movsl
inc
pusha
mov
ljmp
dec
sahf
ret
cld
cmpsl
push
outsb
xchg
enter
xchg
in
lock
xchg
loopne
shl
push
push
rol
addr16
push
jmp
cmpsl
jge
dec
adc
scas
scas
inc
cmp
adc
test
shrb
push
into
fdivs
mov
add
xlat
sahf
cmp
mov
gs
gs
and
ljmp
nop
out
fisubs
js
pop
push
inc
mov
lret
inc
mov
cmpsb
aas
pop
pusha
pushf
mov
lcall
movsb
sub
ss
cli
loop
cmp
mov
sub
sbb
push
decl
adc
insb
shlb
sub
mov
fisttps
testb
out
ds
xchg
ljmp
jle
in
push
cld
cmp
mov
jmp
inc
inc
cmp
sarb
xchg
daa
fwait
lock
cltd
mov
pop
in
lds
imul
pop
mov
inc
mov
pop
ja
push
jle
outsl
cltd
cmp
popf
aas
outsb
pop
test
sti
inc
inc
jns
popl
arpl
cmp
jne
jmp
cmp
xchg
pop
out
adc
pop
xchg
lret
add
into
cltd
ljmp
xchg
shll
push
cmp
jnp
movsl
fsubrs
ficoms
faddl
stc
movsl
inc
scas
mov
adc
je
sub
mov
cmpsl
cwtl
xchg
jl
dec
or
mov
cmp
cltd
int3
add
outsb
daa
cs
jae
clc
test
mov
xchg
outsb
fisubrs
shll
dec
jl
cmpsb
jnp
dec
jne
add
in
xchg
jle
cld
out
adc
jno
data16
movsb
int3
dec
cmpsl
mov
or
xchg
xchg
sub
sbb
pop
cmp
fs
iret
lcall
rorb
pop
xlat
mov
sub
aas
mov
and
xor
jl
out
jl
cwtl
ret
jmp
cs
inc
and
fs
mov
pop
sub
hlt
jmp
mov
xchg
orl
pop
popl
jae
push
testb
shrb
and
mov
adc
pop
test
lea
lretw
pop
mov
mov
add
out
sub
dec
jb
xchg
push
or
cmp
push
adc
mov
mov
jecxz
or
add
xchg
clc
push
fs
push
mov
adc
xchg
cli
pop
cmpsl
or
sbbb
aaa
mov
jecxz
loopne
pop
aad
arpl
int
pop
jno
ljmp
cmp
pop
inc
stos
and
push
inc
or
or
or
inc
adc
jmp
stc
dec
ret
fldenv
mov
dec
nop
sub
add
loop
out
lea
loope
lret
out
inc
or
cwtl
push
rorl
enter
mov
add
adc
mov
dec
es
out
mov
int3
stos
ss
mov
insl
mov
mov
addb
xlat
xchg
xchg
add
and
add
adc
cmp
lcall
ljmp
call
jecxz
rcrb
push
inc
xchg
stos
lcall
js
cmpsl
xchg
push
mov
add
inc
ss
imul
mov
sub
imul
in
mov
ljmp
loop
mov
cmp
movsb
mov
mov
outsb
jnp
inc
pop
ss
mov
mulb
andl
sub
xor
xchg
cmp
test
pop
mov
cmp
jle
rcrl
sidtl
test
adc
add
mov
xor
rcll
clc
push
in
push
clc
mov
dec
pop
dec
movsb
and
sbb
imul
add
pop
cld
ss
jb
in
fnstenv
cmc
dec
jmp
int3
jb
mov
pop
inc
cmp
daa
fstp
xor
sub
adc
push
stos
lret
jne
mov
out
movsb
mov
push
dec
mov
adcl
jae
and
push
repnz
aam
ja
push
or
cmpb
xchg
push
push
or
jno
sub
daa
xchg
mov
sub
sarl
add
cltd
mov
ljmp
repz
outsl
fstpl
jae
jne
and
lea
loope
movsb
xchg
mov
fldt
and
scas
and
int3
ret
lret
or
push
cmpl
cld
ror
cmp
xor
pop
aas
cmp
int3
je
pop
imul
cwtl
cmpsl
cld
sahf
lcall
ficomps
stos
jge
jle
adc
out
sti
cmp
enter
dec
add
jp
push
icebp
mov
insb
mov
lcall
cmp
cmpsl
shlb
imul
movsl
mov
lds
outsb
pop
gs
cmp
outsl
aaa
in
loope
xchg
xor
mov
sbb
jo
outsb
dec
mov
push
test
mov
aad
cltd
jne
push
pop
loop
popf
and
mov
mov
aam
sub
stos
push
mov
inc
dec
aam
sti
mov
push
pop
jbe
jmp
sahf
jmp
jb
loop
jecxz
stos
out
std
xchg
fwait
inc
xchg
xchg
and
adc
shrl
mov
ja
mov
sub
inc
mov
and
jg
xchg
mov
into
hlt
xchg
jns
jecxz
push
push
mov
imul
flds
imul
insb
cmpsl
ret
stos
test
add
adc
cs
jb
mov
xlat
int
stos
push
hlt
aam
iret
ficompl
pop
push
push
inc
jo
out
sbb
push
jns
sbb
pop
test
leave
dec
xchg
ss
mov
subb
mov
xchg
aas
lahf
lock
mov
cmp
out
dec
fildll
mov
lods
adc
rclb
pop
bound
imul
cld
cld
shr
test
fisubrs
jecxz
inc
out
movsb
jg
inc
push
incb
and
das
fildll
jns
adc
fisubrs
jl
xchg
push
or
frstor
loop
adc
dec
ss
and
sbb
out
int
xchg
js
ljmp
xor
daa
mov
fadd
adc
adc
ds
fcmove
cmp
jb
mov
loop
popf
fsubrp
lods
fdecstp
lret
jo
scas
cmc
inc
js
dec
insb
ret
in
sub
dec
adc
subl
shll
sbb
inc
pop
push
movsl
jno
ret
xchg
jge
mov
add
add
xlat
xchg
push
out
adc
hlt
les
inc
pop
inc
jno
dec
pop
push
and
jecxz
add
mov
adc
sbb
mov
add
lea
push
aaa
rcrb
mov
mov
ljmp
mov
ljmp
ss
sbb
mov
xor
subb
and
loope
mov
or
xchg
out
in
std
or
shlb
sbb
int3
pop
pop
mov
sarb
bound
cli
shlb
lahf
cmpsb
bound
pop
mov
inc
pop
imul
dec
lahf
inc
es
sub
mov
rclb
jl
push
enter
push
cmc
mov
imul
fcoml
jns
push
dec
dec
into
mov
lcall
jle
sbb
sarb
je
clc
mov
stos
sbb
push
verr
adc
pop
enter
lock
jle
cli
cs
push
dec
rol
es
popf
jnp
jle
sub
add
inc
sub
cmc
adc
xchg
int3
mov
call
shll
cmp
xchg
adc
adc
sbb
mov
xchg
je
sub
negb
mov
clc
outsb
scas
lods
xchg
inc
notl
mov
into
lcall
pop
insb
subb
hlt
movsb
jl
cmp
sub
sub
dec
ljmp
insb
mov
add
xchg
xor
std
add
mov
pop
push
inc
inc
dec
inc
cmp
adc
sahf
xor
xchg
aaa
repnz
enter
push
sub
aaa
lods
sub
jae
bound
jb
insl
rcrl
daa
nop
mov
inc
jge
fsubrl
scas
enter
add
pop
and
push
jns
mov
imul
adc
jns
push
jecxz
adc
fcoml
negb
push
sarb
cmp
hlt
push
mov
pop
test
adc
std
or
stc
add
pushf
and
xorb
or
stos
daa
jge
dec
sub
test
aad
arpl
repz
pop
out
cwtl
push
sub
cwtl
lret
xor
fdivrp
aam
std
mov
jnp
lret
push
mov
pop
iret
insb
and
and
pushf
cmp
das
ja
ja
cli
push
hlt
lods
daa
and
fnstsw
cmp
jge
xchg
mov
mov
gs
lods
add
decb
mov
cmp
xchg
popf
mulb
pop
fidivrs
dec
aam
je
and
jno
add
xor
sbbb
sub
inc
mov
es
inc
enter
ljmp
add
push
sbb
inc
jmp
test
xchg
repnz
mov
nop
lock
dec
rolb
sar
push
jo
dec
dec
lahf
aad
jne
dec
in
mov
mov
jl
or
pop
ret
jecxz
pop
mov
mov
insl
mov
cmp
fisubs
fs
stos
imul
inc
sahf
gs
fcomi
push
xchg
icebp
in
fadd
xchg
xor
int
adc
or
movsl
xchg
xchg
int3
test
mov
xchg
ret
adc
lahf
data16
in
cmpsb
add
and
lods
cmp
add
shll
enter
cmp
xchg
adc
mov
leave
jl
lea
movsl
fcmovbe
pop
adc
adc
adcl
mov
rolb
xor
jp
ljmp
xor
fcoms
adcb
sarb
jmp
or
mov
outsl
sbb
inc
dec
movsl
nop
pop
xchg
pop
push
sub
rorl
dec
loop
ret
repnz
pop
dec
test
les
sub
in
subb
xchg
in
imul
dec
cs
ret
mov
inc
sbb
popa
int3
push
outsl
subb
loopne
xchg
mov
adc
je
lahf
outsl
sub
cmp
int
push
sbb
aas
stc
lods
insl
out
jecxz
push
mov
xor
mov
mov
cmpsb
mov
or
insl
aam
add
mov
jp
pusha
or
ret
mov
pop
or
sub
sbb
jbe
pop
and
inc
in
fisttps
cltd
clc
mov
jne
lods
xor
xor
sub
js
sbb
cs
or
pop
sbb
cmp
mov
xor
mov
xchg
andb
push
jmp
es
incl
enter
push
orl
insb
test
ss
push
dec
clc
lcall
sub
hlt
adc
fucomp
fs
push
and
sub
pop
and
inc
adc
es
or
into
lret
sub
add
movb
inc
test
int3
rcrl
gs
rorb
std
roll
dec
or
cmp
outsb
or
out
leave
fisubl
jnp
mov
sub
mov
push
out
unpckhps
cwtl
cmp
movsb
inc
cmp
repnz
xor
pop
in
and
adc
fistpl
cmp
repz
jno
add
fdiv
or
mov
push
jecxz,pt
dec
outsb
pop
pop
inc
or
push
out
enter
dec
adcl
sti
dec
dec
pop
sub
repnz
add
hlt
sub
and
mov
jo
popf
mov
repnz
sahf
or
push
enter
in
add
aam
addr16
roll
jb
dec
mov
jg
sub
sahf
push
jp
insl
xchg
sbb
pop
pop
out
adc
xchg
cli
icebp
adc
lret
xor
cmp
sti
mov
in
push
test
fldcw
xchg
add
rolb
test
fiaddl
mov
adc
ljmp
add
add
fbstp
loope
xor
add
nop
lds
out
repnz
insb
pop
movsl
inc
cmp
pushf
xchg
int
insl
and
movlps
jmp
mov
addb
fwait
pop
lahf
je
ror
jns
stos
mov
xchg
leave
adcb
and
inc
fstpt
fiadds
outsb
in
inc
push
and
xchg
stos
add
test
inc
mov
inc
stos
popa
and
dec
shl
test
sbb
cmc
mov
rcl
dec
mov
mov
jnp
in
pusha
pop
push
popf
dec
in
sbb
fnsave
xor
mov
shlb
stc
sub
ss
push
inc
cmp
xchg
or
xchg
popf
lds
mov
les
jle
lods
or
fistpl
cs
pop
jecxz
movb
stc
xor
xor
pop
int3
in
cmp
mov
je
push
xchg
roll
cwtl
push
and
mov
fdivrs
jb
mov
dec
dec
xchg
sbb
mov
cld
lahf
mov
push
cmp
mul
sub
and
leave
fnsave
jnp
divl
xchg
dec
mov
fimull
adc
daa
fistps
cmp
aaa
and
shl
adc
push
mov
dec
int
push
movsb
imul
pop
cli
out
sub
cmp
mov
xchg
jp,pt
aad
shl
pop
fsubs
sbbb
shl
in
imul
mov
push
pop
fs
ret
jl
inc
cmc
jmp
lods
mov
jl
stc
lahf
xchg
outsb
ss
fwait
mov
sub
push
dec
cmpsl
sub
mov
mov
push
dec
out
adc
jns
arpl
dec
push
shrl
lods
std
addr16
jl
sahf
or
outsb
mov
in
aaa
addr16
mov
test
xchg
jbe
jl
sbb
jbe
jo
in
pop
pop
jnp
pop
loop
mov
and
xchg
sub
push
push
lret
pop
or
mov
pushf
gs
dec
dec
push
in
push
mov
push
push
out
pushf
mov
sub
jmp
lcall
mov
and
lock
mov
jge
lods
cli
mov
pusha
rclb
loope
popa
mov
leave
or
nop
and
cmpsb
cmp
aad
arpl
adc
and
dec
inc
jno
xlat
mov
stc
cmc
cs
loopne
call
cmp
iret
dec
add
bound
test
and
cmp
add
mov
mov
mov
cmp
inc
je
cltd
push
iret
fistl
out
jp
pop
cmp
shrl
aad
adc
ljmp
push
fcompl
fs
adc
idivl
mov
ja
imul
jae
aas
insl
push
xor
stos
fldenv
into
add
inc
insb
inc
lea
adc
jne
mov
pop
jae
cmpsl
loop
xor
je
dec
movups
inc
nop
jg
out
and
loop,pn
sar
adc
push
xor
aad
xor
push
jno
lds
push
int
les
inc
mov
mov
push
mov
dec
add
out
scas
and
iret
add
ss
xor
shr
into
fistpl
stos
and
cld
sbb
mov
arpl
inc
es
jb
repz
or
inc
es
push
popf
cmp
or
jge
cmp
xchg
and
clc
rcrb
inc
mov
sub
in
in
cli
inc
stos
and
pop
aaa
jmp
sbb
arpl
test
sub
mov
and
inc
iret
mov
jae
popa
test
cli
idivl
aaa
inc
aad
lods
push
sub
mov
jae
out
sub
pop
scas
stc
pop
ljmp
mov
arpl
cwtl
adc
ret
sub
std
into
in
xchg
ja
int
ret
jb
leave
mov
xchg
mov
dec
jmp
pop
push
ret
jmp
xchg
dec
mov
push
push
adc
dec
sbb
or
and
cli
and
ret
fcmovb
pusha
rcrb
mov
in
jp
adc
test
pop
call
pop
or
dec
inc
ljmp
push
xchg
inc
int
cmc
dec
aaa
jnp
mov
bound
scas
push
into
inc
arpl
push
or
mov
sub
fnstenv
lret
sbb
pusha
jo
inc
repz
loope
xchg
arpl
out
test
jb
sub
ljmp
iret
cltd
sbb
sub
movsb
adc
pop
sbb
cmp
add
jge
jle
ret
aad
into
ljmp
addr16
push
arpl
scas
lods
aam
inc
push
movsb
out
push
imul
std
xchg
mov
or
mov
cmp
push
inc
loopne
jmp
fcompp
movsb
inc
aas
sub
xor
ja
pop
in
adc
adc
inc
adc
sbb
xor
mov
stos
fldenv
pop
fdivr
addr16
inc
bound
dec
fucomi
test
xor
aam
pop
fistps
or
dec
cwtl
sahf
push
aam
into
inc
scas
stc
sub
in
jne
call
mov
and
inc
fsts
add
xchg
cli
pushf
js
ljmp
add
xor
jle
add
xchg
xchg
ret
cmp
inc
aad
test
xor
lret
in
mov
and
mov
repnz
lret
or
cmp
xor
push
int
cmp
cld
ljmp
dec
xor
cmp
scas
call
pop
lcall
jbe
call
lds
loopne
addb
mov
aam
adc
mov
cmpsl
dec
repz
popa
enter
clc
in
in
mov
fisubs
fsubrs
stos
icebp
pop
stos
and
repnz
pop
dec
push
insl
loope
das
pop
pop
movsl
push
mov
pop
or
pop
pop
fsubs
imull
idivl
shlb
and
test
cmp
mov
sar
sbb
sub
jp
add
inc
inc
jne
xchg
clc
lea
xor
in
dec
addr16
inc
dec
sar
gs
fs
inc
pop
popa
add
sbb
subl
pop
inc
test
les
pusha
lock
cmc
pop
imul
xor
mov
mov
xlat
call
movsb
pop
and
jno
and
movsl
inc
cmp
scas
cmc
mov
mov
mov
arpl
mov
sub
sar
xor
fisubl
mov
pusha
jnp
jl
xor
in
mov
test
movsl
xor
mov
data16
mov
aas
add
and
mov
jb
subb
push
ja
add
xor
xor
popa
fsubrl
gs
fs
test
and
stc
cmp
mov
jmp
adcl
loope
dec
cld
jae
aad
jns
jno
push
mov
and
dec
xchg
mov
stos
ret
jle
imulb
ljmp
popf
je
loop
test
test
adc
push
fsubrl
mov
lods
pop
mov
push
cmp
in
adc
mov
sbb
push
subl
test
rolb
cltd
cmpsl
mov
push
ret
in
in
pop
je
adc
repnz
mov
pop
iret
fs
test
mov
adc
notl
into
in
mov
mov
push
outsb
jp
lcall
idivb
mov
loope
ds
subb
lahf
inc
shlb
xchg
mov
xchg
mov
sti
mov
mov
imul
sbb
rcr
dec
or
hlt
jle
aaa
std
mov
mov
or
test
cmp
and
push
add
jae
arpl
push
adc
mov
mov
mov
rcll
and
push
add
jae
arpl
push
adc
mov
mov
mov
rcll
mov
and
jecxz
push
adc
xor
mov
mov
rcll
and
push
add
jae
arpl
push
adc
mov
or
shl
aad
cmp
dec
repnz
ret
jp
mov
ja
inc
std
cmp
pushl
inc
jb
and
adc
repnz
jp
or
dec
push
ljmp
add
jmp
fidivl
bound
xor
stc
cs
es
or
fdivrs
xchg
push
repnz
ret
mov
imul
adc
stc
push
jb
adc
push
sbb
rol
arpl
sub
dec
jmp
stos
xor
pop
add
out
pop
lahf
inc
outsl
repnz
xorl
ficoml
subb
test
aad
xor
movsl
and
cmpsl
or
xchg
mov
inc
adc
popa
pop
inc
push
sti
stos
add
or
push
repnz
xchg
and
and
mov
ljmp
xchg
pop
lock
cmpb
bound
mov
mov
adc
and
test
mov
ret
jp
or
and
push
pop
repz
jecxz
xchg
sub
xchg
dec
xchg
sub
or
jnp
inc
lcall
movsl
jb
xor
cmp
dec
out
push
cwtl
lds
loop
repnz
or
push
out
pop
xlat
or
jb
pop
daa
clc
inc
cli
inc
lcall
rcrb
sarb
fidivrl
mov
subb
cmp
jb
inc
ljmp
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
xor
in
mov
test
push
add
mov
jnp
pop
movntq
stc
sbb
stc
fisttpll
or
sbb
mov
int
out
cmp
dec
shr
jnp
cmp
xchg
shlb
cmp
subl
arpl
dec
dec
insb
arpl
jl
inc
sbb
sub
mov
pop
adc
inc
incb
data16
sahf
jae
aad
std
mov
xchg
ret
mov
jne
sbb
mov
cld
cs
and
lods
es
pop
mov
xor
jns
fs
mov
sub
mov
dec
xchg
pop
pop
leave
or
or
inc
int3
jne
ljmp
push
pop
dec
mov
addr16
mov
jg
sahf
inc
push
sarl
jnp
jp
mov
cmp
dec
gs
mov
fmulp
and
push
lret
mov
jno
push
cs
popf
insl
call
les
cmp
push
repnz
repz
add
aas
push
and
xchg
pop
cld
ret
rclb
fs
push
inc
mov
stos
imul
cs
test
int3
hlt
dec
push
lea
insb
xlat
sbb
cmp
inc
mov
inc
xchg
neg
loopne
das
cli
xor
jp
call
pop
mov
pop
idivl
xchg
test
add
adc
movsl
int3
xchg
mov
in
pop
ja
popf
push
sub
xor
and
pop
jecxz
mov
cmpsb
out
clc
push
loopne
imul
mov
or
jl
addl
fadd
or
sub
sbb
pop
outsl
mov
xchg
cmp
sbb
sub
dec
fs
lods
inc
sbb
jl
fmul
lods
mov
push
out
aas
call
and
sub
cmp
icebp
cmp
lods
insl
adc
out
fs
pop
outsb
fcoms
test
loopne
dec
sbb
inc
sbb
popf
mov
outsl
pushf
inc
leave
into
arpl
enter
sub
sahf
add
je
imul
insb
jg
sub
and
jno
inc
rorb
or
ja
test
lods
xor
mov
jmp
mov
jbe
roll
push
add
les
out
and
pop
vucomiss
imul
lds
inc
xchg
aad
jmp
pop
push
stos
xor
and
fcmovb
sub
in
lcall
push
test
dec
mov
dec
test
inc
iret
jle
inc
fdivrp
cmpb
out
jmp
enter
int
pop
dec
lock
sbb
mov
dec
int3
jecxz
test
pop
jae
sbb
push
insl
popf
lds
in
call
lods
push
cmp
jg
adc
and
mov
jp
sub
sub
fcom
dec
test
jle
lods
gs
addr16
stos
call
adcb
and
mov
mov
gs
ret
adc
cmp
loop
or
fimuls
jg
out
dec
pop
sahf
inc
push
jbe
orb
out
xor
out
lahf
out
lret
out
outsb
mov
int3
sub
dec
dec
ljmp
outsl
lods
aas
clc
jle
pop
push
leave
push
mov
add
push
or
faddp
andl
jmp
shlb
les
cmpsb
stos
cltd
add
jge
jno
cmp
cmpsl
or
ja
dec
nop
divb
out
addr16
push
lock
sti
or
jl
jle
es
sbb
cmpsb
lods
int
cmpsb
add
push
imul
das
xchg
xchg
sub
in
rol
adc
imul
mov
dec
lods
subps
aas
iret
push
mov
dec
addb
sub
cmp
push
icebp
mov
leave
repnz
adcl
add
bnd
and
and
leave
xchg
xchg
shrd
aam
pop
test
xchg
add
stos
aaa
test
cmc
jg
test
into
pop
jmp
jns
test
jne
dec
jp
cmp
test
scas
mov
xor
push
sbb
cld
sub
mov
stos
out
sub
inc
inc
lcall
xor
and
je
test
adc
addr16
adc
adc
cs
jo
mov
lods
pop
cli
sbb
mov
xor
dec
inc
xor
and
dec
cmp
int
or
mov
sbb
int3
lret
negl
loopne
adc
js
jmp
mov
lea
add
sub
dec
iret
sbb
cltd
xchg
mov
sti
sar
test
jp
sub
mov
mov
push
bound
push
pop
push
xor
mulb
faddl
pop
add
dec
fisttpll
pusha
pop
in
lret
push
or
mov
hlt
lock
popa
fsubr
fs
icebp
push
outsb
xchg
fmul
and
adc
and
add
dec
push
jbe
imul
orb
flds
sar
test
fsts
mov
mov
inc
or
jns
clc
cmp
sbb
outsb
hlt
inc
in
sbb
fimull
nop
xor
dec
push
and
loop
lcall
loop
data16
fldenv
xor
loope
dec
xchg
inc
jb
dec
int
imul
add
adc
addb
aaa
jg
xchg
adc
pop
add
adc
rolb
mov
imul
insl
sub
lret
dec
pop
imul
mov
repz
jg
sub
lret
mov
cmc
loope
dec
and
mov
pop
sub
shlb
ret
pop
cli
in
inc
dec
icebp
scas
icebp
xchg
ja
nop
inc
xchg
outsl
jl
out
xchg
pop
pusha
xchg
sub
jl
mov
nop
or
int3
mov
mov
pop
xor
mov
push
mov
test
adc
jmp
sub
mov
jle
lock
dec
mov
enter
or
mov
int3
push
fistl
sbb
inc
dec
jnp
ret
adc
sarb
fdivrs
adc
dec
mov
not
hlt
lret
mov
cld
and
sbb
pop
inc
cltd
rclb
test
je
dec
push
outsl
sahf
loop
es
sahf
add
lods
mov
mov
adc
or
adc
mov
test
incl
insb
cwtl
fisubrs
mov
pop
daa
dec
jmp
icebp
dec
inc
lcall
xchg
lods
mov
and
and
pushf
test
fists
sub
dec
cld
clc
inc
jns
lods
xlat
mov
push
fistps
dec
das
adc
jle
or
xlat
stos
cli
outsl
cmp
add
mov
jb
sti
js
push
cld
aas
clc
or
imul
insl
or
adc
cmp
or
sbb
push
mov
in
and
add
dec
mov
jno
mov
daa
ja
jbe
pop
cmpl
es
push
cmp
jle
mov
sbb
mov
data16
loopne
cwtl
push
pop
test
sub
cli
jnp
inc
push
mov
xchg
push
loopne
test
imul
mov
pop
jbe
int
repz
ljmp
push
fisttps
jb
sub
stos
out
in
popa
xlat
dec
xchg
repnz
xchg
ljmp
notl
push
dec
push
adc
dec
arpl
stc
or
sbb
daa
or
jne
sbb
jno
leave
je
fidivs
iret
idivb
mov
cmp
fisubrl
xchg
push
dec
addr16
or
ret
xlat
movl
xchg
repz
jns
jg
std
ret
sarl
push
or
jp
xor
data16
ds
jnp
test
xor
cmp
inc
and
jae
pop
xchg
addr16
popf
daa
mov
rcrb
sub
inc
out
lock
jb
pop
jne
mov
mov
add
dec
cli
jae
lahf
in
add
inc
xchg
pop
pop
testb
mov
bound
popf
xchg
xchg
cwtl
les
in
call
daa
fs
lret
mov
and
mov
mov
sti
mov
mov
jge
ret
jecxz
test
lock
jo
mov
push
aas
es
push
out
aaa
xchg
out
push
push
ret
fwait
lea
xchg
aad
dec
dec
pop
pop
cmp
stos
fstl
inc
cmp
mov
and
mov
loope
int
iret
out
and
mov
cli
scas
aaa
rorb
pop
std
xchg
jnp
std
sub
and
lods
jmp
sbb
inc
aad
add
ret
cmp
fisubrl
stc
pop
je
and
dec
cs
aad
sbb
ja
andb
or
in
jnp
xorl
pop
jmp
mov
shrl
daa
or
sbb
outsl
das
pop
push
and
jmp
xchg
xor
push
subb
enter
mov
or
les
push
inc
imul
sbb
push
push
inc
mov
mov
xchg
iret
inc
mov
dec
mov
push
loop
jp
cmp
sbb
push
cmp
bswap
jns
xor
add
inc
js
jmp
push
pop
add
pop
dec
cmp
xor
pop
push
popa
xor
sti
adc
out
mov
fsubrl
sbb
dec
shr
leave
insl
xor
cld
pop
stos
fstpl
ret
xor
arpl
scas
lahf
aaa
pop
mov
fs
in
and
data16
cmp
xchg
in
sub
sbb
adc
iret
ss
xor
inc
push
jecxz
and
xlat
and
add
into
lods
pop
mov
cld
xchg
or
sub
clc
jecxz
shl
gs
movsl
fidivrl
pop
pushf
mov
add
repnz
outsl
mov
and
clc
fs
xlat
pop
or
iret
data16
sar
std
inc
insb
push
addl
ret
into
inc
inc
movsl
adc
ret
xchg
outsl
in
ret
aas
pop
xor
lock
ret
mull
sbb
inc
sbb
aam
cwtl
push
das
mov
add
ret
sbb
arpl
push
sub
fcomi
es
addr16
int3
outsb
xor
stos
jns
jno
stc
fldcw
cmpsb
sbb
in
rorb
data16
sbb
sbb
mov
int
jo
aas
pop
js,pn
arpl
repnz
and
int3
int
mov
scas
and
scas
nop
out
arpl
dec
test
sbb
ret
not
imul
arpl
lods
mov
fcomps
add
out
and
iret
or
add
mov
cmp
test
lahf
pushl
and
cmp
leave
xchg
std
or
mov
jmp
pop
test
jnp
mov
jns
out
dec
shrl
rolb
ret
shll
nop
fwait
add
ret
mov
mov
push
cltd
jp
adc
fimuls
daa
in
pop
test
sahf
push
movsb
jne
mov
pop
pushf
xor
mov
aas
sub
push
adc
fsubs
shlb
pop
push
and
sbb
or
cld
scas
xor
test
scas
mov
fcompl
punpcklbw
out
pop
sub
je
fistpl
push
insb
lcall
repz
mov
push
dec
in
repnz
shlb
test
dec
inc
and
int3
add
pop
cltd
jo
and
sahf
mov
inc
sub
test
leave
adc
insl
and
mov
jge
cs
add
xchg
adc
or
xor
pusha
sub
mov
std
cmc
lcall
test
icebp
stc
or
inc
inc
je
mov
out
mov
filds
rolb
je
cwtl
xorb
ss
popa
dec
fistpll
cmp
and
outsb
leave
adc
cmp
mov
repnz
into
mov
or
pop
lds
mov
mov
and
fwait
mov
push
xchg
pop
ret
into
sub
xor
or
lds
push
xchg
push
test
aas
js
push
out
bound
popf
sbb
xor
mov
dec
push
rcll
xchg
repz
mov
stc
cmp
les
jl
aam
jo
xor
icebp
xor
lret
push
mov
or
ljmp
add
popf
pop
jns
out
jnp
push
adc
xchg
mov
fsubrs
dec
xor
mov
push
xchg
das
stc
or
cmc
push
stos
sbb
mov
inc
jb
imul
into
iret
add
incl
cs
add
jno
cltd
ljmp
rorl
aam
shlb
cmp
jb
psubd
rcrl
pop
jo
test
push
jnp
data16
xchg
mov
enter
pop
aad
je
and
jne
adc
call
pop
sbb
mov
jl
int3
inc
or
and
out
sbb
out
shlb
lods
ja
rcrb
push
mov
inc
sbb
xchg
ja
shll
or
imul
jne
xchg
lds
dec
push
sub
dec
scas
or
add
sbb
push
aad
daa
mov
dec
jne
jle
outsb
jl
add
or
inc
adc
dec
jbe
pop
sti
stos
out
inc
into
push
lret
xor
loop
fdivs
ficoms
fsubs
mov
inc
inc
push
iret
mov
inc
push
add
repz
jbe
sbb
push
das
add
push
out
pop
mov
xor
cmp
test
adc
mov
cltd
sbb
ret
jb
dec
movb
cwtl
dec
jnp
jne
mov
cs
jne
pop
push
xchg
addr16
mov
xlat
xchg
inc
movsl
mov
in
andl
movsb
leave
mov
ficoms
ret
lahf
sub
pop
push
push
xlat
dec
sub
inc
cli
dec
fdivrl
mov
and
sub
push
sub
cld
cmpsl
fsubr
mov
stc
sub
pop
arpl
mov
mov
iret
in
fisttpll
and
add
inc
lret
fimuls
jne
add
in
cmc
imul
fisttpl
popa
loop
cmc
inc
push
insl
jl
push
mov
jmp
inc
testl
paddb
dec
push
test
xor
cs
add
std
popf
lods
xor
shrb
cmpsl
test
icebp
mov
sub
nop
dec
adc
scas
imul
mov
push
sbb
cmp
mov
and
adc
adc
or
sbbb
in
mov
stos
mov
xor
mov
je
jmp
loop
shlb
inc
pop
sbb
lods
sub
sbb
jge
fistps
subb
rol
nop
jg
pop
cmp
or
xor
ret
repz
adc
push
ret
adc
imulb
daa
pop
das
jb
inc
mov
dec
imul
mov
cmp
fildl
xor
jo
mov
xchg
inc
ret
push
sub
pop
add
sbb
mull
lahf
sub
shll
xchg
xchg
jl
xchg
sbb
cld
or
movsl
push
jmp
jo
ffree
mov
rcrb
inc
and
xor
mov
cld
xor
sub
addr16
mov
lds
lods
loop
enter
es
pop
jecxz
mov
not
xchg
cmc
iret
cmp
sbb
mov
or
pop
out
and
in
mov
rol
in
or
jmp
imul
and
stc
loop
in
mov
lods
stos
std
loop
test
push
jno
subb
mov
enter
test
rep
jnp
add
pop
pop
lahf
fst
and
pop
inc
dec
insb
rep
push
mov
sub
test
leave
push
arpl
jae
adcb
cmpsb
inc
mov
mov
fnstenv
mov
mov
pushf
sbb
cmp
adc
addr16
aaa
rorb
shl
mov
or
cmp
inc
jns
sbb
movsl
incb
sbb
aas
leave
ds
loop
loopne
and
xor
and
hlt
fiaddl
insb
sbb
gs
or
lods
lds
mov
popl
pop
test
adcl
lahf
std
mov
xchg
dec
dec
stc
sub
fstpt
xchg
loope
xchg
jo
sub
aam
rclb
mov
and
push
dec
imul
or
pop
test
and
in
mov
sbb
xchg
sbbl
int3
pop
test
ror
sbb
loop
enter
mov
xchg
and
inc
pop
mov
sbb
aam
cmp
out
iret
inc
adc
dec
cmp
pop
add
movsb
push
jecxz
sahf
aaa
and
mov
sbb
leave
push
push
sub
sbbb
xchg
cmpsl
push
cs
lret
sbb
xchg
add
push
pop
jb
adc
sbb
aaa
ret
or
popf
iret
cmc
push
into
fchs
xor
int3
lret
inc
xor
loopne
push
imul
mov
fnstsw
pop
into
lods
out
cmpsb
and
arpl
test
dec
jne
push
xchg
nop
int
adc
cli
outsl
sub
lea
inc
stos
cmp
adc
adc
repz
ret
shr
loopne
pop
repnz
add
stc
lea
popf
addl
push
rol
cmc
mov
loop
test
nop
cwtl
nop
inc
and
mov
xor
ss
dec
sub
js
ret
out
mov
mov
add
mov
rcrb
rolb
or
sbb
imull
nop
xor
inc
test
add
insl
jo
inc
xor
out
aad
aaa
outsl
cmp
and
icebp
xchg
inc
adc
adc
mov
dec
lret
lahf
jns
mov
cmp
pop
and
out
scas
mulb
jle
insl
and
adc
sbb
xchg
mov
sub
lret
in
sbb
sub
xchg
cmp
daa
xor
jmp
inc
insl
push
and
cmp
or
push
mov
pop
jb
cltd
sub
xor
push
mov
xchg
outsl
xchg
cmpsb
shlb
jmp
sbb
stos
xchg
xor
xor
fld
xor
add
enter
sub
in
sar
lahf
leave
xchg
fsub
cmp
lahf
icebp
mov
insb
push
hlt
into
dec
shlb
ror
int
inc
cmp
sub
jmp
inc
inc
add
mov
mov
mov
and
es
jg
test
fmull
orb
into
fiaddl
fidivrs
stc
adc
je
cmp
insl
pop
pop
aaa
icebp
test
cmp
push
lret
push
clc
mov
std
push
inc
jl
and
jnp
imul
dec
push
in
scas
or
test
cmp
cmpsb
add
mov
sub
inc
push
sbb
or
ficoms
or
jecxz
or
add
subb
cs
jb
jno
sti
jp
sbb
sti
sub
add
cmp
mov
pop
lea
into
movsl
jne
fldl
mov
sub
fwait
sub
add
fcoml
jle
clc
out
lea
lea
ret
dec
lret
outsl
xchg
xor
add
mov
pop
push
lods
sub
mov
sub
repz
cmpxchg
arpl
sub
mov
and
fldt
jns
and
dec
push
xor
fsubrs
shr
inc
lods
repz
das
iret
call
jae
loopne
into
push
shrb
add
mov
cwtl
test
and
cmp
cmp
ret
mov
pop
cmpsb
or
faddl
fs
hlt
push
insb
data16
aas
vphaddudq
aas
addl
outsl
es
add
xchg
cmpsb
iret
cwtl
pop
in
push
mov
add
js
fnstsw
es
lock
test
mov
insb
push
repnz
testb
mov
out
mov
push
fisubrl
mov
cmp
xor
pop
add
cmp
jne
aaa
xchg
inc
mov
int3
in
jecxz
cltd
cld
daa
das
test
add
js
push
adc
mov
aas
cmpb
dec
bound
rolb
mov
psrld
sbb
push
fimull
mov
hlt
push
and
xchg
lods
mov
mov
jmp
cli
sbb
lock
push
data16
in
les
mov
ficomps
dec
cmp
adc
clc
cmovns
mov
push
mov
push
lea
sbb
mov
bound
mov
dec
inc
push
add
out
push
and
inc
scas
gs
repnz
enter
cltd
jg
or
cmp
or
nop
je
jg
je
outsb
or
lcall
lret
pusha
and
mov
mov
out
hlt
or
aaa
adc
insl
and
daa
repz
mov
jl
sahf
data16
jnp
call
and
xlat
push
xchg
and
pop
push
jp
or
cmp
jb
inc
ljmp
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
repnz
ret
jp
or
cmp
jb
inc
ljmp
add
pop
hlt
outsb
sarb
or
cli
popf
lret
call
add
lds
inc
sub
popa
or
add
xor
loope
icebp
cli
sub
lret
mov
inc
sub
popa
or
add
pop
and
stos
shrl
cli
in
xchg
fisubl
xor
popa
adc
add
inc
and
mov
test
lahf
cli
movl
and
xor
mov
lea
inc
push
sub
repnz
in
pop
sti
jne
inc
aad
bound
mov
push
adc
fildll
subl
push
je
stos
xchg
cli
lret
xor
xchg
jmp
dec
out
cli
mov
in
rcll
out
push
cli
jle
lods
fisubrl
jge
int3
cmp
cs
test
imul
sub
xor
jne
add
aam
mov
andl
pop
jo
xor
push
jp
add
ljmp
sbb
inc
pop
fcomip
jns
dec
push
mov
out
fimull
mov
mov
xor
popa
or
add
pop
and
mov
loope
icebp
loop
repnz
shlb
sub
jle
or
gs
inc
dec
inc
mov
mov
cmp
shll
cmp
push
inc
push
pop
jbe
pop
stc
movsb
iret
mov
cli
in
pop
lods
les
add
bound
xor
push
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
add
mov
hlt
or
fwait
shr
iret
jbe
xchg
es
mov
pop
in
fidivs
shll
mov
sbb
pop
insb
rolb
je
pop
mov
mov
ffreep
add
movsl
xor
jl
inc
xor
shrl
jb
pop
cmp
outsb
nop
and
in
enter
jp
test
rcr
scas
out
or
ss
sarl
sarb
xchg
stc
xor
imul
out
mov
sub
lahf
insl
mov
out
out
movsb
into
lcall
inc
ror
xor
je
mov
xor
cmp
out
lea
sbb
sbb
test
xchg
lahf
std
loop
add
adc
push
je
or
jo
shrb
bound
in
mov
push
xor
jbe
sub
inc
add
lea
dec
ja
pop
cwtl
dec
popf
call
mov
fsubrp
adc
rclb
cs
int3
fisubs
lock
cmp
jle
in
xchg
dec
mov
pop
xor
mov
jl
xchg
cmp
lock
pop
sarl
outsl
jl
inc
or
sub
je
mov
cmp
jbe
jb
inc
aad
add
inc
adc
lcall
ljmp
pop
add
inc
lret
add
pusha
lds
push
int
insb
mov
aad
pop
daa
dec
fdivrl
clc
add
decb
mov
in
icebp
dec
add
in
adc
inc
fistps
shl
sbb
mov
pop
mov
mov
out
pop
std
lds
testb
cli
cli
loop
cs
ret
movsb
push
test
ret
addr16
pop
aad
adc
int
mov
mov
jbe
in
xor
out
mov
iret
xor
fisubl
jo
and
push
enter
popf
mov
filds
pop
mov
in
test
dec
push
bound
mov
ss
cwtl
pushf
mov
xchg
dec
stos
pop
pop
inc
sbb
insb
sbb
fldenv
xor
out
lds
xchg
xor
out
pop
fnstcw
inc
out
mov
pop
push
xchg
and
add
sti
mov
jl
mov
mov
push
aas
fcoml
aam
mov
mov
shrb
leave
loop
sbb
aad
dec
cmp
pop
in
cwtl
ss
fcoml
jp
sub
sub
clc
xchg
aad
adc
stc
sahf
out
jmp
jo
loope
and
pop
mov
or
stos
imul
xchg
pop
pop
das
iret
ss
sbb
int3
sarl
cmp
test
hlt
int3
xchg
push
mov
jge
loopne
into
repnz
xchg
imul
inc
dec
cmpsb
jecxz
sti
xor
cmp
fmul
dec
dec
shrl
xchg
cmp
cli
mov
out
add
dec
das
aas
add
stc
imul
jbe
fadd
int3
jecxz
push
movsb
xor
add
xchg
roll
data16
add
fwait
push
lret
test
jb
leave
dec
or
adc
mov
mov
sub
sbb
dec
mov
mov
pop
jecxz
and
dec
mov
pop
mov
scas
push
sub
xchg
sub
pop
repz
scas
or
push
push
iret
lods
sbb
xor
jmp
popf
je
ret
cmp
mov
mov
add
icebp
mov
mov
pop
fidivl
inc
mov
add
movsl
xchg
mov
sbbl
cmp
int
push
cmp
inc
bound
sbb
movsb
sub
cmp
mov
aas
enter
mov
imul
ja
inc
sub
mov
cwtl
push
jb
and
popf
mov
outsl
scas
adc
shll
inc
loop
sbb
les
cmp
int
lret
out
jb
jo
icebp
lods
mov
xchg
inc
shr
and
sub
imul
mov
pop
icebp
and
jp
jnp
rorb
pop
add
outsb
sti
push
cs
mov
mov
ret
dec
mov
out
lea
mov
mov
cld
mov
adcb
or
push
pusha
push
mov
inc
arpl
mov
cmp
dec
popf
mov
xchg
adc
and
icebp
inc
jno
push
or
pusha
push
mov
inc
stos
les
loopne
mov
cmc
test
imul
mov
fsubl
pushf
xor
scas
xchg
xor
test
bound
lret
cmpsl
push
push
mov
fs
insb
jmp
jne
inc
sub
nop
pop
xor
aad
cmpsb
rcll
jge
inc
inc
cmp
or
cmp
mov
movsl
mov
mov
loopne
sub
test
fbld
leave
mov
ss
in
test
pop
fsubs
mov
ret
dec
push
jl
shl
lds
xchg
imul
sbb
xor
xor
lret
adc
lock
or
inc
fistpl
fdivrp
sbb
cmp
call
or
and
andl
ss
xor
add
lods
jbe
shl
out
xchg
pop
pop
mov
jb
cmp
sahf
xor
gs
mov
dec
call
addb
das
int
out
mov
xor
loope
jno
adc
mov
and
les
cmp
ja
dec
cld
jg
loope
mov
pop
or
and
mov
sbb
xchg
push
rol
pop
xor
in
push
xchg
and
xor
dec
xchg
scas
cmpsb
mov
scas
aaa
stos
addr16
shrl
stos
fcoml
sti
mov
mov
adc
or
xor
daa
sub
ret
repz
sub
in
orb
mov
add
xor
mov
outsb
add
bound
adcl
lcall
jg
mov
outsb
and
jmp
es
pop
rolb
push
xchg
mov
adcl
mov
cmp
dec
push
mov
mov
out
es
xor
xor
mov
sbb
push
mov
js
mov
lock
lret
dec
shll
imul
sub
xchg
in
xor
in
outsb
or
sub
aad
sahf
fdivrl
mov
dec
outsl
pushf
outsb
sar
mov
icebp
mov
mov
movl
iret
sub
mov
leave
loopne
shlb
inc
mov
sarb
lock
mov
loope
fistpll
int3
or
js
push
rolb
adc
sub
mov
and
fidivrl
imul
leave
fsubl
out
imul
xor
adc
popf
jnp
push
cmp
js
add
repnz
sub
loopne
cmp
fdivrs
add
push
cmp
in
ljmp
mov
lahf
int3
or
xor
xchg
lret
mov
xchg
jae
iret
cmp
rorl
or
add
out
xchg
and
cmpsl
adc
out
loope
sub
mov
mov
dec
mov
lret
int
lcall
dec
lahf
adc
das
xlat
jb
out
pop
js
cmpsl
push
xorb
sti
addr16
sbb
sbb
pusha
adc
in
xchg
fists
ret
int3
inc
inc
jg
into
sahf
stos
ja
sub
outsb
sbb
sbb
jmp
and
xchg
imulb
dec
jge
test
or
outsl
add
lret
lret
loopne
cmp
cmp
stos
out
jmp
pop
mov
jne
mov
xor
add
addr16
dec
jl
cwtl
pop
popl
std
cli
xchg
cvttps2pi
jnp
pop
sub
xchg
mov
jne
out
insb
pop
push
ret
das
mov
lea
sub
pop
pop
xchg
mov
xor
add
cmpsb
mov
jne
push
push
enter
inc
push
cmpsb
pop
add
loop
jge
out
or
dec
gs
xor
push
or
sbb
pusha
lds
pop
ret
mov
cmp
pop
mov
mov
lock
push
mov
fistpll
ss
mov
lods
jg
pop
in
jle
dec
int3
fwait
inc
or
es
mov
xchg
insl
adc
dec
call
jecxz
aas
shll
add
dec
or
mov
add
mov
insb
and
jmp
lea
stos
inc
adc
leave
push
into
out
outsb
sub
sub
push
mov
cmp
icebp
sbb
sub
push
testl
mov
mov
jo
rcrb
cmc
imul
test
lret
ja
xor
or
xlat
sbb
call
loopne
hlt
nop
neg
pop
dec
dec
rcl
sbb
jp
imulb
cmp
cmp
ss
out
fs
jae
shll
clc
xor
bound
cmp
jbe
push
add
adc
jle
lds
push
adc
fwait
sub
test
jmp
notb
outsl
push
jo
mov
inc
stc
test
call
lahf
add
dec
aad
jge
shll
sbb
inc
mov
test
jmp
ficoms
xchg
pop
popf
push
or
jl
dec
in
xchg
inc
xchg
lret
sub
sbb
in
pop
inc
fildll
fsubp
xchg
push
fsin
or
pushf
fistpl
iret
fcoms
into
fnstsw
xchg
mov
sahf
and
pop
adc
in
jmp
and
ret
sbb
mov
cld
movsb
push
clc
add
pop
js
mov
mov
pop
push
mov
ficoms
leave
lock
mov
xchg
jne
insl
pop
xchg
test
aaa
mov
and
and
in
cmp
enter
and
into
in
push
ss
xchg
push
cmc
sbbl
icebp
push
fwait
jne
je
fstpt
push
test
xchg
jle
pop
jl
adc
ja
inc
push
aas
and
cmp
f2xm1
int3
nop
push
add
in
jbe
inc
adc
mov
enter
je
shrl
cmpl
sub
imul
cmpsb
shlb
sbb
and
sub
repz
rolb
in
sbb
lods
cmpb
fcmovu
push
and
mov
cltd
je
movsl
lds
jne
mov
xchg
xchg
out
mov
pop
cmp
leave
out
ds
adc
dec
adc
push
das
mov
cld
add
pop
popa
lcall
addl
roll
inc
push
frstor
arpl
fisttpl
xlat
xchg
imul
fmuls
fwait
add
xchg
arpl
xchg
shrl
sahf
inc
sub
push
xchg
add
dec
pop
ja
and
push
push
fwait
xlat
leave
mov
sysret
push
cmp
xchg
outsb
pop
dec
adc
push
pop
push
stc
div
loopne
sub
loop
push
xlat
pusha
mov
arpl
dec
and
mov
xor
inc
fwait
adc
and
sub
out
je
ret
cmpsb
fcomip
jl
and
movsl
push
cmpsl
mov
jmp
lahf
dec
fisttpl
aad
loope
dec
gs
lahf
xor
movsb
push
sbb
mov
nop
int3
mov
cmpsl
pop
cs
jb
sub
xor
mov
icebp
xchg
stos
jno
bound
adc
cmp
and
lcall
aad
jmp
fsubrs
push
pop
xor
cmp
sbb
imul
adc
push
mov
loopne
loop
stos
inc
lea
fnstsw
or
daa
jle
cwtl
les
scas
xlat
jae
pusha
xor
push
cmp
fwait
xchg
dec
cli
xor
push
push
jecxz
cmpb
push
sahf
xor
stc
mov
rcrl
xchg
out
into
loopne
sti
out
inc
shrb
cmp
hlt
pop
adc
data16
mov
jns
fisttps
add
std
mov
in
shlb
pop
mov
clc
lods
or
js
aaa
rcrl
std
stos
mov
xor
ds
cmpsl
push
xchg
push
cwtl
orb
push
cltd
sbb
push
repz
xchg
mov
addl
cld
daa
dec
mov
out
hlt
ret
jno
pop
add
xor
sbb
cmp
fwait
or
adc
adc
ds
add
or
leave
negb
pop
cmp
lret
xor
leave
push
jnp
sbb
sets
lods
pop
out
or
iret
mov
imul
xlat
dec
insb
xchg
out
xchg
lods
int3
xchg
dec
mov
mov
jmp
shrl
mov
jge
notb
stos
cmpsl
push
sub
cwtl
mov
mov
pushf
setl
pop
jne
fdivp
cmp
push
js
push
mov
out
imul
or
push
dec
not
je
or
mov
and
push
pushf
push
inc
lods
mov
cmp
pop
in
mov
dec
inc
adc
fwait
pop
lods
shlb
inc
pop
clc
loopne
lods
xchg
xchg
dec
xchg
fldenv
pop
dec
xor
addr16
mov
testl
cwtl
dec
push
xor
inc
push
scas
aaa
and
inc
leave
xchg
lock
mov
mov
out
mov
pop
mov
xchg
ss
jb
inc
lcall
sbb
mov
dec
xchg
outsb
test
xchg
xchg
or
jbe
lret
lods
sbb
jno
lret
push
ret
adc
sbb
arpl
cmpsb
dec
sub
jno
in
cmp
stos
sbb
adc
push
push
jle
std
pop
mov
and
cwtl
inc
xchg
or
out
sbb
cmp
or
stos
ljmp
push
push
mov
mov
push
roll
stos
cmpsl
mov
insl
ss
jl
shll
xchg
and
mov
mov
lcall
nop
cli
jne
adc
cltd
push
xchg
loopne
mul
into
test
fldt
ss
jge
add
jecxz
and
mov
xchg
aad
mov
dec
or
ret
dec
fdivp
push
cld
mov
daa
sarl
insb
mov
icebp
or
mov
aas
inc
lcall
xor
add
divb
mov
cmp
movl
mov
add
sub
movsb
inc
nop
or
stc
std
nop
cmpsl
mov
sti
out
xchg
repnz
xor
mov
lds
rcrl
add
sbb
ja
daa
mov
mov
mov
and
xchg
nop
add
adc
mov
sbb
dec
mov
jno
push
fsubrl
jne
loop
jecxz
repz
fists
sub
xchg
mov
sbb
cmp
fisttps
inc
lret
adc
setno
fucomp
sti
or
aam
push
dec
sbb
xor
or
inc
sbb
and
cmpsl
shrl
fisttpll
push
mov
mov
out
iret
insb
add
push
sahf
movsb
loopne
sarl
cmp
xchg
jns
nop
push
xchg
and
push
mov
bswap
and
insl
les
lea
inc
mov
pop
cwtl
xchg
sbb
cmp
fnstsw
fldcw
add
jno
mov
mov
mov
mov
jbe
push
mov
dec
fisubs
pop
fistl
xor
test
inc
ja
clc
sub
add
mov
int3
int
adc
push
inc
mov
gs
push
jno
jno
mov
adc
mov
adc
inc
push
int3
adcb
or
pop
shrl
outsb
mov
jo
jge
or
scas
xchg
adc
outsl
pop
push
lahf
leave
popf
mov
ret
push
xor
push
fsub
mov
push
scas
jg
dec
jge
push
sbb
add
fcmovbe
inc
jae
inc
imul
sbb
loop
jecxz
inc
adc
ss
cmp
rcl
cmp
or
cmp
test
mov
jnp
lods
jmp
jno
icebp
rolb
fs
repz
js
xchg
jnp
pop
pop
mov
rorb
pop
dec
mov
das
jecxz
sub
out
pop
push
dec
inc
mov
fsub
test
pop
inc
das
inc
adc
xchg
cmp
ljmp
jp
js
xchg
pop
cwtl
cmp
clc
add
aad
not
and
out
arpl
sbb
jl
dec
in
inc
and
je
lret
sbb
int3
aaa
mov
dec
mov
icebp
jp
bound
xchg
jno
or
jb,pn
mov
or
pusha
xor
fdivs
mov
pop
test
dec
xor
and
shll
test
outsb
std
dec
pop
rol
add
ret
outsb
test
adc
insb
call
sbb
insb
idiv
cld
enter
and
aas
scas
xchg
push
dec
jae
jb
pop
sub
test
loop
cmpsl
std
test
test
out
pop
sti
mov
mov
cld
int
xchg
pop
data16
or
shlb
leave
leave
mov
mov
jmp
xor
push
stc
aad
jle
and
inc
sti
mov
iret
cmp
out
cmp
icebp
ja
movsl
fsubrp
mov
out
jge
imul
nop
int
push
test
adc
jp
cltd
or
mov
jle
xchg
out
mov
cmp
pop
push
fs
xchg
mov
jle
jns
mov
ss
mov
jg
jecxz
cld
jae,pt
shlb
sbb
gs
dec
jns
gs
jae
jecxz
pop
out
or
jo
sub
mov
jg
mov
mov
in
bound
daa
jne
and
dec
test
hlt
mov
stc
mov
test
js
and
js
push
cmpsl
test
je
mov
incb
pushl
jne
shr
popa
mov
sub
cmp
imul
xchg
les
rorl
mov
push
sub
movsb
mov
push
aas
xchg
adc
mov
out
fcoml
test
popf
ja
jmp
in
mov
lret
in
ds
enter
add
call
sbb
insb
ss
inc
dec
sbb
cmpsb
sahf
sub
dec
push
push
inc
dec
mov
jnp
insb
test
addr16
movsl
iret
or
lock
test
ds
mov
negb
ss
ja
pop
jne
lahf
xchg
outsl
mov
jmp
xchg
iret
enter
sub
cmp
cld
sub
sub
stos
adcl
pop
out
test
jmp
test
adc
je
push
lods
push
int3
jp
stos
sub
aas
mov
sbb
adc
nop
cmp
jnp
jbe
sub
pop
dec
sub
inc
ficomps
jns
fisubl
into
pop
icebp
add
push
inc
in
in
pop
inc
insl
ret
mov
mov
test
push
push
gs
dec
nop
test
and
addl
adc
iret
pushf
pusha
and
dec
xor
cmp
scas
mov
and
add
xchg
mov
pushf
cld
pop
push
push
xor
lds
out
sub
sub
aam
filds
cmpsb
cmp
daa
add
xchg
iret
bound
dec
mov
add
cltd
lcall
sbb
adc
test
mov
mov
or
mov
xlat
stc
cmp
cmp
stos
lret
xchg
gs
mov
and
popa
idiv
jno
in
xchg
jle
lret
adc
flds
insl
insb
add
js
pop
lea
fwait
int3
mov
add
jbe
lods
xchg
fwait
xor
mulb
push
ret
mov
repz
sar
xor
outsl
vpmacsdql
stos
jecxz
dec
js
sub
addr16
popf
roll
adc
js
fstpt
pop
mov
xor
cmpsl
sbb
pop
repz
enter
xchg
xchg
es
sbb
push
lods
adc
inc
pushf
xor
je
js
outsb
pop
xchg
mov
stos
out
popa
adc
xcrypt-cbc
cmpsl
adc
push
outsb
sbb
movsl
loop
negl
adc
adc
mov
in
xor
dec
sbb
lods
adc
mov
jecxz
mov
nop
xor
mov
imul
popa
mov
push
std
add
outsl
loopne
lods
jle
jecxz
mul
leave
xchg
aad
adc
jb
jg
rol
sbb
in
aam
fs
dec
mov
dec
out
mov
or
mov
sbb
adc
xor
add
push
xchg
ljmp
ss
sbb
test
and
xor
inc
ljmp
add
push
mov
pop
sti
push
dec
rcll
stos
xor
cmp
mov
fs
cld
pop
sbb
rcrl
mov
aaa
jp
lea
rcrl
test
iret
fsubl
cmc
inc
int
push
jge
dec
cmp
hlt
push
jae
andb
mov
es
mov
insb
cmp
adc
jno
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cli
sub
mov
inc
sub
popa
or
add
fisubl
lret
rcll
loope
xchg
pop
xor
jne
inc
sub
add
pop
push
dec
bound
mov
movsl
enter
call
jne
inc
sub
and
push
cmc
mov
enter
call
jne
pop
sub
dec
sub
cwtl
push
stos
iret
aam
test
fsub
cmpsl
fisttpl
gs
sbb
xor
lret
jae
nop
aam
outsb
inc
jle
shrl
dec
lea
push
cmp
test
xchg
or
aad
and
loopne
test
dec
lcall
shll
xor
cwtl
pusha
fdivl
mov
call
jne
inc
sub
add
push
or
ret
testb
out
call
mov
add
sub
cmc
cmp
int
cmp
push
xchg
sti
inc
mov
aam
aas
push
loope
rolb
sarb
or
push
sub
and
push
in
mov
mov
call
jne
inc
inc
push
pop
jae
pop
sbb
push
cwtl
mov
lea
enter
test
jne
xor
or
jns
pushf
fsts
xlat
cmpsb
ficoml
or
push
and
and
dec
xor
cwtl
in
cmc
mov
movsl
enter
call
jne
inc
sub
and
push
cmc
mov
movsl
enter
call
repnz
fs
inc
cmpsb
sbb
xchg
mov
mov
fstps
pushf
sub
lods
movsl
mov
fs
xchg
mov
je
xchg
push
lret
in
inc
shll
xor
inc
dec
scas
int3
xchg
gs
int
jg
clc
and
outsl
pop
xor
jge
push
cmp
pop
xchg
inc
pop
aas
pop
xor
inc
add
xor
inc
test
inc
xchg
or
cmp
shl
pushf
enter
js
pop
mov
test
add
xchg
add
fnstenv
adc
add
pop
xor
shl
pop
sti
flds
jmp
cld
into
daa
popa
clc
cmp
and
lods
push
jnp
mov
jne
sbb
xor
inc
dec
jle
insb
add
scas
data16
shlb
xchg
movsb
push
aam
in
inc
mov
pop
scas
xchg
fadds
mov
jns
testl
test
jo
fwait
shlb
pop
outsl
jge
jae
jae
push
sub
test
cwtl
aam
out
add
push
hlt
inc
xor
leave
jns
jg
sbb
mov
iret
stos
addl
icebp
jmp
fistpl
mov
aas
inc
dec
push
add
sar
sarb
fcmovnb
cmp
add
hlt
clc
test
mov
aam
sub
add
add
mov
imul
and
push
out
popa
icebp
icebp
cmp
xchg
pop
int3
decb
loop
push
xchg
loope
fldenv
clc
fcompl
jae
sub
mov
mov
lock
inc
aas
push
fwait
or
mov
mov
sub
inc
cmp
cld
xor
xchg
lret
or
cmpsl
es
jo
stos
cli
push
repnz
icebp
sub
icebp
or
test
adc
mov
aas
arpl
fucomi
pop
add
xchg
lock
cmp
push
divb
jge
push
sti
outsl
fisttpll
mov
or
cli
clc
pop
and
outsl
ja
aad
lock
shrb
test
lods
hlt
jg
push
xor
jecxz
sub
pop
repnz
push
lcall
mov
loope
subl
loopne
test
or
js
push
mov
pop
movsb
mov
cli
fs
xchg
les
fsubl
out
sbb
add
mov
jle
sbb
fldenv
xor
iret
sub
jp
xor
xchg
adc
fistpl
adc
decl
sahf
in
cld
fdecstp
jmp
daa
aas
ja
pminsw
mov
fistl
outsl
sbb
mov
mov
push
push
sbb
mov
cmovp
xor
jl
pop
mov
pop
push
shlb
dec
push
jecxz
shrl
push
xor
rcll
ja
add
movzwl
mov
sbb
mov
xorb
mov
sti
and
js
pop
mov
sub
xor
int
add
mov
insl
dec
sti
pop
sub
std
iret
stc
lods
pop
mov
sarl
dec
imul
iret
std
push
xchg
dec
call
pusha
xchg
aam
jb
push
out
push
sub
inc
push
inc
dec
pop
push
les
inc
mov
repnz
mov
pop
sbb
and
cmp
int3
mov
out
sbb
add
jns
enter
mov
add
cld
xchg
mov
and
out
cmc
sbb
sbb
mov
sub
push
in
outsl
pop
out
sbb
out
push
or
pusha
lahf
xchg
test
dec
jne
addb
pop
in
xor
adc
mov
xchg
dec
fldcw
fisubrl
dec
std
push
xchg
xchg
adc
aaa
cmc
faddl
and
imul
movsl
jae
push
mov
xor
mov
mov
jnp
mov
inc
jnp
jge
out
adc
and
ds
or
inc
js
int
ja
or
popa
je
mov
cmc
inc
idivb
dec
pop
aad
jae
cmp
inc
inc
shll
fs
lea
hlt
add
outsb
mov
aaa
loop
jbe
xor
stos
fwait
ret
push
add
cmpsb
out
xor
test
inc
mov
add
out
dec
mov
jmp
jmp
xor
cmp
jg
adc
dec
rolb
xchg
or
hlt
cltd
shl
inc
jne
in
or
sahf
jecxz
add
les
cmp
or
push
mov
and
dec
shll
xchg
fcmovnu
add
jb
push
mov
pop
xor
idivl
xor
and
cmpsb
mov
xor
repnz
lcall
loope
mov
mov
inc
aad
mov
into
xchg
movsb
insl
cmp
arpl
add
enter
push
push
push
outsb
lret
enter
or
sbb
daa
xor
pop
daa
xor
jb
jmp
inc
gs
lods
sti
add
sub
aas
test
aad
fs
out
js
mov
jg
faddl
pop
inc
js
xchg
popf
aad
sub
inc
aas
push
push
mov
scas
mov
cmp
fbld
push
mov
sbb
gs
sub
icebp
fiadds
cmpsb
mov
insl
mov
gs
sub
testl
jmp
push
in
mov
enter
xor
jo
imul
aas
ret
rcrb
add
xchg
jle
faddl
jp
add
inc
cwtl
arpl
inc
stos
outsl
xchg
stos
and
inc
fldl
and
and
add
push
jmp
aam
cld
int
sbb
test
mov
into
cmp
fucomip
out
ficoms
lds
imul
inc
stos
add
jle
std
dec
xchg
int3
push
addl
jge
mov
jle
jmp
pop
int3
lea
mov
xchg
lods
xor
cmc
pusha
pop
test
mov
ficompl
aad
mov
aas
fdiv
dec
sbb
insb
dec
xchg
mov
in
adc
in
stc
ret
pop
out
dec
pop
pop
fldcw
sbb
dec
jge
pop
pop
or
cmc
hlt
cmpsb
pop
pop
sub
pop
or
pop
xchg
in
dec
inc
jecxz
int
rol
mov
pusha
dec
cli
xchg
je
cs
andb
jl
adc
sbb
cmpb
fisubl
add
adc
shl
or
mov
fcomi
xor
in
mov
and
addb
fiaddl
mov
adc
lret
loopne
or
xchg
mov
fmul
mov
mov
aas
adc
or
arpl
in
popf
adc
pop
push
and
and
mov
xor
fstl
jl
inc
es
push
adc
scas
or
pop
int
add
push
push
xchg
rcrl
lahf
or
adcl
scas
je
lods
push
inc
pop
imul
bound
cs
lcall
fldenv
jecxz
sub
fistl
aad
xor
xchg
repnz
push
pop
mov
jnp
add
push
and
adc
jmp
jp
jae
data16
mov
pop
movsb
push
inc
imul
out
sbb
lret
imul
roll
sbb
pcmpgtd
fildll
sbb
push
outsl
iret
mov
inc
out
and
into
testb
mov
or
add
pusha
cld
xchg
mov
js
pushf
sbb
cmp
pop
fistpll
outsl
out
push
les
imul
std
cmp
push
cmp
cmpsl
pop
std
lods
xor
xlat
sahf
mov
cs
jae
push
mov
aas
stc
js
lahf
fisttps
rorl
sbb
or
mov
pop
enter
sbb
dec
pop
xchg
inc
sbb
cmp
or
std
cmc
test
add
popa
push
xlat
sbb
xchg
out
popa
enter
pop
pop
jmp
aad
mov
cmp
cmp
notb
movswl
adc
push
push
ss
mov
xor
bound
pop
and
push
prefetcht1
ret
jae
mov
movb
sbb
xchg
scas
cli
lret
add
mov
xchg
in
outsb
mov
repz
jnp
fsubrs
lret
add
fisttpl
mov
aaa
jecxz
dec
jb
cmp
mov
mov
sbb
mov
lahf
cwtl
in
add
cs
test
aad
sbb
push
cmp
frstor
push
js
mov
jp
imul
push
rcr
enter
push
mov
xor
push
lds
adc
xchg
mov
enter
push
jmp
dec
mov
mov
sbb
push
scas
aam
and
inc
pop
clc
int
lret
insb
mov
sub
out
into
jl
xor
lods
popa
xor
fldt
arpl
ja
sahf
push
and
jg,pt
mov
outsl
lea
loope
push
fmuls
pop
add
adc
push
add
nop
mov
pop
hlt
dec
pop
cmp
je
into
or
adc
push
das
add
xor
test
and
imul
rorb
cmpsb
std
adc
dec
test
sbb
cmpl
in
aaa
int3
cmp
into
lret
jmp
mov
mov
insb
and
pop
insb
call
sub
cmp
push
dec
sarb
mov
scas
and
loopne
dec
repnz
cmpsb
loop
dec
lods
add
and
xchg
pop
int3
sub
jb
out
test
and
sti
jb
mov
idiv
ljmp
ds
daa
test
pop
rol
xor
mov
xchg
xchg
jg
xchg
sub
lock
dec
clc
ds
xchg
fsubs
inc
dec
cmp
pop
cmp
mov
xchg
mov
loopne
inc
dec
scas
and
test
dec
mov
mov
mull
movsl
dec
aad
in
push
out
sbb
lcall
lods
push
pop
xor
or
es
test
jmp
sub
inc
fiaddl
jbe
ja
in
jno
jae
outsb
add
dec
test
xchg
dec
in
mov
pop
add
rcrb
jmp
repz
mov
lcall
stos
pop
cmp
dec
sub
daa
mov
pop
push
and
jmp
les
loopne
add
test
insl
frstor
cmc
ljmp
scas
cltd
js
jmp
idivb
jae
shlb
push
mov
cmp
imul
mov
loop
das
push
mov
icebp
dec
push
or
adc
xlat
movsb
add
popf
mov
sub
mov
mov
jge
mov
pop
scas
repnz
push
jge
je
lcall
and
push
sub
addb
push
out
xor
cmp
jmp
push
sub
mov
ss
adc
inc
inc
jno
xor
mov
mov
popa
je
xchg
cli
push
pop
add
aam
out
test
xor
xchg
dec
cmp
inc
in
or
cs
push
insl
add
add
and
cmp
cmc
cmp
sub
clc
loop
flds
xchg
lods
test
addl
repz
cmc
jl
pop
or
lahf
imulb
mov
push
adc
dec
mov
pushf
sti
popf
inc
scas
and
and
iret
mov
sub
mov
jbe
divb
out
and
lods
inc
movsb
xchg
stos
scas
lret
decw
mov
in
cli
cmp
pop
xor
sub
mov
into
in
add
push
insb
call
bound
arpl
test
push
sbb
movsl
cmpsb
loope
push
into
in
test
mov
adc
in
fbstp
pop
cmp
push
loope
jb
sub
inc
rorl
inc
loopne
and
inc
out
push
stos
adc
sbb
cltd
fisubrl
leave
jne
mov
mov
sbb
sahf
std
cmpsb
mov
pop
int3
out
arpl
mov
dec
xchg
cmp
jae
out
and
das
xlat
mov
dec
dec
adc
andl
mov
inc
mov
xor
pop
jmp
cmpsl
pop
test
fdivl
into
jg
jg
xchg
sbb
hlt
fsts
in
xchg
ss
fstps
shrl
popf
push
cmpsl
ljmp
sbb
mov
mov
lret
in
push
cmpsl
jle
mov
and
and
dec
enter
add
xchg
cmp
fdivrs
loop
fimull
in
dec
sbb
iret
je
adc
stos
push
mov
addr16
out
ss
pop
std
mov
jns
popa
loopne
in
cltd
mov
xlat
ds
dec
fcomps
dec
out
push
inc
cli
push
sbb
inc
and
add
inc
jo
dec
pop
sub
pop
mov
adc
sbb
or
inc
and
dec
outsb
adc
adc
xchg
xor
lahf
pop
std
dec
cltd
sub
mov
bound
sub
push
test
fs
or
xor
cmc
push
std
add
cmpsb
jb
inc
cld
pop
jno
nop
mov
stos
sbb
fwait
add
mov
mov
pop
mov
jp
mov
insl
pop
adc
test
and
sahf
pop
in
jg
and
sub
lods
arpl
iret
or
stos
mov
jle
test
rclb
sbb
enter
pop
push
jb
jae
dec
pushf
cwtl
sti
shl
mov
mov
inc
push
sti
sbb
xor
cs
decb
xchg
mov
mov
xchg
jo
xor
or
ss
and
or
xchg
xchg
mov
or
out
in
jmp
cltd
jmp
mov
ljmp
insl
lock
dec
lahf
and
jp
mov
jnp
sbb
xchg
add
lcall
outsb
jle
ret
cmp
and
cmp
outsl
outsl
mov
lock
sbb
mov
inc
pop
xchg
bound
add
xchg
xor
gs
xchg
cltd
dec
std
cmpsb
hlt
or
adc
dec
dec
fldl
fs
sbb
jl
mov
mov
mov
data16
cld
js
in
or
sarl
es
lds
lea
arpl
lock
push
xchg
jae
inc
pop
jns
ficomps
add
call
add
pop
in
shlb
xchg
cmc
xchg
outsb
outsb
or
sub
mov
jmp
dec
imul
lods
adc
add
test
xor
cmp
leave
lahf
and
inc
sbb
or
mov
mov
les
sbb
movsb
pop
movl
cmpsl
mulb
lcall
mov
out
stos
jne
outsl
imul
scas
in
test
add
lds
sub
xor
pusha
icebp
or
insl
bnd
rcrb
je
xchg
cs
push
enter
adc
push
ljmp
mov
fwait
dec
dec
adc
sti
push
popf
fsubl
xor
cs
rcr
and
fcomi
mov
popa
pop
mov
fldcw
jg
sbb
cmc
fldcw
repz
dec
dec
adcb
in
mov
lcall
fisubs
pop
mov
inc
mov
and
pushf
rcll
xchg
jp
inc
adc
mov
nop
orb
mov
fiadds
xlat
fisubrl
jbe
fldl
test
mov
mov
ljmp
mov
bnd
jp
dec
mov
pop
push
push
sub
lea
loopne
cmc
bound
ret
push
aaa
dec
sbb
shlb
dec
mov
test
xchg
push
roll
push
movsl
cmp
inc
xor
enter
ss
mov
push
hlt
mov
inc
lods
lcall
cwtl
dec
push
pop
xor
loopne
inc
push
loop
lret
lods
test
fnstenv
fs
inc
adc
mov
repz
lea
xchg
sbbb
dec
dec
xchg
leave
lods
fsubs
jl
pop
add
inc
in
div
and
and
push
sti
dec
ret
pop
xor
lahf
pop
add
mov
push
fcomi
or
push
jo
fst
xchg
dec
adc
adc
movsl
inc
xor
in
lods
pop
sbb
lods
push
or
sub
popa
xchg
sbb
mov
bound
push
aam
lcall
shl
insl
fmuls
mov
addr16
and
fiaddl
xlat
or
call
outsl
jmp
pop
testb
out
lret
sbb
sub
inc
cmp
mov
ror
cli
loop
and
scas
and
addb
pop
xchg
jg
cmp
sbb
add
inc
jo
fs
int3
xchg
and
mov
pop
xor
fcomip
push
shlb
pop
sub
jl
or
dec
mov
mov
push
arpl
notl
test
test
dec
sbb
dec
pusha
and
dec
push
xchg
xchg
xchg
pop
sti
dec
test
mov
ret
shll
sahf
sbb
jbe
cmp
xchg
bound
cmova
push
shrb
or
push
dec
pop
mov
mov
add
sub
xchg
xchg
fstpl
orl
add
repz
addr16
jmp
in
leave
stos
aas
xor
mov
lret
int
add
fsubrs
mov
sti
ds
hlt
mov
aam
sbb
cmc
test
inc
jp
ja
sbb
cmpl
adc
pop
dec
dec
popf
adc
cltd
ss
js
or
clc
fwait
cs
jbe
das
jle
icebp
xor
outsb
sahf
in
mov
cmp
hlt
aad
push
dec
pusha
aam
xor
lret
mov
orl
nop
pushf
add
sbb
mov
js
sbb
inc
fistpl
mov
mov
mov
shlb
shlb
xor
adc
cld
les
cmp
xchg
push
inc
xchg
scas
mov
adc
cli
inc
cmpl
lds
fwait
lahf
xor
repnz
cld
lret
imul
dec
js
jp
pushf
test
inc
adc
stos
mov
jg
xor
mov
jge
popa
mov
dec
and
loope
lds
xchg
inc
pusha
cmp
out
or
add
mov
jge
data16
popa
jmp
inc
mov
mov
and
mov
jns
or
xchg
loop
or
inc
loopne
mov
sti
inc
pop
je
pusha
sub
mov
xchg
and
add
jmp
adc
pushf
loop
mov
or
xchg
pop
out
int3
aaa
pop
test
and
add
insb
xchg
aaa
pop
cmp
shrl
dec
fmull
jmp
pop
jge
or
gs
call
xchg
int3
rclb
je
pushf
sbb
xchg
jecxz
int
int3
int
or
lcall
sbb
mov
arpl
xchg
push
lods
std
imull
cltd
mov
insl
mov
imul
in
rolb
outsb
pusha
xchg
cmp
das
jecxz
cmp
sbb
add
mov
mov
stos
scas
push
cmp
lret
pop
leave
push
xchg
gs
lods
lahf
pop
stc
mov
out
inc
test
or
xor
arpl
mov
shl
mov
decl
pop
jmp
ss
dec
push
jle
mov
fnstsw
xchg
adc
pusha
insl
cmp
jg
frstor
ljmp
int
adc
push
inc
dec
mov
and
sub
jno
out
andb
pop
add
xchg
roll
imul
je
fucomip
leave
jb
xchg
notl
cwtl
xchg
ret
subb
jp
sahf
in
popa
les
test
add
lret
ljmp
in
loopne
push
iret
and
daa
xchg
xor
or
neg
cmp
push
popa
cmp
std
inc
fsubs
xor
iret
movsb
in
stos
push
aam
fnsaves
lret
cmovnp
lods
add
cwtl
adc
mov
rclb
imull
jp
adc
int
cmp
cmp
or
pop
dec
jecxz
xor
jmp
scas
andl
aad
sbb
addr16
sub
mov
xchg
scas
roll
sbb
fdivrp
fldl
pop
arpl
pop
pop
mov
lahf
cld
imul
mov
test
adc
sarb
cmp
aad
dec
bound
flds
out
ss
pop
ds
jl
mov
cwtl
pushf
mov
fidivrl
dec
cmpsl
push
xchg
scas
xchg
call
call
push
into
loop
scas
push
arpl
inc
shll
pusha
dec
cltd
jge
inc
call
sbb
inc
fld
push
mov
dec
pop
add
aam
repz
cld
and
cmp
ss
das
testb
dec
int3
repz
insb
xlat
test
xorb
dec
xor
mov
fwait
or
push
xor
jbe
es
sbb
insl
int3
xchg
jo
mov
mov
push
inc
jnp
test
imul
mov
out
sub
ret
xor
jns
int3
adc
sbb
ret
repnz
cmp
orl
cmpsb
sbb
sub
and
push
cmc
mov
movsl
enter
call
jne
inc
sub
and
push
cmc
mov
movsl
enter
call
jne
inc
sub
and
call
cmc
mov
movsl
enter
call
jne
inc
sub
and
push
pop
adc
test
test
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
jge
add
dec
xor
xchg
in
cmc
hlt
test
xchg
aam
les
adc
add
je
fs
push
and
movsb
cmc
xchg
in
cmc
hlt
ljmp
xor
and
adc
add
je
sub
sub
in
loope
hlt
rclb
mov
inc
inc
cmp
insl
and
xor
jl
outsl
sahf
daa
xorl
loopne
jmp
into
fildl
stc
leave
je
fs
or
sub
mov
movsb
xchg
cmp
inc
dec
push
jle
dec
pop
and
sub
or
push
test
js
movsl
outsl
xchg
push
les
xlat
jne
int
add
inc
lret
sub
movsb
test
push
dec
dec
out
push
mov
lock
inc
push
test
iret
xor
sbb
pmaddwd
les
test
call
pop
inc
out
xchg
lock
leave
repz
fs
in
adc
xor
inc
and
adc
add
je
fs
mov
movsb
adc
in
aam
fistl
inc
push
push
es
pop
adc
jp
dec
rclb
rcll
ljmp
inc
add
ja
inc
push
adc
adc
pop
mov
test
mov
adc
push
xor
fs
mov
movsb
aad
in
cmc
hlt
test
xchg
aam
les
adc
add
je
fs
mov
movsb
aad
in
cmc
hlt
test
xchg
aam
les
mov
jnp
movsb
pushf
xchg
ss
fstpt
add
jmp
test
xor
xor
jmp
sub
das
fsubrp
mov
nop
xor
cmp
jns
gs
sti
sti
cwtl
daa
push
sub
xor
dec
jmp
and
or
or
arpl
aad
adc
fisttpl
jnp
xor
cmp
and
pop
repz
mov
dec
jne
or
jne
int3
mov
std
cmp
sti
xchg
or
fnsave
add
push
das
cs
xchg
das
or
hlt
adc
jge
mov
fwait
add
sub
or
xchg
xchg
pop
sbb
pop
iret
mov
ret
out
int3
cmpsb
ss
pop
scas
xchg
xchg
lret
or
lods
out
push
imulb
mov
sub
sahf
in
pop
cld
jmp
icebp
and
xchg
push
popf
push
inc
jmp
bound
xorl
push
pushf
sub
clc
into
push
or
movl
stos
add
sub
push
sub
dec
xchg
jp
sbb
lret
int
jle
test
xchg
lcall
and
xchg
cli
out
sti
jl
xor
inc
test
jp
out
cwtl
int3
jb
jge
aas
mov
push
add
push
int
add
sbb
sbb
int
adc
adc
or
insb
ret
movsb
lret
ljmp
sti
fcom
jns
sub
mov
add
sub
cltd
repz
cmpsl
mov
gs
dec
push
inc
pop
fdivs
sbb
out
lods
push
out
mov
jmp
scas
jno
inc
bound
pop
mov
pop
push
lods
xor
inc
aas
fisttps
lahf
lods
loopne
jecxz
inc
push
iret
push
std
in
push
sbb
adcb
push
inc
aam
cmp
jecxz
into
push
jl
inc
lret
pop
xchg
cmp
cwtl
add
out
mov
into
cs
mov
fdivp
les
sahf
mov
push
and
add
insb
aam
andl
mov
pop
test
lock
push
fwait
arpl
fdivl
jns
push
push
mov
loopne
add
jnp
fwait
push
push
ljmp
int
add
push
test
jmp
pop
mov
jge
mov
fiadds
pop
insl
lods
push
cwtl
add
push
leave
and
mov
add
mov
test
outsl
xchg
jge
int3
jmp
arpl
mov
pop
inc
xchg
std
sahf
inc
xchg
jp
mov
gs
fistps
fdivr
xchg
and
push
je
movl
arpl
and
adc
sbb
dec
add
ljmp
mov
dec
cmp
mov
rorl
xchg
xlat
scas
sub
dec
outsb
divb
sahf
je
dec
sbb
shrb
xchg
add
hlt
in
inc
xor
or
dec
cmp
fwait
cmpsb
std
rcl
jp
xor
shll
or
jne
sbb
push
inc
fidivrl
sub
lods
push
inc
add
ficompl
or
adc
mov
mov
loop
mov
mov
cmpsl
lcall
push
packsswb
xchg
mov
shlb
sub
mov
std
adc
inc
cmp
js
add
arpl
iret
add
sbbb
fistl
or
sub
push
mov
call
fiaddl
arpl
mov
pop
mov
add
movl
mov
mov
sbb
mov
jmp
dec
xchg
xor
and
test
add
iret
fyl2xp1
scas
xchg
jp
xchg
ljmp
and
xor
out
jmp
mov
movsl
bnd
mov
imul
idivb
push
xlat
cmp
adc
jp
data16
mov
aam
or
test
push
dec
data16
stos
repz
mov
inc
inc
fisubl
cmp
jle
cmpsl
stos
out
test
xchg
mov
ret
in
sub
dec
jl
shrl
aas
cmp
outsl
or
dec
mov
mov
mov
insb
inc
lahf
arpl
mov
add
or
fcomip
push
loope
ja
lahf
cmpsb
or
mov
dec
or
sbb
mov
pop
outsb
into
ja
mov
insl
hlt
cmpsl
sbb
aaa
mov
aam
cmp
pop
pop
adc
out
jl
outsl
enter
shl
aas
pop
insb
or
pop
cmp
cmp
xor
fldl
add
xor
xor
sub
jb
loop
lret
rcll
stos
cmp
lods
std
arpl
mov
mov
fs
fcom
xor
sub
ds
mov
pop
jne
jno
xchg
test
cwtl
dec
in
mov
fildll
sbb
into
adc
loop
mov
loop
clc
test
or
push
cmp
bound
data16
cmp
push
aad
xor
dec
rcrl
and
xchg
pop
and
jne
cs
or
add
mov
fnstsw
clc
mov
or
push
cltd
cmp
xor
les
sub
test
dec
mov
lea
das
inc
and
add
jae
sbb
adc
les
adc
xchg
filds
inc
push
cmpl
ret
lea
movsl
xchg
fisttpl
mov
cmp
dec
lods
add
ret
fnstsw
inc
fsubp
int3
add
mov
mov
shr
int
mov
cmp
xchg
test
roll
push
stc
in
test
out
push
cmp
iret
sar
leave
and
imulb
mov
jae
ss
push
outsb
test
cmpsl
cmc
stc
ss
push
leave
pusha
lods
sbb
cltd
mov
je
xlat
push
cmp
adc
or
pop
mov
movsb
out
js
test
outsb
pop
and
in
movsb
lret
mov
adc
test
dec
mov
or
mov
jle
mov
and
addl
mov
aam
cmp
sbb
stos
push
insb
in
les
into
cmpsl
cmc
push
push
aad
scas
inc
mov
or
push
dec
push
jb
and
dec
inc
cmp
inc
out
xchg
clc
shrb
cwtl
jmp
clc
movsb
mov
adc
cli
push
push
push
js
cmp
aad
sub
xor
pop
cs
add
push
dec
imul
push
fldl
mov
int3
test
cltd
movsb
bound
sarb
xor
push
and
shlb
or
bnd
int3
mov
inc
xchg
aas
je
pop
fstl
inc
cmp
mov
push
push
data16
ret
pop
lds
rcrb
shlb
jns
and
inc
xor
fistps
loop
gs
cmc
add
ss
out
jno
sub
mov
aad
popa
sahf
jb
sbb
push
pop
push
add
test
fadds
in
inc
add
lahf
out
dec
pusha
mov
sbb
sbb
call
aas
pop
leave
nop
dec
add
xchg
insb
test
stos
insl
xor
xchg
aad
jno
loop
clc
mov
into
mov
sub
lahf
stc
adc
out
mov
xorl
loop
std
pop
push
mov
imul
iret
sub
filds
adc
sahf
cmp
jmp
cmp
test
mov
dec
pop
test
inc
sub
xchg
outsb
pop
in
mov
fiadds
push
mov
xchg
push
lret
mov
mov
cmp
mov
mov
sub
mov
cmpb
add
lea
push
sub
jb
popf
mov
fimull
es
add
dec
add
push
dec
sbb
ficompl
fdiv
stos
mov
adc
xchg
je
sbb
aaa
rcrb
cmpsl
mov
push
imul
push
jbe
mov
mov
push
sub
sbb
xlat
loope
stos
jb
and
test
xor
mov
sbb
lcall
sbb
cmpsb
gs
adc
js
jo
fiaddl
jg
sahf
jae
mov
jnp
jecxz
mov
and
lods
xchg
in
xor
sbb
mov
fdivl
sti
movsb
fs
int
mov
je
adc
nop
jp
dec
adc
and
mov
es
jle
fisubrs
dec
ljmp
adc
shlb
cmpl
cs
xor
fstpt
cmp
ret
sbb
daa
enter
adc
dec
test
add
enter
or
and
mov
jno
movsb
mov
mov
pop
aam
push
sub
add
roll
dec
stos
xchg
movsl
in
jnp
ret
ds
out
and
cmp
test
rcrl
add
ss
ds
inc
mov
mov
xchg
dec
pushf
ljmp
aad
sub
es
adc
jmp
mov
lods
les
not
push
ret
dec
pop
aas
mov
lret
mov
xchg
dec
je
jl
or
outsb
inc
outsl
sub
sbbb
aad
mov
sub
pop
xchg
rcrb
lahf
jnp
inc
icebp
xchg
in
aad
fcomip
jno
dec
adc
test
inc
arpl
lods
test
repz
enter
rcll
enter
insl
inc
cmp
cmp
pop
mov
jns
add
popf
nop
movsl
inc
cmp
dec
adc
out
inc
data16
pushf
shrl
sub
mov
repnz
sahf
cmp
fs
adc
push
loop
fisubrl
cmp
mov
push
and
js
or
xchg
cmp
inc
inc
push
stos
es
cmp
xor
mov
incb
outsl
jae
mov
pop
insl
lcall
dec
inc
dec
mov
lret
mov
pop
sbb
test
movsb
fmuls
jle
xor
xchg
dec
loope
into
movsb
inc
push
mov
mov
je
in
dec
push
push
jmp
sub
dec
in
push
out
xor
jno
pop
inc
cli
jg
sbb
inc
or
mov
icebp
xchg
xchg
mov
mov
shrl
push
inc
sub
pushf
cmp
sub
sti
call
icebp
addb
out
jb
mov
sbb
mov
loope,pn
pop
clc
scas
stos
cmp
test
aam
push
pusha
loop
adc
push
repnz
or
mov
imul
or
ljmp
es
ficompl
cmp
mov
sub
movsl
xlat
push
inc
mov
js
fs
cmpsl
adc
jl
mov
sbb
sbb
jg
jle
js
push
jno
inc
ror
movsl
subb
test
push
dec
push
jle
mov
inc
inc
jo
cmp
repz
out
div
adc
adc
ss
shll
ja,pn
and
aas
and
dec
arpl
jae
pushf
xchg
mov
xchg
loope
pop
lret
jp
inc
push
test
imul
inc
ret
jg
stos
shr
push
push
lcall
out
push
mov
mov
jge
mov
cmpsb
ss
fisttpl
movsb
aas
popa
iret
jg
push
andl
adc
xor
inc
jae
pop
and
iret
sbb
mov
pop
cmp
add
cmp
push
push
sbb
stc
and
outsb
adc
pop
imul
outsl
inc
sbb
xor
xchg
inc
mov
cmpsb
sti
jne
loope
mov
lahf
mov
int
mov
aad
dec
loope
mov
push
lock
jmp
inc
cmp
in
imul
lahf
in
sbb
inc
int3
jnp
aas
shl
push
sub
popa
dec
ret
in
rcll
xchg
mov
sbb
nop
push
in
repz
mov
mov
ss
test
cmp
test
or
sub
sub
adc
mov
adc
xor
dec
dec
sub
push
test
data16
xchg
inc
sbb
dec
addr16
mov
push
loop
clc
sbbb
ret
mov
cmp
pop
cmp
outsl
mov
sbb
movsb
mov
scas
data16
out
dec
sarl
neg
pop
jnp
repz
daa
sub
pop
add
push
jno
jl
inc
or
mov
inc
dec
or
lea
mov
movsb
mov
mov
xor
cmp
test
nop
stc
sbb
sbb
mov
cld
scas
mov
ss
adc
into
jne
data16
pop
or
xchg
fadds
scas
mov
sub
addr16
pushf
mov
inc
stos
nop
xchg
add
cwtl
decl
pusha
mov
les
sub
sbb
fnstsw
repnz
mov
sub
pop
enter
mov
scas
jge
icebp
inc
testb
daa
mov
shll
lret
sahf
push
out
fdivs
push
scas
call
repnz
jns
insb
xchg
xor
std
inc
add
lea
es
mov
mov
cmp
popf
cmp
jle
test
mov
cmc
cmp
adc
scas
fstl
mov
or
movsb
lea
mov
movsb
adc
pop
xchg
stos
popa
jle
scas
add
add
sub
gs
inc
mov
adc
int3
movsb
dec
out
cmc
rcrb
sub
out
xlat
pop
pushf
outsb
test
insb
outsl
cltd
mov
push
mov
cmp
mov
scas
add
pop
jecxz
sub
jno
mov
fsubs
ljmp
jecxz
pop
push
and
bound
jecxz
mov
sbb
and
sub
loope
push
and
and
xor
jnp
xchg
dec
out
pop
fwait
lret
mov
xor
scas
aas
movsb
push
adc
insb
iret
xlat
shlb
push
ljmp
insb
repnz
out
popf
js
hlt
sbb
movsb
addr16
push
nop
idiv
xchg
das
cmp
xchg
xchg
pop
mov
in
jb
ja
sub
ja
mov
std
xor
mov
mov
dec
sbb
in
loop
inc
les
lret
lcall
fnstcw
fwait
mov
mov
pop
mov
dec
loop
sbb
stos
inc
add
cli
pop
jbe,pt
loop
fxam
mov
inc
repz
push
inc
aas
jae
data16
sub
mov
aad
mov
dec
mov
icebp
loope
dec
das
ja
jge
add
lock
xlat
out
mov
cwtl
pop
push
insl
cmp
movsl
jns
cmp
leave
mov
pop
notl
int3
xchg
add
ljmp
insl
cmpsl
repz
pop
fucomi
mov
arpl
sahf
mov
std
stc
lock
dec
cmp
loop
shrb
sub
xor
insb
jno
pop
in
outsl
mov
mov
sub
cwtl
push
xlat
sbb
push
cmp
or
dec
hlt
fcmovnu
sub
fsubrl
and
daa
dec
inc
lret
sbb
or
cs
hlt
xlat
shlb
jl
mov
adc
or
divl
jp
mov
jge
enter
aas
lcall
fsubrs
adc
inc
push
xchg
inc
shrl
loope
jmp
jge
mov
inc
mov
and
enter
jbe
push
inc
push
cmp
cmp
jns
xchg
cs
cmpsl
sub
ja
xchg
popf
je
loope
xor
push
jbe
pop
push
jns
aaa
fnstsw
mov
ret
mov
pushf
lock
cmpsl
pop
scas
in
lods
push
lock
cwtl
sti
fstpt
call
in
mov
sbb
out
jae
dec
insl
lods
push
xor
inc
mov
adc
or
xchg
pusha
nop
xchg
add
cmpl
mov
add
push
subb
aas
adc
sahf
dec
fildll
test
pop
mov
lock
jmp
imul
sbb
stc
jmp
ds
pop
mov
dec
mov
bound
inc
xchg
and
imul
adc
stos
mov
add
inc
pop
testl
adc
xchg
gs
shr
enter
test
mov
xchg
push
iret
shr
aam
sub
xchg
xchg
jne
xor
push
out
inc
mov
inc
pushf
lret
xor
mov
adc
movsl
pop
cld
enter
popa
mov
inc
cmpl
fwait
stos
imul
inc
cltd
push
push
mov
adc
xchg
out
dec
ss
imul
stc
iret
inc
stos
addr16
add
scas
lods
mov
lcall
in
cmp
xchg
loope
in
adc
push
mov
sub
lcall
loopne
dec
daa
jp
mov
dec
sti
inc
loopne
ljmp
mov
sub
xchg
jns
adc
in
stos
inc
movb
shlb
fsub
pop
pop
sarb
sbb
push
cwtl
or
lea
dec
push
mov
push
in
dec
sub
lret
cli
push
out
and
mov
imul
imul
test
jo
lret
lock
mov
mov
adc
jge
inc
mov
pop
shlb
push
ret
xchg
andl
js
mov
and
negb
stc
movl
mov
call
call
xor
cmpsl
mov
dec
mov
xchg
xor
insl
push
movsb
xchg
push
pop
xchg
xlat
stc
cmp
je
or
cli
jmp
hlt
sub
sub
fnstenv
or
adc
jae
stc
jp
negl
push
subl
repz
lahf
cmc
es
xchg
arpl
gs
lock
jnp
adc
or
mov
test
cmpl
sbb
cmp
xchg
push
out
enter
es
pop
cli
scas
insl
and
ljmp
jo
pop
adc
push
pop
push
jl,pt
sbb
insb
aam
jecxz
mov
insb
pop
sub
lods
orl
mov
or
cld
das
cwtl
lea
dec
ds
fmull
lretw
dec
push
push
jne
movsb
mov
dec
in
add
mov
int3
xor
es
mul
jb
cmp
fidivl
icebp
jge
adc
dec
iret
cmpsl
dec
or
pop
test
fsubp
out
loope
cmpsl
je
ret
lods
int3
adc
mov
sub
xor
mov
mov
inc
ds
scas
fstsw
mov
adc
ljmp
jmp
and
jnp
push
adc
mov
sahf
jns
adc
mov
cmp
mov
dec
adc
imul
stc
lret
idivb
shll
ret
outsb
adc
stos
lcall
int3
addr16
inc
sub
stos
mov
jmp
adc
xchg
imul
divl
scas
jno
pop
cmpsb
daa
push
notl
int3
pop
das
mov
clc
std
mov
push
outsl
insl
cmp
jl
scas
adc
or
out
dec
pop
jg
xchg
imul
mov
dec
js
dec
fldcw
xor
scas
pop
nop
pop
lahf
not
rcrl
pop
dec
xor
inc
jecxz
fbstp
mov
adc
inc
push
inc
popa
push
out
mov
add
jae
std
test
pop
xchg
lea
lods
insl
pushf
push
sub
mov
inc
loope
mov
fbstp
clc
mov
mov
orb
sar
pop
sub
into
clc
sbb
ficompl
adc
mov
test
mov
repz
orl
rolb
stc
push
pop
test
mov
sti
imul
lcall
jbe
adc
movsb
add
cmp
lea
jnp
jl
or
movsb
push
shrb
jns
fsubs
mov
sbbb
or
sbb
jo
insb
loopne
test
ret
jecxz
jge
sbb
add
xor
jo
cmp
out
fistl
or
ficompl
jg
lret
inc
dec
dec
das
xchg
fisttpl
dec
adc
enter
inc
cld
xlat
xor
je
rol
je
push
lods
sub
into
cs
int
adc
mov
pushf
sarl
scas
mov
insl
inc
jmp
jmp
add
fs
daa
jge
inc
in
mov
mov
mov
push
push
adc
xchg
das
mov
rcll
jnp
cmp
xchg
subb
testl
adc
loope
test
scas
mov
add
and
popl
sbb
bound
ret
and
das
dec
add
xchg
out
push
dec
add
sub
xchg
push
pop
pusha
and
push
add
push
mov
mov
lds
inc
or
ficompl
dec
mov
enter
xchg
das
mov
pusha
adc
pop
inc
rclb
xchg
jp
sub
or
lret
lods
int
popf
inc
ss
jmp
sar
sbb
push
xchg
or
xor
mov
sar
mov
or
xor
ret
aas
mov
pop
cmp
mov
jbe
popf
sub
pop
push
cmp
inc
xor
mov
stos
push
sub
add
je
fs
mov
movsb
aad
in
cmc
hlt
test
xchg
aam
les
adc
add
je
fs
mov
movsb
aad
in
cmc
hlt
test
xchg
aam
les
adc
add
je
gs
mov
movsb
aad
in
cmc
hlt
test
xchg
aad
les
adc
add
je
fs
dec
cmp
ds
addb
cmp
push
mov
mov
js
push
sub
pop
sub
clc
cwtl
call
test
fsubrs
js
push
sub
jbe
dec
sbb
push
fsubs
enter
test
cwtl
repnz
js
push
pop
pop
or
cmp
addr16
fsubr
leave
xchg
jmp
int
xlat
mov
arpl
sub
xchg
imul
jp
ret
xor
mov
and
int3
mov
int
inc
adc
std
pop
or
mov
pop
adc
lock
xlat
loope
pop
mov
or
mov
sbb
sbb
cmp
mov
lods
dec
scas
aas
cwtl
call
test
int3
test
js
mov
popf
scas
call
fmuls
lds
xchg
adc
dec
pop
jne
inc
fstl
jmp
leave
cwtl
cmp
pop
or
dec
fsubrs
inc
pop
popf
sub
in
addr16
js
xchg
pusha
cmp
dec
jmp
sub
xor
or
cmpsl
adc
test
int3
enter
test
cwtl
clc
mov
sbb
pop
cmp
cmp
sbb
pop
mov
xchg
sti
jge
movsl
fisttps
fidivrl
popf
sub
dec
pop
fs
jne
jl
cmpsl
fisubrs
fisttpll
lock
jns
jge
push
sbb
pop
dec
dec
sbb
push
stc
xchg
test
cwtl
clc
mov
js
push
sub
pop
sub
js
push
fdivrs
test
cwtl
clc
mov
js
push
sub
pop
sub
js
push
push
lds
shr
jl
outsl
push
xor
test
jg
push
and
xor
add
jno
shr
test
clc
sbb
or
dec
adc
cltd
mov
js
xor
mov
mov
jl
xchg
jg
pop
mov
cld
push
ret
push
mov
xchg
mov
mov
cmc
mov
sbb
mov
jns
and
pop
pextrw
mov
mov
mov
pop
add
mov
and
loope
ret
jbe
lea
dec
cmp
fs
lds
rcll
jmp
cli
dec
mov
lds
stos
loopne
loop
data16
dec
jne
stos
daa
cmp
mov
clc
mov
cmc
in
sbb
mov
pushf
aam
fsts
sbb
inc
dec
sbb
fists
mov
jp
dec
out
call
mov
cs
push
push
mov
push
lret
fsts
fnsave
loop
sbb
xchg
aad
adc
jns
add
push
mov
shll
inc
pop
push
push
adc
repz
sarb
mov
outsb
xor
lods
jmp
dec
test
repz
mov
sbb
shlb
rolb
and
fldt
sbb
daa
inc
sub
jns
mov
mov
cltd
mov
or
mov
dec
popf
sarl
xorw
loop
dec
pop
jae
hlt
pop
dec
test
push
lret
movsl
inc
lods
stc
or
pop
mov
xchg
testl
movsb
xor
fnstenv
lcall
test
jo
mov
mov
arpl
ret
sub
stc
cmc
ja
rorb
mov
jl
jmp
push
ljmp
pop
in
xchg
sbbl
fidivs
mov
movsl
or
cmp
stc
cmp
inc
pop
es
cmp
shlb
mov
lret
icebp
outsb
loope
ljmp
add
xchg
stc
bound
or
push
xlat
sub
dec
sbb
insb
cmpl
arpl
lods
jnp
sub
add
adc
imul
subl
push
jb
fwait
mov
dec
cwtl
jae
and
insb
pop
hlt
gs
lahf
xor
and
mov
sbb
aam
pop
icebp
or
cld
sbb
mov
icebp
lods
nop
fistpl
xor
cmp
dec
jp
mul
jmp
ja
sub
lds
mov
in
adc
sbb
sub
pop
pushf
pop
rorl
ss
inc
daa
cmp
int
mov
mov
or
movsl
jle
add
sbb
push
int3
imul
cmp
jg
mov
test
xchg
cmp
push
inc
lret
cmp
xor
test
clc
xchg
jbe
cmpsb
and
push
icebp
in
dec
mov
lahf
sbb
loop
imul
adc
inc
mov
add
push
push
movsb
mov
inc
rolb
lcall
xchg
fwait
mov
push
mov
xor
push
jmp
lock
cli
mov
pushf
lcall
dec
cmp
jge
jne
icebp
dec
cwtd
test
xor
or
fiadds
sbb
jne
loop
pop
mov
or
sbb
out
add
pop
sbb
inc
mov
jae
gs
addr16
and
lods
and
in
sub
cmc
pop
mov
jp
sahf
mov
test
push
out
fcomps
inc
adc
mov
cmc
aam
inc
mov
into
mov
aaa
cmp
sbb
jg
lea
or
ds
loope
mov
stos
push
ss
outsl
lock
dec
jnp
push
lock
pop
xor
into
cmp
out
ret
lgs
iret
fisttpll
hlt
stos
sub
mov
dec
sub
jns
enter
pop
mov
imul
movaps
cltd
daa
out
sbb
xchg
in
sbb
dec
mov
xor
sahf
push
xchg
pop
pop
addb
rcrl
and
cmc
sub
add
ficomps
ds
add
jecxz
inc
pop
fcmovnbe
mov
popf
insl
xor
add
fdivrl
into
loope
dec
jg
xchg
pop
scas
mov
jecxz
out
xor
mov
xchg
mov
mov
and
mov
arpl
imul
test
jnp
add
xchg
cwtl
sbb
in
pop
js
add
sub
loope
fsub
sahf
outsb
pop
or
xor
and
xchg
cltd
stos
mov
dec
pop
mov
jle
aaa
cmp
cmp
aas
mov
and
pop
or
cmp
cli
jae
lahf
xlat
dec
xchg
test
into
sbb
dec
jge
mov
movsl
decl
adc
stos
aam
mov
or
pop
mov
push
xor
jmp
repz
fisubs
test
imul
and
dec
int3
mov
lcall
mov
hlt
vmwrite
push
aas
pop
dec
push
xchg
pop
mul
icebp
jne
insb
mov
push
lret
cmp
out
and
push
adc
imul
ja
in
lock
xchg
icebp
xchg
loopne
xor
mov
mov
cmp
stc
cmpsl
jl
popf
aaa
pop
or
push
mov
js
mov
inc
imul
jg
pushf
sbb
js
jp
cmpsb
mov
mov
std
mov
push
jae
mov
test
scas
push
sbb
iret
pop
push
filds
insl
cld
mov
popf
cld
mov
fwait
das
push
add
jle
data16
sbb
test
mov
daa
fadds
sub
movsl
shlb
in
ret
jge
push
fildl
test
xchg
cmp
cmp
cmp
gs
mov
jge
pop
pusha
int3
movsl
mov
inc
pop
or
jnp
in
iret
ljmp
sbb
and
loopne
and
xchg
mov
sbb
inc
jbe
ja,pt
pop
mov
rolb
das
ja
iret
pop
mov
dec
push
enter
mov
jmp
rclb
dec
cmc
shlb
dec
xor
mov
gs
bound
out
fcmovbe
cmp
add
add
enter
jecxz
shll
cmp
dec
mov
dec
ja
and
lods
sub
push
cmpsb
jbe
mov
dec
and
cld
popf
jp
pushf
jecxz
mov
push
rcr
jecxz
ficoms
outsb
mov
xor
dec
inc
das
icebp
fdivrp
cwtl
push
xor
sbb
mov
pop
mov
push
fdiv
lods
or
mov
int3
adc
mov
or
cmc
mov
sbb
jo
pop
xor
aas
lret
sub
jno
xor
outsb
mov
cwtl
shr
std
pusha
insl
ficompl
int
jg
mov
sub
imul
cmpl
add
lock
dec
jg
lret
dec
adc
mov
push
inc
xor
fadds
pop
sahf
in
jbe
and
fwait
and
mov
test
dec
sahf
inc
ficomps
int3
in
aad
loope
jno
aaa
mov
jmp
cmp
adc
inc
shrl
cmpsb
cmpsl
adc
cmpb
lods
pop
and
adc
insb
fstpl
dec
cmpsl
lahf
int3
je
lahf
vpminuw
call
xchg
lea
mov
jge
jle
sub
pop
ror
ret
mov
aad
loope
xlat
jle
mov
jno
mov
lods
lea
in
enter
cld
repnz
sbb
jns
add
mov
cmpsl
mov
mov
clc
lea
lret
or
jmp
inc
movsb
push
cmp
pop
fisubrl
mov
jmp
sbb
cmp
inc
or
xor
cmpsl
and
out
dec
insb
inc
push
sub
mov
pop
in
mov
and
loopne
cmp
cmp
push
xchg
inc
pop
out
shlb
inc
sbb
dec
inc
push
outsl
in
or
ss
scas
test
shl
mov
inc
sub
sbb
xchg
pop
mov
and
ljmp
or
sub
aam
xor
jp
push
inc
orb
sub
leave
in
out
rorb
push
ds
or
ljmp
pop
movsb
inc
pop
mov
cmp
mov
pop
fcmovnb
adc
mov
lret
pop
int3
dec
pop
sbb
cs
and
cmp
gs
adc
cmpsl
enter
fisubrs
into
mov
push
das
lret
inc
pop
ret
test
sub
mov
leave
das
mov
xor
stos
add
mov
les
ret
out
dec
mov
dec
pop
dec
push
sbb
aas
repz
popf
out
lcall
cmpsb
loope
int3
mov
test
cmpsb
cmc
lods
out
add
xchg
sub
xor
lret
xlat
cwtl
push
loope
aam
scas
mov
das
adc
xchg
mov
or
mov
or
pop
jl
repnz
loop
mov
mov
out
clc
xor
and
jne
dec
jbe
je
aas
or
push
stos
js
dec
sbb
nop
fsubl
adc
add
into
into
adc
cli
xor
movsb
sbb
icebp
mov
mov
insb
into
ja
popf
cmpsl
jg
lds
jo
pop
mov
repnz
xor
push
mov
stc
push
fstpl
jbe
dec
inc
cld
jae
lret
and
movsb
mov
xor
dec
xor
insl
fwait
adc
ret
dec
cs
xchg
cmp
add
sete
xor
mov
lret
scas
divl
cmp
or
jns
cmp
fimull
xor
repz
mov
mov
test
stos
ja
cmpsl
loopne
cmp
test
aas
mov
fnstenv
cmc
iret
adc
nop
cwtl
outsl
mov
or
js
lcall
faddl
dec
jno
jl
or
enter
inc
cmp
pop
or
scas
ret
cli
shll
loop
xchg
test
sub
pop
lahf
aam
je
lea
or
xor
dec
iret
sub
push
jae
mov
ficoms
shll
mov
inc
fsubs
xor
jmp
pop
adc
dec
add
fsubl
xorb
nop
cmp
repz
inc
jg
out
xchg
jg
insl
fcomps
icebp
mov
mov
pusha
sub
push
adc
ljmp
daa
outsb
movsl
jmp
fs
fwait
cmp
and
mov
cmp
fwait
insb
cmp
or
cmpl
jg
or
mov
add
or
test
mov
jo
add
iret
push
in
rcr
jae
push
cmpsb
adc
xchg
and
lock
jmp
cmpsb
and
mov
push
cmp
adc
orb
int3
mov
inc
in
ja
ficoml
inc
mov
xor
icebp
jl
cli
sub
test
xlat
pop
test
out
sbb
mov
mov
int3
shll
lret
inc
dec
mov
jb
and
lret
emms
push
push
daa
mov
xchg
cwtl
lds
or
aam
pusha
dec
mov
inc
iret
adcb
orb
adc
data16
movsl
mov
mov
test
loopne
sub
adc
pop
or
mov
insb
insl
into
push
mov
mov
aaa
ret
cli
push
loopne
jge
loop
add
or
int3
xor
neg
xor
daa
jecxz
inc
fcoml
push
jl
dec
pop
es
scas
fiaddl
mov
fcmovbe
cmp
leave
les
in
int
jmp
cs
mov
push
orl
pop
hlt
xchg
and
inc
lods
add
jmp
fistps
push
xchg
or
pop
lds
ret
dec
jne
dec
test
lock
dec
leave
mov
imul
dec
cli
cmpsl
pop
flds
pop
cli
and
or
aad
inc
lods
xchg
sbb
loope
out
jne
adc
dec
push
dec
jno
jle
jle
sbb
or
xchg
push
push
xor
or
pop
jp
push
pop
push
out
mov
popf
push
dec
mov
lcall
repnz
dec
jmp
dec
inc
ljmp
mov
inc
lahf
and
sahf
xor
lods
shll
ror
jecxz
and
push
or
repz
and
fs
js
inc
add
fs
setle
repnz
sarb
flds
cmpsb
out
xor
clc
imul
shr
cmp
or
jg
push
pop
in
xor
pop
and
mov
mov
cmp
sti
fisubrs
xchg
enter
jo,pt
jmp
andb
xchg
jae,pn
mov
subl
xchg
push
jb
call
js
stc
pop
inc
leave
or
bound
and
or
lret
enter
jg
add
enter
out
pop
test
sub
push
dec
xchg
pop
arpl
mov
gs
mov
mov
cmp
cmc
jno
dec
nop
xchg
pop
test
jle
lret
push
nop
mov
shll
scas
mov
pop
pop
xchg
pop
mov
in
in
adc
and
cmp
outsb
into
cltd
cmpsb
mov
je
imull
movsl
mov
imul
std
xor
outsb
mov
mov
pop
sub
mov
loope
inc
nop
repz
data16
js
mov
aam
mov
add
int
call
lcall
xchg
test
divb
loop
adc
cmpsl
fs
cmp
xchg
loope
mov
sahf
pop
icebp
jne
aas
sub
ds
jbe
jmp
push
imul
cmp
cmp
inc
xchg
mov
push
inc
mov
adc
inc
add
hlt
ficoms
ret
xchg
jmp
ret
repnz
dec
push
test
hlt
out
jns
mov
lock
adc
pop
daa
dec
js
or
sbb
mov
dec
or
mov
pop
out
add
adc
ss
push
or
call
inc
lods
dec
inc
add
out
fs
push
fs
or
sbb
inc
mov
je
loope
mov
jae
inc
andl
shlb
fbstp
sbb
adc
jbe,pt
sahf
fisttpll
push
adc
mov
jbe
push
push
pop
xchg
mov
mov
mov
popf
inc
je
fwait
push
stc
sbb
xor
jmp
test
mov
mov
xchg
mov
mov
xor
cmpsb
sub
sbb
iret
stos
fucomip
pop
dec
push
outsb
push
dec
int3
push
xorl
repz
sub
popa
jae
inc
fstl
rclb
mov
inc
push
clc
xchg
ds
xlat
xchg
sbb
add
rcrl
dec
adc
aaa
mov
subb
fbld
leave
nop
shl
cwtl
ljmp
jmp
sub
shrl
in
ret
das
mov
ficompl
test
jb
les
in
test
fs
cli
cwtl
aaa
insb
mov
add
fiaddl
nop
jno
or
inc
adc
loopne
in
int
xchg
sbb
fnstcw
inc
testl
pushf
pop
aas
xor
sub
lock
outsb
xchg
sbb
xchg
xorb
add
orl
push
out
push
xchg
jnp
scas
aam
sbb
mov
xchg
clc
cmp
lahf
cmp
jno
or
sbbb
lahf
inc
adc
lcall
hlt
je
ljmp
mov
xor
jae
imul
les
sti
out
push
andl
mov
xor
andb
iret
and
inc
jg
push
mov
sub
outsl
repnz
imul
orl
fucomip
push
mov
mov
push
and
mov
cmpsl
mov
loopne
xchg
add
cmc
sub
ja
lock
xor
dec
adc
xchg
add
push
mov
jmp
dec
mov
fisubrl
fwait
inc
lods
jnp
sbbb
adc
pop
jge
xor
cli
jb
sub
xchg
lcall
push
and
dec
xchg
and
mov
mov
loope
add
test
push
jne
sahf
jo
cmp
push
cli
sti
jg
xchg
int
lcall
xorl
pop
push
test
shrb
popf
imul
adcl
pop
cltd
enter
mov
cmp
fisttpl
add
add
mov
sarb
xchg
xchg
dec
mov
aas
inc
flds
sbb
scas
cmpsl
hlt
jns
mov
push
mov
bound
jecxz
js
lcall
pop
sarb
mov
sbb
mov
repnz
xchg
jge
xchg
lret
stc
dec
outsl
faddl
fdivs
dec
sbb
fcmovnu
loop
dec
sub
test
repz
gs
xor
inc
xchg
jecxz
add
add
pop
push
cmp
pop
cmpsb
in
add
out
ss
cmp
xchg
repz
pop
cmpsb
cmp
insl
repz
mov
mov
jae
shlb
insb
cmpsl
sbb
or
int3
jle
dec
cmc
inc
add
and
lret
addl
cwtl
aam
xchg
xchg
in
test
mov
jl
xchg
shlb
xchg
loope
mov
pop
pop
push
test
ss
push
lret
push
inc
push
mov
call
leave
jbe
sbb
fsub
fcompl
add
push
cmp
add
xchg
and
lea
movsl
movsl
or
lea
lods
pop
mov
cli
daa
xlat
push
or
js
pop
lcall
push
add
mov
jmp
int
mov
rcll
leave
lcall
in
jns
insl
movsb
jl
sub
out
out
cmp
daa
mov
mov
ja
lahf
stos
shlb
or
xor
sarl
xor
jecxz
pop
push
lahf
add
xor
cwtl
inc
xchg
xor
mov
dec
mov
add
mov
into
sbbb
out
inc
aam
mov
cltd
lods
mov
mov
fdivs
xor
cmpl
insl
stc
add
fdiv
xor
femms
icebp
cmc
test
imul
inc
lods
ficoms
mov
sub
jge
adc
insl
xor
fsubrl
push
inc
in
in
jne
sub
dec
cmp
jno
inc
mov
enter
sbb
push
test
jl
iret
mov
repz
repz
lea
ss
das
xchg
in
stos
mov
xor
or
mov
iret
popfw
popf
out
xchg
push
inc
cmp
stos
xlat
mulb
pop
fadd
pop
cmpsl
sbb
test
and
adc
cmp
fdivs
outsl
sahf
or
add
ljmp
repz
sub
arpl
sub
xor
int3
cld
mov
jmp
ljmp
mov
orb
pop
jae
xchg
imul
shrb
sti
std
scas
mov
int3
pop
mov
mov
ja
andl
out
jns
fbstp
inc
mov
adc
or
mov
jp
push
sub
xchg
jb
jecxz
jb
cwtl
arpl
pop
clc
cmp
aad
or
push
test
or
add
ret
mov
fstl
push
jmp
ret
orl
push
mov
mov
dec
aaa
mov
into
lret
dec
pop
jne
xlat
out
xchg
out
or
mov
xor
ret
add
or
rorb
inc
mov
jns
mov
or
sub
out
icebp
stos
sbb
and
add
test
pop
in
lcall
movsb
int
inc
inc
mov
lea
fstl
xor
adc
movsb
std
xchg
cmp
jbe
push
and
pop
jle
fld1
fcomi
xchg
in
mov
rorl
add
fwait
pop
arpl
sbb
out
push
push
andb
push
dec
iret
divps
push
sbb
and
dec
lcall
enter
push
movsl
xor
into
adc
bound
ret
repnz
outsl
dec
dec
lods
adcb
mov
aam
mov
call
bound
inc
test
into
sub
cmpb
imul
test
es
pushf
push
push
inc
sbb
aam
sahf
mov
les
and
jnp
inc
repnz
mov
frstor
or
jne
cs
pop
sbb
ret
sub
mov
imul
std
dec
addl
xor
inc
sbb
add
and
dec
push
pop
gs
es
or
stos
out
mov
outsl
addr16
xchg
std
fs
fcmovne
testl
aad
movsl
ljmp
hlt
inc
mov
std
xchg
shll
nop
pushf
sub
daa
in
mov
fsubrs
call
pop
cmp
cmp
dec
sbb
push
fdivrs
test
cwtl
clc
mov
js
push
sub
pop
sub
js
push
fsubs
test
cwtl
cld
mov
js
push
and
pop
sub
jno
mov
jl
insb
fstps
mov
js
sub
push
pop
dec
and
adc
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
cli
popa
add
xor
nop
inc
dec
mov
add
add
add
add
add
xchg
add
and
push
add
pop
add
add
add
add
out
mov
sbb
add
add
add
mov
rolb
add
add
inc
add
add
add
dec
add
add
add
in
mov
and
sub
push
add
add
add
add
mov
jge
or
add
add
add
add
add
sub
daa
add
roll
add
add
add
add
outsl
add
add
add
inc
add
add
add
dec
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
jno
add
add
add
daa
add
and
jae
and
and
lock
add
add
stos
add
add
inc
add
add
add
add
dec
add
add
jbe
sbb
add
sub
xor
xchg
xor
jae
add
jnp
sub
mov
inc
add
add
add
add
add
mov
add
add
add
mov
sbb
add
ds
dec
add
and
add
push
add
dec
add
add
add
add
add
add
add
and
mov
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
push
add
outsl
add
pop
add
add
add
add
xor
sbb
add
mov
add
jge
ljmp
add
add
push
add
jl
dec
add
lldt
add
add
add
add
jle
push
add
add
inc
add
add
add
sbb
add
add
pop
add
dec
add
add
dec
add
add
add
flds
add
sbb
add
add
add
add
aaa
add
add
push
add
mov
mov
xchg
xchg
add
add
rolb
add
add
outsl
add
add
add
add
add
push
add
add
add
add
add
add
repz
add
add
add
add
aas
add
outsl
add
add
out
mov
popf
add
add
add
add
add
jae
dec
add
add
rolb
add
add
add
add
add
add
lahf
add
add
add
addb
add
or
dec
add
add
add
add
add
add
jl
add
int3
add
add
add
dec
add
pop
add
add
add
add
push
add
add
add
add
add
push
or
dec
add
add
add
add
sbb
mov
sbb
add
add
add
add
add
imul
xchg
sbb
cmp
gs
inc
and
adc
dec
push
mov
clc
mov
push
adc
xorb
lea
sub
lahf
sti
inc
mov
inc
inc
and
dec
mov
addl
aam
leave
mov
fisubrs
xorb
jo
xor
lret
push
xor
cmp
cli
leave
mov
inc
dec
inc
cmp
sahf
stc
dec
popa
push
outsl
cli
push
inc
cmp
xor
mov
fists
pop
cwtl
jge
push
inc
sub
out
aas
leave
or
mov
popa
xchg
lcall
pop
xchg
aas
sahf
mov
mov
out
mov
cwtl
adc
xchg
cmp
cs
or
call
sub
jecxz
outsb
les
fsubrl
lods
cmpsl
scas
jnp
or
insl
xchg
fcmovne
sub
push
jecxz
push
adc
insl
les
dec
out
decl
call
stos
xor
lds
test
in
in
mov
pop
adc
xor
sbb
inc
dec
push
loope
stos
out
rclb
mov
or
pop
icebp
idivl
clc
jmp
add
mov
jnp
adc
add
inc
xor
adc
gs
in
push
or
push
repz
cs
mov
push
dec
mov
push
jg
jg
lcall
dec
mov
mov
sbb
loop
jb
fdivl
mov
pop
stos
movsb
loop
mov
jb
js
pop
jnp
sbb
insl
push
push
mov
or
or
xchg
fdivrp
pop
jle
sbb
sbb
sarl
mov
in
test
mov
std
pop
scas
js
notb
imul
xchg
lock
std
arpl
inc
cs
out
or
ret
dec
in
cli
cmp
scas
or
outsl
cmp
jne
test
je
outsl
sub
or
aad
cmpsl
mov
leave
cltd
lcall
pop
inc
test
push
inc
outsb
outsl
movsb
pushl
push
xor
pop
stos
add
pop
pop
lret
mov
jo
cmp
and
rorl
lods
out
divb
clc
mov
pushf
mov
sahf
dec
mov
aas
mov
popf
or
adc
dec
add
inc
mov
jecxz
outsl
sub
jecxz
pop
popa
std
imulb
xchg
adc
pop
pop
clc
add
mov
js
sahf
jae
mov
sbbl
cwtl
cltd
xor
out
adc
repz
subl
cwtl
subl
sbb
sti
cmpsb
ficoml
cmp
les
or
loope
mov
sub
lock
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
