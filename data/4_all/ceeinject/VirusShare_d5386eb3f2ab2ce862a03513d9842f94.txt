call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jo
pusha
mov
cmp
or
jae
js
pop
mov
mov
sbb
pusha
clc
push
enter
test
mov
lock
rcrb
mov
sbb
pusha
ds
push
inc
scas
xor
add
mov
jnp
pop
sarl
jl
lods
add
aas
cmpsl
ja
sti
or
xchg
or
mov
lock
test
cmp
mov
call
test
mov
or
cmp
rcll
orb
cmp
repnz
fidivrl
ret
dec
imul
cmpsb
mov
sub
adc
sbb
call
inc
fcomps
fisttps
add
insl
cwtl
xor
mov
and
in
aad
mov
mov
icebp
dec
call
test
inc
and
dec
pop
cwtl
pop
push
mov
dec
mov
adc
and
repz
in
jb
fs
fcoms
inc
fdivs
test
mov
lock
shlb
nop
adc
xchg
push
movsb
push
mov
or
test
subb
or
outsl
loope
cmc
jl
jno
scas
adc
xor
imul
loope
stos
orb
or
inc
lds
stc
insl
ljmp
movsb
and
mov
lock
rcrb
mov
sbb
pusha
clc
push
enter
test
mov
lock
rcrb
mov
sbb
add
loopne
shlb
inc
daa
xor
out
fldcw
subl
sbb
push
dec
fs
mov
mov
inc
adc
cmpsb
and
in
cs
lcall
cmp
ja
outsb
out
insl
mov
jge
inc
xchg
test
push
adc
ret
add
fcoms
ds
clc
xor
pop
popf
and
jp
dec
or
mov
dec
fwait
std
idivl
aas
sub
into
and
push
and
bound
jmp
data16
daa
arpl
rcrl
fidivl
dec
in
jl
cmp
mov
daa
scas
dec
notb
flds
in
lods
stos
lock
in
rcr
test
sub
mov
clc
in
loop
insl
jns
adcb
out
jecxz
shlb
ss
jmp
xor
cltd
add
dec
sarl
je
lahf
adc
pushf
dec
rclb
cmp
int
ret
push
or
test
mov
lcall
lret
sbbl
in
xor
aad
test
mov
pop
add
hlt
stos
inc
push
das
pop
jecxz
loope
lods
insb
sbb
sub
sbb
cmp
movsb
aad
rcrl
xchg
mov
cmp
mov
and
and
sbb
ret
data16
mov
lods
or
aad
and
sahf
mov
stos
pop
or
or
xchg
fidivl
les
lock
xchg
js
loope
faddp
cmp
icebp
inc
mov
xchg
and
nop
outsb
flds
or
mov
movb
cmp
mov
fsubrl
cltd
or
and
pushf
imulb
cmp
jp
movsb
enter
xchg
xchg
into
arpl
cmp
out
jae
mov
jmp
popa
in
mov
jl
repz
call
mov
add
add
mov
mov
test
ja
xchg
shll
cmp
xchg
lahf
loope
idivl
iret
ja
lods
pop
cmp
xor
aad
cmp
fsubs
rorl
cmp
ss
fucomi
jl
sahf
jecxz
lods
or
pop
rcl
or
mov
xchg
adc
push
outsl
cmp
pusha
push
jmp
out
enter
mov
sti
or
subl
adc
in
shll
mov
push
and
inc
sbb
or
ds
or
daa
cltd
dec
aam
pop
mov
test
mov
dec
pop
push
and
lock
dec
and
cmp
dec
jg
movsb
fucompp
xor
push
jo
cmp
rolb
push
dec
roll
cmpsl
lock
fdivs
mov
cli
mov
add
mov
neg
cmpsl
push
mov
movsl
xchg
xchg
js
cmc
jbe
js
decb
fstpt
into
cmp
push
sbb
sbb
adc
mov
adc
stos
daa
cld
xor
in
aam
lods
mov
sub
xchg
dec
or
push
clc
and
jne
jbe
inc
mov
daa
hlt
mov
cmp
xchg
andb
mov
stos
mov
sub
cmpsl
out
jnp
mov
lret
mov
sub
sbb
rcrl
andb
movsl
dec
or
mov
stos
mov
movsl
add
xchg
test
arpl
je
jg
clc
sub
xor
or
sbb
inc
cli
mov
lock
mov
ror
and
int
sahf
add
adc
into
dec
repnz
ret
cmp
or
mov
mov
dec
mov
cmp
lods
dec
test
sti
scas
int
push
fcomp
adc
xor
dec
js
xchg
pusha
in
shl
mov
adc
cmpsb
cwtl
shlb
ds
mov
enter
mov
ljmp
cmpsb
dec
push
cmp
inc
jae
jbe
out
cmp
sub
mov
pop
sbb
jge
xchg
popa
insb
fdivs
ficoml
jl
sbb
cltd
lods
mov
dec
fmull
frstor
gs
jmp
aam
adc
popf
insl
push
mov
cli
cwtl
cmpsl
scas
ljmp
out
xchg
dec
jle
std
sbb
sub
and
xor
sti
jmp
or
push
lock
dec
or
sbb
into
testl
frstor
sub
fwait
cvttps2pi
push
mov
push
dec
jp
in
add
add
popa
enter
jle
pop
test
js
xor
xchg
inc
into
fwait
out
add
jle
insl
pop
sub
stos
sbbb
fdiv
jne
mov
out
dec
mov
imul
stos
mov
inc
rcr
push
xchg
mov
inc
pop
out
ja
mov
ficoms
mov
cltd
cmpl
adc
and
popf
xor
or
adc
ss
pop
inc
sub
and
add
movsl
test
jmp
dec
outsb
rol
in
sub
cli
cmpsl
mov
jnp
movsl
pop
mov
pusha
xor
jb
imull
push
popa
cs
lret
xchg
adcl
ds
scas
xchg
shl
xchg
and
sbb
fxch
sar
faddp
push
sbb
pop
mov
xchg
xchg
mov
mov
pusha
lret
into
add
push
xchg
or
xor
pop
sbb
mulps
xchg
out
lock
fcomp
mov
loop
xchg
imul
insb
jge
jmp
add
rorl
or
shlb
push
mov
push
mov
jne
leave
hlt
sbb
pushw
mov
test
pop
dec
xchg
popl
jnp
jne
jb
nop
push
add
cmpsl
inc
add
out
lds
movsb
mov
pop
aad
xchg
adc
push
mov
into
loop
cmp
pop
cmc
shlb
push
mov
or
and
lds
bound
lock
push
jle
push
sbb
pop
push
ffree
imul
pop
mov
xchg
mov
and
ret
or
sub
lahf
pop
adc
imul
mov
sub
push
xchg
mov
or
inc
mov
mov
push
or
imulb
mov
add
and
in
sbb
xchg
jecxz
or
idivl
je
mov
out
cmp
outsb
lret
test
lods
stos
rcrl
stos
xor
movsb
add
sub
pop
push
loopne
push
fcmovnb
out
mov
testl
mov
roll
cmp
adc
in
fsts
push
dec
push
popf
jnp
jno
or
dec
mov
bnd
mov
test
lret
icebp
sub
push
dec
pop
push
or
iret
jp
stos
xor
jg
mov
aad
cld
adc
push
rol
mov
pop
inc
aas
stos
push
sbb
sti
rolb
clc
jbe
aas
sbb
mov
lcall
daa
and
adc
loope
cltd
je
mov
ja
mov
fistl
mov
sub
xchg
add
stc
adc
gs
push
addr16
or
movsb
testb
sbb
insb
jne
cmp
pop
xchg
inc
and
stc
xchg
subb
nop
push
push
shrl
ror
push
mov
ja
pop
insb
cmp
dec
imul
imul
cmp
ljmp
and
out
pop
mov
ret
rcrb
adc
mov
cmp
andl
xor
xchg
mov
aad
loope
loopne
inc
push
fists
pop
sbb
jnp
xlat
and
orl
xchg
pop
mov
jb
inc
lret
xor
outsb
repnz
call
out
inc
mov
lret
gs
xchg
rclb
mov
cmp
hlt
mov
and
jmp
jle
iret
xor
sub
cmc
sbb
jb
pop
push
sti
push
mov
sbb
repnz
dec
jg
push
inc
and
and
cmp
ret
push
out
int3
mov
push
jecxz
jne
ds
out
incl
or
push
inc
cmpsl
add
jge
or
cli
lock
outsl
je
sub
movsb
pop
pop
mov
out
lods
outsb
ret
cmp
push
iret
shufps
in
sbb
mov
inc
mov
mull
xchg
dec
jp
mov
xor
or
xor
jae
adc
pop
test
leave
imul
movsl
pop
xchg
test
fldt
xorl
scas
loope
call
into
push
or
int
xor
mov
divl
inc
mov
dec
dec
jae
push
cmpsl
notl
out
pop
push
mov
push
cmpl
aaa
stos
sub
fsubr
and
mov
xor
sbb
inc
std
inc
aam
jmp
bswap
jp
ljmp
rol
mov
mov
push
mov
push
push
pop
add
in
xchg
pop
ljmp
fcmovb
stos
cltd
xor
or
jb
into
and
cmp
aad
xor
lods
inc
fcomip
cmp
call
test
ret
fistpll
pop
xor
ljmp
sbb
push
test
adc
or
orl
pushl
testb
jmp
dec
inc
and
push
mov
mov
inc
inc
icebp
fs
and
and
jae
and
sti
sub
xor
stc
imul
stc
lods
sub
int
insb
jle
out
icebp
jmp
mov
daa
mov
mov
icebp
pop
adc
cmp
js
enter
inc
add
pop
inc
mov
xor
mov
dec
pusha
push
test
push
cmpsl
jo
push
in
mov
sbb
lods
lret
test
loop
or
xchg
enter
dec
lea
xor
add
sbb
pop
mov
out
dec
testb
pusha
test
mov
pop
inc
pop
and
adc
insl
inc
cmp
out
add
adc
fsts
leave
push
loop
push
jns
mov
je
std
and
xor
pop
mov
movsl
ds
neg
xchg
push
arpl
fistpl
mov
mov
sub
cs
fnstenv
dec
add
cmp
cmpsl
mov
std
repz
pop
lret
mov
push
push
gs
sub
mov
sub
push
sarb
out
or
out
jne
popa
xchg
ds
and
nop
mov
cmp
sub
mov
jecxz
mov
adc
sbb
adc
popf
fmul
int3
dec
add
xor
sub
and
sbb
fsubl
lods
addr16
shld
xchg
stos
and
cmpsl
in
cmpsl
dec
into
cmp
push
mov
push
push
outsb
xchg
jae
or
outsl
pop
je
rcr
call
mov
mov
addr16
out
rorb
xchg
cwtl
pop
out
adc
js
xorps
xchg
cld
dec
cmp
sbb
pop
jb
sub
lret
adc
xchg
sub
fisubl
jae
ljmp
mov
fisttps
lcall
sbb
sbb
adc
jns
fcoms
pusha
stc
insl
imull
pop
push
cmpsl
icebp
hlt
mov
hlt
push
movsl
push
dec
testl
popf
lods
cmp
and
xor
lods
dec
adc
movsb
xchg
pop
lds
sti
push
std
jle
jmp
insl
lock
shlb
and
loopne
jmp
xchg
in
repnz
push
mov
jg
cwtl
inc
test
or
ljmp
popa
out
shll
fdivl
test
popa
push
jne
shl
pop
sub
and
pop
scas
and
aas
test
das
pop
je
sar
ret
and
inc
out
ss
ss
pushf
call
mov
jne
int
xchg
mov
pop
out
roll
dec
imul
push
pop
jmp
push
fimuls
imulb
repnz
sub
mov
pop
jb
dec
dec
dec
stos
ret
cli
mov
xchg
mov
jl
sti
push
mov
fldcw
sub
repnz
jb
pop
mov
sbb
fisubrl
jl
add
cwtl
icebp
adc
loopne
pop
xor
mov
insl
mov
adc
sbb
into
mov
stc
imul
jns
push
and
xchg
es
dec
mov
daa
fcmovu
dec
cmp
jno
jmp
or
out
sbbl
roll
leave
push
cmp
xchg
decl
push
loopne
in
mov
mov
repz
pop
sub
add
inc
xor
push
add
lret
dec
sub
adcb
lahf
or
cmp
add
sahf
ret
dec
rcrl
pop
mov
or
repnz
movsl
sub
jno
push
jne
xchg
stos
std
repz
out
mov
pop
jno
orb
pusha
mov
inc
test
call
cmpsb
mov
data16
rcrl
je
jb
lcall
jp
xlat
out
insb
or
sub
sbb
dec
mov
jo
xchg
jno,pt
jno
push
cmp
mov
dec
add
fs
jmp
adc
jnp
pop
ds
scas
notb
push
add
push
and
lret
mov
test
pop
sub
inc
xor
imul
and
clc
jecxz
dec
xorl
jle
mulb
mov
scas
or
icebp
pop
bound
rcrl
pop
cmp
icebp
cltd
pop
daa
inc
add
jo
sub
test
dec
in
jg
lahf
or
test
push
repnz
pop
into
jmp
data16
imul
pminsw
sbb
sbb
fisubl
js
pop
clc
pop
pop
aad
sbb
jmp
sub
into
test
insb
jnp
push
aam
sub
imul
jle
push
dec
and
add
sub
lret
jb
aaa
and
cmp
mov
inc
adc
pop
xchg
in
cmc
adc
subl
cmp
jb
inc
decl
lds
or
pop
mov
sub
int3
subb
jne
and
aad
inc
pop
xor
fsub
out
loop
push
or
loopew
scas
js
imul
push
and
aas
stos
xchg
xor
cwtl
pop
push
inc
lcall
push
fs
lret
cltd
sub
xchg
cld
xchg
mov
jne
out
xor
scas
loopne
adc
sub
inc
or
add
cmpsl
push
dec
add
jl
std
pop
sti
mov
pop
xor
xor
mov
insl
or
sbb
scas
icebp
aas
pop
sbb
mov
shlb
adc
fwait
pop
daa
mov
jne
mov
fcmovb
sbb
mov
filds
mov
ja
push
dec
cltd
jecxz
inc
inc
test
test
xchg
mov
adc
sbb
or
add
and
jecxz
in
int
adc
sbb
repz
cmp
daa
scas
out
lcall
adc
fstl
adc
and
add
mov
test
test
pop
insb
jns
popa
dec
fisttpll
nop
xor
sub
mov
dec
cmpsb
insl
pop
test
mov
pop
cmp
cmp
scas
pop
cmp
dec
sub
or
ret
clc
lock
xchg
or
xor
sahf
mov
ljmp
xor
js
add
scas
arpl
jae
test
or
push
mov
lea
jg
cmc
push
fcmovb
xor
cmpsw
mov
jbe
popa
mov
xor
jg
lcall
rorb
cwtl
jbe
hlt
push
jne
inc
loop
fs
pop
mov
in
out
or
in
jo
and
test
movsb
pop
xor
mov
pop
scas
lret
push
cld
ljmp
push
pushl
inc
xchg
ds
mov
call
and
sbb
dec
add
sbb
push
cmp
js
pop
outsl
aaa
in
dec
lret
or
cmp
or
pop
sub
jl
std
jmp
cli
test
hlt
popf
or
and
push
mov
aam
ja
xor
or
das
jl
adc
xrelease
stc
mov
push
mov
xchg
pop
cmpsb
push
ficoms
enter
xor
test
sub
mov
add
mul
cmp
xchg
popf
mov
jo
adc
dec
xchg
mov
jl
mov
pop
filds
mov
ret
sub
insb
int
call
mov
or
pushf
mov
mov
mov
cli
xchg
push
sub
in
mov
sub
mov
mov
pop
cwtl
movb
fdivs
mov
xor
jge
push
xchg
add
icebp
imul
cmc
xor
ljmp
jo
popa
jl
in
movsb
movsb
outsb
popa
mov
cmp
mov
xor
loopne
js
ja
rorl
in
popf
push
mov
add
add
or
xchg
add
cs
pop
push
mov
mov
mov
dec
jg
mull
imul
inc
int
fistpll
jl
nop
sub
sti
xchg
in
xchg
pop
pop
mov
outsb
jmp
int3
adc
jbe
lea
jns
inc
les
sbb
out
lods
insb
adc
in
rcrb
lock
xlat
pushf
outsb
xchg
pop
cmp
dec
lods
movsb
fptan
push
ror
mov
fsubrs
xorb
in
insb
cmp
leave
and
lahf
mov
xor
pop
leave
sbb
ror
aam
jne
je
pop
xchg
movsl
mov
sbb
stos
repnz
jge
fwait
inc
push
jo
adc
out
xor
and
fdivrs
add
movsb
andb
jecxz
pop
and
popa
jo
fs
es
stos
aad
stc
mov
jmp
nop
mov
pop
imul
mov
mov
outsl
into
push
insb
scas
iret
cmp
test
or
xor
roll
jecxz
and
jmp
add
and
fldcw
orb
inc
xchg
into
sbb
push
mov
sarl
test
push
fmulp
push
loope
add
add
int3
movsl
sbb
fidivl
dec
or
xor
push
cmp
inc
sbb
imul
push
cltd
mov
mov
lds
stos
sbb
push
adc
inc
xchg
mov
loop
sub
push
and
xor
loopne
mov
scas
sub
fstpl
arpl
aad
xchg
cmp
sbbb
mov
jo
xchg
inc
jno
rcll
sbb
jecxz
or
filds
sbb
inc
repnz
js
add
clc
ffree
jae
fcoms
push
sub
aas
rclb
xchg
lret
xchg
mov
xchg
clc
cmc
stc
inc
dec
mov
sbb
mov
or
ljmp
movsl
jg
imul
imul
add
sti
aad
inc
les
pop
iret
loopne
outsl
lret
xchg
js
out
xchg
repnz
lret
inc
ret
add
xchg
jnp
cli
in
xchg
lods
xchg
add
pop
mov
test
lret
fisttps
mov
mov
inc
or
daa
or
fdivl
ss
xor
and
imulb
adc
pop
mov
jl
push
out
or
or
cltd
adc
sub
scas
stos
cli
sahf
shl
test
fisubrl
and
stos
addb
xchg
sbb
cwtl
adc
jp
in
imulb
scas
mov
out
cmp
cs
lahf
ljmp
invlpg
aaa
ja
inc
xchg
jnp
stos
xor
popf
dec
inc
aas
ror
imul
fisubs
xor
repnz
lea
pop
xchg
inc
movsl
dec
jl
mov
push
stos
movsl
sub
idivb
in
xor
pop
push
xchg
std
cmp
fwait
cmp
mov
test
mov
inc
addb
enter
lock
shl
fmul
cli
dec
push
jp
pop
jo
push
pop
aam
pop
je
pop
xor
pop
pop
out
dec
fistps
cli
sub
and
ret
mov
xchg
lret
and
cwtl
cmp
jl
cmp
les
mov
jmp
xor
mov
pushf
test
or
ror
les
xchg
subb
lret
mov
enter
arpl
mov
mov
xor
pop
cmpsl
int
add
xchg
fistl
dec
insb
adc
push
jle
sub
jl
mov
cmp
mov
movsb
movsl
gs
mov
sbbl
adc
mov
mov
popa
out
fiadds
xlat
push
and
shr
dec
jle
xchg
imul
shlb
mov
adcb
cmp
cmp
adc
inc
or
mov
popa
cmp
jno
fwait
mov
xchg
inc
xchg
bound
aad
mov
cmp
popa
test
popa
xlat
cmp
aad
jmp
pop
xchg
test
gs
data16
mov
lcall
popa
xchg
push
inc
popa
ja
clc
outsl
int
fdivs
test
mov
lock
rcrb
mov
sbb
pusha
clc
push
enter
test
mov
lock
rcrb
mov
sbb
pusha
notb
inc
fdivl
test
rcll
mov
cwtl
icebp
imul
push
mov
mov
cld
jo
pusha
sbb
sub
cwtl
xor
sbbb
pop
sarb
shrb
push
sub
jo
pusha
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
lahf
and
aas
lods
add
jae
inc
inc
std
jmp
dec
repz
jecxz
shrl
jmp
lahf
and
adc
arpl
push
cmp
mov
mov
setg
outsl
sarl
aaa
xor
cmp
jae
arpl
push
incl
mov
addb
loop
cmpsl
sub
mov
inc
shrl
jnp
add
push
fbld
fcom
enter
jo
mov
or
jnp
arpl
stos
das
dec
cmp
bound
dec
stc
imul
out
repz
outsl
roll
fidivrl
add
out
int3
push
pop
in
cs
aas
rcrl
sbb
cmpsl
push
inc
jnp
jbe
pop
dec
cmp
xor
fbld
cmp
mov
stos
pop
shll
pop
sbb
jo
xchg
jae
inc
and
cmp
dec
pushf
out
das
insb
jp
or
jae
jo
add
xor
stos
adc
push
cmp
sbb
cmpsb
imul
ret
mov
sarl
xor
and
jae
arpl
push
pop
inc
leave
mov
mov
pop
repz
jecxz
sarl
out
in
fistl
movl
fwait
adc
dec
mov
cmp
stos
sbb
fnsave
add
cmp
fisubrl
rolb
popf
xor
push
test
lods
jecxz
repz
in
pushfw
pop
fbld
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
dec
insl
jg
add
aaa
mov
pop
in
cmp
out
sub
fldenv
sub
inc
cltd
mov
hlt
roll
inc
shlb
mov
cli
ret
push
jle
leave
mov
icebp
pop
fdiv
sub
mov
jge
shl
push
mov
mov
loope
cmp
fldcw
xor
xor
and
int
mov
in
jb
andl
outsb
movsl
outsb
call
jns
and
pop
pop
add
jb
jo
dec
sbb
lea
adc
orb
rorb
fisubs
test
arpl
adc
inc
rorl
sbb
jo
jbe
adc
cld
icebp
es
xchg
xchg
mov
lock
popf
add
lahf
or
jecxz
pop
lahf
add
sub
lret
jo
push
imul
sbb
cmpsb
add
pop
mov
pop
fucom
jl
xorb
adc
cltd
push
les
cmpb
adc
int
fildl
lods
bswap
pop
movsl
les
add
call
pop
das
mov
jno
mov
lcall
lods
scas
sub
cmp
movb
inc
enter
xorb
add
daa
shll
sbbb
idivb
mov
insl
sbb
jbe
sub
push
lea
pop
cmp
mov
sbb
insb
mov
and
ljmp
mov
js
mov
shrb
xchg
xor
jnp
sub
clc
faddl
movsl
adc
push
push
sub
outsl
mov
mov
pop
sbb
int3
jg
in
sub
imul
push
inc
inc
jne
fwait
pop
addl
loope
pushf
fdivl
or
mov
imul
movsb
rcll
add
inc
ljmp
and
xor
loop
or
ljmp
orl
push
xor
mov
sbb
mov
dec
xchg
cmp
xchg
inc
dec
sti
pop
dec
and
or
hlt
lods
out
inc
repz
cmp
out
push
ret
jb
hlt
ret
jae
movsb
mov
pop
iret
in
clc
push
ljmp
sbb
inc
jo
mov
cltd
mov
je
mov
inc
dec
and
pusha
add
xlat
fs
dec
loope
pop
cmp
and
push
xchg
jae
xchg
scas
dec
out
shlb
mov
cmp
push
mov
pop
mov
inc
stos
clc
cmp
push
hlt
jle
and
add
or
rcrb
mov
and
pop
and
enter
scas
addl
push
push
subl
gs
fdivl
outsb
je
and
ljmp
dec
adc
pushf
lahf
jbe
test
loop
ret
xchg
inc
lret
ja
lea
test
in
das
popa
and
mov
xor
mov
xlat
sbb
gs
mov
mov
out
shrb
cmpsl
sub
sub
nop
test
xlat
mov
std
bound
mov
push
hlt
mov
sbb
push
out
mov
ret
or
sbb
test
out
mov
out
rcl
pop
xchg
mov
adc
pop
lods
push
jp
and
fdivr
xchg
insl
mov
shll
inc
fs
cmp
push
shlb
cwtl
insl
rcrl
out
scas
and
out
mov
lds
jl
mov
dec
fwait
int3
addr16
jae
hlt
pop
jnp
mov
sub
stos
out
pop
mov
xchg
lods
sbb
or
je
call
mov
ja
add
xor
dec
pop
setp
lret
xor
cwtl
push
jmp
std
loop
jl
scas
push
popa
inc
popa
jl
add
push
push
or
jg
sub
pop
in
rclb
enter
fisubrl
sbb
sbb
pushf
sbb
adc
pop
sub
mov
int3
jecxz
adc
sbb
aaa
iret
dec
push
mov
call
leave
cli
aad
out
sbb
cmc
fs
lcall
ja
std
push
sbb
lahf
test
sub
in
push
sub
adcb
cld
pop
and
movntq
xchg
xlat
notl
lds
or
pop
into
inc
ret
fdivl
mov
mov
mov
mov
es
mov
nop
pop
xchg
fmuls
pusha
xchg
push
xchg
je
and
mov
mov
dec
add
icebp
ret
push
jo
es
mov
and
nop
jae
xchg
cwtl
lahf
loopne
popfw
jecxz
and
daa
mov
and
xlat
jmp
jp
popa
pop
cli
test
xor
cmp
sbb
cmp
pop
in
divl
sub
fistl
lret
inc
push
gs
or
dec
sub
jae
mov
push
fisubrl
mov
into
stos
adc
stos
cli
jb
or
sub
lock
aaa
outsb
jb
cmp
jmp
ficoms
lods
xor
pop
jbe
push
ret
fisttpll
stos
das
pop
xchg
mov
jno
inc
out
mov
int
mov
imul
jo
sbb
push
mov
add
in
mov
sbb
aas
ljmp
insl
xchg
jns
cmp
decl
adc
aam
mov
int3
lods
dec
or
into
aam
inc
or
mov
sbbb
mov
adc
orb
jmp
push
in
sub
or
leave
sti
xchg
or
in
xchg
popf
cs
push
into
jmp
inc
xchg
es
mov
aas
orl
arpl
test
sbb
xchg
gs
xchg
enter
push
sbbb
fsubrl
mov
jl
adc
or
shrd
loope
ja
inc
adc
jno
xor
popf
fistpll
fwait
add
xor
jae
es
jge
adc
push
outsb
jae
jp
cmp
in
mov
rcll
push
cmpsb
fdivrl
rclb
xor
icebp
insl
leave
fsub
nop
out
rcrb
push
lea
push
cs
call
jns
dec
addb
mulb
popa
add
push
jecxz
xor
pushf
push
jl
inc
xchg
lret
fildll
and
jo
lret
dec
jb
sbb
std
push
sbb
cmc
mov
mov
mov
adc
push
xlat
or
xchg
insb
addr16
pop
xor
cmp
mov
push
jno
imul
mov
pop
outsb
pop
je
repz
adc
insl
sbb
ret
loope
icebp
mov
mov
adc
mov
inc
mov
popa
push
outsl
iret
jae
into
dec
jb
into
mov
pop
jmp
call
ffree
aam
mov
cmpsl
sub
les
ljmp
cmc
movsl
inc
mov
pushf
adc
test
sti
jp
inc
leave
lahf
and
inc
jmp
ja
cmpsb
repz
fnstenv
jb
mov
bsr
test
data16
pop
lods
in
movl
cmpb
inc
xchg
cmp
jmp
jnp
mov
cli
in
out
push
movsl
jg
and
pop
inc
inc
add
stc
push
enter
pop
mov
mov
inc
mov
fidivrl
pusha
insb
repnz
js
gs
out
gs
cmpsl
cmp
dec
cmp
dec
aam
push
sub
mov
xchg
push
cmp
or
shlb
ds
testb
cmpsb
xchg
xor
outsb
inc
push
lods
pop
mov
mov
mov
insl
cmp
rol
lcall
insl
enter
xchg
add
ret
ret
pop
nop
lahf
xchg
sarb
les
shl
test
pop
inc
xchg
js
nop
pop
arpl
les
lods
lea
xor
pusha
or
fsubrl
add
test
or
cmpl
xchg
cmpsl
xor
mov
rcl
xchg
call
pop
inc
mov
push
cmp
adc
or
mov
pop
xchg
and
negl
xor
pop
mov
jl
cmp
add
dec
loopne
outsl
pushf
cld
outsl
aam
cmpsl
aad
adc
sbb
xor
dec
or
mov
sub
lcall
ret
push
jbe
xor
push
xlat
jb
mov
add
jne
fists
out
adc
cmpsl
faddp
jnp
movsl
push
jns
xor
or
xor
pop
ja
sub
xchg
pusha
lahf
xchg
push
dec
nop
add
shll
loop
pushf
jns
cwtl
cmpsb
lock
xchg
lret
outsl
inc
jge
loop
mov
push
mov
sbb
adc
push
adc
inc
ret
icebp
mov
dec
jmp
push
fldenv
mov
ret
in
xlat
lea
ja
ja
pop
std
and
pop
add
adc
test
push
jp
sbb
in
rolb
fdivs
mov
filds
jns
sbb
negb
xchg
xor
mov
imul
xchg
xchg
mov
inc
daa
addb
adc
test
jge
loopne
jecxz
popf
rclb
movsl
daa
push
xchg
and
push
sub
mov
inc
lea
pop
xor
stc
dec
fisubrs
inc
std
xchg
add
and
je
add
loopne
and
inc
cmp
es
xor
push
movl
fcompl
mov
push
jae
mov
div
and
hlt
loope
outsl
fisubrl
std
cltd
inc
aaa
rcrl
push
aad
rcrb
and
bound
sbbb
push
add
movsb
ljmp
cmp
mov
mov
or
push
lds
lods
rcr
mov
adc
fwait
xchg
cmp
int3
mov
ret
pop
ja
xchg
cmp
xor
fs
pop
or
mov
inc
into
enter
mov
dec
les
mov
enter
or
shl
lret
testl
adc
frstor
cmpsl
lret
adc
aad
arpl
mov
cmpsl
cmp
outsl
sbb
addb
jns
hlt
fldenv
pop
cld
lahf
popf
in
mov
jno
lds
jno
sbb
es
out
or
sbbb
pop
pushf
push
nop
push
push
sti
pop
fucomip
out
adc
dec
xor
fwait
pop
mov
popa
mov
lods
ljmp
mov
insl
gs
ja
jo
or
push
arpl
mov
push
add
das
fidivl
pushf
mov
sub
add
flds
into
cltd
inc
add
pop
iret
fbld
mov
arpl
cs
aad
mov
mov
or
or
clc
cmp
adc
push
xchg
push
mov
sbb
ja
outsl
sbb
jae
fmulp
inc
int3
sbb
dec
inc
push
pusha
jge
push
out
lcall
mov
stos
int
lea
scas
andb
test
lret
les
mov
leave
cmp
imul
and
adc
mov
fisttpl
pop
fdivl
sub
xchg
xor
jnp
int
cmpsl
pop
xor
and
dec
inc
dec
xchg
insl
xlat
shlb
sub
xlat
enter
data16
pop
je
mov
les
add
test
in
imulb
inc
ffree
and
mov
sub
xor
jne
cmp
enter
sbb
jnp
lea
push
sbb
cmp
arpl
cmp
sahf
push
mov
adc
out
je
push
cmp
aad
repz
lret
fisubrs
mov
push
sarb
mov
shl
xchg
notl
stc
jnp
sti
pop
mov
xchg
sbb
push
jne
bound
inc
cs
inc
cmp
ss
out
loopne
aaa
into
pop
lods
ljmp
hlt
insb
mov
arpl
pop
xor
not
pop
mov
testl
pop
cmp
cltd
popf
add
cmc
stos
in
iret
push
or
inc
push
or
mov
cli
xchg
and
and
enter
arpl
decb
fs
icebp
xlat
jo
jl
cmp
xor
daa
filds
mov
push
ret
jg
imul
mov
iret
stos
inc
cli
popf
jae
adc
add
inc
adc
or
fxch
pop
lcall
or
sahf
inc
lahf
dec
mov
and
inc
pop
dec
iret
mov
daa
je
movsb
push
stos
lods
xlat
mov
fisubs
movb
outsl
mov
lret
addr16
pop
add
movsb
fcoml
cmp
mov
add
ja
in
leave
jl
add
push
and
adc
iret
mov
mov
xor
addr16
mov
xchg
inc
popa
ja
les
not
or
push
scas
popa
dec
inc
imul
clc
cmpsl
add
inc
imulb
pandn
sbb
push
pop
aad
fmul
fs
iret
data16
pusha
icebp
cmp
fcomps
sbb
rcll
xchg
aad
push
dec
cld
fdivrl
xor
mov
adc
mov
pop
rcr
repnz
and
decl
repnz
pop
jl
aaa
aaa
jecxz
mov
xchg
bound
hlt
cmp
shrl
mov
or
add
test
push
sar
and
pop
out
push
repnz
cmp
jnp
inc
cmp
xchg
or
push
push
adc
push
lock
lahf
loop
cmpsl
jns
stos
sbb
xchg
es
out
push
lahf
cmp
fmuls
fwait
adc
adc
lret
les
ss
cld
loopne
pusha
mov
and
mov
ljmp
arpl
adc
imul
cmp
lock
ja
sbb
repnz
cmpsl
imul
pop
in
das
jle
push
mov
xor
push
sbb
out
mov
cmp
nop
mov
cmp
hlt
push
xor
jl
iret
jo
mov
push
pop
cld
into
mov
adc
fs
mov
cmp
notl
mov
pop
dec
call
out
inc
roll
mov
ljmpw
scas
sub
sti
sub
or
inc
fistpll
addr16
call
and
fmuls
lods
loop
inc
adc
sarl
add
fists
sub
stc
sub
and
out
lret
ljmp
imul
xchg
ja
hlt
test
xchg
lods
mov
sub
test
cmp
mov
les
lret
inc
aam
cmp
mov
add
inc
adc
dec
lcall
shlb
popa
gs
mov
lock
mov
sbb
sub
aas
int3
or
inc
sbb
jmp
jecxz
repz
xor
adc
or
push
mov
ds
jecxz
push
sbb
popaw
cmp
sub
xchg
sti
pop
mov
pop
and
mov
or
es
adc
dec
add
inc
in
daa
xchg
pop
lcall
sbb
subl
push
iret
clc
xor
data16
pop
push
push
je
fs
out
jb
push
mov
loopne
test
sub
and
out
scas
mov
call
jle
test
mov
lods
test
arpl
repz
mov
shlb
loopne
lret
int
sub
cmc
push
imul
fstpt
fdiv
ret
cmpsb
scas
sahf
mov
jb
xor
hlt
sbb
jle
js
into
and
leave
xor
test
inc
lock
adc
mov
lods
inc
and
ret
iret
js
mov
cmp
dec
adc
shlb
jle
cmpsl
lock
fwait
pop
ror
jno
es
mov
sbb
cmp
dec
sahf
push
adc
mov
fidivrs
fsubrl
sub
outsl
rorb
or
xchg
or
fimuls
mov
stos
mov
leave
aas
cmp
dec
inc
mov
sbb
je
das
sti
push
dec
out
inc
sbbb
out
cmp
xchg
das
arpl
fxch
pop
popa
jno
hlt
fdivs
dec
jns
fidivl
out
mov
shr
lret
into
in
cmpsw
in
fnsave
mov
mov
dec
popf
roll
pop
add
dec
insl
dec
add
mov
add
jb
pop
imul
pushf
push
mov
nop
imul
mov
hlt
jmp
pop
xchg
fwait
enter
sbb
xchg
adcl
icebp
repz
std
adc
push
mov
mov
clc
add
jmp
pushf
int
jmp
std
pop
arpl
ljmp
mov
add
in
jne
stos
out
xchg
adc
adc
rcr
pop
in
adc
push
aaa
rolb
xchg
inc
cmc
adc
mov
mov
dec
push
test
cli
mov
neg
std
and
nop
scas
pop
call
cld
adc
adc
nop
fimull
into
adc
jp
addr16
les
push
push
icebp
cwtl
xchg
pop
sbb
mov
adc
or
cmp
cltd
mov
cmpb
addl
call
repz
movb
cmp
mov
add
jecxz
lods
add
sbb
pop
aas
adc
clc
xchg
in
cmpsl
mov
popf
jle
fnstsw
jns
jp
cmpsb
inc
jae
aaa
push
inc
push
sub
scas
xchg
pop
js
push
in
and
fwait
scas
mov
and
call
mov
and
pop
shlb
sub
sub
and
out
mov
call
and
and
ret
push
es
cmp
lret
lods
addr16
rcr
add
jae
or
test
inc
add
fwait
add
push
dec
popf
and
cli
pop
mov
cmpsb
xchg
stos
xchg
sahf
sub
aad
xchg
in
xlat
dec
in
ds
dec
rorb
and
cwtl
push
sub
test
out
adc
out
sub
jecxz
out
mov
mov
hlt
xor
add
movsb
adc
inc
ficoml
cmp
sub
repnz
pop
dec
push
insb
or
ret
mov
jno
pop
mov
mov
jo
cmp
faddl
test
and
fucom
mov
test
jbe
or
bound
dec
push
or
subb
or
rcrl
push
inc
push
mov
sbb
jg
fiadds
or
dec
jns
adc
add
aad
push
call
stos
push
xchg
clc
daa
jae
ljmp
inc
outsl
and
movsl
mov
bound
sarl
adc
xor
pop
lahf
jae
pop
lcall
ljmp
iret
loopne
jl
push
gs
inc
mov
lret
mov
dec
pop
bts
rcll
mov
jecxz,pt
outsb
xchg
mov
xor
xchg
or
sahf
sbb
mov
ret
and
clc
sbb
sbb
mov
mov
dec
push
scas
sbb
test
aas
gs
xor
push
in
jne
xor
xchg
fcmovne
add
or
xchg
pop
rcrl
ror
or
je
mov
in
dec
cmp
ret
pop
aas
and
add
das
add
cld
push
dec
push
test
js
xor
dec
cs
dec
add
cmc
nop
xchg
xchg
add
xchg
jnp
and
mov
mov
shl
pop
pop
add
imul
dec
js
mov
decl
in
sbb
lret
cmpsl
dec
hlt
push
out
lds
out
cwtl
aad
movsl
stc
inc
loopne
lret
jg
or
xchg
sbb
or
outsb
add
sbb
fisubrl
push
les
roll
adc
xor
add
dec
repnz
add
inc
jne
into
fcoms
dec
pushaw
out
fsubs
inc
sub
test
stc
out
inc
jmp
jp
adc
test
xor
cmp
pop
stos
repz
adc
cmp
sbb
int
lahf
popf
scas
add
mov
je
mov
sahf
out
mov
push
lods
sbb
push
inc
arpl
inc
dec
out
adc
in
push
sub
jecxz
rcll
sub
xor
fwait
outsb
xchg
repnz
mov
and
or
push
sub
dec
enter
insl
lods
cwtl
inc
loopne
or
inc
add
dec
jbe
dec
shr
and
aad
cmp
xlat
pop
inc
out
or
addb
xchg
pop
add
mov
push
mov
or
jns
in
lret
inc
xchg
push
jle
add
jae
call
test
in
dec
sbb
ja
in
sbb
jo
lcall
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
fbld
push
aas
inc
btr
mov
dec
repz
jecxz
rcll
and
adc
arpl
push
jg
btr
or
jnp
sbb
sub
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
hlt
mov
cmpsl
mov
lea
imul
es
ds
outsb
ja
call
mov
xchg
sahf
xchg
idiv
test
cmp
daa
push
faddl
outsb
add
pop
inc
mov
cmpsl
mov
imul
out
iret
leave
aaa
xor
jb
cmp
adc
sti
mov
loopne
aas
add
std
xor
sub
in
push
adc
add
popl
ds
mov
sub
sub
pop
cmp
enter
inc
adc
rclb
sub
mov
sub
fsubs
in
lcall
loope
xchg
sarb
fsubp
push
cltd
add
scas
pop
outsb
push
jmp
mov
push
call
sub
push
dec
xor
xlat
push
ds
into
scas
es
rcr
out
push
mov
ret
add
ret
mov
or
cs
cmc
xchg
rcrl
dec
icebp
call
outsb
xchg
mov
mov
into
xlat
fidivs
aaa
es
push
push
pop
push
jbe
data16
dec
inc
inc
fnsave
cli
loop
cmc
xchg
xchg
mov
ds
jl
jo
add
sbb
cmp
sub
in
call
mov
inc
ds
dec
jb
add
xor
mov
cmpsl
jmp
sahf
ret
out
xlat
faddp
cs
ds
push
pop
push
pop
outsb
ja
addr16
push
pop
inc
scas
mov
cmpsl
mov
out
xlat
faddp
cs
ds
push
pop
push
pop
outsb
ja
addr16
push
pop
inc
scas
mov
mov
adc
test
jl
jns
sbb
fcomi
movaps
xchg
movsb
inc
sbb
andb
mov
adc
and
data16
hlt
push
into
sub
add
jl
fs
jnp
push
and
push
aaa
leave
push
pusha
lds
push
shll
sbb
mov
pusha
testb
mov
loopne
mov
aaa
pop
aaa
and
in
out
out
or
mov
pusha
popf
push
and
jmp
mov
sbb
cmp
andb
jp
outsl
sub
orl
fdivr
pop
lods
int
adc
sbb
jle
jnp
out
hlt
out
pop
andb
xchg
mov
shrl
mov
cli
and
push
test
pop
sub
add
sbb
xchg
adc
sub
insl
mov
mov
pop
out
stc
das
bound
in
es
pmaddwd
xor
add
jne
or
mov
jl
stc
pop
add
ljmp
in
jbe
mov
mov
jns
mov
fidivl
pop
in
jbe
into
mov
xchg
mov
mov
or
jo
call
xchg
push
out
or
adc
dec
mov
and
scas
mov
movsb
jns
and
mov
int3
and
inc
pop
jl
idivl
mov
ja
outsb
ljmp
jp
xor
jl
mov
in
cmpsb
xchg
sbb
into
dec
loop
movsb
fidivs
cltd
dec
add
fildl
adc
cmp
into
repnz
mov
outsl
adc
mov
daa
movsl
rclb
lods
xchg
or
or
gs
mov
adc
mov
gs
pop
dec
insl
mov
leave
stos
adc
sbb
pop
pop
push
mov
subl
pop
push
dec
fstpl
xor
fistpll
push
jne
push
das
mov
cltd
xor
push
in
in
test
fcompl
gs
popf
mov
testl
mov
and
test
std
popf
icebp
into
pop
ja
mov
xor
fmul
xor
lahf
xor
mov
jmp
fidivrs
inc
in
jns
into
sti
jo
arpl
mov
mov
push
aas
sahf
mov
subb
pop
push
push
cs
and
call
jns
xor
pop
jne
out
jecxz
xor
push
adc
aaa
lahf
xor
pop
loope
das
das
push
mov
xchg
or
xor
mov
stos
pop
out
daa
mov
lock
popa
push
adc
arpl
ds
icebp
pop
stc
jmp
rolb
shr
push
sub
pop
aam
shlb
add
int3
push
in
mull
mov
in
jnp
jb
push
fucomip
mov
gs
xchg
pop
xor
dec
sub
inc
or
cmp
mov
loopne
xchg
outsl
xchg
lea
test
dec
adc
push
scas
mov
mov
mov
push
les
pusha
jp
pop
fildll
lods
xor
inc
inc
cwtl
mov
push
aam
inc
loop
mov
or
dec
ljmp
jb
pop
fisubs
push
mov
mov
loop
pop
les
jg
es
sub
and
sarl
pusha
ja
sbb
fnstcw
loopne
aas
jmp
mov
ret
sbb
dec
and
sbb
stos
leave
scas
jmp
sarb
lea
loope
mov
aaa
cmc
stos
lahf
cmpsl
ret
sbb
add
fwait
adc
push
sbb
jo
dec
addl
decb
orb
jge
packsswb
xchg
and
aad
lea
out
mov
mov
out
daa
dec
insb
adc
mov
ja
imul
inc
xchg
clc
push
out
pop
inc
movsl
adc
les
mov
shrl
lret
cmpsl
mov
cmpsl
mov
pop
or
in
jg
sbb
sbb
out
or
mov
outsl
push
jns
hlt
stos
fs
orl
mov
xor
daa
sub
hlt
push
sbbl
sbb
mov
mov
cmpsb
mov
and
cmp
testb
and
aaa
mov
xor
add
cmp
fcmovnu
mov
lods
lods
xchg
pop
add
mov
dec
mov
xor
clc
cmp
jmp
cmp
pop
mov
mov
jecxz
stos
es
dec
jecxz
push
test
faddp
inc
insb
ja
cmp
stos
xorl
inc
cmpb
insl
mov
jo
mov
mov
mov
roll
dec
and
mov
lret
cs
mov
push
xchg
fldl
test
add
cmp
mov
mov
stc
sbbb
movb
pusha
mov
mov
stos
inc
aaa
das
sbb
mov
scas
mov
inc
rorb
sub
inc
loop
cmp
xor
vmovaps
mov
roll
inc
addr16
mov
mov
mov
dec
repnz
scas
or
fisubrs
jmp
jnp
pop
mov
dec
negl
imul
jmp
je
xor
inc
hlt
mov
enter
lcall
sarl
sahf
add
lahf
sbb
outsb
sbb
mov
mov
mov
insl
xor
push
push
fcomps
sahf
mov
scas
cs
jbe
faddl
fildll
popa
cld
cmpsl
out
andl
cmp
mov
roll
jecxz
push
fwait
ds
outsb
fnsave
fsubl
sbb
outsb
imul
xchg
add
push
fdivr
hlt
popf
lock
push
mov
sbb
inc
sub
arpl
pushl
jae
dec
xlat
int
int3
xchg
mov
jbe
pop
pushl
popf
out
popa
out
or
inc
repz
scas
xchg
push
ljmp
lret
pop
adc
jae
mov
rorb
dec
mov
mov
es
sbb
sbb
pop
dec
insl
mov
cmp
mov
add
add
insb
mov
hlt
cmp
clc
mov
mov
push
inc
lahf
repnz
push
cltd
aam
add
je
pusha
aaa
mov
xchg
jl
push
test
sub
mov
repz
pop
fnstenv
rcrl
cmp
stos
dec
sub
sbb
fdivrs
mov
mov
adc
xchg
jb
rol
adc
scas
and
ljmp
icebp
ljmp
cwtl
dec
add
inc
xchg
mov
xchg
inc
stos
div
or
cld
mov
push
fadd
leave
dec
cmpsb
inc
adc
sbb
subl
mov
insb
xchg
inc
and
arpl
jb
inc
iret
jbe
rol
inc
lret
or
xchg
jl
inc
xor
mov
pop
movsl
or
push
push
or
ljmp
sbbl
sub
test
sub
cmp
xchg
in
xor
repnz
mov
xor
outsb
aad
pop
lds
push
mov
cmp
das
or
pop
orb
mov
jbe
sbb
pop
push
popl
sub
cmp
bound
pmulhuw
push
mov
mov
shrl
push
xor
ljmp
imul
shrl
setno
cmc
mov
jae
xchg
out
aam
rcll
fsubrl
or
and
cmp
jne
fidivl
repz
push
movsb
adc
repz
gs
mov
gs
cmpsl
xor
cmp
adc
cmp
xor
mov
jns
aam
sbb
mov
sbb
pop
add
jp
xchg
cmp
pop
push
dec
push
cmpsb
lock
pop
roll
sbb
jo
lret
jnp
push
rep
push
imul
rclb
sub
leave
inc
jns
mov
pop
push
mov
mov
loope
out
ret
mov
aaa
add
xorl
orl
scas
movsb
call
das
cmp
mov
stc
mov
test
dec
lods
inc
pop
mull
mov
aaa
addb
mov
xchg
in
lds
cmp
lods
fistpll
xchg
add
sahf
out
pop
popa
sbb
lock
fld
cwtl
movsb
stc
aas
adc
test
cmp
sub
std
or
push
inc
sbb
push
fnsave
icebp
aaa
inc
dec
js
fldcw
roll
pop
iret
jp
xchg
inc
inc
std
sub
repnz
stos
mov
jmp
out
es
push
rcll
sbb
mov
jne
insb
adc
loopne
mov
dec
mov
shll
fadd
inc
stos
lods
cmp
out
lahf
dec
insl
lds
xchg
cmp
cs
lea
mov
outsl
push
cmp
jo
push
nop
mov
pop
mov
mov
add
add
push
push
stos
clc
pop
jbe
mov
addr16
stos
mov
sub
xchg
mov
ret
inc
ret
das
xchg
leave
int
shl
faddl
icebp
xchg
pop
in
jae
add
mov
push
mov
sarb
add
in
add
arpl
push
sub
aas
sub
pop
test
das
lret
pop
dec
cwtl
jmp
mov
jl
rclb
and
adc
shll
add
or
aaa
jg
dec
pop
mov
popa
negb
call
pop
leave
xchg
inc
pushf
mov
and
outsb
movsb
leave
push
mov
andb
das
stc
sti
inc
mov
faddl
mov
dec
jge
stos
pop
mov
data16
das
or
xor
inc
cltd
dec
faddl
cmp
inc
orl
repnz
test
cmp
dec
les
xchg
iret
imul
or
sub
sbb
sbb
fcoms
int
out
push
lahf
scas
loopne
xor
movsb
mov
loope
bound
lds
loope
sbb
or
jb
out
test
fwait
xchg
add
or
or
loop
ds
or
sub
shll
add
enter
lahf
pop
fists
and
rep
and
cmp
jae
cltd
mov
sbb
mov
cwtl
lret
and
neg
in
sub
cmc
push
imulb
sub
sti
in
cmpsl
out
cmp
test
scas
fdivl
test
add
push
loop
cmpsb
cwtl
fimuls
popa
pop
push
cmp
push
dec
fwait
xchg
mov
in
out
sbb
jnp
sarl
mov
test
mov
rcrl
dec
and
jnp
mov
fwait
out
minps
xor
xchg
push
add
bound
outsl
sbb
pop
cmpsl
push
xor
jmp
jns
push
lock
inc
jge
repnz
push
mov
lret
jge
cltd
mov
stos
lea
incl
scas
xor
sub
lcall
push
dec
inc
xchg
or
movsl
mov
stos
inc
ret
adc
dec
out
and
lcall
pop
outsl
in
add
sbb
inc
jb
push
sub
pop
mov
cmc
fs
inc
mov
scas
sahf
and
in
mov
pop
mov
shrb
sahf
repz
das
js
mov
xor
mov
jmp
or
add
add
sub
push
push
sbb
cmpsl
pop
push
inc
std
bound
mov
xchg
push
xor
ficoms
mov
push
mov
iret
xor
jle
or
jno
dec
inc
test
push
mov
cmp
jno
lock
lcall
lahf
xor
imull
adc
push
mov
push
xchg
sbb
popa
jne
loop
sub
jmp
dec
outsl
rcr
ret
jb
enter
lcall
rcll
sbb
nop
push
cmp
xlat
in
aas
out
push
push
pop
nop
lock
xor
mov
xor
push
fcompl
lea
enter
ja
stos
xor
ljmp
mov
cmpb
cmp
test
xchg
out
pop
mov
loop
lret
loope
and
and
les
sub
mov
adc
xchg
test
dec
movsb
pop
jae
hlt
mov
stos
ds
lahf
in
mov
aaa
lods
scas
mov
out
mov
nop
mov
push
xchg
fsubs
aam
add
adc
test
xor
hlt
inc
mov
mov
lcall
inc
cmp
xchg
inc
into
ja
aas
fisubs
nop
cmc
cmp
push
push
rcr
add
sbb
push
enter
scas
in
test
cmpsb
jge
sbb
fsubs
and
js
push
clc
enter
iret
fs
push
jecxz
mov
xor
mov
arpl
test
sbb
jnp
loop
jp,pt
pop
shll
mov
out
and
sbb
jbe
cmpsl
adc
dec
cmp
jb
cmpsb
out
fcmovne
jnp
stc
sbb
jno
lcall
aaa
mov
pusha
cmp
ja
pop
shr
cmc
cmp
scas
in
inc
mov
cmp
mov
hlt
push
sbb
imul
dec
stos
mov
fimull
ret
or
xchg
xor
neg
in
das
pop
and
push
dec
pop
inc
fldt
scas
xchg
sar
push
shrl
outsl
fsub
or
lret
cmpsb
add
test
stos
dec
dec
int
or
inc
push
lcall
clc
cmp
mov
cmp
in
fisubrl
jp
jo
adc
idiv
sbb
push
stc
call
mov
xchg
das
pop
loop
adc
mov
je
daa
pop
testl
hlt
push
and
pop
imull
decb
xchg
and
or
adc
sbb
or
cmc
fcoml
pop
lea
pushf
pop
sub
in
add
jecxz
insb
aas
sbb
jae
jp
lret
and
ljmp
movsl
xor
cmpsb
jl
faddl
cwtl
xlat
sbb
inc
addr16
loopne
inc
iret
ljmp
jbe
imul
pusha
roll
xlat
dec
shll
psubsw
mov
out
jns
mov
pop
rorb
test
lods
and
xor
ficoml
mov
sub
mov
into
stos
sub
stos
mov
pop
jno
dec
xor
xchg
lret
js
xor
and
inc
xor
out
into
mov
fisttps
mov
inc
sbb
imul
xchg
cmpb
pop
xor
xchg
ljmp
in
sbb
adc
roll
and
fdivr
idiv
enter
test
mov
mov
cmp
ss
add
sbb
fldt
mov
clc
fnstenv
sti
aas
loope
ja
mov
insb
mov
push
add
cmpsl
sub
or
lea
cmpsb
mov
jnp
mov
sub
je
jbe
scas
dec
stos
cmp
mov
fdivl
or
push
pop
cli
lret
xor
testl
addr16
pop
lret
xchg
pop
fwait
sbb
ret
push
loope
aas
and
xchg
mov
fistl
or
daa
adc
and
mov
and
xchg
jl
cwtl
shlb
cmpsl
pop
mov
inc
mov
gs
and
add
pop
xor
sbb
dec
testb
pop
fsubrl
mov
ja
into
jae
push
movsb
ljmp
mov
inc
das
push
pop
aad
sbb
nop
inc
cmpsb
cmpsl
rcrb
js
in
jmp
notl
adc
daa
xor
or
jp
loopne
mov
xchg
or
sub
packuswb
lock
cmp
orl
or
out
mov
push
xor
jecxz
add
scas
out
arpl
cld
out
ja
add
pop
fdivl
fs
inc
inc
mov
jge
fxch
insl
jno
jg
rol
dec
sub
jbe
push
pop
and
test
fldenv
fdivrs
fldl
jno
inc
pop
fcomip
inc
jae
dec
mov
mov
insl
imul
ret
push
popa
jae
mov
fs
push
mov
mov
mov
filds
insl
pop
ret
iret
xor
mov
push
imul
test
jne
insl
adc
shrb
mov
test
in
pusha
lcall
and
lea
or
or
lea
sbb
and
jmp
das
shlb
cmp
jmp
out
and
sahf
mov
mov
sarb
fdivrs
jbe
jg,pt
into
mov
xor
cmp
xor
imul
xchg
insb
ror
dec
ss
push
out
pop
push
add
mov
xor
cmp
addr16
out
mov
and
push
fisttps
push
push
fisubrl
xor
data16
mov
add
js
and
pop
addr16
jno
sbb
or
or
and
mov
push
mov
ja
inc
fnstenv
cwtl
aam
gs
adc
out
xlat
pusha
decb
filds
mov
andb
int
fsubrl
mov
mov
mov
test
stos
xor
fsubrs
and
mov
push
and
sbb
fildll
push
push
cmp
or
mov
push
ret
push
and
fcmovbe
call
es
jecxz
pop
add
dec
loop
in
lds
arpl
rcl
mov
push
bswap
mov
or
push
int
jmp
and
shlb
repz
stos
out
xor
clc
ret
scas
test
mov
push
mov
rol
push
mov
lods
enter
in
lret
jmp
and
std
out
dec
cmp
pop
inc
loope
scas
fimuls
fstpt
rorb
sarl
mov
enter
jg
mov
push
mov
stc
addr16
pop
add
dec
cmp
hlt
cmp
cmp
jmp
sbb
fwait
add
mov
mov
xchg
nop
inc
shlb
bound
lret
and
cmp
xchg
push
xchg
sbb
push
inc
aad
iret
mov
pop
stos
pop
pop
les
xorl
stc
xlat
fbld
mov
imull
sbb
jmp
pusha
cmp
mull
and
fstps
aas
push
out
imul
push
xchg
notl
mov
sub
out
xor
aad
out
or
fwait
outsl
mov
lret
mov
or
xchg
jg
and
mov
dec
push
jne
add
adc
gs
mov
adcl
jae
push
and
mov
cmp
sahf
into
pop
xchg
in
stos
mov
xchg
jae
jecxz
cmp
pop
dec
sbb
dec
dec
loope
ss
mov
inc
jmp
in
out
sub
sbb
inc
xchg
push
dec
xor
inc
jl
mov
xchg
adc
mov
call
sub
xchg
inc
icebp
in
stos
cmp
mov
out
or
cmpsb
in
pushf
leave
jp
roll
pop
push
mov
jge
in
rolb
inc
lret
gs
or
ret
inc
sub
imul
lods
pusha
xchg
cli
pop
lcall
loopne
jns
push
push
jl
loope
out
repz
test
adc
std
enter
mov
fldenv
outsl
dec
dec
xchg
outsl
subl
movsl
ljmp
pushf
xchg
leave
clc
pop
outsb
popf
pop
add
xor
dec
int
nop
pop
cmp
xor
sub
jg
insl
sti
out
jle
mov
sub
sub
mov
imul
ss
add
lret
inc
popa
and
popf
sub
xor
pop
out
inc
inc
rcrl
push
int
and
scas
jno
clc
xchg
ss
lock
xchg
shl
xor
aam
add
or
es
cmp
inc
mov
xchg
adc
inc
jns
insb
sub
insb
mov
fdivrl
pop
scas
jge
rorl
mov
xorb
mov
jl
rclb
ror
mov
mov
or
popf
xchg
shll
lret
and
jmp
push
vpminsw
lret
inc
out
push
fbld
push
icebp
sarb
fdivl
sub
das
neg
inc
inc
jo
sub
repz
fcom
sbb
test
pusha
nop
mov
es
fisttps
adc
pop
xchg
pop
movsb
jecxz
mov
sbb
inc
pusha
fists
js
sbb
fdecstp
and
xorl
xor
sti
mov
nop
or
jo
inc
mov
and
in
mov
outsl
in
pop
cmpsl
aas
rorl
lds
mov
data16
out
sahf
xchg
idiv
out
xlat
faddp
cs
ds
push
pop
push
pop
outsb
ja
addr16
push
pop
inc
scas
mov
cmpsl
mov
out
xlat
faddp
cs
ds
push
pop
push
pop
outsb
ja
addr16
push
pop
inc
scas
mov
cmpsl
mov
out
xlat
faddp
cs
ds
or
push
add
jp
dec
push
outsl
inc
lcall
xchg
idiv
out
xlat
pop
pop
shll
rorl
push
sbb
test
or
sub
and
cmp
imul
pop
xor
or
pop
leave
dec
fld1
sub
sbb
imul
sahf
mov
cltd
push
leave
mov
mov
jns
sbb
cmp
jns
or
pop
in
jg
repz
sub
cmp
or
dec
and
mov
xor
jg
and
xchg
push
jae
int3
sarl
push
pop
or
jge
jns
pop
dec
inc
movsl
push
jle
cmc
lock
jo
clc
jmp
jbe
pop
imul
jge
push
mov
jns
xchg
jmp
lods
sbb
sub
divl
jne
ljmp
xor
inc
out
enter
jmp
sbb
add
addr16
mov
or
mov
inc
out
lods
in
cmc
and
pop
inc
push
sub
xchg
call
pop
or
fs
js
sub
pop
leave
lock
cmp
inc
or
jns
dec
lods
pop
dec
les
pop
iret
data16
xchg
test
enter
xchg
add
add
mov
into
adc
flds
pop
in
mov
lea
lods
cmp
aaa
dec
stc
sbb
push
test
pop
leave
dec
fnstcw
or
jns
dec
enter
sub
js
push
fnstcw
or
jns
dec
enter
in
lods
mov
push
dec
xor
pop
out
cmp
sbb
mov
inc
jnp
mov
jnp
addr16
jnp
dec
xchg
mov
ficoml
cmp
sbb
push
test
xchg
pop
push
push
pusha
in
adc
dec
int
cltd
push
ljmp
pop
or
cmp
xor
ds
xchg
aas
adc
std
punpckhdq
cmp
and
sub
jge
jb
scas
cmpsb
cli
adcl
jecxz
filds
orl
adc
test
inc
cmp
nop
xchg
lcall
xchg
and
lcall
out
enter
aad
push
repnz
mov
add
out
pop
testb
int3
push
adc
fs
jb
rcrl
sbb
iret
icebp
leave
and
or
std
ljmp
testl
sub
das
popa
fimuls
repz
fildll
cmp
or
mov
inc
sti
xlat
xchg
imul
xor
aam
pusha
sub
cmp
pop
mov
xor
je
jg,pn
sbb
push
adc
mov
xlat
repnz
sub
push
pusha
js
xor
ret
rorb
sbb
jne
lcall
mov
sbbl
jb
pop
sarb
xchg
enter
fbld
fisubl
int3
jbe
repz
repnz
pushf
adcb
stc
push
int
fcoms
jo
jmp
push
push
add
repz
adc
sub
fwait
mov
sbb
hlt
ficomps
dec
outsb
test
outsb
stos
jmp
divb
sbb
pop
mov
jne
pop
push
in
stc
mov
nop
dec
or
in
aas
inc
add
sahf
and
mov
pop
push
divb
inc
fwait
adc
test
stos
test
xor
adc
mov
es
sahf
out
movl
dec
mov
out
and
out
mov
subb
out
adc
lods
dec
pop
mov
xor
inc
jl
xchg
sbb
xor
jne
add
outsl
push
mov
pop
sbb
test
pop
sub
dec
clc
mov
aad
fdivrl
shlb
dec
adc
addr16
sbb
or
lods
inc
sbb
push
dec
xchg
inc
mov
in
xchg
jmp
adc
repz
das
jp
mov
jno
sub
scas
ret
adc
mov
jp
pop
pop
add
inc
pop
dec
jb
adc
xor
mov
adc
or
dec
insl
jns
ffree
fnsave
xchg
imul
arpl
mov
sbb
insb
lahf
adc
clc
xor
jo
ficoml
orl
mov
popf
pop
std
lock
stos
mov
and
cmp
jno
dec
cwtl
adc
push
stc
push
dec
xor
rolb
jmp
jae
sbb
pop
icebp
imul
xor
into
aas
loope
fldcw
movsl
or
cld
mov
lods
dec
sub
dec
clc
inc
mov
ja
xchg
mov
shl
cmp
jp
pop
mov
in
jne
mov
sbb
add
xor
inc
cmc
adc
mov
sub
and
repz
les
das
xchg
inc
dec
sub
mov
adcl
mov
mov
mov
rorb
out
adc
sbb
dec
and
jo
jle
leave
pushf
dec
in
cmpb
addl
jge
mov
mov
jbe
lret
adc
cmp
fwait
xlat
addl
mov
fcomps
fcoms
pop
and
les
jmp
mov
dec
mov
or
xchg
int3
jmp
xchg
add
cmp
lock
sbb
lea
xchg
sub
mov
mov
scas
dec
inc
sub
shlb
in
les
push
cli
fldenv
mov
incl
cmp
iret
push
lods
into
cmc
or
xchg
mov
outsb
imul
pop
push
pop
in
pop
dec
lock
fstps
popf
mov
movsl
jecxz
adc
sbb
dec
dec
mov
aad
add
pop
mov
aad
xor
xor
test
push
fwait
mov
ffreep
sti
jbe
orb
dec
xor
dec
test
xchg
lock
lret
jle
xor
int3
call
shll
and
iret
xchg
jle
push
outsb
and
fstpt
fnstsw
mov
pusha
mull
rcrl
inc
add
sbb
rorl
lret
cs
stc
fcmovu
dec
dec
mov
jp
lahf
insl
dec
incb
sub
xchg
mov
ret
stc
aas
pop
pop
inc
sub
mov
inc
dec
add
cmc
xor
jle
adc
mov
les
imul
sub
mov
xchg
push
cmp
and
xor
lds
push
inc
test
in
jbe
bswap
aad
mov
pusha
lds
mov
xor
xor
nop
aaa
sub
pushf
add
mov
cmpsb
inc
xorl
push
jae
pop
inc
jmp
inc
mov
xchg
ret
aad
mov
out
sbb
shl
cli
negb
sbb
in
repz
loopne
sbb
insl
sbb
mov
lds
scas
jno
call
int3
xchg
add
pop
pop
and
sbb
add
mov
adc
imul
sbb
mov
fstpl
outsb
push
stos
in
jmp
cld
or
push
add
sbb
jg
loopne
cmp
scas
aam
jns
inc
sbb
or
gs
hlt
jb
mov
sbb
fimuls
sub
fidivl
dec
jbe
int
jae
push
sub
inc
cmpsb
inc
xchg
rcrl
shlb
jmp
jp
jecxz
cli
or
loope
xchg
adc
sub
fnstenv
cltd
nop
aas
push
out
lea
pop
push
xor
cmpsb
test
cmpl
loop
lahf
mov
xor
test
mov
int
adc
xlat
movsl
push
mov
mov
nop
testl
or
xchg
pushf
mov
sub
daa
mov
das
into
std
roll
and
scas
outsl
jmp
adc
dec
mov
stc
rcrl
dec
out
or
jmp
dec
roll
jae
das
bound
rorb
movsl
dec
push
in
jo
jecxz
xchg
cmc
out
stos
inc
push
cmpsb
fcompl
push
push
je
mov
xchg
adc
xchg
lds
jp
fmuls
fs
jg
aad
sbb
mov
xlat
mov
jmp
arpl
push
arpl
xchg
in
mov
jecxz
mov
adc
cmpsl
add
add
lahf
lret
fcomp
cmp
lret
xor
decb
nop
xlat
cs
in
cmc
in
stos
push
arpl
pop
rcl
and
repz
adc
and
inc
xchg
push
ret
pusha
jecxz
sub
push
inc
jae
add
inc
mov
jo
pop
outsl
pop
pop
jg
or
inc
dec
xchg
sbb
shl
aaa
test
je
mov
fdivr
push
les
mov
sub
insl
out
mov
sub
adc
in
inc
fdivs
cmpsb
sahf
lds
je
mov
stos
xor
call
imul
shlb
sbb
shlb
in
clc
and
test
inc
dec
arpl
adcb
add
icebp
dec
pushf
out
jle
imul
lret
cmp
scas
jb
pop
mov
fdivrs
pop
dec
movsl
cmc
xorb
pop
fistpll
movsb
lret
sahf
xchg
jno
arpl
sti
fcmovb
xor
movsl
mov
mov
push
mov
jg
outsl
pop
mov
scas
ds
mov
mov
mov
pop
jmp
add
pop
sub
outsl
cmp
pop
jg
mov
in
sti
inc
push
mov
fnstenv
mov
movsl
adc
mov
pop
fldt
hlt
and
das
inc
push
aaa
popa
mov
sti
cmp
pop
nop
ss
stc
cwtl
xchg
ss
xchg
outsb
pusha
sub
mov
mov
scas
mov
sbb
jns
sti
repz
sub
push
jl
add
push
jmp
jne
mov
inc
scas
mov
jecxz
cmpsl
out
cmp
lea
mov
adc
in
adc
lahf
push
mov
or
jl
sub
cmpsb
mov
adc
push
ljmp
mov
jne
mov
insb
rorb
pop
sub
lock
sbb
sub
sbb
cmp
pop
aas
int
aaa
shrl
xchg
aam
test
aas
xchg
cwtl
or
aad
xchg
dec
dec
out
fistl
add
rol
xor
lret
js
and
loop
adc
lods
mov
repz
popf
mov
inc
push
lods
in
test
mov
sbb
mov
insb
imul
imul
cmc
mov
pcmpeqd
fdiv
push
lods
lahf
cmc
aas
or
cmp
jno
sbb
dec
xor
fyl2x
xor
sbb
outsb
jae
sub
addr16
fdivr
or
data16
xchg
push
nop
pop
sahf
add
push
adc
xchg
cmc
pop
pop
push
pop
movb
add
xchg
xchg
shll
bound
les
lock
mov
xchg
push
loope
mov
sub
mov
xor
call
gs
fnstsw
inc
fucomp
ror
pop
cmp
rolb
xlat
cmp
adc
mov
dec
mov
sub
repnz
jle
pmuludq
jle
push
je
lret
xchg
inc
les
je
cmp
int3
xchg
lret
sub
in
cs
repnz
out
enter
ds
mov
imul
cmp
add
hlt
les
mov
inc
test
mov
cmpl
mov
push
xchg
xchg
dec
out
mov
and
nop
insb
clc
ss
or
xchg
mov
sub
push
or
sub
push
fisubrs
test
loope
cmp
cmp
sahf
cmp
in
bnd
mov
xchg
adc
mov
fisttps
adc
cmpsl
xor
ret
mov
mov
shrb
sub
popf
and
nop
mov
pushl
push
in
jl
andb
push
mov
mov
cmpsl
jae
in
inc
mov
dec
mov
clc
in
ficompl
jo
repz
frstor
pop
jne
jl
add
cmp
cmp
xchg
mov
mov
xor
mov
and
jg
sarb
enter
shlb
dec
scas
aas
in
call
dec
rcrb
nop
testl
mov
mov
std
das
stos
rclb
adc
fstpl
add
inc
cmc
nop
add
push
daa
into
push
test
in
shlb
das
jns
ret
fmull
cmpsl
gs
sub
jl
out
orl
ror
add
fsubr
and
sbb
jp
ds
lret
idiv
jne
scas
mov
mov
or
daa
inc
inc
add
rolb
fisubrs
xlat
scas
xor
add
jmp
or
subl
and
testb
scas
in
pop
shll
sub
jl
adc
lret
outsl
lret
adc
pop
cwtl
inc
leave
dec
sbb
in
push
pop
xor
mov
add
add
jge
cmpsl
enter
lret
xchg
decl
xor
jae,pt
std
sbb
das
inc
and
xchg
cs
jecxz
mov
je
icebp
test
fwait
mulb
aaa
in
aas
sbb
cld
push
lods
dec
push
out
lock
mov
adc
adcb
lahf
andb
fsubrs
pop
inc
jno
aas
aam
jg
fisubs
and
and
lea
sbb
xchg
pop
lret
mov
mov
inc
add
add
mov
test
lret
iret
xlat
iret
sti
push
stos
lds
imul
call
paddsw
and
int3
jmp
sbb
pop
es
lods
jle
and
mov
lcall
push
aam
mov
pop
das
xchg
test
dec
inc
mov
lods
and
cs
es
stos
or
inc
out
out
fcmovu
ret
cmp
dec
mov
cld
lods
scas
cli
ja
cs
jae
icebp
lods
movsb
sahf
inc
clc
cmp
push
imulb
or
divb
jb
andl
lods
insb
lahf
inc
cltd
fildl
ja
mov
jge
shr
sti
mov
adc
adc
int3
call
mov
xchg
and
adc
xor
and
and
pop
bnd
dec
mov
mov
and
scas
stc
push
jns
cmp
in
sbb
movsb
mov
mov
out
pop
pop
movsl
sbb
scas
es
dec
sub
inc
es
aas
pop
push
jge
cld
mov
pop
sub
xorl
and
lahf
xor
or
mov
pop
mov
push
pop
jo
test
sub
orb
cli
es
sub
jns
repz
lods
xchg
test
and
adc
xchg
cmp
cmp
sub
mov
ljmp
repnz
push
clc
fnstenv
mull
jne
adc
repz
mov
test
test
push
push
mov
jo
aaa
decb
stos
fdivs
decb
cmpsb
repnz
call
pop
push
cmp
jb
aaa
je
fldenv
push
jnp
lods
dec
lret
out
and
jl
fs
imulb
clc
incb
pop
mov
scas
cmpb
xor
sub
loop
test
add
sar
cwtl
lock
push
femms
mov
fdivrl
rolb
add
adc
cmc
sub
popf
and
iret
mov
insl
cmpsl
popf
lods
sarl
sbb
data16
aaa
jp
xor
movsb
mov
int
sahf
test
mov
mov
mov
repz
jne
sub
jle
cs
sub
inc
sbb
stc
call
pop
pop
inc
and
ss
fildll
shrd
lods
adcl
jbe
adc
cmp
mov
add
push
fsts
sub
or
mov
xor
out
mov
mov
pop
adc
sub
mov
repnz
push
push
test
and
mov
stos
cmovle
and
sahf
mov
adc
movsl
test
jp
adc
xor
xor
push
dec
xchg
push
pusha
jecxz
jg
sub
scas
add
pop
pop
lret
shlb
int3
dec
xchg
adc
pop
cmp
aaa
pop
loop
jecxz
sbb
pop
xor
mov
xchg
mov
jmp
gs
insb
in
out
cmp
xchg
ljmp
adc
bnd
lods
xchg
xchg
jecxz
je
lock
and
mov
xchg
sbb
mov
and
in
in
sahf
dec
xchg
mov
jo
out
imul
jp
into
dec
daa
lret
push
add
into
xchg
push
jb
and
dec
in
add
roll
xor
mov
mov
and
pusha
sarb
fidivrs
adc
fadd
test
shrl
sbb
icebp
sarb
push
std
bound
in
pop
adc
mov
leave
out
inc
int
fiadds
mov
jg
add
or
sti
sub
notb
outsb
mov
popa
std
cld
cmc
mov
in
cmp
mov
fimull
pop
adc
lret
add
aaa
xchg
out
jecxz
leave
sub
shrl
leave
movzwl
aad
stc
add
pop
and
xchg
adcb
ret
jl
mov
ret
mov
xor
sbb
aaa
aad
add
push
sbb
jnp
dec
cmp
mov
and
testl
jnp
enter
in
shll
loopne
and
lcall
push
mov
loop
sub
stc
test
stos
ja
mov
jae
pop
je
or
mulb
push
jns
lcall
xor
je
inc
mov
outsb
adcl
data16
stos
sbb
mov
inc
mov
sbb
cmc
pop
push
leave
mov
icebp
fnstenv
mov
test
insl
cmp
test
test
or
dec
es
pop
sub
enter
outsb
int
faddl
and
stc
lret
inc
inc
lahf
ficomps
add
mov
add
mov
shl
xchg
sbb
xor
rcrl
sbb
cmpsl
mov
inc
data16
shrb
test
sub
outsb
loope
mov
dec
pop
pusha
clc
push
loop
clc
lahf
inc
into
mov
xor
clc
pushf
insl
jge
outsl
mov
adc
pop
xchg
cmpl
add
and
cmpsl
orl
ret
and
xchg
idiv
iret
push
loop
das
das
sub
int3
mov
mov
pop
or
and
lret
push
int
arpl
fsts
pusha
cmp
cltd
lods
popa
je
mov
xor
xchg
pusha
dec
shlb
mov
pop
comiss
mov
or
out
lret
iret
adc
jecxz
jmp
fnsave
jae
filds
pop
mov
cmp
movsl
movsl
mov
push
dec
sbb
loopne
jecxz
inc
inc
push
lret
cmp
mov
iretw
push
sub
push
dec
out
push
pop
scas
sub
push
pop
icebp
movsl
mov
mov
mov
imul
cmp
repnz
incl
or
or
lret
sbb
leave
inc
push
xchg
push
gs
test
sbb
dec
pop
out
lcall
and
loope
push
pop
les
xor
gs
insb
mov
jne
xchg
hlt
cmp
test
mov
xchg
jecxz
push
cmc
loope
xor
mov
xor
inc
dec
imul
lods
pop
xlat
inc
jp
mov
notl
rorl
push
adc
test
inc
or
out
sbb
push
pop
pop
pop
dec
jnp
adc
stos
hlt
and
xor
rcrl
int
in
fs
rclb
jns
push
and
mov
in
pop
xor
aam
and
cmc
dec
sub
ljmp
loop
inc
idivl
push
jl
jae
xchg
dec
outsb
cs
push
int
dec
leave
dec
xchg
sti
rol
dec
fmuls
ror
add
mov
mov
imull
gs
jg
pop
mov
outsl
dec
insb
xchg
ljmp
lea
fldcw
ss
xorl
lcall
jo
adc
xor
icebp
push
xchg
mov
rorb
loope
and
mov
imul
ds
cmove
jns
pop
mov
mov
mov
movb
popf
gs
and
xchg
sarb
fdivrs
xchg
mov
out
mov
das
and
sahf
push
push
bound
adc
or
ret
insl
frstpm(287
pop
inc
mov
ljmp
stc
ds
lea
ds
pop
sbb
cltd
xchg
mov
sub
pop
pop
mov
adc
cmc
out
adc
pop
sbb
push
dec
lret
mov
sbb
mov
jb
and
xchg
hlt
jmp
push
ds
loope
push
fnsave
cmp
fistpl
mov
mov
out
sti
scas
mov
je
sarl
push
insb
dec
movsb
mov
fdivl
jne
enter
fimuls
shlb
cmp
push
jle
mov
dec
cltd
mov
das
insb
iret
out
mov
sbb
inc
adc
movl
jmp
xchg
xchg
imul
pop
bound
sbb
xchg
inc
rcl
clc
or
and
jge
das
jae
jae
imul
fadd
push
cmc
insb
push
pop
mov
das
lcall
adc
in
jmp
adc
insl
pop
out
mov
mov
cmc
push
in
sub
shrl
pop
scas
sub
aad
aas
mov
pop
ljmp
dec
mov
out
loop
xor
dec
dec
and
fbld
mov
loope,pt
fmuls
mov
sbb
lcall
iret
inc
push
pusha
std
pop
cmp
jnp
sbb
jo
lret
daa
xor
jp
outsb
sbb
hlt
push
add
push
cmpl
jo
jecxz
fimuls
and
pop
inc
scas
dec
fwait
std
xchg
adc
push
mov
ret
mov
andb
sub
mov
jl
cmp
mov
js
push
fnstcw
or
jns
dec
enter
sub
js
push
fnstcw
or
jns
dec
enter
sub
jns
insb
stc
pop
enter
sub
sbb
push
clc
pop
and
and
pop
dec
enter
push
xchg
xor
mov
loope
xchg
mov
cmpsb
adc
add
xor
and
sahf
add
push
sbb
test
mov
jl
leave
jecxz
adc
add
xor
and
push
imul
xchg
test
mov
stc
repz
fsts
sub
cmp
or
sbb
inc
jns
dec
arpl
add
cltd
shrl
xor
dec
lcall
pop
repnz
dec
mov
fsubl
xchg
xchg
shl
pop
jg
mov
lods
ljmp
outsb
inc
push
inc
dec
mov
pushf
ret
cltd
outsb
mov
or
xor
push
jne
in
test
or
inc
mov
arpl
mov
push
adc
mov
je
push
jns
arpl
dec
jbe
leave
sub
addl
ss
push
in
leave
jecxz
rorl
insb
lock
fidivrl
aad
ss
pop
cmp
add
out
mov
test
xchg
sbb
hlt
cmp
mov
dec
cltd
mov
mov
arpl
fildll
add
xor
and
push
imul
xchg
test
mov
stc
repz
jecxz
push
inc
ja
pop
pusha
dec
jo
add
popa
or
loope
mov
mov
sub
push
or
push
and
sbb
not
ror
mov
mov
xchg
lahf
lods
xchg
mov
add
popa
dec
jl
imul
xchg
test
mov
stc
repz
jecxz
adc
add
xor
and
push
imul
xchg
test
mov
stc
repz
jecxz
adc
es
mov
inc
lds
dec
mov
mov
lcall
mov
cmp
add
outsb
dec
cmp
push
xor
in
out
jmp
sbb
or
lock
and
ja
mov
imul
andl
push
mov
pop
neg
addr16
dec
clc
lods
pusha
inc
cmpsb
hlt
repnz
fcoml
in
dec
add
or
lock
fldenv
les
jbe
icebp
push
jecxz
jge
mov
sbb
sbb
inc
inc
cmp
addb
jmp
xor
cmovo
lahf
scas
jg
jmp
out
adc
cs
and
xchg
xchg
fs
daa
aad
adc
jae
data16
adc
scas
sub
fisttpll
mov
cmp
cmp
stos
cmp
insl
aaa
inc
cs
iret
and
push
cmp
aad
inc
mov
mov
pop
mov
add
std
fs
loope
imul
cs
mov
sbb
cld
dec
nop
mov
dec
dec
jo
xchg
push
pop
push
dec
sbb
fsubs
or
gs
cmp
mov
and
js
sbb
scas
xchg
pop
movsb
fnsave
adcl
push
mov
xchg
adc
mov
jl
pop
lds
push
fidivs
pop
and
fisubs
enter
dec
stc
pop
scas
jno
lahf
adc
sbb
mov
hlt
daa
mov
mov
mov
dec
mov
pop
push
mov
sub
mov
lcall
cwtl
rclb
jge
cli
dec
mov
pop
sbb
and
push
rclb
dec
sbb
jnp
push
jo
ret
sbb
mov
mov
add
loopne
loopne
mov
mov
bound
xchg
adc
xor
sbb
xchg
add
fisubs
jg
loop
jg
rcrl
imul
movsl
adc
addr16
dec
fstl
jl
dec
pop
dec
popa
out
mov
mov
mov
insb
mov
popa
jecxz
and
or
hlt
stos
es
fcmovne
ljmp
or
push
and
sahf
dec
xlat
and
sub
das
enter
decl
gs
sub
movsl
inc
jae
xchg
inc
or
clc
hlt
xchg
cmp
xor
sub
sti
stos
sbb
enter
cs
xor
push
xchg
push
sbb
lds
das
out
inc
das
cmp
lret
cmp
adc
push
xor
loop
addr16
push
shrb
arpl
mov
cmp
xchg
les
mov
xor
mov
mov
jecxz
jg
cmpsl
pop
jmp
inc
or
cmp
out
fucomip
dec
in
fldl
jne
push
out
jo
mov
enter
movsl
stos
jae
js
jmp
in
ja
fisubrs
xchg
ds
mov
fs
xor
xchg
xchg
xchg
fsubl
in
add
out
out
inc
push
and
mov
pop
push
test
and
push
insl
ret
stos
push
push
rcrb
push
fstp
xchg
mov
fs
stos
mov
aaa
sbb
out
out
int
sub
data16
lods
inc
xchg
shrl
xchg
adc
pop
ret
push
pop
mov
into
lds
push
sub
clc
xchg
cltd
cmp
and
in
cmp
jnp
jmp
pop
adc
and
mov
call
mov
fldl
lods
push
pusha
pop
cmp
das
xor
or
clc
dec
xor
pop
inc
xor
xchg
jns
insb
repz
and
das
hlt
cmc
clc
dec
mov
mov
and
pop
fwait
push
cltd
mov
pop
push
xor
jge
dec
adc
xchg
dec
in
xor
aaa
or
push
adc
pop
pop
mov
int3
dec
mov
mov
jg
push
pop
mov
mov
and
in
or
adc
mov
inc
cmp
or
push
mov
jmp
js
out
dec
xchg
or
lock
and
cmpsl
adc
stos
fmul
pop
push
add
or
sub
adc
cld
or
sbb
andb
pop
mov
dec
repz
fs
mov
sbb
stos
push
clc
push
aaa
add
push
push
shlb
adc
lcall
push
data16
sub
nop
loope
mov
xor
sbb
add
or
out
scas
cld
fstl
sbb
sbb
jecxz
mov
int
pop
or
xor
jecxz
inc
leave
popf
out
fldcw
pop
lcall
testb
fdivl
mov
jp
add
cmp
andb
popf
jp
scas
mov
add
xlat
push
jns
jge
pop
jbe
mov
test
jo
out
scas
insl
insb
mov
push
cmpsl
sub
inc
add
mov
jo
repnz
popf
xchg
jbe
lods
movsb
outsb
or
mov
mov
sbb
jle
cmc
lahf
push
and
jno
jle
les
jmp
stc
adc
jae
int3
pop
lcall
add
mov
mov
inc
mov
xor
mov
and
shll
int3
mov
call
scas
test
or
push
cltd
jecxz
jmp
adc
aam
lods
insb
push
icebp
pop
cmp
pop
es
sub
es
icebp
cld
movsb
or
je
outsl
jb
dec
jge
xchg
cwtl
fwait
mov
repz
aad
add
scas
std
xor
addr16
mov
cmc
ja
or
xchg
inc
lds
arpl
pop
fs
in
xchg
mov
cmpsb
and
jecxz
sub
or
xchg
adc
mov
outsl
pop
rcr
in
mov
push
mov
mov
loopne
lock
enter
lret
fdivs
shlb
in
scas
adc
xor
jp
xor
movsl
push
roll
and
add
inc
jbe
adc
hlt
xchg
arpl
fisubl
enter
sbb
andb
xchg
pop
cwtl
pop
aam
jge
leave
in
stos
xor
stc
mov
add
sti
stos
cld
lahf
or
mov
push
stos
or
cli
mov
neg
xchg
ror
push
sbb
mov
xchg
cmp
rorl
add
ret
push
pop
fdivrs
push
jb
sbb
aam
sbb
pop
adc
bound
xchg
and
sti
les
daa
pushf
xor
xor
xor
aam
sbb
jge
das
mov
lock
xchg
xchg
fs
adc
mov
mov
aas
add
shll
and
rorb
jne
lods
or
jae
sub
pop
jne
sbbb
test
xchg
and
mov
cmp
add
and
and
outsl
xor
daa
hlt
mov
dec
into
in
sbb
fsubl
fisttpll
ret
mov
loopne
adc
ss
add
fisubl
cwtl
out
lcall
jne
mov
stos
cs
cmp
int
xor
jae
in
mov
cmp
push
and
cmc
fsub
mov
dec
jo
repz
shlb
add
stos
xor
loop
inc
rolb
adc
push
das
or
or
add
sub
lcall
cmp
shlb
notl
dec
lret
outsb
pop
int
add
mov
mov
test
cmp
in
cltd
imull
and
inc
sbb
dec
mov
jnp
jns
out
push
ljmp
aaa
cmpsl
inc
daa
insl
stos
loopne
inc
int
imul
dec
mov
mov
pusha
push
fwait
stos
pushf
xor
cwtl
push
test
mov
je
ja
xchg
out
cmp
jne
inc
pop
cmp
mov
jbe
fisttpl
cli
sbb
int
xchg
in
andl
fstpt
jne
add
and
sub
lds
jae
lods
push
aas
push
add
movsl
ja
and
hlt
adc
cwtl
or
fildll
repnz
push
hlt
lods
inc
push
or
add
ja
xchg
loop
lock
out
rcrl
pusha
into
sbb
pop
mov
jns
and
in
lods
fwait
pushf
jb
lock
out
leave
bound
adcl
inc
xor
aas
sub
adc
sub
rolb
sbb
je
xchg
ss
leave
leave
imul
and
sub
adc
jno
jbe
shlb
and
loope
lds
lret
sub
dec
mov
adcl
fidivl
push
xchg
pop
or
and
jbe
orl
fnsave
cmp
lods
sub
pop
cmp
pushf
dec
push
sub
test
insb
dec
pushf
mov
repz
sbb
sti
test
dec
adc
xor
jl
mov
sub
xchg
outsl
leave
and
xor
add
arpl
jns
pop
lret
sbb
mov
and
mov
inc
movsb
repz
aam
scas
popa
mov
or
stc
shrb
es
cwtl
stc
orl
aad
and
push
ss
shlb
loope
test
fidivl
leave
cmp
leave
addr16
mov
repz
or
jp
repz
dec
cli
addr16
cli
shld
mov
mov
jmp
mov
sub
sarl
pop
lahf
test
lods
cmp
and
push
inc
out
or
or
test
inc
pop
dec
lods
shll
lret
lea
cmp
dec
xchg
mov
xor
ss
pop
mov
das
cmp
push
xchg
pop
add
clc
xchg
stos
lods
sbb
mov
pushf
adc
dec
icebp
jno
mov
xor
cwtl
mov
and
mov
or
or
iret
xchg
test
sub
fisubrl
sub
in
pop
cmp
mov
or
insl
lods
jecxz
xor
pop
mov
popf
dec
cld
cmp
outsl
int
js
jl
jnp
pop
jno
icebp
ja
ljmp
sar
jno
jge
mov
hlt
pusha
and
push
je
jmp
jg
sub
fwait
stc
sbb
fnstenv
xor
je
mov
leave
fldenv
testb
repz
popl
leave
adc
ret
push
inc
sub
or
loope
xchg
jns
popf
andl
sahf
sub
jo
movsl
hlt
add
out
icebp
inc
addr16
xlat
mov
jo
icebp
data16
mov
mov
add
pop
addr16
sub
or
mov
stos
jmp
mov
loop
test
mov
push
lds
sbb
stc
adc
dec
iret
xchg
or
add
inc
rolb
cwtl
xchg
xchg
and
js
movsb
xor
sahf
sbb
dec
imul
scas
xchg
mov
push
mov
ret
jno
notl
call
adc
pop
pop
or
popa
data16
xchg
mov
pop
and
js
and
js
mov
sbb
clc
and
sbb
mov
lahf
fstpt
in
jbe
jbe
nop
push
pop
fdivrl
aam
dec
push
lock
push
xchg
add
aam
xchg
inc
les
stc
sub
xchg
xor
adc
ljmp
sub
push
cmp
sahf
jnp
push
inc
scas
inc
pushf
mov
mov
pop
lea
fstl
mov
in
or
xor
sbb
test
mov
dec
jle
adcl
pusha
mov
jmp
pop
pop
xor
fmull
adc
popa
xchg
in
xor
xchg
jae
dec
cs
jns
xchg
testl
push
scas
jae
and
popa
lds
mov
stos
decb
scas
cmpsl
pop
pop
jae
jmp
imul
dec
ficompl
popa
sub
inc
mov
dec
sbb
cwtl
repz
es
fidivl
dec
and
jg
subb
fisubrs
insl
out
inc
je
jne
xor
or
push
in
ljmp
jmp
dec
dec
mov
stc
fwait
popf
sar
js
jl
sbbb
loope
sbb
loope
leave
lret
daa
icebp
andb
and
cmp
int3
push
sbb
cmpsb
movsb
or
ret
je
or
scas
shll
shll
mov
repz
stos
xchg
sub
cmp
push
add
pop
into
mov
testb
in
lea
inc
ja
mov
sbb
sub
and
mov
xor
mov
mov
cld
setns
inc
call
sbb
mov
cmp
mov
pop
aaa
mov
rcl
xlat
mov
mov
sub
add
cmpsb
jmp
mov
cmpsl
xchg
test
fistl
jo
fcos
dec
xchg
js
shlb
jns
jae
out
loop
cmp
das
mov
daa
outsl
outsb
sbb
fsubrl
aad
sbb
lret
sub
pop
lock
mov
ljmp
push
mov
mov
add
pop
repnz
fiaddl
xor
pop
and
xchg
and
pop
dec
pusha
add
push
stos
nop
xchg
cld
pop
sbb
enter
jae
jne
add
sbb
lods
inc
xchg
int
xor
repz
xchg
inc
xor
push
scas
cmp
call
mov
push
mov
and
push
icebp
outsl
dec
mov
adc
lcall
das
out
dec
sub
fildll
xorl
or
sarl
or
cmp
arpl
cmovg
ljmp
sub
pushf
loope,pn
test
nop
adc
aas
and
jg
pusha
nop
rcl
lods
mov
push
cld
xor
cltd
data16
sbb
cmp
stos
sbb
jmp
dec
test
dec
adc
mov
cmp
sahf
js
daa
mov
test
lds
out
push
shll
orb
bound
lods
mov
and
dec
pop
jns
call
ds
and
jb
fdivl
rolb
pop
add
in
pushf
sub
or
inc
cs
push
notb
ljmp
arpl
insl
outsl
cwtl
sbb
outsb
bound
jle
push
xchg
sbb
jb
mov
lods
push
cwtl
frstor
scas
out
mov
pop
mov
ret
xor
mov
jg
mov
aad
inc
lret
mov
xchg
hlt
cmp
jo
add
adc
dec
jle
lret
cmpsb
inc
push
xchg
ljmp
and
les
mov
and
adc
jbe
cmp
jbe
pop
adc
dec
mov
in
mov
mov
shll
dec
add
cmc
jns
cld
pop
lcall
jns
daa
add
push
adc
mov
mov
push
lcall
lahf
lods
int3
pushf
out
lds
push
out
neg
ret
arpl
push
or
push
push
xor
inc
inc
out
pop
add
sub
and
xchg
sbbl
mov
cmpsb
push
mov
loope
js
outsl
push
shrb
popf
jmp
jmp
jo
fsts
lret
mov
cld
xlat
cmp
xor
push
movsl
fnstenv
add
rol
scas
fbld
gs
popa
daa
mov
add
push
mov
mov
daa
cmp
adc
mov
fcoms
dec
int3
mov
and
imul
loope
imul
add
test
mov
sbb
dec
popa
jecxz
dec
inc
pop
lock
lds
mov
insb
stc
in
movsl
push
sub
ss
mov
outsl
fildll
push
pop
sbb
lahf
jns,pn
test
dec
loope
loope
push
dec
data16
jns
and
xchg
fsub
mov
dec
jp
mov
in
adc
mov
mov
std
insl
ljmp
push
mov
jp
add
adc
mov
loop
faddl
xchg
push
or
notb
in
pop
and
std
ss
cmp
decb
movsl
dec
mov
push
repnz
mov
and
lods
adc
inc
fdivrs
movb
loopne
mov
pop
jle
dec
dec
push
rorb
test
sub
mov
gs
mov
mov
jge
cmp
jge
sti
enter
fdivl
out
test
pop
jge
mov
mov
dec
je
nop
rorb
inc
sbb
out
outsb
ljmp
or
mov
pop
push
mov
lock
jno
clc
data16
dec
andl
aam
pushl
or
int
rclb
xchg
push
popf
jno
das
ja
push
jp
jnp
adc
dec
push
mov
faddl
cmc
add
inc
cld
nop
mov
fdivrp
stc
out
push
insl
clc
and
adc
dec
ret
mov
cmp
lods
fcmovbe
ss
repz
mov
add
mov
and
or
mov
ss
mov
and
jecxz
add
cmpsb
xchg
and
sub
add
das
mov
pop
pop
inc
inc
jae
fwait
hlt
clc
inc
mov
mov
cs
stos
iret
out
lds
je
cmpsb
mov
rcl
lods
jb
xor
mov
aad
jle
cmp
es
cmpsl
pop
inc
pop
jl
std
enter
inc
xchg
mov
cmp
lea
push
jbe
sbb
xor
mov
bound
push
mov
sbb
dec
fdivrl
push
push
mov
mov
je
jno
fstp
jg
mov
xchg
add
aad
stos
sub
cmp
imul
lahf
jl
xor
or
scas
and
andl
aaa
sub
aas
bound
call
iret
lret
mov
hlt
cmp
mov
mov
js
add
mov
mov
iret
adc
cmp
jp
movsl
out
push
xchg
mov
cltd
pusha
nop
push
cmp
test
cltd
cmp
orw
clc
push
pop
cmpsb
aad
cltd
jns
jle
hlt
mov
cmpsb
mov
add
push
mov
test
lea
pusha
pop
fildl
ja
jne
inc
adc
inc
aad
adc
pop
repz
clc
popf
inc
cmp
aas
mov
test
sbb
imul
mov
mov
adc
into
imull
sub
dec
addr16
add
andl
adc
movsb
push
subb
int
dec
lods
xchg
cli
xor
lods
std
mov
es
iret
sub
mov
sub
mov
add
testl
xlat
fdivp
dec
inc
and
jecxz
mov
lods
sar
cmpsl
adc
mov
inc
in
gs
or
dec
cmc
lret
add
out
aas
sbb
xchg
push
test
add
push
xchg
cmpsb
or
in
or
mov
push
test
xor
jmp
sub
mov
xor
pop
js
scas
sti
jg
mov
push
lods
cmpsl
and
push
addb
loopne
xor
cmp
pop
xor
dec
ds
stc
jmp
test
and
popa
sti
lods
ss
ret
mov
test
xchg
aas
in
sub
jmp
std
lds
aam
dec
adc
mov
xchg
lock
mov
lahf
sub
pop
mov
jae
and
cmp
pop
xchg
xchg
into
clc
iret
jmp
xchg
sbb
mov
sti
incl
dec
jmp
mov
jp
dec
sbb
push
repz
ret
cwtl
mov
outsb
stc
ja
adc
cmp
push
pop
mov
ljmp
mov
and
mov
xor
and
lahf
insb
dec
aam
xchg
stc
xor
setg
testb
movsb
xchg
fdivrp
call
fldt
movsb
xor
movsl
shlb
pop
inc
inc
cs
adc
jns
mov
shr
mov
xor
xor
leave
lret
add
fcompl
js
mov
push
push
inc
xchg
in
pop
xlat
in
jnp
scas
add
xor
jb
outsb
jb
xchg
xor
vcmppd
test
aad
mov
pop
lret
ror
jns
dec
lods
jns
xor
scas
or
clc
cmp
lea
in
xlat
xchg
jae
push
jl
pop
push
cmp
cmp
fsub
sub
jb
lret
ja
ljmp
push
adcb
mov
jnp
loop
jnp
out
pop
lods
in
enter
jg
subb
and
lcall
or
fsubp
jns
nop
js
ds
mov
cmp
insb
jg
cs
fists
jl
jmp
pushf
mov
xchg
shrl
ja
jnp
sub
or
jb
enter
mov
outsl
clc
aam
adc
pop
sbb
cmp
or
sbb
inc
jns
dec
arpl
test
mov
stc
repz
jecxz
adc
add
xor
and
push
imul
xchg
test
mov
stc
repz
jecxz
adc
cmpl
imul
xchg
sub
cltd
shr
ret
stc
repz
jecxz
adc
add
xor
and
push
imul
xchg
test
mov
push
xorl
es
and
int3
aam
in
add
mov
insb
inc
outsb
xor
es
sub
sub
fsub
int3
aam
in
mov
movsb
mov
fs
push
pop
dec
insb
xor
adc
adc
add
in
int3
in
cmc
lods
test
insl
mov
cmp
xor
dec
bound
push
sub
fmull
addr16
movsb
push
push
and
repnz
lahf
fnstsw
cmp
and
ja
sbbl
adc
adc
fmull
test
mov
pop
adc
sti
popa
or
sbb
mov
and
fstps
jmp
adc
add
cmc
mov
int3
sbb
mov
test
or
mov
pushf
mov
repz
mov
inc
movsb
in
sub
dec
mov
je
je
mov
insb
int3
je
sub
roll
xchg
cld
cmp
dec
cmpsb
cmpsb
insl
xchg
pop
jmp
jl
dec
ja
adc
add
cmp
in
mulb
movsl
popf
mov
inc
jl
dec
gs
jne
add
sbb
cmp
dec
cwtl
mov
mov
lret
fnop
test
je
or
sub
add
inc
pop
data16
inc
fwait
movsb
test
mov
out
movsb
mov
aaa
and
add
arpl
pusha
dec
xchg
popf
mov
cld
lock
mov
fs
push
jl
insb
xor
and
adc
add
hlt
fsub
int3
aam
in
mov
movsb
mov
fs
push
jl
insb
xor
and
adc
add
hlt
fmul
dec
imul
fsubs
inc
inc
push
lret
mov
data16
pop
adc
cmp
lods
pop
fdivrs
mov
call
fs
hlt
push
subb
mov
cs
pop
arpl
push
imul
mov
inc
xchg
icebp
rclb
packssdw
sbb
mov
xorb
call
incl
xchg
xchg
rcll
orb
ja
mov
and
shll
xchg
mov
test
fs
inc
cmp
ss
imul
mov
pusha
mov
jns
and
push
or
bound
cld
pop
aad
pushf
lods
push
mov
mov
loopne
sbb
fldenv
enter
jge
test
jne
ljmp
mull
lock
add
les
mov
and
int
dec
mov
inc
icebp
subl
in
mov
imul
mov
in
popa
and
insl
cwtl
push
dec
jns
push
sub
iret
outsb
push
sub
mov
inc
lret
dec
popf
popf
or
arpl
fcoms
add
mov
mov
dec
jo
adc
fidivl
and
inc
fisttpl
gs
mov
jg
bound
and
cli
xor
pop
jno
insb
jbe
adc
stos
lods
aad
pop
push
and
shlb
orb
xlat
insb
mov
xchg
movsb
pusha
cwtl
mov
iret
and
push
call
mov
rcll
mov
in
adc
lods
push
cmp
or
les
mov
mov
add
xor
push
sbb
xor
cmp
jge
mov
shll
mov
test
cmpsl
mov
xchg
add
in
adc
fbld
push
mov
mov
fwait
jb
mov
sub
mov
stos
xchg
jmp
push
sbb
ds
rcl
jmp
inc
daa
sbb
xchg
stc
xchg
cmp
inc
shrl
mov
sub
movsl
dec
xlat
aaa
mov
push
add
test
add
mov
call
dec
sub
aaa
inc
add
inc
dec
xchg
mov
sbb
je
lcall
aas
sbbb
push
in
aad
pop
xchg
xchg
jb
xchg
push
jo
push
sub
sahf
pop
into
sbbb
pop
dec
jg
adc
rclb
lcall
pushf
xchg
pushf
pop
xor
imul
push
repz
icebp
out
sub
test
shll
leave
pusha
push
push
ljmp
or
loop
xchg
jmp
imul
int3
cltd
pop
sbb
lds
cmpsl
dec
and
adc
movsl
pop
fldcw
cmp
pop
cmp
aam
into
pop
mov
mov
cld
call
xor
es
push
cmp
fidivl
jp
mov
aas
inc
sbb
push
rcrl
lret
push
adc
mov
sarl
push
in
popa
cld
pop
jl
mov
sub
cwtl
dec
mov
pop
push
lods
fstps
xlat
mov
pushf
jbe
cmp
es
and
jp
pop
lret
push
cmc
pusha
mov
aas
pop
push
xchg
stos
jbe
sbb
inc
jle
outsb
daa
inc
mov
scas
mov
cmp
sbb
cli
in
jo
adc
dec
xor
in
or
pop
xchg
addr16
mov
adc
mov
rcrl
lret
push
aam
jge
pop
popa
arpl
lods
pop
repnz
xchg
push
dec
xchg
mov
outsb
scas
pop
es
outsb
or
outsl
imul
cmc
inc
ret
ret
stos
sbb
jle
ret
outsb
xor
jg
pop
addr16
push
dec
out
dec
sub
and
and
xchg
pop
jp
dec
sbb
add
fisubrs
sub
push
dec
sti
cs
fmulp
cli
sub
or
push
pop
add
push
out
pop
aas
or
shll
movsl
fcmovnu
fstps
mov
or
repz
pop
ret
test
cmp
xor
flds
into
push
mov
popf
dec
mov
in
xor
pusha
imull
xchg
cmpsl
push
mov
push
addl
sbb
mov
add
cwtl
inc
push
add
imul
xor
nop
mov
jge
popf
lock
push
or
mov
shl
cmp
lret
dec
mov
popa
dec
mov
push
leave
sahf
pop
jmp
or
pop
pop
lret
decb
das
out
pop
cmp
jmp
pusha
pop
push
aaa
pop
scas
lcall
out
mov
push
add
pop
popl
mov
pop
inc
sub
clc
aad
aaa
pop
or
pop
mov
leave
sub
or
loop
add
sarb
aaa
insb
outsb
imul
mov
sub
or
push
dec
sub
dec
cmpl
xor
sub
fsub
mov
aad
mov
test
push
push
lret
pop
adc
cmp
je
lret
cmp
adcl
cmpsb
inc
push
lcall
add
adc
cmpsl
mov
xchg
aam
call
fwait
cmpsl
xorb
cmpsl
loope
dec
stos
mov
adc
mov
xor
pop
fmul
icebp
shr
pop
jb
add
shl
jns
cmp
out
cmp
mov
movsl
sbb
sub
scas
jo
ja
popa
shlb
mov
pop
aas
lret
test
jbe
stc
stc
xchg
nop
sbb
xor
fstpl
mov
sbb
inc
scas
rol
xchg
adc
inc
stos
hlt
aas
loope
mov
mov
cmp
xchg
xchg
inc
jle
mov
and
push
mov
adc
pop
mov
movsl
aam
lcall
jecxz
fbld
pop
test
enter
insb
filds
mov
mov
dec
bnd
adc
xchg
aas
rcll
sub
and
fisttpl
cmp
imulb
adc
cmp
mov
shrl
das
adc
jbe
xchg
jp
insl
add
jae
adc
and
std
and
insb
xchg
pop
push
sbb
mov
sti
push
and
sub
jmp
orb
or
iret
fistps
fisubl
std
out
cmp
dec
jno
add
hlt
shlb
and
ds
mov
push
sbb
lahf
mov
test
dec
aas
adc
inc
push
sbb
push
sbb
fbstp
repnz
jg
add
xchg
mov
lds
lds
dec
movsl
repnz
mov
xchg
imul
jecxz
not
loope
mov
mov
and
mov
stc
fisubl
mov
mov
jp
ficoml
in
js
cltd
pop
dec
loope
mov
sarl
rcrb
fwait
xchg
xchg
daa
idivb
and
mov
and
add
mov
dec
fdivl
movb
cwtl
out
pushf
adc
or
inc
arpl
sahf
imul
or
mov
or
leave
pop
and
sub
std
jb
scas
nop
cmp
rorb
loop
mov
test
sub
sub
stos
push
fstps
int
fwait
xor
fsubs
pushf
sbb
xchg
jp
jns
add
and
jo
inc
mov
dec
orl
and
xchg
ret
lea
xchg
jge
cmp
decb
xchg
cmp
mov
inc
popa
mov
je
cmp
loop
ja
ret
rcll
push
xchg
xchg
xchg
repnz
rclb
mov
lret
in
sub
jge
adc
mov
dec
sub
fdivr
rcrb
inc
adc
bound
cmp
pusha
into
arpl
cmp
mov
xorb
sbb
sub
pop
cmp
stos
sbb
aad
jno
lock
adc
xchg
popa
mov
test
in
shrb
mov
adc
xor
xor
je
xor
loopne
out
pop
out
pop
aam
mov
pushf
test
shlb
aas
shlb
or
add
iret
mov
cmc
out
push
aaa
test
and
outsb
fwait
loope
imul
jl
orb
repnz
jg
cld
movsb
inc
sbb
pusha
mov
inc
lea
stos
jne
add
adc
int
sbb
shrb
pushf
jl
mov
sub
ret
pop
xchg
cld
insb
cmp
lahf
dec
fidivl
jge
adc
fcoms
and
adc
aam
hlt
std
mov
cmp
jmp
jb
xchg
aaa
push
jecxz
or
add
mov
lock
and
lock
xor
pop
inc
test
test
dec
adc
jo
xchg
dec
mov
mov
pop
mov
cs
jb
cltd
jno
and
mov
pop
jle
dec
mov
loope
test
ds
and
xchg
stc
mov
repnz
inc
stos
xchg
sub
xor
imul
sub
repz
cmc
cli
cmp
ljmp
btc
clc
js
aaa
mov
les
call
pop
repz
add
imul
mov
mov
fmull
inc
daa
and
adc
xor
jo
jg
fstenv
loop
push
ret
xchg
outsl
cmp
loopne
add
pop
inc
xor
fiadds
jg
and
push
loope
pop
dec
cmc
xchg
cmpsl
inc
rcll
sbb
loop
sti
inc
xchg
cmp
out
lea
jecxz
add
in
enter
ret
sub
outsl
int
mov
orl
dec
and
adc
jle
cmp
cwtl
sar
sub
gs
add
and
int
test
dec
ret
aas
sub
cli
xchg
shlb
sbb
jge
dec
mov
pop
xchg
shll
hlt
mov
filds
and
mov
loopne
add
pop
xchg
in
dec
mov
insb
adc
lahf
and
fcoml
cmp
push
or
popa
jo
cli
enter
xlat
repnz
xchg
aad
cmp
mov
dec
call
mov
out
fnstsw
pop
xchg
adc
xchg
mov
fwait
or
xchg
xor
fs
inc
mov
pop
insl
xchg
pop
mov
lret
or
dec
jns
fmull
cld
andl
pop
out
hlt
ds
jle
add
xor
dec
adc
push
aad
mov
sbb
pushf
xchg
sti
lods
fildll
jnp
add
clc
pop
ljmp
xor
mov
xchg
ficompl
push
xchg
mov
lret
jne
into
xor
ret
adc
dec
sbb
cmp
addr16
test
fmull
aas
sbb
scas
jle
pop
movsb
add
push
push
pop
shrl
ret
je
dec
pop
sbb
sbb
nop
std
dec
adc
repz
ja
dec
out
test
push
lock
lret
out
sub
xchg
and
int
jl
int
mov
insl
push
jns
pop
jle
push
or
js
cmc
cmp
push
adc
xor
xor
int3
fs
bound
mov
jmp
fxch
sub
cld
push
pop
addl
jb
xlat
or
sub
daa
sbb
sub
aad
int3
insl
or
jns
ds
jl
out
add
mov
insb
inc
sub
jmp
mov
pop
iret
push
movsl
call
rclb
sub
insl
sub
sbb
enter
sahf
daa
inc
jo
xchg
mov
std
pop
lret
and
cli
jb
mov
mov
pop
fdivrs
jp,pt
jbe
leave
mov
std
dec
popa
stos
inc
clc
mov
cli
ss
out
cmpsl
mov
cmp
mov
cld
std
jl
xchg
popaw
fcmovu
cld
cmp
data16
mov
push
lods
fsubp
jnp
fbstp
hlt
mov
out
fsubs
test
ret
pusha
jle
pop
shrb
xor
cld
adc
fwait
ss
flds
cmc
adcl
and
popf
xchg
je
je
lcall
incl
arpl
jbe
outsb
ret
xchg
adc
cmpsl
into
data16
mov
adc
repz
pop
cmp
out
xchg
test
sarb
adc
cmp
mov
std
xchg
call
inc
or
adc
in
adc
xchg
shl
nop
mov
pop
pop
or
add
push
push
xor
in
subl
push
jbe
scas
xorl
fistpll
loop
loope
or
mov
scas
call
aas
mov
pop
divb
dec
vprotd
stos
pop
js
bound
sbb
pop
jbe
jp
cmpsl
push
in
xchg
add
icebp
jb
sbbb
test
pop
rorb
mov
xor
je
je
ret
mov
jp
fwait
mov
lods
scas
lahf
cld
jmp
lret
and
leave
inc
or
mov
add
dec
int
sbbb
xchg
jecxz
push
std
mov
push
and
dec
es
mov
inc
int3
aas
pop
sbb
pop
dec
mov
pop
sub
adc
pop
pushf
lods
or
enter
add
and
xorl
repz
pop
push
push
in
fidivrl
fst
mov
adcb
stc
imul
js
xchg
dec
orb
not
xchg
mov
mov
mov
jg
lock
xchg
sti
jne
sub
adc
mov
or
adc
movsl
mov
xor
pop
test
les
xor
out
insl
fisttpll
adc
nop
inc
cwtl
cmp
inc
xor
pop
aaa
mov
xchg
pop
and
sbb
jnp
fstl
add
pop
push
cli
xlat
fnsave
mov
sub
sbb
jne
fldt
fisttps
es
mov
lds
adc
cmp
out
sbb
mov
dec
push
fbstp
loopne
xlat
in
gs
add
xchg
or
add
push
in
mov
push
sbb
xchg
outsb
mov
and
cmp
loopne
hlt
sub
lods
jge
inc
loope
fsubr
fidivs
mov
jmp
dec
add
mov
leave
fdivrl
les
inc
xlat
stos
loop
jno
jnp
popa
or
xchg
stos
scas
scas
pop
add
gs
jmp
jmp
lods
scas
mov
into
mov
outsl
fdivs
bound
fcmovnu
lret
mov
fistpl
sub
pop
sub
dec
in
cs
mov
sub
in
outsb
xor
loop
or
and
mov
mov
push
rorl
ret
les
dec
repz
mov
arpl
jno
cs
push
and
jle
pop
fildl
dec
mov
sbb
mov
pop
repnz
and
ljmp
inc
scas
aaa
scas
stos
jae
mov
push
enter
test
jnp
mov
rorb
lcall
cmp
jns
mov
repz
mov
sub
jge
stos
push
dec
jns
ss
sbb
shl
xor
xor
inc
int3
add
and
mov
pushf
or
jb
lock
ljmp
xlat
js
cltd
pop
pop
call
pop
sub
mov
mov
jecxz
adc
arpl
leave
pop
adc
and
loope
fwait
mov
mov
cmc
push
out
outsl
bound
and
test
xchg
stos
movsb
dec
icebp
js
mov
sub
movsl
sub
pop
fwait
out
rcl
jp
ret
mov
cmp
mov
dec
fiaddl
jg
out
adcl
xor
imul
mov
fsubp
mov
cmpsb
jle
add
adc
outsl
xor
jge
jle
push
push
xor
or
and
xchg
xor
aam
idiv
mov
xor
mov
sub
mov
cmp
sub
cmp
rcll
push
adc
add
mov
clc
add
add
dec
les
loop
rorl
lahf
shrb
xor
pop
stos
popf
dec
enter
loope
mov
loope
xor
or
insl
shll
xor
dec
iret
icebp
mov
dec
fcompl
adc
pop
popa
cli
add
ret
pop
cmpsl
fs
aaa
aaa
test
jae
inc
jge
lods
inc
push
cs
pop
add
push
jmp
jmp
test
mov
or
in
cmp
jmp
add
aas
and
daa
mov
mov
adc
dec
lods
jne
lahf
mov
push
movsb
and
xchg
imul
cmp
in
xchg
jno
lcall
divb
mov
out
out
or
stc
les
jmp
sbb
hlt
push
mov
cld
negl
pop
fstpl
lea
jge
mov
jno
std
stos
sbb
jecxz
mov
mov
ss
iret
iret
mov
push
jae
mov
pusha
jbe
aaa
pop
cltd
xor
xchg
jnp
jo
leave
sub
test
adc
jbe
lock
sub
fs
push
fwait
sbb
push
or
jl
gs
inc
sahf
scas
pop
test
fisubrs
sbb
adc
clc
cmp
fwait
sub
clc
push
sahf
iret
or
testb
dec
insb
xchg
adc
jl
push
scas
addr16
cmp
ds
pop
rorb
dec
fcmovbe
scas
dec
adc
fcoml
inc
rolb
and
dec
xchg
xor
ds
dec
js
in
cmp
push
sbb
js
bnd
xchg
mov
mov
bound
sub
popl
cld
jnp
call
mov
sub
cwtl
mov
insb
test
sub
fwait
sub
imul
mov
lods
push
lods
int
adc
pop
sbb
jmp
clc
mov
or
jecxz
sub
add
fstpt
jecxz
lods
jnp
pusha
jnp
mov
bound
movsl
stc
test
sbb
sbb
cmp
iret
mov
in
cmp
in
cmpsl
cld
cmp
push
add
inc
mov
cs
xor
mov
xlat
adc
insl
sub
pop
imul
fldenv
int
addr16
jge
lret
dec
cmpsb
int
mov
ret
lcall
outsb
cmp
or
negl
mov
insl
cmc
pop
ss
jno
cmpsb
inc
xchg
dec
sbb
sub
pop
arpl
or
cwtl
ret
repz
imul
inc
mov
pushf
or
add
inc
out
and
ljmp
repz
inc
fsubr
jb
mov
into
add
xchg
add
or
fiadds
sub
xor
ret
scas
mov
loop
jmp
mov
jns
mov
mov
jp
aas
repnz
mov
or
int3
mov
mov
out
test
ret
mov
mov
adcb
repnz
push
ja
lods
and
pop
jnp
inc
lods
stc
jo
push
stos
mov
mov
push
xor
mov
push
sub
fsubl
lds
jmp
lcall
fsubrl
mov
xor
ja
mov
outsl
loop
cmp
ljmp
mov
dec
iret
ror
loope
push
out
cltd
jno
cmp
fadd
je
lcall
pop
std
in
popf
in
mov
sub
mov
out
out
inc
mov
mov
adc
aam
loopne
gs
xor
sbb
sub
sbb
sbb
inc
hlt
cmp
aam
insb
popa
jle
outsl
les
mov
addr16
xchg
int3
orl
cmp
jl
cs
and
push
or
sub
adc
cmp
add
test
and
inc
les
pop
insb
lcall
aas
sub
hlt
jmp
in
nop
xchg
adc
dec
cld
cmp
adc
mov
loopne
out
pop
pusha
leave
clc
mov
push
int
std
insl
jl
add
xchg
cmp
mov
push
fimull
js
or
cwtl
imul
jp
test
or
je
push
add
and
add
dec
mov
fstl
cmp
lods
es
cmpsl
push
mov
and
movsb
int3
mov
sahf
inc
push
rcl
inc
add
mov
test
mov
outsl
loope
adc
mov
pusha
lock
xchg
sub
cld
test
sti
adcl
pop
rcl
sub
lods
pusha
and
jbe
aaa
jno
cmpl
push
jns
insl
and
dec
lods
and
jne
lods
and
adc
adc
sbb
push
dec
mov
int3
fists
int3
ficoms
in
mov
movsb
mov
fs
push
jl
insb
xor
and
adc
add
hlt
fsub
int3
aam
in
mov
movsb
mov
fs
push
jl
insb
xor
and
adc
add
hlt
fsub
int3
aam
in
mov
movsb
mov
fs
push
jl
insl
xor
and
sub
fsub
int3
aad
in
mov
movsb
mov
add
mov
jl
sbb
lods
repz
sti
rcll
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
cmp
xchg
clc
sbb
lods
push
mov
daa
in
push
std
push
or
cmp
cmpsb
insl
xchg
jge
lea
data16
inc
int
frstor
in
push
std
push
or
cmp
cmpsb
insl
xchg
jge
lea
inc
fidivs
xchg
sub
jae
jno
mov
dec
mov
out
xchg
gs
int
pusha
jmp
mov
dec
cmpsb
fldcw
pushw
mov
data16
and
enter
add
out
es
mov
adc
dec
push
lea
addr16
push
xlat
mov
mov
sbb
pop
ret
mov
cmpsb
xchg
sahf
adc
cltd
and
mov
in
arpl
push
repnz
idivb
jl
popf
mov
mov
fbstp
or
scas
and
into
mov
pushf
sub
fnsave
bound
clc
mov
in
push
xchg
stc
push
negb
dec
mov
cmpsb
insl
xchg
jge
lea
lods
push
mov
es
push
std
inc
dec
divb
xchg
pop
xchg
icebp
adc
or
cmp
int3
push
cltd
jg
add
mov
test
lcall
or
xor
insl
sarl
adc
adc
push
mov
fs
mov
mov
mov
insl
xchg
jge
lea
lods
push
mov
es
push
std
push
or
cmp
cmpsb
insl
xchg
jge
lea
lods
push
mov
es
push
std
push
or
mov
icebp
and
in
ljmp
push
insb
dec
sub
rolb
sti
ror
icebp
push
dec
add
stos
popf
out
add
nop
pop
lods
ss
dec
arpl
imul
sbb
inc
adc
dec
jo
and
shll
jae
pusha
mov
jl
jno
jg
idivb
dec
int
sub
ja
mov
stos
push
dec
ljmp
xchg
jno
inc
vunpckhpd
push
dec
lret
mov
bound
and
inc
insl
stos
lret
mov
lods
imul
test
inc
dec
adc
xor
test
out
fmul
mov
mov
fnstenv
je
loop
sbb
cmpsb
adc
jns
push
mov
aam
dec
push
jo,pt
dec
xchg
shrb
pop
aas
or
mov
jecxz
and
mov
rclb
outsb
or
rorl
jno
out
mov
rcll
jg
pop
mov
frstor
pop
adc
aam
or
outsl
mov
mov
inc
imulb
adc
pop
xor
cmp
mov
mov
lret
and
icebp
loopne
cld
inc
adcb
lret
mov
gs
mov
or
ret
das
cmp
xor
adc
or
or
call
mov
idivb
ret
push
inc
mov
mov
and
mov
cmp
xchg
dec
lea
sub
pop
movsb
testl
cmpsb
sbb
data16
add
xor
sbb
addr16
int3
int3
push
xor
test
push
lret
pop
hlt
sar
and
mov
xor
ss
mov
dec
iret
mov
ret
mov
xchg
or
sbb
fstl
jg
pop
jmp
lds
cld
and
inc
cmp
stos
push
das
out
adc
adcb
xor
repnz
fimuls
jle
sub
outsb
stc
pop
std
jle
mov
test
cmpsl
jno
jge
and
mov
loop
nop
mov
dec
jb
int
outsl
mov
push
lret
cmp
jecxz
shll
jecxz
push
add
jno
enter
loope
mov
xor
fwait
rcr
sbb
cmpsb
mov
dec
sahf
imul
mov
nop
jge
cmpsl
inc
xor
les
ja
test
test
sbbl
cmp
xor
movsl
pop
mov
and
sub
mov
cmp
insl
xchg
aad
xlat
icebp
mov
and
in
add
push
mov
sbb
pop
pop
hlt
pushf
mov
ljmp
sub
ret
adc
hlt
stc
and
insb
jle
fldl
jne
fsub
ljmp
loopne
or
mov
xor
bound
or
sbb
iret
adc
fstps
cmp
xchg
out
lods
jne
lock
mov
push
es
sahf
mov
pop
cmp
mov
imul
pop
cli
push
sub
call
and
add
cmp
mov
push
pop
incl
jne
or
jo
adc
mov
scas
icebp
aad
sbb
sbb
rcrl
mov
push
adc
outsl
fmull
cwtl
mov
xlat
outsl
mov
lret
pop
popf
jg
xor
leave
int3
sbb
sahf
in
or
sbb
orb
dec
cwtl
imul
or
movsl
and
repnz
pop
cmp
out
aad
adc
and
sbb
outsb
xor
jnp
adc
xchg
xchg
add
outsb
psrad
mov
bsr
arpl
push
xor
inc
pop
jno
inc
insb
dec
or
out
inc
adc
popf
lahf
ss
xor
jecxz
repz
xchg
lret
mov
fprem
mov
bound
push
pusha
imul
pushl
xor
jp
pop
cmpb
sub
push
pandn
xchg
dec
adc
and
mov
in
arpl
in
in
cmp
rcrb
faddl
out
cwtl
dec
dec
inc
pop
mov
pop
lds
jae
call
mov
mov
push
xchg
outsb
das
lods
out
ds
jnp
jo
cmp
mov
fsubrs
into
pop
jecxz
and
cltd
test
ljmp
and
pop
sub
mov
push
sbb
sub
int3
cmp
or
shlb
cmpsl
dec
cmpsl
inc
jmp
mov
in
stos
cmp
shlb
pop
ja
xchg
int
adc
jmp
push
dec
in
jns
push
vpunpcklbw
pop
cmp
cwtl
pop
ret
aas
sbb
gs
cmp
push
push
fiaddl
int3
jge
enter
push
inc
sti
push
fnstcw
enter
and
add
aam
bnd
and
scas
cmpsb
lahf
jecxz
mov
movl
add
jae
lret
jnp
mov
pop
das
dec
dec
frstor
into
mov
or
in
mov
cmpl
mov
cmp
clc
pop
test
dec
sbb
je
icebp
std
loopne
or
pop
scas
aam
out
pop
xor
ss
lahf
out
ret
mov
pop
pop
adc
xor
push
mov
loope
jae
mov
cmpsl
aaa
push
push
jle
jmp
xchg
daa
ret
in
arpl
mov
roll
mov
jl
pop
shlb
ficoml
mov
dec
and
pop
xor
fstpl
jnp
xchg
scas
mov
cmp
sbb
stos
rclb
andl
sbb
adc
inc
pop
in
push
fs
mov
pop
mov
jne
out
push
sub
sbb
jl
and
das
scas
addr16
jno
mov
sarl
cmp
pop
or
jle
nop
jo
jb
in
test
sahf
adc
test
push
out
out
dec
pop
sub
arpl
out
inc
inc
push
dec
gs
test
xchg
mov
sbb
inc
dec
jge
cmpsb
add
sub
leave
ret
es
int3
stc
ficoms
jo
xchg
cmpsb
cmpsl
insl
mov
push
test
jo
test
clc
out
cmp
ret
imul
movsb
dec
inc
repnz
das
inc
out
sbb
mov
push
sbb
sbb
lods
mov
mov
mov
pop
test
mov
jae
call
sbb
call
xor
inc
dec
andl
pop
inc
stos
or
add
lahf
out
ljmp
cs
shll
sbb
into
hlt
mov
adc
mov
push
ljmp
mov
sti
or
insl
inc
push
xor
fldcw
mov
push
fwait
push
scas
cmpxchg
pusha
les
xor
push
fwait
and
pop
ret
into
and
icebp
mov
push
loop
cs
movsl
xchg
xor
sbb
aam
pop
add
inc
cmp
shrl
sarl
cmp
test
xchg
adc
ss
jae
add
filds
xor
mov
inc
mov
pop
dec
or
jb
call
lds
fwait
in
mov
xchg
scas
inc
jae
sti
push
inc
dec
pop
inc
pop
mov
adc
mov
movsl
cld
arpl
int
adc
and
shlb
xor
mov
jecxz
outsl
pop
jns
inc
and
fsubs
mov
mov
dec
cmpsl
inc
push
outsb
xor
push
push
or
fidivl
cmp
ja
stc
cmpl
sbb
xchg
fidivrs
xchg
imul
add
mov
push
push
adc
aad
fsts
xchg
push
das
leave
cmp
push
xor
sub
scas
pop
es
pop
sti
sti
popa
in
mov
out
or
test
dec
shlb
arpl
cmp
xchg
std
loopne
fsubp
xchg
popf
mov
cmp
jecxz
test
jbe
pop
std
insb
repz
ja
cmp
jle
xor
aam
dec
stos
mov
sub
pop
push
aad
subl
addr16
aaa
pop
dec
mov
xor
inc
xchg
jno
mov
aaa
inc
fnsave
mov
pusha
jnp
pop
push
adc
mov
sarl
scas
cmpsl
mov
sub
sbb
mov
pop
and
inc
rcrl
insb
add
andb
mov
and
xor
mov
push
mov
mov
mov
push
test
jge
fs
pop
out
sub
pop
inc
mov
leave
jg
sahf
and
cltd
dec
test
nop
or
push
mov
xor
andl
jns
pop
pop
mov
mov
into
push
inc
push
inc
cmp
push
push
popf
dec
inc
mov
cmp
lods
outsb
adcb
hlt
leave
sti
imul
cs
sub
pop
or
cmp
jb
sub
push
movsb
mov
inc
aam
push
dec
sbb
popa
cmp
mov
pop
gs
xchg
pop
and
inc
mov
outsl
hlt
enter
dec
movsl
or
mull
xlat
cli
push
push
push
addr16
sahf
xchg
cmp
mov
ljmp
sub
das
push
mov
jmp
sub
jo
fs
rclb
fidivrl
enter
xchg
push
ss
add
inc
and
mov
pop
fidivrl
into
push
push
mov
lods
inc
xchg
inc
xor
mov
jb
mov
and
cld
std
ja
sub
xor
test
loopne
or
sbb
js
adc
fsubl
sbb
rcll
jno
movsl
cmc
xchg
mov
adc
in
push
in
xor
les
adc
jo
mov
mov
lret
push
lds
xchg
cmpsb
adc
roll
insb
std
repnz
sub
in
test
add
push
xchg
push
mov
cmp
pop
mov
loop
xor
inc
or
ror
jbe
fldt
push
adc
and
sub
mov
mov
xor
dec
call
aad
imul
dec
dec
inc
push
je
aam
outsl
sbb
xor
dec
add
add
mov
mov
mov
sbb
out
les
les
jae
jg
sub
sub
cmp
or
mov
loope
cs
cmp
lods
std
cmpsl
movsb
xor
je
dec
test
fsubrl
in
xchg
jae
xor
push
or
data16
inc
cmp
fimull
movsb
fisubrl
cmp
mov
mov
ds
imul
push
or
loope
push
cmp
in
clc
stos
lret
or
and
cmpsb
idivb
mov
lret
cmp
xor
and
push
lock
popf
stc
das
pushf
adc
xor
push
sbb
add
adc
mov
cmp
aaa
xchg
insl
fsts
sahf
mov
test
mov
test
shll
xor
push
and
mov
mov
ret
add
out
in
or
inc
mov
sarb
add
pop
xor
ja
xchg
inc
aas
loop
or
lea
mov
mov
ljmp
dec
in
popa
lcall
scas
notl
or
icebp
mov
mov
mov
push
lret
push
rorl
cmp
mov
mov
fldcw
mov
sub
sub
arpl
xchg
inc
stos
rcrb
je
aaa
dec
sub
inc
xlat
inc
mov
insb
mov
adc
xchg
pop
dec
xor
loop
push
dec
xchg
stos
add
jo
mov
sbb
fisttpll
dec
inc
das
push
xchg
loope
popl
call
rol
shrb
int
mov
mov
xchg
or
or
fsubl
fmuls
sub
mull
mov
add
mov
inc
mov
lcall
arpl
push
ffreep
add
xor
and
sub
shll
sub
test
mov
xor
jl
imulb
repz
jb
rcrb
mov
sub
aas
push
cmpsb
in
or
mov
push
lcall
cs
fchs
clc
sbbl
inc
lds
or
into
cltd
push
icebp
sbb
pop
adc
ljmp
add
sbb
cmpsl
lea
bound
bound
icebp
sbb
adc
sub
or
inc
adc
or
or
cmc
aad
xor
jg
lret
fcmovu
or
pop
jnp
mov
int
cld
jno
dec
jo
cmp
shll
fdivr
adc
sub
stos
jbe
sbb
test
sti
fisubrl
mov
test
sbb
pop
or
push
iret
fmull
js
out
movsl
fstl
sub
pushl
aam
xchg
cmpsl
xchg
sbb
push
mov
fwait
xor
in
sub
fadds
rcl
aad
push
rorl
in
lcall
jo
mov
jl
pop
push
cmpsb
in
jb
sti
add
mov
push
cmpsl
loop
mov
les
xchg
add
fnsave
imul
push
mov
movsb
imul
xchg
loopne
pop
pop
arpl
xor
rcrb
stc
cld
sub
push
push
stos
mov
out
loope
sbb
fs
jb
push
leave
out
aaa
int
ret
push
insl
mov
sub
rcrl
rcl
mov
or
inc
xchg
cltd
cmp
push
loope
jns
andl
push
mov
mov
dec
in
fwait
call
add
xchg
mov
out
inc
movsb
mov
test
fcomi
call
shrl
scas
push
push
int3
rclb
pop
out
mov
pop
bound
stos
mov
mov
inc
cld
jmp
jbe
insl
iret
lcall
push
cmc
rdpmc
lods
sub
pop
cmp
std
mov
dec
fcomps
rdmsr
cli
arpl
cltd
mov
aad
repnz
inc
mov
adcl
push
sbb
xchg
sbb
jecxz
mov
out
cld
fwait
in
cvtps2pi
test
jge
rorl
inc
ficoms
call
lahf
stc
outsl
jge
sbbb
mov
imul
cmp
gs
inc
sub
push
sbb
mov
loop,pn
ss
aam
mov
mov
jnp
sub
sti
mov
scas
out
ds
push
and
stc
inc
jnp
call
mov
mov
jne
popf
std
mov
jns
adc
xchg
roll
push
lds
jg
les
jo
sbb
sub
sbb
pop
push
sbb
mov
lods
fs
adc
add
xchg
aas
addr16
call
xchg
add
mov
add
or
dec
test
pop
loope
dec
mov
xchg
mov
out
push
and
and
inc
push
pusha
or
sbb
sub
or
insl
mov
lods
jp
lcall
inc
jmp
xchg
inc
dec
push
mov
rcll
out
scas
cmpsb
test
cmp
call
leave
cmp
cmp
xchg
fwait
pop
mov
and
xchg
dec
icebp
jmp
and
shl
mov
xchg
cs
cmp
out
je
xchg
shrl
inc
xchg
mov
scas
mov
cmc
push
mov
sti
xor
pop
mov
ja
bound
mov
mov
cmp
cltd
xchg
pop
jg
push
xor
inc
jb
jae
les
fisubl
fwait
pop
pop
mov
mov
jbe
aas
cmp
adc
outsl
mov
in
mov
pusha
addr16
and
ret
test
scas
call
das
adc
pop
xor
clc
add
jmp
out
lea
xor
mov
arpl
fchs
mov
mov
stc
bound
cmpsb
outsl
in
jne
mov
fnsave
clc
ret
mov
fmull
aad
xor
fidivrs
xorl
sub
pop
jbe
mov
adc
fisubrs
jae
mov
ret
insb
pusha
in
bound
mov
addl
fsubs
add
add
sbb
movsb
dec
insb
ljmp
adc
rcrb
enter
testb
out
cs
and
ret
inc
xchg
jl
es
lods
push
loope
fiaddl
sub
and
xor
adc
iret
out
sbb
push
int3
pop
adc
nop
lcall
mov
fwait
sti
sbb
test
mov
mov
sbb
pushl
or
jmp
xchg
jg
pop
push
cltd
testb
and
and
in
lock
cltd
mov
enter
xor
lock
test
sub
dec
pop
push
test
xchg
xchg
ret
outsb
ffree
xchg
in
add
jp
dec
js
adc
in
imul
pusha
sahf
lret
mov
mov
xchg
repnz
cld
out
pop
out
push
test
lret
push
dec
push
icebp
ds
jle
sub
stos
xchg
stc
pop
xchg
mov
push
cmpsl
cmp
je
lret
mov
loopne
leave
push
lahf
popa
cmc
iret
adc
orl
cmpsl
pop
mov
enter
push
add
cld
shll
ret
sbb
clc
lods
lock
shrb
out
repnz
rcrl
cmp
sub
sahf
add
insl
insl
xor
insb
roll
xor
dec
int
test
dec
sbb
sub
pop
dec
cmp
dec
add
inc
test
xor
jb
inc
mov
add
add
dec
xchg
rol
xchg
fsubrp
push
into
inc
dec
mov
aad
aam
mov
aaa
mov
mov
rcrl
push
outsb
inc
xor
popf
out
xlat
push
pop
movsl
insb
add
rorb
lock
iret
js
out
int
negl
int3
mov
gs
or
sub
mov
cmp
jecxz
cmp
lods
ljmp
lea
out
clc
insb
iret
ds
hlt
insl
arpl
in
rclb
andl
test
leave
sbb
adc
pop
push
repz
adc
ret
push
popf
stc
dec
add
les
fldcw
fstpl
push
outsl
push
mov
mov
jo
rorl
sti
andb
dec
repnz
pop
enter
lahf
pop
xor
cmp
jbe
push
fnsave
jno
cwtl
sub
sub
mov
out
loop
jae
mov
push
movsl
xlat
fstps
loop
call
xchg
stos
cmp
push
addr16
ds
xchg
inc
popf
filds
sub
ds
aas
mov
inc
repz
xor
sub
jecxz
dec
std
push
fisubrs
insl
aas
jne
push
sahf
movsb
or
lret
xor
lcall
pushf
adc
bound
or
insb
lcall
adc
in
inc
xor
orb
pop
mov
mov
in
icebp
xchg
outsl
push
inc
sub
or
pop
movsl
shll
cmp
xchg
rcll
mov
sub
arpl
jl
adc
jno
insl
jg
pop
jnp
iret
test
ljmp
outsb
pushf
enter
test
sub
ds
xor
test
push
dec
out
xchg
add
jo
aas
mov
xchg
cmpsb
pop
scas
iret
mov
lret
inc
or
sbb
and
mov
xor
outsb
sbb
inc
pop
jl
aam
js
cmc
sti
fistl
and
sti
pop
mov
pushf
loope
xor
rcrb
dec
dec
lea
movsb
push
xlat
xor
xchg
or
add
mov
cmc
jg
rolb
mov
aaa
jb
lret
xchg
push
add
shrl
add
mov
xor
sbb
ss
pop
cmp
rorl
dec
ss
inc
aas
and
xor
incb
orl
nop
mov
or
test
outsb
fcmovnu
jp
lds
pop
bound
inc
jg
push
xchg
add
push
sahf
xor
orl
sbb
scas
sahf
push
jp
in
jbe
sub
iret
lcall
dec
push
dec
sub
mov
xor
sub
or
cmp
lret
lret
jnp
in
mov
pusha
iret
popf
sub
dec
push
loope
ds
mov
jl
and
leave
add
pop
inc
jmp
jbe
loope
xchg
pop
mov
test
xor
or
sbb
aad
ror
dec
dec
xor
dec
movsl
stos
fisttpll
cmp
in
ja
mov
sti
dec
xor
hlt
repz
adcb
and
mov
imul
mov
int
dec
mov
movsl
mov
push
jne
scas
mov
loopne
icebp
push
fsubrl
in
mov
jmp
xlat
data16
push
std
mov
push
in
sbb
dec
pop
or
bound
mov
stc
sub
mov
ret
cmp
aam
outsl
mov
mov
push
xchg
or
xchg
cwtl
iret
nop
cli
outsl
pop
sub
mov
inc
cmp
popa
mov
mov
cs
repnz
aad
push
mov
and
addr16
add
lock
xor
out
cmp
cmpsb
insl
xchg
jge
lea
lods
push
mov
es
push
std
push
or
cmp
cmpsb
insl
xchg
jge
lea
lods
push
mov
es
push
std
push
or
cmp
cmpsb
insl
xchg
jge
lea
lods
push
mov
es
push
std
push
or
cmp
cmpsb
insl
xchg
jge
lea
int3
pop
push
mov
fsts
jmp
mov
subb
pop
adc
jl
mov
pushf
add
ficoms
push
cld
mov
sub
cmp
dec
lock
insb
rorb
and
mov
inc
lods
push
cld
mov
test
pusha
rolb
jmp
jne
add
aas
cld
rorb
jb
pop
shrb
rcl
cmp
movsb
mov
outsb
inc
cld
insb
xor
push
pop
test
cmp
and
jmp
push
test
popf
lods
popf
int
pop
dec
in
test
and
ss
adc
pop
jp
dec
lret
and
pusha
sbb
out
xor
in
mov
ret
sub
in
addr16
mov
mov
dec
fdivl
xchg
rolb
add
and
push
add
scas
pop
sbb
sarl
mov
shlb
filds
push
imul
xor
scas
add
mov
or
cmp
cmp
sbb
out
jne
popf
movsb
adc
jo
inc
in
push
js
or
in
subb
pop
shlb
pop
add
and
in
push
xchg
aam
hlt
sbb
outsl
ficoms
mov
add
sbb
fdivs
mov
and
decl
pop
hlt
dec
fcomps
test
xchg
outsl
rolb
adc
pop
lret
jne
sub
xchg
pop
sahf
pop
jecxz
mov
mov
insb
sarb
xor
int3
jo
inc
in
push
cld
mov
sub
cmp
dec
lock
shrb
mov
pushf
add
faddl
push
cld
mov
pop
adc
xor
aaa
dec
imul
popa
scas
daa
int3
pop
js
cmp
push
push
mov
loope
sub
inc
int3
in
jmp
jbe
dec
dec
adc
jl
mov
andb
xchg
clc
hlt
fmul
jns
jp
add
jmp
inc
xor
dec
xchg
add
in
jecxz
outsl
popf
xchg
and
inc
pop
inc
push
sub
pop
hlt
bound
cmp
clc
mov
fstl
and
out
andb
and
jae
push
sbbb
ror
mov
pushf
mov
stos
push
mov
aad
or
dec
xor
or
or
cmp
jmp
inc
mov
fldenv
mov
mulps
push
cmp
inc
jae
inc
mov
or
out
mov
movsl
push
in
cmp
mov
js
int3
xchg
sub
outsl
pop
hlt
aaa
sub
xor
call
xchg
sub
fwait
cs
mov
inc
cli
cltd
inc
fisubrs
adc
sbb
xor
mov
mov
xchg
sti
and
add
xchg
cwtl
inc
add
in
outsl
dec
dec
hlt
dec
popf
mov
mov
mov
sub
push
clc
sbb
sbb
stc
adc
enter
sub
jbe
test
loopne
ret
xor
cmc
jmp
pop
mov
jns
stc
jo
pushf
hlt
aad
dec
sti
ret
fmuls
jo,pn
pushf
pop
aas
jg
mov
imul
dec
mov
jmp
xchg
xor
inc
cmp
aas
js
sub
push
insb
sti
popf
cltd
aaa
std
adc
inc
mov
out
jnp
cmova
jnp
sub
popf
cmp
pop
lea
stos
fucom
sbb
addl
int3
mov
iret
adc
push
rclb
fbld
stos
loopne
cmp
loope
jge
insb
enter
scas
mov
mov
gs
pop
xchg
mov
jg
test
fcomp
pusha
mov
xchg
push
cmpsb
pop
add
pusha
outsb
mov
jmp
js
cltd
xchg
cs
mov
mov
pop
or
mov
cltd
fbstp
test
imul
mov
outsb
mov
rorl
add
popf
xchg
pop
sub
and
sbb
push
iret
xchg
pop
test
dec
mov
and
shlb
rorb
ds
cmp
xchg
mov
lods
dec
fxch
pop
lret
test
aaa
or
dec
retw
ljmp
fcoms
cmp
fsubs
aas
sub
pushf
adc
cltd
fisttpl
xchg
adc
mov
js
mov
and
push
call
xchg
out
sub
lcall
sbb
pop
shrl
jo
cmp
icebp
push
adc
in
cmc
and
jp
mov
adc
adc
push
ret
and
es
sti
aaa
inc
lret
pop
lds
push
inc
test
mov
sbb
cmpsb
xor
iret
mov
push
mov
leave
push
mov
push
push
push
xchg
lret
sti
xchg
mov
mov
gs
mov
dec
add
les
sahf
pop
pusha
add
lock
test
int3
ss
ljmp
add
xor
or
les
insb
sahf
push
jno
dec
lods
outsl
sub
xchg
xchg
stos
stc
push
out
and
pop
add
cmpsl
cmc
lods
js
outsl
sub
cmp
mov
imull
mov
add
or
pop
xchg
aad
fs
or
xor
inc
inc
loope
cmc
push
cmp
repz
aam
insb
clflush
xlat
xor
push
in
out
push
sahf
pop
xchg
and
icebp
adc
lea
cld
push
adcl
mov
sbb
mov
cmpsb
notb
mov
or
shr
sbb
insl
and
dec
sbb
pop
jmp
mov
andl
jbe
fisttps
hlt
and
arpl
popf
inc
jl
jno
repnz
xor
xor
movb
lea
push
xor
sbb
popf
xchg
push
call
and
xchg
cwtl
cmp
mov
arpl
in
mov
jb
add
repnz
leave
in
xlat
pop
push
xchg
and
fs
ret
add
int
lret
adc
mov
sub
jl
dec
mov
loope
into
push
adc
xchg
push
je
lret
adc
cli
pop
adc
repz
mov
pop
mov
cmp
scas
cmpsb
xlat
push
imul
outsl
xor
lock
mov
adcl
fisubs
jmp
xor
imul
lcall
adcb
push
leave
ret
stos
lcall
clc
mov
xchg
outsb
imul
ss
pop
cmp
hlt
mov
dec
add
jecxz
enter
loope
push
adcb
add
or
mov
je
mov
push
add
lea
cs
arpl
clc
hlt
mov
xor
adc
cmp
enter
inc
cmp
mov
xchg
std
jecxz
push
fmul
call
sbb
xor
adcb
std
das
sub
ljmp
popf
test
xchg
stos
ror
and
xor
xlat
fidivrl
cmpb
cltd
mov
in
das
push
fdivl
fcmovu
xlat
jle
leave
lret
fnstsw
sahf
lahf
mov
jecxz
xlat
lcall
push
stos
push
negb
dec
stc
arpl
insb
and
ret
mov
mov
jnp
ftst
xor
inc
mov
xchg
mov
jne
lahf
test
ljmp
ss
and
inc
xor
dec
xchg
sub
adc
cmp
lcall
aad
andl
lods
adcl
aaa
pop
adc
cs
mov
push
cwtl
cli
sub
lret
mov
insl
dec
adc
lods
pusha
lcall
adc
fwait
outsl
mov
adc
mov
or
fs
movsb
pusha
mov
hlt
inc
add
pop
lock
inc
lret
mov
sub
push
mov
pop
testl
inc
ds
sbb
movl
mov
mov
lcall
xorl
cmp
add
fs
addr16
shlb
stos
fadds
fistl
sbb
repz
subb
popa
in
mov
roll
shl
xor
jg
or
jge
test
andb
nop
jo
lods
jno
sub
lcall
adc
outsl
in
pop
sti
test
xor
jmp
fcoml
mov
pop
adc
insl
sbb
sub
push
cmp
in
bnd
mov
push
adc
pop
or
int3
and
adc
sub
jno
or
adc
xchg
jo
pop
lods
cmpb
mov
nop
pop
jne
cmpsl
xor
add
or
addl
mov
adc
stc
int3
pop
jns
mov
jae
push
add
cmp
xor
add
pop
mov
jmp
mov
fsubs
mov
sbb
xchg
add
ss
pop
inc
lahf
push
jmp
push
fcompl
sahf
orl
into
jecxz
or
hlt
and
cmc
imul
and
sbb
cmp
xchg
cmpsb
jecxz
and
and
or
in
imul
add
jns
push
and
into
sub
mov
adc
xchg
jae
adc
xchg
or
call
xchg
cmp
mov
cmpsb
mov
mov
adc
pop
inc
cmpsl
xchg
arpl
pop
les
testb
bound
mov
jns
pushf
mov
mov
and
jae
inc
jg
call
jo
gs
ret
dec
sub
push
int
fstp
movsl
addr16
xor
mov
iret
sub
aaa
pop
test
pop
idivb
mov
and
mov
xchg
add
or
lods
adc
sbb
xchg
mov
fidivrs
jecxz
fadds
xchg
insb
and
or
sub
push
inc
gs
jb
loope
leave
xchg
shll
mov
add
sub
sbb
pop
push
pop
cltd
rcrl
or
xor
mov
ret
xchg
out
cmp
out
cmp
lods
jmp
or
mov
push
inc
cld
adc
push
jne
xor
dec
mov
imul
ret
in
lea
or
mov
cmpsl
push
sahf
notb
lods
int3
outsb
les
jb
ds
std
repz
sahf
push
cmp
sbb
cltd
enter
out
div
fisubrl
subl
push
pop
push
lds
ret
xchg
mov
in
mov
call
push
or
aam
cmp
and
mov
pop
int3
xor
rep
outsb
je
mov
lds
sub
jecxz
stos
xchg
sub
sbb
jecxz
and
adc
pop
mov
incl
sub
cmpsb
pop
fimuls
dec
pop
test
cs
sbb
popw
nop
fwait
pop
fdivrs
adc
push
mov
cmpsl
and
out
lret
cmpsb
push
xor
xchg
test
mov
pop
cmp
jl
rorl
pop
lret
icebp
mov
jmp
sub
or
in
xchg
inc
mov
xchg
leave
cmp
movsl
lret
pop
inc
lret
loopne
sub
mov
inc
xor
mov
sub
sub
dec
icebp
inc
sub
push
xor
sub
shlb
fadd
cmpsb
sbb
cwtl
lods
dec
xchg
lcall
and
mov
xchg
dec
pop
imul
loope
in
push
mov
dec
loope
idivb
leave
into
leave
repz
leave
repz
inc
je
mov
fmull
ret
cmpsl
add
mov
out
xor
sub
inc
cmc
and
addr16
lcall
std
decl
rclb
mov
scas
push
ret
adcl
jl
insb
leave
cs
inc
sbb
push
mov
fwait
repz
imul
xchg
pusha
jnp
test
imul
mov
dec
mov
rcl
mov
inc
pop
mov
stc
icebp
stos
pop
rcll
dec
int3
in
and
xor
xchg
mov
mov
in
lea
jge
and
lds
pop
xchg
pop
stc
ret
leave
add
ds
into
pop
mov
mull
in
push
aam
jmp
aaa
addl
es
adc
aas
jle
lahf
push
xor
subb
mov
add
xlat
jns
cwtl
test
loop
cmp
inc
aas
xor
es
sub
cld
push
sbb
dec
clc
flds
jbe
movsl
xchg
out
loopne
mov
xor
lods
gs
mov
sub
jmp
add
popa
adc
data16
add
cmp
decb
cli
fmuls
inc
lahf
mov
xchg
mov
jg
mov
ret
jge
push
mov
jb
pop
scas
ljmp
ja
enter
sbb
mov
push
into
mov
cmp
xor
pop
add
loop
jl
xchg
int3
push
cmp
imul
and
adc
adc
add
popa
lahf
jl
pop
and
mov
setle
mov
sub
mov
and
mov
push
xor
sbb
inc
xorl
cmpsl
popa
es
aad
pop
fldl
dec
dec
test
into
xchg
mov
gs
push
jmp
insl
mov
icebp
add
inc
cmp
adc
cmp
mov
and
mov
or
mov
popa
adc
cmp
dec
std
push
dec
sbb
sub
adc
enter
stos
int3
ds
jnp
outsb
sbb
es
adc
mov
lods
mov
lock
or
sub
fucomi
push
popf
in
and
xor
xor
add
test
or
loop
and
arpl
inc
sub
in
into
push
loopne
pushf
inc
stos
adc
testl
out
xor
iret
push
in
pop
add
or
dec
mov
pop
adc
jl
or
data16
cwtl
and
push
in
and
repnz
cmp
lds
jmp
xor
ljmp
fs
mov
xchg
test
arpl
pop
pop
xchg
mov
movsb
into
jo
popf
sbb
int3
mov
mov
mov
push
add
jae
pop
lret
xchg
cmpsb
mov
scas
fsts
push
xor
imul
xchg
pop
jo
fdivrl
add
xchg
push
int
cmc
pop
cwtl
icebp
idiv
out
cwtl
push
xchg
scas
enter
jecxz
xlat
fcmovu
inc
adc
loope
ds
out
in
lret
ret
cwtl
fidivrs
mul
mov
icebp
mov
jmp
les
jp
lcall
das
leave
sub
inc
sub
aaa
inc
call
cmovae
push
push
inc
adc
fidivs
roll
pusha
mov
ja
push
lahf
icebp
imul
push
jmp
sbb
or
outsb
cmp
inc
push
shrl
jae
pop
pop
fdivrl
adc
call
mov
mov
mov
ss
outsb
nop
mov
ret
fistpll
repz
pop
fldl
scas
sbb
ja
jne
shlb
repz
and
jbe
js
cmp
ret
mov
add
fcoms
leave
jg
in
push
jg
xchg
mov
jge
mov
std
insb
lea
addr16
sub
sbb
das
or
xchg
loope
xlat
ret
jnp
jbe
pop
jle
mov
jecxz
jp
dec
roll
mov
mov
in
aaa
mov
xchg
inc
mov
les
iret
les
sub
hlt
iret
and
mov
inc
sub
sub
push
sbb
dec
fwait
push
mov
xchg
movsb
mov
or
mov
mov
mov
push
pop
push
adc
dec
movq
test
pop
add
sahf
jnp
pusha
arpl
and
pop
lods
das
rcrb
test
lods
popa
push
sbbb
fistl
sti
movsl
add
dec
loopne
jl
sub
push
sbb
stc
loopne
mov
lretw
stos
adc
jo
pusha
mov
ss
push
mov
test
jmp
adc
xchg
repnz
std
scas
inc
lret
mov
enter
mov
in
js
movsl
out
jbe
lcall
adc
loopne
andb
vfnmsub213ss
or
test
loopne
inc
push
lods
jne
inc
and
cwtl
aam
push
cmp
add
sbb
mov
fnsave
push
inc
pop
xor
add
fdivl
std
xchg
cmpsl
lock
xchg
sbb
orl
ljmp
clc
clc
pop
pop
mov
pop
clc
mov
xchg
add
adc
scas
repnz
out
icebp
xchg
ficomps
fs
jp
fcmove
cmpsb
std
pushf
mov
sbbb
dec
dec
jo
sub
pop
add
lods
es
push
mov
addr16
dec
std
fsubrs
in
pop
pop
cmc
mov
aas
push
pop
sub
adc
add
mov
scas
mov
div
sbb
int
cltd
outsl
jae
dec
imul
rcrb
xor
xorb
lcall
dec
loop
lods
out
std
leave
cmp
arpl
enter
call
mov
jmp
repnz
outsb
mov
test
lea
inc
push
jl
jbe
sbb
cwtl
xchg
aaa
lock
fstps
fnsave
daa
lret
add
jge
sbb
jbe,pn
inc
out
mov
cmp
add
mov
rolb
ret
aas
add
sub
mov
adcl
mov
inc
dec
mov
sbb
iretw
jmp
and
dec
fnstenv
sub
or
call
test
and
mov
sbb
outsb
pop
pusha
xchg
cld
cmc
cmc
sub
add
jp
pop
cmc
jl
sub
fadds
divl
xor
in
push
in
das
sbb
xor
lahf
int
xor
push
xor
ret
movsb
mov
divb
dec
xor
jns
fucomi
mov
inc
cmp
push
adc
aaa
ret
xor
hlt
mov
xor
mov
and
pop
dec
cmp
hlt
pop
fimuls
jp
push
pusha
int3
cwtl
adc
cwtl
into
ss
xchg
xor
incb
add
sbb
xor
push
repz
push
mov
sbb
cmc
imul
or
test
and
inc
mov
adc
xor
lea
cwtl
inc
scas
cmp
fstps
test
lods
or
loop
int
xor
cltd
mov
jo
jp
std
jb
stc
rcl
sbb
stos
inc
lock
ficoms
mov
jg
xor
out
fldt
sbb
xor
mov
insl
pushf
in
lret
dec
push
paddusw
sahf
cmpsb
popa
inc
push
jo
add
mov
dec
cld
outsb
sub
inc
sti
cmp
loop
outsb
lahf
popf
inc
mov
sbb
or
adc
into
loop
inc
vmovdqa
sbb
mov
push
and
in
imul
pop
mov
pusha
fwait
jns
in
dec
jmp
loopne
push
inc
xchg
sub
push
test
popa
popl
xchg
rcrb
in
sahf
icebp
cmp
gs
popa
outsb
jo
pop
xor
movsl
mov
call
sbb
mov
dec
mov
loope
lret
mov
push
dec
mov
push
cmpl
xor
push
sbb
jns
lea
sbb
and
pop
jp
hlt
mov
in
add
pop
inc
inc
mov
loop
mov
sbb
lret
mov
ss
jno
aas
arpl
inc
dec
ds
and
sub
cmpl
fisubl
sar
jge
or
lods
cmp
fsubs
jmp
fisubs
lahf
push
jp
cmp
popa
add
mov
mov
aas
je
shll
mov
or
and
jge
outsl
lret
adc
pop
ret
incl
ficompl
push
mov
nop
popf
cmp
jp
or
scas
ds
sbb
mov
and
xor
jne
in
sub
push
ficoms
fadds
xor
adc
pop
adc
shrl
daa
and
adc
pop
repz
push
out
or
imul
lahf
imul
mov
daa
jnp
repz
push
fldenv
mov
inc
rclb
push
in
mov
enter
pop
fwait
cli
inc
repz
mov
xlat
stos
pop
pop
loop
inc
jecxz
popa
pop
and
test
testb
xchg
adc
cmp
inc
addr16
cltd
or
mov
mov
cmp
xchg
cmp
leave
sahf
push
les
dec
scas
or
and
mov
mov
push
arpl
repz
mov
or
lods
mov
popa
insl
jnp
clc
stos
inc
imul
mov
imul
sub
out
aam
mov
notb
and
cmp
stos
sarb
xchg
adc
loope
test
cmp
xor
scas
rcrb
dec
in
clc
imul
das
fdivr
adcl
push
in
mov
push
adc
sub
fstpl
lret
test
repnz
flds
arpl
imul
mov
xchg
or
sbb
xchg
jmp
sbb
inc
cmp
fmuls
les
inc
aad
inc
dec
je
cmp
mov
or
push
sbb
pop
xchg
mov
mov
dec
imull
or
inc
or
lds
or
add
enter
jp
xchg
xchg
mov
addl
stc
in
movsl
ret
and
jg
std
hlt
or
in
pop
loope
xchg
lcall
mov
pop
imul
xchg
sub
cmpsl
sahf
push
lds
stc
rep
sbb
out
aam
push
pop
in
xor
movsl
xchg
sub
test
push
call
daa
arpl
pop
pop
lahf
arpl
test
pusha
jae
ss
inc
insb
jmp
pop
pop
mov
rolb
mov
filds
xchg
pop
pop
add
xchg
add
sub
xor
outsl
jg
push
sub
jmp
xor
lea
jne
sub
fwait
in
dec
dec
adc
movsl
adc
mov
popa
out
push
mov
sti
add
push
cmpsl
shlb
jbe
movsl
xchg
mov
mov
jae
and
xchg
and
inc
adc
nop
scas
stc
inc
cmpl
icebp
std
mov
dec
mov
xlat
jecxz
popa
mov
data16
push
je
jge
cmp
imul
push
cmpsb
jge
fdivrl
iret
in
mov
and
jp
push
or
jp
sarb
out
mov
dec
lock
shrb
mov
pushf
add
faddl
push
cld
mov
sub
cmp
dec
lock
shrb
mov
pushf
add
faddl
push
cld
mov
push
nop
cmp
dec
lock
shrb
push
xor
int3
jo
inc
int3
push
cld
mov
sub
cmp
shr
jl
jae
ss
lods
adc
pop
inc
clc
and
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
jbe
loopne
cld
cmp
shll
pop
add
add
or
add
out
add
mov
push
add
cmp
leave
add
jne
faddl
out
add
add
add
add
add
incl
push
add
add
push
add
faddl
mov
pop
add
add
sub
movsb
add
add
add
pop
add
and
pop
add
pop
add
add
add
pop
add
pop
add
add
add
aas
add
add
add
lldt
add
add
add
add
aam
ret
add
add
add
imul
add
add
mov
xor
add
add
add
add
add
add
add
dec
add
add
add
add
push
add
outsb
add
add
add
add
add
cmp
aam
mov
add
out
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
out
add
add
add
add
roll
sbb
xor
sub
xchg
add
add
add
add
add
iret
add
add
add
faddl
inc
add
out
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
jle
or
add
add
push
add
add
add
add
add
cmp
jecxz
mov
xchg
add
add
add
dec
add
add
add
out
add
mov
jns
inc
add
push
add
add
add
add
add
add
add
test
mov
test
add
roll
add
add
xchg
add
iret
add
add
add
outsb
add
mov
push
add
add
lds
je
mov
test
push
push
add
add
add
mov
jne
fiaddl
dec
add
xor
dec
add
add
popa
add
iret
add
add
add
add
enter
fs
add
add
mov
leave
add
add
add
add
loope
mov
xchg
add
add
ret
add
xchg
add
add
add
add
aad
inc
add
add
add
adc
aas
add
add
add
add
out
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
movsb
add
add
add
or
iret
add
add
add
add
xchg
mov
add
add
and
push
add
add
add
add
fwait
add
add
add
add
add
add
movsl
add
add
xchg
add
jno
js
mov
lds
xor
dec
add
add
add
add
or
add
add
es
add
add
push
movsl
add
add
add
add
add
xchg
add
jno
rolb
stos
add
add
add
add
add
add
dec
mov
sti
push
in
mov
sub
jmp
push
imul
xor
loope
out
call
fs
sarb
in
cli
xchg
inc
sbb
mov
mov
xor
cmc
mov
aam
sub
adc
ss
jle
xchg
mov
sbbl
push
lahf
aad
and
ds
xchg
push
xchg
inc
pushf
movsl
and
mov
xor
jns
mov
lods
push
shlb
jns
jb
add
pop
enter
mulb
aad
inc
mov
sbb
or
dec
mov
mov
fdivrl
adc
inc
add
xchg
push
sti
mov
clc
pop
sbb
push
loop
sub
mov
push
jge
inc
movl
jno
imul
xor
imul
adc
mov
les
pop
lahf
rcrl
sbb
pop
arpl
dec
or
out
cli
cli
mov
out
mov
clc
jo
mov
cmc
sti
movsl
std
sub
cmp
adc
dec
clc
jb
rcr
pop
shlb
xchg
fisttpl
daa
sbb
das
scas
cltd
test
or
mov
orl
xchg
sbb
imul
popa
addl
aaa
fistps
mov
stos
scas
ljmp
inc
addr16
xchg
adc
sbb
ret
pop
les
test
or
push
punpcklbw
push
dec
jl
adc
gs
fimull
loopne
js
cltd
divb
inc
enter
pop
add
dec
sbb
negl
mov
push
ret
pusha
fsubs
dec
xorl
dec
adc
mov
int3
jp
xchg
out
jle
xchg
shlb
dec
xchg
jecxz
test
push
inc
lds
mov
addr16
inc
lahf
mov
or
sbb
mov
out
pop
stos
shll
lock
int3
cmp
cld
shll
negb
sbb
push
fcompl
cmpb
cmpsb
adc
enter
adc
cld
jnp
mov
push
ja
out
pop
dec
xchg
mov
jo
push
jne
dec
fdivr
fmul
std
jmp
es
pop
stc
cld
cwtl
mov
adc
cld
fdivs
mov
push
cmp
addr16
lret
mov
call
and
imul
inc
idivb
xchg
xchg
mov
in
dec
cli
xor
add
fnstenv
and
dec
dec
jns
dec
xor
neg
cltd
scas
pop
adc
inc
sbb
int3
dec
add
sbb
cmpsb
cmp
dec
cmpb
xor
pop
fs
mov
inc
clc
mov
lods
lahf
dec
sub
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
