call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
imul
jle
outsb
lret
mov
inc
mov
pop
out
dec
fwait
cmp
or
dec
ljmp
push
stos
ds
rcrb
dec
sahf
pop
ljmp
cli
into
ljmp
inc
stos
adc
mov
and
jl
jbe
jg
jge
mov
lcall
dec
inc
cmp
int
icebp
add
inc
mov
pop
sti
in
into
push
cli
sbb
inc
mov
inc
dec
stos
icebp
daa
adc
push
xchg
add
pop
jno
mov
pop
sub
out
or
dec
inc
push
dec
sahf
jp
imul
adc
dec
xchg
icebp
sbb
incl
iret
cmp
xchg
sub
lret
xchg
iret
adc
mov
stos
outsl
push
or
cmp
loope
lea
lret
data16
test
dec
insl
imul
cld
andl
mov
jp
outsb
ljmp
out
mov
sub
cmc
insl
cli
dec
ljmp
dec
stos
ds
es
lock
cmp
dec
sub
cmp
jo
jnp
sub
or
cmp
dec
loopne
lret
outsl
pop
xchg
movb
stc
outsl
out
push
int
movsb
out
sbb
pop
jmp
lret
jg
pop
sub
jge
push
mov
push
stos
ds
pop
out
dec
sahf
cmp
or
dec
ljmp
push
stos
ds
pop
out
dec
sahf
cmp
or
mov
mov
or
pop
int
outsb
popf
push
je
sub
popf
or
inc
shll
in
xor
ss
stos
adc
jmp
inc
fldenv
jg
jge
ljmp
adc
sti
jns
xor
mov
stc
sarl
cmp
push
movl
fistl
jge
xlat
adc
mov
aad
popa
aam
pushw
pusha
movsl
adc
shll
jo
inc
sti
dec
pop
or
in
sbb
test
cmpb
adc
popf
dec
test
test
fmuls
sbb
pop
cmp
inc
in
xchg
jl
lock
in
xor
inc
fstpl
test
push
pop
jl
mov
jae
imul
sahf
xchg
test
loopne
testb
mov
jmp
rclb
addr16
insl
movsl
push
fadd
inc
in
gs
add
popf
lea
and
mov
mov
and
dec
mov
dec
jbe
mov
dec
cld
mov
jae
mov
in
add
out
aam
jne
push
pushf
cmpsb
or
sbb
pop
pop
sub
ret
scas
int3
mov
xchg
push
sbb
sub
push
les
adc
jl
xchg
or
pop
add
pop
scas
sbb
jl
push
jns
imul
gs
xor
push
dec
cmp
jbe
jae
cmp
ficoml
lea
subl
clc
jmp
and
shlb
shld
jno
dec
xchg
into
xchg
sub
add
cmp
sub
and
xor
cmp
mov
pop
xchg
stos
xchg
cmpsl
std
mov
scas
in
loop
andb
xchg
rorb
pop
orb
add
aam
pop
cmp
dec
lret
out
aas
mov
lret
xchg
mov
mov
dec
clc
nop
int3
ret
sbb
in
xchg
iret
sbbb
sbbb
out
xchg
fdivrs
lcall
pop
mov
inc
roll
push
pop
jmp
jl
subb
push
pop
and
mov
and
sti
loope
inc
insb
jbe
aam
dec
sbb
mov
das
push
lods
inc
mov
jae
inc
scas
jmp
inc
dec
mov
mov
pushf
xchg
cmp
xor
add
cmp
mov
adc
dec
outsb
scas
jnp
jecxz
adc
dec
popa
in
ss
mov
mov
into
daa
repnz
inc
cli
inc
and
xchg
outsb
mov
sub
xor
xchg
or
mov
mov
jp
std
shll
fildl
mov
mov
cld
and
push
leave
shlb
pop
sbb
mov
xor
popl
out
push
and
dec
xor
punpckhwd
pop
and
mov
js
push
mov
data16
fisubl
in
imul
in
in
scas
js
add
sbb
dec
add
pop
cmpsl
jl
jmp
out
add
std
insb
fists
cmc
cmpsl
in
or
in
outsl
pop
mov
jl
lods
out
sbb
daa
adc
clc
sub
push
dec
inc
and
xchg
test
mov
xchg
inc
jle
cmp
xchg
fmul
xchg
imul
cmp
fstpl
stos
enter
add
mov
mov
add
sub
pop
cmp
push
cmp
xchg
xlat
aaa
mov
aad
subl
daa
in
and
or
and
repz
push
int
ljmp
decl
pushf
imul
xchg
push
aas
lods
pop
and
je
stc
xchg
mov
dec
adc
cmpsl
fcomp
fidivl
shlb
push
mov
xchg
xor
dec
lock
push
aad
lcall
les
aaa
xchg
pop
xchg
pop
repz
mov
or
stos
or
outsl
lods
ret
notl
xor
inc
pushf
lds
pop
dec
dec
mov
or
je
inc
mov
mov
mov
mov
mov
sub
sti
sub
xchg
out
jno
aam
fnstenv
mov
dec
popa
and
stos
push
mov
jns
mov
movsb
sbb
pop
push
or
add
aad
fbstp
pop
or
insb
into
sub
cmp
scas
and
rorl
xchg
mov
cmpsl
pusha
repz
inc
and
sbb
sbb
mov
push
shl
jmp
inc
cltd
mov
push
nop
push
push
pop
jecxz
pop
mov
mov
sbb
and
fwait
call
repz
jno
push
es
mov
test
lea
or
mov
mov
dec
mov
scas
dec
push
add
xor
pop
adc
aas
mov
cwtl
pop
call
pop
or
fs
add
test
sbb
push
lds
or
mov
insl
das
inc
daa
or
lods
fbld
or
pop
jnp
into
cmp
sub
jmp
std
sub
mov
arpl
push
xchg
cltd
xchg
test
leave
inc
xlat
push
jnp
push
sub
xor
iret
fiaddl
xorb
cmp
xchg
pop
push
aad
cltd
mov
mov
mov
mov
push
inc
push
push
jmp
loop
iret
stc
sub
test
loop
lock
mov
cli
jl
rolb
xor
xchg
aaa
popa
inc
movsb
cld
mov
pop
das
arpl
daa
sbb
movntq
mov
outsb
and
lds
push
js
pextrw
sub
push
jl
mov
pop
out
or
push
dec
rol
imull
xchg
lods
xchg
adc
mov
mov
jne
mov
insb
pop
idiv
fisubrs
call
push
cmp
adc
repnz
fidivrs
in
push
test
popa
and
sub
push
or
fs
add
xorl
adc
dec
aam
loop
pop
dec
adc
mov
sub
push
push
pop
inc
aad
push
test
mov
mov
xor
mov
sbb
in
mov
fwait
or
shr
aad
loop
xchg
jmp
stos
in
inc
test
or
in
dec
or
outsb
xchg
ss
cli
mulb
in
mov
sbb
mov
mov
insl
xchg
cs
movsl
cmp
jb
or
shll
ret
fsubr
dec
adc
je
aad
or
push
dec
xchg
jl
dec
loope
mov
jo
jecxz
jns
pop
push
mov
fcmovnbe
sti
int3
xchg
daa
mov
fwait
loopne
push
cmpsb
loopne
xchg
rcrl
push
inc
cmp
fs
mov
add
pop
pop
adc
rcrb
cli
inc
mov
testl
sub
inc
push
mov
pop
movsl
push
adc
mov
mov
sub
pusha
inc
stos
xor
sbb
aas
dec
or
pop
xor
push
test
xor
xor
es
mov
dec
adc
out
decl
sbb
and
push
adcl
xor
fildll
data16
sbb
sbb
sub
pop
divl
stos
lret
dec
mov
jp
mov
push
adc
push
loop
adc
scas
add
in
dec
mov
js
dec
roll
aad
xor
icebp
push
outsb
jecxz
push
and
lds
cmp
inc
lock
mov
cwtl
push
cmp
clc
xor
or
dec
add
shl
notl
rol
inc
or
lret
ret
xor
pop
hlt
push
pop
push
or
movsb
pushf
fisubrs
idivb
adc
test
mov
mov
sub
push
vpunpckldq
or
ret
loop
sti
fisubrs
roll
lock
pop
push
lods
mov
jo
movsl
and
push
and
mov
jnp
pop
sbb
pop
pop
cli
cmp
dec
xor
shl
out
or
add
fbld
adc
loop
pop
xchg
movsb
fiaddl
xchg
scas
adc
loop
push
mov
mov
and
or
aaa
fdivr
ficoms
dec
mov
leave
repnz
shll
xor
mov
je
xchg
rolb
popa
les
sub
add
sub
jbe
mov
xlat
mov
les
sub
out
mov
inc
jno
and
pushfw
cmp
jecxz
xlat
stos
lods
imul
mov
cmp
out
arpl
mov
xorb
mov
jbe
inc
push
daa
cmp
shlb
lock
jb
sbb
enter
rol
in
and
aam
mov
fisubs
data16
cli
ljmp
xor
cmp
xchg
jg
aam
jb
push
imul
dec
xchg
je
daa
call
mov
sti
lods
inc
test
fisubs
xchg
scas
sub
aas
pop
sti
fimuls
divl
jb
or
in
xchg
cltd
lods
mov
movsl
sub
jl
movsb
mov
stos
cwtl
pushf
mov
fdivrp
xchg
ret
cmp
sbb
dec
jns
movsl
clc
and
imul
xchg
mov
pop
cwtl
and
mov
pop
dec
jnp
and
cli
pop
and
lcall
mov
movhps
xchg
and
rcrb
xchg
jb
popa
iret
mov
pop
lret
jnp
sahf
mov
cwtl
stc
lods
bnd
cmp
pop
fadds
shlb
outsl
push
pop
in
out
je
ret
adc
add
bound
in
dec
xlat
xor
pop
jno
dec
and
in
mov
mov
push
push
add
xor
in
and
xor
cmpsl
xchg
sub
jbe
cwtl
outsl
mov
cmc
jae
stc
sti
test
popa
and
add
shlb
fwait
in
dec
movsl
shll
jbe
adc
cmp
enter
imul
dec
cmp
xor
int3
outsb
sbb
mov
mov
addr16
cltd
js
and
cmp
jnp
pop
jg
lret
fs
int
lcall
loop
sub
movsb
daa
jb
mov
lods
adc
shrb
fisttps
xchg
aam
cld
nop
or
cmp
mov
je
mov
add
in
push
ja
lea
add
sub
mov
add
xlat
mov
dec
dec
pop
mov
dec
ret
pushf
cmpsb
cwtl
mov
movsl
jo
andb
mov
imul
stos
add
fildll
lret
or
scas
pop
repnz
add
loop
test
fs
out
jg
mov
mov
cmp
pop
mov
xchg
push
xchg
rcll
or
lock
addl
fxch
dec
sub
in
cmc
or
dec
arpl
mov
inc
and
adc
mov
or
adc
in
addr16
aas
mov
mov
jmp
add
in
sub
mov
lret
gs
dec
lret
inc
adc
dec
adc
insb
gs
shl
test
sub
cmp
stos
xchg
push
cmc
push
subb
mov
movsb
insl
cmp
es
mov
inc
stos
dec
aad
pop
bound
jge
insl
dec
xchg
stos
and
inc
xchg
jp
xchg
push
pop
inc
or
lret
mov
inc
mov
dec
xor
ljmp
daa
out
mov
inc
jne
and
call
inc
adcl
aaa
xor
lcall
notb
pop
jb
xor
jp
mov
cmp
sbb
leave
jo
dec
jmp
mov
arpl
add
mov
fnsave
subl
clc
sbb
and
dec
hlt
push
xor
xor
insb
stos
sbb
mov
push
shrl
fisubs
inc
pop
das
frstor
mov
out
or
imul
inc
pusha
xchg
repnz
loopne
push
pop
out
hlt
adc
in
jle
jmp
sbb
iret
popf
lret
lcall
lea
shll
call
leave
movsb
enter
sti
xor
push
pop
xlat
add
sbb
inc
and
adc
push
inc
js
out
xor
xor
cmpsl
sbb
rorl
loope
fadd
repnz
jle
pop
mov
and
and
shlb
mov
add
flds
mov
in
inc
adc
pop
leave
pop
push
fiadds
shl
ss
sub
ja
push
xor
inc
pusha
sbb
and
mov
cwtl
xor
paddq
cltd
pop
add
push
mov
cmpsl
jecxz
enter
lds
sbb
fbstp
and
addr16
sbb
xchg
jno
incb
mov
xchg
mov
ret
add
mov
push
pop
mov
sub
pop
and
shll
aas
sti
inc
xchg
xor
jae
mov
les
fsubs
jmp
arpl
inc
jp,pn
xor
lock
mov
dec
push
push
jge
add
sti
dec
inc
jns
mov
lcall
sub
ja
push
xchg
add
loop
out
call
jne
mov
mov
inc
pop
dec
dec
and
push
sub
push
push
sbbb
test
mov
pop
sub
fld
mov
sbb
inc
fimuls
dec
add
iret
add
and
call
inc
mov
loop
mov
vmwrite
mov
cmc
cmp
shl
dec
fidivl
int
packsswb
mov
jg
mov
jbe
cmpb
push
sbb
adc
push
test
lods
jb
jns
cmp
cwtl
ret
shlb
push
inc
cwtl
dec
into
xchg
arpl
cs
mov
jmp
add
mov
movswl
push
insl
in
sub
lds
sti
divb
cmp
mov
lds
jns
loopne
test
rcrb
shlb
jns
xchg
fstps
mov
loopne
push
call
mov
aaa
addl
jnp
and
pop
inc
addb
insb
pinsrw
dec
mov
adc
pusha
loop
pop
sub
inc
cwtl
jmp
and
xor
adc
xlat
pop
int3
push
push
and
int
fsubrl
ljmp
cltd
repnz
dec
addr16
sbb
decl
aam
jo
pop
hlt
cmpsl
cmc
fidivrs
fs
mov
icebp
loopne
and
pop
fdivl
loop
js
pop
insl
loop
ss
pop
int
stos
and
dec
ret
mov
mov
cltd
movsb
stos
pop
xchg
mov
or
lea
cmp
dec
in
lea
in
ret
add
add
xchg
es
xchg
aam
mov
xchg
bound
out
jo
or
lds
int
testl
fstp
fldlg2
popa
mov
xchg
and
stos
jb
shll
and
jb
jl
jmp
lock
adc
icebp
push
fiaddl
in
dec
dec
sub
arpl
insb
push
dec
insb
push
loopne
fsubs
out
mov
imul
xlat
mov
mov
xor
lret
rcrl
sbb
cmpsl
arpl
fsubrs
scas
loope
test
rcrb
adc
add
add
imul
adc
dec
dec
cmp
pop
pop
popa
sbb
add
adc
inc
inc
inc
inc
push
out
test
data16
push
pop
push
cmpsl
jbe
les
or
dec
cmp
ja
or
mov
mov
leave
js
stos
lea
add
mov
iret
pop
dec
les
xor
cli
out
adc
mov
popf
movsb
je
jg
or
ljmpw
sbb
mov
cmp
adc
fwait
repz
and
and
filds
imul
jbe
add
bound
mov
aam
mov
ret
lods
orl
add
pop
sub
adc
les
repz
mov
xchg
push
dec
add
mov
icebp
imul
push
imul
dec
jl
pop
mov
sub
jb
mov
dec
push
clc
xchg
gs
incl
popa
outsb
es
into
xchg
ficomps
mov
mov
adc
rcll
aas
int
aam
fidivs
pop
push
call
pop
push
mov
cmpsl
test
daa
xor
adc
scas
pushf
mov
fnsave
xchg
cld
in
push
shll
push
je
add
test
and
js
and
adc
xchg
rol
inc
rorl
leave
idivl
or
xor
cmpsl
pop
xchg
outsb
fisubrl
sbb
mov
testl
jno
mov
test
test
dec
mov
insb
jg
pop
mov
jns
sub
cmp
gs
fwait
into
stc
push
aas
mov
shll
sbbl
js
mov
jne
fists
mov
xchg
cld
loopne
loop
cld
lret
repz
inc
shll
je
roll
and
repz
mov
mov
popf
xchg
mov
dec
mov
fcoms
xor
aad
and
aam
aas
fildl
mul
xor
ljmp
out
shll
pushl
xchg
lods
mov
insb
dec
inc
pop
icebp
jno
inc
test
jo
push
mov
pushf
lods
negl
jmp
jle
sub
inc
stos
out
xorb
fidivrl
inc
pop
cltd
es
push
in
cmc
cmp
das
cmp
sbb
xchg
and
inc
jo
dec
mov
inc
shlb
inc
xor
data16
mov
jbe
xlat
jle
jle
mov
and
cmp
sbb
xchg
xchg
mov
or
mov
pop
jne
hlt
call
inc
and
mov
cmpsb
xlat
out
into
xor
inc
sbb
jecxz
jmp
push
aad
in
mov
cwtl
dec
add
or
xchg
pop
shl
fs
or
stos
xchg
ret
jo
idivb
dec
test
fdivrl
fdiv
add
xor
jg
gs
or
fs
add
push
mov
cs
mov
dec
lret
inc
push
dec
out
lahf
frstor
xor
popa
inc
xor
inc
pusha
test
aas
or
push
nop
jae
sub
gs
scas
stos
push
out
xchg
out
jne
pop
jp
std
xchg
xchg
mov
add
pop
inc
outsb
sub
or
int
outsb
jbe
xor
and
mov
ja
add
sbb
xchg
sbb
shll
stos
sub
sub
repz
jnp
mov
movl
pop
jecxz
out
in
sub
jmp
rep
and
push
sbb
negl
pop
ljmp
loop
xor
aaa
shll
sub
js
jae,pt
subl
out
dec
adc
and
movsl
push
and
mov
scas
lret
fimuls
xchg
lcall
ljmp
fcompl
outsl
mov
xchg
xchg
mov
test
faddp
arpl
out
incl
daa
fisubrs
pop
push
and
enter
mov
aad
push
jne
pop
jecxz
dec
out
sbb
ss
mov
xlat
dec
out
aam
test
je
mov
mov
gs
arpl
mov
dec
push
adc
pop
int3
or
loope
lcall
mov
push
inc
aad
push
dec
mov
adc
jns
out
xor
mov
xor
sub
sbb
popl
leave
aad
loopne
sarb
adc
pop
cmp
movsl
xor
cltd
add
dec
mov
pusha
sub
adc
data16
dec
inc
jae
pop
sbb
int3
jg
loope
jp
das
sbb
loop
fnstsw
sub
outsw
dec
adc
mov
add
dec
dec
mov
lods
movsb
iret
push
dec
mov
mov
add
addr16
add
mov
repnz
js
and
es
push
in
mov
inc
xchg
fsts
xchg
dec
jmp
je
dec
dec
jno
xor
sub
adc
imulb
pop
jne
scas
popf
jb
cmp
or
xor
int3
sbb
cmp
jg
inc
mov
loop
repz
idivl
push
stos
or
inc
hlt
cmp
mov
jl
movsl
pop
fcmove
fcmovb
push
xchg
je
daa
ljmp
xlat
cmp
xlat
roll
ret
lcall
mov
jbe
cmpsl
cld
add
mov
add
pushf
lea
fcom
into
lods
dec
das
imul
xchg
and
xor
inc
es
int
mov
cmp
stc
mov
add
cmp
and
fidivl
push
mov
cs
jp
push
pop
out
dec
sahf
cmp
or
dec
ljmp
push
stos
ds
pop
out
dec
sahf
cmp
or
dec
ljmp
or
fidivrl
push
pop
ljmp
sbb
ljmp
push
stos
ds
push
pop
out
cmp
inc
in
cmc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
rcr
xor
add
adc
or
push
push
mov
jb
add
adc
and
and
cmpsb
and
xor
arpl
push
inc
mov
jb
inc
adcb
and
xor
jp
and
jo
sub
pushf
jp
imul
mov
notb
xchg
imul
sahf
pop
loop
fwait
cwtl
xchg
xchg
add
xchg
lds
adc
es
mov
jle
jb
mov
lods
call
aas
mov
and
int
cmp
xchg
mov
pop
in
dec
xor
cmpl
adc
push
repz
xor
add
and
xchg
mov
sbb
dec
out
mov
adc
dec
xor
ret
repz
sbb
bound
shll
inc
mov
jle
ret
ds
sub
shl
add
jge
jnp
pop
jns
fidivs
push
cmpsl
jmp
xchg
and
ret
cltd
and
data16
jae
pop
adc
test
inc
mov
sbb
adc
xor
xchg
add
sbb
inc
lret
pop
pop
cld
jo
jl
dec
ret
push
mov
nop
jae
push
jmp
testl
fiaddl
shlb
or
jnp
jge
dec
scas
jae
scas
bound
rorw
xchg
jae
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
mov
and
add
jp
int3
call
mov
add
pop
lahf
lahf
cltd
neg
sti
out
xchg
lods
lea
cmpsb
cmp
aad
pop
gs
mov
xchg
pop
and
mov
dec
push
add
mov
pop
shl
push
je
or
xor
lahf
jb
mov
repnz
mov
mov
add
loopne
mov
mov
jnp
push
outsl
les
jno,pt
add
fimuls
sbb
nop
xchg
int
cmp
mov
mov
inc
std
jns
pop
jg
mov
and
push
scas
xchg
arpl
je
cmp
add
sub
cmp
je
add
jmp
mov
push
stc
dec
inc
push
and
outsb
lods
add
inc
cltd
nop
cmp
mov
cli
push
xor
dec
sti
cmp
cmc
xor
push
pop
push
sbb
mov
add
out
sub
pop
mov
pushf
dec
mov
mov
pop
dec
sahf
adc
and
mov
mov
outsb
call
dec
xor
das
adc
mov
sbb
dec
cmp
ljmp
or
ret
orl
stc
mov
icebp
pusha
sbb
cltd
dec
fisttps
in
push
pusha
dec
gs
push
cmp
and
or
into
push
add
out
in
mov
pusha
inc
mov
sbb
imull
cmpsb
push
mov
sbb
push
push
ret
vmovd
mov
or
xchg
push
mov
sbb
cmc
pop
popl
push
cwtl
push
pop
pop
nop
mov
outsl
sub
insl
out
cld
dec
ret
cmp
lahf
add
mov
add
call
in
mov
andb
jp
dec
lcall
les
out
pop
push
mov
sbb
add
repnz
dec
xor
insb
xor
push
push
or
xor
addr16
xchg
aam
inc
mov
movsl
xor
jnp
aam
sbb
scas
push
jge
fcmovnu
adc
popf
mov
push
addr16
pusha
ret
mov
ljmp
pop
std
cmp
lret
jae
in
scas
jg
mov
enter
and
mov
inc
lock
jne
fistpl
push
pop
or
cmp
pop
ss
and
xor
in
sub
mov
sti
shll
mov
inc
mov
mov
cwtl
scas
jmp
cmpsb
xchg
outsl
repnz
sub
xor
stos
nop
xchg
mov
dec
or
mov
cmp
mov
pop
xchg
stc
shrl
adcb
pushf
sti
int
lret
and
ja
cmpsb
xchg
cmp
mov
adc
imul
test
xor
push
arpl
mov
jnp
fwait
in
xchg
setnp
jo
outsb
pushf
xor
xor
sti
scas
faddl
dec
ror
fwait
in
ja
inc
inc
ljmp
lret
in
int
lods
or
and
adc
xor
xor
pop
call
inc
push
call
sahf
jmp
mov
paddsb
cmp
sbb
mov
and
pop
pusha
inc
jmp
mov
data16
dec
scas
lahf
xchg
pop
mov
in
mov
pop
in
push
mov
dec
sbb
adc
inc
and
rcrb
shlb
les
cs
xchg
cmp
loop
inc
cld
cwtl
pop
enter
cmpb
xchg
popf
push
iret
jge
push
and
sub
sbb
ss
loopne
popa
and
mov
cmp
jb
add
into
cld
jge
int3
lret
add
sbb
and
add
pop
data16
pop
jbe
adc
cmp
sbb
xchg
or
xchg
shlb
inc
add
bound
adc
add
cmpb
mov
inc
insl
pop
sub
mov
xchg
mov
xchg
and
and
xchg
sub
cmc
mov
jno
cli
lahf
popa
test
push
int
notb
jo
ror
int3
sti
rorl
push
lret
in
inc
neg
push
js
push
int
rcrl
data16
pop
js
dec
fcoms
shr
mov
into
jae
or
jle
add
out
push
fisubrs
arpl
cmp
mov
sbb
adc
jmp
xchg
ss
out
inc
or
jecxz
int3
pop
jg
icebp
and
fldt
jmp
jno
xchg
notl
incl
lcall
fs
and
int
cmp
lahf
push
in
imul
push
inc
rol
push
xor
sub
xchg
push
stos
mov
inc
loopne
repz
xchg
xchg
repnz
rcrl
mov
in
int
dec
cli
repz
jecxz
push
scas
pop
and
fsubrs
cli
addl
jae
aas
jb
pusha
pop
insb
mov
lock
sub
cli
jge
ja
lods
pop
test
sbb
ds
int
jbe
das
sub
iret
mov
sub
sarl
sbb
dec
addr16
stos
mov
lock
insl
jb
sahf
dec
mov
jb
dec
lret
into
mov
notb
push
cmp
mov
mov
sub
pop
adcb
push
aaa
in
inc
mov
leave
fidivrs
sbb
stos
and
mov
cwtl
mov
pop
push
enter
jge
pushf
xor
xor
dec
mov
into
in
sub
xchg
jp
inc
cmp
mov
add
repnz
divb
sbb
jle
cli
fisubrs
jb
dec
fdiv
data16
popf
sub
mov
aas
in
jg
and
fisubl
dec
pop
js
outsb
jo
cs
adc
mov
sarl
imul
push
repz
sti
add
fldt
sti
dec
aam
mov
test
add
movsl
ljmp
pop
out
mov
fdivp
pop
jo
xor
mov
dec
lcall
xor
sub
xor
cli
mov
cld
dec
sub
fdivs
lods
imul
jl
hlt
and
mov
jg
stc
cmp
and
mov
push
out
xchg
add
bswap
or
out
fs
cmpl
mov
xchg
dec
inc
cmp
cli
inc
popl
shrb
xorb
inc
mov
js
sbb
ja
cmpb
into
cwtl
push
fldenv
fisubrs
xchg
push
or
rcrl
mov
add
movsl
popf
sub
cmc
dec
dec
dec
hlt
cwtl
mov
imul
subl
dec
pop
xchg
loop
fmulp
es
mov
insb
adc
in
push
roll
push
sub
cmp
flds
dec
sbb
stc
mov
aas
out
pushf
jle
and
std
outsb
iret
sti
lret
popf
push
cli
gs
adc
xchg
fidivrs
sahf
cmp
sahf
ss
or
ds
leave
cld
add
stos
jbe
or
pop
dec
je
jnp
adc
fwait
in
cld
mov
adc
push
jbe,pt
das
mov
mov
test
sarb
inc
scas
mov
mov
mov
scas
pop
lret
mov
jno
imul
inc
shlb
jecxz
in
dec
es
xchg
sub
ja
out
and
ja
lods
lret
cltd
push
pop
dec
imul
cmpsb
or
leave
scas
dec
mov
xchg
into
ret
scas
pop
insb
mov
push
or
outsl
cmp
add
test
scas
cmp
mov
ret
lret
pop
repz
push
pop
pusha
adcb
mov
push
mov
sub
jno
add
dec
xchg
add
movsb
dec
lock
fstpl
push
scas
jbe
mov
outsl
mov
in
popf
pusha
movsb
adc
add
xchg
lret
repnz
mov
test
push
cmp
mov
jo
add
mov
dec
testl
xchg
dec
push
dec
and
dec
or
dec
jb
adcl
inc
push
push
xlat
rcrl
sub
xor
xor
mov
jae
xchg
bound
jns
out
or
dec
shll
lea
es
data16
xchg
xorl
nop
fisubrs
pop
mov
icebp
pop
inc
mov
clc
and
shrb
das
xor
lcall
jb
mov
and
divl
jno
mov
cwtl
add
fcomp
pop
jb
aad
icebp
arpl
in
imul
cld
inc
leave
dec
bound
mov
cld
aad
push
xchg
mov
clc
flds
inc
or
fidivrs
xor
fists
cltd
pop
aad
jge
mov
mov
jmp
daa
lahf
mov
push
mov
stc
xchg
hlt
pop
cs
lods
fs
dec
inc
sub
into
xchg
xlat
hlt
inc
xchg
lock
test
outsl
mov
test
fwait
jmp
pop
or
fsub
cld
loopne
jae
mov
mov
push
in
outsb
test
scas
and
ret
dec
mov
ja
ret
xor
mov
into
mov
loope
bound
lahf
ja
pop
insb
cmpsl
pop
xchg
xchg
pop
sbbb
cmpsl
inc
adc
push
push
inc
inc
lock
push
inc
cmpsb
insl
dec
fldt
cld
lcall
hlt
fmulp
pusha
push
cmp
lcall
xchg
xor
aam
pop
jnp
sbb
sbb
jo
int
sbb
pop
cmc
vucomisd
les
rep
mov
cli
pop
fisttpll
aad
fbstp
xchg
inc
shrl
sub
cvttps2pi
pop
movsl
movsl
ja
xor
push
movsl
pop
xchg
xchg
sub
lods
pop
pop
in
mov
icebp
movsl
mov
in
jo
inc
std
popa
xor
mov
mov
fucom
ror
int3
cli
out
sbb
or
cwtl
mov
inc
and
mov
cmp
aad
adc
data16
out
xorl
popa
push
lods
lods
shll
pop
sbb
add
sub
out
dec
pop
push
fbstp
aad
mov
inc
fs
pop
popf
fadds
inc
cmpl
mov
scas
and
incl
sbb
push
incb
xor
ret
pop
lods
mov
cmp
cmpsb
cmp
stos
mov
jne
mov
shl
test
iret
fsubs
lea
ss
inc
enter
sti
sub
lods
pop
mov
mov
lods
sub
pop
jmp
xor
or
jge
rcll
add
lock
fsub
lock
fwait
jae
dec
cmp
pop
test
iret
push
jo
imul
dec
test
inc
lds
xor
rcll
in
jb
int3
or
loope
mov
lret
imul
popf
dec
inc
mov
inc
sbb
sub
inc
out
cltd
mov
cmp
xchg
xlat
push
push
divb
push
ja
testb
loope
pop
imul
sub
lcall
inc
cmp
mov
jl
out
aas
cmpsb
and
pop
xor
pop
into
adc
push
inc
push
lock
cmp
mov
pusha
orl
je
and
xor
add
dec
mov
stos
pop
cmpsl
mov
ret
inc
push
rcll
xor
out
in
inc
mov
iret
adc
and
pop
adc
shll
nop
rcrl
insl
shrb
mov
scas
push
xchg
xchg
cmpsb
mov
bound
dec
sbb
out
or
sbb
lret
enter
xor
jbe
push
dec
pop
mov
pop
add
xor
jge
inc
xchg
jmp
jp
in
mov
std
xor
xor
jne
insl
fisttps
cltd
stos
xor
jne
adc
xlat
sub
in
movl
jne
adc
xchg
stc
push
cs
push
daa
push
cmp
add
and
sub
movsb
add
sbb
mov
fwait
add
jp
daa
cs
cmpb
xor
addr16
mov
mov
inc
out
cmp
xor
aas
shrl
or
push
mov
inc
adc
xchg
mov
mov
jle
ja
sub
icebp
mov
into
fs
xchg
stos
or
sbb
jecxz
inc
mov
dec
sub
int
in
push
enter
pop
in
stc
addr16
mov
jb
out
arpl
add
dec
into
xor
pop
adc
fwait
or
mov
mov
enter
fidivrl
jl
pop
mov
sub
xchg
loopne
lods
lds
aad
test
imulb
pushf
pop
bound
inc
xchg
daa
mov
cltd
xchg
sbb
adc
fistpll
jbe
aaa
adc
int
jb
addr16
stos
mov
icebp
mov
pusha
ss
sbb
lods
jae
addl
and
add
mov
jecxz
dec
in
insb
sbb
adc
fwait
sbb
mov
leave
nop
jo
mov
shlb
lea
mov
je
loope
rclb
out
adc
js
lds
enter
xabort
xchg
test
daa
lods
arpl
mov
or
cwtl
inc
movsb
cmp
inc
es
mov
sbb
lods
loop
in
pop
xchg
lret
mov
pop
rclb
out
sub
jge
in
gs
inc
call
lods
rol
lds
pop
and
lods
cs
fwait
jecxz
leavew
and
dec
push
inc
mov
nop
mov
lahf
mov
dec
outsb
rorb
leave
fistpl
add
xchg
scas
test
or
add
outsl
mov
xlat
xor
repz
jae
and
aaa
shrl
xchg
pop
fwait
js
cmp
mov
jp
xor
jg
xchg
xor
out
sbb
insb
lcall
mov
ficomps
clc
push
cmpsb
cli
cmp
leave
mov
inc
push
iret
sub
push
std
jb
loop
fldt
pop
jb
mov
push
out
mov
sub
jmp
scas
ja
inc
pusha
stc
mov
in
dec
jl
out
and
jns
push
inc
mov
adc
mov
imul
push
sarb
cld
add
jb
in
mov
ljmp
pop
mov
inc
mov
aam
jnp
cltd
jl
movl
and
cmpsb
or
xchg
outsb
popl
loop
push
shrl
sub
std
mov
aaa
or
mov
movsb
int3
scas
hlt
jle
dec
mov
mov
xor
test
roll
lcall
push
xor
inc
insl
rclb
je
in
ret
mov
sbb
and
cmp
push
into
jl
lret
pop
call
lods
sub
pop
ret
adc
rcll
in
xchg
xchg
inc
add
lea
xchg
jno
mov
fs
into
mov
push
jns
mov
fnstenv
pop
add
xchg
push
xchg
sbb
jle
js
loope
push
jge
and
add
int3
fimull
mov
mov
mov
adc
adc
sbb
add
es
adc
mov
ljmp
cmp
dec
rorb
leave
dec
sub
mov
mov
test
out
jnp
lods
mov
test
jmp
dec
cli
xchg
push
push
cmp
nop
je
ss
ss
orb
es
les
cmp
test
and
jg
jne
pop
pop
jno
out
add
movsl
or
add
inc
leave
and
loopne
or
jbe
pop
add
mov
jmp
or
xor
int3
stos
ja
test
cmp
jbe
sar
fimull
sub
jae
popa
ficoms
pop
push
add
insb
add
js
cmp
inc
jae
mov
push
test
pop
js
movl
and
cmp
pushf
cmc
lods
pop
cmpsb
jne
sbb
jne
aaa
xchg
pop
int3
cwtl
mov
mov
jae
dec
addl
cmpsb
mov
lods
icebp
test
imul
fstpt
cmp
sub
out
lods
adc
dec
shlb
sbb
jo
pop
cmpsb
cmp
daa
xor
movsb
stc
cmp
scas
mov
adc
movsl
repz
int
test
cwtl
inc
js
xchg
in
pop
adcl
arpl
cmp
inc
hlt
xor
jge
cmp
stos
leave
or
movsb
adc
cmp
mov
cmp
cmc
or
jg
jnp,pt
sbb
enter
adcl
std
test
pop
jmp
or
xor
mov
in
mov
stos
mov
push
xchg
test
cmp
add
iret
add
mov
enter
stos
mov
test
and
adc
outsb
inc
fs
xchg
and
lahf
jae
jno
rcl
cld
jbe
sbb
outsl
lds
call
inc
fisubrs
test
test
fsubrs
dec
or
sbb
scas
mov
sbb
leave
dec
cmp
lea
call
or
das
mov
pop
lds
and
mov
mov
inc
insw
mov
mov
out
or
inc
sbb
popf
push
mov
repz
and
mov
mov
cld
loopne
mov
mov
or
sti
lahf
push
xchg
mov
jb
lret
pop
ja
ror
mov
xchg
repnz
sbb
dec
test
jae
repz
sub
sbb
sti
stos
dec
pop
dec
mov
ret
cmpsl
push
mov
sbb
pop
adc
cmpb
and
into
adc
mov
mov
outsb
mov
stc
mov
dec
ds
sti
dec
dec
shlb
loopne
in
imul
or
jge
mov
cmc
push
pop
ljmp
bound
adc
adcl
adc
dec
sbb
lcall
cmpsl
sbb
js
sbb
mov
xchg
movsb
xor
sbb
jnp
fcoms
jo
xchg
popf
fcoml
into
je
sub
sti
push
xor
mov
shlb
xor
dec
push
flds
pop
adc
lods
out
mov
and
repnz
rclb
and
cwtl
mov
mov
gs
mov
fidivrl
mov
fs
inc
mov
xorb
dec
das
mov
js
mov
std
sbb
jne
insl
sbb
push
leave
push
ret
and
mov
fdivs
lods
cmpsl
jg
dec
and
rol
sbb
cmpb
subl
xor
dec
cmp
sbb
jl
cmpsl
adc
pop
jne
mov
adc
pop
call
gs
sbb
ficomps
in
popf
test
pop
mov
jae
pop
testl
and
rcrl
lret
out
mov
nop
jecxz
push
shlb
insb
mov
push
and
push
popa
jmp
cwtl
inc
imul
fucomip
adc
shl
pop
lock
lock
call
cmp
inc
pop
pop
sbb
push
je
adc
mov
cmp
into
clc
mov
sub
arpl
and
jge
pop
insl
sbb
push
xchg
mov
aas
into
aas
fisubl
outsb
out
cmp
sub
jp
inc
mov
mov
packssdw
push
jo
into
into
cld
xor
clc
pop
retw
ljmp
lock
push
mov
push
dec
jl
mov
les
dec
pop
lret
xchg
mov
and
pop
repz
jmp
inc
dec
sub
mov
add
cltd
pop
mov
jns
out
rorl
cmpsl
orl
shll
mov
pop
adc
loopne
xchg
shlb
sub
inc
test
push
sub
inc
or
fcoml
mov
or
adc
fwait
xor
mov
stos
jbe
mov
xchg
xor
idivb
add
insl
loop
lds
xor
mov
in
sbb
lds
push
cmpsb
gs
jg
push
push
mov
outsb
sbb
je
clc
popa
pop
int3
test
dec
push
fs
into
sub
or
xor
sbb
cmpsl
fdivs
sahf
stos
scas
xor
ds
divl
in
sahf
cmpsl
push
push
jecxz
sub
iret
ss
adc
push
gs
subb
or
xor
mov
je
push
lock
push
lock
inc
and
dec
out
rcrl
les
movsb
pop
mov
jae
cmpsb
mov
loopne
or
ljmp
imul
add
je
fstps
pop
shrb
outsb
jl
pop
int3
xchg
test
push
add
stc
add
imul
loope
push
sbb
push
adc
inc
pop
xor
je
ljmp
ret
test
loopne
adc
sub
add
cld
xor
addb
cmp
adc
shll
in
repnz
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
arpl
push
inc
mov
jb
add
add
and
fcmovbe
and
adc
inc
xor
mov
jb
jne
lcall
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
lret
fcomp
call
xor
mov
imul
xchg
cmp
cmp
enter
jmp
mov
iret
dec
inc
pop
pop
or
jnp
jns
sbb
sub
cmp
rcr
ret
clc
jecxz
xchg
cwtl
subl
pop
js
adc
outsl
or
push
mov
mov
pop
push
dec
mov
pop
push
outsl
sub
repz
popf
lret
push
push
popf
loop
stos
mov
xchg
push
cmp
cmp
test
imul
and
rol
push
fnstenv
mov
adc
dec
dec
or
add
mov
setne
and
adc
test
mov
pop
stos
sahf
movsl
imul
sub
adc
pusha
dec
nop
out
test
mov
movsb
cmp
jo
lods
js
mov
bound
jge
push
stos
jle
mov
mov
sbb
and
sti
sub
cmp
call
mov
mov
push
adc
add
xor
cmp
mov
lret
mov
cli
out
fstp
and
pop
pop
outsl
sbb
jl
push
sbb
dec
push
xchg
mov
mov
in
mov
aad
ffreep
mov
aas
xor
jns
jnp
sbb
daa
dec
mov
fdivrs
test
mov
pop
push
or
sbb
sub
cmp
lret
fcomp
call
mov
mov
push
or
sbb
sub
cmp
lret
gs
stos
stc
sti
add
movsb
pop
rolb
cmpsl
jmp
and
fdivs
pushfw
push
cmpl
aam
pop
sub
popf
mov
or
xchg
dec
ja
add
clc
lcall
scas
xchg
jmp
sti
pop
andl
xchg
incb
xor
push
fbld
int
stc
inc
inc
fidivrs
sarb
inc
and
scas
nop
mov
jo
inc
mov
xor
movsl
and
jnp
test
or
push
ljmp
std
cmc
jne
jmp
lods
add
int
clc
cmp
fmull
sbb
xor
mov
test
lds
xor
mov
loopne
mov
roll
adcl
pop
pop
inc
scas
mov
mov
or
enter
mov
mov
leave
adc
inc
cmp
add
aaa
mov
push
xchg
mov
mov
movsb
mov
insl
shl
inc
adc
lcall
das
xchg
pop
dec
rcl
xor
mov
lods
add
idivl
leave
out
push
pop
mov
mov
repz
sbb
mov
shlb
inc
popa
mov
or
movsb
dec
cld
fisubs
call
mov
push
cmpsl
xchg
xchg
hlt
cwtl
pop
ds
iret
fnstcw
xor
lods
into
adc
pop
xor
fadd
je
in
add
ficoml
xchg
iret
xchg
mov
jo
addl
movsb
sahf
andl
ret
out
push
fisubs
test
jp
push
loopne
dec
inc
mov
inc
test
sbb
sbb
adc
add
lret
sbb
push
xlat
out
mov
inc
dec
notl
sti
inc
aam
push
push
scas
icebp
xchg
and
mov
fstpt
add
mov
frstor
pusha
rcll
push
jae
push
pop
loopne
pop
and
push
or
cmc
lahf
pop
push
adc
in
cmpl
xchg
into
xor
xchg
pop
jnp
cmpsb
clc
pushf
mov
scas
sub
ss
rcll
mov
in
addr16
cmc
outsl
mov
cmp
adc
jnp
push
or
test
addl
cmpsb
pop
rcrb
fs
adc
or
aam
fmul
paddsw
rorl
or
mov
popa
mov
movsb
adc
gs
cmpsb
mov
xor
jp
dec
enter
jns
imul
jns
or
dec
lods
rcrb
xor
xchg
xchg
ret
push
dec
add
test
push
jae
and
push
xor
daa
jo
bound
mov
fs
jae
mov
xor
or
cwtl
xor
lret
sub
and
jno
dec
filds
test
in
sbb
cltd
jmp
pop
fcomp
pop
sbb
mov
push
daa
mov
movl
mov
clc
or
inc
adcl
adcb
loopnew
rcll
mov
sub
sbb
movsl
lret
xchg
cmp
inc
or
movsl
adc
lea
sub
cld
lret
rcrl
pop
xchg
jg
mov
jmp
in
aaa
jecxz
in
popf
leave
pop
ret
cmc
mov
jp
and
lahf
push
cmp
shlb
mov
and
pop
dec
jmp
int
fistl
and
addb
mov
stc
cmp
std
stos
xor
xor
decl
popa
repz
add
mov
mov
cmp
xchg
sub
xchg
sub
pop
outsl
xor
ret
pop
pop
mov
into
sub
push
sub
das
cmpsl
ss
adc
aad
sahf
lret
cmp
add
cld
inc
push
push
mov
mov
aaa
pop
dec
out
fcompl
fists
cli
shlb
dec
xchg
pop
nop
data16
fsubrl
mov
push
rcl
icebp
out
mov
mov
sbb
mov
inc
pop
ds
cmp
mov
cmp
orl
sbb
movsb
test
sbb
sbb
or
add
cmpsl
cmpsl
shrb
or
out
dec
gs
je
adc
cmp
xor
jl
je
je
lock
add
icebp
sahf
shll
test
mov
cmp
cmp
jnp
adc
mov
sarb
sbb
inc
scas
std
test
cmp
arpl
scas
ret
or
lods
movsb
mov
jge
mov
or
lahf
cmc
pop
pop
mov
xor
or
sbb
xchg
loopne
jae
iret
dec
add
cmp
int
xlat
out
and
push
fisubs
push
pop
outsl
out
or
mov
sahf
or
add
arpl
mov
xchg
rcrl
gs
nop
push
roll
jbe
popf
sahf
sbb
fimuls
jo
jge
sahf
aas
cld
cli
bound
push
arpl
push
xor
sbb
jne
xor
or
pop
cmp
mov
mov
fstl
movsb
jbe
push
icebp
stos
stos
imul
cmp
aaa
js
push
lods
mov
pop
icebp
ja
or
inc
or
sbb
movsb
hlt
push
dec
std
adc
in
into
sub
movsl
fwait
mov
sub
stos
int
pop
es
push
or
cmp
push
push
pop
sbb
mov
xor
int3
shll
lret
test
aas
dec
jno
push
mov
fcompl
fidivrs
jl
imul
mov
pop
push
mov
mov
jno
scas
scas
or
rcrb
das
mov
mov
mov
in
sbb
jmp
scas
xchg
pop
fucomi
push
add
popa
xor
test
jne
xchg
rcl
test
das
call
out
nop
xor
mov
push
adc
mov
roll
stos
into
inc
mov
es
fisttpll
test
test
cmc
mulb
orps
pop
xchg
in
insb
add
mov
sbb
and
dec
bound
pop
test
cmpsl
or
mov
sbb
imul
hlt
outsb
push
cmp
ds
jp
mov
adc
je
mov
dec
out
bound
cmp
aad
inc
mov
dec
pop
jne
adc
aaa
cltd
stos
adc
out
pop
mov
cmpsl
sbb
rorl
test
gs
lret
int3
in
cmp
lret
inc
inc
push
outsl
inc
loop
out
shll
mov
test
mov
and
movsb
jecxz
pushl
mov
out
mov
sbb
gs
mov
cmp
mov
dec
in
scas
xchg
cld
xchg
test
adc
aas
lods
dec
add
xor
out
les
cmp
shll
jp
jmp
sub
mov
arpl
xchg
pop
and
stos
inc
adc
nopl
adc
adc
cmc
inc
in
mov
cmpsl
mov
mov
mov
adc
jnp
ds
shll
pop
jae
jo
cmpsl
notl
mov
orb
jne
mov
jb
sub
adc
sbbb
xor
push
fwait
lods
xchg
call
cmpsb
mov
pop
adc
jmp
sti
arpl
iret
add
jo
arpl
repnz
lcall
dec
out
jae
and
mov
cmp
cltd
movsb
pop
fcmovnbe
daa
and
lahf
mov
insb
inc
fwait
adc
dec
pushf
mov
out
xor
out
cltd
je
shlb
mov
cld
into
jnp
nop
jmp
sbb
jno
mov
or
fisubrs
arpl
pop
mov
out
and
in
sub
cmpsl
dec
dec
mov
jnp
sbb
adcl
faddp
xchg
popf
rcrb
pop
jbe
adc
cltd
sbb
js
loopne
adc
cmpsl
into
ret
inc
or
mov
in
dec
mov
int3
nop
shlb
stc
and
cmpsb
sbbl
cmp
xor
sbb
out
das
enter
jge
cmp
ss
dec
sub
cmp
lret
rcrl
testb
ds
push
sbb
pop
scas
jp
movsl
inc
xchg
repnz
addr16
lock
sbb
sbb
or
ljmp
fwait
jg
mov
jae
xchg
xlat
add
xchg
xor
lods
pop
dec
fsubrl
sbb
addr16
sub
stos
and
jns
pop
bt
xor
sbb
cmp
std
mov
cld
push
das
sub
mov
les
mov
inc
cmp
int
mov
add
jp
xchg
les
pop
and
or
divl
test
jb
or
mov
push
cli
imul
sbb
bound
cmp
repz
xorb
test
sub
xor
dec
pushl
stc
mov
dec
pand
adc
jae
lahf
in
icebp
jno
fbld
lods
dec
popl
mov
into
les
mov
xchg
popf
inc
cwtl
subl
imul
adc
adc
mov
ds
xchg
mov
jbe
push
mov
insb
adc
loope
jno
jp
fistpl
mov
adc
jbe
push
cmp
jecxz
out
fisubl
mov
pop
fwait
add
add
in
pop
jno
gs
xchg
mov
insl
stos
int3
js
push
rorl
or
ljmp
sub
inc
addr16
mov
and
push
push
sub
adc
imul
shlb
popa
cmp
cld
flds
mov
lret
sbb
dec
lahf
mov
sbb
popa
fninit
aaa
jo
mov
dec
sbb
lds
adc
sbb
popa
rcll
push
aas
addl
movsl
addl
pop
cmpsl
inc
mov
dec
cs
jge
mov
jp
lahf
or
test
mov
pop
lret
daa
cmp
in
inc
adc
out
pop
lds
mov
lods
cmc
repnz
mov
enter
dec
pop
je
subl
push
scas
loope
cltd
cmp
sbb
lea
stos
and
into
imul
pushf
rep
fsts
mov
stos
jge
outsl
in
sti
cmp
ljmp
push
mov
stos
stos
lds
jg
and
push
jecxz
mov
push
movsl
mov
jge
repnz
test
xchg
pop
dec
cltd
xor
xchg
fs
imul
mov
sbb
arpl
cmc
mov
jne,pn
loop
repz
xchg
sar
jmp
inc
mov
xor
js
mov
shl
mov
mov
adc
push
fwait
int3
ss
xor
push
ss
imul
adc
sahf
or
and
mov
jns
xchg
sbb
push
push
dec
lock
subl
mov
dec
adc
sbb
arpl
rolb
lret
fldcw
mov
push
mov
mov
xor
mov
test
cs
push
cli
test
lcall
int
inc
fildl
cmpb
insb
int3
xchg
jmp
lcall
hlt
sbb
jne
icebp
sub
shll
rcll
es
pop
and
shlb
or
inc
or
pop
outsl
outsb
sbb
cmp
data16
pop
push
dec
mov
jmp
inc
jge
or
jge
or
pop
aam
stos
pop
ja
cltd
xchg
or
in
pushf
dec
ja
dec
mov
inc
movsb
std
fstp
lock
add
pop
cmpsb
sub
repz
and
push
mov
scas
inc
mov
dec
adc
push
jne
cwtl
gs
lods
dec
mov
test
xor
in
push
mov
sti
jl
sub
pop
test
cmpb
lds
adc
xor
mov
insl
xchg
cmpsb
clc
popf
adc
pandn
aam
shll
sub
push
xor
test
insl
jl
or
xor
push
ds
stos
xchg
jl
jae
repnz
sub
inc
dec
add
jbe
orb
add
sbb
push
xchg
cmpsb
fld
jae
popa
incb
adc
clc
stos
inc
xchg
decb
sarb
mov
push
dec
pop
shr
xor
test
fisubs
je
push
aam
imul
mov
scas
cmc
vpmullw
jbe
aam
bnd
mov
mov
cltd
dec
aad
fldcw
mov
shrl
xchg
sub
test
mov
movsb
mov
fsubrl
test
jecxz
stos
aaa
inc
lcall
inc
or
jno
shlb
repz
or
jl
test
dec
imul
cmpsb
xchg
sar
sbb
out
movsl
push
jmp
scas
fstl
push
sbb
or
mov
xchg
sbb
icebp
rcrl
mov
nop
mov
imul
lock
mov
dec
je
loopne
pop
mov
packsswb
xor
jmp
rorb
add
pop
push
push
loope
and
dec
out
outsl
cli
inc
pop
ret
mov
pop
inc
hlt
rol
fucomip
add
lods
hlt
leave
sbb
pusha
adc
icebp
or
insb
sbb
jae
ret
push
push
fninit
in
psubb
lcall
cmp
inc
dec
sahf
les
sub
dec
mov
and
jp
andb
aam
ja
inc
pushf
test
orb
cld
inc
out
fisubrl
into
icebp
and
test
gs
cli
mov
in
cmp
leave
mov
ljmp
sub
je
daa
jg
lods
movsl
divb
sbb
mov
fcmovnb
cmp
mov
mov
adc
shrb
mov
cmp
outsb
jo
cwtl
cmp
cld
adc
daa
pop
stos
pop
bnd
xchg
nop
scas
rolb
int3
outsb
jle
pusha
mov
mov
add
xchg
adc
push
mov
push
cmpsl
fwait
cld
dec
mov
mov
sbb
sub
sbb
add
cmpsb
roll
push
mov
jle,pt
sbb
lea
xchg
jno
fsubr
add
dec
dec
lea
xchg
and
jo
pop
cmp
xchg
cli
xchg
cli
cmp
js
push
outsl
pop
xor
pop
movsb
insb
cmp
and
mov
sbb
leave
inc
cmp
cld
aaa
pop
pop
dec
mov
or
xor
xchg
cmp
addr16
mov
insl
mov
push
test
xor
inc
cmp
add
jg
jp
cmpsb
cld
cwtl
js
leave
lcall
jno
push
adc
xchg
pop
ja
mov
xor
sbb
jnp
ljmp
or
mov
dec
je
std
pop
mov
sbb
jno
and
clc
call
jmp
nop
shl
or
jmp
inc
dec
push
shlb
push
lret
adc
lahf
sbb
mov
jge
push
test
ret
sub
jbe
and
xor
in
daa
movsl
setg
adc
gs
xor
and
pop
aas
pop
je
xchg
addb
int
enter
data16
push
les
scas
into
in
sub
int3
sub
jge
into
aas
insl
les
pop
adcb
sbb
int
movsb
dec
jo
scas
inc
dec
jns
mov
adc
mov
pop
add
pusha
or
in
les
daa
pop
sar
push
cld
push
jle
ficoml
or
jp
ljmp
push
nop
mov
cmp
xchg
mov
pop
mov
adc
jo
mov
pushf
pop
imul
lea
xor
or
cmpsb
xor
cld
push
sbb
mov
aad
jg
mov
imul
mov
cli
xchg
inc
pushf
jecxz
shlb
lds
aad
test
loop
xchg
xlat
sbb
movsb
push
xor
sbb
jmp
lods
xchg
and
jge
outsb
ljmp
pushf
jl
cmp
mov
pusha
rorl
mov
testb
jge
hlt
jne
xor
mov
dec
jbe
or
movsb
or
sub
or
shlb
sbb
mov
in
fwait
xlat
mov
mov
add
aad
inc
sub
push
int3
leave
jnp
adc
or
jno
xchg
dec
es
jg
add
add
cmp
xor
mov
out
cmc
add
jecxz
xchg
add
lahf
imul
and
pop
das
nop
cmpsl
xor
xchg
addb
jle
clc
fstpl
xchg
pop
add
cli
sub
inc
add
lea
add
aam
pop
lret
insl
push
hlt
in
add
stc
rorb
inc
sub
pop
jo
inc
inc
lods
fdivrs
or
cmc
mov
mov
js
fistps
cmp
cli
movsl
outsb
dec
int3
mov
aaa
jge
pusha
icebp
xchg
mov
mov
dec
pop
jmp
push
shlb
addb
imul
jbe
out
mov
jne
pop
jns
mov
mov
jns
jmp
dec
push
fcom
inc
mov
pop
in
push
add
aam
cmc
cmp
ja
inc
ds
cwtl
fsts
inc
or
popf
xorl
decb
orb
aaa
fdivs
shlb
and
push
mov
mov
xchg
adc
sar
rcrl
cmc
popf
ret
inc
jecxz
dec
popa
dec
out
cmc
and
and
jmp
pop
dec
mov
cmpb
inc
add
mov
or
mov
dec
sbb
xchg
pop
clc
xorw
xor
push
xor
mov
in
lret
add
popf
xchg
jns
inc
mov
stc
idivl
xor
loop
or
mov
mov
cmp
adc
inc
outsb
mov
rorl
enter
mov
adcl
xor
cmpsl
loope
jnp
pop
add
xorl
out
imul
out
cmpsb
nop
sbb
mov
faddl
std
icebp
mov
mov
or
adc
add
dec
add
adc
js
icebp
paddw
ret
out
enter
push
xchg
dec
jb
mov
and
sub
mov
lock
sbb
and
xchg
ss
in
cmp
jo
cmp
rolb
push
cmp
mov
mov
rcrl
add
sbb
cmp
dec
in
cmp
add
mov
ja
sti
ret
mov
mov
int
lahf
ljmp
out
sbb
fwait
out
xor
js
nop
adc
aas
sub
icebp
cmp
in
and
shr
dec
sub
ss
mov
pop
ret
sbb
pop
mov
mov
or
lds
in
nop
aas
in
outsb
je
xor
pop
fs
mov
nop
popf
outsl
mov
add
and
outsl
jmp
jno
and
cmpsl
jbe
cs
adc
xor
adc
or
cs
lret
js
and
bndstx
adc
jo
into
xor
sahf
cli
xor
mov
push
dec
jle
mov
imul
push
xlat
adc
pop
loop
addr16
sub
adc
jp
xor
mov
fsubs
add
dec
add
icebp
mov
or
adc
ret
sahf
jge
xchg
add
mov
sub
lods
leave
inc
mov
out
add
es
aam
fdivrl
mov
fsubl
insl
test
lods
jg
sub
xchg
lahf
inc
stos
and
out
pop
inc
mov
cmp
mov
adc
sbb
push
repz
sub
inc
mov
cmp
out
outsb
js
imul
ds
mov
jbe,pt
mov
stc
xchg
rorl
dec
and
mov
sub
or
ret
and
fwait
aad
pop
push
xor
adc
test
int
hlt
imul
fildl
jo
repz
in
sbb
lret
dec
jmp
mov
jmp
rcrl
arpl
jecxz
repnz
shll
lods
mov
fbstp
sti
lea
push
dec
into
into
mov
or
cltd
or
popa
ljmp
nop
mov
mov
adc
shl
sub
les
insb
sub
jecxz
cld
push
hlt
fisubrl
jnp
lahf
in
push
xchg
adcl
xor
mov
dec
fisubs
cltd
fwait
add
mov
test
bound
mov
push
insl
add
jl
popf
mov
jo
out
in
dec
test
lahf
xchg
xchg
repz
lahf
inc
inc
shr
push
mov
push
bnd
or
fsub
cmpsb
mov
mov
les
sbb
fs
pop
pop
repnz
dec
ds
mov
push
repz
sbbb
adc
popa
ficoms
push
adc
inc
fsubl
push
clc
sti
mov
mov
pop
push
or
sbb
sub
cmp
lret
fcomp
call
mov
mov
push
or
sbb
sub
cmp
lret
fcomp
call
mov
mov
push
or
sbb
das
cmp
leave
iret
jmp
mov
jnp
dec
pop
icebp
ret
or
adcl
pusha
lcall
incl
fidivs
loopne
lock
mov
jle
outsb
pusha
sahf
jo
inc
mov
xor
add
adc
loopne
lock
mov
shrb
mov
jle
outsb
pusha
cmp
inc
and
fsubs
out
xor
loopne
lock
enter
into
or
or
fidivl
xor
and
pusha
shll
aaa
mov
das
and
add
xchg
and
mov
fstl
lret
mov
or
out
push
loope
repnz
rcll
dec
movsl
adc
idiv
xlat
mov
fcomps
xor
aaa
jge
mov
pop
lcall
lods
cmp
and
mov
and
js,pt
loopne
loopne
dec
shl
pop
dec
fadd
addb
jae
inc
push
iret
add
adc
lock
pop
fisubrs
sub
dec
jno
lret
mov
fcoms
fwait
out
mov
lcall
ss
adcb
scas
inc
lret
and
xor
add
adc
lock
sarb
mov
xchg
pop
es
sbb
and
jnp
mov
mov
fwait
mov
and
or
pop
arpl
add
adc
xor
pushf
add
bnd
insb
xchg
push
lds
in
repnz
outsb
sub
push
ret
xor
add
adc
loopne
lock
sarb
mov
jle
outsb
pusha
sahf
jo
inc
mov
xor
add
adc
loopne
lock
sarb
mov
jle
outsb
pusha
sahf
aad
sti
ret
je
cli
mov
psrlw
scas
cmpb
or
or
rcrl
xchg
rorb
repnz
arpl
test
pop
sub
test
out
sub
and
mov
cmp
mov
aaa
mov
nop
rorb
sbb
insb
loopne
pop
jp
sarb
loopne
push
adc
dec
testl
xor
arpl
andb
cmp
mov
outsl
and
flds
movsl
ja
fcmovnbe
pop
mov
out
bound
push
scas
xchg
mov
add
filds
ret
xorb
in
mov
insb
xchg
sub
mov
pop
mov
jmp
pop
arpl
cmp
loopnew
push
and
xor
cmp
sub
scas
nop
cli
jg
pop
in
or
pushf
push
xchg
sub
xor
and
push
pop
or
add
pusha
or
sub
jnp
inc
movsl
aam
mov
cmp
shl
and
jno
xor
cmp
and
jle
sub
cmpsb
mov
xor
mov
pusha
clc
sub
push
dec
lret
pop
popf
push
shr
add
out
loop
into
jp
xchg
cmp
pushf
rclb
arpl
push
or
stos
cwtl
or
xor
xchg
imul
ror
xchg
mov
inc
loope
mov
jns
sbb
sbb
mov
testb
insb
leave
lret
lods
sahf
insl
dec
cmc
into
pop
pop
mov
pop
lahf
pop
data16
popa
int
push
mov
or
sahf
mov
out
cmpsb
cmp
dec
cmp
ljmp
inc
sahf
xchg
sbb
adc
xchg
inc
movsl
call
rcll
sbb
fldl
jne
out
inc
daa
or
into
mov
insl
sbb
jns
sbb
fdivrl
popl
lods
insl
pusha
push
inc
pop
mov
mov
push
test
mov
gs
rcrl
repnz
xchg
icebp
cs
aam
out
mov
and
int
imul
pop
fisubrl
cwtl
xor
rorl
call
and
add
outsl
xchg
add
lods
cld
adcb
hlt
dec
ret
lods
xor
lahf
sub
add
fsubrl
push
movsl
cmp
add
pop
push
sub
cmpsl
pop
and
in
jmp
or
cmpsb
mov
xor
pop
mov
add
leave
mov
mov
ret
jne
pop
and
lret
les
add
test
mov
inc
rorl
mov
fsubrs
loop
sbb
sub
iret
inc
lret
jbe
stos
mov
push
xor
int3
push
popf
mov
push
imul
adc
add
pop
sub
pop
jae
push
ds
in
pop
xor
jge
dec
xchg
adc
mov
sub
xchg
adc
inc
cmpsl
nop
jno
jae
cli
inc
enter
divl
push
leave
loopne
movsl
lds
jnp
xor
loope
mov
ljmp
pop
push
lret
dec
das
decl
sti
pop
pushf
popa
dec
mov
jecxz
out
cli
and
xlat
cwtl
mov
push
shlb
dec
fcmovnbe
ljmp
loopne
sarl
lea
pop
xchg
or
mov
adc
cwtl
mov
cs
xchg
cmp
xchg
out
stc
sub
test
icebp
repz
frstor
sub
jno
xor
jmp
enter
data16
in
popa
cmp
or
lahf
mov
cs
mov
les
pop
iret
mov
stos
mov
push
movsb
push
xchg
sbb
pop
jo
in
lea
sbb
cmp
and
jno
rcll
cli
fidivs
or
push
scas
push
sti
shrb
lret
enter
cld
jge
xor
sar
outsl
scas
push
into
sbb
mov
stos
jbe
sub
or
mov
cmp
mov
in
mov
aas
stc
leave
mov
fucomip
mov
add
pop
sub
incb
ja
pop
inc
out
cmp
jae
cbtw
mov
cltd
adc
lahf
icebp
push
add
pusha
dec
hlt
insb
xor
or
sbb
mov
enter
stc
mov
or
repnz
mov
jg
stc
loope
or
jl
mov
outsl
bnd
sbb
test
inc
push
dec
adc
mov
andl
stc
xor
inc
adcb
test
jne
cwtl
inc
add
push
pop
decl
repz
stc
cli
out
addr16
sbb
mov
idivl
enter
jb
xlat
and
mov
testl
addr16
mov
movsb
daa
nop
imul
fsubs
nop
push
fs
das
add
or
cmp
mov
in
insl
imul
xlat
aas
test
jb
pop
mov
daa
mov
fwait
adcb
mov
or
icebp
mov
testl
inc
shll
fnstsw
adc
mov
das
lds
xchg
std
clc
iret
inc
mov
cmp
push
arpl
sub
sbb
sub
arpl
aaa
lcall
add
fisttpll
out
insb
mov
or
cmpsb
and
xchg
idivl
data16
sbb
fadd
fldenv
dec
or
sbb
mov
push
testb
cmpl
push
jl
push
ss
pop
cmpb
xlat
dec
push
sbb
mov
mov
loopne
add
imul
xchg
out
adc
xchg
sbb
push
or
jg
xchg
mov
or
xchg
xchg
xorb
pop
js
mov
nop
push
insb
leavew
xor
repz
sub
int3
mov
pop
iret
sahf
int
cli
jp
sub
inc
data16
sti
mov
shll
movsb
jae
into
loop
inc
push
dec
dec
mov
in
xchg
push
loope
or
sub
mov
orb
in
inc
xchg
adc
mov
cmp
mov
fucom
xchg
lcall
in
insl
iret
fimull
pop
call
mov
adc
push
or
adc
mov
in
stc
ret
lret
in
adc
mov
shrb
dec
ljmp
aas
jbe
add
aad
test
pop
mov
cmovge
sbb
daa
stos
or
xor
xlat
leave
jae
cld
leave
mov
sbbl
lcall
xor
punpcklbw
jno
shl
push
mov
mov
mov
cmpsb
add
mov
dec
lds
daa
mov
gs
jecxz
add
add
icebp
mov
in
sti
jbe
sbb
je
mov
dec
xor
pop
push
lock
push
sub
mov
or
cmp
movb
lea
out
cmp
mov
jg
or
aad
orb
rorl
push
push
mov
imulb
mov
jbe
hlt
iret
gs
lret
mov
rorl
xor
pushf
fdivrs
sbb
sti
sbb
mov
xor
lret
dec
movb
cmp
imul
inc
cmp
mov
cmc
outsl
pop
mov
mov
jo
sbb
push
lahf
scas
ret
and
sbb
xor
es
subb
push
int3
push
rcrl
sbb
adcb
mov
push
ffree
and
rolb
std
mov
je
xchg
jmp
rorl
mov
mov
sahf
add
jnp
jmp
xor
push
inc
out
jno
aaa
repz
jns
icebp
dec
pop
loop
add
sbb
arpl
imul
inc
or
daa
add
cs
aaa
xor
lret
hlt
das
sbb
dec
mov
xchg
pop
inc
std
xchg
stc
mov
loopne
insl
outsb
in
les
outsl
push
cltd
sub
and
inc
out
cmc
pop
or
mov
sub
and
jne
sbb
inc
pusha
out
shlb
cltd
cmp
push
sbb
xlat
fidivs
and
xor
xor
bsf
bound
inc
insl
lea
je
mov
mov
push
shll
repnz
inc
cwtl
push
push
add
je
adc
add
and
sub
sbb
rolb
inc
dec
imul
fwait
inc
loop
cld
rcr
icebp
stos
loopne
js
lcall
mov
icebp
jge
xchg
insb
push
dec
cli
lods
mov
rorl
daa
test
mov
pop
call
inc
mov
push
sti
cmp
pop
ljmp
adc
loop
mov
mov
mov
push
decl
add
dec
lahf
adc
imul
xchg
dec
adc
fsts
cli
xor
imul
call
inc
xchg
std
xchg
mov
ret
cmp
repz
loope
push
lcall
inc
pop
push
pop
jne
icebp
jmp
js
push
fidivrs
jp
pop
and
je
test
sbb
cmp
shl
dec
add
xor
test
call
mov
ret
loopne
add
loopne
or
dec
mov
popl
xchg
mov
aas
push
pop
iret
imul
mov
mov
repnz
and
inc
fldt
pop
fsubl
push
fiadds
nop
lret
sub
sub
lods
push
pop
mov
fisubl
mov
cwtl
push
pop
loopne
add
xchg
jns
push
bound
popf
cmpsb
mov
cmp
iret
lahf
cmpsl
scas
jae
inc
sub
stc
xor
and
cmp
aad
enter
xchg
cmp
scas
cli
pushf
dec
add
inc
add
xchg
jb
stos
add
ljmp
cld
adc
adc
lcall
loopne
push
gs
pop
jnp
fcmovu
cmp
inc
push
outsl
dec
push
popf
addr16
daa
in
adc
mov
sub
mov
lahf
ja
inc
ret
pop
jmp
inc
addr16
push
xor
pop
pop
push
rolb
in
cmp
cwtl
mov
xchg
push
stc
aaa
lds
xchg
xlat
cmova
les
xor
sub
fsub
fldenv
pop
jno
sub
arpl
cltd
mov
jmp
clc
or
scas
pop
cltd
xchg
movsb
push
sahf
aaa
imul
call
mov
popf
clc
inc
push
pop
push
loopne
jns
lods
or
ja
outsb
inc
in
xchg
mov
ret
mov
daa
stos
sbb
jle
faddl
push
cmp
xchg
popf
es
mov
push
jnp
dec
rcrb
sub
jae
mov
iret
mov
jl
adc
cmp
push
adc
in
js
push
in
sbb
pop
addr16
maxps
sub
sbb
orl
hlt
jno
cmc
stos
fidivrl
jmp
hlt
fdivs
xor
push
and
cmp
cmp
sbb
jne
cmpsl
adc
outsl
ljmp
pusha
pop
mov
shlb
mov
pop
and
outsb
fcoms
push
fs
decb
scas
sbb
es
ja
inc
repnz
nop
mov
inc
inc
xlat
add
in
sarb
and
sbb
out
xor
mov
sub
adc
mov
sub
sbb
fsubp
inc
nop
and
mov
sahf
mov
int
mov
dec
stc
mov
sbb
mov
jno
jbe
fldenv
xor
jno
dec
rcl
pop
out
bound
je
iret
mov
mov
stos
mov
mov
hlt
cmc
cmp
lret
or
rcl
jle
dec
int3
jbe
fistpl
mov
add
inc
jl
push
adc
sub
sbb
lret
mov
jnp
mov
and
imul
scas
fnstcw
or
jl
push
in
fwait
sbb
mov
jge
mov
mov
mov
pop
dec
adc
dec
daa
pop
clc
or
aam
imul
mov
shrb
inc
xchg
push
jl
in
pop
or
in
xchg
push
mov
lock
xchg
std
fldcw
cmpsb
lahf
gs
inc
push
dec
subl
jne,pt
or
repz
shll
and
cltd
vmovntps
xor
repnz
mov
fnstenv
mov
shl
cli
mov
pop
jbe
lret
mov
mov
mov
inc
ret
mov
mov
dec
stc
adc
mov
test
mov
push
addb
arpl
fs
jl
jno
xchg
jle
aad
pop
push
sub
dec
jmp
add
push
shlb
int
add
mov
xor
and
aaa
cmp
xchg
cmp
or
cltd
and
in
jecxz
pushf
mulb
shl
and
dec
pusha
adc
jno
mov
mov
pop
mov
ss
push
dec
aas
xchg
jg
insl
lahf
jo
imul
push
push
add
lahf
pop
dec
scas
or
add
lahf
xchg
push
insl
xor
push
fsubrs
loope
xchg
adc
mov
mov
fnstcw
outsl
inc
dec
dec
push
sub
and
std
xor
int
dec
fimuls
cmp
outsb
sbb
or
or
scas
jmp
ret
pop
clc
fidivrs
lods
cmpsb
popf
cmpsl
stos
fiaddl
js
add
shrb
push
mov
or
cmc
and
je
sub
or
inc
aad
addr16
aam
xchg
mov
js
jmp
sahf
fcmovnbe
lcall
out
xor
ss
add
inc
in
dec
popf
in
dec
push
mov
xor
add
movsb
mov
loopne
insb
out
es
lcall
mov
jecxz
decl
movsb
mov
and
sub
or
loop
or
call
jle
shrl
imul
test
lret
gs
xchg
and
cli
scas
mov
cmp
test
mov
popa
inc
rclb
test
jl
inc
ds
fsubrl
neg
cli
pop
jne
mov
fidivs
add
jns
inc
dec
or
fnstsw
mov
jns
inc
cmp
sbb
fsubl
jne
add
push
dec
xor
aas
add
test
sub
mov
rorl
movsb
mov
mov
or
mov
push
fsubl
stos
or
repz
jge
or
mov
mov
cmc
outsb
dec
and
cmpsb
imul
and
ret
and
xchg
out
jp
sarb
aad
fidivrl
mov
mov
mov
lea
dec
aam
mov
push
jp
or
lea
jge
add
les
dec
iret
mov
shl
jno
xchg
fidivrs
mov
stc
pop
xchg
xor
lds
jae
and
scas
dec
dec
movsl
and
insl
test
cmovp
push
outsb
outsl
xchg
xor
adc
jp
dec
push
mov
iret
mov
lcall
jp
inc
and
jo
cmp
push
lods
dec
inc
dec
loop
lods
ss
pop
xchg
cmc
int
in
subl
mov
loope
test
inc
xor
aaa
lahf
cmp
pop
inc
aas
aad
ret
call
push
in
pop
imul
pop
sbb
popf
rcr
in
push
ret
ja
enter
sub
arpl
and
jbe
decl
dec
nop
or
xor
inc
adc
xchg
add
mov
jge
xchg
xchg
xchg
ss
test
pushf
cmp
fisubrs
in
fidivrs
xorl
jle
sahf
pusha
jae
sub
mov
mov
or
scas
pusha
mov
lds
movsb
fstps
ja
mov
lock
fs
shlb
add
call
xlat
ss
test
xor
and
leave
sti
adc
loop
mov
and
sbb
pop
lea
sub
ret
jle
cld
mov
jbe
sbb
addb
or
adc
inc
mov
cmp
fisttps
mov
xor
imul
insb
inc
mov
repz
add
into
mov
jmp
out
xchg
mov
dec
dec
sub
inc
lock
xchg
movsb
xlat
mov
jne
les
xchg
sahf
mov
mov
div
push
mov
test
xchg
outsb
jo
push
das
loopne
pop
stc
js
mov
ljmp
mov
std
loop
add
sbb
jle
pop
fsubrs
push
imull
les
fs
pop
fwait
in
xorb
sbb
imul
dec
aad
in
test
popf
negl
push
leave
aas
push
fisubrl
dec
mov
mov
lahf
push
insb
or
in
jp
sbb
xor
subl
decl
mov
ja
icebp
icebp
pop
xor
fcoms
ljmp
sarl
outsb
cmp
mov
cld
or
xchg
pop
mov
ficoms
scas
nop
xor
mov
mov
into
into
cltd
push
cwtl
mov
or
repz
inc
or
adc
and
icebp
int
decl
das
outsl
sbb
dec
jae
bound
icebp
pop
xor
fldpi
dec
sarb
pop
mov
je
sbb
mov
or
pushl
mov
sbb
stos
push
ret
in
and
addr16
jnp
mov
cwtl
mov
xor
sub
in
jge
xchg
punpckldq
jne
out
pop
imul
xor
cld
xchg
popf
jge
jns
cmp
cld
aas
mov
jo
outsl
test
std
aaa
jl
ret
jne
inc
and
aad
adc
pop
mov
mov
fs
push
xchg
cs
cmp
sub
fidivs
bound
inc
jbe
mov
sub
jg
fmul
cmp
xor
inc
lock
mov
or
data16
xor
insb
fimull
inc
insb
dec
in
hlt
mov
mov
subl
loopne
call
enter
mov
xor
jle
push
adc
pushf
pop
mov
out
sub
mov
nop
jle
or
pop
jp
loop
fwait
push
ss
repnz
sub
gs
and
ss
cld
cmc
fstpl
add
popa
adc
xchg
dec
jns,pn
repnz
dec
mov
push
shr
ror
mov
jmp
cmp
push
adc
push
add
dec
pop
sbb
pop
inc
mov
jno
or
testb
popf
and
fsubrs
xor
arpl
jnp
xchg
int
and
add
xchg
pop
xchg
jl
or
inc
lea
stos
pop
xchg
arpl
push
int
add
rolb
into
leave
dec
add
mov
push
aas
cmpsb
iret
std
mov
loope
rorb
lcall
sbb
movsl
jp
mov
cld
hlt
and
jmp
or
cmp
push
push
push
jl
push
fimuls
mov
jb
jbe
ja
cs
sbb
inc
mov
lods
or
add
sub
sub
bound
fwait
xlat
dec
das
xchg
loope
add
pop
inc
pop
add
xchg
mov
repz
sub
inc
outsb
mov
addr16
mov
orb
mov
shrl
dec
into
in
mov
lea
sbb
push
push
fwait
ror
dec
pop
sbb
or
mov
adc
inc
lahf
push
jnp
inc
inc
add
push
mov
xchg
push
repnz
shll
pop
addr16
in
or
repnz
lock
pop
cltd
mov
jo
dec
imul
mul
int3
in
cmpsl
pop
or
inc
mov
dec
movsl
std
fs
or
mov
int3
ficompl
dec
aaa
pop
pop
pop
out
jnp
int
ret
mov
xchg
fisubrl
addr16
out
adc
das
jno
mov
sub
mov
cmpsb
lret
adc
ja
jle
cmp
lods
cmpsl
add
hlt
enter
fs
jne
icebp
aas
fidivrs
clc
addr16
adc
mov
push
outsb
mov
push
sub
cmp
mov
push
fldcw
sub
mov
xorl
xchg
nop
mov
pop
cltd
adc
lahf
jne
repnz
dec
push
adc
pop
in
in
sub
clc
rcl
or
clc
scas
or
add
movsl
mov
ret
pop
sbb
aaa
adc
add
into
sub
fdivrp
stos
repnz
mov
fsts
push
lahf
sbb
insl
xor
mov
push
jbe
fisttpll
dec
mov
sarb
mov
xchg
call
adc
inc
or
lods
adc
or
sub
xor
and
jmp
das
cli
aaa
xchg
loopne
out
pop
dec
iret
and
iret
test
sub
fcmovnbe
lahf
cs
xchg
cld
int3
jle
or
sub
inc
mov
push
scas
and
xor
add
adc
loopne
lock
sarb
mov
jle
outsb
pusha
sahf
jo
inc
mov
xor
add
adc
loopne
lock
sarb
mov
jle
outsb
pusha
lcall
and
xor
loopne
lock
shlb
mov
ja
mov
jo
inc
pop
push
out
and
xor
add
loopne,pn
lock
push
rcrb
cmp
jg
outsl
push
xor
add
and
mov
sub
pop
loope
ret
js
push
adc
arpl
push
clc
inc
call
xchg
cmp
dec
sarl
push
or
jnp
dec
clc
inc
call
int3
dec
sti
sub
or
pop
cwtl
dec
cld
adc
jne
and
arpl
xchg
sti
test
xor
cmp
jg
pop
loop
or
repnz
imul
aaa
hlt
loopne
movsl
mov
cmp
mov
js
xchg
int3
fistps
dec
inc
les
incl
imulb
pop
pop
jnp
xchg
imul
mov
fsubrs
mov
xlat
or
jecxz
pop
xchg
dec
arpl
jecxz
mov
jnp
push
pop
mov
mov
or
nop
jecxz
sub
sarl
fistpl
cld
fisttpll
dec
insl
dec
out
sbb
cmp
sub
insl
ret
push
adc
jae
push
clc
pop
call
mov
lcall
js
cs
cmc
inc
pop
jbe
ja
add
inc
cwtl
mov
iret
popa
loopne
out
repz
scas
or
jl
jae
pop
mov
adc
lock
fs
outsb
ret
aaa
mov
movsl
or
dec
cld
jg
imul
mov
enter
call
xchg
cmp
dec
sarl
push
adc
arpl
push
clc
inc
call
xchg
cmp
dec
sarl
push
lods
dec
jo
pop
sbb
xchg
jg
sahf
outsb
or
sbb
scas
cmpb
lods
aaa
xor
sbb
inc
lods
pop
fisubs
sbb
push
jo
jl
ja
imul
filds
and
add
cmp
xchg
or
push
cmpb
sbb
arpl
sub
scas
dec
insl
jle
adc
test
js
inc
out
loopne
jmp
pop
insl
cltd
pusha
sbb
inc
rorb
test
int3
jg
sahf
ja
int
movsb
sub
inc
inc
aam
clc
pmullw
outsb
jns
push
add
xchg
jl
dec
or
addr16
enter
mov
adc
and
sti
add
mov
std
mov
jbe
aad
test
fidivl
pop
das
add
dec
mov
adc
inc
sub
and
ret
lea
mov
lcall
shr
mov
adc
lds
dec
inc
lahf
push
ss
add
lods
or
out
sub
inc
test
or
mov
jg
inc
dec
mov
adc
sbb
jne
push
mov
jg
adc
loop
movsb
jne
jns
stc
cmp
inc
xchg
mov
push
insb
ljmp
push
and
push
insl
jne
cmp
xor
lcall
push
aas
test
xor
mov
lret
rol
in
sbb
cmp
jl
rorb
addr16
aam
mov
ror
inc
cltd
mov
sbb
add
push
adc
sub
outsb
lahf
arpl
push
cmp
mov
xchg
dec
mov
ds
mov
rol
pushf
jecxz
iret
xchg
dec
push
js
mov
jecxz
add
dec
sbb
mov
sbb
adcb
xchg
shlb
push
testb
ljmp
fstpl
fldt
mov
push
clc
aaa
lds
addb
jmp
and
das
dec
ljmp
cltd
decb
jae
xor
sub
xchg
dec
test
movsb
cmp
jg
js
mov
sub
lds
push
inc
push
js
lds
xchg
pushl
xor
sbb
pop
scas
inc
jnp
shlb
mov
mov
push
repz
adc
adc
sub
sub
pop
ja
inc
stos
js
inc
loopne
popa
dec
pop
pop
push
inc
sarl
movsb
subb
lcall
scas
mull
mov
fildll
ret
adcl
cs
cmp
decb
xchg
push
xchg
leave
sarl
push
push
adc
and
arpl
mov
sbb
aaa
push
cmp
pop
adc
push
add
aad
cmpsb
stos
lret
stos
dec
xchg
xchg
and
lret
push
add
pop
dec
sub
pop
test
nop
rorb
xchg
lret
mov
call
shll
mov
cmp
xchg
mov
in
dec
ss
iret
inc
sub
push
mov
cltd
push
dec
cmpl
repz
ret
test
dec
mov
dec
xor
dec
imul
or
insb
xor
dec
mov
jp
filds
pop
xchg
mov
mov
mov
add
dec
jp
sub
movsb
mov
pop
fcompl
shlb
sbb
nop
push
stos
test
cmp
jbe
sbb
mov
mov
shll
inc
sub
fistpl
in
dec
mov
cmpsl
cmp
xor
stos
add
mov
dec
rorl
lods
adc
outsb
int
push
or
out
xchg
mov
scas
push
or
andb
mov
stc
xor
arpl
or
sti
pop
dec
shrb
cmp
push
pop
cmp
sub
jo,pt
xchg
sub
int3
mov
ficomps
jae
adc
or
leave
add
aad
push
cmpsl
xchg
jp
pop
int
dec
outsl
inc
cmp
daa
lret
mov
mov
dec
jle
add
cmp
addr16
clc
push
repnz
or
cmpsl
fldl
inc
pop
mov
out
cli
xchg
pop
inc
hlt
jne
adc
mov
not
outsb
and
mov
adc
and
mov
ret
pop
inc
test
je
lcall
rol
mov
sub
sbb
xchg
js
test
add
repz
sbb
cmpsb
lds
mov
sti
mov
repz
fidivl
push
push
jecxz
sahf
and
xchg
mov
jmp
mov
and
cltd
xchg
jo
xorb
jle
arpl
cld
or
int3
mov
add
push
sbb
clc
std
into
jo
pop
out
push
sub
jmp
sub
rcll
xchg
mov
jo
lea
test
mov
dec
xor
xorb
cltd
jo
mov
push
xchg
imul
iret
in
sbb
mov
test
jmp
push
sbb
pop
lret
dec
add
and
or
xchg
in
mov
mov
dec
arpl
sub
adc
repnz
xorb
mov
mov
int
rolb
pop
push
loopne
ret
dec
dec
sub
nop
and
daa
add
imul
adc
mov
mov
mov
insl
repz
inc
and
fstpt
scas
fnstcw
pop
shlb
inc
ljmp
sbb
orl
mov
push
and
mov
scas
test
dec
inc
jmp
xchg
sbb
in
pop
sub
fnstcw
ljmp
lret
push
jo
jns
xor
cmp
loop
lahf
cmp
cltd
sub
mov
sub
jno
inc
cli
movsl
add
or
or
test
push
add
pop
ret
js
shll
lock
pushf
xchg
mov
inc
popf
dec
push
pop
ds
push
mov
test
mov
mov
xorb
fmuls
mov
in
je
push
cmc
repnz
dec
leave
push
into
pop
mov
mov
pop
loopne
adc
rorl
mov
les
sbb
adc
in
leave
push
and
fnstenv
ds
push
inc
rcl
xchg
sbb
arpl
pop
dec
mov
and
or
popf
test
xchg
repnz
movsb
icebp
inc
ret
sub
dec
or
dec
jge
fwait
mov
fnstsw
movsl
popf
insb
push
mov
filds
or
mov
popa
stos
sbb
sub
dec
and
pop
adc
mov
mov
xor
inc
pop
mulps
lds
in
push
dec
mov
sub
fistl
push
and
cwtl
add
cmp
cs
jns
xchg
mull
ret
and
adc
sbb
cs
fwait
mov
and
jle
add
outsl
mov
cmpb
push
pop
xor
inc
stc
mov
inc
fdivrs
jge
loopne
xchg
sbb
cld
fnstsw
and
jb
subl
mov
xchg
pop
bound
in
dec
ljmp
mov
xchg
cmp
adc
add
mov
ffree
push
icebp
cld
inc
ret
scas
jge
pop
loope
iret
sti
stc
clc
scas
mov
inc
xor
clc
xor
outsl
imulb
adc
mov
jb
mov
jmp
outsb
xor
jno
rorb
xchg
jmp
std
sbb
mov
push
scas
add
mov
sbb
pop
and
cmp
mov
xlat
aam
xor
lahf
aad
sub
mov
push
or
inc
xchg
mov
test
popa
jge
pop
cmpsl
test
add
dec
lds
jle
jns
mov
int
andb
add
call
ds
push
push
cltd
cmp
push
jp
adc
mov
push
adc
rorb
cmpsb
test
fstps
movsl
in
jne
xor
iret
mov
sub
add
sub
or
add
rcrl
mov
pusha
and
sub
push
and
andl
pop
test
push
and
bound
mov
push
gs
flds
loop
arpl
or
sub
dec
inc
sbb
loope
pushf
push
xchg
fistps
shll
jle
pop
sbbl
add
call
mov
pushf
xchg
out
xchg
lds
outsb
repz
push
mov
pop
pop
in
pusha
jl
pop
test
gs
sub
xchg
ficoml
fs
sub
push
sbb
in
les
nop
repz
clc
sbb
sbb
cmpsb
dec
lea
sub
pop
sub
in
imul
jb
add
idiv
sti
cmp
jbe
fcmovnbe
gs
mov
mov
or
inc
mov
pushf
ret
sub
ficompl
ficoml
add
popa
test
leave
dec
jmp
cmp
jae
imul
inc
inc
mov
mov
cmp
mov
cmp
shll
aam
cmp
push
cwtl
movsl
icebp
scas
popf
cs
outsl
sbb
pop
fmull
lcall
adc
cld
mov
push
sub
in
insl
jns
xlat
jb
jno
bound
jmp
jnp
adc
xchg
mov
aaa
je
inc
lods
mov
fdivrl
mov
loop
mov
push
cli
adc
out
mov
ret
mov
sbb
cwtl
mov
sub
insl
xor
imull
sbb
out
idivb
jb
push
fimuls
pop
popf
test
mul
push
xchg
repnz
flds
mov
cmp
int
jp
cmp
std
loop
ss
ss
push
cmp
imul
pop
jae
movl
or
or
movsb
push
lock
xchg
outsl
jg
pop
lret
mov
data16
xchg
xor
mov
ret
push
lea
adc
sahf
jne
add
aam
cli
push
sbb
mov
mov
jmp
lret
mov
in
xor
ja
adc
fisttps
call
sbb
lret
sbb
push
lret
cs
arpl
pop
insl
je
inc
add
push
xor
int3
shl
pop
and
inc
shrb
pop
add
jno
hlt
push
xor
dec
pop
les
outsl
test
dec
stos
mov
loop
into
shlb
xchg
jne
jo
andb
sbb
jmp
sub
mov
add
loopne
dec
popa
pop
aad
cmp
lret
xchg
aad
and
mov
jbe
or
jp
sar
mov
stos
dec
or
fists
lret
adc
or
roll
or
lahf
enter
cmc
scas
stc
and
dec
insl
mov
jno
imul
repnz
addb
xchg
mov
mov
call
out
pop
mov
in
cmpsb
ss
arpl
testb
leave
inc
cmp
dec
cld
pop
dec
push
cli
int
movsb
pop
ljmp
sbb
outsb
bound
adc
sub
and
leave
pushf
out
cmp
xchg
push
mov
pop
lcall
mov
dec
icebp
in
mov
mov
addb
rcll
pop
xchg
scas
out
mov
les
div
andl
loopne
inc
jecxz
add
xor
loope
sub
cli
cltd
roll
loop
dec
fdivp
fldl
sbb
push
out
cwtl
fadds
push
pusha
popl
jmp
stos
xor
lahf
outsl
jae
shl
stc
mov
shl
in
scas
stos
or
mov
pop
fistps
dec
shlb
ret
movsb
mov
push
ret
out
mov
popa
fdivrs
sub
push
pop
je
and
in
pop
ss
mov
add
jmp
test
faddp
dec
stos
sub
gs
mov
data16
inc
out
push
cld
idivb
push
jo
xchg
into
or
leave
arpl
lret
faddl
scas
xchg
mov
or
jb
add
ds
push
aas
icebp
aam
add
lcall
stos
sbb
xchg
push
cltd
loope
loop
pop
add
ret
add
imul
sub
cmp
rolb
js
loop
or
jecxz,pn
pop
cmp
jge
test
dec
or
inc
ljmp
add
out
pop
je
loop
subb
stc
ret
inc
adc
loopne
leave
mov
mov
dec
push
mov
jno
imul
adc
sahf
mov
lret
or
cltd
test
xchg
fucomp
orl
jle
adc
ljmp
push
cmp
out
cltd
adcb
push
push
icebp
iret
cmp
imul
dec
leave
outsl
int3
xchg
movsb
pop
mov
scas
sub
sbb
mov
jge
mov
mov
jbe
push
imul
sub
add
sbb
addr16
stos
inc
das
jmp
call
sti
xor
or
or
mov
push
call
xor
xchg
loopne
stc
pop
jno
aad
push
sub
lret
cltd
xor
and
dec
sbb
shll
fistpl
xchg
and
daa
pop
movsb
ljmp
outsb
daa
mov
ljmp
es
shlb
testb
dec
or
pop
std
pop
or
loop
cmp
sbb
js
aas
xor
jg
add
jmp
int
mov
fidivs
adc
fwait
cmp
in
pop
mov
es
adc
dec
fxch
test
imul
xchg
xor
aaa
insl
in
jno
outsl
fisubrl
mov
icebp
lret
aam
sub
xor
js
pop
sahf
jle
ljmp
mov
pop
push
addr16
cmpsb
mov
sbb
stos
mov
adc
repnz
add
push
cmp
push
adc
pop
addr16
jbe
ss
lahf
idiv
sbb
outsl
push
or
divl
inc
rcrl
inc
mov
mov
outsl
out
aam
adc
fwait
xor
xchg
or
pop
fs
add
cli
arpl
mov
testl
and
xchg
nop
push
subb
ret
loop
loopne
add
inc
and
adc
aas
xchg
loopne
pop
add
sbb
or
jnp
out
scas
aad
popf
sub
aaa
add
out
jecxz
sub
adc
addl
xchg
outsb
xor
add
push
lock
cld
sbb
jecxz
jbe
rcrl
les
sbb
jl
rclb
add
stc
adc
push
sarb
jp
test
sub
xorb
insl
pop
hlt
pop
sub
imul
and
int
sbb
inc
je
jae
dec
mov
sub
dec
loopne
incl
dec
xor
lods
mull
scas
sahf
xchg
andl
sub
mov
dec
movl
jae
mov
in
sbb
and
adc
mov
popa
lods
inc
mov
sub
adc
arpl
add
hlt
jbe
pop
mov
sbb
mov
pushf
out
inc
pop
pop
mov
es
std
mov
xor
pop
push
gs
test
ds
leave
inc
pushf
lods
enter
inc
ja
call
ss
jno
test
xchg
cmp
xlat
xor
cmp
pop
cmp
xor
sbb
xorl
and
mov
out
xchg
cltd
cmp
xchg
inc
lahf
pop
scas
xor
loope
lret
loope
ret
arpl
shlb
sub
inc
sub
sbb
xchg
shrb
cwtl
push
dec
jb
cmp
sub
mov
dec
cmp
ret
ss
push
or
jno
insb
mov
sti
jge
es
mov
icebp
adc
popf
jmp
pop
jle
imull
adc
cltd
std
movsl
inc
sub
ret
mov
sbb
lock
xor
push
cmc
push
fdivrl
movsb
cmp
xchg
sbb
push
nopl
stos
jmp
xor
das
cmp
inc
mov
sbb
jbe
mov
push
adc
idivb
cmpsb
or
cmp
std
movsb
cld
in
pushf
mov
addr16
in
jb
inc
mov
mov
mov
scas
fidivs
add
dec
pop
in
add
sbbb
sub
pop
or
mov
mov
mov
stos
movsb
and
push
mov
mov
mov
sub
int3
ss
mov
dec
rclb
cmc
push
and
fadds
mov
lea
loope
call
sub
fldenv
pop
fs
inc
xchg
inc
mov
adcl
push
adc
stos
in
mov
je
out
inc
xchg
inc
cmp
jbe
jecxz
out
inc
popf
mov
lods
dec
das
repz
mov
xchg
or
stos
xor
ret
push
testb
mov
add
and
int3
addr16
aas
outsb
dec
rol
add
push
add
dec
jge
aas
imul
jp
sbb
fisubs
std
mov
mov
pop
loopne
insb
pop
fwait
jae
mov
imul
scas
dec
shr
pushf
fadds
sub
sub
push
ss
imul
add
or
sub
mov
and
xchg
xchg
mov
jbe
jo
es
inc
fsubs
sbb
fldcw
fs
das
sub
ja
lret
and
adc
cmp
pop
adc
scas
add
inc
xchg
das
iret
ret
cwtl
js
jg
pop
adc
push
mov
or
xor
xor
shll
sbb
test
jb
das
adc
sub
testl
repnz
push
ret
cmp
push
jecxz
sub
jae
jne
sbb
xor
cmc
pop
xor
stc
lcall
sbb
adc
cmp
lahf
popa
jl
inc
mov
out
cmp
inc
mov
test
and
jns
push
popf
sbb
and
fs
nop
fs
jmpw
inc
frstor
inc
lds
scas
aaa
data16
sahf
imul
and
push
das
inc
fcoml
shll
lcall
and
sub
ja
sbb
cmp
cmp
mov
jbe
ja
popf
inc
outsb
jecxz
out
sbb
sbb
cmp
adc
mov
aad
pop
orl
repz
scas
jle
aaa
in
aas
cwtl
jne
jae
fdivrl
faddl
inc
dec
testb
lock
daa
pop
jbe
and
frstor
cmpsl
std
ss
cmpsb
lcall
cmpsl
outsl
loop
data16
cmp
sub
pop
jmp
popa
mov
inc
das
dec
jecxz
loopne
cmp
std
cmpsl
and
pop
in
and
sahf
pop
mov
mov
push
addr16
pop
inc
addr16
and
or
add
jnp
je
sbb
inc
xchg
mov
pop
ljmp
clc
lret
and
xchg
aas
negb
repnz
stos
dec
ret
movsb
adc
mov
mov
sbb
inc
icebp
loop
push
dec
popa
ljmp
aam
sub
les
adcb
push
jge
adc
mov
mov
sbb
and
pop
adc
or
fsubp
sub
mov
loope
sbb
jmp
bound
dec
test
xchg
outsb
or
pop
imul
push
fdivr
fld
subb
test
pop
jmp
jo
push
sbb
sbb
inc
inc
xchg
je
mov
out
mov
ds
pop
xor
repz
and
scas
cmc
repnz
je
iret
jl
ret
push
insl
push
adcl
incb
adc
das
loope,pn
mov
jno
das
jmp
cli
and
sbb
cmp
cltd
inc
out
jae
push
pop
ret
adc
pushf
std
pop
rolb
adc
popa
imul
jp
jle
andb
add
push
lods
jmp
xlat
jo
fidivs
dec
movsl
jle
dec
mov
bound
test
in
imul
std
mov
int
add
cmp
xor
pop
xor
xchg
call
or
xor
jecxz
or
sbb
scas
sbb
je
cmc
inc
iret
jb
stc
shl
jns
out
jbe,pn
fimull
cmp
add
fcompl
xor
sbb
inc
jb
in
adc
je
ja
aaa
nop
push
insb
or
shl
xchg
movsl
cmc
jno
jmp
pop
push
dec
ljmp
pop
or
insl
icebp
xor
test
add
adc
ljmp
shrl
inc
cwtl
int
pop
mov
dec
call
pop
adc
mov
fmull
fdivrp
sti
sub
les
mov
jl
pop
mov
lret
xor
dec
lods
adc
int
mov
stc
mov
ljmp
sbb
cmpb
pop
insb
dec
aas
cltd
dec
mov
ret
xchg
nop
or
int3
test
xor
test
clc
sub
nop
xor
cwtl
or
stc
bound
xor
mov
mov
in
mov
data16
mov
arpl
push
clc
inc
call
xchg
cmp
dec
sarl
push
adc
arpl
push
clc
inc
call
xchg
cmp
dec
sarl
push
adc
arpl
push
stc
inc
call
xchg
cmp
dec
sarl
push
adc
arpl
js
pop
dec
out
mov
test
imul
stos
sbb
jne
in
fdivrs
push
jno
and
stos
cmc
mov
xchg
mov
movsl
or
inc
sub
gs
adc
jnp
mov
fwait
in
cmc
mov
test
cmc
sti
movsl
or
sbb
fnstsw
addr16
sub
imul
cmp
fldt
test
test
xchg
movsl
jg
jp
sub
push
xor
mov
mov
mov
imul
out
in
aam
pop
stc
xchg
jne
addr16
lock
xchg
push
popf
inc
cmc
pushf
xchg
fildl
mov
sub
push
jno
inc
outsl
jb
push
inc
mov
xor
js
push
push
xchg
cmp
call
adc
jnp
jnp
push
xchg
dec
rolb
fstpt
pop
jo
pop
inc
sahf
lods
scas
es
loopne
xor
xchg
cmp
xchg
aad
xor
in
pop
test
sti
pop
aaa
xchg
jecxz
adc
pusha
push
rolb
int3
aad
lods
pop
or
std
das
xchg
mov
mov
and
push
sbb
dec
adc
jnp
mov
add
mov
sti
lret
outsb
pop
js
insl
ss
cs
xor
add
incl
xchg
incb
dec
cli
lcall
adc
dec
adc
inc
jp,pn
ss
ds
stc
mov
xchg
nop
mov
leave
adc
into
insb
add
add
pop
push
push
jno
add
mov
fwait
lds
xchg
fildl
or
inc
sub
gs
adc
jnp
mov
fwait
lds
xchg
fildl
or
xchg
mov
inc
dec
fwait
mov
outsb
cmp
dec
loop
ljmp
in
pop
mov
std
xlat
sbb
mov
cmpsb
aad
mov
xlat
in
ret
xchg
add
add
fcmovbe
xchg
pusha
adc
xor
mov
fwait
jbe
orl
bound
rolb
sti
xchg
mov
or
fadd
addl
mov
mov
in
aas
addr16
pop
fcomp
aam
clc
xchg
or
movsb
pop
xchg
ret
in
lods
mov
lods
xchg
pop
mov
ljmp
ja
repnz
pop
sbb
jecxz
into
dec
mov
inc
push
push
hlt
mov
subl
mov
daa
jl
inc
leave
mov
push
add
scas
xchg
cld
jp
cli
inc
fdiv
aad
mov
pop
adc
out
mov
inc
jp
pusha
lret
or
pop
fwait
and
pusha
outsb
mov
and
jo
std
daa
aad
push
jle
xchg
mov
in
pop
mov
inc
idivl
or
scas
in
lahf
imul
ret
test
mov
jge
and
dec
stos
movsb
inc
out
aam
clc
and
rorl
xor
aas
cltd
ficoml
repnz
loop
inc
sahf
pop
ljmp
out
pop
loopne
xlat
dec
sti
aaa
pop
fldenv
cmpl
subb
es
inc
in
cmc
nop
jmp
es
pop
enter
cmpsl
pop
add
lahf
cmp
popa
bound
ja
jbe
int
sbb
clc
mov
repnz
sub
sub
ljmp
xchg
ljmp
testb
loopne
adc
pop
sbb
stc
pop
insb
lcall
fistpl
stos
dec
mov
jno
add
insb
enter
push
lods
mov
call
fidivrs
pop
lret
hlt
jns
lret
push
or
daa
test
or
pop
push
cmp
sub
jl
cltd
iret
cmp
fisttps
xchg
push
mov
mov
dec
jbe
idiv
mov
bound
dec
out
dec
jl
sub
int
and
xor
cwtl
inc
scas
mov
std
push
adc
xor
adc
pop
dec
rol
sub
and
in
cmp
jb
and
lods
add
mov
push
cmpsl
fisubrs
adc
jbe
jno
insb
inc
in
insb
add
push
movsl
nop
rorl
sti
xor
std
push
addr16
xor
pop
sbb
pop
jmp
push
mov
inc
rcrl
lss
test
add
xor
ret
cmc
movsl
repnz
mov
les
in
jmp
xchg
data16
out
popa
daa
lods
xor
fstp
lea
js
shl
inc
mov
push
inc
xor
ror
shl
bound
adc
sarl
decl
aaa
es
aam
rclb
test
push
push
addr16
popa
fimuls
lahf
pop
out
pmuludq
mov
decb
sbb
push
fwait
clc
cmp
cmpsb
leave
fsubs
push
pop
aas
in
jp
mov
mov
adc
xchg
clc
push
iret
lds
or
loopne
das
out
cmp
sahf
enter
cmpsb
mov
negb
aam
imul
imul
fld
mov
xchg
add
test
mov
int3
sti
mov
nop
lods
and
push
adc
aam
pop
pop
insl
mov
sahf
dec
xchg
shr
mov
lock
js
mov
pop
inc
dec
mov
in
in
or
lods
mov
nop
mov
iret
mov
arpl
adc
jae
orb
scas
mov
loope
cmpsl
mov
scas
cmp
int3
jecxz
adc
inc
mov
push
push
push
sbb
iret
sti
ds
push
sub
cmp
or
dec
outsb
and
out
sarb
xlat
sub
jns
stc
sub
or
sti
sub
inc
jl
out
or
jae
fists
xorb
test
inc
dec
cmpsb
sbbb
test
rclb
icebp
jmp
aas
rolb
mov
imul
loopne
mov
notb
fwait
adc
insl
push
out
and
jmp
jb
mov
test
sahf
imul
push
add
call
pop
xchg
leave
test
lcall
adc
cs
das
out
xor
iret
xchg
jge
jbe
xchg
stos
mov
mov
xchg
mov
jge
mov
inc
repz
sub
push
xor
aaa
iret
fwait
sub
inc
dec
repnz
orl
popa
sub
mov
cmc
insl
pop
push
xchg
cmp
cmp
dec
push
jecxz
les
xchg
call
out
sbb
jae
rclb
aad
into
xorb
cwtl
and
lret
and
inc
dec
lahf
push
xchg
xchg
call
dec
add
mov
sahf
dec
mov
aaa
add
rcl
repz
rcrb
shr
ds
nop
xor
cs
aad
pop
cmpsl
insb
sbb
mov
les
mov
mov
out
dec
dec
clc
mov
push
or
ja
loopne
mov
dec
add
mov
ds
stos
and
pop
sbb
xchg
cmpsb
movsb
int3
jns
int3
rclb
loope
ja
sbb
lods
mov
dec
mov
mov
jbe
insl
mov
loope
cmpsb
xor
mov
push
pop
bnd
xchg
xchg
mov
inc
xor
cmp
insl
loope
inc
cmp
lds
or
rcrb
aaa
popa
rclb
jbe
fdivp
mov
mov
push
adc
dec
adc
orl
mov
jnp
hlt
pop
mov
test
cli
aaa
cmpsb
lods
adc
cmp
out
in
dec
pop
xchg
aad
int
cmp
lods
pop
sub
int
or
push
lret
aam
and
pushf
call
xchg
adc
inc
adc
ret
mov
lods
loopne
es
jb
ret
ret
xchg
nop
int3
xchg
adc
mov
mov
push
dec
pop
mov
push
mov
popa
push
pop
mov
xchg
cmp
sbb
ljmp
shll
xchg
sbb
xchg
aaa
pop
mov
cli
imul
fldl
push
inc
sub
out
mov
fs
lock
pop
and
fisttps
loop
mov
sub
imul
adc
dec
ss
addr16
stos
call
insb
jno
mov
add
push
inc
and
cwtl
adc
call
sub
jmp
in
out
mov
mov
inc
dec
xor
insb
jno
cmpsw
xor
xchg
outsb
mov
in
test
leave
sub
mov
or
inc
das
cltd
popf
pop
lret
cmpsl
mov
dec
jbe
and
jp
lea
adc
lods
ja
sbb
ljmp
adc
lea
adc
insb
adc
es
inc
fnstenv
pop
xor
mov
aad
addr16
xchg
testb
inc
ds
cmpsb
xor
cmc
sbbb
push
fsubrl
int
sbb
dec
sbb
or
fists
jle
lahf
adc
neg
pop
push
cmp
enter
pop
daa
cmp
or
dec
or
mov
xchg
mov
xor
in
xor
jmp
aas
out
add
repz
shlb
push
adc
cmp
push
inc
sub
ret
sar
xor
push
sub
out
jg
jecxz
and
lods
pop
mov
je
nop
lock
add
cmp
rcll
bound
std
dec
out
cwtl
ss
jo
sub
jo
inc
fcom
mov
xchg
xchg
int
js
or
out
shlb
popa
lret
sbb
adc
fstl
push
rorb
cs
adc
std
mov
push
or
jge
mov
mov
sbb
push
subb
mov
shrb
mov
push
stos
jg
aas
add
lock
mov
test
pop
jg
fbstp
popl
xor
pop
mov
xor
mov
popf
sub
inc
mov
addr16
call
fwait
es
add
into
das
or
insl
xchg
fs
add
xchg
inc
std
and
xlat
jp
clc
out
xor
mov
pop
lret
outsb
or
push
subl
xchg
jp
dec
mov
and
mov
jle
addr16
jbe
gs
jl
cmp
outsb
cmp
iret
out
pop
push
cwtl
add
adc
mov
nop
sahf
lods
lea
icebp
lret
push
and
add
cmp
pop
cld
aas
add
nop
aam
mov
repz
mov
imulb
mov
repz
arpl
outsl
jp
cmp
add
sbb
das
inc
aam
insb
xchg
loopne
jl
push
sarl
ret
pop
push
jecxz
loop
mov
push
cmpb
out
aas
lea
aaa
xorb
ja
adc
jno
jmp
repz
inc
sub
push
push
int
arpl
fwait
or
mov
mov
add
jmp
inc
cld
sub
mov
pop
out
jae
loope
adc
mov
out
xor
shrl
stos
sub
test
inc
dec
push
jmp
mov
mull
test
and
sbb
pop
lock
pop
data16
mov
cmp
xchg
insb
repz
add
dec
dec
fsub
mov
mov
mov
lods
mov
sbb
sbb
xchg
jl
inc
daa
ret
hlt
adc
movsb
sarl
xchg
into
push
dec
mov
or
fs
cs
and
sbb
xor
adc
xchg
cmp
cmpsb
sbb
lret
xor
sub
lock
or
cmp
aaa
cltd
into
mov
scas
fnstsw
out
or
add
aad
outsl
pop
roll
pop
leave
cld
mov
shrb
and
mov
std
pop
gs
insb
arpl
pop
jb
push
mov
xadd
or
pop
cmp
xchg
in
pop
cli
in
lcall
pop
mov
cmp
orl
cltd
out
in
inc
xchg
lea
pop
mov
mov
test
in
add
cwtl
mul
ret
sbb
mov
and
sbb
sbb
add
incb
inc
fistpl
sub
cmpl
sub
repnz
stc
mov
inc
aad
lea
mov
lret
fnsave
inc
mov
aaa
adc
pop
pop
sub
rcrl
pop
mov
cmp
sbb
push
movsb
dec
xchg
xor
pop
mov
mov
jbe
pop
stos
ljmp
sub
rcll
sbb
data16
ret
gs
mov
mov
fisubrs
mov
pop
dec
in
sub
push
dec
jmp
inc
pop
rcl
push
dec
insl
call
adc
mov
xchg
lea
mov
xor
ds
adc
sub
jp
clc
adc
mov
jae
clc
test
pop
jge
daa
aad
cmpsb
call
add
adc
outsb
cli
out
mov
in
rclb
sar
lds
and
inc
dec
jns
xchg
aas
outsb
inc
and
dec
and
xor
aad
jns
out
je
xor
dec
lret
adc
lods
pop
les
jno
andb
inc
hlt
jo
mov
pop
aam
fisttps
dec
xor
loop
scas
leave
dec
cmp
clc
daa
pop
lds
imul
lods
push
add
cld
or
dec
mov
jp
dec
sbb
mov
js
jmp
adc
fmulp
lcall
lea
dec
out
cmp
jb
mov
out
scas
mov
add
pop
js
dec
mov
add
popf
mov
cltd
cmp
and
std
mov
mov
loope
fcoml
popa
mov
das
mov
jecxz
pop
inc
dec
sub
andl
jnp
aas
xchg
lcall
ss
push
xor
arpl
fildl
loop
pop
jb
aas
mov
pop
dec
leave
jg
clc
adc
add
dec
ds
test
cwtl
add
shrl
pop
mov
arpl
test
adc
add
cmpb
push
sub
and
nop
add
mov
push
clc
aas
ljmp
cmpsb
test
push
cld
add
gs
mov
xchg
adc
mov
xor
jmp
or
cld
test
out
mov
jns
in
jl
and
sub
int
add
jno
popl
lods
shlb
pop
imulb
imul
hlt
bound
dec
mov
fisubs
inc
and
jg
int
ljmp
loope
dec
cmp
sub
fcomps
cmp
xchg
imul
cs
int
mov
lods
jno
js
cmc
jo
mov
xor
cwtl
add
inc
iret
and
push
es
or
out
adc
enter
insb
sti
bound
add
stos
mov
out
mov
popf
lock
ds
sahf
adc
pushf
cmp
daa
dec
aam
pop
imul
cmc
data16
push
fcomp
mov
je
icebp
divl
pop
xor
cmp
jmp
xchg
in
dec
cmp
cltd
notb
arpl
xlat
mov
adc
cld
mov
xorb
rcl
jbe
mov
dec
mov
sub
pop
xor
loopne
inc
xlat
inc
es
inc
arpl
inc
push
mov
scas
adc
ret
sahf
push
ds
das
jno
pop
cmp
das
ds
addr16
aad
or
gs
push
iret
inc
adc
incl
std
mov
mov
jp
clc
push
adc
rolb
xchg
pop
test
leave
xchg
mov
movsl
test
je
outsl
and
cmp
dec
outsl
inc
sarb
movq
pop
sub
pop
fcoms
test
out
dec
mov
push
pop
out
roll
mov
bound
imul
scas
xor
pop
sar
pop
adc
es
mov
xor
adc
mov
into
pop
or
mov
punpcklwd
repz
xchg
inc
sub
add
addr16
sub
mov
cltd
cmp
repnz
mov
mov
dec
inc
mov
sbb
push
jo
inc
mov
incl
pop
push
pop
enter
cmc
icebp
fs
mov
daa
jns
jecxz
pop
mov
mov
inc
add
arpl
out
loope
mov
xchg
daa
cmp
dec
pop
cltd
lds
fs
cmpb
dec
out
jbe
or
mov
sbb
daa
push
push
adc
mov
pop
pop
push
mov
ja
insb
jae
ss
ret
ljmp
push
mov
inc
add
lds
xchg
xor
iret
push
mov
cwtl
je
movsl
mov
ss
or
inc
roll
test
and
push
pop
pop
xchg
scas
push
mov
jge
ret
testl
jmp
lahf
shlb
mov
xor
inc
push
es
mov
inc
sahf
imul
out
lcall
in
shlb
sbb
adc
and
push
adc
xor
pop
mov
stos
adc
or
cltd
cmp
sub
xchg
nop
mov
dec
cmp
lcall
dec
out
push
xor
test
sarb
sbb
repz
out
push
inc
pop
or
xor
repnz
sbb
rclb
inc
push
mov
adc
call
sysexit
out
push
cmpb
xor
xor
repz
cmp
push
lds
inc
adc
xchg
ret
xchg
jae
nop
pop
mov
inc
out
ret
dec
fs
dec
out
ret
pop
jns
push
andl
int
nop
cmp
test
ja
jne
xor
cmp
xchg
test
stc
sbb
push
js
pop
aaa
push
mov
fadd
lret
lock
jne
cmp
sub
inc
jl
push
shlb
ret
or
test
test
std
sbb
mov
insl
repnz
cld
ljmp
or
les
testb
int
and
adc
decb
movsb
mov
pop
jae
bound
fxch
cmp
push
and
repnz
sbb
pusha
scas
repz
imul
dec
jnp
dec
cltd
mov
jnp
xor
push
lahf
sbb
xchg
ss
xchg
cltd
dec
repz
cmp
rcll
popf
mov
push
xor
mov
pop
gs
dec
mov
loope
xchg
call
mov
jecxz
cmp
out
js
inc
ret
aad
lods
pop
outsb
sub
inc
into
sahf
jge
jecxz
lgs
push
fbld
insb
push
dec
int
dec
mov
jp
dec
xchg
xor
push
popf
out
aaa
jne
mov
mov
out
int
cld
mov
inc
cli
scas
movsl
jle
jne
add
sbb
gs
dec
scas
pop
and
or
xchg
gs
sahf
in
mov
out
dec
sbb
or
add
cld
adc
shl
lret
into
mov
jg
out
mov
dec
insb
pop
bound
nop
add
fstpl
xor
adc
inc
ret
in
stos
clc
sti
jge
js
loopne
leave
cmp
xor
mov
pop
sbb
jno
pop
mov
push
xor
mov
lcall
xchg
jne
ret
xor
mov
lea
out
jecxz
xchg
lock
inc
xchg
stc
bnd
mov
and
das
in
adc
and
xchg
sub
clc
lret
mov
in
sub
insl
pop
js
testb
pop
mov
cmp
test
imul
lock
dec
hlt
enter
cld
inc
cli
lds
cs
aas
cli
inc
push
fidivs
cmp
sarb
and
cmp
push
out
pushf
aad
adc
sbb
out
push
stos
addr16
adc
scas
push
das
roll
jecxz
add
adc
repnz
or
mov
int
inc
xchg
dec
mov
outsb
clc
mov
jl
jecxz
mov
adc
popa
icebp
or
pop
xor
leave
ret
insl
das
pop
mov
cs
push
jp
add
jnp
sub
dec
mov
sbb
loope
mov
dec
xchg
mov
mov
lods
mov
scas
cld
shrb
cld
repz
push
jno
mov
jne
test
mov
add
daa
addr16
and
pop
fiaddl
pop
pop
lock
out
adc
test
cmp
and
adc
mov
scas
xchg
inc
sub
inc
ja
rol
jmp
push
push
xchg
mov
add
mov
loopne
repz
orl
scas
js
inc
mov
dec
sbb
mov
mov
sub
inc
js
sub
mov
pop
mov
lret
sub
pop
test
int
adc
push
mov
imul
and
loop
in
and
jl
add
das
xchg
fwait
ds
adc
pop
stc
mov
jp
mov
and
aam
data16
jmp
cmp
sub
push
imul
stc
inc
sub
call
cmc
mov
pusha
fcmovu
add
iret
dec
mov
and
inc
xchg
js
insb
les
mov
gs
data16
push
pusha
outsb
js
sbb
cmp
in
setg
jge
add
sub
les
jnp
cmpsl
cmp
outsb
fs
stos
lea
cmp
das
das
inc
mov
aam
in
mov
or
sbb
sarl
pop
adc
jmp
scas
sbb
jae
orl
mov
adc
jp
in
adc
rclb
inc
mov
and
pop
jg
mov
les
cmp
jge
cmp
add
out
push
shrl
aas
lcall
jno
arpl
shr
je
jnp
fld
add
jbe
test
ret
leave
xchg
adc
adc
pop
sbb
dec
sbb
push
jae
shll
int3
and
frstor
scas
mov
push
into
in
mov
inc
insb
push
sbb
cld
dec
das
and
movsb
mov
mov
shl
jbe
or
cmpsl
outsl
inc
fistl
xor
inc
aam
hlt
pop
add
pop
add
movups
data16
sub
push
adc
sbb
stos
mov
xor
addr16
jbe
and
imul
add
daa
push
sbb
sahf
cmc
jmp
ret
jle
dec
jp
popa
push
xor
dec
push
ret
and
int
fs
xchg
mov
outsb
adc
outsl
nop
cld
mov
sub
sysenter
xchg
out
adc
or
mov
jp
inc
fbld
daa
aam
jne
and
cmc
pop
out
xor
insb
pop
adc
sbb
cmc
or
mov
into
lahf
dec
xchg
insb
in
inc
std
mov
out
xor
push
rep
frstor
ficoms
and
cmp
adc
mov
jge
mov
cltd
stos
ret
fstl
pop
shrl
dec
add
icebp
ljmp
mov
xor
mov
dec
mov
sbb
gs
adc
jnp
mov
fwait
lds
xchg
fildl
or
inc
sub
gs
adc
jnp
mov
fwait
lds
xchg
fildl
or
or
dec
adc
jnp
mov
mov
test
xchg
sti
movsl
or
inc
sub
fs
adc
sti
and
add
mov
jp
dec
add
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
and
adc
or
push
adc
and
jb
xchg
and
adc
popa
ret
inc
loop
adc
and
jb
xchg
and
adc
popa
ret
inc
loop
adc
and
push
movsb
sub
ror
and
outsb
mov
into
inc
sbb
sbb
aas
int
mov
es
jp
leave
adc
ja
mov
addr16
out
sub
inc
pop
adc
dec
xchg
sbb
lods
xchg
inc
sbb
ret
and
in
mov
jns
mov
dec
xor
insb
add
aas
xor
bound
xor
mov
int
adc
pusha
xlat
jno
into
loop
lahf
jp
jle
shrl
push
pop
insl
shll
test
mov
fs
cmpsl
sar
pop
push
out
jle
push
add
mov
pop
outsl
mov
into
jno
sub
adc
cld
jg
loop
inc
aam
mov
xchg
or
aaa
aad
rcrb
xorb
add
jno
inc
loop
adc
and
jb
bound
fldt
js
or
loopne
adc
lds
jmp
inc
adcb
and
mull
out
xlat
add
arpl
sub
push
ja
push
les
loopne
push
subb
movsb
pop
xor
imul
jno
inc
loop
adc
and
jb
xchg
and
adc
popa
ret
inc
loop
adc
and
jb
xchg
and
push
sub
ror
aas
adc
out
xor
sbb
xor
mov
fisubrl
jae
popa
jns
shrb
test
inc
jno
adc
leave
cli
mov
xor
cs
les
push
les
jl
push
clc
ffreep
push
test
jns
mov
mov
xor
xchg
pushf
mov
push
mov
out
mov
xor
js,pn
pop
ja
or
repz
or
insl
jl
cmp
dec
gs
cltd
das
push
cltd
scas
fwait
pop
dec
ss
mov
pusha
clc
int3
out
pusha
push
inc
xchg
sbb
cli
xlat
push
scas
sti
pushf
repz
add
push
push
stos
and
xor
dec
jo
and
jmp
out
push
movsl
push
mov
addb
jns
push
dec
addr16
mov
bound
push
xchg
insb
out
cmp
cmp
push
cmc
test
popa
sbb
sbb
cwtl
add
cmp
ficomps
test
mov
jne
leave
pop
fdivrl
cld
inc
sbb
lahf
ret
lret
cmc
gs
ret
lcall
and
and
neg
ret
in
push
mov
xlat
jb
ds
lds
ret
iret
xor
out
in
inc
push
xchg
pusha
fs
loope
popf
je
xor
jo
jne
lods
jl
xor
jbe
jmp
mov
rcl
sahf
outsl
pop
movsb
adc
cmp
mov
mov
cmc
test
lret
in
arpl
mov
dec
in
xor
xchg
xchg
adc
js
push
cmp
xchg
shll
sbb
bound
push
dec
ret
popf
and
xor
addb
or
push
sti
ret
mov
xcrypt-cfb
cmpsl
and
test
in
sbb
or
repz
xor
pusha
jo
pop
mov
inc
jmp
mov
imul
xor
sbb
cltd
mov
loope
cmc
fstl
shlb
sub
movsb
das
xchg
xor
in
psrld
xor
dec
fisubs
add
test
stc
scas
data16
in
stc
sbb
xchg
jl
adcb
loope
outsl
mov
pushf
sti
pop
fs
mov
sbb
lock
and
pusha
sti
pcmpeqb
pop
mov
mov
sbb
pop
push
adc
stos
data16
inc
lcall
fwait
lcall
cmpb
lds
pop
xchg
xor
mov
jae
jmp
xor
mov
mov
pop
jno
push
aaa
jmp
das
repnz
movsb
cli
icebp
cld
lret
adc
ss
lods
mov
test
and
adc
out
or
mov
mov
jl
lcall
loop
push
or
cwtl
pop
or
sub
sarb
and
enter
mov
cmp
sub
push
js
cmc
je
sbb
sarl
adc
and
pop
dec
int3
mov
pop
sti
xlat
pop
or
jne
sbb
mov
push
cmp
iret
call
pop
loopne
jp
jb
iret
test
sub
push
aad
jg
mov
jge
jb
aam
es
xlat
or
sbb
fcoms
dec
aad
sub
filds
pop
inc
jo
pop
ret
addb
dec
stos
dec
pop
sbbb
mov
stc
aam
add
in
cmp
imul
mov
mov
flds
xchg
cmp
inc
mov
xchg
add
cmp
pop
mov
push
or
sahf
mov
mov
popl
mov
ret
dec
cmpsl
jmp
pop
mov
cmp
nop
sbb
push
push
jo
jno
mov
idivb
cmp
js,pn
rcrb
jns
shl
stos
add
mov
dec
mov
jmp
bnd
popa
xor
jb
lcall
std
imul
mov
outsl
cmp
std
pop
cmpsl
jp
out
adc
fsubr
jle
outsl
or
mov
fcmovnu
sub
jae
inc
mov
lods
sub
add
outsl
das
jno,pt
jne
ljmp
addr16
jl
dec
or
lods
cld
jmp
pop
pop
inc
inc
cmp
sbb
lret
pop
mov
outsb
hlt
mov
loop
mov
pop
insl
or
mov
mov
bnd
leave
adc
jge
movb
test
add
movsb
scas
xor
mov
cld
sub
sbb
add
push
mov
jl
out
sub
mov
data16
in
jns
pop
mov
sub
shrl
repz
mov
xor
adc
sub
negb
into
int3
mov
mov
out
jp
pop
fnstcw
pop
inc
xlat
shrl
rcr
mov
xchg
add
je
loopne
mov
hlt
and
pop
xchg
dec
cmp
in
mov
jp
jae
add
adc
mov
icebp
jb
fisttpl
pop
ret
in
fwait
les
push
loopne
and
xor
insb
jns
cli
and
aas
jae
dec
jno
dec
inc
push
shrb
jmp
pop
popl
mov
popa
das
clc
cmpsb
mov
mov
shll
aaa
dec
pop
xor
or
enter
mov
xor
pop
fs
sub
push
dec
mov
rcrb
in
call
neg
adcb
push
dec
in
subl
push
sbb
fistps
gs
pusha
mov
test
sbb
mov
out
outsb
jnp
add
xchg
sub
shll
and
xor
push
iret
jb
mov
mov
nop
cs
nop
adc
push
popf
mov
stos
sbb
pop
or
imul
mov
and
push
adc
dec
mov
lret
lahf
inc
jecxz
fsub
sbb
xchg
ss
mov
in
rcrl
enter
and
and
loopne
adc
jl
mov
inc
aad
jbe
cmp
xchg
test
and
scas
es
nopl
mov
adcl
xchg
xor
jecxz
outsb
data16
outsb
les
xchg
add
fstp
xchg
in
pop
jne
jmp
pusha
inc
dec
jne
push
je
movsl
stc
in
cwtl
cwtl
sub
sahf
outsl
aad
xchg
add
inc
mov
insl
and
add
pop
lcall
shl
lock
or
es
enter
dec
test
xor
in
push
test
push
mov
adc
cmp
clc
xchg
int
pushl
cltd
ret
out
cmp
hlt
pop
daa
cmp
stc
push
jb
sub
pandn
xchg
sti
dec
mov
sarb
mov
mov
inc
and
push
adcb
fisttpl
es
pop
cmp
andl
stc
cmp
sub
mov
inc
pushf
mov
fiaddl
es
dec
jbe
xor
repz
adc
movsl
fidivrs
and
add
jle
aam
adc
adc
addr16
int3
repnz
jge
jnp
mov
push
adc
adc
orb
pop
dec
leave
fldenv
and
clc
clc
and
sbb
outsb
or
dec
out
in
shll
inc
jo
xchg
push
lahf
cmpsb
outsb
mov
repz
mov
jecxz
mov
pop
nop
cmp
sti
jne
inc
dec
sbb
inc
dec
dec
mov
inc
dec
sub
mov
cltd
scas
add
xchg
and
and
imul
inc
push
arpl
or
lods
mov
and
push
rolb
mov
xlat
movsb
add
fisttpl
xchg
lret
mov
popa
inc
movsl
lock
call
in
xor
adc
mov
and
mov
xor
rcl
in
gs
pop
jg
pop
push
dec
push
pop
js
and
idivb
adc
frstpm(287
imul
adc
je
cli
idivl
incl
fidivs
dec
fiadds
ror
pop
xchg
in
and
sub
shl
mov
xchg
cltd
cs
es
jns
inc
sub
xchg
xor
or
divb
add
das
xor
push
aad
pop
adc
mov
sbb
xor
jge
into
imul
adc
in
out
stc
and
sar
and
test
cmp
inc
pop
inc
cmpsl
pop
add
scas
jo
pop
push
in
adcb
incl
xor
add
add
jae
add
enter
mov
sub
mov
pop
hlt
add
jne
add
and
mov
enter
push
shl
and
dec
out
cld
dec
lret
mov
pop
pusha
jl
test
aad
ffree
scas
push
push
loope
jmp
cmp
cmp
sub
das
or
add
and
jl
push
adc
pop
lea
enter
in
fsubp
xorb
ret
sbb
je
daa
into
test
iret
add
dec
push
jo
cmpsb
jge
mul
adc
dec
aaa
push
cmp
out
mov
pop
mov
inc
jns
scas
mov
lds
std
mov
mov
mov
mov
fisttpl
clc
addb
hlt
pop
ljmp
pop
xchg
and
add
cmp
sbb
ret
push
ret
sub
dec
test
arpl
mov
mov
xchg
jae
lods
cmp
push
jp
sahf
pop
xchg
enter
lods
cmp
rolb
stos
incb
dec
scas
cltd
enter
mov
cmpsb
ja
in
xchg
push
pop
mov
lea
rcrb
into
push
and
or
mov
sub
fistpll
seto
je
xchg
aas
imul
mov
movsb
sub
xchg
mov
cli
sbb
js
lret
push
push
out
lods
notb
cwtl
ror
rorb
ja
pop
loop
add
in
xchg
pop
stc
adc
adc
sbb
mov
test
popl
mov
dec
mov
sbb
jg
pop
imul
and
or
xchg
out
push
add
fwait
inc
movsb
xor
jbe
addr16
adc
and
xchg
cmp
jns
mov
test
adc
add
shlb
inc
lahf
inc
push
mov
adc
idiv
ljmp
or
outsb
mov
rolb
xchg
std
xor
inc
mov
ljmp
jbe
pop
mov
pop
jb
mov
call
getsec
jmp
mov
mov
insb
inc
adc
pushf
xor
mov
orb
mov
fidivs
ds
insl
jl
sbb
or
leave
out
pusha
std
sub
pop
icebp
mov
test
loope
pushf
mov
in
adc
push
pop
add
push
xor
xchg
cmc
negb
je
mov
mov
pop
mov
xor
add
js
sbb
sahf
inc
fisttpll
inc
mov
test
dec
ja
scas
iret
mov
xchg
push
pop
test
call
sbb
add
sbb
and
test
call
shlb
add
aas
outsl
test
aad
push
xor
lret
sbb
sub
mov
pop
mov
stos
or
insb
lret
nop
jb
cwtl
and
ret
test
lahf
orb
out
mov
mov
cmpsb
ret
stc
xchg
idiv
adc
jae
sub
cli
mov
adc
out
cwtl
pop
shr
ret
lods
xchg
scas
outsl
mov
xor
mov
sbb
dec
mov
add
dec
xor
test
popa
jbe
ret
xor
stos
mov
jecxz
shlb
aaa
inc
dec
jg
mov
add
sub
cmc
fwait
sbb
mov
xor
adc
fnstsw
aas
add
add
sub
es
mov
fnstcw
cmp
je
fstpt
mov
imul
aas
div
and
xchg
adc
sbb
jmp
lods
test
mov
jo
sbb
and
les
repz
cmp
push
lret
lea
outsb
lea
leave
adc
incl
loopne
shrl
ret
xor
test
cmp
shlb
rclb
ret
pop
lret
mov
sbb
in
jns
mov
iret
jnp
fdivrs
add
gs
xchg
push
xor
das
xchg
lahf
and
jns
sub
cli
cwtl
dec
cmpb
lahf
jbe
add
or
add
cld
xchg
repnz
pop
jbe
shrl
mov
sbb
jns
adc
adc
xchg
enter
cmpsb
mull
jle
cmc
push
pop
cmpsl
lea
xchg
rorb
in
sti
daa
push
add
xor
push
cmc
pusha
pusha
cmp
sahf
xor
dec
or
test
outsl
bnd
cwtl
in
dec
call
andb
mov
pushl
inc
pop
test
aad
popa
xchg
dec
xchg
push
xor
je
adc
sub
or
test
jl
pop
repnz
fwait
inc
mov
call
pop
daa
dec
xchg
ljmp
js
in
lock
or
pop
fcomi
mov
push
jmp
push
xor
cmc
mov
cs
aas
ljmp
std
loope
mov
fdivrs
sub
pop
push
push
mov
loopne
xorl
add
dec
in
and
cmpsb
mov
push
push
fbstp
sub
xchg
movsb
imul
gs
adc
les
rol
stc
jns
cmp
jecxz
js
es
aam
or
loop
cwtl
sbb
sbb
mov
or
pcmpeqw
sti
mov
xor
dec
enter
lret
pop
mov
mov
cwtl
inc
push
pop
mov
xchg
and
leave
addr16
cmc
insl
jle
in
out
push
dec
inc
aad
sub
add
mov
or
sub
mov
or
shlb
push
fwait
jge
dec
add
sbb
cs
test
dec
pop
cltd
fstl
inc
mov
cmc
push
cmp
mov
leave
pop
shrb
daa
push
fs
lahf
dec
addr16
mov
cmp
outsl
sub
aad
ret
jl
dec
add
stc
fisubs
gs
push
and
dec
xor
xchg
xor
popa
pop
sarb
dec
cmp
jns
lret
sbb
testl
sbb
jne
jg
sbb
pop
aam
inc
in
jle
gs
fs
add
inc
dec
sub
mov
xorl
mov
mov
push
int
adc
ret
or
jnp
and
ljmp
imul
imul
jnp
stc
fmuls
pop
dec
add
mov
mov
fdecstp
pusha
sbb
push
subl
loopne
adc
push
mov
mov
out
sub
cmc
mov
in
mov
or
aas
push
imul
inc
cmp
xor
loop
sub
sahf
mov
sub
pushf
jge
inc
pop
inc
jmp
stos
mov
sahf
jp
rclb
ss
xchg
stos
push
jo
test
push
outsb
push
call
push
sahf
popf
dec
adc
stos
ds
push
mov
popa
pop
jp
add
xchg
mov
mov
dec
es
push
in
bound
mov
enter
inc
cltd
push
cmpsl
push
mov
push
inc
add
stos
or
push
sahf
popa
mov
into
icebp
lods
lea
xchg
and
fnstsw
out
jmp
lds
jp
jmp
addr16
jae
and
add
aad
sub
mov
cmp
mov
adc
daa
mov
dec
in
mov
mov
inc
sbb
pop
inc
jns
arpl
cmp
and
add
jnp
lds
loope
outsb
inc
dec
jo
fimull
dec
ds
les
lock
std
add
icebp
gs
mov
inc
in
dec
outsl
movsl
mull
je
or
fildll
popa
jg
pop
cmp
ja
les
bound
xchg
xchg
test
scas
or
push
es
adc
call
fcmovb
jbe
cli
out
in
cmp
cmp
pop
push
cmpb
xorl
or
adc
cmp
insl
in
pop
in
inc
mov
iret
and
jb
mov
inc
mov
pop
sbb
mov
push
rorl
dec
and
out
mov
or
sub
xchg
hlt
fsubp
sbb
scas
int
cmp
jbe
sub
dec
ja
bound
lods
lods
jo
decl
push
stc
test
lahf
sub
inc
insl
ljmp
mov
mov
insb
push
mov
mov
add
cmp
clc
xor
jno
xor
sbb
push
outsl
loope
sbb
mov
fsubl
int
out
sbb
add
pushf
push
rclb
dec
mov
cwtl
ljmp
ret
mov
push
mov
add
icebp
les
sub
mov
and
popf
ljmp
rcl
pop
sub
jmp
es
jmp
lret
sub
mov
sub
add
mov
mov
inc
xchg
popa
daa
push
bound
jo
loopne
popf
daa
mov
clc
lret
ror
mov
mov
or
pop
lret
push
test
adc
xor
fimuls
orl
jo
inc
pop
mov
test
jno
dec
xlat
push
js
lods
fsub
roll
mov
push
pop
push
stos
dec
lahf
mov
cs
adc
and
pop
loope
je
int
lods
enter
imul
or
movsl
dec
or
mov
pushf
dec
movb
dec
xorl
stos
test
ljmp
insb
enter
sub
pop
pop
out
mov
dec
loope
add
stos
xchg
popf
inc
int
shl
inc
sbb
push
mov
dec
xor
ret
mov
jmp
pop
pop
cmp
cmp
adc
xchg
movsl
hlt
inc
sbb
sbb
sbb
dec
mov
pop
sbb
fwait
mov
jl
stos
mov
xchg
sbb
cmp
call
sbb
cmp
xchg
mov
fmul
and
push
adc
clc
sti
inc
pop
or
mov
test
mov
sbb
stc
push
pop
int3
jmp
ret
mov
adc
adc
adc
xchg
scas
jb
out
xor
aas
aas
ljmp
sbb
outsb
sbb
push
loope
push
xor
pop
mov
push
adc
leave
rcrb
mov
lea
sub
mov
mov
lock
shl
push
lret
push
movsb
std
cmp
jmp
mov
lock
push
dec
ss
xor
cmp
and
aam
add
sbb
imul
push
lods
dec
xchg
lods
lods
pop
mov
out
dec
ds
rol
je
adc
fiadds
cmp
xchg
add
sub
add
jbe
insl
jl
cwtl
rcrl
push
in
mov
push
cmpsl
ja
xchg
movl
cmp
push
add
shr
sbbl
jae
cli
fldcw
loopne
incb
or
addb
leave
lret
iret
adc
test
mov
ljmp
xchg
mov
mov
mov
movsl
fdivr
sub
call
out
inc
cmp
mov
shrb
dec
add
fbld
jmp
sbb
push
mov
inc
inc
pop
insb
mov
loope
out
arpl
or
bound
inc
loop
lret
divb
and
xchg
sbb
repz
insl
jp
aam
cld
add
xor
inc
xchg
cmp
sbb
add
mov
push
sbb
adc
jle
fcoml
inc
push
cmp
and
cmpsb
movsl
jecxz
pop
jne
xlat
jbe
mov
cs
mov
fwait
dec
add
sub
adc
cmc
mov
mov
dec
call
jl
inc
adcl
rcrb
out
xor
inc
mov
mov
or
xchg
jg
and
sbb
repnz
mov
fs
sub
out
jle
sbb
out
push
inc
enter
inc
pop
push
loope
xor
movsb
das
ja
ds
xchg
add
sub
xchg
call
xor
cmp
fdivrs
call
jb
int3
jbe
shrb
mov
mov
adc
and
test
or
pop
flds
mov
inc
fwait
sub
jnp
cmpsl
mov
mov
in
inc
mov
pop
mov
cmp
jne
aas
pop
mov
sub
cld
adc
jns
std
movsl
gs
inc
xchg
cmp
stos
test
mov
jo
stos
mov
push
scas
add
dec
cwtl
xor
popa
ret
inc
loop
adc
and
jb
xchg
and
adc
popa
ret
inc
loop
adc
and
jb
xchg
and
mov
andl
push
adc
add
push
loope
icebp
jb
xchg
and
adc
popa
ret
inc
loop
adc
and
and
push
add
adc
enter
mov
mov
push
push
xchg
add
xor
add
push
fwait
add
test
dec
cmpb
rcrb
ret
cmp
push
sbb
add
push
sti
loopne
push
testl
mov
dec
stos
jnp
imul
fisttpl
ljmp
call
jge
paddusb
aad
fsub
sub
imul
ds
shll
mov
fidivrs
hlt
xchg
or
ret
mov
mov
adc
xor
and
scas
std
xor
out
das
out
fwait
adc
cli
pop
pop
addb
pusha
insl
pushf
adc
mov
enter
std
inc
bound
pop
mov
movsl
adc
xchg
outsl
push
push
sub
mov
loop
es
xor
jg
or
fwait
adc
mov
stos
jb
jge
jmp
out
xchg
add
sbb
out
clc
enter
mov
add
imul
outsl
sbb
adc
leave
outsb
in
lret
int
and
xchg
fwait
push
fcoms
pop
orb
mov
ret
or
cmp
sub
fistpl
lret
sub
cmp
dec
fwait
pop
mov
jnp
loope
out
xlat
jnp
imul
jg
mov
dec
lahf
fsubs
out
pop
ret
xchg
subb
push
mov
inc
sahf
push
cmpsl
dec
adc
push
mov
cmc
xor
sti
pop
mov
xlat
or
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
bound
mov
mov
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
bound
jmp
lret
outsl
out
in
mov
imul
adc
or
iret
lea
cmp
mov
lahf
test
xor
lret
lea
loopne
icebp
mov
sbb
mov
cmpsb
out
mov
sbb
cltd
dec
lds
in
outsl
je
adc
in
sbb
pushf
test
pusha
es
aas
pop
lret
scas
adc
and
inc
inc
in
test
lea
mov
xchg
insb
hlt
xorl
cvtps2pd
mov
mov
ds
aaa
shlb
cmp
in
adc
leave
shl
and
adc
int
fiaddl
dec
xor
cli
repnz
rcll
repnz
je,pt
jo
inc
jne
cmp
mov
xchg
pop
test
sub
loop
pusha
mov
inc
cmp
and
and
push
xchg
push
orb
aaa
sub
dec
push
fldcw
pop
mov
sub
pop
sbb
lret
inc
sbb
dec
sub
xor
cmpsl
push
or
sbb
xor
mov
add
add
lcall
mov
pop
lahf
xor
daa
mov
insl
scas
stc
gs
arpl
push
xchg
push
popa
popf
fs
jno
idivl
mov
iret
add
xchg
stc
add
mov
pop
mov
cmp
imul
inc
inc
iret
cmpsl
cmpsl
je
data16
pop
sbbb
xor
mov
movl
cltd
jae
repz
loop
ret
rcrb
inc
sbb
adc
lcall
push
mov
daa
fistpl
dec
dec
sub
cmp
jle
stc
or
adc
je
aas
test
or
daa
pop
mov
or
repnz
adc
ret
jp
and
scas
sbb
lret
pop
add
scas
cmp
mov
shl
ret
adc
daa
sarb
xor
push
ror
fwait
movsl
insb
and
mov
and
out
jle
popf
add
daa
cltd
xor
outsl
cmc
sub
mov
pop
fistpll
add
mov
lahf
dec
es
repnz
mov
sahf
adc
test
or
andl
outsl
dec
and
sbb
js
pop
sub
loopne
jo
cmc
out
pop
ret
ret
fidivrs
jbe
sbb
ds
add
adc
mov
rol
pop
xchg
push
movsl
nop
shrb
imul
sub
mov
ss
or
lods
outsl
aam
mov
stos
into
sbb
or
add
iret
mov
push
test
dec
sahf
mov
pop
sar
leave
cmp
nop
cmp
ja
fdivp
xor
add
mov
repnz
fnsave
push
push
push
push
cmpl
imul
notl
scas
fcomip
push
hlt
mov
loope
leave
pop
sub
shrl
sub
ret
push
sbb
lods
rcrb
dec
dec
clc
iret
in
leave
jb
orb
mov
or
push
inc
mov
or
xchg
out
push
push
push
mov
pop
xor
pop
xor
xchg
lret
pop
fildl
pop
sub
pop
stos
sbb
xor
push
mov
add
mov
gs
xchg
xlat
push
sub
lods
repz
and
push
and
xor
aad
faddl
in
call
inc
orl
xchg
lret
sbb
lahf
popf
dec
insl
lret
xor
fcoml
add
pop
inc
imul
mov
lods
sub
cmp
push
in
hlt
sub
sbb
dec
cmpsb
mov
xor
inc
inc
jns
imul
int3
pop
mov
adcl
pop
cli
sub
jmp
or
test
clc
lcall
mov
mov
jge
push
mov
fs
push
mov
push
sub
jnp
test
or
pop
and
pop
inc
jb
mov
pop
ljmp
jge
into
shl
mov
pop
imull
dec
sub
sbb
into
and
aaa
push
jo
sub
push
ss
dec
jge
mov
push
inc
adc
aad
mov
xchg
iret
loop
and
lcall
mov
in
rorl
pop
call
cmp
paddusw
stos
mov
ljmp
aad
leave
xchg
or
add
lods
insb
add
push
or
shll
lahf
sbb
pop
movsl
mov
out
gs
lds
outsb
mov
or
cld
imul
repnz
pop
inc
sub
lea
push
scas
inc
sbb
call
xorb
cmp
insl
jmp
sub
shll
pop
ret
inc
pop
loop
add
add
scas
cs
test
gs
ljmp
loopne
push
mov
inc
sub
jmp
xchg
pop
clc
add
add
or
outsl
xchg
jnp
outsb
jno
pop
mov
faddl
inc
mov
in
arpl
xor
cld
movsl
xchg
sbb
dec
insb
cmpsl
mov
pop
jle
cmp
out
aas
mov
adc
pop
fsubrl
outsb
imul
push
pop
in
pop
adc
xor
in
cmp
add
push
mov
pop
cltd
test
adc
outsl
sub
lret
movsl
lea
sub
arpl
xor
mov
mov
mov
sub
iret
push
mov
xchg
adc
mov
clc
push
add
lahf
fstps
jl
xor
je
cmp
add
insb
repnz
jne
fidivl
xchg
es
xor
shl
aaa
and
pop
pop
adc
insl
adc
xchg
jno
addr16
push
dec
pop
cmp
les
pop
mov
repnz
pop
dec
pop
adc
jmp
mov
jl
sub
dec
movsb
jp
and
ret
xor
scas
fdivl
mov
push
cmpb
inc
insb
mov
imul
jl
rorl
out
pop
lea
sbb
shrb
cmp
int
sub
mulb
int
hlt
lea
mov
xor
arpl
dec
aaa
insb
scas
loope
and
sbb
push
dec
sub
sbb
enter
test
fs
push
add
movsl
pop
mov
dec
sub
pop
cs
adc
popf
cmpsb
out
clc
pop
xchg
dec
daa
jle
or
cmpsl
cld
mov
xchg
sti
jg
lock
push
fwait
ljmp
movsb
pusha
subl
iret
jno
cmp
lahf
mov
mov
into
inc
dec
or
ss
insl
and
je
cli
inc
xchg
paddusb
cld
and
aaa
insl
repz
jmp
nop
pushf
lods
rcrb
xchg
sub
jno
es
mov
popa
adc
and
jg
xor
cltd
mov
pop
lret
pop
lds
cmp
roll
sbb
fdivs
sbb
mov
and
popf
hlt
cli
fisubl
int3
xor
cwtl
sbb
pop
hlt
insl
and
and
sbb
add
adc
xchg
mov
in
jecxz
aam
icebp
adc
arpl
testl
addr16
push
jp
enter
insl
and
pushf
xchg
inc
add
test
sbb
mov
jb
jbe
idivl
or
popa
pop
sti
ret
in
std
cmpsb
pop
imul
sub
stos
imul
loopne
inc
mov
aaa
cmp
jns
sbb
inc
sub
jbe
sub
test
repz
cmp
out
sub
push
shll
push
mov
jl
push
sub
mov
mov
sbb
fwait
lret
cmp
std
negb
gs
dec
lcall
adc
inc
ret
cmp
jae
mov
stc
arpl
loop
in
arpl
xor
lcall
in
dec
repz
int
cwtl
sbb
sbb
mov
adcb
dec
xor
xchg
adc
adc
mov
lret
rcrb
mov
jns
adc
push
in
sbb
or
xchg
cmpsl
pop
dec
lods
jno
cmp
out
je
cmpsl
jne
sub
push
ss
dec
and
test
fldenv
test
in
mov
lcall
fadd
test
int3
dec
loop
jne
loope
movsl
out
add
add
imul
stos
inc
inc
jb
mov
push
iret
loopne
loope
mov
in
sbb
shll
jmp
outsb
shrb
inc
out
and
das
scas
dec
lcall
scas
sub
add
mov
add
jnp
mov
push
pop
in
aas
dec
gs
dec
addr16
adc
in
cmp
and
aas
inc
cmc
or
pop
enter
inc
push
test
xor
andb
ss
cmp
pusha
cmp
addr16
jb
xchg
jg
sahf
sbb
daa
jns
daa
sub
fidivs
adc
clc
xchg
add
pop
rol
pop
int3
xchg
jae
lods
ficompl
es
inc
mov
xor
mov
sbb
loop
test
push
xor
and
mov
aam
pop
xor
jae
mov
lret
inc
push
rcll
into
adcl
je
push
test
lods
nop
les
push
mov
jb
dec
mov
loop
lcall
fnstsw
mov
lahf
or
lea
xor
mov
enter
stc
fs
std
pop
out
adc
mov
sahf
es
jg
inc
cmp
jmp
fwait
lock
mov
push
jecxz
push
das
femms
mov
cwtl
mov
rclb
fstl
xchg
mov
mov
cltd
cmpsl
push
imul
push
pop
sub
push
orl
xor
mov
test
add
testl
daa
mov
mov
in
sub
cs
cmp
mov
je
mov
mov
iret
data16
arpl
mov
mov
and
pusha
imull
popa
mov
sbb
stc
xor
mov
cmp
cmpsb
sarl
cmp
data16
mov
add
push
or
adc
xchg
aam
mov
cwtl
clc
lods
add
ljmp
int3
js
not
adc
mov
cmpsb
pop
sti
mov
push
xchg
jo
mov
jbe
lahf
jmp
add
ss
push
insl
not
sbb
mov
fcom
mov
jnp
repnz
lret
lock
mov
lea
dec
hlt
jo
adcb
insl
cmp
lret
movsl
mov
sbb
mov
movsl
adc
cmp
add
inc
jp
pop
jecxz
lods
fistpl
cmc
dec
int3
fistpll
push
aad
ffreep
popa
and
stos
cmp
insb
push
xchg
fsubp
out
pop
fstps
pop
jns
mov
dec
pop
loope
daa
imul
rclb
sbb
movzwl
ljmp
aaa
dec
pop
cmp
iret
fadds
sub
sub
pop
addr16
pop
jl
lods
sbbl
enter
push
and
mov
pop
sbb
cmc
jb
mov
out
sub
dec
ss
repz
sub
jns
pop
or
fscale
jb
scas
sub
movzbl
jnp
roll
pop
rcr
dec
jecxz
inc
inc
imul
popa
imul
scas
sbb
je
and
cmpsb
insl
cmp
fistpll
and
es
push
stos
dec
mov
std
ljmp
roll
bound
addr16
sbb
int3
push
add
sub
pushf
ss
push
xor
push
cmp
or
sub
push
mov
ret
leave
repz
cmpsl
mov
test
dec
xchg
popa
inc
sbb
cli
sub
inc
das
mov
in
in
daa
sub
rclb
pusha
cltd
or
popf
push
in
pop
fisubrs
arpl
aam
popf
and
push
sub
sub
out
jo
sarb
rcrl
jmp
sub
stos
pusha
inc
mov
adc
iret
mov
pop
push
sarl
mov
imul
pusha
inc
sbb
and
mov
sub
cmp
ljmp
xor
inc
and
lahf
cld
lea
mov
inc
lods
xchg
mov
and
xor
mov
out
aam
mov
lock
sub
js
sub
imul
sub
mov
cmp
add
mov
nop
aaa
push
sub
lds
and
cwtl
xchg
clc
cli
jnp
daa
push
and
decl
addr16
add
cli
add
fistps
jns
pop
leave
xor
test
or
dec
ret
sbb
fcmove
mov
sub
popa
and
shrl
in
lret
jne
mov
inc
test
in
pop
sti
int3
push
loope
jns
add
mov
jno
lods
jmp
or
jmp
testb
inc
stos
lds
mov
push
pop
mov
add
fsubr
xor
push
cltd
out
cmp
inc
mov
and
ret
rorl
cs
scas
add
popf
jo
jae
mov
mov
lea
jge
cs
out
mov
or
xchg
push
repnz
xlat
inc
js
jle
insb
inc
int3
sbb
hlt
js
xor
out
fs
std
scas
into
cld
ljmp
mov
lret
inc
in
mov
lods
and
sbb
popf
int3
jl
outsl
push
inc
jg
aaa
xchg
in
in
cmp
jg
jo
inc
add
adc
inc
push
stos
leave
loop
lcall
adc
aas
and
jg
add
adc
idivl
nop
jmp
pusha
push
pushf
rcrb
and
jecxz
adc
into
xlat
cwtl
jge
push
loop
mov
addr16
insb
xchg
ror
negb
xor
inc
dec
pop
aas
leave
jl
jmp
mov
movd
mov
sbb
ja
pop
jmp
jmp
adc
hlt
mov
popa
loopne
jae
int3
nop
js
pop
pop
pop
inc
mov
popa
push
pop
jg
int3
push
cmp
mov
mov
scas
sti
ficomps
xor
adc
add
testl
pop
xor
inc
push
or
sti
sub
sti
ss
lds
pop
push
push
xchg
test
xchg
out
fdivrs
fimuls
enter
scas
aam
mov
sbb
add
xor
jmp
or
aad
icebp
scas
push
pop
jb
addr16
movsl
or
dec
sbb
std
cmp
mov
ss
jecxz
addr16
fsubs
stos
aas
stos
xchg
push
dec
mov
pop
aas
loop
add
in
lret
imul
std
imul
nop
push
push
fnstenv
dec
add
adc
xchg
sbb
pop
lret
jb
es
mov
cld
sbb
or
aad
add
addb
sbb
imul
adc
divl
int3
push
fisubrl
mov
and
pop
sbb
add
sub
ljmp
in
inc
sbbb
popf
out
mov
sub
inc
or
rclb
in
jl
mov
mov
mov
test
add
sub
dec
cmp
push
ret
movsl
icebp
into
and
mov
push
mov
call
sti
xor
and
imul
mov
or
cmp
mov
lock
das
call
mov
in
push
rcrb
cld
mov
mov
jne
inc
mov
mov
mov
cli
inc
push
inc
adc
mov
loope
ret
mov
loop
xor
call
lret
dec
add
clc
sbb
and
vandps
pop
xorl
add
cmpsl
push
insl
mov
mov
xchg
lcall
pop
jnp
lea
call
aad
mov
enter
rclb
jmp
test
iret
faddp
xchg
out
add
cmpsl
movsl
stos
mov
add
lock
cli
sahf
jp
cmp
in
lds
ficompl
sbb
inc
xor
push
lods
sti
shrb
popa
outsb
adc
adc
pop
and
in
lock
fisubs
dec
icebp
stc
xor
dec
adc
stos
jle
mov
mov
adc
cmc
or
fucomi
and
mov
sub
hlt
or
outsl
lock
ljmp
fstl
push
cmp
sub
and
int
lret
stos
inc
inc
in
sub
shll
aaa
lret
aad
mov
mov
cmp
lret
std
push
xchg
psubq
xor
add
adc
test
test
pop
cmpsl
adc
sar
test
shrb
push
xor
inc
stos
inc
dec
add
clc
cmp
and
int3
cmp
outsb
adc
xchg
daa
lret
ljmp
popa
iret
and
xchg
nop
and
dec
mov
or
lea
mov
testl
mov
push
frstor
ss
fsubrp
imul
sub
scas
dec
add
xchg
testb
fistpl
pop
mul
or
inc
fimull
je
shlb
sahf
jl
loope
mul
sbb
cwtl
xchg
inc
add
inc
mov
icebp
adc
nop
outsl
pop
je
insb
daa
cltd
leave
pusha
fimull
adc
xor
les
loope
xchg
stc
xchg
shr
jg
jmp
arpl
pop
or
mull
int3
dec
imul
in
pop
mov
sbb
cld
in
popf
popa
jae
push
cmp
jbe
push
icebp
test
das
push
enter
lock
leave
adc
xor
lock
outsl
nop
push
call
or
sti
pop
pop
mov
test
pushw
call
sbb
out
xchg
adc
popa
mov
jmp
jne
iret
mov
fsubs
push
hlt
xlat
xchg
ja
cld
test
sbb
cmp
mov
dec
push
jp
add
fisttpl
stos
sub
or
gs
xchg
fldenv
iret
iret
stos
pushf
sub
jg
test
rcrb
cmpsl
and
rolb
cmp
or
and
mov
data16
stos
rorl
shll
out
cld
scas
loop
or
push
loope
xor
inc
sub
jae
and
les
scas
xchg
rclb
jno
scas
xor
les
in
in
add
mov
xchg
dec
mov
pop
xor
or
in
xor
xchg
incb
bound
jno
pop
lret
loop
cmc
mov
in
xchg
xor
jp
jp
xor
mov
cmpsw
and
sub
dec
xchg
dec
ret
mov
push
stc
jl
pop
or
fwait
rorl
cltd
arpl
aas
xlat
std
xor
dec
lcall
mov
mov
and
xchg
ds
fstl
sub
sbb
shrl
fisubs
mov
aas
push
jmp
in
loop
pop
inc
adc
and
insb
and
sbb
inc
xlat
or
inc
sbb
data16
pop
cli
mov
xor
subb
rcpps
nop
sub
popf
iret
int3
je
mov
xor
mov
dec
out
jb
xorb
and
cmp
cmp
arpl
loopne
repz
push
popa
sbb
les
xor
mov
pusha
adc
mov
sbb
pop
movsl
cltd
pop
fisttps
pop
fcmovnb
test
pop
mov
out
enter
test
lods
cs
mov
mov
inc
faddl
push
jecxz
popf
imul
xchg
jmp
mov
out
pop
cli
enter
rcrb
and
xor
jle
mov
xor
lret
jg
mov
rcrl
insl
out
adc
dec
movsl
mov
movsb
lock
div
jns
rcrb
xor
mov
mov
aad
pop
mov
push
aam
ds
dec
and
xor
fisttpll
adc
dec
hlt
jne
dec
lods
pusha
sarl
scas
clc
mov
rorl
shlb
pop
pop
and
and
repz
aam
arpl
nop
out
rcrl
pop
cmpl
mov
add
cli
cmpl
mov
sub
roll
and
push
and
xlat
addr16
scas
push
cmp
sbb
pop
fistl
scas
and
clc
sbb
inc
sub
adc
cmp
es
loop
adc
dec
mov
and
xchg
inc
cmp
mov
clc
sbb
shll
xchg
dec
pop
fsts
push
in
sti
xchg
or
xor
pop
lock
jecxz
mov
fstp
and
repz
xlat
xchg
iret
inc
loopne
sub
jecxz
dec
push
cmp
test
jecxz
mov
in
dec
sti
inc
push
pop
jnp
imul
ret
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
bound
mov
mov
or
cmp
sub
fildl
lret
xor
and
push
fwait
inc
mov
bound
mov
mov
or
cmp
sub
fildl
lret
ss
and
push
fwait
inc
mov
push
stos
cmpsb
pop
mov
test
imul
ret
cmp
in
popa
cwtl
sti
and
inc
popf
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
xchg
lret
ss
push
pop
cs
add
add
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
js
jl
pop
add
add
add
jo
js
pusha
add
add
add
push
add
jge
mov
dec
add
add
sbb
inc
add
add
add
add
dec
add
xor
leave
add
add
rolb
adc
add
aas
add
add
add
add
scas
add
add
add
add
add
add
sub
repz
inc
add
add
add
add
add
add
sbb
adc
sub
mov
jp
sbb
add
scas
add
add
add
adc
and
push
add
add
add
add
add
or
loopne
push
add
add
add
das
add
add
add
or
jge
jl
sahf
add
add
roll
add
scas
add
add
add
add
add
sub
adc
add
add
dec
add
add
add
add
sub
add
sbb
jge
mov
dec
add
add
dec
add
add
add
add
add
add
xor
cltd
add
add
lret
add
dec
add
add
add
add
add
add
add
add
addr16
add
add
add
add
add
add
add
or
add
add
add
add
pop
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
sub
out
jo
add
jge
dec
add
add
jge
dec
add
add
add
add
add
add
push
add
mov
filds
roll
push
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
lret
add
add
add
add
or
das
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
jl
dec
add
add
inc
add
fldl
faddl
sahf
add
add
mov
add
add
repz
add
sub
pop
add
add
add
add
add
cs
add
add
add
add
add
add
and
push
add
add
cmp
mov
stos
add
and
das
add
add
add
add
mov
movsl
add
add
add
sahf
add
add
add
mov
add
add
add
test
add
push
add
dec
add
das
add
or
mov
add
add
lea
add
ss
add
add
add
add
add
add
inc
add
add
add
jecxz
faddl
roll
mov
add
add
insb
add
add
add
add
add
add
mov
lret
add
add
sbb
cs
adc
cwtl
lods
shlb
fsubs
pop
aad
inc
out
cs
shlb
andl
aaa
scas
test
mov
fnstenv
and
imul
push
imulb
dec
ret
sti
ljmp
sbb
sbb
out
mov
adc
mov
sti
push
icebp
add
mov
sti
adc
mov
rclb
addb
test
popf
pop
mov
adc
vmread
and
cs
fisubs
jnp
jmp
cld
ljmp
cmp
jbe,pn
push
je
push
test
xchg
cli
xchg
sbb
xchg
jecxz
popa
ficoml
or
dec
scas
push
scas
movsb
mov
es
dec
inc
xchg
addr16
jmp
mov
test
in
sub
sub
inc
xchg
outsl
add
jae
xchg
jle
xchg
clc
das
sbb
cmpsl
aas
or
ret
xor
xchg
pop
int3
and
xchg
push
mov
xor
iret
fnsave
out
push
flds
rclb
inc
mulb
add
sahf
rorl
xchg
call
rolb
insl
mov
inc
push
pop
std
mov
or
push
push
ret
xchg
pushf
push
xor
mov
dec
xor
or
scas
adc
inc
sub
cmp
xor
add
pushf
push
add
scas
push
adc
pop
dec
arpl
mov
test
mov
mov
xchg
sahf
sub
pop
sub
adc
clc
int
xchg
mov
fucomp
push
add
nop
mov
jmp
aad
sbb
add
ror
add
mov
pop
xchg
xchg
test
lahf
mov
lcall
adc
mov
jge
dec
push
stc
fdivs
mov
stc
sahf
cmp
lret
outsl
jnp
cmpsl
mov
sbb
xchg
sahf
mov
int
inc
xor
adc
add
mov
jb
push
lret
pop
xchg
sub
dec
add
pop
in
fucomp
push
xchg
in
jle
pop
cmp
xchg
jnp
aad
dec
iret
sbb
dec
and
xchg
and
clc
enter
xchg
mov
stos
and
in
inc
test
test
loopne
mov
cmp
fwait
sbb
out
movsl
and
and
lret
in
mov
cmp
insb
jnp
lds
dec
sub
neg
dec
jle
and
xchg
enter
ja
cmpsl
adc
addr16
clc
xchg
mov
xchg
cli
aaa
jns
push
xchg
mov
ljmp
pop
stc
arpl
lods
pop
or
aam
sbbb
xchg
mov
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
