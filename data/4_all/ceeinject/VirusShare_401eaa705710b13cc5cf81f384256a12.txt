call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xlat
dec
xor
aam
mov
ret
dec
xor
das
cmp
sub
pop
jae
arpl
push
xchg
mov
mov
lret
shr
ret
dec
xor
and
sub
pop
adc
mov
push
push
inc
stos
or
lret
sti
lret
adc
sbb
sbb
add
push
or
fisttpll
push
sbb
cmp
dec
jmp
test
pop
mov
pop
aas
scas
pop
sbb
sbb
jg
js
sbb
sahf
mov
lret
lds
roll
neg
ss
push
out
lret
and
int3
sub
push
movsl
mov
das
pop
mov
jecxz
scas
aam
movsl
arpl
arpl
jecxz
mov
fcmovnbe
xor
cmp
arpl
sub
aad
xlat
and
outsl
fsts
inc
inc
insb
push
and
andl
lds
add
push
pop
mov
inc
xchg
cmovs
xor
jg
adc
xor
aaa
cmp
sub
fbld
dec
push
aas
lods
jp
test
add
mov
cli
lret
call
or
cmp
je
push
push
daa
call
xchg
les
jmp
pop
dec
pop
push
dec
insb
xor
and
push
push
sub
mov
mov
stos
rcll
dec
dec
inc
pop
addr16
inc
sub
das
or
aas
sub
call
bnd
lahf
lahf
lret
shr
ret
sbb
or
cmp
sub
pop
jae
arpl
push
lcall
sbb
lret
shr
ret
sbb
or
cmp
sub
pop
jae
arpl
push
lcall
nop
xchg
into
movsl
xchg
movsl
mov
bswap
or
dec
adc
cmp
or
lahf
dec
sbb
push
lcall
xchg
jge
sbb
pusha
push
ljmp
pusha
and
push
push
dec
fyl2x
mov
and
jbe
add
cmpsb
leave
repz
arpl
popa
mov
addl
sub
and
test
dec
cmp
lods
add
cmpsb
fmull
andl
push
hlt
xchg
inc
sbb
enter
sbb
lret
sti
xor
push
push
jno
sarl
xlat
loopne
push
les
fld
out
lret
cs
inc
daa
test
or
pop
popa
insl
push
sti
jmp
iret
stos
adc
add
jae
es
test
adcb
stc
cmc
lds
xor
rolb
stc
ret
xchg
dec
in
mov
iret
les
jp
aas
or
test
add
push
ret
into
jb
and
push
mov
push
pop
xchg
fs
push
stos
je
sub
and
hlt
jp
push
mov
jecxz
loop
aad
dec
inc
dec
loop
sub
xor
xchg
xchg
in
out
fs
clc
lock
lahf
adcb
inc
mov
std
mov
mov
lods
or
rorl
xchg
lods
sub
or
cwtl
xor
mov
jle,pt
scas
add
aad
jl
dec
jmp
xlat
ret
mov
push
jmp
mov
loop
add
xlat
push
pop
imul
mov
mov
js
fs
ror
inc
cwtl
and
sub
std
jno
mov
insb
mov
decl
cmp
aas
mov
into
je
movsb
mov
hlt
sbb
insb
dec
lahf
sub
pop
cli
push
cmpl
sbb
sahf
inc
mov
jns
addr16
rorb
shr
add
jae
cmp
es
sbb
push
and
scas
mov
sahf
inc
mov
pop
push
cli
push
fs
pop
push
mov
xchg
stos
add
sub
push
dec
sub
push
pushf
in
scas
lcall
leave
sub
fldenv
add
or
dec
or
adc
xchg
xor
test
adc
bound
mov
test
xchg
push
js
push
cmpl
cmp
push
dec
add
pop
add
fsubrp
fs
pusha
cmp
ficompl
mov
push
and
push
loop
outsl
aad
jp
and
jmp
pop
enter
shlb
loopne
adc
xchg
sub
xchg
gs
pop
jmp
lret
xchg
inc
pushf
and
insb
sbbl
out
pop
leave
push
and
inc
sbb
mov
push
bound
fdiv
and
xchg
mov
enter
inc
lds
jns
adc
lret
cmp
mov
or
push
fnstsw
and
or
cli
test
mov
mov
jae
fisubl
sub
sub
aaa
xchg
rol
dec
inc
not
loop
or
popf
xlat
mov
adc
repz
out
fcoms
jnp
add
sub
sub
xchg
sbb
rorl
jns
inc
pusha
mov
aaa
add
pop
jno
push
decb
fimull
outsb
mov
shl
out
lds
enter
pop
popa
add
pop
in
lcall
mov
sub
pushf
insl
jnp
inc
push
aaa
push
iret
dec
cld
cmp
ljmp
dec
dec
xchg
imul
loopne
dec
dec
aad
or
sub
imul
inc
in
xor
and
cmp
pop
lret
popa
lea
inc
test
or
jns
xor
jnp
dec
lds
int
aaa
es
add
push
pop
jp
sbb
add
aam
insb
push
daa
aaa
lahf
popa
sahf
mov
mov
adc
inc
testl
jmp
mov
imul
mov
fimull
rcll
inc
push
xchg
nop
lcall
cmp
ret
call
jno
add
mov
leave
repz
mov
xor
negb
cli
mov
fisubl
dec
out
into
xchg
or
adcb
enter
shr
inc
adc
and
insl
nop
jge
mov
popf
imul
scas
cmpsl
cmpsl
jo
mov
fdivs
jae
xor
aad
xchg
jecxz
roll
sbb
stos
jp
xorb
lds
mov
outsl
ja
lds
je
jl
mov
divl
stc
sbbl
sahf
and
aaa
mov
add
adc
ds
aad
call
lcall
lret
cmpsl
das
adc
js
imul
xor
add
ss
fiaddl
mov
mov
negb
add
jp
jo
jns,pt
push
push
inc
mov
repz
inc
mov
push
pop
xor
ret
cmpsl
xchg
pop
mov
adcb
daa
sbb
pop
push
ljmp
mov
push
pop
jmp
sahf
cltd
lahf
adc
or
pop
or
mov
orl
mov
push
lods
xor
paddd
push
call
stc
xchg
or
lea
aad
out
setge
in
lcall
test
jne
dec
test
mov
das
fadds
into
loope
jae
dec
inc
push
lahf
sub
mov
lahf
push
ss
mov
cmpsb
dec
sbb
fsubrp
lcall
mov
out
in
gs
xlat
xor
jle
or
jb
outsl
xor
sub
mov
subb
test
ret
dec
rorl
push
mov
mov
cmp
dec
imul
jge
and
add
push
xor
jmp
lcall
fisubrs
push
ds
inc
add
in
pop
cmpsb
sub
sti
pushf
mov
add
xchg
xlat
xchg
lods
scas
adc
jbe
pop
mov
inc
call
dec
dec
mov
add
sti
mov
das
ret
aam
sbb
mov
mov
xchg
inc
rorb
out
and
push
mulb
ja
lahf
lahf
add
jnp
aaa
add
enter
roll
add
jge
imull
stos
fldt
scas
repnz
cwtl
out
push
out
mov
mov
std
in
mov
xchg
jns
cli
and
mov
sub
sub
push
enter
lret
push
int
push
popa
jae
test
out
sti
lea
jg
sbb
mov
mov
push
fwait
test
pop
pop
jmp
pop
subb
cli
lds
inc
cmp
adc
dec
pop
sbb
loop
dec
push
mov
inc
or
pop
int3
pop
xor
xor
test
jae
xchg
mov
cli
sbb
dec
push
iret
fnstcw
notb
adc
je
daa
cli
aam
into
js
xchg
cmp
fisttps
sbb
sub
xor
pushf
inc
insb
nop
iret
pop
and
xor
ljmp
jne
push
outsb
outsl
mov
or
cmovbe
cmp
ja
mov
out
push
data16
xor
sbb
xchg
scas
adc
icebp
js
pop
mov
insb
movsb
mov
jnp
inc
sbb
lds
add
mov
pushf
and
lcall
xchg
mov
mov
lods
and
and
pop
lods
xor
xchg
sub
cld
sbb
mov
adcb
insb
add
push
je
jns
data16
cwtl
mov
pop
insl
xor
pop
jecxz
addr16
stc
mov
fimull
adc
cmc
in
test
add
ljmp
inc
cmc
movsl
insl
sbb
mov
popa
mov
mov
call
and
lock
icebp
push
inc
shll
aam
sbb
inc
mov
mov
cltd
lret
movsl
or
js
cmp
addr16
mov
cltd
xor
pop
icebp
outsb
ljmp
in
jnp
dec
sub
add
out
mov
rorb
inc
pop
sub
mov
pop
sub
sub
mov
jne
imul
inc
mov
cmp
jne
xor
daa
fs
mov
pop
xor
inc
xor
mov
pop
aaa
cmp
roll
sbb
clc
inc
and
add
imul
and
mov
cwtl
addr16
and
add
mov
sub
mov
cltd
jg
lods
adc
sub
or
mov
lods
inc
dec
inc
add
test
stos
xchg
test
ret
cmp
mov
enter
cmp
popa
xchg
sti
lock
ljmp
in
xorl
sahf
pop
cld
sbb
push
call
pop
jns
imul
sbb
add
jmp
jae
jnp
outsl
sbb
popf
sbb
ja
fs
or
lds
pusha
ja
lret
insl
mov
arpl
lea
mov
in
add
mov
stos
mov
jae
test
push
xchg
pop
push
push
mov
jmp
imul
cmp
pop
cmovs
je
into
jns
fldenv
aas
outsb
aad
pop
scas
mov
scas
loope
leave
add
cmpb
pop
push
xor
out
mov
sbb
std
push
subl
or
aad
cld
loopne
pushf
pop
dec
cs
sbb
cmp
mov
rorl
mov
cs
aad
or
das
push
adc
cmp
push
cmpsb
add
mov
fmull
inc
jne
pop
push
pop
fists
movsl
movsl
add
jnp
pusha
mov
lahf
lock
sti
movsb
pop
adcl
divb
jl
dec
sarb
or
pushf
mov
push
xchg
icebp
xchg
inc
ficoms
cmpsb
inc
adc
movsl
mov
xlat
in
lcall
movsb
pusha
xor
call
adc
sahf
jae
mov
loopne
lods
sbb
xor
fstpl
sbb
and
roll
push
push
sub
or
fsubp
or
jmp
movsl
mov
icebp
mov
push
adc
lea
jnp
sbb
in
push
popf
mov
test
jg
or
adc
inc
and
sti
sub
push
repz
mov
push
sti
les
pop
mov
ja
and
jae
bound
or
adc
pop
and
xor
pop
clc
in
xor
fs
cmpsl
rcll
std
popf
lds
inc
fmul
outsb
ljmp
in
fdivl
mov
in
inc
mov
dec
add
cmpsb
jmp
sub
push
cmp
or
data16
insb
or
sub
mov
xor
iret
ja
shl
fwait
popf
fsts
or
in
test
lods
scas
cmp
ror
ljmp
cmp
dec
sbb
test
cmp
imul
rcrb
ret
aaa
ret
inc
cltd
mov
push
mov
and
gs
dec
mov
jle
mov
sti
adc
rcll
lods
test
and
ljmp
and
cmp
mov
jmp
and
xlat
push
ds
and
insl
pop
hlt
add
roll
xchg
push
je
push
cmp
inc
adc
jle
cmp
pop
and
xchg
cld
jle
ret
and
insl
cltd
stos
dec
loopne
xorb
jmp
in
pop
dec
mov
arpl
addr16
imul
fimull
test
iret
sahf
xchg
cmp
test
aad
pop
jge
push
xchg
push
jo
inc
jle
fiaddl
xchg
pop
xor
call
sti
adc
clc
int
pop
popa
lcall
data16
jg
jne
push
ficoml
ret
mov
das
xchg
mov
movsb
out
mov
pop
fdivrp
mov
dec
ja
movsl
in
dec
stc
adcb
adc
mov
mov
rep
daa
sahf
cmp
and
repnz
mov
sub
xor
ret
xlat
lret
inc
ret
cli
jno
inc
xor
popa
push
fistps
dec
out
xchg
mov
iret
or
xchg
and
scas
lods
jle
icebp
icebp
stc
cmp
scas
test
push
adc
enter
cld
mov
mov
pop
daa
scas
dec
jg
push
mov
xchg
ljmp
mov
jno
cwtl
enter
test
xor
subb
loop
lods
into
std
push
sub
out
popf
ljmp
push
lret
in
loop
sub
data16
mov
jp
sahf
clc
lea
movsb
sub
adc
cmc
iret
test
jl
ds
dec
out
pop
in
mov
dec
push
push
pushf
sbb
in
cmpsb
mov
jl
inc
push
pop
fxch
jo
outsl
xchg
xchg
xor
push
push
sbb
pop
fstps
lret
pop
mov
repz
push
repnz
sti
cli
or
jnp
add
or
addb
hlt
ficompl
je
dec
sbb
mov
push
pushf
loopne
jne
test
cmp
les
jb
or
xchg
sbbl
clc
negb
xchg
pop
sarl
sbb
mov
xchg
xlat
jbe
inc
push
popa
sahf
test
aas
or
pop
out
imul
mov
pop
mov
mov
push
jle
aad
cmp
aam
ja
pop
pop
mov
rclb
adc
dec
iret
pop
std
jecxz
mov
mov
lahf
xchg
sub
inc
mov
pushf
int3
push
mov
lret
jae
test
mov
fldl
inc
rol
push
mov
cltd
push
add
dec
dec
add
push
sub
dec
roll
sbb
dec
push
pop
jae
or
insb
mov
lcall
push
in
pushf
inc
pop
push
jle
jmp
pop
sbb
sbb
mov
cmp
xchg
xor
scas
imul
cli
divb
fcmovu
dec
movsl
push
mov
lret
dec
cmp
xor
test
negb
mov
push
insb
xchg
jecxz
jns
dec
rcrl
pushf
xor
push
fsubs
cmp
jmp
dec
jmp
inc
rcrb
mov
xor
insl
mov
mov
xor
stos
test
xor
lods
addr16
xchg
movsb
and
ficomps
pop
imul
adc
inc
dec
mov
pop
fisttpll
push
fsubs
push
imul
sti
adc
clc
sub
in
xor
adc
shlb
daa
or
jae
adc
and
aaa
xor
xchg
dec
mov
jns
and
adc
shrb
gs
aam
dec
pop
fdivs
xor
xchg
jg
lret
jns
adc
js
mov
mov
mov
sbb
icebp
testb
xchg
dec
xor
pushf
mov
outsl
xchg
xchg
pop
add
push
repz
daa
mov
mov
or
dec
mov
insb
dec
shlb
ret
cmpsl
iret
mov
xchg
jl
into
pushl
fldl
into
jecxz
jne
jg
insb
loop
inc
imul
xchg
ljmp
dec
xlat
pop
hlt
jno
mov
imul
cs
adc
fcmove
cmp
mov
cltd
imul
lgs
and
ljmp
jne
and
int3
xchg
cld
test
xor
pop
jg
stos
testb
iret
ja
or
inc
jo,pt
push
pop
out
or
pushf
jae
sbb
rclb
shll
aad
ds
cmp
sahf
std
loop
leave
pop
cmp
mov
lret
cmc
les
lds
fcoml
cld
jmp
lods
rclb
and
dec
and
sbb
mov
stos
sbb
stos
push
mov
or
repz
sub
repz
xor
hlt
mov
and
lcall
movd
inc
iret
addr16
pop
jg
aaa
sahf
and
ret
sub
cmp
mov
ss
inc
out
std
mov
pextrw
scas
push
lea
mov
push
lret
add
scas
xchg
xor
adc
cmp
dec
clc
clc
dec
add
stos
movsl
mov
rol
jl
xlat
addl
or
xlat
mov
dec
inc
jp
mov
push
shlb
mov
pop
pop
aad
out
inc
mov
mov
sub
fisubrl
inc
mov
js
mov
push
leave
cmc
mov
jb
in
hlt
inc
int
mov
mov
jmp
xor
add
pop
pushf
js
dec
in
sub
cld
push
inc
loope
mov
inc
popf
jecxz
dec
imul
int3
cld
fwait
mov
addb
dec
cmp
jle
out
cmpsb
sbb
adc
dec
add
es
push
push
js
movsl
sub
inc
push
adc
rcrl
stos
fchs
and
sbb
les
adc
sbb
push
jl
xchg
or
movb
push
mov
mov
pop
addr16
or
jbe
dec
test
out
sbb
xor
cld
or
imul
cmp
jg
loope
mov
aaa
cmp
or
lret
jno
ja
fsubl
daa
jbe
ds
sbb
pop
pushf
loope
loopne
xor
inc
scas
or
repnz
jp
or
fdivs
pop
jp
ja
mov
loop
mov
xor
push
faddl
or
mov
loop
fwait
pop
jmp
pushf
add
xchg
lret
and
sar
fmull
xchg
sti
inc
and
outsb
and
sti
cld
mov
adc
pop
sub
dec
lods
mov
push
mov
scas
lods
lahf
pop
jbe
sub
add
jge
sbb
call
test
pop
dec
inc
js
cmpsl
jns
pop
das
mov
movsb
mov
popf
adc
fisubrl
push
lea
pop
sbb
xchg
shrl
aaa
cmpsb
jo
pop
add
adc
test
sbb
xchg
adc
in
inc
cmp
or
dec
not
jb
nop
insb
das
mov
push
mov
icebp
ss
fsubrs
inc
mov
mov
inc
xchg
cwtl
ret
mov
loop
xchg
out
jnp
out
jns
in
sahf
imul
mov
jbe
cli
lahf
add
push
js
lret
pop
or
xchg
adc
fildll
aad
in
cmp
adc
aaa
adc
ds
mov
jnp
lods
clc
jne
out
xor
das
pop
or
jle
in
adc
movsl
jne
jecxz
out
ficomps
js
movsb
sub
inc
adc
mov
ljmp
mov
fucomi
jne
mov
arpl
inc
and
mov
inc
fcmovbe
addb
or
fld1
cmp
inc
ljmp
lahf
and
adc
push
les
and
mov
jecxz
mov
gs
movsb
mov
lea
pop
sub
ljmp
lret
and
mov
dec
jg
xor
aaa
xor
fstpl
sahf
sbb
push
lds
sti
add
adc
dec
lahf
cs
pop
mov
popf
mov
cmovns
pusha
fcmovb
mov
ds
jmp
das
fs
fs
sbb
ss
iret
mov
ret
mov
inc
test
rcr
jo
pop
cmpsl
mov
fistps
arpl
xchg
mov
push
add
icebp
orl
fcmovnb
les
xchg
das
es
push
test
repz
arpl
dec
adc
pop
iret
pop
xchg
xchg
cmpsl
lret
and
fs
push
sub
mov
cmp
out
mov
lea
outsb
xchg
pop
cmpsb
push
jnp
mov
inc
and
int
stos
je
inc
movsl
jne
shufps
mov
or
sub
mov
iret
cmp
andl
pop
das
mov
jl
cmpb
xor
cwtl
push
loopne
inc
and
add
inc
popf
call
std
jae
les
loope
mov
cwtl
movsl
jg
sahf
notb
sbb
outsb
and
xor
xor
push
pop
std
loop
sti
in
push
popa
sar
movsb
rclb
mov
xchg
minps
xor
jne
or
or
add
push
loope
mov
mov
xor
arpl
pop
push
mov
lahf
ljmp
sahf
insl
mov
jno
dec
mov
ds
cmp
outsb
mov
jge
ds
pop
hlt
jbe
adc
test
xchg
movl
fimuls
das
push
jmp
or
add
cmp
je
jmp
push
jmp
sbb
inc
add
hlt
jg
or
and
mov
shrb
call
sbb
and
dec
dec
push
insb
adc
loop
js
sbb
mov
lret
das
or
loopne
push
mov
add
pushf
in
les
mov
sbb
add
imul
mov
lret
shr
ret
sbb
or
cmp
sub
pop
jae
arpl
push
lcall
sbb
lret
shr
ret
sbb
or
cmp
sub
pop
jae
arpl
push
lcall
sbb
into
jecxz
shr
ret
push
xor
and
adc
add
push
arpl
pop
inc
xorb
sbb
cli
shrl
sbb
cmc
mov
sti
ret
lods
xchg
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
xor
inc
xchg
pop
ror
and
mov
xor
inc
jecxz
addr16
dec
xorb
inc
loop
repnz
jae
andl
xor
add
jb
inc
repz
mov
sub
pop
loop
bnd
jae
out
mov
lret
jb
adc
daa
scas
push
insl
mov
pop
jle
and
xor
mov
inc
xchg
stos
out
negl
mov
sbb
or
jne
out
add
cmp
stc
jecxz
or
std
mov
fs
jne
decb
lds
aad
xchg
int3
mov
mov
shll
inc
sub
jnp
movb
loop
sub
adcb
daa
daa
cld
dec
in
cmp
shll
loop
repz
aas
push
dec
add
mov
cmp
adc
mov
stos
shll
sbb
add
daa
mov
or
mov
or
mov
xchg
and
push
inc
adc
addb
mov
xor
arpl
aad
inc
and
xor
add
jb
inc
repz
iret
popa
popa
push
les
sub
cmp
mov
insb
jl
bsr
mov
xchg
aaa
dec
jecxz
clc
push
adcb
xchg
fcoml
rcrl
lret
jle
or
mov
outsl
bnd
inc
mulb
adc
jae
andl
xor
jb
inc
repz
add
xor
arpl
jae
andl
xor
jb
inc
repz
add
repz
mov
mov
lods
ljmp
push
pop
dec
aaa
and
mov
mov
daa
divb
fsubr
pop
decl
and
inc
dec
inc
mov
sbb
iret
add
cwtl
stc
adc
shl
inc
test
pop
repnz
in
cwtl
ja
jmp
jg
data16
andb
cmpb
movl
mov
push
adc
je
in
push
or
test
filds
or
add
pop
es
mov
dec
jmp
adc
outsl
cmp
mov
xor
and
xlat
pop
mov
sbb
call
jnp
scas
fs
push
cli
mov
push
push
fidivrl
xchg
push
jae
add
std
cmp
loope
mov
dec
scas
or
movsl
adc
lcall
mov
cmp
push
outsb
test
fdivs
scas
sbb
pop
fiaddl
jecxz
shrl
or
inc
sub
xchg
lods
ds
movsl
insb
pop
mov
and
fidivrl
dec
inc
ljmp
outsl
pop
inc
mov
lods
call
cmp
fwait
pop
test
mov
pop
xor
mov
pop
mov
shlb
enter
popa
into
rorl
rorb
lods
inc
jo
neg
pushf
out
sbb
sub
ret
out
lods
xor
lcall
inc
mov
or
sbb
sub
pop
ds
mov
or
xchg
pop
push
mov
xchg
inc
imulb
sub
xchg
ficoms
xorb
adc
cmpsl
sub
ljmp
inc
test
sbb
pop
stos
int
out
xchg
out
ljmp
sub
mov
or
lea
mov
in
pop
jmp
or
push
pop
popa
push
and
sub
pop
mov
mov
aaa
mov
sbb
pop
mov
ja
in
outsl
imul
xchg
je
jmp
xchg
test
adc
push
sti
mov
fsubrl
pushf
mov
mov
xor
pop
mov
repnz
mov
mov
lock
cmc
icebp
dec
aas
sbb
lods
cmp
adc
jecxz
aad
xor
movsl
mov
stos
in
nop
dec
ds
out
cmpsl
mov
mov
pop
mov
fnstenv
repz
mov
jnp
shll
dec
jl
add
jae
jns
popf
loopne
cmp
jne
jo
mov
adcl
sbb
mov
xor
fdivrs
push
and
xor
mov
mov
ret
aad
ds
pop
pop
cmp
in
mov
cmpsb
adc
scas
in
outsb
add
repz
jb
adcl
mov
aas
jge
sub
sbb
bound
sub
mov
jecxz
mov
das
test
data16
and
dec
aad
and
adc
inc
jecxz
mov
lret
aad
repz
push
fwait
or
cmp
fmuls
out
int3
fisttpl
test
cmp
sti
push
lods
fildl
inc
inc
sbb
ljmp
fwait
mov
sti
jp
or
mov
cld
xor
nop
outsb
pusha
mov
xor
jmp
aad
pop
adc
sbb
sbb
xor
cmpsb
mov
loope
jmp
mov
dec
sub
aas
daa
divl
cmova
pop
div
and
ret
ljmp
movsb
push
sbb
addl
mov
sti
fildll
jo
cmpsl
sbb
aaa
pushf
jb
iret
sahf
lahf
in
lds
jbe
jmp
add
mov
cli
xchg
mov
out
jmp
insb
cmp
cld
sarl
adc
adc
fwait
push
pusha
sub
xchg
pop
jb
push
scas
out
movsb
pop
in
arpl
or
sub
push
mov
pop
cmp
fwait
cmpsb
add
add
dec
dec
jns
in
das
fidivs
ret
faddl
aas
inc
pop
sub
mov
mov
dec
lock
aad
test
push
add
loop
rclb
fstpl
push
inc
cli
data16
cmp
fxch
adc
outsb
jne
lock
push
cmp
test
mov
and
test
push
ds
shlb
pop
int
add
fcmovnbe
push
inc
mov
sub
mov
mov
icebp
mov
adc
adc
sub
fldcw
mov
mov
or
sarb
cli
repz
test
gs
inc
pop
inc
jge
stc
mov
dec
adc
cltd
xchg
sti
adc
rcr
inc
or
lahf
jno
popf
in
cmp
cmp
or
pop
jecxz
repz
sub
jne
sahf
repz
cmp
mov
insl
outsl
and
xor
test
test
outsb
inc
rcll
mov
mov
outsl
or
rcll
or
add
cmp
rorl
and
lahf
mov
mov
inc
sub
mov
icebp
cmp
mov
xchg
or
cmpsb
fidivrs
sti
mov
inc
xchg
ficompl
sarb
mov
movsl
fnstcw
insb
mov
mov
pop
sbb
out
pop
push
cmp
mov
test
sub
leave
insl
inc
add
aaa
push
insl
lea
jl,pt
jle
jg
lahf
mov
mov
imul
cmp
add
out
push
jo
push
mov
mov
pop
scas
jns
push
dec
mov
mov
ds
push
add
lea
stc
pop
mov
pop
cmpb
xor
jecxz
pop
mov
test
mov
pop
in
icebp
es
sbb
js
push
loopne
and
mov
xor
pushf
aam
lea
sub
int
push
cs
add
jnp
pop
inc
outsl
push
inc
dec
cli
dec
adc
aad
pop
cli
xor
ret
lea
add
imul
dec
lock
mov
inc
inc
inc
jl
mov
sub
loopne
sbb
pop
mov
popf
lea
ret
xor
or
roll
and
negl
push
mull
push
loopne
fdivrs
fldl
mov
rorb
mov
mov
dec
inc
sub
jge
mov
pop
jnp
cmp
ss
cltd
out
jge
into
lock
pop
ja
mov
push
adc
jno
cmp
stos
jmp
leave
hlt
xchg
in
movsl
pop
in
movl
test
stos
enter
xor
negb
sbb
mov
push
das
jbe
push
and
fstl
mov
std
lods
popf
dec
adc
rclb
mov
adc
add
push
jg
std
cmpsb
xchg
xlat
lods
mov
add
sub
nop
or
jnp
aad
mov
sar
sbb
xchg
adcl
rcl
clc
mov
add
pop
lahf
push
and
inc
stos
xor
add
sub
sahf
mov
setae
lds
cmpsl
lds
dec
dec
movsb
add
jl
btr
call
cld
pop
push
rcl
pop
add
inc
jne
pop
xor
mov
aas
in
ja
insb
dec
push
insl
popw
push
xchg
xchg
out
jne
push
cs
popf
push
std
or
sub
xchg
xchg
push
pop
movsb
cmp
shl
mov
pop
or
fsubrl
or
jbe
repnz
dec
sbbb
popf
mov
fld
stos
sbb
or
aam
call
adc
dec
daa
shrd
scas
cmp
movsb
xor
xchg
ror
sub
sbb
test
mov
lods
pusha
cmp
sti
jge
aad
cltd
lds
xchg
insl
pop
sbb
rcrb
sbbl
icebp
cmpsl
insl
jp
aad
cs
push
add
outsl
cmp
imul
push
jg
pop
xor
int
dec
cld
mov
push
sub
cmp
call
mov
aas
lret
insb
mov
dec
cmpsl
lcall
and
jbe
iret
mov
or
divl
push
xchg
insb
enter
xchg
arpl
test
rsm
movsb
mov
jl
in
fsts
or
popf
mov
sbb
cmpsl
pop
lds
pop
mov
ss
ret
test
jns
mov
ds
fdivrl
xchg
mov
or
iret
pushf
loop
loop
push
test
outsb
stc
mov
cli
pop
jb
mov
lea
cmp
mulb
xchg
xchg
dec
aad
daa
dec
push
push
mov
xchg
hlt
hlt
adc
pusha
movsl
ljmp
jo
sahf
psllw
data16
addr16
ror
inc
sub
jno
jno
dec
sti
sbb
andb
imul
mov
pop
ds
rorl
les
out
imul
push
out
jmp
stc
ffreep
pop
xor
or
sti
aas
mov
pop
loopne
cwtl
and
icebp
cmp
in
repz
xchg
adc
xchg
push
scas
mov
adc
loop
test
mov
adc
sub
mov
shlb
pop
adc
xor
inc
clc
out
in
sti
xchg
popa
pushf
mov
or
fwait
add
aaa
test
cld
shlb
xor
sbb
insb
xchg
fldcw
out
lcall
jnp
sbb
mov
aas
push
push
ljmp
shl
jle
loop
lds
jge
dec
mov
es
fcomps
xor
and
leave
jp
xchg
ljmp
fwait
orb
xchg
mov
xor
sub
shlb
or
orb
xor
jns
out
mov
es
outsl
jo
and
ds
stos
push
push
mov
into
jnp
inc
pop
mov
xor
cmp
stos
mov
mov
scas
pushf
loopne
cmpsl
movsl
cltd
imul
jns
out
xchg
sub
cwtl
pop
sarb
psubb
mov
add
xchg
push
sub
aaa
jecxz
inc
jnp
add
jp
stos
or
xorl
sbb
pop
decb
sub
or
jmp
shll
and
das
mov
mov
out
int
test
sub
loopne
push
pop
dec
mov
in
adcl
bound
inc
dec
jle
push
std
xchg
andl
pop
push
pop
xor
frstor
mov
mov
ja
ret
stos
cltd
pop
xchg
in
push
mov
sbb
aad
test
or
jno
xlat
lods
insl
jo
inc
ja
adc
push
or
cmp
cmp
xchg
xor
stos
pop
loop
jp
pushf
and
add
cli
sti
adc
and
les
dec
inc
inc
test
pop
ret
pop
icebp
lret
mov
shrb
inc
andl
mov
xchg
push
pop
outsb
imul
xor
jnp
cmp
je
inc
jl
mov
xor
pop
xchg
sti
cmp
mov
das
lea
cmp
adc
sbb
es
cmc
mov
or
aas
push
inc
outsl
pop
jb
arpl
sbb
mov
call
test
fstps
fsubrp
arpl
or
or
cmp
or
adc
and
push
mov
mov
pop
mov
mov
xor
inc
xchg
jns
imul
scas
xor
cmp
jnp
jne
movsl
pop
xchg
pop
add
mov
daa
das
and
clc
mov
sub
lea
mov
jae
mov
mov
mov
mov
js,pn
cmp
jp
push
dec
adc
imul
insl
cmpsb
xor
cmp
mov
decb
cmc
xor
fwait
je
mov
jl
inc
jmp
cmp
xchg
lds
stc
inc
iret
or
jb
out
dec
or
pop
cli
sub
lods
ret
inc
and
push
lret
mov
mov
dec
inc
stos
arpl
dec
movsb
shrl
loope
and
test
test
jmp
addr16
mov
mov
ret
test
fstpt
xchg
push
mov
mov
mov
pop
pop
gs
popa
cwtl
lods
mov
je
lock
or
jns
daa
arpl
xchg
mov
lret
aaa
push
cmp
pop
jecxz
mov
xchg
call
pop
jle
or
jbe
incl
cmp
jo
dec
jns
push
movsl
arpl
loop
pop
inc
jo
popf
imul
sub
xor
loopne
test
pop
lahf
xchg
pop
adc
dec
push
mov
sub
pop
inc
fadds
cmpb
js
sbb
xchg
sbb
lods
sete
inc
xchg
movsb
das
pop
dec
in
dec
dec
inc
push
test
jns
js
ret
and
dec
dec
push
ret
enter
jnp
push
cwtl
sub
mov
aas
push
sti
flds
add
clc
das
push
les
xchg
lahf
sarb
push
lods
push
rorl
pop
and
jp
lahf
lret
adc
jle
dec
stos
bound
sbb
push
aad
cs
aas
mov
mov
push
mov
lahf
or
testl
xchg
insb
push
data16
dec
dec
and
xchg
cli
out
mov
loopne
mov
das
ret
inc
xor
sbb
sbbl
bound
into
mov
out
dec
jl
movsb
or
pop
push
aam
cs
fisubs
hlt
push
call
jne
push
sar
mov
jl
lods
cld
ljmp
and
lods
aad
xor
xor
pop
ret
jns
fwait
std
movsl
mov
ljmp
jmp
cmc
sub
fs
cmc
mov
sti
add
adc
jp
and
adc
pop
push
shl
dec
jmp
test
arpl
mov
stos
aaa
inc
xchg
in
cwtl
hlt
sarb
movsb
pmaxub
jmp
pop
aaa
sub
popa
xchg
clc
inc
scas
aaa
jnp
stc
fildl
cmp
outsl
lock
sbb
xor
inc
mov
repz
fstl
pop
cmp
and
push
test
out
pusha
pushf
orl
mov
push
dec
xchg
mov
jl
inc
stos
dec
leave
test
sub
insl
sub
pop
cmp
fwait
daa
add
push
stos
lcall
shlb
ficoml
das
nop
cmc
inc
sbb
mov
xlat
dec
xor
outsl
test
int3
xchg
inc
xor
outsb
mov
push
mov
xor
sar
ljmp
sbb
lods
or
and
mov
add
popf
fs
shrb
sti
cmp
ja
push
fidivl
std
xor
mov
shrl
test
fwait
sub
dec
mov
pop
mov
in
rcrl
loopne
and
outsl
mov
aas
fbld
out
or
adc
leave
js
mov
push
notb
imul
rcr
inc
aam
fwait
mov
mov
in
sub
pop
sub
lods
cmpsb
ret
scas
loop
push
add
sub
or
mov
test
sbb
sahf
inc
loope
in
inc
push
mov
stos
push
pop
stc
pop
sti
psubusw
jne
int3
out
mov
mov
mov
ljmp
cmpsl
outsl
insl
and
int
push
mov
xchg
icebp
mov
filds
dec
mov
fprem1
sub
in
push
jmp
sub
add
xor
cmpsb
mov
jecxz
pop
shll
sub
call
sbb
add
sub
sbb
into
outsl
pusha
xlat
push
inc
in
fcomip
dec
push
shrl
fildll
jnp
pop
sti
adc
cld
pop
pop
pop
scas
cmp
xor
out
cmc
movsb
scas
sub
lret
sub
sub
out
mov
int3
ds
mov
adc
in
imul
push
sub
xlat
mov
lea
inc
lock
lahf
jo
pop
or
out
jno
shl
mov
xchg
test
dec
bound
ja
gs
cs
dec
mov
sahf
cmp
nop
mov
test
mov
fstl
adc
add
cld
jmp
fmul
lock
jne
sub
add
dec
jns
loopne
repz
push
cmpsl
jae
add
test
sti
jp
std
ja
mov
leave
lods
push
insl
push
mov
lahf
or
scas
pop
sub
out
add
out
inc
cmpsb
js
sbb
ja
jno
inc
int
dec
pop
lea
pusha
int
movsl
sub
push
fisttpl
or
push
sub
das
clc
cmp
xchg
ret
jns
notb
out
lds
stos
stos
lret
movsb
insb
jb
add
jl
ret
daa
mov
xchg
mov
mov
or
jns
push
or
inc
xor
xor
cmp
xor
add
jle
in
pushl
ss
push
or
xor
sub
sbb
inc
negb
cmpsl
pop
shl
lahf
cld
push
andb
mov
push
sarl
jbe
rcll
push
or
dec
ret
lahf
xlat
push
fimuls
mov
push
jo
loop
lret
pushf
or
lret
add
mov
pop
icebp
mov
fisubl
andb
lahf
cmp
dec
push
pop
repnz
hlt
lahf
and
inc
add
inc
out
movsl
mov
mov
adc
push
jbe
test
clc
sbb
mov
cmp
jo
stos
stos
or
mov
adc
pop
xor
mov
mov
jmp
jecxz
xor
mov
scas
sub
or
pop
inc
mov
stos
shll
jge
pop
outsb
dec
es
or
adc
out
bts
fmul
cmp
loop
and
xchg
cs
push
sbb
cmp
pop
add
fldcw
loop
scas
andl
jge
mov
dec
inc
sub
sub
push
pop
mov
jbe
push
pop
arpl
outsb
ret
cmp
hlt
or
test
daa
or
sbb
test
out
fstpt
xor
push
mov
push
imul
xchg
jae
and
das
stc
fstps
or
clc
jae
mov
push
xor
push
adc
fsubrs
cmp
int
sub
nop
jp
fs
push
in
mov
fldcw
jbe
jge
or
sar
push
sub
cmp
xchg
adc
clc
push
ret
shll
cmc
mov
daa
pop
add
xor
sub
into
std
jg
jno
out
arpl
pop
pop
xor
adc
incb
mov
mov
lds
loop
mull
ss
orb
push
movsl
insb
std
mov
lcall
arpl
mov
aam
or
or
sub
xchg
andl
jmp
pop
lock
and
xchg
push
stos
add
inc
shrb
add
js
insl
push
dec
out
inc
push
dec
int
pop
icebp
cmp
adc
ret
adc
sub
ret
and
dec
sahf
nop
inc
scas
xchg
jo
sbb
loop
cmpsl
idivl
mov
out
enter
sbb
out
jbe
lahf
sti
xchg
push
out
cmc
mov
insl
sahf
lods
pop
jne
push
test
dec
xor
lds
test
mov
ss
hlt
pop
out
xor
xchg
fsubr
mov
into
sub
in
in
xchg
nop
inc
inc
int
dec
and
xchg
and
lret
enter
xchg
in
mov
mov
das
ficoml
rcr
fwait
cmp
icebp
bswap
sbb
xchg
bswap
cmc
loope
pop
jno
testl
add
and
mov
int
rcll
add
add
test
pushf
lcall
in
in
fcmovu
scas
shll
call
sbb
enter
imul
and
mov
js
inc
int3
sbb
loope
inc
test
les
push
and
mov
fsub
sub
fstl
dec
xchg
mov
sbb
sub
cld
cmp
mov
jno
sbb
popf
jns
iret
rolb
mov
adc
rolb
out
jnp
out
rcrb
mov
mov
and
mov
mov
hlt
mov
mov
sub
adc
leave
outsl
data16
enter
lea
jns
enter
jle
fisubrl
mov
cs
stos
call
and
push
cmp
in
xchg
mov
movsl
xchg
lcall
jg
bound
lock
jp
jl
lcall
sbb
jns
test
push
jl
pop
das
out
arpl
jb
lods
dec
dec
sbb
adc
jp
push
repnz
jae
jae
scas
jecxz
and
aam
jno
dec
or
jmp
cmc
xor
ficoml
or
dec
jl
lods
pusha
mov
fstpl
mov
dec
add
lcall
movsl
push
icebp
adc
xchg
pop
out
outsl
sub
arpl
icebp
loopne
cmovae
mov
or
jne
jl
add
xor
xchg
inc
loop
repnz
jae
andl
xor
jb
inc
repz
add
xor
arpl
jae
andl
xor
jb
inc
repz
add
xor
arpl
mov
andl
xor
mov
ret
arpl
jb
inc
sbb
mov
adc
arpl
sub
or
mov
mov
pop
lea
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
rolb
out
mov
out
xchg
or
mov
test
adc
es
add
out
xchg
inc
xchg
mov
jle
data16
les
cmc
ss
or
sbb
sub
cmpsb
pop
into
insl
mov
mov
pop
rcll
inc
mov
inc
mov
xchg
add
sbbl
jg
xor
jge
jl
dec
lea
leave
ljmp
xorb
test
pop
pop
test
test
imul
push
lahf
jl
out
sbb
jg
inc
jge
xchg
push
jp
in
pop
cwtl
sub
cmp
loop
loope
adc
out
adcb
jbe
sub
mov
addr16
add
pop
cmc
add
cmp
sbb
ja
pop
popf
jne
adc
jl
adc
sbb
cmp
test
call
dec
cmpsl
push
jp
dec
mov
aad
adc
pop
add
out
xchg
pop
xchg
jl
mov
out
lods
je
pop
int
fucomp
cmc
cs
adc
pusha
test
xor
sub
ja
or
loope
test
ror
add
nop
inc
orb
add
mov
les
aam
fbld
xchg
xchg
aaa
test
lock
push
mov
mov
test
push
jl
aaa
es
lcall
jne
cmpsb
xchg
push
test
jbe
data16
lds
cmc
ss
adc
mulb
xchg
cmpsb
xchg
push
test
jbe
data16
lds
cmc
ss
adc
mov
jp
imul
dec
out
repnz
dec
or
movsb
jg
mov
in
lret
fcmovb
lock
add
imul
mov
ja
pop
adc
idivb
loope,pt
rcll
push
jp
aaa
fwait
pop
clc
lock
cmp
xchg
dec
xchg
adc
lds
dec
inc
xchg
inc
dec
push
mov
ret
mov
out
lret
inc
mov
ffreep
mov
repz
xlat
push
mov
push
mov
daa
mov
mov
adc
insl
and
fistpl
push
data16
add
das
xchg
sbb
jae
cmp
ljmp
pop
pop
xchg
add
pop
push
sbb
inc
outsb
inc
ljmp
adc
stos
fisttpll
jae
fdivrl
jle
and
pushf
xor
loopne
add
pop
outsl
cmp
mov
push
mov
loopne
push
arpl
ret
adc
enter
push
test
enter
xor
xchg
xchg
sbb
filds
and
js
mov
push
mov
pushf
ret
or
scas
push
add
jp
test
push
adc
outsb
lea
cwtl
sbbl
adc
xchg
cmpsl
testb
imul
sub
cwtl
imul
leave
stos
jecxz
push
jg
lods
fcompl
fwait
or
fistl
test
and
sbb
cmp
xchg
lods
or
fcmovnu
int
dec
cli
push
jmp
inc
bswap
inc
sbb
mov
push
or
stc
cld
lock
or
mov
mov
stc
popa
push
xchg
push
jno
mov
sbb
es
push
xor
insb
leave
add
sti
fistpll
mov
jl
ficoms
lds
or
pop
mov
xor
seta
insb
cmp
adc
les
aad
xor
pop
loope
je
pop
and
xchg
mov
jbe
or
call
xor
push
jo
sub
push
sbb
iret
daa
jmp
ljmp
cmp
cmpsl
cmpl
or
das
popa
sbb
test
iret
daa
cs
das
lret
pushf
in
nop
push
or
pop
mov
inc
in
pop
inc
out
adc
cmp
rcrl
fisttps
pop
add
xor
xorl
cmp
sarb
inc
leave
scas
xchg
into
fisttpl
push
fucom
outsb
or
mov
stos
je
cli
mov
or
fnstsw
iret
jg
aas
cmp
fcomp
fcmovnu
ret
sub
add
mov
mov
sbb
es
mov
fstps
xor
inc
mov
mov
or
loope
push
pop
push
cwtl
lea
sbbb
or
inc
add
ljmp
inc
xlat
adc
push
inc
into
pusha
xor
dec
dec
fimuls
ss
adc
mov
jae
aaa
test
imulb
adc
mov
cs
mov
mov
mov
hlt
xchg
xchg
or
mov
pop
jne
daa
in
and
pop
or
mov
cmpsl
leave
cli
mov
cli
jo
jbe
out
std
imul
sbb
stos
xchg
clc
dec
inc
push
outsl
and
scas
scas
push
lcall
arpl
jne
lret
xchg
loope
aam
movsb
stos
inc
jo
push
movsb
fcoml
cld
dec
aam
mov
out
and
mov
test
cmp
add
pop
out
loop
lahf
sbb
test
jge
loop
lea
je
jns
jns
pop
jno
xor
push
mov
ret
andl
mov
pop
dec
pop
les
mov
xor
jg
push
jnp
cmp
sti
in
je
push
cmp
repz
loopne
mov
cmp
movsl
cmp
ja
push
sub
stos
push
out
sbb
mov
xlat
test
add
adc
cli
xchg
sti
test
push
jo
dec
imul
pop
push
push
sbb
mov
test
sbb
jecxz
pop
sbb
adcb
pop
fsub
popf
push
dec
mov
sbb
sbb
jmp
cmpb
loop
addl
mov
jb
and
in
cmc
pop
inc
popa
mov
ja
mov
cli
movl
sub
repz
inc
test
cs
je
fnstsw
or
outsb
adc
adc
movsb
cmp
sbb
sbb
or
push
and
and
les
rcrb
popa
les
mov
dec
call
jg
xor
testl
fsubrs
in
pop
stc
jns
aad
mov
cmp
mov
sbb
or
fbld
add
push
call
sbb
mov
push
fdiv
adcb
push
rorb
mov
and
mov
inc
int3
repz
sarb
out
inc
fwait
lea
mov
out
jecxz
bound
arpl
sti
loopne
mov
sbb
cltd
dec
pusha
adc
sub
mov
mov
or
or
xchg
cmp
jle
sbb
arpl
ror
fcomip
push
adc
mov
push
int3
jo
fwait
je
testl
rcll
std
loop
repz
xchg
mov
add
push
or
push
repz
mov
xchg
push
sbb
scas
cmp
sarl
pop
and
push
cmp
out
inc
ret
push
mov
adc
pop
into
pop
add
xchg
es
add
sub
je
mov
push
inc
nop
out
outsl
sbb
push
popf
test
rolb
data16
push
mov
mov
adc
repz
push
rcrb
das
lods
movsl
lret
repz
addl
stos
push
dec
and
add
out
inc
nop
lahf
mov
pusha
jbe
dec
xor
adc
add
ret
cwtl
lods
cmc
test
popf
sbbl
xlat
nop
outsb
scas
addr16
xchg
mov
pop
dec
dec
inc
outsl
dec
jmp
pop
out
adc
cmp
lock
jb
jmp
push
xor
pop
mov
in
dec
or
popa
sub
pop
andl
das
shrb
xchg
ljmp
lock
cwtl
mov
addr16
cmp
sbb
insb
repz
lret
push
or
mov
jae
shll
add
push
popf
in
ret
sub
rorb
lahf
cmp
sbb
faddl
lcall
stos
xor
jns
cwtl
outsb
adc
cltd
fsts
pop
jg
add
sub
sub
notb
add
add
xchg
rorl
xlat
arpl
pop
mov
pop
test
cmpsb
insb
sbb
pop
cmpsl
pop
dec
lds
pop
pop
mov
or
je
test
cmp
aaa
cmp
test
inc
push
ja
imul
xor
repnz
movsl
or
cld
dec
sub
repnz
inc
cmpb
xor
mov
lret
icebp
xlat
sahf
xor
mov
je
pop
data16
pop
jbe
sbb
fsubrp
xor
dec
popa
xchg
mov
add
cmp
cmp
jae
inc
push
ret
dec
ljmp
scas
pop
inc
mov
flds
pushf
mov
xorb
pop
pushf
pushf
int
jbe
push
inc
or
dec
jl
pop
inc
xchg
aad
imul
fnstenv
in
sbb
icebp
xchg
leave
jns
cmp
dec
lods
jno
std
rcll
sub
push
out
lock
push
pop
aad
jp,pt
mov
pop
xchg
xor
mov
ud2
lcall
xchg
in
mov
addr16
addb
mov
leave
xchg
xchg
lea
push
cwtl
adc
sarl
je
shrl
push
out
jle
inc
cmc
sub
pop
in
lcall
push
mov
imul
mov
enter
aad
rclb
ljmp
in
sahf
shl
sub
push
mov
outsb
pop
pop
cmp
loop,pt
jbe
std
fdiv
mov
add
pushf
flds
shrl
sti
jp
out
aad
push
ds
jbe
mov
mov
outsb
sub
pop
data16
loop
adc
push
idivb
lahf
or
arpl
add
adc
jle
mov
jnp
dec
or
cmpsb
inc
and
dec
mov
jmp
rolb
out
and
pop
testb
outsb
loopne
test
mov
loop
add
sub
fmull
inc
lods
adc
mov
adc
xor
sbb
ret
dec
inc
testb
mov
lods
adc
imul
sbb
in
ss
cmp
fnstsw
mov
es
std
mov
rep
bnd
mov
inc
lcall
dec
cltd
xchg
sub
add
das
mov
jp
push
aas
fdivrl
lahf
and
sub
mov
mov
pop
mov
repnz
xchg
mov
neg
cwtl
cmc
adc
dec
rcll
xchg
ds
test
pushf
sbb
xor
jge
mov
movsl
ret
test
push
push
and
adc
inc
mov
popf
dec
mov
lcall
arpl
adc
out
clc
adc
jb
mov
mov
xor
in
xor
das
inc
jge
inc
mov
jns
xchg
std
push
and
xor
mov
cmp
hlt
lock
push
mov
sub
inc
pop
enter
dec
cmp
cmpsl
dec
lds
xor
je
xchg
ja
sbb
lret
je
test
push
jmp
adc
mov
test
iret
lds
inc
mov
icebp
jmp
xchg
rclb
mov
cmp
dec
mov
int3
push
pop
jns
icebp
inc
mov
mov
cmp
cmp
rorb
sbb
shl
xor
lret
std
out
dec
into
js
sbb
xchg
inc
pop
cmp
ljmp
mov
jo
stos
sub
xor
pop
sbb
loope
mov
mov
add
stos
dec
push
shlb
pop
xchg
xchg
xchg
sub
imul
add
call
fimuls
dec
and
andl
fistpll
fmull
scas
imul
push
pop
pop
ss
pop
sbb
bound
into
push
sqrtps
andl
sub
ja
movsb
cmp
dec
cld
in
mov
cs
jmp
or
push
dec
inc
pop
test
repz
cs
mov
aad
xchg
ret
or
cmp
out
loopnew
adc
fmul
test
mov
push
push
and
or
std
inc
and
in
push
jo
add
pusha
stos
mov
shlb
push
in
xor
lret
cmc
dec
int
add
or
xor
pop
pop
xor
pop
jne
out
mov
sbb
sub
in
sahf
rcll
adc
or
loopne
mov
lds
mov
repnz
sbb
movsl
push
add
icebp
push
adcb
into
jno
push
push
rcrl
push
sbb
sbb
fsubrl
cld
int3
push
dec
ja
icebp
or
shr
mov
jnp
sbb
and
repz
pusha
js
scas
jno
inc
out
out
xchg
add
mov
sbb
xlat
xor
les
jecxz
jo
pop
fisubl
sub
or
out
dec
jmp
pop
xchg
pop
pop
stos
or
sbb
adc
out
pop
and
test
cmpsb
lcall
add
es
mov
inc
lock
jecxz
sar
inc
or
adc
cwtl
out
lcall
sbb
sub
out
add
mov
pusha
xchg
bswap
xchg
in
nop
lahf
out
cld
aas
aas
adc
out
in
iret
in
pop
xor
das
jae
inc
xchg
mov
pop
aam
loop
or
dec
out
dec
push
jae
cmc
test
pop
daa
push
iret
push
les
and
js
cmp
test
sbb
push
mov
or
rcll
stos
movsb
mov
xchg
sub
jl
mov
lret
xchg
or
enter
sti
push
xchg
mov
addr16
xor
clc
sbb
ret
mov
ficoml
fwait
loopne
lret
or
and
dec
divl
sub
sbb
adc
pop
xchg
add
cmpsl
pop
pop
in
adc
lahf
sub
call
and
xor
cs
and
lret
jp
fcomps
data16
jge
mov
or
jns
sbb
cli
mov
cltd
lcall
jmp
cmpb
mov
cmpsb
and
dec
inc
int3
lock
rcll
adc
xchg
jle
dec
mov
sbbb
pop
sub
scas
jb
add
adc
movsl
jg
ret
push
xchg
sar
rcrl
mov
outsb
xchg
push
inc
stos
lahf
pusha
cmp
mov
out
sbbl
test
mov
dec
ljmp
sub
pusha
add
push
loop
arpl
xchg
into
mov
xor
mov
cmc
xor
cmpsb
out
mov
cmpb
fwait
jmp
add
clc
test
adcl
fwait
test
fcomps
and
nop
sbb
sub
cmp
fwait
dec
dec
mov
int
and
mov
xchg
cmpl
repnz
lea
mov
andb
sub
jmp
scas
dec
ds
pop
jmp
xchg
addr16
clc
dec
hlt
fnsave
iret
pop
movsb
pop
xchg
loope
add
jp
pop
std
int3
out
insb
add
pop
fdivrl
jno
clc
imulb
add
fcomi
xchg
adc
sub
xchg
lcall
xchg
and
add
pop
lret
outsl
pop
pop
andl
outsb
jmp
neg
lock
arpl
adc
cmp
cmp
lcall
jnp
push
xchg
add
jb
mov
daa
stc
add
and
cmpsl
xorl
and
add
cltd
mov
sbb
les
mov
push
sahf
inc
stos
sbb
ror
hlt
lret
xor
xchg
mov
jns
or
in
sbb
testl
adc
sub
out
inc
lcall
jle
int
sub
pop
pop
sub
test
push
insl
push
cmpsb
push
mov
into
sbb
sbb
ficompl
stos
and
dec
dec
xchg
add
mov
jbe
mov
adc
cmp
aas
sbb
data16
jl
ja
mov
cmp
test
dec
outsl
fstpl
outsl
dec
push
das
rcl
dec
dec
test
js
test
popf
mov
sahf
sub
or
aaa
pushf
xchg
jmp
push
das
jp
pop
jne
mov
jle
mov
test
aas
jmp
push
mov
push
dec
shll
call
ljmp
lock
adc
stos
mov
add
mov
lock
push
cmp
iret
imul
mov
push
adc
push
inc
jmp
cs
push
clc
rcr
or
rcr
ret
jno
lret
cmp
fbstp
lret
adc
cmc
aas
mov
popf
bswap
and
repz
or
mov
jmp
movsb
cli
xor
out
pop
jo
xor
dec
cmp
js
fucomip
fs
lods
xchg
jae
xchg
aas
pop
fnsave
js
and
outsb
jmp
je
mov
xchg
jl
sbb
out
test
fs
pop
lds
mov
mov
add
aas
xchg
sub
or
jo
test
stos
mov
mov
and
iret
add
jp
mov
mov
repz
and
mov
sub
gs
ljmp
es
outsb
jmp
cmp
loopne
fisubrl
mov
into
lock
inc
stos
loope
imulb
mov
mov
or
xor
lret
js
je
xchg
mov
jno
das
sbb
mov
dec
hlt
lahf
xchg
mov
mov
inc
sub
sti
aam
test
decb
mov
out
sub
push
cwtl
lods
pop
dec
mov
mov
subl
pop
in
jge
jmp
mov
aas
es
cmp
jne
jg
cli
scas
jo
mov
push
xchg
pop
lcall
addl
popa
lock
bound
cmp
mov
jne
into
xchg
cltd
fcomps
xchg
leave
adc
sub
dec
or
stos
lods
in
and
int
pop
jae
incl
decb
sub
xchg
dec
fisubrl
mov
call
cmp
je
dec
frstor
in
aas
and
dec
dec
shr
mov
cpuid
es
jmp
shrb
jbe
std
subl
loopne
lret
test
mov
mov
and
add
mov
mov
in
out
outsb
cmp
pop
cmpsb
adc
pop
and
mov
aam
push
jge
xchg
sbb
int3
xchg
adcb
lock
or
outsb
lods
xchg
jle
std
cmc
xchg
int3
rcrl
sbb
daa
pop
push
mov
das
imul
add
orl
leave
and
insb
test
or
or
or
ss
movsb
sbb
pop
push
sbb
cld
push
and
mov
push
fcmovnu
adc
adc
pushf
aam
lods
decb
arpl
and
movsb
sarb
ljmp
movsl
iret
inc
in
xchg
pop
inc
cs
dec
dec
and
scas
jno
imul
add
jmp
dec
or
or
lret
pop
xchg
pop
xor
outsb
mov
jnp
jns
sbb
push
movsb
sub
mov
jbe
imul
outsb
es
pop
push
jp
cmpsl
outsl
std
fmuls
sub
dec
xor
push
repnz
fldl
popl
pop
adc
aam
cmp
or
dec
mov
xchg
shlb
mov
mov
mov
xor
mov
mov
sbb
inc
cmp
sbb
dec
or
insb
data16
aas
jns
push
rorl
add
mov
and
mov
dec
cmp
ljmp
sbb
xchg
cmpsl
push
or
shlb
pop
mov
mov
xchg
pop
push
outsl
dec
inc
cltd
cmp
scas
test
push
rcrb
sub
enter
dec
imul
sbb
shll
xchg
stos
adc
inc
in
push
jp
cmp
inc
push
aad
mov
xor
pop
sub
sbb
sbb
std
mov
mov
lcall
daa
xchg
mov
rcr
mov
in
fdivrp
adc
cmp
jge
inc
ret
push
adc
mov
dec
jno
pusha
cmpsl
and
xchg
mov
aas
add
pop
div
xor
add
pop
push
push
bound
outsl
dec
push
std
aas
fs
fwait
and
ret
lahf
xor
daa
push
or
enter
xor
repnz
cmpsl
mov
imul
mov
std
int
or
push
inc
movsl
in
xlat
sub
inc
in
sub
roll
jl
push
std
pop
and
popf
loope,pn
add
clc
insb
lods
fnsave
je
imul
sahf
jl
add
mov
adc
jmp
lods
push
or
pop
imul
iret
xor
outsb
iret
pop
out
sub
icebp
lahf
push
ds
sub
incl
cmp
xchg
push
loopne
inc
out
call
sub
xchg
mov
fdivs
std
addl
mov
inc
mov
call
les
mov
andl
xchg
fcom
es
xorb
adc
lods
nop
mov
or
aas
addl
xchg
cmp
sahf
push
xchg
imul
ss
int
sahf
pusha
dec
xor
cmp
mov
dec
enter
aad
pop
add
pop
push
mov
mov
insl
push
adc
jo
sub
adc
mov
xor
cmp
add
aas
arpl
xchg
pop
popf
sbb
jno
daa
and
mov
adc
ja
das
aas
int
and
jmp
sbb
mov
sub
movl
psubw
sbb
js
jno
cld
push
cmpsl
sub
scas
or
cmp
mov
sbb
pop
mov
mov
arpl
test
syscall
lock
iret
das
inc
insl
leave
inc
sbb
jp
loopne
add
imul
stc
push
imull
push
sub
cli
movsl
imul
sub
mov
pop
xchg
packuswb
aas
cli
sbb
mov
pop
push
imul
push
inc
xor
call
lock
in
fs
mov
xchg
pop
and
lret
fstl
aad
add
pop
mov
sbb
std
jne
stos
or
xchg
mov
mov
leave
jg
inc
or
scas
mov
jns
and
xchg
cmpsb
xchg
push
test
jbe
data16
lds
cmc
ss
adc
mulb
xchg
cmpsb
xchg
push
test
jbe
data16
lds
cmc
ss
adc
out
and
in
jne
cmpsb
xchg
push
test
jbe
outsl
aad
roll
aas
aam
and
xor
add
and
xchg
ss
push
jp
pop
jbe
adc
dec
sbb
cmc
js
dec
aad
lds
fstpl
jge
adc
gs
test
mov
add
dec
aad
lds
mov
movsl
or
clc
add
test
mov
add
dec
aad
lds
mov
movsl
or
xor
dec
lret
addr16
add
dec
mov
outsl
inc
jecxz
xchg
andl
add
shlb
ffreep
test
movsl
cmp
cmp
xchg
lock
lcall
mov
push
xchg
lods
adc
and
adc
ret
imul
pop
mov
or
cwtl
mov
pop
mov
pop
lds
movsl
push
sbb
jp
scas
jne
sub
mov
mov
adc
movsl
cmp
mov
mov
adcb
inc
stos
push
test
and
cwtl
mov
sbb
cmpsl
cmp
shlb
scas
add
inc
dec
and
loop
add
in
aad
lds
mov
movsl
or
clc
gs
test
mov
insb
or
mov
push
movsl
fistpl
adc
add
push
stc
push
in
pop
call
out
aad
mov
std
jae
dec
loop
test
xor
sub
fisttpll
jo
push
bsf
push
mov
cmp
call
push
fadds
xor
cwtl
add
dec
aad
lds
mov
movsl
or
clc
gs
test
mov
add
aad
daa
cmp
lret
jmp
inc
pop
xchg
sub
test
mov
mov
sub
xchg
xchg
lea
pop
les
cmp
cmp
push
cli
mov
mov
adc
ds
cltd
scas
push
add
test
test
xchg
fwait
xor
pop
dec
imul
mov
jg
mov
pop
lret
imul
pop
out
adc
mov
leave
xor
cmpl
in
stc
movsb
fldenv
dec
xorb
and
aad
xorl
shl
xchg
inc
aas
or
pop
or
sbb
mov
js
dec
fbstp
inc
ja
and
into
or
cwtl
or
outsl
ja
popw
dec
fwait
cmp
test
or
xor
xor
fnstcw
cmp
xchg
ret
bswap
les
jg
add
movsl
xlat
dec
enter
jecxz
scas
enter
xlat
stc
in
cltd
movsb
jl
outsl
into
and
dec
cs
cmp
aas
push
pop
bound
xchg
jge
in
cmp
inc
int
xor
mov
repz
sub
cmp
mov
or
cltd
enter
in
ljmp
fadds
add
arpl
aam
xchg
enter
mov
ret
fucomi
mov
jecxz
sbb
ds
mov
inc
smsw
lret
adc
mov
sub
xlat
lret
push
inc
mov
inc
fdivrl
fdivrl
sub
mov
push
inc
mov
iret
jecxz
cmp
xchg
push
sbb
imul
dec
mov
and
js
sbb
leave
and
ret
and
cmpsl
xchg
popa
icebp
jge
out
cmp
and
adcb
mov
inc
fsubp
lret
mov
rolb
or
mov
js
scas
sbb
sub
sbb
mov
in
sbb
xchg
dec
in
pushf
cmpsl
inc
mov
dec
into
xor
xchg
repz
mov
push
push
fistpl
pop
lods
mov
or
jmp
cmp
insl
sub
and
push
repnz
cwtl
push
push
cmc
jbe
lahf
push
je
lds
aas
sarl
cmp
adc
adc
adc
pop
out
mov
or
ljmp
je
mov
dec
mov
add
enter
push
sub
fstl
adc
scas
pop
jp
mov
sbb
test
jne
ret
mov
or
fldenv
mov
ret
mov
movb
repz
ret
add
sbb
out
sbb
cmp
xor
scas
into
mov
daa
sub
je
mov
std
leave
dec
push
lret
and
mov
mov
mov
les
xlat
lea
pop
jnp
inc
dec
dec
pop
pop
bnd
push
xorb
aas
ljmp
clc
and
int3
mov
mov
mov
fsubl
xor
mov
add
cmp
enter
adc
mov
test
mov
xchg
div
push
push
rcll
aam
jae
cmc
jecxz
inc
dec
les
pop
mov
scas
cwtl
sub
faddp
mov
fld
mov
scas
mov
sahf
and
cli
and
adc
cmpsb
jmp
aaa
xchg
sub
dec
imul
pop
push
subb
lock
mov
xlat
pusha
fisubl
mov
xlat
mov
mov
xorb
aam
cli
repnz
pop
das
rol
aas
lret
adc
mov
test
sub
mov
arpl
cmp
jbe
movsl
sub
jne
mov
in
xor
pop
sti
and
push
mov
ljmp
add
sub
cmc
jno
or
sbbl
inc
or
movsl
lods
stos
push
push
jl
int3
mov
fnsave
mov
sub
adc
push
xchg
sbb
pop
pop
jns
scas
push
ja
jnp
pop
fcmovnbe
mov
or
negl
push
in
scas
movsl
cwtl
jb
out
add
test
lea
ds
sub
in
loopne
jmp
xchg
movb
lret
mov
imul
pop
cld
ret
xchg
push
push
adc
or
pop
test
mov
cli
inc
cmc
add
lds
push
lods
mov
loopne
aad
testl
mov
insl
xorb
push
ret
pop
sub
push
sbb
sti
mov
jnp
cmp
sbb
lcall
repnz
xor
dec
outsb
sbb
outsb
js
je
int3
mov
lock
sbb
add
sbb
push
gs
cmp
adc
cmp
scas
gs
mov
rorb
sub
fimull
cs
mov
lea
cli
inc
lret
or
leave
sub
pop
push
cmc
or
mov
lahf
rcrl
cmpsl
cld
mov
cwtl
mov
int3
and
adc
rol
ss
cmc
hlt
jge
pop
mov
xchg
push
jmp
lods
mov
out
fwait
push
popf
dec
adc
gs
dec
pop
adc
ret
iret
jne
add
pop
stc
jns
movsl
mov
xchg
jo
cmpsb
sbb
rolb
lods
scas
adc
outsl
ja
push
sti
test
mov
jmp
test
dec
mul
inc
cmp
push
repz
xchg
lods
inc
cli
jle
imul
imul
mov
enter
and
xor
mov
pusha
insb
aam
xor
pop
lret
push
in
add
cmp
test
sbb
dec
or
add
cli
nop
iret
add
negb
mov
pop
cmp
lret
push
out
lea
pop
fldt
ret
and
popf
ror
mov
addr16
out
xor
or
pop
fsubrs
in
dec
clc
inc
movsb
idiv
mov
aas
arpl
xor
shl
cmp
push
int3
dec
add
mov
mov
or
sbb
mov
pop
cmovle
outsl
sub
inc
add
adc
add
rolb
cltd
int3
stos
or
ds
xor
lock
dec
pop
ret
in
imul
repnz
fldcw
cmp
sti
adc
loop
mov
jno
pusha
sub
pop
or
dec
or
std
imul
daa
repz
outsl
test
cmp
gs
and
add
lods
or
push
in
xchg
jnp
mov
sub
ret
mov
sbb
int3
mov
icebp
jle
fmulp
ja
add
mov
out
lahf
xchg
dec
enter
pop
lods
les
movsl
pop
push
test
xchg
or
outsb
fildl
pop
cmpsl
jle
out
test
xchg
push
call
in
inc
and
push
cs
outsb
call
jbe
mov
sbb
sbb
mov
cmpb
pusha
sub
dec
fiaddl
imul
or
push
dec
sbb
dec
into
mov
xor
sbb
xchg
xchg
hlt
insl
pop
mov
mov
mov
jae
in
xchg
add
icebp
lods
shll
sti
sbb
fidivl
fnstenv
bound
outsb
mov
push
and
xor
mov
xchg
cltd
test
mov
enter
pop
jb
scas
loopne
loopne
xor
jmp
xchg
outsb
js
in
pop
push
pop
mov
mov
and
and
aaa
lock
jmp
test
lods
and
mov
pop
out
pop
sbb
push
nop
aaa
xchg
jo
in
pushf
daa
push
mov
int3
mov
int3
xchg
push
adc
pop
and
or
dec
loopne
dec
ljmp
sub
lcall
fcmovb
call
pop
dec
lock
jnp
sub
aas
lret
out
pop
xchg
mov
mov
xchg
adc
out
and
mov
and
add
and
add
mov
cmpsl
and
pop
fcomps
pop
stos
and
cmp
or
aaa
fidivrs
inc
fwait
ret
addr16
adc
imul
cs
int
ficomps
sbb
push
loopne
out
add
and
lds
dec
fwait
popf
outsl
cmp
pop
dec
or
in
clc
or
adc
or
fistpll
push
lret
push
out
push
out
test
add
ret
sub
dec
movsb
add
ljmp
pop
fstpl
ret
sar
sahf
mov
mov
dec
push
out
fildll
mov
xchg
icebp
and
cmp
add
loope,pn
adc
es
mov
push
mov
inc
int3
outsb
pop
mov
pop
imull
and
and
cmp
imul
mov
inc
insl
xor
stos
rclb
and
jo
mov
insb
inc
sub
xchg
pop
and
out
stos
pusha
cmp
mov
arpl
daa
movsl
lds
push
mov
ljmp
add
adc
pop
outsb
sar
notl
pop
dec
les
jp
int3
ljmp
lock
stos
leave
jno
adc
inc
leave
paddb
es
ud2
push
mov
pop
dec
roll
sti
rorb
sub
subb
popf
jae
test
pusha
repnz
pop
push
mov
dec
mov
fcmovnu
adc
mov
rol
jp
jmp
sarl
xchg
mov
into
cmp
je
or
into
add
rol
inc
and
das
lcall
pusha
inc
cltd
scas
popf
out
pop
mov
mov
mov
ja
bound
and
jno
adc
hlt
lahf
test
mov
das
or
rclb
arpl
jo
addr16
sub
mov
lahf
shrb
xchg
int3
scas
pop
pop
mov
jecxz
push
add
and
in
xchg
xchg
es
imul
cld
mov
sub
jbe
adc
inc
jecxz
mov
fdivrl
pop
add
mov
xchg
dec
sub
jne
in
add
cmpsl
test
mov
ljmp
or
test
mov
push
sub
in
cwtl
ljmp
cmp
xchg
mov
cmp
test
push
add
cmpsb
popf
pop
loopne
mov
sbb
push
mov
rolb
test
cmc
aas
adc
pushf
repnz
or
jnp
jnp
outsl
jmp
stc
cmp
push
cmc
cs
pop
push
stos
inc
hlt
inc
adc
xchg
sub
inc
sub
sub
mov
jge
es
and
lods
sbb
loopne
mov
je
push
dec
ss
hlt
push
push
add
mov
ja
aam
jb
movsb
cmc
xlat
clc
js
lcall
es
lret
test
xor
aaa
stos
jmp
negb
imul
out
and
pusha
xchg
dec
lods
sub
ljmp
iret
fsqrt
or
cli
lahf
xchg
pusha
decb
pop
pop
fisttpll
and
mov
enter
cmp
mov
mov
mov
jmp
lcall
mov
add
push
add
jl
pop
xchg
pop
int3
xor
sub
pop
xchg
inc
push
popa
jne
xchg
jo
test
loopne
or
sub
rcrb
jge
jb
les
pop
sub
lds
xchg
cmpsb
mov
jnp
lds
notl
or
dec
fmul
fidivrl
add
fldenv
movb
mov
sti
pusha
movsl
movsl
pop
jmp
dec
xor
into
incl
jne
sub
mov
or
sub
arpl
cmp
jge
orl
and
dec
mov
sub
inc
clc
scas
push
or
jnp
addr16
sub
icebp
cld
pop
sbb
mov
arpl
and
stos
mov
inc
repnz
xor
cld
pop
pop
lahf
js
js
adc
pop
mov
outsb
mov
roll
mov
inc
or
cmp
push
mov
xor
stos
mov
daa
popf
mov
daa
ror
jge
and
adc
inc
push
push
aam
ja
ljmp
pop
sub
mov
push
js
pop
pop
cltd
mov
rclb
xchg
push
wbinvd
in
les
repnz
fdiv
movsl
bound
xchg
lcall
xchg
in
cmp
cs
cmp
pop
cmpsb
jmp
pop
outsb
xorl
jge
cmc
pop
adc
cmpsb
test
mov
int3
jne
test
add
addb
jle
faddp
inc
aaa
js
jmp
out
mov
iret
lods
add
insb
xchg
dec
jmp
lret
jmp
sub
pop
pop
pushf
dec
data16
gs
mov
jnp
add
pop
dec
sahf
jo
je
sub
lret
std
ret
rclb
bound
mov
mov
inc
mov
mov
or
out
push
mull
xchg
mov
pushl
jp
pop
out
jno
out
fwait
dec
ficoml
imul
loopne
push
xor
inc
and
inc
jecxz
sbb
pop
cmc
inc
push
mov
push
aas
inc
jnp
aaa
or
sub
test
mov
jb
pusha
inc
mov
rcr
xor
ja
mov
lods
dec
ss
lret
xchg
sbb
insl
add
jno
mov
fstpt
call
jmp
loope
xchg
popa
and
lahf
pop
pushf
clc
loope
sbb
out
fucomip
loop
jo
mov
faddp
or
lret
sub
pushf
popa
repz
add
jecxz
dec
mov
mov
fstl
xor
call
bound
fidivs
loope
stos
loope
leave
cmp
enter
rcll
lahf
push
lahf
ss
or
xchg
sbb
pop
dec
out
dec
lcall
lods
xchg
mov
int3
aaa
mov
stos
movsb
sbb
push
mov
rcll
pop
xor
add
pop
pop
cmp
sub
popa
or
out
inc
jle
push
and
adc
inc
mov
push
in
cli
dec
loopne
loopne
adc
jns
lret
lods
sbb
lock
jo
repz
dec
fidivl
test
rcr
pop
lods
test
xchg
loop
mov
test
sysexit
push
push
scas
dec
outsb
adc
push
in
cmpsl
mov
pop
lret
fidivrl
add
xchg
insb
xchg
movsl
aaa
and
pop
lods
iret
jl
dec
xlat
add
imul
cmc
js
popa
arpl
sub
mov
out
mov
push
loop
xor
std
cmc
addb
and
dec
mov
cmp
mov
flds
test
xor
cld
mov
mov
pop
por
ds
xor
dec
outsl
mov
adc
cmp
rclb
pop
dec
fldl
enter
movsw
jb
cli
int3
pop
fwait
imul
mov
add
dec
nop
mov
lret
fstpt
inc
jno
push
dec
inc
mov
lock
jae
adcb
lahf
test
sub
xchg
inc
inc
fidivrl
jb
inc
pop
or
test
call
pop
sbb
pusha
dec
xchg
lahf
push
push
adc
rclb
bound
pop
fs
fs
cmp
ret
mov
lahf
push
subb
in
sti
xor
pop
stc
rol
movb
sub
sarb
jg
cmp
aaa
cwtl
push
daa
sbb
sbb
loopne
roll
fildl
cmp
xchg
add
pop
lret
inc
push
and
cmp
add
adc
scas
mov
ljmp
addr16
repz
pop
cmc
xor
mov
cmc
xor
mov
out
outsl
xchg
adc
mov
stos
out
out
negb
push
insb
and
cmp
int3
push
mov
mov
das
cs
add
or
lock
sbb
jnp
jno
or
sub
outsl
ficompl
arpl
dec
push
pop
sub
inc
fiadds
xchg
clc
and
lsl
sub
inc
fcmovnbe
cmc
and
inc
shrb
adc
stos
or
dec
push
imul
repnz
daa
call
mov
repz
mov
add
mov
lods
das
sbb
imul
es
cmpsb
pop
push
stc
mov
aad
pop
sbb
shlb
popf
inc
jno
jge
adc
push
loopne
nop
faddl
cmpl
xchg
lods
jnp
jg
xor
mov
test
cld
scas
mov
call
push
data16
sti
shrb
cs
insb
int
in
std
movsb
pop
arpl
test
push
jb
xchg
cmp
pop
mov
pop
test
fstpt
lret
fcomps
push
icebp
sarb
repz
push
lahf
cmp
xchg
add
ret
push
xchg
mov
xlat
repnz
int3
fst
decl
dec
stos
or
lds
pop
push
roll
or
pop
inc
iret
ret
pop
insb
jp
cltd
dec
xorl
push
cmp
popf
pushf
mov
or
add
pop
lret
hlt
imul
cmpsl
pushf
loopne
pop
sarb
and
mov
mov
push
ja
or
push
rolb
les
iret
out
mov
mov
cmpsl
out
andb
cs
lods
in
mov
out
mov
jbe
jmp
loop
sahf
scas
sbb
sbb
mov
insb
dec
out
in
cmove
in
sbb
sub
mov
push
mov
jmp
es
movsb
mov
out
jmp
ja
jne
inc
sbb
inc
sub
shlb
fnsave
push
adc
fiadds
arpl
cld
rorb
mov
in
push
push
out
dec
int3
fs
or
adc
pop
cmp
xor
cmp
popa
adc
xor
sahf
push
xchg
out
and
xor
aam
sbb
icebp
jnp
test
addr16
insl
sarb
jno
mov
xchg
pop
in
mov
jnp
xor
cmp
sar
subb
test
sbb
jno
test
xchg
mov
push
pop
addr16
push
jmp
repz
in
aam
int
enter
sahf
ret
ret
ja
lods
or
push
daa
push
leave
bound
sub
ret
pushf
aas
outsl
enter
movsl
adc
pop
loopne
and
imul
dec
pop
mov
or
and
fidivrl
shl
xchg
mov
jns
std
cmp
or
add
push
aas
sub
scas
inc
jno
into
sub
xor
jl
pop
mov
out
in
into
dec
gs
jae
sbb
in
pop
loop
pop
xchg
jmp
mov
push
repz
aaa
mov
xor
adc
sub
mov
dec
repz
cmpb
cltd
outsl
cltd
jno
out
test
pushf
push
dec
mov
adc
dec
or
inc
pop
pop
dec
jo
scas
repz
fwait
test
xchg
std
rcl
rcr
push
adc
adc
sub
hlt
ja
faddl
rclb
xor
stos
adc
inc
je
sti
lock
cmpsl
insb
ret
sahf
push
jb
dec
pop
sahf
dec
int
sub
pop
lret
ljmp
xchg
out
mov
or
sti
aaa
inc
inc
mov
imul
cmp
icebp
in
inc
jecxz
insb
cltd
xor
sub
das
and
cmp
add
fs
dec
ret
test
fcoms
mov
jns
add
push
hlt
pop
dec
push
jmp
aaa
inc
mov
sbb
rcr
rol
mov
pop
pop
decl
aas
xchg
mov
xchg
outsb
cs
mov
cmp
push
popa
jp
cltd
adc
push
pusha
ret
or
or
mov
pop
xchg
cltd
mov
inc
jb
fcmovb
push
popa
xchg
mov
xchg
pop
mov
xchg
adc
ret
cmp
arpl
das
add
psadbw
xchg
jp
stos
pop
cwtl
stc
mov
add
jle
mov
cvttps2pi
stc
loop
and
pop
dec
sub
stos
xchg
out
rolb
jg
int
adcb
push
jns
push
hlt
sahf
or
fbld
push
int3
and
mov
cmpsb
jg
adc
mov
outsl
ret
sub
push
cmp
jo
inc
ds
or
add
and
cmc
xor
incl
leave
pop
stos
cltd
ret
or
sub
icebp
pmaddwd
jecxz
jp
das
jae
xor
outsl
loope
int
cmp
mov
ljmp
mov
xor
xchg
insb
jb
aaa
stos
decb
sub
movsl
ss
mov
lcall
icebp
out
cmp
jns
pop
xor
dec
mov
adc
mov
xchg
mov
cmp
pop
pop
mov
popl
dec
jo
ret
ficomps
or
test
cmpsl
xor
mov
jg
inc
jmp
out
mov
lret
sbbl
pushf
mov
je
lret
lahf
add
sbb
dec
sbb
mov
in
aad
lds
mov
movsl
or
clc
gs
test
mov
add
dec
aad
lds
mov
movsl
or
clc
gs
test
mov
add
dec
push
pop
lds
mov
and
jmp
push
flds
xor
cwtl
add
dec
aad
lds
mov
movsl
mov
pop
iret
bound
xor
mov
pusha
cli
cmpl
mov
mov
mov
ja
sub
sbb
or
push
imul
xchg
test
ret
stc
shr
jecxz
repz
cmp
sub
xor
inc
adc
jae
cmpl
mov
stc
shr
jecxz
repz
add
adc
push
imul
sub
lret
shl
rorl
push
or
fcmove
pop
jmp
pusha
jno
cmp
jns
shlb
push
or
das
and
ds
stc
push
insb
call
dec
cmp
insl
mov
pop
lea
jnp
sbb
icebp
ret
sub
movsb
faddl
pop
jecxz
fisubrl
fdivl
aad
xor
ret
pop
ret
call
add
add
scas
popf
adc
xchg
arpl
dec
jl
out
leave
leave
mov
jno
pusha
loop
bnd
xor
mov
imul
mov
cmp
adc
sbb
js
push
sub
fndisi(8087
jbe
jg
push
cmp
sbb
xchg
test
ret
stc
shr
jecxz
repz
add
adc
and
xor
inc
jns
imul
cli
call
scas
pushf
lcall
inc
pop
sub
pop
jge
cmp
or
and
pop
sbb
int3
repz
mov
mov
lods
data16
push
bound
insb
es
pop
push
ljmp
in
ret
xlat
shr
jecxz
repz
add
adc
and
xor
inc
jns
imul
xchg
test
ret
stc
shr
jecxz
repz
add
adc
and
xor
inc
jns
imul
rcrl
xchg
dec
sbb
in
mov
fs
pop
popa
insb
lret
jmp
jecxz
inc
pcmpeqb
cmpb
cmc
mov
loope
addb
and
sub
enter
jae
cmp
les
nop
or
int3
arpl
xor
mov
push
xor
jmp
cmp
jnp
push
pop
scas
loop
fisubrs
cmpsb
and
and
inc
sbb
imul
jecxz
mov
cmp
dec
mov
mov
or
xor
mov
sbb
fadds
push
cmp
xor
jae
std
out
push
mov
nop
adcb
adc
pop
pusha
mov
loop
enter
inc
insb
sub
add
pusha
dec
cli
lcall
dec
push
cmp
dec
mov
out
xlat
mov
rorb
sub
ljmp
xor
popf
mov
outsb
scas
jo
test
iret
jecxz
lea
cmpsb
push
dec
or
cld
cmpsl
lahf
popa
adc
cld
mov
inc
loopne
test
sbb
xchg
in
ljmp
insl
jo
push
inc
gs
mov
sahf
outsb
fcoms
fwait
jne
pop
in
jg
mov
lods
dec
xchg
add
lock
aaa
push
mov
stos
mov
movsl
mov
sub
pop
jne
lret
iret
ss
pop
cs
test
sub
adc
addr16
mov
arpl
fcmovnb
mov
sub
pop
cmc
jl
es
inc
lret
inc
jb
dec
dec
xchg
scas
inc
mov
jg
ret
repz
mov
or
sti
mov
das
jne
daa
je
lret
add
inc
push
ja
das
mov
in
jb
inc
mul
iret
sbb
daa
test
cld
cmp
pushaw
in
lret
mov
and
enter
xor
pusha
cwtl
enter
cli
arpl
mov
mov
cmpsb
icebp
mov
pop
pop
mov
int3
fnstsw
hlt
lods
push
scas
dec
adc
fisttpll
enter
dec
pusha
je
rcll
xchg
insl
sub
mov
or
adc
outsb
mov
sbb
mov
mov
mov
fists
or
or
or
cltd
pop
sbb
pusha
ret
xchg
fcmovne
mov
push
xchg
adc
pop
or
cmp
sbb
pop
cmp
xchg
dec
lahf
rorl
jle
and
jle
adc
aad
aad
push
xchg
in
push
out
and
cmpsb
xor
insb
arpl
cs
fcoms
pop
jg
add
addb
xor
inc
dec
in
cmp
sbbb
sbb
cmp
cmpsl
pop
jmp
leave
out
hlt
rcll
les
jle
pop
test
or
inc
popaw
dec
mov
popa
and
out
fidivs
pop
sub
cmp
mov
ja
cltd
xor
xchg
adc
inc
and
outsb
sbb
fwait
push
or
adc
imul
imulb
stc
jmp
out
icebp
ficompl
and
repz
adc
ljmp
xchg
leave
lret
nop
dec
loop
insl
xchg
mov
insl
inc
icebp
sbb
xchg
push
mov
or
jb
fcoml
xlat
nop
gs
sbb
imul
sbb
out
mov
fsubl
into
mov
inc
rcrb
cmp
nop
mov
adc
xor
es
test
out
mov
and
mov
or
cmp
sarl
mov
dec
jmp
or
mov
lret
ja
lds
andb
fistpll
aaa
jl
sbb
insb
mov
into
adc
pop
push
outsb
sbb
lock
test
imul
sub
test
arpl
pop
mov
leave
pusha
rep
insl
icebp
call
bound
addr16
cli
push
call
xchg
cmp
fisubs
xchg
jns
and
lahf
jns
int
fcoml
xor
pop
repz
mov
push
jb
cli
xor
and
pop
call
push
insl
xor
call
push
xor
inc
xchg
lock
dec
fucomip
imul
pop
gs
or
push
dec
mov
stos
test
andl
insb
cmpsb
mov
inc
outsl
sbb
cmp
xchg
sbb
adc
sub
cmc
subl
cltd
mov
clc
jae
xchg
add
pop
mov
jnp
mov
idivb
icebp
repnz
js
cmp
mov
es
mov
mov
adc
in
xchg
inc
leave
cmp
xchg
std
mov
mov
xchg
add
dec
cmp
test
stc
cmpsb
nop
push
add
in
xchg
fsubs
add
jns
les
push
and
sbb
jne
lcall
mov
mov
pop
inc
and
xchg
icebp
or
push
mov
jnp
xor
movsl
adc
add
mov
arpl
cmp
sti
sbbb
loopne
mov
test
sub
adc
inc
ror
cltd
pop
and
sub
fsubs
jmp
xchg
cmp
dec
push
pop
xchg
and
test
and
sub
lds
scas
mov
mov
mov
adc
mov
xchg
dec
movsb
js
hlt
and
fucom
pushf
fidivl
xor
repz
sbb
gs
xchg
jmp
rcrl
mov
fsts
mov
sahf
push
or
shrb
out
fbld
stos
out
mov
and
xchg
push
ret
jnp
add
fs
jb
in
xchg
cmp
mov
and
cld
lods
adc
cmc
sahf
sub
shll
adc
xlat
das
jnp
subl
lods
adc
push
loope
cmpsb
aaa
nop
pop
dec
push
dec
jb
sub
xor
xlat
fisttps
or
cmp
or
ret
fcomp
insl
adc
mov
call
dec
xchg
dec
rol
fwait
mov
adc
std
shlb
out
cmp
cld
inc
decl
jns
sbb
mov
dec
imul
fisubl
xor
add
movsb
xchg
mov
lcall
push
and
adc
mov
adc
sbb
fsubp
shr
insl
mov
adc
cld
idivb
lods
cs
clc
cmpsb
lea
shrb
cmc
dec
repz
dec
xlat
repnz
mov
lcall
pop
mov
dec
dec
or
mov
les
jp
fimuls
mov
xchg
pop
jle
cltd
push
push
stos
inc
mov
xor
mov
ds
ds
imul
inc
push
or
shr
push
into
mov
mov
movl
adc
xor
adc
push
lcall
mov
push
xor
cs
sub
stos
xchg
dec
lock
cmp
push
lret
xchg
int
dec
out
mov
mov
mov
dec
aam
cs
or
push
or
fld
in
test
push
test
pusha
cmp
ss
xchg
in
aaa
popa
lea
sub
dec
jl
fstps
inc
and
jmp
popa
mov
cmc
lret
mov
cmpsb
fmull
imul
inc
outsl
pop
cwtl
stc
mov
jae
dec
inc
aam
pop
xor
cmc
shrl
clc
fadd
mov
stc
xchg
adc
scas
xchg
dec
cmp
int3
mov
xor
inc
ror
or
mov
mov
aas
mov
sti
dec
loopne
cmc
jbe
outsl
sbb
and
jecxz
or
pop
arpl
mov
out
sti
push
shrl
sbb
sbb
xchg
outsl
scas
bound
jp
inc
sbb
mov
and
sub
jmp
ret
xchg
hlt
xchg
pop
arpl
sbb
ret
adc
das
daa
sbb
jle
ficompl
data16
pop
push
push
adcl
cmp
sbb
adc
mov
add
xchg
movsb
sbb
aad
inc
or
xor
lock
cld
xchg
movsb
scas
in
in
inc
and
add
aad
push
nop
jne
mov
lock
or
lds
pop
pop
xchg
daa
jle
cmp
imul
mov
lret
and
mov
adc
lods
jnp
cmpsl
push
mov
and
jnp
dec
sbb
add
aam
adc
test
pop
mov
jg
xchg
pushf
add
loopne
daa
insl
data16
cmc
movsl
rcll
cmp
pop
dec
cmc
das
rorb
and
dec
dec
int
and
jl
mov
lret
divl
mov
jns
mov
loope
gs
and
xchg
movsl
cmp
dec
jnp
testl
bound
repnz
imul
cmp
pop
and
loopne
jmp
mov
inc
adc
cmp
mov
push
adc
cwtl
cmpsb
sub
js
shll
stos
mov
push
jo
enter
icebp
add
insb
inc
mov
push
sub
pusha
das
arpl
movsb
leave
pushf
mov
xor
arpl
in
jae
es
imul
xchg
push
cmp
loopne
xor
fwait
adc
inc
push
hlt
dec
stos
inc
xor
shl
lods
lods
repnz
call
repz
mov
ret
cmc
adc
loop
adc
in
insl
sarb
mov
cltd
cmp
mov
mov
adc
dec
adc
popf
and
rol
xor
mov
scas
push
mov
or
mov
mov
push
add
jne
inc
es
push
xor
jnp
or
aam
fisttpll
je
ficoms
xchg
lods
push
mov
inc
pop
inc
loope
outsl
into
mov
loopne
xchg
fldl2t
cwtl
imul
mov
clc
call
lret
ds
cbtw
int3
xchg
insl
inc
mov
popf
repz
clc
ja
or
repz
icebp
std
mov
clc
adc
int3
or
mov
mov
repz
addr16
mov
mov
inc
push
push
adc
test
stos
and
mov
ljmp
movsb
sbb
push
mov
andnps
push
mov
aas
shl
ret
repnz
jo
jb
xchg
xchg
sub
adcb
fidivrl
pop
jge
pop
rclb
fsts
fmull
cmpsb
push
sub
mov
out
xchg
xor
mov
inc
bndstx
and
adc
inc
lods
pop
mov
mov
push
jns
pop
dec
lea
popfw
insl
pop
sub
mov
cmp
jno
stos
call
ret
imul
pop
mov
mov
clc
jl
adc
movsl
add
pop
add
jge
std
mov
divb
test
mov
mov
pop
out
cmpsb
mov
ds
jp
inc
lds
fnstcw
loopew
into
cltd
into
mov
mov
popa
movsb
mov
lods
xchg
test
add
mov
inc
pop
lods
push
cmpsl
aad
cmc
inc
cmp
push
mov
mov
sub
mov
sub
add
xor
jne
sub
cmp
pop
jo,pt
not
sub
in
mov
push
add
mov
nop
jmp
cwtl
mov
aad
imul
xor
mov
mov
ret
jl
sarl
fstl
push
je
and
xlat
hlt
jg
mov
shll
fisubrl
inc
movsb
in
mov
add
or
int3
testl
std
mov
pop
nop
mov
pusha
cmp
and
sub
in
mov
mov
or
dec
outsl
mov
adc
push
push
ja
push
scas
cwtl
pop
imul
mov
stc
out
in
fistps
jb
pusha
mov
repnz
cltd
mov
push
add
xlat
mov
rorb
paddb
and
stc
mov
in
sub
xchg
movsb
ds
add
scas
pop
sbb
loope
out
shlb
push
enter
ret
add
push
out
fcomps
jp
sub
repnz
jmp
push
div
sub
adc
pop
xor
call
dec
xlat
std
dec
and
mov
into
lock
mov
hlt
jnp
imul
in
out
sbb
xchg
and
mov
cli
dec
push
inc
lock
sbb
sub
xchg
arpl
sub
enter
inc
pop
add
in
out
xchg
out
std
cltd
and
and
jo
xchg
shl
jnp
push
shl
sub
push
pop
sub
lods
mov
dec
rclb
pop
mov
ja
add
mov
push
xchg
mov
aam
sarb
aas
int
jg
out
jno
addr16
aam
fisubs
inc
lret
stos
cmpsl
push
inc
lret
hlt
in
sbb
mov
out
mov
push
cmpsl
dec
pop
lock
xchg
js
adc
mov
mov
roll
shl
popa
aas
mov
pop
aas
fisubrl
jl
sub
fcmovbe
jno
sbb
inc
aad
adc
stos
mov
jae
and
or
bound
inc
shrb
inc
pop
ficompl
adc
jg
add
lcall
sbbl
ret
sub
push
inc
repnz
dec
pop
call
inc
jge,pn
pop
xchg
jo
lock
pop
sub
mov
popf
pop
mov
jmp
cmp
shll
stc
or
lcall
hlt
xchg
push
fcomps
popa
jae
insl
shrl
pop
jns
push
cmp
mov
sahf
ljmp
xor
mov
rcrl
fstps
loopne
test
or
js
cld
cmp
add
mov
adcb
imul
xchg
mov
fsubr
mov
outsb
mov
es
in
cmp
lret
lds
sahf
lock
faddl
cmc
add
mov
dec
or
mov
fidivs
cmp
add
notl
pop
and
jp
cltd
mov
std
repnz
popa
mov
pop
loop
outsb
mov
mov
mov
adc
cmp
push
mov
cmpsb
mov
lret
ret
call
adc
repz
add
mov
jmp
lods
dec
ljmp
push
ds
inc
in
ss
cmp
dec
insl
mov
daa
pop
pop
and
pop
insb
arpl
std
out
cmpsl
cmp
jbe
push
aaa
aas
shlb
and
movsl
push
inc
pop
xchg
jp
mov
push
popw
stc
mov
cmp
sahf
int
fwait
and
std
in
mov
xchg
test
insl
cmc
movsb
mov
or
cmp
xchg
or
mov
sbb
out
or
xor
adc
jbe
xor
dec
and
dec
outsb
pop
and
cltd
pop
popf
enter
sub
fwait
aad
imul
ss
inc
xor
stos
aaa
popf
lcall
cmp
mov
xor
int3
or
jmp
sti
jb
repz
and
loope
outsb
insb
addl
loope
loope
adc
sub
sbb
add
cmp
jo
and
test
lahf
nop
adcb
lret
mov
hlt
jge
push
add
jmp
and
movsb
mov
hlt
cmp
dec
pusha
add
dec
adc
xchg
lock
dec
pop
push
dec
jae
aam
cmpsb
push
test
ds
add
filds
add
orb
mov
inc
std
loope
add
insl
mov
sbb
pop
leave
push
cmc
xor
pop
push
xor
sbb
mov
and
test
and
dec
and
in
lds
or
or
or
dec
dec
xorl
pusha
testb
out
ss
mov
negb
aaa
fdivl
lea
add
mov
fidivl
push
fldcw
dec
or
sub
pop
shll
mov
push
bound
imul
add
movsl
inc
inc
pushf
add
mov
adc
in
cs
vunpcklps
mov
xor
jge
sub
sbb
shlb
lods
adcb
icebp
or
movsl
cli
ret
popa
mov
fwait
ret
les
cmc
mov
sbb
pushl
das
stc
test
fcomps
push
xchg
adc
ds
ljmp
scas
inc
adc
mov
orb
js
push
lcall
lahf
sarl
incb
push
mov
adc
lods
sbb
pop
xchg
push
mov
rol
stc
bound
les
push
jb
ret
pop
mov
xchg
out
push
jns
mov
fdivs
jns
int
loope
mov
mov
notl
insl
jp
pushf
stos
dec
push
rcr
or
fs
pop
xor
test
sub
push
lcall
jle
pop
cltd
mov
adc
or
add
in
xor
popa
fs
and
inc
jns
mov
jne
and
mov
int
mov
popf
jns
dec
pusha
jns
xchg
sub
adc
dec
xchg
in
and
pop
xchg
xor
in
lret
lret
add
test
jns
dec
sarl
int
mov
loop
aam
cmp
cli
jae
inc
shll
movb
stos
xchg
lods
pusha
mov
cwtl
js
lods
push
or
dec
hlt
out
cmp
dec
sbb
in
cmp
dec
stos
or
gs
rclb
jmp
pusha
add
xchg
mov
xchg
push
sub
shl
divl
pop
ljmp
sub
lret
xchg
pop
xchg
dec
xchg
xchg
gs
adc
mov
sahf
sbb
out
adcl
js
push
ja
bswap
add
cmpsb
dec
or
outsl
cmpsb
add
sub
std
xchg
mov
outsl
sbb
outsl
xor
mov
add
lods
push
push
arpl
xchg
clc
pop
push
outsl
pusha
scas
rcrb
add
rcrb
fidivrs
mov
cmp
in
cmpsl
cwtl
stos
ss
dec
dec
cmc
mov
aas
mov
and
mov
jns
enter
sbb
std
push
out
shlb
mov
push
mov
wrmsr
jo
mull
repnz
rcrb
hlt
push
and
std
fidivs
add
mov
ljmp
arpl
popa
fs
jecxz
aad
pop
pop
stos
sub
inc
push
dec
jecxz
daa
push
mov
out
clc
pop
pop
xchg
cmpsb
xor
add
mov
inc
mov
movsb
call
loopne
addr16
hlt
and
push
es
outsl
cmc
or
jne
xchg
jbe
jp
sbb
adc
push
negb
cmp
jl
out
sub
test
add
arpl
sbb
inc
or
jmp
call
add
or
sbb
ss
lcall
lods
mov
call
js
sbb
or
adc
push
in
int
adc
leave
notb
sbb
fisttpll
xchg
xlat
push
stc
shl
sbb
pop
or
adc
mov
ss
out
cli
pushl
mov
or
jno
fnstsw
pop
mov
aad
test
arpl
sbb
xor
mov
pop
and
or
push
dec
gs
enter
out
sub
mov
cmpsb
xor
pop
sub
pop
mov
shrb
nop
mov
push
cmpsb
outsb
mov
ret
repnz
ss
jnp
ss
inc
dec
sbb
xor
fldln2
mov
sub
in
ljmp
add
hlt
in
cmp
or
xor
xchg
popa
cmpsb
add
dec
sub
fimull
push
ja
sub
loop
sub
rcll
repnz
jo
mov
das
xchg
movsb
call
pop
push
mov
mov
and
mov
and
pop
addb
and
icebp
lods
pop
xor
xchg
sub
jmp
icebp
mov
gs
push
je
popf
call
inc
mov
loop
sub
jecxz
sbb
movsb
add
and
mov
repnz
mov
inc
push
push
rclb
cmp
adc
fisttpl
hlt
cs
fs
pop
xchg
addl
movl
imulb
inc
scas
pusha
mov
mov
dec
sti
and
test
inc
sbb
mov
pop
div
lods
arpl
icebp
lret
sub
out
nop
and
sub
idivl
pop
cmp
popa
aam
fcoml
cmpsl
add
mov
pop
dec
test
add
and
pop
ljmp
pop
mov
cli
imul
jmp
mov
jp
lods
pop
into
inc
xlat
jge
repz
negl
sub
imul
mov
js
xchg
out
mov
sbb
shr
jecxz
repz
add
adc
and
xor
inc
jns
imul
xchg
test
ret
stc
shr
jecxz
repz
add
adc
and
xor
inc
jns
imul
xchg
test
ret
stc
shr
jecxz
repz
add
adc
and
xor
inc
jns
imul
xchg
test
ret
stc
shr
jecxz
repz
add
adc
xor
fistl
dec
mov
pop
push
shlb
imul
std
mov
mov
pop
push
or
cmp
int
std
call
loop
popf
test
mov
pop
jo
pusha
jg
xor
and
ret
cmp
mov
orb
mov
push
cmp
xchg
jmp
into
and
das
mov
adc
mov
leave
cmpsl
dec
adc
sbb
lods
insl
lods
jg
call
push
in
fmuls
xor
ja
push
lret
pop
pushf
and
lahf
inc
daa
pop
shlb
jo
lods
fs
test
mov
dec
mov
or
cmp
inc
xor
fstp
pop
add
cwtl
bound
inc
mov
mov
ds
clc
imull
add
and
push
int
sub
std
jo
cwtl
pushf
push
mov
mov
inc
testl
shll
push
mov
adc
bound
dec
inc
lods
push
or
and
lock
loope
nop
mov
mov
pop
or
jns
jb
inc
cmp
mov
mov
std
jmp
daa
or
sbb
or
pop
bound
sub
push
mov
mov
rcr
int3
sub
cmp
sbb
enter
call
lea
mov
push
or
cmp
call
lea
mov
xlat
into
or
xchg
jp
sub
jbe
or
in
jae
int3
loopne
sarl
inc
popf
inc
scas
push
dec
and
push
xchg
into
test
inc
scas
jb
cmpl
cs
sbb
push
pop
or
sbb
cmp
sub
dec
test
fcompl
ljmp
pusha
les
xor
aad
sub
inc
lds
mov
cmp
pop
cmc
stos
xchg
push
add
in
cmpsb
aad
mov
clc
push
inc
sub
and
sti
push
and
adc
xchg
es
xor
fs
sbb
outsl
sub
fidivl
pop
pop
lods
loope,pt
adc
mov
insb
lahf
jb
mov
inc
xchg
lods
cmp
and
xchg
fstl
fbld
xor
cmpsb
shrb
mov
mov
fldlg2
inc
inc
pop
out
in
inc
jp
or
iret
test
ljmp
pop
insl
loop
arpl
mov
fnstcw
mov
hlt
movsl
xorl
inc
or
ds
cltd
push
dec
dec
sti
hlt
lcall
cwtl
mov
stos
and
mov
adc
or
push
outsb
stc
cmp
sbb
outsl
sub
cmp
xlat
jno
jle
sbb
xor
sti
sbb
fs
ds
xor
cmpb
push
cli
loopne
scas
fcmovnb
mov
adc
push
add
mov
jecxz
sarb
cmp
cmp
les
jge
xor
out
in
jmp
imul
pop
gs
in
lea
es
daa
sub
pop
add
push
leave
mov
lods
sahf
mov
ljmp
dec
repnz
add
stc
jge
aad
jb
scas
sub
sahf
inc
lods
lds
std
add
and
jl
cwtl
xor
jg
jle
sbb
inc
loopne
jecxz
push
and
mov
cs
or
mov
sub
ds
repz
lock
add
test
add
push
popa
xchg
cmpl
insb
ja
sbb
push
test
orl
jae
pop
ret
xchg
cmp
adc
inc
push
test
movsl
aam
dec
xchg
and
mov
fxch
rclb
cmp
xor
sbbl
fdivs
add
xchg
or
sbb
je
or
bound
cmp
and
movsl
test
inc
lods
imul
pushf
xor
pop
push
sti
xor
and
xorl
push
lahf
add
pop
jp
ja
aaa
ret
or
aas
rcll
mov
test
xorl
sub
dec
rorb
rorl
sbb
mov
push
rcrl
mov
sbb
jl
test
insl
or
add
jbe
sbb
xchg
pop
pop
fsubrs
xor
pop
jp
or
xchg
mov
insb
rcl
sti
movl
push
cmc
inc
lds
and
pop
mov
dec
jbe
call
dec
aam
jmp
sbb
dec
mov
jmp
xchg
stos
mov
xor
sub
nop
dec
rclb
hlt
pop
das
cmp
jg
fiaddl
jp
fisttpl
mov
out
mov
popf
mov
lcall
mov
add
cmc
or
or
push
add
lock
push
add
shl
shr
loope
xchg
jge
push
out
ss
pop
outsb
push
nop
xor
fwait
lea
in
stos
cmpsb
mov
sbb
and
fmul
push
push
bound
adc
push
xor
pop
mov
xor
push
mov
stc
stos
test
in
push
sbb
adc
daa
mov
cs
and
sar
popa
je
ds
adc
sub
int
dec
mov
pop
cmpsw
cli
or
push
pop
add
xchg
ret
fmull
test
movsb
xchg
mov
mov
xlat
xor
cmp
stos
jne
insb
sbb
cltd
jle
pop
sarl
push
and
cmp
push
pusha
fwait
pop
lods
push
mov
leave
xor
in
cmc
lea
mov
fcmovbe
out
mov
inc
sub
inc
mov
fisttps
jno
jge
mov
test
inc
fwait
imul
hlt
xchg
xor
into
xor
mov
jae
jnp
mov
sti
insb
sub
xchg
test
je
mov
mov
popa
push
push
mov
xchg
mov
lahf
and
mov
push
popa
mov
ljmp
not
nop
xor
mov
xor
jns
fmul
loopne
xchg
sar
mov
cs
fisttpll
mov
mov
xchg
xchg
jns
sbb
inc
out
test
add
xchg
cmpsb
inc
jbe
mov
or
lds
inc
xchg
cmpb
fdivrl
test
add
pop
jmp
jns
mov
jecxz
mov
rcr
imul
jb
pop
les
mov
aad
popf
jno
inc
xchg
push
arpl
cltd
push
dec
ja
adc
jno
arpl
shl
jbe
jp
dec
ljmp
jb
and
imul
sub
push
mov
add
stos
add
add
ret
push
repz
scas
loopne
pop
fmulp
push
in
icebp
das
call
adc
or
loop
cmpsl
test
sarb
sbb
cmpsl
pushf
addr16
jo
push
ja
xor
rorl
mov
sub
fadds
fcmovnb
mov
insl
rcrl
fistpll
or
jns
and
sarb
enter
in
jle
jb
jle
jecxz
faddl
jmp
ret
ret
pushf
test
enter
lods
xor
mov
js
rorl
push
ja
and
insb
xor
xchg
dec
repz
fucomi
and
adc
sti
in
insb
pop
in
fildl
ja
fists
test
add
inc
pop
cmc
std
push
in
inc
orb
mov
mov
and
mov
aam
clc
pop
ljmp
xchg
jl
les
popa
fstpt
js
clc
cmpl
xchg
loope
xlat
push
jne
push
scas
and
or
pop
cmp
aas
lock
scas
dec
rclb
popa
es
xchg
loopne
lcall
sub
push
pop
jg
cmp
jo
shlb
push
stos
das
xor
xchg
aad
fstpl
pop
sarl
mov
mov
xchg
cmpsl
icebp
lret
xlat
test
xlat
and
dec
test
sbb
lret
sbb
cmpsb
in
lods
xchg
int3
jmp
pusha
out
add
mov
incl
std
push
sbbb
adc
push
iret
gs
pop
push
pop
xchg
out
fnstcw
adc
je
adc
ja
push
fwait
inc
ljmp
nop
jbe
ljmp
mov
xchg
int3
testl
dec
or
or
push
shrb
dec
cmp
mov
outsl
cmp
pop
roll
lea
inc
int3
lcall
mov
or
jne
and
fdivs
pop
stc
cli
cli
cwtl
xchg
shll
and
mov
mov
and
shlb
push
inc
and
bnd
outsb
imul
lret
scas
jb
das
sbbb
xchg
addr16
and
icebp
lock
in
mov
add
mov
andb
pop
in
xchg
gs
insb
repnz
out
addl
inc
or
mov
sub
pushf
sahf
test
imul
sub
cmpsl
adc
cmp
pop
imul
aaa
adc
inc
out
add
inc
push
call
sbb
and
es
add
mov
cld
int
nop
scas
stos
push
jmp
pop
or
pop
add
and
loope
push
out
mov
mov
xor
das
bound
pop
or
stc
enter
in
mov
daa
push
int3
inc
mov
fwait
jecxz
enter
or
loope
or
out
and
test
popf
or
cmp
jge
sbb
xor
inc
jo
ss
and
in
push
divb
pop
out
orb
lock
mov
insb
imul
enter
fildl
dec
push
insl
push
cmp
jecxz
mov
lds
xchg
arpl
push
add
cltd
dec
scas
jmp
sub
jns
adc
adc
pop
inc
repnz
test
bound
test
mov
push
jns
out
cwtl
inc
fwait
mov
mov
out
stos
out
ss
and
xlat
cmp
jl
bound
mov
add
sub
scas
add
pusha
jp
jmp
xorb
or
pusha
dec
phaddd
add
fdivrl
fsubs
scas
jo
add
bound
movsb
aam
jno
or
cmp
stos
hlt
js
push
xchg
and
mov
mov
and
pop
push
idivl
je
push
or
out
push
repnz
notl
pop
data16
mov
pop
or
push
cmc
xchg
cmp
test
and
ss
sbb
dec
xor
sbb
xor
pop
cs
pop
scas
sub
push
rcll
aad
in
aam
loop
dec
xor
dec
shrb
pop
pop
clc
adc
jbe
dec
dec
sbb
scas
inc
out
inc
xor
clc
or
ret
cmp
push
push
pop
dec
sbb
cwtl
xchg
sub
movsb
lahf
idiv
or
loopne
push
test
mov
bound
stc
imul
ja
jmp
adc
push
arpl
push
sub
or
fwait
adc
loopne
ret
out
xchg
rolb
ja
dec
mov
out
and
or
pop
hlt
clc
sbb
jp
mov
dec
into
data16
dec
gs
movsb
sub
or
inc
cltd
and
mov
cmpsb
xlat
push
or
fcompl
adc
mov
cmp
insl
mov
xchg
push
iret
inc
arpl
scas
add
ljmp
cmpsb
mov
xlat
call
sarb
sub
imul
out
mov
ljmp
mov
dec
cmp
pop
jns
push
sti
aad
adc
dec
mov
fbstp
jnp
repz
pop
mov
loop
dec
cmp
sbb
sub
leave
xor
xlat
jl
xor
dec
hlt
inc
jbe
sub
repnz
xchg
and
cmp
push
xchg
inc
add
adc
jnp
pop
xlat
je
shlb
pusha
mov
cwtl
jb
ljmp
xor
cmp
loopne
mov
cld
inc
mov
inc
and
dec
popa
xchg
addr16
in
popf
orl
pushf
and
adcb
sbb
out
out
out
mov
mov
jbe
mov
or
inc
fwait
in
test
into
fldt
push
sbb
and
cmp
outsl
gs
adc
fsubrs
and
jl
in
pop
sub
imul
pop
test
and
fisttpl
pop
mov
cltd
jg
clc
lcall
lds
test
jge
in
cwtl
add
push
mov
jae
outsl
lahf
sub
mov
xchg
inc
xor
enter
push
addr16
out
ret
es
xchg
and
lods
sbb
mov
je
inc
insb
fnsave
push
rcr
sub
jo
ljmp
cmp
sub
xchg
jl
add
insl
popa
fmuls
pusha
and
je
jae
lods
sub
ret
cmp
xor
push
movsb
daa
push
pop
or
adc
xchg
shlb
push
jge
xor
lock
mov
aad
loope
cmp
xlat
das
shrl
cmp
cs
add
push
insl
inc
mov
in
or
out
mov
js
mov
or
push
gs
pusha
int3
jg
and
and
adc
xlat
jb
sahf
lahf
adc
mov
cmp
aas
call
iret
jne
and
out
out
rcrl
pop
sbb
stos
push
aaa
mov
dec
dec
gs
iret
lock
add
test
sub
andb
les
pop
imul
or
lock
repnz
fbld
in
sbb
xchg
dec
mov
jno
addr16
mov
sub
mov
xchg
pop
ja
shll
hlt
dec
in
std
jp
fucom
push
cld
dec
sbb
leave
aas
nop
aaa
sbb
mov
lods
xchg
movsl
sti
sub
pop
nop
pop
scas
nop
addr16
sub
out
mov
stc
pusha
addr16
push
push
in
leave
popl
pop
cmp
pusha
mov
repnz
insl
pop
adc
dec
dec
jno
or
inc
and
stc
rorb
out
frstor
out
xchg
pop
push
imul
outsl
and
push
sub
popf
insb
dec
cmp
or
pop
icebp
jge
push
call
add
ss
jno
and
cmp
ljmp
lret
icebp
push
fdivs
enter
ret
xlat
or
in
adc
in
xchg
cmp
push
lds
fildl
xor
sub
mov
xchg
das
loop
cmpsb
jg
addr16
xor
jmp
pop
jle
jg
sbb
insb
mov
enter
cmpsb
push
adc
sbb
mov
inc
popf
pushf
mov
push
xchg
xchg
mov
xchg
nop
lea
ds
or
shl
sbb
pop
outsb
mov
lods
loope
xchg
or
or
pop
mov
hlt
test
stos
outsl
in
loope
add
inc
sbb
xchg
pop
pop
mov
jb
xchg
js
cmc
mov
mov
in
enter
inc
nop
jp
into
mov
push
das
sbb
xchg
lods
pop
fsubrp
cli
cwtl
lock
shlb
mov
push
mov
mov
test
in
fdivrs
or
xchg
cmpsl
inc
ss
sub
pop
mov
lcall
add
fisubrl
add
and
rcl
mov
xchg
xchg
int3
hlt
mov
lcall
jecxz
popa
add
mov
leave
out
fwait
cmpsl
pushl
lds
jecxz
xchg
or
and
push
mov
cmp
lcall
cmpsb
jnp
fistpll
and
mov
add
movl
push
or
pop
icebp
adc
or
pop
mov
pop
or
outsb
je
jmp
int
push
ja
pop
ja,pn
and
fsubrp
popa
out
xor
xor
inc
mov
cmpsl
cmpsb
mov
xchg
adc
loope
jg
mov
mov
rolb
clc
scas
mov
adc
jno
jns
in
jecxz
mov
mov
loop
iret
ljmp
sbb
dec
push
sub
mov
sbb
iret
push
enter
cli
or
mov
push
clc
adc
test
adc
loop
cmpsl
and
dec
enter
cmp
xchg
test
pop
push
test
mov
dec
push
jmp
int
xor
rcl
sbb
shlb
lea
jl
mov
push
xor
mov
shll
xor
pop
jge
test
push
loope
lods
aam
push
cmp
pcmpgtw
repnz
mov
testb
jp
xchg
hlt
aad
xchg
xchg
call
or
mov
rcll
or
cli
inc
sbb
in
clc
xchg
adc
insl
imul
xchg
xchg
into
sbb
ficompl
sti
repz
xor
dec
mov
mov
es
cmp
ds
mov
out
xchg
dec
shr
ljmp
xchg
add
sahf
xchg
jno
adcb
das
in
xchg
stc
or
pop
fistl
mov
cwtl
mov
in
imul
ret
sbb
lret
mov
lret
test
sbb
arpl
cltd
push
push
cltd
inc
fisttpl
inc
shlb
movsl
sahf
pop
testl
mov
pop
mov
or
sbb
enter
dec
out
pushf
pushf
xor
cld
das
dec
push
ret
clc
mov
push
adc
icebp
add
test
in
lahf
jno
jns
in
pop
add
push
sbb
movsb
lea
lcall
jne
push
rcrl
xor
jmp
ret
add
popa
add
ja
xchg
dec
jbe
mov
dec
pusha
pushf
lret
arpl
add
cmp
movsb
ret
iret
push
dec
std
add
mov
sub
stc
jne
add
xor
sub
gs
dec
mov
clc
inc
push
shrb
adc
adc
stos
or
xor
cmc
push
mov
mov
adc
iret
je
inc
mov
or
into
movsl
mov
out
dec
es
mov
dec
aaa
fwait
xchg
mov
xchg
jnp
jecxz
jp
mov
mov
shlb
dec
mov
sbb
les
cmc
cmpsl
inc
jb
sbb
sbb
je
dec
jle
push
add
in
stos
icebp
inc
cs
loopne
cmp
daa
lahf
orl
out
sbb
outsl
lahf
mov
in
xor
lea
test
add
das
nop
in
sub
je
and
push
or
jnp
scas
adc
xchg
loopne
xchg
xlat
lret
xor
and
into
stos
sub
sub
push
push
popa
inc
inc
pop
sub
xchg
or
aam
xchg
test
imul
mov
test
sbb
push
shl
jle
lods
inc
popf
stc
test
into
push
and
test
push
dec
and
mov
xchg
fisttps
je
addr16
mov
adc
sti
icebp
jb
aaa
adc
pop
sbb
sbb
mov
bound
xor
jb
lret
mov
in
xor
push
incb
adc
nop
cmpb
xlat
out
sbb
adc
cld
mov
lock
movsl
sbb
int3
mov
ds
adc
push
call
jmp
mov
and
push
mov
insl
inc
mov
mov
push
xchg
aad
fwait
mov
test
jo
enter
adc
movsl
idivb
dec
loope
fldcw
dec
or
mov
mov
pop
cmp
cmp
paddq
das
and
shrl
loopne
sub
loope
les
jle
pusha
pop
fisubl
pop
pop
into
xor
out
fsts
lods
rcrl
icebp
sbb
cmp
or
lods
pop
mov
mov
rolb
mulps
jne
inc
out
insb
fwait
or
aad
ja
xchg
push
inc
mov
repnz
insb
ret
repnz
push
inc
pop
out
lds
cmp
bound
into
or
fistps
daa
sub
mov
shrl
sbbb
in
jge
and
add
adc
ljmp
cmp
pop
sub
and
sbb
jne
cli
hlt
addr16
stos
andb
hlt
mov
mov
cmp
jle
ljmp
jo
dec
push
incl
adc
das
and
xchg
lahf
mov
pop
xor
dec
pop
adc
pop
push
mov
outsb
lds
xchg
sub
sbb
xor
dec
xor
and
pop
adc
pop
icebp
pop
les
mov
sub
and
dec
stc
cmp
movsl
imul
imul
adc
push
in
sbb
outsl
xlat
mov
cmpsb
jg
clc
and
and
inc
aaa
pop
dec
push
stc
pop
aaa
dec
int3
fimull
rcr
aas
xor
std
push
sub
sbbb
test
aam
ficoml
mov
inc
neg
jnp
into
lods
fsubrp
fistps
lea
shll
or
dec
push
insl
adc
sbb
mov
icebp
or
icebp
arpl
pop
insl
inc
scas
lods
push
sbb
dec
dec
push
shrb
xchg
mov
add
xor
add
adc
cli
fisubrs
add
mov
rcll
push
xor
xor
out
fstl
loop
das
cmp
adc
fcompl
fildll
pop
jle
mov
fwait
sub
cmc
aad
xchg
loop
ficoml
dec
lds
jmp
mov
aaa
dec
adc
aaa
mov
jnp
outsb
inc
int
pop
add
mov
mov
dec
jae
arpl
and
mov
xchg
fldt
call
mov
jns
addl
cmc
addl
dec
and
mov
pop
stc
das
cmc
cmp
lods
fildll
arpl
arpl
add
push
jnp
xor
mov
pop
sbb
cmp
orb
movsb
jb
mov
push
mov
xchg
sub
iret
mov
outsb
xor
jb
mov
mov
add
clc
cmp
mov
pushf
mov
cwtl
dec
int
xor
jb
mov
push
imul
arpl
movsb
xchg
and
shrd
lods
popa
aas
pop
aad
push
add
push
xchg
inc
and
add
shll
loopne
lret
bound
pop
inc
ret
xor
mov
add
pop
bound
js
or
cmp
call
lea
mov
push
or
cmp
call
lea
mov
push
or
cmp
call
lea
mov
imul
sbb
aaa
xor
ja
in
clc
mov
add
inc
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
addr16
aaa
adc
aaa
popf
jns
fnstsw
xchg
xchg
std
mov
mov
inc
or
ja
pop
dec
pop
jge
insl
push
popf
xlat
mov
loop
xchg
std
cmpsl
in
mov
inc
or
ja
pop
dec
pop
jge
insl
aaa
popf
scas
hlt
roll
mov
rolb
daa
cmp
mov
xchg
xor
inc
inc
sub
insb
mov
lods
pop
jmp
inc
popa
or
dec
lcall
or
inc
sbb
and
pusha
out
push
add
mov
dec
cmp
idiv
xor
popf
mov
js
stos
cwtl
sub
jnp
lret
push
jb
and
pop
pop
clc
das
insl
xlat
adc
or
inc
and
jb
xchg
lea
rcr
mov
xchg
test
cwtl
sarb
mov
jbe
aaa
jne
fcmovnb
cmp
shl
mov
xor
loopne
repnz
fldenv
pushf
lock
insl
mov
inc
xchg
test
lea
insl
dec
roll
push
cmp
pop
dec
pop
jge
insl
aaa
popf
xlat
mov
xchg
xchg
std
cmpsl
in
icebp
pop
inc
jns
push
es
ss
inc
aas
arpl
inc
outsl
inc
popf
mov
into
mov
repz
sahf
aad
sarb
push
adc
inc
or
jo
sbb
mov
lods
movsl
fsub
mov
jecxz
push
or
movups
insl
aaa
popf
xlat
mov
xchg
xchg
std
cmpsl
in
mov
inc
or
ja
pop
dec
pop
jge
insl
aaa
popf
xlat
mov
xchg
xchg
std
cmpsl
in
mov
inc
sub
or
mov
repnz
xchg
xchg
jo
shr
xlat
mov
and
mov
lock
mov
pop
xlat
jno
push
inc
mov
mov
sti
test
enter
int3
fnsave
jae
ret
movsl
sarb
sub
cmp
push
scas
jge
inc
je
xchg
jne
mov
test
fcmovnbe
jae
rorb
lcall
mov
mov
mov
in
mov
out
jge
clc
leave
pop
xchg
add
push
stc
xchg
test
test
xor
or
jg
push
lea
out
mov
inc
cmp
pop
xchg
mov
mov
incl
imul
push
pop
flds
das
sub
sub
mov
enter
shlb
daa
add
pop
leave
push
sub
jae
mov
fstpt
mov
cld
jp
ss
jl
cmp
push
ljmp
dec
xchg
mov
mov
push
testw
es
scas
add
push
sub
inc
inc
mov
xchg
and
jp
inc
xchg
push
xor
lcall
push
dec
ret
push
add
fimull
sar
jp
dec
jle
sbb
mov
inc
mov
fildl
sbb
rcrl
sub
mov
sbbl
aaa
inc
push
dec
mov
mov
mov
pop
shll
xchg
xchg
push
cmc
loop
xchg
out
lret
xchg
or
ja
lret
mov
sbbl
dec
scas
push
jge
ret
push
sbb
nop
or
jecxz
mov
in
mov
sbb
fidivrs
sub
repz
test
mov
add
leave
data16
adc
push
pop
mul
sbb
movsb
jmp
cmp
mov
xchg
inc
cmc
xchg
cmp
mov
mov
repz
mov
sbb
jg
loopne
out
push
shl
cmp
divb
jl
das
adc
and
jmp
mov
add
arpl
and
or
sbb
mov
in
pop
mov
mov
push
popa
mov
pop
adcl
push
xor
xor
push
in
sub
sbb
es
mov
dec
ret
cmc
pop
or
mov
mov
sbb
fnstcw
mov
pushf
jnp
in
lcall
and
jae
in
xchg
mov
shlb
inc
sbbb
pminub
pop
dec
xor
movsb
sub
insl
repnz
cmp
mov
test
pop
mov
and
out
addb
pop
lods
mov
jmp
inc
cmp
fwait
rorl
outsb
xchg
pop
sbb
push
int3
shlb
mov
sbb
mov
out
jp
out
shll
fidivrs
adc
mov
and
movsb
sub
jbe
pop
jo
jge
mov
fsubrp
and
test
and
scas
and
icebp
dec
jne
sbb
ds
testl
jbe
lret
fwait
notb
pop
pop
inc
into
sbb
xor
ss
pushf
dec
sar
add
mov
push
daa
cmp
xor
aam
in
bnd
frstor
test
rcrl
and
sub
das
mov
mov
rolb
jecxz
mov
into
pushf
hlt
xchg
add
push
arpl
int3
xor
and
sbb
sarl
lret
scas
fiadds
lcall
or
sbb
iret
pop
mov
push
icebp
insl
push
ljmp
dec
cmpsl
and
stc
test
dec
or
dec
bound
shrl
jno
jge
add
mov
xor
enter
call
cmp
fwait
lret
jg
jae
cmpsl
aam
inc
fldenv
inc
xor
cmp
ficomps
push
aad
pop
mov
cmp
adc
out
cmp
mov
pop
add
jg
cmovl
aaa
in
sbb
bound
sbb
mov
inc
pushf
mov
shlb
push
xor
jno
or
mov
sbb
xor
out
data16
dec
cwtl
jge
mov
lock
pop
jmp
push
xlat
xchg
adc
sub
hlt
int3
push
rcl
icebp
stc
inc
add
mov
add
add
xchg
mov
jno
jns
in
inc
out
and
and
push
cmp
sbb
mov
shll
push
int3
pop
adc
outsl
push
repnz
aas
dec
scas
pop
js
jae
push
mov
and
das
pop
mov
insb
ret
mov
stc
int
xor
aaa
and
popf
cli
popf
pop
hlt
in
mov
mov
adc
mov
sbb
sahf
int3
cmp
xchg
cwtl
test
pop
cmp
pushf
test
sbb
mov
aas
inc
sti
jo
movsb
iret
xlat
jb
cmpsb
and
es
sub
pop
dec
or
push
jo
jmp
mov
add
sbb
addr16
ret
repz
pop
clc
ljmp
iret
mov
pop
iret
fidivs
adc
inc
xchg
push
repz
in
mov
or
lods
mov
xchg
sub
popa
cmp
test
loopne
mov
sub
jmp
popf
dec
test
mov
js
push
out
jg
mov
sub
je
in
inc
push
ja
pop
loopne
lods
in
inc
insb
pop
mov
cmp
lods
mov
dec
mov
pop
leave
jecxz
and
sub
movsl
insb
mov
hlt
jp
push
sbb
nop
xchg
adcl
lahf
mov
jmp
arpl
mov
shlb
cmp
inc
sbb
aas
sbb
es
ret
rorb
sub
fstl
stos
mov
or
cmp
mov
into
mov
mov
fwait
mov
shrb
sbb
or
mov
imul
loope
stos
dec
push
pop
xchg
fld
pusha
icebp
xchg
aaa
addl
adc
not
adc
inc
sub
cmp
push
jb
pop
in
outsl
bound
and
ljmp
loopne
jmp
test
pop
sbb
push
dec
sub
xchg
xchg
in
xchg
xchg
scas
in
call
lods
ljmp
out
push
or
lret
gs
scas
rol
imul
push
add
mov
xchg
cld
sarb
rep
scas
xchg
mov
int
xchg
sbb
jge
inc
dec
inc
lret
push
lret
sqrtps
inc
inc
mov
mov
scas
rolb
mov
pushf
cli
arpl
faddl
movsb
cwtl
inc
adc
ret
loop
jo
pop
out
in
and
inc
jg
adc
out
test
mov
cmp
mov
stc
sub
cmpsl
stos
pop
arpl
stc
in
cmpsb
arpl
stos
pusha
mov
mov
movsl
aaa
jg
jns
mov
inc
xchg
loope
mov
dec
xchg
jg
mov
daa
lea
xchg
mov
mov
or
add
mov
dec
inc
mov
or
js
sbb
cmp
pop
mov
hlt
mov
out
xor
in
loopne
cmp
rcrb
push
xchg
pop
adc
lds
scas
fstpl
push
pop
test
cli
mov
nop
cmp
mov
cli
jecxz
xchg
mov
cld
xor
ja
sub
call
scas
and
and
dec
repnz
adc
jp
cmc
rorl
pop
jmp
stos
fsubl
arpl
add
out
inc
call
out
cmpsb
lret
fs
mov
push
je
mov
aad
out
outsl
pop
and
jno
js
pop
xchg
iret
add
ss
in
inc
daa
and
lods
stos
imul
stc
int3
test
movsb
inc
scas
pusha
pop
sbb
imul
adc
mov
mov
mov
adc
popf
ret
ja
inc
bound
mov
mov
cmp
ss
nop
adc
or
pop
pop
push
sti
pop
loope
lahf
jb
fldt
xorb
pop
jbe
in
test
cs
jecxz,pt
cmp
inc
or
sahf
ss
scas
aas
shrd
xchg
jle
aam
stos
jmp
out
hlt
adc
cltd
loop
pop
shll
mov
inc
fidivs
shr
lea
xlat
arpl
jbe
test
lea
dec
mov
mov
scas
movl
dec
dec
shll
jae
push
stos
jno
adc
mov
gs
jmp
call
subb
test
cmp
es
in
ret
xlat
mov
mov
cmp
fsubrl
js
movsl
int
movsb
ficompl
pushf
lock
dec
pop
and
xchg
pop
jbe
inc
in
cmp
xor
add
xchg
fxtract
or
lcall
rcrb
lea
fisubrl
dec
int3
push
mov
into
inc
fmulp
mov
clc
mov
or
dec
xchg
je
sub
rcrl
sahf
rorb
pop
repnz
aas
stos
fwait
imul
ljmp
push
cmp
cmc
adc
cltd
cmp
out
sub
xchg
sub
test
or
lahf
xchg
jo
gs
ljmp
and
stos
sub
jl
ljmp
leave
je
repnz
jecxz
jo
ds
hlt
test
and
int3
or
push
out
xchg
outsb
addr16
push
dec
mov
xor
mov
push
xchg
sub
call
or
rcrl
sahf
ja
int
ror
pop
mov
in
sbb
in
je
xor
and
inc
push
pusha
pop
ficomps
rcl
pop
mov
sahf
daa
add
sbb
push
mov
or
addb
jae,pn
cwtl
gs
mov
jg
dec
das
or
xor
or
lret
sti
and
mov
jne
lods
loopne
add
add
mov
inc
inc
mov
pop
movsb
in
pusha
pop
mov
sar
xchg
jle
into
push
dec
and
repnz
fs
push
mov
cmpb
sbb
sub
stos
or
movsl
sahf
stos
lret
fsub
sbb
dec
aad
sub
idivb
xchg
jg
scas
in
adc
xchg
jae
pop
icebp
sbb
repnz
adc
or
es
test
enter
and
daa
mov
mov
inc
and
lock
xchg
loope
jnp
pop
sahf
or
jp
in
mov
add
mov
je
lret
cs
cmp
pop
adc
sub
lret
daa
ror
jne
aam
inc
enter
push
mov
pop
lcall
cltd
push
daa
cmp
xor
test
lret
add
lcall
adc
mov
insl
out
repnz
sbbl
ljmp
cmpsb
lret
xchg
outsb
fisubl
loop
loope
outsl
sub
dec
and
xchg
and
jns
loope
mov
call
test
stos
aam
out
jmp
push
fisubrs
push
push
test
gs
repz
pop
push
stc
cltd
add
subb
movl
or
jne
push
in
push
add
out
fisubrs
loop
fdivs
cmp
loop
popa
adc
clc
dec
push
loope
bnd
push
adcl
sbb
dec
push
fidivrl
nop
jmp
cltd
dec
sbbl
pushw
mov
adc
xchg
test
mov
lret
mov
mov
loopne
push
cmp
roll
sbb
and
add
xchg
rcrl
sti
pop
dec
push
push
shrl
pusha
int
loope
scas
fstpt
repz
addr16
push
insl
xchg
fistpl
outsb
insl
lods
ja
cld
lods
add
sub
mov
jg
cld
popa
sub
cmp
enter
in
pop
push
add
scas
pop
jno
push
add
mov
pop
fisubrl
jg
movsb
mov
loop
mov
adc
mov
push
in
in
mov
pop
push
stos
cmpsb
push
dec
push
and
int
add
inc
mov
adc
jno
vmovhlps
int
push
dec
loopne
adc
aas
js
dec
cvtdq2ps
jecxz
xor
xchg
pop
sti
ret
or
push
pop
lock
fldt
sar
push
aaa
inc
cmp
jb
or
je
adc
out
pop
jl
fbld
and
stos
xor
test
aam
roll
in
xchg
mov
push
nop
adc
cmp
ss
adcl
mov
out
pop
jg
inc
outsl
adc
and
inc
cmc
gs
xchg
xchg
in
lret
inc
pop
stos
in
fisttps
jne
pusha
sti
sbb
jnp
test
imul
cmpb
fisttpl
pop
push
loop
mov
ret
cmp
add
mov
push
push
je
dec
mov
bound
jmp
cli
push
and
and
fcomip
jb
mov
pop
movsl
cmp
outsl
rol
cmc
mov
popa
test
outsb
mov
int
xor
sahf
loopne
sub
xor
repz
rcll
jp
push
jl
inc
mov
mov
dec
and
mov
and
mov
mov
ret
mov
mov
pop
jl
mov
xor
sti
pop
insl
gs
ds
inc
pop
outsb
lock
es
pop
xchg
cmp
popa
adc
mov
mov
bound
dec
rcl
xor
cmp
test
cmpsl
adc
xor
data16
ficoms
call
icebp
sub
and
mov
inc
mov
in
and
test
imul
sbb
sbb
sub
inc
std
push
or
adc
mov
aas
cli
and
std
jl
xchg
sub
imul
ficompl
jp
outsb
mov
test
push
jmp
fld
cmp
add
cmpsb
sbbb
loop
mov
jecxz
fldcw
bound
notl
adc
jo
pop
add
js
adc
adc
sub
jge
xchg
xor
adc
aam
xchg
fildll
cmpsl
idivb
in
inc
xchg
notl
adc
stos
mov
mov
fsubrp
mov
fidivrl
adc
adc
xchg
inc
adc
ficompl
add
fcmove
push
imul
mov
or
imul
lock
std
sbb
jo
cmp
inc
inc
sub
in
xlat
test
adc
out
jp
jmp
cmp
ret
cmp
and
outsb
sbb
sbb
adc
mov
add
sarb
pop
aam
inc
lds
push
mov
sahf
or
mov
add
movsl
outsl
sbb
in
ss
out
sbb
movsb
data16
pop
insb
cmpsb
loope
loopne
sahf
cld
add
xchg
es
ret
xlat
pop
fnsave
and
insl
cltd
lret
pop
inc
mov
adc
or
mov
sbb
stos
into
es
pop
scas
sbb
cwtl
add
dec
add
cli
mov
jecxz
movsb
scas
lds
cmp
add
sub
xor
outsb
add
jle
inc
dec
jb
lock
inc
fs
xchg
cmp
stc
dec
mulb
div
ret
cmp
sbb
loope
add
mov
lahf
sub
shl
add
pop
jmp
pop
adc
rorb
adc
or
dec
add
and
pop
es
lahf
dec
adc
add
out
insl
fistl
pop
mov
pop
push
sti
popf
mov
pop
inc
sub
cmp
sub
cli
xor
add
sahf
add
mov
jno
inc
std
je
call
pop
xor
pop
fidivl
push
ja
in
icebp
mov
sbb
mov
mov
leave
fmull
aas
outsb
xorb
fabs
push
adc
cmp
add
imul
mov
push
stc
sarl
das
ret
xor
cltd
out
js
pop
fucomi
aaa
pop
into
pusha
lock
mov
inc
jbe
out
sarb
lods
bound
loopne
pop
xchg
lock
fcom
popf
dec
arpl
outsb
dec
pop
test
xlat
in
or
push
stos
cmpsb
das
aam
and
iret
sub
int3
pop
mov
jle
push
pop
mov
sbb
mov
cli
loop
ret
pushf
ds
cltd
repnz
xchg
fs
out
or
lahf
adc
filds
daa
arpl
in
xchg
sub
je
add
pop
fisubl
cmp
arpl
jmp
inc
leave
popa
pop
insb
pusha
notb
test
je
xor
cmp
mov
lds
in
pop
aaa
jo
imul
dec
xchg
arpl
rcrb
fcomi
and
push
or
imul
insb
add
pusha
push
ret
incl
popf
hlt
or
inc
cmpsl
or
dec
add
int3
inc
test
pop
mov
popa
rorb
fcoml
stos
int3
aam
or
stos
ret
je
xorb
mov
add
sti
mov
inc
push
sbbl
gs
inc
and
lret
and
xchg
cli
aad
dec
pop
or
js
cmp
fisttpll
ret
inc
aaa
sbb
jne
xchg
lock
jmp
mov
mov
push
xlat
xlat
lahf
in
in
xchg
dec
xchg
outsb
clc
insl
inc
call
imul
sub
loop
subl
jnp
arpl
scas
sbb
into
jmp
sahf
ja
test
pushf
cltd
mov
cmp
cltd
lahf
sub
add
pop
sarb
aad
sarb
sbbb
scas
sub
xor
movsb
lea
dec
sbb
pop
push
sub
jecxz
dec
cmc
xchg
jns
cmp
popf
cld
mov
fidivrl
fdivp
cmpl
xlat
pop
mov
movsl
mov
lds
jnp
cmp
or
cmpb
mov
push
xor
xor
idivl
cs
out
add
add
xor
fisttps
rol
and
sub
and
out
int
test
nop
icebp
jno
aaa
push
jns
cmp
xor
in
idivl
popl
pop
sub
shll
push
sbb
loope
insl
cli
sbb
cli
sub
dec
out
ret
and
test
addb
cmpsl
and
pop
fs
add
add
xlat
insl
add
push
arpl
jae
jb
mov
push
leave
rcl
jmp
lea
popf
adc
daa
sub
push
dec
pop
push
xor
ret
add
outsb
lds
xchg
fcoms
pop
xor
fwait
in
bound
mov
push
cmp
into
add
fsubp
clc
scas
nop
push
lahf
loopne,pt
push
mov
xor
adc
out
gs
test
vmwrite
mov
jp
jne
mov
shl
inc
repz
daa
and
loope
lock
push
sbb
icebp
jo
shrb
cmpsb
xchg
jge
aam
cmpsb
cmp
sti
mov
sbb
cmp
rcrl
ret
cltd
sbb
sub
sbb
sub
pop
sub
shlb
jb
out
or
aad
push
loop,pn
fsubrs
mov
xor
leave
outsb
es
fs
aaa
mov
mov
sub
in
inc
divb
les
dec
adc
inc
cwtl
cmpsl
hlt
data16
mov
mov
pop
fistl
jmp
jo
sbb
mov
jne
inc
call
pop
hlt
repnz
into
mov
xchg
shl
push
stos
call
movsb
cld
cmp
xchg
out
rcr
cmp
arpl
push
sub
shlb
popf
pop
in
cmpsl
js
push
stos
or
xor
sbb
ss
sub
outsb
sbb
fiadds
sub
mov
lds
imul
repnz
and
scas
sub
inc
pop
dec
xchg
dec
adc
into
popf
push
jno
pop
or
repnz
ljmp
sub
call
fistpll
ret
mov
cmp
je
jbe
add
inc
push
jbe
stos
cmp
sub
fistps
adc
dec
out
int
test
cli
mov
call
mov
and
sbb
stc
pop
aam
mul
pusha
mov
push
mov
and
dec
push
xchg
dec
fimuls
leave
jge
xor
mov
mov
int
adc
ja
pop
xor
or
test
loop
jo
push
incl
das
pushf
insb
les
jmp
outsb
or
inc
mov
std
push
aad
xchg
gs
cmc
jne
cmp
cs
test
imul
iret
clc
pop
fidivs
add
push
rcrb
cmp
sarl
enter
dec
cli
jno
sbb
jns
push
push
cmp
sub
pop
jge
insl
aaa
popf
xlat
mov
xchg
xchg
std
cmpsl
in
mov
inc
or
ja
pop
dec
pop
jge
insl
aaa
popf
xlat
mov
xchg
xchg
std
cmpsl
in
mov
inc
lea
addr16
pop
jge
in
aaa
popf
xlat
mov
xchg
xchg
std
cmpsl
in
mov
inc
or
ja
pop
dec
pop
jge
insl
negl
out
subb
popf
dec
outsl
or
sbb
sub
cmp
add
jnp
mov
dec
stos
ds
cs
por
sti
decl
out
sbb
sub
cmp
imul
ds
dec
mov
pop
jmp
sti
call
out
add
xor
and
jae
popa
jg
outsl
mov
pop
test
aas
cltd
pusha
xchg
popl
imul
lcall
insb
push
scas
push
mov
dec
adc
subb
mov
cmp
test
je
gs
sti
ret
stos
rolb
jp
out
jo
sbb
jo
pop
cli
es
aas
fwait
or
mov
subl
mov
call
and
dec
orl
outsl
imul
fcomip
jl
unpcklps
in
aam
dec
push
mov
adc
ja
rcpps
insb
leave
inc
lret
lcall
outsl
push
rorl
pop
shll
push
sub
push
ret
jecxz
cmp
jmp
out
or
xor
cmp
imul
pop
mov
mov
pop
icebp
psubd
dec
sbbl
pop
ljmp
scas
sub
dec
scas
arpl
jb
jnp
mov
pop
xchg
lret
adc
sub
into
sub
dec
mov
vphaddbw
mov
js
pop
lahf
imul
pop
stos
dec
mov
pop
jmp
sti
decl
out
sbb
sub
cmp
imul
pop
stos
dec
mov
pop
jmp
sti
decl
ljmp
shlb
adc
fdivl
cmp
add
pusha
pushf
dec
xchg
lock
popf
jo
out
and
in
loop
xchg
es
mov
std
in
push
pop
and
xchg
adc
pop
inc
push
rol
sbb
push
jnp
jo
incl
enter
movl
clc
xchg
push
jp
pop
cmp
sbbb
and
in
out
shr
pop
mov
mov
mov
cmpsb
xchg
es
leave
cmc
rcl
or
jns
mov
lcall
das
sbb
arpl
jno
push
popf
push
mov
dec
inc
fnstenv
cli
jge
mov
mov
movsl
mov
dec
jae
adc
mov
pushf
imul
inc
mov
stc
push
xchg
pop
stos
add
push
dec
sub
xor
js
add
aas
insb
hlt
rcll
sahf
scas
push
fsubl
leave
push
and
int3
aaa
xor
shrl
pop
out
xchg
add
inc
or
ljmp
lret
hlt
sbb
and
lahf
jo
testl
mov
enter
push
mov
add
pop
and
xchg
xchg
xchg
les
ret
in
mov
jp
decb
imul
xor
insl
xor
mov
or
lock
jecxz
sahf
js
jmp
aas
ds
insl
jnp
mov
dec
sub
movsl
out
and
out
arpl
xor
add
dec
mov
sub
fwait
popf
cmp
add
dec
jecxz
inc
vmaxss
xchg
cmp
push
loope
insl
idiv
pop
inc
mov
pop
nop
in
loopne
mov
lret
push
sbb
jp
gs
or
daa
mov
fisubl
mov
rcl
fadds
imul
loope
addr16
test
repz
mov
sbb
jl
cmpsb
mov
mov
sbb
roll
mov
inc
jl
repnz
pop
jp
adc
adc
loopne
adc
scas
xchg
inc
hlt
xchg
jo
mov
gs
out
bnd
loope
daa
clc
mov
pop
cltd
sarb
jnp
jno
int3
mov
cmc
add
push
cmpsl
jae
jg
fwait
call
mov
imul
clc
cmc
cmp
inc
push
inc
sub
mov
or
adcl
pop
popl
or
outsl
ficoml
push
lret
ljmp
xchg
jl
mov
mov
ss
pop
pop
int3
inc
jo
sub
aaa
aad
lahf
pmulhuw
insl
pop
adc
insl
fldl
in
lods
jmp
pop
imul
pop
mov
cmp
pop
mov
inc
push
sar
mov
imul
pop
and
fisubrl
nop
sub
xor
push
and
pop
mov
pop
mov
stos
push
add
sub
cmp
cmp
outsb
jmp
test
xlat
scas
ja
loope
aas
push
ret
aas
mov
sbb
dec
cwtl
in
or
stc
inc
push
stc
mov
push
loope
mov
dec
imul
sbb
test
mov
mov
btl
jge
xor
dec
loop
xor
enter
sub
or
pop
adc
push
adc
push
test
jmp
pop
xchg
jnp
mov
inc
in
ss
rorl
stos
jb
xchg
jb
iret
fstl
notb
inc
or
xchg
std
add
test
es
cmpsb
data16
into
das
jg
movb
dec
or
cmc
inc
and
push
xchg
adc
mov
cli
and
sub
cmp
lea
adc
mov
ljmp
mov
outsl
dec
addr16
dec
loopne
add
aad
fiaddl
jne
in
fisttps
cmp
xchg
or
jge
loopne
xlat
jp
xchg
test
popa
mov
or
cmc
xchg
aad
sbb
xor
lcall
pop
xor
pop
scas
inc
jp
test
and
xchg
outsl
lahf
mov
cli
add
push
xchg
pop
cmp
or
mov
shll
jmp
cmc
xchg
movsb
jl
fdivl
cli
or
or
jge
adc
add
scas
jae
jl
into
mov
jnp
lock
fwait
xor
sti
adc
push
dec
add
clc
mov
push
cltd
sbb
out
rcl
nop
insb
fiaddl
aad
push
push
pop
sbb
push
sub
push
fyl2x
ret
in
cs
sbbl
jl
mov
mov
bswap
lock
mov
xchg
fidivl
insl
shlb
mov
mov
xchg
aas
push
movsl
jecxz
mov
lods
dec
icebp
inc
and
adc
les
push
dec
cmp
lret
lret
xchg
movsb
jo
iret
mov
lods
push
pop
pop
rcrl
out
imul
repnz
push
js
scas
pop
mov
lret
outsb
xor
int
dec
sbb
ja
add
lods
cmp
pmulhuw
inc
in
sbb
pop
aaa
sbb
insb
call
inc
mov
popa
and
push
arpl
popa
or
hlt
add
dec
xchg
or
repnz
xor
dec
jae
cmp
xchg
das
xchg
dec
in
stos
jo
pop
insl
pop
not
pop
pop
dec
imul
cmp
fbstp
jne
push
aaa
sub
sbb
pop
js
ja
or
dec
bound
mov
in
cmp
sbb
adc
popl
mov
mov
mov
cltd
push
imul
jnp
aas
inc
pop
inc
mov
jae
movsb
fstl
aam
push
stos
fisubrl
loopne
pop
out
inc
ret
or
movsl
jns
push
pop
popf
movsl
cmp
or
sub
out
xlat
sbb
xor
push
jbe
lret
jns
ficomps
es
pusha
ret
in
loopne
inc
mov
dec
fistpl
cld
scas
dec
popa
popa
adc
push
mov
xchg
outsb
xchg
and
std
repz
mov
sbb
pop
jbe
dec
dec
scas
pusha
cmp
sahf
scas
aas
xor
mov
add
stos
xor
inc
add
sbb
cmp
imul
or
cmc
adc
fists
incb
cli
stos
mov
mov
inc
add
int3
push
sbb
push
js
test
mov
jg
ja
push
cmpl
clc
iret
jno
stos
adc
xchg
dec
sub
lds
xchg
arpl
pop
js
mov
jb
inc
popf
xchg
aaa
ret
sbb
fisubs
hlt
jno
sarl
ds
dec
test
jne
add
push
stc
jne
inc
jge
movsb
ret
cmp
mov
fsubrl
mov
pop
inc
xchg
iret
adc
ds
cwtl
aas
imul
inc
shlb
fbstp
pop
les
outsb
mov
lods
pop
add
rcl
jnp
jle
pop
ja
shr
xchg
cmp
fidivs
mov
cltd
jp,pt
xchg
jg
and
repz
inc
mov
fcoml
test
adc
leave
adc
lods
lods
dec
lods
jns
test
aas
loope
pop
add
mov
push
or
sub
mov
mov
sarl
push
je
into
pusha
stos
jno
imul
cld
hlt
or
xor
sub
fcoml
xor
mov
mov
push
pop
decl
push
push
in
push
sbb
xor
mov
xchg
stc
pop
popf
lods
jns
mov
dec
mov
push
xorb
inc
mov
mov
fwait
push
jle
adc
aaa
dec
dec
or
lahf
inc
fisttpll
mov
lahf
adc
pusha
mov
ja
cli
insl
ret
push
sub
inc
out
icebp
jle
aam
pushf
push
ja
and
jno
out
das
jno
push
xor
dec
lret
fadds
mov
sahf
std
loopne
mov
xchg
les
sti
sub
sub
fiadds
mov
pop
mov
sbb
sti
shll
shlb
in
cwtl
cs
loope
ja
or
gs
sbb
rolb
push
arpl
pusha
mov
sub
mov
xchg
inc
xchg
repz
cmpl
push
out
mov
add
arpl
push
xor
filds
and
dec
clc
and
fstps
cs
arpl
fisubrs
ret
lock
pop
lret
jge
ret
sbb
inc
and
jg
sbb
push
mov
jno
add
insb
xlat
out
push
adc
push
sbb
adc
test
xor
fcompl
inc
mov
add
ds
test
push
lahf
pop
leave
inc
dec
mov
cmc
sub
mov
out
cwtl
mov
rcl
loop
cmp
das
push
lahf
mov
add
pop
loop
jns
or
test
mov
into
mov
mov
testl
clc
jnp
pop
or
mov
push
rcrl
xchg
addb
shll
ss
ret
sbb
add
in
pop
inc
test
push
stos
sub
push
sbb
and
pop
popa
scas
divl
push
in
jo
mov
jo
dec
inc
pop
out
adcl
or
out
insb
mov
fucomip
test
pop
fwait
add
daa
jle
cmp
fwait
sbbb
into
lret
push
sahf
stc
dec
mov
or
int
pop
rorl
jg
xchg
sbb
inc
add
fwait
jl
cltd
push
adc
leave
shl
push
xchg
bound
sub
gs
mov
dec
lods
cmp
ljmp
shl
repz
loopne
dec
sub
jp
test
shrl
mov
test
jge
pop
push
inc
subb
push
call
pop
dec
pop
mov
shr
into
mov
mov
mov
xchg
in
cmp
cwtl
adc
cmp
pop
cli
stos
cs
dec
xchg
pop
enter
mov
xchg
xor
add
adc
inc
outsl
stc
hlt
call
adc
jle
cs
inc
sarb
rcr
imul
movsb
pop
jge
cmpsl
pop
sub
popa
ja
scas
dec
fcoms
or
shrl
rcll
popa
popa
xchg
mov
imul
jns
and
cmpsb
xchg
rclb
xlat
mull
fstpl
xchg
fnstcw
xchg
pop
adc
jle
out
test
push
add
dec
aam
sub
mov
int
cmp
pop
adc
out
dec
xor
or
mov
cltd
ds
mov
test
push
stc
js
lcall
adc
dec
data16
pop
push
xchg
dec
lret
and
add
push
shll
mov
dec
shll
jmp
push
and
xchg
mov
dec
push
cmp
cs
sub
leave
loopne
test
lds
sub
jno
mov
xorl
jns
cltd
and
xchg
jnp
mov
cmp
dec
call
sbb
pop
jp
mov
xlat
mov
bound
cmc
fbld
sub
outsl
jno
mov
scas
daa
ss
inc
pop
loopne
inc
addr16
push
and
pop
push
dec
inc
cs
pop
mov
ret
and
test
push
iret
dec
push
stos
inc
in
les
sub
pop
xlat
pushf
jnp
mov
lea
push
sarl
shrb
mov
outsb
negl
das
arpl
call
pop
test
xchg
fwait
das
jl
movsl
ds
inc
dec
lret
adc
cli
subl
shll
add
out
sbb
xor
mov
or
push
out
mov
aad
mov
arpl
or
mov
stos
sub
xchg
call
sbb
sbb
mov
add
test
xor
jge
add
out
call
and
push
test
pop
mov
jle
clc
xchg
lret
nop
mov
das
incb
push
data16
inc
pop
aam
dec
in
call
sub
lods
mov
rolb
mov
ss
icebp
add
cld
mov
mov
cli
loope
inc
cmp
pavgw
jmp
fnstsw
repnz
lcall
fiadds
push
aas
movsb
push
loopne
in
fcoml
and
inc
or
rcll
addr16
in
mov
data16
mov
ret
movsl
jae
mov
jb
inc
cmp
xchg
int
imul
pop
cmp
push
jbe
pushf
test
lock
xlat
mov
pop
xchg
xchg
mov
arpl
dec
and
xchg
rcrb
adc
test
pop
and
int3
add
into
imul
out
test
mov
push
data16
pop
jl
hlt
lods
jg
jns
add
inc
sbb
out
fidivl
sbb
daa
push
lods
jp
xchg
pop
cmp
and
add
nop
movsl
xor
test
xchg
fbstp
aad
add
pusha
adc
fnsave
mov
or
add
mov
mov
pushf
hlt
adc
fldenv
pop
inc
and
ss
mov
jne
jbe
ljmp
xchg
push
out
jbe
lcall
xorb
scas
bound
scas
gs
data16
and
cmc
fwait
inc
jo
pop
mov
movsl
adc
cmp
daa
int3
cmp
cmpsb
cltd
out
data16
int
flds
jnp
fcomps
bound
data16
out
inc
test
push
xor
pop
push
ljmp
sub
daa
pop
stc
cmp
cwtl
push
es
pop
xor
or
mov
pop
lret
sbb
scas
mov
jecxz
div
loop
inc
and
sahf
mov
loope
test
xchg
push
mov
negb
jp
rcrl
inc
repnz
lahf
test
sub
orb
jno
push
inc
or
iret
jne
enter
push
or
or
xor
push
into
shl
add
fadds
lods
fdivs
mov
dec
aas
jmp
xor
cwtl
jne
cltd
and
jg
sub
into
push
test
pop
insb
sbb
mov
ret
cmp
pushl
jb
mov
movb
enter
rolb
mov
test
cwtl
sbb
mov
fstps
scas
jecxz
icebp
pop
les
xchg
and
cs
pop
adc
jle
stc
sub
rol
movsb
es
je
sub
cli
mov
dec
stos
mov
shll
repz
fstpt
xor
push
adc
pop
add
mov
dec
dec
xor
push
sbb
and
mov
push
adc
in
sub
out
and
dec
js
dec
and
ret
out
sub
call
clc
daa
push
cmp
imul
movsl
stos
jne
mov
dec
pop
dec
dec
sahf
pusha
mov
mov
cmpsb
enter
dec
out
inc
jns
and
or
add
aad
gs
in
daa
push
add
repz
sub
and
cmp
shlb
jnp
jmp
and
push
int
and
inc
pop
sbb
lods
test
sub
jg
fsubrp
sbb
pushf
inc
push
xlat
pop
push
pop
or
cs
hlt
loop
add
fs
xor
mov
out
jmp
pop
test
mov
or
enter
mov
lahf
lea
mov
jb
testb
movsl
mov
loope
inc
sub
mov
push
inc
dec
cld
aam
jmp
jno
pop
pop
fwait
pop
mov
dec
dec
push
das
mov
inc
repz
mov
push
and
cs
shll
cmp
sbb
pop
mov
inc
inc
cltd
xor
mov
mov
xchg
lds
add
mov
imul
push
mov
cmpsl
rol
ljmp
sahf
or
inc
jg
mov
insb
gs
lods
paddusb
js
into
pop
xor
rcr
mov
adc
std
data16
mov
or
loopne
xlat
mov
subl
fwait
cmp
outsl
push
sub
mov
aam
andl
adc
ret
bound
cmp
xor
sub
mov
pushf
pop
in
cmpb
stos
jge
xor
mov
or
sbb
mov
mov
lret
mov
int3
out
mov
sbb
arpl
adc
push
aaa
push
shll
lods
pop
sub
push
add
mov
push
xchg
sbb
add
dec
packsswb
cmp
xchg
mov
scas
bound
aam
out
fcompl
pop
push
imul
or
mov
mov
xchg
leave
addr16
cld
test
pop
outsl
lahf
ja
jne
enter
std
cmp
rol
sarl
mov
xchg
ret
clc
jae
lahf
xchg
fldt
ds
shll
sbb
jmp
adc
mov
and
mov
mov
or
xchg
test
mov
repz
push
pcmpgtd
push
loopne
hlt
jo
mov
add
xchg
les
or
enter
nop
push
shrl
xlat
cmp
cmp
sub
jno
mov
and
stc
pop
adc
cmp
stos
cli
push
dec
add
inc
imul
in
mul
mov
shrb
rcr
xchg
aas
and
popf
jns
jecxz
inc
and
jbe
and
pop
out
aaa
inc
loop
ds
or
mov
or
and
sub
out
dec
add
dec
cwtl
dec
lahf
jno
jle
fcomip
lock
fsubl
mov
cmpsl
sbb
push
pop
mov
les
xchg
repz
and
movsl
in
pop
iret
xor
dec
inc
add
cmpsb
cmp
imul
sub
ror
push
pop
lcall
sub
push
int3
popa
movsl
or
inc
xchg
in
dec
repnz
push
jb
xchg
jge
pop
pop
dec
mov
xor
jno
imul
popa
jo
push
xor
dec
sbb
mov
cmp
loop
dec
sub
jae
fwait
scas
andb
add
outsl
mov
ja
mov
les
rcl
insb
stos
in
aas
adc
popf
jge
into
dec
push
lea
mov
adcl
test
push
push
shr
mov
sbb
into
test
jnp
ds
aad
imul
dec
sbb
icebp
mov
lcall
movsl
sub
stc
jns
mov
mov
sbb
dec
lea
movsb
insb
xor
bnd
mov
jmp
push
pop
jno
pusha
mov
nop
dec
insl
push
xor
mov
popa
cmpsb
insb
in
jmp
fidivrl
mov
out
sbb
and
push
adc
int
pusha
outsl
xlat
xchg
test
cli
push
xchg
sahf
pop
inc
push
fisubs
cmp
movsl
sbb
int
jmp
pushf
push
dec
popa
shll
cmp
fucomip
mov
inc
push
js
and
xchg
mov
ss
mov
inc
mov
in
pop
sbb
mov
or
fcoml
mov
xchg
sbb
add
lahf
mov
mov
xchg
jbe
insb
xor
fwait
test
lret
ret
sarl
pop
icebp
jge
aas
cmp
pop
rclb
jmp
add
leave
lods
xchg
xchg
testb
in
dec
mov
repnz
push
cmp
scas
stos
mov
imul
jae
mov
icebp
push
or
xor
sub
pop
out
pop
add
mov
mov
pop
dec
dec
in
push
inc
fldl
mov
cmpsb
iret
mov
repnz
cs
sbb
mov
imul
mov
pop
idivb
fs
pushf
xchg
popf
mov
or
push
in
push
inc
mov
xor
adc
push
or
outsb
lods
ss
bound
daa
ret
mov
movsl
nop
loopne
repnz
int3
dec
aas
js
addl
ret
shrb
outsl
adc
cmpsl
and
pop
dec
push
inc
orl
xchg
punpcklwd
mov
pusha
mov
xchg
push
call
call
mov
push
sbb
aas
inc
mov
xor
insl
xchg
sub
mov
mov
mov
out
movsb
ret
xchg
psubw
mov
inc
sbb
movsl
pop
shl
push
push
out
fwait
adc
sbbb
xchg
fnsave
fstpt
out
jo
lahf
xchg
lds
sbbl
sbb
add
mov
outsl
push
push
loope
cmp
pop
adc
out
fimull
imull
xchg
out
mov
inc
push
test
cmpsl
or
das
lea
cltd
dec
dec
mov
cmpsb
popa
jno
movsb
outsb
or
inc
std
xchg
lds
pop
jge
lock
es
int
add
loopne
sarl
and
cli
cmp
mov
jns
sbb
iret
cmp
imul
pop
stos
dec
mov
pop
jmp
sti
decl
out
sbb
sub
cmp
imul
pop
stos
dec
mov
pop
jmp
sti
decl
out
sbb
sub
cmp
imul
pop
stos
dec
mov
pop
out
push
decb
out
pop
fisubrs
iret
cmp
imul
cmc
stos
dec
int3
dec
inc
cmpsl
movsb
loopne
lock
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lcall
sbb
add
inc
mov
or
add
pop
add
push
adc
add
add
add
add
sub
add
imul
add
xor
add
jbe
inc
or
imul
lahf
add
add
add
add
and
pop
add
add
fldl
pop
add
dec
add
add
add
push
add
imul
add
add
add
add
add
add
add
add
cltd
add
add
add
lds
pop
add
add
push
add
add
xchg
add
sub
ret
add
add
add
add
xchg
add
add
cwtl
add
sub
inc
add
add
inc
add
add
add
add
add
add
add
xchg
cmp
pop
add
add
add
add
push
add
add
add
xchg
add
cmp
flds
add
adc
add
add
sbb
outsb
add
dec
add
jns
and
pop
add
adc
mov
add
pop
add
add
mov
add
add
add
push
or
pop
add
add
add
add
cmp
jns
or
sahf
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
imul
add
add
movb
add
add
add
inc
add
or
cmp
and
mov
add
mov
add
add
add
add
add
add
xchg
add
add
add
add
cmp
lds
add
in
add
jg
push
mov
add
or
mov
push
fldl
lds
mov
roll
fldl
sbb
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
adc
add
add
xor
pop
add
pop
add
imul
xchg
add
add
add
or
and
inc
add
add
add
mov
add
add
add
add
jecxz
sub
pop
add
add
pop
add
and
adc
mov
add
add
xor
add
add
sub
cmp
add
sub
add
add
add
add
addb
aam
xchg
add
add
stos
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
loopne
push
add
add
mov
add
lds
sub
jecxz
adc
testb
add
add
lea
sub
mov
add
add
add
add
add
add
add
add
add
jg
or
sbb
add
add
and
dec
add
mov
add
add
add
add
out
add
add
push
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
sahf
adc
out
sub
pop
ficompl
xor
loop
lcall
gs
push
mov
inc
jecxz
arpl
push
mov
sti
dec
stos
xor
cmpsl
sti
mov
mov
sbb
movsl
sbb
dec
rol
sbb
and
mov
mov
pop
adc
ja
int3
mov
jnp
cmp
aad
xchg
jns
popa
out
inc
cmp
ds
jnp
pushf
int
cmpsl
lea
es
je
cmp
dec
jl
or
cld
ja
sbb
adc
push
dec
and
mov
fildll
xchg
xchg
push
sahf
dec
fcoms
in
loopne
and
or
jmp
jo
mov
push
inc
aaa
icebp
dec
push
ds
ja
aas
cs
nop
xor
push
push
fisubl
jnp
push
imul
xchg
xchg
ljmp
mov
push
jecxz
mov
and
adc
add
push
jno
lret
cld
adc
stos
push
testb
sbb
shl
sbb
sbb
sbb
mov
test
jle
pop
mov
cmp
mov
daa
fcomps
xor
lret
mov
or
sarb
pushf
cmc
jp
jmp
loope
lods
test
rclb
pop
jg
out
jns
aam
mov
mov
shr
xchg
mov
outsl
jns
ss
adc
fdivr
out
lret
sub
ja
push
pop
mov
insb
pop
mov
insb
fs
jmp
outsb
out
decl
jbe
inc
into
or
jle
adc
loop
lea
pop
sbb
frstor
mov
ljmp
xchg
cmpb
es
dec
sahf
cmp
mov
loope
mov
push
ja
sahf
mov
sbb
jge
negl
nop
sbb
jg
sbb
bound
popf
call
pushf
sbb
not
sub
mov
sbb
push
mov
push
xchg
and
add
cli
xchg
ret
push
inc
rol
push
pushf
lods
adc
and
add
std
ret
es
ret
out
lret
ds
pop
lock
mov
fiaddl
jl
or
push
or
loope
in
imul
lods
or
and
in
jg
aam
scas
pop
sbb
lea
mov
pop
pushf
jmp
lea
jge
pusha
inc
or
dec
aaa
mov
les
and
dec
aas
xchg
ljmp
stc
das
sbb
xchg
insl
sbb
mov
es
cmpb
loopne
push
stos
lds
fisubs
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
